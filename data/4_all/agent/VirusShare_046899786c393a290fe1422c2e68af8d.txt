pop
loopne
add
add
popa
loopne
add
add
add
add
add
add
loopne
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
imul
jae
add
dec
loopne
add
add
add
add
add
add
push
push
inc
push
xor
cs
dec
dec
add
add
jae
popa
addr16
outsl
js
add
add
je
add
add
add
je
add
add
add
insl
add
add
xor
add
add
add
js
add
pusha
sldt
mov
add
inc
add
add
add
rorb
insl
add
add
add
add
add
ja
rorb
insl
add
add
add
add
push
add
add
push
add
add
add
nop
add
addb
add
add
add
test
add
mov
push
add
sub
add
into
add
add
add
add
or
add
add
orb
add
outsl
inc
add
jno
add
jnp
add
jp
add
jl
add
push
add
jns
add
jg
add
jge
add
jp
add
jg
add
test
add
dec
add
dec
add
xchg
dec
add
cltd
dec
add
fwait
dec
add
adcl
test
add
push
add
mov
adc
pop
add
xchg
push
add
cltd
push
add
lcall
or
pop
add
fwait
pop
add
popf
push
add
xchg
pop
add
test
add
mov
push
add
mov
pusha
add
xchg
data16
sahf
push
adc
popa
add
sahf
popa
add
mov
sub
push
add
insb
add
cltd
jb
push
cmpsb
add
cmpsl
pusha
add
mov
bound
sbb
add
push
or
insb
add
mov
add
mov
add
jg
adc
mov
jle
sbb
insl
add
movsb
jnp
and
add
mov
add
mov
add
mov
ja
xor
jno
dec
lea
inc
xchg
jne
inc
mov
jle
cmp
jle
or
test
or
test
adc
addl
adc
mov
daa
mov
mov
je
mov
dec
cmpsb
addb
stos
test
bound
mov
push
test
pushf
add
add
lds
add
xchg
add
lret
xchg
add
int3
xchg
add
int
add
iret
lcall
roll
and
lea
sub
lea
xor
addl
ret
test
xor
mov
cmp
mov
xor
lea
cmp
mov
les
add
lds
add
lret
cwtl
add
lret
cmp
xchg
add
into
cltd
add
rcrb
add
rcrl
sub
movsl
add
movsl
add
aad
add
lods
add
fisubrl
cmp
mov
push
lcall
lret
cmpsl
add
mov
inc
jecxz
add
lcall
stos
fwait
add
mov
add
mov
add
mov
add
mov
stos
add
mov
cmpsb
add
lods
test
add
scas
add
mov
mov
mov
mov
mov
mov
mov
mov
add
leave
mov
lcall
add
mov
add
mov
add
les
add
sarl
add
into
ret
iret
movb
aad
add
fld
add
add
les
mov
xlat
enter
leave
add
fcmove
add
loope
add
ret
int3
les
lret
add
lret
leave
add
enter
into
int3
add
aam
add
ror
add
fst
add
fst
add
aam
add
aad
add
fcom
add
add
add
fstp
add
aam
loop
fadds
int
fadds
aam
fildl
fiadds
loop
faddl
loope
in
loop
jmp
ljmp
out
jmp
add
loop
add
call
jmp
stc
out
in
add
lock
add
lock
add
repz
cmc
repz
clc
testl
incl
add
add
filds
fdiv
repnz
add
fdiv
sti
sti
repnz
fdiv
sti
stc
sti
sti
lock
add
fdiv
sti
hlt
stc
stc
stc
stc
repnz
add
add
fcomip
repnz
cli
cld
cld
cld
hlt
repnz
add
sti
std
sti
repnz
fisubrs
iret
cld
repnz
fbstp
add
fucomip
std
std
sti
sti
cld
mov
mov
in
fildl
add
std
std
sti
std
std
ret
jo
pusha
and
in
lods
fcomip
std
sti
sti
sti
std
std
mov
je
pusha
sbb
in
lods
mov
add
add
repz
sti
stc
stc
std
std
out
push
sbb
je
je
insl
inc
and
lock
fstp
mov
mov
add
add
stc
sti
std
sti
fwait
or
je
jo
inc
inc
and
fcmovu
fcomp
mov
test
add
out
stc
stc
sti
std
divl
mov
jae
je
insl
pusha
inc
aas
daa
adc
mov
ret
add
stc
stc
stc
icebp
mov
jge
mov
jo
inc
inc
aas
cmp
adc
mov
scas
add
fdivr
stc
in
or
dec
push
jns
jge
mov
je
jb
inc
inc
aas
cmp
and
adc
or
add
dec
push
push
push
push
jge
mov
inc
pusha
inc
cmp
and
sub
add
test
add
add
sti
rolb
dec
push
push
jns
jge
mov
mov
cmp
and
sub
adc
sarl
stc
xor
push
push
jns
test
cld
cld
lret
cmp
and
sub
and
add
add
push
push
push
jns
mov
sti
cld
leave
inc
inc
cmp
and
sub
push
cwtl
mov
mov
push
push
jns
jge
mov
cli
leave
inc
inc
cmp
and
sub
push
div
loope
dec
pop
push
jge
mov
sti
cli
leave
inc
inc
cmp
and
sub
add
sti
icebp
das
dec
push
push
dec
dec
bound
std
sti
sti
cli
leave
es
es
and
and
or
loop
std
aaa
cmp
leave
leave
leave
out
std
sti
sti
cli
jmp
mov
adc
and
add
sti
std
push
and
std
std
std
std
std
std
std
std
sti
hlt
stc
cli
hlt
hlt
lock
movsb
or
mov
add
mul
rcl
out
std
std
std
std
std
std
std
std
sti
stc
hlt
repnz
in
movsb
movsb
scas
fcom
mov
add
sti
ljmp
std
std
std
std
std
sti
stc
stc
repnz
in
in
fnstenv
mov
add
std
popw
aas
mov
std
std
std
std
sti
stc
stc
clc
hlt
hlt
cmc
cmc
movsb
push
push
push
fcmovbe
mov
add
std
push
cmp
into
into
out
std
std
sti
sti
out
mov
adc
xor
movsl
add
in
stc
divl
dec
pop
push
push
jbe
subl
mov
daa
adc
adc
add
imul
sub
jp
test
std
std
cld
int3
inc
inc
inc
cmp
and
sub
mov
mov
add
sti
std
rcrb
push
pop
jp
test
std
std
cld
int3
popa
inc
cmp
sub
and
adc
add
add
std
std
fwait
cs
push
jp
test
std
std
cld
int3
popa
push
inc
cmp
and
sub
arpl
stos
fcomi
std
push
dec
jp
jp
test
std
std
std
shll
cmp
sub
and
es
mov
in
sti
out
dec
pop
push
jp
test
int
xchg
xchg
cmp
and
sub
sbb
add
sti
std
scas
push
dec
jp
jp
test
mov
sub
and
cmp
lcall
add
add
cs
pop
jp
test
xchg
xchg
cmp
and
sub
add
add
sti
stc
divl
jle
mov
xchg
cmp
and
add
fdivs
out
stc
stc
std
out
imul
nop
nop
xchg
xchg
xchg
xchg
nop
mov
addr16
mov
ret
add
std
std
loopne
sbb
mov
xchg
sbb
push
ret
mov
add
add
idiv
std
aaa
adc
bound
andl
jecxz
fcmovb
mov
sahf
add
vpaddw
idiv
std
sti
mov
push
push
xor
push
ss
lock
fcmovnu
mov
add
loop
std
std
sti
std
std
std
out
repz
std
stc
rcr
div
in
in
test
add
in
std
std
sti
std
std
std
std
std
std
std
std
std
cld
lock
in
in
in
add
out
std
std
std
std
std
std
std
std
std
std
std
hlt
out
in
shrl
add
add
in
std
std
std
hlt
hlt
std
std
std
fldt
add
add
add
add
lds
add
add
incl
add
incl
add
jg
incl
add
cld
aas
incl
add
clc
pop
incl
add
push
ud0
add
jmp
pop
incl
add
incl
add
incl
add
incl
add
cld
add
aas
incl
add
clc
add
pop
incl
add
loopne
add
incl
add
addb
add
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
rolb
add
add
push
add
ud0
add
cld
add
aas
incl
add
incb
add
add
incl
add
push
out
incl
add
add
add
add
js
add
add
add
add
add
nop
sldt
mov
add
add
add
xor
add
add
add
add
add
add
outsl
insl
add
add
add
add
int3
sldt
mov
rorb
insl
add
add
add
add
in
add
hlt
incl
add
add
and
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pusha
add
add
add
add
add
add
xor
xor
bound
xor
add
cmp
adc
add
inc
add
insl
add
add
je
jae
add
push
add
cmp
das
add
add
ja
ja
add
jno
add
outsl
add
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
xor
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jno
repz
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
cmp
add
xor
xor
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
insb
add
jns
add
add
add
nop
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
push
add
add
add
add
js
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jno
repz
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
xor
sub
add
cmp
sub
xor
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
and
add
dec
cmp
cmp
data16
jno
cmpl
push
sbb
pop
mov
int
mov
push
push
jb
outsl
addr16
popa
insl
sbb
aas
je
bound
cmp
push
inc
dec
push
clc
insl
outsl
push
fs
inc
or
xor
pop
push
add
ss
push
jecxz
movups
xchg
push
mov
xchg
push
lds
adc
dec
or
inc
test
mov
adc
sbb
jnp
jo
adc
mov
std
push
or
arpl
pusha
or
xchg
or
add
dec
mov
loopne
and
add
loope
push
sbb
mov
push
or
dec
cmp
xor
or
add
or
pop
or
inc
push
push
les
mov
or
sbb
fs
mov
or
adc
int
pop
pop
subl
and
mov
xor
pusha
pop
jb,pn
popa
je
or
xor
in
daa
in
mov
jns
xchg
pop
cs
pushf
or
sbb
push
enter
ss
rolb
insb
outsl
arpl
fmul
or
push
jae
arpl
adc
js
loope
add
rclb
xor
add
cmp
repz
push
adc
sbb
xlat
rorl
sahf
or
or
sub
sbb
and
clc
add
call
inc
push
inc
lea
xor
or
call
mov
inc
fmuls
adc
dec
add
aam
adc
dec
add
add
int3
movl
inc
adc
rorb
adc
or
adc
loope
push
or
or
inc
pop
popa
cmovle
push
sub
inc
or
adcb
add
pop
add
mov
pop
pop
pop
ret
push
nop
add
sbb
mov
or
jmp
data16
add
jne
loope
pop
lock
push
mov
inc
inc
out
test
je
cmpb
les
sbb
mov
push
adc
or
nop
mov
enter
aad
adc
jne
sub
push
push
mov
loopne
xor
inc
xchg
test
sub
pop
bound
push
push
push
mov
int3
dec
and
dec
fadds
jb
or
pop
jle
or
xchg
xor
push
inc
data16
lcall
mov
or
sub
adc
adc
out
add
rol
adc
aas
pop
xor
orb
decl
nop
inc
sbb
and
mov
fdiv
adc
pop
and
dec
inc
xchg
movsb
xor
or
pop
add
xor
or
xor
test
jbe
fmuls
push
cwtl
popa
cmp
and
je
adc
shrl
add
shr
rep
cli
lret
ja
push
movsb
sbb
inc
jge
dec
cmp
adc
and
add
sub
mov
add
mov
roll
push
mov
mov
jne
pop
xor
pop
and
ret
lea
nop
in
add
push
push
sbb
add
jb
mov
xchg
mov
inc
je
pop
outsl
sbb
and
push
ret
movsl
sub
inc
mov
out
sbb
xor
test
push
and
fdivrs
mov
movsb
push
mov
decb
nop
inc
cld
inc
insb
adc
sbb
call
cmp
stc
push
and
mov
xchg
and
insl
add
dec
mov
adc
mov
and
and
sub
sub
call
adc
lods
mov
mov
pop
pop
lcall
fxch
ds
pop
xchg
adc
lock
xor
cmp
push
bound
stos
adc
adcl
stos
jne
cld
inc
lea
xchg
or
ja
cltd
mov
or
test
inc
clc
fsubs
stos
leave
ja
gs
stos
push
dec
filds
push
in
adc
mov
sarl
or
shrb
pop
dec
jns
nop
sbb
jp
push
push
mov
inc
mov
inc
pop
addb
bound
pusha
lret
inc
add
pop
jne
sub
dec
les
sub
sbb
pop
sub
mov
mov
sti
and
and
inc
ss
mov
push
xchg
adc
jbe
std
notl
push
call
test
xchg
test
push
sbb
int3
sbb
enter
lods
pusha
ret
out
push
mov
and
or
xchg
cpuid
push
push
mov
push
sub
sub
sbb
adcb
call
je
testl
jne
mov
pop
or
push
push
mov
nop
mov
cmp
push
sub
mov
sbb
xchg
mov
sub
mov
add
mov
mov
lock
push
inc
icebp
rcl
and
pop
push
xchg
insl
push
les
or
and
xchg
and
adc
mov
adc
push
fmuls
sbb
dec
adc
adc
sbb
sbb
movsb
jae
xor
call
and
lods
ret
mov
xchg
xchg
push
pusha
mov
xor
xchg
sbb
mov
mov
adc
ret
mov
and
leave
clc
dec
jbe
test
pop
call
xor
mov
mov
call
jmp
sbb
jae
and
pop
movsb
xor
cltd
or
inc
sbb
push
aad
xor
popa
leave
and
cwtl
mov
orl
call
mov
cmp
jne
add
mov
adc
push
inc
push
call
movsb
push
test
mov
xor
jl
xor
lea
add
sbb
xor
push
sbb
and
dec
pop
pushf
sub
inc
pop
pop
push
push
inc
add
push
push
call
lock
sub
sbb
out
cmp
shll
imul
lods
pusha
push
clc
add
jne
push
mov
cmp
push
pop
mov
call
mov
bswap
push
stos
sub
scas
fs
je
scas
sti
sarb
adc
mov
cmovno
and
inc
cld
push
int
mov
add
push
ret
sub
or
add
or
push
pop
push
mov
enter
sub
or
inc
out
ret
add
dec
adc
fidivl
orb
xchg
jbe
inc
fisttps
push
mov
cmp
and
push
adc
push
movsb
jnp
mov
mov
fs
mov
imul
mov
push
cmp
mov
call
jae
pusha
sbb
lds
push
adc
sub
inc
adc
mov
subb
adc
and
mov
pop
mov
push
jnp
xchg
dec
int
sahf
dec
rcll
push
test
imul
dec
imul
pop
mov
mov
pop
mov
cmp
push
cmp
mov
jae
ret
or
inc
int3
sub
test
mov
mov
mov
dec
cmp
or
add
jns
sub
cmpsb
jecxz
adc
xor
aam
les
xchg
xor
sbb
pop
outsl
push
dec
push
adc
sub
inc
adc
mov
cmp
mov
inc
or
fmuls
shlb
icebp
xor
xor
sub
in
and
test
mov
mov
enter
pop
bound
adc
xchg
mov
pop
sub
imul
insb
sbb
mov
mov
cld
dec
mov
mov
xchg
das
mov
sbb
add
and
jecxz
mov
clc
test
and
maxps
push
dec
cmc
push
mov
and
dec
gs
fstpl
ds
into
and
out
data16
xchg
add
lds
jmp
stos
cmp
cmp
js
nop
sub
or
movsl
xor
push
mov
xchg
adc
incb
xchg
push
or
jnp
xor
pop
push
mov
adc
inc
cld
xor
insl
aam
pop
test
shl
mov
ja
cmp
inc
in
adc
jmp
push
arpl
xchg
lock
hlt
inc
lahf
lea
adc
push
push
adc
adc
push
ret
pusha
jge
hlt
xchg
add
cmp
sbb
pop
and
scas
sahf
xchg
xor
push
nop
xorb
pop
fwait
pop
jmp
adc
mov
and
inc
push
enter
cmpsl
and
pop
xchg
stc
ffree
adc
shrl
cmp
lods
cwtl
scas
xchg
pushf
add
call
adc
sbb
adc
out
push
and
jl
adc
call
sub
stos
sub
mov
xor
inc
add
adc
movb
xlat
cmp
sahf
and
inc
in
inc
mov
dec
and
stc
lods
cmp
mov
push
cli
push
ret
inc
mov
push
or
sbb
sub
pushf
dec
mov
mov
lea
dec
fsubr
cld
cwtl
jg
pushf
js
movsb
xchg
inc
rclb
push
and
shll
loop
or
iret
xor
add
mov
push
rcr
sub
mov
and
addl
in
sub
loopne
xchg
inc
pop
xchg
or
jo
cmpsb
and
lcall
sub
or
incb
adc
dec
and
pop
test
mov
repz
aam
pop
movsl
clc
dec
sbbb
icebp
cmp
xchg
lea
daa
pop
outsl
lret
int3
cmpsb
fcoml
pop
push
inc
pop
roll
xor
add
lods
sub
rolb
int3
dec
xchg
dec
xor
and
dec
xor
mov
xchg
dec
and
in
jns
fadds
mov
add
jp
or
fwait
imul
loop
cmp
mov
push
lea
push
test
jnp
fcoml
orb
mov
and
in
jbe
jle
dec
or
xor
insb
mov
xor
xor
enter
int3
mov
inc
and
or
or
les
push
push
and
mov
pop
add
scas
lret
sbb
shlb
mov
sub
and
sub
pop
cmpsl
rcrb
mov
jbe
call
mov
push
leave
outsl
and
pushf
and
movsb
cmp
xchg
mov
test
aam
sbb
punpckhwd
mov
sbb
arpl
mov
or
xor
je
nop
add
cmp
pop
nop
movsb
ret
rep
nop
arpl
push
inc
lcall
xchg
cmc
jp
rcpps
es
and
push
shlb
call
lods
or
and
mov
push
das
xchg
add
cmpsb
or
pop
inc
sbb
fsts
gs
pop
call
mov
inc
fwait
mov
hlt
push
adcl
xchg
mov
mov
repz
jne,pt
xchg
jae
inc
leave
mov
ret
getsec
push
xor
push
jp
sub
add
cmp
inc
mov
push
call
ss
ret
jbe
mulb
lds
mov
mov
pushw
push
add
in
xor
aaa
in
stc
xor
cmp
decb
xchg
cmpb
cmp
and
or
mov
lock
add
push
dec
jecxz
or
adc
sub
fsubr
loop
mov
xor
lods
pop
fsubl
inc
in
push
push
cmc
lods
movaps
pop
jns
mov
push
and
pop
mov
rorb
jle
adc
in
sbb
add
les
sahf
negb
mov
or
repz
add
shlb
aam
push
icebp
addr16
jnp
jecxz
fistpll
jne
inc
mov
adc
jg
fnsave
pop
and
es
and
pop
push
lcall
push
sub
dec
sub
pop
push
mov
adc
push
xchg
push
popa
add
push
adc
out
mov
xchg
mov
in
xchg
movsb
stos
or
and
xchg
je
sbb
mov
pop
xor
mov
rcl
jmp
push
rclb
dec
adc
adc
lcall
or
adcl
add
inc
xlat
sbb
or
fmull
add
loope
and
std
inc
shrb
popa
cmp
imulb
arpl
push
push
lds
test
jg
push
hlt
mov
call
je
push
sbb
loopne
add
lods
or
bound
adc
or
lret
xlat
and
call
sbb
mov
es
inc
xchg
js
sahf
fsts
xchg
mov
sub
jne
addr16
out
mov
xchg
ror
inc
xchg
int
mov
jb
je
loop
or
push
push
sbb
xlat
mov
movsl
and
mov
mov
hlt
push
push
push
mov
mul
int
cmp
int
push
mov
inc
insl
addr16
icebp
xor
rol
adc
pop
adc
adc
sub
mov
push
and
test
lods
cmp
add
inc
arpl
xchg
jb
adc
adc
adc
dec
add
fs
sub
scas
jp
or
stc
jns
fistpll
cwtl
je
sub
sbb
add
lcall
add
fiadds
lods
jae
test
jle
je
lea
mov
inc
orl
jl
or
add
mov
pusha
jge
shll
mov
or
mov
inc
out
mov
clc
jo
mov
gs
adc
sbb
sbb
and
pushf
mov
mov
call
mov
add
mov
sbb
in
or
cli
jecxz
fs
sbb
call
je
dec
into
dec
dec
lock
sub
or
and
movl
fimull
add
fnsave
repz
sbb
js
jns
push
mov
lods
adc
pop
test
add
sbb
sbb
clc
push
dec
cltd
pop
mov
jne
cmpsb
pop
push
adc
movl
je
jle
outsl
pop
leave
insl
or
or
outsl
inc
call
xor
add
mov
imul
dec
add
bound
mov
push
nop
jmp
mov
jnp
das
xor
ss
and
push
dec
pushf
insl
adc
xchg
sbb
sub
sbb
xor
mov
add
incb
or
add
and
mov
inc
js
enter
fiaddl
dec
push
outsb
sbb
or
shlb
cmp
inc
adc
xchg
xor
test
cmp
inc
adc
adc
jg
pop
adc
stos
cmp
rcrb
inc
push
bound
lret
push
mov
cmp
int3
mov
sub
adc
or
xchg
bound
add
mov
push
and
dec
test
insb
lock
adc
loope
call
in
sub
dec
subb
push
mov
test
je
xor
inc
mov
mov
in
aas
pop
mov
loope
xchg
adc
jns
bound
mov
jl
pop
pop
inc
or
lock
cmpb
je
add
repz
jne
push
and
std
push
cmp
adc
dec
cmp
mov
mov
sbb
xchg
inc
jb
enter
cmp
or
loopne
cmp
jno
cltd
adc
push
pop
jns
test
lret
lock
inc
jns
mov
sahf
pop
ret
and
aas
mov
push
sub
cmp
gs
lret
roll
mov
mov
pop
sub
ss
scas
dec
rclb
mov
nop
sti
enter
mov
mov
mov
sahf
pusha
fwait
popa
cmp
push
dec
loopne
loopne
mov
xchg
push
push
stc
mov
daa
fs
cmp
rclb
test
inc
xor
sub
adc
adc
push
inc
pop
jge
mov
scas
iret
and
cld
and
push
lcall
xchg
cli
push
dec
stos
in
push
add
jl
pop
xchg
ret
dec
xor
dec
mov
stos
nop
adc
test
jp
enter
adc
das
mov
mov
dec
xchg
nop
push
mov
inc
or
jb
test
jne
push
test
or
push
xor
xor
cmp
out
ja
xchg
fisubl
shr
adc
enter
push
pop
test
cld
or
xchg
adc
dec
or
cltd
or
pushf
adc
push
and
add
jle
xchg
jno
cmp
and
and
sub
xlat
popf
inc
lods
daa
xor
addb
xor
das
add
pushf
add
imul
or
mov
adc
lods
dec
or
sbb
and
and
and
push
xchg
push
xchg
mov
cmp
sbb
push
push
add
push
pop
pushf
lods
clc
pop
and
repz
ror
loopne
push
js
pusha
mov
mov
pushf
and
ret
movsl
lods
push
pusha
int
test
push
lret
loopne
mov
sub
cmp
je
je
in
xlat
and
push
cmpsl
pusha
mov
mov
jmp
enter
mov
add
sub
aaa
jo
push
inc
push
push
fldl
add
mov
xchg
add
mov
fistl
popf
test
mulb
lcall
sbb
lea
mov
lret
bound
jl
pusha
movsb
jae
lea
xchg
test
pop
rcrl
insl
push
aam
lea
sahf
subb
enter
sub
xor
push
pusha
imul
sub
xor
add
lock
add
sub
inc
lds
int3
hlt
inc
adc
mov
dec
push
imul
xchg
cmp
push
stos
mov
in
ficoms
inc
adc
dec
pop
inc
xorb
pop
punpckhdq
xchg
or
call
inc
addl
cltd
lods
in
and
clc
dec
std
adc
jbe
sbb
inc
sub
mov
add
mov
xchg
daa
pop
inc
sarl
jne
push
movntps
push
add
dec
push
add
cmp
jne
add
out
out
sub
fcompl
movsb
fdivr
stos
dec
mov
mov
je
mov
in
lret
lods
pop
add
add
inc
fsubrl
mov
sub
and
fcoms
in
pop
sub
shrl
cmp
stos
pop
andl
push
lahf
fmuls
das
xor
sub
or
adc
lcall
push
inc
es
test
adc
mov
mov
in
jno
add
int
outsl
dec
pop
push
cmpsb
int
imul
add
loopne
fnstcw
push
mov
fs
out
ja
out
xchg
xor
dec
push
int3
xchg
jbe
adcl
flds
or
leave
adc
xchg
sbb
in
adc
adc
in
cwtl
push
imulb
sub
sbb
mov
ret
hlt
push
push
push
arpl
xchg
jmp
xchg
push
call
es
push
push
or
jp
sbb
sub
sbb
xor
inc
sbb
push
xor
xchg
xchg
pop
push
cltd
sbb
test
ss
pcmpeqw
jo
pop
or
push
push
imul
lock
mov
cli
std
ret
push
mov
inc
imul
sbb
add
add
js
addl
jne
ficoms
push
out
push
push
loopne
jl
aas
in
sub
in
cmpsl
mov
mov
popa
ja
push
dec
xor
sti
push
push
sub
loope
stos
popf
mov
imul
add
dec
dec
add
fisttps
lahf
xor
xor
add
push
call
mov
es
xor
mov
loop
add
sbb
cmpl
fstl
mov
fcoms
mov
aad
adc
or
pop
pop
sbb
or
pop
mov
test
push
aas
push
jmp
push
push
dec
subb
or
push
mov
pop
push
imul
enter
dec
pop
add
add
int3
xchg
in
sub
dec
inc
idivb
or
call
adc
or
mov
mov
sbb
sub
dec
in
push
cltd
or
mov
clc
mov
push
dec
shr
adc
mov
push
out
rorl
insl
xorb
jno
xchg
rorl
ret
out
adc
test
and
add
add
das
adc
cli
enter
xchg
xchg
mov
lds
jmp
inc
xor
cmp
leave
hlt
aam
es
jmp
pop
jne
xchg
int
lock
pop
cmp
or
and
or
fisubrl
incb
add
scas
not
dec
mov
arpl
adc
or
or
adc
cmpsb
xor
and
test
add
adcl
repz
dec
std
mov
shrl
xchg
sbb
pop
inc
sbb
ret
mov
movl
je
lea
mov
pop
or
add
dec
mov
jmp
or
arpl
pop
fldcw
add
push
or
mov
clc
dec
cmp
cmpb
jle
dec
push
cmp
jge
push
sub
js
lods
je
popf
les
xchg
das
mov
sbb
xchg
pushf
cmpsb
out
loop
add
lods
dec
add
insb
push
sub
cli
in
mov
push
sub
adcl
and
and
mov
dec
or
decb
sbb
fbld
and
adc
shr
daa
cwtl
xchg
mov
dec
push
add
test
pushf
push
js
jne
pop
xor
jmp
pop
ucomiss
test
les
push
push
push
test
sbb
out
push
movsl
je
sub
sbb
adc
sbbb
nop
xor
call
jmp
mov
movsl
shl
push
hlt
mov
cmp
or
add
mov
xchg
push
dec
xchg
xor
xor
cmp
lret
dec
inc
es
add
push
test
sub
stc
dec
aam
in
leave
push
sub
sbb
repz
dec
pushf
inc
xchg
add
test
sub
adc
repz
mov
jmp
or
push
and
out
sub
push
inc
push
jg
mov
fisubl
mov
dec
push
mov
inc
mov
subb
dec
pop
dec
mov
xchg
stos
xchg
out
mov
pop
enter
cli
mov
adc
andl
mov
mov
dec
jge
scas
or
xchg
push
adc
imul
pushf
adc
mov
call
std
cmp
pop
in
cmp
je
adc
mov
and
mov
adc
cmpb
adc
nop
fmuls
push
push
into
push
dec
adc
sbb
jmp
insb
or
dec
es
jnp
cltd
ret
adc
lahf
flds
or
add
orb
mov
sbb
fidivrs
or
and
call
fistpl
ret
sub
inc
add
xor
push
xchg
xchg
mov
int3
adc
push
xor
mov
out
movsl
sub
nop
inc
dec
add
stc
mov
subl
cmp
push
push
out
xor
mov
addr16
lock
add
sub
add
lret
or
add
cli
sbb
pop
adc
dec
lahf
mov
fs
scas
cmp
cmp
jle
hlt
cmp
lds
or
mov
and
inc
adc
jmp
mov
sbb
or
and
adc
adc
cmp
and
dec
add
loopne
leave
mov
lret
jne
in
icebp
cmp
lahf
pop
jb
mov
je,pn
ljmp
pushf
adc
dec
inc
inc
sbb
mov
adc
cmp
jne
mov
lock
add
cltd
loopne
sub
nop
inc
je
dec
and
and
mov
cld
jnp
push
mov
dec
in
add
pop
cmp
mov
ror
pop
dec
lret
sub
ret
cmp
inc
leave
out
lods
or
add
xchg
pop
mov
pop
daa
jmp
mov
fnstenv
adc
add
pushf
or
add
push
cltd
push
fsubs
inc
xor
adc
push
push
pushf
cld
push
xchg
sub
sub
adc
cs
push
mov
cmp
out
cmp
cmpsb
cmp
add
in
ljmp
sbb
orl
call
pop
rcll
adc
or
loop
inc
mov
sub
sbb
jmp
mov
nop
and
push
insb
mov
data16
and
cmpsl
repz
int
scas
ret
xor
in
xor
enter
mov
les
repnz
inc
xchg
stc
stos
fs
or
cmpb
je
xor
test
aas
test
adc
or
popa
mov
jne
pop
lods
push
push
lcall
and
inc
jg
xor
sbb
call
bound
test
push
data16
loop
stos
and
movsl
sub
mov
inc
push
in
outsl
adc
sbb
movl
adc
insb
and
adc
adc
cmp
cmc
or
out
arpl
pusha
mov
jge
mov
mov
lret
or
enter
cmp
jae
xchg
fcomp
out
jne
jo
fcomip
adc
push
out
clc
sbb
and
sub
ret
cmp
inc
ja
test
stc
push
add
call
out
push
cmp
or
imul
nop
push
or
inc
loope
xchg
dec
xchg
mov
dec
add
xor
call
bound
cmpb
jae
and
int
outsl
push
sbb
mov
mov
dec
mov
push
out
dec
dec
enter
scas
mov
adc
sub
sub
jbe
mov
jne
add
inc
out
dec
lret
imull
sbb
movsl
adc
pop
rcll
add
jge
cmp
call
inc
sub
push
inc
sbb
push
inc
or
xchg
gs
lds
dec
insb
xor
in
out
aaa
scas
add
jl
xor
mov
insb
inc
push
movl
cmp
push
lods
xor
and
fisttpll
or
movsb
dec
lock
cmp
cld
xchg
stos
push
mov
out
inc
dec
or
aas
dec
arpl
jmp
rclb
dec
in
push
and
xchg
pop
arpl
loopne
jbe
jo
or
call
cmp
mov
popf
frstor
or
xchg
fcoml
loope
jo
adc
dec
es
in
inc
push
or
or
out
call
inc
push
pop
and
xchg
fidivrl
xchg
test
insb
sub
sbb
inc
fmul
je
mov
test
insb
mov
das
sbb
nop
je
sub
push
mov
push
xchg
out
arpl
rclb
fldlg2
fldl
loope
fimull
loope
popa
pop
jl
faddp
sbb
adc
jmp
push
pusha
mov
push
mov
insb
adc
call
dec
adc
cld
test
std
sbb
fsts
test
leave
push
ret
push
add
push
inc
loopne
inc
shll
sbb
xor
sub
xor
aaa
mov
adc
xor
mov
sub
rcrb
pusha
xchg
jo
add
inc
push
call
push
or
cmp
call
sbb
adc
adc
mov
call
pop
call
test
xor
mov
pop
sbb
or
sub
cmp
mov
loopne
mov
xlat
xchg
and
mov
push
cmpsl
lret
adc
push
ds
scas
sub
adc
adc
xchg
adc
outsb
inc
push
lea
in
xor
xorl
mov
mov
jle
jb
or
add
cmp
pcmpeqw
mov
mov
and
loopne
jmp
mov
mov
mov
add
mov
mov
adc
or
movsl
xlat
mov
enter
push
nop
or
pop
fmuls
roll
loop
sub
nop
and
adc
loopne
and
aad
int
xchg
ret
and
loop
dec
pop
or
jne
lret
inc
mov
inc
xchg
lods
adc
mov
ss
xor
mov
push
into
bound
rcll
das
punpckhwd
movsb
stc
dec
scas
sbbl
int3
test
clc
in
cmp
mov
push
adc
sbb
add
pop
mov
cwtl
sbb
xlat
or
add
inc
fsubr
inc
js
sbbb
mov
aam
aas
mov
pop
hlt
fldt
or
xchg
pop
cmp
push
stos
rclb
pop
movsl
call
inc
pushl
xchg
sub
push
push
fxch
in
jmp
and
cmpsb
dec
sahf
jb
xor
cmp
add
mov
or
lds
dec
test
push
mov
fsubl
or
dec
mov
pushf
aaa
repz
mov
cmpsb
test
mov
rclb
clc
lods
sarl
iret
sbb
add
mov
daa
add
outsl
pop
addb
int3
aaa
ret
cli
mov
sar
enter
call
dec
jb
inc
in
push
sbb
jae
insl
inc
sub
add
push
push
ficompl
xor
push
dec
loope
push
xor
xchg
mov
mov
lea
xchg
bnd
andb
cwtl
pop
js
mov
cmp
enter
je
pop
mov
in
xchg
and
or
sub
andl
mov
sub
stos
inc
jae
and
adcl
mov
or
les
mov
pusha
stos
movb
adc
pop
sbb
add
or
mov
xchg
mov
adc
dec
or
test
xchg
lea
mov
pop
and
mov
pop
sbb
mov
sub
mov
mov
xchg
sub
stos
movsb
pop
mov
pop
push
xchg
xchg
dec
push
add
push
aam
inc
cmp
fldcw
sub
dec
loop
sub
stc
les
adc
jl
or
cmc
pop
lahf
stos
ljmp
mov
mov
jb
imul
outsb
adc
out
adc
incb
je
and
jnp
push
push
mov
push
stos
daa
mov
cmp
popf
inc
movsb
or
loopne
cwtl
lods
movsl
mov
mov
push
das
jno
jne
jg
mov
push
imul
dec
adc
xor
cmp
test
push
push
dec
clc
fsts
imul
pop
out
xor
dec
mov
test
xchg
adc
adc
push
xor
adc
pop
lret
dec
push
call
shlb
cmp
mov
mov
adc
lods
test
mov
pop
test
test
adc
loop
push
cld
rolb
pop
mov
adc
push
call
adc
cmp
cmp
loop
xor
mov
pop
cmp
cmp
pusha
add
xor
mov
leave
adc
adc
sbb
adc
or
int
and
cmp
test
loop
shlb
cmp
push
daa
push
mov
and
mull
movsl
test
enter
cs
stos
add
mov
mov
aaa
push
inc
fs
push
dec
inc
hlt
mov
dec
sarb
push
push
sbb
xor
sub
mov
pop
mov
aam
int
lahf
dec
and
cmpsl
add
sub
sub
push
daa
push
lret
cwtl
ficoml
call
or
push
test
or
sbb
call
adc
mov
push
jecxz
and
lds
pop
jmp
dec
xchg
pop
adc
aam
adc
lret
nop
sub
xor
sbb
sub
push
xchg
xchg
pop
dec
dec
sub
mov
sbb
imul
and
mov
xchg
pop
sahf
mov
arpl
or
aam
xchg
jne
push
pop
ret
inc
push
sub
xchg
inc
jb
mov
ljmp
movsl
inc
jle
sbb
fldenv
add
inc
mov
call
in
std
pop
aaa
jmp
xorl
out
out
jl
fstpt
sarl
jne
cmp
addl
jmp
mov
test
sub
xchg
dec
test
sarb
mov
sub
xchg
lea
sub
mov
sbb
add
pop
cmpb
pop
movb
xor
jbe
cmp
icebp
cmp
pop
pop
cmp
inc
add
dec
jne
jmp
imul
dec
data16
mov
sar
fmulp
imul
cmp
dec
cli
jbe
and
fmulp
leave
movl
inc
jge
sbb
mov
addr16
loopne
lea
pop
das
jns
pushw
mov
scas
sbb
xchg
mov
mov
cmp
push
xchg
pop
lret
clc
jb
mov
mov
push
xor
sarl
call
pop
pop
pop
cld
adc
and
xor
xor
rcl
xchg
mov
xchg
sbb
jae
mov
add
jae
pop
push
leave
lock
inc
std
xor
dec
add
sarb
lods
adc
inc
inc
leave
je
lret
mov
sbbb
xor
jno
cmp
loopne
pop
sub
addb
inc
loop
inc
and
sub
adc
adc
insb
sub
dec
aaa
jp
xor
cs
outsl
std
jno
rorb
data16
fisubs
inc
mov
adc
in
push
sub
les
popf
out
cld
sub
push
adc
test
test
dec
testb
push
mov
or
sbb
push
xchg
sbb
jns
or
inc
dec
xchg
mov
sub
movsb
inc
mov
push
adc
add
aam
orb
inc
fisttpl
mov
adc
adc
cld
or
mov
dec
fcoml
adc
add
inc
xor
add
add
inc
add
add
or
or
or
or
adc
sub
lods
dec
frndint
pushf
push
loopne
and
cwtl
push
xchg
lea
cli
fistpll
fcoml
push
pop
xchg
fwait
shll
pusha
cli
or
add
inc
cwtl
push
add
les
add
mov
lds
pop
dec
imul
cld
fdivs
pop
mov
sub
dec
movsl
test
and
mov
clc
les
mov
in
sub
pushf
or
adc
cmp
je
cmp
dec
mov
shll
xor
adc
movsb
movsl
push
aad
mov
add
movsb
rolb
negl
adc
xor
mov
jmp
jno
jp
dec
push
lcall
dec
mov
or
jo
js
xchg
jb
or
call
and
iret
scas
jb
je
inc
add
sub
mov
hlt
sub
adc
jle
mov
xor
mov
and
je
xchg
pop
sub
push
je
sbb
sub
add
xor
inc
push
push
ja
add
pushf
jo
and
sub
pop
cmp
leave
aad
jae
mov
mov
fcmovnbe
les
add
adc
test
in
mov
cmp
add
or
dec
adc
and
push
push
sbb
pop
sub
adc
jp
push
jl
mov
ret
cmp
jae
cli
ss
push
mov
outsb
mov
inc
mov
clc
pusha
push
call
push
lock
jle
js
or
sub
mov
add
bound
hlt
xchg
adc
inc
leave
push
push
xlat
shll
mov
test
and
adc
xorb
dec
pop
xor
or
xchg
cwtl
inc
je
cmpb
and
sbb
mov
push
add
mov
das
xorl
cmpsl
xlat
xor
xchg
lahf
and
xor
cmp
leave
fdivrp
jno
xchg
and
mov
jmp
mov
dec
adcb
or
int3
push
lret
sbb
and
mov
sbb
jg
jae
daa
rol
lret
and
mov
jb
and
adc
and
cmp
mov
mov
and
push
push
mov
test
mov
jae
dec
mov
add
and
test
jl
pop
dec
xor
leave
je
push
call
nop
adc
cmp
xor
ret
pop
push
ficoml
add
add
mov
ds
scas
sub
add
enter
or
sbb
adc
pop
sub
pop
adc
xchg
fidivrs
outsb
jge
mov
test
push
push
push
ljmp
test
cwtl
repz
js
xor
add
adc
je
mov
cvtpi2ps
dec
ret
jge
adc
cmp
or
es
sub
xor
les
mov
test
dec
xchg
pop
lods
int
or
lock
sub
or
cmp
jmp
xor
inc
and
jae
and
adc
push
test
and
cmp
and
pop
add
inc
test
clc
stos
or
mov
lret
xor
iret
cwtl
in
call
fmulp
push
mov
push
call
jl
nop
and
jnp
es
clc
jg
sbb
mov
and
outsb
push
lahf
xchg
mov
xor
bound
jmp
inc
aad
xor
push
push
sub
sub
xchg
adc
movsl
fwait
adc
push
adc
sub
and
add
push
stc
cmc
push
sbb
adc
adc
xor
out
cli
pop
xchg
inc
insb
mov
js
outsb
ja
call
sub
je
and
ret
sub
imul
jns
icebp
mov
sbb
pusha
pop
or
call
inc
pop
lea
fstps
and
sbb
clc
push
push
gs
jo
add
xchg
rorl
xorb
cmp
push
jmp
je
jnp
fiaddl
mov
sub
jp
mov
xchg
in
xor
xor
xchg
xlat
mov
shl
and
jne
sbb
sub
leave
adc
pop
xlat
jns
mov
jb
add
in
mov
and
psraw
nop
cmp
or
ficompl
out
or
and
dec
fs
jno
call
or
int
clc
pop
dec
inc
test
popf
or
neg
sbb
pop
sbb
hlt
and
movsl
loop
or
mov
movsb
movsb
dec
aas
push
mov
xor
nop
xor
xor
mov
adc
mov
sbb
jp
cmp
adc
je
xor
int3
inc
xor
pop
jmp
and
push
ret
sub
push
inc
xor
icebp
push
sbb
mov
roll
add
inc
inc
inc
loop
cmc
cmp
cwtl
jb
lcall
push
imulb
mov
int3
and
int
into
iret
adc
sbb
add
push
jp
push
adc
adc
lea
push
push
add
push
and
push
inc
sbb
je
pop
enter
fdivrs
movl
push
xchg
fwait
inc
fdivrl
push
cmp
repz
push
jne
dec
adc
das
mov
cs
movsl
dec
adcl
pop
movl
cltd
xchg
adc
cmpl
push
push
ss
hlt
push
hlt
xor
inc
cmpsb
cmp
cwtl
enter
jg
sub
xchg
mov
sub
test
leave
jne
ficoml
sub
adc
mov
mov
test
mov
push
fsubrs
dec
gs
push
rep
jns
xchg
mov
dec
stc
orb
pop
dec
add
xchg
fldcw
test
arpl
test
sub
xlat
test
subb
gs
mov
lcall
aaa
addr16
dec
sbb
add
push
fists
mov
sub
jne
les
adc
aam
test
pop
and
fisubrs
adc
movsb
das
push
push
pushf
scas
jno
pop
xor
jo
push
js
test
or
mov
test
inc
test
loopne
pop
pusha
lods
and
mov
flds
sub
sub
xchg
lret
jge
mov
push
or
lods
inc
pop
mov
ja
call
ret
in
stos
test
mov
xchg
xchg
outsb
bnd
sub
adcb
into
cmpsb
inc
repnz
movb
insb
xchg
cmpsl
mov
ret
fstps
adc
xchg
pushf
add
adc
pop
sub
dec
cmp
inc
add
push
addr16
inc
xor
leave
mov
fcompl
dec
inc
mov
sub
or
addr16
xor
mov
ret
adc
lods
pop
and
mov
loop
xchg
or
test
test
shr
dec
lret
push
mov
pop
mov
cs
xchg
test
push
mov
or
xor
mov
or
cmp
jb
pop
fs
cs
sahf
adc
adc
dec
mov
cmp
popf
jp
push
push
push
das
dec
inc
lods
xor
in
pusha
test
xor
mov
mov
or
or
pop
pop
lret
mov
pusha
mov
or
inc
push
sbb
sub
inc
mov
xchg
mov
mov
mov
mov
push
cmp
lods
leave
dec
clc
pop
mov
test
outsb
arpl
out
jl
sti
cmp
jnp
jae
and
inc
and
enter
jae
addb
jnp
push
lea
add
jmp
and
icebp
mov
adc
xchg
cltd
lret
push
mov
add
push
push
and
cmpsb
jl
sub
pop
inc
xor
cmp
push
adc
mov
jb
xchg
orb
lea
rcrb
add
adc
int
nop
loop
fcomip
mov
jne
divl
mov
out
xlat
shl
jae
mov
daa
fiadds
rcll
and
hlt
scas
jmp
cld
jg
sub
outsl
fwait
lret
adc
daa
add
notl
add
in
mov
mov
pop
int
cmp
xor
movsb
daa
das
mov
jne
fisubrl
mov
jo
loop
daa
hlt
push
test
cs
mov
or
fsubr
cmp
xor
push
push
inc
and
addb
add
mov
ljmp
and
xchg
xchg
mov
cli
xor
test
cltd
xchg
pushf
mov
mov
push
mov
xchg
pop
mov
sbb
inc
push
test
adc
leave
pop
test
nop
sbb
mov
jb
leave
jne
jno
mov
or
shlb
je
adc
adc
ret
hlt
loopne
inc
or
sub
xchg
push
add
cmp
inc
or
fs
insl
cmp
xchg
push
cs
adc
jns
divl
bound
sarb
mov
bound
push
mov
or
push
notl
clc
mov
mov
aaa
push
mov
loopne
mov
fnstenv
push
in
cs
mov
push
inc
mov
mov
jle
xchg
lret
lea
movsl
xorb
test
hlt
mov
xlat
movsl
adc
cli
sbb
xor
adc
or
popa
cmp
cmc
nop
js
in
pop
push
mov
inc
inc
jmp
pop
loope
sub
mov
push
and
dec
add
jecxz
cs
jl
pop
mov
adc
stos
sti
aaa
nop
aad
cmp
pop
cld
mov
movsb
push
pop
push
push
and
or
push
xor
xor
adc
adc
or
test
pusha
or
xchg
cli
loopne
test
jo
xor
adc
nop
sub
cmp
inc
and
leave
mov
sbb
ficoms
dec
aam
mov
dec
fs
out
adc
xchg
mov
xchg
push
mov
jns
and
and
sub
jle
xor
push
cmpsl
pop
push
xor
inc
adc
test
push
sub
ja
mov
cmp
test
mov
cmp
sbb
lret
test
setne
or
dec
adc
call
rcr
leave
dec
xor
stc
pop
jp
jge
push
cmp
imul
cmp
mov
dec
mov
adc
push
lds
push
mov
mov
jbe
push
fwait
xor
icebp
adc
mov
sarl
dec
insl
test
jmp
sub
aam
and
add
lods
pop
sti
fsubl
cmpsl
sahf
xchg
push
dec
enter
push
js
push
movsl
mov
jne
fisubrl
jae
test
lds
cmp
int
ret
movsb
lcall
loopne
adc
dec
cmc
push
xor
adc
push
das
xchg
cmpsb
fs
call
adc
or
push
test
jecxz
in
sub
notb
adc
sub
and
jge
test
fcomps
jmp
aaa
push
sbb
jmp
xor
pop
jbe
xor
pusha
mov
adc
mov
push
inc
test
push
push
mov
dec
mov
test
ret
popf
jg
lea
and
out
outsb
or
dec
outsl
bound
adc
sbb
or
sbb
int3
sub
dec
call
or
xchg
jb
cmp
lods
and
je
xchg
pop
and
enter
jb
test
imulb
cmp
subb
mov
inc
push
and
fs
pop
sub
cmp
sub
add
or
xor
jne
and
and
das
jne
fsts
jbe
push
push
fsubrl
add
jmp
lea
js
dec
mov
mov
shlb
cs
rolb
cmp
sbb
jne
aad
lcall
pop
or
pop
adc
jno
inc
jne
or
and
jb
into
cmp
inc
mov
or
fwait
push
adc
xor
not
mov
inc
lock
sub
jg
je
mov
lret
or
dec
sub
sub
mov
xor
cmp
and
cmp
test
dec
add
push
add
jle
push
scas
and
push
adc
pop
add
mov
pop
adc
push
bound
movl
pop
adc
pop
sbb
call
mov
loope
je
punpckhdq
loope
or
mov
aas
in
push
popf
fnstenv
xchg
js
fnstenv
mov
adc
inc
jo
enter
adc
fisubrs
loope
cwtl
sub
pop
push
xor
das
call
insb
cmp
and
lods
repz
inc
push
ljmp
loopne
add
inc
mov
push
shrl
dec
popf
lea
sbb
mov
cmp
and
push
call
sbb
adc
jl
repz
or
pusha
in
fdivs
push
jl
inc
dec
repnz
jg
divl
push
adc
loop
or
push
sbb
fmull
mov
jmp
xor
dec
sub
and
cmp
add
in
sub
test
xlat
int3
loopne
cmc
mov
movsl
fdivrp
sub
inc
mov
adc
nop
mov
cmpsb
adc
mov
cli
and
les
jne
int3
inc
call
push
sbb
pushf
jb
dec
xor
add
xor
pop
bound
inc
das
jne
call
add
xor
mov
in
nop
insb
daa
add
dec
arpl
movsb
ljmp
adc
inc
dec
adc
daa
sbb
cmp
jle
inc
hlt
add
xor
std
mov
cmp
push
or
cmpsl
aam
pop
dec
or
jge
or
pop
subl
jae
sub
xchg
mov
push
js
rolb
mov
cmp
pop
movsl
and
cmp
mov
jns
icebp
dec
or
sub
sbb
in
call
or
inc
xchg
jns
or
add
adc
repnz
sub
call
rorl
mov
test
test
xchg
loopne
das
inc
mov
push
or
cmp
fldl
repz
jo
add
sbb
cmp
or
jp
lods
inc
lret
jmp
sub
incb
sub
adc
sub
test
fdivrs
fists
push
call
or
jne
enter
rol
lea
ljmp
jae
dec
ficoms
or
std
mov
push
sbb
cmpsb
lret
dec
mov
xchg
scas
sub
xor
or
dec
xor
cltd
push
adc
inc
push
nop
inc
inc
jge
jne
je
lock
jmp
jbe
jns
test
mov
div
mov
lea
and
sbb
jge
mov
push
test
dec
out
dec
lret
lods
cs
dec
in
cmp
lea
and
shl
jno
add
mov
daa
rcll
aas
adc
push
push
in
lea
add
sti
adcb
out
xchg
dec
cld
jo
inc
push
mov
sbb
daa
adc
mov
inc
incl
jmp
mov
mov
or
pop
icebp
sbb
pusha
and
addb
sbb
enter
je
adc
mov
and
push
push
ret
imul
int
inc
out
dec
es
jmp
rorl
cli
jge
popf
call
movsb
mov
add
sub
and
sbb
cmpsb
cli
mov
adc
xchg
xor
les
dec
sub
push
test
jne
mov
iret
bound
jb
mov
dec
fldpi
cmp
fcoms
mov
icebp
test
fs
test
call
and
mul
sub
shr
add
rcl
xlat
testb
mov
and
mov
popf
mov
pop
mov
or
ja
and
data16
shr
jp
xchg
in
xor
call
sub
add
sti
roll
mov
push
je
sub
dec
call
add
mov
mov
insb
mov
sar
hlt
adc
jmp
xchg
add
push
mov
out
mov
sub
push
dec
xor
sub
add
jmp
hlt
test
nop
jbe
or
jmp
add
clc
mov
inc
mov
mov
or
adc
inc
jl
jmp
or
and
inc
iret
inc
xchg
or
and
or
mov
push
dec
je
add
add
dec
pop
roll
sub
loopne
sahf
inc
jl
enter
into
and
inc
cld
out
xor
enter
xchg
nop
pop
push
xchg
jle
les
mov
xchg
mov
adc
test
je
mov
clc
xor
mov
jp
es
in
cmp
out
push
ja
and
int3
lret
sbb
mov
mov
mov
xor
fcompl
xchg
inc
sub
repnz
dec
xchg
adc
push
inc
adcl
icebp
sbb
mov
int
mov
mov
dec
jbe
fs
push
dec
cltd
and
enter
mov
jbe
xchg
fs
push
mov
mov
xlat
cmp
cwtl
push
inc
stos
wbinvd
or
add
push
mov
jbe
push
jmp
adc
inc
sbb
lods
mov
adc
scas
fwait
pop
lret
and
hlt
cltd
mov
testl
jne
and
fs
pop
pop
lret
push
call
add
or
cld
dec
mov
mov
dec
jo
pop
movl
call
and
mov
mov
mov
sbb
inc
inc
push
adc
adcb
push
adc
call
pop
pushf
push
int3
stos
or
xor
or
pop
add
push
les
sub
mov
jle
mov
les
adc
push
mov
xchg
dec
and
push
inc
das
inc
dec
or
jl
dec
cmp
fldenv
dec
mov
push
fildl
pop
fs
pusha
mov
enter
testb
push
sub
inc
fs
mov
push
out
es
push
and
int3
or
fs
push
jecxz
and
mov
xchg
push
push
sub
gs
mov
xchg
out
addb
js
pop
fisubrs
push
sbb
adc
sbb
push
mov
mov
nop
insb
xchg
dec
imul
inc
push
enter
shrl
dec
dec
fcmovb
fdivrl
push
divl
orl
je
cmpsb
daa
into
or
stos
jg
test
mov
sahf
test
adc
add
cmp
and
add
mov
arpl
mov
adc
or
fs
mov
adc
mov
pop
or
test
sbb
pop
or
add
xor
repz
or
push
insb
push
sub
inc
sbb
pushf
jl
add
lods
je
fs
cmp
and
or
or
and
sbb
jle
adc
push
dec
and
dec
add
call
in
in
pop
mov
dec
mov
daa
jecxz
adc
ret
adc
xor
and
jne
adc
lea
or
push
inc
add
cmp
jl
and
sbb
scas
iret
mov
push
enter
mov
dec
jg
push
push
cmpl
dec
or
fwait
inc
and
ret
adc
and
push
or
push
fadd
je
and
xor
inc
shlb
pop
cmp
test
repz
je
add
daa
test
jb
or
push
fwait
cmpsl
lds
adc
cmp
sub
jge
sbb
and
int3
mov
clc
jl
std
sbb
sbb
xor
add
out
cwtl
lret
pop
stc
xchg
add
mov
lods
int3
jbe
push
in
pop
mov
ret
jae
clc
xlat
or
out
lds
push
push
scas
xor
dec
mov
mov
cmc
addr16
mov
xor
sub
roll
dec
push
scas
aam
shl
dec
and
rolb
pusha
sub
add
imul
je
vpmaxub
sub
pusha
rcll
jo
adc
xchg
test
sub
dec
and
adc
hlt
sahf
sub
mov
cmp
sarb
add
adc
ret
sub
or
xor
mov
cmp
xor
cmp
andb
cmovns
mov
in
push
cmp
push
cmp
sbb
sub
inc
mov
outsb
jl
xchg
es
sbb
lret
repz
std
and
cmc
push
add
sub
cld
loope
mov
and
orb
mov
in
fucomi
add
or
sub
notb
nop
subl
ds
inc
daa
rcrb
ret
cli
nop
jmp
mov
shrl
clc
or
jge
scas
dec
or
mov
sbb
das
push
sbb
stos
insl
push
inc
cmp
mov
dec
push
xor
mov
js
pop
in
mov
jg
sub
push
daa
test
das
popa
js
inc
daa
shll
jle
lea
inc
sub
cmp
inc
add
sub
push
push
std
loopne
loope
add
rorb
sbb
cltd
xor
inc
lcall
or
mov
push
cld
cmp
lcall
jmp
insb
mov
push
sub
sbb
pop
and
cmp
enter
nop
cmp
pop
mov
push
aam
scas
lret
bound
and
pop
push
testb
jnp
inc
pusha
pop
ret
lahf
nop
imul
pop
or
das
dec
insb
lock
pop
add
fldl
or
pop
movb
imul
push
push
nop
jp
mulb
mov
adc
dec
repnz
and
cmp
sbb
outsb
cmp
mov
push
push
dec
push
addr16
cmp
push
dec
xor
and
push
scas
mov
mov
in
push
xchg
cltd
push
dec
push
mov
ret
popf
push
imul
mov
jns
int3
inc
add
mov
inc
inc
or
scas
inc
adc
popa
jnp
shll
xor
shl
or
gs
lahf
add
roll
add
dec
daa
cmp
sahf
adc
sub
adc
jmp
ret
loope
ds
in
sti
sub
cwtl
loopne
xor
mov
adc
mov
sub
push
push
mov
add
idivl
repz
inc
add
ret
in
shl
xor
popl
sbb
xlat
leave
adc
sbb
cmp
cmp
mov
sti
leave
or
jge
mov
cmp
push
iret
cmp
xchg
fidivs
mov
je
je
adc
rol
movsl
pminub
ret
cmp
sub
and
lret
lods
sbb
nop
mov
add
das
or
lock
pop
pop
jle
mov
loopne
fwait
or
sub
nop
mov
cpuid
test
call
xchg
xchg
cmpsl
pmaxub
or
or
and
bound
stos
cli
out
hlt
mov
test
and
clc
cmp
stos
jl
adc
xor
cmp
xor
loopne
xchg
and
enter
in
loope
mov
push
pop
jo
push
adc
or
mov
out
push
in
sub
push
in
push
cld
test
xchg
popa
imull
mov
sbb
jne
std
stos
mov
cld
mov
test
je
sub
rcrl
jl
mov
repnz
sub
jmp
scas
and
mov
push
outsb
jb
xchg
jne
cmpsb
inc
enter
aad
inc
mov
xchg
call
fisubrl
pop
test
jmp
or
mov
xor
ss
or
sub
shlb
or
mov
and
jle
sub
jo
jmp
push
sahf
and
adc
inc
sbb
add
js
sub
lods
lock
sbb
adc
jl
push
adcb
inc
dec
jp
or
xchg
lret
sbbb
call
mov
push
xchg
push
jle
mov
jp
xor
arpl
mov
adc
shl
mov
xor
dec
xlat
lods
jnp
mov
jno
nop
push
dec
mov
inc
push
lret
adc
sbb
sarl
sub
cmp
dec
loop
sub
adc
mov
call
mov
dec
pop
adc
outsb
insl
and
xchg
icebp
cmp
adc
or
call
adc
test
loop
adc
xchg
divb
addl
rolb
clc
adc
insb
in
in
sbb
and
loopne
adc
or
rcrl
jo
and
pop
push
bound
and
ja
and
sub
rorb
vmovups
or
pop
sub
popa
xor
lret
inc
flds
sbb
lret
repnz
sbb
enter
adc
mov
jl
lock
stos
lods
mov
push
jo
fidivrs
xchg
sarl
inc
sub
fs
and
push
dec
into
lods
in
xchg
repnz
aam
dec
repz
jg
sbb
sarl
mov
rorl
fsubl
push
lea
andb
clc
pop
call
pop
std
inc
rolb
test
mov
clc
xor
add
push
push
jp
clc
push
das
cltd
clc
outsl
lret
mov
mov
dec
push
mov
leave
aad
mov
jge
fcoms
mov
pop
cmpsb
idivl
std
mov
mov
icebp
cmpsl
inc
lock
mov
hlt
lret
dec
fstpl
push
call
repnz
scas
ficomps
and
mov
call
jl
pop
push
aam
xlat
loope
push
or
out
xchg
imul
shlb
dec
cmc
push
pop
test
dec
sub
cmp
sub
data16
add
mov
ret
repnz
sub
in
pushf
sbb
dec
adcb
xchg
xorb
shlb
sti
iret
imul
xor
or
mov
mov
add
or
inc
add
inc
jne
and
push
clc
negb
pop
push
orb
dec
sub
callw
ss
jmp
shlb
daa
sbb
jl
pop
nop
pop
out
movsb
std
and
pop
mov
sub
pop
pop
jecxz
xchg
out
pop
ret
std
cmpl
jne
add
rcrb
cli
adc
adc
or
jg
lock
sahf
in
cmp
cltd
cwtl
push
add
stos
lret
test
xchg
inc
jmp
sbb
data16
cmc
sbb
popf
test
fnstenv
jne
inc
mov
add
call
js
or
mov
je
push
or
and
xchg
or
pop
sbb
call
push
outsl
adc
xorb
lods
cld
ret
xor
cmp
enter
xor
jbe
lea
xchg
mov
test
pop
adc
das
loopne
push
loope
pop
in
in
xor
or
jbe
out
or
lret
or
cs
adc
jmp
sub
mov
std
adc
push
nop
rorl
lea
xchg
mov
xchg
mov
or
or
jg
dec
cmp
test
scas
push
out
scas
stos
ja
test
ljmp
add
movsb
lea
jno
jae
sub
lea
sub
xchg
popl
test
movsl
fwait
repz
sbb
jle
outsl
and
xchg
jo
subb
push
repnz
in
stos
mov
or
pop
jle
push
adc
call
adc
outsl
nop
cli
and
out
rcrl
test
add
pcmpeqb
jge
add
inc
xor
movsb
imul
sub
adc
cmp
xchg
push
cmp
adcl
jl
jmp
fs
jmp
insl
mov
or
mov
jp
rorb
movb
add
nop
fxch
in
fwait
mov
adc
mov
add
outsl
push
ljmp
fimuls
adc
jmp
dec
sub
xor
xchg
lods
adc
or
repnz
outsb
push
add
xchg
add
fwait
ds
or
in
inc
add
jl
xor
inc
sub
mov
push
or
xor
sub
fdivs
push
aas
push
dec
mov
cmp
push
dec
inc
and
cwtl
inc
in
push
in
mov
into
add
in
and
or
orl
into
call
jmp
leave
push
scas
sub
inc
dec
fstps
pop
repnz
jg
loop
arpl
lea
arpl
cwtl
sbb
push
pop
push
adc
test
mov
xchg
pop
jmp
das
das
andb
dec
adc
imul
ja
dec
stc
mov
mov
dec
mov
cld
cmpsb
or
push
test
popa
xchg
jecxz
insl
sbb
adc
xor
and
adc
repnz
gs
mov
jne
push
mov
lea
xor
lret
dec
adc
cmp
rclb
sub
inc
and
cmc
and
or
mov
sti
sbb
mov
or
push
push
sub
sahf
xchg
pop
adc
mov
and
clc
pop
cmc
insl
jo
stc
shrb
pop
repnz
lods
xchg
loope
jecxz
mov
sub
and
movl
pop
test
add
add
lock
es
mov
adc
jne
test
das
and
out
sub
inc
push
je
mov
stos
pop
pop
call
les
rcrb
sub
push
into
sbb
call
daa
lock
je
xchg
movsb
scas
and
stc
jg
test
inc
adc
fisubrl
subb
xor
in
and
mov
movups
aas
leave
jmp
cmpb
dec
adc
jb
ret
push
or
push
call
mov
lods
mov
es
pop
outsl
mov
pop
sbb
mov
sbb
aam
lods
andb
movsl
fs
sahf
inc
adc
orb
call
popl
gs
adc
mov
or
xor
pop
mov
cmp
pop
stc
or
pop
call
mov
jo
xor
dec
nop
clc
pop
lret
lods
hlt
sub
add
jns
inc
and
adc
and
ficoms
lea
adcb
push
inc
sub
dec
outsl
in
mov
add
dec
or
lods
out
mov
int3
mov
push
adc
repz
test
test
popf
push
sub
pop
pop
out
daa
sub
inc
push
cmp
cmp
mov
pop
pushf
stos
pushf
enter
rolb
add
ret
mov
adc
imul
push
and
mov
add
out
lahf
call
xchg
scas
testb
imul
inc
push
jle
lret
aad
sbb
adc
and
push
mov
mov
add
std
cmc
js
popf
movsb
mov
push
push
push
out
leave
psubusb
fisttpll
mov
loop
es
mov
jne
es
dec
push
fdiv
cld
sub
xchg
dec
push
mov
and
cwtl
sti
scas
dec
dec
fdivr
adc
adc
add
push
mov
movsb
push
rorl
sbb
out
imul
pop
dec
mov
popf
repz
mov
dec
fwait
jmp
push
rol
push
xor
les
mov
push
mov
push
pop
clc
out
xchg
dec
movsl
xor
jp
or
leave
lock
dec
or
xchg
dec
adc
sub
push
loop
sub
adc
lock
sub
push
testl
mov
sub
das
sub
jo
aam
adc
bound
insl
cmp
sub
push
pop
adc
std
push
movsb
mov
fstl
popa
push
adc
pop
push
in
dec
shlb
adc
mov
cs
xchg
dec
add
jl
dec
jnp
cli
push
inc
adc
cld
mov
pop
xor
jb
xchg
pop
mov
cmp
push
sbb
mov
add
xchg
jmp
sub
lds
cmp
xlat
jae
ret
test
inc
sti
setne
ficoml
rclb
add
dec
adc
in
mov
adc
jne
stos
fstpl
push
add
mov
iret
push
inc
push
xchg
or
inc
pop
jmp
push
or
pop
mov
add
or
dec
dec
pop
push
movsl
jae
leave
add
adc
jge
mov
rcpps
stos
dec
out
fists
add
adc
mov
bound
cld
cld
movsb
add
push
call
push
pop
dec
xor
dec
addb
pushf
mov
inc
mov
adc
mov
dec
sti
negb
cmp
or
pusha
gs
cwtl
pop
in
jne
lret
sbb
xchg
push
jno
or
popa
or
xchg
mov
and
jne
fucomip
pop
cmpl
insb
ja
imul
inc
imul
leave
push
or
sub
enter
das
push
rclb
inc
sbb
xchg
mov
movsb
mov
push
mov
das
xor
sub
mov
cmp
pop
jne
roll
imulb
inc
sub
cmp
inc
adc
hlt
pop
pop
or
dec
lods
mov
push
mov
mov
or
mov
das
jmp
sub
rcrl
jo
dec
or
dec
sub
or
hlt
xchg
push
or
ret
or
mov
xor
add
jne
bound
ret
push
inc
cmp
push
popf
and
cli
dec
iret
cmpsl
mov
inc
out
adc
ljmp
sbb
in
adc
pop
xchg
sub
dec
mov
lret
or
mov
test
ret
sbb
das
push
push
insl
mov
cld
test
jb
add
in
xchg
push
or
les
icebp
dec
mov
insl
neg
das
imul
pusha
adc
add
pop
push
inc
pop
adc
nop
imul
adc
xchg
ret
cli
outsb
nop
jne
gs
xchg
sbb
lock
cmp
sbb
je
pop
les
in
ds
jae
cmovb
sub
mov
outsl
ljmp
and
push
call
xchg
fs
inc
xchg
add
push
and
push
mov
nop
push
xchg
jb
add
lods
sbb
push
inc
lret
push
movsl
push
push
push
int
and
imul
or
clc
inc
adc
push
leave
scas
rcr
dec
inc
inc
xor
pop
test
mov
dec
push
mov
add
dec
test
aad
sbb
icebp
push
adc
push
and
sbb
adc
in
and
push
jg,pt
mov
lret
and
add
inc
das
sub
notb
call
mov
int3
jmp
push
sub
cmp
push
xchg
rorl
xlat
aad
adc
popa
mov
cmpsb
outsl
mov
dec
xor
popf
push
or
and
dec
or
ret
push
sub
bound
push
push
ja
jno
sti
fimuls
lea
sub
sbb
jmp
movsb
push
call
cmp
cld
je
or
adc
pop
pop
push
push
scas
sub
sub
adc
dec
pop
mov
inc
adc
stc
pop
or
stos
fiadds
push
push
or
loope
in
sbb
test
in
cli
push
mov
inc
inc
add
mov
or
inc
xchg
leave
cld
xchg
jge
jge
and
enter
sbb
xchg
cli
gs
xor
sbb
and
xchg
loop
adc
push
mov
mov
les
mov
ljmp
ds
aam
xor
cld
adcb
mov
add
xor
and
and
sbb
jae
mov
cmp
push
jl
in
fs
insl
cmpsl
inc
loop
ret
imul
mov
mov
dec
jo
into
call
cmp
mov
jne
sub
ljmp
pop
xor
add
adc
pop
pop
in
mov
test
and
cmp
orl
cmp
xor
jg
test
fdivrl
jmp
and
or
dec
mov
shr
jmp
pop
push
stos
and
pop
jns
mov
or
imul
jne
imul
and
popf
pop
sub
in
or
push
popf
mov
call
lock
inc
out
in
dec
inc
cmp
rolb
mov
inc
je
out
jp
push
sub
mov
push
jnp
add
xchg
mov
in
pusha
inc
mov
imul
insb
and
inc
mov
cwtl
xchg
push
fninit
inc
jmp
out
cmp
movaps
inc
sub
jl
sub
mov
and
xchg
xor
shl
add
test
out
ja
fsubrs
hlt
movsb
je
cmp
and
push
cltd
dec
dec
and
jmp
add
ret
jns
pop
aad
rorl
ljmp
mov
rcl
sarl
aas
hlt
mov
pop
push
lds
clc
and
je
out
enter
leave
rep
mov
int
mov
mov
add
mov
or
push
push
push
push
mov
loop
jl
jb
rcll
cmp
ljmp
adc
lea
loop
mov
stos
xor
movsb
mov
add
les
das
shrl
and
std
dec
das
jne
fcomps
mov
mov
iret
jo
dec
js
push
mov
enter
call
adc
push
dec
pop
cmc
stos
cmpb
push
imul
test
test
dec
mov
jno
and
les
adc
mov
lret
or
shl
push
push
push
adc
or
std
mov
sub
fs
mov
jne
insb
dec
adc
pop
int3
mov
call
and
jbe
adc
les
js
repnz
xor
popa
xor
fmuls
fcmovne
paddusb
push
xor
sbb
arpl
jnp
lods
add
jbe
or
sub
cmpl
adc
nop
out
es
pop
sbb
cmp
stos
adc
dec
pop
and
cmc
add
movsl
mov
mov
mov
movsb
xchg
clc
mov
adcb
and
out
adc
jbe
insb
push
sub
or
xor
ret
daa
add
sbb
dec
inc
je
sbbb
push
das
std
pop
cmpsl
fbstp
andl
lcall
adc
lcall
popa
mov
test
call
jne
mov
pop
sub
sbb
mov
mov
mov
sbb
mov
jmp
dec
mov
lea
adc
mov
data16
in
adc
xchg
orb
dec
mov
pusha
addb
cmp
decb
sub
push
push
push
dec
mov
add
cwtl
dec
fsts
or
pop
into
xchg
xor
and
rcrb
or
movsl
ds
mov
dec
push
sbb
mov
push
mov
sub
and
sub
push
inc
xor
inc
adc
cmpsb
add
daa
dec
sub
daa
fsubr
push
int3
jmp
push
jle
xorl
les
imulb
insb
pop
test
add
inc
iret
or
push
pop
lea
imul
lds
lods
push
inc
xlat
push
xchg
cltd
xchg
mov
add
jbe
nop
subl
insb
dec
jno
and
sub
call
mov
and
movsb
mov
and
add
sub
sub
inc
inc
push
call
mov
xchg
ficoms
pop
lods
and
call
pop
pop
xchg
push
inc
iret
add
es
test
lahf
sub
or
aad
cwtl
xor
ret
inc
and
rorb
cmp
je
inc
dec
sbb
lret
push
int
adc
inc
or
dec
jno
or
neg
sbb
call
xor
adc
and
sbb
or
fwait
pop
xchg
cmpsl
loope
int
add
aas
outsb
dec
int
xor
jl
sbb
mov
sub
or
jo
push
imul
jmp
dec
mov
and
or
push
inc
jnp
rorb
cmp
push
push
pop
cmpsb
inc
rol
push
pop
jle
jb
jne
mov
adc
sbb
cmp
and
pop
push
ljmp
jp
sub
rcl
push
test
or
aad
mov
inc
adc
jge
push
mov
fld
jp
push
add
sbb
jl
or
jg
push
inc
pop
rorl
push
or
push
ficompl
rclb
ret
and
roll
push
xor
mov
push
mov
jp
jne
call
push
outsl
mov
adc
xor
push
cmpsb
push
out
sbb
xchg
cli
dec
push
mov
les
fldt
push
shll
std
add
xor
andb
cmpl
adc
dec
test
es
ret
dec
sub
out
fidivs
lcall
add
adc
mov
push
mov
add
dec
pop
lahf
std
jns
cmp
pusha
or
push
mov
sub
ss
mov
inc
addb
lock
jo
mov
add
aam
sbb
xchg
shr
call
jbe
and
jp
xchg
xor
aas
inc
push
mov
xlat
inc
ret
aaa
or
fs
loope
xchg
hlt
push
mov
mov
sub
popf
clc
pop
cmp
loopne
add
div
mov
lcall
fisubs
shll
test
pop
sbb
and
daa
imul
push
pusha
jmp
pop
mov
mov
std
jne
dec
movsb
add
add
jmp
gs
sbb
inc
inc
je
mov
jmp
fcoml
stos
jbe
or
fnstcw
jne
or
leave
cmp
or
loop
xchg
add
shl
cwtl
pop
rcrb
in
testl
or
adc
xchg
inc
orb
loop
add
mov
dec
cmp
or
fwait
jle
nop
or
push
xor
ss
mov
jbe
xor
push
loop
mov
mov
rorl
pop
mov
dec
mov
ret
mov
xor
pop
push
push
aad
push
or
movl
push
dec
dec
fistl
insb
mov
and
sub
cmp
add
and
shlb
pop
jnp
sub
pop
sbb
dec
xor
out
fmuls
je
pop
aam
and
arpl
dec
dec
adc
or
fisubrs
orl
push
mov
arpl
adc
shlb
inc
outsb
mov
inc
mov
mov
out
and
pop
or
xor
or
movsl
cs
mov
pop
outsb
scas
pop
xor
mov
inc
and
hlt
adc
xlat
mov
fidivrl
add
shll
adc
push
cmp
lret
scas
xchg
adc
sub
sbb
push
adc
cli
jne
cmpsl
movl
aam
xchg
jle
pushf
daa
clc
lret
ret
jle
push
inc
pop
pop
push
int
loop
lock
jge
lock
neg
inc
add
clc
xor
or
rcr
or
icebp
sti
repz
cwtl
or
movq
xchg
mov
add
data16
mov
sbb
push
xchg
mov
and
fs
xchg
negb
cld
xchg
ja
or
orl
stc
pop
sub
mov
or
leave
inc
ljmp
mov
sbb
sbb
dec
sbb
loope
shr
cli
sub
dec
sub
jp
jbe
xor
bnd
adc
adc
cmp
jns
push
push
mov
sbb
push
test
cld
xchg
sub
mov
jno
mov
cmpsb
pop
xor
xor
cmp
inc
out
enter
dec
xchg
cmp
cmp
test
sbb
and
enter
pushf
sbb
nop
push
xor
push
fdivr
sub
xor
mov
ret
push
xlat
call
les
bound
cli
sub
push
cmp
push
je
popa
cmp
sbb
icebp
xchg
dec
and
push
or
dec
push
xchg
cmp
cmp
sub
pushaw
shll
mov
out
icebp
sarl
add
sti
adc
cmp
inc
cltd
ret
add
push
xor
xchg
popa
and
or
add
and
pop
or
icebp
andb
test
lcall
sbb
notb
mov
jg
xchg
std
add
ljmp
jae
adc
sbb
cmpl
jne
or
add
rorl
mov
ss
insl
and
pusha
out
adc
mov
mov
inc
sbb
pop
sti
jge
ljmp
push
jl
xor
js
sar
jl
dec
or
jo
sti
xchg
sar
inc
or
jbe
mov
sbb
or
cmp
ds
push
or
leave
shll
addl
maskmovq
mull
sub
add
push
mov
mov
sbbl
push
xor
shr
and
sti
aas
repnz
push
push
mov
and
adc
call
call
and
mov
in
lret
sub
in
jne
cmp
adc
push
or
pop
cmpsl
jle
add
lret
fs
sub
ljmp
lea
xor
mov
insb
inc
push
call
mov
add
add
sub
scas
subb
or
call
and
cwtl
insl
jmp
lahf
int3
stos
adc
jo
ljmp
and
cmp
add
dec
stc
xchg
lods
jle
sbb
ds
fisubrs
xor
add
int
stos
inc
pop
int3
ret
push
nop
cli
mov
adc
lahf
inc
rorl
cmp
call
pop
inc
dec
sti
push
repnz
xchg
dec
fldenv
mov
or
pop
int
test
adc
lret
out
jns
mov
jne,pt
adc
mov
leave
mov
shrb
cli
js
daa
adc
xlat
mov
and
pop
repnz
cmp
inc
mov
pand
and
ss
jbe
cmpsb
fs
pop
jl
and
mov
or
dec
fwait
push
cmp
sbb
cli
mov
jno
lock
mov
out
je
sbb
sub
jae
mov
into
sbb
pop
cmp
jecxz
push
shrl
pop
movsb
in
pop
mov
out
xor
mov
pop
js
pop
sub
je
or
or
movsb
pushf
mov
jp
mov
dec
push
adc
xor
sbb
hlt
insl
inc
mov
inc
xor
push
enter
push
xor
shlb
pop
and
std
push
or
pop
insl
or
inc
testb
shl
mov
push
cmp
push
or
and
jp
dec
mov
xor
sbb
insb
aaa
cmpsb
ss
inc
jl
lds
mov
cli
mov
xlat
dec
push
js
enter
mov
out
or
dec
or
fs
push
subl
push
inc
pop
jle
int3
divb
pop
pop
pop
mov
mov
es
pop
add
xor
jne
mov
es
je
ss
or
mov
adc
push
adc
sub
mov
adc
std
push
push
sbb
shlb
sub
mov
push
insb
jl
xor
daa
add
inc
push
shrb
dec
roll
adc
jmp
push
xchg
lahf
xchg
jae
push
test
adc
pop
mov
dec
xor
shll
sub
jb
enter
shll
icebp
int
call
push
mov
lea
or
sarb
jmp
inc
mov
ss
ret
int3
and
xchg
or
xor
xor
fwait
imul
repnz
insb
mov
std
sub
insl
leave
dec
adc
sub
jmp
decb
insb
adc
jne
cs
pop
mov
nop
bound
adc
jmp
dec
and
sbb
pop
jno
jnp
fwait
int
xchg
lea
sub
das
xchg
dec
shll
int
fcompl
fldl
aaa
cmp
lea
or
sub
movsb
adc
add
lds
mov
push
jbe
fucom
sbb
cmp
cmc
inc
push
mov
pusha
lods
lods
scas
inc
dec
sar
into
enter
push
call
or
cmp
lcall
aas
or
lea
inc
das
shl
jo
aas
dec
add
shrl
xlat
adc
cmp
mov
mov
fisubrs
dec
and
jmp
in
inc
jo
fsubrs
cmp
popa
mov
xchg
push
pushf
sub
and
sub
push
xor
out
mov
and
lret
cs
dec
xor
push
pop
inc
or
push
mov
add
stos
jg
repnz
int3
adc
cmp
add
decl
inc
andb
repz
inc
jg
dec
or
inc
dec
inc
jnp
push
mov
lds
sar
or
dec
cmp
lods
push
inc
je
fs
sub
cmp
ret
aaa
sbb
cli
sub
mov
test
es
icebp
in
jb
popa
cmpl
sub
push
xchg
jmp
dec
clc
xchg
pop
cwtl
dec
inc
scas
dec
push
mov
enter
sub
push
cmp
arpl
nop
mov
orb
inc
inc
mov
sbb
push
cs
push
dec
pop
pop
test
pop
xchg
inc
or
loop
inc
push
push
xor
pop
insl
nop
push
sbb
xchg
aad
mov
les
adc
mov
fdivrl
jo
push
jmp
cmp
mov
ja
inc
stc
inc
cmp
movsb
sub
test
sbb
inc
pop
sbb
cmp
out
aas
xor
xchg
dec
lods
inc
adc
adc
inc
mov
xor
dec
iret
add
mov
pushf
jbe
pop
js
clc
stc
je
rcrl
aam
sub
sbb
dec
adc
mov
jmp
xchg
mov
mov
add
andb
data16
fdivrs
test
xchg
push
sarb
pop
lea
mov
add
adc
cmp
xchg
pop
jb
stos
ljmp
nop
pop
std
fwait
mov
or
ret
and
or
sbb
ja
lea
je
jmp
in
outsl
lods
sahf
dec
inc
cs
dec
mov
mov
jae
pop
loope
pop
pop
ret
fisttps
lock
sub
jmp
jo
fs
je
je
out
inc
jp
stc
and
lahf
ror
adc
jb
pop
inc
sbb
shrl
sbb
push
sub
add
sbb
pop
or
adc
mov
sub
lea
pop
sub
xchg
xchg
push
jb
rol
add
lcall
sub
sbb
mov
test
add
cmp
sub
cmpsl
lcall
xchg
and
inc
or
das
mov
orb
sbb
and
jne
mov
in
xor
adc
push
mov
lret
jb
mov
out
push
rcr
add
sbb
inc
mov
xor
ljmp
call
jmp
fsts
mov
mov
fstps
sbb
jbe
adc
mov
push
push
rorl
and
or
notl
lds
push
jno
mov
xor
nop
stc
shr
jge
jb
or
stos
pusha
or
xor
dec
pusha
push
xor
fisttpl
and
in
sbb
aaa
push
pop
jbe
jle
addr16
js
add
enter
mov
test
lcall
js
ja
and
addb
adc
lods
shrb
cmp
jbe
mov
pop
jo
enter
push
xchg
fs
mov
sub
add
pop
data16
repz
cwtl
lret
and
sbb
add
out
stc
inc
sahf
enter
psubsb
dec
mov
enter
cs
stc
sub
es
push
incb
repz
pop
and
test
adc
cmp
arpl
jne
dec
and
lret
inc
test
pusha
and
add
add
jb
and
shlb
ret
xchg
inc
jle
sbb
adc
repnz
and
and
je
test
jmp
test
mov
mov
sub
call
inc
adc
inc
sub
enter
sbb
and
or
adc
arpl
mov
movsb
xchg
push
dec
insb
inc
dec
mov
dec
push
push
popa
cwtl
dec
out
jmp
and
inc
dec
and
add
jmp
sbb
push
xor
mov
sbb
push
nop
xchg
enter
lods
mov
inc
and
xchg
dec
inc
inc
fistl
sub
adc
loop
mov
and
push
and
lds
shll
xchg
fwait
jns
sub
sbb
mov
es
pop
aas
test
in
mov
jne
xchg
xorb
cs
ds
fistl
add
push
call
add
movl
xor
das
std
cmp
fwait
movsb
and
and
je
jg
insl
mov
push
cmp
xchg
imul
push
ret
cmp
rcl
adc
add
sub
push
pop
mov
cmp
cmp
dec
rolb
int
sub
cli
mov
push
sub
outsl
or
and
push
test
aas
push
vmovupd
add
js
dec
sub
sub
daa
push
pusha
dec
orl
xor
cmpsl
pop
push
movsl
aam
inc
inc
add
les
inc
inc
xor
mov
sub
sub
dec
jmp
or
orb
out
xchg
cmp
add
add
pusha
aad
outsl
dec
adc
adcb
dec
add
pop
enter
mov
sub
mov
inc
int
loop
lds
mov
repnz
fisubs
jae
popa
jb
into
jmp
cmp
orl
enter
loope
lret
dec
sbb
xchg
leave
mov
in
jb
push
add
ret
cmp
shr
rcrl
push
insb
mov
add
jb
pop
push
cld
pop
cltd
pop
cmp
add
neg
jp
test
cmp
fstpl
fistl
mov
sub
sub
xchg
push
sbb
sbb
or
or
mov
dec
imul
cli
enter
mov
ret
mov
or
les
push
push
bound
jb
mov
sarb
cmpsl
inc
xor
adc
test
cmp
clc
adc
pop
rcrb
aad
add
test
cmp
push
aas
xor
mov
rolb
and
sub
lahf
sub
ret
enter
mull
mov
jno
mov
push
push
jb
or
xchg
js
mov
movsb
leave
push
push
add
and
and
lret
jmp
repnz
mov
push
xchg
cltd
and
pop
popf
dec
push
dec
and
popa
mov
cmp
fistps
loop
in
aaa
or
aas
inc
sahf
xchg
inc
fwait
sub
dec
sarb
mov
jo
orb
sbb
ret
pop
lock
fsts
dec
cmpsb
das
leave
negl
cs
adc
test
sbb
dec
inc
push
das
push
inc
std
dec
cwtl
or
pop
cmpsl
ds
lcall
and
inc
push
movsb
sub
cmpsb
sbb
fdivrl
stc
sbb
rcrl
les
arpl
mov
es
dec
cld
jmp
call
std
or
add
ljmp
int3
int3
dec
mov
cmc
push
ret
out
push
arpl
movl
add
jmp
test
xlat
mov
test
or
outsb
les
cmp
adc
push
adc
and
mov
adc
add
int3
and
or
rclb
cmp
xchg
rcrb
ret
outsb
or
xchg
arpl
aam
mov
cmpsb
sub
insl
mov
pusha
fistps
and
lea
inc
inc
adc
push
or
push
into
pop
in
call
inc
adc
int
inc
cwtl
mov
insb
cmp
push
jmp
rorb
or
add
mov
ljmp
jae
notl
add
nop
std
fmuls
adc
push
in
or
sub
jb
mov
sbb
imul
roll
jmp
and
add
xor
sbb
adc
pop
mov
fimull
into
add
dec
bnd
out
cmpsl
dec
sbb
lahf
fmulp
sbb
sbb
jmp
adc
out
dec
fildl
inc
sub
adc
lea
roll
aam
inc
xchg
adc
lcall
or
test
sbbl
les
or
jp
out
adc
or
fadd
sbb
cmpb
cld
xchg
pop
push
outsl
lahf
inc
ljmp
js
aas
push
jne
dec
fwait
xchg
mov
loop
jne
je
dec
and
push
ja
lea
cmp
or
xchg
stc
cmpsb
push
es
inc
push
repnz
adc
mov
or
popf
call
fcoms
push
mov
push
xchg
xchg
nop
sub
dec
test
aaa
scas
cmp
add
dec
in
fsubrs
mov
jnp
movsb
imul
dec
mov
data16
or
jg
movsb
cld
dec
dec
xchg
sbb
inc
fstl
icebp
gs
pusha
or
sub
daa
cmpsl
push
or
sub
push
adc
xchg
movsb
repz
and
cmc
cmp
sbb
inc
mov
clc
mov
jae
lcall
sub
dec
add
out
pop
test
pop
aaa
mov
xor
xor
ret
adc
fst
inc
cwtl
dec
push
add
iret
inc
shrl
dec
cmp
popf
jns
add
mov
movsb
adcl
lret
sbb
adc
inc
dec
xlat
rcl
std
aaa
sub
push
rolb
ljmp
push
dec
lret
mov
push
ret
sub
pop
rcrb
push
jl
sub
and
add
pop
and
inc
sub
sub
test
orb
push
into
xor
dec
dec
and
push
adc
stos
ret
sub
or
movsl
test
push
xchg
push
leave
nop
mov
mov
dec
push
inc
stc
mov
in
inc
iret
dec
or
add
sub
add
out
push
sbb
cmp
dec
xor
outsb
inc
adcb
and
jp
addb
int
adc
jge
mov
mov
push
bound
leave
das
jp
dec
rclb
or
inc
push
push
xchg
jnp
fisubl
imul
xor
cmpsb
cltd
pop
dec
test
dec
js
test
shr
lds
xlat
lea
jmp
in
add
push
push
inc
lods
push
and
sub
cmp
push
dec
mov
jecxz
jns
xchg
push
scas
sub
aaa
push
mov
cld
dec
addb
adc
in
push
dec
add
in
dec
xchg
fists
xchg
sub
inc
ret
xchg
in
stos
sub
mov
xchg
pop
stc
sub
icebp
xchg
jmp
arpl
lods
popa
dec
or
push
jge
pop
mov
cmp
je
xchg
mov
and
jmp
into
ds
stc
outsb
or
inc
out
push
jae
js
or
lea
or
cmp
lds
add
stos
repnz
mov
lds
mov
in
popf
fimull
lret
fsts
mov
mov
mov
inc
mov
dec
adc
enter
adc
adc
and
adc
sbb
aam
xchg
adc
es
dec
fs
inc
jle
adc
imul
loopne
mov
inc
sub
push
xchg
es
jg
jmp
adc
inc
in
jns
mov
pusha
push
jge
incb
dec
rclb
push
cmp
ret
jb
push
mov
add
mov
shr
sti
aad
fidivrl
cmp
add
add
jmp
icebp
push
ja
push
stc
or
repnz
repz
test
cmc
mov
mov
push
mov
sti
mov
mov
push
decl
xchg
or
gs
dec
popf
cwtl
es
sub
dec
hlt
in
mov
jmp
ds
sti
cli
repnz
ja
xor
push
loopne
pop
or
pop
call
push
subl
mov
jnp
imul
mov
pop
xchg
nop
mov
mov
adc
sbb
je
and
and
leave
movl
sbb
and
adc
and
inc
sub
pop
mov
push
xor
enter
adc
lods
adc
mov
testb
mov
rolb
negl
test
and
js
mov
je
mov
cwtl
mov
enter
mov
sbb
mov
push
xor
jmp
repz
lcall
mov
repnz
or
or
adc
cwtl
inc
or
leave
js
repnz
arpl
push
ss
pop
sub
inc
inc
popa
mov
mov
into
pop
adc
pusha
push
xrelease
sahf
nop
inc
inc
jmp
push
loop
mov
add
add
call
mov
into
dec
in
fwait
icebp
and
movsl
test
in
push
adc
pop
or
push
cmpsl
push
push
addl
mov
add
cwtl
jp
pop
xchg
mov
rolb
push
xchg
mov
test
pop
mov
sbb
xlat
mov
push
or
mov
pop
enter
clc
shl
xchg
enter
jle
xor
arpl
jg
sub
popl
mov
xchg
cmp
mov
pop
lock
xchg
call
xchg
adc
cwtl
add
mov
xchg
fsts
shr
andl
adc
sbb
push
xchg
or
xchg
sbb
movl
stos
xor
adc
xchg
inc
xor
push
adc
test
jle
and
sbb
jne
jp
adc
decb
ds
cmp
mov
sbb
mov
or
test
cli
movsb
adc
or
mov
add
cmp
lret
jmp
lea
faddp
add
cli
leave
sbb
adc
push
push
test
lahf
shlb
inc
mov
roll
mov
inc
pop
add
push
rclb
push
sub
stc
repnz
xlat
cmovns
sbb
loop
inc
ss
push
and
xor
in
les
push
pop
pop
or
sahf
in
phaddd
push
inc
add
pushf
decl
xchg
or
arpl
aaa
inc
mov
sahf
dec
nop
sbb
sub
lret
and
sahf
jns
sbb
iret
loope
inc
push
cwtl
xchg
push
and
inc
repz
fs
pop
lea
pop
adc
lret
lods
data16
and
outsb
mov
test
cmc
jmp
mov
aam
les
mov
out
mov
jb
adc
jae
insb
xor
dec
jno
aaa
dec
sub
cmp
mov
xorw
push
inc
sbb
dec
hlt
inc
jae
orl
xor
add
push
data16
and
scas
jle
bound
cmpl
std
test
add
adc
inc
ret
outsb
add
add
popl
movsb
push
lds
pop
inc
or
xor
xchg
orb
xchg
sub
pop
loop
cmpsl
xchg
mov
jo
xchg
push
fcom
sti
addl
adc
nopl
adc
int
push
and
leave
sbbl
dec
xor
push
add
adc
xchg
mov
call
dec
sub
addr16
dec
mov
lret
mov
jo
mov
mov
test
mov
add
lahf
jmp
inc
ljmp
cmp
shll
mov
jmp
in
daa
fidivrl
cmp
shrb
and
scas
add
lahf
lods
bound
xchg
pop
inc
mov
pop
sbb
sub
push
jge
je
dec
xor
enter
sbb
xor
call
sbb
add
or
sub
mov
add
cmp
sub
or
popf
int3
sub
sbb
mov
cmp
add
cmp
jb
jne
mov
call
sbb
push
insl
subl
and
jne
subl
jbe
dec
mov
mov
loope
mov
lea
nop
add
das
mov
lret
cltd
lds
adc
out
cmp
jecxz
movsl
adc
push
leave
cwtl
sub
punpckhbw
dec
mov
cmp
pop
leave
adc
jnp
and
inc
dec
jne
call
xor
or
sub
xor
popa
mov
cmp
dec
test
adc
mov
add
sbb
movsl
scas
shrb
dec
or
ss
jl
dec
jl
add
inc
cmp
jle
jl
sahf
or
pop
cmp
cmp
and
pusha
cwtl
xchg
and
ret
jb
into
jl
push
stc
sub
sub
mov
cmpsb
add
orl
add
lods
add
and
lea
mov
push
lcall
adc
pop
xchg
xchg
sbb
pushf
add
mov
jne
std
pop
adc
jg
mov
sbb
or
dec
sub
mov
push
mulb
test
and
sub
xchg
jg
or
mov
ffree
and
mov
sahf
pushf
inc
inc
or
aad
aaa
inc
xchg
add
dec
sub
and
or
hlt
pop
sub
cmp
push
cmp
fisttpll
out
sub
dec
shll
repz
fists
or
aas
ds
scas
push
dec
pop
mov
jne
push
mov
dec
inc
mov
add
andb
sbb
mov
outsb
or
and
gs
lock
sub
adc
pmullw
adc
or
faddl
clc
shl
and
jne
out
bound
sub
js
mov
mov
pop
adc
push
dec
or
pushf
les
ss
push
pop
push
or
call
lret
sbb
push
xchg
outsl
roll
stos
jns
cmp
and
lea
push
mov
dec
mov
inc
adc
daa
sub
mov
test
mov
nop
inc
pop
mov
adc
dec
mov
push
andb
rcrl
sbb
pop
push
dec
push
push
mov
dec
add
add
les
add
jl
push
mov
mov
pop
or
test
dec
cwtl
inc
push
wrmsr
mov
fsubrs
xor
lea
xchg
dec
loopne
daa
cmp
and
orb
add
hlt
pop
mov
cmp
adc
or
adc
sbb
or
adc
add
ss
mov
inc
push
lret
jb
nop
aad
popa
xchg
cli
and
mov
and
mov
or
or
xchg
fs
or
iret
je
mov
mov
cmp
out
mov
and
ss
push
pop
pop
cmp
call
testb
inc
dec
push
jbe
insb
dec
push
or
in
jle
pop
sbb
inc
cmp
xchg
fisttpl
lret
sub
insb
shll
mov
aas
xchg
adc
sbb
aad
sbb
push
nop
mov
and
xchg
sbb
dec
les
insl
fmuls
adc
sbb
xor
cli
inc
sub
cltd
fs
mov
sub
mov
add
inc
mov
jle
mov
not
jmp
popa
inc
cwtl
pop
cmp
bound
inc
mov
or
jmp
test
ficoms
lods
movsl
add
mov
pop
xor
sub
or
iret
jle
mov
test
jnp
cli
mov
mov
cwtl
adc
add
push
push
or
pop
xchg
and
mov
and
push
aaa
lock
push
inc
xchg
xor
out
popa
add
mov
movsb
mov
popf
inc
pop
jmp
xchg
rol
cli
sub
mov
mov
fldenv
mov
sbb
sahf
jbe
cmp
push
jle
pop
icebp
and
pop
test
div
mov
add
dec
mov
jmp
or
push
add
inc
pop
in
push
sbb
inc
or
sub
adc
sahf
push
and
mov
pop
add
pop
push
negl
sbb
adc
pop
jnp
ret
test
nop
jmp
or
pushf
in
sahf
and
leave
or
movsl
push
mov
mov
dec
jno
push
sbb
sbb
repz
lret
imul
xor
enter
push
push
test
subb
and
fldt
aaa
dec
sbb
xchg
mov
pop
xor
dec
inc
pop
mov
jl
add
mov
cmp
jle
mov
je
xchg
xchg
mov
inc
xor
in
mov
xor
in
adc
xor
repnz
xor
lret
lea
inc
sub
mov
mov
sbb
jmp
mov
mov
and
pop
popf
push
add
popa
sub
jge
add
int
jno
fnstenv
sbb
xchg
fdivp
loope
xchg
mov
aad
mov
cli
jmp
mov
and
cmpsl
aad
test
or
mov
mov
and
jno
inc
lods
gs
in
test
mov
popf
or
cs
aaa
pop
push
pop
or
xor
mov
ficoml
mov
into
or
adc
mov
stos
inc
lahf
jae
call
scas
add
or
pop
xchg
pop
cltd
call
sub
ret
add
sub
popa
mov
push
popf
xor
adc
mov
jo
jmp
push
pop
mov
popf
sbbb
fidivl
bound
and
xor
cmp
xor
pop
clc
divl
and
rolb
push
cld
scas
or
mov
pop
and
cmpsb
inc
cmpsb
js
jb
add
mov
stos
test
bound
add
sub
sbb
cmp
movsb
pop
cmp
xchg
and
pop
inc
in
and
stos
aam
add
add
sbb
outsb
inc
sahf
add
dec
jne
fs
xor
popf
inc
xor
and
adc
adc
jge
push
mov
mov
sub
movb
add
dec
out
out
add
cmp
pop
setbe
mov
inc
sbb
and
les
push
mov
icebp
add
shr
enter
out
jg
mov
pop
ret
rol
scas
shl
jne
and
push
stos
test
cwtl
pop
int
pop
push
mov
fcmovbe
insb
clc
mov
and
inc
dec
push
inc
fwait
mov
xor
clc
pop
cmp
sub
push
mov
or
dec
dec
nop
nop
sti
popa
and
sarl
es
or
inc
push
pop
sub
mov
xchg
loope
mov
sbb
sbbl
fsubrl
sub
pop
add
aam
ror
es
rolb
not
dec
data16
xchg
enter
sbb
aad
or
les
rcrb
lock
jbe
pop
add
inc
mov
inc
inc
dec
lods
xor
clc
out
xchg
nop
js
push
sbb
pusha
dec
push
add
and
lea
and
pop
push
das
rcl
push
lahf
cmpsl
icebp
or
dec
adc
xchg
cs
jmp
ret
stos
cmp
mov
mov
dec
int
das
in
pop
aas
and
xor
hlt
mov
or
fiadds
mov
adc
or
les
nop
adc
aam
mov
sub
leave
push
xchg
jno
mov
cmpsl
xchg
cli
xor
push
lds
add
add
xchg
bnd
mull
xchg
push
jne
pop
push
jmp
out
sbb
call
arpl
adc
pop
sub
mov
or
inc
dec
out
xor
add
shr
dec
rcrl
cmp
clc
dec
aam
es
mov
cli
shll
sbb
mov
jl
into
dec
jne
enter
sub
or
mov
mov
jns
or
rcrl
mov
sub
sbb
lock
popa
test
lea
inc
fcoml
xchg
loopne
sbb
call
adc
sub
aas
inc
lea
mov
adc
push
and
rcll
sbb
scas
test
stos
inc
cmc
dec
add
int
mov
and
inc
jne
cmp
sbb
in
dec
dec
jmp
xor
rcrb
jmp
and
push
mov
stc
add
in
xchg
xchg
adc
xchg
cli
add
jne
xchg
pop
add
push
sub
stos
adc
push
pop
cmpsl
cmp
jmp
test
insb
jle
popf
cs
pop
inc
add
mov
inc
inc
sub
enter
and
loop
push
or
jmp
imul
jne
xor
repz
dec
adc
dec
dec
fwait
push
loop
inc
sbb
xchg
test
inc
sub
cmp
sbb
push
movsl
aad
xor
je
lcall
popf
out
rcll
repnz
pop
jo
arpl
push
addb
clc
push
mov
sbb
jae
insl
pop
addr16
adc
adc
rorl
inc
adc
dec
loop
adc
sbb
sub
mov
mov
mov
or
cmp
sbb
or
fisttps
jmp
in
pop
mov
or
mov
or
jmp
push
or
ret
mov
pop
addb
push
fadds
dec
imul
inc
jmp
inc
cwtl
mov
cmp
sbb
push
mov
xchg
adc
ret
fs
xor
sub
inc
dec
xchg
mov
int
insb
add
cmpsb
push
std
pushf
push
push
dec
das
push
mov
dec
xchg
outsb
shrb
cmp
push
push
cmp
jbe
pop
cmp
jmp
inc
dec
pop
pop
xchg
imul
lret
dec
lods
in
inc
dec
mov
rolb
int3
pop
adc
add
mov
lods
pop
in
xor
loop
add
pop
std
push
sbb
cmpxchg
jo
insb
lea
ljmp
sbb
mov
ja
mov
or
jo
xchg
push
andb
jecxz
jge
andl
and
leave
adc
mov
pop
cmpsl
clc
and
add
jne
mov
pop
leave
idivl
and
test
xchg
mov
inc
and
jg
inc
popa
adc
call
push
jbe
decb
in
in
cmp
adc
inc
inc
pushf
addr16
in
pop
xlat
cli
dec
adc
xchg
sti
je
push
jge
xor
inc
js
mov
xor
movsl
scas
sahf
xor
jnp
or
jge
addr16
adc
adc
pop
mov
push
or
pop
and
dec
fs
push
je
js
out
mov
inc
test
mov
mov
ret
jmp
push
lea
inc
dec
mov
jne
in
cmp
pop
jl
popf
cld
pop
push
mov
adc
and
or
movsb
and
cmp
and
push
incb
or
jmp
mov
push
clc
mov
test
cmp
add
dec
sub
cmp
lock
call
sub
push
or
add
xor
adc
mov
js
test
xor
and
or
adc
in
mov
or
rep
xchg
data16
repnz
dec
in
mov
cmp
fildl
dec
sbb
inc
xchg
out
icebp
inc
sbb
inc
fidivs
pop
xor
imul
iret
test
sbb
and
mov
daa
fimull
orl
inc
adc
mov
cmp
adc
jb
daa
push
inc
adc
and
lods
cmp
xchg
cmp
and
fstps
xor
jg
leave
lea
popf
jno
es
dec
pop
or
mov
leave
daa
rorl
inc
lea
add
testb
xchg
jle
cmp
adc
xor
inc
outsl
int
cmp
sub
push
test
sbb
push
xorb
inc
lock
nop
xchg
cmp
pushl
std
adc
add
xchg
jg
sbb
adc
jge
dec
dec
roll
pop
sub
adc
jb
ljmp
jg
cmp
pop
rolb
ja
cmp
inc
mov
faddl
dec
repnz
xchg
sbb
je
xor
sbb
add
inc
mov
sub
adcl
lea
xor
cmp
shr
dec
cld
and
cs
sarl
cld
shll
jmp
lret
mov
adc
adc
mov
sbb
rorl
lea
fiadds
movb
mov
mov
sbb
cmp
jae
lods
dec
rcrb
and
out
popa
pusha
imul
and
shl
mov
mov
inc
inc
xor
adc
leave
adc
adc
or
mov
rolb
inc
xchg
in
xchg
fisttpll
aad
bound
inc
popf
add
jb
and
pushf
mov
xor
shr
popf
adc
icebp
xchg
rcll
es
bound
push
dec
and
je
and
cmpsb
sub
or
jne
daa
lcall
xor
adc
cld
subl
pop
and
inc
lcall
lret
dec
and
andb
divl
jns
sahf
dec
das
or
mov
subps
lods
shrl
sub
addl
mov
dec
jmp
push
jp
je
sti
or
pop
inc
ja
xor
leave
sbb
push
or
push
das
sub
fsubrs
and
add
pop
rclb
pop
addl
mov
ljmp
cmp
pop
and
lcall
push
xchg
add
xchg
dec
sub
sub
cmp
in
adcl
les
push
jnp
scas
jp
mov
push
push
inc
sbb
scas
and
mov
or
sti
jne
push
sub
leave
hlt
push
and
cld
je
aas
or
and
push
push
mov
addr16
inc
inc
les
subb
and
out
mov
ror
in
dec
je
icebp
or
add
mov
js
outsl
fstl
push
mov
inc
imul
call
cmp
je
dec
mov
sub
and
sub
call
in
je
movhps
and
dec
or
add
lds
aad
dec
dec
sar
inc
pop
leave
enter
cmp
push
in
mov
std
xchg
nop
sarb
int
mull
sbb
sbb
adc
adc
pop
dec
sub
std
pop
lea
test
andl
sub
in
out
testb
mov
inc
adc
aam
push
xchg
inc
pop
orl
orl
jne
sbb
pop
xchg
xlat
xor
xchg
xor
sbb
inc
inc
adc
pop
lahf
mov
fsubrl
pop
sub
jmp
push
dec
and
jno
add
push
inc
sbb
cs
and
sub
testl
mov
mov
int3
rcrb
cmpsb
imul
sub
xor
and
adc
dec
xchg
xor
mov
add
push
rorb
inc
aas
xor
loope
jbe
mov
xor
lret
call
xchg
jp
dec
mov
out
push
xor
roll
jne
or
movl
int3
pop
add
add
cmp
movl
add
xor
or
bswap
and
and
mov
aam
xchg
fs
push
out
or
es
jmp
jb
xor
inc
and
dec
push
add
inc
mov
ljmp
mov
ret
and
fwait
dec
shld
lock
cwtl
jp
repz
int
sub
in
sub
xor
cmc
push
jb
incb
jbe
pop
inc
inc
dec
jne
bound
adc
xlat
sub
push
psubsb
add
and
adc
stc
lret
ret
mov
push
pop
nop
inc
shll
inc
notl
or
jmp
cmp
lds
push
add
inc
mov
mov
pop
mov
sbb
sub
je,pt
movsl
mov
mov
cmp
pop
arpl
sub
lock
and
les
sub
mov
inc
popf
int
cs
adc
jle
sbb
pop
or
add
cs
in
int
push
rcr
repnz
sbb
mov
cmc
or
pop
insl
inc
mov
icebp
xor
or
jo
std
pop
addr16
into
pusha
add
and
or
or
mov
dec
add
push
dec
sbb
push
cmp
adc
jb
lahf
jmp
adc
jae
ret
rol
je
jbe
pop
or
sbb
cmpl
or
ljmp
repz
pop
icebp
imul
pop
hlt
call
scas
pusha
fcoml
and
or
or
or
or
add
mul
ret
mov
cld
fs
adc
mov
jge
enter
lret
sub
dec
leave
ret
pop
inc
or
cmp
jle
decl
inc
cltd
xor
in
fadds
sbb
iret
fdivs
pusha
pop
mov
mov
andl
mov
or
and
icebp
xor
loop
gs
adc
mov
jno
cmp
jb
fimull
aam
add
pop
sbbl
mov
pop
mov
out
aad
cli
test
mov
test
jge
inc
enter
mov
jmp
sar
add
and
cmp
inc
xor
adc
call
sbb
lea
imul
or
aaa
push
push
sub
decb
adc
adc
cmp
aad
stc
and
or
les
ss
mov
cmc
test
popf
stos
int3
dec
pusha
or
xor
rol
sbb
adc
adc
push
nop
cwtl
lret
xchg
mov
and
enter
xor
push
test
jmp
push
fisubl
mov
inc
add
mov
mov
cmp
inc
or
call
ret
mov
in
rcrb
sbb
mov
adc
push
sub
movsb
push
and
sub
cld
bound
mov
or
outsb
pop
pop
or
and
cmpsb
mov
dec
inc
adc
push
test
sub
aaa
sahf
adc
std
xor
xor
testb
les
fstl
rorb
dec
mov
lea
or
pushf
mov
pop
scas
outsb
inc
sub
or
lea
stc
push
call
mov
mov
sti
fadds
lds
push
les
js
inc
int3
lahf
sub
push
movsl
and
or
or
test
lods
xor
and
sub
fsubs
mov
lcall
push
inc
or
stos
pusha
mov
and
dec
out
fs
stos
dec
adc
sub
and
cwtl
and
cmp
pop
enter
idiv
dec
inc
mov
lock
xlat
jge
shrb
mov
test
in
inc
inc
adc
adc
mov
pop
mov
and
insl
addr16
test
call
lret
sbb
andb
pop
inc
in
pusha
cmp
and
sbb
cmp
xchg
lods
push
pusha
mov
fsubl
popa
adc
mov
cwtl
add
shlb
adc
push
stc
nop
shlb
enter
and
cmpsb
inc
sbb
pusha
or
add
mov
addr16
data16
loopne
jle
mov
inc
xor
adc
js
jmp
test
stc
nop
push
nop
pop
inc
sub
stc
data16
sbb
clc
lret
inc
call
or
mov
add
aam
push
cmp
or
cmp
jp
mov
dec
and
dec
or
cld
cmp
xchg
or
and
mov
jle
push
push
xchg
cmp
sub
sbb
adc
and
dec
negb
push
sbb
dec
dec
pop
xchg
and
jp
mov
add
aas
and
inc
je
movsb
adc
mov
rorb
dec
call
xor
or
and
mov
pop
and
dec
jbe
xchg
pushf
inc
test
mov
adc
and
dec
dec
adcl
or
xchg
pusha
and
mov
and
dec
out
repnz
xor
adc
and
mov
pop
das
cltd
cltd
es
or
dec
push
cwtl
adc
or
xor
mov
cmpsb
xchg
lcall
xchg
mov
push
xor
inc
push
inc
mov
adc
and
dec
or
and
inc
mov
mov
dec
pop
xchg
dec
and
inc
xor
or
cld
cs
xchg
cld
les
test
or
mov
adc
inc
mov
movsb
sub
insb
cmp
orb
bound
mov
mov
inc
and
dec
ss
sub
sbb
inc
cmp
or
mov
ret
shlb
faddl
mov
pop
movsb
bound
or
inc
ss
or
xchg
mov
cwtl
adc
pusha
push
mov
cltd
xor
or
inc
adc
and
and
add
xor
xchg
mov
test
dec
dec
inc
xchg
xor
push
inc
push
add
adc
and
dec
mulb
or
mov
dec
xchg
call
push
lcall
hlt
cmp
or
dec
jno
fdivrl
mov
or
cmp
adc
sub
pushf
xchg
dec
and
data16
mov
mov
dec
cmp
inc
mov
add
or
mov
adc
and
dec
push
xchg
cmp
add
mov
cmp
adc
loope
adc
mov
add
aas
lock
or
pushl
mov
mov
jecxz
call
xchg
sbb
aas
mov
push
adc
sub
pop
sub
sub
je
lods
cmp
or
inc
das
push
outsb
push
or
push
or
jns
lods
xor
fs
push
imul
adc
jnp
adc
jbe
pusha
adc
popl
push
adc
lds
and
gs
je
sbb
cs
clc
inc
outsl
add
jb
addr16
inc
xor
aas
inc
dec
gs
outsb
call
jo
inc
mov
xchg
push
js
mov
add
or
mov
xchg
ljmp
or
jp
insl
ret
sbb
test
or
orb
enter
add
or
push
inc
or
adc
adc
xchg
xlat
push
filds
enter
add
or
add
or
xchg
add
add
xchg
add
add
inc
add
push
inc
inc
mov
add
pop
jb
cmp
sbb
mov
and
or
pushf
nop
jl
adc
adc
or
or
add
inc
xchg
int3
and
lods
insb
mov
adc
pushf
dec
pop
xchg
fsubl
cmp
mov
add
dec
inc
xchg
ret
inc
mov
adc
dec
push
xchg
shlb
xor
mov
adc
and
dec
dec
xchg
lret
inc
stos
push
ljmp
xchg
fisubl
cmp
mov
adc
and
dec
inc
xchg
and
inc
cmpsb
mov
adc
and
dec
push
xchg
and
inc
mov
mov
adc
and
dec
dec
xchg
into
and
inc
scas
outsb
mov
adc
and
dec
pop
xchg
fisubs
ds
mov
add
dec
inc
xchg
shll
inc
mov
adc
dec
push
xchg
shll
xor
mov
adc
and
dec
dec
xchg
leave
and
inc
test
sbb
dec
pop
xchg
fldenv
cmp
mov
adc
xchg
lds
and
in
adc
xchg
aad
xor
cmc
adc
xchg
int
sub
in
adc
xchg
frstor
cmp
std
adc
scas
ret
or
push
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
shlb
pop
and
and
pusha
and
dec
push
xchg
xor
jo
or
sub
push
xchg
cmp
js
add
mov
fs
dec
push
xchg
xor
je
add
ret
mov
adc
mov
cltd
lret
or
adc
or
mov
adc
and
dec
sbb
push
push
mov
adc
and
dec
sbb
or
and
inc
or
mov
adc
sub
add
add
cli
push
enter
or
or
or
xchg
or
or
enter
adc
mov
mov
add
xchg
sbb
sbb
inc
sbb
sbb
xchg
sbb
and
decb
repnz
ficoms
cmpsb
add
and
xchg
adc
adc
adc
pop
jl
in
jg
cmp
loope
shl
jns
les
repz
or
mov
mov
sbb
cmp
dec
xor
push
and
dec
jo
andb
inc
shl
cmp
sbb
push
push
insb
sub
xchg
sbb
push
gs
xor
cmp
lret
imul
jb
incb
fs
gs
leave
adc
or
xchg
adc
pop
inc
sbb
mov
adc
and
dec
cmp
arpl
adcl
and
dec
jecxz
add
inc
rcrb
xchg
jo
sarb
adc
movsb
or
and
dec
inc
xchg
popa
and
xorl
test
dec
add
or
adc
sbb
dec
xor
pop
fsubs
add
pop
js
and
test
or
mov
inc
mov
enter
add
enter
or
push
adc
push
sub
cmp
sub
outsb
and
pop
enter
adc
inc
rorb
push
xchg
push
inc
inc
or
popa
and
pop
pop
shrb
sahf
mov
xor
add
loopne
mov
aaa
movsb
or
outsl
and
xchg
add
cwtl
jns
adc
or
xor
sbb
pusha
in
cmp
in
jb
push
and
and
xchg
inc
lret
enter
loopne
jmp
mov
sbb
or
loope
and
adc
sbb
enter
outsl
and
xorl
stos
sub
pop
inc
lock
mov
xchg
mov
sub
nop
icebp
sbb
es
hlt
xor
call
dec
xor
std
inc
cmp
or
orb
clc
mov
js
jno
dec
pop
call
pop
or
jp
and
xor
sbb
push
pop
sub
repnz
push
inc
test
mov
push
xchg
shrb
lods
enter
shrl
mov
js
sub
cld
push
push
pusha
mov
pushf
and
addb
jp
sub
lret
aad
je
call
mov
sub
mov
adc
add
adc
cmp
xchg
sub
jns
sub
pushf
xchg
push
int3
mov
adcb
adc
movsb
cmp
cmpsl
mov
sub
sub
aas
add
adc
mov
cs
or
xor
jl
dec
xchg
js
adc
adc
dec
and
pop
mov
dec
or
gs
mov
inc
jbe
outsb
dec
xchg
cmovae
out
popa
jmp
cmp
insl
imul
add
imul
sub
addr16
dec
bound
arpl
sti
push
inc
xchg
jne
pop
xor
or
imul
and
push
jb
and
and
dec
outsb
movsb
in
insb
aam
fnstenv
stos
stc
outsl
outsb
sub
out
inc
pop
lret
sbb
jb
jne
inc
inc
mov
imul
dec
mov
mov
inc
inc
dec
pop
sbb
orl
int3
add
jae
jb
xchg
outsb
and
sub
sub
imul
cmp
and
and
inc
rclb
stc
inc
orl
aaa
jb
jo
jno
hlt
dec
popa
mov
sub
dec
pop
hlt
inc
inc
imul
mov
mov
cmp
xchg
sub
jo
sub
fwait
push
mov
shlb
mov
mov
pushf
adc
sub
jae
imul
jo
inc
mov
push
outsl
insb
dec
xchg
push
mov
movsb
test
jbe
dec
movsb
mov
adc
test
iret
xor
into
ret
loopne
adc
push
pop
add
arpl
fcompl
sahf
dec
xchg
js
xchg
adc
push
jb
cmp
lods
and
jb
jae
dec
rolb
and
dec
sahf
insl
push
jbe
add
adc
push
std
jo
pop
lock
mov
popa
push
fs
push
movsb
ret
or
cmpsb
fisubs
xor
inc
jne
push
mov
add
mov
dec
adc
and
pushl
jae
dec
sub
add
test
mov
xor
jmp
pop
jne
and
sbb
sarl
aaa
xchg
int3
lods
adc
sahf
movlps
sbb
repz
outsl
ja
push
push
mov
fisttpll
dec
loop
cmpsl
mov
xchg
add
sub
adc
add
and
dec
outsb
or
inc
push
fwait
and
js
push
mov
dec
callw
push
push
fdivl
adc
add
push
insl
xor
jg
and
ret
incl
lods
cld
test
or
imul
cmp
clc
lcall
dec
popf
shll
sub
fs
fbstp
jo
inc
mov
dec
jge
push
dec
xor
dec
popa
or
fs
xchg
pop
cmp
lahf
jo
xchg
add
mov
and
mov
push
dec
mov
push
dec
push
ret
rcrl
pop
dec
mov
andb
call
test
repz
cli
cltd
mov
sub
lcall
dec
jle
roll
popf
es
and
cmp
adc
rolb
sub
xor
dec
or
fistps
push
outsl
xor
mov
push
divb
jae
xchg
cmp
bound
scas
inc
sarb
dec
dec
add
dec
inc
push
dec
int
xchg
push
mov
dec
int
je
mov
pop
sbb
mov
lret
dec
mul
addr16
cmpsb
stos
adc
push
jb
jle
test
adc
rorb
outsl
negl
cmp
sbb
mov
aad
fmul
aam
sub
xor
ja
into
pop
adc
data16
dec
dec
jp
add
adc
or
shl
jae
jae
jmp
repnz
jnp
inc
pop
sbbb
or
pop
test
dec
jns
nop
inc
lea
clc
inc
push
or
les
pop
push
js
es
and
add
mov
cmp
adc
inc
inc
jg
les
push
imul
dec
adc
push
inc
xchg
jmp
cltd
cltd
mov
push
jmp
mov
lret
push
imul
and
mov
mov
and
inc
sahf
and
xchg
outsb
aam
arpl
repz
push
inc
adc
add
js
stos
gs
fs
jecxz
imul
mov
push
xor
mov
aaa
dec
sarl
ret
es
dec
adc
adc
mov
rcrl
arpl
insb
inc
pop
push
jb
dec
or
and
cli
push
test
out
pop
imul
jo
xchg
inc
add
xor
inc
shrb
and
and
hlt
jp
mov
std
movsb
mov
lcall
bound
jne
dec
cmpsb
sub
out
sbb
pusha
jns
xchg
stc
mov
aam
rcll
data16
push
jb
jbe
dec
imul
push
movsb
add
and
sub
push
sub
add
push
push
es
push
push
mov
andl
inc
in
adc
adc
mov
inc
add
negb
adc
dec
push
jae
xchg
sub
push
pop
sub
scas
dec
mov
mov
inc
xchg
xchg
ds
clc
jb
in
je
adc
dec
inc
and
xor
xchg
lods
dec
sub
dec
add
sub
xchg
loopne
mov
cmp
push
sbb
in
adc
inc
push
push
inc
add
push
and
adc
adc
ss
cmp
sbb
es
sub
lcall
fcomps
movsb
bound
jne
push
xchg
lods
add
mov
cs
insb
loopnew
aam
adc
jb
xor
stos
add
movsb
dec
adc
adc
repz
rol
cmp
pushf
lcall
adc
dec
pandn
sbb
add
add
jle
inc
dec
pop
imull
ljmp
xchg
or
xchg
adc
imul
cmp
adc
inc
sbb
or
out
xchg
ficoms
xchg
lret
and
enter
sub
dec
push
rcll
xor
inc
inc
push
push
push
lret
mov
push
pop
dec
gs
cltd
leave
mov
inc
dec
outsb
inc
push
sbb
sbb
pop
aas
adc
inc
pop
mov
xlat
pop
mov
xchg
and
jle
and
cmp
pop
pushf
inc
js
pop
or
mov
sub
cmp
aam
adc
add
xchg
xlat
push
lcall
dec
sub
lds
push
mov
pop
and
jmp
xchg
pop
popa
mov
gs
sbb
jl
push
outsb
xchg
pusha
push
mov
mov
inc
add
push
xor
adc
mov
add
xchg
dec
push
push
inc
push
push
dec
push
sbb
add
mov
insl
push
popf
push
test
insb
into
cmp
dec
jno
push
adc
iret
out
push
dec
pop
xchg
in
sbb
cmpsl
aam
inc
cmp
mov
mov
sbb
xor
jae
sub
push
sub
mov
cmpsb
cwtl
mov
xchg
sbb
jne
jb
mov
push
dec
bound
mov
hlt
dec
test
push
push
xchg
dec
push
dec
test
ret
mov
xor
loopne
lods
sbb
or
push
push
dec
pushf
dec
fs
pusha
clc
add
pop
dec
push
aad
jns
ret
popa
jae
xor
dec
in
incb
and
jmp
or
cmp
fs
push
sub
sbb
movsb
pop
jno
or
pop
dec
xchg
inc
sub
xor
fs
fisubrl
pop
pop
mov
clc
pop
pop
cld
xor
ficomps
lods
lods
xor
test
pop
inc
cmpsb
and
arpl
jg
nop
cli
sbb
push
sub
inc
loope
ja
dec
stos
push
cmp
jmp
arpl
or
test
stos
dec
jle
cwtl
frstor
inc
repnz
adc
insb
imul
pushf
lret
adc
aas
push
push
aas
adc
stos
sahf
or
mov
push
ss
xor
rorl
cltd
dec
mov
int3
sti
xchg
sub
imul
add
xchg
jecxz
xchg
in
and
or
sbb
sub
pop
inc
arpl
test
inc
repnz
pop
adc
fwait
cmp
mov
mov
sahf
adc
inc
pushf
cltd
add
jbe
xor
cmp
gs
jno
and
xchg
lock
imul
and
loopne
and
adc
rorb
fildll
push
push
mov
dec
mov
out
or
push
jno
push
add
imulb
inc
pushf
push
push
mov
inc
jno
mov
mov
mov
aam
les
inc
dec
add
je
cwtl
and
xchg
and
push
jbe
adc
pop
fmuls
ljmp
mov
add
push
push
or
or
js
push
imul
inc
push
nop
fucomi
aam
and
and
or
jae
dec
xchg
push
leave
outsl
das
outsl
imul
inc
movl
cmp
push
add
std
cs
mov
mov
rcll
adc
popa
push
and
cmp
mov
je
mov
xchg
imul
incb
push
imul
loop,pn
add
push
insb
dec
aas
push
pop
inc
cmp
arpl
xlat
add
outsb
arpl
fistps
inc
in
data16
xlat
fucomip
push
fistpll
negb
pop
test
pop
add
imul
fstl
inc
pop
gs
addl
push
or
xorl
add
dec
jp
pop
addl
push
and
inc
xor
pushf
jnp
sbb
push
push
iret
dec
dec
xchg
int
fldl
lds
es
aaa
out
mov
adc
loope,pn
dec
pop
push
xor
push
inc
scas
sub
jne
jg
gs
adcb
loope
mov
fiaddl
push
movsb
fs
push
push
xchg
data16
addr16
ror
rorb
dec
das
into
and
orl
or
bound
adc
or
sub
pop
push
lahf
pop
dec
addl
xor
or
inc
in
jb
je
cwtl
into
sbb
inc
and
pop
jo
scas
xchg
mov
inc
mov
fistpl
loop
dec
mov
cltd
test
iret
aam
adc
mov
push
mov
in
pop
fbld
imul
inc
int3
xor
push
jo
adc
clc
sub
mov
push
sub
xchg
popfw
xor
and
lods
pusha
je
imul
inc
cs
inc
pushf
js,pt
pop
enter
xor
and
or
xor
dec
and
dec
jecxz
es
inc
mov
imull
or
mov
push
sub
adc
outsl
xchg
inc
xchg
and
lea
adc
mov
subl
inc
cwtl
pop
add
dec
dec
dec
dec
dec
dec
pop
dec
add
push
push
push
push
push
push
push
add
pop
popa
bound
mov
add
sub
outsb
xchg
push
jno
xchg
jne
ja
js
jp
xor
xor
xor
sub
dec
lods
xor
loopne
or
aaa
sbb
orl
xor
sbb
sbb
and
pop
push
les
xor
aaa
xor
xor
xchg
or
sub
popa
add
xor
xor
sub
sub
sub
inc
mov
popa
fs
dec
and
aaa
int
dec
mov
test
xchg
xchg
insb
jo
xchg
mov
sub
push
mov
push
xchg
xor
mov
shll
mov
jne
scas
inc
ror
mov
pop
cli
and
sub
faddl
xor
bound
mov
div
sahf
dec
jo
popa
and
xchg
sbb
lods
sbb
ljmp
insl
pop
jge
je
cs
mov
xor
inc
xchg
nop
sbb
js
in
push
mov
mov
sbb
adc
xchg
or
and
sbb
js
loope
jbe
xor
pop
push
out
adc
and
fcompl
sbb
cmp
push
dec
fisttpll
jecxz
sbb
sbb
push
add
mov
mov
pop
in
scas
dec
jmp
push
mov
cmp
fildll
adcb
dec
and
push
jmp
sbb
cmp
sbb
lock
sub
ret
jge
dec
sbb
lods
scas
adc
xchg
push
mov
adc
fdiv
or
adc
push
inc
jae
lret
sbb
xor
xor
or
int3
mov
enter
pusha
jb
cmp
or
push
loopne
and
xchg
pop
enter
dec
push
inc
cmp
xchg
shlb
push
inc
adc
push
adc
or
mov
dec
xor
lock
mov
lret
and
jb
cmp
enter
and
enter
les
pop
orb
inc
pop
sub
xchg
cwtl
and
and
leave
fdivrs
mov
inc
sub
mov
enter
xor
clc
mov
mov
add
mov
cmp
sbb
mov
and
and
movsb
in
jb
cmp
in
out
pop
mov
and
cmp
cmp
sbb
mov
and
dec
jb
cmp
push
rcrb
sbb
mov
inc
and
add
cmp
sbb
mov
and
out
jno
pop
in
jb
cmp
jle
inc
ds
xchg
sbb
outsb
in
jb
cmp
sbb
mov
cs
add
push
sbb
fwait
add
mov
and
in
jb
cmp
andl
pop
cmp
sbb
xchg
jns
cmp
sarb
inc
sub
mov
and
stc
push
sbb
mov
add
push
and
xor
sbb
mov
and
in
jl
mov
and
cmp
pop
and
sub
jb
cmp
cli
mov
add
out
add
jl
mov
and
lret
gs
add
pop
xchg
sbb
xchg
stc
jnp
cmp
in
jb
cmp
sbb
mov
and
in
jb
pop
xchg
ja
aaa
in
jl
mov
and
in
jb
ds
pop
and
xchg
sahf
bnd
aas
sbb
xchg
outsl
enter
jb
cmp
jg
mov
incb
repnz
xchg
xchg
cld
rorl
icebp
incb
repnz
cltd
in
jg
mov
lds
xchg
movsl
cld
in
in
jg
aad
mov
enter
int
lods
in
jg
popf
stc
fstpl
enter
std
cld
ret
in
jg
jecxz
xchg
pop
enter
mov
repz
in
jg
stos
stc
jmp
enter
fcomi
mov
and
stc
cmpsl
pop
enter
xchg
repnz
aas
xchg
mov
testl
repnz
aas
xchg
mov
push
add
or
push
pop
push
mov
adc
and
adc
add
push
and
dec
pop
inc
inc
and
and
and
add
dec
and
push
and
inc
pop
addr16
push
mov
pusha
xchg
inc
add
mov
mov
les
sub
mov
nop
inc
lret
push
add
xor
push
or
roll
mov
fs
jnp
jg
popf
pushf
xchg
jl
cmc
outsl
dec
mov
jne
dec
push
scas
cmc
fs
inc
dec
shl
jae
pop
inc
dec
nop
and
repnz
sub
daa
arpl
fwait
loopne
mov
sub
cmp
adc
cmp
dec
jo
aas
adc
incl
pop
and
inc
pop
aas
mov
mov
add
jmp
cmpb
and
das
sub
jo
sbb
test
push
push
in
or
adc
js
lret
or
mov
adc
mov
dec
insl
mov
add
out
lods
add
adc
xchg
popf
adc
out
sbb
mov
mov
or
or
int3
xor
dec
insl
add
fs
sbb
jo
popa
push
jns
loop
and
sbb
arpl
leave
mov
jb
push
popa
int
imul
gs
or
cmp
jo
es
push
cmpsb
pop
imul
xor
and
push
cmpsl
inc
xchg
outsb
mov
add
and
inc
jae
mov
rcrb
mov
xor
add
xor
cmp
jae
or
xor
xor
pop
push
sbb
pusha
int3
leave
dec
sbb
or
insb
inc
sbb
adc
aaa
dec
pop
ljmp
lods
sub
loopne
cltd
or
and
or
xor
lds
jae
push
test
data16
imul
lea
and
sbb
xchg
inc
or
frstor
ljmp
je
insl
out
xchg
enter
add
and
sbb
cmpsb
mov
gs
push
inc
int3
xor
and
outsl
and
inc
xchg
test
push
mov
push
xchg
fs
inc
jae
scas
inc
andb
push
test
jae
sub
jo
push
push
je
sub
dec
mov
push
js
sbb
xor
push
inc
and
dec
cmpsb
cmpsb
pop
xchg
or
outsb
jmp
add
add
lret
test
mov
adc
cmp
adc
sti
push
or
adc
mov
dec
mulps
popl
xor
nop
mov
hlt
rclb
xor
in
call
cltd
hlt
mov
cmp
cmp
jl
cmpb
push
adc
iret
jecxz
push
ss
sbb
sub
xor
jns
nop
mov
ffreep
sbb
test
call
add
lock
or
and
inc
in
push
lock
nop
clc
mov
fdivr
out
adc
call
mov
sar
idiv
cld
or
cmp
xchg
cmpsb
cmp
cmp
es
test
fadds
cmp
inc
mov
ret
mov
test
repz
inc
ds
in
call
adc
fldcw
sub
insb
movsl
mov
cld
push
xor
leave
sub
inc
fstps
jl
movsl
icebp
mov
xor
je
jbe
js
sbb
xor
popf
sbb
push
xor
and
xor
and
xor
pop
fldenv
insb
push
fcompl
add
adc
shr
in
xchg
jbe
in
call
cmp
push
and
xlat
dec
repnz
mov
mov
ret
enter
shl
aam
fdiv
fdiv
loopne
in
call
repz
lock
sub
xor
dec
in
ja
xchg
hlt
cld
lock
push
cmp
cmp
xchg
cmp
rorb
sbb
pop
iret
jb
cltd
dec
cmpsb
and
dec
jp
jl
jle
jle
jle
jg
jle
jle
sbb
aas
inc
popf
inc
sbb
mov
lahf
cmc
movsl
stos
loope
and
add
jl
jle
js
sbb
xor
sbb
fstpl
insb
dec
in
iret
out
add
xor
mov
ret
clc
rolb
xor
in
call
jns
cwtl
clc
mov
cld
repnz
push
cmp
nop
cmp
cmp
cld
push
cs
dec
push
movsl
iret
psubsw
aaa
or
mov
cmp
sahf
jo
jl
pop
fiaddl
sub
dec
leave
pop
rorl
jmp
jb
je
jbe
js
sbb
cmp
popf
testb
cmp
sahf
mov
iret
lahf
pop
xor
push
and
pminub
aas
movsb
xchg
shll
aad
cltd
jnp
jo
xor
in
call
mov
fwait
clc
inc
cmp
cmp
and
inc
dec
dec
addl
and
mov
xor
in
call
xor
cmp
cmp
cmpl
aas
scas
push
jbe
mov
mov
mov
iret
hlt
iret
inc
adc
xor
mov
cmp
test
add
jb
je
jbe
js
jp
jl
sbb
cmp
lahf
adc
mov
cmp
cmpsl
xchg
out
out
out
loope
cmp
leave
inc
rorl
push
cmp
nop
cmp
cmp
mov
loopne
jmp
cmp
dec
mov
push
sub
sarb
shlb
mov
dec
dec
mov
mov
scas
dec
mov
ror
fcmove
sub
jo
inc
mov
les
add
or
adc
aas
flds
push
jmp
scas
stc
enter
in
stc
clc
pop
xor
je
pop
jns
cmp
loope
mov
pop
jbe
js
dec
fbstp
dec
sbb
mov
dec
repz
repz
repz
repz
repz
repnz
adc
jo
je
js
jl
cmp
stc
mov
repnz
clc
clc
add
and
jp
jl
jle
jle
jle
jle
jle
jle
sbb
aaa
and
sahf
ja
xchg
lahf
xchg
pop
mov
lahf
hlt
xchg
cmp
daa
cs
dec
addr16
xchg
out
loope
cmp
leave
and
loope
jmp
mov
mov
xchg
sub
push
or
pusha
daa
sarb
lcall
xchg
adc
lock
pop
in
mov
js
pop
mov
aas
lret
aas
call
push
daa
cmp
dec
dec
mov
nop
setge
cmp
dec
mov
ret
jg
cwtl
jecxz
repz
ds
push
mov
js
jp
jl
dec
int
aas
idivl
cld
push
or
mov
dec
sqrtps
iret
test
lods
iret
fmul
icebp
mov
fs
je
adc
xor
hlt
stos
dec
mov
iret
repnz
clc
iret
std
ret
push
xor
mov
dec
orb
fdivrp
clc
or
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
dec
in
or
sbb
jge
cmpb
xchg
mov
scas
aas
mov
aas
out
push
add
dec
or
daa
xchg
xor
inc
out
out
out
out
out
out
out
out
out
out
out
in
mov
repz
repz
lock
jbe
cmp
push
and
inc
pop
jmp
popf
sub
int3
aas
loope
adc
and
push
or
sbb
es
inc
hlt
dec
clc
push
cld
pop
cld
imul
xchg
cld
lahf
cld
lods
cld
mov
cld
loop
lock
std
cld
or
cmp
sub
fnstsw
add
dec
push
out
out
out
out
idivl
test
xchg
in
rclb
shr
in
popf
lock
cmc
sti
jecxz
testl
mov
push
shll
jnp
fimuls
shlb
jbe
js
jp
jl
sbb
outsb
popf
js
mov
aas
psrlq
mov
shl
jecxz
hlt
push
mov
adc
sub
push
push
bound
mov
enter
ror
aam
fmul
fmul
loopne
in
call
leave
hlt
daa
jle
out
or
pop
sbbb
dec
imul
je
jbe
dec
orl
iret
pushf
iret
mov
daa
push
hlt
mov
dec
arpl
ret
cmp
pushf
pop
popf
ds
out
ss
in
call
cmp
pop
cmp
and
rcll
cmp
sub
add
cmp
cmp
jg
scas
mov
ret
out
or
rcr
fchs
sbb
and
into
cmp
jp
cmp
in
sub
sub
add
jl
pusha
aas
outsb
aas
mov
or
mov
lahf
fcomps
lock
fiadds
jne
nop
daa
mov
mov
addl
rclb
xor
push
andb
jecxz
add
inc
leave
mov
cmp
xor
and
dec
xor
nop
in
in
xchg
repnz
aaa
pop
popf
jl
pushf
sahf
les
stc
xchg
pop
sbbl
mov
cmp
and
dec
into
cmpsb
dec
push
sbbl
fs
dec
or
jb
je
jbe
js
jp
jl
jle
pop
leave
dec
sbb
cmp
pop
cmp
jl
xchg
xchg
aas
mov
push
adc
push
shll
aas
add
sahf
outsl
push
mov
dec
cli
lcall
dec
nop
add
add
jp
ds
mov
into
pusha
scas
cmp
loope
jmp
repz
pop
xor
sub
je
jnp
xchg
popf
aas
test
mov
or
sbb
iret
inc
xsha1
cmpsb
dec
mov
mov
daa
ret
cld
shll
add
jp
jl
jle
jle
dec
xor
pop
mov
pminsw
or
loope
jmp
jno
ds
lock
add
cmovns
adc
mov
jge
mov
mov
cmp
dec
push
fld1
add
pop
pop
sub
pop
je
xchg
in
ljmp
and
mov
xchg
shrl
jmp
push
call
mov
cmp
mov
ret
imul
jecxz
repz
ljmp
in
call
movsl
hlt
lods
clc
leave
cld
out
clc
dec
hlt
sbb
add
sub
mov
clc
mov
add
adc
pop
inc
ja
adc
xor
call
shl
aad
je
repnz
sti
pop
or
inc
dec
movsb
xchg
cmpsl
repz
sub
pop
shll
mov
je
and
xor
cmp
push
lock
pop
cld
xchg
aas
les
fs
sbb
aaa
sbb
cmp
inc
rol
mov
and
sub
out
les
fwait
jecxz
icebp
in
cmp
mov
sahf
mov
out
add
daa
leave
mov
xorb
xchg
mov
xor
mov
or
adc
sbb
stos
and
and
sub
sub
int3
jle
dec
mov
aaa
sbb
cmp
clc
cmp
je
jbe
sbb
aas
lret
cltd
fbld
mov
loopne
add
mov
sub
jle
pusha
shl
xor
fimuls
cmp
xchg
sub
xchg
ret
cmp
mov
sub
pop
and
cwtl
add
sbb
cmp
jb
andl
lock
pop
pop
xor
inc
xor
and
sarb
cmp
xchg
cmp
movsb
cmpsl
test
lods
out
out
loope
cmp
pop
cmp
rolb
xor
loopne
xor
cmpsb
cwtl
jle
mov
sbb
xor
xchg
add
jle
mov
xor
aaa
sub
cmp
dec
cmp
adc
inc
aam
jmp
push
je
arpl
jle
jle
nop
test
adc
cmp
jl
mov
ret
outsb
shlb
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
cmp
inc
xchg
xchg
sahf
aam
in
ljmp
adc
lock
shll
sbb
cmp
popf
dec
adc
mov
jl
cmp
bnd
push
es
adc
sub
dec
dec
adc
mov
lods
cmp
push
pop
stos
pusha
in
loope
xor
cld
mov
mov
nop
cld
mov
lahf
mov
mov
in
push
out
out
in
mov
daa
add
pop
xchg
lcall
out
out
out
out
push
xor
fmuls
punpcklbw
jl
mov
mov
hlt
cld
cld
cld
add
xor
lods
cmpsb
mov
push
cmpsl
mov
out
out
in
xchg
int3
fdiv
hlt
imul
dec
xchg
call
pushf
sub
std
in
loopne
popf
sub
mulb
jmp
mov
call
shlb
and
cmp
dec
mov
dec
jo
in
test
mov
lret
in
inc
pushf
xorl
xor
dec
loope
jno
icebp
push
stc
mov
outsb
aas
enter
or
sbb
add
sub
aas
nop
aas
lods
aas
mov
aas
call
sbb
lcall
push
add
cwtl
add
xchg
xchg
test
xchg
mov
popa
aam
jl
cmp
filds
mov
dec
inc
outsl
insl
dec
filds
inc
sbb
in
add
add
nop
jl
add
cmpsl
jl
mov
push
adc
fsubl
pop
faddl
loope
test
mov
lds
add
jo
dec
or
mov
andb
add
mov
mov
in
mov
jg
add
mov
jne
bound
xchg
sub
ss
or
mov
xor
movsl
jmp
mov
daa
insl
mov
je
add
sub
sub
sub
cmpsl
dec
xor
loopne
add
in
ss
sub
fstpl
push
push
push
das
ret
imul
jb
jl
sub
popf
xchg
pop
dec
add
cwtl
pop
pop
and
shrl
lcall
mov
stos
and
xor
or
sub
iret
daa
jmp
adc
dec
lcall
add
ja
cmp
test
sub
es
test
add
pop
cs
sti
pusha
jmp
push
lods
call
jmp
sub
out
jmp
int
push
and
jmp
add
addl
jmp
icebp
in
jae
shr
cli
ret
jmp
push
jmp
popf
in
pushl
jmp
daa
arpl
mov
jmp
es
ljmp
jmp
jg
dec
je
shr
push
jmp
xchg
jns
ret
jmp
insl
adc
add
add
in
call
jmp
jae
add
pop
jmp
sub
jmp
xor
popl
add
jmp
in
pushf
inc
imul
call
mov
mov
cmove
xlat
dec
stc
nop
insl
cwtl
aas
mov
js
push
sarb
popf
pop
aad
loop
cwtl
cmp
xor
xor
or
cmp
sbbl
cmp
sub
insb
lock
rcll
push
lret
pop
enter
jle
adc
mov
push
and
mov
int3
arpl
mov
or
hlt
addr16
cmpsb
mov
cltd
adc
jg
mov
fists
out
push
daa
mov
jne
lock
xor
iret
cmp
lahf
js
push
lock
pop
xor
adc
sub
mov
mov
aas
es
test
cmpl
adc
lret
sub
xchg
or
xlat
cmp
cmc
bnd
loop
mov
jae
and
mov
stc
loope
mov
mov
nop
mov
divb
insl
int3
adc
mov
jns
mov
dec
in
push
repnz
clc
loop
mov
scas
xorb
mov
orl
jg
jl
and
or
cmc
test
jg
xor
inc
sub
add
fildl
les
mov
or
cmc
xchg
mov
mov
nop
addl
cmc
cmp
std
insl
mov
arpl
xor
mov
sub
xchg
xor
sub
arpl
cmc
rolb
mov
sub
xor
push
mov
cmp
sub
cld
je
aam
push
lock
fsts
arpl
lods
enter
inc
repz
cltd
jg
arpl
das
and
push
push
jae
int3
aad
inc
sub
arpl
xchg
pop
cmp
lods
and
movb
sub
test
pusha
add
cld
jns,pt
enter
fmuls
cltd
cmpsl
enter
sbb
xor
cmc
in
jmp
xorl
push
add
call
subb
xchg
or
and
push
fwait
insb
sub
cmp
dec
and
mov
dec
hlt
in
out
mov
cmc
and
frstor
jnp
add
js
push
mov
subps
mov
add
or
lcall
movsb
mov
lock
imul
mov
pushl
xor
lods
xchg
push
idivl
lock
jns
mov
jnp
out
add
pop
inc
cmp
mov
cmc
ret
jo
pop
sub
cmc
jp
aam
repz
pop
shr
sbb
xchg
jbe
inc
mov
adc
test
xor
out
add
and
lret
cmp
mov
cmc
dec
test
out
ficoms
ljmp
out
insb
pusha
bound
jmp
add
nop
mov
lret
dec
inc
stos
aad
subl
or
sbbl
and
sti
hlt
dec
dec
xor
push
pop
pop
fistpll
mov
add
repz
or
cmpl
add
jl
and
mov
and
mov
push
popa
ret
lods
adcl
lock
xor
test
mov
mov
test
push
pop
sbb
xorb
push
mov
sbbb
test
ss
pop
lcall
mov
pop
in
xor
outsl
test
pop
inc
xlat
cmpsb
jl
cltd
mov
hlt
ds
jmp
cmp
mov
adc
daa
loop
movsb
push
or
dec
daa
scas
jge
gs
out
pop
decl
or
insb
push
sub
lahf
jge
sbb
xchg
lcall
cmp
or
add
push
je
push
adc
inc
sub
xor
clts
inc
aaa
enter
dec
hlt
incb
jl
mov
cwtl
in
paddusb
dec
jns
pop
test
pusha
loop
in
mov
addb
nop
xchg
mov
cmp
pushf
test
inc
decb
or
bound
xchg
push
mov
cmpb
jg
cmp
cld
icebp
mov
add
in
fwait
mov
hlt
popa
lcall
adc
fsubrs
mov
xorl
mov
cmc
pop
test
add
incl
clc
nop
insb
xchg
out
sub
arpl
lods
aam
push
out
mov
add
in
or
inc
pusha
jmp
mov
fstl
fs
push
mov
add
movsb
mov
jmp
movsb
mov
add
cmp
pop
nop
hlt
jle
xchg
nop
inc
aas
sbb
jmp
push
scas
jnp
cmc
mov
pop
mov
push
paddd
xor
mov
arpl
add
popf
dec
adc
mov
xchg
cmp
push
mov
add
sub
bound
das
mov
cmp
xor
jmp
jo
mov
mov
jnp
fadds
pop
push
scas
sub
or
sub
jne
cmp
pop
mov
push
leave
xchg
jns
lds
cltd
xor
cmpsb
xchg
int3
xchg
mov
loopne
enter
sbbb
mov
jbe
xchg
in
fwait
inc
adc
cmp
xchg
repnz
pop
cltd
xor
das
rorl
addr16
lahf
adc
stos
sbb
fisttpl
push
mov
and
cmp
mov
ss
jmp
and
mov
stos
mov
sbb
dec
imul
nop
cli
idivb
sarl
fsts
mov
jae
push
arpl
test
lods
in
pusha
aad
sbb
jne
mov
cmc
fmul
lcall
mov
pop
xor
xchg
fmuls
sbb
pop
pusha
add
fldt
and
clc
dec
jns
call
inc
pop
inc
stos
cmp
dec
dec
movsl
mov
stos
pop
and
dec
paddusw
jmp
into
jl
fs
jg
jb
push
pop
js
push
lret
fldenv
arpl
test
jge
and
loopne
mov
aam
add
clc
fstl
mov
ret
std
jp
pop
jb
or
or
lock
ret
scas
ret
imul
dec
scas
push
nop
fdivrs
xor
out
pop
aam
sbbl
sub
or
fincstp
ja
xchg
or
and
adc
pop
inc
stos
inc
fwait
cmpsb
into
mov
mov
push
sbb
imul
std
jp
xchg
loop
or
or
lock
push
sub
mov
mov
mov
imul
push
sbb
fsubr
pop
aam
xchg
and
push
cmpl
push
or
and
sbb
fs
adc
outsl
push
lret
cs
mov
jbe
mov
scas
sahf
bound
mov
mov
int3
mov
and
jp
inc
shlb
xchg
add
adc
and
inc
rorb
mov
mov
hlt
out
mov
adcl
mov
out
adc
sub
pop
mov
push
mov
ljmp
bound
mov
fstl
or
mov
mov
movsl
add
popa
je
imul
fld
dec
loopne
xchg
lock
hlt
popa
xchg
outsl
mov
jp
push
jp
or
or
lock
dec
mov
xchg
or
lock
xor
lods
adc
dec
xor
xchg
enter
popf
jl
push
dec
mov
int
and
scas
mov
jle
imul
mov
pop
imul
add
insb
jae
xchg
pushf
push
and
inc
out
pop
push
adc
jne
mov
or
fincstp
xchg
xchg
xchg
and
call
inc
pop
inc
stos
sbb
push
imul
lretw
ret
or
pushf
or
ja
call
mov
sbb
inc
pop
cli
aaa
sbb
and
ud1
nop
call
cmovs
jecxz
mov
xor
enter
addl
push
stc
jnp
add
add
mov
ret
outsl
mov
cmpsl
mov
setle
dec
bswap
mov
sti
sub
fidivrs
setle
dec
setle
dec
setle
dec
setle
dec
bswap
mov
sti
sub
fidivrs
setle
dec
setle
dec
ucomiss
ljmp
mov
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
mov
outsb
jmp
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
jle
into
mov
cmpsl
mov
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
jle
or
sub
dec
cmpsl
cmp
ljmp
sbb
and
pop
clc
mov
into
xchg
fcmovnu
mov
and
pusha
and
sbb
jmp
je
or
addr16
wrmsr
aam
int3
inc
cmpsl
out
dec
xchg
cmp
adc
push
push
lea
xchg
scas
mov
sarb
loope
mov
popf
inc
xchg
dec
or
mov
leave
and
jnp
jecxz
pop
outsl
pop
frstor
inc
jl
or
sub
popa
push
iret
push
mov
in
add
fcomps
out
addr16
xor
adc
add
fldt
jns
out
mov
cwtl
dec
ljmp
add
lcall
pop
in
and
or
mov
insl
mov
cmpl
xor
lcall
ds
loope
js
int
jae
sub
add
pop
movsl
inc
adc
mov
inc
test
popf
cmc
daa
sub
pop
inc
cmp
test
sub
and
fidivrl
xchg
push
pop
sub
push
sub
push
lcall
pop
sarb
pop
add
jg
or
xchg
xor
dec
jl
add
fiadds
jo
pop
arpl
adc
mov
and
test
arpl
pop
jmp
push
sub
popf
pop
add
push
mov
dec
and
js
in
jl
mov
aaa
ljmp
leave
dec
and
outsb
mov
cmpsl
pop
fists
mov
cld
xor
fnstenv
iret
add
adc
and
xchg
push
push
mov
cli
inc
and
insb
hlt
inc
pop
rcrb
add
fistps
jns
push
jecxz
jle
inc
lods
mov
or
cmc
dec
ds
push
sbb
ljmp
scas
push
les
mov
sbb
xor
xor
jnp
pop
repz
mov
cmp
dec
cmp
sbb
lock
inc
cmpl
or
es
out
cmc
insb
jle
hlt
in
pop
fwait
inc
push
in
push
mov
in
mov
scas
fisubl
add
out
or
dec
popl
mov
push
xchg
sub
jl
add
repz
aam
adc
sub
ds
sti
pushf
mov
mov
push
cmp
dec
xchg
xor
cli
xor
enter
lods
subb
test
pop
loopne
adc
out
adc
pushf
rcrb
popa
cmpsl
fcmovne
add
gs
test
out
je
enter
mov
lret
fbstp
sbb
inc
movsl
je
insl
fwait
and
pushf
push
shrb
int3
jno
gs
push
sbb
lahf
adc
mov
or
inc
ret
out
xor
arpl
cld
add
imul
cld
pop
push
and
jge
add
lods
add
mov
mov
inc
jbe
out
ret
or
mov
lds
movsb
mov
or
in
or
and
or
jns
adc
push
inc
mov
pop
lea
dec
sbb
dec
popa
inc
dec
mov
insb
dec
mov
pushw
in
dec
push
pop
into
jp
je
movsb
pop
imul
and
jmp
inc
adc
loop,pt
jno
inc
sub
push
pop
inc
jle
or
xchg
ss
mov
cltd
or
in
and
lret
ja
dec
sti
stc
test
sub
dec
dec
inc
cld
jns
mov
adc
adc
lahf
bound
jbe
stos
cmp
test
pop
pop
pop
or
mov
stos
mov
dec
stos
pop
add
mov
or
xchg
mov
push
cmpsb
jno
rol
insb
loop
jae
aad
cmp
inc
mov
rol
inc
pop
outsl
mov
fistpll
faddl
push
jb
and
js
movsl
sub
xchg
xor
adc
pop
js
sbb
sub
xchg
lcall
add
sub
inc
push
xorb
cmp
incb
xchg
mov
fisubl
cld
and
push
dec
mov
arpl
jecxz
or
mov
jns
lds
loopne
loop
inc
in
test
shll
lods
nop
lods
ss
lret
pop
addb
into
push
sbb
push
fadd
mov
or
dec
imul
push
fwait
add
jns
dec
adc
cmpsb
cmpb
subl
jle
shll
or
pop
lret
sub
popa
adc
adc
loope
fs
lret
xchg
outsl
fsubl
inc
adc
in
js
gs
adc
add
xchg
in
in
lcall
imul
mov
imul
dec
imul
shr
push
push
orb
loope
or
addb
ss
jecxz
sbb
sti
mov
dec
xchg
xor
or
fldl
int3
adc
mov
cld
pop
xchg
cmpsb
pop
mov
cmp
or
xorb
leave
fldenv
or
pop
addl
call
adc
test
in
imulb
movhps
pop
les
insb
mov
push
pop
jge
stc
sub
and
faddp
add
xorb
cmpsb
adc
pop
mov
and
pop
mov
out
jnp
mov
jb
push
fnstcw
addr16
sub
pop
imul
jae
adcb
push
int3
outsb
mov
cs
call
std
lods
sahf
cwtl
lret
enter
or
stos
mov
bound
xchg
cwtl
ficompl
jb
adc
roll
shrb
mov
fstpt
js
shrb
sub
insb
mov
push
jle
ret
add
in
mov
mov
out
scas
cmp
loop
rolb
sbb
sbb
push
faddp
jle
bound
mov
cmpsb
pop
mov
push
mov
mov
jae
mov
rol
push
pop
neg
loop
dec
adc
sub
xchg
or
mov
push
lock
mov
cmpl
ss
pop
fcoms
add
cmpsl
hlt
mov
jb
leave
sub
mov
cmpsb
call
rol
nop
inc
xlat
mov
ja
test
aam
stos
rsqrtps
aad
jo
push
fwait
and
les
push
out
insl
adc
mov
mov
cmp
xchg
sub
sahf
jns
lds
loopne
pop
outsl
mov
or
and
mov
in
in
add
fsts
scas
lret
pop
shrl
mov
adc
pushf
enter
mov
xchg
pop
and
fdivrs
xor
je
inc
and
lods
inc
push
aam
mov
arpl
sub
and
pop
add
pushf
nop
dec
sub
inc
and
mov
movsb
xor
test
xor
icebp
add
push
push
in
in
jge
mov
stos
lahf
rolb
pop
push
daa
jmp
inc
fsubrl
jge
jno
imul
lds
pop
andl
jp
std
ret
leave
ret
aad
jno
insb
sbb
test
out
stc
int3
shl
cmpsb
rclb
pop
push
lret
out
inc
leave
mov
push
jg
cs
sbb
push
sub
orl
mov
cli
jp
int3
repz
sub
movaps
push
xchg
test
jns
dec
xor
jge
ret
and
cmp
fcomps
in
dec
sub
stos
mov
and
sbb
test
pop
and
lock
jecxz
ret
inc
movsb
mov
add
push
sub
lea
xchg
aaa
faddl
imul
pop
mov
das
inc
stc
lds
sbb
fsubs
dec
ds
movsl
shrb
xor
xor
cmp
sbb
pop
fidivrs
sub
mov
xchg
push
adc
push
mov
mov
or
push
sahf
popf
sbb
das
push
out
jge
cmp
int
adc
bound
pop
mov
inc
sub
sbb
xchg
jge
and
jge
aaa
mov
add
sbbl
rcr
mov
pushf
pop
es
or
push
mov
or
mov
pop
jl
or
and
stos
icebp
jge
and
lret
fnstsw
lret
sbb
inc
enter
shll
push
jnp
pusha
fwait
lcall
and
stos
jb
pop
cmc
fwait
std
aad
inc
js
inc
inc
and
lcall
cmpsl
cmpsl
nop
dec
aas
mov
push
out
sbb
std
je
sub
aam
lods
ljmp
and
mov
inc
popa
pop
dec
xlat
outsl
add
jl
pop
jge
mov
jo
cmp
inc
hlt
ds
test
sti
xor
icebp
mov
test
je,pt
fidivrl
xor
add
test
scas
xchg
repnz
pop
mov
loope
add
lgs
dec
shl
cs
icebp
aam
cmp
xchg
push
das
xchg
icebp
lcall
imul
dec
add
loopne
mov
pop
stos
cmp
insl
push
fsubp
mov
les
xchg
cmp
movsb
pop
and
cmpsl
xchg
aad
adc
jmp
cmp
cwtl
push
mov
mov
pop
inc
mov
sbb
ficoms
xor
and
jge
shr
insb
fisttps
lods
pop
lods
out
gs
mov
es
lock
xchg
cmp
js
dec
aaa
imul
es
cmp
popa
adc
xor
mov
pop
imull
lahf
test
push
mov
mov
adc
inc
addl
subl
dec
push
rorb
add
sti
inc
and
imul
or
jle
mov
or
orl
adc
push
insl
into
out
push
mov
sub
lret
or
mov
cmpsl
push
sbbl
push
in
addr16
jecxz
xchg
jb
lahf
mov
pop
jp
mov
lods
xor
cmp
adcb
add
or
lock
push
pop
lds
push
insb
call
sbb
shrl
fs
and
mov
lahf
repnz
nop
sub
adc
sti
out
mov
dec
iret
call
test
add
xor
lret
and
mov
xchg
fbld
or
inc
pop
dec
cli
mov
shlb
int3
and
add
test
pop
cmp
xor
push
imul
out
js
mov
and
leave
mov
js
xchg
rclb
jg
shrl
pushl
mov
ja
dec
std
and
out
out
mov
add
fists
sbbl
or
fwait
xor
inc
ss
les
pushf
push
mov
fwait
shll
call
and
cmp
or
inc
mov
test
es
pop
fdiv
push
sar
jle
popa
or
mov
pop
sbb
testl
sbb
les
mov
jle
fiaddl
or
sbb
jnp
dec
xor
iretw
pop
push
imul
dec
jo
or
korb
and
or
push
dec
push
xchg
lret
fwait
in
jne
mov
mov
sbb
dec
das
dec
mov
imull
shll
pop
into
xor
sub
xchg
mov
add
pop
add
mov
inc
push
dec
xchg
fiadds
mov
adc
imul
stc
or
pop
lods
fistpl
loope
or
or
rcll
sub
paddb
inc
ret
add
loop
mov
inc
mov
clc
stos
idivl
jne
insb
aam
movsb
in
cmp
inc
insl
jge
loop
xor
in
sub
push
in
cmp
stc
xchg
dec
xchg
in
int
stos
push
aad
lds
outsl
push
xchg
rcl
jne
iret
not
xor
mov
add
mov
mov
jne
jle
xlat
insl
dec
pop
cmpsb
push
outsb
popa
lret
or
aaa
sub
jbe
arpl
mov
shll
pushf
mov
mov
xchg
mov
push
daa
in
insl
mov
fs
push
xchg
and
ss
push
test
push
dec
mov
jae
xchg
loop
aam
cltd
cmp
or
lahf
xchg
movsb
cwtl
push
scas
adc
xchg
movsb
sbb
pushf
cltd
rcrb
pop
xor
lods
test
aaa
clc
jecxz
xchg
adc
sbb
and
xchg
hlt
mov
das
cwtl
insb
faddl
push
or
lret
add
lea
cs
pop
fisttpl
repnz
popa
subl
mov
cmp
aad
pop
roll
lahf
adc
pop
inc
xor
dec
cmpsb
mov
sar
xchg
cmp
fs
js
aas
cmp
fucomip
sahf
mov
pop
mov
mov
xchg
pop
add
cmp
cltd
adc
mov
aas
ljmp
push
pop
cwtl
mov
inc
or
jnp
adc
jmp
and
sarb
pop
scas
sarl
gs
push
and
jae
add
sbb
test
add
lods
push
xchg
pop
out
push
lods
push
in
dec
or
lahf
mov
aam
adc
pusha
jns
push
fiadds
add
aad
mov
shlb
dec
fcmovu
sbb
cltd
fisubrl
scas
dec
loope
fmul
jne
push
dec
xorb
test
out
adc
inc
mov
cmp
movsl
pop
sti
shll
mov
icebp
icebp
mov
add
movsb
push
lods
mov
sbb
jge
adc
fmull
aam
test
cli
gs
cmp
andl
loope
rcrl
mov
pavgb
je
sbb
repnz
or
mov
pop
in
mov
mov
loop
mov
add
add
sbb
dec
arpl
sbb
xor
out
jle
mov
xor
adc
call
and
push
movsl
jb
rcl
ss
lret
xchg
ljmp
push
out
sarl
push
rcrl
xchg
mov
into
dec
pop
dec
pmullw
mov
stos
pop
movsl
adc
fsubrs
mov
xchg
and
push
add
push
xor
aas
in
int3
dec
jo
push
or
clc
push
xchg
call
push
xchg
test
jne
popl
fs
push
xor
out
ret
push
mov
in
test
xor
sub
movsb
pop
lret
stos
hlt
or
jg
sub
pushf
in
or
and
add
sub
popa
into
dec
in
cld
fistl
in
sub
shlb
and
pop
jg
popa
ljmp
pop
ds
push
dec
gs
sub
rorb
mov
hlt
jbe
xor
xchg
je
loopne
sarl
aas
gs
xorb
or
dec
mov
aas
mov
sub
stc
fmulp
ficompl
mov
cmpsl
gs
xor
pop
fildll
aaa
sbb
mov
test
push
inc
mov
jne
icebp
and
cmpb
mov
lea
inc
subl
xor
iret
nop
or
sub
divl
aam
inc
in
mov
jmp
out
fnsave
xor
ds
stos
imul
popa
or
mov
pusha
mov
jnp
stos
sub
lahf
inc
push
sub
test
sbb
dec
stc
cld
loopne
mov
les
inc
push
xchg
mov
adc
je
pop
mov
fbld
sub
xchg
and
loope
sub
cld
loop
ret
aam
sub
adc
xor
cmp
ficoms
mov
dec
movzwl
inc
lods
test
aam
and
jb
jl
or
lods
mov
repz
stos
cltd
lahf
sub
adc
mov
incl
movsl
mov
jle
push
push
xor
dec
fdivr
push
push
cli
mov
push
lds
rcl
and
ljmp
jmp
lods
pusha
inc
inc
stos
mov
and
repz
add
loopne
notb
pop
add
adcb
xorl
insl
adc
cmpsb
daa
int
push
and
sbb
movsb
xor
or
push
sub
and
clc
adc
adc
data16
mov
cmp
push
fiadds
arpl
add
iret
ret
cmpl
roll
shrl
fnstcw
mulb
sbb
xchg
js
mov
push
mov
cltd
push
sbb
or
ffreep
cltd
dec
inc
les
xchg
cld
pop
cmpsb
pushf
pop
std
push
outsb
xlat
cmc
dec
pop
cmp
lods
inc
aaa
jmp
jg
gs
pop
xor
adc
mov
sbb
icebp
sar
jp
xor
pop
inc
xchg
enter
cmp
inc
or
int
pushf
test
sub
push
popa
scas
lret
and
arpl
mov
dec
sbb
xchg
mov
scas
shl
scas
jnp
gs
andb
jb
and
rolb
aaa
out
jmp
jo
rorb
jle
pusha
movsl
xchg
popf
fsubl
push
push
mov
mov
addl
or
inc
xchg
or
stos
fcoml
outsl
addb
sub
cmp
repnz
sbb
lods
pop
push
js
imul
pop
jp
mov
inc
jp
mov
sub
push
ds
fisubrs
mov
lods
int
mov
jns
push
sbb
xchg
ja
cld
push
mov
sub
cmp
jmp
loope
nop
or
or
adc
mov
xor
shlb
cmpsl
lahf
fidivrl
scas
call
test
push
rcl
cmpsl
dec
dec
jmp
and
push
push
test
es
arpl
sub
fbstp
push
push
pushf
aaa
rorb
sbbb
call
daa
or
int
or
add
aad
shrl
xchg
ret
rcrl
inc
jle
mov
outsb
movsl
sub
pop
inc
lret
add
push
sbb
mov
pop
jno
jl
jno
inc
mov
dec
inc
lahf
mov
sub
xchg
mov
cmpsl
mov
pop
adc
test
rcll
mov
xchg
pop
cli
or
lods
es
push
add
and
lods
fildll
inc
aaa
fstl
add
in
repnz
jbe
dec
and
jb
lds
adc
arpl
jg
popf
out
inc
test
jbe
xor
add
ljmp
jne
jo
rcr
addr16
xchg
fdivrp
jg
ljmp
fwait
push
test
push
sahf
adc
push
sbb
enter
out
fistpll
add
add
shl
inc
cmp
jge
enter
pop
sub
mov
movsb
jne
lods
jge
cli
pop
es
es
jp
xchg
in
sub
sbb
fs
xor
test
sbb
inc
cmc
movsl
jecxz
rcrb
ljmp
into
mov
in
ja
repz
stc
adc
mov
imul
dec
ret
push
pop
and
hlt
pop
xchg
cmpsl
inc
stc
test
testb
inc
cli
out
clc
lods
jo
ret
aaa
cmovp
sub
mov
or
mov
push
mov
jb
stc
jle
or
lods
push
adc
push
int
sahf
sub
adc
add
adc
rorb
adc
dec
into
stos
pop
xor
in
sbb
cmpl
push
cmp
outsl
jp
jbe
repnz
mov
mov
lret
mov
sarl
pop
adc
mov
addw
mov
std
aaa
lea
fwait
repz
iret
pushf
mov
sub
das
scas
jb
cmp
mov
sbb
xor
ret
je
ljmp
adc
clc
pushf
lock
stos
pusha
inc
push
sub
out
jbe
bnd
add
pop
int3
popf
bound
in
test
fs
aad
add
push
data16
cmp
mov
dec
cmc
ja
fildl
dec
dec
cld
inc
test
jns
xchg
dec
cmp
lea
xor
arpl
cmp
pop
cmpsb
fldcw
lds
les
fsubrs
ss
iret
pop
jge
ret
aam
or
lahf
cmpsl
add
mov
outsl
sahf
insb
lea
addr16
adcl
mov
cmc
pop
lods
push
jbe
andl
push
sub
leave
xchg
lret
dec
aaa
test
lahf
inc
and
sub
pop
add
pop
push
cmp
cmpsb
mov
push
imul
dec
cmp
dec
ljmp
adc
push
fistps
jmp
cwtl
add
cmp
inc
shrl
fbstp
aam
sub
in
fists
das
sub
lret
mov
pop
ror
add
loope
or
mov
and
push
mov
or
mov
cmpsl
xor
xor
pop
stos
cmp
dec
inc
dec
lret
and
push
stos
pop
pop
and
push
out
mov
lds
add
loop
adc
shll
fisttpl
es
and
loope
pop
adc
jbe,pt
cmpsl
sub
sbb
movsl
jbe
add
ret
dec
jecxz
out
outsl
inc
or
mov
or
inc
lret
xchg
dec
aad
fimull
cmp
out
pop
enter
cmp
cs
and
push
dec
push
sbb
mov
in
adc
in
or
loopne
push
pop
fldcw
fdivs
les
out
push
adc
xor
cmp
dec
popf
push
shl
pop
dec
sbbl
iret
arpl
pusha
mov
pop
stc
jbe
sub
je
je
push
pmulhw
pop
mov
loope
test
xor
lods
sti
jbe
addr16
dec
das
bound
mov
xchg
xor
mov
xchg
jne
or
add
sti
mov
mov
push
mov
xchg
out
and
add
inc
cwtl
adc
mull
push
test
jecxz
ficompl
lock
test
lock
jo
dec
inc
push
pop
cli
lcall
cmp
js
push
mov
dec
sarl
sub
loope
daa
pop
push
push
cs
mov
scas
lds
cmpsl
mov
cwtl
pop
enter
in
xor
lods
hlt
adc
clc
sarl
pusha
or
insl
jb
cmp
filds
or
jg
cmp
das
hlt
lret
lret
call
xchg
push
mov
jo
jo
xchg
push
mov
scas
lock
sahf
movsl
roll
test
xor
dec
test
mov
sahf
push
iret
loop
cs
xchg
xchg
leave
and
add
inc
xlat
sbb
jmp
popa
sti
xorl
jl
in
add
adc
add
xlat
fstpl
imull
into
enter
push
sbb
movsl
notb
fucomip
add
cmp
gs
pop
mov
sub
fimuls
mov
dec
scas
mov
movsb
and
pushf
cs
sarl
cmpl
scas
movsl
jo
insb
pop
or
test
cli
push
push
add
loop
ficompl
cmp
fisubrl
cmc
shlb
insl
pop
mov
insl
pusha
imul
xlat
fs
mov
sub
es
push
fstps
mov
negl
loop
sub
in
pop
mov
out
daa
xchg
or
stos
mov
movsl
or
mov
add
es
rcl
jae
fwait
jb
cmp
mov
scas
mov
mov
xor
out
sbb
inc
sbb
aas
fwait
cli
ja
mov
add
inc
jge
repz
sbbb
mov
sub
adc
arpl
andb
sahf
insb
and
lahf
xlat
pop
jge
fwait
cmc
pop
dec
pop
js
mov
js
repnz
dec
fnsave
int3
rcll
xchg
jo
js
cld
inc
in
addr16
push
pop
arpl
jg
neg
icebp
pop
out
cmpsl
xchg
lock
imul
fcomps
cwtl
sub
arpl
lcall
stos
lret
icebp
pop
stos
dec
mov
sbb
inc
fwait
lds
mov
mov
sub
mov
push
lock
mov
add
mov
mov
stc
jb
jle
movb
movl
mov
jmp
jecxz
fnstsw
roll
jmp
das
in
jl
add
mov
mov
jmp
dec
loopne
les
or
rolw
jmp
js
stos
addb
xorb
stc
jb
inc
call
jae
ljmp
jb
aas
xor
clc
jae
adc
inc
push
addl
jmp
adc
jmp
into
stc
loop
and
ret
or
push
daa
xchg
test
sbb
insl
cmp
cmp
xchg
sub
imul
lahf
mov
stos
leave
fsubrl
sahf
inc
movsb
pop
xor
fwait
jmp
mov
push
add
add
lea
out
push
or
js
xor
ret
pusha
js
xchg
out
daa
adc
jmp
mov
fs
or
dec
les
sahf
movb
pop
xchg
nop
and
add
cmp
shrb
adc
test
mov
fwait
icebp
sbb
jnp
sbb
js
add
pop
jge
notb
or
jo
jb
gs
dec
sub
inc
shlb
push
pusha
and
aaa
sahf
push
inc
fsts
out
out
xor
popf
dec
sbb
or
inc
cmc
divl
sub
mov
jle
cwtl
int3
jno
popf
add
add
add
add
add
add
dec
cmp
xchg
and
popa
cmp
sahf
cmp
xor
mov
cmp
pop
mov
and
mov
and
or
fists
jle
fmull
xchg
mov
sub
jg
fwait
in
inc
lret
jne
gs
out
xchg
lret
mov
ljmp
and
xchg
mov
movsl
pop
cmc
ret
sub
pop
jno
xchg
nop
mov
push
jle
aaa
pop
or
subl
orb
inc
data16
scas
push
lret
inc
in
movsb
gs
add
pop
ret
add
or
dec
add
add
add
add
pop
int
jge
pop
enter
and
or
cmpsl
stos
pop
jae
icebp
in
and
pop
arpl
mov
dec
in
gs
sbb
fstpt
pop
or
loope
mov
sub
rolb
orl
mov
dec
jb
ret
and
cmp
jb
cs
scas
repnz
jecxz
cli
popf
fisttpl
popf
int
inc
and
push
jge
mov
fiaddl
repnz
das
fs
outsb
jno
push
push
hlt
dec
cmp
and
push
ret
scas
xchg
addl
aas
in
fbstp
out
adc
lods
pop
dec
fistpll
imul
stc
xchg
in
or
add
lahf
mov
mov
pop
rcrl
movsl
leave
stos
scas
fmull
fbld
in
in
test
jb
lds
daa
dec
xchg
call
orb
loop
enter
idivb
sti
pop
out
xlat
in
mov
test
and
mov
out
add
fnstcw
mov
sub
hlt
fwait
add
adc
icebp
sub
or
lds
clc
cmp
mov
cmpsb
mov
jp
dec
es
xchg
dec
jo
movsb
stc
xchg
pop
lcall
jg
lret
hlt
movsl
fisubl
jbe
pop
jmp
mov
icebp
lcall
jae
cmp
loop
in
clc
sbb
xor
pop
adc
dec
dec
aam
mov
add
roll
xlat
xchg
lods
pusha
in
lock
mov
punpckldq
outsb
or
xor
loop
mov
mov
div
sbb
loopne
sbb
lret
fists
ret
mov
mov
test
dec
cmp
loop
call
mov
mov
pop
pusha
jp
jp
or
enter
xchg
jno
jge
jle
jge
ret
sub
lahf
aad
inc
aam
mov
outsb
rclb
pop
aam
xchg
pop
aaa
test
stos
divl
loopne
sbb
aaa
mov
bound
dec
mov
pop
dec
ret
loope
and
pusha
mov
adcb
cld
clc
fmuls
mov
jl
pop
aas
jno
jge
mov
loopne
push
jbe
sbb
push
push
push
xchg
dec
stc
test
xchg
loopne
push
stc
test
mov
xchg
sub
or
mov
mov
sub
outsb
aam
or
idivb
imul
mov
ret
adc
mov
fisubl
add
mov
lcall
inc
inc
aam
scas
inc
mov
cmp
xor
add
enter
xor
cmc
jmp
adc
mov
ds
pop
or
mov
rclb
ss
inc
in
xor
in
inc
ret
cli
insb
cmp
fists
scas
in
leave
lock
jbe
sub
scas
test
stos
xchg
in
jnp
cmp
adc
sti
mov
insb
mov
imul
sub
lret
xchg
nop
nop
sti
adc
negb
shlb
out
popf
jmp
adc
imul
cmpsl
imul
jbe,pn
les
xchg
fwait
add
imul
sbb
popf
les
mov
sbb
sbb
or
scas
push
ret
sub
shll
movsb
or
xchg
xor
pop
sbb
sub
xchg
cwtl
jecxz
ffree
pushf
push
jo
sahf
bound
push
insl
dec
ds
sbb
xchg
mov
inc
lock
sub
xchg
notl
movsb
xor
cli
push
dec
fsubp
sub
std
sub
dec
dec
inc
popf
inc
fs
sbb
stos
adc
pop
clc
xor
xchg
jmp
leave
mov
sbb
loope
enter
enter
lods
es
xor
arpl
lods
ret
nop
jge
imul
dec
dec
pop
inc
incl
mov
aad
cmp
dec
lds
aas
jns,pn
add
lea
bound
insb
dec
cmp
dec
cmpsb
inc
sbb
pop
test
scas
aad
leave
mov
inc
and
push
sbb
add
test
test
xchg
fisubl
mov
ja
lret
pop
js
pop
push
mov
in
push
dec
aas
sub
mov
out
push
dec
pop
cs
aaa
or
fs
mov
enter
repnz
cli
ret
cmp
sub
xchg
or
incl
add
add
fldt
add
addr16
and
mov
adc
popf
cwtl
dec
pusha
jle
push
imul
dec
ja
rol
movsb
push
shll
test
push
xchg
stos
sbbl
mov
pop
mov
outsb
push
hlt
stc
data16
or
pushl
dec
dec
stos
cmp
outsl
sti
aas
sarb
sar
add
push
stc
xchg
or
cltd
pop
repnz
addb
mov
iret
cs
icebp
popa
add
out
jno
xor
or
test
cmp
mov
and
push
and
pop
stos
xor
cmp
mov
sbb
dec
cmp
mov
hlt
adc
imul
scas
cmp
and
popa
inc
sbb
mov
lock
je
cltd
pop
insl
mov
ret
nop
cmp
fmull
dec
in
and
fildll
insb
adc
and
add
mov
insb
xchg
repnz
or
call
xor
jmp
mov
decl
push
or
mov
leave
scas
jno
cvttps2pi
fwait
jo
mov
jp
movsb
cbtw
add
insl
jmp
sub
repnz
psrad
iret
nop
lret
aad
jge
fdivs
add
mov
cmpsl
jge
pop
dec
dec
jno
insl
ret
cld
add
leave
popf
sbb
or
mov
inc
push
lret
push
xchg
ret
pushf
das
mov
pop
cmp
or
inc
les
faddl
mov
cmc
ljmp
jle
jae
ja
pop
mov
lret
iret
imul
mov
ljmp
mov
jmp
push
pusha
and
aaa
mov
repz
imul
fxch
cwtl
stos
bound
cmc
xchg
dec
pop
mov
cwtl
cmp
dec
sti
mov
sub
pop
addb
xor
in
frstor
dec
in
popa
sub
dec
mov
push
loopne
sbb
pop
pop
xor
lea
jns
test
out
in
and
testb
lcall
decl
push
movsl
jnp
mov
test
sbb
jle
xor
daa
into
in
fbstp
enter
xor
inc
cmp
lods
xchg
sub
fidivs
xor
jnp
xor
mov
stc
or
imul
call
jp
in
mov
clc
call
pop
imul
xchg
fldt
mov
int
push
xor
jne
add
xchg
sbbl
sbb
cmp
dec
scas
cmpsl
fldenv
lret
dec
push
sahf
xchg
and
fld
ds
cmpsb
filds
sbb
or
loope
mov
cmp
add
cmc
in
xor
pop
jno
mov
cmp
popa
movsb
and
pop
add
add
pop
jmp
adc
popf
enter
cs
xchg
jbe
cmp
pop
jecxz
mov
mov
mov
cmp
sub
inc
scas
pusha
jb
jnp
sahf
test
rolb
cmp
inc
ret
push
fsubs
loope
out
jg
xor
das
mov
fisttpl
adc
mov
lcall
stc
aam
cmp
mov
cmp
sbb
xorb
popf
sub
and
into
aam
mov
dec
sub
int
ret
pop
add
in
mov
fstps
addr16
bound
idivb
cmc
jae
adc
sahf
aas
icebp
leave
lcall
pop
sub
sti
xchg
mov
mov
pushw
scas
mov
ret
decb
push
fnsave
cld
mov
in
mov
fdivr
xor
fsub
mov
insb
dec
in
fwait
rorl
jp
sbbl
mov
aam
dec
scas
fstpl
and
into
aam
mov
dec
sub
or
adc
js
in
fwait
mov
xor
adc
addb
inc
fdivs
pop
cltd
inc
and
out
mov
popa
ds
aas
std
cwtl
adc
inc
sahf
sbbb
js
or
divb
push
int3
cmpl
repz
lret
push
imul
and
fucomi
scas
test
xchg
xor
sub
daa
es
dec
je
dec
repz
push
dec
and
xchg
je
scas
or
sub
xchg
jnp
mov
pop
gs
pop
shlb
lods
sub
ljmp
and
arpl
xchg
mov
loope
in
sahf
and
pop
adc
and
mov
xchg
mov
inc
jg
jmp
fwait
int3
ror
scas
dec
adc
dec
or
xchg
aas
mov
test
mov
orl
inc
into
mov
pop
inc
mov
outsl
leave
repz
sbb
in
push
cmp
lea
mov
mov
aas
xor
add
jle
sbb
mov
dec
add
ficoml
sbb
pop
lret
gs
mov
pop
xchg
arpl
or
in
nop
push
mov
cmp
xchg
adcl
mov
adc
in
fs
add
into
insb
loope
push
mov
and
rcl
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
int
mov
adcb
ror
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
xchg
stos
popa
fcomps
and
rcl
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
aam
cmp
lea
insl
push
testb
arpl
add
movsb
ret
subl
push
daa
add
xor
pop
stc
lods
mov
decb
pmulhuw
xor
mov
test
movsl
pop
cmpsb
ss
mov
and
dec
push
loope
stc
cmp
push
out
jne
aaa
add
repz
sti
mov
sub
mov
dec
adc
pop
sbb
mov
lock
faddl
lods
fcomps
mov
mov
ljmp
in
mov
iret
fsub
mov
insb
mov
stc
fwait
mov
pop
scas
mov
mov
adc
loop
cmp
mov
leave
or
test
cmp
test
out
int
movsb
pop
popf
push
in
mov
rclb
inc
jge
in
sahf
xchg
repz
sbb
fistpl
jnp
popa
movb
xchg
xchg
xchg
push
cwtl
mov
push
popf
js
push
lret
sbb
mov
fcmovne
aas
xor
push
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
xchg
and
jle
addr16
jno
loop
nop
je
lret
mov
test
cmp
into
mov
xor
repz
add
and
push
dec
sbb
or
jns
test
lods
xchg
pushf
insl
idivb
push
int
mov
paddd
hlt
dec
iret
test
jbe
nop
pop
hlt
adc
in
sub
test
and
idivb
sbb
xchg
call
aas
lcall
aam
sub
jmp
push
or
addl
iret
lea
mov
mov
aas
xor
add
lods
das
clc
add
add
fnstenv
mov
mov
loope
rcrb
cmc
cmp
loopne
mov
cld
rorb
fistl
lcall
repnz
out
int
movsb
pop
popf
push
in
mov
rclb
inc
jge
in
sahf
xchg
repz
sbb
fistpl
jnp
popa
movb
xchg
xchg
lods
daa
outsb
add
movsl
jp
add
mov
mov
sbb
stc
mov
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
xchg
and
jle
addr16
jno
loop
nop
je
lret
mov
test
cmp
into
gs
mov
pop
sub
mov
scas
aas
adcl
sbb
or
jns
test
lods
xchg
pushf
insl
idivb
push
int
mov
paddd
hlt
dec
iret
test
jbe
nop
pop
hlt
lret
mov
add
cmp
loopne
and
pop
sub
inc
stc
aam
sub
jmp
push
or
addl
iret
lea
mov
mov
aas
xor
add
lret
xchg
inc
xchg
mov
sbb
lahf
or
xor
popf
nop
mov
cmp
jo
lret
enter
pop
mov
push
mov
dec
loop
add
cli
out
jne
push
mov
in
inc
sti
stos
push
jmp
inc
rolb
out
fsubs
push
cli
shll
addb
aad
xor
and
xchg
imul
sub
lahf
jge
xor
jbe
cltd
xchg
outsw
out
mov
xchg
push
cwtl
push
and
jne
ljmp
xorl
jecxz
xchg
jecxz
sub
jno
inc
xchg
pop
imul
adcl
sbb
or
jns
test
jp
jae
fwait
pop
lahf
in
pop
jnp
leave
shr
imul
repz
icebp
fnstcw
fs
xor
test
cs
ret
push
mov
imul
cwtl
and
pop
ss
sti
repz
push
icebp
push
sbb
sub
daa
addr16
insb
sahf
aad
xor
and
xchg
imul
sub
lahf
jge
xor
jbe
cltd
xchg
outsw
out
mov
xchg
push
cwtl
push
and
jne
ljmp
xorl
inc
push
pusha
es
and
xchg
mov
movsb
scas
and
clc
dec
dec
test
shrl
loop
lods
lret
rorb
xchg
jno
pop
sub
outsl
inc
clc
rcrl
enter
push
pop
push
clc
pop
adc
mov
xor
aam
daa
out
pop
dec
jo
xchg
push
addr16
pop
xchg
cmp
movsl
cmp
dec
loop
stos
jp
cs
ljmp
fcmovne
aas
xor
push
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
adcb
dec
pop
pop
daa
xchg
hlt
mov
xchg
adc
add
test
arpl
jle
pop
or
cmp
cs
and
add
into
aas
adcl
sbb
or
jns
test
arpl
clc
jmp
push
adc
sbbb
xchg
add
lods
pop
aaa
pop
jnp
out
lock
nop
mov
push
fstpl
inc
ja
sbb
adc
frstor
out
xchg
arpl
or
in
cwtl
jbe
cmp
repz
bound
in
shrl
int3
pop
in
sbb
push
cmp
idivb
mov
aam
cmp
jb
repz
movsl
inc
in
push
in
push
cmp
lea
mov
mov
aas
xor
add
fs
int3
dec
lret
stc
pop
add
filds
or
lret
int3
xchg
adc
sub
sub
and
mov
push
jbe
lods
fbld
push
addr16
insb
sahf
aad
xor
and
xchg
imul
pop
popf
push
or
pop
jl
fldcw
mov
stc
test
mov
push
shll
dec
sbb
aas
adcl
sbb
or
jns
test
arpl
clc
jmp
push
adc
sbbb
xchg
add
lods
pop
aaa
pop
jnp
out
int3
cmpsb
cmpsl
xor
mov
incb
and
mov
rcr
cmpsb
frstor
out
xchg
arpl
or
in
cwtl
jbe
cmp
repz
bound
in
shrl
int3
pop
in
sbb
push
cmp
xchg
push
inc
and
fnstenv
and
xor
push
inc
mov
addl
iret
lea
mov
mov
aas
xor
add
fs
int3
dec
lret
stc
pop
add
filds
or
lret
cmc
adc
jmp
test
icebp
sbb
ret
cli
mov
repnz
mov
out
mov
pop
lea
mov
pop
or
xlat
mov
xor
jno
cs
loopne
sub
add
inc
jmp
jg
adc
fmuls
sets
mov
je
rorl
paddb
pop
xor
pop
in
mov
addb
push
cld
into
sbb
xchg
push
ffreep
cmp
pop
popa
xor
mov
push
mov
sbb
inc
lods
fcomps
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
add
cmpsb
test
scas
add
scas
aaa
mov
xor
rcll
out
push
mov
pop
movsl
and
sahf
rcrb
mov
daa
rcr
cmpsb
frstor
out
xchg
arpl
or
in
xchg
loop
ret
ja
js
data16
pop
rclb
ljmp
lahf
push
sbb
sub
push
insb
sbb
sbb
jge
cmpsl
dec
dec
add
dec
fwait
mov
movsb
add
inc
pusha
ss
push
sbb
in
jmp
test
es
enter
fldcw
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
add
cmpsb
test
scas
add
scas
aaa
mov
xor
rcll
out
push
sub
pop
lea
mov
xchg
push
or
pop
sbb
dec
shrb
and
xlat
dec
jl
jno
test
push
and
jo
lock
inc
jmp
pop
ds
cmpsl
jno
xor
scas
adc
in
pop
push
fdivrl
or
test
les
xchg
clc
sbb
das
jno
xchg
pop
and
xchg
xchg
xor
lcall
push
xchg
clc
sbb
js
dec
cmp
sub
and
mov
add
jne
mov
testb
mov
pop
ror
adc
jp
push
lcall
mov
popa
push
lret
mov
fwait
ret
xchg
ja
push
add
and
fdiv
sub
cmpsl
mov
dec
sub
or
shrl
jns
inc
jae
lea
xacquire
or
rcll
adc
test
pop
dec
sbb
sbb
test
sbb
pop
imul
insb
mov
sbb
xor
cmp
in
jmp
idivb
bound
std
mov
and
xchg
mov
or
mov
and
aad
pushf
cmp
sbb
pop
in
ljmp
ffree
popf
icebp
pop
sbb
or
or
sub
jecxz
rcrb
or
jecxz
jl
shll
scas
mov
pop
outsb
sbbb
repz
addr16
cld
sbb
cmp
push
sbb
in
xor
dec
lds
xchg
push
cmp
ret
and
or
lret
out
mov
daa
popf
adc
xor
sbb
xor
mov
fs
orl
add
fs
push
jno
cmp
stos
lret
push
ja
lods
jmp
jnp
ja
dec
in
cmp
lahf
fst
push
push
mov
or
jne
test
test
and
pop
fcmovnb
je
adc
cs
test
enter
sahf
mov
lahf
cld
and
fprem
sbb
js
in
dec
inc
jo
mov
int3
xor
fimuls
cmp
adc
cld
pop
push
mov
mov
fwait
movsl
sbb
pop
mov
ss
inc
cmpsl
loopne
push
adc
sub
sub
push
icebp
addb
sub
leave
xlat
cs
cs
mov
mov
rcr
xchg
xchg
jne
in
cmp
sarl
ficoms
fidivl
mov
jbe
in
sbb
add
mov
xchg
push
iret
mov
les
jnp
shlb
aam
hlt
in
in
outsb
mov
mov
push
jle
out
push
popa
sub
push
jno
test
stos
pop
push
hlt
sub
fsubrs
lret
xchg
repz
sub
fidivs
push
mov
adc
jmp
inc
lock
mov
cmpsl
call
xorb
enter
adc
out
movsb
dec
pop
shll
dec
mov
or
dec
cmp
add
push
or
pop
mov
movsb
xlat
dec
adc
rorl
fisttpll
test
je
out
adc
js
adcb
mov
sbb
ljmp
jmp
cmc
loopne
or
scas
adc
in
push
xchg
icebp
out
jle
nop
pop
rorl
lods
jae
les
mov
dec
xchg
mov
dec
fwait
stc
sbb
bound
inc
jns
jecxz
movsb
sbb
sbb
push
out
mov
mov
xchg
insl
sub
lcall
adc
test
pop
inc
xchg
and
cmp
inc
test
sub
cmpl
pop
pushf
movsb
leave
lcall
dec
fsubrl
cmp
dec
dec
jge
dec
or
stos
in
orb
rclb
ds
lret
pcmpgtb
js
mov
mov
mov
sbbl
sub
jbe
xchg
scas
push
xchg
jo
outsl
inc
cs
jno
ss
jnp
mov
sbb
daa
or
inc
paddusw
lock
pop
es
loopne
int3
mov
xor
push
dec
mull
cs
or
jnp
iret
clc
sub
leave
adc
movsl
mov
jae
xor
stc
dec
lods
mov
mov
xchg
in
icebp
lahf
cmp
fstpt
bound
jecxz
push
aad
xchg
pop
sub
pop
mov
dec
ljmp
lock
movsb
jle
mov
pop
pop
aas
mov
in
enter
js
fidivl
cld
mov
ljmp
outsb
test
xor
dec
push
outsl
ljmp
sbb
xchg
fnstenv
sarl
cmp
cmp
pop
mov
int3
pop
add
cltd
lock
jg
jmp
cmp
rcr
pushl
xor
rclb
pusha
cmp
sub
jmp
jmp
pop
sbb
jae
xchg
sub
loop
xor
iret
push
aaa
pop
fwait
mov
add
in
fsts
int3
stos
ja
shlb
jecxz
sbb
movsl
repnz
mov
ljmp
mov
sahf
or
ljmp
pop
daa
test
int
inc
je
bound
xchg
sub
in
jae
out
dec
psubsb
sub
dec
int
ja
in
test
pop
iret
mov
insb
dec
jns
pop
subb
test
mov
out
adc
add
ret
xor
and
mov
or
pop
nop
push
mov
lahf
jle
loop
iret
inc
and
repz
subb
xchg
dec
sbb
push
std
stos
push
xor
iret
pusha
das
and
adc
mov
scas
icebp
into
in
adc
jge
aam
imul
mov
lea
mov
mov
shlb
sbbl
loop
jecxz
cld
rcrl
lret
jecxz
imul
adc
mov
insb
or
xchg
jae
jnp
lods
lds
xorl
add
clc
xor
mov
sbb
inc
dec
adc
jl
movsb
mov
into
pop
imul
jne
dec
xor
inc
mov
adc
int3
les
xor
mov
jnp
hlt
loopne
pop
or
testl
and
js
int3
push
and
stos
push
insb
mov
inc
sub
stos
jl
push
data16
fs
imul
and
mov
jns
xchg
cmpb
aam
lods
in
sub
rcrb
push
xor
mov
lds
repz
lcall
scas
push
insb
inc
add
ret
ret
or
andl
popl
std
sbb
dec
adc
push
in
test
std
orl
mov
outsb
xor
sbb
ret
sub
mov
push
jne
adc
bound
pop
and
test
xchg
cmpsl
repnz
repz
mov
dec
es
mov
rep
xorb
les
dec
in
lock
sub
jge
movsl
pushf
pop
popf
push
jns
xor
cmp
out
fdivl
push
jb
loopne
test
mov
int3
shl
push
pop
mov
ss
jb
cmp
shll
nop
xchg
xchg
int
pop
pusha
mov
ljmp
or
arpl
jae
add
leave
xchg
dec
mov
fs
cmp
cmpsl
mov
lds
xchg
sbb
jo
hlt
dec
movsb
call
dec
pusha
lock
push
push
mov
sub
js
imul
and
call
insl
sahf
sbb
sbbl
mov
fnsave
nop
or
pop
cmp
pop
mov
cmp
sub
mov
lea
bound
cld
inc
cmp
jae
mov
cld
inc
jo
jp
dec
inc
jl
xor
inc
xchg
add
mov
shrb
aam
dec
aam
dec
addr16
jo
popa
pop
and
add
femms
mov
fists
cwtl
pop
int
repnz
mov
sti
dec
mov
shlb
cltd
mov
push
adc
mov
push
push
in
mov
scas
jle
sbb
repz
dec
mov
dec
jne
cmpsl
fstpt
outsl
sub
lds
xchg
pop
das
mov
mov
adc
cmpsl
jmp
icebp
roll
lods
lods
jl
lea
mov
mov
cmp
sbb
in
shll
sbb
repz
sbb
sbb
aas
push
int3
ss
idiv
fcompl
mov
or
das
test
dec
sbb
das
movsb
and
cltd
insl
mov
lret
mov
mov
fbstp
xchg
repnz
mov
jp
cli
in
dec
adc
mov
mov
lret
pop
sub
mov
lret
mov
or
xchg
sbb
sbb
cmp
push
sar
mov
dec
push
xchg
pusha
cmp
inc
sbb
out
jne
daa
sahf
mov
xchg
dec
je
cwtl
inc
add
dec
in
add
aas
cwtl
xor
loop
nop
pop
shr
xchg
mov
inc
in
push
loop
sbb
pop
and
loopne
sbb
and
jo
mov
in
loopne,pt
cmp
enter
pop
mov
push
jo
outsb
data16
fdivrp
adcl
popf
fidivrs
mov
mov
add
sbb
mov
mov
sub
inc
mov
imul
cs
lahf
pop
jb
push
in
push
pop
insl
and
mov
pop
adc
inc
inc
mov
repz
sbb
gs
inc
sub
xchg
sub
mov
stos
scas
movsb
outsl
lods
mov
sbb
xchg
jnp
or
mov
ljmp
mov
or
lods
push
int
add
icebp
inc
or
dec
test
mov
push
test
aaa
and
mov
cmp
or
mov
pop
in
in
popa
cmpsb
into
ja
out
mov
xchg
mov
pop
add
ljmp
imul
lcall
xor
nop
sbb
aaa
sar
les
sub
sbb
or
aaa
pop
and
mov
mov
pop
orb
nop
inc
cltd
jns
mov
aam
int
xchg
inc
out
jno
nop
daa
cltd
sti
cmp
xor
out
loope
fistpll
mov
roll
loopne
xchg
adc
movsb
inc
mov
loopne
leave
jge
int3
push
jae
jl
fstpt
push
fwait
jns
sbb
cmp
jp
clc
js
andb
ljmp
out
loopne
mov
mov
rolb
sub
mov
jmp
inc
gs
and
pop
jo
jmp
adc
push
ret
xchg
push
mov
push
das
gs
or
mov
mov
mov
adc
in
pusha
mov
std
xchg
and
jo
in
insb
pusha
xlat
and
into
adc
and
and
fisubrl
dec
pop
adc
jp
dec
inc
push
pop
movsl
and
lock
insb
and
cld
negb
jg
and
ficoml
insl
notl
ret
jne
cmp
push
cmp
jne
test
xor
inc
shrl
xchg
push
cltd
arpl
outsl
xchg
jns
lods
test
lods
sub
pop
mov
pop
mov
js
rorl
loopne
xchg
rcrl
mov
mov
fnstcw
pop
out
xchg
pop
cmp
push
call
pop
cwtl
das
sbb
mov
cltd
adc
pop
add
fwait
sub
mov
inc
inc
gs
sub
dec
in
push
imul
xor
xor
pusha
fimuls
jge
push
enter
shlb
lret
push
mov
lret
cmp
ja
sub
jl
cmp
ss
mov
inc
pop
aam
mov
scas
inc
je
mov
pop
xor
inc
cmp
in
mov
dec
mul
imul
fwait
adcl
imul
xor
cmp
in
pusha
push
dec
adc
out
jecxz
push
in
mov
cltd
dec
in
jle
loop
dec
push
mov
loop
mov
push
jbe
push
repz
mov
rorb
cmp
dec
push
mov
sub
lret
cwtl
cmc
fstl
or
xor
pop
pusha
out
xchg
jp
loopne
dec
out
stos
pop
out
sbb
cmp
add
loop
xchg
inc
inc
outsb
les
test
shrb
push
mov
dec
mov
mov
pop
and
gs
insb
push
xchg
mov
jmp
into
push
leave
aaa
icebp
lcall
add
enter
dec
data16
push
sbb
loope
mov
iret
xor
mov
add
jb
mov
fbld
mov
jne
movsl
mov
outsb
fdivrs
fmuls
pop
adc
pop
test
in
inc
notb
mov
add
stc
gs
movsl
cmpsl
jp
leave
sub
insl
add
xchg
mov
mov
mov
shrl
leave
pop
mov
mov
pop
flds
or
pusha
insl
cmp
add
mov
sub
aad
rcrb
arpl
aad
push
or
lahf
xchg
subl
adc
jl
jo
sbb
dec
push
mov
mov
or
mov
neg
add
int3
xor
test
add
inc
jge
mov
adc
daa
mov
cli
cmp
jmp
ret
add
inc
mov
fnstenv
mov
cmpsb
adc
xchg
outsl
call
loope
mov
gs
jmp
dec
stc
jb
mov
insl
pop
push
cwtl
mov
inc
sbb
addb
xor
cmc
lods
and
inc
mov
or
or
push
push
xor
jbe
ljmp
insb
das
cltd
adc
fidivl
std
push
cmp
fwait
movsl
rcll
fisubrs
cwtl
inc
add
rcrl
add
mov
repnz
jnp
gs
pushf
std
js
sbb
mov
aad
stc
jecxz
loope
cmpl
mov
cltd
xchg
xchg
xchg
push
cwtl
mov
adc
mov
or
cmp
imul
sub
in
push
call
jo
ljmp
mov
das
mov
and
xchg
jecxz
pop
pop
xchg
or
mov
push
je
and
or
addr16
sub
arpl
scas
mov
dec
mov
mov
xchg
mov
push
adc
mov
add
xor
mov
out
sahf
sub
push
call
pop
or
sbb
jge
aad
jmp
cmpsb
pop
andl
inc
jp
push
push
cwtl
sbb
fimull
mov
lds
je
mov
rorb
iret
test
adc
add
repz
mov
fsubs
enter
add
jbe
jl
mov
out
fsts
dec
sbb
daa
xchg
pusha
cmpsl
in
mov
in
push
ficoml
mov
add
adc
test
iret
ja
push
cltd
xor
cwtl
rcrl
movsb
movsl
add
negb
jbe
scas
sbb
lods
add
inc
out
adc
imul
repz
pushl
js
nop
in
nop
loopne
hlt
std
test
or
mov
orl
cmpsl
or
sbb
xchg
cmp
cmp
mov
arpl
insb
std
mov
pop
not
and
scas
jbe
movsl
gs
imull
adc
cld
hlt
or
push
test
mov
lock
adc
nop
daa
cmp
divb
das
stos
mov
int3
lods
mov
cmp
inc
dec
cmp
mov
mov
cmp
cmp
sub
cld
scas
out
push
sbb
data16
jnp
xchg
mov
stos
pop
fsubl
push
xchg
sar
lret
and
inc
or
mov
gs
cmp
inc
aam
rol
xchg
test
dec
add
pop
cltd
add
call
scas
mov
shl
std
adc
iret
imul
daa
mov
dec
push
outsb
and
popa
test
mov
cmp
fcomps
mov
dec
xchg
mov
out
xchg
out
xor
cmc
pop
imul
roll
jp
xor
dec
cmp
std
inc
data16
enter
mov
ljmp
addr16
hlt
mov
fidivrs
ds
enter
pop
ror
mov
scas
xchg
and
addr16
test
addr16
out
es
je
jl
or
push
mov
sub
popf
and
push
add
cltd
pop
mov
add
mov
push
lock
inc
fwait
rcrl
fsubp
inc
les
sbb
fcmovnu
mov
das
popa
push
mov
or
sti
clc
adc
sahf
pushf
test
imul
pop
mov
call
call
bound
in
test
cld
and
aaa
dec
mov
mov
inc
inc
dec
dec
outsl
pop
sub
mov
pop
push
and
icebp
imul
xchg
sub
mov
sbb
pop
xor
inc
sbb
xchg
mov
xchg
push
jne
mov
mov
fcmovnb
aad
pop
std
int3
imul
out
cmp
inc
lea
rcrl
mov
dec
cmp
into
cmp
lret
sahf
sbb
scas
pop
mov
stos
inc
leave
inc
adc
add
adc
mov
sahf
fs
cmpsb
fsubl
mov
gs
jge
cld
jecxz
xlat
sbbl
jne
in
sbbl
ljmp
call
hlt
dec
jnp
jo
fwait
lock
jns
add
out
add
icebp
jno
cld
and
dec
outsb
es
xor
in
cmp
std
cwtl
and
cmp
mov
popa
or
push
arpl
mov
inc
sahf
xchg
add
das
hlt
or
adc
and
imul
daa
faddl
aas
icebp
mov
dec
jmp
ret
add
xchg
pop
inc
inc
lret
mov
mov
lock
ja
xchg
mov
xor
jo
leave
mov
jns
cwtl
mov
sbb
xorb
sub
push
lret
mull
scas
lods
pop
sahf
jb
lds
add
int3
jle
mov
inc
dec
int3
fdivrs
ds
xor
movsb
std
mov
jmp
sahf
push
sti
repz
or
push
ljmp
mov
jno
mov
cmpsb
mov
sbb
outsl
xchg
es
or
dec
lods
jle
test
aad
in
adc
mov
cld
aaa
insb
jle
sbb
and
shll
cmp
jecxz
pop
popa
nop
ds
sub
xor
lea
imul
ljmp
mov
lret
dec
adc
xchg
xor
push
inc
sbb
inc
roll
movsl
add
lods
sbbb
popa
lods
jae
stos
test
mov
lret
cltd
pop
push
push
popa
sub
outsb
adc
leave
push
pop
rorl
pop
xchg
hlt
faddl
icebp
nop
add
mov
dec
test
pop
cmp
push
cmp
or
fdivrl
xchg
iret
scas
test
imul
lods
roll
mov
mov
mov
mov
xchg
imul
inc
cmp
jbe
mov
shll
or
mov
cmp
fisttpl
push
pusha
dec
cltd
dec
add
cmp
cmp
imul
loop
decb
push
fisubrl
insl
das
inc
jns
dec
gs
push
sbb
mov
lret
popf
hlt
negb
inc
fsubrl
out
push
sbb
gs
pop
ss
fwait
movsl
push
aaa
loopne,pn
xor
int3
lahf
sub
filds
pop
jg
xchg
push
shl
inc
mov
rolb
push
xor
ljmp
jl
xor
data16
popf
and
ret
jae
cltd
loopne
cli
icebp
mov
stos
shrl
mov
hlt
cmp
sbb
mov
fwait
jnp
sub
clc
push
mov
adc
jae
mov
inc
push
pusha
aaa
xchg
shlb
shl
sbb
das
and
push
jmp
dec
xchg
lret
mov
ret
mov
stc
push
inc
cmp
and
add
pop
pop
loopne
loope
mov
in
outsb
push
sub
imul
int
dec
cmp
arpl
xor
rorl
je
dec
cltd
xor
loopew
out
cmc
inc
cmpsb
xor
aam
aas
cwtl
dec
ss
lea
cmp
add
insl
cmpsb
lcall
pop
lods
add
outsb
out
and
xlat
leave
test
xor
adc
jae
or
ja
and
pop
cmpsb
jmp
xchg
xor
cmp
cmc
jns
mov
or
fdivrs
mov
daa
fcoms
lahf
outsl
lahf
stc
dec
pop
xchg
xor
add
pop
jecxz
or
dec
sbb
adc
iret
stos
cmc
lds
xor
adc
xorb
ds
and
inc
add
or
shlb
cmpsb
sahf
inc
mov
adc
inc
or
loopew
jle
jne
cltd
sbb
push
jge
rcrl
loope
jge
and
or
and
sahf
xchg
outsl
jecxz
push
push
xlat
mov
scas
shl
decb
sbb
cmp
shr
add
mov
dec
aas
push
int
and
repz
repnz
mov
jo
and
jns
xchg
bound
mov
sahf
lcall
addb
xchg
test
sbb
insl
cmp
cmp
xchg
sub
imul
lahf
mov
stos
leave
fsubrl
sahf
inc
movsb
pop
xor
fwait
jmp
mov
push
add
add
lea
out
push
or
js
xor
ret
pusha
js
xchg
out
daa
adc
jmp
mov
fs
or
dec
les
sahf
movb
pop
xchg
nop
and
add
cmp
shrb
adc
test
mov
fwait
icebp
sbb
jnp
sbb
js
add
pop
jge
notb
or
jo
jb
gs
dec
sub
inc
shlb
push
pusha
and
aaa
sahf
push
inc
fsts
out
out
xor
popf
dec
sbb
or
inc
cmc
divl
sub
mov
jle
cwtl
int3
jno
lea
ljmp
xchg
mov
push
add
mov
pusha
fisubs
cwtl
jp
scas
xchg
imul
fwait
out
leave
or
and
xchg
push
mov
pushf
add
shrb
cltd
mov
and
mov
push
add
faddl
adc
sbb
ror
aam
xor
mov
mov
mov
mov
mov
aaa
ljmp
pusha
lea
iret
cwtl
pop
outsl
fnstenv
sarb
ret
inc
push
mov
sar
inc
cmp
xor
or
enter
sub
mov
pop
sub
pop
fildll
adc
sub
adc
aas
inc
jmp
daa
ss
rcrb
sbb
fwait
out
inc
add
mov
or
xor
pop
pushf
pop
in
movsl
pusha
sbb
dec
and
push
cmpsb
xchg
inc
xchg
adc
mov
frstor
mov
out
mov
repnz
pop
push
or
mov
bound
sti
data16
sbb
or
pop
and
inc
je
fwait
stos
xchg
mov
jle
repz
les
jne
jle
fwait
lods
mov
imul
sub
xor
lret
sub
jo
test
xchg
js
test
ror
clc
insl
mov
fwait
push
outsb
imul
or
inc
jnp
push
pop
lods
orb
stos
test
push
cs
daa
dec
jmp
mov
add
lret
arpl
mov
sub
xchg
add
mov
mov
lods
fs
mov
out
cmc
dec
jo
cmp
mov
jg
call
adc
pop
mov
sbb
xlat
mov
cmp
pop
jmp
adc
push
pop
lahf
pop
mov
xor
arpl
nop
jae
cld
dec
cmpsl
test
mov
jns
popa
insl
xchg
pop
mov
sti
mov
sbb
incl
insl
in
bswap
fcom
stos
bnd
cld
jecxz
ror
stos
cltd
lock
or
pop
xchg
lret
jns
ret
dec
xchg
mov
mov
and
lcall
adc
loope
lods
outsb
test
mov
lds
fwait
stos
xor
adc
pop
lret
jecxz
push
cmp
pop
inc
pushf
sub
pop
cmp
out
cli
pop
xor
fstpt
sub
out
inc
mov
test
rorl
inc
jl
pop
pusha
pop
sbb
mov
push
outsb
pop
sbb
cmp
cmpsb
jnp
sbb
nop
jl
dec
dec
mov
sti
pushf
dec
popf
pop
test
push
xchg
ficoml
enter
sbbl
mov
sbb
cmpl
mov
mov
fstl
mov
test
jl
scas
fmul
cmpsl
ret
out
lahf
test
fidivs
jl
adc
insb
pop
pop
cmpsb
sahf
dec
sahf
jno
aam
adc
or
push
dec
and
dec
jge
pop
sbb
mov
ds
fwait
insb
aam
inc
in
lds
loopne
mov
test
jge
es
jb
inc
add
gs
mov
in
jae
pop
jmp
xor
mov
movsb
dec
outsl
add
jns
shll
std
sbb
fistps
aas
sub
push
js
test
dec
add
pop
outsb
test
cwtl
mov
sub
mov
rolb
jno
lcall
out
fs
popa
pop
out
into
push
lret
imul
xchg
xor
data16
mov
jno
pop
insb
sub
add
gs
inc
sbb
add
pop
aad
or
sbb
add
sub
xchg
xor
rep
das
out
push
jb
mov
and
mov
or
cmp
mov
bound
or
lds
push
test
fst
inc
dec
ret
sub
xchg
mov
dec
scas
mov
jp
mov
aaa
roll
sbb
push
clc
mov
cmp
inc
lcall
or
cmp
and
cli
fcmove
xchg
shll
lcall
movsb
xchg
add
add
daa
fiadds
cmp
loopne
inc
adc
inc
fwait
shlb
jl
pushf
ja
xor
mov
test
leave
movsl
lea
cs
outsb
jne
mov
push
loopne
cmpl
dec
push
jns
stc
scas
and
pushf
pusha
mov
in
push
imul
mov
mov
mov
adc
adc
pusha
gs
sbb
and
mov
std
mov
gs
dec
fs
ret
movsb
aad
pushl
rorl
fadd
and
dec
icebp
adc
mov
arpl
negl
or
push
push
and
jp
dec
popf
nop
loope
add
rol
mov
xchg
adc
cmp
mov
pop
dec
pop
fwait
mov
jns
out
sbb
jae
orb
push
aaa
popf
insl
in
jb
movlps
lea
mov
dec
aad
pop
mov
out
dec
adc
movb
mov
cli
bound
jns
bndldx
cmp
jne
lret
adc
and
imul
ficoms
jle
sub
fsubrl
in
out
bswap
inc
and
ljmp
cmp
xchg
push
xchg
mov
insl
add
mov
xchg
xchg
inc
sbb
loopne
jp
fdivl
arpl
push
shll
insb
fidivl
lock
xbegin
pushf
arpl
mov
xor
xchg
dec
sbb
lods
xor
xchg
jmp
jo
lcall
fdivrl
cmp
mov
jo
dec
jnp
nop
mov
pushf
mov
in
icebp
out
mov
mov
mov
mov
outsl
inc
pop
leave
and
sbb
dec
and
xor
xchg
test
push
mov
adc
mov
add
mov
jle
pop
push
fcomps
pop
inc
xchg
iret
jo
jb
aas
adc
jg
cmp
test
aad
movsb
jle
repz
push
les
jge
jo
aas
or
cmp
adc
shrb
sub
int3
lods
testl
inc
aad
stos
xlat
fnsave
pop
aas
lods
loopne
mov
ror
mov
dec
push
rcrb
mov
lds
push
sarb
das
xor
imul
inc
jle
xchg
scas
add
out
sbb
add
fdivs
xchg
push
jl
idivb
mov
pop
inc
dec
cwtl
fistpl
pop
add
or
inc
popf
dec
aad
lods
mov
push
adc
pushf
cmp
and
cmp
testl
insl
cld
lret
ljmp
pop
imul
xchg
shrb
rcrb
xchg
sti
inc
adc
mov
mov
add
jge
ret
jg
sbb
push
in
adc
adc
ret
mov
movsb
adc
stos
push
or
cltd
dec
call
shl
popa
push
pop
dec
xchg
lods
lock
loope
cmp
ret
cmp
out
mov
and
push
inc
rolb
xor
cli
or
je
xchg
loopne
lock
push
xchg
insb
dec
sbb
jae
fcomp
into
inc
xor
xchg
call
cmp
jp
dec
cmp
mov
subl
mov
or
adc
test
jbe
repz
xchg
cmp
xor
cmp
pop
pop
mov
sbb
adc
lods
jnp
mov
filds
pop
popa
xchg
pop
push
cmpsl
sub
push
jne
ret
outsb
cmp
sbb
sub
js
testb
dec
sbb
or
push
arpl
nop
stc
cmp
je
inc
mov
sub
push
push
leave
jne
gs
mov
xor
les
ljmp
aaa
ds
inc
mov
mov
push
cmpsb
add
dec
aad
popf
hlt
arpl
gs
stos
xchg
sbb
mov
push
sub
xchg
in
sub
test
push
sti
cmp
lock
xor
dec
aas
out
jp
sahf
fldl
or
dec
jb
lods
aas
aas
pop
push
sub
adc
std
mov
loop
cmpsl
fsubrs
add
add
xchg
jae
mov
jge
faddl
lcall
loop
sti
xor
cmpsl
and
xor
call
and
fcoms
lea
lea
inc
inc
call
push
es
bound
push
xor
jae
enter
or
cli
and
or
insl
insl
push
add
aas
dec
mov
cmc
out
fisttpll
xor
orl
aaa
mov
pop
enter
xchg
movsl
push
xor
mov
test
pop
imul
xchg
jbe
jae
add
arpl
mov
cmpb
fscale
data16
and
xor
shll
fistpll
xchg
mov
push
xchg
and
dec
jnp
sub
filds
cmp
xchg
ds
icebp
pop
sub
xchg
jle
icebp
sahf
add
mov
xor
dec
sub
cmpsl
pop
mov
test
push
sbb
les
aad
inc
iret
popf
je
lret
movsl
mov
clc
or
and
test
xchg
and
mov
std
xor
xchg
sbb
sahf
test
inc
push
mov
adc
call
mov
and
xor
inc
push
outsb
rcr
xor
js
hlt
pop
xchg
outsl
xor
sbb
jecxz
xlat
mov
pop
xor
in
outsl
lcall
sub
mov
inc
dec
add
mov
mov
cmp
test
pop
sbb
sbb
fiaddl
mov
iret
lods
mov
inc
setns
je
sbb
pop
inc
and
xchg
xchg
rclb
popf
int3
xor
xor
rcrb
xchg
test
sbb
scas
and
jp
xchg
js
push
lret
and
jp
pop
inc
cmc
push
adc
outsb
push
cmpsl
lods
xchg
out
out
sub
cmp
enter
jmp
or
jo
jle
in
fucomip
imul
xchg
ret
lods
inc
pop
xchg
pop
sub
push
push
xor
mov
fists
inc
addl
rcrl
sub
pop
ficompl
mov
mull
mov
sbb
ds
sbb
jle
imul
addr16
xor
cmp
dec
cli
jmp
jp
xchg
scas
xchg
outsb
cmp
call
dec
xchg
push
inc
mov
push
push
and
dec
decl
int3
push
pop
aam
lret
mov
cmc
xchg
leave
cmpsb
add
jl
xchg
xchg
fsts
cwtl
mov
lret
mov
call
in
jl
push
pop
bound
mov
pop
nop
inc
jno
mov
fwait
inc
negl
cmp
xor
or
lret
out
lock
ljmp
dec
or
outsl
mov
mov
lret
adc
jbe
rcrl
insb
popf
lcall
inc
into
mov
cwtl
sbb
bound
mov
jne
sub
into
push
or
in
or
stc
lret
or
and
dec
pop
inc
lea
xorl
scas
cld
jp
mov
adc
rcll
test
push
xchg
iret
insl
sbb
jp
stos
mov
ljmp
dec
rolb
sub
xor
pop
pop
mov
xor
into
or
sbb
jl
fimull
lcall
cmpsl
int
sub
jb
hlt
mov
jecxz
adc
mov
mov
xor
or
sbb
lahf
inc
pop
dec
cmpl
mov
into
lret
lret
xor
push
stos
in
popf
jae
test
pushf
mov
cmp
xchg
jb
pushf
insl
popf
or
lret
adc
and
popf
mov
in
lcall
outsl
ds
out
sbb
cmp
add
aad
in
pop
mov
shlb
cli
mov
push
fs
aas
sbb
ljmp
cld
out
cmpsb
and
daa
int3
testb
pop
lret
mov
adc
mov
popf
inc
dec
push
add
or
fbstp
and
or
adc
dec
mov
enter
test
pop
and
ss
test
rolb
sbb
fimull
push
orb
dec
into
xor
ret
adc
notb
cmp
into
cmp
cld
jno
bound
int
sbb
mov
mov
lods
adc
lods
pop
inc
enter
out
jnp
cld
cwtl
ds
mov
ret
lods
aam
sbb
or
js
mov
ret
lahf
enter
pop
mov
scas
jg
loop
ss
xlat
add
or
add
outsb
add
add
add
add
add
cltd
dec
jg
gs
incb
iret
sbb
push
or
mov
fsubl
sub
xor
push
mov
xchg
adc
mov
and
ret
jnp
mov
cli
std
movsl
inc
add
js
jl
std
lret
loop
xor
dec
xlat
and
movsb
or
pop
push
jne
xchg
inc
push
lahf
pop
add
ret
xor
xor
fnstcw
andl
sti
inc
xchg
rorb
cmp
pop
test
sub
data16
fnstsw
inc
add
adc
cmp
xor
push
add
pushl
test
sti
dec
jno
daa
adc
ja
stos
xor
dec
into
adc
insl
in
sbb
lret
mov
movsl
xchg
lahf
jl
lcall
mov
repz
inc
lea
dec
rcrb
mov
and
imul
pop
cmp
leave
pop
aaa
dec
add
cltd
stc
jl
xor
cmc
outsb
andb
inc
mov
dec
aam
cltd
stos
push
pop
addl
out
lea
cmp
lea
lock
xchg
inc
push
and
sbb
call
sub
cmp
mov
outsl
movsb
xlat
mov
jecxz
test
cwtl
jmp
notl
or
shlb
add
nop
in
notb
mov
loop
clc
pop
aad
xchg
push
imul
fdivs
sub
jb
and
cli
cmp
int
and
adc
hlt
fdivrl
arpl
inc
mov
and
loop
and
sbb
inc
jg
inc
cmpsl
and
or
stos
xchg
push
outsb
inc
adc
dec
mov
lcall
jmp
sbb
idivb
out
xchg
rcl
pop
sub
push
and
sbb
sub
or
push
into
mov
mov
pop
in
inc
insl
inc
js
ret
and
and
fsubr
xorl
orl
sbb
dec
sbb
xorl
mov
outsl
or
jne
jnp
cmp
inc
gs
mov
loopne
pop
in
xchg
lock
sbb
mov
mov
jb
nop
sahf
insb
mov
pop
xchg
jns
rorb
movsl
stc
gs
je
mov
xchg
es
mov
call
sub
sub
insl
mov
mov
cld
push
lods
sbb
jg
ja
subb
fidivrl
jno
pop
add
fwait
jb
and
push
shll
call
mov
mov
mov
inc
shlb
dec
mov
xchg
jg
cmpsb
add
adc
lcall
and
leave
iret
and
add
shl
pop
push
sub
sub
andl
mov
rep
mov
or
pop
mov
movsl
jo
sti
jo
nop
aam
adc
jge
test
ljmp
int
inc
xor
and
popf
shl
incb
inc
sbbl
cmp
dec
mov
xlat
sbb
imulb
add
rcrl
imul
adc
repz
pop
dec
pop
sub
push
movsb
lods
scas
pop
pushl
subb
jne
cld
andl
xchg
in
je
imul
and
sub
popa
xor
dec
cs
or
jg
and
mov
xor
fcmovnb
sbb
outsl
sub
rorb
aaa
scas
sbb
lcall
dec
mov
insb
sahf
cmovns
lds
push
inc
outsl
or
icebp
push
add
jge
dec
rcr
cmp
xor
sub
mov
scas
lret
lret
and
mov
hlt
ror
cmp
cmp
xchg
sub
js
inc
daa
and
sub
les
icebp
out
repz
dec
mov
cmc
pusha
push
pop
adc
rolb
cli
sbb
inc
mov
push
stc
lods
push
jne
cs
jg
inc
clc
and
mov
outsl
mov
enter
sbb
ret
xchg
cli
lret
popa
aam
jae
xchg
or
xor
icebp
shrb
ret
or
fwait
xor
psubb
jge
pop
pop
xchg
dec
add
shrl
fldl
hlt
movlps
inc
push
adc
test
stos
dec
dec
xchg
fiadds
stos
lock
out
add
xchg
or
or
add
add
add
xchg
insl
lahf
mov
push
cmp
jle
xchg
push
sti
out
mov
bound
lds
add
jmp
xchg
sahf
fucomp
pop
stos
inc
jmp
hlt
daa
mov
or
jle
pusha
adc
insb
sbb
inc
xchg
mov
or
insl
insl
inc
mov
xor
inc
dec
addr16
cld
rol
push
sbbb
sub
xchg
mov
and
cltd
push
imul
pop
sbb
lods
lock
outsl
inc
push
dec
hlt
inc
sub
cmpsb
xorl
addb
leave
test
push
inc
lods
xchg
jb
dec
loope
mov
mov
inc
sbb
gs
push
mov
cmc
sbb
pop
mov
stc
mov
fldl
fucomp
mov
testb
loop
in
stos
cltd
cs
sbb
jnp
arpl
mov
xchg
iret
inc
mov
stc
mov
and
mov
sub
mov
es
rcrb
int3
into
inc
jb
mov
cmpsl
mov
std
jge
adc
pop
push
sbb
rolb
push
cmpsb
aad
shr
push
fiaddl
add
push
inc
enter
sbb
mov
push
movsl
push
cmpsl
push
in
adc
push
inc
into
leave
mov
jge
or
xchg
fistpll
lea
adc
div
adc
cltd
mov
nop
das
dec
jo
aam
cmpsb
sub
inc
dec
mov
jl
out
push
lods
fbld
out
cld
inc
sub
lcall
int3
sti
lea
aas
lcall
mov
dec
push
outsl
xor
jno
or
jp
jg
dec
lods
popf
repnz
lret
pop
out
lret
mov
cmc
mov
mov
inc
sbb
gs
push
pop
sar
ljmp
movsb
push
cmpsb
lea
mov
fldl
fucomp
mov
testb
loop
in
stos
cltd
cs
sbb
mov
stos
testb
testl
and
mov
sub
mov
es
rorb
sbb
pusha
xor
mov
std
jge
adc
pop
push
sbb
rolb
in
pop
adc
inc
mov
out
enter
sbb
mov
push
movsl
push
cmpsl
push
in
adc
push
inc
into
leave
mov
push
imul
mov
out
popa
adc
lods
adc
div
adc
cltd
mov
nop
das
dec
jo
aam
cmpsb
addr16
orl
sbb
iret
jl
out
push
lods
fbld
out
cld
inc
sub
lcall
int3
sti
lea
aas
iret
dec
test
dec
fdivs
cmpsl
lcall
inc
push
popa
test
or
add
outsl
mov
or
dec
outsb
test
stos
rcl
cmp
mov
jno
pop
sub
gs
cmp
jbe
mov
mov
jno
shrl
js
adc
pop
int3
lods
sti
push
jb
adc
cmc
push
xchg
loop
push
rcrl
loop
das
es
and
repnz
or
mov
out
mov
sub
mov
lods
mov
pop
repz
add
mov
jo
dec
dec
mov
ds
adc
push
inc
into
leave
mov
lods
mov
or
jb
adc
lret
shlb
xchg
and
out
sbb
dec
jo
aam
cmpsb
pop
and
xchg
sub
into
sub
push
sub
add
leave
clc
addb
test
sti
lea
aas
push
faddl
loope
es
sbb
adc
or
cmp
lcall
mov
xchg
ret
mov
cmc
pop
cmc
mov
shll
xor
inc
push
fisubs
mov
push
pop
sar
ljmp
pushf
adc
sbb
adc
pushl
mov
jp
sbb
jge
jecxz
rcll
cld
jne
pop
xlat
ret
or
pop
mov
mov
fwait
loop
xchg
sar
add
rcr
xchg
ret
jp
rorb
mov
dec
in
andb
inc
mov
mov
mov
dec
and
cmpl
in
rolb
or
inc
push
mov
iret
dec
adc
in
add
mov
jo
dec
dec
mov
ds
adc
push
inc
into
leave
mov
mov
sbb
adc
lret
shlb
xchg
and
out
sbb
dec
jo
aam
cmpsb
push
mov
popa
testb
sub
into
sub
push
sub
add
leave
clc
addb
test
sti
lea
aas
jmp
mov
fwait
repz
lret
cli
push
sbb
adc
or
cmp
lcall
dec
in
and
in
mov
cmp
mov
sbb
inc
adc
xchg
or
popf
stos
add
adc
push
inc
cmp
cmp
or
shrb
inc
fdivrp
adc
fwait
xor
cmpsl
push
sub
pop
and
aad
test
dec
dec
pop
into
sub
push
sub
add
rcl
dec
or
arpl
add
jg
push
pusha
mov
mov
xor
fildll
aad
inc
cltd
lea
or
add
pop
mov
mov
mov
aad
in
je
repz
add
mov
inc
cmpsl
sarb
out
adcl
int
ret
cli
cmpsl
scas
bound
push
xchg
lahf
mov
stc
sbb
sub
ds
data16
mov
out
sahf
mov
mov
fwait
adc
clc
out
sub
jecxz
test
jns
jno
rcl
xchg
push
shlb
mov
jns
adc
mov
inc
xor
sub
js
pushf
je
ds
sbb
or
mov
mov
inc
adc
xchg
or
popf
stos
add
or
pop
test
mov
xchg
stc
or
shrb
inc
fdivrp
adc
fwait
xor
xchg
pop
mov
addl
in
test
int3
imul
dec
popf
jmp
jg
je
and
cmc
jl
push
sbbl
mov
out
cld
scas
aaa
mov
jae
bnd
pop
mov
jp
fmul
cmp
push
xchg
loope
jp
rcll
scas
cwtl
lock
sahf
daa
mov
sub
out
mov
into
pop
enter
sbb
mov
adc
sub
and
lock
xchg
sub
iret
mov
mov
shll
loop
mov
xchg
rorb
jg
out
mov
ret
loopne
mov
and
icebp
add
js
movsl
push
or
cmc
and
daa
mov
mov
daa
inc
push
sbb
sub
ror
jb
stc
ja
mov
cld
stc
movsl
mov
cmpl
or
test
adc
or
std
xchg
fisubs
imul
push
fisubrl
decb
cmp
enter
popa
out
mov
aaa
lods
push
xchg
mov
test
out
mov
pop
dec
insb
sbb
push
aad
mov
popf
data16
fcomip
pop
sbb
daa
adc
xor
push
pusha
cld
pop
roll
adc
or
mov
scas
xchg
lahf
cmp
adcb
fldcw
shr
stos
loop
xchg
lahf
mov
xchg
mov
adcb
lret
out
jo
inc
imulb
sbb
popf
push
pushf
or
lret
mov
push
push
jl
cmp
mov
out
enter
rcr
je
mov
cmp
pop
or
dec
imul
mov
mov
fcompl
push
sub
mov
cmpsl
call
popa
test
xchg
cmpl
or
test
adc
or
std
xchg
fidivs
cmp
jecxz
js
jg
jns
enter
popa
out
mov
aaa
lods
push
xchg
xchg
addr16
cmp
loope
xor
push
in
push
aad
mov
popf
data16
fcomip
pop
sbb
mov
aas
xor
push
pusha
cld
pop
roll
adc
or
mov
scas
xchg
lahf
cmp
test
jno
jl
test
adc
push
xchg
lahf
mov
xchg
mov
or
jbe
dec
mov
dec
push
xchg
cmp
mov
adc
popf
push
pushf
or
lret
mov
push
push
jl
outsl
cmp
cmc
mov
outsb
push
enter
rcr
je
mov
cmp
pop
or
pop
jo
inc
rclb
dec
xor
sub
fcompl
std
out
adc
mov
sarb
ud0
xor
pop
fcoml
mov
push
rcrl
pop
add
inc
adc
cmp
push
or
sbb
inc
xor
in
sbb
or
test
fadd
mov
pop
cmp
sub
lahf
sub
sub
rorl
cmp
test
xchg
adc
lret
add
pop
ret
pop
add
add
add
add
add
add
mov
int3
mov
or
imul
inc
or
inc
mov
mov
int3
les
cmp
movsb
xor
fwait
cmp
lea
cmpl
pop
gs
add
inc
dec
xlat
cmp
daa
inc
mov
daa
xchg
int
cmpsb
arpl
ja
rcr
iret
or
cli
mov
insl
cltd
dec
mov
xlat
sub
jb
add
mov
jg
sub
addb
lods
xor
pusha
push
in
cmpsl
repnz
xor
mov
push
xor
rcrl
dec
sbb
dec
btr
xchg
lret
mov
nop
ljmp
ret
push
and
je
pop
pop
pushf
fimull
and
orl
sub
pop
das
lea
mov
xchg
ret
enter
xchg
das
daa
pop
cmp
in
jg
sbb
ja
lahf
inc
test
pop
pop
repnz
les
aam
mov
roll
insb
jno
sbb
xor
pop
xchg
mov
xchg
imul
sahf
push
lock
in
lods
outsb
push
test
dec
cmp
lea
mov
xor
adc
mov
jge
lods
sub
ret
push
aaa
xlat
sbb
mov
mov
icebp
mov
daa
mov
cmp
aam
out
insb
and
cmc
aas
mov
xor
pop
adc
mov
pop
sbb
insl
push
jae
push
pop
pusha
mov
in
mov
arpl
clc
sub
or
push
mov
dec
or
gs
sbb
cmp
inc
cmc
test
arpl
push
jmp
or
xchg
cmp
sub
roll
pushf
mov
movsl
jle
ss
stc
ljmp
pop
adc
dec
mov
ret
popa
sbb
xchg
sti
stos
lock
push
fdivl
and
call
pop
rclb
stos
mov
mov
rcr
jo
ja
out
js
cmp
add
pop
mov
jmp
adc
push
sbb
lcall
fnstenv
pop
sbb
xchg
je
cmp
mov
lods
fadds
add
ss
adc
mul
out
or
dec
aas
dec
jnp
mov
fsubrs
les
adc
pop
test
andb
pop
dec
xor
mov
aas
mov
fstps
push
pop
cld
stc
inc
insb
lret
enter
scas
imul
inc
mov
in
lds
sub
pop
inc
clc
jns
mov
cltd
sarl
lret
jle
add
cmpsb
ds
cmp
push
jmp
out
xchg
mov
cwtl
xor
outsb
push
ja
out
iret
push
movsb
add
sub
iret
dec
xchg
cmp
lea
jmp
icebp
lret
sti
xor
leave
dec
lcall
imul
jcxz
sbb
popa
push
ret
jl
jns
fstl
jecxz
andb
pop
call
sti
cmc
jnp
cmp
das
jno
lods
negl
mov
inc
xor
sub
insl
int3
pusha
mov
loope
testl
out
pusha
mov
loope
testl
out
pusha
mov
loope
testl
test
xchg
into
and
jl
sbbl
pop
xor
dec
sarl
test
push
dec
decb
in
cmp
fsubrs
data16
cmp
adc
into
cli
movsb
lods
jb
outsl
xchg
data16
mov
add
xor
push
dec
inc
lret
add
xor
and
cmp
pop
cmp
push
in
in
mov
repnz
sbb
orb
rcr
loopne
pushf
cmp
add
push
hlt
rorb
jo
inc
push
jns
decb
insl
fcompl
mov
mov
mov
fwait
arpl
imul
lea
ret
mov
add
add
add
add
add
jl
jbe
popf
ret
mov
lret
pop
push
mov
test
test
fs
loop
pop
mov
outsl
cltd
mov
divb
add
mov
dec
and
loopne
pop
int3
pop
pop
mov
icebp
xchg
cltd
imul
sti
insb
xchg
inc
je
mov
inc
pop
xlat
adc
jne
push
push
xor
jp,pt
std
les
mov
mov
leave
cmc
push
fadds
pop
lcall
movsl
xchg
testl
mov
xchg
add
cmp
xor
mov
or
inc
idivb
std
in
inc
lods
in
stos
fsubs
test
cmp
dec
xchg
inc
lods
arpl
rcll
stos
mov
mov
xchg
pop
xor
push
loopne
mov
fisttps
push
cmp
test
or
mov
jg
andl
fidivs
lret
mov
jae
fwait
push
xchg
mov
jmp
cltd
jmp
das
mov
fldcw
push
push
mov
add
subl
dec
pushf
xchg
scas
cmp
push
fbstp
jb
sbb
mov
out
ret
dec
dec
lds
mov
xchg
lds
mov
fidivrl
in
sub
xchg
rcrb
insl
inc
dec
popf
push
mov
sub
lahf
jnp
push
mov
jne
xchg
sub
inc
and
cwtl
sub
sbb
sbbb
das
mov
jbe
mov
jp
daa
testb
adc
or
fucomp
cli
repz
sub
iret
sahf
out
fs
and
push
push
mov
clc
jne
add
inc
ljmp
mov
and
or
jge
std
or
pop
movsb
insl
sub
sub
arpl
dec
jb
cs
repz
sbb
xchg
std
fs
add
lcall
sub
xchg
out
mov
sub
or
mov
xchg
mov
ret
push
pop
add
xchg
or
inc
add
add
add
add
mov
hlt
stc
out
dec
mov
mov
adc
imul
push
cli
cli
lock
je
jle
stos
and
repz
cmpsl
ret
popa
fadd
push
aas
sub
dec
add
repz
sbb
aas
cmp
bnd
mov
out
add
movsb
inc
lcall
pusha
call
mov
push
fwait
in
mov
sbb
mov
aaa
test
movups
adc
lret
ret
push
push
jo
fidivl
int3
aad
ret
lret
fldcw
std
aam
sarb
push
mov
inc
sbb
pextrw
and
cmpsl
in
push
mov
sub
push
jp
cmp
mov
mov
std
dec
ss
mov
inc
xor
mov
xchg
mov
imul
outsb
adc
xor
filds
lea
inc
sub
xchg
test
sti
dec
les
add
fildl
pop
and
inc
nop
pop
lds
xor
mov
pop
lret
cmp
jle
ficoms
jl
lret
push
or
and
or
hlt
sbb
mov
mov
mov
cld
out
imul
shl
sti
add
push
mov
in
push
jbe
push
into
add
dec
and
in
and
inc
nop
pop
lds
leave
andb
add
aaa
in
xor
icebp
push
mov
and
jbe
xor
jns
add
cmpsl
dec
mov
lret
sub
cmc
jns
ja
repz
test
xlat
enter
xchg
push
cli
sub
jecxz
fdivrs
cmp
stos
iret
rcrb
or
daa
adc
test
gs
ja
pop
mov
adcl
test
pop
push
pop
dec
dec
arpl
inc
pop
stos
and
mov
ds
shll
arpl
adc
imul
mov
rcll
add
and
mov
shrl
mov
pop
or
jns
sbb
mov
ret
fiadds
pop
jo
inc
stos
iret
aad
popf
icebp
vpackssdw
push
out
mov
fstps
mov
jge
out
pop
mov
daa
xor
and
inc
inc
jmp
stos
dec
data16
sub
mov
dec
into
popa
lods
ja
lods
leave
lahf
mov
out
cmpsb
cmp
mov
xor
or
int
mov
xchg
jo
clc
cmpsb
xchg
cld
dec
repnz
push
lock
adc
and
loope
push
clc
pop
aas
xchg
leave
sbbb
jae
es
je
or
aaa
xor
dec
repz
mov
add
stos
pop
scas
and
test
jbe
cmpsb
outsl
add
insl
inc
shlb
mov
inc
or
inc
cmp
mov
repz
mov
ds
push
cmpsl
inc
mov
jnp
cltd
add
shrl
ja
scas
ds
daa
xchg
cmp
mov
inc
xchg
mov
popf
pop
sbb
jo
or
daa
outsb
lds
int3
push
sbbl
shll
sub
xchg
repnz
aad
push
xchg
out
lcall
dec
add
mov
mov
iret
loopne
cmp
punpckhwd
pusha
push
adc
jo
cmpsl
jmp
mov
jg
ret
sub
or
sub
mov
dec
xor
pusha
lock
hlt
imul
mov
test
mov
int3
cli
or
cltd
mov
sbb
jbe
scas
adc
icebp
push
push
mov
jbe
jns
or
std
loope,pn
nop
cmp
mov
adc
push
in
sub
test
or
popa
jb
pop
or
pop
adc
sub
int3
pop
pop
push
mov
xchg
mov
pop
sub
pop
imul
inc
cmp
fldpi
push
adc
jo
daa
mov
int
clc
jmp
sbb
adc
lret
test
or
cmpsl
mov
pop
daa
mov
rcrb
popa
icebp
shrl
lahf
inc
dec
stos
push
or
hlt
psubsb
pop
jg
arpl
aad
popa
das
mov
dec
sub
push
inc
imul
fldt
testb
imul
sub
int
movsl
mov
out
mov
jnp
out
dec
pop
sub
xlat
sbb
xchg
outsb
pop
cmp
jge
jle
sub
fistps
mov
sarl
xlat
aaa
lret
movb
lods
iret
adc
mov
sbb
sub
pop
push
cmp
pop
push
xor
ss
int
pusha
jnp
mov
leave
cmp
jnp
jo
dec
mov
pop
rcrl
xor
inc
insl
adc
or
sub
ror
cs
mov
mov
adc
mov
inc
sbb
rorl
std
xor
fcoms
pop
movb
xchg
push
ret
stc
stos
outsl
mov
mov
stc
sbb
push
std
mov
mov
lock
outsl
push
rcl
dec
dec
sub
xchg
aam
inc
fdivs
dec
leave
imul
fstpt
xorb
repz
sbb
aaa
add
jne
cs
mov
pop
dec
xchg
push
and
decl
stc
mov
cli
cld
inc
daa
imul
rorl
pusha
sub
rolb
mov
outsb
mov
pop
mov
dec
sahf
sarl
mov
lret
cmp
jbe
pop
pop
sub
xor
jl
js
sbb
dec
adcb
sarb
shlb
enter
lods
leave
or
add
inc
add
xchg
imul
ret
cmc
loope
test
xor
mov
sub
imul
mov
jnp
sbb
enter
or
sbb
leave
dec
adc
in
fnsave
sub
lea
sbb
dec
je
scas
mov
fwait
mov
add
outsl
stos
std
dec
mov
add
mov
dec
in
cs
xchg
push
in
jg
xor
xchg
xor
insl
mov
in
jg
cmp
xor
jg
lock
inc
fnstenv
cmp
adc
mov
lahf
mov
loope
ret
scas
mov
cmpl
cmpsl
sbb
fadds
lcall
std
mov
pop
cmp
mov
mov
xor
lods
fcmovnbe
jno
xchg
xor
cmc
test
xor
mov
mov
test
into
cli
and
and
loopne
lret
push
pop
cmp
jns
xchg
mov
xor
mov
mov
xor
inc
jle
fwait
sbb
add
in
push
js
out
nop
jge
fisubs
mov
xchg
std
dec
jbe
seta
mov
icebp
dec
test
in
xor
imul
popl
jno
pushf
mov
lods
jecxz
fsubl
mov
and
and
icebp
mov
and
jns
outsb
lds
mov
pop
aas
add
sbb
ja
repnz
cltd
mov
scas
insl
mov
lea
inc
aas
and
xchg
movsl
ja
mov
mov
dec
pushf
outsl
push
sbb
or
xchg
xchg
sbb
adc
dec
clc
mov
cli
push
cli
cwtl
clc
in
push
leave
in
add
bnd
sti
lret
ja
shlb
jecxz
mov
jo
xor
mov
movsl
jmp
shlb
jb
lcall
add
out
push
ja
ret
aad
dec
jmp
and
cmpl
and
mov
pop
xchg
fwait
dec
push
dec
xor
inc
xchg
inc
jo
push
aam
adc
mov
or
ret
and
inc
mov
in
cmp
sbb
cld
push
xor
or
xor
loop
aad
push
lahf
stos
rorb
out
test
and
shl
je
sub
push
iret
cmp
and
push
mov
fnstcw
les
lds
ja
cmp
sbb
in
lret
fsubs
xchg
fidivl
lods
xor
lret
jp
and
das
ja
push
mov
sti
int
adc
jns
fld1
cmpsl
dec
cmp
or
pop
push
inc
je
scas
insl
mov
mov
jge
outsl
mov
sub
lea
js
insl
mov
cmp
les
inc
push
sbb
adc
popa
popf
cmc
insl
xchg
push
lcall
nop
cmp
cltd
cs
int
xchg
imulb
mov
sbb
jnp
cwtd
clc
sbb
or
movsl
in
ret
fildl
adc
cwtl
cmpsb
mov
pop
or
lahf
mov
test
data16
out
iret
scas
push
loopne
push
jmp
xor
sti
addr16
sbb
jle
je
imul
stos
ljmp
cmp
scas
and
sbb
jge
orb
add
adc
mov
push
push
std
pop
or
add
and
xor
and
push
out
sahf
pop
mov
mov
mov
add
adc
pop
movsl
push
jecxz
or
lahf
insl
test
pop
cltd
xchg
push
xchg
std
fs
dec
add
mov
dec
jecxz
jl
and
pushf
pop
add
sbb
or
out
cmc
andb
scas
test
push
stc
mov
mov
push
pop
sbb
pop
fistpll
inc
sbb
popf
push
sti
sbb
inc
dec
dec
adc
js
push
jp
adc
and
sbb
mov
lret
das
sbb
cli
call
std
aad
and
sbb
int3
pushf
jbe
mov
pusha
sbb
ds
mov
sbb
xor
inc
mov
dec
lea
popf
lods
sub
or
daa
dec
and
imulb
mov
test
mov
fnstcw
test
add
imulb
and
cmp
imull
dec
or
daa
dec
pop
add
adc
stos
rcll
sub
ds
cmp
jg
inc
mov
sub
fnsave
aad
repnz
fcoml
les
lea
and
subb
add
rolb
sbb
jp
fstpt
movlhps
dec
and
lret
add
inc
das
inc
xor
test
mov
shrl
xor
pusha
cmp
ret
pop
out
daa
xchg
repz
pop
in
add
pop
repnz
leave
addb
das
xor
pop
cmp
xor
mov
mov
les
pop
and
jnp
daa
cld
ret
sub
cmp
stos
sub
mov
setle
ficoml
outsb
jno
xchg
fldenv
mov
xorb
dec
dec
nop
mov
nop
dec
inc
cmp
jno
ds
mov
aaa
leave
xchg
rolb
cmp
add
mov
out
push
shll
rolb
pop
cmc
mov
jecxz
js
add
cmpsb
test
fistps
mov
pop
mov
xchg
adc
dec
pop
pop
fistpll
pop
pop
inc
je
das
in
es
lahf
insl
jg
iret
push
adc
xchg
pop
insl
jmp
mov
jg
test
daa
or
pop
dec
imul
push
inc
test
in
inc
mov
lock
mov
shlb
ret
fxch
and
mov
dec
dec
inc
ljmp
lods
leave
jle
xchg
inc
iret
xor
mov
aaa
loop
push
and
and
mov
aam
or
push
mov
int
jecxz
lcall
aad
add
lea
jle
inc
shll
adc
cmpsl
xor
fwait
orl
jge
test
cmp
xor
sub
adc
decl
stc
sbb
es
int
test
cltd
jp
jns
ret
xchg
pop
pusha
add
xor
rcrb
pop
sbb
cmp
movsl
inc
pop
and
mov
repz
in
mov
pop
mov
pop
xor
in
mov
aaa
xchg
fcompl
fcom
mov
loop
nop
add
jb
sarb
pop
adc
in
adc
mov
xor
sbb
add
inc
push
cld
add
in
adc
ss
pusha
enter
movsl
dec
jmp
scas
dec
sub
push
int3
mov
jb
fcoml
adc
pop
or
jbe
test
push
lock
mov
or
aam
xchg
cmc
xchg
and
loop
xor
lods
lahf
and
ficoms
loope
mov
je
xchg
int3
enter
push
mov
movsl
sbb
xor
mov
mov
xor
push
adc
mov
mov
ret
jno
fsubr
mov
fisubl
out
mov
push
pop
cmp
push
sbb
jno
leave
notl
rclb
xchg
or
cli
mov
push
rcll
in
cmp
icebp
jmp
aaa
hlt
rolb
jne
je
mov
inc
loopne
testb
out
lods
sarb
adc
mov
jne
pushf
sub
push
push
cs
cltd
jne
mov
leave
into
push
pusha
dec
pop
xchg
jb
jnp
insl
rcr
fwait
xor
cmc
push
mov
in
aaa
cld
mov
jmp
testl
iret
pop
inc
imul
mov
pop
imul
insl
dec
testl
cmc
mov
aam
ret
rorb
push
ret
aad
push
lds
or
or
leave
lahf
xchg
lds
pinsrw
xor
out
subb
call
test
js
scas
shrl
mov
pop
or
sti
dec
cmpsb
pop
repz
xor
add
push
and
fidivl
push
daa
in
in
mov
xchg
pop
fisubrl
insb
cmp
jbe
mov
dec
mov
test
add
cmc
push
into
jmp
fwait
xchg
lret
outsb
jno
cmp
or
andb
mov
push
sbb
cmpsl
sahf
int3
popa
xchg
addr16
mov
in
jle
pop
inc
mov
in
fiaddl
aaa
icebp
mov
cmpsb
mov
jmp
lahf
fnstsw
flds
mov
stos
mov
das
sub
jae
lds
sub
cltd
insb
pop
dec
push
cmp
dec
fwait
int3
jle
pop
cli
outsl
inc
xor
push
xchg
push
bound
and
and
jbe
nop
arpl
xchg
mov
mov
push
sub
mov
movsl
lods
inc
xor
xor
stos
gs
jecxz
fs
ret
adc
inc
scas
outsb
sbb
pusha
cltd
mov
test
cmp
aas
xor
arpl
mov
dec
push
jno
xchg
mov
adc
les
mov
mov
je
popl
sub
mov
jns
loope
je
sub
lahf
in
mov
sub
inc
shrb
sub
frstor
xchg
in
push
movsb
pop
xchg
test
cwtl
shlb
mov
adc
mov
mov
loopne
mov
int
int
jp
stos
insl
stc
insl
add
jo
mov
imul
out
xchg
mov
jmp
dec
pop
es
jbe
mov
sub
mov
test
xor
dec
test
imul
dec
js
jg
aam
mov
inc
movsl
add
sbb
cli
icebp
sahf
sarb
sti
push
or
or
cmp
dec
loop
jge
push
and
push
imul
pusha
stos
xchg
cmp
sbb
in
sbb
cwtl
dec
hlt
js
movsl
xor
mov
or
inc
shlb
sub
pop
add
adc
stc
pop
mov
sub
out
xor
xor
aad
jae
push
out
mov
movsb
push
in
push
sbb
or
mov
ljmp
adc
out
scas
push
xor
mov
mov
lock
hlt
scas
cmp
and
sbb
mov
stos
add
dec
ja
pop
sub
cmp
sub
gs
cmp
repz
mov
mov
and
fstpl
mov
enter
mov
sbb
push
sar
adc
jnp
and
sbb
mov
inc
fdivrl
push
jle
adc
mov
xchg
add
pop
or
dec
jbe
call
push
fs
sti
cld
loop
lea
cmp
pop
shll
mov
std
xlat
xchg
adc
je
fcomps
cmp
cmp
lahf
pop
in
icebp
push
std
daa
in
xorps
imul
insl
xlat
ficompl
sahf
cltd
popa
jl
cmpsb
stos
jo
mov
mov
lods
into
stos
add
mov
iret
notb
sbb
repnz
iret
repnz
das
pop
or
test
loop
inc
ror
hlt
xchg
xor
aad
sbb
mov
xchg
aaa
mov
negl
lret
pop
pop
pusha
mov
lock
push
sub
fcmovbe
adc
pop
mov
xor
clc
inc
stos
loopne
jge
pop
adc
sub
mov
sbb
bound
mov
inc
xchg
mov
stos
or
jge
sbb
xchg
lods
xor
cltd
xor
leave
popf
lock
sbb
sbb
call
mov
js
jg
push
iret
push
aaa
jmp
or
adcl
std
mov
das
insb
in
push
bnd
fsub
fistl
cmc
shll
push
scas
fcomps
out
repnz
sti
jne
ja
sbb
add
add
push
cmp
cwtl
scas
add
xor
xor
dec
xlat
stos
push
popa
cmp
pop
fsts
push
gs
sub
cwtl
stos
mov
sbb
arpl
dec
mov
stos
fstpt
mov
negl
mov
lods
dec
push
mov
or
jne
sbb
dec
xchg
mov
test
and
sub
rclb
push
out
aam
or
add
js
ja
lods
sbb
loope
stos
or
mov
xor
sub
jecxz
in
jle
loopne
incw
xchg
adc
xor
arpl
lret
xorl
sbb
test
and
xchg
dec
xchg
iret
cs
repz
jns
loopne
fsubrl
pop
mov
or
push
std
addr16
insb
sbb
dec
xor
adcb
fbld
into
mov
cs
add
mull
hlt
pop
lret
addr16
push
xor
repnz
pop
push
sbb
in
cmpsb
jno
test
jae
data16
andb
nop
mov
iret
add
pop
sub
dec
jp
mov
imull
adc
out
pusha
xor
dec
in
jb
ds
int
sub
fxch
mov
orb
add
rorb
jmp
jo
push
adc
sbb
shlb
pop
dec
and
mov
test
lods
xchg
lock
mul
test
push
lret
arpl
aaa
stc
or
inc
scas
sti
sbb
out
cs
inc
addl
push
mov
out
outsb
pop
outsl
push
xchg
inc
xchg
fidivrs
fildl
jl
cmpsl
and
pop
popf
xchg
cmpsb
inc
mov
sbb
mov
inc
adc
inc
cld
leave
aas
daa
mov
cmc
or
out
loop
push
sub
xor
daa
lods
xor
scas
daa
movsl
cvttps2pi
adc
das
sbb
and
popf
cmc
adc
mov
mov
stos
ret
add
in
pop
sub
jb
mov
or
popa
ret
ficoms
xchg
test
xorl
cmp
sub
test
sbb
lods
aad
push
ljmp
dec
icebp
scas
fs
lock
imul
jle
lds
pushf
mov
and
xchg
shr
push
xorl
inc
push
decb
push
pop
xor
sub
mov
mov
dec
daa
cmp
mov
test
mov
push
scas
pop
loopne
icebp
cld
xchg
lcall
loope
xchg
inc
sub
inc
sbb
jb
out
or
xor
add
xchg
add
sub
aaa
or
pop
fbld
les
fbstp
cmp
push
rol
inc
ja
orb
xlat
mov
pop
sbb
or
les
pop
je
dec
outsb
pop
stos
mov
adc
stc
test
sarl
mov
lds
mov
daa
cmp
pop
or
out
repnz
and
das
mov
xchg
xor
jp
into
mov
lods
lahf
adc
ret
push
call
or
clc
add
add
add
add
dec
adc
push
xor
movsb
sub
in
push
xor
lock
inc
loopne
mov
jno
out
mov
sbb
test
dec
xchg
xchg
fcmovbe
jle
and
mov
lock
shr
popf
in
sbb
mov
dec
scas
test
or
inc
xchg
popa
clc
lods
loopne
clc
xor
mov
repz
or
push
mull
xor
or
mov
pop
aad
insl
adc
call
fnstenv
sbb
lret
jne
iret
js
int
pop
jbe
xor
lods
data16
dec
jo
stos
call
jmp
loope
fildl
js
cli
lret
fidivrl
xor
mov
xor
or
pop
mov
or
mov
fistpll
cmc
leave
ljmp
ja
push
fldcw
rcl
movsb
cmp
loopne
clc
shr
popf
xchg
repz
outsb
jmp
ficoml
insb
jg
cwtl
dec
lahf
jmp
pop
cld
ja
sub
js
lods
popa
mov
fistpl
data16
das
ret
neg
push
jge
jmp
mov
call
mov
inc
daa
std
testl
or
mov
in
sbb
push
jno
sub
add
xchg
lret
loope
sarl
mov
leave
sub
in
fwait
add
add
add
add
add
add
stc
aad
insl
out
fsubrp
lock
ss
sub
popf
add
add
inc
pushf
pop
shlb
dec
mov
mov
and
test
jecxz
push
fimull
mov
mov
mov
add
sbb
pop
pop
jl
or
pop
dec
fmull
test
icebp
cwtl
jae
aaa
divb
in
push
dec
addr16
out
test
lret
mov
mov
xor
std
and
shlb
bound
add
cmc
or
or
data16
sar
ja
addr16
pop
test
push
imul
dec
pop
fsubrl
shll
xor
jmp
push
bound
lahf
or
sti
or
fstl
je
jne
fcoms
mov
data16
les
sub
sahf
inc
mov
add
rcl
jp
jg
imul
nop
in
dec
mov
mov
popa
add
mov
adc
adc
cmp
icebp
test
repz
adc
popf
pop
js
rcrb
pop
mov
and
pop
je
leave
mov
sub
inc
in
mov
sbb
xchg
int3
ret
loop
mov
and
and
in
cld
cld
fadds
loop
lods
scas
pushf
out
jb
sti
outsl
loope
cs
jbe
xchg
add
pop
fwait
in
outsb
jmp
mov
pop
push
cmpsl
in
ret
arpl
xchg
fnsave
roll
inc
dec
test
lea
into
sub
xchg
scas
inc
mov
cli
and
xor
mov
xchg
inc
dec
std
pop
dec
lock
jle
dec
lret
imull
add
mov
pop
popa
adc
cltd
rcrb
rcll
lods
movsl
adc
or
cltd
jecxz
xor
cmp
xor
lds
dec
mov
push
or
sub
xor
repnz
inc
fwait
adc
sub
lret
lret
and
movsb
sbb
addr16
jg
arpl
fsubr
stos
imul
ss
jbe
in
movsl
lods
fimull
pop
iret
rcrb
sub
push
xor
pusha
push
xchg
data16
dec
mov
jg
xchg
int3
sub
mov
outsb
in
xchg
xor
push
stos
imul
jb
movsl
mov
leave
je
insl
or
fwait
mov
aam
cmp
shl
jle
aam
push
int3
sbb
jp
out
jae
imul
cmp
sub
mov
pop
popa
jbe
sub
int3
xchg
aam
adc
push
ror
das
pop
or
and
or
shrd
sbb
xorl
add
lods
cmp
dec
cli
lds
push
cmpsb
pop
call
test
and
notl
hlt
movsb
out
shll
add
inc
stos
xlat
rolb
idivl
add
dec
xor
test
push
cli
pop
cli
les
sub
inc
testl
inc
add
test
cld
fmuls
mov
nop
or
pop
fistl
and
jecxz
enter
jl
push
mov
addr16
scas
fstps
loop
mov
ljmp
cmpsb
mov
mov
pop
adc
in
lret
lock
rcrl
jns
pop
testl
adc
fwait
icebp
shrb
add
sar
movsl
cmp
loop
fs
inc
sbb
cmpsb
push
sub
je
or
jge
push
dec
push
jns
sbb
loop
adc
in
push
mov
int3
xchg
xchg
xor
pop
jbe
aad
enter
cs
xlat
push
fisttpll
in
ss
arpl
jmp
pop
mov
pop
adc
movsb
jg
and
orl
insb
dec
or
jmp
movsb
pushf
jbe
add
push
add
int
cld
insl
ljmp
das
scas
cmp
stos
and
pusha
aas
iret
sbb
inc
dec
rcl
lods
jo
sbb
jmp
inc
pop
pop
sbb
in
std
lds
mov
lea
jae
mov
fnstsw
and
xor
or
sbb
in
in
or
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
add
add
outsb
add
add
add
add
add
fstl
pop
adc
pop
popa
push
out
xor
jno
js
push
inc
sti
add
mov
ret
push
shll
lahf
aad
and
or
es
xchg
adc
cmp
dec
push
dec
scas
popf
dec
aas
xchg
mov
movsl
lods
push
icebp
inc
ds
out
out
mov
lock
mov
sbbb
and
sub
jno
mov
push
xor
pop
mov
xchg
and
push
xchg
push
xchg
aam
data16
pop
lock
les
push
mov
sbb
addr16
pusha
xchg
pop
into
xchg
sbbl
xchg
jbe
jo
data16
add
sub
sub
push
jl
dec
add
pop
or
push
push
ret
stc
pop
negl
or
insb
mov
rclb
ljmp
pop
fwait
sbb
jns
pushl
xchg
aaa
mov
lret
movsb
jo
ljmp
mov
xor
inc
fmull
je
cli
stos
outsb
lock
into
int
mov
js
ret
push
hlt
icebp
cmc
push
cld
std
add
scas
or
mov
lds
lds
call
xchg
mov
cmp
jg
stc
push
ss
lret
mov
ja
pop
ljmp
push
insb
movsb
and
mov
iret
shrl
aad
aam
mov
out
gs
mov
jl
mov
popf
jle
dec
xchg
and
insb
or
imul
sbb
sub
in
mov
inc
stos
fldcw
arpl
jns
pop
mov
or
push
mov
enter
add
int3
cmpsl
inc
ret
sub
sar
pop
cs
insb
icebp
outsb
adc
adc
test
or
ficomps
mov
or
daa
mov
or
ret
add
in
and
leave
jmp
pop
das
cmp
xchg
or
adc
dec
xor
in
pop
xor
cmp
cwtl
andl
scas
icebp
movsl
and
cmp
push
push
pop
adc
mov
ljmp
pushf
out
adc
xchg
sbb
push
mov
or
jle
movsl
mov
adc
cmp
inc
scas
xchg
fadds
push
int3
inc
adc
push
pop
test
push
test
xchg
ss
xor
ljmp
and
or
into
es
pop
jnp
and
xor
decl
jo
fs
fstps
jne
sbb
dec
xchg
repz
lods
cld
push
push
clc
inc
repnz
xlat
cwtl
mulb
lcall
mov
movsl
dec
mov
ret
and
add
push
or
xchg
mov
int
jno
shrb
arpl
clc
shrl
nop
addr16
cmp
xorl
and
push
push
add
or
pop
loope
mov
ret
mov
insl
sbb
xchg
push
sbb
jb
jae
xchg
jmp
push
mov
pop
adc
inc
jbe
dec
daa
dec
int3
sub
out
gs
fsubrl
pop
lret
inc
push
stc
inc
imul
cmp
mov
inc
pop
inc
pop
aas
mov
mov
sahf
xor
aam
cs
add
fldl
in
xchg
xor
imul
sbb
and
push
lods
pop
lahf
lcall
adcl
dec
jmp
in
sbb
leave
cmp
addr16
dec
fcoms
dec
test
inc
stc
insb
jne
jb
pop
or
movsl
xor
sbb
test
jle
pop
adc
jl
hlt
fimull
push
shll
call
dec
and
cli
cli
push
out
enter
adc
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
mov
scas
xor
outsb
std
add
ja
insl
sbb
xchg
cwtl
cwtl
lcall
ja
test
jg
ret
pop
add
add
incl
add
add
xor
add
das
stos
icebp
movsl
divb
xor
push
call
andl
xlat
sarb
mov
fcoms
cltd
cwtl
jno
loopne
xchg
inc
sub
lea
and
ret
ja
dec
dec
aad
sub
mov
mov
sbb
jl
mov
movsb
rcl
out
inc
int
or
cld
jmp
pop
xchg
sahf
leave
inc
shlb
mov
sbb
xor
shl
addr16
inc
loop
lods
xchg
dec
or
push
lahf
push
fidivl
push
sbb
cli
daa
inc
jne
xchg
adc
arpl
aad
inc
xchg
pop
jbe
jbe
dec
push
jo
dec
mov
add
lret
mov
andl
ljmp
repnz
bound
pop
int3
and
cmp
mov
jbe
movsl
arpl
sub
hlt
bnd
pop
into
hlt
or
cmpsb
sub
lds
rorb
stos
inc
ror
int
xchg
movsl
dec
jnp
ret
call
mov
loope
cli
sub
cli
push
add
jns
adc
cmp
sbb
xorb
test
test
ja
sahf
ja
xor
jmp
rclb
add
add
incl
add
add
mov
das
nop
mov
mov
and
imul
pushf
dec
popa
xor
daa
cwtl
icebp
jp
push
cmp
dec
inc
sbb
dec
outsl
mov
aad
and
sbb
in
scas
or
or
test
repnz
lret
mov
jo
sub
push
sbbl
pop
lods
mov
mov
push
mov
and
repz
mov
sbb
mov
lahf
repz
addr16
cmp
ror
testl
inc
daa
push
icebp
pop
sahf
push
es
push
xor
aad
icebp
push
clc
jecxz
test
jmp
bound
or
incl
add
add
movsl
sub
mov
outsb
dec
lahf
jnp
jecxz
xor
mov
call
xor
push
push
xchg
arpl
mov
es
jo
inc
pop
outsl
inc
ret
push
lahf
fwait
jnp
and
lock
mov
lcall
jmp
xchg
xchg
orl
scas
int3
mov
xor
xchg
xchg
jl
adc
push
sahf
jo
ret
popa
push
fs
and
jns
mov
insl
cwtl
dec
push
out
push
shlb
xor
mov
mov
cltd
call
dec
jge
and
rcrw
ret
add
add
add
add
add
add
mov
out
data16
xorb
addb
push
adc
dec
jmp
negl
hlt
jno
sbb
in
dec
fnstsw
cmpsb
rcrl
sbb
rclb
cmpb
adc
xchg
jne
enter
or
insb
pop
dec
ss
inc
and
js
loop
inc
lods
in
or
mov
add
ja
fwait
jo
std
jne
pop
cmp
push
leave
push
and
cmpsl
push
adc
cmp
ss
js
data16
enter
mov
iret
movsl
add
in
aad
mov
ds
or
xor
inc
jle
push
dec
adc
pop
mov
pop
arpl
notb
test
fildl
fs
and
ljmp
das
jle
adc
insl
arpl
xchg
fildll
into
add
add
sti
add
stos
mov
cmpsb
or
mov
ret
xchg
cmp
mov
xlat
aas
movsb
imul
push
adc
or
aad
jnp
pop
daa
cmp
add
cs
sbbb
push
sarb
rclb
rorl
fwait
dec
sub
cmp
loopne
icebp
xchg
dec
jb
cwtl
sub
jno
jg
mov
add
xor
rorb
cmp
push
jge
arpl
fidivrs
jb
nop
shrb
jecxz
pop
cmp
mov
lods
stc
ljmp
ljmp
jecxz
es
dec
xchg
and
test
sbb
mov
hlt
or
insb
ret
imul
cmp
jg
addl
mov
movsb
sbb
cmpsl
shll
ljmp
add
mov
std
pop
repnz
fstps
insl
push
xor
and
fs
mov
arpl
jle
jle,pn
cmpsb
cmp
add
movsb
test
dec
dec
lcall
ss
cmp
xor
ljmp
mov
push
and
mov
out
push
shrb
addr16
gs
cmp
cmpb
loop
push
mov
mov
inc
push
into
shl
jbe
pop
sti
fadd
xor
imul
test
lea
xor
and
cmp
testl
sarl
out
imul
or
xor
cli
adc
pop
adc
push
push
shll
or
subl
ret
mov
aaa
or
insb
jnp
and
mov
push
loope
out
xchg
inc
rclb
loopne
fimuls
ret
pop
sub
stc
cmpb
inc
or
jne
divl
xchg
mov
fwait
cmp
xchg
and
add
and
cli
pop
repz
jb
pop
sbb
sahf
xchg
cmp
jne
les
xchg
mov
jge
and
push
jne
pop
push
dec
out
test
leave
xor
mov
mov
sti
adc
outsb
jo
sar
insb
cmp
outsl
lock
call
xchg
pop
xchg
hlt
test
mov
test
xchg
push
popa
leave
inc
movsl
mov
push
ret
enter
movsb
mov
stos
pop
icebp
sahf
add
add
js
aad
or
fisubrs
sub
xorb
inc
add
sbb
mov
testb
nop
and
pusha
out
in
mov
fndisi(8087
ljmp
push
ret
xor
call
xchg
add
daa
in
mov
gs
jle,pt
lret
sbb
xlat
jns
fwait
and
test
add
xchg
or
adc
add
add
add
hlt
sar
xchg
sub
nop
mov
fisttps
adc
lods
xor
xor
jnp
aam
xor
ret
stc
adc
sub
push
and
mov
inc
add
mov
fildll
mov
enter
dec
popa
cmpsl
and
leave
push
and
jg,pt
and
leave
cs
add
sbb
jle
cmp
inc
sbb
xor
push
sbb
pop
lahf
and
pop
xchg
aam
stos
pushf
aad
cmpsl
add
jge
out
lea
add
movsl
movsl
fmull
popf
sbbl
cmp
mov
inc
mov
mov
pop
sub
sub
ljmp
adc
sub
dec
mov
jbe
sub
pop
pop
jb
mov
jno
adc
aam
mov
aaa
stos
push
lock
movsb
mov
lock
inc
pop
inc
in
jecxz
mov
xchg
bound
insl
and
push
xchg
imul
mov
call
shl
cmp
inc
jb
sbb
or
dec
mov
ret
xor
push
sub
je
lret
ss
mov
insb
pop
lods
and
xchg
cwtl
repnz
adc
cmp
push
aad
jge
shl
dec
inc
and
mov
sbb
in
shl
add
pop
enter
xchg
jecxz
mov
clc
std
and
xchg
lea
pop
and
mov
test
mov
pop
pop
sub
mov
add
xor
add
xchg
or
mov
add
add
add
xchg
pop
add
add
or
sub
or
inc
cmpsl
mov
or
cmpsl
jne
adc
xor
xor
or
lock
cmpl
pop
bound
bound
wbinvd
ss
ror
push
pop
into
mov
cltd
dec
movsb
dec
mov
stos
sbb
or
pop
pushf
testb
lds
daa
mov
fwait
inc
stos
adc
sub
leave
outsb
fbld
inc
out
pushf
xchg
mov
dec
enter
push
pop
int
into
lds
outsl
sub
mov
cld
add
out
mov
bound
sub
test
out
pop
in
hlt
adc
inc
nop
cltd
jge
adc
jp
jecxz
lret
aad
inc
jmp
arpl
push
stc
aad
sbb
ficoms
out
xchg
mov
cmp
js
jno
into
fmul
lds
cmp
testb
mov
pop
gs
inc
inc
test
enter
mov
rcrb
pop
popf
push
mov
dec
mov
push
lahf
add
in
add
lahf
mov
arpl
arpl
cmpsb
adc
jns
popf
in
sbb
adc
sub
and
jbe
nop
jo
mov
or
sbb
or
movsl
xchg
js
sbb
pop
scas
shll
mov
push
ds
int
stos
jnp
cmpsb
stc
and
lds
call
or
jl
sub
jg
in
xchg
mov
shrb
out
dec
jge
popf
inc
inc
jmp
jg
mov
xchg
sbbl
in
insl
adc
lret
loopne
in
push
int
lea
nop
idivl
sub
mov
sbb
vpcomuq
int
arpl
jb
pop
cwtl
add
stos
mov
iret
fidivrs
add
lret
adc
xchg
mov
dec
dec
cmp
and
cmp
loopne
sub
cmp
outsb
mov
notl
daa
push
or
in
add
add
shrb
push
ljmp
and
cwtl
sub
xlat
mov
jns
lret
sahf
or
fistpl
out
mov
addb
mov
repz
ret
sar
lret
ss
dec
dec
mov
push
rorb
cmp
loope
imul
pop
or
mulb
mov
adc
xor
dec
bound
fs
cmp
nop
movl
cli
sbb
xchg
out
mov
push
add
add
xchg
mov
lret
std
jnp
lods
add
mov
repz
cmp
cmp
bound
push
cmp
inc
lea
sub
orl
lcall
test
cmp
test
jo
lods
fmull
pop
lret
lret
and
std
test
rorl
ss
jnp
mov
outsb
loop
sbb
or
push
add
add
add
add
jb
adc
add
mov
addl
cmp
out
lahf
or
sub
xchg
mov
adc
xor
cli
rclb
push
xor
push
or
fdivs
mov
sub
mov
aad
inc
popl
push
adc
or
stos
out
and
sarl
push
mov
inc
cwtl
push
stos
rcr
jo
out
repnz
push
cmp
mov
sub
sub
imul
mov
xor
fstl
inc
frstor
lock
test
nop
cmp
xor
repz
outsb
xchg
mov
clc
pop
lcall
jp
mov
mov
xor
fadd
sbb
cs
fldenv
and
cmc
adc
scas
mov
ljmp
hlt
hlt
iret
and
jmp
test
lods
push
lock
lea
ljmp
xchg
pop
out
ljmp
fdiv
push
aas
cmp
cmp
lea
lods
dec
cltd
inc
mov
sarl
jae
test
outsb
push
mov
jg
push
mov
testb
mov
push
lods
pop
outsl
mov
fnstsw
or
pop
out
sub
scas
pusha
jecxz
mov
pop
andl
sbb
and
lods
pop
xchg
gs
push
cmpsb
xor
fwait
call
pop
int3
cmp
mov
mov
aas
push
lret
mov
es
push
push
pop
cmp
scas
push
jl
imul
adc
adc
stos
jbe
ret
stos
pop
or
xchg
push
test
push
out
loopne
stos
into
xchg
cld
loopne
inc
aam
outsl
out
add
pop
sbb
daa
scas
jmp
fwait
icebp
cmp
sbb
jb
outsb
adc
in
addr16
and
daa
lods
cmp
lock
jnp
dec
jl
fs
mov
mov
sbb
and
fcomps
xchg
add
pop
dec
test
gs
js
sbb
jbe
mov
xchg
test
cmpl
in
incl
in
adc
xor
int
cli
in
stos
sbb
ja
ficomps
or
lock
insl
mov
push
cmovo
out
mov
push
lock
push
daa
cmpsb
pusha
andl
push
adc
int
and
push
rorb
mov
test
rcl
dec
xchg
xchg
jge
push
sub
add
in
dec
outsb
pop
mov
jbe
loopne
bound
add
adc
push
mov
sbb
pop
push
mov
popa
movsb
iret
cmp
dec
inc
adc
jae
and
lods
outsl
jl
out
sti
aas
push
aas
imul
pop
mov
sar
jecxz
jo
xchg
xor
iret
pushf
dec
adc
cwtl
jg
lods
call
pusha
ds
in
addl
mov
jl
mov
out
in
sub
enter
mov
iret
cltd
cmp
mov
ss
lret
lods
mov
and
push
sbb
cmpsl
std
lods
add
cltd
and
inc
jle
cmc
popf
cmp
cmp
stos
int3
je
sub
xchg
arpl
pop
shll
mov
pop
lock
cmp
call
inc
and
in
out
lahf
jle
lcall
lds
jns
push
sub
loope
and
movsb
into
xchg
loope
sub
cmp
xor
mov
ret
lods
cltd
shll
sti
gs
movsb
lock
cld
dec
jle
lret
xor
int
or
xchg
sbb
jnp
cmp
mov
mov
std
sbb
aaa
jle
inc
mov
loope
lahf
push
push
sub
rorl
and
push
inc
mov
call
subl
negb
add
out
pop
scas
sub
sub
push
xor
movsb
fimuls
jmp
jl
adc
push
xor
cld
push
je
in
push
mov
jb
mulb
and
jmp
bound
pop
adc
sbb
adc
mov
fwait
aas
or
das
jo
pop
sbb
dec
aaa
test
arpl
daa
popf
xchg
ljmp
nop
cmpsb
and
decl
push
sahf
cwtl
pop
sbb
ret
or
push
push
and
das
dec
pop
or
sbb
xchg
imul
sub
call
jle
cmpsl
loopne
lods
gs
push
loop
aaa
xchg
mov
pop
pop
mov
mov
into
pop
sbb
or
mov
enter
bound
ljmp
cs
sub
pushf
out
mov
cmp
outsl
nop
cld
lea
imul
stos
jbe
xor
loopne
mov
cs
out
pop
push
jg
pop
cmpsb
movsb
or
pop
data16
xor
push
arpl
inc
mov
adc
aad
in
leave
push
xlat
pop
test
jecxz
mov
add
dec
mov
cmpb
lret
xor
loopne
mov
pop
les
mov
cmpl
xchg
outsl
out
add
jns
xor
sti
mov
push
fs
mov
mov
xchg
addr16
sbb
dec
pop
cld
pusha
scas
mov
pop
sbb
mov
jae
xor
aas
add
stc
js
push
pop
mov
pop
mov
mov
addb
dec
mov
push
adc
mov
dec
add
jp
arpl
add
mov
mov
push
pop
data16
or
das
jb
stc
pop
jns
xor
pusha
lcall
les
lcall
mov
jns
gs
ss
inc
cli
adc
pushl
das
xchg
adc
rorl
sbb
in
jne
mov
mov
jg,pn
add
repnz
lea
arpl
aaa
fistpll
pop
or
xchg
sub
xchg
enter
cmp
ret
mov
pop
mov
and
jge
jp
cmpsb
mov
pusha
dec
push
xchg
mov
mov
mov
adc
sarb
leave
adcb
inc
and
aaa
mov
mov
pop
pop
aas
int3
inc
rcrl
lcall
jg
sbb
sbb
leave
adc
into
and
dec
in
or
cmp
add
mov
ficoml
cmp
lea
inc
adc
xchg
movsl
sbb
pop
jge
mov
movsl
imul
pop
cwtl
scas
cmp
in
mov
add
in
dec
pop
test
negl
in
and
push
mov
gs
decl
jmp
jae
lock
or
sbb
xchg
ss
rcrl
jecxz
xchg
mov
movsb
dec
cmp
in
les
mov
dec
outsb
add
loopne
push
scas
mov
dec
clc
nop
aam
adc
push
inc
inc
sti
popa
sub
lds
je
out
stos
ds
lock
ret
mov
push
adc
out
mov
test
pop
lds
pop
int3
sbbb
mov
sub
clc
dec
pop
out
cmp
fs
int
andb
cmpl
imul
pop
push
and
lods
popa
mov
cwtl
xchg
jae
xor
add
cltd
mov
pop
ret
add
mov
sti
or
push
inc
dec
aam
adcb
push
ret
xchg
xor
aam
inc
subb
adc
daa
call
test
push
dec
out
mov
insb
and
loope
pop
rcll
loope
xchg
pop
cld
pop
aam
loop
mov
xor
fildll
mov
jmp
mov
jno
push
sub
enter
pop
cmp
ror
mov
es
subb
adc
daa
pop
into
idivb
arpl
or
jb
inc
and
pop
jae
inc
xchg
sub
cmp
andl
sub
pop
shr
popa
and
shrb
movsl
adc
sbb
sbb
dec
push
inc
sub
repz
push
outsl
pop
jbe
rclb
pop
xchg
cmp
cli
cld
popa
sbb
je
or
sahf
sub
in
cli
lcall
movsl
mov
leave
aaa
and
fscale
sub
popa
in
cwtl
xorl
jl
fwait
shrl
jmp
movsb
sub
pusha
or
bound
loope
push
int
inc
les
mov
loop
cwtl
popf
and
cmp
icebp
pop
shr
les
and
and
push
dec
push
popf
out
push
push
fdivl
jmp
mov
addb
sub
lods
cli
inc
int
jnp
sbb
bound
ret
cmpsb
cli
adc
gs
sbb
and
cli
inc
je
cwtl
lret
loope
xchg
stos
clc
clc
stos
inc
rclb
jno
lods
push
neg
pop
ja
xor
and
cld
mov
notb
sub
fsubrs
hlt
in
jnp
ds
scas
mov
mov
dec
mov
xor
jb
jbe
pop
dec
enter
xchg
add
bound
or
outsl
push
popf
cmp
pop
mov
push
inc
sti
mov
cmp
xchg
imul
dec
pop
fnstsw
lcall
mov
addr16
dec
hlt
adc
jecxz
mov
mov
jmp
dec
push
hlt
out
dec
blsfill
jg
xchg
jecxz
fwait
fwait
fwait
cmp
xchg
jbe
adc
into
insl
out
lea
dec
fwait
test
daa
dec
mov
in
cli
lcall
sbbb
jns
icebp
jne
sti
lds
in
leave
jns
and
into
cmp
add
aas
stos
mov
add
inc
jno
add
add
xchg
or
incl
add
add
popf
sbb
ja
shll
imul
js
lods
or
pop
pop
popf
mov
mov
jp
lcall
decb
pop
testl
ss
iret
rcrl
ja
inc
lcall
mov
popf
sub
dec
leave
ljmp
lds
push
enter
not
ret
aam
movsb
and
movsb
outsb
jle
xor
pushf
jo
popa
ret
popa
add
add
add
add
add
add
fidivrs
rcrb
rorl
xor
notl
dec
sbb
rclb
and
mov
pop
or
inc
repnz
cwtl
loope
push
inc
push
cmpsl
and
sbb
mov
xor
pop
xchg
push
test
jg
and
cmc
bound
test
in
stos
inc
ljmp
add
add
incl
add
add
mov
repz
movsl
mov
js
idiv
mov
lcall
mov
pop
popa
add
gs
fldt
jmp
cmpsb
nop
imul
loopne
dec
jmp
jge
dec
sub
cmp
negb
out
shlb
test
enter
mov
fdivrs
and
repnz
mov
xchg
mov
jl
loope
shlb
jecxz
and
xor
inc
loop
sub
lds
add
xchg
or
decl
lret
fsubr
jge
mov
test
or
pop
mov
aas
stos
add
imul
repz
sti
jle
test
ffree
jp
push
lds
popa
mov
inc
mov
sti
pusha
jbe
pop
and
in
pushf
and
or
push
ds
dec
js
add
jge
imul
ljmp
js
mov
call
jle
mov
cwtl
inc
xor
and
loope
sbb
lods
test
or
add
cmp
arpl
clc
inc
imul
push
addr16
jle
ret
pop
jbe
cli
shlb
negw
mov
or
pop
and
pop
jmp
xor
pushf
shrl
aas
arpl
sub
cmpsl
or
outsl
push
cmp
cmp
xor
xchg
shlb
push
mull
stos
ficompl
xchg
sub
jl
das
dec
ds
sub
or
xchg
sar
rclb
test
jnp
sub
pop
lcall
dec
fcompl
lcall
repnz
push
jle
arpl
mov
xchg
mov
inc
aas
mov
scas
push
addl
sbb
cmc
mov
bound
pop
jmp
ds
mov
xchg
in
cltd
mov
pushf
sbb
pop
arpl
add
rorl
pop
mov
add
repnz
mov
cmp
imul
inc
sbb
das
ds
out
lret
xchg
outsb
xchg
sbb
ja
sbb
orb
mov
enter
insl
fs
mov
or
add
xchg
or
incl
fistpl
or
inc
pop
ljmp
fimuls
and
loope
stos
jnp
fprem1
push
ret
and
jo
xor
je
lods
cmpsl
test
xchg
lcall
or
test
dec
mov
incb
orb
in
fdivs
jle
xlat
mov
jmp
fcmovu
mov
add
out
test
jnp
shll
bound
movsb
cmp
or
int
pop
xor
call
jnp
xor
mov
or
jp
jb
and
out
mov
push
dec
jmp
in
pop
inc
outsl
and
pop
jne
push
cmp
insl
add
out
push
ss
add
or
test
dec
mov
incb
orb
fwait
jns
xor
add
mov
lahf
das
or
jg
dec
sub
mov
inc
ds
inc
outsb
js
xor
ss
push
inc
push
pop
nop
mov
push
scas
add
and
enter
addb
fldcw
mov
pop
pop
adc
dec
aaa
mov
ret
push
enter
aam
inc
dec
pop
dec
scas
sbb
test
cmc
dec
push
rcr
mov
mov
lock
addl
dec
pop
add
aam
add
add
add
incl
add
add
shll
push
inc
sbb
and
leave
sti
fxch
pop
push
fcoml
rorb
xchg
es
loop
bound
cmpsb
ljmp
adc
inc
and
pop
cltd
leave
add
lods
jo
pop
cmpsb
cld
jo
pop
fs
out
dec
or
fistl
jno
push
inc
xchg
lock
xchg
jae
adc
inc
mov
pop
mov
in
subl
ljmp
add
jbe
xor
inc
or
sti
ss
mov
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
mov
add
testb
add
add
repnz
mov
repnz
and
repnz
or
sbb
into
iret
enter
fidivrl
popf
xor
es
mov
dec
add
lods
mov
test
and
xchg
jo
or
cld
adc
and
xlat
into
fstps
dec
loope
push
push
mov
cmpsl
stos
inc
rorl
dec
push
jb
popf
insb
pop
outsb
mov
negb
mov
daa
fdivl
dec
cmc
xor
add
add
push
sub
xor
nop
mov
icebp
sub
aaa
sbb
sub
xor
push
sub
loop
jns
inc
sub
dec
push
sahf
push
jp,pn
push
aad
push
mov
mov
cmp
aad
sbb
cmc
lods
push
add
mov
adc
jns
mov
dec
jle
and
cmpsb
aam
jne
lcall
push
jg
aad
xchg
nop
lcall
or
idivl
dec
pusha
movsb
pop
jo
jge
and
cmpsl
mov
ljmp
sbbl
clc
popf
mov
pop
add
mov
aad
sbb
stos
jmp
xor
insl
or
andl
pop
sbb
mov
in
shrl
mov
cmp
mov
scas
leave
dec
shll
fsub
lods
pop
inc
mov
adc
fmulp
pusha
pop
fcoml
cmp
pop
inc
andb
imul
cmpsb
ret
and
popa
pop
jecxz
lods
fiadds
loopne
pop
inc
cmp
mov
xor
add
lret
rcrb
push
pop
xchg
ret
add
add
add
and
or
cmc
mov
and
lcall
xchg
dec
lock
movsl
mov
shrb
lock
loope
sbb
sbb
insb
push
lahf
js
adc
or
xchg
push
jno
sahf
shll
aaa
inc
stos
inc
repnz
imull
cmp
out
xchg
jp
xchg
out
das
in
xor
push
pop
imul
call
mull
sub
inc
sahf
mov
lods
xchg
stos
popa
popf
mov
or
sahf
sbb
adcb
inc
sub
lcallw
into
test
push
insb
fcomps
movsl
push
lret
mov
add
repnz
mov
sub
push
imul
aam
xchg
orb
shl
aaa
inc
test
nop
mov
inc
add
daa
and
adc
add
adc
or
sbb
out
cmpsl
push
xor
push
lds
inc
sbb
xchg
jbe
push
or
xchg
jbe
push
add
out
mov
mov
cmp
stos
adc
mov
or
add
loope
sub
cmp
dec
loop
in
pop
repz
ss
sub
cs
cwtl
sbb
leave
sub
rorl
push
insl
sti
hlt
adc
or
repz
les
ret
in
or
mov
aaa
cmpsl
nop
iret
nop
mov
fimuls
add
mov
gs
mov
mov
imul
rclb
mov
lods
fistl
jmp
cmc
in
icebp
ret
icebp
icebp
or
push
dec
imul
icebp
push
imul
icebp
push
cmpsb
adc
fstpl
negb
inc
sti
pop
inc
insl
fmull
cmpsb
sti
aad
and
dec
adc
push
xchg
adc
icebp
stos
or
mov
aaa
out
xchg
cmp
cmp
insl
add
dec
mov
stc
mov
loopne
loopne
mov
test
fnstsw
dec
sti
xorb
ficompl
mov
clc
in
data16
inc
cmp
jne
xchg
sti
add
adc
inc
fmuls
mov
push
adc
repz
pop
lret
int3
fwait
xor
or
sbb
rol
inc
mov
inc
pop
jno
xchg
fisttpll
arpl
sbb
or
adc
mov
cltd
int3
mov
mov
testl
cmp
adc
sub
inc
js
push
sub
adc
add
dec
aad
aam
cmp
ja
rorl
xchg
clc
jp
inc
popa
jl
sbb
inc
and
aam
pop
cltd
cwtl
scas
int3
loopne
cmpsb
push
cmpsb
dec
sub
hlt
clc
mov
es
jne
push
add
dec
dec
imul
adcl
and
imul
push
test
push
xor
bound
mov
ret
cltd
inc
mov
mov
into
inc
pop
jg
pop
lods
cwtl
mov
lock
sahf
fs
insl
arpl
mov
ret
stc
xchg
cmc
outsb
and
fmuls
psrld
rorl
jo
sbb
inc
xorl
ficoms
mov
sub
xlat
mov
push
jns
jb
cs
enter
jge
in
mov
in
les
test
pop
xlat
push
or
aas
jo
mov
jecxz
add
sub
ljmp
adc
jecxz
fcomp
inc
mov
cmpsl
and
adc
insl
daa
mov
adc
mov
aam
in
sub
cmpl
or
in
shll
mov
mov
pop
adc
xchg
pop
mov
shrb
inc
mov
rcll
dec
push
pop
hlt
lods
arpl
push
jne
cmp
sbb
ljmp
or
sahf
out
aaa
xchg
cmpsl
inc
aaa
movsb
popf
sbb
in
iret
push
iret
aaa
ffree
add
testb
mov
mov
lahf
dec
js
add
dec
dec
inc
mov
sub
in
inc
mov
push
xor
iret
xor
mov
pop
xor
sbb
inc
test
cltd
lcall
ret
add
add
add
add
adc
add
sub
xor
cmp
mov
movl
mov
int
fwait
and
jb
je
cmpsl
fnsave
fisubrs
pop
cs
adc
int
mov
push
mov
aas
pop
sbb
dec
call
adc
mov
dec
scas
xchg
pop
mov
sbb
sub
jne
lahf
dec
aas
ficoml
xchg
jmp
push
movsb
dec
push
fisubs
sbb
movsl
and
add
pop
jg
pop
in
xchg
mov
roll
and
adc
push
mov
movsl
mov
out
dec
fstps
xchg
icebp
dec
fnstenv
pop
pop
fimuls
jo
out
call
inc
jecxz
imul
scas
out
cld
pop
pop
movsl
sbb
inc
xor
or
es
adc
mov
fstpl
ljmp
sub
mov
or
testb
stos
mov
insb
adc
mov
cmp
aam
push
and
xchg
add
cmc
push
mov
mov
jmp
push
adc
jg
imul
mov
out
aad
push
pop
adc
test
out
sbb
ret
aad
in
gs
jbe
mov
sub
push
sbb
jnp
push
sub
fs
dec
clc
xchg
nop
scas
and
mov
icebp
fs
pop
pop
jno
sub
or
dec
adc
and
and
scas
stc
pop
push
add
xlat
xchg
lahf
push
sbb
push
xor
movsl
xor
xlat
call
mov
xlat
icebp
cltd
lahf
mov
pop
sub
xchg
xor
mov
and
fmull
data16
xor
fdivp
pop
and
or
sbb
push
dec
outsb
test
jle
in
aas
test
mov
push
sti
or
into
loope
xor
outsl
mov
inc
mov
fcomps
pusha
stos
imul
inc
rcll
shr
frstor
mov
insl
lret
xchg
sub
sbb
and
xlat
aaa
and
jae
jl
mov
fstpt
pop
xchg
xchg
test
mov
pop
sbb
sbb
dec
jo
mov
push
lcall
lret
iret
push
std
dec
cmp
and
dec
cmp
pop
dec
cmp
pop
dec
cmp
cmpsb
push
jle
stos
sbb
pop
mov
pop
mulb
inc
rorb
sbb
xchg
int
rcrb
lods
mov
cmpsl
mov
daa
xchg
js
imul
mov
fistps
mov
inc
adc
inc
and
pop
add
sbb
test
ljmp
xor
divl
cmc
mov
pushf
jmp
sub
mov
cmp
cltd
add
cmpl
add
or
test
stc
movsb
push
insl
xor
imul
lcall
xchg
cmp
cltd
leave
dec
sub
push
mov
pop
lahf
leave
mov
imul
dec
fadds
cmp
pusha
jbe
sub
imul
lcall
divl
movsl
sbb
les
xor
inc
cwtl
push
push
mov
ss
push
or
mul
cmp
mov
jle
in
std
pop
pop
sti
fisttpl
mov
sub
dec
push
add
loopne
dec
and
push
inc
fwait
mov
cs
jge
insl
insl
out
cli
lret
sbb
xor
xor
sbb
dec
mov
xor
inc
pop
inc
popa
push
mov
test
mov
daa
popf
out
bound
push
hlt
or
dec
ja
cwtl
dec
dec
dec
push
in
mov
inc
arpl
cmp
fdivs
arpl
ret
pushf
rcr
push
pop
inc
stc
xor
outsl
dec
aas
lcall
or
into
sbb
fs
dec
out
scas
ret
add
lea
popf
push
leave
es
in
data16
sti
or
lock
insb
cmp
pop
jecxz
fdivl
push
lcall
shlb
adc
imul
rorb
fwait
add
ret
ret
sub
jp
cmp
fmull
test
movsl
pop
pop
outsb
dec
mov
cmp
add
xorl
sbb
or
push
dec
xlat
mov
pop
dec
and
and
clc
in
jecxz
test
mul
addr16
test
pop
xchg
push
iret
sbb
dec
das
xor
mov
cwtl
divb
cld
pushf
repz
dec
push
xor
mov
adc
fmul
jne
push
addr16
sub
lds
inc
push
js
cmp
mov
std
sub
popa
push
mov
push
lods
cmovno
push
rorb
push
int3
sbb
lahf
adc
mov
imul
jp
sbb
adc
inc
mov
out
mov
or
icebp
sbbb
push
sub
mov
mov
mov
push
jbe
pop
cmpsl
jmp
call
rclb
mov
or
sbb
push
lcall
stc
gs
inc
pop
lods
into
add
pop
dec
jnp
mov
lahf
outsb
popa
push
push
cli
push
std
ret
lods
xchg
mov
testl
fwait
push
out
je
mov
out
xchg
pusha
fisubrl
xchg
popa
sub
sub
and
ljmp
pop
test
add
mov
xor
sbb
inc
stos
jbe
scas
xor
mov
cs
outsl
dec
shrl
clc
cmp
mov
outsb
data16
fs
repz
in
sbb
sbb
out
adc
xchg
sbbl
jo
out
out
movsl
dec
push
push
dec
lahf
push
fcmovnu
jge
adc
stos
push
push
loop
cli
aam
jg
imul
sub
and
out
les
cmc
test
mov
addl
bound
pop
mov
pop
jmp
push
into
insl
leave
pusha
adc
out
vpaddusw
jae,pn
push
and
sub
push
dec
add
aad
sar
loop
xchg
or
fsubp
cmp
enter
or
push
jp
incl
testl
mov
loope
mov
push
push
xor
pop
pop
shrl
iret
iret
push
sub
xor
push
daa
sub
lds
stos
int3
sub
cltd
out
lods
inc
mov
icebp
mov
es
test
aam
xchg
mov
and
mov
ret
pop
cwtl
xor
xchg
out
jp
pop
in
add
lcall
out
scas
js
sub
andb
dec
in
push
stos
jl
pop
test
mov
xor
int3
std
into
xchg
cmp
mov
das
adc
fidivs
arpl
ret
repnz
xor
xchg
ja
or
rcrl
setle
push
pushf
xchg
movsl
mov
xchg
cmp
push
stos
pop
mov
or
addl
mov
and
popa
push
ds
cmp
add
jle
mov
cmp
es
cmpl
inc
repz
mov
in
pop
adc
sbb
pop
inc
in
pop
push
inc
mov
lret
push
cmpsb
or
daa
test
adc
sahf
cmp
js
jp
lods
mov
sar
mov
pop
sahf
and
pop
gs
sahf
lahf
daa
and
sbb
in
aas
adc
loopne
adc
ss
jo
jns
mov
push
jge
sar
sbb
xor
jmp
ret
add
cmp
pop
shrb
sbb
inc
mov
mov
ss
xlat
xor
mov
in
ja
push
icebp
fwait
adc
dec
ss
push
into
dec
jb
lret
ss
add
xor
dec
cmp
stos
ja
mov
andb
imul
testb
jle
shrb
xchg
repnz
sahf
xchg
std
cwtl
or
loop
sti
and
testb
inc
adc
fidivrs
push
nop
dec
add
mov
insl
cmp
xor
adc
mov
mov
mov
dec
cltd
pop
insl
stc
jne
pop
pcmpeqd
cmpsl
test
out
sbb
sub
pushf
jmp
mov
lcall
fstpt
sbb
lcall
ret
mov
loopne
xchg
jb
sbb
mov
rcrl
gs
jne
inc
lret
mov
jmp
repz
lock
pop
mov
mov
lock
aad
fwait
inc
jl
fwait
unpcklps
das
jge
and
mov
fs
jo
xlat
dec
xor
in
or
enter
adcl
add
aad
add
and
mov
cmp
aas
push
inc
icebp
mov
lods
cmpsb
data16
lods
out
cmpsl
push
inc
inc
sub
or
fisubl
repnz
and
adc
loopne
push
ret
ss
mov
push
push
pop
push
mov
push
and
lods
and
sub
notb
insb
inc
xor
hlt
fwait
sbb
xchg
pop
stos
not
loope
jg
adc
cld
mov
test
sub
insb
cmp
aam
aad
dec
jns
lcall
mov
mov
xchg
push
mov
popf
jbe
ret
xchg
push
icebp
fwait
adc
mov
je
lret
jbe
mov
mov
sbb
shlb
andb
or
mov
mov
xchg
call
fs
mov
ret
jp
inc
out
in
sbb
lea
mov
cmp
ss
dec
sub
lds
xlat
xor
mov
xchg
sbb
lock
xor
in
gs
xchg
daa
mov
sti
dec
cwtl
mov
xchg
sub
leave
mov
add
mov
add
sub
iret
test
out
rol
jae
in
gs
inc
lods
mov
fimull
mov
aam
je
or
outsl
loopne
push
cmc
std
jo
test
pop
int3
ss
loope
stos
cmp
stos
lret
pop
or
jmp
lahf
jns
flds
adcb
ret
js
in
notb
int3
out
loopne
push
adc
inc
movsb
cmp
or
arpl
sbb
jle
aaa
dec
idivl
push
push
and
sbb
mov
push
or
adc
shlb
in
cmc
push
popf
jb
rorb
add
jl
or
cmp
lods
ret
cwtl
push
push
add
xchg
pop
adc
mov
fcom
adc
inc
add
sbb
fiaddl
mov
lahf
xchg
rcll
lods
push
sbb
lods
lods
sahf
test
push
out
lahf
test
mov
js
add
cmc
in
es
repz
loope
rclb
pop
adc
int3
es
dec
dec
mov
or
cld
das
iret
mov
jge
mov
pushf
out
test
scas
and
cmc
add
pop
inc
push
mov
sbb
pop
add
cli
cmpb
sbb
xor
jnp
aas
jae
jnp
pop
xor
dec
push
mov
js
push
add
push
mov
call
sbb
mov
cli
pop
test
subl
aad
ret
loop
es
pop
inc
ja
insb
or
shr
testl
sbb
sbb
std
stc
or
push
test
mov
popf
jns
dec
jbe
iret
xor
lock
fs
xchg
andb
push
sti
inc
push
push
pop
mov
scas
dec
aam
jo
pop
imul
inc
mov
mov
push
orl
or
loope
or
adc
fs
dec
loope
sbb
out
push
mov
and
dec
aad
ja
lret
mov
mov
repz
sub
mov
jge
pop
fiadds
rcll
push
inc
mov
mov
cmp
adc
xor
mov
sbb
or
icebp
out
mov
pop
hlt
lods
in
and
call
jecxz
sbb
orb
dec
cmpsl
ja
pop
mov
into
mov
jbe
xchg
sbb
js
xchg
cwtl
out
cmp
mov
test
js
inc
outsb
jle
rol
jb
cmp
sub
mov
lock
insl
call
add
insb
call
movsl
add
push
andl
push
les
mov
mov
es
outsl
add
enter
xlat
loopne
mov
popf
dec
jmp
mov
mov
cmp
or
mov
test
mov
lret
notl
inc
jmp
repnz
out
repnz
test
dec
sub
jo
cs
sub
bound
sub
mov
mov
gs
adc
lret
into
mov
gs
loop
xor
adc
inc
mov
sti
mov
mov
or
jbe
lret
loopne
sbb
mov
ret
mov
pop
sub
enter
jle
or
inc
mov
ret
insl
mov
nop
mov
leave
pop
pop
push
aad
dec
test
inc
test
adc
mov
ret
rcrl
push
cmpsb
jns
jp
in
jae
fdivs
pop
push
shlb
daa
mov
cli
aam
mov
xor
mov
sub
xor
cmp
test
cwtl
mov
or
push
idivl
cs
mov
dec
push
cmp
std
aaa
mov
ja
movsl
add
cmp
sbb
mov
sarb
add
gs
sbb
pop
fbld
dec
xor
pop
out
std
fidivrs
push
lahf
mov
scas
add
mov
pop
cmp
cmpb
cmp
xchg
xchg
out
sti
inc
add
add
inc
pop
aad
dec
add
pop
cli
incl
mov
js
mov
sbb
fdivr
xor
xchg
lds
setge
or
fidivl
jbe
bound
xor
mov
push
pop
sub
out
lcall
mov
imul
jl
lods
loop
in
dec
xchg
lret
adc
ret
push
mov
mov
push
fcomps
push
fistpll
lcall
inc
mov
adc
lfs
sbb
or
in
pop
aas
inc
sub
sub
push
mov
dec
sub
mov
cmp
mov
lea
rcrl
test
push
push
imul
in
rcl
js
dec
pop
cmp
aam
sub
pop
insb
addr16
mov
faddp
fld
jecxz
dec
pop
xorb
or
inc
pop
mov
push
sub
ljmp
mov
or
cmp
fsubp
cltd
push
inc
dec
inc
xor
aam
xlat
vunpcklpd
mov
inc
ljmp
fsubl
lods
adc
lahf
idivb
pop
out
mov
movsb
lock
dec
lea
decb
pop
aad
add
fiaddl
push
ljmp
mov
fistps
rorl
repnz
ret
inc
xor
stos
ljmp
cli
cmp
and
jnp
adc
std
popl
movsb
or
dec
mov
add
sarl
rorb
jecxz
or
mov
sbb
ss
xor
xor
pop
inc
push
movsl
lret
lds
sbb
mov
movsb
push
popa
cmp
xchg
ss
xchg
adc
addr16
sti
frstor
push
pop
shlb
ficomps
clc
jns
fidivrs
mov
or
test
mov
mov
dec
xchg
mov
loop
jge
push
es
mov
sbb
ret
adc
push
mov
andb
pushfw
xor
fwait
dec
cmpsb
sbb
scas
sbb
or
adc
and
sub
xorb
jp
xor
adc
test
jle
fdivs
add
add
pop
stc
lret
pusha
outsb
pop
test
pop
jno
xchg
or
pop
ret
test
sbb
lea
adc
push
enter
fcoml
mov
movb
mov
adc
adc
mov
iret
scas
leave
sbb
mov
push
jg
pushf
test
push
lods
cli
pop
mov
clc
xor
or
cld
mov
add
call
rcrb
stos
out
in
mov
jae
push
mov
arpl
push
and
cmpsb
push
inc
mov
xor
mov
lahf
js
int
push
dec
push
xor
jg
jg
shlb
repz
hlt
test
lods
fildl
push
jb
pop
rorb
mov
inc
out
jl
xor
push
jp
push
bnd
adc
stos
mull
jo
mov
cmc
inc
stos
ret
js
add
mov
or
shll
les
orl
lods
cltd
pop
orl
dec
aad
sbb
cmp
adc
dec
inc
mov
es
sbb
in
pop
sub
int
xchg
ret
pop
movsl
sub
lds
out
push
loope
cld
in
cmp
xor
or
pop
arpl
mov
test
js
mov
fwait
out
lret
push
jbe
push
pop
movsl
lds
adc
push
pushf
mov
sbb
mov
stos
fwait
inc
hlt
cli
cmpsb
clc
data16
xchg
push
call
rcl
mov
inc
leave
pushf
cmp
add
fwait
insl
in
xchg
jae
pop
test
mov
mov
dec
push
ss
in
add
dec
jmp
out
call
bnd
shl
sub
inc
rorb
scas
adc
int3
push
dec
call
clc
ljmp
outsb
push
imul
outsl
cmc
xor
sub
pop
xchg
fdivr
and
jmp
ret
jl
and
jecxz
jo
popa
or
imul
das
in
jle
repz
cmpl
int
cmp
fnstcw
mov
add
add
mul
sub
cmp
mov
mov
out
push
jne
loop
fbld
dec
pusha
jae
xchg
push
xchg
adc
push
xor
inc
sub
out
fldt
xchg
aad
outsb
dec
lret
mov
mov
lret
call
daa
dec
nop
jmp
pop
push
mov
addb
jb
cmp
leave
rcrl
jl
sarb
push
orl
mov
mov
xor
push
inc
pop
xor
out
pop
cmp
inc
outsb
shr
out
dec
or
xlat
das
push
mov
cltd
daa
jnp
push
frstor
push
push
push
fnstcw
jp
out
cmp
dec
call
pop
out
jmp
js
push
or
mov
or
icebp
jno
ss
inc
movsb
and
jb
cmp
adc
das
pop
and
mov
push
scas
stos
sti
mov
mov
lea
fisubrs
scas
loopne
mov
cs
fmull
loop
inc
imul
repz
xor
sbb
mov
adc
test
shll
fucomi
add
sbb
jns
out
sbb
out
sbb
aam
lcall
lret
sub
aaa
pop
mov
xor
and
jmp
mov
sub
adc
movsl
jp
inc
insb
les
jmp
in
adc
dec
mov
jecxz
add
or
jmp
mov
lret
push
pop
add
xchg
mov
jns
aaa
mov
pop
ljmp
stos
jo
jb
jp
outsl
rcrl
js
in
decb
xlat
aam
stc
sub
inc
fimull
sbb
aaa
mov
pop
push
sbb
mov
pushf
mov
cltd
cltd
or
cmp
sub
sbb
and
dec
jns
dec
jmp
and
xchg
xor
stos
and
jb
scas
xchg
notb
sbb
or
hlt
dec
dec
sbb
popa
push
ss
push
pop
adc
icebp
xchg
xorb
repz
pusha
shll
sbb
mov
pop
jnp
mov
cmp
pushf
ljmp
out
std
jns
pop
mov
push
xchg
ret
dec
aad
scas
fwait
and
stc
jmp
insb
aaa
mov
inc
pushf
xchg
mov
cld
xor
arpl
jp
add
push
fldcw
movsl
or
push
out
nop
jge
pop
ja
flds
lods
and
sbb
sarb
test
push
cmpsb
hlt
and
xor
jmp
mov
jbe
pop
push
jbe
jecxz
in
jge
adc
mov
das
mov
dec
je
xor
daa
sti
clc
pushf
and
mov
int
and
jb
inc
out
mov
in
test
addr16
jmp
inc
cltd
or
pusha
mov
clc
dec
cmp
stc
pop
loopne
dec
test
icebp
adc
push
or
cmpsb
inc
repnz
aam
pop
dec
cmpsl
cmp
add
ret
jmp
loope
xchg
pop
int3
and
iret
jl
sbb
fmull
xchg
mov
add
mov
push
leave
jg
adc
fldl
movsb
sbb
sbb
adc
jb,pn
xchg
insb
mov
in
add
movsb
lret
add
scas
inc
lahf
add
inc
pop
subl
mov
sub
sbb
adc
lret
push
ret
ljmp
cmpl
je
sbb
cltd
cmp
dec
lret
mull
iret
mov
repnz
and
stc
sbb
rorb
cmc
scas
sti
lahf
pop
mov
or
xor
clc
clc
cmp
inc
push
xor
lcall
mov
dec
mov
adc
loop
dec
ja
out
and
mov
outsb
cmp
xor
pop
mov
movsl
iret
push
and
pop
xor
js
dec
cmp
dec
inc
pop
inc
sarl
push
or
rorl
cmp
cmp
push
add
mov
jns
fistpll
fnsave
icebp
mov
fstp
cltd
jle,pn
sbb
insl
leave
sub
lret
dec
inc
add
ljmp
pop
xor
push
div
cmp
xrelease
icebp
lret
pop
add
push
sub
fwait
imul
jb
dec
mov
cs
sbb
jbe
dec
mov
jnp,pt
aaa
dec
hlt
test
insb
pop
jns
sbb
mov
pop
pop
dec
mov
stc
mov
sti
pop
add
out
pop
mov
cmp
mov
pop
xor
adc
xlat
jnp
mov
sarb
inc
lds
dec
sti
or
inc
cmp
shll
jge
lea
jnp
cli
jl
hlt
lods
pop
scas
xchg
pop
or
sar
mov
adc
repnz
mov
ss
lea
sbb
adc
insb
push
inc
cmp
fldenv
fistps
lods
shll
cmp
add
cli
test
out
mov
addr16
sbb
push
and
and
mov
fdivs
xor
push
xchg
mov
fdivs
jo
cmpsb
sbbl
imul
rorb
inc
mov
mov
mov
fwait
decb
aas
xlat
xor
jns
addr16
xor
out
add
cltd
jo
pop
jg
mov
or
pop
push
pop
dec
insb
sarl
scas
add
mov
flds
dec
fucompp
rcr
lods
iret
sbb
jns
mov
adc
stc
mov
pop
orb
sub
in
imul
add
cmp
les
sbb
xchg
in
negl
or
and
push
push
lret
or
repnz
mov
imul
sub
cs
xlat
and
scas
les
mov
sub
push
push
call
cli
repnz
notl
dec
mov
jae
ret
jg
jo
sarb
shll
sub
clc
mov
insl
push
shl
dec
shrl
dec
loopne
mov
dec
repz
lds
outsb
mov
push
sub
iret
push
dec
scas
and
and
cmp
shr
push
rorl
dec
adc
mov
outsb
push
cmp
fsubrl
adc
mov
push
in
push
mov
jle,pt
push
lretw
push
rcll
in
int
out
xchg
mov
mov
xchg
sub
mov
push
sbb
outsl
lock
nop
call
pop
fwait
sbb
inc
and
aad
sbb
mov
out
xor
fdivrl
xorl
test
push
cmpsl
sub
xchg
ja
xorl
or
mov
sub
fwait
pop
lods
icebp
loopne
cmp
icebp
jp
in
stos
inc
out
sub
scas
subb
bound
jae
push
cmpsb
fiaddl
xor
insb
mov
mov
push
dec
pop
dec
xchg
xchg
and
gs
aam
pushf
adc
sbb
dec
lods
loop
daa
pop
dec
test
mov
mov
xchg
or
arpl
dec
xor
and
mov
pop
lret
lea
scas
ret
lea
movsl
cwtl
add
nop
dec
jns
lods
jmp
popf
mov
stc
push
sarb
jne
xchg
test
inc
or
xchg
add
dec
mov
push
sbb
cmp
jb
jo
adc
hlt
sahf
andb
or
cltd
movb
or
xchg
sbb
aas
dec
pop
sti
xchg
test
inc
inc
xor
xlat
xor
jo
and
cmp
sbb
mov
sahf
ret
inc
pop
emms
inc
cmpsb
pop
jnp
aas
inc
int
pop
dec
testb
add
xlat
mov
pop
cmp
jg
jno
and
lret
pop
jecxz
adc
movsb
inc
ljmp
mov
aad
dec
cmp
shr
inc
sbb
push
outsl
clts
mov
adc
mov
repz
mov
movsl
cmpsl
nop
addr16
mov
aaa
mov
mov
mov
lods
xor
sub
lret
lods
xor
pop
dec
aam
addr16
test
inc
push
rcrb
fdivr
or
das
xchg
mov
sbb
ljmp
dec
push
mov
jge
xor
sbb
add
xor
cli
sub
sbb
les
adc
push
fisttpl
pop
dec
dec
out
andb
sub
stos
hlt
pop
lods
xchg
xor
inc
clc
imull
fbstp
das
jecxz
insb
rcrl
sbb
inc
les
icebp
loop
fwait
std
mov
test
test
sub
push
mov
xchg
inc
sub
and
sbb
loope
cwtl
fcmovne
aaa
aad
into
std
dec
pusha
cmpsl
incl
and
add
popf
add
and
xchg
jne
cmp
outsb
outsl
jp
mov
popf
sysenter
cmp
inc
outsl
push
dec
mov
ja
lea
fstps
in
dec
cmp
mov
lods
into
xchg
mov
aad
jbe
bound
cmpsl
or
mov
jo
pop
bound
mov
or
mov
and
out
pop
adc
out
imul
mov
mov
dec
aas
pusha
sub
pop
movsl
adc
add
rcr
test
jb
cmpsb
out
mov
insl
xchg
test
sbb
pushf
cmpb
and
mov
popf
mov
leave
cmpsl
cmp
xor
ret
inc
pop
xor
psraw
inc
hlt
or
pop
push
jae
aas
mov
test
or
pop
dec
addps
in
jmp
cmp
jge
insl
rorb
and
into
and
or
mov
je
mov
ret
push
out
inc
add
std
addr16
call
dec
ds
mov
dec
ds
dec
ds
dec
ds
fldl
xchg
sub
and
insl
mov
mov
loopne
adc
jns
lods
adc
ds
mov
fstpl
fsubs
xchg
push
mov
sahf
mov
pop
add
cmpsb
mov
test
repnz
out
mov
int3
jb
inc
es
outsl
movsb
jmp
stc
ja
mov
jno
xchg
inc
sbb
mov
mov
cmc
or
xchg
lea
push
in
std
dec
bound
rcr
adc
mov
cli
test
data16
and
sahf
stos
adcb
push
sub
xor
jg
cmpb
xor
aaa
mov
push
stc
or
mov
adc
sub
add
mov
mov
push
vpmacssdqh
bound
dec
sbbb
clc
ljmp
mov
mov
out
mov
movsl
popf
call
movsb
add
pop
daa
xchg
rclb
lods
pop
fdiv
mov
push
pop
lock
sbb
cltd
icebp
pop
adc
ret
xchg
std
push
test
scas
jns
cmpsl
lds
mov
mov
or
jns
mov
adc
jl
sbbl
jnp
stos
test
out
mov
or
out
lret
adc
pop
in
pop
and
cmp
ret
sbb
cmpsl
aam
leave
mov
cmp
inc
stc
mov
add
lds
cltd
add
sahf
in
pop
push
inc
fs
leave
lahf
repz
rorb
jne
lods
mov
test
scas
jnp
adc
pop
pop
aad
mov
inc
sbb
bswap
mov
out
rcrb
movb
lock
inc
das
sbb
jbe
loopne
aas
lret
ror
aaa
daa
fisttpl
jmp
pop
fiaddl
arpl
test
neg
test
neg
test
push
inc
js
xor
and
stos
xor
or
mov
cmp
push
or
xchg
mulb
lock
aas
into
push
add
lret
add
mov
mov
test
push
in
inc
testb
lahf
xchg
and
and
or
inc
popa
cmc
fsubrl
push
loopne
in
testb
imul
jo
jb
movsb
adc
lret
xor
cmp
push
jmp
inc
jnp
loop
mov
fwait
ret
jg
in
mov
inc
ja
dec
push
adc
pop
cwtl
inc
lods
jl
call
sub
push
into
movsl
mov
shrb
adc
mov
push
fidivl
imul
lret
and
mov
frstor
mov
insl
push
xchg
sbb
dec
or
or
cmpsl
rcl
jmp
iret
push
imul
sbb
sub
inc
push
stos
sbb
inc
push
scas
and
jp
mov
dec
jae
jge
jae
pop
xchg
and
inc
jp
cmpsb
xchg
adc
cmp
jnp
dec
cmp
pop
mov
sahf
cltd
mov
push
outsb
fbld
fimull
repnz
dec
mov
mov
jbe,pt
rolb
enter
cmpsb
mov
iret
add
mov
jo
cmp
inc
scas
iret
inc
add
cld
out
imul
inc
cs
mov
jmp
movsl
je
mov
xor
lea
mov
es
imul
adc
sbb
pop
fwait
inc
stos
mov
loope
jbe
out
nop
aaa
mov
jmp
push
or
dec
gs
mov
mov
mov
mov
dec
gs
dec
gs
add
add
push
add
push
add
add
adc
add
or
add
add
add
add
roll
add
and
add
push
add
or
add
add
add
inc
add
add
or
add
xor
add
add
add
add
add
add
push
add
mov
ficoms
sub
in
popa
mov
push
jae
clc
jmp
aad
mov
jmp
push
xorb
mov
push
dec
push
insl
sbb
push
xor
aaa
std
xor
leave
dec
and
loope
cmp
or
push
jbe
popa
lret
negl
out
test
mov
rol
into
pushf
lock
cmp
pop
addr16
xorl
lret
mov
or
sub
pop
sbb
pop
sbb
sbb
push
add
movsb
jne
mov
dec
cmp
sbb
jmp
in
xchg
add
sub
xchg
sub
les
into
stc
pop
mov
movsb
loop
mov
repnz
mov
gs
xor
loop
sbb
sub
ja
jge
out
jns
ss
mov
xor
rclb
adc
dec
pop
hlt
jecxz
fcoms
rcl
jp
lds
leave
dec
std
dec
shl
pop
mov
mov
pop
cmp
and
lds
add
add
adc
loop
hlt
pop
and
clc
aas
inc
test
test
cmpsb
xor
xchg
sbbl
or
push
mov
cld
enter
mov
jno
push
cmp
adc
sbb
jbe
xchg
mov
xor
roll
mov
addr16
int3
mov
mov
movsl
xor
pop
and
mov
aas
sbb
mov
mov
xor
repz
test
sub
jmp
xchg
outsl
mov
je
lds
jo
stos
stos
xchg
push
mov
pop
aam
and
xchg
sbbb
inc
xchg
int
and
js
jmp
or
clc
out
js
dec
fst
push
lahf
shll
inc
ds
and
leave
mov
rcrl
jl
push
xor
dec
dec
xchg
push
sti
jl
out
push
lock
pop
xlat
xchg
test
and
arpl
mov
mov
jecxz
mov
sarb
sbb
push
daa
or
pop
jnp
scas
sub
xchg
cmpsl
jae
push
sub
inc
pop
ret
inc
push
das
ret
dec
pop
xor
rcl
add
xchg
add
subl
int3
rclb
add
inc
xor
sub
push
sbbl
shr
pop
push
loop
popf
or
pop
ss
push
mov
pop
jg
aam
push
sub
cmp
stos
cmp
in
jl
daa
xor
or
jno
stos
mov
mov
das
dec
fstl
test
lock
es
aas
call
xchg
cmp
xchg
lods
xor
adc
jnp
adc
cltd
xchg
adc
jo
insb
push
jl
cld
call
das
cli
or
pop
dec
sub
into
mov
pusha
das
xor
push
inc
lods
in
mov
popf
push
enter
pop
call
dec
or
iret
jle
sbb
mov
mov
pop
push
mov
inc
das
inc
sub
out
add
sub
cmovg
or
testl
orb
lods
dec
inc
mov
test
loope
jne
insl
sub
mov
adc
jge
mov
xchg
add
mov
push
lea
sub
iret
fdivrs
enter
dec
ret
inc
insl
pushf
rclb
xchg
push
jno
rcrl
rclb
jbe
dec
outsb
add
lcall
sub
cmpsl
out
add
mov
cli
fwait
mov
ret
jb
jnp
leave
rorl
cmpsl
das
sbb
cmp
xchg
loop
xor
outsb
lcall
popf
stos
adc
js
cld
jmp
pushf
loop
out
imull
mov
cmp
push
enter
add
inc
sbb
xchg
aaa
in
sarl
pop
dec
ja
rorl
add
add
adc
add
sub
sbb
and
mov
sub
inc
ljmp
cmpsl
movsl
cmp
lret
outsl
fwait
lcall
cltd
jmp
insb
pop
push
sub
mov
imul
in
jle
popf
sbb
pop
sarb
dec
add
pop
shlb
jne
out
and
mov
inc
mov
pop
loop
jb
arpl
add
mov
inc
mov
mov
xor
mov
push
xchg
shll
in
lods
jg
and
jo
pop
into
nop
inc
insb
sbb
cmp
hlt
mov
push
scas
je
xchg
int
push
inc
popf
loopne
or
or
incl
add
inc
test
mov
fidivs
inc
mov
inc
sbb
mov
mov
leave
loop
mov
cmp
mov
int
insb
adc
mov
cmpsb
jmp
push
and
mov
mov
sbb
add
jbe
sub
mov
lods
dec
in
cmp
xchg
addb
gs
sbb
sub
pop
adc
xchg
fucompp
and
test
flds
cmpsl
or
sub
mov
rorb
stos
ss
mov
lmsw
jns
pop
movsl
test
mov
or
sbb
outsl
mov
lcall
test
inc
testl
push
xchg
aad
jecxz
fadd
dec
push
push
adc
xchg
inc
repz
test
sub
jmp
cmp
pop
and
adc
out
stos
int
and
sbb
pushf
insb
xchg
not
cmc
cltd
fldcw
push
mov
scas
mov
jmp
add
cmpsl
and
lds
fs
add
cmc
sub
negb
outsl
jne
insl
mov
xchg
frstor
inc
daa
adc
xor
pop
fiaddl
int3
or
insb
jo
aam
or
xchg
jno
mov
sarl
jl
pop
dec
push
sbb
gs
mov
test
divl
fidivl
mov
pop
sub
dec
das
add
cmp
adc
push
out
cmpsb
daa
out
or
shl
test
lock
xchg
fimuls
or
mov
mov
dec
push
cltd
and
test
sbb
lods
cltd
and
outsl
or
aas
mov
adc
popa
int
aas
jp
jb
adc
or
xor
gs
insl
inc
cmp
imul
add
xor
fwait
and
mov
mov
mov
in
xchg
push
int3
xchg
push
push
jae
icebp
out
imul
dec
jns
leave
call
cwtl
outsb
pop
inc
aam
arpl
pop
rcll
cltd
jmp
sub
cmc
movsl
mov
dec
js
inc
fsts
rcrl
loopne
iret
out
sub
push
lret
arpl
insb
dec
out
or
xchg
mov
popf
hlt
scas
and
xchg
adc
add
mov
lods
inc
pushl
pop
jl
outsl
or
or
xor
jp
pop
scas
shll
jne
and
cld
out
sbb
movsl
mov
add
inc
cmpsl
and
mov
bnd
push
mov
inc
or
sbb
mov
and
stos
fcmove
xchg
xor
jge
xor
imul
xchg
fwait
lret
inc
pop
push
pop
popf
xchg
jno
or
aaa
sarl
mov
xchg
fmul
sub
cmp
lods
insb
popf
xchg
sti
stc
test
adc
pop
mov
in
push
push
stc
pusha
cmp
test
adc
or
in
rolb
lea
roll
ror
mov
inc
inc
leave
xchg
xor
ror
cmp
daa
rcll
mov
clc
dec
and
jns
in
test
shrl
popf
xchg
xor
fsts
outsl
mov
push
shl
xchg
daa
or
or
je
daa
jae
lcall
mov
xchg
stos
adc
scas
xchg
hlt
push
and
cmp
clc
jae
orl
out
rorl
push
test
xor
sub
insl
or
mov
sub
movsl
add
dec
add
gs
pop
ja
loopne
lcall
dec
gs
sbb
inc
rol
lods
shl
jnp
jmp
or
or
add
mov
and
pop
xchg
js
push
test
and
sbb
subl
add
jbe,pn
push
add
push
push
mov
sub
inc
shll
daa
cmp
aaa
nop
jbe
push
adc
pop
add
cs
outsb
and
or
aad
dec
mov
jle,pn
inc
movsb
iret
loope
add
clc
shrb
fmuls
ret
pop
rolb
adc
stos
popa
xchg
add
push
cmc
call
lcall
mov
bound
scas
xor
xor
out
mov
fildl
adc
insb
xchg
gs
lahf
mov
mov
ss
dec
and
shrl
sub
jns
loop
pushf
or
adc
lret
dec
int3
outsb
jmp
lcall
mov
adc
subl
popf
ret
inc
xor
mov
fldenv
repz
push
jno
popf
adc
and
mov
inc
pop
sub
mov
stos
sbb
rorl
jb
andb
mov
scas
sbb
in
push
out
adc
pop
loopne
loopne
jl
cmp
jmp
les
xchg
mov
and
jmp
jecxz
cmp
xchg
jge
mul
xor
cld
in
into
jno
and
rorb
push
mov
daa
imul
adcb
push
mov
mov
push
push
ret
test
dec
cld
ror
cmp
test
xchg
mov
jae
push
sar
test
xchg
fsubl
lods
cmp
aad
push
sahf
lods
out
mov
les
int3
or
inc
jno
lret
leave
into
sbb
pop
out
adc
jp
aas
dec
push
adc
mov
popf
jb
out
scas
mov
xchg
jle
data16
testl
xchg
and
xor
das
add
fst
psrlq
cmpsb
fwait
mov
cmpsb
fstp
lret
sub
jge
xorl
jecxz,pn
push
cmp
ljmp
jo
cmp
jg
or
aad
stc
sub
loop
out
push
outsb
inc
sub
add
mov
jmp
xchg
lods
inc
lcall
push
jmp
xchg
xchg
mov
imull
xchg
inc
adc
sbb
popa
xor
fwait
xor
rorl
xor
sub
inc
test
jecxz
sub
cld
and
add
ss
sti
rolb
add
or
nop
dec
iret
mov
jne
mov
fldt
mov
test
sti
xor
pop
aaa
int3
sbb
dec
mov
cld
cmp
fiadds
inc
fwait
scas
insb
xchg
fldt
adc
sub
ljmp
daa
out
mov
pushl
and
sbb
xchg
pushf
inc
sub
dec
xor
out
test
loop
cs
mov
mov
jg
jge
lret
push
pop
sub
cwtl
cmp
inc
test
mov
dec
cwtl
cmp
pop
push
aaa
xchg
pop
cli
inc
fnsave
jp
scas
mov
ljmp
push
sub
dec
shl
bound
std
xlat
addl
repz
or
loope
test
sahf
arpl
lea
pusha
outsb
xor
sti
mov
fwait
cmp
dec
push
adc
daa
jne
divl
imul
add
or
clc
call
imul
cli
pop
cmp
inc
movsl
call
add
xlat
aad
inc
pop
fst
test
sub
add
dec
xor
nop
call
int3
ret
sahf
cli
dec
or
lods
insb
cmp
lods
mov
add
mov
adc
iret
mov
mov
pop
jmp
shl
dec
aad
jle
int3
xor
jg
mov
ljmp
push
mov
mov
dec
je
mov
mov
int3
cmp
mov
xor
and
pushf
js
mov
pop
sub
scas
stos
aam
jmp
or
loop
scas
pop
xchg
loope
in
inc
cmp
cmp
into
xor
jns
out
xchg
inc
jecxz
xchg
cmp
and
xor
lea
xchg
fwait
jne
jmp
out
iret
xor
jecxz
xchg
scas
movsl
ljmp
xor
ljmp
mov
outsb
test
lret
imul
ficoml
int
pop
popf
mov
lds
push
xorb
push
insb
test
ljmp
iret
in
push
ss
add
cltd
iret
lea
sbb
mov
or
dec
dec
or
cmp
jmp
jo
lret
add
out
dec
scas
or
out
xor
mov
int3
add
in
imul
test
sub
pop
push
shll
adc
lret
in
aas
lret
and
testb
loopne
mov
mov
or
add
xor
xor
imul
dec
sub
test
mov
xchg
inc
stos
repnz
dec
je
sbb
sbb
cmpsb
dec
lods
or
push
mov
sbb
pop
dec
jns
pop
cmp
and
xorb
out
fdiv
leave
mov
xor
inc
cmp
push
iret
fsts
js
mov
inc
dec
das
daa
sub
mov
mov
or
lcall
push
xchg
adc
je
fldenv
add
or
aad
test
jnp
sarl
fcomps
jbe
aam
xlat
jbe
mov
xor
jp
jge
cltd
jl
int
sahf
adc
loope
mov
push
jmp
push
and
icebp
fistl
sub
pop
add
jo
cld
rolb
in
mov
out
xor
mov
xor
adcl
cwtl
out
insb
xchg
or
fisubrs
rclb
mov
and
sbb
imul
pusha
movsb
mov
aam
movsl
fs
data16
test
stos
aam
cmpsb
lret
inc
sbb
cltd
sbb
mov
adc
ds
jne
call
dec
cmp
cmp
stc
addl
push
aad
or
lret
dec
lods
jo
fistps
mov
mov
enter
call
inc
add
jmp
inc
mov
mov
sbb
xor
adc
sub
jo
repz
aad
pop
mov
lret
sbb
push
and
imul
or
or
and
test
dec
iret
push
and
stos
fdiv
sbb
cs
test
cs
test
sub
iret
cmp
sbb
lcall
mov
fistps
pushf
cmpsl
je
sub
addl
mov
clc
and
push
or
push
inc
ficompl
xor
fwait
xor
push
shr
in
xchg
add
pop
dec
testb
xchg
push
mov
jmp
std
addr16
push
cld
addr16
push
loop
rcrb
mov
icebp
adc
adc
jb
aaa
jmp
adc
lods
add
icebp
inc
cmpsb
decb
xor
je
and
fwait
mov
jmp
arpl
cmp
or
arpl
scas
test
inc
xchg
sbb
inc
cmpsl
adc
add
push
dec
lcall
push
into
fwait
test
adc
ss
movsl
fcom
scas
repnz
and
fs
ja
lods
addr16
shll
or
out
jecxz
push
add
jno
hlt
out
inc
dec
ljmp
add
sub
mov
stos
inc
sahf
sbb
loopne
fcoms
stos
imul
sbb
popf
leave
shrb
rorl
jae
and
test
mov
push
rcll
vpcmpgtw
push
pushf
jmp
movsb
adc
mov
insl
xchg
loope
incl
loope
sub
leave
rorb
sbb
xor
sbb
adc
push
cmpl
sbb
ror
xlat
arpl
in
dec
inc
rcll
jmp
pop
pop
jge
and
outsb
movsl
imul
icebp
dec
daa
loop
sar
cld
adc
out
adc
in
cs
or
orl
sbbb
xchg
nop
jle,pn
icebp
cmpsb
fwait
es
mov
roll
jmp
pop
mov
mov
jo
add
mov
inc
dec
insb
jge
push
out
or
mov
sar
mov
rep
cld
sub
mov
jmp
test
in
fiadds
jbe
int3
jbe
fwait
cmc
and
fimull
arpl
mov
xchg
mov
int
dec
daa
add
out
ss
mov
movsb
sbb
pop
sub
int
mov
stos
jns
jecxz
out
sahf
pop
mov
jp
hlt
and
mov
and
hlt
std
ds
xor
cmp
and
idivl
add
adc
ss
out
push
xchg
push
cmp
sub
push
scas
mov
test
sub
mov
jb
push
cmc
mov
fcoml
xor
sahf
cmpsl
fs
xchg
insb
inc
sub
pshufw
jnp
xchg
imul
adc
mov
stos
adc
repnz
jecxz
xchg
ret
jl
cmpsb
cmc
lods
mov
imul
sub
add
movsb
mov
stc
jno
mov
sbb
push
inc
clc
lods
popa
push
mov
movsb
testb
in
add
mov
lahf
or
push
xchg
aas
jmp
movsl
cmpl
lods
fdivrs
stos
inc
xor
add
xchg
jo
jae
adc
decl
or
or
push
fistl
mov
out
or
sahf
cmpsl
xchg
jmp
jo
imul
mov
in
dec
repz
xor
sbb
test
lret
push
movsl
jae
out
inc
fdivs
adc
test
popf
sti
repz
jnp
jns
out
mov
subb
mov
mov
js
cltd
shll
adc
jno
fsubr
mov
mov
mov
pushf
aaa
xchg
stc
and
and
popf
pushf
cs
scas
xorl
loope
jns
mov
cmp
jge
jb
adc
out
pusha
pop
xor
insl
out
std
sub
stos
push
ljmp
lret
push
pop
lcall
mov
jne
pop
bound
dec
xchg
mov
movsl
or
aad
fimuls
sarl
mov
test
ja
aam
je
leave
sbb
pop
push
mov
xchg
xchg
push
icebp
mov
into
ljmp
mov
dec
sub
out
mov
arpl
ret
cmpsl
push
cmp
cmpsl
and
or
into
adc
mov
pop
fdivr
iret
push
adc
lahf
mov
sub
mov
xor
int3
std
xor
rcr
rcll
fwait
hlt
iret
add
jecxz
stos
mov
add
rclb
lret
movsl
sub
dec
xchg
adc
adc
jnp
insb
rcll
dec
pusha
xlat
xchg
cmpsb
dec
adcb
push
adc
mov
scas
loopne
and
pop
sbb
mov
adc
pop
jecxz
insb
iret
outsl
sub
imul
inc
movsl
mov
les
in
cmp
iret
or
push
shll
popf
sub
frstor
mov
dec
mov
lods
mov
inc
cltd
xorl
pop
and
popa
nop
pushf
pop
pop
dec
sub
push
xchg
cmp
sbb
mov
es
jns
stos
mov
leave
or
mov
push
mov
sbb
aas
sbb
push
stc
pop
mov
add
or
out
xchg
jmp
or
push
out
dec
inc
and
fnop
mull
cmp
movsb
gs
add
cld
mov
std
push
dec
jb
fisubs
ds
push
inc
xor
xchg
stos
mov
xor
adc
je
push
pusha
or
sub
xchg
sbb
and
push
add
fidivl
leave
fcmovnb
fldcw
jp
mov
aaa
movsb
fldenv
lea
dec
xlat
jae
inc
daa
pushf
mov
inc
pop
or
inc
stos
pop
push
cmpsb
imul
aam
adc
xor
je
mov
mov
add
push
jmp
movsb
insl
shll
cld
imulb
and
add
push
aam
test
cmpsb
add
icebp
add
das
lret
fnstsw
add
push
cwtl
cmp
jecxz
jne
jnp
ficoms
bound
jge
mov
xchg
scas
and
sub
lea
xchg
mov
notl
push
leave
flds
pusha
dec
insl
andl
std
in
int
dec
loope
inc
cld
cltd
lret
or
cmp
sub
mov
jg
pop
xchg
cmp
outsl
adc
sbb
cmc
lock
insl
sub
pop
dec
cmp
xchg
incb
fucomip
pop
mov
mov
repnz
mov
out
inc
lea
sbb
mov
shlb
ficoms
or
dec
in
mov
mov
aad
pop
js
into
cli
xchg
je
jae
xor
inc
mov
std
mov
jmp
and
in
frstor
pop
stos
dec
and
cmp
fwait
push
sti
sbbl
sbb
jle
divl
dec
cmp
xchg
arpl
cwtl
mov
pop
mov
add
std
out
cmp
notl
push
mov
out
add
test
pop
jbe
mov
mulb
stos
jle
cmp
inc
jbe
cmc
in
xchg
xor
sbb
or
jge
cmpsb
ficoml
dec
dec
rolb
rol
adc
or
sub
mov
pop
jbe
arpl
push
idivl
xor
lock
outsl
lds
sbb
mov
sbb
xlat
adc
mov
ss
inc
ret
or
mov
sbb
outsb
out
add
xchg
pop
int3
jle
xlat
inc
outsl
repz
and
mov
loopne
loope
clc
loope
aaa
test
push
jg
ret
outsb
jbe
jns
push
adc
and
push
or
ds
mov
sahf
adc
jns
adc
sbb
xor
xchg
inc
xchg
fsubs
sub
sar
pop
xor
mov
mov
outsb
cwtl
data16
icebp
cwtl
sub
push
cmp
add
mov
xor
mov
test
cltd
shrl
cltd
pop
lahf
shll
repnz
ficomps
mov
ffree
add
add
lret
sbb
outsl
jno
ja
mov
push
mov
dec
mov
sbb
cmp
dec
dec
pop
mov
adc
aad
sub
xchg
lea
cmpsb
dec
sbb
push
cmp
push
xor
mov
movsl
incb
pop
adc
outsl
idivb
sub
xchg
idiv
pop
pop
mov
xlat
fsubs
movsb
sarb
inc
in
push
mov
scas
mov
stos
inc
andnps
pop
fidivrs
imul
xor
mov
mov
sti
mov
push
xor
test
scas
inc
sub
ficoms
arpl
mov
mov
pop
imul
jo
xor
cld
je
pop
pop
cmp
ds
filds
andb
movsl
inc
clc
ficomps
adc
repz
pop
das
sbb
xchg
test
mov
fldt
sbbl
test
sub
rclb
out
or
out
mov
outsb
mov
outsl
adc
dec
icebp
pop
xchg
aam
gs
out
scas
pop
fisubl
cmp
mov
cmpsb
insb
jp
pop
jl
mov
hlt
movsb
jb
cmp
stc
fsubs
sarb
mov
rorl
dec
mov
sbb
bound
and
sub
xor
xor
ss
add
in
cs
mov
aaa
jle
xchg
push
mov
sbb
iret
mov
mov
stos
out
mov
incb
push
fwait
pop
bound
or
ss
ja
mov
fistl
aas
jl
cmp
xchg
imul
loopne
lock
aam
je
or
jge
out
or
jmp
push
lods
call
jmp
sub
out
jmp
int
push
and
jmp
add
addl
jmp
icebp
in
jae
shr
cli
ret
jmp
push
jmp
popf
in
pushl
jmp
daa
arpl
mov
jmp
es
ljmp
jmp
jg
dec
je
shr
push
jmp
xchg
jns
ret
jmp
insl
adc
add
add
in
call
jmp
jae
add
pop
jmp
sub
jmp
xor
popl
add
jmp
in
pushf
inc
imul
call
mov
mov
cmove
xlat
dec
stc
nop
insl
cwtl
aas
mov
js
push
sarb
popf
pop
aad
loop
cwtl
cmp
xor
xor
or
cmp
sbbl
cmp
sub
insb
lock
rcll
push
lret
pop
enter
jle
adc
mov
push
and
mov
int3
arpl
mov
or
hlt
addr16
cmpsb
mov
cltd
adc
jg
mov
fists
out
push
daa
mov
jne
lock
xor
iret
cmp
lahf
js
push
lock
pop
xor
adc
sub
mov
mov
aas
es
test
cmpl
adc
lret
sub
xchg
or
xlat
cmp
cmc
bnd
loop
mov
jae
and
mov
stc
loope
mov
mov
nop
mov
divb
insl
int3
adc
mov
jns
mov
dec
in
push
repnz
clc
loop
mov
scas
xorb
mov
orl
jg
jl
and
or
cmc
test
jg
xor
inc
sub
add
fildl
les
mov
or
cmc
xchg
mov
mov
nop
addl
cmc
cmp
std
insl
mov
arpl
xor
mov
sub
xchg
xor
sub
arpl
cmc
rolb
mov
sub
xor
push
mov
cmp
sub
cld
je
aam
push
lock
fsts
arpl
lods
enter
inc
repz
cltd
jg
arpl
das
and
push
push
jae
int3
aad
inc
sub
arpl
xchg
pop
cmp
lods
and
movb
sub
test
pusha
add
cld
jns,pt
enter
fmuls
cltd
cmpsl
enter
sbb
xor
cmc
in
jmp
xorl
push
add
call
subb
xchg
or
and
push
fwait
insb
sub
cmp
dec
and
mov
dec
hlt
in
out
mov
cmc
and
frstor
jnp
add
js
push
mov
subps
mov
add
or
lcall
movsb
mov
lock
imul
mov
pushl
xor
lods
xchg
push
idivl
lock
jns
mov
jnp
out
add
pop
inc
cmp
mov
cmc
ret
jo
pop
sub
cmc
jp
aam
repz
pop
shr
sbb
xchg
jbe
inc
mov
adc
test
xor
out
add
and
lret
cmp
mov
cmc
dec
test
out
ficoms
ljmp
out
insb
pusha
bound
jmp
add
nop
mov
lret
dec
inc
stos
aad
subl
or
sbbl
and
sti
hlt
dec
dec
xor
push
pop
pop
fistpll
mov
add
repz
or
cmpl
add
jl
and
mov
and
mov
push
popa
ret
lods
adcl
lock
xor
test
mov
mov
test
push
pop
sbb
xorb
push
mov
sbbb
test
ss
pop
lcall
mov
pop
in
xor
outsl
test
pop
inc
xlat
cmpsb
jl
cltd
mov
hlt
ds
jmp
cmp
mov
adc
daa
loop
movsb
push
or
dec
daa
scas
jge
gs
out
pop
decl
or
insb
push
sub
lahf
jge
sbb
xchg
lcall
cmp
or
add
push
je
push
adc
inc
sub
xor
clts
inc
aaa
enter
dec
hlt
incb
jl
mov
cwtl
in
paddusb
dec
jns
pop
test
pusha
loop
in
mov
addb
nop
xchg
mov
cmp
pushf
test
inc
decb
or
bound
xchg
push
mov
cmpb
jg
cmp
cld
icebp
mov
add
in
fwait
mov
hlt
popa
lcall
adc
fsubrs
mov
xorl
mov
cmc
pop
test
add
incl
clc
nop
insb
xchg
out
sub
arpl
lods
aam
push
out
mov
add
in
or
inc
pusha
jmp
mov
fstl
fs
push
mov
add
movsb
mov
jmp
movsb
mov
add
cmp
pop
nop
hlt
jle
xchg
nop
inc
aas
sbb
jmp
push
scas
jnp
cmc
mov
pop
mov
push
paddd
xor
mov
arpl
add
popf
dec
adc
mov
xchg
cmp
push
mov
add
sub
bound
das
mov
cmp
xor
jmp
jo
mov
mov
jnp
fadds
pop
push
scas
sub
or
sub
jne
cmp
pop
mov
push
leave
xchg
jns
lds
cltd
xor
cmpsb
xchg
int3
xchg
mov
loopne
enter
sbbb
mov
jbe
xchg
in
fwait
inc
adc
cmp
xchg
repnz
pop
cltd
xor
das
rorl
addr16
lahf
adc
stos
sbb
fisttpl
push
mov
and
cmp
mov
ss
jmp
and
mov
stos
mov
sbb
dec
imul
nop
cli
idivb
sarl
fsts
mov
jae
push
arpl
test
lods
in
pusha
aad
sbb
jne
mov
cmc
fmul
lcall
mov
pop
xor
xchg
fmuls
sbb
pop
pusha
add
fldt
and
clc
dec
jns
call
inc
pop
inc
stos
cmp
dec
dec
movsl
mov
stos
pop
and
dec
paddusw
jmp
into
jl
fs
jg
jb
push
pop
js
push
lret
fldenv
arpl
test
jge
and
loopne
mov
aam
add
clc
fstl
mov
ret
std
jp
pop
jb
or
or
lock
ret
scas
ret
imul
dec
scas
push
nop
fdivrs
xor
out
pop
aam
sbbl
sub
or
fincstp
ja
xchg
or
and
adc
pop
inc
stos
inc
fwait
cmpsb
into
mov
mov
push
sbb
imul
std
jp
xchg
loop
or
or
lock
push
sub
mov
mov
mov
imul
push
sbb
fsubr
pop
aam
xchg
and
push
cmpl
push
or
and
sbb
fs
adc
outsl
push
lret
cs
mov
jbe
mov
scas
sahf
bound
mov
mov
int3
mov
and
jp
inc
shlb
xchg
add
adc
and
inc
rorb
mov
mov
hlt
out
mov
adcl
mov
out
adc
sub
pop
mov
push
mov
ljmp
bound
mov
fstl
or
mov
mov
movsl
add
popa
je
imul
fld
dec
loopne
xchg
lock
hlt
popa
xchg
outsl
mov
jp
push
jp
or
or
lock
dec
mov
xchg
or
lock
xor
lods
adc
dec
xor
xchg
enter
popf
jl
push
dec
mov
int
and
scas
mov
jle
imul
mov
pop
imul
add
insb
jae
xchg
pushf
push
and
inc
out
pop
push
adc
jne
mov
or
fincstp
xchg
xchg
xchg
and
call
inc
pop
inc
stos
sbb
push
imul
lretw
ret
or
pushf
or
ja
call
mov
sbb
inc
pop
cli
aaa
sbb
and
ud1
nop
call
cmovs
jecxz
mov
xor
enter
addl
push
stc
jnp
add
add
mov
ret
outsl
mov
cmpsl
mov
setle
dec
bswap
mov
sti
sub
fidivrs
setle
dec
setle
dec
setle
dec
setle
dec
bswap
mov
sti
sub
fidivrs
setle
dec
setle
dec
ucomiss
ljmp
mov
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
or
mov
outsb
jmp
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
jle
into
mov
cmpsl
mov
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
setle
dec
jle
or
sub
dec
cmpsl
cmp
ljmp
sbb
and
pop
clc
mov
into
xchg
fcmovnu
mov
and
pusha
and
sbb
jmp
je
or
addr16
wrmsr
aam
int3
inc
cmpsl
out
dec
xchg
cmp
adc
push
push
lea
xchg
scas
mov
sarb
loope
mov
popf
inc
xchg
dec
or
mov
leave
and
jnp
jecxz
pop
outsl
pop
frstor
inc
jl
or
sub
popa
push
iret
push
mov
in
add
fcomps
out
addr16
xor
adc
add
fldt
jns
out
mov
cwtl
dec
ljmp
add
lcall
pop
in
and
or
mov
insl
mov
cmpl
xor
lcall
ds
loope
js
int
jae
sub
add
pop
movsl
inc
adc
mov
inc
test
popf
cmc
daa
sub
pop
inc
cmp
test
sub
and
fidivrl
xchg
push
pop
sub
push
sub
push
lcall
pop
sarb
pop
add
jg
or
xchg
xor
dec
jl
add
fiadds
jo
pop
arpl
adc
mov
and
test
arpl
pop
jmp
push
sub
popf
pop
add
push
mov
dec
and
js
in
jl
mov
aaa
ljmp
leave
dec
and
outsb
mov
cmpsl
pop
fists
mov
cld
xor
fnstenv
iret
add
adc
and
xchg
push
push
mov
cli
inc
and
insb
hlt
inc
pop
rcrb
add
fistps
jns
push
jecxz
jle
inc
lods
mov
or
cmc
dec
ds
push
sbb
ljmp
scas
push
les
mov
sbb
xor
xor
jnp
pop
repz
mov
cmp
dec
cmp
sbb
lock
inc
cmpl
or
es
out
cmc
insb
jle
hlt
in
pop
fwait
inc
push
in
push
mov
in
mov
scas
fisubl
add
out
or
dec
popl
mov
push
xchg
sub
jl
add
repz
aam
adc
sub
ds
sti
pushf
mov
mov
push
cmp
dec
xchg
xor
cli
xor
enter
lods
subb
test
pop
loopne
adc
out
adc
pushf
rcrb
popa
cmpsl
fcmovne
add
gs
test
out
je
enter
mov
lret
fbstp
sbb
inc
movsl
je
insl
fwait
and
pushf
push
shrb
int3
jno
gs
push
sbb
lahf
adc
mov
or
inc
ret
out
xor
arpl
cld
add
imul
cld
pop
push
and
jge
add
lods
add
mov
mov
inc
jbe
out
ret
or
mov
lds
movsb
mov
or
in
or
and
or
jns
adc
push
inc
mov
pop
lea
dec
sbb
dec
popa
inc
dec
mov
insb
dec
mov
pushw
in
dec
push
pop
into
jp
je
movsb
pop
imul
and
jmp
inc
adc
loop,pt
jno
inc
sub
push
pop
inc
jle
or
xchg
ss
mov
cltd
or
in
and
lret
ja
dec
sti
stc
test
sub
dec
dec
inc
cld
jns
mov
adc
adc
lahf
bound
jbe
stos
cmp
test
pop
pop
pop
or
mov
stos
mov
dec
stos
pop
add
mov
or
xchg
mov
push
cmpsb
jno
rol
insb
loop
jae
aad
cmp
inc
mov
rol
inc
pop
outsl
mov
fistpll
faddl
push
jb
and
js
movsl
sub
xchg
xor
adc
pop
js
sbb
sub
xchg
lcall
add
sub
inc
push
xorb
cmp
incb
xchg
mov
fisubl
cld
and
push
dec
mov
arpl
jecxz
or
mov
jns
lds
loopne
loop
inc
in
test
shll
lods
nop
lods
ss
lret
pop
addb
into
push
sbb
push
fadd
mov
or
dec
imul
push
fwait
add
jns
dec
adc
cmpsb
cmpb
subl
jle
shll
or
pop
lret
sub
popa
adc
adc
loope
fs
lret
xchg
outsl
fsubl
inc
adc
in
js
gs
adc
add
xchg
in
in
lcall
imul
mov
imul
dec
imul
shr
push
push
orb
loope
or
addb
ss
jecxz
sbb
sti
mov
dec
xchg
xor
or
fldl
int3
adc
mov
cld
pop
xchg
cmpsb
pop
mov
cmp
or
xorb
leave
fldenv
or
pop
addl
call
adc
test
in
imulb
movhps
pop
les
insb
mov
push
pop
jge
stc
sub
and
faddp
add
xorb
cmpsb
adc
pop
mov
and
pop
mov
out
jnp
mov
jb
push
fnstcw
addr16
sub
pop
imul
jae
adcb
push
int3
outsb
mov
cs
call
std
lods
sahf
cwtl
lret
enter
or
stos
mov
bound
xchg
cwtl
ficompl
jb
adc
roll
shrb
mov
fstpt
js
shrb
sub
insb
mov
push
jle
ret
add
in
mov
mov
out
scas
cmp
loop
rolb
sbb
sbb
push
faddp
jle
bound
mov
cmpsb
pop
mov
push
mov
mov
jae
mov
rol
push
pop
neg
loop
dec
adc
sub
xchg
or
mov
push
lock
mov
cmpl
ss
pop
fcoms
add
cmpsl
hlt
mov
jb
leave
sub
mov
cmpsb
call
rol
nop
inc
xlat
mov
ja
test
aam
stos
rsqrtps
aad
jo
push
fwait
and
les
push
out
insl
adc
mov
mov
cmp
xchg
sub
sahf
jns
lds
loopne
pop
outsl
mov
or
and
mov
in
in
add
fsts
scas
lret
pop
shrl
mov
adc
pushf
enter
mov
xchg
pop
and
fdivrs
xor
je
inc
and
lods
inc
push
aam
mov
arpl
sub
and
pop
add
pushf
nop
dec
sub
inc
and
mov
movsb
xor
test
xor
icebp
add
push
push
in
in
jge
mov
stos
lahf
rolb
pop
push
daa
jmp
inc
fsubrl
jge
jno
imul
lds
pop
andl
jp
std
ret
leave
ret
aad
jno
insb
sbb
test
out
stc
int3
shl
cmpsb
rclb
pop
push
lret
out
inc
leave
mov
push
jg
cs
sbb
push
sub
orl
mov
cli
jp
int3
repz
sub
movaps
push
xchg
test
jns
dec
xor
jge
ret
and
cmp
fcomps
in
dec
sub
stos
mov
and
sbb
test
pop
and
lock
jecxz
ret
inc
movsb
mov
add
push
sub
lea
xchg
aaa
faddl
imul
pop
mov
das
inc
stc
lds
sbb
fsubs
dec
ds
movsl
shrb
xor
xor
cmp
sbb
pop
fidivrs
sub
mov
xchg
push
adc
push
mov
mov
or
push
sahf
popf
sbb
das
push
out
jge
cmp
int
adc
bound
pop
mov
inc
sub
sbb
xchg
jge
and
jge
aaa
mov
add
sbbl
rcr
mov
pushf
pop
es
or
push
mov
or
mov
pop
jl
or
and
stos
icebp
jge
and
lret
fnstsw
lret
sbb
inc
enter
shll
push
jnp
pusha
fwait
lcall
and
stos
jb
pop
cmc
fwait
std
aad
inc
js
inc
inc
and
lcall
cmpsl
cmpsl
nop
dec
aas
mov
push
out
sbb
std
je
sub
aam
lods
ljmp
and
mov
inc
popa
pop
dec
xlat
outsl
add
jl
pop
jge
mov
jo
cmp
inc
hlt
ds
test
sti
xor
icebp
mov
test
je,pt
fidivrl
xor
add
test
scas
xchg
repnz
pop
mov
loope
add
lgs
dec
shl
cs
icebp
aam
cmp
xchg
push
das
xchg
icebp
lcall
imul
dec
add
loopne
mov
pop
stos
cmp
insl
push
fsubp
mov
les
xchg
cmp
movsb
pop
and
cmpsl
xchg
aad
adc
jmp
cmp
cwtl
push
mov
mov
pop
inc
mov
sbb
ficoms
xor
and
jge
shr
insb
fisttps
lods
pop
lods
out
gs
mov
es
lock
xchg
cmp
js
dec
aaa
imul
es
cmp
popa
adc
xor
mov
pop
imull
lahf
test
push
mov
mov
adc
inc
addl
subl
dec
push
rorb
add
sti
inc
and
imul
or
jle
mov
or
orl
adc
push
insl
into
out
push
mov
sub
lret
or
mov
cmpsl
push
sbbl
push
in
addr16
jecxz
xchg
jb
lahf
mov
pop
jp
mov
lods
xor
cmp
adcb
add
or
lock
push
pop
lds
push
insb
call
sbb
shrl
fs
and
mov
lahf
repnz
nop
sub
adc
sti
out
mov
dec
iret
call
test
add
xor
lret
and
mov
xchg
fbld
or
inc
pop
dec
cli
mov
shlb
int3
and
add
test
pop
cmp
xor
push
imul
out
js
mov
and
leave
mov
js
xchg
rclb
jg
shrl
pushl
mov
ja
dec
std
and
out
out
mov
add
fists
sbbl
or
fwait
xor
inc
ss
les
pushf
push
mov
fwait
shll
call
and
cmp
or
inc
mov
test
es
pop
fdiv
push
sar
jle
popa
or
mov
pop
sbb
testl
sbb
les
mov
jle
fiaddl
or
sbb
jnp
dec
xor
iretw
pop
push
imul
dec
jo
or
korb
and
or
push
dec
push
xchg
lret
fwait
in
jne
mov
mov
sbb
dec
das
dec
mov
imull
shll
pop
into
xor
sub
xchg
mov
add
pop
add
mov
inc
push
dec
xchg
fiadds
mov
adc
imul
stc
or
pop
lods
fistpl
loope
or
or
rcll
sub
paddb
inc
ret
add
loop
mov
inc
mov
clc
stos
idivl
jne
insb
aam
movsb
in
cmp
inc
insl
jge
loop
xor
in
sub
push
in
cmp
stc
xchg
dec
xchg
in
int
stos
push
aad
lds
outsl
push
xchg
rcl
jne
iret
not
xor
mov
add
mov
mov
jne
jle
xlat
insl
dec
pop
cmpsb
push
outsb
popa
lret
or
aaa
sub
jbe
arpl
mov
shll
pushf
mov
mov
xchg
mov
push
daa
in
insl
mov
fs
push
xchg
and
ss
push
test
push
dec
mov
jae
xchg
loop
aam
cltd
cmp
or
lahf
xchg
movsb
cwtl
push
scas
adc
xchg
movsb
sbb
pushf
cltd
rcrb
pop
xor
lods
test
aaa
clc
jecxz
xchg
adc
sbb
and
xchg
hlt
mov
das
cwtl
insb
faddl
push
or
lret
add
lea
cs
pop
fisttpl
repnz
popa
subl
mov
cmp
aad
pop
roll
lahf
adc
pop
inc
xor
dec
cmpsb
mov
sar
xchg
cmp
fs
js
aas
cmp
fucomip
sahf
mov
pop
mov
mov
xchg
pop
add
cmp
cltd
adc
mov
aas
ljmp
push
pop
cwtl
mov
inc
or
jnp
adc
jmp
and
sarb
pop
scas
sarl
gs
push
and
jae
add
sbb
test
add
lods
push
xchg
pop
out
push
lods
push
in
dec
or
lahf
mov
aam
adc
pusha
jns
push
fiadds
add
aad
mov
shlb
dec
fcmovu
sbb
cltd
fisubrl
scas
dec
loope
fmul
jne
push
dec
xorb
test
out
adc
inc
mov
cmp
movsl
pop
sti
shll
mov
icebp
icebp
mov
add
movsb
push
lods
mov
sbb
jge
adc
fmull
aam
test
cli
gs
cmp
andl
loope
rcrl
mov
pavgb
je
sbb
repnz
or
mov
pop
in
mov
mov
loop
mov
add
add
sbb
dec
arpl
sbb
xor
out
jle
mov
xor
adc
call
and
push
movsl
jb
rcl
ss
lret
xchg
ljmp
push
out
sarl
push
rcrl
xchg
mov
into
dec
pop
dec
pmullw
mov
stos
pop
movsl
adc
fsubrs
mov
xchg
and
push
add
push
xor
aas
in
int3
dec
jo
push
or
clc
push
xchg
call
push
xchg
test
jne
popl
fs
push
xor
out
ret
push
mov
in
test
xor
sub
movsb
pop
lret
stos
hlt
or
jg
sub
pushf
in
or
and
add
sub
popa
into
dec
in
cld
fistl
in
sub
shlb
and
pop
jg
popa
ljmp
pop
ds
push
dec
gs
sub
rorb
mov
hlt
jbe
xor
xchg
je
loopne
sarl
aas
gs
xorb
or
dec
mov
aas
mov
sub
stc
fmulp
ficompl
mov
cmpsl
gs
xor
pop
fildll
aaa
sbb
mov
test
push
inc
mov
jne
icebp
and
cmpb
mov
lea
inc
subl
xor
iret
nop
or
sub
divl
aam
inc
in
mov
jmp
out
fnsave
xor
ds
stos
imul
popa
or
mov
pusha
mov
jnp
stos
sub
lahf
inc
push
sub
test
sbb
dec
stc
cld
loopne
mov
les
inc
push
xchg
mov
adc
je
pop
mov
fbld
sub
xchg
and
loope
sub
cld
loop
ret
aam
sub
adc
xor
cmp
ficoms
mov
dec
movzwl
inc
lods
test
aam
and
jb
jl
or
lods
mov
repz
stos
cltd
lahf
sub
adc
mov
incl
movsl
mov
jle
push
push
xor
dec
fdivr
push
push
cli
mov
push
lds
rcl
and
ljmp
jmp
lods
pusha
inc
inc
stos
mov
and
repz
add
loopne
notb
pop
add
adcb
xorl
insl
adc
cmpsb
daa
int
push
and
sbb
movsb
xor
or
push
sub
and
clc
adc
adc
data16
mov
cmp
push
fiadds
arpl
add
iret
ret
cmpl
roll
shrl
fnstcw
mulb
sbb
xchg
js
mov
push
mov
cltd
push
sbb
or
ffreep
cltd
dec
inc
les
xchg
cld
pop
cmpsb
pushf
pop
std
push
outsb
xlat
cmc
dec
pop
cmp
lods
inc
aaa
jmp
jg
gs
pop
xor
adc
mov
sbb
icebp
sar
jp
xor
pop
inc
xchg
enter
cmp
inc
or
int
pushf
test
sub
push
popa
scas
lret
and
arpl
mov
dec
sbb
xchg
mov
scas
shl
scas
jnp
gs
andb
jb
and
rolb
aaa
out
jmp
jo
rorb
jle
pusha
movsl
xchg
popf
fsubl
push
push
mov
mov
addl
or
inc
xchg
or
stos
fcoml
outsl
addb
sub
cmp
repnz
sbb
lods
pop
push
js
imul
pop
jp
mov
inc
jp
mov
sub
push
ds
fisubrs
mov
lods
int
mov
jns
push
sbb
xchg
ja
cld
push
mov
sub
cmp
jmp
loope
nop
or
or
adc
mov
xor
shlb
cmpsl
lahf
fidivrl
scas
call
test
push
rcl
cmpsl
dec
dec
jmp
and
push
push
test
es
arpl
sub
fbstp
push
push
pushf
aaa
rorb
sbbb
call
daa
or
int
or
add
aad
shrl
xchg
ret
rcrl
inc
jle
mov
outsb
movsl
sub
pop
inc
lret
add
push
sbb
mov
pop
jno
jl
jno
inc
mov
dec
inc
lahf
mov
sub
xchg
mov
cmpsl
mov
pop
adc
test
rcll
mov
xchg
pop
cli
or
lods
es
push
add
and
lods
fildll
inc
aaa
fstl
add
in
repnz
jbe
dec
and
jb
lds
adc
arpl
jg
popf
out
inc
test
jbe
xor
add
ljmp
jne
jo
rcr
addr16
xchg
fdivrp
jg
ljmp
fwait
push
test
push
sahf
adc
push
sbb
enter
out
fistpll
add
add
shl
inc
cmp
jge
enter
pop
sub
mov
movsb
jne
lods
jge
cli
pop
es
es
jp
xchg
in
sub
sbb
fs
xor
test
sbb
inc
cmc
movsl
jecxz
rcrb
ljmp
into
mov
in
ja
repz
stc
adc
mov
imul
dec
ret
push
pop
and
hlt
pop
xchg
cmpsl
inc
stc
test
testb
inc
cli
out
clc
lods
jo
ret
aaa
cmovp
sub
mov
or
mov
push
mov
jb
stc
jle
or
lods
push
adc
push
int
sahf
sub
adc
add
adc
rorb
adc
dec
into
stos
pop
xor
in
sbb
cmpl
push
cmp
outsl
jp
jbe
repnz
mov
mov
lret
mov
sarl
pop
adc
mov
addw
mov
std
aaa
lea
fwait
repz
iret
pushf
mov
sub
das
scas
jb
cmp
mov
sbb
xor
ret
je
ljmp
adc
clc
pushf
lock
stos
pusha
inc
push
sub
out
jbe
bnd
add
pop
int3
popf
bound
in
test
fs
aad
add
push
data16
cmp
mov
dec
cmc
ja
fildl
dec
dec
cld
inc
test
jns
xchg
dec
cmp
lea
xor
arpl
cmp
pop
cmpsb
fldcw
lds
les
fsubrs
ss
iret
pop
jge
ret
aam
or
lahf
cmpsl
add
mov
outsl
sahf
insb
lea
addr16
adcl
mov
cmc
pop
lods
push
jbe
andl
push
sub
leave
xchg
lret
dec
aaa
test
lahf
inc
and
sub
pop
add
pop
push
cmp
cmpsb
mov
push
imul
dec
cmp
dec
ljmp
adc
push
fistps
jmp
cwtl
add
cmp
inc
shrl
fbstp
aam
sub
in
fists
das
sub
lret
mov
pop
ror
add
loope
or
mov
and
push
mov
or
mov
cmpsl
xor
xor
pop
stos
cmp
dec
inc
dec
lret
and
push
stos
pop
pop
and
push
out
mov
lds
add
loop
adc
shll
fisttpl
es
and
loope
pop
adc
jbe,pt
cmpsl
sub
sbb
movsl
jbe
add
ret
dec
jecxz
out
outsl
inc
or
mov
or
inc
lret
xchg
dec
aad
fimull
cmp
out
pop
enter
cmp
cs
and
push
dec
push
sbb
mov
in
adc
in
or
loopne
push
pop
fldcw
fdivs
les
out
push
adc
xor
cmp
dec
popf
push
shl
pop
dec
sbbl
iret
arpl
pusha
mov
pop
stc
jbe
sub
je
je
push
pmulhw
pop
mov
loope
test
xor
lods
sti
jbe
addr16
dec
das
bound
mov
xchg
xor
mov
xchg
jne
or
add
sti
mov
mov
push
mov
xchg
out
and
add
inc
cwtl
adc
mull
push
test
jecxz
ficompl
lock
test
lock
jo
dec
inc
push
pop
cli
lcall
cmp
js
push
mov
dec
sarl
sub
loope
daa
pop
push
push
cs
mov
scas
lds
cmpsl
mov
cwtl
pop
enter
in
xor
lods
hlt
adc
clc
sarl
pusha
or
insl
jb
cmp
filds
or
jg
cmp
das
hlt
lret
lret
call
xchg
push
mov
jo
jo
xchg
push
mov
scas
lock
sahf
movsl
roll
test
xor
dec
test
mov
sahf
push
iret
loop
cs
xchg
xchg
leave
and
add
inc
xlat
sbb
jmp
popa
sti
xorl
jl
in
add
adc
add
xlat
fstpl
imull
into
enter
push
sbb
movsl
notb
fucomip
add
cmp
gs
pop
mov
sub
fimuls
mov
dec
scas
mov
movsb
and
pushf
cs
sarl
cmpl
scas
movsl
jo
insb
pop
or
test
cli
push
push
add
loop
ficompl
cmp
fisubrl
cmc
shlb
insl
pop
mov
insl
pusha
imul
xlat
fs
mov
sub
es
push
fstps
mov
negl
loop
sub
in
pop
mov
out
daa
xchg
or
stos
mov
movsl
or
mov
add
es
rcl
jae
fwait
jb
cmp
mov
scas
mov
mov
xor
out
sbb
inc
sbb
aas
fwait
cli
ja
mov
add
inc
jge
repz
sbbb
mov
sub
adc
arpl
andb
sahf
insb
and
lahf
xlat
pop
jge
fwait
cmc
pop
dec
pop
js
mov
js
repnz
dec
fnsave
int3
rcll
xchg
jo
js
cld
inc
in
addr16
push
pop
arpl
jg
neg
icebp
pop
out
cmpsl
xchg
lock
imul
fcomps
cwtl
sub
arpl
lcall
stos
lret
icebp
pop
stos
dec
mov
sbb
inc
fwait
lds
mov
mov
sub
mov
push
lock
mov
add
mov
mov
stc
jb
jle
movb
movl
mov
jmp
jecxz
fnstsw
roll
jmp
das
in
jl
add
mov
mov
jmp
dec
loopne
les
or
rolw
jmp
js
stos
addb
xorb
stc
jb
inc
call
jae
ljmp
jb
aas
xor
clc
jae
adc
inc
push
addl
jmp
adc
jmp
into
stc
loop
and
ret
or
push
daa
xchg
test
sbb
insl
cmp
cmp
xchg
sub
imul
lahf
mov
stos
leave
fsubrl
sahf
inc
movsb
pop
xor
fwait
jmp
mov
push
add
add
lea
out
push
or
js
xor
ret
pusha
js
xchg
out
daa
adc
jmp
mov
fs
or
dec
les
sahf
movb
pop
xchg
nop
and
add
cmp
shrb
adc
test
mov
fwait
icebp
sbb
jnp
sbb
js
add
pop
jge
notb
or
jo
jb
gs
dec
sub
inc
shlb
push
pusha
and
aaa
sahf
push
inc
fsts
out
out
xor
popf
dec
sbb
or
inc
cmc
divl
sub
mov
jle
cwtl
int3
jno
popf
add
add
add
add
add
add
dec
cmp
xchg
and
popa
cmp
sahf
cmp
xor
mov
cmp
pop
mov
and
mov
and
or
fists
jle
fmull
xchg
mov
sub
jg
fwait
in
inc
lret
jne
gs
out
xchg
lret
mov
ljmp
and
xchg
mov
movsl
pop
cmc
ret
sub
pop
jno
xchg
nop
mov
push
jle
aaa
pop
or
subl
orb
inc
data16
scas
push
lret
inc
in
movsb
gs
add
pop
ret
add
or
dec
add
add
add
add
pop
int
jge
pop
enter
and
or
cmpsl
stos
pop
jae
icebp
in
and
pop
arpl
mov
dec
in
gs
sbb
fstpt
pop
or
loope
mov
sub
rolb
orl
mov
dec
jb
ret
and
cmp
jb
cs
scas
repnz
jecxz
cli
popf
fisttpl
popf
int
inc
and
push
jge
mov
fiaddl
repnz
das
fs
outsb
jno
push
push
hlt
dec
cmp
and
push
ret
scas
xchg
addl
aas
in
fbstp
out
adc
lods
pop
dec
fistpll
imul
stc
xchg
in
or
add
lahf
mov
mov
pop
rcrl
movsl
leave
stos
scas
fmull
fbld
in
in
test
jb
lds
daa
dec
xchg
call
orb
loop
enter
idivb
sti
pop
out
xlat
in
mov
test
and
mov
out
add
fnstcw
mov
sub
hlt
fwait
add
adc
icebp
sub
or
lds
clc
cmp
mov
cmpsb
mov
jp
dec
es
xchg
dec
jo
movsb
stc
xchg
pop
lcall
jg
lret
hlt
movsl
fisubl
jbe
pop
jmp
mov
icebp
lcall
jae
cmp
loop
in
clc
sbb
xor
pop
adc
dec
dec
aam
mov
add
roll
xlat
xchg
lods
pusha
in
lock
mov
punpckldq
outsb
or
xor
loop
mov
mov
div
sbb
loopne
sbb
lret
fists
ret
mov
mov
test
dec
cmp
loop
call
mov
mov
pop
pusha
jp
jp
or
enter
xchg
jno
jge
jle
jge
ret
sub
lahf
aad
inc
aam
mov
outsb
rclb
pop
aam
xchg
pop
aaa
test
stos
divl
loopne
sbb
aaa
mov
bound
dec
mov
pop
dec
ret
loope
and
pusha
mov
adcb
cld
clc
fmuls
mov
jl
pop
aas
jno
jge
mov
loopne
push
jbe
sbb
push
push
push
xchg
dec
stc
test
xchg
loopne
push
stc
test
mov
xchg
sub
or
mov
mov
sub
outsb
aam
or
idivb
imul
mov
ret
adc
mov
fisubl
add
mov
lcall
inc
inc
aam
scas
inc
mov
cmp
xor
add
enter
xor
cmc
jmp
adc
mov
ds
pop
or
mov
rclb
ss
inc
in
xor
in
inc
ret
cli
insb
cmp
fists
scas
in
leave
lock
jbe
sub
scas
test
stos
xchg
in
jnp
cmp
adc
sti
mov
insb
mov
imul
sub
lret
xchg
nop
nop
sti
adc
negb
shlb
out
popf
jmp
adc
imul
cmpsl
imul
jbe,pn
les
xchg
fwait
add
imul
sbb
popf
les
mov
sbb
sbb
or
scas
push
ret
sub
shll
movsb
or
xchg
xor
pop
sbb
sub
xchg
cwtl
jecxz
ffree
pushf
push
jo
sahf
bound
push
insl
dec
ds
sbb
xchg
mov
inc
lock
sub
xchg
notl
movsb
xor
cli
push
dec
fsubp
sub
std
sub
dec
dec
inc
popf
inc
fs
sbb
stos
adc
pop
clc
xor
xchg
jmp
leave
mov
sbb
loope
enter
enter
lods
es
xor
arpl
lods
ret
nop
jge
imul
dec
dec
pop
inc
incl
mov
aad
cmp
dec
lds
aas
jns,pn
add
lea
bound
insb
dec
cmp
dec
cmpsb
inc
sbb
pop
test
scas
aad
leave
mov
inc
and
push
sbb
add
test
test
xchg
fisubl
mov
ja
lret
pop
js
pop
push
mov
in
push
dec
aas
sub
mov
out
push
dec
pop
cs
aaa
or
fs
mov
enter
repnz
cli
ret
cmp
sub
xchg
or
incl
add
add
fldt
add
addr16
and
mov
adc
popf
cwtl
dec
pusha
jle
push
imul
dec
ja
rol
movsb
push
shll
test
push
xchg
stos
sbbl
mov
pop
mov
outsb
push
hlt
stc
data16
or
pushl
dec
dec
stos
cmp
outsl
sti
aas
sarb
sar
add
push
stc
xchg
or
cltd
pop
repnz
addb
mov
iret
cs
icebp
popa
add
out
jno
xor
or
test
cmp
mov
and
push
and
pop
stos
xor
cmp
mov
sbb
dec
cmp
mov
hlt
adc
imul
scas
cmp
and
popa
inc
sbb
mov
lock
je
cltd
pop
insl
mov
ret
nop
cmp
fmull
dec
in
and
fildll
insb
adc
and
add
mov
insb
xchg
repnz
or
call
xor
jmp
mov
decl
push
or
mov
leave
scas
jno
cvttps2pi
fwait
jo
mov
jp
movsb
cbtw
add
insl
jmp
sub
repnz
psrad
iret
nop
lret
aad
jge
fdivs
add
mov
cmpsl
jge
pop
dec
dec
jno
insl
ret
cld
add
leave
popf
sbb
or
mov
inc
push
lret
push
xchg
ret
pushf
das
mov
pop
cmp
or
inc
les
faddl
mov
cmc
ljmp
jle
jae
ja
pop
mov
lret
iret
imul
mov
ljmp
mov
jmp
push
pusha
and
aaa
mov
repz
imul
fxch
cwtl
stos
bound
cmc
xchg
dec
pop
mov
cwtl
cmp
dec
sti
mov
sub
pop
addb
xor
in
frstor
dec
in
popa
sub
dec
mov
push
loopne
sbb
pop
pop
xor
lea
jns
test
out
in
and
testb
lcall
decl
push
movsl
jnp
mov
test
sbb
jle
xor
daa
into
in
fbstp
enter
xor
inc
cmp
lods
xchg
sub
fidivs
xor
jnp
xor
mov
stc
or
imul
call
jp
in
mov
clc
call
pop
imul
xchg
fldt
mov
int
push
xor
jne
add
xchg
sbbl
sbb
cmp
dec
scas
cmpsl
fldenv
lret
dec
push
sahf
xchg
and
fld
ds
cmpsb
filds
sbb
or
loope
mov
cmp
add
cmc
in
xor
pop
jno
mov
cmp
popa
movsb
and
pop
add
add
pop
jmp
adc
popf
enter
cs
xchg
jbe
cmp
pop
jecxz
mov
mov
mov
cmp
sub
inc
scas
pusha
jb
jnp
sahf
test
rolb
cmp
inc
ret
push
fsubs
loope
out
jg
xor
das
mov
fisttpl
adc
mov
lcall
stc
aam
cmp
mov
cmp
sbb
xorb
popf
sub
and
into
aam
mov
dec
sub
int
ret
pop
add
in
mov
fstps
addr16
bound
idivb
cmc
jae
adc
sahf
aas
icebp
leave
lcall
pop
sub
sti
xchg
mov
mov
pushw
scas
mov
ret
decb
push
fnsave
cld
mov
in
mov
fdivr
xor
fsub
mov
insb
dec
in
fwait
rorl
jp
sbbl
mov
aam
dec
scas
fstpl
and
into
aam
mov
dec
sub
or
adc
js
in
fwait
mov
xor
adc
addb
inc
fdivs
pop
cltd
inc
and
out
mov
popa
ds
aas
std
cwtl
adc
inc
sahf
sbbb
js
or
divb
push
int3
cmpl
repz
lret
push
imul
and
fucomi
scas
test
xchg
xor
sub
daa
es
dec
je
dec
repz
push
dec
and
xchg
je
scas
or
sub
xchg
jnp
mov
pop
gs
pop
shlb
lods
sub
ljmp
and
arpl
xchg
mov
loope
in
sahf
and
pop
adc
and
mov
xchg
mov
inc
jg
jmp
fwait
int3
ror
scas
dec
adc
dec
or
xchg
aas
mov
test
mov
orl
inc
into
mov
pop
inc
mov
outsl
leave
repz
sbb
in
push
cmp
lea
mov
mov
aas
xor
add
jle
sbb
mov
dec
add
ficoml
sbb
pop
lret
gs
mov
pop
xchg
arpl
or
in
nop
push
mov
cmp
xchg
adcl
mov
adc
in
fs
add
into
insb
loope
push
mov
and
rcl
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
int
mov
adcb
ror
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
xchg
stos
popa
fcomps
and
rcl
inc
add
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
aaa
mov
sti
jmp
and
xchg
imul
or
add
adcl
sbb
aam
cmp
lea
insl
push
testb
arpl
add
movsb
ret
subl
push
daa
add
xor
pop
stc
lods
mov
decb
pmulhuw
xor
mov
test
movsl
pop
cmpsb
ss
mov
and
dec
push
loope
stc
cmp
push
out
jne
aaa
add
repz
sti
mov
sub
mov
dec
adc
pop
sbb
mov
lock
faddl
lods
fcomps
mov
mov
ljmp
in
mov
iret
fsub
mov
insb
mov
stc
fwait
mov
pop
scas
mov
mov
adc
loop
cmp
mov
leave
or
test
cmp
test
out
int
movsb
pop
popf
push
in
mov
rclb
inc
jge
in
sahf
xchg
repz
sbb
fistpl
jnp
popa
movb
xchg
xchg
xchg
push
cwtl
mov
push
popf
js
push
lret
sbb
mov
fcmovne
aas
xor
push
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
xchg
and
jle
addr16
jno
loop
nop
je
lret
mov
test
cmp
into
mov
xor
repz
add
and
push
dec
sbb
or
jns
test
lods
xchg
pushf
insl
idivb
push
int
mov
paddd
hlt
dec
iret
test
jbe
nop
pop
hlt
adc
in
sub
test
and
idivb
sbb
xchg
call
aas
lcall
aam
sub
jmp
push
or
addl
iret
lea
mov
mov
aas
xor
add
lods
das
clc
add
add
fnstenv
mov
mov
loope
rcrb
cmc
cmp
loopne
mov
cld
rorb
fistl
lcall
repnz
out
int
movsb
pop
popf
push
in
mov
rclb
inc
jge
in
sahf
xchg
repz
sbb
fistpl
jnp
popa
movb
xchg
xchg
lods
daa
outsb
add
movsl
jp
add
mov
mov
sbb
stc
mov
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
xchg
and
jle
addr16
jno
loop
nop
je
lret
mov
test
cmp
into
gs
mov
pop
sub
mov
scas
aas
adcl
sbb
or
jns
test
lods
xchg
pushf
insl
idivb
push
int
mov
paddd
hlt
dec
iret
test
jbe
nop
pop
hlt
lret
mov
add
cmp
loopne
and
pop
sub
inc
stc
aam
sub
jmp
push
or
addl
iret
lea
mov
mov
aas
xor
add
lret
xchg
inc
xchg
mov
sbb
lahf
or
xor
popf
nop
mov
cmp
jo
lret
enter
pop
mov
push
mov
dec
loop
add
cli
out
jne
push
mov
in
inc
sti
stos
push
jmp
inc
rolb
out
fsubs
push
cli
shll
addb
aad
xor
and
xchg
imul
sub
lahf
jge
xor
jbe
cltd
xchg
outsw
out
mov
xchg
push
cwtl
push
and
jne
ljmp
xorl
jecxz
xchg
jecxz
sub
jno
inc
xchg
pop
imul
adcl
sbb
or
jns
test
jp
jae
fwait
pop
lahf
in
pop
jnp
leave
shr
imul
repz
icebp
fnstcw
fs
xor
test
cs
ret
push
mov
imul
cwtl
and
pop
ss
sti
repz
push
icebp
push
sbb
sub
daa
addr16
insb
sahf
aad
xor
and
xchg
imul
sub
lahf
jge
xor
jbe
cltd
xchg
outsw
out
mov
xchg
push
cwtl
push
and
jne
ljmp
xorl
inc
push
pusha
es
and
xchg
mov
movsb
scas
and
clc
dec
dec
test
shrl
loop
lods
lret
rorb
xchg
jno
pop
sub
outsl
inc
clc
rcrl
enter
push
pop
push
clc
pop
adc
mov
xor
aam
daa
out
pop
dec
jo
xchg
push
addr16
pop
xchg
cmp
movsl
cmp
dec
loop
stos
jp
cs
ljmp
fcmovne
aas
xor
push
popa
inc
loopne
mov
mov
push
gs
leave
lds
cs
adcb
dec
pop
pop
daa
xchg
hlt
mov
xchg
adc
add
test
arpl
jle
pop
or
cmp
cs
and
add
into
aas
adcl
sbb
or
jns
test
arpl
clc
jmp
push
adc
sbbb
xchg
add
lods
pop
aaa
pop
jnp
out
lock
nop
mov
push
fstpl
inc
ja
sbb
adc
frstor
out
xchg
arpl
or
in
cwtl
jbe
cmp
repz
bound
in
shrl
int3
pop
in
sbb
push
cmp
idivb
mov
aam
cmp
jb
repz
movsl
inc
in
push
in
push
cmp
lea
mov
mov
aas
xor
add
fs
int3
dec
lret
stc
pop
add
filds
or
lret
int3
xchg
adc
sub
sub
and
mov
push
jbe
lods
fbld
push
addr16
insb
sahf
aad
xor
and
xchg
imul
pop
popf
push
or
pop
jl
fldcw
mov
stc
test
mov
push
shll
dec
sbb
aas
adcl
sbb
or
jns
test
arpl
clc
jmp
push
adc
sbbb
xchg
add
lods
pop
aaa
pop
jnp
out
int3
cmpsb
cmpsl
xor
mov
incb
and
mov
rcr
cmpsb
frstor
out
xchg
arpl
or
in
cwtl
jbe
cmp
repz
bound
in
shrl
int3
pop
in
sbb
push
cmp
xchg
push
inc
and
fnstenv
and
xor
push
inc
mov
addl
iret
lea
mov
mov
aas
xor
add
fs
int3
dec
lret
stc
pop
add
filds
or
lret
cmc
adc
jmp
test
icebp
sbb
ret
cli
mov
repnz
mov
out
mov
pop
lea
mov
pop
or
xlat
mov
xor
jno
cs
loopne
sub
add
inc
jmp
jg
adc
fmuls
sets
mov
je
rorl
paddb
pop
xor
pop
in
mov
addb
push
cld
into
sbb
xchg
push
ffreep
cmp
pop
popa
xor
mov
push
mov
sbb
inc
lods
fcomps
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
add
cmpsb
test
scas
add
scas
aaa
mov
xor
rcll
out
push
mov
pop
movsl
and
sahf
rcrb
mov
daa
rcr
cmpsb
frstor
out
xchg
arpl
or
in
xchg
loop
ret
ja
js
data16
pop
rclb
ljmp
lahf
push
sbb
sub
push
insb
sbb
sbb
jge
cmpsl
dec
dec
add
dec
fwait
mov
movsb
add
inc
pusha
ss
push
sbb
in
jmp
test
es
enter
fldcw
cmpsl
mov
mov
ljmp
in
mov
out
cltd
push
int3
sub
popa
adc
fidivrl
adc
add
cmpsb
test
scas
add
scas
aaa
mov
xor
rcll
out
push
sub
pop
lea
mov
xchg
push
or
pop
sbb
dec
shrb
and
xlat
dec
jl
jno
test
push
and
jo
lock
inc
jmp
pop
ds
cmpsl
jno
xor
scas
adc
in
pop
push
fdivrl
or
test
les
xchg
clc
sbb
das
jno
xchg
pop
and
xchg
xchg
xor
lcall
push
xchg
clc
sbb
js
dec
cmp
sub
and
mov
add
jne
mov
testb
mov
pop
ror
adc
jp
push
lcall
mov
popa
push
lret
mov
fwait
ret
xchg
ja
push
add
and
fdiv
sub
cmpsl
mov
dec
sub
or
shrl
jns
inc
jae
lea
xacquire
or
rcll
adc
test
pop
dec
sbb
sbb
test
sbb
pop
imul
insb
mov
sbb
xor
cmp
in
jmp
idivb
bound
std
mov
and
xchg
mov
or
mov
and
aad
pushf
cmp
sbb
pop
in
ljmp
ffree
popf
icebp
pop
sbb
or
or
sub
jecxz
rcrb
or
jecxz
jl
shll
scas
mov
pop
outsb
sbbb
repz
addr16
cld
sbb
cmp
push
sbb
in
xor
dec
lds
xchg
push
cmp
ret
and
or
lret
out
mov
daa
popf
adc
xor
sbb
xor
mov
fs
orl
add
fs
push
jno
cmp
stos
lret
push
ja
lods
jmp
jnp
ja
dec
in
cmp
lahf
fst
push
push
mov
or
jne
test
test
and
pop
fcmovnb
je
adc
cs
test
enter
sahf
mov
lahf
cld
and
fprem
sbb
js
in
dec
inc
jo
mov
int3
xor
fimuls
cmp
adc
cld
pop
push
mov
mov
fwait
movsl
sbb
pop
mov
ss
inc
cmpsl
loopne
push
adc
sub
sub
push
icebp
addb
sub
leave
xlat
cs
cs
mov
mov
rcr
xchg
xchg
jne
in
cmp
sarl
ficoms
fidivl
mov
jbe
in
sbb
add
mov
xchg
push
iret
mov
les
jnp
shlb
aam
hlt
in
in
outsb
mov
mov
push
jle
out
push
popa
sub
push
jno
test
stos
pop
push
hlt
sub
fsubrs
lret
xchg
repz
sub
fidivs
push
mov
adc
jmp
inc
lock
mov
cmpsl
call
xorb
enter
adc
out
movsb
dec
pop
shll
dec
mov
or
dec
cmp
add
push
or
pop
mov
movsb
xlat
dec
adc
rorl
fisttpll
test
je
out
adc
js
adcb
mov
sbb
ljmp
jmp
cmc
loopne
or
scas
adc
in
push
xchg
icebp
out
jle
nop
pop
rorl
lods
jae
les
mov
dec
xchg
mov
dec
fwait
stc
sbb
bound
inc
jns
jecxz
movsb
sbb
sbb
push
out
mov
mov
xchg
insl
sub
lcall
adc
test
pop
inc
xchg
and
cmp
inc
test
sub
cmpl
pop
pushf
movsb
leave
lcall
dec
fsubrl
cmp
dec
dec
jge
dec
or
stos
in
orb
rclb
ds
lret
pcmpgtb
js
mov
mov
mov
sbbl
sub
jbe
xchg
scas
push
xchg
jo
outsl
inc
cs
jno
ss
jnp
mov
sbb
daa
or
inc
paddusw
lock
pop
es
loopne
int3
mov
xor
push
dec
mull
cs
or
jnp
iret
clc
sub
leave
adc
movsl
mov
jae
xor
stc
dec
lods
mov
mov
xchg
in
icebp
lahf
cmp
fstpt
bound
jecxz
push
aad
xchg
pop
sub
pop
mov
dec
ljmp
lock
movsb
jle
mov
pop
pop
aas
mov
in
enter
js
fidivl
cld
mov
ljmp
outsb
test
xor
dec
push
outsl
ljmp
sbb
xchg
fnstenv
sarl
cmp
cmp
pop
mov
int3
pop
add
cltd
lock
jg
jmp
cmp
rcr
pushl
xor
rclb
pusha
cmp
sub
jmp
jmp
pop
sbb
jae
xchg
sub
loop
xor
iret
push
aaa
pop
fwait
mov
add
in
fsts
int3
stos
ja
shlb
jecxz
sbb
movsl
repnz
mov
ljmp
mov
sahf
or
ljmp
pop
daa
test
int
inc
je
bound
xchg
sub
in
jae
out
dec
psubsb
sub
dec
int
ja
in
test
pop
iret
mov
insb
dec
jns
pop
subb
test
mov
out
adc
add
ret
xor
and
mov
or
pop
nop
push
mov
lahf
jle
loop
iret
inc
and
repz
subb
xchg
dec
sbb
push
std
stos
push
xor
iret
pusha
das
and
adc
mov
scas
icebp
into
in
adc
jge
aam
imul
mov
lea
mov
mov
shlb
sbbl
loop
jecxz
cld
rcrl
lret
jecxz
imul
adc
mov
insb
or
xchg
jae
jnp
lods
lds
xorl
add
clc
xor
mov
sbb
inc
dec
adc
jl
movsb
mov
into
pop
imul
jne
dec
xor
inc
mov
adc
int3
les
xor
mov
jnp
hlt
loopne
pop
or
testl
and
js
int3
push
and
stos
push
insb
mov
inc
sub
stos
jl
push
data16
fs
imul
and
mov
jns
xchg
cmpb
aam
lods
in
sub
rcrb
push
xor
mov
lds
repz
lcall
scas
push
insb
inc
add
ret
ret
or
andl
popl
std
sbb
dec
adc
push
in
test
std
orl
mov
outsb
xor
sbb
ret
sub
mov
push
jne
adc
bound
pop
and
test
xchg
cmpsl
repnz
repz
mov
dec
es
mov
rep
xorb
les
dec
in
lock
sub
jge
movsl
pushf
pop
popf
push
jns
xor
cmp
out
fdivl
push
jb
loopne
test
mov
int3
shl
push
pop
mov
ss
jb
cmp
shll
nop
xchg
xchg
int
pop
pusha
mov
ljmp
or
arpl
jae
add
leave
xchg
dec
mov
fs
cmp
cmpsl
mov
lds
xchg
sbb
jo
hlt
dec
movsb
call
dec
pusha
lock
push
push
mov
sub
js
imul
and
call
insl
sahf
sbb
sbbl
mov
fnsave
nop
or
pop
cmp
pop
mov
cmp
sub
mov
lea
bound
cld
inc
cmp
jae
mov
cld
inc
jo
jp
dec
inc
jl
xor
inc
xchg
add
mov
shrb
aam
dec
aam
dec
addr16
jo
popa
pop
and
add
femms
mov
fists
cwtl
pop
int
repnz
mov
sti
dec
mov
shlb
cltd
mov
push
adc
mov
push
push
in
mov
scas
jle
sbb
repz
dec
mov
dec
jne
cmpsl
fstpt
outsl
sub
lds
xchg
pop
das
mov
mov
adc
cmpsl
jmp
icebp
roll
lods
lods
jl
lea
mov
mov
cmp
sbb
in
shll
sbb
repz
sbb
sbb
aas
push
int3
ss
idiv
fcompl
mov
or
das
test
dec
sbb
das
movsb
and
cltd
insl
mov
lret
mov
mov
fbstp
xchg
repnz
mov
jp
cli
in
dec
adc
mov
mov
lret
pop
sub
mov
lret
mov
or
xchg
sbb
sbb
cmp
push
sar
mov
dec
push
xchg
pusha
cmp
inc
sbb
out
jne
daa
sahf
mov
xchg
dec
je
cwtl
inc
add
dec
in
add
aas
cwtl
xor
loop
nop
pop
shr
xchg
mov
inc
in
push
loop
sbb
pop
and
loopne
sbb
and
jo
mov
in
loopne,pt
cmp
enter
pop
mov
push
jo
outsb
data16
fdivrp
adcl
popf
fidivrs
mov
mov
add
sbb
mov
mov
sub
inc
mov
imul
cs
lahf
pop
jb
push
in
push
pop
insl
and
mov
pop
adc
inc
inc
mov
repz
sbb
gs
inc
sub
xchg
sub
mov
stos
scas
movsb
outsl
lods
mov
sbb
xchg
jnp
or
mov
ljmp
mov
or
lods
push
int
add
icebp
inc
or
dec
test
mov
push
test
aaa
and
mov
cmp
or
mov
pop
in
in
popa
cmpsb
into
ja
out
mov
xchg
mov
pop
add
ljmp
imul
lcall
xor
nop
sbb
aaa
sar
les
sub
sbb
or
aaa
pop
and
mov
mov
pop
orb
nop
inc
cltd
jns
mov
aam
int
xchg
inc
out
jno
nop
daa
cltd
sti
cmp
xor
out
loope
fistpll
mov
roll
loopne
xchg
adc
movsb
inc
mov
loopne
leave
jge
int3
push
jae
jl
fstpt
push
fwait
jns
sbb
cmp
jp
clc
js
andb
ljmp
out
loopne
mov
mov
rolb
sub
mov
jmp
inc
gs
and
pop
jo
jmp
adc
push
ret
xchg
push
mov
push
das
gs
or
mov
mov
mov
adc
in
pusha
mov
std
xchg
and
jo
in
insb
pusha
xlat
and
into
adc
and
and
fisubrl
dec
pop
adc
jp
dec
inc
push
pop
movsl
and
lock
insb
and
cld
negb
jg
and
ficoml
insl
notl
ret
jne
cmp
push
cmp
jne
test
xor
inc
shrl
xchg
push
cltd
arpl
outsl
xchg
jns
lods
test
lods
sub
pop
mov
pop
mov
js
rorl
loopne
xchg
rcrl
mov
mov
fnstcw
pop
out
xchg
pop
cmp
push
call
pop
cwtl
das
sbb
mov
cltd
adc
pop
add
fwait
sub
mov
inc
inc
gs
sub
dec
in
push
imul
xor
xor
pusha
fimuls
jge
push
enter
shlb
lret
push
mov
lret
cmp
ja
sub
jl
cmp
ss
mov
inc
pop
aam
mov
scas
inc
je
mov
pop
xor
inc
cmp
in
mov
dec
mul
imul
fwait
adcl
imul
xor
cmp
in
pusha
push
dec
adc
out
jecxz
push
in
mov
cltd
dec
in
jle
loop
dec
push
mov
loop
mov
push
jbe
push
repz
mov
rorb
cmp
dec
push
mov
sub
lret
cwtl
cmc
fstl
or
xor
pop
pusha
out
xchg
jp
loopne
dec
out
stos
pop
out
sbb
cmp
add
loop
xchg
inc
inc
outsb
les
test
shrb
push
mov
dec
mov
mov
pop
and
gs
insb
push
xchg
mov
jmp
into
push
leave
aaa
icebp
lcall
add
enter
dec
data16
push
sbb
loope
mov
iret
xor
mov
add
jb
mov
fbld
mov
jne
movsl
mov
outsb
fdivrs
fmuls
pop
adc
pop
test
in
inc
notb
mov
add
stc
gs
movsl
cmpsl
jp
leave
sub
insl
add
xchg
mov
mov
mov
shrl
leave
pop
mov
mov
pop
flds
or
pusha
insl
cmp
add
mov
sub
aad
rcrb
arpl
aad
push
or
lahf
xchg
subl
adc
jl
jo
sbb
dec
push
mov
mov
or
mov
neg
add
int3
xor
test
add
inc
jge
mov
adc
daa
mov
cli
cmp
jmp
ret
add
inc
mov
fnstenv
mov
cmpsb
adc
xchg
outsl
call
loope
mov
gs
jmp
dec
stc
jb
mov
insl
pop
push
cwtl
mov
inc
sbb
addb
xor
cmc
lods
and
inc
mov
or
or
push
push
xor
jbe
ljmp
insb
das
cltd
adc
fidivl
std
push
cmp
fwait
movsl
rcll
fisubrs
cwtl
inc
add
rcrl
add
mov
repnz
jnp
gs
pushf
std
js
sbb
mov
aad
stc
jecxz
loope
cmpl
mov
cltd
xchg
xchg
xchg
push
cwtl
mov
adc
mov
or
cmp
imul
sub
in
push
call
jo
ljmp
mov
das
mov
and
xchg
jecxz
pop
pop
xchg
or
mov
push
je
and
or
addr16
sub
arpl
scas
mov
dec
mov
mov
xchg
mov
push
adc
mov
add
xor
mov
out
sahf
sub
push
call
pop
or
sbb
jge
aad
jmp
cmpsb
pop
andl
inc
jp
push
push
cwtl
sbb
fimull
mov
lds
je
mov
rorb
iret
test
adc
add
repz
mov
fsubs
enter
add
jbe
jl
mov
out
fsts
dec
sbb
daa
xchg
pusha
cmpsl
in
mov
in
push
ficoml
mov
add
adc
test
iret
ja
push
cltd
xor
cwtl
rcrl
movsb
movsl
add
negb
jbe
scas
sbb
lods
add
inc
out
adc
imul
repz
pushl
js
nop
in
nop
loopne
hlt
std
test
or
mov
orl
cmpsl
or
sbb
xchg
cmp
cmp
mov
arpl
insb
std
mov
pop
not
and
scas
jbe
movsl
gs
imull
adc
cld
hlt
or
push
test
mov
lock
adc
nop
daa
cmp
divb
das
stos
mov
int3
lods
mov
cmp
inc
dec
cmp
mov
mov
cmp
cmp
sub
cld
scas
out
push
sbb
data16
jnp
xchg
mov
stos
pop
fsubl
push
xchg
sar
lret
and
inc
or
mov
gs
cmp
inc
aam
rol
xchg
test
dec
add
pop
cltd
add
call
scas
mov
shl
std
adc
iret
imul
daa
mov
dec
push
outsb
and
popa
test
mov
cmp
fcomps
mov
dec
xchg
mov
out
xchg
out
xor
cmc
pop
imul
roll
jp
xor
dec
cmp
std
inc
data16
enter
mov
ljmp
addr16
hlt
mov
fidivrs
ds
enter
pop
ror
mov
scas
xchg
and
addr16
test
addr16
out
es
je
jl
or
push
mov
sub
popf
and
push
add
cltd
pop
mov
add
mov
push
lock
inc
fwait
rcrl
fsubp
inc
les
sbb
fcmovnu
mov
das
popa
push
mov
or
sti
clc
adc
sahf
pushf
test
imul
pop
mov
call
call
bound
in
test
cld
and
aaa
dec
mov
mov
inc
inc
dec
dec
outsl
pop
sub
mov
pop
push
and
icebp
imul
xchg
sub
mov
sbb
pop
xor
inc
sbb
xchg
mov
xchg
push
jne
mov
mov
fcmovnb
aad
pop
std
int3
imul
out
cmp
inc
lea
rcrl
mov
dec
cmp
into
cmp
lret
sahf
sbb
scas
pop
mov
stos
inc
leave
inc
adc
add
adc
mov
sahf
fs
cmpsb
fsubl
mov
gs
jge
cld
jecxz
xlat
sbbl
jne
in
sbbl
ljmp
call
hlt
dec
jnp
jo
fwait
lock
jns
add
out
add
icebp
jno
cld
and
dec
outsb
es
xor
in
cmp
std
cwtl
and
cmp
mov
popa
or
push
arpl
mov
inc
sahf
xchg
add
das
hlt
or
adc
and
imul
daa
faddl
aas
icebp
mov
dec
jmp
ret
add
xchg
pop
inc
inc
lret
mov
mov
lock
ja
xchg
mov
xor
jo
leave
mov
jns
cwtl
mov
sbb
xorb
sub
push
lret
mull
scas
lods
pop
sahf
jb
lds
add
int3
jle
mov
inc
dec
int3
fdivrs
ds
xor
movsb
std
mov
jmp
sahf
push
sti
repz
or
push
ljmp
mov
jno
mov
cmpsb
mov
sbb
outsl
xchg
es
or
dec
lods
jle
test
aad
in
adc
mov
cld
aaa
insb
jle
sbb
and
shll
cmp
jecxz
pop
popa
nop
ds
sub
xor
lea
imul
ljmp
mov
lret
dec
adc
xchg
xor
push
inc
sbb
inc
roll
movsl
add
lods
sbbb
popa
lods
jae
stos
test
mov
lret
cltd
pop
push
push
popa
sub
outsb
adc
leave
push
pop
rorl
pop
xchg
hlt
faddl
icebp
nop
add
mov
dec
test
pop
cmp
push
cmp
or
fdivrl
xchg
iret
scas
test
imul
lods
roll
mov
mov
mov
mov
xchg
imul
inc
cmp
jbe
mov
shll
or
mov
cmp
fisttpl
push
pusha
dec
cltd
dec
add
cmp
cmp
imul
loop
decb
push
fisubrl
insl
das
inc
jns
dec
gs
push
sbb
mov
lret
popf
hlt
negb
inc
fsubrl
out
push
sbb
gs
pop
ss
fwait
movsl
push
aaa
loopne,pn
xor
int3
lahf
sub
filds
pop
jg
xchg
push
shl
inc
mov
rolb
push
xor
ljmp
jl
xor
data16
popf
and
ret
jae
cltd
loopne
cli
icebp
mov
stos
shrl
mov
hlt
cmp
sbb
mov
fwait
jnp
sub
clc
push
mov
adc
jae
mov
inc
push
pusha
aaa
xchg
shlb
shl
sbb
das
and
push
jmp
dec
xchg
lret
mov
ret
mov
stc
push
inc
cmp
and
add
pop
pop
loopne
loope
mov
in
outsb
push
sub
imul
int
dec
cmp
arpl
xor
rorl
je
dec
cltd
xor
loopew
out
cmc
inc
cmpsb
xor
aam
aas
cwtl
dec
ss
lea
cmp
add
insl
cmpsb
lcall
pop
lods
add
outsb
out
and
xlat
leave
test
xor
adc
jae
or
ja
and
pop
cmpsb
jmp
xchg
xor
cmp
cmc
jns
mov
or
fdivrs
mov
daa
fcoms
lahf
outsl
lahf
stc
dec
pop
xchg
xor
add
pop
jecxz
or
dec
sbb
adc
iret
stos
cmc
lds
xor
adc
xorb
ds
and
inc
add
or
shlb
cmpsb
sahf
inc
mov
adc
inc
or
loopew
jle
jne
cltd
sbb
push
jge
rcrl
loope
jge
and
or
and
sahf
xchg
outsl
jecxz
push
push
xlat
mov
scas
shl
decb
sbb
cmp
shr
add
mov
dec
aas
push
int
and
repz
repnz
mov
jo
and
jns
xchg
bound
mov
sahf
lcall
addb
xchg
test
sbb
insl
cmp
cmp
xchg
sub
imul
lahf
mov
stos
leave
fsubrl
sahf
inc
movsb
pop
xor
fwait
jmp
mov
push
add
add
lea
out
push
or
js
xor
ret
pusha
js
xchg
out
daa
adc
jmp
mov
fs
or
dec
les
sahf
movb
pop
xchg
nop
and
add
cmp
shrb
adc
test
mov
fwait
icebp
sbb
jnp
sbb
js
add
pop
jge
notb
or
jo
jb
gs
dec
sub
inc
shlb
push
pusha
and
aaa
sahf
push
inc
fsts
out
out
xor
popf
dec
sbb
or
inc
cmc
divl
sub
mov
jle
cwtl
int3
jno
lea
ljmp
xchg
mov
push
add
mov
pusha
fisubs
cwtl
jp
scas
xchg
imul
fwait
out
leave
or
and
xchg
push
mov
pushf
add
shrb
cltd
mov
and
mov
push
add
faddl
adc
sbb
ror
aam
xor
mov
mov
mov
mov
mov
aaa
ljmp
pusha
lea
iret
cwtl
pop
outsl
fnstenv
sarb
ret
inc
push
mov
sar
inc
cmp
xor
or
enter
sub
mov
pop
sub
pop
fildll
adc
sub
adc
aas
inc
jmp
daa
ss
rcrb
sbb
fwait
out
inc
add
mov
or
xor
pop
pushf
pop
in
movsl
pusha
sbb
dec
and
push
cmpsb
xchg
inc
xchg
adc
mov
frstor
mov
out
mov
repnz
pop
push
or
mov
bound
sti
data16
sbb
or
pop
and
inc
je
fwait
stos
xchg
mov
jle
repz
les
jne
jle
fwait
lods
mov
imul
sub
xor
lret
sub
jo
test
xchg
js
test
ror
clc
insl
mov
fwait
push
outsb
imul
or
inc
jnp
push
pop
lods
orb
stos
test
push
cs
daa
dec
jmp
mov
add
lret
arpl
mov
sub
xchg
add
mov
mov
lods
fs
mov
out
cmc
dec
jo
cmp
mov
jg
call
adc
pop
mov
sbb
xlat
mov
cmp
pop
jmp
adc
push
pop
lahf
pop
mov
xor
arpl
nop
jae
cld
dec
cmpsl
test
mov
jns
popa
insl
xchg
pop
mov
sti
mov
sbb
incl
insl
in
bswap
fcom
stos
bnd
cld
jecxz
ror
stos
cltd
lock
or
pop
xchg
lret
jns
ret
dec
xchg
mov
mov
and
lcall
adc
loope
lods
outsb
test
mov
lds
fwait
stos
xor
adc
pop
lret
jecxz
push
cmp
pop
inc
pushf
sub
pop
cmp
out
cli
pop
xor
fstpt
sub
out
inc
mov
test
rorl
inc
jl
pop
pusha
pop
sbb
mov
push
outsb
pop
sbb
cmp
cmpsb
jnp
sbb
nop
jl
dec
dec
mov
sti
pushf
dec
popf
pop
test
push
xchg
ficoml
enter
sbbl
mov
sbb
cmpl
mov
mov
fstl
mov
test
jl
scas
fmul
cmpsl
ret
out
lahf
test
fidivs
jl
adc
insb
pop
pop
cmpsb
sahf
dec
sahf
jno
aam
adc
or
push
dec
and
dec
jge
pop
sbb
mov
ds
fwait
insb
aam
inc
in
lds
loopne
mov
test
jge
es
jb
inc
add
gs
mov
in
jae
pop
jmp
xor
mov
movsb
dec
outsl
add
jns
shll
std
sbb
fistps
aas
sub
push
js
test
dec
add
pop
outsb
test
cwtl
mov
sub
mov
rolb
jno
lcall
out
fs
popa
pop
out
into
push
lret
imul
xchg
xor
data16
mov
jno
pop
insb
sub
add
gs
inc
sbb
add
pop
aad
or
sbb
add
sub
xchg
xor
rep
das
out
push
jb
mov
and
mov
or
cmp
mov
bound
or
lds
push
test
fst
inc
dec
ret
sub
xchg
mov
dec
scas
mov
jp
mov
aaa
roll
sbb
push
clc
mov
cmp
inc
lcall
or
cmp
and
cli
fcmove
xchg
shll
lcall
movsb
xchg
add
add
daa
fiadds
cmp
loopne
inc
adc
inc
fwait
shlb
jl
pushf
ja
xor
mov
test
leave
movsl
lea
cs
outsb
jne
mov
push
loopne
cmpl
dec
push
jns
stc
scas
and
pushf
pusha
mov
in
push
imul
mov
mov
mov
adc
adc
pusha
gs
sbb
and
mov
std
mov
gs
dec
fs
ret
movsb
aad
pushl
rorl
fadd
and
dec
icebp
adc
mov
arpl
negl
or
push
push
and
jp
dec
popf
nop
loope
add
rol
mov
xchg
adc
cmp
mov
pop
dec
pop
fwait
mov
jns
out
sbb
jae
orb
push
aaa
popf
insl
in
jb
movlps
lea
mov
dec
aad
pop
mov
out
dec
adc
movb
mov
cli
bound
jns
bndldx
cmp
jne
lret
adc
and
imul
ficoms
jle
sub
fsubrl
in
out
bswap
inc
and
ljmp
cmp
xchg
push
xchg
mov
insl
add
mov
xchg
xchg
inc
sbb
loopne
jp
fdivl
arpl
push
shll
insb
fidivl
lock
xbegin
pushf
arpl
mov
xor
xchg
dec
sbb
lods
xor
xchg
jmp
jo
lcall
fdivrl
cmp
mov
jo
dec
jnp
nop
mov
pushf
mov
in
icebp
out
mov
mov
mov
mov
outsl
inc
pop
leave
and
sbb
dec
and
xor
xchg
test
push
mov
adc
mov
add
mov
jle
pop
push
fcomps
pop
inc
xchg
iret
jo
jb
aas
adc
jg
cmp
test
aad
movsb
jle
repz
push
les
jge
jo
aas
or
cmp
adc
shrb
sub
int3
lods
testl
inc
aad
stos
xlat
fnsave
pop
aas
lods
loopne
mov
ror
mov
dec
push
rcrb
mov
lds
push
sarb
das
xor
imul
inc
jle
xchg
scas
add
out
sbb
add
fdivs
xchg
push
jl
idivb
mov
pop
inc
dec
cwtl
fistpl
pop
add
or
inc
popf
dec
aad
lods
mov
push
adc
pushf
cmp
and
cmp
testl
insl
cld
lret
ljmp
pop
imul
xchg
shrb
rcrb
xchg
sti
inc
adc
mov
mov
add
jge
ret
jg
sbb
push
in
adc
adc
ret
mov
movsb
adc
stos
push
or
cltd
dec
call
shl
popa
push
pop
dec
xchg
lods
lock
loope
cmp
ret
cmp
out
mov
and
push
inc
rolb
xor
cli
or
je
xchg
loopne
lock
push
xchg
insb
dec
sbb
jae
fcomp
into
inc
xor
xchg
call
cmp
jp
dec
cmp
mov
subl
mov
or
adc
test
jbe
repz
xchg
cmp
xor
cmp
pop
pop
mov
sbb
adc
lods
jnp
mov
filds
pop
popa
xchg
pop
push
cmpsl
sub
push
jne
ret
outsb
cmp
sbb
sub
js
testb
dec
sbb
or
push
arpl
nop
stc
cmp
je
inc
mov
sub
push
push
leave
jne
gs
mov
xor
les
ljmp
aaa
ds
inc
mov
mov
push
cmpsb
add
dec
aad
popf
hlt
arpl
gs
stos
xchg
sbb
mov
push
sub
xchg
in
sub
test
push
sti
cmp
lock
xor
dec
aas
out
jp
sahf
fldl
or
dec
jb
lods
aas
aas
pop
push
sub
adc
std
mov
loop
cmpsl
fsubrs
add
add
xchg
jae
mov
jge
faddl
lcall
loop
sti
xor
cmpsl
and
xor
call
and
fcoms
lea
lea
inc
inc
call
push
es
bound
push
xor
jae
enter
or
cli
and
or
insl
insl
push
add
aas
dec
mov
cmc
out
fisttpll
xor
orl
aaa
mov
pop
enter
xchg
movsl
push
xor
mov
test
pop
imul
xchg
jbe
jae
add
arpl
mov
cmpb
fscale
data16
and
xor
shll
fistpll
xchg
mov
push
xchg
and
dec
jnp
sub
filds
cmp
xchg
ds
icebp
pop
sub
xchg
jle
icebp
sahf
add
mov
xor
dec
sub
cmpsl
pop
mov
test
push
sbb
les
aad
inc
iret
popf
je
lret
movsl
mov
clc
or
and
test
xchg
and
mov
std
xor
xchg
sbb
sahf
test
inc
push
mov
adc
call
mov
and
xor
inc
push
outsb
rcr
xor
js
hlt
pop
xchg
outsl
xor
sbb
jecxz
xlat
mov
pop
xor
in
outsl
lcall
sub
mov
inc
dec
add
mov
mov
cmp
test
pop
sbb
sbb
fiaddl
mov
iret
lods
mov
inc
setns
je
sbb
pop
inc
and
xchg
xchg
rclb
popf
int3
xor
xor
rcrb
xchg
test
sbb
scas
and
jp
xchg
js
push
lret
and
jp
pop
inc
cmc
push
adc
outsb
push
cmpsl
lods
xchg
out
out
sub
cmp
enter
jmp
or
jo
jle
in
fucomip
imul
xchg
ret
lods
inc
pop
xchg
pop
sub
push
push
xor
mov
fists
inc
addl
rcrl
sub
pop
ficompl
mov
mull
mov
sbb
ds
sbb
jle
imul
addr16
xor
cmp
dec
cli
jmp
jp
xchg
scas
xchg
outsb
cmp
call
dec
xchg
push
inc
mov
push
push
and
dec
decl
int3
push
pop
aam
lret
mov
cmc
xchg
leave
cmpsb
add
jl
xchg
xchg
fsts
cwtl
mov
lret
mov
call
in
jl
push
pop
bound
mov
pop
nop
inc
jno
mov
fwait
inc
negl
cmp
xor
or
lret
out
lock
ljmp
dec
or
outsl
mov
mov
lret
adc
jbe
rcrl
insb
popf
lcall
inc
into
mov
cwtl
sbb
bound
mov
jne
sub
into
push
or
in
or
stc
lret
or
and
dec
pop
inc
lea
xorl
scas
cld
jp
mov
adc
rcll
test
push
xchg
iret
insl
sbb
jp
stos
mov
ljmp
dec
rolb
sub
xor
pop
pop
mov
xor
into
or
sbb
jl
fimull
lcall
cmpsl
int
sub
jb
hlt
mov
jecxz
adc
mov
mov
xor
or
sbb
lahf
inc
pop
dec
cmpl
mov
into
lret
lret
xor
push
stos
in
popf
jae
test
pushf
mov
cmp
xchg
jb
pushf
insl
popf
or
lret
adc
and
popf
mov
in
lcall
outsl
ds
out
sbb
cmp
add
aad
in
pop
mov
shlb
cli
mov
push
fs
aas
sbb
ljmp
cld
out
cmpsb
and
daa
int3
testb
pop
lret
mov
adc
mov
popf
inc
dec
push
add
or
fbstp
and
or
adc
dec
mov
enter
test
pop
and
ss
test
rolb
sbb
fimull
push
orb
dec
into
xor
ret
adc
notb
cmp
into
cmp
cld
jno
bound
int
sbb
mov
mov
lods
adc
lods
pop
inc
enter
out
jnp
cld
cwtl
ds
mov
ret
lods
aam
sbb
or
js
mov
ret
lahf
enter
pop
mov
scas
jg
loop
ss
xlat
add
or
add
outsb
add
add
add
add
add
cltd
dec
jg
gs
incb
iret
sbb
push
or
mov
fsubl
sub
xor
push
mov
xchg
adc
mov
and
ret
jnp
mov
cli
std
movsl
inc
add
js
jl
std
lret
loop
xor
dec
xlat
and
movsb
or
pop
push
jne
xchg
inc
push
lahf
pop
add
ret
xor
xor
fnstcw
andl
sti
inc
xchg
rorb
cmp
pop
test
sub
data16
fnstsw
inc
add
adc
cmp
xor
push
add
pushl
test
sti
dec
jno
daa
adc
ja
stos
xor
dec
into
adc
insl
in
sbb
lret
mov
movsl
xchg
lahf
jl
lcall
mov
repz
inc
lea
dec
rcrb
mov
and
imul
pop
cmp
leave
pop
aaa
dec
add
cltd
stc
jl
xor
cmc
outsb
andb
inc
mov
dec
aam
cltd
stos
push
pop
addl
out
lea
cmp
lea
lock
xchg
inc
push
and
sbb
call
sub
cmp
mov
outsl
movsb
xlat
mov
jecxz
test
cwtl
jmp
notl
or
shlb
add
nop
in
notb
mov
loop
clc
pop
aad
xchg
push
imul
fdivs
sub
jb
and
cli
cmp
int
and
adc
hlt
fdivrl
arpl
inc
mov
and
loop
and
sbb
inc
jg
inc
cmpsl
and
or
stos
xchg
push
outsb
inc
adc
dec
mov
lcall
jmp
sbb
idivb
out
xchg
rcl
pop
sub
push
and
sbb
sub
or
push
into
mov
mov
pop
in
inc
insl
inc
js
ret
and
and
fsubr
xorl
orl
sbb
dec
sbb
xorl
mov
outsl
or
jne
jnp
cmp
inc
gs
mov
loopne
pop
in
xchg
lock
sbb
mov
mov
jb
nop
sahf
insb
mov
pop
xchg
jns
rorb
movsl
stc
gs
je
mov
xchg
es
mov
call
sub
sub
insl
mov
mov
cld
push
lods
sbb
jg
ja
subb
fidivrl
jno
pop
add
fwait
jb
and
push
shll
call
mov
mov
mov
inc
shlb
dec
mov
xchg
jg
cmpsb
add
adc
lcall
and
leave
iret
and
add
shl
pop
push
sub
sub
andl
mov
rep
mov
or
pop
mov
movsl
jo
sti
jo
nop
aam
adc
jge
test
ljmp
int
inc
xor
and
popf
shl
incb
inc
sbbl
cmp
dec
mov
xlat
sbb
imulb
add
rcrl
imul
adc
repz
pop
dec
pop
sub
push
movsb
lods
scas
pop
pushl
subb
jne
cld
andl
xchg
in
je
imul
and
sub
popa
xor
dec
cs
or
jg
and
mov
xor
fcmovnb
sbb
outsl
sub
rorb
aaa
scas
sbb
lcall
dec
mov
insb
sahf
cmovns
lds
push
inc
outsl
or
icebp
push
add
jge
dec
rcr
cmp
xor
sub
mov
scas
lret
lret
and
mov
hlt
ror
cmp
cmp
xchg
sub
js
inc
daa
and
sub
les
icebp
out
repz
dec
mov
cmc
pusha
push
pop
adc
rolb
cli
sbb
inc
mov
push
stc
lods
push
jne
cs
jg
inc
clc
and
mov
outsl
mov
enter
sbb
ret
xchg
cli
lret
popa
aam
jae
xchg
or
xor
icebp
shrb
ret
or
fwait
xor
psubb
jge
pop
pop
xchg
dec
add
shrl
fldl
hlt
movlps
inc
push
adc
test
stos
dec
dec
xchg
fiadds
stos
lock
out
add
xchg
or
or
add
add
add
xchg
insl
lahf
mov
push
cmp
jle
xchg
push
sti
out
mov
bound
lds
add
jmp
xchg
sahf
fucomp
pop
stos
inc
jmp
hlt
daa
mov
or
jle
pusha
adc
insb
sbb
inc
xchg
mov
or
insl
insl
inc
mov
xor
inc
dec
addr16
cld
rol
push
sbbb
sub
xchg
mov
and
cltd
push
imul
pop
sbb
lods
lock
outsl
inc
push
dec
hlt
inc
sub
cmpsb
xorl
addb
leave
test
push
inc
lods
xchg
jb
dec
loope
mov
mov
inc
sbb
gs
push
mov
cmc
sbb
pop
mov
stc
mov
fldl
fucomp
mov
testb
loop
in
stos
cltd
cs
sbb
jnp
arpl
mov
xchg
iret
inc
mov
stc
mov
and
mov
sub
mov
es
rcrb
int3
into
inc
jb
mov
cmpsl
mov
std
jge
adc
pop
push
sbb
rolb
push
cmpsb
aad
shr
push
fiaddl
add
push
inc
enter
sbb
mov
push
movsl
push
cmpsl
push
in
adc
push
inc
into
leave
mov
jge
or
xchg
fistpll
lea
adc
div
adc
cltd
mov
nop
das
dec
jo
aam
cmpsb
sub
inc
dec
mov
jl
out
push
lods
fbld
out
cld
inc
sub
lcall
int3
sti
lea
aas
lcall
mov
dec
push
outsl
xor
jno
or
jp
jg
dec
lods
popf
repnz
lret
pop
out
lret
mov
cmc
mov
mov
inc
sbb
gs
push
pop
sar
ljmp
movsb
push
cmpsb
lea
mov
fldl
fucomp
mov
testb
loop
in
stos
cltd
cs
sbb
mov
stos
testb
testl
and
mov
sub
mov
es
rorb
sbb
pusha
xor
mov
std
jge
adc
pop
push
sbb
rolb
in
pop
adc
inc
mov
out
enter
sbb
mov
push
movsl
push
cmpsl
push
in
adc
push
inc
into
leave
mov
push
imul
mov
out
popa
adc
lods
adc
div
adc
cltd
mov
nop
das
dec
jo
aam
cmpsb
addr16
orl
sbb
iret
jl
out
push
lods
fbld
out
cld
inc
sub
lcall
int3
sti
lea
aas
iret
dec
test
dec
fdivs
cmpsl
lcall
inc
push
popa
test
or
add
outsl
mov
or
dec
outsb
test
stos
rcl
cmp
mov
jno
pop
sub
gs
cmp
jbe
mov
mov
jno
shrl
js
adc
pop
int3
lods
sti
push
jb
adc
cmc
push
xchg
loop
push
rcrl
loop
das
es
and
repnz
or
mov
out
mov
sub
mov
lods
mov
pop
repz
add
mov
jo
dec
dec
mov
ds
adc
push
inc
into
leave
mov
lods
mov
or
jb
adc
lret
shlb
xchg
and
out
sbb
dec
jo
aam
cmpsb
pop
and
xchg
sub
into
sub
push
sub
add
leave
clc
addb
test
sti
lea
aas
push
faddl
loope
es
sbb
adc
or
cmp
lcall
mov
xchg
ret
mov
cmc
pop
cmc
mov
shll
xor
inc
push
fisubs
mov
push
pop
sar
ljmp
pushf
adc
sbb
adc
pushl
mov
jp
sbb
jge
jecxz
rcll
cld
jne
pop
xlat
ret
or
pop
mov
mov
fwait
loop
xchg
sar
add
rcr
xchg
ret
jp
rorb
mov
dec
in
andb
inc
mov
mov
mov
dec
and
cmpl
in
rolb
or
inc
push
mov
iret
dec
adc
in
add
mov
jo
dec
dec
mov
ds
adc
push
inc
into
leave
mov
mov
sbb
adc
lret
shlb
xchg
and
out
sbb
dec
jo
aam
cmpsb
push
mov
popa
testb
sub
into
sub
push
sub
add
leave
clc
addb
test
sti
lea
aas
jmp
mov
fwait
repz
lret
cli
push
sbb
adc
or
cmp
lcall
dec
in
and
in
mov
cmp
mov
sbb
inc
adc
xchg
or
popf
stos
add
adc
push
inc
cmp
cmp
or
shrb
inc
fdivrp
adc
fwait
xor
cmpsl
push
sub
pop
and
aad
test
dec
dec
pop
into
sub
push
sub
add
rcl
dec
or
arpl
add
jg
push
pusha
mov
mov
xor
fildll
aad
inc
cltd
lea
or
add
pop
mov
mov
mov
aad
in
je
repz
add
mov
inc
cmpsl
sarb
out
adcl
int
ret
cli
cmpsl
scas
bound
push
xchg
lahf
mov
stc
sbb
sub
ds
data16
mov
out
sahf
mov
mov
fwait
adc
clc
out
sub
jecxz
test
jns
jno
rcl
xchg
push
shlb
mov
jns
adc
mov
inc
xor
sub
js
pushf
je
ds
sbb
or
mov
mov
inc
adc
xchg
or
popf
stos
add
or
pop
test
mov
xchg
stc
or
shrb
inc
fdivrp
adc
fwait
xor
xchg
pop
mov
addl
in
test
int3
imul
dec
popf
jmp
jg
je
and
cmc
jl
push
sbbl
mov
out
cld
scas
aaa
mov
jae
bnd
pop
mov
jp
fmul
cmp
push
xchg
loope
jp
rcll
scas
cwtl
lock
sahf
daa
mov
sub
out
mov
into
pop
enter
sbb
mov
adc
sub
and
lock
xchg
sub
iret
mov
mov
shll
loop
mov
xchg
rorb
jg
out
mov
ret
loopne
mov
and
icebp
add
js
movsl
push
or
cmc
and
daa
mov
mov
daa
inc
push
sbb
sub
ror
jb
stc
ja
mov
cld
stc
movsl
mov
cmpl
or
test
adc
or
std
xchg
fisubs
imul
push
fisubrl
decb
cmp
enter
popa
out
mov
aaa
lods
push
xchg
mov
test
out
mov
pop
dec
insb
sbb
push
aad
mov
popf
data16
fcomip
pop
sbb
daa
adc
xor
push
pusha
cld
pop
roll
adc
or
mov
scas
xchg
lahf
cmp
adcb
fldcw
shr
stos
loop
xchg
lahf
mov
xchg
mov
adcb
lret
out
jo
inc
imulb
sbb
popf
push
pushf
or
lret
mov
push
push
jl
cmp
mov
out
enter
rcr
je
mov
cmp
pop
or
dec
imul
mov
mov
fcompl
push
sub
mov
cmpsl
call
popa
test
xchg
cmpl
or
test
adc
or
std
xchg
fidivs
cmp
jecxz
js
jg
jns
enter
popa
out
mov
aaa
lods
push
xchg
xchg
addr16
cmp
loope
xor
push
in
push
aad
mov
popf
data16
fcomip
pop
sbb
mov
aas
xor
push
pusha
cld
pop
roll
adc
or
mov
scas
xchg
lahf
cmp
test
jno
jl
test
adc
push
xchg
lahf
mov
xchg
mov
or
jbe
dec
mov
dec
push
xchg
cmp
mov
adc
popf
push
pushf
or
lret
mov
push
push
jl
outsl
cmp
cmc
mov
outsb
push
enter
rcr
je
mov
cmp
pop
or
pop
jo
inc
rclb
dec
xor
sub
fcompl
std
out
adc
mov
sarb
ud0
xor
pop
fcoml
mov
push
rcrl
pop
add
inc
adc
cmp
push
or
sbb
inc
xor
in
sbb
or
test
fadd
mov
pop
cmp
sub
lahf
sub
sub
rorl
cmp
test
xchg
adc
lret
add
pop
ret
pop
add
add
add
add
add
add
mov
int3
mov
or
imul
inc
or
inc
mov
mov
int3
les
cmp
movsb
xor
fwait
cmp
lea
cmpl
pop
gs
add
inc
dec
xlat
cmp
daa
inc
mov
daa
xchg
int
cmpsb
arpl
ja
rcr
iret
or
cli
mov
insl
cltd
dec
mov
xlat
sub
jb
add
mov
jg
sub
addb
lods
xor
pusha
push
in
cmpsl
repnz
xor
mov
push
xor
rcrl
dec
sbb
dec
btr
xchg
lret
mov
nop
ljmp
ret
push
and
je
pop
pop
pushf
fimull
and
orl
sub
pop
das
lea
mov
xchg
ret
enter
xchg
das
daa
pop
cmp
in
jg
sbb
ja
lahf
inc
test
pop
pop
repnz
les
aam
mov
roll
insb
jno
sbb
xor
pop
xchg
mov
xchg
imul
sahf
push
lock
in
lods
outsb
push
test
dec
cmp
lea
mov
xor
adc
mov
jge
lods
sub
ret
push
aaa
xlat
sbb
mov
mov
icebp
mov
daa
mov
cmp
aam
out
insb
and
cmc
aas
mov
xor
pop
adc
mov
pop
sbb
insl
push
jae
push
pop
pusha
mov
in
mov
arpl
clc
sub
or
push
mov
dec
or
gs
sbb
cmp
inc
cmc
test
arpl
push
jmp
or
xchg
cmp
sub
roll
pushf
mov
movsl
jle
ss
stc
ljmp
pop
adc
dec
mov
ret
popa
sbb
xchg
sti
stos
lock
push
fdivl
and
call
pop
rclb
stos
mov
mov
rcr
jo
ja
out
js
cmp
add
pop
mov
jmp
adc
push
sbb
lcall
fnstenv
pop
sbb
xchg
je
cmp
mov
lods
fadds
add
ss
adc
mul
out
or
dec
aas
dec
jnp
mov
fsubrs
les
adc
pop
test
andb
pop
dec
xor
mov
aas
mov
fstps
push
pop
cld
stc
inc
insb
lret
enter
scas
imul
inc
mov
in
lds
sub
pop
inc
clc
jns
mov
cltd
sarl
lret
jle
add
cmpsb
ds
cmp
push
jmp
out
xchg
mov
cwtl
xor
outsb
push
ja
out
iret
push
movsb
add
sub
iret
dec
xchg
cmp
lea
jmp
icebp
lret
sti
xor
leave
dec
lcall
imul
jcxz
sbb
popa
push
ret
jl
jns
fstl
jecxz
andb
pop
call
sti
cmc
jnp
cmp
das
jno
lods
negl
mov
inc
xor
sub
insl
int3
pusha
mov
loope
testl
out
pusha
mov
loope
testl
out
pusha
mov
loope
testl
test
xchg
into
and
jl
sbbl
pop
xor
dec
sarl
test
push
dec
decb
in
cmp
fsubrs
data16
cmp
adc
into
cli
movsb
lods
jb
outsl
xchg
data16
mov
add
xor
push
dec
inc
lret
add
xor
and
cmp
pop
cmp
push
in
in
mov
repnz
sbb
orb
rcr
loopne
pushf
cmp
add
push
hlt
rorb
jo
inc
push
jns
decb
insl
fcompl
mov
mov
mov
fwait
arpl
imul
lea
ret
mov
add
add
add
add
add
jl
jbe
popf
ret
mov
lret
pop
push
mov
test
test
fs
loop
pop
mov
outsl
cltd
mov
divb
add
mov
dec
and
loopne
pop
int3
pop
pop
mov
icebp
xchg
cltd
imul
sti
insb
xchg
inc
je
mov
inc
pop
xlat
adc
jne
push
push
xor
jp,pt
std
les
mov
mov
leave
cmc
push
fadds
pop
lcall
movsl
xchg
testl
mov
xchg
add
cmp
xor
mov
or
inc
idivb
std
in
inc
lods
in
stos
fsubs
test
cmp
dec
xchg
inc
lods
arpl
rcll
stos
mov
mov
xchg
pop
xor
push
loopne
mov
fisttps
push
cmp
test
or
mov
jg
andl
fidivs
lret
mov
jae
fwait
push
xchg
mov
jmp
cltd
jmp
das
mov
fldcw
push
push
mov
add
subl
dec
pushf
xchg
scas
cmp
push
fbstp
jb
sbb
mov
out
ret
dec
dec
lds
mov
xchg
lds
mov
fidivrl
in
sub
xchg
rcrb
insl
inc
dec
popf
push
mov
sub
lahf
jnp
push
mov
jne
xchg
sub
inc
and
cwtl
sub
sbb
sbbb
das
mov
jbe
mov
jp
daa
testb
adc
or
fucomp
cli
repz
sub
iret
sahf
out
fs
and
push
push
mov
clc
jne
add
inc
ljmp
mov
and
or
jge
std
or
pop
movsb
insl
sub
sub
arpl
dec
jb
cs
repz
sbb
xchg
std
fs
add
lcall
sub
xchg
out
mov
sub
or
mov
xchg
mov
ret
push
pop
add
xchg
or
inc
add
add
add
add
mov
hlt
stc
out
dec
mov
mov
adc
imul
push
cli
cli
lock
je
jle
stos
and
repz
cmpsl
ret
popa
fadd
push
aas
sub
dec
add
repz
sbb
aas
cmp
bnd
mov
out
add
movsb
inc
lcall
pusha
call
mov
push
fwait
in
mov
sbb
mov
aaa
test
movups
adc
lret
ret
push
push
jo
fidivl
int3
aad
ret
lret
fldcw
std
aam
sarb
push
mov
inc
sbb
pextrw
and
cmpsl
in
push
mov
sub
push
jp
cmp
mov
mov
std
dec
ss
mov
inc
xor
mov
xchg
mov
imul
outsb
adc
xor
filds
lea
inc
sub
xchg
test
sti
dec
les
add
fildl
pop
and
inc
nop
pop
lds
xor
mov
pop
lret
cmp
jle
ficoms
jl
lret
push
or
and
or
hlt
sbb
mov
mov
mov
cld
out
imul
shl
sti
add
push
mov
in
push
jbe
push
into
add
dec
and
in
and
inc
nop
pop
lds
leave
andb
add
aaa
in
xor
icebp
push
mov
and
jbe
xor
jns
add
cmpsl
dec
mov
lret
sub
cmc
jns
ja
repz
test
xlat
enter
xchg
push
cli
sub
jecxz
fdivrs
cmp
stos
iret
rcrb
or
daa
adc
test
gs
ja
pop
mov
adcl
test
pop
push
pop
dec
dec
arpl
inc
pop
stos
and
mov
ds
shll
arpl
adc
imul
mov
rcll
add
and
mov
shrl
mov
pop
or
jns
sbb
mov
ret
fiadds
pop
jo
inc
stos
iret
aad
popf
icebp
vpackssdw
push
out
mov
fstps
mov
jge
out
pop
mov
daa
xor
and
inc
inc
jmp
stos
dec
data16
sub
mov
dec
into
popa
lods
ja
lods
leave
lahf
mov
out
cmpsb
cmp
mov
xor
or
int
mov
xchg
jo
clc
cmpsb
xchg
cld
dec
repnz
push
lock
adc
and
loope
push
clc
pop
aas
xchg
leave
sbbb
jae
es
je
or
aaa
xor
dec
repz
mov
add
stos
pop
scas
and
test
jbe
cmpsb
outsl
add
insl
inc
shlb
mov
inc
or
inc
cmp
mov
repz
mov
ds
push
cmpsl
inc
mov
jnp
cltd
add
shrl
ja
scas
ds
daa
xchg
cmp
mov
inc
xchg
mov
popf
pop
sbb
jo
or
daa
outsb
lds
int3
push
sbbl
shll
sub
xchg
repnz
aad
push
xchg
out
lcall
dec
add
mov
mov
iret
loopne
cmp
punpckhwd
pusha
push
adc
jo
cmpsl
jmp
mov
jg
ret
sub
or
sub
mov
dec
xor
pusha
lock
hlt
imul
mov
test
mov
int3
cli
or
cltd
mov
sbb
jbe
scas
adc
icebp
push
push
mov
jbe
jns
or
std
loope,pn
nop
cmp
mov
adc
push
in
sub
test
or
popa
jb
pop
or
pop
adc
sub
int3
pop
pop
push
mov
xchg
mov
pop
sub
pop
imul
inc
cmp
fldpi
push
adc
jo
daa
mov
int
clc
jmp
sbb
adc
lret
test
or
cmpsl
mov
pop
daa
mov
rcrb
popa
icebp
shrl
lahf
inc
dec
stos
push
or
hlt
psubsb
pop
jg
arpl
aad
popa
das
mov
dec
sub
push
inc
imul
fldt
testb
imul
sub
int
movsl
mov
out
mov
jnp
out
dec
pop
sub
xlat
sbb
xchg
outsb
pop
cmp
jge
jle
sub
fistps
mov
sarl
xlat
aaa
lret
movb
lods
iret
adc
mov
sbb
sub
pop
push
cmp
pop
push
xor
ss
int
pusha
jnp
mov
leave
cmp
jnp
jo
dec
mov
pop
rcrl
xor
inc
insl
adc
or
sub
ror
cs
mov
mov
adc
mov
inc
sbb
rorl
std
xor
fcoms
pop
movb
xchg
push
ret
stc
stos
outsl
mov
mov
stc
sbb
push
std
mov
mov
lock
outsl
push
rcl
dec
dec
sub
xchg
aam
inc
fdivs
dec
leave
imul
fstpt
xorb
repz
sbb
aaa
add
jne
cs
mov
pop
dec
xchg
push
and
decl
stc
mov
cli
cld
inc
daa
imul
rorl
pusha
sub
rolb
mov
outsb
mov
pop
mov
dec
sahf
sarl
mov
lret
cmp
jbe
pop
pop
sub
xor
jl
js
sbb
dec
adcb
sarb
shlb
enter
lods
leave
or
add
inc
add
xchg
imul
ret
cmc
loope
test
xor
mov
sub
imul
mov
jnp
sbb
enter
or
sbb
leave
dec
adc
in
fnsave
sub
lea
sbb
dec
je
scas
mov
fwait
mov
add
outsl
stos
std
dec
mov
add
mov
dec
in
cs
xchg
push
in
jg
xor
xchg
xor
insl
mov
in
jg
cmp
xor
jg
lock
inc
fnstenv
cmp
adc
mov
lahf
mov
loope
ret
scas
mov
cmpl
cmpsl
sbb
fadds
lcall
std
mov
pop
cmp
mov
mov
xor
lods
fcmovnbe
jno
xchg
xor
cmc
test
xor
mov
mov
test
into
cli
and
and
loopne
lret
push
pop
cmp
jns
xchg
mov
xor
mov
mov
xor
inc
jle
fwait
sbb
add
in
push
js
out
nop
jge
fisubs
mov
xchg
std
dec
jbe
seta
mov
icebp
dec
test
in
xor
imul
popl
jno
pushf
mov
lods
jecxz
fsubl
mov
and
and
icebp
mov
and
jns
outsb
lds
mov
pop
aas
add
sbb
ja
repnz
cltd
mov
scas
insl
mov
lea
inc
aas
and
xchg
movsl
ja
mov
mov
dec
pushf
outsl
push
sbb
or
xchg
xchg
sbb
adc
dec
clc
mov
cli
push
cli
cwtl
clc
in
push
leave
in
add
bnd
sti
lret
ja
shlb
jecxz
mov
jo
xor
mov
movsl
jmp
shlb
jb
lcall
add
out
push
ja
ret
aad
dec
jmp
and
cmpl
and
mov
pop
xchg
fwait
dec
push
dec
xor
inc
xchg
inc
jo
push
aam
adc
mov
or
ret
and
inc
mov
in
cmp
sbb
cld
push
xor
or
xor
loop
aad
push
lahf
stos
rorb
out
test
and
shl
je
sub
push
iret
cmp
and
push
mov
fnstcw
les
lds
ja
cmp
sbb
in
lret
fsubs
xchg
fidivl
lods
xor
lret
jp
and
das
ja
push
mov
sti
int
adc
jns
fld1
cmpsl
dec
cmp
or
pop
push
inc
je
scas
insl
mov
mov
jge
outsl
mov
sub
lea
js
insl
mov
cmp
les
inc
push
sbb
adc
popa
popf
cmc
insl
xchg
push
lcall
nop
cmp
cltd
cs
int
xchg
imulb
mov
sbb
jnp
cwtd
clc
sbb
or
movsl
in
ret
fildl
adc
cwtl
cmpsb
mov
pop
or
lahf
mov
test
data16
out
iret
scas
push
loopne
push
jmp
xor
sti
addr16
sbb
jle
je
imul
stos
ljmp
cmp
scas
and
sbb
jge
orb
add
adc
mov
push
push
std
pop
or
add
and
xor
and
push
out
sahf
pop
mov
mov
mov
add
adc
pop
movsl
push
jecxz
or
lahf
insl
test
pop
cltd
xchg
push
xchg
std
fs
dec
add
mov
dec
jecxz
jl
and
pushf
pop
add
sbb
or
out
cmc
andb
scas
test
push
stc
mov
mov
push
pop
sbb
pop
fistpll
inc
sbb
popf
push
sti
sbb
inc
dec
dec
adc
js
push
jp
adc
and
sbb
mov
lret
das
sbb
cli
call
std
aad
and
sbb
int3
pushf
jbe
mov
pusha
sbb
ds
mov
sbb
xor
inc
mov
dec
lea
popf
lods
sub
or
daa
dec
and
imulb
mov
test
mov
fnstcw
test
add
imulb
and
cmp
imull
dec
or
daa
dec
pop
add
adc
stos
rcll
sub
ds
cmp
jg
inc
mov
sub
fnsave
aad
repnz
fcoml
les
lea
and
subb
add
rolb
sbb
jp
fstpt
movlhps
dec
and
lret
add
inc
das
inc
xor
test
mov
shrl
xor
pusha
cmp
ret
pop
out
daa
xchg
repz
pop
in
add
pop
repnz
leave
addb
das
xor
pop
cmp
xor
mov
mov
les
pop
and
jnp
daa
cld
ret
sub
cmp
stos
sub
mov
setle
ficoml
outsb
jno
xchg
fldenv
mov
xorb
dec
dec
nop
mov
nop
dec
inc
cmp
jno
ds
mov
aaa
leave
xchg
rolb
cmp
add
mov
out
push
shll
rolb
pop
cmc
mov
jecxz
js
add
cmpsb
test
fistps
mov
pop
mov
xchg
adc
dec
pop
pop
fistpll
pop
pop
inc
je
das
in
es
lahf
insl
jg
iret
push
adc
xchg
pop
insl
jmp
mov
jg
test
daa
or
pop
dec
imul
push
inc
test
in
inc
mov
lock
mov
shlb
ret
fxch
and
mov
dec
dec
inc
ljmp
lods
leave
jle
xchg
inc
iret
xor
mov
aaa
loop
push
and
and
mov
aam
or
push
mov
int
jecxz
lcall
aad
add
lea
jle
inc
shll
adc
cmpsl
xor
fwait
orl
jge
test
cmp
xor
sub
adc
decl
stc
sbb
es
int
test
cltd
jp
jns
ret
xchg
pop
pusha
add
xor
rcrb
pop
sbb
cmp
movsl
inc
pop
and
mov
repz
in
mov
pop
mov
pop
xor
in
mov
aaa
xchg
fcompl
fcom
mov
loop
nop
add
jb
sarb
pop
adc
in
adc
mov
xor
sbb
add
inc
push
cld
add
in
adc
ss
pusha
enter
movsl
dec
jmp
scas
dec
sub
push
int3
mov
jb
fcoml
adc
pop
or
jbe
test
push
lock
mov
or
aam
xchg
cmc
xchg
and
loop
xor
lods
lahf
and
ficoms
loope
mov
je
xchg
int3
enter
push
mov
movsl
sbb
xor
mov
mov
xor
push
adc
mov
mov
ret
jno
fsubr
mov
fisubl
out
mov
push
pop
cmp
push
sbb
jno
leave
notl
rclb
xchg
or
cli
mov
push
rcll
in
cmp
icebp
jmp
aaa
hlt
rolb
jne
je
mov
inc
loopne
testb
out
lods
sarb
adc
mov
jne
pushf
sub
push
push
cs
cltd
jne
mov
leave
into
push
pusha
dec
pop
xchg
jb
jnp
insl
rcr
fwait
xor
cmc
push
mov
in
aaa
cld
mov
jmp
testl
iret
pop
inc
imul
mov
pop
imul
insl
dec
testl
cmc
mov
aam
ret
rorb
push
ret
aad
push
lds
or
or
leave
lahf
xchg
lds
pinsrw
xor
out
subb
call
test
js
scas
shrl
mov
pop
or
sti
dec
cmpsb
pop
repz
xor
add
push
and
fidivl
push
daa
in
in
mov
xchg
pop
fisubrl
insb
cmp
jbe
mov
dec
mov
test
add
cmc
push
into
jmp
fwait
xchg
lret
outsb
jno
cmp
or
andb
mov
push
sbb
cmpsl
sahf
int3
popa
xchg
addr16
mov
in
jle
pop
inc
mov
in
fiaddl
aaa
icebp
mov
cmpsb
mov
jmp
lahf
fnstsw
flds
mov
stos
mov
das
sub
jae
lds
sub
cltd
insb
pop
dec
push
cmp
dec
fwait
int3
jle
pop
cli
outsl
inc
xor
push
xchg
push
bound
and
and
jbe
nop
arpl
xchg
mov
mov
push
sub
mov
movsl
lods
inc
xor
xor
stos
gs
jecxz
fs
ret
adc
inc
scas
outsb
sbb
pusha
cltd
mov
test
cmp
aas
xor
arpl
mov
dec
push
jno
xchg
mov
adc
les
mov
mov
je
popl
sub
mov
jns
loope
je
sub
lahf
in
mov
sub
inc
shrb
sub
frstor
xchg
in
push
movsb
pop
xchg
test
cwtl
shlb
mov
adc
mov
mov
loopne
mov
int
int
jp
stos
insl
stc
insl
add
jo
mov
imul
out
xchg
mov
jmp
dec
pop
es
jbe
mov
sub
mov
test
xor
dec
test
imul
dec
js
jg
aam
mov
inc
movsl
add
sbb
cli
icebp
sahf
sarb
sti
push
or
or
cmp
dec
loop
jge
push
and
push
imul
pusha
stos
xchg
cmp
sbb
in
sbb
cwtl
dec
hlt
js
movsl
xor
mov
or
inc
shlb
sub
pop
add
adc
stc
pop
mov
sub
out
xor
xor
aad
jae
push
out
mov
movsb
push
in
push
sbb
or
mov
ljmp
adc
out
scas
push
xor
mov
mov
lock
hlt
scas
cmp
and
sbb
mov
stos
add
dec
ja
pop
sub
cmp
sub
gs
cmp
repz
mov
mov
and
fstpl
mov
enter
mov
sbb
push
sar
adc
jnp
and
sbb
mov
inc
fdivrl
push
jle
adc
mov
xchg
add
pop
or
dec
jbe
call
push
fs
sti
cld
loop
lea
cmp
pop
shll
mov
std
xlat
xchg
adc
je
fcomps
cmp
cmp
lahf
pop
in
icebp
push
std
daa
in
xorps
imul
insl
xlat
ficompl
sahf
cltd
popa
jl
cmpsb
stos
jo
mov
mov
lods
into
stos
add
mov
iret
notb
sbb
repnz
iret
repnz
das
pop
or
test
loop
inc
ror
hlt
xchg
xor
aad
sbb
mov
xchg
aaa
mov
negl
lret
pop
pop
pusha
mov
lock
push
sub
fcmovbe
adc
pop
mov
xor
clc
inc
stos
loopne
jge
pop
adc
sub
mov
sbb
bound
mov
inc
xchg
mov
stos
or
jge
sbb
xchg
lods
xor
cltd
xor
leave
popf
lock
sbb
sbb
call
mov
js
jg
push
iret
push
aaa
jmp
or
adcl
std
mov
das
insb
in
push
bnd
fsub
fistl
cmc
shll
push
scas
fcomps
out
repnz
sti
jne
ja
sbb
add
add
push
cmp
cwtl
scas
add
xor
xor
dec
xlat
stos
push
popa
cmp
pop
fsts
push
gs
sub
cwtl
stos
mov
sbb
arpl
dec
mov
stos
fstpt
mov
negl
mov
lods
dec
push
mov
or
jne
sbb
dec
xchg
mov
test
and
sub
rclb
push
out
aam
or
add
js
ja
lods
sbb
loope
stos
or
mov
xor
sub
jecxz
in
jle
loopne
incw
xchg
adc
xor
arpl
lret
xorl
sbb
test
and
xchg
dec
xchg
iret
cs
repz
jns
loopne
fsubrl
pop
mov
or
push
std
addr16
insb
sbb
dec
xor
adcb
fbld
into
mov
cs
add
mull
hlt
pop
lret
addr16
push
xor
repnz
pop
push
sbb
in
cmpsb
jno
test
jae
data16
andb
nop
mov
iret
add
pop
sub
dec
jp
mov
imull
adc
out
pusha
xor
dec
in
jb
ds
int
sub
fxch
mov
orb
add
rorb
jmp
jo
push
adc
sbb
shlb
pop
dec
and
mov
test
lods
xchg
lock
mul
test
push
lret
arpl
aaa
stc
or
inc
scas
sti
sbb
out
cs
inc
addl
push
mov
out
outsb
pop
outsl
push
xchg
inc
xchg
fidivrs
fildl
jl
cmpsl
and
pop
popf
xchg
cmpsb
inc
mov
sbb
mov
inc
adc
inc
cld
leave
aas
daa
mov
cmc
or
out
loop
push
sub
xor
daa
lods
xor
scas
daa
movsl
cvttps2pi
adc
das
sbb
and
popf
cmc
adc
mov
mov
stos
ret
add
in
pop
sub
jb
mov
or
popa
ret
ficoms
xchg
test
xorl
cmp
sub
test
sbb
lods
aad
push
ljmp
dec
icebp
scas
fs
lock
imul
jle
lds
pushf
mov
and
xchg
shr
push
xorl
inc
push
decb
push
pop
xor
sub
mov
mov
dec
daa
cmp
mov
test
mov
push
scas
pop
loopne
icebp
cld
xchg
lcall
loope
xchg
inc
sub
inc
sbb
jb
out
or
xor
add
xchg
add
sub
aaa
or
pop
fbld
les
fbstp
cmp
push
rol
inc
ja
orb
xlat
mov
pop
sbb
or
les
pop
je
dec
outsb
pop
stos
mov
adc
stc
test
sarl
mov
lds
mov
daa
cmp
pop
or
out
repnz
and
das
mov
xchg
xor
jp
into
mov
lods
lahf
adc
ret
push
call
or
clc
add
add
add
add
dec
adc
push
xor
movsb
sub
in
push
xor
lock
inc
loopne
mov
jno
out
mov
sbb
test
dec
xchg
xchg
fcmovbe
jle
and
mov
lock
shr
popf
in
sbb
mov
dec
scas
test
or
inc
xchg
popa
clc
lods
loopne
clc
xor
mov
repz
or
push
mull
xor
or
mov
pop
aad
insl
adc
call
fnstenv
sbb
lret
jne
iret
js
int
pop
jbe
xor
lods
data16
dec
jo
stos
call
jmp
loope
fildl
js
cli
lret
fidivrl
xor
mov
xor
or
pop
mov
or
mov
fistpll
cmc
leave
ljmp
ja
push
fldcw
rcl
movsb
cmp
loopne
clc
shr
popf
xchg
repz
outsb
jmp
ficoml
insb
jg
cwtl
dec
lahf
jmp
pop
cld
ja
sub
js
lods
popa
mov
fistpl
data16
das
ret
neg
push
jge
jmp
mov
call
mov
inc
daa
std
testl
or
mov
in
sbb
push
jno
sub
add
xchg
lret
loope
sarl
mov
leave
sub
in
fwait
add
add
add
add
add
add
stc
aad
insl
out
fsubrp
lock
ss
sub
popf
add
add
inc
pushf
pop
shlb
dec
mov
mov
and
test
jecxz
push
fimull
mov
mov
mov
add
sbb
pop
pop
jl
or
pop
dec
fmull
test
icebp
cwtl
jae
aaa
divb
in
push
dec
addr16
out
test
lret
mov
mov
xor
std
and
shlb
bound
add
cmc
or
or
data16
sar
ja
addr16
pop
test
push
imul
dec
pop
fsubrl
shll
xor
jmp
push
bound
lahf
or
sti
or
fstl
je
jne
fcoms
mov
data16
les
sub
sahf
inc
mov
add
rcl
jp
jg
imul
nop
in
dec
mov
mov
popa
add
mov
adc
adc
cmp
icebp
test
repz
adc
popf
pop
js
rcrb
pop
mov
and
pop
je
leave
mov
sub
inc
in
mov
sbb
xchg
int3
ret
loop
mov
and
and
in
cld
cld
fadds
loop
lods
scas
pushf
out
jb
sti
outsl
loope
cs
jbe
xchg
add
pop
fwait
in
outsb
jmp
mov
pop
push
cmpsl
in
ret
arpl
xchg
fnsave
roll
inc
dec
test
lea
into
sub
xchg
scas
inc
mov
cli
and
xor
mov
xchg
inc
dec
std
pop
dec
lock
jle
dec
lret
imull
add
mov
pop
popa
adc
cltd
rcrb
rcll
lods
movsl
adc
or
cltd
jecxz
xor
cmp
xor
lds
dec
mov
push
or
sub
xor
repnz
inc
fwait
adc
sub
lret
lret
and
movsb
sbb
addr16
jg
arpl
fsubr
stos
imul
ss
jbe
in
movsl
lods
fimull
pop
iret
rcrb
sub
push
xor
pusha
push
xchg
data16
dec
mov
jg
xchg
int3
sub
mov
outsb
in
xchg
xor
push
stos
imul
jb
movsl
mov
leave
je
insl
or
fwait
mov
aam
cmp
shl
jle
aam
push
int3
sbb
jp
out
jae
imul
cmp
sub
mov
pop
popa
jbe
sub
int3
xchg
aam
adc
push
ror
das
pop
or
and
or
shrd
sbb
xorl
add
lods
cmp
dec
cli
lds
push
cmpsb
pop
call
test
and
notl
hlt
movsb
out
shll
add
inc
stos
xlat
rolb
idivl
add
dec
xor
test
push
cli
pop
cli
les
sub
inc
testl
inc
add
test
cld
fmuls
mov
nop
or
pop
fistl
and
jecxz
enter
jl
push
mov
addr16
scas
fstps
loop
mov
ljmp
cmpsb
mov
mov
pop
adc
in
lret
lock
rcrl
jns
pop
testl
adc
fwait
icebp
shrb
add
sar
movsl
cmp
loop
fs
inc
sbb
cmpsb
push
sub
je
or
jge
push
dec
push
jns
sbb
loop
adc
in
push
mov
int3
xchg
xchg
xor
pop
jbe
aad
enter
cs
xlat
push
fisttpll
in
ss
arpl
jmp
pop
mov
pop
adc
movsb
jg
and
orl
insb
dec
or
jmp
movsb
pushf
jbe
add
push
add
int
cld
insl
ljmp
das
scas
cmp
stos
and
pusha
aas
iret
sbb
inc
dec
rcl
lods
jo
sbb
jmp
inc
pop
pop
sbb
in
std
lds
mov
lea
jae
mov
fnstsw
and
xor
or
sbb
in
in
or
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
push
xchg
scas
xor
add
add
outsb
add
add
add
add
add
fstl
pop
adc
pop
popa
push
out
xor
jno
js
push
inc
sti
add
mov
ret
push
shll
lahf
aad
and
or
es
xchg
adc
cmp
dec
push
dec
scas
popf
dec
aas
xchg
mov
movsl
lods
push
icebp
inc
ds
out
out
mov
lock
mov
sbbb
and
sub
jno
mov
push
xor
pop
mov
xchg
and
push
xchg
push
xchg
aam
data16
pop
lock
les
push
mov
sbb
addr16
pusha
xchg
pop
into
xchg
sbbl
xchg
jbe
jo
data16
add
sub
sub
push
jl
dec
add
pop
or
push
push
ret
stc
pop
negl
or
insb
mov
rclb
ljmp
pop
fwait
sbb
jns
pushl
xchg
aaa
mov
lret
movsb
jo
ljmp
mov
xor
inc
fmull
je
cli
stos
outsb
lock
into
int
mov
js
ret
push
hlt
icebp
cmc
push
cld
std
add
scas
or
mov
lds
lds
call
xchg
mov
cmp
jg
stc
push
ss
lret
mov
ja
pop
ljmp
push
insb
movsb
and
mov
iret
shrl
aad
aam
mov
out
gs
mov
jl
mov
popf
jle
dec
xchg
and
insb
or
imul
sbb
sub
in
mov
inc
stos
fldcw
arpl
jns
pop
mov
or
push
mov
enter
add
int3
cmpsl
inc
ret
sub
sar
pop
cs
insb
icebp
outsb
adc
adc
test
or
ficomps
mov
or
daa
mov
or
ret
add
in
and
leave
jmp
pop
das
cmp
xchg
or
adc
dec
xor
in
pop
xor
cmp
cwtl
andl
scas
icebp
movsl
and
cmp
push
push
pop
adc
mov
ljmp
pushf
out
adc
xchg
sbb
push
mov
or
jle
movsl
mov
adc
cmp
inc
scas
xchg
fadds
push
int3
inc
adc
push
pop
test
push
test
xchg
ss
xor
ljmp
and
or
into
es
pop
jnp
and
xor
decl
jo
fs
fstps
jne
sbb
dec
xchg
repz
lods
cld
push
push
clc
inc
repnz
xlat
cwtl
mulb
lcall
mov
movsl
dec
mov
ret
and
add
push
or
xchg
mov
int
jno
shrb
arpl
clc
shrl
nop
addr16
cmp
xorl
and
push
push
add
or
pop
loope
mov
ret
mov
insl
sbb
xchg
push
sbb
jb
jae
xchg
jmp
push
mov
pop
adc
inc
jbe
dec
daa
dec
int3
sub
out
gs
fsubrl
pop
lret
inc
push
stc
inc
imul
cmp
mov
inc
pop
inc
pop
aas
mov
mov
sahf
xor
aam
cs
add
fldl
in
xchg
xor
imul
sbb
and
push
lods
pop
lahf
lcall
adcl
dec
jmp
in
sbb
leave
cmp
addr16
dec
fcoms
dec
test
inc
stc
insb
jne
jb
pop
or
movsl
xor
sbb
test
jle
pop
adc
jl
hlt
fimull
push
shll
call
dec
and
cli
cli
push
out
enter
adc
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
nop
lea
jle
sub
cmc
mov
scas
xor
outsb
std
add
ja
insl
sbb
xchg
cwtl
cwtl
lcall
ja
test
jg
ret
pop
add
add
incl
add
add
xor
add
das
stos
icebp
movsl
divb
xor
push
call
andl
xlat
sarb
mov
fcoms
cltd
cwtl
jno
loopne
xchg
inc
sub
lea
and
ret
ja
dec
dec
aad
sub
mov
mov
sbb
jl
mov
movsb
rcl
out
inc
int
or
cld
jmp
pop
xchg
sahf
leave
inc
shlb
mov
sbb
xor
shl
addr16
inc
loop
lods
xchg
dec
or
push
lahf
push
fidivl
push
sbb
cli
daa
inc
jne
xchg
adc
arpl
aad
inc
xchg
pop
jbe
jbe
dec
push
jo
dec
mov
add
lret
mov
andl
ljmp
repnz
bound
pop
int3
and
cmp
mov
jbe
movsl
arpl
sub
hlt
bnd
pop
into
hlt
or
cmpsb
sub
lds
rorb
stos
inc
ror
int
xchg
movsl
dec
jnp
ret
call
mov
loope
cli
sub
cli
push
add
jns
adc
cmp
sbb
xorb
test
test
ja
sahf
ja
xor
jmp
rclb
add
add
incl
add
add
mov
das
nop
mov
mov
and
imul
pushf
dec
popa
xor
daa
cwtl
icebp
jp
push
cmp
dec
inc
sbb
dec
outsl
mov
aad
and
sbb
in
scas
or
or
test
repnz
lret
mov
jo
sub
push
sbbl
pop
lods
mov
mov
push
mov
and
repz
mov
sbb
mov
lahf
repz
addr16
cmp
ror
testl
inc
daa
push
icebp
pop
sahf
push
es
push
xor
aad
icebp
push
clc
jecxz
test
jmp
bound
or
incl
add
add
movsl
sub
mov
outsb
dec
lahf
jnp
jecxz
xor
mov
call
xor
push
push
xchg
arpl
mov
es
jo
inc
pop
outsl
inc
ret
push
lahf
fwait
jnp
and
lock
mov
lcall
jmp
xchg
xchg
orl
scas
int3
mov
xor
xchg
xchg
jl
adc
push
sahf
jo
ret
popa
push
fs
and
jns
mov
insl
cwtl
dec
push
out
push
shlb
xor
mov
mov
cltd
call
dec
jge
and
rcrw
ret
add
add
add
add
add
add
mov
out
data16
xorb
addb
push
adc
dec
jmp
negl
hlt
jno
sbb
in
dec
fnstsw
cmpsb
rcrl
sbb
rclb
cmpb
adc
xchg
jne
enter
or
insb
pop
dec
ss
inc
and
js
loop
inc
lods
in
or
mov
add
ja
fwait
jo
std
jne
pop
cmp
push
leave
push
and
cmpsl
push
adc
cmp
ss
js
data16
enter
mov
iret
movsl
add
in
aad
mov
ds
or
xor
inc
jle
push
dec
adc
pop
mov
pop
arpl
notb
test
fildl
fs
and
ljmp
das
jle
adc
insl
arpl
xchg
fildll
into
add
add
sti
add
stos
mov
cmpsb
or
mov
ret
xchg
cmp
mov
xlat
aas
movsb
imul
push
adc
or
aad
jnp
pop
daa
cmp
add
cs
sbbb
push
sarb
rclb
rorl
fwait
dec
sub
cmp
loopne
icebp
xchg
dec
jb
cwtl
sub
jno
jg
mov
add
xor
rorb
cmp
push
jge
arpl
fidivrs
jb
nop
shrb
jecxz
pop
cmp
mov
lods
stc
ljmp
ljmp
jecxz
es
dec
xchg
and
test
sbb
mov
hlt
or
insb
ret
imul
cmp
jg
addl
mov
movsb
sbb
cmpsl
shll
ljmp
add
mov
std
pop
repnz
fstps
insl
push
xor
and
fs
mov
arpl
jle
jle,pn
cmpsb
cmp
add
movsb
test
dec
dec
lcall
ss
cmp
xor
ljmp
mov
push
and
mov
out
push
shrb
addr16
gs
cmp
cmpb
loop
push
mov
mov
inc
push
into
shl
jbe
pop
sti
fadd
xor
imul
test
lea
xor
and
cmp
testl
sarl
out
imul
or
xor
cli
adc
pop
adc
push
push
shll
or
subl
ret
mov
aaa
or
insb
jnp
and
mov
push
loope
out
xchg
inc
rclb
loopne
fimuls
ret
pop
sub
stc
cmpb
inc
or
jne
divl
xchg
mov
fwait
cmp
xchg
and
add
and
cli
pop
repz
jb
pop
sbb
sahf
xchg
cmp
jne
les
xchg
mov
jge
and
push
jne
pop
push
dec
out
test
leave
xor
mov
mov
sti
adc
outsb
jo
sar
insb
cmp
outsl
lock
call
xchg
pop
xchg
hlt
test
mov
test
xchg
push
popa
leave
inc
movsl
mov
push
ret
enter
movsb
mov
stos
pop
icebp
sahf
add
add
js
aad
or
fisubrs
sub
xorb
inc
add
sbb
mov
testb
nop
and
pusha
out
in
mov
fndisi(8087
ljmp
push
ret
xor
call
xchg
add
daa
in
mov
gs
jle,pt
lret
sbb
xlat
jns
fwait
and
test
add
xchg
or
adc
add
add
add
hlt
sar
xchg
sub
nop
mov
fisttps
adc
lods
xor
xor
jnp
aam
xor
ret
stc
adc
sub
push
and
mov
inc
add
mov
fildll
mov
enter
dec
popa
cmpsl
and
leave
push
and
jg,pt
and
leave
cs
add
sbb
jle
cmp
inc
sbb
xor
push
sbb
pop
lahf
and
pop
xchg
aam
stos
pushf
aad
cmpsl
add
jge
out
lea
add
movsl
movsl
fmull
popf
sbbl
cmp
mov
inc
mov
mov
pop
sub
sub
ljmp
adc
sub
dec
mov
jbe
sub
pop
pop
jb
mov
jno
adc
aam
mov
aaa
stos
push
lock
movsb
mov
lock
inc
pop
inc
in
jecxz
mov
xchg
bound
insl
and
push
xchg
imul
mov
call
shl
cmp
inc
jb
sbb
or
dec
mov
ret
xor
push
sub
je
lret
ss
mov
insb
pop
lods
and
xchg
cwtl
repnz
adc
cmp
push
aad
jge
shl
dec
inc
and
mov
sbb
in
shl
add
pop
enter
xchg
jecxz
mov
clc
std
and
xchg
lea
pop
and
mov
test
mov
pop
pop
sub
mov
add
xor
add
xchg
or
mov
add
add
add
xchg
pop
add
add
or
sub
or
inc
cmpsl
mov
or
cmpsl
jne
adc
xor
xor
or
lock
cmpl
pop
bound
bound
wbinvd
ss
ror
push
pop
into
mov
cltd
dec
movsb
dec
mov
stos
sbb
or
pop
pushf
testb
lds
daa
mov
fwait
inc
stos
adc
sub
leave
outsb
fbld
inc
out
pushf
xchg
mov
dec
enter
push
pop
int
into
lds
outsl
sub
mov
cld
add
out
mov
bound
sub
test
out
pop
in
hlt
adc
inc
nop
cltd
jge
adc
jp
jecxz
lret
aad
inc
jmp
arpl
push
stc
aad
sbb
ficoms
out
xchg
mov
cmp
js
jno
into
fmul
lds
cmp
testb
mov
pop
gs
inc
inc
test
enter
mov
rcrb
pop
popf
push
mov
dec
mov
push
lahf
add
in
add
lahf
mov
arpl
arpl
cmpsb
adc
jns
popf
in
sbb
adc
sub
and
jbe
nop
jo
mov
or
sbb
or
movsl
xchg
js
sbb
pop
scas
shll
mov
push
ds
int
stos
jnp
cmpsb
stc
and
lds
call
or
jl
sub
jg
in
xchg
mov
shrb
out
dec
jge
popf
inc
inc
jmp
jg
mov
xchg
sbbl
in
insl
adc
lret
loopne
in
push
int
lea
nop
idivl
sub
mov
sbb
vpcomuq
int
arpl
jb
pop
cwtl
add
stos
mov
iret
fidivrs
add
lret
adc
xchg
mov
dec
dec
cmp
and
cmp
loopne
sub
cmp
outsb
mov
notl
daa
push
or
in
add
add
shrb
push
ljmp
and
cwtl
sub
xlat
mov
jns
lret
sahf
or
fistpl
out
mov
addb
mov
repz
ret
sar
lret
ss
dec
dec
mov
push
rorb
cmp
loope
imul
pop
or
mulb
mov
adc
xor
dec
bound
fs
cmp
nop
movl
cli
sbb
xchg
out
mov
push
add
add
xchg
mov
lret
std
jnp
lods
add
mov
repz
cmp
cmp
bound
push
cmp
inc
lea
sub
orl
lcall
test
cmp
test
jo
lods
fmull
pop
lret
lret
and
std
test
rorl
ss
jnp
mov
outsb
loop
sbb
or
push
add
add
add
add
jb
adc
add
mov
addl
cmp
out
lahf
or
sub
xchg
mov
adc
xor
cli
rclb
push
xor
push
or
fdivs
mov
sub
mov
aad
inc
popl
push
adc
or
stos
out
and
sarl
push
mov
inc
cwtl
push
stos
rcr
jo
out
repnz
push
cmp
mov
sub
sub
imul
mov
xor
fstl
inc
frstor
lock
test
nop
cmp
xor
repz
outsb
xchg
mov
clc
pop
lcall
jp
mov
mov
xor
fadd
sbb
cs
fldenv
and
cmc
adc
scas
mov
ljmp
hlt
hlt
iret
and
jmp
test
lods
push
lock
lea
ljmp
xchg
pop
out
ljmp
fdiv
push
aas
cmp
cmp
lea
lods
dec
cltd
inc
mov
sarl
jae
test
outsb
push
mov
jg
push
mov
testb
mov
push
lods
pop
outsl
mov
fnstsw
or
pop
out
sub
scas
pusha
jecxz
mov
pop
andl
sbb
and
lods
pop
xchg
gs
push
cmpsb
xor
fwait
call
pop
int3
cmp
mov
mov
aas
push
lret
mov
es
push
push
pop
cmp
scas
push
jl
imul
adc
adc
stos
jbe
ret
stos
pop
or
xchg
push
test
push
out
loopne
stos
into
xchg
cld
loopne
inc
aam
outsl
out
add
pop
sbb
daa
scas
jmp
fwait
icebp
cmp
sbb
jb
outsb
adc
in
addr16
and
daa
lods
cmp
lock
jnp
dec
jl
fs
mov
mov
sbb
and
fcomps
xchg
add
pop
dec
test
gs
js
sbb
jbe
mov
xchg
test
cmpl
in
incl
in
adc
xor
int
cli
in
stos
sbb
ja
ficomps
or
lock
insl
mov
push
cmovo
out
mov
push
lock
push
daa
cmpsb
pusha
andl
push
adc
int
and
push
rorb
mov
test
rcl
dec
xchg
xchg
jge
push
sub
add
in
dec
outsb
pop
mov
jbe
loopne
bound
add
adc
push
mov
sbb
pop
push
mov
popa
movsb
iret
cmp
dec
inc
adc
jae
and
lods
outsl
jl
out
sti
aas
push
aas
imul
pop
mov
sar
jecxz
jo
xchg
xor
iret
pushf
dec
adc
cwtl
jg
lods
call
pusha
ds
in
addl
mov
jl
mov
out
in
sub
enter
mov
iret
cltd
cmp
mov
ss
lret
lods
mov
and
push
sbb
cmpsl
std
lods
add
cltd
and
inc
jle
cmc
popf
cmp
cmp
stos
int3
je
sub
xchg
arpl
pop
shll
mov
pop
lock
cmp
call
inc
and
in
out
lahf
jle
lcall
lds
jns
push
sub
loope
and
movsb
into
xchg
loope
sub
cmp
xor
mov
ret
lods
cltd
shll
sti
gs
movsb
lock
cld
dec
jle
lret
xor
int
or
xchg
sbb
jnp
cmp
mov
mov
std
sbb
aaa
jle
inc
mov
loope
lahf
push
push
sub
rorl
and
push
inc
mov
call
subl
negb
add
out
pop
scas
sub
sub
push
xor
movsb
fimuls
jmp
jl
adc
push
xor
cld
push
je
in
push
mov
jb
mulb
and
jmp
bound
pop
adc
sbb
adc
mov
fwait
aas
or
das
jo
pop
sbb
dec
aaa
test
arpl
daa
popf
xchg
ljmp
nop
cmpsb
and
decl
push
sahf
cwtl
pop
sbb
ret
or
push
push
and
das
dec
pop
or
sbb
xchg
imul
sub
call
jle
cmpsl
loopne
lods
gs
push
loop
aaa
xchg
mov
pop
pop
mov
mov
into
pop
sbb
or
mov
enter
bound
ljmp
cs
sub
pushf
out
mov
cmp
outsl
nop
cld
lea
imul
stos
jbe
xor
loopne
mov
cs
out
pop
push
jg
pop
cmpsb
movsb
or
pop
data16
xor
push
arpl
inc
mov
adc
aad
in
leave
push
xlat
pop
test
jecxz
mov
add
dec
mov
cmpb
lret
xor
loopne
mov
pop
les
mov
cmpl
xchg
outsl
out
add
jns
xor
sti
mov
push
fs
mov
mov
xchg
addr16
sbb
dec
pop
cld
pusha
scas
mov
pop
sbb
mov
jae
xor
aas
add
stc
js
push
pop
mov
pop
mov
mov
addb
dec
mov
push
adc
mov
dec
add
jp
arpl
add
mov
mov
push
pop
data16
or
das
jb
stc
pop
jns
xor
pusha
lcall
les
lcall
mov
jns
gs
ss
inc
cli
adc
pushl
das
xchg
adc
rorl
sbb
in
jne
mov
mov
jg,pn
add
repnz
lea
arpl
aaa
fistpll
pop
or
xchg
sub
xchg
enter
cmp
ret
mov
pop
mov
and
jge
jp
cmpsb
mov
pusha
dec
push
xchg
mov
mov
mov
adc
sarb
leave
adcb
inc
and
aaa
mov
mov
pop
pop
aas
int3
inc
rcrl
lcall
jg
sbb
sbb
leave
adc
into
and
dec
in
or
cmp
add
mov
ficoml
cmp
lea
inc
adc
xchg
movsl
sbb
pop
jge
mov
movsl
imul
pop
cwtl
scas
cmp
in
mov
add
in
dec
pop
test
negl
in
and
push
mov
gs
decl
jmp
jae
lock
or
sbb
xchg
ss
rcrl
jecxz
xchg
mov
movsb
dec
cmp
in
les
mov
dec
outsb
add
loopne
push
scas
mov
dec
clc
nop
aam
adc
push
inc
inc
sti
popa
sub
lds
je
out
stos
ds
lock
ret
mov
push
adc
out
mov
test
pop
lds
pop
int3
sbbb
mov
sub
clc
dec
pop
out
cmp
fs
int
andb
cmpl
imul
pop
push
and
lods
popa
mov
cwtl
xchg
jae
xor
add
cltd
mov
pop
ret
add
mov
sti
or
push
inc
dec
aam
adcb
push
ret
xchg
xor
aam
inc
subb
adc
daa
call
test
push
dec
out
mov
insb
and
loope
pop
rcll
loope
xchg
pop
cld
pop
aam
loop
mov
xor
fildll
mov
jmp
mov
jno
push
sub
enter
pop
cmp
ror
mov
es
subb
adc
daa
pop
into
idivb
arpl
or
jb
inc
and
pop
jae
inc
xchg
sub
cmp
andl
sub
pop
shr
popa
and
shrb
movsl
adc
sbb
sbb
dec
push
inc
sub
repz
push
outsl
pop
jbe
rclb
pop
xchg
cmp
cli
cld
popa
sbb
je
or
sahf
sub
in
cli
lcall
movsl
mov
leave
aaa
and
fscale
sub
popa
in
cwtl
xorl
jl
fwait
shrl
jmp
movsb
sub
pusha
or
bound
loope
push
int
inc
les
mov
loop
cwtl
popf
and
cmp
icebp
pop
shr
les
and
and
push
dec
push
popf
out
push
push
fdivl
jmp
mov
addb
sub
lods
cli
inc
int
jnp
sbb
bound
ret
cmpsb
cli
adc
gs
sbb
and
cli
inc
je
cwtl
lret
loope
xchg
stos
clc
clc
stos
inc
rclb
jno
lods
push
neg
pop
ja
xor
and
cld
mov
notb
sub
fsubrs
hlt
in
jnp
ds
scas
mov
mov
dec
mov
xor
jb
jbe
pop
dec
enter
xchg
add
bound
or
outsl
push
popf
cmp
pop
mov
push
inc
sti
mov
cmp
xchg
imul
dec
pop
fnstsw
lcall
mov
addr16
dec
hlt
adc
jecxz
mov
mov
jmp
dec
push
hlt
out
dec
blsfill
jg
xchg
jecxz
fwait
fwait
fwait
cmp
xchg
jbe
adc
into
insl
out
lea
dec
fwait
test
daa
dec
mov
in
cli
lcall
sbbb
jns
icebp
jne
sti
lds
in
leave
jns
and
into
cmp
add
aas
stos
mov
add
inc
jno
add
add
xchg
or
incl
add
add
popf
sbb
ja
shll
imul
js
lods
or
pop
pop
popf
mov
mov
jp
lcall
decb
pop
testl
ss
iret
rcrl
ja
inc
lcall
mov
popf
sub
dec
leave
ljmp
lds
push
enter
not
ret
aam
movsb
and
movsb
outsb
jle
xor
pushf
jo
popa
ret
popa
add
add
add
add
add
add
fidivrs
rcrb
rorl
xor
notl
dec
sbb
rclb
and
mov
pop
or
inc
repnz
cwtl
loope
push
inc
push
cmpsl
and
sbb
mov
xor
pop
xchg
push
test
jg
and
cmc
bound
test
in
stos
inc
ljmp
add
add
incl
add
add
mov
repz
movsl
mov
js
idiv
mov
lcall
mov
pop
popa
add
gs
fldt
jmp
cmpsb
nop
imul
loopne
dec
jmp
jge
dec
sub
cmp
negb
out
shlb
test
enter
mov
fdivrs
and
repnz
mov
xchg
mov
jl
loope
shlb
jecxz
and
xor
inc
loop
sub
lds
add
xchg
or
decl
lret
fsubr
jge
mov
test
or
pop
mov
aas
stos
add
imul
repz
sti
jle
test
ffree
jp
push
lds
popa
mov
inc
mov
sti
pusha
jbe
pop
and
in
pushf
and
or
push
ds
dec
js
add
jge
imul
ljmp
js
mov
call
jle
mov
cwtl
inc
xor
and
loope
sbb
lods
test
or
add
cmp
arpl
clc
inc
imul
push
addr16
jle
ret
pop
jbe
cli
shlb
negw
mov
or
pop
and
pop
jmp
xor
pushf
shrl
aas
arpl
sub
cmpsl
or
outsl
push
cmp
cmp
xor
xchg
shlb
push
mull
stos
ficompl
xchg
sub
jl
das
dec
ds
sub
or
xchg
sar
rclb
test
jnp
sub
pop
lcall
dec
fcompl
lcall
repnz
push
jle
arpl
mov
xchg
mov
inc
aas
mov
scas
push
addl
sbb
cmc
mov
bound
pop
jmp
ds
mov
xchg
in
cltd
mov
pushf
sbb
pop
arpl
add
rorl
pop
mov
add
repnz
mov
cmp
imul
inc
sbb
das
ds
out
lret
xchg
outsb
xchg
sbb
ja
sbb
orb
mov
enter
insl
fs
mov
or
add
xchg
or
incl
fistpl
or
inc
pop
ljmp
fimuls
and
loope
stos
jnp
fprem1
push
ret
and
jo
xor
je
lods
cmpsl
test
xchg
lcall
or
test
dec
mov
incb
orb
in
fdivs
jle
xlat
mov
jmp
fcmovu
mov
add
out
test
jnp
shll
bound
movsb
cmp
or
int
pop
xor
call
jnp
xor
mov
or
jp
jb
and
out
mov
push
dec
jmp
in
pop
inc
outsl
and
pop
jne
push
cmp
insl
add
out
push
ss
add
or
test
dec
mov
incb
orb
fwait
jns
xor
add
mov
lahf
das
or
jg
dec
sub
mov
inc
ds
inc
outsb
js
xor
ss
push
inc
push
pop
nop
mov
push
scas
add
and
enter
addb
fldcw
mov
pop
pop
adc
dec
aaa
mov
ret
push
enter
aam
inc
dec
pop
dec
scas
sbb
test
cmc
dec
push
rcr
mov
mov
lock
addl
dec
pop
add
aam
add
add
add
incl
add
add
shll
push
inc
sbb
and
leave
sti
fxch
pop
push
fcoml
rorb
xchg
es
loop
bound
cmpsb
ljmp
adc
inc
and
pop
cltd
leave
add
lods
jo
pop
cmpsb
cld
jo
pop
fs
out
dec
or
fistl
jno
push
inc
xchg
lock
xchg
jae
adc
inc
mov
pop
mov
in
subl
ljmp
add
jbe
xor
inc
or
sti
ss
mov
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
lahf
dec
roll
mov
add
testb
