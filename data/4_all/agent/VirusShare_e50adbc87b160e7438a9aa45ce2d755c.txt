sti
call
in
xor
sub
cmp
je
push
xchg
pop
cld
in
fstl
daa
mov
adc
pop
cmp
sbb
add
lea
pop
cmp
push
movl
pushl
cmp
adc
mov
pop
ret
int3
inc
fdivrp
decl
fstpt
ret
jne
sbb
pop
and
mov
xor
cmp
cmpb
mov
sub
add
shlb
mov
push
dec
add
dec
add
push
mov
ret
push
mov
outsl
jg
fistpll
dec
pop
push
or
lahf
std
add
jge
push
push
push
mov
cld
pop
pop
ret
aas
and
push
jmp
sbb
mov
push
cmp
call
jl
sub
mov
call
or
pop
push
mov
or
or
push
push
push
mov
es
pop
mov
stc
mov
pusha
adc
jbe
sbb
add
lcall
insb
mov
jge
cmp
mov
jne
jmp
xchg
xchg
xchg
jmp
adc
jle
push
repz
dec
mov
jle
lea
cmp
mov
test
iret
inc
ret
adc
add
mov
repz
add
sti
mov
push
faddl
insl
mov
mov
fcomps
mov
test
sti
mov
repnz
pusha
mov
adc
mov
and
xchg
movq
lcall
push
push
js
or
xor
clc
push
push
pusha
push
mov
clc
or
fcomp
adc
adc
pop
or
ja
mov
xor
jg
loope
std
jns
jp
lahf
xchg
add
test
push
push
pop
iret
mov
xor
sbb
aas
ds
cmpsb
add
or
add
push
lea
in
mov
stos
dec
or
fsubl
add
aas
mov
cmp
adc
js
add
mov
dec
and
pop
adc
jmp
and
cmpl
in
inc
aaa
outsl
push
push
xchg
mov
movsl
or
scas
repnz
outsb
add
imull
dec
sbb
or
dec
push
jmp
lods
shll
dec
movl
jg
inc
sub
leave
sbb
mov
nop
rol
jo
jle
std
push
enter
push
andb
mov
mov
jl
cmp
mov
lea
ret
mov
adc
ja
and
pushf
mov
push
xlat
xchg
jbe
cmp
mov
sbb
repz
jle
adc
test
cld
test
jb
test
loop
mov
inc
cld
push
mov
fcoms
imull
test
lea
dec
arpl
pop
pop
mov
mov
sbb
je
inc
and
in
dec
int3
push
gs
push
mov
add
popa
xchg
sbb
push
dec
push
inc
clc
shll
add
fsubr
in
dec
data16
mov
mov
dec
rorl
repz
rcrb
sti
in
mov
clc
lea
pop
aam
jg
roll
shl
add
js
mov
std
inc
call
push
add
jg
mov
add
mov
or
cmp
je
mov
jge
in
ret
js,pt
add
inc
and
jg
repnz
test
je
dec
data16
out
push
cld
test
jne
mov
mov
or
popf
adc
loopne
or
dec
cld
shll
add
mov
cmp
dec
mov
cld
sbb
sub
mov
sub
arpl
sub
cmp
fs
mov
pop
sbb
push
add
loopne
mov
ds
mov
sub
mov
lcall
flds
xchg
cmpsb
lea
mov
fdivs
stos
je
add
mov
xchg
push
scas
in
mov
dec
popl
mov
aad
test
frstor
cmpl
sbb
pop
aam
sbb
lea
lea
cld
inc
pushf
mov
scas
dec
mov
data16
inc
stos
add
mov
imul
cld
cmpl
test
repz
mov
sahf
add
enter
sti
mov
mov
cmp
dec
push
push
pop
in
out
scas
inc
jo
pop
call
or
fimuls
hlt
mov
rcr
in
mov
loopne
inc
sahf
jl
hlt
js
sbb
push
push
mov
pushf
ret
test
cmp
mov
push
cwtl
xor
mov
jb
mov
lds
pop
aas
ret
mov
aam
add
data16
push
call
sub
movsb
push
cmp
popa
inc
push
jb
xchg
lock
jmp
call
push
add
pop
sti
in
or
mov
fsubl
sahf
jl
popa
into
cld
mov
fsubrl
movsl
call
xchg
call
cmpl
jmp
jp
add
push
xchg
cmp
call
sbb
es
sti
fidivl
sbb
in
push
stc
pop
sti
stos
int
sbb
push
jo
add
xor
add
push
invlpg
repnz
or
or
or
or
sbb
push
adc
pop
roll
mov
push
ljmp
fsub
jo,pn
and
in
pop
cs
add
add
xor
outsl
add
dec
or
jg
lods
dec
lahf
push
add
movl
add
stos
xor
mov
sbb
mov
lret
add
mov
inc
cmp
loopne
pop
jle
fistps
adc
push
sbb
sbb
jb
mov
mov
into
nop
pop
cmp
je
mov
fwait
stc
shrb
mov
roll
popf
xor
pop
fisttps
adc
sub
cld
sbb
in
loop
mov
mov
lock
sarb
test
mov
lea
inc
adc
hlt
rcll
test
cmpl
adc
mov
cmp
sti
inc
sarl
mov
push
stos
xchg
imul
push
push
xor
movl
push
mov
adc
inc
int
cmp
add
inc
add
mov
cmp
iret
lahf
data16
bound
push
data16
sarb
inc
sbb
push
push
xchg
popa
shll
mov
mov
in
cmp
scas
mov
pop
sbb
inc
loopne
inc
in
cmc
js
sbb
lea
push
cmpsb
mov
add
into
stos
fdivp
jl
rcr
sti
mov
mov
mov
jnp
sbb
push
subl
add
aad
in
add
ja
mov
aaa
mov
add
lds
pop
xor
push
loop
mov
add
rolb
sbbl
inc
in
and
sbb
jg
add
push
mov
mov
fisubl
dec
repnz
dec
outsb
imul
push
in
or
clc
jae
cld
popl
lahf
or
mov
mov
mov
hlt
push
lret
xchg
or
cld
stos
dec
mov
mov
xor
js
pusha
push
xchg
in
addr16
mov
add
subl
mov
mov
mov
cmp
in
jp
fprem
stc
mov
lea
jl
xor
adc
jo
call
jne
movl
pusha
movsb
cmp
fidivrs
cmp
in
shll
pop
lea
and
mov
xchg
mov
mov
mov
push
into
add
test
shl
jne
ret
fsubs
outsl
loope
ja
push
stc
pushf
mov
jno
out
mov
fwait
add
adc
mov
dec
add
lahf
cmp
dec
add
mov
in
lea
je
std
cltd
insl
jns
push
add
xor
cld
dec
fisubrl
sbbb
pop
jmp
mov
pop
and
adc
insb
shll
cwtl
ds
int
mov
cmp
dec
rolb
in
sti
repz
int
fists
add
imul
push
push
arpl
mov
mov
adc
mov
popf
call
pop
loopne
sarl
xor
cld
fs
mov
movl
mov
outsl
mov
dec
je
or
inc
fwait
ss
mov
std
movsb
in
dec
pop
aam
mov
lret
mov
push
xor
push
into
push
repnz
or
inc
aaa
das
fsubrl
push
push
jne
xor
or
push
xchg
or
lods
repz
pmulhuw
cld
jne
cmp
call
xor
push
add
bswap
out
push
in
popa
notl
cmp
popf
or
sub
daa
cmpw
add
cwtl
ljmp
push
rorb
stos
pop
cmp
jp
sub
lock
xor
push
push
xor
inc
bound
push
fdivrl
es
pushf
mov
jo
jo
daa
cmp
mov
icebp
dec
add
dec
test
inc
mov
les
jmp
dec
mov
imul
inc
popf
push
mov
mov
incl
popf
cmpl
jg
mov
xchg
sub
loopne
push
fimuls
push
push
add
je
dec
xchg
ret
decl
arpl
adc
pushl
or
add
incl
rolb
push
sbb
out
mov
cmc
pop
test
sbb
push
jmp
call
pop
mov
xchg
out
adc
hlt
jns
mov
mov
and
mov
enter
mov
movsb
lahf
or
inc
pop
dec
adc
add
jg
movzwl
xor
aas
jg
mov
fstl
inc
adc
and
or
mov
dec
or
lods
ss
int
add
mov
movsl
int3
or
jge
mov
aaa
xchg
push
jp
sbb
lods
dec
test
mov
jae
cmp
push
repnz
adc
mov
mov
or
pop
call
xchg
mov
faddl
les
mov
sub
mov
cmp
dec
or
push
dec
or
dec
jnp
lret
jle
or
pop
cmp
and
mov
xor
xchg
pop
or
cwtl
pop
dec
inc
cmp
add
lret
sub
cmpsb
imul
jg
pop
sbb
xchg
and
add
cltd
or
cmpsb
mov
movl
ret
pop
jbe
ret
lahf
sbb
push
cmp
fmuls
xor
cmp
ret
fldcw
xor
data16
xor
paddusb
adc
sarl
enter
push
jmp
fisttps
nop
out
aas
mov
push
inc
cmp
jl
lea
lahf
adc
lock
pop
hlt
add
jg
add
cld
leave
jle
rorl
neg
or
push
ljmp
cmp
cmp
xor
lea
mov
lea
push
lret
jl
pop
pop
add
testb
or
adc
jmp
mov
pop
mov
adc
mov
mov
push
mov
push
sub
lcall
aad
mov
aaa
aam
push
lea
push
inc
add
jmp
lea
and
lds
push
mov
jg
cmp
jmp
hlt
and
push
lea
mov
adc
ljmp
push
sbb
mov
jmp
decb
jo
or
sti
mov
stos
mov
lcall
or
cmpsl
adc
fmuls
push
test
add
lods
sub
loopne
mov
add
cs
jmp
xor
and
test
incl
imul
lods
jecxz
cmp
je
inc
idivl
add
inc
or
nop
push
add
rorb
int
push
xchg
idivl
pusha
mov
push
mov
mov
mov
mov
adc
cmp
push
pop
mov
xor
push
jmp
ret
fdivrl
jnp
adc
or
sbb
pop
fwait
adc
push
pop
pop
adc
and
pop
cmp
je
mov
pop
and
adc
lret
sub
xchg
addb
dec
add
aas
mov
mov
mov
sahf
jns
dec
lcall
or
fidivrl
ret
and
jge
jmp
fbstp
add
jmp
rorl
mov
cmp
xchg
inc
lahf
mov
in
inc
dec
daa
inc
imul
pop
add
cli
ret
lahf
rcl
jne
rcrl
dec
int3
xor
in
pop
pop
add
add
ds
jb
pop
dec
repnz
ja
adc
fs
push
push
push
inc
or
mov
mov
pop
mov
ds
ljmp
or
push
hlt
push
mov
and
fnsetpm(287
mov
xor
xor
loopne
add
add
mov
scas
pusha
mov
aad
add
pop
or
xor
cli
pop
mov
xor
test
mov
out
and
adc
jb
jo
testb
mov
cmp
mov
add
pushf
jmp
cltd
fiadds
stos
pop
adc
add
loope
sub
push
sarb
cwtl
arpl
js
push
testb
stos
push
enter
adc
xorl
sahf
lods
mov
popa
mov
add
lret
lcall
add
rcrb
jg
pop
and
out
xchg
mov
sbb
inc
ja
cmpb
jo
jl
fisttpl
mov
mov
lcall
out
pop
mov
clc
cmp
scas
cmp
clc
bound
sbb
mov
jbe
mov
mov
lods
pop
jl
cmp
sbb
lock
or
loop
sahf
lea
push
xor
insl
cli
sbbl
add
xchg
or
jl
or
adcl
ficoml
push
adcl
or
loopne
fmul
call
stos
push
data16
mov
sub
add
jo
test
mov
test
in
cmp
mov
sub
cmp
sbb
or
bound
scas
jl
add
js
mov
bound
jp
dec
add
xorl
decl
jne
lret
push
adc
ret
fwait
adc
faddl
and
xor
fcomps
push
fbld
stc
or
adc
xor
adc
into
xchg
push
call
add
cmp
inc
add
adc
outsb
mov
inc
int3
inc
push
or
movsb
jbe
xchg
pop
mov
stos
pop
jp
std
inc
or
or
add
pop
jl
imul
add
mov
push
mov
cmp
mov
mov
mov
lods
fdivrs
or
ss
fisubl
lea
pop
jl
cmp
cmp
inc
mov
imul
add
movl
pop
cmp
pop
push
mov
jae
fmuls
inc
pop
add
push
dec
fldz
cld
loop
shrl
push
cmp
xchg
repnz
addr16
pop
and
push
or
xchg
cmp
mov
cmp
xchg
sti
lds
addr16
adc
cmp
jne
pop
mov
repz
or
popa
jb
jp
or
paddb
addr16
and
jmp
jnp
stc
dec
das
xchg
insb
fidivl
je
xor
add
mov
sbb
loopne
js
mov
stos
pop
push
mov
jp
mov
or
jl
or
inc
mov
xchg
and
arpl
enter
push
inc
loope
pop
sarb
or
xchg
test
iret
repz
mov
sub
jge
dec
fldt
sub
mov
out
jns
es
mov
add
add
push
push
pop
push
add
push
or
jle
inc
enter
push
or
incl
dec
jl
mov
add
cmp
int3
xchg
cmp
sub
mov
cmp
xlat
js
xor
clc
mov
inc
jecxz
fisubrs
push
les
ja
adc
mov
pop
cld
push
subl
outsb
dec
shrb
lahf
jno
adc
es
cld
jmp
add
or
lea
sub
cmp
je
sub
xchg
mov
xchg
js
xchg
movsb
mov
inc
call
loopne
add
pop
pushf
inc
mov
cmp
sarl
das
push
add
cmp
cmp
xadd
or
jge
xor
out
push
mov
fistpll
pop
or
adc
xor
sbb
call
jle
adc
pop
adc
dec
roll
mov
inc
movsl
inc
pop
jbe
sti
test
shlb
ja
push
incl
push
cmpl
jmp
xchg
in
xlat
fsubl
cld
fwait
mov
je
div
lret
test
add
jp
aam
aaa
mov
push
push
push
sub
cmp
pop
lods
je
data16
sub
sub
setb
adc
push
rorl
rolb
inc
lret
pop
pop
push
pusha
rorl
push
enter
sti
pop
loop
js
sahf
jne
inc
xor
cmp
push
add
adc
mov
push
stos
xor
xor
mov
jge
pop
pop
or
sub
mov
je
clc
aas
aas
aas
sub
je
pop
je
test
je
mov
arpl
mov
dec
mov
pop
mov
inc
xor
fstl
add
pop
nop
xor
jne
jo
inc
mov
mov
adc
inc
or
je
push
jbe
push
je
push
cmp
outsb
or
clc
xor
fidivrl
and
or
mov
mov
and
inc
push
in
xchg
pusha
push
xchg
sub
loope
mov
bound
jne
push
fs
test
xor
fsubrs
push
xchg
lods
jge
test
and
aaa
jl
lret
add
shlb
jb
mov
call
popa
jne
inc
jle
mov
or
push
xchg
inc
sbb
mov
dec
insl
lock
aam
pop
xor
or
or
and
push
add
pop
jne
adc
test
je
mov
push
or
gs
xor
incb
add
add
add
sbbb
sarl
add
adc
jo
dec
ret
decl
xchg
je
xchg
sbb
add
loop
add
xor
test
jo
ds
cmp
rorl
fistpll
notl
push
inc
push
push
mov
in
mov
adc
mov
adc
push
adc
mov
adc
bound
std
or
lret
je
sbb
xchg
adc
sub
into
cmp
jnp
cmp
or
sub
add
jo
lods
cmpb
xor
dec
pop
xor
cwtl
inc
pop
add
add
insb
outsl
imul
js
in
lahf
sub
push
ret
pushf
fnstsw
mov
addb
pop
out
int3
sub
jp
push
bound
push
inc
pop
insl
mov
lcall
dec
or
cmp
loopne
lds
jg
inc
mov
jae
call
push
test
pop
cmpsl
jge
push
test
push
push
pop
push
pop
pushf
rclb
ljmp
mov
mov
ret
pop
jno
in
pop
jne
lea
in
inc
sbb
xor
add
repnz
push
push
sub
cld
and
mov
push
jg
outsl
je
test
pusha
xchg
pshufw
or
addb
lods
or
adc
xor
lock
or
aaa
repnz
std
divl
or
je
mov
or
jl
inc
or
add
jb
int3
in
inc
int3
cmp
loopne
shlb
imul
incl
or
push
add
and
push
movsb
mov
je
lea
or
cmp
btr
push
leave
outsb
lock
into
test
and
scas
jne
jecxz
add
adc
add
repnz
dec
mov
mov
add
lahf
test
add
addl
and
inc
pushf
popf
ja
into
and
cmp
das
sbb
push
adc
shl
mov
inc
or
jmp
jb
inc
add
imul
push
gs
mov
pop
adc
incb
push
xor
andl
decl
mov
outsb
pop
scas
nop
push
inc
ret
cs
movl
fdivrp
lds
pop
mov
ror
fwait
cmp
push
cmp
dec
or
sbb
push
loopne
pusha
mov
mov
nop
cmp
adc
sbb
pop
adc
dec
adc
mov
ljmp
je
or
je
iret
stos
pop
test
repnz
fwait
rolb
cmp
xchg
push
mov
jmp
jecxz
in
jmp
lea
push
mov
xor
add
mov
mov
sbbl
push
or
inc
mov
icebp
adc
and
mov
and
jo
push
push
cs
lock
push
repnz
loop
pop
add
sub
push
cld
cmp
lcall
and
and
pushw
lock
hlt
fadds
pop
cmp
or
scas
ss
push
mov
pop
mov
mov
push
fwait
je
push
les
push
lret
pop
test
inc
or
jno
mov
adc
or
fistpll
cmp
jb
add
inc
add
push
test
inc
and
loopne
das
aas
dec
cld
push
push
push
je
popa
adc
int
jp
fwait
shrb
jmp
push
adc
and
rolb
ds
sbb
dec
cmp
and
cmpsl
sub
xor
inc
adc
push
cmp
add
and
imul
repnz
sarl
mov
or
data16
xlat
aas
pop
mov
push
mov
dec
incl
jne
mov
mov
xor
mov
sbb
cmpsb
and
jg
testb
adc
or
jl
jnp
imul
cmp
sbb
cmc
dec
cmp
je
pop
add
adc
or
push
movl
pshufw
clc
push
push
mov
into
add
mov
idivb
aam
or
cmp
jo
inc
cmp
jge
jmp
out
or
jmp
pop
or
and
js
je
add
inc
push
aas
insb
test
addl
lea
in
sbb
push
testl
xorl
sbb
sub
xor
mov
test
icebp
mov
enter
mov
mov
jge
ret
jle
add
push
lea
push
xor
mov
xchg
mov
jp
jb
mov
inc
pmuludq
lea
xchg
add
inc
sbb
repnz
sub
pop
dec
mov
repz
sarl
inc
sarl
es
xor
shlb
dec
test
sbb
mov
pop
push
mov
and
dec
cmp
or
inc
into
pop
fucom
fidivrl
mov
lea
sub
popa
adc
adc
mov
mov
jo
cmp
test
jne
xor
ret
mov
xchg
lock
add
jo
cmp
and
xor
orl
pop
aam
add
push
imul
mov
fists
aas
mov
xchg
xor
jge
adc
ds
or
push
push
dec
in
lcall
add
lret
add
call
adc
scas
lahf
mov
or
daa
shl
pop
lahf
jge
push
lahf
rolb
dec
iret
clc
add
mov
mov
inc
jae
stos
or
push
movl
imul
sub
mov
sbb
sub
xor
mov
sbb
test
dec
jo
pushl
pop
push
xchg
notb
mov
mov
ret
rorb
xchg
jle
sub
inc
sahf
push
icebp
cmp
arpl
test
fimull
adc
or
negb
add
pop
add
mov
inc
fistps
push
movsb
clc
test
add
testb
pop
add
and
mov
jbe
fsubrl
les
hlt
push
xchg
jo
cmp
push
and
jmp
test
loop
xorb
test
pop
cmp
loop
xor
dec
sbb
sbb
or
das
in
roll
jne
repnz
cmpsb
sarb
pop
add
sbb
and
inc
add
mov
js
jle
test
sti
add
cmp
ja
daa
imul
adc
ret
push
ror
lahf
inc
or
jne
clc
push
scas
pop
adc
pop
imul
cwtl
push
addb
jb
cmp
into
insl
or
orl
shrb
js
pop
outsb
adc
test
mov
aas
jmp
scas
add
jo
push
adc
inc
sbb
lcall
mov
cld
xor
mov
mov
mul
fimull
jae
jg
pushf
push
push
cld
jne
out
mov
andl
scas
sub
mov
inc
and
add
jae
imulb
fnsave
jg
mov
jo
push
loopne
sbb
jp
xor
sbb
dec
sbb
or
sbb
mov
loop
and
sbb
popa
aas
add
je
mov
sbb
and
push
das
cmp
push
aas
addl
inc
ljmp
andl
pop
push
aas
ds
movsl
sub
aad
inc
dec
push
inc
add
call
inc
test
fistps
pop
test
in
aas
xor
lods
loopne
cld
jmp
cld
lea
cltd
xor
enter
fwait
add
jecxz
add
mov
sbb
jbe
pop
add
jle
cmp
jle
xchg
sbb
fnsave
fstps
jg
pop
mov
add
inc
sub
cmp
add
pop
push
lock
mov
add
cmp
dec
add
testl
mov
push
dec
gs
dec
mov
inc
sub
movsb
mov
into
out
dec
idivl
xor
mov
sub
xchg
pop
mov
movsl
xor
or
das
fsubs
sti
ds
fs
inc
xchg
imulb
bound
push
sub
xor
xor
sbb
sbb
adc
out
not
or
pop
or
stos
dec
xor
in
push
js
aam
sub
pushf
nop
cmp
mov
movsl
ror
mov
mov
pop
fisubs
loopne
in
push
pop
cld
xor
or
adc
pop
sub
dec
pushf
and
sub
pop
pushf
out
repnz
xchg
or
jl
pop
subb
insb
jne
jns
scas
jo
je
jl
mov
xchg
imul
js
mov
lods
jae
mov
iret
xchg
xchg
dec
rcl
cmpsl
inc
hlt
and
jno
sbb
sbb
dec
sahf
lahf
xor
mov
test
fs
stos
test
pop
cmp
lods
xchg
lret
rep
int3
dec
shlb
lock
ja
outsb
and
mov
mov
adc
fsubrl
or
xor
or
pop
lret
mov
xor
xchg
out
sahf
xor
sub
xor
inc
in
push
sub
push
aam
stc
jbe
push
jo
js
lret
repz
mov
inc
xchg
xor
pop
mov
lods
je
push
cs
rclb
pop
cs
in
clc
cld
add
lret
orl
je
push
iret
stos
leave
movsl
fxch
adc
sbb
and
cmp
mov
das
sub
xchg
mov
movsb
pushf
cmp
outsb
jno
xchg
lock
enter
stos
lods
jae
in
and
repnz
push
xor
dec
gs
aad
pop
pop
repnz
mov
inc
adc
xor
or
andl
xor
sahf
outsl
aaa
push
push
sub
repnz
insb
xor
mov
mov
nop
inc
cwtl
xor
in
cs
mov
mov
fisubs
pop
aam
fsub
in
hlt
das
int
mov
add
or
xor
or
xor
sub
repnz
dec
clc
test
xchg
dec
movsl
pusha
fs
cld
lods
cmp
cli
sbb
rorl
data16
jb
cs
xorl
aam
gs
mov
xchg
push
lret
mov
dec
call
dec
mov
mov
movsb
xchg
fcmovnu
ja
aaa
rolb
mov
mov
xor
or
mov
ss
mov
adc
lret
imull
pop
pop
mov
xlat
add
or
mov
in
jo
or
bnd
lret
mov
mov
out
int3
pop
shrb
fsubl
pop
hlt
or
xor
xor
in
sbb
sbb
and
xor
js
or
inc
pop
rorl
in
in
inc
pop
xchg
ja
out
lods
cmp
or
stc
pop
cs
or
sub
in
int3
rcr
int3
sbb
in
xor
mov
xor
jl
xor
adc
les
mov
cmp
xor
lds
pushf
je
lret
push
pop
ret
js
push
pop
mov
pushf
xchg
xchg
outsb
in
stos
ret
stc
mov
sub
mov
mov
or
jbe
fldt
xor
jl
xchg
lret
dec
mov
xor
test
xor
xor
fildll
cmp
sahf
lret
in
insb
pop
pusha
push
pop
addb
xor
jecxz
xor
enter
data16
stc
cs
clc
sub
cmpsb
adc
adc
sbb
int3
or
gs
push
jns
in
jo
cmp
inc
jo
jae
cmp
sub
xchg
fsubrl
mov
aaa
leave
mov
mov
rclb
fxch
lret
addl
pop
outsb
xchg
iret
or
push
lds
sub
cmp
dec
push
lret
mov
jo
lods
pop
outsb
xchg
xchg
nop
xchg
xchg
cwtl
push
jbe
mov
test
fs
mov
cmp
movsb
or
xor
sub
mov
pushf
mov
sbb
in
mov
les
rorb
lods
lods
cmp
or
adc
sbb
push
xor
xor
cmp
enter
gs
pop
pusha
pop
sahf
out
lds
js
jl
test
pushf
pop
mov
cvtps2pi
in
movsl
in
pop
mov
testl
inc
fcoms
loopne
cmc
inc
cld
data16
iret
lret
add
loopne
aaa
xor
test
ja
dec
in
mov
inc
push
lret
dec
mov
sub
lret
pop
push
jne
arpl
fdivrl
das
mov
jg
clc
xor
add
push
xchg
cmp
int3
sbb
cli
jl
xor
in
xchg
lock
jbe
or
or
adc
mov
bnd
sub
xor
cmp
push
sahf
dec
push
pop
pop
je
js
es
mov
cmp
cwtl
pop
sub
xlat
mov
movsb
sbb
enter
loopne
mov
jbe
in
sarb
cmp
cmp
or
cwtl
out
xlat
push
sub
aaa
cs
inc
cmp
jb
jmp
fs
mov
aam
mov
dec
fldcw
pop
dec
sahf
inc
rcl
fdivrs
test
lret
in
sbb
sbb
and
shlb
cs
xor
inc
push
daa
xchg
xchg
dec
dec
dec
xlat
pusha
fs
lods
jl
push
dec
xlat
loope
je
push
pop
jo
jo
test
jl
xchg
cwtl
cs
lret
xor
mov
jl
movsb
xchg
fdivrl
cmp
cvtps2pd
add
mov
iret
movsl
repnz
in
mov
push
sub
cmp
jo
or
mov
mov
nop
aas
xchg
pushf
js
jb
pop
ljmp
xchg
xchg
ja
pop
inc
xor
rcl
adc
inc
lock
clc
mov
adc
sbb
sbb
insb
jae
jb
cmp
dec
xor
leave
pop
pusha
fs
adc
subb
pusha
test
in
test
xchg
enter
lret
int3
sarb
in
lock
sub
das
hlt
cmp
mov
shl
push
cli
pop
mov
gs
jns
and
add
ret
hlt
jmp
or
cmp
and
ds
out
jnp
and
inc
adc
jns
push
or
nop
cwtl
add
mov
in
aam
push
sahf
dec
fsub
sar
cld
xchg
add
mov
cmp
or
xor
push
xor
cmp
in
jmp
pop
pusha
outsl
xor
jb
addb
xchg
lret
movsb
test
lret
pushf
push
push
cs
add
in
jb
push
mov
xchg
adc
pop
in
adc
mov
xor
xor
pop
dec
sub
daa
loop
pop
pop
cmp
add
cmp
cmp
jns
xor
xchg
xor
mov
insb
fs
lock
sahf
push
mov
dec
in
mov
xchg
es
push
test
sbb
aam
sub
out
hlt
mov
cmpsl
repnz
imul
and
pop
sub
movsb
fisubs
pop
cmpsl
pusha
xor
insb
xor
js
subb
xchg
ja
outsb
inc
xor
pop
dec
sahf
inc
rol
mov
cmp
call
insb
sub
xlat
cmp
in
xor
xor
int3
arpl
push
cs
push
pop
cmpsb
loope
je
pop
mov
lds
pushf
mov
rcrl
les
jo
movsl
xor
mov
mov
dec
int3
jl
out
rcr
sub
xor
cld
xor
adc
sbb
mov
addr16
and
sbb
cmp
out
fcomps
cmp
fidivs
shlb
push
mov
xor
stc
cltd
mov
enter
cmp
aam
js
cmp
aaa
xchg
stc
inc
ds
lret
repnz
sti
sub
sub
dec
xor
fnop
test
dec
sub
js
push
inc
stos
jno
xor
ds
lret
dec
mov
daa
xchg
int
loopne
inc
sub
aad
and
aas
aas
aas
lret
insb
and
xor
sub
xor
fstpl
arpl
in
lock
cmpsl
clc
pop
adc
fstpl
fs
sbb
dec
xor
int
sahf
inc
inc
xor
pop
mov
or
inc
jl
cmpb
pop
mov
lahf
push
mov
fidivrl
jmp
leave
in
push
test
xor
fs
hlt
xchg
or
movsl
mov
adc
pop
sbb
jl
aas
mov
xor
cmp
push
aas
repnz
nop
xchg
push
aas
push
cmp
movsb
inc
cmpsl
xor
aas
push
je
in
and
mov
sub
dec
nop
xchg
xor
scas
pop
dec
mov
fsubs
popf
sahf
cld
enter
add
inc
outsl
and
cs
lret
and
pop
inc
dec
jb
test
insb
xchg
xchg
dec
in
sub
sub
mov
jnp
dec
loope
icebp
mov
pushf
aas
mov
subl
les
int3
stos
lock
cmp
in
call
xchg
mov
mov
xor
xchg
out
inc
enter
pop
nop
lret
in
cmp
out
je
js
jo
sahf
addb
pop
cmp
movsb
sub
mov
sub
dec
xor
popf
jns
dec
sub
cld
add
push
test
and
mov
fucom
in
inc
dec
arpl
dec
push
gs
mov
cs
lret
mov
jb
xor
in
push
mov
popa
stos
xchg
lret
sbb
mov
push
ror
popf
loopne
cmpsb
xorl
mov
inc
adc
movsb
popf
sub
nop
inc
sub
xor
addr16
gs
jb
pop
xor
jo
repnz
je
jl
xor
mov
mov
in
fsub
pop
jns
push
call
inc
mov
xor
or
test
mov
inc
and
sub
push
pop
inc
xor
daa
xchg
push
pusha
fs
mov
pushf
xchg
lret
test
mov
int3
mov
aam
lock
jb
hlt
clc
mov
mov
sbb
inc
sarl
pushf
pop
sub
pusha
xchg
push
mov
dec
ret
jge
xor
dec
adc
ja
add
insb
inc
jo
and
mov
sub
pushf
xor
fwait
mov
rcrb
fsub
lods
inc
movsb
repnz
xchg
fwait
cld
clc
add
lret
or
insb
outsl
and
inc
sbb
movsl
cmp
inc
inc
inc
dec
cmp
repnz
push
cmp
push
push
je
lcall
push
sub
pop
movsb
test
lods
js
mov
rolb
push
mov
fadds
in
in
lock
fistpll
in
jb
inc
sbb
xor
xchg
xchg
lret
cmp
mov
push
cs
or
pop
mov
mov
in
lcall
sbb
shlb
cmpsl
inc
cmpsb
call
inc
sub
xchg
enter
xor
cs
mov
insb
insb
clc
add
sbb
mov
in
dec
inc
inc
es
mov
out
inc
dec
or
mov
hlt
cltd
stos
mov
xor
mov
cltd
inc
lods
inc
mov
inc
mov
jl
push
sbb
loope
inc
ss
out
aaa
repnz
inc
xor
xchg
inc
push
cmp
xchg
xchg
dec
in
jp
pop
pop
iret
xchg
lret
and
fs
mov
cs
jl
test
mov
jb
pop
enter
arpl
ret
jmp
movsl
iret
or
or
adc
xchg
xchg
lret
sub
xor
xor
js
jmp
subl
adc
xchg
iret
in
mov
adc
insb
in
cwtl
nop
inc
pusha
mov
xor
mov
mov
pop
sub
fdivs
js
hlt
cld
test
js
xchg
pop
adc
mov
adc
and
cmp
out
cmp
inc
adc
cmp
mov
dec
inc
gs
inc
aad
inc
push
cs
cmp
jl
push
mov
xor
sub
movsb
test
lret
in
push
stc
xor
push
loopne
in
xchg
outsl
xchg
call
mov
xchg
inc
or
inc
adc
jl
adc
mov
xor
test
push
push
movsb
adc
inc
inc
shl
xchg
dec
inc
daa
jns
jl
cmpl
jl
xor
xchg
mov
iret
pop
movsb
inc
xor
repnz
mov
cmp
mov
pop
insb
sbb
dec
sub
insb
inc
jae
enter
pop
cmp
jp
sbb
inc
inc
sub
lds
inc
mov
movsb
inc
jb,pt
inc
inc
inc
jb
fldcw
xor
jle
loopne
cmp
in
imul
dec
ja
lret
or
and
in
cmp
dec
ja
pusha
dec
xor
add
dec
push
jne
cs
xchg
mov
jo
pushf
rcrb
push
nop
xchg
cwtl
jp
gs
push
mov
mov
lret
dec
fcomp
loopne
cld
movsl
repnz
push
mov
sub
call
out
lods
mov
xor
or
xor
xor
out
dec
push
pop
pusha
push
ja
cmp
push
lahf
inc
not
pushf
adc
cmp
out
rol
int3
add
sbb
lock
xchg
je
push
and
dec
or
das
sub
inc
and
mov
sub
inc
xor
lods
mov
dec
pop
mov
daa
xchg
xchg
jo
mov
jb
pop
ret
xor
leave
jae
mov
aam
fdivl
inc
das
daa
iret
aad
clc
cld
add
in
movsl
in
sbb
xor
dec
and
cs
xchg
inc
inc
inc
dec
jo
mov
mov
fs
dec
rclb
sub
xor
push
cmp
push
adc
xor
fbld
cmp
xchg
cmpsl
sbbl
dec
push
jo
out
nop
scas
mov
push
pop
in
push
add
push
lcall
cmp
dec
in
sbb
sub
mov
push
daa
pop
or
dec
clc
pop
mov
je
hlt
xchg
and
mov
dec
dec
sbb
sub
loopne
dec
dec
lret
push
dec
sub
dec
dec
push
inc
sub
dec
dec
cmpsb
xor
fdivrl
jbe
dec
dec
dec
lods
pop
outsb
lret
xor
movsl
in
jb
test
popl
jmp
in
mov
pop
stc
mov
inc
mov
lods
ret
dec
gs
rol
mov
ret
movsl
cwtl
mov
mov
les
xchg
fcoml
and
pop
mov
dec
xor
mov
dec
mov
jns
xor
outsb
adc
jl
xor
dec
aaa
or
pop
pushf
adc
push
add
dec
pushf
dec
sarl
mov
aam
repz
hlt
jg
inc
in
xchg
dec
xor
rcrl
xchg
xchg
lret
add
mov
pop
fadds
dec
dec
sub
xor
fstpl
inc
addb
test
sahf
sub
sarb
inc
in
mov
mov
push
ss
xchg
dec
dec
dec
mov
cmpsl
mov
xor
jmp
or
xchg
rorl
inc
sbb
jae
enter
idivl
jp
or
cmp
mov
out
fsubrs
cwtl
mov
mov
cs
pop
mov
in
daa
mov
repz
test
add
cmp
iret
dec
fs
and
dec
mov
push
test
lods
in
shlb
mov
pop
pop
pusha
sub
xor
mov
jb
stc
arpl
xchg
lret
enter
lods
lods
pop
outsb
xor
lock
xchg
test
dec
adc
scas
xor
jno
push
xchg
lret
pop
pop
and
xchg
jl
movsb
insb
inc
pushf
mov
movsb
inc
cmpsb
inc
dec
fs
jo
mov
mov
lods
mov
or
mov
fdivr
xchg
push
lcall
in
sbb
in
jl
dec
and
cmp
test
int3
pusha
fs
sub
mov
lods
xchg
pop
test
lods
sub
sahf
rorb
mov
sbb
and
ss
pop
stc
and
push
pushf
stc
lods
sbb
or
dec
adc
fwait
gs
push
sub
xor
mov
xchg
lret
dec
push
push
pop
lea
je
push
cs
js
mov
push
mov
xchg
rol
loopne
xchg
pop
mov
push
cmp
aaa
xchg
push
push
or
out
jbe
lock
cmp
push
mov
dec
dec
fbstp
fstpt
dec
cmp
inc
stc
sub
cmp
fistpl
sub
jl
in
adcb
mov
cmpsl
or
adc
dec
mov
stc
sub
cld
xchg
enter
in
cmpsl
insl
pop
in
sbb
aam
cld
xchg
lret
or
pusha
dec
dec
pop
mov
sub
lret
clc
inc
lret
in
dec
push
push
cli
lds
je
negb
xor
pushf
repz
inc
sub
push
push
les
push
inc
push
push
push
push
xor
mov
add
or
pop
and
xchg
xchg
lret
sub
pop
dec
dec
pushf
push
push
cs
mov
pusha
pop
mov
adc
nop
dec
and
push
adc
jns
push
sbb
pop
cmp
movsl
dec
ficoml
xor
rep
push
mov
je
mov
enter
call
in
hlt
cmp
fsubs
adc
or
daa
xor
xlat
clc
pop
cmp
xchg
sub
push
in
jl
xor
nop
js
sbb
out
test
adc
push
fsts
sahf
push
push
jl
lret
xchg
outsb
push
arpl
push
arpl
xor
xchg
aad
push
push
insl
cmp
and
test
dec
inc
dec
in
mov
inc
jb
and
cmpsl
push
push
push
sbb
push
push
push
das
aaa
gs
push
fnstcw
fcomp
push
pop
stc
mov
inc
loopne
in
adc
stc
mov
clc
xor
sbb
test
nop
aad
push
les
mov
nop
mov
push
sahf
lret
or
mov
movsb
or
sub
jbe
adc
je
xor
pop
push
push
pop
out
test
sub
mov
sbb
cmp
fucom
add
sarb
fmull
out
inc
sahf
fwait
dec
push
push
jge
dec
push
push
lret
dec
fsts
xchg
xor
cs
dec
shll
in
jb
pop
mov
clc
scas
lods
mov
lahf
push
cs
xchg
test
mov
mov
push
ja
push
push
push
add
cmp
or
xorb
cmp
inc
dec
and
rclb
dec
push
push
in
call
dec
xor
mov
ja
ret
repz
pop
jo
jo
je
mov
cmp
push
jl
xchg
gs
out
push
aam
push
repz
cmpsl
mov
sub
add
dec
push
push
repz
mov
xor
cld
mov
xchg
xchg
xchg
fs
insb
jo
mov
scas
jl
mov
mov
mov
dec
int3
xor
lret
leave
movsl
jb
jl
hlt
lret
xchg
clc
lds
dec
adc
sbb
daa
xchg
iret
sbb
and
cmp
mov
pop
inc
pop
pusha
fs
repnz
mov
inc
addb
movsb
test
hlt
shlb
iret
ret
xor
push
jns
movsl
push
push
sub
mov
repnz
stc
lods
mov
xchg
lods
ds
cmp
cld
push
add
nop
push
or
movsb
xor
push
and
fdivrs
inc
push
in
lahf
iret
inc
cmp
push
pop
sub
dec
push
xor
nop
mov
jns
cwtl
mov
mov
fnstsw
out
mov
push
sbb
jle
push
xchg
xchg
out
push
adc
push
push
in
push
ss
xor
cmp
lret
dec
cmpsl
cmpsl
pop
pop
pusha
mov
cs
iret
roll
addb
cmp
movsb
test
mov
in
repnz
enter
das
xchg
lret
dec
call
push
pop
sahf
xchg
and
push
adc
stos
xor
movsl
rcrl
loopne
pop
pushf
lret
pop
cmp
push
push
mov
and
call
inc
sbb
xor
fs
push
dec
in
into
push
adcl
lea
and
cmp
push
mov
xchg
int
iret
clc
pop
lods
add
lea
call
sbb
xchg
sub
fsts
push
push
or
xor
push
test
push
jb
ss
push
push
stc
loopne
mov
movsb
lcall
xchg
xchg
enter
xchg
call
scas
push
je
or
pop
adc
in
jns
sub
xor
xchg
xchg
out
scas
inc
push
push
pop
xchg
jo
pop
dec
sub
push
test
cmpl
dec
dec
lea
in
iret
push
push
es
push
nop
sbb
out
sub
icebp
mov
sbb
lock
rorb
iret
pop
sbb
pop
mov
pop
stos
je
cmpsl
sub
pop
pusha
daa
pop
sub
test
or
pop
aaa
xchg
xchg
out
cmpsb
inc
pop
pop
pop
roll
test
pop
in
lret
lods
pop
xor
pop
or
test
sub
out
movsb
mov
mov
imul
lret
js
xchg
xor
pushf
addr16
mov
rorb
fsub
inc
lret
in
insb
add
stc
adc
testl
and
xor
filds
xchg
sub
repz
mov
in
fcoml
pop
adc
sbb
cmp
faddp
clc
mov
adc
cmp
mov
fcompl
fs
dec
in
jl
mov
movsb
lods
mov
movsl
repnz
sub
shlb
add
dec
in
hlt
push
mov
fwait
dec
pop
pop
imul
movsl
repnz
dec
dec
cs
xchg
xchg
push
mov
mov
ss
nop
xchg
cwtl
pop
arpl
sbb
lods
pushf
and
inc
pop
outsl
pop
xor
movsb
fcomp
loopne
xor
pop
outsb
pop
pop
pop
fwait
xlat
inc
xchg
dec
gs
pop
pop
insl
hlt
push
pop
mov
mov
jl
mov
pop
sbb
test
daa
xor
sbb
sub
out
pop
pusha
cld
mov
repnz
pop
test
cmp
scas
shlb
mov
push
call
aad
divl
mov
sub
into
jae
xor
push
adc
mov
inc
cmp
or
ss
rcrb
pop
nop
and
fistps
inc
mov
mov
jns
and
fcoms
in
clc
cld
add
or
pop
stc
lcall
stos
inc
dec
gs
inc
inc
xorl
push
inc
adc
xchg
lret
and
mov
iret
jno
lods
mov
pop
jns
xor
je
subb
out
adc
mov
out
sarb
clc
mov
in
dec
mov
fsubl
int
add
pop
mov
bnd
pop
dec
pop
xor
pop
in
dec
sub
sarl
jge
je
xor
nop
jge
pop
push
mov
or
cmp
fcompl
sahf
fwait
pop
popa
mov
pop
decb
jns
pop
lcall
inc
mov
dec
pop
dec
inc
mov
sub
aam
test
lods
mov
mov
shrb
xchg
lret
int3
rcr
xchg
fildl
lock
hlt
lods
loopne
popf
mov
iret
xchg
call
call
cs
xor
pop
add
or
cs
out
add
pop
and
xor
out
jl
mov
push
aam
sub
push
aas
pop
xlat
pop
sahf
js
mov
pushf
sbb
mov
mov
aas
rcrb
movsb
jae
jbe
pop
gs
fnstenv
or
sbb
and
jg
dec
and
pop
mov
fmull
roll
sub
xor
gs
push
dec
sahf
inc
movsb
test
enter
mov
inc
in
lock
jae
gs
das
adc
pop
pop
pushf
pop
sub
pop
pop
push
cmp
addb
pop
frstor
inc
mov
push
inc
iret
ja
pop
fs
dec
js
mov
nop
pop
dec
mov
pop
ficomps
jae
mov
sub
xchg
aam
jne
in
loopne
hlt
aad
inc
cld
jbe
movsl
stc
xor
adc
xchg
lret
xor
cwtl
cmp
inc
movsl
jb
cs
je
fs
jo
test
mov
in
inc
movsb
pop
lods
pop
mov
dec
lret
and
psubq
inc
enter
cs
aam
call
xchg
hlt
clc
push
mov
pop
mov
xchg
xor
sbb
pusha
xchg
pusha
adc
fs
lods
js
jl
dec
gs
pushf
and
xchg
xchg
ffree
jno
in
test
repnz
cs
mov
call
movsl
lock
adc
pop
sahf
scas
jb
pusha
pusha
xor
daa
lock
jns
jb
mov
insb
jo
pop
sbb
in
mov
aam
movsb
test
mov
lret
xor
enter
mov
lods
cmp
cmp
lock
xor
inc
or
popa
arpl
cld
and
inc
sub
popa
lret
dec
sub
inc
lret
push
pop
cmp
je
lahf
addr16
gs
cwtl
mov
sbb
xor
ror
popa
aad
das
inc
in
lods
add
or
sub
sub
mov
jmp
idiv
adc
xchg
or
popa
mov
fistps
and
add
xor
inc
in
pop
bnd
movsl
pop
pop
or
push
out
push
popa
nop
lret
in
aas
mov
mov
in
mov
les
aam
out
loop
pushf
call
aaa
clc
pop
pop
jns
test
adc
bound
int3
movsl
pop
sbb
insb
xor
push
out
dec
bound
inc
push
and
fsubl
pop
dec
es
jo
dec
gs
and
xchg
xchg
xchg
lret
mov
and
sub
loopne
inc
add
push
dec
sub
sub
dec
dec
movsl
movsb
insb
in
mov
jo
test
xchg
nop
adc
mov
pop
bound
in
inc
js
jl
xchg
out
cmpb
cmp
pop
movsb
lods
sbb
in
in
enter
and
dec
mov
xor
test
and
mov
or
aaa
sub
nop
dec
mov
arpl
mov
push
push
pop
pusha
nop
dec
in
test
pop
sub
pushf
mov
test
pusha
and
and
les
sub
stos
and
cmp
fs
lods
and
jb
pop
lods
inc
dec
lahf
mov
push
xchg
xchg
out
nop
and
mov
call
sbb
jno
inc
scas
xor
test
test
lret
repnz
cmp
in
jl
fisubs
lock
add
or
subl
stc
sbb
test
xorl
push
dec
push
push
pop
in
pushf
lret
in
jo
aas
js
lret
or
or
in
cmp
movsb
test
xchg
lret
sti
mov
enter
loopne
repnz
cs
jo
cld
pop
movsb
xchg
icebp
add
adc
ja
adc
sub
loope
jge
xor
inc
mov
sub
dec
mov
lods
adc
mov
adc
dec
lods
adc
fbstp
in
shrl
jns
pop
cs
cld
sbb
ja
js
pop
push
or
sbb
push
or
lret
jo
xchg
cwtl
mov
loopne
data16
add
mov
aam
pop
fdivs
mov
jl
mov
lea
gs
lahf
in
aam
call
enter
push
or
and
pop
and
push
fistps
lods
jp
movl
add
cwtl
xor
sti
dec
or
aas
fwait
idivb
aas
sbb
leave
push
mov
mov
add
lock
push
pop
outsl
mov
mov
xor
mov
sub
mov
hlt
loop
push
fcomps
cli
mov
mov
push
or
pusha
push
fwait
sti
or
push
sbb
mov
and
dec
dec
sbb
aas
mov
mov
fmul
xchg
andl
and
mov
push
orl
unpckhps
inc
cmp
jb
dec
sub
cmpsl
adcb
in
cmpsb
xchg
dec
sahf
dec
sbb
mov
jle
test
sbb
jnp
inc
lea
test
sbb
ficompl
cld
add
mov
xchg
add
mov
fcoms
push
scas
mov
push
mov
add
pop
jle
and
data16
cwtl
add
negl
add
stos
mov
dec
add
inc
cmp
lods
jl
push
push
pushf
push
push
mov
inc
adc
jl
jo
or
ret
je
or
call
and
cmp
lret
je
movsl
adc
divb
fidivrl
sub
push
mov
sbb
sub
mov
nopl
add
pop
mov
cmp
dec
add
add
and
ja
pop
or
pop
pop
pop
fstpl
xor
xor
fcomp
add
or
lods
and
lahf
mov
idivl
add
xchg
push
or
jns
out
lcall
and
incl
int
jne
nop
pop
stos
jae
lcall
addb
or
cmpsl
adcl
add
inc
je
push
xor
filds
and
mov
add
push
mov
fmuls
gs
add
mov
add
add
in
lock
outsl
cmp
or
jle
push
jge
cmp
shll
add
push
in
filds
adc
loope
inc
call
push
push
xor
mov
ret
outsl
stos
xor
adc
cmp
mov
mov
pop
add
push
mov
outsl
mov
daa
inc
add
movzwl
fnstcw
sub
inc
or
xor
mov
movswl
sti
inc
mov
cmpsb
inc
push
cmp
aam
pop
and
pop
sbb
data16
push
loopne
rclb
cmp
xchg
rorl
test
jg
jns
hlt
lock
fistpll
mov
leave
sub
cli
ljmp
testb
jle
js
cmpb
mov
dec
xchg
sub
cmp
shrl
push
cld
push
jl
pop
or
and
cs
les
les
mov
js
fisubl
xchg
push
inc
scas
loop
js
test
mov
movsl
or
out
incl
jne
xlat
mov
pop
dec
adc
inc
js
cmp
or
cmp
ror
stos
or
pop
dec
cmpb
idivl
outsl
ds
mov
mov
cmp
add
cmpb
mov
pop
or
or
jg
and
jmp
lahf
jecxz
inc
adc
dec
sub
mov
loope
or
sub
call
imul
jbe
cmpl
mov
ror
jns
in
sbb
pusha
shlb
inc
cmp
insl
inc
add
cmpb
subl
or
dec
xchg
mov
movsl
jmp
adc
inc
add
movsl
mov
add
add
shrb
add
out
hlt
or
hlt
sbb
inc
mov
cmp
mov
push
rcll
add
popf
and
add
push
hlt
and
mov
movb
jne
shll
pusha
xchg
pushf
lds
lock
and
cmpsb
push
dec
sub
mov
xor
mov
in
push
testb
pushf
push
and
pop
push
pusha
dec
aaa
test
jg
fs
xchg
dec
in
adcl
sbbb
sbb
xchg
es
sarb
cs
test
sarb
mov
adc
out
les
cs
arpl
fwait
mov
dec
sub
xchg
add
jg
cs
int3
xorl
and
push
test
add
mov
not
mov
pop
cltd
nop
jl
jmp
dec
push
mov
mov
icebp
out
jg
or
adc
lock
mov
sbb
dec
int3
inc
mov
adc
jl
jecxz
mov
xor
xchg
addl
push
push
mov
into
mov
roll
sub
push
mov
loopne
sub
dec
sub
xor
push
lea
lcall
les
sbb
fistl
shr
mov
arpl
sub
loopne
sbb
mov
mov
fbstp
std
fbld
or
int
or
es
mov
sbb
xor
dec
xlat
adc
jne
adc
fimuls
xchg
push
xchg
jl
imulb
je
add
add
add
add
add
pop
add
aam
or
jg
or
mov
mov
gs
enter
add
mov
cmp
pushf
or
outsb
mov
mov
dec
cmp
pcmpgtd
out
add
mov
sub
js
scas
add
mov
movsb
xor
push
adc
out
mov
testl
xchg
sbb
repnz
test
cmp
stos
call
lock
shlb
mov
jmp
aas
adc
imul
cmp
jo
fidivrs
fidivrs
jne
pop
sbb
mov
cmp
cmpsb
adc
jge
cmc
push
lods
mov
sbb
je
fs
dec
mov
mov
mov
or
loope
rcr
pushf
inc
pop
in
add
das
pop
and
sub
xchg
jle
inc
es
sahf
test
cmp
pusha
je
pop
repz
mov
jne
jl
xor
and
xor
push
push
enter
cmp
push
cld
push
test
inc
jge
inc
jmp
jmp
ds
jnp
push
and
cmp
out
sub
fcoml
xor
shl
push
push
enter
pop
xor
sub
repnz
push
into
push
adc
movsl
and
in
push
add
incl
lea
mov
xor
xor
push
lock
jns
ret
dec
xor
mov
loopne
xor
mov
push
dec
or
mov
data16
add
clc
add
inc
mov
fildl
ja
data16
mov
sub
jb
pop
scas
mov
add
add
add
cmp
xchg
cmp
push
and
xor
clc
xor
and
repz
rorl
movl
xor
mov
pop
fmull
js,pn
dec
or
mov
push
push
cmp
mov
push
sbb
add
push
out
rcr
xchg
fs
adc
add
addl
aam
sahf
shll
je
movsb
nop
dec
mov
jbe
jae
dec
or
lea
cmp
movl
xchg
sarb
mov
inc
pop
mov
jne
dec
aam
popf
mov
into
or
mov
out
addr16
cmpsl
sbb
leave
adc
mov
push
xchg
mov
push
xor
cmp
fstpt
mov
dec
cmp
je
repnz
out
push
push
int
jo
loopne
cs
clc
mov
nop
dec
mov
cmp
out
pop
imul
add
test
cld
add
sti
cmp
cmp
cmp
or
dec
and
sbb
icebp
pusha
cmp
bound
lret
dec
add
mov
lret
lock
mov
pop
jl
aaa
pop
popa
in
enter
mov
mov
mov
pop
ret
dec
ret
xchg
pop
or
inc
js
in
jge
ret
jo
cltd
sbb
and
xchg
push
adc
test
push
cmp
add
inc
scas
jnp
rorb
and
sub
and
xchg
in
fidivrs
adc
or
sbb
sbb
sbb
sbb
ret
cmp
add
mov
and
ja
int
or
mov
pop
fsubl
mov
or
add
pop
inc
rolb
or
or
shll
add
out
popl
lcall
sbb
scas
stos
mov
jb
cmp
sub
addb
idiv
rcl
fisttpll
pop
sbb
sbb
jmp
inc
lahf
testb
push
and
ffree
hlt
pop
dec
jge
shl
xchg
ret
mov
pop
add
add
cmp
adc
adc
fidivrs
fbstp
sub
mov
jae
adc
pop
pusha
adc
psubd
add
das
add
xchg
add
loopne
pop
rcl
pusha
shlb
mov
mov
js
aam
mov
cmp
gs
insl
inc
cmpsl
cld
pop
icebp
sbb
pop
dec
lcall
aam
push
sub
lds
dec
push
mov
jnp
add
xor
imul
adc
sbb
add
iret
cmp
shlb
out
mov
cmp
push
cmp
bswap
out
es
xchg
and
or
idivb
cmp
cwtl
lods
cmp
and
lods
or
mov
sbb
adc
hlt
and
lods
mov
inc
push
sbb
dec
shrb
dec
loope
loopne
rol
push
les
inc
xor
and
nop
xchg
jbe
nop
pop
inc
pcmpgtb
pusha
inc
add
add
adc
jo
push
or
dec
xor
xor
jo
mov
cmp
dec
adc
add
in
sub
addl
test
jne
and
roll
mov
add
jo
jmp
inc
push
xor
mov
mov
sti
sbb
push
stos
add
jo
inc
inc
pop
jae
int3
orb
inc
inc
cwtl
mov
or
faddl
sbb
adc
test
loop
lret
adc
xor
addl
fiaddl
fs
lods
inc
mov
xor
dec
adc
add
and
insl
test
and
inc
cmp
push
incl
mov
pop
loop
sahf
insb
aam
or
inc
or
and
fdivrl
pop
fwait
sbb
dec
enter
mov
hlt
adc
inc
cmp
ret
dec
xchg
xchg
sbb
into
add
dec
adc
add
inc
rorl
insb
fstl
adc
test
xchg
mov
push
xchg
and
aaa
popl
cmpsl
add
enter
adc
inc
outsl
enter
inc
sahf
adc
add
xchg
lea
pushl
test
sbb
daa
cmp
mov
sub
sbb
stos
lret
jg
inc
inc
ja
cmp
dec
cld
mov
daa
pop
jl
sub
xor
dec
add
pop
add
inc
sub
xor
inc
or
rolb
loope
sbb
dec
push
jb
mov
lret
enter
jle
lea
xor
test
inc
dec
movb
push
fcoms
lret
add
sbb
mov
jl
mov
push
adc
add
xor
test
inc
mov
or
push
xor
hlt
ja
lea
lea
cmp
je
pop
enter
dec
add
push
or
jne
jg
push
xorb
test
mov
xchg
cmp
jl
out
add
test
push
pop
pushl
xor
es
test
mov
push
xor
push
arpl
pop
or
fldl2e
adc
mov
sbb
cmpsl
or
jne
cmp
mov
loop
mov
dec
inc
push
imul
in
xchg
pop
frstor
pop
cmp
inc
pop
or
pop
pop
adc
imul
test
push
and
xor
dec
fstps
icebp
sub
add
xchg
cmp
dec
stos
adc
aam
dec
add
or
mov
lods
jl
xchg
push
stc
sub
enter
add
sbb
xor
add
jo
insl
xchg
xchg
jbe
loop
fisubs
or
int
adc
pop
add
jae
mov
mov
jno
pop
sub
roll
inc
sahf
sbb
hlt
or
adc
jno
lret
cmp
jbe
sub
mov
orb
inc
cld
sub
jecxz
jb
ret
and
adc
xchg
movsb
decl
jle
int
cs
xor
daa
dec
pop
cmc
pop
or
lods
in
sbb
xor
cltd
inc
cmp
ret
cmpb
adc
push
xchg
adc
push
jp
arpl
mov
and
sbb
outsl
test
mov
add
push
xor
outsl
imul
add
and
or
notl
sbb
xchg
outsb
push
dec
rolb
dec
or
dec
dec
push
sbb
inc
sti
call
xchg
clc
sarb
add
push
push
adc
mov
movsl
mov
dec
adc
push
push
mov
xlat
popf
idivl
mov
xchg
push
push
add
sahf
mov
aas
push
mov
mov
lock
out
cwtl
adc
push
es
outsb
sbb
inc
testl
and
jo
aam
mov
mov
sub
ret
mov
pop
add
inc
or
lock
nop
pop
lahf
fimuls
cmp
je
sub
xorl
stos
and
pop
mov
ss
adc
jl
sahf
push
inc
jge
or
sub
pop
xor
cmp
jmp
pop
add
mov
imul
movzbl
test
outsb
add
cmp
adc
pop
scas
mov
rolb
pop
jo
or
aam
divb
mov
push
sub
push
jmp
mov
lock
je
mov
repnz
and
lret
push
or
cmp
push
jecxz
lahf
imul
sub
mov
sti
movsb
imul
sub
push
cmp
dec
xchg
lods
pop
sub
inc
hlt
sbb
lock
inc
sub
jecxz
xchg
ds
faddl
sbb
inc
or
mov
mov
adc
adc
adc
adc
add
dec
adc
jp
jae
sub
xchg
jo
xchg
push
gs
pop
mov
mov
andb
cmpb
sub
lret
rcll
lret
adc
add
sbb
push
add
leave
dec
sahf
sbb
push
or
or
or
pop
or
lahf
inc
dec
or
xor
enter
cmp
or
or
inc
mov
or
or
or
lock
or
or
dec
xchg
cld
test
ja
inc
shrb
sbb
cmp
int3
bndldx
push
clc
mov
mov
pop
je
and
in
call
push
ja
outsb
fwait
dec
scas
mov
mov
adc
inc
cwtl
cmp
jmp
push
mov
sbb
inc
or
lock
sbb
xchg
jb
inc
xor
mov
int3
cmp
sbbb
sbb
xchg
dec
loopne
call
jle
push
mov
stos
fisttpl
mov
fwait
pop
pop
push
rcrl
xor
rcrl
aad
andl
or
mov
in
pop
mov
test
rorb
jecxz
or
test
in
sub
mov
call
das
dec
add
add
xor
in
cmpl
je
push
popa
adc
inc
rcrb
test
sub
or
add
les
sbb
add
add
loope
insl
mov
lock
add
mov
pop
cmpsb
adc
inc
lods
or
stc
push
or
dec
push
loopnew
loopne
push
push
add
mov
in
int
or
adcb
mov
in
outsb
add
xchg
and
dec
xor
or
pop
roll
mov
jl
add
lea
rclb
or
add
daa
lock
sub
add
clc
pop
pushf
out
sbb
lods
jle
adc
mov
mov
jp
clc
cmpb
sub
subl
pusha
mov
or
stc
movsl
test
push
int3
sbb
push
cld
jne
mov
mov
mov
or
out
stos
inc
cmpsb
push
nop
lods
push
pop
iret
aaa
pop
sti
or
repnz
inc
add
mov
add
shlb
jl
push
jns
jns
push
scas
rolb
inc
mov
add
jns
jns
int3
xchg
fstps
push
push
add
jnp
out
js,pt
cmp
push
pop
add
pop
pop
add
xchg
mov
push
pop
and
or
adc
adc
adc
pop
mov
loopne
push
mov
cmp
outsl
or
in
mov
pop
loopne
in
leave
adc
add
popa
cmc
add
dec
popa
push
adc
jg
mov
shrb
xor
mov
push
int3
into
mov
fcmovnbe
sbbb
dec
inc
ret
adc
pop
or
dec
cmp
xor
fcomps
xlat
and
inc
mov
and
pop
enter
and
mov
pop
mov
add
arpl
and
and
inc
or
jae
lds
adc
es
sub
mov
or
repnz
xchg
insb
mov
icebp
dec
and
sahf
cmp
loopne
jp
and
outsb
and
push
daa
dec
jb
mov
lods
push
adc
inc
push
or
inc
or
sbbl
sub
cmp
ja
push
sbb
cmp
mov
loopne
or
andb
mov
sbb
jge
cmpl
adcl
push
sbb
adc
in
jg
add
and
or
cmp
push
cmpl
leave
rcrb
in
sbb
sbb
sbb
iret
fstpt
sbb
out
cli
add
rcr
les
adc
shl
mov
and
scas
test
and
push
dec
add
loopne
les
out
ja
lea
add
mov
daa
fwait
add
sbb
push
ss
jl
jmp
or
add
lock
sub
pop
dec
test
inc
movsb
mov
test
push
push
cmp
cmp
enter
sbb
addb
cwtl
enter
ret
int3
in
shlb
jp
daa
scas
sbb
pusha
out
push
jg
mov
jmp
stos
sbb
mov
test
inc
clc
cld
sub
pusha
aas
mov
mov
leave
cs
fisubrl
xchg
popf
mov
mov
cmp
fwait
jge
lret
push
cmp
push
sub
jnp
repz
dec
pop
jle
fcmovne
imulb
mov
outsb
rcl
vmwrite
inc
xor
inc
push
push
xchg
out
xorl
mov
mov
mov
std
xchg
in
mov
call
scas
add
movsl
fisubs
test
push
mov
or
ja
pop
in
inc
repnz
iret
popf
add
popa
iret
inc
jle
aaa
jae
push
movl
sahf
pop
jne
gs
test
repz
sbb
cmp
inc
int3
movsb
cmp
sbb
sbb
mov
sub
xchg
int3
jge
enter
shrb
loopne
push
mov
hlt
and
inc
jg
negb
hlt
sub
jne
xchg
push
lea
cltd
mov
push
cli
mov
cltd
add
adc
cltd
aam
int3
add
push
les
mov
xor
xor
out
adc
pop
repnz
lret
add
subl
cltd
icebp
xchg
pop
fldl
fstpl
orb
mov
xchg
push
and
mov
call
mov
ja
cmpb
mov
cwtl
push
pop
pop
cs
out
mov
pop
es
mov
jg
cld
inc
dec
and
inc
or
push
cwtl
xlat
rorl
hlt
mov
xlat
inc
cmpsb
cltd
pop
fisttps
decl
cmp
fcoml
adc
xor
xchg
jge
dec
add
rcr
mov
emms
inc
inc
mov
data16
inc
add
add
jnp
loopne
pop
stc
push
adc
je
dec
cmp
or
hlt
xlat
jno
stos
jl
pop
fadds
adc
cmpsb
ljmp
mov
xor
das
adc
scas
pop
das
repnz
xlat
mov
push
mov
addw
scas
outsl
test
imul
test
fwait
sub
add
fisubs
push
movsl
sbb
push
jnp
push
push
xchg
and
sbb
test
push
adc
pusha
or
repnz
into
lret
jae
ret
mov
sub
jecxz
mov
xor
das
add
fcmovb
push
add
dec
fsubl
mov
pusha
jl
mov
add
insb
add
push
or
mov
xchg
jne
int3
in
insl
cmpsb
jle
xchg
lea
fwait
pop
lock
dec
inc
jnp
jmp
and
imul
inc
add
rorl
push
dec
sti
xor
testb
nop
inc
xchg
mov
rorl
fidivrs
pop
push
stc
push
pop
ss
clc
jg
add
jg
push
jne
or
cs
stc
push
call
pop
decl
push
dec
sub
ja
negb
mov
mov
dec
xchg
jmp
xchg
add
loope
fisttps
or
xor
add
ret
arpl
and
test
bound
cmp
and
std
and
jo
incl
adc
xchg
adc
decb
mov
das
xchg
push
xchg
xchg
in
cli
cmp
add
adc
test
cmp
xchg
sbbl
js
in
pop
adc
sbb
call
pop
adc
mov
lods
lret
sbb
push
addb
xchg
roll
push
jle
pop
jmp
mov
mov
add
negl
out
mov
xchg
cmpsl
js
mov
xor
cmp
and
loopne
mov
popa
out
pop
dec
aas
shlb
pop
or
inc
les
daa
clc
clc
sub
mov
sub
and
cmc
adc
aad
scas
add
test
loop
js
ja
movzbl
or
ret
nop
adc
xor
cmp
pop
jbe
or
push
lret
hlt
push
movsl
popf
or
pop
ret
sub
imul
imul
inc
rorl
fbld
push
enter
pop
pop
add
das
hlt
call
out
rcrb
mov
int
push
imul
jnp
loop
mov
add
outsl
xor
or
cli
push
jne
mov
scas
cmpsb
pusha
movsl
push
ja
pop
ret
cmpb
or
movb
mov
inc
sbb
cmp
orl
mov
jnp
inc
inc
adc
jb
xor
jmp
add
pop
mov
mov
imul
mov
mov
out
movsl
add
sub
lds
or
mov
lea
lods
pop
jp
mov
mov
sbb
inc
xchg
pop
aas
push
or
add
les
rorl
cwtl
adc
incb
mov
dec
pop
ret
mov
cmp
mov
call
push
cld
stos
lods
jl
pop
push
loop
ret
sub
push
sbb
dec
pop
add
sarb
pop
ss
ret
cmp
inc
sbb
sbb
rcrl
cld
stos
std
popa
loope
adc
pop
ret
sahf
mov
jle
and
ret
push
sbb
or
pop
aaa
cwtl
aad
adc
popa
rorb
shll
adc
or
iret
scas
add
loope
add
cld
dec
clc
jo
cs
xchg
lods
mov
mov
lahf
or
push
inc
loop
loope
push
xchg
decl
dec
mov
jle
pop
ret
inc
es
pop
shlb
push
xor
adc
or
sub
push
mov
jge
inc
test
sub
je
ljmp
out
sub
cmpsl
xchg
ss
jne
and
sub
mov
js
rcrl
cmp
push
mov
sbb
lods
dec
lret
mov
mov
fcompl
in
mov
sub
inc
inc
xchg
lods
push
in
fcoms
in
xor
js
lcall
push
push
fs
and
in
add
add
ret
lahf
xchg
inc
hlt
pusha
enter
lods
jne
lea
push
fnstenv
lea
test
jns
cmp
ds
sub
aaa
or
pop
and
daa
es
push
inc
push
or
and
test
lret
xor
sub
decb
aaa
sbb
inc
mov
push
or
and
leave
pop
adc
sbb
stc
cmpsb
push
pop
movups
rorb
xchg
push
add
pop
pushf
xchg
lea
cltd
inc
xchg
lods
add
xchg
pop
adc
cmp
inc
adc
dec
xor
bound
or
mov
xor
adc
decb
mov
jg
push
jle
pop
idivb
jg
cs
jne
addb
jne
cld
mov
adc
jne
rcr
add
cs
mov
dec
xchg
jmp
lcall
sbb
and
adc
imul
jge
add
js
out
into
lods
fstpl
ljmp
mov
push
imul
and
ret
push
xchg
js
les
in
mov
in
sbb
int3
mov
jo
fcomi
clc
test
jl
scas
push
cli
jne
data16
and
pop
test
mov
jne
add
lea
adc
sub
mov
push
pop
aas
and
xor
aam
pop
sbb
sbb
es
sbb
lcall
nop
dec
das
pushf
cmpsl
jno,pn
or
test
cmpb
xchg
adc
andl
repnz
add
jl
add
fwait
xchg
xchg
loope
faddl
mov
lahf
subb
test
jne
cmp
in
test
addr16
je
cltd
je
rclb
testb
call
testl
pop
and
jbe
dec
adcb
ds
cmpsb
jns
sbb
mov
loop
adc
mov
scas
push
loope
adc
push
inc
adc
call
dec
fdivp
jae
test
movl
and
movb
jge
inc
mov
arpl
jbe
mov
xor
sbb
and
pop
insb
mov
mov
adc
cmp
mov
orb
test
cs
inc
pop
mov
dec
push
nop
xchg
push
test
xlat
sub
dec
cmp
sbb
and
xor
imull
pushf
int3
int3
inc
mov
mov
mov
mov
mov
shl
dec
in
inc
pop
sbb
pop
mov
adc
stos
push
outsb
add
jne
je
push
cmpsl
call
adc
cwtl
fdivs
inc
filds
rclb
stc
mov
in
cwtl
js
pop
inc
psubb
ficoml
scas
xor
sub
add
in
jae
data16
scas
dec
mulb
add
cmp
or
add
mov
xor
cmp
mov
push
mov
sti
sahf
jbe
dec
inc
test
mov
dec
out
cmp
out
add
nop
inc
dec
add
cmp
dec
je
mov
lret
rclb
xor
fstl
adc
mov
das
or
mov
sub
jl
outsb
cmp
adc
push
lret
or
rcl
add
in
push
pop
fistps
les
adc
maskmovq
idivl
sbb
cwtl
mov
addb
jno
lods
sbb
sub
fwait
jecxz
xor
adc
les
nop
orb
xor
loopne
sbb
adc
clc
setl
pop
into
js
push
xor
mov
fdiv
std
nop
push
fwait
insb
das
stos
jp
ret
add
fstps
mov
and
stos
and
jbe
dec
add
fcomp
add
jmp
pop
and
fldl
sbb
outsb
jno
push
add
xchg
or
loopne
fstpl
call
scas
lods
or
xorb
mov
shrb
sub
lret
bound
test
dec
cmp
dec
mov
enter
rolb
jo
push
cmp
sub
xchg
addb
push
and
mov
mov
xor
xor
mov
scas
add
scas
push
cmp
clc
dec
cld
mov
pop
decl
in
movsl
pop
les
fidivrs
mov
fidivl
stos
dec
pop
xchg
push
jno
shr
negb
adc
sbb
or
ret
pavgb
push
ret
adc
lahf
jmp
int3
dec
and
iretw
mov
add
inc
incb
pop
sbb
dec
cli
lods
mov
enter
push
les
or
pushf
mov
lret
in
mov
mov
adc
cmpl
in
dec
loop
lcall
stc
or
in
or
xorb
rcrb
hlt
clc
cld
aaa
lods
lods
sbb
add
or
mov
adc
sbb
mov
sub
jnp
lret
lret
cmp
jg
push
adc
inc
jbe
ret
je
sbbl
test
pop
jne
pusha
or
mov
push
fisubrs
test
hlt
test
or
lock
in
in
pop
xor
les
xchg
sbb
hlt
sti
push
scas
pop
add
ret
jl
daa
rorl
movq
testb
pop
mov
push
sbb
sbb
mov
xor
and
add
add
cmp
sub
xchg
jl
dec
test
sub
sti
rcrl
mov
jne
ja
loope
sti
or
test
movsl
mov
mov
mov
imul
shlb
dec
sbbl
bound
cwtl
lret
into
push
mov
mov
cmp
subb
xchg
stos
or
add
rolb
xchg
cmp
clc
sbb
test
aas
mov
push
push
dec
push
aam
push
sub
xlat
in
cmp
idivl
es
xor
jge
inc
add
lea
jne
repz
push
femms
fcomi
push
aas
scas
add
push
mov
jo
or
mov
loopne
mov
clc
or
add
lock
lock
lock
in
mov
mov
add
mov
push
lcall
inc
adc
and
ret
and
movb
dec
stos
mov
rolb
shr
loope
std
pop
js
adc
ss
nop
mov
lock
aas
and
add
push
push
mov
sbb
mov
sbb
xchg
sub
mov
movsl
add
fwait
jo
sub
data16
mov
fisttpl
jg
inc
je
inc
fildl
jge
push
xor
mov
xchg
ja
push
loopne
jg
ja
xchg
mov
imul
lods
aaa
test
jne
push
cmp
push
push
adc
inc
bound
fbld
cmp
iret
inc
movsb
movb
loop
dec
pushw
inc
pop
add
lea
mov
add
rcrb
hlt
clc
adc
adc
hlt
jmp
rorb
and
aam
and
cmp
jle
test
incb
mov
sub
jle
popa
dec
adc
sbb
mov
pop
pop
lds
gs
jmp
mov
jae
inc
push
add
shlb
mov
or
and
adc
xchg
mov
lea
lahf
pop
pop
arpl
pop
and
fiadds
cwtl
jnp
fidivrs
mov
cmp
inc
or
incl
mov
dec
mov
rcrb
ds
ljmp
addl
stos
aaa
je
and
das
mov
fisubrs
out
cmpl
dec
and
add
fldt
out
mov
jno
mov
ss
add
jo
inc
das
popa
push
mov
in
sbb
mov
enter
lock
mov
lods
inc
push
xchg
or
rcrb
mov
add
jo
adc
adc
or
cmp
incl
pusha
xor
in
jbe
jne
or
cmp
aaa
scas
xchg
or
loop
icebp
push
outsb
test
jle
inc
add
jecxz
push
cltd
idivl
cld
xor
repnz
fadd
pop
push
add
adcl
adc
and
les
xor
mov
mov
jge
inc
mov
sarb
adc
js
sub
and
add
and
and
js
pop
ret
and
add
fadds
imul
sbb
adc
repnz
dec
lods
mov
int3
cmp
sub
pop
out
cmp
leave
mov
clc
dec
call
cmp
movsb
mov
les
jp
mov
mov
mov
mov
incl
mov
cmp
mov
push
mov
mov
or
stos
rcrb
adc
sbb
push
popf
sahf
arpl
adc
pop
fstpl
arpl
je
lods
mov
dec
lock
xchg
stos
adc
shrb
sub
mov
push
popf
dec
push
xchg
sti
sub
mov
sbb
sbb
adc
popa
test
push
dec
adc
inc
out
lea
push
push
mov
sbb
push
push
fldcw
cld
sub
pop
lea
mov
movsl
pop
push
js
in
jbe
pop
mov
xchg
sbb
hlt
jae
cs
jmp
test
xchg
pop
sub
fdivp
mov
insb
out
mov
sbb
xor
rcrl
and
sub
xor
xor
jle
movl
push
and
lahf
xchg
pop
mov
inc
push
adc
aam
inc
add
add
gs
je
and
mov
clc
in
ror
or
jmp
loop
dec
mov
rorb
cmp
lock
shrb
clc
sub
cmpsl
dec
pop
mov
sbb
pop
adc
push
xor
xchg
push
sbb
dec
call
mov
mov
mov
movsl
js
sbb
push
lcall
pop
sub
and
add
shll
dec
cld
jne
and
mov
mov
mov
push
cmp
push
lea
rorb
call
movsl
popf
pop
jecxz
lods
stc
jecxz
push
xor
dec
jmp
xchg
inc
or
xor
repnz
mov
add
pop
popa
adc
lods
andl
jmp
cmc
cld
lahf
pop
ret
repnz
pop
inc
or
dec
jnp
jbe
in
jmp
mov
adc
sub
sbb
jno
enter
fnstsw
add
adc
je,pn
adc
testl
shrb
sbb
jmp
pop
cmp
clc
lea
push
push
push
mov
les
push
nopl
sub
adc
repz
testl
jle
mov
nop
icebp
jo
jae
and
push
mov
sbb
push
adc
or
mov
sbb
enter
push
nop
push
cmpsl
mov
xchg
and
push
mov
mov
std
in
sti
rolb
sub
mov
ja
mov
cmpb
pop
sub
arpl
jnp
div
cmp
mov
lahf
cmp
dec
push
fdivr
dec
sbb
xchg
push
jl
add
shr
cmp
push
jle
lea
jecxz
inc
or
xlat
adc
jae
cmp
push
sub
xor
addr16
shl
or
xor
push
sbb
dec
mov
xchg
pop
icebp
fnstsw
adc
call
mov
inc
add
out
insb
xchg
jbe
dec
adc
fdivl
test
fcompl
or
and
sub
push
test
mov
push
and
add
push
jl
cmp
pop
lret
sbb
adc
addb
or
add
les
cltd
pop
aaa
xchg
nop
pop
adc
dec
dec
adc
mov
jo
jb
and
imul
and
fcoms
add
push
cmpsb
test
les
pop
ret
hlt
gs
mov
mov
or
sub
sub
mov
lret
adc
fcoml
imul
mov
ficompl
imul
jle
or
sub
pop
push
loopne
cmp
mov
adc
stos
mov
xor
cli
inc
sbb
pusha
repnz
xor
int3
movsb
lret
jne
xor
jle
ja
jb
inc
cmp
jbe
lea
pop
in
cmpb
mov
ja
jno
test
xchg
xor
imul
push
adcb
cmp
inc
fs
cmovbe
adc
and
jb
enter
andb
fistps
xor
pushf
xor
jns
push
sbb
or
push
pop
call
pusha
adc
aam
xchg
in
orl
add
or
dec
or
cmp
pop
shrb
mov
xor
jne
or
hlt
subb
icebp
mov
adc
and
mov
pushf
and
pop
mov
cmp
mov
push
lcall
adc
cmp
cli
clc
pushl
or
ds
mov
ror
or
ret
lds
movsl
std
cs
or
test
in
mov
pop
nop
insb
nop
mov
in
cmp
mov
std
jle
sbb
ja
mov
dec
push
jbe
pop
push
pop
js
sub
sub
push
in
pop
jl
repnz
mov
mov
in
mov
cmp
adc
jmp
adc
or
sub
mov
or
sbb
or
and
adc
inc
jne
mov
sub
movsb
cli
aam
xchg
lret
nop
sub
mov
add
fdivs
mov
xor
bound
cmpsb
push
fildll
jmp
sti
dec
addb
mov
incl
and
stos
add
sarb
into
mov
iret
in
mov
cmp
mov
push
imul
bnd
pop
pop
or
fs
cmc
jb
into
in
ffree
nop
jge
cwtl
pushf
xchg
dec
in
inc
mov
lods
dec
jnp
jl
mov
clc
mov
mov
mov
and
mov
add
or
psllw
or
stc
mov
pop
cld
mov
mov
sub
cld
dec
jne
pop
sbb
mov
mov
mov
mov
push
movl
mov
sub
adc
test
ret
jg
fsubs
add
dec
push
push
aaa
xchg
popa
mov
and
decl
add
or
jo
inc
sub
jle
fsubrp
push
movsl
add
and
fst
jl
pop
mov
sbb
fimull
aas
inc
sub
push
mov
dec
xor
test
lcall
imul
aaa
and
cmp
push
sub
jbe
push
sbb
add
add
pop
in
mov
iret
mov
loopne
cmp
mov
loopne
lret
push
mov
fstl
hlt
dec
jb
mov
cmp
and
xor
in
test
mov
jne
mov
jb
cmpb
sbb
or
cmpl
mov
cmp
aad
mov
pop
jge
cs
in
push
outsb
pop
pop
mov
pop
in
in
lds
rclb
pop
lahf
inc
jge
scas
inc
mov
lcall
lods
nop
into
lods
push
sbb
jle
shll
jbe
adc
cltd
sub
sbb
cmp
jl
jg
cmp
jb
mov
in
call
xlat
sub
sbb
cmp
jg
push
clc
jl
ja
inc
sub
ret
bound
in
mov
call
dec
add
daa
fdivrs
and
and
push
push
push
mov
sar
inc
cmp
and
in
shlb
dec
pop
push
jmp
icebp
push
imul
jecxz
shlb
push
insl
or
cmp
inc
cld
push
fdivp
inc
sub
cmpsb
jo
or
rcrl
nop
je
mov
xor
inc
call
push
xchg
ds
lea
mov
inc
or
or
scas
sub
aam
mov
xlat
jge
mov
or
rcr
xor
xchg
mov
daa
jmp
out
xor
lahf
sub
adc
or
cld
lods
or
or
pop
push
sbb
add
push
lcall
cwtl
in
es
sbb
outsb
test
sbb
push
dec
outsl
inc
xchg
mov
pop
or
push
iret
cmp
push
inc
testb
test
pop
addl
mov
mov
inc
inc
xlat
dec
test
mov
and
mov
sub
cmp
test
sarl
or
js
pop
cld
jno
adc
mov
lahf
lea
cwtl
adc
mov
movl
je
cmpsl
lcall
adc
leave
das
imul
fmull
mov
lock
and
push
mov
push
inc
xchg
pusha
fdivrp
movzbl
push
pop
outsb
imul
push
jno
popl
sbb
xor
add
cli
cmpsb
or
int3
cmp
pop
lea
inc
xor
fs
nop
in
or
repnz
dec
movsl
in
nop
nop
xchg
dec
add
popf
adc
or
aaa
adc
in
sbb
and
mov
xchg
mov
cmpsb
and
push
mov
es
push
and
add
dec
sub
cmp
fldcw
push
pop
push
sub
add
xor
insb
fs
test
lcall
cs
dec
push
aad
mov
push
pusha
pop
push
inc
push
mov
ja
inc
out
adc
push
mov
xchg
ret
xor
mov
dec
insb
aas
mov
lods
into
dec
sub
rolb
std
dec
xchg
fadds
movsb
mov
dec
aas
pop
lea
lcall
in
movb
xor
cmp
dec
ret
testb
pop
mov
mov
popf
std
repz
add
pop
mov
jl
insb
push
or
cmpsl
fisubl
pop
sub
nop
shlb
ss
sbb
add
mov
dec
ret
scas
adc
cmp
subb
push
es
push
mov
and
pop
cmp
je
push
loope
push
lret
adc
fstl
sbb
rolb
mov
inc
xchg
pop
adc
mov
rorb
and
fdivs
cmp
xchg
cmpsb
imul
ja
xor
rclb
inc
sbb
push
mov
fdivl
movsb
cli
mov
cmpsb
sbb
dec
push
and
pop
rcrl
aas
mov
mov
push
clc
call
mov
ficomps
idivb
inc
and
dec
mov
inc
mov
pop
test
or
add
xchg
dec
cmp
adc
inc
adc
jae
and
repz
push
mov
cld
jmp
pop
dec
enter
sti
pusha
sub
scas
mov
pop
js
bswap
out
mov
pop
mov
xchg
jle
decb
mov
sbb
mov
jbe
loopne
cmp
pop
cmp
xchg
mov
fwait
or
test
jne
push
push
loopne
jle
push
mov
test
jbe
mov
sbb
push
jbe
in
es
xlat
fists
rcrb
sbbb
adc
mov
xchg
push
shlb
mov
mov
xchg
incl
xor
and
or
pop
int3
push
mov
mov
lock
and
mov
xor
mov
cwtl
sbb
mov
xor
pop
inc
jne
mov
rorb
or
orl
dec
jnp
mov
je
pop
insb
inc
adc
cmpl
jle
mov
jbe
pusha
mov
xor
push
loopne
int
imul
add
cmpl
push
xchg
int
ja
iret
movsl
xor
icebp
dec
inc
fisttps
movb
inc
lcall
mov
jge
adc
adc
add
pop
mov
jl
cmp
mov
rorl
test
add
add
push
jo
dec
inc
sahf
je
mov
into
xchg
sarl
sbb
mov
push
inc
mov
icebp
lds
push
fmuls
aam
lcall
pop
call
cmpsb
shrb
xorb
adc
pop
mov
aas
scas
mov
jg
cmp
movl
adc
mov
cmp
mov
sbb
xchg
loope
cltd
in
push
mov
or
out
push
addl
test
inc
cmpb
les
insb
ljmp
push
dec
hlt
mov
push
xchg
push
ss
test
pop
mov
call
xor
pop
mov
aas
push
xchg
push
sub
roll
sbb
ret
bnd
sbb
or
test
rcl
cmp
cmp
jmp
mov
inc
cmp
inc
lods
inc
ds
xor
xorl
lret
push
mov
nop
imul
pop
lds
imul
imul
arpl
cmpsb
and
stos
push
adc
xor
inc
jp
insb
test
push
aaa
cmp
inc
push
pop
xor
jne
push
push
movsl
mov
push
adc
or
add
lods
call
pop
cmp
lahf
sbb
mov
sahf
inc
push
imul
std
inc
push
inc
jb
pop
mov
xor
or
and
or
out
xchg
cs
test
jne
mov
mov
test
adc
jns
cld
push
cmc
adc
fiaddl
aad
xor
xor
inc
cmp
jbe
and
dec
push
sbb
adc
pop
loop
adc
jae
jb
lea
fcompl
and
rorb
sub
mov
xchg
pop
jnp
mov
sbb
mov
mov
push
sarb
jb
adc
sbb
adc
lods
mov
nop
lret
and
add
dec
mov
shrb
mov
popf
mov
cltd
lea
adc
out
push
inc
cmp
dec
mov
adc
repz
dec
inc
fnstsw
insl
clc
in
and
mov
mov
js
xor
and
or
mov
shrl
lret
mov
movsb
xchg
sbb
or
push
and
and
xchg
inc
test
add
sbb
lea
imul
jno
fists
add
clc
cmp
je
testb
sbb
inc
iret
push
es
test
inc
enterw
add
adcl
decl
xor
lods
mov
cmp
push
cmpsl
in
jo
pop
jl
xor
push
mov
xchg
fistpll
icebp
je
sub
fldl
je
in
jo
jo
insb
lods
mov
jmp
aas
fistpll
jne
cmp
stc
pop
adc
inc
dec
xor
inc
push
or
int3
or
in
push
test
xor
sub
add
sub
and
sarb
loop
or
jne
orl
mov
and
mov
pop
sarl
lock
lock
pop
mov
mov
out
xchg
and
or
push
inc
push
xorl
and
push
fldenv
mov
mov
movb
cmp
sti
pop
and
mov
cmp
jb
test
push
mov
push
inc
loop
sub
or
push
xchg
push
add
and
test
shl
movsb
cmpsb
rorb
aaa
add
adc
push
cmp
cmpl
bound
aas
sbb
dec
mov
add
ret
lret
cmp
aas
mov
outsb
lods
push
mov
in
xor
fists
sbb
add
cmpsb
pmulhuw
inc
int3
test
jns
or
loop
dec
add
add
stos
xor
and
pop
outsb
aad
mov
mov
mov
dec
nop
cmp
clc
sub
push
jo
jg
sarb
add
push
jbe
adc
cmp
mov
mov
push
inc
clc
push
add
push
js
rclb
dec
je
sub
shr
lea
aas
repnz
jae
stos
lahf
cmpsb
js
push
fmuls
mov
pop
mov
xor
pop
ss
jbe
mov
and
lods
jne
xor
pop
mov
and
push
or
or
ret
addr16
stc
push
push
and
mov
or
in
mov
aaa
add
ret
sub
aam
enter
jmp
mov
test
cmp
or
mov
mov
sbb
xlat
shlb
sar
inc
lcall
aas
dec
jne
jno
adc
push
lret
dec
add
mov
faddl
loop
dec
jmp
inc
jmp
pop
push
test
jle
jmp
lahf
push
push
sbb
in
mov
pushf
push
mov
mov
daa
dec
mov
pop
pop
loop
popf
rclb
or
rcll
jge
pop
fiadds
fnstcw
pop
movsb
or
dec
mov
sbb
cwtl
dec
or
push
add
int
inc
xor
jne
lret
dec
rorb
mov
js
sbb
pop
lods
xchg
mov
clc
pusha
mov
xor
add
and
sub
and
aas
pop
mov
sbb
mov
aas
sub
mov
aam
icebp
sbb
cmp
lods
sarb
icebp
jbe
cli
loopne
push
push
insb
repz
sub
sbb
rorb
jge
out
scas
test
and
cmpl
push
sar
loopne
stos
xor
and
movl
ret
repnz
add
mov
mov
or
push
add
call
push
push
stos
jnp
add
dec
rolb
pop
inc
scas
lds
cmpsb
mov
dec
pop
push
cmpsb
fisttps
mov
loopne
lcall
and
adc
cmp
jl
adc
mov
jb
in
mov
idivl
mov
lea
cmp
stc
adc
daa
adc
data16
jl
push
pushf
sub
sub
sbb
mov
jmp
jbe
jmp
icebp
lret
inc
jmp
cmpsl
mov
inc
loop
add
in
sahf
sub
jecxz
inc
fidivs
in
test
add
dec
jbe
je
dec
loope
shl
mov
xor
jne
loopne
js
mov
gs
dec
or
data16
pop
inc
outsl
mov
mov
push
pop
dec
push
push
inc
ja
jp
push
or
or
push
jmp
aas
test
mov
and
push
and
jo
in
call
inc
jnp
call
mov
inc
mov
or
add
or
sbb
jl
lea
adc
out
push
shl
cmpsl
ds
mov
test
xor
test
mov
insb
lock
mov
inc
popa
push
push
inc
sub
inc
stos
ss
outsl
inc
inc
xor
and
or
mov
fdivrl
icebp
inc
jbe
xor
insl
flds
imul
and
test
adc
cmp
or
mov
shll
ja
loop
or
lea
jbe
aas
mov
cmp
jb
jmp
clc
shld
sub
cmp
jae
push
sub
add
push
test
dec
and
aaa
mov
jnp
mov
xor
shrb
or
aas
cmp
scas
xchg
imul
aas
cmp
mov
add
or
add
sub
movsb
mov
mov
mov
and
adc
push
jmp
adc
push
inc
xor
push
dec
pop
push
movb
push
sbb
sub
mov
push
push
es
int3
inc
lds
fcmovu
dec
lcall
lea
shr
inc
inc
sahf
jle
jle
decb
mov
or
push
add
clc
rdtsc
rorl
sbb
fstpl
aas
mov
lcall
inc
test
sbb
mov
mov
rcrb
jg
aas
pop
lock
not
and
ss
test
and
or
add
cmp
pop
add
push
rol
add
and
inc
rorl
xlat
add
sti
mov
mov
push
mov
call
mov
sub
repnz
loop
xor
les
and
int3
add
std
and
mov
not
xor
add
lea
into
or
repnz
imulb
dec
not
and
cmp
jge
or
add
fiaddl
scas
cmc
jmp
int
push
loope
insb
cli
mov
and
jne
loopne
sahf
lea
movb
xor
fwait
adc
pop
adc
test
fdiv
out
stc
add
cwtl
subb
mov
aam
loope
scas
testl
in
in
pop
incl
ret
pop
mov
stc
jae
and
nop
imul
dec
dec
repnz
jno
std
fbld
fsubrp
and
or
enter
and
loopne
mov
cmpsb
data16
insl
pop
xor
clc
mov
hlt
push
and
mov
fisubrs
lds
and
in
add
fst
inc
mov
rorb
pop
aas
sbb
imul
es
jbe
stc
rol
mov
imul
sbb
mov
cs
imul
sbb
loope
pop
adc
mov
ret
xchg
gs
add
jnp
jle
inc
add
jmp
in
fdivr
xor
and
int3
out
pop
sub
loop
enter
or
fs
repnz
loopne
call
and
adc
lret
hlt
pop
aaa
ret
loope
pop
es
imul
xchg
adc
inc
cmp
xchg
inc
in
jmp
das
pop
enter
clc
mov
xor
fsub
flds
outsl
addr16
sti
insl
jg
in
mov
mov
loopne
ret
mov
inc
cmp
incl
lret
xor
pop
loop
int
faddl
sub
mov
jno
popa
popf
insl
scas
adc
cli
mov
mov
data16
in
shrb
stos
pop
inc
ljmp
test
lods
jmp
xor
xor
add
fildll
repnz
dec
mov
lret
sub
outsl
jg
jo
mov
lret
add
add
jle
sub
lods
call
icebp
xor
xor
ljmp
mov
enter
out
aam
adc
sahf
fidivl
fcomps
stc
adc
or
rcll
add
rcl
shrb
in
xchg
in
mov
inc
xor
jl
pop
mov
pop
push
mov
lods
into
inc
or
repz
rcll
push
sub
dec
rep
and
scas
pop
xchg
ljmp
inc
or
sahf
mulb
sub
ja
and
xor
sub
cli
sarb
mov
enter
ret
pop
pop
gs
xchg
int3
or
lods
mov
out
test
mov
pop
test
fmull
test
clc
loopne
sub
or
jae
aam
inc
add
lock
or
iret
fs
or
pop
int3
mov
cmpb
mov
sub
negl
out
xor
mov
mov
push
iret
mov
lret
shlb
std
test
add
stc
dec
outsb
mov
xchg
roll
inc
cmp
jae
fisttpll
or
inc
cmp
cmp
add
addl
popa
or
enter
faddl
shl
or
inc
js
mov
js
adc
mov
in
inc
jbe
lock
jne
xchg
xor
push
in
and
jg
add
test
aas
stc
imul
aaa
xchg
imul
push
push
inc
xor
xor
jbe
ret
add
push
push
cmc
adc
xor
iret
mov
adcl
or
cmpl
push
sarb
pop
add
mov
subl
outsl
sub
fildll
and
dec
mov
fbstp
and
inc
inc
lods
adcl
pop
sbb
cmp
mov
or
je
pop
jae
push
push
and
sub
mov
and
dec
push
jmp
or
pop
imulb
test
js
xchg
push
push
push
jg
sbb
sub
push
ss
cld
pushf
push
push
data16
hlt
arpl
or
push
pop
shrb
incb
fdivr
jmp
popf
notb
adcb
sbb
insb
aaa
test
push
push
movsl
cmp
inc
outsl
cwtl
add
push
lods
push
jo
out
push
adc
inc
shrb
jo
cld
mov
jle
add
mov
xor
push
das
or
push
jg
rorb
out
sbb
lock
test
mov
mov
imul
inc
pop
and
arpl
bnd
push
mov
sarl
sbb
js
add
gs
les
jae
push
sbb
add
push
pop
and
rcrl
inc
mov
rorb
fcmove
shlb
or
and
sbb
xor
adc
dec
push
inc
pop
inc
xchg
loopne
inc
jl
ret
xor
mov
inc
cmp
aas
mov
sbb
mov
int3
sub
xchg
loope
lock
dec
sti
sbb
mov
push
sub
fmull
out
inc
or
je
dec
jae
lock
pop
fidivrl
pop
addr16
sbb
xchg
in
test
movb
cld
adcl
cmp
mov
cs
push
cmp
and
out
shlb
and
test
cld
xor
scas
adc
dec
test
xor
loopne
mov
ja
cmp
fldenv
fmull
ss
pop
scas
or
sbb
jb
adc
or
dec
int
xchg
int3
cmpsb
inc
push
inc
and
xor
mov
out
loop
mov
sub
mov
xor
push
or
popa
dec
mov
push
sub
lea
mov
pop
pop
mov
dec
lods
jle
dec
in
fs
test
int
pop
inc
sbb
leave
add
movsl
es
pushf
xor
mov
in
popa
add
dec
jmp
enter
push
cli
je
push
das
push
movsl
mov
sub
popf
rcrb
mov
rolb
pop
cmp
cli
pop
jmp
xchg
push
js
dec
or
sbb
test
and
loop
jl
sub
clc
sbb
mov
loop
mov
movsb
xchg
mov
inc
or
or
adc
es
mov
xchg
xchg
mov
insb
addb
popf
out
mov
xor
pop
imul
mov
cmpsl
push
pushl
aad
xor
filds
mov
test
cs
ja
cmpl
insb
aas
cli
popa
mov
inc
ja
cli
pop
mov
pop
sbb
and
cmp
iret
lret
je
adc
repz
test
je
orl
jg
sbb
sbb
loop
adc
jecxz
movb
inc
mov
add
mov
add
xor
push
insl
dec
js
ret
add
repnz
rolb
fucomi
jb
jg
mov
lds
pop
add
je
inc
call
adc
cmp
or
cmp
popa
lods
pop
fst
inc
or
xchg
push
sbb
xor
out
pop
xchg
subl
or
cli
sub
dec
in
fists
pop
jae
add
ss
xor
ds
dec
aad
xlat
xchg
fnstenv
pop
push
pop
pop
orb
popa
filds
fimuls
or
add
data16
jno
mov
push
sbb
addr16
imul
inc
or
call
push
push
jbe
pop
sbb
push
push
mov
daa
cmp
push
sub
and
xchg
jno
pop
or
les
or
arpl
push
xor
push
lds
jns
sub
in
inc
xchg
cmp
sahf
mov
xor
sbb
sbb
jecxz
mov
hlt
movl
xchg
dec
xchg
xlat
add
mov
pop
add
ficoml
xor
call
mov
xchg
scas
pop
and
cmpsb
pop
mov
nop
decb
scas
dec
js
cmp
pop
pushf
dec
rolb
sub
loop
push
adc
cmp
dec
jns
pop
pop
cmpsl
or
icebp
pop
xor
push
adc
jbe
adc
mov
sbb
lods
xchg
jl
aas
mov
adc
adc
pusha
and
into
cld
fbld
sub
scas
xor
dec
inc
lret
jmp
or
xor
out
xor
or
sbb
inc
add
dec
or
sarb
dec
rorl
sbb
dec
test
inc
sbb
fnsave
cwtl
fwait
adc
or
mov
push
jmp
or
pop
das
add
sbb
xlat
jmp
jo
push
clc
mov
movsl
test
enter
xchg
outsb
pop
aas
push
and
je
cld
jne
fistpl
fstps
xor
adc
aam
adc
sbb
mov
mov
cmp
or
into
decb
jbe
gs
je
mov
jno
dec
clc
mov
out
jne
add
popa
or
aas
pop
mov
mov
push
mov
sub
addl
add
or
add
add
add
and
fistpl
push
mov
dec
loopne
mov
xor
ja
dec
jmp
pop
jmp
movsb
jg
dec
adc
hlt
jmp
cmp
jbe
rolb
mov
ret
push
ss
je
pop
and
and
dec
out
and
mov
jne
mov
negl
adc
jmp
xor
add
jb
rep
ficoms
aaa
lods
rorb
inc
push
mov
jb
fmull
or
test
push
cmp
jnp
repnz
loopne
push
fs
and
inc
push
in
ficompl
and
mov
mov
mov
or
lods
adc
and
mov
mov
push
imul
pushf
sbb
xchg
mov
mov
mov
lods
push
movsb
jmp
jns
pushf
xchg
mov
inc
in
iret
repz
call
cmp
repz
hlt
clc
clc
repnz
or
add
sbb
jmp
outsb
clc
or
and
mov
ret
nop
inc
sbb
pop
sti
and
mov
pusha
and
lea
add
cmp
pop
and
std
cld
mov
insb
adc
fsts
xchg
mov
adc
out
in
pop
nop
adcb
push
int3
fiaddl
jl
lret
fisubs
add
sahf
inc
push
out
push
add
xchg
push
mov
roll
pop
add
loop
mull
cmpsb
adc
push
lahf
out
sahf
xor
inc
dec
push
arpl
out
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
xor
test
and
daa
mov
fistl
mov
adc
outsl
pop
add
cmc
sub
sar
dec
pop
ret
adc
inc
adc
minps
cmpsl
sub
dec
icebp
mov
push
cli
adc
sub
das
loopne
nop
in
jne
push
add
fstps
push
pop
xor
das
cmp
lock
xor
add
cmp
jb
push
pushl
adc
sub
pop
sti
incl
inc
adc
je,pt
sar
push
lea
call
or
cmp
sbb
mov
push
push
push
mov
sbb
add
dec
mov
xor
inc
test
pop
or
push
pop
xchg
sub
loope
mov
nop
into
push
fs
or
xchg
andl
into
jecxz
arpl
jne
cld
or
inc
mov
shl
push
mov
push
lahf
pop
push
jo
sar
add
neg
sbb
push
pop
mov
inc
pop
les
lahf
add
push
xchg
dec
insb
mov
or
cmpb
push
cmp
out
fwait
mov
test
jne
dec
addr16
mov
xor
lea
shll
mov
lock
jne
addl
add
or
lea
mov
inc
lea
xor
dec
cmp
push
sub
add
es
outsl
jae
add
adc
cmp
rorb
std
mov
inc
stos
les
push
daa
pop
addb
adc
shlb
adc
cmp
fistpll
or
in
cmp
icebp
js
push
loop
lret
inc
add
inc
sbb
pop
sub
or
sarb
fs
sbb
cmp
je
jmp
and
fucom
movsl
shlb
push
push
pop
add
and
in
bound
add
lods
sbb
add
sub
das
pop
xor
sbb
sbb
add
pop
imul
cld
pop
lahf
test
pop
push
cs
mov
sub
js
dec
lcall
mov
push
rcl
je
ret
aam
jmp
inc
shl
push
into
xor
movsb
ret
and
je
dec
fstp
or
imul
out
mov
jne
popa
lret
mov
inc
cmp
jo
or
pop
icebp
mov
fistl
sub
jo
push
fdivl
and
imul
icebp
inc
or
pop
stos
pop
pop
jmp
jno
in
aad
test
out
imul
std
jo
add
inc
or
or
jmp
add
or
mov
scas
pop
loope
jle
ljmp
idivb
jne
jno
int3
ljmp
je
mov
adc
lahf
adcl
sbb
mov
push
pop
adc
int3
push
jb
pop
lahf
xlat
fistps
adc
pop
sbb
pop
push
jbe
movsl
or
jne
dec
xchg
lods
mov
push
sbb
pop
lods
add
sub
call
loop
stos
jb
cmp
adc
push
cmovs
or
and
pop
shll
or
push
fistl
test
lds
sub
or
cmp
jae
mov
loopne
add
jb
into
ja
xor
outsb
shlb
xchg
push
test
add
xchg
aaa
pop
mov
push
and
pushf
ss
cmp
mov
pop
dec
jl
cmpsb
jp
adc
inc
adc
sub
mov
ret
fdivr
add
shrb
loope
fbld
clc
mov
fmull
fadds
call
xchg
dec
mov
sbb
pushl
ret
fdivrp
out
and
lahf
xchg
test
ja
and
push
je
mov
stos
mov
stos
outsb
lahf
mul
in
sub
jae
add
add
out
loopne
loopne
or
pushf
loopne
push
fsubrs
lods
hlt
sub
inc
cmp
imul
arpl
aas
je
dec
stos
pushf
ljmp
xchg
or
cmp
pop
sub
dec
mov
sbb
jnp
sbb
imul
mov
int3
pop
mov
nop
inc
test
sub
pop
pop
sub
or
sub
mov
pop
pop
fs
cmp
inc
add
call
jo
xor
adc
stos
jp
push
push
outsb
dec
mov
stc
icebp
or
sub
mov
and
and
and
adc
push
add
aaa
test
push
push
push
adc
je
and
mov
mov
add
sub
je
xor
hlt
lahf
ret
lea
jl
mov
iret
enter
pop
add
jae
and
cmovle
test
or
insl
cmpsb
jp
jno
sbb
add
add
leave
add
and
enter
pop
fisubs
or
xchg
or
or
pop
leave
jae
cld
add
or
jns
sbb
or
or
push
or
or
or
leave
ror
or
push
repnz
push
push
jb
cmp
xor
xchg
stos
mov
pop
adc
sahf
adc
cmp
repnz
int
push
adc
dec
in
stos
add
adc
and
xchg
adc
adc
jb
fs
push
add
pop
pop
in
lcall
sbb
cs
sti
add
cmp
fmul
xchg
cmp
sbb
mov
sbb
sbb
jns
sbb
push
sbb
push
repnz
sbb
repnz
push
inc
negb
clc
incl
in
jne
add
add
sub
cmp
jae
sbb
movl
xchg
mov
shrb
cs
mov
in
push
in
imul
sub
rol
adc
sahf
addr16
fsubp
xor
mov
addr16
mov
jbe
aas
sub
call
xchg
mov
pop
and
sahf
call
cmp
cmp
push
jmp
setbe
enter
xorl
jb
out
repnz
in
cmp
mov
pop
leave
xor
out
xchg
out
out
sbbl
scas
fs
lock
icebp
sahf
xchg
sub
das
repnz
addr16
adc
repz
sub
in
std
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
and
cmpsl
div
add
testl
lret
gs
clc
sbb
leave
xor
or
repnz
cli
add
cmp
sti
sti
fdivrp
push
ss
cld
cld
je
cld
push
push
aaa
and
jne
mov
xor
sbb
or
sahf
xor
jge
lret
cld
dec
ljmp
ror
sarb
faddp
lea
xchg
or
shlb
cmp
lods
adc
jecxz
xchg
ja
adc
cmp
scas
jbe
mov
sti
pop
xor
adc
sti
push
adc
out
out
xchg
repnz
call
mov
inc
jo
or
dec
jmp
jmp
pop
push
lea
cltd
or
or
or
cli
out
out
out
add
mov
and
cli
cli
and
orb
mov
xchg
push
leave
and
cli
stc
cmpsb
jb
imul
mul
push
xchg
div
mov
xchg
inc
repnz
jb
cmp
mov
push
stc
sbb
dec
push
sti
sti
sti
xchg
or
cmp
jmp
stos
enter
cmp
or
mov
ljmp
pusha
lods
mov
push
and
loop
arpl
loope
setb
inc
clc
and
orb
out
stos
or
fdiv
pop
leave
or
sahf
in
rcll
sub
pop
push
lret
push
mul
testl
testl
xchg
das
test
adc
mul
scas
testb
and
testb
repnz
inc
mul
sub
testb
rclb
mov
mov
jo
dec
leave
xor
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
pusha
rcrl
push
data16
pop
popf
xchg
adc
add
stos
adcb
adc
push
push
movsl
imul
in
loop
pop
hlt
shll
or
cmp
hlt
in
add
repz
leave
and
repz
xchg
cmpsb
jb
or
and
repz
inc
xlat
dec
repz
out
inc
or
in
xor
in
xlat
repnz
repnz
inc
or
icebp
leave
sub
repnz
subl
repnz
jb
popa
sbb
add
xchg
cmc
mov
leave
xorl
or
mov
jne
cmp
xor
cmovle
sub
adc
or
aad
pop
mov
test
cltd
mov
mov
int
stos
test
push
sub
ffreep
movsl
inc
loope
push
inc
add
mov
aaa
inc
cmp
cmp
push
repnz
fcoml
mov
adc
jbe
mov
stc
xor
jmp
push
ja
mov
fists
add
add
and
js
mov
enter
sub
flds
inc
adc
sub
int
rorl
and
sub
and
add
sub
pop
stos
and
daa
data16
mulb
cmpsl
fldcw
sub
push
popf
and
out
jns
pop
js
call
mov
push
in
add
shrb
mov
pop
lcall
mov
mov
dec
clc
mov
xor
flds
sub
mov
test
add
mov
shl
add
or
and
js
push
rep
mov
dec
jo
ds
je
adc
push
testl
xor
jge
loopne
mov
ss
jne
xchg
adc
xor
dec
je
cmp
xchg
pop
shrb
shl
or
shr
mov
leave
data16
sar
or
js
or
pop
jp
jl
pusha
xor
push
shl
jne
cld
sbb
add
jmp
cmp
push
in
jbe
cmp
push
dec
or
dec
mov
jb
sbb
adc
or
sbb
aaa
lods
or
add
cmp
and
test
andb
clc
fstl
pop
push
pop
mov
mov
add
sub
or
jae
lods
jle
push
adcl
cld
mov
out
movsl
rol
add
aad
cs
add
jne
aaa
out
push
push
sub
jo
cmp
mov
js
fisubrs
add
pop
pop
or
and
into
jg
jl
pusha
add
mov
cwtl
fsub
push
pop
adc
adc
xor
push
imul
loopne
out
les
icebp
mov
xor
push
rolb
add
mov
or
mov
jbe
and
pushf
in
adc
in
sbb
fimull
cmp
mov
inc
adc
jge
push
mov
leave
fstl
and
mov
or
fldcw
push
or
scas
in
pop
add
xchg
jo
test
push
push
adcl
ljmp
jne
cmp
pop
clc
cmp
xchg
add
xlat
cmp
sub
add
and
clc
and
fadds
sub
inc
mov
enter
out
out
sub
push
scas
jmp
rolb
in
xchg
cmp
inc
dec
dec
add
in
inc
sbb
ds
xorl
adc
imul
mov
decl
jmp
push
popf
xchg
pushf
adc
cmp
xor
pop
and
adc
jo
or
cmp
js
add
loope
and
test
test
pop
or
jl
and
aad
inc
shlb
xchg
rorl
xchg
jb
ret
jmp
add
xchg
pusha
adc
fstpl
dec
ret
pop
fsubr
xor
scas
lret
insl
jle
out
roll
sbb
into
cmp
and
xchg
ret
adc
xchg
sub
and
cwtl
or
push
cmp
cmp
or
pop
jne
ret
or
sbb
movntps
sti
push
ret
fidivl
aam
adc
out
inc
mov
adc
pop
or
lret
pop
mov
clc
sbb
fcomp
mov
adc
test
add
mov
jne
add
and
stos
and
in
xor
xor
idiv
insl
mov
test
call
xor
cmpsl
test
je
sbb
lret
jb
and
std
cld
cmc
aas
loopne
cmp
sti
loopne
outsl
push
push
pop
mov
push
and
push
push
xor
push
jle
ret
add
or
or
fnsave
jo
push
outsl
loopne
xor
push
pop
cmp
loop
or
test
xor
push
jmp
inc
cwtl
cmp
mov
loope
or
jmp
sti
xchg
push
jo
push
mov
leave
enter
and
push
out
push
xor
jmp
std
jmp
adc
or
sbb
out
std
retw
push
mov
xlat
jmp
fisttpl
xor
cmpb
push
daa
test
jo
mov
in
sbb
mov
sub
mov
mov
xchg
dec
adc
pop
pop
pop
ret
aaa
mov
xor
push
pop
mov
mov
sub
adc
dec
pop
adc
rol
mov
or
add
pop
inc
loopne
mov
adc
daa
jle
xor
test
cmp
lret
addr16
aas
rclb
jne
cmp
jne
jl
xor
out
fidivl
adc
sbb
sbb
imul
and
and
inc
sub
mov
icebp
enter
dec
es
data16
ja
inc
cmp
cmpsb
mov
sbb
jb
push
loope
into
stos
push
movsb
mov
push
mov
into
jmp
mov
rorb
sub
popf
and
lcall
pop
push
pop
das
je
or
cs
lods
and
adc
inc
jne
je
jbe
and
add
outsb
sar
xchg
jbe
fcoml
adc
mov
ret
jmp
adc
fisubl
fwait
cmp
fidivl
fnstenv
aam
iretw
or
ret
jg
jbe
ja
sti
incl
je
sub
sar
cmp
jbe
push
push
mov
and
sub
andb
rcr
xchg
push
jnp
and
lock
mov
add
or
xor
lcall
and
and
and
ljmp
std
push
pop
mov
lahf
lea
mov
jmp
inc
cld
jne
das
and
test
ss
mov
leave
mov
aam
enter
adc
insl
cmpsl
sbb
dec
sbb
dec
les
adc
adc
lret
daa
std
adc
in
mov
mov
ret
xor
push
or
movsb
dec
popf
push
loopne
pusha
loope
inc
cmp
or
pop
or
out
jo
sbb
out
fs
outsb
push
aam
mov
mov
jo
xor
sbb
xchg
sarb
cmp
call
inc
xchg
push
pop
add
push
add
scas
xor
and
les
push
iret
das
xchg
pop
push
push
pop
xor
push
scas
add
pusha
dec
dec
mov
rolb
inc
or
jae
dec
mov
ret
aam
and
aas
xchg
mov
out
jmp
mov
push
push
push
repnz
ja
fldl
jge
xor
int
test
add
sub
pop
dec
scas
leave
imul
into
cs
les
sbb
cmpb
cld
cmpsb
jae
imul
jge
scas
jge
push
push
mov
adc
iret
push
jo
call
push
push
sub
out
mov
xchg
push
cltd
push
movsb
pop
cmp
ret
scas
jmp
loope
or
addr16
sub
and
sub
pusha
xor
sbb
push
mov
or
sbb
loopne
cmp
scas
jg
sub
pop
inc
ret
shll
loope
and
pop
push
cmp
xchg
movsl
pop
push
in
or
mov
scas
cmpsb
insb
inc
imul
xor
inc
into
jmp
jle
xor
or
inc
xchg
add
insb
imul
and
pop
lock
rorl
or
add
and
jne
cmp
je
dec
and
push
dec
xor
je
pusha
jmp
mov
jnp
jge
adc
push
jne
adc
xchg
sbb
lock
add
fmuls
jne
or
jno
ret
ret
push
add
mov
adc
push
add
mov
add
lock
jae
aad
mov
rolb
mov
dec
pop
jae
rorl
aad
sbb
adcl
into
xchg
test
push
lock
and
jbe
jne
xor
add
sbbl
and
xor
adc
jne
sar
lea
ss
pop
shl
add
mov
negb
hlt
incl
rclb
jns
movsbl
and
sti
add
movsl
stc
cmp
je
addb
outsl
fildll
dec
add
add
cmp
xchg
lea
outsl
es
mov
and
or
mov
jmp
sub
mov
add
jmp
xor
sar
jne
mov
add
adc
inc
sub
sub
mov
inc
or
cwtl
fcoml
mov
jnp
cmp
or
mov
push
insb
pop
cmp
adc
mov
cmp
jecxz
cmp
sbb
sub
shl
lds
xchg
clc
pop
fs
inc
xor
loopne
je
push
pop
in
lcall
sub
lcall
bound
jmp
mov
andl
mov
sub
sub
or
dec
sbb
sbb
rcll
jnp
mov
in
mov
test
mul
ja
imul
inc
or
sbb
stos
cmpsb
dec
add
push
mov
je
fisubs
pop
jle
push
cmpsb
xchg
out
mov
loope
push
je
inc
test
js
fdivs
dec
pop
sub
pushl
sbb
jle
ds
add
jmp
cmp
or
es
or
cmpsl
mov
mov
cmp
jge
jb
fisubs
les
cmp
sub
jge
add
dec
js
xor
add
lret
ja
enter
or
or
in
shlb
xor
insb
mov
push
sub
es
js
add
mov
add
push
inc
sbb
orl
push
or
inc
adc
jmp
sub
test
and
push
sbb
dec
or
sbb
xchg
inc
insl
repnz
gs
xlat
mov
rorb
jmp
loopnew
cmp
jns
mov
and
jmp
lock
je
pop
rorb
pop
cld
testb
jne
push
xchg
sarl
cmp
aaa
sbb
push
fidivl
rol
cli
add
loope
xchg
fst
test
mov
add
push
jg
sub
sbb
stc
add
cmpsb
push
loopne
lea
push
pusha
cmp
mov
in
or
les
mov
dec
adc
shrl
pop
cli
push
push
mov
dec
pop
xor
push
or
cmp
jle
add
and
test
adc
scas
ljmp
icebp
jle
push
push
gs
xor
test
jns
std
add
loop
inc
pop
mov
sbb
cli
jo
dec
cmp
pop
cmp
or
call
shr
das
inc
je
jmp
cmp
ja
scas
fstl
iret
mov
pop
cmp
add
mov
test
push
adc
add
mov
imul
les
jge
loopne
xor
add
cmp
xchg
push
je
js
lret
or
lret
sub
mov
cmp
mov
test
aas
mov
push
or
cmc
xor
fwait
push
jl
cmp
cmp
cmpb
je
xor
adc
mov
test
icebp
iret
push
data16
popf
pushl
push
jae
sbb
mov
sbb
xchg
mov
adc
jns
add
loop
call
sub
add
or
mov
in
icebp
and
adc
and
out
popa
in
adc
adc
lret
jne
jp
adcl
ja
cmp
xchg
mov
dec
cltd
movsb
jge
push
shrb
arpl
and
add
int3
sti
add
or
jmp
data16
movd
rolb
into
int3
mov
push
je
or
cmp
add
xchg
fdiv
pop
pop
xor
sub
call
pop
mov
push
jl
adc
cli
movsb
mov
push
push
lock
into
dec
mov
andl
jl
stos
or
inc
sbb
into
adc
loop
push
mov
pop
or
sbb
push
push
pop
fmull
xchg
in
sbb
xchg
mov
pop
adc
dec
jp
subl
jo
out
cld
std
add
aam
jecxz
dec
jo
lcall
push
push
pop
sbb
aas
and
inc
int3
mov
mov
mov
xor
inc
push
xchg
mov
loopne
or
dec
lock
sub
shrb
dec
mov
inc
sub
ror
sub
mov
aad
mov
and
and
push
js
jge
sbb
orl
dec
mov
movsb
into
push
pop
fdivp
inc
test
add
dec
push
and
mulb
inc
or
out
test
hlt
push
dec
push
mov
jno
ret
nop
sub
push
mov
out
fucompp
mov
mov
aaa
loopne
scas
or
enter
das
add
cmpsl
cmp
add
fnstcw
int3
cmpb
shrl
cmp
call
and
out
shrl
pop
std
or
cmp
jbe
mov
roll
sub
leave
jnp
shrb
sbb
das
mov
pop
or
ffreep
loop
outsl
andb
inc
jne
cmp
je
xchg
lock
clc
cmp
pop
rolb
ljmp
sbb
pop
ljmp
and
xor
sub
or
mov
jo
push
push
sbb
adc
mov
test
adc
push
mov
dec
cmp
mov
or
cld
mov
jmp
testb
mov
push
clc
push
enter
or
cli
add
fidivrs
je
push
push
loope
fwait
call
or
sbb
push
or
subl
cmp
into
test
cmp
jle
inc
je
test
mov
aad
pop
lock
aam
out
nop
xor
iret
outsl
xchg
mov
je
jno
js,pn
add
adc
nop
jg
or
jne
test
je
test
jbe
sti
jo
mov
iret
inc
shll
loop
and
add
xor
iret
hlt
hlt
fimull
dec
jle
incb
mov
cmp
pop
loopne
ljmp
ljmp
clc
jnp
xchg
fcom
mov
sub
in
sub
cli
jg
mov
mov
and
pop
hlt
jb
sbbl
xchg
lods
sbb
fnstenv
jle
hlt
or
sub
xor
jmp
popa
and
push
ret
cmp
ja
push
mov
iret
enter
sbb
jnp
add
fsubrs
dec
jmp
jl
and
inc
enter
adcl
cmp
add
pop
bound
adc
xor
cmp
dec
faddl
popa
popa
xlat
and
dec
cli
mov
adc
adc
in
mov
or
loop
in
in
scas
out
jp
or
sub
into
mov
notb
mov
dec
sbb
adc
js
cmpb
xchg
dec
frstor
jo
test
fiadds
test
mov
mov
cmp
jne
or
fists
cmp
and
shr
cmp
jne
sub
cmp
lods
add
adc
xchg
fwait
mov
rorl
add
xchg
mov
loopne
add
add
jnp
fsubrl
add
daa
add
mov
push
nop
mov
dec
dec
sub
pop
jnp
mov
sahf
aaa
mov
insl
test
rol
popa
and
inc
frstor
jecxz
data16
sti
and
ficoml
incl
clc
cmp
jge
mov
push
cmp
stos
push
push
lock
or
mov
jno
or
or
add
lahf
add
sub
jge
lods
mov
cmpsb
dec
cli
fsubrs
fnstenv
mov
adc
fisttps
xor
xchg
sarl
shlb
mov
shrb
cmp
jne
inc
sub
mov
inc
iret
aam
cltd
test
push
mov
dec
daa
pushf
xor
loope
sbb
mov
mov
repnz
shrl
sar
orl
ret
add
out
call
add
xor
fwait
lcall
adc
mov
incl
pop
add
jmp
cmpb
add
bound
sarl
not
and
inc
arpl
or
adc
imul
ret
ja
xor
out
test
cmp
sbb
jmp
je
sbb
test
push
test
hlt
add
mov
ja
push
movsb
jo
sub
inc
push
inc
clc
ds
pop
or
xor
test
in
and
sarb
out
lock
cmc
mov
test
add
ja
jge
insb
pop
adc
and
push
test
rcll
add
or
int3
jne
and
popa
dec
pusha
add
clc
rolb
leave
sti
cmp
sbb
test
outsb
adc
adc
aas
pusha
mov
or
data16
cmp
mov
lret
or
adc
push
push
in
dec
movb
push
inc
add
inc
enter
call
rorl
adc
adc
sub
mov
jbe
and
or
mov
dec
adc
rcrb
push
push
push
pusha
adc
cs
dec
shll
add
push
mov
out
lcall
pop
sub
add
adc
aaa
cltd
xor
sub
and
or
xchg
adc
inc
xchg
jle
xor
cmp
orb
aad
das
cld
insl
cmp
inc
add
jbe
aaa
mov
add
adc
add
add
jo
into
repz
mov
lods
or
repz
mov
fimull
ret
mov
mov
or
jmp
cmp
jge
mov
inc
xor
mov
cwtl
xchg
push
aam
mov
int3
add
mov
jns
loopne
outsb
aad
in
inc
js
shll
cmp
ljmp
push
pushf
pusha
cld
ret
add
pusha
aam
cli
and
shl
sbb
movsl
pop
je
imul
add
pop
add
adc
movsb
cmp
pusha
pop
pop
out
pushl
ljmp
and
sbb
adc
aaa
outsb
movsl
push
daa
orl
shr
ds
and
and
jmp
adc
jnp,pn
pop
mov
sbb
gs
add
repz
filds
loop
cmp
mov
push
es
fnstcw
bound
loopne
addr16
pop
lock
inc
and
pushf
push
test
out
and
dec
and
aaa
addb
cmp
cmp
ja
inc
jmp
fmull
loop
adc
mov
ja
mov
je
push
pop
int3
push
inc
lea
pop
adc
pop
mov
pop
or
push
jnp
inc
inc
cmp
jb
or
inc
push
out
cwtl
test
inc
sbbb
inc
jmp
leave
adc
adc
inc
inc
pop
adc
inc
dec
sbb
inc
push
cmp
test
mov
sbb
notl
add
push
push
push
push
push
lahf
mov
data16
adc
adc
sub
push
jg
jl
cmp
jb
mov
mov
mov
daa
lock
inc
push
dec
jae
mov
fisttpll
test
mov
hlt
mov
int
fs
mov
test
jl
mov
add
pusha
xchg
cltd
sub
push
fstl
enter
roll
cmp
cmpsb
in
mov
sub
stos
fcmovnu
fstps
push
lock
arpl
pop
inc
sbbb
ja
testb
cmp
je
popf
insb
testb
sbb
mov
push
push
fstp
mov
push
clc
mov
sub
sbb
dec
test
jmp
fisubrl
addl
fsubs
mov
les
sar
aaa
insb
fcmovne
neg
lods
fs
add
add
sub
fisubl
insb
repnz
data16
imul
data16
call
test
jl
jg
aaa
scas
inc
mov
push
cltd
pop
testl
jl
popf
adc
or
dec
jg
jl
out
cmp
int3
cld
lea
dec
push
push
roll
add
insl
int3
inc
popa
cmp
pop
incl
xor
dec
sbb
adc
aam
push
add
test
stos
cmp
in
sub
movsb
pop
scas
xchg
cmp
frstor
fs
bnd
push
sub
cmp
push
or
decl
cmp
mov
std
add
mov
add
or
shl
sti
mov
mov
ja
test
jg,pt
cmp
sub
add
rol
cmp
xor
mov
fcoms
fmul
call
push
fidivl
aam
sbb
adc
mov
stos
jmp
push
pop
push
pop
mov
mov
sbb
add
adc
inc
fdivrl
sub
push
push
cwtl
push
cmp
jns
lods
inc
adc
or
repnz
push
or
scas
dec
mov
divb
mulb
cli
xchg
loopne
mov
jnp
push
call
outsl
jne
cmp
jl
les
sub
push
sub
loope
or
mov
mov
mov
sbb
dec
add
sbb
ss
loope
in
mov
adc
and
stos
cmp
and
or
jg
je
inc
ret
dec
fcompl
lea
pop
pop
mov
mov
add
lahf
mov
stos
sbb
js
loop
shll
out
dec
fs
fdivrl
sub
cmp
inc
je
or
dec
sub
fmull
sbb
mov
lcall
or
jmp
dec
je
add
or
inc
dec
rcrl
add
push
or
inc
push
inc
aam
mov
add
sub
dec
push
add
cmpsl
add
push
insb
sub
push
clc
push
push
adc
jmp
cmp
test
je
xor
and
inc
les
int3
adc
cmpsb
push
lods
rclb
add
addr16
jne
mov
jl
mov
addr16
add
dec
sahf
and
arpl
and
jne
dec
add
dec
sarl
repnz
xchg
lods
fldcw
cmp
and
dec
xchg
punpcklwd
jns
dec
xchg
xlat
pop
jns
call
or
mov
add
je
push
mov
daa
mov
jnp
jl
jecxz
iret
or
js
jbe
sub
sub
add
jmp
in
repz
dec
je
or
dec
or
push
jmp
clc
xchg
cld
shrl
mov
shrb
pop
mov
add
add
or
mov
rcrb
xchg
cmp
dec
mov
call
cli
mov
lock
and
aas
cmp
jae
rolb
mov
mov
add
add
stc
push
or
push
inc
sub
push
das
rcr
loop
pop
lea
pusha
sub
jmp
mov
les
add
dec
jo
push
jns
mov
pop
call
sub
xchg
fldl
test
add
xor
jl
sub
je
or
dec
and
sbb
ljmp
mov
and
jle
pop
pop
imul
rclb
gs
repnz
xchg
push
push
mov
dec
jo
addr16
ret
test
jo
and
xchg
rcrb
or
mov
sub
or
sbb
jo
push
add
loop
mov
clc
pop
dec
aad
dec
movsb
fucompp
sti
xchg
testb
sub
adc
add
je
push
push
dec
loope
push
and
js
sbb
push
push
je
adc
push
es
leave
stos
imul
fs
push
push
pushf
xchg
imul
sbb
push
inc
lods
movsl
loopne
stos
adc
sbb
mov
mov
sub
cmp
ds
add
jl
inc
xchg
fistl
adc
out
dec
fcomps
xorl
dec
shr
inc
fsts
stc
xchg
adc
data16
push
xor
shl
lods
and
notb
imul
add
push
rclb
inc
sub
pop
adc
jnp
cs
adc
dec
or
lret
lds
cs
add
ja
mov
lds
inc
mov
mov
dec
inc
and
cltd
pop
inc
mov
inc
je
mov
jno
mov
cmpl
sbb
lods
aaa
push
jg
mov
je
adc
inc
ljmp
into
in
stos
pop
test
pop
dec
pop
sets
push
and
push
ret
int
jno
fiaddl
push
mov
jg
clc
js
out
lock
aam
cltd
jne
add
dec
enter
int
add
sarb
clc
lret
inc
dec
cmovo
inc
jo
sbbl
bound
mov
xchg
mov
dec
sbbl
and
or
frstor
insb
jge
mov
and
add
mov
xor
push
fwait
nop
xchg
xorb
inc
sub
loopne
enter
mov
or
mov
cmp
into
cltd
sar
hlt
inc
mov
stc
mov
lods
rorl
mov
xchg
ror
or
bound
icebp
adc
xor
xor
adc
dec
add
in
movsb
sbb
mov
loop
push
mov
rcrb
pop
pop
or
adc
popf
test
call
and
fmuls
loopne
fwait
call
sbb
and
dec
pop
push
ds
arpl
shll
or
adcb
addr16
movsl
jb
sbb
pop
clc
pop
cmp
dec
or
sbb
sub
out
aas
in
dec
pop
add
and
loopne
pop
movsb
in
push
leave
sbb
xchg
inc
enter
orb
fstl
ja
or
pop
mov
cli
rcrl
adc
sbb
jmp
inc
pop
mov
xchg
xchg
add
cmp
inc
ret
jae
outsl
and
pop
add
test
notl
mov
sbb
out
push
push
fistps
test
mov
adc
loopne
pop
pop
push
shlb
and
data16
out
mov
cmp
push
je
faddl
push
jbe
ds
push
movswl
sub
dec
cmp
cmp
and
imul
in
cmpsl
std
or
rcr
loopne
daa
sbb
sbb
push
dec
add
ret
outsb
or
clc
call
faddl
or
xor
pop
push
shll
push
sub
xor
push
push
xor
or
mov
pop
push
jo
pop
ret
out
adc
mov
and
cli
std
mov
jbe
or
inc
mov
jne
cmpl
shrl
cmpsb
inc
iret
les
or
push
les
fbld
pop
and
jne
enter
fistpl
ljmp
dec
mov
pop
inc
in
mov
rorb
lods
enter
loop
or
push
fs
pop
push
popf
loop
cld
aaa
inc
pop
testb
je
mov
jmp
push
pop
shrb
inc
push
lods
ja
add
jne
pop
or
imul
xchg
fsubrl
mov
movsb
pop
push
in
pop
in
adc
mov
fucom
fcoms
and
mov
filds
imul
push
push
addr16
or
add
sub
push
jb
addr16
addr16
imull
aaa
or
push
sbb
or
or
add
data16
data16
jl
add
jmp
repz
fs
fists
jb
push
fsubrl
push
loopne
pop
nop
lock
and
lcall
nop
pop
fsubrl
nop
out
sahf
testl
mov
rcl
fistps
in
or
push
add
sbb
add
add
push
subb
push
dec
adc
dec
popf
sbb
imul
sti
loopne
jecxz
pop
lea
div
fs
sub
jg
mov
jne
mov
push
cmp
jne
sahf
out
imul
call
push
xchg
xchg
push
dec
imull
lret
jb
xor
inc
adc
sahf
lahf
jmp
std
std
jmp
cld
xor
sub
ljmp
in
adc
adc
inc
inc
inc
cmp
jb
inc
mov
xchg
repnz
push
add
mov
jg
ljmp
pop
je
ror
sti
jle
movq
push
dec
adc
push
and
jg
out
mov
jg
jg
outsl
inc
or
idivl
lahf
push
jbe
jle
xor
jg
jg
fucomi
lahf
ja
jg
lea
dec
jne
cmp
dec
in
pop
pop
cs
lea
lea
inc
out
and
je
adc
or
xor
xor
dec
jne
add
cmp
sbb
je
jae
inc
push
negl
push
add
add
cmp
shrb
lret
ret
lret
ret
inc
push
mov
shr
dec
clc
add
mov
push
pop
xchg
push
in
jg,pt
xorb
xor
cmp
jg
mov
add
cmpsl
lea
call
mov
fsubs
add
push
out
xchg
pop
enter
xchg
ret
xchg
or
sbb
sub
in
push
xor
fwait
rcll
outsb
repnz
ret
mov
es
add
and
add
pop
push
cwtl
add
cmc
cmpsb
and
xchg
sahf
insb
push
lea
push
push
mov
xor
push
mov
and
popa
add
fwait
add
pop
add
fisttpl
mov
sbb
mov
mov
aas
fnstenv
xor
cmp
dec
loope,pn
jnp
in
xor
add
or
pop
sti
push
dec
orl
testb
lcall
jp
push
cld
test
inc
lret
xlat
stos
sbbb
cld
dec
xchg
adc
fmul
mov
add
fdivrp
call
inc
inc
inc
addr16
fsubr
jne
mov
push
dec
adc
test
loope
mov
insl
loopne
pop
popa
daa
add
cmovns
fdivl
test
jnp
das
and
test
dec
andb
int
jecxz
aam
cmp
adc
rcll
cmpsl
xor
inc
loop
and
or
sub
sub
xlat
jae
mov
and
adc
cmc
rcl
pop
je
bnd
mov
or
push
lahf
loop
add
or
push
test
cmp
mov
insb
jmp
add
jmp
out
or
jne
enter
outsl
rol
loope
or
lea
stos
add
push
xchg
nop
pop
sub
mov
mov
inc
dec
mov
xchg
mov
push
cmpb
add
jno
daa
out
sub
test
fcoml
pop
insb
push
call
mov
mov
cld
mov
test
cmovo
movb
and
lea
pushl
enter
roll
xchg
or
dec
add
mov
inc
add
cmp
loopne
ficoms
push
add
notb
jmp
push
icebp
mov
push
cmp
in
adc
push
cmp
and
mov
pushl
in
fimull
orb
mov
mov
adc
adc
inc
notb
pop
mov
mov
movl
mov
pop
mov
cmp
and
ja
enter
and
or
inc
mov
cld
jmp
dec
inc
adcb
push
int
xorb
outsl
push
call
xor
insb
xor
insb
ja
test
cmpsb
and
xor
xor
mov
std
or
sub
xor
iret
outsb
insb
cmp
aam
js
int
cmp
dec
push
mov
push
je
fstps
xchg
mov
mov
rcrl
add
sti
xor
push
add
dec
dec
cmp
stos
push
loop
movsb
push
movl
add
jb
and
std
jne
pusha
cs
sarl
jmp
sub
cltd
lret
shrb
les
mov
ror
and
ret
pushf
xchg
push
pop
popa
and
add
mov
jle
push
mov
pop
mov
arpl
roll
add
xor
lahf
push
push
rcll
out
into
std
fs
lcall
mov
test
or
and
test
push
and
mov
inc
lea
push
aas
rolb
add
sub
push
jae
add
xchg
out
movsb
rcr
clc
fidivs
test
sbb
push
leave
inc
and
mov
imul
int3
daa
and
lea
cld
enter
mov
push
fs
orb
inc
cmp
lcall
fcoms
es
push
insl
sub
jo
loopne
data16
jge
add
jb
mov
ss
in
nop
push
testl
sbb
adc
pop
mov
add
xchg
dec
xor
inc
btr
out
inc
popa
sarb
add
aad
push
dec
jbe
mov
cmp
mov
and
scas
inc
and
jno
movsb
shlb
add
mov
jnp
out
mov
into
adcb
rcl
cmpsb
push
pop
adc
or
enter
mov
lcall
pop
fmull
dec
push
mov
out
fsts
xchg
test
shr
push
add
cli
cmp
test
push
and
andl
mov
out
jno
aam
dec
pop
int
testb
pop
push
jg
mov
cmp
push
aam
xor
xlat
testb
insb
ljmp
add
add
lods
mov
loop
cmp
or
mov
inc
outsb
insl
fsubrs
jge
into
dec
inc
cmpsb
push
fucomip
or
mov
xor
dec
sbb
inc
sbb
or
jmp
sbb
or
out
add
inc
jo
insl
adc
pop
sbb
fs
stos
xor
cmp
enter
add
and
popa
shl
add
cmpl
push
arpl
pushf
add
mov
push
mov
xchg
push
sbb
mov
clc
adc
and
jmp
jo
loop
aaa
cmpl
mov
pop
ret
popf
jnp
sub
jne
aam
movsl
sub
or
add
or
sbb
insb
imul
pop
cmpsl
pop
xchg
or
outsl
cmp
es
mov
jne
sbb
in
lods
pushl
inc
mov
int3
pushf
inc
in
scas
sbb
daa
daa
inc
rolb
gs
dec
les
lods
or
and
adc
or
mov
or
sbb
dec
fucompp
aaa
ljmp
cmp
faddl
or
imul
add
cmp
and
add
adc
cmpsl
jns
inc
ret
mov
adc
xor
pusha
je
push
mov
pop
les
adc
addr16
ret
sub
or
data16
lret
add
lock
jo
ret
je
cmpl
jo
or
push
or
mov
or
pop
pusha
cmc
jle
jae
insb
jmp
pop
push
dec
ror
dec
out
rolb
mov
insl
pop
mov
jo
es
ror
push
inc
add
les
ds
into
jne
and
arpl
fbld
shrb
movsb
push
push
cmp
andl
jmp
js
cld
shll
jmp
push
push
lock
movl
fdivrs
pop
data16
int
add
movb
lods
add
inc
push
adc
sbb
imul
push
lcall
push
bound
mov
xlat
arpl
sub
ret
or
jecxz
pop
dec
test
ret
mov
lret
push
mov
xchg
dec
lahf
cmp
mov
loop
jle
and
adc
das
mov
or
not
jl
and
aam
aaa
bnd
push
mov
xor
adc
test
enter
xor
push
in
cmp
icebp
inc
push
in
dec
pop
cmp
dec
and
icebp
mov
dec
test
dec
imul
jbe
and
das
add
pop
cmp
imul
add
jne
cmpsw
mov
pop
rorb
or
sbbl
push
or
daa
push
vpmulhw
xor
jmp
and
hlt
pop
push
cmp
jp
push
xlat
or
jg
push
push
aam
mov
or
aas
in
push
sti
je
push
loopne
push
mov
mov
mov
mov
in
shlb
leave
test
jmp
xor
push
adc
iret
loopne
mov
movl
testb
andb
shlb
flds
jbe
sub
and
or
sub
and
nop
sbbb
dec
test
adc
mov
push
jne
aad
pop
push
adc
dec
enter
sbb
jmp
mov
mov
enter
push
outsl
sub
and
adc
or
mov
adc
or
sub
faddl
sub
mov
std
pusha
test
mov
repnz
sub
std
or
aam
sti
mov
mov
mov
clc
or
repnz
enter
shrb
pushf
popl
les
add
hlt
scas
in
fisubrl
aaa
dec
cld
xor
adc
loopne
jnp
xchg
cld
adc
pop
in
or
sbb
and
movsl
mov
subb
or
or
mov
rolb
mov
mov
insl
cmpsb
andl
jb
add
cmp
into
mov
sbb
and
mov
int
mov
sub
in
push
adc
in
mov
movsb
jo
ss
inc
hlt
push
adc
pop
cwtl
sub
adc
out
enter
inc
gs
and
jle
call
or
and
adc
sbb
cmp
add
dec
mov
movb
push
xchg
push
inc
lea
xor
arpl
mov
out
jle
sub
jo
pop
and
popf
and
inc
insb
inc
and
outsb
sub
xchg
icebp
roll
push
inc
mov
aaa
xor
mov
dec
movb
notl
mov
jo
pop
jae
or
outsl
out
sbb
lret
movl
or
mov
xchg
negl
jo
mov
inc
dec
push
mov
out
in
inc
dec
ja
arpl
js
imul
mov
lea
rep
pushf
in
pop
fsts
inc
testb
jbe
dec
loop
sbb
add
push
sbb
lods
add
pop
dec
fs
jmp
aam
shlb
cmp
hlt
xchg
add
jnp
push
lea
push
cmp
xor
test
data16
sarl
and
cmp
mov
sbb
daa
xchg
ret
out
test
cmpl
call
and
pop
aam
imul
cmp
push
pop
call
push
jne
push
aas
out
pop
pop
pusha
mov
lds
mov
cwtl
dec
sub
cmp
les
xchg
jle
cmp
je
jmp
push
adc
mov
jmp
push
fmuls
or
sub
push
xor
xor
jne
scas
imul
jmp
mov
jmp
or
inc
jecxz
mov
pop
movsb
xor
mov
add
xor
call
mov
pop
bound
sbb
push
ret
out
lock
jmp
jecxz
addb
and
pop
cmp
mov
loopne
cmpsl
xorb
push
add
xor
dec
icebp
imul
xchg
xchg
pop
insb
popa
rorb
imul
mov
pop
aam
pop
cmp
jae
cmp
jle
or
fcom
addr16
dec
xor
jno
jg
ss
cmp
and
or
pminsw
loop
inc
loope
push
mov
mov
mov
mov
pushl
mov
dec
jae
pop
adc
jmp
nop
sub
je
idiv
mov
adc
jb
mov
mov
mov
popf
or
or
sub
lods
loopne
fldt
and
sub
sbb
pop
push
push
push
in
sub
mov
push
inc
fwait
aad
sti
or
add
dec
pusha
sti
mov
pusha
jne,pn
sbb
testl
mov
imul
add
cmp
add
sbb
xor
jmp
inc
ja
push
xchg
push
xchg
jne
xchg
add
cmp
pop
jmp
xchg
fwait
rorb
loopne
or
xchg
add
sub
push
daa
push
adc
sbb
inc
test
adc
cmp
lahf
mov
push
mov
es
mov
sarb
mov
pushl
pop
or
sbb
mov
jb
xorl
je
inc
loope
or
adc
sub
dec
sbb
clc
sete
mov
popa
jae
push
pop
jbe
bound
inc
dec
inc
mov
dec
or
data16
sub
or
mov
or
popa
pusha
add
jbe
inc
cmpsb
sub
call
mov
push
push
add
pop
mov
pop
cmp
xchg
fisttpl
andl
push
cs
clc
stos
pop
and
call
ret
in
jecxz
inc
loope
pop
test
or
cli
shlb
je
outsb
cld
into
pusha
ja
or
or
pusha
aaa
jo
jo
test
mov
jb
movsl
add
fs
push
loop
dec
cld
add
push
pusha
ja
fistpl
pop
add
mov
push
in
rol
lahf
pop
bnd
addr16
cltd
ja
out
or
out
movsl
add
jl
adc
clc
push
mov
jl
push
fisttps
mov
idivl
mov
sbb
dec
pushf
es
xorb
or
push
cwtl
inc
aad
pop
inc
movb
sub
lea
addr16
clc
mov
inc
sar
push
push
cmp
cltd
xor
sub
mov
push
mov
repnz
movsl
pushl
pusha
daa
xchg
push
lahf
movsb
frstor
lock
add
add
and
pop
push
js
push
dec
rorb
xor
dec
pushl
jne
adc
or
mov
imul
push
inc
cmp
inc
imul
or
insl
pop
inc
cwtl
jbe
pop
and
mov
and
cmc
lock
xor
pop
jne
push
jecxz
adc
int
pop
inc
pxor
hlt
rol
add
fwait
jne
push
loop
out
scas
xor
pop
je
jae
jg
push
inc
adc
push
jmp
inc
adc
cmp
inc
jo
mov
shlb
sbb
imul
xorb
test
jg
adc
divb
or
ljmp
sub
je
mov
inc
inc
cli
pop
lcall
neg
cli
sub
push
mov
bound
add
shr
add
sub
out
mov
addl
sbb
inc
push
fdivs
mov
cwtl
jmp
fisubrs
notl
cmpsl
loopne
loop
inc
push
pop
push
mov
fistps
rcr
shr
rcr
or
jne
div
pop
dec
test
inc
mul
pop
jb
cmp
out
outsl
cmpsl
loop
cmp
or
xor
and
cmp
push
adc
or
fdivs
bound
lret
iret
pop
inc
ret
pop
push
push
adc
fsubr
icebp
lahf
add
push
jo
jl
movsl
or
push
clc
stc
or
jl
and
xlat
cmp
jb
cmpsb
cmpsb
fmuls
sbbb
data16
dec
adc
jmp
push
sub
mov
push
js
mov
inc
adc
push
ds
adc
sar
js
clc
pop
inc
pop
adc
jnp
out
mov
adc
jne
push
add
dec
ja
lcall
push
pop
shl
add
sub
or
pop
cmp
ja
pop
lea
adc
sbb
xor
add
leave
cmp
jae
mov
or
lods
cmpsb
loopne
push
clc
jbe
add
or
fadds
out
out
add
je
jl
rcrl
popa
rorb
scas
dec
push
mov
pop
jnp
mov
lret
test
cmp
out
cmp
cmpl
adc
repnz
and
jle
divb
add
jmp
and
xor
pop
mov
xor
negl
mov
sub
insl
cmp
sub
xor
lea
das
icebp
outsl
insl
jmp
push
xchg
sbb
fnstenv
pop
sub
jmp
jl
mov
push
out
adc
or
leave
xor
push
ja
cmp
lea
jmp
xor
in
sbb
lcall
push
sbb
adc
ror
lds
mov
adc
jl
mov
daa
mov
adc
add
call
pop
adc
sbb
add
mov
dec
call
jg
nop
push
inc
jo
sti
push
sub
repz
lea
jae
push
ja
sbb
sbb
jb
or
fcoms
test
nop
in
jne
sub
push
xchg
fldl
xor
call
add
cmp
test
add
mov
jmp
mov
ret
adc
lret
jmp
jge
mov
pminub
push
or
adc
mov
adc
ds
cmp
push
fidivrl
ja
pushl
repz
sub
push
sub
jbe
inc
mov
sub
xor
js
cmp
mov
push
xor
and
dec
add
mov
clc
xchg
inc
cmp
mov
jb
or
cmpsb
jmp
loop
insl
cmp
sub
inc
insb
and
mov
aaa
movsb
loopne
jae
repnz
jmp
or
or
cmp
push
add
push
push
dec
or
sti
dec
or
sar
rcl
ret
jb
ret
orb
orb
mov
xor
inc
je
and
add
jecxz
push
mov
mov
xor
dec
addr16
loopne
mov
mov
out
xchg
in
es
add
add
mov
jae
push
mov
cs
inc
and
shll
or
lods
sub
pop
int3
or
andb
or
sbb
outsl
nop
lock
into
sbb
clc
dec
sub
sti
jle
mov
jne
cmp
dec
ljmp
or
stc
call
adc
idivl
and
je
push
push
push
push
cmc
loopne
jmp
adc
and
stos
add
or
loopne
addr16
dec
fnstsw
movsb
into
lock
cmpsb
push
sbb
mov
pop
test
inc
mov
orb
popf
push
mov
dec
and
mov
sub
testb
mov
popa
mov
dec
or
lock
push
jmp
andl
inc
add
jle
adc
mov
nop
mov
ss
rclb
or
lods
add
jg
sub
mov
and
outsb
leave
dec
jle
add
arpl
jge
lods
in
sahf
cmc
lea
or
in
mov
push
push
cmp
arpl
sti
test
jne
jo
popf
mov
mov
les
pushf
cmp
sarb
push
lods
call
addr16
in
sub
mov
mov
rcrb
cld
jle
pop
mov
or
mov
hlt
sub
add
movsbl
sub
and
call
ret
push
sar
pop
inc
mov
pop
xchg
push
cmp
inc
cwtl
orl
lret
in
or
insl
sarb
xor
xchg
mov
push
outsb
sub
je
sbb
xchg
mov
pushf
pop
cs
int3
pop
or
add
sub
sbb
test
pop
test
lcall
jg
adc
lock
cmp
add
sub
inc
orl
push
imul
cs
mov
ja
lods
shrl
fsubrs
sbb
hlt
hlt
stc
inc
jae
pop
sbb
push
or
inc
insb
je
ja
mov
or
insb
and
cmpsb
jo
pusha
sub
dec
sbb
pop
and
push
ss
js
add
movb
sbb
xor
xchg
inc
imul
sbb
imul
and
dec
jae
adc
cs
test
sbb
mov
test
sahf
xchg
sarl
adc
sbb
out
dec
stos
sbb
sub
adc
leave
mov
push
mov
dec
nop
mov
inc
adcl
lea
shrb
adc
test
jbe
jge
push
arpl
push
testl
xchg
mov
loope
scas
jnp
add
mov
or
dec
and
in
lock
or
or
in
mov
and
pusha
cmpsl
sub
adc
sti
mov
adc
push
jne
adc
das
add
push
insl
cmp
xchg
pop
lahf
jl
xor
stc
xor
cmc
enter
add
xchg
shll
mov
adc
cmp
adc
test
xchg
outsl
testl
or
xor
movsl
std
xor
or
lock
outsl
idiv
cmp
lcall
jb
inc
arpl
inc
cmp
dec
ret
xchg
dec
std
dec
ret
rcr
xor
mov
cltd
jle
inc
xchg
push
cmp
push
sbb
pop
repz
sub
outsb
jo
add
add
or
add
addr16
ss
je
or
sub
mov
ss
insl
cmp
adc
mov
fbld
out
arpl
sahf
or
xchg
pop
outsb
adc
adc
mov
enter
and
shll
xor
data16
jle
mov
jne
add
push
addr16
xchg
hlt
jmp
cmp
jle
jl
rcrl
mov
jle
shlb
pop
scas
push
int3
rclb
mov
int
or
mov
jmp
movsl
jo
mov
lock
nop
cmp
mov
pushl
dec
and
xor
clc
inc
pop
sub
or
cli
adc
sbb
add
push
xor
cmp
xor
dec
pop
icebp
xchg
and
jle
aad
jg
xchg
data16
push
push
dec
mov
jae
setl
gs
jbe
inc
mov
loope
dec
cmp
sub
data16
push
adc
or
call
lret
pop
sub
outsb
bound
je
inc
pop
xchg
and
jle
es
jle
cld
or
lods
or
sub
cltd
pop
rorb
xor
imul
adc
dec
sub
add
fidivrl
lds
jnp
xor
jge
bndldx
jge
dec
sbb
lahf
daa
mov
or
jne
and
rcrb
das
sbb
scas
dec
jb
cmp
inc
je
mov
or
stc
cmpsb
push
aas
or
mov
cmp
push
dec
jmp
jecxz
fsubrl
sub
sub
inc
cmp
movsl
movsb
in
push
pop
enter
mov
cmpb
je
shlb
lock
add
dec
movb
jmp
in
xchg
aas
push
sub
mov
or
mov
push
repnz
sar
int
mov
push
test
iret
jle
test
sub
sub
push
test
bnd
cmp
and
pop
fisubrs
mov
or
xchg
test
jne
jmp
and
jle
adc
mov
out
scas
popa
cmpsb
jg
fsubs
add
adc
lock
jae
push
out
adc
daa
lods
or
push
inc
repnz
adc
lret
rclb
mov
mov
int
inc
aam
mov
mov
insl
prefetch
jo
adc
movsb
push
push
dec
stc
pushf
loopne
xchg
jle
dec
xor
cltd
fst
add
xchg
cmp
jmp
adc
mov
and
jge
push
lock
pushf
adc
jl
push
or
pop
mov
inc
inc
imul
mov
or
xor
ret
mov
or
clc
xchg
hlt
mov
call
sbbb
jge
aaa
push
pop
jmp
daa
outsb
cmp
xchg
inc
add
lcall
in
jp
mov
push
add
movsb
lock
shll
lcall
ficoml
verw
add
jmp
test
clc
mov
movb
aas
add
mov
movb
loopne
ss
add
test
daa
sub
repnz
lahf
cmpsb
cmp
or
jmp
add
orb
lahf
lods
mov
adc
push
movsb
ljmp
mov
pop
call
rcr
sub
shrb
mov
sbb
jle
stc
and
add
add
cmpl
mov
pusha
sub
pop
add
pushl
je
dec
je
dec
jne
mov
test
jb
adc
push
sub
dec
pop
pushf
or
enter
add
leave
popw
sub
je
cmp
sbb
dec
push
aam
push
push
xor
gs
mov
pop
cmp
orb
push
imul
clc
jbe
addl
push
or
mov
cmpsl
sub
cmp
je
inc
cmp
orl
mov
add
xor
sub
mov
mov
das
xchg
or
dec
jae
push
or
out
sbb
jmp
sub
into
addb
mov
cmp
int3
stc
daa
js
xor
cmp
es
and
pop
enter
sub
js
popa
xorl
mov
jno
out
jns
push
pop
dec
stc
shl
dec
jmp
aas
shr
paddq
pop
incl
pusha
dec
pushl
push
xchg
inc
aaa
scas
cmp
jo
les
mov
pop
js
das
or
inc
test
push
pop
xchg
xchg
mov
sbb
dec
aas
sub
sbb
mov
push
add
mov
rorb
add
fstpl
aam
je
cmc
mov
data16
out
insb
data16
cwtl
movsb
push
inc
add
add
inc
hlt
mov
clc
pusha
dec
aam
lock
in
push
repnz
shlb
xchg
adc
test
add
sub
or
sub
in
stc
imul
xchg
inc
add
push
push
xor
add
add
jne
shrb
mov
inc
loopne
xchg
jb
xor
jp
add
adc
mov
stos
mov
test
into
adc
xchg
out
mov
sbb
and
adc
xor
sub
in
cmp
xor
test
adc
xor
cmp
mov
jmp
fcmovu
loop
cmp
xor
add
add
and
ljmp
insl
daa
mov
inc
imul
pop
mov
pushf
or
movsb
xchg
mov
or
loopne
dec
and
cltd
adc
sbb
pop
mov
push
or
add
inc
or
mov
push
pop
cmp
or
xchg
daa
test
nop
dec
iret
or
sbb
dec
fisttpl
lods
mov
or
shrl
jmp
call
or
pop
mov
mov
lahf
jno
mov
andl
jmp
mov
mov
loop
add
lcall
je
in
lea
inc
jle
mov
pushf
addb
inc
orb
push
sub
push
add
into
xchg
fcoms
push
xor
pop
inc
push
dec
cs
xor
sbb
lea
push
and
ja
dec
fdivr
push
popa
mov
add
incl
sub
or
add
or
sub
mov
jae
test
sub
jno
mov
push
xchg
cmpsb
xchg
movsb
xchg
jne
jmp
arpl
adc
je
jmp
in
fnstcw
out
in
dec
bnd
loope
jmp
rolb
xor
xchg
inc
in
lea
ficoms
lods
inc
or
adc
std
mov
pop
or
dec
pushf
shr
mov
pop
pop
pop
popf
push
and
sub
sub
clc
xor
cli
fisubrs
mov
and
shr
je
ret
addl
and
call
cld
mov
pop
cmp
add
testl
jmp
mov
scas
lret
mov
push
cs
clc
shr
sbb
or
jg
sahf
clc
lea
cmp
or
mov
push
push
and
cmp
fsubr
cvtdq2ps
pop
aas
in
imul
add
or
call
lods
inc
in
loopne
inc
add
mov
add
ss
mov
pushf
jge
in
push
sahf
add
mov
xchg
sahf
insl
mov
sbbb
add
sub
add
pusha
movsb
fldln2
push
pushf
jle
nop
adc
xor
loopne
xchg
pop
mov
adc
inc
lds
add
inc
mov
cmp
sbb
pop
mov
sbbl
or
sbb
daa
cmp
jb
sub
std
mov
lea
movsl
add
push
into
pushf
pusha
xchg
or
stc
orl
or
mov
pop
jb
and
and
or
mov
inc
and
lret
imul
std
mov
repz
ja
into
ja
mov
ret
pop
xchg
jne
inc
testl
adc
cmp
out
les
test
dec
mov
jne
inc
or
cmp
lcall
hlt
int3
add
jne
or
hlt
mov
add
pushf
xchg
movsb
add
add
push
cwtl
hlt
lcall
lcall
xchg
mov
push
fwait
or
fucomip
scas
ret
cld
lea
enter
xor
lock
and
jle
ss
ja
je
inc
sub
insl
mov
ficoms
pop
mov
test
clc
inc
and
add
fwait
and
scas
jge
test
js
mov
das
adc
loopne
shll
pop
mov
add
or
shr
and
push
add
or
push
add
bound
or
push
dec
add
ror
aad
add
testb
outsl
out
lods
sahf
push
fcom
insl
fadd
loopne
shr
or
mov
or
or
xor
or
test
ljmp
sub
push
push
push
mov
cmp
pusha
sub
rcr
fiaddl
mov
movl
out
sbb
xchg
or
inc
fisubl
mov
das
jl
jb
lcall
sete
mov
loope
rdmsr
int3
add
push
dec
aam
cmp
mov
sbb
mov
dec
call
in
das
lods
test
jb
andl
dec
and
jo
sbb
mov
mov
push
dec
push
sbb
add
lcall
out
jmp
out
sarl
sub
mov
add
sub
movups
and
sub
test
lcall
pop
lock
cmpb
jle
xlat
xor
pop
rclb
out
pop
and
out
cmp
cmp
push
mov
adc
pop
mov
lcall
pop
daa
adc
fs
rcll
and
rorb
or
out
add
adc
mov
out
push
or
or
cltd
cmp
out
or
and
add
pop
cmc
adc
ljmp
mov
and
mov
andl
push
bound
in
mov
aaa
pop
fs
cmp
or
inc
addl
mov
subl
xchg
test
xchg
test
lret
push
cmpb
popl
cs
mov
lea
sub
cmp
pop
test
fs
shlb
pop
rcll
loop
test
pop
shlb
xchg
les
xchg
inc
and
jg
inc
push
pop
push
mov
push
or
pushf
fimull
pop
fisubl
inc
incl
aam
orl
movw
jg
out
mov
adc
movb
xor
pop
add
jge
xchg
cmpl
push
push
orb
cmpsb
xchg
sub
lret
jmp
js
ret
mov
or
cmp
jl
push
sbb
and
pop
pusha
jo
inc
aas
xchg
push
addl
and
xor
adc
loopne
cmp
pop
orb
add
aad
cmp
das
rorb
and
pushf
cmp
add
cmp
jb
sub
jl
jo
iret
dec
mov
xor
andl
jb
or
dec
or
jno
jne
ficoms
or
mov
fcoms
xor
ret
fdivrl
push
push
add
rorl
in
sub
fst
xchg
inc
mov
inc
ljmp
nop
dec
fimull
div
test
push
orb
jl
testb
sub
pop
insl
sub
call
dec
out
xor
cmp
ds
aaa
xor
jae
inc
mov
inc
jmp
adc
popl
or
je
push
add
into
mov
movl
sbb
cmp
les
idivb
sbb
pop
cmp
add
sbb
jae
loopne
pop
das
xchg
cmp
sbb
adc
xor
cmc
aam
push
sub
imul
dec
jne
push
push
loopne
cmc
jmp
not
dec
call
sbb
pop
roll
jmp
xlat
or
orb
add
fildl
pop
lcall
cmp
clc
icebp
test
rol
pop
inc
jl
shll
xor
sbb
rclb
dec
dec
orl
xor
jmp
sbb
xchg
adc
xchg
arpl
sbb
dec
imul
jb
inc
or
js
loope
ja
insl
mov
adc
stc
data16
mov
aaa
loope
cltd
sbb
movsl
jmp
or
std
repz
loop
fwait
sub
push
sbb
les
out
js
inc
dec
jg
call
mov
icebp
push
add
mov
es
cmpsl
call
outsb
bound
or
or
je
mov
add
stos
sbb
in
cmp
jmp
fidivrs
mov
mov
inc
pshufw
xlat
lea
push
xor
lods
cld
mov
jg
inc
and
lock
pop
leave
test
pop
outsl
cmp
pop
inc
adc
sbb
add
fwait
loopne
int
lahf
ljmp
or
in
jp
out
out
cmpsl
je
sbb
sbbl
das
xor
add
lock
ret
sub
incb
or
cwtl
loopne
add
push
push
mov
fwait
lock
push
or
mov
cmp
mov
add
add
in
decl
mov
push
cmpsb
push
sbb
cwtl
adc
scas
pop
movb
stos
sahf
push
add
mov
xchg
sti
mov
xor
or
in
add
inc
pop
dec
or
cs
test
inc
loopne
clc
cmp
fwait
cmpsl
mov
cmp
aaa
cmp
inc
dec
mov
push
lea
pushl
sub
cmp
leave
sar
mov
rclb
mov
add
add
dec
adc
sar
push
test
mov
mov
push
loopne
nop
push
lret
mov
jmp
call
pop
add
inc
imul
adc
lcall
mov
inc
pushl
jp
mov
ret
inc
pusha
pop
scas
rorl
push
or
xor
js
xchg
pushf
popf
and
das
and
sub
xchg
and
jge
push
sbb
mov
je
addr16
mov
mov
pop
or
fs
call
cmpl
mov
mov
mov
into
loopne
or
jmp
movsbl
pop
imul
in
adc
add
jbe
enter
lret
fmuls
inc
sub
push
addl
lods
les
jmp
pushf
mov
adc
inc
outsb
sbb
add
pop
mov
xchg
jbe
inc
icebp
enter
inc
xchg
sub
int
test
mov
je
jecxz
sub
or
xor
roll
sarb
mov
shl
dec
mov
xlat
fdivrs
add
imul
push
test
mov
cmp
mov
pop
dec
mov
cmp
je
jecxz
jne
push
leave
pusha
and
push
jnp
sbb
sbb
mov
push
push
jmp
inc
cmp
in
pop
cmp
or
push
iret
test
jae
inc
add
mov
xlat
lods
add
lcall
sbb
fucomip
sbb
lods
dec
push
mov
mov
inc
and
jnp
mov
sbb
dec
xor
cmp
int
cmpb
iret
mov
std
xchg
lret
xor
sub
xlat
lock
cmp
mov
mov
mov
cli
or
shufps
adc
inc
sub
pop
push
push
es
xchg
inc
pop
pushf
gs
xchg
and
outsb
orb
mov
mov
daa
ret
sub
xor
and
les
test
jne
push
push
pop
xor
pop
jbe
dec
xor
inc
fs
pop
jns
xor
ja
adc
fiadds
into
jg
sbb
mov
add
loopne
data16
sub
add
test
pop
addl
mov
imul
popa
add
out
aaa
mov
dec
jne
lea
mov
stc
loopne
dec
out
cmp
jmp
nop
mov
test
jns
push
notb
push
fs
and
jmp
lods
adcb
sub
fcmovbe
aad
xor
xor
xchg
add
pusha
mov
push
lea
or
mov
jg
jmp
rcll
pop
mov
stc
nop
sub
adc
or
or
jmp
push
jae
loope
out
jb
lods
cmp
cmpsl
sub
dec
sub
cmp
lods
inc
sub
negb
add
add
pop
loop
test
xor
dec
je
sahf
xor
arpl
adc
sbb
mov
jae
pop
mov
or
shlb
mov
xchg
dec
cmp
clc
adc
adc
dec
leave
dec
xor
inc
pusha
mov
add
and
loop
testb
and
push
mov
decl
js
mov
mov
aam
or
adc
and
jns
loop
subl
adc
xor
adc
xchg
inc
mov
in
incl
push
mov
fidivs
mov
sub
aad
test
xchg
sbbb
sbb
inc
xor
movsb
mov
in
test
enter
les
xchg
push
repz
lcall
and
std
mov
testb
jbe
jbe
push
mov
dec
or
lock
invd
push
sub
and
dec
fwait
add
jnp
ret
test
xor
test
xchg
testb
or
mov
mov
xchg
sub
and
hlt
push
cmp
jns
repnz
inc
loopne
int3
mov
cld
and
test
xchg
stos
pushf
mov
ret
mov
fistpll
adc
loope
pop
mov
leave
mov
dec
lret
push
mov
cs
pop
add
add
xor
inc
in
leave
in
pop
cmp
jge
fdivrs
insb
jns
pop
mull
mov
movsb
pusha
push
ret
jb
call
mov
call
or
inc
xchg
adc
cmp
lock
std
dec
cmp
inc
sub
jb
or
aad
pop
and
sub
decl
push
cmpb
ret
add
repnz
inc
xor
mov
xor
mov
scas
inc
cmp
push
outsl
sub
test
pop
sub
lds
mov
and
pop
dec
sub
or
ret
arpl
mov
mov
ret
sub
fisttps
pop
inc
in
rorb
push
repz
inc
adc
add
add
je
push
or
stos
inc
add
mov
pushl
dec
movsb
out
xchg
scas
xchg
test
stos
sahf
add
lods
jmp
inc
and
jne
xor
lcall
mov
loopne
mov
cmp
mov
mov
and
cmp
outsb
jg
jnp
xor
mov
shll
test
xor
or
std
fdivr
fisubl
insl
in
adc
adc
xchg
notb
fdivs
test
mov
in
cmp
test
ja
mull
pop
inc
loopne
add
adc
repnz
std
mov
cmp
jns
jb
add
add
add
or
dec
out
adc
mov
insb
xor
mov
test
add
or
xor
inc
mov
fdivr
ret
cmpsl
or
fsts
outsl
mov
fildl
std
cmpl
imul
mov
lea
mov
mov
outsb
rorl
push
sub
adc
addr16
and
sub
pop
stos
call
in
std
cmp
sub
call
std
cmpsl
in
out
std
mov
std
sub
push
and
icebp
sahf
dec
or
xchg
lea
push
les
lock
rorl
jb
std
movsb
std
cmpb
lods
movsb
std
sbb
sbb
lock
loopne
scas
stos
xchg
jle
lods
lea
pop
daa
dec
or
pop
adc
sbb
dec
mov
daa
sub
std
xor
test
ds
push
iret
cs
adc
and
inc
scas
outsb
mov
out
sub
in
in
sbb
ficoms
xor
std
lock
enter
cmp
inc
lods
arpl
mov
adc
sub
pop
js
adc
cmp
xchg
fdivr
mov
fs
cmp
repz
cmpsl
or
bound
into
cmpb
je
ficoms
push
std
xor
aas
dec
cs
leave
jne
in
jbe
add
nop
jns
test
jmp
dec
mov
dec
inc
push
roll
xor
xor
and
addr16
dec
push
sbb
jmp
and
sbb
int3
jp
out
jnp
sub
or
inc
orl
mov
jle
mov
dec
fwait
mov
js
popa
mov
xchg
or
js
int3
sub
mov
mov
in
iret
jmp
mov
xor
jecxz
les
je
loop
stos
sub
adc
xor
adc
inc
lret
cltd
mov
add
hlt
push
mov
or
dec
ficoml
das
push
xchg
cwtl
fsubl
cmc
xchg
sbb
popa
shr
pop
adc
into
fdivr
xor
je
imul
xor
std
loope
push
push
mov
mov
cmp
jecxz
xor
pop
mov
dec
mov
xor
mov
mov
imul
not
test
ss
adc
dec
jb
shll
sbb
fiaddl
into
subb
adc
xor
sub
lock
imul
sbb
sbb
in
or
test
test
adc
push
push
ficoml
sub
ss
call
mov
push
sbb
sarl
mov
fld1
xchg
mov
jg
adc
into
dec
cmp
jge
loopne
inc
sbb
pop
and
cmp
xorb
loopne
std
and
xor
mov
push
loop
cmpsb
inc
es
roll
cli
jg
loopne
cmp
outsl
mov
jle
push
xor
pop
div
addl
sbbb
cmp
cmp
push
jnp
lock
jmp
adc
hlt
je
push
hlt
rclb
add
enter
rcr
loope
inc
movsb
scas
orl
jmp
mov
cwtl
inc
and
lods
dec
lock
mov
push
xorl
push
push
jle
jns
ret
js
shll
cld
cmp
je
movl
lods
movsb
jns
in
imul
clc
lock
and
lods
xlat
add
and
or
push
cmpsl
sbb
jo
test
mov
jmp
jnp
jnp
adc
in
clc
pop
lea
pop
or
sub
xchg
scas
pop
subb
push
lods
inc
or
daa
or
push
jo
test
mov
test
add
xchg
and
dec
pop
stos
adc
cmp
pop
xchg
lock
push
adc
add
jg
or
sbb
xor
pop
data16
push
mov
xchg
mov
and
pop
dec
addl
test
sbb
aad
or
les
push
je
repnz
adc
rorl
pop
cmp
fld
les
sarb
sub
out
xor
test
cmovge
mov
pop
ss
jno
cltd
es
sbb
or
shll
push
lcall
mov
dec
testb
addb
push
and
mov
rorl
xor
push
pop
cmp
sbb
sub
xchg
movsb
sub
push
push
shr
loop
pop
mov
sub
fisubl
jns
cli
mov
gs
addr16
fcom
and
push
or
hlt
jae
and
add
lods
add
dec
xor
call
xchg
test
and
movsl
or
add
or
iret
and
mov
jnp
scas
and
shll
dec
xor
adc
cmp
in
or
add
and
shr
sbb
cmp
loopne
es
lret
and
mov
adc
ret
adc
test
add
or
inc
push
xlat
loope
and
and
jmp
sbb
or
shlb
or
fs
mov
les
sbb
lock
and
movsb
pop
mov
jl
and
popa
outsb
stos
jecxz
jge
mov
cltd
out
or
dec
adc
pop
mov
mov
insb
xor
sub
and
jge
aaa
jge
outsb
pusha
and
mov
fsts
push
lock
loope
pop
sub
xor
dec
and
insl
dec
in
adc
fnstsw
pusha
cmp
imul
lcall
loope
jmp
testb
push
jns
out
andl
adc
sti
add
dec
jmp
test
fisttps
push
dec
sub
mov
dec
je
or
lods
fiaddl
dec
out
orl
and
decl
or
sub
pop
testl
test
push
fiaddl
jb
sbb
jmp
push
and
inc
add
sbbb
dec
inc
or
insb
flds
fstps
jmp
fisttpll
xor
arpl
adc
dec
lods
add
inc
mov
hlt
adc
sub
push
rcll
pop
sub
pusha
mov
push
jmp
adc
adc
xor
mov
es
fldt
inc
push
sbb
sbb
scas
int
jmp
xor
sti
add
jnp
jmp
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
into
inc
cmpsb
lcall
lds
rorb
or
pop
cmp
lret
inc
out
push
loop
lret
in
cwtl
xlat
outsl
mov
cwtl
jge
mov
and
in
sbb
cmpsb
jmp
test
aaa
mov
inc
rcrl
cli
repnz
xchg
repnz
iret
sub
dec
mov
cli
shll
sub
insl
in
sbb
cmp
loopne
mov
or
push
push
pop
jmp
pop
mov
mov
hlt
mov
inc
loopne
push
push
cli
lcall
and
and
arpl
add
fcoml
jnp
dec
inc
mov
jg
gs
inc
jecxz
aaa
sbb
pop
mov
loope
push
lret
add
push
icebp
shl
sub
add
rcr
push
pop
dec
ljmp
and
out
sub
dec
add
dec
or
fs
in
test
jecxz
push
adc
inc
nop
pop
jmp
or
sub
cmp
adc
push
out
push
test
movsb
ret
sub
out
adc
fwait
or
test
fistpl
fidivl
mov
and
adc
sub
aad
or
movsb
pusha
jmp
imul
or
insl
xor
lea
out
gs
pop
xchg
mov
mov
cmp
add
test
dec
cld
and
jae
lea
scas
cwtl
pusha
xorl
xchg
push
sbb
sahf
out
adc
and
push
cli
adc
cmpb
mov
xchg
mov
fidivrs
adc
mov
cmp
xchg
add
and
push
lea
out
sbb
mov
mov
pop
imul
inc
mov
loop
inc
cmpsb
lods
and
inc
xorl
shlb
xor
or
es
sbb
push
push
add
int3
or
sub
xchg
cltd
push
loope
or
and
sub
or
fwait
sbb
mov
loopne
or
or
fdivp
fstp
sbb
ret
ljmp
data16
xchg
roll
je
testb
sbb
xorb
loopne
subb
sbb
push
cmp
or
add
push
inc
stc
add
bound
imul
int
push
sbb
adc
sub
inc
inc
sub
mov
push
popf
inc
adcl
adc
cmp
adc
dec
cwtl
cmp
jns
push
add
adc
das
stc
stos
and
inc
dec
clc
lock
in
inc
or
gs
jg
jb
and
inc
out
leave
mov
scas
xor
adc
add
or
dec
rclb
subl
cld
pushf
jbe
mov
lea
mov
rcl
pop
mov
xchg
jg
daa
nop
push
lret
jnp
lock
push
dec
je
push
sub
jo
je
mov
xchg
add
or
std
std
or
or
lods
das
mov
inc
cmp
add
ret
sub
or
testb
scas
and
outsb
cmp
mov
pop
or
je
dec
push
sub
xchg
sbb
in
dec
sti
daa
pusha
inc
or
jmp
jo
cmp
add
lret
xor
sbb
xchg
and
pop
adc
das
or
dec
mov
xor
jmp
fdivs
int3
fcompl
and
or
test
sarl
je
push
push
aaa
aaa
cmc
and
mov
movb
jge
cmpb
mov
inc
jle
and
or
or
jbe
xor
repnz
and
push
add
push
push
add
push
lods
pop
xor
fadds
jne
mov
push
mov
cmc
cmp
arpl
inc
push
inc
adc
push
and
scas
outsb
pop
imulb
adc
decb
sub
adc
push
sarb
mov
pop
lret
jne
sbbb
mov
test
inc
std
call
cmp
push
adc
add
sub
or
inc
idiv
dec
pop
gs
jmp
and
arpl
test
data16
or
mov
popa
push
inc
dec
mov
sti
test
jne
shl
add
jmp
push
pop
rcr
cmp
sbb
fsubl
addr16
sbb
pop
or
dec
adc
xchg
ds
pextrw
or
sub
loope
mov
push
push
in
pop
push
adc
dec
addr16
sahf
mov
jl
mov
jecxz
mov
pop
sub
sbb
fildl
and
xor
cli
adc
cmp
jbe
lea
lea
or
jnp
pop
inc
adc
lock
test
xor
or
push
jmp
fs
pop
hlt
sbb
ret
filds
loopne
fsubr
mov
or
xor
test
inc
js
fsubrl
call
or
mov
lods
xchg
mov
popf
ret
dec
dec
arpl
jno
add
sub
inc
jmp
movb
pop
and
push
dec
mov
ljmp
inc
inc
cmp
lea
out
dec
xlat
jo
mov
inc
xlat
sub
ds
or
insb
push
push
pushl
push
pop
fwait
dec
or
adc
test
mov
icebp
cmp
add
testb
mov
add
inc
lcall
push
cli
jl
pop
jb
mov
cmp
pop
or
mull
arpl
adc
mov
add
pop
add
dec
movsb
addl
adc
sbb
lods
adc
testb
sub
cmp
push
dec
sbb
jbe
jae
push
xor
fadds
push
pop
push
adc
mov
adc
cmp
or
ja
nop
out
add
cmc
xchg
cmp
inc
adc
or
and
sbb
nop
negb
cld
in
add
pop
mov
jns
mov
cmpb
push
insl
sbb
adc
xor
jb
push
ret
nop
sbb
pop
or
pop
pop
pop
pop
pop
movsb
jo
xor
mov
and
cmp
pop
orl
cmpl
or
xchg
clc
dec
xor
push
decl
add
push
jmp
or
adc
arpl
pusha
push
mov
es
dec
dec
mov
inc
mov
in
lock
iret
lds
jl
mov
rolb
rcrl
xor
fldl
les
inc
ret
icebp
mov
into
xchg
ds
jns
push
sbbb
cmpb
push
addl
ret
xor
clc
mov
sbb
push
pop
je
dec
jne
in
adc
dec
adc
movsb
mov
jmp
sub
sbb
ss
add
and
test
jo
mov
push
sub
adc
adc
mov
dec
xlat
or
or
sbb
movsl
push
nop
aas
dec
pop
inc
push
inc
push
sub
add
dec
out
and
test
mov
or
shlb
xchg
add
mov
inc
adc
pusha
lods
int
jb
inc
push
and
push
and
movsl
inc
aas
mov
and
arpl
mov
or
sbb
in
dec
add
adc
out
xchg
cwtl
inc
loopne
repnz
outsl
addl
js
xor
in
jbe
out
add
daa
pop
add
cmp
jmp
jp
fcoms
repnz
xor
lock
cwtl
or
add
fadds
orl
cmp
add
scas
inc
in
xor
sbb
mov
lock
int3
or
int
pop
dec
cmp
jae
lea
ja
jno
ds
clc
movb
jmp
jmp
decl
dec
add
add
ljmp
jns
or
inc
add
mov
je
mov
mov
and
sub
mov
vcvtsd2si
add
and
xor
adc
inc
pusha
push
add
nop
js
dec
mov
inc
lock
addl
push
clc
test
js
inc
mov
fdivrl
jmp
add
adc
jb
dec
fidivrs
outsl
push
or
mov
mov
sbb
movsbl
xchg
jno
adc
add
jp
rolb
jmp
xchg
xor
mov
imul
sbb
and
mov
sbb
inc
sub
mov
imul
mov
sub
inc
sbb
and
sub
lock
test
js
aas
xchg
dec
xor
push
jo
int3
add
and
inc
or
pusha
push
xor
adc
mov
cmp
mov
pop
jg
movsl
outsb
push
ret
mov
dec
push
xor
icebp
sbb
jmp
mov
sub
js
shufps
sub
lea
fs
ret
xchg
bound
repnz
push
int
nop
inc
hlt
cli
jb
frstor
add
push
aas
push
out
negb
iret
push
andl
dec
add
pop
push
sub
adc
mov
movsl
inc
xor
add
adc
dec
xchg
jns
pushw
jmp
jae
leave
pop
pop
pop
test
mov
sbb
enter
sbb
cmpsb
je
addb
push
xchg
or
add
and
into
sbb
inc
adc
pop
mov
pop
adc
in
add
arpl
imul
add
and
mov
mov
les
adc
daa
lcall
mov
adc
xor
decl
dec
popa
mov
rcl
testl
sub
adc
or
loop
xor
sub
push
mov
push
inc
es
movsb
pop
inc
mov
stc
inc
jae
or
jae
shld
shl
sbb
push
sbb
ret
outsb
ds
rol
lods
rcl
ljmp
push
call
jecxz
jns
inc
or
dec
push
jmp
xchg
test
jno
jne
mov
sbb
in
dec
pop
inc
test
std
jge
mov
rcl
mov
or
sarb
inc
shrl
call
push
pop
mov
cmp
ljmp
sbb
je
inc
gs
or
inc
add
or
rorl
jl
xor
cmp
push
jmp
sbb
adc
rcll
mov
sub
pusha
enter
rcrb
push
loopne
pop
adc
adc
or
in
mov
jno
sub
and
or
into
jo
popa
out
sbb
aad
sub
ds
xor
imul
shrb
cmp
nop
faddl
or
movsl
gs
je
push
je
mov
lea
and
sub
add
xor
inc
xor
flds
mov
aas
and
pop
mov
push
pop
cmp
xor
das
jg
jns
push
lcall
push
xchg
aam
ret
pop
mov
cmpsl
dec
sti
stos
fs
xchg
addr16
mov
cmp
sbb
adc
ja
sarb
ret
outsl
sbb
in
add
sub
push
pusha
add
xor
data16
scas
mov
loopne
xor
test
adc
xor
int3
mov
aas
js
pop
shlb
sbb
outsl
sti
xlat
adc
outsl
jo
push
push
jne
xchg
adc
inc
add
or
or
movsl
push
imul
mov
dec
xchg
ja
jecxz
aam
mov
js
inc
inc
fidivl
add
xchg
dec
xor
std
movb
ds
push
movsl
jmp
push
pop
imul
mov
cmp
je
cmp
jl
cmp
jg
or
lock
out
xchg
fadd
push
ret
pop
jbe
jne
imul
sahf
out
push
pop
inc
jo
jge
aas
sbb
sub
sub
fs
pop
in
pushf
sbb
cld
loopne
dec
pushl
dec
rolb
ret
aam
mov
lock
mov
jae
mov
push
sbb
add
adc
loopne
lea
pop
pop
orb
jns
dec
push
cld
inc
push
je
mov
dec
xor
in
cmp
pop
lea
sbb
and
stos
add
loopne
mov
sbb
mov
sbbb
sub
lea
mov
in
decl
ret
cltd
shrb
sbb
lock
sub
mov
out
pop
add
clc
add
fstpl
imul
adc
fdivrs
push
cmp
jg
aam
adc
je
stc
jmp
sbb
add
dec
lcall
push
inc
addb
xlat
pop
or
inc
sub
jmp
cmc
insl
and
or
jg
xorl
jne
imul
and
out
fisttps
or
leave
call
jnp
inc
loopne
pop
dec
sbb
pop
daa
arpl
jne
in
sub
in
cmp
scas
test
add
xor
orl
decl
sbb
jp
mov
sub
incl
inc
jno
add
movsl
orb
ljmp
das
lods
push
and
push
pushf
out
aad
addr16
cltd
xor
inc
xor
jbe
push
aaa
add
and
lods
jb
sbb
mov
push
sbb
fsubrs
and
xor
push
push
jmp
pop
insl
xor
push
push
push
push
sbb
jae
add
repnz
shrb
or
mov
cmp
shrb
outsb
les
lcall
push
adc
push
sbb
jae
fnsave
adc
add
adc
push
pop
add
cmp
jge
outsl
mov
lret
or
add
push
pop
dec
loope
icebp
jnp
daa
mov
loop
jne
push
das
stos
dec
mov
loopne
idivb
mov
push
and
sarb
push
jle
jge
fwait
int
test
dec
and
bnd
or
data16
call
xor
add
pop
out
inc
xor
test
pop
setge
pop
in
dec
scas
sbb
pushf
rorl
adcb
xor
imul
xor
push
lods
jecxz
mov
lret
inc
pusha
and
add
push
jbe
add
push
mov
cli
ret
sbb
push
ret
test
movsl
xchg
loope
mov
add
adc
loopne
in
push
push
dec
ljmp
ret
lock
and
xchg
outsb
or
inc
push
pushl
jmp
std
int
mov
jg
iret
es
xchg
ja
push
sub
add
push
xor
add
adc
inc
lea
push
pop
inc
mov
add
or
pop
adc
in
add
loopne
pop
clc
jno
lea
mov
mov
mov
in
xor
sub
sbb
mov
push
and
dec
fcoms
push
hlt
jecxz
dec
xor
cmp
mov
mov
subb
and
xor
sahf
dec
or
inc
mov
lcall
add
add
outsl
and
ret
xor
jns
or
sbbl
pop
adc
xor
mov
popa
adc
adc
cltd
cs
push
mov
or
add
jne
mov
fimuls
fidivrs
inc
add
or
jl
fnstenv
adc
add
test
xor
test
ds
cld
pushl
mov
test
pusha
cmp
pop
cltd
cld
es
clc
ljmp
icebp
neg
outsl
nop
call
push
dec
inc
inc
xchg
mov
sub
ds
mov
stos
add
daa
flds
pop
lock
jae
or
mov
add
adc
push
adc
in
xor
jge
inc
neg
neg
sbb
nop
ja
jb
mov
sbb
rcrb
xchg
loope
insl
adc
xor
incl
test
insl
fisttpl
test
adc
jo
mov
dec
or
pop
adc
pop
adc
dec
push
sbb
adc
xor
add
sbb
adc
pop
incl
push
popa
iret
cmp
andb
xchg
or
leave
push
or
add
fstps
adc
push
or
lcall
repz
xchg
or
dec
inc
sbb
cli
lret
pop
sbb
fisttps
push
scas
je
dec
jbe
les
loop
aam
jo
mov
push
mov
shrb
lsl
sbb
or
pop
jmp
mov
pusha
mov
call
pusha
fbstp
loope
jbe
orb
add
pop
nop
mul
repnz
cmp
in
sbbb
fwait
js
js
adc
push
pop
dec
clc
cwtl
jbe
inc
xor
cmp
into
inc
dec
jp
mov
jb
mov
aad
xor
or
xlat
subb
sbb
jne
int
aam
add
mov
or
rclb
and
lcall
data16
stos
scas
xchg
imul
adc
xor
and
mov
push
pop
add
into
jmp
in
xorl
or
dec
sbb
push
push
sbb
sbb
dec
shlb
push
dec
and
xchg
push
add
adc
pop
test
mov
push
jno
es
add
cltd
cmp
mov
dec
rcl
cmp
cmp
pop
lret
in
mov
add
cmp
adc
out
jmp
inc
adc
rolb
lahf
jne
and
jno
sub
mov
in
and
fsubl
pop
inc
cmp
mov
inc
sbb
push
loopne
xor
and
inc
adc
hlt
cmp
in
ror
pop
dec
inc
decb
dec
xchg
add
dec
cmc
in
out
ficompl
cmpl
add
ja
test
in
cmp
je
cmp
and
sub
cmp
aam
inc
cli
aad
push
repnz
pop
pop
test
mov
test
dec
shr
xor
iret
and
aas
sub
sbb
and
and
mov
jb
fsubl
or
les
lret
out
popa
mov
sar
xor
inc
push
xchg
sbb
jecxz
call
cmp
pop
lea
jo
cltd
sub
inc
push
pop
inc
pop
xchg
inc
ret
inc
jbe
bound
gs
jmp
outsl
xchg
lods
fmuls
jbe
add
push
gs
lock
mov
mov
jne
push
lea
enter
icebp
add
and
or
pop
mov
ret
dec
push
or
and
inc
loope
test
pop
subl
les
jo
lret
mov
mov
xorl
sbb
sbb
and
incl
lret
call
or
fs
cmp
js
xchg
inc
enter
or
dec
push
shlb
sub
and
test
daa
jl
push
popf
call
sub
fidivrl
movsl
sub
jne
adc
loop
pop
outsl
jmp
push
inc
cs
je
cmp
adcb
pop
jne
stos
dec
mov
add
add
push
sbb
dec
cld
or
aaa
js
cld
ljmp
pop
mov
or
dec
in
rcrl
and
sbb
xor
insl
push
popa
mulb
mov
and
es
lcall
cmp
imull
pop
cmp
jg
fldenv
inc
jno
mov
cmc
push
lret
mov
in
scas
and
cmp
jmp
or
jecxz
mov
sub
mov
inc
xchg
clc
jns
aas
lea
mov
in
jb
sub
orl
orl
andl
pop
mov
inc
or
pop
ljmp
xor
push
icebp
fneni(8087
add
mov
push
je
loop
or
adc
push
sub
lea
push
fnstenv
or
add
pop
pop
push
cmpsl
out
inc
mov
cltd
shrb
dec
out
mov
mov
pusha
mov
shlb
jnp
test
xchg
fsubs
lock
add
mov
aam
sbb
ja
and
pop
mov
repz
jecxz
xchg
or
or
or
add
push
lret
rcll
sbb
mov
loopne,pn
lret
and
dec
or
call
loopne
adc
or
stos
jae
sbb
sti
xor
inc
testb
push
xchg
out
inc
adc
or
adc
add
push
aam
sub
imul
dec
push
jmp
add
xchg
scas
shlb
loopne
sbb
inc
std
je
pop
push
shl
jbe
pop
cmpsl
outsb
in
add
das
adc
sbb
jbe
adc
das
jmp
and
fadds
inc
les
pop
mov
popl
sbb
je
or
mov
fists
xor
adc
jmp
lea
lret
adc
sbb
pop
push
sbb
jle
cmp
inc
jle
outsl
and
add
je
loopne
inc
xor
pop
pop
push
in
adc
adc
shll
xorb
sbb
lods
push
shr
inc
ret
pop
and
in
call
or
mov
leave
leave
dec
fldt
mov
enter
ss
daa
daa
daa
sub
xor
daa
daa
daa
sbb
cmp
daa
insl
bound
cmovs
dec
dec
dec
push
push
pop
xchg
xchg
xchg
or
xchg
xchg
xchg
push
ret
js
dec
es
mov
cltd
fs
mov
xchg
dec
pushf
mov
es
rclb
int3
cltd
ss
add
sarb
dec
es
in
dec
es
call
cltd
fs
clc
xchg
sbb
xchg
cld
add
add
imul
or
adc
adc
sbb
cltd
fs
dec
and
sub
xchg
dec
xor
or
cltd
cmp
gs
leave
mov
cltd
dec
dec
mov
xchg
dec
xor
pop
mov
leave
pusha
sbb
addl
pop
pushf
add
jle
add
mov
test
or
jg
jbe
cmp
add
insl
inc
lcall
dec
dec
xor
sbb
sbb
and
and
cmp
add
cli
rorb
inc
enter
test
dec
rorb
or
or
add
dec
enter
enter
push
xchg
push
outsb
ret
adc
add
mov
mov
je
roll
bound
popa
add
or
push
pop
sub
stos
add
jmp
mov
cmp
fmull
sbb
xor
jae
add
and
push
dec
movsl
psllw
outsb
inc
inc
mov
lret
ret
cmp
ja
or
gs
sub
imul
flds
dec
add
jne
mov
inc
filds
or
lret
je
dec
jne
sbb
sub
push
dec
call
mov
inc
cmp
je
dec
xor
jle
push
test
sbb
ja
comiss
out
and
jmp
out
scas
test
add
loopne
leave
push
add
xor
add
loop
or
jmp
or
push
inc
test
fs
add
mov
loope
pop
imul
mov
icebp
lea
push
addb
xchg
pop
xchg
push
push
push
jl
outsb
xor
dec
or
sub
movsl
dec
lock
push
adc
cmp
std
shlb
aaa
push
adc
shr
lds
cmp
mov
push
adc
lock
or
add
mov
add
test
cs
int3
push
dec
xor
push
imul
or
sub
push
cmp
or
jmp
sbb
pusha
call
inc
pusha
inc
mov
pop
in
outsb
add
pop
lock
cmp
pop
mov
sub
and
push
dec
push
mov
pop
mov
sbbl
mov
negl
repnz
mov
mov
push
es
dec
and
je
push
je
inc
pushl
adc
mov
push
mov
sub
sub
sbb
sbb
push
shll
idivb
dec
and
push
je
cmp
xchg
fucomi
andb
mov
cmp
push
fcmovb
mov
jp
jp
out
pop
cmp
sbbb
jmp
cmpsb
mov
mov
cmpw
mov
ds
hlt
stos
out
lods
in
adc
or
ret
mov
push
fs
or
jne
mov
adc
or
sbb
push
add
xchg
sub
or
xor
std
rol
mov
pop
ss
lret
mov
or
jae
push
std
and
fisubrs
rcll
jb
mov
daa
mov
dec
jbe
pop
orl
add
nop
add
adcb
rorb
scas
or
arpl
mov
xchg
xchg
das
push
push
inc
fisubs
jnp
sbb
addr16
xchg
lahf
add
jbe
jnp
jbe
mov
cmp
sub
adc
jmp
mov
or
add
mov
adc
or
push
inc
mov
loopne
mul
int3
push
or
jb
dec
adc
add
pop
fs
and
and
adc
cld
inc
mov
pop
mov
scas
mov
dec
push
adc
jmp
mov
xor
mov
xor
mov
push
adc
inc
or
iret
test
sbb
inc
fcoms
dec
js
movsl
sbb
ror
decl
add
jge
ja
jbe
rclb
sub
out
into
add
sarl
push
imul
movsbl
cmp
push
sbb
dec
nop
push
and
test
jmp
insl
fiaddl
add
aas
cmc
cmc
mov
adc
andb
push
lea
xorl
add
dec
mov
inc
js
dec
loop
imul
inc
adc
and
add
sub
popa
add
add
push
sbb
or
mov
sub
fisubrs
pop
pop
push
shll
inc
in
mov
clc
push
xor
xchg
adc
add
lea
das
test
or
inc
and
cmp
icebp
and
cmp
mov
int
add
fiadds
hlt
push
push
push
lar
sbb
fimull
ret
jmp
mov
push
jecxz
jecxz
jle
mov
push
sbb
les
push
rolb
test
out
hlt
jg
test
cmp
shlb
addl
js
clc
fwait
test
cmpb
and
and
push
loop
mov
xchg
mov
fdivl
inc
outsb
add
adc
adc
cmp
ss
lock
dec
add
inc
lahf
shlb
xchg
std
inc
jmp
push
dec
pop
adc
testl
lret
out
xor
cmp
jge
mov
loope
jle
mov
and
sarb
xchg
ret
push
add
pop
pop
adc
cmp
ss
jb
cmp
mov
es
mov
mov
js
gs
xorb
and
pushf
cmp
jle
rclb
add
inc
ret
sbb
sarb
sti
clc
cmp
movsl
push
rolb
nop
dec
xchg
mov
or
arpl
enter
or
jmp
add
xchg
sub
add
movsl
lcall
sti
add
adc
out
fsts
js
pop
test
repz
jl
sbb
outsl
fiaddl
aad
jle
stos
push
stos
pop
pop
xchg
fcompl
insl
cmp
add
insb
mov
pop
adc
pop
sbb
add
pop
pusha
pop
lods
jns
dec
or
inc
lea
mov
pop
movsb
sub
inc
shl
repnz
pop
test
call
loop
rolb
mov
or
mov
jmp
shrb
mov
out
sbb
mov
inc
adc
iret
inc
mov
lea
cmp
cli
movb
dec
ds
or
cmp
sub
sub
adc
fldt
ret
cli
jb
incl
loope
sahf
lock
mov
js
pop
inc
sarb
add
dec
ds
add
push
xor
lea
pop
sub
stos
push
je
inc
mov
icebp
loope
aaa
idivl
fnstcw
inc
stos
inc
std
adc
enter
pop
sub
xor
mov
dec
xor
cmp
sub
loop
das
test
mov
xchg
jle
pop
push
mov
shl
sub
sub
or
push
sbb
lea
xor
cmp
cmpb
push
or
cmpb
and
aam
out
ret
sub
jl
or
push
mov
js
sub
mov
out
push
cmp
mov
or
dec
jns
mov
cwtl
push
dec
cs
push
rcrb
inc
lods
pop
out
test
pop
push
jl
rorl
mov
push
aas
xor
out
or
inc
roll
inc
pusha
lcall
and
cmp
clc
cli
fsubrs
cs
fsubr
pop
pop
push
pop
add
add
repnz
icebp
aas
sub
mov
mov
dec
jns
mov
aam
adc
cmc
rcll
hlt
push
aas
mov
test
repnz
mov
icebp
cmp
das
cmp
sub
jo
add
xorl
adc
arpl
jo
cmp
sbb
jnp
shlb
daa
andl
push
dec
into
clc
add
xchg
out
push
jl
or
into
dec
out
and
inc
xor
cmp
adc
imul
dec
lods
shl
test
jg
js
xchg
cmp
flds
pop
aas
or
lock
xchg
int3
mov
pop
add
or
add
loope
sbb
outsb
leave
adc
mov
mov
in
sbb
bound
xor
add
and
mov
das
mov
mov
sub
push
add
mov
sbb
adc
or
pop
lods
mov
or
out
jmp
inc
push
loopne
sub
iret
test
imul
cmpsb
lock
pop
sbb
mov
inc
shrb
xor
insb
int3
mov
mov
cmpsb
lret
lock
sahf
mov
sub
xchg
adc
inc
cs
imul
rorb
ss
cmp
je
or
aas
and
rorb
cli
mov
jg
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
mov
add
out
or
adc
call
push
andb
cmpsb
xchg
add
scas
inc
mov
jbe
or
aaa
xchg
and
adc
or
popa
mov
xor
mov
paddusw
add
and
fsubrp
push
add
adc
mov
adc
lar
and
imul
xorl
dec
dec
stos
xchg
add
cmp
jbe
mov
mov
or
add
or
inc
push
jno
fs
ret
push
pop
sbb
pushf
ss
setg
inc
mov
mov
cmp
mov
jnp
cmpl
mov
jne
push
add
push
movb
lea
notl
das
push
sbb
mov
inc
jne
pop
test
sbb
add
add
fdivl
add
ret
jbe
jbe
xadd
mov
dec
adc
imul
movb
out
xor
fdivl
push
negl
push
add
fadd
inc
add
dec
and
push
lods
idiv
mov
int
sub
add
add
add
popa
push
pop
into
out
ret
or
push
xor
iret
or
xchg
mov
push
xlat
add
or
pop
adc
shll
mov
add
call
outsb
and
mov
mov
mov
jne
pop
das
aam
or
inc
lock
sub
adc
outsl
jno
mov
push
push
adc
movsl
lea
enter
jne
push
and
add
imul
jmp
bound
je
adc
dec
mov
pop
and
and
push
fadd
xchg
mov
adcb
movsb
mov
cmp
cmp
cmpsb
push
or
and
call
js
popa
pop
lods
jbe
dec
rorb
es
adc
mov
xor
cmp
hlt
sahf
movsl
lods
fwait
and
adc
ljmp
aam
lret
xor
sub
outsb
and
decb
pop
add
pushf
mov
sbb
enter
push
xor
mov
pop
add
or
add
sub
rcrb
inc
xor
add
mov
or
pop
mov
and
leave
xorb
add
insb
movb
push
push
jg
xor
mov
inc
inc
jmp
ret
popf
neg
sbb
mov
pop
add
jg
ret
daa
xor
or
jne
adc
mov
xor
xor
dec
insl
mov
scas
lods
ret
sub
adc
jmp
inc
insb
fdivrs
xor
mov
subb
insl
js
jl
adc
sbb
cmpsl
or
mov
pop
pop
loop
sub
push
decb
daa
xchg
lcall
add
dec
pop
sbb
pop
movswl
or
and
icebp
in
cmp
adc
push
fbstp
ret
or
cld
shlb
add
mov
enter
inc
push
dec
idiv
push
daa
cmp
jge
sbb
orl
cmc
dec
loopne
fimull
sub
jge
jmp
add
dec
jmp
mov
ret
adc
and
inc
mov
roll
adc
xor
push
xchg
mov
sbb
sbb
shlb
in
les
and
sub
ss
sbb
js
jg
jb
xor
jns
pusha
and
or
mov
fimull
jl
mov
push
shll
and
add
mov
mov
sahf
sarl
pop
push
push
jg
mov
scas
mov
dec
pop
or
mov
pop
js
jmp
cmp
push
stos
loopne
in
rcr
xchg
xor
or
mov
or
add
xlat
xor
adc
sub
sub
aam
add
jp
imul
ja
jle
in
push
sbb
add
movsl
rcrb
adcb
add
push
mov
addr16
enter
es
call
mov
add
aaa
push
lods
push
sahf
mov
sbb
stc
add
mov
xor
and
and
push
pop
push
inc
adcb
aad
rolb
and
jbe
sahf
push
insb
xchg
add
roll
push
pop
in
add
push
mov
stc
cmp
jle
push
mov
add
mov
and
sbbb
jne
push
and
nop
push
and
inc
rol
xchg
fsubrs
dec
sub
test
stc
idiv
sub
and
dec
or
insb
push
push
push
push
dec
and
push
loopne
dec
je
test
out
int3
cld
jl
xor
inc
fsub
adc
sub
pop
inc
hlt
cwtl
add
ljmp
ror
xorl
rolb
testb
sahf
clc
gs
or
pop
cmp
jecxz
jne
lods
fwait
jb
lock
aas
jle
xchg
in
cmp
inc
inc
je
dec
or
inc
jle
xor
or
pop
sub
lds
dec
jae
inc
push
das
sbb
jmp
inc
clc
rorb
hlt
fisubrl
into
push
xor
or
inc
sbb
jg
mov
addr16
mov
adc
sub
data16
nop
or
add
pushf
aas
das
sub
mov
outsb
daa
into
pop
jl
add
orb
pop
add
dec
adc
ja
test
jno,pn
add
sub
imul
je
enter
sbb
pop
test
mov
sarb
add
jecxz
add
faddl
and
mov
fdivl
inc
push
and
mov
aam
pop
add
inc
mov
or
addb
xchg
orb
clc
and
lret
lret
test
incb
test
fxch
shr
add
or
lcall
shr
or
mov
mov
dec
test
add
shr
lret
add
dec
shll
js
dec
or
add
repnz
jmp
movsl
lea
push
in
jle
xchg
jbe
add
jl
in
adc
das
sbb
cmp
mov
or
add
pushf
addl
or
mov
and
cwtl
sahf
mov
insb
or
add
mov
pusha
mov
lret
clc
orb
ret
mov
clc
push
xor
testb
mov
jp
pushf
enter
inc
jae
sbb
ljmp
cwtl
cmpsb
and
add
ja
data16
mov
adcl
sbb
ss
or
shl
clc
xor
andb
jbe
imul
test
push
sbb
jbe
test
mov
xchg
or
dec
pop
je
cmp
jmp
data16
aad
sbb
adc
jle
xor
addb
mov
or
scas
dec
or
jg
jg
add
fwait
cli
add
jge
outsb
leave
gs
insb
lods
pop
jg
cli
add
stos
enter
add
pusha
mov
push
rcrl
or
pop
shlb
sub
push
loop
push
loopne
sub
xor
adc
jbe
add
mov
or
fsubrs
jbe
sbb
xchg
shll
push
lods
rorl
in
adc
xsave
adc
xchg
jbe
mov
in
ret
dec
sbb
sub
and
mov
es
and
lods
test
mov
int3
popf
inc
xor
add
xlat
inc
mov
push
push
push
push
xchg
adc
cmp
pop
jl
mov
xor
mov
fprem
fwait
nop
lret
je
mov
jmp
cmpl
sbb
xchg
loopne
rcll
mov
add
adc
je
sbbb
or
adc
mov
or
or
jb
mov
add
jo
sbb
ja
insb
mov
ficompl
xor
sbb
shrb
xchg
pop
and
adc
or
inc
daa
and
sbb
push
pusha
jl
test
add
add
repnz
mov
incl
js
push
push
or
je
in
lea
inc
push
js
cwtl
lcall
js
mov
add
inc
mov
rcrl
jmp
fmul
cmp
loop
adc
aaa
push
sub
fsubr
inc
jne
cmp
jp
arpl
add
adc
lret
add
loopne
andb
ret
shrb
stc
cmpb
fs
or
and
pop
adc
std
add
push
or
add
lret
jmp
adc
dec
dec
jmp
invd
mov
inc
add
pop
adc
sub
ficompl
mov
pop
adc
popa
lock
push
mov
cpuid
shll
dec
sbb
mov
adc
add
sbb
pop
add
xlat
je
jge
into
add
or
or
sub
sbb
sahf
lahf
sbb
imul
and
das
sbb
pop
mov
into
cmp
dec
mov
in
cmp
xlat
and
jo
gs
add
mov
inc
bound
add
gs
xchg
dec
in
out
jge
jbe
aaa
mov
inc
dec
pop
push
and
pop
andps
xorb
cmp
push
push
push
pop
adc
xchg
lahf
jge
sbb
xchg
cmp
mov
add
out
repnz
ret
jmp
dec
lcall
je
adc
pop
ss
pushf
loop
push
mov
add
mov
mov
add
fnstcw
add
mov
andb
or
mov
test
test
inc
jecxz
add
add
mov
gs
out
sarb
cmp
pop
loopne
cwtl
jp
push
test
clc
fsubrs
or
sbb
filds
cltd
push
xor
sub
fnstenv
mov
jb
push
mov
mov
ljmp
or
rcrb
xor
inc
mov
or
xorb
adc
inc
insl
fs
in
sub
and
add
push
imul
xchg
call
mov
rorb
or
add
add
xchg
xor
stos
add
lods
mov
push
inc
jo
popf
mov
jmp
xchg
xor
shll
imul
pop
jbe
popa
dec
jbe
or
sub
lcall
jb
sbb
pop
xchg
rolb
stos
outsb
push
or
outsl
or
int3
push
sub
adc
popf
or
mov
ret
ja
and
push
rclb
orb
mov
mov
sbb
inc
or
imul
fstl
movsb
dec
xchg
and
je
xor
mov
and
sbb
hlt
push
jne
pop
aaa
cwtl
jmp
or
push
pusha
mov
popa
rol
ret
ret
outsl
sti
std
ds
xor
lcall
int3
pop
jp
push
inc
cmp
fistl
adc
add
xchg
inc
xor
fldcw
fildll
and
or
dec
incb
inc
xlat
decl
fcoml
shr
shl
and
or
cmpb
mov
in
xor
lcall
fwait
push
ljmp
mov
adc
je
jb
dec
mov
xor
iret
jmp
mov
xor
imul
or
subl
test
or
adc
xor
push
add
mov
pop
negb
inc
stos
push
jge
popa
adc
das
lods
dec
loopne
and
je
adc
mov
mov
pop
jb
cld
inc
pop
dec
sbb
xor
iret
rorb
test
je
in
pusha
sarl
inc
lods
jecxz
shrl
mov
movsb
imul
push
fistpll
sub
addb
iret
out
dec
or
nop
aaa
inc
add
dec
cld
shlb
push
push
and
push
add
cmp
ret
push
pop
pop
sub
inc
enter
loopne
cld
lea
mov
cld
lret
cmp
sub
push
cmp
jbe
lret
add
sub
pop
mov
jl
into
pop
inc
mov
ret
ds
adc
mov
add
addb
cmp
mov
cmpl
sub
push
or
test
adc
js
dec
push
mov
cmp
adc
or
push
push
pop
pop
dec
lahf
or
pop
pop
pop
int3
rol
push
add
jne
mov
pusha
cmp
push
mov
push
loopne
adc
push
pop
sub
xchg
inc
mov
rolb
fdivrs
daa
push
adc
cmpb
jne
xchg
mov
mov
push
and
adc
xchg
shll
jecxz
cltd
insl
in
cmp
jmp
push
dec
loopne
inc
push
xchg
pop
mov
adc
lret
add
lea
inc
cmp
and
loop
pop
sub
addb
xor
and
xor
and
fisttpll
push
jmp
daa
or
bound
loopne
sub
pop
pop
mov
rorl
sbb
test
lcall
je
sub
mov
adc
pop
pop
xor
daa
add
and
enter
sbb
jmp
pop
mov
add
sub
inc
syscall
mov
adc
sbb
scas
add
roll
and
sub
and
ret
rolb
sbb
lods
pop
push
or
sub
mov
or
cmp
or
or
mov
mov
jno
sbb
js
arpl
push
pop
in
les
lea
shlb
pop
push
test
test
add
addl
lret
add
push
test
dec
inc
adc
pop
popa
or
adc
adc
sub
adc
sbb
jmp
and
mov
or
mov
mov
lds
add
dec
jg
cmpsl
movsb
lods
flds
roll
pop
add
inc
or
repnz
cmp
adc
aam
inc
add
pop
popa
cmp
iret
or
or
push
icebp
les
dec
repnz
icebp
or
daa
xchg
sub
cs
push
adc
imul
inc
jne
inc
xchg
stos
mov
dec
jnp
inc
sub
das
xor
shrb
call
ss
lods
and
adc
mov
rcrb
pop
sub
in
push
sub
and
push
lods
xlat
or
and
bound
push
cmpsb
mov
sbb
js
push
cs
in
aaa
xor
or
sub
fdivrl
divb
cmp
cmpb
adc
idiv
add
incl
adc
mov
cmp
push
sbb
or
inc
dec
dec
aaa
es
sti
push
mov
ljmp
andb
mov
mov
popa
xchg
dec
test
dec
adc
add
sub
mov
and
aaa
loope
je
jne
bound
cmp
arpl
inc
dec
add
lahf
pop
nop
mov
or
rolb
jp
mov
push
sbb
les
fprem
loopne
add
std
sub
roll
je
push
add
add
push
xor
xchg
cwtl
hlt
or
sbb
mov
or
cmp
mov
xchg
jge
movsl
movsl
movsw
xor
pop
mov
stos
in
loop
add
mov
adc
xchg
mov
lds
jae
int
addl
push
ret
rclb
mov
inc
inc
lds
sub
sub
sbb
in
iret
and
xchg
adc
outsl
es
push
bound
xor
xchg
mov
call
idiv
and
iret
imull
cld
lock
or
fildl
cmp
add
outsb
jecxz
test
add
and
mov
sbb
in
loope
or
xor
lock
dec
daa
sti
in
sub
cltd
xchg
les
mov
lret
fwait
mov
push
test
jns
in
mov
lahf
and
iret
sub
jno
mov
xor
and
mov
mov
inc
jmp
cmp
xchg
and
jbe
adc
jne
sub
nop
int3
leave
leave
dec
inc
cmp
fcoml
fstl
clc
mov
cmp
dec
cmp
cmpb
or
adc
dec
lods
dec
add
mov
movl
or
xor
sbb
pushf
dec
cli
inc
pop
push
out
add
mov
sub
jmp
mov
call
frstor
cmp
sub
and
adc
or
jge
or
jb
sub
dec
fcompl
clc
jbe
pop
and
aaa
mov
and
inc
stos
mov
add
or
or
inc
xchg
adc
pop
dec
icebp
sbb
mov
sbb
lds
rcll
pop
add
dec
pop
fcomps
mov
push
shll
jo
jge
xor
cli
pusha
clc
fnstsw
dec
cmpsl
or
add
adc
inc
push
mov
loope
aad
add
jg
ja
mov
inc
aaa
jb
lret
add
sub
push
sub
sbb
or
and
or
adc
jle
je
ss
push
hlt
fdivrp
and
shll
adc
popf
or
push
xor
out
push
xchg
push
jle
add
jb
xor
xor
shl
ret
inc
test
xor
push
jg
jl
jno
sub
and
xchg
xchg
mov
sub
xlat
cli
and
xchg
pop
mov
add
inc
mov
sub
jle
fwait
xor
cmp
jg
jl
jae
push
add
loopne
cmpsl
dec
add
xchg
adc
movsb
int3
enter
ret
cltd
fs
mulb
mov
mov
out
mov
popa
aam
jecxz
fwait
xchg
call
gs
lds
outsl
fucomp
insl
mov
test
sub
add
cmpsl
iret
push
push
or
aad
add
jmp
xchg
sbb
loope
sub
add
inc
inc
ds
daa
push
or
out
push
or
cmp
inc
inc
mov
adcl
mov
add
add
mov
mov
adc
mov
dec
jmp
pop
push
mov
and
cs
cmpsb
negl
cld
inc
sub
adc
ss
sub
ficompl
jns
out
sbb
dec
bound
xlat
clc
inc
es
jne
icebp
call
inc
jmp
add
add
leave
je
incb
mov
mov
mov
out
es
cwtl
outsb
push
shlb
lahf
idiv
bound
out
push
cmp
ja
add
cmp
adc
cmp
add
loopne
shll
leave
adc
cli
cmp
jb
neg
mov
or
popf
and
test
adc
add
adc
test
cwtl
test
dec
movsb
pushf
xchg
daa
or
adc
xor
movb
nop
jo
add
cmp
fidivrl
lcall
inc
jmp
push
mov
cs
iret
xchg
sahf
and
sbbb
lcall
fistpll
loopne
stos
leave
mov
mov
dec
dec
jl
jmp
cld
add
insl
test
mov
mov
stos
popf
fistps
inc
or
scas
cmp
and
les
cmpsb
das
sbb
std
cmp
jle
sub
xchg
xchg
in
lock
mov
or
test
cld
mov
xchg
mov
dec
rorl
xchg
cmp
cs
or
sbbb
jnp
push
pop
inc
shll
pop
jge
out
jnp
into
push
sub
adc
aam
sbbb
je
jmp
mov
or
add
cmp
mov
daa
mov
outsb
xchg
pop
and
pop
orb
fdivl
aaa
sub
or
orl
xor
add
push
and
cmp
xor
mov
lods
sub
jmp
jmp
sub
out
cmpsl
adc
inc
dec
dec
je
test
nop
inc
sahf
nop
fcoms
dec
sahf
xchg
and
mov
fstpl
adc
adc
iret
dec
iret
mov
and
cmp
dec
cmp
or
jecxz
cmp
jmp
push
jg
ss
xor
or
decl
dec
cmpb
cwtl
xor
nop
movsb
test
add
inc
test
nop
add
mov
push
leave
push
add
mov
cld
rclb
les
push
test
lahf
sbb
pushf
movsb
mov
jb
xchg
mov
mov
inc
xchg
pushf
cmpl
decl
cmpl
or
mov
xchg
add
sub
xchg
mov
syscall
repnz
or
ficoms
popa
loopne
cmp
scas
fcomip
cmp
repz
pop
jo
mov
loope
out
aas
es
mov
add
andb
fsubrs
xchg
leave
loope
adc
push
cs
lret
and
xchg
aad
lods
mov
movsb
lea
adc
aam
or
call
add
adc
xor
nop
mov
add
cmp
push
shll
data16
sarl
and
and
add
xor
jbe
xor
movsl
cmp
pop
loope
daa
mov
sahf
sbb
sbb
sarl
adc
dec
test
xchg
mov
jae
and
lods
stc
push
out
imul
adc
sub
jmp
and
sbb
push
push
sti
add
push
add
cmp
dec
aas
into
mov
xchg
fldcw
adc
add
ror
inc
sub
lea
sar
lret
ret
loopne
mov
push
push
ljmp
imul
fstpt
mov
les
fdivs
mov
sar
pop
and
gs
sbb
inc
push
mov
add
or
cli
add
mov
push
outsl
shrl
cmc
sbb
xor
mov
in
mov
and
and
push
add
add
jae
xchg
shlb
call
stc
enter
jge
testl
in
ljmp
dec
clc
xchg
or
cmp
jne
scas
mov
jne
push
or
xchg
in
sar
outsb
pop
dec
lods
rolb
mov
lea
or
adc
pop
xchg
sub
adc
xchg
call
rorl
ret
movsb
dec
jae
inc
movsb
inc
push
nop
xchg
add
jl
add
outsb
lcall
add
popl
bound
or
js
div
mov
add
shr
and
addr16
add
mov
push
xchg
add
jg
or
inc
sarb
clc
lock
and
cli
hlt
clc
shl
fiadds
ja
or
mov
dec
mul
repnz
pop
cli
inc
mov
cmp
dec
lock
repnz
repnz
add
mov
div
loopne
push
rcr
cmpsl
or
add
call
sbb
jge
insl
or
xchg
push
sbb
lret
pop
fidivrl
fimull
scas
das
mov
xor
and
data16
xchg
and
lcall
enter
or
xor
cld
mov
ja
stos
inc
cmp
dec
pop
fcoml
repnz
pushw
sbb
loop
cmp
jge
mov
xchg
or
mov
test
pmuludq
icebp
cltd
cmpb
mov
inc
int
inc
daa
adc
inc
push
cmp
and
sub
inc
shlb
fdivrs
aam
xchg
and
sub
mov
dec
dec
nop
and
cmp
hlt
mov
dec
push
push
ret
pusha
and
sbb
orl
stc
push
test
mov
cmp
jo
xchg
cmpsl
fnstcw
test
mov
mov
adc
or
idiv
adc
adc
adc
xchg
addr16
or
adc
test
dec
gs
lock
out
or
add
enter
test
orl
push
ret
add
jne
or
test
outsl
add
pusha
mov
jge
add
jbe
stos
cwtl
sbb
sub
inc
add
mov
sbb
incl
mov
call
pop
outsb
adc
inc
call
inc
pop
mov
dec
cltd
and
or
pop
in
sbb
mov
in
call
pop
pop
inc
rcll
xchg
lods
sahf
mov
adc
fsubrp
adc
out
jle
inc
imul
push
frstor
push
jmp
loopne
call
je
loopnew
fsubs
pop
add
ja
add
mov
mov
mov
push
in
jne
fbld
adc
sti
into
add
lds
lock
mov
sub
les
mov
into
or
lea
or
adcb
mov
sub
je
push
clc
rolb
fists
mov
enter
sahf
mov
jae
popa
cmpsb
and
in
lret
pusha
jne
lahf
or
pop
xor
add
add
into
or
icebp
pop
jb
mov
inc
subb
movb
mov
mov
stos
hlt
data16
inc
cmpb
or
in
fcompl
add
dec
cmp
inc
out
xchg
jecxz
dec
add
add
fadds
add
adc
or
ret
dec
outsl
mov
dec
mov
jb
adc
push
adc
or
lret
mov
add
push
mov
adcb
ret
adc
testb
add
add
add
movsl
test
ret
lcall
add
push
mov
shll
notb
cmp
or
xor
push
mov
nop
push
or
add
push
sbb
or
add
add
pop
xchg
cmp
ret
sbb
adc
mov
add
mov
xor
or
xchg
adc
das
bound
or
loopne
pusha
test
lret
dec
in
mov
xor
into
pusha
roll
sub
push
data16
pop
and
pop
pop
nop
xor
sbb
or
or
cmpb
inc
ret
or
or
push
xchg
adc
dec
rolb
adc
test
or
or
add
mov
movsl
push
or
in
push
mov
mov
jne
cs
pop
or
or
loopne
test
push
pop
hlt
insl
add
out
mov
jne
and
mov
js
mov
push
inc
push
add
ret
sarb
scas
adc
xor
and
push
add
clc
mov
inc
push
mov
test
testl
adc
orl
mov
test
xchg
push
add
mov
inc
daa
adc
adc
rol
push
out
or
fxsave
jmp
inc
fiaddl
mull
test
adc
data16
sbb
add
add
mov
jo
jbe
mov
mov
cld
cmpsb
lret
je
and
sbb
inc
jg
push
cmp
jns
into
into
mov
or
sub
out
icebp
push
out
push
pop
nop
pop
sahf
pop
sub
adc
mov
popf
clc
add
mov
rcrb
pop
ret
or
inc
ja
fists
cmpl
dec
shrl
lcall
test
lahf
pop
and
loop
xchg
out
adc
add
repnz
add
add
jbe
imul
je
and
jne
pusha
inc
shl
or
sub
jmp
mov
mov
lret
jb
lret
sbb
mov
out
mov
rcl
pop
mov
push
sbb
adc
ret
aam
xchg
mov
cmpsb
push
jp
add
or
stos
xchg
hlt
call
stos
sarb
sbb
inc
xchg
and
xchg
inc
rcr
data16
roll
inc
jl
lea
sbb
mov
and
je
jnp
loopne
or
cs
cmp
add
repz
ret
jl
imul
aaa
or
ljmp
andl
jb
sbb
sbb
mov
out
je
mov
sarl
inc
loope
xchg
mov
cmp
cmp
lock
jbe
dec
int3
in
mov
push
xchg
test
cwtl
dec
loopne
cwtl
rorb
fisubrl
inc
cmp
imul
adc
push
aaa
cmpsb
fsubrl
or
popa
mov
aam
sbb
jle
adc
jns
add
add
sbb
push
dec
inc
test
add
mov
ret
mov
pop
pop
fadd
dec
push
loopne
lcall
lcall
ret
xor
insb
sti
loop
and
push
push
mov
pusha
loope
adc
and
sub
and
fmuls
daa
and
fmul
xor
mov
xor
es
inc
xchg
inc
pusha
jne
adc
sub
push
roll
mov
pusha
test
adc
addl
add
sti
jae
xor
pushl
cs
jne,pn
imul
adc
or
adc
and
xlat
loope
xlat
out
xchg
ret
add
cmp
add
jno
push
sti
fsts
sub
or
cmp
dec
pop
jmp
mov
in
iret
mov
int
leave
pushf
roll
cmp
pop
cmpb
mov
push
insb
sub
add
sarb
sub
lahf
inc
pop
mov
loope
add
orl
or
sub
outsb
mov
push
ret
push
add
add
push
dec
and
inc
aad
xor
inc
mov
sbb
add
loope
cmpl
mov
jge
and
sbb
cltd
sbb
dec
in
aad
or
push
clc
cli
fistl
out
enter
je
mov
jg
xor
int3
ret
sti
push
lock
loop
clc
and
cld
pop
inc
sub
push
adc
lea
push
outsb
outsb
add
rorb
mov
hlt
ret
js
inc
jae
sbb
ss
inc
dec
mov
jae
popa
je
fmuls
push
popa
push
jmp
dec
fs
and
lea
add
xlat
loope
ss
sub
js
pop
sub
adc
cld
lea
mov
add
movsl
adc
mov
jb
call
les
movsb
and
pop
int3
adc
push
xor
inc
shrl
sub
dec
scas
xor
mov
inc
fsubrs
push
dec
shlb
sbb
pop
mov
ret
push
int
pcmpeqb
test
scas
ss
jae
movl
or
push
mov
imul
push
testb
adc
or
inc
bound
sub
lods
mov
ljmp
mov
inc
cmp
dec
dec
hlt
or
push
ficomps
mov
hlt
fwait
or
mov
shlb
rol
loope
or
or
or
sbb
jge
outsb
inc
push
add
or
lret
fldl
fldl
push
lds
jae
mov
dec
pop
out
cmova
aas
mov
pop
ret
in
or
les
sub
adc
cmp
adc
dec
adc
pop
push
adc
iret
stos
adc
xor
and
ret
rcll
push
xor
mov
cli
rorl
xor
add
cmp
sti
push
aam
dec
jne
and
cmp
and
inc
dec
mov
test
ljmp
je
jb
repz
out
and
faddl
out
dec
pusha
aas
aam
xchg
pop
addr16
outsb
or
mov
and
in
mov
leave
fld1
fld
fprem
f2xm1
fimuls
std
fxch
fstp
ret
fisubs
in
sbb
icebp
inc
repz
ret
xchg
sahf
je
fld
sbb
loope
insl
jmp
mov
rcr
fsqrt
push
jmp
out
pop
fadd
pop
jge
sarl
push
and
gs
popa
shr
negb
fsubrp
jmp
ficomps
enter
nop
popa
push
xor
or
subl
or
clc
adc
adc
nop
cli
in
push
xchg
and
fstp
push
sub
loopne
fists
adc
fxch
mov
pcmpeqd
fcoms
lods
pop
loop
add
loopne
outsb
mov
sub
push
push
in
mov
decb
add
xor
xorb
sub
push
fnsave
xchg
jle
cvttps2pi
cmp
js
ret
mov
add
lock
call
pop
movsb
fildll
sbb
sbb
sarb
fstps
cmc
or
xor
or
xchg
loop
cltd
insl
sbb
jmp
cmp
fcomp
arpl
inc
push
jg
jb
mov
xchg
add
cld
ja
adc
push
loopne
push
sbb
pop
mov
jae
aas
fsubrs
gs
mov
mov
and
pop
dec
and
int3
push
mov
inc
add
subps
pushw
and
add
out
add
ret
mov
cmp
repnz
pushf
push
jmp
push
adc
inc
fucomp
dec
mov
fadd
iret
out
or
adc
ja
repz
push
mov
ret
inc
and
push
into
arpl
pusha
lock
rcrb
add
and
sbb
or
fsubrs
fcompl
push
insl
lds
cmp
subb
rorb
cmpl
es
mov
push
mov
cmc
push
ret
call
xchg
and
fcomps
xchg
inc
sub
nopl
lock
ret
pop
test
jo
jno
les
add
xchg
inc
stc
out
roll
mov
cltd
movsb
and
dec
add
orb
adc
inc
add
nop
jb
or
or
jnp
add
push
cmp
xor
xchg
loopne
cmp
sub
mov
add
xchg
sahf
xor
lahf
and
inc
adc
add
xor
ljmp
add
sub
inc
aaa
dec
cmp
je
push
gs
xchg
xor
and
dec
fwait
mov
xchg
sbb
int3
hlt
data16
mov
rol
fmul
sub
sbb
mov
les
push
mov
lret
sbb
je
mov
dec
mov
wbinvd
gs
ret
add
or
push
loop
push
fwait
sar
and
dec
inc
ret
sbb
pop
ja
rclb
push
stos
fwait
loopne
mov
ds
mov
pop
adc
and
mov
add
mov
cs
dec
enter
add
and
data16
xor
incb
xchg
adc
ja
mov
out
mov
jb
hlt
ja
mov
jo
fucomi
push
call
xorb
mov
push
mov
mov
xchg
pop
mov
je
hlt
clc
negl
cwtl
cmp
and
notl
insb
testb
nop
mov
pop
push
testl
in
mov
xchg
incl
sub
sbb
add
movsb
out
xor
std
cmp
cmpb
xchg
pop
mov
daa
test
adc
and
push
imul
negb
inc
fisubrs
dec
lcall
ret
rcrl
xor
jp
arpl
pop
insl
add
pusha
xor
xchg
les
push
jbe
mov
sbb
fsubs
aam
cli
jnp
lock
fwait
dec
push
ficomps
add
jbe
sbb
adc
xchg
ljmp
xor
inc
stos
inc
cld
into
inc
shrb
data16
xor
or
jmp
or
dec
add
dec
mov
lcall
clc
push
leave
cwtl
dec
pusha
dec
scas
sub
mov
xor
jns
add
xorb
into
mov
adc
dec
pop
cmp
add
inc
movsl
add
add
dec
push
rclb
in
push
stos
sahf
jbe
jo
lods
inc
mov
mov
mov
mov
adc
cmp
sub
ja
adc
lret
loop
xchg
fld
divb
add
inc
add
adc
adc
add
aad
xchg
dec
or
add
outsl
mov
pop
rolb
cmpsl
adc
adc
adc
pusha
jbe
fidivrl
jns
fucomip
faddl
mov
out
or
call
pop
das
hlt
add
loop
loopne
movsb
in
xor
sbb
pusha
or
fmul
add
mov
jne
push
add
rcll
ja
add
mov
rcrl
add
push
cmp
cmp
loop
add
sbb
and
add
rclb
mov
rorl
es
mov
push
push
int3
inc
lock
push
mov
inc
pop
fildll
jmp
mov
cmpb
fld1
adc
popa
lret
or
mov
sbb
inc
or
adc
mov
or
sbb
cltd
ret
je
add
inc
mov
adc
sub
jl
sbb
inc
mov
ja
sub
adc
mov
lea
adc
rcl
adc
mov
inc
push
add
dec
addb
lret
jo
jp
outsl
iret
cli
dec
dec
or
or
shlb
fildl
push
sbb
rcl
dec
pushf
push
pop
pop
push
jne
iret
pop
add
loope
je
mov
decb
ss
addb
cld
cmp
xlat
adc
pusha
or
push
in
incl
outsb
push
and
push
cs
inc
sub
clc
sub
mov
in
fildll
add
outsl
add
jp
add
ja
or
cmp
xorl
add
sub
jnp
dec
sahf
out
mov
sub
fildl
push
push
js
add
jp
sahf
mov
xchg
inc
cmp
iret
ljmpw
movsb
out
mov
fisttpl
into
dec
icebp
f2xm1
fisttps
inc
sub
cmp
add
sub
cmp
push
or
out
sub
push
pushf
mov
je
xchg
mov
xor
mov
cs
push
fdivrs
into
popl
sahf
mov
into
popf
fstpl
or
jo
lods
mov
or
ds
mov
and
push
mov
pop
or
fsubs
loopne
inc
sti
xor
pop
jne
add
jne
movsb
mov
subb
and
dec
adc
pop
xchg
clc
inc
push
sbb
jl
sbb
stc
incl
push
lock
loopne
movsb
mov
add
add
mov
add
xlat
jb
push
cld
mov
sub
inc
dec
and
jne
jmp
xchg
inc
mov
jp
dec
pusha
out
push
push
cmpsb
gs
push
cli
push
ja
bswap
xchg
dec
push
mov
sbb
mov
dec
insb
add
xor
xor
pop
out
mov
push
ret
std
test
sub
xchg
pop
decl
loopne
add
clc
insb
lea
mov
test
push
xor
cmc
into
mov
shlb
int3
mov
adc
fiaddl
inc
scas
jno
ret
adc
movsl
aam
pop
inc
mov
cmpl
push
mov
sub
jae
xchg
add
and
sbb
push
or
push
fnstcw
inc
cli
fcmovnu
xor
insl
lock
in
stos
push
cli
enter
jg
or
xchg
push
push
icebp
pushf
ret
add
pop
mov
pop
adc
std
sub
dec
pop
push
mov
xchg
inc
pushf
arpl
mov
xor
jo
cmp
mov
jne
add
mov
pop
and
adc
cmp
mov
fldl
push
or
adc
or
sbb
sbb
lods
icebp
loopne
cmp
mov
or
mov
imul
dec
add
push
daa
pop
xor
gs
push
jnp
int
sbb
das
sub
lahf
clc
clc
jae
xor
inc
jo
dec
clc
sub
xor
pop
sbb
pusha
mov
int
push
push
jno
in
adc
pop
inc
hlt
imul
push
sbb
pop
xor
sbb
xchg
cmpsb
and
pop
shl
ret
out
mov
or
adc
lods
test
xchg
sbb
leave
lods
fmul
in
rcrl
push
movsl
dec
adc
insl
mov
inc
add
add
insl
rclb
and
out
jmp
push
repz
pop
mov
mov
or
adc
aam
mov
cmp
push
lods
clc
or
dec
jb
pushf
sbb
lcall
or
mov
jo
lods
sub
call
xchg
sti
ss
adc
xlat
push
inc
cmp
xor
pop
add
xor
lret
mov
mov
call
sub
lods
ret
xor
aas
jnp
sub
fsubs
stos
inc
xchg
je
jg
xchg
or
add
add
inc
and
sbb
push
shrb
add
cmp
and
add
pop
setns
pusha
fstl
outsl
mov
fdivrp
push
es
sarb
sub
lods
xlat
aas
sub
or
pushf
sar
adc
xor
sub
rcrl
js
cmpsb
sub
adc
mov
xor
add
data16
push
shlb
or
add
or
das
int
shlb
and
or
xor
sbb
fstp
and
lock
push
inc
iret
testb
ret
mov
sub
push
mov
pop
mov
movswl
fldl
adc
dec
andb
cmp
loop
dec
dec
psrlq
push
lock
add
mov
cmp
push
imul
push
outsl
rolb
add
hlt
mov
xchg
and
inc
adc
add
push
jbe
sub
push
push
jbe
lock
gs
add
sbb
sub
jl
sbb
ret
adc
push
push
add
adc
int3
imul
pop
lcall
or
push
mov
fs
shrb
adc
jge
inc
int3
push
sarb
jp
inc
hlt
add
sti
add
pop
mov
adc
int
sub
test
test
pop
dec
mov
and
ret
idivb
insb
jbe
jnp
push
into
pop
testl
push
or
ja
mov
push
jp
cmp
push
xchg
sbb
pushf
notb
jno
adc
pop
mov
insb
fwait
or
jp
push
test
add
cmp
inc
sub
push
and
stos
or
or
inc
push
sbb
dec
popa
add
xor
dec
rcl
inc
add
mov
mov
and
iret
and
stos
ja
jne
mov
dec
and
add
mov
sbb
cmp
daa
xor
loope
add
inc
in
and
push
or
lret
adc
or
fwait
add
cmp
xchg
pop
xchg
or
mov
leave
sbb
sub
ret
adc
add
jne
xchg
jne
mov
jmp
enter
inc
add
popa
sbb
mov
jl
or
repnz
lahf
in
fwait
add
popa
lock
or
fisubl
dec
loopne
xchg
lret
subl
popl
mov
xchg
add
adc
add
and
iret
and
xchg
std
mov
lahf
int
frstor
sub
cmp
push
jmp
fmull
pop
ja
push
xchg
std
shr
inc
shrl
or
dec
mov
jne
ret
les
lahf
push
hlt
adc
popf
mov
fistl
or
push
outsl
or
push
xlat
or
xor
clc
clc
fldt
fistpll
xor
push
xchg
ucomiss
bound
xor
or
gs
dec
add
cwtl
sarb
and
das
push
mov
rorl
mov
pushf
daa
jns
fsubrp
push
fiaddl
sbb
mov
ljmp
fidivrl
jle
lds
xchg
or
rolb
int3
lcall
xor
das
shlb
push
dec
push
pusha
rclb
imul
sub
xchg
or
xchg
push
xchg
mov
sbb
or
xchg
pop
mov
and
cs
and
in
lods
pusha
test
adc
sbb
pop
jg
push
std
inc
ficoms
gs
aam
and
push
rol
pop
push
push
push
add
cmp
inc
add
xor
imul
dec
test
shlb
mov
jnp
xor
bound
outsb
or
mov
inc
adc
jo
adcb
insl
mov
addr16
mov
jno
cmc
mov
mov
enter
nop
and
call
js
arpl
cmovo
xchg
xchg
imul
lea
pop
add
push
test
sbb
mov
cmpb
sub
insb
leave
shll
jb
lcall
or
mov
int
mov
or
pop
pop
push
mov
cmp
and
divl
dec
and
sbb
nop
xor
cmp
adc
lock
data16
or
adc
or
push
inc
jl
jmp
xchg
inc
daa
or
xor
adc
dec
sbb
fdivs
dec
sub
lret
lahf
mul
and
sub
dec
and
sbb
xor
testb
jne
cmp
adc
push
or
xor
jnp
xor
sub
adc
imul
jp
mov
das
xor
inc
cli
pop
add
fstpl
jecxz
and
and
dec
adc
popf
jno
adc
mov
push
nop
popa
push
mov
push
fcmovb
data16
jle
cmc
popa
call
cmp
mov
nop
and
daa
mov
and
clc
icebp
dec
sub
or
daa
xchg
add
inc
xchg
sub
stos
jmp
pop
and
lds
lock
daa
dec
and
mov
pop
je
push
push
dec
mov
call
mov
mov
popa
test
pop
mov
add
arpl
cmp
test
or
mov
pop
and
gs
and
inc
mov
fwait
nop
loopne
scas
aas
mov
xchg
pusha
orb
outsl
cmpb
jns
lds
and
imul
movb
sbb
les
sbb
xor
sub
sub
inc
xor
out
addr16
cmpsl
and
sbb
xor
inc
sbb
sub
bound
imul
cmp
mov
mov
push
mov
in
inc
jo
push
push
rclb
xchg
dec
sub
sbb
xchg
xor
lods
push
fwait
add
imul
and
xor
add
mov
jae
mov
sbb
fcom
push
outsl
add
lock
ss
add
sbb
add
sbb
cmp
filds
xor
add
jne
faddl
rcll
dec
and
faddl
movsb
pop
cld
inc
xchg
inc
or
adc
mov
std
popf
add
sbb
jne
test
out
sub
test
daa
sbb
pop
xor
dec
pop
js
mov
xor
push
cmp
je
xor
imul
xchg
insl
pop
enter
xor
and
repnz
movsb
in
adc
inc
xor
bound
pop
out
sti
and
scas
in
adc
dec
cld
dec
cmp
mov
in
dec
daa
fs
movsb
xchg
xchg
subb
add
push
mov
adc
fwait
inc
push
inc
adc
js
xchg
testb
and
movsb
int3
jp
fwait
add
push
std
sub
mov
rcrb
nop
mov
jns
jns
or
lock
call
jae
jns
adc
or
nop
idiv
push
push
push
and
push
xchg
mov
mov
xchg
xchg
idiv
mov
movsb
or
sahf
sub
jns
mov
sbb
jle
mov
push
push
test
xchg
ss
cld
pushf
lret
add
iret
sub
sub
jge
or
outsl
push
lret
push
jb
mov
ret
and
add
enter
jp
and
push
push
inc
mov
add
dec
add
fbstp
enter
ss
pop
das
add
xchg
push
sub
add
mov
mov
mov
lcall
fstl
sbb
adc
pushf
and
mov
sbb
out
ljmp
lahf
pop
movsb
xor
mov
fdivs
cmp
imul
daa
mov
mov
inc
mov
mov
stos
inc
adc
mov
push
adc
out
sbb
lods
sbb
cld
shrl
lock
pop
test
push
and
pop
adc
jnp
addl
movsl
add
mov
das
push
xorb
addb
fidivl
sub
push
add
pop
dec
and
inc
loopne
repnz
flds
mov
inc
dec
adc
pushf
mov
ds
dec
cmp
dec
pop
pop
loope
xchg
scas
fnstenv
or
daa
sub
cmp
mov
add
and
lods
imul
jge
sbb
xchg
clc
mov
ret
jge
push
push
popa
xor
clc
jne
movb
inc
into
call
sbb
jbe
pop
or
mov
sbb
icebp
ficoml
inc
hlt
out
or
mov
xor
stc
jnp
dec
inc
jb
xchg
rcrb
popa
daa
jp
xor
rcrb
push
pop
pop
sbb
stos
test
xor
aas
push
push
add
xchg
addr16
js
cmpb
inc
mov
pop
imul
or
push
jge
and
xlat
inc
pop
jo
cs
inc
test
pop
sarb
pop
add
shrl
cmp
cmp
sub
pusha
into
mov
mov
xchg
fcoms
push
or
jne
lea
in
je
dec
cltd
fsubl
or
clc
or
inc
andb
nop
out
dec
subb
je
popf
add
cmpsb
and
mov
ret
mov
xchg
fcoml
shll
mov
mov
or
add
mov
adc
jl
in
push
jb
mov
push
mov
mov
lea
sbb
fists
add
dec
stos
and
sbb
mov
jmp
jo
xor
ja
sbb
adc
cmp
notb
inc
inc
loopne
test
dec
xor
add
cltd
sahf
mov
daa
add
or
movsl
cltd
fldl
push
adc
pop
sbb
or
cmpsb
mov
add
push
lds
mov
dec
fcmovne
add
aam
fmull
push
jo
mov
or
inc
ss
or
push
and
rolb
cmc
add
or
daa
cmpsl
add
mov
das
inc
sbb
ficompl
jle
sbb
adc
cltd
add
adc
loop
fsubp
repnz
jns
mov
ja
or
call
icebp
jne
jmp
or
ret
add
flds
mov
fs
sub
lods
xor
cld
push
inc
mov
add
adc
movsb
pop
inc
adc
dec
rcll
jo
or
push
push
adc
mov
test
lcall
push
pusha
inc
dec
adc
mov
cld
push
pop
jle
push
push
push
je
das
fcmovne
shll
push
add
adc
jns
inc
and
dec
lock
shlb
jmp
mov
lea
dec
jbe
cmp
outsl
inc
mov
sub
lea
mov
pop
test
or
je
jg
incb
mov
outsl
mov
bound
lcall
fcmovnbe
repnz
pop
sub
lret
pop
mov
fstps
push
aaa
in
adc
adc
xchg
mov
push
xor
xorl
les
jecxz
sub
xor
and
adc
jmp
jb
out
mov
mov
pop
movsb
insb
mov
mov
xor
bswap
and
or
mov
out
mov
shr
dec
push
push
fsincos
ret
cmc
test
add
sub
push
push
std
lcall
xor
in
cltd
add
push
ds
sarb
lock
adc
jge
cmp
mov
sbb
fistpl
and
xor
push
add
adc
clc
repnz
push
push
jmp
pop
xor
outsl
dec
inc
or
fsubrs
adc
inc
push
mov
and
xchg
outsb
dec
mov
sub
mov
xchg
push
imul
or
push
and
dec
sahf
shl
inc
das
xor
mov
lea
or
or
push
push
dec
adc
jo
xchg
ljmp
add
xchg
aas
push
adc
add
pop
out
and
xchg
mov
pop
sahf
rclb
punpckhbw
pop
cmpsl
jo
je
or
daa
rcrb
nop
shrb
fdivp
add
push
insb
mov
in
push
pushf
xchg
stos
cmp
cmp
xchg
cmp
adc
daa
mov
icebp
jne
xchg
mov
stc
jg
imul
and
jne
xchg
loopne
mov
mov
and
add
push
push
jl
mov
push
inc
and
sub
je
addb
clc
and
inc
push
stc
push
adc
and
pusha
nop
lret
fnstsw
ds
mov
dec
add
jle
adc
shl
mov
insl
fsub
jbe
xchg
fdivl
mov
movsl
nop
sbbb
insb
cmp
pop
add
std
push
test
imul
inc
gs
push
push
xchg
push
dec
mov
js
mov
jae
inc
push
push
or
adc
jle
add
sub
add
or
push
lea
ror
xchg
or
or
lods
mulb
or
push
push
js
pushf
cmp
test
adc
add
jmp
loop
adc
cwtl
cmp
mov
clc
insb
cmp
and
pushf
mov
jnp
in
ss
lea
repnz
aaa
cmp
xor
ds
xor
mov
push
push
mov
adc
xchg
nop
daa
add
jns
cs
push
push
cmp
inc
add
lock
xchg
inc
push
add
push
and
jae
in
loope
jno
mov
out
mov
jo
mov
adc
addr16
addr16
sbb
pop
xorl
jmp
sub
lock
inc
mov
push
cmp
sbb
and
xor
adc
loope
movsb
push
subb
jle
push
xchg
scas
and
add
dec
add
inc
xchg
cli
pop
sub
loopne
push
or
mov
sbb
add
sbb
and
pop
sub
inc
mov
push
orl
mov
add
adc
cmp
loopne
mov
outsl
dec
cmpb
pop
adcb
push
mov
add
pop
repz
loope
push
mov
out
mov
lods
pop
adc
sbb
in
jmp
push
jle
adc
movb
dec
dec
or
and
in
adc
sub
push
rolb
or
nop
sub
add
push
or
jle
sti
leave
xorl
adc
jmp
sub
mov
aas
jg
dec
adc
or
fs
push
popf
add
or
shrb
or
adc
jmp
jp
jmp
pop
dec
add
push
push
push
mov
cmp
sub
push
in
mov
jl
nop
andl
aaa
add
lea
test
ds
aaa
xor
or
aas
lds
dec
idivl
add
or
mov
loopne
ficoml
cmp
jne
push
outsb
adc
inc
js
or
clc
mov
popf
lcall
test
or
mov
mov
pop
dec
push
mov
rdmsr
cmp
call
mov
jle
cltd
movb
decl
push
push
ficoms
rcll
inc
aas
push
inc
lods
es
mov
push
or
imul
mov
xchg
push
adc
jge
push
dec
or
cltd
movsl
div
lea
cmc
out
aas
lods
movsl
adc
sub
push
push
or
push
loopne
int
mov
lock
push
addb
loopne
mov
orb
push
aam
rorl
icebp
fisubs
pop
push
in
push
ret
jns
ret
cmp
xorb
mov
sbb
cmpsb
int3
add
rorb
les
mov
pop
push
inc
pop
pop
xchg
insl
ret
rorb
sbb
ljmp
sti
cmpsl
or
mov
cmp
push
xchg
les
adc
fdivrs
or
pop
cmp
push
inc
xchg
dec
jl,pn
pop
jne
push
out
jnp
daa
xchg
dec
and
insb
test
xor
int3
rolb
push
xor
divb
add
imul
test
out
cmpsl
fldenv
dec
andb
in
mov
push
add
in
xchg
sarl
jge
insb
pop
lahf
sbb
push
insl
jae
ljmp
pop
or
movsb
movsl
push
dec
cwtl
in
clc
call
add
jge
das
pop
aam
sbb
pusha
adc
sub
fdivp
lcall
movsb
jo
clc
add
push
fs
call
adc
add
pop
mov
fstl
test
adc
jle
and
loopne
push
push
sub
fisubrl
aam
jp
xchg
pop
andl
mov
add
add
cmc
bound
loopne
jo
stos
sbb
daa
push
insb
iret
xor
or
fcom
jecxz
leave
mov
loope
gs
pop
test
cmpsl
fcompp
xor
jmp
in
mov
out
push
out
js
xorb
cld
test
sbb
mov
sub
sub
sub
or
jae
ret
or
movsl
cmp
jo
lds
jo
loop
or
rolb
or
mov
fisttpll
jnp
jbe
shl
int
xchg
jl
pusha
or
xor
sub
inc
shll
into
notl
add
or
mov
and
xchg
jno
aaa
push
cmp
add
leave
mov
or
lods
pop
mov
jl
cmp
scas
dec
and
daa
sub
mov
adc
mov
pop
dec
push
aam
ljmp
dec
stc
and
push
aam
add
dec
add
fisttpll
and
xor
aaa
in
xchg
dec
outsl
repnz
decl
mov
dec
or
sub
push
insb
pusha
jp
test
xchg
dec
and
enter
mov
imul
les
xor
mov
test
aas
pushf
mov
rorb
pop
aaa
mov
mov
in
lahf
add
push
in
andb
pop
xor
push
adc
push
or
sbb
cwtl
lock
jae
inc
mov
xor
jno
lods
movsb
dec
or
or
sahf
scas
rcl
test
dec
ja
movsl
jnp
dec
push
add
or
adc
push
mov
push
jae
cmp
sbb
add
push
add
or
or
cmpsl
ss
mov
popl
hlt
xchg
subl
stos
jne
pop
mov
mov
syscall
ds
cmp
pop
subb
in
adc
push
imul
push
sub
sbb
dec
ja
addr16
jmp
jg
insl
rorl
push
bound
jne
lds
fstps
test
push
test
sub
pop
inc
movsb
sbb
leave
xchg
icebp
dec
aad
cmp
fwait
and
in
test
mov
add
push
shll
and
push
out
inc
sti
orb
dec
les
lret
mov
sbb
movsb
gs
dec
or
stos
push
and
popf
push
inc
add
push
das
cmp
inc
or
mov
dec
xchg
movsl
jge
mov
mov
insl
jb
mov
jp
inc
adc
fadds
loopne
lcall
adc
fstps
add
push
subl
mov
mov
js
cmpsb
cmpsl
push
cmc
rorb
dec
mov
or
rcl
mov
cmp
dec
dec
fiadds
rorb
js
or
fisubrl
cpuid
add
sub
imul
xchg
mov
jbe
push
xor
sub
test
sub
sbb
sub
or
push
or
jnp
push
loope
push
add
setle
dec
push
xor
inc
mov
pop
or
cmc
adc
xchg
rclb
sub
sub
jo
push
rorl
pop
cld
pop
push
jge
jle
cs
xchg
sub
dec
adc
mov
xor
xorl
inc
pop
sbb
pop
mov
or
add
cmp
leave
add
mov
xor
xor
cmp
mov
leave
mov
outsb
pop
inc
push
jne
imul
xchg
sub
adc
loop
adc
fdivrp
notl
push
sub
mov
mov
daa
dec
inc
mov
or
nop
cmp
movsb
dec
pop
mov
mul
sub
pop
iret
cmp
jg
arpl
sbb
nop
pop
push
icebp
push
pop
xlat
sub
decl
pop
or
rcrb
nop
cld
pop
or
cmp
cmpsb
mov
aad
out
mov
or
push
xor
shl
jbe
es
dec
push
or
pusha
dec
pop
aas
mov
pop
out
dec
in
push
mov
repz
or
fsubl
incb
lahf
or
cmp
and
push
fmulp
xorb
negl
sarb
aaa
pop
inc
or
das
inc
cwtl
nop
loopne
rorl
push
mov
loopne
dec
add
adc
add
je
adc
or
dec
xor
mov
xor
js
pushf
pusha
dec
hlt
and
cld
push
iret
das
push
xor
decb
cld
sbbl
out
xrelease
sub
adcl
or
adc
and
dec
mov
xor
mov
pop
fldl
cmp
sub
pop
enter
sub
or
les
pop
mov
aad
call
xchg
lock
scas
inc
andl
shll
fcomi
adc
fists
dec
xor
cmp
fstpl
cmp
mov
adc
mov
push
jne
lcall
lods
pusha
lea
push
lods
in
rorl
je
push
inc
sub
dec
hlt
ret
into
sub
mov
cmc
mov
adc
mov
mov
xchg
sub
test
inc
xorl
xchg
inc
adc
mov
and
mov
cltd
inc
loope
inc
jmp
xchg
mov
lock
xchg
mov
or
dec
push
test
fisubrs
or
mov
testb
or
push
jecxz
out
pushf
xchg
jecxz
mov
sub
sbb
jne
addb
gs
cmp
xchg
std
movsb
lea
add
and
jp
xor
sarb
sbb
pusha
mov
repnz
adc
imul
push
loop
sub
es
push
jae
ficompl
push
fs
xchg
aas
inc
es
push
out
or
sbb
and
sub
decl
enter
inc
sbb
or
or
push
xchg
dec
pop
inc
sbb
in
test
in
dec
adc
into
cmp
out
dec
pop
rcll
jo
repz
movsl
dec
mov
mov
cmp
adc
or
das
dec
xor
cmc
push
inc
repnz
inc
ffree
dec
loop
shlb
insl
mov
xchg
jo
ret
adc
shlb
pop
data16
in
clc
int
cli
or
add
lea
mov
cs
jl
mov
jo
xchg
and
ds
rcrl
pop
push
sbb
xor
ds
cmpl
xor
mov
and
inc
add
or
cmpb
sub
push
lods
and
repnz
in
orl
xor
ss
add
lret
mov
das
rcl
xor
lahf
xchg
push
lock
sbb
int3
adc
push
jmp
pop
decb
out
add
std
mov
mov
shrb
rcrb
std
sub
add
xchg
cwtl
aas
movsl
out
push
mov
xchg
es
ret
add
movsb
pop
out
add
std
mov
and
push
enter
inc
sbb
jmp
push
scas
sbb
sbb
loope
adc
mov
loopne
inc
mov
mov
sbb
inc
dec
push
push
mov
sbb
sub
test
mov
adc
inc
push
adc
xchg
inc
add
test
add
fldl
fcomps
push
cmp
lahf
push
mov
call
push
add
shlb
rclb
inc
jnp
lcall
add
push
arpl
jl
addl
inc
pusha
mov
shrb
add
data16
mov
adc
add
fwait
xchg
sub
mov
test
sti
mov
mov
mov
push
push
xchg
jno
in
mov
inc
adc
adc
xchg
std
in
ja
jb
pushw
enter
jnp
sbb
push
ss
mov
and
subl
add
rcll
bswap
xchg
push
clc
insb
iret
call
stc
xchg
sub
fstps
mov
add
lahf
push
adc
sub
sbb
shrl
cld
or
push
push
dec
or
or
jbe
jmp
adc
adc
cmp
cmp
rcl
push
cmp
adc
daa
or
imul
sbb
leave
xor
sbb
sbb
daa
and
add
sti
cmc
popl
das
sbb
fldl
jae
and
sbb
fimuls
inc
pop
mov
aaa
adc
js
add
add
pop
adc
pop
test
mov
sub
jge
sti
popl
dec
nop
xchg
push
cmp
sub
inc
cmp
sub
dec
pusha
sbb
push
jo
nop
cmpb
and
add
adcb
arpl
cmpb
test
nop
ja
cmp
jb
call
stos
mov
bswap
enter
sub
adc
loope
sub
cs
aad
push
insl
inc
cmp
cld
in
les
shrl
ret
iret
test
ret
adc
jge
cmpsl
adc
cmp
shll
fidivrs
push
jbe
xchg
ficomps
push
dec
and
cmp
mov
inc
mov
jge
jg
sbb
xchg
push
addb
dec
sub
push
in
push
mov
pop
daa
sub
fs
push
and
ret
cmc
ss
mov
popl
cmp
pop
test
mov
shlb
or
xchg
and
icebp
mov
fcmovnb
arpl
mov
mov
dec
mov
sub
inc
dec
and
xor
adc
jmp
rclb
and
call
sub
mov
scas
ret
fnstenv
sar
ret
rcll
ret
lea
frstor
aaa
sbb
adc
and
mov
arpl
popa
dec
add
push
pushf
sub
cwtl
mov
cli
std
push
js
xchg
int3
mov
test
and
dec
cmp
iret
mov
mov
test
pop
mov
jb
xchg
sbb
cmp
xchg
dec
mov
xchg
in
dec
push
adc
mov
imul
mov
shlb
test
jnp
fldl
lods
sbb
jno
lods
mov
xchg
insl
adc
cmp
xchg
insl
adc
out
out
cltd
mov
add
stc
ja
insb
setae
push
add
push
mov
push
and
stc
out
mov
inc
sbb
aas
cs
imul
adc
into
shll
jae
dec
jle
xchg
outsl
sub
jno
push
imul
xchg
insl
mov
xlat
insb
imul
imul
jne
test
jne
pop
bound
andb
aad
mov
mov
cltd
out
pop
je
cli
add
mov
mov
aad
dec
xor
out
pop
daa
cmp
push
add
jb
and
xchg
cmp
or
add
jns
mov
lcall
mov
add
sub
stc
push
push
push
popf
cld
pop
mov
mov
stc
xor
orb
cld
popf
mov
sbb
cmp
aas
cld
mov
iret
cmp
mov
sbb
sbb
sub
sbb
xchg
pusha
outsl
dec
jl
and
mov
dec
add
dec
or
mov
mov
xor
xor
jl
mov
xchg
and
xchg
push
sbb
pop
cwtl
adc
addr16
xchg
dec
dec
inc
cmp
push
xor
mov
enter
push
inc
xchg
out
mov
clc
xchg
das
add
adc
das
xchg
das
sub
shll
orb
or
lea
rclb
pop
xchg
outsl
add
pop
repnz
idivb
ljmp
rcrl
push
int3
xlat
jns
dec
repz
insb
aas
movsl
xor
mov
dec
pop
movsl
daa
push
push
lcall
sbb
inc
add
repz
sub
daa
imul
out
testb
mov
or
dec
and
in
sbb
cld
mov
xchg
push
adc
rcl
xor
inc
adc
addb
sub
loopne
js
xchg
and
xchg
pop
push
les
movsb
in
push
and
popa
sub
test
ljmp
sbb
mov
xchg
pop
mov
int3
sub
rcll
mov
jle
ja
cmp
lock
mov
in
pop
adc
lock
push
push
and
jnp
xchg
test
sar
adc
and
aaa
pop
and
pusha
rcll
push
pop
sarb
insl
xor
push
dec
dec
test
dec
pop
dec
fldl
movsb
fstpl
leave
or
aaa
xchg
fimull
lahf
sbb
popf
sub
loopne
cltd
rorl
jnp
mul
jbe
popf
mov
fcomps
or
dec
xchg
repnz
cmpl
ret
add
pop
mov
mov
push
jns
jne
add
rorl
movsb
das
push
cld
push
andl
and
dec
add
or
mov
jmp
std
shrb
pop
adc
adc
mov
inc
push
fs
add
mov
add
ja
push
push
sbb
xchg
xchg
fs
or
outsb
pop
adc
sbb
push
dec
add
inc
dec
add
aaa
test
mov
inc
mov
push
dec
pop
hlt
jp
or
mov
loope
mov
test
out
test
add
ret
add
ret
xor
jg
rclb
ljmp
loope
ret
mov
leave
bound
mov
mov
iret
push
pop
push
xchg
stos
and
xchg
mov
add
or
adc
mov
pusha
popa
mov
xor
lcall
xchg
push
cmp
push
mull
adc
ss
push
data16
in
lcall
push
mov
mov
jne
in
mov
cmc
push
push
jb
xchg
xchg
lcall
inc
movsl
insb
inc
dec
push
jge
push
lea
cmc
movsl
lcall
cmc
scas
mov
hlt
sahf
lret
orps
fldl
xor
xor
pop
mov
adc
outsl
fdivr
xchg
mov
pop
loope
inc
xor
xor
inc
pushf
sbb
aam
movsl
xchg
mov
jmp
xchg
cmpl
cmc
push
mov
movsl
and
mov
mov
roll
push
out
sbb
lods
and
dec
adc
popa
lahf
adc
jns
cmc
lcall
cltd
dec
xor
or
xchg
sti
pop
dec
or
xor
push
rorb
adc
popa
sbb
sahf
ret
arpl
call
mov
shl
and
mov
jae
lods
push
pop
jnp
mov
mov
mov
dec
icebp
cltd
add
nop
xchg
mov
cltd
add
adc
outsl
cltd
add
xchg
and
icebp
fisubs
enter
sub
cltd
cmp
or
sub
in
daa
cltd
sub
sub
dec
dec
jb
mov
xchg
cmp
jns
lock
pop
and
cltd
sub
subb
adc
sub
dec
dec
and
jno
push
pop
shll
lock
xchg
fs
cltd
pop
mov
cmp
cmp
rorl
mov
push
aas
sub
inc
sbb
sbbl
xchg
ds
mov
cltd
lds
xchg
jmp
das
ffreep
pop
js
adcb
shrl
and
xor
adc
adc
mov
loop
jo
sbb
cmpl
sub
inc
add
stos
sub
dec
ret
adc
test
icebp
inc
jo
mov
push
adc
mov
push
push
adc
inc
inc
ret
jg
sub
dec
test
fisttpl
sbb
dec
js
push
pop
xor
cltd
movsb
pop
sub
or
insb
and
mov
fwait
jae
lods
sub
pop
test
cmp
mov
or
adc
push
fidivrs
jb
mov
add
add
stos
cmpsl
stc
mov
data16
clc
push
mov
dec
repz
inc
lahf
testb
xor
mov
pop
or
out
cmp
mov
sub
sahf
cmp
sub
xor
mov
sbb
ret
pop
xchg
xchg
jo
or
dec
addr16
xchg
xchg
adc
jge
and
and
jg
sbb
push
insb
sub
push
ret
pop
or
mov
fwait
mov
out
cmpb
je
add
ret
adc
add
ja
add
lcall
xor
mov
mov
cld
mov
decl
xor
stc
mov
inc
cwtl
jne
scas
icebp
outsl
ficomps
mov
adc
fdivl
pop
add
jecxz
scas
jbe
sbb
and
dec
xor
and
pop
daa
jb
inc
and
adc
and
fdivl
dec
mov
jb
loope
dec
fwait
push
fdivrl
jne
xchg
fsubrl
jne
xor
mov
and
mov
xor
inc
iret
call
cmp
mov
mov
dec
sub
and
imul
scas
mov
push
lahf
rcll
push
mov
jge
fistpll
ds
pushf
mov
jecxz
xor
inc
inc
lret
and
adc
fs
mov
mov
les
xchg
jge
std
ja
sbb
push
popa
pop
push
sub
mov
ret
fidivrl
xor
dec
popa
in
add
lods
popa
mov
aaa
xchg
mov
pusha
pushf
push
sbb
jb
inc
push
aaa
leave
mov
ja
inc
or
xchg
dec
adc
inc
sub
jno
mov
fs
cmp
aam
sbb
in
xor
cmpsb
sbb
sub
outsb
dec
mov
mov
ret
movaps
lea
shlb
nop
das
mov
dec
xchg
lock
adc
shll
sub
xchg
lahf
fisubl
nop
inc
mov
jnp
data16
jbe
pushf
push
jae
sub
xchg
adc
xchg
daa
sbb
lcall
xor
inc
ficoml
xlat
inc
fstpt
lods
push
les
test
fisubrs
pop
int3
inc
or
int3
cmpb
mov
push
shrl
push
testb
lret
push
lahf
in
cmpb
inc
test
and
scas
dec
fucomi
dec
mov
rol
sti
push
jbe
jbe
pusha
addb
loope
movsl
punpckhwd
or
mov
fsub
sbb
cmpsl
or
add
adc
test
aad
repnz
inc
push
sti
mov
pushl
push
std
mov
ds
adc
stc
mov
in
cmp
cmp
dec
add
mov
push
or
jbe
fists
jecxz
fstp
mov
inc
jo
jb
sbb
sbb
mul
clc
or
dec
repnz
xchg
test
ss
les
mov
mov
mov
mov
clc
dec
mov
rcl
data16
jne
sbb
pop
dec
or
add
xor
jno
sub
xchg
push
sub
pushf
or
call
rcrl
cmp
jnp
cmp
and
clc
or
mov
les
testb
push
faddp
jne
pop
rorl
je
push
test
inc
int
push
lea
xor
adc
imul
rolb
movsb
jbe
push
cmpsl
int3
orb
xor
jle
mov
sahf
push
jge
pop
ljmp
pop
push
stos
xchg
dec
insl
loop
cmp
lods
sbbb
adc
jo
add
pop
push
cmp
jo
adc
ss
and
inc
bound
inc
mov
and
dec
cmpl
and
pop
mov
test
jnp
sti
stos
cld
pop
pop
cltd
sbb
cltd
sbb
sbb
and
fildl
pop
push
or
fsub
stos
push
fcmovb
mov
addb
lret
pusha
flds
and
add
insb
movsb
sub
or
enter
enter
xor
add
sub
sbb
shll
add
lret
cmp
stos
dec
in
rclb
popa
dec
stos
cmp
gs
or
or
rolb
sbb
and
inc
jb
mov
adc
or
inc
add
mov
pushf
sub
inc
add
js
scas
cmp
jae
and
sub
add
inc
call
mov
stos
push
ret
mov
sub
add
ret
and
das
mov
cltd
mov
loopne
imul
mov
xchg
mov
sbb
adc
sarb
mov
inc
in
add
pop
rclb
jg
test
xchg
inc
and
pop
or
mov
insl
add
mov
fldl
cmpl
pusha
jns
mov
inc
jne
adc
pusha
cwtl
push
and
add
stos
fcompl
sub
jl
icebp
or
shll
cmp
daa
sub
add
jl
xchg
xchg
sbb
jmp
jbe,pn
scas
aam
xor
or
inc
add
subl
pop
jge
mov
outsl
lods
add
cmp
and
stos
jbe
loopne
sbb
fidivrl
dec
pushf
test
movsb
or
cmp
push
inc
jecxz
add
inc
pop
push
fdivs
push
push
cmp
dec
mov
pop
pushf
leave
inc
sub
imul
and
fisttpl
shrb
loop
mov
push
in
cmp
push
jg
mov
dec
hlt
call
imul
ss
sbb
dec
adc
rolb
call
xor
pop
js
pop
pop
adc
cli
addb
xchg
adc
xchg
push
add
je
shrl
inc
and
shr
outsb
insb
pop
or
adc
add
fwait
add
lock
adc
push
loopne
rcrb
xor
sub
mov
mov
mov
out
and
fcoml
pop
test
and
test
and
mov
sub
sub
or
lds
mov
mov
pop
push
adc
pop
je
or
ljmp
adc
or
sub
and
add
adc
pop
pop
or
sbb
cmp
add
jne
pop
mov
lcall
adc
or
nop
into
add
add
push
jge
sbb
inc
add
inc
xchg
lods
push
aad
fdivr
mov
push
add
push
sahf
and
pop
and
xor
xchg
or
dec
sbb
inc
inc
add
add
cmp
cmp
inc
cmp
xchg
outsb
add
out
sub
in
das
sub
jno
push
aam
jle
jg
jne
test
in
sub
fadd
std
adc
add
cwtl
mov
ss
fdivl
ss
inc
pop
dec
idivl
jl
lcall
mov
insb
cmp
pop
xchg
aam
inc
dec
cmpl
jmp
lds
lock
and
popf
lock
mov
dec
mov
dec
and
xor
mov
scas
and
or
aaa
xor
xor
fsubrs
mov
loopne
xor
fwait
dec
dec
jmp
cwtl
shrb
clc
in
aas
xchg
mov
xchg
mov
fstps
pushf
push
cld
rcrl
mov
fisttps
or
sub
dec
fxch
jmp
outsb
sub
xor
push
pop
inc
fsubrs
xorb
call
imul
aad
push
xchg
add
adc
xrelease
mov
mov
in
add
adc
pusha
lret
xchg
loopne
mov
ds
mov
je
inc
dec
lods
mov
or
cmpl
adc
orl
ja
sub
lods
mov
in
subb
adc
rorb
push
or
cltd
mov
in
dec
insl
adc
movsl
fnstsw
test
pop
mov
jb
push
or
add
and
or
mov
xor
icebp
in
sbb
fcompl
jle
jg
popa
sub
push
setne
mov
mov
pop
lods
fidivl
adc
cmpl
daa
and
cwtl
mov
xor
inc
mov
testb
pushf
lcall
push
in
inc
sbb
push
push
jb
pop
xchg
push
xor
in
pop
ret
into
mov
add
data16
push
push
jae
stos
xor
dec
adc
sub
sahf
sbb
dec
or
dec
jmp
inc
dec
dec
pop
xchg
cmp
dec
cmpsb
loopne
inc
cwtl
std
rolb
xchg
inc
or
mov
jecxz
xor
and
in
leave
out
inc
and
xor
mov
cli
mov
inc
and
dec
or
roll
out
sahf
pusha
or
packssdw
xchg
shlb
add
stc
adc
inc
adc
scas
push
push
inc
jmp
int3
lock
push
mov
jmp
sahf
insl
popf
aam
test
push
inc
add
imul
ror
add
inc
pop
adc
aas
adc
das
in
icebp
push
push
mov
dec
and
sbb
mov
jns
dec
mov
xor
jge
fnstsw
mov
pop
pop
cmpsb
inc
ret
jp
pusha
cli
push
fsubs
pop
adc
adc
fstpl
inc
jo
dec
loopne
mov
inc
in
ret
lea
xchg
clc
or
hlt
es
jb
cmpsb
and
mov
sbb
jp
xchg
push
popa
or
in
xor
movntps
adc
movsl
adc
mov
mov
clc
insb
or
mov
push
mov
cld
sbb
rcl
sub
scas
fdivl
fsubs
sbb
aam
fs
mov
movsl
mov
jb
xor
mov
adc
movhps
int3
jns
in
ljmp
int
push
sbb
cmp
int
pop
cmp
jns
xor
test
pop
mov
es
idiv
and
inc
add
outsl
iret
pop
daa
outsl
xor
idivl
sarl
dec
push
mov
jns
mov
psrad
out
push
clc
fstpt
dec
repz
mov
fcmovnbe
daa
iret
repz
xor
sbb
pushw
je
push
stc
movsl
sub
aam
add
add
leave
inc
imulb
xlat
and
or
or
push
movsb
ja
or
push
and
rcll
jb
sub
push
and
pop
rclb
add
jno
pushf
rcrb
movsl
cmp
or
cltd
cmp
dec
adc
dec
push
xor
jo
sub
int
jle
mov
scas
xchg
mov
add
cmp
mov
lret
pushf
and
sbb
push
sbb
add
pop
clc
inc
into
addr16
mov
nop
sbb
mov
iret
imul
outsl
cmpsl
add
pusha
repnz
add
add
lock
add
jo
roll
icebp
add
mov
xchg
dec
jnp
aas
or
xchg
dec
subb
mov
shlb
ret
jecxz
or
xor
jecxz
or
sbb
and
or
sbb
inc
sub
fs
pop
jb
cmp
add
adc
or
insl
fs
cld
jge
hlt
and
nop
add
mov
lock
push
leave
xchg
rcll
inc
mov
pusha
sub
inc
out
mov
add
rcrb
movsb
push
jns
jne
out
and
clc
push
stc
mov
xor
lret
pop
add
add
lods
sbb
adc
addr16
pop
adc
shr
pop
cmpb
jle
jo
out
dec
ret
pop
sbb
outsb
or
sbb
adcb
shrl
loope
xor
sub
lret
shlb
lret
in
in
jo
in
insb
mov
adc
adc
rorl
mov
inc
adc
lds
xor
sbb
icebp
sub
ret
sub
enter
inc
push
into
test
orb
xchg
add
bound
loope
js
insb
adc
jb
xchg
push
lcall
fs
or
mov
xchg
ja
sbb
inc
mov
lahf
flds
xchg
pop
xchg
arpl
or
rcll
sahf
push
js
popa
fisttpl
hlt
pop
dec
stc
adc
sahf
pop
loopne
inc
sub
cwtl
mov
pop
adc
adc
fldt
mov
push
cmp
lock
mov
xchg
lea
out
lods
jbe
mov
inc
fsubr
mov
xor
sbb
mov
jg
xor
mov
push
mov
in
addb
inc
push
movb
out
sahf
pop
lret
data16
enter
rclb
xchg
push
dec
sbb
andb
or
pusha
test
xchg
and
mov
mov
push
gs
inc
jbe
mov
inc
insb
outsl
jmp
xlat
and
in
jno
gs
aaa
adc
sub
inc
add
in
nop
xchg
dec
clc
sar
into
pmulhuw
lret
popf
aad
xchg
push
adc
jnp
sub
cld
and
pop
cmp
cmp
fldcw
mov
inc
push
pop
icebp
cltd
or
and
xor
test
aas
les
mov
xchg
es
js
fisttpl
add
out
test
pop
mov
jmp
test
rcrl
in
ds
dec
cmp
xchg
pop
add
rcr
sub
lahf
sub
push
adc
test
sahf
sbb
adcl
dec
enter
push
test
add
ret
xor
divb
test
cltd
adc
int
adc
test
mov
pcmpeqb
add
addl
push
push
inc
push
inc
sbb
mov
call
sti
pop
sub
push
adc
addb
js
xchg
adc
fadd
add
test
and
xchg
push
jmp
pop
movsb
add
mov
pop
or
jnp
test
mov
loope
cmp
mov
iret
std
adc
shll
or
into
cmp
mov
mov
xchg
addl
js
ja
in
movl
out
cmp
push
lcall
or
jno
fsubs
inc
mov
sbb
add
pop
mov
and
mov
push
add
push
inc
mov
push
pop
and
dec
push
hlt
mov
daa
mov
sahf
inc
add
pusha
ss
addr16
or
push
add
lahf
ficoms
adc
push
test
sbb
jne
aaa
push
and
enter
pop
jae
or
shll
sub
adc
daa
push
and
out
dec
or
mov
mov
mov
scas
push
inc
data16
pushf
outsl
aaa
fildll
rcr
dec
mov
and
roll
inc
aaa
in
sub
sub
cmpb
add
push
push
les
jg
imul
imul
ret
idivl
push
xchg
lock
fcoml
ret
js
or
add
fwait
lea
test
fcoms
push
add
sub
xchg
and
cwtl
mov
std
cltd
adc
mov
mov
daa
addr16
sub
lea
cmpsb
test
xchg
xlat
dec
icebp
pusha
and
aas
pop
pop
ljmp
push
mov
push
addb
push
idivl
mov
insb
add
in
mov
pop
mov
dec
inc
dec
cmp
push
lea
xchg
cli
arpl
adc
and
sti
test
dec
dec
in
lea
pop
outsl
arpl
movsb
xchg
mov
scas
movzbl
and
add
jge
and
mov
insl
std
sbb
and
loopne
test
rcll
mov
rolb
test
je
add
mov
mov
inc
cld
xchg
inc
and
and
loope
dec
inc
out
aaa
adc
rclb
mov
mov
sbb
and
push
dec
sti
pop
clc
or
inc
xor
dec
test
jne
and
repz
xor
enter
push
and
or
mov
or
pop
cmp
dec
mov
jo
or
push
add
sbb
cmp
jns
add
push
into
push
daa
clc
rcrl
roll
int
cmp
fsubrs
popa
test
loope
stos
mov
insl
out
aad
and
and
rorl
cwtl
inc
dec
nop
enter
imul
repnz
add
jno
hlt
in
add
add
sbb
add
adc
mov
and
mov
and
and
cmp
jecxz
and
mov
inc
jecxz
add
push
imul
mov
jns
stc
loop
and
sarl
mov
mov
and
popa
add
pusha
and
xchg
adc
leave
shr
cmpsl
or
or
or
or
push
iret
push
lock
xor
add
jge
shl
ret
push
sbb
test
and
push
inc
adc
sub
hlt
mov
add
sub
lret
scas
stc
shr
stos
or
jecxz
ret
testb
or
pushf
aas
inc
enter
mov
bound
add
int
test
aaa
sbbb
sub
cmp
mov
pop
rcr
fimuls
gs
dec
jne
xchg
xor
ret
or
xor
cmp
jne
cmp
ja
jmp
dec
loopne
imul
or
add
lret
dec
sbbb
int3
dec
and
mov
mov
jg
jmp
sub
je
loop
jecxz
enter
push
mov
les
sub
or
xor
aas
fiaddl
pop
add
roll
push
jl
addl
cld
outsl
mov
adc
lret
orb
sub
jg
inc
negb
pop
mov
push
or
mov
inc
pop
xchg
push
sbb
ret
shr
pushf
push
pop
lock
mov
inc
or
decl
sbb
inc
je
mov
jne
jns
icebp
jge
pop
jecxz
or
mov
flds
outsl
push
fldt
cmp
stos
test
inc
push
add
scas
lea
ss
fisubl
jns
clc
data16
push
or
out
mov
into
pop
adc
test
sub
xchg
cmp
xchg
lock
mov
pop
adc
andl
xchg
jl
xchg
fstpt
nop
jp
sub
jl
push
mov
sub
dec
dec
fwait
ret
add
clc
stos
pop
dec
adc
fsub
push
cmp
push
jno
push
stos
je
jno
sub
mov
jmp
pop
aaa
test
int
shlb
mov
sahf
in
loope
sbb
jmp
mov
jmp
ret
push
stos
sub
cli
dec
ficoms
dec
jae
or
xchg
sbb
je
xchg
mov
sarl
push
sbb
pop
lea
jg
loopne
push
jno
lcall
cmp
or
aaa
nop
aad
push
insb
and
or
dec
scas
add
adc
aaa
shll
xor
push
inc
add
xor
inc
nop
stos
clc
mov
sbb
sbb
ds
adc
add
imul
adcb
mov
mov
mov
mov
mov
testl
adc
mov
add
sub
call
cmp
xchg
jg
das
inc
outsb
push
je
pusha
pop
mov
sub
jo
clc
imul
add
pop
mov
dec
inc
cmp
or
lock
jne
jb
pop
jecxz
mov
repnz
mov
cmp
lret
icebp
add
enter
shll
mov
xchg
push
sub
mov
inc
and
push
je
sub
sbb
mov
loopne
pop
fsubrs
mov
rcll
and
sub
mov
push
mov
adc
inc
jmp
fld
test
mov
and
pop
je
add
mov
jbe
je
adc
int3
cmp
or
sti
mov
mov
xchg
aam
sar
filds
les
imul
lea
cmp
ja
and
jne
jo
mov
mov
or
mov
cli
sahf
or
jne
ss
and
jmp
inc
jmp
adc
cld
or
add
xchg
shlb
add
fadd
in
out
mov
mov
xor
out
shlb
sbb
mov
sti
add
stc
xor
out
fiadds
dec
push
add
mov
add
add
lods
pop
jp
xchg
jp
inc
pop
xor
jno
lret
sub
adc
fcompp
sub
inc
mov
xlat
mov
add
fistl
jne
pop
repnz
add
xchg
or
jne
push
out
repnz
xchg
mov
inc
out
mov
cmp
sub
inc
or
popf
mov
enter
fucomip
push
loopne
push
pop
xchg
call
bound
pop
jl
mov
sub
push
sub
clc
push
jns
icebp
mov
or
leave
jmp
xchg
rcll
lea
jmp
push
mov
mov
fiadds
outsb
pop
mov
xor
push
add
adc
cmpb
je
jmp
add
testb
sar
jmp
sub
push
packsswb
push
adc
shrl
je
jecxz
jae
es
rcrb
or
pop
adc
out
push
clc
repz
cmpb
icebp
jbe
sbb
add
push
push
adc
adc
push
push
inc
xchg
lods
mov
int
cs
push
push
fiaddl
movntps
ret
add
fdiv
repz
inc
cmp
add
fdivrs
and
repnz
cmpsl
dec
xor
clc
js
mov
rorb
jns
dec
mov
add
add
cmp
add
psubq
sbb
mov
inc
xlat
jnp
xchg
push
push
fbld
and
xchg
ss
mov
mov
pop
or
rolb
orl
test
add
das
mov
std
call
xor
sbb
xor
cmpsl
fstps
or
push
xor
mov
xor
dec
mov
or
jp
pop
scas
push
in
xchg
aaa
int3
add
add
or
dec
add
stc
push
std
rcrb
or
or
add
mov
fildll
nop
out
fsubrs
add
stc
in
scas
aad
cmp
cld
fs
into
in
push
cli
fidivl
shrl
pop
popf
xor
fidivrs
ficoml
aaa
mov
aas
cmp
lods
add
jecxz
mov
cmp
imul
pop
or
out
jne
xchg
mov
jmp
lods
in
fwait
push
ljmp
lcall
dec
add
je
add
add
popa
dec
dec
insl
inc
or
test
cwtl
pop
mov
sub
clc
loope
adc
cs
sub
inc
inc
inc
push
jne
dec
sti
dec
in
sub
jl
adc
enter
pop
xor
jne
idivb
jb
sub
popl
jne
pop
mov
fstpt
cmp
mov
aas
pop
mov
jg
add
sub
iret
add
loopne
notl
add
push
nop
cmp
or
adc
sbb
cmp
pusha
add
orb
jnp
adc
rolb
pop
mov
add
mov
shll
adc
cmc
bound
rolb
cmp
xor
aam
jne
jae
sub
lea
dec
push
bound
ja
dec
clc
sub
pusha
sub
jns
cmp
jne
inc
test
iret
arpl
adc
push
push
add
fnsave
pop
out
pop
cli
shrl
jmp
fnsave
js
aas
shll
dec
sub
add
pusha
cmp
inc
or
cs
pop
test
add
and
pop
jne
sub
cli
bswap
pop
jne
testl
jo
pop
notb
push
cmpsb
pusha
movsb
push
inc
push
push
jne
sbbb
inc
xor
popf
jne
jnp
addb
and
add
cld
pop
pop
sti
or
and
movsb
lock
pop
adc
inc
jl
push
lea
es
ja
mov
mov
aam
leave
cwtl
popf
mov
les
mov
sbb
cwtl
bnd
cmp
lock
rorb
popa
je
inc
call
data16
sub
fdivrp
jle
push
stc
push
and
cli
xorb
enter
sub
sbb
pop
dec
shll
push
push
rep
add
or
call
outsl
mov
je
jmp
inc
sub
test
fs
or
xchg
cmp
jle
sub
movsb
adc
xor
call
pop
cmp
jge
or
mov
pop
movsb
ret
inc
cli
popf
bound
sbb
adc
mov
aad
cmpsb
sbb
cs
xor
inc
and
in
test
ret
clc
sbb
jb
inc
and
jp
add
pop
inc
jge
adc
outsb
aam
add
test
push
sub
jbe
xor
jge
call
int3
lods
lea
dec
dec
stc
sub
dec
sub
cmc
xor
test
jns
pop
cmp
mov
mov
mov
lret
test
flds
mov
inc
sbb
popa
inc
roll
pop
xor
xor
sub
shrl
nop
leave
lea
inc
in
mov
adc
popa
xchg
xor
xchg
ds
add
inc
mov
dec
shr
and
lods
jmp
fdivl
insb
pop
repnz
push
ror
scas
mov
xchg
shl
ret
stc
out
mov
arpl
cmp
lods
mov
and
dec
scas
imul
xlat
inc
jns
add
add
ret
sub
in
js
push
rclb
cmp
push
icebp
mov
sbb
outsb
mov
imul
ret
inc
bound
sti
test
mov
cld
push
mov
dec
mov
sbb
imul
xchg
jbe
daa
push
hlt
jnp
dec
sub
lea
push
roll
sub
cltd
cmp
and
stos
xchg
cmpb
mov
inc
jl
pop
mov
sub
jmp
mov
mov
bnd
mov
movsl
insl
jbe
pop
jns
les
movsb
je
and
mov
xor
sub
add
icebp
out
into
inc
rclb
cmp
mov
and
popa
cmp
jnp
inc
cmpb
das
cmp
cwtl
cmp
cmp
nop
fldcw
push
push
sbb
sub
lea
fldl
mov
and
sub
sarl
or
addb
sbb
mov
shlb
mov
mov
imul
add
jl
dec
in
fst
scas
jne
xor
mov
adc
aas
mov
mov
ret
sti
add
cmp
jmp
or
popf
dec
adc
xor
inc
ja
inc
xchg
or
add
int
mov
and
xor
sbb
popa
fcomip
testb
fistl
inc
setge
cld
add
and
aad
int
add
sub
mov
add
cmp
movb
push
and
out
mov
and
jp
add
out
add
push
fisttps
je
iret
dec
mov
jle
cmp
out
rolb
xor
dec
and
ret
mov
jmp
mov
stc
inc
mov
add
or
mov
pop
mov
jb
xor
inc
fmull
je
inc
es
hlt
jne
aas
sti
mov
add
testl
adc
or
lcall
rclb
stos
and
stc
push
and
mov
dec
mov
cld
mov
push
xchg
out
in
add
aas
add
or
add
fwait
jo
fcompl
nop
mov
inc
and
push
cmp
mov
aaa
stos
pushf
lock
int3
dec
add
inc
jb
ret
jl
sub
enter
push
jns
daa
push
fsubr
pop
adc
xchg
mov
mull
push
and
in
arpl
aas
push
movl
sub
jns
hlt
bound
cmp
sub
cld
jnp
pop
xchg
sub
xor
test
cld
add
pushf
mov
push
push
cmpsb
movsb
sub
gs
iret
adc
and
int
ss
and
xor
xor
dec
cmc
push
xor
es
movsl
leave
decb
and
mov
stos
mov
mov
push
mov
mov
xchg
or
loope
icebp
bound
bound
daa
lea
loop
xorb
sbb
pop
dec
cltd
pop
sarl
pop
xor
mov
rcr
dec
adc
dec
or
push
hlt
push
cmp
jne
and
rcrl
dec
dec
add
dec
or
in
insb
ljmp
mov
push
and
cvtdq2ps
add
out
xorb
sbb
xorb
fnstcw
push
lea
push
out
inc
mov
fstl
push
mov
mov
pop
inc
insb
outsl
or
inc
add
push
pop
sub
sub
and
test
inc
adc
arpl
cld
std
divb
add
dec
cmp
cwtl
xchg
test
lea
cmpsl
rolb
mov
or
fldenv
mov
sub
add
out
pop
jo
jnp
sbbb
jo
ret
add
popa
je
add
mov
loope
jg
int
lock
pop
in
xorl
add
and
add
inc
and
sub
jl
sarl
add
arpl
pop
xchg
fs
and
ror
mov
popa
xor
dec
ds
js
jle
rorl
add
adc
daa
sub
or
ds
xor
and
cmp
adc
lock
lods
cmpsl
sbb
lock
sub
movsb
and
adc
loope
and
cmpsl
stc
push
ret
push
add
in
test
loop
les
push
sub
or
shlb
ret
xor
push
dec
rolb
pop
test
fcmovnbe
sbb
sub
push
jo,pt
rsm
or
ljmp
mov
and
push
ret
stc
sub
jno
mov
pop
sub
pusha
fcom
loope
or
cmpsl
shrl
mov
push
sarb
push
in
sbb
adc
faddp
push
rcrl
pop
in
push
push
jo
jnp
mov
sub
jp
out
pop
or
push
and
sbb
or
adc
mov
test
cmpb
adc
mov
dec
or
cmc
andl
jl
cmpb
xchg
sub
adcl
lds
mov
jg
mov
mov
loopne
mov
inc
xchg
adc
pop
mov
int3
lods
icebp
mov
pusha
xchg
test
xchg
loope
push
add
fs
lret
cmp
inc
nop
inc
fcompl
pop
dec
push
fcoms
loopne
push
fsubl
lret
mov
and
dec
pop
mov
push
loope
lret
add
sub
add
fdiv
fcomi
pop
inc
jle
mov
int
hlt
int3
fs
sbb
adcb
fdivs
mov
sub
cs
dec
out
push
and
fs
clc
push
push
mov
dec
adc
in
mov
rolb
setbe
cwtl
and
dec
sub
int3
ret
mov
sub
call
lods
sbb
movsb
scas
in
cmp
mov
imul
in
or
jge
adc
repnz
jno
sub
and
mov
in
dec
and
ds
cmp
mov
xor
pop
adc
sbb
xchg
cli
test
jne
add
sub
shrl
sarb
jecxz
sarb
sub
jle
in
sbb
sub
add
or
push
subb
push
ret
lock
push
lea
sub
push
pop
add
xchg
lret
int3
jbe
xlat
andb
daa
cmp
sbb
outsb
cltd
inc
sar
iret
stos
sbb
dec
imul
sarb
cmp
sub
or
js
adc
push
hlt
adc
sbb
pusha
in
jne
sub
xor
add
and
inc
leave
je
fldt
fwait
and
clc
push
lock
jb
outsl
jo
inc
xchg
and
jne
add
add
jp
dec
outsb
xchg
adc
pop
dec
pop
cmp
mov
out
ljmp
jge
scas
pusha
add
add
sbb
add
adc
add
add
mov
js
fisttpl
fs
and
pop
adc
and
test
inc
mov
lea
ret
sub
rcrl
xchg
or
fcomps
mov
add
popl
lea
add
pop
das
cmpl
cltd
stos
es
add
dec
lock
add
loopne
cmp
inc
hlt
add
in
adc
arpl
sub
mov
test
xchg
sub
mov
fstl
mov
inc
mov
cmp
call
rcrb
xor
mov
and
cmp
arpl
ficomps
pop
mov
popa
adc
mov
sbb
das
lock
cmp
dec
add
or
push
xchg
push
in
add
push
jp
mov
enter
enter
mov
addl
test
sbbl
roll
mov
dec
pop
ret
sarl
push
jge
push
lods
neg
paddusw
push
or
inc
jns
push
push
insl
test
loop
sbb
nop
add
xor
dec
rcrb
test
push
hlt
lock
mov
mov
or
fsubs
push
push
inc
movsl
xor
adc
int
sub
dec
jmp
push
dec
cmp
or
je
push
fwait
clc
filds
add
add
cmp
sbb
ficoml
loopne
xor
aas
iret
add
and
mov
into
inc
sbb
int3
adc
sbb
dec
enter
mov
add
jo
call
ss
lcall
cmp
push
ljmp
das
aam
repz
and
test
cmp
push
push
lea
ja
jns
lock
lock
xchg
test
adc
call
sahf
dec
loopne
pop
xor
mov
repz
sbb
push
mov
sbb
adc
mov
add
inc
pop
dec
jne
pop
cwtl
mov
mov
adc
adc
add
pusha
push
outsl
aam
or
aaa
clc
les
nop
outsl
push
rcll
or
xlat
mov
loop
rcrb
sbb
fsubrs
out
scas
push
mov
dec
dec
adc
testb
inc
ficompl
push
mov
sbb
call
aaa
and
fmull
push
jbe
sub
xchg
add
or
mov
or
pusha
test
mov
lock
jle
movsb
jne
call
add
out
adc
or
hlt
adc
pop
loope
push
test
leave
clc
mov
rolb
lret
in
fidivs
fisubl
inc
cmp
pop
xor
sbb
mov
incb
and
mov
pop
push
loop
rorb
in
jmp
cmp
jae
or
jb
call
cmp
xor
pop
dec
pop
sahf
hlt
loop
loopne
in
pop
pusha
test
mov
mov
testb
jne
sbb
or
nop
push
repz
jb
dec
imul
call
adc
xchg
rorb
inc
or
rcll
out
lret
pop
sub
test
mov
arpl
rol
and
adc
adcl
pop
cmp
arpl
sti
std
sbb
inc
adc
or
aam
ret
or
mov
shrb
jp
clc
ds
cmp
ja
gs
adc
sbb
xorl
ret
jmp
dec
push
std
mov
data16
cwtl
gs
xor
popf
push
push
cmp
popa
xor
sub
push
aad
shlb
cmp
mov
pop
and
mov
jo
mov
or
jnp
and
ja
sub
jp
cli
out
pop
push
adc
mov
popa
fistl
sub
inc
nop
adc
mov
push
push
dec
push
pop
mov
sarl
xor
or
ljmpw
fwait
mov
cmp
sub
mov
dec
sub
dec
clc
cmpsb
adc
or
outsb
pop
popl
dec
xor
push
pop
hlt
rolb
in
scas
or
push
jle
push
fcmovu
cmp
push
out
sub
cmp
or
add
mov
pop
addb
pusha
or
or
nop
inc
shl
xor
add
call
scas
ficompl
add
or
adc
call
ss
fwait
cld
push
xor
dec
mov
nop
movsb
loopne
xchg
xchg
add
insl
sarb
add
push
jbe
ret
test
lods
lock
popa
fldenv
jge
sbb
lods
fs
and
in
sub
sub
test
add
in
lock
sbb
xchg
adc
jo
sarb
dec
fdivs
ret
add
pop
test
jne
insb
mov
mov
jb
das
xchg
mov
xor
movsl
popl
xchg
or
ljmp
inc
out
cmp
mov
push
cwtl
lods
push
cmp
mov
sbb
orl
lods
fadd
and
push
adc
mov
xchg
mov
sub
add
into
pop
add
mov
lds
and
into
movsl
call
dec
push
fidivs
and
rcl
mov
and
subb
rcll
mov
cmp
mov
adc
pop
add
in
aaa
push
or
adcl
cmc
dec
add
pop
or
mov
shlb
pop
mov
pop
mov
mov
insl
xor
mov
lcall
testl
out
ret
lea
push
cmp
mov
loop
in
arpl
adc
aam
mov
in
leave
push
add
xchg
xor
ret
and
fists
add
les
sbb
roll
mov
sahf
leave
mov
push
sbb
mov
push
loopne
xor
cli
andb
pushf
cmp
pushf
inc
or
adc
fsubrs
or
add
adc
jle
pop
movsl
rorl
jnp
sbb
jp
sbb
out
jnp
add
add
jg
negb
sub
dec
add
pop
add
push
inc
cwtl
add
push
outsb
cmp
insb
add
add
push
push
bound
in
and
inc
cmpb
clc
push
push
adc
aam
jmp
push
lcall
lret
popf
orl
repnz
fsubs
add
pop
inc
mov
mov
or
adc
sub
push
insb
adc
into
cli
outsl
mov
sub
int3
push
add
lcall
scas
push
cmp
clc
in
clc
lods
imul
or
pop
jp
jmp
sub
aad
jno
jnp
pop
out
xor
and
inc
mov
add
insb
dec
mov
jne
dec
add
or
push
int3
mov
push
or
ljmp
mov
fistpl
data16
adc
or
xor
mov
push
bound
add
add
loopne
lea
mov
pop
adc
mov
xchg
jno
mov
cmp
jg
add
call
cmp
jge
dec
pop
fdivrl
lret
jb
add
repnz
mov
adc
out
dec
mov
add
sub
mov
push
lock
add
dec
mov
mov
dec
or
ret
jl
test
movsb
test
rcrl
jne
aaa
mov
bndldx
add
enter
push
jge
insl
sbb
inc
rclb
add
into
fs
xor
add
sbb
sub
mov
int3
ret
and
repz
xchg
cmp
jge
jb
sub
rcl
push
shl
inc
pop
jb
sbb
stc
inc
push
and
xchg
jecxz
push
enter
sbb
out
cs
dec
ret
mov
and
lds
ret
and
lret
out
aad
mov
mov
jae
out
inc
jmp
jb
push
cmp
ja
xchg
stos
push
cvtps2pi
mov
add
inc
hlt
pop
cmp
or
xchg
fmuls
in
add
dec
add
cmp
jno
push
test
or
mov
pop
adc
add
nop
jge
adc
or
mov
jbe
or
or
mov
icebp
fimull
mov
movswl
dec
je
add
adc
sub
orb
es
or
add
and
dec
and
cld
mov
js
push
jo
add
push
setne
xlat
outsl
mull
test
lret
mov
or
mov
mov
scas
je
rolb
push
shll
movsb
in
add
adc
cmp
ret
notb
mov
decb
jne
clc
je
cmp
jbe
push
cmpsb
loopne
inc
sub
pop
hlt
or
scas
lods
push
and
inc
mov
pop
inc
jne
inc
pop
and
jg
es
repnz
mov
push
sub
adc
cmp
ficoms
cld
xchg
or
inc
movsb
push
test
mov
inc
add
mov
jb
and
icebp
out
mov
pop
mov
cmp
data16
mov
jle
adc
addb
jp
or
add
addb
iret
adc
testb
sbb
sbb
xor
mov
pop
inc
inc
popa
roll
rcll
inc
dec
mov
cmp
mov
xor
sbb
xchg
inc
mov
xor
in
jl
in
scas
xchg
xor
or
dec
lcall
jecxz
scas
push
aam
or
adc
sbb
ret
rcrb
pop
sub
add
mov
popf
mov
clc
xor
cmpb
jno
dec
shlb
pusha
in
stos
and
xchg
sub
mov
mov
clc
loopne
testb
leave
add
inc
inc
pop
push
add
push
fs
push
mov
sbbb
cmpsb
cltd
or
sbb
push
xchg
adc
cmp
sbb
push
mov
xchg
nop
popf
mov
stc
pop
shll
dec
clc
std
add
daa
mov
and
nop
xor
mov
sub
and
adc
pusha
lahf
mov
loop
daa
ds
dec
lock
push
push
add
xchg
add
inc
push
xlat
insb
mov
adc
loopne
mov
mov
aas
mov
ljmp
dec
jo
dec
push
lock
push
movl
test
sub
pop
int
xchg
jns
addr16
sbb
push
push
in
lds
pusha
add
xlat
xchg
sbb
cmp
inc
push
call
test
das
and
aad
popl
and
shrb
mov
addr16
popa
jl
fisttpll
push
and
or
adc
jne
xchg
out
aam
sub
mov
popa
ficomps
or
rclb
lds
nop
jecxz
je
int
add
shlb
mov
mov
xor
cmpsb
pop
xchg
jns
push
cmp
push
hlt
cs
sbb
inc
movsl
in
or
pop
mov
jo
ficoms
xchg
ret
ss
mov
dec
and
sbb
sub
das
pop
loope
and
dec
xchg
push
push
hlt
cmp
je
cmp
and
add
jl
loope
dec
and
jns
mov
or
pop
adcb
aaa
cmp
jne
mov
inc
out
push
or
clc
xor
jne
fldz
insl
jbe
or
mov
shr
adc
iret
pop
mov
fcmovbe
lock
ret
cld
fcomps
push
cs
pop
fsubl
dec
xlat
loop
mov
loop
pop
push
gs
je
dec
je
pop
mov
je
fisttpl
pushl
and
aaa
cmp
or
repz
push
mov
xchg
add
pop
push
or
roll
adc
add
daa
mov
addl
mov
push
sahf
insl
int
mov
mov
mov
mov
int3
mov
push
add
cmpsb
shr
adc
mov
inc
sbb
cmpsl
or
in
push
pop
es
push
inc
rcll
imul
jno
jl
mov
dec
nop
out
testl
mov
or
cmp
ret
or
and
xorb
out
enter
xchg
fdivrs
imul
in
scas
and
sahf
pop
jne
mov
adc
in
cli
or
inc
shrb
adc
sub
mov
sub
mov
xchg
mov
mov
mov
xorb
adc
push
sub
test
fs
lods
stos
cld
push
push
std
inc
incb
mov
adc
mov
mov
push
popf
clc
clc
ret
fucomi
mov
dec
mov
push
ret
rorl
xor
sub
and
scas
add
xor
sbb
testb
push
sbb
icebp
mov
cmp
lock
into
pop
mov
inc
clc
test
mov
mov
adc
stc
pop
push
xor
imul
pusha
sbb
sahf
xchg
push
insl
outsl
iret
inc
cmp
loope
pop
and
in
lock
adc
cli
xor
out
sbb
rclb
inc
stos
cmp
push
iret
loop
ret
mov
inc
fld
std
in
xchg
testl
fstl
push
orb
mov
mov
ficoml
fildll
sub
or
fiaddl
incb
jne
pop
clc
sbb
lret
sub
subb
sbb
xchg
test
stc
sbb
sub
jb
rolb
push
cmpsl
dec
test
mov
mov
jne
test
sbb
daa
push
lret
sti
mov
repnz
in
rorl
cwtl
dec
mov
imul
es
andb
cli
mov
and
loope
mov
mov
jno
int3
xor
jg
inc
mov
xchg
add
sub
dec
lret
xor
ja
jne
es
adc
cmp
rolb
jo
lret
int3
push
jle
cmp
adc
or
popa
xor
lea
adc
outsb
scas
add
xchg
push
mov
jmp
rolb
ljmp
fcoml
push
add
movsb
mov
clc
or
addb
lcall
lar
mov
sub
sub
scas
sarb
add
or
adc
push
jne
push
push
xchg
fsubrl
or
mov
aam
cmpsl
subb
add
test
or
jg
jno
xchg
mov
and
cvtps2pd
mov
xchg
adc
push
adc
cmpl
or
dec
push
rorb
outsb
fsubr
inc
cmp
lahf
imulb
cmpsb
push
sbb
popa
inc
popa
or
add
dec
and
test
add
test
or
add
adc
fisttps
dec
and
mov
ficomps
xorb
leave
push
mov
xchg
cmp
add
mov
add
add
jbe
cmp
pop
clc
xor
dec
and
dec
push
push
xchg
cmp
cwtl
das
pop
out
xor
test
xchg
xlat
xor
pop
clc
data16
movb
pop
pop
int
push
daa
sub
push
in
or
aad
pop
loop
and
adc
add
stc
insl
outsl
dec
mov
add
insb
rcrb
cs
adc
pop
and
nop
mov
inc
add
outsb
adc
jecxz
fwait
lods
push
pop
push
mov
sbb
cmc
sub
pusha
push
jl
mov
sti
sbb
loope
test
orb
xor
adc
mov
stos
sbb
ja
pop
mov
sub
fnstcw
bound
xchg
xchg
xorb
pop
pop
std
scas
movsl
inc
inc
xor
fstl
loopne
push
adc
cltd
rclb
sbb
and
add
inc
aaa
or
rol
or
shrb
xchg
adc
rol
scas
add
adc
pop
cltd
adc
xchg
push
add
adcl
xchg
push
nop
paddw
mov
lret
idiv
mov
add
repnz
and
adc
sbb
lock
enter
cli
add
push
mov
cmp
xor
ret
shll
mov
test
test
push
cmp
lods
sbb
addb
movsl
cmpsb
push
fs
nop
mov
test
add
jl
and
inc
and
or
and
popf
xor
jne
mov
adc
sbb
lock
nop
clc
sbbb
cwtl
jb
mov
inc
dec
call
xor
add
cmpsb
push
test
fcompl
rorb
lea
sbb
pop
mov
push
arpl
pop
clc
add
add
sub
xor
pop
test
pop
fcmove
xor
add
jmp
scas
pop
sbb
push
fs
add
or
dec
bound
mov
jl
push
pop
inc
adc
pop
push
push
ret
popa
jle
push
mov
sar
mov
mov
and
adc
or
or
mov
add
mov
arpl
push
pop
add
les
sub
jle
jg
push
ret
push
pop
dec
in
xchg
cmc
sbb
xchg
clc
filds
fimull
inc
shl
gs
mov
fs
jp
movsl
shlb
pop
cmp
pusha
sbb
sub
dec
inc
xor
cmp
push
ds
or
outsb
xor
or
ja
pop
add
sbb
inc
out
out
inc
leave
jmp
popa
jb
data16
or
mov
dec
fcom
ja
cmp
jl
ljmp
add
inc
bound
and
addl
xchg
push
inc
pop
arpl
popf
sub
rorl
push
xor
ljmp
xor
add
pop
push
and
sti
inc
sbb
sub
jmp
out
repz
clc
lea
inc
test
jae
pop
sbb
ja
test
sbb
adc
dec
imul
sub
mov
pushf
jmp
fnstcw
nop
mov
push
sbb
xor
or
das
add
inc
mov
push
dec
jae
sbb
daa
inc
mov
xor
ret
pop
xor
jle
xor
mov
mov
and
fsubrs
je
pop
pop
stc
pop
mov
mov
mov
orl
incb
enter
movl
and
sub
push
jae
mov
xchg
and
add
dec
cmp
psllq
inc
xor
fwait
or
push
fcoml
dec
nopl
testb
inc
fdivr
add
out
gs
jns
mov
pop
cmp
pop
sbb
leave
dec
dec
sub
and
fs
addr16
sbb
jl
jns
outsb
xor
lods
ror
mov
shr
call
shll
je
mov
lods
or
aaa
rcll
or
stos
inc
std
mov
jbe
mov
add
jge
out
and
push
ss
xor
and
adcl
fsubs
jno
xchg
movsb
aam
push
rol
ds
push
adc
into
dec
stos
jnp
xchg
lret
cmp
iret
dec
aad
push
push
daa
mov
les
pop
or
movsb
adc
push
jne
or
mov
mov
hlt
enter
adc
dec
jo
xlat
bound
stc
adc
add
inc
popa
jl
hlt
add
push
sti
clc
sbbb
es
inc
outsb
mov
mov
sbb
dec
add
cwtl
mov
pop
pop
sbb
pop
inc
push
popf
cmp
cltd
mov
xor
pop
cltd
xchg
mov
mov
fstps
loopne
mov
lods
sbb
or
addl
sub
and
xchg
jbe
loopne
iret
lock
loope
or
arpl
mov
dec
rcrb
loopne
repz
add
xchg
fldenv
jns
add
call
ljmp
repz
rolb
adc
mov
cltd
jp
into
push
mov
fs
push
sbb
or
inc
inc
stos
ljmp
or
adc
or
adc
or
push
push
sub
or
push
lcall
xor
or
jnp
sbbl
inc
xor
andl
outsb
add
xchg
cs
leave
or
jne
mov
or
mov
std
lsl
xor
insl
mov
shlb
pop
rcrl
mov
dec
cld
dec
fdivrl
mov
and
fnstcw
dec
xor
subb
jle
mov
pop
jno
loopne
fildll
incb
popa
cld
fdivrp
fmull
xor
insl
cld
fistpll
int
or
mov
push
pop
jle
cmp
push
fbld
aad
int3
push
push
ja
mov
addb
lock
cmp
popa
addl
fcoml
push
inc
lea
nop
add
add
push
jg
and
mov
xor
sbb
iret
jge
mov
dec
iret
jle
filds
fidivs
pop
sahf
jle
mov
sub
push
jge
push
mov
mov
sub
shrb
bound
shll
arpl
rcrb
sub
sbb
js
push
shlb
pop
dec
xor
int3
pusha
push
jmp
dec
aad
lret
mov
adc
or
cmp
pop
rep
fbstp
sub
push
or
aas
mov
jecxz
jb
push
dec
add
xor
pop
push
repnz
add
inc
js
mov
cltd
popa
inc
cmp
sti
and
inc
je
test
stc
push
mov
cmp
sub
mov
icebp
dec
hlt
out
dec
mov
or
pop
jl
aaa
lock
pusha
pop
flds
sbb
out
inc
lea
pop
testl
lock
int
mov
sub
and
xor
push
mov
adc
cmp
push
cmp
je
push
mov
inc
and
sbb
sub
mov
stos
int3
daa
sbb
add
cltd
inc
dec
out
or
nop
add
test
or
es
lret
scas
xchg
xchg
xor
icebp
sbb
add
dec
sahf
fistpll
xlat
test
jae
adc
test
fisubrl
jmp
or
mov
add
ret
jb
and
push
cli
or
cltd
subb
popa
or
pusha
add
adc
xchg
dec
lret
jle
add
out
mov
inc
repnz
xchg
push
imul
mov
add
push
test
and
rolb
lea
popf
cmpsl
push
loope
xchg
scas
fisttpll
out
call
inc
and
or
xchg
adc
roll
insl
xor
shrb
pop
mov
inc
push
push
xor
xor
jecxz
dec
orb
ja
fimuls
jp
sub
add
pop
mov
jb
jns
arpl
rcr
jg
push
inc
ds
inc
inc
xor
add
bound
or
add
cmc
xlat
xor
or
jb
rolb
mov
add
mov
push
test
mov
or
inc
pop
sub
dec
xor
or
clc
or
cmpb
enter
sbb
push
xchg
pop
mov
mov
into
jbe
mov
shl
mov
es
lods
icebp
push
sub
lea
pop
popf
add
cmp
imulb
mov
outsl
out
xchg
cmp
ficomps
or
sbb
dec
shlb
pusha
mov
inc
mov
push
push
or
js
jno
rcrl
sti
jnp
cmp
lods
icebp
lahf
cmp
xor
xchg
dec
ja
mov
out
lods
jmp
inc
mov
inc
daa
aad
and
out
dec
aas
pop
inc
sbb
scas
call
in
sbbl
and
mul
stos
add
push
in
push
outsl
inc
pusha
or
imul
add
and
sbb
fs
xchg
jo
pop
dec
sub
rorl
add
aam
sbb
inc
lcall
sbb
in
sbb
pop
or
pop
fimuls
cmp
ret
aam
mov
jmp
clc
add
push
pop
scas
out
lcall
mov
mov
inc
sub
sbb
cmp
or
dec
in
sbb
or
jmp
ja
arpl
xor
sbb
inc
and
js
xor
pop
ret
lds
adc
test
sbb
rolb
add
dec
and
push
adc
lsl
test
es
adc
push
sub
sub
sahf
negb
inc
jl
or
mov
int
push
sub
push
stos
nop
add
inc
pop
push
jae
jo
mov
push
xchg
shl
out
sbb
aad
push
cmp
dec
jg
inc
push
int
xor
sub
mov
jb
push
mov
push
jle
jle
mov
push
popa
xor
ljmp
lahf
sbb
inc
or
loopne
invd
das
push
xchg
arpl
fwait
sbb
adc
psraw
and
push
jmp
cmp
adc
cmp
shrl
jmp
push
or
pop
lods
inc
decl
push
or
push
mov
subl
sub
push
push
add
pop
addr16
and
dec
pop
push
sbb
inc
shlb
dec
push
mov
and
and
mov
add
or
adc
inc
mov
xchg
bound
or
das
dec
mov
add
push
inc
adc
push
hlt
lea
jno
test
jne
insb
imul
imul
or
adc
inc
hlt
ja
jno
outsl
lods
add
jne
push
das
xchg
push
arpl
subl
icebp
les
aam
push
xchg
dec
jb
mov
fmull
out
add
cmp
lea
sub
sbb
pop
mulb
adc
push
cmp
or
rorb
xchg
popf
lods
sub
es
sub
roll
sbb
imul
lret
test
and
js
cmpb
stc
call
or
aam
push
es
jo
jge
dec
sub
lahf
xchg
push
sub
cs
add
or
pop
test
test
loop
xchg
sbb
out
test
in
adc
aad
add
fldcw
inc
loope
add
loope
add
add
lea
xchg
test
enter
push
jns
add
xor
sbb
push
shll
sahf
push
int3
dec
jnp
bsf
dec
enter
xchg
ja
fdivrp
and
push
imul
call
mov
or
pusha
jmp
mov
sahf
push
aaa
add
adc
sub
adc
xor
mov
dec
ret
fisttpl
out
adc
daa
xchg
aaa
sbb
add
iret
lea
sbb
cld
sti
push
js
in
nopl
movsb
sub
rcrb
xor
mov
and
pop
movsb
xchg
inc
sbbb
push
xor
fimuls
cmp
or
sbb
sbb
xor
or
xor
test
push
mov
jae
adc
cld
push
cmpsl
loopne
cld
inc
addb
dec
pop
sbb
in
sub
mov
lret
or
dec
je
add
outsb
je
push
aam
mov
mov
or
add
and
dec
or
std
leave
ret
pop
jo
dec
dec
dec
sbb
mov
cwtl
adc
jmp
or
add
pop
jp
mov
push
iret
aaa
lret
adc
ljmp
pop
sbb
fldl
pop
cwtl
out
cmpl
mov
pusha
xor
test
cmc
add
and
imul
or
mov
js
and
add
mov
dec
xor
lret
dec
nop
jne
sub
cld
or
xchg
and
push
xchg
and
enter
and
and
xor
pushf
add
sub
decl
xchg
std
rorb
dec
add
cmp
mov
outsb
jl
es
lock
adc
mov
cmp
rclb
subb
adc
xor
adc
jmp
add
adc
jae
or
dec
jl
lock
testl
add
sbb
mov
jle
or
lods
insl
mov
repnz
mull
ds
mov
sbb
or
adc
or
or
push
jo
inc
or
xchg
push
xchg
jge
push
ret
int
or
test
jne
push
test
leave
ljmp
and
dec
mov
mov
mov
in
push
jmp
lret
loopne
xor
popa
mov
inc
pop
xor
mov
int
mov
sbb
push
or
adc
cwtl
out
sbb
push
add
pusha
jnp
test
adc
xchg
sub
add
test
jnp
int
xor
xlat
and
sbb
push
cmp
push
sbb
nop
popa
popa
push
cmp
aas
sub
fbld
in
das
sub
mov
sub
imul
iret
xchg
ja
rolb
sbb
fstpl
test
cmp
ja
test
sub
sbb
push
mov
fisubrl
push
loopne
loopne
or
inc
subb
imul
push
mov
add
or
pushf
or
add
jp
test
pop
icebp
lret
out
pop
cld
jnp
cmp
pusha
or
push
call
negl
add
andb
xor
inc
ds
xor
push
or
jne
or
push
push
push
dec
dec
sub
or
and
jmp
xchg
popa
pop
neg
popf
xor
push
mov
add
lock
pop
pop
movl
adc
add
popf
jl
out
sub
mov
movsb
es
cmp
test
mov
por
push
cmp
xor
rolb
push
pusha
xchg
jmp
out
dec
in
sbb
mov
cmp
hlt
cmpb
out
jmp
mov
or
and
add
and
sbb
lock
dec
xor
pop
xchg
mov
push
or
sbb
pusha
stos
scas
sbb
add
xor
pop
fisttpll
push
mov
js
xor
cmp
push
daa
push
adc
in
add
push
sarb
sbb
ret
mov
mov
fcomps
cmpb
and
sbb
rorl
add
mov
cmp
push
cmp
mov
or
dec
lret
ret
push
sbb
cmp
or
cld
dec
adc
es
add
or
sub
or
jge
cmpsb
imul
leave
add
adc
scas
sbb
push
sbb
mov
push
dec
push
inc
sbb
sbb
pop
xabort
pop
and
scas
rorl
or
sub
scas
sbb
add
pop
push
stc
cmpsb
fidivl
pop
adc
or
or
mov
punpckldq
sub
and
lea
les
pop
pop
sbb
les
outsl
add
adc
ret
rcrl
fcoms
adc
jns
movsl
cmp
sbb
mov
cmp
jae
js
test
pop
mov
jmp
xchg
cmp
js
mov
std
test
or
mov
pop
js
or
push
aas
sbb
xor
es
or
sbb
pop
jno
scas
pop
sbb
mov
dec
js
fisubs
cmpsb
or
or
or
xchg
xchg
jbe
and
adc
pusha
and
mov
pusha
pop
push
xchg
jmp
or
xor
pop
inc
sbb
add
xchg
add
push
lret
rol
fiadds
ss
xor
movsl
xchg
and
sbb
clc
pop
xlat
sbb
inc
add
data16
mov
push
into
rcr
push
inc
add
inc
xor
cmpsl
or
xor
cli
push
and
and
inc
lret
add
xor
mov
inc
push
cmp
fcmovu
cmp
and
add
sbbb
dec
jle
hlt
jle
lock
js
jo
jne
xchg
lock
push
inc
cmc
xorb
sub
xchg
mov
jl
data16
dec
add
cs
or
out
sub
add
ficompl
push
ds
push
rclb
and
adcl
arpl
mov
pop
pop
cmp
adc
das
ret
lock
js
je
mov
jmp
fdivrl
je
inc
adcb
push
jl
jle
out
xor
ds
push
push
push
xlat
pop
addl
inc
cmp
dec
mov
call
pop
push
ret
aam
adcl
mov
dec
mov
in
jecxz
inc
adc
dec
push
and
adcl
loopne
mov
rolb
push
loop
scas
adc
inc
js
sarl
or
cwtl
push
sbb
mov
rorl
fucomp
sbb
dec
mov
add
movsb
negl
jle
xchg
pop
arpl
xchg
in
xorl
in
in
pop
cmc
icebp
movl
jb
pop
pop
fldcw
or
mov
in
mov
cmc
outsw
loopne
adc
mov
rol
add
sbb
call
enter
lock
pop
add
mov
wbinvd
pop
jo
bound
xchg
sbb
stos
mov
repnz
mov
lds
pop
jo
dec
adc
xor
dec
in
inc
dec
jne
dec
xchg
adc
xor
into
test
jmp
clc
into
push
push
inc
xor
mov
push
shlb
mov
inc
fwait
scas
or
push
adc
sbb
es
or
push
adc
add
push
add
push
pop
pop
or
xor
lret
xor
pop
out
add
es
or
mov
mov
push
in
mov
xorl
sbb
sub
adc
adc
imul
imul
iret
add
or
insb
fadd
sub
fs
adc
pushf
pop
dec
mov
sub
xchg
imul
adc
cs
cmpb
movsb
inc
or
jbe
sbb
jecxz
dec
adc
xor
xchg
sub
clc
and
mov
xor
es
pop
lods
mov
inc
lds
inc
cld
movb
inc
loop
fadds
aas
adc
shrl
lods
adc
inc
mov
movb
daa
dec
add
jne
and
call
lahf
push
add
or
aam
loope
xor
int
fmuls
add
movsl
push
inc
js
jl
arpl
jae
and
xor
test
and
mov
push
mov
out
call
inc
inc
and
mov
insb
imul
mov
int
xchg
rorl
or
and
xor
loopne
sub
mov
jnp
push
mov
xlat
mov
pusha
test
or
daa
sbbl
les
and
mov
into
pop
outsl
and
mov
fstpl
mov
add
insb
mov
movsb
in
and
fidivrl
pop
add
mov
jnp
or
pop
scas
push
loope
mov
push
and
mov
out
xor
xor
fidivrs
ret
mov
aad
dec
push
lahf
iret
data16
enter
andb
pusha
pop
cli
xor
or
test
decl
jno
pop
cmp
inc
adc
add
sarl
pop
insl
pop
push
inc
enter
fs
jno
movb
jb
push
add
insl
pop
sub
movsb
loop
mov
push
fdivs
lock
add
fstl
or
mov
cmp
clc
hlt
push
mov
andl
push
sub
inc
decl
mov
and
mov
subl
or
popa
std
adc
cmpb
aam
lret
push
mov
and
sti
gs
jno
mov
sub
inc
clc
imul
nop
pop
push
xchg
call
addl
push
notb
rcrb
fnstcw
jmp
fimuls
push
dec
sti
pushf
mov
mov
push
aas
int3
pop
mov
xchg
pushf
xor
add
add
rcrb
mov
and
mov
add
negb
pop
rcrb
cmp
adc
xchg
ljmp
outsl
sbb
dec
fldt
adc
adc
out
outsb
inc
adc
pop
dec
or
add
movsb
or
push
pushf
scas
add
cmpsl
add
push
pusha
test
rcr
mov
sub
lret
divl
mov
movl
and
add
jg
js
jbe
pop
ss
testl
xor
cs
cmp
mov
inc
pop
push
into
test
jbe
adc
adcl
add
mov
push
xor
sbb
sub
pushf
jae
add
lret
clc
push
jne
or
mov
hlt
cli
xchg
jle
icebp
jle
inc
icebp
jb
insl
ja
pop
cld
sub
inc
sub
cwtl
addl
lcall
adc
dec
mov
stc
and
push
ret
pop
ret
hlt
sbb
adcl
stos
movsb
push
inc
sbb
inc
mov
jmp
daa
sbb
add
pop
dec
enter
lock
shll
inc
sbb
jb
or
push
dec
pusha
adc
push
sub
add
add
call
sub
push
cmpsb
sbb
jle
xor
xchg
push
fisttps
enter
lock
lret
add
cli
sahf
lods
mov
dec
xchg
icebp
push
push
xchg
and
sahf
cmpsb
enter
cltd
mov
push
sti
push
add
dec
dec
ss
adcl
test
and
pushf
enter
dec
insb
nop
mov
or
or
cmp
push
add
aad
inc
pop
test
push
cmpb
jne
push
jno
push
add
inc
addr16
je
sbbb
or
out
xchg
sbb
pop
xor
test
call
push
dec
push
sarb
clc
movsb
mov
jge
cmc
adc
iret
jne
jne
push
daa
pop
mov
fsubrl
jne
sbb
sub
insb
mov
test
add
jns
pop
mov
cmp
cmp
sarb
push
fadds
jg
int
or
push
in
push
cmpl
orb
jg
insb
cli
add
dec
jo
or
jbe
jb
add
lods
pop
adc
pop
ret
cmp
clc
adc
mov
cmpl
inc
sbb
xlat
sbb
lea
adc
les
or
divb
test
and
imul
test
and
in
lret
enter
or
sub
xchg
loopne
imul
mov
loope
negb
and
pop
clc
sbb
mov
pop
shlb
pop
xchg
or
xchg
push
dec
dec
dec
mov
mov
std
add
mov
xor
rcrl
adc
inc
adc
aam
mov
lret
rorb
in
mov
stos
mov
cmpsl
shll
fmul
sub
add
mov
lock
push
hlt
daa
add
adc
das
push
das
add
sbb
fwait
sub
imul
jmp
pop
stos
sub
je
xchg
adc
add
sbb
push
data16
cmp
sub
sbb
aad
push
push
inc
or
iret
je
lahf
cmpsb
dec
push
js
or
pop
xchg
faddl
lds
dec
out
push
js
add
push
xor
addb
stc
or
imul
add
lea
pop
imul
or
adc
or
sbb
data16
popa
pusha
add
push
add
andb
shrb
jle
cwtl
push
push
aad
xor
div
jae
movsb
rcr
xchg
pusha
xor
ret
push
mov
jno
mov
push
mov
test
pop
pop
pop
adc
and
or
mov
push
cmp
je
push
in
and
test
sub
aad
and
cmp
mov
or
push
mov
scas
adc
or
cmp
mov
sbb
aaa
mov
mov
ljmp
stc
jns
dec
sub
aaa
xchg
or
in
mov
pop
inc
dec
pushf
push
outsb
push
push
shlb
inc
lods
aad
call
nop
cmc
fnstenv
adc
or
test
lret
out
pop
mov
sbb
sbb
addb
and
rcll
xchg
and
cmp
or
int
shlb
dec
sbb
xchg
and
popf
imul
int
jne
scas
adc
pop
sub
inc
subl
mov
ja
mov
lock
loopne
imul
lods
pop
ficoms
sub
cmp
jnp
or
xchg
and
xor
pop
andl
sbb
loope
sub
mov
and
inc
xchg
pop
cmc
sbb
xor
sahf
or
add
out
push
sahf
mov
sbbl
jae
cmp
and
push
add
mov
and
cli
mov
stos
mov
ret
fs
push
cltd
adc
adcl
push
nop
mov
adc
lret
pop
or
enter
or
sbb
sbb
push
ss
xchg
push
mov
movsb
fstps
inc
cmp
cmp
in
lods
mov
and
pop
dec
sahf
add
and
mov
adc
push
jo
in
enter
adc
xchg
push
mov
leave
and
jnp
or
push
shlb
add
scas
loopne
adc
sbb
xor
and
fisttpll
popl
jmp
pop
mov
pop
jne
inc
ds
dec
adc
inc
nop
mov
inc
push
or
inc
aaa
mov
inc
les
mov
adc
mov
mov
dec
push
or
push
add
inc
enter
cli
jno
add
dec
jno
cmp
je
stos
jb
jno
lods
test
or
lcall
add
mov
pop
fisubrl
ljmp
or
mov
inc
insb
inc
push
inc
xor
add
push
jno
push
test
ret
lret
sbb
jle
jb
outsb
and
push
jp
xor
pusha
lahf
test
fs
and
mov
cmp
xor
push
push
sbb
push
mov
dec
lock
push
dec
fcomip
inc
in
jne
inc
nop
jle
lea
lods
cmp
or
mov
shlb
add
sbb
enter
push
dec
xchg
pushl
xchg
inc
push
fbld
add
pop
pop
sub
sub
hlt
add
imul
add
mov
mov
or
adc
fisubs
xchg
cltd
imul
dec
imul
cwtl
jmp
fcomps
pop
movzbl
neg
push
sbb
add
push
scas
cld
xchg
das
ds
jecxz
das
pop
and
in
sahf
mov
pushf
xor
jg
rclb
sub
mov
inc
mov
lcall
dec
xor
test
stos
aaa
push
add
mov
int
adc
sub
leave
xchg
fsubs
jl
out
mov
push
and
adc
and
or
or
cwtl
cli
mov
loope
jbe
inc
adc
mov
pop
incl
add
adc
pusha
inc
lock
dec
stos
inc
pop
pop
xchg
xchg
inc
add
pop
rol
in
outsl
xor
in
fimuls
xchg
mov
test
sub
jmp
inc
inc
sbb
jne
int3
movsb
xchg
xor
test
cmp
cld
hlt
test
mov
add
or
jbe
orb
adc
add
icebp
jge
add
mov
mov
xor
add
shl
pop
or
pop
inc
cmp
push
mov
cmp
jge
mov
mov
adc
or
jl
push
movsb
or
jb
jle
add
hlt
adc
cmpsb
sbb
add
cmpl
push
sti
jne
xor
das
push
inc
jbe
mov
icebp
mov
xchg
cmpsb
mov
addr16
pop
inc
js
fistl
lock
es
bound
std
cs
sbb
rcrl
dec
js
dec
and
sbb
cs
mov
fs
pop
push
sub
push
cmp
lret
adc
fistps
and
add
xchg
pop
and
push
dec
dec
in
cmc
into
sub
gs
push
adc
mov
jo
daa
shlb
xor
jge
fwait
sub
push
add
xlat
push
jmp
mov
add
shll
lea
mov
adc
adc
xlat
adc
push
test
adc
dec
sub
push
aam
inc
mov
fwait
adc
call
scas
arpl
sahf
daa
lods
cli
cld
rorl
jecxz
fistl
popa
adc
mov
gs
add
cmp
jbe
lea
push
outsl
mov
adc
loope
ss
dec
sbb
push
cmc
sbb
adc
call
ret
sub
ret
push
add
test
shrb
or
xor
or
push
xchg
dec
out
xchg
nop
fldt
sub
or
and
js
or
push
pop
mov
adc
dec
or
jae
imul
mov
or
stc
cwtl
pop
adc
or
leave
je
subb
lret
xor
sbb
rcl
adc
mov
add
rorb
push
inc
inc
add
or
jns
test
shlb
mov
lods
test
dec
cmp
insb
or
inc
push
adc
clc
test
push
adc
and
push
xor
adc
lods
xor
js
test
push
mov
ret
xchg
lcall
scas
and
push
push
add
mov
idivb
adc
sub
dec
push
dec
push
push
scas
loop
dec
or
pop
pop
int3
outsb
push
or
dec
cld
cmp
sub
loopne
clc
pop
outsl
jecxz
xor
cmp
clc
out
jns
test
cltd
xor
js
push
es
mov
std
push
jo
push
in
lods
lret
push
in
mov
pop
int
dec
cmp
jbe
add
and
rcrb
jne
jmp
clc
push
add
jne
or
not
and
sub
mov
int
dec
or
cmp
jb
mov
dec
loopne
or
or
or
mov
lods
xchg
int3
sub
xor
cld
mov
or
cmp
mov
sbb
mov
and
xor
or
cmc
addb
cltd
push
repz
pop
hlt
dec
js
add
mov
arpl
jno
int3
cmp
addb
test
or
dec
push
cmp
out
add
jne
pushf
lods
or
out
mov
mov
daa
adc
add
mov
mov
inc
pop
cmp
push
jbe
pushf
sub
mov
xor
dec
add
push
dec
sti
aad
dec
push
or
push
fwait
xor
add
lcall
push
adc
jns
xor
adc
adc
jns
jns
push
sbb
repnz
sub
ds
sbb
ja
or
pusha
nop
or
mov
pop
test
mov
xchg
mov
or
xchg
sbb
adc
sub
push
jg
and
rolb
jge
inc
and
xchg
outsb
pop
cmp
xchg
fstpt
loopne
stos
dec
sub
mov
dec
or
testb
and
js
movsl
dec
dec
and
shlb
mov
outsb
or
pop
add
xor
aaa
mov
cmp
ja
ds
sbb
jmp
sbb
mov
xchg
cmp
jnp
mov
loopne
pop
js
mov
mov
and
pusha
pusha
test
push
fcoms
test
push
jno
rcr
cmp
push
insb
sub
into
inc
insb
sub
mov
adc
je
add
pushf
and
fidivrs
out
cld
pop
sub
cmpl
mov
xchg
push
jp
into
dec
jl
cwtl
orl
adc
jle
lds
roll
mov
insb
ret
push
mov
push
fisubs
fistl
addr16
je
or
je
sub
add
add
xchg
sbb
push
fdivs
or
lods
mov
adc
js
inc
or
push
bound
pop
outsl
insb
insl
push
xchg
push
notl
aas
in
rol
jecxz
call
pop
sbb
popf
sarl
add
rol
sbb
and
inc
cmp
ss
sub
pop
lea
and
mov
je
cli
inc
fsubrl
loope
add
sbb
inc
and
es
jg
add
imull
and
dec
cmp
push
fidivrl
xor
fidivrs
jbe
jg
in
push
and
out
and
es
or
adc
jb
lods
or
add
gs
sub
mov
mov
adc
add
inc
scas
fucom
push
fnstenv
dec
shll
and
sbb
or
lods
arpl
cmp
call
bound
add
bound
test
push
pop
jne
fiaddl
aad
mov
lret
es
pop
mov
out
imul
stc
idivb
jae
mov
push
push
pop
or
push
adc
add
push
sub
shlb
inc
inc
push
dec
inc
sub
mov
inc
pop
shr
add
les
lds
cmp
loop
dec
add
jle
flds
cld
data16
cmp
fcom
mov
or
adc
xlat
jb
push
lret
fadd
xlat
cmp
in
cmp
sbb
data16
mov
lcall
push
out
jb
mov
ljmp
adc
inc
cmp
xor
jo
sbb
jp
push
sub
jnp
pop
inc
inc
mov
dec
push
ret
push
mov
cmp
pop
push
sahf
pop
xor
pop
lahf
cmp
or
sub
mov
mov
movsb
sbb
push
mulb
and
stos
cmc
out
dec
pop
loopne
shlb
pop
pushf
mov
dec
stos
inc
movsb
mov
repnz
dec
xchg
rolb
adcb
fistpll
push
add
push
or
je
loope
rcrl
adc
push
or
push
jo
adc
mov
adc
push
dec
inc
push
outsb
test
lahf
imul
sbb
push
sub
sbb
cld
push
adc
enter
fiaddl
adc
sbb
cmp
sbb
sbb
addr16
xor
dec
sbb
test
adc
fs
loop
pop
and
inc
lea
movsb
stos
push
mov
orl
fwait
jle
es
dec
and
jnp
push
in
inc
or
dec
pop
mov
jg
jmp
pop
sub
cmp
int3
add
insb
push
repz
insb
ja
jae
or
add
cmp
nop
pop
into
sbbl
dec
cwtl
repz
cmpl
movsb
xor
xor
loopne
add
add
inc
dec
pop
into
subl
cs
divb
push
mov
or
lock
icebp
loop
lahf
and
adc
in
andl
enter
cmpsb
fsubrs
fs
pop
xor
pop
sahf
jecxz
loopne
fadds
push
or
or
ss
sbb
aad
inc
sbb
jg
add
mov
sbb
mov
inc
push
lea
outsl
jecxz
adc
test
jmp
or
scas
sbb
mov
lea
fndisi(8087
push
enter
jg
xor
xchg
mov
fbstp
mov
enter
call
cmp
jb
mov
dec
add
or
lea
and
imul
pop
fwait
dec
sti
xor
pop
push
pop
pop
call
cmpsb
sarb
negl
pop
mov
push
pop
push
xlat
into
inc
add
or
add
mov
cli
or
sub
push
inc
mov
add
mov
test
cmpb
adc
pop
inc
sahf
and
loope
pop
lahf
and
pop
repnz
and
dec
inc
cmp
hlt
lret
out
jg
and
je
or
je
sub
imul
cmpb
into
sub
xchg
sbb
jg
sbb
inc
lea
push
lcall
fnsave
sbb
in
adc
inc
mov
push
mov
arpl
cmp
fnstenv
nop
int3
push
sub
repz
mov
mov
inc
sub
push
cmp
adc
inc
nop
int
pop
add
push
cltd
mov
adc
or
sbb
push
jae
dec
and
mov
adc
sbb
mov
push
inc
sub
cs
insb
in
dec
inc
mov
mov
cmp
pop
xchg
cmpsl
mov
mov
dec
jo
mov
dec
inc
sbb
call
out
sub
jbe
xchg
inc
pop
and
pop
push
push
rcpps
or
subb
inc
pusha
and
mov
inc
dec
push
nop
jecxz
push
dec
ds
repnz
es
lahf
push
push
cmp
push
jb
imul
test
ds
inc
jns
cmp
mov
or
pop
daa
aad
rol
sti
ret
movups
orl
or
or
stos
and
roll
add
mov
loop
bound
mov
sub
adc
jns
jns
icebp
jmp
sbb
ror
add
dec
add
mov
fxch
shl
inc
add
sub
add
jae
adcb
sbb
or
and
roll
dec
push
xor
add
cwtl
add
ss
cmp
xchg
push
mov
lock
xchg
jno
push
cmp
aad
push
sub
fisttpll
inc
jo
mov
push
inc
add
js
and
imul
inc
pop
movsb
cmp
sub
xlat
inc
in
mov
add
cmp
orl
cmp
push
sbb
ja
lret
add
or
or
dec
xchg
and
push
jmp
add
lahf
pop
push
push
rol
dec
sub
add
nop
jp
test
rolb
xor
adc
and
cmpl
testl
sbb
aad
mov
add
out
push
roll
stos
add
jbe
push
adc
xchg
push
dec
data16
aaa
pop
push
out
roll
cmp
jb
add
int3
add
cmpsb
out
into
test
or
fs
repz
test
out
xchg
pop
out
add
imul
ds
jecxz
push
jb
and
push
inc
pop
popa
lea
adc
xchg
lcall
mov
daa
jns
xor
ss
es
ret
jne
xchg
xchg
add
push
add
add
add
cmp
sti
xchg
pop
das
push
aaa
add
jb
push
jae
stc
add
add
jno
nop
pop
test
dec
jno
outsl
enter
jne
jne
fwait
inc
push
inc
add
add
cmp
jns
push
dec
jbe
add
xorb
add
add
push
enter
inc
nop
pop
adc
inc
lret
test
mov
fmull
add
sub
sbb
add
cmp
int
add
fadds
jo
icebp
pop
push
xchg
insb
cmp
dec
xor
and
xor
inc
xchg
or
stc
add
mulb
adc
xor
push
icebp
push
mov
xchg
aaa
push
add
in
lret
inc
xor
adc
add
mov
pop
xchg
add
lahf
add
xchg
jl
inc
xchg
jle
cmpb
pop
je
test
pop
cmp
frstor
push
xchg
enter
jg
pusha
add
in
fimuls
cmp
dec
push
loope
cmp
push
dec
adc
in
and
add
dec
pop
or
in
inc
inc
mov
arpl
in
loop
sub
add
push
inc
dec
es
iret
add
jge
lods
inc
push
xorb
rorl
add
shl
sbb
dec
addr16
adc
mov
adcb
mov
pop
and
mov
repnz
daa
jmp
das
and
add
test
jbe
pop
dec
stc
pop
dec
and
inc
push
jl
jl
enter
or
mov
or
dec
fcoml
dec
insl
pop
mov
jle
push
sub
xor
pop
or
dec
in
enter
jge
pop
add
test
xlat
or
andb
mul
nop
out
icebp
or
sub
hlt
pop
test
xchg
inc
cmp
repnz
jg
ds
add
out
jmp
ja
pop
jg
jge
jbe
xor
inc
daa
pop
aaa
lock
test
rorb
call
cs
or
xor
add
subb
in
subb
push
jg
in
adc
mov
push
movsl
dec
fcom
inc
jb
mov
inc
das
outsl
add
mov
cmp
pop
sub
shl
cwtl
outsb
jl
andb
in
outsl
pop
das
stos
inc
lahf
push
jmp
add
or
fwait
loopne
shrb
addl
cmp
in
fbstp
jno
or
cli
ret
add
jl
loop
add
mov
jl
sbb
and
sub
sub
push
in
enter
lret
dec
daa
pop
scas
mov
clc
jle
lds
cmpsl
test
mov
insb
xchg
inc
sub
mov
add
sub
rorb
adc
jb
dec
lock
cli
xor
add
pop
jmp
jp
inc
jge
and
mov
call
es
push
pop
in
inc
cmp
add
roll
and
and
cmp
shll
inc
mov
mov
push
sub
mov
das
sub
ficomps
mov
add
dec
repz
and
nop
pop
or
bound
clc
or
ret
adc
push
clc
jmp
rolb
cmpsb
pop
push
shrb
lds
push
lret
rcrl
clc
add
imul
sub
pop
or
mov
jnp
and
and
mov
sbb
jno
leave
fldl
adc
and
aam
out
or
enter
mov
jbe
or
getsec
mov
and
movsl
sarb
inc
jbe
mov
test
outsb
xchg
inc
dec
cld
bound
mov
into
mov
mov
mov
jo
jl
imul
xchg
push
mov
mov
ret
and
hlt
or
fbstp
shlb
dec
xor
gs
xor
push
rcl
movsl
outsb
int3
and
cltd
and
dec
dec
and
cmp
inc
popf
pop
flds
inc
orb
loopne
cmpl
add
fistps
add
cmp
or
ja
or
ficoms
rorl
cltd
inc
stc
dec
or
mov
jmp
push
in
cltd
sti
xchg
sbb
mov
or
sub
xchg
sbb
mov
add
jnp
sar
sti
pusha
cmp
cmp
pop
fs
outsb
mov
and
inc
repnz
out
mov
ret
jmp
sbb
js
add
inc
out
inc
inc
rcll
push
and
dec
outsb
or
jmp
and
mov
mov
jb
sbb
mov
jmp
add
sub
dec
das
jmp
push
or
leave
clc
cmpsb
fs
in
nop
mov
mov
testl
add
mov
dec
inc
inc
cmp
add
jl
sub
test
mov
lock
orb
and
lods
sub
sub
jno
pop
aas
test
lea
imul
mov
xor
push
aad
push
rcll
and
jb
pop
xor
jecxz
int
mov
cmpsl
mov
xchg
sub
jge
test
pop
ss
add
ficompl
iret
push
mov
nop
sarl
add
aas
dec
scas
inc
ja
xorb
inc
xor
and
or
push
or
xchg
jo
cwtl
cmp
adc
lret
cs
pop
adc
out
adcl
pop
add
mov
fsts
add
scas
dec
and
popa
and
leave
sbb
add
jp
test
popa
xor
rorl
mov
inc
mov
inc
cmp
les
cmp
clc
sahf
pushf
cmp
ds
cmp
inc
xchg
dec
add
nop
cmpb
divl
xchg
jp
xchg
pop
jmp
or
xbegin
push
mov
lahf
add
andl
sub
jbe
inc
adc
dec
jns
dec
cwtl
mov
jl
pop
add
add
dec
sbb
push
fists
shl
dec
cmpl
fidivs
pusha
jo
movsl
int
add
xchg
out
or
pop
pop
imul
dec
add
jne
xor
jmp
add
pop
or
add
cmp
in
xor
cmp
outsb
mov
jl
or
and
ret
sub
adc
fadd
retw
leave
div
add
push
cmp
lock
add
inc
dec
subl
dec
inc
dec
mov
in
aad
cs
push
scas
ja
cmpsl
jne
lahf
xor
fidivs
jmp
repz
std
jns
pop
clc
pop
popa
push
lret
scas
jmp
sub
sbbb
pusha
rorl
lcall
mov
sub
popf
lret
mov
and
je
jbe
or
loope
test
cmpsb
adc
movsl
mov
pusha
jle
mov
setg
rcrb
leave
push
arpl
inc
ja
ret
inc
cmp
test
sub
push
inc
ja
jle
mov
aad
cmp
test
rolb
pop
ss
sub
inc
lret
jl
jmp
or
inc
aaa
arpl
loop
mov
jb
push
pop
hlt
adc
jp
loope
inc
dec
jne
dec
jae
push
push
mov
add
cmp
les
push
dec
lret
add
cmp
shr
aam
sbb
pusha
fsubrp
inc
sarb
fsts
pop
enter
inc
pop
cmp
callw
ss
aam
nop
inc
and
dec
jb
fs
dec
dec
ss
or
push
data16
push
or
in
je
mov
cwtl
jmp
or
aad
jb
push
shrl
scas
inc
sar
rclb
inc
ret
lods
adc
mov
lods
rcrl
imul
lods
xor
xchg
lods
test
out
xor
xchg
inc
pop
mov
insl
cmp
cmpb
mov
push
fsubr
dec
mov
inc
cltd
filds
pop
es
xor
daa
cmp
loopne
rcl
sub
push
mov
cmp
xchg
dec
adc
or
add
push
sbb
dec
lcall
inc
lock
jne
adc
adc
pushf
dec
xchg
clc
sbbb
mov
xor
stc
dec
pop
jl
rorb
jl
xor
movsb
sub
jge
shlb
add
push
xchg
loope
fdivs
shlb
dec
ds
fmull
xlat
loop
jge
aas
jl
jmp
add
test
lret
arpl
xchg
push
leave
enter
dec
rclb
xor
pop
push
add
mov
test
push
fisubrl
leave
gs
cltd
lods
jge
push
cld
jo
pop
add
je
je
add
flds
xchg
adc
and
mov
xor
jne
icebp
cld
mov
nop
mov
dec
cmp
in
sbb
and
cmp
dec
decl
or
out
cmp
aaa
pusha
mov
ret
out
sbb
mov
inc
inc
push
in
adc
xor
and
adcb
mul
push
jne
xor
lods
pop
ffree
cmp
add
inc
out
scas
sahf
ds
shr
popa
fists
cltd
and
por
lret
fisttpll
jne
pop
testl
jne
add
inc
and
imul
rclb
adc
pop
xchg
mov
add
sub
in
sub
pop
xchg
cmp
fisttps
xor
ror
mov
ret
rcll
nop
cmpsl
sub
jno
ficoms
and
mov
or
push
enter
xchg
inc
add
adc
into
daa
inc
pop
push
js
in
divl
inc
mov
add
jbe
push
cmc
cmp
arpl
fnstcw
lods
push
ror
xor
in
sbb
lock
push
add
imul
cmpsb
pop
cmpsl
and
sbb
das
mov
lcall
cmp
test
pop
insb
in
inc
push
mov
pop
jo
shlb
xor
adc
xchg
and
int3
sarl
sbb
enter
mov
add
push
lahf
enter
mov
jl
adc
sub
lret
movsb
fsubr
mov
roll
add
pop
les
cmpb
push
push
pop
mov
push
sub
cmc
cwtl
mov
push
mov
dec
push
sahf
and
dec
dec
popa
sub
lahf
sub
ja
clc
and
cmc
jb
lea
adcb
adc
add
jnp
sub
sbb
hlt
mov
pop
inc
push
movsl
je
add
icebp
xor
cli
mov
mov
add
cmp
sub
adc
inc
adc
pop
jno
jno
xor
outsl
inc
shl
les
jmp
jmp
mov
mov
rcrl
xchg
loopne
push
pop
xor
push
daa
jb
push
adc
jle
jb
jns
orb
les
xor
adc
inc
xlat
test
mov
lods
sub
in
hlt
and
test
fwait
xlat
fwait
cmp
push
add
fwait
cmp
jge
hlt
push
movsb
or
push
or
xor
push
cmc
jp
clc
daa
xchg
inc
mov
push
cmp
sub
inc
jmp
addl
jl
add
daa
stc
add
xchg
test
dec
push
or
or
sub
xchg
push
and
push
and
fwait
cmp
andb
add
jno
or
addr16
ret
and
push
dec
stos
xchg
out
mov
pop
and
cmp
sahf
jb
adc
daa
sub
lds
sub
subb
cwtl
sub
sahf
lds
add
adc
pop
sbb
je
adc
test
out
loop
sahf
and
xor
test
test
inc
test
sbb
or
daa
lahf
mov
lahf
mov
dec
sbb
bound
call
jb
or
push
push
jmp
or
sub
repnz
xor
pop
pop
and
mov
rclb
adc
testb
cmp
jmp
dec
ret
andl
jg
dec
cmpl
mov
dec
mov
adcl
and
cld
testb
sbb
loop
movsl
pop
out
loop
add
add
and
inc
xlat
adc
mov
inc
and
jmp
test
fs
add
sbb
inc
je
movsb
inc
pop
or
cmp
outsb
les
and
into
and
and
xchg
add
inc
and
and
sbb
cmp
mov
jno
movsb
and
sbb
lret
jb
arpl
cmp
xor
in
inc
popf
jnp
add
sbb
frstor
and
loop
jbe
push
jmp
cmp
sbb
sbb
cld
les
xlat
mov
insl
and
sbb
rolb
pop
push
jno
lock
or
mov
out
lock
nop
das
xorb
popw
icebp
out
out
or
aam
push
xchg
sub
enter
jmp
es
les
sub
cltd
sbb
shlb
and
pop
jecxz
lahf
xor
cmpb
je
popl
inc
ficomps
flds
xor
or
jbe
psubd
mov
iret
xchg
add
fwait
mov
jle
inc
jo
pushf
fwait
test
daa
pop
rcl
cmp
push
cmc
rolb
sbb
or
ljmp
sbb
fs
jne
into
add
out
mov
add
leave
xchg
add
aad
or
addr16
pop
fists
rcrb
adc
jmp
and
mov
imul
add
in
sbb
lret
sub
daa
add
mov
aam
ljmp
fsubrl
sahf
out
or
and
jge
dec
fisubs
and
inc
movsl
cmp
push
jge
cmp
mov
fcoms
dec
mov
push
push
push
add
loopne
icebp
and
cmp
pusha
mov
daa
sahf
mov
mov
add
dec
inc
mov
pop
pop
adc
cmp
test
or
aam
pop
adc
outsb
add
fisubrs
push
test
or
leave
and
bswap
xchg
xlat
sahf
or
test
enter
sbb
nop
bswap
shrl
cmp
jbe
and
push
jb
push
popa
push
mov
cmp
xchg
dec
dec
add
add
stos
mov
mov
add
push
imul
add
jmp
add
stos
mov
push
gs
add
push
addr16
inc
cmc
xor
fdivs
inc
jmp
das
lock
sbb
sbb
or
cld
or
sbb
adc
push
clc
lods
add
and
or
mov
daa
or
or
repz
sbb
dec
lea
pop
mov
fisubrs
nop
pop
sbb
add
cmp
movl
repnz
and
test
push
sub
mov
add
push
add
mov
aas
or
and
addr16
add
pop
test
adc
scas
add
sbb
js
dec
fcmovne
test
mov
repz
stos
movl
aas
outsb
fcmove
call
inc
movsb
js
lret
ret
lcall
or
or
xor
adc
or
jb
cmp
lods
xlat
lods
sarl
cmp
inc
ret
js
jb
jbe
fs
sub
pop
rorb
adc
ja
in
jns
xchg
ffreep
pop
mov
ret
push
out
inc
fwait
mov
loope
jecxz
lock
xchg
sub
dec
lock
inc
and
and
lock
pusha
and
jno
cmp
push
or
inc
jp
add
and
js
push
fcmovnu
adc
pusha
and
push
push
fisubs
enter
xchg
add
pushl
push
mov
pop
popf
adcl
lock
ret
xor
call
call
mov
stos
inc
dec
and
add
add
add
or
leave
out
add
adc
add
xchg
mov
decl
adc
sub
and
inc
add
add
enter
add
call
lahf
aas
add
test
and
test
add
in
dec
dec
add
les
push
xchg
mov
adc
scas
or
xor
and
sub
mov
pop
pop
ja
lods
sahf
dec
sbb
ljmp
sub
out
into
dec
cmp
push
add
shlb
adc
jo
cmc
inc
decl
testb
test
je
and
mov
xor
mov
je
stos
cwtl
pop
leave
test
pop
inc
xchg
inc
lods
add
push
dec
or
add
cld
dec
lcall
shll
adc
ja
insl
shl
test
add
jbe
mov
call
lcall
add
jmp
cwtl
pop
sahf
ficoms
push
mov
inc
scas
loopne
test
pusha
push
leave
add
or
filds
call
fnsave
add
outsl
and
inc
inc
sarl
push
lods
in
jg
clc
mov
ljmp
cmpl
ret
arpl
or
int3
xchg
in
cmpsl
add
in
aas
je
dec
adc
push
or
popa
ja
mov
sbb
adc
add
fadd
lods
subl
fwait
inc
sahf
test
add
imul
mov
fisttps
in
mov
jmp
outsl
jge
mov
imul
dec
inc
mov
jae
push
je
jecxz
daa
cmp
or
adc
sub
clc
mov
stc
fwait
pop
ja
and
addb
sub
fldcw
add
lea
adc
movsl
and
xor
push
add
movsb
pop
xor
add
cmp
xlat
jmp
adc
dec
cmp
add
sub
mov
stc
popa
sub
sub
and
cmpb
jne
nop
cltd
dec
mov
push
frstor
gs
cwtl
sbb
push
xor
nop
stc
aaa
jb
lods
imul
adc
sbb
adc
sar
dec
ret
arpl
je
out
jg
cmpb
mov
and
sbb
or
xchg
inc
scas
and
adc
dec
pop
xchg
mov
push
jne
xor
sbb
inc
lret
gs
mov
pop
sbb
in
mov
mov
mov
xor
jno
icebp
in
mov
sub
adc
in
loope
sarl
push
jne
sarl
mov
cmpl
shll
loopne
cmpl
pop
or
inc
sub
lock
jge
or
jg
adc
mov
add
mov
insb
int3
inc
jl
push
or
ret
lds
pop
adc
fwait
inc
push
push
pop
add
repz
test
cmp
jo
add
shll
or
iret
cmpl
sahf
sti
mov
add
rorl
and
in
inc
cmpsb
add
push
add
push
orb
push
and
mov
adc
frstor
mov
pop
mov
daa
sub
push
test
in
jns
lods
pusha
push
rclb
scas
mov
and
sbb
jp
dec
sub
xor
shll
add
add
mov
and
inc
bound
adc
repz
adc
sbb
lock
lea
mov
and
sbb
add
adc
or
add
leave
add
aam
push
cmp
mov
shrb
mov
dec
aam
mov
xchg
xor
mov
xorb
and
mov
xchg
test
lock
mov
jne
addl
bound
xchg
mov
inc
sub
jp
push
mov
jns
push
push
scas
popf
and
mov
adc
out
fisubs
in
mov
push
ljmp
sbb
pop
loopne
pop
mov
push
or
and
xor
scas
push
lds
jns
or
cmp
and
add
sbb
or
or
mov
or
mov
je
out
add
sbb
mov
mov
sub
std
jb
or
inc
fs
or
jp
push
push
outsl
push
push
mov
mov
jno
inc
je
les
jl
pushf
mov
push
sub
pop
jg
cmpb
shr
daa
nop
mov
icebp
jns
sub
shlb
addb
pop
ficompl
mov
sub
sub
mov
mov
mov
pop
inc
mov
mov
sub
or
push
ret
fistl
pushf
rolb
popf
sub
inc
shlb
add
adc
adc
jne
push
and
push
lock
inc
dec
rorb
rolb
and
push
sbb
add
add
xchg
repz
inc
jle
and
and
adc
rcll
adc
fcompl
loopne
adc
push
pop
push
or
loopne
adc
fcoms
arpl
mov
in
jo
mov
sbb
test
mov
mov
mov
lock
pushf
mov
adc
lds
cmpb
test
fldl
cmp
mov
repnz
push
mov
outsl
cld
data16
cmp
mov
aam
or
cmp
jb
and
add
inc
push
cmc
sbbb
adc
dec
ds
in
xlat
add
xor
stc
push
add
adc
test
pushf
lret
cmp
jmp
sti
pop
mov
sbb
arpl
and
std
iret
pop
std
dec
std
in
flds
jno
stos
std
cli
jns
inc
add
dec
mov
daa
or
mov
popf
outsb
push
inc
sbb
aam
sub
jae
roll
mov
les
outsl
pop
and
push
hlt
insl
cmp
or
sbb
xchg
outsb
ds
adc
sahf
lds
push
ja
jmp
test
xor
cmpsb
jge
dec
push
movsb
cmpsl
sbb
into
xchg
sbb
push
cmpsb
loopne
or
or
leave
cmp
add
lcall
cmpsl
adc
andb
mov
cmp
push
add
xor
je
jmp
jmp
xchg
sbb
das
cli
icebp
loopne
addb
jl
jns
mov
add
and
mov
xchg
sbb
mov
mov
push
frstor
movsl
inc
sti
lret
stos
shl
rorl
lret
add
add
xchg
lret
dec
push
push
jns
xor
insb
mov
lahf
mov
jmp
cli
pop
push
cli
ret
test
stc
and
cmp
repnz
sub
dec
mov
xor
mov
push
jge
adc
outsl
push
out
daa
pop
mov
push
add
test
xor
mov
dec
dec
add
push
imul
je
bound
or
cmp
je
or
and
cs
jg
push
sub
mov
subl
dec
shlb
mov
pop
dec
shlb
mov
out
or
inc
out
mov
push
pop
ret
sbb
inc
add
stos
or
cmc
jp
jno
dec
push
rorl
les
cltd
ds
sbb
cmp
into
push
cltd
test
cmc
fsubl
cmpsl
loop
xchg
or
hlt
inc
xor
add
push
lock
mov
fsubrl
or
imul
and
pop
fcomi
pop
enter
idivb
idivb
dec
ja
mov
sbb
inc
adc
inc
xor
lock
or
dec
lock
pop
or
pop
add
idiv
push
fwait
or
dec
add
sub
adc
mov
gs
pop
xor
aaa
mov
loopne
lahf
mov
xor
inc
dec
adc
and
sub
or
orl
or
stos
in
mov
roll
roll
sub
je
jae
out
add
or
add
push
xor
mov
repz
xor
stc
dec
test
mov
out
out
cmpsl
mov
add
out
pop
roll
or
push
add
in
jns
repz
mov
mov
arpl
pop
insl
in
cmp
cltd
or
fldl
jns
sub
sbb
cmp
imul
pop
out
js
sub
fnstcw
repnz
sub
cmpsl
dec
lds
push
dec
js
or
in
push
icebp
aam
or
loopne
jne
popa
xchg
in
incl
in
mov
sti
jmp
and
push
or
loopne
and
scas
adc
mov
lcall
add
jmp
mov
fs
xchg
movsl
xchg
lock
xor
or
jle
or
jmp
mov
and
adc
mov
scas
test
mov
mov
inc
sbb
jb
and
ljmp
pop
pop
pop
stc
sahf
add
ljmp
xor
fs
mov
pop
mov
cmpl
pop
jge
pop
je
dec
ds
or
test
push
out
enter
dec
add
add
xor
pop
test
out
push
add
jbe
adc
mov
daa
adc
add
mov
bound
jbe
jge
movsb
adc
add
jmp
jl
das
jmp
scas
mov
add
jo
sti
test
cmp
inc
clc
xor
push
add
std
jmp
mov
ja
test
call
and
xchg
in
add
in
cs
cmp
and
mov
sbb
adcl
jp
sub
cmp
sti
jae
loopne
pusha
fiaddl
out
push
dec
fidivrs
push
mov
out
stos
out
jmp
xchg
lahf
push
loopne
out
in
roll
mov
jo
push
es
pushf
in
stos
in
enter
xor
hlt
add
addr16
jmp
fcmovb
mov
ja
shrl
out
adc
mov
lret
daa
out
stos
add
dec
mov
sbb
jmp
jmp
out
lret
pop
mov
xor
jecxz
mov
cmp
call
cmp
pop
sub
rcrl
sbb
mov
nop
pop
outsb
out
decb
sti
nop
jb
mov
repz
push
imul
mov
insb
mov
cs
test
test
bound
xor
mov
mov
out
imul
and
cmp
push
shll
cmpsl
jge
into
jl
mov
insb
sahf
cmp
shrl
cmpsb
or
xor
iret
repz
lahf
jge
cmpsl
stc
add
test
out
test
addr16
rcrl
loop
mov
jl
xchg
adc
jns
imulb
jp
jnp
es
sbb
lret
push
adc
jb
jmp
lcall
adc
imul
cmp
lock
ss
jle
cmpsb
icebp
jnp
mov
jmp
jnp
xor
enter
dec
dec
ja
adc
jg
adc
push
pop
sbb
sbb
add
sbb
and
and
in
sub
sub
sub
xor
xor
xor
pushl
ss
cmp
cmp
cmp
inc
inc
inc
inc
inc
dec
mov
inc
dec
add
nop
sarl
push
outsl
outsb
xchg
push
mov
lahf
jbe
xchg
xchg
dec
mov
mov
ret
adc
push
mov
stos
insb
ss
ss
inc
stos
cmpsl
stos
lods
sahf
data16
lds
fs
jge
repz
adc
mov
testb
mov
dec
xchg
ds
repz
lock
fstps
daa
test
sbb
jo
add
fwait
int
mov
rcrb
jae
fs
insb
mov
mov
in
fwait
mov
aas
mov
enter
data16
leave
insb
mov
arpl
pushfw
xor
clc
imul
enter
call
out
jbe
cmpsb
mov
jg
out
mov
cmpsl
stc
cmp
jb
adcl
jg
repz
jbe
jmp
cmp
push
adc
jmp
or
push
push
and
xchg
icebp
inc
cmp
cmp
adc
fcmovb
xor
inc
das
sbb
sar
mov
push
add
hlt
sahf
push
dec
xchg
push
rolb
adc
lea
loop
fucom
xchg
xor
push
sar
inc
sbb
mov
rcl
xchg
ret
add
iret
inc
and
idivb
jmp
push
xchg
mov
add
aad
cmc
cmp
testb
jo
inc
inc
gs
jmp
test
shlb
shrb
iret
push
mov
and
xor
cmp
cmp
or
fdiv
cmp
add
fwait
mov
cs
cmp
je
xchg
or
pop
imul
and
loopne
iret
xor
loope
adc
pusha
jne
scas
push
sbb
fs
sbb
clc
add
push
push
push
fcmove
loopne
arpl
jnp
sub
mov
mov
pop
pop
jne
mov
and
pop
jne
push
pop
inc
rcl
test
decl
and
shl
or
push
or
divl
aaa
mov
scas
sub
pop
je
cmp
je
int
aaa
aaa
inc
je
sbb
jmp
cmpb
jne
test
nop
add
movsl
jmp
pusha
push
movsb
or
mov
adc
sub
cli
cmpb
dec
pop
mov
adc
sbb
aaa
xor
push
adc
stc
add
imul
inc
pop
cmp
jb
fmull
enter
lahf
stc
cmp
stc
out
out
aaa
adc
xor
je
cmp
jmp
out
je
add
je
testb
jne
mov
mov
and
mov
adc
enter
add
nop
ljmp
push
push
fwait
sub
int3
push
inc
icebp
inc
cmc
orl
xchg
or
add
testb
pop
mov
sub
and
in
das
mov
mov
loope
adc
test
lahf
inc
push
pop
and
inc
xor
mov
es
or
lahf
inc
cmp
lea
add
pop
jb
movsb
fucomi
mov
pop
inc
mov
aaa
xor
sbb
fiaddl
fsub
add
jp
add
push
mov
cltd
xor
pusha
clc
neg
xor
dec
and
push
mov
add
inc
in
test
add
addb
sub
rolb
lods
inc
sbb
jae
or
add
mov
add
aaa
pop
or
std
push
add
jmp
and
popf
addb
insb
scas
mov
jnp
fdivrs
inc
cmp
pop
lock
ret
fidivs
jecxz
and
mov
iret
add
movsl
jb
roll
xadd
fld
jecxz
jecxz
into
in
jecxz
jl
jne
jne
mov
mov
pop
pop
ret
arpl
fs
imul
shrb
add
push
stos
ret
xchg
loope
add
insl
mov
pop
push
xchg
leave
test
imul
xchg
dec
lret
imul
adc
test
cli
loop
popa
push
scas
divl
movsb
push
test
in
dec
push
dec
movsl
aam
sub
jmp
aas
push
adc
test
pop
add
or
xorb
mov
ja
jbe
popa
sbb
call
sub
dec
xchg
sub
jb
pop
ja
push
add
aam
shrl
add
and
popa
inc
jmp
inc
fnsave
pop
fwait
pop
add
push
imul
pop
stc
jecxz
sub
mov
add
or
sub
inc
xchg
push
xchg
nop
or
gs
add
lret
push
repnz
push
inc
add
inc
add
pop
push
cmp
add
gs
pop
and
addl
inc
les
push
xor
in
push
pusha
add
repnz
je
mov
or
and
inc
xor
add
adc
in
aad
and
pop
push
jg
loopne
clc
and
xchg
add
and
loop
jns
xor
and
subb
or
push
adc
test
mov
jl
add
mov
out
add
add
popf
mov
mov
adc
movsl
sbb
rorb
push
js
aad
pop
jg
mov
mov
outsl
cmpl
pop
pop
shlb
xchg
stc
adc
sub
mov
icebp
jmp
mov
pusha
jg
je
adc
jl
push
or
and
shlb
mov
daa
mov
out
xchg
out
or
jle
inc
adc
rorl
sub
cmp
xchg
or
lods
add
xor
mov
and
pop
jmp
jmp
lods
in
sbb
fs
pop
vpor
pop
neg
lea
orl
les
iret
mov
stc
inc
clc
ljmp
mov
xor
jo
and
loop
jnp
mov
push
sbbb
add
orb
add
xchg
sbb
int
cld
cld
std
add
push
push
inc
ss
add
jg
jg
pop
inc
sti
adc
pop
dec
inc
cmp
sub
jg
je
jl
mov
les
adc
cmpsl
sub
jge
in
sbb
cmp
cmp
cmp
dec
ss
adc
stc
sti
mov
lock
out
mov
ret
movsl
fsubrp
dec
aad
aad
xor
enter
mov
adc
mov
dec
stos
cmc
jmp
mov
movsl
xchg
push
imul
je
cs
dec
cmpb
jl
or
sub
jmp
cmp
and
shlb
push
sub
add
push
test
pop
jp
fsubs
dec
rclb
or
mov
xchg
add
lahf
ss
cmp
push
cli
jge
sub
adc
iret
mov
mov
mov
iret
lock
das
stc
adc
lahf
push
or
ss
imull
push
mov
or
push
pop
pop
push
push
or
mov
ds
cmp
rorl
leave
stos
jge
cmp
ds
cli
xchg
or
iret
repz
cli
or
dec
sti
mov
nop
outsb
xlat
or
cld
cmp
or
arpl
add
adc
andl
es
add
das
test
sbb
inc
ficoml
cmp
jae
mov
loopne
add
dec
mov
xchg
and
inc
fbstp
inc
mov
adc
out
fisttps
or
loop
hlt
mov
ja
jb
add
xor
subb
mulps
pop
cmp
inc
jmp
mov
movsl
add
mov
cmp
sub
mov
cmpsb
sbbl
push
into
pop
jne
inc
or
mov
dec
imul
fidivl
push
jne
push
sbb
out
cli
add
fwait
inc
in
orb
jecxz
hlt
pop
nop
mov
mov
xchg
mov
dec
xchg
cmpsl
cmp
dec
dec
dec
mov
iret
jno
pop
add
fldcw
pop
adc
add
pop
ds
pusha
lahf
lea
jg
loopne
imul
pop
xchg
nop
fiaddl
add
push
add
inc
and
add
push
sarl
pusha
mov
repz
cmp
and
adc
sub
adc
ljmp
add
out
movsl
nop
sbb
jl
fadd
ret
xchg
rcr
sub
rorb
popf
lret
add
and
fcomps
mov
repnz
or
cltd
rcl
pop
pop
add
jmp
inc
sbb
dec
push
nop
xchg
push
pop
sub
rclb
jmp
stos
test
fidivl
jl
in
inc
mov
cmp
andb
mov
cmc
int
jns
mov
jl
fldl
push
lret
cmp
mov
insl
or
add
out
push
or
cmp
imul
or
cmpsb
in
jle
add
or
or
cwtl
push
ds
cs
xchg
inc
push
ret
es
daa
cs
hlt
xchg
pop
push
inc
sub
or
push
movsl
xchg
xchg
cs
push
or
xor
cmp
xchg
add
or
mov
jo
jle
xchg
xor
mov
hlt
je
push
hlt
or
dec
xor
out
push
jo
dec
push
es
test
nop
mov
jbe
push
xchg
or
out
jb
xor
das
sti
or
cltd
xchg
mov
test
dec
iret
dec
ljmp
add
adc
or
and
movsl
mov
call
pop
inc
cmpl
inc
or
xor
or
push
adc
sub
fstl
or
dec
add
insl
dec
mov
push
push
mov
push
mov
sub
adc
mov
aam
and
dec
in
js
jle
sarl
test
ret
push
add
push
mov
call
and
adc
and
sub
dec
cmpsb
loopne
add
add
xchg
orb
push
mov
pop
lds
cmpl
shrb
mov
fnsave
ud0
jp
pop
inc
jmp
push
push
jno
mov
lret
jae
add
jns
and
sbb
inc
mov
xchg
mov
jmp
and
pusha
fmull
lret
cmp
jbe
add
adc
adc
adc
sti
outsb
movsb
sti
rcrl
sbb
add
xor
sbb
ret
adc
xor
hlt
imul
pusha
cs
add
mov
stc
insb
negl
in
adc
test
ds
es
xchg
adcb
movsb
imul
xor
movsb
movsl
movsb
mov
pop
push
xchg
inc
nop
adc
loop
mov
je
sbb
or
and
mov
ret
clc
sar
add
xor
jg
fs
fdivrs
or
dec
jae
cmp
scas
mov
hlt
call
sub
sub
cmp
pop
hlt
popa
add
xchg
fs
popa
push
add
out
stos
push
dec
into
enter
or
sub
cmpsb
inc
cmp
sub
cli
addr16
lcall
fwait
out
jne
adc
dec
adc
movb
jle
fsubs
or
add
add
xchg
push
andl
das
push
jo
cs
add
lret
sub
add
add
push
loop
adc
hlt
pop
sub
push
dec
jb
pop
js
movsl
jno
test
inc
sbb
out
test
lods
clc
sub
jmp
pusha
shrl
clc
push
sub
push
es
add
dec
mov
xchg
and
xchg
jle
das
inc
jmp
jge
fwait
adc
ds
adc
in
sahf
inc
push
cmp
push
es
and
jl
pop
jne
sub
testb
popl
xor
imul
pushl
test
xchg
xchg
jmp
mov
adc
push
push
push
inc
mov
add
mov
aad
rol
add
add
adc
adc
mov
fimull
jno
sub
negl
mov
push
ds
in
loope
mov
jmp
mov
stos
xchg
cs
test
mov
or
or
mov
adc
add
orb
mov
fs
add
pop
or
sbbb
mov
movl
sbb
jp
push
cmp
flds
mov
movsl
and
or
mov
scas
outsb
sbbb
add
out
divb
lret
mov
cmp
xchg
nop
mov
or
cli
mov
cmp
dec
and
sbb
cmp
in
sub
cmpsb
dec
sbb
jl
pop
sbb
add
orb
out
and
fstpt
mov
and
les
lods
adc
mov
adc
cmpsl
and
dec
call
mov
push
adc
mov
pop
mov
inc
rclb
mov
ss
or
push
cmp
pop
xchg
mov
rolb
mov
icebp
lea
fadd
cmp
popa
cmpb
mov
sarl
xchg
pop
cmpb
ds
dec
dec
cmpsl
orl
je
add
xorb
lret
adc
sbb
and
add
or
fcompl
jmp
mov
outsb
loopne
sbb
fs
ds
andb
mov
fwait
sbb
rolb
push
andl
or
rolb
jp
cmc
aad
adcb
adc
xor
rcll
jb
xchg
mov
sub
jge
xor
cmpb
mov
dec
inc
je
xchg
sarl
push
popl
cli
or
jmp
mov
xchg
xor
xchg
push
outsb
subb
incl
js
push
adc
cmc
xchg
subb
popa
cmp
sub
xchg
es
roll
jp
fdivrs
mov
push
popf
mov
sahf
cmp
adc
mov
mov
loopne
mov
sbb
subl
cmc
add
jge
cmp
xchg
mov
push
ss
ret
xlat
rclb
addr16
repnz
loopne
and
decb
loop
adc
cmc
sub
cmp
mov
in
dec
xor
sub
push
pop
lret
push
and
cli
adc
or
push
xchg
rcll
fmuls
movb
xor
dec
sub
pop
mov
mov
cmpsb
mov
jo
lds
sub
insl
dec
cmp
sbb
push
dec
cwtl
movsb
cmc
add
or
scas
jo
push
jecxz
xchg
push
ds
push
mov
pop
fisubl
jl
cmc
or
loopne
cmc
cmp
mov
sbb
aad
mov
add
dec
dec
jge
inc
fcomps
sub
clc
jg
nop
jg
in
push
dec
sub
and
jno
test
hlt
jle
dec
fdiv
jg
nop
sbb
xchg
lea
outsl
icebp
add
dec
and
xorb
es
mov
push
in
sbb
fwait
hlt
mov
insb
je
or
and
ret
imul
mov
push
jl
and
insb
mov
pusha
inc
mov
pop
cmp
push
inc
push
sti
add
push
dec
jg
loop
inc
push
cmpsl
hlt
xor
push
pop
push
sarl
adc
shlb
dec
lock
shr
sub
jmp
cmp
mov
jno
and
push
and
std
scas
adc
mov
imul
sub
shrl
add
rorl
mov
push
scas
inc
push
sbb
jbe
inc
dec
xor
xor
mov
cmpb
bswap
lret
ss
dec
or
test
out
out
sbb
sahf
ret
lret
fbstp
jne
movzbl
cltd
dec
in
stc
jns
push
movsb
xchg
jl
jae
incb
sub
inc
or
dec
mov
jp
movsl
loopne
push
sub
dec
or
jle
mov
inc
je
add
or
add
movsl
adc
orl
mov
inc
dec
iret
inc
stos
sbb
add
xor
xor
or
rolb
dec
mov
adc
cmp
addr16
push
inc
add
clc
sub
je
push
sub
adc
rcr
mov
jnp
inc
and
xchg
adc
dec
inc
fstpl
push
jg
xlat
jmp
inc
dec
jmp
adc
ss
jp
stos
xchg
sub
iret
pop
add
mov
xchg
shll
repnz
pusha
fldcw
add
pop
les
cmp
adc
ljmp
rorb
push
jl
cmpb
pusha
adc
or
ljmp
sbb
paddb
adc
jmp
sub
sti
popf
jbe
add
pusha
aas
sub
js
add
add
push
push
add
ss
add
push
xor
inc
dec
into
sub
test
cmp
mov
and
sub
push
enter
movsb
cmp
push
mov
xor
out
push
dec
ret
cmpsl
mov
sub
and
push
push
out
push
popl
jp
cmp
rep
mov
xor
add
or
xor
cmpsl
xchg
or
add
sub
mov
xor
add
xor
lds
mov
fildl
inc
jecxz
xchg
mov
or
push
or
push
cmp
cmp
outsl
cmc
sar
dec
add
and
mov
and
mov
nop
sti
lea
dec
prefetch
ja
scas
xor
cmp
push
repnz
data16
fists
and
dec
lock
adc
xchg
clc
into
jmp
adc
or
xchg
roll
orb
mov
sbb
xchg
cmp
lods
push
or
inc
push
jo
scas
gs
jmp
xchg
sub
push
leave
push
sub
cs
adc
je
xchg
cmp
adc
das
adc
and
pushf
and
xchg
cmp
mov
pop
ret
cmpl
ds
push
cmp
mov
mov
and
dec
test
rclb
adc
dec
ss
mov
scas
lret
mov
adc
fimull
addr16
popa
sub
idiv
cmp
and
rolb
sbb
or
dec
lcall
and
mov
xor
pop
je
lahf
rol
jne
pop
sbb
add
push
rclb
mov
jo
popa
outsb
shl
pop
sbb
push
addl
xor
push
lea
xor
test
sbb
push
fwait
sbb
push
and
push
mov
cli
test
std
cmp
insb
cmp
pop
dec
mov
xchg
mov
sub
shl
jne
jecxz
daa
test
or
cmc
mov
dec
lods
outsl
sbb
loope
mov
and
or
daa
mov
fcmovb
shrb
into
hlt
pop
pusha
movsb
or
jbe
subl
or
out
mov
andb
repz
inc
lret
or
sbb
orl
int3
and
lcall
imul
cmpl
or
clc
mov
cs
push
jo
cwtl
in
fcoms
mov
push
inc
pop
push
pop
dec
popf
and
or
inc
test
push
jmp
xchg
pop
mov
sbb
dec
sbb
ljmp
je
fists
sub
pop
andb
inc
inc
jnp
xchg
hlt
or
pop
cs
xor
jle
cmpl
dec
ljmp
pop
pop
sub
push
filds
xor
sbb
je
push
in
jnp
and
push
rcll
push
lea
add
and
add
out
jmp
jne
sahf
mov
scas
add
roll
or
push
xchg
xchg
in
push
mov
xor
add
push
cmp
insl
sub
xor
sbb
sbb
sub
add
mov
jle
jae
push
add
rol
imul
test
or
push
xchg
sahf
and
es
mov
push
cs
ret
push
adc
pop
ret
mov
and
call
orl
cmp
adc
and
cmp
lock
push
adc
and
mov
xchg
sbb
rcl
push
mov
mov
cmp
jge
insb
dec
icebp
or
push
sar
add
sub
add
inc
clc
push
mov
mov
pusha
fdivl
rorb
cmpl
push
stos
lret
pop
cli
mov
mov
cmpsb
sti
je
mov
dec
dec
pop
dec
jmp
mov
cmp
sarb
mov
adcb
ss
ret
rcrb
push
pusha
mov
pop
sbb
mov
or
or
imul
mov
dec
push
pop
xchg
fcompl
push
pop
mov
rclb
add
scas
xchg
out
aad
mov
cmpl
cmp
dec
scas
or
jmp
inc
push
pop
add
mov
loop
cmp
cwtl
mov
jp
push
icebp
outsl
or
fs
xchg
lods
mov
insl
repnz
push
mov
push
xchg
cld
lods
xchg
test
add
inc
add
lock
imul
test
jmp
push
or
cmp
add
sbb
adc
or
outsb
mov
adc
hlt
rorb
push
jmp
inc
pusha
shlb
add
in
inc
dec
push
and
push
mov
inc
test
test
mov
call
inc
lock
pop
xor
xchg
push
push
lds
ss
or
and
or
outsb
inc
fcoms
lock
mov
cmpsb
push
test
xchg
mov
and
cwtl
mov
xor
arpl
pusha
cmpsl
cmp
or
insb
ret
or
or
std
negb
inc
jmp
push
dec
jne
dec
jns
hlt
sub
stos
sbb
test
sbb
std
inc
add
add
fsts
or
data16
pop
jmp
push
push
je
adc
mov
mov
orb
sub
mov
repz
dec
xor
and
bound
xor
sub
cmp
jnp
or
rolb
aaa
dec
inc
push
mov
xor
idivl
sbb
cli
stc
dec
adc
dec
xchg
adc
mov
aas
hlt
adc
sbb
fnop
mov
lock
sbb
push
adc
pop
cmp
inc
mov
and
xor
push
sbb
mov
push
mov
arpl
adcb
inc
push
enter
popa
pusha
shlb
jp
lea
mov
xor
and
sub
sub
adc
lret
ljmp
xchg
mov
jp
mov
lods
fidivrl
sub
dec
out
lea
mov
cmp
testb
xor
mov
or
xchg
into
xchg
add
jnp
pop
sbb
test
pushf
lret
mov
or
jg
and
mov
adc
imul
push
stc
mov
cmpl
ds
push
dec
add
xor
sbb
and
fsub
addl
sbb
xor
sub
ror
add
dec
sub
pop
or
loope
stos
jp
mov
cmp
sbb
xchg
or
test
fwait
xorb
adc
push
cmpsb
or
push
mov
push
into
dec
add
add
add
movsl
add
mov
push
shr
and
sar
dec
stc
pop
lea
repnz
pop
js
leave
push
and
cs
mov
inc
mov
or
xor
imul
xchg
or
and
loopne
inc
jge
mov
push
or
and
icebp
push
call
inc
subl
lods
fsubrp
push
jne
popa
fisttpll
pusha
and
add
sbb
into
mov
add
xor
enter
cltd
push
js
daa
jo
in
loope
lea
xor
das
push
xor
andb
fcmovbe
in
in
scas
push
jns
dec
daa
pop
negl
es
mov
and
inc
push
or
mov
or
mov
push
or
sub
imul
inc
push
cld
sbb
call
jno
and
sbb
arpl
aad
sub
mov
push
xchg
pop
test
dec
inc
add
cmp
inc
pop
and
cld
add
mov
mov
flds
or
stos
dec
xchg
shll
imul
je
jg
sub
or
push
and
xchg
je
dec
cmpb
mov
jmp
fwait
add
mov
push
test
pop
popa
mov
sti
insl
add
adc
mov
inc
jnp
push
inc
or
xor
notl
je
push
cli
xor
adc
push
call
sub
mov
dec
xchg
js
jmp
pop
lea
mov
or
cmp
enter
and
sub
ljmp
incl
sub
lods
ret
push
add
lea
cmp
test
inc
sub
ud0
mov
ret
jl
mov
xchg
xchg
test
stos
push
jmp
push
add
ljmp
push
loop
jmp
cmpb
mov
pop
cmc
out
xor
leave
enter
daa
into
aas
add
js
pop
lods
lock
sbb
pusha
push
cmovo
adc
sub
dec
sbb
xor
mov
jp
insl
push
push
and
sub
js
xor
jb
and
inc
sub
add
cmpsl
mov
lods
xchg
and
sbb
adc
leave
xor
pop
shlb
sbb
ret
or
test
scas
or
lods
aas
adc
xchg
nop
and
pusha
xor
push
clc
es
fisubrs
cmp
andb
sub
pop
sbb
insl
pop
movsl
add
cmp
mov
hlt
shl
mov
xchg
lock
ficoms
shl
sahf
mov
pop
mov
in
or
iret
and
mov
bound
and
or
cmpsb
dec
hlt
add
jmp
add
dec
insb
mov
jl,pt
cmp
scas
mov
jg
iret
or
push
fldl
icebp
inc
jae
push
pop
add
mov
addl
or
cmp
daa
loopne
pop
movnti
sbb
cli
loopne
mov
mov
dec
jge
sbb
pop
pop
das
sub
cli
inc
outsb
mov
lret
adc
push
mov
call
dec
out
and
or
cmp
test
movsb
jle
cmp
aam
cmp
pop
dec
mov
mov
test
add
repnz
mull
xchg
jnp
and
jge
adc
rolb
push
orb
push
sub
xchg
or
ret
or
sbb
add
daa
jnp
cmp
dec
add
sbb
insl
pop
aad
and
add
std
xchg
in
enter
or
xor
ljmp
or
movsl
sub
xorl
ds
and
clc
daa
lret
xorb
mov
lods
or
sbb
pusha
inc
pop
sbb
in
sbb
je
adc
or
pop
sub
push
adc
ja
jmp
inc
pop
and
bound
scas
bound
shr
lahf
lods
jmp
mov
xchg
ss
out
mov
aaa
cmp
jne
mov
movzbl
fcomps
cltd
push
sub
and
sub
or
sbb
fadd
dec
sahf
loopne
sbb
jb
mov
shlb
sar
test
xchg
ljmp
jne
mov
add
add
adc
or
sbb
mov
xchg
sbb
int3
test
std
fstp
dec
jne
mov
push
icebp
fmull
dec
sarl
add
cmp
sub
push
pop
bound
add
push
js
cmc
fdivp
aas
js
adc
xchg
insl
and
test
leave
xor
mov
or
and
sbb
sbb
dec
lcall
xchg
add
cmp
fsubs
stos
push
inc
mov
adc
dec
cmp
cli
sub
insl
int3
sbb
pop
or
push
iret
sbb
shl
mov
movsl
xchg
sbb
inc
inc
daa
xor
adc
es
mov
mov
push
dec
imul
int
push
sarl
sbb
cmp
lock
add
stos
sbbb
fisttpll
or
lods
clc
pop
or
mov
mov
add
outsb
xchg
aas
or
xchg
xchg
pop
pop
sbb
add
mov
mov
aam
xchg
js
movsb
mov
cltd
stos
dec
sahf
mov
mov
popf
xor
sub
cli
push
push
mov
cmpsb
xor
pop
push
adc
scas
xchg
and
jo
cmp
mov
jecxz
ds
and
outsb
xor
xor
sub
inc
dec
ds
shr
xor
icebp
or
mov
into
mov
les
fsubp
mov
mov
mov
and
mov
mov
imul
loop
ljmp
pop
xor
shrb
jb
lds
aaa
push
mull
test
addl
or
xchg
lods
xchg
push
mov
xor
xor
cmp
mov
or
daa
sbb
das
inc
pop
add
movsl
xchg
daa
jbe
mov
cs
mov
mov
cmp
je
sbb
mov
sbb
dec
push
add
in
and
ljmp
xchg
xchg
daa
mov
out
mov
rcll
push
cmp
cwtl
rolb
fwait
pop
add
jle
ffree
sub
fidivl
inc
call
dec
add
adc
das
and
add
dec
or
dec
out
dec
push
data16
aaa
movsl
add
and
flds
ret
lods
arpl
leave
and
add
aad
jl
jg
xor
in
push
adc
mov
loopne
dec
cwtl
arpl
xor
push
and
repnz
int
setae
unpcklps
movsl
jae
ja
ljmp
out
or
stc
jbe
add
add
mov
bound
pop
popf
fmull
aaa
push
sbb
cs
fiaddl
mov
test
xchg
dec
lret
dec
jae
add
jbe
mov
pop
add
push
pop
js
jne
sub
xor
xchg
xor
adc
ret
jne
adc
nop
enter
std
lds
out
je
cltd
push
xor
add
xor
adc
mov
mov
add
mov
outsb
push
inc
cs
jo
adc
shr
xchg
jbe
add
push
sub
int
fidivl
ss
addb
push
jne
mov
or
push
and
adcb
stos
movshdup
jp
dec
aaa
mov
fwait
push
sbb
clc
xor
cld
fdivl
aam
or
insb
xchg
push
push
inc
inc
mov
jno
push
sbb
and
cmp
aaa
dec
push
mov
adc
push
and
xchg
test
in
add
mov
fisubrl
imul
sbb
imul
xor
fidivrl
mov
adc
push
sti
decb
jbe
les
mov
fwait
dec
negl
or
xchg
add
sahf
push
std
add
or
or
sub
sbb
pop
bound
adc
inc
add
adc
in
xor
push
push
inc
inc
xchg
stos
repnz
add
xchg
clc
es
xor
mov
pusha
add
adc
inc
sbb
in
iret
and
pusha
jo
add
lea
sub
inc
pop
rcl
or
add
fldl
das
jb
mov
adc
sbb
lea
push
push
mov
mov
push
shll
pop
cmpsb
or
mov
lea
lea
sub
test
daa
mov
or
pop
sub
dec
push
pop
adc
dec
fldl
dec
es
and
and
sahf
mov
adc
or
adc
cmp
das
inc
and
mov
pop
insb
mov
and
sbb
aad
xchg
xor
out
push
fldl
and
in
test
push
push
test
adc
sbb
push
sbb
push
mov
sbbl
xor
popf
mov
add
pop
loopne
xchg
sahf
in
adc
mov
test
and
inc
xor
mov
std
mov
and
push
dec
pop
mov
adc
loop
fcmovnbe
sub
bound
outsl
inc
xchg
sub
adc
add
data16
push
push
aam
add
lock
fcoms
jo
push
rorl
and
fistps
xchg
pop
sbbb
sbb
daa
mov
test
and
mov
or
inc
adc
dec
repnz
and
dec
jb
inc
add
inc
jl
add
add
data16
rclb
sbb
inc
add
sbb
pop
sub
mov
or
add
rclb
mov
sbb
sbb
lret
jl
xor
jmp
push
add
jmp
mov
cmp
adc
je
push
ret
mov
icebp
push
outsb
jo
mov
mov
jno
lret
adc
sahf
cld
cli
xor
push
cmp
stos
push
idivl
rol
jb
cmp
callw
xor
jb
xor
add
xor
sub
int
jnp
sub
push
adc
mov
push
sbb
mov
lods
pusha
out
sub
mov
and
sbb
pop
mov
clc
jne
std
xchg
hlt
push
push
dec
xchg
push
stc
out
addr16
sbb
and
adc
jb
sub
movsl
mov
cmp
push
mov
orb
pop
inc
cwtl
add
jg
ret
loopne
push
ja
popa
dec
fidivrl
cmp
rclb
lods
inc
std
mov
xor
shr
add
pop
jb
fcmovbe
push
inc
mov
push
out
push
jae
mov
pop
or
movsl
movsb
adc
push
mov
jb
aad
sti
mov
xchg
mov
mov
sbbb
dec
xor
adc
out
add
imul
mov
push
add
sbb
enter
imul
sahf
ljmp
shrl
or
sarb
adc
movb
fidivl
sahf
or
mov
mov
mov
or
pop
jp
cmpl
ret
cmp
mov
add
lret
adc
mov
fstl
push
pop
sbb
jg
push
shlb
sub
imul
cmp
push
mov
or
movsl
out
sub
mov
and
popa
mov
enter
mov
mov
sub
pop
fcomps
jno
inc
cltd
fwait
push
push
sbb
ss
andl
mov
stos
add
fbld
jne
xor
pop
sbb
stos
add
leave
je
mov
cmpsl
shll
inc
divb
cltd
add
pop
fcoml
or
or
sub
mov
jle
fwait
pusha
push
call
test
sub
pop
pop
xchg
add
stos
ja
push
pop
hlt
adc
sbb
cld
push
inc
adcb
sbb
mov
push
sub
pop
ret
aas
adc
xor
adc
sub
adc
pushf
xlat
pop
or
loope
loop
loope
xor
pushf
addl
pop
push
ja
mov
sub
xor
inc
clc
inc
add
ror
or
dec
test
sub
or
data16
pop
sti
sbb
pop
jne
and
push
in
sub
or
pop
out
or
push
dec
dec
sbb
sbbl
push
inc
call
daa
mov
sbb
jge
test
mov
inc
and
pop
sbb
les
and
into
jb
leave
adc
or
cs
fadds
ds
adc
xchg
flds
mov
sarb
pop
or
dec
pop
inc
bound
push
inc
add
les
push
je
shlb
pop
jg
xor
adc
adc
cmp
adc
pop
mov
aaa
push
mov
add
sbb
sub
mov
jb
cmp
add
sub
out
jle
push
or
and
add
jmp
add
mov
push
sbb
push
xchg
xor
in
mov
int
nop
rcl
add
je
and
mov
mov
sub
sub
out
dec
sub
out
adc
sub
sub
pop
fdivs
adc
rolb
movsb
push
test
stc
addl
adc
sbb
dec
add
sarb
add
repnz
push
push
sbbb
scas
insl
sub
sbb
pop
scas
xchg
cmpsb
fmul
add
or
adc
lds
scas
inc
fists
js
fsubrl
xorb
and
cmpb
push
and
mov
add
in
jp
add
pop
les
jnp
movsl
mov
test
and
incl
mov
sub
test
es
mov
sbbb
push
cmp
rcl
fidivl
addb
sti
mov
jo
sub
pop
jge
push
mov
xchg
sub
les
inc
adcl
fwait
sub
sub
jne
pusha
arpl
push
dec
push
lea
mov
pop
mov
pop
dec
push
mov
mov
sbb
adc
mov
add
loop
aas
pop
inc
add
insb
mov
xchg
ret
cmpsb
xor
mov
cmp
jne
push
fldenv
insb
inc
jnp
movsb
pop
lea
adc
push
sbb
test
jl
aaa
adc
adc
add
push
dec
imul
xchg
shlb
jne
hlt
push
jnp
jp
inc
cmp
xchg
divb
fs
add
jmp
es
inc
xor
aaa
add
ret
les
push
jb
ja
test
or
mov
or
adc
lea
add
mov
outsl
rolb
add
push
sbb
jg
or
add
cwtl
cmpsb
imul
mov
cmpsl
mov
xchg
adc
out
lcall
mov
cwtl
mov
je
xor
xor
cmpsl
test
xor
scas
sbb
popf
cmpsb
sbb
adc
pop
adc
lea
fistps
sahf
fbstp
xchg
sbb
sbb
and
andl
push
jnp
sarl
push
loope
outsb
fcompl
push
push
mov
call
inc
lret
and
scas
adcb
in
mov
cs
adc
movsl
dec
movsb
mov
adc
jnp
push
cmp
xchg
orb
dec
or
cmp
mov
outsb
mov
sbb
push
dec
add
push
and
adc
popf
popa
sub
mov
ret
sub
sub
sub
mov
out
mov
nop
or
sbb
or
or
sub
movsb
test
add
inc
push
inc
and
xchg
je
sbb
and
sub
xchg
aad
add
add
enter
add
leave
test
add
add
jg
sub
mov
push
jno
mov
cmpb
mov
aam
inc
clc
jg
pusha
add
out
sub
cwtl
rclb
xchg
xchg
out
and
adc
cmp
sbb
push
hlt
inc
add
push
aam
loope
or
mov
dec
orb
xorb
ret
xchg
pop
in
nop
jbe
mov
cmpsb
pop
adc
and
push
imul
push
pop
dec
or
push
or
and
clc
sub
aas
fisttps
push
inc
outsb
ret
xchg
cmpsb
shrb
movsl
jbe
push
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
lcall
cmp
je
xchg
pop
cmp
je
cmp
je
cmp
mov
stos
movsl
push
cmp
je
mov
cmp
je
inc
cmp
je
cmp
insb
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
ljmp
jg
ja
mov
sbb
mov
cmp
je
cmp
je
cmp
mov
mov
mov
frstor
mov
test
push
xor
imul
dec
push
add
jge
mov
sbb
adc
test
pop
imul
or
std
add
cwtl
movsb
and
or
jl
dec
outsl
fimuls
enter
push
test
jb
dec
filds
adc
sub
pop
cmp
mov
or
fadds
push
add
mov
push
add
test
test
sbb
or
cmp
push
imull
jno
and
lret
and
inc
aas
jge
adc
int
add
jmp
jge
insl
inc
data16
roll
insl
xor
pop
daa
inc
sub
fists
shrb
xor
add
add
inc
mull
in
orl
adc
jo
les
xchg
inc
pop
xor
and
testb
dec
shrl
sbb
nop
daa
adc
xor
sti
add
push
add
loopne
push
adc
adc
into
mov
mov
cmp
es
hlt
cmp
bound
xlat
cmc
je
push
in
adcl
shlb
shr
add
xchg
push
test
in
push
movsb
ret
jne
daa
dec
dec
sbb
mov
test
mov
les
xor
ljmp
pop
pusha
mov
int3
cmp
jbe
or
or
push
pusha
fsubp
adc
cmp
jb
test
dec
jnp
and
push
popa
int3
add
inc
pop
and
mov
xchg
sbb
mov
mov
sbb
lret
les
or
add
push
xlat
pop
pop
out
mov
push
shlb
movsl
mov
inc
push
add
mov
mov
push
cmp
mov
adc
lcall
xor
or
pop
mov
mov
cmp
pop
inc
loop
jl
inc
mov
pop
jbe
mov
jp
sbb
jge
mov
fidivrs
lods
lea
cmp
insl
out
mov
lock
jg,pt
pop
cmp
icebp
sarb
and
or
or
ror
cmp
add
sub
or
and
dec
mov
rclb
enter
dec
sbb
mov
cmp
test
stos
call
add
jo
mov
push
jle
and
xor
mov
mov
xchg
inc
pcmpeqb
cmp
mov
mov
adc
mov
jo
test
dec
mov
pusha
cpuid
pop
inc
jae
data16
ss
scas
call
int
mov
add
xchg
pop
sub
lea
aaa
sbbb
dec
push
in
jmp
jle
ljmp
xor
out
call
cmp
adc
mov
insl
or
js
dec
leave
pop
add
add
sahf
pop
and
mov
mov
int3
push
add
movsl
clc
aaa
sbb
or
orb
je
adc
adc
lock
stos
mov
mov
inc
rcr
mov
adc
rcrb
movsb
adc
sti
mov
sbb
and
and
sub
mov
sub
xor
pop
cmp
xchg
adc
mov
icebp
or
ret
jns
outsl
inc
xchg
dec
and
inc
add
aaa
enter
cwtl
aas
xchg
inc
add
sub
dec
scas
cmp
rorb
sub
sbbl
dec
push
in
data16
insl
or
pop
add
mov
adc
mov
push
mov
jle
daa
cmp
jo
jle
mov
repnz
shrb
sub
jno
ja
xchg
sbb
insb
imull
jns
das
add
movsb
mov
js
add
inc
jl
sub
and
and
mov
das
jnp
out
insb
mov
shl
adc
inc
adc
jl
pop
les
leave
sbb
aaa
pop
scas
cmp
add
fistps
or
adc
xchg
sbb
adc
je
push
in
adc
inc
jl
sbb
xor
cmp
lock
mov
inc
pop
add
jbe
add
xchg
adc
adc
pop
in
mov
or
adc
rorl
xor
adcl
adc
add
out
cld
mov
push
and
outsl
ss
gs
sahf
mov
ficoms
jp
push
ljmp
or
inc
movsb
lods
push
jne
push
xchg
inc
push
shll
push
push
jl
je
or
or
arpl
orb
scas
and
mov
inc
and
add
and
fistl
push
or
dec
or
add
push
fwait
mov
jne
dec
ret
inc
adc
rcll
pop
cs
shlb
sar
mov
mov
movsb
push
js
add
mov
cmp
lret
or
and
add
mov
sarb
mov
mov
in
mov
fiadds
test
push
inc
jne
push
popl
out
xchg
iret
or
testb
push
and
inc
pusha
xchg
adc
call
call
fistl
pop
rcll
and
sbb
ds
insb
ret
loopne
std
adcb
xor
mov
or
inc
pushf
add
xor
add
inc
and
pop
nop
iret
sbb
nop
push
xor
add
roll
xchg
test
mov
in
jmp
pop
stos
dec
push
les
mov
inc
imul
inc
shlb
push
jp
dec
push
sub
std
sub
pop
dec
sub
pop
in
dec
int
or
lcall
test
inc
jne
and
push
and
leave
mov
repnz
imul
or
shrb
out
push
and
push
subl
ja
setnp
sbb
cmpsb
mov
mov
por
and
inc
out
pop
pop
sbb
mov
add
pop
jbe
aam
dec
mov
or
ret
xor
and
imul
push
sub
inc
xor
pop
mov
sub
adc
sbb
cmc
push
add
insb
int3
mov
adc
pop
jp
mov
or
xor
xor
push
in
mov
dec
shrb
push
mov
shrb
arpl
or
test
adc
stos
adc
or
adc
nop
xchg
lock
cmp
push
mov
push
loop
inc
and
jmp
lcall
and
cmp
dec
or
dec
and
outsl
lea
mov
je
out
clc
mov
xchg
xchg
jb
test
inc
inc
cmpb
out
push
push
and
inc
or
push
add
cmp
dec
loop
ja
test
or
int
mov
testb
xor
push
or
ljmp
insb
divl
push
jge
rcl
push
jne
adc
rorl
push
pop
xor
test
push
es
add
inc
mov
int3
xor
dec
pop
inc
sbb
jmp
dec
popf
lods
mov
and
adc
xchg
adc
andb
inc
jne
pop
jmp
inc
dec
jne
sbb
add
popa
xchg
lea
sbbb
bound
sub
iret
push
xchg
inc
and
and
cmp
lds
and
xor
inc
pop
ret
mov
jne
incl
xor
mov
xor
int3
shll
ret
cmp
inc
dec
adc
xor
xchg
test
shll
pop
add
insl
aaa
add
ds
movsl
and
inc
out
cld
imulb
les
dec
inc
fisubrs
lods
daa
add
and
push
les
inc
aam
stos
test
movsl
sub
rorl
and
ss
jo
cmp
cwtl
xlat
push
in
pop
or
stc
aas
mov
xor
test
adc
jno
mov
push
push
ds
fsts
dec
adc
dec
insb
imul
add
push
push
add
sbb
adc
xchg
sarl
fcmovbe
pop
or
xchg
push
shlb
fsubrl
xor
pop
push
xor
mov
ret
inc
outsb
mov
add
outsb
mov
or
add
lret
and
pushf
sbb
add
dec
jo
jbe
and
inc
nop
add
cmp
add
sahf
pushf
ds
add
mov
fcom
jne
insl
mov
add
dec
shr
gs
sbb
rcrb
jmp
cmp
push
jne
mov
cmp
out
xor
jmp
dec
insb
call
sub
add
jno
call
fcmovbe
mov
push
jge
sahf
adc
xor
cmc
mov
cmpsb
mov
pop
mov
sbb
cmp
push
xchg
jmp
mov
dec
jb
jl
push
push
daa
mov
fdivl
adc
sbb
sub
aaa
push
int3
mov
sub
add
or
adc
push
enter
ret
cmp
pop
hlt
xchg
dec
push
shlb
xchg
pop
daa
test
xchg
out
dec
ljmp
aam
and
mov
jl
sub
xor
popa
data16
xchg
inc
xor
push
clc
jo
call
pop
in
cmp
out
sarb
mov
jg
xchg
out
lea
push
out
hlt
aam
fs
mov
cmp
ret
aas
bound
ss
jbe
sbb
or
fs
lret
dec
jnp
iret
pop
mov
add
ljmp
nop
into
scas
aam
jb
loope
xor
je
js
cld
lock
adc
lea
data16
out
add
add
lds
jg
sbb
and
dec
sub
out
push
or
sub
xchg
ret
cmp
push
or
push
inc
or
add
sub
xchg
xor
adc
sub
fs
sarl
mov
mov
sbb
in
push
adc
push
imul
mov
fldt
in
adc
push
push
pusha
mov
iret
vcvtsi2ssl
and
hlt
lds
mov
jne
cmp
cmc
jb
lods
and
mov
outsb
test
test
in
or
clc
xorb
jecxz
xchg
sub
aas
pop
rorl
push
inc
dec
jne
pop
les
test
dec
fiadds
enter
sub
mov
and
insl
push
push
dec
sbb
sub
inc
jmp
push
sbbl
jnp
lock
mov
js
repnz
into
in
xor
inc
xor
cmp
push
rcrb
pop
add
lods
or
cld
push
lock
add
mov
add
add
and
xor
nop
push
sub
push
lret
ret
pop
fadds
add
adc
cli
iret
cmp
js
pop
inc
aad
rcrl
push
mov
add
pop
push
xorl
dec
mov
and
push
xchg
or
popa
pop
sbb
dec
adc
jo
add
daa
data16
sahf
mov
test
inc
lcall
pop
mov
mov
addr16
xchg
adc
lret
sti
inc
sbb
sbb
test
dec
enter
add
jl
lcall
sub
sub
xchg
xchg
jge
je
jo
mov
push
insb
in
mov
push
sub
rcll
in
int3
and
dec
and
sub
rolb
enter
or
ror
xor
mov
movsl
pop
je
out
pop
adc
enter
dec
nop
pop
pop
or
or
or
fcoml
or
cmc
xchg
mov
out
push
mov
shrb
cmp
add
scas
mov
loopne
jge
jnp
sub
out
add
outsl
pop
psrad
mov
std
adc
add
test
sub
dec
imul
lods
jg
jle
js
aad
popf
dec
mov
sahf
imulb
adc
jbe
inc
xor
adc
or
popf
inc
hlt
enter
inc
lahf
lods
and
push
sbb
push
cmpl
sbb
or
daa
cmc
int3
mov
add
sub
fs
dec
push
or
fs
clc
pop
adc
es
cld
xor
rorl
xlat
shrb
loop
xchg
xor
test
les
mov
add
cmp
enter
mov
mov
xchg
and
test
sub
int
movsb
jb
mov
xor
or
das
sbb
mov
sbb
sahf
gs
pop
jl
test
hlt
or
outsb
xchg
or
pop
nop
adc
lds
xchg
mov
or
imul
ss
jo
aam
je
cmp
or
je
add
sub
pop
push
pushf
fwait
sbb
test
fimull
mov
cmp
add
shrb
and
xor
ja
je
lods
sub
add
mov
mov
mov
and
das
insl
gs
inc
jp
negb
sub
mov
mov
imul
or
jb
sub
push
jmp
mov
setns
sbb
add
int3
sub
mov
sbb
add
loopne
sbb
repz
pop
nop
push
ror
lea
push
cld
and
pop
nop
mov
dec
les
push
add
mov
jns
sbb
mov
push
mov
loope
cmc
inc
insl
movsl
call
mov
push
push
add
cmpb
insl
and
in
cmp
cwtl
adc
or
cmp
aaa
shrl
das
fidivs
cmpsl
add
xchg
dec
pop
and
adc
cmpb
aas
ds
dec
mov
push
or
jo
jbe
inc
das
inc
dec
or
std
sbb
dec
and
sbb
lret
scas
cmp
mov
or
jecxz
sub
xchg
divb
mov
sbb
insb
shl
xchg
xor
loopne
je
rolb
rorb
jmp
enter
movsl
push
push
adc
je
fistpll
add
sub
add
mov
add
lea
mov
jle
sbb
les
mov
xchg
sbb
push
in
rcrb
pop
scas
adc
sub
ja
sub
dec
inc
dec
sub
xor
faddl
xchg
jns
xchg
xchg
dec
sub
dec
sbb
ljmp
call
mov
mov
shlb
in
cmp
add
ret
jae
pop
out
pop
or
cltd
in
pop
dec
stc
ja
mov
jmp
stos
jne
add
mov
movl
jae
dec
pop
inc
cmp
push
add
test
popa
or
pusha
xor
sub
arpl
pop
loope
push
push
push
jo
mov
mov
inc
rcrl
sti
adc
sbb
cmp
jne
pushf
adc
jno
cmp
fdivrs
popa
inc
or
xchg
xchg
test
movsl
mov
inc
js
scas
or
or
lock
cmp
cmp
or
inc
gs
jge
cmp
fstpt
xor
xor
jb
cld
pop
dec
test
aaa
push
jns
or
jb
dec
lock
dec
mov
dec
adc
push
lods
js
xchg
and
fidivl
dec
mov
add
cmp
jbe
xchg
pusha
or
or
push
sub
test
das
inc
dec
nop
inc
sbb
iret
sub
adc
inc
movsb
push
jl
ss
sbb
sub
sub
pop
sahf
adc
or
sub
sub
fldl
mov
add
pop
push
sub
push
jns
jmp
or
imul
inc
mov
jae
xor
and
or
popa
xor
cmp
loop
cwtl
jl
fdivs
ljmp
jae
dec
test
xchg
cmpb
jne
shll
and
loop
or
or
shrb
add
lods
mov
sahf
insl
loope
mov
mov
sub
cmp
fwait
push
push
mov
mov
jbe
mov
mov
mov
jae
sub
cmpsb
adc
or
iret
je
cmp
in
ja
sahf
adc
clc
pusha
aaa
inc
lock
adc
dec
cmp
mov
xchg
jbe
dec
mov
push
iret
cmp
push
sbb
mov
subl
mov
mov
or
or
push
xchg
and
dec
fsubs
sbb
xor
mov
xor
mov
xchg
xor
mov
lea
jge
sub
das
and
jnp
sbb
test
xchg
pop
pop
inc
cmpsb
pop
sti
icebp
daa
test
js
pop
xchg
ljmp
std
scas
jp
popf
xchg
outsl
jmp
push
in
rcrb
in
cmp
in
pop
fisubrl
in
popa
fidivs
fbstp
and
inc
add
cs
stos
sub
and
aas
mov
sub
and
or
push
jge
mov
adc
rorb
mov
add
dec
push
inc
cmp
ret
sub
stc
subb
inc
mov
or
dec
dec
and
popf
fisttps
icebp
push
cmp
dec
movb
or
jno
insb
add
mov
xor
data16
stc
insb
mov
add
enter
or
and
jae
cs
sbb
jbe
lea
cmp
push
aas
dec
mov
movb
jne
jle
inc
or
add
rcll
movsb
push
shlb
pop
addb
jns
mov
jge
cmp
movsb
fisubrs
adc
scas
adcb
or
incb
sub
xchg
cmpsl
in
or
outsl
push
inc
inc
lahf
aam
es
sub
scas
icebp
or
inc
or
aas
jmp
push
push
and
push
psubusw
mov
pop
push
xchg
ja
mov
cmp
invd
cmp
clc
je
scas
fildl
scas
add
jge
adc
jae
xchg
loopne
testb
or
push
leave
dec
pop
dec
push
push
adc
addr16
mov
add
dec
roll
mov
call
and
mov
sarl
mov
adc
fucomp
test
xchg
sbb
pusha
subb
push
pushl
xchg
push
push
mov
jmp
add
push
dec
add
xor
push
push
push
add
push
push
cmp
das
fstl
notb
sbb
out
je
adcb
and
pop
xchg
dec
mov
inc
clc
mov
scas
stc
sub
enter
fs
xchg
and
inc
sbb
sbb
mov
jge
push
jo
outsb
shrl
lcall
xor
adc
cmpsl
mov
ljmp
jle
je
cld
mov
lods
insl
or
stos
and
push
lcall
daa
jbe
add
mov
pusha
sbb
hlt
fisubrl
mov
cvtps2pd
adcb
xchg
dec
ret
in
and
ficoml
pop
sysret
scas
imul
or
push
test
add
xchg
cmp
or
push
lods
jbe
and
and
push
ret
lret
mov
push
inc
shrb
jecxz
mov
inc
add
arpl
xlat
adc
adc
xchg
dec
dec
out
or
fildl
mov
fildl
push
adc
ret
add
adc
inc
in
dec
push
cmp
xchg
int3
loopne
repz
call
ljmp
add
popw
add
fcoms
add
sub
aaa
and
inc
rcll
outsb
sete
adc
or
or
mov
or
jb
xchg
ret
jl
push
addb
pop
push
aad
add
rol
or
iret
stos
push
push
fs
push
test
ss
dec
repz
push
add
add
add
add
add
pop
sub
popa
sub
test
shlb
xorl
in
ljmp
jl
dec
or
in
add
lea
enter
pop
mov
xor
cmp
and
fisttpll
pop
jbe
or
lds
int3
iretw
sub
je
push
push
cmp
xchg
jo
mov
inc
js
and
mov
push
xchg
shrb
mov
or
test
xchg
inc
mov
arpl
add
fwait
and
jno
xchg
insb
mov
sub
pop
push
push
je
insb
ja
fs
lea
jmp
in
mov
in
mov
or
aam
mov
push
leave
or
dec
test
test
jp
sub
jmp
call
subb
xchg
mov
pop
aam
shrb
add
add
dec
adc
add
xchg
xchg
clc
sbb
push
jns
mov
fadd
ds
mov
inc
ret
sub
lret
test
xchg
mov
add
sbb
sub
mov
dec
push
int3
incb
xchg
test
push
sbb
mov
pushl
or
icebp
push
cmp
je
cmp
jne
xor
add
mov
xor
push
jns
cld
js
or
lods
cs
and
ret
mov
cmp
jne
clc
mov
cmp
xchg
mov
push
js
ljmp
sbb
addl
aas
push
lea
push
push
jbe
mov
sbb
push
stos
sub
mov
xor
mov
les
cmp
xchg
clc
test
or
dec
push
or
xchg
fidivs
cmpl
xorb
shll
add
xchg
fidivrs
mov
leave
pop
jb
sbb
jnp
in
or
js
into
int3
lock
call
daa
or
mov
pcmpeqb
loope
je
push
stos
jl
sbbb
mulps
ret
cmp
ja
or
xchg
pusha
and
cmp
pop
or
or
xor
pop
mov
mov
pop
push
ss
sub
idivl
sbb
pop
add
mov
movsl
push
adc
std
mov
xchg
adc
jl
or
ja
mov
seta
sbb
and
sub
jmp
mov
jl
push
mov
mov
lods
sbb
movsl
shlb
mov
jle
cmpl
sbb
or
push
nop
cmp
dec
push
pop
jbe
aam
push
pop
sbb
lock
inc
adc
inc
dec
lea
pop
or
cmp
or
ss
mov
pop
fisttpl
ss
or
mov
clc
sarb
sub
mov
and
or
cld
in
filds
pop
sbb
jmp
test
pop
inc
jg
cmp
adc
stc
sbb
sbb
mov
mov
cmp
mov
xchg
xor
add
push
sbb
xchg
andb
or
enter
daa
ds
lea
bound
mov
outsb
push
and
out
mov
arpl
inc
les
mov
push
mov
ret
jns
add
push
inc
add
sysret
add
dec
shlb
pop
inc
mov
adcb
lods
mov
or
push
cmp
mov
jae
popa
jne
or
test
pop
adc
call
arpl
push
or
clc
cmp
imul
or
mov
js
mov
add
or
push
mov
dec
jbe
ljmp
xor
xchg
add
aaa
push
adc
test
lds
adc
insl
push
mov
sub
pop
jg
insl
dec
rorb
insl
dec
mov
adc
pop
insl
mov
fldl
pop
add
pop
push
loop
ret
leave
call
jae
icebp
out
pop
cmc
push
cmp
mov
sbb
pop
mov
les
cli
stc
inc
cmp
add
addb
pusha
xlat
or
xlat
pop
dec
sbb
fildll
popa
sbb
sub
stc
jbe
mov
adc
push
js
jg
sbb
push
push
enter
mov
push
dec
push
pop
sub
out
adc
leave
jbe
mov
sbb
lcall
cld
xchg
push
dec
sbb
or
dec
lcall
mov
xor
repz
xchg
jg
orb
ds
lods
in
jle
idiv
mov
std
push
add
add
add
add
push
inc
andl
dec
lods
pop
aad
cmpsl
sbb
sub
cmpsb
push
fimuls
add
test
inc
cs
adc
jne
icebp
nop
push
dec
les
pop
or
clc
or
cmp
arpl
aaa
pop
cmp
je
cmp
je
jne
mov
enter
popf
add
sbb
ret
pop
pop
or
or
das
imul
lfs
inc
cmp
and
cmp
or
cmp
adc
cmp
sub
pop
mov
and
dec
add
inc
dec
pop
cld
sbb
push
in
xor
push
pop
xor
loope
xor
push
dec
push
mov
cmp
mov
lock
xlat
pop
orl
push
push
and
push
and
enter
in
lahf
add
out
sbb
pop
pop
aad
testl
mov
lret
mov
push
cmc
jle
dec
in
inc
pop
lea
xchg
enter
and
inc
int3
dec
lock
out
in
push
mulb
push
out
lret
lret
pop
adcl
inc
xchg
push
pop
jg
add
jg
mov
enter
popf
push
push
je
inc
push
je
test
push
add
add
cmc
ds
pop
lock
cmpsl
negb
sarl
leave
pop
and
decl
jb
xlat
push
add
dec
js
cmpb
add
shl
sub
cmc
insb
jge
adc
sub
scas
fs
push
add
mov
xchg
std
lods
inc
mov
xchg
mov
fisttpll
pop
dec
xor
cmpsl
cltd
mov
mov
add
ljmp
lods
int3
aaa
sbb
sub
adc
lea
rep
movsb
mov
outsl
sbb
jb
movsb
dec
mov
pop
jae
add
add
jne
jne
xchg
dec
pop
or
test
dec
or
mov
cmp
push
mov
insl
sub
es
inc
ja
xor
in
or
fiaddl
ljmp
dec
roll
adc
ror
stos
mov
cmpl
pop
xchg
pop
lods
dec
or
mov
enter
pop
mov
cmc
out
sbb
mov
js
pop
bound
jle
and
xorl
add
mov
stos
or
in
into
sbb
mov
daa
imul
out
test
movb
sahf
ret
jmp
or
sbbb
out
sahf
push
push
push
push
lcall
push
mov
inc
xchg
imul
cmp
push
xchg
pusha
movsl
outsb
xor
xchg
or
sbb
imul
daa
push
cmp
jo
fidivrs
dec
inc
jbe
or
inc
adcl
fs
xchg
adc
mov
cmpsl
or
push
rclb
dec
jae
and
cmpsb
push
and
loope
dec
cmp
orl
loop
add
push
fsts
bound
xchg
push
inc
sub
dec
shll
mov
add
sub
dec
dec
xchg
mov
lret
sub
push
inc
adc
sar
aaa
insb
add
outsb
mov
std
insl
jmp
pop
xchg
cmp
dec
pop
dec
add
lcall
fiadds
repz
cmp
mov
dec
dec
jo
add
out
fdivrs
adc
or
std
push
dec
fs
add
mov
sub
mov
push
add
push
lea
loope
in
or
dec
fadds
adc
sbb
mov
xor
cli
les
subl
nop
ret
movl
push
dec
jge
mov
cmp
and
push
jg
inc
pop
ss
cmp
je
inc
cmp
imul
xchg
sub
mov
lods
nop
arpl
mov
inc
lea
scas
cmp
ror
inc
insl
push
and
and
mov
ret
test
orb
and
dec
push
push
inc
and
rclb
xchg
stc
push
shll
or
sbb
gs
dec
xor
sub
lock
push
lds
push
xchg
add
sarl
fs
add
pop
das
cmpsl
pusha
jl
jl
mov
jl
adc
xor
ret
mov
movsl
xor
xlat
dec
add
cltd
ja
loopne
outsb
add
push
outsl
xor
and
jp
jbe
andl
in
out
mov
or
add
insb
stc
jbe
rclb
push
cmp
xchg
mov
sbb
mov
fs
pusha
push
adc
movsb
mov
cmp
subb
dec
sbb
adc
push
push
xorb
xor
enter
ds
loopne
push
push
xchg
jmp
rol
xchg
inc
test
rcrl
negl
jns
adc
aad
add
xchg
js
or
push
jnp
jbe
jbe
sub
pop
add
lret
push
and
jle
stos
dec
sbb
ret
addl
xchg
mov
popf
ficoms
sbb
push
cld
push
dec
imul
jecxz
inc
sahf
cmp
and
adc
xchg
xor
and
shlb
sub
sub
nop
test
add
cmp
ret
xor
test
test
push
add
cld
cltd
sbb
shll
sahf
clc
pop
dec
fsubrs
fsubrs
and
push
jne
pop
dec
ret
lcall
sbb
xchg
pushl
inc
mov
ja
push
lock
sbb
jae
popa
test
or
xchg
sbb
dec
sbb
push
cltd
inc
sbb
ret
xor
ss
ret
sbb
mov
push
pusha
push
pop
lret
xor
pop
es
add
test
and
sti
add
loopne
jl
and
xorl
and
xchg
cmp
or
mov
add
pop
js
std
aam
in
rcrl
jecxz
fstpl
data16
int
rol
test
ret
hlt
push
arpl
stos
add
mov
ret
pop
jmp
sbb
cltd
add
icebp
jmp
mov
mov
cmp
fisttpll
sub
ss
mov
or
push
xor
add
or
or
or
cmpsl
inc
ljmp
pop
jae
lret
mov
jecxz
jle
sbb
sbb
xor
cmp
fwait
add
push
inc
dec
mov
pop
add
add
aaa
dec
sbb
xchg
popl
pop
addl
dec
dec
rcl
pop
cmp
push
and
or
dec
inc
inc
mov
icebp
push
les
adc
sbb
cmp
daa
inc
test
jb
sbb
xchg
push
mov
inc
mov
test
pusha
cmp
push
sbb
mov
mov
pop
adc
or
jmp
mov
mov
inc
xchg
lock
imul
jle
fsubs
cld
pop
adc
jno
jmp
sub
pop
mov
sbb
cmp
rolb
dec
adc
jbe
stos
xchg
push
or
add
mov
inc
stos
xchg
inc
add
lds
push
mov
push
push
push
jbe
movsb
dec
repz
jmp
inc
inc
ss
scas
add
add
or
fldenv
movsl
movsb
jecxz
sbb
mov
in
or
cld
mov
mov
adc
mov
or
push
sub
jbe
xor
sub
ja
pop
nop
inc
pop
aad
cld
incb
mov
xor
xchg
dec
inc
push
push
dec
lock
dec
xor
mov
int
or
pop
orl
and
pop
push
or
xchg
test
adc
mov
jl
and
out
test
dec
sub
sbb
jno
sbb
jge
push
dec
adc
test
and
push
xor
or
sbb
mov
add
push
cmpsl
iret
jl
out
jg
xor
fwait
push
add
add
mov
adc
or
imul
cmp
or
pop
jg
hlt
movb
into
cmp
dec
nop
and
or
rclb
xchg
mov
in
inc
in
in
lock
or
or
jb
push
testl
fnstcw
outsb
inc
lret
jle
ja
jle
xchg
inc
fistps
jp
xchg
inc
jae
pop
or
xchg
dec
lock
mov
cmp
mov
or
mov
push
add
push
sbb
add
test
div
adc
mov
notb
mov
adc
xor
sub
and
push
xor
jb
inc
mov
data16
pop
dec
jg
mov
enter
or
fisubs
cmovge
test
mov
loop
into
cmpsb
pop
jbe
jne
sub
push
mov
bound
ret
add
xlat
add
shrb
add
sub
inc
fcom
jle
incl
fldcw
fistpll
push
push
mov
push
or
addl
out
dec
pushf
add
dec
jmp
jmp
in
add
sbb
ss
xchg
divb
sub
inc
invd
and
xchg
inc
mov
mov
or
fildl
nop
mov
add
and
add
lods
xchg
pop
add
lods
push
dec
cmp
sub
jp
push
dec
sbb
and
mov
or
adc
push
jnp
in
sbb
mov
dec
push
xor
xor
sbb
std
mov
lock
push
inc
jmp
mov
ret
sbb
inc
and
cld
add
lods
and
test
inc
cmpsl
repnz
lea
or
xchg
cmc
jbe
hlt
ret
and
adc
jns
rclb
rclb
mov
fcmove
push
leave
adc
int
mov
jns
fs
rclb
push
sahf
push
mov
outsb
add
fisttpl
movsb
out
add
daa
or
jge
in
push
mov
rclb
jp
fs
out
test
imul
mov
sub
ret
rolb
add
addr16
mov
lcall
or
dec
and
mov
sub
mov
test
sbb
loop
insl
mov
push
or
mov
outsl
dec
jmp
mov
push
add
stos
add
or
and
gs
arpl
loope
testl
jg
mov
jge
movl
dec
negl
sub
cmp
mov
inc
insl
push
add
sub
arpl
cli
icebp
push
and
fxch
sti
insl
fstl
nop
sub
inc
add
jne
imul
xchg
pop
xchg
nop
insb
mov
xchg
push
jmp
xchg
push
xchg
inc
cwtl
iret
rcr
mov
adc
jno
and
add
push
or
sbbl
adc
sar
cld
mov
push
das
sub
cld
pop
and
xchg
rcrb
xor
mov
movsb
jle
push
pop
or
pop
inc
add
stos
or
xor
or
jmp
or
jmp
test
cmp
add
sub
jp
adc
iret
jmp
pop
rol
data16
sub
or
jns,pt
or
loopne
adc
jne
or
sub
mov
xchg
in
mov
test
or
adc
push
mov
pop
inc
sahf
iret
push
sbb
cwtl
sub
jmp
insb
adc
fdivl
xchg
fwait
jb
and
add
push
pop
push
cmpsl
mov
add
setne
test
mov
pop
adc
jecxz
and
mov
and
jmp
and
pop
adc
mov
push
loope
inc
mov
and
mov
test
cmp
mov
or
inc
add
pop
fildll
jmp
popa
adc
add
dec
mov
inc
xchg
mov
pop
fs
out
adc
dec
hlt
sub
xchg
push
xchg
cmpsb
int3
out
add
add
out
cmp
mov
jge
cmp
xor
mov
mov
mov
push
movswl
pusha
inc
dec
cmpsb
sub
adc
push
test
jne
push
insb
cltd
mov
xchg
pop
rcrl
push
mov
ds
push
pop
add
and
imul
jne
push
pop
or
mov
dec
or
cmp
jne
inc
push
call
sbb
pop
xor
out
xchg
aad
repnz
mov
xchg
pop
add
shll
rcl
xor
and
sbb
std
cmp
push
jge
into
jge
nop
mov
add
jae
nop
inc
lea
xchg
iret
xor
lea
mov
hlt
sbb
or
inc
adc
add
xor
fincstp
adc
sbb
movsb
sbb
popf
dec
sbb
in
add
push
pop
mov
lcall
mov
push
lds
dec
sbb
xlat
aam
pop
adc
lret
cwtl
lods
mov
fwait
dec
adc
in
jmp
xor
dec
repz
cmp
or
cld
push
adcb
negl
add
pop
xchg
adcb
cmp
dec
pop
int
popf
inc
pop
jp
orb
pop
mov
mov
jge
xchg
in
and
sahf
pop
adc
add
pushf
addb
outsb
sahf
inc
dec
loopne
pop
or
mov
cli
or
push
mov
and
push
or
stos
js
cmp
add
lcall
int
ficompl
test
xchg
sahf
adcb
filds
lods
fwait
out
out
push
add
cmp
shl
mov
add
dec
pop
mov
pop
adc
rolb
xchg
sbb
pop
bnd
outsl
and
sbb
in
xchg
mov
je
dec
je
dec
add
inc
pop
rclb
lahf
push
dec
cmp
lcall
lods
arpl
jne
and
mov
movsl
inc
push
gs
cmp
push
push
and
sub
adc
mov
ret
icebp
jbe
je
push
mov
orl
mov
add
cmp
mov
cmp
pop
in
xor
data16
sti
or
out
es
orb
int3
nop
xor
and
sbb
pop
movsb
mov
aad
xchg
inc
or
jl
mov
cmp
push
mov
xor
sub
std
into
fmul
and
lock
inc
mov
adc
and
je
outsb
clc
sarb
rorb
pop
das
lcall
add
cltd
lds
xchg
and
insl
mov
sub
push
stos
sub
inc
popf
sbb
inc
jns
test
cmp
and
pop
and
lock
cmp
jne
xor
clc
jno
jmp
mov
or
add
xchg
push
pop
or
rcrb
mov
mov
mov
clc
mov
cs
sysret
rclb
cltd
add
or
pop
add
fiaddl
or
lock
out
fwait
es
dec
push
xor
xchg
mov
sbb
xchg
push
sub
push
sbb
loop
mov
dec
xchg
leave
add
jmp
xlat
adc
adc
xor
mov
mov
push
dec
sahf
push
icebp
mov
nop
cmp
gs
shlb
add
push
imulb
add
into
add
add
lock
xor
leave
insb
adc
gs
adcl
ret
imul
jb
add
stos
mov
mov
mov
dec
or
scas
pop
cmp
scas
and
push
aad
or
jbe
or
pop
aaa
add
jg
dec
nop
cmp
mov
add
test
cmp
loopne
shld
or
or
out
fildl
or
insb
pop
fadds
data16
mov
dec
and
mov
xchg
adc
and
cmp
les
xchg
push
and
pushl
lods
dec
outsb
sbb
xchg
jae
sub
mov
push
enter
call
loope
and
movsl
sub
fld
faddl
cs
test
addb
xchg
xchg
je
leave
push
pop
ja
cmc
xchg
jnp
cmp
sub
pop
xchg
or
mov
add
adc
push
or
je
push
inc
fadds
test
push
cmp
subb
xchg
inc
sub
adc
cli
or
je
dec
mov
subl
bnd
mov
or
add
lahf
and
add
lock
ljmp
jo
cmp
mov
inc
bound
xor
add
ficoml
mov
inc
or
push
adc
repnz
dec
sbb
sbb
in
xchg
and
inc
xchg
pusha
xchg
jno
mov
jle
je
or
mov
mov
ret
mov
mov
add
clc
add
enter
adc
adc
fsubr
pop
inc
add
je
or
pop
jb
sbb
push
and
int
xor
add
jne
and
sarb
lcall
stc
push
fmul
push
loope
xchg
psadbw
rcrb
mov
mov
add
cmp
add
or
pusha
xchg
jle
bound
adc
sbb
out
push
iret
push
je
adc
movsl
jnp
mov
in
test
or
sbb
in
pop
mov
aaa
mov
push
inc
adc
mov
gs
out
enter
cs
divl
push
push
out
adc
mov
or
mov
cld
jle
xor
out
jo
dec
adc
jnp
push
inc
add
sub
pop
mov
cmp
and
loop
lock
mov
cwtl
push
inc
pop
jo
dec
or
xor
adc
mov
les
xor
adcl
bound
pop
push
stc
adc
loope
pusha
jbe
push
adc
push
fnstenv
ja
jmp
cwtl
sbb
cmp
dec
aam
dec
dec
dec
sbb
or
ds
sbb
adc
push
dec
push
push
xor
imul
jo
adc
sbb
adc
xchg
mov
mov
and
sbb
dec
div
rclb
dec
inc
notl
js
push
fs
mov
cwtl
or
dec
pop
add
sbb
pop
fildl
push
or
mov
push
or
dec
shr
adc
pop
dec
cs
ds
push
mov
sub
mov
inc
loope
test
cmp
and
and
push
call
xchg
fcoms
sahf
xchg
cmpsb
jb
adc
push
sub
mov
push
and
pop
adc
inc
jae
insl
push
ret
enter
xchg
xchg
out
sbbl
and
xchg
pop
adcb
pusha
jecxz
rcll
dec
mov
or
inc
xchg
and
lea
add
cmp
or
or
adc
add
xor
sbb
imul
and
sub
lcall
lret
mov
lods
jp
inc
or
mov
sbb
adc
jb
cmp
or
jo
mov
inc
pop
xor
je
mov
pop
nop
popa
dec
xchg
sbb
mov
add
add
or
adc
xor
sbb
and
loop
shlb
inc
push
mov
push
mov
pop
xor
push
mov
cli
mov
mov
mov
pop
sub
mov
and
mov
xchg
js
cmp
mov
lods
test
je
dec
push
sti
ds
fldcw
add
mov
pop
xchg
cmp
or
or
adc
add
add
cmp
gs
inc
js
addl
mov
mov
inc
pop
das
fldt
cmc
mov
xchg
adc
mov
inc
pop
adc
push
leave
sahf
push
push
dec
add
aas
lcall
push
add
movsb
test
lods
das
add
cwtl
jl
nop
add
pop
push
push
push
xchg
push
cmp
adc
push
add
adc
ret
or
ret
imul
out
pop
stos
xor
xchg
sti
pushf
hlt
xchg
pop
adc
jne
mov
sbb
je
xchg
pop
push
xor
lods
dec
fidivs
add
mov
and
pushf
in
pop
packssdw
add
stos
dec
clc
jle
pop
push
lock
jne
call
pop
pop
jne
push
or
jne
and
sbb
int
test
and
je
pop
pop
inc
and
add
push
add
xor
cmp
js
popf
pop
sub
dec
jae
xor
add
add
cmp
mov
push
push
push
mov
mov
dec
xlat
enter
outsb
dec
add
arpl
sti
mov
and
mov
jbe
sub
movsl
sbb
cmpb
inc
cmp
cmp
orb
xorb
loopne
data16
test
sub
sbb
sub
xchg
sbb
rclb
pushf
inc
sbb
jmp
mov
add
mov
push
mov
xor
or
inc
sub
cs
inc
dec
push
mov
xor
fs
adc
xorl
mov
pop
add
or
inc
fimull
push
sub
xchg
add
cmp
imul
sbb
sbb
cmp
cltd
in
push
test
pop
in
sbb
push
clc
or
mov
mov
js
daa
or
jne
mov
or
roll
fisubrs
loop
xor
and
xchg
icebp
inc
mov
mov
pop
aam
xor
ljmp
cld
sbb
or
mov
or
mov
mov
shr
mov
lret
std
int3
js
loopne
xor
mov
shr
ret
sahf
push
mov
lds
pop
jle
mov
push
notl
and
push
xor
daa
in
inc
add
jno
subb
mov
test
add
or
je
popa
push
shll
adc
sbb
sbb
jne
xchg
add
sbb
pop
add
leave
mov
jae
adc
or
aaa
and
adc
add
icebp
js
mov
push
xchg
lock
out
cmp
rolb
xchg
addr16
mov
aas
aas
test
mov
lret
sub
xor
xchg
add
dec
out
insb
cmp
jae
lods
mov
loope
and
xchg
push
or
mov
dec
push
hlt
andl
push
ljmp
lea
ss
add
mov
add
add
push
push
xorb
push
lret
test
xchg
pop
push
mov
ja
mov
lret
or
imul
xchg
pop
ret
dec
sbb
and
mov
adc
push
stos
mov
and
pusha
pop
mov
cmpl
ja
hlt
inc
xor
and
sub
loopne
shll
loope
loope
xchg
divb
sbb
push
add
and
adcl
iret
test
push
popa
cmc
xor
xchg
repnz
lods
add
mov
inc
add
xchg
sti
mov
push
cmp
and
xchg
shrb
movaps
movsl
in
fdivr
xchg
lock
in
sbb
lea
out
scas
hlt
push
pop
jmp
pop
ret
inc
pop
pop
addb
xor
or
inc
xchg
lods
sbb
movsl
dec
inc
sub
inc
push
imul
sub
add
rcr
movsl
jae
cmpsb
shlb
fisubs
lock
pop
scas
cmp
rcrb
sub
pop
lret
sub
iret
sahf
adcb
jo
or
cmpsl
dec
and
aaa
int
pop
pusha
pop
dec
jne
adc
or
and
or
and
adc
sbb
cwtl
test
and
mov
popa
sub
js
or
ret
adc
ret
mov
ja
push
xor
add
or
mov
adc
jp
pop
clc
add
les
sub
ljmp
add
dec
pop
dec
incl
test
popa
bound
sbbb
ficoms
push
mov
jmp
cmpsl
inc
leave
adc
sub
fadds
dec
leave
jo
add
xchg
sub
adc
push
loopne
mull
mov
jno
mov
rcl
movsl
addl
sub
sbbl
in
pop
pop
mov
les
sti
xorl
clc
and
mov
or
push
leave
nop
add
adc
hlt
addb
adc
test
and
icebp
fcoml
dec
clc
jg
cmp
test
mov
pop
add
lock
mov
dec
mov
das
lds
enter
add
and
and
add
addl
imull
lods
pop
lock
loope
mov
xchg
std
add
jecxz
or
mov
xor
rcll
sub
push
push
inc
dec
iret
roll
inc
inc
inc
push
jle
inc
popf
cmp
in
mov
cwtl
pop
in
add
cli
jb
push
shl
loopne
add
test
and
inc
leave
sbbb
dec
push
mov
dec
enter
add
xor
pop
jo
cmp
pop
xor
xchg
push
insb
addr16
dec
fnstenv
and
imul
and
or
and
inc
out
je
inc
push
cwtl
jl
not
mov
js
jnp
sub
sub
or
push
stos
mov
sbb
lcall
pop
sub
test
inc
inc
add
movsb
test
int
adc
dec
dec
test
mov
in
lret
xor
mov
sbb
fcoms
push
add
out
lcall
mov
mov
or
xchg
leave
xorl
push
scas
or
pop
push
xchg
daa
push
push
cmp
cmp
push
lret
test
pop
mov
mov
inc
in
movsb
scas
cmp
test
aam
in
add
and
pop
push
add
faddp
arpl
sbb
dec
jl
in
popf
idivb
testb
add
loopne
dec
lea
mov
ja
leave
call
rorl
inc
and
adc
or
scas
movsb
inc
add
mulb
cmc
xor
sub
jle
cmp
fsubrs
ja
sbb
loopne
xor
imul
jg
es
jmp
push
sub
cmp
sbb
in
inc
sbb
adc
ds
sbb
add
xchg
gs
mov
fnstenv
sbb
or
ficoml
hlt
push
mov
scas
sbb
or
mov
lahf
sbb
je
xor
adc
sbb
inc
sahf
pop
cmp
sbb
push
pop
sub
les
and
mov
or
fdivrp
je
cmp
jp
cltd
adc
mov
pop
pop
add
and
jge
add
add
cmp
sbb
xor
fdivrs
mov
nop
mov
lahf
sbb
mov
insl
inc
cmp
and
pop
jl
das
mov
cwtl
mov
enter
or
fstpt
adc
push
jo
sbb
or
dec
push
push
jmp
jns
pusha
mov
jae
push
push
xor
hlt
lea
xor
push
sub
lock
pop
push
push
add
outsl
pop
or
inc
imul
inc
inc
push
cli
add
and
jmp
inc
pop
ret
pushl
gs
repnz
mov
pop
or
shrb
icebp
xchg
xor
js
sub
and
test
push
outsb
shlb
push
push
test
mov
xchg
push
es
in
sbb
icebp
ret
mov
sub
sbb
sub
outsl
or
push
or
iret
cwtl
rcrb
scas
aaa
dec
sbb
ljmp
mov
mov
adc
dec
inc
mov
orb
neg
inc
mov
sub
scas
addb
sub
pop
test
xchg
push
dec
mov
mov
data16
das
ljmp
xchg
push
lods
adc
rclb
xchg
pop
cld
cmpb
mov
or
and
cmp
push
ficoml
rclb
in
xchg
pop
test
mov
in
push
inc
cmp
loopne
xorb
test
test
or
dec
add
fdivrs
mov
shll
push
jp
js
jl
addr16
inc
stos
push
add
data16
add
cmp
adcb
dec
and
push
nop
jo
add
push
fiaddl
push
fs
faddp
dec
imul
sbb
mov
enter
in
je
push
adc
dec
push
nopl
pop
pop
sbb
jne
bound
jb
and
mov
push
cmpsb
inc
add
cmpsl
sub
mov
add
push
aas
jne
dec
xchg
push
lods
cmp
or
es
or
rcrb
cmp
icebp
iret
out
pushf
jmp
push
test
loopne
or
mov
xor
push
enter
adc
mov
push
cld
fs
and
jecxz
outsl
lock
push
mov
call
cltd
bound
cmp
iret
inc
imul
pusha
cmp
loop
out
xor
loopne
mov
cmp
adc
mov
cmp
inc
xchg
xor
mov
loope
or
cltd
mov
pop
xor
insl
jmp
push
lcall
push
or
test
shrb
int3
dec
rcrl
cmp
repz
enter
mov
and
js
and
outsl
mov
mov
mov
mov
inc
cmp
adc
pop
fs
mov
enter
push
push
or
sub
pop
xor
pusha
sub
add
pop
add
jnp
or
sarb
test
je
gs
sub
xchg
test
cmp
pop
sub
popa
push
cmp
lret
inc
cmpl
test
out
cmp
pop
mov
aad
dec
lret
inc
dec
mov
icebp
jnp
ret
clc
dec
xor
adc
jns
xchg
scas
rolb
sub
inc
push
fnstenv
pop
ret
mov
inc
mov
dec
stos
stos
loopne
lock
sti
out
or
shll
xchg
adc
popa
jl
movsl
movb
xchg
clc
imul
cmp
jae
add
add
sahf
mov
add
push
mov
adc
dec
mov
add
mov
cmpsb
movsb
or
inc
xchg
loope
pop
xor
push
roll
repz
adc
push
sbb
mov
popa
push
fcmovnu
fiaddl
lret
xchg
pop
or
or
add
dec
mov
push
add
or
mov
sarl
jle
sbb
adc
and
sub
loopne
scas
add
jl
lock
leave
pop
xor
push
or
push
or
inc
or
insb
cmp
divb
lods
push
push
add
loop
rclb
mov
dec
cmp
pop
or
xor
inc
mov
outsl
roll
inc
push
push
in
shr
andl
sub
repnz
shrb
xor
mov
rclb
ljmp
cmp
call
or
adc
cmp
mov
and
insl
mov
adc
or
sub
lock
inc
je
mov
push
push
adc
movsl
adc
mov
not
shrl
popa
stos
add
xor
imul
sbb
outsl
add
sbb
jp
lea
pop
add
imul
pop
xchg
ret
dec
push
push
int3
das
and
or
and
cmp
dec
je
arpl
add
adc
fstps
and
out
add
int
cmp
adc
test
xchg
pop
sub
add
push
mov
inc
sbb
cwtl
adc
jmp
inc
pop
add
cmp
or
fs
fdivs
xchg
ret
and
inc
push
xchg
push
push
sub
cli
and
fs
xor
sub
cmp
add
and
add
dec
dec
stos
adc
mov
les
testl
and
lret
rol
add
inc
shlb
and
lock
and
push
pusha
adc
dec
lea
xorb
dec
pop
sub
push
subb
push
cld
jle
mov
loop
sub
fdivrs
push
push
fs
inc
add
mov
sub
dec
or
incb
jmp
mov
rorl
leave
popf
shlb
mov
dec
test
pusha
push
dec
dec
test
pushf
dec
movsl
push
lods
imul
adc
sbb
nop
add
add
fcoml
mov
push
mov
sbb
and
je
mov
xor
sub
mov
add
push
push
jmp
leave
adc
inc
pop
test
subb
inc
ss
add
repnz
shr
add
push
and
lcall
inc
and
inc
push
lods
sub
cmp
dec
pop
xor
loopne
out
inc
mov
insb
and
add
push
push
adc
test
sub
inc
and
add
pushf
and
and
dec
test
or
nop
aam
push
mov
mov
or
jns
sbb
lock
add
das
enter
cmp
or
cmp
movsbl
and
mov
ret
outsb
or
xor
mov
pushf
mov
mov
lock
adc
push
test
push
cmpb
jge
pop
clc
push
mov
add
clc
adc
fs
mov
pusha
mov
arpl
adc
shrl
sarl
jmp
jg
lret
inc
inc
sub
inc
ret
mov
inc
lock
int3
fldz
or
mov
fcoms
add
push
xlat
repnz
or
dec
xor
fs
mov
pop
mov
sbb
addl
add
or
sub
sar
mov
mov
add
clc
xor
js
jns
sar
inc
push
jg
inc
jne
insb
inc
rcrb
fadds
inc
mov
mov
outsb
dec
adc
cwtl
inc
sbb
stos
xchg
mov
add
mov
sti
and
dec
cmp
inc
add
sub
add
lcall
mov
pop
movsb
add
dec
add
jo
add
push
or
test
pop
hlt
mov
xor
dec
dec
sub
sbb
aas
xor
mov
jno
inc
xor
jg
or
fildl
dec
inc
into
mov
adc
push
mov
mov
add
mov
mov
jo
push
or
lret
sbb
cmpsb
jbe
jae
sarb
xor
leave
cmp
ficoml
sub
adc
cmp
jnp
bound
mulb
xchg
lcall
pop
lcall
out
pop
xor
push
adc
or
sbb
cli
insl
jo
enter
dec
mov
das
or
and
inc
mov
repnz
or
pop
fdivs
jp
sbbl
jne
inc
test
or
inc
or
addb
cwtl
clc
das
cmp
cld
es
push
pop
xchg
push
mov
lea
test
dec
xor
in
clc
add
je
in
notl
lret
jl
cmp
jnp
sub
icebp
and
sub
inc
xchg
movsb
es
adc
test
outsb
sarl
adc
inc
jp
popa
push
bound
test
inc
js
sub
rcrl
add
insl
je
lods
xchg
stos
aam
dec
mov
ss
out
loopne
js
nop
addr16
xor
xchg
jl
jb
mov
jno
outsl
jne
popa
enter
add
mov
lods
mov
in
ds
dec
mov
inc
push
sbb
repz
movl
js,pn
and
jo
cmp
shll
dec
or
push
xor
sahf
addl
xchg
inc
add
inc
sahf
hlt
and
push
inc
je
in
call
sbbl
int3
sub
mov
sub
inc
mov
jne
xor
add
stos
in
push
lcall
xor
rorb
mov
sbb
xchg
push
push
sbbb
pusha
repnz
jbe
cmp
lea
cs
jne
cmp
push
pusha
movsl
inc
inc
sbb
es
mov
add
xor
inc
ljmp
push
and
add
add
pop
ja
sarl
cmp
nop
push
inc
sub
and
addb
enter
mov
subl
test
test
add
pop
les
add
add
mov
cmp
pop
test
mov
int3
int3
add
adc
add
test
imul
lret
pop
sub
jl
dec
addr16
or
cmp
cltd
repz
push
mov
cmp
test
arpl
imul
jne
pop
fsubs
daa
inc
lahf
xor
inc
leave
add
add
inc
xchg
cmp
cltd
sub
popf
dec
invd
cmp
jb
mov
jg
rolb
mov
adc
insb
jbe
fmuls
push
inc
and
mul
sbb
cmp
and
dec
loope
xor
jp
js
dec
or
mov
and
shlb
daa
and
pushf
fucomi
push
adc
or
jmp
sbb
jne
inc
jp
pop
sub
int3
je
pop
adc
or
insb
andl
mov
jp
orl
ss
in
cmc
roll
jg
call
add
nop
rcrb
push
and
sbb
mov
mov
inc
bound
leave
add
insl
xor
dec
cmp
mov
int3
arpl
adc
or
insb
negb
dec
dec
and
mov
pop
jnp
pop
mov
cmp
or
push
int
xor
jmp
or
pop
jo
mov
adc
jo
inc
mov
and
or
or
push
sbb
xchg
test
xchg
xchg
xchg
loopne
add
fdivl
cld
push
jmp
pop
inc
jns
in
aaa
out
mov
fdivs
in
inc
sbb
jge
xor
xchg
pop
mov
sub
aam
cltd
fdivrs
pop
mov
ljmp
or
dec
insl
xor
or
push
lock
insb
stc
mov
lea
add
mov
push
invd
pop
pop
movsl
idivb
or
pop
and
xor
fadds
je
test
ret
push
xchg
scas
popf
jge
into
xchg
add
das
push
sbb
add
fildl
or
pop
das
xchg
pop
add
jo
ret
cmp
int3
inc
sti
dec
cmp
and
adc
test
or
sbb
mov
xchg
insb
push
rcrl
xchg
adc
loopne
inc
sub
and
cmp
imul
mov
lsl
or
add
mov
dec
test
movb
int3
popa
fdiv
and
mov
dec
add
lret
push
and
push
loop
jno
jge
add
pop
and
shlb
xchg
lcall
pusha
montmul
cmpsb
add
mov
std
ja
mov
out
ror
das
fs
test
adc
push
adcl
cmp
dec
pop
enter
and
and
sub
mov
xor
cmpb
andb
sbb
xor
sbb
mov
hlt
mov
fwait
xchg
pop
lock
sub
adcb
ret
xor
pandn
jb
and
fcoms
and
mov
sub
addb
and
xchg
and
sub
addr16
adc
add
jne
fbstp
jne
add
call
inc
or
dec
fisubrs
xchg
pop
lods
test
mov
js
lods
dec
jo
add
imull
mov
push
cmp
in
lea
ror
mov
lea
into
cmp
test
mov
or
je
sub
add
pop
or
add
mov
jmp
repnz
mov
mov
sbb
and
cmp
call
add
sub
aad
jns
sti
cmp
cltd
into
lea
fldenv
add
xchg
adc
push
xchg
inc
jae
xor
dec
pop
je
aam
jnp
adc
pop
dec
cmp
xor
jge
lgdtl
sbb
push
push
popa
mov
sti
ja
out
sahf
add
js
ss
or
jmp
and
adc
inc
and
jle
int3
hlt
xlat
or
cmp
call
mov
dec
mov
cmp
movsl
lods
mov
shl
sar
test
cwtl
orb
jmp
add
aad
clc
mov
in
or
pop
sahf
add
sbb
pop
daa
insb
jle
xchg
mov
add
cmp
and
sahf
inc
add
or
mov
xor
fdivrs
push
loopne
loope
inc
and
nop
inc
jne
or
mov
push
jp
mov
sbb
xlat
ss
cmp
and
or
add
out
jo
hlt
mov
shll
icebp
push
imul
mov
mov
mov
add
rorb
arpl
subl
loopne
dec
loopne
fadd
dec
mov
dec
and
movsb
xor
inc
lea
xchg
mov
or
not
cmp
or
fidivrs
test
lea
xchg
push
divl
lods
scas
mov
scas
inc
rcrb
jl
es
arpl
inc
out
mov
jle
inc
clc
mov
mov
xchg
push
mov
cli
xchg
add
lret
push
xchg
cwtl
in
adc
rorb
test
xor
ss
push
push
lahf
lret
sub
adc
adc
pop
sbb
pushf
lret
mov
sbb
xchg
sub
add
mov
push
or
jge
cmp
mov
leave
xor
scas
ss
mov
dec
mov
cmp
ljmp
sbb
xor
xor
pop
arpl
or
std
mov
loopne
adc
imul
shl
and
pop
sti
jo
imul
push
fsubs
lcall
xor
dec
in
mov
mov
js
push
push
push
jmp
sbb
add
imul
push
dec
push
int
in
dec
inc
pop
je
or
sub
and
mov
push
or
daa
adc
add
call
rcrb
cmpb
pop
push
inc
cmp
addr16
ljmp
ficoms
xor
lahf
or
inc
ss
adc
add
jp
push
push
jne
cld
jecxz
shlb
mov
cmp
pop
jg
sahf
test
and
es
pop
mov
shr
lods
mov
fdivs
inc
pusha
out
or
nopl
movb
pop
fildl
cmp
add
call
xchg
enter
aam
les
ss
mov
and
sbb
test
or
push
adc
add
orl
pop
cmp
cltd
and
sbb
xchg
stc
add
loopne
dec
mov
mov
push
stos
cmp
add
ljmp
and
sarb
fistpl
or
mov
int3
cmp
daa
or
jl
pusha
inc
pop
push
rcr
add
or
sub
ret
jge
jge
add
xor
rolb
imul
or
inc
pop
cmp
adc
sub
aad
sbb
jge
jae
sbb
sbb
cmc
outsl
pop
dec
and
mov
push
sbb
bound
rorl
pop
jb
movsb
fadds
fcom
or
faddl
mov
jne
add
pop
mov
sub
xchg
rcr
add
rcrb
out
mov
cmc
dec
sbb
sbb
sbb
inc
dec
push
adc
add
rorb
insl
jle
and
mov
movsl
pop
ja
adc
std
movb
mov
pop
test
pop
add
roll
adc
call
loope
loope
sbb
aam
iret
jae
push
stos
daa
add
hlt
adc
sbb
xchg
pop
ds
xchg
and
inc
add
push
sub
mov
dec
sbb
add
xor
mov
rcrl
sbb
in
xchg
popa
and
jo
ja
and
xchg
imul
cmp
sti
inc
sub
or
inc
inc
add
nop
dec
shlb
adc
imul
push
test
inc
ret
inc
jbe
add
test
fimull
subb
pop
add
iret
fimull
loope
mov
and
fimull
call
inc
or
fadd
push
or
dec
add
jne
and
add
stos
pop
lcall
xor
arpl
mov
sbb
mov
xchg
iret
shrb
out
iret
add
sbb
or
dec
sbb
pushf
in
insl
add
sbb
adc
push
pop
pop
js
in
add
daa
insb
or
xchg
mov
adc
faddl
filds
inc
sub
sti
and
mov
aad
sbb
outsb
pop
inc
decl
adc
sub
lea
inc
incl
or
shlb
sbb
iret
adc
shll
mov
push
in
mov
inc
cwtl
mov
imul
aam
addl
je
call
push
fsubrs
dec
mov
or
or
js
push
fucomi
jmp
and
add
popa
aaa
lcall
loope
or
sub
mov
rcll
xchg
dec
or
mov
shr
add
int3
loop
ficomps
and
shl
addl
and
xlat
fldl
outsl
or
iret
mov
jo
fisubrl
add
rolb
jp
pushl
sar
inc
pop
pop
adc
daa
and
rcrl
cld
loope
dec
call
push
icebp
das
cmpl
jl
mov
dec
pop
and
movsb
fadds
add
jo
sbb
mov
in
add
js
mov
push
mov
fidivrl
je
jo
daa
pusha
dec
gs
push
xchg
push
pop
pop
outsl
das
popf
jmp
lods
or
jl
insl
xor
mov
mov
sub
adc
push
in
cmp
add
jbe
push
sbb
fstps
adc
loopne
add
cmp
push
loopne
loope
pop
mov
add
ds
cmp
xchg
test
shlb
xchg
imul
lock
lret
call
cmp
bound
pusha
je
jne
push
imul
cmp
rcrb
movb
add
jb
sub
inc
int
int
add
inc
jmp
inc
jmp
xor
ret
jmp
aaa
jmp
cmp
push
decl
pop
mov
les
insl
imul
push
push
add
ljmp
add
fsubrl
movsl
add
xor
inc
add
or
push
xchg
inc
add
test
les
inc
xchg
mov
aam
push
adc
sub
cmp
lea
pusha
in
push
shlb
in
mov
add
das
dec
cmpsb
in
cmp
inc
xchg
je
test
xchg
push
iret
xchg
jae
push
pusha
stos
add
or
jo
pop
aas
cmp
hlt
fiadds
mov
aad
les
jne
pop
jne
inc
jmp
dec
je
sub
push
sub
test
mov
mov
sbb
push
hlt
inc
pop
add
pop
sub
test
sub
add
test
ljmp
sarb
rol
jne
or
jecxz
adc
mov
push
movl
sbb
ljmp
gs
fimuls
sub
add
xor
cmpsb
jle
mov
cmp
add
ja
sbb
sbb
ret
and
dec
add
rorl
xchg
jbe
in
or
test
lret
push
je
push
in
xchg
lret
dec
jno
sbb
add
call
push
iret
lsl
fdivs
hlt
or
push
sbb
jle
dec
xorb
insl
ljmp
xor
fists
ja
xchg
cmp
orl
ret
cwtl
and
in
xchg
jne
es
add
sbb
in
push
and
test
hlt
pop
mov
arpl
pop
jp
xchg
and
loope
mov
cmp
je
andb
dec
cmp
xor
add
and
icebp
sub
lock
shrb
data16
jmp
insb
jne
inc
xor
aaa
mov
ficomps
sub
and
aad
lret
pop
cmp
jne
pop
mov
dec
sbb
lods
pusha
mov
xor
add
push
adc
adc
or
adc
fistl
mov
inc
inc
shlb
aad
xchg
sub
jne
pop
in
loopne
inc
out
push
pop
and
shufps
fnsave
mov
sbb
pop
add
push
sbb
push
or
ficomps
sbb
stc
sub
adc
xor
into
add
adc
mov
inc
cmp
inc
pushf
xchg
adc
add
inc
add
scas
cmpl
jle
lods
jle
push
cmp
fstpl
loopne
pop
xchg
test
paddd
outsb
or
add
das
inc
sub
shll
sbb
push
sub
and
ret
sarl
ficoml
shll
das
pusha
push
loopne
fcoms
mov
jg
push
push
push
adc
jle
nop
dec
add
or
lea
icebp
pop
pop
jl
scas
loop
mov
push
out
cmp
jle
jmp
or
or
xor
add
sbb
addb
xor
inc
push
sbb
insb
xchg
push
push
push
push
xor
cltd
loopne
flds
roll
testl
repz
mov
sbb
sub
pop
jae
xchg
and
mov
mov
pop
xchg
fidivs
push
add
mov
xor
outsb
push
dec
stos
cltd
mov
outsb
loop
mov
mov
cmpsb
mov
inc
or
sub
sub
repnz
in
jecxz
inc
stc
push
lods
cmc
std
sbb
mov
add
inc
lock
inc
sub
xchg
jmp
call
xlat
dec
sub
adc
add
loope
je
rcrb
dec
inc
jne
sbb
or
pop
sbb
dec
rcrb
add
inc
sub
sbb
inc
xchg
fdivr
mov
dec
scas
jp
lock
xor
je,pt
and
jmp
and
jp
xchg
and
xchg
loop
aad
pop
push
shl
scas
sub
sbb
ret
pop
mov
sti
and
and
pop
sar
dec
sub
push
lods
pop
into
cmp
pop
pop
cmpl
sbb
jo
sub
xor
imul
adc
push
cmpsl
dec
add
push
xor
sub
mov
inc
js
sub
xchg
add
repz
add
pop
jp
pop
xorl
subb
or
or
sub
mov
shlb
cmp
ret
outsl
cld
xor
out
jg
xor
js
cmp
mov
dec
push
sub
lods
shrb
ljmp
and
int3
inc
dec
inc
sub
pop
dec
ljmp
addl
je
mov
ja
inc
ds
sahf
out
jns
addr16
add
stos
inc
push
jl
test
push
in
mov
pop
mov
inc
push
mov
out
and
mov
cmp
inc
xlat
sub
or
js
iret
add
push
add
sub
mov
lds
jb
mov
in
and
jb
mov
inc
clc
xchg
and
addb
pop
add
insb
lret
dec
sbb
sarb
push
into
in
movsb
push
ret
pop
or
lret
movsl
nop
das
imul
js
add
xlat
or
sbbb
cmp
enter
xchg
mov
pop
jge
push
adc
cmp
fisttpl
cli
data16
cli
jne
cltd
cmp
setne
inc
sbb
jnp
lock
dec
xor
daa
or
mov
subb
jne
sub
add
mov
jge
mov
ret
cmp
insb
test
xor
loopne
push
pop
cmp
call
pusha
inc
imul
ret
shll
adc
nop
push
inc
jo
lds
and
dec
mov
insl
mov
and
push
loop
mov
ret
mov
jne
aaa
add
in
xchg
dec
dec
xchg
aas
pop
sub
popf
les
and
imul
inc
pop
add
push
sub
mov
mov
or
sarl
or
jmp
orl
adc
popa
outsb
outsb
outsl
pop
or
jmp
or
jmp
add
adc
jmp
add
ret
jle
data16
inc
xor
jne
mov
and
xchg
ret
xchg
mov
lock
jecxz
test
add
fidivl
and
sbb
mov
pusha
mov
pop
inc
mov
call
xor
test
je
mov
movb
and
ret
je
in
jbe
pop
sub
ret
pop
icebp
adc
shr
movsbl
sub
mov
mov
or
push
fcoms
push
test
int3
not
push
push
nop
std
mov
or
les
xchg
pop
std
add
enter
inc
fwait
hlt
shlb
jo
fdivs
test
xor
lods
out
mov
sub
loopne
dec
sbb
ja
jnp
icebp
push
insl
sbb
mov
add
dec
mov
or
mov
inc
fs
rclb
js
cmp
lea
into
scas
adc
add
jno
push
xchg
add
xor
shrb
mov
fisttpl
dec
xchg
lahf
xchg
mov
jmp
mov
push
dec
lret
push
sbb
popl
sahf
call
pop
fldl
jl
cmp
cltd
sub
je
pop
lock
adc
inc
xor
je
or
shrb
js
leave
xor
or
fs
dec
adc
push
cmp
cmp
push
or
xlat
roll
mov
sbb
adc
adc
dec
cwtl
sbb
inc
call
test
popa
jbe
adc
mov
cmp
sbb
imulb
cmp
je
or
je
xor
mov
sub
push
or
jno
movb
ds
mov
rolb
ss
jge
jno
jb
mov
clc
or
mov
das
add
inc
loopne
xchg
xor
jmp
mul
add
or
je
pushf
mov
lahf
sbb
pop
and
test
adc
call
mov
jl
xor
sbb
sub
push
outsl
stos
mov
mov
clc
jnp
pushl
cmp
adc
mov
jge
adc
xchg
or
jecxz
pusha
mov
jmp
and
add
mov
and
sbb
test
and
shr
movsb
daa
repnz
inc
ret
inc
mov
jo
push
das
add
push
dec
xor
ret
popa
ja
xor
mov
lret
mov
adcb
cmpsb
xor
or
stos
mov
fmull
sub
add
pop
rorb
jmp
jne
fistpl
and
push
fcoms
jne
into
push
clc
popa
push
mov
lcall
or
add
push
mov
ret
cmp
xchg
mov
xor
push
xchg
push
shrl
dec
fsub
pushf
or
add
sbb
xor
mov
lock
rolb
loop
aam
sar
push
dec
xor
pop
and
dec
scas
xchg
shlb
mov
xor
cmp
cmp
sahf
or
sbbb
dec
mov
js
les
adc
dec
movsb
or
stos
cmp
dec
push
je
cs
bswap
adc
pop
or
bound
lea
fsubrs
addl
test
pop
nop
sbb
cmp
out
push
andl
or
je
enter
pop
mov
sbb
inc
dec
dec
lods
cltd
pop
imul
jnp
jo
dec
push
jne
js
mov
push
or
inc
inc
xor
test
test
movsb
pop
mov
mov
into
test
adc
lods
loopne
addr16
and
ja
push
push
mov
and
jge
in
inc
fsubs
sbb
cmp
mov
dec
out
cli
lods
sub
and
inc
jae
and
js
pop
xchg
or
pop
leave
lds
or
adc
push
jb
cmp
push
jo
scas
popa
inc
xor
jo
adc
sbb
fadds
and
cmp
sbb
clc
or
add
inc
add
es
push
and
xor
or
push
mov
sbb
dec
and
andb
mov
inc
add
and
fildll
insb
sub
ret
sbb
outsl
and
push
mov
or
call
inc
push
pop
jmp
loope
iret
jnp
mov
hlt
aam
cwtl
iret
jnp
es
loope
mov
and
fists
add
add
push
insl
outsb
pop
or
push
fadds
int
or
dec
fldenv
lock
cmp
fdivr
fimull
push
out
lcall
lods
mov
sahf
out
sahf
fneni(8087
in
int3
setle
jns
out
add
jns
add
or
or
insl
push
xor
cs
in
push
hlt
repz
jge
rclb
leave
or
push
mov
lock
roll
cli
sti
or
push
push
bound
aam
mov
add
push
fadds
add
repz
or
data16
push
cmp
repz
pop
popa
je
cmpsb
pop
xor
add
inc
sarb
add
add
aam
pop
jnp
inc
sub
enter
mov
addr16
adc
adc
mov
push
dec
sub
adc
cmp
inc
mov
add
jne
sbb
adc
js
mov
mov
add
mov
dec
inc
lods
jl
push
mov
mov
mov
mov
imul
nop
cs
pushf
push
push
add
add
push
xor
adc
dec
popa
mov
add
mov
mov
aam
push
pop
rcrb
ret
mov
in
sbb
std
mov
cld
mov
inc
push
push
or
out
pop
sbb
push
or
mov
imul
push
and
jo
dec
sahf
andl
mov
mov
push
jo
dec
xchg
fucomp
jns
ret
push
and
outsb
add
cltd
js
inc
push
aam
pop
add
jno
scas
cmp
sbb
and
sub
jle
inc
push
movb
sub
add
xchg
lcall
mov
jno
fldenv
push
xor
sub
data16
out
or
push
add
jle
mov
and
inc
xor
aam
mov
sbb
in
xchg
sbb
mov
add
pop
mov
insb
push
je
test
fmul
push
data16
lret
mov
xor
sbb
mov
push
das
push
mov
shrb
call
mov
punpcklbw
xchg
xor
fisubrs
and
push
cmp
lea
cmp
and
mov
insb
push
mov
mov
xchg
or
push
int
ret
xchg
sti
push
add
movl
xorb
xchg
pop
outsl
and
jnp
aam
cld
aaa
mov
and
mov
dec
insl
and
jne
sub
xor
jns
inc
sub
jo
add
out
dec
movl
outsb
jmp
in
and
pushl
adc
sbb
call
cmp
in
and
sbb
adc
push
push
repnz
lret
add
push
sbb
dec
mov
cmpl
or
aaa
jne
cmp
mov
sbb
push
adc
loopne
adc
rclb
pop
push
adc
adc
jnp
dec
pop
and
inc
or
mov
push
orl
fs
sbb
fcomps
rolb
xchg
les
inc
std
and
sub
pop
orl
aas
loop
popa
xchg
movsb
xchg
xchg
adc
mov
push
jne
jo
test
outsb
xor
in
lock
push
push
arpl
push
das
adc
imul
push
add
jno
insl
pop
cld
adc
or
ret
and
pop
and
int3
cwtl
add
cmpsl
dec
mov
sbb
pop
push
xor
add
mov
inc
shrb
push
fsubl
and
add
or
decb
jo
xor
pop
out
xchg
inc
loopne
roll
addl
lahf
sbb
lock
lock
aam
add
mov
in
inc
cmp
or
je
pusha
mov
add
add
or
adc
sub
add
movsb
rcl
loop
cmp
testb
setg
lret
and
ret
push
mov
std
mov
jno
xor
sub
sub
xchg
jns
mov
adc
add
mov
sub
sub
loope
sbb
addb
rolb
ret
shlb
scas
push
push
idiv
cmp
push
and
add
xchg
add
and
push
push
mov
push
and
dec
adc
inc
mov
movsl
popa
inc
sbb
push
sub
sub
je
movsl
enter
testb
mov
xchg
xor
ret
movsb
lods
loop
sbb
xor
mov
add
enter
push
mov
and
lea
cmpsl
lret
add
xor
and
call
dec
adc
enter
invd
or
push
dec
and
pop
iret
jae
lock
sbbl
int
add
or
add
in
push
sbb
rolb
xchg
push
js
fcompl
xchg
sbb
mov
add
mov
jo
fs
mov
fcmovne
sbb
sub
inc
scas
sbb
dec
jae
pusha
movsl
test
and
jmp
sbb
push
inc
sub
or
sbb
sbb
aas
mov
inc
mov
add
loope
lret
dec
loopne
push
call
sbb
arpl
ret
sub
movsl
or
lahf
dec
sub
sbb
cmp
test
ret
iret
stos
enter
repnz
push
imul
cmp
mov
ss
loopne
pop
incl
and
data16
int3
push
jbe
popf
fadds
lock
fldcw
imul
insl
cltd
and
and
mov
mov
cmp
dec
enter
and
ror
lcall
je
fiaddl
pop
and
test
jmp
sub
sahf
fidivl
in
mov
mov
das
sbb
mov
add
mov
and
cs
test
push
loopne,pt
cmp
pop
mov
add
dec
add
test
jge
mov
push
popf
sub
scas
or
jo
jae
jle
jb
movb
lods
aam
dec
mov
adc
jns
inc
fsubrs
pusha
push
push
add
inc
dec
add
test
mov
nop
popf
add
sub
iret
pop
add
inc
or
adc
dec
mov
xor
dec
dec
insl
cmp
sbb
pop
push
push
adc
call
roll
inc
dec
jg
xor
pop
xor
call
jmp
call
cmpb
roll
dec
push
and
push
and
mov
pop
cmp
adc
cmp
push
and
sbb
push
push
loope
sbb
pop
mov
add
stos
enter
or
push
insb
and
jno
adc
repnz
psrad
movsb
lods
add
pop
sub
inc
add
push
push
xchg
sbbl
push
jmp
lea
sub
adc
dec
test
inc
lock
ret
dec
jne
repz
sbb
movsl
sbb
adc
fldl
inc
or
lret
in
dec
cli
ss
push
sbb
sub
nop
or
and
je
lea
or
je
mov
sti
add
lea
in
mov
cmp
fsubrs
pop
lea
adc
test
rolb
stos
sbb
push
dec
xor
sbb
ljmp
test
mov
inc
sbb
sarb
sub
pop
mov
fstpl
or
fsubr
or
or
mov
dec
test
testb
mov
mov
push
pop
sub
push
mov
mov
push
lea
push
push
and
test
push
incl
imul
scas
jnp
stos
mov
jnp
outsb
mov
cmpl
adc
add
xchg
or
mov
or
ljmp
lahf
test
js
jns
insb
push
sbb
mov
sbb
loopne
sub
movsl
add
in
lahf
std
dec
add
addb
push
roll
pop
rclb
inc
sbb
in
dec
sbb
rclb
and
arpl
pop
fwait
gs
inc
xor
les
add
test
sub
orb
adc
fidivrl
dec
das
ja
xchg
dec
fistps
adc
fs
imul
pushf
dec
pop
sbb
or
addr16
or
or
cs
jp
cmc
and
ficoml
and
stos
ret
or
pop
pop
and
pusha
sbb
mov
in
shrl
ret
rolb
mov
adc
push
sarb
or
xor
add
xor
pop
jge
dec
lret
adc
jae
clc
push
in
jo
pop
jno
je
cs
adc
je
push
xchg
pmaxub
mov
mov
xchg
xor
xor
je
insb
sbb
fadds
es
outsb
ljmp
inc
mov
inc
or
mov
and
xor
push
add
packssdw
fildl
pop
inc
or
xor
rcrb
pop
mov
lcall
sahf
cmp
jnp
sub
add
add
sbb
inc
push
daa
cmp
mov
push
sub
jle
add
lea
rcll
xor
inc
out
adc
or
lret
dec
shr
fwait
cmp
add
mov
mov
sub
xor
sub
cmp
dec
inc
mov
cwtl
cmpsb
mov
dec
push
pusha
add
push
push
jo
jle
in
and
inc
or
rcll
mov
nop
in
dec
leave
add
or
adc
ljmp
xchg
adc
add
fsubrl
or
xchg
repz
lea
pop
daa
fimull
repz
out
sbb
push
inc
or
inc
pop
int3
in
xor
lret
inc
or
and
mov
pop
dec
and
xchg
sbb
pop
faddl
mov
mov
testl
push
jne
push
jp
insb
inc
aam
sahf
test
mov
push
push
add
insb
or
test
mov
popa
mov
pop
pushf
xor
mov
out
mov
add
cmpsb
and
or
xchg
push
cmp
into
mov
inc
xor
mov
ret
lods
icebp
pop
jge
loopne
push
inc
in
push
jle
or
ror
fs
out
gs
cltd
std
push
cmp
mov
pop
or
addl
rclb
ds
int3
das
xchg
ds
es
add
push
hlt
je
sbb
push
iret
add
pusha
push
enter
imul
cmpsl
jge
xchg
cmp
xor
pop
fldenv
dec
cli
adc
rcl
pushf
popa
bound
mov
or
dec
ss
cwtl
add
xchg
mov
adcb
mov
addr16
push
pop
add
aam
or
dec
xchg
lcall
inc
push
add
imul
es
mov
pop
test
ret
ss
clc
in
ss
shrb
rolb
sub
sub
mov
inc
rorb
mov
adc
mov
xor
cmpsl
in
mov
std
js
sub
pop
jle
js
out
jns
or
filds
stc
push
sbb
pushf
fs
pop
mov
adc
jge
mov
mov
inc
xor
jg
cltd
mov
mov
mov
adc
cwtl
and
jns
adc
insb
stc
aas
in
fsubl
hlt
cmp
sbb
mov
insb
loopne
aas
int3
aaa
pop
and
rcrb
sarl
ljmp
push
or
or
xor
ss
push
inc
push
roll
or
cmp
shlb
movsb
pusha
repz
cmpsb
inc
out
push
jge
fistpl
jmp
xor
dec
mov
xchg
sub
mov
ds
cld
dec
mov
addb
cmp
mov
xor
ss
mov
jo
stc
dec
xlat
xchg
in
xchg
outsb
push
pop
mov
mov
pop
sub
sbb
rcl
lods
push
out
orb
cld
mov
insb
test
add
mov
clc
and
inc
push
push
mov
inc
sbb
xchg
sub
sarl
jae
jo
shlb
pusha
push
cmp
cld
push
cmp
pusha
add
sbb
test
and
sub
sbb
jo
dec
add
and
lods
mov
mov
dec
push
popf
adc
cmp
les
sub
push
cmp
adc
test
add
data16
push
ljmp
ja
in
inc
push
sar
iret
jmp
mov
data16
lret
xchg
rorb
iret
int3
or
lock
dec
push
sub
lock
xlat
popf
imul
inc
pop
fcmovne
xchg
and
mov
mov
hlt
mov
push
stos
jo
mov
sub
and
dec
scas
add
xchg
or
mov
outsl
jne
xchg
and
xor
ret
sbb
push
mov
adc
adc
rorb
pop
and
adc
sbb
sbb
inc
dec
rcrl
and
push
fwait
mov
sub
push
sub
decl
mov
and
mov
pop
xor
cmp
outsb
lcall
inc
lea
ds
mov
andb
pop
push
inc
filds
xchg
sahf
mov
mov
pop
fmuls
testb
jp
and
add
movsb
adc
xchg
das
add
insl
adc
dec
rcll
adc
mov
xchg
jl
add
adc
pop
pop
or
pop
pop
add
or
daa
dec
add
shrl
and
movl
lock
cmp
push
aam
mov
pushf
and
in
xchg
test
mov
lock
inc
inc
push
or
and
divb
add
nop
mov
sbb
cmc
push
or
or
xor
jp
pop
or
lea
push
arpl
loopne
lock
mov
mov
negb
pop
xchg
xor
or
cs
fcomps
mov
iret
dec
lods
push
dec
or
or
mov
push
sahf
adc
mov
insl
sbb
push
xchg
std
inc
cld
inc
dec
push
into
add
adc
jg
cltd
inc
or
push
sub
sbb
or
xor
inc
arpl
mov
bswap
subl
jae
hlt
pusha
pop
mov
sbb
and
cmp
stos
add
add
adc
je
cwtl
fidivs
sub
es
cmp
or
inc
mov
push
aam
andl
lret
arpl
pop
mov
cmp
cmp
mov
imul
adc
sbb
push
dec
in
lock
and
test
pop
add
mov
cmp
push
add
lock
dec
push
mov
idivl
data16
and
insl
dec
xor
dec
int
scas
or
sti
add
sti
add
test
in
add
push
push
push
cmp
cmp
and
test
dec
jp
mov
hlt
stos
ret
sub
jbe
int3
dec
push
imul
out
push
std
adc
repnz
push
push
pop
mov
je
sbb
test
push
sbb
sbb
lock
xor
frstor
pop
push
mov
sbb
pop
sub
xchg
dec
lock
and
pop
das
inc
test
or
or
mov
xchg
cwtl
pushf
cs
lret
in
movsb
test
mov
mov
pusha
rorl
cmpsl
ret
out
mov
test
xor
push
nop
and
cmp
rol
leave
jp
adc
or
scas
push
bound
push
sbb
out
and
inc
icebp
cld
xor
xor
dec
es
loope
jns
cmp
roll
daa
adc
and
dec
pusha
pop
add
adc
mov
rep
subl
add
outsb
ja
pop
sub
push
daa
or
pop
dec
sbb
adc
push
ret
int
add
sbb
scas
or
xchg
add
pop
or
mov
out
movsb
xchg
xchg
xchg
sub
add
adc
cmp
and
jmp
and
lods
sub
fiaddl
aas
out
and
mov
push
and
inc
sahf
xlat
mov
push
dec
dec
jns
out
push
push
pop
pop
pusha
mov
pusha
loop
sbb
inc
ljmp
inc
lock
rorl
and
xchg
imul
or
lret
lods
mov
add
or
and
or
jns
mov
ja
fisubl
rdtsc
or
mov
popa
sahf
into
aaa
adc
xchg
pop
std
rol
out
fs
push
pop
pushf
sub
mov
int3
cwtl
fsub
jbe
adc
iret
ror
dec
lods
xor
mov
jo
cmp
or
inc
xchg
lods
fsubrp
inc
or
push
dec
mov
xor
adc
push
push
xor
mov
sub
test
repnz
orl
mov
fimuls
sbb
mov
in
gs
bound
fs
and
jo
loopne
add
and
push
sbb
push
adc
js
rcrb
roll
test
ret
test
xchg
push
inc
adcl
cltd
adc
or
bound
or
iret
jle
add
add
xor
xor
jbe
adc
sti
dec
loop
test
inc
mov
ret
dec
idiv
xor
push
inc
fists
stos
and
sahf
int3
adc
push
popa
adc
cmpsl
jl
loopne
jge
scas
cmp
mov
dec
xchg
and
sub
push
xchg
ret
mov
fsubrs
sbb
dec
push
mov
fs
or
inc
xor
fs
and
pushf
stos
push
popa
cmp
loop
inc
pop
sbb
mov
rcr
popa
and
or
fiaddl
xchg
std
xor
gs
pop
mov
add
sbb
sti
or
stos
xchg
rcrl
sbb
or
push
test
dec
and
push
mov
test
jg
jne
or
add
cmpsl
sub
add
or
and
stos
shrl
fwait
xorb
test
cltd
popa
adc
ret
lock
pop
adc
jl
pop
lods
aaa
test
and
and
sub
sbb
cmpl
or
cwtl
loopne
xchg
aas
mov
shrl
push
sbb
decl
adc
sbb
mov
xor
jle
out
ss
pop
das
push
add
sahf
negl
push
call
push
push
add
in
mov
aas
add
add
je
js
icebp
push
inc
or
cmp
jne
push
mov
addb
inc
repz
mov
mov
sbb
xchg
pop
or
lret
ja
add
aam
and
mov
test
loopew
xchg
add
or
adc
stos
lahf
add
out
sbb
cmp
add
shrl
push
or
sbbb
push
add
pop
and
and
outsb
add
cmpsl
cmp
add
adc
add
cmp
sub
sbb
into
inc
mov
push
ftst
push
mov
cmp
inc
xchg
fwait
cmp
xchg
nop
cmpsl
sbb
in
pop
arpl
mov
cs
repnz
mov
ret
lock
sub
adc
jp
push
addr16
xchg
repz
push
insl
cmp
add
jecxz
test
inc
out
orl
les
repz
insb
ss
push
mov
pop
or
push
icebp
fistpl
mov
fnsave
push
testb
xor
repz
xor
push
push
xchg
mov
mov
stos
jl
xchg
movsl
xor
dec
and
mov
movsb
jge
xchg
pop
mov
nop
lret
rcll
in
fiaddl
mov
add
add
pop
adc
xor
xchg
test
push
out
xor
push
inc
test
mov
popa
cli
xor
adc
ret
dec
cmp
or
sahf
inc
cmp
lds
inc
add
xlat
push
push
push
xlat
push
cmc
mov
mov
sub
lods
xor
orl
inc
nop
push
jl
pop
cmp
mov
add
into
sub
mov
loope
cmpsl
dec
sub
push
and
and
jno
lcall
and
lcall
mov
mov
call
push
adc
xor
mov
pusha
or
movsl
push
in
or
xor
adc
mov
cmp
loope
scas
xchg
test
ja
outsl
jge
clc
aas
push
jle
mov
and
filds
mov
push
test
add
insl
scas
and
push
cmp
jl
mov
adc
add
mov
lret
inc
inc
cmp
jge
xchg
xor
add
lock
cwtl
out
push
add
dec
inc
movsb
push
xchg
lea
push
mov
shrb
sub
push
or
xchg
lock
aad
pop
inc
cmc
lds
adc
dec
sbb
push
cwtl
ja
jle
ss
mov
pop
push
or
sbb
les
divl
jmp
dec
lret
cmp
sbb
and
push
test
jae
adc
fwait
pusha
in
push
outsl
adc
dec
rclb
subb
pop
or
es
dec
jne
and
out
mov
jmp
pop
pop
fwait
cmp
cvtps2pi
jmp
out
mov
sub
mov
jl
mov
push
push
loopne
mov
fisubl
stc
icebp
aaa
outsl
adc
add
jo
bound
push
and
push
mov
ror
ret
sbb
inc
ret
xor
or
and
jns
loope
popa
fistpl
inc
push
push
das
and
loopne
fwait
cmp
and
sub
jb
sahf
das
stos
and
or
push
in
sub
inc
inc
inc
cs
mov
lods
mov
lods
cmc
cltd
push
fmuls
repz
pop
addr16
push
ret
mov
adc
cmp
jns
gs
outsl
or
cltd
dec
fbstp
xchg
std
xchg
add
into
lds
pop
cs
cmp
test
lret
push
movsl
addr16
xor
mov
popf
fs
insl
notl
leave
pop
or
into
mov
ss
and
imul
pop
push
cli
inc
cmpsl
push
or
sub
mov
pusha
xor
add
dec
push
lret
xchg
gs
jno
mov
lock
or
pop
call
stc
xor
les
les
or
nop
cmpsb
sbb
xchg
rolb
test
sub
or
push
imul
fmul
adc
mov
lea
scas
xor
xchg
out
lret
ret
push
cmpsl
add
xor
rolb
lea
or
mov
insb
rclb
inc
leave
add
pop
call
popf
push
xor
rclb
jnp
sub
xchg
and
and
pop
sub
mov
xchg
cmp
adc
test
adc
or
dec
addr16
adc
add
cmpb
cltd
fsts
push
pop
sahf
lret
movsl
push
adc
sahf
lret
in
push
pop
sbb
mov
push
push
adc
or
je
push
hlt
fisttps
mov
jnp
jecxz
pop
call
sbb
inc
xchg
and
adc
addr16
loop
mov
and
sbb
fmuls
inc
lea
hlt
add
adc
dec
add
stc
cmp
cmp
mov
enter
sub
roll
sub
dec
js
mov
jae
inc
adc
pop
push
jmp
fldl
sub
nop
jg
adc
push
sbb
jnp
jnp
sbb
adc
out
ficoml
insb
adc
insb
sbb
adc
pop
pop
hlt
dec
sub
push
pop
pop
pop
nop
out
shr
pop
or
popf
movsl
mov
cmp
adc
loop
shll
push
pusha
in
xchg
pextrw
test
shrb
or
xor
sarl
or
hlt
mov
sub
mov
adc
cmc
xlat
push
adc
and
xchg
push
je
and
mov
fucomp
dec
jmp
js
fimuls
xor
mov
adc
and
ss
mov
mov
cmp
movsl
adc
xor
mov
sbb
aaa
xchg
and
test
and
addr16
mov
sbb
sbb
jne
xchg
popa
or
iret
pop
xor
mov
sbb
push
int
test
cmpsl
aad
or
nop
or
dec
mov
stos
pop
cmp
jnp
xor
mov
push
push
xchg
lock
fildll
push
movsl
mov
aas
and
mov
xchg
or
fs
push
jmp
sub
movsb
out
push
xor
add
bound
jge
nop
push
in
mov
cmp
mov
hlt
dec
in
add
das
dec
mov
or
fsubs
xor
push
lock
lock
push
aaa
pop
xor
sub
xchg
in
cs
dec
xchg
mov
inc
add
adc
add
push
inc
push
mov
and
sbb
outsl
test
scas
ja
rol
int3
mov
xor
jmp
dec
ljmp
jo
adc
faddl
xor
push
iret
jl
test
popa
cmp
nop
clc
xchg
mov
repz
dec
xchg
adc
test
jne
mul
mov
icebp
addr16
mov
xor
fs
gs
xchg
cld
jo
lock
mov
daa
inc
sbb
jnp
hlt
dec
or
aam
hlt
pop
cmpl
outsb
mov
cmp
jbe
inc
cmp
jl
addr16
push
pop
inc
or
sbb
sbb
cmp
test
add
xor
cltd
lret
adc
sbb
dec
push
jae
cmp
pop
mov
add
mov
cmp
dec
xchg
adc
fiaddl
adc
std
les
add
jmp
mov
push
or
je
jl
jmp
cltd
nop
adc
rclb
enter
dec
sbb
in
pop
fdivrl
push
add
pop
or
jg
or
out
xchg
sub
mov
mov
sub
inc
sbb
pop
push
lea
hlt
repnz
sbb
rclb
sbb
lea
jne
mov
sbb
mov
add
and
xor
addr16
testb
ljmp
adc
lock
inc
outsl
aaa
add
adc
cli
rclb
mov
add
inc
sbb
push
mov
wbinvd
sub
mov
sub
stc
fadds
mov
call
cltd
pop
lahf
shlb
aaa
xchg
or
push
sahf
add
or
jne
pop
add
or
aas
sub
inc
lods
and
int3
cmpsb
dec
add
mov
in
sub
mov
add
inc
sbb
loopne
ficompl
pushf
xchg
mov
pop
adc
stc
clc
shl
inc
test
mov
or
mov
add
lea
add
loop
cli
pop
leave
cmp
inc
or
mov
inc
sbb
mov
cmp
and
in
jmp
push
or
mov
por
add
and
repnz
mov
jne
movsb
das
inc
sbb
imul
imul
dec
roll
dec
push
or
jne
adc
push
stc
and
mov
jb
clc
rolb
notl
jae
mov
movsl
sarl
imul
xchg
xchg
mov
test
inc
xchg
adc
mov
dec
push
lret
jbe
cmp
inc
outsl
mov
out
inc
push
dec
loopne
sub
pop
inc
pushf
inc
inc
cmp
cmp
inc
jmp
lock
adc
and
mov
sub
inc
int3
or
pop
adc
lds
push
push
push
xchg
pop
adc
inc
daa
mov
test
ss
lock
loopne,pt
add
cli
inc
push
sub
out
xchg
push
sub
es
sbb
add
ds
shrl
mov
into
stc
push
pop
out
inc
add
push
call
adc
mov
inc
push
add
and
vpsubw
add
repz
push
xorb
in
fs
xor
or
push
push
ret
mov
sbb
xorl
or
push
fmull
inc
cmp
pop
sbb
cld
adc
fldl
outsb
fadd
or
push
add
mov
pop
and
or
lcall
add
lea
inc
js
add
mov
sbb
jmp
jne
xor
and
rclb
movl
hlt
in
push
inc
or
inc
fisubrl
cmp
cmp
cmp
push
or
jbe
nop
and
push
dec
jl
push
ss
cmp
lods
aaa
int3
dec
jb
cmp
mov
or
push
jbe
icebp
cmp
fs
mov
cmpsb
push
stos
push
mov
xor
ret
mov
and
rclb
bound
push
push
gs
push
sub
xchg
orb
sub
adc
adc
cs
sub
inc
and
lea
push
inc
imul
pop
jnp
push
cs
adc
or
sbb
mov
or
sbb
out
add
pusha
aam
add
and
cld
pop
or
pop
pop
sub
pop
insb
pushf
orl
stc
push
mov
enter
cs
inc
sbb
inc
mov
add
or
and
aam
mov
out
add
loop
cmpsl
sbb
cmp
sarb
loope
sub
outsl
das
dec
sub
loopne
shll
je
or
push
pop
ret
dec
add
xchg
jp
subl
inc
lea
sahf
ja
jmp
and
xor
pop
or
or
pop
fldl2t
push
movsb
pop
jge
dec
stos
xchg
dec
insb
dec
mov
js
out
xlat
pushf
xchg
loopne
lret
jmp
pop
xor
sbb
sbb
lock
shll
jbe
aaa
cmp
loop
add
gs
xchg
cmp
inc
call
push
add
add
xlat
pusha
loopne
xchg
push
xchg
jb
pop
iret
xor
enter
outsl
pop
das
sbb
push
mov
or
insl
decl
adc
or
mov
cmp
inc
pop
jg
mov
ljmp
enter
push
inc
adc
dec
inc
push
and
jns
shll
add
out
inc
or
mov
pop
das
mov
andb
clc
mov
add
enter
jo
xor
addr16
add
add
clc
push
imul
cmp
and
enter
or
push
and
aam
pop
push
movb
popl
inc
push
jmp
jo
mov
cmp
or
int3
adc
rcr
adc
cmp
bound
aaa
sub
xchg
sbb
sub
or
or
js
jnp
and
sbb
xor
lretw
out
mov
sub
and
xchg
push
fdivl
in
jge
inc
sbb
dec
sub
bndstx
mov
test
rcrl
adc
add
cmp
mov
movb
sbb
and
jmp
xor
ja
je
sub
cmpsl
sbb
out
lahf
rcrb
lods
cld
in
xchg
into
testb
imul
lcall
add
pop
pop
cli
and
in
mov
jne
jmp
aaa
std
xor
jge
loope
pusha
fucom
cmp
fstps
cmp
add
ja
mov
test
push
sub
aam
ret
fldt
inc
mov
add
jo
sub
clc
pop
pop
add
jmp
lock
pop
xchg
enter
outsl
add
cmp
push
push
and
nop
dec
lahf
outsb
push
divl
push
cmp
xor
sub
sete
dec
sbb
mov
push
loop
dec
popa
arpl
outsl
mov
dec
jne
inc
xor
xchg
pop
clc
jl
mov
cmp
jmp
push
sbb
mov
push
scas
push
and
and
mov
sub
mov
push
inc
mov
aaa
movsl
xorb
js
sub
arpl
ret
dec
jmp
push
fs
mulb
push
push
add
pop
inc
dec
sbb
sub
add
jo
int3
pop
testl
es
sub
dec
adc
xchg
aaa
je
adc
nop
dec
icebp
add
dec
js
xlat
cmpsb
mov
movsb
jle
xchg
jmp
mov
xor
and
push
cs
cmp
fbld
push
xchg
ds
or
add
dec
add
jb
mov
out
insb
roll
sti
xchg
add
sub
dec
js
daa
inc
mov
xor
push
popa
push
rcr
test
adc
fdiv
pusha
adc
addb
and
push
pusha
sbbb
mov
push
imul
pop
sbb
hlt
xor
lret
pop
rolb
add
test
pop
or
mov
jl
cmp
fmul
xor
nop
add
jo
sbb
xor
das
je
je
adc
pop
popa
or
sahf
inc
mov
ja
push
cmp
xchg
movsb
shrl
push
jge
fsubrp
sub
and
and
sub
or
test
xlat
or
sbb
or
lea
mov
pushf
repz
push
iret
aas
cmp
sub
mov
dec
mov
out
xchg
mov
andb
dec
xchg
test
ds
dec
adc
movsb
mov
jmp
jne
adc
jne
inc
testb
lds
or
insb
popl
adc
push
sub
and
or
sub
dec
cwtl
and
jnp
cmp
push
aaa
ret
push
repz
mov
xchg
les
leave
nop
xchg
cwtl
into
inc
jecxz
repnz
inc
clc
dec
gs
sub
xchg
sub
std
jl
xchg
scas
dec
xor
or
xor
and
mov
or
dec
or
shlb
xor
mov
mov
js
xorb
dec
mov
insb
and
mov
insl
mov
inc
or
cs
jl
xorl
repz
mov
mov
add
sbb
adc
enter
fs
mov
insl
std
add
into
rorb
mov
mov
push
addb
data16
out
inc
mulb
mov
popa
or
cmpsb
dec
jbe
sbbb
and
jecxz
aaa
adc
movsb
mov
js
mov
mov
imul
test
adc
sbb
pop
mov
pop
add
mov
sub
mov
xor
ljmp
nop
cwtl
nop
sub
mov
cmp
inc
fistpll
mov
and
out
xor
mov
mov
mov
les
push
cmpsb
out
xchg
gs
sbb
insl
movsb
sub
jno
push
sbb
dec
lret
dec
xor
lret
ja
icebp
inc
lods
fs
shlb
sbb
jo
mov
fistpl
xchg
xor
jo
aaa
or
in
movb
sbb
ret
movsb
test
mov
sahf
dec
dec
dec
inc
pop
add
add
cs
mov
adc
jne
sbb
jle
pop
or
test
push
cwtl
enter
push
mov
ds
jmp
adc
lret
sbb
sbb
dec
xchg
or
push
imul
movsl
mov
inc
and
pusha
dec
pop
and
inc
insl
outsl
push
pop
sbb
inc
pusha
xor
iret
xchg
fcoms
int
sti
jg
nop
mov
push
push
jg
push
insb
ds
xor
lcall
bound
xchg
xchg
or
add
or
jecxz
rcrb
inc
jg
push
sbb
add
pop
pop
sub
ja
xchg
fisubrl
push
cmp
push
inc
or
xchg
cmpsb
sarb
or
adc
sub
test
sbb
sub
imul
push
insb
clc
sbb
stos
or
inc
mov
adc
xor
aam
popa
mov
pop
push
loopne
inc
pop
or
shrb
in
adc
add
pusha
xor
add
hlt
dec
pusha
sbb
dec
cmpl
jo
cld
add
push
add
add
hlt
aaa
mov
mov
popf
adc
out
and
adc
sbb
sub
add
xor
push
lret
call
xor
jne
jp
add
xchg
testb
add
adc
in
pop
cmp
inc
in
mov
add
push
int3
stos
nop
pop
aam
mov
decb
test
mov
cltd
cli
rorl
lret
dec
or
pop
push
leave
mov
add
aas
pusha
add
inc
sbbl
xchg
adc
adcl
nop
or
mov
daa
jne
and
mov
mov
bound
adc
dec
jl
sub
orb
aaa
mulb
aad
push
les
es
mov
push
sbb
rcll
inc
ss
xor
push
sub
and
dec
xchg
mov
mov
sbb
or
js
sbb
ss
mov
add
sub
lret
les
xchg
or
mov
ffreep
je
push
rorl
inc
dec
arpl
jmp
push
push
inc
idiv
mov
rcll
dec
add
add
mov
fadd
mov
pop
and
mov
or
fs
xchg
inc
or
les
insb
jns
adc
xlat
insb
cmp
movl
mov
xchg
scas
mov
push
scas
xor
cmpsl
jb
push
add
push
dec
or
push
dec
push
je
sub
sbb
mov
sub
fcomps
or
cs
inc
sbb
cs
jnp
pop
push
or
shlb
push
jmp
sub
ret
adc
jb
inc
push
lods
inc
std
adc
test
sub
add
add
or
fcmovnu
and
add
xchg
sub
dec
xor
push
loopne
and
pop
jno
inc
and
lods
inc
je
dec
aad
scas
std
mov
ds
push
inc
mov
and
sbbl
push
lock
das
jne
add
aad
dec
sahf
or
cmp
pop
push
add
or
mov
es
or
inc
push
out
lock
xor
xchg
xor
cmp
sbb
jne
xor
mov
jp
jmp
ret
push
xor
jecxz
or
and
shl
inc
adc
or
or
and
sub
mov
test
or
test
adc
sub
add
scas
add
ljmp
lds
push
or
cmp
xor
aam
jbe
sub
inc
jno
fcoms
js
dec
in
jge
adc
pop
popa
push
push
sbb
dec
jle
cmp
or
xor
inc
push
push
inc
xorb
ret
test
roll
loopne
pop
mov
or
push
inc
sbb
in
lea
sbb
mov
lock
ds
sub
xchg
out
sbbl
ffreep
mov
mov
subl
fistl
icebp
sbb
adc
jge
lea
enter
loope
push
push
fistpll
cmp
pop
pop
adc
mov
aam
rcl
push
xor
cmp
pusha
loopne
or
adc
add
scas
rcr
aaa
stos
mov
push
stos
je
xchg
movsl
imul
pushf
int
sbb
cmpsb
stc
push
lods
lods
pop
wbinvd
clc
mov
add
cmpsl
xor
pop
xchg
test
addr16
nop
ds
sub
aas
sbb
xor
lods
sbb
inc
add
adcl
pop
push
ss
insb
ds
imul
cmp
imul
mov
pop
repnz
and
add
push
add
add
add
std
and
push
or
jne
pop
repnz
les
add
mov
sub
xchg
mov
xor
rclb
xor
dec
aam
pop
iret
lret
or
jle
hlt
stos
push
gs
and
cmp
or
lods
mov
push
sbb
add
xor
push
push
xchg
cmp
fistl
in
test
sbb
xchg
sbb
loope
orb
cltd
in
imul
pop
lcall
in
inc
out
dec
and
sub
inc
daa
mov
insl
add
push
rorl
mov
mov
mov
push
enter
add
arpl
mov
push
in
movsb
pop
add
aaa
cmc
nop
jnp
lods
adc
test
shlb
lahf
add
or
cmp
or
out
fstpl
push
mov
or
and
stos
cmp
mov
xor
ds
mov
jl
push
cli
cmc
push
fimull
sbb
mov
in
mov
clc
push
shr
pop
out
and
pslld
loopne
je
outsb
cmpb
sub
push
pushf
stc
xchg
testl
push
mov
mov
add
xorb
inc
adc
mov
or
sub
sub
call
mov
mov
or
adc
jl
icebp
pusha
shlb
ja
arpl
jp
add
sub
pop
push
push
daa
scas
cmp
push
sub
test
adc
cmp
adc
push
inc
add
sbb
mov
xchg
xchg
lret
cli
xor
nop
mov
icebp
jmp
pop
jae
mov
mov
xchg
mov
mov
repz
pop
xor
addb
popa
jl
cmp
and
outsl
ret
xchg
aas
andl
mov
cmpsb
lock
inc
and
inc
push
pop
lods
inc
or
fwait
sbb
sbb
xor
mov
fs
pop
inc
add
inc
adc
lret
int
jo
sahf
mov
jb
leave
or
mov
inc
xor
mov
add
out
out
dec
notl
call
add
pop
stos
loopne
mov
xor
mov
mov
pop
cwtl
sbb
mov
in
push
inc
mov
inc
add
add
mov
xchg
rolb
in
add
sbb
in
addr16
inc
add
or
cmp
jae
ret
cwtl
les
or
mov
sbb
sbb
mov
jbe
imul
cmpsl
ret
test
and
xchg
push
pop
mov
add
and
cld
or
cwtl
push
lcall
or
sub
push
loope
push
adc
test
sahf
stos
fiaddl
inc
mov
out
push
aad
dec
orl
rcr
rorb
call
fs
or
js
xchg
adc
out
lret
js
pop
sbb
fwait
and
outsb
fstl
add
adc
js
into
adc
les
testb
sbb
jne
jo
pop
adc
jne
sub
jl
and
xchg
inc
inc
mov
out
je
push
mov
jno
je
aam
mov
mov
in
xchg
js
rcr
xchg
inc
stos
push
mulb
sub
adc
outsb
insl
enter
fdivrl
ret
sahf
ljmp
push
in
sarl
ret
das
adc
imul
adc
mov
lret
pop
xchg
mov
shl
movsb
mov
add
stos
mov
mov
pop
adc
pop
jmp
or
push
mov
loope
sarl
cmp
and
pop
test
mov
cs
fwait
decl
push
jmp
arpl
add
mov
mov
and
pusha
dec
gs
and
or
loop
pop
popa
jns
pop
fimull
rorl
cld
push
or
or
push
inc
in
mov
push
push
sti
push
jmp
cltd
pop
test
cmp
dec
ret
mov
jno
mov
or
jmp
mov
mov
adc
adc
and
out
adc
loopne
add
mov
mov
sbb
lods
mov
sbb
xchg
push
cmp
push
inc
stos
leave
dec
dec
lock
sbb
push
idivl
mov
add
inc
push
xchg
lcall
cmp
push
push
inc
divb
inc
test
loop
out
sqrtps
inc
xor
add
int
fsubrs
sub
mov
add
pop
or
and
push
and
mov
mov
enter
mov
mov
jg
xor
push
mov
nop
mov
cli
mulb
or
push
push
inc
call
dec
je
dec
jne
scas
push
fistpl
incl
mov
rcl
clc
push
pop
or
push
ja
sbb
outsb
out
or
insl
mov
loope
mov
out
sub
push
out
xor
movsb
lock
add
ret
mov
pop
pusha
xor
xor
sub
fistpl
rclb
sub
lds
fadds
or
add
rolb
mov
pop
jo
dec
jo
aaa
loope
adc
inc
push
push
sbb
jne
mov
xchg
mov
sub
ja
push
insl
xchg
inc
js
or
std
out
pop
pop
xor
xchg
mov
mov
call
sbb
outsb
iret
xor
enter
add
pop
xor
test
stos
inc
and
sbb
adc
outsb
pop
mov
daa
ret
and
adc
inc
sbb
add
shrb
adc
sbb
or
mov
mov
cmp
push
push
xchg
inc
xchg
cmc
sbb
jns
out
aas
lock
jnp
fst
in
or
prefetch
outsl
add
movsl
nop
stos
push
repz
mov
xor
lahf
nop
fnstenv
jl
lock
push
jp
jae
popa
int3
rorl
pop
out
rcrb
mov
adc
add
dec
and
jae
dec
xchg
test
mov
push
test
mov
mov
mov
mov
jnp
lea
lcall
pop
jle
fdiv
stos
xchg
insb
xchg
push
adc
hlt
rolb
jge
int
jl
sti
cmpsb
pop
shll
mov
jp
sbb
inc
repz
xchg
cmp
xor
jecxz
in
xor
pop
mov
andl
add
test
inc
nop
push
arpl
adc
insb
add
pusha
mov
xor
inc
sbb
insb
xlat
xor
test
jb
pop
pop
ret
xchg
lea
es
lock
or
outsl
jg
mov
xlat
mov
mov
lods
mov
outsb
xor
int3
jl
add
jns
mov
daa
test
test
push
pop
adcb
xchg
lahf
aaa
xor
movsl
pop
sub
mov
jmp
add
dec
pop
mov
and
dec
jl
imul
add
leave
lods
or
cwtl
or
mov
push
rcl
xor
push
movsb
jne
mov
imul
mov
clc
xor
or
shll
fwait
shrl
inc
loop
lahf
arpl
in
push
inc
or
and
arpl
test
leave
jle
cmp
mov
pushf
dec
in
sahf
xor
jns
repz
and
cli
pop
mov
xor
push
cmp
xchg
lea
xchg
mov
aas
jb
gs
push
adcl
cltd
lahf
cmp
pop
xor
cwtl
xor
and
adc
rorb
adc
sub
mov
in
test
mov
add
mov
lds
cmp
call
xchg
or
sahf
sbbl
inc
add
icebp
pop
or
xor
rorl
pop
sbb
mov
roll
mov
test
pop
and
sbb
test
add
add
mov
adc
push
dec
std
sbb
cmp
cmp
aam
adc
push
jbe
jo
add
push
inc
sub
xchg
adcl
inc
insl
add
add
dec
cmp
inc
js
xchg
or
ss
or
fs
sub
mov
push
push
fsubrl
sbb
or
or
addb
jb
push
adc
in
add
pop
jae
pop
repz
sub
xchg
fisubrs
iret
jge
xchg
fxch
or
xchg
pop
shr
arpl
daa
aad
mov
dec
ljmp
lock
xor
fnstcw
pop
add
or
aas
fstps
fisttpll
andl
int
lea
testl
push
adc
fists
sbb
adc
scas
adc
adc
lea
jmp
aad
or
pop
jmp
cmp
je
mov
mov
sub
sub
aas
cwtl
add
imul
pop
push
ds
pop
xorl
add
jge
xchg
bound
jnp
and
add
inc
pop
xor
out
push
das
inc
push
js
rorl
test
rorl
cmp
or
shlb
loope
push
mov
or
test
adc
inc
mov
sbb
add
adc
xchg
and
and
sahf
adc
ja
push
int
inc
xor
and
inc
in
shlb
out
mov
rclb
pop
cmp
lcall
or
cmp
add
fisubrs
insb
dec
std
jmp
push
cmp
repz
jno
jg
aam
fiaddl
jmp
test
adc
enter
and
or
mov
sbb
mov
pop
and
mov
and
and
cld
mov
push
cmp
push
push
out
xor
ret
out
bound
add
jb
mov
push
cmp
pop
adc
fcomp
fiadds
inc
faddl
fcoms
lahf
adc
push
mov
push
add
xchg
xor
scas
add
pop
nop
jp
rcll
push
mov
xchg
dec
arpl
push
or
jb
dec
adc
rcll
mov
push
sbb
mov
cmp
es
xor
inc
lret
shrb
jmp
mov
or
les
sbb
and
clc
or
sbb
test
sbb
jne
jb
roll
rcrl
sbb
push
scas
cs
test
or
in
das
or
adcl
push
cltd
dec
mov
mov
or
lods
cltd
imul
stos
and
icebp
imul
fiaddl
imul
mov
adc
loope
je
cld
sub
add
push
dec
xchg
sbb
xchg
and
les
gs
adc
pop
daa
mov
or
sub
insb
out
push
adcl
or
ja
mov
rol
sub
movsb
jmp
dec
add
adcb
sub
xchg
jnp
orb
imul
in
shl
mov
hlt
add
dec
xor
mov
add
stos
sub
xor
cmp
mov
and
jg
add
push
and
shlb
fildl
jo
loope
lods
dec
in
lahf
adc
insb
fs
and
jae
or
inc
and
gs
inc
ja
inc
inc
jne
add
or
add
inc
rclb
jo
xor
mov
or
fidivrl
dec
test
mov
aam
add
xchg
cmp
xor
clc
call
movl
rcrl
jmp
add
mov
xchg
dec
xor
lahf
push
ficomps
add
and
mov
or
int3
mov
loop
data16
push
sbb
jnp
xor
adc
push
in
inc
rorl
rcrb
mov
cmp
sahf
inc
daa
sbbl
push
hlt
lcall
push
out
xor
dec
ret
push
push
mov
es
and
push
xor
shll
movsb
push
sahf
lods
addr16
add
and
inc
gs
rorb
sub
cs
push
push
and
push
and
sub
loopne
rol
dec
lss
test
pop
jne
dec
ret
dec
jle
rcr
pop
xor
push
cld
adc
mov
and
repnz
jb
incl
test
jo
adcb
cld
out
loope
push
jg
add
test
mov
notl
xchg
cmp
fcmove
ret
fcmovb
dec
or
and
and
fnstenv
mov
mov
mov
cmpsb
mov
adcl
dec
insl
adc
sbb
mov
cmp
adc
hlt
hlt
sub
pop
clc
or
lret
enter
lock
into
or
pop
lods
in
inc
clc
jg
push
sbb
fiaddl
add
push
sbb
cmp
mov
xor
shr
mov
mov
sbbl
dec
in
iret
cs
or
jbe
imul
cmp
cld
lock
cmp
int3
dec
int3
les
lock
cmp
sbb
mov
dec
sub
sbb
sbb
dec
lods
je
mov
dec
jo
into
mov
aam
add
and
jno
cli
ds
push
jb
jne
adcl
jo
insl
adc
sub
dec
sbb
pop
pop
jge
push
jne
into
mov
sbb
lods
adc
shrl
cmp
jmp
jmp
mov
cwtl
pop
test
xchg
dec
and
test
xchg
subb
enter
inc
out
add
jp
pop
shlb
sbb
or
push
es
daa
add
pop
inc
gs
push
inc
inc
adc
mov
mov
jle
std
mov
xchg
daa
pusha
std
pop
xlat
xchg
jl
imul
push
and
pinsrw
mov
aam
jo
or
adc
sbb
sbb
imul
cwtl
or
sub
sub
scas
inc
xor
jle
outsl
sub
ds
inc
mov
mov
pop
les
shlb
pop
pop
lret
enter
mov
mov
push
cli
sub
ss
stos
subb
add
aam
push
jns
sbb
jo
test
cmp
or
pushf
pop
xchg
xor
mov
lea
or
shll
pop
lret
mov
mov
daa
rcl
or
inc
xchg
popf
insb
in
aam
test
rol
sbb
push
mov
xchg
add
in
inc
or
in
scas
and
inc
dec
scas
in
dec
pusha
in
scas
in
jl
scas
in
scas
cwtl
test
lods
fildl
and
add
iret
repz
xor
xchg
test
iret
repz
shl
insb
mov
adc
or
test
aas
push
jecxz
jne
pop
les
adc
cld
andb
inc
dec
sbb
sbbb
das
push
jmp
lahf
mov
call
lahf
dec
ret
xchg
or
sub
aam
imul
daa
xchg
adc
cmpsb
jl
xchg
sub
add
ret
mov
mov
rorl
rorl
les
icebp
bound
imul
jle
insl
mov
sub
insb
or
test
sub
push
xchg
jbe
mov
mov
subb
xchg
lods
jle
and
mov
aam
mov
add
push
or
int
push
mov
add
popf
inc
sub
sub
push
sub
jg
dec
lock
leave
xor
mov
sbb
rolb
xchg
ljmp
neg
rol
icebp
jp
sbb
cmp
sbb
jbe
lret
int3
cmp
dec
in
insb
je
jle
outsb
fildl
sub
mov
lds
rol
or
stos
sbbb
or
dec
scas
clc
sbb
mov
add
rcl
sti
push
add
mov
inc
sbb
push
and
rorl
lea
stos
insb
lret
jb
std
js
leave
cmp
stos
push
cmp
add
cmpsl
add
out
cltd
sahf
outsb
popa
adc
cmp
jo
clc
loopne
insl
hlt
ffreep
dec
mov
push
loopne
pop
sub
add
add
add
adc
push
and
pop
loopne
or
push
xor
push
test
adc
add
push
test
cwtl
cmp
push
adc
das
push
adc
dec
fidivl
push
pop
xchg
sbbb
xor
je
jno
xchg
rorl
xor
push
xor
mov
lods
mov
sub
shrb
iret
cmp
jp
out
lods
jmp
adc
shlb
jg
or
mov
aad
adc
jg
pop
test
push
popf
adc
shlb
ljmp
inc
loopne
add
sbb
test
scas
data16
mov
push
movsl
out
loop
and
lods
push
add
pushf
cmp
mov
mov
daa
iret
leave
jae
cmpl
enter
leave
or
rolb
aam
fadds
cmp
iret
faddl
loopne
in
add
xchg
call
or
adc
jp
ret
and
loopne
call
clc
sbb
lods
je
inc
mov
jle
mov
imul
add
inc
test
dec
add
movb
cmp
pushf
sbb
jle
add
and
push
pop
add
into
outsl
and
lods
in
shrb
inc
imul
xchg
or
jne
lea
addl
sub
nop
dec
pop
lock
mov
rorb
orl
or
pushf
dec
xor
and
mov
js
mov
adc
mov
jb
das
repnz
insl
fdivrs
add
movsb
jmp
dec
repnz
daa
fwait
cmpsl
and
push
dec
adc
push
jb
dec
push
jp
xor
mov
arpl
test
pop
orl
adc
xor
cld
jne
insl
ljmp
cld
mov
push
dec
pushf
and
mov
adc
push
das
push
mov
add
daa
xor
push
jns
add
sar
stc
mov
sbb
add
out
cmp
push
mov
mov
in
jns
popf
push
and
or
or
sub
lods
lds
and
mov
negl
mov
xor
arpl
or
push
dec
and
into
sub
push
push
dec
inc
pop
adc
xorb
fadds
pop
push
fwait
pushf
add
addr16
rcrb
leave
hlt
push
daa
sarb
or
mov
push
fisttpl
lock
pop
add
ret
push
pop
sbb
xchg
decl
xor
inc
mov
adc
into
push
sahf
sub
ror
push
std
into
rcl
cmpsb
ficoms
add
lret
pop
pop
push
ret
data16
or
inc
rorl
sbb
and
fadd
push
jp
outsl
cmpsb
sub
lods
mov
pushf
gs
dec
xchg
pop
mov
lds
add
in
addl
push
or
test
sbb
shrb
push
inc
orl
or
dec
and
pop
sbb
imul
add
imul
pusha
add
or
jbe
inc
mov
pop
mov
out
mov
out
sbb
lock
and
mov
or
mov
cld
je
add
xchg
jbe
mov
daa
jnp
movsl
push
popa
inc
push
mov
and
clc
or
add
sbb
or
rorl
push
mov
je
movsl
mov
loope
je
inc
fs
lock
jnp
loopne
adcb
mov
or
push
adc
cmp
fistps
addr16
fcompl
outsl
adc
lock
in
sti
stc
jbe
daa
hlt
pop
jb
ja
xchg
lock
ja
outsl
pop
test
imul
and
and
sub
sbb
cmp
movsbl
add
mov
add
pop
add
push
fiadds
push
pop
lock
xchg
cmpsb
rorb
and
in
fsubl
nop
xor
adcb
push
adc
pop
dec
loopne
in
and
repz
hlt
lock
movb
adc
cmpsl
add
pshufw
aas
xor
in
loopne
jge
into
lds
gs
xchg
fistpll
push
std
cmp
aas
push
xchg
xlat
sbb
inc
xchg
loope
lcall
scas
or
jo
popf
sti
or
add
add
push
imul
and
mov
push
xor
jb
cld
push
aam
push
push
push
push
push
mov
jge
jge
adc
lods
and
mov
add
inc
inc
dec
push
and
inc
and
or
or
mov
and
xchg
sbbl
add
push
cwtl
inc
mov
insl
in
cmpsb
mov
and
sbb
jl
xor
mov
sub
test
loope
sub
xchg
call
push
cld
sub
push
sub
or
sub
add
rolb
or
push
loop
fcoms
cmp
push
xor
sub
add
xchg
fdivrl
and
rcrb
lea
inc
mov
or
inc
dec
and
fwait
aaa
test
jl
xor
and
or
mov
push
adc
lods
in
jmp
stc
and
mov
loope
clc
sub
daa
and
jg
jno
and
ret
pop
adc
cmp
push
out
push
xchg
push
and
movsl
add
push
insl
call
cli
inc
outsb
lods
mov
add
js
mov
push
mov
rcl
pop
fcoml
bound
roll
test
leave
lret
addl
push
pop
sub
das
cmp
inc
sub
inc
and
push
aaa
add
fs
or
test
adc
mov
pop
or
adc
jle
ljmp
and
repnz
cmp
orb
adc
pop
dec
xchg
out
sub
pop
adc
ret
adc
aaa
or
xchg
ss
add
xchg
adcb
sub
xchg
rorb
add
lret
cmc
rcrb
push
idivl
pop
aad
sbb
or
pop
mov
xor
jge
cs
cmp
jne
add
add
or
js
call
testl
inc
mov
and
rcll
mov
inc
ror
or
insl
popf
xor
sbb
sbb
or
sub
add
cmc
lds
pop
mov
dec
xor
inc
mov
inc
push
sbb
mov
adcl
fwait
jno
imul
daa
jp
imul
push
stos
fwait
bound
adcl
mov
ret
pop
add
jbe
dec
fimuls
mov
mov
das
add
mov
call
xchg
add
inc
sub
add
leave
xor
mov
pop
adc
inc
outsl
dec
jne
jne
sub
pop
pop
pop
add
mov
out
jb
lcall
xchg
push
js
lods
outsl
dec
outsl
sub
mov
jo
or
mov
or
js
mov
mov
jne
xchg
sbb
add
arpl
push
dec
stos
aaa
scas
or
stc
cwtl
xlat
mov
addb
lret
int3
mov
push
push
or
jp
cmp
or
fstps
sbb
repz
ja
rolb
mov
popa
jae
jb
pop
dec
add
pop
adc
sub
add
sbb
push
jb
das
into
adc
adc
loope
xchg
lea
push
dec
adc
lods
add
and
ret
fildl
leave
iret
push
and
mov
jne
gs
fs
lcall
loopne
push
cmpsb
cmpsl
ret
push
push
lea
inc
mov
inc
stc
push
mov
add
pop
ja
fists
and
sbb
outsl
loop
cltd
mov
inc
sub
popf
std
push
pop
sub
push
mov
je
sbb
pop
pusha
lods
dec
sbb
ret
ret
repz
or
popf
mov
dec
add
jne
xor
lods
cmp
add
pop
xchg
push
pop
mov
and
test
add
inc
test
dec
push
or
ror
shlb
mov
xchg
push
mov
dec
push
les
and
add
fnstsw
dec
and
mov
cwtl
cmp
outsl
fstl
inc
fmull
add
inc
pop
stc
into
cmp
xor
push
bnd
push
aaa
fldl
out
jb
dec
and
aad
push
sub
add
and
push
add
add
leave
cmp
ror
aas
push
sub
pop
fcom
dec
add
adc
clc
jns
add
and
sub
lds
dec
adc
push
mov
xor
push
arpl
imul
add
loopne
pop
cmpsl
push
sub
mov
cltd
orb
dec
or
movsb
lea
movsl
cmpsl
mov
sbb
add
add
or
inc
adc
test
push
je
es
in
repnz
xchg
mov
sti
mov
cmp
test
and
xor
imul
out
ficoms
mov
inc
lock
pop
aam
faddl
or
lcall
es
mov
add
es
in
sub
sarl
mov
cmp
test
lds
mov
xchg
jno
pusha
mov
inc
mov
dec
xor
inc
or
mov
nop
test
mov
or
dec
ficomps
dec
sbb
inc
add
fisttps
jb
dec
cwtl
jg
push
and
mov
mov
pusha
push
lods
ds
cltd
idiv
outsb
or
sbb
imul
xchg
xor
inc
imul
shll
push
test
loope
dec
sbb
adc
xchg
into
xor
sbb
sub
add
adc
ficomps
shlb
mov
or
mov
and
leave
inc
mov
leave
inc
leave
inc
jb
leave
inc
leave
inc
cmp
movb
inc
adc
iret
les
pop
mov
mov
adc
aas
add
jmp
or
add
sub
inc
dec
add
adc
and
das
sbb
inc
jecxz
add
push
hlt
fldz
xor
push
outsl
pop
mov
adc
test
adc
cltd
xchg
sti
xchg
mov
aad
sub
jne
ds
fwait
inc
mov
xor
cld
test
das
ljmp
lret
push
cmpl
pop
jge
inc
sbb
xchg
adc
cli
add
pusha
jo
stos
stos
xchg
pusha
inc
nop
inc
rolb
or
aas
jbe
fildll
jmp
mov
add
jmp
les
faddp
leave
adc
ret
mov
call
push
test
dec
pop
stos
push
pop
fwait
cmp
push
negl
js
push
mov
pushf
sbb
out
mov
push
push
fstpt
xor
mov
movsl
adc
inc
movsl
add
es
push
das
test
jle
jb
test
and
pop
mov
loop
or
sub
loopne
mov
js
push
adc
es
or
mov
je
lds
lods
jle
cli
sahf
inc
pop
or
or
and
or
adc
cmpsb
gs
push
cmp
mov
and
inc
pop
push
adc
cmp
mov
push
addb
add
jp
mov
dec
mov
push
cld
shl
push
mov
lret
dec
and
or
es
lock
mov
dec
jmp
not
lret
jge
arpl
mov
sub
dec
loope
sbb
and
or
bound
or
js
push
fsubl
test
fbstp
outsb
pop
push
shrb
adc
mov
je
sub
push
jge
es
pop
test
push
jns
push
push
xor
addb
mov
jmp
add
add
adc
aas
adc
or
mov
jp
jbe
gs
sub
sub
jb
dec
rcll
ret
inc
lea
jg
adc
pop
add
pop
orb
sub
rorl
insl
and
mov
adc
sahf
jno
jae
xchg
mov
cmpsb
xor
ret
je
push
push
inc
adc
adc
lds
movsl
pop
cmp
adc
add
sub
movl
scas
and
push
roll
dec
sub
inc
mov
iret
shll
push
pop
aam
mov
shll
adc
dec
add
pop
cmpsb
mov
cs
or
jp
ret
sbb
pop
sbb
stc
lods
arpl
das
sbb
xchg
jp
int
xor
lods
insb
xchg
hlt
jge
aas
pushf
daa
push
jne
hlt
test
jle
mov
loope
adc
mov
movsl
dec
cmp
dec
or
xchg
or
sub
daa
mov
sub
fildll
pop
cmp
repnz
cmp
or
jp
xchg
lock
outsl
and
mov
repz
cmpsl
xor
fmuls
mov
lea
call
ds
pop
shlb
cmc
movzbl
xchg
push
jmp
sub
sub
adc
pop
lods
xchg
dec
addr16
dec
or
adc
cmpsl
lret
aaa
adc
jmp
mov
or
mov
push
xor
mov
sub
or
add
mov
jge
and
dec
pop
add
popf
mov
cmp
daa
sub
and
shll
or
jge
js
lea
mov
add
xchg
add
cmp
je
sbb
ret
xor
loopne
cmpsb
xchg
popa
push
lods
lods
lds
fwait
or
rolb
mov
add
dec
idivl
mov
xorl
or
rcrb
imul
and
insb
add
adc
sub
int3
push
fiadds
lea
cmp
movsl
lods
adc
adcl
lret
dec
xor
xchg
aam
cmp
and
or
jo
jne
es
js,pn
or
aad
pop
or
ret
pusha
test
add
jl
pop
sub
or
cmc
add
jno
add
cmp
aad
or
jl
jl
and
sbb
jo
pop
leave
test
xor
inc
mov
add
cmp
jbe
cmp
push
std
or
jno
scas
and
adc
cli
or
daa
mov
decb
lods
mov
xor
js
outsl
lds
mov
push
iret
lret
jbe
jo
inc
cmp
cmpsl
inc
jbe
and
imul
mov
arpl
sbb
insl
rcl
xor
ss
inc
inc
aas
clc
adc
add
jp
adc
iret
sub
mov
loop
hlt
or
jo
jnp
enter
call
dec
popa
or
aad
add
call
mov
sub
sbb
sbb
push
push
inc
bound
mov
mov
push
dec
add
xchg
xor
into
imul
push
dec
xchg
mov
sbb
test
sbb
mov
pusha
clc
and
sbbb
push
sbb
add
and
sbb
fistps
xchg
and
inc
fcoms
push
push
xchg
scas
mov
lds
hlt
pop
pop
lcall
or
inc
addr16
inc
or
out
mov
add
cltd
pop
mov
clc
mov
mov
pop
mov
xlat
icebp
insl
rol
fldl
sbb
fsub
pop
cli
sub
push
mov
sbb
es
sbb
sub
add
sbbl
nop
orl
std
mov
mov
nop
add
lret
cmpsl
inc
inc
pop
push
jae
dec
hlt
popa
lods
mov
lret
add
sahf
sti
cmpsb
or
imul
inc
popf
aaa
nop
or
cwtl
rclb
rcll
jns
mov
nop
test
aas
jg
dec
and
or
inc
add
clc
int3
pop
test
cld
xchg
push
shll
movaps
jbe
sbb
push
pop
lock
dec
sbb
clc
add
andb
add
push
sbbl
addr16
or
aaa
adc
xchg
push
roll
loope
mov
jns
adc
cld
lods
push
and
pop
sahf
xor
dec
jp
loopne
int3
push
testl
mov
mov
leave
inc
aad
add
mov
adc
sbb
dec
xor
xor
cmc
sbb
mov
and
cmp
push
push
pop
jnp
sahf
jae
mov
push
inc
mov
and
mov
lods
or
xor
mov
push
add
mov
mov
add
jbe
inc
adc
lods
pop
pop
es
adc
fs
jge
inc
icebp
push
aaa
and
lahf
cmp
lcall
mov
mov
mov
and
daa
cmp
add
jb
movl
add
movsb
dec
ret
loopne
pop
int
add
cs
and
mov
popl
and
cmpl
xor
push
vmovups
push
or
imul
js
sbb
dec
dec
loopne
jne
adc
mov
dec
cmp
fwait
sub
xchg
in
enter
cltd
xor
dec
inc
or
fs
and
add
ljmp
loop
outsl
imul
jno
addb
mov
loopne
jo
adc
dec
sub
mov
dec
mov
inc
push
add
cmpsl
mov
push
mov
hlt
cmp
sub
bound
stos
jnp
jns
test
mov
ja
or
rol
mov
cmp
xchg
repnz
cld
add
xor
mov
sub
add
pop
repnz
or
add
add
popa
pusha
shl
arpl
push
int
push
cmp
or
aas
addb
out
xchg
outsl
inc
and
inc
sbb
jne
jge
adc
mov
xor
mov
sbb
mov
ss
out
add
fldt
iret
add
lods
or
int
add
movsl
sub
outsb
imul
mov
mov
sub
in
outsl
int3
push
and
pop
or
cs
add
cmp
jp
mov
popf
xor
adc
ret
inc
pop
adc
incl
cmp
inc
adc
rcl
es
pop
add
lods
xor
push
outsb
sbb
mov
sbbl
enter
and
lds
adcb
jno
xchg
int
hlt
push
jle
hlt
shl
in
push
fcmovnbe
add
pusha
pop
xor
inc
ljmp
mov
adc
adc
or
inc
lods
pop
cmp
adc
out
sbb
dec
inc
xlat
cs
jno
push
pop
cmp
es
inc
sbb
mov
add
sub
cmp
out
and
add
aam
push
dec
addl
mov
aad
add
cmp
and
jno
or
fisttps
or
mov
lods
mov
sub
not
xor
jecxz
lret
lret
sub
aaa
adc
or
add
dec
loopne
cmpsl
or
lea
inc
fwait
push
testb
pop
subb
xchg
push
xchg
dec
dec
mov
loopne
inc
mov
adc
mov
push
xchg
xchg
adc
jne
push
cmp
testl
test
ret
push
cmp
jno
xor
sbb
sub
inc
test
jnp
adc
push
sbb
dec
add
and
test
pop
lock
inc
push
push
mov
fucomp
fs
pop
or
add
outsl
jl
je
cmpsl
xorb
push
fstpt
xor
test
cmp
sub
arpl
pop
insl
ss
and
push
mov
repz
jo
out
lret
insl
adc
and
mov
lret
mov
mov
add
or
add
shlb
jae
mov
test
jne
dec
inc
or
add
into
fmuls
sub
xor
fistl
ret
push
or
xchg
loop
into
es
movsl
pop
rcl
movsb
cltd
pop
lds
xorl
push
fucomi
push
push
mov
lret
jne
popa
and
pop
adc
popa
xchg
or
pop
push
inc
gs
inc
inc
nop
sub
cmp
lods
cmp
mov
stos
loopne
push
push
xchg
sbb
xchg
sbb
fidivl
xchg
xchg
popf
xor
fmuls
lea
mov
push
nop
push
es
cmc
push
mov
inc
lds
or
add
loop
std
repz
and
movsl
or
jle
pusha
out
pusha
xor
push
sbb
inc
mov
mov
add
cmp
adc
dec
sub
shrb
and
outsl
mov
out
testl
xchg
jge
lcall
sbb
push
lock
adc
add
mov
xchg
xor
xchg
cwtl
mov
sub
sbb
dec
inc
incl
or
mov
pop
les
cmp
dec
jle
sbb
pop
data16
mov
pop
mov
cmp
adc
or
add
inc
cmp
add
push
cltd
adc
sub
add
ds
fwait
cld
sti
xchg
es
ficomps
hlt
mov
or
loop
mov
lods
jb
push
imul
aam
or
mov
sub
into
in
jg
movb
pop
jmp
sbb
mov
je
or
push
je
popa
je
mov
je
jae
dec
dec
je
push
mov
outsb
je
dec
je
outsl
je
int3
pop
and
jne
mov
jmp
or
testl
add
and
mov
cld
clc
add
rolb
call
sub
mov
in
and
push
in
icebp
xchg
mov
xchg
xchg
repz
and
lock
enter
fcoms
ficoms
inc
fldcw
mov
inc
fdivr
cmp
loop
jnp
add
and
cmpsl
dec
mov
mov
imul
rorl
mov
test
lcall
ret
or
fdivr
jmp
sbbb
cwtl
and
adc
insb
imul
push
xor
fisttpl
inc
xor
mov
popa
push
xor
outsl
roll
sub
push
pop
push
test
adc
or
xor
mov
dec
dec
inc
stos
and
mov
mov
cmpl
adc
iret
add
nop
addr16
lcall
adc
sub
mov
inc
add
add
sub
dec
jmp
popf
add
adc
sbb
fsubs
push
test
pop
inc
pop
cmpb
test
sub
and
xor
add
push
mov
imul
cli
xchg
pusha
and
mov
sbb
xorl
movsl
loop,pn
fwait
jbe
inc
and
call
or
cmp
jg
pusha
aas
or
push
dec
or
dec
push
jo
add
rcrl
shrb
xchg
loope
push
xchg
mov
add
xor
pop
or
push
mov
mov
adc
and
cvtdq2ps
pop
pop
jp
mov
test
adc
lock
dec
jecxz
sbbb
lock
add
dec
or
or
adc
xchg
sbb
roll
sbb
dec
xlat
push
mov
addb
into
pushf
mov
adc
pop
in
or
sbb
inc
or
inc
lods
sbb
das
jb
push
jns
add
push
push
clc
cld
inc
sub
pop
pusha
insl
loope
inc
cmp
rcl
inc
jp
fsts
xchg
and
cwtl
ret
adc
js
outsb
pusha
pop
jmp
mov
mov
mov
push
repnz
lock
in
push
in
mov
call
test
sub
jb
adc
orb
mov
and
in
add
call
and
testb
sub
xchg
cmpb
loopne
call
nop
pop
dec
mov
adc
or
or
cld
xchg
clc
push
imul
cltd
add
pop
push
mov
xchg
add
into
adc
add
nop
test
lea
cmp
push
cmp
and
jno
cmp
sub
aam
lock
jle
xor
xor
movsl
xchg
xor
mov
cmp
xlat
gs
jmp
jmp
mov
push
sbb
push
xor
and
andl
ljmp
inc
insb
movsb
in
fdivr
out
or
jecxz
ss
adc
outsb
sarl
pop
add
sahf
jmp
pop
dec
enter
inc
and
cltd
mov
int3
rcl
sub
cmpsl
jb
ror
add
adc
int3
je
imul
jle
and
insl
xchg
dec
dec
lahf
mov
sub
jns
sbb
dec
outsb
lcall
pop
push
sarl
add
sbb
movsl
pusha
xchg
mov
in
add
xchg
lock
in
call
sti
jl
imul
je
xor
imul
sub
jmp
lret
xchg
das
xor
mov
das
cmp
call
push
iret
repz
jecxz
add
loope
and
and
rolb
push
lret
sahf
xchg
xor
imul
fiadds
js
and
cmp
jb
ret
loope
mov
sbb
fdivrl
mov
inc
rclb
cmp
dec
jne
xchg
sub
push
rorb
and
fnstcw
fisubrs
lods
dec
mov
adc
jg
xor
xchg
in
push
push
cmp
mov
adc
mov
xor
adcb
push
pop
orb
je
sti
lds
stos
cmc
jmp
mov
xor
mov
mov
mov
fs
or
int
lret
or
dec
push
cmp
sub
dec
cmp
dec
adc
dec
sub
add
sub
jnp
xchg
push
sti
dec
es
dec
aas
xor
push
sub
cmp
sub
scas
add
idivl
or
adc
push
ret
add
cmovno
sbb
jbe
dec
pop
shlb
xor
or
movsl
add
movsb
add
push
mov
pop
jno
loopne
fisttpl
push
test
push
fs
fstps
imul
pop
adc
add
xor
aas
push
push
scas
adcb
or
jmp
rcl
push
adc
popf
adc
jno
or
jmp
sub
push
jno
and
inc
dec
and
int
push
sub
and
cmp
fs
sub
outsl
adc
sub
push
add
jmp
cld
aad
inc
and
mov
jne
daa
sbb
in
repnz
push
or
les
or
jmp
inc
lds
scas
mov
or
xor
jmp
js
gs
xchg
sbb
xor
sbb
sbbb
cs
movsl
pop
mov
pop
jg
insb
movsb
subb
fs
or
arpl
inc
cmpsl
js
fsubs
adc
sbb
es
arpl
lahf
loopne,pn
or
and
sub
js
mov
lret
sti
lods
addr16
push
push
mov
rcrb
push
movb
jb
or
jo
fs
push
jmp
aam
dec
push
xchg
cmp
out
or
sub
inc
dec
enter
pop
jg
scas
push
push
adc
adc
add
negb
imulb
shrd
add
cmp
sub
fisubrs
dec
pop
xchg
push
and
or
cmp
sbb
jp
popa
inc
mov
imul
sbb
add
es
frstor
dec
cmp
sub
imul
or
sub
mov
jl
add
dec
mov
mov
and
sbbl
popa
push
ret
push
pop
xor
xor
repnz
ror
pop
mov
jmp
push
push
cltd
inc
lock
adc
mov
or
jns
add
hlt
aam
lods
dec
jae
mov
fmuls
sarl
negl
adc
inc
xor
push
lret
push
nop
mov
adcb
add
dec
and
push
dec
inc
add
push
cmp
je
mov
mov
mov
push
pushf
push
push
test
add
and
or
adc
loope
icebp
fs
test
fstpt
cmc
test
pop
dec
test
jbe
rolb
cmc
xorl
test
mov
push
xchg
mov
pop
push
aaa
dec
mov
sub
cmp
ret
insl
lret
inc
loope
ljmp
sbb
jge
inc
mov
sub
test
pop
sub
daa
jo
stc
or
add
pop
clc
pop
xor
gs
lock
pop
and
icebp
mov
add
and
roll
push
cmpb
or
movsl
ss
add
push
push
clc
add
xchg
and
dec
data16
lea
fidivl
push
dec
push
xchg
rclw
add
cmpsb
push
xor
xor
adc
cmp
add
in
test
cmpsb
push
push
enter
insb
jbe
enter
xchg
mov
js
mov
in
and
pop
or
cld
pop
sbb
das
push
mov
or
xor
or
push
jns
dec
xchg
in
inc
pusha
in
mov
push
jmp
or
pop
cli
je
pop
sbb
jne
sbb
jl
dec
out
push
sarb
pop
push
inc
iret
mov
dec
sbb
add
movsb
mov
adc
xorb
lods
pop
pop
or
inc
test
xchg
push
cmp
dec
jno
cmp
loopne
jg
pusha
sub
or
imul
cmpsl
pinsrw
pop
hlt
xchg
or
inc
in
inc
sub
loop
add
arpl
je
rorb
sbb
loopne
int
sbb
lods
push
adcb
dec
inc
push
lods
loopne
in
rorb
mov
inc
mov
cli
rclb
push
and
gs
js
rcrb
inc
rclb
pmulhuw
push
and
mov
and
sub
call
lret
push
rolb
popa
dec
pop
push
mov
inc
or
inc
pop
cmpb
pcmpeqb
pop
aas
dec
inc
ret
mov
arpl
add
xchg
or
leave
sbb
sub
loop
sbb
mov
jns
movl
xorl
dec
imul
or
adc
cwtl
and
mov
add
sub
sbb
or
and
xlat
mov
jns
addb
mov
pop
mov
sub
inc
jp
mov
and
add
stc
push
and
mov
imul
pushf
and
mov
add
inc
fwait
sbb
cltd
movsbl
shrl
rcrb
cld
fimuls
jmp
movswl
mov
mov
inc
ljmp
cld
arpl
add
subl
push
bound
negb
mov
flds
mov
jne
xor
nop
popf
cli
sub
outsb
or
xor
xor
lock
les
xor
xor
mov
mov
insb
add
cmp
xor
sub
xchg
aad
xchg
or
adcb
adc
test
aaa
xor
mov
call
negl
out
sbb
push
sbb
xlat
push
push
mov
or
cmp
lcall
push
jp
xchg
pop
shl
jbe
fsubrl
fcom
int3
cmp
xor
rcl
ds
pop
mov
sbb
lea
sub
mov
and
loopne
mov
sbb
adc
add
push
ss
dec
adc
adc
xor
and
jb
push
mov
push
push
ss
adc
sub
loop
dec
push
push
into
push
jb
mov
cld
inc
lahf
pop
ja
xchg
sub
flds
add
faddl
mov
push
push
mov
pusha
subl
pop
xor
jo
cmp
xchg
sarl
in
inc
pop
mov
rcrb
cmp
popa
push
stc
mov
pop
out
test
pop
dec
in
pop
scas
push
jge
jns
mov
pop
in
cmpsb
push
loop
fidivrs
xchg
aam
adc
cmp
out
lcall
pop
or
jo
imul
inc
push
jmp
dec
push
mov
addr16
aad
push
cmpsb
sbb
xchg
daa
mov
hlt
xchg
pop
clc
lret
insl
loop
push
xor
iret
add
lcall
push
add
arpl
cmp
xchg
and
push
dec
pop
stc
xchg
and
add
fistps
dec
dec
out
push
nopl
xor
adc
lods
movsb
dec
jecxz
push
and
insb
adc
adc
and
jbe
mov
xor
add
push
push
call
jp
jne
inc
mov
jmp
adc
out
in
pop
inc
push
xor
in
or
sqrtps
jp
cmc
nop
popf
xor
movhps
cltd
xchg
pop
xor
pop
jne
push
and
pop
cmp
dec
xor
movsl
sub
adc
sbb
pop
je
add
and
or
jge
or
rcll
cmp
and
mov
fnstsw
in
jns
inc
div
push
pop
mov
push
lock
mov
add
aam
loop
jae
pop
ljmp
and
sub
repnz
push
xor
and
adc
and
and
inc
mov
lea
jge
push
and
call
push
mov
jo
mov
mov
hlt
mov
dec
pop
mov
sti
fsubrs
xchg
jl
fwait
jecxz
and
mov
add
mov
push
or
or
and
movsl
mov
push
loop
sub
mov
inc
jl
je
mov
xchg
outsb
pop
scas
enter
add
xchg
jle
jecxz
mov
dec
xor
dec
mov
inc
aad
out
movsb
addr16
pop
and
add
pop
rcl
adc
or
sahf
dec
sbb
pusha
cmpsb
fisttps
mov
add
psrlq
adc
xor
push
aas
sbb
push
cmpsl
sbb
incb
lock
cmp
testb
out
mov
sub
adc
std
mov
and
or
push
lcall
add
mov
jg
sbb
imul
add
or
push
xchg
push
test
push
xor
decb
jle
adc
nop
jb
cs
dec
or
jb
and
xor
in
rorl
shlb
push
pop
and
jbe
mov
jle
push
mov
add
or
xorl
or
out
dec
jo
xor
push
inc
add
dec
jl
pop
mov
pusha
xchg
lcall
clc
pusha
int
in
pop
adcb
sub
lret
mov
adc
add
mov
testb
pop
mov
pop
and
sub
rcl
fisttpll
rorb
sbb
xchg
mov
pop
lahf
mov
dec
xor
sub
shl
or
js
or
filds
call
cmp
xor
lcall
icebp
add
pop
in
mov
sbb
push
adc
fimull
cs
daa
mov
orl
negl
call
add
push
sub
or
in
adc
ds
out
fiaddl
xor
mov
fdivrs
push
add
ret
push
sbb
cmp
inc
add
and
sbb
xor
fistpll
ljmp
mov
or
roll
call
push
in
mov
or
movsl
add
or
repz
leave
sbb
loope
mov
call
push
or
ret
ljmp
inc
cmp
jb
or
out
and
jbe
mov
add
nop
js
and
cmp
repz
mov
test
add
xor
or
popa
inc
cltd
xchg
add
std
jl
xor
movsb
pop
imul
mov
sub
push
mov
or
jg
sbb
sbb
and
and
adc
or
push
add
xor
add
or
imull
pusha
lods
out
popa
out
sbb
inc
ret
clts
mov
mov
add
inc
into
aas
das
jb
lods
orl
push
cltd
adcl
jne
jae
cmp
or
loop
mov
jmp
movsb
jb
xlat
cld
mov
sub
cwtl
or
cmp
sbb
or
xchg
rolb
push
outsl
ret
push
jb
mov
add
pop
loope
cmp
or
enter
fdivs
loopne
push
jb
mov
add
xor
out
adc
loope
or
pop
addb
inc
mov
cmp
fists
or
repnz
pushf
sbb
in
sahf
xlat
cmp
jp
das
xor
js
int3
jo
jne
in
imul
je
add
shll
adc
mov
pop
pop
adc
fildll
mov
push
arpl
aad
xor
pop
xor
pop
jl
rorb
sbb
sbb
mov
jle
or
lret
popa
add
test
jle
push
sbb
sub
add
sarl
jno
fnsave
jl
fimuls
xor
lret
adc
cmpb
push
shlb
mov
cmp
int
xor
push
mov
mov
mov
fistl
pop
les
sub
dec
das
out
mov
cmp
roll
jae
dec
pusha
mov
stc
and
in
incl
cwtl
or
xchg
mov
mov
mov
add
cmpl
repnz
vprotq
es
orl
and
lea
mov
out
push
or
addr16
lods
mov
xor
pusha
push
jmp
test
push
sub
push
jp
jns
lods
das
push
inc
dec
adc
xorb
sub
into
mov
mov
loope
dec
and
and
push
test
add
xor
inc
movb
xchg
movsb
add
xor
dec
jp
lock
sub
sub
fsubs
adc
addl
sbb
mov
and
nop
aam
or
mov
xor
inc
aas
jge
pushf
or
jne
add
jnp
or
aas
lcall
add
pop
enter
ja
sub
or
inc
lea
xchg
inc
add
inc
push
sbb
pop
dec
or
cmpl
mov
sbb
mov
popl
push
shll
xchg
sbb
pop
xor
sarl
imul
sbb
leave
das
mov
loopne
or
mov
add
dec
xchg
andl
fcmovb
cmc
and
xorl
or
test
pusha
or
or
pop
mov
lret
push
pop
lret
cmp
inc
outsb
int
mov
cs
xchg
mov
jne
mov
pop
iret
insb
in
xchg
inc
into
insl
xchg
add
test
lret
outsb
mov
out
adc
stos
or
fdivs
loopne
fwait
add
add
xor
mov
add
imul
or
xchg
push
insl
fcoml
push
das
dec
adc
outsb
out
js
dec
lock
and
jne
adc
mov
cmpsl
cld
scas
xor
inc
pop
clc
fwait
and
jae
sti
sarb
lock
push
dec
push
add
nop
icebp
mov
cld
imul
mov
or
and
xor
dec
mov
inc
push
mov
mov
adc
fdivl
add
out
mov
and
pop
xchg
in
mov
push
adc
sbb
shlb
lea
or
pop
imul
xchg
xor
xor
paddd
ja
xchg
pusha
add
lods
sbb
add
push
mov
sbb
add
sub
dec
add
push
xor
aam
or
in
insl
ljmp
push
aam
les
add
xor
test
cmp
xchg
popa
sbb
dec
inc
xchg
std
lock
imul
lods
pop
xchg
rol
js
or
or
call
bound
pop
lea
loope
push
push
mov
cmpsb
push
pop
enter
scas
add
gs
pop
movsb
sbb
adc
aam
jmp
pop
or
hlt
jg
in
les
in
sbbb
add
push
dec
sub
and
loop
jne
pop
lret
push
rorb
xchg
mov
sbb
movsl
lret
dec
adc
jnp
or
hlt
testb
fstpl
jecxz
mov
and
shrb
lea
gs
push
pop
sub
or
jae
pop
xor
mov
pusha
imul
sbb
jno
inc
popa
std
mov
xorl
dec
pushf
cmp
xchg
mov
cmp
ja
xor
inc
pop
xor
jp
shlb
sbb
fnstsw
dec
out
movb
dec
sbb
fisubrs
xchg
sbb
jnp
add
or
cmp
xchg
push
push
mov
or
mov
cmpsb
aaa
js
cmp
movsb
andl
mov
push
test
mov
pop
and
mov
mov
enter
sbb
and
inc
test
add
sahf
or
sbb
add
sbb
add
xchg
inc
sbb
aaa
jbe
out
mov
adc
dec
jb
xchg
pop
push
sbb
mov
push
pop
mov
sbb
adc
pusha
lret
pop
xchg
sbb
test
notl
fstl
push
adc
inc
xor
push
test
add
fadds
push
mov
cmp
ret
pop
mov
test
xchg
mov
jl
ss
xchg
clc
cs
jmp
mov
adc
fisubl
rolb
adc
inc
jo
movsl
xor
sbb
push
push
inc
jmp
popf
mov
add
outsl
insb
fwait
pop
mov
or
repz
mov
push
mov
cs
push
jg
fwait
iret
repz
stos
int
add
add
sarl
leave
sub
sbb
mov
add
xchg
imul
jne
xchg
sbb
adc
mov
es
push
test
inc
inc
cmp
and
mov
loop
out
ret
xor
pushf
push
lahf
push
xor
xchg
cmp
cwtl
cmp
inc
push
or
xor
mov
or
mov
lods
xchg
fisubs
dec
sbb
sbb
ret
jge
jne
xor
dec
push
mov
cmp
je
outsl
in
cmp
popf
cmp
sbb
inc
imul
cmp
js
dec
leave
xor
push
lret
dec
and
pop
pop
rol
mov
pop
pop
jp
push
dec
fstps
mov
add
ficoml
add
xor
adc
push
mov
mov
out
xor
insb
fbstp
mov
xor
sbb
arpl
inc
or
push
mov
jp
clc
adc
push
jecxz
mov
push
push
imul
or
inc
xchg
arpl
fadds
fcoms
gs
cs
orl
push
movsb
xchg
jl
dec
jb
aas
jp
mov
and
adc
cmp
inc
sub
fisubrs
enter
mov
jno
add
sub
push
pop
mov
int3
dec
xchg
leave
xorb
inc
dec
xchg
mov
in
in
xchg
xor
push
cmp
jge
mov
mov
push
lret
fsubrs
aaa
nop
jmp
xor
jp
ret
jns
push
dec
or
outsb
fiaddl
jge
inc
mov
js
cmp
jecxz
inc
push
push
mov
hlt
cltd
mov
push
aas
jnp
sbb
jl
or
adc
dec
or
xchg
andl
add
orb
jne
inc
push
nop
stos
jecxz
dec
or
and
push
mov
mov
sub
sbb
sub
inc
add
repz
jmp
mov
adc
adc
aaa
es
or
lret
adc
adc
mov
xor
pop
out
fisttpll
xor
ss
imul
cmpsl
notb
into
add
sbb
sub
dec
inc
pop
fsubs
mov
push
add
in
faddl
insl
sbb
mov
mov
sbb
sbb
add
lods
rorb
movsb
lods
testl
scas
add
movl
je
sbb
mov
or
adc
lock
mov
or
cmp
adc
sub
push
pop
lea
xorb
xchg
sub
mov
push
cmp
cmp
jne
fdivrs
xchg
enter
adc
xchg
or
sub
add
push
adc
sub
dec
sbb
add
aaa
imul
rcrl
fs
push
mov
mov
mov
mov
fwait
ret
add
data16
add
push
imul
push
and
jo
xchg
mov
xor
popf
push
xchg
jecxz
or
push
sbb
jns
pop
icebp
sub
xor
adc
cltd
nop
flds
call
xchg
mov
and
shrb
lods
push
push
mov
mov
lea
arpl
addr16
mov
push
add
push
push
sub
inc
inc
lds
push
cmp
sbb
xor
dec
inc
sbb
inc
xchg
adc
push
movsl
icebp
cltd
out
iret
insb
bound
aaa
enter
add
lret
sub
or
xchg
mov
or
or
push
aaa
inc
add
iret
xchg
cmp
push
popa
dec
sub
test
je
out
cmp
and
add
adc
push
mov
bound
add
jae
std
imul
or
pop
or
mov
gs
popa
ret
call
arpl
or
ret
rcrb
shrb
or
rcrb
pop
sub
and
push
sbb
or
mov
pop
rcrb
pop
xchg
test
adc
orl
ds
and
fs
sbb
mov
inc
adc
and
xor
mov
std
dec
je
dec
jne
push
adc
jge
aaa
jmp
sub
and
and
and
sbb
popa
push
pop
sub
cmpl
sub
jne
lea
sbb
add
xor
lods
or
fdivs
xor
clc
rclb
inc
adc
jae
or
mov
sbb
push
xor
movsb
add
jnp
fyl2xp1
push
icebp
je
loopne
pusha
mov
notl
je
lea
sbb
dec
testl
cmpsl
xorb
or
inc
add
ss
out
mov
pusha
sub
dec
jns
cmp
cmpsb
fs
insb
sbb
add
add
lret
sar
test
cli
cmp
nop
mov
sahf
sub
xchg
loopne
inc
dec
rcr
and
push
adc
mov
or
mov
xor
sbb
mov
add
adc
ss
in
inc
add
inc
cmp
add
push
add
xor
lods
jecxz
jbe
jp
jmp
adc
sbb
arpl
and
int3
adc
popa
or
loope
inc
cmp
pop
mov
loop
popa
and
jne
inc
inc
adc
and
mov
push
add
jle
test
sti
ljmp
pop
and
mov
das
inc
cmp
push
inc
push
and
arpl
add
push
pop
subb
scas
bound
push
inc
adc
lea
gs
ja
pop
xchg
inc
push
lcall
xchg
int3
fiaddl
stc
and
rclb
push
lsl
shlb
adc
test
loope
addl
add
push
mov
xchg
sarb
mov
sbb
cmpsb
addb
ljmp
popa
mov
mov
movsb
and
jnp
orb
mov
push
sbbb
cmp
stos
xor
push
mov
cmp
mov
xchg
cld
fisttpll
cmp
popf
mov
dec
or
aad
pop
inc
test
aaa
xchg
inc
popa
hlt
xchg
inc
pop
into
fs
push
push
loop
mov
inc
add
mov
cltd
lds
notl
or
push
xor
sbb
orb
rol
or
xor
xorl
push
addr16
jno
test
and
add
push
and
pop
jbe
dec
jl
lret
mov
arpl
fdivl
inc
cld
sbb
mov
sbb
add
mov
or
hlt
adcb
jg
fistpll
popf
ss
xor
or
clc
shlb
add
mov
xchg
sbb
xchg
cwtl
xchg
cmp
push
xor
scas
jge
popf
jne
fldt
jnp
je
shll
les
in
movsl
add
or
xchg
xor
xchg
add
cmp
mul
jge
jo
jbe
jge
push
sbbl
movsl
pusha
xor
push
lods
xchg
rcrl
xchg
das
mov
shlb
push
test
pop
sub
push
adc
mov
mov
lea
loopne
je
xor
mov
sbb
cmp
adc
sbb
jo
push
cmp
mov
or
popa
mov
inc
push
test
test
xchg
add
daa
in
push
add
js
aaa
xor
inc
inc
jge
pop
push
mov
lock
inc
inc
and
xchg
loopne
jnp
daa
inc
and
adc
lret
in
orl
sub
cmp
xor
test
loop
push
xchg
in
stc
pcmpgtd
adc
lret
sbb
mov
xchg
fdivrp
push
js
sbb
das
xor
ret
ret
sbbl
push
cmp
xor
add
and
pop
mov
int3
inc
add
sbb
inc
in
jl
inc
arpl
sbb
push
or
pop
pop
xchg
addb
addl
jae
mov
sub
push
cmp
lret
sbb
adc
shrb
mov
mov
cmp
pop
test
rcrb
push
push
stos
sbb
xor
test
xor
and
dec
mov
cld
rcrb
ja
push
lcall
inc
arpl
adc
es
cs
cmp
ss
push
add
xchg
fistl
lock
std
sub
jae
jmp
sub
test
lret
mov
cmp
push
xchg
or
test
lea
cli
and
push
fs
dec
jl
cmp
jge
enter
pop
xchg
pop
push
loope
mov
pop
inc
lea
mov
mov
and
fstpt
pusha
cmp
sub
sarl
pop
mov
xchg
or
sbb
dec
xor
and
push
or
push
sbb
dec
add
das
mov
add
aaa
dec
fcoms
dec
test
cmp
or
push
push
into
ds
and
push
neg
loopne
or
push
movsl
movsb
and
push
push
or
shll
xchg
and
jne
adc
mov
pop
xchg
and
and
cmp
inc
cmp
cmp
movsb
rol
push
sbb
cmp
ljmp
add
hlt
sub
push
jae
sbb
lock
popa
loopne
leave
popf
mov
js
mov
rol
arpl
mov
ja
lret
mov
jno
or
jmp
add
pop
cld
jecxz
in
cmp
sbb
jne
xorl
mov
fcompl
jae
jg
sbb
out
lods
int
pop
push
pop
es
imul
push
xchg
inc
mov
loopne
stos
mov
or
jge
or
mov
lds
mov
outsb
rolb
popa
je
mulb
jg
xor
pop
lock
pop
push
mov
cwtl
insb
sbb
push
xchg
jo
inc
das
jne
mov
mov
ret
cmp
shll
sub
xor
cmpsb
xchg
insb
jnp
lock
jae
sub
add
mov
and
pop
push
sarl
or
push
sbb
xorl
insl
cmc
repnz
jge
adc
adc
lds
inc
inc
lea
imul
lods
pop
add
xchg
inc
scas
cmpsb
fcom
pop
lock
jno
xchg
or
sbb
es
gs
pop
and
jp
int
adc
pop
ret
dec
xchg
adc
pop
clc
nop
cltd
mov
xchg
push
dec
fdivl
mov
shr
inc
add
leave
and
inc
jge
sbb
sbb
ret
mov
xchg
sub
adc
jne
or
mov
or
shl
shlb
in
jge
jb
or
push
add
add
aaa
popa
insb
jns
push
insl
fmull
cmpsb
xor
sub
std
daa
and
decl
gs
lret
clc
cmpsl
add
cmp
sbb
scas
ljmp
cld
add
xor
push
sbb
loopne
xlat
into
jo
cmpsl
rclb
jl
inc
sbbb
test
and
test
fdivs
or
cmp
movsl
aas
xchg
loope
aad
roll
or
sub
nop
call
mov
inc
push
js
int3
dec
cmp
lcall
lret
mov
xor
loopne
pop
dec
push
add
mov
push
push
push
push
xor
les
mov
in
hlt
add
push
adc
sub
dec
add
call
or
sbbb
and
mov
pop
adc
mov
jmp
or
cmpl
inc
push
pop
nop
addr16
or
push
or
in
shlb
add
stos
push
icebp
repz
rorl
cmpb
fadds
pop
pop
dec
test
fists
and
pop
icebp
or
fnsave
popf
call
shll
or
mov
add
adc
arpl
sub
or
sub
jecxz
pop
idivb
sahf
push
mov
lods
fdivrs
push
nop
inc
sub
stc
xchg
cmp
sbb
out
rol
jo
and
cmp
pop
dec
xor
push
adc
jne
mov
dec
inc
aas
in
cmp
lock
jp
inc
fldpi
xor
xchg
fbstp
jg
fdivs
mov
xchg
and
adc
dec
test
add
jns
not
jle
adc
add
cmpsb
imul
add
ficoml
jbe
xor
or
jbe
push
mov
add
add
add
stos
xchg
inc
cld
js
and
push
in
inc
rclb
ds
es
xor
inc
fadds
push
push
dec
addb
in
dec
rolb
clc
movb
pop
pop
les
cmp
pop
les
imul
add
jle
push
test
ret
nop
push
sub
sub
dec
or
push
lock
xor
adc
test
add
lahf
dec
pusha
inc
lea
int
push
es
sub
sbb
inc
test
inc
sbb
and
push
lock
push
ss
inc
and
and
xor
push
repz
pushf
dec
loopne
mov
mov
add
int3
jbe
push
add
mov
in
test
lock
xchg
push
out
push
lock
int3
lods
xor
mov
js
lods
or
mov
mov
pop
xchg
push
or
sbbb
daa
cld
push
in
hlt
scas
vlddqu
ret
cmp
or
pop
in
push
inc
jo
mov
cmp
add
enter
pop
mov
rorl
cmp
adc
xchg
mov
popa
test
inc
sbb
dec
sub
adc
push
inc
and
ljmp
into
dec
loop
and
inc
sbb
mov
mov
xor
jbe
jl
cmp
jbe
cmovo
insl
cmpsb
sti
adc
aam
pop
cmp
insl
and
push
imul
sub
and
xor
cmp
sbb
xchg
or
inc
mov
sbb
addb
mov
pop
mov
cli
xorb
jno
push
pop
lret
call
xor
jne
xor
pusha
leave
jno
setns
add
stos
or
in
push
mov
cli
pop
in
cld
xchg
inc
mov
mov
inc
mov
lcall
jmp
push
sbb
fs
or
out
imul
adc
adc
inc
add
or
mov
adc
add
push
push
incl
movsb
mov
cmp
shll
add
adc
sbb
xor
mov
or
jle
and
nop
cmp
inc
rolb
xor
stos
adc
add
adc
js
fstps
push
adc
popa
lea
add
ret
pop
adc
add
add
cltd
mov
loope
add
je
mov
in
mov
sbb
out
cmpsl
test
inc
dec
dec
fidivl
add
adc
sbb
dec
clc
cmp
xor
jo
sub
dec
mov
adc
push
push
jmp
adc
add
cwtl
out
jmp
add
test
and
jne
add
insl
pop
fiadds
sub
push
dec
jle
mov
arpl
mov
lcall
xchg
push
lock
cmp
adc
es
inc
dec
incb
js
xchg
cmpsb
sbb
jne
xchg
xchg
loope
sub
lds
push
push
pop
inc
sub
mov
push
cmp
dec
je
testb
jbe
test
and
js
loope
push
and
add
jbe
jmp
lcall
sbb
xchg
ss
mov
mov
jne
push
mov
jg
and
xchg
xorb
fldl
in
mov
sbb
les
xlat
jle
fidivs
pop
jmp
fildl
and
adc
sahf
xchg
jmp
inc
adc
dec
bound
pop
adc
movsb
add
not
inc
add
sub
xor
cmp
or
sub
arpl
test
inc
add
pop
into
hlt
xchg
inc
dec
push
and
scas
xorl
dec
sub
jns
sub
push
pop
cmp
pusha
cmp
repz
sbb
insb
fadds
cmpb
push
or
add
add
ss
in
dec
sbb
push
popf
pop
loope
push
sbb
add
pop
cwtl
push
pusha
pop
ret
imul
jmp
mov
cmp
lock
push
push
cli
aaa
fwait
mov
je
ss
or
lcall
fwait
aam
adc
shlb
mov
out
mov
rcrl
cltd
mov
daa
pop
or
call
push
rolb
sub
push
adc
mov
sbb
xchg
movsl
mov
pop
jbe
sub
aas
adc
loopne
jne
outsl
jbe
xor
rolb
xchg
add
add
xchg
icebp
add
rol
addl
adc
fs
mov
or
jb
xor
dec
and
add
dec
xchg
lcall
aam
cmc
fxch
push
imul
or
push
dec
test
adc
pop
popa
dec
add
push
push
icebp
or
jp
or
mov
jmp
bound
mov
lods
mov
int3
es
inc
adc
enter
stc
bound
mov
sub
cmp
in
mov
fsubrs
movsl
add
mov
int
cmovs
lock
pop
dec
lods
enter
adc
adcb
add
test
mov
inc
mov
movl
or
and
push
pop
js
rcr
mov
mov
mov
out
mov
inc
xchg
cmp
out
je
imul
adc
pop
adc
xor
fistpll
add
scas
movsb
dec
and
pop
adc
subb
insb
sbbb
jge
and
aam
out
push
xchg
push
in
dec
pop
stos
lcall
jp
jle
or
jb
dec
or
cmpsl
test
dec
and
orl
push
rolb
mov
sbb
cmp
int3
fs
jne
inc
cli
inc
lcall
push
lahf
add
shlb
loop
add
and
in
nop
push
sbb
fistl
or
lahf
or
sbb
adc
fadds
pusha
and
pop
ffreep
dec
sti
lret
sbb
aas
fists
iret
shrb
lret
push
sub
sbb
cwtl
sbb
or
add
cs
mov
cmp
push
jp
xor
call
pop
cmp
xlat
or
les
cltd
movsb
jo
ja
mov
push
pop
jle
cmp
or
add
pop
xchg
sub
push
ficomps
arpl
mov
dec
sub
push
add
add
subb
pop
pop
cs
rolb
out
inc
in
or
je
xor
jb
enter
popf
cltd
pop
test
jnp
adc
push
arpl
mov
inc
loopne
push
inc
or
sarl
sub
xor
push
jmp
fistl
hlt
add
and
jnp
add
hlt
lods
push
push
icebp
or
push
and
fdivp
jp
movsl
sub
add
sub
cmpsl
or
push
loope
imul
sub
xor
lcall
jne
adc
into
push
push
pushf
dec
outsb
sub
les
lea
mov
push
sbb
mov
imul
jmp
sbb
sub
loop
roll
sahf
test
and
cmp
lods
push
xchg
mov
pop
push
pop
aad
jb
push
or
inc
adc
dec
pop
je
fisttps
adc
std
mul
imull
decb
push
sti
push
push
loope
or
inc
ret
sub
or
into
pop
pop
sub
clc
push
or
repz
add
add
mov
jmp
sub
rolb
je
dec
fimuls
xor
xor
mov
dec
icebp
push
test
ss
and
in
rclb
imul
push
cmp
mov
pusha
xor
rclb
cmpsl
mov
mov
sub
push
push
xchg
inc
popa
rorl
negl
aaa
adc
push
clc
imul
pop
mov
mov
mov
sub
mov
xchg
jp
pushf
outsb
inc
sarb
adc
les
sub
dec
dec
gs
sahf
nop
push
cmp
xchg
fildl
shl
mov
nop
and
add
fldl
fnstcw
lds
test
pop
sarb
jge
adc
js
and
ljmp
push
sbb
aaa
mov
test
jb
xorb
add
cmpsl
add
or
imul
adc
sub
push
mov
mov
jne
push
xorl
ds
jl
ja
or
icebp
or
sbb
xchg
push
adc
inc
add
jmp
mov
adcl
aam
lret
inc
adc
push
scas
sub
mov
push
inc
test
push
aaa
jecxz,pn
fdivrl
les
in
adc
call
dec
push
and
sub
xchg
inc
popa
and
in
mov
lea
in
sti
mov
lcall
pop
add
mov
or
push
ds
add
push
or
add
idivl
or
insb
popa
pop
mov
and
or
cs
sub
mov
fadds
mov
push
push
outsb
and
xchg
pop
pop
pop
add
fs
hlt
cli
sbb
adcl
std
jbe
aaa
sbb
fwait
lock
and
xor
mov
push
pop
lcall
push
popf
xor
cwtl
icebp
lea
cld
xchg
fcompl
lret
sahf
mov
repz
push
loopne
add
push
fistpl
adc
cmp
cmp
lods
pop
mov
mov
mov
mov
lret
orl
ret
lret
push
inc
cs
hlt
arpl
pop
dec
cs
lock
fucom
repnz
clc
cld
push
add
or
cs
sar
jae
pop
fisubrl
or
sbb
and
out
repnz
sub
in
xchg
xchg
out
push
fldenv
or
or
pop
cs
dec
sbb
pop
xchg
out
pop
cld
popf
and
cmp
pop
ja
pop
push
add
sub
or
mov
pusha
dec
or
inc
sbb
mov
shrl
outsb
jb
jbe
fucomip
shl
adc
pop
dec
test
mov
add
fmull
add
movsbl
cmpsl
sub
test
inc
push
xor
out
sti
jge
jl
xchg
mov
or
int3
cs
fstps
lcall
push
and
lret
stc
or
mov
rclb
je
lret
ja
or
call
mov
push
cld
sub
shrl
pop
mov
std
enter
jl
aam
arpl
cmc
sbb
popf
pushf
push
cs
jne
std
or
adc
stc
jge,pt
movsb
out
jne
and
mov
lret
mov
sarl
std
mov
in
das
dec
std
cwtl
inc
sub
xor
pop
cmp
and
add
push
data16
jns
push
ds
push
cmpsb
xchg
xchg
lret
cld
int3
cld
hlt
sbb
inc
lret
negl
std
or
or
fisttps
add
push
jle
insb
addps
je
jb
jl
js
or
xchg
out
mov
pushf
mov
jb
stos
scas
mov
mov
inc
jo
shrb
cwtl
arpl
add
mov
dec
into
mov
mov
add
pop
scas
xchg
les
das
or
lock
or
xchg
std
lret
push
std
xchg
hlt
push
in
pop
mov
sub
clc
push
icebp
sbb
adc
jmp
out
push
xchg
and
es
dec
cs
xor
mov
test
lods
cmp
mov
adc
add
xchg
lret
movsl
push
mov
or
cs
xchg
decb
xor
xchg
cmp
sub
mov
dec
or
in
push
push
mov
frstor
mov
cs
out
jb
jo
je
jl
dec
ja
push
test
adc
pushf
pop
cs
and
in
rcrl
in
xchg
das
xchg
lcall
cmpsb
subl
sub
xor
sub
mov
loopne
shrb
movsl
ret
int3
mov
fdivr
jge
jmp
or
jns
stc
scas
add
popa
out
pop
cmpsl
xor
notb
inc
xchg
cmpl
call
mov
jmp
cmp
pop
lea
adc
addb
pushf
cmpsl
adc
mov
fidivs
pop
cld
fnstenv
je
pop
mov
int3
mov
xchg
call
push
or
sbb
xor
push
call
fwait
sub
fdivs
inc
pop
outsb
popa
cmp
sub
pop
fidivrs
push
jno
push
sub
movsl
repnz
aam
pop
enter
pop
mov
cmp
movsl
push
push
inc
jmp
jmp
inc
andb
xchg
mov
test
xor
lcall
mov
add
dec
jl
movsb
dec
test
sub
rcll
jl,pn
push
pop
inc
out
lods
and
xchg
dec
je
add
mov
pushf
xlat
xor
add
mov
mov
rclb
sbb
and
add
or
fcmovu
data16
loopne
push
loop
imul
inc
add
mov
mov
add
adc
cmp
and
out
add
push
movsb
orb
sbb
fs
in
push
lahf
jno
push
imul
lea
push
push
jmp
das
pop
flds
cmp
aad
jne
mov
nop
inc
scas
cld
push
add
mov
test
mov
leave
test
jmp
cmp
add
sub
std
sub
xor
mov
fldcw
lret
rcr
popa
sbb
fildl
pop
add
and
das
fldl
xor
xchg
sahf
movsb
clc
inc
divl
mov
and
xorl
mov
fsubs
jge
adc
add
jne
adc
add
inc
mov
or
subb
lea
inc
cmp
dec
cwtl
xchg
mov
add
push
sbb
test
loope
jmp
pusha
or
xlat
push
mov
mov
dec
fisttps
sbb
push
adcl
imul
popa
popa
xor
push
add
xor
cltd
lret
dec
sub
dec
popa
leave
shr
xor
sub
movsb
sbb
cs
mov
test
jl
mov
adc
in
xor
das
or
pop
push
sbb
divl
adc
cmp
and
cs
sub
jg
pop
mov
push
or
sbb
sbb
mov
mov
mov
or
fnstsw
sub
cmp
xor
ret
sub
inc
test
and
push
orb
xor
dec
jecxz
jl
stos
push
add
addr16
mov
fs
or
xor
inc
xchg
subb
imul
pop
inc
sbb
add
add
cmp
cltd
leave
movsb
out
pusha
jge
pop
lods
inc
xor
insb
test
xor
pop
in
or
out
add
xchg
in
jp
mov
imul
sub
xadd
xchg
or
mov
sbb
lods
add
and
jbe
rcrb
hlt
mov
pop
adc
sbb
push
pushf
and
in
insl
mov
dec
inc
sbb
cmp
xchg
movsb
xchg
dec
daa
push
inc
jne
jbe
adcl
test
inc
je
dec
xchg
push
or
sub
xchg
cltd
inc
lock
ja
cmp
and
mov
add
sbb
add
fs
jbe
adc
dec
dec
dec
mov
pusha
stos
shll
cmp
xchg
inc
outsl
jae
or
dec
scas
sbb
adcl
pop
add
pusha
jo
out
pop
or
and
add
rclb
push
push
mov
dec
inc
or
es
adc
jns
movsb
sbb
subl
test
cmpsl
rorb
mov
cs
adcl
sub
js
pushf
inc
add
mov
enter
dec
mov
popa
add
roll
xchg
mov
xor
pushf
xchg
daa
hlt
adc
sub
push
and
xchg
lea
xchg
xor
push
mov
cmp
dec
fnstenv
jo
lret
jb
xchg
jae
mov
stc
push
sub
or
sub
xor
jo
dec
fldl
pop
add
les
pop
and
jmp
adc
add
adc
or
push
insb
sbb
mov
or
dec
sub
and
xor
inc
adc
push
arpl
in
jb
sub
mov
and
int3
or
mov
or
xchg
and
push
or
loop
xchg
xor
or
js
daa
or
pop
js
cmpsl
inc
mov
add
inc
roll
xlat
lret
mov
xchg
xor
nop
push
outsb
outsl
mov
xor
lcall
adcl
dec
frstor
inc
xchg
sub
jbe
or
loop
mov
xor
andb
add
filds
jne
enter
aaa
adc
mov
leave
inc
cmp
out
rol
add
xor
gs
mov
js
mov
or
dec
pop
add
subb
call
icebp
sbb
mov
sub
addl
pusha
sub
ljmp
rorb
xchg
add
sbb
add
mov
cmp
lret
sahf
mov
js
sub
shrb
sub
xlat
add
add
fucom
dec
lods
mov
xchg
rcll
and
ret
inc
jo
dec
out
xchg
cmc
add
dec
jecxz
out
mov
ja
cmp
insb
push
xor
pop
push
rol
xchg
sbb
fs
or
push
test
subb
xor
mov
into
movsl
imul
sbb
ljmp
fisubrl
jg
push
mov
call
adc
push
xchg
mov
adcl
shlb
sub
clc
xor
jecxz
add
xchg
sbb
push
lods
test
fwait
jnp
dec
rorl
sbb
lahf
inc
sbb
mov
shlb
dec
lahf
mov
mov
loope
add
call
xor
add
add
cmp
mov
jecxz
add
je
jle
xchg
sub
sbb
cmp
cwtl
sub
imulb
mov
and
push
add
sub
inc
movsb
mov
mov
jmp
mov
mov
insb
iret
jnp
or
mov
add
addb
lock
inc
and
add
mov
lea
pop
jnp
add
sbb
stos
mov
mov
sub
adc
les
adc
xor
mov
fcoms
outsb
mov
clc
mov
inc
mov
test
fwait
push
rorl
dec
fmuls
add
sub
rcll
xchg
movb
leave
add
mov
rorb
rcll
xchg
push
xchg
lret
sbb
rorl
add
sub
xchg
adc
and
mov
pop
rolb
out
sbb
jecxz
in
inc
cmp
les
xchg
xorb
jle
add
fsubs
cmp
adc
inc
pop
in
das
cmp
jo
push
xor
lock
mov
aaa
jl
gs
sub
jge
pop
lods
sbb
lahf
pop
inc
scas
lea
fidivrs
or
sbb
rcr
add
cmp
mov
js
pop
loopne
push
lcall
gs
dec
movsl
and
into
and
add
and
rcrb
sti
xchg
movsb
inc
inc
pop
mov
stos
pop
push
push
shlb
lock
mov
cwtl
outsb
test
movsb
out
shr
clc
les
fmul
js
imul
mov
and
push
addb
push
push
inc
adc
inc
push
fcompl
into
adc
mov
dec
cmp
mov
mov
or
push
xor
lock
movb
mov
mov
xchg
push
inc
fs
xor
cmp
inc
add
push
aad
cli
sub
jo
push
mov
sbb
mov
addl
jmp
out
mov
shlb
or
cmp
cmp
push
or
xor
mov
sub
inc
insl
subl
xor
and
faddp
mov
and
das
cmp
and
add
cmpsl
call
cltd
sub
loop
pop
xor
jbe
in
pushf
xor
sbb
aaa
xchg
push
pop
xchg
xchg
adc
sub
add
pushf
ljmp
pusha
hlt
cltd
mov
inc
mulb
add
movb
sub
shrl
sub
test
mov
or
add
xor
dec
mov
das
ret
sbb
scas
push
dec
inc
sbb
test
and
push
xchg
push
adc
sub
mov
or
adc
test
andl
xchg
cltd
aad
and
imull
fisubrl
sahf
lods
mov
loop
cmc
inc
rcll
dec
sbb
lea
add
aaa
mov
jp
pop
jl
push
faddp
lea
jl
mov
xor
subb
std
add
pop
mov
lods
add
scas
sbb
pop
mov
push
test
adc
adc
cmp
sub
push
push
jo
shr
sbb
sbb
mov
mov
clc
faddl
dec
int
outsb
imul
lods
dec
cmove
inc
sub
cs
ds
push
mov
es
dec
cmp
je
js
jl
jnp
dec
xlat
loopne
test
iret
sbb
dec
add
adc
adc
rcll
and
lea
push
sbb
cwtl
xor
cmp
pusha
pushf
addr16
mov
mov
cmp
lret
or
mov
fsub
and
and
cmp
out
in
ret
and
push
fwait
mov
nop
fwait
cld
sbb
inc
in
cmp
int3
sub
sbb
js
out
mov
daa
sbb
mov
add
faddl
je
xchg
cmp
fadds
mov
sub
dec
xlat
push
cs
and
out
adc
insb
js
push
addl
lods
movsl
push
mov
pop
push
cld
addr16
pusha
stc
insb
mov
nop
adc
xchg
mov
xchg
out
sbb
mov
sbb
jns
mov
dec
inc
cmp
into
push
stc
jmp
adc
sahf
ja
pop
jo
cmp
aaa
xor
lret
movsb
enter
insb
mov
sub
mov
adc
mov
mov
and
mov
inc
in
jns
push
dec
mov
rclb
and
mov
mov
scas
push
pusha
sub
cmpsb
sub
add
and
add
xchg
dec
push
inc
and
ret
shrb
pop
sub
mov
xor
mov
sar
lea
mov
push
aad
ret
test
por
dec
pop
jmp
jle
les
fwait
shlb
ret
mov
mov
pop
push
inc
jg
mov
testb
sbb
mov
add
mov
mov
sub
fs
jge
jbe
adc
pop
mov
cmp
jmp
xor
adc
xchg
xor
add
jne
lret
shrl
push
sbb
push
fstpl
xlat
xchg
mov
nop
test
and
mov
jae
or
jo
pop
daa
filds
sbb
xchg
xor
jmp
jp,pt
mov
call
pop
mov
ret
add
push
fimull
pop
adc
or
and
aad
mov
push
subl
jo
mov
push
xor
xchg
cmp
lea
lret
xchg
cmp
xchg
jl
je
cmp
add
in
xor
movsb
dec
jecxz
xchg
adc
xchg
mov
jge
and
loopne
mov
in
fidivrl
jl
and
out
or
imul
cmpsb
rorl
push
enter
inc
sarl
push
push
xor
mov
or
add
repnz
arpl
and
adc
inc
mov
mov
jb
mov
or
lods
pop
sarb
popf
sbb
enter
or
sbb
js
adc
xchg
mov
stos
andl
sub
push
adc
cmpsb
mov
std
add
mov
sub
scas
cltd
mov
sub
sub
push
lahf
sti
mov
push
dec
je
adc
sbb
movb
cmp
sbb
insb
arpl
pop
mov
dec
xchg
jo
call
mov
xor
sbb
push
xor
dec
jno
cmp
add
or
data16
mov
pop
pmulhw
pop
iret
add
mov
xor
movb
int3
cmpsl
mov
rcrl
and
sbb
outsl
pop
ror
pop
jmp
cmp
xchg
ret
adcb
jbe
loope
or
jge
mov
add
or
outsb
dec
jp
aam
or
xor
hlt
rcrl
sahf
dec
scas
dec
rcrb
sti
jmp
divl
in
or
mov
push
addb
bound
adc
dec
mov
lcall
pop
pusha
testb
jge
or
add
addb
iret
add
sbb
and
sbb
leave
inc
outsl
sbb
inc
ret
or
sbb
movsl
fcompl
xor
test
sbb
mov
adc
gs
xchg
add
xchg
cwtl
push
and
adc
pop
cli
cmp
nop
lea
adc
fistpl
jl
jno
out
jbe
adcb
aaa
stos
push
xorb
mov
scas
adc
das
mov
sbb
ret
sub
or
jnp
or
imul
inc
mov
push
ds
mov
std
sbb
ljmpw
mov
fbstp
aam
test
adc
leave
movsl
add
mov
xchg
xor
sbb
mov
movsl
mov
or
dec
imul
adc
add
outsl
xchg
push
aam
movsb
ret
xchg
lea
xchg
cmp
pusha
add
ret
and
inc
rorb
push
jb
jp
or
pop
mov
sub
mov
dec
pop
mov
or
cmpsb
mov
das
rcrl
jmp
or
outsb
dec
mov
mov
and
xor
mov
movsl
test
mov
lods
imul
subl
and
xor
outsl
xchg
js
pop
aam
dec
movsl
cmp
negb
aam
jle
inc
or
dec
add
out
call
inc
push
xor
loopne
pop
or
sub
data16
add
int3
mov
or
daa
add
inc
fdivrs
movsl
and
sub
xchg
add
dec
inc
ds
out
add
ds
or
mov
neg
fiadds
mov
subb
scas
add
or
cmp
xor
cmp
mov
add
cbtw
js
add
jbe
cmpsb
add
insl
add
dec
or
jae
fs
xor
lcall
mov
rclb
push
sbbl
xor
addl
scas
mov
or
jmp
pop
insl
cmpb
sub
inc
inc
out
add
icebp
push
pop
pop
sub
inc
add
adc
inc
pushf
test
jae
dec
gs
xchg
sbb
xor
pop
xor
pop
cld
clc
fwait
ret
or
mov
add
orl
xchg
push
lea
and
cli
add
mov
add
lods
insb
sbb
aaa
lods
daa
test
loope
decl
xor
adc
push
int
inc
mov
movsb
or
and
cmc
adc
loope
scas
test
xlat
cmpl
sahf
pop
push
fists
pusha
insb
and
inc
and
orb
add
and
add
arpl
test
sub
add
mov
xchg
dec
push
mov
xor
xor
push
sti
je
fidivs
jecxz
aaa
mov
push
mov
sbb
adc
andb
sti
hlt
jp
movsb
cmc
lcall
push
outsb
test
push
or
push
xor
add
sub
xor
xchg
pop
lret
push
mov
adc
and
and
adc
adc
jl
dec
push
and
mov
sahf
mov
and
leave
mov
scas
xchg
adc
mov
clc
insl
int3
xor
adc
sbb
mov
sub
mov
pop
movsl
mov
stc
mov
mov
pop
pop
repz
inc
ret
and
adc
enter
pop
nop
or
mov
arpl
inc
loop
mov
add
push
daa
xchg
daa
or
mov
cmpl
in
lea
fs
insb
add
add
sbb
stos
push
add
dec
push
sub
std
addb
push
jecxz
sbb
movsb
xor
dec
jmp
xor
shrb
push
es
add
stos
pop
jns
sub
sbb
add
xor
and
add
bound
mov
pusha
and
cmpsl
mov
jge
movsb
jbe
xlat
and
adc
in
push
pop
sbb
push
daa
jne
sbb
or
filds
into
and
mov
lret
inc
or
add
xchg
fstpl
push
or
call
cmpsb
mov
das
mov
push
push
outsl
jmp
mov
insb
inc
lea
jne
push
or
push
jo
daa
shr
sbb
jle
jbe
xor
out
in
ret
cmpsl
sub
in
or
adc
sub
jle
or
je
cmp
xchg
jne
sarl
jmp
ds
sbb
add
jne
push
jmp
aas
repnz
in
mov
push
movsl
daa
ljmp
xor
popw
sbb
cmp
inc
cli
cmp
frstor
xchg
adc
and
mov
rolb
dec
and
leave
xorb
xchg
inc
xor
push
push
cmp
outsb
or
add
dec
jno
add
pop
loope
ret
pop
jle
inc
cs
jg
cmp
mov
mov
hlt
mov
aaa
mov
out
push
les
add
and
imul
sub
pop
push
adc
nop
xchg
int3
enter
mov
stos
addr16
sbb
mov
sarl
inc
mov
sbb
push
push
sub
lock
rclb
call
add
adc
jg
sub
dec
push
inc
push
sbb
xorl
imul
test
xchg
and
les
sub
and
sbb
jl
or
lahf
repnz
adc
ss
loop
cli
mov
out
and
lcall
sub
sbb
adc
fistpl
dec
bound
pop
and
cmp
sub
inc
rcl
sbb
push
jo
test
add
sub
xchg
jle
scas
lcall
adc
jno
mov
loope
jo
mov
lret
add
cltd
adcl
popa
cmp
js
jne
pop
adc
lods
pop
rep
adc
sbb
pop
mov
and
add
lret
in
popf
add
xor
pop
push
add
fnsave
je
nop
xchg
adc
sbb
fldl
popf
fcmovnb
popl
push
jb
cmp
cmp
sub
mov
push
je
jo
mov
fidivs
rcl
or
outsb
cmp
dec
pop
mov
jne
xchg
cmp
hlt
dec
pop
mov
dec
pop
mov
lods
add
dec
dec
adc
cli
dec
xor
jo
xchg
xchg
notb
add
or
add
and
mov
mov
rcrl
jb
adc
and
adc
mov
test
or
dec
adc
ret
adc
jae
int
push
pop
in
and
and
push
inc
and
in
enter
lcall
inc
lods
sub
cmp
inc
test
orl
test
cmpl
dec
and
push
add
mov
addl
mov
rorb
in
clc
adc
repz
adc
push
xchg
les
je
xor
mov
ljmp
or
inc
setae
ljmp
sbb
sub
and
push
add
jae
inc
ds
cmp
xor
lock
push
push
mov
jle
rcpps
mov
xor
push
outsl
loop
add
inc
mov
jae
sbb
mov
gs
inc
cmp
cmc
data16
push
fsubl
jmp
add
gs
in
push
lods
test
mov
add
movsb
xchg
pop
mov
mov
imul
inc
pop
mov
scas
pop
orb
xchg
sbb
aad
dec
dec
cmp
jge
addl
or
pushf
mov
sbb
push
cmp
push
nop
lahf
push
jmp
jno
jp
adc
cmp
aam
xor
mov
jnp
loopne
repnz
dec
mov
in
jp
jl
pinsrw
decb
mov
loope
cmp
lods
in
shr
xor
pushf
ss
add
popf
lods
test
inc
fiaddl
and
xchg
cmp
or
dec
xchg
xchg
movsbl
cmp
sbb
nop
mov
sbb
out
adc
lea
mov
lahf
push
add
addl
sbb
inc
inc
rcr
filds
push
fsubrs
pop
jbe
hlt
xchg
fs
sbb
xor
add
mov
rcll
pop
dec
and
sbb
cmpl
stc
lds
sbb
xchg
push
rcll
push
mov
or
dec
dec
sub
fdivs
adc
data16
dec
push
fiadds
cwtl
js
pusha
add
lods
jmp
ficoml
push
jecxz
mov
or
inc
dec
push
mov
or
shll
or
jo
adc
lcall
nop
rolb
pop
incb
loop
shrl
shl
popa
inc
mov
pop
addb
xor
or
repnz
sbb
push
icebp
push
in
sbb
inc
orl
cmc
cmp
inc
in
fiadds
sub
add
mov
mov
shl
ret
mov
adcl
cs
xchg
sbb
enter
sbb
nop
rolb
or
adc
fsubl
add
insl
shlb
or
aas
lods
inc
loopne
add
sub
orl
mov
pop
cmp
mov
or
or
in
sbb
call
pop
jl
stos
mov
xchg
push
mov
or
mov
pop
and
push
ds
test
loop
add
or
sbb
imul
and
jle
sub
add
or
adc
insb
in
sbb
adc
enter
cmc
push
xlat
pop
out
sub
insb
rcr
notb
push
insb
mov
inc
sbb
in
push
push
push
pop
cmpl
imul
inc
and
jne
or
mov
shrb
inc
and
add
popf
pop
call
cmp
and
subb
inc
hlt
jo
and
insb
push
pop
dec
dec
lea
call
dec
dec
pop
push
lahf
cwtl
push
mov
sahf
sub
outsb
and
push
rcll
xchg
vmovdqu
test
push
out
adc
jo
in
pcmpeqw
aaa
push
push
cmp
mov
insl
push
add
pop
dec
in
or
sub
clc
xor
sub
or
mov
fdiv
push
add
or
pop
pop
and
cmpb
xchg
xchg
or
dec
lcall
lahf
and
pop
and
cmp
dec
dec
pop
and
push
adc
or
mov
ror
add
out
adcb
data16
ret
jge
pusha
or
gs
or
jg
mov
add
in
push
add
sub
nop
lea
into
leave
mov
js
add
and
xchg
jge
bound
sbb
dec
sbb
ret
adc
push
mov
sub
pushf
jb
xor
mov
mov
xchg
loope
mov
sbb
mov
hlt
jmp
push
aad
data16
aaa
in
and
xor
in
movl
xor
loopne
sub
and
imul
inc
les
mov
mov
test
pop
or
inc
xchg
or
and
scas
ss
push
es
xchg
and
mov
aad
sbbb
movl
sbb
gs
test
je
test
sub
xchg
mov
ret
push
sahf
test
add
adc
mov
ret
jnp
scas
ficoml
push
add
shrl
and
cwtl
xchg
je
or
push
push
mov
divb
lcall
sub
mov
clc
push
fs
jae
mov
inc
clc
fdivrs
jl
rclb
and
add
cwtl
xor
in
scas
dec
imul
push
inc
sbb
push
sbb
sub
or
xchg
imul
gs
sbb
add
je
or
imul
push
lcall
fldl
sub
and
add
push
xchg
pop
xor
inc
jp
xchg
mov
lea
mov
push
cmp
lods
sub
fisubl
mov
mov
nop
sbb
ljmp
bound
lcall
push
inc
popf
mov
ret
insb
ret
inc
push
fwait
pushf
fwait
and
or
pop
inc
xor
int
inc
mov
jmp
es
pop
and
xor
fsubl
mov
xor
fwait
push
cld
xchg
fidivl
sbb
dec
sbb
ret
rcr
add
xchg
or
in
rcrb
adc
adc
jmp
mov
rcrb
adc
ret
inc
shll
sbbb
mov
push
mov
push
icebp
or
inc
sahf
sbbl
dec
test
push
jmp
ret
ret
adc
push
int
push
xor
hlt
or
mov
xchg
adc
test
sarb
aad
xor
xchg
sub
xchg
xor
ret
int
fs
adc
add
sub
or
sbb
xchg
pop
and
adc
insb
sub
xchg
in
jbe
mov
mov
xchg
sbb
jns
xchg
pop
pop
pop
sub
and
das
jb
pop
xchg
fsubl
push
sub
paddusw
add
adc
pop
loopne
jo
xchg
pop
mov
testl
call
mov
std
jmp
and
je
mov
add
lods
adc
sub
xchg
or
mov
xchg
rorb
cvtps2pi
outsb
adc
cli
jne
mov
jmp
pop
lods
std
test
lret
adc
mov
add
mov
enter
cmp
scas
in
scas
lds
test
jmp
jl
mov
daa
sub
push
sbb
mov
inc
mov
enter
xchg
rolb
pusha
imul
pop
fwait
adc
pop
clc
dec
and
cmp
pop
divb
outsb
loopne
dec
jo
lds
cmp
pusha
add
divl
jmp
push
and
divl
and
repnz
out
outsb
pop
sbb
adc
mov
scas
cmc
push
adc
dec
cmpsl
popa
or
jmp
je
popa
adc
loop
inc
sbbb
push
inc
dec
or
fwait
hlt
movsb
mov
lods
shll
add
or
fildl
xor
clc
cwtl
xchg
pop
dec
jl
push
aaa
add
add
enter
add
add
dec
outsb
and
adc
and
jno
add
push
jecxz
jnp
push
push
push
xor
pop
push
cmp
pop
outsl
jbe
jne
and
sub
int3
adc
push
or
xchg
cmp
sub
adc
add
movsb
inc
repnz
mov
movsl
mov
and
es
sub
add
jbe
push
mov
pusha
insb
ljmp
push
or
psubw
popf
xchg
add
movsb
and
adc
pop
lock
imul
inc
adc
cwtl
or
imul
pop
insl
add
jae
and
jne
es
jb
add
aam
sbb
sbb
mov
cltd
fisttpll
mov
push
push
sbb
pop
add
sbb
jnp
xchg
mov
inc
add
cs
push
fucom
xor
or
sahf
das
jns
bound
inc
cmp
and
add
popf
jo
sahf
push
add
clc
les
lcall
lahf
incl
subl
pop
adc
pop
push
das
or
cld
sbb
mov
jmp
cmpb
imulb
movsb
add
dec
loopne
jo
push
or
or
sub
push
add
mov
test
push
das
jnp
rolb
push
fbstp
adc
fstpt
add
add
dec
or
sbb
xor
or
imul
shrb
push
push
sub
ret
cmp
gs
insl
sbb
push
or
add
jecxz
fadd
inc
loopne
mov
xlat
xchg
push
sbb
test
mov
push
imul
rcl
rolb
or
xor
js
sub
ds
jo
push
lock
add
fldenv
ret
nop
xchg
push
pop
sub
sbb
pop
add
sub
push
xchg
add
fs
jns
add
mov
dec
cmp
faddl
mov
xchg
jb
sbb
clc
movsb
sbb
ret
imul
sarl
imul
loop
add
jp
inc
add
xor
adc
or
sub
popa
sub
add
enter
push
inc
pop
cwtl
add
aas
xor
insb
mov
mov
jl
sbb
mov
jo
ret
pop
mov
fcoms
xor
loopne
push
scas
je
pop
dec
imul
cld
lea
into
testl
sti
add
leave
xchg
pop
std
mov
pop
mov
setnp
sub
subl
jae
or
pop
cmpl
xor
add
and
cmp
push
mov
mov
daa
pop
rolb
or
add
or
xchg
les
push
mov
or
and
dec
mov
leave
and
push
fdivl
addr16
cmp
push
cs
les
pmaxsw
jne
mov
mov
and
push
and
push
push
nop
inc
repnz
push
or
push
in
stc
mov
inc
mov
or
add
int3
lea
sbb
sub
sahf
nop
pop
mov
mov
mov
or
jo
ret
insb
imul
daa
push
and
mov
sub
xor
add
inc
loope
mov
jg
push
sbb
jmp
xor
fisubrs
in
mov
mov
lds
jae
and
bound
mov
lret
repz
push
cwtl
inc
xchg
or
push
orb
ja
rcrl
sar
sub
rcrb
add
xor
pop
call
or
imul
sbb
inc
sbb
mov
arpl
xor
jmp
jl
sub
int
xchg
pop
pushf
enter
mov
sbb
inc
ret
int
je
and
inc
sub
daa
dec
or
mov
mov
int3
mov
mov
adc
pop
shl
xchg
mov
push
adcb
sbbl
push
gs
fs
lret
or
in
inc
inc
push
fmul
into
test
push
or
push
xor
mov
add
xchg
in
jo
xor
inc
cmp
nop
call
sbb
push
leave
or
sbb
outsl
mov
sbbb
test
cltd
sub
push
push
dec
movl
je
mov
mov
adc
dec
adc
sbb
es
test
iret
adc
or
pop
inc
loopne
dec
add
cmp
lods
test
xlat
adc
out
popa
xchg
fdivrs
jmp
xchg
adc
inc
add
lock
adc
dec
sub
repz
test
adc
push
and
pop
scas
ret
cld
or
jp
add
xchg
sbb
sub
xorb
rorl
sub
mov
pop
nop
data16
mov
cmpsl
imul
push
ds
popa
into
push
push
arpl
inc
adc
pop
pop
pop
cli
push
lods
push
jg
test
rorl
rol
mov
sub
loop
sahf
cmp
and
ja
rorb
cs
cmp
cmp
gs
sub
test
cmpsl
mov
jns
and
xor
and
jb
add
daa
lods
imul
mov
lahf
pushf
mov
les
je
into
xchg
lock
lea
push
fidivl
sub
inc
test
jno
push
jle
arpl
jg
mov
test
js
xor
sub
inc
mov
xor
in
test
sbb
xor
xchg
call
add
mov
enter
stos
adc
addl
push
and
loope
push
pop
nop
dec
lock
addl
test
sbb
or
cmc
or
fwait
lcall
std
mov
aad
mov
inc
and
movsl
sbb
push
dec
xor
in
adcl
and
or
push
scas
inc
pop
sbb
cmpb
sbb
pop
push
xor
or
sub
insb
or
mov
es
mov
aam
jnp
mov
jge
mov
call
push
mov
push
sub
adc
lods
fs
push
fcompl
dec
inc
dec
pop
popf
sarl
rcrb
jmp
push
inc
out
and
imul
inc
mov
dec
add
scas
test
cmp
mov
mov
mov
les
xchg
fsts
popf
in
inc
pop
sbbl
inc
mov
xor
add
dec
add
test
pop
push
mov
leave
into
jne
dec
mov
daa
fbstp
leave
stc
and
inc
mov
cmp
pop
or
mov
adc
inc
push
sti
sbb
imul
sub
mov
mov
inc
push
repnz
les
enter
and
enter
add
push
dec
sub
adc
inc
and
xorb
adc
mov
sbb
mov
mov
add
cmpb
add
and
movsl
sbb
sbb
xor
adc
mov
inc
xor
std
stos
js
call
out
fldl
lods
aam
jno
jae
mov
es
adc
push
insl
push
sub
add
incb
dec
add
jne
push
mov
pop
sbb
xchg
push
test
into
popf
inc
xor
imul
idivb
xor
mov
ja
jmp
sub
push
xchg
xor
xchg
cmc
mov
cltd
cmp
jae
sub
cmp
push
xchg
mov
push
and
add
pop
les
xchg
bound
adc
bswap
aas
push
sub
jno
ret
testl
mov
sub
stos
pop
or
stc
lret
jae
push
push
setp
add
xor
jmp
xor
enter
ret
je
sbb
frstor
adc
mov
push
push
cld
je
mov
in
sbb
jne
arpl
pop
dec
mov
js
sub
add
push
leave
mov
loopne
lcall
adc
inc
sbbb
fcoms
insb
and
out
add
in
inc
or
push
push
test
and
inc
push
xchg
daa
mov
push
rcrl
push
lods
lret
inc
in
and
dec
sub
cmp
and
and
or
jne
subl
cmp
push
add
push
cltd
loop
adc
push
push
dec
call
fdiv
dec
or
cmp
mov
xor
xchg
mov
movsl
or
xchg
mov
sub
inc
and
dec
add
insl
sub
pop
rclb
inc
bound
jb
add
and
dec
test
sbb
mov
mov
addr16
test
sub
sub
test
fadds
jne
into
mov
outsb
clc
outsl
and
push
je
push
dec
adc
sbb
dec
sbb
pusha
outsl
ret
push
pushl
sbb
jnp
ficoms
mov
rcrb
cmp
sbb
inc
jo
or
jge
sub
inc
call
or
jp
add
mov
jp
pop
or
sub
cmpsb
mov
insl
mov
les
mov
lret
ljmp
mov
pop
push
mov
and
outsb
add
das
push
and
push
mov
pop
dec
sub
sub
fistpl
mov
and
adc
out
cmp
pop
ljmp
testl
push
movsl
sub
fimull
aam
lcall
inc
dec
adc
xchg
inc
sub
repz
cmpl
push
add
test
xor
cmp
out
mov
pop
sarb
jmp
or
inc
aaa
sub
xchg
lods
jl
add
dec
or
mov
cmp
and
jle
push
adc
clc
clc
mov
pusha
sub
pop
jne
inc
imul
movsb
sub
lods
jmp
xor
lods
and
mov
pop
or
nop
nop
or
mov
aam
pop
cmp
and
inc
push
push
pop
cwtl
adc
aam
push
dec
lock
insl
adc
xor
shlb
cmpb
jp
jo
enter
outsb
or
cmp
and
mov
outsl
push
xchg
jmp
jecxz
xchg
orl
dec
enter
rorb
push
movsb
cmc
andl
sbb
xchg
rorb
test
js
and
sahf
cli
cmp
mov
adc
jnp
jge
or
push
je
push
mov
addr16
out
xor
sub
les
pop
sbb
push
adc
jl
xlat
lock
movsl
test
jne
test
dec
dec
mov
faddp
xor
es
dec
dec
mov
push
xchg
mov
adc
add
pop
dec
je
popa
imul
inc
in
cmc
rcrl
push
adc
pop
and
test
adc
loope
jl
fidivrs
std
inc
loope
push
fisttps
je
je
pop
fildl
adc
and
xorb
add
cwtl
inc
sbb
les
test
ret
cli
je
or
or
mov
xorb
push
ret
jg
insb
jnp
mov
hlt
cwtl
push
fwait
sub
cmp
lods
push
push
mov
or
je
or
pushf
sub
adc
cmp
push
pop
push
dec
out
sbb
add
push
popa
add
ficomps
fdivrl
xchg
loopne
orb
data16
mov
push
pusha
aaa
fildl
add
in
into
popf
mov
or
or
cs
mov
xchg
incb
sub
add
dec
jl
xchg
jmp
femms
pop
cmp
loop
sbb
and
and
add
and
lods
mov
scas
sbb
test
mov
mov
shll
push
orb
add
xor
lret
sbb
add
movsb
xorb
lahf
cmovb
insb
sub
dec
add
cmpsb
stos
jecxz
xor
push
shrl
and
ja
jl
jmp
and
test
lea
cmp
adcl
dec
enter
push
push
mov
push
xchg
fdivs
mov
shr
or
pop
add
xchg
mov
cmpsb
xchg
dec
jmp
mov
inc
xchg
js
fcomi
loop
rolb
fstl
ja
sbb
cld
push
dec
push
into
cmp
movsl
outsb
stos
mov
cld
adc
cmc
daa
dec
jmp
mov
jne
push
sbb
push
mov
arpl
bound
cmp
imul
sub
lahf
dec
lods
or
sub
cld
mov
jmp
mov
jmp
and
jno
push
jne
mov
rcrl
mov
test
andl
insl
jne
or
push
dec
sbb
or
aas
gs
or
pop
popf
pop
dec
push
dec
pushf
mov
cs
punpcklwd
inc
je
pop
mov
cmp
xor
sbb
and
into
push
cmpb
mov
mov
jo
in
inc
jge
pop
sub
daa
test
jnp
pop
or
xor
xchg
jnp
fsub
sbb
jne
sub
inc
pop
fcmove
jge
shufps
push
ret
and
jmp
cli
out
push
imul
inc
cltd
dec
ficompl
xor
icebp
adc
dec
lods
dec
nop
and
cmp
ja
clc
sub
cmc
jo
jno
add
and
jno
mov
inc
int
les
ret
cwtl
lea
hlt
cwtl
sub
mov
call
pop
xchg
fidivl
or
sub
pusha
push
sub
sti
sbb
adc
jmp
adc
push
mov
mov
cmove
push
lock
push
add
cmp
test
push
in
push
shlb
cmp
sbb
sub
add
sbb
sbb
push
hlt
mov
push
jns
rcll
add
hlt
pop
lods
pop
push
inc
and
inc
sbb
out
lea
cmpsl
cmp
and
sbb
aad
adc
inc
push
sub
jo
in
xchg
xchg
inc
add
jae
les
lock
or
or
sbb
xchg
mov
insb
mov
adc
sub
popa
gs
xchg
mov
dec
adc
xor
inc
dec
push
cmp
inc
sub
lods
push
cmp
xchg
xchg
mov
inc
dec
mov
ljmp
xchg
push
inc
add
rcrb
push
or
xor
popa
cmp
subl
add
jae
pop
push
test
mov
pop
mov
sbb
xor
cld
xor
sub
adc
sub
cmpsb
cmpsb
pop
mov
pop
add
sub
aaa
insl
inc
sbb
outsb
adc
lods
mov
inc
shll
mov
ficoms
mov
outsl
and
pop
popa
je
mov
jb
incl
and
lods
fs
jnp
push
shr
jae
or
nop
cmp
push
jae
and
push
in
cmp
mov
adc
andl
shlb
or
xchg
fbld
sbb
and
mov
jl
xor
dec
daa
add
xor
xchg
push
add
roll
movsb
inc
or
cmp
dec
sub
das
push
mov
decl
movsl
jl
pusha
dec
or
and
lret
adc
ljmp
add
mov
lds
shll
lret
pusha
inc
mov
jbe
xor
fwait
jae
push
pop
push
dec
pop
mov
adc
push
xchg
and
push
jmp
cmp
imul
fs
test
dec
push
jns
test
xor
js
xor
shlb
mov
xorb
jl
push
dec
sub
arpl
rorb
add
push
les
insl
add
inc
rcl
movsl
sub
push
xchg
lds
jbe
mov
in
cmp
jg
add
sbb
xchg
pop
jnp
dec
js
xchg
repnz
jmp
jo
fsubl
adc
jb
pop
add
mov
xchg
test
pop
pop
sub
add
cmp
pop
add
sbbl
mov
mov
mov
inc
rcrb
add
dec
and
jp
cmp
and
leave
test
insl
and
fsubrl
cmp
push
sbb
test
jmp
push
adc
sahf
movsb
jge
mov
pop
cmp
inc
push
xor
sbb
pusha
push
add
push
add
pop
push
test
movsl
mov
aas
sub
cltd
leave
and
add
inc
or
inc
and
push
cmp
enter
push
jmp
and
push
outsl
mov
dec
and
sbb
adc
pop
mov
dec
xchg
and
adc
rcrb
cmp
test
add
or
jo
xchg
rol
adc
xchg
push
addl
sbb
sub
pop
dec
or
jae
pop
add
roll
sub
notl
and
jne
push
add
outsl
lret
xchg
into
insb
test
rolb
aad
sbb
iret
push
int
emms
es
or
inc
and
pop
test
jl
daa
rorl
stc
shrl
add
add
out
shlb
push
sbb
add
cmp
mov
and
scas
adc
push
push
test
rorb
or
inc
and
outsl
sbb
orb
insb
iret
aam
mov
popw
push
lock
or
rolb
sbb
sub
fnsave
jecxz
and
rorb
push
mov
icebp
leave
ja
xchg
jg
fiaddl
pop
enter
jo
mov
mov
or
xor
icebp
movsb
leave
dec
inc
lock
dec
push
fildl
adc
iret
cld
andb
mov
lret
lock
xchg
pop
push
fcoms
adc
sbbl
adc
pop
add
and
pop
or
sub
sbb
jb
pop
scas
adc
daa
iret
inc
andb
inc
sbb
push
enter
adc
lret
add
popf
pop
sbb
and
cmpsl
aaa
add
mov
rol
inc
fwait
dec
aaa
daa
dec
pop
insb
cltd
mov
je
or
popf
adc
push
jae
mov
inc
xlat
popf
inc
mov
enter
push
dec
push
add
gs
add
inc
in
mov
xor
shll
cltd
sbb
and
adc
xor
cmc
jmp
inc
cwtl
cmp
and
mov
or
mov
xchg
shrl
sub
cmp
dec
loop
scas
test
dec
popa
imul
inc
ret
cmp
dec
incb
sub
dec
pop
inc
xor
daa
je,pt
mov
sbb
push
push
adc
cmp
jb
fsubrs
add
pop
dec
adc
cmp
push
pop
xor
add
rolb
imul
fistpl
dec
mov
jmp
loope
je
adc
jne
mov
cltd
arpl
mov
pop
dec
push
cmp
pop
lds
adc
add
push
sbb
dec
repz
mov
ret
pop
nop
mov
and
lahf
gs
jg
or
xor
jl
pop
xchg
daa
out
dec
inc
nop
jbe
mov
sbb
lret
aam
xchg
dec
shl
test
aam
push
or
mov
dec
cmpsb
jmp
mov
mov
pop
jmp
nop
dec
cmp
inc
cs
dec
sub
xor
stc
and
nop
in
leave
mov
adc
sbb
inc
cmp
jl
pop
jmp
xchg
mov
pop
or
test
cmovne
sub
repz
ficomps
sub
lret
sub
mov
dec
int
pop
adc
pusha
mov
sub
test
leave
loopne
inc
jns
dec
pop
in
movswl
mov
addb
jg
roll
jg
das
addr16
pop
mov
adc
lods
dec
jmp
mov
movsb
mov
pop
cmp
push
mov
inc
dec
mov
push
out
mov
or
dec
daa
inc
stc
mov
les
sahf
out
xchg
stos
pusha
mov
idivl
int
lds
pop
lds
pop
dec
lds
test
inc
insb
jmp
inc
fnstenv
xor
inc
lds
adc
mov
inc
xchg
subb
clc
clc
js
faddp
jbe
leave
aam
push
fcom
dec
fisubrl
and
ja
cmp
xor
jmp
jmp
sub
dec
mov
sub
inc
stc
push
cld
daa
andl
fidivs
push
ljmp
or
mov
movsb
inc
jo
mov
add
xchg
mov
ret
loopne
push
xchg
push
lock
pop
xorb
mov
insb
dec
pxor
and
add
mov
fidivrs
and
mov
or
test
xor
mov
fs
pop
adc
sbb
xchg
or
cmpsb
in
mov
jae
jo
or
sbb
push
and
les
inc
jp
xchg
cmp
push
jo
mov
jnp
in
or
insb
sub
sub
scas
ja
stc
movsb
jbe
test
lods
mov
sbbl
pop
xchg
enter
cltd
rcrb
lods
dec
jg
and
mov
inc
repnz
push
push
insb
sbbb
or
cmp
cmpsb
imul
fcomp
and
in
or
and
add
ret
mov
in
aad
xchg
imul
repz
test
inc
jmp
scas
test
sbb
out
popf
add
push
pop
dec
invd
es
add
ds
shlb
lcall
push
push
sub
mov
mov
or
insl
jo
dec
adc
es
inc
inc
jl
inc
dec
js
ljmp
dec
push
dec
insb
dec
dec
or
push
rcrb
cld
addl
dec
loope
or
adc
ret
sbb
push
aam
adc
jnp
lock
xor
push
mov
sub
fiaddl
test
pop
cmp
push
mov
mov
sbb
rolb
pop
sub
jnp
movsb
daa
inc
push
filds
das
push
enter
jge
xchg
mov
jp
push
and
mov
mov
int
hlt
mov
or
in
mov
movsl
adc
rclb
fwait
push
out
inc
cmp
sub
lds
push
pop
cmp
xchg
xchg
cmp
mov
popa
pusha
arpl
sub
xlat
ret
pop
push
inc
add
roll
jne
push
aad
mov
add
push
test
sbb
dec
sarb
push
or
std
jnp
pop
daa
iret
xchg
repz
ds
sub
sbb
xor
add
and
pushf
testb
sub
add
cmp
mov
stc
pop
mov
dec
mov
xchg
mov
cmp
and
add
sbb
xor
stos
push
xchg
in
dec
bound
and
daa
addl
aas
cmp
xchg
jne
or
dec
loopne
int
inc
adc
mov
xchg
sub
stos
inc
pop
inc
jo
jnp
sub
inc
es
xor
loopne
xor
or
inc
inc
shll
nop
test
xor
dec
cs
push
cmp
cmp
mov
imul
test
cmp
loopne
mov
cmpsl
jge
jp
adc
or
push
out
loopne
adc
xchg
jns
add
cwtl
mov
push
or
push
cli
imull
ljmp
push
jmp
test
lods
movsl
cwtl
adc
mov
movb
es
mov
imul
dec
leave
ja
push
inc
cwtl
inc
jae
lea
cmp
push
push
arpl
mov
xor
sub
or
mov
jmp
jae
sbbb
fidivrs
int3
mov
and
add
je
mov
adc
add
sub
lods
mov
call
dec
and
test
sub
mov
xorb
sub
and
mov
ret
popf
sbb
nop
cwtl
enter
loopne
test
adc
sub
xchg
lds
ds
push
mov
or
popf
lods
lods
inc
dec
ds
cmp
pop
es
or
jns
nop
add
sbbb
in
int3
jo
jne
mov
aad
add
movsl
movsb
nop
push
ljmp
scas
data16
mov
xchg
out
xor
jo
push
jge
cwtl
mov
je
mov
bound
push
idiv
dec
daa
dec
jnp
cmp
mov
ret
jp
cmp
andb
mov
ja
push
mov
test
orb
adc
ss
mov
add
pop
add
or
inc
rcr
sbb
cmpsb
jo
inc
sbb
mov
sbb
nop
or
enter
jbe
push
outsl
inc
dec
or
or
loope
inc
sub
stos
ret
femms
pop
shlb
jg
pop
mov
and
sub
push
cs
adc
jne
xor
xchg
mov
test
les
pop
jb
mov
xlat
scas
mov
gs
or
outsl
lret
inc
mov
xor
pop
outsb
xor
push
pop
sti
dec
rorl
sub
jge
sub
mov
out
jo
mov
mov
stc
sahf
sub
xor
and
in
sbb
incb
adc
test
push
movb
or
and
push
std
cli
shrb
push
inc
adc
mov
push
lea
sub
nop
push
lock
mov
dec
mov
enter
flds
mov
test
stos
rcll
es
mov
ds
js
mov
bound
icebp
sbb
sub
pop
mov
fisttpll
inc
addr16
out
xchg
scas
adc
loopne
je
fiaddl
xchg
daa
xorl
call
dec
cmp
into
jnp
test
mov
lret
std
lock
loop
or
push
push
jmp
push
movb
or
jns
inc
push
rclb
sub
ds
push
adc
in
jp
fisubs
test
jmp
shll
push
and
and
inc
pop
add
addr16
addb
sub
enter
xchg
dec
adc
cli
ss
or
mov
cmp
shrb
xchg
out
ljmp
and
and
mov
adc
xchg
stos
stos
jne
mov
pop
push
cmpsl
cltd
bt
shll
dec
dec
inc
sub
adc
inc
shlb
into
adc
mov
push
sub
fldcw
mov
insb
xor
js
mov
in
or
inc
mov
sbb
cmc
hlt
inc
cmp
into
js
jecxz
rol
rclb
push
scas
and
sub
xor
push
mov
push
sti
push
pusha
or
std
jns
fsubs
pop
in
jp
into
imul
clc
push
or
pop
push
sub
les
mov
adc
sbb
sub
je
addr16
sbb
add
push
push
xchg
inc
mov
movsb
stc
adc
sti
enter
inc
mov
add
fwait
in
inc
xchg
jns
mov
adc
adc
xchg
or
jb
je
and
sub
call
jns
add
mov
or
jne
jbe
das
scas
or
xor
nop
es
mov
push
push
lods
sbb
inc
cmp
mov
push
and
pop
aas
ret
jge
pushf
sarb
mov
lods
imul
sbb
rorl
sbbl
dec
sbb
inc
lcall
sbb
xchg
lods
mov
sbb
insb
mov
stc
imul
xor
inc
sbb
push
push
shlb
aam
jmp
dec
add
pop
ja
test
or
cmpsl
movsl
push
xchg
cwtl
je
mov
jmp
mov
cld
mov
jmp
js
inc
faddl
or
fldenv
rolb
sbb
jb
rcr
loope
mov
push
fldz
mov
and
jo
arpl
fdivs
inc
cmp
jo
aas
or
mov
pop
dec
bound
sbb
addl
sub
daa
inc
lock
adc
or
and
add
shll
and
adc
movsl
or
xor
and
int3
sub
push
out
add
test
add
xor
inc
adc
xchg
je
push
xchg
xor
adc
test
pop
add
lock
push
rcl
lcall
xorl
sbb
lahf
in
and
xor
sub
xchg
adc
mov
dec
ss
jno
add
sbb
adc
jle
test
lea
jmp
push
js
sub
xor
inc
jle
in
push
call
lahf
mov
pop
mov
xor
or
mov
push
push
rcrl
xor
addr16
xlat
xor
cltd
mov
dec
dec
aad
hlt
sub
push
xchg
xor
or
aas
lea
push
add
inc
mov
test
imul
mov
adc
adcb
ret
scas
jle
jb
add
mov
cs
addr16
add
lock
add
add
pop
movl
add
adc
mov
into
ficoml
flds
mov
xor
out
push
loope
stos
fwait
cltd
jbe
out
fisubl
mov
add
adc
sub
add
xchg
inc
add
stos
xchg
mov
or
mov
xchg
mov
lods
lods
or
enter
test
sub
mov
or
mov
test
sub
insb
adc
push
sub
js
iret
pop
push
or
fadds
addl
push
jnp
dec
pop
cwtl
adc
data16
cmp
and
mov
filds
js
jo
mov
or
adc
popa
and
xchg
jl
mov
mov
jo
dec
xor
fiadds
aam
add
xor
cwtl
and
jns
mov
push
fists
inc
lcall
popa
push
push
insb
pop
movsl
xor
sub
or
jmp
push
fstps
nop
cmpsb
out
movhps
dec
sub
sbb
test
adc
nop
pop
mov
xor
test
mov
inc
popf
and
mov
add
inc
das
aaa
add
pop
cmpsb
popa
xchg
sbb
inc
xchg
rolb
cmpsl
cwtl
pop
and
jmp
xor
lea
xadd
push
sbb
and
lods
daa
imul
mov
sbb
adc
test
or
xorl
out
in
stos
adc
jmp
test
js
sbb
mov
push
mov
lret
add
js
add
push
mov
xchg
push
sbb
das
adc
leave
jl
seto
pextrw
addl
mov
adc
xorb
jnp
fs
xor
pop
int
and
call
dec
adc
iret
push
pop
mov
jne
addl
cltd
jmp
or
mov
dec
adc
add
lods
add
scas
and
rcrb
pop
cmpl
test
add
fdivr
addb
cwtl
lret
inc
jp
sbb
and
movsb
fwait
push
dec
jne
test
cmpsl
xor
scas
adc
adc
sti
test
mov
sbb
sub
shr
sub
dec
or
xchg
iret
rcrl
xor
mov
mov
lock
cmpsb
ja
aam
loop
push
int3
hlt
out
pop
inc
xchg
adc
xchg
inc
or
loope
pop
enter
cwtl
fisubs
jno
jne
sbb
out
adc
cmp
add
and
xor
enter
lods
adc
mov
lds
flds
pop
and
lea
xchg
cmp
int3
imull
sub
das
sti
or
add
test
rcrl
in
pop
cmp
cli
inc
clc
jmp
adc
mov
imul
not
adc
ret
push
and
or
pusha
push
sub
push
in
inc
pop
cmp
adc
push
xchg
shrb
cmpsl
and
mov
sub
and
ss
lock
bound
push
ret
sbb
push
xchg
and
test
dec
addr16
or
dec
adc
mov
pop
jp
dec
in
inc
jo
aad
xor
push
push
mov
sbb
ljmp
sub
sub
jns
sub
add
lock
bound
ret
cmp
dec
nop
fimull
fidivl
dec
sbb
sbb
xchg
fisubrl
pop
inc
inc
cmp
adc
jecxz
inc
add
xchg
leave
leave
and
adc
mov
jbe
adc
mov
sbb
push
xchg
ret
sarl
icebp
pop
mov
push
push
rcrl
cmp
adc
or
pop
cli
sbb
insl
pop
cmpsl
dec
aas
je
mov
mov
jne
jne
and
mov
test
adc
fimuls
inc
adc
push
add
js
ljmp
mov
jecxz
push
pop
jbe
daa
cwtl
rorb
in
push
in
js
add
scas
movsl
add
sub
popf
cmp
push
add
dec
and
add
mov
add
adc
js
int
xor
movntq
xchg
int3
add
jl
ret
or
fucomi
inc
adc
imul
cltd
sbb
shlb
std
pop
rclb
addl
adc
or
xchg
lret
daa
push
sub
in
mov
cmp
sbb
adc
test
sbb
push
pop
into
mov
adcb
jle
fdiv
inc
sub
je
ficomps
add
insb
aam
sub
jne
mov
jo
mov
lock
sti
sub
add
or
rcll
outsb
test
pop
test
jmp
xor
movsl
jge
adc
push
fcmovb
popa
inc
push
les
inc
popf
gs
popf
dec
dec
sub
jp
das
insl
add
or
mov
mov
stc
cmp
mov
mov
dec
jmp
xor
je
xlat
subl
add
add
outsl
and
cwtl
or
mov
xchg
sub
pop
fimuls
sbb
sbb
and
sbb
sub
pop
or
xchg
dec
mov
roll
pop
and
minps
fxch
adc
pop
adc
add
in
pop
aas
mov
push
add
sub
adc
stc
in
inc
add
add
or
pop
das
pop
sbb
adc
inc
jb
pop
dec
fildl
loopne
nop
push
sti
and
iret
pop
iret
inc
dec
fisubl
test
in
cmp
mov
and
movsb
mov
xlat
cmp
and
lcall
je
cltd
push
sub
push
stos
cmpsl
andl
cmp
or
sub
imul
jne
jg
add
mov
lods
out
xchg
mov
cld
test
shr
mov
mov
push
push
inc
and
push
addr16
sbb
rorb
push
test
lahf
cltd
sub
jo
cwtl
inc
roll
bound
testl
imul
and
add
push
pusha
daa
inc
xor
sub
mov
cmp
add
loopne
jo
lods
adc
shl
gs
xchg
mov
pushw
ja
shlb
fadds
xchg
push
pop
mov
add
ret
imul
popf
test
aad
ret
mov
into
out
fiaddl
xor
lret
add
shlb
add
push
mov
mov
sbb
xor
pusha
ja
mov
mov
loopne
xor
rolb
mov
add
movsb
pop
insb
sar
sbb
bound
inc
and
movsb
adc
pop
pop
call
loop
or
pop
mov
mov
lea
adc
mov
dec
add
cmp
sub
jle
mov
xchg
jmp
mov
stc
test
sub
sarl
xchg
dec
movb
std
add
lahf
in
inc
cmpsb
leave
popf
inc
inc
adc
push
mov
adc
jne
lods
dec
adc
xchg
sub
popa
pusha
cmp
test
push
push
adc
inc
adc
push
mov
loop
mov
lock
aaa
mov
sub
subb
ss
sbb
stc
push
sbb
sbb
inc
and
sub
add
push
fidivrl
dec
adc
and
sti
push
add
xlat
add
es
mov
mov
dec
pop
xor
push
cmc
mov
sub
push
fwait
adc
in
popf
es
or
repnz
sbb
clc
add
sub
push
sbb
dec
aaa
mov
stc
lea
loope
push
pop
test
fisubrs
or
loopne
cld
outsl
cmp
cmpl
jno
push
jae
and
pusha
fbld
mov
ror
and
xchg
add
dec
push
nop
imul
sahf
insb
push
dec
xor
sub
pop
repnz
jo
add
sub
jb
je
addl
pusha
loope
dec
popf
or
push
lea
add
xchg
pushf
push
xchg
dec
add
sbb
or
xor
sub
imul
xor
daa
pop
lcall
call
je
mov
daa
insl
out
loope
lods
movsb
fisttpl
aad
mov
xlat
scas
shll
jb
or
adc
arpl
or
sub
lret
jp
nop
jbe
daa
add
sub
adcl
add
test
in
call
das
lret
xchg
icebp
pop
pusha
add
push
push
sbb
or
mov
je
sub
mov
or
push
bound
inc
in
out
xchg
sbb
or
dec
sbb
mov
jge
push
fsub
inc
fistl
jl
xor
ret
call
mov
and
push
dec
loopne
lods
lea
ds
push
mov
mov
push
inc
sub
clc
sbb
fdivs
xchg
jecxz
mov
testb
adc
roll
outsb
addr16
int3
out
mov
fs
xchg
in
mov
jmp
lea
sti
fadds
mov
mov
xor
fsts
and
mov
lods
xchg
xchg
adc
loope
ljmp
pcmpgtw
xor
lret
sub
inc
shll
xchg
jbe
test
push
sbb
cld
push
inc
push
dec
dec
xor
pop
or
or
in
lret
adc
adc
or
mov
dec
add
gs
adc
xlat
fldt
cmp
ljmp
push
push
dec
pop
cltd
fcomp
out
or
std
or
sbb
mov
scas
push
push
int3
inc
fdivrl
or
rolb
jl
leave
ficoms
lahf
xorl
xchg
sbbl
xor
dec
push
addb
test
in
test
add
and
dec
and
jmp
sbb
andl
mov
jmp
push
jne
cmpsl
add
xchg
lock
cwtl
movss
jno
ja
adc
leave
cmpsl
add
mov
lcall
pop
xor
mov
push
shrb
fdiv
push
add
sbb
es
adc
xor
xchg
inc
or
jmp
or
add
dec
push
cmp
sahf
add
imul
adc
rcrb
or
lea
lea
cmpsb
lods
dec
insb
ffree
or
loopne
lahf
lgdtl
cs
jg
sbb
inc
mov
loope
ficompl
sub
shl
and
jo
or
and
gs
fwait
mov
mov
mov
xor
sub
mov
movl
std
jle
inc
mov
add
add
addl
fdivs
or
cmp
add
mov
es
cmp
pop
mov
inc
dec
jmp
add
outsb
ret
pop
loop
mov
mov
mov
sar
or
or
mov
xchg
add
add
push
inc
insl
mov
fists
ds
cmp
cld
and
pop
out
jmp
push
sub
add
inc
mov
jmp
jl
scas
pop
add
mov
dec
js
dec
test
out
mov
sub
clc
and
push
sbb
and
popa
in
xor
add
add
jmp
mov
pop
inc
jns,pn
add
fs
adc
out
and
sub
dec
pop
sbb
xchg
dec
ret
sub
lds
pop
and
push
inc
sbb
dec
mov
cmpsl
or
pop
add
inc
jmp
push
inc
cmp
loope,pn
sub
outsb
jnp
popa
lods
add
adc
movsl
lret
cmp
pusha
nop
jl
lods
and
push
icebp
lea
filds
jmp
and
rcrb
mov
repnz
notb
repz
ror
in
sbbl
hlt
or
adc
popa
push
popa
and
inc
lods
invd
and
mov
es
mov
mov
pop
aad
stos
adc
pop
and
incb
push
cmp
adc
lret
jg
js
and
push
mov
or
orl
lods
int
mov
add
sbb
pusha
dec
fwait
xlat
and
sarb
pop
dec
push
push
add
nop
or
int
and
fstpl
cmp
xchg
or
test
add
mov
sbb
stos
movsb
adc
movsb
mov
push
pusha
push
mov
mov
jle
and
add
sub
ret
jl
aam
mov
andb
mov
inc
sub
fldenv
adc
push
add
fcoms
push
stos
imul
sbb
add
stos
ja
ja
jl
mov
and
mov
stos
enter
cld
adc
lret
sahf
lds
ja
jno
push
add
pop
jg
nop
dec
or
cltd
fs
dec
outsb
out
cld
pop
inc
rolb
inc
add
das
pop
pop
js
mov
das
add
xchg
or
push
pop
sbb
loopne
inc
jnp
push
ss
cmp
inc
dec
rcrb
xor
daa
adc
and
add
and
xchg
shl
dec
add
leave
int
and
and
mov
push
or
jg
fildl
jmp
test
jg
cmp
jae
int
xlat
pop
popa
addr16
mov
fdivrl
mov
inc
adc
and
jl
cli
fcoml
aas
outsb
fwait
clc
pop
cmp
xchg
scas
sub
out
sarb
inc
adc
aad
or
sub
dec
dec
sarb
push
mov
pop
icebp
cs
sub
and
mov
or
cmp
sbb
dec
das
in
adc
push
jo
add
sub
lret
cmp
in
lock
insl
sub
ret
fwait
mov
leave
add
xchg
mov
cmp
jne
lcall
adc
xor
sbb
movsl
adcl
ja
add
clc
mov
sbb
push
and
ljmp
lock
push
ret
or
bound
add
push
pop
std
loop
adc
idivb
imulb
inc
test
jmp
orl
or
orb
mov
add
xchg
adc
shlb
mov
or
push
jb
cld
sbb
inc
mov
or
sub
adc
adc
clc
or
das
rorb
cmp
loopne
cmp
adc
xchg
cmp
and
mov
cltd
lahf
movsl
push
shrb
jo
movl
inc
adc
jmp
je
cmp
xchg
fiadds
sub
push
movzwl
in
lds
dec
cli
loopne
xor
mov
cmp
pusha
cmp
gs
movl
cli
lret
inc
jl
dec
push
scas
inc
jge
call
adc
or
dec
and
scas
ret
inc
and
inc
les
mov
cmp
jge
xchg
shlb
cwtl
shrb
pop
push
jne
ljmp
dec
loop
push
scas
inc
mov
sti
pop
jne
roll
sarb
sti
push
push
jmp
ss
into
cli
sub
int
ss
push
sub
test
or
pop
aam
outsb
mov
inc
testl
jnp
or
test
mov
repz
loope
add
and
cmp
insb
or
pop
mov
add
jno
dec
ja
adcl
enter
or
jmp
sub
mov
xor
jo
inc
hlt
jno
mov
cmp
stos
addr16
mov
mov
fnstsw
jne
dec
push
loopne
mov
loop
ret
mov
xor
xor
lea
sbb
lahf
or
inc
scas
je
dec
fstl
or
inc
sub
inc
push
add
dec
shlb
pop
call
insb
insl
cwtl
mov
push
or
cltd
lcall
mov
push
inc
hlt
and
subl
ja
and
fs
cmpb
test
and
pop
test
inc
pop
or
inc
and
adc
jl
insl
or
stc
pop
jle
stc
adc
lcall
shlb
xchg
xor
loope
jmp
mov
scas
mov
jnp
xchg
inc
xor
rorb
mov
or
fadds
repz
rol
pop
sub
adc
shll
inc
dec
adc
ficoms
fs
stc
std
je
jo
xor
push
outsl
push
inc
add
push
mov
lcall
mov
popl
pop
pop
or
addl
mov
inc
xor
insb
inc
cmp
ljmp
rcrl
xchg
cmp
mov
adc
push
decl
ret
dec
clc
repz
sti
loope
sbb
and
jo
aam
inc
lock
and
sub
inc
mov
lods
rcrb
lret
add
add
mov
cmpsl
mul
push
sbb
push
enter
popa
push
add
add
jge
aam
add
push
and
jbe
roll
jnp
and
or
add
insb
pushw
and
cmp
imul
lcall
cmpsl
or
ja
mov
imul
xchg
mov
rcll
push
rclb
xchg
or
mov
test
lret
movsl
cmp
data16
mov
mov
mov
in
int3
rcl
add
roll
sbb
mov
jo
js
push
dec
test
add
jmp
mov
inc
andl
cmp
jnp
cld
in
sub
and
and
or
dec
or
xchg
mov
jle
ret
adc
jle,pt
mov
cmp
stos
add
nop
inc
daa
adc
nop
rolb
sahf
push
jl
mov
in
lea
push
cli
insb
add
mov
cli
addr16
test
xlat
push
mov
or
insb
jns
and
and
mov
dec
loope
pop
cmp
xchg
mov
outsb
ja
adc
sbb
pop
or
inc
or
dec
fisubrs
xchg
inc
cmp
cs
subl
push
push
cli
inc
ret
and
adc
sub
ss
jge
lods
enter
or
pop
and
ret
xchg
aad
ja
cmp
mov
mov
dec
dec
and
mov
mov
dec
fiaddl
mov
pop
dec
xor
lea
add
mov
or
mov
inc
in
pushf
pusha
ds
cmpsb
add
or
push
ret
fdivrs
jne
jle
ret
jl
inc
and
ret
mov
dec
xchg
test
mov
or
jle
and
xchg
cmp
cmpsl
inc
jne
cmp
pop
jmp
movsl
push
fucom
aam
xor
insl
lods
ss
leave
mov
andl
dec
ljmp
dec
sub
call
mov
jge
imul
mov
push
mov
mov
add
inc
mov
or
stos
cli
orl
test
dec
jbe
addb
adc
add
in
pop
xor
lahf
xchg
xor
jl
xchg
mov
addb
sub
and
aam
jecxz
hlt
and
imul
pop
dec
push
push
push
push
test
mov
repz
lahf
cwtl
dec
inc
pop
das
shlb
sub
xchg
jbe
and
aaa
inc
push
or
adcb
mov
mov
sub
push
jge
dec
push
inc
and
roll
shll
xor
hlt
in
add
sub
mov
add
inc
rcrb
clc
inc
cmp
cmpl
add
xlat
cmp
in
sub
push
pop
dec
pop
cmp
push
xor
sbb
test
adc
lcall
add
inc
mov
push
push
cmp
addb
or
push
or
mov
lret
mov
or
mov
imul
add
jg
jp
or
pushf
cmp
push
or
xchg
test
adc
adcl
mov
add
mov
xchg
and
jnp
inc
xor
popa
xchg
andb
or
daa
push
outsb
and
add
ror
pop
and
fistpl
pop
add
pop
pusha
sahf
inc
sbb
dec
xor
imul
jnp
outsb
jg
arpl
lods
or
aam
arpl
orl
add
insb
xor
push
dec
je
mov
push
xor
xor
call
or
test
adc
cmp
out
lea
loope
mov
jp
ret
add
rclb
shlb
out
dec
test
mov
pop
dec
add
mov
or
insl
push
cmp
pop
and
stc
sbb
push
dec
add
xor
inc
push
sub
add
jecxz
mov
gs
jo
movsl
lds
push
mov
mov
stc
xor
push
add
add
push
movsb
xor
sbb
addl
xor
mov
movsb
movsl
mov
mov
inc
pusha
outsl
sub
lods
and
lret
inc
push
push
test
vpunpckhbw
daa
push
pusha
inc
jnp
sub
and
add
inc
enter
aas
adc
lret
sub
mov
and
lods
sub
pushf
mov
xchg
dec
pushf
data16
pinsrw
sub
subb
cmp
pop
mov
mov
sbb
sbb
test
dec
popf
inc
xor
adc
in
shrb
repz
add
push
push
add
and
and
and
mov
xor
ret
adc
pop
sub
loop
adc
xlat
mov
add
add
sbb
and
inc
mov
mov
shrl
adc
sub
loopne
mov
stos
bound
add
imul
enter
movsl
popf
pop
add
adc
mov
jp
inc
add
cwtl
mov
and
test
stos
sub
or
mov
pusha
or
push
inc
outsl
xchg
push
sub
mov
and
enter
dec
adcb
pop
push
imul
sbb
or
push
xchg
loopne
test
push
pop
jo
xchg
adc
push
js
nop
cmp
adc
mov
mov
or
pop
pop
leave
ds
adc
xor
adc
popf
cmpb
and
int3
xor
xor
pop
adc
test
aad
mov
loop
dec
jge
jns
test
inc
jge
hlt
adc
mov
push
or
aad
mov
lods
jb
inc
push
mov
inc
sbb
or
lock
xorl
lret
add
es
add
xchg
xchg
sbb
or
repnz
mov
lret
ret
pop
test
and
adc
or
push
jg
or
sbb
out
add
sub
pop
jmp
xor
inc
sbbl
add
pop
outsb
in
mov
cmp
push
dec
dec
call
add
xchg
adc
adcb
xchg
xchg
pop
jns
and
push
dec
rcrb
push
or
adc
mov
orps
mov
mov
push
mov
cmp
mov
sbb
mov
inc
push
xor
ret
jo
jl
jg
sbb
push
fadds
mov
daa
inc
jne
jle
sbb
inc
loop
cmp
jne
sub
rcll
adc
imul
xor
mov
and
pusha
popa
out
push
pop
push
jp
sub
inc
and
add
push
push
cmp
push
lods
imul
daa
jecxz
das
into
jne
mov
mov
es
and
and
cltd
dec
push
rclb
fisubrl
inc
cmp
push
or
adcb
add
xchg
or
ljmp
rcll
push
cmp
and
ret
test
pop
lret
rorb
pop
pop
sub
out
cltd
or
ja
sbb
cmp
je
lcall
push
jge
movsl
roll
mov
jle
jle
push
test
push
mov
xchg
in
popf
xor
sbb
sbbb
mov
dec
shrl
dec
ror
cmp
cmp
mov
adc
or
fists
and
jbe
push
aaa
test
leave
addr16
pop
ja
or
cltd
js
dec
sbb
xchg
cmpb
inc
sub
and
sbb
add
or
pusha
pause
cmp
les
sysret
out
xor
call
mov
lds
mov
and
sbbb
push
fadds
jg
xor
mov
arpl
lret
shlb
inc
cmp
xor
or
adc
rcrb
inc
popa
cwtl
call
ds
jmp
dec
dec
push
lods
xor
push
les
clc
mov
sbb
pusha
aas
shlb
inc
cld
jle
adc
mov
add
jns
add
cs
and
or
sti
mov
or
lcall
or
mov
test
inc
push
scas
adc
dec
add
add
fisubl
cmovns
cmpsb
stos
testb
adcb
adc
add
push
faddl
pop
test
mov
inc
add
cmp
pushf
jl
sbb
mov
xchg
xchg
adc
pop
xchg
add
pop
and
mov
add
push
dec
mov
and
mov
lahf
adc
nop
adc
movsb
xor
mov
adc
pop
dec
add
jno
fildl
sbb
mov
xor
aam
dec
push
divl
and
ljmp
xchg
jne
scas
sub
mov
xchg
push
lcall
pop
shrb
push
je
fsubs
xor
mov
adc
and
xchg
icebp
and
test
scas
push
sbb
add
outsb
dec
sbb
lods
testb
test
loop
pop
test
or
push
adc
xor
xchg
adc
das
les
lods
mov
sbbb
movsl
dec
xchg
jno
movsl
mov
add
leave
shl
push
sub
mov
ret
rolb
cli
and
push
es
sub
enter
stc
cmp
xchg
out
inc
add
loop
sbb
enter
mov
push
sbb
sub
adc
dec
out
in
adc
xor
dec
pop
adc
xor
lcall
clc
sbb
es
xchg
jle
sub
adc
xchg
neg
pusha
xor
es
push
and
shlb
nop
add
xor
sbb
xchg
push
mov
and
push
lcall
mul
push
adc
popa
popf
idivl
jcxz
mov
push
rcrb
sub
push
and
add
rcl
jns
dec
mov
add
cmpsl
cltd
xor
inc
xor
jmp
sbb
mov
movsl
push
xchg
and
nop
xor
push
push
sub
dec
sbb
xor
lret
add
addr16
inc
jmp
adc
inc
sbb
icebp
sbb
mov
xchg
add
xchg
rorl
xorl
por
nop
add
mov
or
add
pop
mov
push
jb
push
lds
enter
fstpl
pop
jb
adc
mov
jmp
push
xor
nop
and
pop
or
test
dec
and
add
sbb
out
or
pop
adc
rcll
mov
lea
mov
push
dec
lret
enter
jae
xchg
sbb
push
jbe
fsubrs
mov
xor
mov
orl
inc
jmp
pop
push
xor
mov
xor
adc
sub
mov
push
leave
mov
or
cli
sar
adc
xchg
mov
push
cmpsb
adcb
xchg
jo
and
cli
sarb
jne
mov
mov
sbb
push
lret
fs
cmp
ja
orb
sub
pop
stc
push
or
out
inc
lret
les
dec
cmp
pop
adc
dec
xchg
or
mov
add
out
cmp
sub
sub
mov
mov
lods
mov
inc
xor
js
pop
js
dec
mov
jbe
test
mov
add
xchg
loopne
aam
lods
jns
mov
cmp
nop
rol
adc
xchg
dec
shr
adc
arpl
mov
push
pop
or
repz
stc
push
push
adc
add
test
cmpsb
jl
sub
inc
mov
sub
popf
jo
dec
cmpsb
nop
cmp
in
cmp
clc
cld
pusha
and
xchg
adc
test
and
inc
orb
adc
sub
adc
sahf
mov
dec
sti
es
cli
test
stos
mov
and
fwait
inc
enter
sbb
jb
sbb
pop
pop
and
adc
sbb
jb
sbb
adc
inc
enter
cmpsl
adc
pop
and
xchg
out
or
xor
ja
shrb
add
push
cmp
mov
add
je
sbb
and
cmp
hlt
aaa
orl
sub
pop
xor
in
or
or
pop
inc
mov
dec
or
pop
add
mov
mov
xchg
sbb
inc
sbb
fists
fiaddl
inc
inc
xor
testb
fdivs
dec
dec
fucomp
pop
add
cmp
inc
stos
push
es
addl
je
jns
inc
dec
add
negb
mov
call
xor
cli
or
orb
push
loope
xor
xchg
pop
pop
imul
jbe
cmpsb
ret
add
aam
test
jns
sub
ret
adc
sub
sub
and
dec
es
xor
xchg
inc
and
mov
sbb
mov
jl
nop
movsb
xor
inc
mov
inc
add
sarl
lods
mov
xor
add
out
ljmp
push
rorb
ret
pop
sub
ret
add
ret
adc
cld
bound
add
test
push
cmp
and
sbb
ds
adc
push
and
nop
push
push
ja
fildl
into
test
aam
and
sbb
mov
enter
jmp
adc
mov
inc
mov
fnstenv
cmp
pop
add
dec
sbb
dec
mov
cld
add
sbb
data16
andb
rorb
addl
inc
push
pop
pop
dec
mov
inc
fcoml
adc
push
or
inc
pop
gs
gs
push
push
jmp
pop
lock
je
mov
inc
lret
popf
xchg
popa
test
movsl
nop
adc
dec
cmpsb
test
and
mov
xchg
xchg
testl
jns
sbb
sbb
add
dec
mov
or
xlat
xorl
jecxz
ljmp
xchg
ret
incl
push
mov
nop
sub
sub
mov
scas
lods
ret
les
or
sub
mov
in
jecxz
xor
fsubs
orb
adc
sub
cmp
lods
cmp
std
push
and
je
sahf
fbld
imul
cmp
out
notl
and
cmp
pop
jns
lods
loope
cmpsl
stc
cmp
adc
arpl
iret
repz
mov
jns
testb
push
and
inc
sahf
out
sahf
push
imul
dec
outsl
sub
std
lahf
mov
sub
sbb
jge
iret
fnstenv
outsb
push
mov
sub
adc
sub
jns
repz
loope
repz
push
pop
inc
push
arpl
pop
sub
cmp
aas
push
sbb
iret
repz
mov
jl
xchg
cmpsl
sub
or
adc
inc
sub
mov
loopne
sbb
mov
add
dec
pop
add
fistl
xor
and
jno
je
shrb
leave
adc
lea
out
sub
and
test
jle
lea
mov
jmp
sarb
je
es
loope
xchg
jg
sarb
inc
cmp
jle
lret
pushf
lock
inc
push
mov
and
adc
sbb
jnp
inc
shrb
and
ja
cld
adc
outsl
mov
fisubrs
pop
pop
and
inc
filds
dec
sbb
test
inc
repz
cmp
loope
or
or
stos
and
dec
int3
cmp
push
mov
adc
xor
mov
pop
jmp
jmp
cmpsl
addl
push
mov
loopne
incb
das
aas
or
jge
jne
movsb
mov
pop
popa
sbb
mov
inc
jo
in
jmp
daa
sti
pop
mov
cmp
xchg
cmp
add
lods
fadd
or
pop
mov
xchg
and
ss
pop
adc
mov
leave
adcb
sbb
push
push
sub
dec
imul
or
mov
push
lret
insb
or
movsl
shll
xor
xchg
inc
pmuludq
cmp
fstl
jmp
popa
movsb
lcall
inc
push
aaa
enter
xchg
aam
rcll
jns
and
rcll
adc
dec
adc
adc
add
test
shlb
enter
ret
xor
pop
xchg
mov
stos
and
adc
xor
cmp
add
sahf
rclb
mov
in
ret
add
mov
inc
ds
ds
daa
cli
or
dec
adc
jne
vhsubps
xchg
into
lds
jb
addl
jns
jb
daa
cmp
js
hlt
hlt
int
mov
jb
and
mov
sbb
or
sub
clc
clc
adc
mov
or
dec
rclb
pushf
adc
dec
xor
inc
push
jne
xor
fisttpll
mov
add
mov
pushf
addl
adc
pop
test
fdivs
or
push
cli
and
aam
in
add
fstl
pop
add
adc
adc
nop
adc
shrl
push
add
fsub
adc
adc
xchg
mov
lds
sub
dec
aas
fstl
inc
add
mov
mov
xchg
mov
sbb
and
in
or
pop
and
clc
rcl
push
arpl
pop
aad
sub
orl
lret
movlps
cs
dec
adc
outsb
dec
add
adc
gs
adc
mov
lea
sbb
push
mov
addr16
or
lcall
outsb
push
jg
ret
push
ret
jb
or
pop
rcrl
pop
je
sub
mov
mov
mov
ss
lahf
mov
or
lock
push
cs
pop
or
movsl
mov
dec
add
lret
and
addr16
data16
add
pop
add
rorl
dec
sahf
dec
inc
add
shrl
lods
push
and
push
lock
inc
jo
cmp
jo
mov
cmp
push
add
push
xchg
push
adc
rorb
xchg
xchg
lret
call
adc
cwtl
mov
or
and
pop
mov
add
sbb
incw
dec
cltd
inc
add
sbb
sbb
xor
push
and
inc
les
inc
xor
in
lea
xor
push
mov
add
hlt
jecxz
flds
sbb
mov
hlt
push
bound
push
push
or
push
mov
dec
movntps
and
aaa
xor
mov
je
add
push
and
add
xchg
cmp
out
push
int3
mov
stc
adcl
enter
or
lret
push
lock
dec
loopne
sahf
adc
or
add
mov
lock
xor
aas
cs
xor
cmp
inc
sarb
fmuls
xlat
push
ljmp
mov
adc
dec
push
mov
clc
rclb
lret
test
and
sub
push
pop
lock
repnz
mov
cwtl
push
pop
xchg
pop
and
lea
sbb
mov
adcl
add
lea
outsl
and
dec
xor
scas
mov
sbb
add
inc
xlat
push
ss
add
push
adc
repz
icebp
inc
les
push
inc
sti
jno
pop
inc
or
pop
sbb
or
sub
and
sub
dec
sbb
xchg
fisttpll
push
xor
dec
pop
cmpsl
add
adc
nop
push
or
insb
mov
ficoms
sahf
cmp
insl
push
sbb
adc
and
incl
movsl
mov
mov
std
mov
lea
pop
adc
xchg
push
xorl
sub
push
dec
pop
pusha
inc
ss
cmp
popa
push
aaa
push
dec
sub
rclb
or
inc
call
dec
mov
sbb
add
xor
sub
inc
push
testl
out
or
sbb
or
shlb
adc
in
cwtl
inc
mov
sub
sbb
mov
dec
jno
icebp
add
inc
imul
cmp
push
pop
clc
push
xor
nop
xor
test
mov
inc
cmp
add
daa
add
mov
enter
cld
sub
inc
xor
in
xor
lods
mov
icebp
lcall
pop
cmp
pop
jl
cld
push
cmc
push
push
mov
jmp
add
jle
sbb
ljmp
xor
inc
in
test
repz
dec
inc
leave
push
dec
mov
ljmp
add
push
and
pop
std
addr16
pop
lds
sbb
sbb
cmp
dec
add
add
loopne
and
cmp
in
jno
in
fcmovu
addb
mov
js
unpcklps
sub
repz
shlb
lock
pop
dec
or
add
inc
pop
sub
mov
stc
aam
cmc
jcxz
xchg
aaa
out
add
fidivs
push
jne
xor
jo
or
dec
popa
xchg
and
dec
dec
xchg
jmp
jl
mov
push
fs
push
je
or
pop
jo
lea
add
jl
dec
push
and
mov
lcall
jmp
stos
dec
mov
jmp
cmc
mov
jno
jmp
popa
pop
push
xchg
sbb
xor
sub
or
loopne
dec
fcomps
lea
cmpb
ljmp
sub
xchg
cltd
pushf
movsb
sub
jns
or
and
les
call
and
jle
push
jne
cmpl
adc
xor
mov
mov
inc
les
pop
out
lods
js
rclb
xchg
daa
subb
in
incl
idiv
enter
cmp
stos
xor
loope
les
paddd
fistl
adc
mov
push
mov
lret
loopne
nop
add
rolb
dec
jmp
add
inc
cmpsb
push
test
jl
rolb
shr
cmp
jbe
jnp
jmp
stos
sub
cs
xor
push
jmp
ja
or
repz
xchg
outsb
jmp
dec
dec
test
pop
int
rolb
insl
sbb
add
inc
bound
push
push
xor
xchg
jp
fs
icebp
mov
outsb
orb
cmp
dec
lret
pop
insb
popa
or
test
pop
test
or
pop
ret
and
push
mov
movsb
mov
mov
mov
adcl
pop
in
pop
jns
push
jge
out
mov
mov
adc
adc
xchg
sbb
cmp
add
iret
repz
push
pop
andb
push
xor
cmp
aas
ss
push
sbb
out
arpl
popa
lcall
mov
inc
and
out
xchg
push
jmp
jb
inc
push
fisubrl
cld
xchg
inc
or
inc
adcb
cmp
insb
xorb
mov
xchg
stos
push
in
jge
testl
mov
shlb
fstl
lock
dec
pop
sub
testb
add
or
xchg
lea
lds
cs
jae
push
xor
pop
adc
mov
cld
sbb
or
add
pop
cmovg
jne
fwait
rorb
mov
xchg
das
add
add
imul
shlb
lods
fimuls
add
test
xchg
adc
mov
jmp
push
test
aaa
jns
xor
es
cmpl
jo
pop
sbb
mov
loop
lahf
push
sbb
adc
adc
mov
call
jo
add
out
pop
mov
push
push
sbb
mov
clc
cmp
or
inc
jae
jle
clc
or
rclb
push
into
test
mov
hlt
mov
movb
or
movb
pop
jmp
adc
or
mov
inc
sub
jno
adcb
dec
cltd
xor
and
das
cmp
and
push
xor
add
push
mov
aaa
arpl
fs
movsb
data16
sub
movsb
lock
inc
push
or
push
lcall
push
and
sbb
sub
pop
sub
jne
cmc
mov
pop
push
xchg
mov
xor
pop
jo
cmp
js
fabs
dec
mov
and
dec
sar
or
sti
add
cmp
das
mov
daa
out
inc
inc
add
jb
enter
cmpsl
xchg
addl
imul
jmp
mov
and
cmp
sub
jle
sbb
sub
lock
inc
and
xchg
jne
lret
cmc
add
sub
or
daa
dec
movsl
psrlw
test
cmovs
lds
push
xor
pop
orb
mov
mov
sbb
sbb
adc
loop
addl
punpcklbw
dec
pop
pop
sub
pop
in
andl
pop
push
or
sarb
sub
mov
je
ret
add
test
daa
and
jle
or
mov
sub
mov
insb
mov
adc
cmp
xor
fisubs
mov
sub
sbb
pop
mov
mov
dec
mov
mov
mov
pop
ss
dec
pushf
sub
flds
dec
pop
mov
and
popf
adc
cmp
sub
fs
push
add
push
adc
outsb
add
fdivrl
jno
jecxz
lcall
inc
and
stc
add
sub
js
hlt
imul
push
mov
ficoms
jmp
add
je
jmp
fists
jmp
cmpb
mov
das
add
cmp
sub
mov
scas
pusha
or
push
adc
cwtl
in
or
cld
sub
rclb
aad
cmp
sbb
mov
mov
fistpll
pushf
in
jns
jmp
incb
push
inc
jnp
sarl
aas
scas
add
mov
fcomi
dec
xchg
xor
adc
mov
js
sub
mov
stc
jp
dec
je
push
imul
jo
mov
add
xchg
sbb
dec
sub
pushf
mov
movsb
mov
scas
adc
pop
pop
push
call
sbb
pop
ret
cmp
popf
push
mov
scas
push
push
mov
pop
je
dec
xchg
push
insb
aad
js
mov
xlat
inc
push
jnp
push
push
add
out
and
jo
pushf
dec
pop
pushl
push
js
xor
mov
test
or
xchg
jae
and
mov
jns
push
inc
mov
mov
xchg
iret
sbb
adc
jbe
xor
xchg
pop
dec
jne
cmp
ds
ss
push
ret
add
xor
les
add
add
fs
mov
sbb
sub
movsb
hlt
cmp
mov
sub
and
popa
sbb
push
cli
cmp
and
xor
cmp
or
dec
jl
mov
and
and
sub
andl
iret
add
push
dec
add
pusha
mov
js
outsl
xchg
add
and
dec
cmp
pop
pop
pop
sbb
jge
js
in
mov
out
dec
imul
pop
adc
mov
push
add
push
leave
orb
or
inc
push
push
and
push
pop
and
rolb
inc
inc
xchg
adcl
rol
add
sub
add
test
xchg
adc
pop
or
push
jae
neg
addr16
sub
repnz
mov
mov
lret
shrb
dec
sub
add
inc
and
mov
ret
mov
test
add
lea
es
pusha
add
push
lcall
pop
dec
mov
lods
mov
dec
sbb
inc
add
mov
insb
cmp
sub
dec
xor
sbb
inc
pop
add
inc
dec
out
cmc
sarl
xchg
outsb
add
mov
je
push
sub
loop
and
push
xor
push
push
sub
push
stos
xor
fidivl
sbb
cmp
insb
fs
mov
and
cltd
cmp
sbbl
arpl
ds
cmp
xchg
sbb
stc
dec
push
add
dec
sub
ret
bound
add
mov
push
dec
jnp
xchg
adc
cmp
adc
cmp
test
inc
imul
mov
dec
adc
lock
dec
mov
and
scas
push
lock
push
sub
jle
sbb
in
add
aam
and
or
ss
push
sub
and
pop
push
mov
cmovbe
dec
xor
adc
or
imul
subl
daa
orl
push
ljmp
mov
jp
xor
cmp
push
xor
jge
sbb
mov
jle
aam
out
sahf
ret
loop
or
inc
clc
movl
pop
mov
cmpsb
and
dec
jne
out
shlb
mov
push
mov
or
mov
lret
sarl
pop
mov
fsts
lret
adc
test
pusha
lock
add
sub
ss
rcll
faddl
addr16
test
orb
mov
lret
das
mov
mov
mov
mov
push
lea
pop
popf
shlb
pop
adc
push
mov
cmp
jl
mov
popa
lock
repz
pop
fsubs
cmpsb
jecxz
fstl
xor
cwtl
jp
push
lods
addb
lcall
fiadds
loope
mov
adc
cld
addr16
push
push
pop
stos
cmp
jecxz
cmp
sbb
xchg
adc
dec
and
inc
shll
ds
cmp
fs
sbb
cmp
pop
imul
or
sub
jmp
mov
xlat
nop
or
add
push
std
sbb
js
push
adc
outsb
outsl
sarb
pop
cld
lret
outsl
pop
inc
aaa
and
sbb
aad
and
jmp
pop
in
inc
jae
add
and
xor
lods
jmp
adc
call
add
into
ljmp
cmp
jl
and
test
sub
pop
mov
xchg
scas
lods
lods
sti
movsb
aam
nop
arpl
aaa
dec
mov
sbb
pusha
adcb
or
add
sar
inc
filds
sahf
popf
sub
ljmp
test
sahf
inc
test
xor
shlb
jmp
arpl
into
add
and
inc
cmp
push
movsb
push
push
jle
add
add
daa
lea
adcl
pop
cmp
xor
imul
or
fildl
cmp
filds
push
adc
jnp
sub
shll
mov
lcall
inc
jno
mov
sub
cmp
sub
pop
mov
add
stc
divb
cmp
xor
adc
stc
mov
loopne
orb
dec
test
aaa
and
mov
popl
adc
mov
pmuludq
xlat
push
inc
sbb
push
pop
add
pop
mov
push
cmpsb
cmp
pop
lea
insl
pusha
xor
push
lods
sub
pop
or
dec
sbb
cmp
cmp
and
les
popa
arpl
cs
pop
sahf
jae
and
inc
cmp
out
repz
in
mov
push
jns
imul
inc
dec
mov
mov
add
inc
jo
and
rcrl
dec
add
pusha
pop
jo
mov
leave
dec
add
and
xor
out
popa
ret
lods
jmp
push
sub
inc
add
pop
fwait
imul
xor
scas
dec
lret
adc
ret
and
cmp
mov
inc
std
rcrb
out
movsb
mov
adc
sub
scas
add
jo
sub
ds
xchg
addb
xchg
pop
shl
adc
jne
leave
movsl
and
int3
inc
data16
es
enter
inc
cmp
ret
daa
insb
inc
out
clc
adc
sbb
inc
movsb
mov
push
and
test
sbb
push
or
push
sub
je
jmp
addl
sub
insl
add
and
ds
push
mov
sbb
pop
jmp
mov
sbb
lahf
popa
pop
xchg
fisubrl
add
outsl
pop
inc
mov
push
xor
add
mov
jno
mov
adc
push
mov
call
ret
mov
adcl
mov
pop
fisttps
xchg
push
aas
adc
fbstp
fisubrl
push
movsb
lcall
or
fs
sar
add
mov
xor
and
pop
test
shrb
fstps
mov
je
lods
out
inc
je
xlat
and
push
pop
dec
jp
jmp
jne
push
jg
xchg
fsubl
mov
cmp
or
inc
jne
outsb
push
sub
dec
xor
loope
add
sti
inc
in
fcomps
inc
fimull
pop
dec
sub
jmp
outsb
shr
mov
pop
movsl
jo
sarl
add
orb
adc
pop
in
add
mov
mov
movsl
xchg
aad
notl
dec
add
repnz
cmp
stos
adc
dec
je
fst
lcall
add
daa
sbb
mov
xor
ret
xchg
xchg
sub
sbb
and
adc
int3
pusha
add
das
orb
test
roll
add
sbb
mov
dec
dec
in
orb
dec
add
push
es
push
and
sbb
nop
adc
cmp
sub
inc
nop
inc
sbb
adc
call
sti
rclb
adc
adc
out
cltd
push
outsb
cmp
add
adc
pop
mov
dec
sbb
adc
xchg
cltd
adc
pop
jbe
sub
sti
push
sbb
pusha
mov
aam
adc
fsubs
xchg
and
sub
sbb
xchg
sub
and
lock
or
cmp
notb
and
adc
sub
pop
cmpsl
test
lret
jno
enter
jne
mov
add
insl
dec
inc
clc
cmpsb
aaa
bound
bndldx
test
les
mov
mov
jae
imul
fs
add
jne
inc
pop
hlt
jo
or
loope
aad
decl
lods
dec
adc
mov
adc
adc
lods
cmc
mov
pop
mov
mov
xchg
orl
xchg
shll
push
or
cmpsb
outsb
xchg
loopne
loope
xchg
pop
push
dec
inc
jo
lcall
fwait
mov
mov
iret
pop
xor
adc
xor
jo
mov
test
adc
pop
mov
xchg
adc
fstps
leave
adc
push
or
xchg
add
outsl
or
insl
or
fists
mov
fsubs
test
and
nop
repz
cmp
inc
push
inc
ss
mov
mov
stos
enter
or
dec
push
pop
aaa
or
sub
popf
adc
mov
aaa
adc
ret
sbb
arpl
xor
push
xchg
cs
xchg
scas
inc
or
test
inc
mov
or
mov
jne
adc
xchg
sub
mov
add
push
push
pop
out
popa
lock
mov
mov
das
push
dec
dec
dec
sbbl
mov
adc
jne
xor
xchg
adc
adc
adc
enter
clc
or
push
jb
sub
inc
mov
xchg
scas
pop
aad
xlat
fs
imul
outsb
push
pushf
xchg
mov
cmc
mov
or
lds
mov
push
or
inc
or
sub
pop
in
or
push
sbb
or
xor
jo
xchg
cmp
jecxz
les
test
lcall
lods
push
push
jmp
stos
fstl
sub
jo
jb
push
cmp
add
dec
out
repz
sub
data16
and
aaa
pop
mov
lcall
sub
push
sbb
repz
pop
pusha
mov
loop
je
push
je
push
imul
cmpsl
adc
negl
xchg
or
push
ja
ja
and
out
stos
call
add
jmp
insb
mov
les
jl
jae
test
push
push
sub
leave
jo
das
clc
inc
test
sbb
and
popa
fcompl
push
pop
sub
outsl
fcoms
or
push
adcb
jae
imul
int
cmpsb
pusha
inc
mov
and
xchg
push
pop
lea
int
dec
lock
mov
in
inc
mov
sub
push
leave
rorl
or
adc
jns
mov
or
rcll
push
push
add
push
sbb
jne
and
insb
add
inc
push
popa
data16
adc
mov
jno
sub
push
push
ret
and
nop
shlb
es
addl
inc
jmp
add
test
test
cmp
and
in
push
push
inc
pop
pop
imul
sbbl
lds
and
scas
mov
and
and
loopne
leave
and
push
xor
sub
push
jp
mov
and
jp
sti
xchg
mov
pop
adc
cs
cmpsb
adc
movsb
es
ret
test
call
pop
cmpl
jno
push
jmp
pop
or
pop
les
sbb
push
xor
push
add
daa
fstpl
jp
lods
fs
push
xchg
jnp
pop
dec
push
call
sbbl
and
jb
add
jb
xchg
xor
cmp
addl
adc
icebp
mov
pop
adc
dec
outsl
dec
hlt
cmp
add
dec
je
dec
shlb
cltd
mov
add
cmpsl
or
lret
xchg
xchg
mov
adc
sbb
std
add
jmp
cmp
xchg
sbb
xchg
and
test
cld
sti
push
push
and
lods
xor
lds
aam
mov
mov
sbbl
push
xchg
or
enter
mov
ret
or
mov
inc
sbb
call
lods
bound
cwtl
pop
jb
pop
mov
adc
jle
xchg
in
pop
adc
or
xor
adc
inc
out
sub
cmc
cltd
dec
ficoms
cmp
imul
push
ret
fmuls
sub
push
stos
sub
sub
and
sbb
inc
jnp
cmp
dec
xchg
add
adc
imul
fmuls
loope
fnstcw
inc
imul
test
and
or
push
pop
cwtl
call
imul
or
decb
lea
mov
pop
inc
rorb
mov
lahf
xchg
stos
aad
or
loopne
leave
mov
xchg
push
add
repnz
sbbb
popf
xlat
add
je
jmp
xchg
or
adc
sub
mov
pop
subb
fcomp
xchg
loop
pop
hlt
fcoml
dec
xchg
push
adc
add
insl
and
push
les
inc
outsl
inc
inc
sub
sbb
pop
scas
in
sbb
sarl
xchg
adc
ja
mov
xor
pushf
add
es
cmp
popa
pop
or
sub
shlb
xor
add
push
je
pop
sub
sub
iret
lahf
es
stos
push
and
xchg
in
lds
call
mov
push
je
or
je
xchg
loop
mov
mov
cwtl
lahf
ret
add
xor
sub
xchg
lea
ja
and
fimull
xchg
push
cmc
insl
loop
inc
push
inc
loope
dec
xor
sub
rcll
pop
sbb
mov
push
cmp
imul
and
xchg
pop
jne
imul
or
pop
add
jns
jb
push
push
dec
jne
add
ror
add
sub
js
xchg
ret
out
inc
pusha
and
mov
ret
mov
adc
xorb
or
data16
adc
dec
std
mov
push
push
sti
insl
pusha
inc
imul
xchg
add
popf
mov
mov
add
mov
fs
push
sbb
lock
lds
push
push
sbbb
subl
push
xor
outsb
sbb
cmp
leave
push
mov
jno
cld
cmp
in
mov
mov
xchg
mov
push
push
dec
push
and
or
sbbl
push
cmp
mov
pop
push
dec
xchg
pop
ret
and
popa
add
add
lds
and
pusha
testl
jo
dec
inc
mov
mov
data16
inc
push
pop
lahf
dec
stos
inc
cwtl
mov
ja
sub
inc
fwait
int
and
mov
cmp
jmp
or
insl
daa
xchg
dec
mov
adc
ret
sub
dec
pop
sub
cmp
inc
jmp
xchg
rorb
or
or
lock
jmp
fstl
pop
push
fdivl
and
repz
push
push
ja
ret
in
xchg
jmp
xor
sub
jbe
mov
stc
test
mov
push
push
nop
out
inc
test
and
inc
cmp
jb
cmp
pop
pusha
and
test
inc
pop
addl
xchg
jno
mov
mov
pushf
out
lods
pop
add
pushf
movsb
mov
mov
add
dec
or
ds
es
sub
dec
inc
push
adc
inc
push
cmp
mov
and
adcb
adcl
inc
in
add
push
add
ret
rol
dec
addl
mov
or
pop
in
jo
mov
jp
xchg
mov
aaa
sbb
jg
ss
popa
iret
sbb
cli
popa
gs
xor
iret
repz
pop
sbb
cmp
test
adc
jno
addr16
adc
and
add
out
and
or
adc
cli
xor
movb
inc
add
cmpsb
test
inc
cmp
ret
pop
mov
sub
shlb
push
push
ficompl
loop
imul
test
call
pop
js
pusha
add
or
lock
incl
cmp
jbe
or
mov
loope
movsb
sahf
pop
or
push
sbb
add
and
xor
mov
aaa
push
and
imul
cmpsl
bound
adc
pop
lahf
icebp
ret
push
ret
lock
ss
or
inc
ret
add
xchg
sbb
jmp
lods
add
mov
sub
or
mov
or
cmp
lea
stos
push
mov
adc
push
movsb
push
or
sbb
add
rorb
inc
movsl
or
mov
js
popa
xchg
adc
add
ret
add
add
ss
mov
jnp
out
and
or
sbb
mov
and
sub
xchg
or
lahf
hlt
xchg
or
add
push
ss
dec
pop
test
cs
adc
xchg
movb
fs
mov
jp
stc
push
adc
dec
mov
jne
arpl
sub
scas
adc
imul
adc
sbb
push
xor
sbb
and
jle
or
imull
insl
ficoml
jns
pop
xchg
sub
and
and
mov
push
fsubr
ds
push
xor
in
sub
add
xor
add
push
dec
adc
pop
pop
mov
pop
notb
add
push
movsb
push
pop
or
inc
add
lock
pop
sbb
xchg
mov
add
arpl
mov
or
or
test
add
nop
out
sbbb
int
rorb
add
and
and
lea
cmp
repnz
dec
mov
xor
inc
dec
push
sub
test
sub
jge
xor
mov
sbb
dec
jecxz
adc
lret
out
mov
jo
add
imul
dec
pop
arpl
ret
out
pop
sub
cmp
dec
shrd
fidivrs
iret
int3
or
add
iret
jnp
push
sbb
adc
je
add
hlt
add
mov
addb
and
add
inc
stos
adc
sub
adc
imul
dec
mov
shrl
dec
pop
mov
add
test
pop
pop
add
cltd
cmp
fcoml
scas
andl
inc
loopne
jne
push
lock
dec
shlb
cld
mov
into
in
add
inc
jge
push
in
push
leave
and
xchg
dec
cmc
or
cmp
sarb
adc
aam
rcll
loopne
push
add
cmp
test
adc
int
adc
adcb
ja
or
ret
push
xchg
cltd
dec
push
cmp
fs
push
sub
dec
push
pop
rorb
sub
stos
dec
orl
movsl
push
sbb
addl
sub
rcrb
adc
nop
sbb
mov
dec
jge
sbb
mov
push
sbb
and
inc
call
inc
test
jb
jns
pop
clc
or
pop
push
xor
jle
out
cmp
call
nop
or
je
jecxz
add
sub
rolb
dec
iret
sahf
clc
or
add
js
ret
xorb
and
cmp
and
add
mov
loop
pop
aaa
orb
cmp
mov
xor
mov
imul
inc
sub
test
xor
das
inc
adc
jmp
push
ljmp
or
insl
nop
mov
mov
inc
mov
imul
popa
dec
add
mov
dec
popa
inc
iret
sti
cmpsl
or
sub
or
ds
jae
cwtl
ret
rcll
pop
add
sub
aaa
test
movsb
pop
test
inc
lods
rcl
je
fstp
adc
je
sub
sbb
test
mov
or
sub
mov
mov
xchg
or
adc
adc
lret
loope
rcrb
dec
jle
mov
and
leave
adc
and
adc
insl
inc
push
lea
adc
xchg
dec
rclb
es
or
inc
cmp
or
mov
and
adcl
or
pop
and
push
mov
and
cmp
repnz
sahf
xchg
add
add
xchg
addr16
push
add
add
aas
dec
sahf
xchg
ret
jae
or
mov
or
test
popf
mov
popf
cmp
cmpsl
cmp
xor
fdivs
add
inc
cmp
orl
fimuls
and
adc
inc
pop
inc
xorb
sub
add
rclb
push
fwait
cmp
and
and
or
sarl
push
push
jns
loopne
outsl
ja
out
push
push
sahf
out
add
cmc
dec
pop
mov
nop
scas
rclb
cmp
push
mov
xchg
jl
mov
add
lods
mov
and
cwtl
xchg
xchg
mov
scas
int3
adc
push
aas
xchg
mov
int
lods
stos
dec
cwtl
rorb
pusha
std
xchg
add
arpl
rcll
pop
shl
gs
jl
jne
push
jle
push
push
mov
das
xchg
mov
adc
jbe
jle
test
clc
dec
movd
push
mov
and
sub
xor
movsl
rcr
dec
adc
fimuls
imul
adc
loopne
add
fldenv
jmp
add
cmp
dec
add
jae
stc
int3
sbb
mov
les
xchg
fcmovbe
jl
and
mov
pusha
mov
iret
repz
negb
push
and
cmp
in
ret
fdivrl
add
dec
je
add
dec
cmp
insb
adc
je
or
cs
push
das
push
inc
pop
mov
sub
dec
es
adc
ret
pushf
jo
pop
cld
or
dec
dec
jl
movzwl
or
test
pop
sbb
mov
and
push
sbb
add
push
das
loope
shll
imul
or
push
imul
mov
sbb
pop
je
xchg
fistpl
and
outsb
pop
sbb
dec
and
rcl
pop
push
pop
add
pop
rcll
leave
test
sub
stos
adc
push
loope
push
mov
add
sbb
inc
inc
mov
pusha
daa
push
pop
xchg
sub
cmp
cs
cld
mov
xchg
inc
in
lret
and
and
jnp
or
imul
push
arpl
sbb
shr
xor
xor
loope
inc
mov
jae
jne
fdivrs
lods
xorl
sbb
sbb
xorl
test
xor
lahf
adc
or
shr
or
mov
loop
sub
mov
cwtl
add
mov
mov
lods
cmp
push
rcll
es
imul
push
aad
ss
bound
sub
sbb
pop
sarb
push
lods
and
adc
xchg
add
jge
add
sub
push
mov
mov
movsl
pop
out
xchg
aam
test
dec
mov
cmp
sbb
out
jae
jb
test
out
loop
xchg
add
aam
mov
push
fnstsw
addr16
add
push
sub
sub
xor
inc
jmp
loopne
test
call
adc
add
inc
rorl
and
inc
ljmp
pop
push
or
js
push
sbb
sub
pop
mov
pop
mov
shlb
ret
orb
xchg
loopne
iret
pusha
cmp
out
stos
jo
or
sub
add
lea
inc
inc
pop
movsl
pop
adcb
mov
and
inc
push
xchg
ret
into
jne
inc
pop
shl
adc
testl
je
mov
sub
in
insl
or
fldenv
add
push
cmpsb
fucom
add
pushf
xchg
lret
enter
pop
add
adc
mov
dec
lods
and
mov
jmp
add
out
push
rol
inc
mov
pop
test
adc
sahf
cld
adc
add
je
xor
aad
dec
adc
or
stos
sbb
mov
pop
sbb
add
xor
mov
loopne
test
xchg
adc
cmp
sbb
xchg
and
jne
or
rcrl
cmp
cmp
xchg
and
stos
push
add
adc
js
lret
jne
cmp
mov
cmp
je
inc
inc
inc
inc
or
rorb
or
cmp
adc
xor
test
jecxz
mov
loope
imul
push
adc
or
or
pusha
xor
subl
jb
jl
mov
js
sub
push
mov
adc
add
jno
pusha
adc
jp
lret
adc
mov
mov
popa
add
push
xlat
orb
cmp
leave
xlat
pop
pop
push
mov
popa
sub
enter
or
sub
dec
imul
sbb
sub
in
sub
and
inc
add
xor
and
push
imul
push
inc
fildl
out
gs
inc
adc
jne
add
fbld
lcall
stos
ds
push
add
dec
or
push
mov
sarl
xlat
rolb
mov
loop
jle
mov
lret
add
mov
adc
jl
push
xchg
mov
push
nop
dec
mov
add
mulb
adcb
or
adc
notl
mov
loope
and
inc
ljmp
or
xor
or
add
psadbw
push
clc
pop
xchg
push
adc
orl
in
push
cmp
das
or
sbb
outsb
xor
pop
arpl
fdivrp
ret
cmp
mov
or
test
aaa
add
pop
rcrb
fs
rcrl
fists
popf
jle
mov
add
mov
sahf
test
jo
addl
dec
and
adc
inc
jnp
mov
add
dec
fistps
inc
push
shlb
cmp
imul
pop
adcb
test
sbb
jbe
mov
mov
xchg
xor
test
sar
push
dec
cld
shrl
adc
add
insb
idivl
or
out
dec
jecxz
sbb
and
mov
stc
xchg
jbe
jb
xchg
mov
inc
xchg
jl
jno
sbb
mov
or
adc
mov
dec
leave
dec
lret
lock
push
cmpsl
add
ljmp
cmp
icebp
sbb
jne
scas
sbb
sub
fwait
pop
popa
add
mov
aaa
mov
stos
ucomiss
lcall
jbe
push
mov
outsl
mov
sbb
aaa
add
test
sub
or
loop
adc
cmp
cmp
lahf
imul
sbbl
pop
adc
fsts
and
scas
push
sbb
aad
loope
ret
push
popf
adc
insb
imul
push
push
orl
jns
fiaddl
sbbb
adc
sub
inc
sub
sbb
insl
mov
mov
xchg
cmpsl
stc
cmp
push
jno
jecxz
xchg
mov
out
jns
add
imul
fxch
nop
xor
jnp
lock
pop
mov
inc
lcall
push
pop
loopne
in
adc
dec
shlb
inc
daa
pop
mov
add
lods
int
push
add
rcrb
push
fsubrl
mov
mov
repz
fs
inc
inc
mov
push
push
sbb
popa
add
mov
pop
mov
mov
jge
pop
in
sub
mov
arpl
mov
or
or
shr
mov
lea
pop
adc
mov
dec
xchg
jo
jne
cmp
and
jb
mov
loopne
inc
in
and
decb
mov
lea
fptan
inc
lea
mov
push
adc
add
pop
sbb
fistps
add
mov
mov
xor
jp
cmpl
pop
xchg
subl
xor
or
les
or
mov
push
iret
add
lret
inc
inc
or
mov
in
mov
add
add
mov
mov
xor
adc
xorb
mov
or
inc
sub
cmp
adc
and
ret
add
ret
or
dec
add
mov
mov
and
mov
push
loopne
cmp
mov
cmp
inc
mov
push
outsl
test
push
fcoms
fnstcw
push
inc
adc
adc
inc
dec
lds
push
pop
sbb
in
pop
xchg
rolb
into
into
jns
jbe
movb
aaa
adc
test
mov
sbb
sti
test
das
mov
push
mov
adc
loopne
or
mov
in
inc
je
and
movl
cmp
dec
push
es
pop
sub
ja
lock
xor
lret
testb
pop
lock
mov
or
push
push
sahf
mov
je
mov
push
push
arpl
int
addr16
sub
mov
and
shrl
mov
sbb
lcall
mov
cli
movsl
adc
and
adc
addr16
clc
cmp
add
or
xlat
xor
aam
jge
or
mov
dec
call
xchg
push
dec
add
in
sub
stc
adc
dec
cmp
lcall
cld
cli
pop
popa
arpl
or
sbb
pusha
mov
mov
mov
or
and
adc
fmull
jl
pop
aaa
xlat
lret
sbb
sub
push
adc
add
es
or
adc
push
add
es
or
add
inc
add
inc
es
or
or
add
inc
es
add
add
sbb
cltd
inc
es
or
push
pop
adc
xchg
mov
dec
out
mov
xchg
jnp
pop
cmovg
hlt
sub
mov
fidivs
and
cltd
iret
add
mov
scas
push
or
fadds
mov
cmpsl
icebp
shll
fldt
fldl
and
xchg
push
adc
out
lcall
add
hlt
fs
add
jmp
cwtl
cmp
push
mov
cmp
sub
fidivrl
inc
and
mov
loopne
inc
dec
js
xor
ss
xchg
lea
enter
push
xorl
mov
addl
dec
xchg
lea
sub
aam
cmp
sub
daa
jge
bound
dec
aas
cmpl
sbb
in
mov
or
xchg
xor
and
pop
ret
sbb
rol
les
rclb
or
pop
out
pop
es
ret
sbb
jl
jns
mov
aas
or
lret
xor
sub
inc
sbb
pop
sbb
mov
adc
or
or
add
push
add
test
fwait
pop
mov
mov
cmc
inc
cltd
cld
in
pop
stos
inc
cmp
sub
outsl
out
xor
mov
je
sbb
mov
cs
rolb
or
cmp
jle
xchg
mov
aam
jae
push
mov
pop
or
inc
push
mov
and
jae
dec
ljmp
and
or
pop
jno
nop
sti
cmp
xor
cmp
ret
jo
fcompl
sbb
pop
push
pop
push
adc
loope
fs
dec
or
outsl
adc
ffree
repnz
movsl
clc
add
sbb
cmpsl
jge
jb
sbb
cmp
jne
dec
add
xchg
adc
lods
inc
ds
and
in
or
adc
and
pop
jg
ja
push
add
add
adc
iret
push
std
push
mov
aaa
sbb
aam
pop
icebp
xor
add
cmp
ror
loopnew
rorb
or
add
cmp
cld
mov
xor
xor
cmpsl
es
fildll
loop
test
push
pop
imul
pop
fists
ficoms
loope
push
push
jmp
aas
cmp
pop
and
pusha
or
cmp
andl
movsb
mov
add
call
pop
lock
jge
insl
add
call
fwait
dec
mov
sub
lock
sbb
lods
and
imul
mov
outsl
sbb
movl
sub
add
sub
xlat
push
mov
add
jl
pop
fildl
addl
mov
xor
sub
leave
push
loopne
add
popa
sub
test
cli
or
inc
cmp
add
insl
add
xchg
inc
dec
rolb
je
in
addb
je
jb
ja
shrb
mov
add
pop
sbb
loop
push
sub
adc
lea
or
jbe
jmp
gs
dec
ret
int
scas
adc
xor
lahf
insl
sub
les
or
xchg
out
popa
sbb
jne
xchg
dec
push
fisubrl
and
cmp
push
nop
adc
outsl
pop
mov
aam
adc
push
mov
xchg
or
imul
pinsrw
mov
jns
cltd
movsb
mov
dec
mov
cmp
test
lret
leave
mov
test
pop
jmp
scas
pop
jns
add
movsb
add
sbb
inc
adc
mov
arpl
inc
sub
arpl
and
sarl
dec
add
test
adc
aaa
jecxz
call
sub
sub
idivl
inc
fadds
push
push
stos
xor
mov
aaa
and
pop
add
cltd
push
data16
andl
or
xor
adc
and
fnsave
pop
nop
out
xchg
je
jg
scas
rcll
or
lods
cmp
push
jmp
mov
lcall
mov
into
cltd
or
jmp
in
jae
xor
xor
adc
jg
pop
mov
mov
xchg
and
mov
dec
pop
xor
mov
xor
jo
arpl
sub
stos
push
or
enter
sub
xor
ret
jns
xchg
or
jg
or
push
and
daa
adc
lods
cmp
pop
stc
mov
gs
xor
icebp
daa
inc
mov
xchg
sub
lret
mov
fisttpll
jp
sbb
jp
lock
push
lea
push
icebp
cmpsl
adc
push
sbb
sbb
and
pushl
repnz
imul
mov
nop
jo
mov
dec
add
popa
sahf
mov
jnp
shrb
ss
shrl
or
push
push
lret
pop
adc
inc
inc
or
sub
inc
add
jge,pt
or
dec
xchg
mov
outsb
int3
movsl
mov
out
inc
or
cmpsl
movsb
adc
or
or
test
pop
jb
loope
clc
or
xlat
inc
add
push
push
mov
clc
fcmovnb
adcl
xor
adc
test
imul
jge
out
push
ret
loopne
cmp
nop
or
lret
or
jo
mov
push
jp
jmp
nop
sub
or
cmp
mov
subb
in
addr16
sbbb
adc
dec
adc
push
pop
push
mov
fsts
push
in
sahf
push
cmpsb
lret
push
ret
fwait
xor
xchg
ret
fisubrl
inc
pop
or
in
inc
test
adc
or
push
imul
xchg
divl
popf
lock
rorl
xchg
in
add
xor
pushf
adc
punpckhdq
sub
jecxz
test
jns
addb
imul
mov
fwait
and
push
enter
aaa
popa
or
test
pop
subb
push
sbb
push
addl
xor
icebp
push
add
add
inc
pop
sbb
mov
inc
and
mov
xchg
pop
je
cmp
call
aas
hlt
clc
ja
lock
insb
adc
lock
pop
add
lret
adc
lcall
lds
xchg
inc
fdivrs
push
insb
and
push
nop
xchg
mov
rorb
enter
jne
dec
mov
fcoms
fsubs
mov
adc
dec
cmp
movsl
mov
jbe
inc
add
jne
mov
hlt
push
push
int
insl
dec
sub
and
xlat
adc
push
popa
les
cmp
add
adc
ja
cs
test
int
iret
mov
add
dec
leave
adc
sbb
pop
add
out
jmp
xor
xor
mov
and
sahf
inc
adc
movsl
je
test
aam
jmp
xor
rorl
adc
loopne
jo
dec
fildl
or
jl
jg
and
insl
or
rorl
jne
xchg
mov
aaa
or
sbb
mov
dec
dec
movsl
push
arpl
cld
ja
outsl
adc
lock
mov
dec
pop
test
push
xchg
sub
mov
adc
sub
clc
mov
xchg
add
jb
mov
loopne
sub
mov
add
add
mov
push
pop
and
pop
jecxz
mov
mov
sbb
dec
xor
jae
inc
popa
outsl
cmpsl
dec
scas
add
adc
cwtl
loope
adc
js
mov
dec
shlb
add
lcall
lret
out
jmp
out
jns
popa
shl
mov
xchg
adc
leave
testl
mov
lret
dec
addr16
clc
ret
mov
push
xlat
mov
sub
xchg
out
mov
ss
xlat
ja
test
pop
and
or
enter
pop
pop
mov
add
jmp
add
pop
adc
adc
and
push
push
xor
scas
push
cmpsb
clc
xchg
sbb
sbb
or
addb
adc
enter
push
cltd
nop
bt
negb
arpl
arpl
imul
popa
sbb
cmp
add
scas
enter
scas
enter
mov
push
call
sbb
mov
rcrl
pop
enter
or
cmp
in
xor
cmp
enter
seta
lret
call
push
nop
pop
xchg
and
mov
jg
adc
adc
hlt
ret
sub
adc
mov
xchg
jmp
stc
mov
insl
roll
orb
repz
shll
pusha
mov
push
adc
push
jecxz
xchg
rolb
idivb
lods
out
dec
fs
cld
mov
dec
add
jg
test
popa
addl
jo
inc
push
bnd
mov
push
lock
add
mov
cwtl
rcrl
ja
mov
xor
in
subb
lods
xor
outsl
push
orl
and
jecxz
cmp
add
insb
mov
jmp
inc
xor
pop
mov
add
jmp
pop
lods
sub
add
add
js
sbbl
mov
mov
mov
add
mov
mov
scas
mov
pop
xor
xchg
cmpsl
mov
nop
or
pop
sub
cmp
in
push
stos
mov
dec
stos
and
stos
lds
daa
icebp
rcrb
mov
bound
rorb
sbb
scas
mov
jae
dec
enter
jns
jmp
popa
jae
push
inc
adc
sbb
sub
jmp
cmc
fdivrs
add
nop
out
cmp
fdivrs
lds
jo
add
cmp
inc
xchg
leave
add
loope
mov
cltd
xor
jns
cmpsb
mov
push
jbe
jecxz
ficoms
xchg
lock
stos
xchg
test
popl
orl
out
inc
mov
jnp
push
insl
pop
inc
loopne
pop
xor
je
bnd
adc
movsl
xchg
fs
dec
call
out
and
aad
test
testl
xor
daa
pushf
xchg
pop
or
lea
xor
or
jbe
mov
loop
outsl
int3
and
add
mov
jge
inc
jb
aas
ja
lods
std
cltd
adc
in
cld
test
mov
inc
add
pop
jb
or
andl
dec
popa
mov
imul
popa
xor
sub
xchg
and
jmp
insb
sub
jb
pop
pushf
mov
cwtl
pop
mov
jge
test
shr
cmp
call
xor
negb
out
out
fdivl
sub
lahf
lods
mov
cmp
dec
inc
mov
push
inc
push
jae
sub
push
shll
in
push
xorb
mov
add
ret
adc
xor
mov
mov
push
xor
nop
lock
sti
sbb
and
cmpsb
fwait
push
mov
lret
or
sub
jmp
jo
or
cmp
mov
out
xor
jge
sub
mov
xchg
add
adc
push
ficoml
xchg
dec
call
dec
ss
sahf
mov
or
sub
xchg
fbstp
xchg
test
mov
or
pop
sbb
insb
mov
mov
push
and
add
pop
sub
test
scas
sbbl
dec
rorb
xor
sub
dec
xor
inc
pusha
pop
mov
xchg
adc
and
daa
mov
daa
scas
cwtl
call
movb
je
xor
pop
leave
movups
data16
adc
mov
test
daa
ss
push
push
dec
loope
and
cli
push
push
roll
mov
pusha
cmp
and
push
inc
push
dec
jb
adc
addb
stos
mov
mov
shrl
xor
dec
xchg
imul
and
dec
jmp
inc
xchg
mov
dec
popf
push
nop
push
aas
add
mov
xlat
or
push
inc
enter
incl
test
pop
xchg
and
fdivl
inc
dec
add
cmp
adc
xchg
je
std
and
imull
outsb
or
mov
cld
shrb
xchg
scas
bound
add
jne
adc
shll
cmp
xor
ds
call
jnp
pop
xor
dec
and
sub
adc
mov
rcrl
pop
pop
dec
movsb
ss
inc
test
cmpsl
dec
push
imul
xchg
add
ja
cmp
xor
jno
cmpl
xchg
adc
sarb
or
test
adc
cmp
push
xchg
lods
adc
imul
test
pop
xor
nop
adc
xor
hlt
mov
leave
cmpsl
push
inc
test
or
sbb
push
inc
xor
push
es
je
es
dec
xor
jbe
mov
mov
and
adc
nop
sbb
or
cmp
fldl
dec
push
jle
mov
add
and
xlat
repnz
xchg
popa
xor
add
mov
adc
and
mov
ss
scas
mov
pop
add
push
call
lea
flds
aaa
addb
push
xchg
dec
push
mov
xor
pop
push
pop
inc
or
mov
sbb
sti
mov
sbb
mov
adc
inc
mov
daa
orb
rorb
mov
sahf
inc
lods
lea
pop
sub
out
mov
mov
test
andb
sbb
and
in
arpl
and
xchg
insl
dec
add
xor
mov
jp
push
mov
loope
fs
fstps
xchg
nop
mov
cmpsb
fiadds
or
ljmp
xchg
adc
fsubrl
mov
jb
sar
push
push
push
push
xchg
jp
outsl
sub
push
xor
cmp
mov
sub
loope
sub
fidivrl
ffreep
or
push
mov
cmp
xor
jg
stc
inc
and
push
add
cwtl
ret
cmp
leave
lods
push
mov
loop
xchg
adc
add
jecxz
push
sti
add
adcb
fists
adc
dec
or
ljmp
stos
popf
add
cmp
push
sbb
arpl
cmpsl
inc
inc
mov
jnp
jb
jbe
cmp
shlb
xchg
arpl
cmp
xchg
sub
mov
cs
lret
add
js
inc
into
xchg
inc
push
dec
adc
and
testb
pop
sar
mov
jne
push
push
mov
ss
mov
mov
adc
sub
jne
or
push
es
icebp
div
cmp
add
inc
pop
sub
popf
fs
in
int3
lods
mov
push
and
sbb
sbb
bound
test
sub
sub
fdiv
push
and
adc
sbb
cli
repz
test
movsl
sub
std
je
add
xlat
loope
xchg
sbb
test
xchg
pop
sbb
sbb
out
pushf
and
inc
imul
and
lods
inc
jecxz
sbb
mov
js
sahf
cltd
stc
pop
nop
daa
lea
dec
test
addr16
fwait
adc
xchg
adc
gs
orl
push
mov
mov
dec
outsb
test
pop
adcl
sbb
shlb
xor
jne
loopne
jecxz
arpl
or
sub
add
fldenv
mull
adc
loop
loop
sbb
dec
or
mov
jmp
jp
test
js
and
mov
adc
cmp
jne
jge
sub
push
rol
lret
inc
pop
insb
add
es
dec
jge
xor
cmp
insb
push
repnz
sub
or
xchg
je
stc
cmpb
into
inc
and
hlt
xchg
or
or
imul
push
mov
dec
xor
mov
pop
xor
and
push
mov
inc
jecxz
into
icebp
enter
inc
nop
roll
mov
and
adc
leave
fs
ljmp
add
nop
fmul
ss
lret
ljmp
add
add
adc
jmp
push
adc
xchg
xor
push
repz
adc
mov
mov
lock
sub
fwait
dec
mov
sbb
push
les
fwait
xchg
mov
daa
inc
cmpsl
sbb
imul
push
sub
and
xchg
call
add
or
inc
mov
and
ret
jo
cli
inc
notl
inc
adc
and
pop
adc
sbb
or
mov
ret
pusha
or
sub
pop
xchg
mov
pop
fnop
movsl
mov
loop
jb
sbb
and
push
xchg
mov
dec
push
push
and
sbb
pop
fldt
ret
ret
cwtl
or
gs
add
stos
imul
dec
xor
or
js
or
xor
pop
and
pop
or
mov
lods
lods
insl
jl
cmp
jle
add
cmpsb
repnz
lea
fiadds
mov
ret
push
mov
jne
mov
add
int3
or
sub
repnz
dec
subl
mov
push
jbe
or
jnp
lods
inc
inc
lea
testb
push
and
mov
pop
adc
and
sti
shl
fstpl
xlat
cmp
cmp
sub
dec
jns
nop
addl
push
in
push
ret
mov
mov
sub
rol
pop
cmpsb
inc
pop
inc
sbbl
mov
inc
les
sub
pop
xor
rcrb
push
outsl
xlat
inc
mov
arpl
test
insb
inc
popa
dec
push
xchg
pop
insb
cmp
nop
or
push
adc
aas
pop
leave
inc
xor
pop
and
inc
xchg
clc
adc
cli
or
das
pop
in
xor
sbb
inc
mov
jno
push
sub
or
fsubrs
push
mov
das
inc
int
and
cwtl
sarb
mov
aam
or
sub
mov
sbb
xor
jecxz
cmp
jp
dec
cmp
lcall
andb
sub
push
test
insb
arpl
hlt
push
mov
rol
lret
xchg
jge
adc
pusha
jne
lods
movsb
scas
into
cmpsb
jmp
mov
xchg
jo
pop
lods
enter
test
and
mov
cmp
sub
bound
cmc
mov
inc
lods
loopne
lcall
push
xchg
jns
int3
sti
mov
incb
push
imul
notl
aas
addb
int3
or
jecxz
add
pop
mov
fs
mov
into
sub
add
xchg
cltd
mov
add
push
aad
push
jmp
popa
mov
mov
sbb
inc
push
call
inc
es
add
cs
ret
xor
cli
je
mov
cmp
xchg
push
fdivs
flds
push
inc
push
jno
adc
lcall
and
adc
xchg
frstor
les
adc
addl
pusha
or
jp
xchg
adc
sahf
pop
insb
leave
push
jl
mov
movsb
movl
dec
lods
leave
sbb
sbb
and
push
sub
lret
adcb
ret
orl
and
or
add
insb
pushf
shll
or
adc
mov
aad
sahf
sbb
xchg
sub
xchg
scas
jbe
enter
repz
push
adc
cmp
sbb
ficoml
fadds
add
loope
push
mov
add
or
push
pop
fs
pop
or
or
insl
mov
fldl
outsl
xchg
loopne
mov
xor
pop
xchg
dec
inc
movl
movhps
js
dec
push
data16
dec
jb
inc
sbb
add
fimuls
and
jmp
push
hlt
test
mov
es
and
or
xchg
mov
test
or
push
push
cld
pop
enter
pop
sti
pushf
xor
inc
pusha
mov
or
pop
mov
insl
sbb
jae
outsb
or
ret
insb
es
sbb
mov
mov
inc
push
push
pop
pop
mov
or
inc
push
cmp
rol
in
fcoml
lahf
mov
mov
xor
push
jne
xchg
or
cmp
mov
aaa
sub
xor
xchg
xor
adc
lahf
cmpsb
sbb
lret
and
int
xorb
lcall
jmp
rorb
cmp
mov
call
fadds
mov
or
in
mov
adc
out
loopne
popa
add
gs
adc
hlt
inc
popf
das
jmp
push
inc
loope
das
xchg
inc
in
and
sub
add
ljmp
cmp
xchg
lods
pop
mov
ret
jge
push
jno
jae
push
pop
iret
sbb
sbb
xorb
push
cs
sbb
or
adc
rcr
icebp
mov
adc
jg
xchg
mov
sub
out
cmp
jae
inc
loopne
loop
push
ret
push
push
mov
or
push
and
imul
jae
adc
out
dec
sub
xor
cld
jl
adc
cmpl
dec
sbb
pop
or
mov
mov
das
test
push
in
mov
into
add
push
insb
adc
enter
outsb
xor
jb
je
imul
dec
insl
leave
fldenv
xor
and
mov
lea
cmp
lret
test
add
adc
data16
push
sbb
adc
ret
popf
ret
and
mov
insl
addb
adc
inc
je
mov
add
push
mov
sub
pop
sbb
cmp
jne
data16
loopne
xorl
insb
loop
sahf
add
je
sbb
cli
sbb
je
int3
mov
in
sti
push
inc
cmc
xchg
nop
enter
mov
pop
int3
clc
mov
add
xor
adc
pop
mov
push
pop
sbb
daa
lods
sub
add
or
xor
push
adc
pop
dec
cmp
jmp
sbb
das
and
sub
es
or
imul
mov
inc
loopne
push
into
stos
or
or
hlt
cmp
adc
push
popa
test
adcl
lods
jmp
push
stos
test
fcoms
pop
xchg
inc
pusha
data16
pop
pop
or
mov
push
aam
xchg
push
ret
sub
add
xchg
dec
jmp
scas
add
cmp
movsb
dec
sub
and
xor
imulb
or
movsl
clc
push
pop
cmpb
aam
fstps
inc
adc
mov
push
mov
pop
lea
pop
mov
inc
lret
dec
dec
int
fidivs
aaa
inc
je
mov
add
pop
xor
sbb
mov
dec
aam
arpl
push
adc
sbb
dec
push
mov
insl
les
sub
inc
dec
dec
mov
or
add
les
jmp
dec
aaa
and
and
rcrb
mov
push
pusha
pusha
pusha
and
dec
arpl
pop
fs
rorl
xor
inc
arpl
sti
mov
into
movsb
cli
loopne
les
ja
add
ljmp
lret
cmc
mov
out
xor
sbb
xchg
out
popf
push
push
dec
cmp
add
push
xchg
in
sbb
sbb
mov
push
js
jne
xor
adc
ficomps
pop
inc
je
pop
push
push
inc
mov
in
push
add
pop
cmp
je
sbb
pop
shlb
xchg
jne
pop
and
jns
mov
in
pop
mov
shlb
in
pushf
push
sbb
lods
sbb
push
loope
pop
pop
mov
adc
pop
mov
push
mov
cld
cmp
or
incl
inc
popa
je
cmp
push
push
enter
inc
and
scas
cmp
leave
xchg
jne
rcll
daa
sub
enter
aaa
mov
xchg
cmc
loope
addl
daa
mov
sub
and
pop
loopne
add
push
dec
add
aas
cmc
jns
and
mov
movsb
xchg
xchg
sub
mov
add
dec
push
outsl
add
je
lea
clc
or
ds
push
mov
sub
push
ret
mov
push
pop
mov
pop
xor
or
dec
aad
push
xor
push
push
outsb
and
push
pop
divl
dec
cmp
add
adc
pop
ja
sbb
sbb
and
cmpb
cltd
dec
xchg
pop
stc
loopne
cmpsl
or
and
imul
inc
fwait
xchg
sub
jbe
add
stos
mov
call
pop
adc
add
orl
xor
and
xchg
mov
push
and
cwtl
dec
test
sub
and
sbb
orl
jl
mov
push
hlt
mov
pop
mov
push
inc
add
and
imulb
fs
loop
cmpsb
pop
cmp
lcall
xchg
lock
pop
adc
rcl
inc
sbb
lcall
orb
out
pop
lds
inc
push
push
fs
dec
cmp
xor
call
jo
out
sbb
fwait
sub
xorl
push
jb
lahf
loop
test
xchg
lahf
pop
pushf
mov
movsl
xchg
sub
xor
mov
jne
xchg
jg
popl
iret
pop
pop
in
add
cmp
dec
adc
imul
sub
add
or
and
jae
test
lret
lock
add
dec
mov
mov
lock
or
sub
jg
cmp
sbb
mov
nop
xchg
add
dec
push
jmp
out
push
or
inc
lds
je
adc
enter
cmp
xor
mov
imul
jns
sub
nop
add
shrl
lock
sbb
push
cmp
xor
jmp
test
adc
or
outsb
test
mov
pop
push
cmp
add
adc
push
mov
add
xchg
nop
imul
or
cld
test
inc
cmp
movsl
add
push
ja
repnz
or
sub
inc
lahf
sub
fwait
adc
call
xchg
adc
shlb
jecxz
pop
xorb
cmp
in
hlt
rclb
inc
int3
inc
loope
jnp
cmp
push
xor
test
insb
xorl
jo
adc
inc
stos
or
add
das
mov
popa
pop
sbb
sub
pop
push
adc
mov
in
mov
push
push
add
in
ret
leave
negl
and
push
push
xor
cs
rep
add
movsb
repz
movsl
jns
mov
sti
adc
ret
jnp
add
push
jns
push
push
out
push
xor
imul
push
cmp
cmp
repz
nop
jp
mov
jne
and
cmp
mov
out
jb
fwait
out
addr16
test
enter
and
xchg
push
mov
lahf
sub
mov
mov
push
push
xchg
inc
xchg
push
xchg
mov
mov
push
cmp
push
push
rorl
in
out
push
push
sbb
add
add
mov
aaa
xor
xor
xor
adc
je
xor
add
inc
les
xchg
test
test
insl
dec
xor
testb
xchg
cmpsl
sbb
test
je
scas
pop
inc
test
lahf
stc
cmp
sti
ss
jmp
idivl
jnp
cmpsl
pop
push
pop
sahf
mov
push
loopne
push
sub
je
or
nop
popf
push
or
add
dec
or
pslld
or
in
push
dec
push
push
repz
out
in
sbb
or
out
pop
lock
mov
out
in
outsl
or
inc
mov
test
push
or
inc
add
rcrb
mov
or
imul
movsl
adc
sbb
add
pop
or
and
push
rolb
sub
out
fdivs
outsl
or
xchg
mov
sbb
aaa
jle
cmpsb
xchg
std
sbb
pop
enter
jecxz
and
mov
int3
decl
enter
add
inc
pop
cltd
dec
add
push
fadd
inc
mov
pop
add
xchg
rol
lret
and
imul
xchg
sbb
loope
mov
fcmovb
nop
sar
cld
dec
lret
test
adc
inc
movsl
imul
cmpsb
push
js
dec
je
push
notb
mov
xor
loope
test
xchg
loope
add
dec
testb
sbb
fxch
xor
pop
sbb
push
dec
fwait
xchg
pop
push
fs
rolb
inc
xor
lock
and
or
ljmp
mov
loopne
fstps
mov
movl
ret
call
out
or
je
dec
jne
je
insb
enter
stos
jl
pop
adc
mov
pop
or
out
loope
push
or
icebp
popf
and
pop
add
pushf
inc
adc
cmp
jmp
std
stc
movsl
or
xor
imul
or
fcomp
and
dec
popf
jmp
mov
nop
fldt
movb
or
jo
push
movzbl
imul
jns
cmp
fists
cmp
sub
addb
mov
scas
mov
add
call
jnp
mov
mov
dec
sub
xor
subb
ss
push
test
and
outsb
push
mov
adc
sbb
rorb
bound
lock
iret
in
xor
cmp
pushf
dec
pop
sub
js
xor
dec
lods
popa
sub
jnp
mov
nop
mov
xor
xor
jbe
inc
mov
or
data16
jne
cmp
jne
sti
daa
xchg
push
aaa
aas
movb
or
cmp
cmpl
add
inc
add
or
xor
mov
inc
int3
and
insl
lahf
xlat
lcall
add
sub
jno
cltd
in
push
cwtl
aaa
filds
pop
pcmpeqw
subl
push
popa
frstor
xchg
aam
mov
dec
in
jno
push
movsb
ss
cmp
test
scas
test
mov
dec
fdivr
or
xor
cmp
shl
cli
xchg
and
aas
add
jmp
mov
dec
push
mov
or
mov
shlb
dec
adc
adc
or
mov
xor
pop
cmp
jmp
mov
lcall
repz
adc
push
fwait
mov
je
pop
xchg
jne
cmp
add
sub
ds
decl
add
clc
mov
repz
dec
sbb
add
movl
icebp
movsb
jne
ds
ljmp
mov
leave
mov
adc
add
ds
adc
jmp
mov
push
dec
add
jmp
out
mov
push
jne
test
inc
inc
subl
repz
push
adc
fst
xchg
jle
push
clc
jmp
push
subb
mov
movl
push
mov
sbb
mov
lds
incl
cmp
lods
outsl
sarl
out
push
addb
pop
sub
orl
cwtl
and
push
inc
cmp
in
pop
lcall
outsl
push
jae
enter
pop
enter
jae
pop
xor
ja
or
or
imull
sarb
jns
sbb
sub
push
push
out
std
popl
ds
pop
mov
push
lea
pop
mov
in
sub
add
ret
push
cmpsb
cmc
cmpsb
lock
jne
inc
shll
je
sbb
pop
mov
jbe
divl
in
sbb
popa
mov
pop
lea
sbb
dec
imul
enter
fidivrl
mov
pop
add
dec
pop
or
inc
sbb
push
or
sbb
pop
bound
adc
popa
subb
cmp
imul
sub
sbbb
or
xchg
or
ljmp
sbb
push
mov
xchg
in
dec
inc
dec
dec
in
andb
loope
lea
dec
cmpsb
mov
dec
je
pop
cmpsb
and
lods
xchg
xchg
jno
aad
and
andl
mov
pop
fmuls
cld
push
pop
push
enter
les
and
inc
or
pop
add
mov
dec
je
dec
dec
pop
xorb
pop
adc
xor
add
inc
dec
addb
jne,pt
push
cli
add
mov
das
inc
add
jecxz
scas
add
iret
push
hlt
js
pop
lock
cld
bound
or
andl
jmp
bound
into
inc
cwtl
and
adc
and
bound
add
roll
bound
inc
pop
xchg
iret
jns
xor
push
add
psubusb
cs
or
pop
or
dec
lock
insb
and
iret
incl
lods
mov
add
loope
ror
js
lahf
nop
mov
lahf
call
call
clc
jmp
xor
aad
adc
add
nop
dec
mov
test
insb
xchg
or
dec
jge
push
jae
and
fistps
jge
ss
and
lcall
mov
lock
out
push
ret
es
repnz
push
mov
push
pop
insl
jg
cwtl
push
addl
hlt
xchg
pop
mov
in
jb
pop
into
data16
add
add
nop
xlat
rcl
outsb
xor
sub
es
inc
jl
xor
outsl
and
imul
push
push
jg
jno
stc
push
nop
incl
add
cmpsb
mov
fldl
sbb
mov
ss
insl
mov
xlat
and
jmp
rcrl
jp
jmp
je
mov
jne
adc
aam
inc
lahf
xor
sub
xchg
nop
sub
aas
daa
in
add
cwtl
mov
pop
enter
mov
add
sub
int3
js
mov
movsb
test
or
mov
and
lcall
lods
fidivl
adc
pop
adc
outsb
push
popf
push
lods
cmovl
dec
inc
cli
xchg
and
pop
xchg
jne
movb
jle
push
push
sub
xchg
xchg
xor
cwtl
push
and
xor
lea
xchg
ja
inc
or
in
sub
addr16
sbb
lret
jmp
mov
or
adc
mov
dec
adc
push
loopne
enter
sbb
cmpl
mov
sbb
addr16
push
cmc
add
cmp
popf
ror
subl
clc
shl
rcrb
iret
stos
cwtl
add
mov
push
cmpl
mov
jmp
dec
xchg
cmp
ss
dec
dec
mov
iret
addr16
sub
clc
rol
frstor
es
mov
and
jae
inc
fs
sbb
jo
dec
js
mov
mov
sub
je
pop
add
add
jne
test
mov
lcall
gs
and
sbb
in
push
test
push
mov
push
mov
stc
adc
lea
mov
mov
gs
fst
ss
out
adcb
or
or
jle
inc
xor
inc
arpl
pushl
pop
cld
push
xchg
pop
sbbb
push
push
xor
dec
jnp
dec
add
loopne
jbe
jae
es
les
test
cmp
rcl
fcmove
roll
mov
xor
cmpb
hlt
jmp
mov
add
stos
lcall
and
push
xor
mov
inc
xor
mov
push
dec
aad
sti
cmpsl
or
jmp
dec
inc
jle
adc
popf
insl
stc
mov
test
test
pop
sub
out
mov
sbb
xor
or
mov
aam
add
mov
push
xor
add
mov
fsts
repnz
jb
jecxz
leave
or
xor
xor
lock
cmp
xor
movmskps
iret
je
dec
je
inc
js
lea
int3
je
aad
nop
jnp
lds
or
insb
xchg
add
and
and
js
sbb
test
xchg
dec
in
leave
jle
xor
push
sbb
stos
add
dec
test
cwtl
test
icebp
xor
push
cmpsb
mov
or
imul
mov
repnz
push
pushf
dec
mov
in
cmp
repz
sub
aam
add
call
add
clc
orl
lds
lret
sbb
jno
and
div
adc
and
dec
stc
inc
sub
lahf
dec
add
cmc
cli
rorb
aad
mov
inc
jge
push
jne
dec
add
sbb
xor
mov
scas
pop
xchg
jnp
lahf
add
fwait
cld
imul
push
sbb
jle
pushf
cltd
hlt
jge
insb
dec
push
imul
inc
sub
andb
cmpxchg
push
xor
xor
mov
mov
ss
fcmovnu
cmp
fstl
fwait
jne
test
and
mov
and
push
cmpb
jo
add
sub
xor
ret
sbb
pop
sbb
adc
or
add
push
cmp
adc
and
mov
dec
sub
scas
xor
loope
adc
popf
sub
popa
mov
sub
mov
rolb
mov
cli
fildl
fmuls
test
ret
sti
loopne
lret
push
mov
inc
outsb
je
arpl
add
in
add
and
mov
sbb
cld
cld
mov
and
cld
cld
cmp
hlt
mov
jns
pop
add
pop
cwtl
sub
fimuls
jbe
push
sub
xlat
mov
push
test
cld
ljmp
mov
xor
cmp
or
sub
mov
nop
or
mov
scas
xchg
popf
imul
jl
lea
xchg
lret
xor
sbb
push
mov
and
or
or
or
inc
pop
cmp
and
adc
mov
sbb
cmp
hlt
mov
xchg
xor
jno
dec
rcll
int3
stos
int3
in
jns
and
inc
cmp
or
leave
sub
stc
pop
dec
add
and
mov
cld
add
or
addl
cwtl
xor
mov
into
jmp
and
fisttpl
and
jo
out
cld
cli
imul
pop
add
mov
cli
addr16
jle
and
and
add
mov
cmpb
movl
bound
jle
enter
lock
cmp
inc
push
call
ds
outsl
insl
testl
inc
sbb
mov
pop
sbb
fwait
fs
cmp
and
sbbb
or
add
shlb
add
cld
cs
add
rcl
mov
cmp
add
mov
cmp
xor
mov
xchg
mov
jne
mov
pop
pand
call
pop
rclb
jne
lods
cmp
insb
cmp
jmp
add
mov
out
sahf
and
pop
ds
push
push
cmc
mov
lea
mov
mov
daa
fdiv
and
pop
pop
psrld
cwtl
add
int3
addb
lret
push
das
imul
fiadds
and
pop
push
or
dec
jge
mov
negl
lock
add
add
lods
mov
xchg
outsb
or
movsb
push
jbe
dec
and
dec
add
add
loopne
stos
mov
push
shll
jnp
add
jo
pop
pop
push
enter
dec
xor
adc
lock
pushf
out
dec
sti
mov
add
or
push
pop
gs
mul
aaa
loope
insl
pop
sub
push
loopne
pusha
jno
add
in
xchg
mov
stos
mov
add
mov
lds
out
mov
cli
pop
test
xchg
popf
sub
mov
or
nop
or
in
mov
xlat
cmc
mov
mov
sbb
mov
iret
ja
sbb
subb
xchg
jle
push
push
test
ret
cmc
inc
add
imul
insl
andb
sub
xchg
mov
inc
pop
bound
mov
add
lods
inc
pushf
std
hlt
push
add
cmpb
mov
aam
fs
xchg
sub
jno
jo
lods
xor
add
xchg
mov
lret
mov
es
in
test
lds
mov
mov
dec
lock
bound
cmp
lcall
cmp
orl
add
mov
xor
or
cmc
ja
mov
sub
dec
test
mov
je
or
push
adc
adc
xor
int
jo
test
cmp
lods
mov
sub
or
push
imul
mov
jno
aaa
jp
fdiv
in
jnp
sub
xchg
dec
enter
jmp
dec
inc
cmp
mov
jo
lret
adc
xchg
idivl
mov
bound
lods
arpl
rcpps
scas
mov
js
mov
push
test
es
mov
scas
mov
mov
or
fimuls
add
dec
sbb
xor
jl
mov
mov
push
jmp
sbb
cmpsl
pop
sub
mov
push
mov
pop
xor
imul
add
or
mov
adcl
inc
je
aas
push
aam
dec
mov
lahf
das
arpl
dec
les
popa
js
inc
arpl
movsb
inc
mov
add
or
stc
shr
outsb
popf
jp
xchg
iret
movl
shlb
push
add
add
adc
adc
or
jne
push
fwait
dec
rcr
inc
or
pusha
enter
pop
or
leave
rcrl
cmp
lahf
loope
pop
mov
out
mov
adc
sbb
mov
sbb
sbb
mov
fbld
dec
jge
cmp
daa
jbe
fsubp
inc
mov
outsl
out
xchg
cmc
sbb
xorl
xor
into
cmpsl
loopne
aas
fucom
mov
imul
jb
sub
and
mov
push
xor
push
mov
stos
fiaddl
add
add
sub
add
sahf
out
dec
pop
outsl
adcb
ror
popf
adc
outsb
and
aaa
ret
bnd
mov
dec
push
push
pop
add
adc
pop
shrb
inc
ds
sbb
add
adc
in
adc
in
cs
adc
incl
or
push
mov
fadd
cs
jo
or
pop
pop
enter
add
add
div
incl
mov
mov
mov
mov
pop
paddd
mov
push
scas
sub
lret
adc
mov
iret
mov
mov
sti
push
int
add
dec
cld
jmp
and
insb
outsl
arpl
imul
js
out
push
jb
gs
push
insl
add
arpl
add
gs
mov
add
add
das
add
insl
adc
jnp
call
adc
jae
cld
leave
repz
fs
and
dec
and
repnz
das
das
das
and
push
cmovno
clc
pop
mov
or
dec
ss
mov
dec
je
outsl
push
push
jo
mov
cmpsb
jne
addr16
jae
add
mov
out
pop
outsb
dec
divl
pop
faddp
subl
fidivl
push
mov
outsl
popa
and
mov
and
das
insl
insb
rorl
pop
imul
lea
mov
jns
out
out
neg
mov
popa
sahf
jne
arpl
or
push
pop
inc
jae
outsb
fcmovb
mov
sub
imul
inc
addr16
ds
mov
insl
pop
neg
iret
mov
sbb
lahf
jg
dec
cmp
out
stc
jns
cmp
dec
and
mov
cmpsb
mov
das
das
adc
dec
jle
shll
push
insl
bound
dec
outsl
jbe
imul
pop
dec
arpl
push
gs
sub
addr16
push
dec
jne
xchg
outsb
xchg
inc
jo
data16
mov
popa
jb
jg
bound
push
inc
out
mov
into
mov
jae
cmp
jg
int3
fisttpll
addr16
data16
xor
std
adc
jae
push
gs
sbb
sti
cltd
adc
and
jbe
ja
pop
dec
inc
aas
add
mov
jp
dec
add
iret
out
jmp
inc
adc
fildll
gs
sub
push
test
inc
cltd
dec
pop
pop
inc
lods
lds
sub
push
stos
test
popf
xchg
mov
push
xchg
test
sub
push
lret
imul
inc
decl
dec
dec
dec
dec
dec
es
push
push
push
pop
pop
pop
pop
xor
lcall
pop
pusha
popa
bound
gs
imul
jo
add
jbe
js
jp
jl
jle
add
subb
and
imul
and
arpl
sarb
ds
xlat
and
add
add
add
outsb
xchg
imul
and
jbe
pop
fisttps
add
or
mov
inc
xor
dec
push
inc
inc
aas
add
stc
mov
add
add
sub
xlat
scas
je
mov
out
imul
aaa
dec
jecxz
arpl
fcomip
daa
scas
insl
push
push
sbb
add
pop
cmp
cmpsl
pop
jne,pt
outsb
and
popa
out
pop
cmp
jecxz
xchg
aas
imul
ds
jp
jecxz
and
dec
fs
and
in
jne
aas
push
outsl
jmp
xchg
out
mov
arpl
xor
mull
lret
stos
insl
sub
push
imul
nop
loopne
ja
cmp
cmp
xorb
adcb
push
insb
mov
push
jo
scas
dec
sub
loopne
mov
sub
sub
popa
add
push
jnp
arpl
addl
sbbl
imul
jae
push
jo
inc
daa
lret
cmp
sub
out
xor
in
ds
je
adc
sbb
jo
out
lods
js
arpl
mov
fisttpl
iret
push
sub
xchg
scas
fildll
filds
push
das
jb
jo
xor
fidivrl
cs
add
das
xor
sub
stc
bound
fs
add
push
or
sub
insl
push
or
sahf
aaa
rol
add
iret
test
inc
fbstp
mov
fbstp
scas
jne
jbe
jb
jne
aad
pop
jae
mov
jg
pop
outsl
movl
lods
adcb
sbb
fildll
inc
add
push
lahf
outsl
aas
or
andl
aaa
jbe
cmp
mov
add
cmpsl
or
lret
imul
mov
mov
add
cs
enter
mov
into
cmpsl
outsb
inc
sub
xor
push
adc
out
jnp
in
pop
insl
pop
je
sbb
sub
mov
adc
jae
cmpsl
mov
scas
xor
jnp
mov
outsl
pop
fimull
push
push
xor
mov
xchg
addr16
add
vmwrite
add
test
or
push
imul
cmpsl
push
lcall
sbb
sarl
sbb
xor
sbbb
int
cmp
sbb
shlb
iret
push
lcall
and
and
out
lcall
ds
jns
cld
sub
in
clc
mov
push
aaa
add
sbbl
sub
sub
sub
dec
jb
sbb
into
bound
jne
jnp
outsb
mov
dec
insl
mul
jnp
idivl
imul
mov
and
mov
pop
sbb
push
fwait
cmp
out
mov
outsl
add
push
add
in
in
lea
mov
nop
xchg
and
mov
add
xchg
ja
mov
sahf
or
or
sti
mov
ljmp
insb
insb
sti
pop
notl
add
push
add
add
add
mov
inc
push
push
and
push
pop
pop
lods
aaa
std
mov
push
pop
cwtl
and
or
pusha
add
add
js
addr16
or
sub
add
sbb
add
gs
popa
data16
pop
insb
outsl
bound
jns
aas
fstpt
xor
insw
mov
mov
push
push
arpl
iret
cmp
sti
clc
insb
fs
cmp
dec
sub
push
xchg
outsl
jb
arpl
insb
insl
inc
xor
push
ds
jnp
subb
xor
pop
inc
setle
push
outsl
pop
out
sub
dec
xor
outsl
test
sbb
add
jns
push
mov
aad
inc
data16
xor
clc
ds
add
dec
inc
inc
out
mov
and
push
push
inc
sub
push
push
push
dec
dec
inc
dec
inc
adc
pop
fs
inc
push
xchg
mov
sbb
adc
filds
mov
push
dec
and
out
add
and
sbb
dec
add
adcb
sub
jb
add
and
test
add
add
addb
jo
pop
ja
add
xchg
sbb
add
jbe
test
add
add
mov
cltd
add
pop
test
push
incl
adc
pop
pop
cmp
aaa
add
addb
push
push
fimull
and
or
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
inc
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
jmp
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
inc
inc
add
cmp
ljmp
mov
cmpl
incl
cwtl
sub
outsl
pop
push
imul
testl
gs
bound
arpl
outsw
jb
lods
jecxz
jge
push
ss
popa
mov
imul
gs
movsb
jne
daa
pop
lea
dec
add
jmp
outsl
js
mov
movsb
into
push
sub
add
js
fbld
push
addb
adcb
add
add
loop
or
pop
adcb
dec
sub
cmp
lock
ficoml
inc
pop
mov
sub
jb
push
pop
or
scas
dec
mov
mov
outsl
insl
jo
push
and
lock
mov
aaa
insb
movsb
lock
js
and
out
jns
inc
mov
arpl
jo
add
inc
gs
inc
jb
cmpsb
and
daa
pop
and
ss
jns
mov
loopne
clc
adc
and
arpl
je
jb
inc
rcl
stos
andb
cmp
outsb
xlat
lock
in
pop
push
jbe
mov
jns
or
clc
mov
pop
jb
and
pop
mov
inc
jbe
push
push
push
fs
insl
and
gs
cwtl
stos
sbb
and
pushw
or
mov
jp
and
mov
cmp
push
stos
loopne
and
or
fmuls
push
mov
popa
shlb
mov
divb
mov
push
jae
mov
dec
or
cmp
into
outsl
add
push
popa
insb
insb
jae
addr16
fdivrl
adc
insb
adc
cmp
sti
dec
push
push
push
push
dec
testl
xchg
mov
enter
stos
popa
mov
fildll
dec
jge
and
jb
push
sbb
lock
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
insl
shl
mov
push
mov
jg
sub
push
jne
push
or
cmp
je
outsl
xchg
daa
cmp
mov
popw
pop
cmp
push
jl
cmp
cmp
push
das
divl
push
sub
es
out
xor
jae
push
jle
sub
sub
sahf
data16
xchg
fstpt
add
add
scas
push
sahf
jge
sub
sub
sub
fdivrs
aaa
push
mov
je
and
cmp
inc
cmpsl
add
cmp
addr16
push
jb
fstpt
shll
ss
gs
or
pop
imul
or
testl
imul
fs
jo
sub
xchg
jl
jmp
fcomps
push
rolb
les
mov
out
xchg
mov
repz
dec
fs
dec
cwtl
cs
out
sahf
notl
dec
dec
inc
sahf
out
sahf
cmp
sub
and
sahf
out
and
adc
repz
out
or
cld
dec
iret
repz
clc
hlt
lock
call
cmp
aam
repz
repz
enter
iret
repz
mov
pushf
nop
js
ja
repz
cmp
movl
sahf
mov
or
jns
jge
inc
fiadds
les
cwtl
mov
cmp
repz
lock
enter
ds
repz
cmp
inc
jle
repz
int
mov
xchg
push
andb
push
ja
adc
push
lea
push
dec
inc
dec
cmovns
add
out
repnz
push
push
dec
pop
push
pop
subl
push
test
cmp
mov
or
outsl
lock
push
push
aaa
dec
fnstsw
andps
pop
or
repnz
das
inc
mov
outsb
loope
in
mov
pop
ljmp
sub
cmp
push
cmpsb
inc
adc
inc
or
loope
ret
inc
sbb
mov
dec
arpl
push
rolb
popa
call
add
pop
adc
fimuls
repz
sbb
scas
les
cwtl
ljmp
or
in
gs
popa
pop
push
dec
jo
cmp
add
inc
popa
push
xchg
mov
cs
mov
ret
imul
xor
mov
lret
repz
pop
ficoms
ds
xchg
push
pop
push
add
pop
insb
neg
jnp
inc
aas
push
cmp
add
xlat
push
push
push
repz
das
testb
or
mov
mov
imull
cmp
xor
sub
add
mulb
sbb
or
gs
and
push
rclb
push
jo
mov
aas
imul
inc
int3
pop
out
or
mov
sbb
mov
lcall
cld
push
push
inc
cmpsb
out
jns
or
add
mov
orb
fs
dec
jae
pop
into
ret
mull
test
push
push
fidivs
mov
addr16
push
inc
notb
out
rorb
das
out
out
inc
sbb
push
xchg
pop
mov
push
outsb
mov
sub
popa
arpl
xorb
xorl
inc
cmpsb
mov
loopne
ret
jnp
js
inc
xor
out
stos
testl
inc
imul
jl
or
mov
xchg
testb
xor
mov
mov
out
jb
in
loope
and
out
insb
mov
out
push
movb
js
pop
pop
push
repnz
sbb
in
jbe
inc
push
pop
ds
cs
dec
pop
inc
fistl
out
fistpl
mov
pop
push
pop
cmp
inc
dec
inc
inc
test
sbb
shlb
pop
fs
pop
jae
out
push
inc
out
mov
pop
and
scas
lock
mov
ds
pop
fistl
inc
and
lods
popa
pop
lret
cmp
movsl
xor
xchg
pop
insl
mov
or
jo
stos
roll
pop
push
cmpsb
inc
pop
adc
xlat
ss
bound
test
add
mov
out
js
out
arpl
lahf
out
mov
outsl
push
xor
popa
push
and
jbe
in
loopne
ja
dec
in
repz
push
das
push
daa
cltd
pop
aaa
test
ds
push
pop
pop
rdpmc
in
pop
push
bound
push
test
mov
imull
pop
popf
push
ja
std
fisubs
cmc
mov
pop
inc
pusha
mov
mov
out
out
fcomps
pop
mov
out
lods
fldl
outsl
pop
addr16
xlat
xchg
jb
gs
xor
test
jae
outsl
ja
xor
cmp
dec
addr16
popa
push
jns
mov
lret
jo
adc
imul
pop
dec
aaa
rolb
push
jo
je
sbb
out
pop
or
loope
xchg
inc
xchg
pusha
das
pop
out
addr16
or
pop
jae
xchg
insb
push
sbb
mov
movsl
xor
arpl
mov
addr16
dec
jnp
andb
pop
adc
out
fs
bound
adc
add
sbb
or
aaa
adc
daa
aaa
or
jg
xor
add
inc
jae
push
mov
insl
sbb
mov
pop
jns
jg
or
fisubrs
pop
arpl
or
out
inc
sbb
les
push
jmp
jns
into
add
out
push
inc
add
insb
pop
je
inc
stos
ficoms
add
into
jnp
push
mov
push
addb
cs
testb
insb
jne
imul
adc
das
test
incb
popa
jb
pop
jne
cmp
xchg
ja
ja
jb
mov
daa
add
push
js
pop
jg
xchg
test
adc
and
mov
and
dec
psraw
and
dec
pusha
mov
xchg
das
mov
inc
addr16
and
arpl
mov
outsl
or
sbb
sbb
inc
cs
push
and
stos
lods
dec
pop
xchg
dec
nop
or
or
inc
fisubrl
jae
sbb
imul
mov
or
sbb
mov
xor
sbb
js
jnp
scas
aaa
cmp
mov
fildl
sub
add
mov
or
mov
inc
testl
imul
push
fdiv
shl
pop
sbb
sub
ja
arpl
lds
or
jae
aad
loop
mov
xchg
mov
mov
xchg
imull
dec
push
or
sti
ja
or
dec
pop
cs
test
xor
xchg
cmp
in
mov
inc
sub
mov
push
loop
inc
sbb
sbb
push
sub
lcall
jl
pop
fcom
ja
ret
jne
and
mov
sub
pop
js
push
mov
lret
add
or
jne
adc
push
or
cmp
ja
jo
inc
add
dec
inc
push
cmp
push
mov
stos
push
test
cmc
adc
inc
dec
testb
cmpsb
rolb
pop
insl
mov
aas
pop
lea
mov
inc
daa
dec
sub
push
mov
dec
push
getsec
cmp
xlat
fidivrl
enter
xor
xor
and
sbb
push
dec
jnp
ret
test
dec
cmp
in
cltd
lea
sub
arpl
ret
jbe
xchg
fiaddl
aaa
xchg
dec
dec
xchg
out
pop
mov
adc
fmuls
mov
inc
xchg
ja
rorl
dec
in
mov
fimull
lds
sbb
and
mov
sbb
inc
push
je
adc
dec
sbb
xor
inc
inc
push
add
xchg
mov
fimull
push
cmp
xchg
aaa
lcall
and
call
push
mov
dec
mov
out
jecxz
movsl
pop
imulb
push
jl
inc
add
cmpsl
in
sub
repz
pop
arpl
inc
je
jecxz
pop
inc
ror
cwtl
jae
xlat
pop
pop
inc
ds
mov
daa
dec
add
out
push
push
inc
daa
push
daa
jbe
add
pop
cs
cmp
ss
cs
xor
in
xor
ds
xor
xor
dec
mov
and
imul
lahf
push
xorb
add
scas
push
pop
push
jae
or
push
xor
dec
adc
inc
scas
add
arpl
fstpt
jg
push
pop
inc
sti
jo
cmp
mov
dec
pop
add
adc
fbld
mov
daa
daa
daa
aaa
ss
daa
xor
scas
mov
scas
inc
pop
add
pop
add
das
push
imul
xchg
inc
pop
pop
xor
ss
sbb
addps
mov
inc
sahf
add
loope
ljmp
js
xchg
pop
pop
jae
fnstsw
or
push
push
dec
adc
push
jne
cmp
cmp
popa
imul
lods
xor
add
push
adc
sbb
jo
divl
dec
xor
or
test
movsl
sti
add
mov
xchg
add
sbb
adc
and
add
add
fistps
add
iret
cmpsl
repnz
push
lcall
incl
jg
outsl
or
lock
xor
loop
push
pop
lods
xchg
inc
mov
sub
dec
inc
push
dec
add
inc
inc
push
dec
dec
dec
dec
push
adc
mov
dec
add
dec
in
pop
in
jle
inc
dec
add
add
jns
add
scas
add
add
pop
jb
pop
add
push
xchg
inc
repz
fsubl
bound
popa
pop
jbe
add
or
inc
dec
scas
fldcw
insl
jne
or
and
mov
fisttps
outsl
jo
insl
outsl
xchg
inc
jb
insb
sbb
pop
call
push
fscale
push
and
xchg
pop
inc
bound
imul
out
es
inc
arpl
push
outsl
mov
cmp
outsl
add
stos
adc
repz
lods
dec
jae
ss
cld
imul
jnp
add
push
jb
cmp
xchg
or
push
jbe
mov
and
jns
out
outsl
insb
adc
lods
sbb
inc
push
sahf
pusha
inc
outsb
insl
xlat
mov
inc
insb
pop
outsl
test
inc
outsl
cmp
jne
or
imul
push
out
pop
mov
pop
adc
jne
xor
fs
jne
or
lock
cltd
add
rorl
insl
cli
pop
mov
add
and
sub
je
fs
loopne
fcmovne
movsb
ds
popa
push
jb
sti
rcr
add
dec
ss
orl
fadd
outsb
andb
imul
jns
dec
fcomp
sbbb
push
mov
fsubrs
dec
es
outsl
push
out
int
add
or
arpl
insl
bound
xor
mov
inc
adc
insb
add
outsl
cmp
shll
arpl
or
ss
sbb
arpl
mov
imul
cmp
fs
add
notb
outsb
insl
scas
add
dec
mov
dec
lret
push
pop
dec
or
rorl
imul
imul
jb
push
adc
nop
pop
push
outsl
jne
pop
subl
add
dec
loope
inc
xor
or
push
lcallw
add
gs
mov
adc
xchg
push
imul
outsl
out
gs
or
sub
add
and
xchg
in
popa
jbe
adc
or
sub
adc
sbb
push
imul
mov
inc
mov
fdivs
sbb
insb
push
repnz
ja
stc
gs
cld
sbb
call
je
cmp
gs
mov
imul
push
data16
push
andb
jnp
push
cmp
push
jo
jae
xor
pop
and
add
cld
mov
add
or
add
cld
cld
cld
dec
add
sub
add
ljmp
inc
push
add
imul
out
ja
push
imul
cmp
cmpl
and
pop
test
sbb
xchg
add
out
xlat
scas
add
cwtl
push
push
fwait
push
add
iret
iret
add
add
iret
iret
iret
iret
add
verr
adc
lock
sti
adc
out
out
add
adc
or
adc
out
push
add
pop
add
add
out
out
add
add
add
out
out
add
add
out
out
add
add
add
sahf
or
and
inc
or
into
iret
iret
iret
add
inc
add
and
fsubl
add
aas
mov
add
in
or
add
pop
add
test
aas
or
testb
inc
testl
xor
repnz
xor
cmpsb
add
ds
or
sbb
push
add
push
or
sub
xor
add
test
cmp
daa
push
in
xor
mov
movd
stc
stc
std
and
add
add
add
add
sti
stc
push
add
sub
lahf
sub
cmpsl
out
xchg
add
test
scas
add
rcll
mov
add
inc
ljmp
int3
add
iret
add
rorb
dec
add
sub
push
pop
add
js
sub
dec
fiadds
pop
push
cs
lahf
scas
push
add
add
or
add
add
iret
lock
add
cs
testb
add
aas
aas
aas
and
or
add
xor
inc
xor
dec
aas
aas
aas
aas
pop
add
add
add
add
cmp
aas
aaa
add
add
testb
cmp
sarl
or
add
sbb
ret
xchg
arpl
mov
cltd
inc
popf
loopne
mov
mov
cmpsb
jecxz
cmpsb
loope
sbb
add
sbb
iret
call
mov
and
ljmp
add
add
jle
inc
insl
test
jnp
inc
mov
sbb
add
xor
pop
mov
or
clc
push
js
sbb
fistl
and
jmp
pop
lds
addb
sbb
pop
leave
ja
jge
add
pusha
push
aad
in
adcb
add
adc
xchg
pushf
stos
push
cmp
cmp
inc
mov
cld
push
cli
jmp
push
out
mov
std
idivl
icebp
jmp
out
clc
pop
in
push
ljmp
mov
pop
mov
push
shrb
lcall
aas
in
push
in
ret
or
adc
or
mov
cmc
das
call
scas
pop
mov
push
push
je
dec
dec
sahf
xchg
jb
jae
outsb
lahf
rolb
ss
outsb
add
jo
jno
mov
push
cs
jo
insb
outsl
ja
mov
or
outsb
dec
jbe
aam
add
insb
popa
outsb
cli
mov
outsb
je
xchg
add
addr16
pusha
inc
insb
cmpsb
inc
add
mov
jo
add
jb
sub
add
inc
das
push
je
xor
jnp
mov
imul
pop
mov
dec
sahf
loopne
xlat
es
imul
jmp
add
pop
and
outsl
and
jb
pop
popa
es
and
and
aad
and
outsb
arpl
or
arpl
outsb
shrb
push
inc
sub
insb
sub
jae
and
mov
out
ret
outsl
jle
jnp
and
mov
xchg
outsl
add
aas
out
dec
jl
imul
divb
sub
out
add
xor
push
pop
pusha
adc
cmpsb
popa
mov
mov
in
adc
fs
movsb
push
sbb
xor
dec
and
shl
aam
inc
xchg
negb
cld
lcall
aaa
pushfw
insb
andl
sbb
mov
les
or
push
data16
push
lods
leavew
cmp
or
call
xchg
ja
sbb
aas
and
pop
daa
xor
add
push
dec
pop
and
dec
dec
lods
and
add
inc
jb
pushw
fwait
loopne
outsl
xor
ja
jne
inc
push
inc
mov
add
sub
stos
outsb
push
sub
and
cmp
bound
xorl
xor
enter
dec
dec
test
add
std
je
jae
and
arpl
loope
cltd
sbb
dec
loope
and
push
add
cmp
cmp
andb
inc
sub
xorb
test
sbb
jae
mov
ret
add
sbb
sbb
sbb
cmp
outsl
imul
fnstcw
je
cmp
or
push
fsubrs
push
sub
rol
cmpsb
mov
pop
je
jae
sbb
shrb
testb
or
xor
ret
sarb
cmp
xor
jecxz
mov
outsb
loopne
cwtl
nop
insl
sbb
cmpb
popf
sti
cli
adc
push
push
sti
pop
sub
test
fistpl
mov
dec
dec
mov
mov
pop
xorl
jne
je
les
outsb
sub
jle
jno
sbb
push
inc
push
inc
adc
mov
stos
test
cmp
sahf
mov
leave
sub
push
mov
or
add
xlat
rcrl
mov
jnp
outsb
shll
mull
mov
add
outsl
int3
clc
mov
add
push
insb
dec
jnp
in
lock
jge
push
sub
pop
jne
or
sbb
xor
xchg
ret
xor
or
loope
bound
ss
push
pop
stos
pushf
fucomip
and
arpl
xor
into
or
loope
loope
fists
jns
js
arpl
push
je
fwait
sub
push
or
lret
push
cmc
pop
cmpsb
push
out
push
jno
xchg
sbb
imul
add
ret
pop
cmpsl
pop
push
adc
sub
movzwl
insl
mov
push
lret
aad
addr16
xor
pop
roll
pop
rolb
pop
test
adc
add
dec
adc
cld
imul
xor
inc
jae
inc
neg
sub
shlw
xor
mov
push
pusha
push
jae
lds
in
cmp
outsl
cld
popa
insb
jae
sbb
addr16
aaa
mov
jo
dec
insl
bound
lret
dec
sub
imul
mov
jbe
xor
xor
add
fildll
sti
dec
add
stos
push
dec
dec
sahf
inc
incb
inc
inc
inc
dec
dec
inc
outsl
outsb
gs
or
fldl
lods
insl
xchg
add
stos
dec
push
dec
push
pop
fldt
addr16
jne
mov
and
cmp
hlt
sub
sub
mov
das
jmp
insl
in
sub
adc
adc
push
sbb
push
mov
es
cltd
orb
fidivs
or
sub
lea
adc
adc
addl
sub
lods
dec
ror
fwait
mov
xchg
sti
xchg
roll
pop
xchg
sub
pop
jge
xor
jge
jle
pusha
mov
jnp
shrb
add
sbb
mov
in
mov
sub
loope
lahf
sbb
dec
sti
pop
push
andb
mov
stos
or
mov
insb
shlb
jg
add
imul
dec
int
mov
cmp
add
add
push
insb
popa
aas
add
jmp
inc
adc
cmp
add
adc
push
mov
sti
adc
aaa
outsl
dec
lcall
add
addr16
ret
aaa
jno
rcll
jb
mov
push
xor
sahf
les
cmovl
repz
jg
ret
sbb
push
xor
xor
push
inc
pop
mov
shll
test
push
dec
jp
push
pop
aaa
test
aam
fs
test
outsl
insb
sbb
push
popf
mov
xchg
je
xchg
mov
iret
ja
aad
mov
jo
xor
addr16
push
adc
ret
mov
and
or
sahf
dec
ret
outsb
iret
jnp
lock
sbb
testl
cmp
inc
aas
cmpsl
cmc
rorl
xor
mov
idivb
repnz
jne
mov
jp
pop
sub
adc
daa
push
test
jecxz
jae
mov
push
das
adc
outsl
dec
pop
xor
ss
insb
das
push
dec
xchg
add
iret
push
clc
insb
lahf
inc
cmpsl
pop
or
mov
out
push
cmp
inc
xor
sbb
push
mov
ja
jl
outsb
xchg
iret
inc
push
push
in
push
pop
jo
jg
sbb
dec
dec
dec
inc
dec
inc
test
xchg
fildll
adc
ds
imul
out
daa
mov
movzwl
ja
nop
out
push
mov
flds
cmp
dec
pop
xchg
sbb
fisttps
add
dec
pop
add
adc
daa
inc
insl
shll
clc
adc
push
and
push
mov
addl
test
scas
das
filds
pop
jnp
jle
jge
pop
and
aaa
js
gs
push
jo
outsl
inc
push
out
jle
jae
xor
fs
push
pop
loop
outsb
bound
aaa
xchg
out
sub
push
inc
inc
cmp
xor
pop
adc
adc
pop
cmpl
mov
inc
dec
vpsubsw
loop
cs
mov
les
mov
mov
add
push
pop
pop
fisubrs
sbb
dec
test
pop
das
addr16
pop
pop
insb
test
dec
das
test
lahf
outsl
jge
outsl
bound
sub
ss
out
mov
test
sbb
addr16
lret
push
inc
orl
sbb
inc
inc
imul
insl
mov
fldt
pop
jae
dec
mov
sbb
sbb
das
das
stos
shll
mov
fisubrs
xor
sti
push
dec
or
pop
cs
mov
pop
dec
jmp
xorb
mov
inc
mov
js
fcoms
dec
mov
inc
pop
xlat
mov
das
ja
fldcw
pop
imull
push
sti
jbe
ret
push
aaa
dec
daa
bound
aad
fdiv
stos
dec
aaa
push
add
or
fwait
mov
ret
jg
jae
lret
mov
dec
daa
das
mov
and
mov
cmpsl
sbb
adc
cmp
add
pop
cmpsl
push
ficoms
pop
pop
dec
fdivrl
sbb
dec
subl
sbb
pop
push
fists
dec
and
outsl
push
sbb
push
iret
inc
imul
fwait
lahf
inc
inc
sti
aas
pop
orl
sbb
dec
cmp
jo
inc
push
mov
sub
push
das
pop
sbb
sbb
pop
insl
adc
shll
aas
xlat
pop
and
adc
fisubrl
inc
out
rorl
xchg
inc
das
scas
in
mov
outsl
out
mov
aas
jecxz
and
test
jle
push
cli
out
fisubl
push
inc
daa
inc
pop
inc
fldt
iret
das
iret
das
pop
shll
pop
add
sub
sub
arpl
test
das
incl
lcall
cs
sbb
ljmp
and
push
mov
mov
mov
pop
xchg
fists
or
aas
bound
push
out
aas
aad
mov
dec
xor
aas
mov
dec
jbe
xor
pop
push
mov
aaa
mov
cmp
outsl
lahf
testb
cmp
aaa
add
or
mov
popa
xor
testl
jp
pop
push
push
aas
popf
les
pop
and
insl
aaa
aas
ss
das
inc
imul
pusha
shlb
aaa
dec
pop
sub
sub
aaa
arpl
sub
lods
xor
dec
negl
testl
ja
ficoml
xchg
daa
xchg
idiv
push
bound
das
pop
dec
aad
cmpsl
das
xor
xchg
xchg
xlat
push
das
dec
lea
fimull
mov
sub
push
jbe
sbb
aas
push
outsl
push
aaa
scas
mov
sbb
divb
push
mov
movsl
das
fisubs
jecxz
cmp
push
xor
mov
or
adc
out
fisttpl
sub
movsb
inc
mov
jmp
xchg
mov
sarb
dec
movsl
sub
push
lcall
daa
movsl
adc
mov
push
imul
daa
lret
sub
mov
push
push
fcmovnu
inc
arpl
mov
lret
add
xor
cmp
mov
push
mov
cwtl
icebp
mov
das
das
jg
mov
xchg
mov
push
jnp
push
das
pop
jg
jg
pop
and
push
aas
add
aaa
pop
sbb
dec
loope
insb
mov
arpl
pop
mov
data16
jmp
sbb
aaa
push
mov
sub
mov
js
jmp
dec
pop
adc
sahf
mov
test
bound
sub
addr16
mov
daa
add
rolb
imul
cwtl
cmp
mov
sub
sub
adc
adc
daa
addr16
cmc
pop
insl
das
das
push
outsl
push
xchg
xchg
scas
lds
jmp
pop
aas
lcall
pop
jo
xlat
cmp
sub
dec
pop
cmp
push
pop
test
ljmp
call
dec
add
pop
adc
dec
dec
cs
popa
dec
pop
pusha
in
sbb
inc
das
xor
jg
xchg
mov
xlat
es
insl
dec
mov
inc
adc
adc
push
push
out
xor
pop
and
pop
pop
insl
adc
addr16
cmp
dec
inc
pop
imul
imul
dec
mov
pop
pop
mov
push
dec
daa
mov
in
dec
adc
das
mov
pop
imul
scas
sbb
shll
adc
push
dec
aas
inc
pop
out
jo
ljmp
mov
out
out
sub
add
sbb
imul
es
dec
in
mov
das
mov
mov
imull
xor
mov
es
insl
daa
pop
das
xchg
mov
out
aaa
inc
roll
dec
das
inc
inc
dec
outsb
shlb
push
aaa
rorl
push
sbb
mov
sbb
scas
push
shll
or
mov
daa
or
fstpl
pop
push
aaa
bound
add
or
mov
ret
cmpsl
push
mov
dec
das
aaa
aad
cmova
adc
stos
aas
daa
mov
inc
pop
mov
xor
aas
mov
dec
pusha
dec
xor
push
orl
mov
inc
stos
lods
or
loop
push
adc
pop
cmp
and
cmp
stos
inc
cli
mov
pop
scas
leave
push
je
mov
inc
rclb
push
and
adc
mov
add
dec
dec
lds
rorl
sub
roll
mov
push
xchg
push
dec
push
stos
push
inc
jge
sbb
push
mov
push
push
push
mov
xchg
cs
sbb
pop
xor
dec
loop
mov
pop
push
imul
inc
push
mov
adc
scas
rclb
push
inc
push
inc
inc
mov
add
sub
dec
push
iret
and
test
dec
dec
or
mov
xor
inc
cmpsl
pop
sub
cmpsl
lret
dec
imul
cmpsl
push
pop
or
xor
scas
inc
cmpl
lea
mov
out
jg
pop
insl
movsl
xor
jbe
pop
mov
fs
sub
bound
xlat
inc
aaa
repz
in
jmp
es
sti
jg
push
jnp
jmp
aas
arpl
sub
mov
inc
mov
imul
mov
lods
daa
call
movsb
shll
pop
pop
cmp
cmpsl
fdivl
or
pop
mov
aas
insl
jno
xor
movsl
daa
or
fldt
inc
addr16
scas
das
pop
shll
shlb
mov
ja
aas
jbe
push
daa
daa
popf
ret
jecxz
pop
mov
mov
add
subb
rep
and
das
subb
pop
in
mov
repz
scas
dec
dec
push
mov
mov
call
inc
testl
outsb
or
sub
mov
pop
inc
xchg
and
sti
fisttps
pusha
je
aas
inc
cs
add
das
dec
jno
mov
inc
mov
jb
push
pop
arpl
xchg
push
pop
add
inc
pop
push
xchg
mov
pop
das
xchg
jbe
movsb
shlb
ja
aas
rorb
lods
aas
aaa
in
or
sub
xrelease
call
lea
inc
fcmovnu
test
aas
subl
mov
insb
aas
ret
pop
jae
pop
pop
pop
daa
scas
rcll
imul
push
jnp
mov
roll
aaa
or
push
xor
daa
pop
mov
das
pop
es
cmp
sahf
mov
testl
lret
xchg
fsubrs
pop
test
push
aas
add
das
cmpsl
insb
je
mov
fistpll
mov
cmova
pop
mov
ja
xchg
push
idivl
imul
pop
mov
mov
push
addl
xchg
aas
pop
add
nop
sbb
shlb
mov
pop
daa
jnp
jg
mov
and
lret
push
add
shlb
in
loop
push
pop
pop
cmovne
or
adc
ss
dec
filds
aam
dec
dec
out
push
fildl
pop
xchg
into
sub
filds
mov
adc
iret
pop
nop
xchg
sbbb
aas
mov
xchg
mov
daa
aaa
xchg
sub
arpl
mov
cltd
pop
mov
inc
inc
cmp
sbb
push
mov
inc
mov
shrb
dec
pop
inc
pop
or
dec
mov
push
aas
aaa
fwait
add
repz
inc
jb
push
xor
icebp
sbbl
or
rorb
mov
sub
sub
adc
dec
and
adc
adc
ret
jbe
add
stos
mov
js
outsl
push
add
data16
imul
add
les
pop
ficomps
xor
mov
pop
add
mov
and
mov
jno
push
mov
je
pop
mov
ss
push
dec
testl
pop
adc
xlat
mov
cmpsl
dec
andnps
push
lret
imul
iret
imul
jecxz
daa
sbbl
out
inc
xor
jle
out
aas
add
mov
sti
pop
sub
inc
pop
popl
outsl
dec
ja
test
add
sbb
int
push
or
test
mov
xor
addr16
inc
inc
arpl
faddl
mov
adc
fbstp
or
xchg
aaa
mov
cs
sti
xchg
je
lahf
or
inc
sub
fidivs
add
add
sarb
jo
imul
rcrl
insl
addr16
bound
dec
dec
in
jnp
cmpsl
arpl
lods
sbb
xchg
mull
or
lods
inc
aas
mov
mov
rcrb
fidivrs
pop
xchg
rol
sbb
arpl
jbe
fwait
dec
outsb
ja
out
xchg
pusha
in
in
xor
cmp
lea
btc
mov
outsl
cmp
mov
pop
pop
mulb
imul
push
push
insl
add
sbb
addr16
pop
fcomps
ret
into
mov
outsl
dec
cmp
mov
xchg
rorl
push
insb
jg
dec
ret
pop
adc
test
sbb
mov
fdivs
xlat
inc
dec
push
jns
subl
fwait
scas
xor
stos
popa
dec
inc
je
jbe
mov
adc
mov
adc
pop
add
add
dec
mov
add
pushl
mov
ror
mov
aad
add
jne
inc
inc
add
dec
xor
push
ds
jo
add
popf
neg
jecxz
push
push
es
push
cmp
ficompl
push
jb
addr16
addl
inc
rcrb
shrb
push
mov
add
pop
push
push
adc
sbb
push
jne
jo
xchg
dec
mov
cmpsb
add
add
inc
and
cmpb
adc
nopl
dec
or
adcb
shrb
loop
cmp
das
add
dec
mov
fisttps
inc
inc
rolb
sbb
scas
scas
and
data16
out
dec
inc
dec
push
aam
cli
imull
inc
dec
dec
pop
arpl
inc
dec
inc
ljmp
gs
ljmp
push
inc
faddl
or
push
adc
int3
push
pop
xchg
xor
add
mov
or
shlb
scas
and
mov
push
or
das
sbb
lret
add
ret
adcl
mov
jo
mov
xor
roll
lods
xor
daa
pop
jo
adc
or
test
fldt
xor
test
gs
sub
arpl
mov
sbb
dec
add
push
cmp
insb
mov
imulb
sub
test
jae
jo
dec
dec
subl
add
mov
jo
daa
cmp
outsl
mov
or
cmovnp
and
jnp
insl
daa
addr16
pop
aaa
mov
addl
push
cmp
xchg
dec
ret
das
cmp
push
jo,pn
sbb
sbb
xorb
xorb
inc
push
adc
arpl
fs
scas
cli
fiadds
aaa
dec
outsl
fs
aaa
inc
js
xor
inc
movsl
lret
imul
jecxz
pop
dec
mov
or
arpl
jae
cwtl
or
outsb
inc
dec
and
dec
add
dec
mov
scas
inc
and
cmp
movsl
rclb
pop
daa
push
push
loopne
pop
push
imul
lods
stos
xchg
inc
ret
dec
fistl
cwtl
or
dec
inc
dec
out
mov
sbb
movsb
jecxz
jne
cmp
outsl
pop
aas
pusha
insl
sub
add
addl
imul
aaa
daa
inc
lods
add
push
loopne
pop
imul
pop
js
ret
cmpsl
inc
pusha
in
pop
scas
and
lods
aaa
cs
rol
shl
packuswb
das
dec
scas
inc
pop
push
repnz
cmp
dec
cmpsl
jbe
mov
push
mov
repnz
daa
adc
pop
call
xor
inc
cs
or
xor
out
add
not
movb
push
pop
inc
push
push
pop
bound
sub
push
sbb
movsb
push
mov
and
imul
jmp
mov
aaa
inc
jo
pusha
mov
daa
jne
lods
or
gs
sbb
ficompl
mov
fistpll
mov
mov
jae
mov
lods
sub
mov
cmpsl
sub
out
cmp
push
dec
mov
inc
add
shlb
or
adc
insl
pop
lods
scas
pop
push
push
daa
pop
sar
xchg
sbb
mov
mov
xchg
inc
inc
daa
add
jnp
dec
pop
in
sub
test
push
enter
push
xchg
lahf
inc
pop
push
shlb
aas
jbe
insb
ficompl
pop
aas
mov
mov
mov
das
xchg
pusha
dec
shrb
or
mov
cmpsl
push
lods
imul
pop
xor
add
fwait
and
das
mov
arpl
repz
xlat
sbb
mov
mov
mov
js
nop
pop
add
lods
mov
ljmp
pop
mov
inc
dec
pusha
mov
mov
dec
or
inc
adc
jecxz
dec
fbld
pusha
mov
testl
out
nop
push
sub
sub
fsubrp
out
aas
push
pop
das
inc
xchg
mov
mov
aas
in
push
mov
dec
inc
push
adc
push
mov
add
adc
and
sub
pushl
and
inc
out
inc
mov
jbe
gs
fisttps
je
xor
loopne
in
dec
insl
pop
push
add
jecxz
testl
cmp
imul
push
cmp
xor
xor
push
adc
or
and
xor
shrl
jbe
gs
add
pop
xchg
or
xlat
pop
jne
lahf
scas
test
lds
bound
xor
sub
dec
out
pop
loop
pop
mov
mov
into
fwait
gs
cmp
and
adc
sub
es
or
es
jae
cmp
ja
mov
and
aad
lsl
mov
jo
gs
imul
imul
add
cmp
lods
mov
xchg
andl
jne
loope
xchg
or
dec
pop
rolb
maxps
les
fadds
stos
cmp
xchg
mov
mov
pop
mov
jno
scas
push
fistps
mov
mov
inc
stos
pop
mov
push
das
push
cmp
scas
mov
pop
add
pop
aaa
mov
lods
mov
mov
mov
aaa
inc
pop
daa
mov
xchg
aas
bound
jmp
jbe
jo
inc
push
gs
je,pt
or
dec
gs
sub
xchg
movntps
pop
aas
shl
pop
or
pop
add
out
imul
jge
pop
inc
sub
cs
add
and
ja
fnstsw
cmp
sub
sub
mov
mov
cs
xor
xor
pop
ja
pop
and
aam
js
pop
inc
pop
addr16
push
and
pop
rorb
loope
stos
aaa
dec
arpl
sbb
adc
mov
mov
adc
adc
arpl
loope
stos
aaa
aas
sti
and
sub
ja
or
aam
and
dec
sub
mov
sbb
pop
or
lods
cmp
pop
mov
daa
lcall
out
popf
jbe
add
jae
dec
push
les
outsb
les
adc
add
xlat
mov
sbb
aaa
mov
in
das
aas
dec
add
movsl
mov
inc
adc
mov
and
mov
cmp
add
mov
and
mov
xlat
push
rorb
xchg
mov
popa
inc
mov
dec
jmp
or
inc
lods
out
jnp
es
out
pop
add
push
call
lock
adc
add
clc
add
add
push
xchg
sbb
inc
adc
ret
mov
es
repnz
adc
cmpsb
shll
or
mov
and
test
push
inc
arpl
xor
push
out
imul
subl
sub
aaa
cs
test
bound
push
push
js
imul
lds
add
lahf
seta
loopne
cmp
arpl
xchg
push
sub
jmp
ja
cs
outsb
or
dec
aas
jb
insb
ret
pusha
xchg
gs
jae
xchg
mov
add
or
or
add
rclb
pop
lahf
inc
mov
inc
rorl
adc
and
xchg
jb
insl
or
cmp
pop
jnp
test
xor
ja
jae
scas
cmp
dec
aas
dec
dec
pop
push
push
inc
pop
btr
push
push
pop
dec
cld
das
push
or
sub
or
dec
pop
push
and
adc
pop
pop
jb
jnp
nopl
lock
push
mov
inc
popl
jae
int
jo
clc
aas
int
add
jbe
jnp
aas
lock
push
jbe
repnz
mov
push
fists
add
mov
jb
int
mov
add
fstpt
rolb
in
das
inc
add
jge
sbb
outsl
sub
add
jbe
scas
or
cmpsl
ja
into
lahf
out
not
add
daa
aam
jae
jae
dec
jg
pusha
daa
aas
out
adc
push
addr16
cmpsl
mov
add
adc
mov
push
enter
mov
or
mov
stos
aaa
scas
addb
lds
inc
rcrl
pop
push
cmp
cli
pop
enter
ss
cmp
daa
fisubrl
in
es
aas
xor
xor
int3
mov
je
mov
cmovbe
dec
aas
scas
dec
inc
jb
cmp
dec
cmp
in
push
fwait
ss
aas
mov
andl
adc
inc
jb
jno
je
jo
pop
xor
jns
pop
xchg
sbb
out
dec
lcall
push
ffreep
sbbb
inc
hlt
mov
and
jg
jecxz
adc
xchg
out
jns
adc
scas
enter
and
jnp
aas
jnp
loopne
icebp
lds
roll
dec
mov
dec
sar
aad
mov
jb
mov
nop
mov
inc
pop
jecxz
mov
cmp
ljmp
aas
push
mov
inc
jnp
scas
stc
add
and
ljmp
pop
pop
adc
mov
xchg
pop
adc
dec
mov
cs
push
sub
std
cs
inc
push
into
pop
inc
pusha
cmp
inc
inc
aaa
push
mov
rorb
aaa
add
dec
and
add
add
scas
adc
dec
jae
add
pop
add
cmp
lock
mov
add
and
in
add
aas
shlb
and
xlat
stos
mov
adc
fistl
or
jb
in
andb
fisttps
mov
cld
sub
cs
inc
jle
test
shll
xchg
pop
stc
lcall
iret
mov
in
call
ja
jle
adc
push
ficompl
mov
cmpsl
in
fidivl
rcr
fsubp
stc
jb
jle
icebp
pop
sbb
inc
sub
scas
push
sarb
lods
movsb
pushf
nop
test
cmp
jnp
pop
jo
push
iret
pusha
pop
pop
push
push
dec
cmp
repz
inc
inc
cmp
fmulp
repz
adc
or
repz
repz
sub
in
aam
repz
rol
mov
or
repz
pushf
push
xchg
push
mov
je
pop
dec
cmp
jne
repz
mov
out
sahf
loopne
ror
sarb
test
cwtl
nop
pop
ja
cmp
subb
push
popf
out
jns
cmp
sbb
scas
hlt
sub
jns
out
fcom
mov
nop
inc
jg
jb
loopne
pop
dec
pop
add
pop
jo
mov
inc
push
cmp
fadds
inc
insb
sti
hlt
mov
incl
outsb
imul
push
ja
add
sahf
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jb
loopne
aas
into
aas
xlat
sbb
inc
lea
imul
or
mov
pushf
pop
imul
sbb
sub
pop
stc
test
push
pop
xchg
add
adc
add
xor
or
jne
push
push
jecxz
insl
mov
mov
imul
or
push
cs
mov
cmp
dec
adcb
cmp
sbb
cmp
test
mov
cmp
push
push
jns
or
js
jo
push
add
iret
repz
pop
and
or
repz
adc
cmp
repz
and
iret
repz
sbb
adc
or
cmp
repz
and
add
out
and
sub
adc
add
add
andl
add
js
xchg
jo
lock
daa
push
push
push
mov
jle
lret
inc
pop
jle
cmovns
cmp
stos
jne
pop
jno
jg
mov
dec
jno
push
jmp
push
push
add
add
popa
jne
xchg
sub
xor
add
jmp
leave
sbb
add
or
jg
add
repnz
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
incl
xchg
inc
push
add
inc
stc
mov
adc
mov
in
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
fxch
int3
add
sti
aas
jno
or
mov
pop
fs
dec
decl
cmc
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
jmp
add
aas
xor
aad
mov
std
std
into
popa
test
ja
ljmp
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
incl
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
incl
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
incl
adc
xor
push
scas
into
imul
faddp
jge
call
mov
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
fisttpll
ss
sub
jb
addr16
cmp
cmp
repz
pop
js
mov
idivb
iret
repz
xor
add
cmp
fwait
cmp
pop
ja
mov
imul
add
dec
bndstx
pop
jmp
iret
jnp
iret
add
dec
out
push
add
iret
repz
pusha
add
repz
repz
jns
iret
pop
in
dec
or
or
or
sub
jbe
xor
jl
out
xchg
adc
add
shl
iret
shr
in
int3
ror
cmp
mov
lock
out
lcall
out
out
sub
mov
out
sahf
movsb
mov
push
cmp
lock
iret
repz
cmp
cmp
add
cwtl
js
cmp
repz
dec
sub
add
repz
in
mov
xchg
test
cmp
repz
inc
xor
out
jns
iret
add
mov
mov
iret
repz
jl
inc
sub
lahf
out
sbb
pop
or
mov
iret
les
sahf
out
cmp
or
mov
out
lods
cwtl
mov
pop
inc
sbb
push
ss
sub
sub
sub
sub
jge
addl
mov
add
push
push
shr
mov
xor
ja
popa
push
out
mov
ljmp
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
pushl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
pushl
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
inc
push
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
cmp
xchg
shlb
add
inc
push
imul
jmp
jno
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
jmp
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
decl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
call
mov
sahf
fldcw
ret
es
pushf
mov
insl
add
ss
decl
push
jmp
addr16
jb
push
mov
dec
mov
loop
sub
or
decl
aad
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
call
mov
mul
ja
outsl
ja
mov
out
cli
jo
ljmp
adc
cmp
pop
or
adc
sahf
gs
clc
sar
imul
incl
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
call
dec
inc
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
dec
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
mov
add
sub
mov
dec
dec
into
pop
call
dec
push
or
dec
dec
mov
andb
stos
sub
fists
pop
or
pop
and
pop
add
in
scas
testb
add
jo
scas
add
or
sub
pop
pop
sub
or
sub
pop
test
dec
mov
or
lahf
xchg
movsl
adc
in
iret
repz
addb
push
cmp
repz
xor
sbb
jns
iret
repz
hlt
jg
loopne
jns
out
les
jns
js
push
cmp
and
fucom
jns
or
jle
push
loopne
out
sahf
rol
mov
pushf
mov
out
xorb
or
push
out
insb
push
push
imul
and
add
lret
aad
add
outsl
adc
aaa
pop
pusha
xchg
aad
push
ja
mov
lods
rolb
out
aaa
jne
inc
sbb
sbb
mov
rclb
xor
sub
fistpll
dec
movsl
lea
mov
push
das
cmpsl
jae
add
fsubrs
cmp
outsl
rclb
cmpsl
inc
inc
push
fldcw
insl
lods
lods
lcall
xor
adc
cmp
mov
jno
getsec
insl
push
pop
in
add
aaa
insl
jno
dec
iret
cmpsl
rcll
daa
aaa
mov
add
scas
xor
and
cmp
jno
push
inc
pushl
xor
xor
xor
xor
das
xor
jle
cmp
push
outsb
bound
outsb
gs
and
jo
and
adc
popa
cs
push
lock
out
sahf
call
mov
sahf
out
mov
out
sahf
out
jo
pusha
pop
sahf
out
sahf
push
dec
inc
xor
sbb
int
jns
add
pop
in
loopne
cmp
repz
mov
cmp
mov
pusha
dec
cmp
loopne
cmp
sbb
pop
push
pop
iret
repz
push
fmul
mov
repz
insb
pop
inc
xor
cmp
repz
add
pop
out
sahf
cmpsl
in
shlb
dec
sub
pop
sarb
repz
movsb
mov
ds
repz
add
pop
aam
jns
out
pushf
andb
out
sahf
sub
or
in
pop
fdivrl
repz
mov
mov
pop
mov
xor
or
mov
cs
or
sub
and
or
pop
xchg
nop
add
adc
xor
sub
scas
sub
xchg
xor
addl
jecxz
dec
lods
dec
adc
inc
lahf
out
sahf
xor
sbb
hlt
push
cmp
repz
les
test
mov
repz
push
sub
add
push
loopne
jns
out
mov
stc
jge
out
mov
add
add
push
add
add
pop
push
push
push
aaa
pop
jge
mov
and
pusha
and
mov
inc
adc
aam
ljmp
decl
mov
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insl
adc
mov
movsb
lcall
sbb
sub
scas
es
insb
sub
mov
mov
add
sbb
add
jg
and
or
addb
dec
ljmp
inc
inc
pop
fbstp
and
push
jp
testl
fbstp
lcall
xchg
aam
andl
imul
xchg
and
add
jns
inc
adcl
aas
out
fmuls
add
push
adc
xor
push
push
aas
daa
iret
shrl
add
add
ret
imul
shrb
sub
ret
rol
sub
push
cmpsb
push
mov
leave
push
or
shrb
outsl
mov
imul
ja
lock
push
inc
adc
mov
sbb
enter
aas
imul
cmpsl
imul
fisubs
xor
add
or
pop
pop
pop
shll
jb
addr16
aam
stos
arpl
jbe
out
mov
dec
imul
mov
pop
jo
mov
lret
jnp
sub
ja
lret
bound
pop
lds
xchg
daa
jae
pop
sbb
es
cmp
fcoml
sbb
aas
push
push
mov
pop
fs
nop
andb
inc
xchg
imul
loop
fisttpl
bound
movl
negb
mov
pop
outsb
xlat
mov
xchg
push
sbb
inc
popl
pop
cmp
inc
arpl
inc
fs
mull
adc
xchg
repz
mov
loope
arpl
data16
cs
push
and
dec
sub
dec
ja
and
inc
out
out
ds
add
cmpsl
jae
mov
fildll
push
fisttps
gs
daa
ljmp
mov
rorl
pop
mov
outsl
push
imul
sarl
push
push
bound
cmp
xchg
inc
fs
jae
push
aas
push
andb
ja
adc
mov
push
xor
inc
lret
cmc
jo
outsb
mov
sbb
fstl
imull
cmp
jno
outsl
xlat
mov
pop
cmpsb
jle
shlb
jbe
cmp
xlat
mov
and
je
aad
mov
fistpll
pop
mov
stos
bound
cmp
testl
cmp
sbb
test
in
outsb
xchg
and
xchg
bound
outsl
outsb
inc
sub
imul
inc
sbb
push
mov
lret
aaa
jo
insb
fs
jae
mov
mov
out
fildll
push
out
or
ds
xchg
mov
push
ja
xor
sbbl
inc
xor
inc
shlb
dec
jg
mov
arpl
xchg
pop
add
imul
sarb
stos
mov
outsl
aaa
mov
addb
imul
gs
rclb
add
arpl
add
xor
pop
mov
mov
push
imul
push
sub
pop
or
movsb
add
fcomip
dec
rclb
xor
pop
and
mov
dec
add
sub
inc
inc
fwait
push
fcmovnbe
aaa
sub
dec
mov
and
es
int
sbb
inc
xor
iret
sub
mov
inc
xchg
adc
cmp
movsb
test
cmpsb
sub
sub
inc
pop
mov
js
out
xor
iret
shlb
mov
imul
mov
sub
stos
pop
sub
sbb
xor
adc
ret
cmpsl
bound
adc
push
jmp
pusha
and
dec
outsl
mov
mov
xchg
push
jo
push
sub
push
add
xor
jb
outsb
stos
xor
xchg
arpl
gs
mov
addr16
xchg
pop
fs
lret
sbb
sbb
mov
pop
fwait
lods
inc
inc
jb
sub
push
add
sub
imul
rol
ret
mov
xor
cwtl
or
scas
mov
mov
aaa
outsb
mov
mov
stos
ljmp
mov
pop
dec
lock
push
aaa
outsl
stos
sub
adc
lret
mov
jae
pop
dec
stos
and
jl
adc
xor
inc
sub
pop
filds
outsl
cmpsl
inc
adc
mov
rcrb
xor
imul
addl
mov
add
insb
scas
add
sbb
dec
repz
imul
out
push
mov
pop
sbb
dec
jnp
xlat
jp
call
pop
inc
xor
daa
das
pop
sub
xchg
lahf
mov
add
mov
dec
mov
das
das
xchg
das
xchg
pop
cmp
xlat
mov
sub
xchg
subl
mov
push
push
mov
fisttpl
add
push
cmpb
xchg
xchg
fmuls
jmp
repz
push
lods
xchg
jae
imul
adc
sub
adc
pop
add
push
pop
add
dec
loopne
jnp
outsl
das
ds
ja
inc
sarl
out
dec
test
lods
shr
jecxz
push
jns
adc
xor
sub
lret
pop
jp
loopne
jg
jae
cmpsl
fisubrs
rcrb
xchg
dec
xor
xchg
push
sbbl
mov
arpl
popa
sub
sarl
xchg
pop
jne
mov
test
add
jmp
cmpsl
lods
cwtl
hlt
les
loopne
mov
or
mov
jmp
pusha
pop
pop
xor
add
pop
sub
sub
rol
mov
xchg
jnp
cs
mov
jle
rcr
jecxz
xchg
or
mov
cmp
lods
ja
mov
sbb
stos
push
mov
test
inc
arpl
out
ret
repz
pop
mov
nop
inc
aas
stos
cmp
out
jmp
pop
jmp
ja
add
push
roll
inc
sub
sub
test
inc
rcrb
sub
test
mov
mov
sub
mov
je
mov
mov
push
shll
cltd
and
mov
sub
pusha
fbstp
iret
sub
adc
mov
xorl
jo
aas
push
cmp
push
push
popa
aas
jae
lcall
add
adc
pusha
test
lret
cmpsl
rcrb
inc
arpl
fucomip
ret
arpl
adc
ja
mov
jecxz
aad
adc
fldt
dec
pop
sbb
aad
adc
pusha
inc
lea
mov
add
jle
dec
fbstp
imul
lods
adc
pop
push
ror
scas
push
lods
push
mov
sub
roll
cs
imulb
data16
cmp
loopne
popa
jae
scas
mov
lods
adcb
outsl
adc
mov
pop
push
pop
jae
add
mov
and
iret
mov
inc
push
pop
and
inc
add
cwtl
das
mov
or
push
add
jbe
test
mov
daa
mov
mov
push
mov
sbb
jb
ja
fwait
xchg
lods
inc
and
pusha
dec
pop
xlat
ljmp
jp
lods
outsl
pop
loop
ja
xchg
test
and
mov
and
push
outsl
arpl
inc
mov
add
adc
mov
call
sbb
decb
add
dec
gs
jo
add
xor
imul
jb
insl
addr16
push
movsl
dec
fs
les
xchg
cli
popa
imul
test
imul
pop
mov
mov
or
mov
pop
imul
adc
xchg
insl
cmpsb
sub
jle
inc
gs
imul
jb
outsl
mov
inc
jns
sub
arpl
popaw
ss
sub
push
cmp
jp
push
sahf
adc
bound
shll
push
jne
add
push
jmp
push
js
jne
jle
add
dec
add
inc
push
mov
fcoms
xchg
cltd
fsubr
push
ret
cmp
mov
outsl
into
cmp
mov
loope
sub
and
pop
adc
fwait
jnp
out
adc
imul
dec
imul
adc
push
jmp
push
clc
push
mov
aas
fadd
loope
clc
outsl
insb
push
xor
data16
pop
jo
outsl
jo
and
je
add
fidivl
dec
ret
loope
or
cmp
inc
xor
mov
je
bound
jae
and
fcmovu
xor
mov
xorb
das
and
jbe
pop
or
test
push
shlb
shl
push
and
mov
pusha
or
dec
pop
mov
sub
xorb
popa
sbb
lcall
pop
inc
loopne
inc
shlb
popa
insl
or
lock
in
add
hlt
addr16
dec
loopne
pop
lret
sbb
aam
inc
bound
cmp
inc
push
lahf
push
out
pop
imul
dec
lods
loopne
sub
push
dec
mov
xor
inc
mov
jo
pop
jns
mov
inc
mov
imul
arpl
push
sbb
jg
mov
shlb
push
and
push
sbb
cmp
pop
stc
push
fldt
aad
stos
cmp
add
pop
mov
adc
out
add
xchg
push
sub
sub
lods
mov
or
xor
stos
imul
cmp
push
insb
outsl
xchg
mov
and
xor
sub
das
das
mov
mov
jne
cli
inc
pop
mov
cmp
jns
cmp
push
jnp
jo
pop
popa
arpl
add
inc
jne
jecxz
mov
sar
dec
popa
bound
scas
sbb
fs
enter
jae
jbe
push
inc
pop
jo
arpl
push
fs
aas
or
xchg
sub
addb
iret
adc
mov
movsb
xchg
outsb
mov
cmp
fadds
and
inc
mov
sbb
mov
sbb
in
lret
jge
cmp
or
push
add
mov
fldl
pushl
mov
pop
aad
jb
add
push
sbb
sbb
scas
inc
test
sbb
movsl
add
cmp
mov
imul
push
outsl
xchg
cmpsl
add
lock
mov
or
mov
push
sub
loopne
push
sbb
adcb
pop
aad
push
stc
fstps
inc
jne
sti
pop
jne
loop
and
pop
mov
sub
lahf
inc
fs
inc
pusha
sub
inc
or
xlat
scas
mov
push
push
cs
sbb
mov
pusha
mov
fdivl
into
ja
ret
pop
test
sbb
and
imul
ss
in
sub
push
jnp
pop
sbb
cli
and
cmpsl
mov
cltd
push
decl
inc
shlb
gs
jae
push
and
inc
push
fs
out
decb
dec
inc
dec
adc
loopne
popa
test
fsubl
icebp
adc
stc
ss
sbb
lds
push
jg
push
jns
sub
orb
call
xor
cmc
xor
je
jecxz
and
lods
add
push
cmp
pop
outsb
pop
or
sbb
push
push
sbb
push
add
stos
add
xchg
ja
sub
pushf
mov
sub
add
pop
js
mov
dec
xchg
add
and
inc
popa
test
dec
add
cmp
nop/reserved
push
or
mov
inc
hlt
clc
add
adc
mov
sub
sbb
mov
dec
gs
sbb
mov
push
add
push
push
jno
jl
scas
pushf
adc
adc
imul
sub
mov
sub
sub
testb
push
outsl
imul
insl
or
xlat
movsb
loopne
fisubrs
test
rcrl
lahf
push
addb
fmuls
lret
or
mov
fsubrl
addr16
andb
icebp
jp
jmp
lea
mov
loopne
arpl
pop
mov
mov
or
dec
mov
mov
subl
data16
mov
iret
ficomps
xchg
sub
in
sbb
rcpps
loope
push
cmp
jns
adc
push
fwait
xchg
jae
mov
jae
dec
fstl
jne
test
imul
jb
mov
in
out
add
pop
push
jbe
pop
lahf
and
mov
insb
cmp
cmp
outsb
aas
sub
jo
xchg
add
or
jns
mov
mov
sub
cmp
mov
pop
mov
mov
repz
popa
into
sub
bsf
adc
in
arpl
push
and
enter
fstl
inc
sub
mov
or
cmp
out
xor
xchg
push
imul
mov
push
pop
fcoms
gs
dec
fsubrs
imul
mov
inc
add
and
pmaxsw
or
dec
arpl
out
lret
movsb
arpl
insb
fildl
dec
mov
inc
push
mov
sbb
iret
sahf
pop
fistl
jl
lret
popl
lret
es
inc
add
jo
pop
or
insb
jns
ja
idivl
loope
jnp
in
xor
imul
rorb
addr16
pop
clc
add
sub
imul
xor
sub
pusha
gs
ja
push
ret
jae
xchg
cs
inc
jb
push
in
mov
out
sbb
or
sub
test
lock
test
test
jl
adc
mov
mov
shrb
das
fisubrl
mov
push
ds
in
xchg
je
mov
adc
outsb
jne
imul
sub
pop
jb
sub
jecxz
mov
jns
push
jle
jno
outsl
popa
inc
fisttps
inc
inc
xchg
fsts
cmp
mov
and
add
push
xor
mov
xor
mov
sbb
lret
cltd
rcrb
dec
outsb
dec
cmpsl
push
push
jbe
xor
shrb
movsl
pop
inc
add
adc
loopne
and
stos
mov
jl
inc
test
js
outsl
or
push
dec
dec
cmp
sbb
push
insb
js
andb
imul
stos
dec
iret
push
adc
daa
cwtl
cmp
pushl
or
imul
mov
sub
dec
shll
mov
xor
adc
mov
out
or
jae
adcl
in
xor
jae
dec
fs
mov
pop
cmp
or
sub
sub
loop
mov
fs
sbb
jmp
sbb
dec
inc
xchg
insb
jns
jo
hlt
jp
outsb
daa
cmp
fidivs
popa
mov
jle
mov
andl
sub
fidivs
jns
dec
popa
pop
sbb
add
push
hlt
inc
addr16
dec
outsl
stos
data16
and
je
push
lea
cmpsl
mov
hlt
pop
mov
mov
sbb
fcmovu
dec
mov
out
int3
sub
inc
fiadds
adc
hlt
shl
pop
bound
push
outsl
mov
sbb
jmp
bound
jo
sbb
arpl
jmp
arpl
dec
out
push
sub
in
jo
inc
daa
andl
bound
in
sub
dec
sbb
jo
sbb
mov
push
push
sub
insb
jo
push
mov
stos
push
push
int3
jl
rcrl
lret
subb
push
mov
fsubrl
jo
push
je
mov
inc
fs
les
shr
pushf
lahf
aaa
enter
or
addr16
sub
add
dec
stos
adc
sub
adc
dec
sbb
test
aaa
push
je
dec
stos
imul
loop
mov
jns
out
in
mov
fadds
dec
adc
mov
dec
mov
dec
sub
mov
mov
pop
fs
inc
or
push
cmp
xor
lds
in
loope
and
or
insb
addr16
push
je
jge
xchg
push
sub
jp
imul
mov
rorb
cmp
mov
xor
cmp
pushf
mov
add
mov
adc
inc
xchg
adc
lods
rcl
aaa
push
adc
pop
testb
fstpl
sbb
fildl
cmp
dec
scas
or
sub
out
add
enter
inc
test
lret
mov
and
mov
jbe
dec
imul
sbb
aas
xor
pusha
rcll
lea
add
push
ficoms
pop
arpl
int3
test
rcrl
cmp
xchg
fwait
xlat
push
mov
lret
jge
add
sbb
or
mov
or
sbb
inc
outsl
js
and
dec
sub
push
push
popl
mov
push
push
lods
popa
sbb
xchg
and
cmpsb
orl
adc
jnp
mov
insl
enter
rcll
mov
gs
mov
icebp
adc
sub
cli
mov
and
jae
aad
pop
mov
fstps
pusha
adc
inc
out
into
add
pop
xor
sbb
mov
inc
subb
jno
inc
or
dec
xchg
add
stc
fwait
movb
xor
adc
inc
xchg
add
jb
dec
test
or
mov
xchg
fistpll
mov
inc
mov
or
sbb
nop
imul
or
shll
jg
sub
jnp,pn
xor
jg
or
je
jno
mov
add
fmuls
dec
add
xlat
xchg
mov
xor
xchg
addb
add
dec
inc
xchg
jo
int3
xor
dec
loopne
lods
mov
and
inc
mov
inc
jae
or
scas
mov
iret
outsl
cmpsl
pop
je
mov
adc
loope
adc
xchg
dec
cld
ss
fdiv
jmp
sbb
push
lea
fsubs
inc
push
pop
sub
fisubs
mov
adc
pop
test
flds
rcl
daa
lea
repz
push
sahf
mov
dec
inc
imul
outsb
jb
push
fdivl
sub
int
adcb
aas
jne
or
add
and
sbb
lds
jo
cmpsl
push
mov
out
add
xchg
cmpsl
mov
jo
or
push
gs
in
add
and
fiadds
push
mov
mov
mov
mov
sbb
nop
dec
sub
leave
dec
jnp
sbb
pop
jo
popa
cmpsb
push
scas
in
push
dec
repz
imul
push
ljmp
sbb
or
outsl
in
push
shll
lret
repz
rcrl
add
push
in
sbb
mov
xorb
sub
aaa
pusha
add
test
sub
push
arpl
std
xor
repz
xchg
xchg
call
jne
rcll
adc
adc
jae
add
adc
mov
pop
or
xor
cmp
ss
lods
scas
add
pop
pop
hlt
dec
jl
das
mov
add
add
add
faddl
sbb
gs
and
sbb
jbe
pop
adc
shufps
lods
mov
cmp
cmp
or
prefetch
sbb
sahf
push
lds
pop
shr
popf
imul
cmp
or
and
outsl
mov
pusha
jb,pn
outsb
negb
cmpsb
rcr
loopne
mov
cmpsl
xor
dec
add
cltd
or
sub
xchg
in
rcrb
push
and
out
out
push
or
add
cltd
scas
or
dec
incl
add
add
dec
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
