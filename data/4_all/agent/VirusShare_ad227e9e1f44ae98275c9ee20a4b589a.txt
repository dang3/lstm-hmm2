add
add
lcall
mov
aam
jns
enter
insl
in
mov
enter
xchg
push
inc
repnz
incb
ds
fnstsw
lret
daa
das
sti
mov
std
or
cmpb
lcall
mov
xor
mov
mov
sub
daa
or
insl
cmp
cs
aam
push
lret
clc
inc
dec
mov
in
xlat
pushf
mov
jno
xchg
and
subl
cld
add
test
mov
pop
and
inc
mov
cmc
pop
jns
add
cmp
pop
fucom
adc
gs
jp
cmp
je
stos
mov
dec
mov
shrl
cmpsl
inc
sbb
mov
add
xchg
push
mov
lcall
push
jne
in
cmc
cmc
in
inc
loope
mov
fnstsw
xor
std
out
push
sbb
pop
addr16
adc
leave
stos
cmp
mov
and
ret
and
lahf
lods
sbb
es
mov
inc
mov
mov
insl
jne
scas
or
mov
mov
push
popa
fldl
mov
add
insl
loope
cmp
jecxz
incl
jl
jmp
mov
daa
mov
mov
and
add
fadd
dec
std
sbb
mov
dec
popl
inc
pushf
push
and
inc
pop
sbb
mov
fisttpll
lods
adc
enter
adc
fwait
int
sbb
inc
in
add
int
mov
adc
stos
fistps
outsl
jecxz
inc
call
pop
in
push
and
inc
test
or
mov
ror
scas
or
mov
xor
mov
imul
mov
mul
jmp
rcll
inc
pop
xor
pop
push
loopne
mov
inc
mov
mov
mov
push
jg
sub
cmp
jns
mov
mov
test
call
inc
dec
xorb
xor
test
test
arpl
mov
xor
ljmp
add
dec
and
mov
mov
jp
pop
stc
adc
mov
idivb
jecxz
lods
repz
fsubs
inc
mov
test
dec
std
loop
sahf
dec
lahf
cmc
test
adc
xor
push
adc
lods
cmp
xchg
jl
push
push
inc
dec
sti
inc
lods
fstps
push
sbb
pop
inc
insb
xchg
add
mov
sahf
cltd
cmp
sbb
repz
jmp
js
mov
jmp
enter
mov
pop
das
inc
jg
lods
sub
xchg
dec
or
stc
mov
inc
and
pop
out
fidivrs
bound
popw
sbb
mov
pop
inc
test
push
or
std
mov
mov
rorb
push
nop
xorb
rol
fisttps
inc
xchg
mov
inc
jne
out
fwait
test
mov
xchg
repnz
adc
fistpl
imul
std
jge
in
sbb
sbb
jle
cwtl
sub
sbbl
mov
push
and
out
into
je
pop
adc
out
xchg
pushl
into
mov
cmp
ds
push
flds
dec
dec
add
je
icebp
test
dec
inc
stc
arpl
loope
add
mov
jns
in
mov
outsb
mov
ret
pop
jle
add
out
pusha
sbb
fs
movb
sbb
jo
shrb
scas
xchg
mov
testl
jae
movsb
cld
dec
sarb
pop
ret
mov
adc
xchg
inc
fwait
jb
sub
iret
push
mov
jg
fstp
cmp
push
cltd
lcall
adc
push
push
adc
jne
pop
mov
scas
jae
xorl
lea
out
movsl
jo
jge
test
pop
mov
std
fiaddl
ljmp
adc
pop
sbb
pop
or
or
lret
add
mov
cmp
jecxz
push
or
lea
mov
pop
cmp
sub
mov
jg
fwait
in
test
sbb
or
dec
mov
nop
shrl
adc
jl
sub
jg
sbb
scas
mov
pusha
sub
jg
dec
or
in
xchg
daa
fists
push
xor
cmp
clc
and
rcrb
addb
in
movsb
inc
cmp
push
dec
mov
testb
hlt
push
mov
push
lock
stos
inc
cmp
aaa
lret
insb
push
xor
or
imul
jnp
sub
add
mov
mov
mov
dec
stos
push
or
out
lret
mov
neg
subl
push
and
dec
in
mov
inc
int3
nop
test
push
repnz
mov
cmpsl
jge
dec
adc
xor
jo
jo
mov
movsl
daa
repnz
dec
mov
xor
nop
xchg
xchg
fimuls
rol
xor
sar
sub
pop
sti
xchg
xchg
cmp
loop
xchg
mov
mov
das
repz
and
mov
adc
pop
and
mov
enter
incl
orb
mov
mov
sbbb
adc
jmp
dec
jb
scas
push
sti
pop
loop
and
jmp
jle
push
mov
jg
adc
add
repz
add
cltd
xchg
pop
loop
add
mov
add
mov
imul
push
mul
iret
cmc
out
testl
mov
pusha
jecxz
jp
rcr
or
jb
icebp
fwait
and
mov
stc
divb
cmc
cmp
outsb
sub
ss
nop
test
xor
sub
add
sub
pop
leave
shll
subb
fs
cmp
xor
pop
cmp
imul
pop
roll
inc
xchg
xor
shlb
std
and
adc
adc
xchg
ja
jmp
mov
mov
lods
jns
shlb
pop
das
inc
cmp
lret
nop
mov
push
aas
lods
sbb
mov
fbstp
mov
xor
ja
mov
hlt
jb
pop
jmp
pop
jno
push
inc
cmpsb
lret
syscall
mov
mov
adc
jmp
xor
ja
sbb
cmpsb
repz
aas
movsb
in
outsl
cli
push
cld
cs
test
sub
sbb
repz
xchg
sbbl
add
stos
or
dec
mov
out
push
subl
or
jp
lds
mov
dec
lds
dec
dec
neg
rorb
mov
test
stos
hlt
test
cmp
outsb
jmp
lahf
popf
pop
test
int3
adcl
and
aaa
cmp
lds
addr16
push
and
cmp
test
ss
pop
enter
aad
xchg
ja
jae
aaa
push
adc
pusha
test
sub
lock
push
in
cmp
or
dec
movsl
mov
int3
hlt
popf
xor
int
mov
clc
leave
adc
pop
movsb
xchg
js
adc
add
lcall
mov
imul
cld
inc
and
aam
push
sbb
stos
xchg
fisubrl
or
pop
lods
jo
sti
dec
mov
aas
push
sbb
ret
stc
xchg
sbb
fdivl
aam
sub
roll
mov
fistl
xchg
xor
push
cmc
rclb
mov
hlt
push
mov
mov
and
into
lret
mov
sahf
shufps
sbb
out
lahf
pusha
jge
dec
mov
jge
mov
cmp
sbb
sub
lock
leave
icebp
in
in
add
pop
mov
out
lods
xchg
pop
jne
jo
fsubrl
sar
in
pop
jo
and
jbe
lret
xchg
mov
arpl
cltd
mov
add
add
repnz
rcr
and
add
mov
push
stc
push
pop
jl
jae
shll
loop
and
mov
xchg
shll
pop
outsb
pop
cwtl
loop
mov
push
mov
jo
jbe
and
jmp
push
jp
rcl
imul
int
xor
cmp
push
mov
xchg
inc
mov
pushf
sar
iret
mov
or
popa
xchg
pop
outsl
jo
xchg
xchg
jbe
aas
jg
dec
stos
out
adc
outsl
notrack
add
xchg
insb
xor
push
cmp
mov
jo
mov
loopne
loop
repz
xchg
divb
lock
or
cmpsb
or
jp
leave
dec
cld
push
xchg
mov
mov
cmc
jns
in
popa
lds
das
push
and
and
or
in
inc
dec
fsubrl
sbbl
icebp
or
fbstp
mov
aas
push
mov
inc
les
cmpsb
fisubl
pop
es
bound
adc
xor
push
insb
iret
outsb
and
out
fwait
insl
dec
or
jecxz
mov
into
add
xorb
pop
xchg
sbb
sub
push
cmpsb
dec
stc
outsb
pusha
sbbb
out
or
sub
js
mov
push
inc
xchg
sbb
out
mov
sbb
add
sbb
pop
decl
iret
lock
les
ret
push
sbb
bound
fidivrs
pop
pop
and
sub
jbe
lahf
adc
lsl
jp
sbb
add
push
scas
add
sti
ds
sbb
int
jo
ret
sti
arpl
sbb
daa
cmp
out
sub
ljmp
xor
add
pushf
push
mov
outsl
pop
xorb
add
xchg
test
push
sbbb
ljmp
mov
jle
int
mov
fsubl
leave
inc
mov
sbb
adc
mov
loope
dec
test
stc
mov
jns
popf
xchg
gs
test
aam
dec
jecxz
mov
lock
jecxz
push
inc
jne
mov
mov
sub
es
sub
jno
cmp
pusha
xor
mov
sub
xchg
add
sub
lcall
adc
pop
rcr
test
mov
jge
and
sub
in
xchg
dec
and
or
outsb
pop
insb
shlb
fidivrl
push
jo
sub
stos
ds
mov
dec
jp
jmp
xor
sub
sbb
push
xchg
test
pop
test
jbe
push
leave
aas
jae
pop
inc
scas
fldenv
push
mov
cli
adc
and
ja
cwtl
mov
nop
xor
dec
mov
pusha
std
fdivs
mov
fs
fisttpll
arpl
or
cmp
gs
inc
insb
imul
xlat
cmpsb
pop
xchg
movsb
mov
dec
js
cmp
scas
lods
and
ss
jle
stos
push
jnp
test
xorl
ret
xchg
jne
int
jg
out
lcall
into
sub
jmp
mov
mov
loope
loop
mov
mov
leave
pop
jmp
stos
popf
push
andb
paddw
fdivrs
aas
xchg
clc
cmp
je
xchg
sbb
outsl
push
or
push
lods
inc
fists
add
lods
iret
int
inc
cltd
adc
outsl
jne
int3
mov
push
negb
push
jns
dec
dec
mov
push
inc
xchg
stc
std
arpl
test
arpl
insb
pop
pop
rcll
cmc
loop
jp
cmp
inc
push
xor
pop
push
andb
insb
or
loopne
js
pop
cmpsb
pop
ret
in
jb
inc
cltd
xor
es
pop
inc
or
xor
pop
icebp
loopne
push
pop
into
addr16
adc
mov
and
pop
ljmp
xor
enter
icebp
cld
and
call
fsubrl
shr
data16
dec
mov
mov
shlb
jecxz
xchg
xor
lds
icebp
dec
pop
outsb
jp
mov
data16
fmull
sbb
jo
xchg
mov
lahf
jmp
pop
cs
cmpsl
clc
cltd
icebp
pusha
dec
mov
and
loopne
sub
push
push
mov
dec
xchg
push
notb
mov
push
sub
lret
lcall
or
sbb
rclb
repnz
xchg
icebp
cld
pop
cmc
xor
aaa
dec
push
cwtl
outsl
mov
addr16
adcl
shlb
pop
mov
sub
and
in
xchg
cmp
cld
movsb
or
and
test
imull
mov
ljmp
push
loope
pop
gs
inc
add
imul
ret
mov
ret
andl
nop
loope
add
pop
cmpsl
rorl
dec
sbb
scas
push
or
dec
insl
add
jge
sub
test
push
shrl
push
testl
mov
jne
pmaxub
loop
pop
and
and
jno
jne
lods
pusha
mov
outsb
pop
cld
xor
mov
aas
es
xor
lea
mov
xchg
mov
inc
jl
xor
stos
mov
push
repz
xchg
or
mov
sub
loop
jl
inc
pop
mov
int3
cmp
xchg
dec
push
sub
cmp
sahf
pusha
push
or
mov
mov
cmc
ss
jo
sbb
test
inc
fildll
mov
push
fdivr
les
dec
xchg
in
mov
xchg
and
dec
and
dec
adc
push
out
mov
popa
fcompl
push
in
or
xor
xchg
push
adc
push
mov
mov
xchg
mov
insl
sub
daa
aam
dec
lret
mov
sub
adc
mov
sub
sub
add
lods
loopne
divl
push
pop
jnp
sbb
jp
outsl
dec
cmp
daa
add
imul
mov
out
mov
dec
stc
mov
imul
pop
dec
xor
inc
jecxz
inc
bound
mov
and
cmp
xchg
or
push
push
fwait
sahf
and
mov
pop
popf
inc
pop
mov
jecxz
pop
cmpsl
sbb
inc
aam
popa
lret
xor
mov
fadd
pop
xchg
sbb
fld
cmpsl
or
divb
out
xor
cmp
mov
xchg
call
sub
push
insl
lret
lret
jg
dec
notl
leave
or
shll
andb
fisttpl
ds
jecxz
pop
adc
je
jae
add
adc
mov
addr16
mov
dec
sbb
mov
pop
insl
mov
outsl
sar
ljmp
rorb
sbb
and
xchg
fidivl
repz
or
adc
mov
xchg
stos
call
mov
xlat
cli
mov
insb
adc
fs
imul
dec
cs
xor
mov
inc
push
dec
inc
aam
and
fists
and
jge
andl
or
sub
cmp
nop
dec
xchg
jae
mov
fwait
loop
cltd
mov
paddw
cmc
scas
mov
test
or
add
orl
and
xchg
shld
ficoms
adc
jbe
or
ror
or
xor
or
fsubrl
jo
lds
sar
ficoml
inc
aaa
mov
push
mov
mov
arpl
mov
jmp
inc
in
cmp
out
jge
jg
pop
add
mov
cli
adc
xor
sbb
movb
sbb
cmpsl
inc
fdivp
jp
js
ret
mov
mov
movb
stos
jecxz
pushf
xchg
sub
add
adc
mov
cmp
dec
and
les
cmp
jg
mov
fstpt
mov
es
cmp
jge
cmc
lods
fdivr
and
ss
and
xor
xor
push
jle
mov
inc
and
jmp
pop
out
sahf
pop
push
lahf
push
ja
push
or
pop
and
mov
mov
outsl
shrl
xchg
dec
cltd
cmc
stc
mov
sub
aad
clc
dec
repnz
jmp
mov
out
or
insl
and
rcr
pop
mov
cld
inc
dec
and
outsl
loopne
xor
adc
mov
add
repnz
in
sbb
leave
aam
mull
push
mov
movups
xchg
adc
cmp
or
mov
push
outsb
jae
fistl
imul
cmc
mov
xchg
xchg
and
sbb
lods
lock
out
ficoms
jmp
cmpsl
mov
mov
int
mov
mov
iret
add
test
andl
scas
sub
jno
jle
mov
repz
cld
fucompp
test
sub
int3
mov
bound
and
subb
jge
mov
cwtl
fsubrs
push
add
ret
xchg
ficoml
aas
mov
fwait
pop
pushf
in
test
cmp
lret
jbe
imul
cmpb
scas
pop
dec
dec
inc
jns
jbe
adc
arpl
dec
xchg
xor
enter
cmp
sub
pop
ret
mov
in
iret
in
push
loop
sarb
gs
outsb
dec
mov
ss
leave
mov
mov
call
imul
js
sbb
adc
adc
cmp
es
loope
scas
stos
and
push
pop
inc
scas
or
adc
jmp
xchg
xchg
sbb
movsl
adc
push
mov
bound
loope
add
inc
and
shl
out
sahf
iret
test
je
sbb
inc
es
das
inc
imul
cmp
in
xor
ret
add
roll
ret
jae
shrl
scas
add
insl
mov
pop
test
jne
add
adc
ljmp
iret
sbb
push
pop
pusha
xlat
mov
cltd
ret
dec
cli
inc
movsl
sub
and
popl
movsb
add
or
push
mov
adcl
mov
fs
stc
cmp
mov
mov
jno
mov
mov
subl
lea
rolb
leave
mov
push
sbb
rorl
sti
xlat
mov
xlat
loopne
mov
lds
inc
nop
out
push
mov
add
inc
xchg
lds
mov
push
testl
loope
lahf
sbb
scas
dec
shl
clc
jns
dec
or
push
rcrb
fnstcw
mov
add
adc
push
and
mov
sub
insb
ljmp
mov
mov
mov
ss
ss
sub
int
shl
loopne
and
in
mov
ja
lds
stc
pop
aad
lret
inc
xchg
xchg
loope
xlat
out
loope
mov
mov
cmpb
push
sar
gs
cmc
inc
push
adc
adc
or
sub
arpl
mov
lret
inc
in
or
pop
xchg
pop
or
pushf
out
push
iret
xchg
shll
out
stc
inc
cmp
jno
sahf
scas
shrb
jnp
sbb
int
adc
push
cld
mov
jl
xchg
jns
mov
inc
mov
inc
xor
pop
repnz
cmc
or
pushf
in
cmpsb
dec
pop
ss
addr16
xchg
ret
int3
loop
test
pop
jae
sbb
lret
mov
inc
add
mov
cmc
pop
jg
xchg
mov
shl
testl
int
mov
lea
lahf
dec
jo
fisttpll
add
test
dec
imul
pop
mov
push
cmpsl
cld
test
sub
fsubrs
push
cld
sbb
sbb
and
cmp
adc
cmc
add
cmp
add
sbb
xchg
cli
or
bound
out
scas
leave
adc
fucomp
daa
movsb
push
pusha
cmc
push
cwtl
inc
cmp
lret
shrl
and
and
inc
insl
push
cmp
cs
xchg
push
jle
clc
je
and
dec
xchg
pushf
jecxz
cmp
jge
jl
hlt
ret
add
cli
shrb
and
aam
push
or
push
mov
sbb
lahf
out
push
dec
adc
stc
lods
clc
jo
sbb
sbb
lods
push
rclb
fiadds
rorb
leave
sbb
test
cmp
sub
es
les
ljmp
xor
in
mov
fcomip
scas
xchg
add
fdivs
cltd
andl
gs
jg
inc
call
les
stos
mov
aas
jns
and
fwait
pop
xchg
jnp
and
scas
outsb
pusha
ds
movsb
sub
add
ret
ficoms
shr
imul
xlat
lods
in
jl
adc
lea
les
into
test
dec
fistpl
or
add
cwtl
fildll
jbe
jno
xchg
xchg
mov
je
rcrb
imul
mov
and
jo
dec
repz
xor
sbb
dec
rcrb
jbe
addl
rol
mov
sbb
or
adc
xchg
test
addr16
nop
pop
fmull
push
loope
push
outsb
pop
sbb
push
jle
out
mov
push
adc
mov
gs
jp
jbe
mov
cmp
fsubrp
push
adc
inc
jne
jecxz
scas
inc
pop
ret
push
mov
adcb
loope
jns
xlat
jo,pn
inc
pusha
pop
sbb
jns
les
flds
inc
popa
sbb
push
in
out
xchg
mov
mov
outsl
imul
les
push
les
xor
pop
add
clc
jns
cmpsb
pop
repz
aas
push
mov
dec
in
mov
cmc
pop
jp
or
mov
mov
sti
mov
cmc
in
sbb
or
scas
out
lods
mov
dec
add
outsl
xchg
and
add
adc
cmpsl
xchg
sbb
ffreep
test
jne
pop
inc
in
stc
pop
jmp
loope
xchg
loopne
mov
add
popa
sub
inc
cli
jmp
xlat
xchg
test
movsl
divb
push
dec
mov
pushl
aaa
popa
push
data16
scas
lahf
push
mov
lock
push
and
mov
pop
fwait
adc
jnp
arpl
xchg
pushf
and
cmpsb
dec
ljmp
and
jg
add
xchg
pop
nop
dec
push
mov
ljmp
xchg
dec
enter
xorb
pop
and
jne
pushf
adc
pop
push
pop
xchg
lock
pop
mov
andl
aam
pop
test
les
add
mov
fs
push
pop
data16
lret
mov
enter
es
sub
cmp
cmpsb
cltd
jns
push
or
xchg
push
mov
int
insb
idivb
pushl
xor
fimull
nop
je
cld
stos
dec
divl
hlt
and
int3
dec
xchg
dec
dec
loopne
roll
mov
movsl
mov
adc
cmc
imul
repz
bound
xchg
fs
addr16
mov
push
pop
jle
and
jb
out
add
or
jae
pop
int3
inc
inc
in
in
sbb
xor
mov
sbb
and
lods
fcmovnbe
fucom
cmp
js
scas
pop
insl
add
into
rcrl
mov
push
push
je
xor
inc
addr16
test
mov
sti
jecxz
jl
pop
lock
mov
and
sbbb
mov
jge
scas
lahf
stc
int
arpl
pop
cld
cmp
jno
or
mov
ja
push
pop
dec
in
pop
xor
push
dec
into
and
mov
out
mov
mov
mov
lret
cwtl
sbb
shlb
inc
lods
daa
and
pushf
cmpxchg
and
mov
mov
fmull
jge
call
imul
cli
mov
push
ficoms
push
ds
arpl
call
push
push
pop
js
aad
jne
repz
jp
orb
out
jg
fnsave
mov
xor
rorb
ds
push
ret
cltd
aas
sti
mov
ljmp
jecxz
mov
pop
fildll
push
add
mov
ljmp
shlb
mov
shll
rol
call
cmp
pop
pusha
cmp
mov
dec
pcmpeqd
adc
cmp
orl
mov
sbb
inc
dec
or
inc
xor
xchg
pop
jnp
loopne
add
mov
dec
jecxz
jl
add
jns
pop
xchg
sbb
bound
add
cmp
and
out
jge
add
outsb
mov
in
cmp
cmc
mov
shl
inc
mov
popa
mov
fiadds
fistps
jnp
cs
es
and
inc
mov
fimuls
shr
leave
mov
outsb
cmp
dec
pop
or
sub
mov
add
mov
ja
mov
cmc
push
pop
push
test
cli
fisubl
xor
add
mov
and
mov
mov
push
cltd
push
nop
movsb
and
add
mov
cmp
pop
std
mov
mov
popa
inc
add
lods
mov
add
js
cmpsl
leave
mov
mov
xor
xor
dec
mov
jecxz
xlat
test
pop
inc
stos
sbb
pushf
shrl
mov
outsb
int
jge
push
les
jae
out
push
js
mov
mov
mov
test
cld
pop
jle
add
mov
xchg
mov
aam
scas
jg
push
hlt
jns
push
mov
idivl
push
adc
mov
mov
enter
dec
xchg
sbb
into
dec
inc
xchg
lock
setle
test
xchg
sbb
enter
inc
inc
add
cmpsl
lock
rol
pop
inc
negb
inc
sub
aaa
or
gs
sbb
into
flds
cmpsl
fistl
rorl
jne
repz
adc
loopne
dec
insl
jno
or
icebp
and
jae
or
cld
inc
shll
inc
mov
pop
inc
lahf
mov
adc
cmc
mov
int
ret
inc
push
sbb
add
pop
imull
mov
xchg
cltd
fmull
jmp
test
mov
inc
push
fsubr
mov
or
jo
frstor
iret
inc
inc
pop
movsl
pop
stos
pop
pop
jmp
iret
call
jne
cltd
push
jbe
ret
dec
into
push
add
lcall
ret
jl
dec
xor
fistl
mov
cmp
mov
popf
jo
jns
push
outsb
inc
jecxz
mov
cld
andl
mov
mov
jno
dec
ret
jo
inc
mov
fdivl
sbb
sbb
mov
pop
lods
cmpsb
xlat
xchg
dec
adc
adc
ss
outsl
int3
mov
push
jb
stos
xchg
mov
loope
stos
mov
xchg
ds
aas
mov
repnz
push
mov
inc
pop
cmc
imul
or
push
or
push
cmp
jl
lret
mov
imul
mov
ret
push
or
popf
mov
inc
test
lods
ret
mov
mov
mov
lss
inc
leave
cmpl
mov
xchg
jecxz
or
adc
les
nop
xor
shrl
add
pop
mov
jno
adc
pop
push
bound
rcll
stc
pop
pusha
andl
out
or
ds
lds
inc
aad
ret
adc
dec
incb
mov
test
xchg
cli
ds
shll
mov
notb
inc
popl
mov
sbb
icebp
adc
orl
repnz
inc
addr16
inc
andl
add
fs
fwait
popa
xor
lock
add
mov
push
in
push
gs
lock
push
dec
out
dec
in
inc
dec
mov
xchg
iret
pop
mov
jbe
cld
add
lret
xchg
push
jge
stos
or
push
dec
in
mov
push
fsubrp
cmp
pop
cmp
sub
jge
sub
mov
fisubl
xor
jnp
xchg
js
lret
xchg
or
ljmp
pop
mov
mov
and
xchg
dec
pop
jmp
or
jmp
jne
mov
shrb
inc
mov
out
out
out
out
in
add
add
ret
sbb
stc
jg
leave
sahf
fdivl
mov
popa
in
lock
and
movsb
aam
fists
es
sbb
iret
adc
or
adc
arpl
pop
rep
adc
mull
inc
sub
cmp
xchg
xor
jns
ss
loopne
in
lahf
andb
sub
out
shr
xrelease
rcll
pusha
repnz
test
imul
shl
push
dec
sub
out
xchg
fs
scas
cld
nop
push
call
mov
sbb
adc
mov
and
popa
jecxz
leave
push
repz
lods
mov
mov
mov
test
int
imul
gs
ja
testb
lret
cld
add
dec
push
adc
inc
push
add
push
ficoml
jnp
jb
pop
iret
jo
mov
addr16
loopne
push
imul
fninit
cmp
dec
dec
out
dec
movsl
adc
mov
in
ret
icebp
lods
shrl
jne
dec
fs
out
out
aaa
cmp
cmc
inc
inc
xchg
adc
movsl
ljmp
mov
pop
psubd
in
pop
and
adc
pop
dec
in
push
int
icebp
pop
loope
dec
jne
in
pop
cmp
xor
subb
test
arpl
mov
dec
sbb
cmp
xchg
bound
pop
push
and
mov
ret
clc
xchg
jle
test
std
xchg
push
rcll
jecxz
ja
add
push
xlat
icebp
mov
mov
out
jle
inc
push
adc
dec
adc
movsb
xchg
dec
fcoms
jmp
call
repz
daa
cld
mov
mov
or
mov
add
mulb
scas
incb
fldenv
lcall
orb
loopne
xchg
xor
int3
daa
aaa
mov
aam
inc
out
pop
xchg
sbb
fdivs
vpsubq
outsb
dec
outsb
int3
lret
push
jno
mov
cmp
cmp
jmp
xchg
and
push
jle
and
add
jne
jge
leave
popa
or
test
sub
mov
pop
jg
pusha
xor
inc
inc
dec
xor
mov
cwtl
jns
jne
clc
arpl
xchg
push
push
xchg
imul
fildll
repnz
mov
lods
aad
jp
aad
inc
cmp
daa
push
es
mov
repz
lcall
adc
jg
push
stos
jecxz
jle
cmpsl
mov
mov
cmpsb
adc
push
rcr
push
mov
cmpsl
mov
push
js
neg
loopne
int3
dec
or
loope
mov
scas
xchg
mov
push
or
call
repz
cmp
rcrl
or
dec
inc
out
adc
dec
jge
jne
adc
pop
ja
dec
lcall
and
lret
test
popf
movb
add
mov
je
inc
insl
outsl
inc
mov
scas
push
lods
pop
setns
add
or
faddl
push
or
and
test
subl
xchg
gs
push
cli
jnp
fildll
test
adc
xor
push
fwait
xchg
jno
scas
push
lret
xor
inc
jae
fstpl
std
das
rolb
and
lock
jb
les
sub
out
inc
and
cmp
push
fdivs
notb
cmpsl
daa
cmp
mov
movsl
push
jmp
xchg
cmc
sbb
es
push
mov
psrld
push
lcall
cmp
pop
sbb
mov
mov
in
outsl
mov
sbb
scas
xor
pusha
add
sbb
fisubs
pop
adc
cmp
daa
or
mov
inc
sbb
inc
int3
pop
shrb
in
pusha
in
testl
add
pusha
rorl
lret
mov
push
je
jle
movsb
dec
sub
loop
lcall
and
inc
inc
ljmp
mov
push
or
cli
flds
bound
out
jp
leave
xor
pop
xchg
shlb
subl
inc
and
cmp
lret
pushf
leave
jnp
mov
and
lea
negb
mov
sub
testl
adc
cltd
xor
int
in
sbb
leave
movl
dec
sarl
out
add
dec
idivl
lahf
mov
mov
inc
push
adc
bound
popf
ret
dec
push
fwait
data16
cmc
ret
pushf
push
push
xor
cld
dec
jp
addr16
jg
pop
fsubrl
pop
jbe
fwait
cwtl
cmp
insb
out
call
sysret
xlat
sbb
mov
mov
mov
fildl
out
mov
iret
stos
xchg
pop
call
mov
pop
dec
mov
sub
mov
fisubrs
sti
rolb
fisttps
pop
js
push
jge
cmp
add
adc
jmp
fbstp
pushf
xchg
stos
pop
daa
popf
cwtl
and
sub
sub
iret
call
pop
stos
sti
jne
fbstp
imul
out
add
in
int
dec
sub
jl
fcmovbe
fwait
pop
out
fnop
sub
outsb
into
mov
add
lock
inc
les
testl
mov
leave
int
push
xchg
loope
mov
repnz
mov
push
xor
rol
push
lods
icebp
daa
sbb
shll
sahf
je
xchg
pop
xor
jl
jle
mov
insl
and
mov
call
ja
in
xor
cmp
mov
mov
xchg
or
aam
pop
lea
mov
mov
pushf
jp
mov
dec
pop
xor
out
jmp
pop
fcmovnb
ret
add
out
nop
inc
dec
fistl
inc
dec
lods
mov
insl
push
pop
xchg
in
add
aaa
dec
xor
leave
test
push
jl
cmp
stos
mov
and
ja
cmp
inc
inc
data16
xor
push
pop
fwait
lcall
lock
xchg
sub
into
fnstcw
test
mov
sub
push
cmpb
scas
push
lcall
xchg
sbb
sub
xor
loop
mov
cmp
adc
push
imul
cs
leave
aaa
jmp
mov
cmp
jmp
test
cmp
mov
dec
push
xchg
gs
pusha
in
mov
jg
arpl
xchg
and
mov
or
jno
sar
cmpsl
data16
test
sbb
test
roll
cmpsb
push
in
mov
push
call
pop
lods
pop
cmp
inc
mov
sub
mov
dec
or
ret
jbe
mov
sub
rclb
cmp
and
pop
outsb
adc
mov
xor
add
daa
sub
adc
xor
nop
sbbl
je
mov
std
shl
hlt
push
ja
inc
repnz
dec
cmc
andb
adc
jne
movsl
mov
push
xchg
cmpsb
add
add
pop
popa
loopne
cmpsl
dec
sbb
lods
repz
and
shrl
jo
sbb
cmpsb
sub
stos
ss
ret
sti
push
fnstsw
xor
fs
jno
pop
dec
dec
icebp
cmp
mov
inc
int3
inc
cmp
repnz
push
or
test
aam
les
or
lret
ret
aas
jns
lea
ficomps
xchg
adc
pop
out
mov
xor
cmp
dec
es
imul
adc
scas
or
mov
sbb
gs
jnp
sub
xchg
pop
lret
cmc
inc
gs
jg
mov
ja
test
pop
loop
or
shrb
int
clc
adc
popl
inc
rorl
sbb
add
lahf
fmulp
ja
in
stc
adc
outsl
dec
pop
cmpsl
jb
rcr
inc
cmp
test
insl
push
push
cltd
sbbb
scas
sbb
outsl
stc
pop
outsl
cmc
mov
int
js
mov
inc
in
fsubrs
sbb
ja
aad
adc
add
or
pop
cmp
movsl
fsubl
mov
in
scas
scas
mov
outsl
mov
idivl
sti
xchg
daa
mov
sub
pop
add
std
lahf
movsb
mov
adc
push
push
out
fisubrl
mov
cmp
adc
sub
mov
lock
enter
lods
mov
cwtl
mov
fbstp
jl
lods
ret
dec
sbb
mov
les
xchg
jno
stos
in
jl
pop
xchg
sbb
dec
and
xchg
inc
jg
repnz
loop
push
cmp
int
cmp
adc
scas
lea
sub
test
loop
sti
sbb
mov
xchg
mov
sbb
out
jno
js
inc
mov
in
sub
lods
sarl
xchg
mov
sbb
inc
cmp
sub
push
mov
shrl
in
pop
movsb
mov
mov
push
ret
mov
push
jmp
push
dec
inc
int3
jge
mov
sub
or
mov
jle
mov
and
rcrb
and
call
fwait
call
mov
lahf
mov
dec
pop
int
sbb
pop
ss
fcoml
mov
sub
test
xchg
movl
insb
inc
cmpsb
int
dec
pop
jecxz
nop
test
lret
push
cs
jmp
and
insl
ret
jmp
outsl
aam
sarb
and
in
adc
push
adc
pop
jo
sub
add
cmp
dec
cmp
adc
mov
jo
clc
mov
rol
ret
and
into
adc
nop
jmp
aad
ret
pop
xor
mov
lcall
pop
lahf
int
sub
mov
add
push
out
mov
popa
sarb
aad
sub
fistps
mov
jle
or
arpl
sbb
repnz
cmc
cwtl
sub
add
and
mov
sub
jmp
ja
in
dec
push
and
repz
jl
ds
add
add
sti
sar
daa
inc
std
dec
add
stc
fs
mov
xchg
ja
mov
iret
push
dec
and
stos
aas
dec
cmp
xor
dec
xchg
dec
stos
inc
sub
hlt
xor
dec
stos
sbb
imul
dec
mov
push
push
pop
addr16
inc
clc
mov
adc
mov
pop
outsl
mov
jbe
sti
adc
cmp
addl
and
jge
or
jno
in
adc
call
cmc
shlb
sti
popa
ljmp
pop
mov
xor
jo
and
aaa
mov
sbb
xor
xchg
rol
out
mov
daa
push
push
rolb
js
pop
jb
xchg
inc
sub
mov
leave
pusha
push
std
pop
jb
pop
dec
cmp
paddq
mov
cmp
int3
mov
sub
jmp
xchg
js
xor
cmp
add
fwait
gs
fisubrs
mov
orb
out
and
cmc
mov
inc
call
and
xchg
aam
push
mov
shrb
mov
mov
aam
push
loope
faddl
notl
and
cmpsb
loop
jnp
or
adc
sub
mov
push
inc
jecxz
mov
mov
push
pop
xchg
ror
push
sub
sbb
mov
pop
lret
or
cmc
mov
push
out
decl
jmp
sbb
mov
sub
hlt
mov
daa
push
sub
divb
lods
into
sbb
xlat
inc
outsl
sbb
xor
sahf
fiaddl
lock
andb
fstps
rcrl
mov
cmpsl
push
or
popf
mov
fidivrl
push
sub
or
sbb
out
pop
sbb
sbb
test
dec
cld
adcb
in
sbb
es
xchg
or
fcoml
jmp
mov
mov
aad
xor
cmpb
loop
outsb
push
and
xor
mov
mov
mov
xor
ss
fisubl
cltd
jae
adc
cmpsl
sbb
mov
mov
and
scas
and
lods
and
jb
adc
imul
push
stos
imul
movsl
insb
aam
adcl
cs
sbb
int
mov
inc
popa
mov
mov
push
ja
add
pop
arpl
stc
cmp
jne
sbb
scas
je
arpl
pusha
ss
mov
rorl
jle
popa
iret
lret
or
xchg
test
xchg
jl
mov
iret
adc
and
aas
lods
insb
sbb
mov
in
xchg
and
mov
mov
push
add
negl
and
pop
sub
fldl
mov
stos
mov
leave
or
stos
cmp
or
cmp
add
add
int
pop
xor
imul
out
je
mov
icebp
inc
enter
mov
in
jb
push
add
xchg
iret
clc
aaa
xor
push
or
xchg
jb
xor
cltd
adc
xor
je
sub
daa
sbb
cltd
mov
dec
aad
bound
arpl
xor
lahf
inc
rcll
pop
cld
sbb
in
outsl
mov
xor
mov
scas
shlb
stc
test
scas
fistl
or
out
sbbb
inc
jnp
lret
out
xlat
pusha
in
push
mov
mov
mov
jae
add
sbb
ds
aas
jns
cmp
dec
ss
inc
sbb
pop
pop
pop
test
call
into
nop
jge
pop
gs
push
mov
push
cld
int3
out
in
imul
mov
imul
and
inc
sub
cs
pop
push
fs
int3
shlb
outsl
out
mov
aas
and
sbb
jbe
divb
xor
in
popf
sahf
adc
mov
cli
incb
pusha
outsb
rcl
cmp
push
jp
iret
int3
dec
jb
gs
pop
cltd
ret
cmpsl
scas
int
cmpsb
push
aas
sti
lods
push
add
jle
repz
jb
jle
push
sbb
movsb
insl
cld
loope
mov
mov
or
mov
aas
sbb
xlat
and
lock
mov
dec
lret
fldenv
sub
push
jo
mov
pop
lock
outsb
ret
push
or
int3
mov
rol
rorb
outsb
bound
int3
jbe
jno
pop
mov
lea
mov
push
mov
int
cmpb
imul
xchg
outsl
jne
cli
pop
add
pop
pop
std
cmp
mov
jecxz
nop
inc
jecxz
mov
fisubrl
arpl
fldenv
out
test
lods
repnz
loope
ret
fwait
lcall
push
and
add
push
movsb
push
lcall
dec
cmpxchg
incb
add
push
mov
mov
sbb
ss
aam
jbe
add
jnp
out
stc
and
push
cwtl
imul
fdivrl
pop
add
cmpsl
adc
sbb
mov
pushf
iret
jg
push
mov
out
adc
jp
add
inc
bound
inc
pushf
rcrb
adc
sbb
adcl
fxch
inc
bound
lods
pop
jno
call
cmp
fisubrl
adc
jmp
dec
pop
ss
arpl
mov
or
xorl
ret
es
add
push
dec
or
out
push
or
jno
test
mov
add
mov
push
cmp
push
ret
or
insb
push
dec
mov
js
test
sahf
pop
add
test
sbb
cmp
cltd
xchg
inc
xor
inc
push
ds
subb
fidivrs
mov
fwait
xchg
dec
test
adc
sub
ds
cmpsb
mov
add
mov
lahf
repz
pushl
jecxz
sub
out
inc
roll
dec
sbb
cli
xor
jp
lcall
mov
hlt
or
call
pop
sub
jnp
add
mov
pop
mov
repnz
cmp
shrb
pop
sub
xor
pop
push
push
out
jge
xchg
cmp
mov
sbbl
push
cmp
testl
rol
out
stos
test
dec
scas
mov
inc
xor
lods
xlat
xor
mov
stc
cmp
cmp
fldcw
dec
xchg
ljmp
dec
dec
and
test
ret
sbb
aas
inc
mov
dec
loopne
jecxz
mov
aaa
int3
out
jle
sub
pop
lock
sti
loopne
and
sbb
jmp
in
jo
mov
and
out
xchg
cmp
in
pop
xchg
or
and
push
xor
xor
push
dec
inc
data16
inc
and
inc
pop
push
mov
xchg
add
xor
mov
push
cmpsb
and
jnp,pt
fldenv
insb
sahf
mov
fcoms
ds
xor
out
das
leave
pop
cs
shlb
cli
push
movsb
sub
sbb
pushf
repnz
and
arpl
or
jl
cli
mov
jnp
mov
dec
pop
sbb
jmp
inc
and
cmp
ja
xor
cltd
data16
add
popa
pop
jo
cmp
sbb
dec
lds
mov
imul
ljmp
test
andb
sub
movsl
negl
cmp
negl
fwait
dec
jbe
or
and
in
in
cs
jmp
xchg
shrb
pop
inc
nop
lds
add
addr16
xlat
and
test
sbb
mov
inc
mov
imulb
cwtl
cmc
jo
hlt
adc
movsl
xchg
arpl
mov
add
fiadds
outsb
out
sbbb
in
dec
es
nop
jg
and
les
and
rcr
scas
movsl
lret
jbe
push
lret
jge
mov
dec
xchg
mov
add
insl
pop
div
mov
pop
sbbl
je
pop
sarb
adc
adc
pusha
pusha
lods
cmpsb
or
inc
aas
adc
pop
xlat
aas
mov
daa
loopne
repnz
push
inc
xor
fisttps
dec
mov
sbbb
xchg
add
push
cmpsb
movsb
push
je
pop
pop
mov
mov
pushf
mov
cmp
sahf
push
in
jns
mov
push
sbb
cmc
shll
dec
sti
or
sub
or
push
jmp
sahf
jo
in
ffreep
cli
push
cmp
pop
jnp
in
clc
cmpsl
fisubrl
inc
inc
out
fistpl
mov
imul
divb
rcrb
mov
dec
stc
or
sub
jmp
out
scas
outsl
jb
add
lahf
xchg
imul
add
sbb
add
cmpsb
inc
int3
cmp
insb
mov
add
sbbl
and
jle
inc
psubusw
push
je
imul
xchg
dec
shrb
fists
sbb
push
int3
push
fistl
sub
and
ja
push
adc
xor
out
lcall
lahf
push
push
lret
jge
movsb
fidivrl
mov
or
pop
inc
iret
push
mov
xor
mov
fisubrs
sub
jmp
dec
insb
pop
popf
xchg
outsb
data16
mov
cmp
sbb
sub
mov
mov
adc
fistpll
daa
lea
imul
cli
fists
hlt
xchg
addl
out
ljmp
cwtl
mov
movsl
jb
stc
cmp
sbb
xchg
push
jle
int3
and
cmp
xchg
loope
inc
lea
bound
mov
xor
cli
roll
nop
jne
jns
ljmp
aaa
dec
enter
mov
or
adc
test
add
fs
sbb
push
add
and
stos
in
and
fs
fidivrl
and
or
xor
daa
aam
cvtps2pi
cmp
cmc
ja
insl
mov
dec
dec
psrlw
test
mov
movsb
lock
pcmpgtb
out
in
dec
inc
sbb
les
mov
jae
push
loope
test
orb
fnstcw
mov
xlat
sub
test
cltd
mov
jns
lock
cmp
jns
stc
xor
cmp
jb
sub
jecxz
rorb
cmp
pusha
lock
popf
ret
xor
pop
lock
mov
jp
and
push
int
lret
mov
fwait
movsl
xchg
not
push
test
jbe
mov
pop
or
stos
sbb
inc
cmp
pop
es
out
sub
adc
jne
sbb
sub
or
ljmp
xchg
push
test
push
int3
xchg
sbb
xchg
mov
sub
xchg
scas
mov
les
fiaddl
mov
xor
push
ficoml
mov
ret
hlt
add
and
jp
xchg
ljmp
cmp
fcoms
cmp
dec
dec
xchg
fstpt
nop
popf
push
lahf
mov
add
mov
cmp
hlt
jne
icebp
movsl
sub
add
movsl
sub
jnp,pt
data16
outsl
ds
in
clc
jp
mov
imul
aad
push
mov
push
repz
sbb
loop
or
out
ficompl
fcompl
push
lret
sahf
cs
mov
sbb
dec
jg
sbb
inc
sti
lret
mov
in
mov
dec
or
and
scas
int3
mov
mov
or
push
fcmovnbe
roll
lea
pushf
sub
push
lcall
mov
lods
test
fnsave
je
popa
cmpb
lcall
dec
mov
ret
addb
jo
fxch
gs
adcl
jg
fiadds
push
movsb
xor
cmp
mov
dec
insb
cltd
nop
lods
shl
sti
test
jecxz
xchg
je
int
sahf
fnstcw
inc
in
adc
xchg
inc
js
xchg
loopne
jmp
mov
cltd
cs
sbb
enter
sbb
mov
sahf
ffree
lahf
jb
outsl
add
test
adc
cmc
repnz
mov
aad
xchg
jbe
in
insl
push
mov
mov
xor
jo
mov
movl
xor
sbb
out
xchg
in
scas
and
jmp
ljmp
push
inc
pushf
cs
aad
mov
cmp
dec
popa
jp
mov
ret
shrl
jge
outsl
fimull
sbb
push
or
jbe
add
add
mov
dec
mov
mov
stos
fs
daa
cmp
lret
ret
ret
mov
aas
mov
iret
shl
aad
rorb
call
aas
data16
jmp
iret
cli
xor
xchg
inc
daa
mov
fadds
mov
ds
sub
mov
inc
xchg
loopne
push
mov
aaa
ljmp
scas
pop
sbb
fistps
inc
mov
into
sti
pop
divl
aaa
mov
push
mov
scas
jno
or
jnp
mov
scas
test
rorb
adc
mov
jno
aad
aam
jle
mov
outsb
inc
pop
ljmp
xor
repz
fwait
push
cmp
sarb
sbb
pop
or
push
sub
push
adc
mov
push
scas
das
sbb
jle
lods
xchg
mov
jge
in
movsb
mov
inc
add
jp
pop
imull
sub
orb
sbb
into
mov
decb
mov
loop
jno
scas
loope
push
test
dec
inc
movb
mov
jecxz
std
sbb
repnz
mov
fstpl
add
bound
pop
icebp
inc
sub
iret
out
popa
daa
stc
leave
dec
rcrb
or
rolb
or
push
lcall
mov
mulb
jg
mov
mov
cmp
ficoms
mov
sbb
sub
mov
lahf
and
cmp
hlt
aad
aaa
jmp
arpl
mov
mov
jnp
inc
out
stc
test
or
xchg
mul
loope
sbb
dec
add
mov
gs
rolb
xlat
jmp
mov
xchg
cs
pop
rolb
and
jmp
loopne
rcrb
shrb
mov
fidivrl
outsb
daa
inc
dec
dec
dec
in
xlat
mov
js
or
push
mov
jb
cmp
inc
out
aad
dec
or
mov
jnp
jnp
stos
jbe
mov
fcoml
jge
mov
mov
mov
mov
sbb
icebp
and
sub
pop
ficoms
stc
outsb
jae
xchg
es
dec
out
pop
nop
sub
jmp
sti
stc
lock
pop
leave
mov
push
lods
dec
aam
into
pop
test
cmpsl
add
jns
int
and
mov
out
les
dec
sub
and
add
cmp
cmc
xchg
movsb
mov
mov
hlt
mov
pop
inc
sub
jae
mov
sti
pop
adc
mull
mov
mov
add
fsubs
sbbb
xchg
dec
rcl
pop
fists
stc
icebp
cli
inc
xchg
push
mov
sbb
xor
xchg
sbb
paddsw
cmp
and
ror
pop
shll
fcmovb
push
or
inc
divl
cmp
neg
test
xchg
aaa
rclb
pushl
pushf
gs
leave
shll
inc
pusha
inc
jo
in
pop
dec
cmpb
scas
imul
inc
stc
stos
dec
mov
pop
std
outsl
jg
ret
adc
xor
mov
ret
rcrl
inc
pop
xor
xchg
stos
sahf
and
cmp
lret
pop
ljmp
sub
adc
mov
out
lock
mov
lods
ljmp
mov
loope
mov
inc
push
jb
adc
imul
xchg
pop
lret
mov
adc
mov
test
ret
insb
lock
sub
stos
dec
and
ljmp
xor
mov
lods
xorl
mov
dec
ret
mov
mov
mov
push
imul
dec
bound
call
test
jecxz
adc
adc
sub
jge
sbb
andl
mov
daa
out
loopne
inc
cmp
mov
inc
push
loopne
jg
jl
cs
mov
pushf
sub
inc
ds
xorb
jb
js
out
mov
xor
mov
cs
ficompl
mov
daa
mov
add
or
mov
push
pop
sbb
jg
cmp
stos
outsb
lods
and
xchg
jbe
cmp
push
mov
xchg
push
add
jno
mov
jns
mov
push
scas
and
jno
xchg
loop
mov
fidivrl
out
lods
cli
and
sti
je
cmp
lods
dec
inc
or
mov
cmp
inc
pop
mov
jl
or
imul
hlt
ja
shll
xchg
push
mov
cmpsb
push
cmp
fisubs
pop
jg
mov
je
or
outsl
idivb
jp
ss
scas
or
stos
das
add
cmpsl
bound
mov
cmc
bound
dec
push
dec
shl
mov
pop
fptan
adc
mov
xchg
mov
xchg
inc
mulb
scas
outsl
int
adc
arpl
icebp
pop
or
imul
fists
add
sub
push
rcrl
sub
fwait
aas
cmp
outsl
inc
aas
dec
cli
out
lea
adc
xor
jne
aam
pop
ror
add
movsb
lds
stc
aam
les
sub
shll
repz
pop
mov
ja
mov
sbb
push
sub
ljmp
dec
rclb
pop
mov
orl
xchg
xor
lock
int3
pop
stc
sbb
add
add
stos
test
out
lock
ja
js
mov
fiaddl
push
in
or
jp
jp
into
jmp
addr16
imul
dec
and
fstpl
repz
pop
add
test
rol
or
mov
sub
push
sbb
jnp
inc
test
cmp
mov
jmp
into
lret
loop
push
push
xchg
pop
pop
ficoms
xor
adc
pop
lret
and
repnz
aaa
adc
mov
adc
mov
mov
mov
aaa
cmp
notb
iret
aas
out
out
inc
addr16
jb
ljmp
movsb
xlat
repz
sahf
fstps
lret
fldl
repz
adc
adc
sbb
mov
push
cwtl
cmpsb
mov
sbb
xchg
jg
add
jmp
dec
std
mov
mov
mov
insb
aaa
jne
and
js
dec
loope
fistpl
sbb
insb
jecxz
jnp
insl
push
mov
jno
aad
aaa
test
add
cmp
sahf
add
int3
and
push
cmp
leave
test
fidivrl
fsubp
inc
in
movsb
daa
aad
adcb
jmp
or
mov
sbb
push
jecxz
lea
add
dec
sbb
sbb
icebp
fisubrl
repz
ret
or
push
jp
jp
xchg
mov
shr
stc
insb
cmpb
jg
sub
data16
cmp
sbb
and
mov
push
rolb
fadds
mov
in
add
jl
mov
xchg
xchg
and
dec
xchg
push
iret
loop
rorb
adc
add
push
push
stos
sbb
mov
repz
sbb
hlt
movsl
hlt
cmpb
push
stc
mov
shr
sub
cmp
mov
fidivrs
add
lret
xchg
pop
stc
sub
and
xlat
mov
jno
imul
sbb
lret
or
mov
pop
sti
inc
fwait
lcall
adc
fbld
cli
out
pop
shlb
adc
jae
sahf
pop
sbb
cmp
sbb
rol
pop
dec
push
pop
repz
push
xchg
insl
iret
pop
adc
push
aaa
cltd
cmp
out
pop
inc
mov
or
test
cltd
int3
dec
test
das
xor
push
loope
jno
lret
xor
mov
jge
mov
mov
sarb
push
pop
sub
inc
fldcw
mov
sti
iret
mov
lret
ss
iret
and
aad
jmp
sbb
inc
mov
loop
sub
push
sbbl
jnp
add
roll
lods
mov
adc
mov
push
sahf
push
shr
mov
mov
lock
aas
mov
jne
lcall
pop
insb
mov
hlt
mov
outsl
dec
add
leave
gs
imul
xchg
pop
cmpsl
bound
ret
movsb
lret
lret
lods
xor
sbb
add
es
lret
xor
xchg
xchg
jg
outsl
loop
in
cmpsl
andb
adc
inc
mov
add
bound
aaa
loope
push
mov
fwait
aaa
inc
mov
pop
imull
push
mov
push
ss
ja
fdivl
inc
lock
sahf
into
inc
js
xchg
ja
xchg
movsb
and
xchg
xor
inc
adc
pop
xchg
pop
jg
pop
or
push
lahf
mov
jae
jae
int
mov
cltd
rcr
int
test
jns
aas
sarb
xor
xchg
sbb
aam
lods
lahf
ja
jo
dec
mov
pop
lret
mov
test
movsb
mov
pop
and
pop
sarl
sbb
aam
lcall
cs
xor
cmp
dec
sarb
inc
xor
scas
mov
pushf
xor
sub
jo
xor
dec
out
mov
push
pop
ficomps
pusha
and
pop
ss
push
std
movsl
hlt
popf
ficompl
je
dec
cwtl
shrb
lock
test
mov
insl
cmc
adc
ljmp
stc
mov
mov
out
ljmp
jl
ss
xor
es
add
sbb
dec
sbb
fmull
testl
and
pop
nop
out
or
jnp
mov
outsb
or
dec
lods
mov
subl
scas
loopne
ja
mov
aam
fstpl
js
sbb
pushf
movsl
mov
push
push
or
aad
dec
ja
daa
add
push
fisttps
ficoms
mov
or
je
and
shll
pop
es
psubw
jnp
cmc
pop
xor
push
inc
push
enter
ss
scas
jl
imul
xchg
cmovno
outsb
xchg
aas
mov
and
fistl
cmp
push
push
mov
mov
pusha
sbb
xchg
mov
ja
lods
push
pop
fisubrs
call
test
mov
mov
dec
ljmp
scas
push
jne
out
addr16
aad
xor
pop
fistpll
push
fldcw
xor
sbb
sub
mov
inc
into
test
movsl
sbb
imul
mov
xrelease
cs
clc
push
fdivl
test
shrb
xor
test
cwtl
addr16
jmp
xor
add
inc
xor
loope
push
xor
outsl
idiv
pop
stc
fisubl
mov
sarb
push
test
les
or
mov
repz
mov
push
mov
xor
flds
int
imul
ret
xchg
je
cwtl
fdivrp
inc
inc
mov
jge
mov
or
adc
push
pop
cmpl
and
pop
xchg
imul
dec
icebp
mov
lods
cs
movsl
imul
call
popf
adc
lret
mov
jnp
jne
ret
mov
pushf
repz
leave
hlt
pop
pop
mov
fwait
mov
xor
push
aad
arpl
fsub
add
push
lea
lahf
inc
dec
mov
ror
lds
adc
mov
push
scas
adc
fstps
pop
cmp
cmp
xlat
xlat
lcall
test
shll
call
jae
iret
ljmp
add
lret
jle
in
test
and
push
dec
mov
cmpsl
mov
sub
xor
out
mov
xchg
sub
dec
insl
dec
inc
dec
pop
inc
adc
mov
mov
insb
inc
test
dec
jno
push
pop
inc
push
pop
adc
jbe
gs
cmpsl
cmp
inc
popa
mov
mov
sbb
daa
addb
fnsave
addr16
dec
loopne
push
jo
mov
int3
loop
or
std
in
pop
xor
scas
pop
adc
mov
inc
test
jg
sbb
enter
inc
iret
adc
sbb
movsl
push
mov
aas
nop
and
scas
and
cltd
cltd
out
cltd
pop
pop
adc
cmp
dec
adcl
mov
or
add
popa
mov
lcall
cmp
mov
xor
mov
inc
fistps
stc
dec
push
pop
sub
push
bound
pop
scas
pop
and
mov
mov
mov
sarl
lds
mov
adc
mov
adc
push
add
std
cmp
mov
js
in
and
or
jg
cmc
jp
or
addr16
loope
fcmovnb
dec
popf
icebp
push
jmp
jp
rclb
sbb
jns
xchg
jmp
add
push
cmp
xchg
jmp
sub
push
mov
outsl
fwait
in
subb
cmp
dec
inc
push
js
rorl
xor
ljmp
sbb
incl
push
add
xlat
dec
inc
mov
outsb
and
add
sahf
sub
push
xchg
mov
mov
or
push
push
xchg
rol
and
inc
test
and
jecxz
into
daa
lods
adc
sub
push
lret
adc
in
lds
std
inc
push
imul
jg
mov
xchg
jg
pop
enter
daa
push
mov
mov
xchg
lds
bound
rcl
push
fnstsw
outsb
mov
mov
xchg
inc
sahf
push
add
popf
inc
ds
jecxz
leave
xchg
mov
jecxz
cmp
xchg
int3
pop
fisttpll
es
call
ret
call
inc
mov
pop
arpl
sar
loopne
push
lods
ja
xchg
iret
out
clc
dec
jecxz
rcrl
out
orb
icebp
leave
mov
and
scas
ds
clc
sub
repnz
lcall
push
jo
ret
leave
add
ds
xchg
xchg
sbb
or
shr
dec
shll
and
jo
pop
pop
mov
daa
je
jbe
mov
pop
mov
cmc
xlat
cmpsl
mov
leave
sub
int3
or
sbb
loop
push
push
xchg
lods
out
fildl
je
cld
aad
popa
or
int3
inc
cmp
or
lock
shll
je
insl
adc
cmpsl
inc
shl
sub
clc
add
or
pop
aam
sbb
and
dec
pushf
mov
cli
xor
in
gs
pop
sarb
mov
imul
push
pushl
push
xor
xchg
icebp
cmp
jp
lea
test
push
cmp
orb
lock
sti
xchg
mov
or
sub
aas
roll
xchg
in
inc
popf
dec
scas
outsb
outsl
les
fildl
add
ja,pn
or
or
cli
sub
dec
es
mov
hlt
push
aam
mov
jg
mov
test
cmc
sbb
push
out
jle
mov
inc
sub
push
sbb
popa
dec
and
mov
jg
out
adcb
test
scas
inc
loop
push
adc
mov
gs
push
lahf
subb
xchg
cmp
pop
xor
fs
js
leave
mov
icebp
cs
in
mov
sbb
pop
loope
outsl
adc
sub
int
imul
outsb
jbe
insb
push
iret
mov
pop
xor
sbb
js
pop
push
int
and
lret
es
or
out
clc
dec
dec
or
cltd
test
clc
les
fisubrs
sbb
iret
mov
stos
mov
pop
cmp
lock
cmp
push
test
ss
fwait
icebp
xchg
fwait
cs
movsb
ffreep
hlt
dec
loopew
and
mov
cmpsl
pop
push
or
fmul
cmpsb
sub
loope
mov
xchg
mov
inc
cltd
js
sub
lods
es
add
sbb
push
mov
adc
pop
scas
sbb
stos
or
ficoml
or
testl
test
cmpsl
pop
cltd
int3
nop
push
xor
jmp
mov
stos
push
stos
cmp
mov
fdivrp
xchg
pop
out
or
or
fnstcw
fwait
xor
push
and
lret
das
int3
push
nop
cli
cli
adc
sub
inc
popf
xor
in
cmpsb
dec
adc
in
mov
jle
adc
fisubl
bound
pop
cmp
xor
sbb
cs
out
and
fiadds
mov
lods
dec
dec
sbb
mov
int
xor
sahf
mov
adc
testl
outsb
jae
mov
dec
aaa
jbe
iret
mov
xor
rolb
and
out
idivl
fsubrl
sub
xchg
clc
test
out
or
pusha
mov
push
pop
outsl
add
aaa
hlt
add
lods
pop
test
cld
js
mov
pop
adc
stos
std
adc
cli
imul
stos
or
mov
das
adc
sar
xchg
movsb
fsubrs
movsl
pop
jmp
nop
mov
sbb
xchg
xchg
fisttpll
mov
in
dec
test
std
movsb
mov
mov
inc
sbb
jmp
fistpl
adc
cli
and
fs
mov
mov
cld
ja
fldl
mov
inc
lahf
orb
imul
sub
dec
mov
nop
inc
lods
sub
andl
mov
icebp
cmp
aad
inc
xchg
dec
lds
push
or
cld
xchg
xchg
shl
mov
in
f2xm1
jg
or
inc
je
xchg
xchg
fstl
mov
lsl
or
mov
mov
xor
or
fxtract
mov
dec
mov
das
adc
hlt
add
scas
jge
mov
add
movsl
int
das
xor
pop
add
outsb
xor
jo
out
clc
lret
jbe
stos
xchg
loop
aad
arpl
or
add
mov
mov
jno
pop
cmp
pop
dec
mov
jmp
inc
xor
mov
sub
cmp
inc
jnp
cmp
scas
lahf
xchg
or
mov
cmp
ljmp
hlt
cmp
push
daa
jns
aad
jnp
adc
jb
adc
fstps
xchg
andb
int3
add
imul
mov
imul
add
sbb
cmpsl
cmpsb
cmp
and
aaa
mov
adc
cli
imul
repnz
scas
pop
or
mov
push
pop
jl
dec
je
ja
mov
cmp
xchg
and
adc
xchg
add
loopne,pn
mov
dec
daa
sbb
out
push
addl
test
cli
shl
shll
pop
mov
mov
daa
out
inc
or
cmpsl
sarb
das
dec
scas
xor
insb
sbb
push
fldcw
mov
fs
cs
imul
out
push
scas
pusha
jbe
out
push
lods
lock
push
dec
jl
enter
dec
outsl
xor
or
in
mull
adc
xor
popaw
idiv
pop
sbb
call
outsl
stos
lret
out
enter
dec
insb
mov
mov
js
pop
and
jne
inc
stc
nop
stos
fisttps
jae
mov
inc
xchg
and
lret
mov
inc
jge
in
or
xor
repnz
or
sub
adc
sbb
push
xchg
jmp
test
mov
cltd
lahf
fwait
fs
inc
out
push
aas
mov
shr
dec
dec
xchg
clc
aaa
dec
xchg
cmc
jnp
daa
cmp
mov
addr16
out
cmpb
dec
and
add
lea
mov
xchg
lds
lret
cmp
inc
cmp
push
push
sub
cmp
inc
gs
mov
scas
push
lods
pusha
inc
xchg
pushf
into
idivb
push
sub
daa
into
mov
ds
insb
mov
or
and
add
jge
push
aas
hlt
movsb
push
mov
or
leave
out
or
cmp
cvttps2pi
testb
lcall
test
les
mov
dec
out
pusha
jl
xor
sti
inc
cmc
fcmovnu
push
push
inc
enter
xchg
adc
sub
rcl
lock
shl
fwait
icebp
and
mov
mov
pusha
mov
in
shll
fwait
stos
imul
lret
sub
out
add
push
xchg
mov
mov
inc
imul
jae
mov
lret
adc
mov
sbb
aad
popf
aas
repz
in
stos
mov
mov
dec
sbb
rcll
adc
mov
mov
sub
xchg
jp
and
ret
aaa
fnstcw
inc
leave
popa
pop
xor
pop
cmp
and
jne
popa
jle
push
dec
or
xchg
inc
sub
stos
std
sub
dec
dec
xchg
cmc
sbb
out
mov
jg
push
jge
das
push
mov
xchg
stc
add
mov
mov
sub
adc
cmc
mov
cmpsl
mov
sbb
pop
xchg
dec
xchg
xor
xchg
mov
pop
dec
pop
daa
adc
icebp
adc
pushf
fsubp
or
cmp
into
ret
imul
jp
rep
movsl
imul
pop
pushf
inc
pushf
cmc
push
pop
cmp
adc
lock
gs
mov
jbe
das
cmp
pop
mov
sub
push
gs
hlt
insb
lods
testl
fwait
ret
lcall
xor
clc
sub
jp
aad
mov
push
mov
inc
mov
mov
jb
into
push
ret
out
pop
pop
jnp
mov
test
test
mov
ds
movsb
jnp
loope
xor
mov
sbb
aaa
lcall
into
pop
into
jecxz
push
sub
mov
pop
scas
and
dec
neg
and
fists
stos
pop
inc
mov
or
sub
stos
inc
xor
movsl
or
push
xchg
lret
inc
popa
lahf
pop
pop
rorb
sbbl
fisttpll
dec
adc
mov
lds
sbb
mov
jecxz
inc
add
inc
push
cld
mov
ficomps
jp
or
jae
fnstenv
sbb
cmp
jne
repnz
jbe
cmp
sahf
inc
sti
push
ljmp
aam
xchg
mulb
sbb
pop
adc
jle
es
or
lret
sbb
mov
adc
fs
loopne
and
shl
mov
lret
shl
push
ljmp
es
pop
pop
gs
add
fisttpl
subb
push
loopne
sbb
gs
xor
ljmp
jg
insb
pop
nop
pop
jbe
mov
cmp
add
je
mov
sahf
js
popf
cmc
movsb
pop
add
xor
inc
sahf
les
jg
movl
adc
sarb
xor
movsb
pop
xor
mov
scas
mov
and
cmovne
in
mov
jp
mov
rcr
loop
jmp
pop
test
sbb
cmp
insl
rcrb
xorb
mov
mov
stc
ljmp
sub
std
fstp
scas
or
mov
dec
stos
jmp
into
pop
pop
out
mov
sub
repz
test
push
sub
sub
in
orb
mov
call
xchg
imul
dec
xor
jmp
inc
ja
push
jecxz
into
sahf
sbbl
jecxz
aam
jle
loopne
mov
sub
jnp
jecxz
leave
daa
sbb
outsl
cli
shr
jge
xchg
iret
jmp
pushf
fsubl
sbbb
cmpsb
xor
scas
fadd
mov
adc
addr16
loope
pop
inc
adc
dec
daa
lods
pop
je
sbb
ljmp
mov
stos
ss
jbe
sbb
mov
push
test
mov
lahf
hlt
xor
clc
sbb
cmp
jbe
adcl
dec
cmpsl
ja
or
pop
mov
add
out
lods
fidivs
je
stc
arpl
pusha
sub
test
lea
aam
cmp
into
add
addr16
gs
jmp
xchg
data16
gs
movsb
daa
sbb
push
fimuls
pop
mov
jmp
mov
scas
jno
dec
mov
and
into
and
xchg
mov
cmp
scas
bound
jbe
fstps
jl
mov
mov
in
stc
aam
jae
xor
pushf
push
fwait
dec
sub
aaa
ds
imul
scas
sbb
xchg
into
mov
mov
insl
lods
movl
pushl
jnp
icebp
jmp
pop
test
lods
scas
enter
loope
mov
mov
pop
in
pop
jae
mov
cltd
jnp
gs
lock
xorb
and
push
fstpl
adc
mov
pop
dec
pop
jnp
sbb
pop
cmpsl
imul
xchg
mov
jno
ret
out
ds
cltd
or
xor
jne
jae
xchg
pusha
loopne
outsb
cmc
rcl
sti
adc
sti
dec
sbb
push
cltd
in
test
xchg
mov
movsl
jae
adcb
leavew
adc
ret
movsl
inc
jg
aam
pop
and
jecxz
xchg
inc
push
xchg
dec
sarb
pop
lods
imul
dec
les
pushf
roll
fadds
es
stc
movsl
push
ja
xor
rcll
mov
nop
xchg
pop
insb
not
push
dec
imul
sbb
pusha
insb
dec
push
or
daa
push
lods
mov
andb
mov
cmp
and
mov
pop
hlt
mov
dec
lahf
cld
sahf
stc
jne
inc
decl
fxch
fwait
aad
rclb
std
in
inc
add
or
jnp
add
xchg
pop
lock
repnz
mov
cli
xor
mov
mov
insl
adc
pop
fsts
rorl
add
pusha
sub
ret
jbe
aad
popa
and
cmpsb
out
enter
dec
sub
cmp
add
shl
lods
or
pop
push
xor
scas
cli
lea
or
push
pushf
sahf
sbb
or
jle
cmp
jge
push
divl
fcmovnu
into
inc
les
stos
mov
call
orb
outsl
push
jle
add
mov
adc
pop
xchg
jae
js
in
test
cmpsl
popf
add
shl
daa
xor
mov
xchg
push
sub
mov
sbb
cmpsb
lods
cmp
lock
mov
pop
or
jg
sbb
inc
popf
sub
xchg
lret
icebp
out
or
sbb
clc
pop
mov
inc
and
inc
and
mov
add
add
sub
add
adc
cmp
dec
je
shlb
mov
movsb
cmp
dec
out
jns
adc
ljmp
jl
jnp
push
pop
data16
movsl
xor
shr
sub
mul
nop
ss
xor
enter
mov
imul
idivl
inc
adc
mov
leave
jle
lret
movsb
pop
push
push
dec
xchg
aas
xchg
fnstsw
pop
add
aas
inc
mov
mov
repz
in
mov
hlt
cmpsl
imulb
push
es
push
aad
mov
mov
mov
cwtl
jb
inc
xor
cmp
ror
lret
scas
out
add
mov
inc
ja
arpl
leave
jno
jmp
mov
cmp
and
daa
cmp
push
inc
xor
sti
mov
popf
pop
inc
movsb
dec
fdivr
mov
sub
pop
lcall
ljmp
test
test
lea
mov
lret
sbb
leave
mov
sub
xchg
outsb
aaa
ret
adc
jne
mov
xor
mov
jno
cmpsl
mov
jns
mov
jl
lea
adc
mov
mov
scas
cs
xchg
insb
sbb
imul
cld
mov
mov
rep
mov
mov
rol
and
jg
sti
pop
sbb
or
lock
enter
rorl
pop
lcall
imul
xchg
mov
add
inc
es
rol
inc
or
stos
data16
and
lods
int
and
jl
out
loopne
and
jo
jae
mov
jbe
jns
in
cld
sub
push
into
std
dec
adc
aas
popa
jb
sahf
jle,pt
sbb
insb
das
mov
xor
psrlw
in
sti
enter
inc
or
add
push
sbb
pop
pushf
sbb
cmp
sbbl
inc
cmp
mov
mov
and
scas
and
cs
js
push
sbb
mov
mov
pop
dec
scas
mov
pop
adc
jl
sub
leave
dec
sbb
and
dec
pop
jge
repnz
push
aad
in
fnstenv
lock
dec
cli
mov
and
mov
dec
sbb
aam
movsb
aad
lods
cmpsb
test
jo
fcomip
and
inc
dec
out
out
pop
scas
icebp
lret
shlb
call
xor
dec
mov
inc
cltd
gs
outsl
repnz
shrb
pushf
jl
sbb
dec
xor
add
repz
ret
ja
je
mov
stos
cmpsl
adc
cmpb
sbb
mov
mov
xor
stos
stc
add
mov
push
push
xorb
xchg
mov
rcrl
dec
in
iret
aad
inc
jbe
mov
cmp
mov
stos
push
ja
sub
xchg
jg
jmp
cmp
rcr
push
pop
push
or
dec
popf
inc
fidivrl
imul
jmp
push
cli
jne
aam
sub
xchg
xor
jne
into
push
leave
outsb
sub
sub
add
mov
lds
xor
adc
jbe
xor
orl
add
mov
repnz
out
xchg
sub
add
insb
xchg
hlt
arpl
js
addr16
push
push
xchg
addr16
bound
inc
or
aad
inc
xor
popf
mov
sbb
xor
push
or
icebp
pop
outsl
xchg
andb
or
push
jg
sbb
inc
mov
and
fcmovu
dec
or
add
mov
out
loop
mov
outsb
jo
scas
pop
rclb
inc
movsb
aad
ret
mov
sbb
adc
test
pop
movsl
psubsb
out
enter
push
test
aam
jb
inc
and
dec
rcrb
jnp
sbb
jb
lea
or
test
jp
mov
inc
inc
xchg
sti
fsubl
mov
adc
repnz
sti
inc
jne
stc
mov
xor
out
lret
xor
and
sbb
repnz
cmpsb
or
dec
mov
hlt
rcr
pop
mov
inc
xchg
push
imul
inc
lret
cld
data16
mov
mov
or
lcall
mov
dec
repz
mov
aam
push
push
movsb
loope
mov
fwait
or
cmp
inc
in
push
int
mov
push
xchg
cld
add
bound
cmpsl
loopne
dec
std
rcll
fimuls
cwtl
sti
sbb
xor
insl
repnz
or
loopne
mov
dec
jne
pop
xchg
dec
mov
inc
sarl
jb
subl
mov
jmp
sbbl
jae
rcrb
inc
stc
movsb
or
fidivs
mov
movsl
repz
mov
pop
adc
or
sub
lahf
cmp
shl
incb
add
sub
mov
jns
fidivl
into
sub
das
in
aaa
jmp
mov
in
inc
les
push
ror
loope
sub
cli
or
out
mov
cmpsl
xchg
pop
sarb
dec
out
jecxz
mov
outsb
inc
test
nop
add
repz
cmp
leave
xorl
jmp
sbb
push
int3
cmp
inc
dec
inc
mov
xchg
inc
dec
adc
xchg
stc
or
lret
mov
mov
test
push
rorb
cmp
push
mov
mov
mov
dec
mov
fwait
mov
xchg
out
aam
xchg
daa
andb
cs
ja
lret
dec
notl
xchg
movsb
dec
loopne
outsb
mov
test
fwait
ret
jmp
lret
fnstsw
std
je
pop
dec
or
je
add
mov
mov
ror
lock
outsb
pop
int
movsl
or
stos
fst
clc
outsb
repz
sub
pop
cmpsb
or
pop
dec
mov
outsb
push
add
ljmp
les
and
in
mov
pop
dec
jnp
cmp
lods
xchg
aad
popf
fldenv
add
push
mov
dec
int
mov
js
gs
loope
mov
fucom
sbb
mov
lret
push
mov
mov
cwtl
push
std
leave
addb
jns
out
jmp
fs
cwtl
jg
ss
pop
cmpsb
and
sub
pop
cwtl
in
xlat
bound
fs
push
push
push
popf
fs
adc
sbb
jg
mov
dec
fiadds
call
nop
sbb
add
xchg
dec
mov
sarl
jb
xchg
inc
loop
xchg
dec
loope
pop
and
sahf
test
and
xchg
mov
xchg
inc
les
cld
les
bound
mov
sbb
rcrl
shrb
jb
daa
fsubl
repz
mov
subl
inc
rolb
mov
aaa
push
into
outsl
ss
pop
sbb
rcrb
cld
xorl
repz
xchg
int
push
xchg
clc
das
mov
push
hlt
inc
and
in
xor
cmp
fs
arpl
mov
adc
test
mov
sub
xchg
mov
mov
xor
inc
mov
add
or
test
call
adc
push
inc
xor
ja
addl
mov
mov
push
xchg
cmpsb
je
xor
je
test
cltd
sar
roll
daa
lea
inc
xchg
adc
inc
das
shlb
insl
mov
and
sub
arpl
xchg
xchg
scas
cli
mov
neg
add
orl
test
test
ret
shll
sarb
lods
lea
shlb
iret
fisubs
icebp
scas
fnstcw
jmp
data16
mov
outsb
loope
jge
cmp
fimuls
test
arpl
std
jae
scas
out
jl
dec
and
stc
push
ss
xor
fsubrs
inc
or
push
cs
dec
roll
cld
in
xor
ljmp
daa
sub
ret
jae
pop
jg
jp
cmp
in
add
mov
fs
sarl
inc
je
sarl
movsl
xlat
test
xlat
sbbl
lret
add
mov
adc
mov
mov
scas
mov
jns,pn
stos
add
loop
cmp
fcomps
add
jg
push
stos
rorb
rcrb
mov
lret
sahf
loope
push
lods
jne
dec
std
std
mov
push
call
xchg
sub
dec
aaa
cmp
dec
xchg
sbb
cmpb
out
in
shr
neg
cmp
outsb
lods
and
xsaves
add
inc
shl
lock
pusha
fwait
dec
push
pushf
jmp
inc
sub
imul
mov
sbb
rcrb
xchg
xor
adc
cwtl
sub
inc
dec
jp
sbb
and
popa
stos
cmpsl
or
pop
xchg
mov
mov
out
imul
inc
icebp
outsb
dec
inc
fndisi(8087
sbb
jno
lds
adc
mov
popa
stos
mov
in
sub
rol
pushf
divl
jno
cmp
fsubl
xor
xlat
ds
sar
push
sbb
or
xor
mov
mov
dec
add
insl
imul
jg
sbb
jecxz
pop
fmull
aam
sbb
dec
push
es
and
jmp
pop
mov
push
and
outsb
push
test
lds
lahf
xchg
mov
subb
rcl
or
cmp
add
push
mov
push
jge
xchg
xchg
cltd
sbbl
and
or
and
xchg
xor
xchg
rolb
shrb
mov
ffree
cwtl
in
sbb
sub
sub
lret
loope
insl
jae
movsb
jecxz
inc
es
and
mov
out
mov
and
ljmp
mov
cmpl
nop
add
lods
mov
jl
and
and
arpl
lahf
stos
and
sti
jae
xor
jle
xchg
test
stos
cltd
ds
cmp
xchg
cmpsb
push
loope
adc
fstpt
adc
pop
push
add
int3
fidivs
adc
pop
mov
push
pushf
rclb
int
and
popf
mov
ja
adc
gs
frstor
jns
stos
int3
stos
test
mov
js
fxtract
push
fistps
xchg
lret
lea
imul
sbb
push
and
mov
fildl
sub
sti
pusha
fimull
ds
cwtl
rcrl
mov
out
push
xchg
fsubrs
popa
cmc
sbb
xor
sbbl
sub
nop
dec
stos
fidivrl
mov
loop
or
movsl
test
jae
cmc
inc
dec
jge
push
test
test
jno
shl
sbb
jecxz
xchg
cmp
leave
out
adc
sub
bound
pop
and
push
sbb
int3
xchg
cltd
pop
sub
std
sbb
mov
imul
sub
dec
jne
adc
sbb
movsl
xchg
out
and
adc
mov
xor
cmc
arpl
imul
das
mov
and
arpl
push
addb
mov
adc
ljmp
mov
mov
dec
arpl
inc
rcll
lret
inc
and
insl
pop
shlb
jo
mov
fdivrl
cld
arpl
push
cmp
sbb
mov
xchg
or
incb
jne
adc
nop
mov
fstl
cmpsb
cli
sti
enter
add
or
mov
push
mull
out
pop
sbb
dec
sbb
sti
imul
mov
call
repnz
cmp
dec
and
pop
and
into
in
jo
cmpsl
jecxz
out
stc
pusha
xlat
je
lods
add
loop
stc
cmp
out
stos
sbb
xchg
fstpl
jne
push
pop
mov
push
add
xlat
lds
lcall
and
pop
jb
loope
mov
jnp
int3
jl
add
adc
jns
repnz
outsb
andb
jns
adc
lahf
jns
movsl
or
adc
lods
imul
inc
addr16
mov
lahf
mov
imul
fsub
dec
add
mov
sbb
and
jl
push
lods
dec
mov
fistpl
sub
xchg
and
push
aas
movsl
cli
imul
cmp
dec
jns
movsl
push
repnz
mov
mov
mov
mov
xor
inc
mov
xchg
dec
dec
pushf
aas
fadds
push
mov
lods
out
xor
jne
in
mov
in
mov
incl
dec
pop
shll
xor
cmpsl
push
into
xor
xor
je
imul
jbe
mov
call
push
scas
ljmp
add
and
pop
loope
push
sub
sahf
cs
js
pop
popf
std
cmp
adc
xchg
mov
scas
cmc
orb
in
repz
sbb
add
insl
aas
pop
xor
dec
xchg
xchg
and
mov
mov
mov
ficoms
call
cld
aad
shlb
mov
cmc
or
fnsave
sbb
mov
push
rcrb
js
adc
or
ja
icebp
xor
push
mov
lahf
push
inc
fisttps
push
addr16
adc
pop
cltd
jno
hlt
aaa
pop
int
ljmp
repz
bound
inc
cmpsl
xor
mov
adc
push
lcall
sarb
cwtl
es
adc
cli
les
mov
imul
cmpsl
inc
jae
in
cld
rorl
setne
cmp
fldln2
aas
xor
add
aad
aaa
popa
call
dec
out
outsb
push
dec
pop
fstl
sub
xor
pop
xchg
test
fsubrs
call
cmp
ljmp
pusha
mov
call
sub
pop
mov
popa
inc
dec
pop
sbb
jl
jecxz
ret
cmp
xchg
add
sbbl
dec
add
stos
fcmovnbe
mov
xor
xor
jp
push
push
fistps
cmp
and
lods
xor
in
mov
push
add
push
sub
jg
in
add
pop
addb
jae
sub
js
cli
pop
mov
insb
into
stc
js
and
or
inc
enter
pop
push
pop
jmp
fcompl
dec
adc
dec
inc
mov
leave
xor
aad
mov
mov
add
mov
xchg
aaa
add
add
lods
mov
fstpl
mov
cltd
xchg
push
adc
nop
mov
inc
push
push
sbb
test
dec
xor
sti
pop
pop
fsubs
pop
dec
mov
aas
aam
jle
ret
pop
out
mov
fldenv
scas
jb
dec
xor
popf
lcall
mov
insl
lret
jnp
and
mov
pusha
std
xchg
popf
imulb
mov
sbb
lds
add
ficompl
jae
jecxz
and
sbb
lret
add
or
jle
cmp
mov
lds
cmp
sahf
int
insl
sbb
jecxz
pop
imulb
fs
pop
es
mov
imul
xchg
movsl
rol
dec
jne
xchg
xor
dec
cmc
push
push
jo
clc
dec
stos
stos
push
dec
or
and
mov
aas
sub
inc
jo
pushf
sub
lea
aam
pop
mov
mov
xchg
sub
push
push
in
push
inc
out
stos
in
xor
adc
mov
mov
push
sarl
mov
push
pop
es
adc
repz
sub
cmpsb
ret
adc
inc
test
mov
push
scas
rol
cld
nop
mov
xor
adcb
push
mov
loopne
inc
pop
xchg
and
aas
stos
push
add
jmp
adc
fisubrs
enter
push
adc
and
out
jne
or
add
ss
ret
shlb
dec
leave
jmp
lret
xchg
mov
sbbl
repnz
ja
cmp
sbb
jg
pop
cwtl
fsqrt
push
add
jns
popa
mov
int3
adc
jle
ret
xor
cmp
jecxz
sbb
imull
inc
pop
cmp
hlt
movsb
inc
arpl
inc
nop
push
dec
in
mov
adcb
cmpsb
and
in
scas
mov
gs
les
mov
ret
fiaddl
add
jg
add
mov
call
cmc
repz
cmp
inc
and
test
mov
cmp
outsl
inc
cmp
daa
mov
mov
lahf
inc
les
jbe
xor
xor
cld
ljmp
movl
xchg
ss
mov
fidivl
fwait
sbb
or
xchg
push
dec
add
mov
sub
mov
sbb
lahf
sub
and
jns
mov
mov
push
ret
imul
int3
jbe
mov
sub
push
add
sub
pop
fs
inc
mov
sbb
cli
dec
jb
faddp
mov
out
pop
cmc
pop
pop
pop
mov
cltd
push
scas
rorl
mov
xor
mov
daa
pushl
mov
xchg
dec
popa
std
adc
mov
add
aad
cmpsl
push
daa
cmp
popf
das
mov
daa
loop
xchg
adc
imul
in
and
or
push
adc
and
popf
orb
mov
mov
push
pop
push
jb
fistpll
imul
xchg
imul
sti
int3
and
sti
iret
movsl
mov
xchg
leave
cmp
and
push
xlat
testl
jl
iret
std
pop
ja
leave
push
pop
mov
pusha
xlat
jnp
sbb
xchg
cmp
repnz
sbb
pop
or
jns
ds
pop
sbb
in
out
xchg
sbb
mov
xchg
push
adc
add
sub
data16
roll
pop
jge
rcrl
mov
xor
push
aad
mov
std
push
mov
and
xor
sub
and
cs
cmp
xchg
xor
fwait
jg
roll
test
mov
ds
insl
push
cmp
scas
xchg
iret
cmp
dec
rorl
adc
in
ds
fcoms
rcrb
jg
aaa
js
cld
sarl
das
pop
cld
adc
es
adc
push
std
xor
mov
cmpsb
cmp
cs
pop
mov
xor
fsts
or
enter
gs
mov
arpl
lret
cld
std
lock
xchg
imulb
outsl
scas
rclb
scas
pop
xlat
das
testl
aam
xor
mov
and
xchg
mov
mov
dec
adc
and
inc
cltd
jnp
sub
mov
xor
lret
mov
jno
jmp
mov
jmp
in
insb
mov
pop
add
sbb
repz
test
cmc
int3
sub
mov
xor
push
in
mov
jg
cmp
mov
xchg
mov
icebp
jle
jp
icebp
xlat
cmp
push
push
pop
mov
test
adc
adc
cmp
xchg
inc
mov
rclb
inc
and
mov
jno
sub
mov
pop
fsubl
fistps
aas
jno
mov
das
sub
dec
addl
mov
enter
sbb
jbe
dec
dec
or
add
cli
int
pop
inc
shufps
enter
push
jb
ja
sbbb
xchg
call
loop
mov
inc
jp
std
je
test
inc
cwtl
dec
fsubrs
mov
lock
mov
andl
add
xor
stc
pop
fists
lahf
sub
sub
sbb
into
jo
push
push
cmp
dec
inc
insb
lods
adc
shll
jb
mov
jbe
in
cmc
pop
xchg
sbb
adc
cmpsb
or
insb
mov
ljmp
pop
shrb
movb
lret
inc
and
rcrb
jp
shll
and
das
fcoms
popf
lds
sbb
cmp
es
ret
sub
fs
repz
jns
dec
lahf
insb
insl
fldt
adc
mov
inc
xchg
lcall
roll
daa
adc
mov
ret
xlat
aas
dec
aas
outsb
mov
test
scas
push
mov
pop
repnz
adc
adc
push
xor
inc
sub
add
dec
and
cmpsl
inc
jbe
sbbb
push
fs
movsb
mov
pop
lock
push
mov
mov
adc
jecxz
push
mov
mov
cmp
incl
sub
xchg
jbe
les
pop
inc
cltd
pop
out
xor
aaa
mov
leave
outsl
jge
mov
xchg
test
push
mov
das
mov
pop
push
dec
sub
ljmp
add
jns
int3
dec
sub
mov
sbb
add
mov
sub
jne
js
mov
imul
inc
inc
dec
cmp
insb
clc
jle
mov
daa
xchg
dec
pop
inc
imul
jo
les
and
out
in
pop
aas
flds
xor
sbb
jge
and
dec
mov
cmp
cmp
out
inc
shrl
mov
fnstenv
add
cwtl
psubb
rcl
outsb
sub
ja
xor
mov
jne
mov
xchg
idivl
xchg
popa
lods
adcl
sbb
xor
mov
push
sti
sub
cwtl
pop
push
aas
movsb
mov
popf
in
mov
cwtl
dec
out
and
mov
rcrb
in
mov
lock
dec
repnz
pextrw
mov
daa
mov
xor
sbb
mov
push
imul
shrb
repz
add
movsb
or
or
in
cmp
decl
fistps
cltd
in
mov
loopne
lahf
cs
sub
xchg
inc
std
push
jp
mov
fnstenv
push
es
xor
xlat
rcrl
and
pop
adc
enter
push
sub
mov
fucomip
stos
test
int3
cmp
rcrl
xor
or
jb
mov
cmpsl
adc
sbb
xor
loope
decl
jmp
je
push
lds
int
fcomps
adc
inc
mov
int
jmp
aaa
clc
loope
hlt
fsubl
mov
mov
mov
push
dec
scas
stos
sti
out
mov
sbbl
into
mov
mov
insl
lods
out
sbb
jbe
mov
stos
mov
dec
fwait
cmp
lods
inc
mov
jne
rcrl
sbb
cmp
fistl
out
call
aaa
es
mov
push
jae
fdivrl
imul
cmpsb
push
nop
jle
push
stos
les
pop
push
mov
jbe
es
out
fs
lahf
ja
roll
lock
push
sub
cmpsb
and
fidivrs
pop
lods
pop
inc
sub
pop
sub
sub
sarl
enter
xchg
stc
sub
mov
inc
mov
mov
pop
bound
dec
adcl
jmp
arpl
in
add
cs
cmp
fsubrl
pusha
mov
hlt
movsb
jae
int3
push
mov
je
ss
daa
insb
xchg
outsb
inc
sbb
clc
sbb
movsb
xor
cwtl
in
and
sbb
xchg
std
mov
pop
popa
xchg
add
sub
xor
notl
das
enter
xchg
insb
mov
dec
push
mov
mov
imul
stos
repz
hlt
shrl
pop
test
push
lret
mov
mov
stc
ds
test
lods
add
pop
repz
pop
jle
dec
sbb
scas
xchg
in
es
inc
inc
js
dec
loope
sub
add
sti
roll
inc
pop
mov
mov
fildl
xlat
repz
out
fstpl
sbb
adc
inc
push
jl
imul
decl
xchg
das
aaa
or
pushf
pop
rol
dec
xchg
outsb
in
out
test
loop
jle
cmc
adc
mov
xchg
loop
loop
push
jle
pop
test
lret
jecxz
popa
inc
test
pop
leave
insb
orb
sub
mov
xchg
pop
fucom
jp
stos
dec
xor
push
pop
fstpt
sbb
jo
loopne
dec
insb
negb
movsb
repnz
inc
in
sub
pop
adc
dec
stos
sub
dec
mov
pop
inc
mov
add
cmp
in
inc
jno
mov
lods
ret
out
ficoml
hlt
mov
adc
jne
cmpsl
jnp
jnp
loope
scas
adc
int3
cltd
xor
jbe
cld
lret
fidivrl
in
in
decl
add
pop
ja
imul
repnz
push
or
loopne
cwtl
dec
in
int
fdivrs
repnz
pop
stos
js
mov
push
fbstp
dec
ss
imul
movsl
fists
push
test
cmpsb
enter
test
lea
mov
test
clc
in
clc
and
scas
adc
cmpl
aaa
jae
addr16
push
add
mov
sub
popa
ja
pop
xchg
xor
stos
pop
xor
test
imul
lea
inc
aam
mov
fidivrl
and
jae
or
xor
test
xor
push
mov
pop
adc
sub
or
xchg
push
mov
xor
lahf
add
dec
fidivrs
mov
std
out
add
nop
clc
scas
mov
fdivrs
cs
fadds
fmull
push
popf
pop
inc
mov
stc
sub
scas
push
sub
jg
xchg
das
fwait
push
fisubrl
adc
cmc
xchg
lret
push
ror
dec
or
add
lahf
loop
rorb
cli
jge
dec
xor
pusha
test
orl
xchg
add
push
lcall
insl
out
enter
loope
mov
cs
mov
mov
xchg
stc
or
movsb
add
and
stc
mov
dec
jno
cwtl
mov
pop
and
mov
sub
or
movsb
mov
xor
lds
out
jg
lcall
loope
sub
push
pop
enter
dec
icebp
ret
aas
mov
mov
push
scas
std
test
jnp
and
pusha
cmp
into
cmp
fiaddl
mov
add
fs
test
cmc
push
cwtl
push
stos
jle
fs
nop
push
add
loope
cmc
and
pop
out
les
fldcw
sahf
rorb
lea
int
add
cmp
pop
insl
mov
jns
in
dec
pop
add
lret
scas
lds
movsb
xchg
loopne
loop
and
mov
push
sbb
push
mov
sti
or
add
int
push
rcll
cltd
movsl
xchg
repnz
xchg
mov
mov
pop
lea
call
cmp
sub
ljmp
dec
adc
inc
jp
xchg
les
mov
mov
sub
cld
mov
pop
xlat
adcb
sub
cmp
fwait
call
dec
insl
xchg
sbb
pop
mov
mov
jmp
mov
mov
jp
andb
test
rol
lods
inc
cs
xor
test
ljmp
xor
pop
jns
pop
call
jb
or
mov
jp
repnz
mov
in
dec
popf
xchg
lea
fimull
aam
scas
xchg
stos
mov
mov
jmp
or
xchg
in
push
add
mov
inc
cmc
cwtl
mov
push
mov
imul
pop
jl
out
and
xor
cmp
gs
rcll
sbb
jmp
push
pusha
pop
lds
sub
mov
aad
and
dec
add
mov
ret
and
lcall
xor
in
sahf
stos
stc
mov
imul
fst
xchg
xor
jg
mov
loope
mulb
dec
push
sbb
and
push
mov
mov
jecxz
mov
and
inc
and
sub
sti
cmp
scas
xor
jbe
xchg
leave
f2xm1
andb
add
sub
and
clc
dec
js
cs
push
lahf
sub
mov
fdiv
jnp
xorl
pop
jp
cmp
push
out
xchg
sbb
cmc
adc
fdivs
icebp
sub
jb
or
lcall
mov
mov
or
push
aaa
push
jae
aas
or
and
and
sbb
sbb
mov
movsb
dec
mov
lds
test
cmp
push
cld
sbb
test
mov
ss
inc
inc
dec
int
popl
xor
jge
push
xchg
pop
scas
mov
enter
mov
pop
fwait
jl
or
push
push
int
bound
cwtl
into
sbb
or
jmp
jle
push
lahf
test
push
mov
xor
xchg
sbb
pop
fistps
sysret
test
aad
fsub
xchg
push
stos
and
add
cld
orl
pusha
testl
fdiv
push
movsl
push
pushf
inc
testl
add
mov
js
xchg
inc
and
inc
fidivrs
sub
lds
mov
jge
pop
mov
and
cwtl
jp
push
lcall
movsl
push
sbb
mov
movsl
lcall
mov
int3
icebp
out
test
cmp
cmpsb
in
fiadds
jne
imul
mov
jne
mov
inc
adc
inc
arpl
ret
dec
lahf
or
testb
jo,pn
cmc
jae
lcall
cwtl
cltd
std
sbb
rcrl
jecxz
mov
ja
addr16
test
and
es
and
clc
fstp
jg
movsb
lock
mov
push
fldt
push
ret
out
pop
adcb
lock
stos
ret
add
fsubr
and
stc
aaa
xorl
xor
call
ja
je
xlat
in
add
pop
out
xor
push
sub
cmp
lock
insl
mov
dec
cmp
in
or
cli
pop
lret
mov
or
in
cmp
nop
sahf
jbe
sbb
and
loop
in
dec
adc
jbe
in
and
mov
jne
fldt
jns
clc
xchg
popf
mov
push
iret
test
add
ljmp
jge
in
outsl
mov
lea
test
and
or
jne
in
pop
mov
das
stos
sub
mov
dec
mov
ret
xchg
cld
xchg
jg
addr16
push
or
sbb
jge
sub
int3
cmpsb
push
jnp
leave
in
rcrl
xor
repz
data16
jb,pn
jl
out
xchg
dec
xchg
push
fsubrl
lret
fisubl
xor
stos
mov
cmpsb
and
jecxz
test
cmp
dec
cmp
mov
push
dec
jno
mov
mov
mov
add
stos
mov
push
adc
inc
cmpsb
pushf
and
xor
adc
cwtl
and
add
cmc
fldenv
out
sub
aad
das
mov
nop
mov
add
xor
mov
pop
sub
sbb
js
push
mov
or
gs
cmc
mov
jg
and
mov
icebp
inc
inc
inc
push
mov
rol
mov
add
dec
mov
inc
mov
push
pop
and
push
ds
dec
or
jmp
inc
les
rorb
lea
push
sub
ret
fsubrl
nop
out
loopne
jg
push
enter
mov
push
xor
mov
push
xchg
imul
out
pop
cmc
ret
insb
test
test
or
mull
jbe
stos
aam
idiv
insb
cs
movsb
or
aad
cld
or
mov
rcrl
xchg
cmp
fmul
addr16
cmp
aas
push
jl
xchg
push
adc
into
dec
mov
mov
outsl
rcrl
sbb
jbe
sub
dec
mov
or
js
sub
cmpsl
dec
jge
push
or
sti
mov
sub
mov
ja
icebp
lods
bound
fwait
and
mov
addl
xchg
and
xchg
or
adc
cmp
sub
movsb
test
mov
cmc
lret
pushf
pop
push
mov
dec
je
repz
mov
sbb
sbb
or
cmp
and
in
xchg
rorl
ret
test
cmp
inc
mov
ds
inc
out
mov
mov
or
int
mov
jnp
adc
daa
and
dec
jmp
inc
or
insb
rcll
and
cmpsl
aad
jae
popf
lock
shrl
push
pop
in
lock
sub
aad
movsl
adc
scas
mov
xor
push
clc
mov
testl
nop
and
stos
fwait
add
push
int3
pop
mov
imul
gs
lcall
inc
enter
push
sbb
fldcw
imul
popa
les
pop
mov
scas
push
jmp
enter
pop
out
ja
pop
inc
ret
ds
popf
sti
or
inc
bound
subb
ss
sbbb
pushf
mov
sbbb
push
lret
mov
stos
pop
inc
jecxz
push
xchg
mov
xor
jle
cmp
sbb
into
xchg
cmp
cmp
subl
xchg
aas
cmc
ds
stos
mov
fisubrs
aaa
cmp
cld
lea
lods
lret
adc
into
jb
lock
mov
test
or
and
add
cmp
sub
mov
in
push
push
outsb
pusha
cltd
xchg
jo
push
icebp
mov
xor
sbb
add
mov
jle
dec
mov
cmc
out
adc
je,pt
mov
pop
addb
in
push
cmp
jg
addb
stc
mov
leave
fimull
fisubrs
dec
jle
pushf
push
xchg
mov
sbb
mov
sbb
xchg
push
xchg
jge
stc
dec
hlt
xor
outsl
repz
sbb
lahf
dec
jl
fwait
negl
fbld
push
xor
xor
lahf
bound
fstp
add
xor
mov
xchg
rcll
arpl
pop
sbb
jmp
pop
in
mov
dec
ret
enter
loope
push
cltd
divb
mov
lret
dec
xchg
mov
pop
lahf
jmp
cmc
and
push
test
lret
dec
inc
push
or
push
add
ds
or
jb
and
add
mov
arpl
shrl
mov
pop
outsl
sbb
cmp
lods
jbe
sub
add
dec
call
sub
jo
pop
add
pop
push
xchg
and
fs
cld
outsl
rclw
repz
xchg
addr16
push
dec
mov
outsb
xchg
sub
fcoms
in
mov
mov
dec
dec
or
sbb
xchg
notb
xor
jge
icebp
mov
jns
and
cwtl
xchg
mov
lods
mov
xchg
push
insl
and
cmc
or
mov
xor
leave
sbb
adc
or
push
sub
sbb
mul
clc
pop
mov
aas
iret
int3
jl
xor
push
ret
jns
ror
cmpsb
shlb
mov
stc
add
aaa
adc
xlat
xor
lods
jmp
sbb
push
pop
sahf
jno
insb
and
out
insb
jns
roll
mov
in
scas
jae
mov
xor
add
jl
fs
sub
sbb
call
mov
sub
outsb
imul
pop
cmc
ret
jne
jne
bound
sti
and
add
add
push
gs
frstor
out
stos
sub
fnstenv
cmp
into
dec
mov
jns
sub
or
jmp
dec
data16
stos
xor
fwait
jmp
out
fadd
jmp
insb
sbb
adc
jne
xchg
cmp
inc
mov
in
cmp
ds
jne
cmp
xchg
ss
out
add
movsl
loopne
rorl
inc
and
dec
or
add
jle
sar
cli
sub
or
test
sbb
push
dec
lock
stc
jnp
dec
outsl
mov
xor
sub
mov
jmp
bnd
clc
inc
dec
out
mov
mov
dec
lret
jge
xor
jg
aas
or
flds
and
push
add
pop
xor
lret
push
test
rcl
jmp
or
xchg
int
div
div
clc
mov
mov
pop
push
rcrl
fadd
jo
cmpb
fmulp
ljmp
fsts
ret
je
leave
pop
lds
sub
sub
enter
dec
push
xor
pop
cwtl
lcall
push
xchg
les
or
addr16
lret
xchg
push
test
xchg
mov
jnp
lods
cwtl
stos
pop
jne
insb
push
push
sub
inc
test
xchg
and
push
lods
push
sub
mov
test
icebp
add
test
mov
and
pop
hlt
pop
pop
jmp
lret
js
and
jmp
jne
push
xor
mov
or
je
lcall
sub
xor
adc
in
or
cli
out
imul
out
nop
dec
add
cmc
repz
sbb
lock
xchg
dec
inc
shl
std
call
pushf
enter
leave
bound
int3
mov
sbb
sub
out
arpl
in
int3
push
ljmp
aam
test
pop
xchg
popf
fwait
ja
ljmp
xchg
lods
imul
and
stos
testb
sbb
xor
daa
out
stc
iret
or
ja
jg
je
sub
dec
dec
push
cmp
jne
lods
int
dec
mov
xchg
rclb
popf
xchg
inc
fs
movsl
repnz
adc
mov
mov
cmpsb
pop
sbb
js
add
and
outsl
idiv
sub
lock
popa
repnz
scas
jp
std
push
and
loope
mov
out
fadds
insl
imul
dec
jb
stc
fs
xor
or
hlt
dec
xchg
push
out
int3
adc
lea
addr16
ds
in
ja
and
test
outsb
setae
jb
pop
jle
scas
std
repnz
out
adc
pop
insb
shrb
popf
push
or
test
xlat
fisubrs
or
addr16
test
lcall
mov
fyl2x
sbb
pop
xchg
jg
outsb
lds
pop
mov
push
out
jp
movb
fwait
xchg
popa
scas
inc
fwait
jae
popf
lods
pop
add
fldt
add
test
pop
in
std
cmpsb
mov
or
sub
add
mov
mov
or
dec
inc
push
jge
clc
insl
loop
mov
outsb
aas
divps
fldt
hlt
popa
cld
xor
jp
rorl
pushf
xlat
jb
mov
pop
popf
adc
lcall
mov
in
cmp
rcll
push
cmc
push
addb
cmp
mov
std
loop
cs
inc
inc
call
pop
cld
fdivl
loopne
push
and
mov
aad
dec
inc
sti
or
sbb
ljmp
mov
or
inc
mov
and
mov
stos
pop
push
es
clc
or
mov
out
xchg
mov
xor
cmpsb
mov
bound
in
jo
mov
or
orl
scas
jno
scas
mov
push
jp
std
xchg
ret
or
inc
push
stc
jbe
mov
pop
fwait
and
mov
idivl
ret
cmpl
inc
cmp
sub
xchg
mov
add
xchg
testl
dec
rcrb
xchg
mov
inc
icebp
scas
jnp
jg
pushf
xor
mov
pop
lahf
cltd
xchg
mov
mov
mov
sbb
ret
push
nop
mov
inc
mov
mov
and
js
and
xor
jno
mov
mov
jle
xor
test
mov
leave
clc
gs
dec
inc
ljmp
inc
iret
cmp
divl
divl
out
dec
sbb
gs
ds
push
jmp
dec
outsl
cmp
data16
xchg
mov
sti
icebp
dec
cltd
pop
je
pop
cmc
out
jns
xchg
movsb
push
stos
adc
pop
pop
test
pop
xor
jbe
fucom
fdivs
cmp
lret
pop
cmc
stc
xor
jne
daa
pop
data16
add
and
repz
test
cmp
add
add
int3
mov
dec
cli
nop
dec
pop
xchg
and
xor
xchg
insl
adc
pop
add
xor
or
jae
mov
stos
mov
movsl
es
add
and
push
inc
pop
dec
mov
jge
cmp
jnp
sar
dec
jl
mov
iret
rclb
pop
into
sbb
xor
pushf
jbe
mov
mov
or
mov
mov
aam
scas
insl
daa
cwtl
out
dec
add
mov
addr16
pop
in
mov
ret
mov
adc
mov
shrl
xor
xorl
jae
cmp
sbb
int
xor
xor
rcll
roll
cmpsb
cmp
stc
inc
fwait
dec
dec
cmp
call
popa
cwtl
stos
outsl
fimuls
out
jl
adc
pop
cld
lret
or
cmp
mov
inc
jae
cli
ret
fnstcw
fdivrl
dec
pop
mov
aaa
add
test
dec
clc
arpl
in
shlb
inc
pop
insl
lock
lds
inc
adc
push
jcxz
enter
sarb
add
or
inc
add
icebp
dec
sbb
and
inc
pop
mov
push
adc
pusha
popf
xchg
and
adc
dec
lahf
push
loope
pushf
mov
fdivrl
mov
pop
and
fbstp
out
xchg
cld
push
or
test
xor
xchg
iret
jne
loop
sar
inc
sbb
sub
adc
dec
mov
pop
insl
movsb
or
sub
mov
pop
out
scas
xchg
jecxz
and
cmp
or
clc
ror
sub
clc
inc
and
sub
push
dec
test
add
mov
mov
cld
call
push
xchg
cmp
jecxz
add
cmp
mov
mov
push
adc
mov
dec
inc
sub
ret
dec
xchg
mov
enter
adc
or
mov
ja
xor
test
loop
xchg
rol
mov
cmp
sbb
mov
mov
test
mov
cld
jp
fnstcw
test
inc
inc
mov
pop
mov
aas
jge
test
negb
fildll
movsl
jae
pop
pop
call
xchg
arpl
or
xor
cmp
pop
rorl
mov
lcall
out
add
adc
xor
out
rorl
out
inc
cmp
mul
pushf
outsb
push
setae
xor
cmp
insb
loop
mov
jg
aam
rorb
and
iret
mov
flds
js
stos
xchg
fcoml
shlb
ds
cmc
mov
imul
jno
sbb
xor
repnz
inc
pop
mov
push
mov
add
or
sarl
aam
ljmp
or
dec
mov
loope
push
repz
cmp
jl
not
cs
push
scas
push
dec
or
dec
adc
mov
adc
fidivrs
test
add
sbb
mov
loope
int
xor
fnstcw
notl
mov
popf
sub
movsl
shll
cmpsb
clc
xchg
pop
ret
xchg
push
push
push
enter
or
mov
cli
out
pop
hlt
push
xor
xchg
fucomi
xchg
cmp
repnz
icebp
pop
dec
mov
jno
ds
ss
jge
pop
jl
xor
push
sub
cli
ja
jle
in
rorb
cmp
cmp
icebp
int3
sbb
jg
push
sub
adc
movsb
sub
arpl
iret
pop
leave
scas
push
push
xchg
sbb
mov
jns
xor
jmp
imul
jecxz
lcall
jo
push
push
insl
fiaddl
xchg
insl
decb
cmp
hlt
jg
dec
out
or
cmp
pop
push
loop
test
ds
push
dec
pop
cmpsl
xchg
icebp
dec
mov
inc
std
cmp
xchg
sbb
pop
leave
adc
sbb
fwait
andb
rcr
xchg
lahf
pop
into
inc
and
pop
jg
gs
lods
jg
sub
add
dec
inc
jmp
movsl
rorb
lods
scas
adc
push
mov
lcall
imul
xchg
shrl
add
imul
inc
inc
mov
stos
inc
pusha
js
inc
addr16
outsb
dec
push
aad
call
ret
cmp
mov
xchg
aas
fwait
add
mov
jge
add
das
loop
clc
xchg
pop
addr16
push
in
pop
faddl
xchg
lods
fwait
das
sbb
mov
push
shll
cli
xor
cmc
xchg
xlat
xchg
dec
xchg
sbb
outsl
loop
fcmovbe
daa
fnstenv
jnp
mov
dec
roll
and
ljmp
and
dec
fwait
aas
mov
and
pop
fldl
and
outsl
sub
addr16
inc
dec
popa
dec
or
ss
push
jnp
push
mov
mov
dec
mov
into
adc
jbe
sahf
jle
cwtl
mov
and
fldt
fs
jne
nop
sarb
pop
lods
adc
outsl
out
lock
adc
cmpsb
pop
and
or
mov
mov
add
or
xchg
aam
fcoms
cmp
repnz
or
idivb
and
pop
ja
cmc
push
lods
or
and
into
dec
mov
add
fsubrl
mov
mov
xor
push
inc
sahf
addl
push
ss
pushf
stos
jno
adc
pop
mov
sti
lcall
xor
jg
sbb
adc
loopne
mov
daa
jno
sti
ret
adc
lret
add
sub
inc
fucom
cmp
adc
jns
sbb
call
xchg
ret
sbb
push
mov
imul
sub
movsl
mov
pop
pop
inc
pop
addr16
js
incl
sbb
lea
repz
fst
push
mov
test
popa
sbb
icebp
mov
insl
imul
enter
inc
in
jecxz
lds
mov
lds
lahf
xchg
and
loope
mov
sbb
test
icebp
pop
adc
mov
pusha
addr16
dec
adc
mov
add
int3
xor
cmc
in
xlat
sbb
lcall
scas
mov
popa
xchg
cs
or
ljmp
add
lods
fisubs
loop
sbb
js
lret
test
sti
loope
nop
scas
mov
test
mov
or
and
aaa
sub
jmp
xchg
ss
xor
push
lahf
sbbl
pop
dec
mov
ljmp
ja
out
rclb
jbe
test
push
mov
arpl
adc
out
jl
cmc
popa
cmpsb
pushf
xchg
das
sarb
sbb
sbb
jno
or
push
addl
test
nop
rolb
ja
fwait
mull
jmp
mov
ja
push
addr16
or
into
pop
adc
jg
shrb
dec
jae
dec
pusha
mov
nop
pop
adc
xchg
add
iret
or
mov
jno
add
stos
iret
adc
lret
or
jecxz
psubb
out
mov
sbb
repnz
aaa
cmp
add
dec
sub
sahf
out
hlt
xchg
xchg
fwait
movsb
mov
push
subl
mov
scas
jo
iret
push
stos
ss
stc
or
inc
or
sub
sub
test
fistpll
adc
xchg
shll
aas
jmp
xor
mov
fwait
add
out
andl
pop
mov
inc
mov
xchg
lock
inc
sbb
enter
or
jl
iret
out
sub
sbb
cltd
mov
inc
hlt
daa
les
in
mov
icebp
mov
lahf
pusha
pop
shlb
aam
mov
jbe
pop
inc
enter
jo
inc
imul
xor
and
jns
push
sub
int
scas
ficomps
cmc
push
mov
mov
test
mov
js
xrelease
dec
adc
hlt
sub
mov
jbe
jno
loop
inc
pop
push
test
pop
lea
lods
lds
sub
jl
sub
gs
stc
andl
insb
dec
sub
mov
fidivrl
or
stos
addl
imul
cmc
or
adc
mov
es
dec
aaa
cwtl
inc
jnp
repnz
adc
repnz
hlt
pop
pop
adc
ss
addr16
jno
push
movsl
ret
mov
jno
or
xor
dec
ret
jnp
cld
lds
and
xor
mov
mov
inc
out
dec
fwait
sarb
push
mov
cmpsb
push
dec
inc
jge
mov
repnz
lahf
cmp
dec
fnsave
insl
lods
mov
cld
lahf
movsl
sbb
mov
loope
cmc
add
divl
xchg
push
clc
movsl
movsl
mov
push
push
pop
insb
push
xchg
cli
in
adc
lds
lds
xchg
lods
xchg
cmc
nop
fildl
insl
cwtl
mov
add
inc
sbb
mov
int3
cltd
lock
mov
pusha
push
test
rorb
cmp
test
aad
pop
inc
out
repz
push
call
fbstp
mov
aas
mov
jmp
and
into
adc
aad
loope
dec
call
test
xor
ljmp
bound
dec
mov
or
xchg
icebp
clc
mov
lea
lret
jo
call
fwait
inc
scas
fnstsw
pop
jo
push
xchg
lahf
mov
mov
sub
arpl
add
adc
imul
add
xchg
inc
pop
bnd
xchg
push
outsb
pusha
cs
sub
sbb
loop
push
sbb
push
mov
cmpsl
adc
out
push
jnp
scas
negb
xchg
mov
sbb
mov
nop
and
mov
dec
push
pop
inc
cmp
mov
pop
stos
pop
ja
mov
adc
loopne
or
mov
xchg
push
adc
push
or
push
test
mov
xchg
int
inc
es
sti
inc
sub
imul
sbb
push
mov
xchg
dec
test
cmpsb
movsb
inc
mov
mov
push
into
movsb
or
stos
and
cmp
imulb
mov
mov
pop
mov
xor
sbb
xorl
cmp
pop
sub
mov
pavgw
add
and
ja
dec
arpl
cs
cmp
sbb
call
adc
sbb
sub
dec
mov
fmuls
aas
dec
xor
adc
or
shr
lahf
jbe
jecxz
lcall
mov
stc
and
xorl
rcll
cld
adc
lods
call
mov
loop
aad
faddl
push
lds
xor
jge
inc
daa
fwait
mov
pop
pop
cmc
dec
cld
pop
inc
scas
arpl
adc
xchg
jg
add
or
add
ret
xor
sub
dec
mov
pop
sub
shufps
xchg
lods
dec
popf
push
daa
loopne
cmpb
fists
cld
loope
xor
and
sbb
jle
popf
out
xchg
mov
pop
dec
cld
sub
mov
xchg
ds
mov
sbb
or
cmp
mov
filds
xchg
outsb
dec
push
inc
jnp
ficoml
mov
sbb
push
pop
inc
sbb
ds
aas
hlt
stc
filds
dec
hlt
inc
jecxz
pop
cmp
mov
es
nop
arpl
jo
ds
inc
sbb
sbb
adc
js
adc
jecxz
sbb
dec
cs
mov
bound
jp
out
mov
sub
pop
js
xchg
push
int3
jp
xchg
mov
jmp
movsl
mov
push
out
jo
pop
out
pop
xor
in
mov
sub
mov
mov
mov
mov
sahf
push
adc
nop
mov
inc
shll
cmpsb
xchg
sbb
mov
ficoms
inc
jle
lds
test
movb
es
leave
mov
sahf
jbe
ret
adc
repnz
xchg
and
and
mov
adc
test
dec
divb
cmp
test
outsl
popf
enter
stos
add
in
aad
xchg
push
dec
clc
hlt
fisttpl
jns
test
mov
pop
pop
inc
sahf
cmp
add
push
mov
xchg
dec
mov
ficoms
and
mov
lret
push
clc
fucom
fldln2
or
enter
pop
lret
push
cli
and
jno
pop
enter
loope
xchg
icebp
dec
xchg
ficompl
pop
mov
ret
sbb
jns
mov
scas
in
outsl
adc
adc
pop
idivb
sub
cli
imul
sbb
loope
js
cli
sbb
pop
dec
add
jae
clc
add
mov
imul
outsl
mov
aad
pop
mov
mov
sbb
ljmp
xchg
jne
xchg
cs
jae
stos
movsb
xchg
js
popf
ljmp
inc
pusha
mov
xchg
jg
imul
cmp
xor
stc
sahf
inc
jne
jo
stos
dec
inc
jns
push
inc
pop
lcall
outsb
pop
in
jo
sbb
mov
push
into
lods
pop
int
inc
mov
pop
jg
sub
mov
lret
mov
cwtl
lods
push
inc
in
mov
mov
cmp
or
mov
pop
xor
push
repnz
bswap
es
arpl
pop
stos
pop
cwtl
fwait
and
fists
mov
inc
inc
mov
icebp
inc
daa
test
lcall
rcr
rdpmc
jbe
outsl
loop
movsb
or
dec
inc
mov
push
leave
sub
je
dec
adc
jge
lock
mov
pop
xor
das
test
inc
push
lcall
int
mov
xor
xchg
sbb
xlat
dec
lea
adc
sub
xchg
push
cmpsl
sub
js
xlat
cltd
push
add
std
jp
or
sti
pop
enter
xchg
loope
push
add
mov
xchg
mov
test
inc
dec
inc
sub
adc
out
movsb
out
cs
xchg
push
daa
data16
clc
and
sbb
and
jne
pop
mov
ja
inc
dec
loopne
data16
add
int3
xlat
mov
cmp
fwait
mov
xor
sub
adcb
mov
mov
fwait
sbb
add
jae
sub
je
mov
test
mov
pop
dec
int3
mov
shrb
pop
push
pop
or
push
in
push
in
sub
in
imul
leave
cmpl
iret
and
add
adc
mov
repnz
jns
stos
xor
out
mov
cmp
shll
je
and
aam
aaa
shlb
cmp
loopne
dec
and
fildl
ja
enter
les
inc
and
inc
mov
jne
stos
inc
sti
jmp
cmpb
xchg
sbb
aaa
sbb
ret
jmp
aad
pop
iret
divb
sbb
push
sub
aas
add
xchg
in
ljmp
in
xor
add
jl
sbb
xchg
pop
cltd
mov
xchg
imul
and
mov
ret
sub
cs
mov
ds
imul
mov
sub
loopne
lea
pop
xor
ret
je
xchg
in
incl
repnz
adc
movsb
sub
xlat
and
rcll
adc
jmp
lcall
insl
dec
repnz
outsl
mov
dec
pushf
adc
aam
and
loopne
push
push
lds
testl
cmpsb
in
or
lea
or
mov
or
pop
aad
mov
ljmp
jmp
shlb
xor
into
cmp
inc
jecxz
push
push
sbb
push
scas
adc
shr
repz
mov
xchg
sbb
addr16
cltd
repz
cltd
push
or
mov
or
push
or
mov
adc
jp
or
test
fmuls
mov
and
mov
cmp
jmp
jp,pn
xchg
lahf
pop
out
push
cmp
or
push
jb
or
cmp
mov
or
xchg
data16
outsl
jmp
adc
mov
dec
sbb
cltd
or
stos
lret
ds
cmpsb
sub
mov
fnstenv
imul
inc
mov
jo
ja
shl
sti
pop
ror
scas
xor
xchg
insb
cltd
pop
sbb
adc
je
mov
in
mov
mov
scas
sub
les
sub
subb
ljmp
movsl
adc
repz
sbb
jmp
adc
jle
cmc
inc
mov
sub
imul
fabs
pop
into
not
scas
arpl
int3
push
cli
jg,pn
jnp
hlt
cli
or
or
hlt
int
popf
push
inc
rcrb
or
std
daa
enter
mov
in
ret
out
int
fsubrp
outsb
xor
popf
and
mov
adc
xchg
femms
and
jns
fadd
imull
jg
mov
jae
clc
pop
jno
ds
jbe
jbe
leave
sbb
fisubl
push
lods
sub
fcomps
adc
outsl
pop
mov
xchg
scas
mov
popa
pop
clc
pop
mov
fsubrp
cmpsb
mov
std
imul
dec
cld
mov
enter
cmp
dec
jo
ss
xchg
lcall
fmuls
cmc
dec
push
inc
dec
adc
adc
sarb
xchg
mov
xchg
cmc
jle
pop
iret
mov
dec
pop
add
jge
mov
and
lods
xchg
ja
sbb
in
mov
outsb
or
xor
xchg
add
pop
enter
shrb
push
fimull
ret
fnstcw
into
and
pop
push
dec
mov
stc
ljmp
lods
xor
cli
sahf
out
mov
inc
icebp
addr16
jge
in
lea
adc
mov
imul
sub
cmpsb
nop
and
stos
push
push
jns
inc
jae
iret
insb
inc
xor
insl
fmull
mov
popa
pop
push
sbb
pop
call
adc
idivb
mov
inc
out
test
lret
inc
clc
sub
mov
xchg
inc
push
and
jo
jo
pop
push
mov
cmc
pop
and
pop
aam
cltd
pop
pop
roll
idivb
pop
xor
loop
inc
push
cmp
mov
inc
push
stos
ljmp
push
fwait
movsb
sti
adc
mov
adc
push
cmp
scas
cwtl
sti
stos
test
push
mov
ds
mov
xchg
dec
push
ret
lret
ja
pop
xchg
fs
mov
pop
lock
xlat
shlb
outsb
pop
imul
daa
jne
int3
inc
mov
sub
dec
mov
sbb
bound
and
dec
loop
mov
and
insb
vpandn
pop
mov
push
inc
push
pop
and
sti
sbb
push
pushf
or
je
or
adc
lret
shrb
outsb
mov
mov
or
mov
inc
sbb
xor
cwtl
sub
fmul
or
push
adc
cmp
leave
mov
sbb
outsb
das
jg
jbe
test
into
cmp
scas
xor
cltd
inc
movsl
xor
inc
or
and
and
mov
push
push
fabs
aas
push
lcall
scas
mov
jge
push
mov
test
nop
loope
pop
adc
mov
int3
jp
ffreep
stos
mov
shlb
cmp
xor
incl
cld
cmpsb
sbb
push
push
test
mov
lret
popf
lret
imul
mov
jg
lahf
inc
cmp
daa
cmpsl
mov
add
mov
orl
cmp
gs
loopne
lret
jns
pop
test
cld
mov
inc
push
push
xchg
mov
in
andb
and
mov
add
lock
adc
popf
cmp
lahf
xchg
add
test
imul
jae
aad
fistpll
xor
sahf
int3
mov
xorl
mov
out
cld
icebp
push
aam
stos
mov
cmpl
jge
cmp
jno
inc
xor
mov
pop
mov
or
cld
ret
call
mov
mov
mov
mov
bound
cld
xchg
lods
mov
pop
jo
mov
pop
ret
add
push
mov
lds
stos
gs
pop
inc
pushf
sub
lcall
test
andl
push
push
std
out
mov
dec
nop
cwtl
mov
loope
push
neg
adc
decl
stos
adc
enter
or
mov
scas
inc
movsl
and
mov
fistl
xlat
cli
xorl
ja
inc
sbb
jmp
cmp
lret
jne
out
test
sbb
xchg
push
ja
test
jne
pop
fadds
cld
mov
clc
push
cmp
les
pop
aad
mov
mov
pop
adc
in
push
loopne
inc
insb
mov
dec
inc
dec
pushl
jmp
int
push
jp
adcl
loopne
into
xor
adc
scas
jb
das
es
test
adc
stc
inc
sbb
xor
mov
pop
push
ret
mov
cmp
imul
mov
cs
xchg
aam
hlt
xchg
xchg
jge
push
das
or
in
idivb
jns
mov
test
rol
push
enter
cwtl
mov
mov
lea
out
push
adc
push
sti
sbb
fldl
pop
fs
rol
xlat
inc
ret
leave
jbe
iret
addb
sbb
push
or
cmp
jne
data16
adc
xchg
add
cmp
enter
xor
pop
or
xchg
jp
and
add
jns
lods
rcrb
cmp
std
dec
mov
jl
arpl
cltd
push
mov
or
fdivr
xor
mov
add
fistps
ss
insb
in
cltd
andl
stos
fwait
lock
aad
or
in
xor
push
sub
inc
js
out
jbe
xor
dec
pushl
std
or
mov
pop
cmp
push
aam
jnp
test
sbb
in
and
outsb
cltd
mov
les
jb
leave
fildll
xor
mov
insl
ss
jb
idiv
popf
ror
pop
ds
dec
xor
fisubrl
fidivrs
in
cmp
inc
xchg
mov
jmp
adc
pushf
out
adc
pop
repz
outsb
inc
mov
and
jmp
dec
push
into
das
jo
jns
mov
out
inc
rol
lods
enter
xchg
xor
push
pop
xchg
jno
mov
push
lea
push
cmp
jmp
fucomip
rcrb
or
mov
push
jne
pushf
es
push
mov
test
add
add
mov
mov
dec
imul
into
fs
dec
xchg
dec
xchg
cmp
xor
xchg
dec
fadds
add
add
or
add
cmp
adc
cld
ja
cld
shll
loope
ja
es
out
out
out
xchg
push
out
in
fstp
cwtl
sti
cmp
sub
mov
sub
ss
cmc
dec
ljmp
mov
mov
mov
jg
mov
mov
js
and
stos
pop
test
nopl
int
loopne
js
loopew
push
jle
xchg
out
cmpsl
dec
add
or
xchg
pushl
test
xchg
pop
add
mov
mov
mov
daa
test
sub
insb
xchg
in
mov
outsb
push
and
stos
std
lock
adc
sbbl
rcrb
aam
inc
sar
mov
icebp
or
sbb
mov
cmp
mov
iret
fs
push
call
outsl
xor
or
push
push
xchg
leave
jle
ds
jmp
jmp
dec
imul
mov
aaa
push
aas
cmpb
sbb
popf
cmp
sbb
scas
push
daa
or
fisubl
subb
mov
imul
pushf
jbe
push
and
negb
inc
xchg
out
pop
cs
and
adc
mov
sub
ja
lods
dec
cmp
movsb
adc
aad
imul
cmp
test
cmovnp
adcb
push
mov
adc
lahf
gs
mov
mov
rclb
push
push
xor
push
sbb
jbe
jo
testl
hlt
or
mov
jnp
icebp
loopne
rorb
aaa
lret
in
test
or
adc
push
ljmp
pop
mov
xor
aaa
sti
mov
fninit
jno
push
mov
pop
sahf
push
int
jae
mov
sbb
cmp
lret
jns
push
xchg
movsb
add
lahf
dec
mov
xlat
inc
adc
out
mov
jp
mov
jecxz
jmp
test
jmp
inc
lcall
xchg
pop
ror
idivl
inc
daa
dec
sub
inc
mov
jne
out
mov
jbe
mov
ja
stos
loopne
gs
call
pop
pop
test
scas
or
pop
jle
sti
jae
pushl
push
sbb
out
loope
cwtl
dec
sub
xchg
sbb
test
rcrb
fwait
dec
out
in
pop
cli
ljmp
and
scas
mov
push
rcll
stc
xor
add
dec
sbb
stos
sbb
sbb
scas
add
xor
imul
movsb
ret
std
xchg
push
sbb
pop
pusha
test
scas
sahf
jle
xchg
flds
jbe
mov
sbb
jmp
cli
movsb
xchg
in
mov
test
fwait
test
sub
fisubl
jge
jb
inc
add
aaa
orb
dec
pop
adc
es
jne
sahf
lahf
inc
loope
cli
or
cmp
mov
pmaddwd
mov
inc
aad
mov
mov
rol
mov
mov
cmpsl
punpckhwd
or
imul
cmp
mov
pop
add
ljmp
jo
daa
cltd
fdivl
lcall
loopne
stos
rcrl
mov
test
inc
or
sahf
inc
dec
call
xor
mov
jnp
fidivrl
sbb
loopne
mov
clc
mov
movsl
xor
in
xchg
jb
mov
sbb
pushf
xlat
sub
sbbb
xchg
das
jge
das
cwtl
push
xchg
jb
dec
mov
es
cltd
clc
fildl
lock
pop
push
sahf
lea
ror
xor
pushf
jp
aad
mov
das
sbb
test
pop
xchg
xchg
inc
iret
xor
popa
dec
test
dec
mov
dec
cmpsb
jnp
add
les
aad
imul
pop
aam
cmp
add
out
je
cli
jle
jecxz
outsl
sub
mov
mov
pushf
scas
sbb
orl
or
add
push
enter
xor
pusha
test
mov
repnz
jns
fisubl
jb
mov
arpl
inc
mov
jbe
je
mov
jge
xchg
or
mov
pop
aam
jnp
push
jge
sti
push
scas
scas
addr16
mov
xchg
xor
cmp
pop
add
fistpl
inc
mov
cmp
xchg
sub
dec
ljmp
test
bound
enter
out
ret
sbb
sbb
scas
or
jge
js
pop
mov
xchg
cmp
int3
mov
sub
push
lahf
jb
arpl
ficompl
pop
xor
jo
imul
rolb
dec
int3
lahf
cs
scas
outsb
ljmp
lea
mov
in
fcoml
push
adc
lcall
les
fsubl
addr16
push
frstor
add
dec
les
aas
aaa
sub
jp
cmp
scas
adc
add
adc
fmull
scas
push
insl
fcmovb
ret
repz
or
gs
inc
pop
sti
push
das
aas
mov
cmpsl
mov
movsl
rorb
pop
jp
mov
pushf
xor
setbe
and
mov
pop
push
test
ss
mov
mov
mov
in
inc
pusha
loop
push
mov
push
push
cmpsl
cwtl
xor
mov
add
inc
lret
lcall
loop
cmp
mov
aaa
or
cmpl
movsb
out
ja
pop
mov
adc
xchg
mov
stos
xchg
fbstp
ja
stos
adc
sbb
push
fs
mov
lods
rcl
lcall
setp
scas
popf
jo
dec
cmp
addr16
pop
pop
pushf
mov
repz
or
ja,pt
xchg
imul
jno
jmp
jecxz
inc
inc
insb
mov
sub
negb
sbb
out
test
push
in
fiadds
loope
dec
pop
not
addr16
mov
leave
jns
outsb
inc
mov
add
addb
repnz
fwait
jge
inc
xor
hlt
data16
insl
ret
mov
cmpsl
xchg
mov
rolb
mov
mov
push
pop
fdivs
push
fdivrs
adc
pop
scas
shll
jb
mov
fmull
dec
or
loopne
mov
mov
stos
xchg
mov
imul
push
fwait
test
mov
cltd
cmp
loope
adc
out
inc
pop
std
ficomps
dec
mov
shr
cmp
sbb
rcl
cli
loope
int
push
jl
dec
jg
xchg
repnz
add
jno
dec
push
pop
mov
or
cmp
imull
add
test
addr16
popa
into
imul
cmp
sbb
aam
repz
dec
paddusb
dec
ja
imul
sbb
jmp
jle
dec
mov
aad
enter
xor
lock
mov
inc
std
hlt
cltd
gs
or
fildll
nop
jecxz
cmp
jle
sub
movsl
stc
lds
mov
and
and
popf
ss
scas
scas
mov
mov
shrl
inc
sub
cmc
mov
sahf
mov
xchg
int
push
jbe
rorl
imul
jnp
fistps
mov
lahf
jl
xchg
push
add
iret
inc
dec
movsb
bound
adc
jl
xor
das
and
lahf
mov
sub
lods
arpl
in
cmc
js
and
repnz
ja
daa
hlt
xor
ficoms
cmp
int
sbbb
mov
leave
imul
stos
push
pop
rcll
repz
testb
adc
fsubrs
jmp
push
jb
out
dec
out
pop
mov
inc
dec
pushf
cli
sub
dec
testl
jp
pop
mov
push
cli
popf
stc
repnz
fwait
adc
ljmp
cld
dec
mov
lods
dec
andl
mov
lea
adc
shlb
or
mov
mov
mov
cmp
adc
adc
lret
dec
inc
stos
mov
cmp
or
stc
or
xor
int
pop
lahf
jb
pop
cmp
mov
mov
ret
jmp
sub
cmp
push
lods
test
lret
add
and
popa
mov
pop
fisttpll
std
push
div
push
xchg
mov
aas
mov
pop
jp
mov
insl
aaa
enter
sbb
push
and
lods
mov
lea
sbb
pushf
mov
or
dec
or
shll
cs
sub
imul
and
xor
int3
iret
out
ljmp
sub
add
mov
fwait
mov
dec
cmp
testb
test
insl
inc
adc
cmpsb
adc
mov
pop
and
push
jg
inc
cmp
std
in
je
addr16
mov
pop
push
in
inc
mov
insb
fxch
push
sub
cwtl
jo
mov
das
cmpsb
out
das
inc
cmpb
test
and
xchg
pop
mov
cmp
es
or
xor
pop
cmp
sahf
or
lahf
cs
out
inc
cltd
cmp
sub
aad
xchg
gs
cmp
xor
es
fnstenv
adc
pushl
es
push
jge
fmuls
iret
loopne
cmp
incl
clc
add
out
mov
lods
sub
out
mov
jnp
mov
and
and
pop
loop
pop
iret
mov
dec
xchg
xlat
fidivrl
adc
hlt
dec
mov
mov
sbb
mov
fiaddl
lods
sbb
push
scas
sub
mov
lret
imul
jne
mov
cmp
sub
sbb
mov
jl
in
in
call
lret
adc
push
adc
aad
je
sbbb
jg
sub
out
adc
stos
outsb
cmpsl
sub
stc
jecxz
outsl
ret
int
pop
dec
and
out
cmc
mov
rcr
mov
ds
xchg
xor
xchg
std
cmp
imulb
int3
js
std
fs
xlat
movsb
pop
sbb
adc
and
dec
mov
icebp
push
jp
or
repnz
sbb
lahf
rorb
and
adc
cmpsl
cvtps2pd
lods
push
adc
adc
or
mov
jg
xchg
cmpsb
shll
leave
fwait
cmp
imul
fdivl
dec
addb
cmp
les
push
xchg
inc
add
in
cmp
jae
inc
adc
inc
into
leave
push
adc
shll
sub
mov
nop
mov
pop
push
inc
mov
sbb
into
cmp
cmp
stos
or
fdivs
movsb
das
pop
stos
push
mov
mov
sub
jg
orl
ror
or
dec
push
pop
pop
imul
push
push
pop
outsb
icebp
jl
call
or
xchg
xor
ds
xor
dec
adc
nop
adc
cmp
xor
jo
dec
add
lods
loop
out
test
les
and
add
xor
and
mov
push
push
push
mov
jnp
je
cltd
and
enter
repz
scas
pop
push
sarl
fs
fstl
jbe
fisubrl
shl
dec
subb
test
push
idivb
imul
and
lahf
cmpsl
mov
dec
cmp
sbb
imul
ja
icebp
jmp
and
push
cmp
adc
sub
push
dec
sub
or
xchg
mov
fwait
push
scas
cmp
jl
mov
pop
xor
inc
or
movsb
mov
hlt
out
push
lea
imul
imul
xchg
or
addr16
lods
dec
pop
scas
std
out
lea
clc
aaa
mov
leave
in
xchg
icebp
lods
popf
cmp
rcrl
sbb
std
sub
repnz
pop
fildll
pop
and
in
test
sub
aas
scas
stc
jne
mov
jbe
imul
xor
mov
leave
les
idivb
push
push
shll
mov
movsb
mov
jns
mov
stos
lds
or
pop
repz
dec
fs
push
and
les
clc
imul
and
inc
pusha
test
loop
imulb
mov
and
adc
into
xlat
xor
aaa
loope
xor
xchg
push
mov
stc
sub
aaa
sahf
les
scas
dec
stc
lcall
mov
imull
insl
bound
stc
aas
jae
int
push
mov
aaa
setg
push
leave
outsl
mov
jp
enter
imul
in
dec
repnz
fucom
lret
call
fcompl
mov
inc
mov
insl
inc
cmp
out
lock
popf
les
lea
dec
xlat
mov
xor
sbbl
mov
push
mov
inc
mov
into
mov
enter
jmp
das
jg
cwtl
adc
xchg
ficoms
mov
aas
adcl
add
mov
push
mov
mov
cmp
lahf
xor
add
adc
xchg
aas
mov
out
add
lods
arpl
dec
or
adc
jno
cwtl
out
push
pop
movsb
cmp
stos
jmp
mov
test
pop
cld
mov
es
mov
xchg
fisubrl
jo
mov
leave
add
subl
mov
mov
jb
dec
mov
push
mov
inc
outsl
into
in
or
jle
out
push
loop
in
pop
subb
mov
sahf
and
cli
or
pop
and
xor
and
mov
cld
mov
jno
mov
cmp
mov
cs
in
mov
mov
mov
add
shrl
pushf
xorl
and
pushf
jnp
cwtl
adc
lcall
imul
mov
push
sub
data16
jg
fst
stos
call
loop
sub
mov
sbb
pop
movl
sbb
adc
popf
repz
mov
mov
dec
dec
jae
xchg
push
shrl
fidivrl
inc
loope
pop
popa
aam
adc
fsts
and
and
pushl
lock
int
rolb
jmp
shll
push
rol
push
add
push
repz
lods
sbb
and
repnz
out
addr16
pop
cmp
or
icebp
mov
adcb
clc
rcl
mov
mov
mov
inc
sahf
xlat
std
jns
cmpsl
pop
add
lods
jmp
xchg
xchg
ret
mov
insl
sbb
sub
testl
in
data16
cld
fs
insl
mov
dec
and
std
mov
test
repz
lret
cmp
ljmp
hlt
jmp
mov
js
mov
neg
dec
lahf
and
xchg
pop
sub
repz
sub
mov
dec
jno
inc
push
jecxz
testb
pop
aam
push
ret
push
mov
mov
les
outsl
jl
es
xchg
int3
rorb
fldcw
insb
test
call
into
dec
xchg
mov
adc
jo
xor
jge
sbb
mov
inc
mov
ds
adcb
aad
inc
mov
xor
les
test
inc
sub
cmp
sbb
in
insl
sub
insb
cmpsl
push
jne
sub
cwtl
mov
repnz
rclb
stos
jmp
lds
cwtl
pop
sahf
xor
xor
and
pusha
lds
sub
jno
dec
adc
mov
mov
mov
or
cwtl
pop
dec
ja
cltd
xchg
mov
adc
insb
xchg
pop
adc
xor
mov
int3
mov
pop
les
push
jmp
or
mov
nop
push
xlat
loop
push
mov
jmp
daa
sti
es
adc
sub
inc
xchg
orb
addl
adc
jg
sbb
mov
andl
mov
xchg
cmp
add
dec
mov
push
dec
stc
push
int
pushf
flds
xor
and
in
mov
mov
ret
xchg
cmp
imul
pushf
add
test
sti
sbb
addr16
jo
neg
fstpl
imul
iret
xlat
add
popa
add
cmpl
push
dec
imul
pause
and
sub
gs
mov
cli
dec
mov
xor
mov
or
sbb
test
xchg
xchg
ficoms
imul
stc
loop
xchg
pop
clc
mov
xor
stos
dec
sarl
and
push
add
adc
inc
and
mov
stos
sbbb
dec
mov
push
xchg
xchg
sbb
xrelease
adc
bndldx
mov
dec
cmp
cltd
out
lcall
lahf
test
and
fs
out
or
xor
jp
das
mov
imull
and
sub
fisubrs
and
mov
jae
jne
stos
jmp
sahf
int
mov
push
mov
xor
sahf
nop
xchg
ds
mov
sub
adc
mov
fwait
mov
out
scas
xor
wrmsr
jg
das
add
leave
ficoms
ds
out
aam
cmp
sub
shll
cld
idivb
mov
int3
loopne
popa
dec
cmp
movsbl
jb
sti
sbb
aas
jle
bound
fwait
lea
ret
pop
sbb
pushf
fisttpll
pop
jne
enter
push
je
dec
movsb
sti
jmp
rol
xor
js
pop
stos
pusha
add
rorb
cmp
add
es
push
pop
xlat
cmp
movsl
idivl
mov
add
xchg
mov
push
and
jl
testl
cld
int3
mov
pop
pop
out
pop
cmc
inc
cld
cli
add
xchg
cs
push
or
sub
sub
xchg
pop
mov
addr16
xchg
popa
mov
scas
mov
cwtl
in
jno
jmp
cs
pop
jle
xor
jo
test
test
sbb
adc
mov
or
loopne
cltd
sub
movsl
cmp
adc
popa
int3
mov
lret
sub
cmp
and
inc
mov
mov
loopne,pt
adc
xorl
push
leave
pop
aad
test
test
pushf
sbbl
test
inc
xor
sbb
testb
aad
movsl
aaa
xorb
filds
inc
aam
jno
lcall
xchg
addr16
sbbl
sub
and
leave
pop
push
jmp
aas
scas
jg
sub
cmp
icebp
xor
insb
test
cli
and
cmpsb
inc
scas
sub
pushf
mov
aam
lods
inc
sti
mov
or
mov
xor
arpl
mov
fmuls
insb
cmc
jae
daa
sub
cli
pop
mov
xlat
pop
mov
mov
sbb
out
adc
shl
add
mov
mov
test
outsb
sbb
pop
pop
in
pop
cmpsl
sbb
pop
cmp
insl
outsl
pop
shll
xor
and
and
jmp
or
int3
pop
mov
rcrb
test
xchg
xor
outsl
mov
mov
inc
pop
xchg
xchg
mov
cmp
xchg
mov
dec
pop
mov
inc
imul
aaa
movb
add
jecxz
jp
ja
rolb
dec
neg
cmp
das
inc
sub
pop
shl
pop
gs
cmp
and
mov
add
in
icebp
mov
sti
sbbb
frstor
cmp
scas
or
sbb
jo
adc
pop
cmpsb
jle
cwtl
stc
fwait
push
adc
std
fdivl
mov
or
mov
pop
int
lret
in
lods
xor
mov
inc
fldl
mov
push
dec
popw
push
and
gs
pop
loopne
dec
test
ret
sbb
adc
add
data16
pop
or
pop
sbb
fsubr
mov
subb
test
sub
sub
das
popa
fs
jle
pop
mov
pop
lret
aad
fistpll
mov
icebp
ds
stc
add
imul
or
ret
icebp
push
dec
xor
cwtl
int3
cmpsl
repnz
push
imull
mov
fcmovu
imul
clc
out
add
xor
cltd
xchg
shrb
xlat
sub
mov
ss
test
mov
stos
test
cmp
push
xor
insb
push
aas
add
inc
rcll
in
lret
jge
sub
xor
jne
mov
mov
incl
jbe
pop
fldt
iret
jmp
stc
sbbl
cmpsb
pop
jge
imul
inc
fadd
xor
sub
jno
dec
mov
mov
popa
shll
xorl
sbb
dec
sub
into
xor
push
cs
jns
int
hlt
dec
push
movsl
mov
or
cmp
insl
dec
xor
ror
inc
jbe
daa
std
xchg
inc
push
out
mov
stos
dec
fsubr
outsb
jnp
jbe
inc
adc
pop
push
jae
mov
xchg
xlat
scas
or
aam
loopne
mov
or
es
aam
sub
rcll
gs
shlb
loopne
sbb
test
es
inc
mov
mov
int
pop
std
insl
mov
pop
ficoml
jnp
sahf
xchg
lods
pop
xor
popf
pop
dec
aad
and
jmp
mov
jae
pop
movd
pop
push
xchg
cmp
cli
adc
dec
lcall
test
nop
push
xor
cmp
rcll
mov
mov
aaa
in
push
lds
pop
sub
jmp
and
sub
inc
repnz
repz
aam
test
mov
add
jns
fstpt
dec
xchg
orl
dec
pop
fmuls
stos
cld
inc
fisubl
shr
push
lret
pop
iret
adc
inc
addr16
rcrb
shll
mov
adc
mov
repz
pcmpeqb
pop
data16
mov
mov
dec
and
mov
insl
mov
pop
mov
dec
push
dec
xchg
jae
adc
jmp
call
pop
gs
xchg
ret
sbb
mov
add
mov
clc
fcmovnb
out
test
mov
dec
pop
insb
jne
push
push
mov
mov
mov
call
fidivrs
inc
shrl
xchg
fwait
xor
mov
inc
lods
xor
xchg
call
inc
enter
in
xchg
sbb
dec
xchg
jb
mov
mov
mov
imul
shrw
xchg
mov
lock
scas
arpl
xor
test
xchg
pop
movsb
mov
sub
or
xor
shrb
cld
outsl
pop
std
cli
mul
scas
jle
repz
in
in
icebp
repnz
pop
jg
les
nop
mov
adc
and
pusha
xor
movsb
jb
push
test
test
inc
mov
pop
dec
sbb
int
in
pop
pop
adc
cmp
lret
jb
adc
push
cmp
pop
xchg
and
mov
inc
mov
hlt
inc
adc
out
sub
int3
lock
pusha
or
xchg
in
roll
and
stos
sti
push
xlat
arpl
lock
adc
roll
mov
mov
and
loope
shlb
jp
sub
into
ds
test
ja
hlt
mov
cmp
or
and
int3
enter
iret
mov
push
or
xchg
add
cmp
mov
dec
mov
xchg
push
mov
push
mov
mov
jp
jmp
imul
shlb
or
call
inc
mov
aas
movsb
mov
sbb
mov
enter
sub
imul
adc
sub
pop
lods
insl
cmp
dec
arpl
inc
pop
inc
pop
lods
pop
adc
int
mov
push
stos
mov
dec
or
adc
out
mov
and
lds
ret
arpl
fadds
sub
lahf
call
in
fisttpl
mov
ss
adc
ret
leave
inc
in
jbe
cmp
and
xor
lret
ss
mov
scas
stc
and
xor
jge,pn
in
leave
push
pop
mov
or
or
stos
cmpl
cwtl
out
fcmove
jmp
test
or
aad
in
jno
pop
sub
mov
jl
loope
in
dec
ljmp
repz
out
xlat
xchg
pusha
jnp
adc
inc
jl
xor
push
adc
fld
add
inc
icebp
push
or
cmpsb
out
inc
mov
imul
inc
stos
lods
insb
stos
dec
shrl
lds
cmc
add
jle
cmp
push
out
outsl
fcmovbe
lock
pop
push
fisttps
jmp
popf
and
sub
adc
dec
and
into
xlat
jb
jae
clc
cmpsl
ja
cmpsl
enter
dec
mov
adcl
jb
push
aam
fs
ss
xor
mov
cmp
mov
lock
stc
mov
xor
pop
adc
cltd
sub
mov
push
rcrl
ljmp
xchg
jnp
jmp
shrl
xchg
mov
push
jb
push
es
mov
aam
scas
popa
es
lods
adc
inc
icebp
mov
jle
ds
stos
movsb
cltd
ja
pop
xchg
in
addr16
js
push
sbb
mov
push
inc
mov
mov
sbb
jb
mov
outsb
out
pop
addr16
in
lock
loop
xchg
mov
cmc
push
mov
pop
jnp
and
test
lds
mov
rcl
inc
insb
and
imul
or
or
jmp
xlat
jo
popa
sub
mov
cltd
mov
and
mov
mov
movsl
scas
xor
adc
je
lcall
adc
lret
mov
sbb
pop
fcomps
aad
inc
cmpl
xor
in
jmp
outsb
repz
roll
ds
pusha
xor
adc
std
jnp
xor
idiv
push
or
cmpsl
inc
xchg
pop
pop
jbe
mov
pop
dec
sbb
fisttps
mov
mov
subl
adc
add
sbb
mov
test
aad
aad
stos
orps
stos
lock
ret
insb
adc
mov
pushf
pop
add
fcomp
dec
popf
mov
fcmovu
push
mov
loopne
xlat
mov
popf
leave
out
mov
push
and
testb
xor
or
andb
rolb
imul
mov
push
ret
movsb
lret
or
jbe
mov
add
std
repnz
pop
mov
scas
pop
lret
jnp
adc
in
pusha
xchg
insb
in
push
icebp
addl
jae
add
fwait
ret
scas
xor
pop
or
faddl
test
repnz
in
lock
sbb
adcl
dec
arpl
cwtl
mov
or
aam
stc
pop
adc
test
push
dec
fnstenv
inc
sub
cwtl
jno
out
mov
dec
inc
sbb
cmp
dec
and
ds
xchg
pushf
aam
push
mov
jl
inc
scas
inc
sbbb
xchg
movsl
push
imul
sbbl
pusha
or
rol
sbb
pop
mov
es
dec
insb
fmull
push
pop
add
ret
push
andw
popl
jae
scas
stc
stos
ret
jne
loopne
cmpsl
cmp
lea
add
movsb
adc
add
sahf
add
sub
sti
cmp
sub
cmp
dec
lcall
ror
mov
inc
jecxz
push
daa
mov
sahf
cmpsb
xlat
int
cmp
in
mov
lret
sbb
xor
idiv
je
fwait
clc
sbb
ret
adc
mov
and
pushw
and
push
aas
sub
jae
cmp
dec
dec
shrl
dec
and
mov
inc
outsb
xchg
pushf
mov
dec
inc
jp
outsl
and
push
push
test
and
xor
cmp
jae
xlat
inc
jno
jae
push
test
stos
sub
and
stos
xchg
shlb
cmp
out
add
popa
jbe
push
shl
cmc
fsubl
jmp
popa
lods
arpl
dec
add
add
pop
movsl
pop
dec
mov
test
inc
adc
xchg
dec
and
popf
call
jb
adc
or
dec
fidivs
cvtdq2ps
adc
inc
lret
or
cmpsl
push
lods
loope
add
das
cmp
jno
and
and
cmp
dec
sbb
jge
push
add
cmc
adc
ss
add
nop
testl
divl
ja
mov
xor
fistpl
push
test
pop
or
pop
jge
out
push
mov
pop
test
rcll
popa
sub
pop
xchg
scas
cmp
and
push
lock
mov
mov
pop
fsubs
xlat
cltd
rcrb
and
jb
insl
and
mov
test
inc
in
cmc
cmp
cwtl
ficompl
sbb
pop
push
scas
stos
mov
and
push
pop
adc
pop
inc
lds
in
pop
scas
inc
or
jl
sub
cmp
ret
pop
mov
lahf
adc
adc
test
mov
int
fisttpl
ret
icebp
sbb
test
mov
mov
push
add
mov
movsl
and
outsb
les
xor
inc
stos
loop
stos
jnp
imul
mov
ror
int
pop
cmp
pop
jge
cli
mov
lahf
sbb
xchg
mov
jmp
les
push
push
xchg
jne
adc
mov
jp
in
sbb
les
mov
sub
dec
fcoms
addr16
jg
push
xchg
ss
sbb
mov
xchg
fwait
jl
lods
or
add
into
divl
jbe
cmp
mov
ss
cwtl
and
rclb
mov
pop
dec
mov
rolb
xchg
pop
and
pop
stos
jle
mov
mov
or
mov
cmp
repz
sbb
mov
mov
cld
into
rcl
sub
je
out
repz
ret
or
std
lods
loopne
rcrl
jmp
ficoml
lahf
cs
mov
jae
sbb
add
mov
inc
aaa
add
cmp
into
mov
test
clc
lahf
mov
pushf
sbb
ret
shrb
fldln2
mov
adc
les
pop
mov
pop
pop
lret
negb
adc
mov
add
sbb
xchg
pushf
or
ficompl
mov
pop
xchg
jo
addr16
sbb
loop
pop
pushf
sub
movsl
inc
jo
push
add
pop
out
push
sbb
aam
cmp
aad
mov
aad
xchg
xchg
mov
rcrb
int
xchg
das
shrb
bound
fwait
jle
pop
nop
rorl
sbb
imul
sub
in
sub
cmp
ror
push
or
xchg
movsb
or
repnz
jne
pusha
xor
pop
pop
scas
push
aad
loop
seto
fdivs
push
xor
cmpb
cmp
xchg
shrd
enter
dec
out
or
js
repnz
push
out
dec
mov
mov
pushl
rep
xor
lods
xchg
repnz
cmp
shll
test
das
mov
mov
cmove
aad
pop
adc
popf
mov
inc
cli
cmp
add
ret
jmp
dec
cwtl
mov
mov
inc
sub
sbb
push
bound
ljmp
cmp
sar
adc
push
xor
jne
sbb
dec
mov
pop
pop
pop
xor
and
shr
xchg
repnz
out
icebp
scas
in
dec
popa
das
push
xchg
jno
xchg
cmp
cmp
push
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
inc
add
adc
add
mov
add
add
add
sbb
add
add
add
add
inc
add
rolb
add
add
add
pusha
add
loopne
push
add
repnz
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
outsl
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
outsl
add
mov
add
add
add
leave
jo
add
jno
add
jo
add
jno
add
jo
add
jno
add
jo
add
jno
add
jo
add
jno
add
jno
add
je
jo
xor
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
insl
fs
xor
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
insl
arpl
xor
fs
insb
add
outsb
imul
insb
add
add
add
add
push
jno
add
add
add
add
add
add
push
add
add
add
jp
add
add
add
adc
add
mov
add
add
add
add
je
imul
outsl
jo
push
arpl
add
jae
outsl
jb
inc
inc
add
add
je
imul
inc
add
add
outsb
push
jb
outsb
je
jb
add
add
je
jb
gs
gs
popa
jae
push
gs
outsl
outsb
jae
dec
outsb
outsw
inc
