push
or
add
add
add
lock
add
add
sbb
add
add
add
add
add
enter
add
add
add
add
add
add
mov
add
add
add
add
add
dec
xor
add
add
add
add
push
add
add
add
jno
add
jg
add
add
add
lea
add
add
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
sbb
add
call
add
add
add
lock
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
insb
jae
gs
popa
insb
jne
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
imul
add
push
push
outsb
outsl
ja
add
push
insb
gs
add
add
add
add
mov
add
adc
add
xchg
cmp
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
inc
add
mov
add
add
add
add
add
xor
add
lock
add
add
mov
ret
adc
xor
lahf
cmp
lret
jl
mov
pop
out
inc
push
adc
repnz
jp
jmp
in
popl
mov
xor
cmpsl
negl
loopne
fistpll
fs
fsubs
test
addr16
aam
hlt
fs
leave
push
sbb
leave
pusha
callw
hlt
test
mov
fstp
push
sbb
jge
mov
out
jae
sub
aam
insl
out
inc
lret
sbb
push
or
cmp
pop
cmp
xchg
imul
and
stc
std
jae
dec
inc
test
pop
pop
push
fwait
xchg
lahf
cld
mov
loope
subb
pop
rep
jne
in
or
sbb
mov
sahf
mov
loope
fcomp
or
jo
testl
frstor
jmp
nop
jbe
inc
jno
cmpsb
or
xor
sahf
popa
pop
dec
pop
int3
pushf
inc
jmp
lret
adc
mov
push
cld
xor
imulb
fs
push
lds
and
daa
fisubl
pop
or
lret
incl
outsb
cmp
cmpsb
filds
inc
adc
mov
incl
imul
cli
outsb
cmp
nop
nop
xor
shlb
test
addr16
lds
lahf
mov
push
adcl
mov
mov
les
jmp
xchg
adc
jecxz
ljmp
stos
jno
inc
ret
sti
pop
dec
jbe
push
jp
or
or
aaa
mov
push
adc
xor
ffree
popa
pop
mov
scas
sahf
shlb
cmp
sub
popa
in
and
imul
mov
shrb
rcr
sbb
adc
lret
dec
ljmp
jl
or
jbe,pt
jecxz
sar
rdtsc
mov
sbb
test
lock
mov
addb
add
in
call
and
insb
mov
jae
pop
pop
mov
enter
lahf
sbb
fsubrl
cld
popa
xor
inc
pusha
aas
fwait
movsb
ret
mov
insl
bound
xor
ljmp
repz
in
adc
leave
mov
jne
mov
xor
lahf
out
mov
stos
insb
pushf
ljmp
xor
xchg
fwait
or
push
xchg
or
xchg
daa
xchg
adc
das
dec
mov
mov
jecxz
adc
cmp
pop
mov
ja
mov
mov
push
cmpsb
jmp
fistps
jmp
int3
or
shrl
mov
jge
pop
push
xchg
lods
sahf
or
cwtl
cmp
and
jne
xchg
test
int
loop
imul
adc
stos
in
or
outsl
xchg
mov
mov
jecxz
xor
sub
jl
mov
daa
nop
ret
mov
out
loopne
jb
push
mov
mov
push
movsb
add
or
mov
dec
repnz
nop
lods
or
ret
pop
or
pop
xchg
cs
or
jmp
push
or
adc
call
or
mov
sbb
sbb
andl
sub
shll
fstl
insb
out
dec
rolb
fisubs
outsb
sti
add
mov
fisubrs
dec
hlt
fstl
or
fstp
faddl
pop
das
in
lods
or
pop
pop
pushf
ret
and
dec
pop
jo
jg
mov
jbe
mov
sub
sub
test
lds
cmp
into
inc
notl
pop
stc
fcmovne
jbe
cmp
sbb
xchg
aam
fsubs
mov
lret
sub
rclb
gs
add
push
out
loope
fstps
add
shll
out
pop
xchg
in
adc
or
dec
clc
xlat
insl
xor
sbb
movsl
mov
cmp
push
xchg
into
mov
cmp
xchg
mov
jb
mov
jecxz
xor
mov
sub
shlb
movsl
lret
mov
pushf
pop
rclb
sbb
divb
pop
lahf
jmp
insb
popf
fisubrs
repnz
leave
push
ret
xor
test
rolb
cld
fwait
mov
test
jne
scas
dec
cmpsb
xlat
pop
aas
mov
push
loopne
jo
out
into
shl
pop
mov
hlt
jnp
lods
pop
scas
mov
ja
subb
int3
test
lods
pop
fidivrs
movsb
out
push
iret
sbb
icebp
jno
insl
cli
leave
mov
mov
dec
mov
xor
cmp
pop
or
adc
fsubrs
pop
sbb
jg
int
mov
es
mov
stos
mov
clc
inc
cmpl
mov
jb
sar
jb
sub
jbe
lock
test
lods
adc
fadds
inc
pop
jb
mov
jnp
pusha
cmp
xor
outsb
xchg
call
loopew
xor
repnz
push
int3
lret
pop
movsb
adc
pushf
jo
add
fwait
lods
cmpsb
lock
xor
add
push
mov
sahf
cmc
xor
cld
ljmp
mov
in
pusha
call
dec
push
pop
popf
nop
mov
inc
js
mov
push
cltd
fld
sbb
test
roll
test
dec
mov
imul
lods
shlb
rcr
cmpsl
and
xchg
rorb
gs
cld
push
push
inc
xchg
je
mov
jno
xor
ror
xchg
pop
jb
dec
or
test
or
sub
lcall
shlb
pop
push
inc
sub
inc
fs
sbb
mov
inc
sarb
jp
push
add
loope
aaa
stos
inc
adc
cs
jae
xchg
xchg
dec
popl
outsb
int
lcall
clc
fildll
outsb
adc
sub
mov
push
cld
daa
push
arpl
cli
dec
fisttpll
cmc
push
and
pop
pop
xchg
fwait
pop
xor
das
inc
mov
out
sub
lret
inc
xor
call
ret
push
dec
out
mov
jmp
jg
lahf
and
inc
xor
fisttpl
push
ja
faddl
and
sbb
stos
outsb
je
cli
add
test
mov
jae
bnd
fsubrs
movsl
push
dec
loopne
pop
push
scas
call
sub
jnp
dec
cli
inc
inc
xchg
mov
jnp
pop
pusha
insl
xchg
insb
cmp
sub
insl
sbb
clc
mov
sbb
mov
and
and
cltd
jmp
or
out
and
lret
push
out
cli
cmp
lods
mov
cld
in
xor
out
les
movsl
dec
xlat
fwait
test
int3
add
and
pop
inc
jg
dec
mov
sub
orb
inc
xchg
outsl
dec
std
test
mov
aaa
outsb
dec
mov
clc
sub
sbb
loope
shrl
push
and
aas
test
add
scas
mov
mov
mov
pop
xchg
inc
pop
sahf
mov
add
out
push
inc
or
shl
mov
mov
cmp
and
sbb
pop
inc
inc
repnz
lahf
cwtl
mov
push
sub
cli
test
inc
int
add
inc
hlt
inc
xor
dec
jo
je
leave
sub
sub
fnstcw
ljmp
out
mov
les
mov
pusha
mov
cld
xchg
outsb
xchg
imul
sahf
nop
push
push
loope
cmp
push
int3
jno
gs
push
mov
jb
icebp
jle
test
sarl
jge
enter
sub
push
or
ret
or
ret
sub
cmp
mov
in
aad
hlt
add
outsb
inc
jb
and
pop
push
sub
pusha
fdivs
inc
sub
mov
xchg
add
test
cltd
push
and
pop
inc
pop
orl
movsl
push
nop
imul
mov
int3
ds
aad
push
pop
pop
ffree
jge
shll
lret
ja
jns
loopne
popf
xlat
cs
xor
mov
sbb
and
stc
cltd
fwait
sbb
cli
cmc
push
rcr
mov
or
cmpb
fcoms
in
lahf
je
pop
jo
clc
add
add
cmp
loope
ret
pop
test
pop
push
dec
int3
push
sub
dec
and
adc
in
cmp
outsl
xlat
mov
push
lock
inc
xchg
push
das
sbb
inc
jecxz
jo
lret
sbb
mov
unpckhps
mov
inc
in
dec
or
mov
js
or
sbb
jle
mov
sarb
jns
xchg
cmp
imul
btr
clc
leave
push
xorl
cmp
mov
mov
imull
nop
cwtl
jp
cmp
pop
mov
pop
sahf
jp
fistpll
popf
ret
cmp
xchg
shll
cmp
fs
pushf
dec
push
mov
pushf
xor
xor
sub
mov
mov
or
data16
cmp
add
testl
js
aam
std
stos
je
mov
jl
push
jae
movsb
mov
sbb
repnz
cmc
and
xor
aad
adc
lea
add
pop
xchg
xchg
mov
inc
jmp
divb
sbb
lcall
and
cmpsw
lcall
mov
xor
ds
das
mov
rolb
fstpt
fcmovne
sarl
xchg
xor
lea
dec
lock
ds
testl
add
in
hlt
rcr
or
stos
adc
xchg
shlb
mov
cmp
ljmp
das
adc
aaa
add
or
jl
jns
xor
out
push
cmpsb
lods
cmc
dec
push
adcl
jbe
mov
pusha
add
cltd
mov
lods
dec
mov
mov
dec
jg
movl
pop
js
cmp
mov
xchg
mov
daa
ffreep
subb
adc
and
outsl
fstl
pusha
and
cltd
std
pop
push
cwtl
and
jne
adc
push
aam
inc
fcomps
xchg
push
divb
insb
imul
cli
fiadds
popf
divl
inc
cld
cmp
call
and
xor
push
testl
jmp
scas
jge
sbb
mov
sbb
cmp
dec
pop
inc
push
inc
pushf
inc
dec
sub
lods
dec
push
inc
mov
inc
jg
mov
imull
fisubrl
outsl
pop
adc
shlb
xchg
out
inc
loop
daa
insl
cmp
mov
aaa
cmp
enter
loopne
jmp
push
mov
dec
lods
jae
adc
xchg
mov
loopne
mov
cs
ss
int
jp
and
into
xor
add
cmp
std
mov
and
pop
aam
addb
pop
sti
mov
lret
popa
stos
push
pop
fcomp
pop
xchg
jmp
or
and
pusha
pop
xchg
mov
pop
stos
idiv
mov
pop
xlat
pop
mov
jno
ja
je
int3
pop
insb
mov
push
test
out
roll
add
sbb
and
popf
fisubrs
pop
cmp
lret
mov
add
icebp
es
add
into
adc
pop
mov
stos
fcoms
push
les
mov
mov
sbb
mov
addl
inc
int3
mov
adc
inc
insl
sub
call
sarl
dec
ss
aaa
sub
repnz
pop
imul
or
enter
inc
ffreep
xchg
mov
pop
push
inc
fwait
inc
adc
mov
xor
mov
imul
mov
mov
js
xor
iret
mov
push
fstpt
sbb
jp
xchg
gs
popa
stos
das
mov
xchg
adc
pop
push
leave
pop
sbbb
mov
int
add
js
imul
adc
dec
sub
mov
cmpb
push
enter
cs
cli
repnz
mov
jecxz
mov
jae
insb
mov
push
dec
mov
xor
push
lds
mov
das
mov
std
push
xchg
sub
jg
scas
popa
imul
add
aaa
pop
inc
sbb
nop
int
shlb
mov
inc
jl
test
jle
das
std
xchg
xchg
push
pop
popf
icebp
sbb
jo
shr
pop
dec
outsl
rclb
fadd
insl
andl
fisttpl
shrb
adc
test
mov
rclb
outsl
push
lds
jbe
mov
lcall
push
ret
clc
jb,pn
ds
inc
fwait
or
int
jnp
add
mov
push
cmc
cwtl
mov
sti
xchg
mov
mov
add
rcr
sbb
adc
mov
mov
xor
aas
popf
mov
out
insb
loope
or
lock
test
mov
les
stos
xchg
rclb
fsubl
imul
sub
loope
cmpsb
or
lods
ret
test
lods
subl
xchg
movsb
lock
push
daa
outsl
nop
jge
test
inc
out
mov
pop
iret
sub
cwtl
or
inc
hlt
pop
mov
push
mov
xchg
inc
inc
add
inc
xor
sbb
lods
loopne
movsl
lret
fidivl
adc
les
icebp
clc
push
outsl
in
sub
mov
repz
push
sub
sti
push
cmc
and
cmc
mov
test
stc
adc
inc
pushf
fdiv
addb
sub
test
add
movsb
adc
jp
je
clc
je
mov
mov
adc
imul
je
leave
in
in
sub
push
div
or
clc
xor
shll
loope
jle
cmpsb
out
mov
sub
shll
mov
repnz
jnp
shlb
es
in
ljmp
lahf
mov
jge
jle
push
adc
mov
jg
pushf
rcl
mov
push
in
loop
fisttps
fs
cli
add
xor
dec
jnp
insb
dec
mov
test
lret
lea
lods
adc
push
sub
jle
cli
jns
imull
lcall
sti
jle
cmc
dec
out
ljmp
push
jl
leave
pop
adc
sbb
or
xor
add
cs
ja
jnp
faddl
cmp
push
and
pop
lods
into
or
popa
cmpsl
cmp
stos
jp
fs
js
push
faddl
xchg
movsb
insb
or
subps
jg
popf
and
jle
adc
sbb
pop
jmp
sub
pop
inc
imul
lahf
cmp
lcall
push
sbb
nop
aam
ret
adc
xor
mov
setl
bound
call
xor
decb
jnp
leave
lock
imul
xchg
idivb
mov
dec
mov
sbb
jns
movsl
inc
std
or
bound
pop
xchg
mov
test
xor
addb
sub
lret
rol
mov
jnp
push
movsl
out
aad
mov
and
je
jmp
lahf
into
xlat
push
sub
repz
repz
rol
and
adc
cltd
stos
ss
adc
jecxz
call
insb
inc
jns
add
cmpsl
imul
stos
cld
xor
rorl
bound
in
int
sbb
repz
dec
das
adc
aaa
mov
jmp
cmp
lcall
cs
mov
outsb
lret
inc
sbb
mov
push
imul
push
adc
out
jne
xchg
mov
shll
sbb
popf
mov
or
xchg
add
inc
push
insb
aad
dec
xchg
push
testl
lret
or
cli
cmp
sub
adc
cmp
push
and
cmp
idivl
lock
and
ss
pop
mov
jnp
inc
jb
stc
push
or
gs
push
aaa
jecxz
add
outsb
arpl
push
adcb
mov
ljmp
aaa
push
iret
push
jp
inc
shl
mov
jecxz
insl
out
add
pop
outsb
into
or
push
jecxz
mov
or
jbe
adc
ss
cmp
dec
scas
add
idiv
push
inc
rorl
pushf
int
sbb
mov
shrb
adc
lahf
out
sub
add
adc
push
and
lock
daa
cmpsl
movsl
test
dec
xlat
dec
adc
xor
stc
addr16
movsb
imul
fwait
in
adc
and
mov
cmc
cmp
sahf
pop
jge
subb
sub
sub
pushf
adc
insb
int
xchg
scas
shll
push
jg
xchg
xor
fstpl
sub
cmp
gs
fs
or
pop
aas
scas
shlb
mov
lret
jo
repnz
insb
or
sub
scas
cmp
adc
fisubrl
roll
push
xchg
pop
out
fldz
fists
jmp
inc
pop
into
mov
jnp
scas
sub
ret
adc
imul
sbb
pusha
jmp
arpl
mov
pop
mov
stos
adc
xchg
xchg
test
add
lock
mov
outsb
lahf
lock
pop
jmp
cmpsl
xor
pop
mov
outsl
dec
insl
insb
inc
fs
push
adc
dec
gs
cltd
jge
dec
push
dec
mov
mov
cld
dec
adc
sub
lcall
cmp
jae
test
dec
pop
inc
jne
and
cmp
sti
addl
ds
and
inc
cltd
out
lahf
mov
ja
fs
scas
nop
in
ucomiss
and
jecxz
dec
fsubrl
jno
mov
stos
pop
mov
out
xor
mov
adc
xchg
pop
inc
inc
mov
mov
add
aam
cmp
push
or
stos
ljmp
pushf
in
fs
pushf
shlb
ss
dec
mov
pop
fs
ds
cmpsl
dec
dec
loop
outsb
pop
icebp
mov
fcompl
js
mov
pop
pop
repnz
out
pusha
mov
orb
pop
lcall
shl
dec
mov
in
subl
outsb
and
cmp
xlat
divb
out
jge
xchg
pop
push
sub
fidivrs
jecxz
add
mov
jns
push
nop
out
pop
xlat
push
insl
dec
out
add
sbb
int
bndstx
mov
cmp
lret
push
mov
in
sub
mov
or
mov
mov
lret
push
mov
xor
call
mov
mov
jae
fidivs
mov
add
inc
cmp
sti
lret
fisubrs
in
sarl
es
sbb
data16
push
sahf
and
push
sarb
mov
inc
call
scas
push
rorl
xlat
mov
andl
scas
cmp
cltd
mov
clc
bound
add
imul
pop
inc
and
pushf
push
aad
ret
xchg
insl
dec
daa
test
arpl
rcll
movsb
ds
cmp
adc
mov
mov
add
int3
inc
les
fsubs
mov
out
ror
adc
sub
or
ja
pop
fmull
in
mov
imul
adcl
jb
test
test
cmp
int
and
push
pop
iret
sbbl
test
insb
lods
ss
mov
mull
or
fimull
jecxz
sbb
ficomps
inc
outsl
mov
pop
dec
out
push
push
daa
lahf
cmc
rclb
movb
jecxz
daa
pop
loope
cmp
mov
dec
rcl
clc
icebp
inc
clc
out
xchg
jbe
mov
jecxz
fistl
push
enter
in
cs
in
mov
nop
lcall
sub
mov
hlt
insl
cmpsb
popl
xchg
out
mov
out
sahf
jnp
sahf
mov
and
call
das
jg
cmp
fdivrs
jmp
cmp
insl
orl
jmp
mov
pop
pop
mov
sbb
xor
jg
jp
fdivl
sbb
pop
lods
lds
jmp
outsl
popa
push
mov
jl
jo
pop
inc
xchg
jbe
add
and
sbb
sbb
aam
add
ret
lahf
pop
cmp
xchg
fwait
repnz
int3
mov
mov
inc
or
stos
jae
pop
jo
imul
js
shr
stos
jl
inc
int
jge
jns
pusha
sbb
clc
sbb
adc
iret
mov
fcmovb
jle
popa
idivb
inc
push
fcmove
mov
mov
and
mov
jb
out
in
xchg
scas
mov
mov
push
cld
shrb
lret
enter
jno
cmp
call
inc
xchg
xchg
dec
push
push
cmp
jns
je
adc
pop
dec
push
jbe
test
adc
sub
ret
sub
mov
xor
adc
adc
inc
adc
inc
mov
mov
test
pop
test
dec
cmp
xchg
mov
sub
repnz
iret
loope
cld
ds
jnp
imul
es
aad
inc
clc
repz
push
test
imul
imul
test
inc
outsb
mov
iret
xor
pop
adc
mov
mov
cmpl
aam
push
cltd
mov
jb
inc
sbb
dec
sbb
mov
fs
lahf
xor
test
adc
loopne
insl
sub
push
cmc
inc
aam
pusha
std
leave
sti
add
inc
push
mov
cs
cli
mov
jno
push
jl
lcall
rolb
movl
mov
cli
xchg
xchg
test
pop
es
in
push
mov
shll
rcll
cmpsl
xor
into
shrl
rolb
mov
imul
adc
xchg
mov
lahf
loope
push
lret
insb
xchg
cmp
addr16
int
dec
or
push
out
cmp
xor
mov
cmpsl
inc
ror
jb
mov
sbb
add
jo
cli
out
lea
out
cmp
cli
lret
cmc
pop
dec
and
sbb
jle
pop
jmp
in
testb
inc
std
lret
dec
pop
mov
fmuls
leave
in
xchg
fiadds
jo
pop
fildll
ret
jle
adc
js
lods
cwtl
popa
in
push
mov
fsubl
add
fwait
push
fisubs
pop
sub
jmp
fsubs
add
cmpsl
into
int
push
or
xor
dec
sbb
lods
mov
add
ss
ds
push
idiv
lods
out
cltd
xchg
sbb
mov
push
lods
js
pop
stos
imul
jne
add
cmp
daa
or
adc
inc
push
stos
and
jge
xchg
fnstenv
dec
flds
imul
jge
mov
mov
test
cli
mov
adc
fisubl
sub
sahf
aad
into
push
push
fimuls
loopne
mov
cmpsl
jle
fcoms
xor
dec
jb
movsb
mov
dec
dec
call
xor
movsb
mov
mov
in
mov
mov
rcrl
aaa
jmp
adc
xchg
dec
bound
repnz
out
pop
test
xor
dec
inc
pop
cli
sbb
imulb
xchg
mov
call
out
inc
adc
push
mov
push
ret
push
js
out
sbb
xor
jle
or
cwtl
adcb
testl
arpl
fsubrl
mov
inc
mov
int3
cwtl
fsts
mov
jae
adc
cli
rorb
xor
ds
lret
cmc
add
lret
aaa
insl
sbb
mov
aas
sti
adcl
and
enter
sub
test
cmpl
das
loop
xor
sub
pop
pop
push
xchg
cmp
inc
inc
addl
fcmovne
nop
and
mov
mov
dec
imul
cmp
jge
jae
cmc
std
bts
rol
insl
imul
push
aaa
mov
repnz
std
negb
int
push
jb
jg
int
cmpsl
imul
daa
push
or
and
addr16
cmp
cmp
cmc
fistps
sbb
arpl
stos
nop
shrl
and
add
push
fmul
sbb
xchg
fsubr
jnp
rcrl
into
pop
ret
inc
fwait
jmp
in
popa
mov
test
cmp
mov
repz
add
lret
sub
xchg
and
cmp
aas
xlat
push
push
inc
mov
mov
dec
insl
mov
lcall
mov
test
aas
aaa
dec
mov
wrmsr
scas
inc
and
rcl
das
cmp
das
push
repz
in
mov
mov
das
sbb
dec
mov
lods
es
push
dec
mov
fs
jle
orb
sbb
stos
js
clc
addl
xchg
dec
or
jle
and
lret
adcb
mov
add
jo
ds
fiaddl
push
dec
dec
cs
jb
ja
adc
or
add
hlt
mov
iret
pop
cltd
pop
out
and
sub
pop
add
out
mov
fistps
and
push
xor
fcmovnu
hlt
idivb
out
imul
xor
push
sub
xchg
popf
jmp
jecxz
cmc
add
mov
ret
div
jno
negl
dec
lds
jmp
sub
std
xor
inc
mov
outsl
and
mov
mov
lret
clc
cld
scas
bound
jno
leave
push
jnp
testl
jb
mov
fcomp
lret
push
mov
into
mov
xor
cmp
cwtl
lret
cwtl
xor
lock
xchg
ljmp
repnz
jae
es
xlat
aaa
xchg
leave
in
push
xchg
sbb
arpl
bound
adc
jno
mov
inc
xor
outsl
std
push
stc
sub
frstor
push
xchg
sbb
mov
int3
cmpsl
clc
lods
xchg
mov
les
push
adc
jb
rorl
push
push
pop
lcall
popf
jmp
push
push
arpl
jl
sbb
pop
ret
js
sub
pop
aaa
mov
popf
or
mov
lods
mov
loope
insl
inc
bnd
mov
cmpsb
add
sub
test
scas
and
mov
xor
cmpsb
xchg
adcl
mov
add
data16
mov
orl
push
jmp
jecxz
clc
iret
cmp
bound
divl
cwtl
fmull
repnz
dec
iret
int3
jnp
push
test
xadd
dec
jo
pop
pop
mov
add
sti
ljmp
in
add
xor
aaa
jmp
push
stos
sbb
mov
cmp
enter
outsb
xor
inc
sub
and
push
mov
xor
jle
js
and
xor
xchg
sti
mov
cmp
push
sbb
cs
or
nop
insl
scas
call
lods
inc
shufps
loop
add
dec
or
sbb
sub
scas
aad
push
cmc
loope
imul
shlb
inc
and
shr
mov
sti
pop
inc
push
pop
aam
xchg
icebp
inc
mov
out
lcall
adc
push
dec
aas
outsb
mov
jbe
out
ds
mov
loopne
out
sub
ss
xchg
pop
aam
mov
ljmp
mov
and
xchg
push
stos
jb
jge
testb
and
ror
mov
fstpt
sarb
sbb
xor
adc
ja
aas
inc
adc
cmp
jmp
add
imul
or
out
cmp
and
cld
push
xorb
les
cmp
cmp
or
sarb
lret
hlt
push
out
loop
out
cmpsb
mov
push
mov
dec
lock
mov
mov
data16
adc
orb
xchg
mov
adc
fldcw
clc
xchg
das
or
xor
add
push
cwtl
stc
and
repz
inc
aas
pop
in
out
rolb
inc
xchg
leave
and
pusha
shl
addl
stos
mov
test
sub
shll
jns
sbb
inc
inc
dec
sub
mov
pop
aad
rol
add
aaa
jmp
cmp
cmp
fcmovbe
xor
fucomip
push
mov
sub
stc
add
adc
xchg
mov
xor
mov
fsubrl
cwtl
out
out
mov
mov
fidivrl
in
sub
cltd
push
js
lock
sbb
inc
pop
fsts
pop
fistl
add
push
inc
xor
mov
aas
test
cwtl
add
lret
push
lds
in
ds
stos
sub
loopne
mov
aam
xor
test
jmp
xor
mov
push
leave
mov
pop
call
mov
cmp
push
pop
stos
fcoml
addr16
pop
jno
test
icebp
xchg
loopne
lcall
mov
btr
mov
or
mov
sti
mov
arpl
push
arpl
sub
push
cmp
sbb
add
inc
fwait
lret
pop
cwtl
add
pop
push
mov
lods
xor
loopne
xor
cmpsl
mov
mov
add
fs
int
mov
sahf
popf
arpl
fstpl
imul
xchg
das
sub
xor
pop
mov
pop
lds
pop
adc
aam
cmp
notl
scas
jge
push
or
cld
ja
mov
lcall
pop
dec
pop
sub
mov
mov
cmpsl
add
div
jle
xor
or
scas
or
mov
adc
jae
insb
mov
scas
aaa
mov
mov
loope
lcall
js
jae
or
leave
mov
aam
lock
mov
mov
and
inc
dec
cli
inc
mov
shrl
leave
jb
xchg
movsl
cltd
mov
popf
lods
jbe
shll
adc
adc
xchg
pop
ret
std
aam
addr16
sub
inc
nop
fcompl
iret
les
sub
sarb
shl
jae
xor
sub
ret
push
pop
clc
loope
ret
xchg
js
inc
and
mov
imul
in
and
mulb
inc
xlat
xor
std
lret
insl
or
dec
pxor
inc
cmp
subb
cld
sub
sti
and
pop
fcomp
pusha
push
daa
iret
sub
jno
add
push
mov
or
sbb
shll
outsb
adc
dec
cld
inc
loope
push
out
data16
pop
stos
mov
mov
clc
mov
orb
subb
outsl
in
push
orl
icebp
addr16
cmpsl
aaa
xor
in
mov
inc
subb
sbb
add
push
sarl
incl
push
mov
xchg
add
dec
jl
daa
mov
dec
mov
jl
stc
jns
jo
out
arpl
imul
mov
push
mov
and
xor
sbb
in
insl
mov
mov
insb
cld
out
imul
or
pusha
out
add
test
jle
loope
out
pushf
fldt
push
loop
fists
in
enter
shll
int
sbb
mov
sbb
inc
sub
int3
lods
out
mov
mov
xor
mov
in
ret
jg
lret
pusha
add
ficomps
push
mov
scas
push
sub
testl
xchg
xor
outsb
inc
fidivrl
nopl
loop
lock
and
insb
pop
dec
out
mov
mov
adc
ja
ds
xor
pop
mov
add
cmc
in
push
sub
shlb
push
mov
ja,pn
xchg
push
bound
std
loop
pusha
mov
or
cmpb
cmp
and
fadd
xchg
jae
scas
xchg
pop
cmp
sahf
dec
lcall
xor
loope
int
mov
cwtl
adc
mov
inc
pushf
lcall
iret
in
scas
insb
xor
and
lret
outsb
les
cmp
hlt
insb
in
mov
xor
aaa
dec
iret
lahf
mov
xor
adc
fistl
movsb
or
fldt
jecxz
inc
lods
push
rcr
fildl
jge
orb
cli
into
adc
or
cmp
movsl
loopne
loopne
xchg
cmp
mov
mov
push
cmp
outsl
daa
cltd
and
pop
arpl
inc
cmpsl
jmp
xor
mov
xchg
out
and
jl
popf
xor
pop
inc
sub
push
xor
add
int3
repz
mov
movsb
mov
xchg
divps
push
push
xor
jbe
sbb
push
push
addr16
out
cmp
pop
popa
leave
orl
repz
sub
or
mov
in
add
imul
lret
push
inc
insb
mov
cld
xor
pop
mov
fwait
jbe
fsubl
mov
cld
hlt
jg
nop
cmp
xor
dec
subb
cld
push
jmp
pop
xor
mov
pop
mov
rcrb
cld
sbb
popf
inc
xchg
push
jnp
sbb
das
adc
das
out
fnstenv
lods
imul
pop
mov
out
add
pusha
jbe
sbb
xor
stos
or
cwtl
fisubs
xchg
xchg
cs
push
mov
scas
cmp
gs
inc
lock
cld
jo
push
popa
outsl
mov
mov
jmp
call
inc
and
inc
mov
and
inc
mov
inc
lret
jecxz
add
adc
mov
outsl
or
push
mov
push
sub
bound
xchg
ljmp
rcr
inc
cmp
pusha
inc
cmp
jne
mov
dec
lods
xor
gs
pop
test
test
xchg
push
mov
add
push
mov
imul
imul
mov
cmpsb
push
and
pop
push
or
sub
inc
insb
adc
loop
xlat
test
mov
pop
in
xchg
test
cmp
iret
mov
jnp
and
mov
mov
sub
sahf
sbb
inc
cmpsb
popa
addr16
sbb
push
imul
imul
mov
push
aad
adc
pop
xlat
xor
push
subb
call
scas
shlb
stos
and
hlt
adc
cld
and
add
jbe
and
inc
xor
add
xor
dec
adc
jge
in
jne
sub
or
pop
flds
pop
jbe
pop
not
sbb
fnstenv
mov
out
repz
dec
ret
mov
in
bound
mov
outsl
push
pop
or
xchg
test
sub
mov
xchg
dec
and
inc
jne
setg
icebp
aad
gs
push
mov
mov
jmp
subl
fsubrs
dec
sub
add
xchg
repnz
cmpsl
sbb
sub
pop
mov
mov
inc
push
mov
pop
sbb
mov
fs
sbb
sti
ss
add
into
sahf
pop
cs
jg
test
cmp
fs
sbb
jp
lret
cltd
mov
clc
pusha
sub
rcrl
loop
mov
loop
sub
cmp
cltd
pusha
cmp
pop
push
outsb
and
sbb
xchg
pop
xchg
idivb
stos
adc
ret
cmp
inc
rcrl
sahf
loope
clc
and
jle
lret
mov
add
cld
xchg
fnsave
mov
lods
out
lea
mov
pop
inc
xor
xchg
mov
lcall
std
and
aam
push
jle
cmp
jb
pop
adc
jne
cmpb
mov
mov
push
sbb
pop
in
jmp
int
pushf
imul
mov
pop
mulb
cli
dec
jo
ret
scas
rcr
dec
or
adc
in
repz
aaa
cmp
sbb
sbb
xchg
out
cmpsl
test
lods
sarl
jbe
mov
and
ss
enter
dec
or
sub
pop
push
sti
cmp
and
and
mov
sbb
sub
mov
xchg
cli
loop
popf
ret
mov
iret
xchg
das
push
jo
fsts
pop
jae
or
inc
mov
xchg
and
jbe
mov
lock
dec
sub
mov
add
jae
sti
pop
pop
lods
ja
add
jp
stos
fldt
jbe
cmp
mov
dec
mov
popa
icebp
lret
lahf
shrb
lea
mov
call
test
iret
pop
mov
enter
and
cmpsb
inc
inc
xor
inc
movsl
jmp
inc
push
or
push
ret
cltd
addr16
popa
cmp
push
andl
mov
sub
cmpsl
xor
loope
and
sub
or
cs
xor
jg
cltd
inc
insb
sti
inc
mov
mov
jb
fs
inc
scas
xlat
out
xorl
pop
cmpsl
or
sbb
popf
mov
outsl
inc
inc
add
in
and
repz
or
test
push
fistpl
xchg
xchg
add
or
and
out
clc
scas
fsubs
mov
push
push
movsl
iret
movsb
int3
loop
xchg
in
dec
and
pop
adc
mov
shll
add
stos
loopne
inc
add
lods
sbb
stos
pop
out
ds
push
add
stos
mov
int
imul
movsb
xchg
notb
arpl
rclb
fadds
cltd
js
fwait
test
or
mov
scas
inc
cmp
pop
push
aad
scas
sti
sbb
lahf
pop
in
cmpsb
movsl
mov
in
mov
jne
cld
mov
lock
and
sub
mov
sbb
cmp
roll
aas
insl
jae
inc
out
je
mov
pop
js
pop
mov
mov
lods
pushf
xor
stos
pushf
rcll
notl
adc
lods
cltd
pop
leave
mov
shlb
mov
scas
mov
adc
call
aad
lahf
mov
cmp
mov
addr16
xor
pop
cli
ror
ds
push
jp
mov
aad
pop
mov
push
ret
xor
xor
andb
and
xor
jns
lods
dec
and
push
std
push
aad
test
pop
push
xchg
aaa
stos
xchg
ss
ficoms
inc
pop
imul
es
ja
adc
int3
test
or
ficomps
lret
cmp
xor
and
push
cmp
inc
clc
dec
jecxz
sub
push
push
inc
out
jnp
xchg
cs
test
dec
js
xor
mov
or
push
jo
mov
inc
or
and
xchg
ss
loopne
out
mov
xchg
add
push
and
xor
movsb
cmp
fdivs
sbb
inc
fs
and
xor
jns
jecxz
lock
pop
lods
ljmp
mov
xchg
push
roll
test
je
in
mov
int3
sbb
mov
pusha
xlat
or
cmp
popa
cwtl
outsb
mov
push
fcoml
inc
lret
js
xchg
push
dec
lret
std
shld
into
mov
test
out
add
jnp
das
ljmp
roll
push
pop
lahf
push
jnp
adc
lcall
or
push
lds
lcall
mov
ret
fcoml
push
push
mov
adc
loop
mov
rorl
rorl
subb
in
insb
loope
mov
enter
test
jae
sbb
jo
jge
out
pop
dec
daa
mov
pop
dec
aad
push
into
clc
mov
cmp
mov
and
sub
inc
jnp
pop
je
jae
loope
cmp
cmp
jb
mov
dec
cmpsl
sub
lods
pop
xchg
aad
mov
in
mov
js
out
packuswb
dec
in
push
in
scas
xchg
scas
mov
or
cmp
xor
push
xchg
pushf
xlat
or
lret
push
xchg
iret
ficomps
inc
je
sbbl
stc
sub
xor
testb
and
fstpl
nop
dec
daa
frstor
in
xchg
out
xorl
or
je
out
int
cmc
xchg
mov
das
lea
adc
fnclex
dec
jne
dec
jb
daa
sub
stc
mov
mov
push
mov
cmp
ret
std
sbb
in
add
xchg
fsubr
dec
inc
inc
mov
out
cmp
mov
lea
mov
push
inc
arpl
or
xor
jnp
or
and
pop
or
dec
pusha
cmp
shr
or
fisubs
das
xor
push
jno
rorl
test
test
adc
test
mov
or
in
adc
adc
fwait
pop
decl
int3
loopne
pop
jno
jecxz
push
xbegin
sti
lea
fadds
cmpsb
jecxz
add
into
xchg
outsb
int
push
sbb
lea
jnp
in
ss
jecxz
push
stos
fildl
and
orl
pop
push
xchg
test
ss
js
mov
enter
inc
xchg
out
sbb
xor
or
ja
fs
xchg
arpl
pop
out
sbb
nop
sub
pop
push
dec
fdivrs
jmp
clc
arpl
pusha
test
movsl
adc
mov
lcall
jecxz
pop
lss
xchg
jns
daa
push
push
push
mov
and
inc
xchg
xchg
or
cmp
inc
sub
stos
inc
cmpb
inc
inc
lcall
cmp
decl
fldl
nop
mov
add
xchg
pop
push
cmp
stc
adc
das
aas
or
out
test
mov
iret
sbb
jle
cmpsl
stos
mov
sub
je
divb
add
inc
inc
or
shrb
sahf
fmull
mov
lahf
int3
mov
flds
xor
sbb
sahf
dec
jmp
cld
dec
cmc
test
movsl
dec
mov
xor
mov
xchg
aas
lock
cmp
scas
add
xlat
nop
out
cld
lods
ror
sbb
fwait
xor
std
pop
xchg
xchg
icebp
lds
cltd
rcl
or
jmp
inc
testb
hlt
pusha
jge
or
mov
loopne
stos
mov
push
sbb
aas
mov
int3
mov
imul
mov
xchg
mov
dec
cld
jae
cs
mov
pop
mov
adc
enter
roll
add
mov
push
loopne
data16
mov
xchg
enter
dec
sarl
or
and
loopne
push
insl
sub
sarl
jnp
mov
pop
xchg
notl
or
cmp
fwait
pusha
push
addl
mov
movsb
mov
xchg
fisttps
mov
and
adc
lahf
mov
test
ss
arpl
loopne,pn
popf
xchg
xchg
push
sbb
xor
mov
push
adc
mov
cmp
lahf
mov
xchg
ficoml
inc
xchg
daa
std
mov
cltd
adc
adc
inc
outsb
inc
into
nop
xchg
pop
push
adc
or
sbb
ret
sub
push
and
mov
or
lds
cmp
fwait
xchg
lahf
pop
sub
xor
pop
cmp
sub
xchg
push
mov
and
push
sub
fisttps
in
outsb
dec
pop
xlat
popf
je
test
jno
jmp
mov
xchg
fcmovnbe
sub
jno
sahf
dec
mov
sub
bound
or
orb
aas
jecxz
cmp
out
add
pop
addr16
out
movsl
mov
xchg
xor
mov
jno
mov
adc
and
in
sahf
into
sub
lret
sbb
jp
push
add
into
jno
jbe
ret
in
and
inc
inc
mov
cmpsb
xchg
js
ds
mov
lods
dec
int3
pop
cmp
push
sbb
pushf
mov
enter
xchg
dec
pop
xor
lds
js
xor
adc
movsl
dec
pop
sahf
es
add
out
scas
cwtl
je
test
add
subl
dec
enter
ja
ja
cmp
mov
dec
in
lea
ret
imulb
leave
cmp
sbb
cltd
in
in
loopne
pop
data16
pusha
shr
pop
inc
inc
das
mov
mov
inc
push
outsb
dec
add
jg
inc
stos
andl
stos
push
insl
dec
jno
pop
fldt
leave
out
sti
shl
imul
jno
daa
test
xchg
jo
iret
outsl
mov
and
or
adc
jae
sub
scas
cmc
test
stc
mov
lcall
arpl
adc
sbb
mov
mov
shlb
jmp
shll
mov
nop
jnp
pop
dec
lds
push
nop
lock
cmpl
cmpsb
xchg
xchg
xor
fmuls
cltd
sbb
fadds
gs
std
hlt
rolb
mov
fbstp
pop
lahf
sbb
mov
mov
push
push
ja
xor
pushf
xorb
popf
unpcklps
in
inc
mov
das
scas
ds
jl
xor
aaa
cmp
movsl
push
mov
jno
std
sbb
jmp
lea
fildll
inc
pop
sbb
push
add
lods
test
dec
dec
inc
sub
push
inc
pop
cltd
repnz
push
add
sbb
aad
push
in
dec
push
int3
push
inc
inc
mov
testl
mov
jae
cmpsb
cmp
sar
adc
jge
out
je
or
movsb
mov
jno
sbb
in
cmp
fisttps
sarb
jbe,pn
add
push
sbb
sbb
mov
ja
jns
fcomps
and
sub
xor
mov
xchg
push
inc
leave
std
cmpsb
shrl
movsl
cmp
dec
mov
mov
xchg
stos
sub
xor
sub
pop
and
cmpsl
and
push
aam
mov
ss
cld
or
pushf
sarl
cli
ficoml
sub
movsb
sub
outsb
fldt
adc
cmp
fstpl
jns
and
outsl
imul
dec
cltd
movsb
inc
mov
push
das
and
sahf
movsb
xor
mov
pop
arpl
movsb
xorl
imul
mov
popa
or
adc
mov
inc
shll
stos
pop
cltd
mov
mov
push
sub
jb
cmp
xor
stc
sub
add
mov
mov
es
mov
mov
push
sub
fcmovb
cmp
jp
push
cltd
mov
iret
stc
out
or
das
es
or
addr16
fildll
xchg
out
push
jno
dec
jl
push
sbb
xchg
sbb
insb
dec
mov
orl
adc
aad
mov
rcll
dec
jecxz
sbb
fimull
mov
pop
dec
arpl
jl
loope
jbe
add
pushf
and
cmp
out
or
aad
sbb
mov
and
out
test
out
push
cld
in
loopne
inc
xchg
add
pop
pop
cmc
cmp
xchg
adc
adc
inc
push
or
pop
or
push
jg
mov
mov
mov
scas
cwtl
fs
lahf
lea
imul
sahf
push
shlb
and
lea
int3
pop
mov
jmp
mov
pusha
mov
and
mov
mov
imul
arpl
mov
sbb
or
jmp
adc
pusha
mov
ret
test
loop
movsb
cmpl
in
int
js
shlb
cmpsb
add
add
lods
ret
pop
xor
dec
jnp
xor
dec
push
jae
xchg
enter
jecxz
daa
sti
xor
xor
into
sbb
fcoml
xor
lods
icebp
hlt
add
push
jge
sub
mov
mov
in
dec
jae
pop
js
and
push
ja
repz
aas
aaa
xchg
jo
ss
insl
rol
push
xchg
cmp
repz
ljmp
loope
mov
add
leave
mov
mov
xor
aas
push
popa
xor
push
xchg
push
jp
test
hlt
jl
aas
cmp
mov
push
mov
cmp
insb
cmp
sbb
out
xchg
insl
jge
adc
in
mov
int3
es
test
mov
shll
inc
daa
add
push
adc
xor
xchg
jp
mov
movsb
bound
pop
or
insb
mov
popa
adc
sbbb
sbb
mov
xchg
mov
inc
jl
mov
ss
in
stos
mov
mov
out
jl
mov
mov
movl
int
hlt
xchg
mov
rorb
lcall
mov
mov
cmp
xor
repz
scas
pop
jge
mov
js
fsubr
ljmp
mov
jbe
mov
adc
or
mov
dec
add
pop
mov
bound
cmp
imul
ds
mov
mov
xorl
mov
mov
je
insl
loope
lahf
mov
imul
shrl
popa
ds
nop
dec
iret
push
lret
adc
jmp
aaa
out
jecxz
cmpsl
stos
fbstp
fsubrl
outsb
pushf
adc
in
imul
scas
int3
lret
addr16
scas
pop
push
pop
cmp
dec
xchg
cmpsb
mov
sbb
insb
jnp
xchg
xchg
cs
jnp
inc
test
jp
cmp
or
notb
fxch
or
cltd
ret
add
pushw
cmp
inc
out
mov
and
test
sub
popf
xor
push
ja
dec
mov
pop
mov
es
mov
mov
iret
pop
out
xchg
push
mov
dec
movsb
out
imul
pop
xor
sub
xor
mov
mov
std
xor
jno
insl
mov
push
sub
or
ja
adc
push
lods
adc
dec
adc
jbe
sbb
add
aad
lret
inc
jmp
movsb
lret
sbb
or
repnz
inc
dec
out
mov
rcll
adc
jmp
sub
xor
aas
lret
jmp
push
iret
les
icebp
mov
shll
and
jb
cld
pop
inc
push
ja
sbb
push
cmp
cmp
add
and
jecxz
xchg
sub
pop
out
scas
popa
adc
and
push
push
cmp
add
ret
sarl
sub
out
xchg
icebp
cmp
test
xorb
loop
jp
sbb
aas
sbb
andl
fwait
repnz
movsb
sub
mov
push
cmp
stos
ss
pop
arpl
in
sbb
aaa
data16
faddl
xor
lods
stos
push
in
pop
shlb
bound
scas
hlt
mov
mov
popfw
cmc
inc
into
xor
pop
sarl
pxor
cmp
inc
popf
pop
jne
sahf
inc
outsb
add
arpl
pop
dec
cmpl
out
int
addr16
lea
mov
pop
and
cmc
sub
or
outsb
int
pop
mov
sbb
xchg
xchg
cli
bound
jnp
adc
mov
jns
adc
scas
lods
cmc
sarb
sub
mov
in
aaa
cmpsb
mov
and
mov
aad
fs
dec
push
and
loope
pop
sbb
adc
pop
repnz
out
mov
popf
or
test
pop
dec
inc
sub
or
add
mov
clc
ja
jnp
sub
loope
wrmsr
push
push
shll
pop
pop
push
adc
mov
and
loopne
push
cmp
addb
std
dec
fwait
jae
push
cmp
arpl
popa
dec
stos
test
mov
sti
mov
fs
in
sarl
cmc
and
and
sub
mov
fxch
mov
pusha
mov
dec
jne
push
in
cmc
aaa
jmp
std
sub
es
lods
or
stc
out
aad
xor
cmp
jnp
insl
mov
dec
push
outsb
inc
cmpsl
pop
addb
mov
inc
jl
cmp
rorl
out
mov
and
jne
mov
cmp
cmc
xchg
and
jb
icebp
cld
mov
inc
mov
or
sti
sbb
add
mov
daa
mov
jb
add
repnz
push
inc
sub
sbbb
mov
fdivrs
jle
mov
sub
xchg
roll
in
add
je
mov
movsb
fcoms
and
inc
mov
and
mov
mov
add
mov
je
jmp
popa
cmp
cmp
adc
lahf
icebp
xchg
push
pop
repnz
lds
jnp
adc
daa
int
mov
imull
clc
jo
inc
mov
xchg
insb
mov
mov
cmp
enter
pop
sbb
pop
cmpsb
sbb
add
xlat
clc
dec
pop
test
lahf
jp
sbbl
maxps
mov
inc
cld
mov
mov
enter
sarb
sbb
xchg
xor
adc
add
out
ret
jle
add
inc
and
or
imul
push
mov
or
call
popf
lret
xchg
clc
rolb
mov
test
dec
loope
mov
mov
jo
outsl
mov
loope
aaa
cwtl
xchg
dec
cmpsb
jl
insb
outsb
add
nop
outsb
scas
mov
inc
dec
mov
imul
mov
sti
cmp
scas
lret
out
adc
pop
inc
ficomps
divb
insl
fwait
lea
nop
test
jne
insb
xchg
mov
push
adc
shll
mov
cmp
push
add
pop
ficoms
or
int3
pop
sub
mov
xchg
mov
fwait
xchg
push
scas
movb
push
xchg
pop
testl
push
sahf
out
cmpsl
xorb
cmc
stc
and
faddl
scas
mov
aad
repnz
mov
sbb
outsb
or
sbb
in
cmp
push
ljmp
lret
sbb
push
in
pop
inc
xchg
jbe
fcomps
sar
lock
repnz
xchg
add
mov
inc
fidivrs
scas
daa
lods
ret
cmpsl
dec
dec
sbb
arpl
push
sbb
cwtl
push
push
mov
out
xchg
add
cmp
rorb
das
into
mov
testb
enter
nop
jo
dec
fisttpll
mov
cs
shrb
push
mov
cwtl
inc
pop
or
test
and
and
sub
jl
xor
push
pusha
scas
dec
dec
lock
or
mov
push
in
or
dec
xchg
ds
inc
imul
xchg
icebp
jmp
xchg
lock
lret
push
dec
dec
sbb
out
add
insl
inc
sub
clc
mov
xlat
aaa
int
push
lods
mov
adc
jbe
xor
sub
or
dec
mov
stc
icebp
xchg
arpl
adc
add
sbb
lret
scas
shlb
add
jnp
lods
fmul
test
mov
nop
xchg
add
mov
in
inc
add
pand
fwait
shrl
cmp
inc
out
cmp
das
pop
ljmp
add
mov
sbb
add
xchg
dec
or
or
dec
dec
sub
dec
mov
stc
les
aaa
jmp
jp
inc
les
jbe
lock
lahf
push
sbb
fdivrl
and
fstps
mov
cld
inc
mov
lret
negb
fdivrs
test
out
jle
jp
divl
xchg
inc
cli
xchg
and
inc
dec
pop
shl
movsb
mov
outsl
pop
out
repnz
add
cs
js
cmp
std
mov
sub
rcrl
cmp
lods
icebp
adc
add
or
mov
ret
cmpxchg
inc
or
or
xor
mov
mov
inc
cmp
xor
gs
pop
scas
jns
mov
daa
push
xchg
std
mov
cmc
rcl
jne
inc
sbb
xchg
inc
jnp
jmp
imul
pop
push
inc
cs
ja
fmull
add
testb
add
clc
lds
ror
mov
fisubs
cmp
test
xchg
xor
mov
pushf
pop
cmp
mov
sbb
icebp
inc
sub
loopne
les
sbb
pop
sti
rorl
xchg
and
fnstsw
sub
pushf
xlat
add
outsl
dec
jae
cmp
js
ss
dec
mov
cltd
stos
jle
lret
pushf
fwait
leave
test
push
pop
xlat
jmp
out
push
mov
push
dec
loope
sti
cwtl
and
repz
mov
inc
dec
scas
adc
jbe
daa
xchg
movsb
gs
pop
rolb
mov
jmp
sahf
int3
mov
jmp
fwait
sarb
fidivs
gs
popf
sbb
mov
xchg
cld
test
mov
leave
lret
and
jg
jecxz
mov
mov
inc
arpl
and
loope
in
adc
sub
in
push
daa
sbb
xchg
lret
cmpb
mov
xor
imul
sub
sar
lret
mov
insl
or
data16
and
push
lds
add
mov
push
mov
out
dec
jg
orb
adc
mov
aaa
pop
push
sub
stos
cli
sahf
adc
dec
int
lock
into
in
adc
cs
test
and
leave
orl
xchg
xor
mov
adc
stos
pop
jle
dec
inc
call
out
push
jne
aad
xor
and
dec
mov
mov
pop
jo
push
pop
mov
cmp
ss
or
mov
push
scas
and
add
fcomps
pushf
sub
insb
push
shld
jne
popa
jo
stc
aam
pop
or
mov
sub
cmp
ljmp
hlt
sbb
lcall
jb
shlb
fwait
push
insl
mov
fstps
mov
stc
stc
pop
jg
lods
std
cmp
clc
add
xorb
mov
and
std
push
dec
sahf
xchg
inc
aaa
nop
sub
addr16
sub
lock
cmp
fimuls
sub
cmpb
ja
dec
sti
add
push
xchg
ss
movsl
mov
rorb
dec
add
adc
jg
pop
and
mov
push
mov
mov
pop
cmc
mov
add
stc
jae
arpl
lfs
inc
mov
mov
mov
xor
dec
xor
jbe,pn
mov
in
push
fnstcw
xchg
movsb
ss
lret
hlt
push
push
cmp
pop
fsts
mov
inc
pop
jg
fdivl
sub
inc
das
cmp
nop
repnz
xor
and
data16
push
sub
dec
out
push
mov
out
push
jge
stc
inc
adc
add
add
or
or
cmp
cld
imul
push
sbb
in
xor
push
ss
je
fsubr
das
loopne
filds
aaa
out
jecxz
pop
add
cmp
jmp
jle
test
rcl
nop
test
xchg
jmp
xchg
add
inc
into
popf
in
adc
or
lret
push
stc
sub
js
in
push
push
icebp
mov
aaa
jecxz
push
adc
jo
into
xchg
pop
xchg
dec
sub
cwtl
loop
cmp
in
inc
ds
jne
cli
fwait
scas
mov
push
imul
dec
in
and
dec
mov
push
jne
adc
push
cmp
int
sub
ret
mov
fldl
dec
xchg
inc
jno
mov
stos
mov
sub
bnd
sbbl
cld
icebp
and
xor
pop
fisubs
enter
stos
xchg
mov
jne
icebp
ja
adc
inc
sub
jno
ja
adc
out
mov
push
adc
je
js
fmull
push
jnp
push
push
xor
mov
inc
pop
cs
adc
jle
cli
out
cli
xchg
std
pop
mov
mov
sbb
push
jbe
inc
lret
mov
push
rorb
add
out
jle
pop
sahf
in
jo
cmpsl
ds
mov
mov
adc
cmp
fidivs
js
bswap
lret
and
das
sbb
out
push
or
icebp
cli
mov
cmp
mov
cld
cmp
push
lods
movsb
push
jne
add
xor
ljmp
fistpl
xor
push
lods
arpl
and
push
lods
cmc
in
sahf
jne
sbb
cmp
inc
jno
subb
cmp
out
push
jae
add
lret
jne
mov
mov
pop
jo
inc
ret
cmp
mov
subb
sbb
ret
sbb
movsl
int3
fwait
dec
cwtl
addr16
push
push
mov
mov
mov
les
mov
mov
pop
xchg
repz
orl
mov
mov
pop
mov
loopne
add
xchg
notl
or
clc
mov
cwtl
sarb
daa
into
xchg
pusha
call
fimull
aam
mov
sbb
cmpsb
in
aam
cmpsl
insl
and
pop
nop
inc
mov
add
jb
orl
aam
dec
jns
mov
into
xchg
clc
add
push
and
jnp
in
mov
vcvtsd2ss
iret
mov
popa
cld
aam
das
cs
mov
push
jmp
adc
lret
enter
or
sti
leave
dec
add
or
lret
xchg
and
shlb
or
inc
cmpb
push
pop
mov
push
insb
bound
mov
pop
push
das
jne
xchg
xchg
inc
lret
inc
stos
inc
push
pop
dec
adc
imul
and
test
add
hlt
xchg
jge
jecxz
shlb
lcall
sub
scas
stc
or
popf
or
gs
or
cmp
fimull
ficoms
jle
rclb
pop
mov
inc
fwait
insl
sbb
sbb
cmpb
sub
push
sub
sahf
or
in
sub
sub
pushf
xchg
es
adc
repnz
call
inc
pop
or
fistpll
cmp
imul
xor
push
mov
or
stos
push
test
les
into
cmp
outsb
jns
mov
xor
dec
fwait
and
jmp
adc
mov
insb
mov
icebp
mov
mov
lds
pop
ljmp
dec
and
lahf
movsl
and
sbb
fwait
inc
psubq
mov
jle
mov
addr16
loop
mov
div
faddl
outsl
push
and
rcrl
mov
sbb
lods
cmp
dec
icebp
les
jp
repz
int
push
push
push
cmpsl
iret
addl
jne
inc
sbb
sbb
ficoml
push
jb
fdivrs
sar
pop
dec
inc
add
push
popf
lahf
insl
cwtl
push
mov
sub
mov
sub
sbb
xor
pushf
orb
jbe
mov
cmp
pop
cmp
mov
push
jp
out
cmp
push
daa
mov
push
mulb
les
lods
jnp
xchg
lods
sar
outsl
ja
push
jb
adc
in
inc
std
imulb
xchg
mov
inc
mov
cmp
daa
adc
adc
mov
ds
push
jg
jo
xchg
and
sbb
mov
outsl
jns
sti
fmull
and
stos
insl
scas
mov
loopne
out
dec
sbb
fs
hlt
inc
shrl
dec
inc
loop
int
hlt
popa
push
or
jns
lcall
add
xchg
cwtl
adc
cmp
pop
lea
cmpsl
shrl
lcall
cmp
fcoml
and
fs
imul
adc
mov
popf
ds
and
and
xlat
sbb
pop
dec
popf
popf
loope
adc
pop
mov
sti
jbe
cwtl
add
out
movsb
out
pop
xor
add
rorb
cli
aad
fdiv
mov
add
lret
mov
mov
fmull
push
xchg
std
in
and
jo
mov
fldt
stos
cli
mov
scas
mov
push
inc
mov
jno
cli
mov
ljmp
jbe
mov
fcomps
int3
mov
test
xchg
add
pop
mov
mov
daa
pop
add
aaa
pop
and
push
jns
ret
repnz
mov
pushf
cs
pushf
xor
aaa
mov
jle
loopne
test
pop
cwtl
ficoml
xchg
popf
fnsave
pop
imul
movsb
inc
addr16
in
pop
cmpsl
pop
test
mov
cmp
ret
ret
idivl
xchg
mov
call
xchg
nop
mov
adc
out
faddl
out
iret
scas
ja
jbe
leave
push
and
out
jns
xlat
sbb
out
xchg
pop
jns
sub
or
sbb
std
push
scas
lods
dec
and
sahf
scas
add
mov
imul
pop
dec
iret
dec
insb
stos
repnz
cli
and
leave
jmp
mov
bnd
mov
outsb
bound
nop
imul
dec
mov
jl
mov
cwtl
cmc
popa
pusha
loop
pop
xchg
dec
ss
aam
leave
pop
out
push
or
cs
cs
mov
ds
insl
cmp
pop
xor
jne
cmp
mov
fnstsw
jl
jl
mov
jmp
rcl
xor
push
and
lahf
subl
repnz
sbb
xchg
shlb
mov
ljmp
nop
out
pop
fstps
stos
mov
jmp
pushf
shl
sub
cli
jo
in
cmp
xchg
test
fcmovu
mov
cli
hlt
sub
in
jnp
cld
add
sbb
adc
fcoms
outsl
sub
jmp
decb
nop
into
xor
les
test
in
ja
mov
icebp
fs
sbb
pop
inc
inc
inc
imul
lea
aad
aam
xor
aad
sub
cli
or
aad
cmp
mov
pop
cwtl
xchg
lahf
mov
cwtl
lret
jnp
bound
pop
sahf
jecxz
and
out
andb
sbb
xchg
aad
add
push
push
mov
mov
add
mov
or
movsb
in
inc
aas
pop
adc
sbb
xchg
cs
xrelease
inc
xor
mov
add
sbb
stos
js
fisubs
cmpsb
mov
push
ret
push
lock
pop
adc
cmp
jne
scas
and
push
pop
sbb
xchg
add
xor
lock
sbb
jge
movl
inc
cwtl
je
pop
xor
or
fwait
popf
out
imul
add
dec
enter
cltd
jb
ret
cld
cltd
lret
rorb
ss
add
push
movsb
xchg
and
and
sub
daa
out
xchg
enter
add
xor
movsb
push
xor
jle
pop
or
cmp
nop
aaa
xlat
inc
pusha
jl
fimuls
push
or
or
xor
push
iret
cmc
push
mov
fnsave
insl
dec
push
stos
mov
les
pop
divb
out
divl
popf
les
insb
push
loop
sahf
addl
in
testb
cmp
scas
inc
test
das
push
sub
js
bswap
in
clc
sti
jecxz
insb
cmp
push
iret
dec
and
fwait
repz
adc
getsec
imul
aas
insl
fwait
xlat
xchg
sbb
stc
cltd
hlt
sahf
inc
mov
pusha
testb
shlb
leave
cltd
jle
pop
cmp
dec
sbb
xchg
in
pop
in
movsb
loope
loope
mov
in
addr16
sub
mov
pop
or
clc
xchg
sysenter
bound
lock
mov
clc
inc
test
fcmovu
jo
test
stos
xor
sbb
xor
pop
adc
in
rolb
sbb
fstps
push
sbb
push
shr
add
iret
jns
xchg
insb
rcrb
xor
cwtl
idivl
pop
and
add
lods
dec
fcmovne
imul
in
aaa
mov
je
mov
movsl
mov
lock
test
adc
in
loop
xor
xor
jg
mov
lret
jnp
inc
xor
and
and
pop
ret
test
data16
dec
jp
fcomp
imul
jbe
sbb
fwait
pushf
stos
pop
pusha
xchg
cmp
fadds
dec
adc
mov
ret
ljmp
cmp
lds
or
adcb
dec
fcoml
cmpsl
mov
jge
push
mov
testl
flds
outsb
dec
and
dec
dec
mov
mov
jnp
lahf
aad
xchg
aam
jg
dec
pop
les
or
out
bound
mov
inc
test
dec
mov
in
lods
xchg
fmuls
pop
cltd
xor
popf
mov
lar
pop
es
ret
lods
aas
das
inc
addb
dec
into
lret
inc
out
add
subl
inc
xor
clc
push
jp
shl
and
lds
pushf
aas
mov
enter
pop
mov
add
adc
mov
nop
aas
push
test
je
sub
in
dec
or
pop
push
sbb
mov
imul
push
sub
lret
inc
cli
pop
sub
lds
or
mov
add
mov
out
sub
sub
in
mov
jecxz
call
sub
push
xlat
cltd
aas
std
add
stc
addr16
or
enter
sub
push
leave
xor
mov
loopne
cmp
lret
dec
clc
and
insb
fnstenv
lcall
and
xchg
cmp
or
xlat
in
xor
mov
mov
inc
test
repnz
clc
fimuls
lods
or
repz
cltd
jmp
push
cltd
mov
xorl
and
add
jg
push
adcb
enter
or
jbe
sub
stos
sub
in
dec
or
lods
add
push
sub
je
xchg
dec
xor
mov
add
xlat
and
das
outsb
pushf
lea
jns
jmp
fs
daa
jge
xchg
es
fidivrs
mov
pop
pop
inc
mov
repz
jmp
jno
lea
arpl
repz
pop
popf
and
icebp
xchg
aaa
sahf
rcrl
adc
jmp
cltd
mov
cmp
push
adc
aad
shll
xchg
div
or
jnp
mov
scas
mov
jge
test
in
int
mov
loopne
and
js
out
cmp
or
jmp
jmp
mov
test
dec
push
bswap
jp
out
cmpsb
lods
mov
in
aaa
or
jmp
test
push
std
or
sti
sti
inc
unpckhps
mov
or
mov
lcall
push
rcrb
mov
inc
cld
out
aaa
int
mov
push
jle
mov
and
fisubs
jb
mov
push
or
and
and
imul
pop
fdivrl
fidivs
sub
stos
sub
das
ss
dec
xor
pop
outsl
imul
lret
mov
mov
pop
lods
jl
jl
fistpll
scas
jecxz
out
ja
adcl
inc
adc
sbb
mov
idiv
jp
insl
loope
out
arpl
cmp
jnp
push
dec
sbb
jbe
jecxz
movsb
icebp
jns
jo
or
test
or
xchg
xor
xor
jbe
cmp
xchg
mov
je
pop
and
aad
in
and
cmp
bound
stos
fldt
lock
loop
inc
add
lcall
imul
cmp
cli
mov
dec
bound
sub
jno
call
test
stos
test
cmp
aas
mov
adc
mov
xchg
dec
lea
sub
popw
cmpsb
addr16
adc
jecxz
jg
enter
addr16
lods
add
test
cwtl
stc
lret
adc
clc
scas
and
dec
in
add
imul
arpl
rolb
int3
mov
or
clc
xor
arpl
or
lods
jne
cwtl
stc
inc
sbb
xlat
stos
pop
add
dec
sub
ja
fidivrs
lcall
mov
movsb
mov
fs
xor
mov
and
pushf
lods
xor
aas
cld
pop
mov
mov
dec
mov
and
jecxz
bound
add
dec
imul
cmp
pop
out
mov
mov
add
fidivrs
xor
inc
sbb
fwait
outsl
and
pushf
and
jge
add
inc
in
lds
push
mov
push
das
or
xchg
push
ljmp
lods
sbb
cltd
shrb
sub
aad
cmp
mov
outsb
sbb
dec
or
pop
add
rcrb
jns
push
mov
pop
jg
mov
xor
call
pushf
sub
add
jle
clc
cmpsb
jnp
xchg
xchg
xlat
imul
sub
push
inc
into
pop
aad
addl
test
fmul
scas
dec
adc
int
jb
dec
cmp
adc
gs
sbbb
fsubrs
movsl
or
popf
sub
data16
arpl
ret
dec
and
enter
dec
fbstp
or
pop
xor
call
adc
push
jbe
imul
sub
pushf
mov
xor
testl
push
sub
push
adc
cmp
lret
pop
leave
ss
cmc
push
pop
dec
fidivrs
pop
mov
dec
cmovne
sbb
ds
fwait
mov
aam
nop
fildl
mov
mov
or
mov
sub
sub
cwtl
clc
add
mov
ror
cld
cld
sub
push
push
mov
stos
push
sub
xchg
cmovg
cld
loop
pushf
add
lahf
aad
repz
test
push
sahf
loopne
cmpsb
aad
mov
push
mov
lret
fiadds
push
loope
aad
push
pop
pop
test
adc
scas
leave
xor
repz
mov
cmpsb
mov
cli
imul
push
cld
aaa
mov
movsl
cltd
mov
imul
jl
or
fstpl
enter
sub
pusha
cs
dec
movsl
inc
sub
mov
xchg
out
xchg
and
xchg
in
mov
rcr
hlt
mov
fwait
mov
mov
leave
or
cmpsb
mov
ret
jb
xor
inc
dec
push
dec
popf
in
xor
mov
cmc
push
testl
test
add
cli
mov
mov
test
or
clc
mov
xchg
inc
nop
outsb
scas
xchg
insb
mov
enter
mov
outsl
pop
bound
rcr
cltd
lahf
insl
addr16
or
xchg
add
jmp
adc
loop
pushf
gs
pop
leave
cmp
jae
mov
imul
jb
push
add
mov
push
into
repnz
aad
mov
sbb
and
std
dec
add
mov
out
mov
jnp
or
cmp
mov
in
sbb
add
sbb
out
scas
mov
shll
mov
fs
pop
cwtl
mov
orl
mov
test
pop
pushf
pop
popf
or
call
dec
dec
pop
sub
dec
mov
xchg
outsb
cli
xchg
leave
jo
sbb
sub
das
cmp
movntps
jo
cltd
cld
pop
fistl
mov
lea
cmp
mov
out
cmp
rclb
jmp
rol
xor
xlat
pop
orl
or
and
pusha
into
dec
jnp
lahf
mov
pop
int3
jbe
push
int3
fnstsw
fidivs
mov
mov
and
sbb
test
stos
adc
and
not
pop
bound
sti
adc
pop
push
cmp
adc
fs
sbb
pop
jne
inc
hlt
jmp
in
sti
out
push
cmpsl
xchg
popf
mov
loope
xchg
xchg
int3
jnp
popf
pop
push
mov
mov
cmp
repz
rcll
data16
ret
push
dec
ss
add
jmp
out
adc
pop
push
stos
pusha
inc
sbb
stc
orl
and
ljmp
sub
cmp
int
cmpsb
aaa
pop
dec
xlat
out
fwait
xchg
lds
pop
pop
inc
imul
xor
imul
mov
mov
outsb
and
jae
xor
push
cltd
lock
fnstsw
jb,pn
pop
stos
add
cmp
cwtl
pop
aad
bound
fdivrl
stos
cmp
sarl
popf
notb
adc
pop
addl
lahf
das
fdivr
sarb
dec
add
or
push
stc
movsb
ljmp
push
popa
les
add
test
mov
fucomip
mov
ljmp
cmp
or
fadds
into
xchg
les
jmp
fstps
stos
push
add
adc
mov
in
enter
out
es
or
pop
dec
jno
out
fs
xlat
sbb
pop
test
inc
lods
mov
int3
and
aam
dec
mov
sub
inc
test
sub
subw
cmp
loopne
cmpsb
popl
test
add
jle
pop
add
das
mov
scas
dec
jle
in
jbe
nop
add
add
sub
mov
insl
lock
data16
xchg
pusha
mov
inc
sbb
imul
mov
push
idivl
outsl
stos
xor
outsb
popa
movsl
xchg
or
insb
and
pop
xchg
xchg
and
sar
jg
sub
xlat
pop
repz
dec
jl
and
cs
cmpsb
sti
add
xchg
sarb
lcall
mov
sbb
cmp
sbb
mov
dec
mov
cmp
dec
add
js
daa
fisttps
or
out
mov
imul
shr
cmp
pop
xchg
rclb
lock
mov
iret
jle
inc
xchg
dec
cld
mov
cmc
pushl
pop
jae
pop
lods
xor
daa
dec
mov
mov
pop
xchg
pop
mov
aam
xor
mov
xchg
xor
into
ret
mov
movsb
add
xor
cmp
or
inc
lcall
or
xor
or
int
add
xchg
push
outsl
fucomip
ficoml
ds
mov
lcall
adc
push
mov
add
movsl
sub
shl
fs
push
in
je
jmp
sbb
into
and
xchg
xchg
cmp
pop
pop
fisubs
ljmp
popf
xchg
jnp
in
dec
add
sub
pushf
subl
mov
rcll
xchg
in
icebp
test
shrb
das
loope
xchg
cmp
pushf
sbb
jns
aaa
push
cmp
mov
fmuls
leave
mov
fcomi
inc
cwtl
pop
jmp
mov
jnp
jg
cmp
cmp
xchg
xor
leave
dec
adc
call
call
inc
movsb
pop
popa
push
sub
call
sub
xabort
dec
enter
cmp
xchg
into
push
cmp
out
das
fdivs
sbb
cwtl
lods
jle
clc
into
cmp
lret
insl
xchg
loop
jl
mov
int3
pop
lods
add
iret
lahf
pop
sub
fisttpl
enter
repz
arpl
leave
mov
jl
enter
dec
cmpsb
sarb
ss
or
sbb
xchg
lds
sbb
sbb
out
and
out
loop
adcb
push
sub
mov
adc
pusha
adc
mul
push
or
loop
jb
loop
fisubl
out
call
insb
dec
lods
out
jnp
mov
sti
leave
into
push
cltd
notb
push
fcomp
jno
iret
rcrb
push
adc
hlt
adc
or
xchg
cwtl
fs
jae
lcall
adc
mov
loop
cmp
imul
sub
rcrl
lret
loop
adc
mov
cmpsb
int
je
jnp
xor
mov
lods
jb
xor
mov
sbb
inc
adc
mov
adc
aam
cmp
jg
cmpsb
call
add
sub
sti
xchg
dec
add
lods
push
sbb
jbe
sarl
packsswb
cmpsl
test
repnz
dec
movsb
mov
adc
and
jp
inc
into
in
or
lods
sbb
sbb
sbb
mov
sub
rcll
mov
sub
iret
pusha
add
xor
js
push
bound
mull
lock
or
mov
dec
push
mov
add
dec
dec
sbb
xor
lret
das
sbb
nop
xchg
adc
div
popa
outsb
std
dec
push
dec
int
lods
cmpsb
mov
hlt
mov
mov
scas
fnsave
push
jne
adc
jecxz
inc
xor
lds
inc
mov
xchg
out
pushf
jb
lock
pop
sahf
and
es
xchg
pop
push
ret
data16
sub
fwait
dec
sti
jge
cwtl
push
fs
or
stos
push
hlt
cli
fwait
loopne
mov
test
out
lods
std
cltd
insb
adc
jnp
add
mov
push
jnp
inc
cmc
xor
pop
aad
mov
cwtl
repz
jmp
mov
sti
push
or
jns
add
int3
xchg
shll
jb
mov
mov
insb
cli
or
ss
sub
push
hlt
dec
mov
mov
xor
lea
fwait
sub
cmpsb
fistl
stc
jecxz
adc
push
int
in
sbbb
add
sub
jle
push
and
fdivrl
sti
les
jl
in
leave
arpl
loop
xchg
jg
je
adc
or
jb
mov
mov
icebp
insl
mov
sahf
into
add
mov
repz
mov
pop
enter
lahf
je
xchg
inc
icebp
outsb
adc
mov
push
jp
sub
cmpsb
mov
push
cwtl
lret
xchg
nop
mov
push
mull
fdivp
test
sub
pusha
and
push
imul
icebp
shlb
mov
add
mov
add
sub
cmc
xchg
push
jg
mov
shrl
clc
mov
sub
xchg
jge
es
dec
jp
inc
icebp
lods
xchg
outsl
lods
adc
imul
shrb
or
shlb
outsl
add
sarl
jnp
mov
movb
adc
adcl
cmpb
pop
adc
and
iret
ret
sarb
mov
nop
adc
inc
scas
jp
jmp
ficomps
loop
sub
ret
mov
jae
loope
cmp
xchg
mov
insl
test
adc
sbb
push
lcall
adc
mov
cmp
push
into
xor
cmp
push
xchg
cmp
je
fisttpl
or
imul
adc
aam
and
cwtl
mov
push
cmp
popa
jg
cmp
inc
push
aas
cmp
jnp
fs
hlt
or
jge
sbb
mov
xor
fldl
xchg
mov
icebp
jb
int
daa
out
imul
test
jg
sub
int
test
jno
mov
dec
imul
push
divb
out
lcall
scas
shll
repz
xor
pop
data16
lods
test
cmp
xchg
into
mov
ds
lahf
xor
aas
pop
dec
xchg
mov
inc
fsubrp
or
add
frstor
xchg
inc
in
ret
cmp
push
mov
dec
data16
loope
jp
mov
mov
adc
xchg
push
call
push
inc
push
leave
mov
mov
subb
repz
mov
mov
xchg
inc
add
or
mov
into
lret
xor
jp
pushf
imul
mov
movsb
mov
xchg
sub
pop
iret
cmpsb
loope
aam
lret
cmp
mov
int
jp
mov
jo
mov
aam
and
fildll
daa
testb
add
pop
addl
sbb
jae
jp
xchg
stos
lahf
js
les
and
in
stos
inc
sbb
rol
dec
sub
or
mov
je
loopne
negb
mov
dec
cmp
mov
imul
xor
mov
out
fbld
ret
sbb
xchg
push
test
lcall
xor
ja
adc
pop
mov
sbb
sbb
push
adc
gs
cli
or
hlt
xchg
lret
adc
lods
adc
push
inc
or
stos
cmc
xchg
lods
cld
out
mov
mov
in
pop
cwtl
repnz
cmpsb
and
sbb
mov
lahf
shrl
icebp
gs
je
xor
mov
cmc
add
in
dec
aaa
pushw
jmp
xor
or
out
insl
or
xor
inc
negb
out
add
daa
ljmp
mov
sub
fisubrs
fiaddl
mov
and
mov
rcl
pop
add
xor
jp
out
sub
and
mov
call
mov
dec
pop
outsl
mov
into
xchg
adc
xor
dec
jge
jo
loop
mov
enter
mov
lahf
data16
add
movsl
jns
test
and
mov
lods
pop
inc
dec
push
jb
jmp
or
jns
mov
dec
aam
sti
xorb
in
and
leave
or
mov
sub
in
movsl
pop
lret
stc
das
int3
inc
rolb
pop
sbb
leave
scas
jmp
cmp
push
nop
test
push
fdivl
insb
push
inc
or
push
ljmp
nop
or
jg
pushf
dec
nop
movb
mov
les
pop
dec
popl
xor
cltd
adc
add
mov
inc
insl
iret
add
jnp
jp
mov
stos
jl
xchg
mov
and
sbb
out
out
push
pushf
nop
leave
jno
mov
inc
call
inc
cltd
push
lods
nop
stos
mov
test
and
out
loop
call
in
adc
mov
xchg
mov
in
jl
stos
sub
jle
shr
and
cmp
mov
xchg
and
push
pop
mov
xchg
out
inc
ja
loop
popa
imull
jg
xlat
jnp
and
and
lcall
fsub
jmp
xor
arpl
sti
insl
mov
cmp
or
out
stos
and
sbb
mov
sbb
xor
cmp
sti
adc
and
sub
push
aaa
sub
cmpsb
mov
sbb
gs
inc
mov
cmp
add
in
lods
dec
adc
repz
push
sub
cld
pushf
and
jb
lea
in
xor
xor
sub
lret
imul
arpl
inc
cwtl
jecxz
cli
xchg
push
pusha
inc
mov
add
scas
push
mov
fdivl
push
divb
mov
test
and
push
jl
sub
fisubrl
jmp
mov
fwait
clc
or
sarl
mov
int3
es
sbb
out
pop
dec
jbe
add
aaa
inc
in
dec
cmp
push
xchg
iret
insb
dec
add
movsl
xchg
les
sub
fstpl
in
mov
movsb
daa
cmp
sub
stos
aad
xchg
mov
int
aaa
mov
rolb
ja
ds
xchg
das
push
sub
out
ret
push
imul
mov
mov
test
push
test
stos
dec
out
mov
adc
lahf
in
movsl
movsl
lcall
fildll
stos
aad
or
cwtl
push
dec
mov
inc
bswap
ja
movsb
mov
or
movsl
stc
ljmp
into
pop
rol
fsubr
insb
fiaddl
orb
mov
shrb
dec
out
cmp
dec
jo
call
mov
sarl
mov
and
and
loopne
mov
or
xor
inc
test
adc
or
cld
test
dec
mov
adc
lods
inc
lds
jle
fldcw
jbe
data16
imul
jge
in
pop
lds
xchg
in
shrl
cmc
icebp
packsswb
mov
jp
sub
xor
das
push
ss
fcomip
arpl
in
push
popa
jle
sbb
xor
jmp
xchg
int
repnz
sub
int3
jnp
mov
rcrl
dec
xor
xchg
and
js
mull
jge
inc
out
pop
dec
mull
dec
jae
jo
fistpll
push
aad
les
xor
mov
add
add
test
rcrb
shr
jmp
sti
xchg
cmp
test
mov
mov
sbb
adc
lahf
rcl
lods
mov
xchg
add
fdivrl
sbb
pop
pop
cmp
loopne
mov
mov
push
pop
pusha
popf
dec
push
in
cmp
cmp
sbb
std
xabort
and
and
leave
int
mov
fisubl
popf
in
ret
imul
dec
test
out
cmp
jecxz
mov
sub
pop
shll
fsubr
inc
mov
ja
or
test
mov
dec
pop
jo
mov
out
xchg
push
insb
mov
outsb
scas
sbb
push
shr
inc
repz
sbb
fmuls
sub
sub
cmp
ret
iret
mov
aad
or
stc
shlb
jecxz
cmp
ret
mov
out
mov
jmp
subb
mov
stos
mov
add
push
dec
fimuls
cmp
pop
adc
aam
mov
jp
lock
pop
sbb
int
add
push
lods
int3
inc
xchg
xor
mov
addr16
xlat
dec
adc
sbb
sbb
mov
into
push
mov
stc
jne
inc
xchg
jecxz
mov
mov
sbb
inc
cmpl
and
fcoms
add
pop
jno
mov
sub
insb
mov
cltd
xchg
jae
mov
fisubs
mov
xchg
mov
gs
ds
movsb
xorb
sbb
cmp
inc
mov
out
mov
xchg
adc
clc
icebp
jle
adc
inc
dec
xchg
outsl
push
shrl
and
jmp
ret
movsl
jns
xchg
push
fadds
pop
test
stos
fisttpll
inc
pop
mov
mov
mov
imul
cmpsl
sub
leave
or
out
push
mov
lds
mov
roll
inc
or
sbb
lcall
or
loop
sahf
pop
xor
sbb
out
js
sub
shl
fwait
lea
dec
jg
pop
mov
popf
ss
imul
jo
mov
cmpsl
adc
jp
cmp
dec
fidivl
mov
lcall
mov
outsl
movsl
inc
pop
sub
pop
pushf
jb
xchg
outsl
scas
sub
cmp
aad
pop
or
mov
fimuls
jnp
mov
test
nop
xchg
lods
lahf
mov
mov
sbb
push
sbb
ja
jge
ret
popa
lods
pop
in
cmp
add
dec
sti
jmp
lds
mov
and
test
push
in
ljmp
sbb
push
sub
dec
mov
mov
in
lods
jnp
jecxz
add
push
cli
imull
ja
mov
gs
push
fwait
mov
xchg
xchg
mov
add
fucom
je
inc
shlb
negb
repnz
inc
out
fsubl
xor
mov
mov
sahf
mov
psubsw
or
scas
lods
push
in
push
hlt
sub
push
jb
das
xor
sti
cli
sbb
xchg
jle
add
fstpl
xchg
out
iret
mov
mov
push
mov
fs
fs
pushf
add
push
pop
or
adc
sbb
aas
sbb
and
xchg
repz
xchg
cltd
dec
aad
xor
mov
dec
out
sbb
mov
xor
popa
mov
lds
mov
stos
jmp
and
xor
push
repnz
mov
call
cmc
pushf
mov
push
jl
ss
filds
dec
push
push
mov
dec
rorl
xor
mov
and
int
nop
cmpsl
sub
xor
and
or
ret
xorl
and
fisubs
stos
stos
mov
and
out
call
pmaxub
iret
cmp
pop
jecxz
imul
mov
sub
xlat
fimull
jo
push
test
das
stc
fdivrs
aas
mov
movsb
notl
and
subl
inc
outsb
mov
iret
and
mov
mov
xor
and
cltd
mov
imul
test
lds
idivl
gs
cmpsl
jmp
outsb
in
and
mov
add
adcb
xor
aas
shlb
cmpsl
and
les
push
jecxz
xchg
xchg
lods
lahf
xor
pop
gs
jecxz
inc
or
roll
imul
mov
arpl
mov
or
xlat
test
pushf
adc
pop
jle
inc
push
cli
xor
push
imul
roll
push
push
cmp
and
xchg
fwait
clc
iret
add
dec
lods
in
or
jnp
es
jns
adc
outsb
cli
or
dec
pop
and
ljmp
mov
jmp
ret
sub
jno
cs
jle
lea
out
in
jnp
xchg
mov
or
arpl
int3
inc
jno
push
out
outsb
fwait
ret
repz
repnz
das
jb
arpl
rdpmc
and
sbb
or
hlt
and
mov
pop
and
push
outsl
cmp
ljmp
aaa
mov
insb
shl
dec
and
pop
push
iret
je
and
ja
mov
xchg
push
push
and
outsb
or
imul
sbb
jnp
xor
xchg
jle
cs
jae
mov
fldenv
cmp
sub
mov
jo
in
push
arpl
xorl
sbb
push
pop
dec
pop
aaa
int
and
inc
xchg
xlat
iret
dec
and
mov
loopne
sub
xorl
std
add
movsl
leave
out
test
movsb
mov
pop
jno
adc
es
dec
xor
subb
jl
inc
cmpsl
outsb
push
insb
and
repz
subb
lds
xor
lret
icebp
js
lahf
shrb
jle
dec
es
scas
bound
add
in
add
or
cmp
rcll
fstpt
out
orb
and
loopne
push
and
and
outsl
adcb
dec
shlb
jmp
sbb
pop
jbe
adc
ja
lret
adc
les
xchg
add
mov
popf
mov
hlt
leave
xchg
push
and
jg
sub
rclb
in
mov
jno
aaa
add
push
test
pop
into
push
pop
scas
xchg
enter
and
cmp
stc
sarl
jns
outsw
ja
cmpsl
push
sbb
fwait
xchg
fcompl
add
out
orps
dec
mov
ljmp
in
aas
jp
jnp
sbb
pop
mov
and
fwait
xor
shll
pop
popf
ret
dec
aad
aam
mov
daa
div
insb
test
jmp
mov
sbb
cld
push
repnz
pcmpeqb
mov
sbb
test
dec
imul
sub
repz
sbb
jg
movsb
mov
jbe
in
dec
fcoml
gs
push
mov
and
ljmp
daa
mov
lods
jmp
inc
inc
imul
fiadds
cmc
int
in
icebp
jle
loopne
mov
testb
add
loope
xlat
mov
mov
dec
test
xchg
hlt
mov
mov
cmpb
adc
cmpb
dec
xchg
jnp
push
pop
inc
or
das
mov
cwtl
jno
movsb
cmp
sbb
jmp
sbb
aas
sbb
mov
std
cmc
jns
cltd
sbb
test
add
pushf
imul
pop
movsl
sub
into
sbb
sub
lods
push
and
repz
arpl
jle
dec
test
rcrl
sub
popf
sub
jp
in
mov
mov
mov
xchg
mov
rorb
dec
mov
test
std
add
mov
les
pusha
sbb
call
je
sub
mov
aam
dec
cld
rcrb
aam
aam
dec
cmp
aaa
hlt
arpl
insl
fimuls
nop
movsb
in
pop
bound
cmp
rcr
repnz
rcr
stos
test
jns
pop
ret
imul
xchg
lahf
jmp
jns
fimull
cmpsb
in
jp
sahf
xor
rcr
dec
js
frstor
std
push
std
test
dec
gs
cmp
sub
cmp
pop
mov
out
cs
or
in
or
cltd
nop
jg
sbb
aam
cmpb
pusha
cld
enter
and
xchg
bound
pop
divb
das
test
lods
pop
mov
fs
sbb
or
sub
pop
pop
xchg
add
mov
loopne
and
aaa
cmpsl
push
push
inc
mov
lods
and
cmp
loope
imul
out
lods
pop
jp
imull
outsb
push
dec
test
rcl
xchg
ja
in
push
inc
sti
mov
mov
lods
push
rorl
jmp
inc
cmpsl
hlt
mov
rcrl
inc
sti
cwtl
mov
or
movsl
push
stc
add
and
out
mov
rorb
out
data16
in
xchg
or
ss
sbb
push
maskmovq
negl
and
ret
repz
movsl
jle
or
cltd
test
sahf
aas
mov
cmp
shlb
psubd
sub
mov
in
sarb
cltd
insb
fisubl
cmpsb
sub
pop
push
movsl
xchg
inc
mov
mov
gs
pop
pop
insl
cld
mov
test
cmc
add
xchg
mov
pop
jo
adc
add
fdivrs
scas
rolb
enter
ljmp
inc
js
out
jne
mov
cmpsb
in
xchg
pusha
stos
sti
jge
pop
inc
mov
les
setb
push
xchg
push
lahf
inc
out
imul
movsb
xor
pop
add
push
mov
in
push
in
adc
movsb
mov
test
sub
ljmp
fucomi
cwtl
rorb
xor
roll
cmp
jno
dec
loop
cmp
jae
lods
push
xor
dec
xchg
push
es
cmp
inc
mov
push
mov
out
mov
cmpsb
adc
ret
test
cld
mov
mov
jb
mov
das
lea
pop
mov
lods
imul
ss
mov
push
iret
sub
iret
inc
mov
in
mov
xchg
or
test
dec
xor
mov
cmp
add
mov
movsl
mov
push
scas
idiv
pushf
xor
dec
leave
shll
sbb
push
mov
adc
push
adc
push
or
sub
jno
insl
pop
push
inc
cmp
pop
xor
dec
jmp
cltd
daa
iret
inc
stos
xor
bsr
jae
and
addr16
pushf
test
movsb
dec
push
pushf
pop
mov
inc
pop
into
adcl
cltd
popa
ja
or
push
adc
aaa
popa
pop
jmp
iret
mov
jbe
jge
xchg
xor
sahf
int
mov
fistl
push
dec
bound
data16
push
inc
sbb
cmp
ja
mov
mov
xchg
inc
add
adc
insb
cmp
in
ljmp
movsl
cmp
dec
jae
adc
ljmp
xchg
fs
cmp
mov
scas
shll
pop
cmpsb
into
sti
cmp
mov
cmc
inc
adc
jb
rorb
adc
loope
imul
imul
call
lods
loop
popa
flds
fdiv
rcr
mov
ds
int
cwtl
faddl
mov
mov
dec
inc
aam
int
daa
add
xor
add
dec
pop
mov
lea
add
popl
mov
sbb
add
es
inc
sbb
add
fnsave
mov
sti
jmp
cmp
imul
sbb
pop
jbe
cmp
je
lea
sahf
outsl
mov
xchg
lock
cmpb
and
jns
mov
pushf
cwtl
cmc
adc
add
adc
cmc
ja
popa
out
test
aaa
fiaddl
daa
cmp
mov
inc
xor
test
into
adc
sub
test
or
adc
je
sub
push
popf
add
cltd
scas
pand
jp
sbb
add
adc
mov
out
mov
mov
xchg
jno
or
sub
push
mov
movsb
shrb
shll
out
fmul
in
xchg
cmp
decb
outsl
mov
and
hlt
push
gs
lahf
add
inc
pop
int3
mov
popa
arpl
sbb
int3
ror
mov
inc
push
jb
pop
dec
mov
pop
std
xor
sub
cmp
test
ret
push
cld
mov
dec
pop
stos
ljmp
add
sahf
in
inc
in
adc
and
cmp
adc
jmp
mov
pop
lock
jmp
add
lods
loop
push
xchg
cmpsl
xor
and
pop
outsl
inc
sub
enter
scas
jmp
test
cli
or
jecxz
push
pop
sbb
or
fnstsw
push
es
ljmp
mov
xor
movl
jp
mov
adc
cmc
fwait
jl
mov
xchg
in
pop
mov
add
push
or
imul
lods
sbb
popf
dec
adc
add
je
sbb
outsb
js
sahf
xchg
out
ret
test
and
out
xor
xor
lods
adc
fnstcw
xchg
inc
push
mov
mov
aas
cmp
mov
xchg
sub
dec
mov
pop
dec
dec
loopne
jbe
arpl
push
lret
mov
mov
rclb
lods
lods
sbb
push
adc
pop
push
xor
push
clc
inc
fsubrl
popf
hlt
mov
jge
stos
movsl
scas
outsl
fwait
in
cwtl
gs
aaa
fsubrp
jnp
call
cmp
imul
shll
inc
mov
xor
dec
stos
or
sbb
sbb
lock
xchg
add
or
out
mov
sbb
dec
mov
adc
aam
pop
sarb
jb
cmp
mov
lret
int3
jb
mov
sub
mov
shrl
int3
inc
stos
out
fildl
jecxz
inc
cld
sbb
hlt
and
repz
cmpl
test
sbbl
addl
or
xchg
sbb
cld
jmp
push
inc
ficoms
push
sbb
push
jle
or
sbb
cmp
xlat
push
cmpl
lret
xchg
inc
mov
push
sub
packssdw
repz
xor
mov
pop
dec
mov
arpl
lahf
xchg
outsb
imul
movsb
dec
cs
sub
cmp
or
pop
pop
and
dec
mov
call
repz
xchg
fildl
sbbl
iret
sar
movsl
mov
jno
lahf
or
inc
xchg
xchg
cwtl
jmp
add
insb
mov
stos
xor
xchg
popf
popf
sub
or
sbb
xchg
enter
xor
icebp
dec
cmp
add
movb
push
pop
pop
mov
jle
popa
add
pop
cltd
xor
pushf
out
and
call
sbb
mov
inc
addr16
mov
icebp
lcall
daa
mov
test
stc
daa
adc
iret
les
inc
out
in
sub
je
adc
shrb
pushl
push
jne
or
js
or
push
outsl
and
jecxz
xor
data16
insl
lods
mov
iret
mov
and
ss
xor
aad
sub
cmp
cmp
xor
jmp
out
pop
push
push
pop
and
decb
or
add
push
rcll
cmpsb
dec
xor
lahf
fimull
jge
push
sub
sbb
push
movsl
pop
sub
cmpsb
dec
dec
not
js
xchg
xor
popf
rcr
gs
cmp
lea
in
inc
fists
pop
jnp
add
mov
jmp
sbb
loopne
or
mov
and
mov
pop
repnz
out
add
mov
roll
call
je
xor
leave
inc
cmp
aad
push
test
stc
pop
dec
lds
or
or
sbb
inc
add
rorb
mov
mov
push
test
hlt
dec
xor
inc
mull
aaa
xor
ss
int3
clc
pop
mov
mov
stos
repz
xor
and
call
mov
mov
jbe
mov
cs
sbb
std
aam
xchg
pusha
add
fwait
pop
push
mov
stos
pop
idivl
testb
inc
push
fimuls
mov
and
xor
mov
int
inc
cmp
nop
cmp
and
mov
jo
pop
hlt
sahf
fs
fstl
jp
jmp
pop
cmp
sti
sub
ret
inc
cmc
inc
popf
sub
xchg
out
xor
jecxz
ljmp
push
mov
adc
leave
shrd
jno
pop
in
ficoms
fcomip
rclb
mov
jbe
arpl
imul
cmpsb
mov
int3
int
out
in
xorl
mov
xchg
mov
xchg
fistps
xor
in
scas
mov
inc
jbe
pop
loop
sub
mov
push
mov
movsl
lods
ficoms
lods
lea
xchg
sbb
pop
cmp
adc
sbb
mov
cmp
lcall
mov
xchg
idiv
and
cmp
jmp
mov
cwtl
add
pop
add
mov
ss
rclb
push
cwtl
fld
sub
xchg
lods
push
dec
push
fimull
jmp
mov
or
fcom
rcr
pop
test
inc
lcall
movsb
cmc
or
test
cltd
shlb
and
inc
xchg
aam
cmp
fs
les
ljmp
movsb
data16
and
cwtl
out
inc
mov
fsub
pop
out
pop
and
sbb
cli
xor
clc
xchg
mov
ja
loopne
mov
or
or
xchg
icebp
cld
in
test
mov
push
mov
add
pop
ds
mov
fimull
filds
add
repz
push
jae
pusha
pop
stos
jl
dec
shlb
xor
stc
cmpsl
adc
lret
rorb
mov
shrl
inc
aad
push
mov
repnz
jb
and
adc
clc
lret
aad
sarl
push
mov
mov
or
nop
aas
cwtl
jp
in
xor
mov
adc
outsb
lods
aam
jl
fimuls
or
inc
pop
in
ret
cmpsl
mov
scas
xchg
cmc
rcrl
fnstcw
or
sub
push
inc
pop
sti
add
sahf
ret
scas
or
shrb
xchg
push
sbb
ret
ss
movl
jns
mov
push
test
subb
xchg
movsl
sub
push
dec
sar
sub
or
pusha
jne
push
push
sub
pop
sub
sub
jo
sub
lods
int3
je
mov
into
ja
jnp
adc
inc
or
lret
mov
fs
pop
sbb
or
jg
dec
xchg
mov
out
in
and
cmpsb
xor
bound
cmpsl
and
test
outsb
push
cmpsb
push
test
sub
fistps
cwtl
dec
aaa
xchg
or
dec
mov
out
xor
push
dec
sub
lcall
xor
xor
ret
push
xor
sbb
fists
sbb
jno
negl
xor
mov
orb
cmpsl
add
ret
rcrb
jmp
sahf
and
arpl
mov
adc
and
push
loopne
fstpt
cmpsb
fdivl
mov
mov
cmp
jle
xchg
xchg
xchg
add
mov
adc
sub
pop
ds
xor
roll
mov
sub
jbe
jge
xchg
mov
add
stc
bound
mov
movsb
sub
stos
sub
call
jl
clc
scas
sub
test
call
jnp
and
movsl
sahf
enter
lahf
int3
insl
in
clc
cmp
mov
ja
mov
sbb
and
mov
push
cmc
fwait
filds
mov
or
jno
cld
cltd
loop
mov
subl
mov
cwtl
mov
push
add
adc
dec
jne
adc
scas
jb
aad
push
test
out
push
lods
dec
dec
shrl
mov
in
loope
cmpsl
add
test
cmpsl
lahf
sbb
call
cli
sbb
sti
push
inc
scas
push
mov
ret
jnp
lret
jmp
roll
sub
fwait
aam
xchg
and
xchg
in
adc
mov
imul
xor
push
jbe
cwtl
adc
movsl
inc
sub
mov
jne
fucomi
add
dec
in
out
jmp
add
adc
aam
xchg
lret
xor
mov
sub
jnp
tzmsk
cmp
iret
inc
enter
in
aam
testl
cmp
sbbl
idivl
push
aad
push
inc
stc
cltd
loopne
movsl
cmpsb
pushf
mov
cmp
pop
outsb
xchg
idivb
dec
lret
loop
xchg
pop
adc
xor
dec
push
lahf
jle
and
ds
hlt
mov
or
gs
push
jnp
mov
xlat
xchg
add
aad
test
xchg
in
stos
pop
cmp
rcr
lahf
icebp
test
xchg
js
cmp
repnz
outsl
bound
sub
push
jmp
out
ret
in
scas
pop
imul
bound
mov
ret
xchg
jbe
push
add
adc
je
dec
xchg
add
xor
ja
adc
enter
add
out
inc
push
jbe
popa
ljmp
inc
call
and
mov
jne
sarl
mov
fmuls
insl
aad
mov
dec
inc
mul
xor
xchg
rcrl
daa
loope
in
adc
mov
pop
lret
jl
xlat
xor
imul
inc
fnstsw
xor
xchg
fs
push
scas
sbb
das
push
jmp
bound
or
in
loope
push
adc
scas
stos
aad
cmp
cmpsb
mov
adc
inc
sbb
ljmp
mov
out
clc
cmp
push
js
in
test
xchg
xchg
dec
jbe
xchg
pop
mov
mov
cmp
popf
mov
stos
bound
and
and
outsb
std
call
lret
rclb
dec
cmp
and
pushf
mov
inc
pushf
dec
divl
lods
cmp
mov
test
dec
dec
xlat
xchg
mov
aaa
pop
xchg
or
mov
dec
mov
dec
jbe
fmuls
add
mov
push
insb
scas
ret
mov
fimuls
cmp
jp
inc
cmp
jbe
in
mov
fcoms
in
mov
add
fst
dec
push
in
pop
push
pop
dec
pop
mov
dec
outsl
je
xor
or
js
and
arpl
push
fsubp
repz
xor
jnp
pop
es
adc
test
fs
adc
cmp
bound
std
adc
xchg
fiadds
rclb
fisubrl
hlt
outsb
fbstp
add
icebp
dec
xor
cs
cmpsl
sti
add
in
les
xor
gs
xchg
mov
mov
dec
jg
cs
pusha
ds
mov
push
add
insb
mov
mov
jl
xchg
mov
leave
mov
mov
jecxz
or
shlb
pop
mov
imul
fiadds
loope
xor
idivb
ja
loop
aas
push
mov
pop
lcall
or
mov
cli
jns
push
push
push
dec
int
addr16
movl
dec
pop
or
mov
movsl
pop
mov
shlb
xor
sub
add
xor
dec
add
mov
arpl
dec
decl
sbb
inc
adc
aam
cmp
dec
dec
outsl
push
dec
dec
sub
cld
mov
mov
out
push
push
fldt
out
or
sub
orl
imul
fcmovb
dec
cs
and
mov
cmpl
xchg
dec
pop
orl
sbb
pop
and
dec
adc
ljmp
jecxz
fcompl
pop
repnz
cmp
dec
jmp
add
fs
enter
mov
fists
rorl
fstpl
out
jle
jg
inc
lea
sub
jmp
subl
js
push
in
loope
int3
lock
icebp
jl
dec
mov
popa
inc
inc
dec
sub
and
ss
out
int
add
dec
stos
movsb
nop
jmp
sbb
push
imul
fsts
dec
dec
xchg
pop
adc
cmp
iret
test
icebp
pop
pop
sub
popf
adc
iret
sbb
nop
and
rcrb
jmp
mov
jmp
or
xor
push
lods
mov
dec
sbb
cmpsl
push
xor
ljmp
mov
ljmp
mov
clc
mov
ds
push
imulb
xchg
xor
xchg
fdivl
cmc
xor
fsubl
cmc
mov
scas
adc
mov
pop
add
mov
ret
sub
mov
nop
and
push
pushf
aaa
cmp
sub
in
ror
or
sub
orl
pop
inc
js
pop
movd
sahf
cmpsl
jnp
xchg
in
lods
jbe
insb
jg
jecxz
test
push
push
pop
jmp
xchg
xor
cmp
add
mov
fmuls
inc
push
dec
dec
mov
mov
jp
sub
add
shll
out
lret
out
inc
mov
stos
repz
cmp
xchg
mov
cmp
dec
pop
hlt
loopne
out
or
pop
push
in
mov
lds
insb
adc
loop
or
jns
lock
adc
or
sub
xchg
mov
mov
adc
lock
hlt
jecxz
loop
fildll
out
imulb
sbb
imul
and
dec
aad
loopne
rcrb
lods
mov
cmp
mov
push
pop
pushf
xlat
dec
mov
cmp
push
fisttpll
sahf
data16
test
add
xchg
inc
gs
mov
mov
inc
int
xor
movsb
js
pop
das
in
mov
cmpsl
out
sub
lods
jno
or
bound
mov
fistpl
sbb
sub
add
push
lret
arpl
pop
mov
ds
fndisi(8087
shl
sbb
lods
outsb
push
add
cmp
mov
inc
or
sahf
fnstsw
jo
pop
sahf
pop
mov
movsl
xchg
rcrb
aaa
lcall
inc
stc
sub
lahf
jnp
rcll
lret
test
aas
nop
or
or
mov
push
lea
or
jle
mov
cmc
pop
inc
insl
cmp
dec
adc
cmpsl
clc
out
jns
xchg
je
adc
imul
dec
add
sbb
shr
lods
dec
pop
adc
xchg
sar
cltd
jbe
mov
fs
xlat
cmpsl
xor
mov
inc
jle
insb
xchg
dec
cmp
inc
pushf
stos
incb
inc
mov
loop
mov
pop
sub
pop
hlt
sbb
sbb
cwtl
bound
mov
adc
cmc
jmp
xor
jecxz
fdiv
xchg
sbb
pusha
mov
sbb
push
lock
jle
cmp
mov
or
fstpt
adc
popf
push
or
clc
mov
cmp
cmpb
push
push
push
xchg
cli
imul
sbb
cli
pop
mov
jns
lea
divl
inc
subb
and
pop
xchg
pop
ret
jmp
out
lods
loope
cmpsb
gs
shlb
or
adc
jecxz
jle
nop
or
into
xchg
xchg
enter
pop
lret
adc
sbb
mov
jle
jae
cmp
add
xor
mov
or
pop
inc
js
int
shrl
into
fimuls
lcall
sbb
ret
pop
mov
cmc
stos
aam
lds
mov
fcoms
adc
test
pop
sbb
bound
mov
dec
les
mov
adc
pop
jp
test
mov
or
insl
push
data16
xor
je
int3
ljmp
inc
addb
sti
cltd
lahf
adc
mov
adc
or
or
call
jbe
mov
cli
mov
xlat
ss
push
add
lods
jle
js
insl
sub
or
xchg
pop
push
lock
xchg
jg
lea
ja
inc
iret
push
and
add
enter
xchg
push
cmp
test
je
lcall
arpl
jb
xor
mov
les
mov
jg
xchg
sahf
insl
mulb
mov
and
ffreep
xchg
pushf
or
push
mov
push
sbbb
add
data16
add
or
mov
cmpsb
jne
sbb
inc
dec
inc
shl
push
pushl
lods
mov
lret
jg
or
lcall
fdivl
add
sti
xor
inc
pop
out
loop
push
fdivrs
enter
xchg
jge
xchg
in
add
dec
ret
rcrb
notl
add
add
xchg
shlb
sub
lods
dec
cmp
mov
imul
push
lahf
mov
hlt
nop
jno
aaa
dec
daa
jne
addr16
sub
out
or
lods
jmp
cltd
pop
aam
push
lods
xchg
rcrb
push
mov
jp
cld
sbb
insb
mov
push
mov
lods
out
mov
in
lret
mov
jo
lock
mull
lock
call
push
xor
aad
ljmp
cltd
ret
aad
rolb
inc
xor
jns
dec
rcl
jne
pop
repz
or
stos
pop
push
push
aaa
and
stos
or
or
or
icebp
push
call
sub
jo
in
enter
and
stos
sti
int3
mov
cmp
dec
add
xchg
icebp
jle
lcall
pop
jecxz
cmpsl
stos
inc
mov
cmpl
data16
ja
jmp
addr16
inc
jne
insl
xchg
andl
inc
fwait
mov
test
push
imul
mov
fdivrl
jmp
loopne
stos
jno
dec
add
js
and
js
mov
cmp
stc
or
adc
outsb
pop
mov
stos
outsb
ret
cmp
mov
or
in
shl
pushf
int3
lcall
leave
inc
jo
xchg
test
mov
enter
fcmove
in
add
mov
adc
jo
cli
mov
sub
inc
cmp
or
int3
iret
lea
addr16
insl
scas
mov
mov
cmp
arpl
data16
xor
mov
pop
mov
cmp
push
aad
ret
int
aaa
les
sbb
cs
cmp
dec
or
cltd
jecxz
fst
fldcw
mov
stos
mov
mov
mov
push
xchg
cld
adc
sti
fucompp
lcall
mov
imul
and
out
push
int3
push
dec
arpl
or
or
mov
roll
xchg
cmpsl
nop
mov
mov
jl
ret
je
dec
sbb
add
xchg
lcall
mov
push
or
das
je
fistpll
jne
shlb
and
sub
fimuls
inc
add
add
pop
outsl
jp
lock
mov
inc
lods
dec
movsl
fcmovbe
in
xchg
mov
lret
jecxz
or
in
inc
cmc
or
pop
outsl
jns
or
idivl
xchg
and
jle
cmpsb
ja
cmp
inc
pop
xchg
inc
cmp
push
jmp
out
stos
popf
js
xlat
out
adc
or
xor
sbb
inc
clc
sbb
ljmp
and
ds
adc
mov
lahf
dec
imul
xor
mov
dec
adc
std
lahf
jbe
xor
and
out
sub
push
lahf
inc
inc
dec
daa
outsb
lods
into
mov
cwtl
mov
push
add
inc
iret
push
sub
or
cmc
icebp
pop
movsl
rcrb
popf
and
sub
gs
out
ds
lds
jecxz
sbbb
inc
rcr
xor
and
pop
or
lahf
sahf
sbb
push
in
and
cmp
ret
jnp
iret
stos
pop
jnp
repz
push
cwtl
or
xlat
and
daa
mov
sub
ret
inc
dec
shlb
mov
cmp
cmp
fucomp
movsb
scas
pop
fucomi
repz
xchg
xchg
mov
add
stc
lds
les
stc
mov
popa
push
icebp
and
cmp
mov
pop
adc
inc
and
jne
rcrl
test
inc
jbe
test
fadd
xchg
mov
aad
les
and
push
xchg
pop
xchg
stos
push
sbb
pop
jp
imul
push
loop
mov
cmp
cmp
sub
xchg
mov
xchg
fdivp
mov
xchg
popa
gs
jae
lcall
mov
and
stc
push
add
dec
aam
sahf
arpl
scas
push
lret
in
cmp
or
loope
mov
inc
xchg
in
push
cmp
movsb
and
jp
mov
mov
cmp
lret
and
sarl
scas
adc
ljmp
xchg
repz
lret
mov
inc
in
pop
inc
testb
push
mov
cmp
daa
push
insl
mov
rol
fsubs
xchg
enter
mull
stc
fisubl
imul
mov
std
pushf
mov
jno
mov
or
fsubl
mulb
jg
sbb
pop
popf
movsb
je
sbb
xlat
jno
sbb
push
clc
in
jo
mov
loop
cmp
lods
or
test
sbb
imulb
pop
sbb
fyl2x
pushf
in
sub
popa
jp
dec
insl
int
lret
mov
sbb
xchg
cwtl
or
xchg
push
data16
testb
imul
xchg
int
push
test
push
mov
fcoml
push
cmp
sahf
push
or
lea
repz
sbb
jo
jmp
mov
xor
inc
push
insb
lea
mov
push
sub
scas
les
aas
mov
and
movsl
imul
call
pop
into
xchg
adc
ror
push
xor
push
or
gs
and
xor
pop
test
outsb
shll
push
pop
stc
sbb
sub
and
fcoms
xchg
dec
sbb
outsl
xchg
xrelease
mov
fcompl
push
out
mov
push
dec
pop
je
jp
icebp
cld
xor
xchg
cld
or
test
inc
repnz
pop
inc
xchg
std
sbb
sti
jnp
adc
jnp
dec
pop
fwait
addr16
push
xor
ljmp
dec
cmp
testl
pop
push
add
mov
pop
flds
rorb
xor
loop
lcall
sbbb
std
jns
xchg
rcll
in
add
push
add
imul
fs
inc
lods
ja
ljmp
icebp
loopne
ljmp
jp
jo
outsb
add
idivl
test
and
jns
cmp
and
mov
pop
call
push
pop
jb
ja
and
outsl
inc
xor
push
dec
rcr
inc
outsl
xchg
cmp
inc
push
jmp
mov
add
pushf
dec
sbb
shrl
cmp
dec
pop
push
sub
adc
xchg
ja
dec
cld
lcall
sub
out
jl
xor
dec
pop
nop
push
lds
out
repnz
enter
and
xor
movsb
les
cltd
cmpl
shlb
pop
imulb
mov
lock
js
es
andl
popa
xor
push
inc
data16
sbbb
mov
popa
in
bound
cli
mov
and
mov
aad
fs
adc
mov
stos
in
fdivrp
loop
inc
mov
fs
outsl
mov
or
sub
sahf
sub
in
add
sub
aad
mov
adc
shl
in
in
mov
xchg
aas
cmp
ds
enter
cltd
add
mov
lods
out
xchg
push
ficompl
sub
mov
in
ret
ds
inc
daa
fdivr
add
ficoml
xor
out
xlat
in
inc
xchg
lret
cmp
lahf
pop
inc
inc
cmp
std
js
xor
sbb
call
in
sub
loop
xchg
mov
jno
sub
into
cmp
leave
xchg
lcall
ds
clc
mov
inc
push
jmp
jb
push
pop
out
int3
subl
jmp
mov
push
jb
jle
loope
gs
scas
mov
sub
dec
int
popa
sub
sti
mov
mov
ss
mov
sbb
je
inc
iret
call
jmpw
add
xor
dec
cmc
pop
ljmp
popf
push
dec
subb
pop
and
and
add
mov
mov
das
cmc
sub
mov
lcall
fiaddl
mov
cld
xor
adc
mov
bound
pop
fstpl
push
pop
int3
mov
popa
cli
push
ds
hlt
mov
call
and
jnp
outsl
and
pop
cwtl
frstor
xchg
pushf
xor
jge
test
adc
fs
pop
xor
inc
pop
adc
and
add
lods
std
movsb
jne
sarb
xchg
pop
xor
arpl
popa
jecxz
movsl
sbb
in
mov
lret
jp
mov
stos
mov
jbe
shrb
dec
push
addr16
jo
and
mov
aaa
mov
jle
les
movb
jo
imul
mov
mov
ljmp
cli
push
and
ficoml
and
shlb
add
cmp
mov
pop
popf
nop
cwtl
push
pop
mov
add
adc
xchg
cmp
in
int3
add
outsl
jb
fisubl
lret
pusha
into
cmpsb
iret
movsb
lret
mov
xchg
xchg
jno
mov
dec
subb
mov
xchg
add
push
and
in
mov
clc
push
jg
push
xor
js
shlb
jmp
mov
mov
pop
and
adc
sbb
fcmovne
sub
or
xchg
repnz
jo
lcall
jne
cmp
jecxz
dec
and
repz
adcb
enter
mov
popa
mov
mov
gs
cmp
cmp
push
movsl
icebp
push
adc
inc
xchg
aas
into
cmpsl
jmp
cmp
nop
jge
incl
mov
jne
clc
shll
xor
pop
mov
in
mov
xor
add
jnp
dec
dec
cld
aam
lods
std
fwait
aaa
shrl
test
xor
cwtl
fld
stos
jae
sub
adc
xor
vpcmpgtw
pop
neg
pop
ljmp
xchg
fs
mov
adc
popf
pop
xchg
je
lds
inc
ret
in
call
ret
mov
mov
ret
xlat
out
adcl
aas
cld
jmp
cli
xor
mov
fst
push
and
loopne
add
add
cmp
inc
sbb
xchg
or
xor
bnd
clc
ljmp
push
mov
shr
repnz
mov
adc
sub
rcrb
and
stc
out
dec
into
out
jns
xchg
aas
xchg
adc
fldenv
cmp
scas
test
jno
mov
dec
inc
cmp
add
fmuls
mov
sbb
stc
dec
outsb
jbe
enter
jecxz
lret
push
xlat
jae
mov
cmp
xlat
orl
push
sub
sub
imul
sbb
adc
push
mov
jnp
inc
pusha
movsl
mov
cmp
jb
xchg
xor
mov
mov
pusha
mov
sarl
bound
popf
jl
mov
and
aas
xorl
xor
mov
das
repnz
popf
add
dec
push
inc
mov
cmp
insb
inc
fadds
adc
aas
stc
imul
xlat
xor
inc
inc
push
and
pop
inc
pop
jns
dec
lds
inc
xchg
ficoms
icebp
leave
adc
popf
sbb
mov
or
jno
cwtl
mov
xor
xchg
inc
daa
mov
mov
or
add
jno
testb
outsl
aas
cmp
sti
fwait
icebp
clc
data16
cmp
dec
or
jbe
jp
fidivs
iret
shlb
mov
iret
jo
cmp
fsubr
cmpsb
and
es
mov
rclb
data16
push
cli
jp
jbe
xorl
sub
and
dec
mov
and
mov
in
adc
arpl
jbe
pop
mov
fsubrl
inc
dec
jge
cmpsl
insb
repnz
push
test
sub
pop
addr16
loop
inc
push
lods
pop
sub
leave
orl
sbb
cmpsl
lods
fnstenv
add
es
insl
loopne
aaa
mov
mov
mov
mov
mov
cmpsl
bound
jno
bound
pop
mov
cmp
sub
cmpsl
xlat
pop
ds
pop
jp
aad
mov
pusha
inc
cmp
or
in
mov
cmc
rclb
les
adc
jbe
das
imul
daa
cli
and
lods
mov
sub
sbb
dec
fisttpll
sbb
add
dec
add
jle
jne
cli
mov
mov
mov
sub
add
mov
pop
cli
scas
cmpsb
add
inc
nop
push
add
jl
mov
adc
nop
jl
andl
and
jo
mov
loopne
pop
je
scas
add
cmc
ficoms
pop
push
imul
ss
xchg
inc
and
stos
push
dec
dec
fsub
mov
out
pushf
fisttpl
gs
adc
sbb
mov
mov
ja
mov
mov
std
pop
xor
cmp
sbb
or
test
gs
insl
dec
mov
inc
mov
in
jp
leave
sub
push
jno
push
not
fdivrs
pop
cmp
int
std
push
pop
out
cmp
mov
mov
jbe
push
cmpsl
xor
mov
push
push
push
push
mov
mov
mov
fistpl
and
aad
push
sub
sbb
cmp
sub
jo
adc
dec
mov
sbb
insb
adc
dec
pusha
cmc
subb
mov
daa
and
mov
pop
pop
arpl
adc
and
ss
fwait
jl
repnz
fwait
mov
adc
add
sbb
cmpsb
shll
fimuls
inc
stos
ljmp
jb
mov
outsl
rcl
and
mov
cs
sub
sbb
push
fiadds
stos
movsb
xchg
gs
ss
repnz
xchg
in
cli
cmpsl
push
sub
rorb
sarb
cld
sbb
mov
xchg
mov
mov
out
and
push
out
pop
xchg
or
lock
push
xchg
js
and
sub
jne
mov
lret
sbb
inc
leave
sbb
jns
jle
mov
jecxz
xor
push
lods
cmp
adc
mov
inc
mov
cli
jecxz
neg
in
fwait
dec
lcall
xchg
stos
andb
ja
lods
outsb
loopne
sbb
or
cli
movsl
mov
aam
and
rcr
iret
add
scas
pop
and
pop
fildll
cmp
pop
xor
pop
stos
nop
push
ficoms
arpl
cmc
repz
push
pop
sub
hlt
lock
mov
and
cmpsb
push
mov
outsl
popf
mov
sbb
divl
out
stc
addl
repnz
push
loop
and
mov
jo
lods
add
popf
add
lret
mov
sbbb
mov
push
jbe
or
ficomps
scas
adc
leave
pop
imul
xchg
mov
stc
ss
xchg
repnz
adc
mov
ss
decb
leave
call
out
jae
data16
or
cltd
inc
lea
stc
aad
mul
sub
push
ljmp
inc
add
dec
imul
rorb
lahf
adc
ja
das
xchg
insb
sbb
sbb
jg
in
dec
xchg
jp
je
sbb
jmp
jle
into
mov
shll
stc
loope
sbb
ss
iret
cmpl
aam
jns
mov
imul
std
negl
mov
sub
outsb
insl
mov
jbe
ret
test
xchg
bound
inc
inc
inc
jecxz
lret
stc
push
arpl
mov
add
cmp
lods
pop
scas
jle
aam
rcl
lcall
loop
in
mov
div
xor
test
sbb
adc
pop
push
cmc
cmc
add
xor
je
out
adcb
xor
loopne
out
push
mov
xchg
lods
decb
cli
push
mov
dec
pop
push
mov
pop
mov
mov
mov
std
mov
and
ja
sub
cwtl
mov
jp
jbe
pop
ss
mov
sti
dec
sub
loop
mov
lret
jno
iret
outsb
mov
cmp
outsb
xchg
or
rcr
ja
popa
bound
mov
flds
xor
gs
mov
jmp
in
mov
in
shl
inc
lods
dec
mov
cmp
loope
xor
scas
fdivl
fldenv
loopne
ss
push
out
rorl
es
mov
jne
mov
stc
or
push
ja
or
les
xlat
fiaddl
orb
sub
lret
popf
xor
cmp
mov
addr16
fildl
pop
pusha
and
fs
push
dec
mov
mov
push
pushf
sbb
jle
sbb
out
or
scas
iret
pushf
adc
arpl
xor
cli
ficoms
lcall
xor
gs
xor
jge
dec
sub
addr16
scas
orl
ds
mov
pop
imul
stc
mov
nop
jae
outsb
mov
mov
xor
out
mov
and
mov
mov
jecxz
arpl
xchg
sbb
in
sbb
xchg
jno
mov
mov
mov
ret
dec
xchg
lcall
add
insb
cli
dec
sub
sbb
aaa
test
mov
xchg
ficomps
adc
sub
lds
aas
jbe
sub
shlb
fsubr
pop
popf
adc
sub
lret
insb
sti
faddl
scas
xor
fists
lds
shrl
ret
mov
pop
xchg
test
and
mov
lods
mov
push
fsubs
loopne
mov
stos
les
add
mov
cwtl
pop
in
cmc
dec
call
out
mov
push
fidivrl
mov
jne
subb
cmp
scas
push
in
xor
xor
pushf
xchg
xor
add
cltd
mov
std
lret
mov
rcr
xchg
lds
stc
loope
arpl
mov
add
sbb
xorb
sbb
mov
repz
mov
mov
out
adc
push
cmp
push
sarb
shlb
rorb
out
pushf
ja
jp
sti
out
or
pusha
sub
push
scas
rcl
test
jl
mov
testl
leave
test
lea
jecxz
jl
divb
ljmp
dec
sbb
xor
mov
in
lea
inc
jne
dec
mov
sbb
adc
sub
jg
stos
lea
rcrl
fs
dec
jno
fisttps
xchg
sbb
bound
xchg
jecxz
icebp
iret
or
scas
cmc
cmpsl
loop
fisttpll
dec
sub
enter
push
xor
pop
jnp
fs
cs
cmp
out
sbb
mov
popf
aaa
pop
outsb
jle
add
mov
adc
mov
or
stc
jno
or
sub
imul
fnstcw
add
cwtl
ss
movsl
inc
in
jge
add
aas
cmpl
lods
out
loop
mov
cltd
inc
cmc
test
ret
jp
aas
imul
push
cwtl
hlt
std
sub
push
clc
xor
cmpl
pop
fs
rorb
jp
cmpl
or
nop
mov
xchg
jg
popf
and
daa
imul
fs
adc
xchg
inc
cmp
mov
stos
jle
sub
lds
or
cmc
or
arpl
xchg
sub
sbb
adc
shll
mov
cmpb
mov
xchg
adc
push
push
les
mov
or
fstps
jb
aam
or
dec
cmp
int3
data16
pop
and
lods
inc
sbb
cmp
fadds
movsl
das
aaa
mov
jle
out
aam
jmp
divb
pop
jns
fs
mov
orl
fbstp
adc
push
add
jnp
jmp
repz
inc
iret
ss
and
mov
push
in
orb
mov
repnz
cmp
bound
mov
sahf
fiadds
and
das
add
bsr
pop
mov
outsb
mov
clc
cs
adc
cmp
popw
and
loopne
push
loop
out
mov
test
jne
lock
jg
pop
inc
stos
mov
cli
jnp
iret
int3
add
lods
pop
push
inc
cwtl
std
dec
adc
or
jmp
inc
mov
pop
sbb
repz
mulb
xor
leave
sbb
shrl
xchg
jmp
sbb
cmc
pop
mov
adc
jne
xchg
mov
cmp
jmp
jbe
icebp
jae
jg
inc
lods
push
sub
test
or
pop
lds
cltd
fildl
movsb
cmp
push
arpl
jp
scas
into
and
adc
and
jb
mov
popf
lods
mov
or
lds
jge
cmp
es
aas
push
data16
jne
xchg
aas
loop
or
jbe
adc
pop
js
xor
pop
fsubl
or
subb
push
jb
xor
das
fwait
jns
outsb
jp
pop
sub
arpl
setae
xchg
sbb
fsts
jno
lcall
or
mov
push
stos
mov
xchg
mov
fwait
sbb
int
adc
sub
lods
mov
jnp
test
push
xor
popf
push
add
jl
pop
xor
fldenv
push
popa
inc
call
mov
jb
xorb
in
stos
add
rcl
pop
decb
bound
mov
add
outsb
mov
leave
inc
rcrl
mov
sbb
sarb
xchg
into
dec
rcll
dec
movsb
sbb
inc
adc
and
sti
jl,pt
xor
call
les
int
cmp
jb
insb
mov
ds
movsl
sti
mov
insl
adcl
push
in
pop
imul
aaa
sbb
btsl
gs
sub
add
loopne
add
dec
adc
mov
pop
cmpsl
pushf
xchg
test
clc
movb
inc
and
mov
jno
sub
cmp
sbb
ret
and
in
xor
push
jg
push
inc
call
gs
int
sub
cmpsl
movsl
pop
jge
dec
mov
mov
hlt
das
pmullw
loopne
ret
sbb
cwtl
xchg
push
cli
in
fs
lret
scas
hlt
sbb
mov
cmpsb
mov
add
aam
std
stos
rcrb
pop
fs
or
pop
or
lods
fstpt
jbe
jle
cmpsl
test
cmpsl
cmpsl
adc
cvtpi2ps
lea
or
add
fwait
cmp
jo
cmpsb
divl
jae
jne
mov
xor
inc
push
sahf
insl
sti
push
jnp
mov
lods
dec
xchg
jno
mov
fmull
jno
cmp
adc
xor
xor
in
cmp
pop
mov
scas
out
jge
inc
lcall
sub
mov
sarl
jmp
inc
pop
inc
insl
js
cli
sbb
bound
into
mov
jbe
pop
xchg
hlt
testl
or
xchg
or
dec
outsl
pop
fdivl
mov
sub
dec
sub
pop
les
pop
sahf
stc
enter
push
in
jl
and
insb
add
jecxz
daa
prefetch
or
aam
inc
pop
shlw
pop
test
sub
add
fstpt
lahf
test
cmp
xor
cmp
idiv
cli
mov
jae
cltd
iret
shrl
jae
sbb
lcall
dec
cmp
and
or
iret
dec
in
xchg
jg
push
js
and
lock
xor
daa
stc
xchg
in
shll
iret
push
xchg
push
test
pop
push
jae
shll
lods
nop
mov
xor
hlt
int
mov
into
fdivl
mov
xlat
hlt
or
insb
push
insl
mov
inc
mov
sbb
std
rclb
dec
push
dec
in
dec
sbb
xchg
sbb
std
dec
xor
aaa
clc
mov
add
and
xchg
push
xchg
or
enter
or
in
mulb
lock
loopne
in
repz
fisttpll
test
lahf
cmc
add
cmp
sahf
lahf
push
cmp
mov
push
mov
push
cmp
outsb
fxch
ret
sbb
sbb
pop
jmp
pusha
sbb
sbb
insl
push
cmp
and
mov
aaa
out
fists
outsb
pushf
mov
rclb
cli
cli
mov
insl
ret
ss
not
arpl
repnz
int3
fwait
mov
add
xchg
and
xorl
mov
pop
loop
cmp
out
scas
jo
lods
enter
dec
mov
xor
cmp
mov
out
mov
jmp
or
testl
repz
cmp
lcall
pop
pop
shrl
mov
push
lret
xor
xchg
sahf
adc
adc
push
adc
in
rorl
mov
pop
adc
cmc
or
adc
test
adc
cmc
outsl
pop
stos
gs
test
dec
inc
fmull
pop
mov
xlat
loope
imul
and
xchg
mov
sbb
jno
mov
mov
faddl
clc
mov
xorb
xor
push
lcall
mov
push
xor
clc
lods
in
mov
fiaddl
int
insl
jno
in
mov
sbbl
aas
pop
enter
movsb
call
out
popf
stc
or
stos
or
and
cmc
xor
push
or
mov
into
daa
outsl
jp
mov
cmp
cmc
arpl
mov
insb
loop
or
cmp
xor
jmp
add
push
popf
mov
shlb
ret
push
in
push
mov
dec
mov
orl
mov
jge
push
jle
mov
mov
jbe
shlb
popa
dec
xchg
aam
fmul
inc
add
lds
inc
loope
stc
mov
adcb
lret
xor
mov
nop
sbb
add
pop
decl
mov
cld
in
push
push
mov
and
xchg
xor
xor
ret
push
pusha
int3
cmp
xor
fdivl
mov
iretw
xchg
xchg
or
adc
dec
jbe
pop
cmc
cltd
mov
dec
into
or
aam
xchg
xchg
add
pop
pushf
lret
fnstenv
add
mov
sub
ds
mov
jmp
push
pop
pusha
or
shlb
sbb
xchg
pop
lock
adc
push
push
mov
adc
xor
shll
in
push
mov
cmpsb
imul
or
pushf
mov
mov
pop
mov
add
in
bound
std
cmp
add
fiaddl
cmp
addr16
sbb
pop
cmp
jge
mov
rcrb
inc
push
out
mov
in
std
push
lods
sub
xor
sub
cmpl
inc
or
mov
dec
jmp
pop
push
loopne
sub
pop
or
xchg
xor
or
sbb
pop
dec
fsubrp
scas
fbld
pop
jo
ljmp
test
movsb
test
sbb
jno
push
shll
xor
in
repz
and
orl
loop
mov
test
sbb
lcall
or
xchg
ret
xor
jp
int
fsubrp
loop
and
iret
popa
fdivl
out
in
inc
enter
ja
xchg
int3
scas
mov
xchg
insb
jmp
out
mov
sub
push
daa
xchg
mov
aaa
fcmovne
call
jl
push
in
mov
loope
mov
push
jecxz
inc
fcmovu
jo
gs
cli
lret
shrb
and
cmpsb
jg
sbb
adc
add
jl
or
mov
xchg
rorl
push
jle
mov
int
xor
insl
ja
fisttpll
xchg
jb
sub
shrb
stos
sub
ds
in
cmp
insb
xor
daa
fwait
mov
push
push
adc
and
jle
xor
sub
and
xchg
pop
mov
mov
xor
cmp
jp
mov
cmpsb
int3
or
sub
out
cs
pop
add
mov
outsb
into
push
cmp
repz
xchg
dec
sahf
daa
and
stos
icebp
and
xchg
aaa
or
jge
adc
out
mov
in
push
push
inc
adc
cmp
imul
add
adc
sub
cld
cmc
outsb
xchg
dec
lcall
or
ficomps
adc
enter
push
cmpsl
add
or
lds
push
mov
add
mov
call
dec
iret
test
add
dec
call
push
push
in
xor
add
test
xchg
xor
jp
mov
aam
int
ret
xlat
sbb
and
dec
stc
rorl
xchg
xor
lds
push
js
mov
insb
outsb
add
push
call
pop
pop
fists
adc
rorl
es
fcoms
push
pop
cld
stc
push
ja
testb
sbb
push
test
stos
jns
sub
ds
fldcw
sbb
cli
push
push
pop
pop
test
push
shrl
xchg
pop
push
pop
call
or
sbbb
out
sbb
loope
jg
divb
add
mov
inc
cld
sub
mov
shl
pop
jo
out
mov
xchg
push
popf
mov
jae
jg
dec
inc
sarb
mov
punpckhdq
adc
loope
sbb
xor
sahf
test
mov
roll
mov
jle
out
push
jno
stos
outsb
arpl
loop
jge
cmp
inc
or
jo
xlat
cltd
jb
loope
cmpsl
pop
add
packsswb
gs
imul
or
jecxz
mov
fprem
js
sub
cld
out
push
and
push
push
pop
call
pop
test
and
add
in
inc
test
pop
scas
arpl
insl
in
cltd
in
pop
pop
mov
insl
test
fcompl
adc
gs
dec
dec
xchg
mov
sbb
shlb
push
rcl
shl
loope
jle
fnstenv
xlat
outsl
movsl
scas
mov
mov
enter
jnp
fnsave
inc
scas
sub
sbb
ss
jne
jl
das
repz
mov
cs
or
add
pop
daa
pop
xchg
lret
aas
lcall
lret
scas
loop
nop
ret
leave
xor
aad
adc
int
js
clc
hlt
sub
pop
std
adc
fidivl
mov
add
and
dec
mov
inc
mov
aaa
int
sbb
movsl
mov
aad
xor
cmp
test
add
add
stc
add
flds
nop
jns
or
mov
jge
jbe
hlt
adc
repz
push
jnp
testb
xor
ja
jae
orb
out
xchg
lea
sbb
jl
sub
sbb
nop
pop
cmp
mul
add
aas
sub
dec
cmp
sbb
jmp
sti
test
mov
repz
xchg
xor
test
push
pop
mov
ds
inc
fwait
mov
adc
movl
mov
in
add
mov
mov
dec
xor
daa
mov
cmpsb
push
test
imul
rol
into
pop
popa
xor
lods
rol
inc
cmp
jmp
rcrb
and
push
pop
lods
es
out
loop
push
push
jecxz
xor
lods
adc
inc
iret
or
mov
pop
mov
jl
sbb
mov
pop
xchg
dec
xchg
mov
lcall
ficomps
data16
or
out
add
cmc
sub
outsl
xor
xor
test
gs
mov
addr16
xchg
dec
stos
inc
inc
jmp
movsl
pop
pop
outsl
cmpsl
loopnew
sahf
stos
mov
repnz
lods
aam
repz
and
or
cltd
in
cmpsb
add
add
xlat
std
ror
sub
outsb
test
subl
cmp
scas
or
sbb
inc
lahf
pusha
jo
jns
aam
arpl
pop
in
dec
push
pop
dec
popa
aaa
sbb
mov
mov
xor
and
test
in
test
sahf
or
lods
rcrb
adc
mov
dec
sbb
sarb
or
shl
or
jns
jecxz
xor
fiaddl
sbbb
sub
data16
imul
shr
xchg
into
adc
add
mov
add
push
ds
pop
stc
dec
xor
fsubl
aaa
lcall
cli
sub
mov
in
imul
into
and
adc
imul
jg
imul
cmp
call
lcall
xchg
movsb
mov
dec
mov
mov
add
and
dec
push
pusha
sub
aad
mov
push
ret
movsb
andl
sbb
add
not
into
icebp
push
adcl
push
add
addr16
pop
cmc
adc
or
rcr
mov
pcmpeqb
insb
jg
call
sbb
and
scas
pop
movsl
mov
add
ret
rcl
dec
nop
mov
ret
mov
jecxz
jbe
pop
rcl
lahf
lock
dec
sbb
movsl
pop
mov
dec
inc
jmp
mov
or
push
add
les
jo
int3
pop
les
xchg
jne
pop
sub
add
sbb
outsl
jbe
lret
loope
cmp
push
nop
mov
in
xchg
adc
inc
loopne
movsl
lock
sbb
add
sbb
pop
add
lcall
cld
rorl
lret
loop
dec
push
enter
sub
mov
cmp
xchg
push
es
mov
inc
mov
pop
std
arpl
add
sbb
sbb
push
mov
push
fmulp
mov
je
js
xor
cmc
adc
jg
les
insb
mov
inc
data16
dec
mov
imul
lcall
je
push
sub
inc
popa
mov
lcall
pushf
mov
inc
push
lcall
gs
pop
je
addr16
pusha
arpl
cld
mov
add
dec
mov
mov
add
jne
push
in
inc
lcall
nop
adc
aad
or
aaa
sbb
int3
into
push
or
aam
jno
data16
xor
mov
add
dec
mov
loopne
push
or
sbb
in
cld
inc
mov
hlt
pop
imul
fcompl
sarb
aaa
mov
lods
or
mov
add
jg
inc
jle
jbe
or
sub
in
jns
mov
xchg
ljmp
stos
or
xchg
mov
pusha
pushf
fists
arpl
in
and
dec
mov
nop
or
test
or
in
jge
ja
xor
pop
fistpll
in
and
lds
and
ret
push
jnp
stos
test
push
movsb
aas
xchg
mov
sbb
xchg
lret
push
and
or
add
sbb
mov
cmc
out
push
mov
or
lret
repz
sub
mov
xchg
jae
jmp
lods
mov
sub
int3
or
add
das
sbb
push
push
mov
aam
cmp
int
jne
mov
mov
cmp
int
mov
mov
movsl
xor
hlt
outsb
movsb
adc
mov
or
fsubs
enter
inc
jb
xor
shrb
mov
add
mov
ss
cmp
lahf
cld
jns
or
nop
pop
sbb
cmp
or
pushf
arpl
or
aas
dec
movsl
mov
imul
sub
cmp
cwtl
out
sbb
xchg
cli
jns
xor
sub
mov
jg
cwtl
jge
ds
sahf
sbb
imul
inc
icebp
xchg
xchg
daa
xchg
inc
das
fidivrl
pushf
jno
adc
jb
sbb
lock
adc
dec
jp
xchg
mov
dec
mov
in
pop
lahf
mov
mov
or
add
ret
mov
pop
gs
or
add
sub
and
inc
ss
popa
pop
shrb
sub
xlat
mov
mov
cmp
lcall
call
inc
xor
testl
cli
das
shlb
pop
lcall
mov
inc
sub
or
loop
jecxz
or
xor
sbb
cmp
push
outsl
cmpsl
pop
hlt
mov
movsl
lods
jnp
or
dec
jle
or
js
cmc
sbb
mov
or
je
aad
and
xor
movsb
jnp
push
push
fdivl
cltd
pop
pop
adc
push
daa
cmc
jmp
into
jecxz
dec
push
xor
fistpll
mov
jo
and
jp
add
lds
daa
mov
shrb
or
pop
fwait
mov
pop
scas
aad
jecxz
adc
push
and
and
cmp
bound
bound
jo
movsb
mov
adc
pop
fisttpl
mov
add
sbb
ficoms
test
fbld
or
jbe
push
out
dec
jae
cmp
pop
popa
adc
adc
adc
cmpsl
pop
ljmp
mov
pop
fbld
cmpsb
mov
cld
stc
pop
cmp
xchg
daa
cmpsl
mov
daa
xchg
aam
fistpl
fildl
fwait
jle,pt
fwait
dec
sub
jno
enter
stc
sbb
sub
mov
lcall
inc
mov
push
sbb
or
clc
mov
push
ret
mov
shrb
mov
sub
sbb
int
in
mov
aad
ss
ds
rcrl
out
daa
fstps
cmpsl
cmp
xor
cmc
lret
xor
push
orb
jnp
pop
and
inc
gs
jge
fsubr
js
cld
nop
adc
mov
mov
rorb
in
jge
fisubs
and
cmp
and
aad
sub
push
jne
pop
mov
xor
inc
imul
add
mov
rcll
xchg
sub
leave
xchg
jmp
cmp
push
mov
clc
into
ljmp
dec
mov
pop
ret
or
push
pop
cmp
mov
call
lea
fdivs
mov
jne
jo
fstps
mov
sti
loopne
jb
sub
adc
pushf
sbb
adcb
stos
sub
das
loopne
fisttps
bound
adc
imul
aas
jle
dec
mov
aas
cmc
jne
cmp
test
xchg
psrad
and
sub
push
sahf
push
jno
and
lret
xchg
adc
fimuls
das
iret
push
inc
xchg
fidivl
cmpsl
add
sahf
ljmp
lods
mov
push
call
xchg
or
pop
adc
mov
ret
rcll
sub
ja
adcl
fsubrl
cmp
push
mov
jg
out
mov
sbb
rcrl
out
out
dec
and
cmpsb
test
lret
cmpsw
out
push
jmp
jge
mov
rclb
cld
sbbb
xchg
and
loop
fimuls
xchg
push
add
mov
sbb
outsb
pop
jmp
std
out
test
jo
cmp
stos
int
int3
push
stc
jp
lock
sahf
lock
in
fnsave
ss
fstl
test
lret
cmc
sub
fmull
xor
and
sahf
aad
jle
jne
je
ret
jle
test
stc
scas
cmovae
push
stos
ret
outsb
cmpsb
xor
sbb
pop
xor
lock
arpl
jmp
add
icebp
mov
lret
inc
div
mov
cmc
ljmp
stos
out
xchg
jl
inc
es
fidivs
sub
pushw
jns
mov
lods
fsubp
lahf
cmp
xor
xor
lock
cltd
push
ljmp
cs
push
je
add
shll
mov
fisubs
pop
inc
xchg
les
dec
out
inc
or
sub
xchg
insl
mov
or
pop
sahf
sub
das
int3
lods
jnp
jae
fidivrl
out
cmc
inc
pop
pusha
orl
sti
or
negl
lock
sbb
call
mov
and
mov
lcall
cmp
jnp
mov
push
pop
fimuls
lds
xchg
int
mov
xchg
ret
cmp
daa
adc
mov
test
repnz
and
mov
jle
cmp
adc
rcl
add
imul
inc
jnp
daa
xor
lcall
dec
jnp
inc
push
jo
aaa
rclb
or
push
lahf
inc
xchg
push
push
add
sub
out
push
insb
xchg
test
xor
shrl
decb
pop
mov
negl
mulb
negb
inc
mov
xor
add
fcmovbe
dec
test
lret
mov
inc
or
idivb
sub
push
cmc
jns
data16
cmpsb
decb
fsubs
or
sub
sbb
fdivrl
and
dec
std
and
gs
inc
xchg
cs
aaa
bnd
mov
dec
rorl
dec
xchg
enter
mov
popa
mov
jae
jmp
arpl
clc
inc
push
add
hlt
in
fidivs
sti
cwtl
fsubrs
inc
aas
adc
pop
pop
in
movsl
inc
push
push
insl
mov
fstpl
rclb
push
or
ja
jg
aam
in
xchg
pop
cmp
cmp
push
cmp
sbb
out
xchg
mov
sbb
push
aas
ljmp
lock
jl
sbb
dec
sbb
sbb
sbb
pop
xor
int3
and
iret
mov
jg
rorl
mov
inc
sahf
pop
inc
das
pop
hlt
sub
mov
or
mov
push
fnstcw
ds
cli
fs
lods
add
pop
mov
mov
sub
mov
push
sub
cmp
jno
stc
sbbb
dec
inc
into
cwtl
add
arpl
inc
jg
mov
push
lahf
in
sbbb
test
out
mov
cmp
add
movsb
push
adc
xchg
dec
loope
popa
popf
daa
jno
mov
cmp
imul
sbb
jmp
inc
push
cmp
daa
test
cmpsb
popa
sahf
jp
xorl
add
adc
xchg
roll
add
cmp
pop
adc
stos
in
ret
adc
scas
pop
js
jbe
aaa
inc
sub
and
xor
scas
xorl
lcall
sub
or
add
xor
lret
mov
lock
pop
aaa
pop
jae
movsb
imul
jge
xlat
cld
push
fistl
sahf
rcl
sub
shl
mov
rorl
mov
addb
push
movsl
fs
sub
or
dec
rorl
sub
push
test
lods
testb
jb
out
out
xchg
inc
loop
cmp
pop
sahf
or
sti
roll
les
and
xor
push
adc
mov
movsl
push
lock
jbe
xor
jb
dec
dec
fsubr
test
xlat
divl
lock
dec
xor
and
mov
mov
sbb
cmpsb
push
push
loop
push
add
dec
pushf
add
daa
inc
jae
cmp
or
jg
out
mov
cmp
sti
adc
shrb
orl
lock
inc
sub
movsb
pop
lods
sub
gs
sub
dec
jb
out
cmpsb
dec
lods
inc
sbb
insl
pushf
das
xchg
mov
or
xor
mov
jno
xlat
lcall
icebp
out
pop
inc
push
hlt
pushf
mov
testl
in
inc
xorb
insl
mov
sarl
scas
push
in
jge
shl
pop
mov
sbb
adc
ret
ss
gs
jae
jg
imul
xchg
mov
mov
jge
xor
push
cmc
inc
vcmpps
ret
aad
pop
cld
xchg
ja
hlt
ja
loope
sub
mov
scas
inc
aas
stos
jg
mov
jg
jbe
mov
mov
stc
int3
clc
aas
mulb
dec
push
fwait
lahf
mov
add
movsl
shll
shl
mov
push
sub
loope
rol
int
cmpb
dec
insl
push
cmp
mov
aad
adc
lret
mov
jecxz
mov
ljmp
in
lcall
and
jbe
mov
xor
mov
js
push
lahf
fbstp
out
inc
jmp
mov
xor
movl
pop
mov
out
mov
sarl
inc
xor
mov
movsb
inc
lea
inc
dec
xor
test
mov
and
sbb
add
loopne
push
lods
cmp
adc
ss
add
enter
or
sbbb
pop
in
inc
int
inc
lods
lea
add
mov
jbe
mov
pop
addr16
jl
in
jne
sbb
or
pop
aas
pop
movsl
mov
cmp
pop
pop
test
cltd
add
arpl
test
arpl
loopne
pusha
xor
inc
add
inc
fwait
inc
jns
iret
mov
dec
xchg
pop
es
push
xchg
ljmp
in
mov
adc
pop
dec
shrb
into
push
out
add
push
in
jge
scas
sub
and
gs
pop
repz
fisttpl
packsswb
negl
mov
stc
insl
out
iret
in
lods
cs
fdivrp
pop
dec
and
lret
clc
pop
cmp
orb
test
orb
jbe
xlat
pop
fwait
int3
push
mov
xor
iret
clc
imul
pop
imul
loop
pop
mov
cmp
jle
cli
fcoml
fisubrl
fcom
std
mov
mov
subl
xor
cmpsb
inc
cmp
gs
sbb
mov
pop
test
push
sub
xchg
dec
dec
stc
pop
push
xchg
mov
pop
mov
push
or
mov
out
or
jge
xchg
jno
rolb
mov
das
dec
dec
rcrb
stos
iret
hlt
jns
pop
es
pop
mov
xor
or
in
jecxz
leave
mov
stos
mov
push
jmp
xchg
scas
fwait
fwait
gs
lret
inc
ja
push
negb
repnz
pop
scas
mov
mov
sub
push
xlat
int
roll
add
cmp
sub
test
lret
dec
xchg
cmc
out
dec
inc
mov
out
jl
push
mov
stos
or
addr16
pop
xchg
cmp
mov
pop
mov
in
xchg
das
ret
dec
test
adc
jns
cld
fidivrl
imul
push
lea
push
pop
sar
push
inc
sub
add
in
ret
imul
ret
fistpl
mov
adc
dec
dec
out
fisubrs
pop
out
and
push
push
fsubr
cmp
in
loop
sub
add
jae
out
mov
mov
jle
jg
dec
jmp
lcall
lock
test
push
add
ljmp
cli
cltd
xchg
sbb
movsl
inc
lds
mov
lahf
enter
popa
pop
xchg
xor
jl
pop
or
bnd
fcomps
int3
jns
mov
bound
in
fwait
push
imul
adc
fistpll
sub
sub
sub
xchg
xlat
pop
shr
push
dec
in
insl
adc
je
ljmp
out
js
xchg
inc
jo
push
cltd
push
sub
fstps
mov
mov
mov
mov
arpl
jg
loope
mov
and
mov
fdivrl
and
stc
mov
outsl
out
outsb
or
inc
push
or
outsl
xor
xlat
jb
les
adc
inc
ficompl
mov
mov
push
and
fldcw
out
rcll
pop
mov
ss
sub
jbe
lret
and
mov
push
movsb
ss
lods
xor
sbb
stos
dec
imul
loopne
xchg
sbb
jbe
adc
in
xor
ds
add
stos
pop
dec
std
inc
jb
xor
sti
pop
mov
cmp
lock
aas
sub
bound
cld
int3
nop
cmpsl
sarl
dec
arpl
dec
xchg
mov
cmp
shrb
mov
xchg
jno
xlat
add
or
sbb
mov
data16
push
xor
or
mov
mov
or
push
push
hlt
cmp
lahf
mov
and
lret
mov
jle
mov
and
push
addl
dec
outsl
xor
xor
jg
cld
cmp
addr16
ja
loop
je
ss
fstps
push
ficompl
mov
ret
mov
loop
aad
ret
push
cmpsb
push
sub
fimull
bnd
insb
test
pop
stc
mov
jnp
jae
xlat
adc
xchg
rcll
stos
inc
movsl
mov
cmp
jnp
pushf
push
call
aam
test
pop
ja
movsb
out
cmpsb
sahf
jmp
mov
xor
adc
mov
lcall
call
insl
mov
mov
jno
mov
jmp
xchg
imul
dec
lcall
cmp
fmuls
cs
loop
mov
inc
inc
jne
jnp
fwait
stos
xchg
pop
arpl
pop
dec
mov
icebp
lret
mov
mov
cmp
inc
lods
push
add
xchg
cs
insb
mulb
pop
arpl
hlt
dec
fistl
in
icebp
adc
add
bound
push
scas
push
pop
push
pop
xchg
cmp
jnp
pop
mov
call
sti
adc
mov
push
push
xchg
pop
cld
mov
dec
gs
setne
movsb
in
shll
mov
scas
int
jmp
push
sbb
dec
insb
xor
outsb
xchg
ret
sahf
les
sub
inc
lret
mov
and
pop
push
push
sbb
mov
loop
jp
mov
push
mov
or
dec
mov
add
sbb
testb
xchg
ficompl
icebp
fwait
pusha
or
jle
insl
cs
es
jnp
push
mov
push
icebp
leave
das
push
inc
mov
andb
hlt
or
push
inc
jp
xchg
clc
test
or
or
xchg
inc
clc
pop
les
pop
ds
inc
pop
stos
cmp
sbb
cli
in
mov
adc
insb
cwtl
mov
push
fiaddl
cmp
shrl
xchg
sbbb
outsl
mov
jle
into
jnp
push
add
out
nop
fcomp
dec
fsubr
dec
and
sbbb
xchg
cmc
ud1
out
loope
pop
mov
and
fidivs
inc
call
cld
test
pusha
ds
das
adc
clc
pop
mov
mov
pop
out
adc
push
xchg
jg
add
xchg
cs
cmp
cmp
add
xchg
mov
imul
pop
cmp
test
cmp
sbb
ds
sbb
xor
lds
out
decl
stos
leave
mov
mov
adc
shl
ja
add
scas
sub
insb
lret
bound
scas
aad
jb
xchg
inc
lret
ds
iret
mov
xor
and
mov
pop
xchg
aad
pop
stos
mov
iret
sub
mov
and
or
std
sub
sbb
mov
cli
adc
das
test
adc
jns
into
jp
cmp
sar
repz
daa
call
sub
cmp
icebp
das
xor
push
mov
adc
inc
jp
jns
outsl
sahf
movsl
add
rclb
add
pop
xor
out
mov
push
mov
notb
insl
rol
js
cwtl
and
mov
popf
jbe
in
dec
outsl
ret
ds
lahf
xchg
ret
mov
iret
into
adc
sub
inc
mov
cmp
dec
jl
jno
mov
xor
sbb
and
dec
mov
and
movsl
mov
testl
test
sbb
out
test
jl
push
xchg
pop
cmpsl
sub
push
and
inc
mov
dec
pavgb
or
adc
das
je
fisubl
mov
subl
cmp
mov
lahf
mov
push
push
ror
jae
lret
aad
dec
push
adc
mov
xor
mov
push
scas
push
and
lcall
dec
scas
aaa
xchg
or
and
outsl
call
test
and
in
out
sbb
es
cltd
jae
mov
push
jbe
mov
jmp
sbb
lcall
dec
xchg
push
push
repz
out
sbb
mov
push
jno
cmp
cmp
push
dec
das
roll
pop
movsl
push
push
ds
adc
pop
imul
scas
inc
leave
movsl
mov
mov
sub
sbb
xchg
fiadds
ljmp
cs
dec
mov
hlt
push
cmc
and
rclb
mov
xchg
shll
mov
je
jbe
jbe
in
or
cmpsb
or
xchg
loop
pop
sub
mov
scas
pop
int3
pop
out
cmpb
lea
pop
lods
mov
jne
jno
ret
or
clc
in
mov
mov
and
lods
xor
scas
mov
inc
xor
xchg
out
xor
sub
push
mov
in
int
mov
add
xlat
jmp
cmpxchg
fldl
pusha
xor
add
mov
pop
mov
or
push
mov
movsb
push
add
sarl
lods
vmread
jp
inc
repz
repz
cmp
repnz
jae
pop
dec
insb
push
push
mov
scas
xlat
cld
mov
cmp
push
shrl
mov
mov
pop
xchg
into
int3
test
sbb
icebp
es
cwtl
roll
and
mov
imul
imul
sub
idivl
out
xchg
out
jae
fsts
test
mov
arpl
cli
pop
test
mov
push
sbb
enter
and
popf
inc
push
ljmp
mov
add
leave
scas
jnp
xor
sbb
mov
fcmovnbe
inc
pop
or
in
add
mov
xor
sub
push
in
int3
cld
sti
inc
ja
lret
mov
sarl
pop
add
push
push
add
jmp
mov
mov
inc
sbb
pop
push
inc
xchg
or
add
add
add
movsl
dec
pop
ret
cltd
push
sbb
cmc
cmp
in
jmp
and
and
sub
inc
ret
lcall
lods
stc
ret
mov
mov
mov
sbb
out
enter
clc
mov
push
sbb
or
push
aam
das
je
mov
sbb
imulw
loopne
adc
pop
mov
jne
sti
int
mov
mov
hlt
pop
jo
sbb
pushf
xorl
sub
fs
jns
daa
jb
push
nop
dec
jmp
or
out
inc
xchg
cmpsb
leave
sub
decl
pop
loope,pn
sub
xor
sbb
imul
jno
inc
xor
lods
xchg
test
dec
aas
xchg
jns
mov
adc
repnz
add
add
inc
adc
sbb
inc
sub
mov
cltd
scas
sahf
xorb
cld
clc
dec
clc
mov
negb
arpl
insl
xorb
jge
cmp
lock
fwait
sub
lods
bound
mov
enter
adc
and
xor
add
jae
mov
pop
adc
mov
xchg
fnstsw
imul
cmp
cmp
enter
adc
add
sub
and
aam
xchg
sarb
stos
add
or
push
pop
add
push
shr
cmpsl
mov
sub
icebp
push
nop
cltd
dec
push
jae
data16
lcall
jle
jae
test
pushf
es
sbb
push
int
jne
cmp
dec
or
mov
cmpsl
jae
cmp
inc
ljmp
in
push
cmp
cli
adc
leave
lds
sub
and
cmpsb
and
lods
cmpsl
and
jmp
push
imul
adc
xor
insl
lret
cld
shlb
mov
mov
subw
adcl
nop
enter
shlb
das
sbb
and
sbb
in
scas
adc
add
cmpsb
daa
cwtl
out
aaa
mov
rcrb
nop
loop
push
imul
mov
or
add
loope
xchg
xchg
shrb
push
fistl
bnd
add
gs
mov
mov
js
test
push
sbb
ret
pop
and
mov
je
mov
xor
es
out
push
cmc
sti
jp
andb
arpl
jae
mov
or
mov
in
xchg
mov
push
and
inc
fnstenv
xchg
sahf
pop
mov
int
stos
hlt
inc
push
mov
sbb
push
rorb
loop
push
add
in
inc
sub
fistpll
arpl
jns
inc
lods
cld
xchg
push
lcall
inc
icebp
and
stos
xor
repnz
mov
mov
push
xchg
pop
loope
icebp
inc
mov
jae
mov
orl
sbb
push
push
clc
inc
je
test
or
int3
rclb
aad
and
xor
fiaddl
mov
push
aaa
int3
cmc
mov
daa
ljmp
aas
das
cmp
xor
sarb
addl
stc
imul
sbb
xchg
add
mov
popf
test
lret
pop
fdivs
fs
push
mov
xor
and
cmpsl
dec
orb
xchg
xor
mov
popf
and
popa
xchg
and
inc
ds
lret
mov
mov
scas
fadd
dec
jmp
sahf
popa
inc
stos
xchg
sbb
push
cmc
push
cmp
xlat
sbb
out
add
fadds
dec
and
icebp
jg
pop
in
mov
or
jp
mov
daa
lds
xor
and
sti
pop
jl
std
out
mov
sbb
mov
xchg
fimull
inc
int3
in
orb
add
scas
jnp
pop
stos
pusha
leave
mov
ffree
dec
jp
cmp
lret
xor
mov
test
jge
and
fisttpl
or
sahf
and
mov
jno
fcom
mov
cs
jo
mov
jne
in
mov
cltd
xchg
cmp
push
and
in
pushf
mov
ret
jns
dec
rcrl
dec
jne
rolb
mov
addr16
jae
rcrl
hlt
cmp
cmp
aad
push
jge
jae
inc
and
and
xchg
pop
lds
xor
xor
pop
dec
fnstcw
dec
dec
stos
out
sbb
mov
xchg
pop
or
mov
stc
in
xchg
fmulp
sbb
adc
mov
pop
lds
and
jns
push
fstpl
push
mov
pop
test
dec
mov
pop
out
arpl
push
sub
ret
jbe
imull
jae
adc
in
adc
mov
jne
cmp
push
adc
rcrl
rorl
adc
xor
fisttps
inc
jle
pushf
pushl
push
stc
shl
pusha
jl
mov
sub
adc
xchg
loope
outsb
push
pusha
push
es
add
and
sahf
jo
adc
inc
adc
fwait
in
rcll
les
mov
clc
lret
popf
gs
std
ffreep
sbb
mov
cli
cmpsl
mulb
inc
mov
and
or
repnz
out
aaa
jae
insb
push
jns
aad
adc
fsubl
mov
pop
pop
pushf
and
cmpsb
stos
pop
shlb
xor
lahf
jo
jae
gs
shlb
mov
add
xchg
cmp
cld
lahf
outsl
lds
xor
dec
scas
push
mov
insl
mov
jle
jp
cltd
inc
and
ret
jo
or
std
aas
stc
lds
ror
aam
sarl
pop
push
insl
pop
insb
mov
inc
push
mov
movsl
inc
push
cmp
fcmovu
xor
idiv
sub
xchg
push
lret
imul
jge
pop
sbb
rol
mov
add
daa
cmp
mov
hlt
stos
jo
mov
popa
test
sub
sbb
ljmp
inc
cmc
mov
aam
cld
fsubrs
xchg
pop
imul
push
cld
ds
and
push
leave
jo
lret
rcr
cli
pop
bound
mov
aaa
lcall
movsl
test
sub
lret
xchg
andl
add
nop
sbb
jecxz
repz
lock
inc
inc
cs
fisubl
dec
lods
mov
jo
in
xor
lret
outsl
insb
pop
dec
pop
cmpsl
mov
iret
mov
dec
adc
jae
aas
daa
lcall
jbe
add
cmp
pusha
jg
lret
pop
pop
into
or
mov
pop
repz
jb
jnp
je
xlat
int
repnz
xor
push
mov
jb
or
adc
fnsave
clc
xchg
popf
in
push
lock
rcl
rcrl
fs
xchg
js
inc
adc
add
test
rorl
inc
das
notl
sub
orb
pop
mov
push
in
data16
jg
sbb
pop
sbb
and
ja
adcl
sub
xchg
lret
sub
adc
cli
js
out
stos
add
mov
sub
adc
sbb
jno
adc
push
dec
cli
mov
call
xchg
jnp
pop
add
mov
mov
pusha
dec
mov
aam
and
cmp
or
mov
push
js
stos
dec
push
inc
arpl
dec
rcll
dec
arpl
inc
or
imulb
jno
mov
stc
fnstenv
pop
xchg
mov
push
and
pop
push
aam
jp
pop
data16
mov
enter
in
gs
movsl
mov
lds
test
iret
mov
pop
add
cli
xlat
push
jp
testl
arpl
ja
xchg
lcall
push
inc
add
mov
inc
loope
xor
or
fs
imul
inc
out
roll
mov
xchg
loop
or
shlb
mov
cs
iret
jmp
dec
popl
xor
or
ficompl
mov
add
jmp
inc
sub
in
pusha
lret
sbbb
cmp
cmpsl
adc
iret
lea
cmovae
jb
dec
add
into
pop
sbb
mov
fwait
pop
push
pop
stc
rclb
stos
lods
cmp
mov
xor
inc
sbb
stos
popa
ficoms
mov
sahf
adc
dec
jo
dec
sub
xor
pop
lcall
inc
push
lea
xor
push
mov
mov
cmc
or
nop
aam
les
or
call
push
mov
xchg
xor
lret
mov
out
cmpsb
icebp
movsl
jg
cs
stc
out
xor
mov
imulb
add
arpl
mulb
mov
pop
and
mov
aas
or
cmp
hlt
and
jo
or
cmp
cmp
out
inc
mov
mov
outsb
sti
iret
aad
pop
adc
jbe
xchg
pop
lcall
rcrb
sbb
jno
push
inc
outsb
addr16
or
mov
imul
icebp
pop
adc
es
scas
jb
adc
in
inc
add
movsl
mov
popa
lock
out
mov
rclb
jb
pop
pop
or
stc
push
push
loopne
ds
xchg
ljmp
cld
outsb
cmc
inc
sbb
dec
mov
out
pop
inc
shll
in
out
ss
cmp
sub
outsb
into
xchg
in
and
xchg
push
push
dec
xchg
jl
stos
pop
sub
pop
xor
addb
dec
cltd
cs
push
sbb
pop
xor
fisubrs
in
int
fmul
ficompl
lods
or
pop
mov
shr
jo
cmpsb
or
shlb
inc
in
ss
repz
les
pushf
mov
ret
push
adc
inc
mov
sbb
stos
jo
ds
jmp
test
jno
dec
mov
xchg
int3
or
and
stos
xchg
mov
sbb
movb
pop
pop
cltd
xlat
jns
scas
dec
and
scas
in
lods
push
push
stos
les
repnz
xchg
jb
dec
xor
add
shl
ficompl
in
sub
push
rcrl
or
mov
dec
adc
or
or
rorl
in
jno
push
test
jg
jnp
leave
add
pusha
insl
and
mov
xor
repnz
iret
mov
xchg
mov
or
add
adc
add
inc
pop
sub
arpl
inc
xchg
or
loopne
scas
xlat
mov
push
xchg
mov
sahf
iret
and
sbb
int3
nop
lahf
loopne
xchg
jecxz
mov
sahf
pusha
pushf
add
popa
ret
jno
jae
shl
fmull
adc
cld
and
fimull
test
pop
sbb
push
pop
push
xchg
aad
push
lcall
push
aam
into
sub
ret
push
mov
sbb
xchg
or
dec
pushf
dec
and
incl
mov
pop
jnp
rclb
sarl
ja
add
sbb
in
loope
and
add
mov
adc
and
imul
ret
movsb
test
repnz
lds
xchg
jle
out
adc
testb
mov
sbb
pop
mov
fldl2e
int3
ss
and
sbb
push
pop
and
cmp
aas
dec
mov
fwait
jl
mov
cmp
xchg
lret
and
rcrb
jge
and
add
cmp
rclb
es
bound
cmp
push
sub
cmpsb
movnti
daa
cmp
mov
cmp
cmc
out
call
xchg
lsl
sub
lods
call
cmpb
fs
out
inc
outsl
lock
mov
lods
sub
adc
aam
jmp
add
mov
lock
les
lods
test
mov
dec
and
cli
out
loope
mov
mov
cld
xchg
shll
ret
jae
test
jle
cmp
sbb
into
jle
mov
fs
mov
flds
rorb
push
rcl
xor
hlt
loopne
test
ds
pop
xor
push
add
iret
sti
mov
fs
or
cwtl
subb
es
mov
xor
mov
cmp
mov
or
mov
jne
shlb
push
imul
loope
inc
es
pop
lods
popa
in
clc
aam
mov
lds
add
dec
aad
sub
or
flds
les
in
call
imul
into
out
push
add
in
int3
push
xchg
leave
xchg
roll
leave
xor
xorb
icebp
xchg
cs
push
adc
cwtl
cmp
sahf
test
inc
lds
push
push
stos
inc
dec
test
fbstp
jecxz
test
test
inc
cld
cmpsl
mov
pop
cmp
out
test
lods
popa
addr16
add
mov
ret
mov
jmp
jo
fldenv
popf
pop
out
fsubl
stc
cmp
xchg
sbb
jp
xor
rolb
rcrl
push
and
dec
jecxz
bound
fnstcw
xchg
xorb
cli
and
mov
xor
dec
xchg
repnz
ret
aam
mov
pop
xor
adc
dec
dec
aam
or
inc
fists
pop
xor
repz
fwait
xor
adc
ds
std
sbb
lods
into
fs
dec
and
adc
push
jmp
jecxz
pushf
mov
cwtl
xor
mov
test
jg
shlb
test
lods
inc
and
inc
and
inc
jmp
mov
mov
pop
inc
dec
aaa
outsb
xchg
mov
outsb
fwait
jmp
push
push
mov
in
fisubrl
jg
jg
or
in
test
xor
dec
fld
shlb
mov
cli
lret
or
inc
xor
dec
hlt
scas
pop
sub
xchg
ficoms
fnstsw
mov
cmp
and
cmpsl
sub
dec
pop
pop
mov
mov
ss
dec
fwait
into
mov
mov
ss
in
push
push
out
lcall
cmp
pushf
imul
mov
fmull
cmpsl
jecxz
les
out
sbb
inc
fisttpll
sbb
int3
xchg
testb
sbb
pop
xchg
test
out
scas
hlt
out
cmpsb
adc
sub
mov
pop
jp
mov
cli
test
stos
andl
pop
test
stos
xchg
dec
sbb
je
sbb
gs
sbb
push
pop
loope
nop
outsl
jo
loopne
movsb
sub
ficoml
push
sbb
scas
cmp
mov
scas
cmp
add
push
jmp
in
mov
pop
insl
int
jae
lret
mov
ja
mov
jns
dec
dec
lods
movsb
lds
xlat
in
pop
repnz
xchg
pushf
add
movsb
xchg
nop
push
fbstp
in
pop
call
jb
stos
int3
xchg
inc
xchg
in
loopne
pop
mov
shll
add
stos
pop
sbb
pop
fdivrl
jae
xor
adc
stos
adc
enter
mov
adc
outsb
cld
jbe
test
or
adc
lcall
int
sarl
xor
and
movsl
pop
xchg
jmp
push
inc
add
fidivs
fstps
mov
xchg
arpl
popa
into
mov
mov
mov
sahf
das
dec
mov
adc
incb
xchg
sub
repnz
test
adc
sarl
jnp
inc
push
cltd
dec
sbb
iret
cmpsb
jae
xor
stos
jae
push
or
in
jmp
sahf
pop
pop
clc
dec
adc
hlt
outsb
pop
mov
ret
das
testb
es
push
sub
faddl
int3
rcll
ss
in
mov
inc
imul
pop
cmpsb
les
loop
sbb
leave
dec
mov
pop
add
leave
dec
gs
adc
daa
xor
popa
int3
icebp
cmp
add
into
sub
push
sub
pop
add
push
loopne
imulb
add
subb
inc
and
sub
and
xchg
sbb
mov
dec
fsub
jno
movb
mov
fs
enter
adc
cmp
in
push
std
jmp
inc
add
xor
stos
push
dec
into
shll
cmp
stc
pop
inc
inc
jg
inc
push
mov
lea
call
loop
jo
fstpt
loope
cmp
jb
out
movsb
push
pop
int
or
aam
inc
test
or
stos
cmp
scas
push
pop
fwait
pushf
lods
mov
push
repz
dec
mov
repz
push
popa
es
scas
out
cld
push
push
push
js
add
jge
mov
popa
mov
adc
out
xor
cmp
or
gs
sbb
jp
enter
sti
xor
ret
pop
and
push
or
popa
ret
je
subb
lods
push
mov
sti
add
imul
mov
xor
add
test
sbb
xchg
cmpsl
adc
xor
pop
sarb
xchg
ja
aas
stc
sub
sub
sahf
ret
in
aas
cmp
stos
je
and
and
mov
fs
ret
mov
push
cmpsl
xor
mov
jnp
in
cmp
mov
jmp
pop
pop
aaa
stos
jp
insl
cwtl
in
push
aas
sbb
pop
jmp
iret
ljmp
mov
dec
pop
lea
fdivr
cmp
add
and
scas
test
xchg
jnp
int
stos
push
sub
push
jl
mov
pop
adc
push
or
jecxz
sub
sbb
fistpll
mov
inc
xchg
and
cli
add
in
and
in
popf
scas
inc
add
insb
mov
mov
or
popf
pop
push
mov
call
fidivrl
or
pop
pop
lcall
ljmp
and
rcl
xorl
mov
adcl
cmpsl
sbb
ss
sub
inc
and
mov
pushf
stc
loopne
aam
xchg
inc
pop
into
and
adc
push
mov
add
cmpsb
cltd
mov
jbe
js
push
pusha
or
sub
ja
sbb
mov
xchg
xchg
outsl
enter
std
push
mov
jg
add
ret
mov
sbb
out
and
pop
add
dec
dec
mov
inc
xchg
scas
jecxz,pn
insl
add
shll
ror
cmp
adc
aam
jbe
or
pop
and
sub
stos
xchg
faddp
xchg
mull
jp
lret
jl
push
xor
adc
push
and
idivl
andl
lret
or
ss
pop
mov
sbb
movsl
js
push
jae
mov
adcl
pop
rorl
dec
scas
ja
popf
sbb
cmpb
out
repnz
push
les
adc
lret
es
jb
push
adc
dec
lret
xchg
inc
aaa
jge
jp
shlb
add
addr16
fbld
sub
cmp
dec
sbb
push
inc
pushf
dec
cmp
sbb
adc
jge
and
orb
dec
mov
mov
cmpsb
xchg
mov
lret
idivb
dec
mov
pop
or
icebp
or
xchg
dec
or
aad
sbb
xchg
ret
clc
scas
cmpsb
fsub
repnz
ja
cmpsb
cmpsb
imul
pop
roll
cs
ret
add
mov
into
icebp
adc
arpl
mov
stos
push
outsl
add
xchg
cld
mov
lods
mov
xor
pop
or
shll
push
ja
clc
nop
std
cltd
out
imul
cld
cmp
mov
xchg
lret
stos
imul
orb
jge
pop
mov
jne
call
pop
xor
sahf
adc
push
adc
mov
fwait
dec
xor
mov
fmull
icebp
jno
js
scas
dec
xorb
test
jbe
inc
or
mov
out
inc
mov
lret
xor
and
insl
cmpl
lea
in
dec
push
jmp
repnz
inc
lods
cmc
test
cmpsb
les
fsts
dec
dec
push
jmp
rcrl
pop
sub
mov
adc
jno
rcll
adc
mov
imul
fstpt
inc
cmp
mov
popa
inc
sbb
lods
push
or
nop
fwait
sbbl
mov
dec
sbb
icebp
cmp
in
ret
cs
cmp
pop
add
outsl
lock
cmp
add
int
push
aaa
ja
addl
jns
pop
and
mov
adc
mov
pop
loop
push
sti
jno
leave
and
inc
inc
xor
mov
gs
ret
fs
clc
mov
daa
pop
clc
inc
or
cmp
rcrb
add
mov
push
mov
and
mov
js
xor
orb
mov
nop
mov
movb
jmp
pop
cltd
add
or
xor
inc
adc
lret
fptan
push
jl
out
xchg
xor
inc
xchg
adc
leave
jb
mov
push
lock
inc
jge
cwtl
enter
in
cmp
sub
xchg
xchg
aas
inc
pop
int
and
pushl
cmp
daa
mov
std
js
nop
in
xchg
stos
fstps
enter
je
out
jo
mov
adc
push
mov
cmp
push
subl
dec
push
dec
in
aam
push
mov
into
jl
cmc
add
popf
xchg
fs
jecxz
jns
dec
jge
mov
imul
rcll
add
je
xchg
mov
rcr
sbb
xor
in
stos
cmp
sub
mov
subl
push
or
filds
dec
jmp
xchg
mov
ret
test
je
jne
les
jnp
inc
loopne
sbb
jns
pop
shl
push
ljmp
shll
xor
push
inc
iret
inc
gs
scas
incb
in
pusha
and
cmp
bound
movsb
pop
stc
cmp
dec
sub
loope
and
xchg
cmp
pop
or
cwtl
xchg
add
push
add
jmp
xchg
pop
cmp
mov
loope
repnz
xchg
sub
pop
fmull
ljmp
bound
mov
outsl
in
sbb
push
fwait
mov
leave
mov
imul
dec
fstp
stos
cs
push
or
xchg
dec
mov
dec
xchg
xor
mov
add
cmp
and
adc
jo
test
pop
cltd
mov
std
adc
in
in
cmp
loop
into
cld
mov
jl
adc
jg
jnp
js
loopne
inc
aam
fs
pop
dec
nop
jecxz
and
mov
cmp
ret
sbb
cmp
push
jno
mov
jb
in
jmp
pushf
inc
inc
repnz
jp
es
mov
jne
stc
es
mov
push
lods
pop
adc
fisubs
pop
add
outsb
dec
cmp
pushf
jmp
pop
movl
pushl
loop
adcb
cs
inc
jle
sbb
js
mov
into
cmc
mov
push
in
clc
pushf
insb
push
push
adc
add
cli
in
sar
test
adc
icebp
sbb
in
jle
call
popf
mov
call
add
adc
add
fwait
jmp
popa
pop
test
insb
or
pop
sar
push
lea
js
and
cmp
es
mov
inc
ss
inc
mov
mov
daa
xor
mov
insb
dec
sbb
xchg
js
js
add
lahf
stc
leave
push
lock
test
or
mov
loope
jo
cmp
jbe
movsl
or
push
mov
inc
adc
pop
add
lods
adcl
les
sahf
test
out
popa
push
pop
mov
cmc
fimull
mov
dec
sub
and
hlt
pushf
out
jb
dec
scas
pushf
jae
fs
sbbl
mov
mov
or
mov
insw
mov
mov
pop
pop
sbb
add
mov
add
mov
jp
xchg
popf
pop
testl
add
sub
enter
lea
pop
lret
push
test
lea
sub
shl
push
jle
add
je
cmc
mov
das
jmp
xchg
cmpsl
gs
and
nop
sub
mov
repnz
dec
nop
es
pop
fcoml
cmc
outsl
cld
mov
adc
ret
cmc
in
outsl
out
mov
or
adc
push
cmp
ficoml
scas
fcmovnu
jecxz
xchg
icebp
jp
add
or
ljmp
sti
dec
cmc
mov
push
add
aad
xchg
jl
pop
inc
jmp
add
lret
mov
leave
ja
aaa
mov
ret
cmp
pusha
dec
pcmpgtb
xor
imul
mov
mov
leave
and
lret
pop
push
xlat
push
daa
jmp
scas
adcb
lods
xchg
dec
imul
cmpsb
into
mov
jo
or
cmp
adc
xchg
insb
sub
add
aad
cmpsb
and
shll
pop
sti
es
inc
xchg
js
std
cmp
and
sti
push
test
orb
and
cmp
test
lods
mov
sub
arpl
xchg
lahf
adc
repnz
stc
cmp
mov
in
push
cmc
jecxz
loopne
mov
fdivrl
addl
sub
smsw
mov
iret
sbb
add
in
fstpt
add
and
sbb
push
dec
scas
push
mov
fstpl
jecxz
dec
sub
imul
inc
xchg
mov
or
cmpsb
repz
or
mov
adc
xor
and
adc
fstps
icebp
xor
nop
inc
pop
aad
je
xor
push
cs
xchg
idiv
es
daa
push
lods
rcrb
das
sbb
fldcw
stc
popf
pop
or
mov
add
int
outsb
aas
es
xlat
push
out
ret
mov
sub
dec
inc
mov
sti
fwait
addr16
mov
lahf
int
mov
dec
mov
and
data16
clc
iret
mov
and
stos
int
into
push
add
and
sahf
xor
cmp
aam
js
jg
push
xchg
mov
or
cmpb
pop
int3
test
andnps
and
jmp
add
lods
lret
jl
and
in
in
das
xchg
in
sti
sahf
in
dec
lods
inc
cmp
sahf
push
mov
nop
insb
or
jg
push
insb
leave
jle
xlat
adc
sbb
xor
ret
inc
xor
or
jmp
adc
fnstsw
cmp
push
addr16
mov
push
sahf
add
inc
dec
inc
inc
sbb
andl
jbe
mov
in
insb
in
out
mov
xchg
outsl
std
arpl
pop
push
pop
lcall
xchg
outsb
cmpsl
mov
repz
xchg
jcxz
addl
ret
fsubl
pop
or
mov
xchg
in
sbb
loopne
sub
sub
mov
dec
cltd
int3
into
cmp
xchg
popf
push
and
fdivrp
dec
sbbb
roll
pusha
jae
imul
in
and
dec
sub
mov
cmpsl
repz
xchg
lcall
test
inc
add
xchg
data16
push
dec
cmpsl
popf
int
movl
cli
mov
mov
loop
arpl
stos
fiaddl
nop
pop
mov
shlb
push
mov
push
or
stos
sub
pop
adc
push
repz
sub
xchg
out
xlat
fs
push
jb
ds
jns
sti
dec
cwtl
aas
xchg
add
adc
in
out
xchg
mov
cmp
mov
push
shrl
pop
pusha
xchg
cs
jl
jg
sarl
mov
fstl
fidivrl
into
mov
xorb
cmpsb
inc
xlat
inc
cmp
pushf
int
pop
ret
outsb
hlt
jl,pt
andl
shll
dec
jp
call
sub
mov
pop
push
fistl
sub
ja
dec
pop
jle
jle
dec
ficoml
cmp
or
scas
nop
imul
ficomps
pop
lods
out
xor
push
out
add
xchg
mov
bound
dec
cmp
mov
fdiv
mov
and
pop
or
xor
cmp
push
in
outsl
fnstcw
add
test
aas
ss
and
mov
inc
mov
cmp
aad
jbe
into
int3
push
push
pusha
pop
call
push
sub
cmp
adc
pop
push
movsb
or
lahf
sub
js
fadds
ljmp
popa
dec
scas
in
hlt
cmp
fisubl
mov
fidivrl
xor
xchg
adc
xchg
out
or
cmp
lretw
push
mov
addr16
testb
mov
xchg
call
dec
cltd
or
movsb
xchg
dec
jmp
test
mov
xchg
xchg
ljmp
iret
out
xor
bound
mov
andl
and
lcall
dec
ret
test
dec
int3
dec
mov
test
leave
cld
mov
ror
xorb
mov
fisttpl
lods
jae
and
mov
mov
pop
call
xchg
jecxz
mov
data16
cwtl
pop
mov
and
pop
and
lods
lcall
mov
jge
mov
mov
xor
fistps
imul
rolb
inc
and
or
cmp
push
cld
jge
xor
pop
les
addr16
stos
adc
lock
push
push
dec
inc
call
xchg
pop
notl
mov
loop
push
es
lahf
loope
add
cmpsb
pusha
mov
cmova
cld
lea
cmpsl
xlat
sbb
cmpsl
rorl
sti
bound
mov
adc
std
ret
cmc
and
mov
jmp
into
lods
sbb
test
in
call
jnp
sub
fs
pushf
shrl
adc
xor
add
cmp
mull
iret
repz
movsb
and
xor
push
xchg
mov
pop
and
adc
out
orl
or
inc
loope
xchg
mov
je
mov
push
cmp
mov
clc
arpl
addl
imul
or
fdivrl
ds
test
mov
bound
ljmp
shl
lods
sti
subb
filds
inc
ss
scas
pop
sahf
mov
call
push
cmpsb
je
fsubp
int
inc
scas
dec
jl
lret
rcll
imul
or
inc
mov
ds
sub
fwait
mov
push
int3
repz
mov
cmpsl
out
lock
es
call
dec
daa
inc
xchg
in
pop
lods
mov
stos
add
loopne
add
mov
addr16
into
icebp
addr16
jge
fsubrs
push
push
sbb
testl
sub
cs
incb
and
xchg
pop
inc
stos
dec
mov
fadds
push
out
shll
and
hlt
mov
xor
add
fnstcw
xchg
in
xchg
push
outsb
les
ret
fisubrl
leave
sbb
cmp
daa
jle
cwtl
ja
ds
loop
xchg
mov
push
inc
or
or
testb
inc
ja
push
push
cmc
in
ret
push
les
mov
jb
push
pop
and
std
xor
test
dec
test
addl
add
mov
out
int3
add
ljmp
lahf
mov
sbbb
loop
lock
fsubrp
add
inc
rcll
scas
into
inc
and
popf
pop
push
cltd
std
mov
movsb
fimull
icebp
ret
inc
pop
fidivl
cmc
xchg
jmp
jns
mov
negl
jo
out
test
mov
fdivl
pop
mov
xlat
insb
xchg
lds
mov
xchg
lods
dec
sub
inc
loopne
mov
jmp
and
roll
or
rolb
ret
lock
pop
bound
pop
lea
cltd
lcall
fidivs
shll
cmp
jnp
or
out
gs
subl
or
inc
xchg
shll
out
push
sbb
lcall
iret
cmp
lret
inc
inc
repnz
adc
aaa
lea
sbb
push
sti
sbb
inc
rorb
je
fidivs
aam
xchg
lahf
loopne
ljmp
or
and
push
ficoms
out
mov
out
shrl
jle
subl
imull
fisubrs
aad
cmp
mov
test
aam
fcmovb
mov
mov
dec
lret
or
bound
arpl
jg
sbb
scas
roll
and
test
push
call
flds
push
or
and
ss
jg
cli
mov
push
xor
jae
out
pop
push
push
adc
stos
cmp
cmc
sbb
and
or
jb
loope
jbe
add
xchg
jl
or
push
xchg
inc
xchg
cwtl
dec
pop
sub
adc
in
test
dec
sbb
enter
dec
or
and
add
popa
mov
jmp
mov
stos
mov
es
sub
sahf
sbb
cmp
lcall
or
add
cmc
xor
leave
gs
stos
jp
add
nop
adc
mov
and
std
push
icebp
jecxz
jmp
fs
loopne
mov
adc
pop
cmp
outsb
subl
lods
pop
adc
inc
mov
push
jbe
push
push
pushf
sub
outsl
mov
ljmp
lods
mov
lods
repnz
lock
outsb
push
pop
icebp
sub
adc
push
jp
idivb
daa
daa
pop
jo
add
and
mov
pop
jnp
cmp
movsl
adc
inc
ret
lret
pop
dec
xor
push
adc
add
adc
popa
movsb
push
xchg
mov
jmp
and
sahf
sarl
insl
jecxz
test
xchg
jno
int
adc
inc
mov
pop
clc
adc
xor
or
push
add
or
cmpsl
jae
and
je
or
scas
rep
pcmpgtw
dec
xchg
addr16
popa
or
or
ffree
rcrb
cltd
jo
sub
sbb
in
adcl
sub
inc
jno
addr16
divb
sbb
jnp
cmp
mov
and
inc
mov
int
jbe
jno
jb
jb
jns
mov
xor
xchg
subb
repz
adc
cmp
mov
or
outsb
sbb
cmpsb
bound
push
mov
mov
cli
dec
testb
loope
sbb
sub
and
insl
cltd
test
insb
outsb
popf
lret
popf
fbld
adc
sbb
fs
aam
xor
aas
outsb
subb
inc
ljmp
or
mov
jns
sub
jp
out
data16
ret
addr16
cmpb
inc
stc
bound
add
lahf
xchg
push
mov
push
arpl
stc
sbb
jb
jns
daa
pop
adcl
adc
stc
test
arpl
fisubl
ljmp
jno
cmpsb
repnz
mov
sbb
cli
lods
je
jne
pop
mov
cmp
lret
inc
push
push
and
out
cmpsb
xor
sarb
and
lahf
pop
xchg
add
pop
popa
xchg
mov
sub
mov
les
loopne
and
enter
mov
lea
pop
testl
pop
imul
sbb
sub
push
jnp
iret
daa
pusha
xchg
mov
clc
inc
fadd
js
imul
bnd
push
mov
pop
inc
and
or
test
xor
daa
jno
pop
add
subl
pop
scas
in
jmp
testb
fcmovu
insb
mov
mov
das
insl
sub
mov
cmp
lock
test
repnz
pusha
std
adc
or
je
adc
cs
lods
fbstp
and
xor
out
clc
sbb
mov
mov
shll
insb
fwait
gs
dec
and
fdivrl
xchg
and
pop
xor
sahf
jb
pop
push
jmp
fucomip
call
sub
repnz
outsb
ja
mov
cwtl
xchg
sbb
out
arpl
xor
pushf
cmp
insl
xchg
paddb
lea
or
nop
enter
xor
adc
xchg
insl
fsubl
xor
jb
sub
ret
xchg
mov
xchg
sub
fsubrl
sub
addr16
call
lret
dec
dec
xlat
mov
xchg
cld
inc
dec
mov
popa
sub
xor
jecxz
xchg
imul
lcall
push
inc
mov
and
xor
movsl
adc
gs
fwait
push
aaa
mov
push
outsb
loopne
push
fwait
lods
dec
dec
jae
mov
xchg
fimull
bound
or
xchg
testl
fdivr
fldl
jmp
pushf
loop
cmp
xchg
shll
pop
cld
loopne
lods
leave
sub
dec
les
aam
stc
mov
push
jle
add
dec
and
and
pop
push
clc
push
mov
es
cmpsl
jle
mov
leave
adc
xorl
push
rolb
notl
hlt
sub
pop
lret
int3
mov
lock
cld
cli
lods
fcomi
mov
cmp
lods
lock
jae
xchg
jmp
stc
or
xchg
cmpsb
sub
repz
add
fsts
and
stc
fcmove
sub
dec
mov
ss
ja
or
sar
or
push
pop
and
aam
lret
mov
push
test
xchg
aad
pop
jnp
insl
xchg
shrl
sarl
repz
dec
inc
push
ds
movsl
lods
testb
xor
dec
pop
push
inc
inc
cld
icebp
jl
out
pop
ret
xchg
jnp
push
add
jg
push
cli
jmp
icebp
fcompl
cmp
in
inc
data16
mov
repz
stc
xchg
push
sub
cmp
repnz
stos
gs
inc
sub
xchg
pmullw
loope
adc
adc
movsb
pop
mov
and
adc
jmp
mov
pop
iret
mov
mov
lret
mov
pop
xchg
ret
cmp
jecxz
loop
out
ljmp
sbb
roll
mov
hlt
shr
mov
roll
push
mov
imul
jmp
imul
jecxz
ds
push
pop
sub
mov
push
lret
pushf
cmp
inc
inc
insb
xchg
scas
mov
fidivrs
add
sbb
fnstcw
in
fdivs
cmp
xchg
dec
and
loop
negb
cmp
add
outsl
cmc
jae
fimuls
add
dec
mov
test
sbb
icebp
pop
mov
in
pop
push
fistpll
bound
and
int3
or
mov
pop
je
fcomp
sub
adc
mov
aas
test
mov
scas
pop
ja
je
in
ret
cmp
lret
jmp
dec
push
mov
jns
test
popa
adc
sbb
xor
inc
insb
fistps
scas
test
insl
xor
sub
mov
jg
inc
adc
fnsave
or
sub
push
and
rolb
cs
mov
mov
mov
repnz
xchg
push
adc
mov
mov
pop
push
push
xor
jns
cmpsl
push
cmc
add
lods
dec
jmp
pop
aam
movsb
in
mov
pushf
inc
pushf
add
dec
cwtl
inc
stc
sub
sbb
test
adc
sbb
xchg
stos
dec
push
jns
pop
insb
in
pop
cmp
dec
lock
ret
mov
out
pop
xchg
or
ja
inc
aam
scas
loope,pt
in
arpl
cmp
push
test
cmp
sub
xchg
mov
gs
xor
lret
lcall
or
mov
cli
cmp
test
lds
mov
mov
test
xchg
push
pop
movsb
or
sahf
fidivs
add
mov
pusha
xchg
xor
inc
add
push
mov
push
out
shll
ds
aas
xchg
jle
aaa
xor
sub
leave
xchg
add
xchg
sbb
jg
rcl
push
rolb
or
xor
xchg
push
stc
or
jge
push
fs
test
insb
sub
mov
add
push
aaa
les
movsb
fimuls
pop
xchg
arpl
sahf
pop
test
popa
enter
xor
mov
sbb
movsb
dec
mov
mov
or
xchg
bound
add
cwtl
aaa
loopne
nop
sbb
xor
mov
int
or
add
fs
mov
dec
sbb
jmp
gs
fwait
sti
adc
int
xorb
add
in
adc
fdiv
mov
scas
and
jle
imul
dec
aas
div
aad
dec
sti
repz
and
std
imul
lea
or
aam
into
movsl
adc
cmp
scas
lcall
hlt
xchg
ljmp
arpl
cmp
add
movsl
fdivrl
je
mov
lahf
or
mov
stos
mov
cmpb
sub
cli
mov
fsubrl
aas
movsl
xor
dec
frstor
dec
mov
sub
aad
dec
dec
push
test
mov
jmp
xchg
dec
lret
scas
jmp
nop
loopne
adc
sti
xor
popf
pop
in
add
lcall
iret
lea
xchg
test
lods
daa
outsb
nop
add
and
xor
pop
mov
pop
insb
mov
adc
jbe
mov
lahf
and
or
popf
push
mov
push
inc
sarb
cmpsb
mov
fisttps
pop
daa
cmp
mov
push
push
nop
mov
and
inc
inc
cmp
jmp
lcall
pop
pop
in
pop
xchg
cmp
faddl
push
lcall
mov
enter
mov
sub
cmp
popf
in
test
lcall
pop
mov
pop
sbb
pop
dec
inc
jle
cld
xor
in
cwtl
mov
setne
mov
and
sbb
jb
fcoml
add
push
rorb
pop
cwtl
mov
inc
inc
shlb
movsl
pop
out
scas
pop
sub
mov
or
int
pop
in
inc
bound
adc
push
xchg
xor
and
push
orl
imul
test
jecxz
lods
xchg
fs
cmc
ljmp
movsl
repnz
js
jbe
sbbl
mov
dec
fimuls
pop
pop
adc
shr
mov
xchg
faddp
call
jno
xor
and
insb
insl
jo
loope
lock
cmpsl
outsb
cmpsb
stc
jmp
sbb
bound
jae
xor
or
rol
loope
and
jecxz
in
sbb
fldcw
xchg
fisubs
nop
sub
lods
pop
inc
jns
push
add
push
lret
test
je
ss
xlat
je
pop
and
cld
pop
movsl
mov
shll
jmp
stos
mov
push
enter
test
in
hlt
scas
pop
push
push
add
mov
testl
mov
xor
std
or
jmp
jne
sub
enter
push
test
dec
push
mov
and
je
xchg
ss
pop
add
or
pop
outsb
shrl
loope
jle
xchg
or
mov
dec
nop
mov
push
add
dec
fs
sti
data16
call
test
mov
jle
ljmp
out
in
in
ret
lods
and
mov
pusha
cmc
sbb
dec
fs
mov
jns
push
cmp
punpcklbw
sbb
pop
cmp
pop
pushf
cmpsb
pop
mov
pushw
push
cmpsl
int
shlb
stos
ret
lret
sub
mov
xchg
push
and
cmc
dec
leave
mov
push
and
xor
in
adc
sahf
ret
pop
cmc
dec
sbb
adc
fwait
mov
in
mov
jmp
scas
cs
loope
pushf
enter
and
and
xor
in
pop
mov
outsl
xchg
fadds
cmp
pop
xor
xor
ret
add
cmp
sub
outsl
aaa
cmpsb
ret
mov
loope
pop
mov
cli
cmp
mov
lahf
sti
pop
pop
jmp
andl
jns
mov
cmpsb
rcrl
test
les
xor
stos
in
pop
xchg
push
insb
lods
test
jno
mov
cmpsb
dec
pushf
push
cmp
pop
inc
dec
xor
jle
mov
in
insb
xchg
js
pop
sbb
sbb
fnstenv
fmuls
fldl
lods
in
test
add
sar
or
imulb
add
leave
leave
mov
mov
ja
scas
push
repz
data16
gs
imulb
in
loop
add
loop
fnstenv
fisubs
scas
jne
jnp
jecxz
es
lcall
fdivrl
ret
sub
mov
mov
xor
outsb
push
sub
add
add
ret
das
sub
repnz
and
lods
mov
in
mov
lds
xchg
aas
adc
dec
inc
mov
loop
popa
pop
notl
pop
xchg
or
je
add
cmpsb
cmp
sbbl
stc
ret
push
mov
and
mov
cs
pop
test
inc
inc
mov
jle
in
xorb
dec
add
xlat
insb
push
xchg
jecxz
push
addr16
xchg
int3
xchg
push
ds
ret
push
ss
cmc
xchg
sti
mov
fcoms
mov
jne
mov
cmp
je
cmpsb
push
mov
outsb
jno
add
jne
lret
fyl2xp1
stos
adc
or
outsl
inc
jnp
fcoml
bound
xorl
outsl
repnz
loop
daa
sbb
and
icebp
mov
pushw
inc
and
jp
es
mov
lea
lahf
ja
mov
mov
lahf
cmp
sbb
inc
jbe
ficoml
mov
push
lret
leave
push
pop
lret
sub
mov
scas
mov
cmove
pop
inc
mov
pushf
stos
mov
lret
repz
xchg
sub
push
add
push
in
mov
or
jmp
hlt
or
sbb
and
xor
pop
sbb
daa
jge
mov
mov
std
mov
insb
lcall
mov
daa
and
jae
jb
jecxz
jo
adc
in
cltd
mov
test
add
dec
push
lods
mov
jnp
pop
sub
push
sub
fcomps
mov
sub
call
push
daa
add
aaa
lcall
jl
lahf
add
jo
push
jmp
inc
cmp
mov
in
rcrl
out
cmp
mov
lcall
shrb
pop
cmpsl
aas
stos
jne
inc
out
pusha
test
fidivrl
and
outsb
push
pop
sti
mov
jp
mov
adc
cmp
sub
inc
mov
pop
push
push
test
push
cwtl
mov
add
adc
sub
sub
push
ds
les
fadds
nop
sub
pop
add
idivl
and
call
js
rcrl
mov
jbe
lods
ja
mov
repnz
mov
es
dec
and
inc
or
cld
loope
push
pop
ljmp
mov
and
cli
sbb
insl
ror
hlt
mov
mov
in
bound
xchg
stc
push
scas
lret
lds
sub
xchg
cmp
push
test
iret
and
xor
add
cmp
cmp
popa
mov
xchg
jge
insl
jne
ret
xor
into
push
sbb
fimuls
xchg
cmp
sbb
stc
stos
ss
dec
cli
pushf
test
stos
sub
in
mov
xchg
inc
test
or
stc
pop
sub
shll
adc
dec
jo,pn
fstpt
das
hlt
out
or
cltd
jno
in
xor
ljmp
push
data16
sub
mov
scas
jbe
sub
push
aam
daa
lock
shr
inc
xor
lods
lea
out
rcll
bound
jmp
int
lods
mov
push
test
shlb
adc
sbb
mov
dec
or
pop
add
into
sub
or
mov
orb
ret
xchg
or
push
pop
es
mov
adc
outsl
insl
fwait
mov
xchg
repnz
aas
cltd
jl
shrd
push
or
sub
jle
decb
shll
addl
cwtl
idiv
sbb
jo
pop
adc
push
add
das
scas
repz
inc
imul
or
xor
int3
push
fadd
orb
cmpsl
mov
lahf
subl
arpl
idivl
adc
call
test
sbb
outsb
clc
data16
rcr
sbb
ret
test
pop
aaa
faddl
popf
add
jne
or
popa
dec
mov
mov
pop
add
pop
mov
idivl
mov
mov
push
push
aas
ret
sbb
in
daa
or
loope
sbb
push
leave
loop
mov
xchg
xchg
xchg
pop
jecxz
fistps
data16
sbb
jge
mov
fwait
imulb
adc
les
xchg
in
jns
mov
das
sbb
or
cmp
or
push
push
es
mov
cmp
push
addr16
pop
repnz
fadds
shlb
xor
lahf
inc
inc
sub
pop
orl
adc
adc
and
lret
leave
xchg
std
stos
jmp
rcrl
pop
add
push
sbb
out
fwait
dec
xchg
sarl
loopne
mov
outsl
jno
dec
cmp
adc
dec
ret
fldenv
fisubs
idivl
shll
jmp
mov
lea
jns
xchg
fisubl
push
adc
pop
xchg
sbb
enter
or
addr16
push
push
pop
lcall
push
adc
mov
cwtl
aas
jne
lods
stc
ud2
add
and
mov
xorl
stos
sbb
add
cmp
fwait
and
fimull
jmp
mov
sub
addr16
scas
into
jg
shl
gs
mov
fstpl
cmpsl
testl
and
cmp
or
push
add
dec
popf
push
mov
mov
adc
mov
add
mov
dec
pushf
push
js
cmp
add
add
fcos
jp
filds
pop
es
xchg
pop
in
hlt
cmp
and
jge
jo
cmp
cmp
out
cltd
call
jne
jns
sbb
stc
rcrb
int3
pop
sahf
push
outsl
fadds
adc
sbb
xor
add
xor
push
xchg
or
dec
push
dec
or
jbe
push
adc
jb
ffree
repnz
enter
out
daa
aas
loop
mov
mov
mov
adc
dec
xchg
mov
and
lock
stc
inc
sub
aaa
ficompl
fsubrs
add
dec
lods
fsubp
movsl
and
lcall
mov
scas
sbb
mov
addr16
inc
or
xchg
pop
pop
sbb
push
xchg
in
in
xchg
inc
inc
mov
sub
mov
mov
lret
or
iret
adc
or
ret
cmpsl
and
lcall
pop
or
pop
jne
fdivr
std
imul
push
inc
in
adc
dec
xor
push
sbb
or
clc
adc
xorb
fisubrl
hlt
xor
int3
and
add
imul
jo
das
popf
pop
xchg
pop
add
cmp
stos
sub
or
inc
fs
add
pusha
mov
imul
jnp
dec
movsb
push
push
cmc
ljmp
roll
cmp
xchg
movsl
jae
lods
adc
sti
jno
xor
xor
jae
ffree
mov
push
pop
mov
inc
mov
das
loope
jo
cmp
jecxz
fstp
ds
xor
dec
rcrb
rcrl
cmp
scas
xchg
jmp
push
scas
rolb
pop
jge
inc
mov
xor
sub
in
loop
or
fdivrl
adc
popf
outsb
jnp
rorl
sub
push
fisttpl
pusha
fimull
xlat
or
divl
and
or
repnz
sub
push
mov
mov
rcrb
or
add
or
add
pop
scas
lcall
cmp
push
push
int3
jb
ret
rcr
sbb
adc
xchg
add
cmp
mov
and
jg
ret
iret
sub
inc
dec
fnsave
out
fwait
fs
scas
ds
test
push
xor
in
xchg
or
scas
jne
xchg
jl
mov
dec
mov
inc
pop
jae
mov
sub
mov
xchg
gs
jl
mov
cli
popf
lods
clc
mov
xor
repz
xor
lods
test
pop
rcrl
in
rcl
aam
fistps
fists
cltd
pop
pop
pop
pop
and
dec
std
cmp
insb
in
pop
nop
or
sahf
loop
in
pop
leave
cmc
xchg
and
out
filds
adc
lods
adc
dec
sub
stc
push
jo
xor
add
out
mov
pop
lret
sbb
aas
inc
movsb
scas
inc
cmpsb
jbe
sub
inc
incb
xor
sub
js
loop
xor
mov
cmp
push
orl
ss
fs
or
mov
cltd
rclb
lcall
mov
ljmp
push
push
ffreep
cmc
pop
push
and
loop
mov
mov
sub
sub
les
or
out
in
cmp
rol
ss
out
fldcw
mov
adc
js
cli
xchg
outsl
add
lcall
xor
gs
stos
ljmp
sahf
adc
movsb
lcall
dec
sub
inc
fidivs
in
lock
and
addr16
cli
shll
aam
cltd
xchg
ja
xchg
push
jae
and
fwait
dec
sbb
add
mov
or
adc
sbb
sbb
xor
push
push
mov
inc
xor
aad
loop
or
test
pop
pop
mov
ret
mov
out
fistl
leave
xor
pop
push
mov
push
sub
lahf
addr16
jbe
pop
test
or
imull
mov
dec
popf
xor
lahf
mov
loope
fs
mov
movsl
cmp
fiaddl
fistpll
aad
cmp
mov
add
add
sbb
dec
loopne
ja
stos
pusha
and
xor
jle
stos
mov
mov
and
aas
loop
dec
mov
or
push
and
xchg
pop
js
fs
lcall
ja
scas
cmp
int
shlb
lea
pop
jmp
pop
repz
xor
inc
xchg
or
mov
roll
es
sub
jg
sbb
jnp
dec
sbb
cli
xchg
xchg
insb
ficoml
push
jo
mov
sub
movsl
cmc
xchg
push
xor
jns,pn
push
cmp
shr
fs
mov
ja
lret
idivl
lret
jnp
test
pop
mov
pop
mov
jg
sub
outsb
add
xchg
or
popa
inc
arpl
stc
dec
mov
push
pop
mov
pushf
cltd
add
mov
lods
jg
jg,pt
test
or
scas
out
mov
fs
mov
shr
lret
in
stc
fisubrl
xor
sarl
jno
bound
pop
stos
mov
cmpsl
lock
mov
dec
call
jb
jp
pop
jns,pn
testl
iret
outsl
popf
and
jne
in
xor
or
jae
jge
adc
xchg
push
pop
pop
test
add
xorl
andb
into
hlt
hlt
or
insl
fcmovu
dec
lea
jp
dec
add
fdivl
jno
dec
xchg
bound
mov
mov
mul
cld
or
and
xchg
add
arpl
xor
lret
shlb
fldenv
dec
push
xor
stos
pop
test
mov
sub
icebp
imulb
push
xor
call
addl
pop
ja
pop
dec
aas
sub
cld
or
mov
xor
inc
nop
cmpsb
jne
dec
mov
xchg
mov
mov
add
or
je
or
and
aad
and
jo
fprem
fmuls
sub
or
test
cmpb
jle
subl
cmpsb
and
aaa
mov
outsb
mov
loop
in
xlat
inc
inc
xor
ffree
and
mov
loopne
popa
scas
ficompl
xchg
cmc
mov
cmp
pop
fidivs
mov
inc
imul
clc
add
push
mov
loopne
out
jns
jae
das
adc
jle
sbb
or
mov
or
repnz
cs
fisttps
test
pop
int
negl
xchg
pop
cmp
cmpsl
xor
pop
and
rorl
or
int3
sub
in
dec
pop
and
ret
test
mov
cmp
aas
or
leave
xchg
inc
insb
je
sbb
decb
xchg
xlat
fisubrs
lahf
and
mov
and
lret
add
mov
inc
xor
xchg
mov
ja
add
xor
aam
icebp
incl
sub
dec
out
ja
insl
rorl
and
cmp
xchg
divb
scas
inc
enter
in
ljmp
push
pop
jmp
adc
adc
orl
add
mov
cmpsl
sub
and
pusha
test
stos
push
mov
mov
out
jb
mov
add
imul
imul
sahf
rcr
push
les
pop
in
pushf
adc
mov
icebp
xorl
or
rcll
add
adc
add
fs
daa
in
jne
add
leave
inc
and
out
fildll
push
std
rcrb
sbb
push
pusha
fdivrl
ljmp
aas
std
push
cltd
jns
enter
push
into
inc
xchg
sti
shll
mov
inc
sub
int
movsl
dec
cmp
popa
and
ret
mov
cld
push
ret
subb
scas
daa
pop
int3
aad
insb
mov
jle
iret
mov
inc
jo
inc
popa
loop
dec
movsb
and
stos
test
xchg
add
sub
and
push
mov
jo
pop
movsb
push
and
sahf
mov
xlat
andl
jp
call
daa
lcall
cld
addb
js
xchg
sbb
pop
pop
and
cli
insl
cld
mov
ja
and
push
enter
shll
lea
aaa
sub
das
in
cmp
cmpsl
dec
into
mov
popa
call
shlb
sub
dec
shll
add
out
loopne
and
std
fcomps
dec
push
mov
lds
mov
pusha
dec
lds
mov
negl
pop
popa
mov
shrb
or
in
xor
xor
dec
lcall
mov
jae
sbb
mov
not
xlat
mov
push
ret
add
es
insl
ret
fwait
sub
mov
test
or
xchg
or
add
lret
loop
sbbl
xchg
dec
xchg
push
mov
or
pop
rep
jmp
cltd
mov
adc
adc
pushf
and
dec
out
flds
movsb
xor
sub
jne
push
sub
lea
adc
sbb
and
pusha
jp
fildll
and
aaa
jae
and
insb
pushf
fmull
cmc
ficompl
rcr
sub
mov
inc
leave
test
in
xlat
xchg
ret
scas
in
je
dec
outsl
sbb
pusha
jne
lock
pop
in
adc
or
push
iret
scas
adc
and
dec
xchg
adc
into
inc
sbb
mov
repz
push
das
popa
or
mov
int3
jne
xor
lea
push
jmp
scas
jl
xor
repnz
fsubr
jns
and
jo
mov
popa
aaa
icebp
mov
ds
cwtl
jae
push
or
and
arpl
push
shll
jmp
into
scas
int
xchg
xor
inc
sbb
add
ret
sbb
lret
push
or
test
xor
sub
sti
cld
divl
push
int
dec
shl
and
pusha
mov
dec
jg
data16
popa
jb
mov
and
movsl
push
pop
call
in
mov
mov
inc
scas
ret
push
xor
cld
mov
mov
std
test
and
das
cmp
mov
outsb
xor
test
pop
sub
add
dec
mov
inc
adc
mov
dec
mov
js
es
call
cltd
xorb
mov
add
std
adc
mov
rcll
loope
mov
cmp
ret
mov
add
mov
pop
js
jge
xor
mov
addr16
add
jne
nop
sbb
outsl
push
shlb
push
and
dec
push
mov
inc
dec
dec
imul
adc
in
insb
ror
xchg
jge
dec
or
mov
das
movsb
daa
jnp
fisttpll
aad
jnp
aad
add
repnz
ss
cmp
mov
sbb
pop
dec
pop
orb
ret
cmp
sahf
cmpsl
mov
out
mov
mov
ret
fdivs
stos
out
xchg
xor
dec
mov
daa
ret
and
in
adcb
cmp
cmp
inc
xor
pop
in
adc
mov
push
lods
test
inc
mov
jo
xchg
aad
cmc
mov
mov
outsb
stos
dec
jl
popf
fisubrs
mov
repnz
pop
cs
aam
int3
in
imul
add
jne
add
add
out
mov
cwtl
xchg
xor
hlt
repnz
std
test
fcomps
adcl
hlt
leave
int
inc
nop
pop
test
in
push
pop
cmp
sbb
fsubs
push
jl
scas
fadds
faddl
jp
sahf
stos
add
pusha
xchg
lods
mov
call
inc
aaa
jnp
int3
or
roll
push
dec
mov
or
or
leave
scas
or
cmp
push
adc
dec
in
das
inc
lock
test
sahf
sub
lds
loope
xor
div
sbb
and
pavgb
pop
pop
push
nop
jb
pop
inc
addr16
cwtl
adc
inc
xchg
addb
in
jecxz
mov
push
aad
lret
roll
or
or
inc
outsl
iret
frstor
shll
mov
outsb
lcall
rcr
inc
push
ret
xchg
jp
mov
ss
dec
enter
sub
repz
sbbl
int
mov
and
or
test
in
mov
hlt
cmpsb
fldenv
bswap
jbe
pop
popa
popa
push
leave
sbb
scas
sub
add
out
test
mov
outsb
inc
jmp
jo
in
popa
out
xor
jno
and
in
mov
sub
jae
push
dec
add
jg
push
sub
dec
in
stc
cmc
test
pop
inc
scas
adc
in
mov
inc
test
aaa
dec
jmp
scas
imull
jns
loopne
int3
push
inc
sbb
icebp
ret
pop
inc
mov
js
lahf
stos
ret
repz
cmp
cmp
es
out
std
mov
int3
adc
mov
mov
or
lock
xchg
bound
gs
sbb
cs
dec
insb
pop
fimull
rcll
insl
nop
cmp
scas
fdivl
adc
xlat
dec
push
scas
jecxz
adc
mov
or
pop
sbb
aas
mov
inc
cs
push
add
popf
xchg
sub
stos
bnd
push
or
es
lret
push
push
adc
sub
les
jb
pop
icebp
and
les
xor
mov
mov
jae
rol
sbb
cmp
in
push
add
outsl
push
xchg
mov
mov
mov
xorl
add
fwait
icebp
pop
sahf
jb
cmp
push
iret
sahf
inc
cs
arpl
jg
in
xlat
inc
movsl
or
jne
fildll
jl
jo
mov
dec
dec
jne
fisttpll
lret
pusha
dec
inc
insl
lret
jno
add
and
inc
mov
lret
loopne
ffree
mov
push
in
xor
xchg
lea
std
add
testl
mov
aam
pop
and
lret
pop
shrl
test
add
pop
sbb
sub
pop
aas
movsl
mov
push
pop
push
lret
dec
fisubrs
xchg
test
in
inc
mov
pop
das
mov
or
cmpsl
repnz
pop
fs
movsb
aad
mov
dec
into
xor
and
js
clc
push
leave
pop
hlt
cmovno
iret
popf
mov
mov
popa
push
jle
std
andl
ret
mov
mov
and
pop
dec
daa
sti
imul
jmp
and
ljmp
das
lret
imul
push
adc
sbb
test
xchg
lods
aas
mov
mov
mov
hlt
scas
sub
push
push
jl
inc
jmp
inc
jns
xor
mov
mov
mov
mov
mov
aas
mov
repz
js
mov
test
add
lock
mov
ss
movsb
out
out
xchg
push
mov
jo
cltd
scas
rorb
xchg
nop
rol
sub
cmp
push
jmp
js
sti
or
mov
mov
dec
into
popf
scas
mov
mov
mov
leave
dec
jns,pn
clc
sbb
fnstsw
push
std
cmp
jge
daa
icebp
push
mov
mov
pop
mov
push
das
cmpsb
adc
mul
adc
scas
lret
sub
repz
sub
mov
inc
arpl
icebp
cs
mov
jns
imul
sub
js
shll
shrl
bnd
fnstcw
sbb
shlb
xchg
adcl
scas
out
hlt
notb
adc
xchg
imul
add
pop
xor
ficoms
jge
lcall
daa
nop
fists
inc
test
mov
inc
stc
test
rclb
mov
lcall
fsubrs
bound
xor
push
and
mov
lret
pop
in
lahf
ret
sbb
cld
lods
lds
jae
push
lds
pop
inc
insb
mov
mov
cli
jge
test
and
sub
and
sahf
test
inc
xor
arpl
outsl
inc
or
outsb
repnz
push
xor
out
bound
jne
pop
mov
aad
dec
dec
mov
cltd
shlb
fpatan
dec
jl
mov
mov
sbb
popa
mov
lods
mov
cwtl
push
call
lret
adc
inc
and
int3
or
push
dec
mov
push
and
js
loopne
outsb
sub
stc
cwtl
iret
in
sahf
add
sub
adc
push
jns
sbb
popa
rolb
xlat
inc
lea
outsb
adc
bound
jg
inc
sbb
fucom
sbb
xor
add
jo
cmp
les
scas
aas
jg
pop
shrb
mov
in
sarl
mov
pop
or
stos
addl
movsl
mov
xor
int
inc
jecxz
inc
imul
mov
pushf
loop
cmp
jp
int3
int
jns
xlat
mov
sbb
cmp
fdivl
and
xchg
hlt
mov
rcrb
adc
stc
xchg
sub
ret
lds
jl
dec
cmpl
clc
or
cmpsb
stos
xor
dec
rclb
adc
incb
mov
dec
and
jae
or
jno
inc
adc
and
arpl
xor
or
or
dec
pusha
mov
jecxz
mov
aad
jle
lcall
cmp
push
dec
loopne
ljmp
fidivrs
pop
jno
sbb
loopne
int3
inc
vandnps
pop
ret
popa
sub
out
push
addr16
loopne
in
dec
or
mov
xor
xchg
outsb
cld
cmc
add
repnz
mov
insl
out
test
cmp
mov
xchg
mov
xchg
rcl
adc
cmc
jle
pop
aam
cmp
pop
jbe
fcomps
repz
or
lret
or
arpl
jg
sbb
fcoml
add
jmp
test
mov
leave
mov
and
mov
icebp
int
jo
outsb
xor
jbe
pop
out
scas
xchg
rcll
sbb
mov
loope
mov
sub
pop
leave
movsb
add
aas
pop
or
mov
add
xor
ret
mov
jmp
addr16
jmp
enter
js
les
das
out
adc
pop
lret
and
inc
push
sbb
fisubrs
xor
mov
clc
mov
sbbl
sub
pop
sub
pop
push
scas
add
mov
xor
ret
pushf
outsb
insl
push
sahf
pop
jne
sti
push
pop
push
into
jmp
xchg
popl
xchg
or
xor
mov
and
aam
mov
test
mov
jle
xchg
mov
icebp
cmpsl
fistps
mov
xchg
push
dec
popf
out
jecxz
scas
jmp
daa
mov
xor
sub
insl
jge
insl
jp
jno
gs
mov
adc
outsb
je
pop
jno
push
lods
and
dec
sbb
mov
mov
and
outsl
fcomps
sub
jb
xchg
pop
dec
mov
sbb
pop
fsubrl
rcll
or
mov
jmp
rcr
pop
out
and
test
fsubs
in
lret
sti
mov
negl
inc
shl
test
js
and
xor
pusha
test
sbb
push
xor
cmp
xchg
dec
lods
inc
hlt
icebp
xor
xor
mov
push
cs
mov
jmp
dec
loopne
sbb
dec
aad
cmp
jae,pt
mov
rep
nop
xor
pop
cs
inc
dec
stc
mov
loope
arpl
test
or
pop
lahf
fcmovnbe
out
je
and
nop
mov
into
mov
in
cmc
aam
iret
enter
xchg
sub
aam
jo
mov
ja
pop
sub
iret
lret
push
adc
lret
dec
xchg
cmp
and
jo
adc
ja
das
mov
mov
movsl
pop
mov
cs
sub
mov
test
call
adc
rcl
decl
pminsw
and
aaa
pushl
and
pop
in
sbb
sbb
into
fwait
cmpl
movsl
rorb
xchg
and
aad
push
test
cmp
inc
dec
add
inc
sahf
inc
jb
lock
repz
test
icebp
scas
or
pop
repz
out
fwait
ja
xlat
aad
xchg
xor
imul
inc
sbb
addr16
fistpl
cs
das
repnz
push
dec
xchg
mov
adc
insb
cmp
sahf
js
daa
addr16
lcall
inc
cwtl
stc
cmpl
loope
loope
ret
and
lods
mov
mov
jbe
mov
divl
add
cmp
leave
xchg
add
push
fs
pusha
ss
sub
ljmp
xchg
shrb
pop
ljmp
xchg
imul
mov
cmp
insl
in
fnstsw
add
rorb
fisubl
pop
mov
xchg
cs
jne
lods
das
jb
mov
pushf
mov
sub
notb
in
cmpsb
sbb
cmpsb
add
fists
sub
mov
lret
inc
fcomip
fnstcw
jo
std
lea
lret
cmp
sub
push
or
mov
outsl
push
cmp
adcb
pop
gs
adc
push
inc
cmp
aas
lods
or
cltd
icebp
jle
imul
pop
outsl
or
test
cwtl
xor
and
out
shlb
sbb
sub
jo
adc
cmc
add
jnp
jbe
xchg
or
mov
leave
add
jbe
popl
and
xor
js
mov
test
xchg
adcl
popf
xchg
sbb
scas
sti
daa
sbb
clc
sti
out
adc
pop
push
out
push
insb
mov
adc
add
push
pusha
sbb
idiv
mov
jle
es
adcl
push
inc
cmp
lea
lret
jge
lret
mov
pushf
mov
and
inc
jne
sti
stos
leave
rorl
scas
stc
jmp
xlat
xchg
pop
outsl
ss
test
or
aam
aam
sbb
enter
insb
or
mov
add
ds
test
shrl
call
fisttpll
or
ljmp
mov
addb
xor
sbb
ss
data16
cmp
les
or
add
mov
mov
cmpsb
adc
ret
inc
les
or
sub
mov
mov
repz
add
mov
mov
jo
scas
mov
or
data16
shl
pop
sbb
mov
bnd
sub
call
imulb
xor
or
dec
inc
int3
dec
jns
js
dec
fiadds
outsb
push
inc
cmc
leave
mov
ficompl
hlt
mov
in
cmpsl
fwait
jl
push
push
jo
ljmp
jmp
sar
push
and
mov
in
mov
xchg
adc
sbb
cltd
pop
jmp
pop
inc
xchg
mov
cmp
inc
outsb
test
xchg
aaa
aam
jmp
fucomip
call
out
mov
mov
cld
test
adcb
xchg
xchg
xchg
arpl
sbb
outsb
adc
loopne
add
iret
fidivrl
xchg
inc
dec
popf
scas
mov
mov
mov
fucomi
scas
sbb
jno
adcb
mov
insb
pop
movsb
frstor
rcrl
add
out
jne
cld
pop
add
ljmp
fwait
mov
push
jo
inc
jb
mov
popl
fwait
jnp
subl
popa
adc
test
inc
inc
rol
rcr
push
adc
cli
mov
add
mov
xorl
inc
imul
inc
popa
nop
mov
pop
jno
mov
push
mov
arpl
movsb
pop
sbb
into
sbb
pop
mov
add
xchg
xchg
add
sbb
hlt
xchg
ss
faddl
test
xor
iret
stos
mov
imul
ret
adc
adc
sub
mov
or
adc
mov
outsb
orb
out
pop
in
sbb
nop
test
lock
ret
push
fdivs
cmp
enter
test
repnz
add
jl
loopne
aam
imul
inc
pop
pop
orl
lods
inc
pop
mov
hlt
ret
mov
xchg
sbb
push
pop
sbb
das
inc
mov
pop
daa
mov
lret
and
sub
lods
das
ds
mov
out
shlb
lret
inc
and
mov
pop
add
pop
gs
jp
cmp
in
push
jb
mov
ret
xchg
mov
dec
clc
scas
sbb
mov
cmp
mov
or
dec
popa
and
scas
adc
xchg
and
movsb
into
cmp
lret
inc
xchg
testb
mov
mov
xor
add
fs
push
cld
fldenv
mov
add
stos
mov
cmpsl
lcall
enter
mov
lods
xchg
push
jne
leave
out
cmp
or
orb
iret
in
cmp
sub
dec
out
jmp
xor
rcll
fs
mov
stos
pop
ja
fmul
imul
fisubs
sbb
jl
xor
fcomip
sbb
repnz
lcall
push
push
out
xchg
inc
sahf
cmc
adc
cmp
dec
inc
imul
dec
je
mov
cmpsb
jbe
or
enter
fcomi
out
test
stc
shrl
mov
fdivrl
add
push
push
pop
les
mov
cmpsb
leave
push
ret
pushf
sbb
sbb
or
out
sub
fdiv
loop
mov
adc
cld
jmp
mov
pop
lods
dec
into
push
xor
popl
sbb
cmpsl
je
movsl
mov
scas
fcoms
mov
jae
xchg
ljmp
and
push
xchg
sbb
ds
jmp
dec
push
fmull
cmpsl
les
dec
in
mov
stc
adc
push
push
subl
jl
std
cmp
inc
rclb
dec
sub
ds
loopne
mov
cmpsb
fs
xchg
lahf
pop
xor
je
clc
xchg
cmp
sahf
ret
jge
dec
and
xchg
cmp
xor
cld
xor
frstor
gs
rorl
outsl
test
aaa
add
push
add
xor
xchg
mov
push
add
ret
xchg
add
jle
in
sti
or
in
pop
sub
into
aad
inc
pop
movsb
pop
jg
outsb
fists
sbb
mov
fmull
add
push
xchg
pop
jmp
add
mov
push
js
mov
out
pop
adc
sub
loopne
push
and
mov
and
mov
jecxz
adc
sbb
pop
lret
push
adc
leave
shll
inc
jne
lret
clc
push
outsl
ljmp
push
clc
or
jne
lds
stc
mov
fwait
cmp
inc
aas
into
out
hlt
ljmp
outsb
insb
inc
add
mov
pop
xor
and
push
adc
xchg
or
les
and
hlt
pop
fyl2xp1
xchg
pop
outsb
ret
stos
add
in
pop
inc
into
inc
jecxz
push
stc
pop
fsubrl
addb
fistpll
test
xor
pop
cmpsb
jno
cli
mov
imul
add
mov
inc
push
out
push
test
mov
or
jg
addr16
sbb
lds
js
loopne
push
test
xor
popf
xorb
shl
cmc
dec
push
test
ja
mov
divb
cmp
mov
cltd
mov
sub
fsin
inc
mov
movsb
mov
mov
mov
jne
sub
call
fwait
sub
and
mov
aad
jbe
shrl
decl
pop
into
jnp
and
adc
int
out
mov
dec
arpl
or
pushf
mov
push
jno
daa
xchg
mul
imul
inc
mull
out
add
mov
mov
sbb
jecxz
mov
test
stos
or
in
push
adc
xchg
mov
cmp
mov
enter
mov
clc
xor
mov
cli
cmp
push
or
test
dec
and
push
xchg
test
notw
or
xchg
push
movsl
pop
loope
std
lahf
jecxz
jmp
mov
aaa
mov
gs
xor
cmp
int3
insl
fildll
pop
jge
sarb
mov
in
imul
jb
ret
jg
out
sub
xor
xchg
int
inc
sbb
add
sub
in
xor
test
add
xchg
sarb
int
jl
mov
add
mov
jno
lods
fadds
test
ljmp
sbb
cmp
mov
pop
dec
js
ficompl
in
cmp
sbb
in
add
push
mov
add
icebp
adc
push
clc
repz
and
cmpsl
popf
cmpsl
push
sbb
or
pop
arpl
in
gs
jbe
lods
cmp
inc
mov
mov
dec
sub
mov
scas
es
cwtl
ljmp
out
fwait
pop
cmp
add
sbb
rclb
add
adc
enter
sub
fcoml
add
inc
sbb
cmp
xchg
cmp
fisubrl
nop
mov
mov
das
push
je
push
pop
std
scas
jne
xor
rcr
pop
test
xchg
negb
jo
rolb
cld
jmp
push
je
dec
loope
cmp
or
pushf
mov
inc
mov
pushf
ljmp
lods
outsb
mov
dec
sbb
outsl
mov
stos
loope
sbb
xor
jl
sub
add
cmpsl
pop
mov
lods
fildl
pop
rorb
sbb
sub
mov
push
xor
or
xchg
jno
cmp
sbbl
and
repz
pop
mov
mov
jo
insb
push
mov
xchg
icebp
int
stos
cli
adc
push
lods
mov
loop
int3
inc
rclb
push
pop
and
in
xor
ret
jbe
or
in
push
aas
nop
bound
pop
add
lods
lahf
pop
es
int3
lea
shl
je
push
fs
mov
mov
outsb
mov
xor
add
aad
push
daa
push
test
decl
neg
lret
and
and
sbb
adc
cmp
dec
sbb
neg
cmp
mov
insl
ret
sbb
je,pn
push
cld
sbb
jbe
andb
hlt
aam
out
roll
pop
repnz
mov
push
ljmp
repz
mov
sahf
es
hlt
push
scas
dec
icebp
in
shl
cli
mov
call
outsb
inc
pop
jo
cwtl
pop
or
mov
and
clc
icebp
sub
mov
out
aaa
mov
adc
ret
push
xchg
add
pop
icebp
gs
mov
in
push
inc
xchg
lods
ss
cmovs
divl
imul
pop
mov
sbb
int
adc
testl
jl
scas
inc
or
shlb
push
or
mov
or
dec
sub
frstor
insl
inc
pop
sbb
bound
scas
std
outsb
pushf
xchg
cltd
add
or
popa
stos
mov
int
jl
aam
insl
mov
xor
jg
sub
stos
add
int
push
ret
push
int
xchg
ss
sub
add
xor
imul
daa
jne
push
sub
fucomip
xadd
pop
sbb
lock
or
out
into
cld
xor
push
xchg
sub
xchg
and
lods
sub
mov
push
faddl
dec
mov
fiadds
jae
push
and
ja
fmull
mov
add
mov
ficoms
sub
popf
mov
ret
push
xchg
add
aad
imul
push
mov
push
ds
fimull
push
mov
or
or
jns
adc
xorl
mov
arpl
out
sbb
dec
mov
mov
jae
lcall
jne
stos
fisubrl
aaa
lods
or
mov
pop
mov
in
cmp
mov
stos
pop
mov
roll
xchg
in
popa
dec
xor
adc
sub
pop
stos
iret
mov
push
jnp
loopne
cmpsb
push
xor
sti
and
ss
add
adc
jmp
or
mov
sub
dec
fisttpll
fstpl
les
lods
pop
push
iret
orb
lock
push
sbb
add
push
call
mov
imul
nop
outsb
dec
shrb
ret
scas
test
adc
mov
adc
jmp
xlat
pop
add
and
shll
bnd
cltd
push
or
push
fidivl
sti
sahf
lods
mov
pop
ljmp
sbb
mov
xchg
inc
je
sbb
outsb
sbb
ds
jnp
pop
mov
shr
cmp
or
jl
sbb
inc
sbbl
or
test
mov
leave
xor
or
sbb
and
mov
adc
push
jmp
adc
mov
pop
shlb
pusha
rclb
jbe
pop
rcll
lret
addl
hlt
call
mov
addr16
ret
ds
dec
out
cwtl
push
aam
popa
outsb
fadds
rorl
or
ds
negl
add
loop
adc
fwait
lea
add
shlb
add
or
dec
and
cmp
out
shl
mov
test
mov
dec
adc
cli
rcl
adc
leave
ret
add
outsb
out
fdivrp
fsubl
cmp
jg
sub
or
sub
cmp
fistps
pop
mov
jae
mov
xor
mov
dec
in
pop
xor
pop
sub
out
stc
mov
xor
cwtl
and
mov
add
xchg
jg
clc
test
lods
ret
clc
dec
and
sub
je
imul
hlt
pop
jo
xchg
inc
mov
and
fs
xchg
sbb
adc
scas
ret
inc
push
shll
mov
mov
hlt
dec
pop
jl
out
sbbb
sub
pop
scas
and
lret
cmp
jl
hlt
ss
add
movsb
sub
or
cmp
out
sub
test
inc
fisubrl
xor
loopne
push
mov
xlat
mov
sbb
and
hlt
out
and
cld
les
into
insb
or
xchg
pop
inc
cmp
adc
fwait
out
mull
outsl
sub
into
repnz
dec
xor
push
mov
sbb
sub
push
das
sub
add
pop
mov
cmp
inc
loope
sti
jbe
xor
inc
das
fimuls
pusha
repnz
test
and
mov
xchg
cmp
lods
mov
in
scas
jb
jae
mov
icebp
xor
pop
or
icebp
sahf
or
mov
popa
mov
dec
lcall
dec
sarl
xor
mov
out
sub
ficoml
mov
xchg
lock
ss
mov
mov
pushf
jl
xchg
loop
lcall
std
hlt
jae
pusha
inc
sti
push
je
fnstsw
add
dec
faddl
pop
insl
dec
or
mov
cmp
mov
sbb
pop
xchg
mov
cmp
sbb
inc
push
add
pusha
sub
aaa
loopne
roll
daa
in
inc
inc
movsl
push
adc
test
mov
mov
push
loop
cmc
cmp
sbb
mov
add
in
pop
loopne
pop
jg
fsubrl
addr16
aad
push
enter
out
mov
mov
cs
cmp
and
inc
fsubl
rclb
jae
fisttpl
push
xchg
cmpsl
mov
xchg
mov
jne
shrl
lock
jg
fwait
push
pop
mov
cmc
jb
fidivrl
psubb
inc
adc
xchg
pop
sbb
mov
and
test
jns
stc
outsl
or
push
xchg
pop
jl
adc
cmc
test
xchg
jb
std
in
mov
jnp
movsl
lods
jl
mov
sub
or
and
cli
shrl
sbb
cmpsb
mov
and
sub
jae
lds
cmp
and
mov
lcall
add
aaa
mov
push
push
xchg
push
xor
test
xor
add
cwtl
lods
repz
sbb
pop
xchg
rcll
xor
dec
adc
aaa
mov
xor
inc
adc
clc
mov
pop
sbb
adc
aad
inc
je
psubw
js
push
ret
insb
jge
stos
roll
xchg
adc
mov
das
fcoms
es
adc
and
into
scas
cs
iret
popf
or
dec
cs
int3
std
jns
jnp
xchg
stos
ret
xchg
mov
or
add
hlt
hlt
adc
and
out
call
mov
push
inc
push
test
push
aad
adc
and
jp
js
pop
pop
sbb
push
or
jle
movl
addb
mov
sub
adc
sbb
lock
xlat
stc
jg
shll
in
scas
fucomp
add
ljmp
aam
push
jne
sar
mov
js
hlt
sarb
inc
test
test
push
pop
filds
mov
out
mov
aas
push
jbe
inc
in
out
mov
and
mov
fstps
lods
jle
subl
or
das
insl
sbb
sub
jae
mov
ror
and
into
push
mov
adc
sbb
into
mov
lea
mov
pop
loop
xchg
popl
mov
pop
enter
andb
jmp
jo
arpl
fwait
jae
repz
testl
sahf
push
xchg
mov
stc
or
mov
add
mov
sbb
insb
mov
push
mov
std
test
mov
sub
pop
jecxz
mov
in
pop
or
adc
xor
cmp
lret
stos
sbb
sbb
inc
jmp
mov
out
cli
inc
mov
cmp
mov
jmp
push
idivb
push
outsb
cmpsl
and
scas
mov
cld
sub
andl
std
in
xchg
cs
xchg
mov
cmp
std
mov
cmp
loop
xorl
xor
and
push
xchg
test
cmp
mov
icebp
push
clc
xor
push
jne
es
imul
movsl
loop
leave
das
subl
out
jns
into
sbb
std
repz
mov
sahf
in
dec
inc
mov
cmp
fcomps
pop
icebp
sbb
mov
sub
mov
out
es
xor
movsb
mov
aas
gs
cwtl
cli
sub
dec
ret
xchg
sub
icebp
cld
jge
pop
mov
cmp
in
adc
pop
test
stos
fcomps
lret
es
call
jecxz
sbbb
shlb
js
fmull
fs
or
inc
sti
es
xchg
mov
filds
imul
xor
push
xlat
scas
mov
imul
lods
int
mov
xchg
cmpsb
push
cmpsb
outsb
cmc
adc
rorb
mov
inc
jg
cmpsb
mov
xchg
or
popa
dec
push
outsl
or
sti
repz
ja
loope
loop
mov
subl
add
stos
or
jb
or
adc
push
jbe
inc
sub
pop
pushf
cltd
insl
cwtl
jae
das
mov
sarb
or
mov
insb
add
xor
dec
push
mov
out
imul
or
clc
pop
adc
inc
aam
cmpl
jl
xor
leave
adc
push
add
dec
pop
sarb
inc
fucomp
mov
scas
stos
loope
cmp
push
xor
popa
cwtl
out
push
push
mov
pop
ljmp
out
xchg
fmull
dec
push
outsl
lahf
sbb
bnd
or
xchg
ja
ss
decb
pusha
sub
dec
cmp
mov
popf
hlt
mov
push
xchg
cmp
push
inc
dec
push
pop
int
cmp
xchg
int3
push
cmp
mov
xchg
rclb
ss
out
call
xchg
mov
inc
xor
jns
cmp
stc
std
shll
push
sub
sub
mov
in
or
dec
and
add
movsb
mov
ret
and
cmp
cwtl
cmpsb
dec
hlt
lahf
rcll
addb
out
mov
in
xchg
and
inc
lods
mov
lcall
cmp
sbbl
mov
jp
inc
loop
call
hlt
push
and
loop
push
jnp
mov
adc
adc
sbb
pop
out
repz
lcall
hlt
jmp
push
test
pushf
mov
fisubs
lock
mov
sub
aaa
out
fucomp
inc
bound
js
loope
arpl
pop
dec
ljmp
mov
decl
xchg
ds
mov
test
call
inc
xchg
push
aad
enter
retw
fstpl
add
insl
sbb
push
dec
shlb
and
mov
out
mov
sub
xchg
or
or
jl
rolb
lret
inc
mov
inc
sbb
jp
lea
or
mov
call
daa
lock
leave
pusha
popa
fdivrs
add
cmp
lahf
or
mov
arpl
arpl
enter
imul
outsl
test
sbb
lcall
rorb
jb
push
inc
xor
and
dec
aad
mov
cs
vpinsrw
bound
into
fidivrl
jns
mov
js
jmp
arpl
lcall
outsl
lods
int
fcmovne
push
xchg
test
sbb
jg
cmc
or
mov
outsb
fisttps
int3
push
cmp
out
dec
call
negl
sbb
push
sub
lahf
push
or
loopne,pn
adc
adc
lahf
outsb
lea
mov
jp
pop
dec
pop
cmpsb
jns
pusha
push
sbb
dec
pop
or
xchg
xchg
fnsave
adc
arpl
cmp
cmp
dec
in
inc
out
mov
out
pop
pop
add
dec
lock
rclb
add
cmp
mov
outsl
pop
and
xor
enter
xchg
jb
pop
cmp
incb
out
pop
outsl
cmp
dec
mov
js
cmp
mov
cmp
popf
testb
sub
jmp
outsl
jge
adc
in
aas
mov
push
mov
loope
bound
or
cmp
push
stos
les
outsb
xchg
cmp
test
pop
popa
and
jbe
insb
cli
daa
les
imul
xor
stos
mov
and
in
shrl
mov
sbb
stos
adc
test
js
iret
out
inc
cmp
push
mov
jbe
sub
test
mov
js
lcall
mov
dec
fimuls
out
pop
test
int3
dec
fnsave
sbb
imul
fdivl
fisubl
dec
pop
add
mov
mov
in
or
or
dec
push
xchg
test
sub
aas
and
dec
or
daa
pop
fldenv
sbb
jnp
cmpsb
loope
cwtl
pop
mov
jge
mov
mov
mov
sbb
jmp
sub
fisubrs
insl
xchg
adc
mov
lret
push
sub
xor
sbb
cld
mov
outsl
sbb
cmp
shll
pusha
xchg
hlt
fwait
cmp
loope
pop
in
push
sti
daa
aaa
sub
cwtl
and
mov
pop
faddl
add
jle
aas
cmc
out
loopne
mov
pop
mov
sbb
in
jns
clc
mov
loopne
jne
imul
dec
mov
xchg
int
or
ja
cmpsb
popf
dec
jl
jae
xchg
test
jno
pop
cltd
fs
insl
add
cmp
or
daa
div
sub
popf
test
pop
sub
inc
popa
sar
push
mov
push
xchg
jbe
stc
test
sub
iret
mov
subb
add
add
and
adc
inc
mov
fs
mov
das
sub
cmp
cmp
insl
dec
inc
sahf
repz
jnp
and
add
mov
clc
mov
in
fdivrs
ja
push
nop
leave
js
pushf
xchg
cmp
outsl
pusha
pushf
stos
data16
push
in
dec
scas
movsb
iret
fnstcw
ljmp
mov
das
inc
in
and
cmp
scas
repz
cmp
and
inc
jmp
mov
faddl
adc
mov
adc
cmp
mov
or
inc
dec
popa
icebp
test
adc
mov
test
js
or
push
ljmp
cmp
sub
xchg
mov
sub
dec
pop
pop
inc
and
aas
addr16
hlt
arpl
sub
and
out
jne
xor
pushf
pop
in
pop
add
ret
xchg
cmp
mov
jg
dec
xlat
fisttps
xchg
lds
ret
jbe
cwtl
jo
iret
mov
cmc
call
call
outsl
jmp
push
mov
stc
test
in
mov
rorl
fnstenv
jmp
sbb
push
fs
fcomps
mov
stos
movsl
aam
pop
sub
mov
in
lods
int3
dec
test
mov
and
ror
insb
leave
pusha
dec
or
inc
or
imul
lock
fwait
mov
stos
dec
cmp
mov
xor
icebp
cmp
lcall
pop
outsl
jge
fldl
add
sub
adc
sub
mov
enter
jae
adc
hlt
xor
rcrl
icebp
mov
mov
mov
mov
loope
xor
cwtl
sbbl
inc
cmp
fistpll
ljmp
cmc
bnd
ficomps
fidivrs
push
or
cmp
int3
jmp
dec
in
and
nop
sbb
xchg
mov
data16
xchg
ss
push
sub
out
test
ret
sahf
sar
sbb
fdivl
mov
movsl
stos
or
xor
lret
movsb
xchg
xchg
jecxz
in
outsb
mov
xchg
jg
lock
add
subl
push
cltd
lock
jb
add
ljmp
scas
out
mov
cmp
fs
inc
enter
or
xchg
ja
outsb
xchg
out
jne,pn
dec
pop
sub
and
or
mov
leave
jge
xor
inc
lahf
xchg
scas
ficoms
movsl
in
dec
adcb
sub
adc
mov
popa
cmp
daa
subb
std
mov
mov
xchg
clc
jmp
sbb
cs
and
jbe
or
shrb
xchg
cwtl
sub
jb
mov
les
mov
aad
call
fstp
push
mov
and
repnz
mov
aaa
lock
fs
std
xlat
inc
imul
mov
dec
mull
sbb
jno
addr16
jl
int
xor
xchg
xchg
stc
push
mov
mov
cmpsb
cmp
and
xchg
pushf
mov
cld
push
scas
decb
adc
outsb
in
ss
sbb
push
fimull
mul
sbb
inc
iret
and
pop
sub
pop
sbb
xchg
or
popf
aas
mov
or
jne
add
jl
sub
ss
test
mov
arpl
sbb
lahf
out
mov
xchg
cwtl
imul
jbe
xchg
lds
jl
into
out
int
mov
xchg
add
xor
shrl
std
jno
jl
mov
repz
or
cs
xchg
call
push
addr16
push
dec
icebp
out
and
mov
inc
pop
cld
push
xor
adcl
bound
movsl
scas
arpl
jle
aam
add
pushf
je
inc
mov
repnz
in
adc
push
push
ret
pop
cmpsb
sarl
or
imul
cmp
jecxz
inc
jb
je
pop
nop
xchg
jp
rorl
cmp
jl
xchg
rolb
pop
push
call
sahf
mov
mov
je
ja
and
loopne
adc
xlat
sbb
push
xor
addl
push
arpl
jge
in
mov
arpl
stc
dec
scas
push
jne
addr16
je
aaa
subb
cli
jno
lret
in
popw
or
rcll
dec
lahf
fs
fucomip
jecxz
sub
adc
lods
pushf
push
sti
out
int3
jno
int
dec
mov
sti
dec
xchg
mov
xchg
nop
lock
cmpsb
sbb
pop
js
mov
cmpsb
loope
fdivrs
add
sub
and
cmc
sub
out
xor
movsl
into
cmc
sti
jge
sub
add
jno
add
pop
test
mov
mov
add
outsb
por
test
jp
pop
mov
push
inc
mov
jbe
fisttps
adc
fisubrl
mov
adc
cmpsb
xchg
sub
mov
add
sub
andl
add
sarl
pop
shl
icebp
jl
add
daa
jo
cwtl
iret
ss
pop
sbb
cmc
lret
jae
lcall
pop
aam
cs
adc
jne
data16
ret
cmpsb
aad
fstpt
outsl
test
pushf
inc
insl
popf
aad
hlt
sbb
jnp
push
sbb
inc
leave
aas
loopne
popf
jp
push
pop
das
fisttpll
cmpb
repz
in
jb
test
push
repnz
sar
arpl
or
lret
mov
inc
fisttpll
or
int
data16
cmpsl
xchg
or
pop
inc
je
push
xchg
push
fnsave
test
divb
cmp
xorb
push
pop
inc
sub
cmp
or
imul
ljmp
xchg
cs
loopne
insb
imul
adc
in
xchg
lret
pop
mov
jmp
xor
fldenv
gs
ljmp
dec
xor
or
or
adc
or
dec
loop
std
sbb
mov
pop
pop
add
push
push
push
xchg
pop
int3
cmp
jge
jp
cmc
mov
inc
jge
add
mov
xchg
js
popf
inc
outsl
aaa
xlat
addb
loope
adc
push
inc
push
sbb
xchg
mov
hlt
call
pop
bound
clc
xor
outsl
sub
add
movsl
jb
mov
adc
xchg
movsl
jb
push
hlt
insb
iret
push
or
add
push
pop
mov
imul
sub
push
int3
mov
stos
push
sub
push
cmp
mov
xor
lds
lock
shl
jle
jae
adc
sub
mov
fs
mov
sarl
pusha
pop
aad
mov
jo
mov
mov
mov
cld
cltd
div
mov
push
cwtl
test
jno
pushf
xor
fmul
aad
xchg
mov
xchg
shrl
pop
imul
and
dec
aad
sar
push
int
in
mov
mov
cmp
or
mov
jl
mov
divb
xchg
mov
dec
and
sbb
ret
int3
loop
in
pop
sub
cwtl
je
jmp
cmp
mov
inc
jo
and
mov
pop
mov
sbb
xchg
out
nop
mov
aam
es
mov
das
data16
lret
ret
repz
fwait
sub
jle
push
jns
cmp
sbb
pop
shrl
pushl
lret
fmuls
mov
lods
mov
sbb
cltd
fisubrl
xchg
nop
aad
mov
ja
sbb
les
sbb
sub
imul
mov
mov
mov
inc
repz
arpl
xchg
inc
mov
and
lret
sti
imul
push
push
pop
scas
test
add
jl
ret
into
ror
push
fldl
xor
xlat
sti
or
add
sbb
lea
pop
call
xor
jo
mov
jbe
pop
std
pop
das
add
fsubrs
mov
pop
mov
and
dec
add
add
push
fcmovnu
cmp
fildll
jb
jns
lods
or
clc
ljmp
mov
stc
inc
nop
cmp
pop
pusha
fcomip
shr
ret
lods
nop
movsb
mov
loopne
cmp
xchg
jle
imulb
mov
lcall
movsl
xchg
movsl
cs
addr16
cmp
cmpsb
xchg
inc
mov
sti
sti
sbb
mov
hlt
and
in
xor
aaa
enter
fwait
jnp
lcall
sbb
and
lret
leave
jne
fwait
xor
mov
call
das
pop
push
pop
cmp
add
pop
mov
lds
cmpsl
xchg
push
sub
or
or
pop
inc
sub
sbb
shr
cmp
sahf
add
adc
cwtl
addr16
push
cli
xchg
ret
sub
mov
das
aas
pop
add
push
xchg
cwtl
test
mov
imul
or
rorl
lcall
mov
dec
pop
xor
pop
inc
or
and
inc
cmp
xor
lods
jl
hlt
fwait
adc
je
inc
and
invd
ja
aad
mov
lcall
shr
into
out
dec
push
push
addr16
inc
ss
pop
adcb
xor
not
jge
mov
call
sub
js
or
mov
insb
fwait
xchg
fadd
cltd
test
pop
cmp
sbb
sbb
pushf
jo
jg
mov
push
insl
in
push
jb
push
jge
jno
popf
pop
les
in
lret
pop
dec
lret
add
fs
push
movsl
je
cwtl
push
and
xlat
xchg
mov
dec
jb
jecxz
or
mov
push
mov
fisubs
inc
ljmp
mov
pop
rorb
xchg
fidivs
dec
int3
call
mov
loop,pn
adc
notl
bound
imul
jp
imul
xchg
sahf
push
adc
xlat
sub
iret
xchg
add
in
push
mov
push
push
movlps
pop
aaa
cltd
movsl
mov
aad
mov
ds
rolb
mov
cmpb
test
mov
mov
sti
or
out
fsubrs
in
or
pop
imul
cmpsl
das
sbb
in
mov
ljmp
adc
daa
adc
jae
std
out
mov
cs
cmp
shlb
leave
pop
data16
add
rolb
xchg
xor
std
inc
xor
andnps
jb
daa
jnp
cltd
leave
dec
daa
push
jnp
jl
push
notl
fiaddl
fdivrp
repz
mov
test
cmp
js
xor
sub
ljmp
cmp
push
addr16
cltd
stos
mov
jecxz
sbb
ror
and
xor
push
addr16
enter
add
or
sub
cwtl
rcl
or
repz
and
insl
mov
cli
subl
mov
jle
cmp
subb
cmp
adc
inc
cmp
pop
dec
xchg
rorl
rcrb
jl
test
lods
sub
inc
push
adc
dec
pop
sbb
imull
cwtl
or
int
inc
add
pusha
jle
xor
mov
in
dec
sbb
dec
lea
add
xor
test
adc
insb
out
push
inc
dec
mov
cmp
pop
xchg
xchg
lcall
andb
and
in
or
mov
and
fisubrl
jl
adc
icebp
rcrl
xchg
adc
es
sub
mov
or
ja
loop
test
jns
inc
or
mov
or
and
mov
std
pop
stos
jl
or
leave
lahf
mov
imul
mov
lret
fsubrl
nop
xor
gs
loope
lods
cmc
pop
and
loope
out
aad
inc
les
ror
mov
and
add
gs
lea
fisubl
sub
test
cmp
xor
cmpsl
mov
lret
xor
je
scas
pop
adc
in
fists
add
mov
lret
cmpsl
arpl
pop
adc
ret
js
aad
dec
sbb
pusha
outsl
pop
hlt
inc
jmp
xchg
mov
mov
jne
pusha
xor
sub
into
mov
jp
mov
rol
imul
jg
es
in
sbb
outsl
repz
mov
dec
sarb
fstpl
test
loopne
xor
lds
ret
call
negb
call
das
in
lahf
jmp
test
dec
push
push
mov
fdivp
insl
aas
inc
ret
jo
clc
jl
jecxz
hlt
dec
jle
rcrb
adc
les
jb
sarb
sbb
mov
mov
push
mov
jb
fst
ret
aad
mov
aam
or
xor
sahf
faddl
lds
subl
dec
dec
push
fnstenv
or
dec
sahf
cmpsl
sti
call
outsb
mov
pop
push
mulb
test
jne
xchg
cwtl
push
push
cld
das
jns
subl
xor
xchg
repnz
mov
mov
lods
jge
aas
and
icebp
add
adc
outsl
pop
lret
mov
adc
addr16
sbb
stos
rcll
addb
arpl
sub
fsubl
sbb
xor
sub
fs
subb
adcb
xchg
mov
xchg
js
and
jp
ret
xor
jmp
lods
loopne
out
adc
mov
lods
stos
cmp
xor
mov
fsubs
pop
sahf
lahf
push
enter
mov
int3
mov
nop
push
dec
or
lods
dec
in
ja
cmp
inc
iret
mov
std
mov
pop
push
cli
aas
movsl
mov
dec
enter
pop
aam
mov
add
xor
es
stos
dec
cli
cmpsb
out
cwtl
es
jl
int3
xchg
imul
or
lods
sub
mov
fiaddl
jo
adc
push
shlb
popa
paddusb
inc
outsl
mov
jo
lods
jmp
repnz
push
gs
enter
hlt
aam
fwait
and
test
cmc
sub
xor
mov
and
jns
add
movsb
mov
cwtl
in
xchg
dec
dec
dec
sbb
dec
daa
adc
inc
xchg
pop
xor
jp
stc
push
add
fsubl
lea
add
test
xor
mov
cmp
shrl
mov
rclb
popa
out
cltd
jle
in
shlb
imul
imul
outsb
cmp
jnp
in
shlb
sub
jle
pop
dec
add
imul
push
imul
mov
xchg
in
pop
dec
mov
mov
sub
sbb
arpl
jno
aam
lret
add
fwait
push
lock
andb
fbld
cmpsl
pop
and
and
mov
mov
scas
lock
push
mov
sub
mov
bound
and
cltd
enter
xchg
inc
adc
mov
sbb
mov
shll
outsl
pop
adcl
js
mov
mov
orl
and
xchg
sbb
push
sub
cmp
shrl
xor
sbb
stos
ffree
rolb
iret
in
xchg
mov
sub
sub
enter
cltd
add
mov
sbb
bound
xchg
mov
add
inc
addr16
xchg
add
xchg
popa
pop
xchg
dec
mov
jnp
cs
loope
adc
mov
xor
jb
or
das
call
fstpl
je
xchg
and
adc
pop
into
add
gs
je
cmp
negb
ljmp
iret
lahf
add
hlt
or
inc
mov
adc
xchg
push
jno
js
fisttpll
mov
cmp
adc
adc
adc
mov
mov
daa
lcall
not
cmpsl
push
cmpsb
stc
ret
and
out
decb
xchg
inc
dec
fisttpll
pop
scas
lret
or
jmp
lret
jo
std
pushw
incb
out
mov
pop
mov
jns
cmp
sti
jmp
add
dec
mov
outsl
lods
sahf
mov
nop
mov
and
push
or
xacquire
pop
std
inc
incl
inc
push
dec
xchg
icebp
xchg
out
testl
cli
add
into
mov
movsl
loopne
jmp
rorl
xor
bound
pop
je
cmpsl
sbbl
mov
mov
insb
xorl
xchg
out
and
xchg
and
das
xchg
cmp
sub
sti
iret
out
jmp
pop
sbb
lahf
and
xchg
mov
push
push
mov
jp
push
jle
test
mov
add
lahf
lods
ja
popf
adc
stos
and
insb
adc
inc
inc
ret
cmp
loopne
fcmovnu
out
inc
aas
pop
xor
mov
ret
loop
push
test
adc
or
cwtl
into
fimull
or
sub
or
push
push
or
xchg
cld
in
jg
outsb
js
sub
lods
push
movsb
lea
popa
stos
adcb
mov
adc
mov
std
inc
cli
js
pushf
cwtl
mov
cmc
cmc
pop
test
mov
xchg
imul
push
test
xor
cmp
rcrl
dec
pop
lock
dec
rol
or
mov
ret
and
jmp
sahf
imul
insb
jge
outsl
aad
mov
sbb
add
outsb
aas
xor
cmpb
push
mov
push
stos
or
mov
jnp
mov
xchg
sbb
fldenv
testb
icebp
shlb
sub
add
flds
hlt
push
shrd
add
dec
ss
push
pop
push
sub
inc
pop
adc
jne
inc
sub
shl
or
mov
popa
jp
test
leave
mov
aas
pop
in
jb,pt
out
scas
dec
push
pop
in
test
loop
mov
push
aas
cmp
stc
add
leave
stc
stos
in
stc
jge
jmp
pop
fsubs
stc
mov
adc
roll
sbb
iret
cwtl
test
dec
daa
cmpl
push
test
leave
add
int3
inc
rorb
jg
repz
cmc
out
xchg
stc
icebp
push
inc
testl
jns
and
cmp
jo
ss
std
out
cmp
mov
insl
mov
fwait
lret
test
add
imul
sbb
jb
fstpl
or
mov
rorl
loopne
cmp
stos
mov
jno
sub
lcall
rcr
cli
clc
aaa
lahf
arpl
and
test
mov
stos
repnz
shrl
mov
lret
pusha
js
jge,pn
cmp
nop
sub
sbb
and
std
jae
push
cmc
pop
dec
inc
cmc
ds
xor
or
out
ljmp
xchg
xor
or
cmc
cltd
or
in
or
or
mov
outsl
xchg
xor
lret
in
sbb
popf
data16
in
sub
cmp
dec
inc
mov
mov
xchg
dec
idivb
xor
push
jnp
push
mov
sbb
inc
push
cltd
les
xchg
mov
pop
jne
sbb
sub
push
sbb
loopne
loope
cmp
sub
js
in
lret
and
pushf
out
xor
mov
lret
popa
jg
orl
imul
icebp
movsb
rol
fidivl
sahf
movsb
dec
in
push
jo
xchg
push
fbld
jge
cmpsb
xor
inc
shlb
mov
xor
sub
clc
call
test
or
test
add
je
fidivrl
push
cmp
inc
loop
and
pop
xchg
scas
xor
sub
loop
repz
in
dec
cmpsb
jl
xorb
push
je
js
iret
pop
mov
xor
mov
fisttps
in
mov
mov
lock
xchg
push
xchg
sarb
pop
jmp
jmp
divl
mov
inc
mov
push
gs
cvtps2pd
mov
cmc
out
hlt
xchg
ret
test
and
icebp
inc
bound
clc
dec
stos
int3
jae
sbb
add
andb
mov
jp
xchg
pop
aam
mov
enter
mov
lret
ljmp
pop
out
in
or
div
and
lods
cwtl
ljmp
sbb
mov
sbb
lret
stos
das
sbb
add
addb
fists
pop
das
jns
pop
ja
loopne
scas
push
iret
sbb
leave
cmp
lea
aad
adc
movsb
fdivrp
rcll
sahf
ret
mov
ret
xor
subb
shlb
loop
imul
jle
cmp
fsubs
jg
es
adc
fstpl
ror
ret
xchg
scas
rcll
add
jp
and
push
mov
sub
and
push
sbb
test
and
clc
mov
lcall
sbb
mov
dec
dec
mov
roll
or
jne
ja
jl
push
mov
dec
paddusw
mov
adc
insl
sbb
sti
mov
fldcw
or
and
push
in
xchg
mov
cld
test
mov
ret
popf
or
pop
dec
jecxz
or
divb
shlb
inc
mov
cmpb
shl
es
mov
icebp
mov
inc
insb
ljmp
xchg
data16
nop
addr16
and
popl
out
and
jmp
pop
gs
dec
sbb
out
adc
jmp
jp
or
mov
je
adc
lret
test
in
fcomp
mov
cwtl
push
pop
sbbb
xor
or
mov
push
outsb
dec
inc
test
or
sbb
jle
or
lret
mov
sub
popa
daa
shrb
cmp
aaa
aas
js
scas
sti
filds
cli
imull
mov
mov
xor
pop
adc
dec
inc
pop
out
pop
in
ret
xchg
sub
push
add
mov
push
outsb
fists
sub
jo
lret
inc
lcall
xlat
shlb
mov
xor
jecxz
mov
push
loop,pt
pop
and
or
jne
dec
dec
jmp
test
loopne
mov
ret
loop
xlat
cmp
clc
movsl
dec
xchg
mov
or
mov
xor
inc
test
pop
pushf
jnp
mov
pusha
jg
iret
clc
ljmp
jo
cmp
xlat
rep
into
imulb
imul
cmp
jmp
inc
mov
sbb
fidivrl
mov
call
out
push
add
aas
push
push
movsb
xor
dec
aad
pop
mov
mov
lock
sar
sbb
aad
and
xlat
pop
xor
dec
push
rcrb
cmp
adc
jnp
lods
add
test
pusha
cmc
or
sarb
stc
in
pop
lret
pop
jbe
std
inc
lock
test
fcmovu
xchg
dec
mov
lock
sbb
push
pop
mov
int3
fildll
mov
jp
nop
add
stc
push
add
cmpsl
leave
js
xorl
mov
mov
lock
xchg
cmc
js
add
inc
sbb
je
dec
push
les
iret
add
sti
sti
fstl
xchg
jnp
xrelease
xor
jmp
sbb
xchg
jecxz
pop
sub
dec
fwait
scas
pop
adc
mov
sbb
mov
push
jmp
pop
pop
push
add
mov
out
or
out
or
mov
adc
hlt
iret
sti
sub
xor
test
dec
push
test
fs
or
mov
stos
mov
xchg
je
sub
imul
jnp
mov
adc
test
test
mov
pop
test
rclb
push
mov
xor
xchg
cltd
xchg
and
sub
jmp
enter
sbb
out
scas
in
xchg
sbb
mov
sbb
mov
dec
pop
fildl
push
idiv
add
sub
daa
imul
cmpsl
push
std
xor
test
add
pusha
jmp
leave
xor
adc
dec
xor
test
fcmovb
jne
adc
sub
je
outsl
pusha
es
jo
lret
je
mov
pusha
push
fldt
and
cmp
xor
push
xchg
lock
out
insl
jle
cmp
or
mov
shll
call
xchg
scas
fwait
xchg
push
mov
xchg
out
inc
pop
inc
fs
insb
pop
jle
pop
das
or
mov
push
fcoml
sti
mov
jb
test
fdivr
jne
rclb
mov
xor
ja
xchg
mov
imul
sahf
dec
mov
jg
inc
sub
xchg
loope
or
adc
mov
sub
push
insb
sbb
xor
scas
sahf
xor
flds
mov
insb
lods
ds
adc
sub
rep
mov
sarb
out
jp
mov
and
lds
mov
xchg
jbe
jb
add
nop
ljmp
insl
or
jl
and
scas
jne
mov
scas
sub
repz
mov
jnp
bound
movsb
int3
add
jnp
jnp
jae
push
xor
mov
sbb
mov
jg
dec
xlat
mov
push
and
cwtl
xor
cltd
call
cs
fyl2xp1
ficomps
hlt
xlat
fnstsw
js
cmpsb
out
pop
sub
out
cwtl
push
arpl
mov
data16
mov
xor
shrl
and
dec
jmp
xchg
xchg
leave
mov
loop
jne
cmp
enter
movsl
sbb
out
dec
fwait
cmp
stos
sti
cmp
fmull
jle
fdivl
mov
out
pop
add
stos
call
xchg
mov
lea
or
dec
jmp
lret
push
arpl
fidivrs
clc
cmovge
das
arpl
jbe
ljmp
pop
test
inc
jg
lods
repz
cmc
jmp
popa
adc
sti
mov
arpl
push
scas
dec
and
push
add
add
sbbl
enter
les
sub
scas
enter
pop
shlb
xchg
enter
aam
cltd
sub
jnp
push
push
mov
fxam
rcr
out
fcompl
inc
fwait
add
or
fcmove
pop
iret
test
xor
xchg
jecxz
loope
dec
mov
out
adc
adc
pop
jmp
out
dec
pop
lcall
movsb
adc
inc
leave
add
gs
lods
ss
mov
adc
in
add
or
idivl
and
and
gs
xchg
or
cmp
je
cmpsb
dec
inc
icebp
dec
adc
xor
or
int3
jle
lods
pop
out
pushf
add
push
jp
mov
cmp
inc
addl
xor
idivb
or
sub
movsl
enter
xchg
rcrl
fwait
aas
pop
imul
test
and
hlt
sub
pop
mov
outsl
cmpb
subl
xor
push
pop
adc
int
jmp
cmpsl
and
addr16
dec
repnz
icebp
push
in
inc
xchg
inc
jg
cli
cld
popf
std
mov
repz
dec
mov
jae
scas
cmp
pop
lds
dec
sub
out
push
and
and
adc
pop
add
mov
jno
and
mov
xchg
movsb
mov
cmc
sub
mov
cli
jb
pop
cmp
jnp
loop
jne
adc
jg
insb
in
sbb
xlat
cs
jno
jg
push
dec
inc
cmp
mov
push
cmp
mov
lret
fdivs
out
sbb
insl
int3
shl
insl
xor
and
js
add
jmp
inc
jmp
add
dec
xchg
add
add
je
xor
rolb
inc
shlb
sti
xchg
xchg
cld
das
xor
shr
adc
cmp
das
mov
lods
fstps
xchg
out
mov
jg
pop
clc
or
push
icebp
or
inc
mov
fistps
mov
xor
rolb
daa
adc
mov
dec
xlat
xor
add
xchg
add
xlat
xor
int
pop
or
dec
mov
mov
js
fisubrl
push
imul
movsl
mov
pop
xchg
fwait
cltd
mov
lods
out
mov
daa
cwtl
fisttpl
clc
mov
lcall
repz
mov
push
cmp
cmp
push
cs
adc
shll
jbe
push
cltd
jmp
rcl
cmp
sbb
ja
push
cmp
inc
and
mov
andl
scas
jmp
pop
mov
ja
shlb
cmp
insl
pop
mov
mov
push
dec
pop
imul
lods
aad
dec
fs
movsb
xor
lret
pop
sahf
push
fstps
loopne
mov
xor
xchg
pop
jmp
mov
push
fcoml
idivb
js
into
data16
rcr
adc
sbb
mov
or
decl
inc
or
jno
jne
repz
push
mov
outsl
mov
xchg
jbe
sbb
and
loopne
das
push
or
mov
fs
outsl
sbb
movsl
pop
push
js
dec
adc
jle
cli
popa
push
mov
sbb
mov
jns
jne
jg
cs
sub
xchg
das
inc
imul
cmp
out
lret
inc
mov
mov
imul
inc
dec
loopne
in
aas
imul
mov
cs
outsb
incb
test
and
xor
bound
mov
mov
popf
sarb
push
and
xchg
push
clc
push
xchg
cmpb
and
mov
or
fistpl
mov
adc
mov
sub
jecxz
imul
xor
in
bound
sahf
idivb
sbb
rcrb
mov
xlat
repz
mov
out
loope
cmp
add
push
xchg
iret
xchg
dec
fucom
or
push
mov
lret
lcall
inc
dec
xchg
mov
pop
mov
adc
inc
fwait
lds
shll
frstor
cmc
dec
sti
loop
fsubrp
lods
out
inc
daa
ret
orl
push
in
inc
or
les
dec
pop
test
push
inc
data16
iret
icebp
and
inc
push
pop
mov
in
rolb
mov
outsl
or
popa
jae
idiv
and
in
popf
sub
adc
mov
out
pop
jl
mov
jge
mov
jb
adc
jge
stos
push
mov
stos
xchg
std
inc
pop
cmpsb
xchg
push
xor
jl
mov
jecxz
xor
stos
flds
or
leave
push
clc
jl
mov
ror
addl
jmp
addr16
cltd
js
push
imul
iret
jmp
mov
ljmp
scas
fistpl
enter
fwait
pop
mov
ret
ljmp
pop
and
pop
adc
lock
icebp
nop
pop
mov
inc
mov
and
pop
xlat
mov
ljmp
push
repnz
sbb
pop
jmp
fldl2t
sub
hlt
sub
and
scas
push
inc
ret
push
mov
jb
aaa
cltd
loope
sub
mov
mov
push
call
jl
adc
mov
mov
sbb
jge
imul
cli
insb
rcrl
xor
out
les
xchg
pop
mov
cmp
sbb
sahf
inc
mov
cmp
jo
jp,pt
adc
inc
dec
mov
cmp
lret
dec
mov
jg
fs
xchg
ljmp
repnz
xchg
cmp
addr16
stos
xchg
ljmp
fiaddl
mov
stos
lods
popf
lret
pushf
xlat
jge
ja
xchg
sub
clc
sub
rorb
jg
nop
stc
fcoml
adc
mov
xor
in
sbb
stos
inc
ret
mov
or
mov
add
mov
je
jmp
fldenv
mov
popa
xor
push
mov
movsb
inc
inc
dec
lret
mov
sar
imul
sbb
bound
mov
mov
pop
jae
pusha
cmpsl
add
xor
mov
inc
inc
dec
push
inc
xchg
stos
adc
aaa
xchg
sbb
xchg
pop
mov
push
jne
outsl
or
in
sbb
cmpsb
lea
stc
adc
fwait
test
dec
nop
aas
xchg
adc
mov
inc
push
or
in
mov
or
in
fdivrl
lcall
pop
call
js
bound
push
pop
push
icebp
setae
adc
push
cmp
insb
popa
lods
loope
xor
loop
fsubr
inc
aad
pop
dec
divb
sub
xchg
leave
dec
arpl
add
mov
push
neg
push
jno
mov
and
add
lcall
jge
hlt
jg
adc
test
punpcklwd
cmc
jb
aad
jmp
cmp
das
jb
popf
adc
ret
xor
and
dec
jo
adc
sub
into
mov
mov
out
sub
sbb
pop
or
dec
popa
adc
out
xchg
leave
aaa
adc
add
or
rcl
sbb
xchg
js
sub
out
dec
cmp
mov
cmpsb
popa
mov
cmp
mov
mov
inc
fsubr
movl
mov
add
aad
lcall
mov
sbb
jb
int3
lcall
add
cltd
jp
mov
dec
pop
adc
int
rcl
xor
cmp
jmp
bound
jnp
and
mull
sbb
scas
rcl
inc
shrb
std
mov
cwtl
sub
pop
leave
and
gs
fildll
xchg
les
xor
mov
fwait
ja
cwtl
mov
dec
mov
pop
dec
jae
mov
push
push
cli
pop
aaa
xchg
vunpcklps
add
mov
hlt
inc
rorb
push
inc
popf
pop
ficoml
push
jae
lret
scas
xchg
xor
das
add
jmp
je
and
loop
inc
push
jecxz
inc
repnz
mov
hlt
mov
push
push
push
pop
sbb
dec
inc
dec
mov
packsswb
lods
movsl
dec
je
pop
repnz
das
push
stc
fildll
pop
jecxz
inc
jge
jb
cmp
out
or
das
out
bnd
incb
in
pop
jl
sbb
inc
loope
xchg
pushf
movsl
or
mov
mull
stc
mov
aaa
cmpsl
add
or
sahf
testb
pop
popf
mov
lcall
mov
xor
sarl
mov
or
and
dec
sub
jns
xlat
dec
sbb
jecxz
sbb
and
sub
mov
and
inc
cwtl
pusha
jg
xchg
test
outsb
into
add
fcomp
mov
cld
mov
inc
inc
or
push
and
jl
ds
repnz
jl
aam
daa
sub
call
adc
arpl
jae
jmp
pop
push
pop
xchg
hlt
scas
nop
xchg
cmp
lock
cmpsb
fsubp
in
insl
test
jmp
cmpsl
jg
and
sysret
inc
mov
or
or
fs
data16
mov
movsb
mov
movsb
add
mov
pop
outsl
push
mov
push
xchg
mov
andl
out
arpl
fs
sti
sbb
xor
jo
js
xorb
cld
push
mov
push
leave
test
cwtl
jmp
sub
jp,pt
dec
pop
sbb
frstor
jo
loope
xchg
mov
bound
adc
das
or
lcall
inc
xor
adc
imul
inc
sbb
out
mov
push
inc
outsb
jbe
nop
dec
sub
cmp
inc
sbb
daa
pop
sahf
adc
ret
dec
std
mov
pop
inc
adc
adc
ds
adc
adc
clc
adc
dec
or
pop
nop
adc
je
dec
pop
arpl
fs
imul
int3
loop
xor
cmp
shl
insb
pusha
push
push
push
xorl
ror
shlb
pop
jno
cmp
mov
icebp
xor
push
mov
or
add
mov
mov
subps
lods
dec
jp
ficompl
pop
subb
and
or
cli
in
lds
js
sub
sub
jp
pushf
scas
pop
rol
jle
in
pop
sti
jns
mov
cmp
inc
fs
inc
jmp
jmp
insl
fwait
popf
lret
mov
repnz
mov
inc
ja
nop
pop
inc
ret
pop
cmp
adc
orl
ja
ucomiss
aam
fcmovu
rcrb
mov
bound
sar
pop
inc
or
test
sub
pop
push
push
stc
pop
jl
jbe
loope
in
jbe
repz
and
xor
jmp
jo
test
sti
jo
add
mov
test
add
jle
ljmp
push
insb
es
fwait
test
sub
sbbb
js
rclb
std
inc
ret
fidivs
add
sub
add
int3
insl
xchg
incb
popa
mov
ja
and
inc
mov
lahf
xor
add
ja
lods
pop
ret
adc
movsl
mov
xchg
jne
in
xor
cmp
repnz
lods
jmp
into
push
les
and
into
inc
int3
pop
mov
sahf
or
cli
inc
outsb
dec
xor
ret
and
out
xchg
jp
xor
add
lods
ljmp
rcrb
movsb
mov
mov
outsb
push
call
push
movsl
mov
into
addr16
hlt
out
lahf
fwait
outsb
push
lock
push
and
mov
stos
shl
jnp
imul
jno
roll
subl
call
pop
jnp
cltd
jl
daa
fistpl
adc
adc
jae
add
cmp
xchg
mov
or
test
push
sbb
hlt
or
push
loope
popaw
push
mov
dec
loopne
cwtl
dec
out
sub
push
fdivrs
bound
xchg
btc
fnstcw
cmc
sub
lds
jecxz
pusha
orb
xchg
and
pop
mov
inc
pop
mov
mov
loope
dec
or
fidivl
lea
add
sub
pop
fistpll
cbtw
aam
je
int
orb
inc
add
mov
sbb
add
pushf
fidivl
dec
mov
cmpsl
pushl
adc
fists
cmpsl
in
mov
jmp
and
ss
in
mov
sub
xchg
int
insb
mov
clc
shll
mov
insl
push
jecxz
push
pop
iret
aaa
jp
or
jbe
std
xor
and
es
push
test
sbb
in
aas
mov
jp
xchg
ja
cmp
jp
mov
or
ret
pop
shr
lods
leave
das
xor
in
dec
xchg
pop
inc
pop
aas
out
int3
in
imul
push
push
sub
sub
notl
sub
dec
or
enter
pop
mov
test
pop
jo
xor
negb
adcb
outsl
outsl
xchg
out
jb
cmp
psubb
lds
int3
mov
push
push
pop
dec
dec
nop
andl
mov
sahf
add
mov
or
mov
es
cmp
sub
test
ret
daa
mov
jo
mov
cld
xor
cmp
daa
lods
pop
jl
lret
fsubrp
jle
jb
dec
mov
push
outsw
outsl
add
test
dec
dec
inc
or
adc
dec
pop
popa
dec
add
out
xchg
add
or
repz
fdivs
xchg
xchg
addr16
aas
pushf
stc
rcrb
sahf
cmp
inc
stos
add
xchg
lea
stc
sbb
mov
std
out
xchg
aas
adc
lret
push
dec
scas
jmp
mov
aaa
cld
andb
rclb
fisttps
mov
jecxz
add
std
mov
fisttps
xchg
stc
jns
add
fs
push
jno
fwait
sbb
test
cs
push
pop
out
aam
aam
or
icebp
lock
aam
daa
dec
loope
mov
lahf
cs
cwtl
es
rolb
repz
enter
test
ljmp
shl
fildll
clc
xor
ret
xorl
xlat
movsl
outsb
rorb
xchg
mov
push
insb
or
xchg
push
lods
cld
add
pushf
movsb
xor
jb
and
push
pop
mov
mov
or
dec
loope
mov
cmp
in
cld
xor
fdivrl
je
or
jae
aaa
frstor
jp
jle
or
inc
addr16
cmpsl
pop
es
outsb
sub
sbb
bound
sub
pop
add
xchg
dec
les
dec
mov
xchg
dec
push
xor
push
lret
push
sbb
xchg
mov
mov
mov
mov
repnz
lods
or
or
pusha
pushf
fdiv
push
jnp
dec
scas
add
movsl
mov
stos
mov
cmpsb
pop
jle
lea
pop
scas
xor
mov
xor
idivb
mov
mov
add
outsl
mov
jp
cld
jnp
or
mov
sbb
cs
sbb
es
mov
mulw
pop
adc
imul
aad
das
mov
dec
insb
mov
xlat
and
lahf
lods
ljmp
sti
jle
xchg
inc
inc
push
popa
or
je
inc
out
mov
lods
push
sbb
out
daa
adc
mov
jmp
dec
or
push
mov
jne
xor
dec
mov
or
popa
cmp
stc
outsb
lahf
mov
jg
dec
je
add
sub
sbb
ljmp
sub
mov
arpl
stos
jbe
std
es
push
stos
lret
jl
lods
idivl
adc
testb
fidivrs
inc
pushf
jne
xor
xchg
and
lcall
sbb
dec
mov
cmp
cmp
mov
popa
add
inc
push
xchg
xchg
mov
cld
or
shrb
dec
mov
sub
sbb
data16
out
jmp
lea
stos
xchg
jp
dec
int3
nop
push
jg
mov
test
add
sbb
rolb
pop
inc
cmp
xchg
jae
and
cmp
outsl
gs
dec
sub
jg
push
loop
add
sbb
push
cli
cmp
loopne
mov
jg
das
pop
movsb
jnp
xor
cmp
clc
into
inc
jb
iret
xor
inc
xor
stos
ds
and
aad
ds
cs
mov
xchg
cwtl
mov
mov
xchg
fisubs
int3
popa
jge
or
scas
fcmovnu
stos
add
xor
sub
icebp
lcall
stc
sbb
jne
fcoml
xchg
js
jne
mov
push
movsl
pop
inc
push
jmp
xchg
shl
push
mov
jecxz
sti
sbbb
inc
xor
pushf
in
sahf
shll
xor
cmpsl
test
sub
mov
mov
lock
add
enter
xchg
loopne
push
je
pop
cmc
fwait
aad
jb
xor
dec
add
dec
inc
mov
mul
pop
out
add
cli
fdivrl
jle
stos
sbb
inc
xchg
adc
iret
add
cli
mov
xchg
mov
pmullw
ret
jecxz
adc
xchg
ja
mov
bound
adc
or
lcall
lcall
inc
addr16
lods
mov
sub
sarb
push
data16
and
or
mov
call
push
repnz
mov
orb
repnz
divps
push
jmp
ss
movsl
mov
mov
or
das
std
aaa
xchg
rol
sub
xchg
dec
and
adc
shrd
mov
mov
xchg
xor
pop
jecxz
adc
ret
adc
ret
ljmp
adc
outsl
stos
test
insb
inc
push
fcompl
cmpsb
sbb
pusha
or
sbb
cmpsl
adc
ds
push
je
aad
movsl
sarb
pop
adc
cmp
dec
dec
fdivrs
xchg
pop
jb
push
sub
stos
jno
gs
jl
stos
adc
aam
jo
xchg
pop
add
cld
push
lret
aaa
sbb
or
push
repz
dec
xchg
fs
or
ret
mov
xchg
jecxz
fwait
mov
cs
pop
xor
push
lods
push
mov
ljmp
cmp
xorb
pop
movsb
push
jae
sbb
and
lahf
xlat
dec
sub
cld
es
cli
in
stos
and
and
dec
jnp
mov
cmp
addb
mov
es
hlt
mov
pop
aad
mov
insl
stos
shr
add
pop
rcrb
stos
movsl
cmc
gs
mov
out
adc
mov
into
fcoml
mov
add
xchg
xor
or
cmp
insl
and
leave
cmpsb
nop
fstl
xchg
push
mov
in
dec
inc
aas
pop
xorl
mov
and
cmp
out
push
in
lldt
xor
dec
aam
ljmp
sbb
shl
ds
sub
pop
dec
sub
loop
cli
popf
xchg
fs
sub
inc
jno
fcoml
jg
rcrb
jge
xlat
sti
dec
movd
cmp
xchg
cli
push
aad
sbb
inc
xchg
jne
ret
jmp
cmpsl
nop
sub
inc
jbe
push
outsl
iret
aas
ds
pop
scas
mov
sbb
jp
dec
loopne
mov
insb
xchg
iret
rcll
lods
adc
inc
mov
push
loop
xchg
test
dec
add
sbb
pop
inc
sbb
sbb
mul
insl
jl
out
inc
sbbb
outsl
cmp
sub
aam
xchg
xchg
or
mov
fs
cmpb
or
pop
leave
lcall
divl
sbbl
daa
cs
pop
mov
lods
or
push
push
adc
cmp
push
sub
adcb
jnp
mov
sahf
cmc
ja
shr
fsubrs
rorb
in
mov
push
test
mov
dec
sub
xor
pushl
lea
ja
mov
lods
loop
nop
xor
dec
sub
cmp
xchg
sbb
pop
jp
adc
jle
imul
test
rorb
test
cwtl
fidivs
cmc
sbb
es
sbbl
xlat
sub
xor
push
imul
add
inc
inc
arpl
pop
cmpsb
popa
push
adc
xchg
repz
and
int
outsl
cmp
push
xor
hlt
mov
xor
and
data16
or
jmp
dec
mov
lahf
mov
mov
repz
xchg
mov
and
out
insl
cmp
mov
jo
cs
jmp
mov
cwtl
cltd
push
out
xchg
cmp
xchg
stos
and
test
test
scas
push
lds
push
sarl
clc
rorb
mov
daa
push
sub
ficoml
and
sub
int
dec
adc
jl
push
sbb
inc
es
inc
xchg
xchg
xchg
lea
outsb
pop
ret
inc
mov
sbbl
cmp
cltd
inc
stos
mov
in
jb
loope
call
jmp
incb
jns
mov
ret
into
jnp
cmp
ror
ret
cli
mov
pop
pop
aam
add
xor
mov
inc
mov
jne
sub
xor
ljmp
mov
push
cmpsl
or
mov
mov
aas
mov
push
push
xor
push
aad
arpl
mov
mov
push
jae
xchg
std
or
jbe
lea
sbb
jl
ret
dec
std
sahf
ja
xchg
xchg
push
mov
mov
cltd
icebp
outsl
addr16
repz
in
stc
jle
dec
mov
or
jbe
push
push
adc
inc
cmp
ret
jle
fbld
or
orb
fxch
ficoml
test
sbb
inc
movsb
jbe
xrelease
lret
sbb
scas
xor
pop
add
mov
test
mov
outsb
push
test
and
test
mov
ret
xchg
lock
movsb
dec
cmpb
ljmp
mov
mov
cli
pop
in
sbb
lea
sub
sbb
fwait
sbb
aam
inc
and
dec
sbb
pop
xor
lcall
cli
add
xchg
icebp
mov
sahf
push
xor
lds
lret
jnp
notl
cltd
xor
loop
xchg
imul
dec
push
add
sbb
mov
pusha
cmc
rclb
mov
inc
lds
jecxz
lahf
out
call
bound
adc
inc
mov
pushf
inc
mov
jle
mov
xchg
inc
push
lock
cli
clc
cs
mov
xchg
lock
cmp
dec
or
and
test
lds
in
sub
jmp
inc
or
jb
push
or
subb
cmp
mov
int
jmp
mov
adc
fnstsw
jno
mov
add
leave
fwait
xchg
outsl
insl
ljmp
mov
and
js
inc
adc
mov
gs
mov
and
jle
arpl
inc
cmp
push
push
mov
mov
clc
mov
pop
mov
and
js
iret
iret
notb
mov
movsb
call
mov
je
std
lods
enter
test
lahf
push
leave
xor
jnp
scas
jge
ret
push
or
push
int
aaa
fidivl
mov
xor
sbb
and
cmpsl
loope
jnp
sub
pop
out
add
ss
adc
arpl
fs
xchg
dec
call
addr16
xor
fsubl
mov
xor
pop
mov
mov
jmp
pop
jne
test
cli
sbb
cmp
xlat
loope
fldl
push
or
xchg
pop
mov
stc
inc
or
push
adc
jo
movb
fstpl
jle
sub
cmp
sub
jmp
inc
or
rcrb
adc
fldl
aaa
xchg
sub
and
inc
jnp
dec
add
pop
dec
sbb
les
inc
stos
or
push
jns
movl
mov
sbb
je
sbb
sbb
mov
fsubr
sbb
movsb
testb
jl
mov
pushf
push
int3
sbb
clc
pushf
jb
sub
ret
sahf
xchg
repz
mov
sbb
xor
xchg
aad
fistpll
and
arpl
es
or
push
xor
lods
frstor
adc
pop
xchg
lret
mov
popa
ds
sbb
jge
ret
inc
movsb
jns
ja
into
jg
cmp
add
lds
xchg
jnp
stc
test
pop
mov
insl
inc
or
divl
xor
cld
mov
idivl
lea
push
mov
xor
faddl
leave
push
lcall
jge
sub
add
mov
adc
sbb
push
shll
fstps
lods
negl
dec
fdivrl
into
mov
flds
cmp
dec
push
xchg
sti
cmpl
int3
fwait
insl
out
cs
add
sub
mov
outsl
rolb
lret
or
or
jb
int
mov
inc
call
stos
push
idivl
stos
movlps
cmp
dec
ret
xchg
jp
pop
mov
or
cltd
mov
clc
pusha
aas
stos
xor
jge
inc
xor
xor
stc
sub
aas
arpl
jle
fadds
jmp
dec
popf
add
pusha
lahf
xchg
mov
fistpl
adc
xorb
fbld
mov
inc
pop
fidivs
mov
pop
xor
xor
pop
pop
jb
sub
mov
mov
sbb
hlt
inc
push
pop
push
sti
push
int3
add
aas
cltd
jb
sbb
xor
cld
shrl
cmp
inc
add
scas
dec
fnsave
testb
rorb
insl
adc
jbe
ja
dec
cli
mov
sbb
xor
fcoml
sub
ljmp
dec
cmc
in
jne
xchg
mov
jle
imul
pop
sbb
cmp
xchg
pop
das
ret
mov
idivl
mov
add
jo
and
xor
push
sbb
stos
aad
inc
test
jg
mov
mov
pop
icebp
mov
or
dec
mov
jle
cmp
arpl
shll
out
mov
movaps
mov
hlt
cmp
shlb
fs
xor
enter
push
in
xchg
inc
ja
pop
inc
dec
les
daa
mov
repnz
mov
mov
fldcw
fisubrl
fstpt
mov
insb
fcmovbe
inc
adc
in
inc
mov
repz
push
sbb
out
sub
scas
ljmp
mov
mov
lock
insb
mov
add
sbb
fnstcw
daa
test
cmp
jmp
shr
xchg
jns
sub
mov
sub
pushw
push
dec
push
jns
cmc
movsb
or
call
xchg
or
int
jmp
add
and
idivl
in
push
add
es
cmpsb
cwtl
mov
mov
mov
xchg
adcb
adc
jg
cmpsl
shll
mov
sub
fiadds
or
jecxz
out
push
dec
cwtd
cmp
insb
add
jg
fucomip
ja
dec
je
fisttpl
rcrb
into
or
push
sub
xlat
fwait
inc
pusha
out
movsb
cmp
inc
sbb
sub
test
ss
cmp
mov
inc
filds
scas
mov
insl
mov
xchg
xor
cli
ret
movsl
xor
push
mov
jnp
insl
dec
mov
adc
xchg
mov
rcrl
push
and
fadds
and
sub
jle
add
enter
jo
pop
pop
inc
bound
xchg
mov
add
lcall
ljmp
jmp
pop
insb
stos
dec
popa
inc
mov
test
mov
daa
jo
adc
lret
lea
jno
callw
out
rorl
or
lock
pop
cltd
je
pop
inc
loop
push
les
xor
les
test
jo
ret
inc
cmp
mov
jecxz
test
pop
fdivrs
pop
xor
add
inc
dec
sbb
cli
sub
int
fldenv
mov
lock
mov
addr16
cmc
aaa
xor
add
clc
mov
into
mov
push
mov
pop
ja
imul
fldenv
and
aam
jb
pop
cld
adc
out
ret
in
sbb
pop
inc
ss
mov
fsubs
jle
xor
rorb
shrb
int
push
jb
pop
mov
pop
in
pavgb
sbb
sbb
mov
cmp
test
jecxz
jnp
mov
mov
pop
test
test
cmp
xchg
ljmp
dec
in
cs
mov
mov
pop
aad
not
mov
popa
sarl
dec
push
pop
loop
fucomp
xor
shrb
das
jo
push
sarl
pop
push
orl
out
jne
xor
sub
adc
icebp
ret
inc
in
out
jmp
jecxz
rcrl
pop
xor
pop
adc
outsl
pushf
loope
pop
in
xor
mov
scas
mov
xor
loope
cmp
rol
or
les
cmp
lcall
mov
xchg
aam
aad
aad
push
mov
lods
lea
test
cmpsb
insl
push
cltd
or
cmp
pop
dec
dec
pop
pop
jmp
lret
loop
fbstp
hlt
jbe
push
iret
movsb
push
mov
jne
ror
fcomi
jge
lcall
push
out
cli
mov
pushf
adc
bound
mov
gs
or
fisttpl
or
jmp
dec
or
adc
pop
loop
fistpl
scas
adc
js
in
inc
dec
movsb
sbb
mov
jg
xor
sbb
mov
paddw
cmp
push
jl
cltd
dec
lods
mov
dec
dec
dec
insb
fdivr
jbe
mov
enter
sbb
daa
mov
andb
in
jge
xchg
sub
adc
xchg
mov
jbe
js
gs
fisttpll
dec
adc
ss
stos
jbe
in
subl
lret
insl
or
dec
inc
inc
call
aaa
je
push
test
inc
lods
iret
or
scas
jl
rorb
je
xlat
and
push
out
and
xor
push
fcoms
ficomps
dec
xor
mov
imul
mov
or
rcrl
pop
cmp
push
dec
faddl
push
dec
add
nop
cmp
sub
adc
cmpsb
repz
test
jmp
and
add
jne
out
pop
jno
in
lret
out
cmp
adc
enter
mov
sahf
inc
sbb
jns
jle
mov
loope
outsl
mov
je
push
int
cmp
jne
lock
xor
mov
fwait
or
je
sahf
into
jo
pop
or
sbb
push
sub
jp
push
sbb
mov
ja
insb
movsb
nop
int3
sti
shl
xchg
and
mov
into
jge
dec
jno
add
scas
jnp
push
enter
adc
movsl
or
aad
adc
in
stos
adc
loopne
aad
ds
add
pop
xchg
enter
loopne
ret
std
push
repz
sbbb
les
adc
mov
sub
push
out
add
jmp
dec
dec
sub
scas
scas
mov
mov
xor
push
mov
fcomip
mov
rolb
inc
lds
mov
into
pop
jns
mov
int
pop
cmp
arpl
inc
xor
lods
aad
loopne
repz
fidivrs
jbe
js
clc
popa
pop
push
add
jb
inc
cmp
sub
imul
cmp
outsb
cld
fisubl
sbb
mov
jle
and
in
jnp
push
ficompl
lea
test
push
mov
cmp
mov
ret
popa
mov
sbb
ret
scas
push
daa
movsb
std
dec
pop
popa
iret
ja
xchg
andb
insb
addps
push
fcomps
mov
push
jle
movl
test
xor
inc
push
mov
test
mov
lds
mov
or
jnp
cmpsb
std
rcr
mov
aaa
sub
xchg
test
ss
push
xchg
mov
jg
push
js
lahf
xchg
mov
xor
scas
sbb
jnp
or
xchg
stc
sbb
cmpsl
mov
fisubrs
xchg
mov
dec
or
pop
jmp
and
inc
add
pop
push
mov
ja
pusha
arpl
jmp
in
push
push
addr16
jne
in
jl
pusha
dec
and
call
daa
jnp
popa
aas
in
cmp
pop
push
xchg
insb
jne
pop
bound
mov
xchg
andb
daa
test
ja
mov
sub
xor
pop
loop,pt
inc
repnz
pop
and
mov
repz
pop
inc
loop
imul
sbb
inc
xchg
mov
call
aam
fcmovnb
in
mov
das
inc
adc
data16
inc
mov
mov
cmp
xor
movb
mov
pop
clc
popa
jno
and
push
clc
scas
daa
sbb
mov
sub
adc
das
sbb
jns
push
push
stos
imul
mov
xchg
pop
add
outsb
sub
dec
iret
adc
mov
test
lcall
je
cmp
and
push
mov
push
mov
sub
ds
mov
dec
mov
je
fs
pop
and
js
push
adc
test
out
jae
mov
movsl
test
push
push
jecxz
loopne
push
sbb
ljmp
dec
imul
mov
cltd
sti
orb
mov
sbb
shll
out
sbb
cli
nop
adc
pop
daa
lds
xlat
stos
mov
std
sbb
or
sti
xchg
pop
xchg
sbb
out
push
stc
add
add
jae
xor
test
push
test
sbb
xchg
sbb
jge
xor
popf
pop
imul
in
inc
or
pop
addr16
imul
mov
in
test
clc
shll
pop
call
xchg
dec
pop
out
add
loop
mov
repz
and
add
push
ja
pop
jecxz
push
mov
xchg
cmpsl
cwtl
out
imul
pop
movsb
mov
sbb
mov
lea
cld
fwait
test
jbe
jecxz
mov
repz
mov
lahf
dec
test
ror
mov
sub
xor
inc
or
or
push
cmp
rclb
test
fwait
ss
push
fs
call
test
arpl
mov
pop
pop
scas
mov
mov
xorl
addl
xchg
mov
cltd
pop
jo
push
inc
in
inc
and
bound
cmc
std
enter
push
sarl
fcoms
call
rclb
fistps
mov
mov
xor
fidivs
cld
cmc
push
mov
aas
neg
mov
xor
sahf
add
call
dec
cmp
mov
je
mov
jecxz
cwtl
sbb
lods
mov
mov
ret
mov
jecxz
jp
pop
jmp
int3
into
daa
flds
mov
push
ret
push
loopne
pushf
ret
iret
mov
mov
fmull
daa
sar
mov
lahf
pop
cmpsb
jp
pop
jne
xchg
mov
cmc
or
and
lahf
and
ret
stos
inc
jmp
mov
fdivrs
fbld
jbe
add
adc
sub
or
bound
xacquire
mov
push
les
inc
push
scas
lcall
shll
int
lret
ljmp
adc
outsb
dec
not
gs
hlt
mov
mov
pop
mov
loopne
insb
jl
aas
lea
mov
negl
or
mov
lcall
add
xchg
mov
clc
xchg
mov
mov
sbb
and
cmc
jmp
insl
fisubrs
sub
or
fs
dec
cmp
mov
cmp
adc
mov
cmc
lds
sbb
pop
cmp
test
ss
cli
lahf
adc
data16
and
jno
xor
bound
test
and
xchg
cmp
aad
adc
cmp
cmpsl
xchg
into
xchg
mov
pop
jmp
xchg
add
cld
sbb
addr16
insb
or
sbb
sbb
stc
jb
arpl
cwtl
fisubrl
sub
stc
jne
bound
fwait
mov
in
loopne
add
stc
jae
lods
inc
jnp
mov
std
daa
sub
dec
testb
js
dec
int3
mov
jmp
cld
and
out
sti
sbb
adc
push
sub
pop
adc
pop
sub
ljmp
pop
push
pop
jg
adc
out
movsb
mov
out
jmp
inc
xchg
mov
or
push
loop
jp
lods
fs
ja
push
sbb
add
nop
or
outsl
loopne
cmp
cli
cmp
psubusw
xor
jne
cltd
mov
pop
push
cmp
loope
in
repnz
mov
xor
insb
ret
popa
rcll
add
movsb
mov
and
divb
mov
out
js
jns
out
xchg
jp
push
or
add
push
arpl
push
ret
shl
aam
add
repnz
adc
xchg
pop
rcll
adc
xor
and
daa
cmp
jle
inc
xchg
sti
cli
rcrl
das
mov
test
fldl
das
pop
mov
jnp
mov
mov
xchg
lcall
mov
outsl
dec
out
jno
outsb
dec
std
pop
mov
outsl
jp
ret
push
xor
mov
pop
mov
mov
push
or
xchg
ds
adc
push
addb
inc
dec
bnd
jb
dec
xchg
sbb
std
loop
popf
sub
add
sub
bound
xor
enter
arpl
shr
into
mov
addr16
int3
xor
dec
mov
in
loop
push
insb
mov
shr
je
add
ret
xor
push
mov
pop
shlb
clc
mov
xorb
dec
call
int3
cmpsl
pop
test
inc
push
add
call
sahf
mov
lcall
mov
pop
sub
fsubl
xor
popa
dec
out
push
int
push
popf
add
dec
pop
inc
mov
dec
shll
int
pop
and
test
jle
cmp
mov
xchg
mov
push
mov
scas
mov
in
pop
cltd
movsb
shll
inc
cmp
outsb
imul
ret
and
mov
push
cs
cmp
add
mov
and
and
icebp
push
or
roll
and
jp
repnz
and
movsl
pop
mov
je
sbb
rolb
or
divb
into
in
adc
test
and
fsubrl
int3
loop
sub
inc
jmp
stos
jge
stc
pop
bound
sbb
inc
mov
sbb
mov
ret
cmpsb
mov
lret
adc
mov
lea
jae
lock
ljmp
insb
or
adc
lds
imul
sbb
adc
xchg
pop
mov
int
adcb
dec
movsb
xlat
xor
lcall
jle
cs
or
xchg
aam
xlat
cmp
rclb
jns
xchg
sbb
icebp
int3
andb
or
inc
jmp
inc
pop
cmpsl
out
daa
push
pop
dec
cmp
push
push
das
fistpl
sbb
bound
sbb
outsl
and
cld
push
or
mov
in
adc
push
in
xchg
stos
loope
aam
mov
nop
mov
cmp
mov
add
mov
jb
push
jbe
shrb
mov
sbb
dec
push
bound
mov
fcmovbe
adc
xchg
add
adc
jnp
shrb
sub
sahf
addr16
cld
xchg
insl
clc
sti
push
sub
jge
mov
lret
push
cmp
push
jbe
push
and
addr16
xor
sbb
cwtl
in
inc
cld
inc
ds
mov
sbb
leave
test
push
cmc
lcall
jo
scas
xchg
into
sahf
cmp
mov
ret
push
jne
nop
mov
lods
mov
ljmp
movsb
nop
xlat
in
adc
mov
cmc
xchg
and
xor
sbb
push
int3
xchg
fs
push
out
inc
andnps
cmpxchg
test
mov
ret
and
pop
mov
popa
mov
inc
pop
ja
inc
scas
pop
stos
scas
inc
ljmp
mov
lock
aam
sbb
imul
std
push
cmp
xorb
loopne
sub
cmpsl
and
cmp
out
ljmp
add
or
je
ljmp
and
loope
xor
add
enter
test
mov
sub
mov
popa
sub
pop
inc
lret
sbb
ss
dec
lods
cmovno
push
std
xor
subb
jle
rcrl
insb
lods
mov
lods
adc
jb
and
test
inc
pushf
push
pop
int3
mov
inc
mov
int3
enter
rcrb
sahf
popa
pop
sbbb
inc
push
lahf
pop
mov
inc
add
sti
or
dec
scas
loope
cmp
push
bound
in
sub
ss
stos
cmp
xchg
or
ja
push
or
cwtl
imul
mov
lret
pop
fisubrs
rcll
loop
cmc
mov
push
dec
insb
mov
loopne
sbb
in
xlat
cmpb
inc
and
sbb
xchg
mov
ret
mov
or
daa
aaa
xchg
mov
and
push
mov
std
pavgb
push
or
jo
in
popl
sub
mov
aam
jbe
js
rcll
push
int3
mov
xchg
xor
sahf
sbb
lret
and
nop
sbb
push
push
add
fs
aam
mov
mov
stc
inc
subl
aaa
add
xchg
lahf
cmp
push
syscall
clc
into
cs
and
xchg
xor
xchg
and
jge
mov
movsl
sub
adc
fisttps
popf
hlt
arpl
add
into
cmpb
add
mov
xor
loop
shr
inc
hlt
cmp
in
repnz
mov
fcomps
out
or
test
aaa
movsb
daa
pop
mov
inc
jno
mov
into
lods
add
mov
dec
sub
add
or
fidivs
lret
jns
ret
nop
xchg
sub
inc
into
cld
icebp
cwtl
push
sub
sub
inc
jne
and
sarb
pop
jecxz
int3
jle
pop
sub
sbb
push
lods
xchg
inc
dec
dec
fadd
xchg
add
in
mov
mov
push
pop
mov
movsb
lret
jnp
lods
pop
push
xor
or
mov
insb
mov
sbb
out
movhps
add
xor
xor
fnstcw
aad
push
in
adc
or
mov
ja
and
pop
xor
nop
out
sbb
xor
push
mov
les
and
in
gs
mov
sarl
test
shl
pop
aam
cmc
loop
pop
inc
sti
leave
js
cs
fcmovb
jp
pop
out
add
adc
add
push
enter
and
mov
lods
add
movsb
ss
mov
and
shll
push
adc
push
mov
mov
xchg
and
or
add
xor
out
sahf
push
push
mov
dec
or
mov
clc
sub
ret
xor
incl
xchg
ja
cmp
cmp
push
inc
pop
adc
insl
mov
xchg
and
stos
or
add
or
dec
mov
lock
test
fstpt
push
shlb
and
popl
push
pusha
imul
pop
xchg
xor
in
pop
jb
or
lahf
mov
xchg
addr16
jb
in
lods
xor
xchg
cmp
out
or
push
mov
mov
loop
push
in
rorb
add
pop
fdivs
stos
push
clc
sti
add
std
inc
mov
add
cmp
or
loopne
push
pop
popa
mov
xor
jmp
imul
mov
lods
rorb
pusha
add
sti
mov
mov
repz
fidivl
mov
pop
rorb
cmpsb
loop
dec
mov
repnz
fbld
xor
and
ret
dec
push
mov
push
mov
and
adc
das
xchg
add
lahf
sub
mov
sbb
mov
jle
into
popa
mov
repnz
push
xchg
bound
lret
sbb
fcomi
das
and
sbb
enter
negl
stos
in
scas
iret
bound
or
sbb
or
sub
or
mov
push
mov
sbb
mov
aad
dec
xlat
stos
rcl
in
icebp
push
xor
out
ficomps
and
das
ret
loopne
or
jl
bound
daa
cmp
leave
cmp
sbb
movsl
xchg
sbb
dec
jecxz
clc
data16
adcl
add
xchg
mov
dec
add
xorl
xor
lock
jo
or
enter
std
push
imul
and
rcr
and
sub
aam
sbb
daa
jne
dec
mov
pop
cmp
dec
push
sbb
xchg
fwait
pop
test
rorl
cmc
jg
inc
inc
xchg
jmp
jg
push
fyl2x
nop
aaa
icebp
insl
dec
dec
in
xor
inc
lret
call
and
and
jb
enter
xlat
call
es
xchg
sbb
sbb
adc
divl
sbb
repz
xor
pop
pop
pop
push
adc
in
pop
mov
push
fwait
mov
pusha
popl
scas
lcall
ljmp
xor
stos
jnp
sub
jnp
and
cmc
push
mov
cs
jne
or
lea
cmpsb
and
imul
repnz
add
out
cmp
and
add
outsl
dec
int
fldcw
test
xchg
enter
cld
mov
cmc
lea
pop
inc
test
push
adc
mov
bound
lret
insb
jl
cltd
jmp
repz
jo
xor
cmc
bswap
pop
mov
outsl
loopne
mov
out
roll
pop
cmp
popa
je
mov
sbb
cs
inc
cltd
add
test
scas
out
cmp
out
scas
and
xor
xchg
mov
imul
out
xchg
mov
pop
bound
ja
fldenv
imul
out
sub
outsl
mov
pop
mov
cmp
jle
daa
stos
sub
jmp
int
mov
adc
shrb
xlat
xor
push
xor
jle
loopne
int
les
push
fucomi
enter
add
ja
sti
jno
ljmp
cmpsl
stos
cmpsl
pop
pusha
mov
xor
adc
mov
pop
inc
push
push
and
cmpsb
add
or
push
movsb
mov
add
mov
cmp
jo
stc
xchg
cmpsb
jg
inc
inc
loopne
out
cmpsb
test
lea
push
in
subb
jo
push
jb
cmp
test
ret
outsl
adc
les
mov
lcall
lods
ss
sub
mov
outsb
pop
sub
jb
jp
in
daa
push
imul
mov
ficomps
fimull
or
mov
jae
and
cli
cltd
fstl
mov
add
sbb
js
js
mov
or
aad
movl
mov
hlt
subl
cmp
jne
mov
push
sbbb
stc
ud2
fmulp
mov
cwtl
int
adc
insl
shrb
pop
call
icebp
xchg
cltd
rcll
sti
inc
aaa
inc
sbb
int3
sub
push
shl
mov
addl
scas
adc
xchg
mov
sbb
arpl
mov
loopne
pop
mov
sub
xor
shrl
sbb
inc
mov
mov
adc
jg
and
push
insb
gs
das
sub
lods
inc
sbb
rolb
xchg
add
xchg
jbe
cmpsb
out
shll
jmp
inc
clc
sub
dec
xchg
jno
stc
jmp
adc
rcrb
mov
or
loopne
ljmp
sub
in
ret
leave
fldenv
jp
loope
sti
inc
or
mov
rol
lods
add
loope
icebp
in
adc
call
dec
dec
or
stc
daa
sub
xchg
mov
nop
push
pop
orb
imul
nop
stc
adc
cmp
lret
sbb
mov
sbb
pop
fwait
push
lahf
cltd
cmp
int
pop
push
adc
jo
cmp
test
add
mov
and
insl
pusha
adc
mov
adc
loopne
movsb
pushf
dec
mov
stos
and
or
repnz
icebp
and
jp
fsubs
mov
add
mov
cmpsl
ret
mov
pop
xor
xchg
sbb
pop
fs
mov
subl
fisubrl
int
aas
ds
fldl
fwait
pop
add
sub
out
mov
add
popf
icebp
cmp
mov
cs
push
mov
and
sub
mov
inc
insb
jecxz
test
in
jo
add
jo
pop
pop
test
rcrl
mov
cwtl
cmp
xchg
cmpsb
rcll
pop
int3
jp
int
pop
jae
data16
imul
inc
cmp
sbb
fcompl
jle
test
mov
sub
mov
inc
push
test
ret
mov
lret
ret
pop
sub
lds
or
into
sti
rolb
xchg
pop
iret
addr16
movsl
mov
push
lods
adc
mov
jo
inc
adc
lds
add
das
aam
inc
xchg
nop
add
filds
push
rorb
xor
fiaddl
pop
mov
xor
sub
scas
sbbb
inc
or
sbb
push
das
inc
adc
inc
stos
adc
lods
negl
lret
cs
mov
test
ret
adc
ds
lahf
jne
mov
inc
sub
imul
cs
ror
cmpsb
test
cld
daa
sbb
dec
outsl
das
test
xchg
clc
lods
add
pop
mov
jle
sbb
imul
or
cmp
and
or
cmp
call
mov
es
fidivl
xchg
add
or
iret
jae
loope
imul
stos
xor
nop
jl
push
add
ficomps
jle
aas
sarl
push
and
ss
lds
fildl
orl
push
shlb
and
inc
jmp
popa
mov
addl
outsb
xchg
mov
pop
add
push
in
adc
das
in
pop
cltd
outsb
call
and
sub
fisubrs
aaa
add
arpl
push
xchg
out
mov
push
lock
or
outsb
fsubs
cmp
sbb
inc
repz
push
pop
adc
aam
mov
pop
movb
mov
nop
test
ss
outsb
cmc
pushf
pop
pop
mov
inc
rorl
jo
lods
push
inc
sti
fistps
or
lret
inc
push
mov
into
les
push
xor
or
adc
outsl
and
mov
stos
ret
je
pop
fs
push
push
add
mov
adcb
and
dec
cli
xor
mov
rclb
mov
hlt
add
adc
or
insb
loope
fs
sbb
mov
rclb
sbb
push
and
inc
sub
or
push
mov
xor
xor
sbb
outsl
js
inc
jle
in
loope
not
in
cmp
cli
push
mov
push
aaa
hlt
cld
and
icebp
arpl
mov
jno
lock
test
test
arpl
pusha
or
int
inc
jle
inc
rcll
cld
enter
cmp
push
push
fwait
add
popa
bound
mov
adcl
cmpsb
xchg
test
pop
dec
xchg
daa
scas
fwait
sti
pusha
inc
cmp
pop
mov
mov
xor
push
cwtl
cs
ret
mov
adc
pop
jecxz
add
aas
divb
dec
in
mov
jbe
adc
xor
xor
out
lock
mov
add
cmp
hlt
ds
mov
sub
fcmovnb
push
stos
daa
push
loop
sub
mov
mov
mov
cmp
inc
lock
lea
mov
insb
lret
jecxz
int
out
jne
out
jmp
mov
xchg
lahf
outsl
sbb
mov
xchg
lods
vhsubps
mov
mov
lcall
push
dec
pop
adc
test
pop
mov
adc
or
in
adc
into
lea
addl
adc
dec
mov
mov
xor
sbb
outsb
and
jmp
or
repz
sbb
push
mov
cmpsb
pop
pop
dec
insb
enter
mov
pop
mov
jno
add
in
mov
movsb
mov
jbe
ror
pop
push
xchg
xlat
fists
push
jne
add
dec
jp
repz
je
dec
and
jae
mov
cmp
add
mov
fwait
mov
dec
fists
pop
imul
imul
stos
xor
and
addl
movsl
ret
daa
inc
lods
push
push
jae
cmpsl
adc
add
dec
xchg
jnp
inc
aas
adc
shlb
xchg
mov
out
mov
int3
js
arpl
aad
jnp
enter
sti
stos
imul
loope
shll
jnp
rcrb
inc
cmp
xchg
sbb
jg
lahf
mov
pop
push
ljmp
sub
cmp
jg
mov
mov
pop
cmp
stos
jge
inc
jne
or
loop
test
cmp
cmp
dec
pop
push
inc
pusha
movntps
jae
loope
stos
clc
rcrb
mov
push
xchg
xor
mov
movsl
clc
dec
dec
pop
and
push
add
std
dec
popf
cltd
xchg
movb
lret
cli
outsb
aam
lods
and
jne
jg
test
jecxz
jmp
call
add
add
mov
jg
dec
mov
clc
cltd
sub
cmp
add
jg
xorl
jmp
lahf
xor
cwtl
stos
out
or
sub
dec
in
stc
insl
jecxz
cltd
push
ss
test
ror
leave
jp
js
sbb
push
cmc
test
mov
movsl
fs
dec
mov
dec
jmp
xor
jmp
xchg
mov
adc
cmp
stc
mov
pop
je
pop
mov
test
gs
std
inc
pop
shrl
fidivl
mov
inc
lock
ret
out
add
dec
sub
scas
inc
mov
lods
in
dec
add
mov
and
inc
mov
and
iret
sbb
push
push
lcall
loope
jmp
mov
cmc
add
xor
cmp
in
mov
aam
adc
popa
out
repnz
loope
xor
cmpsb
mov
pusha
repnz
xor
movsl
inc
mov
xchg
js
out
jle
out
push
inc
jno
add
mov
ret
mov
rcll
dec
cmc
inc
xlat
aad
scas
dec
into
sti
in
inc
call
jnp
int
movsb
and
sub
mov
jmp
push
ljmp
mov
jnp
push
mov
inc
xchg
testl
push
and
imul
ds
and
js
adc
rolb
into
mov
push
sahf
cmpsl
push
scas
and
xor
or
dec
or
cmp
lahf
pop
cs
int
xor
sub
add
sbb
pop
les
cli
push
sub
lods
aas
push
popf
jg
loop
pop
inc
cmp
or
aam
cs
inc
xchg
add
lcall
leave
scas
add
leave
ret
pusha
push
iret
mov
in
cmp
inc
jbe
add
scas
ret
add
inc
fildl
xchg
cltd
imulb
sub
mov
jp
icebp
out
sub
xchg
cmp
js
jbe
das
mov
int3
push
les
pop
adc
adc
out
sub
and
insl
stc
jl
cmp
inc
fcompl
pop
adc
pop
das
das
test
mov
pop
insl
fisttps
popf
cli
loope
xchg
ja
push
xor
mov
xor
cmp
xor
or
je
scas
inc
mov
icebp
in
icebp
pusha
mov
test
inc
test
or
cmp
cld
xchg
sub
or
leave
stos
rol
out
dec
add
jg
or
xor
pop
add
cmp
xchg
mov
jmp
fcmove
or
pop
lods
pop
push
call
rdpmc
insb
cmp
arpl
push
jo
sub
scas
imul
mov
jb
xchg
or
pop
sahf
in
pop
iret
mov
pop
lret
xchg
repnz
outsb
mov
ds
testb
jmp
mov
or
scas
cli
loope
neg
enter
and
aad
xor
scas
xor
sbb
push
or
push
pop
sub
fidivrl
pop
ret
cmp
ret
xor
popa
sti
xor
dec
sbb
xchg
push
push
mov
xor
out
addr16
ja
pop
inc
sub
mov
lds
sub
jb
aam
sbb
outsl
mov
mov
add
jl
fcomi
jecxz
in
and
push
add
jne
push
loope
mov
cmp
sub
inc
inc
lahf
ficoms
dec
popf
xor
add
xchg
mov
mov
gs
std
lea
sahf
add
leave
cmp
ret
dec
xchg
aam
daa
shl
inc
stc
jb
pop
push
int3
fwait
mov
and
cmpxchg8b
iret
jge
push
dec
ret
xor
pop
sub
movb
pushf
xchg
mov
aam
loopne
sub
mov
sub
push
loope
jge
sbb
mov
cltd
fidivs
cmp
in
jae
cwtl
mov
xor
mov
or
in
cmc
mov
pop
mov
inc
sub
fnstsw
fadds
adc
repnz
mov
fcom
push
mov
popl
out
pop
jo
lret
add
icebp
dec
pop
inc
outsb
jo
pop
ret
xchg
outsl
or
out
pop
lods
fisttpll
push
pushf
and
mov
sarb
leave
in
jge
stos
jg
inc
cwtl
jle
pop
filds
mov
inc
dec
popa
and
ret
in
xchg
or
xchg
xchg
je
stos
cwtl
js
es
pop
xchg
lea
adc
add
shll
push
push
add
jb
out
js
push
push
aad
xor
fmull
subb
mov
add
adc
mov
inc
jge
dec
stos
add
bswap
dec
popf
lahf
outsl
push
push
dec
push
mov
sbb
cmp
mov
dec
inc
setle
dec
test
mov
xchg
mov
jae
negb
shl
fnstenv
test
cmp
shrb
xor
jnp
sbb
xchg
xor
mov
xor
lret
hlt
in
add
lcall
pop
clc
lcall
lods
dec
mov
sti
scas
pop
or
xchg
and
inc
sbb
subb
push
cmpsb
loope
mov
and
sub
sahf
aad
xchg
adc
addr16
pop
sub
jmp
sbb
rcrl
sbb
out
cltd
cmpsb
fs
push
loopne
inc
push
and
and
dec
and
div
sbb
scas
das
shll
daa
mov
jmp
ret
icebp
in
in
xchg
dec
cmp
adc
js
shlb
insb
xlat
xor
xchg
test
sti
dec
add
psrld
aad
lcall
test
mov
sbb
mov
mov
lods
dec
sbb
fsubrs
repnz
push
insl
or
jl
and
divl
inc
pusha
and
test
mov
sub
ss
and
insb
ljmp
jg
pop
dec
ljmp
push
pop
in
xor
mov
fnstsw
pop
das
and
ret
xchg
std
add
test
ss
ficoms
in
je
push
fwait
arpl
fs
xchg
mov
mov
fsubs
and
cli
cmp
movsb
addr16
cltd
xchg
mov
fstp
cmp
mov
fdivl
mov
lds
scas
mov
aam
ret
daa
loop
rcll
jg
jae
pop
push
popf
sti
mov
jg
stos
gs
mov
movsb
roll
and
test
fcoms
inc
cltd
leave
xorb
cmp
arpl
pop
mov
lods
aam
jge
rcl
movsl
int3
mov
aaa
sub
cli
add
fwait
aaa
inc
scas
xlat
inc
and
mov
lahf
inc
jmp
sbb
lcall
js
imul
sahf
mov
into
pop
out
addl
cld
js
dec
or
sbb
test
inc
sbb
adc
xor
ljmp
js
cmp
cmp
insb
cld
adc
test
sub
xor
mov
test
or
mov
loop
inc
xor
mov
pushf
daa
sub
mov
jmp
adc
push
cmp
jge
xlat
dec
xor
and
sub
dec
imul
fistpll
xor
push
mov
mov
inc
jb
dec
push
vmwrite
cli
xlat
aad
mov
pop
icebp
mov
or
push
movsb
dec
sbb
and
mov
push
cli
mov
fisttpl
dec
sub
sti
dec
sahf
xchg
dec
lea
mov
movsb
out
pop
push
loopne
sbbl
jbe
jnp
bound
and
push
fildll
push
call
in
insl
dec
aam
or
add
repz
nop
pop
or
jl
inc
mov
int3
cld
js
test
aad
mov
mov
sub
hlt
repz
inc
sub
in
xor
pop
push
fnstcw
bound
adcb
f2xm1
mov
push
das
iret
lret
and
das
and
les
push
lods
jecxz
hlt
sbb
dec
fwait
mov
addr16
push
faddp
shll
pop
repz
or
insb
lret
loope
push
cmpsb
std
push
jmp
xor
call
mov
mov
es
aad
mov
lret
mov
fcompl
popf
lahf
push
mov
inc
push
fsub
bound
repz
mov
xchg
xchg
or
movsl
adc
pop
adc
out
ljmp
cld
stc
lar
icebp
cmp
push
pop
call
movsb
in
lcall
push
xchg
daa
es
xchg
xor
add
lcall
adc
es
fsubl
js
imul
and
das
cmp
sarb
or
inc
lods
xchg
and
sarb
xor
xchg
repz
lock
mov
cmp
sub
sub
jne
lods
std
jnp
dec
cmp
loope
adc
xor
mov
push
cmp
jb
cmc
aaa
arpl
icebp
mov
ret
mov
pop
or
cmp
adc
add
sbb
ljmp
pop
cmpsl
out
fildl
jge
dec
mov
xchg
in
adc
mov
push
stc
cltd
xor
movsl
stos
scas
mov
xchg
add
mov
mov
fidivrl
fbstp
data16
mov
stc
xchg
jp
and
pusha
add
mov
nop
lahf
lret
sub
cmpsb
xchg
jg
sub
push
xchg
and
jbe
add
inc
jo
outsb
rolb
or
add
mov
mov
fidivrl
pop
mov
mov
shll
js
mov
mov
stc
testl
mov
xchg
sahf
pushf
jl
push
or
jp
aam
insl
mov
cmp
subb
out
fsubs
pop
lea
and
mov
mov
insb
cmp
xor
adc
hlt
pop
sub
dec
xchg
fimull
lea
rol
inc
mov
push
fsubp
jbe
xchg
into
mov
icebp
sub
pop
cld
leave
inc
ss
dec
push
test
cmpsb
push
add
sbb
push
ret
jbe
add
cmpsl
sub
push
or
pop
in
rorl
out
jb
std
sub
xor
lahf
dec
fnstcw
jae
gs
jmp
and
mov
insl
inc
mov
jecxz
in
inc
sbb
xchg
cmp
sbb
pop
inc
jmp
and
adc
pusha
into
fcmovne
mov
popa
int
dec
or
fdivrs
iret
push
adc
fadd
arpl
fcmovnbe
inc
fwait
aam
repnz
ss
mov
or
rorb
stc
sub
cmp
loop
stos
mov
outsb
push
scas
and
fwait
outsb
stos
inc
sbb
adc
mov
sbb
add
pop
leave
inc
mov
push
imulb
mov
sahf
add
mov
adc
addb
push
or
fisubrs
jmp
xchg
arpl
popa
mov
ljmp
decl
ficomps
mov
and
mov
pop
xchg
dec
mov
xchg
mov
and
stc
xor
dec
dec
adc
jb
icebp
mov
mov
call
xchg
je
pop
movsb
sub
mov
mov
add
movb
ja
and
mov
inc
fcomip
stc
mov
pop
out
cmp
roll
stc
ret
add
fwait
orb
push
imul
mov
mov
mov
mov
pop
stc
cwtl
push
cmp
mov
dec
ret
and
out
inc
sub
pop
mov
mov
xlat
outsb
mov
and
cltd
rcr
fistpl
push
dec
inc
xlat
lods
dec
gs
js
add
xor
xchg
jno
jne
scas
adc
lret
shlb
inc
xlat
jo
icebp
and
sbb
mov
stc
fwait
ds
xor
push
int3
mov
sbb
push
jns
xchg
cmp
dec
ret
jno
cmc
jnp
dec
or
ss
pusha
out
loope
cmp
data16
add
cmc
adc
xchg
jb
leave
loop
jge
and
jp
add
sbb
cmp
cmpl
ja
and
jg
pop
mov
iret
mov
inc
xchg
std
popa
cltd
test
nop
pop
shl
fsubrl
sbb
loop
cmp
xchg
test
rolb
popf
mov
adc
es
adc
adc
mov
test
in
jnp
aaa
push
cltd
adc
jae
and
lock
add
outsb
rolb
adc
out
in
add
ljmp
sub
mov
and
mov
lret
or
es
mov
outsb
insl
test
cmp
faddl
cmc
inc
out
pop
jmp
pushf
sub
or
insl
in
bound
shrb
lods
clc
nop
scas
in
loope
adc
cmp
mov
push
xchg
mov
jb
popa
sbb
dec
les
sahf
nop
dec
inc
rcr
cld
push
inc
jge
pop
add
lahf
sub
aad
jg
cmpb
sub
cmpl
pop
sahf
mov
push
outsl
subb
cwtl
and
pop
mov
icebp
cmp
or
xor
and
and
flds
inc
cld
sbb
xlat
imulb
sarl
xor
cmc
ja
jae
ret
xchg
sub
push
data16
lea
mov
out
pop
dec
dec
adc
sub
sub
out
mov
int
cmp
fsubrs
movsl
sahf
pop
mov
xlat
push
or
icebp
insb
add
ja
push
cmp
dec
and
nop
fstpl
jo
push
lret
mov
pop
mov
rorl
adcl
shrb
jmp
inc
and
cmp
sbb
sub
lahf
xor
pop
dec
test
nop
mulb
mov
adc
rolb
add
xchg
ret
outsb
int3
xchg
data16
push
inc
xchg
mov
jmp
sub
das
xor
clc
ds
pop
addr16
xchg
stc
mov
cld
or
in
jbe
inc
or
out
leave
jnp
mov
lcall
cld
inc
orb
scas
ficompl
into
stos
mov
mov
enter
in
aaa
mov
data16
iret
rcrl
out
push
mov
repnz
mov
pop
insl
dec
pop
or
add
outsl
cs
popf
and
adc
ret
mov
pushf
test
or
add
jl
jmp
jl
ret
xchg
outsb
adc
xor
jnp
adc
mov
push
jno
stos
inc
inc
jns
push
aas
jnp
sti
or
fdivrs
mov
push
or
inc
mov
push
pop
aam
adc
arpl
mov
stos
sbb
jo
out
aam
push
sarl
xor
ja
sub
xor
inc
and
sbb
bnd
mov
push
jge
push
mov
int
pop
sub
daa
jg
inc
sub
ficoml
gs
xchg
test
mov
test
sti
jg
cmpsl
or
mov
xchg
mov
mov
add
ret
pop
mov
jg
fs
mov
rolb
jno
sbb
or
aad
jp
push
pusha
jl
mov
cltd
sbb
mov
int3
add
nop
adc
mov
imul
scas
sti
pop
fmuls
ljmp
int
pop
push
sarl
xchg
test
mov
sbb
inc
pop
and
lret
loope
stos
adc
hlt
inc
outsl
push
mov
jo
jge
das
aaa
sbb
push
xchg
mov
mov
daa
xor
movsl
mov
sbb
cmpsl
xchg
fsubr
push
push
jns
cli
mov
ja
es
jae
out
test
dec
mov
int3
lret
xor
in
sub
ds
mov
dec
fmuls
inc
adc
adc
mov
inc
mov
fs
mov
loop
push
inc
dec
int
data16
mov
loop
mov
jnp
arpl
inc
mov
je
push
fnstsw
add
shll
or
mov
xchg
outsl
insl
push
outsb
sbb
xchg
xchg
inc
or
cmp
lcall
inc
jno
cmp
jl
addl
sti
dec
test
xchg
pop
ljmp
cmpsb
add
cmp
fcompl
adc
out
lods
repnz
fidivrs
jmp
add
loop
int
jg
and
lods
sub
and
jns
sti
pop
test
adc
fs
icebp
test
xchg
push
jecxz
mov
data16
test
aas
push
aam
sub
in
lds
mov
mov
push
push
inc
mov
in
stc
into
sub
and
test
sbb
icebp
inc
mov
and
or
sahf
ljmp
inc
sbb
add
push
and
sbb
cmp
cmpsl
sbb
xchg
loopne
add
repz
out
shll
imull
repz
sub
adc
pop
sub
cwtl
inc
icebp
mov
jmp
jg
sbb
dec
add
loope
aam
repz
popf
insb
rolb
mov
je
mov
sbb
leave
fdivr
das
mov
je
jae
mov
lods
sub
into
sub
pop
inc
call
or
movsl
mov
cltd
or
xchg
aas
push
imul
push
mov
cs
stos
adcb
cmpsb
ds
aam
sub
out
outsb
push
andb
dec
cld
add
cmc
adc
scas
xor
mov
dec
mov
jge
push
xchg
sub
add
sbb
lds
cmpl
cltd
enter
xor
pop
or
xchg
pop
adc
pop
xchg
out
fistl
shll
repz
inc
sahf
das
push
cmpsb
loop
push
adcl
and
repnz
cmpsl
jmp
sbb
push
xchg
negl
or
jb
fwait
jge
inc
sbb
pop
mov
pop
adc
mov
mov
jmp
and
cs
gs
pop
push
call
xor
push
mov
std
nop
pop
mov
mov
outsl
add
aaa
pop
fsubrs
sti
fwait
sub
enter
in
and
ljmp
in
sub
pop
sbb
mov
cmpsl
lods
std
and
cmp
frstor
arpl
lock
push
lods
clc
pop
sahf
adc
hlt
add
shl
loope
aam
push
pop
sbb
mov
stos
or
add
popa
loope
mov
fnstenv
jns
shl
mov
add
subl
adc
push
push
mov
mov
xchg
sbb
sub
mov
dec
orl
in
arpl
sub
jecxz
imul
and
aas
or
das
cwtl
fpatan
cmp
outsl
imul
lret
arpl
lods
push
mov
rorb
fcoms
pushf
jecxz
cmpsb
addr16
mov
std
repnz
mov
pop
add
cmp
mov
push
mov
movsb
jae
cmp
out
jge
sub
push
push
cld
outsl
lahf
add
and
loop
mov
mov
jno
dec
cli
shrb
lock
mov
mov
dec
add
and
ret
shrb
pop
fisubrl
ss
es
insl
loop
nop
mov
cli
and
adc
xchg
arpl
push
mov
cld
insb
and
sbb
cmp
push
out
push
repz
test
ret
fildll
fs
movhps
rorl
lods
inc
sbb
cmp
sbb
lods
pop
insb
jns
push
cltd
pop
shrb
and
jmp
xor
gs
mov
les
lds
inc
push
popa
cmc
in
sub
imul
add
cltd
and
jbe
dec
sub
insl
in
ffreep
push
inc
lahf
push
out
aaa
pop
adc
mov
test
es
mov
sub
lcall
add
jecxz
icebp
xchg
inc
sub
or
pop
push
mov
clc
jb
and
adc
cltd
sar
jne
or
mov
daa
leave
lds
mov
sub
jb
adc
cmc
sub
dec
mov
push
insb
mov
mov
daa
sbb
push
xchg
test
sub
jge
push
jo
aad
adc
negb
cmc
xor
test
pop
std
lods
cmp
cmp
ret
ret
es
repnz
dec
cmp
in
and
adc
xchg
push
popf
mov
call
cli
or
mov
pop
cmpsb
ret
and
jbe
outsb
push
xchg
mov
cs
add
cli
mov
fistpl
fstps
mov
imul
cli
inc
test
cmc
mov
rcll
ret
push
sbb
fmull
cltd
xor
lods
hlt
mov
inc
sub
add
je
test
dec
dec
mov
imul
in
xor
adc
or
dec
leave
cmc
and
push
xor
mov
sub
mov
test
aad
inc
rcr
fldenv
pusha
cmp
jge
repz
aaa
xor
push
mov
pop
push
pushf
xor
pop
lret
inc
cmp
sbb
mov
or
sub
imul
xchg
dec
repnz
sub
pop
inc
mov
add
cmpsb
pop
push
xor
hlt
data16
adc
ds
mov
jbe
xchg
mov
and
adc
cmp
xchg
lods
cmp
pmaxsw
jle
clc
inc
lods
cmpsl
sub
push
sahf
andl
inc
je
sbb
cld
loope
cmpl
icebp
mov
mov
sub
sub
stc
mov
mov
cs
fwait
popf
pop
loop
xorl
sub
cmpsb
fnstcw
add
sbb
daa
dec
or
inc
leave
jge
cmpsb
icebp
mov
jg
lret
xchg
js
inc
enter
xorl
adc
push
cld
inc
mov
sub
int3
cmp
lock
cmp
dec
bound
push
jecxz
dec
repz
push
das
pop
scas
dec
sbb
jnp
cmpsl
es
loope
cld
sar
gs
dec
das
inc
sbb
jge
and
fistpl
hlt
cmp
enter
mov
insl
inc
test
fwait
push
rcrb
jns
enter
cwtl
mov
jecxz
cmp
cwtl
daa
push
adc
fistpll
xor
push
xchg
test
jle
loopne
loope
les
mov
push
inc
sbb
mov
xlat
out
imul
xchg
mov
pop
xor
hlt
push
dec
mov
cmp
and
inc
mov
jmp
roll
dec
roll
or
into
cmpsb
dec
xor
loop
cmp
ja
bound
mov
orb
sub
fnstcw
fidivs
push
mov
call
bound
adc
in
jle
stc
inc
push
jg
mov
push
push
xor
jb
mov
cli
int
cmp
jmp
xchg
sub
inc
inc
cmp
mov
mov
loop
inc
adc
sub
std
push
dec
sub
mov
xchg
cmp
mov
movsb
cmp
enter
cld
adc
popf
in
pop
bound
or
jg
dec
xchg
sahf
xlat
sbb
jae
pop
test
and
cmp
jmp
sub
push
lret
jbe
jbe
jle
jge
jns
or
inc
push
js
ss
lock
nop
fs
jo
pop
ror
inc
dec
sbb
mov
fisttpl
call
mov
sahf
inc
xchg
jg
mov
and
mov
xchg
stos
pop
xchg
jb
xor
fwait
add
cmpl
stos
pop
jnp
dec
fcoml
adc
or
fsubs
sbb
mov
test
call
mov
arpl
dec
notl
mov
mov
fdivs
push
div
fld
xor
pop
add
mov
fisttpll
cld
lods
push
shrl
adcl
add
test
xchg
cmp
loopne
lret
or
fadd
mov
push
das
out
out
push
adc
and
inc
pushf
cmc
ja
jb
sbb
xchg
cmp
aaa
roll
data16
and
lods
popf
cs
inc
push
pusha
jle
das
ljmp
cmp
jg
pop
or
push
lock
jmp
lods
inc
aas
out
lock
push
inc
loop
pusha
sbb
push
mov
js
xchg
test
mov
push
jne
testl
fimuls
or
adc
inc
subb
jle
push
fdivrl
or
movsb
out
push
mov
dec
test
negl
xchg
out
je
mov
mov
adc
adc
insb
push
lds
ljmp
imul
cmp
xor
rolb
xchg
dec
sbb
xchg
sbb
push
inc
and
sub
movsb
es
and
or
jge
shlb
cli
fs
std
mov
push
sar
xor
in
ss
sub
mov
std
cmpl
jb
aam
mov
cmp
bound
cwtl
sub
lock
inc
arpl
dec
or
adc
pusha
jb
jmp
out
sub
pop
and
cmp
jne
push
scas
hlt
xor
fnsave
inc
fs
andl
add
and
popa
out
push
adc
jb
andb
mov
fdivrs
mov
gs
faddl
mov
mov
sti
outsl
roll
adc
sub
fildll
jo
fistl
in
cld
movsb
mov
ja
pop
push
cmp
push
ss
inc
aad
cwtl
add
xchg
lret
and
mov
push
cmpsl
ljmp
pop
fbstp
jno
or
roll
sub
pop
or
cltd
into
cmp
fmull
test
cli
or
subb
jl
adc
mov
xor
add
mov
int3
cmpsl
lcall
das
enter
psraw
jl
or
and
dec
inc
push
sbb
xchg
xchg
mov
pop
push
cli
push
mov
aam
push
or
or
out
mov
pcmpeqb
add
or
sbbb
push
mov
dec
insb
or
mov
iret
ljmp
stos
fmulp
test
rol
rol
mov
jae
cli
out
jb
and
xchg
cmc
jno
iret
scas
in
dec
jle
sub
xchg
sbb
push
sbb
fstps
xlat
popa
dec
dec
fbstp
mov
dec
jae
cli
and
int
aad
jle
fstpt
push
mov
fucomip
add
movsl
in
je
xchg
jp
mov
imul
repnz
call
push
dec
sub
cld
sub
cmp
fidivl
inc
lcall
push
cs
add
dec
fstps
nop
lods
dec
mov
mov
outsb
arpl
leave
mov
in
fmuls
mov
mov
mov
pushf
lds
addr16
adc
insl
inc
test
cmp
lea
stc
fimuls
add
test
xchg
imul
cs
jns
xorl
xlat
scas
sbb
fwait
rcrb
cld
jmp
add
mov
leave
and
sbb
lods
or
mov
frstor
lds
stc
dec
jge
add
out
dec
jb
ficompl
punpckhdq
lock
movsb
enter
les
xchg
adc
lret
xor
dec
push
dec
pop
mov
addr16
jno
mov
xor
mov
sahf
pop
push
lock
jbe
inc
sub
xor
jmp
out
mov
aad
scas
pop
fcmovne
int
push
push
in
faddp
sahf
fdivs
gs
jns
scas
cmp
in
ret
push
popf
xchg
mov
shrl
xor
jmp
adc
push
out
imul
cwtl
or
imul
cwtl
sbb
sub
and
sub
pushf
scas
js
pushf
mov
xchg
cmp
jae
pop
repnz
rclb
mov
call
cmpb
jns
shrl
lods
jge
pop
sbb
btr
xchg
mov
das
mov
mov
jno
mov
hlt
and
xchg
xor
jne
adc
nop
pop
mov
dec
fimull
push
pop
jmp
jns
mov
les
repnz
add
cmc
hlt
add
jmp
add
push
jnp
sub
jmp
ds
sub
mov
sahf
xchg
insb
or
idivl
inc
mov
adc
push
mov
mov
add
dec
fsubp
pop
mov
into
xchg
repz
and
add
push
add
pop
movsb
dec
xchg
repnz
add
jge
xchg
mov
xchg
add
adc
test
add
clc
sub
outsb
and
or
aam
mov
or
movsb
dec
imul
pop
in
inc
xorb
les
and
insb
in
out
mov
pusha
lret
xor
inc
sub
pusha
adc
jbe
jae
into
fisttpll
cmp
mov
subl
insl
adc
and
and
xchg
dec
add
and
into
pop
pop
mov
xchg
mov
cmpl
pop
sbb
pusha
pop
xchg
pop
cli
stc
xchg
out
adcb
pop
push
push
push
sbb
cwtl
and
out
imul
sbb
fisubs
bound
jns
mov
or
int3
imul
jle
or
mov
and
cmp
test
xor
cmpsl
out
lret
daa
js
lret
dec
xchg
jl
xor
dec
jno
dec
mov
sub
adc
mov
hlt
sub
notb
xchg
fwait
inc
aas
cmpl
or
xchg
je
jecxz
xchg
mov
jbe
dec
ret
fsubrs
arpl
add
or
jle
dec
xor
lea
cmp
xchg
rorb
jnp
push
stos
add
in
push
add
fxch
cwtl
add
subb
leave
xor
add
jle
out
mov
jp
arpl
ja
cltd
sub
or
dec
pop
mov
cld
or
scas
cltd
imul
mov
sti
sbb
rcr
sbb
cmp
in
in
push
xor
xchg
and
cld
sti
dec
sahf
les
xor
cwtl
imul
or
in
push
jmp
inc
sbbb
shl
pop
mov
test
bound
addr16
in
mov
dec
push
aaa
and
pop
movsl
inc
in
mov
and
pop
addb
ja
js
sti
inc
push
jg
push
dec
int
test
scas
aam
cmp
popl
xor
mov
rclb
sbb
push
ds
mov
mov
rorb
or
out
push
in
mov
push
test
jp
sub
sahf
dec
xchg
push
repnz
scas
mov
sbb
cmp
dec
xchg
mov
fmull
jnp
xlat
xchg
mov
jecxz
lods
xchg
push
mov
push
xor
or
ficoml
bound
sbb
or
pop
mov
insl
jbe
arpl
into
sahf
popf
mov
jae
jbe
xlat
ljmp
mov
cmp
pop
popa
mov
adc
test
out
insb
inc
in
dec
pop
mov
dec
lahf
push
inc
iret
rorb
push
xor
movntps
loopne,pt
mov
add
lods
mov
jmp
xchg
pop
sub
push
xchg
mov
inc
lods
xchg
jl
mov
imul
fbstp
or
hlt
push
sti
daa
dec
cltd
or
jne
or
subl
pop
xor
pop
and
xchg
out
sbb
nop
inc
leave
nop
pop
xor
dec
cmp
cmp
mov
push
inc
sub
lods
inc
adc
enter
fmull
divl
movsl
mov
fistpll
jge
out
in
mov
dec
cmp
sbb
jmp
imul
inc
xor
inc
pushl
in
fld
mov
stos
and
imul
mov
xor
je
jge
cmpsl
inc
inc
std
xchg
or
jecxz
insb
stc
jns
sub
mov
mov
push
ret
sub
sbb
xor
cld
das
jo
add
fs
jbe
xchg
aas
int
add
mov
fildl
pop
rcrl
jl
sub
dec
cmp
mov
mov
arpl
push
xchg
sbb
or
inc
sbb
ds
mov
add
and
rclb
mov
jmp
add
cltd
imul
and
or
andb
adc
bnd
lods
pop
add
cmpsl
cli
add
fcoms
outsb
and
imulb
sbb
xor
call
mov
aas
inc
or
mov
je
aaa
mov
shlb
aaa
pop
xchg
fwait
test
mov
loop
pop
leave
and
add
int
insl
adc
sbb
add
sub
xor
ss
popa
jg
xchg
lea
sub
dec
and
xchg
sub
sbb
ljmp
popf
mov
out
or
popf
inc
add
notl
out
cmp
pop
push
into
fwait
cmp
mov
mov
xchg
jns
sbb
movsl
jmp
xor
imull
cli
pop
mov
lret
push
mov
repz
mov
int3
pushf
or
xchg
sub
cmp
aaa
jp
mov
call
inc
pushf
sti
punpckhbw
sbb
bound
fcmovnbe
sbb
push
clc
dec
mov
lds
inc
pop
inc
jae
pop
mov
mov
mov
xchg
ljmp
pop
jmp
fisubs
push
dec
rclb
dec
jmp
movsb
daa
jns
xor
ja
jne
mov
mov
sbb
imul
pusha
fnstsw
fst
out
outsl
shlb
movsb
out
ljmp
mov
lods
xchg
pusha
mov
dec
mov
stos
mov
int3
xor
push
jno
test
adc
mov
cld
pop
inc
filds
add
mov
jge,pt
sbb
or
mov
xchg
pop
dec
pop
adc
mov
push
jb
jns
mov
add
adc
call
xor
mov
in
rorb
xor
cwtl
and
adc
mov
jp
call
popf
ljmp
and
shrl
arpl
hlt
and
enter
and
add
hlt
or
out
repz
gs
mov
pop
mov
push
adc
shlb
mov
add
out
push
and
xchg
sub
inc
xchg
aam
jmp
jne
pop
pop
mov
mov
cmp
mov
add
inc
test
decb
sub
add
scas
popa
jl
or
test
sub
fbstp
pop
ds
xchg
mov
dec
es
jno
fisubrl
lea
jle
mov
add
js
lds
hlt
and
dec
push
xchg
imul
rcl
clc
cmc
jp
sbb
mov
je
jns
and
xor
imul
mov
out
je
cltd
fbld
push
xchg
sub
add
ret
push
sbb
loop
xchg
test
idivb
insl
popfw
jnp
xchg
out
lret
rcl
mov
out
jmp
mov
xchg
adc
and
and
lods
fdivs
dec
add
mov
sbb
add
mov
fstpl
arpl
jg
xchg
es
mov
loop
into
xchg
sub
fcmovnbe
xor
outsb
loope
adc
pushw
push
sbb
jbe
and
cmpsb
scas
and
add
mov
push
roll
movsl
add
shll
xor
lcall
fs
in
sub
in
je
pop
mov
testl
test
ss
into
jmp
out
scas
stc
daa
dec
mov
mov
xchg
aas
inc
std
pop
push
jbe
jb,pn
and
ljmp
sub
fiaddl
data16
cli
movsl
inc
mov
scas
pop
lock
pop
mov
mov
imul
mov
rolb
repz
inc
popa
fistps
gs
push
into
sbb
loope
movsb
out
pop
mull
cwtl
add
or
jb
sub
jl
ja
pushf
push
xor
xchg
mov
mov
popa
ret
or
cli
jno
out
mov
xchg
shll
rcrb
rclb
mov
and
test
loopne
pop
cld
imul
and
mov
ret
xor
xchg
jbe
decb
push
dec
mov
and
rol
mov
xchg
dec
ds
jge
sbb
ret
fsubrl
repnz
mov
int
sbb
push
not
imul
add
mov
xchg
mov
inc
js
pop
cmc
imul
repnz
out
mov
sbb
sub
shlb
xchg
inc
imul
loopne
sahf
sub
gs
push
inc
inc
push
hlt
bound
imul
fdivr
add
insb
loope
and
mov
orl
adc
cmpsl
test
jnp
icebp
and
shlb
and
pop
popa
adc
loopne
js
cmc
jmp
xchg
fsubs
popa
add
mov
mov
shl
mov
aam
mov
push
xor
dec
push
xor
push
mov
dec
movsb
ret
mov
popa
stc
lahf
lea
aad
lcall
push
xchg
xchg
mov
pusha
imul
dec
js
xchg
inc
add
xchg
add
pop
and
fstpt
fisttpll
jb
in
push
in
add
inc
ficomps
test
int
inc
inc
shll
test
gs
jmp
jae
popf
sbb
or
imul
pop
fidivl
imul
push
and
mov
add
xchg
and
and
jnp
adc
das
fisttpll
fcomps
jo
push
push
aas
pop
xor
fcoms
xchg
cmpb
outsl
mov
xchg
cmp
and
mov
call
fstpl
and
xchg
xchg
pop
lcall
les
sbb
cli
gs
lea
cmp
add
cmp
testb
divl
inc
cld
xchg
fwait
and
sbb
loop
repnz
xchg
fcmovnu
fidivrl
lahf
xchg
insl
and
jae
fdivr
sbb
loop
mov
mov
stc
jnp
int3
jl
cmpl
add
sbb
inc
sub
ror
mov
iret
daa
adcb
add
stos
mov
cmp
push
cmp
addl
cwtl
xchg
xchg
mov
call
dec
sbb
incb
aas
aaa
loope
dec
fwait
jae
mov
push
fwait
pop
orl
add
xchg
movsb
lea
jle
xorb
jns
mov
pop
xor
xchg
sbb
cmp
or
mov
mov
cs
adc
xchg
xchg
inc
mov
cmp
or
ret
and
fisubl
sub
les
ret
iret
insl
adc
iret
mov
cmc
mov
mov
xor
rcl
insl
int
or
push
pop
add
into
jno
jo
aas
adc
dec
mov
bound
aad
fldt
or
pop
inc
inc
mov
xor
add
cmpsb
jg
pop
push
dec
jbe
inc
loope
bound
fcoms
sar
mov
stos
and
loop
fwait
cltd
or
int
aaa
ret
and
sbb
add
std
dec
sub
mov
pop
test
out
js
je
in
add
flds
sbb
movsl
push
ret
in
cltd
stc
sbb
notb
int
xor
xor
dec
sub
int
ret
mov
add
fildll
push
dec
cmp
cmp
scas
push
xchg
loope
pand
mov
dec
pop
les
stos
pop
sub
testl
xchg
fcmovnb
xchg
cmpsl
scas
popa
dec
inc
dec
popf
les
mov
add
push
adc
into
stos
movsl
nop
inc
stos
inc
sti
addb
addr16
sub
aad
imul
mov
stos
ss
lcall
fisttps
sub
dec
add
mov
je
push
cmp
and
repnz
xchg
lds
pushf
fisttpl
cmp
fldcw
push
mov
mov
sbb
jge
mov
push
sub
jne
dec
repnz
and
pop
and
xor
sahf
je
icebp
lea
push
cld
mov
in
ss
mov
sbb
into
imul
or
jae
lock
stos
ficompl
cwtl
dec
int3
icebp
shlb
push
mov
fsubl
arpl
mov
xchg
inc
fs
mov
jmp
add
and
mov
mov
mov
inc
pop
fmull
lea
imul
cmp
in
flds
into
mov
adc
mov
mov
jl
mov
scas
xor
sbb
es
push
or
movb
adc
imul
and
loop
sub
xor
enter
mov
sbb
dec
es
dec
outsl
xor
stc
or
test
into
shrl
insb
inc
push
push
out
lret
aaa
int
sub
inc
ss
add
mov
lds
sub
ss
roll
in
xchg
aas
adc
shll
stos
cwtl
lret
jecxz
mov
cmp
push
insb
push
out
push
stc
ja
cmp
jbe
fnstcw
pusha
int3
or
sbb
pop
mov
insb
lcall
pop
cmp
push
lds
testl
adc
fwait
mov
stc
in
ret
mov
adc
sub
adc
pop
cs
sbbb
aam
popa
mov
int3
dec
adc
or
daa
mov
xchg
xor
mov
dec
sbb
push
gs
fwait
lret
aad
mulb
xchg
mov
pop
lods
cld
insb
int3
lock
lea
fldenv
add
push
adc
jmp
and
xor
popa
fstp
js
mov
sub
mov
lods
jnp
rolb
push
xchg
mov
sbb
jge
mov
das
xor
xor
mov
xchg
mov
jp
add
cmp
dec
mov
jge
jge
imul
sub
xchg
shll
rcl
push
adcl
enter
out
das
dec
sbb
scas
and
push
ds
aaa
xor
inc
push
sbb
add
mov
imull
es
pop
faddl
insl
jecxz
xchg
popa
adc
dec
enter
cmp
jmp
mov
repz
push
or
mov
jp
hlt
mov
xchg
add
inc
mov
pop
andb
inc
scas
cltd
lahf
cld
lods
jae
cmc
repz
insb
mov
mov
xor
pop
loop
jl
cmp
rorb
inc
outsb
xchg
lds
xchg
jno
lahf
jae
or
mov
push
push
lea
testl
or
cmp
lret
das
dec
sbb
xor
dec
and
and
fdivrp
push
push
pop
mov
movsb
fsubrl
roll
test
loop
shrb
xchg
sbb
and
sub
push
xlat
push
movsl
repz
or
outsb
pop
xlat
push
inc
sub
fidivs
cli
insb
loopne
add
stc
push
gs
jns
sbb
das
cmp
ret
mov
imul
lea
xchg
fidivl
call
test
jno
fdiv
xchg
into
push
sbb
je
pop
out
int3
fisubs
cltd
lret
sahf
arpl
lock
test
mov
jne
dec
mov
mov
aad
cld
push
push
xor
stc
movsb
ds
cltd
mov
fcmovu
fisubrs
xor
jne
test
sti
mov
xchg
cltd
xchg
loope
adcl
jge
mov
popf
sbb
ret
push
cmp
outsb
mov
mov
sub
ss
jo
es
inc
mov
mull
and
mov
sub
adc
jp
mov
pop
xchg
lock
sarb
repnz
lret
lret
leave
bound
rorl
cld
sbb
add
pushw
cmp
ja
xor
push
inc
cltd
mov
lock
int3
sub
push
or
ret
ja
cmp
inc
ds
sbb
js,pn
jbe
int3
mov
enter
mov
out
repnz
dec
movsl
sbb
das
cmp
movsl
pusha
divb
push
jp
xchg
pop
fsubs
adc
jb
lahf
xor
push
repz
enter
mov
xchg
test
sahf
js
lea
sbb
lahf
xchg
or
dec
or
mov
loop
sar
cmovnp
aaa
stos
mov
xor
pop
jnp
xchg
sub
stos
jae
fwait
add
rorl
xorl
pop
push
pop
mov
int3
push
mov
jl
movsb
int
scas
loope
dec
sbb
xor
sbb
jecxz
mov
cmp
push
cmc
fldcw
sub
sub
push
cmp
cli
or
shrl
int3
sub
mov
pop
jb
loop
nop
dec
bound
inc
lock
jns
pop
into
jo
mov
add
xor
mov
adc
mov
aaa
push
mov
rcrb
loop
dec
jl
dec
cs
ss
xchg
xlat
into
out
jbe
lret
fcomps
call
mov
in
adc
sti
lds
cwtl
mov
sti
ljmp
jle
xor
aas
cmp
mov
xchg
scas
imul
push
and
mov
aas
aad
pop
pop
jne
pushf
rcrb
xor
jns
mov
in
out
sbb
lcall
sub
les
hlt
xchg
cmp
dec
test
mov
daa
or
lret
divl
repz
or
jl
cs
fidivrs
mov
pop
scas
cmp
sbb
mov
int3
xor
sub
cmp
adc
dec
andl
das
push
xchg
in
stc
sub
orb
ljmp
sbb
jl
or
push
stos
lea
add
inc
mov
mov
fldenv
mov
nop
xchg
fwait
cmp
cmpsb
rorl
jl
xor
add
add
inc
add
insb
pop
ja
int
lock
imul
jo
push
lods
lods
pop
js
pop
mov
mov
sub
mov
push
xor
sbb
mov
cmp
pop
jo
testb
pop
es
mov
jns
sbb
loop
pop
insl
addr16
in
or
jle
dec
mov
into
inc
inc
clc
cmp
ja
dec
mov
insb
sub
aad
popa
int3
repnz
fcomps
outsl
pop
in
sbb
cli
pop
shl
and
sub
test
out
dec
clc
lock
ljmp
inc
xor
xor
xor
gs
mov
inc
aaa
pop
shlb
mov
inc
sbb
stos
gs
in
sub
in
addl
scas
or
pushf
loope
cs
or
inc
add
ss
clc
push
mov
sahf
push
daa
sbb
push
outsl
fidivs
lea
adc
sub
ret
int
sbb
push
aam
mov
and
and
insl
ret
push
imul
xor
dec
xchg
jge
jge
iret
pop
dec
mov
notb
or
push
adc
repnz
push
es
bound
loop
lods
test
gs
mov
jnp
dec
roll
loopne
xor
xor
cmp
out
xchg
dec
loopne
repnz
cs
addl
dec
and
add
mov
into
adc
jae
clc
out
sbb
mov
sub
ja
loope
xor
rcl
xorl
and
mov
fisubl
cmp
lret
inc
cmpsl
movsl
insb
inc
mov
sarb
pop
cli
pop
out
int3
sub
pusha
lock
push
dec
add
ret
inc
pop
mov
cmp
sbb
jno
push
aas
inc
or
adc
cmp
fwait
test
push
sahf
xchg
rclb
mov
cltd
sti
pop
xlat
or
jo
clc
mov
push
outsb
dec
xor
bound
cmpb
outsl
inc
outsb
mov
mov
push
cmpsb
and
mov
lret
jo
pushf
and
jbe
inc
notl
shll
inc
nop
sarb
adc
and
add
daa
mov
inc
pusha
jb
stos
mov
inc
push
and
in
in
inc
mov
int3
mov
jne
dec
bound
fdivrl
call
mov
movsb
adc
call
sub
imul
repz
enter
das
or
std
lret
subb
das
adc
orl
jl
add
out
aad
scas
dec
pop
les
add
pop
stos
adc
je
out
bound
bound
lods
sbb
cmpsb
incl
shll
ja
repz
mov
dec
leave
mov
nop
mov
inc
ret
pop
addr16
outsl
cmp
dec
sarb
lock
dec
mov
les
xchg
rcr
pop
scas
dec
and
insl
scas
subl
in
and
ror
mov
in
fldl
jno
and
cmc
lods
sti
pop
popa
shlb
test
mov
mov
aad
mov
test
fidivrs
inc
sahf
sub
dec
and
cmp
repnz
push
lcall
jmp
loopne
mov
in
pushf
mov
and
mov
mov
aam
outsl
enter
sbb
add
inc
push
in
add
pop
jnp
lds
scas
and
sub
sbb
xlat
xchg
fists
ret
cmp
jnp
loopne
and
cmpsb
mov
mov
and
add
sbbb
das
adc
sbb
das
fidivrl
or
push
sbb
das
addl
hlt
out
xlat
les
mov
outsl
cld
mov
lock
fistpl
or
pop
fs
icebp
mov
shlb
add
fdivs
das
cltd
push
push
push
mov
arpl
test
cmc
xchg
sub
jg
cmc
lods
or
xchg
cs
into
xchg
inc
mov
mov
sub
wrmsr
mov
or
mov
stos
scas
add
rolb
out
shl
popf
jge
xorl
jp
lret
aad
sarb
popf
xor
aas
push
dec
adc
xchg
aaa
jns
shll
push
fcoms
jg
push
mov
outsb
fstps
sbb
mov
dec
ss
cwtl
or
aas
dec
inc
scas
rolb
mov
sub
lds
sbb
shll
les
jg
test
ljmp
repz
arpl
mov
adc
lret
lds
cmpsb
or
sub
scas
int
and
sub
dec
xlat
mov
mov
push
mov
sbb
clc
sub
jge
add
mov
mov
lret
mov
xchg
insl
inc
int3
and
pop
cmp
inc
or
xchg
pop
sbb
mov
or
xor
pop
movsl
addl
loopne
popa
out
popa
jns
sub
adc
iret
mov
and
sub
inc
add
js
fnstsw
jmp
lods
jnp
mov
and
jg
xchg
lahf
movb
int
mov
and
stos
into
and
lock
ss
mov
movsb
push
aaa
in
scas
shr
into
out
push
add
cltd
leave
test
lds
sbb
adc
or
ljmp
into
jne
loopne
fwait
adc
js
mov
mov
pop
outsb
inc
outsb
insb
jl
sti
sbb
add
sbb
negb
jns
dec
dec
dec
sbb
ljmp
pop
imul
mov
mov
mov
fstps
out
aam
dec
add
testb
cmp
dec
movsl
inc
daa
jbe
gs
mov
xchg
cwtl
cmp
out
pop
roll
mov
std
aaa
movsb
push
inc
outsl
cs
or
outsl
rclb
shrl
mov
or
inc
fcoml
adc
pusha
cmp
push
cmp
addl
sti
mov
mull
or
xchg
or
xor
dec
and
push
lahf
inc
mov
lahf
fnstenv
cli
shll
push
jns
mov
aas
mov
jae
scas
xchg
xchg
xchg
outsb
data16
add
xor
scas
mov
xchg
add
xchg
rolb
clc
mov
ljmp
cmc
mov
jge
pop
cmp
mov
xor
pop
sub
pop
loop
mov
xchg
mov
popa
scas
test
addr16
push
and
xor
xor
push
dec
mov
mov
sub
cwtl
push
xor
dec
adc
sub
adc
pop
repz
mov
push
je
inc
mov
out
scas
mov
xchg
rorl
sbb
lock
cmc
pusha
mov
lret
pop
ret
mov
and
sahf
ret
outsl
mov
pop
cmp
insl
into
popf
add
jge
loopne
js
sub
push
lods
aad
jge
lock
outsb
mov
xor
jl
add
into
jae
nop
pop
push
cwtl
push
lods
mov
mov
repnz
aas
jbe
adc
movsl
push
shlb
cltd
jae
sahf
movsb
cmp
jno
xchg
sub
addb
insb
sub
push
out
xorl
cwtl
sbb
xor
mov
ljmp
xor
jae
xlat
lods
add
cmp
mov
xorb
je
ja
pusha
lds
int3
jg
mov
push
or
dec
mov
call
lahf
in
mov
ss
xor
data16
dec
push
aam
orb
mov
daa
xchg
insb
or
mov
jae
rorb
mov
cli
or
je
or
sub
inc
dec
xor
and
aam
lcall
push
adcb
xchg
popa
jmp
sbb
mov
pop
inc
stc
add
sub
fiadds
in
xchg
pop
out
fisubrl
rcll
imull
in
push
inc
push
inc
and
dec
sbb
jo
lea
jmp
clc
dec
outsb
cs
outsl
movsl
mov
push
in
sarb
sub
cmp
fcmovu
push
rcr
jno
cmp
insb
lods
jb
push
xchg
mov
lret
fnstsw
mov
sti
scas
ffreep
iret
cwtl
and
inc
ss
or
fnstenv
icebp
pop
ja
lahf
jno
xor
sbb
insl
mov
std
cmp
mov
outsb
dec
push
inc
dec
int3
outsb
xor
loopne
and
sub
jnp
lds
sti
sti
push
mov
add
xchg
js
or
mov
inc
orb
loope
cltd
cmp
mov
mov
dec
push
lods
inc
push
cmpb
in
inc
pop
out
xchg
xchg
insl
out
arpl
jns
mov
mov
xchg
cli
adc
out
sahf
pop
mov
add
dec
addb
shl
and
mov
push
xchg
push
je
shr
add
pop
in
jae
and
xlat
in
dec
xchg
leave
jae
xor
cmp
inc
xchg
jnp
iret
push
divb
pop
sbb
fstpl
loopne
adc
or
cmp
lds
sahf
negl
sti
or
stos
outsb
mov
out
jp
pop
xor
nop
push
sub
add
test
push
mov
push
inc
adc
roll
nop
cmp
jle
subb
setle
mov
adc
inc
enter
cltd
xor
push
es
dec
dec
xor
test
into
out
cltd
jmp
ljmp
stc
cmp
dec
and
test
js
scas
in
mov
es
mov
js
call
dec
jp
stos
loopne
cmpsl
mov
xchg
mov
ljmp
cli
ret
xor
xor
cmp
add
add
fwait
cmpsb
dec
test
dec
daa
scas
sub
fistps
mov
jb
mov
orl
das
fbstp
bound
out
xor
jl
nop
pushf
or
add
jne
sub
and
movsl
sub
in
sbb
xchg
adc
xchg
or
addr16
ds
sub
push
jmp
lods
pushf
sarl
or
and
or
xchg
lds
decl
nop
gs
inc
rcll
lret
jge
sub
sbb
adc
mov
mov
stos
mov
adc
pop
test
mul
xchg
push
pushf
sahf
and
mov
into
loop
enter
jne
or
cwtl
xchg
out
mov
lret
fldl
dec
insb
jo
or
andb
shlb
mov
mov
push
fs
fld
jmp
or
xorl
adc
scas
mov
jb
popf
popa
out
mov
scas
pop
mov
jecxz
ja
repnz
ret
cmpsb
sub
in
xchg
in
xchg
jle
add
lds
addl
sbb
lret
je
push
xorl
shrl
insb
adc
xchg
and
xor
push
ljmp
outsb
out
dec
imull
mov
cmp
adc
out
lock
loope
mov
aas
pop
push
dec
movsb
cs
movsl
and
cld
cmpsb
dec
ja
scas
push
sbb
notb
jbe
mov
sbb
imul
out
mov
shlb
dec
dec
je
push
xor
out
fsubs
fucomp
or
push
loop
inc
jnp
stc
sbb
enter
in
ret
pcmpeqb
push
xor
sbb
mov
push
mov
aas
aaa
xlat
es
sbbl
mov
ficompl
shl
jb
jmp
scas
out
mov
sub
jg
cs
lods
pop
stos
pushf
mov
pushf
cmp
and
xchg
inc
jle
scas
fisttpll
scas
mov
pop
cltd
mov
leave
jns
dec
call
pop
nop
jb
sub
adc
jecxz
jb
fwait
movsb
lahf
and
pop
cli
jmp
imul
mov
sbb
pop
mov
push
mov
ss
fisubl
mov
cmp
data16
lahf
lret
sub
js
and
iret
inc
mov
cmpsb
push
into
ret
jns,pt
or
add
imul
mov
jnp
pop
in
in
sbb
mov
sub
push
xchg
aas
inc
out
adc
lret
fwait
add
inc
call
les
aad
xor
rorb
xorb
or
mov
or
mov
shlb
xchg
mov
dec
dec
inc
cmpsw
jge
loop
es
rcl
xor
mov
sahf
lods
mov
add
int3
out
leave
pop
dec
jp
push
cmp
mov
push
mov
jne
cltd
into
mov
fsub
cld
dec
adc
pop
fdivs
push
das
subl
push
push
sub
cmp
insl
jle
hlt
ss
lret
ret
fisubl
loop
adc
sub
clc
cli
fcoms
sahf
les
in
into
push
notb
insb
sub
xchg
outsb
mov
leave
mov
aas
and
ret
icebp
sarl
out
adc
call
push
test
mov
test
mov
xchg
jnp
fwait
mov
xor
aam
push
cmp
in
and
imul
jp
mov
adc
sbb
bswap
test
lret
add
jb
ret
call
ja
leave
jecxz
scas
or
std
pop
loop
les
xchg
es
orl
int3
sub
nop
sti
mov
sbb
jg
cmpsb
dec
xchg
movsb
cmp
inc
adc
mov
add
xor
lods
sbb
repz
xor
dec
jb
push
sysenter
or
je
sbb
push
cmpsl
pop
inc
jbe
arpl
repz
cwtl
lods
imul
into
push
xchg
sti
cmp
std
fsubs
imul
clc
shl
sub
aas
pop
jp
xor
push
jo
es
repnz
sbb
mov
inc
sbbl
cs
adc
or
push
xchg
mov
push
jo
test
je
jb
scas
jmp
dec
mov
xlat
fwait
in
or
jg
ret
cltd
loope
mov
adc
dec
cld
push
fimull
clc
mov
test
lahf
inc
and
ret
pop
loope
in
mov
jmp
or
lods
pop
or
mov
jo
jp
icebp
lock
pop
jg
hlt
sub
mov
jns
icebp
call
inc
sbb
aaa
stos
stos
or
int
inc
cmp
in
dec
lea
xchg
ljmp
les
push
sbb
adcb
or
arpl
xchg
enter
push
movsb
decl
xlat
daa
fsub
xchg
or
cmp
data16
stc
jno
jl
lods
xor
call
jmp
dec
jg
fisttpll
subb
push
imul
cmp
test
push
xchg
pop
adc
lahf
data16
add
setl
add
mov
mov
add
pop
cmp
add
inc
adc
sub
inc
enter
mov
imul
sub
xor
jo
iret
cmp
cs
sbb
xchg
into
mov
sbb
fisttpll
jge
sbb
jo
movsb
imul
dec
xchg
sub
xor
divl
adc
stos
sbb
xor
sbb
xor
bsr
xchg
jbe
or
xchg
insl
test
dec
xchg
loope
and
or
jecxz
ja
lods
push
dec
push
stos
int3
push
cs
push
and
fstpt
cmp
decb
ret
sbb
popa
int3
test
stc
test
daa
xor
dec
jecxz
push
adc
cmp
mov
orl
push
xchg
ret
fisubs
and
inc
fadd
outsb
push
repz
dec
inc
add
sub
mov
jae
stos
setg
and
mov
or
and
pop
clc
repz
cmp
nop
out
jns
lret
push
clc
cs
adc
in
scas
cmp
addb
shll
icebp
ja
mov
inc
aaa
stos
adc
ds
mov
lea
or
pop
icebp
test
imul
dec
add
dec
aam
add
mov
jg
mov
mov
adc
cmc
sbb
fwait
bound
push
fstl
xor
and
jge
pop
lock
lahf
mov
pusha
es
loope
ret
jle
popa
lea
mov
mov
or
pop
mov
fbstp
icebp
dec
and
std
cltd
inc
out
add
adc
and
adc
cmp
xor
or
movsl
xor
xor
cmp
push
movsl
xchg
cmp
pusha
inc
cs
mov
pop
loop
aas
lock
aad
adc
hlt
jle
jb
cwtl
sbb
idiv
rorl
rcrb
mov
cmp
push
or
out
pop
je
scas
sbb
mov
xor
enter
adc
sbb
jg
in
xor
fs
movsl
js
aaa
sbb
xor
test
imulb
test
push
xor
inc
das
stos
iret
sbb
xchg
mov
lock
pop
inc
push
cmp
jp
jno
add
xor
nop
jl
or
loop
inc
mov
cmp
dec
insb
inc
or
scas
cs
pushl
aas
dec
xor
movsb
push
mov
pop
pop
out
mov
insb
sbb
jge
mov
in
pop
xchg
stos
cmp
negl
stos
jmp
call
sar
dec
mov
add
mov
imul
dec
movsl
mov
cs
out
jg
jmp
in
fcoms
cmp
loop
sub
and
or
mov
mov
ret
sub
addr16
movsb
clc
push
aas
xor
dec
xor
inc
daa
cmp
inc
add
ja
repz
enter
ljmp
pop
push
loope
addr16
sbb
mov
jb
andl
cmp
push
adcb
xchg
addl
push
dec
lret
cmc
repz
pop
push
les
cmp
ror
or
add
jmp
daa
jo
jp
mov
je
in
jns
iret
jo
aad
aad
ret
push
lock
mov
sub
shl
into
sub
sbb
sub
adc
mov
int
call
adc
and
dec
sub
imul
andl
pop
incl
sub
push
mov
loope
jmp
lret
loope
daa
lcall
fists
in
mov
jns
xchg
inc
mov
sbb
mov
dec
fwait
mov
sbb
ret
fsubr
cltd
repnz
push
les
mov
jnp
cld
loop
stc
loopne
cmp
test
push
mov
adc
incl
jae
aaa
jle
ljmp
sti
into
mov
jnp
pop
cltd
and
lret
xchg
negl
fsubrs
inc
imulb
xor
data16
mov
mov
popf
out
gs
xchg
push
sub
xor
inc
sub
pop
mov
and
scas
leave
mov
or
push
roll
push
lcall
sbb
mov
pop
jbe
mov
ret
or
cmpsb
jno
ljmp
and
lret
xor
mov
push
ss
pop
int3
mov
or
imul
sbb
jbe
mov
cmp
mov
or
les
fsubs
sbb
stc
push
mov
fdiv
in
xor
ret
push
test
pop
dec
outsb
cli
sub
mov
addr16
lea
std
loope
and
ds
in
loop
lock
lret
shl
pop
adc
test
outsb
pop
jns
push
pop
adc
outsl
and
and
in
imul
mov
stos
pop
lahf
pushf
pop
push
cmpsl
insb
in
out
test
hlt
outsl
lcall
ret
push
xchg
and
loopne
jnp
xchg
les
enter
sbb
add
add
inc
shlb
push
xchg
mov
int3
dec
and
xchg
popw
adcb
cwtl
das
not
xchg
mov
cmp
int
into
or
mov
lods
pop
lahf
lea
call
sbb
jnp
inc
outsl
jecxz
call
push
or
sbb
add
mov
jno
in
xor
jns
mov
pop
push
and
fiaddl
add
subl
and
push
add
cwtl
xlat
adc
mov
and
test
stos
repz
mov
dec
ror
or
rclb
mov
push
cwtl
hlt
dec
hlt
pusha
jns
mov
mov
mov
ss
popf
out
cli
fcomps
sahf
jbe
jns
clc
fcom
lods
les
imul
jb
xchg
stc
pop
or
or
rcrl
xor
repnz
adc
test
mov
pop
loopne
call
xor
mov
pop
and
cmp
cld
popa
xor
lock
sbb
aas
int
loop
lcall
jl
pop
jecxz
mov
jnp
shr
cmpl
fsubl
scas
push
ljmp
sarb
stos
mov
fcmovbe
std
dec
data16
cmp
inc
or
aas
imul
rcl
jecxz
js
gs
cld
std
mov
push
addr16
or
shr
push
movsl
sti
pop
push
or
or
inc
mov
movsb
js
aad
sarb
push
call
sub
and
out
sbb
repnz
fimuls
iret
lcall
fstpt
ljmp
mov
mov
mov
popl
mov
fcompl
add
shlb
lock
cmp
dec
jmp
addr16
sub
sbb
pop
mov
add
pop
cmp
cli
xor
cld
and
xor
xchg
cld
inc
sbb
mov
ret
int
jg
lock
and
pand
inc
mov
add
sahf
call
movl
je
imull
and
or
pushf
xchg
imull
insl
pop
loop
es
cwtl
add
mov
cmp
imul
flds
inc
xchg
pop
inc
mov
and
shrb
sbb
inc
push
cli
dec
push
imul
imul
ret
movsb
push
mov
cmp
xchg
lret
xor
in
xor
jp
mov
inc
cltd
stos
pop
call
stos
xchg
pop
testl
inc
mov
dec
sbb
popa
mov
fstpt
xor
test
insl
jno
fcomp
aas
out
scas
or
push
movsl
test
scas
int3
push
aas
shl
jns
lretw
inc
icebp
inc
adc
lds
xchg
mov
mov
das
mov
jnp
roll
sar
xchg
shlb
mov
and
dec
movsb
test
aam
mov
lret
xchg
pop
subb
stc
mov
xlat
cli
ja
ret
cli
jae
pop
cmp
arpl
add
sbb
or
stos
stos
lcall
cmc
xchg
jp
repz
bswap
pop
lret
push
subb
ficoml
and
ljmp
mov
mov
test
xchg
aas
dec
lret
jecxz
mov
xchg
xchg
aam
mov
pop
maxps
mov
push
insb
sti
ja
and
add
jne
mov
pop
ja
data16
adc
enter
jns
popf
and
testl
mov
scas
adc
push
ret
add
pop
fwait
cltd
xlat
xchg
repnz
or
insl
dec
mov
divl
fs
pop
fidivrs
sbb
mov
stos
lea
mov
dec
adc
shrl
inc
imul
cmpsl
std
and
ds
and
cwtl
mov
cmp
xchg
pop
cli
push
xchg
dec
cmpsl
icebp
stos
cmp
int
push
jmp
ficomps
lods
lret
and
notl
out
and
push
jge
out
sub
lcall
xlat
cmp
mov
mov
ret
adc
scas
push
inc
in
out
cli
mov
mov
sti
sub
pop
insl
aaa
popa
mov
insl
stc
movsb
fdivl
andb
add
loope
scas
mov
ret
enter
sarl
jns
ficomps
dec
inc
add
js
ret
inc
add
adc
leave
es
dec
mov
add
xchg
fwait
sbbl
push
testl
std
push
mov
push
xlat
cmp
call
sti
and
shll
out
in
push
sub
mov
in
push
xchg
mov
inc
xor
sti
sub
inc
mov
decb
jge
jbe
and
add
sbbl
and
inc
lcall
stos
cmp
test
xor
pop
inc
insl
add
adc
daa
stos
mov
xor
inc
in
lret
in
fisubl
pop
outsb
sbb
xchg
xchg
test
imul
xchg
arpl
rorl
aam
inc
push
pop
repz
dec
mov
fidivs
and
in
mov
aaa
pusha
inc
cltd
incb
adc
aad
add
popa
sub
imul
cmp
lret
ja
repz
movsb
sub
pop
fsubrl
lcall
xchg
stos
pop
jo
mov
mov
sti
jle
insb
das
pop
add
lea
inc
mov
xchg
out
ljmp
xor
pop
jmp
push
add
mov
test
jmp
out
jge
aaa
faddp
mov
xchg
adc
xchg
dec
movsl
sub
in
andw
and
mov
xchg
add
inc
xlat
in
mov
xorl
mov
pop
mov
sub
pop
cmp
xor
fs
dec
mov
movsb
jmp
outsl
enter
xorl
lret
rorb
sbb
dec
cvtpi2ps
sbb
in
push
push
sbb
push
pop
dec
mov
cmc
enter
xor
repnz
ret
xlat
pushf
icebp
shl
mov
inc
ret
jb
sub
adc
push
pop
cmp
js
add
lahf
and
mov
inc
xchg
sub
adc
xor
js
call
loopne
das
scas
jae
add
sub
pop
xchg
xchg
in
pop
xchg
hlt
nop
shrb
xor
dec
xchg
pop
pop
mov
add
cmp
les
xor
repz
repz
testb
aad
push
and
jne
inc
mov
outsb
push
cld
lods
sbb
xchg
neg
add
cli
sub
adc
cmp
push
aas
adc
xor
les
test
jne
cmpsb
aad
sbb
push
mov
jae
insb
dec
aaa
stos
or
in
xchg
jg
lcall
inc
jnp
outsl
loopne
jp
push
scas
test
cmpsl
lcall
popf
sbb
lock
adc
mov
xor
add
xor
xchg
jecxz
dec
mov
jo
mov
repnz
mov
mov
aad
pop
add
push
in
popa
pop
fisttpl
icebp
sbb
mov
mov
test
shlb
cld
aad
mov
cmpl
add
outsb
xor
push
iret
jo
mov
mov
cmp
int3
insl
cld
testl
push
orb
outsb
out
adc
sub
outsb
push
and
jge
test
test
fiadds
clc
fmul
testb
or
test
adc
or
pop
cmpb
pop
inc
stos
jge
cmp
jmp
enter
pop
and
daa
out
incl
xchg
fsts
pop
push
mov
cmp
or
mov
insb
cmp
sub
pop
jb
test
pop
das
sub
shr
jb
sub
mov
jg
adc
mov
pop
push
sbb
pop
fstl
inc
mov
iret
dec
lods
and
sti
adc
shrb
mov
fadd
mov
pop
or
sbb
mov
push
xchg
stos
test
into
jne
in
push
jb
sub
mov
rcrb
jmp
into
and
inc
pop
stos
subl
jb
or
int3
ja
mov
cld
mov
data16
push
aas
sub
xlat
ds
pop
add
inc
jo
mov
and
lcall
inc
jb
dec
imul
mov
xchg
cmpsl
jno
mov
out
dec
xchg
test
pop
push
jbe
std
lds
hlt
arpl
gs
aas
hlt
jno
out
jl
scas
push
cmp
leave
xor
cli
xlat
std
out
andb
mov
lret
xchg
push
jns
test
incl
add
add
enter
or
cmp
into
lock
int3
popa
movsb
mov
push
loope
push
test
aam
cmp
aaa
enter
jle
adc
cmp
inc
sub
sbb
movb
aaa
pop
xchg
jmp
mov
test
pop
fidivs
adc
sarb
add
idiv
rclb
sub
cmpsl
push
cmpsl
inc
fdivrp
mov
loope
daa
stc
sub
adc
loope
into
cli
mov
pop
sbbb
in
push
xchg
cwtl
jp
scas
mov
pop
adc
push
rorb
adc
test
add
orb
adc
pop
loopne
pusha
rcrl
xor
stos
mov
mov
push
andl
stos
xor
pop
aad
adc
and
xor
or
sub
push
test
dec
roll
and
adc
rol
or
repz
sbb
xchg
icebp
adc
rolb
sub
xchg
push
sbbl
or
out
push
loopne
and
mov
cmp
push
xor
push
or
repz
mov
jle
scas
cmp
pop
and
repnz
adc
in
sbb
test
dec
call
int3
ret
sub
test
insb
mov
std
lea
in
cmp
pop
jecxz
inc
stos
rcrb
call
jp
mov
push
fimuls
movsb
leave
addr16
sbb
imul
bound
or
push
cmp
jae
dec
add
jmp
jns
fxch
popa
and
leave
mov
daa
cli
xchg
inc
cmp
fmull
add
mov
shl
sub
jp
lret
adc
movsl
lods
dec
xor
jo
lcall
dec
ret
push
loope
push
movsl
push
das
mov
jge
mov
idivl
cmpsb
push
mov
stc
rcr
inc
mov
in
leave
jbe
outsb
sub
addr16
mov
in
push
into
shrb
jl
pop
mov
cs
imul
mov
push
inc
or
dec
rcrb
pop
popa
xchg
adc
js
dec
mov
call
lea
sub
jno
jp
pop
cmp
xchg
int3
iret
cltd
out
xchg
jle
fwait
loope
out
pop
push
push
add
scas
dec
out
lret
and
cmp
loop
cmpsl
mov
jb
mov
mov
repz
sub
imul
shrl
pop
push
dec
enter
xchg
cld
test
jmp
fcoml
enter
pop
lahf
xchg
cmc
jae
and
dec
cli
lods
sbb
pop
xchg
aad
inc
ret
and
cmp
add
inc
cmpsb
jb
int3
movsb
or
dec
repnz
cmpsb
and
loop
mov
inc
sbb
pop
shl
cmpsl
fdivp
xchg
stc
ss
arpl
pop
aas
in
int
fld
pop
lock
and
jp
dec
xor
or
cs
mulb
mov
jl
mov
fsubrs
fcmovnu
inc
xchg
cmc
lahf
sub
mov
mov
scas
scas
sbb
std
push
lret
mov
pop
or
jo
mov
je
inc
mov
jp
mov
push
sub
out
pop
mov
icebp
lods
xor
mov
push
xor
push
pop
imul
sbb
cmpsl
sbb
cli
shrl
jae
mov
adc
mov
adc
js
jp
aaa
and
insl
fadds
lods
pop
popa
not
inc
cwtl
inc
pusha
mov
fcomps
cmp
scas
pop
rclb
lods
xchg
pop
loope
in
or
ljmp
mov
jbe
jecxz
xor
push
add
mulb
test
mov
push
inc
push
xchg
into
jmp
jae
jmp
mov
jns
xchg
leave
cmpb
cmp
or
das
scas
mov
and
add
mov
icebp
cmp
mov
out
add
lock
loop
xor
mov
dec
jbe
sbb
or
addr16
daa
roll
in
xor
enter
insb
dec
sbb
jmp
jle
add
jmp
push
fldcw
xchg
aaa
adc
push
sbb
fcmovnbe
aaa
or
int
shrl
adc
inc
aas
roll
mov
and
inc
in
cli
dec
push
jbe
cmpsl
leave
sbb
lods
push
pop
movsl
pop
rclb
mov
or
mov
dec
fadd
jg
fldenv
or
adc
push
js
lods
loop
lret
cld
jnp
sub
xchg
pop
sahf
loope
pop
xchg
insb
pusha
adc
stc
lahf
mov
jno
fisubrs
push
jge
inc
loope
pop
inc
push
inc
ror
rorl
nop
iret
pushf
sbb
cmp
cmp
hlt
imul
adc
out
sub
lock
cli
lcall
sub
mov
sub
movsb
dec
inc
xor
notl
xchg
cwtl
dec
inc
roll
rorl
inc
shlb
sub
stos
dec
pop
int3
rolb
test
cmp
or
pop
icebp
popf
mov
or
mov
repnz
xchg
jns
xor
vdivsd
inc
fdivs
les
addb
xchg
popa
leave
adc
cmp
jge
push
shll
pop
fldenv
pop
and
push
fwait
or
jecxz
push
jl
jae
push
mov
test
mov
roll
mov
cld
ficoms
or
xor
adc
jg
mul
sbb
dec
mov
and
sub
push
in
aam
inc
push
pop
dec
dec
sbb
xchg
scas
inc
or
jo
movsb
cmp
jg
imul
push
out
lret
loop
dec
inc
iret
test
arpl
loopne
fsubr
cmp
sbb
push
int
imull
pop
sbb
lcall
les
js
and
jecxz
lods
jb
mov
mov
lock
test
lret
or
push
pusha
daa
push
gs
cwtl
pusha
and
movsb
push
jo
xor
pop
int3
inc
leave
fdivrs
mov
pop
xchg
orl
pushf
ror
mov
cmp
fisubrs
mov
js
pop
fdivl
fnstsw
rolb
or
je
push
iret
xchg
sbb
sub
movsl
mulb
data16
ljmp
push
popf
lcall
out
push
out
pop
push
and
inc
scas
jae
fwait
adc
xchg
mov
jnp
lds
insb
xchg
or
xchg
adc
fisubl
outsl
adc
xchg
leave
sub
xlat
adc
cmp
stos
pusha
jecxz
pop
cmc
xchg
ljmp
in
add
dec
adc
push
lret
sub
aas
lret
aad
xchg
xchg
adc
cwtl
arpl
jl
sbb
mov
aas
dec
mov
shl
andb
mov
xchg
scas
cwtl
scas
push
sbb
inc
imul
mov
xor
test
mov
jecxz
or
test
add
imul
mov
cmp
pop
sarw
into
add
int
push
fbstp
in
pop
popf
and
mov
out
push
fs
in
aas
test
xor
pop
jmp
test
sbb
repnz
rcrl
in
ficompl
loop
js
movsb
test
mov
jge
adc
cs
nop
std
cmc
xchg
enter
into
jne
or
fmul
fwait
sahf
or
sub
rcll
test
cmp
sbb
test
xor
lods
dec
lret
call
gs
cli
adc
sub
xchg
mov
iret
mov
jno
imul
cld
push
sbb
or
movsl
out
mov
movsw
leave
add
out
push
ljmp
rcll
fcoms
pushf
das
imul
imul
fisubrs
int3
rclb
cltd
pop
shrb
lret
scas
iret
xor
inc
fidivrs
test
call
and
popa
mov
sarb
jnp
xor
pop
fwait
andb
jmp
leave
iret
aaa
push
jne
xchg
into
push
in
pop
xchg
adc
mov
std
jmp
sub
jmp
inc
out
aad
in
ret
dec
ret
dec
xchg
fldt
popa
test
out
sti
inc
hlt
mov
inc
into
mov
adcb
mov
jmp
and
insl
adc
cmpsb
jecxz
in
out
bound
dec
inc
aas
mov
lret
daa
inc
and
push
inc
mov
mov
mov
inc
mov
insb
cltd
jb
loopne
faddl
adc
xlat
arpl
pop
xor
push
cmp
icebp
push
iret
mov
or
jo
mov
mov
inc
hlt
cmp
mov
je
push
in
xor
sbbw
pop
in
lahf
sbb
add
xchg
xorb
inc
and
add
jns
pop
pop
pop
pop
ds
movsl
jmp
push
mov
cwtl
pop
aas
shll
xchg
push
sub
aaa
mov
negl
outsl
cmpsb
fdivp
inc
scas
xchg
mov
rolb
and
xlat
inc
pop
cmp
sub
inc
shl
mov
mov
xor
sbb
sbb
xchg
pop
fiaddl
lea
out
outsl
jge
mov
mov
in
mov
and
jno
adc
arpl
push
inc
loope
fcmovu
in
jp
aad
sbb
gs
outsb
jp
or
xor
sbb
jne
jle
outsb
sahf
in
iret
cmp
cwtl
aam
lds
xchg
mov
sti
stos
out
jno
les
add
jae
xor
ss
loope
aam
std
stc
sbb
jg
fsubrl
mov
das
jnp
shlb
and
addl
mov
xor
dec
xchg
and
outsl
inc
xor
jo
out
adc
repz
or
sub
sar
mov
jns
dec
sbb
cwtl
dec
aas
push
lds
sub
ja
mov
fsubl
cmp
mov
sbb
inc
scas
shlb
dec
mov
push
jns
insb
jp
mov
bound
cmp
and
mov
ret
fidivl
iret
frstor
loope
jnp
out
lahf
jp
inc
lret
dec
push
notb
daa
push
dec
jmp
ljmp
in
dec
ds
stc
repnz
push
ret
cmp
or
sbb
ja
mov
aad
arpl
mov
sub
pusha
and
imul
out
xor
cmp
mov
jl
daa
lahf
dec
hlt
ja
xchg
pop
xchg
or
popa
xchg
ret
jae
xor
popf
mov
negb
mov
mov
mov
mov
or
sbb
pop
popa
mov
mov
cmpl
imul
add
push
and
sub
cmp
inc
stc
rcl
pop
mov
push
jge
divb
into
mov
or
loopne
jbe
mov
xchg
dec
fsubl
and
insl
rorl
pop
lret
dec
or
rorb
jno
ficoml
add
aad
jns
lcall
fwait
pop
and
jnp
inc
lds
push
jne
add
movsl
sbb
fwait
inc
je
or
clc
mov
adc
mov
mov
enter
cmp
xor
inc
shll
stos
cs
scas
dec
sbb
mov
jno
xchg
mov
lahf
and
push
inc
cmp
icebp
mov
inc
mov
adc
inc
sbb
push
xor
or
test
adc
idiv
sbb
pop
rcll
xchg
fs
sbb
es
std
push
int
mov
mov
into
xchg
xor
jle
mov
push
test
cmpsl
push
js
test
sahf
loop
rol
mov
jnp
xor
popa
scas
loop
xchg
pop
jns
in
inc
push
jl
fcomps
xchg
mov
lods
movsl
addr16
cmp
mov
popa
sbb
fdivs
mov
sbb
mov
daa
stos
in
rcpps
cmp
xchg
in
out
pop
pusha
subl
jo
pop
clc
ljmp
test
gs
jnp
jge
inc
mov
jle
jmp
or
daa
mov
mov
xchg
xlat
cltd
cmc
xor
out
push
fldl2t
into
push
test
imul
mov
xchg
test
sbb
test
icebp
jl
test
lock
lds
cli
test
push
cmc
push
test
dec
push
mov
mov
cld
push
mov
dec
lret
jge
cli
dec
dec
jg
add
pusha
xchg
shrb
aaa
test
pusha
das
add
aaa
xor
loop
imul
adc
repnz
sbb
in
pusha
out
sar
push
inc
mov
jnp
dec
stc
or
or
cmp
xchg
add
ss
aaa
dec
push
dec
cmp
ud0
dec
sbb
subb
stos
push
inc
adc
insb
pop
rcrb
pop
xor
aas
inc
popa
cmp
inc
jno
lods
and
sub
lea
imul
fs
add
ret
push
adc
fwait
mov
adc
or
jle
or
and
cmp
dec
cmovb
orb
cmc
dec
xchg
enter
lahf
jnp
sbb
push
repnz
push
shrl
add
sbb
push
into
clc
inc
pusha
inc
shlb
nop
addr16
inc
xchg
stc
enter
and
lret
jb
out
pop
icebp
loopne
shrl
fimuls
pusha
int3
icebp
and
popf
push
mov
sub
out
lret
out
push
aad
add
mov
cltd
xchg
cmp
popl
movsl
mov
add
sub
mov
dec
pop
xchg
loope
dec
fs
mov
mov
iret
rorb
lea
cltd
mov
imul
lcall
mov
jae
pop
ror
mov
mov
mov
int
addl
test
jmp
or
repz
cmp
cmp
or
and
je
push
pop
lods
cmpsl
out
mov
in
sbb
stos
mov
jmp
or
bound
aad
stos
lods
jp
adc
add
int3
pop
push
jp
cltd
jp
mov
push
stc
insl
loopne
add
cmp
aad
xchg
push
fcom
aas
pop
jno
push
testb
jmp
adc
call
imul
and
adc
cltd
jbe
push
or
push
test
mov
int
mov
mov
std
js
pop
aam
das
push
mov
fimull
loopne
fimuls
push
insb
cmp
es
das
jg
sahf
mov
movsb
mov
push
mov
out
in
in
adc
lret
ja
ss
and
sti
and
cmp
jmp
popa
mov
inc
vpsllw
add
call
aam
push
int
out
adc
movsl
sbb
jnp
inc
imul
shlb
in
lock
shrb
cmc
jg
shll
std
ja
loope
adc
add
add
sub
scas
aaa
lock
stos
push
sbb
pop
ret
add
mov
fmulp
iret
iret
out
ret
jae
cmp
pop
adc
clc
je
mov
loop
jb
adc
fldl
loop
sub
dec
xchg
hlt
cmp
or
sub
xor
mov
stos
das
test
fisubl
xchg
mov
push
mov
movsb
add
aas
inc
or
xor
movb
in
leave
clc
std
movsb
push
inc
nop
pop
push
push
int3
mov
andb
mov
jo
enter
rolb
stos
cmp
sbb
add
in
jmp
mov
aaa
aad
insl
and
push
out
push
push
jecxz
imul
test
dec
pop
fnstsw
aam
jne
aaa
add
push
enter
lahf
jbe
adc
subb
into
pop
pop
adc
xlat
inc
jo
test
lds
jecxz
mov
pop
sub
fwait
pop
add
in
or
jmp
jle
lods
sub
lods
pushf
out
pop
pop
pop
push
mov
subb
add
loopne
lock
pop
xchg
xor
in
int3
lahf
bound
dec
push
dec
loopne
mov
loopne
mov
js
arpl
sub
bound
lahf
xor
fldl
outsb
adc
aad
icebp
faddl
movsb
push
dec
rcl
je
cmp
xchg
sarl
call
or
popf
insl
pop
mov
lahf
ret
cmp
fdivs
call
xor
inc
mov
cmp
adc
or
sbb
jnp
mov
mov
mov
push
rcrl
inc
cmp
insl
sub
clc
jns
xor
idiv
xchg
inc
push
imul
push
dec
stos
sti
push
xchg
mov
mov
cmc
int
jae
fwait
ret
je
add
jns
loop
xor
inc
sbb
pop
popf
add
insl
hlt
or
test
clc
ret
scas
mov
pusha
or
or
scas
nop
xchg
sub
bound
jns
dec
mov
fisubrl
jno
cmpsb
add
sub
in
add
in
ja
data16
cmpsl
stos
mov
aad
out
xchg
mov
lcall
push
add
loop
hlt
sub
hlt
loopne
test
cmp
cmpsl
mov
imul
int
push
cmpsl
lret
cmp
insl
xor
js
dec
add
js
lock
mov
xchg
add
inc
out
test
fidivs
stc
dec
xor
test
push
mov
ret
dec
fwait
jecxz
jns
mov
out
mov
xor
push
mov
fdivrp
mov
mov
dec
dec
insl
fsts
into
push
imul
mov
sbb
mov
mov
fldenv
popf
sbb
stos
fstpl
jmp
arpl
stos
lods
xchg
lcall
pop
cmc
inc
cmpb
xchg
je
fimuls
jns
dec
jo
les
xor
adc
push
cli
es
mov
push
inc
fdivl
fs
movb
iret
jge,pt
adc
call
add
jno
sub
dec
mov
daa
cmp
repz
aas
sub
dec
cli
pop
lcall
mov
vfmadd231ps
or
clc
nop
sbb
cmc
orb
pop
enter
or
rorb
outsl
and
test
rcr
stc
inc
or
aam
and
xor
gs
inc
out
shlb
in
and
dec
xlat
push
push
pushf
sti
xchg
jno
push
int3
cmpb
add
lcall
xor
mov
and
scas
aad
pop
adc
ret
fsts
ss
lock
call
push
push
adc
in
rorl
lds
cmpsl
jae
xchg
cmp
scas
jae
out
cmp
or
nop
das
adc
ds
in
mov
stc
mov
mov
push
lret
mov
xchg
fcomip
fisttpll
int
dec
das
push
xchg
sub
ljmp
xlat
jnp
mov
lret
fsts
jg
popf
pop
mov
or
insb
cmpsl
mov
sub
mov
loopne
or
popa
jo
cmp
arpl
add
sbb
shll
data16
test
negl
lock
lret
push
or
movsl
stos
xchg
loope
lret
xor
xor
mov
or
dec
lcall
jl
or
jb
push
sub
imul
ret
sti
and
lret
pushf
int3
mov
add
inc
pop
fcoms
adc
or
push
pop
in
add
mov
int
shl
pop
cs
test
ss
inc
scas
sub
sbb
in
mov
ljmp
sbb
idiv
orl
mov
jno
aas
jp
lahf
wrmsr
adc
cmp
aas
enter
pop
test
lret
and
cli
inc
mov
das
mov
stc
dec
mov
xchg
fcoml
mov
fsubp
je
andb
imul
pop
aad
icebp
mov
xor
jbe
xor
daa
mov
call
ret
dec
mov
inc
push
xchg
mov
mov
pop
add
inc
push
push
xchg
shr
mov
cld
int3
leave
jle
sub
pop
cmovne
loop,pn
xchg
xchg
cmp
data16
xchg
dec
pop
sub
cli
xchg
ret
pop
ret
mov
fs
push
pop
mov
hlt
adc
ja
xchg
cmpsl
stos
test
xor
insb
mov
insb
aam
push
in
testb
mov
mov
js
mov
repnz
sub
sub
adc
rcll
and
jns
inc
inc
xchg
xor
sbb
imul
jge
sahf
mov
fldenv
mov
or
jmp
sbb
dec
xchg
cmp
test
inc
sbb
pop
je
repnz
je
add
mov
sti
cmp
push
cmpsb
pushf
xor
adc
pop
dec
int
xor
mov
cmp
dec
ds
lcall
test
arpl
iret
inc
aad
lock
mov
jecxz
sbb
std
and
mov
sbb
clc
mov
fcmovnb
std
stc
rorb
sbbl
psubq
push
jmp
xchg
sbb
dec
lahf
jg
out
cmp
inc
not
in
sti
lcall
pop
pop
xchg
add
pop
ds
add
lds
or
sbb
xchg
or
dec
shrl
and
xchg
xchg
jge
sti
inc
sbb
pop
out
filds
ret
fdivrs
mov
scas
popf
xor
fwait
js
add
pop
or
mov
xor
mov
add
add
mov
insb
into
insl
sbb
fidivrl
lock
lds
ror
jmp
or
imul
sbb
cmp
mov
jp
out
lahf
jb
jecxz
jae
rolb
inc
rcrb
adc
or
les
loopne
movsb
xor
mov
add
push
fldcw
faddl
dec
add
enter
sbb
adc
push
test
fs
aas
int3
aam
add
push
sbb
mov
loope
adc
mov
pop
mov
test
mov
test
leave
cmpsl
lahf
pop
icebp
xor
pop
mov
adc
pop
mov
xchg
dec
cmpsb
in
xchg
loopne
mov
sub
lods
mov
push
aad
int3
inc
notb
into
outsb
mov
pushf
push
dec
scas
sarb
inc
aad
ljmp
or
cltd
push
mov
int
xorb
mov
mov
xchg
mov
push
sbb
jle
add
repnz
lcall
hlt
xor
cmp
dec
sbb
ret
js
jno
mov
jmp
aas
add
test
pop
xor
shlb
test
mov
jl
xchg
mov
sub
jbe
mov
insl
ret
lcall
pop
xor
dec
outsb
mov
push
fists
lock
aas
sub
je
imul
arpl
cltd
mov
sti
xchg
sbb
xorb
xchg
sbb
sbb
jge
dec
pop
lods
push
cli
jp
fnstcw
xchg
add
or
dec
out
or
xorl
gs
jb
cli
repnz
pushf
roll
lods
sub
addr16
ret
mov
push
xchg
xchg
dec
lret
es
dec
and
xor
insb
cmp
cmp
cmpsb
mov
and
add
negl
sub
jne
popf
or
xchg
int3
dec
or
daa
xchg
push
out
pop
sahf
jnp
aam
loopne
cmp
cmpsb
in
sub
loopne
cmp
cmpsb
arpl
addr16
mov
xchg
test
dec
cmpsb
jge
inc
repz
js
jmp
dec
push
pop
push
ja
and
fstpl
mov
roll
jg
sbb
mov
and
push
add
pop
sbb
lret
mov
lods
lock
xchg
lret
dec
in
cs
inc
push
in
ss
cmp
jp
movsb
mov
mov
call
mov
testb
mov
mov
sbb
xchg
dec
stos
xlat
cmp
cli
jmp
ja
jae
and
out
push
mov
les
insl
dec
test
cmpl
sub
repnz
lea
addb
fistpl
test
xchg
lret
scas
xlat
out
shlb
shrb
xor
push
inc
lods
jge
mov
push
lds
jg
jnp
add
jp
cltd
adc
mov
frstor
fisttps
test
repz
shrl
sti
pop
jecxz
je
dec
cmpsl
xchg
mov
jp
cmp
pop
push
sub
lods
bnd
mov
mov
adc
lds
add
sbb
imul
add
or
mov
popa
mov
hlt
lea
cmp
notb
aas
and
add
jb
sbb
jno
xchg
jp
daa
lret
int
cmpsb
into
ret
inc
sbb
cmp
iret
or
jo
mov
gs
fcmovnu
int
repnz
cmpsl
test
inc
xor
lods
or
clc
call
adc
jmp
add
sub
lock
cmp
jp
jb
pop
pop
cld
leave
jns
jno
pop
xor
insb
ds
mov
out
and
movsl
lret
out
insl
ja
in
push
lret
addl
dec
aam
std
arpl
dec
xchg
nop
rorl
hlt
mov
ret
sub
mov
aas
jmp
inc
mov
ror
mov
scas
dec
hlt
push
into
sub
mov
sahf
nop
xor
fcomi
pop
into
es
cwtl
push
mov
mov
cmc
cli
mov
mov
movsl
mov
mov
ja
push
xchg
std
sbb
mov
ja
stos
ss
filds
cmp
movsl
sbb
mov
iret
imul
jnp
jns
scas
pop
scas
int3
movsl
xlat
jbe
inc
xor
stos
dec
daa
xchg
fcomi
cmp
dec
cmp
add
lea
cld
xchg
dec
adc
insl
out
or
mov
push
push
gs
int3
cmp
pop
xchg
rorb
ljmp
call
arpl
cmp
ljmp
jmp
hlt
rcl
popa
out
sub
fdiv
mov
xor
nop
rcrl
icebp
dec
mov
std
mov
js
stc
inc
xor
add
out
mov
repnz
sub
mov
cld
sti
jg
loope
shrb
iret
mov
or
loop
scas
sub
dec
fisubl
dec
or
add
dec
daa
adc
sbb
leave
cwtl
and
insl
jnp
push
jns
fbld
adc
cs
dec
dec
rcrb
lock
pushf
leave
movsb
jl
and
and
xor
fmul
sbb
push
or
test
add
outsb
popf
je
or
rclb
pop
jbe
xchg
aam
cmpsb
push
sub
dec
xor
enter
outsl
aaa
mov
mov
paddq
and
sarl
lock
hlt
movsl
popf
or
imul
xlat
sub
push
jb
jno
sarb
ss
pop
mov
hlt
jae
sarb
fbstp
clc
mov
fiaddl
negl
pop
xor
cmp
frstor
es
jo
xchg
jecxz
clc
inc
data16
fcom
and
xchg
jbe
daa
dec
aas
push
movsl
ja
xor
xor
sub
add
cli
or
ljmp
lods
cmp
dec
out
popa
cs
push
mov
test
sbb
xor
pop
popf
pop
jbe
jp
push
lods
aad
cmp
aas
lret
mov
push
sar
mov
lods
movsl
sbb
fs
rep
idivl
mul
jnp
mov
jno
add
lds
cmpsb
enter
mov
inc
insb
mov
int
mov
negl
ret
fs
dec
loop
dec
fsubrs
jl
pop
call
inc
lods
push
xchg
adc
pop
inc
aad
mov
insl
ljmp
insl
out
ror
ljmp
xor
push
xchg
push
pusha
les
jno
add
xchg
out
insl
mov
aam
push
shlb
enter
cmp
cs
and
push
scas
jp
cmp
adc
and
int
enter
dec
push
test
sbb
and
jne
in
popf
jle
outsb
push
ss
jg
jp
and
lret
data16
scas
gs
in
test
push
and
stos
out
nop
mov
scas
dec
push
inc
cmp
ds
lea
xor
lods
lods
mov
repnz
mov
insl
or
mov
fwait
mov
add
test
push
int
cmp
jbe
cmp
sbb
scas
ja
ficompl
test
pop
orl
push
mov
js
jmp
in
clc
jge
daa
aam
push
hlt
xor
mov
cmp
hlt
xor
iret
les
dec
in
dec
pushf
das
test
dec
xchg
mov
jne
sbb
xchg
xor
popf
pushf
pushf
test
add
aam
mov
scas
xchg
cmp
adc
jns
add
push
jp
push
mov
push
nop
xor
clc
mov
in
es
movsb
sbb
bound
xor
mov
divl
and
int3
test
lret
int
dec
xchg
fwait
lea
cmpsb
inc
imul
lds
mov
aas
xchg
cmpsl
adc
movsb
lods
es
jae
dec
iret
popf
jae
sbb
adc
xchg
sbb
sbb
push
pop
incl
sti
inc
cmp
scas
pusha
movsl
pop
sub
pop
movsb
gs
fldt
mov
pop
cld
test
pushf
adc
stos
mov
or
test
test
lea
inc
vzeroupper
fs
mov
or
enter
mov
in
jmp
outsb
jmp
bound
adc
shl
js
sub
push
hlt
lahf
enter
aas
jno
mov
xor
outsb
ja
or
imul
add
jl
add
repnz
pushf
aad
sub
or
xor
cmpsb
bound
call
popf
adc
repnz
jecxz
adc
inc
ds
inc
pop
jbe
push
ss
push
orw
xor
cmp
lahf
leave
mov
pop
jg
ss
lea
outsl
into
xchg
in
push
mov
es
sbb
pusha
lret
pop
out
aam
mov
inc
pusha
clc
mov
out
inc
out
add
xor
dec
pop
jl
cmc
and
hlt
cli
ret
pop
jns
insl
test
lds
fsts
call
pusha
dec
cmp
imul
pop
mov
imul
push
in
jno
lcall
sub
ret
jmp
pop
rcrb
sub
into
aam
mov
add
out
enter
addl
pop
jmp
mov
adc
mov
dec
pop
pop
xchg
stc
mov
mov
mov
mov
dec
sub
ror
push
mov
dec
daa
in
fwait
push
fdivp
rclb
inc
mov
test
mov
adc
pop
das
addr16
lret
jbe
and
fwait
rcrb
jne
mov
sbb
outsl
push
fbld
sbbl
aam
sbbl
or
jne
or
ret
clc
rol
dec
enter
or
pop
xor
rorb
dec
inc
dec
pusha
add
les
add
mov
cmp
fildl
pop
jle
dec
cli
lea
repnz
cmpl
loop
bound
xorb
dec
andl
add
dec
inc
xor
inc
and
lods
sbb
daa
push
sub
lret
lock
xchg
push
jl
sub
adc
lahf
adc
movsb
and
push
out
fidivrl
punpcklwd
dec
mov
mov
data16
dec
rol
or
mov
dec
ficomps
lret
and
fldt
or
push
stos
or
out
test
pop
fdivl
xor
outsl
pop
mov
mov
repz
lods
pushf
in
popa
imul
aad
cmp
cmp
cmpsb
mov
in
loop
std
andl
xor
xchg
scas
inc
aas
lcall
dec
sub
ss
sbb
jp
daa
stc
fdivrl
jo
xchg
xchg
mov
pop
aam
or
or
add
dec
stos
sarl
scas
aam
push
pop
mov
loopne
cs
sub
test
ljmp
outsb
aas
mov
cmp
arpl
fstpl
popa
cmpsl
pop
fcmove
pop
add
outsl
int
sti
jecxz
movsl
sub
inc
add
mov
insb
imul
rcr
arpl
and
ret
push
or
fcompl
xor
mov
mov
ljmp
pop
mov
pusha
out
push
push
pop
lds
push
cmp
jae
movsb
mov
and
lock
icebp
lret
mov
fs
imul
lods
mov
out
pop
adc
jg
std
iret
cmp
das
outsb
arpl
push
out
arpl
add
mov
mov
loopne
add
and
inc
mov
mov
mov
xchg
sbb
sahf
insb
add
pop
icebp
jns
dec
imul
aad
gs
sarb
mov
xlat
push
aas
mov
push
sbb
pop
pop
jno
adc
scas
test
xor
push
rorl
popa
rcll
mov
fldenv
movsl
clc
loopne
mov
pop
jmp
push
sbb
mov
subl
pop
or
pop
in
jmp
mov
outsb
fdivl
js
cmp
movsl
sub
inc
cmpsb
test
cmp
cld
je
roll
mov
cmp
in
into
jbe
int3
loopne
repz
popa
out
and
and
push
movsb
jne
inc
test
sti
sub
fbld
enter
xchg
add
xor
pusha
dec
mov
lea
cmp
jns
xor
cmpsb
xor
ffree
add
ljmp
mov
lret
mov
dec
add
adc
push
sbb
rcrl
mov
imul
inc
jnp
shrb
addb
adc
addr16
je
sub
adc
cmp
mov
xchg
mov
lahf
xor
mov
imul
xor
lret
mov
dec
movsl
cmc
and
std
adc
sbb
stc
dec
jb
cmpl
loopne
mov
daa
test
out
int3
pop
int3
subl
add
xor
pop
dec
xor
dec
cmp
in
lea
dec
rorl
mov
sub
cmpsb
inc
and
and
loop
movsl
nop
repz
push
test
lods
hlt
inc
add
jg
and
shlb
lea
data16
inc
test
sub
push
or
das
jne
inc
movsl
aas
test
jno
mov
mov
pop
sbb
or
js
or
adc
jae
out
xchg
push
mov
outsb
sub
jnp
ljmp
cmc
ficoms
icebp
addr16
stc
xor
add
pop
jae
push
sbb
push
pop
xlat
inc
mov
inc
mov
int
dec
mov
stos
inc
ret
or
imul
ljmp
sti
nop
cmp
sbb
sbb
inc
mov
popf
mov
mov
mov
gs
pop
jmp
pushf
sbb
out
test
jle
call
mov
inc
and
repz
xchg
xor
add
sub
int3
sub
sbb
addr16
repz
push
xchg
loope
jg
les
es
cmp
inc
js
movsl
mov
push
jg
xor
shlb
test
sarb
dec
cld
adc
push
add
into
nop
pop
add
inc
pop
lock
xchg
lods
jne
mov
ss
or
xchg
push
or
xlat
adc
jl
sub
sub
pop
pop
adc
jecxz
imul
popa
adc
mov
in
push
rcrb
in
leave
xchg
pop
pop
imul
in
add
bound
mov
lcall
mov
sub
xor
cmc
xor
cwtl
adc
fiadds
sbb
test
adc
insl
lds
ds
inc
mov
fldt
dec
pop
ror
jns
std
std
mov
jns
test
jo
incb
jp
push
test
xchg
cs
mov
and
xchg
adc
ffree
in
and
flds
leave
push
rcrl
aad
movl
shr
dec
mov
inc
push
mov
sub
test
push
sbb
mulb
call
scas
enter
daa
push
push
mov
inc
outsb
popa
inc
out
mov
inc
inc
pop
cltd
push
jno
sub
jmp
imul
inc
leave
mov
jne
sahf
rcrl
mov
arpl
sahf
aad
nop
mov
fstp
call
xor
add
dec
out
decb
lea
xchg
loop
dec
adc
jmp
jbe
adc
idivb
mov
dec
lcall
jg
imul
xchg
xchg
insb
pop
into
add
adc
mov
xchg
xchg
test
xor
incb
push
sbb
sti
dec
push
mov
icebp
dec
or
xor
rclb
xchg
loopne
add
mov
insb
inc
out
sub
jnp
scas
jnp
add
popf
jnp
int
pop
add
sbb
in
shll
inc
lods
push
lahf
pop
push
addb
popf
inc
jae
push
pop
imul
popa
xor
xchg
dec
lcall
dec
mov
adc
je
out
jns
pop
mov
test
call
jnp
xchg
adc
or
xor
push
add
movsb
into
lret
pop
or
jb
mov
adc
xchg
cs
out
aaa
xchg
sahf
jp
out
jb
or
movsl
in
sbb
decl
orb
cmp
fidivrl
jmp
mov
adc
adc
mov
inc
mov
aaa
filds
sub
lock
adc
ja
imul
ss
and
popf
pop
xchg
jae
out
dec
cli
push
in
xor
cmc
push
enter
js
jnp
lock
or
mov
sub
repnz
mov
inc
fstps
cmp
mov
pop
pop
cmp
movaps
add
push
ficoml
insl
cmp
das
imul
xlat
xchg
mov
stos
cmc
lret
test
icebp
dec
and
cmp
mov
and
inc
sub
dec
jmp
xchg
into
in
mov
xchg
ljmp
adc
pop
movsl
xchg
jb
push
scas
stc
sbb
xlat
daa
sub
sbb
jo
or
imul
pop
mov
push
dec
out
pushf
mov
mov
cwtl
add
push
out
aam
sbb
push
adc
in
adc
popa
sbb
test
fucomip
xchg
rclb
adc
lahf
test
rolb
cs
bswap
or
sbb
std
and
sbb
adc
test
mov
mov
and
or
cltd
or
push
pushf
dec
insl
pop
aaa
xchg
jp,pn
aas
dec
and
pushf
jg
push
mov
lcall
jae
pop
xlat
cmp
cmpb
daa
cmpsl
cs
repnz
jns
sbb
stos
sub
shll
mov
jae
dec
faddp
push
insl
aad
aaa
shll
dec
sbb
mov
push
iret
mov
add
rdmsr
aam
pop
lahf
lcall
out
jecxz
rcr
push
popa
mov
cmp
divb
mov
loop
sti
roll
mov
pop
xor
pop
daa
lds
push
arpl
jns
mov
icebp
fmuls
xchg
push
loopne
sub
adcb
repnz
xor
pop
push
lcall
mov
jbe
pusha
mov
fucomp
and
leave
push
shr
mov
and
jo
mov
push
pop
and
add
stos
test
xchg
and
aad
xchg
push
adc
pop
shll
xlat
fld1
clc
pop
push
jl
ljmp
adc
push
mov
fidivrs
or
sub
jge
push
in
fildll
add
popa
subb
dec
lods
inc
pop
fmuls
push
jle
test
push
cmp
sub
jg
mov
std
add
js
sbb
cmp
pop
stc
sahf
push
cmp
jnp
shrb
sahf
std
jns
pop
jns
pop
push
popa
cmp
xchg
stos
adc
mov
mov
test
in
pop
and
sbb
lcall
pusha
mov
mov
jne
std
mov
pusha
lods
or
sub
fmul
mov
xlat
sahf
add
int
aad
adc
stos
leave
outsl
clc
popf
cmc
adc
filds
jae
jbe
push
movsb
mov
stos
adc
xchg
int3
add
ds
jmp
sub
xchg
pop
mov
fs
jne
sarb
jge
xor
enter
sub
dec
out
out
mov
push
xchg
fdivrl
mov
addb
rcl
jae
or
stos
or
mov
sarb
arpl
dec
inc
loopne
pop
popa
pusha
jp
sub
je
or
fwait
and
sbb
adc
mov
adc
xchg
jno
and
lcall
insb
jo
repz
mov
add
leave
bnd
mov
popa
cmp
xchg
clc
xchg
mov
cmp
jo
push
xchg
pop
lret
xor
test
into
mov
xchg
pop
mov
mov
sub
inc
lods
stos
popf
dec
nop
scas
bswap
jns
lcall
inc
pop
lea
jp
lcall
xchg
pop
xchg
movsl
pop
lret
xchg
inc
xor
insl
push
icebp
int
push
call
js
xor
xchg
lds
xor
inc
or
pop
mov
jnp
jo
sub
xchg
xchg
aaa
push
xor
add
pop
jns
ret
mov
xchg
adc
and
cmpsl
icebp
push
in
inc
aas
pop
insl
sub
shll
inc
cli
inc
lret
jnp
jmp
clc
popa
xor
divb
adc
out
cmp
add
lret
xchg
add
test
mov
mov
xor
dec
sub
dec
daa
repnz
mov
mov
push
sbb
sbb
xor
mov
fdivs
cmp
cmp
xor
je
pop
ret
pusha
jb
adc
jno
xchg
pop
out
decb
dec
iretw
mov
fisubs
cwtl
sar
adc
mov
aas
setb
movsl
dec
out
in
je
fdivs
stc
fiaddl
push
test
sbb
xlat
sub
ja
cmp
jge
in
add
jno
jl
add
add
pop
insl
xor
lock
mov
ret
mov
int3
mov
add
repz
add
repnz
cmp
aad
mov
dec
jl
test
push
ljmp
sub
int3
xchg
rorl
mov
mov
adcb
scas
loop
xorb
push
adc
adc
adc
popa
mov
lods
fadd
aad
notl
sub
mov
jmp
inc
insl
mov
xor
ret
mov
test
cmc
sbb
mov
sub
fisubs
or
mov
hlt
aam
cmp
push
and
shlb
and
scas
add
sub
mov
xchg
test
jmp
lock
dec
movsb
jnp
add
sbbb
xor
push
stos
das
mov
adcb
mov
adc
mov
mov
outsb
scas
fcmovbe
sub
xor
in
jbe
xlat
push
or
push
or
jl
xchg
popf
push
loop,pt
dec
test
data16
sub
jmp
fistpl
ret
int
sar
aas
stos
adc
mov
test
js
insb
inc
jbe
dec
addr16
inc
push
out
jbe
push
cmp
pop
sub
std
addr16
push
or
sbb
fnstcw
cli
sbb
shr
inc
lret
xchg
xchg
imul
lods
mov
inc
call
cs
jae
mov
imul
dec
rclb
lret
push
out
mov
mov
adc
daa
jnp
pushf
push
repnz
or
mov
lods
shll
cmpsb
addr16
mov
xchg
add
ss
cmp
xchg
movsb
arpl
aaa
int
lods
orb
or
jle
lods
mov
outsb
pop
lahf
mov
cwtl
outsb
clc
jge
jmp
inc
adc
mov
lcall
sub
sub
pusha
inc
fdivl
cmp
xor
aas
mov
jb
rcll
lret
call
shrb
push
adc
inc
stc
mov
cltd
sar
movsb
push
les
mov
sar
push
or
jle
pop
jno
push
xchg
cli
popf
je
jnp
out
mov
popf
aas
insl
sbb
adc
popf
cmp
sub
add
xchg
orb
pushf
xchg
sub
mov
sbb
test
adc
add
mov
push
rcll
add
lds
notl
shrl
mov
mov
ret
aaa
cs
mov
cltd
jno
imull
push
ja
movsl
pop
sbb
xchg
call
xchg
inc
add
sbb
pop
pop
lock
jp
bnd
das
fisubl
js
adc
in
jnp
and
shrl
push
xchg
ljmp
repz
popf
mov
mov
loope
pop
xor
shrl
pop
xor
dec
sbb
jae
out
enter
fs
cmp
mov
scas
cmp
lock
inc
lock
ljmp
loopne
dec
jmp
fs
mov
mov
inc
clc
adc
lret
sbb
dec
repnz
enter
mov
in
add
sahf
fisubrl
jecxz
xchg
add
repnz
sub
jb
out
push
inc
mov
pop
push
inc
pop
and
push
sbb
in
sbb
mov
pushf
dec
dec
mov
sub
lods
cs
clc
or
ds
stos
mov
and
push
push
pop
jb
mov
jno
and
dec
out
stos
push
xor
dec
sahf
adc
lcall
aam
ret
xor
enter
lret
nop
sub
cmp
sub
mov
iret
xchg
ror
xor
add
les
aam
dec
jge
lahf
repnz
imul
mov
inc
push
dec
addr16
std
loopne
mov
sbb
xchg
fcmove
fwait
mov
inc
pop
jae
jno
cmp
in
adc
dec
push
mov
dec
pop
lods
pop
mov
cwtl
fs
add
jmp
cmpsl
mov
jo
adc
fcoms
movsl
mov
jb
jbe
in
xor
jp
mov
in
idivl
sahf
rcll
int3
dec
mov
push
div
push
sbb
push
iret
or
out
and
add
scas
call
push
or
sub
sbb
insb
test
push
or
inc
sahf
lahf
ljmp
push
ret
push
out
and
add
jmp
add
test
dec
mov
and
les
in
or
xor
fbstp
lcall
cmp
xor
cmp
fs
lods
leave
lea
cmpsl
nop
jmp
dec
dec
jae
xchg
jp
rorb
lock
aad
xlat
cli
cmp
pop
outsl
lret
enter
pusha
mov
mov
pop
dec
arpl
movsl
sti
cmpl
test
pop
jl
mov
jae
jo
jne
mov
inc
pop
push
testb
jns
leave
test
loope
push
sbb
mov
xlat
mov
int3
je
std
mov
xor
out
mov
sbb
jl
xchg
into
mov
cmp
fcomps
jmp
mov
push
xchg
and
ret
mov
adc
mov
stc
mov
outsl
add
stos
fistpll
adc
mov
out
add
add
fmuls
lock
cli
andl
jns
sub
jbe
popf
mov
xor
mov
xchg
test
jp
sbb
ret
xchg
or
push
dec
fildll
cmpsl
outsb
push
or
daa
or
cmp
test
mov
pop
hlt
ss
mov
and
xlat
out
pop
sti
out
cltd
mov
xchg
pop
mov
mov
lret
ss
into
test
or
xlat
dec
int3
fstpl
daa
hlt
es
sahf
adc
movsl
cmp
and
mov
dec
sub
in
cs
xchg
shl
lods
dec
mov
stc
jle
mov
xchg
xchg
xchg
jmp
pop
movsb
mov
fwait
add
mov
mov
dec
imul
pop
test
and
sbb
out
in
push
xorl
lea
insl
pusha
and
pop
sub
rcrl
mov
imul
negl
jecxz
pop
xchg
insl
nop
call
lds
outsb
iret
imul
or
rorb
mov
mov
and
les
adc
sub
mov
lcall
js
add
lea
and
out
or
push
movb
mov
pop
xor
mov
loope
inc
mov
jecxz
xchg
cmp
lret
pop
inc
call
lret
test
jo
mov
test
daa
dec
push
adc
mov
jo
add
pop
xchg
jle
ss
cmp
insl
pop
in
push
adc
push
jg
and
or
ret
fucom
adc
pusha
push
push
aad
xor
adc
sti
push
bound
xchg
push
jl
fmuls
jne
shl
sub
das
aaa
rolb
arpl
sahf
push
xor
and
cmp
rcrl
and
test
mov
jae
dec
pop
movl
ror
adc
inc
add
push
popa
mov
arpl
xchg
jg
pop
jmp
imulb
fs
or
sahf
pop
nop
and
fimull
mov
fcoml
or
inc
jno
sub
jmp
int3
push
fwait
clc
sbb
mov
cwtl
jnp
icebp
push
jmp
mov
out
stc
adc
popf
inc
ret
out
lods
in
mov
lcall
lret
add
push
jnp
pop
daa
divb
loopne
jns
pop
jg
inc
push
dec
sarb
dec
jge
or
adc
jo
inc
mov
mov
scas
mov
je
pop
cmp
shl
cmc
sub
repnz
adc
movsb
cmp
xchg
mov
call
fidivs
stc
push
pop
sti
xchg
dec
xchg
cld
cmpsb
mov
pop
mov
cmp
jmp
icebp
mov
icebp
jecxz
dec
movsb
pushf
or
jbe
dec
mov
call
pushf
xlat
das
ret
dec
dec
mov
imul
jmp
inc
int3
outsl
and
mov
and
push
faddl
pop
fistps
cltd
mov
mov
nop
jno
sub
sbb
ret
jns
dec
mull
push
aaa
xchg
imul
xchg
mov
xchg
rorb
mov
add
xchg
cld
cltd
sbb
xor
lds
flds
jp
xor
mov
add
adc
daa
ds
into
sti
call
out
stc
push
mov
mov
fwait
enter
std
leave
jne
xor
mov
lret
mov
mov
xor
dec
dec
push
ds
fstp
pop
clc
clc
and
lret
fwait
or
mov
cmpsl
je
inc
pushf
xchg
sub
ja
or
add
cmp
sahf
jne
pop
leave
ja
pop
out
addr16
jmp
jmp
pop
sti
cmc
in
popf
adc
push
aam
in
jmp
and
push
stos
cli
stc
push
sub
mov
rorl
pop
les
lods
pop
pop
or
inc
jge
out
repz
push
out
jmp
test
lret
mov
or
mov
xchg
pop
push
push
iret
push
in
adc
sbb
aam
psrlw
aad
fcmove
push
sar
jne
jle
adc
aas
jmp
rorb
fistpll
addr16
dec
mov
jp
lea
push
mov
jp
mov
pop
daa
mov
rcl
mov
daa
lcall
ret
pop
push
mov
pusha
fbld
loope
mov
mov
cs
gs
mov
aaa
lock
push
fisubs
cli
jmp
shll
mov
sbb
xchg
cmp
xchg
mov
mov
pop
fcomps
bound
addr16
sbb
cli
shl
or
pushf
jno
es
ficomps
stc
jnp
loop
test
in
adc
cmp
ret
inc
mov
sti
mov
adc
add
fistpl
and
arpl
stc
mov
loope
aam
fildll
fcoms
cmpsb
fistl
test
aad
jo
pop
cmp
mov
lret
popw
lret
in
in
lock
lret
pushf
idivb
xor
aam
in
xchg
sbb
ret
jbe
sub
or
cmp
dec
sbb
xor
in
push
inc
fstpt
cmovbe
loop
mov
call
in
adc
out
aam
fwait
into
in
mov
aaa
ret
out
mov
mov
lds
and
je
and
sbb
outsl
jp
sub
cmp
adc
lea
loopne
jp
sti
rclb
push
push
es
mov
sub
fidivs
je
lods
dec
inc
notl
or
jmp
mulps
push
popa
popf
in
and
popa
pop
popa
push
negl
fs
cmpsl
sub
jne
je
negb
aaa
test
test
inc
jb
scas
pop
out
insl
jne
xchg
mov
sub
fimuls
jo
cmp
push
sub
xor
adc
jns
jg
fmuls
cmp
mov
cli
add
push
mov
imul
pop
mov
xchg
gs
scas
inc
sbb
xchg
repnz
sbb
out
stc
jge
jno
mov
jo
push
aas
inc
lea
test
aad
sbb
lret
bound
fldenv
push
ds
sbb
test
idiv
sbb
mov
dec
sub
rorl
cli
mov
insb
adc
ret
es
xor
sub
daa
adc
lahf
fdivr
add
or
add
xlat
aas
xchg
lock
pusha
les
mov
mov
ljmp
push
scas
inc
inc
push
adcl
xlat
sub
push
pop
cmp
inc
int3
pop
xor
or
sbb
xor
js
xor
fnsave
pop
pop
fiaddl
xor
cmp
dec
xchg
ret
dec
adc
cmp
sti
push
and
dec
fisubrl
loopne
cs
xchg
cmovns
and
cmp
mov
push
adc
dec
jg
sbb
in
push
mov
int3
mov
fsubrs
mov
add
aad
sbb
push
sti
sti
movsb
fmull
lret
notl
addr16
xlat
hlt
call
rorb
mov
loope
fstpl
push
cmp
adc
adc
add
ret
xchg
rcrl
test
xor
aas
add
aaa
aam
pop
jmp
lods
fcomp
fdivrs
xor
xor
and
mov
push
call
add
dec
sbb
mov
or
add
lea
popf
cmpb
imul
jle
bound
inc
je
out
mov
mov
mov
test
push
xchg
cmpsl
sbb
jge
stos
add
xlat
std
stc
dec
scas
lcall
add
mov
aas
leave
jmp
mov
cmp
inc
adcl
add
dec
mov
and
je
insl
jmp
mov
jno
int3
repnz
out
sahf
js
js
dec
cmpsl
enter
or
fdivs
sub
ss
or
adcb
outsb
dec
lcall
xor
cld
aas
mov
pop
dec
or
leave
push
xlat
jo
xchg
cmp
push
dec
sub
or
fs
js
loop
mov
je
shlb
jno
xchg
mov
scas
mov
sub
push
negb
fcomps
dec
sbbl
insb
and
popa
jae
test
loope
fimuls
pop
rol
pop
out
les
sub
in
hlt
push
jno
lea
mov
mov
xor
popa
jmp
faddl
mov
cmp
jecxz
ds
movsl
mov
mov
mov
mov
dec
sub
pop
fwait
test
stc
sahf
and
std
inc
mov
mov
cmc
ja
pushf
jecxz
push
and
adc
push
cmp
mov
sbb
shll
ret
insl
mov
sti
cmpsl
sbb
xor
je
andl
aam
inc
stc
push
scas
ficoms
adc
call
fsubl
lock
lret
dec
das
add
push
das
pop
cld
insl
daa
and
sbb
add
test
mov
mov
and
xor
fstl
or
pop
icebp
inc
adc
adc
decl
mov
notl
fldcw
xchg
jb
add
js
cs
aad
mov
mov
jle
fwait
lods
adc
push
adc
js
ffreep
sbb
xchg
or
pop
inc
ljmp
lea
sarb
ljmp
jg
mov
jg
adc
test
sub
mov
int
pop
sbb
jbe
add
movsb
jbe
pop
push
les
pop
mov
fisubs
fsubrl
push
out
loopne
cmpsl
testl
mov
lcall
test
setbe
hlt
sub
movsb
pop
mov
jno
jmp
jge
mov
push
aaa
test
push
ja
mov
sarl
insl
pmuludq
fcoml
imul
jo
or
ficompl
and
scas
mov
or
inc
xor
out
push
push
mov
movsb
in
mov
fildl
mov
xor
testl
rcr
test
lret
adc
xchg
stos
adcl
mov
jno
imul
popf
outsb
cli
push
stos
cltd
xor
daa
es
cltd
jnp
popa
pop
imul
cmp
jp
mov
add
pop
fidivrl
xor
xchg
adc
pop
aad
sub
mov
dec
adc
push
push
shl
jae
xchg
pop
repz
popf
mov
adc
dec
jg
test
jns
mov
mov
rcl
jmp
popf
fdivrl
dec
xor
dec
aam
jb
lds
jo
jb
push
mov
ret
mov
cwtl
pop
inc
pop
sti
jno
xchg
xchg
ret
mov
mov
pushf
inc
push
das
cmpsb
adc
jbe
adc
push
sahf
aam
sbb
mov
add
outsl
xchg
push
or
jbe
xchg
lea
ljmp
cmp
mov
in
and
movb
or
sbb
cmp
mov
mov
mov
orl
hlt
mov
dec
lods
lret
and
cld
loope
in
add
cmpsl
lock
push
out
out
and
dec
dec
mov
sbb
ljmp
int3
int
mov
in
enter
arpl
insl
pop
push
popa
mov
fnstcw
add
dec
mov
ror
and
cld
in
xor
and
int
pop
cmp
popa
xchg
pop
dec
testb
sub
pop
jo
jmp
fyl2x
pop
insl
mov
aaa
in
lods
adc
ret
in
push
lods
mov
push
adc
push
adc
pop
iret
mov
adcb
aad
sbbb
and
jg
push
stos
insb
addr16
idivl
imul
sub
mov
push
push
sub
mov
pop
add
movsl
cmpsb
mov
loop
sbb
dec
int
movsb
or
jo
mov
aaa
mov
sub
sbb
or
or
mov
mov
lock
pop
push
xchg
jbe
fwait
push
dec
dec
in
fildl
add
or
sub
fnstcw
or
out
aas
inc
ljmp
inc
or
mov
icebp
xchg
fstps
popa
sbb
add
scas
sub
out
lcall
pop
mov
and
bound
ret
ljmp
or
jle
in
incb
movsl
in
jl
xchg
cmpsl
scas
push
push
loop
or
dec
outsb
push
cmp
mov
pop
cmp
cmpsb
ud2
lock
std
and
mov
xchg
icebp
sbb
ret
and
rol
cli
xchg
loopne
adc
jp
repz
pmullw
dec
jo
lds
sub
scas
roll
pop
cmp
sub
je
adc
inc
loope
cmp
mov
cli
jl
ljmp
test
push
lahf
aam
pop
aas
pop
push
loopne
push
adc
fldt
jecxz
xor
scas
insl
mov
inc
sub
aas
mov
mov
pushw
or
aad
push
ljmp
cltd
or
cmp
popl
xchg
lds
inc
std
rcl
mov
lahf
mov
ljmp
push
or
cld
pop
mov
cmpsb
inc
xchg
sbb
adc
shlb
xor
aaa
push
mov
mov
add
sahf
jae
sub
jno
repz
sbb
notl
filds
data16
in
test
data16
ljmp
scas
ljmp
lea
jb
inc
lods
div
aaa
enter
aad
aam
cmp
in
pop
sbb
stc
cmpsl
mov
repz
adc
pop
mov
adc
sub
movsl
ret
inc
push
ljmp
push
scas
push
jmp
xchg
outsl
sub
jnp
push
cs
in
outsl
mov
hlt
mov
pop
movq
jge
sarl
imul
mov
sbb
fs
iret
scas
lret
or
cmpsl
dec
dec
imul
cld
jb
rorb
test
push
rcrl
cmp
cwtl
xor
mov
add
pusha
sahf
outsb
add
out
pop
subl
mov
push
sbb
mov
mov
pop
lea
or
xchg
xchg
fdivrl
or
dec
mov
mov
mov
and
aaa
mov
inc
push
lea
add
jge
jmp
sbb
mov
push
out
fbstp
mov
push
push
in
lret
xchg
jg
xchg
insl
das
push
imul
mov
in
fdivrl
push
std
lret
add
andb
add
imul
sub
pop
aam
or
pop
das
enter
cwtl
adc
inc
xor
cmpsl
fdivr
into
pop
retw
sub
xchg
adc
cs
fsub
push
shr
pop
jns
addr16
mov
lcall
xor
jns
jl
and
js
push
xchg
pop
adc
iret
popf
xor
imul
popf
mov
lret
or
or
and
push
xchg
push
pop
adc
in
imull
adc
das
cmp
jne
lock
lods
mov
arpl
sub
push
inc
decl
cmp
aad
xchg
sahf
pop
cli
es
inc
popf
pop
testl
mov
movsb
or
pop
divl
iret
add
push
mov
pop
ja
rcl
insl
mov
vmread
sbb
dec
lret
imul
out
out
mov
adc
mov
rcr
cli
lret
dec
add
int
dec
or
sub
in
jp
dec
fs
push
adc
inc
cli
jb
rorl
movsl
stc
clc
inc
lcall
loope
ret
cmpsl
rcr
fld
cli
cmp
add
ljmp
dec
add
pusha
or
rcll
add
outsb
jl
mov
movsb
dec
sbb
sbb
shl
lods
mov
push
mov
push
and
pop
enter
push
sub
pop
jle
xor
ficoms
adc
shl
stos
cmp
outsl
dec
daa
lcall
int3
cmp
lock
and
subb
pop
inc
out
pop
xor
lahf
xchg
push
sbb
push
inc
and
aad
mov
xchg
ret
test
and
xchg
push
fs
enter
shll
pop
int
pop
ficoml
or
ret
xchg
aaa
jecxz
pop
pop
mov
inc
