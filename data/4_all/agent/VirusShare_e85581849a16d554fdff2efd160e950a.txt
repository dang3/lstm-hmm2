or
add
push
push
je
imul
repz
in
lock
hlt
clc
jns
iret
in
jo
mov
pop
push
dec
bound
outsl
imul
pop
sbb
loop
jae
gs
mov
adc
outsb
sbb
popa
arpl
add
dec
add
inc
add
dec
addl
testl
aas
call
int3
int3
mov
out
out
mov
xchg
shrl
or
adc
adc
fucomp
cmpw
or
or
out
dec
add
cmp
int3
dec
fmull
push
lea
mov
jmp
vmread
in
in
jo
nop
in
in
push
in
in
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
xor
mov
pushf
cwtl
and
in
in
mov
test
in
in
adc
push
add
mov
pop
rclb
add
imulb
je
movzwl
fmull
fisttpl
ret
addr16
dec
inc
sahf
pushf
add
pusha
clc
hlt
cld
fistpl
lock
push
mov
add
push
fldcw
add
jne
xor
pop
enter
mov
out
add
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
fnstsw
mov
push
nop
mov
add
scas
mov
mov
xchg
call
test
xchg
mov
mov
mov
or
adc
fistpll
mov
aaa
push
mov
push
or
ljmp
xor
cmp
or
push
mov
mov
mov
mov
in
mov
rcrl
mov
add
xor
push
or
ret
and
add
inc
mov
or
iret
mov
stc
inc
add
adc
or
cmp
add
loopne
mov
sub
cmp
add
jo
pop
pop
push
fbstp
fucomi
sti
mov
xchg
cmp
jb
into
add
call
ja
ficompl
sbb
sub
mov
ret
jmp
pop
mov
add
pop
mov
sub
sub
jbe
imul
pop
push
sub
mov
lock
aam
mov
jmp
sbb
scas
sbb
sti
jne
loop
dec
rcrb
pop
and
mov
cmp
cmp
add
mov
repnz
int3
push
push
xchg
add
add
and
push
jg
ss
lock
pushl
sarl
dec
fadds
mov
dec
shl
sti
jbe
js
mov
callw
add
push
lahf
push
lods
push
movsl
jne
icebp
push
push
addb
xchg
dec
pushf
cmpl
in
mov
popa
clc
ret
fucomip
mov
mov
or
add
mov
call
faddl
lds
mov
push
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
rcr
addr16
sub
sbb
xlat
sar
je
or
or
add
ret
jno
and
cmp
in
or
addr16
ljmp
sbb
lds
sbb
or
adc
hlt
outsl
movq
ljmp
sbb
loop
mov
xchg
sub
mov
pop
popf
cmp
pop
cmp
add
and
mov
cmp
lods
cmp
testb
ss
jbe
scas
adc
xchg
push
outsl
sub
push
push
cmpl
sbb
mov
cmp
pop
jo
mov
add
xor
jmp
pop
xchg
ljmp
inc
mov
or
cmp
jae
mov
cmp
jae
add
add
add
sarl
es
adc
ja
in
jge
idiv
mov
aas
or
add
repnz
shlb
mov
idivb
inc
xlat
mov
push
and
in
mov
inc
cltd
inc
ds
adc
jne
push
pop
add
xlat
ds
push
and
cmp
pop
movsl
and
pop
jge
push
push
and
sahf
ds
pop
mov
cli
jl
fcompl
je
cmp
ds
mov
pop
add
stos
decl
cmp
je
xor
lea
or
mov
mov
add
fcoms
lcall
lea
fsubr
add
test
xchg
jmp
xchg
mov
jne
xchg
cmp
not
push
scas
movsb
lds
sub
faddp
add
inc
popf
adc
adc
xchg
lea
cmp
lock
mov
jnp
pop
push
lock
jae
mov
xchg
jle
out
rorl
popf
mov
in
add
pop
push
test
je
imul
scas
dec
or
or
adc
xor
or
adc
ja
jmp
push
addl
pop
sbb
sti
ja
mov
push
pushl
mov
push
mov
add
cmpb
and
adc
push
push
test
xchg
mov
or
sarl
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
loop
xor
mov
in
sub
push
dec
pop
xchg
test
or
adc
sub
add
or
in
out
mov
mov
fs
mov
add
outsl
push
push
mov
sub
sbb
xchg
and
loopne
pop
mov
push
cmp
adc
sub
or
or
pop
adc
test
jns
add
sar
test
testb
das
sub
sub
or
mov
sub
cmp
shll
and
out
fisttps
or
mov
cmp
incl
pop
lea
xchg
lea
or
fdivr
cli
adc
add
xor
sbbb
fstpt
or
mov
and
add
sub
cld
mov
jg
add
shrl
lock
or
push
or
push
rolb
aas
leave
mov
fcoml
and
popf
inc
jns
push
xor
adc
je
jmp
fisubl
aad
lods
enter
ret
aas
add
testl
dec
jb
sub
cmp
cmp
sbb
cmp
sbb
fisubrs
jp
fdivs
add
mov
jge
mov
add
and
repz
bound
dec
adc
pop
adc
xchg
lret
add
dec
jl
jo
push
jo
dec
xorb
or
lea
sub
cld
jg
clc
sub
pop
push
inc
sub
cmp
jge
mov
lock
out
call
cld
lea
mov
pusha
sti
and
in
mov
aad
lds
clc
add
adc
stos
mov
sub
jp
mov
mul
or
xchg
std
jmp
pop
iret
mov
add
sub
mov
lret
adc
jl
ret
nop
hlt
je
out
cmpsb
adc
mov
cmp
jmp
repz
mov
inc
adc
push
pop
add
sub
cmp
jl
mov
pop
mov
add
pop
adc
xor
sub
adc
or
push
in
push
cmp
daa
or
adc
push
push
or
outsb
mov
fistps
ret
lea
movsl
movsl
mov
dec
push
or
xlat
imul
mov
cmp
pusha
push
clc
xor
mov
inc
push
adc
repz
pop
addr16
cwtl
sub
sub
inc
add
loope
subl
cmp
mov
adc
loopne
mov
lcall
sbb
push
add
pop
inc
scas
or
adc
rol
popa
nop
les
fwait
or
clc
add
jo
inc
adc
jne
jmp
fcoms
stos
ljmp
push
loope
sbb
or
mov
pop
movd
lds
push
lods
jg,pn
pop
mov
pop
je
sub
fnsave
jmp
sub
dec
add
jae
sbb
loopne
jle
mov
adc
jne
movsb
sub
cmpl
xchg
jbe
adc
inc
add
xor
aad
loope
sub
xor
jmp
jmp
movsb
adc
and
mov
stos
jle
jmp
repnz
jne
xor
jge
pop
pop
xor
stos
inc
and
sbb
sbbl
pop
sub
clc
stos
jle
inc
cld
stc
pop
incb
jbe
jecxz
leave
push
push
mov
sub
ret
pop
or
sti
mov
mov
test
jg
dec
test
or
sbb
jl
movb
pop
inc
scas
shlb
push
add
sub
mov
jmp
mov
mov
inc
pushf
or
cmp
add
inc
or
jbe
jmp
bswap
sbbb
sbb
ja
dec
sub
mov
add
arpl
sbb
sti
loop
xor
insb
ds
fcmovb
push
xchg
and
ljmp
sbb
push
dec
xchg
mov
out
scas
jae
test
jo
mov
enter
and
insl
negb
mov
test
jne
test
ja
decl
movnti
or
add
loope
push
or
add
cmp
or
into
jge
lods
inc
nop
or
cmp
mov
add
in
xor
mov
cmp
pop
mov
js
in
andl
add
fisttps
js
jg
mov
test
je
inc
cli
scas
or
testl
jmp
mov
cmpl
mov
mov
or
aad
add
sbbb
shll
sbb
pop
rcrl
cmp
and
jg
rcll
out
mov
mov
sub
jge
loope
add
aad
mov
lock
cmp
mov
pushf
movb
sbb
notb
pusha
adc
mov
hlt
adc
inc
sub
dec
das
negl
add
pop
das
cmpsb
mov
or
sbb
mov
push
pop
fimuls
fmuls
and
or
mov
sub
pop
jecxz
andl
fmul
imulb
xor
dec
daa
cli
call
inc
lahf
add
faddl
lcall
addl
fbld
movsb
les
add
push
sbb
xchg
push
mov
push
pop
pop
pop
ffreep
mov
loop
sub
or
and
or
cmp
lret
cmp
xchg
ret
les
cmpsb
jmp
add
subb
or
rolb
xchg
in
or
sbb
xor
dec
push
call
cmc
adc
inc
movhps
lcall
mov
adc
mov
jmp
out
adc
ret
fildl
add
jge
aam
inc
adc
hlt
nop
push
push
lock
xor
cmp
or
cmpsb
test
jle
call
dec
jo
push
or
xor
mov
in
add
je,pt
je
sarb
add
xor
sbb
enter
imul
mov
ret
push
jmp
push
xor
add
jl
jns
adc
repz
xchg
mov
add
les
jo
mov
nop
popa
inc
jecxz
cmp
lods
adc
or
cwtl
add
rdpmc
ja
lock
ja
mov
mov
inc
mov
cld
loop
les
loopne
sub
rol
push
mov
xchg
fists
jne
mov
divb
rclb
call
add
jp
jmp
ret
nop
js
leave
push
fmull
push
je
ljmp
das
mov
cmp
jg
sub
inc
or
adc
sarl
mov
inc
repz
jmp
mov
leave
jmp
mov
jmp
mov
push
addr16
mov
pop
xlat
ficoml
jmp
or
jno
pushf
outsw
cmp
outsb
cmp
pop
pop
pop
mov
ret
ja
or
ret
sarb
rep
fiadds
mov
fwait
loopne
je
cld
lea
xor
std
xor
sbb
es
ds
pop
insl
xchg
in
repnz
mov
or
cmp
fucomip
clc
jbe
cmpb
push
cmpb
add
out
in
mov
jmp
cmp
daa
insl
imul
push
shrb
roll
ljmp
call
lcall
mov
ja
lock
xor
mov
xor
jmp
decl
gs
mov
mov
inc
inc
test
mov
ja
shl
pop
ds
sbb
into
test
clc
aas
or
adcl
divb
push
push
stc
jne
add
aam
enter
jmp
and
sar
sbb
data16
push
jbe
fbld
dec
jmp
mov
adc
dec
sub
inc
adc
inc
imull
jl
data16
sub
dec
sub
sbbl
add
sbb
jmp
cmp
pop
cmp
and
loop
jp
cmp
ret
out
aaa
mov
sbb
pushf
fistpll
divb
das
or
and
mov
adc
jne
call
rol
mov
and
sbb
sti
dec
ror
or
mov
movsb
mov
shl
data16
fnsave
rep
adc
aaa
jge
call
xor
mov
push
out
sti
stos
inc
add
je
mov
or
je
or
je
fmulp
int
and
je
pop
je
xor
dec
std
mov
inc
xchg
add
sub
jne
mov
cmp
ja
lea
add
add
push
out
int
or
ljmp
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
andnps
popa
jb
xchg
and
insb
push
adc
or
or
cwtl
pop
xor
mov
bswap
xchg
sbb
push
repz
test
sbb
push
jecxz
add
test
inc
lea
mov
and
lea
fldt
call
pushf
pcmpeqb
inc
sub
push
inc
fucomi
push
cli
xchg
jge
mov
xor
sbb
out
fwait
cs
stos
fstp
fldt
bound
adc
out
mov
cmp
adc
mov
daa
lahf
jl
cli
or
or
ret
and
stc
enter
xchg
cwtl
push
and
inc
in
out
sbb
xchg
and
inc
mov
mov
jl
movsl
aam
pop
mov
sub
test
push
jle
and
mov
adc
xor
leave
sbb
jle
cs
jbe
imul
cmp
mov
mov
aaa
jmp
jg
lods
lods
inc
cmpb
xlat
fadds
outsb
dec
mov
xchg
push
or
push
push
int3
into
sbb
rorl
jmp
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
sub
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
xlat
lret
and
neg
add
push
cmp
clc
pop
jne
push
pop
and
pop
push
xor
mov
daa
test
mov
or
inc
cld
push
push
test
nop
push
inc
les
dec
xor
push
push
loope
push
xor
movl
data16
rcr
repz
sub
andb
lcall
and
add
mov
push
fs
pop
aas
or
mov
fists
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
inc
ret
push
dec
popa
jae
push
popa
insb
jne
fninit
fldcw
xchg
mov
lcall
xlat
mov
xor
mov
inc
xchg
or
mov
add
jnp
in
das
xor
rcrb
loopne
aaa
and
or
push
push
dec
add
outsl
test
jbe
sarl
push
movups
add
xchg
xchg
ret
xor
and
pop
mov
or
push
cld
loopne
pop
mov
stos
mov
xor
push
shr
dec
rep
pop
jl
ficompl
mov
mov
sub
pop
fdivl
add
sbb
in
cmp
je
pop
mov
add
jae
ret
sub
push
mov
mov
push
sbb
jne
jne
rorb
insl
das
lods
mov
mov
jbe
clc
cmp
cmpsl
sub
xor
jb
inc
xchg
mov
jb
adc
jb
jo
aad
pcmpeqd
and
jmp
pusha
and
add
add
jo
nop
dec
dec
xchg
mov
xorl
clc
adc
mov
sti
adc
fstpl
sub
and
pop
out
mov
xor
add
mov
sub
and
push
mov
push
add
pop
lea
sub
ret
jmp
pop
faddl
dec
setne
dec
pop
mov
xchg
xor
rorl
pop
mov
outsl
pop
and
mov
cmp
jne
jb
cmp
jne
push
or
aaa
or
or
push
inc
cwtl
popa
sbb
inc
fcoml
imul
and
add
xchg
cmp
int3
test
stos
movb
add
nop
outsl
sub
push
add
repnz
je
pop
mov
in
pop
pop
add
sub
mov
pop
notb
add
pop
pop
mov
out
outsb
sbb
shr
mov
jne
mov
cmp
aaa
iret
pop
push
cld
xor
call
pop
data16
pop
adc
icebp
pop
inc
pop
je
jmp
sbb
push
push
stos
jl
pushf
hlt
xor
ss
push
jle
mov
mov
mov
movl
or
sbb
push
pop
jno
test
sub
or
push
mov
push
cli
push
movsb
mov
pop
adc
push
clc
inc
scas
cs
xlat
sbb
sbb
jmp
add
and
pop
pop
out
cmpb
mov
jbe
rol
cli
in
push
call
jae
aaa
movsb
pop
push
pusha
push
push
cmp
rcr
mov
orb
iret
add
jb
loopne
scas
pop
push
push
in
dec
cmp
cld
sbb
jmp
subl
inc
jmp
add
mov
sbb
mov
inc
push
adc
or
pop
mov
adc
test
adc
add
adc
inc
add
jne
mov
inc
mov
dec
adc
outsb
cld
sub
in
shrl
adc
je
mov
call
enter
cli
out
push
je
in
add
imul
and
loope
cwtl
outsb
je,pn
clc
add
stos
outsb
into
adc
cmc
enter
adc
jne
push
jne
push
int3
cld
xorl
fidivs
dec
add
popa
xchg
inc
adc
sbb
jo
sarl
sub
orl
out
push
jle
scas
mov
mov
pop
add
inc
add
dec
aas
sub
stos
addr16
jmp
imul
div
inc
mov
mov
pop
sbb
jo
aam
xor
fdivrl
clc
pop
je
mov
inc
add
sub
or
and
rorl
mov
mov
arpl
pop
push
push
push
push
push
addl
add
xchg
sahf
fldenv
inc
add
mov
pop
xor
dec
mov
or
pusha
add
sbb
or
aam
xchg
stos
inc
or
adc
orb
adc
jae
add
push
push
je
ret
push
insl
dec
jmp
ret
fisubl
sub
or
les
das
ja
add
add
pop
cmp
push
sub
mov
cmp
pusha
add
call
mov
push
cmp
sub
adc
ljmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
sbb
into
jmp
mov
or
or
lret
jmp
jne
push
xchg
push
or
pop
dec
or
mov
test
xchg
jnp
pop
push
jg
jno
stos
lcall
ss
push
hlt
jg
cwtl
cmp
push
adc
inc
sbb
cli
inc
adc
inc
push
stos
fcmovnbe
sti
and
or
xor
popf
sbb
or
jo
push
cltd
xor
scas
pop
xchg
jb
or
test
or
sub
sbb
dec
cmp
mov
dec
idivb
cmp
je
cmp
jne
and
popl
xor
dec
lods
adc
push
jo
push
jle
test
jle
dec
mov
inc
fiadds
pop
mov
and
repz
imul
push
add
scas
pop
xchg
mov
mov
xchg
stc
sbb
fidivrs
repz
subb
add
inc
mov
jg
mov
movl
sbb
cmp
lcall
mov
mov
movsb
aas
xor
in
movb
or
mov
lea
cmp
push
je
push
adc
add
inc
stos
jge
scas
mov
jmp
pop
decl
xchg
cmpsb
std
add
mov
dec
or
sarb
pop
dec
mov
add
xchg
cli
pop
rol
rcrb
and
ja
and
mov
es
mov
xchg
mov
push
shl
mov
xor
push
fiadds
out
mov
xchg
rolb
ja
pop
pop
sbb
adc
ja
add
mov
mov
mov
mov
cltd
hlt
lods
sbb
cmpl
cmpl
fcompl
pushf
dec
scas
inc
xor
push
push
push
fsubs
jl
add
cmp
jbe
pop
ret
mov
outsb
jbe
push
pusha
adc
cmp
add
or
sbb
mov
loopne
cmpb
push
cmpl
adc
jl
test
call
out
dec
lds
jae
xor
cwtl
test
loopne
daa
push
hlt
in
loop
icebp
pop
call
sub
jbe
rcll
pop
aas
arpl
jp
add
rcrl
push
or
cmp
je
es
insl
into
movsl
xchg
out
mov
or
add
adc
mov
cmpl
pop
and
cmc
pop
mov
adc
push
pop
sti
je
mov
sub
mov
sbb
add
push
inc
jo
xchg
das
mov
ljmp
adc
decl
push
lea
sahf
xor
sbb
out
jb
out
mov
push
sbb
add
or
or
and
jne
out
out
aad
fbld
inc
jg
mov
mov
scas
fldcw
pop
hlt
pop
pop
jmp
jbe
xchg
pop
in
mov
xchg
xchg
jle
popa
ret
das
test
rorb
push
ret
pop
movw
fwait
lcall
in
and
cs
cwtl
mov
mov
pusha
inc
xor
fimull
ds
rcrb
mov
idivb
and
push
push
push
mov
push
push
adc
test
mov
negb
out
aaa
sbb
add
cmp
cld
leave
pushl
bound
jg
cmp
jmp
lea
cmp
movsl
pop
mov
push
fiaddl
mov
mov
jne
lods
cmc
mov
rcrl
fidivl
sbb
add
cmp
clc
dec
call
loop
aas
pop
hlt
sbb
mov
nop
xor
ret
cmp
adc
or
dec
add
add
lret
std
jbe
xorl
add
jmp
iret
cmpsl
pop
sub
and
pop
pop
or
out
adc
addr16
in
add
jae
ja
mov
inc
xchg
nop
push
pop
test
xlat
adc
scas
test
pop
add
pop
pop
stos
clc
mov
xor
jl
mov
inc
cld
ret
xor
jbe
test
pop
incl
cld
add
cmp
lods
lods
cmp
adc
jle
dec
and
and
hlt
or
out
and
jmp
xchg
pusha
cmp
je
cmp
dec
mov
add
das
sub
sbb
sub
sub
rorl
add
inc
jg
fmuls
lds
push
sbb
pop
push
outsb
ss
clc
mov
cmp
sahf
mov
or
cmpsb
xor
inc
xchg
adc
or
xor
push
subl
add
sub
add
cmp
sbb
dec
jne
mov
test
mov
and
aaa
add
loope
hlt
loopne
jmp
and
inc
pushf
sbb
jmp
into
pop
dec
jne
mov
je
dec
jbe
int3
add
scas
and
lea
jmp
testb
rolb
or
push
imul
shlb
add
push
shr
es
loopne
mov
mov
cmp
jne
dec
je
fadds
sbb
add
loop,pt
push
adc
cmpsb
jmp
and
and
inc
xchg
adc
sti
pop
cmp
jne
or
mov
outsb
and
shr
shr
aam
fs
ficoms
or
jmp
sbb
push
push
aas
enter
clc
inc
out
stos
inc
mov
add
shlb
je
push
lods
pop
ss
das
mov
adc
dec
inc
es
mov
adc
xor
inc
das
xor
sar
std
pop
sub
es
jl
cmp
jge
sub
adc
jb
adc
cmp
xor
jmp
mov
jmp
and
je
cmp
int3
inc
aas
inc
out
je
xor
sub
jge
pop
icebp
xchg
mov
mov
add
stc
add
lea
shl
popa
pop
inc
dec
movsb
push
push
cli
mov
jo
repz
jbe
inc
mov
pop
std
mov
push
mov
js
mov
inc
nop
jle
sbb
loopne
pop
adc
mov
cmp
adc
pop
jle
mov
mov
add
pop
nop
aam
loop
clc
sbb
lods
and
sub
in
shlb
loopne
je
sub
lds
xchg
sbb
sub
loopne
notb
xlat
arpl
cli
cwtl
cmp
jl
pusha
xor
and
ret
push
add
xor
sub
xchg
cmpsl
xchg
push
jo
push
push
das
pop
pop
mov
pcmpgtw
loopne
rorb
cmp
or
test
mov
mov
pop
xor
xor
jmp
pop
repnz
push
pop
enter
in
push
xor
or
cmp
sub
sub
push
loope
jno
das
int3
pop
pop
pushl
mov
addb
cwtl
and
xchg
pop
add
add
dec
leave
insb
push
aas
add
add
inc
pop
stos
or
shr
fbstp
test
push
push
inc
sbb
ss
aad
pop
add
data16
sbb
and
pop
das
or
pop
pop
lahf
mov
test
add
push
or
push
cmp
jge
pop
dec
cmp
jbe
sbb
sub
cmp
cs
clc
loope
lods
add
add
cmpb
nop
xchg
pop
sub
outsl
xorl
pushf
pop
stos
incb
ret
fisttpll
adc
xchg
pop
ja
or
push
mov
dec
lea
jl
aaa
popa
adc
xor
mov
cli
or
es
push
xchg
jg
dec
or
and
aas
or
cmp
arpl
call
incb
dec
loopne
or
call
dec
pop
mov
cmp
je
cmp
je
cmp
in
std
push
in
jg
or
je
cmp
pop
aam
adc
dec
mov
lcall
rcr
cmp
lret
cmp
xchg
xor
es
pop
insb
pusha
inc
add
test
repz
push
mov
mov
jmp
add
dec
mov
fstp
mov
cmp
mov
sub
jae
xlat
sub
sbb
loopne
int3
cmp
cmp
icebp
jmp
push
seta
adc
cmp
ljmp
rorb
mov
outsl
cld
les
push
push
add
sarl
sbbl
ret
pop
xorl
mov
cmp
xor
pop
pop
xorl
or
ror
xor
adcb
dec
mov
bound
leave
or
cld
sub
in
popa
jnp
jmp
and
and
lea
test
xor
mov
mov
add
inc
dec
clc
or
fimuls
xor
aas
add
sarl
int3
inc
push
imul
mov
nop
adc
and
cmp
ss
dec
test
loopne
jne
add
dec
xchg
mov
xchg
dec
adc
inc
jle
mov
in
pop
sub
jge
je
and
mov
xor
out
sub
xlat
mov
dec
xor
sub
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
vpmaxsw
add
add
inc
ljmp
mov
lcall
add
je
cmp
dec
iret
dec
cmp
or
adc
popa
or
ret
or
sub
pop
xchg
pop
clc
xor
mov
dec
cmp
or
and
mov
dec
fs
add
sub
or
ret
iret
cmp
or
ud0
cmp
cmc
mov
dec
and
push
loopnew
mov
clc
cmp
je
pop
add
or
in
pop
or
cmpsb
pop
mov
adc
out
cmp
xor
cmp
into
lock
outsb
push
push
inc
add
or
sbb
call
mov
testb
insl
call
xor
inc
call
or
andl
lock
jne
mov
cmp
sbb
mov
xchg
add
loope
loopne
mov
sub
add
in
loopne
pop
add
or
xchg
in
jge
out
out
xor
mov
push
in
test
aaa
mov
in
push
or
sbb
stos
inc
sbb
dec
push
dec
shll
fldl
xrelease
mov
xor
lahf
loopne
adc
cmpl
jle
add
push
call
ror
sub
ret
ficoml
scas
lock
push
dec
bound
enter
mov
cmp
adc
scas
xchg
add
outsb
mov
sub
lock
jne
into
pop
pop
xor
mov
in
push
mov
les
cmp
pop
dec
sub
sbb
sbb
dec
jnp
fldcw
push
push
dec
loopne
lock
out
pop
pop
mov
ss
das
lods
lock
in
sbb
adc
test
inc
ret
jne
mov
lods
sbb
jge
mov
and
jnp
jne
outsl
das
mov
jae
loope
loopne
mov
cmp
mov
test
inc
adc
rclb
mov
add
xor
cmp
mov
call
repz
dec
mov
aam
ret
jmp
cmc
add
test
out
pop
pop
mov
gs
clc
push
jbe
sbb
pop
fcompl
xchg
lret
inc
push
in
push
fimuls
push
cli
das
pop
test
cmp
call
inc
mov
mov
lods
add
outsb
sbb
xlat
loopne
vmread
pop
adc
jl
mov
lret
cmpb
testl
and
add
add
mov
lea
mov
sbb
cmpsb
sbb
rolb
roll
cli
dec
jg
lahf
mov
imul
lods
out
cli
fs
and
je
movsb
shl
adc
push
ja
out
out
fadd
inc
cmp
test
sub
dec
scas
insl
ret
mov
push
mov
daa
sub
cmp
lahf
test
daa
sbb
ret
imul
call
gs
xor
cs
insb
dec
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
push
lret
insl
gs
daa
outsl
loopne
mov
sub
jecxz
out
inc
out
fldenv
mov
and
push
rorb
dec
xor
fs
xchg
and
in
jo
cmp
dec
popa
xor
aaa
cmp
or
imul
mov
push
out
push
jmp
int
aas
addl
cmp
add
lods
dec
inc
mov
and
pop
pop
rcrl
add
fdivrl
xor
cmpb
jmp
call
rcll
adc
sbb
test
cli
add
cmp
stos
pop
cmp
jne
adc
fstpt
sub
sub
roll
sbb
add
xlat
pop
cwtl
arpl
inc
xor
outsl
repz
insb
ret
xor
cmc
add
dec
clc
mov
data16
popa
jb
stos
fnstenv
jg
arpl
gs
aaa
pop
lods
sbb
ds
add
dec
mov
add
add
xor
mov
daa
pop
mov
push
sarb
mov
mov
mov
cmpb
clc
jp
mov
lock
add
jge
mov
mov
dec
or
daa
push
mov
push
push
xor
inc
or
dec
mov
push
dec
add
pop
dec
xchg
mov
jo
ret
mov
pushf
xor
push
adc
mov
mov
dec
stos
out
mov
cmp
cs
iret
or
aad
jmp
mov
inc
movsb
push
mov
cmp
jne
dec
fs
push
ljmp
rcrb
mov
or
inc
mov
push
add
inc
loopne
mov
or
jo
dec
push
inc
jno
and
sahf
je
sbb
sarb
adcb
lds
or
dec
or
das
mov
sub
push
sub
ret
dec
js
rorb
in
fs
mov
mov
js
inc
fbld
or
ret
adc
addr16
add
cmp
mov
in
mov
divb
leave
or
adc
movzwl
inc
cmp
ja
mov
inc
jmp
cmp
adc
lea
cmp
ja
fcmovb
jmp
or
mov
xor
sbb
and
lret
inc
loop
xor
and
and
and
sbb
in
dec
pusha
rolb
dec
lock
je
or
cmp
jb
or
dec
movb
addl
and
sbb
add
pop
add
cmp
lea
ret
add
pop
mov
hlt
mov
mov
adc
fldl
push
mov
cmp
pop
inc
in
loopne
mov
or
inc
test
je
or
jae
inc
sub
aas
and
je
cmp
adc
into
ja
addl
cmp
idivb
add
cwtl
and
or
mov
pop
hlt
ffreep
mov
cld
mov
sub
pop
and
push
adc
inc
lcall
clc
xorb
adc
dec
cmp
movl
mov
ret
scas
imul
xor
es
mov
xorb
sbb
or
dec
sbb
jb
inc
sbb
sub
int3
mov
imul
ret
loope
test
pusha
je
xchg
or
leave
adc
lea
in
lahf
imul
sub
aaa
test
leave
inc
das
and
pop
ret
or
fcom
dec
outsl
jmp
adc
add
or
and
imul
addb
add
fadds
repnz
pop
jl
in
add
and
sub
inc
lods
inc
or
xchg
and
cmp
inc
negl
aaa
test
xor
inc
pusha
lahf
popa
sbb
test
add
dec
cmp
cmpsl
sbb
jge
push
add
cld
fisubl
fld
ja
jo
or
dec
sub
xchg
push
ja
dec
cli
dec
ds
push
lock
push
push
lea
push
push
pop
gs
and
rorb
orb
je
out
mov
xchg
leave
nop
bound
cmp
xor
add
daa
jg
lss
push
incl
dec
pop
add
or
out
fdivs
jns
push
or
cmp
fsubrl
test
sbb
xor
add
ret
jl
insl
xor
push
add
in
dec
call
inc
adc
lahf
fldenv
dec
mov
adc
push
in
daa
fcomps
dec
add
cmp
jl
mov
sbb
cmp
jbe
jae
lds
mov
out
test
add
and
ja
out
push
ja
mov
les
xor
rorb
mov
push
push
pop
pop
outsb
mov
adc
jmp
xor
ud0
cmpl
pop
adc
lcall
je
xlat
jge
or
mov
sub
mov
leave
jne
mov
imul
push
pop
add
mov
push
mov
mov
sub
cmp
arpl
inc
hlt
mov
mov
sub
movsb
or
mov
jge
daa
hlt
das
pop
and
dec
fs
sub
faddl
or
sub
inc
xor
xchg
insb
fs
mov
in
paddusb
cmp
cmp
aam
int3
pushf
pushf
mov
bound
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
popa
clc
hlt
lock
movsb
pop
test
mov
pushf
cwtl
xchg
enter
into
inc
dec
pop
jo
fs
push
push
pop
jo
inc
xor
xlat
outsl
je
je
lods
sbb
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
orb
mov
rolb
add
aam
hlt
es
lea
aaa
cli
outsb
aaa
push
xchg
lods
pop
push
add
or
js
gs
imul
aas
adc
jb
stc
into
pushf
pop
adc
push
inc
dec
gs
daa
pop
in
mov
mov
lods
mov
add
jmp
dec
jne
dec
dec
gs
outsl
jb
or
push
jbe
pop
mov
outsl
mov
or
outsb
mov
push
xchg
imul
xor
sahf
pop
mov
insb
scas
mov
xor
cltd
dec
adc
or
in
pop
ds
or
sbb
scas
pop
and
or
nop
mov
jns
gs
enter
repnz
outsb
and
and
mov
insb
outsl
ja
or
pop
mov
mov
inc
inc
push
dec
aam
nop
leave
xchg
mov
pusha
divb
push
or
imul
inc
or
ds
mov
jle
test
test
rcll
scas
fsubr
fs
xor
scas
push
adc
adc
pcmpeqd
or
push
outsl
imul
je
aas
or
ja
jl
test
je
in
cli
or
mov
inc
and
ljmp
jl
and
xchg
adc
arpl
push
loopne
push
jae
push
adc
inc
fiaddl
push
aas
push
lods
xchg
push
jb
insb
gs
nop
add
fs
outsl
rorl
sarl
push
inc
push
je
arpl
nop
pop
mov
jo
jb
or
je
mov
inc
mov
ds
push
push
push
popa
sbb
nop
sbb
aas
adc
inc
mov
shll
lds
popa
fsubl
mov
jo
bound
xor
jb
jns
int3
mov
xor
mov
xchg
mov
data16
pop
aas
or
pop
mov
icebp
stos
xchg
push
fists
popa
gs
or
cwtl
jle
add
add
loop
xor
pop
dec
invd
cltd
push
insb
sbb
jae
mov
inc
and
add
and
addr16
inc
in
push
daa
xchg
push
mov
adc
jb
popa
movaps
outsl
les
int3
pushf
fstl
jecxz
rcl
movsl
push
jl
lea
pushf
sbb
aas
call
inc
adc
imul
cmp
repz
push
pop
popa
mov
push
mov
jnp
sbb
push
loopne
sbb
mov
push
jp
xchg
mov
inc
repz
jne
push
mov
jmp
jne
call
lods
andb
outsb
arpl
cmp
fdivr
mov
shr
div
pop
inc
mov
add
pop
jg
cmp
lret
mov
mov
mov
or
cmpb
mov
fsts
xor
or
loop
xor
movb
arpl
test
jg
mov
test
add
push
cmp
ja
sub
mov
lret
clc
mov
inc
inc
dec
sub
mov
inc
sarb
inc
pop
add
ret
in
push
push
or
or
push
cld
mov
cmp
jbe
psubsw
cmpsb
je
mov
or
clc
push
imul
push
decl
in
mov
je
movzbl
add
sub
pop
add
sbb
ss
ljmp
pop
or
xchg
add
pop
push
sarb
jl
add
add
inc
jbe
sbb
mov
bound
rcr
add
adcb
sub
loope
mov
lock
sbb
jl
cmpb
jbe
adc
or
aas
insl
pop
dec
sub
clc
push
sub
inc
mov
das
test
pop
les
out
sarb
dec
pop
jb
sub
lea
ret
mov
shl
icebp
jle
xor
mov
mov
inc
ljmp
ljmp
lret
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
xchg
pop
lock
outsb
cltd
pop
mov
pop
std
add
outsb
aad
pop
xlat
xor
add
pushl
pushl
mov
negl
cmpl
popa
dec
dec
lods
jae
mov
ljmp
mov
add
push
lret
cmp
orw
sub
insb
mov
call
je
jg
pop
mov
fildll
fistps
ret
add
add
adc
filds
rorl
fdivr
les
add
scas
les
test
loopne
jae
fldcw
push
ffree
ffree
ffree
ffree
pop
or
add
int3
aam
repz
adc
xchg
push
pop
push
push
data16
enter
js
pop
pop
pop
jbe
jecxz
sbb
add
push
mov
bound
push
lahf
push
add
or
repnz
fwait
hlt
xor
add
pop
push
push
adc
jo
mov
cmp
add
mov
test
aaa
outsl
inc
mov
add
xchg
mov
push
scas
cmp
mov
and
faddl
mov
mov
mov
xchg
push
jb
pop
pop
push
imull
out
inc
popa
insb
jae
ja
mov
call
and
shlb
fdivl
hlt
push
cmp
jmp
jge
mov
orl
pop
subl
data16
aaa
insl
nop
mov
dec
adc
insl
lock
das
add
dec
setne
jmp
push
jnp
sbb
adc
pop
pop
lods
pop
addr16
dec
pop
sti
add
inc
mov
add
aaa
arpl
push
xor
push
sub
bound
sub
adc
ret
scas
cmpsb
adc
jmp
and
inc
jo
mov
adc
sub
or
mov
clc
or
cli
stos
test
cmp
ja
xor
mov
ja
mov
push
push
sub
push
mov
mov
out
shrb
imulb
adc
addb
sbb
iret
pop
sub
ds
push
or
jmp
push
dec
movsb
pop
jae
test
mov
inc
pop
leave
adc
push
or
mov
pop
out
test
adc
rolb
sahf
push
addb
mull
les
add
cld
loopne
sub
xchg
dec
cs
pushl
adc
mov
or
inc
sbb
mov
mov
mov
cmp
mov
pop
popa
sbb
xlat
pop
and
call
push
dec
jp
vcvtsd2ss
rcr
push
pop
mov
xchg
outsl
shll
sub
lock
shll
jo
pop
pop
cmp
addr16
sbb
add
jne
imul
les
mov
adcb
cmpl
xchg
test
lock
mulb
jp
push
push
hlt
clc
add
lock
push
jnp
out
cld
imull
ret
mov
call
adc
mov
push
inc
ss
dec
imul
mov
xchg
and
pop
ret
lea
pop
nop
nop
movsl
clc
mov
lea
push
mov
dec
add
xchg
cmp
jg
cmp
dec
js
movsl
imull
xor
add
lret
mov
mov
sbb
push
dec
or
fildl
addr16
xor
or
icebp
dec
das
pusha
shl
or
incl
cli
dec
mov
ljmp
mov
or
inc
mov
push
popa
sti
or
shll
scas
pushf
inc
inc
outsl
pop
andb
rorl
add
mov
mov
pop
sub
jbe
sbb
pop
decl
xchg
pop
adc
mov
in
lea
repnz
loope
sbb
pop
and
inc
clc
das
mov
loope
and
sub
mov
test
pusha
xchg
sbb
test
out
fsubrs
lock
pop
jbe
mov
das
push
cmp
xchg
std
std
or
mov
mov
imul
push
pop
fisttpl
inc
and
push
and
and
lock
push
sbb
stos
subb
mov
add
xor
mov
rcrl
push
mov
aas
xchg
call
and
push
addb
into
ds
jge
js
mov
ret
jp
cli
fiadds
pop
or
jne
mov
sub
fwait
mov
sub
jmp
jo
mov
mov
cmp
or
fsubrl
sti
cs
jne
cs
and
lods
jmp
loop
pop
in
push
fistpll
sub
sub
mov
xchg
jne
stc
arpl
lret
or
fildl
sub
jae
psubq
xchg
pop
mov
rep
sbb
movsb
xor
fldt
int
inc
pop
pop
mov
sub
xor
cmp
cmp
mov
fneni(8087
sub
movzbl
add
and
push
mov
pop
dec
xchg
cmp
outsb
bound
or
jl
je
ret
je
hlt
clts
or
sarl
push
pop
pop
jne
lea
mov
repz
jmp
je
in
imul
sahf
out
jne
adc
das
pop
out
in
outsl
lods
push
xlat
ss
push
cld
movsl
jp
cmp
xchg
or
inc
pusha
jl
fsubrs
roll
lea
ret
shlb
orl
inc
xchg
pop
or
push
notb
mov
sbb
mov
ds
push
pop
outsb
adc
enter
push
or
cmc
into
jmp
arpl
cmp
jne
pop
movnti
add
mov
idivb
shlb
dec
xor
inc
inc
nop
cli
or
enter
mov
cmp
mov
adc
or
jne
aas
and
std
xorb
in
mov
add
enter
xor
icebp
cmp
ja
or
aad
jp,pt
jecxz
dec
mov
pusha
pop
ds
leave
and
push
mov
lods
out
stos
fwait
mov
mov
outsb
mov
inc
je
jl
in
aas
mov
or
je
mov
inc
je
mov
dec
je
pushl
fimull
mov
pop
cmp
jbe
mov
inc
ss
xchg
adc
sahf
adc
inc
fdivrl
std
jno
lods
pop
mov
xchg
mov
insb
jae
mov
sbb
clc
xchg
ret
xor
jmp
jle
pop
lods
cs
ds
rolb
addr16
push
cmp
push
and
repnz
loopne
add
bound
xlat
cld
bound
loope
xchg
inc
mov
inc
cmp
mov
add
out
sbb
movsl
and
push
adc
mov
bnd
clc
dec
cld
lea
fdivs
or
pop
mov
aas
xorb
jl
jmp
add
or
mov
pop
es
xor
fsubrl
lea
fldl
xor
stos
or
bound
clc
stos
ja
jge
mov
neg
jmp
or
dec
mov
stos
xchg
push
mov
pop
push
push
inc
aam
fisttps
leave
jg
dec
mov
stos
cmp
jne
pop
pop
pop
lock
popf
mov
sti
mov
jl
mov
mov
repnz
push
xorl
adc
inc
cwtl
mov
jge
mov
push
fstpt
xor
adc
jb
ror
dec
mov
sbb
lock
movzwl
sub
and
or
push
adc
lret
repnz
in
mov
adc
add
ja
movswl
sti
mov
jle
dec
lea
jbe
loopne
pop
sbb
call
enter
xchg
sahf
mov
xchg
test
mov
hlt
dec
jg
inc
dec
inc
dec
lods
or
xor
jge
insb
outsl
or
jo
ret
std
mov
aam
lock
xor
or
sbb
sbb
dec
in
xchg
mov
xor
mov
jmp
ret
inc
mov
loop
movlps
mov
stos
pop
pop
inc
clc
dec
add
fcompl
add
adc
mov
jbe
sub
add
pop
lock
aam
mov
mov
mov
fdivrs
jl
gs
mov
add
sbb
aas
es
mov
or
repz
inc
test
jbe
loopne
jne
sbb
push
in
stos
xor
call
adc
sti
add
je
inc
jne
pop
push
lcall
repnz
subl
mov
mov
mov
xchg
lea
or
inc
imul
je
push
push
cmp
inc
mov
or
jbe
add
movsl
mov
or
mov
push
lds
inc
test
add
mov
add
and
and
adc
and
sub
ja
mov
and
or
sub
iret
jne
xor
or
sub
sub
orl
sub
jecxz
xchg
jmp
sub
loopne
sub
outsl
adc
add
int
push
insb
adc
push
sbb
pop
ret
aam
fists
and
inc
push
xor
mov
cmpl
aas
ret
movb
imul
cs
ja
rclb
mov
out
add
push
xchg
sbb
frndint
outsl
call
inc
rcr
scas
pop
or
fstps
mov
testb
mov
or
mov
lcall
call
or
mov
jg
sub
nop
shr
and
add
push
cmp
xor
stos
mov
add
jns
sbb
cmp
pushl
or
cmpb
jb
movb
lock
dec
js
decb
and
pop
data16
pusha
xor
loopne
data16
adc
cmp
inc
xor
mov
mov
push
or
shr
mov
add
cmp
or
out
mov
into
or
mov
push
adc
or
scas
into
rorl
je
pop
test
ja
neg
sbb
or
or
xchg
sbb
pop
mov
outsl
inc
sub
mov
loopne
jae
dec
add
in
aaa
inc
loopne
push
in
insl
or
popf
loopne
xchg
or
mov
das
jnp
or
fwait
mov
push
sub
andb
push
pushf
and
jne
dec
sub
mov
mov
add
aas
and
cld
mov
add
enter
cmpb
push
or
divl
pop
jmp
js
xor
mov
iret
inc
mov
push
lock
cs
filds
jns
cld
xchg
lock
fldcw
cmpsb
insb
shll
ds
lods
or
mov
ficomps
pusha
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
add
cld
jmp
cwtl
jne
mov
sahf
out
shlb
add
push
mov
test
enter
fistpll
jmp
fstpt
movsb
test
rcr
insb
fidivs
imul
insl
and
push
int3
inc
add
add
mov
fbstp
or
fimull
and
mov
aaa
mov
negb
pop
lock
inc
es
push
inc
imul
push
cmp
add
push
sbb
rcrb
pshufw
fs
mov
insb
push
test
pop
sbb
rcrl
pop
add
add
pop
cmp
fwait
inc
jmp
xchg
test
rclb
cmp
jg
fldt
fstpl
fwait
sbb
pop
mov
dec
inc
jns
out
mov
inc
mov
inc
jo
sub
jb
fwait
pop
pop
insb
mov
divl
push
adc
fdiv
add
adc
xchg
cmp
jno
clc
out
je
fisubrs
and
sbb
or
cmp
inc
stc
cmc
dec
add
cmp
mov
adc
sub
add
shrb
pusha
ljmp
adc
cmp
push
mov
xor
fstpl
fwait
add
aam
into
pop
aad
add
mov
outsl
adc
mov
jne
sub
sti
pop
hlt
xchg
and
mov
cltd
push
jo
fdivl
lret
loopne
cmc
ret
cmp
in
iret
and
xchg
mov
or
inc
imul
enter
loopne
dec
and
fldcw
mov
shl
divb
sbb
sahf
shl
mov
lea
mov
cwtl
test
sbb
xchg
mov
movsb
jg
add
lea
outsl
lcall
xchg
ja
and
lcall
or
jb
sti
insb
cli
cmp
je
out
ja
adc
push
testl
add
inc
dec
jne
sub
dec
mov
aas
cmpsl
subb
cltd
idiv
imul
jbe
mov
add
sub
ds
ds
add
pusha
or
das
mov
or
lds
es
std
std
pop
pop
call
add
jecxz
clc
xchg
call
jg
subb
inc
les
clc
hlt
or
jb
add
inc
pop
jno
ds
push
pusha
pop
xor
dec
data16
sbb
incl
add
jmp
and
jge
shl
lock
mov
xor
add
decw
sub
sub
imul
fcoms
or
mov
pop
sub
loopne
cwtl
and
loope
lcall
rolb
ret
cmp
mov
dec
and
es
cmp
jb
sbb
test
aaa
inc
jmp
nopl
and
outsb
ds
and
hlt
sub
loope
mov
cltd
pop
mov
jbe
xor
sbb
add
jo
pop
popf
loope
ret
ss
cmp
add
push
fwait
addr16
xchg
inc
icebp
mov
push
inc
cmp
mov
adc
mov
mov
cltd
cld
mov
mov
nop
xchg
and
inc
lea
pop
icebp
jmp
pop
outsl
xchg
loope
push
les
repz
in
outsl
adc
pop
aas
sahf
imul
add
loopne
in
jb
push
js
push
fsubr
loop
fidivl
mov
mov
jecxz
mov
sbb
scas
add
cmpsb
enter
rolb
fnstcw
mov
dec
sti
je
js
add
test
mov
out
push
cmpb
jne
out
xlat
push
jns
add
add
push
lea
or
lock
repnz
adcb
in
add
fbstp
push
in
jge
jae
pop
cs
add
push
rclb
jo
stos
lea
cld
cld
push
xchg
inc
les
xor
inc
call
adc
cmp
cmp
or
push
mov
in
ret
imul
je
fistpl
inc
adc
mov
add
push
dec
adc
mov
out
xchg
or
fildl
rcrb
pop
subl
pop
add
mov
adc
jb
mov
add
js
xor
adc
sahf
xor
fwait
sub
sbb
ret
xor
enter
lret
mov
imul
testb
iret
or
xchg
in
ret
jp
fldenv
adc
bswap
nop
test
fdivrs
test
or
xor
jne
inc
or
popa
clc
cmp
jne
push
or
loopne
and
stc
mov
add
add
lea
or
sbb
jmp
xor
fnstcw
orb
rcrl
pop
mov
stos
xchg
mov
pop
incl
dec
mov
loop
jl
xor
xchg
xchg
bt
jnp
jae
pop
jmp
cmp
adc
push
cmp
pop
repnz
jns
or
fildll
push
add
sub
jae
add
mov
pop
cmp
jne
mov
mov
xchg
fisubs
push
addr16
jo
addb
or
jns
push
clc
or
or
xchg
push
or
or
or
push
jo
mov
or
jns
xchg
out
xchg
dec
jl
repz
mov
out
mov
jge
push
dec
data16
dec
add
push
xchg
xchg
jb
pop
or
mov
or
mov
cltd
bound
push
jb
pop
std
inc
mov
xchg
pop
popf
dec
push
lea
je
daa
out
jae
fcompl
sub
cmp
je
fadds
dec
mov
sbb
xor
dec
add
inc
push
sbb
test
pop
xchg
xor
pop
or
leave
mov
jp
dec
add
jmp
out
aad
push
xchg
push
mov
xchg
dec
mov
dec
leave
out
sub
daa
jne
hlt
bound
mov
lock
inc
lahf
or
loope
mov
jns
cmpsl
mov
lcall
test
addb
dec
jg
je
mov
aaa
mov
or
push
jmp
or
je
or
je
pop
jmp
cmpb
dec
mov
not
addr16
fdivr
sub
inc
sub
adc
sbb
mov
std
rolb
jmp
cmp
xor
mov
mov
pop
pop
xor
push
ljmp
outsb
dec
push
data16
int3
fdivrs
and
or
divb
fcoml
fists
lea
nop
mov
xchg
mov
jecxz
add
add
mov
sub
adc
sbb
scas
pushf
adc
enter
push
addl
xlat
push
lds
jns
add
fs
add
roll
adc
xchg
inc
jmp
cltd
in
stc
and
shll
adc
mov
pop
lret
gs
add
jo
fwait
sti
out
jmp
or
or
adc
sbb
adc
or
lods
into
adc
popf
add
cmp
outsl
in
fcomps
imul
jle
nop
nop
jmp
sbb
push
test
jmp
js
add
ja
add
xchg
xor
sub
mov
or
adc
test
push
jnp
cli
add
dec
jo
inc
mov
inc
sbb
mov
lods
jmp
inc
dec
das
push
addr16
insb
test
adc
dec
outsl
verr
outsl
clc
pushf
cmp
inc
insl
mov
xchg
jne
or
mov
in
call
mov
add
or
xchg
xor
out
push
sub
cmpb
je
mov
add
insl
adc
inc
mov
testl
mov
jg
adc
add
add
pop
inc
ljmp
mov
mov
and
movsl
fbstp
add
sub
jae
jnp
int
dec
adc
sbb
scas
jmp
ret
test
js
add
adc
xchg
mov
fimuls
and
out
xchg
adc
mov
pop
ja
bound
mov
nop
inc
mov
sbb
into
push
adc
and
dec
test
sbb
mov
inc
inc
sahf
ret
insl
add
shrl
mov
out
add
fwait
pop
jl
pop
in
test
cmp
jne
incl
nop
pop
sbb
arpl
ljmp
notrack
sub
je
dec
je
sub
sub
outsb
and
je
jmp
mov
jmp
push
push
push
es
push
inc
sub
faddp
mov
jle
fadd
ja
push
push
aad
or
xchg
mov
mov
jl
pop
pop
inc
inc
or
std
cli
mov
dec
inc
mov
rorb
sub
addr16
pop
mov
bound
pop
jmp
or
ret
add
jne
xchg
and
lds
dec
lret
lea
cmp
jg
mov
sbb
pop
cltd
xor
sub
add
pop
cli
pop
jb
imul
add
sbb
ljmp
adc
pop
and
out
cld
fnsave
cmp
ret
xchg
psubusb
lcall
jmp
mov
icebp
mov
inc
out
add
loopne
shrb
and
inc
idiv
sub
mov
iret
ds
sbb
jne
xor
movsb
mov
mov
dec
sub
fisubl
dec
jmp
sbb
adc
ljmp
mov
cmp
mov
xchg
lods
jge
sbb
std
stos
test
jo
mov
fisttpl
sub
sbb
in
xor
nop
cmpsl
pop
jmp
aas
cmp
xchg
sub
jb
and
cmp
push
mov
and
ljmp
hlt
mov
push
fucomip
ss
repnz
in
sbb
jmp
lds
lret
pop
push
jno
jmp
movsb
out
subb
push
jmp
cmp
ja
xor
add
jb
sub
loop
pop
push
fstps
fmull
out
or
shl
aaa
add
cmpb
jle
push
insb
neg
and
fs
jne
mov
add
add
repz
ret
bound
daa
or
cmpb
push
mov
enter
sbb
pop
scas
inc
icebp
imul
or
shrl
dec
sbb
push
add
push
jmp
xlat
fildl
das
xor
mov
fisubrs
fcomps
fsubrs
xor
cmp
repnz
out
cmp
add
insb
add
sti
push
sub
jb
xchg
add
adc
gs
lret
fs
push
dec
pop
sbb
fildl
mov
mov
xorb
mov
incb
jmp
push
cwtl
mov
add
mov
pop
loopne
lds
lock
pop
insl
push
adc
and
imul
push
or
inc
outsb
dec
cmpsb
nop
lret
iret
fadds
sbb
je
orl
add
nop
inc
push
inc
or
add
enter
sbb
adc
pop
pop
test
mov
data16
inc
ja
test
xchg
jne,pt
add
sbb
sub
and
sbb
add
push
add
adc
sub
fs
pop
pop
push
lods
mov
inc
les
popa
ficoml
repnz
xchg
aam
xchg
into
xchg
or
adc
pop
xchg
cmp
adc
gs
psubsb
push
insb
int3
mov
jno
jl
lds
jne
cltd
mov
addb
mov
cmp
ret
addl
in
dec
cld
bound
fst
fcomps
or
sbb
fwait
jmp
sbb
pop
inc
inc
sbb
add
fstp
push
repz
dec
push
push
push
andb
shr
adc
sub
jb
or
pop
and
lret
xchg
xorl
fs
cmpsl
fwait
cwtl
inc
inc
aaa
jae
mov
loopne
dec
mov
jno
pop
popa
push
or
faddl
adc
xor
dec
cld
fwait
push
daa
push
adcl
stc
ret
pop
mov
mov
adc
cld
movsl
xchg
inc
jle
outsb
inc
loope
add
mov
pop
xor
add
cwtl
xlat
imul
sar
movsb
xor
inc
add
or
mov
loopne
adc
xchg
out
sub
mov
faddl
push
xor
cmp
movl
xchg
sar
jne
add
cmp
and
pop
add
scas
scas
xchg
push
in
popa
pop
and
fdivl
xor
pop
sarb
dec
call
dec
xchg
call
mov
je
jne,pt
adc
xlat
pop
pop
in
xchg
push
lods
lock
jl
push
add
je
xchg
cmp
add
mov
mov
fwait
js
mov
cmp
inc
cltd
xchg
pop
pushf
cmpsl
jb
incl
mov
mov
in
add
in
jmp
lea
in
adc
jmp
fucomip
jmp
mov
xor
cmpsl
mov
add
mov
or
inc
xor
fiadds
fimuls
jbe
adcl
push
push
push
cmp
dec
paddusb
test
add
xchg
jne
push
push
fcoml
sbb
repnz
fcoms
xor
and
push
mov
sub
and
pop
dec
mov
xchg
dec
repnz
fwait
or
dec
adc
or
scas
add
cmpsb
adc
xor
push
ljmp
je
sub
je
scas
ret
lea
add
subl
jle
mov
stos
push
sbb
ret
cltd
fs
mov
ret
pop
lock
add
cld
jg
mov
mov
shrb
dec
mov
xchg
or
jmp
mov
or
ret
add
push
mov
pushf
jns
pop
sbb
jmp
push
xor
xchg
dec
push
push
jmp
in
in
cs
cmp
mov
aad
in
dec
pop
xor
adc
lahf
push
add
ja
sbb
xlat
add
sub
and
mov
cmpb
and
sahf
test
xor
push
test
mov
aam
mov
cmp
pop
outsl
out
adc
jae
inc
dec
cmp
aaa
insb
or
mov
cmp
pop
and
jmp
sub
add
mov
rolb
repz
sub
movsb
mov
jnp
daa
ret
or
sub
or
jecxz
pusha
fsubs
mov
mov
xchg
lcall
ljmp
scas
mov
pop
pop
sarb
jl
movsb
push
push
rolb
and
mov
popa
lock
add
xchg
out
pop
dec
pop
sbb
mov
movb
dec
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
push
dec
and
addr16
test
mov
mov
pop
cmp
pushf
pop
sub
es
dec
or
pop
idivl
cmp
pusha
xchg
xchg
test
popa
cld
jmp
push
rcrb
fdivl
ljmp
or
ds
dec
or
inc
pop
add
push
outsl
xlat
push
pop
xchg
add
xor
lea
fsts
rolb
fucomi
sub
shrb
sbbl
push
lahf
repnz
or
data16
les
and
rorl
nop
ja
adc
fidivs
push
add
jnp
js
sub
test
and
xchg
repz
mov
fwait
lock
das
cmpb
pop
and
and
push
or
les
mov
ljmp
test
xor
cmp
jg
cmp
mov
cmp
sbb
adc
mov
pop
fadd
push
push
or
jl
jo
push
pop
mov
decl
push
cmp
push
push
sar
lret
inc
loopne
push
adc
ljmp
push
test
sbb
xchg
and
add
lock
push
or
pop
or
pop
aam
mov
ret
pop
pop
loopne
sub
or
xchg
subb
orb
orl
dec
out
cmp
in
or
jge
inc
outsb
cmpsl
mov
push
in
push
loopne
cmp
loopne
les
xorl
inc
or
mov
loopne
or
insl
add
inc
loop
ja
xchg
adc
ret
and
into
sbb
pusha
jbe
and
inc
call
pushf
fcompl
dec
je
jmp
dec
jle
push
xor
inc
xor
scas
push
jmp
and
add
mov
add
xor
shll
pop
or
or
dec
rorl
or
or
rcl
push
adc
nop
cs
out
outsb
adc
mov
mov
leave
fists
push
movsb
nop
push
sbb
cmpl
movaps
inc
hlt
inc
jae
adc
xchg
bound
or
arpl
cmpsl
dec
push
in
mov
mov
dec
cwtl
sub
push
loopne
xchg
mov
pop
test
adc
jno
pusha
cmp
ja
imul
les
ja
rcrb
push
push
enter
shrb
aam
mov
add
mov
mov
cld
jmp
sub
push
mov
mov
xchg
test
add
and
nop
daa
pop
pop
mov
adc
dec
lods
loop
mov
aad
pop
sub
jns
and
lods
call
add
sub
mov
jae
mov
fdivrl
push
addr16
pop
adc
jae
pop
pop
mov
cmp
dec
add
mov
insb
pop
mov
adc
xchg
shl
push
jp
push
inc
or
sub
lea
cmpsb
scas
or
pop
mov
lcall
xor
inc
add
adc
cmp
lret
xor
add
out
stc
insl
mov
inc
adc
out
fnstcw
and
enter
outsl
or
jo
lock
movb
adc
xchg
xchg
jbe
lods
pop
inc
xchg
xchg
rcrl
js
pop
inc
aaa
cmp
pop
sbb
adc
sbb
add
or
xchg
in
push
insb
push
pop
call
xchg
dec
rclb
loope
mov
sbb
add
rorb
les
or
or
das
add
repnz
push
mov
and
push
adc
mov
mov
rcr
mov
inc
and
data16
xor
mov
adc
ja
mov
dec
jmp
dec
push
adc
xor
mov
and
mov
sub
and
loopne
push
fidivrs
dec
or
inc
pop
pop
and
into
add
add
cmp
ss
xchg
adc
add
in
or
mov
sub
idivb
daa
sbb
ja
mov
jle
adc
in
seta
xchg
leave
mov
mov
jg
mov
scas
das
sti
inc
xchg
inc
ret
jl
mov
and
pop
adc
cltd
mov
jge
push
add
jmp
or
jo
add
and
leave
movsb
rep
mov
fcoms
outsb
repz
jl
jne
sbb
jo
sbb
cwtl
dec
xchg
sbbb
adc
adc
inc
add
dec
jae
addb
fildll
push
jmp
fwait
call
or
pop
xchg
mov
decl
add
shlb
rol
inc
mov
mov
mov
push
movhps
sbb
out
in
sub
sub
daa
mov
das
pop
and
mov
push
mov
adc
adc
data16
out
pop
fs
pop
jae
push
inc
cmp
or
cltd
je
fdivs
push
loopne
mov
popa
add
inc
orl
pop
lea
fmul
fstpt
clc
stos
lods
in
je
cmpb
hlt
icebp
in
nop
mov
aad
shl
and
xor
subb
mov
andb
mov
hlt
add
push
push
mov
jb
clc
sub
aaa
inc
inc
inc
andb
xchg
ret
popa
ret
sub
sarb
cli
jbe
dec
orb
inc
dec
daa
rcll
dec
mov
test
lock
daa
mov
and
or
lahf
sbbb
mov
cwtl
adc
adc
pop
mov
adc
inc
inc
jne
or
addr16
js
jb
test
loopne
lock
inc
jmp
rcrb
xchg
out
loopne
rorl
mov
jge
pop
js
clc
in
push
mov
int
ffreep
xor
aaa
push
mov
sub
jb
inc
mov
mov
outsl
xchg
fwait
stc
stos
sbb
lret
jne
jge
adc
outsb
or
push
jg
daa
jmp
daa
clc
pop
ja
iret
mov
mov
xchg
rcl
ja
adc
push
or
inc
test
dec
out
dec
sahf
cmp
add
sbb
mov
data16
out
lds
popa
push
arpl
ss
jmp
xor
sahf
pop
cmc
add
test
fistl
inc
movb
xchg
leave
sub
pop
mov
mov
sbb
mov
sbb
popa
lock
clc
cmpl
cmp
pop
jne
lea
adcl
bound
scas
movsl
testl
cs
rorl
and
xchg
fwait
dec
cld
jne
jmp
push
add
xchg
shlb
add
arpl
mov
aam
add
out
cld
lret
js
xor
stc
push
ljmp
pushf
addb
cmc
sub
aas
xchg
pushf
mov
lea
test
imul
mov
inc
adc
sbb
pusha
imul
mov
insb
inc
call
enter
sub
fbld
mov
push
adcl
sbb
test
xchg
fsubrl
mov
addl
mov
mov
loopne
mov
pop
jl
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
adc
add
out
enter
aas
mov
nop
xchg
push
ss
jns
es
aas
ret
adc
stc
inc
cs
les
adc
clc
mov
fcmovnu
jbe
push
mov
frstor
in
lock
lock
add
push
mov
mov
mov
cli
and
das
mov
add
add
fs
pop
pop
aaa
cltd
negb
insl
pop
jo
push
hlt
push
inc
aaa
jbe
pop
sbb
jl
cmp
pop
push
cmp
ss
dec
aaa
sbb
and
mov
mov
aaa
mov
mov
in
dec
add
cld
test
push
addb
inc
cmp
sub
test
inc
mov
xchg
in
pop
xchg
mov
xchg
hlt
and
mov
jno
or
xor
inc
stos
sub
js
mov
sub
std
test
es
push
sbb
imul
inc
add
in
pop
or
aas
adc
inc
imul
clc
jb
gs
jo
inc
js
cmp
cmpsl
inc
xchg
lock
inc
ret
mov
xchg
adc
push
lahf
sbb
mov
filds
add
or
lret
insb
les
clc
jg
sbb
inc
cmp
jne
mov
and
adc
test
jle
adc
sbb
add
or
jl
inc
jmp
xchg
hlt
mov
jnp
mov
mov
in
xchg
add
ljmp
mov
cmp
cmp
call
call
je
mov
inc
or
addr16
mov
fs
inc
mov
scas
cmp
jl
pusha
in
sub
xchg
jno
add
or
mov
sub
shlb
add
cmpl
mov
inc
or
je
aas
adc
push
adc
sbb
xor
out
mov
shlb
pop
movsb
movl
xor
add
sarb
pop
mov
pop
push
mulps
push
lret
lcall
leave
test
mov
cltd
mov
les
inc
pop
adc
jle
in
cmp
inc
push
dec
lods
in
dec
xlat
pop
mov
aaa
inc
or
fcompl
adc
clc
sub
clc
mov
jnp
ja
je
push
movsb
mov
adc
outsl
sub
inc
stc
mov
mov
cs
mov
xchg
and
jmp
adc
out
xor
cmpl
jbe
js
add
aam
orb
xchg
dec
xor
cmp
sete
incl
push
sub
or
fldenv
adc
sbb
inc
decl
cmpl
aas
push
pop
push
inc
shr
movsb
popa
cmpsb
add
push
lret
shlb
jecxz
sub
cmpsl
mov
into
add
incl
scas
add
cmp
test
cmp
xchg
and
pop
jmp
inc
aad
outsb
fistl
ja
jmp
loopne
sub
cmp
outsl
xor
lods
ja
mov
dec
mov
inc
xor
int
enter
filds
jmp
mov
ret
adc
push
add
xor
cmpsl
adc
add
daa
scas
jo
mov
cmp
jmp
lock
jl
push
loopne
fiadds
jo
inc
fmuls
and
iret
repz
dec
enter
mov
push
mov
mov
push
cwtl
jle
push
dec
idivl
xrelease
cmp
jo
push
idivl
push
push
push
pop
dec
out
iret
repz
adc
lock
shl
idivl
mov
fildll
jge
xchg
sbb
xchg
es
xchg
aaa
bnd
or
aam
or
add
leave
mov
add
cld
cld
inc
jl
sahf
xchg
hlt
clc
fdiv
pop
inc
xchg
ja
mov
aam
inc
clc
out
negb
sbb
loopne
adc
cmp
faddl
fsubs
iret
aam
sarb
jbe
enter
push
sub
out
in
rorb
repnz
cmp
mov
mov
dec
fmulp
mov
pusha
pushf
mov
cmp
mov
adc
xchg
ja
dec
nop
push
xchg
mov
out
in
mov
inc
inc
andb
jl
je
fs
es
push
push
sbb
pop
cmp
xchg
mov
add
cld
stc
mov
cmp
mov
dec
add
mov
and
mov
adc
pop
and
xor
add
sub
and
adc
sbb
mov
push
orb
jge
sub
and
add
push
or
in
andb
sub
sbb
cwtl
xchg
mov
sbb
mov
mov
int3
adc
daa
ret
inc
push
xchg
pushf
mov
jns
mov
inc
mov
mov
inc
sub
cmp
adc
pop
push
sub
mov
push
xor
lret
push
xchg
inc
enter
cmp
xor
movsb
sub
int3
sub
jg
jge
les
jno
fdivrs
pop
sbbb
or
mov
stos
xor
ret
in
inc
jp
daa
pop
or
sbb
mov
lahf
in
out
jo
imul
je
mov
sub
adc
hlt
add
add
mov
cmc
mov
jns
test
in
sbb
fsubs
scas
fs
lods
int
and
pop
cmpb
dec
push
test
movsl
xor
pop
clc
xchg
out
sbb
daa
stc
jl
lea
pop
call
cmc
sbb
movsb
repnz
je
mov
pop
and
clc
les
jno
pop
ret
and
cmp
and
inc
inc
imul
sub
insb
dec
shlb
fstpt
xchg
mov
push
cmpb
jge
add
pushf
pop
mov
or
or
fistps
les
arpl
out
lods
adc
and
pushf
pushf
je
push
mov
mov
mov
hlt
mov
jns
insb
push
dec
fcompl
dec
jne
pop
mov
and
mov
ret
push
add
or
add
fsubs
pushf
jle
jo
dec
xor
mov
push
jl,pn
test
es
add
lods
or
cltd
fs
mov
mov
cltd
fs
dec
mov
dec
es
xor
dec
es
les
mov
xchg
dec
sub
dec
dec
sahf
xchg
dec
rolb
mov
xchg
aam
insb
fcomp
sahf
xchg
dec
sub
mov
dec
loopne
pushf
xchg
dec
sahf
xchg
in
mov
xchg
dec
sub
es
dec
lock
outsl
insb
gs
jne
adc
sub
jmp
jns
mov
mov
add
outsl
je
fs
jne
rclb
clc
movzbl
dec
adc
outsl
fs
stc
jnp
outsb
dec
jb
pop
outsl
jb
inc
insl
jo
stc
out
pop
xor
jb
insl
push
je
pop
push
fwait
insl
lahf
nop
cmp
and
adcb
outsl
mov
inc
jae
xor
pop
jae
dec
add
pop
repnz
add
outsl
out
add
pop
enter
push
or
hlt
test
mov
xchg
out
popa
loope
xlat
fildl
jmp
mov
pop
sbb
ret
jns
pushf
fnstcw
or
mov
hlt
ret
testb
add
out
cmp
call
mov
ds
sti
and
push
pop
call
jg
notl
cld
ss
adc
dec
fidivrl
cmp
flds
xor
mov
or
js
scas
pop
add
add
push
and
xchg
adcb
or
and
cmc
popa
call
addb
sbb
add
dec
lds
add
xor
cs
fildl
mov
mov
push
inc
jb
sbbb
lret
adc
ds
divl
xchg
inc
popa
adc
push
and
dec
js
adc
xchg
fs
fadd
enter
fcompl
mov
mov
jns
imul
xchg
pop
or
sub
gs
popa
add
iret
lods
lods
add
inc
adc
and
mov
insb
adc
ds
shrb
xchg
mov
iret
js
mov
mov
push
outsb
notb
in
mov
fadd
fadd
cmp
mov
jo
arpl
adc
ds
out
sahf
jp
aam
cld
or
ljmp
xchg
pop
fiaddl
push
daa
in
in
add
pop
mov
xlat
lret
das
inc
stc
or
out
dec
mov
es
call
test
inc
dec
daa
in
in
fmulp
and
and
in
add
enter
cs
leave
mov
lret
in
in
inc
add
and
inc
push
into
lret
adc
adc
push
inc
push
and
sub
mov
int
fwait
dec
les
or
add
sbb
add
or
mov
fistps
sub
dec
je
sbb
es
enter
dec
lahf
push
nop
es
jbe
filds
mov
mov
inc
push
enter
lds
and
stc
pop
mov
inc
clc
add
leave
sub
and
dec
iret
and
leave
sub
lock
adc
inc
dec
in
dec
repnz
jl
call
ds
repnz
iret
les
jae
in
nop
iret
mov
inc
loopne
enter
lcall
int3
or
mov
or
mov
rcll
fmul
pop
push
mov
and
stos
xor
shlb
in
sub
mov
sub
popl
fdivs
test
sub
sub
orb
je
mov
ret
inc
jmp
adc
call
iret
push
into
and
in
test
nop
enter
push
or
mov
rorb
adc
or
pop
pop
stos
cmp
dec
sbb
add
jecxz
jo
adc
call
addl
mov
mov
add
mov
test
cmc
cmpsb
lcall
push
out
mov
push
push
shrl
sarb
lea
lea
cld
movl
inc
add
xchg
pop
xorb
js
data16
jmp
scas
or
test
test
pop
mov
adc
jge
test
jmp
and
and
lock
out
and
imul
lea
xchg
loopne
call
add
shrl
jno
scas
mov
lea
fidivl
nop
pop
adcl
inc
pop
and
pusha
cmpsl
pop
fmuls
sahf
jmp
inc
mov
push
pusha
shl
cltd
fstps
in
repz
dec
pop
lods
pop
clc
mov
out
test
dec
push
out
in
cwtl
cmp
stc
push
lods
insl
cmp
mov
cld
push
adc
lret
stos
and
mov
push
xor
push
aas
gs
and
jmp
bound
jne
pop
add
pop
dec
xor
inc
sub
or
or
fsts
div
and
sub
and
xchg
and
sbb
jmp
and
push
mov
cmp
jmp
jne
dec
jnp
adc
push
cmp
mov
rcr
leave
test
lea
test
add
mov
or
inc
out
mov
jmp
sbb
cs
loopne
or
xchg
sub
loopne
call
pop
adc
or
and
add
jae
jnp
pop
sub
adc
jl
shrb
in
mov
dec
pop
cmp
push
ret
outsl
mov
mov
inc
call
push
data16
jmp
push
fldt
iret
adc
and
subb
push
add
call
ds
mov
decl
push
adc
jge
xchg
cmpsl
call
add
or
mov
fmull
and
add
adc
cmp
imul
or
cmpb
xchg
inc
sarl
sub
xchg
add
mov
sub
or
pop
pop
cld
xor
pop
lock
je
pop
jne
push
pop
cs
jnp
jo
mov
or
dec
cmp
cmpsb
or
int3
inc
dec
lret
std
pop
ret
or
mov
pusha
repnz
mov
test
mov
fcomp
flds
mov
test
nop
add
daa
outsl
pushf
inc
pop
adc
xlat
jns
ss
mov
aad
push
mov
and
xchg
or
mov
push
and
inc
mov
and
rclb
shll
cmp
popf
xor
es
lock
imul
hlt
add
cmp
jae
in
pop
nop
rcl
rcl
call
fisttpll
sub
loopne
or
mov
cmp
cmpb
lea
ror
je
xor
roll
xor
out
xchg
pop
stos
jo
cmp
adc
arpl
cli
ss
add
mov
inc
pusha
xchg
sub
jno
out
hlt
mov
in
pop
sub
or
in
ret
mov
add
add
in
inc
push
sub
mov
loope,pn
add
pop
adc
jge
push
push
in
cltd
push
bound
mov
cli
add
scas
xchg
test
sbb
adc
loopne
in
jecxz
push
or
cmp
xchg
clc
aas
sbb
mov
cmp
ja
mov
and
ss
subl
fdivrs
stc
inc
fstps
xor
idivl
mov
fdiv
adc
add
inc
lret
int3
cmpb
dec
je
mov
add
jl
cs
fsubrl
rorl
pop
test
xor
dec
xor
fldcw
or
in
mov
cs
xor
in
add
mov
or
or
clc
ret
cld
cmp
nop
out
call
std
mov
xchg
rclb
xchg
loopne
inc
daa
add
in
popf
loopne
pop
push
fsubl
les
or
andb
movsbl
fadds
adc
aam
in
shlb
nop
rcl
call
inc
lcall
mov
push
sub
sti
int
nop
divb
jno
xor
pusha
sub
pop
dec
je
jmp
imul
outsl
cld
shlb
or
xor
test
add
stos
jo
xchg
es
lcall
xchg
fildl
or
es
out
inc
mov
repnz
inc
xlat
push
test
hlt
or
repz
adc
push
dec
push
je
mov
add
xor
bound
icebp
flds
mov
in
mov
xchg
push
daa
add
shrb
cmp
leave
sbbl
sub
in
aaa
into
movsb
and
movsb
enter
mov
or
dec
pushf
cmp
lret
cwtl
xor
arpl
xchg
jmp
arpl
aaa
nop
dec
jbe
movl
insl
in
sbb
gs
pusha
xchg
inc
pop
and
dec
js
add
fmull
xchg
adc
mov
stc
cwtl
or
pop
mov
icebp
mov
in
and
inc
and
jmp
dec
push
mov
mov
scas
push
mov
jb
mov
rcr
mov
cmp
xor
cmpsl
xchg
push
adc
cmp
into
or
and
inc
fucom
push
xor
loopne
gs
fsubrp
and
push
jecxz
jne
jb
jo
mov
dec
in
ljmp
xchg
fsubp
dec
nop
cwtl
jo
adc
push
push
imull
push
repnz
sahf
push
dec
repz
stos
shr
pop
fildll
dec
sahf
out
cmp
sbbl
cmpsb
mov
dec
loopne
rcr
clc
xor
notl
push
xor
jmp
push
shr
insb
push
jnp
push
xor
push
insb
test
xor
insb
and
push
inc
push
add
insb
and
insl
stos
or
xor
push
cmp
cmp
sbb
in
in
imul
loopne
xor
and
mov
ret
fdivs
fdivs
or
aam
aam
push
xor
dec
aaa
rcl
iret
xorb
pop
xchg
push
enter
xor
and
mov
pop
cmp
xor
test
cmp
fs
loop
and
outsl
jns
ret
loop
inc
repz
mov
pop
adc
lahf
addr16
ss
dec
cwtl
sbb
inc
push
es
mov
lds
jge
loope
cmp
jle
or
lock
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
dec
cmp
jno
cmp
push
rorb
jno
cmp
cwtl
jno
mov
outsl
aaa
dec
cmp
nop
popf
ret
in
ja
es
cs
int
mov
adc
add
imul
jns
es
add
dec
sbb
cs
les
faddl
test
enter
dec
andl
fmuls
jb
add
lods
lret
mov
mov
popl
jo
jns
ret
inc
dec
jne
add
add
test
insl
popa
and
xor
bnd
add
jb
push
ds
lcall
pop
inc
outsl
jne
xchg
jb
outsb
mov
pop
cltd
or
aad
outsl
dec
pusha
mov
sbb
addr16
cmp
stos
cmpb
mov
test
outsb
pop
cld
arpl
outsb
imul
aam
loopne
inc
arpl
addr16
adc
and
inc
iret
push
cmp
inc
inc
jns
push
inc
cmp
daa
adc
or
add
xchg
add
loope
or
adc
scas
push
cmp
out
call
push
adcb
and
movsl
fisubrl
sti
imul
xor
push
aam
push
in
jmp
lea
dec
pop
add
sbb
cs
mov
jnp
pop
pop
pop
add
cmp
mov
lea
or
pop
out
xor
xchg
sbb
and
or
dec
mov
addr16
inc
jmp
xor
mov
push
enter
mov
or
inc
outsb
jns
and
push
gs
sbbb
out
sbb
xorl
and
cli
add
pusha
cs
loope
pushf
lods
lahf
xor
xchg
les
xor
dec
in
mov
dec
push
ret
inc
pop
or
int
out
dec
xorl
sbb
add
and
cwtl
cmp
pushl
fnsave
add
adc
xchg
dec
mov
out
mov
fcom
lahf
push
jmp
std
shll
xchg
xor
sub
dec
xlat
xor
lods
daa
sbb
popa
fmul
pop
decl
inc
out
icebp
and
jnp
je
jnp
mov
push
adc
adc
xchg
or
sub
cmp
xlat
int3
jle
imul
push
mov
lea
add
jo
mov
addb
mov
out
sub
push
or
mov
adc
ret
xchg
or
mov
pop
jno
mov
cmpsb
std
xchg
inc
adc
xchg
push
lcall
push
push
push
adc
int3
enter
hlt
repz
mov
add
cmp
jle
xchg
and
pop
and
mov
rorl
xchg
ret
lods
add
push
ret
mov
cmp
xor
or
xor
test
xchg
mov
jp
jg
movsb
pusha
add
sahf
sub
stos
mov
pop
push
pop
add
pop
or
jbe
mov
add
scas
xor
cld
clc
jmp
mov
cmp
xchg
cmp
setg
inc
mov
lods
push
dec
fwait
call
jne
adc
enter
jmp
cmp
ljmp
jne
aas
test
int3
mov
ljmp
dec
dec
xchg
bound
icebp
mov
jmp
sbb
jle
mov
nop
jmp
add
jne
js
mov
lods
mov
leave
adc
sub
jle
mov
mov
adc
sarb
test
divl
rolb
shll
lock
in
in
js
adc
cld
push
pop
jno
aaa
test
sub
in
ret
stos
leave
leave
leave
insl
stos
shrd
scas
nop
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
into
leave
leave
leave
xchg
cwtl
cltd
lcall
jmp
outsl
in
or
loopne
cmp
ss
jb
push
xchg
xlat
add
pop
pop
in
cmp
mov
mov
es
addl
scas
xchg
inc
ja
gs
push
pushf
in
inc
hlt
cmp
pop
mov
mov
popa
insl
adc
mov
adc
dec
push
xchg
test
adc
pop
leave
les
mov
popa
cmpsb
xchg
daa
add
or
sarl
out
mov
cltd
sbbb
or
outsb
shll
mov
scas
ds
mov
mov
mov
mov
les
cwtl
and
ds
jge
adc
pop
jecxz
insb
add
mov
test
or
jbe
mov
scas
enter
or
enter
imul
and
ds
pop
rorl
sub
mov
nop
adc
adc
push
xchg
sti
je
fs
mov
inc
out
add
aas
movsb
lock
pop
and
int3
mov
xlat
imulb
scas
push
fidivrl
push
push
add
push
jnp
adcb
jmp
xor
gs
push
fidivs
lcall
pop
and
pop
pop
inc
insb
popa
fidivrs
ret
out
andl
loope
inc
fs
jo
clc
ljmp
jb
dec
add
pushf
jae
push
rclb
sahf
cmpsb
js
cmp
jo
insl
jmp
repnz
pop
jnp
nop
push
mov
add
xchg
pop
cmpsb
lock
jo
ret
fmuls
hlt
add
ss
in
xor
push
add
lock
mov
imul
shrl
aam
or
jbe
push
cli
cmp
popf
mov
addr16
jl
mov
test
mov
mov
out
cltd
mov
setle
push
cmpb
push
aaa
pushf
call
push
and
mov
sbb
add
aam
push
or
imul
loope
out
repz
xchg
leave
aas
mov
and
fdivrs
xor
push
adc
icebp
pushf
out
pop
xor
inc
nopl
jl
maxps
testl
and
inc
push
mov
lock
add
inc
pop
mov
push
sbb
nop/reserved
adc
mov
test
jl
int3
jle
mov
ds
outsl
call
sbb
repnz
add
hlt
aaa
mul
add
push
cmp
push
insb
fbstp
inc
pop
loopne
fs
pop
push
jns
fisubl
aas
enter
mov
push
push
hlt
xchg
adc
into
repz
pop
fildll
or
and
fisubrl
inc
inc
dec
inc
dec
mov
out
pop
cmc
jl
mov
out
in
push
out
ret
mov
loopne
xlat
mov
lea
fcoml
adc
divl
idivb
push
push
xchg
movsb
sbb
testb
testl
jb
gs
push
je
fs
adc
std
add
test
addr16
jb
shrb
add
add
inc
fiaddl
cmp
add
scas
or
mov
or
pop
stc
mov
fs
push
es
lret
push
jbe
testl
cmp
in
rolb
ljmp
pop
sbb
add
aam
mov
rorb
or
pop
push
loope
inc
call
cld
cmp
cmp
pause
pop
inc
std
jb
jle
pop
or
and
pushf
fwait
jmp
dec
out
sbb
sub
js
jne
add
add
or
stos
imul
rcrb
imul
and
in
bound
clc
lock
lea
dec
pusha
or
stos
cmp
or
add
add
in
movb
nop
push
sub
das
or
lea
lret
pop
push
mov
in
jl
inc
xor
sbb
out
testl
jne
das
push
daa
push
testb
push
add
push
out
movsb
test
xor
mov
pop
rorl
lock
in
in
lods
push
inc
into
add
xlat
lret
das
and
mov
push
or
xor
in
shlb
sbb
inc
out
shufps
aad
xor
or
xor
push
xchg
lret
incl
mov
or
leave
xchg
add
negb
in
add
mov
sub
jmp
das
dec
cmp
xorl
sub
adc
inc
adc
cli
or
dec
and
decl
mov
jge
sbb
shl
loop
adc
jbe
dec
je
inc
or
cmc
mov
xchg
cmovae
inc
add
rorb
add
push
rorl
mov
or
scas
mov
mov
cwtl
jl
mov
add
ss
mov
jae
xchg
in
ret
les
call
sub
pop
add
mov
or
mov
in
ds
adc
push
lret
adc
rolb
adc
jmp
mov
ficoms
add
mov
xchg
jo
jb
mov
jo
xchg
out
or
pop
jle
hlt
scas
cmp
shl
movhps
mov
inc
daa
icebp
inc
scas
sub
or
add
and
inc
sbb
jbe
addb
or
test
jg
add
mov
sub
jg
dec
and
pusha
dec
inc
ret
inc
add
arpl
lods
sbb
out
or
out
cwtl
and
sub
inc
test
jne
inc
and
std
sbbl
xor
fbstp
adc
out
ja
push
add
int3
fwait
in
push
mov
fisttpll
pop
mov
pop
imul
push
fs
push
cmp
in
movsb
jle
add
and
pop
pop
incb
fstl
es
sbb
push
cmp
daa
adc
in
je
daa
sbbb
add
add
dec
jno
in
sbb
hlt
clc
rcrb
cmp
pop
aad
xor
test
sub
leave
gs
data16
imul
mov
out
jecxz
scas
add
adc
pusha
enter
sbb
test
push
scas
mov
push
lods
cmp
mov
push
push
pop
cmp
push
add
sbb
aaa
js
sub
in
and
add
pop
sub
bound
lahf
jno
mov
in
fs
test
or
and
and
ja
sbb
mov
push
xor
push
popf
movmskps
pop
xchg
and
popa
ret
adc
hlt
push
fdivrl
adc
cmc
dec
ja
add
or
clc
icebp
lock
jle
push
insl
sub
call
push
js
sub
push
enter
adc
fbstp
cmp
dec
jne
lcall
icebp
mov
inc
sub
hlt
out
jo
xor
int
push
cmp
mov
lret
shrl
cld
imul
mov
xchg
mov
adc
pop
lcall
or
or
pop
pop
js
pop
stc
and
lods
scas
nop
out
xor
arpl
les
ret
xchg
xor
push
mov
dec
add
popf
mov
mov
sbb
outsl
fst
daa
dec
clc
ror
pushf
xor
jmp
and
mov
jecxz
lahf
mov
cltd
sbb
sahf
test
or
fadd
push
inc
push
push
push
jge
fdivrs
mov
mov
jnp
xchg
and
inc
mov
xor
test
pop
add
aas
in
lock
in
ss
and
add
inc
dec
mov
hlt
xor
cmp
cmp
mov
cmp
jle
loopne
push
in
cmpsb
jo,pn
or
insb
loopne
inc
shll
xor
sub
add
shll
aaa
bnd
and
add
or
cld
sarl
ret
mov
push
inc
and
add
pop
aaa
lock
out
lock
aaa
mov
sbb
sub
ret
adc
xor
ja
ss
aad
sbb
jns
xchg
and
leave
add
jmp
std
lock
neg
xchg
andl
ret
xchg
mov
call
out
out
or
lret
dec
push
push
adc
mov
imul
xchg
stos
push
or
mov
fidivrs
xor
jl
inc
cmp
xor
xorb
sbb
inc
sbb
xor
add
cld
push
push
xor
mov
js
xchg
fistl
mov
mov
xor
shll
xchg
mov
cmp
out
sbbl
mov
pusha
out
xor
inc
xchg
cld
or
or
jl
dec
jne
pmullw
sbb
add
sbb
decl
fcoml
add
cmp
and
aas
cmpsl
call
add
lret
push
dec
sarb
add
xor
push
mov
orb
cld
fs
cwtl
shr
push
dec
add
cltd
and
out
into
imull
or
test
or
cmp
jne
xchg
mov
xor
rcrb
lahf
stc
jb
out
enter
stos
mov
mov
inc
xor
es
cmpsl
out
cmp
push
pop
push
mov
dec
or
mov
pop
adc
xlat
jbe
xor
mov
hlt
hlt
adc
push
sbb
mov
das
out
pusha
dec
fcoml
xchg
cmp
aam
pop
push
popa
cmp
inc
cmp
xor
adc
aad
shrb
adc
jns
add
sub
lea
push
push
jecxz
jmp
xchg
or
out
sub
daa
jne
enter
cmp
mov
in
push
adc
inc
add
imul
scas
add
fs
mov
and
mov
negb
dec
popf
loope
adc
and
jnp
and
mov
out
jmp
int3
or
and
or
popa
ret
pusha
pop
jle
pop
add
mov
faddp
scas
or
xchg
cmp
sbb
rorl
testl
xor
and
js
or
mov
jo
jne
jge
gs
cmp
mov
add
mov
lods
es
test
mov
nop
je
mov
or
adc
fdivl
aam
and
adc
enter
inc
or
cmpb
push
or
daa
cmpsb
xor
push
xchg
jbe
shrb
stos
in
push
pop
and
dec
inc
jmp
fcomps
int
dec
mov
or
test
add
lret
sub
hlt
xchg
int
lds
or
test
das
add
int
or
inc
sub
or
out
hlt
mov
or
adc
cmp
xor
arpl
dec
in
jecxz
push
in
test
push
or
adc
gs
mov
iret
testb
cmp
pop
idiv
xchg
xchg
pop
pop
jne
testb
orb
shll
mov
mov
cmpsb
add
movaps
or
xor
out
xor
ret
dec
add
inc
or
mov
inc
mov
pop
sbb
pop
cs
cmp
and
test
add
ret
aam
and
mov
push
rolb
sbb
push
es
add
inc
and
mov
mov
xchg
mov
jmp
xorl
lods
xor
sub
enter
lcall
sub
adc
mov
mov
adc
sbb
mov
dec
cmpsl
ficomps
adc
pusha
or
lock
sub
sysenter
lods
inc
stos
in
lcall
or
add
inc
pop
arpl
and
sub
or
iret
inc
xchg
iret
dec
in
movsb
push
push
testl
dec
add
sub
dec
sbb
bound
mov
nop
ds
add
add
dec
lock
rcrl
clc
cltd
fiaddl
dec
fcmovnu
inc
dec
inc
cmp
aas
mov
ficomps
jmp
mov
adc
cli
pop
cmp
adc
jge
lea
jmp
and
jp
and
push
push
sub
addl
adc
jle
dec
or
shll
xor
add
out
les
push
mov
repnz
sbb
inc
adc
aas
scas
popa
aam
add
dec
push
sbb
in
fnsave
add
mov
mov
pop
push
sbb
scas
cmc
js
sbb
mov
loop
xor
imull
es
cmp
test
pop
sbb
jle
mov
sub
cmpsl
add
xchg
add
dec
je
jmp
bnd
push
seto
jne
adc
push
fidivs
icebp
jl
adc
repz
inc
xchg
movsl
lcall
nop
pop
in
jl
mov
adc
add
mov
push
add
roll
mov
mov
nop
push
test
jg
xchg
pop
in
es
add
cmp
jne
mov
push
or
or
mov
mov
mov
jle
xor
sub
add
mov
jle
mov
inc
je
lea
add
data16
out
or
ret
xchg
in
push
dec
daa
pop
mov
loop
push
xor
pop
adc
push
mov
inc
push
cmp
sub
add
xor
push
or
decb
and
push
sub
xor
push
dec
adc
xor
mov
add
xor
xchg
add
aaa
cmp
or
pop
ds
mov
gs
cwtl
jecxz
add
call
push
fistpl
xchg
clc
das
and
adc
jge
or
ljmp
jb
jmp
jl
and
sbb
jbe
and
pop
mov
push
add
sarl
inc
ja
and
cmp
lahf
xchg
fildl
dec
add
inc
fiaddl
add
sub
pop
jecxz
adc
inc
out
lea
movl
push
sahf
mov
inc
test
and
add
pusha
mov
stos
sti
and
sbb
add
and
mov
add
cltd
arpl
jne
rorb
xor
push
jecxz
call
push
out
xchg
or
idiv
rcll
pop
inc
stos
mov
les
adc
adc
push
dec
add
adc
aam
and
es
ret
call
stos
add
repnz
and
add
mov
xchg
jo
clc
or
or
nop
je
cmpb
loop
cmp
and
cmp
mov
sub
js
and
sbb
add
fldt
cwtl
iret
pop
rorl
mov
test
add
adc
fmull
fisubl
faddl
in
and
shl
daa
test
pop
out
loopne
fiaddl
jne
mov
rorl
dec
nop
mov
or
add
add
or
cmpsb
movsb
test
mov
in
add
sbbb
fs
jmp
testb
sub
pop
sarb
enter
nop
loopne
mov
lock
lods
inc
mov
in
cmp
sub
push
push
ret
push
add
js
arpl
push
mov
jno
push
mov
das
aam
or
sbb
add
divl
pop
cmp
insl
call
or
into
daa
jae
pop
sbb
pop
add
jb
je
dec
or
adc
push
or
mov
outsb
cmp
ret
mov
xchg
pop
inc
ljmp
sbb
in
push
sbb
rcll
aaa
int
sbb
subb
cli
xchg
push
mov
xor
dec
rcll
sarb
pop
cmp
sub
jnp
dec
sbb
test
hlt
and
xor
popf
jp
es
adc
cltd
mov
inc
cmpsb
jnp
pop
stc
test
les
xor
adc
add
int3
push
into
ljmp
pop
popf
cwtl
add
mov
mov
hlt
sub
xchg
inc
xor
mov
add
das
mov
adc
mov
or
mov
ds
imul
add
test
inc
dec
je
xchg
lods
or
ficoml
xchg
cmp
imul
pop
mov
loopne
adc
js
add
sub
mov
imul
dec
je
inc
rcll
cmp
adc
add
xlat
dec
add
in
sbb
addl
movsl
push
das
dec
pop
mov
shlb
mov
sub
adc
movups
xor
loope
int3
inc
test
jl,pn
decl
daa
sbb
jle
lret
mov
out
in
or
dec
adc
mov
mov
orl
fnstenv
mov
push
sub
loop
fmuls
cmp
lret
inc
pop
clc
cld
rep
int
pop
or
jne
pop
adc
add
push
fmuls
dec
or
aaa
lcall
or
jne
xchg
and
stos
adc
or
jo
js
dec
xor
sub
xor
mov
push
dec
repnz
sub
mov
jg
mov
adc
call
add
clc
and
enter
ljmp
sub
je
push
adc
and
and
pop
mov
xchg
add
stc
add
mov
test
lret
cmp
mov
fbld
xor
add
dec
push
sahf
mov
loopne
push
mov
lahf
xorl
je
jmp
push
sbb
add
xor
ds
dec
add
lds
cmpl
sbb
popa
cmp
cli
and
orb
xor
leave
sbb
adc
xchg
mov
in
rolb
das
push
push
mov
jp
ret
and
jne
cltd
jb
dec
push
pop
push
xchg
ljmp
cld
scas
add
or
sbb
inc
rorb
cs
out
or
scas
shrl
and
hlt
scas
cmp
lahf
mov
add
test
repz
mov
cmc
cwtl
imul
push
orb
dec
dec
pop
decb
push
mov
ret
out
aam
clc
ds
iret
mov
and
cs
aaa
inc
lock
cmp
sub
insb
or
pop
pop
pop
and
and
dec
and
xchg
add
lret
insb
icebp
pop
xchg
mov
jnp
das
adc
adc
insl
das
pop
push
adc
jle
cmpsb
mov
mov
dec
enter
add
cmp
pusha
adc
mov
push
and
stos
and
push
mov
and
and
hlt
and
dec
jle
push
xchg
in
jle
fldl
adc
sub
mov
xor
pop
jg
js
addl
add
dec
dec
or
dec
inc
mov
mov
sub
push
inc
dec
adc
jnp
inc
adc
cmp
pop
or
add
shrb
sbb
fld
sub
jl
int
jo
das
xchg
or
mov
push
xchg
mov
in
jno
adc
fcoms
jmp
sbb
cmpl
jg
mov
outsl
lret
dec
xor
mov
mov
sbb
dec
xchg
and
pop
xchg
sub
popa
addr16
push
pop
xor
add
cmp
sarl
push
je
sti
push
xchg
add
cmp
mov
fistl
addr16
int3
mov
sbb
pusha
leave
andl
adc
pop
lcall
lcall
inc
xchg
out
cmpsl
out
shlb
iret
and
adcl
and
adc
or
mov
inc
jecxz
insb
lea
cltd
pop
mov
decb
insb
cmp
adc
nop
inc
add
fisttpll
in
pop
pop
cltd
lds
push
pop
sub
inc
add
cltd
mov
or
mov
pop
or
adc
adc
sub
ret
nop
stc
or
push
dec
mov
mov
addl
push
aad
push
mov
adc
xchg
mov
or
js
mov
adc
and
lea
out
insb
xchg
jno
jbe
add
jo
xchg
mov
inc
and
jns
cmp
mov
mov
aad
inc
les
sti
add
lods
ja
sub
push
jecxz
aas
push
or
mov
xchg
dec
pop
jmp
loope
rorb
sarl
or
repz
adc
loopne
shr
sbb
xchg
lret
add
bound
add
lods
sbb
mov
add
adc
call
or
popa
adc
loope
mov
pusha
pop
sbb
sbb
sbb
out
adc
aas
sub
inc
or
lds
push
pause
mov
add
in
in
movb
clc
gs
and
std
adc
je
add
adc
imul
sbb
iret
xchg
xchg
sbb
loope
insl
jo
movaps
addl
adc
add
push
lock
sub
dec
inc
push
or
nop
mov
fcoml
mov
jmp
shrb
andl
daa
xor
lea
sub
aas
and
pop
dec
je
shll
jecxz
or
insb
xchg
mov
inc
jmp
xor
mov
jnp
add
into
hlt
scas
aam
xor
test
je
pushl
add
push
cmpsl
jo
les
dec
filds
scas
ljmp
pop
push
sub
jno
sbb
xchg
icebp
mov
inc
jl
das
fmull
push
mov
lods
lds
leave
leave
cmpps
rclb
or
jg
sbb
ret
cmpsb
cmpsl
push
push
pop
insl
loopne
inc
add
push
popa
sbb
and
ss
nop
subb
lcall
mov
mov
sbb
push
sbb
lds
in
and
xor
jle
jo,pn
fbld
fdivs
cmpb
cld
or
pop
cmp
pusha
mov
adc
lds
adc
inc
and
data16
fadd
or
mov
lret
xor
jmp
xor
mov
arpl
nop
fst
inc
mov
icebp
ret
les
xchg
jne
pusha
lods
in
inc
jl
cmpl
in
pop
shl
unpcklps
in
jb
jl
sbb
jo
ret
test
fcompl
es
scas
push
orb
and
orl
aaa
lods
daa
in
adc
scas
adc
clc
hlt
mov
shrb
jp
loope
outsl
or
clc
xchg
add
insb
ljmp
out
adc
and
repnz
mov
xchg
sbb
cld
adcb
mov
sbb
mov
test
out
leave
xor
adc
je
cmpb
sub
mov
insl
sub
jo
mov
or
xchg
push
lds
insl
imul
cmp
or
es
aas
aaa
sub
jb
movsb
fildll
sbb
outsb
outsl
ja
pop
adc
mov
pop
push
jne
cmpsl
and
aas
xchg
inc
xor
and
je
and
je
lret
pop
add
jo
popa
stc
je
gs
and
or
gs
movsb
dec
popa
imul
insb
sbb
jnp
lret
adc
cmp
jne
xchg
jo
shlb
xorb
dec
xchg
xor
jae
ds
fs
sbb
and
cltd
xchg
ret
mov
pop
and
test
jg
jl
lcall
push
xlat
dec
lods
lahf
and
xor
mov
subb
push
sub
hlt
inc
push
mov
icebp
daa
dec
outsb
imul
ja
sub
ret
mov
jnp
repnz
xor
adc
and
jl
call
and
rclb
out
jl
push
push
mov
cmpsl
stc
mov
mov
insb
and
sub
divl
or
jmp
push
not
mov
je
sbb
push
je
xor
and
push
fsubrs
pusha
xor
add
pushf
in
cmp
sbb
sbb
ds
push
dec
mov
add
ds
adc
add
xchg
push
jne
lds
jae
dec
and
mov
push
sti
sbb
je
dec
mov
out
cmp
in
pushf
xor
data16
and
fiaddl
lcall
inc
enter
lcall
mov
popf
outsb
es
popa
jb
or
andl
mov
lock
adc
adc
or
lods
xorl
jo
mov
add
fsubrs
aam
fcomps
mov
and
in
cwtl
addr16
sarb
mov
int3
aaa
jge
ss
mov
xchg
das
in
jge
sarb
sarb
test
nop
imul
aaa
jge
mov
je
sbb
lods
aaa
jge
leave
pop
jb
test
mov
movsb
aaa
jge
insl
nop
and
mov
aaa
mov
mov
pushf
cmp
mov
add
outsb
mov
faddl
cwtl
inc
shrb
pop
adc
lods
sbb
stos
mov
push
aaa
cmp
sbb
push
hlt
jp
aam
dec
sbb
adc
dec
inc
ja
or
or
outsb
nop
cwtl
movsb
jb
dec
nop
mov
xchg
pop
call
fs
scas
inc
mov
dec
mov
adc
test
movsb
enter
sub
nop
scas
dec
lock
ja
push
jno
sub
cmp
jb
movsb
js
dec
xor
inc
pushf
pop
je
lds
push
cmp
sub
cmp
and
fs
ret
js
jmp
sub
sub
clc
pop
insb
aad
lcall
inc
push
cs
outsl
out
inc
mov
pop
and
popa
insl
and
loope
lods
pop
mov
jb
scas
jne
mov
adc
idivb
out
push
inc
cs
dec
dec
daa
or
insb
movsl
jnp
push
sub
or
and
push
push
or
outsl
pop
jb
jae
inc
xor
das
gs
inc
dec
inc
pop
je
pop
inc
cmpsb
ja
daa
jne
lods
lock
inc
cmpsb
hlt
das
outsl
or
dec
dec
orb
gs
arpl
and
fistpll
xor
sub
xor
sub
or
test
push
incl
or
imul
outsl
jne
outsw
sarl
mov
and
jnp
push
pop
pop
dec
xchg
outsb
je
sub
or
jb
cmp
jp
subb
mov
mov
outsb
gs
daa
ss
and
shrb
shrl
sti
dec
sub
mov
cmp
imul
and
fidivs
xchg
sbb
sub
mov
gs
imul
insb
sub
je
loopne
push
xor
cld
mov
mov
shlb
dec
dec
ds
es
testb
arpl
call
pop
dec
pop
inc
pop
inc
inc
dec
dec
inc
aam
pop
xor
dec
leave
xchg
pop
leave
xor
xor
pop
xor
xchg
pop
leave
xchg
xor
leave
ss
pop
leave
xchg
pop
aaa
cmp
sbb
mov
fistpll
and
pop
fs
shl
xchg
daa
aad
adcb
inc
bound
lahf
push
inc
add
mov
xor
and
fwait
jae
mov
and
jg
jo
jns
cltd
xlat
jae
push
jne
push
mov
ljmpw
cltd
decb
hlt
aas
inc
push
dec
dec
dec
inc
cmp
test
push
mov
xor
test
or
or
dec
push
xchg
je
rcrl
sub
add
mov
inc
pop
mov
cltd
or
pop
mov
outsb
rorl
add
outsb
xchg
cltd
pusha
hlt
fildl
and
stc
and
push
cltd
inc
rorb
add
jp
adc
ss
inc
dec
data16
and
hlt
and
int3
enter
enter
loopne
fcmovnu
fcmovu
lret
loopne
jecxz
in
pop
sub
lcall
mov
popa
je
xor
xor
xor
xor
ss
loopne
pushl
cmp
inc
inc
inc
inc
inc
inc
xchg
popf
lcall
bound
push
or
das
int
sbb
push
in
js
lea
adc
lods
adc
adc
jns
cmp
pop
into
push
xchg
or
aas
ss
es
cmp
repz
inc
cmp
inc
dec
push
pop
repz
rep
je
test
repz
mov
iret
repz
int3
aam
stc
cmp
repz
hlt
cld
add
out
sahf
cmpsl
or
sbb
sub
out
sahf
xor
inc
dec
push
pop
pushf
fsubrl
js
cmpsl
add
add
xor
repnz
dec
xor
enter
sbb
aam
popa
test
dec
inc
mov
bound
test
pop
mov
leave
enter
gs
mov
andl
xor
xchg
pop
pushf
jecxz
push
mov
shl
lock
repz
adc
xor
pop
push
js
cwtl
movsb
mov
enter
add
icebp
sahf
add
adc
add
lcall
int3
push
enter
cli
call
dec
arpl
test
pushf
jbe
testl
adc
jnp
push
testl
out
icebp
out
call
pop
cmp
sbb
int
mov
xchg
pop
out
push
xchg
iret
mov
jmp
jns
leave
outsb
mov
data16
push
add
out
jns
adc
dec
xor
push
push
pop
jmp
xor
movsb
mov
pop
pop
test
lods
cmp
ds
push
cld
addr16
xchg
nop
test
out
push
mov
lahf
and
lods
push
mov
xor
in
loopne
mov
xchg
sbb
mov
mov
pop
or
push
jmp
and
sahf
adc
jl
dec
sahf
out
popf
push
out
and
mov
aam
out
mov
mov
lock
je
out
cmp
ljmp
out
push
cmpsl
pop
jg
lods
xchg
xchg
and
aam
outsl
xchg
ljmp
dec
idivl
xlat
out
sbb
pop
push
xchg
cld
ja
int3
cmp
je
mov
fwait
subb
movups
mov
jo
pop
dec
popf
jle
mov
addb
or
cmc
and
and
ljmp
subb
add
pop
add
mov
push
adc
xor
push
nop
add
xor
add
inc
xor
add
cmp
add
inc
add
dec
xor
inc
push
nop
add
xor
in
cmp
xchg
aaa
pop
mov
push
add
inc
push
or
ret
inc
ds
dec
push
dec
inc
imul
out
pop
xor
aaa
xchg
pop
add
imul
or
xchg
add
adc
or
and
nop
xchg
and
insl
or
cwtl
adc
adc
jbe
dec
cli
lea
xor
cmp
pop
push
inc
adc
add
pop
inc
sub
mov
or
add
sbb
enter
mov
pop
orb
adc
xchg
cmpsb
add
sbb
mull
or
lock
xchg
dec
jmp
add
iret
scas
push
sub
sub
mov
pop
inc
dec
xor
out
lret
adc
push
test
xlat
sub
adc
inc
and
push
pop
fimuls
pop
push
dec
inc
and
inc
push
push
mov
or
shrb
sahf
aaa
rorl
popa
add
pusha
sahf
and
sbb
dec
dec
mov
js
inc
dec
sub
cs
xchg
push
jno
adc
push
aas
xchg
sub
jb
jb
sbb
mov
dec
fimuls
sub
jo,pn
insb
push
sub
cli
add
cmp
dec
sub
cmp
sahf
out
outsl
xor
add
out
repnz
adc
and
setl
cmp
and
popa
push
daa
enter
inc
lcall
repnz
enter
sbb
nop
out
cmp
xor
or
mov
les
inc
jbe
fs
adcb
pop
adc
in
cli
xor
adcl
cs
repnz
sarl
sbb
cmp
cmp
repz
jo
xchg
lods
cmpsl
stc
cmp
aam
add
sahf
out
sahf
sbb
cmp
pusha
je
sahf
out
mov
sahf
out
ljmp
sahf
out
inc
push
bound
fnstsw
out
sahf
lods
mov
out
es
add
push
xor
out
push
inc
pop
pop
insb
andb
ror
loop
enter
adc
insb
ds
dec
repz
repz
push
iret
repz
mov
in
or
out
lcall
jns
out
pop
insb
xchg
out
cli
or
jns
out
push
cmp
out
sahf
out
mov
jns
shl
repnz
outsl
and
cmp
repz
pop
push
xchg
repz
repz
shl
repnz
mov
outsb
push
xor
repz
repz
mov
stc
cmp
fdivp
add
sbb
out
sahf
sub
dec
push
push
add
loopne
jns
in
jb
push
sub
sahf
out
sahf
dec
pop
fs
sahf
jns
out
stos
mov
xor
out
cli
or
sub
repz
ss
dec
push
push
cmp
repz
movsb
mov
out
decb
je
sub
out
sahf
out
jp
xchg
stos
lahf
out
sahf
mov
adc
iret
repz
xor
push
push
js
cmpsb
mov
iret
loop
adc
ss
jne
dec
push
pop
push
jo
mov
repz
lcall
out
lcall
jns
out
insb
jl
movsb
mov
jns
out
shl
in
clc
iret
repz
add
sbb
cmp
iret
repz
outsb
adcb
mov
into
jbe
iret
repz
push
jns
xor
push
jb
nop
sahf
lods
xchg
cmp
mov
jns
out
push
push
sbb
xor
out
sahf
out
fs
xchg
sahf
out
sahf
pushf
scas
mov
iret
sarl
sbb
inc
push
repz
repz
jo
xchg
test
repz
mov
out
add
cmp
mov
sub
push
iret
repz
pusha
je
xchg
test
lcall
add
jns
out
and
inc
dec
pop
out
sahf
out
jp
lcall
lret
lock
cmp
sarl
push
sub
dec
repz
repz
push
xchg
cmpsb
mov
out
sahf
out
add
and
inc
jns
out
push
push
jns
out
mov
pushf
ja
testb
push
sub
pcmpgtd
test
mov
fsubr
inc
or
cmp
cmp
jbe
mov
iret
repz
fdivp
or
jns
inc
pop
insb
test
jns
out
mov
fdivp
xchg
movsl
xlat
adc
orl
mov
adc
aad
loope
add
cmpsb
imul
jo
cmp
sub
add
das
pop
in
push
mov
imul
inc
je
and
aad
insl
sbb
outsl
arpl
or
dec
into
sbb
pop
push
xchg
imul
push
jne
jns
push
bound
fnstcw
cmp
sbb
add
add
enter
fs
sbbb
xlat
adc
cs
ds
adc
notl
lods
das
dec
jmp
loop
inc
aaa
movsb
push
add
or
pop
cltd
adc
data16
sub
movsb
xor
xchg
jns
mov
shlb
popa
push
pop
lock
inc
push
popa
mov
fwait
gs
fstps
loopne
jo
rolb
push
jb
popf
sub
and
xchg
mov
ljmp
jns
daa
fsubrl
or
inc
sub
cltd
and
push
push
xchg
outsl
insl
mov
pusha
icebp
imul
sbb
bound
pop
orb
loope
mov
ficompl
push
adcb
popa
pop
pop
jb
mov
popa
fs
push
adc
xor
add
outsl
add
and
dec
data16
push
out
fidivl
ja
pop
fs
popa
sbb
mov
push
mov
cmp
pop
push
cmp
xor
test
scas
jno
adc
clc
shrb
gs
xorb
xchg
popa
mov
fbstp
cs
mov
gs
outsl
mov
dec
cmp
fsubrp
gs
push
inc
jbe
jo
jae
xchg
or
inc
subb
mov
mov
ret
mov
in
leave
mov
inc
icebp
pop
pop
addr16
dec
mov
daa
repz
inc
xor
xor
or
push
insl
aaa
nop
inc
adc
test
sbb
xor
icebp
mov
arpl
jnp
sub
add
ss
mov
mov
push
nop
dec
loope
lods
add
push
pusha
loopne
lds
sti
push
push
insb
pcmpeqd
mov
xor
inc
shlb
inc
mov
and
mov
lea
inc
bound
mov
mov
jbe
push
out
push
gs
pop
or
jns
iret
out
push
add
pop
inc
imul
fadds
or
or
aas
cmp
imul
mov
inc
orl
pop
lods
outsb
bound
pusha
xchg
xor
sub
pop
rep
cmp
sti
pop
dec
pop
mov
arpl
add
bound
or
daa
dec
mov
adc
idivl
jo
dec
ja
xchg
sbb
sub
inc
pop
ret
adc
lahf
add
mov
popa
mov
pop
push
movsl
test
pop
adc
add
popa
xor
pop
jae
xor
sub
ja
inc
notl
scas
sub
loope
dec
inc
sbb
jmp
pusha
pop
adc
cmp
add
mov
push
push
fcomps
sahf
mov
rcll
daa
mov
imull
inc
pusha
stos
or
insl
inc
and
and
inc
cmp
xlat
jae
nop
push
xchg
movsb
sbb
je
add
sbb
pshufw
or
movsl
inc
cmp
pop
aas
mov
cmpsl
or
add
pusha
mov
jo
aaa
mov
inc
xor
addr16
ret
gs
mov
fsubs
stos
add
xchg
inc
insb
push
mov
add
adc
dec
or
out
shlb
imul
test
push
lods
insl
add
mov
xchg
dec
es
dec
push
xor
push
imul
ja
sub
dec
inc
popf
push
popa
bound
daa
inc
mov
push
pop
mov
or
cwtl
jb
mov
dec
or
in
pop
dec
mov
pusha
inc
inc
push
ficomps
sbb
sbb
push
cmp
popa
imul
ljmp
jns
je
and
mov
das
sub
sub
xchg
sub
jo
push
nop
and
inc
inc
inc
not
jno
iret
sub
arpl
and
lods
add
push
dec
xor
or
dec
sbb
mov
xchg
ss
push
cwtl
xchg
push
aaa
mov
jae
dec
pop
arpl
ficompl
jecxz
pop
aas
inc
xor
sbb
jbe
sbb
popa
jo
push
cmp
adc
mov
iret
and
stos
imul
mov
lahf
pop
and
loopne
mov
dec
dec
pop
dec
sbb
lcall
jmp
mov
shll
aad
daa
push
gs
frstor
push
pop
dec
data16
stos
and
inc
es
pusha
pop
psubsw
cmp
sub
daa
divl
or
xchg
inc
roll
dec
divl
adc
sbbl
in
jae
fsts
jbe
inc
pop
xchg
inc
and
insb
jo
icebp
mov
xchg
or
adc
push
fs
adc
ret
shl
mov
imul
fisubrl
push
jb
jae
js
sti
or
pop
daa
inc
ret
ljmp
sbb
jo
outsb
jne
adc
jb
imul
aam
sbb
lods
inc
sub
inc
push
push
dec
ja
fs
jae
push
xorb
and
cmp
xlat
pusha
mov
aam
movsl
sub
ss
clc
das
outsb
scas
mov
dec
adc
sbb
pop
inc
in
pop
pop
jo
shl
mov
in
push
sbb
jecxz
sbb
or
jb
and
xorb
icebp
pop
or
cs
jns
cmp
cmp
inc
pop
jbe
add
subb
test
inc
push
outsl
pusha
shlb
inc
xlat
insl
cli
adc
push
sbb
mov
sub
icebp
pop
sti
push
mov
lahf
mov
xchg
lea
pop
aaa
lods
insl
pop
pop
push
push
lds
outsl
push
push
sub
and
outsb
lds
mov
imul
data16
sbb
add
fsubs
push
es
jmp
in
jae
dec
decb
mov
arpl
sbb
sbb
adc
sub
popa
push
xchg
jns
pop
stos
mov
repz
cmp
dec
jae
mov
and
sub
jae
jnp
add
and
fs
nop
inc
mov
mov
nop
imul
pop
ret
outsl
addr16
es
lock
mov
mov
es
and
sbbw
sbb
push
adc
dec
imul
aaa
push
test
fcoms
jnp
mov
inc
jb
and
test
pop
pop
sub
push
cmp
cmp
in
sub
bound
mov
pop
xchg
pop
xlat
outsb
pop
adc
jb
or
sarl
mov
pop
outsl
inc
mov
scas
xor
lods
mov
inc
daa
dec
xchg
jb
xchg
jg
adc
movsl
lods
imulb
xchg
pop
jno
in
and
pop
mov
xchg
push
jae
je
mov
cmpsl
shll
out
pop
pusha
sub
mov
popa
aas
rclb
adc
dec
sti
cmp
mov
or
xor
inc
inc
sbbb
insl
xchg
push
xor
je
inc
jno
sbb
xchg
or
xchg
dec
sbb
cmp
dec
popa
sbb
mov
pop
mov
pop
daa
cmp
adc
and
jnp
xchg
insl
adc
mov
fcmovb
loop
or
inc
xchg
in
mov
sbb
pop
inc
fs
fldl
sbb
pop
add
je
pop
pop
mov
imul
mov
pop
push
mov
jo
repz
mov
cmpsb
fildl
pop
inc
daa
and
mov
fcmovne
and
inc
mov
sbb
jecxz
or
and
imul
rcrb
xchg
fisubrs
or
insl
and
mov
dec
inc
outsb
pop
ja
fwait
lods
stos
pop
dec
je
lcall
arpl
sbb
repnz
add
fs
cmc
mov
fldenv
add
pop
fsubl
dec
test
cmp
push
aam
data16
cwtl
mov
sub
jge
cmpsl
sub
lret
aaa
pop
adc
daa
sbb
insb
xor
mov
add
mov
js
insl
jbe
pop
push
cmp
das
inc
pop
mov
cmp
in
sbb
ja
and
aad
or
dec
pop
mov
xor
push
sub
inc
repz
sub
pusha
outsb
xor
stos
sbb
sarl
loope
ja
dec
jo
dec
stos
xor
inc
pop
xchg
mov
pop
inc
jecxz
stos
lcall
scas
dec
fildl
mov
subl
push
cmp
insb
jo
stos
roll
scas
or
rcpps
and
stos
mov
arpl
out
pop
add
sub
cmp
dec
aam
mov
adc
adc
es
fs
outsl
mov
mov
jl
jbe
add
mov
jmp
inc
and
mov
lods
cmp
adc
and
dec
and
inc
rcll
shrb
sub
cmp
push
xor
jl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
clc
ljmp
insl
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
clc
xor
dec
sub
pop
xor
outsb
xor
jle
xchg
mov
xchg
xor
pushl
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
dec
xor
pop
xor
xor
xor
pushl
in
xor
xor
xor
xor
mov
lret
aaa
test
lds
stc
aaa
add
cmp
cmp
cmp
data16
jns
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cwtl
ds
sarl
ljmp
aas
adc
pop
aas
es
sub
cmp
aas
mov
nop
or
xor
pop
xor
incl
mov
aaa
xor
jae
jg
xchg
mov
xchg
outsb
sub
xor
inc
xor
dec
xor
pop
xor
xor
clc
call
xor
xor
xor
xor
sbb
and
aaa
and
aas
fcompl
jbe
mov
shlb
xor
xor
cmp
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
bound
jbe
jl
xorl
mov
jnp
xchg
ss
jne
int
nop
mov
push
mov
imul
or
xor
jg
loop
out
in
mov
add
mov
lahf
sub
push
push
pop
jl
inc
repnz
outsl
mov
add
inc
xor
dec
addr16
pop
enter
stos
jge
leave
insb
sbb
lods
mov
leave
addr16
aam
push
cltd
dec
nop
cmp
out
sbb
or
shlb
push
xor
jns
fcompl
andb
iret
rorl
test
shlb
cmp
and
push
dec
dec
jo
or
add
and
jo
mov
dec
dec
inc
and
stc
cs
in
sahf
and
jl
xchg
outsl
cwtl
dec
hlt
daa
rol
test
xchg
sub
int
add
xor
test
add
stc
dec
and
mov
xor
scas
lods
mov
add
dec
add
ja
xor
add
pop
inc
das
arpl
inc
and
sbb
jnp
push
es
pop
dec
cmp
mov
dec
dec
dec
mov
jae
add
pop
adc
xchg
in
inc
push
negb
icebp
fidivl
mov
lcall
dec
push
mov
xor
enter
mov
jo
mov
mov
xor
inc
lcall
mov
cmpsb
push
inc
jg
add
iret
imul
add
repnz
ds
repz
add
cmc
out
sahf
out
notb
sahf
out
sahf
clc
movsb
stc
int3
cli
hlt
repz
jns
mov
cld
inc
iret
repz
std
insb
xchg
mov
scas
in
scas
xchg
add
push
addr16
filds
dec
push
dec
repz
int3
inc
cmp
fdivrs
je
push
ds
dec
cmp
mov
mov
dec
push
out
dec
fimull
dec
mov
out
rclb
dec
mov
cs
loopne
movsb
inc
xchg
xchg
int
inc
or
cmp
add
sarb
dec
xchg
dec
dec
lcall
adc
out
test
lods
and
xchg
push
add
int
ror
insb
push
dec
cld
out
loopne
hlt
push
mov
mov
out
mov
pop
dec
sub
or
pop
adc
adc
in
filds
sub
call
sbb
jg
push
cli
push
adc
iret
repz
sti
cmp
fs
mov
mov
fmull
jg
lcall
adc
push
leave
mov
insb
push
leave
jae
jl
movsb
leave
jae
cmp
int3
test
movsb
cmp
hlt
mov
or
push
and
mov
call
push
push
fwait
clc
pushl
and
push
dec
dec
dec
push
inc
push
or
dec
cmpsb
jb
addr16
cmp
and
aad
xchg
mov
and
adc
aaa
jae
jb,pn
push
mov
es
and
jbe
mov
cmp
mov
push
popa
cs
jmp
arpl
add
adc
add
push
mov
cmpsb
push
pushl
divl
sbb
cmp
arpl
jl
xchg
aaa
sbb
das
cmp
pop
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
push
xor
cmpb
ds
pushl
pop
aas
jle
sarl
xchg
push
cmc
xor
xor
jmp
sub
bound
shll
sbb
xor
inc
ss
ss
scas
sar
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
mov
push
ds
ds
cmp
dec
mov
ds
ds
sbb
dec
aas
push
aas
jle
mov
aas
sarl
aas
ljmp
int
jg
push
in
push
xor
xor
push
xor
mov
xor
jg
xchg
ljmp
hlt
xor
xor
xor
xor
xor
xor
xor
hlt
call
add
adc
es
inc
xor
clc
sub
popf
xor
addr16
incl
mov
ss
jecxz
adc
sbb
aaa
inc
aaa
dec
aaa
insl
aaa
xor
aaa
out
aaa
adc
cmp
repz
incl
xor
xor
das
ret
test
cmp
cmp
cmp
cmp
in
cmp
inc
jnp
call
xchg
ds
ds
ds
loop,pt
jmp
pop
movsl
ljmp
xor
xor
xchg
xor
xor
xor
xor
jg
ffreep
shlb
xor
xor
xor
sbb
and
inc
xor
cld
xor
outsl
jle
xor
into
xor
out
out
xor
pushl
dec
arpl
insl
ss
mov
xchg
ss
shll
in
ss
ss
aaa
xor
pushl
dec
aaa
push
aaa
addr16
jae
xorb
aaa
fbstp
jmp
clc
aaa
or
adc
and
sarb
cmp
cmp
pop
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
cmp
cmp
jbe
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
shrb
cmp
pop
push
pop
jbe
jle
std
cmp
cmp
cmp
cmp
cmp
data16
popf
cli
jmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
cmp
jmp
cmp
pop
cmp
outsb
cmp
jle
mov
xchg
cmp
cli
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
push
cmpsl
jle
cmp
cmp
cmp
cmp
cmp
int3
cmp
cmp
cmp
mov
cmp
mov
xchg
cmp
cmp
cmp
into
inc
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
es
ds
push
cmp
outsb
cmp
xor
cmp
cmpsb
cmp
mov
cmp
out
cmp
jle
inc
mov
ds
dec
aas
das
jp
data16
jbe,pt
jle
xchg
mov
sahf
ds
imulb
mov
out
out
idivb
ds
aas
push
aas
push
aas
push
into
cs
ss
ds
call
aaa
std
inc
aas
dec
aas
push
aas
cli
data16
outsb
aas
jbe
xchg
mov
xchg
aas
sahf
dec
aas
cmpsb
aas
scas
aas
mov
mov
aas
aas
fidivrs
out
out
aas
idivb
outsl
dec
dec
push
or
inc
push
bound
push
xor
xor
aam
xor
dec
mov
push
dec
data16
jbe
jle
xchg
mov
xchg
xchg
pushl
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
dec
xor
pop
xor
outsb
xor
jle
xchg
cmp
decl
xor
xor
xor
xor
xor
xor
incl
or
xor
xor
xor
xor
xor
xor
xor
call
clc
data16
adc
ss
dec
loop
pusha
ljmp
js
xorb
xor
mov
mov
xor
aad
cld
jmp
xor
clc
xor
adc
add
ss
cli
jg
cmp
inc
and
pop
ss
ss
mov
jmp
mov
inc
enter
fdivs
loopne
call
ss
pushl
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
aas
outsb
mov
nop
aaa
cwtl
aaa
mov
aaa
mov
aaa
shlb
fdivs
loopne
call
scas
shll
add
push
cmp
cmp
cmpb
cmpsl
incl
nop
cmp
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
or
sbb
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
jmp
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
incl
cmp
or
or
adc
adc
sbb
sub
dec
cmp
push
cmp
pop
cmp
cmp
loopne
ljmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
decl
xor
cmp
adc
adc
sbb
sbb
and
and
sub
cmp
pop
cmp
scas
add
jmp
cmp
cmp
cmp
push
mov
mov
mov
cmp
pop
sarb
aam
fdivrs
in
jp
call
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
pushl
cmp
cmp
cmp
jle
sbb
and
sub
xor
cmp
decl
cmp
jl
cmpb
cmp
movsb
cmp
sarb
filds
in
call
sub
decl
pop
test
xor
cmp
dec
ds
decb
loopne
jl
test
mov
mov
nop
ds
jp
mov
add
jg
ret
in
call
ds
ds
cmp
fistps
cmp
inc
aas
inc
out
dec
aas
push
aas
push
aas
pop
aas
pop
aas
mov
aas
jo
nop
aas
cwtl
aas
pushf
aas
mov
je
decl
into
mov
mov
aas
hlt
aas
clc
aas
cld
mov
ficomps
mov
xor
xor
adc
adc
and
pop
add
dec
xor
pop
xor
xor
int
fisubrl
test
lods
xor
xor
les
enter
or
or
adc
cld
fistps
xor
and
and
sub
cmp
pop
xor
xor
mov
js
jl
xorb
adc
pavgb
lock
sbb
sbb
and
and
sub
sub
xor
cs
pushl
cmp
push
xor
xor
xor
ljmp
xor
loopne,pt
in
call
xor
decl
dec
xor
push
xor
pop
xor
xor
lods
xor
xor
les
enter
cmp
cmp
cmp
rcll
sbb
jo
cmpb
sbb
cmp
aas
cmp
mov
and
mov
das
nop
or
xor
clc
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
xor
decl
xor
xor
ss
fnsave
in
in
aaa
cmc
aaa
clc
std
aaa
bound
xchg
cmp
mov
cmp
cmp
push
cmp
cmp
cmp
sbb
ds
aas
cmpsl
test
or
xor
push
xor
into
xor
aaa
mov
inc
ss
add
push
aaa
les
lret
cmpsb
cmp
adc
sbb
subb
inc
sub
xor
cmp
inc
cmp
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
test
sarl
push
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
xchg
cwtl
cmp
pop
shrb
jle
or
pop
sbb
push
xor
jg
jmp
xor
xor
popf
xor
xor
xor
out
push
xor
push
ds
mov
lds
xor
ljmp
add
ds
aaa
shll
cmp
cmp
scas
repz
cmp
cmp
outsb
cmp
mov
or
das
xor
cmpsb
cmp
adc
das
adcb
test
clc
aas
clc
mov
cmp
xlat
ds
aas
sbb
and
or
sbb
aas
sub
clc
lcall
xor
mov
xchg
xor
xor
call
xor
jecxz
loopne
xor
data16
pop
xor
xor
lock
xor
ss
xor
sbb
adc
out
ret
sub
pop
ss
ljmp
and
xor
inc
aaa
pop
cld
ja
pop
aaa
mov
lods
aaa
mov
mov
ljmp
pushl
shll
xlat
aaa
fidivs
in
jmp
aaa
add
pop
cmp
cmp
cmp
pop
push
mov
push
xor
push
cmp
pusha
cmp
jb
daa
mov
push
mov
mov
clc
out
inc
loopne
add
or
adc
xor
jnp
lock
clc
sub
cmp
cmp
je
lods
cmp
and
decl
push
test
hlt
cmp
cmp
cmp
cmp
cmp
stc
cmp
cmp
mov
aad
loope
cli
sar
dec
cmp
sub
xor
xor
jmp
cld
xor
insl
xor
xor
xor
xor
bound
xor
lret
pop
test
subb
dec
mov
mov
jl
adc
out
cmc
xor
ss
inc
popf
sarb
xor
jo
test
or
scas
or
ja
mov
ds
arpl
lret
xor
sbb
push
enter
fwait
cmp
cmp
loopne
push
pop
mov
nop
cmp
mov
xor
lcall
inc
add
lock
or
clc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cld
scas
inc
adc
add
dec
cmp
cmp
cmp
cmp
cmp
orl
push
sub
inc
mov
movsb
cmp
cmp
add
movsb
sarb
push
popa
adc
in
push
clc
cmp
mov
mov
cmp
clc
clc
bound
push
cmp
fs
cli
add
sub
pushf
cmp
jg
lods
cmp
rolb
jle
cmp
or
or
adc
mov
push
sbbl
and
das
mov
push
arpl
outsl
jp,pt
cltd
mov
push
mov
fnstsw
out
in
mov
or
and
sub
aaa
mov
inc
pusha
aas
push
je
inc
add
xchg
jle
jb
cmpsl
imul
out
aas
idiv
loopne
inc
cld
pop
addl
xor
xor
outsl
xor
push
mov
push
scas
mov
ljmp
call
mov
cltd
xor
xor
xor
pop
mov
shl
xchg
addr16
xor
inc
add
fisttps
push
xor
jb
jge
orl
call
xor
mov
mov
xor
inc
dec
div
push
add
push
ss
inc
cld
push
sbb
xor
ss
ss
stos
icebp
xlat
scas
loop
pop
ss
add
test
adc
fwait
mov
cli
mov
or
shlb
fldl
ss
dec
or
movswl
pushl
adc
pop
aaa
and
jp
cmp
cmpb
pop
sahf
mov
mov
mov
mov
adc
adc
clc
out
ret
and
and
sub
sub
xor
cmp
loop
out
cmp
lods
lret
fdivrs
fsubrl
cld
outsl
pop
clc
in
call
mov
xor
cmp
cmp
inc
cmp
test
fimull
xchg
cmp
ret
lods
fcmovnu
xor
add
cmp
xor
inc
dec
ret
test
shrb
and
insb
call
pushf
arpl
dec
rcll
cld
or
dec
pop
cmp
xor
mov
ds
mov
jno,pt
jg
movsl
aas
aas
ljmp
popa
aas
outsl
mov
sbb
push
into
add
sub
push
xor
xor
mov
test
mov
mov
mov
xor
jg
add
adc
daa
push
xchg
cld
jno
repnz
xor
aam
insl
xor
xor
or
pop
sbb
xchg
aam
jmp
dec
cmp
mov
mov
cmp
mov
jg
cmp
cmp
cmp
cmp
cmp
cmp
fcmove
cmp
cmp
cmp
ljmp
add
loope
jmp
cmp
cmp
cmp
cmp
and
aas
dec
aas
dec
scas
aas
clc
push
aas
pop
aas
pop
jle
aas
imul
jne
jns
jge
cmpl
mov
aas
sbb
pop
mov
push
sahf
xor
andb
dec
jnp,pt
into
cltd
sar
mov
fidivs
loop
out
ljmp
pushl
cli
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
test
call
xor
mov
gs
scas
jns
jge
xorl
cltd
ss
ret
icebp
in
movsl
ss
pop
cmp
out
cmp
pop
mov
scas
ret
push
cmp
pushf
ret
inc
mov
ds
sbb
push
and
in
aad
mov
xor
push
xor
mov
mov
ljmp
xor
xor
outsl
xor
xor
xor
xor
xor
xor
or
xor
cmpsb
cmp
mov
xor
pop
xor
xor
jno
ja
and
push
incb
cwtl
movsl
push
mov
decl
in
hlt
xor
xor
or
adc
adc
xor
and
sub
cmp
inc
cmpsb
push
cmpsb
adc
sahf
xor
mov
xchg
xor
and
xlat
xor
push
aaa
outsb
xchg
loope
xor
inc
cli
pushf
aaa
cmp
mov
repnz
stos
adc
lret
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
xchg
push
add
cmp
inc
add
shlb
push
popa
sahf
ljmp
inc
je
ss
aad
mov
call
mov
mov
scas
pop
ds
ds
je,pt
js
addb
fwait
inc
mov
ds
aam
pusha
int
dec
fcoml
outsb
and
mov
lcall
js
jl
cmpb
data16
add
mov
dec
sbb
filds
aam
fdivrs
fdivrl
loopne
in
call
push
cld
cmp
cmp
sbb
mov
xor
add
cmp
push
push
ljmp
test
mov
nop
cs
xor
rorb
xor
arpl
aaa
or
clc
xor
sub
xor
mov
inc
xor
push
push
dec
ret
test
mov
nop
pop
pushf
xor
test
data16
in
stos
jo
sbb
clc
xor
jle
mov
cmp
inc
xor
dec
inc
push
xor
mov
push
js
mov
push
test
lods
inc
mov
mov
sub
rol
out
lret
pop
pop
pop
into
adc
sbb
xor
mov
push
shlb
jecxz
sbb
ficompl
iret
jae
xor
mov
stos
dec
cld
outsl
inc
mov
xor
xor
xor
xor
out
mov
scas
inc
xor
xor
xor
xor
xor
xor
xor
jmp
js
jl
xorb
mov
xor
xor
xor
xor
cmpb
pushl
xor
xor
inc
xor
out
lret
sbb
ja
dec
dec
and
fimuls
dec
push
shll
and
sub
movsb
and
push
push
xchg
lcall
xor
je
jl
test
mov
xchg
and
movsb
sub
dec
xor
aam
int3
ds
faddl
out
inc
in
divb
or
push
aaa
sbb
sub
inc
xor
jl
test
lcall
pushf
test
movsb
inc
lods
inc
mov
movsb
es
push
int3
push
xchg
lcall
pop
out
les
in
aaa
lock
aaa
cld
aaa
dec
cmp
cmp
push
cmp
lcall
cli
dec
cld
inc
rolb
int3
cmp
lcall
push
ret
or
test
mov
mov
nop
adc
es
fidivrs
lcall
and
daa
cltd
aam
and
inc
ret
outsb
sar
je
js
jl
cmpb
rorb
insb
inc
cwtl
pop
push
fmull
dec
clc
sbb
call
cmp
sbb
bound
cmp
data16
push
push
cmp
cmp
jb
mov
shlb
cmp
push
ret
push
cmp
lds
push
adc
movsb
xchg
clc
stos
dec
pushf
bound
sub
dec
clc
push
push
mov
or
inc
sub
mov
xchg
pop
fwait
je
popf
cmp
adc
sub
push
outsb
and
cmc
cmc
in
aas
pop
into
pop
push
jge
xor
aas
shlb
jmp
outsl
xor
aad
sbb
sbb
jb
ja
mov
xchg
cmpsl
lcall
cld
mov
mov
xorb
pop
scas
imul
dec
inc
daa
scas
mov
mov
or
or
xorb
pop
dec
jp
mov
xor
mov
sarb
and
clc
mov
cmc
cmp
and
xlat
cmp
xchg
ret
stc
scas
lcall
mov
popl
mov
jg
adc
and
dec
cli
jb
ja
test
pop
test
mov
filds
stc
or
adc
aas
dec
xchg
popa
jo
mov
movsl
aas
mov
insl
and
sarb
add
iret
je
jp
push
mov
add
xchg
es
outsl
lcall
pop
cs
add
xor
xor
rol
cmp
pop
lods
data16
xor
xor
xor
sbb
jle
xor
or
inc
and
adc
or
dec
cmp
cmp
stos
rclb
cli
cmp
mov
cmp
pop
sbb
ljmp
js
push
inc
push
mov
mov
jnp
fbstp
aaa
xor
daa
inc
adcl
add
ret
add
push
push
xor
xlat
jg
jge
aaa
jg
scas
out
mov
ja
mov
lock
cmp
ret
cmp
cmp
cmp
cmp
push
std
sbb
cmp
mov
dec
fisttps
mov
jl
pop
dec
sbb
clc
jecxz
cmp
or
and
xor
rclb
scas
insb
xor
xor
xor
lds
mov
pop
ss
mov
dec
sbb
cmp
cmp
loop
push
clc
push
cmp
xor
cmp
mov
movsb
jge
imul
sbb
mov
adc
pop
add
sahf
aas
out
add
and
fidivl
out
bnd
or
roll
xor
xor
cmpsb
inc
xor
mov
mov
xchg
push
cmp
xor
xor
adc
dec
mov
xchg
lret
fbld
stc
ljmp
icebp
incl
push
leave
ss
aaa
jge
lcall
cmp
loop
cmpsb
popf
cmp
add
rcr
push
cmp
cmp
cmp
cmpsl
imul
jo
jbe
popf
xor
repz
xor
push
inc
loopne
xor
jno
jne
jns
jge
push
frstor
loope
xor
adc
dec
pop
mov
jbe
sub
mov
ljmp
dec
fidivs
loop
adc
xchg
cmp
cmp
cmp
cmp
cmp
xor
orb
xlat
sub
arpl
pop
mov
std
ds
pop
aas
mov
dec
nop
fimuls
clc
sub
xor
loop
xor
in
mov
xor
data16
ljmp
imul
jae
ja
jnp
jg
xorl
mov
hlt
xchg
ljmp
mov
sub
scas
bound
xor
stos
cs
fdivs
cmp
addb
mov
call
cmp
cmp
fidivrs
or
mov
add
mulb
cli
stos
mov
xor
lea
mov
and
or
push
sti
push
sbb
cmp
adc
ds
mov
ds
lea
adc
or
adc
xor
push
outsb
mov
invlpg
xchg
ja
stos
cmp
les
mov
pop
xor
push
xor
test
xor
aad
out
ss
ss
cmp
inc
cmp
xlat
negb
clc
xchg
add
jecxz
sbbl
mov
xor
xor
adcb
push
mov
lcall
mov
jns
lahf
push
lods
push
and
and
sub
pop
jg
outsb
sbb
jp
xchg
xor
mul
mov
pushl
or
sbb
es
adc
adc
or
lahf
pop
pushf
xor
xor
xor
xor
xor
mov
push
pop
rolb
add
je
pop
cmp
adc
icebp
fucomp
and
jb
xor
cmp
adc
adc
dec
xor
bound
pushf
xor
add
rorl
xor
or
pop
aam
inc
xchg
mov
push
in
pop
push
stos
or
sbb
sahf
add
pop
rolb
ss
lea
sbb
xchg
ljmp
mov
cmp
push
xchg
ds
lret
and
or
pop
clc
dec
cmp
push
sahf
test
cmp
cmp
outsl
add
mov
cmp
cmp
add
subl
call
cmp
cmp
cmpsb
ret
ja
inc
lea
jnp
shr
cs
shlb
movsl
inc
xor
sub
inc
adc
out
bound
sbb
xor
jle
or
ficompl
mov
sahf
mov
test
inc
cmpsb
push
xor
js
xor
dec
sbb
xchg
je
dec
test
filds
dec
fmul
push
ss
or
jmp
lcall
ja
and
aaa
xchg
aaa
sahf
push
into
cmp
stos
bound
cmp
sahf
cmp
fidivrl
jo
notl
jb
mov
test
xlat
xor
pop
push
movsb
cmp
cmp
cmp
call
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int
cld
pop
push
cmp
cmp
cmp
cmp
cmp
dec
mov
sbbb
or
rolb
push
dec
cmc
dec
sti
in
ljmp
out
sub
push
sahf
jmp
cmpsl
pop
jecxz
sahf
ljmp
ljmp
aam
in
push
ljmp
ret
sbb
mov
or
add
mov
dec
lods
outsb
mov
lcall
add
inc
orl
aaa
aad
push
fs
jo
nop
or
mov
add
cmp
cs
enter
xorl
xor
dec
jge
mov
xor
xorb
add
loopne
stc
sub
lea
pop
sbb
sahf
xchg
out
rcl
pause
rcrb
cmc
push
mov
and
imul
pop
xor
cmp
xor
xor
xor
xor
xor
xor
lret
mov
and
inc
mov
mov
xor
jmp
cmpsb
xchg
xchg
ja
decb
inc
mov
repz
movsb
clc
fwait
jg
mov
ss
add
adc
aaa
push
aaa
pop
aaa
je
call
aaa
mov
push
cmp
pop
cmp
cmp
mov
cmp
mov
push
loope
or
sete
mov
mov
push
and
cmp
cmp
cmp
xor
mov
mov
pop
or
mov
lcall
sbb
pusha
jecxz
cs
inc
mov
mov
mov
rorb
add
pusha
loopne
aaa
mov
arpl
loopne
add
dec
inc
xor
fdivrl
and
cwtl
lret
sarb
aaa
rorb
ret
test
movsl
jecxz
aam
jmp
repnz
and
out
add
xor
push
sar
cmp
loopne
and
xor
lods
adc
xchg
stos
out
xchg
mov
out
or
jmp
outsb
jae
filds
out
idivl
adc
int
shr
dec
sbb
bound
xchg
into
loope
sbb
push
repnz
cmp
or
push
jecxz
insl
mov
pop
repnz
in
xor
mov
call
xchg
lds
loop
xor
jno
sub
mov
loope
pop
push
ret
xor
add
xor
xor
pop
inc
ds
pop
or
and
add
bound
add
in
add
inc
add
mov
lea
outsb
dec
cmp
cmp
and
mov
cmp
jecxz
loope
lret
stc
cmp
imul
xchg
cmp
cmp
sbb
cmp
cmp
jecxz
sbb
ds
ds
xor
lcall
mov
aas
loope
add
dec
imul
xor
ljmp
push
pop
add
mov
insl
jge
mov
cmp
cmp
push
mov
mov
out
ja
cmp
scas
jmp
lods
outsb
loopne
push
adc
ja
or
inc
adc
adc
idivb
fsub
out
mov
add
testb
inc
stos
shrb
push
pop
xor
int
test
jmp
outsb
mov
push
ret
mul
xor
xor
push
mov
lret
push
fildl
inc
orl
mov
sub
cmp
call
jne
dec
call
loop
adc
mov
ds
aad
jl
mov
enter
jmp
js
cmp
cmp
cmp
sub
push
cmpsl
pop
iret
add
inc
inc
mov
test
or
or
fisubs
xor
sub
lret
xor
inc
lcall
cmp
or
mov
loopne
push
or
mov
cmp
pop
jg
ret
mov
xlat
cmp
inc
adc
jge
fimuls
pop
cmp
outsl
dec
xor
aas
mov
xor
inc
add
adcl
or
pop
ss
inc
movsl
mov
xor
cmp
and
jbe
rcrb
push
add
lock
imul
arpl
adc
mov
ja
repz
pop
fsubrl
loope
jl
test
test
stos
scas
aaa
divb
xor
xchg
mov
out
stos
inc
cmp
lcall
dec
popf
call
fbstp
mov
data16
add
xor
push
or
test
lret
push
ss
pop
outsb
les
dec
cmp
jbe
mov
dec
xchg
stos
fcmovb
cwtl
cmp
cmp
push
cmp
rcrb
jb
cmp
cmp
cmp
or
add
and
aas
cmp
push
xchg
sbb
mov
inc
rol
xchg
mov
ljmp
cli
cmp
outsb
and
push
outsb
sbb
dec
mov
addr16
sbb
fcompl
cmpb
xchg
cmp
ljmp
ror
repnz
mov
inc
sbb
pop
add
mov
movsl
loop
sub
fisttps
fcoml
ret
aas
sarb
fimull
mov
push
fcomi
cmp
jnp
xchg
sbb
dec
mov
push
add
divl
sbb
sub
test
xchg
lret
jb
or
cmp
test
cmp
xor
test
lahf
fbld
xor
into
mov
and
ljmp
adc
and
push
icebp
inc
pop
mov
mov
push
lcall
xchg
inc
stos
rolb
jmp
mov
mov
daa
outsb
lea
mov
aaa
and
mov
cmp
cmp
cmp
mov
sub
xor
mov
sub
pop
and
xor
cmp
notb
neg
loopne
je
jb
cs
sbb
mov
data16
add
fwait
jle
xor
cli
out
orb
sbb
scas
add
xor
ret
rclb
mov
or
jmp
or
sbb
and
sub
mov
push
add
imul
add
xor
push
add
jp
ljmp
xor
or
fmull
or
xor
push
or
jecxz
jge
movsb
lods
xor
mov
mov
fsubrl
inc
cld
pop
fsubr
jmp
divl
mov
cmp
outsb
mov
jl
xorl
mov
ss
dec
pop
mov
mov
mov
fidivs
in
repz
out
and
into
and
sub
inc
and
cmp
inc
lcall
arpl
push
jno
js
xchg
lea
fwait
aaa
mov
ret
add
mov
lcall
jb
inc
cmp
push
cmp
data16
mov
mov
dec
mov
aad
add
in
testb
lcall
push
les
xor
bound
je
xchg
stos
cmp
push
stos
cmpsb
shl
in
bnd
push
adc
mov
jno
push
add
repnz
arpl
jne
xchg
xchg
push
cmpsb
outsb
inc
and
cmp
cmp
inc
and
add
add
push
xchg
add
dec
cmp
insb
or
or
push
test
inc
push
inc
jl
rcrb
cltd
aas
stos
cmp
xchg
enter
dec
xchg
or
pop
xor
cmp
jecxz
incb
dec
xor
jp
xchg
or
aam
scas
mov
lret
xor
stos
cmc
aad
roll
fisubl
xor
xor
pop
push
mov
cmpsb
jae
xchg
xor
pop
push
lods
lret
pop
stos
andl
push
cmpl
cmpsb
push
dec
pop
mov
aad
push
mov
xor
rcl
xchg
pop
int3
xor
sahf
frstor
test
pop
test
jle
xor
pop
mov
push
test
cmp
jnp
stos
or
adc
adc
inc
pop
fisubrl
cmp
inc
mov
inc
sbb
mov
je
jo
jp
test
xchg
icebp
aaa
push
cmp
cmp
loop
cmp
es
test
mov
insb
repz
sub
je
jl
lods
xchg
aam
inc
pushf
rcll
fdivrl
sub
divb
std
xor
push
ds
cmp
cmpl
aam
mov
mov
mov
sahf
mov
inc
in
data16
push
cmp
pop
into
jl
sbb
sub
cmp
inc
inc
test
dec
sub
jae
mov
dec
push
cmp
jne
pushf
or
les
testl
ret
jno
jns
fwait
mov
std
or
push
add
arpl
inc
and
add
mov
push
mov
add
sbb
inc
jno
pop
lock
mov
dec
cmp
xchg
fs
add
mov
daa
mov
xchg
or
lods
cmpsl
rcl
loopne
or
xor
aaa
and
bound
push
mov
cmp
es
push
les
subb
adc
or
or
inc
pop
or
inc
or
xchg
push
mov
fwait
pop
pop
bound
and
mov
push
mov
cmp
lods
sbb
fcmovu
adc
pop
test
and
call
stos
or
ds
mov
pop
mov
imul
clc
inc
mov
aas
in
jmp
adc
aam
or
mov
subb
inc
mov
xor
rolb
push
pop
test
push
scas
xchg
mov
pushf
adc
add
or
pop
pop
ss
popa
pop
out
xchg
mov
enter
and
or
add
sub
push
sarb
jo
xor
inc
stos
xor
jecxz
and
mov
push
xchg
ds
std
xchg
cli
mov
ljmp
data16
push
adc
ret
dec
xor
xchg
mov
fidivrl
loope
cmp
cmp
scas
cmp
cmp
ss
cmp
cmp
push
or
push
mov
ja
mov
ds
ret
loop
mov
push
scas
mov
mov
aas
jg
xchg
add
addb
ret
mov
out
and
aas
sti
inc
sbb
lret
sbb
mov
xchg
loopne
xor
fiaddl
push
xor
xor
push
outsl
xor
pop
xchg
movsb
add
movsb
jb
xor
and
inc
rorb
adc
or
mov
xor
mov
cmpsb
aaa
lods
pushw
jo
add
sub
xor
cmp
jl
mov
mov
adc
push
cmp
pop
cmp
push
outsb
xchg
pop
test
mov
cmp
sarb
lcall
cmp
mov
int3
sub
mov
pop
imul
ds
push
stos
pop
loope
std
adc
add
or
or
adc
sbb
sub
push
lods
inc
pushf
mov
mov
add
add
xchg
ja
stos
xor
xor
or
out
dec
and
data16
fnsave
add
inc
testb
movsl
xlat
out
ficomps
pop
int3
inc
divb
aaa
adc
xor
xor
push
ss
lods
faddl
je
push
push
mov
jecxz
inc
push
mov
sbb
mov
mov
xor
data16
cmc
jne
cs
adc
daa
sarb
push
cld
loop
cmp
xchg
es
sbb
and
ret
push
inc
push
push
inc
jne
jnp
subl
cmpb
cmp
mov
cmp
popa
mov
sub
test
mov
andl
xorl
pop
sbb
dec
push
inc
push
ret
js
lock
add
enter
sbb
or
sbb
faddl
xchg
loopne
mov
rcl
jecxz
cmpsb
push
xor
xor
mov
lock
sbb
or
push
jl
ss
dec
loop
sbb
loope
xor
sub
push
dec
pop
mov
cmp
sbb
jp
dec
add
call
push
dec
loopne
push
xorb
cmpsb
repz
aas
xor
pop
pop
loop
aas
outsb
xchg
aas
mov
mov
aad
clc
jb
jp
add
out
pusha
add
lahf
dec
les
or
sub
or
test
pop
andb
adc
xor
mov
jnp
xchg
rcl
cmp
movb
loopne
stos
sbb
xchg
xchg
xor
les
add
pop
mov
mov
leave
shrl
loop
out
subb
scas
jb
mov
jle
cli
sub
mov
ss
push
stc
shlb
or
push
adc
stos
xor
mov
dec
adc
xor
je
add
mov
inc
add
dec
repnz
mov
add
push
add
push
xor
scas
push
push
add
sbb
push
add
ret
sub
push
jle
add
mov
push
mov
jp
andb
inc
ljmp
push
cmp
scas
mov
add
mov
hlt
rorl
lret
mov
popf
inc
xchg
push
sub
xor
and
pop
push
xchg
xchg
or
cmp
xor
add
test
test
cmp
inc
mov
push
sahf
arpl
jno
jns
lcall
cmp
mov
enter
inc
xor
roll
mov
lahf
ffreep
xor
inc
sbb
outsl
adc
pop
ret
push
lret
loope
push
jns
jge
xchg
cmp
mov
inc
js
loop
ljmp
stos
mov
addb
lock
pop
push
cmp
sub
jns
aam
hlt
lahf
popf
loop
xchg
loope
push
inc
and
in
sete
mov
adc
adc
xor
pop
lea
mov
mov
out
out
jmp
rdtsc
pop
xor
sub
jg
mov
es
sub
lahf
or
adc
adc
inc
test
xor
pop
add
mov
xchg
lret
sub
out
es
mov
pop
push
mov
sti
out
dec
adc
sub
push
adc
test
mov
adc
adc
aad
aaa
rolb
jmp
mov
xchg
inc
ss
cli
or
clc
ss
sbb
fdivl
popa
aaa
xchg
mov
cmpsb
mov
or
sub
pushl
dec
push
or
or
pop
cmp
movsb
aad
add
lret
adc
mov
stos
test
shlb
xlat
bound
addl
push
adc
inc
mov
cmp
bound
cs
stos
mov
stc
cmp
add
das
adc
and
cmp
cmp
ret
inc
loopne
cmp
xchg
mov
lret
cmp
lcall
stos
cmpsl
rclb
and
cmp
dec
inc
adc
and
test
lock
xchg
iret
dec
push
pop
jp
inc
inc
in
mov
in
data16
stos
andl
push
mov
xchg
xor
xor
xor
xor
cmp
mov
dec
ret
cmp
cmp
imul
adc
push
push
jp
adc
mov
sahf
mov
cmp
cmp
ja
lds
xchg
idiv
xor
cmp
mov
lret
orb
aam
and
push
add
adc
mov
add
or
dec
cmp
add
in
arpl
cmp
sahf
inc
cmp
out
xchg
lcall
cmp
cmp
sub
mov
lret
in
imul
pushl
pop
push
push
adc
cli
xor
pop
ljmp
int3
cmpsb
stc
jp
push
and
inc
push
and
or
mov
mov
inc
pop
ret
out
mov
push
outsb
int3
push
lret
push
cs
mov
mov
sbb
mov
ljmp
xchg
mov
lahf
outsb
xor
jb
xor
mov
xor
xor
pavgw
xor
cld
ljmp
ss
fbstp
icebp
adc
loop
jno
xchg
daa
cmp
loop
cmp
movsl
sbb
cmp
negb
test
sahf
daa
push
fldl
ds
sahf
rorb
test
sarb
adc
add
and
cmpsl
imul
iret
pop
push
push
push
mov
xor
mov
xor
bound
into
je
cli
xor
mov
push
movsb
lcall
scas
cmp
sbb
inc
sarl
push
or
aad
pusha
sahf
mov
pop
scas
sub
inc
add
xor
add
fisubrl
xor
xor
sbb
hlt
loop
gs
jl
xor
xor
ljmp
std
sbb
ss
push
ljmp
mov
inc
dec
adc
arpl
shlb
lea
cmp
cmpsb
out
mov
cmpsl
lock
xor
add
mov
adc
mov
cmp
push
filds
scas
ss
push
add
mov
sbb
sbb
push
jb
dec
xor
xor
mov
pop
xor
add
mov
add
pop
cli
out
testb
sbb
xchg
les
pop
insb
pop
adc
jg
mov
loop
cmp
scas
add
loope
sti
pop
insb
xor
adc
cmp
loopne
roll
inc
es
and
xor
dec
xor
inc
psubusb
adc
add
or
push
sub
icebp
jecxz
mov
ja
mov
xor
icebp
push
adc
jmp
inc
ss
jp
ss
ss
inc
subb
loope
push
out
gs
or
aaa
out
aaa
or
cmp
je
scas
sub
dec
mov
add
mov
lock
sub
jb
xchg
mov
popf
out
adcl
lret
add
xor
lea
xlat
aad
push
ds
leave
cmp
scas
inc
daa
stos
and
push
shll
push
stos
lahf
nop
shl
and
jecxz
cmp
jo
jl
push
mov
in
xor
xchg
test
lcall
rolb
rcrl
scas
cs
jp
mov
ds
lret
mov
jp
add
or
fidivs
mov
sub
outsb
sahf
xor
adc
lahf
pop
fsubrs
jno
xchg
jo
xor
jp
cmp
or
cmp
je
jo
dec
jno
mov
lea
jge
repz
inc
sub
pop
cmpsw
aas
lods
lahf
shll
aas
cmc
aas
std
repz
rol
decl
xor
xor
pop
inc
xor
insb
adc
rolb
mov
call
loop
jo
andb
dec
stos
xchg
cmp
xor
or
sub
js
leave
add
jo
mov
out
outsb
aaa
jle
xor
out
xchg
fwait
aaa
loope
aaa
cmp
pop
mov
cmpl
or
addl
cs
xor
sbb
test
out
dec
push
lahf
ds
movsb
push
inc
outsb
cli
cmp
add
push
mov
pop
addr16
sub
inc
pushw
xor
jb
das
mov
pop
xor
jb
xor
ss
xor
mov
inc
xor
push
adc
mov
mov
hlt
ss
push
pop
pop
inc
subb
push
stos
es
incb
xchg
push
dec
push
fidivl
int3
inc
inc
rol
dec
push
pop
cmp
orb
push
subl
xor
jbe
sbb
pop
adc
cmp
ljmp
cmp
and
inc
ds
mov
insb
push
mov
fsubl
inc
test
adc
arpl
dec
push
lret
fs
add
pop
adc
xor
push
push
mov
bound
push
xchg
pop
stos
mov
pop
mov
mov
xchg
xor
lcall
xor
push
lods
add
and
sub
movsl
inc
mov
aam
inc
aaa
push
xlat
divl
jmp
xor
lea
mov
leave
shr
xor
xchg
push
dec
xchg
hlt
dec
cld
push
add
xchg
mov
jb
ret
out
cmp
sub
pop
xchg
insb
addb
mov
mov
sub
push
loop
cmp
fcomp
inc
jo
je
rclb
popa
push
imul
mov
xlat
jmp
jecxz
add
sbb
and
aas
ss
push
adc
pop
orb
adc
mov
xor
and
dec
clc
xchg
xchg
push
mov
add
rorb
mov
cmp
sub
add
xorb
adc
adc
xor
inc
mov
rolb
fsubrl
jle
xor
aam
out
push
xchg
sbb
into
sub
mov
inc
loop
ds
adc
jl
jo
xor
fimull
loop
inc
sbb
pop
mov
jmp
mov
sub
inc
aaa
dec
into
lds
roll
and
push
aaa
adc
jb
sub
out
fisubrs
inc
push
push
xlat
push
and
push
xchg
rcrb
jne
sbb
test
repnz
das
xchg
js
out
fdivp
sub
mov
insl
mov
xor
subl
bound
cmp
ds
xchg
push
inc
xchg
mov
xchg
inc
pop
scas
xor
repnz
xor
sub
jg
jno
xor
or
xor
pop
dec
les
dec
adc
push
jne
std
adc
aaa
push
aad
cmp
fwait
cmp
js
xchg
push
add
add
push
addr16
xchg
bound
jle
call
xchg
mov
ffree
adc
xor
test
xor
jp
outsb
lret
test
and
mov
fidivrl
fwait
stos
rorb
cmp
cmp
jecxz
je
mov
cmp
sub
fisubs
mov
jecxz
fisubrl
xchg
or
es
add
cmp
negb
aaa
sbb
pusha
scas
ss
aaa
sahf
sarb
inc
adc
adc
jno
push
ret
popa
cmp
cwtl
inc
xchg
and
jecxz
jle
xchg
cs
xchg
mov
int
cmp
cmp
push
add
mov
push
jmp
scas
repz
out
adc
pop
and
jg
push
xchg
xor
sti
sbb
sub
jp
dec
push
sbb
adc
jnp
xor
and
xor
cmp
sub
sbb
sub
clc
mov
lea
inc
xorb
xor
mov
adc
popa
inc
rclb
mov
lods
fimull
xchg
sbb
pop
pop
push
inc
pop
inc
push
popa
mov
aaa
pushf
push
xchg
es
enter
pop
xor
js
nop
xor
stos
xchg
loope
pop
or
cmp
mov
mov
mov
push
aam
sub
sub
xchg
jnp
xor
inc
daa
cmpsb
je
mov
leave
lret
int
adc
dec
cmpsb
jb
cmp
insb
lret
aam
mov
sub
xchg
clc
loop
jle
cmp
jnp
stos
shr
lahf
cmp
aaa
jne
adc
add
adc
inc
push
jl
roll
je
sahf
mov
daa
cmp
mov
push
lea
jmp
cmp
lcall
or
dec
ds
inc
push
xchg
mov
fstpt
fistps
jo
ja
mov
les
xor
lea
aam
push
add
sbb
xor
xor
out
imul
mov
mov
xor
inc
pop
inc
sahf
jns
test
cwtl
mov
movsl
jo
mov
xchg
lock
mov
rolb
subl
les
and
es
xor
ljmp
ds
or
loope
loop
xor
xor
out
dec
pop
add
jbe
jp
pop
loopne
pop
mov
xor
xor
lcall
out
stos
xor
xor
xor
cmpb
mov
push
scas
and
loop
ljmp
data16
testb
or
mov
mov
imul
test
mov
and
imul
test
add
add
sub
dec
das
jb
jne
lea
push
mov
push
or
js
dec
sub
inc
js
add
into
cmc
dec
and
dec
lea
loop
ljmp
inc
cli
roll
mov
ret
dec
inc
and
inc
int
data16
mov
frstor
cmp
lretw
call
loop
dec
dec
sbb
and
stos
add
ljmp
mov
add
cmp
cmp
push
movsb
sbb
and
sub
xor
cmp
ds
inc
mov
movsl
push
push
push
pop
pop
dec
xchg
jp
jp
mov
inc
imul
sub
xchg
or
xchg
into
push
pmulhuw
add
adc
addb
scas
add
dec
sub
or
es
aad
inc
cmp
sub
outsb
aas
jb
xchg
adc
lcall
push
add
nop
xchg
sub
mov
addl
ljmp
cmp
push
mov
andb
adc
rcrl
or
sbb
pop
mov
fdivrs
add
mov
stos
scas
jo
inc
test
push
fnop
pop
test
bound
cs
xor
int
outsb
mov
xor
adc
sbb
ja,pt
fbld
popf
cmp
sub
sbb
inc
stos
jmp
dec
inc
adc
mov
pushf
dec
shlb
bound
pusha
js
je
icebp
jns
inc
xor
test
xor
je
dec
stos
xor
xchg
testb
stos
mov
test
pop
xor
mov
xor
fsubrp
sub
stos
dec
xor
xor
es
and
sub
jne
cli
xor
dec
ss
sub
js
lcall
sahf
sbb
fcoms
pop
pop
ja
rcrb
outsb
ja
stos
sarb
mov
and
adc
cli
xor
fidivs
fwait
dec
fmull
fnstcw
jecxz
loopne
adc
repnz
cmp
adc
mov
add
xor
mov
pop
stc
sub
mov
test
push
sbb
mov
shrb
cmp
xor
mulb
and
jp
or
xor
movsl
shlb
cmp
dec
loope
pop
jmp
cmp
cmp
sub
and
lods
pop
into
mov
or
cs
test
pop
mov
test
dec
bound
mov
push
fistl
add
mov
adc
adc
sub
dec
aas
fmulp
jo
push
xlat
outsb
or
popf
dec
jmp
or
cmpsb
push
xor
test
cmpsb
adc
or
inc
xor
xor
push
fdivr
cmp
xchg
out
pop
ss
inc
pop
aad
pop
data16
add
test
dec
cmp
cmp
inc
sub
cmp
stc
fildl
pop
jns
lods
ds
add
mov
add
rclb
inc
cs
add
mov
or
repz
sbb
les
pop
or
cmp
inc
dec
addr16
mov
mov
xchg
stos
negb
mov
fdivp
decb
xor
add
xor
mov
sarl
rcrb
xor
inc
or
xor
test
cmp
mov
and
mov
sahf
pop
inc
imul
ret
ljmp
dec
cmp
cmp
ss
mov
fisttps
mov
ds
scas
aas
aas
lcall
cmp
add
mov
jo
pop
aam
sbb
xchg
jne
dec
inc
pop
adc
mov
ja
xchg
call
xchg
push
sub
xchg
pop
ljmp
aaa
test
aad
bound
subb
ficompl
push
test
bound
or
rorb
aad
xor
lea
push
sub
dec
fidivl
mov
pop
out
inc
stos
dec
popf
mov
adc
jg
sub
testl
pop
cltd
cmp
rolb
pop
lea
pop
lcall
sub
jo
sarl
mov
or
cmp
push
add
sbb
rolb
ret
mov
push
pop
loopne
incl
adc
xor
xorl
xor
cmp
sarl
loop
cmp
cli
mov
xor
xor
xor
xor
xor
pop
or
dec
jns
sub
outsl
add
pop
jle
sub
cmp
mov
ljmp
add
ret
lret
adc
fistpl
sbb
push
dec
cs
aaa
ja
cwtl
cmpsb
mov
xor
xor
rcll
mov
xchg
push
negb
ds
aaa
push
cmp
and
mov
push
in
xchg
mov
jg
pop
js
adc
lcall
pop
jg
sbb
jb
aaa
pusha
lods
scas
and
and
sahf
sub
mov
ds
ds
aas
cmp
and
xor
dec
fmull
mov
ds
xor
sbb
orb
dec
push
sub
push
cmc
data16
dec
adc
lcall
std
aad
mov
xor
xor
or
test
pop
or
shlb
xor
mov
dec
rcrb
adc
push
add
daa
mov
shrl
cmc
bound
push
cmp
xchg
cmp
movl
pop
subb
or
ret
xchg
inc
push
cmpsl
es
lcall
cmp
jle
loop
and
sbb
add
sub
mov
addb
ret
fsubp
mov
inc
pop
jo
cli
sbb
and
push
sub
dec
mov
adcl
push
fildll
notb
jmp
pop
push
jb
or
loopne
cmp
mov
mov
fdivrs
test
jo
cmp
mov
scas
xchg
or
std
test
sub
das
cmp
ds
or
sub
mov
rclb
pop
dec
add
inc
fs
fidivs
jne
lcall
add
leave
and
fadds
and
jmp
dec
inc
pop
faddl
sub
jl
out
sbb
xchg
lcall
push
fildll
lret
xor
xor
mov
repz
inc
jl
je
shlb
pop
rcl
stos
adc
inc
or
andb
add
stos
cmp
notl
push
sbb
aaa
xlat
loop
pop
push
mov
fisubrl
out
jp
mov
out
xor
jb
fmull
pop
jmp
dec
daa
cmp
pop
add
test
arpl
dec
ja
mov
int
mov
hlt
and
xlat
and
sub
pop
mov
xor
inc
jne
or
adc
jg
cltd
mov
loop
inc
push
jmp
add
mov
pop
sbb
ljmp
sbb
outsl
cli
cwtl
dec
push
test
cli
ficompl
mov
dec
popa
loopne
push
stos
and
cmp
or
ds
in
mov
cmpb
sahf
push
add
add
cs
push
fldl
cmp
sub
andl
adc
or
mov
int3
pop
sbb
add
ja
mov
push
sub
lcall
addb
inc
pop
lahf
and
inc
add
stos
outsb
in
pop
sbb
push
add
sahf
xor
push
inc
cmpsb
cmpsb
rcr
pusha
mov
pop
xor
lock
mov
mov
fcoml
pop
inc
xor
mov
jbe
lcall
sub
xor
jne
dec
sub
daa
or
xchg
int3
ds
sbb
dec
insb
xchg
rorl
jne
ja
adcl
mov
or
jecxz
and
shr
cmpsb
and
rcrb
jb
ret
cmp
mov
out
cmp
inc
mov
mov
cmp
push
cmp
arpl
scas
mov
out
loope
jmp
fsubl
dec
adc
cli
call
add
jp
inc
fstp
fbstp
inc
and
push
push
xchg
arpl
ret
test
pop
ljmp
mov
popf
or
jo
sbb
stos
and
inc
mov
sub
mov
dec
cld
xor
xor
pop
test
jecxz
xor
mov
bound
inc
adc
repz
inc
stos
or
or
das
xor
xor
xor
lea
adc
dec
xor
imul
or
sahf
ret
push
test
push
xor
xor
ss
xor
push
sub
hlt
jbe
aaa
adc
mov
xchg
andnps
fisubs
rcrl
aaa
push
outsb
cmp
cmp
push
popa
ret
pop
cmp
lret
and
push
jp
mov
dec
ds
mov
fcompp
jecxz
or
lret
mov
add
imul
cs
xor
in
xor
jne
mov
push
mov
lcall
jbe
lods
out
fsubrl
xor
cmp
fidivl
sbb
cmp
cld
cmp
and
data16
pop
add
mov
iret
nop
fcompl
xchg
xchg
xchg
xchg
mov
add
lcall
sbb
push
and
or
outsb
push
cmpsl
mov
arpl
imul
mov
lret
test
enter
out
push
jecxz
and
cmp
bound
pop
aaa
mov
dec
cmp
movsb
data16
stos
and
mov
sub
push
adc
mov
jno
mov
ljmp
ret
cmp
push
addl
mov
jb
cs
adc
ds
sarb
clc
scas
sub
or
inc
aas
shrb
inc
push
sti
loop
add
add
xor
test
sub
jb
sub
mov
or
shlb
ljmp
lea
add
adc
out
cmp
cmp
cmpb
cmpsb
push
cmp
jne
test
and
bound
xchg
or
add
lcall
push
push
push
ja,pt
stos
mov
push
dec
inc
aaa
pop
mov
pop
xor
xor
pop
jb
fstl
push
pop
mov
xchg
xor
insb
add
sbbb
stos
mov
into
bound
cmp
jle
add
outsb
xor
adc
cmp
cmp
mov
jg
jb
cmp
cmp
ds
jb,pt
faddl
fmulp
ds
pop
adc
jne
mov
popa
xor
jo
daa
lock
push
in
sar
xor
xor
mov
and
das
aaa
xor
push
add
push
mov
cmp
cmp
mov
push
xchg
sarl
icebp
ds
cmpsl
pop
adc
repnz
push
mov
ror
addb
push
xor
cmp
xchg
xor
xor
xorb
leave
lret
sbb
test
xchg
mov
sub
dec
inc
xor
pop
aaa
addr16
add
xchg
ljmp
jo
push
and
and
cmp
or
shlb
push
dec
xor
ja
push
outsl
and
or
movsl
sbb
out
cmp
pop
adc
adc
stos
and
call
adc
and
insl
xchg
mov
push
in
outsb
std
outsb
sub
test
and
data16
xor
addb
dec
sahf
xchg
test
push
dec
mov
sahf
in
ljmp
or
jno
and
mov
cmp
nop
push
lahf
out
int
jecxz
sub
mov
add
xchg
adc
adc
mov
push
push
rcrb
in
icebp
outsb
rolb
dec
push
daa
dec
pop
xor
call
jle
and
scas
stos
ds
push
and
xchg
mov
inc
xchg
aaa
call
jge
stos
xor
int
xchg
xchg
or
test
dec
outsb
mov
add
les
inc
or
int
stos
and
cmp
sbb
push
nop
test
or
in
cmp
dec
inc
adc
lcall
jge
pop
in
lcall
push
mov
scas
inc
or
xor
inc
pop
jg
and
or
test
aam
mov
loop
xor
pop
aad
and
fldcw
add
add
hlt
pop
push
cmp
cmp
gs
cmpsb
adc
and
ficoms
sbb
ja
cli
fnsave
test
sub
add
push
xlat
mov
jns
add
xor
add
jp
cmpsb
push
pop
mov
dec
sahf
mov
out
je
xchg
and
pop
rorb
test
ret
aaa
int3
xor
jae
or
xchg
xchg
mov
mov
lcall
or
cs
bound
subb
xchg
data16
dec
icebp
and
int3
repnz
pop
push
and
or
rolb
jp
mov
mov
lret
test
cmp
mov
bound
pop
xchg
sub
inc
inc
test
je
test
sbb
jb
cmp
sbb
push
jecxz
inc
mov
and
push
mov
dec
cmp
aad
mov
pop
sbb
jno
push
fs
jle
inc
inc
adcl
adc
stos
int3
xor
pop
xlat
inc
andb
addb
test
xlat
inc
aaa
pop
sub
clc
push
xor
sub
sub
jo
or
adc
stos
sbb
add
es
cmp
add
add
or
jmp
and
add
add
mov
jmp
sbb
sub
push
jae
dec
aaa
mov
dec
sub
inc
or
and
xchg
aaa
and
and
inc
xchg
mov
cmp
inc
inc
xlat
push
adc
ret
inc
fildl
or
push
pop
dec
jns
push
in
pop
lcall
pop
xlat
jns
or
jbe
lret
mov
sub
xlat
jmp
xchg
push
push
stos
aam
cmp
fildl
mov
sub
inc
xor
gs
repz
sbb
popa
clc
pushl
addb
in
push
fwait
mov
add
xchg
fildl
movsl
sub
xchg
in
jno
fisttpll
leave
incl
jmp
fcomip
popf
jae
pop
dec
xchg
popf
cmp
jne
out
mov
mov
mov
jno
or
xorb
or
jp
mov
sub
push
mov
cmc
dec
decl
loop
and
jns
mov
sbb
pusha
in
jge
sub
faddp
pop
repnz
pop
ud0
push
jmp
pop
xchg
dec
js
inc
push
mov
inc
int3
jp
arpl
mov
dec
xor
shr
mov
lcall
aaa
add
inc
int3
sbb
mov
jp
addr16
xchg
mov
ljmp
rcrl
sarb
ret
mov
les
lods
lcall
or
sub
lret
cli
jl
mov
xchg
gs
std
iret
mov
lahf
arpl
inc
ja
pop
jb
or
jecxz
scas
gs
sbb
push
inc
mov
lcall
dec
jmp
clc
add
cmp
mov
mov
std
add
call
sbb
adc
mov
aas
pop
pop
vshufps
lcall
inc
or
jnp
aas
lahf
lods
div
js
in
mov
adc
xchg
inc
add
orb
or
dec
inc
imul
mov
insl
popa
fcmovb
mov
das
mov
cmp
idiv
test
test
xchg
adc
aam
mov
movsb
jl
jg
ja
movsl
jns
and
xlat
adc
adc
mov
push
icebp
pusha
adc
adc
in
and
test
scas
ljmp
push
pop
hlt
ja
fsts
in
sarb
sbb
in
sti
sbb
push
test
scas
test
rorl
mov
popf
loopne
out
cmpsl
cmc
ljmp
sar
mov
out
mov
lahf
push
pop
cmpps
sub
mov
out
imul
out
clc
sbb
mov
sbb
cli
ja
sub
dec
call
ja
call
jl
fsubs
mov
insl
mov
xor
and
fdivr
decl
mov
inc
lock
cmp
cmp
inc
cmpsb
in
xchg
mov
lods
movsl
mov
mov
sahf
dec
icebp
push
test
xchg
sbb
pusha
push
jp
sar
popf
mov
inc
imul
mov
pop
arpl
mov
fdivl
sub
inc
xor
mov
pushl
cmp
jne
xor
gs
ret
ljmp
aas
inc
jmp
aaa
xor
mov
add
mov
add
test
inc
or
sbb
jo
or
mov
xor
dec
jo
xor
xchg
lock
push
rcrb
inc
or
and
bound
jg
dec
mov
in
test
imul
xchg
push
and
fmuls
scas
push
les
test
sub
xorb
fmuls
mov
inc
idiv
jmp
add
cli
shl
fsub
mov
pop
dec
lds
xchg
shll
test
lcall
mov
and
adc
js
dec
and
xor
dec
repnz
aad
or
ds
inc
pop
sbb
sarl
xor
cs
and
mov
dec
int
sub
cmp
dec
mov
mov
mov
mov
xchg
inc
or
sbb
dec
pop
imul
and
shlb
add
popa
push
and
mov
jecxz
lods
xlat
xchg
or
mov
lcall
mov
and
mov
jmp
sub
jmp
adc
push
mov
pusha
and
pop
scas
cmc
sub
cs
xor
mov
call
arpl
sbb
mov
aaa
sahf
and
mov
ljmp
xchg
xchg
xor
xchg
adc
shlb
xor
sub
xchg
xchg
insl
les
pop
vpcomub
aam
imul
mov
inc
ret
sub
jg
pop
mov
lods
fldcw
dec
iret
mov
cmp
mov
roll
cwtl
icebp
cltd
mov
test
outsb
mov
xchg
call
inc
xchg
call
mov
jle
dec
dec
adc
stos
cmp
pop
pop
sub
mov
loope
outsl
fildl
jg
push
mov
incl
scas
lock
out
les
dec
inc
push
mov
sbb
inc
lods
jmp
cs
ljmp
inc
mov
fdivr
mov
cmpsb
or
arpl
leave
mov
popa
int3
fsubl
push
add
bound
xchg
mov
sbb
sub
ss
push
cs
inc
shrb
xchg
xor
dec
and
mov
call
leave
jge
das
dec
sub
pop
sub
rcll
arpl
inc
out
call
mov
xchg
mov
std
inc
and
and
mov
mov
mov
push
insb
and
sbb
in
imul
stc
test
pop
dec
ljmp
popa
xor
rcr
aaa
incl
roll
jbe
out
push
icebp
push
sub
mov
xor
fs
cmp
incl
pop
inc
xor
std
insb
xor
adc
outsb
rclb
lods
nop
xor
xchg
loope
lcall
xor
mov
rorb
push
test
xor
dec
or
aas
xor
jg
enter
ljmp
mov
mov
sub
bound
stos
pop
mov
push
icebp
lcall
cmp
push
jb
push
pop
aas
fucomi
in
jle
fidivl
push
outsl
lcall
out
lea
sbb
mov
in
fcmovnbe
mov
jne
rcl
cmp
ficoml
mov
in
jmp
aam
jno
mov
insl
cwtl
and
inc
lods
fstps
inc
sub
fistps
lcall
cld
jae
push
mov
test
add
test
add
cmp
pop
sbb
je
jmp
mov
jbe
jne
dec
mov
aam
cmpsl
jne
andb
mov
fisttpll
call
mov
pusha
les
daa
adc
pop
std
decl
clc
or
addr16
sbb
subb
sar
lcall
jecxz
imul
add
or
sar
inc
dec
fmul
or
sub
mov
dec
int
outsl
fldl
loop
lods
xchg
inc
xchg
fwait
outsb
les
cmpl
cmp
mov
sarb
not
outsl
sub
std
mov
or
enter
or
jmp
nop
jp
sti
loope
fmull
cmp
jmp
jmp
scas
mov
mov
jno
cmp
cld
xchg
adc
jecxz
push
ds
jmp
cld
popa
mov
jge
mov
push
adc
adc
mov
add
xchg
bound
jmp
cli
jg
data16
bound
xor
inc
les
adc
call
js
add
xchg
mov
pop
in
pop
add
fbld
or
jbe
push
jl
hlt
data16
pop
fisttpll
sahf
push
push
or
add
lcall
dec
xchg
lods
xor
mov
fcoml
jecxz
das
icebp
jnp
jae
cmp
clc
ja
mov
mov
cltd
ret
sbb
jno
cmc
lcall
pusha
call
icebp
jmp
sub
push
je
addb
cs
sub
incl
cmpsl
iretw
sbb
pop
popf
scas
pop
js
adc
cmp
push
cmpsl
lcall
add
add
popa
daa
repnz
lds
fstps
cli
shl
into
jg
and
sarb
lcall
addl
and
imul
fbstp
out
jmp
mov
cwtl
jno
jns
imul
fldt
sub
mov
lcall
mov
mov
xor
insb
and
mov
lcall
enter
icebp
push
cmpsb
mov
mov
mov
fcoml
sbb
cmp
loope
neg
or
lcall
popa
outsl
nop
mov
mov
mov
mov
mov
adc
lcall
cmpl
add
mov
sahf
dec
sarb
add
iret
ljmp
pop
fsubl
lret
pushf
out
xor
mov
jbe
mov
in
adc
cli
incl
cmp
call
call
out
pop
mov
pop
divl
ljmp
sti
mov
cmpsb
pop
lret
cld
cwtl
cld
inc
mov
xchg
jl
ret
cmc
mov
andb
xor
jmp
sti
movsb
mov
inc
jl
xchg
push
push
mov
out
imul
jmp
push
iret
fs
pop
cmp
insl
sti
int
pop
push
in
xor
xor
xchg
mov
fisubs
pushl
insb
in
idivb
dec
dec
out
push
mov
lret
lret
in
sbb
imul
push
mov
xor
mov
sti
mov
jae
ds
iret
mov
sub
lcall
sahf
pop
pop
fwait
js
cli
cmc
repz
divb
testl
loopne
das
bound
in
test
mov
scas
je
test
into
or
pop
cld
es
bound
and
stc
cs
jae
jns
add
sbb
or
jecxz
sbb
xchg
mov
ss
sti
adc
decl
sub
enter
in
mov
imul
data16
in
cmpb
imul
jmp
mov
cmp
jbe
ss
ss
jae
iret
sub
dec
xchg
mov
ljmp
fldenv
iret
push
out
fs
js
dec
jns
lods
adc
gs
mov
scas
mov
scas
pop
in
or
jl
lods
jnp
mov
pop
lcall
cli
jg
mov
fdivs
fists
inc
sbb
jmp
or
repnz
sbb
pushf
lods
xchg
inc
jle
push
cmp
ds
pop
fwait
jp
pop
mov
xor
xchg
cmp
test
sarb
cmpsb
sub
insb
outsb
lret
xchg
cli
lcall
out
xor
mov
pop
mov
out
into
jl
dec
cmp
loopne
test
push
push
popa
lret
int3
repz
xor
sub
xchg
sahf
in
inc
clc
and
in
int
jmp
cli
mov
adc
filds
sti
inc
xchg
out
cmp
stos
lcall
ja
loope
cmpb
ficoms
fsubrs
or
ss
pushl
sbb
lds
pop
in
cmpsl
cmp
inc
pop
add
daa
pop
adc
adc
std
ljmp
imul
sahf
out
iret
imul
inc
fistps
add
call
push
xlat
lea
xlat
fbstp
insl
imul
addr16
lods
aad
call
pop
movsl
fnstsw
pcmpeqb
mov
daa
push
or
push
jle
inc
jno
mov
dec
add
push
mov
stos
lret
stos
sbb
mov
and
lcall
ss
cmp
pop
and
fistl
lret
aad
gs
imulb
incl
pop
sub
jmp
movsb
std
ljmp
sub
push
pop
lcall
hlt
icebp
fisttpl
sbb
je
dec
pop
ljmp
pop
dec
fnstsw
jmp
jmp
pop
mov
jne
cltd
out
lahf
out
xchg
movsl
push
mov
sahf
and
mov
fcmove
repz
ret
cld
inc
mov
jmp
cmp
mov
cmpsl
ljmp
add
jmp
cmp
addr16
es
fs
sahf
or
cli
sub
fisubrl
out
call
in
push
jb
iret
pop
mov
cs
fs
incl
shl
pop
cmp
and
stc
add
xlat
scas
sub
mov
stos
or
xor
push
xchg
out
incl
pop
int
insl
scas
icebp
bound
pop
daa
pop
jmp
sarb
stos
testl
cmp
jg
xor
pop
call
pop
push
arpl
popa
scas
mov
test
mov
jge
cmc
sub
jmp
jnp
out
jecxz,pt
jo
out
aam
jns
pop
aaa
scas
jl
jle
mov
dec
pop
repz
popf
mov
lret
ds
jb
dec
ja
push
dec
aaa
stos
push
js
pushf
mov
sti
call
mov
movsb
dec
push
jge
ja
sub
jnp
popf
test
jg
push
cmc
neg
popf
in
lock
mov
gs
shlb
dec
lahf
ljmp
dec
dec
lods
out
fimuls
out
ja
xchg
call
lret
lret
lret
inc
xchg
cmpsl
sbb
cmp
incl
fidivrs
cmp
fldcw
ret
pop
mov
shlb
out
sub
into
xor
mov
fs
decl
in
xlat
les
jbe
adc
iret
pop
pop
mov
mov
cwtl
mov
mov
icebp
ljmp
ret
jae
cmc
divl
hlt
cli
ja
push
cmpb
scas
fistpll
cmp
and
lret
cmp
in
mov
ljmp
adc
ret
out
je
cmp
inc
cwtl
scas
or
mov
mov
inc
jp
sbb
fnsave
inc
fists
fs
ja
cmp
das
xlat
adc
adc
push
decl
pop
scas
scas
jmp
scas
sarl
loop
cmp
xchg
out
repnz
cmp
lock
ds
dec
mov
mov
dec
daa
push
push
roll
outsl
mov
cld
stos
inc
mov
imul
dec
push
pop
popf
out
aad
lods
push
shrl
push
roll
fs
fiaddl
lret
jge
cmp
or
lock
mov
lret
inc
or
pop
fwait
call
xor
test
pushl
cld
xchg
ds
dec
or
inc
inc
jnp
add
andl
push
daa
lahf
xchg
sbb
mov
movsb
les
pop
pop
les
out
dec
jb
stos
mov
std
gs
shll
stos
jmp
popf
scas
inc
negb
outsl
fs
mov
add
inc
xor
ja
add
mov
leave
clc
dec
sub
mov
lods
adc
mov
jmp
ljmp
xchg
pop
sub
mov
sbb
or
jg
incl
out
popa
xchg
jnp
icebp
std
adc
mov
movsl
je
dec
xor
dec
addr16
call
imulb
jnp
test
insl
int3
std
testb
sbb
jmp
pop
out
out
xor
popa
mov
repz
in
and
int
and
bound
push
call
inc
imul
jns
xor
push
and
lods
popa
mov
loope
mov
mov
in
popf
jnp
ja
pop
gs
jns
push
gs
icebp
ja
add
mov
addr16
pop
scas
cwtl
xlat
xchg
jo
adc
pop
hlt
pushl
dec
sarb
call
push
std
stc
jecxz
loop
xchg
mov
fistps
push
cs
incl
mov
fists
ret
vphaddbd
in
pushf
xlat
sysret
xor
outsl
cli
ljmp
clc
in
cmpb
xchg
mov
jecxz
bound
je
out
xchg
push
inc
mov
cmp
push
jge
cmp
fsub
aam
dec
aas
jmp
dec
sarb
lods
mov
mov
pop
bound
int3
fidivrl
mov
aaa
dec
push
and
xchg
fcomp
lret
cmp
adc
mov
test
sub
cmp
add
xchg
mov
imul
xchg
mov
ljmp
sbb
adc
xor
push
adc
dec
movsb
int3
repnz
negl
dec
adc
jg
lahf
jecxz
push
clc
push
scas
into
mov
cmp
pop
sub
andb
out
mov
adc
pop
stc
xchg
test
loope
cmp
jae
push
loopne,pt
jg
fidivl
test
jae
adc
push
push
inc
mov
jne
pushl
aam
daa
nop
cld
mov
cli
sbb
mov
aad
xchg
push
cmp
or
jge
in
push
cli
cmp
mov
jae
cmpsl
mov
push
inc
push
sub
lret
popf
scas
pop
add
jmp
repz
ret
xor
popl
loopne
sub
push
call
mov
incl
cmp
sbb
mov
scas
dec
fs
sbb
pushl
jns
notb
inc
push
xchg
loopne
jge
ret
jmp
dec
std
sbb
inc
out
ljmp
and
xchg
jle
jne
dec
jp
xor
sub
jne
jge
dec
dec
cmp
shll
jl
mov
cmp
jmp
mov
inc
mov
repnz
cmpsl
jmp
fwait
out
inc
jg
std
movsb
cmp
mov
mov
jg
decl
sarb
sbb
das
cs
pop
xor
cmp
loope
lds
decl
ss
bound
and
and
or
add
mov
pushf
lods
mov
pushl
jae
test
add
mov
pop
int
sub
mulb
or
pop
scas
xchg
xor
dec
rclb
mov
repz
xchg
dec
iret
in
fistps
push
sub
mov
stc
mov
jp
mov
xor
cmp
popf
fwait
adc
jg
stos
jg
xor
insl
xchg
lds
test
or
push
or
mov
lahf
sub
inc
clc
out
mov
ljmp
jl
mov
movsl
bound
aas
push
incl
lahf
lods
push
mov
cmp
ret
pop
cmp
pop
pushl
jno
xchg
fcomi
out
add
ret
mov
sub
in
add
in
inc
mov
cmp
jnp
and
lock
fwait
imul
sub
pop
mov
incl
fadd
sub
jmp
cltd
jns
mov
jg
inc
and
imul
popf
dec
xchg
or
pushl
jl
pop
iret
out
lock
push
mov
cltd
ds
jae
ljmp
mov
imul
mov
cltd
decb
sbb
xchg
daa
push
loop
lcall
pop
scas
xor
and
xor
aas
cmp
ret
mov
pop
pop
cmpb
aaa
or
sub
jle
push
int
cmp
out
shlb
in
cltd
jl
pop
gs
mov
jns
cltd
sub
pop
mov
jg
fnstenv
incl
or
iret
xchg
cld
mov
incl
sbb
or
lods
mov
push
push
or
pop
adc
jne
decl
orb
cwtl
outsl
jo
lds
and
clc
ljmp
mov
dec
int3
aam
push
sbb
push
mov
jp
sbb
fadd
add
sbb
decl
mov
adc
fcomps
es
enter
daa
call
cmpsb
popf
mov
imul
and
mov
jnp
lcallw
cmc
sub
out
cli
jmp
std
cld
sahf
addr16
mov
push
rcr
int3
daa
std
in
fnstsw
das
sar
xor
mov
cli
aam
fdivl
mov
sbb
ljmp
sbb
mov
testl
adc
jns
clc
call
fdivrs
jg
jp
push
push
xor
in
cmp
mov
jge
pop
cmc
cmp
clc
push
ret
mulb
mov
mov
fsubs
outsb
jae
stos
sbb
out
pop
jle
aaa
out
pop
jno
jns
decl
stos
inc
or
jg
dec
aad
or
lock
outsb
sbb
das
push
lds
sub
movsb
sti
outsb
lcall
mov
out
cmpsb
inc
fstpt
cmpsl
xchg
and
inc
lahf
lcall
lcall
idivl
xlat
pop
mov
and
out
cld
dec
pop
xchg
stos
mov
jmp
movsl
mov
bound
popa
adc
inc
adc
popa
or
lret
sub
cvttps2pi
das
lods
mov
pop
push
inc
adc
push
mov
dec
fadds
popa
push
das
hlt
ret
sub
mov
push
sbb
out
ror
cld
clc
imul
fisttps
mov
jle
xor
push
mov
pop
cmc
and
fstpt
inc
sub
ret
cmp
lcall
arpl
mov
gs
fildll
jns
fcomip
jmp
mov
cmp
jnp
sarb
movsl
pop
int
cmp
adc
int
jl
ljmp
push
int
jb
addb
outsb
call
sbb
sub
lock
adc
fmuls
popa
mov
mov
clc
arpl
jae
xchg
sbb
or
lcall
addr16
scas
lea
xor
jb
inc
pop
aaa
inc
in
jl
push
adc
push
jae
stc
stc
fsubp
push
cmp
lds
jge
aam
push
cli
push
ljmp
push
pop
push
in
test
sahf
ljmp
inc
cmp
jmp
xchg
pop
ret
lcall
in
popa
xchg
aas
pop
scas
bound
cwtl
sub
and
inc
xor
xchg
xor
movsl
fisubrl
mov
jne
cmp
inc
pop
jle
push
lds
mov
jne
in
add
sub
ljmp
clc
aas
xor
shl
mov
jmp
imul
add
mov
call
inc
pop
dec
fwait
jecxz
cmp
sub
loop
xchg
pushl
out
sub
inc
or
cli
xor
ja
in
out
pop
cmp
in
inc
mov
cmp
cmp
dec
push
xchg
push
jb
xchg
push
inc
jae
and
call
sub
fcomip
xchg
add
adc
aam
push
pop
jmp
pop
adc
pushl
imul
mov
call
add
dec
test
jg
sti
dec
mov
rcrb
jle
push
out
cmp
mov
psubsb
xchg
lcall
in
cli
xor
jl
sti
ret
test
sbb
ret
xor
daa
insl
std
jmp
cmp
popa
mov
outsb
lcall
mov
mov
enter
addr16
nop
loop
mov
jmp
testb
stos
inc
sbb
pop
lahf
scas
push
xor
pop
push
mov
sub
pushf
test
sub
repnz
xor
incl
ja
mov
xchg
sbb
daa
pushf
adc
into
xor
push
mov
daa
xchg
adc
pop
notb
addr16
lret
cld
jg
pusha
rcrl
test
lods
aad
jne
cmpsb
jns
fbstp
cmp
imul
pushl
repz
imul
sub
mov
push
ficoml
hlt
call
mov
add
loopne
xor
mov
mov
inc
adc
adcb
call
stc
pushf
cmp
push
jle
sbb
jecxz
andnps
call
cmp
bound
push
push
inc
mov
push
jbe
adc
jmp
loope
mov
cmp
xor
adcl
cmp
inc
pop
or
mov
cld
sub
mov
rcrl
jbe
jb
sub
out
in
pop
pop
jo
sar
call
mov
negb
imul
ret
test
mov
sbb
pusha
or
lcall
xchg
push
sbb
mov
mov
add
lods
mov
scas
cli
mov
pop
imul
mov
ss
dec
lret
out
add
cmp
inc
aam
cmp
test
pushf
xor
push
jmp
fsts
inc
movsl
int
xor
push
ja
pop
inc
cmp
dec
fsts
adc
inc
push
xor
int3
sahf
push
negb
jns
test
test
sub
pop
xor
gs
cmp
push
mov
inc
or
dec
mov
cmp
out
add
inc
das
add
jmp
xor
inc
aas
inc
pop
mov
and
mov
jl
mov
adc
jp
sbb
mov
jae
push
and
ljmp
ljmp
inc
push
addr16
sbb
lods
ret
movsl
mov
decl
push
out
xchg
jb
jb
mov
jne
pop
inc
push
xlat
cli
sahf
decl
cmc
push
cltd
icebp
fwait
gs
mov
lods
sarl
jbe
xor
jg
call
js
sti
mov
in
xorl
cmpb
add
mov
pop
mov
sar
pushl
popf
cld
pop
and
xchg
shlb
ss
dec
xlat
xchg
inc
push
test
out
ljmp
push
sub
gs
mov
pop
mov
mov
int
jbe
mov
ret
incl
jge
pop
sbb
mov
jl
push
ds
inc
sbb
xchg
pushf
leave
jae
mov
insl
push
lahf
lret
mov
pop
mov
hlt
nop
int
jp
daa
les
mov
scas
daa
ljmp
jl
and
rcl
sti
mov
ds
jl
frstpm(287
push
xchg
xchg
inc
aaa
xor
jg
mov
lret
cs
test
xchg
mov
xchg
mov
push
fcmovnbe
pop
mov
cmpsl
inc
jb
push
rcl
ljmp
inc
pop
es
insl
shr
jmp
std
movsl
push
ja
paddsw
pop
mov
sbb
ljmp
jb
clc
sarb
mov
aaa
mov
xor
pop
sbb
ljmp
cmp
std
jns
mov
jg
cli
repz
sbb
cmpsl
ljmp
nop
jb
sbb
aam
xchg
xchg
aam
addr16
cmp
pushf
sti
jecxz
xchg
repz
cli
shll
dec
cmp
push
arpl
aad
std
outsl
add
pushf
dec
popf
push
pop
fmul
or
xchg
cmp
pop
xor
call
inc
push
pop
je
add
leave
inc
and
lods
pop
sti
lock
or
ss
cwtl
sub
mov
jge
sbb
std
sti
adc
movd
insl
jle
sti
iretw
fstpl
fcomps
imul
cmpsb
xchg
ljmp
fnstsw
in
cmpsl
insb
lea
loop
pushl
insb
dec
insl
dec
lods
sub
fcomps
sub
jl
ret
std
sub
cmp
cmp
or
std
popa
fcmovnb
mov
fnsave
repnz
xchg
pop
adc
test
movsl
clc
mov
idivb
decl
adc
aad
xchg
les
clc
subl
xor
imul
sub
faddl
out
push
xchg
push
out
sarl
inc
aaa
push
std
data16
fadds
fisubl
jmp
sbb
inc
dec
in
stos
stc
lods
sub
pop
cmp
inc
int3
xor
dec
lcall
ja
enter
xor
repz
adc
cli
jmp
cmp
icebp
ljmp
jbe
pop
adc
enter
lahf
cmc
lcall
cld
fidivrs
scas
or
adc
dec
fcomi
loope
dec
mov
sti
cmp
call
arpl
pop
mov
roll
pop
jecxz
push
cmpsl
mov
mov
lcall
in
arpl
mov
pop
outsl
sbb
hlt
mov
sti
add
pop
mov
outsl
dec
paddd
ja
int
call
mov
jmp
pusha
mov
xchg
pop
into
inc
roll
stos
mov
fcmovne
js
jae
fmuls
pop
imul
pop
out
mov
add
mov
add
test
xor
insl
mov
ja
jns
jmp
lcall
add
add
scas
pop
int3
mov
jp
pop
ret
inc
xorl
outsl
rcrb
xchg
aad
pop
sbb
lret
lcall
add
lcall
inc
mov
sub
and
push
sbb
mov
aad
cmpb
jl
xchg
ja
pop
icebp
sbb
jle
push
or
cmpsl
sbb
popa
fldl
in
sub
inc
adc
enter
enter
sar
pushl
lods
fidivrl
out
push
jge
test
sub
pop
int3
loope
jg
lcall
repz
mov
leave
jnp
xchg
cmp
in
jg
mov
pop
mov
enter
repnz
rcll
iret
xchg
cmp
and
xor
dec
jmp
mov
int3
test
or
mov
xlat
mov
mov
insl
mov
mov
push
pop
aam
ficoml
fmulp
in
pop
inc
fstps
call
std
sub
ss
hlt
test
ja
jg
daa
sub
fdivr
jmp
in
in
adc
rcrb
push
pop
cwtl
mov
ja
jle
mov
out
jb
decl
decl
sbb
fdivrp
movsb
dec
cli
mov
lcall
bound
inc
in
mov
mov
mov
sub
ja
ljmp
mov
or
jecxz
std
imul
decl
fwait
in
mov
lods
sarl
or
movb
or
fs
popa
packsswb
push
xor
cmp
pushl
or
cmpsb
fdivrl
mov
fdivl
mov
int3
pop
aas
ljmp
cmp
ljmp
into
dec
sbb
pop
and
sbb
cmp
incl
fdivrl
adc
adc
lcall
lcall
add
or
fnstcw
mov
or
and
nop
add
or
ljmp
decb
sub
pop
jb
aaa
or
inc
movsb
inc
loope
rclb
fwait
outsb
push
cmp
push
rcr
mov
sub
lahf
insl
insl
sbb
leave
xchg
inc
inc
inc
lcall
dec
pusha
gs
addr16
insb
adc
std
jl
jle
int3
int3
jns
cltd
xor
repz
ljmp
fsubl
imul
push
scas
pop
arpl
loope
clc
inc
insb
dec
fimuls
cld
ljmp
repz
jnp
mov
push
mov
push
lods
pop
jmp
movsb
sbb
arpl
decl
jmp
clc
and
mov
ljmp
ret
lret
lods
fldt
jmp
push
xchg
cmp
addr16
pop
mov
shll
into
cmpsl
cmp
pop
pop
movsb
scas
jg
int
out
ja
sub
loope
xor
cmpsb
out
fcomip
pop
xchg
jb
or
into
movsl
mov
push
loop
jmp
iret
mov
aad
mov
sub
mov
cmpsl
sbb
xchg
aas
ss
xchg
push
mov
fcomip
push
mov
in
pop
sub
das
pusha
inc
sahf
int3
insl
add
dec
movsl
xor
xchg
decl
xchg
adc
pop
sbb
sbb
add
test
aas
jae
out
mov
and
es
cmpsl
lock
xchg
add
paddw
pop
cmpsl
cmp
mov
fsubrl
mov
jnp
cmp
jle
xor
inc
fs
mov
clc
inc
mov
mov
cmp
jno
les
int
ljmp
xchg
les
mov
dec
loop
or
mov
lcall
pop
xchg
mov
lahf
les
adc
jmp
scas
xchg
push
mov
out
xchg
pop
and
addr16
push
pop
and
push
mov
call
stc
sbb
addr16
insb
ds
xor
cmp
std
lcall
pushf
enter
pushf
lds
fwait
das
xchg
call
mov
adc
dec
incl
mov
lea
inc
frstor
out
aam
pushf
pop
xchg
imul
sbb
loopne
adc
mov
imul
jmp
mov
sub
int3
jnp
lds
out
aam
lcall
mov
filds
divb
adc
lea
or
inc
lret
push
xor
popf
cltd
sarb
ljmp
imul
adc
ret
pusha
roll
dec
sub
push
mov
and
xchg
dec
inc
outsb
insl
cmp
sub
mov
enter
mov
pop
sub
mov
repz
nop
xor
mov
xchg
inc
call
in
inc
xchg
out
or
pop
or
adcb
push
orl
iret
leave
fcmovu
decl
lock
jmp
mov
lods
xor
pop
fidivl
ret
ljmp
gs
insb
sbb
data16
pcmpgtb
jl
nop
push
cli
cmp
add
clc
mov
pop
cltd
fisttpll
jle
mov
add
lods
add
jne
pop
pushf
lret
insl
sbbl
decl
call
arpl
pop
xlat
mov
push
dec
cmp
adc
jne
pop
xchg
ljmp
jnp
inc
mov
ss
xor
inc
pop
gs
xor
jg
pop
mov
lcall
les
xlat
lahf
inc
cmp
aad
sbb
sub
arpl
lock
xchg
pushl
pushf
lods
push
add
ret
fldcw
ficoms
mov
dec
in
pushl
bound
fisubs
mov
scas
sbb
sti
pushf
fldt
push
adc
decl
dec
cmp
jno
imull
into
add
imul
add
push
or
jns
leave
lcall
movsl
cmp
adc
mov
incl
or
pop
popa
xor
jecxz
arpl
mov
pop
inc
push
cli
mov
sbb
idiv
pop
push
ljmp
clc
mov
push
adc
cli
jbe
cmp
dec
inc
enter
loope
xchg
pushl
mov
cmp
in
mov
dec
sbb
pop
fsts
jno
jge
shll
stos
out
dec
pop
ficompl
cld
fcmovb
in
xchg
push
fcomps
cltd
lea
pop
scas
mov
subl
shll
pop
fstpt
sbb
shll
popa
adc
movsl
push
iret
out
lods
mov
cmp
fildll
sbb
pushf
mov
mov
or
cmpsb
pop
and
dec
testb
movsl
fwait
mov
sub
mov
pop
addl
lock
ljmp
pop
rolb
sbb
pusha
mov
aas
sarl
out
and
out
add
lahf
lcall
jns
dec
dec
jae
insb
fistpll
push
adc
sbb
push
jg
and
cmc
mov
xor
repnz
popf
jae
push
mov
outsl
or
ss
mov
dec
out
mov
push
mov
subb
das
sbb
dec
lcall
mov
ficomps
sbb
dec
push
arpl
fisubrs
je
loop
mov
mov
fnstenv
mov
dec
jl
pop
xchg
lcall
pop
sub
ja
jmp
lret
fs
rcrl
cmpsb
mov
lcall
push
and
cmp
push
pop
mov
decl
dec
jmp
jmp
out
push
push
cmp
ljmp
das
inc
sub
aas
lds
int
add
push
dec
inc
mov
xlat
push
mov
pushf
movsb
adc
pushl
rolb
cmpl
inc
fisttpl
cmp
adcb
popf
fdivl
mov
ljmp
decl
mov
mov
movsl
ljmp
fs
xlat
inc
xor
ljmp
push
xorl
arpl
ffree
mov
adc
sub
rorb
adc
inc
fwait
lret
lret
adc
sub
icebp
gs
repz
es
push
xchg
jns
inc
sbb
sub
sub
sbb
sbb
call
cmc
mov
fs
lods
inc
fwait
std
mov
out
dec
xor
negl
sub
decl
inc
dec
xor
xchg
cs
push
cmpsb
and
fbld
outsl
and
or
out
xchg
dec
js
in
dec
jne
repnz
fsub
test
adcb
hlt
sub
jg
arpl
dec
or
clc
les
fstl
xchg
popf
fnstenv
nopl
lods
dec
mov
jmp
sarb
mov
fiaddl
test
mov
pusha
lds
popa
jp
cmp
sbb
scas
fsts
lods
fnstcw
push
cmp
pop
mov
mov
and
incl
push
jbe
mov
ds
xchg
lahf
pop
std
jnp
jnp
sub
push
and
ja
sar
lcall
lds
fldenv
inc
shrl
inc
fsubs
stos
sbbl
xlat
decl
fiaddl
sbb
xchg
push
sub
lret
or
sbb
xchg
pop
nop
push
pushl
cld
fwait
insb
negb
fsubr
mov
loope
rorl
push
and
pop
pop
std
push
xchg
sub
ljmp
or
and
xor
jecxz
ljmp
stos
fistl
xor
stos
mov
cli
pop
les
mov
jg
mov
push
dec
inc
loope
popa
push
or
cmp
lods
or
pop
sub
xchg
pop
hlt
stos
dec
dec
dec
inc
or
ljmp
cli
idivb
sbb
inc
nop
in
dec
sbb
add
adc
ret
lret
gs
dec
and
clc
lcall
ss
leave
mov
mov
jbe
les
fistpll
add
ljmp
pop
test
pop
jmp
dec
xchg
lods
popf
ss
jmp
sbb
xchg
loopne
xchg
addr16
dec
xlat
pop
jae
cmc
mov
xchg
loop
and
scas
sub
stos
pushl
mov
inc
ss
jb
mov
mov
mov
jno
fists
jge
dec
sti
inc
int3
outsb
xor
notb
mov
jg
push
insb
mov
pop
std
mov
out
sub
addr16
movb
loop
adc
fisttps
adc
add
lods
ret
xchg
xor
adc
mov
gs
pop
mov
or
xchg
lahf
push
push
pop
ret
mov
mov
call
je
js
xchg
in
mov
popa
cli
mov
insb
inc
sbb
ljmp
sbb
rcll
int3
fcoms
or
sbb
xchg
fcoml
lcall
mov
and
push
mov
fisttpl
std
push
sub
mov
adc
cmp
pop
mov
shlb
xorb
xchg
mov
data16
cs
decl
pop
cmc
aam
and
clc
dec
or
fmuls
push
mov
push
fildl
incl
insb
pushf
jns
ret
clc
mov
push
roll
sbb
inc
inc
xor
mov
mov
std
decl
push
nop
and
pusha
rcll
cwtl
adc
arpl
jmp
cmp
lea
xchg
pop
mov
cltd
pop
xchg
mov
fadds
mov
cmpsl
testl
cmpl
ljmp
imul
mov
jae
cld
lahf
pop
stos
call
cld
ds
dec
test
jnp
mov
les
sbb
das
xchg
arpl
das
ret
outsl
ljmp
sti
lock
psrlq
lods
and
xor
push
inc
decl
das
inc
inc
aas
mov
mov
push
xchg
push
or
add
add
jg
mov
mov
mov
lcall
xor
sbb
daa
mov
adc
fldcw
xchg
in
pushl
orb
cli
add
shrb
pop
mov
daa
dec
or
decl
aam
lret
lea
data16
cs
bound
push
push
pusha
sti
pushl
lcall
icebp
cli
sub
push
lret
mov
jge
pop
cmpsl
pop
inc
ja
jecxz
addr16
jmp
imulb
mov
push
arpl
mov
dec
mov
call
test
fwait
movsl
mov
addr16
and
int
in
in
pop
loop
sub
pop
into
arpl
xchg
int
movsb
frstor
mov
test
sarl
mov
loope
mov
xor
int3
mov
mov
cmp
sbb
int3
pushl
xor
inc
bound
dec
inc
bsr
fdivl
mov
jne
jmp
pop
int
ljmp
sub
enter
sub
std
push
pusha
enter
lcall
dec
lret
scas
mov
fcomps
into
or
mov
repz
das
mov
add
mov
xlat
popa
nop
call
dec
stos
icebp
call
es
leave
cmp
xchg
jae
push
cmp
mov
xor
fistps
pop
das
pop
daa
test
pop
aam
dec
jecxz
pop
push
loop
sbb
push
pushf
adc
jmp
arpl
mov
dec
push
out
clc
mov
lea
push
scas
xor
sbb
sbb
lock
out
stc
pop
sarb
mov
jb
inc
dec
xchg
sub
push
and
in
mov
arpl
mov
pushl
jge
rep
fildll
iret
inc
aam
cli
fisttps
incl
mov
movsl
imul
movsl
pop
popf
fucomip
movsl
test
das
dec
sbb
stos
xchg
xchg
jbe
out
mov
decl
and
sbb
outsl
shlb
fdivr
mov
das
sub
mov
fcmove
ficompl
jno
out
roll
jmp
pop
clc
sub
mov
inc
mov
pushl
es
rcll
mov
pop
pop
jge
jp
inc
inc
in
insb
mov
pop
xchg
int3
scas
test
ljmp
mov
cmp
in
lret
inc
sbb
mov
arpl
pusha
mov
mov
inc
cmp
cmp
pop
or
cli
lods
cltd
lds
adcb
mov
mov
sti
mov
jg
lcall
mov
in
out
hlt
lcall
lret
xor
jmp
repz
rolb
fstp
or
call
call
pushl
mov
pop
cmpsl
push
push
test
out
das
mov
xor
jne
or
inc
push
ss
call
inc
xchg
ds
mov
test
je
repnz
adc
loop
inc
cltd
and
dec
dec
mov
push
insb
test
popf
in
cli
rcrb
fs
lods
push
popf
jg
jp
loope
scas
pop
adc
dec
lret
pushl
fidivrl
in
cmpsb
mov
sti
inc
rol
mov
movsl
popa
std
dec
mov
call
xor
fwait
stos
arpl
xor
cmpsl
test
pop
out
sub
repz
fcmovnu
xor
lahf
mov
mov
lods
push
insb
sbb
xchg
xchg
subb
lcall
aam
into
int3
jae
pusha
je
pop
cmp
bound
xchg
cmp
repz
mov
ljmp
mov
inc
push
int
mov
push
int
lods
mov
scas
mov
aaa
decl
hlt
or
and
inc
addb
dec
cmpsb
aaa
lds
loopne
filds
lcall
call
test
out
pop
out
add
std
inc
cli
push
ja
sub
jg
ja
mov
stc
popa
lret
jb
mov
jge
inc
iret
in
or
lea
sbb
jmp
rolb
cli
into
insb
mull
mov
mov
xchg
daa
jp
jg
inc
ja
scas
and
add
sahf
repnz
fcoms
pop
or
xor
cld
cmpsl
mov
and
decb
jno
popa
add
pop
mov
or
scas
cmp
and
add
arpl
call
mov
loope
push
ljmp
pop
in
test
pop
cmc
mov
incl
mov
dec
dec
fistpll
xchg
lds
add
cmp
ret
aad
mov
xchg
mov
xor
filds
pushf
popf
jmp
movl
addb
outsb
adc
in
adc
jo
incl
xor
cli
xchg
dec
add
lcall
ficompl
inc
mov
mov
push
push
ret
mov
rol
xchg
xor
imul
xchg
mov
lret
fwait
mov
mov
push
xor
sahf
idivl
ss
decl
push
std
xchg
mov
fnstenv
aaa
mov
out
adc
cmc
incb
out
push
ja
cli
pop
idivl
sub
mov
fcomi
outsl
fs
dec
fxtract
or
sti
idiv
push
stos
std
mov
pop
pop
xor
adc
cmp
icebp
or
or
xchg
das
cli
js
jbe
sub
mov
pop
ja
jmp
hlt
outsb
xchg
repz
cmp
push
in
shl
push
ss
add
sbb
clc
sbb
aad
mov
push
mov
lcall
sbb
jecxz
loopne
mov
pop
sarl
push
int3
inc
fdiv
mov
pop
push
insl
movsb
incl
aad
xchg
lea
es
lahf
cmp
mov
xor
ljmp
fcomip
decl
stos
mov
sbb
pop
loop
mov
xchg
loope
lds
sub
jmp
dec
push
add
test
js
imul
jle
lret
out
or
mov
enter
cld
jmp
cs
xorb
sti
jmp
in
jg
cltd
mov
dec
cmpb
out
pop
data16
push
dec
out
fsts
jns
aaa
push
repnz
lret
mov
jno
mov
jg
je
mov
enter
inc
dec
stos
fmul
and
aam
mov
pushf
pop
xor
xor
pushl
mov
call
fwait
popf
loopne
add
nop
adc
daa
inc
lahf
xlat
lahf
out
inc
rcr
arpl
ljmp
pop
pusha
jno
push
aas
imul
mov
mov
or
call
adc
add
cwtl
add
push
mov
mul
dec
and
icebp
and
loop
jl
push
push
lods
jb
xor
cmpsl
in
pushf
iret
ret
jnp
mov
pop
push
jbe
das
mov
inc
or
sbb
movsl
cli
out
sub
ljmp
cmpb
dec
cmpsl
out
in
jecxz
mov
jmp
std
push
mov
icebp
push
and
lock
mov
lret
stc
mov
inc
xor
sub
adc
push
call
std
repz
and
insb
jns
ss
sbb
inc
sub
int3
push
push
cltd
and
pop
repnz
fwait
es
loop
andl
dec
mov
mov
dec
subl
lahf
sub
into
inc
and
fwait
sbb
ljmp
lock
out
cmc
pop
dec
in
scas
pop
pop
stos
sub
dec
arpl
shl
mov
adc
call
mov
lahf
push
out
cmp
dec
aam
dec
cmc
shl
adc
mov
jp
lret
mov
mov
push
pop
shrb
addr16
xchg
aam
mov
das
call
pop
xor
cld
popf
push
outsl
sbb
test
sbb
movsb
jmp
dec
sub
inc
outsl
aad
dec
insl
cli
cltd
icebp
sar
icebp
cli
pop
push
cmpsb
mov
pop
lret
imul
outsl
inc
cmp
call
cli
sub
pushf
push
fdivs
lret
mov
ss
dec
lcall
call
jle
pop
clc
inc
dec
int
mov
dec
jae
decl
stc
es
decl
into
repnz
adc
jbe
sub
xchg
xchg
mov
xor
ljmp
cwtl
xchg
addr16
jecxz
lea
dec
fsubrs
shll
dec
xchg
int3
jmp
mov
in
sarl
mov
faddl
sub
dec
lods
shlb
pusha
incl
xchg
pop
cmp
pop
mov
push
sub
pavgb
jne
or
out
dec
add
mov
push
in
arpl
pop
fldenv
add
dec
lcall
add
sbb
mov
and
clc
mov
dec
mov
cmp
sar
jmp
stc
mov
cmp
scas
js
ss
push
sbb
out
ljmp
lods
push
push
and
inc
dec
jg
rclb
push
dec
cmp
movsl
sub
mov
pushl
xchg
jnp
out
insl
sbb
data16
push
dec
push
mov
lods
add
pop
add
adc
xchg
fisttpll
call
js
sarl
mov
int3
gs
mov
pushf
jbe
or
cli
sbb
cmp
lcall
fs
fdivl
mov
in
fdivrs
arpl
xchg
sbb
mov
jl
stos
sbb
ljmp
xor
ret
xchg
in
cld
mov
stc
dec
lock
lret
enter
sbb
nop
leave
mov
xchg
mov
xor
jmp
inc
cmpsb
pop
mul
int3
push
pop
mov
or
loopne
jg,pn
int
insb
fwait
jmp
decl
fcoml
mov
ljmp
dec
jne
outsl
lahf
test
sahf
cmp
in
jne
dec
push
insl
xor
pop
mov
push
jmp
sub
in
jnp
or
add
pop
decl
lock
add
push
xorl
mov
repz
incl
incb
fistpl
inc
icebp
aaa
sub
cld
lahf
pop
aad
imul
adc
mov
call
cltd
out
call
xor
lds
sub
mov
adc
push
ja
jecxz
fcomip
add
inc
mov
scas
xchg
jbe
dec
and
pop
xchg
jp
ret
mov
add
mov
std
mov
or
ja
scas
adc
xor
xchg
outsb
xchg
arpl
mov
cmpsb
or
cmp
int
cs
mov
incl
mov
mov
dec
sti
lea
pop
ljmp
xchg
xor
push
pop
jg
dec
pop
dec
xchg
int
movsl
mov
xchg
rcrl
push
dec
repz
cmpsb
sub
cmpsb
stos
pushl
and
sub
mov
insb
test
dec
ds
inc
push
xchg
dec
dec
stos
das
and
bound
pop
call
cmp
lods
bnd
cs
imul
mov
ja
push
push
in
fst
inc
push
mov
test
push
in
push
cmp
inc
pop
or
dec
sbb
adc
jno
lcall
fs
mov
scas
pop
xor
push
fsts
jmp
mov
or
push
std
xchg
pop
dec
and
out
clc
lds
popf
push
adc
lret
dec
ss
xchg
adc
or
ljmp
stc
and
lahf
dec
es
inc
mov
push
xlat
test
mov
jge
movsb
cli
mov
out
and
add
ds
inc
cltd
loopne
pop
lds
div
mov
xchg
or
imul
lret
clc
outsl
call
xchg
bound
rcr
mov
sub
lahf
dec
aam
aad
xchg
fidivrl
mov
mov
mov
movsl
mov
in
or
lea
jg
icebp
xchg
daa
fs
cwtl
int
es
jbe
pop
and
lcall
loop
push
xchg
and
add
lea
cmpsb
in
test
inc
mov
aad
leave
mov
enter
pop
jne
mov
jb
dec
jb
subl
or
out
add
in
xor
push
movsb
xchg
dec
mov
push
pushl
jg
test
hlt
mov
sub
mov
jp
mov
jl
leave
scas
xor
or
out
push
mov
mov
fwait
adc
cli
push
lods
loop
pop
int3
insl
enter
ljmp
cli
daa
xlat
jmp
scas
test
insl
fwait
mov
loop
daa
cmc
jmp
push
and
pop
xchg
stos
jle
mov
cmpsl
cmpsl
sbb
divb
loop
jg
ss
xor
cli
fdivp
jg
sub
pop
es
jne
pop
push
pushl
mov
xor
jnp
lods
xor
inc
mov
adc
push
lcall
dec
pop
inc
dec
jae
mov
aaa
sbb
pop
jae
push
fmuls
mov
pop
sahf
jne
movsl
sti
sub
mov
movsl
adc
and
sub
mov
pop
mov
jno
cmp
std
pop
sahf
xor
rorb
imul
push
pop
fwait
clc
inc
sti
repz
neg
ljmp
rcrb
insb
fxch
arpl
lahf
sub
sbb
mov
aam
push
iret
mul
mov
inc
adc
xchg
ss
push
je
xchg
leave
fbld
call
sti
jg
out
js
push
ds
in
mov
lahf
das
mov
cmp
call
gs
es
out
cmpsl
in
xor
or
fs
and
sti
push
push
orl
xor
lahf
insb
test
and
sub
scas
frstor
or
lcall
loope
mov
lods
lahf
push
cmp
xchg
push
jns,pt
add
stc
cltd
mov
fisubrs
mov
mov
fucomi
mov
mov
out
dec
js
shll
outsl
cli
lcall
inc
idivl
xchg
imul
xchg
fwait
mov
dec
cmp
pushl
imul
fwait
pop
pop
sbb
loopne
aas
into
jb
jbe
jle
popf
popa
or
push
and
mov
sub
jbe
into
push
lahf
pop
sti
insb
mov
stos
and
shrb
mov
ljmp
test
out
xchg
push
mov
divl
xchg
push
aad
ljmp
imull
into
or
lret
jmp
cmp
jnp
std
ficomps
fimuls
loope
jnp
loop
testl
rcll
mov
ljmp
lahf
xchg
fsubr
sar
and
mov
scas
lods
cmp
jg
pop
xchg
cli
lds
fistps
mov
test
push
sub
stc
sarb
mov
sahf
cmp
in
in
push
xchg
aaa
out
mov
fldcw
in
fstps
jg
cmp
mov
dec
xlat
pop
sub
cmp
ror
clc
aad
mov
cld
pushl
scas
dec
iret
imul
pop
mov
jns
in
fmulp
lahf
jnp
mov
iret
cmp
call
jle
out
mov
mov
pop
lcall
adc
adc
in
mov
lods
insl
hlt
push
lods
stos
std
or
sti
std
dec
aas
lock
stc
in
jg
aam
or
out
insl
sbb
in
pop
hlt
ficomps
xlat
mov
push
inc
inc
lahf
xor
jno
cmp
and
sbb
jmp
dec
pop
gs
adc
dec
push
test
loop
inc
ret
mov
das
nop
xchg
xchg
jecxz
sbb
mov
popf
mov
mov
dec
addb
into
jecxz
ficoms
popf
cmp
loop
dec
les
sub
mov
lcall
jnp
push
fucomi
mov
push
in
jmp
cld
in
dec
sub
push
mov
push
mov
hlt
cli
pop
in
test
sub
lds
imull
push
xchg
xlat
call
cld
jecxz
inc
push
sarl
cs
pop
mov
gs
jg
scas
pop
push
icebp
loopne
ret
dec
jns
loop
sub
cmp
pusha
lds
lock
pop
jns
jmp
push
sbb
or
mov
ljmp
add
and
jg
out
ss
lods
leave
xor
sbb
sti
hlt
inc
scas
xor
jnp
jnp
inc
iret
dec
out
scas
xor
dec
ss
inc
inc
dec
decl
adc
and
xor
jae
xchg
add
mov
aaa
jbe
jl
and
cld
aas
adc
jnp
cmp
pop
adc
push
xchg
jo
or
jle
xchg
xorb
push
inc
cmp
ss
sub
fs
jno
lcall
pop
pop
les
imul
xor
xchg
cltd
or
loop
fdiv
sub
jns
adc
xlat
pop
push
fadds
fld
mov
in
jg
jns
pop
mov
xor
cmp
cmp
addb
js
lcall
subl
xchg
fs
pushl
jmp
sbb
mov
insl
xchg
pop
inc
andb
xchg
jns
lret
movb
in
incl
xchg
fimull
inc
mov
xor
movsb
push
repnz
cmp
daa
add
out
cmpsl
data16
dec
pop
sub
imul
jmp
cmpsb
mov
xchg
ret
xchg
add
lds
push
outsl
cli
jmp
ja
mov
cmp
enter
dec
cmp
adc
push
xchg
sub
rcrb
sub
mov
jmp
es
decl
mov
subl
int3
pop
sbb
and
mov
mov
rcr
lcall
mov
pop
jo
adc
jnp
cmp
sbb
gs
rsm
std
pop
pop
sub
outsl
int
incl
hlt
pop
sub
std
sbb
cmp
cld
int
or
jg
jecxz
push
mov
inc
ja
decl
xorl
sub
fimuls
xchg
dec
push
test
or
decl
decb
push
sub
mov
jne
jp
push
jecxz
jnp
cmp
call
mov
push
fucom
add
sarl
jns
lret
ljmp
mov
call
push
sub
gs
xchg
popa
fsubrs
aam
aam
int
push
add
add
imul
mov
cltd
sbb
in
cmp
iret
sti
movsl
push
jo
sahf
test
jmp
xchg
xchg
pop
clc
into
jl
cmp
xchg
outsb
popf
xchg
inc
iret
inc
in
sbbl
imul
call
outsb
sahf
testl
movsb
call
pop
insb
test
pop
push
stos
push
insl
mov
cmp
push
xadd
push
outsb
aam
push
ficompl
mov
or
data16
shl
pop
inc
iret
adc
dec
cmpsb
or
scas
call
push
lods
jg
dec
mulb
sahf
mov
inc
or
mov
or
out
jbe
adc
adc
dec
mov
fwait
repnz
inc
inc
push
out
ret
stos
lahf
testl
xchg
test
decl
push
jno
cmp
fildll
mov
jp
push
mov
sti
pusha
ja
test
mov
into
push
adc
xchg
addr16
notl
xchg
push
push
in
mov
mov
pop
cld
ss
xchg
movb
lret
icebp
push
adcl
pop
aam
mov
jmp
push
adcb
cmp
mov
enter
cmp
cmp
in
jb
adc
dec
push
xlat
test
es
data16
and
incl
ljmp
and
cli
xchg
out
jg
cmp
push
cltd
dec
aad
cli
stos
mov
cltd
adc
dec
mov
lcall
inc
mov
cltd
dec
sbb
jg
fwait
xor
cwtl
outsl
xlat
daa
jbe
lea
sbb
pop
sbb
lcall
push
pop
loopne
iret
sbb
mov
mov
xchg
jp
sub
incl
orb
mov
mov
clc
sbb
repnz
cld
imul
aaa
dec
push
cmp
in
mov
es
addr16
mov
ljmp
sub
sub
fwait
std
out
fisubrl
ja
test
cli
incl
mov
mov
inc
sub
inc
stc
xor
fisttpll
fidivl
adc
mov
pop
adc
sti
xchg
mov
mov
lods
jge
incl
jle
jp
lret
outsl
jae
imul
rcll
mov
or
repnz
sub
sbb
ljmp
pushl
ja
ficoms
or
jo
jle
rcll
mov
cmpsb
decl
jl
xlat
cmp
dec
out
mov
leave
incl
xchg
cli
in
call
pcmpeqd
push
fstpt
add
lret
add
xchg
sarl
mov
idiv
call
call
or
jg
out
enter
es
ljmp
mov
push
sub
xchg
or
outsl
adc
call
adc
shl
pusha
pop
mov
loope
sar
lds
pop
xor
stos
loop
addr16
ljmp
sbb
sub
insb
jbe
inc
pop
xor
mov
mov
loopne
lret
out
mov
stc
pop
idivb
xchg
gs
sbb
sub
mov
call
loopne
inc
in
push
insl
inc
dec
rcrl
fs
inc
sti
push
lret
jecxz
or
incl
pop
add
dec
stc
in
imul
pusha
ljmp
mov
push
mov
leave
mov
mov
sbb
div
ljmp
mov
add
test
incl
decl
repz
cli
mov
out
icebp
jae
cli
cwtl
mov
out
sub
add
jae
das
or
stc
ljmp
lock
cltd
ljmp
lods
jne
ljmp
rolb
mov
lea
hlt
shll
aaa
aam
push
idivl
pushl
lods
jnp
scas
xor
arpl
stos
rcr
cmc
sahf
and
sbb
pushl
pop
cmp
icebp
mov
cmp
dec
sub
jne
mov
jbe
in
test
movsl
dec
or
push
call
movsb
push
out
adc
and
and
pop
inc
jbe
imul
sub
decl
inc
adc
mov
inc
pop
pop
sbb
fimull
sbb
je
pushl
or
sub
ret
lock
movsb
out
cmpsb
and
data16
out
sahf
ret
inc
fists
ljmp
out
push
fmuls
addb
ss
addr16
in
insb
popf
inc
fdiv
cmp
mov
jne
mov
imul
xor
pop
fnstsw
mov
jg
inc
mov
rcll
xchg
mov
cmp
out
sahf
lock
incl
add
cmp
mov
jmp
mov
cmpsb
jl
lods
mov
mov
mov
call
mov
fmuls
pusha
rol
mov
fisubrl
ret
lds
mov
loopne
mov
ftst
pop
xor
inc
cmp
icebp
mov
call
cmp
mov
mov
pop
outsl
call
push
mov
decl
js
push
pop
repnz
test
fists
int3
out
repz
mov
xchg
lret
loope
das
sbb
mov
test
inc
or
push
lcall
cmp
cmpl
dec
adc
daa
imul
jne
jmp
add
add
or
insb
outsb
xor
xchg
stc
loop
out
dec
call
xor
pop
data16
xchg
jno
clc
dec
imul
fldenv
adcb
ljmp
xchg
subb
jmp
xchg
xchg
sbb
cmp
loop
mov
sbb
mov
enter
in
test
loop
xor
xchg
cmp
mov
ds
push
sti
mov
inc
bound
mov
mov
daa
mov
mov
jg
in
fsts
xchg
mov
mov
rclb
lret
sub
xchg
pusha
cmp
push
cmp
lahf
cltd
cmp
call
xor
inc
push
dec
les
push
inc
lods
inc
pop
ja
fistl
aaa
lcall
cwtl
xor
dec
dec
jge
push
es
cmpl
add
jecxz
adc
clc
or
leave
jmp
std
loop
push
aad
dec
aaa
clc
xchg
mov
sbb
outsl
test
pop
lock
out
pop
decb
movsb
push
aas
mov
push
mov
loop
xchg
lds
dec
ja
bound
mov
sbb
push
call
and
sub
adc
push
jno
push
incb
pushf
pop
jns
jl
imul
std
incl
lret
cmp
mov
cmpsl
pop
ficoml
sub
xchg
cwtl
pushl
int3
scas
xlat
or
or
inc
ret
xchg
fsubl
les
inc
ud0
cld
ljmp
out
in
xchg
adc
xor
insb
dec
and
in
hlt
jnp
mov
cmp
or
out
and
fsubrs
fstps
pushl
sbb
fbld
sbb
arpl
negb
mov
int
mov
test
push
push
enter
push
ret
cld
cmp
xchg
dec
dec
je
and
popf
clc
insl
pop
jmp
adc
dec
into
cld
xchg
jb
sbb
out
clc
add
push
xlat
cmp
lret
fwait
jae
lock
adcl
fstpl
sbb
aad
dec
sti
push
lods
dec
imul
mov
lock
add
mov
fstpt
aam
push
pop
mov
mov
and
sub
and
mov
push
and
adc
clc
sbb
movb
mov
mov
gs
sub
jmp
add
jns
sbb
psraw
pop
jb
inc
pop
inc
push
mov
mov
xchg
das
mov
ljmp
jno
or
leave
filds
test
cwtl
or
movb
stc
pop
fwait
clc
xor
lcall
cltd
fiaddl
aam
jne
or
ljmp
addr16
popa
and
out
lods
xchg
xchg
movsl
sbb
je
mov
test
jb
mov
out
clc
push
call
clc
lea
jg
vcomiss
cmp
or
iret
or
dec
call
dec
mov
xchg
mov
repz
inc
rorb
scas
push
mov
lods
xor
decl
pop
sub
icebp
sbb
and
leave
shlb
mov
inc
jnp
dec
inc
push
mov
imul
pop
adc
pop
dec
jg
sbb
push
pop
cld
mov
pop
in
daa
or
ljmp
adc
jg
or
dec
in
repnz
xchg
xchg
test
sub
cmp
pop
lods
jmp
fcomps
push
shrb
mov
cld
pop
rorb
imul
cld
mov
xor
and
xor
cwtl
dec
popa
mov
or
outsl
js
add
call
or
jmp
push
adc
mov
fidivrl
push
jmp
mov
arpl
imul
hlt
sahf
add
jmp
fsub
loop
leave
cmpsb
xor
inc
sahf
push
sbb
enter
jmpw
and
leave
jns
dec
mov
and
popa
repz
cltd
in
xchg
xchg
pusha
shrl
xor
sbb
rcll
repz
decl
lock
enter
hlt
push
inc
aad
fs
lods
push
mov
cwtl
sub
jg
or
jo
neg
add
and
cmpsb
int
xchg
js
mov
jo
notl
inc
mov
add
add
lock
in
orb
sahf
into
sub
or
dec
mov
pop
into
xchg
inc
adc
mov
and
xchg
call
sarb
outsb
cmp
xchg
pushl
std
sbb
daa
xor
out
jp
psubusw
lds
ror
mov
call
jl
leave
das
insb
add
mov
sub
cmp
popa
clc
and
incl
lahf
adc
imull
jns
mov
sub
cmc
test
loope
cmpsl
sbb
pushl
je
inc
stc
fsubrl
cmc
out
enter
mov
inc
jnp
call
test
mov
adc
in
inc
xor
sahf
sbb
fmuls
and
outsl
sub
inc
cli
xor
cmp
push
or
pushl
cld
out
mov
popa
push
xor
mov
xor
jno
decl
data16
mov
aas
fwait
pop
pop
mov
cmp
imulb
decl
inc
fimull
scas
pop
stc
int3
or
jbe
lcall
ds
in
adc
sbb
and
pop
pop
outsb
ret
pop
mov
ljmp
and
push
shrl
in
pop
repnz
pop
repnz
mov
ret
lods
scas
xchg
aam
xchg
xchg
pop
mov
inc
mov
push
cli
lods
aam
mov
sbb
xor
jmp
cmpsl
nop
testl
adc
pop
sarl
and
mov
jne
fsubs
push
leave
push
cmc
add
or
scas
cli
ljmp
repnz
jb
mov
cli
shr
xchg
icebp
js
subl
icebp
jmp
fs
xchg
jge
inc
clc
push
jae
or
inc
xlat
mov
cld
and
dec
js
or
hlt
adc
push
inc
leave
and
out
ror
and
ret
mov
xor
lods
adc
pushl
jle
xchg
int
sbb
loop
mov
inc
mov
mov
incl
xor
add
cltd
cld
jge
add
shl
fs
pushl
or
arpl
add
push
dec
icebp
jge
imul
xchg
mov
mov
cmc
mov
xlat
int3
jbe
and
pop
shll
xchg
movl
lock
mulps
scas
sbb
int3
loop
cmp
ljmp
aad
mov
add
call
jno
push
cmc
mov
xchg
sub
outsl
insl
xorl
lcall
cmp
rolb
ja
lea
mov
lcall
fsts
jg
andb
rcrl
xlat
inc
cmp
in
lahf
sbb
adc
pop
arpl
cltd
mov
pop
pusha
dec
ljmp
mov
gs
push
inc
fcoms
inc
aas
xor
daa
ret
mov
xlat
xchg
jbe
call
popf
inc
sbb
jns
cmp
pop
lods
scas
ss
shll
mov
jbe
xor
imulb
hlt
dec
jnp
insl
icebp
pop
fwait
jne
insl
push
ss
mov
jbe
addr16
mov
mov
mov
incl
xchg
sub
mov
cli
jg
out
out
cli
push
pushf
xchg
pushl
cld
cmp
lcall
fbld
cld
cmp
lock
pushl
cld
fldt
jmp
aam
arpl
xor
cmp
call
pop
imul
iret
mov
mov
clc
xor
push
ja
sbb
aaa
and
sbb
outsl
mov
psraw
cmp
inc
jge
divl
cltd
push
dec
mov
push
jno
inc
loope
mov
cmpsb
pop
mov
clc
push
out
dec
sub
test
cld
lds
icebp
je
inc
sbb
dec
ljmp
aaa
cli
pop
mov
and
mov
cmp
scas
mov
jmp
out
fst
push
imul
push
add
sbb
push
adc
jmp
or
push
jge
jge
dec
pop
xchg
mov
jmp
pop
jae
push
jg
scas
dec
popa
cmp
mov
mov
lods
lds
daa
lcall
ja
lods
inc
pushl
rorl
add
daa
push
les
call
rcrl
into
out
arpl
jmp
pop
inc
imul
adc
pop
lea
sbb
cmp
lcall
popf
mov
sub
xchg
ret
test
and
add
pop
imul
pop
scas
decl
in
dec
lods
jno
push
cmp
pop
inc
aad
sub
dec
notl
sti
jmp
popa
arpl
in
pop
test
xchg
cli
add
pop
fdivr
incl
cmc
sub
movsb
mov
xchg
inc
jno
test
cmp
dec
mov
pop
fs
ret
lret
jg
jg
xchg
mov
pushf
inc
mov
cmp
fnstcw
decl
int3
icebp
jle
inc
fiaddl
fists
mov
imul
cmp
xchg
mov
cmp
stc
push
test
dec
leave
or
loope
ret
out
das
inc
mov
inc
xlat
decl
in
push
and
xlat
jnp
jmp
pop
gs
mov
and
mov
pushl
push
mov
mov
je
sub
lahf
push
scas
or
fcmovbe
xchg
xchg
jg
std
sub
ljmp
testl
lock
dec
mov
lds
or
pop
js,pt
jmp
mov
dec
jmp
fisttps
cli
leave
cmc
xor
push
std
ret
rol
cmp
jg
rcl
dec
inc
or
jmp
cs
fistl
and
call
pop
push
call
pop
pop
adc
dec
pop
inc
mov
leave
add
outsl
xor
xchg
fwait
push
sbb
js
popf
ret
jg
call
cmp
add
mov
pushf
stc
jno
or
fmull
and
outsl
lcall
jns
jae
inc
mov
inc
jae
mov
mov
fs
mov
sub
out
out
pop
xchg
jg
jnp
mov
push
cs
mov
jo
adc
sahf
sub
mov
push
insl
jmp
xchg
mov
movsl
stos
cmp
clc
pop
xor
jecxz
sbb
call
out
lds
jecxz
je
std
xchg
mov
mov
fsubs
cmp
call
xor
push
dec
imul
mov
int
out
shl
or
inc
adc
lock
enter
inc
into
cmp
scas
sbb
adc
push
jg
push
push
or
idivb
arpl
mov
add
pop
out
loopne
xchg
fdivr
incl
jbe
add
iret
mov
xchg
cmp
inc
dec
xchg
push
call
push
aas
mov
nop
jnp
sahf
notl
adc
xchg
out
adc
fsubrp
mov
add
pushf
mov
lods
cmp
xor
mov
loopne
test
cmc
out
mov
lods
sbb
les
rorl
rcl
jmp
cmp
sbb
sahf
inc
in
lods
dec
jbe
filds
add
add
pop
xchg
dec
inc
insb
mov
mov
jnp
sbb
fwait
pushf
fwait
std
leave
xor
push
lret
std
cli
add
xchg
out
cmp
in
call
xchg
rcl
adc
scas
jle
dec
lea
lcall
popf
fwait
cmp
inc
adcl
data16
inc
and
pushf
sarl
movl
sub
ljmp
aam
or
or
test
icebp
jb
inc
int
add
shll
pop
mov
mov
cmp
push
ja
into
clc
decl
lds
adc
in
jmp
add
and
ljmp
lods
cmpsb
and
enter
mov
and
mov
lea
jnp
add
outsb
fdivs
or
dec
push
fwait
xchg
movsb
sti
sbb
rcl
cmpsb
mov
mov
adc
xor
mov
jg
push
lret
mov
leave
jno
ret
mov
inc
pop
xchg
ret
jg
gs
xchg
das
rcrb
cmp
aaa
out
clc
or
lods
ret
pop
xchg
mov
arpl
test
scas
pop
cmp
lcall
jle
pop
stos
lods
incb
pop
mov
dec
dec
inc
push
pop
rcr
mov
xor
outsl
xchg
fcos
push
mov
and
fisttpl
ljmp
jae
dec
mov
repz
mov
mov
push
dec
fisttps
mov
and
clc
ljmp
imul
fwait
je
fldl2e
aad
pop
cmpsl
scas
push
scas
pop
repz
xor
call
insb
push
dec
mov
scas
push
mov
pushf
mov
add
leave
mov
mov
mov
sub
lret
stos
pop
adc
out
out
movsb
or
xchg
pop
mov
aam
mov
popf
and
sub
jecxz
and
pop
dec
mov
push
xchg
xchg
xchg
repz
xor
out
out
bound
sub
mov
mov
call
xchg
jnp
aam
pushl
xchg
jg
mov
mov
fmull
mov
jl
aas
sub
jle
cs
xchg
xor
popf
mov
xchg
aaa
fidivs
std
lcall
loope
nop
xchg
mov
dec
ss
mov
aas
mov
fimuls
cmp
in
lock
mov
loopne
lret
mov
lock
jns,pn
push
shrl
dec
imull
clc
jmp
mov
xchg
jnp
lcall
cmp
push
cmp
cld
mov
rorl
andb
sub
ljmp
dec
cli
pop
cmc
lret
testl
pop
pop
cmp
mov
fsub
icebp
inc
pop
fiaddl
ret
push
push
or
mov
call
hlt
int3
dec
and
imul
add
es
fadd
push
outsl
popa
icebp
adc
ret
fsubs
add
mov
mov
jmp
jl
add
mov
popf
xchg
jg
lods
sbb
pushl
shll
loopne
subl
es
cld
test
cmp
cmpsb
and
mov
das
mov
or
and
mov
lcall
add
jp
call
sbb
in
in
cs
mov
inc
inc
pop
mov
mov
cmp
fcomp
inc
lods
xchg
loopne
xchg
shll
xor
or
mov
jp
and
js
filds
les
lds
push
or
lahf
adc
or
aaa
pop
pop
arpl
add
lcall
mov
vmread
mov
imul
pop
fstl
cmp
ljmp
out
leave
push
enter
sub
xchg
or
pop
ud0
pop
lret
ret
add
jmp
jae
xchg
jnp
lock
or
pusha
lds
outsb
dec
outsb
pop
push
es
aas
jg
decl
notb
jecxz
add
cmp
movsl
mov
pop
in
outsb
mov
sbb
jge
mov
xor
sub
scas
mov
sbbb
and
cs
adc
dec
imul
jmp
int
and
comiss
sub
outsb
fists
and
sahf
mov
das
cmpsb
ljmp
clc
cs
xchg
xchg
adc
jbe
pusha
lods
out
int3
cmp
jge
xchg
dec
xor
dec
jnp
mov
incb
vmovapd
sub
xlat
fildl
mov
lcall
xor
push
xor
xlat
rorb
xchg
xor
movsb
mov
loopne
lcall
jns
out
in
jno
cltd
fiaddl
pop
mov
sbb
bnd
jp
mov
aad
fs
in
or
mov
jl
dec
mov
mov
decl
push
clc
adc
fsubs
in
fsubrp
push
push
mov
or
decb
inc
mov
dec
xor
sti
mov
lahf
mov
add
push
cltd
lret
dec
fdivrp
push
mov
filds
scas
std
push
cmpsb
jb
lcall
sbb
ljmp
cli
mov
mov
mov
sub
dec
cmpsl
sbb
mov
mul
push
lahf
cmp
dec
sub
xchg
sbb
mov
ja
movsl
or
std
pop
cmp
mov
or
shr
into
sbb
dec
xchg
dec
clc
arpl
jne
clc
es
incl
add
sbb
pop
xor
lds
jae
cmp
loope
lea
aas
cmpb
outsb
punpckldq
pop
adc
xchg
pop
sub
stc
xlat
inc
ds
mov
movsb
idiv
xor
insl
adc
adc
es
xchg
mov
jg
sub
repnz
pop
mov
decl
cmc
loope
jnp
push
cmp
dec
sub
popa
sub
push
clc
push
jb
mov
jae
jecxz
sbb
test
sbb
in
mov
lret
jp
xor
push
jg
mov
out
jns
mov
fwait
inc
xchg
das
out
pop
push
in
jp
sbb
mov
mov
xor
sbb
add
jb
adc
xchg
push
stos
mov
mov
movl
insb
jne
fsubr
sub
incl
add
scas
lret
mov
insl
icebp
push
test
imul
cwtl
push
jmp
or
cmp
adc
pop
iret
popa
jle
sbb
push
jbe
in
gs
xchg
push
lahf
addr16
std
incl
ret
daa
jge
or
mov
cwtl
xchg
pusha
cmp
xchg
popf
js
insb
cltd
ret
push
lret
fbld
xchg
push
je
aas
jp
aad
js
sbb
dec
jge
adc
jecxz
jg
sub
mov
adc
xchg
xor
int
fs
incl
mov
jae
pop
repz
lods
lret
push
dec
es
addr16
in
xchg
incl
sbb
cmp
loopne
ss
ficoms
rcr
call
sbb
adc
push
out
daa
lock
cmp
divl
sbb
lods
cmc
repnz
decl
pop
mov
jae
cli
push
mov
sbb
mov
popf
sub
mull
mov
mov
cwtl
and
pop
bound
fildll
cmc
jg
decl
or
call
lea
or
dec
sar
jmp
adc
in
inc
in
inc
in
std
jg
outsb
lret
jbe
lds
or
fimull
pop
js
inc
dec
pushf
les
xchg
xchg
decl
jmp
push
dec
fists
xor
int3
xor
or
bound
push
icebp
or
cmpsl
push
lea
push
shrl
jge
test
mov
jecxz
dec
ljmp
aas
or
sarl
or
push
mov
rcrl
lods
aas
inc
pushf
outsb
mov
decl
jnp
cmc
adc
lds
popa
xor
mov
jl
les
pop
fwait
mov
bound
pushl
ja
and
aad
inc
out
pinsrw
outsb
cmc
add
testb
inc
incl
lea
sbb
loope
andl
je
pushf
add
xchg
adc
int3
pop
adcl
repnz
mull
fstpl
movl
scas
jb
cmc
cs
test
mov
faddl
sub
outsb
stos
pop
add
jmp
xlat
xchg
adc
jle
gs
insl
insl
fxtract
cmc
sub
mov
jno
movd
fucomip
xchg
gs
call
std
jge
xchg
gs
lods
inc
and
lret
mov
lods
sub
loope
lods
and
incl
cs
jne
orl
push
jo
lcall
hlt
mov
aas
ret
jg
lret
sub
sub
scas
fdivl
test
mov
mov
fcmove
mov
or
pop
push
mov
roll
pop
ljmp
xor
pop
mov
dec
pop
mov
mov
pushl
dec
xchg
cmp
mov
and
les
sti
dec
and
xchg
call
les
outsb
mov
lret
sub
mov
push
cld
adc
dec
je
dec
into
sub
dec
bound
mov
mov
mov
outsl
cmpsl
les
cmp
xchg
enter
js
loop
mov
insb
inc
lcall
adc
test
lea
add
pop
xchg
pop
das
icebp
and
pushl
clc
pushf
les
out
xchg
clc
mov
cmpsl
and
sub
inc
and
shll
inc
lock
pushl
int
aad
decl
sub
hlt
sti
mov
mov
loop
mov
adc
in
neg
and
les
mov
outsb
xchg
test
in
fisttpl
jo
les
mov
out
xchg
mov
push
cmp
xchg
cwtl
and
sbb
ljmp
mov
pop
loop
mov
sub
sbb
cwtl
ljmp
decb
shll
push
xchg
push
sub
xchg
les
mov
and
pushl
jl
js
fwait
les
adc
push
nop
mov
add
das
clc
pop
lock
popf
out
ds
icebp
sbb
sub
dec
dec
fdivl
pop
inc
out
add
mov
pushl
nop
js
bound
xchg
fsubrs
icebp
cmp
sbb
mov
je
or
sub
aaa
adc
mov
dec
fsubl
jl
loop
xchg
cld
pop
jg
mov
mov
fwait
and
pop
cltd
les
cs
pop
das
push
cld
pop
in
inc
pop
fsts
repz
cmp
ljmp
jmp
and
mov
sbb
sbb
dec
mov
mov
push
and
in
orb
and
push
lret
js
xchg
jae
cmp
dec
or
mov
and
lock
push
dec
hlt
dec
jle
mov
xchg
loop
mov
adc
mov
negb
sub
loop
daa
and
and
mov
inc
or
sti
and
jl
bound
sbb
jg
cmp
sub
jg
out
jmp
mov
add
sub
mov
fsubs
shll
pusha
mov
xchg
ud0
mov
out
adc
std
cmp
out
add
mov
aaa
adc
outsl
push
lret
shll
push
inc
andl
dec
loop
xor
imul
inc
cmp
repnz
movsl
popa
mov
jmp
popa
decl
ret
jmp
sub
ds
sbb
cmp
js
icebp
xchg
mov
dec
ret
pushl
xor
push
lock
dec
popa
inc
pop
mov
jl
call
xchg
dec
jae
das
sar
adcl
jp
cmp
mov
gs
jp
stos
sub
pop
test
into
mov
lock
fwait
jmp
lcall
data16
pop
mov
in
mov
push
in
mov
enter
insb
imul
jmp
and
mov
addr16
adc
dec
mov
jnp
out
popf
cs
cld
jg
nop
cmpsl
punpckhdq
sub
lods
call
mov
mov
ljmp
out
decl
les
or
inc
xor
adc
dec
int
fst
mov
lock
pop
add
stc
mov
std
mov
decl
jmp
imul
rorb
icebp
adc
andl
fcos
cmp
pop
fadds
repz
cmp
int3
mov
inc
decl
das
loop
inc
mov
rclb
dec
sahf
fwait
pusha
xor
sub
xchg
scas
cli
pushl
cmp
and
hlt
jmp
cmp
fldenv
and
jnp
pop
and
fsubs
and
mov
xchg
cmp
dec
repnz
movsb
js
stc
int
jo
jg
jo
push
push
hlt
sbb
pop
jmp
dec
mov
sahf
adc
mov
clc
stos
adcb
loope
incb
pop
shlb
mov
xchg
add
addl
or
or
or
sar
clc
aas
add
nop
or
sub
orb
add
std
pushl
lea
lock
inc
add
sub
xor
mov
add
divb
adc
aas
or
mov
shlb
lret
add
loopne
add
fstpt
jle
stos
xchg
add
push
adc
imul
fsubr
imul
pop
add
and
popl
jle
outsb
add
pop
shl
pop
push
mov
and
add
pop
lock
mov
jg
add
adc
sbb
jl
shlb
push
shl
cld
xchg
cmpb
pop
rcrb
and
xchg
fucomi
lods
aaa
std
cli
ljmp
sbb
iret
push
sti
ljmp
pop
adc
jle
mov
add
mov
pop
pushf
imulb
decl
push
repnz
scas
in
shrl
stc
out
idiv
fstpt
jg
outsl
dec
das
test
jmp
push
sahf
loop
lahf
pusha
jecxz
inc
xchg
scas
xchg
xchg
cmp
outsl
jns
incl
push
fsubrl
testb
pop
push
cs
xor
sub
mov
cmc
sub
loopne
xor
xor
jg
and
ds
mov
push
stos
test
or
mov
mov
jge
sbb
std
fmull
or
mov
xlat
dec
mov
mov
pop
test
mov
mov
adc
jmp
setle
lcall
jb
clc
sarl
pop
fstl
out
bound
push
pop
lcall
pop
clc
divb
into
pop
cld
les
sub
daa
scas
ret
pop
loopne
ret
je
mov
lds
imul
fsubrp
jle
imul
push
nop
repz
aaa
pop
lock
jle
lcall
dec
jge
cmc
loop
lret
xchg
int3
pop
xchg
iret
scas
ret
add
insl
nop
jg
sub
icebp
push
hlt
test
jl
lea
out
out
lds
mov
in
sub
jg
scas
mov
aaa
jmp
fdiv
lods
aas
out
out
mov
push
fidivs
shll
sub
mov
jnp
xorl
inc
dec
jnp
mov
std
lahf
repz
not
imul
lret
mov
cmpsl
iret
pop
mul
mov
fcomps
inc
fcoms
sarb
push
cld
mov
xchg
out
mov
das
and
pop
jge
pop
fcoml
repz
pop
pushf
adc
sbb
jmp
dec
cs
jmp
pop
jne
dec
in
stc
cmp
fidivl
loopne
js
cld
or
add
xor
sti
dec
ret
stos
adc
xor
out
mov
dec
mov
jge
sbb
mov
adc
into
sti
int3
jo
jnp
xor
call
sbb
adc
cwtl
addr16
das
imul
mov
push
pop
aas
ds
jnp
outsl
mov
xlat
adc
es
dec
dec
xchg
pop
cld
call
xlat
jb
jno
xchg
addr16
sub
leave
xlat
xor
call
jno
in
fldcw
mov
lcall
sarb
jg
sahf
add
ljmp
mov
sbb
dec
loope
cmp
imul
pop
push
xor
ljmp
outsb
xchg
js
add
cli
shrl
pop
idivl
jmp
shlb
std
cmc
shll
jg
jle
les
cmpl
dec
stc
popa
jmp
paddusw
xor
stc
pop
ljmp
mov
popa
mov
push
fs
lods
mov
dec
pop
es
mov
sbb
ds
test
nop
in
mov
mov
jle
push
adc
movsl
leave
pushl
in
cmc
inc
std
xor
ds
push
sub
inc
std
or
ds
xor
jmp
jp
lahf
clc
decl
ds
push
mov
push
push
push
sub
mov
mov
ud1
add
mov
in
inc
out
cli
pushl
mov
sub
stos
sbb
jnp
out
lret
test
decl
mov
popf
fidivrl
in
subl
sub
icebp
mov
cwtl
lahf
test
pushl
pop
cmp
cli
cld
cmp
lods
fistpll
mov
sub
mov
mull
cmp
scas
cmp
dec
mov
xchg
jl
outsb
repnz
sbb
das
pop
hlt
lea
lods
mov
aaa
jle
icebp
sti
xchg
mov
ljmp
jno
movsb
cmp
mov
push
mov
sbb
scas
pushf
sarb
or
push
mov
sub
pusha
int3
xchg
inc
xchg
insb
inc
adc
inc
jecxz
xor
adc
jge
jo
enter
dec
cmp
repnz
jo
xchg
lods
mov
push
shl
clc
mov
pop
rorl
mov
sbb
lahf
mov
jmp
call
dec
div
xchg
je
mov
fistps
mov
jns,pt
push
mov
rcrl
outsb
ret
xor
lret
iret
movsb
mov
sbb
jge
and
xchg
xor
sbb
jl
mov
and
xrelease
xchg
mov
jg
pushl
ljmp
sub
adc
add
movsb
push
jg
jge
sbbl
inc
xor
jl
cli
js
insb
je
or
inc
push
std
jns
out
jbe
lret
fcomip
dec
and
sub
sbb
cmp
sub
orb
decl
out
aam
inc
imul
jnp
ret
dec
test
je
push
into
pop
scas
clc
pushl
or
or
jns
in
test
cli
loopne
jae
pop
inc
pushf
sbb
push
aad
push
in
ret
pushf
ljmp
inc
xor
jae
fs
lods
enter
ljmp
popa
imul
inc
inc
lods
adc
cld
mov
into
in
mov
push
movsb
inc
sti
and
push
inc
test
ja
sahf
xor
pop
mov
imul
icebp
sbb
incl
call
ss
loope
repz
xor
out
push
iret
pop
imul
adc
push
in
jmp
jg
and
dec
aad
loope
xor
mov
in
enter
dec
shl
adc
adc
mov
xchg
cli
idivl
les
in
push
jle
in
push
jmp
or
xchg
xchg
mov
mov
fs
ljmp
jno
sub
cmp
and
insb
mov
mov
dec
es
jecxz
pop
sbb
cmp
sbbb
call
js
push
sbb
insl
and
dec
lea
inc
xchg
push
dec
ss
xor
js
jg
or
inc
mov
xchg
or
daa
in
insb
incl
es
in
js
adc
orb
into
push
cwtl
lds
lcall
cmpsb
andb
mov
pop
scas
sub
outsl
fs
mov
inc
ljmp
scas
movsb
rolb
ss
mov
xlat
inc
es
jle
xchg
adc
fimuls
int3
xor
cmp
xchg
xchg
and
int3
enter
xor
loop
mov
lcall
sub
subb
jg
mov
cmp
and
push
fcomip
lcall
jg
sarb
mov
out
cli
xchg
sub
xchg
and
mov
dec
or
fwait
push
ret
int
addr16
lcall
roll
stos
xchg
into
fwait
push
js
jecxz
or
xchg
push
pop
testb
or
and
dec
pop
sbb
loop
inc
stc
pushf
pop
pop
adc
int3
push
pop
mov
push
lret
inc
mov
lcall
cmpsl
add
lahf
repz
int3
xchg
push
mov
xchg
mov
fisubrs
xchg
loop
push
xchg
jne
aas
pop
out
aas
mov
dec
mov
push
stc
jo
cvtps2pi
lcall
or
cmp
mov
mov
dec
and
push
int3
and
hlt
xchg
cmpsl
lds
and
movsl
mov
shl
pop
or
int
test
and
cmp
dec
pusha
iret
jg
cmp
test
fs
ja
loope
rcrb
xor
mov
ds
sti
mov
push
test
dec
add
sahf
inc
dec
imulb
pop
or
incl
cld
idiv
pop
mov
rclb
xor
faddp
repz
cmc
push
or
dec
jg
dec
out
dec
jno
enter
or
pop
and
data16
xchg
cltd
mov
idiv
mov
mov
mov
jb
test
fmuls
xor
push
outsb
jae
xchg
iret
orl
push
jmp
aaa
jg
out
test
gs
xlat
pop
rcrl
fwait
mov
dec
mov
add
xchg
fcoms
in
je
fstp
int3
sub
fcomip
call
out
cli
mov
ss
loop
andl
jl
lahf
call
loopne
aad
sub
hlt
ds
mull
movsb
jl
cmp
pushf
std
in
fisubs
pushl
jmp
loop
in
test
enter
fistps
mov
xor
test
mov
jp
inc
jnp
mov
mov
lock
cmp
mov
insb
jno
es
sahf
cmp
sbb
jo
adcl
call
xor
pop
cmp
xchg
sbb
pop
push
mov
adc
enter
ficoms
iret
pop
bswap
cmc
mov
pop
sbb
ret
sti
pusha
aas
sbb
hlt
daa
stc
test
sar
inc
loopne
ljmp
jmp
cmovns
jle
mov
sub
jg
xchg
push
fisttps
lds
rcrb
lret
mov
ljmp
push
dec
lods
test
mov
jns
sti
mov
dec
add
xchg
scas
xor
pushl
or
push
xlat
add
cmpsb
fnstsw
call
xor
into
pushf
cltd
jecxz
ud0
jg
and
negb
xor
sti
cmp
jl
push
sub
lret
inc
adc
sti
cmc
das
scas
cli
pop
cmc
js
repz
es
push
cmpsl
mov
adcl
incl
cwtl
and
imul
sub
pop
subb
insb
jp
ljmp
fdivrl
cmpsl
jg
fdivrs
cs
lods
bound
lods
jmp
pusha
in
inc
push
jmp
ljmp
push
lret
clc
out
push
add
out
cmpsl
xor
mov
ljmp
or
call
adc
adc
ficomps
xchg
ss
mov
mov
test
push
addr16
jmp
data16
push
push
mov
cwtl
pushf
ror
bound
pushf
test
sub
iret
in
jb
in
ljmp
mov
mov
push
xchg
outsl
mov
mov
pop
add
ja
fsubrs
into
rcr
fidivrs
lds
decl
bound
shrb
pop
lods
testb
filds
ss
pop
mov
cld
testb
add
xorl
movsl
cmp
push
inc
jmp
in
adc
or
mov
dec
enter
repz
dec
sub
sub
xor
fldl
cmp
and
add
push
xor
outsb
rorl
inc
clc
mov
mov
push
clc
sbb
mov
cmp
xchg
loopne
pop
cli
pop
cmp
call
dec
and
jl
mov
das
loop
mov
push
iret
ret
mov
push
mov
xchg
movsl
sar
call
shr
lods
pop
inc
les
adc
cmpsl
jbe
mov
or
fimull
xchg
lods
subb
mov
jl
cmc
in
sub
dec
mov
mov
cmp
pushl
mov
fmuls
mov
iret
mov
sbb
push
jg
xor
jecxz
nop
inc
mov
fistps
cltd
iret
scas
into
cmpb
jnp
ljmp
jne,pn
push
pop
iret
insl
mov
lock
mov
ljmp
dec
sbb
mov
ja
rorl
cs
mov
xchg
hlt
lock
mov
pop
imul
cld
sub
sub
inc
mov
adc
adc
mov
mov
ret
test
ja
mov
jmp
jmp
pop
mov
lret
push
jle
xor
sbb
fistpll
addl
xchg
fwait
lea
inc
and
lea
cld
call
xor
aam
xor
jns
imul
mov
std
mov
mov
sub
clc
push
int3
push
fmul
mov
push
xor
int3
and
mov
pusha
cmpsl
repz
ret
xor
bound
xchg
lret
and
ss
std
mov
es
js
pop
fdivs
loop
mov
stc
roll
decl
mov
lret
inc
mov
jnp
arpl
sti
mov
cltd
sub
decl
in
outsb
sbbl
leave
out
sub
jmp
dec
aaa
movl
lcall
mov
sbb
xchg
ja
sub
int3
add
inc
sbb
jmp
mov
popf
and
sbbl
andb
push
sub
push
ret
test
cmc
or
shrl
test
cmp
ljmp
push
loopne
decl
dec
and
xchg
negb
add
fcomp
incl
out
add
dec
sbb
in
es
lea
and
in
fs
icebp
sub
jns
pushf
jb
mov
insl
incl
sub
xchg
cmc
sbb
fstps
cmp
jle
rclb
jle
push
mov
sti
pushl
lret
jp
adc
mov
cltd
push
jg
test
pop
mov
mov
ljmp
sub
jae
icebp
or
or
mov
pushl
aad
pop
cmp
mov
mov
lcall
dec
std
out
std
into
mov
sahf
call
stos
jo
jl
or
mov
xchg
fsubrl
ja
lds
repz
lods
faddl
ljmp
mov
mov
sbb
stc
ss
movsl
adc
out
call
sti
xchg
sbb
cltd
mov
adc
push
cmpl
insl
loop
or
lahf
push
sub
jg
sub
test
movsl
movsl
ret
sub
les
jbe
sub
sbb
push
lahf
adcl
pop
add
imul
and
jns
jle
mov
or
insb
cmp
cmp
aad
addr16
xchg
push
dec
push
es
into
sub
data16
mov
jle
xchg
or
test
in
jbe
add
push
daa
outsl
fs
das
push
leave
mov
outsb
test
enter
icebp
dec
popf
movsb
mov
fsts
jge
fwait
call
mov
pop
sti
push
cmp
mov
jnp
pop
std
inc
movsb
out
bound
or
cmp
outsl
jmp
imul
flds
in
aad
sahf
int
pop
jnp
or
lds
out
mov
decl
xchg
popa
leave
scas
les
mov
pop
enter
divb
push
pop
cld
cld
rolb
lods
push
pop
or
push
pop
sahf
or
push
mov
popf
out
cmp
inc
ror
loope
mov
or
adc
mov
jo
mov
pop
adc
cmp
aaa
mov
push
aaa
das
mov
pop
popa
jmp
cmp
push
insl
mov
out
orb
int
sub
fnstsw
sbb
sbb
xchg
fs
adc
filds
mov
add
out
lret
push
out
clc
lcall
jmp
inc
pop
adc
movsl
mov
mov
and
and
ljmp
mov
call
lods
push
dec
inc
inc
shll
bound
incl
cs
les
sub
enter
lods
js
aaa
call
cwtl
fimull
push
lahf
fldcw
sbb
add
hlt
add
repnz
jmp
push
dec
aaa
arpl
imul
mov
push
movsb
xchg
loopne
dec
mov
lahf
or
push
dec
mov
xchg
movsl
fisubl
daa
mov
ret
popa
insb
movsb
decl
imul
repz
sub
loop
or
push
addr16
iret
cwtl
xor
cmpsl
scas
call
movsl
adc
sbb
int3
arpl
dec
pop
cmp
addl
jmp
and
loope
call
lods
pop
insb
in
mov
imul
push
lret
fisttpll
imul
jecxz
mov
push
or
jo
outsb
fdiv
orl
jne
adc
int
cmp
incl
loop
fwait
dec
jnp
cld
leave
pop
or
xor
lcall
xor
decl
mov
add
jne
xor
ja
jge
inc
cmpsb
mov
push
or
ffreep
xchg
mov
push
pop
cmp
push
subb
loope
xor
mov
or
xor
or
dec
out
sbb
jo
mov
stos
movsb
mov
mov
ja
push
cmp
push
xchg
shll
pop
inc
cmp
rorb
ja
pop
aam
fcmovu
sbb
iret
push
mov
push
call
mov
jmp
jl
out
shrb
add
icebp
scas
push
cmp
cwtl
leave
push
inc
les
out
dec
mov
dec
inc
rcr
test
jo
pop
dec
jle
dec
and
sbb
vpshufd
inc
ss
jg
pushl
mov
inc
jns
ret
enter
push
clc
arpl
add
enter
aaa
mov
cmp
pop
or
icebp
iret
enter
rolb
jbe
cmp
xor
lea
lea
seto
jb
jnp
jo
sbb
sbb
pop
cmpsb
sbb
pusha
ds
jmp
push
or
nop
outsl
clc
mov
shlb
lret
xchg
decl
mov
shrb
cmp
mov
mov
xchg
jno
inc
jecxz
js
ret
jp
movsl
mov
test
ret
lret
adc
ljmp
jnp
xor
push
shr
std
cmp
jecxz
dec
gs
fsubs
aaa
pop
push
dec
xchg
adcb
decl
rcrl
cltd
std
imul
aaa
jns
dec
jp
dec
arpl
cmp
cwtl
ficomps
frstor
addr16
inc
xchg
movsl
lea
in
cmpsb
push
stos
call
into
ljmp
pop
jge
fidivl
cmp
clc
xor
lcall
call
or
inc
mov
jae
jns
push
fisubl
push
pop
xchg
fisubs
jmp
stos
sbb
xchg
pushf
lds
mov
xchg
add
in
push
roll
lcall
in
sub
fmuls
dec
sarb
xchg
incl
stc
mov
outsb
call
cmpb
mov
pushf
cmp
aam
push
in
cli
inc
or
add
out
daa
iret
sahf
fiadds
repnz
xchg
lcall
lock
bswap
insl
xor
int
cmpsl
lcall
and
ja
or
call
fsubl
cmpsl
pop
cmpsl
push
mov
xor
shll
test
push
popa
das
imul
test
decl
test
mov
mov
sub
lret
icebp
dec
xlat
push
mov
aad
mov
repnz
insl
jno
xchg
add
shll
mov
dec
xchg
push
add
sbb
cltd
mov
insb
and
aas
daa
int
or
mov
xor
das
clc
call
xchg
in
mov
lods
push
fidivl
mov
xchg
push
push
lcall
call
sbb
adc
out
cmp
and
xor
push
sub
loop
cmp
xchg
adc
add
xchg
xchg
scas
sub
ret
sbb
mov
stos
fmul
lock
sahf
pop
cmpsb
mov
xlat
fld
jp
cmp
mov
inc
ret
js
mov
aam
mov
je
mov
adc
jmp
imul
xchg
xor
inc
pop
push
sub
out
xlat
aaa
cmp
lock
movsb
fs
std
lock
pop
in
int
and
addb
decl
add
aad
dec
jle
shr
mov
pop
rcll
pop
mov
fsubl
ljmp
call
or
daa
je
xchg
ret
sub
in
dec
mov
add
dec
or
cli
loope
cmc
loopne
jb
mov
sbb
pop
lcall
in
lahf
cmp
fidivl
jmp
inc
dec
jge
gs
push
dec
jp
jp
mov
scas
jae
jb
rolb
mov
lcall
xor
xor
xchg
pop
xchg
aad
aas
cmp
xchg
lds
dec
lahf
fs
ljmp
cli
cmp
addr16
push
call
jge
dec
mov
pop
cld
call
adc
in
or
sbb
ja
mov
cmpsl
cli
outsl
inc
sbb
enter
call
sbb
test
shl
mov
sub
xor
jl
pusha
stos
sub
fwait
bound
xchg
cmp
les
fdivr
add
sti
ljmp
dec
or
add
push
mov
aas
rclb
pop
push
dec
stos
std
cli
das
sar
gs
push
xor
out
cmp
cmp
jp
dec
sub
lock
movsl
cmp
out
sub
jnp
jl
jecxz
lret
data16
stos
xor
xchg
std
xor
sti
fsubrs
sti
inc
or
std
xor
shlb
fcos
lcall
xlat
fs
sbb
ficompl
stos
pop
xchg
data16
push
cmpsb
lods
shr
test
ljmp
mov
pop
repz
jp
mov
shll
fists
mov
mov
fmull
test
cmp
stos
inc
sub
mov
pop
adc
out
jno
pop
mov
cltd
xor
xchg
clc
outsl
sub
aaa
jb
mov
lcall
and
dec
pushl
loopne
jg
mov
or
xor
jns
mov
cmc
xchg
jmp
dec
xchg
idiv
lcall
dec
cmp
fwait
jae
xlat
sbb
push
data16
inc
rolb
pop
shrl
jmp
push
lahf
jnp
lea
or
push
fstps
scas
lret
outsb
inc
push
sar
mov
arpl
mov
pop
dec
and
cmc
test
ret
int3
and
decl
mov
xchg
and
es
adc
pop
dec
and
lcall
and
pop
test
xchg
dec
movsl
dec
mov
sbb
sbb
cmpsb
test
dec
lahf
shll
add
dec
insb
dec
jmp
loope
incl
cmpsb
push
rorl
imul
call
sbb
daa
mov
adc
call
divb
into
insl
xchg
or
orb
fld
lock
cmp
pop
int3
shrl
add
jg
les
aaa
hlt
xor
mov
lcall
rol
mov
test
test
mov
push
pop
or
int
or
sub
adc
std
lcall
test
push
pop
jno
loope
xchg
jl
out
lcall
rorb
adc
sbb
adc
arpl
aaa
mov
xchg
sub
std
cmp
xchg
out
mov
cwtl
lock
hlt
cmp
cmp
adc
cld
movsb
in
fwait
mov
test
lods
adc
jg
call
push
pop
inc
cli
inc
push
xchg
test
fidivrs
sub
add
push
dec
cs
test
adc
call
mov
pusha
adcb
mov
push
in
mov
mov
lcall
mov
cmp
mov
sbb
in
or
outsl
push
or
push
sub
pop
hlt
pushl
and
sub
movsl
addr16
mov
jg
into
enter
mov
and
jg
cs
out
je
inc
push
fucomi
movsb
dec
sbb
and
les
in
push
shl
pusha
mov
and
mov
inc
ror
lea
addr16
or
loopne
push
xor
pusha
cmpsl
bound
jae
mov
jg
push
push
pop
aam
sub
jge
movsb
lret
testb
mov
mov
cmp
pop
inc
adc
test
pop
pop
dec
repz
leave
mov
lcall
aaa
and
out
stc
push
mov
adc
add
mov
mov
jnp
insb
incl
testl
orl
inc
cmpsb
outsb
cltd
popa
iret
sarl
in
gs
pop
notb
adc
add
sahf
sahf
mov
and
jg
mov
in
push
orb
call
out
push
adc
in
dec
loope
jg
outsl
cli
ja
push
js
out
ret
mov
dec
pop
pop
movsb
insb
add
jnp
out
cld
xor
cmc
fistl
jecxz
cmc
iret
sbb
lods
adc
cmp
jmp
xchg
push
mov
lret
es
test
pop
fcomip
dec
sub
mov
inc
or
mov
mov
mov
jmp
add
dec
dec
ljmp
pop
dec
popf
or
test
subl
adc
jmp
mov
push
cld
fldt
out
pop
popa
xchg
lahf
adc
andl
dec
cwtl
mov
incb
std
mov
leave
push
cmp
inc
lock
cmp
jbe
shll
hlt
out
loope
ljmp
add
or
outsb
add
dec
stc
fwait
mov
push
xor
out
lret
movsl
add
stos
jo
pop
inc
pop
dec
jmp
sarl
fwait
or
loope
mov
jb
out
lds
push
test
jmp
sbb
sbb
lcall
dec
rolb
aam
push
and
nop
les
push
mov
sbb
adc
call
and
sbb
sbb
jg
adc
inc
lods
loop
outsb
jnp
push
mov
mov
push
and
stos
js
jle
loope
movswl
xchg
dec
popa
incl
jmp
insb
push
lods
mov
nop
bound
pusha
cmp
xchg
repz
les
dec
int3
imul
subb
ficoms
insl
mov
popa
rcrl
dec
sub
xchg
xchg
sarb
mov
outsb
jno
jge
enter
ljmp
mov
inc
scas
inc
push
into
test
flds
lcall
nop
add
jb
add
mov
inc
pusha
pop
in
ss
or
clc
cmp
fadds
jmp
pop
popa
push
shr
pop
inc
ja
sbb
cs
mov
mov
movsb
clc
ljmp
cli
adc
cld
inc
adc
cmp
fnstcw
mov
cli
ljmp
mov
pop
orl
cs
in
adc
ljmp
test
jb
push
xchg
inc
fnsave
xchg
lcall
jge
incl
push
sbb
inc
xchg
arpl
sarl
data16
mov
pop
pop
lcall
jmp
xchg
sahf
mov
fwait
movsl
inc
lods
sub
jp
lret
mov
mov
fs
rol
into
push
clc
jmp
testl
adc
adc
mov
jns
fs
push
mov
jae
pushf
gs
sbb
pushl
pop
stc
aad
aaa
inc
inc
push
cmp
cltd
jle
cmpsb
cmp
dec
cmc
cmp
mov
mov
or
dec
inc
cmp
mov
decl
mov
sar
sbb
popa
sub
outsl
jb
int3
out
push
arpl
mov
inc
mov
bound
test
jp
shll
cld
and
adc
or
lods
mov
sbb
mov
scas
push
and
out
lret
push
inc
stos
es
aam
pop
into
mov
rcrl
clc
cmp
adc
xchg
cmp
inc
popa
in
add
push
imul
fidivs
movsb
mov
cmp
subl
jmp
pushl
mov
add
push
adc
fdivs
mov
sub
cmpsl
mull
mov
dec
test
icebp
xchg
pusha
movsb
es
incl
stc
jle
sahf
jecxz
movsb
mov
in
mov
sti
jg
cmp
outsb
inc
pushl
stos
movb
enter
hlt
mov
gs
hlt
imul
jecxz
and
adc
out
cld
mov
or
call
scas
arpl
cmp
rclb
arpl
adc
push
add
pop
aaa
and
mov
jo
jbe
loopne
out
ljmp
fnsave
xor
pop
add
stos
fdivr
out
imul
or
rcll
adc
pop
and
xor
cmp
xchg
cmp
jmp
cmc
ss
mov
je
out
push
cltd
adc
cmp
rclb
sbb
loop
xchg
jno
rol
add
decl
fwait
and
xchg
mov
imul
int3
stos
fcoms
stc
lcall
jg
push
cmp
jbe
loop
lds
lds
fcomip
daa
mov
fptan
add
dec
daa
jns
lret
inc
pop
push
fcomps
lcall
sub
lock
pop
xchg
dec
xor
scas
xchg
in
dec
shrb
and
lds
pushl
lahf
cmp
std
sub
repz
add
jg
fcoms
lods
mov
je
mov
push
cmpsl
ljmp
clc
pushl
push
fistpll
add
call
mov
cli
fnstenv
aam
aaa
cmpsl
jmp
cmpsb
jnp
incl
in
cwtl
stos
xchg
fsubrs
imul
push
mov
pop
mov
xchg
decl
test
push
push
test
cs
add
fidivrs
scas
push
mov
es
cmp
jmp
imul
xorl
or
xchg
stos
and
cmp
cld
inc
cmpb
insl
fs
jg
jge
cld
clc
xor
mov
ljmp
adc
jle
movsl
sbb
stos
fsubr
xlat
dec
dec
fdiv
push
das
sar
lods
pop
sbb
add
push
imul
and
xor
out
incl
fcmove
mull
fsub
xchg
lret
pop
notl
faddp
and
mov
gs
test
sub
jecxz
ret
filds
sarb
fwait
jl
jl
xor
imul
lcall
adc
movsb
inc
addr16
cld
scas
fldenv
mov
lcall
xor
mov
mov
cmp
aad
aad
mov
cmp
cmp
adc
ljmp
push
clc
sbb
aad
cmp
jecxz
jb
int3
mov
jo
cmc
fldcw
cli
jg
je
call
mov
sbb
cwtl
test
mov
lcall
sbb
int
mov
mov
lret
push
xchg
ds
dec
scas
aaa
mov
out
rcr
das
rcrl
mov
xchg
stos
testl
mov
insl
cmpsl
and
call
incl
bound
push
into
pop
daa
lret
scas
bound
insb
mov
cmp
fidivl
cmpsl
fiadds
loope
push
sbb
mov
sub
fdivrp
lods
sbbb
lcall
pop
inc
xor
mov
pushf
sub
push
xor
mov
in
pushl
fsubl
cmpsl
sbb
cmpsl
pushf
popa
pop
bt
or
daa
or
push
push
call
cld
lea
out
xchg
mov
adc
mov
sbb
mov
shr
inc
std
cld
incl
out
les
outsb
cmp
es
outsl
and
stos
cmp
pushl
push
mov
mov
fmuls
inc
mov
sbb
test
shll
cmp
in
xchg
cmp
arpl
or
rcr
repz
outsb
outsb
lods
ret
faddl
incl
mov
sbb
and
push
inc
mov
out
cs
dec
es
lods
pop
cltd
into
push
sti
test
pop
mov
sub
jmp
fcomip
mov
insl
push
mov
movsb
sbb
frstor
push
sub
dec
ret
shll
mov
test
jecxz
xor
lret
movsl
leave
mov
js
mov
jbe
cmp
xchg
iret
mov
xchg
jns
stos
call
jge
je
lock
xor
xchg
int3
faddl
pop
movsb
or
and
pushf
insl
aaa
sahf
adc
test
clc
data16
ljmp
jp
sti
add
sbb
nop
sbb
ret
dec
daa
int3
cmp
xchg
int
pushl
push
test
repz
mov
dec
sub
divl
push
aaa
jg
jnp
lcall
push
push
outsl
ret
jmp
sub
xchg
loope
leave
xchg
and
clc
ljmp
push
test
cmc
outsl
icebp
push
inc
dec
or
push
notl
jl
js
sahf
pop
mov
lcall
pop
xchg
mov
and
sarb
xchg
xchg
jecxz
inc
ret
pop
rcr
idiv
jmp
add
cmp
insl
mov
lock
cmc
scas
stos
leave
xchg
mov
sar
ljmp
addr16
add
or
push
repz
push
or
inc
sahf
loop
adc
inc
cmpsb
loopne
push
mov
push
loopne
out
inc
enter
pop
inc
and
fldcw
gs
jbe
cltd
xor
mov
dec
cltd
cltd
sbb
mov
sub
icebp
addr16
lds
aam
mov
add
decl
lahf
adc
sti
and
cmc
or
mov
xor
and
inc
jns
test
punpckldq
mov
daa
and
dec
add
div
popa
cld
dec
insl
pop
in
rol
bound
pushl
lds
or
cmp
pop
dec
jnp
stos
xor
push
mov
stos
mov
call
mov
add
pop
test
jl
gs
cltd
jnp
jmp
fisttpl
jg
xchg
sti
add
xchg
imulb
movsl
lock
jg
dec
mov
call
cltd
call
xor
loope
adc
xor
mov
sub
mov
andb
negb
cmc
aam
sub
loop
mov
xor
mov
in
or
out
popf
shr
sub
incl
scas
mov
inc
out
inc
pop
push
shlb
fcmovnbe
je
pop
stos
movsl
test
push
xor
rorb
movsl
xchg
adc
mov
pushf
mov
out
je
mov
xchg
mov
sbb
fsubs
or
inc
mov
idivb
cs
mov
lcall
mov
dec
ja
xor
inc
adc
sbb
fnsave
mov
mov
js
and
or
and
lock
incl
fisttps
mov
inc
jne
and
sub
mov
mov
sbb
aas
sub
jnp
mov
lods
rcrb
xchg
rorb
xchg
scas
pushf
pushl
cmp
dec
push
jno
pop
gs
add
mov
cmp
fidivrs
incl
testl
arpl
popa
or
pushl
jl
add
sub
out
or
push
sidtl
decl
jle
jle
test
das
mov
xlat
jge
jg
mov
cmpsl
in
movsb
push
pop
fdivs
ljmp
lahf
sub
mov
or
fisubs
xlat
nop
or
inc
int
incl
outsl
jbe
fnstsw
andl
pop
loope
mov
das
enter
cmc
cmp
inc
rclb
and
xor
dec
mov
mov
pushl
andb
icebp
repz
jne
xchg
mov
jnp
aam
daa
mov
pop
loopne
dec
add
jmp
leave
sub
xor
cmc
xor
mov
cwtl
in
cmp
lock
push
sbb
dec
andb
sbb
push
push
fwait
push
stos
ror
insl
lret
aad
fadds
inc
xor
mov
clc
dec
in
in
in
mov
in
rclb
xchg
inc
daa
dec
mov
sbb
push
or
inc
ss
repz
adc
cmpl
pushl
inc
and
sbb
bound
lock
push
pop
cmp
jbe
ljmp
add
sub
ret
cmpsl
dec
add
ret
movsb
jmp
pop
out
push
loop
ja
cmp
pop
lock
lds
mov
je
insl
mov
test
lcall
adc
movsb
sti
mov
mov
or
roll
pop
lods
incl
add
cmc
ret
mov
lods
and
mov
sub
fsubs
jae
in
ljmp
jns
jb
pop
and
test
pusha
and
mov
aam
cmp
ret
jecxz
add
bound
mov
xor
add
cmp
and
lcall
ss
pop
sub
or
lcall
xlat
stc
stos
int
mov
mov
ret
sub
pop
std
stos
jg
jecxz
andb
fcomip
push
sbb
jmp
pop
sti
push
clc
cmpsl
sarb
xchg
jb
mov
dec
call
lahf
jg
push
loopne
mov
repnz
fcompl
sub
dec
leave
sub
daa
xor
push
test
xor
mov
push
or
jl
pushf
jae
xchg
fsubrs
push
ljmp
outsb
xchg
fdivs
jecxz
jno
subl
jmp
push
outsl
and
int3
ja
fcmovb
or
es
pop
jnp
jns
mov
js
xor
mov
jmp
lods
bound
mov
js
call
jg
sub
cmp
jbe
stc
adc
mov
mov
cmp
mov
xor
fwait
out
test
push
ret
add
push
mov
sub
lods
in
adc
push
fs
lcall
sub
dec
loope
xor
jns
aaa
cmp
in
test
lcall
and
and
add
repnz
in
shl
pop
clc
sbb
mov
shl
stc
jle
incl
cld
cmp
dec
jbe,pn
xchg
xchg
daa
pop
out
mov
mov
out
lock
jns
jnp
or
cmp
je
add
ficoms
push
faddl
push
incl
hlt
insb
in
adc
mov
dec
jecxz
or
aad
fdivrp
xchg
loope
je
cmp
or
call
shl
ss
pop
je
push
call
shrb
xchg
cmp
ljmp
pop
lock
xchg
jg
mov
xor
sti
dec
or
pop
repnz
incl
mov
mov
call
cmp
popf
int3
sahf
out
mov
testl
out
push
arpl
mul
mov
int
xchg
iret
mov
cld
gs
fidivs
lret
loopne
das
incl
insb
enter
insl
xor
mov
test
mov
push
pop
mov
addr16
sub
lret
fs
std
incl
jmp
inc
or
jle
sti
cmp
dec
bnd
ljmp
xchg
shrl
ret
ds
jmp
pop
fisubrs
pop
cli
mov
mov
ljmp
mov
mov
and
std
ret
das
and
in
mov
adc
daa
xlat
arpl
and
xchg
div
outsl
arpl
and
lcall
shrb
sbb
pop
mov
xor
lcall
lcall
mov
retw
push
leave
mov
push
cld
call
lret
jmp
cmp
adc
out
fcmovne
and
push
enter
jl
dec
clc
cs
fldt
fnstsw
xchg
lods
data16
aas
fs
push
lock
dec
xchg
shrl
fistpl
into
jo
pop
ds
cmp
push
jb
lea
outsl
mov
push
ret
cmp
incl
mov
pushf
inc
insb
add
repnz
fsubrl
into
lret
dec
mov
nop
stos
je
ljmp
cwtl
sbb
inc
subb
outsb
sub
movsl
mov
jne
push
xor
call
popa
sub
push
fwait
icebp
or
out
int3
int
xchg
push
mov
mov
mov
ljmp
mov
and
daa
mov
add
mov
int3
sarb
fimuls
cmp
add
lcall
fadd
or
or
subb
pop
fadd
fisttpl
loop
movsb
sub
jp
dec
pop
or
enter
xchg
imul
cmp
neg
leave
sarl
dec
divb
adc
fwait
in
call
jns
pop
sbb
push
movsb
lock
or
adc
or
cld
movsb
mov
lods
mov
shl
ljmp
jp
in
cld
test
ret
lock
sbbl
sbb
andb
sub
cmp
fisttpl
andl
sbb
cmp
dec
add
inc
loope
je
adc
in
outsb
mov
icebp
pop
out
inc
insb
in
mov
or
call
daa
outsl
gs
aaa
std
xor
int
out
lcall
push
popa
arpl
sub
lcall
movsl
jb
jg
push
lods
adc
mov
lahf
decl
inc
jbe
inc
dec
mov
xchg
ljmp
popf
mov
and
jmp
mov
sbb
sub
mov
lcall
mov
cmp
mov
in
push
pop
push
call
clc
insl
sti
mov
call
nop
jo
call
jge
inc
mov
add
jbe
fcomip
cld
xchg
jl
cmp
movsb
push
insl
and
adc
add
jnp
in
jmp
mov
mov
bound
insb
addl
mov
jmp
cltd
in
xchg
adc
popf
insb
in
add
sbb
jg
dec
ss
cmpsb
iret
add
mov
pushf
fsubr
jle
test
mov
stos
jl
dec
jb
sahf
std
xor
es
mov
test
incl
cmp
dec
popa
cmc
inc
xor
mov
je
nop
int
ljmp
xchg
or
adc
jmp
add
sbb
adc
xchg
dec
loop
cmpb
xchg
clc
dec
inc
dec
stos
cmp
lcall
gs
cmp
clc
sahf
cmp
mov
sbb
lahf
xlat
stos
inc
enter
mov
lcall
fistpl
mov
jnp
pop
jg
fcomps
mov
cmp
call
lea
loopne
addl
or
pusha
add
inc
dec
mull
dec
incl
cmpsb
ss
rcrl
jo
rorl
mov
test
lods
mov
sub
inc
iret
dec
mov
movsl
lock
outsb
adc
sbb
imul
imul
dec
fwait
incl
cld
rcr
jecxz
and
jbe
or
dec
out
movsl
sub
fisttps
pop
push
mov
xorb
push
inc
mov
mov
lcall
push
out
sub
mov
sbb
sub
call
outsl
inc
ror
fmul
out
mov
sbb
jno
inc
testl
push
jmp
jmp
int
fwait
out
or
mov
jl
add
out
xor
mov
clc
mov
dec
push
jae
sti
mov
pushf
cmpsl
jo
imul
ljmp
data16
lret
or
inc
jae
test
shlb
sar
cltd
push
in
push
nop
dec
cmp
inc
ds
shll
push
mov
das
mov
test
adc
add
jo
jle
push
dec
fwait
xlat
icebp
jb
pop
incl
and
mov
aas
pushf
mov
jnp
and
jge
out
int
repz
mov
mov
cltd
and
in
enter
mov
iret
xchg
shrb
mov
imul
push
out
stos
pop
pop
xor
pop
fnsave
stc
pop
add
cmp
loop
inc
loop
sbb
popa
xchg
hlt
nop
dec
dec
iret
loopne
test
sub
pop
dec
aad
mov
addb
fistpl
mov
mov
xor
pop
push
pushl
loop
cmp
fs
mov
lahf
and
clc
fimuls
xor
insb
xor
ljmp
xchg
jle
aas
mov
add
ljmp
push
xorb
push
xchg
xlat
outsl
mulb
mov
cmp
idivb
mov
bound
push
xchg
cwtl
ljmp
pop
xchg
push
mov
loop
push
sbb
sbb
sbb
sbb
lcall
mov
andl
adcl
aaa
mov
xchg
push
lahf
test
loopne
mov
mov
sub
mov
and
lcall
fwait
ja
mov
pop
mov
ret
sti
fwait
mov
dec
mov
mov
mov
clc
mov
jg
inc
xchg
adc
cmpsb
jle
pop
push
sbb
mov
and
sub
inc
xor
repz
mov
decl
in
dec
lret
cmp
xor
jg
jno
xor
test
ds
dec
xor
inc
flds
insb
dec
lods
jne
aas
orl
fwait
repz
pop
xchg
jae
lcall
call
xchg
or
and
push
jp
and
xchg
ret
xchg
dec
in
dec
mov
jb
jbe
aas
negl
test
std
cmp
cltd
cld
in
lods
inc
and
mov
sbb
dec
mov
in
stos
push
icebp
js
adc
lahf
dec
fs
push
push
or
int3
cwtl
psubw
ss
inc
in
out
out
decb
or
xor
lcall
sbb
bound
jo
addb
mov
mov
lcall
sub
call
outsl
xor
adc
or
xchg
xchg
repz
xchg
or
dec
add
incl
sub
outsb
out
sub
inc
icebp
jl
cmpl
jnp
ret
mov
pusha
xor
mov
xchg
cli
int
cltd
fwait
in
sarl
hlt
sbb
pop
pop
sub
push
je
lcall
hlt
push
shll
pop
sbb
ret
lock
into
push
das
scas
cs
aad
fistps
and
into
mov
add
mov
movsb
cmp
orb
outsb
and
in
mov
and
xchg
add
mov
clc
decl
or
and
push
cmp
push
push
mov
ja
mov
out
mov
in
filds
aam
orl
push
fld
add
sti
movsb
mov
mov
insb
pusha
cmpl
adc
pop
out
aad
cs
push
int
or
repz
xchg
pop
pop
loopne
jne
xlat
mov
or
pop
ljmp
or
jo
rorb
jno
inc
ja
push
in
sti
xchg
jg
pop
adc
add
test
or
ja
cltd
divl
cs
push
out
mov
int3
sub
movsl
inc
push
lcall
add
call
push
add
sar
push
mov
xlat
test
or
xchg
xor
out
cli
cmp
cli
cmp
dec
faddl
and
pop
mov
inc
pop
addb
imul
pushl
out
mov
mov
in
sub
test
aaa
push
mov
js
pushl
lret
inc
popa
lods
imul
je
jb
push
inc
xor
jns
mov
popa
movd
test
imulb
arpl
xor
pop
in
cmp
and
repz
cmp
js
ljmp
add
into
es
xchg
jle
pop
outsb
dec
in
mov
pop
incl
mov
sbb
aaa
xchg
mov
pop
ret
ljmp
clc
cwtl
mov
int3
lcall
mov
mov
inc
sbb
icebp
dec
out
cmp
push
push
popa
mov
das
loop
sbb
stos
dec
ljmp
cli
bound
xchg
in
or
mov
fsubs
inc
movsb
push
or
dec
push
jb
cmp
xor
or
sbb
repz
cwtl
daa
dec
aam
addr16
sbb
or
xchg
mov
in
das
shll
loopne
push
sahf
push
std
call
sub
lods
lods
jmp
ja
cli
aas
lcall
pop
dec
jnp
add
sahf
xor
call
push
andl
xor
in
jmp
mov
pushl
pop
sbb
inc
or
aad
xor
nop
add
push
fisttps
stc
mov
nop
jmp
push
cld
roll
sarb
cmp
push
decl
xchg
nop
jle
ja
jnp
push
push
int
lahf
jl
cwtl
push
insb
inc
mov
sbb
dec
sbb
pushl
lods
clc
or
jo
ds
pop
or
std
and
mov
cwtl
testb
jge
incl
cmp
pusha
imul
stc
sub
inc
cld
mov
push
mov
test
lret
push
or
or
inc
xchg
mov
daa
clc
test
int
fxam
ss
push
shlb
push
jnp
xlat
mov
cmp
jg
cmc
cmp
sbb
cmp
sub
jecxz
shll
add
pushl
jle
loopne
adc
arpl
cmp
cli
lcall
in
push
mov
inc
xchg
test
mov
movsl
dec
ss
ljmp
adc
xchg
hlt
pop
cld
mov
xchg
lods
pop
mov
dec
outsb
or
out
popa
fcmovb
and
lcall
mov
fnstsw
mov
hlt
inc
ja
push
mov
sbb
pusha
scas
xlat
or
icebp
xor
incl
xorl
xchg
sub
les
shl
fwait
dec
in
push
out
aaa
mov
iret
imulb
mov
int3
lret
fnstcw
push
pop
rcl
sbb
call
std
and
or
sub
jle
fisubrs
inc
out
lret
lret
jmp
mov
xor
pop
test
xor
std
mov
gs
push
mov
mov
xor
or
xor
adc
dec
retw
shll
dec
xchg
lock
ret
call
jo
hlt
ja
mov
icebp
clc
mov
dec
xchg
push
sub
in
and
stos
ljmp
jge
cmpsb
mov
mov
ss
mov
sbb
jmp
pushl
mov
mul
stos
loopne
out
rol
nop
mov
xchg
pop
pop
adc
lcall
pop
jbe
jg
xchg
pop
jo
mov
mov
pushl
divb
lahf
push
aas
in
daa
cltd
push
push
vpaddsb
mov
mov
insl
rcl
mov
dec
out
incl
mov
jo
dec
scas
int
icebp
lods
test
sbb
int3
insl
loopne
cmp
les
sar
sbb
and
clc
sbb
or
call
mov
mov
imul
inc
imul
sbb
movb
add
call
push
jns
sbb
mov
dec
outsl
mov
imul
lea
mov
decl
lock
ds
pushf
sbb
je
dec
sahf
jecxz
aad
pop
lret
lcall
push
or
add
jp
aaa
cld
pop
jecxz
pop
cmpl
out
sti
jmp
mov
int3
sete
or
xchg
xchg
and
cmp
repz
fcmovnbe
sub
sahf
ret
rcrb
in
shlb
or
loop
es
or
icebp
jmp
fs
xchg
or
jb
pusha
fisttps
sub
push
jae
lahf
jge
call
pop
in
sar
fdivrl
jecxz
jl
pushf
imul
das
jp
inc
ljmp
jl
fimull
pop
cltd
lahf
adc
hlt
pop
cld
push
cld
and
mov
insb
lahf
mov
arpl
inc
adc
aam
sbb
inc
add
test
cmp
das
pop
and
loopne
movsb
pop
shlb
add
push
xchg
push
pop
cmc
mov
or
jle
or
pop
sbb
rsqrtps
lcall
nop
rol
fcoml
and
cld
ljmp
test
rcll
sti
jmp
lds
dec
js
pop
sbb
fdivs
jmp
js
xor
inc
mov
push
iret
imul
daa
push
inc
loop
sbb
jmp
dec
xor
xchg
add
jmp
addb
xor
mov
jbe
scas
adc
sar
incl
repnz
sbb
movb
or
cmpl
sbb
lea
aad
pushl
sub
pop
lret
lds
mov
mov
aam
jl
inc
popl
or
ljmp
dec
ja
mov
ds
clc
dec
daa
cld
inc
loope
jmp
push
repnz
xorl
jo
fnsave
shl
xor
outsb
mov
cmp
mov
jl
out
adc
xor
fisttpl
incl
ss
pushl
fcom
das
shl
sbb
daa
insb
xor
mov
jg
xor
inc
test
repnz
sti
sub
inc
jecxz
hlt
hlt
mov
jmp
lock
or
movsb
adc
cli
or
xor
lea
xchg
xor
pushl
and
push
adc
popa
add
test
add
push
andb
add
add
add
mov
mov
push
pusha
add
leave
add
add
jl
pop
mov
inc
jg
add
and
mov
pavgb
sbbb
push
cld
int
pop
add
pushl
ret
add
shlb
lea
push
add
inc
mov
lock
daa
decl
jecxz
xorl
cmp
xor
insw
adc
daa
cmpb
fdivrl
int3
daa
jo
sub
xlat
decl
sbb
fdivl
adc
int3
arpl
pop
arpl
cmp
sar
cmp
std
adc
sub
pop
out
xor
or
out
push
cltd
sub
std
xor
add
mov
cwtl
jmp
fdivs
add
testb
subw
mov
ja
shlb
push
fdivs
sub
jecxz
sbb
fdivs
push
inc
sub
call
in
or
ljmp
jns
int3
fwait
test
xor
bound
ljmp
cmpb
fisttps
push
das
inc
mov
xchg
or
int
pop
and
xchg
std
mov
scas
cltd
inc
cmpsl
jge
int
xchg
sbb
outsl
inc
shll
notb
inc
cmp
ret
pushl
enter
inc
iret
inc
or
aas
push
or
jl
nop
fnsaves
mov
push
xchg
test
xchg
jbe
rcr
sub
xor
jae
orl
mov
and
pop
lret
cmpsb
loope
outsb
lret
decl
jbe
in
mov
pop
popa
mov
push
mov
addr16
popa
cltd
adcb
add
shlb
sbb
push
jo
mov
pop
int
mov
inc
or
xor
add
ja
daa
aas
mov
cmpsl
adc
xchg
in
ljmp
cs
frstor
sarb
xor
jecxz
dec
jg
jp
shll
decl
lock
cmp
jo
add
add
mov
jmp
jmp
add
push
add
xor
fs
pusha
mov
pop
stc
adc
out
jge
call
jmp
loope
cmp
mov
jl
push
adc
xchg
mov
xchg
cmp
popf
xchg
push
divl
xchg
cwtl
addr16
lahf
popf
sbb
decl
dec
sbb
loope
imul
push
lds
sbb
rol
sbb
lock
popa
stc
mov
jge
sbb
inc
mov
push
int3
jg
or
cmp
inc
push
dec
pop
jbe
pop
call
jl
pop
pop
inc
xchg
jge
mov
cld
ret
inc
cli
inc
cmove
int
in
fcomip
push
imul
mov
xlat
and
cmp
aas
hlt
imul
push
icebp
or
mov
fistps
mov
pop
lret
fsubrs
js
pop
mov
pop
or
jg
mov
pop
xchg
stc
icebp
sub
std
ds
aad
push
fstl
fisubs
mov
fcomip
cmp
xorl
dec
icebp
loop
stc
cmp
add
stc
in
lret
sahf
loop
jae
ds
lcall
sub
add
sub
fwait
lret
data16
pop
pop
sbb
icebp
jp
cmp
pushl
add
int
pop
and
add
shlb
xchg
rclb
jo
ljmp
mov
adc
in
or
out
stos
mov
jg
movsb
imul
sub
repz
imul
fucomip
mov
fcomps
decl
mov
adc
ja
std
fcmovnb
xor
mov
mov
addr16
jae
out
insb
nop
push
rclb
sbbl
jmp
or
xchg
les
inc
ret
mov
test
jnp
arpl
insl
and
sub
add
mov
jmp
mov
pop
dec
leave
sbb
ljmp
mov
fistl
insb
fbld
fistl
mov
test
and
push
cmp
xor
pop
mov
popf
insb
mov
ljmp
and
out
cmc
fldcw
pop
cmc
jmp
fninit
stos
cs
iret
addl
xchg
int3
xchg
or
ljmp
cli
call
int3
shlb
push
add
adc
inc
pop
fiadds
inc
pop
setg
fsubs
cmc
pop
in
push
pop
mov
imul
adc
pop
outsl
sub
inc
cmp
ljmp
lahf
addr16
sti
cli
std
icebp
jecxz
sbb
push
ds
xor
sahf
cltd
jns
sahf
mov
fistl
imul
incl
mov
insb
cmpxchg
imul
jmp
fisttpl
ffree
mov
aam
sbb
leave
idivb
mov
mov
inc
mov
fnstenv
xchg
insl
xchg
push
mov
lret
mov
fnstenv
push
ds
pushl
subl
insl
jecxz
mov
int
sub
divb
lea
dec
outsl
decl
insb
sbb
lcall
dec
shrb
pop
dec
mov
int3
cmp
call
mov
popf
test
insl
xchg
out
imul
test
out
shrb
mov
and
int3
jb
iret
or
cmp
cmpsb
int3
jge
lahf
and
pop
fldcw
xchg
xchg
push
enter
out
add
inc
out
ret
pop
and
cmovp
pop
cmp
lret
push
jmp
jge
loopne
lret
sahf
popa
inc
jo
add
shll
lods
out
ret
or
hlt
sahf
mov
call
lock
jo
out
hlt
popf
into
repz
in
dec
push
sahf
pop
add
stos
cli
xchg
dec
sahf
dec
into
test
icebp
decl
inc
stos
sub
pop
mov
aas
dec
pop
mov
add
push
jge
cld
jp
adc
jns
outsl
call
xor
or
or
mov
mov
fnstenv
shrb
lcall
ret
sbb
push
repz
mov
or
pop
out
sti
and
or
xlat
in
fwait
enter
fisubs
ja
dec
sub
add
lcall
pushf
scas
push
sbb
pop
movb
popf
jg
ficoml
add
aas
pop
pmaxsw
mov
jbe
xor
jno
ljmp
fsubl
or
mov
pop
and
insl
movsb
push
push
mov
inc
decl
xchg
xchg
or
fidivrs
xor
std
push
call
or
loopne
push
mov
sti
call
stos
jmp
mov
mov
jecxz
xlat
push
adc
inc
sbb
cld
cmpb
mov
pop
jl
xchg
push
cltd
or
scas
mov
mov
enter
lods
and
mov
ss
into
xchg
cmp
jp
jno
scas
sbb
mov
repnz
cmp
push
test
inc
into
pop
xor
packsswb
lods
cld
add
pushl
sbb
stos
xchg
rolb
or
jb
in
pop
ljmp
mov
test
jecxz
popa
mov
call
sub
std
jae
lea
cmp
jnp
or
repnz
es
mov
sub
stc
loop
cmp
pop
jp
pop
push
xchg
sub
stos
ljmp
mov
popa
popf
fdivr
call
test
xchg
and
jne
mov
sub
mov
cmp
inc
dec
inc
cmp
sar
lds
jp
adc
or
mov
mov
aaa
pop
adc
jg
decl
loopne
loope
loope
daa
gs
inc
sbb
jl
testl
out
jne
icebp
jge
xor
mov
mov
cmp
jecxz
in
pop
sti
push
les
rcll
fcomip
fst
pop
sbb
jg
ja
clc
out
out
inc
cmp
dec
sub
adc
lcall
negl
jnp
and
addr16
gs
mov
sbb
jmp
cmc
clc
into
inc
or
xchg
or
adc
xchg
jl
mov
pushl
or
std
out
cmp
xor
push
push
mov
jnp
mov
lcall
cmc
adc
xor
xor
daa
divb
cld
mov
jnp
pop
not
aas
inc
ljmp
addb
or
ss
gs
xchg
push
iret
jl
mov
dec
adc
inc
jp
sbb
test
cmp
mov
incl
dec
lret
push
aas
andl
jg
sti
outsl
pop
cmp
bound
lahf
std
aaa
jmp
dec
and
std
fsts
pop
sbb
adc
mov
enter
in
pop
mov
outsb
add
ljmp
jl
and
fcmove
push
ret
ficompl
aad
xor
or
push
adc
or
lods
movsl
arpl
and
fmul
mov
jge
xchg
scas
int
jmp
notb
xchg
incl
jmp
push
dec
fdivrs
dec
mov
nop
and
pop
xchg
xchg
rolb
add
add
lcall
jns
pop
xor
rclw
or
push
cmpsl
out
mov
dec
fists
mov
jmp
aad
and
dec
lods
lods
dec
cmp
fdecstp
lret
mov
xor
dec
inc
movsb
ljmp
adc
fwait
pop
mov
xchg
adc
inc
inc
cwtl
dec
jae
mov
cmp
mov
incl
cli
sbb
pop
es
mov
mov
pop
mov
aad
decl
lea
bound
lods
hlt
repz
mov
mov
mov
mov
repz
dec
pop
jmp
stos
inc
cmp
pushl
test
cmp
cmp
aas
push
sarl
aaa
jle
lcall
pop
mov
inc
mov
fstps
mov
mov
mov
jecxz
je
ljmp
rcrb
hlt
inc
mov
inc
movsb
xor
jmp
dec
popa
jne
pushl
inc
int
or
pop
int
and
mov
fidivs
js
sti
ret
call
test
out
je
xor
aaa
jmp
stc
scas
fsubs
lcall
lods
shlb
sub
jmp
in
jno
dec
sahf
or
push
and
cs
repz
lret
cmp
sbb
fisubl
and
cmp
nop
pop
add
fiaddl
push
rolb
ljmp
push
jmp
out
mov
call
and
rcl
notb
decl
test
stc
popa
cmpsb
call
cmpsb
test
mov
lds
mov
in
outsl
cmpsb
arpl
pusha
cmp
in
xchg
pop
pop
dec
leave
test
cli
cmp
loope
fwait
sbb
cmp
inc
out
lea
sub
dec
leave
mov
in
lcall
daa
adc
dec
into
sub
dec
sti
movsb
lret
pop
enter
dec
das
pop
daa
pop
aam
push
out
fidivrl
jle
dec
dec
popa
sti
sub
dec
cmp
xlat
xor
cmp
mov
cmp
jmp
imul
fbld
xor
push
jmp
pop
xor
aaa
mov
adc
fnsave
outsb
mov
fildl
movsl
nop
out
jae
mov
inc
shr
lcall
ljmp
xchg
movsb
push
lods
cmp
fiadds
jns
jg
aad
ja
jns
sar
jmp
xchg
rclb
fwait
adc
les
mov
pop
xor
and
or
call
lods
ss
sub
sbb
dec
add
aad
dec
push
iret
test
sub
lret
mov
std
push
sub
sub
and
add
jbe
xor
or
dec
pushl
jmp
or
push
pop
fs
cld
jmp
test
in
in
and
pop
pop
ljmp
pop
jmp
push
mov
sub
adc
cmp
xor
loopne
sahf
repnz
inc
dec
or
ljmp
ficoms
or
pop
movsl
clc
fwait
mov
inc
jmp
sarl
ss
dec
jno
or
adc
cwtl
cwtl
and
fcomi
lods
pushl
decb
aas
dec
inc
push
sub
jbe
mov
adc
cmp
mov
and
in
call
lock
rorl
jg
sub
dec
js
leave
rclb
cmp
dec
push
loope
xchg
inc
sub
fisttpl
mov
lods
fimuls
std
adc
adc
aaa
std
fidivrs
test
and
mov
test
mov
lcall
sbb
int
test
xchg
cli
pushl
xchg
pop
lea
in
push
sahf
push
sbb
scas
pop
cmp
repnz
lret
ljmp
aam
xchg
iret
icebp
jge
pushf
cli
cmp
fistps
int3
es
insb
bound
push
sti
push
int3
stc
jmp
lret
fdivl
jno
scas
mov
movb
pop
xchg
mov
insl
mov
decl
mov
shr
into
bound
sbb
outsb
push
and
in
insb
xchg
cmp
in
mov
jmp
test
lods
inc
icebp
xchg
inc
scas
shrl
mov
mov
ret
cmp
stos
movsb
mov
fisubrl
les
pushl
xchg
cmc
divb
jae
and
dec
mov
cmp
fnstenv
xchg
inc
lods
ss
jg
mov
mov
call
adc
clc
mov
jle
xchg
xchg
pop
pushf
out
sbb
mov
pop
cmp
insl
pusha
jnp
scas
neg
jb
push
sbb
loop
in
adc
cltd
bnd
jmp
sbb
jle
cmp
sar
popf
cli
sub
imul
ljmp
add
cmp
mov
dec
imul
push
lcall
jl
push
sub
stos
mov
call
cli
push
mov
cltd
mov
sub
sbb
sahf
ret
cwtl
aad
jmp
in
push
lret
sahf
pop
imul
ret
pushf
data16
sub
xlat
inc
sbb
cmp
mov
sti
mov
dec
add
out
sub
jg
cmc
fndisi(8087
dec
sub
add
inc
cwtl
jbe
adc
rorb
fwait
xor
jl
mov
and
or
mov
insl
adc
mov
xchg
ret
mov
xor
fdivl
test
mov
push
sti
cld
popl
jbe
mov
mov
jmp
or
dec
outsb
jbe
fstpt
push
mov
incl
aad
outsb
jb
cmpsl
es
jo
inc
cltd
jle
sbbl
jb
in
dec
xor
mov
jg
movsb
dec
out
xchg
push
pop
sub
outsb
js
loopne
mov
adc
push
mov
push
cld
test
xor
cmp
inc
mov
adc
sbb
push
outsl
out
add
ljmp
cmp
jge
sub
dec
pop
sub
call
mov
jb
push
stc
scas
cmp
xchg
pushl
lahf
jae
lahf
mov
dec
jnp
xchg
push
pop
jbe
cli
add
jecxz
fcom
xor
fcomip
jg
mov
cmp
arpl
dec
jo
data16
scas
ljmp
cmpsl
pop
je
das
cmp
and
and
sbb
lcall
lods
pop
xor
sarb
insb
in
stos
cld
xchg
into
xchg
outsl
push
das
stos
pushf
andl
les
xchg
nop
jl
enter
ds
cltd
stos
mov
pop
clc
pushl
jae
jg
dec
xor
dec
ljmp
decb
inc
cmpb
and
fmulp
mov
es
inc
xchg
movsl
inc
std
ljmp
decl
xor
negl
cmpl
sub
mov
push
xor
xchg
fs
cltd
or
pop
icebp
mov
xchg
jbe
dec
adc
pop
cmp
int3
pop
sbb
dec
data16
mov
lcall
inc
fwait
test
cmc
ljmp
insl
out
cld
insl
loopne
mov
pushf
fnsave
ljmp
idivb
cmp
inc
out
mov
push
leave
lret
sti
mov
sbb
dec
jp
bound
daa
mov
jnp
mov
jns
xchg
pop
clc
dec
loopne
aam
les
jecxz
repz
pushf
lret
sub
call
pusha
out
loope
adc
xchg
dec
pushf
cmpsl
and
jge
xlat
icebp
or
scas
jmp
jae
sbb
mov
xchg
daa
leave
jno
in
sub
add
cmp
adc
in
mov
lcall
in
push
jb
in
clc
and
leave
pushl
inc
test
test
or
sbb
lahf
cmpl
or
pushl
lret
fbstp
dec
inc
sti
sub
dec
and
mov
push
cmpl
aaa
in
mov
iret
pop
inc
out
mov
push
push
cmpsl
mov
ds
cmpsl
scas
loop
push
les
ljmp
cmp
lods
add
movsl
sti
aaa
mov
loope
dec
pop
push
push
pushl
stos
outsl
mov
lock
cmpsb
aaa
and
leave
lret
jl
jmp
and
cli
dec
dec
dec
imul
dec
xchg
jecxz
adc
cmp
dec
cpuid
sub
fnstcw
add
mov
jg
inc
mov
push
push
xlat
pop
and
mov
mov
jns
ss
push
inc
loopne
popa
lods
ret
cmp
xor
add
lcall
hlt
fstps
jnp
data16
hlt
mov
ljmp
cmp
ljmp
testl
and
xchg
push
add
js
adc
lcall
addr16
jmp
pop
aaa
int3
lret
push
pop
jbe
stc
movsb
movsl
cltd
notb
cs
sub
add
mov
in
dec
cwtl
sub
outsb
cwtl
ffreep
mov
or
and
mulb
mov
call
pop
iret
std
xchg
ja
and
jnp
dec
xor
lret
xor
ret
mov
xor
lahf
repz
aas
pop
sbb
xor
mov
addr16
sbb
aas
fsubs
adc
sbb
out
das
popa
xchg
leave
das
jmp
adc
in
fcomi
and
pop
or
xor
loope
add
lret
jmp
cmp
mov
and
dec
mov
mov
scas
popl
sub
cmp
or
arpl
adc
call
xchg
aaa
out
arpl
fdivrs
loope
mov
pushf
repz
push
lods
js
push
icebp
out
adc
jmp
cld
in
test
mov
lods
inc
adc
mov
ret
inc
sbb
into
call
pop
adc
cli
xchg
push
lcall
pusha
fiaddl
mov
decl
int3
hlt
repz
jno
out
fs
test
pop
xor
dec
rolb
mov
mov
fcomip
lahf
pop
jmp
cli
fsts
repnz
mov
xchg
xchg
in
sbb
dec
das
clc
call
gs
sti
jmp
cmp
mov
jno
sbb
addr16
inc
jmp
das
mov
popf
jne
adc
push
lcall
mov
cmp
and
lea
jb
jno
cltd
outsb
mov
mov
jle
pop
addr16
pop
dec
push
xor
cs
mov
std
mov
out
sbb
push
enter
mov
sbb
pop
inc
addr16
in
lahf
sar
addr16
lcall
gs
loop
mov
int
cmp
jge
lcall
cmp
add
mov
mov
in
lock
and
enter
ljmp
mov
push
jmp
inc
pop
orb
xchg
adc
push
mov
fnstenv
out
stos
outsl
adc
js
ss
outsb
rcll
push
in
mov
cmp
testl
fstpt
cmp
lcall
ds
fadds
inc
or
aad
push
std
insb
pop
outsl
fwait
add
cld
std
fsubrs
test
in
cmp
fidivl
xchg
mov
pop
out
call
ret
lret
bound
pop
das
xchg
jbe
mov
jns
insb
rclb
or
mov
pop
enter
xor
or
inc
mov
xor
cwtl
imul
xor
fisubs
mov
divb
popf
mov
pushl
push
xor
test
fsubr
clc
dec
cmp
jl
mov
cld
pop
repz
pop
loopne
imul
lret
loopne
sahf
out
mov
test
sti
hlt
ja
xchg
in
cs
dec
pop
jo
rcr
sub
bound
outsb
pop
push
lret
mov
fucomip
push
xchg
push
std
or
rolb
decl
mov
negl
test
sahf
xchg
ja
pop
inc
pop
mov
aas
and
mov
pushf
incl
pop
jno
pop
mov
fucomip
inc
in
mov
inc
subl
xor
ljmp
pop
out
std
mov
rep
dec
movsb
roll
sbb
hlt
cmp
lea
jg
jbe
repz
adc
jl
add
sti
inc
add
inc
jmp
fdivs
xchg
std
mov
into
add
dec
ljmp
xchg
into
mov
sub
mov
fisubrl
insl
xor
dec
out
sar
call
jmp
add
int
mov
push
into
or
fildll
or
mov
inc
or
mov
or
loopne
int3
adcb
sub
adc
adc
mov
in
sub
enter
pop
dec
jo
aam
sub
mov
jmp
mov
xchg
mov
ss
out
shll
cmpb
outsb
xchg
cltd
nop
xchg
ja
jmp
mov
orb
mov
adc
scas
js
cmp
clc
je
out
aas
loopne
mov
ljmp
cwtl
xor
mov
cmp
push
inc
push
enter
jg
jmp
into
loopne
pop
in
call
pop
sub
adc
or
pushl
popa
fs
sbb
mov
out
rclb
repnz
add
in
xor
dec
sti
rorl
or
fdivl
sti
repnz
out
dec
imul
mov
jl
call
push
adc
mov
pusha
stos
lds
cld
test
sbb
adc
xchg
cmp
mov
test
mov
lods
call
mov
test
mov
xor
cmp
cli
in
adc
scas
inc
test
push
xor
xor
rclb
dec
rolb
pushf
dec
test
dec
adc
fimuls
test
push
cmp
lds
rcll
or
arpl
lea
jnp
mov
pop
icebp
jmp
dec
insl
mov
aas
pusha
cmp
mov
rcrb
aam
push
movsl
jg
jmp
repnz
movsb
xchg
das
lret
mov
mov
adc
gs
out
adcb
repnz
xor
cmp
mov
popf
mov
imulb
jno
sub
ljmp
repnz
in
ja
sbb
sarb
lcall
in
push
push
sbb
pop
dec
jmp
mov
sub
out
rcl
jg
incl
push
mov
aam
stos
push
test
es
pop
scas
in
sub
mov
cld
lcall
push
mov
insb
mov
mov
rclb
mov
out
incl
fs
test
jbe
sbb
cmc
add
movb
pop
jo
jmp
pushl
jo
call
or
cmp
jo
mov
push
das
popa
mov
jmp
sbb
movsl
sub
insl
mov
add
dec
fwait
jo
xchg
ret
lahf
pushl
pop
pop
fadds
dec
fnstsw
dec
mov
incb
add
rcrb
decl
mov
jg
adc
out
test
and
and
inc
and
mov
loope
lods
in
add
sbb
mov
inc
sahf
jg
aad
mov
daa
sbb
shlb
push
incl
aas
push
bound
cmp
pop
adc
insb
and
lock
pop
jae
lret
pop
jb
lods
or
clc
call
inc
or
dec
shll
jbe
lret
jmp
fwait
adc
insl
adc
mov
mov
out
mov
xchg
adc
inc
repz
pop
int
dec
xchg
dec
movsl
mov
imul
popa
rcrb
mov
fwait
dec
push
or
mov
arpl
mov
fnstenv
stos
inc
int
inc
out
jecxz
lds
push
int3
cs
decl
ffree
cwtl
jle
pop
xchg
sub
push
out
cmpsl
aad
sbb
jl
cmp
notb
mov
adc
cmpl
sahf
das
test
ljmp
in
push
iret
push
xor
sub
repz
sub
xchg
sbb
cld
outsl
call
jp
mov
cmp
lret
std
cmp
jg
inc
inc
mov
fdivr
cmp
jl
fwait
sub
into
idiv
ljmp
dec
adc
ficompl
hlt
mov
xchg
push
mov
dec
mov
sub
lcall
int
pop
in
addr16
push
in
mov
imul
out
cmp
mov
movsb
sti
movsb
mov
pop
xchg
jb
sbb
sbb
jp
imul
decl
mov
dec
mov
mov
lret
loope
clc
xor
orl
in
ljmp
inc
add
dec
or
loopne
fs
es
fpatan
cmp
fucomi
jno
or
incl
lea
mov
scas
jmp
imulb
clc
ljmp
cli
mov
scas
fcoms
imul
or
outsl
clc
jg
cmpsl
les
outsb
rcl
call
int
push
jbe
icebp
mull
mov
mov
into
jns
jl
mov
shrl
scas
sbb
mov
jnp
inc
pop
in
pop
idiv
mov
push
inc
fisubrl
inc
icebp
arpl
fiaddl
lret
fldt
jg
in
mov
aam
lds
orb
repz
cld
sub
add
decl
lock
test
shl
movsl
stc
int3
test
jmp
decl
jmp
xor
in
push
or
add
mov
mov
in
in
jecxz
bnd
cmp
shl
push
lea
pop
clc
scas
add
sti
add
incl
loopne
xor
push
out
out
nop
ds
sti
mov
push
xor
pushf
cmpsb
arpl
lcall
inc
jg
pusha
jg
cltd
xor
sub
sub
inc
je
sarb
subl
push
aad
mov
jb
pop
pop
mov
inc
push
in
cmpb
cmpsl
out
int
dec
xchg
int3
cmpsl
ja
mov
mov
out
mov
add
push
rcll
int
aam
mov
clc
mov
inc
push
sbb
xchg
xor
cmpsl
mov
lods
push
arpl
imul
cltd
jmp
gs
cmp
adc
add
inc
mov
fiadds
pushl
sbb
push
insb
std
inc
pop
loope
xor
fcmove
sti
sbb
enter
dec
xchg
adc
jg
push
and
dec
dec
adc
pushf
mov
shl
dec
es
incb
sbb
push
mov
mov
xchg
xor
jecxz
xchg
mov
mov
iret
decl
xchg
cmc
cs
fisttpl
icebp
mov
add
fbld
jmp
ds
dec
add
addl
dec
in
or
sarl
arpl
or
mov
lods
add
mull
ret
repz
repz
pop
mov
pop
clc
jns
mov
js
push
jo
cmp
or
cld
mov
mov
aaa
das
xlat
out
lahf
mov
je
mov
add
inc
xlat
mov
fildl
jp
sbb
sub
push
sub
cld
mov
imul
sbb
xchg
sub
rorb
aaa
scas
fmull
xor
in
push
pushl
dec
stos
cli
and
fwait
mov
cmp
push
mov
out
dec
fcomi
or
je
mov
mov
lds
cmp
jmp
pop
add
lock
ljmp
mov
sub
mov
clc
js
cs
popl
push
xchg
xorb
xor
sbb
stos
incl
adc
mov
mov
jl
aad
mov
dec
movsb
sbb
movsb
outsb
jnp
call
in
pusha
xor
jge
lea
sbb
jb
call
inc
aad
jg
mov
adc
dec
jae
jecxz
and
aad
shlb
push
popa
cmp
or
mov
test
rorb
push
sahf
dec
fcmovbe
xchg
lcall
push
movsl
sub
xchg
or
std
xor
xchg
jp
out
fisubrl
dec
ds
fisttps
mov
popf
mov
std
rorb
jge
mov
test
and
sbb
mov
jae
push
bound
inc
ja
iret
cmpsl
xchg
fcos
ds
loope
loop
pop
sbb
popf
xor
out
add
out
sub
xchg
sub
jnp
lods
xor
in
jns
scas
push
pop
mov
pop
sbb
movsb
loope
jp
mov
mov
mov
decl
or
or
out
lods
jbe
ret
out
int3
lds
std
lock
mov
and
rcrb
mov
xchg
gs
rcr
test
cmp
repz
call
sub
mov
mov
inc
aam
scas
test
popa
popa
pushf
mov
movsb
jns
rorb
mov
push
sarl
or
sbb
out
in
jb
lock
push
cmp
and
jo
in
and
ljmp
or
cltd
popf
sahf
aaa
outsl
adc
dec
xchg
mov
inc
sbb
pop
shll
ja
les
neg
in
imul
mov
ljmp
mov
mov
pop
mov
or
insb
push
inc
dec
jbe
cmp
jmp
int3
data16
test
insb
lods
inc
inc
xor
fstps
sub
pop
idivb
incl
cmp
jbe
aas
jb
jp
xor
mov
mov
in
ret
shlb
int3
inc
clc
jne
shrb
ss
imulb
pop
gs
pop
cmc
decl
stos
test
push
sbb
in
jno
imul
push
xchg
cwtl
fs
sub
aaa
cmp
aad
jecxz
pop
jmp
out
push
or
and
imul
mov
nop
lret
sbb
sahf
mov
mov
mov
jecxz
or
enter
out
outsl
decl
sub
xor
loope
arpl
ljmp
mov
lcall
test
in
jns
mov
adc
adc
imul
add
pop
into
pop
mov
inc
sahf
sar
jo
sahf
leave
cmp
stos
shrl
pop
dec
and
pop
mov
mov
mov
push
out
push
ror
push
jg
mov
lcall
mov
cmp
dec
ss
jle
pusha
inc
mov
pop
mov
lcall
scas
ret
clc
stos
or
xor
xor
mov
out
and
jo
repnz
cs
inc
mov
sti
call
jns
fildll
cmp
dec
mov
sbb
adc
pop
cld
push
add
pushl
loope
cmp
push
mov
addb
inc
dec
enter
or
adc
or
dec
jl
movsb
pop
inc
pushf
jne
mov
in
fdiv
or
push
outsb
mov
xchg
jno
scas
and
dec
xor
xchg
arpl
sbb
or
out
adc
and
and
outsl
int
push
sti
aam
and
scas
mov
add
pushl
sbb
mov
outsb
lods
and
adc
call
lcall
hlt
ss
cwtl
sub
add
test
xchg
mov
pop
es
mov
pop
push
adc
inc
mov
ljmp
stos
jecxz
jg
vpunpckhqdq
adc
pop
push
ljmp
imul
enter
jmp
fcmovbe
pop
sarb
jecxz
pop
pop
jecxz
xchg
push
scas
xchg
outsb
lret
pop
ss
sar
pushl
or
dec
dec
dec
jle
dec
mov
ret
or
int3
sti
jecxz
cmc
aad
clc
subl
lods
loop
frstor
and
loopne
push
mov
jg
lds
pop
and
int3
js
pop
mov
inc
lods
jb
cld
je
push
cld
jle
mov
adc
mov
push
cli
movsb
hlt
or
testl
jb
lods
cltd
out
adc
or
mov
cmpsb
dec
scas
cmpsb
jnp
insb
fnstenv
dec
hlt
lcall
jne
xchg
jmp
xor
popf
imul
lcall
outsb
adc
ret
cmpb
sub
push
or
decl
out
orl
cmp
ljmp
je
jns
jle
push
cli
int
xchg
adc
insb
inc
inc
sbb
push
pop
movsb
out
imul
adc
xor
xchg
dec
les
add
push
mov
cmpsb
jg
or
jno
rclb
fcmovne
shll
mov
xor
jno
shll
cmp
fcomip
out
mov
lods
mov
nop
sub
cmp
and
lret
xchg
ret
incl
cld
ljmp
rorb
rolb
inc
fsubrs
imul
mov
jb
inc
mov
dec
mov
data16
jp
inc
xchg
dec
shll
sub
xorb
out
lcall
icebp
jge
outsl
sbbl
push
dec
cmc
inc
sbb
inc
pop
jmp
mov
mov
outsl
popa
incb
push
or
dec
xor
cwtl
cltd
xor
jmp
xchg
sar
out
mov
add
addr16
sbb
cmc
and
mov
out
clc
das
xor
mov
cmp
mov
pop
and
mov
mov
sbb
or
fcos
incl
roll
ja
shrl
mov
and
aad
outsl
xchg
sub
jne,pn
push
xchg
pop
icebp
ljmp
mov
cltd
repz
push
cs
add
mov
pop
sbb
xor
jge
xchg
imul
test
jmp
sbb
fcomip
ffreep
cmp
xorb
pop
cltd
aam
mov
cmpl
jmp
addr16
loopne
xchg
rol
inc
mov
dec
xchg
in
rol
clc
aaa
std
jmp
mov
and
in
xchg
xchg
mov
adc
test
pushl
add
cmp
mov
mov
mov
cli
jmp
fs
mov
pop
mov
pop
sti
add
incl
ljmp
fisttps
mov
xor
shrb
pushf
orl
popf
pop
mov
mov
jg
stc
inc
jecxz
dec
sbb
ret
in
xor
add
pop
xchg
sbb
iret
sub
out
jecxz
in
loope
sbbb
sahf
cmp
or
xchg
dec
mov
xchg
movsb
jecxz
jmp
out
jmp
int
clc
or
xor
dec
enter
mov
push
je
jg
icebp
pop
lods
mov
scas
stos
mov
sub
xor
jg
into
dec
std
outsl
test
jecxz
mov
or
cmp
mov
pusha
mov
push
cmpsb
cmp
aas
cwtl
jg
xchg
ret
sbb
add
mov
pushl
mov
push
pop
push
jmp
enter
ret
cmp
xor
and
call
mov
out
mov
into
mov
lods
pop
push
ss
mov
inc
push
insl
mov
fiadds
jmp
sub
test
xor
loop
andl
lcall
jae
dec
mov
out
js
loope
xlat
sub
es
sti
popa
cld
scas
or
push
jl
sbb
sub
aas
inc
lcall
jmp
xchg
std
pop
in
cld
cmp
repz
sbb
iret
dec
sub
pushl
or
mov
or
insb
fcompl
addr16
xor
dec
pop
loopne
lcall
insb
jge
sahf
mov
neg
mov
repz
mov
mov
ret
pushf
mov
jmp
mov
clc
xor
ficompl
xchg
or
mov
cld
loopne
decl
adc
inc
cmp
sti
push
popa
insb
push
xor
push
mov
xchg
mov
ljmp
xor
popa
test
sub
icebp
movsb
into
arpl
cmp
mov
les
ljmp
xchg
into
pop
sbb
adc
jno
cld
rorb
push
lds
adc
sub
jg
ret
dec
inc
stos
mov
das
test
imul
test
ljmp
cmp
out
push
push
test
clc
inc
ds
add
cmp
ljmp
fnstsw
fmull
bnd
shll
jno
or
sub
loope
xor
in
lcall
cmp
push
mov
pop
or
call
ficomps
sbb
mov
icebp
stos
push
ja
push
and
fadds
push
inc
inc
adc
mov
mov
mov
cmp
imul
imul
lcall
movb
xor
push
push
sti
lret
or
mov
xchg
insl
scas
enter
incl
popa
dec
adc
pop
lds
push
xchg
jb
xchg
cmp
std
sub
imul
stc
xor
decl
out
mov
adc
into
mov
cltd
mov
mov
push
mov
in
imul
incl
iret
rcr
jle
dec
inc
in
sarb
adc
fisubrl
div
insb
sub
xchg
adcb
cmp
test
jmp
pop
sbb
mov
fisubs
inc
cs
test
popf
cs
xor
mull
push
aad
push
inc
inc
cmp
jle
cmp
addb
nop
mov
aaa
xorb
dec
jbe
loopne
lret
push
clc
xchg
pop
leave
test
inc
jo
test
sbb
push
sbb
loop
inc
mov
in
mov
cmp
dec
stos
cmp
sbb
inc
bound
jle
mov
dec
jns
shlb
pop
sbb
cld
decl
or
aas
jo
jg
sysenter
lret
pop
push
icebp
mov
add
or
mov
ljmp
stc
and
mov
adc
lret
je
add
sbb
adc
mov
sbb
fcomip
mov
mov
xor
fs
push
mov
and
inc
gs
and
jmp
lds
xchg
pop
push
mov
push
repz
outsl
iret
decl
inc
stc
or
test
jns
not
pop
sub
push
aam
mov
imul
pop
mov
aam
mov
inc
and
jg
mov
xchg
cmpsl
add
cmp
sbb
sbb
cs
inc
add
and
fadd
sub
scas
lds
insb
pop
mov
gs
std
sahf
test
sbb
push
cmpsl
cmp
testl
pop
mov
or
mov
jmp
inc
mov
sbb
sub
incb
sbb
mov
das
mov
add
cwtl
js
lods
incl
movsb
adc
daa
and
pushf
sti
out
or
mov
enter
mov
testl
pop
outsl
aam
out
out
int3
outsl
inc
lret
xchg
incl
lock
pop
jb
clc
test
add
inc
inc
mov
gs
jl
sbb
pop
mov
pop
adc
lcall
cmp
sti
mov
xor
sbb
test
loopne
jae
pushf
fiadds
call
sub
sub
xchg
sub
sarl
movsb
mov
popa
test
inc
pushl
xor
mov
lahf
pop
dec
mov
mov
ffreep
ja
dec
dec
cmc
mov
decl
popl
dec
pop
rcr
outsb
mov
in
jg
cmpl
mov
dec
sub
pop
cli
dec
jge
clc
test
lock
jne
ret
pop
xor
add
xchg
shrl
cmp
jae
cmp
or
scas
push
jnp
test
jle
push
hlt
xor
dec
das
push
xchg
push
lock
inc
jg
sub
ljmp
inc
mov
ret
aad
call
outsb
pushf
aas
popa
orl
daa
and
mov
mov
inc
and
mov
dec
xchg
lds
dec
int3
mov
push
loope
jno
fwait
jp
dec
cmp
mov
fwait
shrl
incl
inc
scas
imul
repz
dec
xlat
repnz
pop
cmp
in
jp
and
decl
push
mov
sub
test
ljmp
lods
push
mov
loope
leave
lock
movsb
pop
lock
call
xor
je
mov
fnop
fcoms
aam
jae
mov
aam
adc
adc
lcall
clc
jno
sub
sarb
add
xchg
cwtl
xchg
mov
pushl
fsubp
lock
mov
mov
mov
in
add
push
xor
scas
js
ljmp
lcall
cli
in
cld
push
cmc
dec
outsl
mov
cmp
fs
mov
xchg
inc
pop
pop
xchg
jg
rcr
cmp
test
mov
xor
push
mov
aaa
cmp
mov
ljmp
shlb
jecxz
les
les
test
imul
call
cmp
pop
jecxz
and
jno
sbb
pop
stc
mov
ljmp
out
mov
ficoml
push
cmc
je
add
or
notb
sub
fisubrs
in
adc
scas
dec
xor
outsl
cmp
mov
and
ljmp
sub
xlat
jb
paddsw
dec
icebp
jl,pt
mov
movsb
or
xor
call
mov
xlat
adc
mov
in
lods
out
js
or
sti
pushl
sbb
push
dec
inc
dec
fbld
dec
movq
add
lods
mov
inc
add
incl
sti
and
mov
lret
mov
stos
pop
sub
outsb
mov
add
repnz
popa
jno
decl
adc
dec
xorb
cmc
scas
add
dec
push
cmp
dec
pop
movsl
mov
in
jne
cmp
and
adc
and
lods
cmp
pop
or
iret
or
call
mov
scas
fcompl
imul
stos
sbb
outsl
inc
push
dec
nop
dec
mov
xlat
insb
inc
push
inc
jmp
sub
dec
movsl
inc
jo
jmp
xchg
pop
or
enter
loope
mov
loop
jl
cli
ficompl
cmpsl
adc
xor
or
out
test
into
daa
sbb
ljmp
jle
push
test
das
dec
les
loop
stc
imul
in
dec
dec
xor
pop
or
decl
push
lcall
xlat
xor
cmpsb
mov
leave
test
and
loopne
push
aas
sub
into
dec
cld
jp
mov
fsubr
sub
jb
ret
sub
dec
mov
xchg
push
cmc
mov
ret
out
pusha
ja
jne
add
jne
ret
jne
push
cmpxchg
fs
out
add
mov
push
addr16
mov
imul
xchg
adc
sbb
push
jg
or
out
repnz
push
and
xchg
sbb
sub
fcoml
ret
enter
and
push
pop
ja
stos
std
pop
dec
mov
pop
in
xchg
mov
mov
add
jle
mov
in
mov
add
call
inc
test
cmp
dec
in
fdivs
call
bound
imul
jmp
inc
pushf
in
ret
stos
push
push
xor
xor
lock
jo
xor
leave
cli
stc
mov
xchg
icebp
jmp
mov
out
mov
ret
pop
cmc
decl
mov
adc
xchg
push
sbb
mov
push
loope
out
call
jns
imul
in
xchg
fcoml
pop
lods
cmpsb
das
clc
xchg
fimull
pop
decl
es
test
jb
mov
lds
int3
cmp
je
lds
cmpsb
sbb
rcrl
xor
mov
mov
xchg
xchg
rcl
mov
mov
or
jge
daa
shlb
enter
mov
mov
sub
dec
rol
sub
or
lea
mov
jmp
mov
leave
xor
lds
mov
maxps
or
gs
jmp
sti
or
adc
pop
pop
outsb
inc
xchg
sub
mov
fwait
or
fcomi
pop
xor
lcall
imul
mov
adc
xchg
dec
xor
jne
mov
stc
pop
xchg
out
hlt
dec
fcoms
loop
jmp
sub
and
pop
fsub
and
push
mov
cmc
lods
repnz
incl
sahf
cmpb
sbb
movsb
dec
out
xor
mov
mov
loop
sbb
rcrl
insb
and
dec
in
xchg
jge
mov
decl
lods
mov
rcrb
scas
sbbb
jne
sbb
sbb
lcall
out
fidivrl
pop
loop
adc
decl
iret
dec
cmpsl
addr16
sub
dec
sub
imul
not
es
and
inc
aas
lcall
lock
push
mov
lcall
mov
cmpsl
lods
jae
test
mov
sub
mov
or
mov
sub
decl
cs
ret
xor
repnz
loop
arpl
cli
or
int3
sbb
push
les
mov
xchg
pop
das
inc
adc
repz
repz
call
and
cld
lret
into
out
pop
push
cmp
je
cli
cmpsb
mov
imul
dec
rclb
rcrb
clc
pop
mov
push
mov
cmp
xchg
outsb
pop
adc
out
insb
loopne
pop
jb
mov
testb
ljmp
inc
movsb
pop
lea
daa
and
mov
inc
inc
mov
test
ja
leave
ss
loopne
in
and
lret
lods
push
mov
and
inc
vmptrst
icebp
dec
aaa
sub
cltd
adc
sub
in
jne
fisubl
std
sub
xchg
shl
mov
pushl
in
hlt
mov
xchg
mov
pop
sbb
lahf
call
jg
daa
xchg
dec
arpl
and
ljmp
pop
add
call
movsb
push
pusha
sub
or
mov
shll
mov
sbb
call
pop
ds
pop
cmpl
int3
mov
pop
inc
mov
daa
sub
decl
lock
insl
iret
mov
jp
inc
adc
jge
cs
xor
pushl
imul
rcrl
lret
sbb
pop
aam
pop
xor
jmp
dec
inc
inc
shlb
xchg
aaa
lcall
cmp
dec
inc
stos
xor
mov
call
fisttpll
ljmp
rclb
rorl
jae
cmpsl
or
and
jmp
jecxz
cmc
add
paddq
fidivrs
jae
push
out
jge
pop
push
stos
mov
lods
adcl
mulb
jmp
mov
mov
js
xchg
fsts
or
mov
addl
pop
fcomip
jmp
mov
push
and
loop
shll
data16
movsl
pop
call
xor
or
ret
inc
dec
adc
sub
adc
in
sub
cs
lcall
int
mov
popf
adc
mov
imul
ss
dec
jnp
add
pop
icebp
mov
xchg
mov
imul
enter
sahf
pop
dec
stos
pop
cmc
incl
imul
fldenv
push
mov
mov
enter
add
daa
pop
jecxz
shl
insb
std
push
jno
push
or
orl
pop
mov
scas
inc
pop
sti
xchg
cmc
adc
push
dec
pop
inc
lods
mov
inc
sbb
dec
pushl
or
cltd
mov
sub
test
inc
push
inc
std
and
ljmp
test
sahf
xor
lahf
lds
jns
scas
cmpsb
clc
lea
jmp
ljmp
fidivl
fldcw
lea
sbb
aam
jg
jmp
mov
add
mov
cmp
pop
repnz
repnz
call
push
adc
movsl
xor
sti
mov
inc
xor
push
daa
insl
mov
inc
loop
cmp
pop
imul
js
xchg
bound
fnstcw
jle
insl
out
stc
arpl
adc
fwait
aad
or
aas
adcl
mov
fwait
xor
movsl
arpl
cmp
cmp
dec
inc
inc
enter
in
push
lock
and
cmp
add
add
mov
cmc
outsl
or
lret
pusha
mov
xchg
jb
jb
inc
jmp
ds
mov
mov
bound
movsl
sbb
xchg
and
push
add
push
push
std
mov
xchg
inc
std
xor
cmp
out
mov
and
cmp
es
enter
cmp
pop
hlt
imul
call
and
repnz
mov
inc
in
nop
push
stos
leave
scas
jg
sub
out
cmp
cmp
or
pop
imul
sub
pop
mov
jmp
cmp
test
lahf
outsb
xor
movsb
cmc
call
pusha
xor
decl
std
dec
bound
jp
add
jmp
adc
daa
jb
addl
ljmp
out
dec
push
cmp
popa
ret
sub
inc
xchg
push
std
adc
mov
cmp
decl
call
jl
xor
inc
sahf
dec
out
push
ss
cmpsl
push
push
aas
inc
pop
sub
add
pushl
mov
cmpl
push
inc
pop
sarb
xor
cwtl
nop
dec
call
pop
int
push
out
sbb
aad
jge
pop
push
out
movsl
push
addr16
push
call
sub
dec
andl
sbb
repnz
mov
out
ds
sub
push
addr16
mov
mov
out
jbe
scas
pop
fsubl
cwtl
dec
icebp
lcall
es
xor
decl
inc
inc
jle
popa
inc
dec
stos
push
pop
jmp
decb
lods
addb
icebp
in
inc
or
and
fisubrl
inc
push
lods
fisubrs
pop
push
jge
leave
push
jmp
mulw
loope
cmp
imul
sbb
test
xor
out
inc
add
movsl
mov
test
jbe
or
adc
sbbb
int
xchg
clc
inc
pop
pop
or
and
jl
sub
lahf
push
std
sbbb
js
jae
fsubs
add
lret
mov
aam
sahf
mov
push
push
fnsave
in
hlt
pop
lods
jo
repz
jle
fldln2
jmp
dec
mov
icebp
imul
sub
sbb
xchg
jmp
jae
mov
sbb
sbb
sub
cs
int
sbb
dec
fisubl
lcall
rolb
popf
or
sbb
lods
mull
xor
and
ja
ja
incl
mov
decl
jne
cmpsl
mov
xor
les
loope
rcl
lret
sub
push
inc
scas
insb
addb
nop
mov
mov
adcl
hlt
sbb
ljmp
pushl
cld
cltd
push
shrl
imul
jbe
rclb
mov
call
pop
or
xchg
push
in
mov
imul
lods
jmp
cmc
cmp
xchg
jecxz
fs
jmp
ljmp
mov
ret
xchg
push
and
mov
fs
enter
and
jmp
or
movsl
add
lods
call
clc
xchg
in
mov
and
jmp
cmp
call
push
push
dec
jo
jge
stc
out
push
cmp
setb
decl
js
insl
out
dec
inc
out
jno
mov
push
call
fbld
fildl
inc
add
out
cmp
add
lcall
popf
sbb
mov
xor
iret
imul
inc
je
dec
adc
call
mov
jae
jne
lcall
sahf
psrlq
adc
mov
pushl
daa
jle
aaa
add
inc
pop
inc
add
sbb
inc
pop
xor
mov
decl
jl
jb
inc
out
cmpsb
subl
rcrl
sub
add
pushl
cmp
das
xchg
xchg
lods
stc
clc
sub
les
dec
ds
mov
pop
xchg
aaa
sub
nop
int3
add
mov
fscale
cmpb
mov
push
mov
mov
push
test
lret
and
cmpsb
mov
ret
lock
ja
pushl
push
jg
jb
icebp
les
cmpsl
sub
mov
adc
lcall
inc
mov
or
mov
xor
pop
mov
insb
jle
lcall
pop
movsb
pop
jmp
jp
add
das
inc
mov
inc
icebp
mov
cld
sbb
idiv
jmp
arpl
xchg
jbe
jne
add
dec
mov
ds
fsubrp
adc
scas
and
jge
pop
jecxz
xor
mov
pop
xorb
fsubr
inc
leave
dec
je
cmpsl
pop
inc
pop
cmp
cs
loope
ljmp
mov
sub
imul
mov
lcall
and
in
pop
mov
jns
xchg
add
mov
repnz
pop
pop
test
ds
dec
jns
fs
ja
pop
imul
int
enter
mov
movsb
scas
pushl
jo
mov
xchg
cmp
xchg
jle
jp
lahf
orl
add
scas
jg
aad
faddl
sub
fwait
inc
rorl
inc
je
mov
mov
popa
jle
ljmp
xchg
jo
xor
and
scas
xor
mov
xchg
icebp
cmp
mov
pushf
insl
mov
hlt
outsl
test
mov
or
mov
loope
into
clc
jle
hlt
dec
jle
mov
jo
addr16
jmp
hlt
lahf
jmp
xchg
arpl
insb
mov
je
lcall
add
sbb
in
dec
sbb
xor
mov
shll
test
cmp
sbb
gs
xor
push
inc
push
fdivr
and
mov
xlat
rorl
dec
push
pop
mov
fsubs
jns
mov
dec
dec
jae
add
jmp
lea
dec
cld
cld
jne
mov
inc
cmp
pusha
push
mov
xor
or
adc
sahf
aas
sbb
orb
dec
cwtl
xchg
and
cmp
xchg
ljmp
loop
dec
mov
xchg
cld
inc
fmuls
es
sti
js
decl
stos
pop
bound
jl
test
mov
mov
out
jecxz
incb
sbb
ljmp
enter
dec
mov
and
jns
ss
call
ficoml
sub
cmpsl
jo
dec
icebp
dec
shr
mov
mov
push
xchg
and
inc
jnp
cmp
fcmovnu
fwait
or
out
cmpsl
xor
filds
nop
stc
pop
mov
cwtl
mov
inc
adc
rorb
dec
cwtl
and
shlb
call
add
test
lock
xchg
cmpsl
dec
or
pushl
outsl
imul
mov
sahf
dec
jbe
ror
push
mov
mov
in
cld
jmp
cld
inc
cwtl
cmp
dec
sbb
ret
mov
cmp
data16
push
jge
pushl
mov
pushf
daa
sub
imul
jbe
dec
mov
outsb
imul
jle
inc
mov
push
fisttps
in
ds
test
les
mov
inc
test
inc
jp
cmc
aaa
jbe
jnp
sub
mov
call
aad
sub
cli
jle
sbb
xor
cmp
or
lds
adc
adc
and
lret
ds
xchg
inc
or
dec
adc
mov
in
xor
cmp
push
ret
ljmp
push
mov
addl
or
cmp
mov
cs
adc
call
lock
xor
push
sub
pop
push
xchg
stos
les
imul
xchg
sub
call
inc
jb
cmp
jl
aas
vunpcklps
in
sub
pop
ljmp
sbb
or
xchg
jecxz
cmp
inc
inc
mov
sar
call
and
or
aad
andl
mov
dec
jnp
cmp
sbb
push
adc
cwtl
mov
inc
sub
xchg
int3
jecxz
add
mov
les
pop
icebp
xchg
lret
out
shll
fisubrl
push
pushl
lods
and
sbb
inc
lret
ficomps
out
xchg
inc
bound
mov
add
mov
shl
stc
mov
and
jmp
push
push
pop
pop
dec
rorb
in
add
cmp
push
decl
in
xchg
or
out
xchg
fildll
mov
daa
mov
cwtl
out
cld
nop
mov
lcall
mov
lods
pushf
call
mov
pop
hlt
mov
jecxz
sahf
fildll
test
xor
mov
call
sub
test
sub
loopne
call
outsb
rolb
fistps
lcall
push
aam
adc
mov
xor
mov
call
inc
fdivrl
cwtl
lods
rclb
inc
jb
jmp
adc
repz
incl
and
lret
mov
cmp
shlb
out
dec
xchg
fwait
cmpsl
mov
xor
dec
mov
jmp
fcomip
in
nop
shl
pop
jg
dec
add
test
and
jnp
mov
pop
xchg
popf
addl
mov
adc
push
add
sbb
iret
cmp
sarb
sahf
and
xor
pop
add
or
cmpsl
ss
push
ljmp
xchg
mov
stos
pop
jmp
push
fwait
mov
ljmp
jmp
fidivs
idiv
push
or
jge
adc
mov
xchg
es
pop
mov
lods
mov
ljmp
repz
stos
scas
dec
outsl
dec
cwtl
ficoml
insb
jmp
or
jg
call
xlat
jle
roll
push
pop
stos
hlt
mov
pop
ret
jmp
or
xor
mov
pusha
cmp
pop
lret
and
adc
mov
popa
subl
mov
jmp
push
stc
testb
pop
rorl
test
inc
repnz
addr16
mov
js
or
cmp
xchg
mov
es
in
ljmp
jnp
jnp
and
mov
mov
inc
xlat
repz
jge
outsb
xchg
ljmp
jle
or
shrb
or
jp
add
mov
ljmp
push
mov
insl
les
pop
rcl
sbb
push
ss
incl
gs
mov
ds
dec
xchg
sbb
fcoms
xor
ljmp
ljmp
inc
xchg
push
ljmp
imul
lret
in
pop
mov
inc
adc
in
call
decb
mov
jge
jl
shrd
stc
hlt
mov
es
jmp
and
dec
add
mov
push
mov
jnp
pop
or
mov
sbb
inc
shl
jle
jecxz
mov
inc
aam
xchg
nop
sub
gs
jle
mov
out
mov
lcall
movsb
mov
pushf
xchg
std
js
and
push
repz
jl
ja
xor
outsl
inc
es
mov
mov
aam
test
nop
pop
daa
inc
loopne
add
cld
fisttps
sbb
add
repz
mov
scas
dec
dec
aas
xor
pushl
hlt
pop
mov
popf
and
lods
popf
daa
dec
lcall
out
scas
jl
loop
out
out
call
out
push
lret
popa
pushf
pushf
jnp,pn
jecxz
sahf
xor
pushl
in
dec
dec
sbb
lods
sti
xor
filds
pushf
xchg
outsl
mov
call
dec
or
xchg
out
mov
push
addr16
cmp
rclb
insl
jp
xchg
jne
inc
sub
mov
insb
cmpsl
mov
jle
mov
sub
into
ljmp
and
in
xor
and
lods
xchg
pop
xchg
mov
out
clc
decl
push
loope
xor
xor
adc
rolb
aaa
in
xor
jmp
icebp
inc
mov
mov
les
fs
xchg
mov
aam
hlt
div
dec
jecxz
std
sub
mov
fists
fidivrs
incb
ljmp
shl
stc
pop
push
inc
das
jle
insl
jns
fidivrs
add
imul
cmp
mov
call
sub
cmp
adc
ret
sbb
mov
sub
xchg
sbb
inc
sar
ss
jp
ss
pop
stc
push
insl
aas
push
lcall
les
sub
rcll
lods
addr16
sbb
cmc
xchg
cmp
cltd
cs
jmp
test
or
call
pop
mov
pop
add
xor
stos
inc
int
pop
shrb
stos
loope
decl
in
xchg
jp
push
aam
daa
and
addr16
xor
in
xor
mov
jo
mov
mov
cmp
pusha
and
add
push
pop
inc
dec
sti
out
clc
mov
cmp
adcb
cmp
or
loop
jecxz
mov
leave
xorl
enter
mov
mov
xchg
psubw
mull
test
ficoms
nop
jmp
jmp
movsl
jge
dec
xchg
jbe
sub
xor
inc
jl
lret
cwtl
sbb
push
std
push
mov
inc
lods
idivb
jmp
fdivrl
cltd
gs
call
jbe
dec
sti
and
and
mov
lods
fisttpll
pop
mov
dec
ljmp
loopne
stc
insl
scas
dec
outsl
mov
xor
sbb
mov
pop
dec
iret
std
es
mov
cwtd
pop
pop
imul
push
repnz
sub
cmp
cli
pop
test
cmc
aaa
mov
pop
icebp
lock
xchg
mov
call
push
mov
jecxz
add
mov
enter
dec
cmp
ljmp
sub
pusha
inc
xchg
push
rcll
test
dec
lods
xor
cltd
push
pushl
jns
enter
mov
fwait
data16
lcall
test
cmpsb
mov
call
dec
scas
movsb
cmpsb
cwtl
xchg
mov
pop
dec
sub
mov
int3
jl
pop
decl
lahf
mov
test
mov
pushf
xor
sbb
sub
lahf
test
push
push
sbb
xor
xchg
fiadds
cmp
or
mov
sbb
pop
call
andb
call
xlat
sar
push
sbb
scas
pop
push
and
add
mov
inc
ror
das
ret
or
js
hlt
lcall
or
fdivp
ret
test
adc
rep
in
hlt
or
inc
mov
pop
xor
push
lcall
adc
add
std
push
xor
stos
or
mov
cwtl
aas
adc
cmp
dec
in
int
lods
dec
pop
inc
std
movsb
aad
jne
jl
add
xchg
lods
fstps
inc
mov
shr
stc
das
call
push
aam
push
fistpll
inc
sub
pushl
lea
call
push
scas
inc
mov
jo
dec
mov
jmp
lcall
xchg
xchg
sbb
inc
pop
mul
sub
paddb
mov
decl
xchg
cwtl
add
xor
insb
out
iret
and
xchg
cli
mov
fidivl
fucom
cmp
or
adc
aaa
out
pusha
add
mov
sbb
sbb
movsb
dec
sub
or
and
ret
jmp
pushl
ret
inc
dec
lods
sub
mov
je
stos
push
sbb
data16
lcall
xchg
mov
sbb
mov
sub
jecxz
dec
test
fdivs
push
cmc
outsl
lods
incl
ljmp
outsl
fwait
adc
jge
in
or
lods
push
xchg
out
add
decl
bound
adc
fwait
sub
jno
mov
cmpsl
jge
jbe
lcall
aaa
inc
cmpsl
fstl
out
pop
xorl
xor
xchg
pop
lahf
cmp
aaa
sub
scas
jmp
jmp
jns
repz
mov
lret
aam
jle
lret
insl
lods
ljmp
addr16
mov
jecxz
jecxz
mov
ljmp
mov
ljmp
mov
inc
movsl
pop
jle
dec
xor
add
cmp
pop
cmpsb
add
cmp
imulb
jg
call
out
mov
add
int3
jb
icebp
xor
lahf
popa
push
xor
lcall
sbb
or
add
fwait
mov
in
es
movsl
or
stos
jmp
insb
pop
aam
push
lahf
int
call
loopne
fsts
lds
outsb
xchg
pusha
loop
lret
es
xlat
xlat
test
scas
shl
pop
cmp
mov
push
mov
adc
sbb
jle,pt
decl
mov
jecxz
pop
and
insl
lock
pop
mov
dec
clc
in
rcr
ds
push
xor
decl
stos
loopne
inc
sahf
jecxz
lds
jno
xchg
sbb
add
pop
or
jl
hlt
push
pop
sar
push
sbb
cmp
ds
dec
jg
xchg
push
fcoms
test
stos
sar
iret
mov
inc
call
aas
adc
sub
mov
sbbb
cmp
pop
cmp
fimuls
jp
mov
jns
ljmp
fdivrs
lods
mov
sbb
fs
cmp
cmpsl
adc
cmpsl
clc
fcmovnu
pop
xor
push
mov
inc
fwait
pop
and
push
div
out
out
sahf
inc
push
push
inc
dec
push
ljmp
xchg
loopne
inc
jo
faddl
in
out
decl
arpl
movsl
jno
sub
jo
xor
mov
popa
test
leave
and
pusha
sar
fcomip
ljmp
mov
adc
rcr
outsb
sbb
xor
push
add
call
scas
adc
mov
dec
xchg
xchg
and
cmp
inc
and
into
ror
das
push
cmc
jl
mov
in
xchg
push
sbb
pusha
xchg
ret
aaa
mov
dec
fcoml
jmp
push
loop
or
cs
arpl
lret
pop
hlt
fadds
cli
iret
test
jg
loopne
pop
dec
adc
fdiv
arpl
enter
cmp
inc
incl
ljmp
pop
out
inc
or
leave
or
pop
add
lock
addr16
movsl
push
push
add
inc
sub
lcall
std
add
dec
and
lea
jg
and
mov
add
loop
dec
inc
jne
mov
dec
and
pop
ror
dec
push
fnstcw
inc
fisubl
cs
nop
bnd
testb
movsb
test
pusha
pop
data16
call
imul
cmp
and
or
cmp
inc
push
push
outsl
clc
inc
fldcw
pop
add
daa
iret
and
add
push
aam
xor
incl
xchg
arpl
push
lock
xor
or
mov
addr16
adc
dec
xor
lcall
or
subl
jecxz
push
xchg
shlb
xor
hlt
xchg
jo
jmp
inc
push
pop
mov
xchg
sbb
aad
repnz
int
jnp
shlb
inc
out
out
jecxz
ljmp
or
dec
and
cmp
outsl
inc
jp
mov
cmc
jmp
call
or
shrb
pop
dec
xchg
push
mov
sub
in
cmpsb
jl
push
ds
push
in
mov
lea
mov
mov
fiadds
aad
jae
or
ja
loop
xor
jmp
pusha
dec
outsb
jge
out
icebp
clc
mov
and
pop
in
loopne
lahf
xchg
sub
into
adc
pushl
sar
out
stc
mov
js
mov
movsb
sub
lods
pop
or
lcall
mov
add
cwtl
push
cli
nop
or
mov
incl
sti
xor
mov
jecxz
mov
fs
ss
lds
ljmp
cld
pop
popa
subl
stos
mov
fwait
sub
in
popa
push
pop
pusha
lds
out
or
xchg
icebp
xor
ds
or
out
cltd
lahf
xchg
pop
mov
fwait
cld
sbbb
mul
ret
mov
pop
aad
call
cltd
cmpsb
mov
add
and
jbe
ror
insl
dec
call
movsb
mov
mov
mov
sti
push
shl
daa
imul
aaa
scas
ficomps
ljmp
or
call
inc
add
mov
out
jnp
movl
shl
mov
xor
call
loope
mov
jnp
in
int
adc
or
jg
test
in
mov
imul
aas
leave
iret
les
testl
add
mov
fcompl
inc
movsl
cld
enter
fcomip
decl
fisttpll
into
loope
out
jae
fadds
icebp
jbe
add
lcall
call
mov
movsb
lods
scas
pusha
or
into
out
adc
aas
ljmp
mov
rcl
and
pop
loopne
dec
decl
jge
faddp
adc
push
pusha
jns
xor
mov
test
pop
cmp
push
add
jmp
stc
insb
mov
in
jge
xchg
xchg
mov
lcall
mov
adc
mov
test
out
inc
jle
jmp
adc
ss
jmp
mov
shll
aam
call
and
xor
add
lcall
and
add
ljmp
bound
sbb
insl
jbe
imul
push
in
sbb
dec
or
fwait
push
ljmp
mov
mov
setge
lock
dec
mov
jl
or
mov
call
jp
push
aad
roll
mov
test
out
cs
pop
int3
mov
push
cmpb
mov
sbb
and
repnz
inc
dec
jae
jle
call
into
out
ja
lcall
sbb
xchg
das
or
das
xor
sbb
cmpsl
pushf
repnz
mov
mov
mov
nop
mov
mov
or
jno
call
out
dec
and
scas
dec
mov
mov
inc
lock
lret
add
adc
mov
mov
clc
mov
cmpsl
pop
idiv
sbb
lahf
shrl
xchg
int3
sarl
rcr
pop
mov
out
or
mov
pushl
ret
gs
scas
push
les
inc
icebp
sbb
and
std
test
out
fildll
call
in
rorb
out
clc
xor
jo
ds
adc
mov
xchg
cmp
imul
scas
cli
sbb
push
lea
in
and
pop
jne
sarb
enter
ja
jmp
popf
pusha
sbb
sub
xorl
clc
sub
adc
lcall
or
pusha
inc
inc
sbb
sub
sbb
fiaddl
pushl
and
mov
xor
ss
cmpsb
jp
mov
ljmp
sub
mov
mov
sub
ljmp
ds
pop
pop
icebp
pop
jg
mov
lods
pop
scas
dec
mov
pushl
xor
icebp
cmp
jmp
mov
pop
mov
pop
dec
sbb
cmp
aas
dec
pushf
loopne
repnz
or
cltd
xchg
movsl
pop
push
jae
push
gs
cmp
clc
sbb
call
push
adc
add
mov
dec
xchg
push
pop
js
dec
movsb
and
pop
cs
decl
xchg
mov
and
fiaddl
pop
and
sub
and
bound
decl
cwtl
inc
jl
inc
enter
jle
jle
sbb
fists
out
sbb
jge
jp
ljmp
notb
gs
call
les
rcrl
jmp
push
cwtl
shll
pop
inc
mov
dec
roll
sbb
push
and
popa
ja
xor
mov
pushl
sub
mov
fs
jp
push
orl
loopne
sub
push
incl
jecxz
push
jg
mov
mov
xor
into
scas
jb
xor
nop
cmp
push
pusha
aad
add
push
int3
adc
mov
push
sbb
test
pop
lds
or
movsl
mov
aaa
loope
test
mov
adc
test
cli
fcos
jmp
rolb
sub
bound
or
fsts
nop
ret
out
pushf
cmp
call
mov
and
rol
sbb
push
idiv
jne
xchg
pop
cltd
jmp
mov
jmp
add
outsl
dec
push
mov
cmc
jb
dec
jb
mov
sub
and
mov
loop
in
outsb
cmc
inc
xchg
popa
iret
mov
test
xor
pop
sbb
lcall
imul
decb
js
les
repnz
loope
jg
mov
shrl
test
mov
cmp
inc
into
stos
pop
lds
test
cld
jle
cmpsb
adc
jmp
pusha
sbb
push
enter
mov
pop
decl
jns
ja
outsl
andb
inc
subps
es
scas
in
xlat
decl
dec
jmp
adc
adc
in
sbb
nop
adc
jne
bound
push
xchg
inc
cld
decl
jbe
cwtl
mov
je
sbb
bound
ficoms
mov
mov
mov
pop
das
addl
cltd
fistpl
mov
pop
out
notl
mov
std
leave
mov
inc
ficompl
int3
cld
lahf
std
push
xor
pop
les
push
adc
cli
push
decl
inc
add
imul
xchg
movsb
jecxz
decl
lock
loop
jecxz
push
push
jl
fstps
ja
and
imul
clc
decl
push
inc
ljmp
cs
icebp
fsubl
fistpl
movsb
lcall
fistpl
enter
mov
or
insl
clc
inc
int
fildl
push
ja
int3
pusha
cwtl
push
arpl
ret
inc
xchg
int
call
sbb
lahf
mull
lret
jp
enter
or
push
icebp
test
push
jl
inc
and
sar
push
or
stos
cmpl
xchg
fwait
gs
jg
jmp
xor
rcrl
dec
inc
pop
imul
decl
in
push
add
imul
jnp
lea
out
xchg
push
in
mov
ljmp
js
out
jle
pop
adc
cmpsl
ja
cmpsb
xlat
push
fidivrs
call
pop
dec
repz
popa
sbb
dec
pusha
push
mov
sub
lcall
dec
mov
icebp
in
sbb
lods
jl
xlat
add
mov
mov
jle
loopne
or
jnp
jg
call
mov
push
or
dec
aad
add
test
push
loopne
mov
jnp
fcoms
add
test
sbb
jmp
into
sti
loope
xorb
out
jbe
or
mov
out
cli
loope
dec
js
lret
dec
pop
loope
decl
in
inc
mov
lahf
fwait
out
into
sbb
add
cld
pop
xor
std
mov
pop
push
mov
sbb
cs
or
jl
inc
insl
je
test
icebp
orl
push
lds
leave
dec
pop
aam
xchg
push
incb
out
sub
jns
adc
stos
int
cwtl
or
push
push
jbe
repnz
rolb
leave
outsl
fcoml
lds
inc
hlt
lcall
je
cli
pushf
mov
dec
mov
mov
inc
int
loope
mov
fisubrs
add
inc
nop
adc
jb
imul
ret
cmp
decl
push
js
mov
jae
or
hlt
jp
mov
inc
mov
cmp
cmp
inc
repz
jnp
sahf
lds
incl
lahf
cmc
jbe
push
sub
add
rorl
subl
pop
mov
decl
in
scas
jbe
jnp
jb
mov
xchg
leave
jno
jg
ljmp
cmp
mov
and
mov
fcoml
add
lcall
jg
lcall
idivl
scas
sub
push
adc
shr
push
pop
adc
lahf
lock
std
dec
push
push
dec
in
addr16
test
in
call
decl
jbe
fwait
dec
loope
adc
aas
pop
es
imul
enter
sub
incl
mov
mov
shlb
out
test
sbb
or
jb
xor
and
addr16
or
sbbb
sbb
add
pop
xlat
int3
repnz
add
xchg
fisubl
and
aad
jnp
ds
test
cmp
add
or
iret
xor
jmp
sbb
xorps
out
push
test
mov
lret
pop
sbb
jg
in
ds
call
popl
rcll
adc
or
mov
mov
lcall
push
push
js
cs
fdivrl
test
data16
push
lcall
jmp
jmp
adc
dec
push
repnz
jge
into
shl
lcall
mov
sub
data16
aam
out
andl
lods
mov
incl
mov
push
rep
mov
ret
cmp
outsl
in
mov
popf
xor
cmpl
jmp
jge
pop
inc
pop
jne
xchg
out
fimuls
scas
movl
call
adc
inc
testb
mulb
jnp
add
lods
xor
pop
pop
sbb
aaa
decl
enter
mov
loopne
fcmovb
push
lcall
mov
jmp
mov
jmp
sahf
aaa
xor
fdiv
push
je
ret
fistpl
adc
js
hlt
cltd
sbb
pushf
jg
jb
mov
ret
sub
aaa
rclb
in
mov
lcall
mov
leave
jle
xchg
subb
popa
mov
neg
fstpl
dec
ss
jbe
not
je
decl
rclb
rcll
js
jns
arpl
outsb
add
daa
push
test
push
ret
insb
adc
outsl
sti
jge
jbe
cmp
int
mov
notl
and
lds
call
shl
and
jns
cmp
test
dec
dec
mov
push
frstor
mov
push
sbb
mov
dec
test
lock
pop
ljmp
lock
xchg
add
loope
push
add
jo
dec
lcall
sbb
fwait
mov
jmp
rep
mov
or
mov
and
aas
shll
sub
mov
xchg
jmp
dec
xchg
les
sbb
int3
cmp
pop
js
arpl
call
jns
add
pop
xor
nop
inc
das
adc
mov
fildll
orb
icebp
xor
sbb
insb
out
cs
adc
jle
jmp
mov
out
mov
mov
scas
xor
mov
in
js
push
aas
inc
add
loope
inc
xor
add
or
pushl
popa
fidivrs
mov
cmpsl
sbbl
lcall
adc
das
daa
cltd
add
in
push
pop
mov
push
daa
or
popf
push
ljmp
mov
mov
out
jg
jl,pt
out
adc
or
and
adc
shlb
push
lock
xchg
imulb
push
mov
sub
adcl
push
lock
xchg
clc
das
call
cmc
dec
dec
adc
push
jo
mov
inc
dec
xchg
fldcw
shrb
out
xor
jmp
mov
gs
and
cltd
jp
dec
in
xor
or
dec
push
mov
lods
add
insl
in
add
cmp
ds
jmp
je
mov
mov
cmp
scas
insl
sbb
push
scas
enter
mov
stos
decl
loopne
fsubs
mov
xchg
cs
stos
xchg
inc
call
std
test
dec
mov
das
pop
ret
xor
jae
inc
arpl
cmp
pop
out
mov
push
std
cmp
into
mov
jns
repnz
je
ds
adc
test
clc
pushl
js
lds
jnp
mov
add
mov
das
test
mov
jmp
jns
ss
cmp
sbb
outsb
jmp
mov
mov
fwait
out
fildl
lcall
xchg
clc
mov
mov
push
add
decl
mov
lock
xchg
fadds
cmp
loop
or
pop
fs
pop
jno
in
pop
cmp
lods
fildll
mov
inc
repz
xor
inc
push
enter
fisttps
insl
push
xchg
dec
mov
jns
mov
idiv
mov
jns
sub
dec
mov
scas
jg
lock
ficomps
shll
ljmp
idivl
and
call
push
subb
push
push
mov
popa
sarb
lahf
pop
loope
rcrb
jmp
xchg
push
imul
xchg
lods
lcall
sub
and
mov
xchg
mov
pusha
or
and
jns
mov
inc
push
cmpsl
push
fisubl
lods
fistl
mov
imul
aas
mov
std
or
mov
cwtl
adc
loope
ret
call
mov
add
iret
imul
pop
push
mov
jne
loop
lcall
push
jl
in
inc
mov
xor
cwtl
pop
mov
ret
xlat
add
pushl
jb
cwtl
jp
sub
insb
jae
mov
pop
int
flds
mov
ljmp
xlat
push
push
mov
shlb
cwtl
std
cmp
std
mov
push
inc
int3
add
call
lret
jle
or
sbbl
scas
pop
fs
pop
std
sbb
inc
addl
daa
and
ja
andb
ja
push
clc
cld
cmp
xchg
arpl
push
cmp
jg
sar
push
push
push
jmp
add
xor
or
cmc
repz
enter
pop
xchg
lods
aam
lcall
enter
cmpsl
lcall
popf
imul
decb
jo
loop
mov
lcall
xor
popl
or
movsb
subl
andb
cmp
stc
add
call
dec
xlat
repz
adc
lcall
mov
jb
clc
outsl
mov
or
decl
pusha
lret
or
jnp
lea
clc
mov
jnp
xor
cld
decb
adc
decl
mov
into
jp
mov
sti
out
imul
jle
lret
xchg
push
gs
sbb
nop
pushl
enter
xor
inc
cmp
rcll
je
and
sbb
loope
incl
loope
lret
inc
pushf
test
pop
outsl
movsb
popa
jo
neg
add
pop
call
pop
and
lods
jecxz
in
xchg
or
pop
mov
xchg
cmp
add
outsb
ljmp
adc
cld
shrb
cld
adc
mov
mov
iret
or
and
cmc
lock
scas
jno
insl
mov
sbb
popa
pop
or
push
std
cmpsl
call
incl
or
sti
test
dec
cmp
adc
fst
pop
aaa
mov
shrl
fcomip
pushl
sub
cmp
mov
cltd
cld
cmpsl
cmpsb
mov
je
stos
fs
pushl
push
jl
dec
pop
inc
mov
test
sti
cs
xchg
inc
jbe
mov
hlt
push
idiv
incl
sub
xchg
sbb
enter
pop
mov
pop
jp
fwait
xchg
out
adc
mov
dec
out
aaa
adc
lcall
xor
jo
jmp
sub
popf
test
adc
fistpll
xchg
and
sahf
cmc
add
in
xor
or
jno
decl
bound
lret
and
ret
adc
lret
shrl
ja
call
push
pushf
imul
mov
imul
or
das
out
mov
dec
mov
lcall
jmp
push
movsl
andl
lret
mov
or
scas
mov
adc
sbb
add
dec
inc
and
push
jp
mov
insb
mov
mov
jmp
mov
aaa
dec
lds
sub
cmp
repz
je
xor
call
jg
stos
xchg
int
xor
push
inc
xor
sbb
mov
pop
or
and
inc
adc
mov
mov
in
sub
vpsubd
icebp
ljmp
jbe
sub
ficompl
and
push
outsb
subb
xchg
loope
or
or
hlt
loope
mov
sub
cmpsl
xchg
and
dec
jl
pop
jmp
jno
dec
aaa
xchg
ret
sti
fidivs
push
je
stos
pop
and
pop
mov
inc
or
enter
push
popa
pop
jnp
jmp
push
jg
decl
in
out
xor
iret
cwtl
or
jge
jge
mov
sahf
arpl
adc
jmp
popf
ret
mov
dec
int
enter
push
or
push
ljmp
imul
pop
sbb
push
notb
sbb
cwtl
sub
mov
test
jecxz
pop
adc
leave
dec
cmpsl
adc
lock
sub
shll
push
call
pop
and
dec
insb
ret
inc
xor
cmp
mov
mov
mov
xor
pop
jns
aam
decl
imul
pop
movsl
jge
outsl
mov
jle
jns
xor
popa
out
loopne
cmp
scas
sub
dec
mov
mov
mov
pop
push
push
lcall
stos
jge
lea
sub
orb
push
movsb
divl
xchg
sub
sub
push
fisubrl
adc
inc
test
push
sbb
les
push
and
outsb
leave
pop
adc
hlt
sbb
out
outsl
pop
test
loopne
gs
aaa
fs
data16
scas
pushf
inc
adc
into
test
or
cmp
inc
dec
aas
sbbl
xchg
outsl
lds
jg
clc
aad
jnp
xchg
lahf
xor
outsl
push
cld
out
outsl
and
ljmp
outsl
pop
mov
push
mov
imul
testl
fmuls
mov
pop
adc
ljmp
pop
push
mov
out
dec
jge
call
loopne
call
sub
push
cmpsl
mov
clc
push
or
call
mov
add
daa
call
mov
lret
out
pop
shrb
cmp
cld
clc
ljmp
jbe
test
addr16
mov
lcall
inc
mov
je
pop
incl
and
dec
roll
jno
or
scas
leave
movsb
shll
lret
mov
jg
mov
push
sbb
mov
or
pop
lcall
jmp
fimull
dec
push
adc
jle
nop
insb
mov
mov
cmp
fwait
in
incl
mov
xor
test
cmp
imul
int
lahf
cmpsb
flds
outsl
ljmp
insb
xor
push
xorb
or
decl
movsb
jne
sbb
ljmp
or
adc
mov
filds
es
incl
les
push
lret
adc
orb
inc
dec
pop
fsubrs
ud0
incl
les
lods
lcall
sbbb
pop
ret
lods
test
jg
lcall
lcall
ret
mov
and
mov
dec
fisubl
jmp
mov
pop
add
inc
in
xchg
loop
je
dec
and
jo
bound
lods
add
dec
sub
add
js
daa
clc
push
stos
push
dec
rolb
faddl
push
xchg
fidivrl
decl
xchg
push
icebp
push
lahf
nop/reserved
cli
faddl
insb
mov
xchg
inc
jne
test
cld
mov
jmp
clc
addl
out
ja
dec
pop
or
jg
jo
cld
lahf
loopne
inc
and
mov
mov
or
stc
out
clc
jmp
mov
pop
lock
xchg
cli
pop
subb
imul
cli
mov
mov
fisubrl
shrl
rcrl
xor
out
mov
xchg
push
jnp
pop
ljmp
lret
cwtl
mov
nop
sbb
adc
jmpw
out
je
lods
daa
nop
xlat
insl
xor
dec
leave
or
sub
pusha
inc
std
dec
cld
sub
jp
adc
pop
mov
ljmp
mov
dec
or
iret
int3
loop
ja
pop
mov
jmp
lea
arpl
decl
loopne
mov
mov
ret
mov
out
xchg
mov
or
sub
ljmp
nop
lock
lds
out
cmp
das
test
inc
outsl
incl
cmp
test
jne
lret
xchg
lret
cltd
cmp
inc
xchg
mov
add
ja
mov
pop
test
out
sbb
popf
ljmp
aas
mov
test
addr16
in
push
sahf
jmp
cmp
pop
add
lret
lods
xlat
sub
pushl
xlat
lret
xchg
icebp
add
sarb
jmp
cmp
cmp
add
idiv
decl
sbb
adc
inc
pop
aas
aas
push
notl
xor
lea
test
adc
and
cmc
sub
sub
xor
mov
or
pushl
es
cmp
xchg
pop
or
jmp
mov
ss
xor
decl
mov
pop
or
call
jp
test
sbb
jo
pop
or
enter
fiaddl
mov
movsb
mov
and
xor
lcall
int3
or
incl
imul
and
mov
jo
sbb
or
jne
push
mov
stc
shll
mov
adc
pushf
mov
dec
pop
or
es
fimuls
popa
cmp
data16
pushl
mov
jne
clc
xor
mov
push
pop
sbb
call
pop
dec
sub
decl
lock
adc
add
push
push
xlat
fstl
add
ljmp
push
mov
add
mov
lcall
lret
mov
mov
push
and
nop
in
jge
push
out
hlt
add
std
incl
pop
insb
sbb
fiadds
outsl
mov
or
sbb
out
sbbb
dec
shrb
loop
push
movsl
cmp
xchg
arpl
lcall
sbb
pushf
push
cmp
jl
call
outsl
loop
ljmp
pop
sbb
cmp
inc
and
mov
lea
std
ljmp
sub
rcr
test
and
jmp
pop
or
stos
hlt
sbb
cmp
call
cmp
bound
sbb
lahf
mov
pop
jo
int3
xchg
out
cmc
jp
vmread
or
daa
and
and
xchg
mov
test
pushl
mov
pusha
sbb
cmp
and
xchg
dec
mov
mov
call
rcll
idivb
in
cmp
xor
jmp
into
mov
adc
adc
inc
inc
cltd
or
jmp
lds
cmpsb
call
mov
mov
ss
dec
out
inc
lock
into
adc
cld
fwait
xor
aaa
mov
je
jo
adc
loop
xor
arpl
dec
cmp
adc
inc
xchg
stos
xchg
stos
repz
xchg
push
repnz
cmp
imul
imull
mov
xchg
iret
mov
sti
mov
fcomip
call
mov
cltd
and
scas
pop
icebp
nop
loopne
movsl
out
sbb
cwtl
push
in
and
lcall
pop
sbb
repnz
ret
cmp
sbb
lds
popa
mov
jmp
sbb
and
cmp
jbe
jl
ffree
push
fistps
or
enter
nop
lret
inc
nop
sbb
lcall
divb
cltd
jnp
pop
sub
lcall
sbb
dec
ljmp
dec
xchg
jnp
adc
jg
ja
loopne
jne
sti
out
test
mov
loopne
insb
push
inc
sbb
outsb
mov
imul
iret
test
aam
mov
bound
inc
pop
test
cld
lcall
das
out
ret
into
xchg
mov
nop
pop
cmpsb
adc
or
or
decl
pop
arpl
dec
insb
rolb
fs
xor
push
jns
xchg
aas
xchg
sbb
arpl
cli
push
xchg
ljmp
or
cltd
cli
mov
decb
outsl
repnz
xor
jp
pushl
push
leave
cld
leave
aam
bound
lock
loop
sbb
divb
pushl
cmp
int3
inc
pop
sti
iret
mov
mov
aas
lahf
add
stc
adc
stc
call
lcall
das
enter
mov
xor
xor
or
xchg
mov
jle
or
loopne
push
inc
pop
jle
sbb
loop
or
pop
jmp
ljmp
jg
fnstcw
inc
pop
xor
loopne
cld
and
ret
adc
push
and
push
cmpb
decl
xchg
pop
mov
jle
mov
pop
pop
xor
in
sub
mov
aaa
cmp
jo
pop
ljmp
adc
push
dec
mov
xchg
sbb
mov
and
xchg
adc
jbe
jmp
mov
adc
leave
dec
stc
stos
adc
out
mov
xor
jg
add
jnp
insl
xor
mov
pop
loopne
lods
jmp
jp
out
jno
loop
xor
stos
loopne
xchg
test
pop
shll
mov
scas
xchg
jns
mov
hlt
xchg
mov
das
push
fdivrs
xlat
mov
sbb
adcl
mov
repnz
test
sbb
cmp
and
sub
ljmp
add
pusha
mov
pop
ret
push
sub
fwait
mov
and
popa
fimuls
sbb
call
aad
pop
push
dec
push
dec
adcb
mov
cmpb
clc
ror
mov
dec
push
negl
lcall
dec
jge
push
sti
jmp
insb
scas
popa
enter
jmp
cmp
mull
dec
insb
mov
dec
push
das
jo
xor
loop
add
push
pushl
imul
push
pop
sbb
jb
adc
sbb
gs
in
test
dec
push
lcall
jno
push
or
sbb
ficompl
rcrb
out
push
fs
lods
gs
pushl
cmp
xor
dec
sub
xor
xchg
idivl
hlt
xor
incl
mov
add
or
mov
xor
mov
adc
cmc
decb
cmpsl
aas
adc
push
lret
test
rol
ja
in
mov
fbld
jne
jmp
in
aaa
cmp
fiaddl
adc
push
fisttpl
cld
stos
loope
mov
jae
fmull
popf
sub
dec
push
imul
inc
jbe
jecxz
lcall
icebp
push
push
pop
subb
push
mov
mov
and
hlt
lahf
lret
xchg
xchg
imul
jmp
data16
xchg
lods
faddp
sbb
push
out
push
nop
jl
xchg
movsl
ret
add
jno
ljmp
pusha
ds
imul
jns
es
sub
loopne
ljmp
testb
push
mov
jo
stc
sbb
sub
cmp
jg
xchg
dec
xor
lcall
loop
mov
arpl
scas
xchg
inc
pop
xadd
jmp
sub
and
in
mov
outsl
clc
jmp
mov
dec
adc
popf
fwait
insl
push
fcompl
dec
inc
fcomip
call
adc
icebp
sbb
add
cmpsl
es
out
jg
mov
hlt
and
in
dec
jo
inc
rcrl
lahf
enter
ljmp
in
mov
jl
xor
inc
sub
or
fisubs
clc
cmp
ja
sar
lcall
cmp
sbb
inc
and
orl
jno,pn
mov
pop
repnz
xchg
fistpll
push
adc
dec
js
orb
mov
call
mov
push
cmp
bound
jnp
shr
cli
ja
push
rcr
pop
mov
fcoms
jmp
mov
ds
stos
mov
lcall
in
add
xchg
mov
scas
js
mov
sub
clc
or
dec
cmp
out
in
mov
mov
ja
arpl
ficoml
xorb
incl
icebp
scas
mov
stos
and
inc
insl
push
xchg
pop
dec
dec
xchg
mov
ljmp
cmp
les
jno
loopne
cld
jl
in
pop
div
inc
call
or
js
add
cs
inc
shll
incl
jae
lahf
andl
jo
cli
mov
mov
enter
mov
sbb
push
loope
lock
loopne
sbb
ret
sbb
daa
push
test
movsb
inc
jg
fwait
incl
cmpsl
and
mov
shrl
bsf
outsl
pushl
stos
lahf
test
mov
fadds
stos
les
push
adc
mov
loop
push
cld
adc
call
inc
aam
hlt
ret
out
loop
arpl
flds
lods
pushf
imull
dec
ljmp
xor
inc
hlt
or
enter
fs
in
add
fcmovu
push
fcoml
outsb
adc
adc
jnp
mov
jno
shlb
ret
mov
scas
das
incl
imul
fs
jns
fsubs
gs
xchg
lret
sbb
mov
push
jmp
hlt
movsb
jecxz
mov
fistps
add
das
out
pop
cmp
jg
into
int3
sub
jle
jg
pop
gs
push
test
cmc
lds
insb
repz
in
lods
mov
jp
push
fwait
cld
mov
mov
dec
and
push
ss
ja
pop
fs
inc
scas
sbb
mov
jbe
xor
insb
sbb
call
add
arpl
fucomp
imul
stc
add
clc
mov
clc
aad
shll
dec
movsl
pop
mov
rolb
in
xchg
fs
daa
inc
test
loope
sbb
std
popa
mov
or
stos
mov
ljmp
adc
stos
imul
rclb
repnz
stos
add
subl
les
jnp
pop
sub
dec
mov
or
dec
xchg
xchg
mov
push
cmp
into
bound
jmp
adcb
lock
lcall
lods
add
inc
xchg
clc
inc
mov
pop
push
cltd
incl
xor
and
sbb
mov
je
mov
sub
call
ljmp
add
imulb
sahf
add
pusha
adc
pop
test
sti
decl
push
mov
or
repnz
sub
out
movsb
xchg
cmp
jecxz
ds
pop
add
into
add
test
pop
inc
mov
and
fiadds
inc
and
and
push
push
and
jb
ja
pop
mov
sub
int3
dec
cld
jmp
push
vmovdqu
xor
or
fldcw
lea
sbb
dec
and
add
fbstp
call
push
lahf
xchg
pop
dec
repz
push
loopne
orl
or
or
ret
jge
decl
int3
inc
sbb
rorl
mov
sub
add
dec
aaa
std
mov
pushl
mov
jge
cmpsb
aas
xchg
mov
int
in
je
shl
std
cmp
pop
lcall
sbb
jne
mov
fistps
sub
xor
fadds
scas
call
shlb
push
shrl
mov
pop
aaa
popf
cmp
sub
inc
push
out
out
lock
pushl
cmpsl
jne
das
mov
jg
xchg
and
pushl
lret
setle
jmp
pop
mov
push
add
sub
hlt
leave
sub
lods
outsb
mov
jbe
out
ljmp
test
scas
mov
pop
fwait
dec
adc
or
mov
popf
xor
cwtl
pop
stos
movl
out
cmp
popf
mov
jns
std
jg
lcall
jbe
stos
push
dec
pop
shll
dec
cltd
lcall
fwait
testb
or
jmp
adc
fiadds
and
and
jmp
xchg
mov
sub
jl
scas
cmc
cs
sahf
adc
inc
pushf
adc
adc
adc
call
inc
loop
mov
call
sahf
xchg
mov
pop
rcrl
jno
xchg
or
push
cs
ljmp
push
mov
ds
add
arpl
inc
mov
inc
dec
sarb
sub
lods
push
pushl
je
xchg
iret
cmpsb
pushf
jno
fimuls
lcall
jl
dec
pop
sar
dec
add
adc
mov
pop
popf
or
dec
or
mov
in
fdiv
ficoml
ljmp
adc
jle
lods
mov
decl
repnz
jecxz
jo
xor
cmpb
je
jbe
add
pop
repz
shrb
arpl
mov
repz
sub
or
incl
lea
test
fdivl
fmull
jb
inc
inc
icebp
mov
jp
lret
pushl
jo
pop
mov
jne
jo
fdivp
aas
ret
aaa
mov
imul
sbb
out
loop
ja
inc
jo
add
orb
xchg
pop
jbe
es
mov
ret
xchg
push
out
xchg
xchg
ss
das
push
loope
sub
ds
loope
andb
incl
outsl
jg
push
jo
jl
jecxz
stos
adc
mov
xchg
mov
mov
lods
rcrb
push
aas
xor
std
outsb
nop
incb
dec
mov
mov
ja
ja
and
ja
mov
sarl
iret
mov
call
mov
adc
imul
std
jns
std
pop
jbe
mov
mov
jp
pop
repz
aaa
or
mov
lret
xlat
pop
sbb
int3
cmpps
jmp
xor
insl
jae
shlb
aaa
fcoml
or
push
jp
pop
and
cli
mov
aaa
cld
call
jp
adc
shll
push
rolb
call
lock
pushl
std
call
cmp
xchg
lods
outsl
inc
sar
lods
stc
sbb
jo
cmp
lods
push
or
xor
rorl
scas
loope
pop
pop
inc
adc
lea
adc
mov
call
inc
cld
add
or
xchg
pop
xor
xor
dec
in
enter
test
push
jne
sub
pop
dec
jmp
mov
repz
mov
jo
pop
insl
int3
out
jnp
or
filds
out
xor
pop
mov
xchg
dec
call
sub
dec
outsl
lods
pop
addb
xlat
mov
mov
jne
mov
inc
mov
mov
imul
call
xchg
ror
jb
mov
pusha
mov
dec
sarb
pop
dec
cmp
sahf
jle
mov
call
leave
xchg
xchg
and
xchg
sbb
xchg
outsl
cwtl
ss
lods
bound
add
and
mov
scas
mov
test
cmpsb
loopne
movsbl
int3
js
aad
lock
incl
mov
fidivrl
lret
xor
repz
ljmp
ljmp
ret
pop
jl
xor
xor
and
fcomip
jno
jg
push
mov
arpl
push
mov
dec
pop
aas
xchg
and
mov
insl
in
add
scas
out
jecxz
add
or
and
mov
add
lcall
adc
dec
sub
push
in
pop
ljmp
lret
scas
ret
cli
sarb
inc
mov
call
repnz
mov
outsl
mov
and
or
ja
cmp
pop
icebp
jmp
outsb
mov
mov
cmp
xor
mov
mov
inc
aaa
and
pop
mov
lret
out
jnp
adc
xor
scas
or
push
outsb
xchg
repz
cmp
push
pop
clc
inc
adc
in
int
sub
jne
incl
and
fsubs
aaa
cmp
outsl
add
inc
ss
ret
sub
inc
mov
in
xchg
adc
ljmp
test
lahf
out
out
iretw
xchg
xchg
cmpsl
lds
or
adc
int3
push
mov
sarl
outsb
out
cmp
sub
mov
push
sbb
jnp
mov
push
stos
and
xorb
inc
arpl
outsb
push
add
add
mov
xchg
jnp
les
cld
lcall
pop
loopne
xchg
pushf
push
inc
rolb
mov
mov
in
push
mov
inc
loopne
dec
xor
je
jp
stos
fwait
in
cld
or
pushl
cmp
push
pop
push
and
push
mov
and
push
ds
lods
in
pushl
push
jecxz
jns
mov
dec
mov
out
rolb
cs
mov
jmp
add
jle
lret
push
xlat
sub
nop
clc
shl
test
pushl
mov
mov
pop
xchg
stos
pushf
jge
pushl
into
cmc
add
clc
xor
in
insb
or
cmp
cmp
mov
faddl
ljmp
repnz
xor
fimull
aas
push
popf
mov
incb
dec
lods
ss
adc
jmp
jns
xor
repnz
sbb
cmp
push
push
push
lret
xchg
sbb
sbb
mov
pop
ret
test
test
pop
xchg
and
movsl
lret
into
arpl
out
fimull
sti
decl
and
adc
lret
gs
pop
shr
pop
lret
cld
cltd
cmpsb
test
pop
ljmp
sbb
adc
andb
inc
movsb
pusha
dec
xchg
mov
dec
sbbb
push
cmp
psubw
push
scas
jl
loop
mov
cmp
arpl
loope
in
stc
jle
cmpsl
stos
jge
mov
lods
inc
push
dec
in
jecxz
lods
inc
test
cmp
outsl
into
jbe
aad
in
mov
movsl
mov
ljmp
lret
test
clc
and
outsl
sub
push
jae
jl
in
jg
push
pop
repnz
out
dec
add
js
das
inc
lods
ljmp
ja
loope
call
loopne
fdivs
imul
test
push
leave
subl
fcomip
pushl
cmp
jmp
xchg
pop
mov
insb
mov
or
out
hlt
movsl
in
adc
in
outsl
out
addr16
pusha
mov
loopne
cwtl
lahf
sub
sub
sahf
pop
sub
cmp
xchg
sbb
daa
pusha
out
lods
cmp
shrb
ss
sbb
cs
iret
pusha
inc
mov
xchg
pop
repnz
add
mov
test
dec
mov
sbb
push
aam
cmpsb
xchg
mov
out
xor
mov
pop
push
jmp
push
or
mov
push
fbstp
jo
orb
cmp
adc
mov
and
jbe
push
aam
lcall
mov
out
les
jg
pop
jae
dec
cmp
sbb
decl
xor
adc
jns
in
jne
xchg
pushf
sub
lds
jbe
push
ljmp
and
sub
test
imul
or
push
mov
decl
push
push
jecxz
inc
jl
pop
push
jno
inc
mov
ljmp
xchg
rcrl
pop
in
mov
cli
mov
or
aas
pop
jg
incl
dec
jae
pop
add
gs
add
rcl
dec
push
out
pop
xor
pop
popa
loop
sti
inc
in
cwtl
fstps
fcmovbe
adc
js
decl
in
sbb
lock
or
gs
mov
fists
jg
or
incl
xchg
mov
inc
lock
pop
xchg
mov
out
nop
movsb
fcoms
rcrl
call
mov
or
dec
mov
insb
lods
adc
mov
out
pop
cmpsb
dec
inc
inc
cltd
popf
decb
outsb
hlt
popf
ljmp
xor
sbb
xor
xor
mov
mov
imul
pushl
xor
pop
jno
gs
jae
shrl
jge
mov
in
dec
mov
out
jmp
cld
pop
pop
sub
pop
jae
dec
or
jmp
outsb
adc
fldt
enter
lock
ja
pushl
and
push
outsb
gs
lcall
clc
cmp
mov
subb
cld
and
inc
adc
out
aam
xchg
pop
adc
or
call
push
shrl
or
dec
pop
add
jnp
out
push
int3
aam
adc
pop
and
lcall
mov
jg
push
push
sarb
popf
shll
sbbl
std
sbb
test
loope
sar
decl
mov
inc
sbb
push
mov
jnp
clc
test
lds
je
pop
popa
pop
sbb
fadds
jg
pusha
jle
mov
mov
mov
cs
and
ja
int3
jno
add
mov
scas
lock
mov
add
ljmp
or
pop
push
jno
rcll
cmp
sub
aaa
pop
mov
fistps
or
sub
cmpsl
test
inc
mov
jo
or
pop
loope
pop
out
add
push
mov
outsl
decl
ja
jo
or
pop
push
or
jo
or
inc
mov
pop
mov
jbe
ret
out
dec
dec
adc
sub
xor
outsb
or
sub
fs
push
push
mov
fmull
ret
fmull
pop
mov
fistpll
sbb
or
fcompl
mov
mov
fwait
pop
add
inc
mov
sub
je
cmp
es
mov
sti
incl
or
jo
adc
xor
inc
adc
popa
xchg
rorb
mov
decl
in
movsb
pushl
jo
mov
in
sbb
xchg
xchg
push
cmpb
push
insb
movsb
xor
push
mov
ret
outsl
pop
das
pop
jmp
hlt
cld
lods
in
jmp
or
inc
fisubl
int3
inc
sbb
nop
outsb
iret
icebp
jns
push
push
mov
jp
xchg
jl
inc
xor
fs
data16
pop
jae
sbbl
fcomip
pushf
mov
dec
inc
rorb
push
movsl
rolb
and
jge
inc
mov
jmp
sti
cwtl
lods
hlt
add
or
iret
test
sahf
leave
leave
push
adc
add
mov
or
data16
or
cmp
ljmp
fs
js
std
lods
mov
mov
ds
dec
dec
scas
rorb
adc
jl
xchg
dec
sbb
mov
or
jns
sbb
jmp
in
add
push
or
push
scas
cmpb
aaa
es
and
test
ret
outsb
push
add
ret
aas
cmpl
mov
mov
sbb
fnclex
jge,pt
out
clc
ljmp
xor
fsts
mov
hlt
xlat
loop
aas
and
lcall
mov
xor
adc
adc
dec
das
pushf
lds
and
outsl
cld
inc
call
movsl
inc
xchg
jle
pushf
cmpsl
mov
loope
mov
test
int
jnp
arpl
ljmp
or
jg
xlat
adc
adc
in
fs
sbbl
xor
in
rclb
test
mov
jmp
mov
mov
jge
decl
rorl
call
daa
fstp
mull
mov
cmp
ljmp
jne
cmc
inc
lea
mov
lods
mov
mov
rcl
push
add
adc
and
in
ja
or
mov
fistpll
pushl
mov
push
jns
lods
dec
das
das
aas
movsl
shll
scas
stos
xor
pop
ret
push
pop
mov
cld
xchg
jg
cmpsb
and
stos
pop
adc
push
inc
mov
xor
clc
inc
lahf
pop
and
xchg
mov
push
cld
movsl
xor
pop
mov
fwait
ljmp
jge
popf
mov
jo
loopne
push
scas
xchg
out
adc
std
lcall
jb
notl
pop
out
loope
lds
or
out
roll
adc
jge
call
jb
mov
out
dec
mov
mov
push
xchg
sbb
lock
pop
dec
dec
jge
add
imull
sbbb
pop
lock
mov
iret
clc
push
test
cli
xchg
inc
outsb
aam
sub
scas
cmp
hlt
xor
mov
adc
es
or
test
mov
mov
mov
lods
xchg
call
rcrb
and
mov
and
iret
jl
pop
mov
or
inc
repnz
lret
sahf
popa
leave
pushf
add
mov
std
pop
pushl
std
stc
sbb
lret
pop
cli
or
lods
mov
lds
lods
xorb
jg
incl
xchg
or
mov
xchg
repz
fisttpll
pop
stos
decl
cwtl
fwait
cmp
sbb
mov
lcall
test
cmp
push
pop
mov
je
in
call
jle
decl
lock
in
xchg
xchg
pop
push
cld
xchg
test
inc
js
inc
adc
int
jmp
xchg
sbb
xchg
je
mov
jg
cli
ja
push
not
decl
notb
stos
sahf
test
cltd
push
push
jp
and
daa
xor
or
daa
je
mov
fs
test
fsubs
cs
scas
pushl
cld
call
jmp
fisubrl
fcomps
js
daa
mov
gs
xchg
cmc
push
rol
dec
inc
push
mov
lcall
ljmp
xor
mov
in
in
xor
arpl
decl
push
mov
subl
dec
adc
xchg
pop
sub
imulb
xchg
outsb
add
jmp
rorl
or
pop
pop
mov
sbb
pop
mov
and
fiadds
jmp
mov
mov
icebp
popf
repz
cmp
mov
or
pop
mov
cld
scas
ljmp
ficompl
mov
ja
test
negb
loopne
push
scas
fwait
rcl
jns
inc
mov
adcl
jge
jbe
sub
cmp
movsl
lret
popf
clc
std
mov
fdivrl
jge
fmull
sbb
cmp
popf
lea
xchg
jns
out
mov
popa
notb
mov
cmp
mov
inc
gs
jmp
aad
pop
std
and
scas
sarl
fdivs
out
loope
adc
jmp
neg
mov
test
pop
cmpsl
lds
dec
popf
xor
push
outsb
aad
push
ljmp
clc
ljmp
jmp
pop
jo
push
ljmp
xor
pop
jno
push
push
outsb
hlt
sarb
sbb
mov
test
clc
jecxz
dec
sub
mov
or
jl
adc
pushf
insl
mov
xchg
js
jmp
jg
adc
decl
ret
rcrb
dec
add
jns
cmc
ficomps
das
jge
xlat
jge
mov
pop
xchg
cmpsb
addr16
in
fsubp
fbld
mov
out
mull
dec
jne
cmp
ljmp
loop
jp
xchg
negb
out
gs
addr16
in
testl
ljmp
dec
in
aaa
imulb
mov
in
leave
fucomi
fmull
mov
incl
cmpsb
jnp
mov
loopne
push
and
sarl
pop
je
mov
push
addb
repnz
add
add
shl
in
shr
dec
div
fcomip
mov
push
ret
outsl
mov
cmc
mov
and
dec
and
mov
pushf
inc
mov
sti
pushl
cld
push
cli
roll
ffree
inc
jge
xor
arpl
lahf
nop
push
call
add
ljmp
pop
sub
loopne
shl
cli
jmp
pop
cmp
or
das
or
in
das
fbld
fcmovbe
mov
mov
xor
in
ljmp
call
add
sbb
testl
mov
pop
xchg
movsb
popa
insl
xchg
fiaddl
sti
fwait
push
je
jns
out
mov
scas
mov
sbb
sbb
cmp
ret
je,pt
xchg
pop
xchg
cld
lret
loope
or
add
mov
pushl
pop
test
mov
mov
xchg
mov
icebp
xor
clc
lds
ljmp
lock
mov
inc
inc
mov
insb
pop
push
and
call
scas
bnd
fstpt
lret
popf
daa
jmp
leave
loop
pop
fld
out
dec
test
cmp
mov
aaa
rcrb
ljmp
pop
and
imul
ljmp
mov
sbb
daa
lcall
pop
test
xor
sarl
sub
jg
mov
mov
or
xchg
sbb
mov
pushl
test
pop
xchg
fndisi(8087
xor
aas
enter
and
arpl
and
mov
push
push
adc
cmp
cld
sbb
xchg
into
push
cmp
enter
data16
push
adcl
mov
lret
cmpb
pop
ss
pop
sete
mov
in
and
dec
inc
pushf
adc
cli
push
rcll
xchg
or
sbb
adc
dec
ljmp
inc
popa
fcmove
das
hlt
in
xor
adc
popl
push
sub
ljmp
and
pushl
jno
test
pop
xchg
pushf
sub
ss
and
lods
mov
or
pop
jae
mov
incl
lods
loope
push
and
js
sub
mov
cmp
mov
dec
les
jmp
pop
stc
jle
out
pop
sub
aad
sbb
popa
std
movzbl
push
dec
or
mov
decl
ret
aad
test
lcall
jne
xchg
stc
mov
push
lea
cmp
mov
cmpsl
jmp
jo
aam
mov
ret
jb
push
push
mov
push
gs
add
push
cmp
sahf
int
mov
ljmp
sbb
incl
movsb
sub
into
les
and
push
cmp
mov
xor
lcall
pop
mov
jp
jbe
push
ficompl
or
add
je
movsb
adc
mov
jg
push
call
adc
pop
push
pop
cwtl
mov
lods
xor
loopne
xlat
pushl
dec
in
push
ljmp
inc
sti
in
in
jmp
data16
cld
incl
and
mov
and
mov
or
lods
xchg
sub
jmp
cld
xchg
bound
fdiv
pushf
mov
add
movsb
ljmp
inc
inc
scas
out
pop
dec
not
lcall
mov
rcrl
popa
mov
out
push
xchg
pushf
xchg
sahf
mov
incl
jae
into
shll
and
jbe
push
lods
add
sar
jg
pop
hlt
cmp
int3
test
xor
pop
inc
pushf
add
hlt
sbb
dec
ja
adc
add
ds
adc
cmp
or
jp
daa
scas
jns
int
cwtl
lods
mov
arpl
das
lcall
inc
insl
aad
incl
pusha
or
jge
fnstcw
es
cwtl
or
repnz
fcomip
outsl
or
mov
stos
stos
inc
adc
fsub
xor
jecxz
stos
es
lock
add
jg
fstps
cmpsb
xchg
mov
jb
pop
mov
cmp
jecxz
dec
jecxz
insb
lods
lock
mov
add
mov
fstp
ret
cmpsb
mov
sub
andl
ret
inc
lods
xor
and
test
xor
pop
repz
mov
sbb
loop
mov
aaa
clc
sar
fcomip
dec
test
dec
sub
ss
hlt
add
push
ror
mov
ljmp
clc
jp
shrb
mov
arpl
xorl
fs
insb
in
sub
sbb
fcmovnb
cmp
lcall
cmp
push
ljmp
cmp
jge
fistl
jmp
sti
sbb
cmp
pop
xor
in
int
jle
mov
pop
pop
lock
pushl
je
sub
sub
lahf
mov
out
in
mov
and
daa
cltd
jecxz
and
lds
mov
and
outsl
sahf
xor
cmp
adc
pop
pop
arpl
daa
mov
jg
xchg
stc
inc
jmp
dec
sbb
testb
mov
lcall
add
mov
das
out
lods
mov
sbb
sbb
lods
xchg
dec
jno
mov
xchg
call
inc
xor
mov
pop
inc
pushf
xor
cs
pmuludq
mov
outsl
mov
xchg
in
jmp
mov
cwtl
and
mov
push
xlat
popf
jo
cmp
mov
xchg
xor
adc
pop
mov
jbe
fdivl
sar
call
movhlps
and
mov
imul
jnp
and
adc
push
andb
or
and
mov
rcll
mov
test
in
pop
icebp
call
test
clc
xlat
rolb
dec
shrb
movsb
test
fistl
cld
ljmp
cltd
pop
and
andb
or
pop
lcall
mov
lods
insl
in
mov
fcmovu
jbe
in
lds
lret
mov
lret
lcall
push
sub
sub
lcall
iret
inc
out
out
sti
push
out
mov
movsb
es
add
sbb
xchg
rcrl
cmp
push
jne
movsb
cmp
cmc
mov
into
mov
push
jge
movsb
js
sub
orb
cltd
xor
inc
inc
mov
fcmovbe
pop
jg
fisubrl
or
decl
das
aad
loopne
pushf
stc
lahf
repz
mov
pop
xor
es
movsl
sub
mov
pushl
jl
mov
jnp
mov
pop
mov
sbbb
lcall
pop
cltd
mov
cmc
xchg
outsb
pop
lahf
scas
loopne
and
or
ss
cmp
mov
lret
inc
add
test
in
mov
jne
push
imul
ljmp
insl
rcr
scas
and
jo
cwtl
add
push
fwait
mov
add
xor
pop
push
mov
inc
jnp
stc
adc
mov
dec
repnz
dec
inc
lret
xchg
jge
mov
mulb
test
mov
ret
cli
call
mov
pop
loope
aad
add
adc
mov
sub
jno
sub
fldt
ficomps
xchg
jmp
cmpsl
fsin
pop
lahf
cmpsb
jae
and
call
cld
lcall
dec
mov
jae
imul
insl
or
jle
dec
mov
imul
out
jecxz
sub
aad
stos
add
inc
nop
cmpsl
mov
jp
roll
sar
inc
push
aas
and
fwait
imul
idiv
mov
ret
sahf
jge
das
pop
enter
nop
sbbb
push
xchg
sahf
sbb
xor
mov
push
adc
mov
jg
lcall
cld
in
dec
mov
rorl
mov
adc
mov
movsb
and
and
inc
pop
pop
loope
loopne
pusha
les
push
out
decl
adc
in
insl
mov
iret
sarl
sub
adcl
out
test
pop
call
mov
mov
push
push
xchg
popl
lcall
popf
adc
je
dec
out
std
jmp
add
mov
lods
dec
or
negl
cwtl
pop
icebp
adcb
jmp
xor
inc
jl
stos
mov
shl
pop
xchg
hlt
nop
fs
insb
push
cmp
and
mov
sbb
mov
mov
inc
cli
jge
repnz
out
mov
out
lds
jmp
jge
in
fmulp
mov
inc
jbe
mov
pop
pop
enter
lcall
addr16
adc
pop
lret
cmpsl
dec
mov
repnz
dec
notb
rcrb
icebp
incl
push
dec
in
aaa
hlt
outsb
rorb
dec
les
loopne
outsb
jne,pt
add
xchg
hlt
jo
stos
jnp
test
pop
decl
xor
xchg
sbb
pop
xchg
fimull
xor
test
sar
cmp
pop
mov
movsb
jnp
xlat
fcompl
ja
jnp
or
sbb
das
aaa
popf
jmp
push
clc
fidivs
in
int3
test
in
fsts
fcoml
push
fs
pop
or
call
push
push
lahf
insb
xlat
popa
arpl
push
insb
icebp
test
pop
fnstsw
cmpb
test
decl
pop
aam
lahf
mov
jmp
divb
jb
push
cld
jmp
or
pusha
rcl
clc
mov
push
jno
mov
sbb
out
adc
call
fisttpl
shlb
mov
mov
add
dec
add
insl
lods
stos
fildll
mov
gs
outsb
std
mov
mov
ror
push
test
ljmp
in
xlat
sbb
pop
fisttpll
dec
shll
shrb
cmpsb
mov
sbb
ljmp
bound
cwtl
scas
jmp
jle
push
jl
dec
daa
xor
sub
into
sub
data16
arpl
fdivr
call
mov
mov
movsb
sub
jmp
stos
inc
aad
or
lahf
leave
or
add
or
pushf
ret
sbb
push
mov
loopne
lea
xchg
push
aaa
outsb
mov
pop
call
mov
cld
jb
cmp
push
pop
rcrl
xchg
js
push
cmp
aad
loopne
cmp
jbe
test
jno
sbb
sbb
mov
pop
jmp
call
mov
lods
dec
ljmp
jae
sti
sbb
mov
ror
sbb
pushf
fldcw
jne
fxam
rol
cld
call
jbe
mov
fisttpl
stc
adc
cmp
push
stos
cmpl
pop
mov
fcomps
rcl
stos
mov
jg
mov
mov
pop
cld
jg
test
iret
inc
adc
pop
mov
int3
rol
ds
loope
xchg
incl
filds
sbb
sbb
sub
jno
jns
mov
push
add
decl
dec
insl
xchg
xchg
mov
mov
mov
insb
hlt
mov
dec
aad
fs
cmp
add
pop
dec
arpl
ret
int
mov
push
frndint
jp
add
inc
push
fidivl
jae
and
lods
dec
leave
or
dec
cld
mov
shl
in
jnp
sti
fs
mov
sbb
in
dec
pusha
sub
inc
out
arpl
int
push
dec
or
cltd
cmpb
jae
lret
incb
in
std
into
cld
cs
cld
inc
ds
movsl
mov
jnp
mov
mov
movsb
subl
inc
imul
jns
lcall
out
roll
mov
shl
fmuls
xor
pop
add
out
lahf
push
adc
incl
and
or
aas
pop
mov
clc
and
lcall
jg
repz
test
xchg
in
les
icebp
push
das
mov
adc
decl
in
inc
sahf
dec
insb
in
inc
icebp
cmp
subb
dec
push
sti
hlt
ud0
call
xchg
fists
xor
stos
in
push
sub
sub
push
int
and
pushl
lret
gs
andl
divb
xor
jp
mov
mov
data16
mov
mov
push
inc
adc
out
lods
icebp
rcrb
out
decl
adc
jb
xor
mov
sub
cmp
ss
jno
repz
jmp
ljmp
and
mov
pushf
push
cmp
call
loopne
aad
lcall
sub
sahf
add
mov
stos
xchg
adc
ljmp
push
lods
push
jecxz
stos
stos
sub
popf
pop
xchg
arpl
mov
ja
sub
adc
jb
push
arpl
int3
ficomps
es
call
insb
mov
inc
pop
mov
mov
ljmp
push
fimuls
and
das
add
mov
pop
push
sub
fiaddl
xor
mov
inc
dec
cli
xchg
push
mov
jmp
sahf
or
nopl
cltd
push
int
push
stos
mov
dec
jmp
les
xor
daa
xchg
sub
jp
adc
mov
loope
jo
jecxz
push
mov
lea
out
leave
dec
cmc
and
mov
mov
mov
push
xchg
adc
negl
cmpsb
into
inc
jmp
mov
ja
xchg
cmpxchg
je
mov
test
dec
cld
push
xlat
or
xchg
divb
in
call
fisttps
xchg
data16
pop
insl
std
gs
mov
xchg
cmp
cmp
inc
pushl
inc
jne
dec
jmp
sarb
lcall
sbbb
mov
mov
and
mov
push
movsl
push
xor
xor
dec
jg
jae
xchg
decl
push
test
out
pop
lea
lock
cli
xchg
stos
jmp
ret
jge
arpl
ljmp
stos
mov
jp
mov
inc
adc
dec
out
lret
xor
pusha
xchg
or
andb
xchg
test
fisubl
sti
mov
jmp
fwait
fwait
dec
xor
out
mov
jp
scas
mov
push
mov
inc
call
cmp
out
xor
dec
sub
notb
incl
insl
mov
push
test
or
jge
sub
adc
xor
pop
insb
aas
cmc
call
andb
aam
je
push
cmpsl
sub
decl
subl
ds
inc
stos
outsb
fnsave
sbb
les
dec
ss
mov
imul
mov
jmp
xor
aas
ffreep
iret
jbe
adc
pop
add
mov
mov
fildll
cwtl
adc
ret
call
pop
or
lret
fildll
das
movsl
push
minps
jecxz
push
pop
hlt
jle
and
xchg
pop
shl
and
adcl
jl
or
fistpl
ss
fdivrl
mov
icebp
or
xor
movsl
out
lock
pop
push
ljmp
adc
mov
and
fucom
sti
nop
lahf
push
mov
jle
std
or
call
jg
mov
xchg
leave
movsb
popf
test
fistps
inc
ret
jbe
aas
sbb
aas
pop
mov
loop
jmp
jg
pop
popf
leave
cmp
xchg
jge
icebp
sub
shl
pop
stc
mov
loop
decl
dec
pop
aad
push
inc
mov
xchg
inc
outsl
mov
lret
mov
xchg
aaa
in
and
out
jmp
loop
lcall
js
mov
ja
cmp
call
test
pop
arpl
jne
jns
xor
outsl
gs
jbe
xchg
lret
imul
dec
insl
cmp
ljmp
in
cmpsb
dec
dec
xchg
push
pop
inc
mov
icebp
das
lods
cmp
xchg
into
loopne
std
mov
mov
fwait
dec
add
mov
cs
add
pushl
test
inc
addr16
cmpl
mov
jg
cmp
lahf
ds
ret
fsub
insb
pop
sbb
xchg
pop
mov
imul
lods
mov
lds
nop
movsl
and
pop
pop
jmp
fsub
adc
jb
int
or
pushl
testb
adc
test
sarb
sbb
and
in
jp
sbb
pop
loopne
add
adc
in
fwait
cmc
ljmp
mov
ss
adc
or
aad
loopne
ret
call
mov
lahf
ret
xor
stos
jl
cmp
mov
mov
sub
test
sub
pop
sub
pop
add
dec
fucomp
clc
mov
add
cmp
xchg
add
mov
loopne
js
fists
jg
loope,pt
push
push
jge
jg
fbstp
sub
out
fisubrs
insl
lahf
out
mov
xor
stos
es
jmp
cli
popf
rcrl
fwait
jmp
in
cmp
sar
shl
pushf
aad
nop
xchg
enter
addr16
pop
movsb
fistpl
hlt
pop
flds
incl
dec
cmp
rorb
xchg
lods
sub
repnz
or
xor
decl
icebp
aas
lds
xchg
lea
mov
aam
repz
sub
cli
jmp
and
iret
cmp
cmp
pop
cmp
loop
and
incl
testl
sub
test
out
push
arpl
call
or
push
jg
movsb
lret
ja
das
pop
jne
loop
lods
mov
inc
std
ja
incl
imul
rclb
inc
inc
and
sub
and
mov
and
xor
imulb
pop
cld
sub
mov
pop
dec
jns
loopne
incl
iret
outsl
rcr
push
sub
test
aas
push
lcall
cmc
les
xlat
pop
lock
daa
pop
popa
dec
pop
rcll
jg
aas
jno
cmp
cmp
push
and
aam
or
sbb
in
sub
adcb
insl
daa
cli
arpl
negb
jnp
out
mov
jge
pop
in
cmc
lcall
out
sbb
push
mov
shl
cld
js
pop
aaa
pop
add
or
dec
or
cmp
push
jae
les
dec
pushf
sbb
sbb
inc
pop
insl
test
lods
movsl
clc
jmp
outsb
mov
data16
mov
rcll
sub
inc
cmp
add
mull
mov
inc
xchg
scas
aaa
out
jge
dec
xchg
cmp
loop
les
dec
stos
dec
or
addr16
dec
orl
mov
ss
adc
nop
lods
push
pop
jge
mov
push
je
inc
cmp
xor
jl
push
mov
xchg
jmp
dec
ret
aad
imul
pop
and
adc
decl
aas
in
cmpsb
push
ficompl
scas
sub
jns
insl
add
andb
jae
insb
push
clc
lcall
add
test
js
jg
or
xchg
mov
fisubl
movsb
lcall
dec
jae
les
flds
push
mov
cld
pop
inc
mov
inc
in
pop
or
dec
jne
mov
mov
jb
ss
dec
out
insb
mov
cmp
lcall
dec
scas
test
push
push
outsl
fnstenv
or
inc
mov
fistpll
jmp
sbb
insl
pop
mov
lcall
pop
js
scas
or
scas
addr16
jbe
call
je
sbb
scas
xor
test
setbe
jb
and
pop
std
call
sub
mov
or
push
add
xchg
add
movsb
adc
das
stc
pushl
cmpsl
cmp
sub
lcall
inc
xchg
jne
and
dec
xor
incb
mov
call
cltd
daa
out
dec
xchg
js
sahf
mov
aas
push
jmp
mov
cs
add
inc
jae
jecxz
mov
mov
mov
ja
addb
imul
mov
std
shlb
pop
mov
popa
jno
inc
pop
mov
cmpsb
in
push
cmc
cmc
ss
jle
clc
aaa
std
xchg
and
lcall
or
test
push
push
jg
scas
sbb
xor
xchg
push
inc
pop
mov
pop
add
sub
sahf
xchg
fldt
repz
mov
mov
or
decb
jmp
popf
sub
nop
and
jp
ss
cli
dec
dec
mov
xor
incl
int
cmc
out
and
sbb
leave
imul
inc
cmp
aad
xchg
filds
addr16
mov
push
xchg
aas
out
inc
mov
jmp
jns
decl
pushf
shlb
andb
jo
mov
sub
mov
aam
pop
push
cld
sub
movsl
sbb
and
push
cmp
mov
jmp
push
mov
mov
jbe
pushf
aam
std
cwtl
fstl
clc
pushf
call
addr16
decl
movsl
cld
pcmpeqd
ret
in
mov
in
dec
repnz
mov
call
es
out
mov
add
mov
in
decl
lock
sub
xchg
xorl
fimull
repnz
ljmp
int
fwait
cwtl
sbb
cmp
subb
pop
ljmp
xlat
mov
fsubrs
and
push
jmp
incl
rcrb
aam
push
sbb
mov
sar
jmp
bound
cmp
cli
cltd
aam
xorl
shlb
mov
sbb
aaa
inc
push
sbb
push
or
test
pextrw
push
cmp
or
inc
mov
insb
pusha
enter
addl
incl
enter
mov
pusha
xchg
test
addb
mov
dec
push
lcall
out
pusha
in
mov
mov
fsubrs
pop
jnp
inc
pop
iret
mov
mov
incl
rcrb
push
popf
push
faddl
dec
dec
sbb
leave
in
les
and
decl
clc
push
dec
mov
mov
adc
fidivrl
mov
out
mov
fs
push
cld
stc
addr16
inc
pop
out
xchg
xor
mov
or
and
lcall
adc
adc
aam
aaa
das
mov
jp
movsb
or
push
out
out
cli
call
fcoml
mov
leave
jge
sbb
push
or
mov
jle
fsubp
dec
imul
data16
xchg
in
arpl
inc
flds
sar
incl
test
fistps
sub
fwait
imul
mov
movsb
and
sbb
add
sahf
xchg
xchg
jmp
inc
fwait
pushf
iret
sub
repz
test
lcall
fsub
fstpt
sbb
clc
sub
sub
sbb
inc
leave
jmp
lcall
mov
std
sub
xchg
xchg
iret
movsb
in
popa
xor
sar
mov
jmp
out
lods
cmc
insb
cmc
repnz
enter
andl
fsubr
xor
stos
mov
xor
pop
in
imul
addr16
stc
mov
fcos
jmp
dec
lods
add
mov
sbb
mov
and
pusha
fcmovnb
add
das
cwtl
push
inc
sbb
xchg
lea
pop
int
mov
cli
add
lds
scas
cmp
fisubrs
call
xor
bound
test
sahf
pop
ret
mov
mov
sbb
test
and
das
clc
mov
and
nop
hlt
xchg
dec
sub
ret
push
in
cli
xchg
jl
or
xor
or
fisubrs
enter
mov
pop
adc
stos
cli
dec
push
dec
ljmp
sbb
inc
mov
lcall
mov
and
scas
call
lret
push
pop
sbbb
push
jb
xor
push
movl
or
dec
or
or
jmp
into
add
stc
pop
push
call
mov
pop
in
xchg
pop
call
in
lods
jae
sub
stc
cmp
mov
daa
cmp
mov
add
loope
insb
mov
call
or
fcomip
out
rcrb
or
mov
nop
lret
enter
je
jmp
inc
cmp
movsl
mov
stc
imul
jmp
xchg
add
add
pop
push
sub
pop
dec
sar
cmp
lea
push
cwtl
xor
push
mov
popf
or
pop
ljmp
inc
pop
rolb
mov
mov
stc
popa
ss
jmp
dec
inc
cmp
rcrl
je
push
push
xchg
arpl
pusha
out
test
xlat
jge
adc
std
and
jl
sbb
fstpt
scas
cs
xor
out
add
push
aas
cs
add
incl
mov
inc
testl
imul
popa
push
pusha
lcall
mov
mov
xlat
sub
stos
test
shlb
ret
cmc
decl
mov
sub
or
scas
dec
mov
decl
bound
andl
enter
xor
outsb
hlt
sbb
pop
and
cmovbe
ret
jo
lods
xlat
push
jecxz
mov
imul
mov
or
or
push
repnz
add
push
mov
cwtl
sbb
scas
inc
and
push
ret
aad
ds
sub
sub
push
sar
mov
push
xlat
shl
jno
jg
jg
ret
pop
les
inc
loop
pusha
fidivl
mov
mov
gs
imull
add
and
mov
xor
int3
insb
mov
std
out
nop
outsb
cmp
mov
rcll
orb
inc
loope
jmp
cltd
and
cld
pop
movsb
call
sub
inc
xor
out
fisubs
test
decl
roll
xchg
outsb
fistpll
xchg
shrl
cmc
dec
loop
xchg
mov
daa
sub
aaa
test
cmpsb
sbb
jecxz
fcmovu
gs
jne
jne
aaa
incl
mov
loop
cmp
jbe
lea
and
cli
ljmp
aad
ljmp
inc
push
nop
test
cmp
cmp
es
push
pop
lcall
clc
je
push
in
lret
jno
add
cmpsl
sub
incl
xchg
mov
xchg
inc
dec
shrb
and
enter
adcl
jmp
into
jle
aad
clc
mov
mov
adcb
aam
sbb
fistps
insl
fwait
cwtl
jle
cld
inc
imul
adc
pusha
iret
jge
int3
loopne
in
rcrb
cli
aaa
insb
pop
mov
std
das
lds
insl
xchg
pusha
idivb
xchg
ds
sti
dec
mov
or
pop
push
rcrl
rclb
sub
or
jmp
shll
dec
jl
or
mov
rcrl
cli
out
std
decl
xchg
ljmp
mov
adc
shll
out
sub
sbb
mov
iret
mov
jno
cmp
enter
pop
jne
call
out
jle
leave
push
dec
fwait
jl
cmp
cs
int3
mov
cmpsl
jg
lock
test
js
rolb
out
outsl
fcomps
ret
das
lods
fsts
mov
arpl
add
pusha
nop
and
xor
dec
inc
lcall
jmp
mov
mov
cmp
dec
mov
popf
fwait
dec
mov
sub
dec
xchg
out
xor
jmp
sbb
sbb
arpl
xor
mov
cmpsl
push
push
shll
ret
mov
notb
int
jge
dec
imul
jmp
inc
pop
mov
test
decb
mov
mov
cmp
rcrb
loopne
ja
jmp
nop
lcall
jl
popf
sub
fucomp
inc
lret
or
loopne
fimull
ljmp
enter
cs
rclb
repz
inc
cmp
in
outsb
mov
stos
mov
mov
push
sarl
cmp
mov
ljmp
nop
pop
push
pop
push
fisttps
and
enter
jmp
arpl
inc
lock
ljmp
ja
xor
cmpsb
cmpsb
ljmp
cmp
xor
inc
popf
frstor
insl
sbb
inc
cld
lcall
js
idivb
cmpsb
ss
shll
mov
sub
ljmp
add
inc
cmpsl
push
ljmp
pop
xchg
imul
add
call
sub
adc
dec
cmpsl
sbb
lds
mov
fimuls
dec
nop
mov
mov
gs
cli
pop
out
mov
outsb
stos
fwait
inc
loop
mov
call
jmp
jbe
fbld
jnp
shrl
gs
shlb
push
or
jo
incl
cmp
mov
fistpl
inc
push
mov
mov
cld
test
jnp
je
jbe
adc
js
clc
fldcw
pushf
lock
xor
jne
jge
lcall
loop
ljmp
sbb
and
sarl
pop
sub
inc
ja
jmp
pop
cld
call
or
dec
dec
call
pop
jo
gs
in
push
pop
mov
sub
call
inc
outsb
fwait
jmp
outsb
mov
fdiv
jle
fdivl
rcrl
adc
lock
ljmp
mov
mov
sub
dec
cmp
pop
scas
cmpsb
push
loop
arpl
lcall
fisttps
cmp
sahf
stos
mov
jle
outsb
dec
or
sub
xor
enter
in
call
push
fucomp
out
aaa
pop
enter
dec
in
adc
js
orl
push
xchg
mov
mov
in
outsl
cmp
pop
sbb
hlt
es
rorb
push
dec
clc
push
movsb
adc
stos
rcrl
or
nop
cli
ljmp
data16
xor
loopne
icebp
add
adc
call
test
call
ds
shlb
test
shrl
dec
jae
or
fwait
in
in
push
test
daa
shl
js
ljmp
ficomps
leave
and
push
inc
cltd
int3
pop
sbb
jp
sub
cwtl
cmpxchg
jg
jmp
fs
test
clc
push
into
mov
mov
les
in
in
cmp
test
imul
arpl
cmp
repnz
add
push
mov
je
mov
cmp
lods
hlt
mov
jle
faddl
gs
ljmp
pusha
pushf
test
xor
gs
int3
xor
inc
rorb
cld
or
or
stos
mov
add
mov
adc
cmp
mov
pop
xchg
jmp
test
pushl
imull
add
in
lds
or
decl
insb
mov
mov
dec
sbb
add
dec
mov
jl
jns
ljmp
stc
addr16
mov
pop
push
push
pop
aam
sbb
sbb
and
pop
push
sbb
pop
aam
adc
mov
jmp
shll
cmp
iret
in
pop
or
jb
mov
mov
das
pop
sub
lea
mov
decl
int3
sbb
sub
iret
mov
out
pop
push
aam
into
das
or
cmp
pushl
idivl
jb
xchg
cltd
jecxz
mov
adc
fists
adc
jg
pop
cmp
or
lods
into
pusha
movsl
ret
loop
push
pop
or
insb
sbb
imul
in
mov
pop
cmp
cmc
pusha
mov
mov
jo
out
div
xchg
cmpsb
cmpsw
incl
sbb
pop
cli
cmp
sub
mov
fwait
mov
in
stos
xor
jbe
jmp
ljmp
clc
inc
push
xchg
cmp
or
into
add
ficoml
inc
shrb
int3
lahf
cmp
xchg
loope
dec
push
lods
rol
faddl
push
int3
aad
dec
std
test
mul
faddl
push
xor
insb
xorb
cmp
sbb
aaa
sbb
sub
movsw
xlat
in
movsb
cmc
or
incl
add
nop
xchg
push
outsb
or
jns
xchg
mov
insl
sub
jb
shll
lcall
sbb
jnp
pushw
pop
fidivs
arpl
jg
jle
vxorps
mov
inc
push
sbbb
mov
add
int3
add
lcall
mov
xchg
mov
adc
mov
icebp
mov
lret
xchg
pop
leave
sub
loope
decl
stos
mov
loopne
ret
dec
and
pop
mov
mov
jmp
pop
ljmp
leave
mov
je
adc
inc
hlt
push
adc
push
adc
sub
mov
js
pop
je
das
xor
lcall
cmc
scas
rcrb
xchg
pop
jle
sbb
sub
and
mov
ja
pop
imul
mov
dec
call
jg
mov
hlt
mov
mov
int
and
jae
ja
sbb
cmp
pop
mov
adc
js
test
call
std
jmp
inc
int3
mov
cmpsb
mov
pushf
les
stos
orb
mov
add
cli
dec
jb
cli
es
mov
cmc
popf
mov
cld
mov
stos
lcall
cli
popf
cmp
decl
push
aam
fnstcw
xorb
jge
adc
lods
mov
arpl
and
sbb
cmpsl
loope
cltd
inc
int
pop
in
cmpsb
sti
jno
in
mov
push
mov
roll
jbe
insb
pmuludq
insb
dec
mov
jecxz
fwait
insl
std
jmp
cmp
mov
pusha
stos
lea
mov
in
xchg
jg
dec
lahf
push
roll
pop
fildl
iret
sbb
inc
mov
cwtl
out
and
decl
cmp
iret
push
xchg
jno
mov
lods
cmpsb
lcall
lcall
imul
leave
xchg
mov
hlt
rcrb
mov
lcall
mov
enter
lcall
push
iret
mov
dec
mov
jecxz
cmp
sub
imul
xchg
fprem
cmp
or
fcomip
bound
add
dec
jmp
insl
inc
and
mov
ljmp
nop
adc
nop
rcrl
orb
in
jo
roll
jl
sbb
rcr
push
int
xchg
ret
push
sbb
xchg
inc
fcompl
jns
inc
xchg
pop
mov
jo
lret
mov
cmp
sbb
arpl
or
cmp
pop
jmp
imul
push
cmp
jmp
sbb
cwtl
mulb
iret
ss
mov
pop
adc
push
dec
push
fnstcw
xchg
adc
inc
and
mov
popa
jg
movsl
ljmp
xor
daa
int
out
std
cwtl
sarl
mov
loop
cmp
cltd
ret
nop
clc
lcall
fsubrs
iret
stc
add
mov
gs
arpl
or
call
xor
in
outsl
push
imul
sub
iret
shlb
testb
mov
das
lcall
dec
push
stc
cmpsb
sub
pop
mov
cmp
cli
dec
xlat
js
mov
out
mov
cmp
mov
outsb
into
in
test
fwait
and
inc
pop
fisubl
or
aas
mov
jmp
gs
and
push
push
sbb
push
xchg
inc
iret
sub
xor
imul
add
ljmp
mov
int3
pop
iret
in
sbb
add
cmp
pop
arpl
xchg
dec
clc
ret
jecxz
inc
hlt
sar
jp
in
int3
mov
stc
xor
dec
mov
cmp
xchg
and
and
mov
mov
sti
mov
sbb
pop
mov
cmp
out
test
cmp
hlt
add
cld
ljmp
xchg
jae
mov
es
push
fbld
aad
jg
xchg
cltd
adc
add
sarl
pop
pop
jnp
imul
sub
jg
lret
je
mov
div
mov
bound
ds
mov
imul
mov
push
jne
sbb
les
pop
leave
mov
int
jbe
push
xchg
aas
sbb
movsb
adc
add
push
leave
xor
push
adc
cmp
ljmp
sbb
inc
stos
xor
dec
imul
sar
sub
imul
ret
sub
jmp
nop
mov
cmp
inc
loop
push
xchg
sahf
mov
je
mov
lcall
inc
scas
dec
ljmp
sbb
ljmp
insb
dec
mov
sbb
ljmp
cmpsl
lock
adc
jbe
lcall
fsubl
aad
std
pop
mov
push
inc
ja
pushf
imul
mov
decl
and
jns
mov
out
inc
bound
and
mov
rcr
call
inc
mov
mov
lret
add
adcl
adc
cmp
mov
inc
adc
out
xor
jl
repz
popf
out
in
inc
std
cmp
decl
sbb
lods
xchg
js
lods
ficomps
add
jmp
sbb
addr16
ljmp
int3
cwtl
rcll
xor
aad
xchg
call
push
inc
inc
mov
call
jle
mov
mov
sbb
fwait
push
xlat
xor
ja
cmp
mov
iret
out
out
sti
mov
xor
outsl
mov
push
hlt
fdivr
lcall
mov
arpl
push
push
ficoml
out
mov
mov
xor
lahf
shlb
dec
ds
pop
outsb
pusha
sbb
mov
mov
mov
mov
pop
mov
xchg
ljmp
jo
imul
dec
jle
xchg
cltd
sahf
decl
add
or
push
push
movsb
adc
sbb
and
inc
outsb
pop
inc
mov
lcall
adc
and
mov
fisttps
push
inc
mov
mov
jp
mov
jl
insl
call
ret
addr16
dec
mov
jne
dec
pop
xlat
aaa
shl
pop
enter
ljmp
push
insl
std
jl
sub
ret
lock
cmp
or
loopne
or
sub
outsb
fstpt
jb
out
hlt
jo
out
jp
scas
jl
jp
cmpsb
or
ja
pushl
xchg
ror
inc
leave
adc
ljmp
dec
shll
jae
icebp
divl
stos
lcall
cwtl
mov
pop
out
mov
ja
mov
aaa
cld
cmpsb
lcall
mov
fs
iret
xchg
and
inc
jg
scas
or
loope
mov
xchg
jbe
lcall
loope
adc
mov
dec
enter
mov
dec
andb
scas
push
mov
je
pop
hlt
ljmp
pop
jns
fisubl
mov
push
fmul
or
ja
je
add
popa
mov
ret
in
pop
es
ror
adc
pop
adc
inc
fwait
xchg
aad
shll
adc
push
imul
ljmp
clc
enter
not
nop
or
jecxz
add
pop
push
and
pop
dec
loop
ljmp
lds
sbb
cmpsb
pusha
fs
les
lods
dec
decl
dec
dec
add
and
push
mov
mov
cmc
xor
pop
pop
ljmp
stos
cli
into
pop
push
aad
add
fwait
in
testl
ret
inc
add
mov
jg
ja
lcall
lods
sti
lock
mov
pushf
cli
jge
shr
add
ror
das
sar
movsl
scas
inc
mov
xchg
hlt
mov
mov
mov
xchg
mov
pop
data16
cli
adc
sbb
les
pusha
add
movsb
add
jmp
pushl
data16
cld
sbb
add
sub
scas
ljmp
jge
icebp
mov
popa
aad
sarb
cmp
es
aaa
out
jl
xlat
mov
clc
mov
mov
add
stc
pop
sub
cmp
scas
jg
cmp
es
ljmp
cs
dec
std
in
adc
mov
push
repnz
dec
mov
inc
and
bound
decl
sub
or
aad
xor
cmp
cwtl
mov
and
aas
cltd
in
mull
decl
pusha
adc
pop
push
cld
rcll
enter
data16
mov
adcb
dec
cmp
in
push
loope
push
lcall
pushl
cli
mov
stc
enter
and
fs
and
pop
push
lock
movsb
mov
call
and
mov
in
dec
dec
data16
jmp
aad
mov
fistpl
adc
insb
push
push
and
push
mov
dec
jb
incl
loopne
or
xchg
lds
inc
jmp
jecxz
cmpsl
cld
sbb
inc
mov
incl
xor
pop
add
cltd
or
rcrl
pop
jne
push
fcmovne
jl
mov
repnz
ljmp
dec
es
pop
push
icebp
cmp
mov
mov
int3
cmpsl
test
out
clc
cmpb
xchg
rol
mov
xor
sbbl
decl
adc
cli
push
inc
push
test
insb
push
pop
xchg
fs
lahf
pop
fdivp
pushf
ret
xchg
sub
jg
mov
and
dec
lds
jns
clc
add
push
into
dec
imul
ss
push
mov
push
ja
mov
push
pop
pop
fbstp
pushl
std
call
cs
sahf
cwtl
mov
sbb
xchg
cmc
rclb
jmp
or
cmp
pop
and
xor
jns
clc
dec
and
leave
out
sub
fwait
add
cmc
dec
ja
mov
decl
nop
lea
push
loop
das
jo
daa
inc
ucomiss
ficompl
stc
ljmp
call
rorb
jae
dec
pop
jle
out
scas
rorb
aaa
xor
leave
and
cld
or
push
scas
mov
test
hlt
lods
or
in
cmp
mov
outsl
mov
sub
add
int
xor
incl
dec
daa
or
pusha
sub
and
or
dec
push
in
add
push
imul
lcall
insl
fwait
pushl
pop
inc
jl
adc
jns
je
push
push
arpl
loopne
sbb
lcall
out
cmp
ja
cmp
xchg
js
lcall
lcall
insl
arpl
es
xchg
mov
sbb
add
push
lahf
dec
fcomip
push
out
mov
insb
je
cmpsl
out
adc
xor
cwtl
enter
xor
inc
stos
mov
ljmp
mov
mov
pushf
popf
testb
sub
mov
movsl
cld
inc
push
pop
movsb
xchg
shl
rol
pop
out
out
mov
rcl
sbb
fisttps
bound
add
scas
push
pop
and
xchg
mulb
mov
inc
xor
jno
fs
pop
lret
mov
mov
jmp
dec
ret
in
aas
pop
cmp
test
push
cmp
pushf
jg
ljmp
push
insb
icebp
incb
pushf
dec
jmp
lods
adcb
into
mov
incl
mov
fs
daa
es
and
jne
fildll
fistpl
test
shlb
xor
popa
sbb
push
incl
mov
adc
test
hlt
lret
pop
nop
xchg
js
jg
or
cmp
pop
xor
jbe
mov
dec
lods
incl
lret
cmp
cwtl
fwait
xlat
notl
add
in
cwtl
aas
repz
lret
pop
adc
lret
int3
in
imul
mov
aas
call
mov
fbstp
mov
leave
rolb
call
in
jg
call
sbb
lret
mov
jae
outsb
fmul
je
jg
pop
icebp
loop,pt
in
mov
shr
jmp
lahf
mov
shl
stc
or
dec
push
insb
xchg
jb
or
sti
mov
cmp
pop
gs
sub
adc
sbb
call
mov
fcos
mov
cmp
xchg
dec
adc
inc
lea
jp
adcb
mov
shl
xchg
push
dec
sti
or
mov
imul
inc
jge
cld
popf
negl
nop
rolb
imul
sub
bound
push
fcoms
mov
jg
setb
or
gs
in
pop
push
test
popa
xor
fisttps
decl
sub
loopne
pop
push
cmc
or
lcall
dec
push
mov
insl
insl
mov
rorb
sbb
incl
orl
add
cmp
inc
push
mov
ljmp
ljmp
jb
sub
cmpsb
mov
and
pusha
jo
stc
sbb
lcall
jbe
rolb
test
icebp
notl
cmp
mul
fistpll
jp
mov
sub
mov
scas
arpl
jmp
mov
jne
xchg
jbe
movsl
sbbl
shlb
lcall
jg
jmp
mov
dec
and
dec
add
movsb
mov
test
outsl
pushf
sub
jl
or
ret
mull
mov
cmp
fwait
mov
ja
fisubrs
cmp
cmpsl
test
decb
dec
inc
sbb
inc
or
jg
pop
mov
leave
lock
xchg
out
xchg
mov
pop
outsl
shrl
dec
popf
inc
lea
decl
xchg
sarl
xchg
mov
test
xor
in
xchg
stos
adc
mov
add
fbld
sub
incl
ficomps
jae
leave
inc
shrl
or
fldt
hlt
call
mov
pop
sarb
xor
fcomps
pop
dec
pop
dec
and
fistps
lret
mov
out
sub
hlt
jno
push
insb
lds
call
decl
cmp
cmpsb
fucomip
loop
popa
mov
in
aad
xchg
cmp
mov
incl
pushl
icebp
ret
fsubrs
adcl
add
push
scas
and
mov
divb
pop
sub
inc
fwait
push
lds
fcoml
std
xor
and
jmp
pop
xchg
and
out
stos
test
mov
mov
rcll
xor
mov
mov
push
leave
in
rcl
sbb
lcall
lea
lods
mov
movsb
xor
lcall
hlt
xchg
xor
push
xchg
ret
dec
fs
adcb
sti
incb
mov
pushl
gs
pop
mov
dec
js
shll
mov
and
jmp
decl
sbb
ja
jae
les
popaw
incb
inc
fs
movsl
dec
clc
aaa
sbb
clc
dec
test
repz
mov
mov
aaa
cmp
out
push
imul
stc
xchg
xchg
aam
push
lcall
cmp
in
and
and
mov
xchg
dec
out
lock
pop
das
xor
xchg
xchg
cmc
inc
push
sub
push
lcall
jmp
mov
dec
loope
cld
ds
push
push
mov
xor
cmovne
dec
ret
lcall
mov
or
ja
dec
fistpl
mov
sbb
xchg
lods
sub
loop
mov
pusha
lcall
pop
jno
jo
cmp
inc
scas
jb
mov
push
sub
imul
ret
add
scas
and
adc
rol
ja
sub
lcall
fbld
xchg
dec
sbb
jb
lock
sub
je
adc
mov
jne
mov
addr16
jno
movsl
popf
data16
push
std
loopne
addr16
jg
adc
sub
ja
mov
idivb
in
int3
das
outsb
jge
jg
lock
loop
scas
movsb
into
hlt
hlt
shl
je
jg
test
out
adc
lock
dec
add
shl
jb
mov
decl
jbe
in
push
shlb
test
mov
lcall
clc
push
mov
pop
pop
xchg
or
mov
inc
xlat
and
ud1
jmp
pusha
movsl
lret
sbb
inc
mov
pop
clc
ret
pop
js
dec
fcmovne
mov
jmp
std
jbe
dec
inc
in
inc
rclb
cmpsb
adc
mov
pushf
fs
pop
das
jbe
addr16
incl
add
stc
pop
test
bound
push
hlt
sbb
ficompl
shlb
mov
adc
lcall
leave
dec
and
aam
push
xchg
out
push
mov
push
xchg
cmp
push
add
out
lcall
xchg
sub
iret
jno
leave
cmp
pop
test
and
mov
fadd
mov
adc
jmp
rcrb
and
mov
sti
adc
add
frstpm(287
push
lcall
pushl
xor
dec
bound
or
les
mov
clc
cmp
pop
call
std
push
enter
inc
push
xchg
rcr
bound
adc
sbb
ljmp
or
add
loop
je
mov
fnstsw
and
scas
mov
mov
jmp
inc
int
int
inc
dec
out
daa
xor
jle
xor
repnz
inc
xchg
aam
mov
iret
pop
dec
lods
mov
and
xor
push
ljmp
sub
ljmp
ljmp
push
cwtl
pushf
sbb
bound
add
decl
push
mov
out
adc
jmp
xchg
xchg
orl
xor
decl
xchg
jecxz
stos
mov
mov
loope
das
mov
pusha
shlb
pusha
mov
jge
filds
loopne
out
push
insl
jno
pop
imul
mov
lahf
pop
inc
mov
push
adc
mov
jecxz
and
aad
fcomip
loopne
xchg
mov
fadd
arpl
mov
out
add
sbb
jno
aaa
test
lret
pop
imulb
push
adcb
cltd
sub
jmp
xchg
mov
jl
adc
sub
sub
sbb
decl
shr
notl
mov
test
sub
call
scas
movsb
jmp
fbld
rol
sti
xor
aaa
inc
movsl
pop
out
das
dec
xor
les
push
adcl
inc
testb
add
jg
aam
insl
push
icebp
dec
stos
mov
dec
jecxz
daa
iret
push
add
cmc
cmp
sub
sahf
lods
xchg
push
decl
mov
push
inc
mov
adcl
jnp
mov
call
sbb
inc
out
xchg
out
lret
pop
outsb
loop
dec
cmp
xchg
jno
in
inc
inc
stc
incl
dec
movsb
sub
cmp
inc
xchg
lret
inc
push
ja
mov
add
dec
mov
lcall
pushl
xchg
repnz
in
jns
bound
imul
ja
mov
icebp
decl
sbb
orb
and
decl
inc
insb
cmpsb
aas
mov
mov
mov
push
cltd
add
loop
mov
ljmp
fstpl
cmp
adc
xchg
cmc
jmp
movsl
mov
pushl
jg
adc
inc
jl
cmpl
mov
mov
out
roll
decl
cmp
push
mov
mov
push
sub
mov
aaa
and
mov
sbb
fadds
xor
sar
adcl
push
mov
sub
imul
clc
ljmp
adc
decl
cltd
xchg
xor
sub
fists
stos
mov
or
or
xchg
lret
xor
mov
sub
cwtl
mov
insb
loop
icebp
mov
inc
adc
in
test
add
cld
pushl
lock
test
sbb
or
loop
loop
dec
ljmp
loopne
xor
insl
js
jle
jl
or
xchg
incb
out
jne
incb
push
inc
push
lock
jg
push
pushf
push
ret
cmp
cmp
movsl
scas
test
fmuls
fs
pop
clc
mov
inc
fwait
mov
divb
in
ljmp
cmp
in
jl
ljmp
and
out
jno
mov
lret
sbb
or
push
cs
xor
mov
sub
xchg
mov
or
push
or
ljmp
adc
test
mov
jns
inc
xchg
mov
jbe
push
jmp
pop
pop
call
jecxz
pop
aas
or
mov
xor
loope
imul
cmp
incl
popf
adc
mov
cmp
xor
mov
out
ljmp
push
icebp
sbb
push
popa
xchg
loope
mov
and
xchg
cld
in
mov
mov
movsl
sbb
dec
mov
decl
and
mov
mov
mov
pop
lock
aaa
sbb
add
pop
int3
in
icebp
lds
add
notb
dec
bound
inc
mov
scas
mov
mov
dec
gs
test
inc
jae
out
mov
jge
scas
adc
cld
push
stos
xchg
std
cmpsb
pop
xchg
scas
cmp
or
jmp
dec
push
pop
lea
clc
arpl
jg
sbb
fildll
incl
andb
mov
inc
out
mov
sti
adc
pop
adc
push
inc
lret
and
icebp
in
push
cld
in
push
out
mov
and
repnz
cmc
mov
je
dec
mov
lcall
out
jp
stos
sti
or
and
cmp
leave
mov
push
rep
or
pop
mov
pop
decl
sub
xor
cli
leave
fsts
fwait
pop
mov
xchg
mov
lcall
cmp
fcomps
out
jmp
pop
mov
cld
hlt
push
mov
mov
or
fildll
lea
push
cmp
test
dec
inc
cld
lea
adc
shrl
mov
cli
cltd
incl
cld
ljmp
dec
and
push
xchg
or
sti
xchg
stc
jb
sbb
mov
sbb
cltd
imul
or
loope
out
xor
repnz
lcall
lds
les
mov
xchg
out
roll
movsb
inc
lock
ljmp
pop
enter
cmp
cmpsb
iret
int3
shl
int3
adc
inc
sbb
adc
addr16
stos
movsl
cmp
mov
add
mov
push
nop
jmp
pop
sub
out
outsl
xor
jae
xor
inc
pusha
ret
mov
push
rcll
dec
sub
sub
stc
xchg
push
sbb
xchg
xchg
imul
mov
ds
mov
or
and
jl
xor
xorb
pop
or
dec
repz
cld
lcall
cmpsl
push
icebp
xor
mov
lahf
in
iret
jae
adc
pop
pushl
adc
int3
dec
or
loope
xchg
push
dec
cld
lahf
enter
in
mov
mov
mov
sub
and
jbe
nop
and
and
cs
dec
xchg
mov
cmp
rcrl
sub
adc
and
lods
cmp
call
lock
push
adc
sbb
jmp
adc
pop
lea
je
inc
or
ljmp
clc
lahf
push
sbb
inc
pop
push
mov
call
jp
shlb
fstl
sbb
aad
mov
in
pop
dec
jle
cli
mov
inc
cmp
or
sbb
icebp
pop
cli
jecxz
aas
ljmp
das
imul
into
mov
popf
pop
jmp
cmp
ljmp
js
cmp
inc
xor
out
pop
fcomip
jmp
jl
add
std
xchg
ljmp
movsl
jb
adc
cld
jg
jmp
push
inc
mov
cmp
imul
sbb
scas
inc
aas
lahf
cli
ljmp
push
ljmp
cli
decl
mov
sbb
fldenv
inc
ret
cmp
sbb
nop
daa
cli
add
cltd
cmp
jmp
push
jo
fldt
dec
xchg
cli
pop
jns
fdivs
movsb
lock
sbb
leave
add
incl
pushf
imul
inc
push
jns
jle
jno
iret
ja
and
cmpsl
jl
adc
lock
in
ljmp
jmp
xchg
pusha
mov
arpl
fimull
pusha
test
lcall
cmpsb
cs
cmp
sbb
and
cli
ljmp
fs
push
sbb
dec
shlb
pop
adc
dec
xchg
sub
add
fcom
jg
ljmp
rorl
mov
fistl
aas
xor
aad
incl
fsts
xchg
aad
mov
pop
jnp
nop
popf
mov
out
push
jecxz
scas
dec
push
xlat
adc
gs
stc
xor
pusha
pop
adc
push
jne
cmpsl
inc
test
test
xchg
pop
pop
lret
dec
adc
dec
pop
mov
lods
pop
add
add
fs
mov
dec
test
jmp
xchg
push
fsub
add
jle
insl
adc
dec
sbb
xor
cmp
fwait
incl
std
jg
das
add
mov
scas
dec
cmp
sub
jg
push
idivb
push
pop
gs
sbb
iret
xchg
add
and
sbb
cmp
in
faddp
mov
jge
fcomip
pushl
mov
adc
add
jl
mov
pop
and
sub
int3
movsb
popf
ret
jecxz
aad
call
add
test
and
inc
aad
repz
mov
mov
sbb
jg
cmp
and
jge
outsb
les
xchg
aam
inc
mov
loop
adc
pop
ljmp
sub
mov
lcall
mov
in
adc
gs
popf
hlt
fs
adc
decl
aad
push
rolb
push
repz
test
jle
js
jge
loope
pop
mov
and
push
or
movsl
fcompp
sub
mov
dec
call
std
pusha
je
mov
dec
push
sub
push
sbb
push
leave
adc
shl
iret
push
ljmp
lcall
adc
and
xlat
jmp
incl
cmp
inc
arpl
nop
push
and
inc
inc
fsub
adc
outsb
ret
mov
rclb
clc
mov
js
cmp
ss
decl
xchg
mov
xor
sub
jl
dec
aaa
mov
decl
lahf
int3
not
nop
aas
lret
dec
sarl
jns
call
jb
push
sbb
or
loope
pop
jmp
jae
xchg
bndldx
mov
jg
mov
cwtl
fsubs
das
ss
roll
idiv
into
or
mov
add
or
adcb
jl
lret
int
jg
jle
fwait
out
push
stc
scas
lods
das
arpl
pop
xor
cmpsb
sbb
pusha
cld
mov
js
adc
jg
jg
sub
pop
das
mov
push
ds
call
inc
gs
aad
enter
movsl
xchg
divb
fs
add
sub
pushl
push
cmp
mov
mov
sbb
fisttpll
ljmp
add
int
movsl
imul
dec
lret
scas
adc
movsb
mov
mov
and
idiv
fcmovu
fwait
movups
dec
mov
dec
repnz
mov
adc
sub
inc
add
int
fdivr
daa
jg
xchg
shll
jmp
sbb
inc
xchg
lods
lcall
or
fidivl
jbe
mov
outsb
sbb
mov
incl
dec
cvtpi2pd
push
les
push
jmp
es
push
sbb
fidivrl
pop
xor
mov
sub
movsb
stc
in
mov
or
bound
xchg
xchg
cwtl
xorb
enter
decl
push
scas
jae
push
xor
sbb
xchg
movsl
pop
jmp
dec
cmpsl
leave
out
in
addl
pushl
imul
insb
outsb
mov
mov
adc
pusha
test
sbb
jmp
push
push
jp
push
xchg
mov
jmp
sarl
jl
aam
xchg
sti
subl
jg
mov
call
lret
sub
sub
mov
popa
lret
lret
in
inc
cmp
in
xorb
mov
fsubr
dec
imul
pushl
sbb
or
inc
aaa
out
and
fldcw
xchg
pop
mov
scas
clc
cld
je
ffree
mov
jl
ljmp
cwtl
fcmovu
ds
into
xlat
inc
lcall
ljmp
divb
jmp
lret
xchg
cwtl
jbe
xchg
mov
xchg
rolb
push
sti
lock
jp
insl
inc
mov
sub
lods
outsl
xchg
mov
pushl
std
pusha
daa
xchg
cld
push
add
mov
loop
stc
push
pushl
movsb
sbb
sahf
cld
mov
sub
shr
push
push
sti
jmp
jmp
imul
into
jbe
push
test
xlat
add
subb
fadds
decl
jo
jmp
outsb
int
ret
clc
sub
leave
jl
iret
push
movsl
mov
mov
cmpsb
mov
cmp
jnp
cld
push
decb
fldl
rorl
sub
jle
lods
stos
out
push
inc
adc
jb
adc
adc
incl
cld
jmp
scas
lahf
ja
lret
xchg
cmp
cs
pushl
sub
cmp
scas
lret
cmp
loop
pop
call
dec
jb
push
mov
add
jecxz
push
mov
aam
cmp
sub
loope
call
lds
pop
movsl
mov
inc
mov
rclb
repnz
mov
in
dec
popa
jge
mov
jp
and
adc
or
sbb
cmpsb
mov
jns
addr16
loopne
in
negl
je
outsl
out
pusha
lea
incl
adc
pop
xor
mov
inc
fucomi
push
das
fdivrp
sub
push
sub
sbb
int3
jns
bnd
pushl
std
add
ljmp
push
sub
ss
test
pop
ljmp
sbb
adc
cmp
loopne
inc
pop
divl
push
lret
or
das
jmp
aad
mov
lret
movsb
sbb
rcrl
and
or
fbld
cmc
mull
ffreep
fsubr
addr16
inc
out
mov
outsl
xor
ljmp
mov
jne
repnz
jbe
subl
mov
jg
cmp
push
jb
cmp
lods
push
dec
add
fld
xor
incl
adc
inc
repnz
cmovae
es
leave
adc
sub
mov
iret
pop
dec
dec
mov
push
sub
lahf
inc
xchg
cmp
incl
cld
pop
andl
into
jecxz
orl
dec
mov
xor
pop
hlt
dec
push
jp
pop
loop
dec
jmp
push
sti
imul
lods
je
loop
mov
xor
into
movsl
add
movsl
jae
mov
sbb
call
test
aas
loop
shr
xchg
mov
xchg
enter
ljmp
outsb
lret
shlb
mov
xor
mov
cltd
je
inc
push
hlt
adc
xor
mov
aaa
pop
xor
dec
shrl
insb
pop
cmp
sub
nop
movsl
fs
mov
fwait
dec
ja
xchg
iret
jno
inc
mov
or
mov
cltd
mov
movsb
int3
ss
int
mov
cmp
inc
int
in
rclb
jecxz
data16
inc
mov
fcmovnbe
push
mov
ljmp
xor
add
pop
loop
mov
fbstp
repz
jg
pushl
aam
scas
sbb
rcr
inc
lcall
cmpsb
push
ret
aas
icebp
mov
mov
mov
push
xchg
push
nop
jp
decl
ret
mov
inc
fimull
xor
mov
cmp
mov
mov
xchg
mov
mov
lcall
mov
stc
std
pop
stc
sub
jg
lahf
sahf
lds
fwait
outsb
mov
fs
cmp
idivl
jmp
sub
aas
pop
push
xor
loope
inc
xchg
xchg
xchg
sub
jo
mov
pop
lods
dec
sbb
js
push
insb
inc
mov
in
sahf
hlt
sti
repnz
js
sti
add
sbb
dec
mov
pop
ss
int
xor
lods
cmp
cltd
scas
test
push
jns
and
pop
sub
jmp
cmp
addl
rorl
icebp
fwait
arpl
call
das
mov
cmpsb
fldt
or
xchg
data16
call
jle
jae
stc
pop
xchg
div
dec
mov
ss
stc
test
sbb
xchg
decl
cmp
cltd
jno
cli
frstor
ljmp
ds
lcall
aam
insl
movsl
repnz
scas
jle
aad
xor
mov
jle
aad
mov
cmc
stos
fildll
outsl
mov
push
inc
std
out
sub
cmp
dec
push
mov
clc
push
push
jmp
aas
mov
adc
mov
pop
outsl
adc
cmp
js
cmp
fdivrp
call
and
and
daa
loopne
in
aaa
mov
mov
mov
jae
mov
cmpsb
hlt
xlat
addr16
dec
pop
add
ljmp
pop
ljmp
sub
decl
sub
and
sbb
inc
aas
sbb
pushf
mov
lock
ljmp
sti
lods
imull
sub
std
fs
ficomps
mov
rorb
lcall
loope
sub
popf
fistpl
mov
ljmp
call
jg
mov
test
mov
ror
xor
adc
adc
and
das
decl
inc
lods
lods
mov
cmp
push
test
insb
cltd
fldcw
lret
lret
sbb
pop
mov
insl
in
insb
ja
mov
clc
sbb
cltd
jns
in
pop
loopne
lods
in
fmuls
int3
repz
in
sarb
repz
int3
xor
or
cmp
push
ljmp
add
pop
mul
out
call
lock
into
out
stos
jp
in
jbe
or
mov
inc
ret
ja
stc
das
int3
sub
dec
push
fdivr
lcall
shrl
mov
sub
sub
xchg
test
mov
enter
jp
in
inc
loop
pop
sub
pop
lret
rorl
cmpsb
xchg
xchg
mov
pop
dec
mov
mov
cmp
add
mov
cli
dec
mov
lock
lcall
js
leave
xchg
fisttpl
pushf
mov
aam
test
push
andl
ljmp
push
test
push
ja
sub
or
cmp
jnp
jmp
inc
pushf
hlt
sub
sti
cmpsb
pop
pop
pop
fs
loop
in
aam
cltd
into
movsb
out
stc
mov
add
sbb
pop
cmpsb
not
jnp
mov
negl
cltd
fmulp
test
xchg
cmp
add
fildll
das
jae
sbb
pop
xchg
ret
mov
dec
cltd
lods
call
mov
jae
rorl
out
je
lahf
test
lods
ja
lcall
xor
nop
inc
sub
and
mov
jg
fidivl
lcall
inc
jno
xchg
dec
jo,pt
cld
dec
xchg
jo
lcall
lcall
ljmp
jnp
jo
lock
push
or
jns
or
dec
fimuls
in
es
push
in
scas
add
xchg
movl
std
sub
mov
repnz
divb
out
clc
push
and
bound
or
adc
jmp
pop
xchg
push
mov
mov
in
loope
lds
cmc
arpl
pop
inc
fldenv
ljmp
cmpsb
mov
push
hlt
sub
xchg
les
cli
cmp
test
or
imul
cld
jmp
mov
les
scas
out
iret
daa
fstl
mov
aaa
int3
enter
or
rclb
mov
jne
je
jge
pop
sti
push
arpl
icebp
mov
ror
shl
dec
pop
sub
fsubrl
lcall
cmpsl
sub
inc
pop
hlt
fdivs
add
mov
xchg
or
dec
inc
sbb
mov
pop
jg
rolb
or
lahf
inc
call
xchg
xchg
or
and
and
jecxz
dec
mov
jl
popf
lahf
push
xor
aaa
cld
jnp
lret
mov
jno
ja
cwtl
int
not
mov
jmp
lcall
cwtl
outsl
xchg
addr16
daa
xor
shl
lret
movsl
sub
fisttps
shll
sub
pop
pop
ljmp
int
xchg
lahf
push
jg
daa
jl
push
mov
rorb
lcall
decl
mov
out
ss
pop
aaa
pop
push
scas
xchg
movsb
dec
lahf
mov
cmp
call
loopne
loop
push
test
and
setae
test
icebp
fildll
fcomip
out
pop
insl
in
leave
mov
in
pushl
es
mov
xor
pushl
xor
cmp
test
js
ss
or
pop
mov
mov
xchg
jne
cltd
sbb
mov
stos
xchg
dec
mov
mov
iret
call
rorb
pop
test
cmp
fists
jae
mov
cmpsb
je
jbe
test
pop
inc
add
and
std
decl
sbbl
das
xor
inc
mov
sub
sbb
dec
out
dec
out
or
fs
fdivrs
aad
sub
cmc
xor
ffreep
jecxz
outsb
dec
dec
fldl
mov
sbb
hlt
lret
lods
push
filds
frstor
ja
push
in
sti
les
repz
jmp
mov
xor
pop
outsb
and
je
ds
adc
dec
dec
xchg
mov
pop
mov
sbb
sahf
stos
cs
dec
xor
sub
xchg
not
inc
add
sub
xor
mov
incb
clc
fs
arpl
sbb
push
insl
xchg
std
mov
pop
call
clc
adc
insl
sahf
sub
add
xor
push
sbb
xor
cmpsl
dec
outsb
push
call
gs
addr16
xlat
jl
sub
aaa
popf
push
mov
add
dec
scas
pop
xchg
adc
test
decl
sub
cmp
mov
xchg
or
fcmove
test
shl
iret
insb
repnz
loop
jg
cmc
mov
ja
out
sub
and
sub
cmpsl
lods
je
decl
push
or
mov
scas
addl
outsb
out
insl
lea
cmp
call
and
fstpt
sub
inc
inc
cmpsb
ss
mov
dec
mov
or
xlat
jb
inc
xchg
pushl
push
cltd
adc
imul
arpl
push
ret
repnz
sbb
popa
inc
cmp
in
xchg
sbb
sub
add
or
xchg
push
xchg
test
add
pushl
xchg
fists
ficoml
nop
dec
xchg
aam
ljmp
imul
arpl
ss
or
stc
cmpsl
jp
xor
sub
xor
dec
mov
addl
repz
aam
xor
lods
into
cmp
outsb
jl
and
stos
jl
xchg
mov
jge
push
movsb
enter
in
lcall
jp
dec
xchg
mov
movsb
lds
push
sub
int
pop
mov
push
mov
mov
dec
inc
inc
or
insl
add
mov
mov
testb
das
sbb
cs
mov
data16
fldt
or
mov
cld
sbb
cld
sbb
icebp
loop
pop
xor
lods
mov
dec
jbe
adc
mov
jns
lcall
xlat
mov
das
xchg
add
sub
dec
add
or
jns
cmc
or
jle
mov
inc
incl
mov
dec
stos
mov
decl
inc
and
push
in
sbb
inc
out
jne
xor
dec
rcrl
mov
fbld
aad
xchg
inc
call
loopne
jne
push
scas
inc
mov
and
xchg
mov
dec
sbb
mov
adc
pop
out
xchg
into
dec
or
pop
dec
test
push
pop
pop
adc
jmp
push
push
mov
pop
adc
loope
pop
lea
negl
inc
incl
pop
lea
adc
stos
pop
out
and
ljmp
ds
ja
out
es
idivl
fcomip
decl
xor
mov
data16
fidivs
mov
mov
sbb
xchg
pop
dec
scas
idiv
jmp
pop
fisubrs
call
xchg
fistpl
fiaddl
jle
stos
jne
decl
rorl
mov
imul
fs
jbe
mov
pop
and
frstor
call
mov
js
fistl
mov
out
xchg
push
jbe
cs
movsl
dec
cmc
shld
das
leave
xor
pop
daa
adc
fwait
jle
pop
loope
in
or
jg
in
push
je
stos
pusha
adc
jnp
mov
loopne
incl
pop
jmp
sbb
fsubrl
xor
xchg
jmp
fwait
das
daa
mov
int3
cs
arpl
lock
scas
sbb
out
lcall
fs
pop
xor
test
enter
push
movsb
sub
sar
decl
sub
cmp
mov
adc
and
sub
pop
sar
mov
dec
scas
push
mov
push
pop
cwtl
stos
pop
cmp
nop
leave
adc
dec
sti
mov
sti
leave
add
push
cmp
outsl
cmpsb
and
test
xchg
cmp
stos
pop
lret
cmp
dec
into
iret
jne
mov
call
fiadds
imull
adc
out
pop
adcb
in
jno
adc
lahf
decl
pop
push
adc
mov
adc
sub
rcrl
cmc
cmp
decl
lock
jmp
loop
push
jl
mov
jmp
jle
iret
lock
sbb
xchg
pminsw
sbb
push
or
cmp
pop
jne
cmp
or
call
or
loope
shll
mov
lcall
and
out
aad
cmp
pop
inc
add
jg
es
sbb
idiv
decl
lret
pop
and
dec
lahf
xor
jmp
sub
mov
jmp
loop
jnp
pop
fld
das
sbb
out
fisttpl
in
xchg
jg
mov
fisttpl
sbb
fs
stos
popf
hlt
ret
loop
mov
sahf
cmpsb
aad
inc
lods
call
sub
js
mov
in
lret
fidivs
ret
jbe
mov
incl
and
and
xorl
mov
daa
cmp
aad
ljmp
push
hlt
mov
sub
xchg
add
loope
jg
dec
xorb
dec
mov
xor
mov
mov
mov
shrl
jbe
inc
nop
adc
call
in
xchg
mov
aam
jo
and
pushf
nop
mov
xor
mov
fbld
mov
cmpsl
and
shrb
inc
xchg
inc
idiv
imulb
xchg
and
xchg
and
sbb
bound
sar
and
dec
nop
cmp
xchg
jg
and
inc
cmc
out
data16
ljmp
push
lock
adc
sbb
inc
imul
lret
enter
inc
clc
test
rclb
test
cs
movsb
jnp
mov
jbe
iret
shl
jecxz
jae
push
mov
jg
cwtl
ja
mov
pop
or
ljmp
push
in
push
cwtl
inc
or
jb
adc
adc
fists
xchg
mov
jg
subl
test
ret
or
push
xchg
dec
popa
scas
and
cli
jg
call
ret
sbb
xor
push
ds
sbb
mov
sti
outsl
jg
das
adc
test
cwtl
neg
in
aad
xor
mov
fstpt
mov
repz
add
push
sub
inc
sub
clc
push
sub
dec
or
push
inc
pop
dec
test
pop
lock
mov
mov
test
ja
sub
ror
out
mov
xor
mov
mov
cld
subb
hlt
and
mov
imulb
inc
ret
cs
adc
jo
pop
cmc
rcll
dec
bound
mov
clc
loopne
les
mov
pop
and
mov
dec
popa
xchg
mov
mov
xchg
or
jle
imul
movsl
xor
shrb
stos
inc
aam
or
lea
aad
xlat
push
les
stos
jb
mov
mov
scas
jge
jecxz
roll
mov
push
mov
loopne
xchg
adc
mov
testb
pushl
cld
sub
dec
ret
cwtl
in
mov
cmp
cmc
pop
cmpsb
call
inc
js
fsubrl
or
lahf
inc
es
cmp
in
xor
add
push
and
add
mov
call
cmpb
pop
jb
repz
inc
lock
cmp
andb
faddl
or
mov
cltd
mov
mov
gs
mov
mov
mov
cmp
sub
dec
insl
inc
std
scas
bound
cmp
and
cwtl
ret
rclb
ret
repnz
addr16
pop
push
les
pushl
ret
jb
pop
int3
xor
imul
cli
ficomps
xchg
icebp
in
add
pushl
and
mov
mov
lcall
mov
in
jle
sub
jmp
pop
cmp
xor
jecxz
pop
rcll
cmp
cld
mov
ljmp
repz
pop
jmp
jl
mov
or
repz
pushf
in
push
xor
call
mov
jo
out
sub
xchg
sbb
jne
decl
and
clc
cmp
imul
dec
xchg
fwait
push
lods
jno
pop
adc
sti
test
or
cwtl
test
cld
push
sub
lods
xchg
mov
jo
sbb
pushl
mov
push
dec
mov
iret
lret
add
outsl
inc
lock
call
jb
pop
xchg
imull
dec
xlat
fwait
lahf
fidivs
stos
daa
aad
mull
rol
cli
out
fs
lock
pop
xlat
repnz
xchg
cs
fidivs
ret
xor
call
and
xchg
lock
idiv
adc
decl
lret
dec
ja
lods
out
xchg
fcomps
stos
mov
stos
cmp
mov
mov
imul
fstpl
jbe
pop
imul
sub
in
loop
scas
push
imul
ljmp
push
ja
xchg
mov
pop
sub
gs
fmul
mov
bound
sbb
mov
test
out
fisttpll
lds
mov
pop
mov
mov
into
iret
cmpl
cli
aad
insl
out
out
mov
mov
and
rcrl
jns
into
fbld
mov
incl
stc
mov
fmul
test
mov
shrl
notl
xor
sbb
inc
sti
pushl
pushl
dec
adc
nop
mov
xchg
pop
mov
inc
inc
mov
lock
fidivl
daa
decl
mov
mov
bound
xchg
sub
push
add
push
sbb
leave
lcall
movsl
dec
out
inc
xor
cld
mov
lods
or
enter
data16
inc
addr16
xchg
xchg
insb
in
mov
aam
ret
inc
das
sub
icebp
fsubrp
adcl
pushl
roll
or
dec
adc
loopne
add
nop
lods
cmp
movsl
mov
pushw
inc
aad
orl
gs
cmc
cmc
inc
pop
cwtl
cmp
push
ljmp
aad
xchg
cli
push
into
cmpsl
fcmovne
or
pop
pop
aaa
fadds
cmpsb
jmp
jne
movsl
mov
xchg
inc
insb
xchg
imul
lcall
decl
cmp
shl
aaa
out
outsl
push
daa
push
lods
stos
jno
lods
xchg
pop
shl
xor
cmp
pushl
sahf
mov
fistpl
pop
out
dec
in
lods
dec
fimuls
push
add
push
pushl
pop
inc
sahf
mov
lea
cltd
cmc
ljmp
insl
stos
dec
mov
lcall
pop
dec
add
loop
es
fldl
insl
adc
mov
jns
rol
or
cwtl
mov
fisubrl
mov
jmp
hlt
pop
lods
cmp
insb
incl
repnz
addr16
cld
fs
mull
push
ret
sbb
decl
adc
jge
or
cmp
incl
std
lahf
insb
jg
fidivrl
push
lods
mov
es
call
jmp
out
fisttpll
lods
ds
mov
jmp
xchg
xchg
addr16
jno
xchg
pop
mov
pop
insl
xchg
mov
add
cli
ljmp
icebp
imul
jp
push
subl
data16
cmp
push
ljmp
outsl
jle
je
ljmp
and
popa
pop
data16
imul
popa
std
sub
sar
lcall
push
addb
loope
and
mov
sahf
insl
inc
mov
es
in
fcmovu
mov
jns
out
jno
xor
cmp
sbb
jae
repz
ret
jo
adc
jg
sub
mov
cmp
idiv
incl
scas
fcoms
arpl
cmc
push
call
fs
outsb
xchg
cli
and
adc
mov
aaa
and
ds
sbb
cmpb
test
pop
jge
mov
scas
xchg
lods
loop
incl
mov
push
movsl
aas
or
jge
into
insb
xor
inc
sub
sarl
and
adc
cmp
cmpsl
outsb
int
loop
dec
das
mov
mov
mov
cmp
mov
xor
jns
jmp
orb
jae
ljmp
jne
fnsave
mov
inc
push
outsb
cmpsb
cli
mov
data16
test
cmp
and
mov
sti
cmpsl
cmp
cld
fidivrs
xor
push
lcall
jnp
std
in
aam
lea
cmpsb
push
mov
xor
sbb
in
jge
out
cli
decl
insl
icebp
std
push
in
js
inc
imul
punpckhdq
mov
lods
sbb
sub
idiv
idiv
jno
jbe
insb
je
cmp
ror
dec
xchg
in
jno
push
idivb
jl
ljmp
inc
fistpl
sarb
mov
ljmp
xchg
cld
xor
movsl
ja
push
jg
inc
jp
rcrl
dec
sub
ja
pop
icebp
push
pop
leave
into
dec
aam
mov
decl
add
cwtl
xchg
mov
mov
jge
adc
arpl
decl
orb
and
out
mov
lcall
ss
loopne,pn
cmp
cld
loop
cmp
sub
pushf
mov
mov
jecxz
sbbb
push
jbe
sub
iret
inc
pop
out
subl
push
les
aaa
cli
rorl
sub
aas
mov
idiv
movsb
not
ret
push
push
cmp
lods
faddl
js
mov
bound
push
mov
mov
fisubs
mov
fwait
out
cmp
and
and
sbb
cmp
push
push
not
repz
dec
dec
stc
or
cwtl
mov
add
fucomip
or
jecxz
dec
daa
push
lcall
int3
popl
cmpsb
push
fldenv
test
sbb
sub
xchg
ljmp
incl
cmpsl
nop
xchg
loope
std
xchg
shl
ret
and
mov
incl
sbbl
in
mov
jecxz
push
dec
loopne
leave
push
cmp
dec
decl
mov
rolb
sbb
insl
mov
jae
push
sbb
jae
or
loope
jp
push
jae
mov
aas
movsb
pop
das
cwtl
fcomip
lcall
cmp
mov
inc
daa
loopne
inc
pusha
mov
in
sub
call
inc
jnp
in
push
out
outsl
in
dec
test
mov
clc
jg
dec
sub
push
movsb
xchg
or
mov
mov
imul
ljmp
pop
loopne
push
int3
enter
mov
into
xchg
mov
cmp
lret
fisubs
push
add
addr16
js
xor
pop
xchg
pop
or
mov
fsubs
xor
push
ror
repnz
sbb
lcall
pop
flds
mov
repnz
cmc
fcompl
adc
xor
andb
jmp
cmc
pushf
js
dec
fmuls
rcll
pop
adc
push
in
subl
jge
xchg
jecxz
cli
ljmp
cld
jns
repz
call
jnp
filds
push
mov
push
pusha
sbb
or
call
ljmp
out
mov
mov
add
fisubl
mov
jnp
lds
jg
pusha
sub
pop
in
push
pop
cld
lods
insl
xorl
out
mov
sbb
rcrl
int3
out
and
xchg
fwait
add
insb
adc
call
pop
dec
bound
jne
cmp
loop
cmp
or
mov
ljmp
push
addr16
pusha
scas
fs
sbb
not
icebp
sub
adc
loopne
jg
cmp
jle
mov
add
fdivrl
test
incb
dec
inc
jnp
xchg
out
decl
inc
std
cmpl
cmp
push
out
or
push
call
call
xor
daa
add
and
fldcw
mov
or
inc
leave
out
sub
cmp
mov
icebp
mov
jnp
outsb
std
mov
mov
mov
mov
out
jo
clc
xlat
adc
aas
jae
inc
push
xchg
movb
std
std
iret
out
test
dec
les
out
xor
xchg
cmp
dec
hlt
jle
out
rorl
lods
fwait
fs
cmc
jmp
ret
jg
mov
dec
ret
subl
mov
inc
test
nop
dec
mov
cld
test
insb
imul
pushl
fs
push
test
test
xchg
sbb
dec
insb
add
sbb
cli
incl
fstl
imull
leave
fwait
dec
int3
xchg
mov
ljmp
mov
idiv
jb
in
ss
mov
fnstsw
pushl
xchg
shll
mov
enter
pop
inc
rolb
outsb
dec
cmp
iret
pop
outsl
jecxz
or
mov
xchg
fsubs
xor
jns
mov
and
sbb
push
sub
add
ljmp
call
mulb
repz
jnp
lcall
pop
mov
mov
pop
jge
sub
fcmovb
xorb
rcrl
sbb
aad
out
pop
icebp
cli
and
pop
pop
pop
popf
sbb
dec
sub
fsubrl
jmp
push
adc
pop
mull
scas
xchg
jb
push
and
cltd
icebp
rcll
pop
js
add
repz
cmp
clc
insb
adc
jmp
mov
out
scas
jnp
jb
xchg
push
push
mov
in
enter
jecxz
add
decl
mov
pushf
and
nop
cmp
mov
adc
ret
jg
and
and
pop
sbb
or
aad
cld
fisttpl
in
inc
lods
mov
mov
insb
ja
rcl
and
rcl
mov
mov
ss
mov
fldcw
xchg
test
jnp
stos
xlat
sub
sbb
push
clc
mov
pop
sub
push
dec
mov
decl
fidivs
stos
push
mov
jmp
push
xchg
movsl
jno
xor
shrl
sub
into
ret
xchg
je
mov
push
mov
nop
cmpsl
and
cmp
jns
jmp
shlb
adc
mov
inc
and
push
ds
xorl
pushl
mov
lods
daa
sahf
cmp
mov
mov
call
mov
cltd
cli
decl
xor
test
inc
inc
xor
mov
sbb
fidivrs
mov
inc
inc
mov
and
cmp
insb
mov
xchg
mov
jg
stos
sub
jne
inc
sbb
movsb
icebp
push
xchg
jmp
imulb
ljmp
call
or
and
lcall
fsubrs
mov
sbb
fldcw
cltd
xor
in
repnz
mov
mov
scas
cmp
jnp
in
lea
cmp
push
mov
hlt
or
enter
out
xor
push
rorb
pop
jae
mull
rclb
scas
test
lcall
mov
add
jnp
sbb
mov
inc
add
cld
dec
aas
inc
inc
sub
push
mov
and
xchg
add
int3
repnz
decl
outsb
xlat
xlat
adc
push
xor
data16
ss
jbe
mov
push
and
out
jmp
mov
xor
mov
lret
push
dec
mov
fadds
add
insl
cltd
inc
jnp
sbb
mov
inc
outsl
xchg
stos
roll
movsl
aad
outsl
clc
ljmp
das
jne
out
mov
mov
push
mov
rcrl
xchg
jns
sbb
leave
inc
decl
mov
xchg
push
push
jno
push
sti
call
pop
add
shr
sbb
loopne
add
rcl
decb
dec
add
jg
rorl
push
jo
adcb
mov
push
xor
rcr
fbstp
lock
push
sub
lods
mov
xchg
sbb
fdivr
lods
loope
pop
sarl
sub
push
shl
sbb
sub
inc
dec
aas
fisttps
sbb
jp
jo
popa
insl
or
pop
mov
call
jo
pusha
add
push
add
mov
add
lods
add
fmull
pop
or
add
rsqrtps
pushl
loopne
shrb
sbbb
cmpsl
add
mov
add
stos
jecxz
add
add
add
add
mov
call
add
add
add
xorl
cmp
push
add
das
xor
in
pop
lock
daa
dec
notl
jbe
ret
addb
aas
cmp
testl
insb
add
cmp
push
rcrb
xorb
in
dec
add
mov
decl
incb
outsb
cmpsl
sub
pop
or
mov
jno
sahf
xor
cld
incl
jle
outsb
add
jo
cmp
repz
mov
addr16
dec
mov
clc
adc
adc
dec
int
sub
lcall
incl
outsb
test
or
loopne
pop
int3
cmp
mov
pop
cmp
mov
into
int
dec
aad
incl
lret
ret
pop
pop
icebp
inc
in
cld
cwtl
push
faddl
fbstp
jmp
jl
jle
add
mov
int3
or
in
test
aas
mov
imul
jns
push
pop
clc
pop
cmp
loop
mov
pop
pop
push
jmp
jno
push
push
imul
es
je,pn
sbb
es
mov
lcall
mov
or
sub
add
adc
std
sub
aad
lahf
test
loope
outsl
repz
inc
jmp
or
jno
cmp
out
imul
pushf
push
cmpsb
pop
pop
popa
rcl
cmp
jg
ljmp
addr16
das
in
inc
mov
mov
lds
sahf
in
decl
popa
or
test
addr16
and
push
cs
fisubrl
inc
cli
incl
mov
orb
push
pushf
dec
sub
in
cmpb
test
dec
dec
fwait
popw
repnz
and
shrb
sbb
or
mov
mull
ficoml
aas
pop
pushf
dec
add
add
push
mov
xor
dec
and
outsl
sbb
sub
mov
dec
jecxz
aaa
daa
lea
mov
test
or
sti
inc
fdivr
xchg
pushl
incl
jns
lcall
out
mov
lcall
adc
clc
xlat
mov
sbb
ljmp
jae
rcrl
lock
std
push
xchg
mov
loopne
outsl
cld
cmpsl
cld
lods
incb
adc
pop
nop
cmp
pop
dec
shll
cmp
jmp
jo
jns
xchg
xchg
dec
push
int3
jg
sbb
jp
xchg
xor
jae
mov
cmp
lret
or
or
cmc
roll
sarb
pop
xor
mov
pusha
mov
dec
push
and
in
jb
xor
in
andb
jecxz
dec
add
mov
cmp
ljmp
repnz
mov
sub
arpl
xchg
add
out
cmp
fdivrp
jmp
dec
mov
addl
movsb
sub
outsb
sar
jp
add
test
adc
mov
mov
cmp
icebp
sbb
ja
push
je
adc
mov
and
mov
cli
lea
mov
cmp
out
cli
dec
xor
sbb
push
int3
push
xor
pushl
pop
cmc
movsb
addr16
cwtl
and
sub
mov
sbb
sub
mov
mov
dec
sbb
xchg
lahf
lcall
or
sub
mov
mov
sbb
ficoml
lcall
or
pop
mov
mov
orl
das
pop
cmp
lea
aas
inc
lret
adcb
lods
test
mov
je
mov
sbb
pop
inc
push
ret
jl
pop
decl
push
or
nop
imul
test
and
xchg
loopne
imul
ljmp
lods
xor
mov
xor
add
dec
lret
lcall
int3
dec
xchg
jbe
loopne
call
xor
stc
pop
cmp
jg
mull
std
imul
xlat
jns
call
test
or
adc
arpl
mov
cmp
mov
out
cmp
sub
fnstenv
rolb
dec
out
scas
es
les
xchg
ja
scas
stc
jb
fsubrp
pop
icebp
cmp
jmp
xor
add
aad
cmp
rcrl
repz
cmpb
ds
lret
lods
jmp
pushl
rolb
aaa
mov
pushf
stos
cmp
mov
mov
mov
ja
push
dec
sarl
leave
dec
sub
ss
push
pop
inc
sub
insl
push
push
push
adc
jnp
std
xchg
sahf
stc
gs
pushl
out
ret
push
xchg
mov
icebp
fstps
adc
sub
repz
in
jnp
xchg
sbb
lcall
xchg
and
aad
mov
dec
lods
jbe
inc
repnz
call
lahf
call
xor
jge
pop
loop
insl
es
nop
cld
push
test
neg
lock
js
fiaddl
insb
icebp
repz
clc
cwtl
xor
mov
pop
test
out
cli
pushl
dec
fnstenv
gs
scas
iret
ja
cwtl
aas
push
movb
js
mov
clc
mov
lret
cmp
jg
pop
jle
push
xor
adc
inc
dec
decl
cmp
xchg
call
in
lods
mov
dec
inc
dec
pop
sub
mov
jp
bound
repnz
sti
jp
fdivr
test
dec
stos
in
push
sahf
nop
fnstenv
out
cmp
fnstsw
fwait
js
std
mov
les
cld
repnz
pcmpeqd
mov
cwtl
jbe
fcos
jg
jecxz
lret
or
fiaddl
dec
dec
ds
cmp
jle
pop
cmp
cmpsl
les
jnp
ficomps
hlt
ds
and
in
mov
jmp
repz
jl
jmp
cmpsb
cmpsl
ret
ja
pop
outsb
aad
cmp
mov
incl
arpl
jp
push
arpl
nop
sahf
cmc
test
stc
mov
xchg
jo
insl
call
mov
pop
adc
mov
dec
and
ret
jmp
fwait
push
bnd
cmp
loope
subl
test
push
in
and
dec
mov
mov
adc
or
mov
movsl
pop
frndint
cltd
out
pushf
neg
jmp
mov
ret
jle
add
mov
jmp
mov
idivl
fwait
sbb
mov
xchg
scas
out
mov
pop
cmc
pushl
and
adc
xor
xchg
jecxz
les
adc
clc
aam
mov
push
jle
push
jnp
ret
nop
dec
jae
cltd
cmp
lcall
mov
and
mov
ret
sbb
lock
ja
daa
fimuls
mov
dec
ljmp
ret
ja
cmp
lahf
mov
cmp
aaa
fwait
mov
cld
fidivl
push
cmp
ds
xor
jae
push
pop
push
adc
pop
insb
lds
cmp
adc
loop
jg
fcom
dec
in
loopne
int3
add
dec
inc
insb
lahf
testb
lahf
js
data16
xlat
imul
lret
push
cltd
or
call
out
add
sahf
out
xchg
int3
pop
xchg
dec
pop
mov
cld
out
xchg
xor
jbe
jl
xchg
jmp
shll
stos
mov
pushl
or
dec
fsubl
out
flds
test
pop
jl
push
push
fidivrl
data16
aaa
dec
pop
cmp
pushl
push
movsl
lods
mov
out
xchg
push
stc
or
sbb
fisttpll
xchg
jl
add
cli
iret
rcll
call
lods
test
jnp
inc
jl
test
mov
repnz
lods
testb
int
icebp
outsl
mov
mov
outsl
pop
pop
fs
xchg
pushf
ffree
pop
inc
jecxz
mul
inc
int
ds
jno
jecxz
sub
xor
cmpsb
decl
mov
icebp
imul
mov
jecxz
enter
out
xor
fstps
jle
dec
outsl
aad
lss
xchg
xchg
sub
sub
mov
lea
add
repnz
in
cli
mov
aam
lea
sar
call
std
xchg
mov
enter
shll
rcrl
rcl
rcll
into
sub
cld
inc
cmp
cli
cmc
out
push
dec
movsb
ss
push
xchg
loop
test
cmp
push
aas
cmp
dec
xor
lods
out
jno
sub
sub
jmp
ret
les
pop
jne
orw
adc
aad
push
test
xchg
mov
int
shrb
fs
dec
xor
xchg
adc
mov
imul
hlt
mov
fimull
aad
test
pop
xor
arpl
xchg
pop
hlt
lcall
mov
into
sbb
pop
push
push
fcos
mov
push
loope
ljmp
jmp
cmp
mov
mov
cmp
dec
jg
mov
mov
xchg
sub
cld
ss
fistl
mov
mull
in
sahf
jge
jg
cld
or
mov
scas
push
dec
cmpsb
orb
cmp
mov
fwait
xchg
cltd
mov
mov
mov
jl
mov
gs
pop
sarb
ja
jmp
xor
ss
jno
popf
mov
pusha
dec
cwtl
add
pop
mov
decb
cmpsb
mov
ljmp
or
jg
dec
aas
sahf
movsb
cld
iret
not
lcall
les
and
mov
pop
mov
fistpll
xchg
sbb
ljmp
orl
decl
lods
lret
sti
repnz
movsl
in
es
push
data16
call
push
jp
and
mov
ds
jnp
insb
fwait
mov
dec
out
repnz
loop
sub
cmpsb
cwtl
jge
mov
inc
xchg
xchg
sub
mov
xchg
adc
or
mov
fxch
pop
cmpsl
xor
dec
ds
je
jmp
xchg
push
decb
fwait
pop
sbb
scas
push
imul
jnp
sarb
and
and
xchg
push
lcall
inc
bound
add
lods
cmp
cmp
mov
push
aam
in
pop
mov
out
ss
clc
lahf
int3
cltd
dec
jns
jp
cmp
cld
insl
sbb
or
push
icebp
clc
sub
xchg
xchg
cld
hlt
pop
cld
ljmp
scas
arpl
repz
icebp
sti
lods
out
addr16
mull
lcall
xlat
xchg
fs
dec
imul
rorb
add
pop
xchg
xchg
sbb
mov
pushf
sub
add
ljmp
sbb
xor
lock
add
inc
add
inc
faddl
incl
inc
rcrl
and
xor
push
js
out
xor
pushf
outsl
push
into
sbb
shl
mov
lods
ret
sub
sub
sub
mov
pandn
sbb
xchg
ja
lods
push
sub
pop
pop
dec
mov
adc
out
outsl
addr16
out
xor
data16
js
stc
fcmovnu
sbb
pop
cmp
sub
cmp
xchg
inc
add
loopne
cli
loop
fldl
out
rcll
cmp
push
cltd
int
sub
decl
push
lds
mov
ljmp
jge
stc
mov
lcall
mov
dec
sub
push
pop
ret
push
aad
hlt
mov
xchg
aas
lds
pushl
or
dec
mov
stos
int3
inc
icebp
or
hlt
popf
inc
sub
cli
add
mov
add
xchg
push
sbb
sub
je
incl
lods
bound
hlt
lcall
mov
incl
movsl
xor
lods
pop
sub
lahf
inc
aam
push
ljmp
lea
jns
sahf
fbstp
mov
scas
pushf
push
inc
movsl
dec
imul
imul
jg
mov
or
ficomps
clc
xchg
jbe
xor
inc
inc
rcll
clc
adc
jnp
inc
mov
xor
lods
or
mov
fs
clc
sbb
leave
mov
fildl
inc
and
loope
add
add
xlat
jo
aad
lcall
je
imul
cmp
push
ljmp
pusha
mov
pop
lock
leave
mov
push
test
and
js
cld
and
mov
sub
mov
mov
ljmp
fcmovu
inc
arpl
jmp
or
movl
jbe
push
pop
movsl
std
shll
or
mov
sbb
sbb
inc
and
or
mov
shl
mov
fmull
decl
fistpll
xchg
sub
jo
push
xor
dec
jb
and
sti
pusha
mov
je
dec
cmp
mov
push
xor
stc
sub
adc
stc
xor
mov
addr16
cmp
cmc
sahf
scas
and
aas
fwait
incl
div
decl
and
dec
inc
sbb
pop
adc
add
adc
xor
incl
pop
std
es
loopne
pop
sub
ss
fwait
inc
and
mov
cli
incl
js
and
std
cmpsb
dec
pop
js
cwtl
ret
cmc
stos
mov
xchg
repz
std
pop
mov
or
testl
int3
lea
xchg
loop
pop
or
jmp
insl
xor
insl
jnp
je
jne
push
ljmp
jns
inc
adc
movsb
pop
arpl
dec
push
xchg
mov
repz
mov
mov
push
call
int
mov
jle
scas
mov
out
sbb
in
mov
lcall
pop
jnp
ffreep
sub
subb
sbb
push
nop
inc
rcrb
call
call
pop
pop
fwait
rorb
ret
gs
xchg
inc
ds
fneni(8087
sub
into
scas
push
into
les
test
cltd
sbb
lret
enter
mov
cmp
push
jbe
mov
insb
jg
jg
incl
sub
ljmp
jno
mov
cwtl
push
loope
lret
int3
ljmp
mov
xor
shr
inc
mov
fnsave
inc
xchg
dec
pushf
jo
call
mov
jmp
in
jmp
fstpl
rorl
fsubrp
mov
mov
decl
push
out
mov
xlat
jp
mov
mov
sar
decl
fisubrs
sbb
dec
sahf
add
xor
in
inc
push
stos
cwtl
mov
ljmp
in
pop
pop
mov
pop
jge
mov
imul
mov
ljmp
jg
stos
decl
inc
in
pop
mov
jno
dec
cli
mov
dec
pop
fsubs
mov
shrb
dec
in
mov
imul
repz
xchg
pop
mov
sbb
mov
and
inc
add
int3
test
fisttpll
out
decl
scas
dec
cmp
xchg
push
xor
push
ret
imul
or
aas
dec
mov
inc
sbb
or
arpl
pop
push
jp
insb
in
imul
pushl
cmp
arpl
pusha
ja,pn
std
cltd
popf
xor
ja
cmp
call
jp
sar
or
cltd
imul
cli
js
xor
push
loope
add
ror
push
outsb
push
mov
imul
and
outsl
or
out
or
out
or
cmp
mov
scas
stc
inc
rorb
jno
fsts
inc
andb
add
xchg
dec
shlb
jg
pop
mov
dec
xchg
fwait
or
mov
cwtl
ret
cmc
xchg
jge
cmp
add
cmp
das
mov
sbb
cmp
xor
push
daa
xor
dec
xchg
jle
jns
mov
aas
pop
pop
jnp
ljmp
movaps
xor
or
mulb
ss
cmpb
or
ljmp
mov
mov
aam
call
out
ljmp
lcall
or
stc
cmpsb
test
out
call
test
into
push
dec
fnsave
insb
sbb
out
decl
stc
popf
out
decb
xchg
sub
scas
xchg
data16
stos
dec
icebp
cmpsl
and
scas
js
xchg
sbb
cmp
jecxz
bound
sti
xor
add
dec
lds
dec
sbb
roll
mov
call
call
jg
push
mov
outsl
jae
mov
mov
mov
inc
das
call
int3
mov
std
mov
xchg
pop
cmp
dec
fdivs
cmp
popa
cmp
call
xchg
dec
bound
popa
adc
aad
dec
lods
jnp
mov
stos
dec
lea
xchg
sub
inc
push
loopne
das
rclb
jle
data16
pop
sbb
je
ljmp
add
dec
pop
insl
xor
jle
dec
lea
mov
lcall
call
lret
xorl
push
xor
xchg
inc
adc
clc
or
mov
bound
sub
popf
adc
lcall
sahf
dec
xchg
lcall
iret
insb
xchg
inc
jg
test
pop
cld
sub
mov
fwait
mov
mov
cmp
xchg
mov
xchg
fisttps
push
mov
in
int
repnz
mov
adc
iret
xchg
fidivrs
testl
dec
test
lret
jae
pop
or
mov
subb
push
push
xchg
in
xchg
jmp
jbe
aas
sub
sub
hlt
stos
pop
push
mov
mov
sub
lcall
insl
dec
gs
jne
sti
push
je
xchg
ljmp
decl
add
mov
xlat
loope
ds
xchg
mov
push
push
adc
and
mov
mov
cmp
mov
sbb
pop
jne
inc
xor
mov
sub
aad
bound
stos
divb
insl
push
push
call
scas
jp
popf
add
ret
or
rcr
fwait
int3
icebp
cmp
ret
lahf
loopne
cmp
xor
cmp
jno
lds
mov
push
mov
xchg
fistpll
mov
push
mov
xchg
test
popf
xchg
and
cmp
push
js
data16
insb
clc
push
dec
and
fs
ret
jle
mov
jge
loopne
mov
jmp
jmp
fucomp
jp
std
mov
mov
out
jle
pop
bound
ja
arpl
dec
dec
and
jb
xor
jmp
ss
movsb
jg
fsubl
jbe
jb
push
scas
xor
sub
adc
popl
lahf
mov
in
inc
inc
fisttps
mov
lock
aas
movsl
in
xchg
stc
es
xlat
enter
pushl
std
out
cmp
fstl
mov
push
lods
hlt
or
lods
adc
decl
scas
imul
mov
and
loop
imul
test
flds
les
pusha
loop
sub
jl
aas
mov
pop
imul
lcall
fistpll
pop
testl
adc
xchg
es
or
xor
cmp
outsl
je
mov
sub
cmpsb
aam
sub
aam
xchg
inc
add
jae
jnp
mov
test
les
popa
push
dec
incl
sub
xchg
mov
mov
addl
jnp
in
movhps
sub
hlt
testl
jae
idiv
pushl
jns
xor
xchg
add
je
xchg
js
pop
dec
fidivrs
push
sbb
push
lcall
loop
mov
loope
dec
jl
fldenv
jg
lcall
mov
cmp
sub
stc
fmuls
push
mov
jnp
mov
ljmp
dec
lds
dec
data16
jle
ja
sbb
pop
andb
and
loopne
mov
sub
and
pop
pmaxub
idiv
ret
decl
data16
push
mov
mov
js
xor
lods
mov
and
fneni(8087
call
test
jae
hlt
rcll
loope
ret
fdivr
mov
inc
xor
add
loopne
lds
int
stos
sub
lret
pop
out
inc
cld
fadd
jmp
cmpsl
jg
sahf
pop
incb
imul
mov
cmp
inc
xchg
mov
jbe
in
xor
ljmp
leave
mov
sbb
adc
cmpsl
pushl
data16
iret
mov
cld
and
repnz
mov
out
dec
and
adc
xchg
xchg
pop
std
and
jmp
mov
mov
shrb
mov
lcall
cli
adc
xchg
in
pop
inc
pop
add
or
pop
sti
cwtl
pusha
pop
add
insb
shlb
push
sub
call
popf
or
pop
add
fisttpl
sbb
das
cmpb
cld
rorl
aaa
std
ffreep
mov
sub
popa
push
mov
cmp
lock
test
std
and
ljmp
xor
or
mulb
cltd
mov
bound
xchg
shr
inc
test
insb
cs
push
pop
cmp
jmp
sub
jnp
mov
cmpsb
lds
mov
fcoms
mov
aaa
mov
cwtl
fildll
push
mov
sti
fldcw
and
setae
les
jl
daa
rorb
fucomp
decl
bound
mov
mov
sbb
aam
aas
testl
mov
jecxz
mov
and
mov
mov
lret
test
mov
in
outsl
mov
pop
sti
sub
test
shll
dec
jp
push
ljmp
pushl
and
ljmp
iret
xchg
sbb
repz
mov
pop
int3
dec
shrl
lcall
je
lock
cwtl
mov
jl
and
push
jecxz
mov
inc
adc
divb
sahf
arpl
jno
movsb
int3
outsl
mov
mov
call
jnp
mov
jmp
push
fadd
pop
lahf
jno
xchg
es
add
aam
decl
pop
add
mov
xor
jmp
call
sti
adc
cmpb
lcall
and
hlt
pop
ss
xchg
jg
cltd
mov
mov
jp
in
and
jbe
sbb
jbe
scas
lods
dec
push
push
mov
and
sbb
inc
inc
dec
push
lods
call
incl
in
lret
fistpl
mov
ret
in
adc
and
xchg
fisubrl
mov
push
int3
cmp
cmp
inc
pushl
push
inc
fistpll
dec
movsb
test
aaa
rolb
scas
rcrb
orl
imul
sub
call
test
mov
das
shr
xor
pop
pop
fs
mov
add
xor
out
mov
scas
mov
ljmp
jecxz
mov
in
or
lret
pop
cmp
or
dec
or
or
push
push
cld
jg
xorb
or
or
xchg
fidivrs
out
pushl
push
aas
cld
and
mov
scas
aas
jle
lock
push
loop
sbb
jecxz
fists
clc
or
bound
mov
fsubrs
sub
fstl
push
xchg
cli
in
push
add
pop
mov
test
mov
call
inc
lea
push
aam
test
mov
cmc
push
aam
push
cmpsl
mov
popf
outsl
bound
adc
inc
dec
cmpl
inc
std
push
stos
push
stos
push
ljmp
aas
mov
lods
dec
les
xor
xchg
or
aaa
pop
daa
xor
cmp
decl
mov
fsubr
inc
mov
or
inc
jg
pushf
mov
orb
dec
adc
mov
idiv
pop
jmp
and
jmp
jno
and
leave
mov
pop
and
mov
inc
sbb
xor
repnz
data16
push
cmpsb
adc
movsb
es
adc
adc
stos
push
mov
inc
mov
icebp
stos
loope
in
dec
inc
and
test
fdivl
and
in
sub
add
dec
mov
les
and
push
xchg
inc
mov
idiv
adc
mov
adc
pop
xchg
xor
adc
ljmp
add
jno
and
mov
adc
mov
push
add
push
xor
sub
stos
sbb
pop
insl
aad
inc
cmpsb
pop
cwtl
scas
and
jge
pop
sbb
xchg
mov
xchg
or
aad
pop
lods
xlat
loop
fs
icebp
xor
dec
fistpl
movsl
jp
sbb
xlat
lds
mov
scas
das
and
jmp
mov
jg
call
dec
shll
sub
add
jne
repz
stc
rorl
cli
xorl
fidivs
sti
insb
adc
and
xor
push
jns
stos
or
test
lea
leave
mov
pushl
rolb
mov
mov
out
add
mov
and
mov
lods
jnp
aaa
sbb
add
rcr
mov
jne
xchg
mov
incl
pop
stos
cld
sbbl
push
cmp
fisubl
lcall
push
shl
lods
and
in
std
sbb
aad
push
push
fimuls
jmp
addr16
xchg
rcr
js
aad
mov
mov
jbe
sub
decl
sbb
xor
movsb
xor
mov
decl
fists
data16
fsubrl
adc
movsl
xchg
rcrl
mov
mov
push
jmp
sti
leave
in
push
xchg
cld
xlat
shlb
push
out
xor
add
ror
xchg
std
aaa
cli
rcll
std
repnz
jg
push
imul
xorb
clc
fwait
cmc
rolb
jbe
ljmp
cli
inc
sbb
daa
pop
ljmp
out
xor
mov
aas
incl
mov
add
shl
cltd
mov
cmp
push
loopne
call
cld
jle
pusha
int
adcb
push
pusha
pop
ja
ss
cwtl
ds
out
sarl
jmp
std
lock
fbld
sbb
jbe
cmp
cli
in
mov
in
test
outsl
pushl
pop
dec
sbbb
lock
adc
cmpsl
clc
clc
addr16
dec
sarl
decl
jle
outsl
push
decb
jns
push
jae
aas
stos
in
pop
mov
call
lcall
out
pop
push
sub
inc
cmp
lret
push
jg
push
jp
ljmp
sbbl
sub
and
je
daa
iret
loope
dec
pushl
lahf
xor
jle
mov
pop
fsubrl
cmp
hlt
push
jmp
pop
push
ds
inc
cvtdq2ps
cmp
lret
or
and
cmp
leave
mov
imul
xchg
pop
js
cmc
ljmp
rcll
std
movsl
adc
mov
dec
mov
fimuls
popf
cmp
and
cmp
movl
icebp
jnp
pop
daa
adc
jns
ffreep
sub
push
and
pushl
stos
sub
stc
push
je
movsb
decl
pop
test
jae
mov
imul
out
ja
adc
dec
xchg
cmp
decl
inc
push
movsl
mov
push
in
shr
loop
loop
push
cmp
lea
sub
cli
mov
fmul
inc
scas
dec
in
sub
cmp
mov
idivb
pop
mov
and
jg
inc
fsubl
xor
lds
and
ljmp
testl
std
jmp
call
adc
fcmovbe
fdivrs
push
aas
andb
jg
sbb
outsb
jge
push
dec
and
loope
mov
mov
mov
lds
out
mov
add
fadds
xchg
lods
repnz
jne
add
push
test
call
decl
popa
repnz
cli
aam
and
sub
leave
dec
out
cs
andl
sub
fs
popf
mov
jg
sbb
mov
cld
mov
push
ja
xor
imul
in
ljmp
js
call
hlt
in
out
push
fidivs
dec
inc
fdecstp
jne
pop
jl
iret
incl
test
cmpsl
mov
test
jns
push
pop
lahf
shll
fucom
call
loopne
test
addb
inc
mov
dec
jbe
ja
xchg
incl
push
outsb
jmp
dec
icebp
popa
xor
push
push
xchg
in
cld
notb
and
pushf
scas
and
mov
add
pop
negl
loope
mov
mov
call
and
pop
mov
sub
xor
icebp
mov
insl
les
xchg
sbb
lahf
js
mov
sbb
clc
xor
or
sub
outsb
pusha
test
in
mov
lock
popa
and
adc
add
mov
movsl
decl
hlt
pop
stos
dec
popa
push
sbbl
lret
fs
sbb
dec
test
cmp
dec
fsubs
fisttpll
push
test
pusha
imul
adc
in
cmp
mov
insl
stc
and
jb
mov
mov
and
cmp
lock
mov
push
lahf
cmp
test
add
push
insl
and
sbb
lret
incl
xchg
jnp
mov
xchg
into
fnstcw
in
aad
fs
pop
cs
cmpsb
ljmp
push
push
xchg
jae
dec
xor
out
cmp
push
stc
jg
mov
pop
adc
fs
mov
cmp
mov
mov
frstpm(287
dec
test
push
out
dec
icebp
lods
sub
mov
decl
into
push
cmpsl
repz
cmp
adc
pushf
or
jle
popa
es
xchg
sbb
mov
pop
jae
sbbl
push
xchg
push
in
cmp
jne
pop
or
push
cs
rep
push
adc
xor
push
mov
mov
xchg
outsb
add
xchg
pop
lea
mov
shll
xor
jno
jg
and
jle
inc
cs
call
decl
cmp
fwait
movsb
into
test
xchg
dec
cltd
cmpsl
scas
ret
std
jg
cmp
repnz
fmuls
testl
or
adc
mov
icebp
aas
int3
fstl
ljmp
push
jp
repz
mov
xor
mov
shl
lods
push
sar
lcall
mov
mov
scas
mov
xor
mov
sub
jg
or
push
push
jae
cmpsl
pop
scas
cmp
inc
das
dec
inc
popf
mov
idiv
sub
js
push
jmp
push
hlt
insl
mov
jg
jl
mov
inc
negl
jmp
mov
jp
mov
loop
insb
and
sbb
cwtl
mov
pop
inc
test
decl
push
lods
xor
xor
jno
pushf
jne
pushf
leave
shl
ds
repnz
scas
cli
cmp
pop
lahf
cmp
sbb
cltd
fidivl
mov
rorb
dec
push
incl
rcrb
imulb
aas
stc
enter
and
push
jge
jmp
pusha
test
dec
jecxz
mov
les
mov
sti
xchg
add
mov
fidivrl
hlt
push
jmp
push
pop
pop
inc
dec
pop
loope
push
test
cltd
out
inc
test
jae
pushl
cld
mov
mov
das
xchg
inc
mov
inc
mov
fcomip
call
pop
movsb
push
cmp
xor
sbb
inc
xchg
jl
sahf
aaa
aam
cs
call
dec
jl
push
push
jne
rorl
cmp
push
dec
sub
sub
jae
xor
call
adc
sbb
lret
mov
jmp
pop
adc
lcall
je
andb
dec
gs
test
push
push
lods
pop
push
decl
sbb
mov
xor
clc
call
cmpsb
mov
cmpsl
fldcw
sub
dec
cmp
mov
sti
mov
mov
ds
inc
hlt
sti
jnp
mov
xor
jl
xchg
int3
xor
cmp
dec
sbb
int
jae,pt
mov
cld
xor
sub
push
adc
call
cld
push
jb
mov
inc
or
push
dec
adc
dec
adc
idivl
adc
das
lcall
push
cli
xor
gs
push
les
imul
jbe
js
or
inc
js
sti
jge
filds
ret
cmp
icebp
lret
movb
jns
hlt
dec
push
xrelease
or
mov
cs
cli
cmp
bound
xor
xchg
jecxz
jl
sbb
adc
mov
mov
sbb
or
or
lcall
mov
out
sahf
test
incl
roll
push
fidivrl
idivb
jmp
cmp
add
dec
or
push
push
es
les
cmp
dec
int3
mov
add
cltd
mov
jae
roll
incl
mov
cmp
pop
ficoms
sub
mov
push
cmpsl
pushf
ret
inc
mov
test
mov
in
mov
push
fwait
jns
lahf
imull
mov
mov
mov
imul
repz
inc
repz
decl
xchg
out
pushf
dec
aad
lods
add
cld
mov
sub
xchg
divl
in
int
mov
icebp
sti
lods
js
decl
pop
lcall
aas
jmp
rcl
in
push
cs
mov
das
or
js
out
push
jmp
mov
decl
dec
mov
stos
in
arpl
ret
adc
push
std
int
aas
outsb
scas
iret
sti
in
aad
pop
in
dec
and
jmp
or
fcompl
dec
in
in
sarl
add
dec
and
cmc
in
xchg
sbb
cmp
push
in
jg
cld
push
ret
xchg
xchg
push
fistpl
aaa
addr16
nop
mov
divl
out
in
cmc
test
or
sbb
movswl
push
sahf
mov
sbb
push
js
fcmovnbe
or
sub
cmpsb
imul
cwtl
push
mov
cmp
jae
call
jl
lret
loope
cmc
push
repnz
mov
fmull
aam
cmpsl
dec
imul
pop
sbb
or
pop
cli
test
jg
mov
lock
ljmp
push
sub
push
stos
mov
sub
push
cmpsb
and
fstpl
out
mov
push
orb
push
in
cmp
repz
adc
inc
repz
adc
mov
out
sahf
popf
mov
inc
pushf
jmp
jnp
iret
sub
or
cmp
dec
xchg
dec
js
icebp
sub
jecxz
push
dec
sar
mov
andl
loop
repz
ljmp
cwtl
jge
mul
cmp
xchg
das
and
ja
sti
dec
or
sub
sbb
or
lods
jmp
and
or
jg
lods
stos
loop
push
and
or
fiadds
pop
rcrb
fsubs
movsl
dec
mov
push
inc
dec
and
cli
lods
shl
lahf
adc
ja
incl
dec
in
or
mov
push
xor
sub
test
and
ret
stos
adc
hlt
out
clc
inc
mov
jns
mov
pop
pop
xor
xor
out
dec
outsb
pushl
xchg
decl
xchg
rcll
sub
fdivr
mov
push
mov
mov
cmp
aad
decl
push
add
sbb
rclb
dec
mov
ret
push
xor
lret
push
pushl
add
or
push
add
xorb
mov
or
xchg
jmp
pop
inc
sub
push
mov
imul
xchg
inc
jnp
setbe
stc
add
movsb
call
repz
sub
sti
inc
jl
nop
sub
inc
lock
cmpsb
xor
lret
in
bound
dec
fsub
icebp
jbe
xchg
rorb
gs
imul
out
js
testl
cmp
jge
scas
mov
and
and
add
fidivrl
mov
push
int
mov
in
xchg
jmp
xorl
push
pushf
jl
lods
int3
dec
dec
push
nop
mov
je
call
xor
inc
rclb
std
jo
pushf
cltd
test
lret
xlat
negb
stos
xchg
rolb
incl
xchg
adc
push
sbb
inc
fidivl
insl
sar
decl
xor
outsl
sar
das
iret
xchg
xor
jge
lods
pop
fisubl
and
je
movb
jmp
int3
cmp
stc
je
xor
add
stos
xor
mov
lock
fisttps
push
jnp
leave
xchg
test
into
and
lock
js
sbb
in
sbb
enter
xchg
or
xchg
mov
mov
call
xlat
inc
sbb
xchg
mov
dec
insl
ret
test
jno
push
leave
xlat
imul
lcall
cs
cmc
aad
sub
and
iret
push
adc
ljmp
ljmp
mov
cmp
imul
test
mov
inc
push
jne
popf
out
outsl
push
cmp
pop
jne
lcall
sub
sahf
clc
jno
and
nop
into
add
xchg
mov
xchg
add
fists
mov
xchg
jbe
pop
push
or
inc
sub
scas
push
cwtl
mov
test
mov
pop
fisubrs
fists
dec
xchg
pop
and
es
adc
pop
adc
jmp
dec
daa
jle
nop
push
int3
clc
call
filds
mov
cmp
incl
push
push
push
xchg
push
subb
imul
adc
rep
call
arpl
add
pop
pop
in
call
or
lret
cwtl
cmp
jns
xor
sbb
insb
loope
xor
loop
repz
jae
dec
jmp
xchg
shlb
cltd
in
mov
shlb
cmpsb
dec
inc
in
mov
xor
jno
in
jmp
mov
cmp
cmp
or
sti
aad
cs
out
decl
jne
xchg
test
or
mov
sub
mov
cmpsl
dec
out
movsl
xor
ljmp
push
mov
mov
xchg
pusha
iret
xchg
jae
shrl
push
lods
fld1
xor
sub
xlat
mov
lock
icebp
rorl
pushl
add
mov
fs
in
enter
inc
test
leave
dec
xchg
sbb
ljmp
ljmp
push
mov
icebp
dec
mov
cmp
movsl
cmp
mov
mov
dec
mov
pop
pushl
test
nop
sub
xchg
test
mov
scas
dec
cmp
pop
pop
push
lcall
gs
push
push
lods
cs
in
push
pop
push
cwtl
jmp
pop
sbb
cmpsb
sbb
xchg
lcall
lahf
add
jno
stos
insl
mov
jl
gs
in
stos
or
sbb
lcall
call
mov
movl
testl
call
mov
pusha
ss
lret
scas
or
dec
sub
xchg
test
scas
jg
pop
pop
push
scas
xor
jmp
das
into
adc
xor
push
in
mov
xchg
or
call
fimull
mov
stos
rol
or
sbb
mov
ja
jecxz
jl
test
xor
loopne
mov
xlat
incl
pop
loopne
outsl
jno
call
mov
nopl
rcrl
jle
enter
add
sub
or
ljmp
dec
js
add
addr16
std
cmp
dec
and
lea
stos
nop
les
xor
jg
movsb
loope
unpcklps
or
mov
jge
mov
lcall
sub
insb
in
sbb
sub
loope
shl
mov
sub
das
xor
ljmp
lahf
jmp
shlb
das
adc
pushl
xchg
iret
sti
out
ljmp
insb
pop
test
fcomip
incl
in
clc
adc
and
popf
shlb
push
cli
cmc
mov
iret
adc
jg
sbb
pop
enter
push
xchg
incl
fbstp
push
inc
loopne
xchg
shll
in
push
mov
fidivl
or
pop
std
pop
inc
cmpsl
push
es
sbb
aad
or
cmpsl
inc
add
or
mov
jb
cmp
dec
sbb
jns
xchg
je
adc
leave
andl
pop
leave
sbb
and
test
out
dec
mov
loopne
int
xchg
sbb
dec
pop
xchg
call
loop
cli
ds
jecxz
cli
cmpl
mov
sub
sub
mov
ljmp
mov
stc
aas
xchg
sub
and
out
imul
pop
xor
sbb
hlt
cltd
cs
ja
push
jnp
mull
adc
lcall
jp
cmpsl
loopne
int3
ror
sarb
and
push
xor
inc
sbb
push
test
je
jne
cs
mov
push
xor
push
stos
lahf
addr16
call
push
inc
imul
cmp
iret
xchg
out
lock
jecxz
dec
xchg
adc
clc
lcall
ss
jecxz
ja
xor
aaa
movsb
into
dec
jge
lea
pop
xchg
shll
decl
push
dec
lods
pop
in
jmp
fs
pop
adc
xor
cli
ljmp
mov
inc
and
out
into
jmp
xchg
or
mov
ljmp
ds
xor
mov
stos
push
int
cltd
mov
push
stos
dec
jne
fsubrs
lcall
pop
mov
sub
mov
lods
js
push
lahf
out
inc
clc
es
mov
iret
sar
jmp
fs
shr
lock
mov
in
sub
xchg
notl
out
nop
dec
sub
ret
sub
pop
adc
das
mov
decl
clc
or
ret
pop
inc
push
cwtl
out
xor
lcall
inc
stc
ljmp
add
outsl
pop
xor
imul
dec
shl
dec
fwait
push
pop
ja
sub
dec
xchg
outsl
cwtl
mov
push
imul
pop
loopne
sahf
or
mov
testb
jge
sbb
xor
xchg
incl
add
imul
fmuls
and
xchg
xorb
mov
inc
push
cmp
ret
push
jg
insb
xchg
xchg
push
xorl
mov
lods
inc
dec
jb
dec
inc
inc
addr16
lcall
sti
xor
xor
aam
fistpll
jnp
inc
hlt
or
leave
and
add
or
mov
jmp
inc
jge
aam
jb
test
sbb
out
cmc
inc
mov
push
fisttpll
insl
cld
lcall
add
push
shl
dec
out
adc
jg
mov
pop
lds
push
jo
mov
jl
loopne
cs
fidivrl
jne
repz
fnstcw
cmp
mov
cmpsl
lret
decl
imul
pop
es
arpl
jg
pushl
dec
mov
jle
dec
and
cmp
pop
pop
pop
pop
mov
cmp
incl
inc
mov
sti
idiv
shll
bound
cmp
and
inc
cld
call
repnz
pop
xchg
push
xorb
push
dec
daa
test
push
jle
rorl
lahf
mov
jmp
sbb
aaa
jge
sti
rolb
je
jo
cld
push
mov
and
fildll
negb
movsl
shll
jg
rclb
ja
adc
sub
push
mov
inc
cmc
pusha
lcall
loope
cmp
mov
or
lock
decl
repnz
fs
sub
mov
jno
arpl
cltd
clc
scas
addr16
nop
js
std
loop
xlat
fiaddl
and
pop
fmull
mov
fsubrl
call
lds
leave
ret
jp
lock
outsl
and
flds
or
pop
rol
dec
ss
mov
mov
decl
mov
mov
push
and
stos
push
enter
and
add
decb
ss
sub
push
ljmp
mov
sahf
movsl
sub
pop
lods
inc
mov
ret
push
sbb
xchg
xchg
aas
mov
mov
jl
int3
ret
sub
push
call
ljmp
xor
f2xm1
sbb
leave
orb
jmp
loop
in
fists
lods
test
ffreep
xor
imul
xor
or
pop
inc
sbb
and
lcall
aam
jg
mov
push
xlat
mov
sbb
lahf
mov
outsl
into
xchg
lcall
mov
hlt
loope
cmp
sti
add
mov
dec
push
shrb
fbld
lods
or
pop
mov
mov
and
sbb
loopne
lahf
andb
aam
daa
cmp
mov
mov
inc
idiv
pop
hlt
ljmp
and
pop
pop
inc
aas
sbb
inc
xchg
push
cmp
hlt
incl
dec
mov
sub
mov
inc
cmp
and
out
aam
push
cwtl
jl
mov
loopne,pn
sar
mov
mov
fadd
sub
mov
or
js
rolb
sbb
insl
jns
mov
shl
pop
add
lods
cli
lcall
lcall
outsb
lods
cltd
lds
pop
inc
mov
imulb
das
rcrb
nop
ds
mov
mov
dec
jo
adc
jl
cmp
dec
jp
inc
dec
dec
adc
and
or
lcall
movsb
and
or
xor
cli
lods
outsb
in
jg
sar
cs
divl
ja
idiv
sti
ret
cmc
xchg
sbb
mulb
cmp
mov
sub
std
jecxz
sbb
sti
fldt
sbb
rcr
incb
push
xchg
scas
jo
cmc
mov
outsl
sti
ja
cmp
in
jmp
je
shl
xlat
add
dec
push
outsb
sti
insl
xchg
sbb
insb
xor
insl
jg
cmpsb
inc
push
mov
mov
mov
jne
insl
aas
mov
ljmp
jmp
nop
jbe
jmp
adc
into
adc
add
ret
push
xor
mov
fnstcw
sub
sbb
push
movsl
shlb
aam
mov
sub
call
dec
mov
cmp
dec
sbb
nop
add
cwtl
xchg
and
mov
push
dec
inc
push
inc
incl
push
or
pop
shll
test
pop
ret
sub
lock
scas
sti
mov
pusha
pop
push
std
fidivs
idivl
fisttps
inc
mov
idiv
leave
ja
testl
xchg
pushl
adc
outsb
loopne
lret
ja
fcomi
sbb
roll
rcll
fbld
and
call
dec
lret
jecxz
pop
mov
adc
pushf
mov
ficoms
add
jg
xchg
cmp
je
test
mov
add
jge
shrb
pop
push
jecxz
mov
mov
inc
push
adc
cmp
xor
and
loope
or
sahf
inc
xchg
adcb
cwtl
add
decl
mov
and
sahf
shrl
mov
xor
aam
and
cli
and
jg
repz
push
loopne
shl
imul
pushf
mull
jg
pop
adc
inc
jbe
decl
aam
mov
outsb
and
adcl
push
cmp
mov
fdivr
imul
mov
inc
outsl
filds
push
out
sahf
add
ror
test
rcll
decl
and
add
adc
mov
mov
sbb
pop
add
sbb
ds
shrl
pop
xchg
inc
in
ljmp
lret
vmread
add
inc
add
cmp
ret
pop
addr16
xchg
icebp
decl
sub
sub
mov
inc
sbb
dec
lcall
movsl
jle
lret
jno
pop
fiadds
call
in
icebp
cmp
je
mov
dec
int
out
int
lcall
pushl
push
xchg
jns
or
mov
xor
xchg
mov
movsl
call
fwait
and
decl
adcb
dec
cmpb
cld
jge
and
stos
stos
int
fcmovnb
pusha
xchg
xchg
push
inc
aam
sti
std
xor
cwtl
xor
incl
fcmovu
cmpsl
sbb
xchg
mov
pop
dec
jbe
test
idivl
stos
inc
ja
jmp
jmp
ffreep
jle
pop
call
sbb
lcall
stos
sbb
cmp
mov
movsl
jb
pop
sbb
dec
nop
adc
sbb
mov
jecxz
leave
inc
call
ds
pop
stos
sub
sti
scas
aad
pop
jmp
cmpsb
je
nop
je
testb
jne
cwtl
sbb
cmp
mov
bound
jno
xchg
lods
mov
cmp
mov
jecxz
push
idiv
lcall
dec
mov
sbb
mov
sub
es
cmc
shll
stos
jmp
repnz
je,pt
add
pusha
lret
das
sbb
push
add
lds
es
add
das
pop
stc
sub
lock
fwait
mov
lds
push
pop
mov
and
adc
fcoms
fwait
idivb
stos
imul
jbe
xchg
arpl
inc
out
lods
das
jmp
or
je
adc
orb
sub
xchg
es
mov
xlat
movsl
mov
inc
dec
jne
xchg
leave
jmp
movsl
push
stos
mov
push
incl
cmp
data16
and
xchg
dec
adc
dec
cmc
iret
mov
ljmp
xor
xchg
pop
adc
dec
sub
cli
mov
aaa
loope
outsl
xor
sbb
mov
xchg
shl
jg
xchg
xor
leave
pop
mov
push
cmpsb
sbb
sub
loopne
lock
ss
out
ret
add
pushl
dec
mov
pusha
ficompl
mov
ret
imul
xchg
movsl
sub
xor
lock
cmpsb
dec
std
dec
push
cmp
add
jmp
jmp
inc
sub
stos
add
sub
notl
in
jmp
fldl
push
xor
mov
mov
or
xor
aad
aad
icebp
in
ss
les
or
in
dec
test
popa
push
cmp
nop
dec
cmp
inc
in
or
sub
mov
jmp
jmp
adc
mov
rol
ja
inc
xchg
pop
clc
add
fisubl
dec
cmp
push
and
hlt
rcll
push
icebp
icebp
adc
aam
xchg
xor
adc
mov
or
call
shlb
xchg
push
cs
push
aaa
cld
jmp
test
arpl
mov
fwait
xor
std
push
fwait
dec
test
inc
ja
cmp
lcall
ss
pop
cli
shlb
jmp
cmpsl
mov
mov
push
xor
or
cli
and
sub
cmp
repnz
sub
cmp
call
in
leave
add
dec
xchg
out
clc
jb
dec
mov
cmpsb
shlb
or
ljmp
push
sub
add
add
dec
daa
xor
int3
stos
nop
int
jae
jge
ljmp
xchg
jae
push
enter
sub
les
adc
lcall
daa
adc
test
xor
jno
jns
rclb
rolb
insb
sahf
adc
push
mov
mov
push
and
push
xor
mov
sbb
in
add
sub
pushl
xlat
cs
adc
invd
div
leave
mov
add
jg
sub
sub
and
mov
leave
add
lock
ljmp
pop
or
jge
and
and
out
jbe
nop
clc
pop
add
cmc
mov
shl
mov
mov
test
cwtl
jns
push
mov
pop
fistpll
sub
iret
clc
lcall
leave
jbe
and
addr16
loop
adc
scas
push
fwait
sub
mov
incl
imul
and
and
out
filds
scas
clc
decl
fs
outsl
lret
in
in
out
ret
add
js
sbb
mov
jmp
jo
or
cmp
lock
xchg
in
nop
lcall
enter
and
daa
add
repz
push
cmpsb
inc
movsl
cpuid
cmp
fbld
jge
mov
pop
xchg
jg
out
mov
mov
pop
mov
sbb
bound
scas
cli
dec
jmp
jmp
mov
mov
sub
and
adc
incl
jecxz
inc
std
push
out
sub
fsub
mov
mov
ud0
pushl
hlt
cmpsl
test
mov
or
faddl
repnz
icebp
inc
pop
fsts
aam
in
mov
incl
insl
adc
mov
mov
mov
push
mov
push
fs
dec
mov
sub
push
roll
sub
cwtl
insl
and
inc
sbb
fdivp
incl
fmull
push
inc
cmc
nop
int3
mov
inc
mov
add
jg
pop
push
mov
ret
add
scas
repz
icebp
dec
pop
lcall
jmp
mov
xor
xchg
loope
cmp
fwait
imul
xchg
fistpl
add
dec
loopne
stos
mov
xor
mov
mov
lcall
cmp
adcb
stos
fiadds
std
sahf
push
pushf
or
jg
repnz
inc
sbb
mov
inc
ret
mov
shlb
adc
popf
xor
lcall
push
jle
push
fcmovu
rorl
pop
nop
call
or
nop
sahf
pop
mov
mov
cmp
ficomps
dec
dec
pushf
jnp
int
jp
mov
add
sbb
cmpsb
decl
push
jp
jmp
aad
lret
adc
in
inc
into
insl
adc
incl
test
mov
push
xchg
call
pop
mov
jne
adc
mov
ss
mov
loop
hlt
loope
psubsb
sbb
mov
sahf
popa
mov
out
mov
pusha
adcb
cmp
ljmp
fwait
jmp
sub
jl
mov
repz
test
xchg
mov
xchg
lret
dec
addb
sbb
mov
dec
cmpsb
loopne
push
adc
push
inc
xlat
push
push
adc
push
shlb
lret
in
lret
sar
pushl
es
test
mov
pop
jns
int3
adc
fdivl
enter
xchg
pushf
imul
outsl
ss
loop
ret
mov
fisubs
clc
sub
push
int3
cs
xor
push
adc
sub
mov
inc
stc
mov
popa
and
out
imul
adc
icebp
jg
loope
or
in
imul
jle
call
sub
incl
lods
cld
adc
cltd
ja
fists
xor
aaa
in
push
and
mov
mov
cmp
aas
mulb
jbe
push
fnstsw
rcrl
cmp
mov
jg
ljmp
mov
ljmp
add
outsl
mov
push
cmp
int3
sub
push
sbb
jg
fsubl
lret
jne
ljmp
and
cli
les
fnsave
cmpb
pop
mov
scas
xchg
das
in
inc
testl
int
ja
inc
cld
lcall
sti
cwtl
mov
filds
sbb
xchg
push
jno
movsl
mov
in
aad
imul
push
jno
mov
fildl
xor
and
mov
fwait
js
xchg
lcall
out
lret
ror
xor
cwtl
cltd
in
jmp
or
cmp
rcl
cltd
cmpsb
dec
gs
xchg
pushl
push
jbe
inc
mov
mov
gs
pop
mov
mov
daa
fdiv
jb
xchg
jl
test
ljmp
sbb
mov
je
lcall
fimull
sbb
xchg
pop
aam
mov
push
and
and
in
pusha
mov
or
imul
imul
push
mov
or
cld
cmp
or
and
ret
out
add
cmp
out
and
hlt
ss
push
mov
call
inc
push
imul
pop
mov
into
lock
sub
add
icebp
sbb
cmp
mov
into
dec
cmp
in
jg
mov
or
push
jge
rclb
cmc
and
cmc
lds
pop
call
push
pop
test
loope,pn
xchg
sbb
mov
inc
out
push
lret
mov
cmpsb
xor
xor
ds
cmpsl
push
inc
mov
daa
movsl
pushf
mov
add
push
mov
popa
ret
push
push
nop
clc
call
mov
ret
mov
dec
scas
inc
and
rcll
dec
pop
imul
mov
dec
sbb
fadd
out
cld
fcomip
cmp
daa
std
cmp
lret
and
insb
jecxz
not
les
iret
call
push
ret
pop
mov
xor
test
call
dec
add
inc
and
inc
out
es
jno
mov
adc
clc
cmp
fstps
jmp
mov
dec
add
mov
addb
lret
jns
cltd
gs
push
stos
cld
scas
clc
ljmp
dec
int3
push
fisubl
or
call
push
aad
lcall
testl
mov
jae
addr16
lcall
mov
add
nop
in
push
dec
or
pusha
jmp
es
cmp
jmp
in
sub
lods
jl
out
arpl
pop
bound
sbbb
loopne
sbb
mov
into
je
jge
add
jmp
sti
xor
int3
repnz
push
cmpsb
lahf
es
jmp
sub
rcll
inc
dec
jb
test
xor
cwtl
in
in
lcall
sub
sbb
mov
pop
xchg
push
xchg
es
jbe
push
gs
stos
cmp
inc
mov
adc
lods
jbe
lods
lahf
inc
rorb
pop
sar
call
add
fbstp
mov
adc
fldt
adcb
call
je
xor
fnstenv
sub
pop
insb
in
mov
imul
sub
mov
sub
and
jp
jl
pop
clc
jmp
xor
fs
cmp
xor
sahf
and
stos
ret
xchg
idiv
incl
sub
mov
sbbl
add
mov
icebp
das
cli
call
adc
mov
jns
jmp
and
and
sti
and
pop
or
adc
cli
xchg
fnstcw
pop
mov
pop
pop
rorb
test
xlat
fs
pop
addb
pop
pop
lret
dec
ret
ficoms
mov
in
fistpll
sbb
push
sahf
sti
icebp
aam
stc
cmp
loope
add
pop
sbb
orl
call
mov
and
gs
fldl
xchg
stc
cmp
cmp
push
out
leave
jae
test
js
incl
fsubrs
js
inc
call
push
dec
sbb
js
testb
push
jns
cwtl
decl
out
movsb
mov
cmp
icebp
cltd
sbb
and
and
cli
cmp
mov
jl
loopne
dec
push
lahf
jecxz
sub
jno
stc
out
scas
insl
jl
aaa
mov
mov
inc
aas
mov
fdivr
jmp
jae
pop
push
in
inc
add
std
pop
sbb
mov
dec
mov
nop
dec
insl
inc
dec
dec
dec
insb
mov
jge
pop
lcall
icebp
cmp
out
psrld
jecxz
in
push
xor
jne
lea
mov
repz
fcompl
addl
xlat
shrb
jp
xor
add
ljmp
scas
xchg
loope
cs
mov
dec
lahf
mov
mov
sub
mov
out
or
aaa
cld
call
xchg
cmp
leave
sub
repz
divl
add
mov
dec
push
mov
add
and
push
loope
shl
inc
test
jg
aad
inc
push
cmpsl
mov
enter
lahf
xor
cld
xchg
je
clc
mov
xor
or
in
js
jge
adc
fbstp
pop
ficompl
add
xor
cs
rorl
lret
pop
in
pushf
jmp
aaa
in
icebp
jb
imul
jg
xchg
adc
and
lcall
jne
xchg
mov
and
sahf
int
and
xchg
push
setns
daa
loopne
cmp
jecxz
mov
inc
fwait
jnp
pop
lock
in
lahf
push
out
jae
shl
movsb
dec
inc
call
adc
and
nop
jmp
add
popf
mov
adc
pusha
out
ljmp
mov
std
sbb
sbb
mov
push
pop
dec
mov
roll
pop
push
call
inc
mov
shll
jecxz
cmpsb
jns
loopne
es
roll
call
incl
mov
sti
cmp
add
adc
mov
jae
bound
filds
cmp
call
adc
pusha
jns
inc
jl
sbb
mov
mov
mov
inc
jne
xor
jae
inc
jge
test
dec
aad
jg
jno
call
push
iret
mov
and
rclb
xchg
cmp
xchg
ficoms
dec
push
out
std
and
mov
in
cmpsl
jge
xchg
sbb
int3
push
jmp
dec
mov
sbb
ror
rcrb
mov
add
testb
aam
mov
inc
dec
scas
xchg
movsb
ror
repnz
mov
out
sbb
ljmp
imul
mov
leave
add
das
lcall
incl
vpunpcklbw
scas
flds
cwtl
dec
pusha
push
xchg
fstp
mov
addr16
jmp
les
scas
mov
xchg
jecxz
out
mov
cltd
cmp
fdivs
push
lcall
insl
xor
fisubs
jns
in
pop
test
add
mov
sbb
lcall
test
jb
xchg
pop
cmc
adc
cld
out
inc
in
sbb
sub
lret
decl
cmp
mov
xchg
push
in
popa
jbe
repnz
or
jg
das
cli
cmp
out
call
call
xchg
jge
movsb
mov
push
mov
loop
lcall
lahf
sub
test
in
pushf
fdivrp
mov
ljmp
arpl
dec
dec
jnp
and
repnz
push
insb
fcmovu
inc
fs
sub
mov
pop
insb
sub
jmp
iret
iret
rol
jbe
inc
mov
jmp
popa
incl
frstor
fstp
xor
sbb
clc
outsb
out
lret
pop
mov
lcall
popl
cmp
movntq
out
mov
cwtl
and
xor
outsb
in
push
push
shl
out
jmp
stos
fcompl
cmc
into
dec
mov
xorl
setbe
insb
addr16
repnz
outsl
decl
mov
mov
xor
in
div
movsl
ret
adc
cs
add
jnp
scas
add
xchg
dec
cmc
pushf
xor
sarl
call
roll
shll
sub
mov
ud1
out
dec
lea
in
mov
mov
lock
divb
mov
mov
jg
adc
mov
repnz
fimull
lea
jae
mov
mov
jo
push
and
pushl
and
mov
sbb
cmpsl
movsb
sbb
arpl
into
shrb
adc
jno
sub
cmp
test
cmpsl
inc
cmpsb
roll
dec
cmpsb
dec
movsb
xor
cltd
loope
fnstenv
into
and
in
and
push
loop
xchg
mov
mov
mov
pusha
insl
ds
dec
sub
pop
jb
push
or
or
cs
inc
ret
idiv
incl
xchg
jo
clc
arpl
sarb
adc
xor
or
pusha
or
jg
inc
mov
cmp
pop
jmp
add
fwait
jo
rcrl
pushl
rorb
cmp
pop
mov
out
dec
sub
cld
adc
inc
inc
sub
lcall
jae
jns
pop
aaa
push
leave
mov
and
mov
data16
mov
cs
dec
adc
lcall
ljmp
add
int3
lahf
inc
jb
xchg
xlat
mov
jb
cmpsb
int
test
mov
sti
push
mov
sub
rclb
shll
xlat
pop
pop
aad
dec
jmp
sbb
in
hlt
jns
out
xchg
iret
scas
inc
cmp
mov
repz
jae
fidivs
xchg
xchg
and
sbb
or
mov
adc
and
dec
shl
aaa
mov
or
jmp
and
xor
sbb
js
call
arpl
negl
sarb
lods
push
cmp
xchg
insb
ret
std
aaa
fnstsw
inc
or
mov
push
ss
push
cmpb
inc
mov
jns
idiv
dec
mov
in
ss
xor
dec
mov
jo
cmp
pushl
push
outsb
test
arpl
cmpsb
stc
stc
data16
mov
push
jns
xchg
int
decl
in
sub
cmp
jo
xchg
addr16
sar
pop
jnp
pop
icebp
pushl
cltd
adc
push
cli
sbb
ss
movsl
mov
mov
aam
mov
pusha
cld
stc
and
roll
dec
in
iret
aam
jmp
ljmp
js
bound
int
lods
dec
lods
aaa
lea
inc
or
pop
cld
pop
hlt
adc
ss
sbb
fbstp
mov
popf
fs
cld
dec
cmp
repz
push
sub
outsl
xor
dec
pop
xor
out
pop
arpl
jg
mov
repz
cwtl
in
and
add
lret
mov
jnp
lret
loop
push
and
pushf
nopl
aam
inc
mov
out
test
andb
dec
ljmp
jb
daa
inc
les
imul
mov
and
xchg
test
inc
mov
call
ficoms
subl
std
scas
xor
cltd
stc
pop
xchg
or
mov
imul
std
ss
xor
xlat
outsb
fdivr
in
incl
sub
inc
pop
sub
inc
push
aas
cli
cld
aad
jb
movsb
jo
data16
sbb
inc
inc
movsl
idivl
lcall
repz
sahf
fucomp
xor
mov
dec
rorl
outsl
clc
xchg
pop
mov
cs
cmp
nop
fsts
xchg
xchg
jmp
xor
sub
mov
arpl
scas
jno
fldenv
mov
jmp
mov
add
dec
add
cmp
ljmp
pushl
lcall
mov
push
sti
aam
mov
and
pusha
dec
test
sub
ja
ret
push
addr16
ffreep
dec
add
or
out
mov
push
adc
decl
jle
sub
and
cwtl
push
movsl
shlb
jge
fiaddl
sub
mov
in
push
insl
fs
fimull
test
outsl
cmp
dec
jge
pop
mov
sti
sahf
lds
mov
sub
stos
fbstp
push
call
add
pop
sub
in
lcall
sbb
push
pop
mov
jmp
or
loope
decl
clc
mov
gs
cli
mov
in
rolb
mov
adc
es
jnp
dec
insl
je
xor
out
imul
testl
fisttps
aam
hlt
sub
sub
into
scas
psraw
aaa
push
shr
in
cmpsb
inc
movsb
lret
cwtl
dec
icebp
push
jle
das
clc
mov
or
jl
pop
sahf
rcl
mov
xchg
ja
sub
pushl
push
xchg
inc
cmc
lods
sub
inc
push
popa
add
ljmp
jbe
pop
xchg
ret
push
in
lcall
fsubl
mov
lods
jle
and
mov
jg
sub
repz
sahf
inc
lret
cmpsl
mov
mov
xchg
xchg
dec
subb
int3
repz
out
push
jmp
jno
in
stc
fnstsw
fbld
arpl
xchg
pop
into
pop
mov
imul
xor
decl
ljmp
xor
or
movsb
push
mov
call
dec
sbb
enter
bound
movsb
inc
xchg
in
incl
jle
out
pop
shll
jmp
pop
aas
aam
mov
sbb
out
jnp
jg
jbe
enter
repnz
sbb
mov
fildl
test
inc
stos
mov
jnp
fcomp
lcall
out
cld
sbb
mov
idiv
dec
adc
movsb
out
scas
adc
jne
iret
inc
xor
jg
call
sbb
cmc
mov
fiadds
pop
jbe
inc
in
jo
mov
lcall
push
mov
sbbb
repz
wbinvd
lods
mov
jp
mov
cli
call
sub
into
sub
mov
push
jmp
leave
popf
js
aaa
add
lret
ljmp
xor
xchg
cmpl
daa
mov
out
push
fildll
lock
rcr
cmpsb
filds
mov
punpckhbw
adc
ljmp
jae
lods
xchg
xchg
mov
dec
inc
push
pop
flds
incl
jmp
jmp
out
and
xorl
iret
leave
sbb
fmull
repz
mov
decl
cmp
sbb
mov
jno
cmp
sbb
adc
dec
pop
test
fbstp
adcb
outsb
push
jno
hlt
add
dec
outsl
push
ror
decl
lock
gs
aaa
xor
pop
or
btr
cmp
jp
and
add
mov
test
xchg
test
xchg
lret
aad
dec
mov
push
pop
out
mov
jle
in
pop
mov
rclb
mov
jle
aad
cmp
jmp
lds
lcall
outsb
adc
mov
jns
pop
fimuls
clc
stos
mov
sbb
cmp
fnstenv
sub
lcall
lret
and
xchg
xor
sub
test
and
sub
jg
ljmp
outsb
sbb
push
xchg
test
mov
lret
repz
in
lahf
iret
jmp
ja
adc
cmpsl
inc
sarb
mov
in
xor
mov
jmp
mov
lcall
les
out
mov
das
push
aad
insl
mov
dec
scas
mov
enter
xchg
pop
es
ret
cmpsb
pusha
xor
jp
push
cmpsl
mov
pushl
cltd
stos
dec
xchg
xchg
test
outsl
mov
enter
pop
sub
fucomip
movsl
stos
xchg
daa
lods
push
sub
ljmp
sarl
cmp
mov
pop
inc
mov
scas
fucom
inc
mov
clc
decl
nop
gs
push
and
lahf
pushf
rol
inc
sbb
pop
idiv
decl
call
sub
push
pop
jp
push
mov
push
incl
ret
into
movsl
ljmp
bound
and
inc
push
xor
call
das
mov
rorb
mov
pop
shl
fnstcw
testb
jecxz
ljmp
pop
or
in
aas
xor
pop
data16
inc
mov
ja
fldt
call
mov
sub
sti
adc
add
cmp
mov
fsubs
cmp
jmp
sub
xchg
and
in
clc
mov
inc
cmp
ret
push
sbb
adc
imul
adc
test
mov
sub
nop
aaa
scas
jge
ja
push
arpl
ljmp
and
leave
lahf
mov
je
mov
cwtl
jbe
ds
fdivrp
jmp
or
data16
call
pavgw
filds
mov
mov
jne
aas
mov
mov
mov
pop
sbb
enter
pushl
sbb
adc
xor
rcrb
sbb
jmp
les
push
lret
out
mulb
fs
xchg
fcompl
lret
cld
pop
ficoml
sti
sbb
xor
movsl
fildl
mov
loop
adc
xchg
mov
les
mov
and
out
out
mov
push
cmp
sbb
add
es
dec
adc
pop
jae
cmp
pop
les
std
jns
pop
roll
imul
jns
fcmovu
cli
push
lock
decl
int3
ret
xchg
push
shlb
xor
pop
jg
sbb
pushl
sti
jbe
loop
pushf
imul
gs
or
pop
push
cmp
ror
inc
incl
lret
lret
add
pop
cs
mov
pop
and
lret
mov
jmp
cmp
lcall
mov
aaa
add
cmp
fildll
xor
add
mov
sbb
dec
mov
dec
adc
aad
inc
hlt
and
leave
xchg
mulb
jg
mov
mov
ss
dec
xchg
jmp
dec
jne
incl
xor
neg
icebp
outsl
cli
adc
sub
mov
test
sub
add
lret
repz
mov
rcrb
negl
jnp
mov
xchg
je
frstor
pushf
dec
decl
adc
cs
sbb
or
outsb
fisubrl
pop
add
sbb
ret
int3
jae
filds
cwtl
out
and
sbb
and
stos
movb
cli
adc
pop
fcoms
out
adc
sarl
jp
call
jg
cmp
clc
push
es
xchg
and
dec
dec
out
jno
sub
mov
js
sbb
adc
scas
clc
push
ret
fcmovne
push
pop
cltd
es
mov
pop
daa
testb
mov
and
cmpsb
ljmp
dec
call
adc
hlt
xchg
fsubl
ljmp
pop
mov
cltd
sbb
fadds
decl
fwait
adc
jle
add
push
int
rcrl
xchg
das
test
sub
loopne
ljmp
aas
dec
mov
sbb
xchg
pop
xchg
lcall
inc
dec
inc
cmpsb
adc
push
fdivrp
xchg
xlat
mov
movsb
punpcklwd
call
insb
ss
xor
in
jb
mov
cmp
inc
mov
movsl
xor
add
int
cmp
inc
lret
lock
push
rcr
xchg
and
pushl
imul
mov
mov
mov
cmp
sbb
stos
ficoms
pop
js
adc
ss
cmovne
jae
fs
in
test
lahf
sub
in
ss
lods
mov
lds
ljmp
mov
or
inc
pop
push
mov
mov
mov
add
ljmp
add
call
push
cmp
push
stc
push
sahf
es
or
out
push
lcall
xor
cli
push
and
push
xor
pushf
stos
movsl
les
std
pop
dec
rorb
push
ret
cmp
ret
lahf
add
cmpsb
xor
decl
xor
jo
cmp
inc
outsl
ret
int
incl
fistl
inc
ret
dec
clc
jns
aaa
add
arpl
inc
sub
push
cmpl
lock
data16
insb
stos
sarl
shlb
xlat
jmp
incl
repnz
icebp
data16
and
cmpb
cs
push
inc
and
ljmp
repnz
mov
xor
mov
add
aas
push
sub
jmp
imul
mov
sbb
lahf
mov
jns
mov
mul
and
mov
mov
push
dec
or
or
lcall
rcr
stos
jmp
jns
pop
es
inc
test
mov
frstor
loop
repz
lcall
pop
mov
jae
push
pop
ja
sbb
xor
mov
or
imul
imul
decl
fsubrl
mov
push
add
lcall
cmp
fistps
lods
cmp
jnp
mov
push
xor
ljmp
call
jnp
pop
popf
int
scas
out
xchg
faddl
rcr
xor
lret
xor
inc
mov
sub
rcl
incl
cld
mov
rol
jge
and
pop
cmp
insl
fidivs
les
xor
fcos
lcall
mov
repnz
sbb
mov
into
pop
mov
xor
ret
ljmp
pushl
pop
jg
lahf
sar
subl
testb
sub
bound
imul
out
iret
inc
addr16
imul
mov
xchg
push
and
pop
jecxz
xor
shll
jle
ljmp
push
jmp
mov
in
pop
dec
in
inc
and
lret
pop
mov
repz
xchg
aaa
fistl
mov
lret
outsl
popa
adc
sbb
or
jmp
arpl
stc
lock
or
mov
into
jne
lret
daa
hlt
fdivl
cmp
jp
inc
decl
mov
jae
sub
push
gs
mov
repnz
pop
enter
mov
aad
mov
or
sub
xchg
xchg
xor
std
jmp
jg
mov
out
sti
jns
sbb
pusha
out
mov
push
iret
ljmp
incl
pop
loop
ja
loop
lahf
sub
scas
push
mov
and
mov
mov
pushl
test
dec
pop
cmc
stos
lret
xor
repnz
test
xor
mov
mov
imul
div
stos
aaa
stc
or
adc
xor
icebp
lcall
ds
pop
mov
cs
push
mov
xor
xchg
setae
lcall
sbb
mov
rcll
cmp
pop
dec
add
jle
inc
std
fcomip
decl
and
rclb
pop
mov
push
bound
jmp
jg
push
pop
mov
inc
lods
dec
icebp
out
push
adc
xchg
das
cli
mov
loopne
repnz
xor
cmp
pop
sti
xor
outsb
adc
cwtl
pushl
add
jbe
or
mov
aad
dec
or
jmp
jl
ret
xchg
lods
aaa
xor
sti
jmp
test
subl
jo
insl
in
dec
mov
jg
xchg
sarb
popf
push
mov
rcll
sbb
mov
sbb
nop
popa
js
clc
mov
sub
rolb
and
fidivl
mov
incl
adc
andl
pop
insl
jne
adc
stos
incl
push
jge
sbb
jae
and
mov
mov
cmp
clc
aad
push
sub
mov
sbb
lcall
sub
fwait
xor
cmp
mov
sbbl
aaa
jae
fisubrl
imul
imul
mov
xchg
jno
ljmp
incl
dec
loopne
loop
jae
mov
sbb
mov
shlb
cmpsb
mov
pop
jg
and
jmp
lret
subb
jmp
add
push
iret
sahf
pop
test
test
jmp
push
popf
in
fmuls
out
fucomp
mov
mov
push
jno
pop
insl
lahf
test
pop
push
pop
mov
inc
push
mov
mov
mov
jbe
dec
inc
push
inc
jg
sahf
pop
scas
jg
pushl
push
sub
sub
jl
lea
push
mov
ljmp
jecxz
int
xor
pop
inc
bound
test
pop
sbb
mov
ds
mov
push
outsl
adc
test
insb
leave
dec
loop
es
pop
push
not
mov
stos
cmc
push
ljmp
pop
pusha
push
push
or
frstor
or
jmp
fs
dec
test
in
or
lcall
insb
dec
out
jbe
dec
fisubrs
mov
dec
sbb
std
popa
xor
cmp
fmull
inc
sbb
push
imulb
or
mov
decl
and
fsubs
cwtl
fcoms
inc
xchg
pop
mov
loop
bound
xor
sbb
sti
stos
repz
dec
sbb
ljmp
pop
lcall
or
xchg
push
push
fs
pop
mov
ja
jb
scas
cli
ret
xchg
repnz
movsl
addr16
jbe
mov
aaa
cld
incl
dec
jmp
add
lahf
stos
ljmp
ss
mov
ljmp
jns
mov
mov
mov
lahf
ljmp
mov
cli
hlt
leave
mov
push
lcall
mov
data16
ljmp
les
js
shrb
enter
mov
xchg
repz
mov
mov
ljmp
jo
sbb
repnz
or
loopne
xchg
sbb
xor
jg
push
mov
scas
popa
and
pushf
lods
jmp
es
aad
mov
enter
jmp
pushf
or
imul
cmc
jbe
call
outsb
add
xor
pushl
push
pop
push
decb
test
jne
fs
sbb
outsl
aam
es
sar
xlat
xchg
aas
mov
cs
mov
mov
cld
test
repz
icebp
add
cltd
fisubs
xchg
xlat
or
fcomip
lret
in
lds
xchg
cmp
mov
arpl
arpl
jmp
dec
xor
mov
cltd
ficompl
fsub
imul
cwtl
jno
and
call
push
dec
nop
mov
rcrb
mov
add
xlat
mov
out
lcall
jmp
orb
mov
adc
mov
inc
insb
mov
leave
sub
out
test
mov
mov
mov
mov
or
sub
mov
es
arpl
push
cmp
mov
rolb
jb
cmpb
stos
mov
fnstenv
int
and
aaa
push
adc
in
adc
sahf
dec
pusha
movsl
mov
fucomp
pop
push
std
lcall
sub
dec
repz
dec
subb
adc
orb
call
mov
mov
pusha
lret
pop
int
and
mov
and
xor
dec
push
sbb
stos
mov
incl
incb
das
stc
sahf
test
aam
dec
movsbl
notl
adc
and
ljmp
cs
clc
sub
jecxz
and
subb
lock
and
mov
lcall
fs
shr
cwtl
daa
xchg
push
out
or
es
add
adc
jmp
imul
out
popf
mov
ds
mov
movsl
cltd
sahf
and
jecxz
or
movsb
cmp
xorb
scas
lcall
and
clc
dec
xor
sbb
cmpsl
leave
fs
or
ljmp
loope
mov
mov
cwtl
sbb
loope
ds
fwait
mov
jg
mov
cwtl
push
lea
inc
fldt
int
loope
daa
lcall
mov
incl
dec
sub
fbld
sbb
movsl
packsswb
push
std
fidivrs
out
call
imul
outsl
sub
cli
jl
jnp
data16
lds
test
inc
xchg
lock
in
dec
lods
scas
icebp
loope
fs
incl
pusha
inc
add
insb
jns
repnz
jp
mov
push
jmp
subl
xor
pop
ljmp
adc
lcall
sahf
inc
js
out
repnz
or
add
lock
fstpt
inc
cld
mov
xchg
std
push
call
xor
dec
or
cmp
adc
inc
pop
dec
aas
insl
xor
or
orb
popa
cmp
jmp
xchg
fsubl
mov
nop
mov
test
pop
pop
or
inc
aaa
leave
movl
mov
or
or
shlb
push
adc
and
xor
mov
add
lcall
aam
mov
decl
and
sub
and
insb
das
adc
loope
xchg
mov
sub
loope
in
mov
imul
orl
dec
jg
aaa
mov
dec
pop
movsl
fwait
out
pop
gs
in
lret
inc
mov
inc
and
das
aam
divb
mov
jmp
call
dec
shll
jne
iret
fdivrs
mov
sbb
or
aad
notl
cmc
ljmp
fisubrl
das
mov
xor
jg
addr16
call
pop
cld
push
es
rcrb
mov
xchg
cli
jnp
stc
add
das
push
lcall
repz
std
ja
or
std
inc
movsb
add
mov
mov
cmp
call
pushl
jp
popa
sarb
or
jno
push
aaa
push
decl
or
xchg
pop
stos
cmpsl
repz
adc
jmp
jmp
jg
cmpsl
and
std
into
pop
xor
mov
jg
jmp
and
mov
pop
add
decl
int3
inc
stos
fs
mov
jns
mull
mov
mov
mov
mov
cmpl
mov
sbb
mov
fnstenv
lcall
cmpsl
in
mov
sub
add
in
cmpsb
rcrb
insl
loopne
lret
push
xchg
pop
xchg
sub
inc
cli
dec
movsb
jmp
int
imul
and
rol
jae
incl
stc
sti
fidivl
lock
lods
xor
lea
push
shlb
or
es
mov
outsl
clc
pushl
lock
rcrl
adc
adc
js
call
movsb
fdivr
pushl
cmp
push
cwtl
sub
xor
inc
sub
lea
fisubrl
pop
cli
or
mov
adc
xchg
decl
mov
aaa
push
orl
in
mov
enter
incl
lods
mov
xchg
loop
mov
aad
fstl
decl
stc
or
sub
mov
mov
stos
sub
or
decl
lods
scas
mov
repnz
cmc
lcall
je
clc
push
and
sub
aaa
adc
jge
add
lds
clc
out
pop
bound
xchg
repz
mov
push
std
cmp
cs
leave
dec
xor
test
mov
dec
decl
sbb
insb
cmp
or
stc
jl
jge
iret
frstor
cmpb
cmc
push
in
mov
push
inc
jl
sbb
and
shrb
xlat
divl
xor
call
pop
cmp
aaa
inc
xchg
cmp
xor
int
call
scas
pop
das
cli
push
iret
mov
fwait
cs
stos
push
jp
sbb
xlat
cmc
stos
ret
jb
xor
push
xlat
sbb
mov
clc
jmp
or
push
movb
movsl
pushf
pop
test
in
push
out
pop
mov
xchg
fcoml
push
sar
cltd
jo
in
lods
push
lcall
call
push
mov
sbb
sub
xchg
add
call
std
shl
imul
push
push
and
xchg
mov
repnz
adc
or
lods
fs
xlat
jecxz
in
mov
push
push
dec
push
push
jl
das
int
and
mov
dec
dec
iret
push
mov
inc
scas
std
loopne
into
fnsave
fisubl
into
ja
add
or
sysexit
mov
sbbl
ljmp
dec
jl
jl
push
jmp
sbb
jbe
push
fldenv
out
call
decl
jns
inc
xor
shl
hlt
jle
add
fiaddl
cmp
scas
mov
fisttps
sbb
fs
out
ljmp
mov
push
out
push
xor
cltd
dec
fbstp
lcall
mov
pop
push
dec
mov
leave
xchg
bound
cltd
dec
stos
test
jge
add
pushl
pushf
fldt
pop
addr16
iret
push
popf
outsl
je
mov
sub
in
lret
xor
inc
loope
cwtl
sub
das
outsl
ss
incl
or
xchg
pandn
insb
call
jnp
fdivs
cmpsb
jecxz
shll
ss
cld
fisttpl
ds
dec
fwait
sub
cmp
jmp
or
jp
cmp
das
mov
pop
inc
popf
xchg
pop
sub
sbb
fld
mov
xor
outsl
jecxz
addl
pop
cmc
sub
and
mov
scas
and
pushl
push
inc
cmp
cli
mov
jnp
imull
test
mov
push
jne
push
shrl
sub
lcall
xchg
out
not
jne
les
push
icebp
stos
dec
data16
stos
in
inc
mov
stos
add
adc
dec
cltd
pusha
mov
incl
lock
jge
pushf
cmp
mov
sub
cli
pop
pushf
sub
imul
push
cs
pop
sarl
add
jp
lock
ds
stc
jg
jbe
pop
je
mov
push
inc
xor
repz
sar
ljmp
push
stos
jl
es
shrl
mov
jl
rcll
cltd
outsl
in
pop
or
aam
inc
push
outsb
shl
cltd
or
fmull
das
cmp
dec
sahf
jmp
jmp
mov
lret
cmp
ja
ret
movsb
aam
in
data16
mov
xor
dec
pop
pop
cmp
pop
sub
xchg
inc
mov
push
icebp
pop
mov
sub
mov
mov
xchg
insl
cmp
imul
mov
bound
dec
arpl
add
inc
push
fisubl
xor
fsubrp
stos
mov
mov
aaa
and
aaa
add
mov
push
fildll
pushl
rclb
sbb
cmp
adc
jo
inc
inc
jb
push
pop
add
push
js
lret
std
addr16
subb
es
pop
cmpsl
jb
ja
in
ds
pushl
daa
sti
imul
stos
rol
insb
sti
cmp
or
std
sbb
and
fnsave
cmp
pop
dec
or
or
cmpsl
jmp
ret
decl
stos
sti
mov
repz
jl
add
sbb
cmp
fisubl
push
inc
or
repz
fildl
sub
inc
pushf
out
pop
mov
cmp
ficoms
fiaddl
test
pop
cmpsl
stos
ds
sub
pop
dec
add
mov
push
in
or
jg
or
xorl
sti
popf
inc
or
icebp
xor
mov
and
cld
mov
call
enter
lret
rorl
in
aam
insl
scas
movsb
inc
mov
call
dec
push
inc
mov
adc
sbb
fstl
adc
dec
pop
decl
jb
mov
adc
cmp
in
pop
loop
xchg
ds
scas
fidivl
mov
aaa
or
lock
push
data16
xor
ljmp
sar
push
mov
push
pushf
or
mov
out
dec
idiv
orl
and
xchg
cmp
adc
push
sbb
dec
test
cld
dec
mov
dec
push
cmp
jb
in
sbb
scas
pusha
stc
inc
mov
and
push
icebp
decl
lock
pop
cli
lods
push
in
jmp
sbb
mov
sub
jp
dec
test
test
mov
out
loop
and
stos
mov
mov
and
xor
sub
subl
cmp
jmp
xchg
sbb
inc
lds
dec
fdivs
shr
aaa
mov
icebp
adc
hlt
sbb
decl
aam
lret
pop
xor
push
push
fbld
mov
jle
iret
sti
fldl
mov
iret
test
lcall
cmp
sarl
jb
in
orl
pop
mov
addr16
dec
stos
pushl
and
iret
popf
adc
mov
dec
movsl
push
ds
xchg
loope
mov
in
mov
rorb
and
and
adc
out
mov
and
mov
mov
outsb
mov
pushl
sahf
lds
leave
push
sbb
cmovl
push
xchg
mov
and
stc
push
sar
cmp
std
ret
pushl
mov
repnz
xchg
ljmp
call
mov
mov
push
mov
sahf
mov
sub
or
jle
movsl
mov
dec
jmp
lods
cs
in
popf
fwait
dec
filds
cld
incl
stos
pop
js
pop
in
and
mov
mov
cwtl
cmp
decl
dec
in
and
dec
fwait
in
loope
dec
out
fstps
adc
filds
les
shl
pop
push
cmpsl
js
in
lds
insl
sub
dec
add
mov
or
insb
lods
sub
fmull
mov
adc
xchg
cmp
cmc
push
incl
cmpsb
jge
loope
jae
aad
mov
jns
adc
shl
pusha
addb
mov
lcall
mov
jmp
push
fstpt
mov
and
pop
cmp
and
decl
outsl
and
mov
push
jne
outsl
or
jp
mov
mov
call
jo
adc
dec
dec
sub
daa
and
std
repz
nop
and
fs
ljmp
mov
fsubr
adc
adc
mov
cmp
cmpsb
sbb
fldcw
aam
mov
xor
mov
xlat
popa
or
xchg
outsl
jmp
loope
stc
adc
aad
ret
jb
sbb
mov
lcall
insb
mov
cmp
ljmp
dec
cli
fcmovnu
push
pop
std
cs
mov
sbb
mov
popa
sbb
mov
fdivrs
das
bsf
adc
sbb
mov
pop
cld
call
out
jb
in
mov
mov
jmp
jno
or
decl
leave
cmp
dec
push
mov
mov
lcall
push
lods
cmp
xchg
pop
push
call
ja
cmp
mov
jbe
ficompl
sub
sub
xchg
mov
push
push
test
jg
adc
cwtl
dec
xchg
xor
popa
test
test
mov
insl
das
mov
mov
lcall
push
jle
mov
decb
sub
cld
call
and
sub
fisttpl
sbb
lahf
pusha
mov
fcmovbe
sbb
imul
aaa
shrb
aad
ret
lods
add
mov
in
inc
jge
push
xor
sbb
xchg
out
mov
fdivrs
mov
pop
mov
sar
outsl
clc
pop
pop
pop
or
sub
pushf
hlt
les
decl
sbb
mov
mov
test
cmp
mov
icebp
fsubr
mov
inc
pushl
cwtl
aam
stos
rcr
xchg
out
pop
outsb
and
jg
push
imul
push
pushl
mov
in
daa
jo
ds
and
fnstenv
ret
xor
xchg
dec
jg
call
xor
ds
xor
addl
imul
sbb
sub
stos
jno
add
cmp
arpl
bswap
mov
roll
jmp
pop
aad
ds
outsb
lods
out
sbb
stos
sbb
iret
push
xor
scas
int3
or
add
clc
pushl
adc
mov
enter
dec
and
pop
adc
cld
mov
mov
and
call
gs
mov
test
movsl
xor
xchg
test
mov
lcall
jno
arpl
mov
jns
dec
arpl
call
stos
or
in
cmp
push
sbb
xchg
sahf
pop
repnz
fwait
lea
or
or
decl
push
int3
ret
mov
mov
xchg
cltd
leave
push
pop
test
in
lds
xor
adc
jg
out
icebp
ljmp
enter
mov
add
cli
call
adc
out
jo
push
add
adc
in
sub
scas
movsb
add
inc
out
inc
pop
dec
jnp
in
xor
outsl
add
ljmp
fwait
loop
mov
and
xchg
or
jecxz
push
stc
jmp
outsb
stos
cmp
orb
cmpsb
aas
or
push
mov
push
cmp
cmpsl
sbb
lcall
or
and
inc
bound
call
or
sub
jmp
call
sbb
push
outsl
cltd
or
bnd
adc
call
popf
and
imul
push
adc
outsb
xchg
mov
gs
subl
jnp
push
or
sub
xchg
aaa
and
mov
shl
jg
or
jge
inc
sub
and
cltd
xchg
dec
loop
divb
sahf
fcmovnu
lret
sbb
sbb
out
sbb
jmp
lock
les
dec
int3
int
hlt
or
mov
aaa
push
mov
inc
loop
sub
jae
inc
push
jg
mov
das
adc
add
arpl
xchg
inc
and
sub
pop
cltd
nop
dec
cmp
not
out
mov
dec
adc
gs
cmpsb
nop
clc
js
jg
add
and
in
shll
mov
jge
sbb
out
jmp
dec
inc
dec
lds
xor
push
clc
fdivr
mov
les
mov
imul
int3
dec
xlat
sub
icebp
lahf
push
fcomip
sarb
jmp
push
hlt
mov
add
iret
std
fnstenv
sub
push
out
push
inc
xchg
movsb
clc
out
daa
cld
aas
adc
sahf
mov
dec
jg
push
cmpsb
xlat
fcomip
call
jb
xchg
imul
pop
jbe
jo
pop
mov
in
les
hlt
cld
jecxz
jmp
jmp
rolb
cltd
lret
lock
mov
pop
cmpsb
sub
mov
pop
sbb
incl
loopne
les
cs
or
add
outsl
jno
mov
ja
mov
fs
gs
les
shlb
sub
pop
cmp
push
xchg
out
inc
dec
and
mov
or
fdivr
decl
pop
and
add
pop
sub
jp
lock
cs
js
mov
pop
iret
add
filds
pop
jnp
shrl
loopne
push
cmp
cli
lcall
sbb
dec
pop
adc
inc
std
ljmp
and
inc
ret
and
and
push
repnz
sar
inc
jbe
adc
call
cmp
les
cmpsb
scas
icebp
icebp
ret
mov
jmp
xor
cmp
cmp
pusha
and
mov
jnp
cs
jnp
jle
inc
jno
pminsw
sbb
and
push
fists
loope
stc
cmpsl
lcall
sub
pushf
xchg
sbbb
movsl
mov
pop
cmp
jl
mov
xor
mov
add
jg
pushl
cli
out
aad
in
pushf
outsb
enter
cmpsl
nop
shrb
cwtl
nop
fisubrs
stc
xchg
fcomip
das
sub
aad
fisubs
mov
pop
add
repz
aam
popf
dec
pop
loop
call
mov
icebp
fcomps
jl
adc
arpl
mov
jne
dec
ret
jmp
sbb
je
mov
lret
jnp
mull
pop
pop
adc
jmp
adc
jmp
test
jo
mov
and
xor
and
cmc
jo
ljmp
or
aaa
pop
pop
or
hlt
and
pushf
pop
testb
and
cmc
pusha
jg
lcall
mov
or
adc
sbb
repnz
inc
and
gs
push
cwtl
jecxz
adc
nop
sbb
nop
add
test
xchg
outsb
daa
pop
jge
incl
lcall
pop
in
shrb
xchg
jle
pop
jge
xchg
idiv
lcall
fistpl
cmp
sub
aas
out
pusha
mov
addr16
jecxz
inc
sarl
ljmp
sarb
movsl
xchg
pop
sub
lods
sub
movsl
pop
clc
pushl
aaa
mov
push
inc
aas
jmp
ret
mov
ret
cld
jmp
das
mov
lret
add
mov
adc
cmp
stc
sub
inc
lcall
das
push
jnp
test
scas
mov
push
jg
movsb
in
loopne
stos
dec
out
lods
xchg
dec
cld
mov
push
pop
lea
ds
xlat
shlb
jmp
jmp
adc
mov
ret
icebp
stc
imul
xor
mov
mov
lcall
psrlq
int
push
sbb
insl
cli
dec
xchg
pushl
scas
jns
adc
fcoml
lock
int3
sub
shrl
jge
daa
mov
xchg
arpl
mov
movsl
out
cmp
or
xchg
enter
movsb
stc
add
xchg
out
xor
cmp
shlb
out
lret
mov
iret
jg
push
lcall
lcall
xor
mov
divps
xchg
push
or
mov
xchg
cmc
pop
std
lcall
fsubrs
insb
jno
push
xchg
pop
testb
lea
filds
or
inc
cmp
sub
sbb
or
mov
addl
or
xchg
sub
lock
fnstenv
sbb
sub
adc
cs
lods
and
in
clc
push
pop
push
adc
decl
or
in
test
push
lods
mov
sbb
and
pusha
inc
jae
jae
lcall
jl
pop
and
imul
push
xchg
sahf
xorb
cmp
in
or
jns
cld
ljmp
mov
fs
std
jg
inc
dec
xchg
sarl
or
push
and
sub
int
out
pop
xor
add
xor
push
icebp
sti
push
add
subl
pop
sahf
fwait
call
jmp
xlat
scas
dec
inc
lahf
movsb
leave
xor
aad
jb
adc
test
xor
dec
inc
daa
push
and
dec
dec
fldt
lods
mov
jmp
mov
push
or
mov
dec
add
out
cmp
sbb
jg
adc
cmpl
cs
cli
les
sbb
sbb
mov
daa
jl
pop
and
cmpsl
imul
mov
ljmp
or
pushl
xchg
cmp
fimuls
push
fsubl
lcall
pop
aas
out
aaa
std
in
lods
add
mov
pop
jb
dec
rdtsc
gs
ds
jp
pop
mov
sbb
stos
push
fcmovu
rorl
ret
pushf
sub
jbe
outsl
xchg
out
hlt
popf
cs
call
data16
inc
mov
std
decb
call
push
cli
sub
cmp
or
addb
ljmp
mov
or
es
sahf
movl
adc
in
dec
push
pushl
add
xor
push
mov
stos
mov
orl
out
mov
dec
xchg
jmp
in
inc
ffreep
mov
cmp
adc
in
in
lods
push
stos
push
mov
in
mov
inc
icebp
sbb
sahf
fmull
pop
pop
mov
les
fisttpl
lds
lock
push
fisttps
and
or
test
rcr
fbld
inc
or
adc
pop
fsubl
jno
sub
xor
xchg
adc
movsl
inc
jnp
mov
sub
mov
popa
fcomip
jb
incl
sbb
bnd
lock
les
push
scas
cwtl
outsl
imul
adc
ss
xor
lds
lcall
fwait
add
cld
fildll
or
ljmp
sar
xor
cmp
dec
fists
jns
sub
fcompl
sbb
inc
jecxz
xlat
mov
je
orl
inc
and
mov
or
xchg
jg
rcrb
inc
add
jg
out
scas
mov
push
sbb
pop
shrl
mov
dec
ud0
mov
cmpsl
sbb
xchg
test
mov
movsl
jecxz
jle
icebp
jae
dec
test
clc
adc
pop
ret
es
sti
js
xchg
push
jmp
scas
xchg
jne
pop
cmp
push
xchg
mov
add
insb
ljmp
push
jp
lods
mov
sahf
push
js
call
fsubrl
movsl
xor
push
lret
fistl
lcall
insb
ret
cmpsl
mov
aad
fstpl
mov
dec
incl
outsb
push
pop
jl
aad
jmp
data16
popa
mov
jmp
cmp
sbb
push
jle
or
test
cmp
jle
mov
scas
xchg
xchg
into
xchg
adc
out
sub
xor
loopne
add
inc
es
adc
imul
mov
mov
cld
insl
pop
ficoms
ret
push
je
test
pop
jns
ret
sbb
cmp
mov
sub
scas
cmpsl
push
and
and
push
mov
stc
fwait
or
mov
shlb
sub
pop
movl
mov
add
push
std
mov
or
into
jno
scas
sub
add
or
pushl
inc
mulb
mov
cmp
mov
ja
popf
mov
mov
mov
inc
pop
scas
cs
or
ljmp
dec
mov
icebp
xchg
mov
shl
loope
testl
jmp
je
mov
or
mov
jae
aas
mov
out
cli
std
flds
jmp
sub
cmp
test
xchg
sti
lcall
pushl
hlt
scas
nop
and
idivl
push
inc
mov
aaa
bound
test
mov
loope
mov
outsb
aam
mov
dec
leave
je
imul
neg
adc
incl
inc
jp
sub
aam
cs
push
pop
outsb
lods
out
inc
jg
sub
arpl
inc
xor
jnp
mov
inc
stos
mov
in
jecxz
sbb
fs
in
ljmp
ljmp
fistpl
push
add
call
xchg
mov
inc
int3
aam
sub
pushl
lahf
mov
shlb
sbbb
cmp
mov
sbb
jnp
test
call
inc
cmp
push
adc
cmpb
iret
rcll
rcrl
inc
shlb
push
or
cmpsb
stc
xchg
popf
push
mov
jmp
mov
push
pminub
adc
mov
leave
out
jb
testl
lcall
xchg
push
push
sti
stos
rcl
mov
mov
mov
cli
mov
jg
xlat
iret
inc
sub
loope
fst
xchg
push
adc
xchg
jmp
imul
pop
cmc
mov
hlt
inc
inc
push
inc
push
pop
pop
mov
mov
pop
mov
xlat
adc
xchg
bnd
std
jne
out
scas
xor
lcall
adc
test
les
gs
test
addl
js
mov
sbb
in
xchg
inc
fadds
sarl
testl
dec
test
sbb
jg
pop
ficomps
scas
dec
in
mov
imulb
repz
in
sub
mov
clc
call
imul
adc
adc
loope
cmp
int
cs
sub
mov
decb
outsl
jg
les
out
jp
movsl
jge
das
and
addr16
inc
lcall
jmp
sub
jne
jecxz
and
or
mov
xchg
push
inc
decl
test
fists
dec
and
pop
mov
std
xchg
or
filds
sub
loopne
jmp
mov
arpl
pop
cmpsb
out
add
inc
iret
jl
enter
call
and
push
mov
jge
mov
cltd
iret
adc
dec
in
es
jne
lahf
dec
cli
inc
rorb
xor
lock
call
mov
push
bound
cltd
loope
dec
and
cli
out
cmpsb
enter
push
mov
lret
out
jbe
mov
ss
fldt
mov
pop
push
sahf
push
jae
pop
xchg
shll
subl
decl
movsb
xor
and
mov
mov
adc
inc
test
clc
and
ljmp
test
jl
lahf
or
or
mov
mov
add
adc
mov
ja
inc
dec
xchg
out
dec
lret
cli
out
pushl
in
popf
mov
inc
pop
mov
into
aas
adc
popa
pop
mov
fsubp
cmp
hlt
out
or
lcall
pushw
sub
push
pop
xlat
ljmp
adc
outsb
or
sahf
lds
mov
adc
fists
popa
sbb
xchg
pop
test
jg
jmp
xor
ljmp
xlat
inc
xor
lret
popf
jno
pop
mov
mov
les
mov
inc
decl
enter
or
or
bound
fmul
and
dec
push
fwait
mov
pop
or
ljmp
jbe
call
sbb
push
cwtl
es
lcall
push
fisubrl
jo
pop
enter
push
fldcw
incl
subb
sub
or
mov
push
loope
cmpsb
mov
push
push
mov
loop
pushl
add
bnd
imul
clc
aad
lcall
pushf
insb
lcall
sub
mov
int
push
sub
and
sub
stos
push
incl
add
and
aam
sub
je
cmp
out
add
jp
or
insl
mov
lcall
mov
pop
icebp
jp
mov
jp
mov
dec
mov
fsubs
insb
lcall
ss
xor
les
test
mov
cmc
aaa
rorb
and
cmp
jnp
adc
in
jne
pushl
data16
stos
test
jge
out
cmc
xchg
fsts
nop
bound
hlt
push
roll
push
fistpll
jnp
pop
mov
mov
sar
mov
shll
fidivl
sbb
inc
jg
rcrb
call
test
scas
ret
jle
hlt
aaa
xor
daa
mov
popf
cli
pushf
xor
mov
idiv
decl
sub
mov
cli
stos
test
icebp
ss
leave
repnz
fisubrs
and
push
inc
mov
in
mov
xor
push
xchg
in
sahf
dec
adc
push
mov
inc
dec
sbb
bound
cmc
inc
mov
jne
mov
adc
lcall
lock
fcomip
pushl
mov
pusha
xchg
pushf
xor
mov
and
adc
lcall
incb
notb
push
mov
cmpsl
test
push
cs
decl
call
xor
mov
pop
test
daa
clc
jmp
dec
jg
inc
push
xchg
push
xor
ljmp
cwtl
popa
add
jge
xor
les
jns
imul
jbe
mov
incl
scas
sbb
mov
pushf
decb
addb
ds
mov
gs
sub
aaa
jae
dec
xor
leave
mov
jbe
fsubrs
test
push
dec
les
outsb
cwtl
jae
dec
das
sar
stc
push
sbb
test
or
adc
movsb
xor
decl
and
test
sub
push
out
iret
nop
mov
inc
jne
cmp
sub
lods
fcomip
lret
ucomiss
cld
sbb
arpl
jbe
push
cli
aaa
xchg
rcrl
and
insl
out
fwait
cld
pushl
mov
inc
mov
mov
roll
pop
std
pushl
loop
push
rclb
jmp
scas
movsb
inc
mov
rcrb
scas
lods
aam
idiv
jg
addr16
jnp
cmp
imul
push
cmp
push
jae
inc
mov
pop
std
outsb
pop
mov
mov
popa
mov
inc
fwait
pop
sub
mov
sbb
pop
shlb
pop
and
push
icebp
jg
call
test
outsl
test
xor
sbb
data16
adc
std
and
pop
add
lods
sbb
rorb
dec
pop
cmp
cmpb
andl
adc
pop
cmp
std
or
jns
add
int
xchg
int
cmp
mov
test
fdivp
int
in
in
add
les
je
dec
push
add
aaa
sbb
ret
insl
dec
lock
adc
ljmp
xchg
add
fwait
in
and
and
jnp
ret
and
jl
mov
fildll
push
hlt
xchg
inc
jg
jmp
xchg
push
cs
mov
inc
add
cld
jmp
pop
jg
bound
dec
std
fnstcw
daa
hlt
jb
movsb
fisttpl
ja
jmp
xchg
movsb
mov
popa
sub
movsb
xor
bound
jmp
je
mov
movsl
xor
mov
popa
aam
xchg
call
xchg
dec
decl
outsb
mov
je
sbb
adc
xor
imul
je
or
inc
push
inc
pushl
dec
out
outsb
ss
adc
sub
inc
lgs
push
mov
repnz
pushl
mov
inc
xlat
in
adc
jo
push
jmp
test
push
push
std
jg
cmp
jge
push
push
stc
sub
and
repnz
ja
lcall
jge
xor
sahf
dec
fs
andb
loopne
test
adc
add
jb
jg
pop
ret
pop
dec
add
jbe
mov
leave
mov
push
fsubl
mov
aad
xchg
shr
sbb
outsb
icebp
cwtl
cmpsb
fisubrs
pop
shl
mov
clc
hlt
cltd
sar
mov
sub
dec
int
ds
je
setno
stc
adc
call
cld
test
jmp
mov
xor
loope
cmp
pop
repnz
je
push
jge
mov
icebp
cwtl
sahf
call
pushl
sub
add
cwtl
dec
cwtl
gs
test
sub
in
incl
xchg
dec
push
and
mov
add
jmp
movsl
mov
push
mov
jg
sahf
scas
ss
sbb
jmp
dec
sub
mov
in
stos
in
ljmp
cmp
iret
lods
mov
or
call
icebp
or
shrb
pushf
jl
push
lret
jg
stos
lahf
mov
xchg
inc
xor
add
mov
lcall
cltd
jg
xchg
xchg
shl
ljmp
jbe
xor
mov
add
pop
dec
sarl
imulb
fimuls
xchg
aad
fcmovnb
fmulp
adc
lcall
in
loopne
mov
cli
imul
pop
inc
call
icebp
push
or
outsb
test
sti
push
or
clc
out
and
popa
mov
cli
ljmp
add
cmp
inc
cmp
pop
fisttpl
xchg
and
sub
mov
test
mov
jns
fcomi
push
fbstp
pusha
pop
pop
daa
mov
out
mov
fmull
test
out
movl
addl
jmp
jmp
mov
inc
sahf
into
arpl
push
mov
xor
mov
lds
push
ror
mov
jno
shll
hlt
push
xor
shrb
mov
jg
repz
test
mov
sbb
das
les
add
mov
pushl
aaa
adc
dec
sbbb
mov
push
in
jmp
sub
clc
inc
stos
or
lds
or
adc
mov
dec
adc
jnp
rcrl
lcall
lcall
cli
inc
sbb
psubsb
mov
inc
rolb
out
jne
push
mov
popf
jg
fcomip
cmp
cmp
out
fwait
add
ds
shll
add
ljmp
out
jnp
sbbb
xlat
mov
lahf
ja
ljmp
push
jge
fsubr
adcb
ja
mov
repnz
mov
pop
cmp
mov
cmpsl
sbb
mov
fsub
sub
gs
cmp
loopne
hlt
scas
push
push
xchg
mov
xlat
repz
lods
idivl
pop
fs
fnstcw
lds
xor
cmpsl
shlb
pop
inc
movl
out
mov
js
in
or
bound
add
aaa
cmc
and
fucomp
in
test
aaa
std
xorl
es
mov
push
sub
sarb
mov
dec
cmp
and
jmp
push
stos
addb
pop
jge
pop
leave
lock
pop
scas
stc
fs
jg
imul
nop
or
lret
xchg
std
stc
call
sub
xchg
xchg
xor
xor
xor
nop
clc
ljmp
inc
add
icebp
mov
mov
inc
insl
incl
and
in
dec
popa
call
pop
xchg
sub
jmp
pop
jb
ret
call
lods
pop
xchg
cmp
rcrb
adc
push
fildll
and
pop
int3
sub
pushl
cwtl
outsl
mov
mov
inc
sbb
rcl
das
repz
cltd
xchg
sar
cld
and
jg
dec
cmp
pop
orb
int3
mov
or
pop
mov
cmp
decl
or
sub
xlat
xchg
mov
push
xor
pop
jp
aaa
sahf
mov
incl
ds
and
enter
or
ret
push
adc
gs
lcall
xchg
out
test
xor
cmc
lock
aaa
repz
sub
fisttps
jmp
jle
jae
jl
not
aas
mov
inc
mov
mov
cmc
je
pusha
mov
imul
xchg
jb
subl
mov
xchg
loope
es
cltd
sub
mov
out
push
sbb
dec
dec
movsl
into
pop
lock
jmp
dec
xchg
std
push
je
movsl
mov
imul
push
xchg
test
and
incl
test
and
dec
lock
negl
sub
add
incl
adc
pop
cmpsl
push
popf
sbbl
mov
inc
mov
mov
out
js
out
jbe
jl
je
scas
movsl
das
push
in
daa
cmp
mov
clc
push
xchg
into
sbb
sbb
mov
cmp
lret
lods
pop
push
push
or
sub
incl
into
cld
push
and
ret
mov
rsqrtps
and
mov
or
fbstp
roll
pop
sti
mov
dec
repnz
insl
cmc
scas
nop
rcr
sbb
test
mov
decl
cmpsl
ret
sbb
pop
in
lods
negb
jo
ja
ljmp
out
push
outsb
dec
mov
rcrb
rcll
loop
into
test
jmp
pop
mov
out
mov
idivb
adc
ljmp
incl
out
push
inc
int3
adc
add
fisttpl
cmp
dec
xor
jmp
aas
push
xchg
xor
adc
aas
gs
incl
cmpsw
mov
inc
and
or
cltd
fstps
inc
add
push
jge
fiadds
call
adc
or
lods
inc
mov
clc
xlat
ljmp
adc
xor
loopne
lds
jns
lods
test
push
pop
lock
add
iret
rorb
movsl
adc
loop
mov
mov
ljmp
out
enter
bts
test
rcl
push
lcall
jg
out
push
lea
stos
push
adc
sbb
pop
jbe
movsb
sbb
loop
jae
pushl
cs
mov
push
in
dec
inc
arpl
push
mov
stos
mov
loop
and
lret
outsb
icebp
adc
in
int3
in
dec
dec
shlb
jno
lret
xchg
lret
clc
in
jecxz
call
and
js
push
cmpsb
xor
pop
adc
test
jb,pt
arpl
out
inc
in
rorb
mov
xor
xor
dec
hlt
dec
lea
inc
das
mov
sbb
aas
xchg
addr16
inc
ret
stc
cmp
pop
or
add
dec
jno
mov
rcll
cmp
mov
aas
das
test
pushf
outsb
xor
add
ljmp
sbb
pop
pop
xor
cltd
jg
incl
or
mov
imul
out
shl
or
and
sub
incl
hlt
ss
pop
cld
push
leave
gs
push
in
adc
loope
int
aas
cld
push
adc
addr16
mov
cmp
mov
stc
pop
cmp
pop
mov
ret
lods
jo
xchg
call
inc
cld
leave
pop
mov
ds
inc
lcall
push
or
dec
out
mov
dec
out
addr16
pop
sbbb
in
gs
pop
pusha
imul
stos
cli
inc
daa
jnp
sbb
mov
jb
push
jbe
and
decl
and
leave
add
dec
jp
aam
fwait
icebp
stc
mov
insl
jg
sbb
adc
jmp
icebp
fdivs
inc
and
xchg
popf
inc
and
xchg
push
sbb
and
ds
test
mov
std
push
pushl
adc
xor
outsb
lea
js
int3
test
call
stos
std
add
jmp
lret
scas
mov
adc
cmp
push
cmp
fstps
jl
movsb
add
cmpsb
pop
mov
loopne
xlat
clc
jg
inc
shll
hlt
imul
cmpsb
ljmp
jns
cli
xor
mov
lret
icebp
push
clc
cmp
mov
mov
call
outsb
iret
loope
and
sbb
movsb
adc
lock
xchg
mov
rcrb
jg
incl
call
movl
and
mov
decl
sub
data16
popa
xor
fimuls
mov
out
mov
pushl
push
icebp
leave
std
inc
popf
jle
sbb
mov
adc
aaa
leave
add
lods
and
jo
add
lcall
insl
pop
jge
popf
inc
push
loope
rcl
mov
ljmp
jo
shrl
pop
pop
or
xchg
jns
jae
cmc
or
adc
test
mov
jmpw
jmp
jg
jg
loopne
or
dec
inc
repz
iret
jnp
aam
dec
sub
repz
clc
pushl
insb
pop
sub
dec
lcall
movsb
add
xchg
psubq
sti
adc
andl
or
lds
out
push
push
mov
out
xlat
dec
lods
pop
or
sbb
lret
sub
loope
andl
push
pop
mov
jl
jb
call
jmp
mov
fcmovnu
ss
popa
jg
outsl
mov
outsl
fwait
add
test
jecxz
aad
ficompl
data16
inc
fsts
call
jno
cmp
push
dec
pop
in
lock
cld
adc
or
stc
xchg
loop
push
mov
pushl
in
xchg
push
lcall
lcall
jmp
orb
fstp
dec
xor
sbb
cmp
cmc
mov
mov
jb
lcall
add
fs
aas
ret
addr16
push
push
sbb
jmp
cmp
in
cld
into
bound
fcom
cmpsb
mov
cmpsb
mov
xor
mov
incl
add
test
sub
out
mov
int
push
movsl
jmp
cli
lcall
jmp
jnp
mov
jg
mov
mov
testb
lcall
xor
arpl
and
ret
in
fwait
cli
adc
icebp
jmp
sbb
jo
push
mov
outsl
cmpsl
jmp
lock
insb
popf
clc
bnd
pusha
pop
incl
and
or
lods
cmp
lcall
fmulp
fstps
ffree
stos
or
cmp
pushl
inc
jae
add
cmp
mov
mov
stos
jecxz
xlat
call
push
stos
dec
jnp
mov
jle
dec
stc
inc
sahf
je
cmp
mov
or
filds
mov
push
bound
jo
xor
mov
jg
adc
sbb
xor
jmp
shrb
add
jmp
mov
jge
shl
and
incl
ret
cmc
js
mov
mov
push
jmp
push
aam
stos
jecxz
gs
jae
jp
lahf
sbb
jg
or
and
mov
mov
mov
mov
mov
or
push
sbb
call
mov
adcb
jb
add
mov
add
ljmp
mov
mov
or
in
popf
jo
or
stos
sub
stos
jg
push
std
sti
jno
test
lahf
repnz
fistpl
iret
jns
mov
cmp
jae
das
pop
mov
mov
and
mov
call
push
pushf
xchg
xchg
push
or
sbb
call
ja
inc
mov
mov
sub
je
testb
push
stos
inc
nop
mov
ficompl
cwtl
mov
jb
inc
js
shll
cs
iret
fiaddl
jmp
cltd
in
fnstenv
pushf
lcall
adc
cli
out
add
fwait
ret
xor
push
dec
cmp
sbb
push
dec
scas
hlt
ss
mov
dec
fcomip
out
out
rorb
dec
mov
mov
sbb
mov
mov
adc
or
lcall
dec
xor
test
fsts
mov
andb
dec
ret
jb
adc
sub
stos
rorb
and
mov
mov
pop
mov
addb
lods
cmp
and
and
mov
stos
into
daa
repz
sbb
cmp
int3
inc
call
pop
inc
addr16
add
call
roll
rclb
aad
cmc
aad
pop
out
mov
xchg
es
jnp
ljmp
push
repz
mov
xchg
fdivrs
jp
xor
jl
rorl
mov
pop
aas
push
xchg
repnz
gs
dec
cmpsl
iret
mov
call
cld
xor
sbb
hlt
in
int
daa
popa
xchg
clc
mov
and
jl
popf
sub
cmpsb
jbe
mov
inc
mov
hlt
pop
xor
mov
xchg
inc
fwait
test
push
popa
jl
fcompl
mov
jb
dec
shlb
outsb
hlt
push
mov
jg
push
inc
mov
push
pop
pushl
andb
pop
jae
add
mov
test
or
sarl
jne
lcall
push
pop
and
sub
xor
orl
mov
sbb
fwait
ljmp
mov
xor
xor
jns
aam
pop
fdivl
pop
popa
inc
xor
decl
or
sbbb
pop
ror
jae
mov
and
inc
xchg
adc
rorl
std
incl
shr
xlat
or
popa
aaa
scas
test
addr16
sbb
add
or
cli
div
popa
jns
mov
out
add
dec
fs
pushl
mov
jnp
cmp
add
sbb
pop
lods
inc
jmp
mov
jmp
mov
cmp
mov
incl
mov
or
repnz
insl
lcall
inc
les
into
jne
jge
lock
mov
sbb
xor
inc
mov
jno
cmpsl
mov
jmp
mov
out
push
out
inc
out
popf
push
push
gs
pop
and
decl
sbb
pop
push
repz
xchg
aas
dec
fsubrp
cs
cmp
xchg
in
pop
lcall
inc
dec
loopne
addr16
movsb
mov
ds
das
push
mov
pop
pop
pop
mov
or
add
ljmp
sub
mov
imul
test
sbbl
lcall
adc
inc
mov
jne
sub
xchg
fisubrs
rcrb
outsb
lahf
sar
decl
pop
or
je
js
mov
pop
or
mov
out
cmp
lock
cmc
jg
pop
xchg
in
and
std
sub
cmp
push
xchg
int
mov
pop
cmc
mov
add
cs
movsb
xchg
aaa
fs
lcall
into
cltd
movsl
xchg
mull
push
xor
jg
cmp
and
push
inc
add
mov
scas
lcall
pop
bound
xor
lea
jg
ljmp
jno
int
std
repz
mov
push
stos
pop
dec
mov
call
sub
cmp
les
sahf
psubd
out
sarl
je
data16
dec
adcl
mov
pop
inc
faddl
mov
jmp
clc
ds
jg
and
adc
cli
pop
notb
sub
fcomip
call
sbb
leave
icebp
sub
xor
test
lods
add
mov
daa
push
inc
push
sub
movsl
jno
push
inc
xor
sub
imull
mov
pop
and
dec
xor
call
jo
cld
pop
pop
popa
xchg
sti
ljmp
js
xchg
pop
arpl
mov
sarb
sub
xchg
mov
enter
dec
lret
mov
jg
movsb
sbb
popf
xchg
popa
adc
mov
jmp
sbb
pop
and
loopne
mov
cmp
repnz
mov
lcall
mov
or
jae
ss
clc
mov
data16
xchg
stc
jl
ja
xor
cmp
inc
call
xor
mov
loopne
mov
inc
pop
push
fisttpl
fcmovnb
fldenv
mov
int
in
cmc
fisttpl
nop
das
mov
adc
addl
scas
fdivrl
popa
int
test
pop
inc
sbb
in
cmp
notb
push
test
repz
inc
pop
mov
sbb
push
lods
xchg
inc
ss
in
add
mov
jmp
rcr
jbe
inc
mov
or
lds
jecxz
xchg
mov
outsl
popa
cmpsb
test
decb
fcmovbe
ffreep
test
pop
jp
addr16
inc
cmpsb
mov
and
lret
aas
or
dec
add
pushf
mov
mov
xchg
mov
lea
fcom
ds
add
sbb
jl
cltd
push
das
jae
fisubrl
inc
out
scas
out
xor
flds
push
mov
push
mov
add
call
cs
sahf
fs
lcall
je
aas
sbb
js
orl
int3
pop
ljmp
lcall
and
sub
fldcw
sahf
cmp
push
xor
xorb
mov
decb
pushf
push
xchg
fsubs
mov
dec
in
fwait
push
mov
jmp
add
xchg
cmp
insl
and
das
cmp
dec
jo
inc
inc
pusha
sti
xlat
add
mov
std
dec
sar
cmp
mov
je
incl
add
repnz
mov
lock
inc
addr16
daa
jg
jle
mov
xchg
dec
pop
mov
cmpb
xchg
ja
icebp
shr
and
fmull
incl
shlb
scas
mov
ficompl
mov
sub
cld
adc
jg
dec
cld
mov
and
fidivl
and
inc
call
xor
push
les
lret
xor
out
inc
mov
sbb
push
call
mov
popa
pop
sbb
inc
fsubs
outsl
lret
clc
cmc
or
std
or
or
inc
or
push
call
mov
inc
jmp
and
ljmp
dec
imul
ss
rclb
fucom
fcmovnb
rcl
imul
pop
daa
jle
cltd
push
jbe
dec
add
in
mov
int
je
bound
xchg
cld
leave
lcall
mov
mov
mov
add
sar
jmp
test
lcall
xchg
in
aas
repnz
adc
rcl
pushf
decb
inc
clc
adc
mov
add
pop
lods
popf
cmp
jg
lcall
lret
lock
popf
cmpsl
mov
inc
sub
xor
int
pusha
jcxz
push
test
pop
sub
int
push
sti
sbb
xor
jmp
xchg
es
adc
int
sub
jmp
decl
les
les
les
push
das
outsb
add
pop
jp
mov
lret
loope
inc
mulb
fildll
xchg
out
mov
icebp
xchg
push
data16
cmpsl
jne
push
dec
sbb
mov
ss
inc
xor
jmp
xchg
mov
test
jmp
jmp
push
inc
sbb
loop
jmp
pop
rol
sbb
leave
xchg
sub
fists
mov
ret
or
pop
dec
fwait
or
jg
jno
fwait
enter
xchg
sti
hlt
int
lock
mov
arpl
ds
fs
sarb
fnsave
lock
mov
inc
xchg
ds
jmp
mov
addr16
cmp
jbe
push
cld
or
inc
jbe
mov
aad
xchg
and
incl
out
fs
xor
aaa
push
test
add
dec
sub
call
in
cli
inc
lds
lock
ret
cmp
mov
jge
mov
xchg
mov
mov
shlb
fidivl
dec
cwtl
lds
cli
lea
fwait
adc
xor
xor
mov
loopne
jg
scas
lea
push
je
jp
xorl
jmp
fbstp
dec
aas
mov
lods
cmpsl
and
fmull
stos
std
int
dec
xchg
rcrl
mov
mov
ljmp
int3
and
cmpsb
pop
pop
ficoms
stc
pop
ljmp
cmpl
ljmp
cld
je
inc
dec
mov
mov
mov
cmp
cwtl
pop
cmpsb
roll
or
std
xchg
mov
pop
xor
push
mov
shrl
les
sahf
pop
call
hlt
cli
pushl
js
pop
pop
cmpsb
jecxz
inc
fmull
mov
arpl
out
xchg
sbb
and
lods
push
jbe
fistpl
mov
push
mov
sbb
stc
daa
imul
add
sbb
pushaw
cmp
popf
clc
xor
fldt
repz
aam
add
ja
popf
or
test
mov
mov
cmp
xlat
loop
cmp
loope
sub
int
outsl
and
lcall
ret
adc
and
std
push
jl
incl
mov
xchg
pop
aam
push
mov
jle
push
dec
xchg
rorb
decl
xor
or
mov
mov
testb
xor
in
xchg
pop
iret
sahf
mov
incl
xchg
mov
fisubl
sarb
dec
sbb
cs
rcl
cmpsb
push
push
lcall
mov
mov
mov
into
jne
imul
repnz
lret
jp
pushf
pop
loope
mov
pop
dec
jno
gs
push
mov
aad
lahf
stos
mov
out
mov
dec
add
das
push
xchg
fstpl
ja
xchg
sti
cwtl
rcrb
lcall
mov
rol
ds
ret
push
lock
fwait
outsl
mov
fsts
mov
pop
jmp
xchg
out
or
fsub
sub
inc
pop
pop
push
inc
sub
in
jae
mov
xchg
incl
ret
stos
push
jno
jb
jno
jno
ret
sub
clc
out
mov
xor
lcall
lds
pop
mov
mov
or
ret
hlt
inc
pop
pushf
or
incl
rclb
aaa
add
dec
jmp
testl
push
pop
adc
notl
sbbl
add
int3
add
inc
and
xchg
decl
and
in
jae
push
push
out
mov
or
hlt
xchg
pusha
gs
das
mov
mov
inc
into
mov
dec
adc
rcpps
jo
adc
arpl
rcrb
sbb
cld
add
pop
push
and
adc
mov
mov
hlt
dec
xchg
lds
add
dec
push
or
sar
jo
test
mov
divb
pop
lds
lret
mov
mov
mov
jp
cmp
fsubr
mov
inc
or
jg
mov
test
in
addl
pusha
outsl
out
fmull
std
sbb
jl
shll
and
pop
lock
push
and
lcall
insb
adc
xchg
or
pushf
ss
jns
rorb
ljmp
xchg
mov
pop
push
fnstcw
in
xchg
push
xor
incl
jle
cmp
fidivl
mov
fisttps
in
inc
call
lock
call
xchg
cmpsb
inc
mov
imul
shl
out
hlt
aam
sahf
test
jecxz
mov
rol
jb
cli
stos
or
push
xchg
push
icebp
mov
incl
lcall
mov
fs
shlb
mov
insl
push
xchg
icebp
lcall
pop
imul
sbb
ja
nop
mull
mov
pop
and
out
xchg
mov
pop
xor
jb
add
repnz
jmp
out
mov
pushl
jb
lods
test
xchg
daa
mov
sbb
jmp
das
loope
je
or
decl
push
mov
loop
dec
mov
xor
ficoml
ret
or
mov
fs
jo
cmc
cli
dec
sbb
cmp
xchg
mov
sbb
popf
xchg
jbe
js
pop
pop
clc
jne
pop
pop
or
js
and
jmp
dec
cmpsb
scas
mov
jmp
sub
gs
cmc
std
nop
mov
add
subb
mov
cmc
xchg
pop
clc
out
inc
fdivrs
mov
mov
jp
push
and
call
lahf
std
pop
mov
pop
call
lcall
lret
in
add
xor
mov
cld
enter
addr16
mov
aad
filds
call
jns
sbb
int
push
mov
sub
sahf
xor
push
dec
sahf
rcrb
movsb
or
add
imulb
cmc
jnp
rcr
hlt
cmp
lcall
and
jmp
jns
mov
push
cmp
ljmp
jns
fcmovne
cmp
call
or
shrl
mov
loopne
daa
pop
mov
adc
mov
jg
jno
jo
mov
icebp
pop
jne
pop
dec
jmp
sub
mov
decl
in
js
clc
xor
sub
mov
das
xchg
sub
call
sbb
push
scas
das
int
mov
leave
jne
movsl
fstpt
cmp
cld
insl
popa
cmpsb
icebp
pop
std
call
dec
pushf
add
adcb
cmp
test
and
testl
call
movsb
pop
xchg
repz
mov
xchg
decl
js
outsb
adc
shlb
xlat
loope
es
push
iret
ret
popf
ffree
jl
lret
mov
jmp
or
jmp
out
mov
xchg
lods
adc
dec
out
inc
mov
iret
bound
mov
xor
sahf
test
lret
aas
sub
xchg
ss
adc
jg
dec
rcrb
iret
ljmp
int
cmc
adc
icebp
sbb
dec
cmp
pop
rorl
enter
cbtw
cmpsb
lcall
aam
dec
loop
andl
jmp
xchg
mov
inc
xchg
lock
jmp
or
cmc
inc
sub
dec
decb
andl
arpl
mov
sub
pop
enter
inc
xor
push
pop
je
ljmp
xchg
cmp
dec
lahf
call
cltd
adc
add
jno
xchg
cs
cmp
das
pop
les
nop
cmp
decl
fisttpll
inc
rorl
jge
je
xlat
jb
push
sbb
sub
clc
mov
in
hlt
xchg
cltd
jo
in
lcall
pushl
pop
cld
xchg
inc
mov
loop
mov
clc
out
in
xor
cmp
ljmp
xchg
push
bound
fs
adc
xchg
adc
cli
daa
iret
imul
stos
ret
mov
lea
scas
adc
mov
insl
mov
sbb
idivl
xor
mov
dec
add
and
jg
jmp
sbb
adc
push
add
jmp
push
mov
and
lcall
fcos
popf
lcall
rcll
into
jg
sub
sbb
xchg
sbb
cwtl
mov
add
and
add
adc
pushl
sub
shlb
dec
lcall
sbb
ja
xchg
les
xor
bound
jl
sarl
outsb
enter
dec
clc
popa
mov
imul
jns
sbb
rorl
cltd
cld
mov
sahf
dec
movsl
mov
mov
fs
xor
jecxz
icebp
cmc
sub
lcall
dec
lahf
xlat
icebp
ret
and
xchg
jno
mov
push
xor
daa
pop
or
lea
sub
ljmp
jmp
inc
mov
adc
mov
mov
fs
setnp
mov
lcall
mov
mov
or
inc
cli
jo
fcomp
jb
cmp
xor
xor
mov
mov
imul
in
xor
dec
push
int
push
lods
pop
push
and
mov
mov
cmp
xor
xchg
loopne
mov
out
adc
push
mov
das
aam
aam
jle
mov
or
jl
lds
and
push
incl
mov
sbb
sub
je
cmp
cmp
mov
mov
dec
jg
repz
mov
bnd
push
ret
push
les
loop
inc
pop
ljmp
add
jns
xor
hlt
pop
int
sub
fdivrl
pop
or
pop
fdiv
lcall
lock
pop
mov
push
jge
aam
jg
push
mov
lea
aam
pop
jnp
inc
fnstenv
aaa
std
incl
jae
pop
in
xor
dec
stos
mov
mov
sbb
aam
mov
fs
and
testl
repz
ror
lret
incl
pop
xchg
pop
jnp
or
add
repnz
out
jne
int
dec
or
je
aaa
mov
lcall
int
imul
or
ljmp
clc
cmp
xor
in
ljmp
dec
xor
and
push
jne
jl
push
pop
stc
xchg
fnstenv
clc
pop
and
js
stos
pop
mov
aam
sbb
fisubrl
out
outsl
sahf
pop
popa
inc
repnz
add
ret
xor
fwait
push
xchg
pusha
mov
call
ret
es
fldt
xor
orl
sahf
jo
adc
lret
ret
xchg
dec
repnz
cmp
repz
iret
pop
js
bound
push
mov
mov
lcall
inc
enter
pop
inc
mov
mov
dec
push
mov
pop
and
cmp
in
test
stos
adc
jne
cltd
fcomip
pushl
sbb
pop
pop
nop
jns
fs
daa
out
jb
in
add
inc
inc
stos
cmc
jp
aad
cmp
es
push
mov
push
das
cs
lret
cmp
das
inc
fistpl
addl
pop
testb
sub
decl
pop
lea
dec
loop
push
sbb
movsb
mov
pop
cmc
sub
dec
sub
inc
js
xchg
jmp
dec
mov
jle
mov
lcall
and
je
aaa
fwait
adc
inc
jne
xchg
xchg
js
movsb
xchg
mov
frstor
es
mov
cmp
std
inc
cmp
scas
xchg
and
pop
cmp
fidivs
lcall
mov
mov
stos
push
cmpsb
mov
adc
mov
mov
xchg
test
hlt
inc
push
fidivrs
pusha
repz
jp
jo
test
fwait
push
js
rcr
mov
mov
lock
in
shlb
out
xchg
push
std
sbb
push
in
orb
push
sub
cmp
mov
dec
dec
xchg
ss
arpl
inc
ficomps
loop
mov
rcl
lret
adc
cmpsl
out
lock
movsl
into
xchg
pop
dec
adc
in
ret
push
xchg
add
inc
adc
testb
and
movsl
filds
mov
mov
mov
in
xchg
dec
jae
mov
push
mov
mov
push
daa
test
cmp
clc
repz
les
lea
mov
jo
add
sbb
cmp
sub
cmpsb
lds
ret
cmpl
pop
lods
lock
shl
into
adc
mov
into
sbb
pop
imulb
xchg
jae
and
fsubl
insl
inc
dec
mov
jmp
and
cmp
xor
in
ret
ds
mov
or
iret
pop
mov
iret
sahf
mov
aad
iretw
int3
int
pop
mov
test
imul
sbb
outsl
jns
incl
mov
dec
xor
jnp
or
insb
test
jbe
xchg
addr16
es
int
dec
lock
cld
push
and
mov
js
cltd
dec
mov
adc
cmp
decl
jle
inc
and
push
lock
pop
cmp
mov
int
loop
mov
cld
incl
out
imul
jns
std
cwtl
sbb
jecxz
mov
les
pop
sbbb
ficompl
mov
notl
dec
and
dec
or
scas
mov
mov
push
or
fistps
dec
pop
cmp
les
jmp
pushw
int3
sbb
ret
or
push
dec
and
xchg
jo
call
cld
pushl
enter
xchg
ret
lea
ret
std
stos
mov
call
jmp
jecxz
adc
push
ljmp
aaa
cld
addr16
inc
or
dec
enter
repnz
sbb
and
bound
sub
nop
jmp
mov
fsubrl
dec
or
into
pop
pushl
xlat
mov
sub
psrad
insb
push
jns
cld
lret
in
out
pop
mov
pop
mov
xor
jae
xor
and
push
imul
jmp
repz
xor
cmp
cltd
xchg
sub
movsb
cmp
inc
in
rclb
test
call
loope
orb
outsl
xchg
or
mov
lret
in
adc
sbbl
lret
test
lret
add
pmullw
out
incl
cmp
enter
loope
lret
xchg
and
xchg
push
imul
decl
int
hlt
lcall
pusha
push
pop
adc
das
pusha
cltd
cmp
inc
cmp
inc
sub
dec
add
fwait
je
stos
je
push
testb
pop
pop
push
js
add
es
data16
call
mov
ja
add
fcmovnbe
mov
lock
jno
jne
and
pop
dec
cmpsl
in
mov
lret
mov
jmp
insl
es
mov
mov
and
lret
add
clc
fiaddl
dec
and
push
push
das
xchg
pushf
in
or
ds
notb
call
movsb
xor
fnsave
mov
aam
dec
mov
cltd
xor
aaa
into
adc
inc
addb
jmp
and
std
cld
mov
std
out
adc
dec
add
pusha
push
fdivs
les
out
adc
rcrb
or
or
mov
pop
fs
adc
pop
icebp
ds
out
adcb
push
in
xchg
out
addb
lahf
fcmovnb
call
imull
aam
push
mov
dec
adc
mov
fbstp
ret
stos
cmpsl
popa
inc
call
sarb
rclb
lock
sahf
mov
in
decl
mov
mov
jne
adcb
add
push
fsubs
inc
cld
pushl
push
popf
sarl
inc
jne
imul
mov
lret
sar
sbb
call
add
imul
mov
sbb
jmp
ljmp
lds
jl
rolb
push
cmpsl
es
hlt
xor
sub
jmp
arpl
jns
in
aas
pop
movsb
pop
mov
push
xor
mov
jmp
cmp
fucomi
sub
or
loopne
mov
std
pushl
mov
pop
jb
adc
xchg
mov
iret
rcr
push
pop
test
pop
push
pushl
ss
inc
nop
and
ret
outsl
mov
out
ds
pop
ljmp
aad
jmp
jle
xchg
neg
leave
loop
stos
gs
mov
pop
xor
in
movsb
add
or
ljmp
inc
repz
sub
sub
testb
incl
sbbl
cltd
mov
xchg
clc
xchg
jg
loop
xchg
pop
sbb
cmpsl
mov
jg
or
adc
outsb
push
incl
out
mov
hlt
add
mov
fcom
mov
lods
scas
mov
ja
clc
loopne
mov
inc
rclb
cli
mov
mov
rorb
ljmp
xchg
cmc
in
sub
jl
fcoml
ja
xchg
enter
mov
sti
repnz
jge
shlb
popl
jg
call
jp
push
sub
lcall
mov
aaa
dec
push
jbe
repz
pop
jmp
shrl
sub
jae
mov
add
rorb
add
pop
std
stc
push
mov
test
addb
or
push
sub
mov
cld
imul
sub
stc
loopne
cmp
push
xor
dec
call
sub
cmpsl
insb
lods
pushl
gs
addr16
push
ficoms
ret
rcl
lods
mov
mov
fbstp
inc
mov
nop
es
lret
mov
aad
xchg
add
push
fisubrs
jmp
dec
repz
push
addr16
pop
push
insl
lahf
pushf
pop
pop
out
pop
pop
push
push
scas
in
shrl
xorl
les
cmp
bound
imul
dec
xchg
shlb
mov
incl
fldenv
fwait
sbb
jp
sbb
fbstp
xchg
cmp
adc
stos
pop
adc
incl
inc
mov
sbb
ss
mov
jmp
das
sub
icebp
add
cld
popf
out
es
lcall
or
push
dec
cmpsl
pop
outsb
cli
pop
fbstp
and
mov
inc
inc
in
movsl
jg
inc
or
out
cmpsl
or
in
movsl
lds
pushl
push
rolb
push
loop
cmpsb
sub
stc
stos
sbb
and
je
mov
xor
mov
jg
or
imul
sahf
cltd
sahf
fcos
mov
jp
mov
testb
repnz
jb
add
xchg
ss
pop
inc
test
decl
dec
add
repnz
out
jl
jge
fcoml
out
mov
dec
fld
cmp
lock
lcall
xchg
sub
adc
fsubrl
push
imul
les
loopne
ret
fbld
shrl
insl
js
repnz
jl
sbb
insb
ret
data16
jg
outsb
loop
aas
int
fnstsw
and
ljmp
fistpll
ret
out
mov
mov
icebp
addr16
dec
js
mov
ror
mov
cli
cmp
bound
lock
ljmp
inc
and
aad
or
adc
icebp
and
adc
fildll
lahf
ja
int3
pop
insl
daa
sbb
jne
imull
push
mov
incl
sbb
mov
push
mov
and
call
into
fwait
push
adc
push
inc
lcall
out
push
das
sar
cs
xor
dec
xor
lock
test
mov
test
pushl
andl
add
push
push
test
dec
add
mov
mov
outsb
fidivrs
call
mov
dec
or
jb
aam
sub
cmp
xchg
xchg
mov
cmp
std
sahf
jae
pushf
add
fcmovbe
aas
jg
lahf
xchg
iret
sti
add
stc
mov
dec
pop
add
lock
cli
das
pop
mov
les
xchg
xor
mov
lret
incb
cs
ljmp
sub
pushf
loope
and
mov
jno
cltd
pop
ljmp
fimuls
loopne
adc
mov
enter
cs
mov
cmp
adc
jle
jne
pop
scas
add
xchg
push
pop
pushl
in
mov
pop
pop
movsb
cmp
mov
outsl
push
cmp
test
mov
jmp
cmp
ret
vshufps
in
push
fsubs
sarb
sti
cltd
out
lea
fcmovnb
hlt
sti
mov
mov
enter
jno
enter
add
push
cmp
pop
clc
sub
lcall
js
clc
scas
test
add
incl
push
pop
and
das
jle
xor
mov
xor
fs
xchg
mov
dec
push
jge
mov
cmp
mov
and
inc
into
mov
sbbb
xchg
xor
adc
cmp
aas
ret
pop
insb
sub
pop
popf
push
push
incl
nop
and
push
sahf
mov
rclb
and
cltd
sti
pop
dec
call
dec
mov
sub
test
popf
xchg
cmpsl
enter
dec
xchg
lret
mov
data16
inc
jae
lcall
dec
dec
dec
sub
into
and
jno
xchg
fdivl
mov
je
mov
lock
call
mov
cmpsl
nop
fsubl
push
jb
jp
cmpsb
push
test
push
cmc
decl
xchg
xchg
mov
outsl
push
call
movsb
call
adc
inc
jecxz
ss
push
push
sub
push
movsb
adc
and
mov
decl
jne
mov
pop
mov
or
nop
mov
push
pushf
clc
aas
inc
dec
mov
jmp
mov
outsl
out
movsl
test
cmpl
dec
xchg
stos
insb
dec
in
cmp
lcall
scas
es
push
and
leave
add
or
mov
lods
mov
add
mov
pop
iret
es
aaa
adc
mov
dec
enter
sbb
popf
xchg
jg
subb
sahf
popf
dec
push
mov
pop
daa
lods
imul
lea
xchg
loopne
jo
lds
test
js
pop
push
and
clc
incl
test
mov
cs
dec
cmp
cld
jmp
pop
call
inc
jo
stos
and
dec
cmc
ficomps
mov
call
je
insb
sbb
mov
xor
xchg
clc
bound
xor
shrl
mov
decl
push
enter
nop
jecxz
dec
in
sbb
clc
jns
jb
pushl
cmp
fdiv
pop
popa
shrb
ret
push
jns
adc
or
adc
dec
mov
push
and
lock
incl
leave
sbbl
inc
push
xchg
xor
add
popl
dec
xchg
fbstp
loope
shrl
lea
std
cmp
sahf
cwtl
push
test
aad
adc
scas
push
cmp
mov
hlt
test
je
icebp
outsl
leave
jae
in
test
inc
sub
push
mov
pushl
std
sbb
sbb
inc
int
jp
orl
and
jmp
inc
adc
nop
sub
imul
mov
inc
pop
and
pushl
or
jecxz
cmp
sbb
dec
or
testb
jo
push
pop
js
fstenv
dec
or
mov
cmp
inc
mull
sub
lret
icebp
adc
fildll
jge
or
enter
insb
and
mov
pushl
dec
cmp
push
push
in
in
out
and
mov
sub
cmpsb
nop
fistl
ss
ret
cli
incl
mulb
push
push
inc
and
mov
mov
mov
and
add
insb
jecxz
jae
mov
clc
aaa
ja
sbb
mov
pop
cmc
ja
out
mov
cmp
xchg
mov
pop
dec
inc
adc
and
sbb
decl
aas
cld
jbe
fwait
dec
out
sbb
push
jge
jns
icebp
pop
cmpsl
jl
ss
xor
mov
ja
incl
jge
push
mov
aad
fisubrs
mov
sbb
lods
aam
jecxz
push
jne
dec
dec
repz
pushl
adc
jmp
inc
mov
inc
mov
shr
push
xchg
sub
decl
les
and
inc
cmpsb
or
out
cld
dec
frstor
dec
jmp
push
xchg
lret
cmp
test
xor
xchg
clc
cltd
mov
scas
fadd
fisttpll
jns
and
pushl
push
or
lcall
dec
insb
sub
adc
popf
mov
mov
jg
std
dec
jp
lahf
pop
xchg
and
insb
imul
leave
sub
test
incl
xlat
fistpl
and
hlt
mov
addr16
jecxz
outsl
lret
jb
roll
jmp
mov
adc
xlat
dec
dec
mov
rcll
scas
lods
cmp
xlat
iret
popf
xchg
xor
inc
testl
sub
inc
cmpl
xchg
or
ja
mov
fcomip
ss
jmp
loopne
sti
mov
hlt
sbb
seta
int3
ror
dec
fldt
add
ror
pop
push
dec
xchg
mov
pop
xchg
fmulp
add
pop
daa
dec
push
or
loope
cli
xchg
test
or
fsubrs
inc
pop
mov
mov
decl
jns
mov
xchg
cs
dec
loope
std
addl
lret
cmp
aaa
pop
ret
addr16
or
adc
inc
sub
pushl
jo
lods
push
mov
test
and
divl
test
cmc
cmc
pop
mov
decl
pop
dec
aas
mov
cmp
clc
in
mov
test
fcmovbe
jb
daa
inc
fnstenv
mov
mov
loope
pop
lret
add
jne
pop
jmp
jle
neg
mov
xchg
or
call
xchg
pop
imul
out
xchg
adc
push
mov
popl
and
mov
incl
adc
push
popa
out
pop
xchg
inc
inc
lahf
xchg
rcrl
xor
push
xor
dec
inc
push
mov
cmc
fcomip
inc
adc
hlt
enter
adc
aad
mov
lods
push
and
lcall
fnstenv
inc
sbb
ror
data16
test
fcmovne
insb
mov
push
dec
out
incb
call
xlat
shlb
lret
mov
xchg
test
adc
sbb
stc
inc
aas
push
mov
test
sbb
mov
in
pushl
sbb
push
xchg
arpl
and
inc
xchg
push
push
sbb
fxch
mov
enter
ljmp
pop
sbb
and
sbb
and
cmpsl
pop
mov
mov
scas
fdiv
cwtl
add
lods
dec
imul
mov
push
xchg
shll
mov
in
xchg
sbb
dec
fmull
stos
jmp
idiv
sbb
lea
lret
in
popf
cld
aam
inc
mov
xchg
xor
pushl
hlt
fiaddl
adc
std
jle
mov
xchg
mov
out
imul
stos
xor
ljmp
adc
fwait
pusha
and
mov
repz
push
loopne
ret
add
or
pop
inc
lods
jnp
adc
mov
mov
add
stos
add
lahf
mov
hlt
dec
or
mov
jl
sbb
push
imul
mov
inc
adc
mov
repnz
mov
dec
xchg
and
jecxz
jmp
dec
gs
pop
dec
xlat
daa
pop
mov
paddb
and
mov
bnd
push
out
stos
pop
ljmp
pop
out
lcall
push
pop
js
xchg
xchg
test
rep
lret
pop
mov
cmc
lea
xchg
or
popa
ds
movsb
xchg
arpl
icebp
mov
movsl
je
xlat
inc
js
jle
decl
mov
test
shl
xchg
out
add
out
xchg
mov
test
mov
dec
adc
outsb
mov
jbe
frstpm(287
ds
dec
adc
pop
sarl
jecxz
adc
xchg
rorl
decl
clc
dec
jae
out
sbb
mov
dec
or
mov
jmp
orl
int
es
mov
dec
mov
push
lcall
leave
test
xchg
pop
mov
rcrb
lahf
nop
fstl
jmp
xor
stos
aaa
cld
pop
repnz
decl
lock
sub
mov
js
inc
sti
sbb
jno
push
lcall
lock
icebp
cmp
add
popf
mov
mov
mov
ljmp
clc
mov
mov
sbbl
mov
movl
lahf
sti
add
in
pop
lret
lea
cli
stos
mov
sahf
int3
call
inc
test
pushf
cmp
mov
not
xchg
sahf
shlb
sarb
out
adc
imul
sub
push
pushf
jl
jg
inc
rclb
xchg
push
inc
jne
or
mov
lcall
mov
pop
xor
ljmp
jge
nop
clc
ficomps
loop
cmpb
mov
xchg
add
movsl
ljmp
lds
movsl
js
pop
lcall
pop
nop
xchg
fisubrs
mov
jg
inc
sahf
lods
xor
adc
loop
nop
add
push
add
jmp
pop
rol
inc
in
and
pop
roll
push
add
cltd
enter
adc
mov
cmp
mov
add
decl
and
ficoml
xchg
push
lea
cli
fwait
pop
inc
jo
aam
in
mov
cmc
jmp
mov
loop
mov
cmp
and
test
ficompl
ljmp
mov
jmp
push
mov
mov
sub
pop
inc
inc
cltd
lods
xchg
test
call
mov
xor
add
xorl
mul
dec
sub
cltd
cmpsb
ss
je
je
fwait
and
int3
jo
xchg
out
mov
andb
jb
mov
into
arpl
jmp
jmp
les
fcomip
lcall
sbb
or
add
into
aas
or
lods
jl
in
jbe
or
jmp
mov
leave
dec
mov
in
pop
lds
push
xor
das
movsl
call
insl
dec
xchg
cmp
fdivrs
cmp
adc
lods
add
nop
mov
jbe
dec
add
stc
mov
cli
lods
xchg
pop
icebp
pop
or
js
outsl
mov
fnstsw
cmc
iret
bound
js
lcall
jbe
and
faddl
std
inc
fmull
daa
pop
or
jmp
or
jg
jl
jecxz
in
icebp
call
lock
dec
pop
lahf
cltd
lds
push
int
sbb
adc
mov
push
mov
filds
scas
pop
subb
inc
dec
jp
jmp
pop
insb
fistps
adc
jg
adc
cmpsl
lea
add
inc
mov
cmp
jo
notb
shlb
scas
fbld
adc
ds
mov
jg
or
test
push
fisubrs
push
outsl
mov
dec
cmp
movsb
mov
and
add
jno
push
loope
mov
cmpb
call
xor
cmp
xor
mov
shl
lahf
jmp
gs
mov
fbstp
jnp
xchg
or
cmp
jmp
push
fldl
hlt
dec
and
cwtl
push
stos
push
or
cmp
in
imul
mov
je
std
pop
and
into
adc
pop
or
xor
scas
jbe
inc
aas
xchg
movsl
repnz
testl
das
adc
mov
bound
xchg
xchg
pop
xor
imul
sub
and
dec
or
filds
mov
xlat
jecxz
push
xchg
ljmp
push
mov
xchg
add
pop
dec
stos
xor
dec
mov
add
insl
or
incl
nop
outsl
sarb
aad
cs
xchg
sub
jg
cmp
out
mov
jmp
sub
add
xor
jg
repz
add
loope
je
bound
dec
xor
mov
xchg
movsb
repnz
jg
xchg
add
dec
sbbl
fidivrl
imul
jmp
scas
shll
ret
mov
lahf
in
adc
sub
call
jns
loope
cwtl
push
add
std
sti
repz
call
icebp
xor
lods
pop
cmc
fsubrp
adc
ljmp
fists
sub
scas
jne
in
add
pushl
xor
das
cmp
aaa
lahf
arpl
fistps
sbb
out
call
out
cli
incl
mov
inc
test
mov
adc
ja
call
andl
arpl
adc
xchg
push
mov
loope
rclb
sbb
aaa
jl
call
and
popa
lods
push
nop
ret
outsl
mov
loop
fmuls
mov
mov
call
add
fwait
dec
sti
add
mov
cs
mov
jg
push
fnstcw
mov
ljmp
cli
pop
pop
ret
imul
or
add
mov
incl
ret
and
stc
adc
data16
movsb
push
dec
mov
dec
std
sub
lret
incl
divl
dec
lret
lahf
mov
repnz
gs
mov
popa
repz
mov
rcl
out
jb
lock
xchg
mov
add
int3
adc
xchg
sti
mov
ret
pusha
xchg
aas
adc
cld
lcall
xor
xchg
mov
sub
insb
pushf
and
xchg
movsb
mov
aaa
std
mov
movsb
iret
pop
lcall
mov
or
bsr
push
cli
pushl
lret
xchg
mov
test
mov
cmp
mov
xor
incl
adc
in
pop
lret
test
pop
imul
pop
xor
sbb
aaa
ret
ret
xchg
xchg
fildll
loope
xor
push
mov
js
add
adc
add
test
cmp
jg
push
pop
in
hlt
jb
lahf
sbb
or
xor
sbb
jg
lcall
outsl
ret
xchg
dec
out
aad
pop
push
cltd
push
mov
pop
aam
and
mov
call
loope
inc
decb
xchg
push
mov
shrb
data16
push
push
mov
call
dec
xchg
insb
xor
xchg
mov
sbb
cld
mov
mov
add
and
mov
cli
cli
inc
adc
dec
inc
decl
sub
mov
jecxz
test
or
adc
decl
add
es
lret
repz
frstor
mov
xor
ds
stos
outsl
clc
mov
pop
jae
xor
data16
mov
inc
jecxz
dec
imul
cltd
ret
inc
das
xchg
xor
dec
iret
outsl
lret
push
out
mov
jle
xchg
clc
dec
jle
sbb
cmp
cmp
lahf
arpl
and
xchg
xchg
push
ljmp
in
mov
shl
cmp
mov
xor
in
cwtl
mov
push
jno
rorl
lahf
sbb
push
push
mov
push
jo
scas
jp
test
xchg
lret
sbb
adc
push
or
jo
or
repnz
sub
pushl
jge
ret
jl
add
popa
mov
insl
out
inc
lock
int
adc
adc
mov
jp
daa
mov
outsl
inc
in
or
adc
or
cmp
push
ljmp
shrl
add
cs
cld
pushf
movb
jmp
cltd
mov
popf
push
mov
sbb
scas
adc
xchg
adc
scas
mov
cmpsl
adc
ljmp
jb
ss
cmpsl
insl
ljmp
js
bound
call
xchg
push
push
loopne
mov
test
pop
int
test
shlb
jmp
cwtl
xor
cmp
andb
lahf
cbtw
lods
lret
mov
imul
incl
roll
mov
mov
mov
fildll
and
adc
dec
push
shlb
outsb
leave
jge
flds
mov
rcrl
push
test
aaa
mov
xor
mov
pop
in
stos
and
inc
ja
xor
inc
jmp
sti
aam
rcl
and
push
scas
mov
cmp
pushl
insl
addl
lds
repz
ss
in
out
push
jge
stc
or
std
cmp
and
inc
xlat
fst
jp
rcl
test
mov
jmp
adc
popf
xchg
shrl
gs
in
daa
call
adc
decl
hlt
hlt
jbe
je
push
jbe
test
testl
mov
xchg
adcb
add
or
adcl
push
push
lret
in
test
rcrb
test
rclb
dec
dec
je
ss
decl
fists
push
lods
pop
sub
daa
fwait
mov
fildl
dec
fisttpll
stos
push
jmp
call
sarb
mov
mov
mov
icebp
hlt
mov
xchg
jbe
ljmp
inc
jne
movsb
pushf
push
mov
out
stc
mov
adc
out
xchg
cmp
push
xlat
stos
and
or
mov
or
xchg
fisubrs
lahf
add
incl
jnp
icebp
ja
jg
imul
imul
fldcw
and
mov
or
jmp
jbe
mov
jnp
pop
jae
pusha
loop
dec
mov
hlt
or
inc
test
lcall
push
add
leave
xchg
ficoml
hlt
pop
sahf
aaa
out
aam
scas
rcl
incl
leave
sub
sub
dec
mov
test
and
push
decl
sub
inc
insl
stos
dec
test
dec
test
pop
fcomp
mov
hlt
mov
add
cmp
push
rcr
clc
call
dec
das
movb
lret
ss
lret
rol
push
divb
add
jmp
inc
inc
xchg
cli
cmp
push
ljmp
and
sti
das
cld
ja
push
addr16
jmp
insb
pop
inc
dec
lcall
jmp
cmp
lods
jle
cs
out
fdivrp
mov
enter
pushl
mov
gs
sbb
movsl
push
stc
sub
dec
mov
out
outsb
inc
inc
mov
lcall
cltd
mov
int
imul
sbb
dec
jle
push
add
imul
ret
stc
incl
cmp
andl
xor
repz
adc
rcrl
inc
push
fwait
incl
sti
in
push
inc
ret
pop
cmp
push
data16
inc
sub
cmc
xor
pop
pop
or
cmp
ret
mov
rolb
jne
cmp
in
imul
pop
mov
loop
daa
pop
scas
xor
push
mov
stos
lock
jg
pop
adc
xchg
into
mov
xor
cmp
jne
xor
call
jg
inc
jle
push
stos
sub
cmc
imul
sti
iret
addr16
hlt
mov
incl
push
pop
sbb
cmp
ret
or
xchg
aad
mov
insb
or
fdivrl
sbb
jbe
movsb
lods
test
imul
cmp
mov
jne
enterw
push
xchg
inc
iret
cmovle
ljmp
jo
shrl
mov
nop
mov
lahf
test
jne
cmp
lcall
pushl
int3
pop
call
aaa
lods
test
inc
pop
or
fstpt
xor
sbb
jge
insb
lret
icebp
out
sub
sbb
in
div
out
mov
hlt
xchg
cltd
cmc
popf
xlat
inc
or
outsl
sub
jns
std
xor
push
aad
in
shrl
mov
pop
clc
das
lods
xchg
scas
mov
call
mov
jg
cmp
sub
cmc
push
outsl
mov
xchg
popf
jge
xchg
hlt
int
shl
sbb
call
xchg
mov
mov
jno
fldt
push
jbe
push
jno
push
add
xor
cmp
data16
push
mov
mov
xchg
xchg
mov
jno
mov
dec
cmpsb
add
gs
shll
shrl
call
sbb
lock
dec
push
xor
test
ficomps
pop
pop
cmp
arpl
ds
jmp
outsl
aas
adc
push
les
leave
lret
sbb
xchg
jl
pop
push
iret
fwait
mov
pushl
mull
mov
dec
hlt
fnstenv
adc
ljmp
jnp
test
mov
or
movsl
dec
xlat
rclb
or
mov
hlt
idivb
js
sahf
aad
mov
mov
adcb
cltd
pop
lea
andb
sbb
insb
mov
insl
xchg
ss
fdivp
bound
decl
scas
sub
mov
int3
push
push
mov
xchg
roll
or
cmp
insb
pop
mov
lret
add
movsb
jns
dec
or
decl
mov
loop
lret
mov
incb
je
out
mov
test
incl
cld
scas
jo
lea
cmp
sub
rorb
out
adc
jbe
push
mov
js
fsubs
dec
pusha
dec
ljmp
clc
in
sbb
scas
pop
addr16
aas
xchg
sub
xchg
push
loop
jne
add
outsb
jmp
out
not
pop
jmp
fwait
adc
jmp
dec
push
push
ret
sub
jp
cmp
mov
mov
or
cmp
sahf
xchg
cld
in
jg
cld
and
lds
push
lret
outsl
mov
inc
or
decl
insl
mov
fwait
sub
fcomip
bound
loopne
mov
ficompl
repnz
mov
ret
cmp
fidivrl
xchg
aaa
add
jmp
or
mov
or
sbb
pop
cli
mov
movsb
xor
and
jl
jo
shlb
scas
fwait
scas
sahf
into
test
or
jns
cmc
fisttps
push
cmp
mov
incl
das
inc
pop
or
test
ret
cs
lods
outsl
mov
test
push
decl
or
popa
push
and
aas
xor
mov
in
fs
adc
ljmp
cmc
mov
arpl
insl
jb
jnp
loopne
std
jg
push
push
outsb
inc
nop
ja
lret
pop
jle
sub
mov
cmp
aad
dec
aaa
arpl
sahf
call
js
sar
pushl
jecxz
jp
xor
mov
adc
jnp
push
loop
or
clc
fidivs
ljmp
ret
and
negb
out
sub
test
sti
ljmp
pop
cmp
dec
bound
pop
add
movsb
xchg
add
or
sub
lods
les
push
push
add
mov
fcoms
daa
hlt
jb
dec
lods
push
push
mov
cmc
sub
iret
popa
decl
fcompl
bound
shrb
jmp
or
addl
ret
sbb
dec
cmp
stos
pop
and
cmp
inc
push
out
in
push
xchg
xchg
and
in
pop
test
mov
lock
or
lods
pop
xor
das
xchg
incb
adc
iret
mov
fiaddl
xchg
aas
push
fs
cs
iret
les
cltd
push
sbb
dec
xorb
lods
sub
fsubs
or
sbb
jb
insb
rcrl
imul
jmp
cs
xchg
in
popf
dec
cmc
cmp
call
mov
mov
clc
fisttps
or
hlt
mov
jmp
pushl
and
jp
mov
aad
push
inc
dec
iret
jo
lcall
inc
ret
daa
adc
push
stos
jo
scas
mov
std
jge
or
test
mov
xor
pop
mov
push
cli
sub
xchg
addr16
add
cmp
jmp
test
je
cs
or
es
sub
imul
cs
xor
pop
ja
lret
das
lahf
push
cmp
inc
add
jg
imul
jnp
mov
or
mov
cmp
add
add
loopne
jmp
incl
call
sub
int3
aam
je
push
loopne
sbbb
mov
mov
cmp
or
jne
and
mov
pop
enter
fisubrl
out
mov
pop
int3
in
icebp
test
push
xchg
mov
loop
cld
scas
or
test
or
xor
lods
add
add
jecxz
cli
push
mov
ljmp
push
or
testl
xchg
push
xchg
lock
ret
pushl
leave
ret
jle
cwtl
js
addr16
push
in
jp
xchg
lcall
dec
xor
or
push
xor
lods
mov
daa
repz
jmp
call
popf
mov
ja
push
mov
and
xor
or
inc
fisttps
insb
mov
sbb
mov
ficoms
cmp
xchg
ds
int3
pushf
popa
mov
xchg
decl
dec
or
rorl
adc
mov
xchg
pushf
mov
shl
jg
test
es
mov
cmp
dec
xchg
inc
mov
sti
jnp
sahf
jne
idivb
or
mov
push
fdivl
ds
xchg
int
cs
int
loope
pop
lods
xor
and
pop
test
xchg
cmp
mov
push
shrl
add
inc
frstor
shlb
adc
int3
in
cmpsb
jno
ljmp
add
or
or
mov
mov
sbb
icebp
cmp
mov
xor
jg
add
push
cmp
aam
jmp
stc
sbb
fsubp
or
in
sbb
repnz
inc
nop
out
and
ljmp
jmp
sub
push
lret
cmp
scas
out
mov
cmp
sub
mov
dec
push
icebp
js
xor
es
fists
pop
push
push
inc
jge
push
dec
dec
mov
jl
mov
mov
inc
dec
cmp
cmp
or
lahf
mov
imul
decl
into
add
popa
and
adc
push
stos
int3
out
movsl
sar
and
pop
adcb
movsl
decl
roll
mov
cmp
out
aaa
jle
ret
and
mov
icebp
or
decl
xchg
hlt
sub
pop
push
iret
iret
pop
sbb
decl
pusha
mov
in
je
xchg
cmp
test
pop
inc
mov
add
cld
jg
inc
clc
sbb
xchg
xchg
mov
mov
ljmp
fnstenv
lods
sbb
stos
cltd
outsl
arpl
ficoml
sub
repz
fistl
xchg
out
pop
pop
and
mov
cmp
jb
popa
test
mov
cwtl
arpl
scas
push
clc
sbbb
xchg
lea
dec
jge
or
xor
clc
incl
scas
jg
and
push
push
mov
mov
adc
pop
inc
clc
out
jmp
std
mov
mov
mov
sbb
sahf
stc
adc
decl
lods
call
push
push
outsb
loop
int3
push
mov
or
sbb
loope
notb
fcomip
lahf
jp
sti
push
fidivrs
jnp
cmp
lods
sub
cltd
loopne
insb
jmp
clc
cmp
pop
add
int3
jg
sbb
push
cwtl
sub
dec
sti
pop
out
fdiv
popa
xor
imul
icebp
gs
xchg
push
mov
rorl
xlat
daa
mov
stos
ljmp
imul
rol
subl
inc
add
aas
je
jno
or
fbstp
scas
dec
sbb
outsb
stc
mov
arpl
add
shlb
xchg
xor
movsb
insl
repnz
gs
loopne
pop
and
jge
or
and
inc
xchg
cmp
daa
or
xor
lcall
fstl
jo
sti
test
push
shlb
push
inc
mov
scas
sti
xchg
xchg
leave
jmp
orb
leave
jmp
sub
bound
iret
mov
sbb
xchg
cmp
lock
xor
lahf
pushf
leave
scas
pop
cltd
xor
dec
inc
test
shr
fistps
sub
lret
cmp
jg
push
dec
mov
lds
je
iret
mov
or
xchg
incl
cwtl
addr16
sbb
adc
pop
lcall
mov
mov
lcall
jge
fsubrs
and
pop
icebp
jnp
add
in
sbb
inc
add
clc
or
push
dec
cld
add
adc
mov
pop
adc
cmpsb
in
mov
jmp
daa
push
pop
pop
jno
incl
jle
lcall
ret
xor
adc
xor
data16
or
or
jnp
pop
loop
bound
mov
addr16
jge
fdivl
jp
cld
adc
adc
mov
cmp
decl
xor
sbb
or
cmp
test
sbb
or
push
sbb
jl
mov
cld
data16
dec
lahf
popa
add
adc
jmp
push
sub
mov
push
cli
sahf
push
popa
jg
mov
jg
fcmovu
dec
mov
xchg
repz
ljmp
outsb
jle
jge
cmc
sahf
ljmp
out
sub
jg
dec
sub
ss
add
push
repnz
insb
adc
adc
lcall
movb
out
mov
mov
mov
adc
sub
scas
fwait
imul
cmc
jo
data16
xor
lods
lods
cmp
in
mov
lods
movsl
xchg
sub
pop
sub
dec
lods
xor
movsb
push
xchg
pop
push
xor
mov
fcmovnbe
outsb
dec
in
std
push
inc
and
mov
incl
fidivl
std
dec
lock
shll
jns
ficomps
and
mov
out
jmp
filds
mov
jns
cli
mov
dec
es
into
outsb
push
lds
shlb
jl
xchg
lahf
inc
sbb
movsb
or
pushl
cmpsl
mov
push
lock
dec
push
addl
call
stc
repz
repnz
mov
jp
testl
arpl
sti
call
push
add
ljmp
push
sbb
and
mov
push
lds
and
decl
and
ss
popf
mov
cmp
mov
lahf
lock
decl
mov
inc
xchg
jge
and
adc
add
clc
hlt
loope
dec
lret
inc
std
repz
js
pop
mov
adcb
push
mov
fstps
pop
mov
test
xor
dec
jne
sub
add
out
orl
xor
push
or
and
repnz
lcall
mov
mov
or
and
out
inc
sbb
pop
inc
shrl
lds
xchg
mov
jmp
ljmp
adc
jne
lods
dec
std
sbb
aaa
movsl
mov
mov
lcall
jecxz
insb
mov
sti
jecxz
dec
mov
scas
dec
xor
enter
mov
or
jae
pop
dec
in
in
adc
jge
or
mov
outsb
fnstsw
jmp
ret
cmp
test
push
int
xlat
test
xor
mov
clc
ja
jbe
fchs
xchg
fstps
cmp
rolb
cmpsl
pop
mov
mov
mov
std
adc
push
cmc
cwtl
mov
mov
loope
jnp
mov
sbb
loop
flds
add
sahf
nop
ljmp
or
mov
sbb
push
add
jmp
cld
cmp
cld
sbb
push
dec
ficomps
ja
bound
fbstp
out
call
mov
inc
andl
mov
jo
ljmp
sbb
cli
mov
popl
mov
jo
shll
push
add
or
decl
sub
into
test
mov
rcl
cld
add
ret
mov
adc
out
mov
and
test
pop
scas
aas
push
adc
push
cmp
mov
orb
fwait
jge
inc
cmp
push
and
adc
pop
call
sti
jae
inc
in
shlb
test
inc
or
push
mov
pop
and
jbe
pop
mov
pop
scas
pusha
int
iret
aad
and
scas
mov
cmpsl
aam
and
cmp
scas
lcall
test
fldt
imul
sbbw
mov
jmp
cmc
xchg
or
sbb
xchg
jge
mov
sbb
test
loope
lcall
add
mov
pop
rol
adc
cld
push
mov
sub
fcomip
cmp
int3
sub
into
mov
fsubrp
cmp
pushl
cmpsl
mov
or
cmp
scas
test
push
dec
push
dec
cmp
ret
cwtl
data16
daa
ficoml
das
sar
dec
sbb
push
fwait
cmp
les
mov
xchg
xor
jmp
fiaddl
out
data16
push
ret
pop
xchg
and
jb
pop
lock
fwait
mov
call
xchg
loop
sbb
ss
inc
out
cmpsl
xchg
mov
mov
ljmp
inc
dec
fisubrs
xchg
pop
mov
pop
inc
mov
lcall
pop
in
xchg
push
pop
cld
or
jno
clc
outsl
sub
out
mov
cmp
lret
out
cli
call
mov
bound
dec
das
jbe
xchg
mov
jg
mov
ljmp
data16
push
popf
push
cmpsb
out
and
fcomip
jne
jge
stos
inc
rcrb
jl
pusha
pushl
dec
dec
pop
inc
out
ret
mov
scas
sub
pusha
inc
pop
cmpsb
jecxz
in
incl
pop
cwtl
inc
pop
pop
pop
fbstp
mov
jecxz
pop
ret
mov
xchg
cli
fcmovu
or
mov
cmp
dec
push
cli
decl
std
enter
fidivrs
jmp
ja
inc
cmp
rcr
xchg
mov
shlb
fwait
sbb
dec
btc
jmp
test
and
lahf
les
fmuls
push
mov
fdivrs
mov
dec
dec
jmp
mov
test
pop
outsl
cmp
dec
and
data16
popa
and
or
push
mov
xor
inc
adc
or
pop
ds
incl
stc
sub
mov
sub
or
mov
dec
inc
loopne
push
cld
mov
cmpsb
ljmp
cmp
push
lret
mov
push
stc
inc
ret
jmp
pop
sub
ljmp
rcrb
lret
hlt
sbb
jp
lods
or
bound
sub
adc
test
sbb
lds
ljmp
pop
test
push
jg
or
add
stc
loop
push
test
mov
jg
je
jmp
lret
jg
jb
cmp
push
popa
dec
add
mov
xor
mov
loope
mov
jle
int
cwtl
out
mov
and
pop
pop
cmp
lcall
fmull
sarb
mov
inc
hlt
loop
imul
lahf
addr16
iret
jg
sbb
pop
cmp
hlt
iret
imul
cltd
jb
es
incl
mov
insb
xor
bound
rorl
fdivp
push
filds
cmp
hlt
lcall
das
outsl
pop
les
in
cmp
and
adc
pop
jae
and
jns
ja
mov
inc
lds
jo
sub
pop
dec
mov
jmp
xchg
dec
dec
subb
sub
nop
add
xlat
push
fstl
loopne
mov
arpl
aam
ret
test
mov
jle
jnp
mov
sbb
js
f2xm1
xchg
test
lods
rcrl
push
cmpsl
test
ljmp
mov
scas
mov
push
repnz
in
lods
divb
sub
adc
pop
mov
adc
jbe
test
stos
push
dec
icebp
mov
jne
dec
sub
add
dec
outsb
ret
push
sub
pushl
dec
in
outsl
loopne
repnz
mov
lcall
cld
and
pop
mov
xor
xchg
test
inc
sub
ja
mov
ret
sub
filds
lods
pop
or
mov
jae
push
jle
stos
pop
ds
sub
int
call
ret
rolb
cmp
in
outsb
fsubp
adc
lds
je
enter
mov
cmp
sub
pop
cli
push
xchg
pop
fucom
fstl
lcall
imul
fcomip
dec
dec
ffreep
push
xchg
ljmp
mov
insb
andb
fisubrl
dec
cmp
call
test
mov
inc
and
lcall
jne
xor
xchg
mov
aas
push
fildll
mov
cli
or
inc
sahf
call
jo
lret
fbld
shrl
popa
imul
dec
mov
jle
and
call
insl
leave
adc
iret
adc
xchg
jl
and
mov
pop
jmp
lret
mov
cltd
inc
mov
jnp
loope
dec
push
or
outsl
mov
mov
lcall
adc
sbb
je
mov
fbld
push
fs
out
pop
sbb
adc
in
sahf
aaa
std
ljmp
xor
push
push
mov
xchg
clc
add
adc
in
aad
aam
dec
xor
inc
inc
movsl
or
jns
jge
mov
stos
cmp
call
cs
pop
out
push
mov
testb
cmp
fcomip
fstp
test
ja
xchg
cli
inc
in
cmpsb
iret
hlt
dec
pushf
mov
pushf
mov
call
jmp
inc
jecxz
push
out
rcll
repnz
mov
loop
leave
sub
clc
mov
loop
cmp
xchg
notl
cmp
fistpll
and
test
lret
ljmp
scas
push
jmp
lods
cmpsb
push
cmp
push
mov
bound
insl
cmp
and
test
inc
roll
repnz
shrb
or
jmp
jmp
jo
mov
cld
sbbb
sub
imul
pop
scas
xor
incl
mov
adc
mov
mov
outsb
stc
xchg
stc
js
adc
fsubrs
shl
es
incl
movsb
dec
es
xlat
dec
sbb
js
popf
icebp
xchg
push
xchg
cmp
repz
cmpsl
mov
jge
or
push
test
jmp
cli
outsb
xchg
fistpll
cmpsb
ds
mov
in
clc
mov
or
lcall
jns
test
dec
sbb
lock
xor
scas
mov
xchg
mov
mov
jne
fdivr
pushl
pop
in
pop
ficompl
loop
sub
clc
mov
roll
out
les
push
sahf
jp
lcall
mov
mul
aad
mov
adc
pop
fxch
stc
cmpsl
ljmp
dec
pop
xorb
cld
fdivs
or
sub
jns
ficompl
add
mov
loope
jns
je
repz
cwtl
test
insb
or
out
loope
fsts
or
pushl
jno
inc
or
cmp
and
xchg
mov
dec
xchg
lods
sub
pop
add
call
pop
jp
sbb
and
outsl
adc
jmp
pmuludq
leave
fistps
or
or
incl
dec
cmp
sti
pop
setge
pop
ret
mov
nop
in
popf
aam
xchg
lret
push
push
mov
mov
cmp
push
adc
inc
push
mov
jg
push
cmp
cmp
ss
outsb
call
int
repnz
test
mov
mov
add
mov
fwait
sub
mov
and
leave
insl
jbe
pop
lcall
fs
js
lret
pop
jmp
pop
int3
inc
repnz
leave
or
xor
mov
cmp
decl
nop
lds
hlt
andb
fisubrs
dec
add
add
ljmp
fwait
ljmp
or
clc
inc
jecxz,pt
negb
lods
imul
push
popf
mov
mov
das
pop
inc
xor
dec
xchg
sub
jmp
test
decl
shll
lret
pop
repnz
loopne
jge
out
bound
pop
repz
ljmp
jb
jno
sub
adc
lods
cmpsb
jecxz
mov
pushl
push
shll
sar
sbb
out
scas
das
dec
lahf
fwait
ret
shr
push
inc
jecxz
sbbb
stos
in
dec
lock
pop
adc
cmp
rcl
out
into
push
leave
add
jg
jbe
pop
cmpsl
xor
pop
xchg
sub
inc
mov
jae
ret
dec
int3
decb
cs
jmp
pop
adc
addr16
int3
cmpsb
or
rorb
incl
sub
jae
or
inc
ret
mov
fs
scas
mov
and
aas
cli
xchg
test
pushl
daa
pop
cmp
sbb
insb
pop
jae
pusha
fwait
lret
mov
add
sbb
negl
push
and
cmp
xchg
push
daa
stos
out
repz
jae
test
add
cmpsl
fidivrs
dec
lret
test
scas
ret
pop
sub
sarl
stc
sub
fidivs
cld
pop
push
loop
push
hlt
adc
and
outsl
cmp
shll
mov
jno
mov
mov
jl
rcrb
jne
cmpl
mov
lret
movsl
push
push
fbstp
add
fwait
lcall
push
or
jecxz
xor
or
enter
jg
lds
ja
data16
add
js
sbb
and
xchg
inc
cmp
adc
inc
xchg
ja
cli
cmp
cwtl
xor
inc
inc
sbbb
ficoml
mov
int
push
jno
ja
xor
popa
in
mov
cmp
loope
push
pop
mov
mov
and
add
jmp
pop
inc
fbstp
or
lcall
stos
jnp
adc
push
xchg
out
mov
inc
in
mov
inc
mov
shll
cmc
jecxz
pop
rcrb
fcompl
sbb
xchg
shlb
pop
dec
sub
fbld
pop
inc
and
or
and
in
mov
data16
jnp
jg
add
xchg
lret
inc
mov
pushl
movsb
and
movsl
mov
push
mov
push
fstps
mov
call
decl
jo
sarb
sub
jle
fmul
outsb
sub
in
fnstenv
adcb
aas
mov
fistpl
pop
fs
inc
test
mov
call
sbb
inc
push
xchg
dec
inc
shll
xchg
loopne
mov
mov
mov
fs
push
pushf
scas
jle
push
clc
sub
pusha
ja
xchg
sti
and
pop
xchg
bnd
cli
decl
data16
or
mov
fsubl
and
cmp
push
test
into
adc
push
sub
inc
test
sub
xor
push
dec
addr16
imul
out
sbb
sbb
xor
incl
jb
push
adc
lret
pop
pop
in
fidivs
cmc
push
mov
inc
sbb
mov
sub
dec
std
xchg
ljmp
mov
into
daa
sub
cld
decl
adc
adc
mov
icebp
test
gs
adc
insb
pop
mov
jg
and
adc
cmp
pop
push
arpl
cli
jns
mov
enter
in
mov
in
ljmp
test
cmp
lret
pop
adcb
imulb
lock
mov
lock
scas
imul
or
dec
dec
jb
push
push
push
xchg
dec
jg
jnp
insl
jl
dec
pop
movsl
loopne
outsl
clc
adc
into
cmp
or
pop
loop
dec
cmp
decl
lods
inc
fsubr
cltd
les
adc
push
jmp
adc
add
pop
inc
test
mov
sahf
push
decl
stc
cmpsb
nop
cwtl
jb
wbinvd
outsb
cmpsb
icebp
cld
jg
andl
dec
cmp
pop
clc
inc
dec
incl
pop
loop
stc
push
aad
pusha
xchg
push
add
sbb
pop
or
cmp
stc
sahf
push
lahf
aaa
pop
adc
dec
add
arpl
fnsave
add
aam
loope
inc
test
xchg
fsubs
or
imul
and
inc
add
fbld
ljmp
xor
and
mov
push
adc
out
dec
xchg
scas
std
mov
insb
loopne
or
outsl
sti
jae
add
repnz
fcomip
and
insb
fstpl
sub
jle
xchg
dec
popa
test
jae
xchg
dec
lcall
insb
scas
int3
ret
movsb
pop
stc
jb
je
mov
mov
in
cmpsl
push
mov
mov
bound
push
movsb
cli
pop
les
ljmp
insb
idivb
cld
xchg
sbbb
test
cs
jmp
out
in
incl
cmp
cmp
shrl
imul
pusha
out
push
mov
and
iret
mov
loop
xchg
loopne
sti
loope
cs
mov
aaa
rolb
sub
test
inc
jle
loope
xor
add
cmc
repz
mov
decl
push
mov
stos
cmp
scas
out
stos
loope
stos
fcmovne
aad
and
mov
push
in
repnz
push
dec
imul
add
das
clc
jg
pop
mov
mov
mov
int3
add
xchg
call
cld
mov
add
sbb
xchg
pop
jl
out
popa
fidivrl
mov
fsubp
pusha
push
xor
adc
decb
xchg
fmull
cmpsb
out
loope
jmp
cmpl
popa
rorb
sarb
loopne
adc
sarl
lods
call
decl
es
pop
rcrb
mov
xchg
scas
cli
fmull
or
call
nop
ljmp
mov
pop
imul
clc
inc
sar
or
sbb
daa
ss
cmc
stos
popa
or
mov
sar
jbe
pusha
loop
mov
jl
faddl
leave
loop
pushl
mov
mov
push
dec
lock
arpl
and
cmp
call
sbb
in
imul
cmp
loopne
lock
push
mov
outsl
and
mov
mov
or
pop
loopne
adc
cld
out
mov
cmp
mov
mov
incl
mov
outsl
out
cs
jle
cltd
call
out
adc
es
push
xor
aaa
or
test
lods
test
mov
cmp
lcall
loop
out
arpl
mov
pop
mov
jmp
jl
xchg
jg
add
daa
loop
pushl
or
inc
sbb
pop
flds
push
mov
sar
jnp
fwait
push
lcall
dec
test
jnp
and
push
sbb
adc
loopne
stos
mov
mov
mov
inc
xor
lea
sahf
mov
cmp
or
lock
aam
cmp
sbb
mov
jecxz
dec
mov
repz
push
jecxz
call
xchg
das
sub
sub
pop
sbb
loope
mov
in
cmp
mov
push
xchg
lret
pop
mov
test
mov
lcall
mov
cs
ret
xchg
adc
add
and
sub
mov
incl
stos
lret
loope
dec
lcall
jge
or
aam
jne
pop
pushl
rorb
popf
xchg
adc
sub
mov
lods
clc
sub
or
xchg
mov
lcall
cmc
inc
fcoms
roll
dec
and
jg
out
cmp
fmuls
jnp
cmpsb
jg
inc
jb
xor
cs
inc
rcl
dec
sbbb
sub
ljmp
push
and
sbb
xchg
shr
out
sbb
incl
ret
fimuls
cmp
cld
repnz
or
clc
repnz
in
pop
cs
jns
mov
xchg
mov
pop
xchg
xchg
mov
xlat
sar
jg
mov
sub
aaa
in
sub
mov
cmpsb
push
cmp
cmp
out
adc
mov
mov
aad
gs
jmp
hlt
cmp
fidivs
dec
pop
pop
loop
sbb
dec
mov
mov
iret
ret
mov
inc
push
repnz
or
std
cmp
pop
xchg
pop
lcall
mov
leave
xor
pop
adc
in
mov
mov
into
pop
js
imul
cwtl
cmpl
repz
mov
dec
lea
in
inc
dec
pop
in
call
mov
ljmp
pop
push
stos
repz
pushf
dec
fwait
enter
adc
inc
scas
xchg
rcll
inc
cli
xor
dec
cmpsb
xor
sub
dec
cmpsl
je
cli
inc
jl
mov
jmp
out
cld
xchg
loope
pop
jle
sub
or
push
iret
inc
in
test
int3
testb
ja
loop
fld
lcall
sahf
test
adc
mov
les
and
lods
lretw
stos
add
fwait
out
sub
cs
rorl
test
cld
incl
movsl
adc
jp
dec
addl
loop
andb
dec
icebp
ljmp
mov
jmp
dec
hlt
dec
mov
jmp
ret
and
out
pushf
xchg
mov
idiv
mov
xchg
sbb
jmp
or
sahf
mov
xlat
adc
jmp
filds
xorl
push
cmp
push
push
outsb
outsb
ror
or
adc
xchg
sbb
inc
pop
jae
adc
xchg
add
cmp
pushl
lcall
cmpsl
or
fadds
inc
inc
adc
je
es
dec
in
fbstp
sbb
mov
jo
ss
sbb
inc
adc
stos
pushl
iret
loop
ja
push
dec
lock
jb
jmp
daa
add
jo
fsincos
adc
xchg
cmc
dec
mov
cmp
lret
movsl
or
mov
and
xchg
xchg
out
and
bnd
mov
ljmp
jg
repz
add
imul
xor
mov
and
sti
fcomip
les
imul
push
fldl
fstpl
inc
mov
sub
mov
es
test
inc
mov
mov
aam
xchg
lret
aas
addb
sub
lcall
nop
pop
push
inc
sub
hlt
shrb
xchg
sbb
mov
mov
mov
pop
loopne
inc
inc
sub
popf
xorl
movsl
incl
push
or
cmp
popa
or
dec
scas
pop
add
cli
pop
mov
dec
inc
mov
pop
cld
clc
or
cmpsl
addr16
hlt
stc
fsubr
mov
outsb
sub
incl
adcl
mov
xchg
ss
lcall
repnz
cmp
out
mov
hlt
test
push
mov
lods
mov
movsl
jo
clc
pushl
imul
mov
icebp
jl
fs
addb
incl
out
call
and
mov
cltd
jp
add
out
iret
stc
aad
xor
jp
cmp
jae
push
and
int3
mov
mov
out
loopne
ljmp
adcb
cs
mov
iret
into
pop
jnp
mov
mov
sahf
mov
rcrl
add
loope
jae
xor
call
jnp
scas
pop
push
mov
xor
shrb
std
jg
test
fmulp
mov
mov
or
std
push
dec
cmpsb
dec
lods
addr16
jmp
cmp
mov
adc
leave
mov
movsl
pop
dec
in
dec
inc
rclb
ret
push
stos
xor
mov
fisubrl
test
mov
out
nop
adc
jmp
jge
rcrb
ljmp
sub
loopne
fwait
jns
sbb
test
iret
jbe
cmp
add
addr16
pop
addr16
mov
decl
mov
mov
mov
sub
decl
scas
mov
and
and
fs
pop
lds
xor
into
xor
pushf
loopnew
shrb
push
call
xchg
ja
hlt
xor
inc
iret
scas
sti
out
.byte
or
add
push
push
je
imul
repz
in
lock
hlt
clc
jns
iret
in
jo
mov
pop
push
dec
bound
outsl
imul
pop
sbb
loop
jae
gs
mov
adc
outsb
sbb
popa
arpl
add
dec
add
inc
add
dec
addl
testl
aas
call
int3
int3
mov
out
out
mov
xchg
shrl
or
adc
adc
fucomp
cmpw
or
or
out
dec
add
cmp
int3
dec
fmull
push
lea
mov
jmp
vmread
in
in
jo
nop
in
in
push
in
in
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
xor
mov
pushf
cwtl
and
in
in
mov
test
in
in
adc
push
add
mov
pop
rclb
add
imulb
je
movzwl
fmull
fisttpl
ret
addr16
dec
inc
sahf
pushf
add
pusha
clc
hlt
cld
fistpl
lock
push
mov
add
push
fldcw
add
jne
xor
pop
enter
mov
out
add
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
fnstsw
mov
push
nop
mov
add
scas
mov
mov
xchg
call
test
xchg
mov
mov
mov
or
adc
fistpll
mov
aaa
push
mov
push
or
ljmp
xor
cmp
or
push
mov
mov
mov
mov
in
mov
rcrl
mov
add
xor
push
or
ret
and
add
inc
mov
or
iret
mov
stc
inc
add
adc
or
cmp
add
loopne
mov
sub
cmp
add
jo
pop
pop
push
fbstp
fucomi
sti
mov
xchg
cmp
jb
into
add
call
ja
ficompl
sbb
sub
mov
ret
jmp
pop
mov
add
pop
mov
sub
sub
jbe
imul
pop
push
sub
mov
lock
aam
mov
jmp
sbb
scas
sbb
sti
jne
loop
dec
rcrb
pop
and
mov
cmp
cmp
add
mov
repnz
int3
push
push
xchg
add
add
and
push
jg
ss
lock
pushl
sarl
dec
fadds
mov
dec
shl
sti
jbe
js
mov
callw
add
push
lahf
push
lods
push
movsl
jne
icebp
push
push
addb
xchg
dec
pushf
cmpl
in
mov
popa
clc
ret
fucomip
mov
mov
or
add
mov
call
faddl
lds
mov
push
in
in
scas
loope
es
ja
mov
add
cmp
ja
cmp
rcr
addr16
sub
sbb
xlat
sar
je
or
or
add
ret
jno
and
cmp
in
or
addr16
ljmp
sbb
lds
sbb
or
adc
hlt
outsl
movq
ljmp
sbb
loop
mov
xchg
sub
mov
pop
popf
cmp
pop
cmp
add
and
mov
cmp
lods
cmp
testb
ss
jbe
scas
adc
xchg
push
outsl
sub
push
push
cmpl
sbb
mov
cmp
pop
jo
mov
add
xor
jmp
pop
xchg
ljmp
inc
mov
or
cmp
jae
mov
cmp
jae
add
add
add
sarl
es
adc
ja
in
jge
idiv
mov
aas
or
add
repnz
shlb
mov
idivb
inc
xlat
mov
push
and
in
mov
inc
cltd
inc
ds
adc
jne
push
pop
add
xlat
ds
push
and
cmp
pop
movsl
and
pop
jge
push
push
and
sahf
ds
pop
mov
cli
jl
fcompl
je
cmp
ds
mov
pop
add
stos
decl
cmp
je
xor
lea
or
mov
mov
add
fcoms
lcall
lea
fsubr
add
test
xchg
jmp
xchg
mov
jne
xchg
cmp
not
push
scas
movsb
lds
sub
faddp
add
inc
popf
adc
adc
xchg
lea
cmp
lock
mov
jnp
pop
push
lock
jae
mov
xchg
jle
out
rorl
popf
mov
in
add
pop
push
test
je
imul
scas
dec
or
or
adc
xor
or
adc
ja
jmp
push
addl
pop
sbb
sti
ja
mov
push
pushl
mov
push
mov
add
cmpb
and
adc
push
push
test
xchg
mov
or
sarl
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
loop
xor
mov
in
sub
push
dec
pop
xchg
test
or
adc
sub
add
or
in
out
mov
mov
fs
mov
add
outsl
push
push
mov
sub
sbb
xchg
and
loopne
pop
mov
push
cmp
adc
sub
or
or
pop
adc
test
jns
add
sar
test
testb
das
sub
sub
or
mov
sub
cmp
shll
and
out
fisttps
or
mov
cmp
incl
pop
lea
xchg
lea
or
fdivr
cli
adc
add
xor
sbbb
fstpt
or
mov
and
add
sub
cld
mov
jg
add
shrl
lock
or
push
or
push
rolb
aas
leave
mov
fcoml
and
popf
inc
jns
push
xor
adc
je
jmp
fisubl
aad
lods
enter
ret
aas
add
testl
dec
jb
sub
cmp
cmp
sbb
cmp
sbb
fisubrs
jp
fdivs
add
mov
jge
mov
add
and
repz
bound
dec
adc
pop
adc
xchg
lret
add
dec
jl
jo
push
jo
dec
xorb
or
lea
sub
cld
jg
clc
sub
pop
push
inc
sub
cmp
jge
mov
lock
out
call
cld
lea
mov
pusha
sti
and
in
mov
aad
lds
clc
add
adc
stos
mov
sub
jp
mov
mul
or
xchg
std
jmp
pop
iret
mov
add
sub
mov
lret
adc
jl
ret
nop
hlt
je
out
cmpsb
adc
mov
cmp
jmp
repz
mov
inc
adc
push
pop
add
sub
cmp
jl
mov
pop
mov
add
pop
adc
xor
sub
adc
or
push
in
push
cmp
daa
or
adc
push
push
or
outsb
mov
fistps
ret
lea
movsl
movsl
mov
dec
push
or
xlat
imul
mov
cmp
pusha
push
clc
xor
mov
inc
push
adc
repz
pop
addr16
cwtl
sub
sub
inc
add
loope
subl
cmp
mov
adc
loopne
mov
lcall
sbb
push
add
pop
inc
scas
or
adc
rol
popa
nop
les
fwait
or
clc
add
jo
inc
adc
jne
jmp
fcoms
stos
ljmp
push
loope
sbb
or
mov
pop
movd
lds
push
lods
jg,pn
pop
mov
pop
je
sub
fnsave
jmp
sub
dec
add
jae
sbb
loopne
jle
mov
adc
jne
movsb
sub
cmpl
xchg
jbe
adc
inc
add
xor
aad
loope
sub
xor
jmp
jmp
movsb
adc
and
mov
stos
jle
jmp
repnz
jne
xor
jge
pop
pop
xor
stos
inc
and
sbb
sbbl
pop
sub
clc
stos
jle
inc
cld
stc
pop
incb
jbe
jecxz
leave
push
push
mov
sub
ret
pop
or
sti
mov
mov
test
jg
dec
test
or
sbb
jl
movb
pop
inc
scas
shlb
push
add
sub
mov
jmp
mov
mov
inc
pushf
or
cmp
add
inc
or
jbe
jmp
bswap
sbbb
sbb
ja
dec
sub
mov
add
arpl
sbb
sti
loop
xor
insb
ds
fcmovb
push
xchg
and
ljmp
sbb
push
dec
xchg
mov
out
scas
jae
test
jo
mov
enter
and
insl
negb
mov
test
jne
test
ja
decl
movnti
or
add
loope
push
or
add
cmp
or
into
jge
lods
inc
nop
or
cmp
mov
add
in
xor
mov
cmp
pop
mov
js
in
andl
add
fisttps
js
jg
mov
test
je
inc
cli
scas
or
testl
jmp
mov
cmpl
mov
mov
or
aad
add
sbbb
shll
sbb
pop
rcrl
cmp
and
jg
rcll
out
mov
mov
sub
jge
loope
add
aad
mov
lock
cmp
mov
pushf
movb
sbb
notb
pusha
adc
mov
hlt
adc
inc
sub
dec
das
negl
add
pop
das
cmpsb
mov
or
sbb
mov
push
pop
fimuls
fmuls
and
or
mov
sub
pop
jecxz
andl
fmul
imulb
xor
dec
daa
cli
call
inc
lahf
add
faddl
lcall
addl
fbld
movsb
les
add
push
sbb
xchg
push
mov
push
pop
pop
pop
ffreep
mov
loop
sub
or
and
or
cmp
lret
cmp
xchg
ret
les
cmpsb
jmp
add
subb
or
rolb
xchg
in
or
sbb
xor
dec
push
call
cmc
adc
inc
movhps
lcall
mov
adc
mov
jmp
out
adc
ret
fildl
add
jge
aam
inc
adc
hlt
nop
push
push
lock
xor
cmp
or
cmpsb
test
jle
call
dec
jo
push
or
xor
mov
in
add
je,pt
je
sarb
add
xor
sbb
enter
imul
mov
ret
push
jmp
push
xor
add
jl
jns
adc
repz
xchg
mov
add
les
jo
mov
nop
popa
inc
jecxz
cmp
lods
adc
or
cwtl
add
rdpmc
ja
lock
ja
mov
mov
inc
mov
cld
loop
les
loopne
sub
rol
push
mov
xchg
fists
jne
mov
divb
rclb
call
add
jp
jmp
ret
nop
js
leave
push
fmull
push
je
ljmp
das
mov
cmp
jg
sub
inc
or
adc
sarl
mov
inc
repz
jmp
mov
leave
jmp
mov
jmp
mov
push
addr16
mov
pop
xlat
ficoml
jmp
or
jno
pushf
outsw
cmp
outsb
cmp
pop
pop
pop
mov
ret
ja
or
ret
sarb
rep
fiadds
mov
fwait
loopne
je
cld
lea
xor
std
xor
sbb
es
ds
pop
insl
xchg
in
repnz
mov
or
cmp
fucomip
clc
jbe
cmpb
push
cmpb
add
out
in
mov
jmp
cmp
daa
insl
imul
push
shrb
roll
ljmp
call
lcall
mov
ja
lock
xor
mov
xor
jmp
decl
gs
mov
mov
inc
inc
test
mov
ja
shl
pop
ds
sbb
into
test
clc
aas
or
adcl
divb
push
push
stc
jne
add
aam
enter
jmp
and
sar
sbb
data16
push
jbe
fbld
dec
jmp
mov
adc
dec
sub
inc
adc
inc
imull
jl
data16
sub
dec
sub
sbbl
add
sbb
jmp
cmp
pop
cmp
and
loop
jp
cmp
ret
out
aaa
mov
sbb
pushf
fistpll
divb
das
or
and
mov
adc
jne
call
rol
mov
and
sbb
sti
dec
ror
or
mov
movsb
mov
shl
data16
fnsave
rep
adc
aaa
jge
call
xor
mov
push
out
sti
stos
inc
add
je
mov
or
je
or
je
fmulp
int
and
je
pop
je
xor
dec
std
mov
inc
xchg
add
sub
jne
mov
cmp
ja
lea
add
add
push
out
int
or
ljmp
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
andnps
popa
jb
xchg
and
insb
push
adc
or
or
cwtl
pop
xor
mov
bswap
xchg
sbb
push
repz
test
sbb
push
jecxz
add
test
inc
lea
mov
and
lea
fldt
call
pushf
pcmpeqb
inc
sub
push
inc
fucomi
push
cli
xchg
jge
mov
xor
sbb
out
fwait
cs
stos
fstp
fldt
bound
adc
out
mov
cmp
adc
mov
daa
lahf
jl
cli
or
or
ret
and
stc
enter
xchg
cwtl
push
and
inc
in
out
sbb
xchg
and
inc
mov
mov
jl
movsl
aam
pop
mov
sub
test
push
jle
and
mov
adc
xor
leave
sbb
jle
cs
jbe
imul
cmp
mov
mov
aaa
jmp
jg
lods
lods
inc
cmpb
xlat
fadds
outsb
dec
mov
xchg
push
or
push
push
int3
into
sbb
rorl
jmp
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
sub
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
xlat
lret
and
neg
add
push
cmp
clc
pop
jne
push
pop
and
pop
push
xor
mov
daa
test
mov
or
inc
cld
push
push
test
nop
push
inc
les
dec
xor
push
push
loope
push
xor
movl
data16
rcr
repz
sub
andb
lcall
and
add
mov
push
fs
pop
aas
or
mov
fists
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
inc
ret
push
dec
popa
jae
push
popa
insb
jne
fninit
fldcw
xchg
mov
lcall
xlat
mov
xor
mov
inc
xchg
or
mov
add
jnp
in
das
xor
rcrb
loopne
aaa
and
or
push
push
dec
add
outsl
test
jbe
sarl
push
movups
add
xchg
xchg
ret
xor
and
pop
mov
or
push
cld
loopne
pop
mov
stos
mov
xor
push
shr
dec
rep
pop
jl
ficompl
mov
mov
sub
pop
fdivl
add
sbb
in
cmp
je
pop
mov
add
jae
ret
sub
push
mov
mov
push
sbb
jne
jne
rorb
insl
das
lods
mov
mov
jbe
clc
cmp
cmpsl
sub
xor
jb
inc
xchg
mov
jb
adc
jb
jo
aad
pcmpeqd
and
jmp
pusha
and
add
add
jo
nop
dec
dec
xchg
mov
xorl
clc
adc
mov
sti
adc
fstpl
sub
and
pop
out
mov
xor
add
mov
sub
and
push
mov
push
add
pop
lea
sub
ret
jmp
pop
faddl
dec
setne
dec
pop
mov
xchg
xor
rorl
pop
mov
outsl
pop
and
mov
cmp
jne
jb
cmp
jne
push
or
aaa
or
or
push
inc
cwtl
popa
sbb
inc
fcoml
imul
and
add
xchg
cmp
int3
test
stos
movb
add
nop
outsl
sub
push
add
repnz
je
pop
mov
in
pop
pop
add
sub
mov
pop
notb
add
pop
pop
mov
out
outsb
sbb
shr
mov
jne
mov
cmp
aaa
iret
pop
push
cld
xor
call
pop
data16
pop
adc
icebp
pop
inc
pop
je
jmp
sbb
push
push
stos
jl
pushf
hlt
xor
ss
push
jle
mov
mov
mov
movl
or
sbb
push
pop
jno
test
sub
or
push
mov
push
cli
push
movsb
mov
pop
adc
push
clc
inc
scas
cs
xlat
sbb
sbb
jmp
add
and
pop
pop
out
cmpb
mov
jbe
rol
cli
in
push
call
jae
aaa
movsb
pop
push
pusha
push
push
cmp
rcr
mov
orb
iret
add
jb
loopne
scas
pop
push
push
in
dec
cmp
cld
sbb
jmp
subl
inc
jmp
add
mov
sbb
mov
inc
push
adc
or
pop
mov
adc
test
adc
add
adc
inc
add
jne
mov
inc
mov
dec
adc
outsb
cld
sub
in
shrl
adc
je
mov
call
enter
cli
out
push
je
in
add
imul
and
loope
cwtl
outsb
je,pn
clc
add
stos
outsb
into
adc
cmc
enter
adc
jne
push
jne
push
int3
cld
xorl
fidivs
dec
add
popa
xchg
inc
adc
sbb
jo
sarl
sub
orl
out
push
jle
scas
mov
mov
pop
add
inc
add
dec
aas
sub
stos
addr16
jmp
imul
div
inc
mov
mov
pop
sbb
jo
aam
xor
fdivrl
clc
pop
je
mov
inc
add
sub
or
and
rorl
mov
mov
arpl
pop
push
push
push
push
push
addl
add
xchg
sahf
fldenv
inc
add
mov
pop
xor
dec
mov
or
pusha
add
sbb
or
aam
xchg
stos
inc
or
adc
orb
adc
jae
add
push
push
je
ret
push
insl
dec
jmp
ret
fisubl
sub
or
les
das
ja
add
add
pop
cmp
push
sub
mov
cmp
pusha
add
call
mov
push
cmp
sub
adc
ljmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
sbb
into
jmp
mov
or
or
lret
jmp
jne
push
xchg
push
or
pop
dec
or
mov
test
xchg
jnp
pop
push
jg
jno
stos
lcall
ss
push
hlt
jg
cwtl
cmp
push
adc
inc
sbb
cli
inc
adc
inc
push
stos
fcmovnbe
sti
and
or
xor
popf
sbb
or
jo
push
cltd
xor
scas
pop
xchg
jb
or
test
or
sub
sbb
dec
cmp
mov
dec
idivb
cmp
je
cmp
jne
and
popl
xor
dec
lods
adc
push
jo
push
jle
test
jle
dec
mov
inc
fiadds
pop
mov
and
repz
imul
push
add
scas
pop
xchg
mov
mov
xchg
stc
sbb
fidivrs
repz
subb
add
inc
mov
jg
mov
movl
sbb
cmp
lcall
mov
mov
movsb
aas
xor
in
movb
or
mov
lea
cmp
push
je
push
adc
add
inc
stos
jge
scas
mov
jmp
pop
decl
xchg
cmpsb
std
add
mov
dec
or
sarb
pop
dec
mov
add
xchg
cli
pop
rol
rcrb
and
ja
and
mov
es
mov
xchg
mov
push
shl
mov
xor
push
fiadds
out
mov
xchg
rolb
ja
pop
pop
sbb
adc
ja
add
mov
mov
mov
mov
cltd
hlt
lods
sbb
cmpl
cmpl
fcompl
pushf
dec
scas
inc
xor
push
push
push
fsubs
jl
add
cmp
jbe
pop
ret
mov
outsb
jbe
push
pusha
adc
cmp
add
or
sbb
mov
loopne
cmpb
push
cmpl
adc
jl
test
call
out
dec
lds
jae
xor
cwtl
test
loopne
daa
push
hlt
in
loop
icebp
pop
call
sub
jbe
rcll
pop
aas
arpl
jp
add
rcrl
push
or
cmp
je
es
insl
into
movsl
xchg
out
mov
or
add
adc
mov
cmpl
pop
and
cmc
pop
mov
adc
push
pop
sti
je
mov
sub
mov
sbb
add
push
inc
jo
xchg
das
mov
ljmp
adc
decl
push
lea
sahf
xor
sbb
out
jb
out
mov
push
sbb
add
or
or
and
jne
out
out
aad
fbld
inc
jg
mov
mov
scas
fldcw
pop
hlt
pop
pop
jmp
jbe
xchg
pop
in
mov
xchg
xchg
jle
popa
ret
das
test
rorb
push
ret
pop
movw
fwait
lcall
in
and
cs
cwtl
mov
mov
pusha
inc
xor
fimull
ds
rcrb
mov
idivb
and
push
push
push
mov
push
push
adc
test
mov
negb
out
aaa
sbb
add
cmp
cld
leave
pushl
bound
jg
cmp
jmp
lea
cmp
movsl
pop
mov
push
fiaddl
mov
mov
jne
lods
cmc
mov
rcrl
fidivl
sbb
add
cmp
clc
dec
call
loop
aas
pop
hlt
sbb
mov
nop
xor
ret
cmp
adc
or
dec
add
add
lret
std
jbe
xorl
add
jmp
iret
cmpsl
pop
sub
and
pop
pop
or
out
adc
addr16
in
add
jae
ja
mov
inc
xchg
nop
push
pop
test
xlat
adc
scas
test
pop
add
pop
pop
stos
clc
mov
xor
jl
mov
inc
cld
ret
xor
jbe
test
pop
incl
cld
add
cmp
lods
lods
cmp
adc
jle
dec
and
and
hlt
or
out
and
jmp
xchg
pusha
cmp
je
cmp
dec
mov
add
das
sub
sbb
sub
sub
rorl
add
inc
jg
fmuls
lds
push
sbb
pop
push
outsb
ss
clc
mov
cmp
sahf
mov
or
cmpsb
xor
inc
xchg
adc
or
xor
push
subl
add
sub
add
cmp
sbb
dec
jne
mov
test
mov
and
aaa
add
loope
hlt
loopne
jmp
and
inc
pushf
sbb
jmp
into
pop
dec
jne
mov
je
dec
jbe
int3
add
scas
and
lea
jmp
testb
rolb
or
push
imul
shlb
add
push
shr
es
loopne
mov
mov
cmp
jne
dec
je
fadds
sbb
add
loop,pt
push
adc
cmpsb
jmp
and
and
inc
xchg
adc
sti
pop
cmp
jne
or
mov
outsb
and
shr
shr
aam
fs
ficoms
or
jmp
sbb
push
push
aas
enter
clc
inc
out
stos
inc
mov
add
shlb
je
push
lods
pop
ss
das
mov
adc
dec
inc
es
mov
adc
xor
inc
das
xor
sar
std
pop
sub
es
jl
cmp
jge
sub
adc
jb
adc
cmp
xor
jmp
mov
jmp
and
je
cmp
int3
inc
aas
inc
out
je
xor
sub
jge
pop
icebp
xchg
mov
mov
add
stc
add
lea
shl
popa
pop
inc
dec
movsb
push
push
cli
mov
jo
repz
jbe
inc
mov
pop
std
mov
push
mov
js
mov
inc
nop
jle
sbb
loopne
pop
adc
mov
cmp
adc
pop
jle
mov
mov
add
pop
nop
aam
loop
clc
sbb
lods
and
sub
in
shlb
loopne
je
sub
lds
xchg
sbb
sub
loopne
notb
xlat
arpl
cli
cwtl
cmp
jl
pusha
xor
and
ret
push
add
xor
sub
xchg
cmpsl
xchg
push
jo
push
push
das
pop
pop
mov
pcmpgtw
loopne
rorb
cmp
or
test
mov
mov
pop
xor
xor
jmp
pop
repnz
push
pop
enter
in
push
xor
or
cmp
sub
sub
push
loope
jno
das
int3
pop
pop
pushl
mov
addb
cwtl
and
xchg
pop
add
add
dec
leave
insb
push
aas
add
add
inc
pop
stos
or
shr
fbstp
test
push
push
inc
sbb
ss
aad
pop
add
data16
sbb
and
pop
das
or
pop
pop
lahf
mov
test
add
push
or
push
cmp
jge
pop
dec
cmp
jbe
sbb
sub
cmp
cs
clc
loope
lods
add
add
cmpb
nop
xchg
pop
sub
outsl
xorl
pushf
pop
stos
incb
ret
fisttpll
adc
xchg
pop
ja
or
push
mov
dec
lea
jl
aaa
popa
adc
xor
mov
cli
or
es
push
xchg
jg
dec
or
and
aas
or
cmp
arpl
call
incb
dec
loopne
or
call
dec
pop
mov
cmp
je
cmp
je
cmp
in
std
push
in
jg
or
je
cmp
pop
aam
adc
dec
mov
lcall
rcr
cmp
lret
cmp
xchg
xor
es
pop
insb
pusha
inc
add
test
repz
push
mov
mov
jmp
add
dec
mov
fstp
mov
cmp
mov
sub
jae
xlat
sub
sbb
loopne
int3
cmp
cmp
icebp
jmp
push
seta
adc
cmp
ljmp
rorb
mov
outsl
cld
les
push
push
add
sarl
sbbl
ret
pop
xorl
mov
cmp
xor
pop
pop
xorl
or
ror
xor
adcb
dec
mov
bound
leave
or
cld
sub
in
popa
jnp
jmp
and
and
lea
test
xor
mov
mov
add
inc
dec
clc
or
fimuls
xor
aas
add
sarl
int3
inc
push
imul
mov
nop
adc
and
cmp
ss
dec
test
loopne
jne
add
dec
xchg
mov
xchg
dec
adc
inc
jle
mov
in
pop
sub
jge
je
and
mov
xor
out
sub
xlat
mov
dec
xor
sub
sub
std
adc
les
scas
jo
xor
add
es
ja
sti
vpmaxsw
add
add
inc
ljmp
mov
lcall
add
je
cmp
dec
iret
dec
cmp
or
adc
popa
or
ret
or
sub
pop
xchg
pop
clc
xor
mov
dec
cmp
or
and
mov
dec
fs
add
sub
or
ret
iret
cmp
or
ud0
cmp
cmc
mov
dec
and
push
loopnew
mov
clc
cmp
je
pop
add
or
in
pop
or
cmpsb
pop
mov
adc
out
cmp
xor
cmp
into
lock
outsb
push
push
inc
add
or
sbb
call
mov
testb
insl
call
xor
inc
call
or
andl
lock
jne
mov
cmp
sbb
mov
xchg
add
loope
loopne
mov
sub
add
in
loopne
pop
add
or
xchg
in
jge
out
out
xor
mov
push
in
test
aaa
mov
in
push
or
sbb
stos
inc
sbb
dec
push
dec
shll
fldl
xrelease
mov
xor
lahf
loopne
adc
cmpl
jle
add
push
call
ror
sub
ret
ficoml
scas
lock
push
dec
bound
enter
mov
cmp
adc
scas
xchg
add
outsb
mov
sub
lock
jne
into
pop
pop
xor
mov
in
push
mov
les
cmp
pop
dec
sub
sbb
sbb
dec
jnp
fldcw
push
push
dec
loopne
lock
out
pop
pop
mov
ss
das
lods
lock
in
sbb
adc
test
inc
ret
jne
mov
lods
sbb
jge
mov
and
jnp
jne
outsl
das
mov
jae
loope
loopne
mov
cmp
mov
test
inc
adc
rclb
mov
add
xor
cmp
mov
call
repz
dec
mov
aam
ret
jmp
cmc
add
test
out
pop
pop
mov
gs
clc
push
jbe
sbb
pop
fcompl
xchg
lret
inc
push
in
push
fimuls
push
cli
das
pop
test
cmp
call
inc
mov
mov
lods
add
outsb
sbb
xlat
loopne
vmread
pop
adc
jl
mov
lret
cmpb
testl
and
add
add
mov
lea
mov
sbb
cmpsb
sbb
rolb
roll
cli
dec
jg
lahf
mov
imul
lods
out
cli
fs
and
je
movsb
shl
adc
push
ja
out
out
fadd
inc
cmp
test
sub
dec
scas
insl
ret
mov
push
mov
daa
sub
cmp
lahf
test
daa
sbb
ret
imul
call
gs
xor
cs
insb
dec
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
push
lret
insl
gs
daa
outsl
loopne
mov
sub
jecxz
out
inc
out
fldenv
mov
and
push
rorb
dec
xor
fs
xchg
and
in
jo
cmp
dec
popa
xor
aaa
cmp
or
imul
mov
push
out
push
jmp
int
aas
addl
cmp
add
lods
dec
inc
mov
and
pop
pop
rcrl
add
fdivrl
xor
cmpb
jmp
call
rcll
adc
sbb
test
cli
add
cmp
stos
pop
cmp
jne
adc
fstpt
sub
sub
roll
sbb
add
xlat
pop
cwtl
arpl
inc
xor
outsl
repz
insb
ret
xor
cmc
add
dec
clc
mov
data16
popa
jb
stos
fnstenv
jg
arpl
gs
aaa
pop
lods
sbb
ds
add
dec
mov
add
add
xor
mov
daa
pop
mov
push
sarb
mov
mov
mov
cmpb
clc
jp
mov
lock
add
jge
mov
mov
dec
or
daa
push
mov
push
push
xor
inc
or
dec
mov
push
dec
add
pop
dec
xchg
mov
jo
ret
mov
pushf
xor
push
adc
mov
mov
dec
stos
out
mov
cmp
cs
iret
or
aad
jmp
mov
inc
movsb
push
mov
cmp
jne
dec
fs
push
ljmp
rcrb
mov
or
inc
mov
push
add
inc
loopne
mov
or
jo
dec
push
inc
jno
and
sahf
je
sbb
sarb
adcb
lds
or
dec
or
das
mov
sub
push
sub
ret
dec
js
rorb
in
fs
mov
mov
js
inc
fbld
or
ret
adc
addr16
add
cmp
mov
in
mov
divb
leave
or
adc
movzwl
inc
cmp
ja
mov
inc
jmp
cmp
adc
lea
cmp
ja
fcmovb
jmp
or
mov
xor
sbb
and
lret
inc
loop
xor
and
and
and
sbb
in
dec
pusha
rolb
dec
lock
je
or
cmp
jb
or
dec
movb
addl
and
sbb
add
pop
add
cmp
lea
ret
add
pop
mov
hlt
mov
mov
adc
fldl
push
mov
cmp
pop
inc
in
loopne
mov
or
inc
test
je
or
jae
inc
sub
aas
and
je
cmp
adc
into
ja
addl
cmp
idivb
add
cwtl
and
or
mov
pop
hlt
ffreep
mov
cld
mov
sub
pop
and
push
adc
inc
lcall
clc
xorb
adc
dec
cmp
movl
mov
ret
scas
imul
xor
es
mov
xorb
sbb
or
dec
sbb
jb
inc
sbb
sub
int3
mov
imul
ret
loope
test
pusha
je
xchg
or
leave
adc
lea
in
lahf
imul
sub
aaa
test
leave
inc
das
and
pop
ret
or
fcom
dec
outsl
jmp
adc
add
or
and
imul
addb
add
fadds
repnz
pop
jl
in
add
and
sub
inc
lods
inc
or
xchg
and
cmp
inc
negl
aaa
test
xor
inc
pusha
lahf
popa
sbb
test
add
dec
cmp
cmpsl
sbb
jge
push
add
cld
fisubl
fld
ja
jo
or
dec
sub
xchg
push
ja
dec
cli
dec
ds
push
lock
push
push
lea
push
push
pop
gs
and
rorb
orb
je
out
mov
xchg
leave
nop
bound
cmp
xor
add
daa
jg
lss
push
incl
dec
pop
add
or
out
fdivs
jns
push
or
cmp
fsubrl
test
sbb
xor
add
ret
jl
insl
xor
push
add
in
dec
call
inc
adc
lahf
fldenv
dec
mov
adc
push
in
daa
fcomps
dec
add
cmp
jl
mov
sbb
cmp
jbe
jae
lds
mov
out
test
add
and
ja
out
push
ja
mov
les
xor
rorb
mov
push
push
pop
pop
outsb
mov
adc
jmp
xor
ud0
cmpl
pop
adc
lcall
je
xlat
jge
or
mov
sub
mov
leave
jne
mov
imul
push
pop
add
mov
push
mov
mov
sub
cmp
arpl
inc
hlt
mov
mov
sub
movsb
or
mov
jge
daa
hlt
das
pop
and
dec
fs
sub
faddl
or
sub
inc
xor
xchg
insb
fs
mov
in
paddusb
cmp
cmp
aam
int3
pushf
pushf
mov
bound
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
popa
clc
hlt
lock
movsb
pop
test
mov
pushf
cwtl
xchg
enter
into
inc
dec
pop
jo
fs
push
push
pop
jo
inc
xor
xlat
outsl
je
je
lods
sbb
icebp
jb
jb
repnz
cmc
jb
jb
div
clc
stc
jb
jb
cli
sti
cld
std
jb
jb
jmp
loope
jb
jb
jecxz
in
jb
jb
out
jmp
ljmp
jb
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
orb
mov
rolb
add
aam
hlt
es
lea
aaa
cli
outsb
aaa
push
xchg
lods
pop
push
add
or
js
gs
imul
aas
adc
jb
stc
into
pushf
pop
adc
push
inc
dec
gs
daa
pop
in
mov
mov
lods
mov
add
jmp
dec
jne
dec
dec
gs
outsl
jb
or
push
jbe
pop
mov
outsl
mov
or
outsb
mov
push
xchg
imul
xor
sahf
pop
mov
insb
scas
mov
xor
cltd
dec
adc
or
in
pop
ds
or
sbb
scas
pop
and
or
nop
mov
jns
gs
enter
repnz
outsb
and
and
mov
insb
outsl
ja
or
pop
mov
mov
inc
inc
push
dec
aam
nop
leave
xchg
mov
pusha
divb
push
or
imul
inc
or
ds
mov
jle
test
test
rcll
scas
fsubr
fs
xor
scas
push
adc
adc
pcmpeqd
or
push
outsl
imul
je
aas
or
ja
jl
test
je
in
cli
or
mov
inc
and
ljmp
jl
and
xchg
adc
arpl
push
loopne
push
jae
push
adc
inc
fiaddl
push
aas
push
lods
xchg
push
jb
insb
gs
nop
add
fs
outsl
rorl
sarl
push
inc
push
je
arpl
nop
pop
mov
jo
jb
or
je
mov
inc
mov
ds
push
push
push
popa
sbb
nop
sbb
aas
adc
inc
mov
shll
lds
popa
fsubl
mov
jo
bound
xor
jb
jns
int3
mov
xor
mov
xchg
mov
data16
pop
aas
or
pop
mov
icebp
stos
xchg
push
fists
popa
gs
or
cwtl
jle
add
add
loop
xor
pop
dec
invd
cltd
push
insb
sbb
jae
mov
inc
and
add
and
addr16
inc
in
push
daa
xchg
push
mov
adc
jb
popa
movaps
outsl
les
int3
pushf
fstl
jecxz
rcl
movsl
push
jl
lea
pushf
sbb
aas
call
inc
adc
imul
cmp
repz
push
pop
popa
mov
push
mov
jnp
sbb
push
loopne
sbb
mov
push
jp
xchg
mov
inc
repz
jne
push
mov
jmp
jne
call
lods
andb
outsb
arpl
cmp
fdivr
mov
shr
div
pop
inc
mov
add
pop
jg
cmp
lret
mov
mov
mov
or
cmpb
mov
fsts
xor
or
loop
xor
movb
arpl
test
jg
mov
test
add
push
cmp
ja
sub
mov
lret
clc
mov
inc
inc
dec
sub
mov
inc
sarb
inc
pop
add
ret
in
push
push
or
or
push
cld
mov
cmp
jbe
psubsw
cmpsb
je
mov
or
clc
push
imul
push
decl
in
mov
je
movzbl
add
sub
pop
add
sbb
ss
ljmp
pop
or
xchg
add
pop
push
sarb
jl
add
add
inc
jbe
sbb
mov
bound
rcr
add
adcb
sub
loope
mov
lock
sbb
jl
cmpb
jbe
adc
or
aas
insl
pop
dec
sub
clc
push
sub
inc
mov
das
test
pop
les
out
sarb
dec
pop
jb
sub
lea
ret
mov
shl
icebp
jle
xor
mov
mov
inc
ljmp
ljmp
lret
add
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
xchg
pop
lock
outsb
cltd
pop
mov
pop
std
add
outsb
aad
pop
xlat
xor
add
pushl
pushl
mov
negl
cmpl
popa
dec
dec
lods
jae
mov
ljmp
mov
add
push
lret
cmp
orw
sub
insb
mov
call
je
jg
pop
mov
fildll
fistps
ret
add
add
adc
filds
rorl
fdivr
les
add
scas
les
test
loopne
jae
fldcw
push
ffree
ffree
ffree
ffree
pop
or
add
int3
aam
repz
adc
xchg
push
pop
push
push
data16
enter
js
pop
pop
pop
jbe
jecxz
sbb
add
push
mov
bound
push
lahf
push
add
or
repnz
fwait
hlt
xor
add
pop
push
push
adc
jo
mov
cmp
add
mov
test
aaa
outsl
inc
mov
add
xchg
mov
push
scas
cmp
mov
and
faddl
mov
mov
mov
xchg
push
jb
pop
pop
push
imull
out
inc
popa
insb
jae
ja
mov
call
and
shlb
fdivl
hlt
push
cmp
jmp
jge
mov
orl
pop
subl
data16
aaa
insl
nop
mov
dec
adc
insl
lock
das
add
dec
setne
jmp
push
jnp
sbb
adc
pop
pop
lods
pop
addr16
dec
pop
sti
add
inc
mov
add
aaa
arpl
push
xor
push
sub
bound
sub
adc
ret
scas
cmpsb
adc
jmp
and
inc
jo
mov
adc
sub
or
mov
clc
or
cli
stos
test
cmp
ja
xor
mov
ja
mov
push
push
sub
push
mov
mov
out
shrb
imulb
adc
addb
sbb
iret
pop
sub
ds
push
or
jmp
push
dec
movsb
pop
jae
test
mov
inc
pop
leave
adc
push
or
mov
pop
out
test
adc
rolb
sahf
push
addb
mull
les
add
cld
loopne
sub
xchg
dec
cs
pushl
adc
mov
or
inc
sbb
mov
mov
mov
cmp
mov
pop
popa
sbb
xlat
pop
and
call
push
dec
jp
vcvtsd2ss
rcr
push
pop
mov
xchg
outsl
shll
sub
lock
shll
jo
pop
pop
cmp
addr16
sbb
add
jne
imul
les
mov
adcb
cmpl
xchg
test
lock
mulb
jp
push
push
hlt
clc
add
lock
push
jnp
out
cld
imull
ret
mov
call
adc
mov
push
inc
ss
dec
imul
mov
xchg
and
pop
ret
lea
pop
nop
nop
movsl
clc
mov
lea
push
mov
dec
add
xchg
cmp
jg
cmp
dec
js
movsl
imull
xor
add
lret
mov
mov
sbb
push
dec
or
fildl
addr16
xor
or
icebp
dec
das
pusha
shl
or
incl
cli
dec
mov
ljmp
mov
or
inc
mov
push
popa
sti
or
shll
scas
pushf
inc
inc
outsl
pop
andb
rorl
add
mov
mov
pop
sub
jbe
sbb
pop
decl
xchg
pop
adc
mov
in
lea
repnz
loope
sbb
pop
and
inc
clc
das
mov
loope
and
sub
mov
test
pusha
xchg
sbb
test
out
fsubrs
lock
pop
jbe
mov
das
push
cmp
xchg
std
std
or
mov
mov
imul
push
pop
fisttpl
inc
and
push
and
and
lock
push
sbb
stos
subb
mov
add
xor
mov
rcrl
push
mov
aas
xchg
call
and
push
addb
into
ds
jge
js
mov
ret
jp
cli
fiadds
pop
or
jne
mov
sub
fwait
mov
sub
jmp
jo
mov
mov
cmp
or
fsubrl
sti
cs
jne
cs
and
lods
jmp
loop
pop
in
push
fistpll
sub
sub
mov
xchg
jne
stc
arpl
lret
or
fildl
sub
jae
psubq
xchg
pop
mov
rep
sbb
movsb
xor
fldt
int
inc
pop
pop
mov
sub
xor
cmp
cmp
mov
fneni(8087
sub
movzbl
add
and
push
mov
pop
dec
xchg
cmp
outsb
bound
or
jl
je
ret
je
hlt
clts
or
sarl
push
pop
pop
jne
lea
mov
repz
jmp
je
in
imul
sahf
out
jne
adc
das
pop
out
in
outsl
lods
push
xlat
ss
push
cld
movsl
jp
cmp
xchg
or
inc
pusha
jl
fsubrs
roll
lea
ret
shlb
orl
inc
xchg
pop
or
push
notb
mov
sbb
mov
ds
push
pop
outsb
adc
enter
push
or
cmc
into
jmp
arpl
cmp
jne
pop
movnti
add
mov
idivb
shlb
dec
xor
inc
inc
nop
cli
or
enter
mov
cmp
mov
adc
or
jne
aas
and
std
xorb
in
mov
add
enter
xor
icebp
cmp
ja
or
aad
jp,pt
jecxz
dec
mov
pusha
pop
ds
leave
and
push
mov
lods
out
stos
fwait
mov
mov
outsb
mov
inc
je
jl
in
aas
mov
or
je
mov
inc
je
mov
dec
je
pushl
fimull
mov
pop
cmp
jbe
mov
inc
ss
xchg
adc
sahf
adc
inc
fdivrl
std
jno
lods
pop
mov
xchg
mov
insb
jae
mov
sbb
clc
xchg
ret
xor
jmp
jle
pop
lods
cs
ds
rolb
addr16
push
cmp
push
and
repnz
loopne
add
bound
xlat
cld
bound
loope
xchg
inc
mov
inc
cmp
mov
add
out
sbb
movsl
and
push
adc
mov
bnd
clc
dec
cld
lea
fdivs
or
pop
mov
aas
xorb
jl
jmp
add
or
mov
pop
es
xor
fsubrl
lea
fldl
xor
stos
or
bound
clc
stos
ja
jge
mov
neg
jmp
or
dec
mov
stos
xchg
push
mov
pop
push
push
inc
aam
fisttps
leave
jg
dec
mov
stos
cmp
jne
pop
pop
pop
lock
popf
mov
sti
mov
jl
mov
mov
repnz
push
xorl
adc
inc
cwtl
mov
jge
mov
push
fstpt
xor
adc
jb
ror
dec
mov
sbb
lock
movzwl
sub
and
or
push
adc
lret
repnz
in
mov
adc
add
ja
movswl
sti
mov
jle
dec
lea
jbe
loopne
pop
sbb
call
enter
xchg
sahf
mov
xchg
test
mov
hlt
dec
jg
inc
dec
inc
dec
lods
or
xor
jge
insb
outsl
or
jo
ret
std
mov
aam
lock
xor
or
sbb
sbb
dec
in
xchg
mov
xor
mov
jmp
ret
inc
mov
loop
movlps
mov
stos
pop
pop
inc
clc
dec
add
fcompl
add
adc
mov
jbe
sub
add
pop
lock
aam
mov
mov
mov
fdivrs
jl
gs
mov
add
sbb
aas
es
mov
or
repz
inc
test
jbe
loopne
jne
sbb
push
in
stos
xor
call
adc
sti
add
je
inc
jne
pop
push
lcall
repnz
subl
mov
mov
mov
xchg
lea
or
inc
imul
je
push
push
cmp
inc
mov
or
jbe
add
movsl
mov
or
mov
push
lds
inc
test
add
mov
add
and
and
adc
and
sub
ja
mov
and
or
sub
iret
jne
xor
or
sub
sub
orl
sub
jecxz
xchg
jmp
sub
loopne
sub
outsl
adc
add
int
push
insb
adc
push
sbb
pop
ret
aam
fists
and
inc
push
xor
mov
cmpl
aas
ret
movb
imul
cs
ja
rclb
mov
out
add
push
xchg
sbb
frndint
outsl
call
inc
rcr
scas
pop
or
fstps
mov
testb
mov
or
mov
lcall
call
or
mov
jg
sub
nop
shr
and
add
push
cmp
xor
stos
mov
add
jns
sbb
cmp
pushl
or
cmpb
jb
movb
lock
dec
js
decb
and
pop
data16
pusha
xor
loopne
data16
adc
cmp
inc
xor
mov
mov
push
or
shr
mov
add
cmp
or
out
mov
into
or
mov
push
adc
or
scas
into
rorl
je
pop
test
ja
neg
sbb
or
or
xchg
sbb
pop
mov
outsl
inc
sub
mov
loopne
jae
dec
add
in
aaa
inc
loopne
push
in
insl
or
popf
loopne
xchg
or
mov
das
jnp
or
fwait
mov
push
sub
andb
push
pushf
and
jne
dec
sub
mov
mov
add
aas
and
cld
mov
add
enter
cmpb
push
or
divl
pop
jmp
js
xor
mov
iret
inc
mov
push
lock
cs
filds
jns
cld
xchg
lock
fldcw
cmpsb
insb
shll
ds
lods
or
mov
ficomps
pusha
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
add
cld
jmp
cwtl
jne
mov
sahf
out
shlb
add
push
mov
test
enter
fistpll
jmp
fstpt
movsb
test
rcr
insb
fidivs
imul
insl
and
push
int3
inc
add
add
mov
fbstp
or
fimull
and
mov
aaa
mov
negb
pop
lock
inc
es
push
inc
imul
push
cmp
add
push
sbb
rcrb
pshufw
fs
mov
insb
push
test
pop
sbb
rcrl
pop
add
add
pop
cmp
fwait
inc
jmp
xchg
test
rclb
cmp
jg
fldt
fstpl
fwait
sbb
pop
mov
dec
inc
jns
out
mov
inc
mov
inc
jo
sub
jb
fwait
pop
pop
insb
mov
divl
push
adc
fdiv
add
adc
xchg
cmp
jno
clc
out
je
fisubrs
and
sbb
or
cmp
inc
stc
cmc
dec
add
cmp
mov
adc
sub
add
shrb
pusha
ljmp
adc
cmp
push
mov
xor
fstpl
fwait
add
aam
into
pop
aad
add
mov
outsl
adc
mov
jne
sub
sti
pop
hlt
xchg
and
mov
cltd
push
jo
fdivl
lret
loopne
cmc
ret
cmp
in
iret
and
xchg
mov
or
inc
imul
enter
loopne
dec
and
fldcw
mov
shl
divb
sbb
sahf
shl
mov
lea
mov
cwtl
test
sbb
xchg
mov
movsb
jg
add
lea
outsl
lcall
xchg
ja
and
lcall
or
jb
sti
insb
cli
cmp
je
out
ja
adc
push
testl
add
inc
dec
jne
sub
dec
mov
aas
cmpsl
subb
cltd
idiv
imul
jbe
mov
add
sub
ds
ds
add
pusha
or
das
mov
or
lds
es
std
std
pop
pop
call
add
jecxz
clc
xchg
call
jg
subb
inc
les
clc
hlt
or
jb
add
inc
pop
jno
ds
push
pusha
pop
xor
dec
data16
sbb
incl
add
jmp
and
jge
shl
lock
mov
xor
add
decw
sub
sub
imul
fcoms
or
mov
pop
sub
loopne
cwtl
and
loope
lcall
rolb
ret
cmp
mov
dec
and
es
cmp
jb
sbb
test
aaa
inc
jmp
nopl
and
outsb
ds
and
hlt
sub
loope
mov
cltd
pop
mov
jbe
xor
sbb
add
jo
pop
popf
loope
ret
ss
cmp
add
push
fwait
addr16
xchg
inc
icebp
mov
push
inc
cmp
mov
adc
mov
mov
cltd
cld
mov
mov
nop
xchg
and
inc
lea
pop
icebp
jmp
pop
outsl
xchg
loope
push
les
repz
in
outsl
adc
pop
aas
sahf
imul
add
loopne
in
jb
push
js
push
fsubr
loop
fidivl
mov
mov
jecxz
mov
sbb
scas
add
cmpsb
enter
rolb
fnstcw
mov
dec
sti
je
js
add
test
mov
out
push
cmpb
jne
out
xlat
push
jns
add
add
push
lea
or
lock
repnz
adcb
in
add
fbstp
push
in
jge
jae
pop
cs
add
push
rclb
jo
stos
lea
cld
cld
push
xchg
inc
les
xor
inc
call
adc
cmp
cmp
or
push
mov
in
ret
imul
je
fistpl
inc
adc
mov
add
push
dec
adc
mov
out
xchg
or
fildl
rcrb
pop
subl
pop
add
mov
adc
jb
mov
add
js
xor
adc
sahf
xor
fwait
sub
sbb
ret
xor
enter
lret
mov
imul
testb
iret
or
xchg
in
ret
jp
fldenv
adc
bswap
nop
test
fdivrs
test
or
xor
jne
inc
or
popa
clc
cmp
jne
push
or
loopne
and
stc
mov
add
add
lea
or
sbb
jmp
xor
fnstcw
orb
rcrl
pop
mov
stos
xchg
mov
pop
incl
dec
mov
loop
jl
xor
xchg
xchg
bt
jnp
jae
pop
jmp
cmp
adc
push
cmp
pop
repnz
jns
or
fildll
push
add
sub
jae
add
mov
pop
cmp
jne
mov
mov
xchg
fisubs
push
addr16
jo
addb
or
jns
push
clc
or
or
xchg
push
or
or
or
push
jo
mov
or
jns
xchg
out
xchg
dec
jl
repz
mov
out
mov
jge
push
dec
data16
dec
add
push
xchg
xchg
jb
pop
or
mov
or
mov
cltd
bound
push
jb
pop
std
inc
mov
xchg
pop
popf
dec
push
lea
je
daa
out
jae
fcompl
sub
cmp
je
fadds
dec
mov
sbb
xor
dec
add
inc
push
sbb
test
pop
xchg
xor
pop
or
leave
mov
jp
dec
add
jmp
out
aad
push
xchg
push
mov
xchg
dec
mov
dec
leave
out
sub
daa
jne
hlt
bound
mov
lock
inc
lahf
or
loope
mov
jns
cmpsl
mov
lcall
test
addb
dec
jg
je
mov
aaa
mov
or
push
jmp
or
je
or
je
pop
jmp
cmpb
dec
mov
not
addr16
fdivr
sub
inc
sub
adc
sbb
mov
std
rolb
jmp
cmp
xor
mov
mov
pop
pop
xor
push
ljmp
outsb
dec
push
data16
int3
fdivrs
and
or
divb
fcoml
fists
lea
nop
mov
xchg
mov
jecxz
add
add
mov
sub
adc
sbb
scas
pushf
adc
enter
push
addl
xlat
push
lds
jns
add
fs
add
roll
adc
xchg
inc
jmp
cltd
in
stc
and
shll
adc
mov
pop
lret
gs
add
jo
fwait
sti
out
jmp
or
or
adc
sbb
adc
or
lods
into
adc
popf
add
cmp
outsl
in
fcomps
imul
jle
nop
nop
jmp
sbb
push
test
jmp
js
add
ja
add
xchg
xor
sub
mov
or
adc
test
push
jnp
cli
add
dec
jo
inc
mov
inc
sbb
mov
lods
jmp
inc
dec
das
push
addr16
insb
test
adc
dec
outsl
verr
outsl
clc
pushf
cmp
inc
insl
mov
xchg
jne
or
mov
in
call
mov
add
or
xchg
xor
out
push
sub
cmpb
je
mov
add
insl
adc
inc
mov
testl
mov
jg
adc
add
add
pop
inc
ljmp
mov
mov
and
movsl
fbstp
add
sub
jae
jnp
int
dec
adc
sbb
scas
jmp
ret
test
js
add
adc
xchg
mov
fimuls
and
out
xchg
adc
mov
pop
ja
bound
mov
nop
inc
mov
sbb
into
push
adc
and
dec
test
sbb
mov
inc
inc
sahf
ret
insl
add
shrl
mov
out
add
fwait
pop
jl
pop
in
test
cmp
jne
incl
nop
pop
sbb
arpl
ljmp
notrack
sub
je
dec
je
sub
sub
outsb
and
je
jmp
mov
jmp
push
push
push
es
push
inc
sub
faddp
mov
jle
fadd
ja
push
push
aad
or
xchg
mov
mov
jl
pop
pop
inc
inc
or
std
cli
mov
dec
inc
mov
rorb
sub
addr16
pop
mov
bound
pop
jmp
or
ret
add
jne
xchg
and
lds
dec
lret
lea
cmp
jg
mov
sbb
pop
cltd
xor
sub
add
pop
cli
pop
jb
imul
add
sbb
ljmp
adc
pop
and
out
cld
fnsave
cmp
ret
xchg
psubusb
lcall
jmp
mov
icebp
mov
inc
out
add
loopne
shrb
and
inc
idiv
sub
mov
iret
ds
sbb
jne
xor
movsb
mov
mov
dec
sub
fisubl
dec
jmp
sbb
adc
ljmp
mov
cmp
mov
xchg
lods
jge
sbb
std
stos
test
jo
mov
fisttpl
sub
sbb
in
xor
nop
cmpsl
pop
jmp
aas
cmp
xchg
sub
jb
and
cmp
push
mov
and
ljmp
hlt
mov
push
fucomip
ss
repnz
in
sbb
jmp
lds
lret
pop
push
jno
jmp
movsb
out
subb
push
jmp
cmp
ja
xor
add
jb
sub
loop
pop
push
fstps
fmull
out
or
shl
aaa
add
cmpb
jle
push
insb
neg
and
fs
jne
mov
add
add
repz
ret
bound
daa
or
cmpb
push
mov
enter
sbb
pop
scas
inc
icebp
imul
or
shrl
dec
sbb
push
add
push
jmp
xlat
fildl
das
xor
mov
fisubrs
fcomps
fsubrs
xor
cmp
repnz
out
cmp
add
insb
add
sti
push
sub
jb
xchg
add
adc
gs
lret
fs
push
dec
pop
sbb
fildl
mov
mov
xorb
mov
incb
jmp
push
cwtl
mov
add
mov
pop
loopne
lds
lock
pop
insl
push
adc
and
imul
push
or
inc
outsb
dec
cmpsb
nop
lret
iret
fadds
sbb
je
orl
add
nop
inc
push
inc
or
add
enter
sbb
adc
pop
pop
test
mov
data16
inc
ja
test
xchg
jne,pt
add
sbb
sub
and
sbb
add
push
add
adc
sub
fs
pop
pop
push
lods
mov
inc
les
popa
ficoml
repnz
xchg
aam
xchg
into
xchg
or
adc
pop
xchg
cmp
adc
gs
psubsb
push
insb
int3
mov
jno
jl
lds
jne
cltd
mov
addb
mov
cmp
ret
addl
in
dec
cld
bound
fst
fcomps
or
sbb
fwait
jmp
sbb
pop
inc
inc
sbb
add
fstp
push
repz
dec
push
push
push
andb
shr
adc
sub
jb
or
pop
and
lret
xchg
xorl
fs
cmpsl
fwait
cwtl
inc
inc
aaa
jae
mov
loopne
dec
mov
jno
pop
popa
push
or
faddl
adc
xor
dec
cld
fwait
push
daa
push
adcl
stc
ret
pop
mov
mov
adc
cld
movsl
xchg
inc
jle
outsb
inc
loope
add
mov
pop
xor
add
cwtl
xlat
imul
sar
movsb
xor
inc
add
or
mov
loopne
adc
xchg
out
sub
mov
faddl
push
xor
cmp
movl
xchg
sar
jne
add
cmp
and
pop
add
scas
scas
xchg
push
in
popa
pop
and
fdivl
xor
pop
sarb
dec
call
dec
xchg
call
mov
je
jne,pt
adc
xlat
pop
pop
in
xchg
push
lods
lock
jl
push
add
je
xchg
cmp
add
mov
mov
fwait
js
mov
cmp
inc
cltd
xchg
pop
pushf
cmpsl
jb
incl
mov
mov
in
add
in
jmp
lea
in
adc
jmp
fucomip
jmp
mov
xor
cmpsl
mov
add
mov
or
inc
xor
fiadds
fimuls
jbe
adcl
push
push
push
cmp
dec
paddusb
test
add
xchg
jne
push
push
fcoml
sbb
repnz
fcoms
xor
and
push
mov
sub
and
pop
dec
mov
xchg
dec
repnz
fwait
or
dec
adc
or
scas
add
cmpsb
adc
xor
push
ljmp
je
sub
je
scas
ret
lea
add
subl
jle
mov
stos
push
sbb
ret
cltd
fs
mov
ret
pop
lock
add
cld
jg
mov
mov
shrb
dec
mov
xchg
or
jmp
mov
or
ret
add
push
mov
pushf
jns
pop
sbb
jmp
push
xor
xchg
dec
push
push
jmp
in
in
cs
cmp
mov
aad
in
dec
pop
xor
adc
lahf
push
add
ja
sbb
xlat
add
sub
and
mov
cmpb
and
sahf
test
xor
push
test
mov
aam
mov
cmp
pop
outsl
out
adc
jae
inc
dec
cmp
aaa
insb
or
mov
cmp
pop
and
jmp
sub
add
mov
rolb
repz
sub
movsb
mov
jnp
daa
ret
or
sub
or
jecxz
pusha
fsubs
mov
mov
xchg
lcall
ljmp
scas
mov
pop
pop
sarb
jl
movsb
push
push
rolb
and
mov
popa
lock
add
xchg
out
pop
dec
pop
sbb
mov
movb
dec
iret
in
mov
push
xor
mov
mov
cmp
mov
out
xchg
int3
sahf
stc
push
lea
sar
or
pcmpgtd
add
push
or
push
dec
and
addr16
test
mov
mov
pop
cmp
pushf
pop
sub
es
dec
or
pop
idivl
cmp
pusha
xchg
xchg
test
popa
cld
jmp
push
rcrb
fdivl
ljmp
or
ds
dec
or
inc
pop
add
push
outsl
xlat
push
pop
xchg
add
xor
lea
fsts
rolb
fucomi
sub
shrb
sbbl
push
lahf
repnz
or
data16
les
and
rorl
nop
ja
adc
fidivs
push
add
jnp
js
sub
test
and
xchg
repz
mov
fwait
lock
das
cmpb
pop
and
and
push
or
les
mov
ljmp
test
xor
cmp
jg
cmp
mov
cmp
sbb
adc
mov
pop
fadd
push
push
or
jl
jo
push
pop
mov
decl
push
cmp
push
push
sar
lret
inc
loopne
push
adc
ljmp
push
test
sbb
xchg
and
add
lock
push
or
pop
or
pop
aam
mov
ret
pop
pop
loopne
sub
or
xchg
subb
orb
orl
dec
out
cmp
in
or
jge
inc
outsb
cmpsl
mov
push
in
push
loopne
cmp
loopne
les
xorl
inc
or
mov
loopne
or
insl
add
inc
loop
ja
xchg
adc
ret
and
into
sbb
pusha
jbe
and
inc
call
pushf
fcompl
dec
je
jmp
dec
jle
push
xor
inc
xor
scas
push
jmp
and
add
mov
add
xor
shll
pop
or
or
dec
rorl
or
or
rcl
push
adc
nop
cs
out
outsb
adc
mov
mov
leave
fists
push
movsb
nop
push
sbb
cmpl
movaps
inc
hlt
inc
jae
adc
xchg
bound
or
arpl
cmpsl
dec
push
in
mov
mov
dec
cwtl
sub
push
loopne
xchg
mov
pop
test
adc
jno
pusha
cmp
ja
imul
les
ja
rcrb
push
push
enter
shrb
aam
mov
add
mov
mov
cld
jmp
sub
push
mov
mov
xchg
test
add
and
nop
daa
pop
pop
mov
adc
dec
lods
loop
mov
aad
pop
sub
jns
and
lods
call
add
sub
mov
jae
mov
fdivrl
push
addr16
pop
adc
jae
pop
pop
mov
cmp
dec
add
mov
insb
pop
mov
adc
xchg
shl
push
jp
push
inc
or
sub
lea
cmpsb
scas
or
pop
mov
lcall
xor
inc
add
adc
cmp
lret
xor
add
out
stc
insl
mov
inc
adc
out
fnstcw
and
enter
outsl
or
jo
lock
movb
adc
xchg
xchg
jbe
lods
pop
inc
xchg
xchg
rcrl
js
pop
inc
aaa
cmp
pop
sbb
adc
sbb
add
or
xchg
in
push
insb
push
pop
call
xchg
dec
rclb
loope
mov
sbb
add
rorb
les
or
or
das
add
repnz
push
mov
and
push
adc
mov
mov
rcr
mov
inc
and
data16
xor
mov
adc
ja
mov
dec
jmp
dec
push
adc
xor
mov
and
mov
sub
and
loopne
push
fidivrs
dec
or
inc
pop
pop
and
into
add
add
cmp
ss
xchg
adc
add
in
or
mov
sub
idivb
daa
sbb
ja
mov
jle
adc
in
seta
xchg
leave
mov
mov
jg
mov
scas
das
sti
inc
xchg
inc
ret
jl
mov
and
pop
adc
cltd
mov
jge
push
add
jmp
or
jo
add
and
leave
movsb
rep
mov
fcoms
outsb
repz
jl
jne
sbb
jo
sbb
cwtl
dec
xchg
sbbb
adc
adc
inc
add
dec
jae
addb
fildll
push
jmp
fwait
call
or
pop
xchg
mov
decl
add
shlb
rol
inc
mov
mov
mov
push
movhps
sbb
out
in
sub
sub
daa
mov
das
pop
and
mov
push
mov
adc
adc
data16
out
pop
fs
pop
jae
push
inc
cmp
or
cltd
je
fdivs
push
loopne
mov
popa
add
inc
orl
pop
lea
fmul
fstpt
clc
stos
lods
in
je
cmpb
hlt
icebp
in
nop
mov
aad
shl
and
xor
subb
mov
andb
mov
hlt
add
push
push
mov
jb
clc
sub
aaa
inc
inc
inc
andb
xchg
ret
popa
ret
sub
sarb
cli
jbe
dec
orb
inc
dec
daa
rcll
dec
mov
test
lock
daa
mov
and
or
lahf
sbbb
mov
cwtl
adc
adc
pop
mov
adc
inc
inc
jne
or
addr16
js
jb
test
loopne
lock
inc
jmp
rcrb
xchg
out
loopne
rorl
mov
jge
pop
js
clc
in
push
mov
int
ffreep
xor
aaa
push
mov
sub
jb
inc
mov
mov
outsl
xchg
fwait
stc
stos
sbb
lret
jne
jge
adc
outsb
or
push
jg
daa
jmp
daa
clc
pop
ja
iret
mov
mov
xchg
rcl
ja
adc
push
or
inc
test
dec
out
dec
sahf
cmp
add
sbb
mov
data16
out
lds
popa
push
arpl
ss
jmp
xor
sahf
pop
cmc
add
test
fistl
inc
movb
xchg
leave
sub
pop
mov
mov
sbb
mov
sbb
popa
lock
clc
cmpl
cmp
pop
jne
lea
adcl
bound
scas
movsl
testl
cs
rorl
and
xchg
fwait
dec
cld
jne
jmp
push
add
xchg
shlb
add
arpl
mov
aam
add
out
cld
lret
js
xor
stc
push
ljmp
pushf
addb
cmc
sub
aas
xchg
pushf
mov
lea
test
imul
mov
inc
adc
sbb
pusha
imul
mov
insb
inc
call
enter
sub
fbld
mov
push
adcl
sbb
test
xchg
fsubrl
mov
addl
mov
mov
loopne
mov
pop
jl
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
adc
add
out
enter
aas
mov
nop
xchg
push
ss
jns
es
aas
ret
adc
stc
inc
cs
les
adc
clc
mov
fcmovnu
jbe
push
mov
frstor
in
lock
lock
add
push
mov
mov
mov
cli
and
das
mov
add
add
fs
pop
pop
aaa
cltd
negb
insl
pop
jo
push
hlt
push
inc
aaa
jbe
pop
sbb
jl
cmp
pop
push
cmp
ss
dec
aaa
sbb
and
mov
mov
aaa
mov
mov
in
dec
add
cld
test
push
addb
inc
cmp
sub
test
inc
mov
xchg
in
pop
xchg
mov
xchg
hlt
and
mov
jno
or
xor
inc
stos
sub
js
mov
sub
std
test
es
push
sbb
imul
inc
add
in
pop
or
aas
adc
inc
imul
clc
jb
gs
jo
inc
js
cmp
cmpsl
inc
xchg
lock
inc
ret
mov
xchg
adc
push
lahf
sbb
mov
filds
add
or
lret
insb
les
clc
jg
sbb
inc
cmp
jne
mov
and
adc
test
jle
adc
sbb
add
or
jl
inc
jmp
xchg
hlt
mov
jnp
mov
mov
in
xchg
add
ljmp
mov
cmp
cmp
call
call
je
mov
inc
or
addr16
mov
fs
inc
mov
scas
cmp
jl
pusha
in
sub
xchg
jno
add
or
mov
sub
shlb
add
cmpl
mov
inc
or
je
aas
adc
push
adc
sbb
xor
out
mov
shlb
pop
movsb
movl
xor
add
sarb
pop
mov
pop
push
mulps
push
lret
lcall
leave
test
mov
cltd
mov
les
inc
pop
adc
jle
in
cmp
inc
push
dec
lods
in
dec
xlat
pop
mov
aaa
inc
or
fcompl
adc
clc
sub
clc
mov
jnp
ja
je
push
movsb
mov
adc
outsl
sub
inc
stc
mov
mov
cs
mov
xchg
and
jmp
adc
out
xor
cmpl
jbe
js
add
aam
orb
xchg
dec
xor
cmp
sete
incl
push
sub
or
fldenv
adc
sbb
inc
decl
cmpl
aas
push
pop
push
inc
shr
movsb
popa
cmpsb
add
push
lret
shlb
jecxz
sub
cmpsl
mov
into
add
incl
scas
add
cmp
test
cmp
xchg
and
pop
jmp
inc
aad
outsb
fistl
ja
jmp
loopne
sub
cmp
outsl
xor
lods
ja
mov
dec
mov
inc
xor
int
enter
filds
jmp
mov
ret
adc
push
add
xor
cmpsl
adc
add
daa
scas
jo
mov
cmp
jmp
lock
jl
push
loopne
fiadds
jo
inc
fmuls
and
iret
repz
dec
enter
mov
push
mov
mov
push
cwtl
jle
push
dec
idivl
xrelease
cmp
jo
push
idivl
push
push
push
pop
dec
out
iret
repz
adc
lock
shl
idivl
mov
fildll
jge
xchg
sbb
xchg
es
xchg
aaa
bnd
or
aam
or
add
leave
mov
add
cld
cld
inc
jl
sahf
xchg
hlt
clc
fdiv
pop
inc
xchg
ja
mov
aam
inc
clc
out
negb
sbb
loopne
adc
cmp
faddl
fsubs
iret
aam
sarb
jbe
enter
push
sub
out
in
rorb
repnz
cmp
mov
mov
dec
fmulp
mov
pusha
pushf
mov
cmp
mov
adc
xchg
ja
dec
nop
push
xchg
mov
out
in
mov
inc
inc
andb
jl
je
fs
es
push
push
sbb
pop
cmp
xchg
mov
add
cld
stc
mov
cmp
mov
dec
add
mov
and
mov
adc
pop
and
xor
add
sub
and
adc
sbb
mov
push
orb
jge
sub
and
add
push
or
in
andb
sub
sbb
cwtl
xchg
mov
sbb
mov
mov
int3
adc
daa
ret
inc
push
xchg
pushf
mov
jns
mov
inc
mov
mov
inc
sub
cmp
adc
pop
push
sub
mov
push
xor
lret
push
xchg
inc
enter
cmp
xor
movsb
sub
int3
sub
jg
jge
les
jno
fdivrs
pop
sbbb
or
mov
stos
xor
ret
in
inc
jp
daa
pop
or
sbb
mov
lahf
in
out
jo
imul
je
mov
sub
adc
hlt
add
add
mov
cmc
mov
jns
test
in
sbb
fsubs
scas
fs
lods
int
and
pop
cmpb
dec
push
test
movsl
xor
pop
clc
xchg
out
sbb
daa
stc
jl
lea
pop
call
cmc
sbb
movsb
repnz
je
mov
pop
and
clc
les
jno
pop
ret
and
cmp
and
inc
inc
imul
sub
insb
dec
shlb
fstpt
xchg
mov
push
cmpb
jge
add
pushf
pop
mov
or
or
fistps
les
arpl
out
lods
adc
and
pushf
pushf
je
push
mov
mov
mov
hlt
mov
jns
insb
push
dec
fcompl
dec
jne
pop
mov
and
mov
ret
push
add
or
add
fsubs
pushf
jle
jo
dec
xor
mov
push
jl,pn
test
es
add
lods
or
cltd
fs
mov
mov
cltd
fs
dec
mov
dec
es
xor
dec
es
les
mov
xchg
dec
sub
dec
dec
sahf
xchg
dec
rolb
mov
xchg
aam
insb
fcomp
sahf
xchg
dec
sub
mov
dec
loopne
pushf
xchg
dec
sahf
xchg
in
mov
xchg
dec
sub
es
dec
lock
outsl
insb
gs
jne
adc
sub
jmp
jns
mov
mov
add
outsl
je
fs
jne
rclb
clc
movzbl
dec
adc
outsl
fs
stc
jnp
outsb
dec
jb
pop
outsl
jb
inc
insl
jo
stc
out
pop
xor
jb
insl
push
je
pop
push
fwait
insl
lahf
nop
cmp
and
adcb
outsl
mov
inc
jae
xor
pop
jae
dec
add
pop
repnz
add
outsl
out
add
pop
enter
push
or
hlt
test
mov
xchg
out
popa
loope
xlat
fildl
jmp
mov
pop
sbb
ret
jns
pushf
fnstcw
or
mov
hlt
ret
testb
add
out
cmp
call
mov
ds
sti
and
push
pop
call
jg
notl
cld
ss
adc
dec
fidivrl
cmp
flds
xor
mov
or
js
scas
pop
add
add
push
and
xchg
adcb
or
and
cmc
popa
call
addb
sbb
add
dec
lds
add
xor
cs
fildl
mov
mov
push
inc
jb
sbbb
lret
adc
ds
divl
xchg
inc
popa
adc
push
and
dec
js
adc
xchg
fs
fadd
enter
fcompl
mov
mov
jns
imul
xchg
pop
or
sub
gs
popa
add
iret
lods
lods
add
inc
adc
and
mov
insb
adc
ds
shrb
xchg
mov
iret
js
mov
mov
push
outsb
notb
in
mov
fadd
fadd
cmp
mov
jo
arpl
adc
ds
out
sahf
jp
aam
cld
or
ljmp
xchg
pop
fiaddl
push
daa
in
in
add
pop
mov
xlat
lret
das
inc
stc
or
out
dec
mov
es
call
test
inc
dec
daa
in
in
fmulp
and
and
in
add
enter
cs
leave
mov
lret
in
in
inc
add
and
inc
push
into
lret
adc
adc
push
inc
push
and
sub
mov
int
fwait
dec
les
or
add
sbb
add
or
mov
fistps
sub
dec
je
sbb
es
enter
dec
lahf
push
nop
es
jbe
filds
mov
mov
inc
push
enter
lds
and
stc
pop
mov
inc
clc
add
leave
sub
and
dec
iret
and
leave
sub
lock
adc
inc
dec
in
dec
repnz
jl
call
ds
repnz
iret
les
jae
in
nop
iret
mov
inc
loopne
enter
lcall
int3
or
mov
or
mov
rcll
fmul
pop
push
mov
and
stos
xor
shlb
in
sub
mov
sub
popl
fdivs
test
sub
sub
orb
je
mov
ret
inc
jmp
adc
call
iret
push
into
and
in
test
nop
enter
push
or
mov
rorb
adc
or
pop
pop
stos
cmp
dec
sbb
add
jecxz
jo
adc
call
addl
mov
mov
add
mov
test
cmc
cmpsb
lcall
push
out
mov
push
push
shrl
sarb
lea
lea
cld
movl
inc
add
xchg
pop
xorb
js
data16
jmp
scas
or
test
test
pop
mov
adc
jge
test
jmp
and
and
lock
out
and
imul
lea
xchg
loopne
call
add
shrl
jno
scas
mov
lea
fidivl
nop
pop
adcl
inc
pop
and
pusha
cmpsl
pop
fmuls
sahf
jmp
inc
mov
push
pusha
shl
cltd
fstps
in
repz
dec
pop
lods
pop
clc
mov
out
test
dec
push
out
in
cwtl
cmp
stc
push
lods
insl
cmp
mov
cld
push
adc
lret
stos
and
mov
push
xor
push
aas
gs
and
jmp
bound
jne
pop
add
pop
dec
xor
inc
sub
or
or
fsts
div
and
sub
and
xchg
and
sbb
jmp
and
push
mov
cmp
jmp
jne
dec
jnp
adc
push
cmp
mov
rcr
leave
test
lea
test
add
mov
or
inc
out
mov
jmp
sbb
cs
loopne
or
xchg
sub
loopne
call
pop
adc
or
and
add
jae
jnp
pop
sub
adc
jl
shrb
in
mov
dec
pop
cmp
push
ret
outsl
mov
mov
inc
call
push
data16
jmp
push
fldt
iret
adc
and
subb
push
add
call
ds
mov
decl
push
adc
jge
xchg
cmpsl
call
add
or
mov
fmull
and
add
adc
cmp
imul
or
cmpb
xchg
inc
sarl
sub
xchg
add
mov
sub
or
pop
pop
cld
xor
pop
lock
je
pop
jne
push
pop
cs
jnp
jo
mov
or
dec
cmp
cmpsb
or
int3
inc
dec
lret
std
pop
ret
or
mov
pusha
repnz
mov
test
mov
fcomp
flds
mov
test
nop
add
daa
outsl
pushf
inc
pop
adc
xlat
jns
ss
mov
aad
push
mov
and
xchg
or
mov
push
and
inc
mov
and
rclb
shll
cmp
popf
xor
es
lock
imul
hlt
add
cmp
jae
in
pop
nop
rcl
rcl
call
fisttpll
sub
loopne
or
mov
cmp
cmpb
lea
ror
je
xor
roll
xor
out
xchg
pop
stos
jo
cmp
adc
arpl
cli
ss
add
mov
inc
pusha
xchg
sub
jno
out
hlt
mov
in
pop
sub
or
in
ret
mov
add
add
in
inc
push
sub
mov
loope,pn
add
pop
adc
jge
push
push
in
cltd
push
bound
mov
cli
add
scas
xchg
test
sbb
adc
loopne
in
jecxz
push
or
cmp
xchg
clc
aas
sbb
mov
cmp
ja
mov
and
ss
subl
fdivrs
stc
inc
fstps
xor
idivl
mov
fdiv
adc
add
inc
lret
int3
cmpb
dec
je
mov
add
jl
cs
fsubrl
rorl
pop
test
xor
dec
xor
fldcw
or
in
mov
cs
xor
in
add
mov
or
or
clc
ret
cld
cmp
nop
out
call
std
mov
xchg
rclb
xchg
loopne
inc
daa
add
in
popf
loopne
pop
push
fsubl
les
or
andb
movsbl
fadds
adc
aam
in
shlb
nop
rcl
call
inc
lcall
mov
push
sub
sti
int
nop
divb
jno
xor
pusha
sub
pop
dec
je
jmp
imul
outsl
cld
shlb
or
xor
test
add
stos
jo
xchg
es
lcall
xchg
fildl
or
es
out
inc
mov
repnz
inc
xlat
push
test
hlt
or
repz
adc
push
dec
push
je
mov
add
xor
bound
icebp
flds
mov
in
mov
xchg
push
daa
add
shrb
cmp
leave
sbbl
sub
in
aaa
into
movsb
and
movsb
enter
mov
or
dec
pushf
cmp
lret
cwtl
xor
arpl
xchg
jmp
arpl
aaa
nop
dec
jbe
movl
insl
in
sbb
gs
pusha
xchg
inc
pop
and
dec
js
add
fmull
xchg
adc
mov
stc
cwtl
or
pop
mov
icebp
mov
in
and
inc
and
jmp
dec
push
mov
mov
scas
push
mov
jb
mov
rcr
mov
cmp
xor
cmpsl
xchg
push
adc
cmp
into
or
and
inc
fucom
push
xor
loopne
gs
fsubrp
and
push
jecxz
jne
jb
jo
mov
dec
in
ljmp
xchg
fsubp
dec
nop
cwtl
jo
adc
push
push
imull
push
repnz
sahf
push
dec
repz
stos
shr
pop
fildll
dec
sahf
out
cmp
sbbl
cmpsb
mov
dec
loopne
rcr
clc
xor
notl
push
xor
jmp
push
shr
insb
push
jnp
push
xor
push
insb
test
xor
insb
and
push
inc
push
add
insb
and
insl
stos
or
xor
push
cmp
cmp
sbb
in
in
imul
loopne
xor
and
mov
ret
fdivs
fdivs
or
aam
aam
push
xor
dec
aaa
rcl
iret
xorb
pop
xchg
push
enter
xor
and
mov
pop
cmp
xor
test
cmp
fs
loop
and
outsl
jns
ret
loop
inc
repz
mov
pop
adc
lahf
addr16
ss
dec
cwtl
sbb
inc
push
es
mov
lds
jge
loope
cmp
jle
or
lock
push
es
popa
test
test
adc
cwtl
movsb
aaa
movsb
aad
dec
cmp
jno
cmp
push
rorb
jno
cmp
cwtl
jno
mov
outsl
aaa
dec
cmp
nop
popf
ret
in
ja
es
cs
int
mov
adc
add
imul
jns
es
add
dec
sbb
cs
les
faddl
test
enter
dec
andl
fmuls
jb
add
lods
lret
mov
mov
popl
jo
jns
ret
inc
dec
jne
add
add
test
insl
popa
and
xor
bnd
add
jb
push
ds
lcall
pop
inc
outsl
jne
xchg
jb
outsb
mov
pop
cltd
or
aad
outsl
dec
pusha
mov
sbb
addr16
cmp
stos
cmpb
mov
test
outsb
pop
cld
arpl
outsb
imul
aam
loopne
inc
arpl
addr16
adc
and
inc
iret
push
cmp
inc
inc
jns
push
inc
cmp
daa
adc
or
add
xchg
add
loope
or
adc
scas
push
cmp
out
call
push
adcb
and
movsl
fisubrl
sti
imul
xor
push
aam
push
in
jmp
lea
dec
pop
add
sbb
cs
mov
jnp
pop
pop
pop
add
cmp
mov
lea
or
pop
out
xor
xchg
sbb
and
or
dec
mov
addr16
inc
jmp
xor
mov
push
enter
mov
or
inc
outsb
jns
and
push
gs
sbbb
out
sbb
xorl
and
cli
add
pusha
cs
loope
pushf
lods
lahf
xor
xchg
les
xor
dec
in
mov
dec
push
ret
inc
pop
or
int
out
dec
xorl
sbb
add
and
cwtl
cmp
pushl
fnsave
add
adc
xchg
dec
mov
out
mov
fcom
lahf
push
jmp
std
shll
xchg
xor
sub
dec
xlat
xor
lods
daa
sbb
popa
fmul
pop
decl
inc
out
icebp
and
jnp
je
jnp
mov
push
adc
adc
xchg
or
sub
cmp
xlat
int3
jle
imul
push
mov
lea
add
jo
mov
addb
mov
out
sub
push
or
mov
adc
ret
xchg
or
mov
pop
jno
mov
cmpsb
std
xchg
inc
adc
xchg
push
lcall
push
push
push
adc
int3
enter
hlt
repz
mov
add
cmp
jle
xchg
and
pop
and
mov
rorl
xchg
ret
lods
add
push
ret
mov
cmp
xor
or
xor
test
xchg
mov
jp
jg
movsb
pusha
add
sahf
sub
stos
mov
pop
push
pop
add
pop
or
jbe
mov
add
scas
xor
cld
clc
jmp
mov
cmp
xchg
cmp
setg
inc
mov
lods
push
dec
fwait
call
jne
adc
enter
jmp
cmp
ljmp
jne
aas
test
int3
mov
ljmp
dec
dec
xchg
bound
icebp
mov
jmp
sbb
jle
mov
nop
jmp
add
jne
js
mov
lods
mov
leave
adc
sub
jle
mov
mov
adc
sarb
test
divl
rolb
shll
lock
in
in
js
adc
cld
push
pop
jno
aaa
test
sub
in
ret
stos
leave
leave
leave
insl
stos
shrd
scas
nop
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
into
leave
leave
leave
xchg
cwtl
cltd
lcall
jmp
outsl
in
or
loopne
cmp
ss
jb
push
xchg
xlat
add
pop
pop
in
cmp
mov
mov
es
addl
scas
xchg
inc
ja
gs
push
pushf
in
inc
hlt
cmp
pop
mov
mov
popa
insl
adc
mov
adc
dec
push
xchg
test
adc
pop
leave
les
mov
popa
cmpsb
xchg
daa
add
or
sarl
out
mov
cltd
sbbb
or
outsb
shll
mov
scas
ds
mov
mov
mov
mov
les
cwtl
and
ds
jge
adc
pop
jecxz
insb
add
mov
test
or
jbe
mov
scas
enter
or
enter
imul
and
ds
pop
rorl
sub
mov
nop
adc
adc
push
xchg
sti
je
fs
mov
inc
out
add
aas
movsb
lock
pop
and
int3
mov
xlat
imulb
scas
push
fidivrl
push
push
add
push
jnp
adcb
jmp
xor
gs
push
fidivs
lcall
pop
and
pop
pop
inc
insb
popa
fidivrs
ret
out
andl
loope
inc
fs
jo
clc
ljmp
jb
dec
add
pushf
jae
push
rclb
sahf
cmpsb
js
cmp
jo
insl
jmp
repnz
pop
jnp
nop
push
mov
add
xchg
pop
cmpsb
lock
jo
ret
fmuls
hlt
add
ss
in
xor
push
add
lock
mov
imul
shrl
aam
or
jbe
push
cli
cmp
popf
mov
addr16
jl
mov
test
mov
mov
out
cltd
mov
setle
push
cmpb
push
aaa
pushf
call
push
and
mov
sbb
add
aam
push
or
imul
loope
out
repz
xchg
leave
aas
mov
and
fdivrs
xor
push
adc
icebp
pushf
out
pop
xor
inc
nopl
jl
maxps
testl
and
inc
push
mov
lock
add
inc
pop
mov
push
sbb
nop/reserved
adc
mov
test
jl
int3
jle
mov
ds
outsl
call
sbb
repnz
add
hlt
aaa
mul
add
push
cmp
push
insb
fbstp
inc
pop
loopne
fs
pop
push
jns
fisubl
aas
enter
mov
push
push
hlt
xchg
adc
into
repz
pop
fildll
or
and
fisubrl
inc
inc
dec
inc
dec
mov
out
pop
cmc
jl
mov
out
in
push
out
ret
mov
loopne
xlat
mov
lea
fcoml
adc
divl
idivb
push
push
xchg
movsb
sbb
testb
testl
jb
gs
push
je
fs
adc
std
add
test
addr16
jb
shrb
add
add
inc
fiaddl
cmp
add
scas
or
mov
or
pop
stc
mov
fs
push
es
lret
push
jbe
testl
cmp
in
rolb
ljmp
pop
sbb
add
aam
mov
rorb
or
pop
push
loope
inc
call
cld
cmp
cmp
pause
pop
inc
std
jb
jle
pop
or
and
pushf
fwait
jmp
dec
out
sbb
sub
js
jne
add
add
or
stos
imul
rcrb
imul
and
in
bound
clc
lock
lea
dec
pusha
or
stos
cmp
or
add
add
in
movb
nop
push
sub
das
or
lea
lret
pop
push
mov
in
jl
inc
xor
sbb
out
testl
jne
das
push
daa
push
testb
push
add
push
out
movsb
test
xor
mov
pop
rorl
lock
in
in
lods
push
inc
into
add
xlat
lret
das
and
mov
push
or
xor
in
shlb
sbb
inc
out
shufps
aad
xor
or
xor
push
xchg
lret
incl
mov
or
leave
xchg
add
negb
in
add
mov
sub
jmp
das
dec
cmp
xorl
sub
adc
inc
adc
cli
or
dec
and
decl
mov
jge
sbb
shl
loop
adc
jbe
dec
je
inc
or
cmc
mov
xchg
cmovae
inc
add
rorb
add
push
rorl
mov
or
scas
mov
mov
cwtl
jl
mov
add
ss
mov
jae
xchg
in
ret
les
call
sub
pop
add
mov
or
mov
in
ds
adc
push
lret
adc
rolb
adc
jmp
mov
ficoms
add
mov
xchg
jo
jb
mov
jo
xchg
out
or
pop
jle
hlt
scas
cmp
shl
movhps
mov
inc
daa
icebp
inc
scas
sub
or
add
and
inc
sbb
jbe
addb
or
test
jg
add
mov
sub
jg
dec
and
pusha
dec
inc
ret
inc
add
arpl
lods
sbb
out
or
out
cwtl
and
sub
inc
test
jne
inc
and
std
sbbl
xor
fbstp
adc
out
ja
push
add
int3
fwait
in
push
mov
fisttpll
pop
mov
pop
imul
push
fs
push
cmp
in
movsb
jle
add
and
pop
pop
incb
fstl
es
sbb
push
cmp
daa
adc
in
je
daa
sbbb
add
add
dec
jno
in
sbb
hlt
clc
rcrb
cmp
pop
aad
xor
test
sub
leave
gs
data16
imul
mov
out
jecxz
scas
add
adc
pusha
enter
sbb
test
push
scas
mov
push
lods
cmp
mov
push
push
pop
cmp
push
add
sbb
aaa
js
sub
in
and
add
pop
sub
bound
lahf
jno
mov
in
fs
test
or
and
and
ja
sbb
mov
push
xor
push
popf
movmskps
pop
xchg
and
popa
ret
adc
hlt
push
fdivrl
adc
cmc
dec
ja
add
or
clc
icebp
lock
jle
push
insl
sub
call
push
js
sub
push
enter
adc
fbstp
cmp
dec
jne
lcall
icebp
mov
inc
sub
hlt
out
jo
xor
int
push
cmp
mov
lret
shrl
cld
imul
mov
xchg
mov
adc
pop
lcall
or
or
pop
pop
js
pop
stc
and
lods
scas
nop
out
xor
arpl
les
ret
xchg
xor
push
mov
dec
add
popf
mov
mov
sbb
outsl
fst
daa
dec
clc
ror
pushf
xor
jmp
and
mov
jecxz
lahf
mov
cltd
sbb
sahf
test
or
fadd
push
inc
push
push
push
jge
fdivrs
mov
mov
jnp
xchg
and
inc
mov
xor
test
pop
add
aas
in
lock
in
ss
and
add
inc
dec
mov
hlt
xor
cmp
cmp
mov
cmp
jle
loopne
push
in
cmpsb
jo,pn
or
insb
loopne
inc
shll
xor
sub
add
shll
aaa
bnd
and
add
or
cld
sarl
ret
mov
push
inc
and
add
pop
aaa
lock
out
lock
aaa
mov
sbb
sub
ret
adc
xor
ja
ss
aad
sbb
jns
xchg
and
leave
add
jmp
std
lock
neg
xchg
andl
ret
xchg
mov
call
out
out
or
lret
dec
push
push
adc
mov
imul
xchg
stos
push
or
mov
fidivrs
xor
jl
inc
cmp
xor
xorb
sbb
inc
sbb
xor
add
cld
push
push
xor
mov
js
xchg
fistl
mov
mov
xor
shll
xchg
mov
cmp
out
sbbl
mov
pusha
out
xor
inc
xchg
cld
or
or
jl
dec
jne
pmullw
sbb
add
sbb
decl
fcoml
add
cmp
and
aas
cmpsl
call
add
lret
push
dec
sarb
add
xor
push
mov
orb
cld
fs
cwtl
shr
push
dec
add
cltd
and
out
into
imull
or
test
or
cmp
jne
xchg
mov
xor
rcrb
lahf
stc
jb
out
enter
stos
mov
mov
inc
xor
es
cmpsl
out
cmp
push
pop
push
mov
dec
or
mov
pop
adc
xlat
jbe
xor
mov
hlt
hlt
adc
push
sbb
mov
das
out
pusha
dec
fcoml
xchg
cmp
aam
pop
push
popa
cmp
inc
cmp
xor
adc
aad
shrb
adc
jns
add
sub
lea
push
push
jecxz
jmp
xchg
or
out
sub
daa
jne
enter
cmp
mov
in
push
adc
inc
add
imul
scas
add
fs
mov
and
mov
negb
dec
popf
loope
adc
and
jnp
and
mov
out
jmp
int3
or
and
or
popa
ret
pusha
pop
jle
pop
add
mov
faddp
scas
or
xchg
cmp
sbb
rorl
testl
xor
and
js
or
mov
jo
jne
jge
gs
cmp
mov
add
mov
lods
es
test
mov
nop
je
mov
or
adc
fdivl
aam
and
adc
enter
inc
or
cmpb
push
or
daa
cmpsb
xor
push
xchg
jbe
shrb
stos
in
push
pop
and
dec
inc
jmp
fcomps
int
dec
mov
or
test
add
lret
sub
hlt
xchg
int
lds
or
test
das
add
int
or
inc
sub
or
out
hlt
mov
or
adc
cmp
xor
arpl
dec
in
jecxz
push
in
test
push
or
adc
gs
mov
iret
testb
cmp
pop
idiv
xchg
xchg
pop
pop
jne
testb
orb
shll
mov
mov
cmpsb
add
movaps
or
xor
out
xor
ret
dec
add
inc
or
mov
inc
mov
pop
sbb
pop
cs
cmp
and
test
add
ret
aam
and
mov
push
rolb
sbb
push
es
add
inc
and
mov
mov
xchg
mov
jmp
xorl
lods
xor
sub
enter
lcall
sub
adc
mov
mov
adc
sbb
mov
dec
cmpsl
ficomps
adc
pusha
or
lock
sub
sysenter
lods
inc
stos
in
lcall
or
add
inc
pop
arpl
and
sub
or
iret
inc
xchg
iret
dec
in
movsb
push
push
testl
dec
add
sub
dec
sbb
bound
mov
nop
ds
add
add
dec
lock
rcrl
clc
cltd
fiaddl
dec
fcmovnu
inc
dec
inc
cmp
aas
mov
ficomps
jmp
mov
adc
cli
pop
cmp
adc
jge
lea
jmp
and
jp
and
push
push
sub
addl
adc
jle
dec
or
shll
xor
add
out
les
push
mov
repnz
sbb
inc
adc
aas
scas
popa
aam
add
dec
push
sbb
in
fnsave
add
mov
mov
pop
push
sbb
scas
cmc
js
sbb
mov
loop
xor
imull
es
cmp
test
pop
sbb
jle
mov
sub
cmpsl
add
xchg
add
dec
je
jmp
bnd
push
seto
jne
adc
push
fidivs
icebp
jl
adc
repz
inc
xchg
movsl
lcall
nop
pop
in
jl
mov
adc
add
mov
push
add
roll
mov
mov
nop
push
test
jg
xchg
pop
in
es
add
cmp
jne
mov
push
or
or
mov
mov
mov
jle
xor
sub
add
mov
jle
mov
inc
je
lea
add
data16
out
or
ret
xchg
in
push
dec
daa
pop
mov
loop
push
xor
pop
adc
push
mov
inc
push
cmp
sub
add
xor
push
or
decb
and
push
sub
xor
push
dec
adc
xor
mov
add
xor
xchg
add
aaa
cmp
or
pop
ds
mov
gs
cwtl
jecxz
add
call
push
fistpl
xchg
clc
das
and
adc
jge
or
ljmp
jb
jmp
jl
and
sbb
jbe
and
pop
mov
push
add
sarl
inc
ja
and
cmp
lahf
xchg
fildl
dec
add
inc
fiaddl
add
sub
pop
jecxz
adc
inc
out
lea
movl
push
sahf
mov
inc
test
and
add
pusha
mov
stos
sti
and
sbb
add
and
mov
add
cltd
arpl
jne
rorb
xor
push
jecxz
call
push
out
xchg
or
idiv
rcll
pop
inc
stos
mov
les
adc
adc
push
dec
add
adc
aam
and
es
ret
call
stos
add
repnz
and
add
mov
xchg
jo
clc
or
or
nop
je
cmpb
loop
cmp
and
cmp
mov
sub
js
and
sbb
add
fldt
cwtl
iret
pop
rorl
mov
test
add
adc
fmull
fisubl
faddl
in
and
shl
daa
test
pop
out
loopne
fiaddl
jne
mov
rorl
dec
nop
mov
or
add
add
or
cmpsb
movsb
test
mov
in
add
sbbb
fs
jmp
testb
sub
pop
sarb
enter
nop
loopne
mov
lock
lods
inc
mov
in
cmp
sub
push
push
ret
push
add
js
arpl
push
mov
jno
push
mov
das
aam
or
sbb
add
divl
pop
cmp
insl
call
or
into
daa
jae
pop
sbb
pop
add
jb
je
dec
or
adc
push
or
mov
outsb
cmp
ret
mov
xchg
pop
inc
ljmp
sbb
in
push
sbb
rcll
aaa
int
sbb
subb
cli
xchg
push
mov
xor
dec
rcll
sarb
pop
cmp
sub
jnp
dec
sbb
test
hlt
and
xor
popf
jp
es
adc
cltd
mov
inc
cmpsb
jnp
pop
stc
test
les
xor
adc
add
int3
push
into
ljmp
pop
popf
cwtl
add
mov
mov
hlt
sub
xchg
inc
xor
mov
add
das
mov
adc
mov
or
mov
ds
imul
add
test
inc
dec
je
xchg
lods
or
ficoml
xchg
cmp
imul
pop
mov
loopne
adc
js
add
sub
mov
imul
dec
je
inc
rcll
cmp
adc
add
xlat
dec
add
in
sbb
addl
movsl
push
das
dec
pop
mov
shlb
mov
sub
adc
movups
xor
loope
int3
inc
test
jl,pn
decl
daa
sbb
jle
lret
mov
out
in
or
dec
adc
mov
mov
orl
fnstenv
mov
push
sub
loop
fmuls
cmp
lret
inc
pop
clc
cld
rep
int
pop
or
jne
pop
adc
add
push
fmuls
dec
or
aaa
lcall
or
jne
xchg
and
stos
adc
or
jo
js
dec
xor
sub
xor
mov
push
dec
repnz
sub
mov
jg
mov
adc
call
add
clc
and
enter
ljmp
sub
je
push
adc
and
and
pop
mov
xchg
add
stc
add
mov
test
lret
cmp
mov
fbld
xor
add
dec
push
sahf
mov
loopne
push
mov
lahf
xorl
je
jmp
push
sbb
add
xor
ds
dec
add
lds
cmpl
sbb
popa
cmp
cli
and
orb
xor
leave
sbb
adc
xchg
mov
in
rolb
das
push
push
mov
jp
ret
and
jne
cltd
jb
dec
push
pop
push
xchg
ljmp
cld
scas
add
or
sbb
inc
rorb
cs
out
or
scas
shrl
and
hlt
scas
cmp
lahf
mov
add
test
repz
mov
cmc
cwtl
imul
push
orb
dec
dec
pop
decb
push
mov
ret
out
aam
clc
ds
iret
mov
and
cs
aaa
inc
lock
cmp
sub
insb
or
pop
pop
pop
and
and
dec
and
xchg
add
lret
insb
icebp
pop
xchg
mov
jnp
das
adc
adc
insl
das
pop
push
adc
jle
cmpsb
mov
mov
dec
enter
add
cmp
pusha
adc
mov
push
and
stos
and
push
mov
and
and
hlt
and
dec
jle
push
xchg
in
jle
fldl
adc
sub
mov
xor
pop
jg
js
addl
add
dec
dec
or
dec
inc
mov
mov
sub
push
inc
dec
adc
jnp
inc
adc
cmp
pop
or
add
shrb
sbb
fld
sub
jl
int
jo
das
xchg
or
mov
push
xchg
mov
in
jno
adc
fcoms
jmp
sbb
cmpl
jg
mov
outsl
lret
dec
xor
mov
mov
sbb
dec
xchg
and
pop
xchg
sub
popa
addr16
push
pop
xor
add
cmp
sarl
push
je
sti
push
xchg
add
cmp
mov
fistl
addr16
int3
mov
sbb
pusha
leave
andl
adc
pop
lcall
lcall
inc
xchg
out
cmpsl
out
shlb
iret
and
adcl
and
adc
or
mov
inc
jecxz
insb
lea
cltd
pop
mov
decb
insb
cmp
adc
nop
inc
add
fisttpll
in
pop
pop
cltd
lds
push
pop
sub
inc
add
cltd
mov
or
mov
pop
or
adc
adc
sub
ret
nop
stc
or
push
dec
mov
mov
addl
push
aad
push
mov
adc
xchg
mov
or
js
mov
adc
and
lea
out
insb
xchg
jno
jbe
add
jo
xchg
mov
inc
and
jns
cmp
mov
mov
aad
inc
les
sti
add
lods
ja
sub
push
jecxz
aas
push
or
mov
xchg
dec
pop
jmp
loope
rorb
sarl
or
repz
adc
loopne
shr
sbb
xchg
lret
add
bound
add
lods
sbb
mov
add
adc
call
or
popa
adc
loope
mov
pusha
pop
sbb
sbb
sbb
out
adc
aas
sub
inc
or
lds
push
pause
mov
add
in
in
movb
clc
gs
and
std
adc
je
add
adc
imul
sbb
iret
xchg
xchg
sbb
loope
insl
jo
movaps
addl
adc
add
push
lock
sub
dec
inc
push
or
nop
mov
fcoml
mov
jmp
shrb
andl
daa
xor
lea
sub
aas
and
pop
dec
je
shll
jecxz
or
insb
xchg
mov
inc
jmp
xor
mov
jnp
add
into
hlt
scas
aam
xor
test
je
pushl
add
push
cmpsl
jo
les
dec
filds
scas
ljmp
pop
push
sub
jno
sbb
xchg
icebp
mov
inc
jl
das
fmull
push
mov
lods
lds
leave
leave
cmpps
rclb
or
jg
sbb
ret
cmpsb
cmpsl
push
push
pop
insl
loopne
inc
add
push
popa
sbb
and
ss
nop
subb
lcall
mov
mov
sbb
push
sbb
lds
in
and
xor
jle
jo,pn
fbld
fdivs
cmpb
cld
or
pop
cmp
pusha
mov
adc
lds
adc
inc
and
data16
fadd
or
mov
lret
xor
jmp
xor
mov
arpl
nop
fst
inc
mov
icebp
ret
les
xchg
jne
pusha
lods
in
inc
jl
cmpl
in
pop
shl
unpcklps
in
jb
jl
sbb
jo
ret
test
fcompl
es
scas
push
orb
and
orl
aaa
lods
daa
in
adc
scas
adc
clc
hlt
mov
shrb
jp
loope
outsl
or
clc
xchg
add
insb
ljmp
out
adc
and
repnz
mov
xchg
sbb
cld
adcb
mov
sbb
mov
test
out
leave
xor
adc
je
cmpb
sub
mov
insl
sub
jo
mov
or
xchg
push
lds
insl
imul
cmp
or
es
aas
aaa
sub
jb
movsb
fildll
sbb
outsb
outsl
ja
pop
adc
mov
pop
push
jne
cmpsl
and
aas
xchg
inc
xor
and
je
and
je
lret
pop
add
jo
popa
stc
je
gs
and
or
gs
movsb
dec
popa
imul
insb
sbb
jnp
lret
adc
cmp
jne
xchg
jo
shlb
xorb
dec
xchg
xor
jae
ds
fs
sbb
and
cltd
xchg
ret
mov
pop
and
test
jg
jl
lcall
push
xlat
dec
lods
lahf
and
xor
mov
subb
push
sub
hlt
inc
push
mov
icebp
daa
dec
outsb
imul
ja
sub
ret
mov
jnp
repnz
xor
adc
and
jl
call
and
rclb
out
jl
push
push
mov
cmpsl
stc
mov
mov
insb
and
sub
divl
or
jmp
push
not
mov
je
sbb
push
je
xor
and
push
fsubrs
pusha
xor
add
pushf
in
cmp
sbb
sbb
ds
push
dec
mov
add
ds
adc
add
xchg
push
jne
lds
jae
dec
and
mov
push
sti
sbb
je
dec
mov
out
cmp
in
pushf
xor
data16
and
fiaddl
lcall
inc
enter
lcall
mov
popf
outsb
es
popa
jb
or
andl
mov
lock
adc
adc
or
lods
xorl
jo
mov
add
fsubrs
aam
fcomps
mov
and
in
cwtl
addr16
sarb
mov
int3
aaa
jge
ss
mov
xchg
das
in
jge
sarb
sarb
test
nop
imul
aaa
jge
mov
je
sbb
lods
aaa
jge
leave
pop
jb
test
mov
movsb
aaa
jge
insl
nop
and
mov
aaa
mov
mov
pushf
cmp
mov
add
outsb
mov
faddl
cwtl
inc
shrb
pop
adc
lods
sbb
stos
mov
push
aaa
cmp
sbb
push
hlt
jp
aam
dec
sbb
adc
dec
inc
ja
or
or
outsb
nop
cwtl
movsb
jb
dec
nop
mov
xchg
pop
call
fs
scas
inc
mov
dec
mov
adc
test
movsb
enter
sub
nop
scas
dec
lock
ja
push
jno
sub
cmp
jb
movsb
js
dec
xor
inc
pushf
pop
je
lds
push
cmp
sub
cmp
and
fs
ret
js
jmp
sub
sub
clc
pop
insb
aad
lcall
inc
push
cs
outsl
out
inc
mov
pop
and
popa
insl
and
loope
lods
pop
mov
jb
scas
jne
mov
adc
idivb
out
push
inc
cs
dec
dec
daa
or
insb
movsl
jnp
push
sub
or
and
push
push
or
outsl
pop
jb
jae
inc
xor
das
gs
inc
dec
inc
pop
je
pop
inc
cmpsb
ja
daa
jne
lods
lock
inc
cmpsb
hlt
das
outsl
or
dec
dec
orb
gs
arpl
and
fistpll
xor
sub
xor
sub
or
test
push
incl
or
imul
outsl
jne
outsw
sarl
mov
and
jnp
push
pop
pop
dec
xchg
outsb
je
sub
or
jb
cmp
jp
subb
mov
mov
outsb
gs
daa
ss
and
shrb
shrl
sti
dec
sub
mov
cmp
imul
and
fidivs
xchg
sbb
sub
mov
gs
imul
insb
sub
je
loopne
push
xor
cld
mov
mov
shlb
dec
dec
ds
es
testb
arpl
call
pop
dec
pop
inc
pop
inc
inc
dec
dec
inc
aam
pop
xor
dec
leave
xchg
pop
leave
xor
xor
pop
xor
xchg
pop
leave
xchg
xor
leave
ss
pop
leave
xchg
pop
aaa
cmp
sbb
mov
fistpll
and
pop
fs
shl
xchg
daa
aad
adcb
inc
bound
lahf
push
inc
add
mov
xor
and
fwait
jae
mov
and
jg
jo
jns
cltd
xlat
jae
push
jne
push
mov
ljmpw
cltd
decb
hlt
aas
inc
push
dec
dec
dec
inc
cmp
test
push
mov
xor
test
or
or
dec
push
xchg
je
rcrl
sub
add
mov
inc
pop
mov
cltd
or
pop
mov
outsb
rorl
add
outsb
xchg
cltd
pusha
hlt
fildl
and
stc
and
push
cltd
inc
rorb
add
jp
adc
ss
inc
dec
data16
and
hlt
and
int3
enter
enter
loopne
fcmovnu
fcmovu
lret
loopne
jecxz
in
pop
sub
lcall
mov
popa
je
xor
xor
xor
xor
ss
loopne
pushl
cmp
inc
inc
inc
inc
inc
inc
xchg
popf
lcall
bound
push
or
das
int
sbb
push
in
js
lea
adc
lods
adc
adc
jns
cmp
pop
into
push
xchg
or
aas
ss
es
cmp
repz
inc
cmp
inc
dec
push
pop
repz
rep
je
test
repz
mov
iret
repz
int3
aam
stc
cmp
repz
hlt
cld
add
out
sahf
cmpsl
or
sbb
sub
out
sahf
xor
inc
dec
push
pop
pushf
fsubrl
js
cmpsl
add
add
xor
repnz
dec
xor
enter
sbb
aam
popa
test
dec
inc
mov
bound
test
pop
mov
leave
enter
gs
mov
andl
xor
xchg
pop
pushf
jecxz
push
mov
shl
lock
repz
adc
xor
pop
push
js
cwtl
movsb
mov
enter
add
icebp
sahf
add
adc
add
lcall
int3
push
enter
cli
call
dec
arpl
test
pushf
jbe
testl
adc
jnp
push
testl
out
icebp
out
call
pop
cmp
sbb
int
mov
xchg
pop
out
push
xchg
iret
mov
jmp
jns
leave
outsb
mov
data16
push
add
out
jns
adc
dec
xor
push
push
pop
jmp
xor
movsb
mov
pop
pop
test
lods
cmp
ds
push
cld
addr16
xchg
nop
test
out
push
mov
lahf
and
lods
push
mov
xor
in
loopne
mov
xchg
sbb
mov
mov
pop
or
push
jmp
and
sahf
adc
jl
dec
sahf
out
popf
push
out
and
mov
aam
out
mov
mov
lock
je
out
cmp
ljmp
out
push
cmpsl
pop
jg
lods
xchg
xchg
and
aam
outsl
xchg
ljmp
dec
idivl
xlat
out
sbb
pop
push
xchg
cld
ja
int3
cmp
je
mov
fwait
subb
movups
mov
jo
pop
dec
popf
jle
mov
addb
or
cmc
and
and
ljmp
subb
add
pop
add
mov
push
adc
xor
push
nop
add
xor
add
inc
xor
add
cmp
add
inc
add
dec
xor
inc
push
nop
add
xor
in
cmp
xchg
aaa
pop
mov
push
add
inc
push
or
ret
inc
ds
dec
push
dec
inc
imul
out
pop
xor
aaa
xchg
pop
add
imul
or
xchg
add
adc
or
and
nop
xchg
and
insl
or
cwtl
adc
adc
jbe
dec
cli
lea
xor
cmp
pop
push
inc
adc
add
pop
inc
sub
mov
or
add
sbb
enter
mov
pop
orb
adc
xchg
cmpsb
add
sbb
mull
or
lock
xchg
dec
jmp
add
iret
scas
push
sub
sub
mov
pop
inc
dec
xor
out
lret
adc
push
test
xlat
sub
adc
inc
and
push
pop
fimuls
pop
push
dec
inc
and
inc
push
push
mov
or
shrb
sahf
aaa
rorl
popa
add
pusha
sahf
and
sbb
dec
dec
mov
js
inc
dec
sub
cs
xchg
push
jno
adc
push
aas
xchg
sub
jb
jb
sbb
mov
dec
fimuls
sub
jo,pn
insb
push
sub
cli
add
cmp
dec
sub
cmp
sahf
out
outsl
xor
add
out
repnz
adc
and
setl
cmp
and
popa
push
daa
enter
inc
lcall
repnz
enter
sbb
nop
out
cmp
xor
or
mov
les
inc
jbe
fs
adcb
pop
adc
in
cli
xor
adcl
cs
repnz
sarl
sbb
cmp
cmp
repz
jo
xchg
lods
cmpsl
stc
cmp
aam
add
sahf
out
sahf
sbb
cmp
pusha
je
sahf
out
mov
sahf
out
ljmp
sahf
out
inc
push
bound
fnstsw
out
sahf
lods
mov
out
es
add
push
xor
out
push
inc
pop
pop
insb
andb
ror
loop
enter
adc
insb
ds
dec
repz
repz
push
iret
repz
mov
in
or
out
lcall
jns
out
pop
insb
xchg
out
cli
or
jns
out
push
cmp
out
sahf
out
mov
jns
shl
repnz
outsl
and
cmp
repz
pop
push
xchg
repz
repz
shl
repnz
mov
outsb
push
xor
repz
repz
mov
stc
cmp
fdivp
add
sbb
out
sahf
sub
dec
push
push
add
loopne
jns
in
jb
push
sub
sahf
out
sahf
dec
pop
fs
sahf
jns
out
stos
mov
xor
out
cli
or
sub
repz
ss
dec
push
push
cmp
repz
movsb
mov
out
decb
je
sub
out
sahf
out
jp
xchg
stos
lahf
out
sahf
mov
adc
iret
repz
xor
push
push
js
cmpsb
mov
iret
loop
adc
ss
jne
dec
push
pop
push
jo
mov
repz
lcall
out
lcall
jns
out
insb
jl
movsb
mov
jns
out
shl
in
clc
iret
repz
add
sbb
cmp
iret
repz
outsb
adcb
mov
into
jbe
iret
repz
push
jns
xor
push
jb
nop
sahf
lods
xchg
cmp
mov
jns
out
push
push
sbb
xor
out
sahf
out
fs
xchg
sahf
out
sahf
pushf
scas
mov
iret
sarl
sbb
inc
push
repz
repz
jo
xchg
test
repz
mov
out
add
cmp
mov
sub
push
iret
repz
pusha
je
xchg
test
lcall
add
jns
out
and
inc
dec
pop
out
sahf
out
jp
lcall
lret
lock
cmp
sarl
push
sub
dec
repz
repz
push
xchg
cmpsb
mov
out
sahf
out
add
and
inc
jns
out
push
push
jns
out
mov
pushf
ja
testb
push
sub
pcmpgtd
test
mov
fsubr
inc
or
cmp
cmp
jbe
mov
iret
repz
fdivp
or
jns
inc
pop
insb
test
jns
out
mov
fdivp
xchg
movsl
xlat
adc
orl
mov
adc
aad
loope
add
cmpsb
imul
jo
cmp
sub
add
das
pop
in
push
mov
imul
inc
je
and
aad
insl
sbb
outsl
arpl
or
dec
into
sbb
pop
push
xchg
imul
push
jne
jns
push
bound
fnstcw
cmp
sbb
add
add
enter
fs
sbbb
xlat
adc
cs
ds
adc
notl
lods
das
dec
jmp
loop
inc
aaa
movsb
push
add
or
pop
cltd
adc
data16
sub
movsb
xor
xchg
jns
mov
shlb
popa
push
pop
lock
inc
push
popa
mov
fwait
gs
fstps
loopne
jo
rolb
push
jb
popf
sub
and
xchg
mov
ljmp
jns
daa
fsubrl
or
inc
sub
cltd
and
push
push
xchg
outsl
insl
mov
pusha
icebp
imul
sbb
bound
pop
orb
loope
mov
ficompl
push
adcb
popa
pop
pop
jb
mov
popa
fs
push
adc
xor
add
outsl
add
and
dec
data16
push
out
fidivl
ja
pop
fs
popa
sbb
mov
push
mov
cmp
pop
push
cmp
xor
test
scas
jno
adc
clc
shrb
gs
xorb
xchg
popa
mov
fbstp
cs
mov
gs
outsl
mov
dec
cmp
fsubrp
gs
push
inc
jbe
jo
jae
xchg
or
inc
subb
mov
mov
ret
mov
in
leave
mov
inc
icebp
pop
pop
addr16
dec
mov
daa
repz
inc
xor
xor
or
push
insl
aaa
nop
inc
adc
test
sbb
xor
icebp
mov
arpl
jnp
sub
add
ss
mov
mov
push
nop
dec
loope
lods
add
push
pusha
loopne
lds
sti
push
push
insb
pcmpeqd
mov
xor
inc
shlb
inc
mov
and
mov
lea
inc
bound
mov
mov
jbe
push
out
push
gs
pop
or
jns
iret
out
push
add
pop
inc
imul
fadds
or
or
aas
cmp
imul
mov
inc
orl
pop
lods
outsb
bound
pusha
xchg
xor
sub
pop
rep
cmp
sti
pop
dec
pop
mov
arpl
add
bound
or
daa
dec
mov
adc
idivl
jo
dec
ja
xchg
sbb
sub
inc
pop
ret
adc
lahf
add
mov
popa
mov
pop
push
movsl
test
pop
adc
add
popa
xor
pop
jae
xor
sub
ja
inc
notl
scas
sub
loope
dec
inc
sbb
jmp
pusha
pop
adc
cmp
add
mov
push
push
fcomps
sahf
mov
rcll
daa
mov
imull
inc
pusha
stos
or
insl
inc
and
and
inc
cmp
xlat
jae
nop
push
xchg
movsb
sbb
je
add
sbb
pshufw
or
movsl
inc
cmp
pop
aas
mov
cmpsl
or
add
pusha
mov
jo
aaa
mov
inc
xor
addr16
ret
gs
mov
fsubs
stos
add
xchg
inc
insb
push
mov
add
adc
dec
or
out
shlb
imul
test
push
lods
insl
add
mov
xchg
dec
es
dec
push
xor
push
imul
ja
sub
dec
inc
popf
push
popa
bound
daa
inc
mov
push
pop
mov
or
cwtl
jb
mov
dec
or
in
pop
dec
mov
pusha
inc
inc
push
ficomps
sbb
sbb
push
cmp
popa
imul
ljmp
jns
je
and
mov
das
sub
sub
xchg
sub
jo
push
nop
and
inc
inc
inc
not
jno
iret
sub
arpl
and
lods
add
push
dec
xor
or
dec
sbb
mov
xchg
ss
push
cwtl
xchg
push
aaa
mov
jae
dec
pop
arpl
ficompl
jecxz
pop
aas
inc
xor
sbb
jbe
sbb
popa
jo
push
cmp
adc
mov
iret
and
stos
imul
mov
lahf
pop
and
loopne
mov
dec
dec
pop
dec
sbb
lcall
jmp
mov
shll
aad
daa
push
gs
frstor
push
pop
dec
data16
stos
and
inc
es
pusha
pop
psubsw
cmp
sub
daa
divl
or
xchg
inc
roll
dec
divl
adc
sbbl
in
jae
fsts
jbe
inc
pop
xchg
inc
and
insb
jo
icebp
mov
xchg
or
adc
push
fs
adc
ret
shl
mov
imul
fisubrl
push
jb
jae
js
sti
or
pop
daa
inc
ret
ljmp
sbb
jo
outsb
jne
adc
jb
imul
aam
sbb
lods
inc
sub
inc
push
push
dec
ja
fs
jae
push
xorb
and
cmp
xlat
pusha
mov
aam
movsl
sub
ss
clc
das
outsb
scas
mov
dec
adc
sbb
pop
inc
in
pop
pop
jo
shl
mov
in
push
sbb
jecxz
sbb
or
jb
and
xorb
icebp
pop
or
cs
jns
cmp
cmp
inc
pop
jbe
add
subb
test
inc
push
outsl
pusha
shlb
inc
xlat
insl
cli
adc
push
sbb
mov
sub
icebp
pop
sti
push
mov
lahf
mov
xchg
lea
pop
aaa
lods
insl
pop
pop
push
push
lds
outsl
push
push
sub
and
outsb
lds
mov
imul
data16
sbb
add
fsubs
push
es
jmp
in
jae
dec
decb
mov
arpl
sbb
sbb
adc
sub
popa
push
xchg
jns
pop
stos
mov
repz
cmp
dec
jae
mov
and
sub
jae
jnp
add
and
fs
nop
inc
mov
mov
nop
imul
pop
ret
outsl
addr16
es
lock
mov
mov
es
and
sbbw
sbb
push
adc
dec
imul
aaa
push
test
fcoms
jnp
mov
inc
jb
and
test
pop
pop
sub
push
cmp
cmp
in
sub
bound
mov
pop
xchg
pop
xlat
outsb
pop
adc
jb
or
sarl
mov
pop
outsl
inc
mov
scas
xor
lods
mov
inc
daa
dec
xchg
jb
xchg
jg
adc
movsl
lods
imulb
xchg
pop
jno
in
and
pop
mov
xchg
push
jae
je
mov
cmpsl
shll
out
pop
pusha
sub
mov
popa
aas
rclb
adc
dec
sti
cmp
mov
or
xor
inc
inc
sbbb
insl
xchg
push
xor
je
inc
jno
sbb
xchg
or
xchg
dec
sbb
cmp
dec
popa
sbb
mov
pop
mov
pop
daa
cmp
adc
and
jnp
xchg
insl
adc
mov
fcmovb
loop
or
inc
xchg
in
mov
sbb
pop
inc
fs
fldl
sbb
pop
add
je
pop
pop
mov
imul
mov
pop
push
mov
jo
repz
mov
cmpsb
fildl
pop
inc
daa
and
mov
fcmovne
and
inc
mov
sbb
jecxz
or
and
imul
rcrb
xchg
fisubrs
or
insl
and
mov
dec
inc
outsb
pop
ja
fwait
lods
stos
pop
dec
je
lcall
arpl
sbb
repnz
add
fs
cmc
mov
fldenv
add
pop
fsubl
dec
test
cmp
push
aam
data16
cwtl
mov
sub
jge
cmpsl
sub
lret
aaa
pop
adc
daa
sbb
insb
xor
mov
add
mov
js
insl
jbe
pop
push
cmp
das
inc
pop
mov
cmp
in
sbb
ja
and
aad
or
dec
pop
mov
xor
push
sub
inc
repz
sub
pusha
outsb
xor
stos
sbb
sarl
loope
ja
dec
jo
dec
stos
xor
inc
pop
xchg
mov
pop
inc
jecxz
stos
lcall
scas
dec
fildl
mov
subl
push
cmp
insb
jo
stos
roll
scas
or
rcpps
and
stos
mov
arpl
out
pop
add
sub
cmp
dec
aam
mov
adc
adc
es
fs
outsl
mov
mov
jl
jbe
add
mov
jmp
inc
and
mov
lods
cmp
adc
and
dec
and
inc
rcll
shrb
sub
cmp
push
xor
jl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
clc
ljmp
insl
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
clc
xor
dec
sub
pop
xor
outsb
xor
jle
xchg
mov
xchg
xor
pushl
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
dec
xor
pop
xor
xor
xor
pushl
in
xor
xor
xor
xor
mov
lret
aaa
test
lds
stc
aaa
add
cmp
cmp
cmp
data16
jns
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cwtl
ds
sarl
ljmp
aas
adc
pop
aas
es
sub
cmp
aas
mov
nop
or
xor
pop
xor
incl
mov
aaa
xor
jae
jg
xchg
mov
xchg
outsb
sub
xor
inc
xor
dec
xor
pop
xor
xor
clc
call
xor
xor
xor
xor
sbb
and
aaa
and
aas
fcompl
jbe
mov
shlb
xor
xor
cmp
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
bound
jbe
jl
xorl
mov
jnp
xchg
ss
jne
int
nop
mov
push
mov
imul
or
xor
jg
loop
out
in
mov
add
mov
lahf
sub
push
push
pop
jl
inc
repnz
outsl
mov
add
inc
xor
dec
addr16
pop
enter
stos
jge
leave
insb
sbb
lods
mov
leave
addr16
aam
push
cltd
dec
nop
cmp
out
sbb
or
shlb
push
xor
jns
fcompl
andb
iret
rorl
test
shlb
cmp
and
push
dec
dec
jo
or
add
and
jo
mov
dec
dec
inc
and
stc
cs
in
sahf
and
jl
xchg
outsl
cwtl
dec
hlt
daa
rol
test
xchg
sub
int
add
xor
test
add
stc
dec
and
mov
xor
scas
lods
mov
add
dec
add
ja
xor
add
pop
inc
das
arpl
inc
and
sbb
jnp
push
es
pop
dec
cmp
mov
dec
dec
dec
mov
jae
add
pop
adc
xchg
in
inc
push
negb
icebp
fidivl
mov
lcall
dec
push
mov
xor
enter
mov
jo
mov
mov
xor
inc
lcall
mov
cmpsb
push
inc
jg
add
iret
imul
add
repnz
ds
repz
add
cmc
out
sahf
out
notb
sahf
out
sahf
clc
movsb
stc
int3
cli
hlt
repz
jns
mov
cld
inc
iret
repz
std
insb
xchg
mov
scas
in
scas
xchg
add
push
addr16
filds
dec
push
dec
repz
int3
inc
cmp
fdivrs
je
push
ds
dec
cmp
mov
mov
dec
push
out
dec
fimull
dec
mov
out
rclb
dec
mov
cs
loopne
movsb
inc
xchg
xchg
int
inc
or
cmp
add
sarb
dec
xchg
dec
dec
lcall
adc
out
test
lods
and
xchg
push
add
int
ror
insb
push
dec
cld
out
loopne
hlt
push
mov
mov
out
mov
pop
dec
sub
or
pop
adc
adc
in
filds
sub
call
sbb
jg
push
cli
push
adc
iret
repz
sti
cmp
fs
mov
mov
fmull
jg
lcall
adc
push
leave
mov
insb
push
leave
jae
jl
movsb
leave
jae
cmp
int3
test
movsb
cmp
hlt
mov
or
push
and
mov
call
push
push
fwait
clc
pushl
and
push
dec
dec
dec
push
inc
push
or
dec
cmpsb
jb
addr16
cmp
and
aad
xchg
mov
and
adc
aaa
jae
jb,pn
push
mov
es
and
jbe
mov
cmp
mov
push
popa
cs
jmp
arpl
add
adc
add
push
mov
cmpsb
push
pushl
divl
sbb
cmp
arpl
jl
xchg
aaa
sbb
das
cmp
pop
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
push
xor
cmpb
ds
pushl
pop
aas
jle
sarl
xchg
push
cmc
xor
xor
jmp
sub
bound
shll
sbb
xor
inc
ss
ss
scas
sar
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
mov
push
ds
ds
cmp
dec
mov
ds
ds
sbb
dec
aas
push
aas
jle
mov
aas
sarl
aas
ljmp
int
jg
push
in
push
xor
xor
push
xor
mov
xor
jg
xchg
ljmp
hlt
xor
xor
xor
xor
xor
xor
xor
hlt
call
add
adc
es
inc
xor
clc
sub
popf
xor
addr16
incl
mov
ss
jecxz
adc
sbb
aaa
inc
aaa
dec
aaa
insl
aaa
xor
aaa
out
aaa
adc
cmp
repz
incl
xor
xor
das
ret
test
cmp
cmp
cmp
cmp
in
cmp
inc
jnp
call
xchg
ds
ds
ds
loop,pt
jmp
pop
movsl
ljmp
xor
xor
xchg
xor
xor
xor
xor
jg
ffreep
shlb
xor
xor
xor
sbb
and
inc
xor
cld
xor
outsl
jle
xor
into
xor
out
out
xor
pushl
dec
arpl
insl
ss
mov
xchg
ss
shll
in
ss
ss
aaa
xor
pushl
dec
aaa
push
aaa
addr16
jae
xorb
aaa
fbstp
jmp
clc
aaa
or
adc
and
sarb
cmp
cmp
pop
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
cmp
cmp
jbe
jle
xchg
mov
xchg
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
shrb
cmp
pop
push
pop
jbe
jle
std
cmp
cmp
cmp
cmp
cmp
data16
popf
cli
jmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
cmp
jmp
cmp
pop
cmp
outsb
cmp
jle
mov
xchg
cmp
cli
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
push
cmpsl
jle
cmp
cmp
cmp
cmp
cmp
int3
cmp
cmp
cmp
mov
cmp
mov
xchg
cmp
cmp
cmp
into
inc
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
es
ds
push
cmp
outsb
cmp
xor
cmp
cmpsb
cmp
mov
cmp
out
cmp
jle
inc
mov
ds
dec
aas
das
jp
data16
jbe,pt
jle
xchg
mov
sahf
ds
imulb
mov
out
out
idivb
ds
aas
push
aas
push
aas
push
into
cs
ss
ds
call
aaa
std
inc
aas
dec
aas
push
aas
cli
data16
outsb
aas
jbe
xchg
mov
xchg
aas
sahf
dec
aas
cmpsb
aas
scas
aas
mov
mov
aas
aas
fidivrs
out
out
aas
idivb
outsl
dec
dec
push
or
inc
push
bound
push
xor
xor
aam
xor
dec
mov
push
dec
data16
jbe
jle
xchg
mov
xchg
xchg
pushl
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
dec
xor
pop
xor
outsb
xor
jle
xchg
cmp
decl
xor
xor
xor
xor
xor
xor
incl
or
xor
xor
xor
xor
xor
xor
xor
call
clc
data16
adc
ss
dec
loop
pusha
ljmp
js
xorb
xor
mov
mov
xor
aad
cld
jmp
xor
clc
xor
adc
add
ss
cli
jg
cmp
inc
and
pop
ss
ss
mov
jmp
mov
inc
enter
fdivs
loopne
call
ss
pushl
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
aas
outsb
mov
nop
aaa
cwtl
aaa
mov
aaa
mov
aaa
shlb
fdivs
loopne
call
scas
shll
add
push
cmp
cmp
cmpb
cmpsl
incl
nop
cmp
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
or
sbb
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
jmp
cmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
incl
cmp
or
or
adc
adc
sbb
sub
dec
cmp
push
cmp
pop
cmp
cmp
loopne
ljmp
cmp
cmp
sarb
cmp
cmp
cmp
cmp
decl
xor
cmp
adc
adc
sbb
sbb
and
and
sub
cmp
pop
cmp
scas
add
jmp
cmp
cmp
cmp
push
mov
mov
mov
cmp
pop
sarb
aam
fdivrs
in
jp
call
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
pushl
cmp
cmp
cmp
jle
sbb
and
sub
xor
cmp
decl
cmp
jl
cmpb
cmp
movsb
cmp
sarb
filds
in
call
sub
decl
pop
test
xor
cmp
dec
ds
decb
loopne
jl
test
mov
mov
nop
ds
jp
mov
add
jg
ret
in
call
ds
ds
cmp
fistps
cmp
inc
aas
inc
out
dec
aas
push
aas
push
aas
pop
aas
pop
aas
mov
aas
jo
nop
aas
cwtl
aas
pushf
aas
mov
je
decl
into
mov
mov
aas
hlt
aas
clc
aas
cld
mov
ficomps
mov
xor
xor
adc
adc
and
pop
add
dec
xor
pop
xor
xor
int
fisubrl
test
lods
xor
xor
les
enter
or
or
adc
cld
fistps
xor
and
and
sub
cmp
pop
xor
xor
mov
js
jl
xorb
adc
pavgb
lock
sbb
sbb
and
and
sub
sub
xor
cs
pushl
cmp
push
xor
xor
xor
ljmp
xor
loopne,pt
in
call
xor
decl
dec
xor
push
xor
pop
xor
xor
lods
xor
xor
les
enter
cmp
cmp
cmp
rcll
sbb
jo
cmpb
sbb
cmp
aas
cmp
mov
and
mov
das
nop
or
xor
clc
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
xor
decl
xor
xor
ss
fnsave
in
in
aaa
cmc
aaa
clc
std
aaa
bound
xchg
cmp
mov
cmp
cmp
push
cmp
cmp
cmp
sbb
ds
aas
cmpsl
test
or
xor
push
xor
into
xor
aaa
mov
inc
ss
add
push
aaa
les
lret
cmpsb
cmp
adc
sbb
subb
inc
sub
xor
cmp
inc
cmp
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
test
sarl
push
cmp
cmp
xchg
xchg
cmp
cmp
cmp
cmp
xchg
cwtl
cmp
pop
shrb
jle
or
pop
sbb
push
xor
jg
jmp
xor
xor
popf
xor
xor
xor
out
push
xor
push
ds
mov
lds
xor
ljmp
add
ds
aaa
shll
cmp
cmp
scas
repz
cmp
cmp
outsb
cmp
mov
or
das
xor
cmpsb
cmp
adc
das
adcb
test
clc
aas
clc
mov
cmp
xlat
ds
aas
sbb
and
or
sbb
aas
sub
clc
lcall
xor
mov
xchg
xor
xor
call
xor
jecxz
loopne
xor
data16
pop
xor
xor
lock
xor
ss
xor
sbb
adc
out
ret
sub
pop
ss
ljmp
and
xor
inc
aaa
pop
cld
ja
pop
aaa
mov
lods
aaa
mov
mov
ljmp
pushl
shll
xlat
aaa
fidivs
in
jmp
aaa
add
pop
cmp
cmp
cmp
pop
push
mov
push
xor
push
cmp
pusha
cmp
jb
daa
mov
push
mov
mov
clc
out
inc
loopne
add
or
adc
xor
jnp
lock
clc
sub
cmp
cmp
je
lods
cmp
and
decl
push
test
hlt
cmp
cmp
cmp
cmp
cmp
stc
cmp
cmp
mov
aad
loope
cli
sar
dec
cmp
sub
xor
xor
jmp
cld
xor
insl
xor
xor
xor
xor
bound
xor
lret
pop
test
subb
dec
mov
mov
jl
adc
out
cmc
xor
ss
inc
popf
sarb
xor
jo
test
or
scas
or
ja
mov
ds
arpl
lret
xor
sbb
push
enter
fwait
cmp
cmp
loopne
push
pop
mov
nop
cmp
mov
xor
lcall
inc
add
lock
or
clc
cmp
cmp
cmp
cmp
cmp
cmp
pop
cld
scas
inc
adc
add
dec
cmp
cmp
cmp
cmp
cmp
orl
push
sub
inc
mov
movsb
cmp
cmp
add
movsb
sarb
push
popa
adc
in
push
clc
cmp
mov
mov
cmp
clc
clc
bound
push
cmp
fs
cli
add
sub
pushf
cmp
jg
lods
cmp
rolb
jle
cmp
or
or
adc
mov
push
sbbl
and
das
mov
push
arpl
outsl
jp,pt
cltd
mov
push
mov
fnstsw
out
in
mov
or
and
sub
aaa
mov
inc
pusha
aas
push
je
inc
add
xchg
jle
jb
cmpsl
imul
out
aas
idiv
loopne
inc
cld
pop
addl
xor
xor
outsl
xor
push
mov
push
scas
mov
ljmp
call
mov
cltd
xor
xor
xor
pop
mov
shl
xchg
addr16
xor
inc
add
fisttps
push
xor
jb
jge
orl
call
xor
mov
mov
xor
inc
dec
div
push
add
push
ss
inc
cld
push
sbb
xor
ss
ss
stos
icebp
xlat
scas
loop
pop
ss
add
test
adc
fwait
mov
cli
mov
or
shlb
fldl
ss
dec
or
movswl
pushl
adc
pop
aaa
and
jp
cmp
cmpb
pop
sahf
mov
mov
mov
mov
adc
adc
clc
out
ret
and
and
sub
sub
xor
cmp
loop
out
cmp
lods
lret
fdivrs
fsubrl
cld
outsl
pop
clc
in
call
mov
xor
cmp
cmp
inc
cmp
test
fimull
xchg
cmp
ret
lods
fcmovnu
xor
add
cmp
xor
inc
dec
ret
test
shrb
and
insb
call
pushf
arpl
dec
rcll
cld
or
dec
pop
cmp
xor
mov
ds
mov
jno,pt
jg
movsl
aas
aas
ljmp
popa
aas
outsl
mov
sbb
push
into
add
sub
push
xor
xor
mov
test
mov
mov
mov
xor
jg
add
adc
daa
push
xchg
cld
jno
repnz
xor
aam
insl
xor
xor
or
pop
sbb
xchg
aam
jmp
dec
cmp
mov
mov
cmp
mov
jg
cmp
cmp
cmp
cmp
cmp
cmp
fcmove
cmp
cmp
cmp
ljmp
add
loope
jmp
cmp
cmp
cmp
cmp
and
aas
dec
aas
dec
scas
aas
clc
push
aas
pop
aas
pop
jle
aas
imul
jne
jns
jge
cmpl
mov
aas
sbb
pop
mov
push
sahf
xor
andb
dec
jnp,pt
into
cltd
sar
mov
fidivs
loop
out
ljmp
pushl
cli
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
test
call
xor
mov
gs
scas
jns
jge
xorl
cltd
ss
ret
icebp
in
movsl
ss
pop
cmp
out
cmp
pop
mov
scas
ret
push
cmp
pushf
ret
inc
mov
ds
sbb
push
and
in
aad
mov
xor
push
xor
mov
mov
ljmp
xor
xor
outsl
xor
xor
xor
xor
xor
xor
or
xor
cmpsb
cmp
mov
xor
pop
xor
xor
jno
ja
and
push
incb
cwtl
movsl
push
mov
decl
in
hlt
xor
xor
or
adc
adc
xor
and
sub
cmp
inc
cmpsb
push
cmpsb
adc
sahf
xor
mov
xchg
xor
and
xlat
xor
push
aaa
outsb
xchg
loope
xor
inc
cli
pushf
aaa
cmp
mov
repnz
stos
adc
lret
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
xchg
push
add
cmp
inc
add
shlb
push
popa
sahf
ljmp
inc
je
ss
aad
mov
call
mov
mov
scas
pop
ds
ds
je,pt
js
addb
fwait
inc
mov
ds
aam
pusha
int
dec
fcoml
outsb
and
mov
lcall
js
jl
cmpb
data16
add
mov
dec
sbb
filds
aam
fdivrs
fdivrl
loopne
in
call
push
cld
cmp
cmp
sbb
mov
xor
add
cmp
push
push
ljmp
test
mov
nop
cs
xor
rorb
xor
arpl
aaa
or
clc
xor
sub
xor
mov
inc
xor
push
push
dec
ret
test
mov
nop
pop
pushf
xor
test
data16
in
stos
jo
sbb
clc
xor
jle
mov
cmp
inc
xor
dec
inc
push
xor
mov
push
js
mov
push
test
lods
inc
mov
mov
sub
rol
out
lret
pop
pop
pop
into
adc
sbb
xor
mov
push
shlb
jecxz
sbb
ficompl
iret
jae
xor
mov
stos
dec
cld
outsl
inc
mov
xor
xor
xor
xor
out
mov
scas
inc
xor
xor
xor
xor
xor
xor
xor
jmp
js
jl
xorb
mov
xor
xor
xor
xor
cmpb
pushl
xor
xor
inc
xor
out
lret
sbb
ja
dec
dec
and
fimuls
dec
push
shll
and
sub
movsb
and
push
push
xchg
lcall
xor
je
jl
test
mov
xchg
and
movsb
sub
dec
xor
aam
int3
ds
faddl
out
inc
in
divb
or
push
aaa
sbb
sub
inc
xor
jl
test
lcall
pushf
test
movsb
inc
lods
inc
mov
movsb
es
push
int3
push
xchg
lcall
pop
out
les
in
aaa
lock
aaa
cld
aaa
dec
cmp
cmp
push
cmp
lcall
cli
dec
cld
inc
rolb
int3
cmp
lcall
push
ret
or
test
mov
mov
nop
adc
es
fidivrs
lcall
and
daa
cltd
aam
and
inc
ret
outsb
sar
je
js
jl
cmpb
rorb
insb
inc
cwtl
pop
push
fmull
dec
clc
sbb
call
cmp
sbb
bound
cmp
data16
push
push
cmp
cmp
jb
mov
shlb
cmp
push
ret
push
cmp
lds
push
adc
movsb
xchg
clc
stos
dec
pushf
bound
sub
dec
clc
push
push
mov
or
inc
sub
mov
xchg
pop
fwait
je
popf
cmp
adc
sub
push
outsb
and
cmc
cmc
in
aas
pop
into
pop
push
jge
xor
aas
shlb
jmp
outsl
xor
aad
sbb
sbb
jb
ja
mov
xchg
cmpsl
lcall
cld
mov
mov
xorb
pop
scas
imul
dec
inc
daa
scas
mov
mov
or
or
xorb
pop
dec
jp
mov
xor
mov
sarb
and
clc
mov
cmc
cmp
and
xlat
cmp
xchg
ret
stc
scas
lcall
mov
popl
mov
jg
adc
and
dec
cli
jb
ja
test
pop
test
mov
filds
stc
or
adc
aas
dec
xchg
popa
jo
mov
movsl
aas
mov
insl
and
sarb
add
iret
je
jp
push
mov
add
xchg
es
outsl
lcall
pop
cs
add
xor
xor
rol
cmp
pop
lods
data16
xor
xor
xor
sbb
jle
xor
or
inc
and
adc
or
dec
cmp
cmp
stos
rclb
cli
cmp
mov
cmp
pop
sbb
ljmp
js
push
inc
push
mov
mov
jnp
fbstp
aaa
xor
daa
inc
adcl
add
ret
add
push
push
xor
xlat
jg
jge
aaa
jg
scas
out
mov
ja
mov
lock
cmp
ret
cmp
cmp
cmp
cmp
push
std
sbb
cmp
mov
dec
fisttps
mov
jl
pop
dec
sbb
clc
jecxz
cmp
or
and
xor
rclb
scas
insb
xor
xor
xor
lds
mov
pop
ss
mov
dec
sbb
cmp
cmp
loop
push
clc
push
cmp
xor
cmp
mov
movsb
jge
imul
sbb
mov
adc
pop
add
sahf
aas
out
add
and
fidivl
out
bnd
or
roll
xor
xor
cmpsb
inc
xor
mov
mov
xchg
push
cmp
xor
xor
adc
dec
mov
xchg
lret
fbld
stc
ljmp
icebp
incl
push
leave
ss
aaa
jge
lcall
cmp
loop
cmpsb
popf
cmp
add
rcr
push
cmp
cmp
cmp
cmpsl
imul
jo
jbe
popf
xor
repz
xor
push
inc
loopne
xor
jno
jne
jns
jge
push
frstor
loope
xor
adc
dec
pop
mov
jbe
sub
mov
ljmp
dec
fidivs
loop
adc
xchg
cmp
cmp
cmp
cmp
cmp
xor
orb
xlat
sub
arpl
pop
mov
std
ds
pop
aas
mov
dec
nop
fimuls
clc
sub
xor
loop
xor
in
mov
xor
data16
ljmp
imul
jae
ja
jnp
jg
xorl
mov
hlt
xchg
ljmp
mov
sub
scas
bound
xor
stos
cs
fdivs
cmp
addb
mov
call
cmp
cmp
fidivrs
or
mov
add
mulb
cli
stos
mov
xor
lea
mov
and
or
push
sti
push
sbb
cmp
adc
ds
mov
ds
lea
adc
or
adc
xor
push
outsb
mov
invlpg
xchg
ja
stos
cmp
les
mov
pop
xor
push
xor
test
xor
aad
out
ss
ss
cmp
inc
cmp
xlat
negb
clc
xchg
add
jecxz
sbbl
mov
xor
xor
adcb
push
mov
lcall
mov
jns
lahf
push
lods
push
and
and
sub
pop
jg
outsb
sbb
jp
xchg
xor
mul
mov
pushl
or
sbb
es
adc
adc
or
lahf
pop
pushf
xor
xor
xor
xor
xor
mov
push
pop
rolb
add
je
pop
cmp
adc
icebp
fucomp
and
jb
xor
cmp
adc
adc
dec
xor
bound
pushf
xor
add
rorl
xor
or
pop
aam
inc
xchg
mov
push
in
pop
push
stos
or
sbb
sahf
add
pop
rolb
ss
lea
sbb
xchg
ljmp
mov
cmp
push
xchg
ds
lret
and
or
pop
clc
dec
cmp
push
sahf
test
cmp
cmp
outsl
add
mov
cmp
cmp
add
subl
call
cmp
cmp
cmpsb
ret
ja
inc
lea
jnp
shr
cs
shlb
movsl
inc
xor
sub
inc
adc
out
bound
sbb
xor
jle
or
ficompl
mov
sahf
mov
test
inc
cmpsb
push
xor
js
xor
dec
sbb
xchg
je
dec
test
filds
dec
fmul
push
ss
or
jmp
lcall
ja
and
aaa
xchg
aaa
sahf
push
into
cmp
stos
bound
cmp
sahf
cmp
fidivrl
jo
notl
jb
mov
test
xlat
xor
pop
push
movsb
cmp
cmp
cmp
call
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int
cld
pop
push
cmp
cmp
cmp
cmp
cmp
dec
mov
sbbb
or
rolb
push
dec
cmc
dec
sti
in
ljmp
out
sub
push
sahf
jmp
cmpsl
pop
jecxz
sahf
ljmp
ljmp
aam
in
push
ljmp
ret
sbb
mov
or
add
mov
dec
lods
outsb
mov
lcall
add
inc
orl
aaa
aad
push
fs
jo
nop
or
mov
add
cmp
cs
enter
xorl
xor
dec
jge
mov
xor
xorb
add
loopne
stc
sub
lea
pop
sbb
sahf
xchg
out
rcl
pause
rcrb
cmc
push
mov
and
imul
pop
xor
cmp
xor
xor
xor
xor
xor
xor
lret
mov
and
inc
mov
mov
xor
jmp
cmpsb
xchg
xchg
ja
decb
inc
mov
repz
movsb
clc
fwait
jg
mov
ss
add
adc
aaa
push
aaa
pop
aaa
je
call
aaa
mov
push
cmp
pop
cmp
cmp
mov
cmp
mov
push
loope
or
sete
mov
mov
push
and
cmp
cmp
cmp
xor
mov
mov
pop
or
mov
lcall
sbb
pusha
jecxz
cs
inc
mov
mov
mov
rorb
add
pusha
loopne
aaa
mov
arpl
loopne
add
dec
inc
xor
fdivrl
and
cwtl
lret
sarb
aaa
rorb
ret
test
movsl
jecxz
aam
jmp
repnz
and
out
add
xor
push
sar
cmp
loopne
and
xor
lods
adc
xchg
stos
out
xchg
mov
out
or
jmp
outsb
jae
filds
out
idivl
adc
int
shr
dec
sbb
bound
xchg
into
loope
sbb
push
repnz
cmp
or
push
jecxz
insl
mov
pop
repnz
in
xor
mov
call
xchg
lds
loop
xor
jno
sub
mov
loope
pop
push
ret
xor
add
xor
xor
pop
inc
ds
pop
or
and
add
bound
add
in
add
inc
add
mov
lea
outsb
dec
cmp
cmp
and
mov
cmp
jecxz
loope
lret
stc
cmp
imul
xchg
cmp
cmp
sbb
cmp
cmp
jecxz
sbb
ds
ds
xor
lcall
mov
aas
loope
add
dec
imul
xor
ljmp
push
pop
add
mov
insl
jge
mov
cmp
cmp
push
mov
mov
out
ja
cmp
scas
jmp
lods
outsb
loopne
push
adc
ja
or
inc
adc
adc
idivb
fsub
out
mov
add
testb
inc
stos
shrb
push
pop
xor
int
test
jmp
outsb
mov
push
ret
mul
xor
xor
push
mov
lret
push
fildl
inc
orl
mov
sub
cmp
call
jne
dec
call
loop
adc
mov
ds
aad
jl
mov
enter
jmp
js
cmp
cmp
cmp
sub
push
cmpsl
pop
iret
add
inc
inc
mov
test
or
or
fisubs
xor
sub
lret
xor
inc
lcall
cmp
or
mov
loopne
push
or
mov
cmp
pop
jg
ret
mov
xlat
cmp
inc
adc
jge
fimuls
pop
cmp
outsl
dec
xor
aas
mov
xor
inc
add
adcl
or
pop
ss
inc
movsl
mov
xor
cmp
and
jbe
rcrb
push
add
lock
imul
arpl
adc
mov
ja
repz
pop
fsubrl
loope
jl
test
test
stos
scas
aaa
divb
xor
xchg
mov
out
stos
inc
cmp
lcall
dec
popf
call
fbstp
mov
data16
add
xor
push
or
test
lret
push
ss
pop
outsb
les
dec
cmp
jbe
mov
dec
xchg
stos
fcmovb
cwtl
cmp
cmp
push
cmp
rcrb
jb
cmp
cmp
cmp
or
add
and
aas
cmp
push
xchg
sbb
mov
inc
rol
xchg
mov
ljmp
cli
cmp
outsb
and
push
outsb
sbb
dec
mov
addr16
sbb
fcompl
cmpb
xchg
cmp
ljmp
ror
repnz
mov
inc
sbb
pop
add
mov
movsl
loop
sub
fisttps
fcoml
ret
aas
sarb
fimull
mov
push
fcomi
cmp
jnp
xchg
sbb
dec
mov
push
add
divl
sbb
sub
test
xchg
lret
jb
or
cmp
test
cmp
xor
test
lahf
fbld
xor
into
mov
and
ljmp
adc
and
push
icebp
inc
pop
mov
mov
push
lcall
xchg
inc
stos
rolb
jmp
mov
mov
daa
outsb
lea
mov
aaa
and
mov
cmp
cmp
cmp
mov
sub
xor
mov
sub
pop
and
xor
cmp
notb
neg
loopne
je
jb
cs
sbb
mov
data16
add
fwait
jle
xor
cli
out
orb
sbb
scas
add
xor
ret
rclb
mov
or
jmp
or
sbb
and
sub
mov
push
add
imul
add
xor
push
add
jp
ljmp
xor
or
fmull
or
xor
push
or
jecxz
jge
movsb
lods
xor
mov
mov
fsubrl
inc
cld
pop
fsubr
jmp
divl
mov
cmp
outsb
mov
jl
xorl
mov
ss
dec
pop
mov
mov
mov
fidivs
in
repz
out
and
into
and
sub
inc
and
cmp
inc
lcall
arpl
push
jno
js
xchg
lea
fwait
aaa
mov
ret
add
mov
lcall
jb
inc
cmp
push
cmp
data16
mov
mov
dec
mov
aad
add
in
testb
lcall
push
les
xor
bound
je
xchg
stos
cmp
push
stos
cmpsb
shl
in
bnd
push
adc
mov
jno
push
add
repnz
arpl
jne
xchg
xchg
push
cmpsb
outsb
inc
and
cmp
cmp
inc
and
add
add
push
xchg
add
dec
cmp
insb
or
or
push
test
inc
push
inc
jl
rcrb
cltd
aas
stos
cmp
xchg
enter
dec
xchg
or
pop
xor
cmp
jecxz
incb
dec
xor
jp
xchg
or
aam
scas
mov
lret
xor
stos
cmc
aad
roll
fisubl
xor
xor
pop
push
mov
cmpsb
jae
xchg
xor
pop
push
lods
lret
pop
stos
andl
push
cmpl
cmpsb
push
dec
pop
mov
aad
push
mov
xor
rcl
xchg
pop
int3
xor
sahf
frstor
test
pop
test
jle
xor
pop
mov
push
test
cmp
jnp
stos
or
adc
adc
inc
pop
fisubrl
cmp
inc
mov
inc
sbb
mov
je
jo
jp
test
xchg
icebp
aaa
push
cmp
cmp
loop
cmp
es
test
mov
insb
repz
sub
je
jl
lods
xchg
aam
inc
pushf
rcll
fdivrl
sub
divb
std
xor
push
ds
cmp
cmpl
aam
mov
mov
mov
sahf
mov
inc
in
data16
push
cmp
pop
into
jl
sbb
sub
cmp
inc
inc
test
dec
sub
jae
mov
dec
push
cmp
jne
pushf
or
les
testl
ret
jno
jns
fwait
mov
std
or
push
add
arpl
inc
and
add
mov
push
mov
add
sbb
inc
jno
pop
lock
mov
dec
cmp
xchg
fs
add
mov
daa
mov
xchg
or
lods
cmpsl
rcl
loopne
or
xor
aaa
and
bound
push
mov
cmp
es
push
les
subb
adc
or
or
inc
pop
or
inc
or
xchg
push
mov
fwait
pop
pop
bound
and
mov
push
mov
cmp
lods
sbb
fcmovu
adc
pop
test
and
call
stos
or
ds
mov
pop
mov
imul
clc
inc
mov
aas
in
jmp
adc
aam
or
mov
subb
inc
mov
xor
rolb
push
pop
test
push
scas
xchg
mov
pushf
adc
add
or
pop
pop
ss
popa
pop
out
xchg
mov
enter
and
or
add
sub
push
sarb
jo
xor
inc
stos
xor
jecxz
and
mov
push
xchg
ds
std
xchg
cli
mov
ljmp
data16
push
adc
ret
dec
xor
xchg
mov
fidivrl
loope
cmp
cmp
scas
cmp
cmp
ss
cmp
cmp
push
or
push
mov
ja
mov
ds
ret
loop
mov
push
scas
mov
mov
aas
jg
xchg
add
addb
ret
mov
out
and
aas
sti
inc
sbb
lret
sbb
mov
xchg
loopne
xor
fiaddl
push
xor
xor
push
outsl
xor
pop
xchg
movsb
add
movsb
jb
xor
and
inc
rorb
adc
or
mov
xor
mov
cmpsb
aaa
lods
pushw
jo
add
sub
xor
cmp
jl
mov
mov
adc
push
cmp
pop
cmp
push
outsb
xchg
pop
test
mov
cmp
sarb
lcall
cmp
mov
int3
sub
mov
pop
imul
ds
push
stos
pop
loope
std
adc
add
or
or
adc
sbb
sub
push
lods
inc
pushf
mov
mov
add
add
xchg
ja
stos
xor
xor
or
out
dec
and
data16
fnsave
add
inc
testb
movsl
xlat
out
ficomps
pop
int3
inc
divb
aaa
adc
xor
xor
push
ss
lods
faddl
je
push
push
mov
jecxz
inc
push
mov
sbb
mov
mov
xor
data16
cmc
jne
cs
adc
daa
sarb
push
cld
loop
cmp
xchg
es
sbb
and
ret
push
inc
push
push
inc
jne
jnp
subl
cmpb
cmp
mov
cmp
popa
mov
sub
test
mov
andl
xorl
pop
sbb
dec
push
inc
push
ret
js
lock
add
enter
sbb
or
sbb
faddl
xchg
loopne
mov
rcl
jecxz
cmpsb
push
xor
xor
mov
lock
sbb
or
push
jl
ss
dec
loop
sbb
loope
xor
sub
push
dec
pop
mov
cmp
sbb
jp
dec
add
call
push
dec
loopne
push
xorb
cmpsb
repz
aas
xor
pop
pop
loop
aas
outsb
xchg
aas
mov
mov
aad
clc
jb
jp
add
out
pusha
add
lahf
dec
les
or
sub
or
test
pop
andb
adc
xor
mov
jnp
xchg
rcl
cmp
movb
loopne
stos
sbb
xchg
xchg
xor
les
add
pop
mov
mov
leave
shrl
loop
out
subb
scas
jb
mov
jle
cli
sub
mov
ss
push
stc
shlb
or
push
adc
stos
xor
mov
dec
adc
xor
je
add
mov
inc
add
dec
repnz
mov
add
push
add
push
xor
scas
push
push
add
sbb
push
add
ret
sub
push
jle
add
mov
push
mov
jp
andb
inc
ljmp
push
cmp
scas
mov
add
mov
hlt
rorl
lret
mov
popf
inc
xchg
push
sub
xor
and
pop
push
xchg
xchg
or
cmp
xor
add
test
test
cmp
inc
mov
push
sahf
arpl
jno
jns
lcall
cmp
mov
enter
inc
xor
roll
mov
lahf
ffreep
xor
inc
sbb
outsl
adc
pop
ret
push
lret
loope
push
jns
jge
xchg
cmp
mov
inc
js
loop
ljmp
stos
mov
addb
lock
pop
push
cmp
sub
jns
aam
hlt
lahf
popf
loop
xchg
loope
push
inc
and
in
sete
mov
adc
adc
xor
pop
lea
mov
mov
out
out
jmp
rdtsc
pop
xor
sub
jg
mov
es
sub
lahf
or
adc
adc
inc
test
xor
pop
add
mov
xchg
lret
sub
out
es
mov
pop
push
mov
sti
out
dec
adc
sub
push
adc
test
mov
adc
adc
aad
aaa
rolb
jmp
mov
xchg
inc
ss
cli
or
clc
ss
sbb
fdivl
popa
aaa
xchg
mov
cmpsb
mov
or
sub
pushl
dec
push
or
or
pop
cmp
movsb
aad
add
lret
adc
mov
stos
test
shlb
xlat
bound
addl
push
adc
inc
mov
cmp
bound
cs
stos
mov
stc
cmp
add
das
adc
and
cmp
cmp
ret
inc
loopne
cmp
xchg
mov
lret
cmp
lcall
stos
cmpsl
rclb
and
cmp
dec
inc
adc
and
test
lock
xchg
iret
dec
push
pop
jp
inc
inc
in
mov
in
data16
stos
andl
push
mov
xchg
xor
xor
xor
xor
cmp
mov
dec
ret
cmp
cmp
imul
adc
push
push
jp
adc
mov
sahf
mov
cmp
cmp
ja
lds
xchg
idiv
xor
cmp
mov
lret
orb
aam
and
push
add
adc
mov
add
or
dec
cmp
add
in
arpl
cmp
sahf
inc
cmp
out
xchg
lcall
cmp
cmp
sub
mov
lret
in
imul
pushl
pop
push
push
adc
cli
xor
pop
ljmp
int3
cmpsb
stc
jp
push
and
inc
push
and
or
mov
mov
inc
pop
ret
out
mov
push
outsb
int3
push
lret
push
cs
mov
mov
sbb
mov
ljmp
xchg
mov
lahf
outsb
xor
jb
xor
mov
xor
xor
pavgw
xor
cld
ljmp
ss
fbstp
icebp
adc
loop
jno
xchg
daa
cmp
loop
cmp
movsl
sbb
cmp
negb
test
sahf
daa
push
fldl
ds
sahf
rorb
test
sarb
adc
add
and
cmpsl
imul
iret
pop
push
push
push
mov
xor
mov
xor
bound
into
je
cli
xor
mov
push
movsb
lcall
scas
cmp
sbb
inc
sarl
push
or
aad
pusha
sahf
mov
pop
scas
sub
inc
add
xor
add
fisubrl
xor
xor
sbb
hlt
loop
gs
jl
xor
xor
ljmp
std
sbb
ss
push
ljmp
mov
inc
dec
adc
arpl
shlb
lea
cmp
cmpsb
out
mov
cmpsl
lock
xor
add
mov
adc
mov
cmp
push
filds
scas
ss
push
add
mov
sbb
sbb
push
jb
dec
xor
xor
mov
pop
xor
add
mov
add
pop
cli
out
testb
sbb
xchg
les
pop
insb
pop
adc
jg
mov
loop
cmp
scas
add
loope
sti
pop
insb
xor
adc
cmp
loopne
roll
inc
es
and
xor
dec
xor
inc
psubusb
adc
add
or
push
sub
icebp
jecxz
mov
ja
mov
xor
icebp
push
adc
jmp
inc
ss
jp
ss
ss
inc
subb
loope
push
out
gs
or
aaa
out
aaa
or
cmp
je
scas
sub
dec
mov
add
mov
lock
sub
jb
xchg
mov
popf
out
adcl
lret
add
xor
lea
xlat
aad
push
ds
leave
cmp
scas
inc
daa
stos
and
push
shll
push
stos
lahf
nop
shl
and
jecxz
cmp
jo
jl
push
mov
in
xor
xchg
test
lcall
rolb
rcrl
scas
cs
jp
mov
ds
lret
mov
jp
add
or
fidivs
mov
sub
outsb
sahf
xor
adc
lahf
pop
fsubrs
jno
xchg
jo
xor
jp
cmp
or
cmp
je
jo
dec
jno
mov
lea
jge
repz
inc
sub
pop
cmpsw
aas
lods
lahf
shll
aas
cmc
aas
std
repz
rol
decl
xor
xor
pop
inc
xor
insb
adc
rolb
mov
call
loop
jo
andb
dec
stos
xchg
cmp
xor
or
sub
js
leave
add
jo
mov
out
outsb
aaa
jle
xor
out
xchg
fwait
aaa
loope
aaa
cmp
pop
mov
cmpl
or
addl
cs
xor
sbb
test
out
dec
push
lahf
ds
movsb
push
inc
outsb
cli
cmp
add
push
mov
pop
addr16
sub
inc
pushw
xor
jb
das
mov
pop
xor
jb
xor
ss
xor
mov
inc
xor
push
adc
mov
mov
hlt
ss
push
pop
pop
inc
subb
push
stos
es
incb
xchg
push
dec
push
fidivl
int3
inc
inc
rol
dec
push
pop
cmp
orb
push
subl
xor
jbe
sbb
pop
adc
cmp
ljmp
cmp
and
inc
ds
mov
insb
push
mov
fsubl
inc
test
adc
arpl
dec
push
lret
fs
add
pop
adc
xor
push
push
mov
bound
push
xchg
pop
stos
mov
pop
mov
mov
xchg
xor
lcall
xor
push
lods
add
and
sub
movsl
inc
mov
aam
inc
aaa
push
xlat
divl
jmp
xor
lea
mov
leave
shr
xor
xchg
push
dec
xchg
hlt
dec
cld
push
add
xchg
mov
jb
ret
out
cmp
sub
pop
xchg
insb
addb
mov
mov
sub
push
loop
cmp
fcomp
inc
jo
je
rclb
popa
push
imul
mov
xlat
jmp
jecxz
add
sbb
and
aas
ss
push
adc
pop
orb
adc
mov
xor
and
dec
clc
xchg
xchg
push
mov
add
rorb
mov
cmp
sub
add
xorb
adc
adc
xor
inc
mov
rolb
fsubrl
jle
xor
aam
out
push
xchg
sbb
into
sub
mov
inc
loop
ds
adc
jl
jo
xor
fimull
loop
inc
sbb
pop
mov
jmp
mov
sub
inc
aaa
dec
into
lds
roll
and
push
aaa
adc
jb
sub
out
fisubrs
inc
push
push
xlat
push
and
push
xchg
rcrb
jne
sbb
test
repnz
das
xchg
js
out
fdivp
sub
mov
insl
mov
xor
subl
bound
cmp
ds
xchg
push
inc
xchg
mov
xchg
inc
pop
scas
xor
repnz
xor
sub
jg
jno
xor
or
xor
pop
dec
les
dec
adc
push
jne
std
adc
aaa
push
aad
cmp
fwait
cmp
js
xchg
push
add
add
push
addr16
xchg
bound
jle
call
xchg
mov
ffree
adc
xor
test
xor
jp
outsb
lret
test
and
mov
fidivrl
fwait
stos
rorb
cmp
cmp
jecxz
je
mov
cmp
sub
fisubs
mov
jecxz
fisubrl
xchg
or
es
add
cmp
negb
aaa
sbb
pusha
scas
ss
aaa
sahf
sarb
inc
adc
adc
jno
push
ret
popa
cmp
cwtl
inc
xchg
and
jecxz
jle
xchg
cs
xchg
mov
int
cmp
cmp
push
add
mov
push
jmp
scas
repz
out
adc
pop
and
jg
push
xchg
xor
sti
sbb
sub
jp
dec
push
sbb
adc
jnp
xor
and
xor
cmp
sub
sbb
sub
clc
mov
lea
inc
xorb
xor
mov
adc
popa
inc
rclb
mov
lods
fimull
xchg
sbb
pop
pop
push
inc
pop
inc
push
popa
mov
aaa
pushf
push
xchg
es
enter
pop
xor
js
nop
xor
stos
xchg
loope
pop
or
cmp
mov
mov
mov
push
aam
sub
sub
xchg
jnp
xor
inc
daa
cmpsb
je
mov
leave
lret
int
adc
dec
cmpsb
jb
cmp
insb
lret
aam
mov
sub
xchg
clc
loop
jle
cmp
jnp
stos
shr
lahf
cmp
aaa
jne
adc
add
adc
inc
push
jl
roll
je
sahf
mov
daa
cmp
mov
push
lea
jmp
cmp
lcall
or
dec
ds
inc
push
xchg
mov
fstpt
fistps
jo
ja
mov
les
xor
lea
aam
push
add
sbb
xor
xor
out
imul
mov
mov
xor
inc
pop
inc
sahf
jns
test
cwtl
mov
movsl
jo
mov
xchg
lock
mov
rolb
subl
les
and
es
xor
ljmp
ds
or
loope
loop
xor
xor
out
dec
pop
add
jbe
jp
pop
loopne
pop
mov
xor
xor
lcall
out
stos
xor
xor
xor
cmpb
mov
push
scas
and
loop
ljmp
data16
testb
or
mov
mov
imul
test
mov
and
imul
test
add
add
sub
dec
das
jb
jne
lea
push
mov
push
or
js
dec
sub
inc
js
add
into
cmc
dec
and
dec
lea
loop
ljmp
inc
cli
roll
mov
ret
dec
inc
and
inc
int
data16
mov
frstor
cmp
lretw
call
loop
dec
dec
sbb
and
stos
add
ljmp
mov
add
cmp
cmp
push
movsb
sbb
and
sub
xor
cmp
ds
inc
mov
movsl
push
push
push
pop
pop
dec
xchg
jp
jp
mov
inc
imul
sub
xchg
or
xchg
into
push
pmulhuw
add
adc
addb
scas
add
dec
sub
or
es
aad
inc
cmp
sub
outsb
aas
jb
xchg
adc
lcall
push
add
nop
xchg
sub
mov
addl
ljmp
cmp
push
mov
andb
adc
rcrl
or
sbb
pop
mov
fdivrs
add
mov
stos
scas
jo
inc
test
push
fnop
pop
test
bound
cs
xor
int
outsb
mov
xor
adc
sbb
ja,pt
fbld
popf
cmp
sub
sbb
inc
stos
jmp
dec
inc
adc
mov
pushf
dec
shlb
bound
pusha
js
je
icebp
jns
inc
xor
test
xor
je
dec
stos
xor
xchg
testb
stos
mov
test
pop
xor
mov
xor
fsubrp
sub
stos
dec
xor
xor
es
and
sub
jne
cli
xor
dec
ss
sub
js
lcall
sahf
sbb
fcoms
pop
pop
ja
rcrb
outsb
ja
stos
sarb
mov
and
adc
cli
xor
fidivs
fwait
dec
fmull
fnstcw
jecxz
loopne
adc
repnz
cmp
adc
mov
add
xor
mov
pop
stc
sub
mov
test
push
sbb
mov
shrb
cmp
xor
mulb
and
jp
or
xor
movsl
shlb
cmp
dec
loope
pop
jmp
cmp
cmp
sub
and
lods
pop
into
mov
or
cs
test
pop
mov
test
dec
bound
mov
push
fistl
add
mov
adc
adc
sub
dec
aas
fmulp
jo
push
xlat
outsb
or
popf
dec
jmp
or
cmpsb
push
xor
test
cmpsb
adc
or
inc
xor
xor
push
fdivr
cmp
xchg
out
pop
ss
inc
pop
aad
pop
data16
add
test
dec
cmp
cmp
inc
sub
cmp
stc
fildl
pop
jns
lods
ds
add
mov
add
rclb
inc
cs
add
mov
or
repz
sbb
les
pop
or
cmp
inc
dec
addr16
mov
mov
xchg
stos
negb
mov
fdivp
decb
xor
add
xor
mov
sarl
rcrb
xor
inc
or
xor
test
cmp
mov
and
mov
sahf
pop
inc
imul
ret
ljmp
dec
cmp
cmp
ss
mov
fisttps
mov
ds
scas
aas
aas
lcall
cmp
add
mov
jo
pop
aam
sbb
xchg
jne
dec
inc
pop
adc
mov
ja
xchg
call
xchg
push
sub
xchg
pop
ljmp
aaa
test
aad
bound
subb
ficompl
push
test
bound
or
rorb
aad
xor
lea
push
sub
dec
fidivl
mov
pop
out
inc
stos
dec
popf
mov
adc
jg
sub
testl
pop
cltd
cmp
rolb
pop
lea
pop
lcall
sub
jo
sarl
mov
or
cmp
push
add
sbb
rolb
ret
mov
push
pop
loopne
incl
adc
xor
xorl
xor
cmp
sarl
loop
cmp
cli
mov
xor
xor
xor
xor
xor
pop
or
dec
jns
sub
outsl
add
pop
jle
sub
cmp
mov
ljmp
add
ret
lret
adc
fistpl
sbb
push
dec
cs
aaa
ja
cwtl
cmpsb
mov
xor
xor
rcll
mov
xchg
push
negb
ds
aaa
push
cmp
and
mov
push
in
xchg
mov
jg
pop
js
adc
lcall
pop
jg
sbb
jb
aaa
pusha
lods
scas
and
and
sahf
sub
mov
ds
ds
aas
cmp
and
xor
dec
fmull
mov
ds
xor
sbb
orb
dec
push
sub
push
cmc
data16
dec
adc
lcall
std
aad
mov
xor
xor
or
test
pop
or
shlb
xor
mov
dec
rcrb
adc
push
add
daa
mov
shrl
cmc
bound
push
cmp
xchg
cmp
movl
pop
subb
or
ret
xchg
inc
push
cmpsl
es
lcall
cmp
jle
loop
and
sbb
add
sub
mov
addb
ret
fsubp
mov
inc
pop
jo
cli
sbb
and
push
sub
dec
mov
adcl
push
fildll
notb
jmp
pop
push
jb
or
loopne
cmp
mov
mov
fdivrs
test
jo
cmp
mov
scas
xchg
or
std
test
sub
das
cmp
ds
or
sub
mov
rclb
pop
dec
add
inc
fs
fidivs
jne
lcall
add
leave
and
fadds
and
jmp
dec
inc
pop
faddl
sub
jl
out
sbb
xchg
lcall
push
fildll
lret
xor
xor
mov
repz
inc
jl
je
shlb
pop
rcl
stos
adc
inc
or
andb
add
stos
cmp
notl
push
sbb
aaa
xlat
loop
pop
push
mov
fisubrl
out
jp
mov
out
xor
jb
fmull
pop
jmp
dec
daa
cmp
pop
add
test
arpl
dec
ja
mov
int
mov
hlt
and
xlat
and
sub
pop
mov
xor
inc
jne
or
adc
jg
cltd
mov
loop
inc
push
jmp
add
mov
pop
sbb
ljmp
sbb
outsl
cli
cwtl
dec
push
test
cli
ficompl
mov
dec
popa
loopne
push
stos
and
cmp
or
ds
in
mov
cmpb
sahf
push
add
add
cs
push
fldl
cmp
sub
andl
adc
or
mov
int3
pop
sbb
add
ja
mov
push
sub
lcall
addb
inc
pop
lahf
and
inc
add
stos
outsb
in
pop
sbb
push
add
sahf
xor
push
inc
cmpsb
cmpsb
rcr
pusha
mov
pop
xor
lock
mov
mov
fcoml
pop
inc
xor
mov
jbe
lcall
sub
xor
jne
dec
sub
daa
or
xchg
int3
ds
sbb
dec
insb
xchg
rorl
jne
ja
adcl
mov
or
jecxz
and
shr
cmpsb
and
rcrb
jb
ret
cmp
mov
out
cmp
inc
mov
mov
cmp
push
cmp
arpl
scas
mov
out
loope
jmp
fsubl
dec
adc
cli
call
add
jp
inc
fstp
fbstp
inc
and
push
push
xchg
arpl
ret
test
pop
ljmp
mov
popf
or
jo
sbb
stos
and
inc
mov
sub
mov
dec
cld
xor
xor
pop
test
jecxz
xor
mov
bound
inc
adc
repz
inc
stos
or
or
das
xor
xor
xor
lea
adc
dec
xor
imul
or
sahf
ret
push
test
push
xor
xor
ss
xor
push
sub
hlt
jbe
aaa
adc
mov
xchg
andnps
fisubs
rcrl
aaa
push
outsb
cmp
cmp
push
popa
ret
pop
cmp
lret
and
push
jp
mov
dec
ds
mov
fcompp
jecxz
or
lret
mov
add
imul
cs
xor
in
xor
jne
mov
push
mov
lcall
jbe
lods
out
fsubrl
xor
cmp
fidivl
sbb
cmp
cld
cmp
and
data16
pop
add
mov
iret
nop
fcompl
xchg
xchg
xchg
xchg
mov
add
lcall
sbb
push
and
or
outsb
push
cmpsl
mov
arpl
imul
mov
lret
test
enter
out
push
jecxz
and
cmp
bound
pop
aaa
mov
dec
cmp
movsb
data16
stos
and
mov
sub
push
adc
mov
jno
mov
ljmp
ret
cmp
push
addl
mov
jb
cs
adc
ds
sarb
clc
scas
sub
or
inc
aas
shrb
inc
push
sti
loop
add
add
xor
test
sub
jb
sub
mov
or
shlb
ljmp
lea
add
adc
out
cmp
cmp
cmpb
cmpsb
push
cmp
jne
test
and
bound
xchg
or
add
lcall
push
push
push
ja,pt
stos
mov
push
dec
inc
aaa
pop
mov
pop
xor
xor
pop
jb
fstl
push
pop
mov
xchg
xor
insb
add
sbbb
stos
mov
into
bound
cmp
jle
add
outsb
xor
adc
cmp
cmp
mov
jg
jb
cmp
cmp
ds
jb,pt
faddl
fmulp
ds
pop
adc
jne
mov
popa
xor
jo
daa
lock
push
in
sar
xor
xor
mov
and
das
aaa
xor
push
add
push
mov
cmp
cmp
mov
push
xchg
sarl
icebp
ds
cmpsl
pop
adc
repnz
push
mov
ror
addb
push
xor
cmp
xchg
xor
xor
xorb
leave
lret
sbb
test
xchg
mov
sub
dec
inc
xor
pop
aaa
addr16
add
xchg
ljmp
jo
push
and
and
cmp
or
shlb
push
dec
xor
ja
push
outsl
and
or
movsl
sbb
out
cmp
pop
adc
adc
stos
and
call
adc
and
insl
xchg
mov
push
in
outsb
std
outsb
sub
test
and
data16
xor
addb
dec
sahf
xchg
test
push
dec
mov
sahf
in
ljmp
or
jno
and
mov
cmp
nop
push
lahf
out
int
jecxz
sub
mov
add
xchg
adc
adc
mov
push
push
rcrb
in
icebp
outsb
rolb
dec
push
daa
dec
pop
xor
call
jle
and
scas
stos
ds
push
and
xchg
mov
inc
xchg
aaa
call
jge
stos
xor
int
xchg
xchg
or
test
dec
outsb
mov
add
les
inc
or
int
stos
and
cmp
sbb
push
nop
test
or
in
cmp
dec
inc
adc
lcall
jge
pop
in
lcall
push
mov
scas
inc
or
xor
inc
pop
jg
and
or
test
aam
mov
loop
xor
pop
aad
and
fldcw
add
add
hlt
pop
push
cmp
cmp
gs
cmpsb
adc
and
ficoms
sbb
ja
cli
fnsave
test
sub
add
push
xlat
mov
jns
add
xor
add
jp
cmpsb
push
pop
mov
dec
sahf
mov
out
je
xchg
and
pop
rorb
test
ret
aaa
int3
xor
jae
or
xchg
xchg
mov
mov
lcall
or
cs
bound
subb
xchg
data16
dec
icebp
and
int3
repnz
pop
push
and
or
rolb
jp
mov
mov
lret
test
cmp
mov
bound
pop
xchg
sub
inc
inc
test
je
test
sbb
jb
cmp
sbb
push
jecxz
inc
mov
and
push
mov
dec
cmp
aad
mov
pop
sbb
jno
push
fs
jle
inc
inc
adcl
adc
stos
int3
xor
pop
xlat
inc
andb
addb
test
xlat
inc
aaa
pop
sub
clc
push
xor
sub
sub
jo
or
adc
stos
sbb
add
es
cmp
add
add
or
jmp
and
add
add
mov
jmp
sbb
sub
push
jae
dec
aaa
mov
dec
sub
inc
or
and
xchg
aaa
and
and
inc
xchg
mov
cmp
inc
inc
xlat
push
adc
ret
inc
fildl
or
push
pop
dec
jns
push
in
pop
lcall
pop
xlat
jns
or
jbe
lret
mov
sub
xlat
jmp
xchg
push
push
stos
aam
cmp
fildl
mov
sub
inc
xor
gs
repz
sbb
popa
clc
pushl
addb
in
push
fwait
mov
add
xchg
fildl
movsl
sub
xchg
in
jno
fisttpll
leave
incl
jmp
fcomip
popf
jae
pop
dec
xchg
popf
cmp
jne
out
mov
mov
mov
jno
or
xorb
or
jp
mov
sub
push
mov
cmc
dec
decl
loop
and
jns
mov
sbb
pusha
in
jge
sub
faddp
pop
repnz
pop
ud0
push
jmp
pop
xchg
dec
js
inc
push
mov
inc
int3
jp
arpl
mov
dec
xor
shr
mov
lcall
aaa
add
inc
int3
sbb
mov
jp
addr16
xchg
mov
ljmp
rcrl
sarb
ret
mov
les
lods
lcall
or
sub
lret
cli
jl
mov
xchg
gs
std
iret
mov
lahf
arpl
inc
ja
pop
jb
or
jecxz
scas
gs
sbb
push
inc
mov
lcall
dec
jmp
clc
add
cmp
mov
mov
std
add
call
sbb
adc
mov
aas
pop
pop
vshufps
lcall
inc
or
jnp
aas
lahf
lods
div
js
in
mov
adc
xchg
inc
add
orb
or
dec
inc
imul
mov
insl
popa
fcmovb
mov
das
mov
cmp
idiv
test
test
xchg
adc
aam
mov
movsb
jl
jg
ja
movsl
jns
and
xlat
adc
adc
mov
push
icebp
pusha
adc
adc
in
and
test
scas
ljmp
push
pop
hlt
ja
fsts
in
sarb
sbb
in
sti
sbb
push
test
scas
test
rorl
mov
popf
loopne
out
cmpsl
cmc
ljmp
sar
mov
out
mov
lahf
push
pop
cmpps
sub
mov
out
imul
out
clc
sbb
mov
sbb
cli
ja
sub
dec
call
ja
call
jl
fsubs
mov
insl
mov
xor
and
fdivr
decl
mov
inc
lock
cmp
cmp
inc
cmpsb
in
xchg
mov
lods
movsl
mov
mov
sahf
dec
icebp
push
test
xchg
sbb
pusha
push
jp
sar
popf
mov
inc
imul
mov
pop
arpl
mov
fdivl
sub
inc
xor
mov
pushl
cmp
jne
xor
gs
ret
ljmp
aas
inc
jmp
aaa
xor
mov
add
mov
add
test
inc
or
sbb
jo
or
mov
xor
dec
jo
xor
xchg
lock
push
rcrb
inc
or
and
bound
jg
dec
mov
in
test
imul
xchg
push
and
fmuls
scas
push
les
test
sub
xorb
fmuls
mov
inc
idiv
jmp
add
cli
shl
fsub
mov
pop
dec
lds
xchg
shll
test
lcall
mov
and
adc
js
dec
and
xor
dec
repnz
aad
or
ds
inc
pop
sbb
sarl
xor
cs
and
mov
dec
int
sub
cmp
dec
mov
mov
mov
mov
xchg
inc
or
sbb
dec
pop
imul
and
shlb
add
popa
push
and
mov
jecxz
lods
xlat
xchg
or
mov
lcall
mov
and
mov
jmp
sub
jmp
adc
push
mov
pusha
and
pop
scas
cmc
sub
cs
xor
mov
call
arpl
sbb
mov
aaa
sahf
and
mov
ljmp
xchg
xchg
xor
xchg
adc
shlb
xor
sub
xchg
xchg
insl
les
pop
vpcomub
aam
imul
mov
inc
ret
sub
jg
pop
mov
lods
fldcw
dec
iret
mov
cmp
mov
roll
cwtl
icebp
cltd
mov
test
outsb
mov
xchg
call
inc
xchg
call
mov
jle
dec
dec
adc
stos
cmp
pop
pop
sub
mov
loope
outsl
fildl
jg
push
mov
incl
scas
lock
out
les
dec
inc
push
mov
sbb
inc
lods
jmp
cs
ljmp
inc
mov
fdivr
mov
cmpsb
or
arpl
leave
mov
popa
int3
fsubl
push
add
bound
xchg
mov
sbb
sub
ss
push
cs
inc
shrb
xchg
xor
dec
and
mov
call
leave
jge
das
dec
sub
pop
sub
rcll
arpl
inc
out
call
mov
xchg
mov
std
inc
and
and
mov
mov
mov
push
insb
and
sbb
in
imul
stc
test
pop
dec
ljmp
popa
xor
rcr
aaa
incl
roll
jbe
out
push
icebp
push
sub
mov
xor
fs
cmp
incl
pop
inc
xor
std
insb
xor
adc
outsb
rclb
lods
nop
xor
xchg
loope
lcall
xor
mov
rorb
push
test
xor
dec
or
aas
xor
jg
enter
ljmp
mov
mov
sub
bound
stos
pop
mov
push
icebp
lcall
cmp
push
jb
push
pop
aas
fucomi
in
jle
fidivl
push
outsl
lcall
out
lea
sbb
mov
in
fcmovnbe
mov
jne
rcl
cmp
ficoml
mov
in
jmp
aam
jno
mov
insl
cwtl
and
inc
lods
fstps
inc
sub
fistps
lcall
cld
jae
push
mov
test
add
test
add
cmp
pop
sbb
je
jmp
mov
jbe
jne
dec
mov
aam
cmpsl
jne
andb
mov
fisttpll
call
mov
pusha
les
daa
adc
pop
std
decl
clc
or
addr16
sbb
subb
sar
lcall
jecxz
imul
add
or
sar
inc
dec
fmul
or
sub
mov
dec
int
outsl
fldl
loop
lods
xchg
inc
xchg
fwait
outsb
les
cmpl
cmp
mov
sarb
not
outsl
sub
std
mov
or
enter
or
jmp
nop
jp
sti
loope
fmull
cmp
jmp
jmp
scas
mov
mov
jno
cmp
cld
xchg
adc
jecxz
push
ds
jmp
cld
popa
mov
jge
mov
push
adc
adc
mov
add
xchg
bound
jmp
cli
jg
data16
bound
xor
inc
les
adc
call
js
add
xchg
mov
pop
in
pop
add
fbld
or
jbe
push
jl
hlt
data16
pop
fisttpll
sahf
push
push
or
add
lcall
dec
xchg
lods
xor
mov
fcoml
jecxz
das
icebp
jnp
jae
cmp
clc
ja
mov
mov
cltd
ret
sbb
jno
cmc
lcall
pusha
call
icebp
jmp
sub
push
je
addb
cs
sub
incl
cmpsl
iretw
sbb
pop
popf
scas
pop
js
adc
cmp
push
cmpsl
lcall
add
add
popa
daa
repnz
lds
fstps
cli
shl
into
jg
and
sarb
lcall
addl
and
imul
fbstp
out
jmp
mov
cwtl
jno
jns
imul
fldt
sub
mov
lcall
mov
mov
xor
insb
and
mov
lcall
enter
icebp
push
cmpsb
mov
mov
mov
fcoml
sbb
cmp
loope
neg
or
lcall
popa
outsl
nop
mov
mov
mov
mov
mov
adc
lcall
cmpl
add
mov
sahf
dec
sarb
add
iret
ljmp
pop
fsubl
lret
pushf
out
xor
mov
jbe
mov
in
adc
cli
incl
cmp
call
call
out
pop
mov
pop
divl
ljmp
sti
mov
cmpsb
pop
lret
cld
cwtl
cld
inc
mov
xchg
jl
ret
cmc
mov
andb
xor
jmp
sti
movsb
mov
inc
jl
xchg
push
push
mov
out
imul
jmp
push
iret
fs
pop
cmp
insl
sti
int
pop
push
in
xor
xor
xchg
mov
fisubs
pushl
insb
in
idivb
dec
dec
out
push
mov
lret
lret
in
sbb
imul
push
mov
xor
mov
sti
mov
jae
ds
iret
mov
sub
lcall
sahf
pop
pop
fwait
js
cli
cmc
repz
divb
testl
loopne
das
bound
in
test
mov
scas
je
test
into
or
pop
cld
es
bound
and
stc
cs
jae
jns
add
sbb
or
jecxz
sbb
xchg
mov
ss
sti
adc
decl
sub
enter
in
mov
imul
data16
in
cmpb
imul
jmp
mov
cmp
jbe
ss
ss
jae
iret
sub
dec
xchg
mov
ljmp
fldenv
iret
push
out
fs
js
dec
jns
lods
adc
gs
mov
scas
mov
scas
pop
in
or
jl
lods
jnp
mov
pop
lcall
cli
jg
mov
fdivs
fists
inc
sbb
jmp
or
repnz
sbb
pushf
lods
xchg
inc
jle
push
cmp
ds
pop
fwait
jp
pop
mov
xor
xchg
cmp
test
sarb
cmpsb
sub
insb
outsb
lret
xchg
cli
lcall
out
xor
mov
pop
mov
out
into
jl
dec
cmp
loopne
test
push
push
popa
lret
int3
repz
xor
sub
xchg
sahf
in
inc
clc
and
in
int
jmp
cli
mov
adc
filds
sti
inc
xchg
out
cmp
stos
lcall
ja
loope
cmpb
ficoms
fsubrs
or
ss
pushl
sbb
lds
pop
in
cmpsl
cmp
inc
pop
add
daa
pop
adc
adc
std
ljmp
imul
sahf
out
iret
imul
inc
fistps
add
call
push
xlat
lea
xlat
fbstp
insl
imul
addr16
lods
aad
call
pop
movsl
fnstsw
pcmpeqb
mov
daa
push
or
push
jle
inc
jno
mov
dec
add
push
mov
stos
lret
stos
sbb
mov
and
lcall
ss
cmp
pop
and
fistl
lret
aad
gs
imulb
incl
pop
sub
jmp
movsb
std
ljmp
sub
push
pop
lcall
hlt
icebp
fisttpl
sbb
je
dec
pop
ljmp
pop
dec
fnstsw
jmp
jmp
pop
mov
jne
cltd
out
lahf
out
xchg
movsl
push
mov
sahf
and
mov
fcmove
repz
ret
cld
inc
mov
jmp
cmp
mov
cmpsl
ljmp
add
jmp
cmp
addr16
es
fs
sahf
or
cli
sub
fisubrl
out
call
in
push
jb
iret
pop
mov
cs
fs
incl
shl
pop
cmp
and
stc
add
xlat
scas
sub
mov
stos
or
xor
push
xchg
out
incl
pop
int
insl
scas
icebp
bound
pop
daa
pop
jmp
sarb
stos
testl
cmp
jg
xor
pop
call
pop
push
arpl
popa
scas
mov
test
mov
jge
cmc
sub
jmp
jnp
out
jecxz,pt
jo
out
aam
jns
pop
aaa
scas
jl
jle
mov
dec
pop
repz
popf
mov
lret
ds
jb
dec
ja
push
dec
aaa
stos
push
js
pushf
mov
sti
call
mov
movsb
dec
push
jge
ja
sub
jnp
popf
test
jg
push
cmc
neg
popf
in
lock
mov
gs
shlb
dec
lahf
ljmp
dec
dec
lods
out
fimuls
out
ja
xchg
call
lret
lret
lret
inc
xchg
cmpsl
sbb
cmp
incl
fidivrs
cmp
fldcw
ret
pop
mov
shlb
out
sub
into
xor
mov
fs
decl
in
xlat
les
jbe
adc
iret
pop
pop
mov
mov
cwtl
mov
mov
icebp
ljmp
ret
jae
cmc
divl
hlt
cli
ja
push
cmpb
scas
fistpll
cmp
and
lret
cmp
in
mov
ljmp
adc
ret
out
je
cmp
inc
cwtl
scas
or
mov
mov
inc
jp
sbb
fnsave
inc
fists
fs
ja
cmp
das
xlat
adc
adc
push
decl
pop
scas
scas
jmp
scas
sarl
loop
cmp
xchg
out
repnz
cmp
lock
ds
dec
mov
mov
dec
daa
push
push
roll
outsl
mov
cld
stos
inc
mov
imul
dec
push
pop
popf
out
aad
lods
push
shrl
push
roll
fs
fiaddl
lret
jge
cmp
or
lock
mov
lret
inc
or
pop
fwait
call
xor
test
pushl
cld
xchg
ds
dec
or
inc
inc
jnp
add
andl
push
daa
lahf
xchg
sbb
mov
movsb
les
pop
pop
les
out
dec
jb
stos
mov
std
gs
shll
stos
jmp
popf
scas
inc
negb
outsl
fs
mov
add
inc
xor
ja
add
mov
leave
clc
dec
sub
mov
lods
adc
mov
jmp
ljmp
xchg
pop
sub
mov
sbb
or
jg
incl
out
popa
xchg
jnp
icebp
std
adc
mov
movsl
je
dec
xor
dec
addr16
call
imulb
jnp
test
insl
int3
std
testb
sbb
jmp
pop
out
out
xor
popa
mov
repz
in
and
int
and
bound
push
call
inc
imul
jns
xor
push
and
lods
popa
mov
loope
mov
mov
in
popf
jnp
ja
pop
gs
jns
push
gs
icebp
ja
add
mov
addr16
pop
scas
cwtl
xlat
xchg
jo
adc
pop
hlt
pushl
dec
sarb
call
push
std
stc
jecxz
loop
xchg
mov
fistps
push
cs
incl
mov
fists
ret
vphaddbd
in
pushf
xlat
sysret
xor
outsl
cli
ljmp
clc
in
cmpb
xchg
mov
jecxz
bound
je
out
xchg
push
inc
mov
cmp
push
jge
cmp
fsub
aam
dec
aas
jmp
dec
sarb
lods
mov
mov
pop
bound
int3
fidivrl
mov
aaa
dec
push
and
xchg
fcomp
lret
cmp
adc
mov
test
sub
cmp
add
xchg
mov
imul
xchg
mov
ljmp
sbb
adc
xor
push
adc
dec
movsb
int3
repnz
negl
dec
adc
jg
lahf
jecxz
push
clc
push
scas
into
mov
cmp
pop
sub
andb
out
mov
adc
pop
stc
xchg
test
loope
cmp
jae
push
loopne,pt
jg
fidivl
test
jae
adc
push
push
inc
mov
jne
pushl
aam
daa
nop
cld
mov
cli
sbb
mov
aad
xchg
push
cmp
or
jge
in
push
cli
cmp
mov
jae
cmpsl
mov
push
inc
push
sub
lret
popf
scas
pop
add
jmp
repz
ret
xor
popl
loopne
sub
push
call
mov
incl
cmp
sbb
mov
scas
dec
fs
sbb
pushl
jns
notb
inc
push
xchg
loopne
jge
ret
jmp
dec
std
sbb
inc
out
ljmp
and
xchg
jle
jne
dec
jp
xor
sub
jne
jge
dec
dec
cmp
shll
jl
mov
cmp
jmp
mov
inc
mov
repnz
cmpsl
jmp
fwait
out
inc
jg
std
movsb
cmp
mov
mov
jg
decl
sarb
sbb
das
cs
pop
xor
cmp
loope
lds
decl
ss
bound
and
and
or
add
mov
pushf
lods
mov
pushl
jae
test
add
mov
pop
int
sub
mulb
or
pop
scas
xchg
xor
dec
rclb
mov
repz
xchg
dec
iret
in
fistps
push
sub
mov
stc
mov
jp
mov
xor
cmp
popf
fwait
adc
jg
stos
jg
xor
insl
xchg
lds
test
or
push
or
mov
lahf
sub
inc
clc
out
mov
ljmp
jl
mov
movsl
bound
aas
push
incl
lahf
lods
push
mov
cmp
ret
pop
cmp
pop
pushl
jno
xchg
fcomi
out
add
ret
mov
sub
in
add
in
inc
mov
cmp
jnp
and
lock
fwait
imul
sub
pop
mov
incl
fadd
sub
jmp
cltd
jns
mov
jg
inc
and
imul
popf
dec
xchg
or
pushl
jl
pop
iret
out
lock
push
mov
cltd
ds
jae
ljmp
mov
imul
mov
cltd
decb
sbb
xchg
daa
push
loop
lcall
pop
scas
xor
and
xor
aas
cmp
ret
mov
pop
pop
cmpb
aaa
or
sub
jle
push
int
cmp
out
shlb
in
cltd
jl
pop
gs
mov
jns
cltd
sub
pop
mov
jg
fnstenv
incl
or
iret
xchg
cld
mov
incl
sbb
or
lods
mov
push
push
or
pop
adc
jne
decl
orb
cwtl
outsl
jo
lds
and
clc
ljmp
mov
dec
int3
aam
push
sbb
push
mov
jp
sbb
fadd
add
sbb
decl
mov
adc
fcomps
es
enter
daa
call
cmpsb
popf
mov
imul
and
mov
jnp
lcallw
cmc
sub
out
cli
jmp
std
cld
sahf
addr16
mov
push
rcr
int3
daa
std
in
fnstsw
das
sar
xor
mov
cli
aam
fdivl
mov
sbb
ljmp
sbb
mov
testl
adc
jns
clc
call
fdivrs
jg
jp
push
push
xor
in
cmp
mov
jge
pop
cmc
cmp
clc
push
ret
mulb
mov
mov
fsubs
outsb
jae
stos
sbb
out
pop
jle
aaa
out
pop
jno
jns
decl
stos
inc
or
jg
dec
aad
or
lock
outsb
sbb
das
push
lds
sub
movsb
sti
outsb
lcall
mov
out
cmpsb
inc
fstpt
cmpsl
xchg
and
inc
lahf
lcall
lcall
idivl
xlat
pop
mov
and
out
cld
dec
pop
xchg
stos
mov
jmp
movsl
mov
bound
popa
adc
inc
adc
popa
or
lret
sub
cvttps2pi
das
lods
mov
pop
push
inc
adc
push
mov
dec
fadds
popa
push
das
hlt
ret
sub
mov
push
sbb
out
ror
cld
clc
imul
fisttps
mov
jle
xor
push
mov
pop
cmc
and
fstpt
inc
sub
ret
cmp
lcall
arpl
mov
gs
fildll
jns
fcomip
jmp
mov
cmp
jnp
sarb
movsl
pop
int
cmp
adc
int
jl
ljmp
push
int
jb
addb
outsb
call
sbb
sub
lock
adc
fmuls
popa
mov
mov
clc
arpl
jae
xchg
sbb
or
lcall
addr16
scas
lea
xor
jb
inc
pop
aaa
inc
in
jl
push
adc
push
jae
stc
stc
fsubp
push
cmp
lds
jge
aam
push
cli
push
ljmp
push
pop
push
in
test
sahf
ljmp
inc
cmp
jmp
xchg
pop
ret
lcall
in
popa
xchg
aas
pop
scas
bound
cwtl
sub
and
inc
xor
xchg
xor
movsl
fisubrl
mov
jne
cmp
inc
pop
jle
push
lds
mov
jne
in
add
sub
ljmp
clc
aas
xor
shl
mov
jmp
imul
add
mov
call
inc
pop
dec
fwait
jecxz
cmp
sub
loop
xchg
pushl
out
sub
inc
or
cli
xor
ja
in
out
pop
cmp
in
inc
mov
cmp
cmp
dec
push
xchg
push
jb
xchg
push
inc
jae
and
call
sub
fcomip
xchg
add
adc
aam
push
pop
jmp
pop
adc
pushl
imul
mov
call
add
dec
test
jg
sti
dec
mov
rcrb
jle
push
out
cmp
mov
psubsb
xchg
lcall
in
cli
xor
jl
sti
ret
test
sbb
ret
xor
daa
insl
std
jmp
cmp
popa
mov
outsb
lcall
mov
mov
enter
addr16
nop
loop
mov
jmp
testb
stos
inc
sbb
pop
lahf
scas
push
xor
pop
push
mov
sub
pushf
test
sub
repnz
xor
incl
ja
mov
xchg
sbb
daa
pushf
adc
into
xor
push
mov
daa
xchg
adc
pop
notb
addr16
lret
cld
jg
pusha
rcrl
test
lods
aad
jne
cmpsb
jns
fbstp
cmp
imul
pushl
repz
imul
sub
mov
push
ficoml
hlt
call
mov
add
loopne
xor
mov
mov
inc
adc
adcb
call
stc
pushf
cmp
push
jle
sbb
jecxz
andnps
call
cmp
bound
push
push
inc
mov
push
jbe
adc
jmp
loope
mov
cmp
xor
adcl
cmp
inc
pop
or
mov
cld
sub
mov
rcrl
jbe
jb
sub
out
in
pop
pop
jo
sar
call
mov
negb
imul
ret
test
mov
sbb
pusha
or
lcall
xchg
push
sbb
mov
mov
add
lods
mov
scas
cli
mov
pop
imul
mov
ss
dec
lret
out
add
cmp
inc
aam
cmp
test
pushf
xor
push
jmp
fsts
inc
movsl
int
xor
push
ja
pop
inc
cmp
dec
fsts
adc
inc
push
xor
int3
sahf
push
negb
jns
test
test
sub
pop
xor
gs
cmp
push
mov
inc
or
dec
mov
cmp
out
add
inc
das
add
jmp
xor
inc
aas
inc
pop
mov
and
mov
jl
mov
adc
jp
sbb
mov
jae
push
and
ljmp
ljmp
inc
push
addr16
sbb
lods
ret
movsl
mov
decl
push
out
xchg
jb
jb
mov
jne
pop
inc
push
xlat
cli
sahf
decl
cmc
push
cltd
icebp
fwait
gs
mov
lods
sarl
jbe
xor
jg
call
js
sti
mov
in
xorl
cmpb
add
mov
pop
mov
sar
pushl
popf
cld
pop
and
xchg
shlb
ss
dec
xlat
xchg
inc
push
test
out
ljmp
push
sub
gs
mov
pop
mov
mov
int
jbe
mov
ret
incl
jge
pop
sbb
mov
jl
push
ds
inc
sbb
xchg
pushf
leave
jae
mov
insl
push
lahf
lret
mov
pop
mov
hlt
nop
int
jp
daa
les
mov
scas
daa
ljmp
jl
and
rcl
sti
mov
ds
jl
frstpm(287
push
xchg
xchg
inc
aaa
xor
jg
mov
lret
cs
test
xchg
mov
xchg
mov
push
fcmovnbe
pop
mov
cmpsl
inc
jb
push
rcl
ljmp
inc
pop
es
insl
shr
jmp
std
movsl
push
ja
paddsw
pop
mov
sbb
ljmp
jb
clc
sarb
mov
aaa
mov
xor
pop
sbb
ljmp
cmp
std
jns
mov
jg
cli
repz
sbb
cmpsl
ljmp
nop
jb
sbb
aam
xchg
xchg
aam
addr16
cmp
pushf
sti
jecxz
xchg
repz
cli
shll
dec
cmp
push
arpl
aad
std
outsl
add
pushf
dec
popf
push
pop
fmul
or
xchg
cmp
pop
xor
call
inc
push
pop
je
add
leave
inc
and
lods
pop
sti
lock
or
ss
cwtl
sub
mov
jge
sbb
std
sti
adc
movd
insl
jle
sti
iretw
fstpl
fcomps
imul
cmpsb
xchg
ljmp
fnstsw
in
cmpsl
insb
lea
loop
pushl
insb
dec
insl
dec
lods
sub
fcomps
sub
jl
ret
std
sub
cmp
cmp
or
std
popa
fcmovnb
mov
fnsave
repnz
xchg
pop
adc
test
movsl
clc
mov
idivb
decl
adc
aad
xchg
les
clc
subl
xor
imul
sub
faddl
out
push
xchg
push
out
sarl
inc
aaa
push
std
data16
fadds
fisubl
jmp
sbb
inc
dec
in
stos
stc
lods
sub
pop
cmp
inc
int3
xor
dec
lcall
ja
enter
xor
repz
adc
cli
jmp
cmp
icebp
ljmp
jbe
pop
adc
enter
lahf
cmc
lcall
cld
fidivrs
scas
or
adc
dec
fcomi
loope
dec
mov
sti
cmp
call
arpl
pop
mov
roll
pop
jecxz
push
cmpsl
mov
mov
lcall
in
arpl
mov
pop
outsl
sbb
hlt
mov
sti
add
pop
mov
outsl
dec
paddd
ja
int
call
mov
jmp
pusha
mov
xchg
pop
into
inc
roll
stos
mov
fcmovne
js
jae
fmuls
pop
imul
pop
out
mov
add
mov
add
test
xor
insl
mov
ja
jns
jmp
lcall
add
add
scas
pop
int3
mov
jp
pop
ret
inc
xorl
outsl
rcrb
xchg
aad
pop
sbb
lret
lcall
add
lcall
inc
mov
sub
and
push
sbb
mov
aad
cmpb
jl
xchg
ja
pop
icebp
sbb
jle
push
or
cmpsl
sbb
popa
fldl
in
sub
inc
adc
enter
enter
sar
pushl
lods
fidivrl
out
push
jge
test
sub
pop
int3
loope
jg
lcall
repz
mov
leave
jnp
xchg
cmp
in
jg
mov
pop
mov
enter
repnz
rcll
iret
xchg
cmp
and
xor
dec
jmp
mov
int3
test
or
mov
xlat
mov
mov
insl
mov
mov
push
pop
aam
ficoml
fmulp
in
pop
inc
fstps
call
std
sub
ss
hlt
test
ja
jg
daa
sub
fdivr
jmp
in
in
adc
rcrb
push
pop
cwtl
mov
ja
jle
mov
out
jb
decl
decl
sbb
fdivrp
movsb
dec
cli
mov
lcall
bound
inc
in
mov
mov
mov
sub
ja
ljmp
mov
or
jecxz
std
imul
decl
fwait
in
mov
lods
sarl
or
movb
or
fs
popa
packsswb
push
xor
cmp
pushl
or
cmpsb
fdivrl
mov
fdivl
mov
int3
pop
aas
ljmp
cmp
ljmp
into
dec
sbb
pop
and
sbb
cmp
incl
fdivrl
adc
adc
lcall
lcall
add
or
fnstcw
mov
or
and
nop
add
or
ljmp
decb
sub
pop
jb
aaa
or
inc
movsb
inc
loope
rclb
fwait
outsb
push
cmp
push
rcr
mov
sub
lahf
insl
insl
sbb
leave
xchg
inc
inc
inc
lcall
dec
pusha
gs
addr16
insb
adc
std
jl
jle
int3
int3
jns
cltd
xor
repz
ljmp
fsubl
imul
push
scas
pop
arpl
loope
clc
inc
insb
dec
fimuls
cld
ljmp
repz
jnp
mov
push
mov
push
lods
pop
jmp
movsb
sbb
arpl
decl
jmp
clc
and
mov
ljmp
ret
lret
lods
fldt
jmp
push
xchg
cmp
addr16
pop
mov
shll
into
cmpsl
cmp
pop
pop
movsb
scas
jg
int
out
ja
sub
loope
xor
cmpsb
out
fcomip
pop
xchg
jb
or
into
movsl
mov
push
loop
jmp
iret
mov
aad
mov
sub
mov
cmpsl
sbb
xchg
aas
ss
xchg
push
mov
fcomip
push
mov
in
pop
sub
das
pusha
inc
sahf
int3
insl
add
dec
movsl
xor
xchg
decl
xchg
adc
pop
sbb
sbb
add
test
aas
jae
out
mov
and
es
cmpsl
lock
xchg
add
paddw
pop
cmpsl
cmp
mov
fsubrl
mov
jnp
cmp
jle
xor
inc
fs
mov
clc
inc
mov
mov
cmp
jno
les
int
ljmp
xchg
les
mov
dec
loop
or
mov
lcall
pop
xchg
mov
lahf
les
adc
jmp
scas
xchg
push
mov
out
xchg
pop
and
addr16
push
pop
and
push
mov
call
stc
sbb
addr16
insb
ds
xor
cmp
std
lcall
pushf
enter
pushf
lds
fwait
das
xchg
call
mov
adc
dec
incl
mov
lea
inc
frstor
out
aam
pushf
pop
xchg
imul
sbb
loopne
adc
mov
imul
jmp
mov
sub
int3
jnp
lds
out
aam
lcall
mov
filds
divb
adc
lea
or
inc
lret
push
xor
popf
cltd
sarb
ljmp
imul
adc
ret
pusha
roll
dec
sub
push
mov
and
xchg
dec
inc
outsb
insl
cmp
sub
mov
enter
mov
pop
sub
mov
repz
nop
xor
mov
xchg
inc
call
in
inc
xchg
out
or
pop
or
adcb
push
orl
iret
leave
fcmovu
decl
lock
jmp
mov
lods
xor
pop
fidivl
ret
ljmp
gs
insb
sbb
data16
pcmpgtb
jl
nop
push
cli
cmp
add
clc
mov
pop
cltd
fisttpll
jle
mov
add
lods
add
jne
pop
pushf
lret
insl
sbbl
decl
call
arpl
pop
xlat
mov
push
dec
cmp
adc
jne
pop
xchg
ljmp
jnp
inc
mov
ss
xor
inc
pop
gs
xor
jg
pop
mov
lcall
les
xlat
lahf
inc
cmp
aad
sbb
sub
arpl
lock
xchg
pushl
pushf
lods
push
add
ret
fldcw
ficoms
mov
dec
in
pushl
bound
fisubs
mov
scas
sbb
sti
pushf
fldt
push
adc
decl
dec
cmp
jno
imull
into
add
imul
add
push
or
jns
leave
lcall
movsl
cmp
adc
mov
incl
or
pop
popa
xor
jecxz
arpl
mov
pop
inc
push
cli
mov
sbb
idiv
pop
push
ljmp
clc
mov
push
adc
cli
jbe
cmp
dec
inc
enter
loope
xchg
pushl
mov
cmp
in
mov
dec
sbb
pop
fsts
jno
jge
shll
stos
out
dec
pop
ficompl
cld
fcmovb
in
xchg
push
fcomps
cltd
lea
pop
scas
mov
subl
shll
pop
fstpt
sbb
shll
popa
adc
movsl
push
iret
out
lods
mov
cmp
fildll
sbb
pushf
mov
mov
or
cmpsb
pop
and
dec
testb
movsl
fwait
mov
sub
mov
pop
addl
lock
ljmp
pop
rolb
sbb
pusha
mov
aas
sarl
out
and
out
add
lahf
lcall
jns
dec
dec
jae
insb
fistpll
push
adc
sbb
push
jg
and
cmc
mov
xor
repnz
popf
jae
push
mov
outsl
or
ss
mov
dec
out
mov
push
mov
subb
das
sbb
dec
lcall
mov
ficomps
sbb
dec
push
arpl
fisubrs
je
loop
mov
mov
fnstenv
mov
dec
jl
pop
xchg
lcall
pop
sub
ja
jmp
lret
fs
rcrl
cmpsb
mov
lcall
push
and
cmp
push
pop
mov
decl
dec
jmp
jmp
out
push
push
cmp
ljmp
das
inc
sub
aas
lds
int
add
push
dec
inc
mov
xlat
push
mov
pushf
movsb
adc
pushl
rolb
cmpl
inc
fisttpl
cmp
adcb
popf
fdivl
mov
ljmp
decl
mov
mov
movsl
ljmp
fs
xlat
inc
xor
ljmp
push
xorl
arpl
ffree
mov
adc
sub
rorb
adc
inc
fwait
lret
lret
adc
sub
icebp
gs
repz
es
push
xchg
jns
inc
sbb
sub
sub
sbb
sbb
call
cmc
mov
fs
lods
inc
fwait
std
mov
out
dec
xor
negl
sub
decl
inc
dec
xor
xchg
cs
push
cmpsb
and
fbld
outsl
and
or
out
xchg
dec
js
in
dec
jne
repnz
fsub
test
adcb
hlt
sub
jg
arpl
dec
or
clc
les
fstl
xchg
popf
fnstenv
nopl
lods
dec
mov
jmp
sarb
mov
fiaddl
test
mov
pusha
lds
popa
jp
cmp
sbb
scas
fsts
lods
fnstcw
push
cmp
pop
mov
mov
and
incl
push
jbe
mov
ds
xchg
lahf
pop
std
jnp
jnp
sub
push
and
ja
sar
lcall
lds
fldenv
inc
shrl
inc
fsubs
stos
sbbl
xlat
decl
fiaddl
sbb
xchg
push
sub
lret
or
sbb
xchg
pop
nop
push
pushl
cld
fwait
insb
negb
fsubr
mov
loope
rorl
push
and
pop
pop
std
push
xchg
sub
ljmp
or
and
xor
jecxz
ljmp
stos
fistl
xor
stos
mov
cli
pop
les
mov
jg
mov
push
dec
inc
loope
popa
push
or
cmp
lods
or
pop
sub
xchg
pop
hlt
stos
dec
dec
dec
inc
or
ljmp
cli
idivb
sbb
inc
nop
in
dec
sbb
add
adc
ret
lret
gs
dec
and
clc
lcall
ss
leave
mov
mov
jbe
les
fistpll
add
ljmp
pop
test
pop
jmp
dec
xchg
lods
popf
ss
jmp
sbb
xchg
loopne
xchg
addr16
dec
xlat
pop
jae
cmc
mov
xchg
loop
and
scas
sub
stos
pushl
mov
inc
ss
jb
mov
mov
mov
jno
fists
jge
dec
sti
inc
int3
outsb
xor
notb
mov
jg
push
insb
mov
pop
std
mov
out
sub
addr16
movb
loop
adc
fisttps
adc
add
lods
ret
xchg
xor
adc
mov
gs
pop
mov
or
xchg
lahf
push
push
pop
ret
mov
mov
call
je
js
xchg
in
mov
popa
cli
mov
insb
inc
sbb
ljmp
sbb
rcll
int3
fcoms
or
sbb
xchg
fcoml
lcall
mov
and
push
mov
fisttpl
std
push
sub
mov
adc
cmp
pop
mov
shlb
xorb
xchg
mov
data16
cs
decl
pop
cmc
aam
and
clc
dec
or
fmuls
push
mov
push
fildl
incl
insb
pushf
jns
ret
clc
mov
push
roll
sbb
inc
inc
xor
mov
mov
std
decl
push
nop
and
pusha
rcll
cwtl
adc
arpl
jmp
cmp
lea
xchg
pop
mov
cltd
pop
xchg
mov
fadds
mov
cmpsl
testl
cmpl
ljmp
imul
mov
jae
cld
lahf
pop
stos
call
cld
ds
dec
test
jnp
mov
les
sbb
das
xchg
arpl
das
ret
outsl
ljmp
sti
lock
psrlq
lods
and
xor
push
inc
decl
das
inc
inc
aas
mov
mov
push
xchg
push
or
add
add
jg
mov
mov
mov
lcall
xor
sbb
daa
mov
adc
fldcw
xchg
in
pushl
orb
cli
add
shrb
pop
mov
daa
dec
or
decl
aam
lret
lea
data16
cs
bound
push
push
pusha
sti
pushl
lcall
icebp
cli
sub
push
lret
mov
jge
pop
cmpsl
pop
inc
ja
jecxz
addr16
jmp
imulb
mov
push
arpl
mov
dec
mov
call
test
fwait
movsl
mov
addr16
and
int
in
in
pop
loop
sub
pop
into
arpl
xchg
int
movsb
frstor
mov
test
sarl
mov
loope
mov
xor
int3
mov
mov
cmp
sbb
int3
pushl
xor
inc
bound
dec
inc
bsr
fdivl
mov
jne
jmp
pop
int
ljmp
sub
enter
sub
std
push
pusha
enter
lcall
dec
lret
scas
mov
fcomps
into
or
mov
repz
das
mov
add
mov
xlat
popa
nop
call
dec
stos
icebp
call
es
leave
cmp
xchg
jae
push
cmp
mov
xor
fistps
pop
das
pop
daa
test
pop
aam
dec
jecxz
pop
push
loop
sbb
push
pushf
adc
jmp
arpl
mov
dec
push
out
clc
mov
lea
push
scas
xor
sbb
sbb
lock
out
stc
pop
sarb
mov
jb
inc
dec
xchg
sub
push
and
in
mov
arpl
mov
pushl
jge
rep
fildll
iret
inc
aam
cli
fisttps
incl
mov
movsl
imul
movsl
pop
popf
fucomip
movsl
test
das
dec
sbb
stos
xchg
xchg
jbe
out
mov
decl
and
sbb
outsl
shlb
fdivr
mov
das
sub
mov
fcmove
ficompl
jno
out
roll
jmp
pop
clc
sub
mov
inc
mov
pushl
es
rcll
mov
pop
pop
jge
jp
inc
inc
in
insb
mov
pop
xchg
int3
scas
test
ljmp
mov
cmp
in
lret
inc
sbb
mov
arpl
pusha
mov
mov
inc
cmp
cmp
pop
or
cli
lods
cltd
lds
adcb
mov
mov
sti
mov
jg
lcall
mov
in
out
hlt
lcall
lret
xor
jmp
repz
rolb
fstp
or
call
call
pushl
mov
pop
cmpsl
push
push
test
out
das
mov
xor
jne
or
inc
push
ss
call
inc
xchg
ds
mov
test
je
repnz
adc
loop
inc
cltd
and
dec
dec
mov
push
insb
test
popf
in
cli
rcrb
fs
lods
push
popf
jg
jp
loope
scas
pop
adc
dec
lret
pushl
fidivrl
in
cmpsb
mov
sti
inc
rol
mov
movsl
popa
std
dec
mov
call
xor
fwait
stos
arpl
xor
cmpsl
test
pop
out
sub
repz
fcmovnu
xor
lahf
mov
mov
lods
push
insb
sbb
xchg
xchg
subb
lcall
aam
into
int3
jae
pusha
je
pop
cmp
bound
xchg
cmp
repz
mov
ljmp
mov
inc
push
int
mov
push
int
lods
mov
scas
mov
aaa
decl
hlt
or
and
inc
addb
dec
cmpsb
aaa
lds
loopne
filds
lcall
call
test
out
pop
out
add
std
inc
cli
push
ja
sub
jg
ja
mov
stc
popa
lret
jb
mov
jge
inc
iret
in
or
lea
sbb
jmp
rolb
cli
into
insb
mull
mov
mov
xchg
daa
jp
jg
inc
ja
scas
and
add
sahf
repnz
fcoms
pop
or
xor
cld
cmpsl
mov
and
decb
jno
popa
add
pop
mov
or
scas
cmp
and
add
arpl
call
mov
loope
push
ljmp
pop
in
test
pop
cmc
mov
incl
mov
dec
dec
fistpll
xchg
lds
add
cmp
ret
aad
mov
xchg
mov
xor
filds
pushf
popf
jmp
movl
addb
outsb
adc
in
adc
jo
incl
xor
cli
xchg
dec
add
lcall
ficompl
inc
mov
mov
push
push
ret
mov
rol
xchg
xor
imul
xchg
mov
lret
fwait
mov
mov
push
xor
sahf
idivl
ss
decl
push
std
xchg
mov
fnstenv
aaa
mov
out
adc
cmc
incb
out
push
ja
cli
pop
idivl
sub
mov
fcomi
outsl
fs
dec
fxtract
or
sti
idiv
push
stos
std
mov
pop
pop
xor
adc
cmp
icebp
or
or
xchg
das
cli
js
jbe
sub
mov
pop
ja
jmp
hlt
outsb
xchg
repz
cmp
push
in
shl
push
ss
add
sbb
clc
sbb
aad
mov
push
mov
lcall
sbb
jecxz
loopne
mov
pop
sarl
push
int3
inc
fdiv
mov
pop
push
insl
movsb
incl
aad
xchg
lea
es
lahf
cmp
mov
xor
ljmp
fcomip
decl
stos
mov
sbb
pop
loop
mov
xchg
loope
lds
sub
jmp
dec
push
add
test
js
imul
jle
lret
out
or
mov
enter
cld
jmp
cs
xorb
sti
jmp
in
jg
cltd
mov
dec
cmpb
out
pop
data16
push
dec
out
fsts
jns
aaa
push
repnz
lret
mov
jno
mov
jg
je
mov
enter
inc
dec
stos
fmul
and
aam
mov
pushf
pop
xor
xor
pushl
mov
call
fwait
popf
loopne
add
nop
adc
daa
inc
lahf
xlat
lahf
out
inc
rcr
arpl
ljmp
pop
pusha
jno
push
aas
imul
mov
mov
or
call
adc
add
cwtl
add
push
mov
mul
dec
and
icebp
and
loop
jl
push
push
lods
jb
xor
cmpsl
in
pushf
iret
ret
jnp
mov
pop
push
jbe
das
mov
inc
or
sbb
movsl
cli
out
sub
ljmp
cmpb
dec
cmpsl
out
in
jecxz
mov
jmp
std
push
mov
icebp
push
and
lock
mov
lret
stc
mov
inc
xor
sub
adc
push
call
std
repz
and
insb
jns
ss
sbb
inc
sub
int3
push
push
cltd
and
pop
repnz
fwait
es
loop
andl
dec
mov
mov
dec
subl
lahf
sub
into
inc
and
fwait
sbb
ljmp
lock
out
cmc
pop
dec
in
scas
pop
pop
stos
sub
dec
arpl
shl
mov
adc
call
mov
lahf
push
out
cmp
dec
aam
dec
cmc
shl
adc
mov
jp
lret
mov
mov
push
pop
shrb
addr16
xchg
aam
mov
das
call
pop
xor
cld
popf
push
outsl
sbb
test
sbb
movsb
jmp
dec
sub
inc
outsl
aad
dec
insl
cli
cltd
icebp
sar
icebp
cli
pop
push
cmpsb
mov
pop
lret
imul
outsl
inc
cmp
call
cli
sub
pushf
push
fdivs
lret
mov
ss
dec
lcall
call
jle
pop
clc
inc
dec
int
mov
dec
jae
decl
stc
es
decl
into
repnz
adc
jbe
sub
xchg
xchg
mov
xor
ljmp
cwtl
xchg
addr16
jecxz
lea
dec
fsubrs
shll
dec
xchg
int3
jmp
mov
in
sarl
mov
faddl
sub
dec
lods
shlb
pusha
incl
xchg
pop
cmp
pop
mov
push
sub
pavgb
jne
or
out
dec
add
mov
push
in
arpl
pop
fldenv
add
dec
lcall
add
sbb
mov
and
clc
mov
dec
mov
cmp
sar
jmp
stc
mov
cmp
scas
js
ss
push
sbb
out
ljmp
lods
push
push
and
inc
dec
jg
rclb
push
dec
cmp
movsl
sub
mov
pushl
xchg
jnp
out
insl
sbb
data16
push
dec
push
mov
lods
add
pop
add
adc
xchg
fisttpll
call
js
sarl
mov
int3
gs
mov
pushf
jbe
or
cli
sbb
cmp
lcall
fs
fdivl
mov
in
fdivrs
arpl
xchg
sbb
mov
jl
stos
sbb
ljmp
xor
ret
xchg
in
cld
mov
stc
dec
lock
lret
enter
sbb
nop
leave
mov
xchg
mov
xor
jmp
inc
cmpsb
pop
mul
int3
push
pop
mov
or
loopne
jg,pn
int
insb
fwait
jmp
decl
fcoml
mov
ljmp
dec
jne
outsl
lahf
test
sahf
cmp
in
jne
dec
push
insl
xor
pop
mov
push
jmp
sub
in
jnp
or
add
pop
decl
lock
add
push
xorl
mov
repz
incl
incb
fistpl
inc
icebp
aaa
sub
cld
lahf
pop
aad
imul
adc
mov
call
cltd
out
call
xor
lds
sub
mov
adc
push
ja
jecxz
fcomip
add
inc
mov
scas
xchg
jbe
dec
and
pop
xchg
jp
ret
mov
add
mov
std
mov
or
ja
scas
adc
xor
xchg
outsb
xchg
arpl
mov
cmpsb
or
cmp
int
cs
mov
incl
mov
mov
dec
sti
lea
pop
ljmp
xchg
xor
push
pop
jg
dec
pop
dec
xchg
int
movsl
mov
xchg
rcrl
push
dec
repz
cmpsb
sub
cmpsb
stos
pushl
and
sub
mov
insb
test
dec
ds
inc
push
xchg
dec
dec
stos
das
and
bound
pop
call
cmp
lods
bnd
cs
imul
mov
ja
push
push
in
fst
inc
push
mov
test
push
in
push
cmp
inc
pop
or
dec
sbb
adc
jno
lcall
fs
mov
scas
pop
xor
push
fsts
jmp
mov
or
push
std
xchg
pop
dec
and
out
clc
lds
popf
push
adc
lret
dec
ss
xchg
adc
or
ljmp
stc
and
lahf
dec
es
inc
mov
push
xlat
test
mov
jge
movsb
cli
mov
out
and
add
ds
inc
cltd
loopne
pop
lds
div
mov
xchg
or
imul
lret
clc
outsl
call
xchg
bound
rcr
mov
sub
lahf
dec
aam
aad
xchg
fidivrl
mov
mov
mov
movsl
mov
in
or
lea
jg
icebp
xchg
daa
fs
cwtl
int
es
jbe
pop
and
lcall
loop
push
xchg
and
add
lea
cmpsb
in
test
inc
mov
aad
leave
mov
enter
pop
jne
mov
jb
dec
jb
subl
or
out
add
in
xor
push
movsb
xchg
dec
mov
push
pushl
jg
test
hlt
mov
sub
mov
jp
mov
jl
leave
scas
xor
or
out
push
mov
mov
fwait
adc
cli
push
lods
loop
pop
int3
insl
enter
ljmp
cli
daa
xlat
jmp
scas
test
insl
fwait
mov
loop
daa
cmc
jmp
push
and
pop
xchg
stos
jle
mov
cmpsl
cmpsl
sbb
divb
loop
jg
ss
xor
cli
fdivp
jg
sub
pop
es
jne
pop
push
pushl
mov
xor
jnp
lods
xor
inc
mov
adc
push
lcall
dec
pop
inc
dec
jae
mov
aaa
sbb
pop
jae
push
fmuls
mov
pop
sahf
jne
movsl
sti
sub
mov
movsl
adc
and
sub
mov
pop
mov
jno
cmp
std
pop
sahf
xor
rorb
imul
push
pop
fwait
clc
inc
sti
repz
neg
ljmp
rcrb
insb
fxch
arpl
lahf
sub
sbb
mov
aam
push
iret
mul
mov
inc
adc
xchg
ss
push
je
xchg
leave
fbld
call
sti
jg
out
js
push
ds
in
mov
lahf
das
mov
cmp
call
gs
es
out
cmpsl
in
xor
or
fs
and
sti
push
push
orl
xor
lahf
insb
test
and
sub
scas
frstor
or
lcall
loope
mov
lods
lahf
push
cmp
xchg
push
jns,pt
add
stc
cltd
mov
fisubrs
mov
mov
fucomi
mov
mov
out
dec
js
shll
outsl
cli
lcall
inc
idivl
xchg
imul
xchg
fwait
mov
dec
cmp
pushl
imul
fwait
pop
pop
sbb
loopne
aas
into
jb
jbe
jle
popf
popa
or
push
and
mov
sub
jbe
into
push
lahf
pop
sti
insb
mov
stos
and
shrb
mov
ljmp
test
out
xchg
push
mov
divl
xchg
push
aad
ljmp
imull
into
or
lret
jmp
cmp
jnp
std
ficomps
fimuls
loope
jnp
loop
testl
rcll
mov
ljmp
lahf
xchg
fsubr
sar
and
mov
scas
lods
cmp
jg
pop
xchg
cli
lds
fistps
mov
test
push
sub
stc
sarb
mov
sahf
cmp
in
in
push
xchg
aaa
out
mov
fldcw
in
fstps
jg
cmp
mov
dec
xlat
pop
sub
cmp
ror
clc
aad
mov
cld
pushl
scas
dec
iret
imul
pop
mov
jns
in
fmulp
lahf
jnp
mov
iret
cmp
call
jle
out
mov
mov
pop
lcall
adc
adc
in
mov
lods
insl
hlt
push
lods
stos
std
or
sti
std
dec
aas
lock
stc
in
jg
aam
or
out
insl
sbb
in
pop
hlt
ficomps
xlat
mov
push
inc
inc
lahf
xor
jno
cmp
and
sbb
jmp
dec
pop
gs
adc
dec
push
test
loop
inc
ret
mov
das
nop
xchg
xchg
jecxz
sbb
mov
popf
mov
mov
dec
addb
into
jecxz
ficoms
popf
cmp
loop
dec
les
sub
mov
lcall
jnp
push
fucomi
mov
push
in
jmp
cld
in
dec
sub
push
mov
push
mov
hlt
cli
pop
in
test
sub
lds
imull
push
xchg
xlat
call
cld
jecxz
inc
push
sarl
cs
pop
mov
gs
jg
scas
pop
push
icebp
loopne
ret
dec
jns
loop
sub
cmp
pusha
lds
lock
pop
jns
jmp
push
sbb
or
mov
ljmp
add
and
jg
out
ss
lods
leave
xor
sbb
sti
hlt
inc
scas
xor
jnp
jnp
inc
iret
dec
out
scas
xor
dec
ss
inc
inc
dec
decl
adc
and
xor
jae
xchg
add
mov
aaa
jbe
jl
and
cld
aas
adc
jnp
cmp
pop
adc
push
xchg
jo
or
jle
xchg
xorb
push
inc
cmp
ss
sub
fs
jno
lcall
pop
pop
les
imul
xor
xchg
cltd
or
loop
fdiv
sub
jns
adc
xlat
pop
push
fadds
fld
mov
in
jg
jns
pop
mov
xor
cmp
cmp
addb
js
lcall
subl
xchg
fs
pushl
jmp
sbb
mov
insl
xchg
pop
inc
andb
xchg
jns
lret
movb
in
incl
xchg
fimull
inc
mov
xor
movsb
push
repnz
cmp
daa
add
out
cmpsl
data16
dec
pop
sub
imul
jmp
cmpsb
mov
xchg
ret
xchg
add
lds
push
outsl
cli
jmp
ja
mov
cmp
enter
dec
cmp
adc
push
xchg
sub
rcrb
sub
mov
jmp
es
decl
mov
subl
int3
pop
sbb
and
mov
mov
rcr
lcall
mov
pop
jo
adc
jnp
cmp
sbb
gs
rsm
std
pop
pop
sub
outsl
int
incl
hlt
pop
sub
std
sbb
cmp
cld
int
or
jg
jecxz
push
mov
inc
ja
decl
xorl
sub
fimuls
xchg
dec
push
test
or
decl
decb
push
sub
mov
jne
jp
push
jecxz
jnp
cmp
call
mov
push
fucom
add
sarl
jns
lret
ljmp
mov
call
push
sub
gs
xchg
popa
fsubrs
aam
aam
int
push
add
add
imul
mov
cltd
sbb
in
cmp
iret
sti
movsl
push
jo
sahf
test
jmp
xchg
xchg
pop
clc
into
jl
cmp
xchg
outsb
popf
xchg
inc
iret
inc
in
sbbl
imul
call
outsb
sahf
testl
movsb
call
pop
insb
test
pop
push
stos
push
insl
mov
cmp
push
xadd
push
outsb
aam
push
ficompl
mov
or
data16
shl
pop
inc
iret
adc
dec
cmpsb
or
scas
call
push
lods
jg
dec
mulb
sahf
mov
inc
or
mov
or
out
jbe
adc
adc
dec
mov
fwait
repnz
inc
inc
push
out
ret
stos
lahf
testl
xchg
test
decl
push
jno
cmp
fildll
mov
jp
push
mov
sti
pusha
ja
test
mov
into
push
adc
xchg
addr16
notl
xchg
push
push
in
mov
mov
pop
cld
ss
xchg
movb
lret
icebp
push
adcl
pop
aam
mov
jmp
push
adcb
cmp
mov
enter
cmp
cmp
in
jb
adc
dec
push
xlat
test
es
data16
and
incl
ljmp
and
cli
xchg
out
jg
cmp
push
cltd
dec
aad
cli
stos
mov
cltd
adc
dec
mov
lcall
inc
mov
cltd
dec
sbb
jg
fwait
xor
cwtl
outsl
xlat
daa
jbe
lea
sbb
pop
sbb
lcall
push
pop
loopne
iret
sbb
mov
mov
xchg
jp
sub
incl
orb
mov
mov
clc
sbb
repnz
cld
imul
aaa
dec
push
cmp
in
mov
es
addr16
mov
ljmp
sub
sub
fwait
std
out
fisubrl
ja
test
cli
incl
mov
mov
inc
sub
inc
stc
xor
fisttpll
fidivl
adc
mov
pop
adc
sti
xchg
mov
mov
lods
jge
incl
jle
jp
lret
outsl
jae
imul
rcll
mov
or
repnz
sub
sbb
ljmp
pushl
ja
ficoms
or
jo
jle
rcll
mov
cmpsb
decl
jl
xlat
cmp
dec
out
mov
leave
incl
xchg
cli
in
call
pcmpeqd
push
fstpt
add
lret
add
xchg
sarl
mov
idiv
call
call
or
jg
out
enter
es
ljmp
mov
push
sub
xchg
or
outsl
adc
call
adc
shl
pusha
pop
mov
loope
sar
lds
pop
xor
stos
loop
addr16
ljmp
sbb
sub
insb
jbe
inc
pop
xor
mov
mov
loopne
lret
out
mov
stc
pop
idivb
xchg
gs
sbb
sub
mov
call
loopne
inc
in
push
insl
inc
dec
rcrl
fs
inc
sti
push
lret
jecxz
or
incl
pop
add
dec
stc
in
imul
pusha
ljmp
mov
push
mov
leave
mov
mov
sbb
div
ljmp
mov
add
test
incl
decl
repz
cli
mov
out
icebp
jae
cli
cwtl
mov
out
sub
add
jae
das
or
stc
ljmp
lock
cltd
ljmp
lods
jne
ljmp
rolb
mov
lea
hlt
shll
aaa
aam
push
idivl
pushl
lods
jnp
scas
xor
arpl
stos
rcr
cmc
sahf
and
sbb
pushl
pop
cmp
icebp
mov
cmp
dec
sub
jne
mov
jbe
in
test
movsl
dec
or
push
call
movsb
push
out
adc
and
and
pop
inc
jbe
imul
sub
decl
inc
adc
mov
inc
pop
pop
sbb
fimull
sbb
je
pushl
or
sub
ret
lock
movsb
out
cmpsb
and
data16
out
sahf
ret
inc
fists
ljmp
out
push
fmuls
addb
ss
addr16
in
insb
popf
inc
fdiv
cmp
mov
jne
mov
imul
xor
pop
fnstsw
mov
jg
inc
mov
rcll
xchg
mov
cmp
out
sahf
lock
incl
add
cmp
mov
jmp
mov
cmpsb
jl
lods
mov
mov
mov
call
mov
fmuls
pusha
rol
mov
fisubrl
ret
lds
mov
loopne
mov
ftst
pop
xor
inc
cmp
icebp
mov
call
cmp
mov
mov
pop
outsl
call
push
mov
decl
js
push
pop
repnz
test
fists
int3
out
repz
mov
xchg
lret
loope
das
sbb
mov
test
inc
or
push
lcall
cmp
cmpl
dec
adc
daa
imul
jne
jmp
add
add
or
insb
outsb
xor
xchg
stc
loop
out
dec
call
xor
pop
data16
xchg
jno
clc
dec
imul
fldenv
adcb
ljmp
xchg
subb
jmp
xchg
xchg
sbb
cmp
loop
mov
sbb
mov
enter
in
test
loop
xor
xchg
cmp
mov
ds
push
sti
mov
inc
bound
mov
mov
daa
mov
mov
jg
in
fsts
xchg
mov
mov
rclb
lret
sub
xchg
pusha
cmp
push
cmp
lahf
cltd
cmp
call
xor
inc
push
dec
les
push
inc
lods
inc
pop
ja
fistl
aaa
lcall
cwtl
xor
dec
dec
jge
push
es
cmpl
add
jecxz
adc
clc
or
leave
jmp
std
loop
push
aad
dec
aaa
clc
xchg
mov
sbb
outsl
test
pop
lock
out
pop
decb
movsb
push
aas
mov
push
mov
loop
xchg
lds
dec
ja
bound
mov
sbb
push
call
and
sub
adc
push
jno
push
incb
pushf
pop
jns
jl
imul
std
incl
lret
cmp
mov
cmpsl
pop
ficoml
sub
xchg
cwtl
pushl
int3
scas
xlat
or
or
inc
ret
xchg
fsubl
les
inc
ud0
cld
ljmp
out
in
xchg
adc
xor
insb
dec
and
in
hlt
jnp
mov
cmp
or
out
and
fsubrs
fstps
pushl
sbb
fbld
sbb
arpl
negb
mov
int
mov
test
push
push
enter
push
ret
cld
cmp
xchg
dec
dec
je
and
popf
clc
insl
pop
jmp
adc
dec
into
cld
xchg
jb
sbb
out
clc
add
push
xlat
cmp
lret
fwait
jae
lock
adcl
fstpl
sbb
aad
dec
sti
push
lods
dec
imul
mov
lock
add
mov
fstpt
aam
push
pop
mov
mov
and
sub
and
mov
push
and
adc
clc
sbb
movb
mov
mov
gs
sub
jmp
add
jns
sbb
psraw
pop
jb
inc
pop
inc
push
mov
mov
xchg
das
mov
ljmp
jno
or
leave
filds
test
cwtl
or
movb
stc
pop
fwait
clc
xor
lcall
cltd
fiaddl
aam
jne
or
ljmp
addr16
popa
and
out
lods
xchg
xchg
movsl
sbb
je
mov
test
jb
mov
out
clc
push
call
clc
lea
jg
vcomiss
cmp
or
iret
or
dec
call
dec
mov
xchg
mov
repz
inc
rorb
scas
push
mov
lods
xor
decl
pop
sub
icebp
sbb
and
leave
shlb
mov
inc
jnp
dec
inc
push
mov
imul
pop
adc
pop
dec
jg
sbb
push
pop
cld
mov
pop
in
daa
or
ljmp
adc
jg
or
dec
in
repnz
xchg
xchg
test
sub
cmp
pop
lods
jmp
fcomps
push
shrb
mov
cld
pop
rorb
imul
cld
mov
xor
and
xor
cwtl
dec
popa
mov
or
outsl
js
add
call
or
jmp
push
adc
mov
fidivrl
push
jmp
mov
arpl
imul
hlt
sahf
add
jmp
fsub
loop
leave
cmpsb
xor
inc
sahf
push
sbb
enter
jmpw
and
leave
jns
dec
mov
and
popa
repz
cltd
in
xchg
xchg
pusha
shrl
xor
sbb
rcll
repz
decl
lock
enter
hlt
push
inc
aad
fs
lods
push
mov
cwtl
sub
jg
or
jo
neg
add
and
cmpsb
int
xchg
js
mov
jo
notl
inc
mov
add
add
lock
in
orb
sahf
into
sub
or
dec
mov
pop
into
xchg
inc
adc
mov
and
xchg
call
sarb
outsb
cmp
xchg
pushl
std
sbb
daa
xor
out
jp
psubusw
lds
ror
mov
call
jl
leave
das
insb
add
mov
sub
cmp
popa
clc
and
incl
lahf
adc
imull
jns
mov
sub
cmc
test
loope
cmpsl
sbb
pushl
je
inc
stc
fsubrl
cmc
out
enter
mov
inc
jnp
call
test
mov
adc
in
inc
xor
sahf
sbb
fmuls
and
outsl
sub
inc
cli
xor
cmp
push
or
pushl
cld
out
mov
popa
push
xor
mov
xor
jno
decl
data16
mov
aas
fwait
pop
pop
mov
cmp
imulb
decl
inc
fimull
scas
pop
stc
int3
or
jbe
lcall
ds
in
adc
sbb
and
pop
pop
outsb
ret
pop
mov
ljmp
and
push
shrl
in
pop
repnz
pop
repnz
mov
ret
lods
scas
xchg
aam
xchg
xchg
pop
mov
inc
mov
push
cli
lods
aam
mov
sbb
xor
jmp
cmpsl
nop
testl
adc
pop
sarl
and
mov
jne
fsubs
push
leave
push
cmc
add
or
scas
cli
ljmp
repnz
jb
mov
cli
shr
xchg
icebp
js
subl
icebp
jmp
fs
xchg
jge
inc
clc
push
jae
or
inc
xlat
mov
cld
and
dec
js
or
hlt
adc
push
inc
leave
and
out
ror
and
ret
mov
xor
lods
adc
pushl
jle
xchg
int
sbb
loop
mov
inc
mov
mov
incl
xor
add
cltd
cld
jge
add
shl
fs
pushl
or
arpl
add
push
dec
icebp
jge
imul
xchg
mov
mov
cmc
mov
xlat
int3
jbe
and
pop
shll
xchg
movl
lock
mulps
scas
sbb
int3
loop
cmp
ljmp
aad
mov
add
call
jno
push
cmc
mov
xchg
sub
outsl
insl
xorl
lcall
cmp
rolb
ja
lea
mov
lcall
fsts
jg
andb
rcrl
xlat
inc
cmp
in
lahf
sbb
adc
pop
arpl
cltd
mov
pop
pusha
dec
ljmp
mov
gs
push
inc
fcoms
inc
aas
xor
daa
ret
mov
xlat
xchg
jbe
call
popf
inc
sbb
jns
cmp
pop
lods
scas
ss
shll
mov
jbe
xor
imulb
hlt
dec
jnp
insl
icebp
pop
fwait
jne
insl
push
ss
mov
jbe
addr16
mov
mov
mov
incl
xchg
sub
mov
cli
jg
out
out
cli
push
pushf
xchg
pushl
cld
cmp
lcall
fbld
cld
cmp
lock
pushl
cld
fldt
jmp
aam
arpl
xor
cmp
call
pop
imul
iret
mov
mov
clc
xor
push
ja
sbb
aaa
and
sbb
outsl
mov
psraw
cmp
inc
jge
divl
cltd
push
dec
mov
push
jno
inc
loope
mov
cmpsb
pop
mov
clc
push
out
dec
sub
test
cld
lds
icebp
je
inc
sbb
dec
ljmp
aaa
cli
pop
mov
and
mov
cmp
scas
mov
jmp
out
fst
push
imul
push
add
sbb
push
adc
jmp
or
push
jge
jge
dec
pop
xchg
mov
jmp
pop
jae
push
jg
scas
dec
popa
cmp
mov
mov
lods
lds
daa
lcall
ja
lods
inc
pushl
rorl
add
daa
push
les
call
rcrl
into
out
arpl
jmp
pop
inc
imul
adc
pop
lea
sbb
cmp
lcall
popf
mov
sub
xchg
ret
test
and
add
pop
imul
pop
scas
decl
in
dec
lods
jno
push
cmp
pop
inc
aad
sub
dec
notl
sti
jmp
popa
arpl
in
pop
test
xchg
cli
add
pop
fdivr
incl
cmc
sub
movsb
mov
xchg
inc
jno
test
cmp
dec
mov
pop
fs
ret
lret
jg
jg
xchg
mov
pushf
inc
mov
cmp
fnstcw
decl
int3
icebp
jle
inc
fiaddl
fists
mov
imul
cmp
xchg
mov
cmp
stc
push
test
dec
leave
or
loope
ret
out
das
inc
mov
inc
xlat
decl
in
push
and
xlat
jnp
jmp
pop
gs
mov
and
mov
pushl
push
mov
mov
je
sub
lahf
push
scas
or
fcmovbe
xchg
xchg
jg
std
sub
ljmp
testl
lock
dec
mov
lds
or
pop
js,pt
jmp
mov
dec
jmp
fisttps
cli
leave
cmc
xor
push
std
ret
rol
cmp
jg
rcl
dec
inc
or
jmp
cs
fistl
and
call
pop
push
call
pop
pop
adc
dec
pop
inc
mov
leave
add
outsl
xor
xchg
fwait
push
sbb
js
popf
ret
jg
call
cmp
add
mov
pushf
stc
jno
or
fmull
and
outsl
lcall
jns
jae
inc
mov
inc
jae
mov
mov
fs
mov
sub
out
out
pop
xchg
jg
jnp
mov
push
cs
mov
jo
adc
sahf
sub
mov
push
insl
jmp
xchg
mov
movsl
stos
cmp
clc
pop
xor
jecxz
sbb
call
out
lds
jecxz
je
std
xchg
mov
mov
fsubs
cmp
call
xor
push
dec
imul
mov
int
out
shl
or
inc
adc
lock
enter
inc
into
cmp
scas
sbb
adc
push
jg
push
push
or
idivb
arpl
mov
add
pop
out
loopne
xchg
fdivr
incl
jbe
add
iret
mov
xchg
cmp
inc
dec
xchg
push
call
push
aas
mov
nop
jnp
sahf
notl
adc
xchg
out
adc
fsubrp
mov
add
pushf
mov
lods
cmp
xor
mov
loopne
test
cmc
out
mov
lods
sbb
les
rorl
rcl
jmp
cmp
sbb
sahf
inc
in
lods
dec
jbe
filds
add
add
pop
xchg
dec
inc
insb
mov
mov
jnp
sbb
fwait
pushf
fwait
std
leave
xor
push
lret
std
cli
add
xchg
out
cmp
in
call
xchg
rcl
adc
scas
jle
dec
lea
lcall
popf
fwait
cmp
inc
adcl
data16
inc
and
pushf
sarl
movl
sub
ljmp
aam
or
or
test
icebp
jb
inc
int
add
shll
pop
mov
mov
cmp
push
ja
into
clc
decl
lds
adc
in
jmp
add
and
ljmp
lods
cmpsb
and
enter
mov
and
mov
lea
jnp
add
outsb
fdivs
or
dec
push
fwait
xchg
movsb
sti
sbb
rcl
cmpsb
mov
mov
adc
xor
mov
jg
push
lret
mov
leave
jno
ret
mov
inc
pop
xchg
ret
jg
gs
xchg
das
rcrb
cmp
aaa
out
clc
or
lods
ret
pop
xchg
mov
arpl
test
scas
pop
cmp
lcall
jle
pop
stos
lods
incb
pop
mov
dec
dec
inc
push
pop
rcr
mov
xor
outsl
xchg
fcos
push
mov
and
fisttpl
ljmp
jae
dec
mov
repz
mov
mov
push
dec
fisttps
mov
and
clc
ljmp
imul
fwait
je
fldl2e
aad
pop
cmpsl
scas
push
scas
pop
repz
xor
call
insb
push
dec
mov
scas
push
mov
pushf
mov
add
leave
mov
mov
mov
sub
lret
stos
pop
adc
out
out
movsb
or
xchg
pop
mov
aam
mov
popf
and
sub
jecxz
and
pop
dec
mov
push
xchg
xchg
xchg
repz
xor
out
out
bound
sub
mov
mov
call
xchg
jnp
aam
pushl
xchg
jg
mov
mov
fmull
mov
jl
aas
sub
jle
cs
xchg
xor
popf
mov
xchg
aaa
fidivs
std
lcall
loope
nop
xchg
mov
dec
ss
mov
aas
mov
fimuls
cmp
in
lock
mov
loopne
lret
mov
lock
jns,pn
push
shrl
dec
imull
clc
jmp
mov
xchg
jnp
lcall
cmp
push
cmp
cld
mov
rorl
andb
sub
ljmp
dec
cli
pop
cmc
lret
testl
pop
pop
cmp
mov
fsub
icebp
inc
pop
fiaddl
ret
push
push
or
mov
call
hlt
int3
dec
and
imul
add
es
fadd
push
outsl
popa
icebp
adc
ret
fsubs
add
mov
mov
jmp
jl
add
mov
popf
xchg
jg
lods
sbb
pushl
shll
loopne
subl
es
cld
test
cmp
cmpsb
and
mov
das
mov
or
and
mov
lcall
add
jp
call
sbb
in
in
cs
mov
inc
inc
pop
mov
mov
cmp
fcomp
inc
lods
xchg
loopne
xchg
shll
xor
or
mov
jp
and
js
filds
les
lds
push
or
lahf
adc
or
aaa
pop
pop
arpl
add
lcall
mov
vmread
mov
imul
pop
fstl
cmp
ljmp
out
leave
push
enter
sub
xchg
or
pop
ud0
pop
lret
ret
add
jmp
jae
xchg
jnp
lock
or
pusha
lds
outsb
dec
outsb
pop
push
es
aas
jg
decl
notb
jecxz
add
cmp
movsl
mov
pop
in
outsb
mov
sbb
jge
mov
xor
sub
scas
mov
sbbb
and
cs
adc
dec
imul
jmp
int
and
comiss
sub
outsb
fists
and
sahf
mov
das
cmpsb
ljmp
clc
cs
xchg
xchg
adc
jbe
pusha
lods
out
int3
cmp
jge
xchg
dec
xor
dec
jnp
mov
incb
vmovapd
sub
xlat
fildl
mov
lcall
xor
push
xor
xlat
rorb
xchg
xor
movsb
mov
loopne
lcall
jns
out
in
jno
cltd
fiaddl
pop
mov
sbb
bnd
jp
mov
aad
fs
in
or
mov
jl
dec
mov
mov
decl
push
clc
adc
fsubs
in
fsubrp
push
push
mov
or
decb
inc
mov
dec
xor
sti
mov
lahf
mov
add
push
cltd
lret
dec
fdivrp
push
mov
filds
scas
std
push
cmpsb
jb
lcall
sbb
ljmp
cli
mov
mov
mov
sub
dec
cmpsl
sbb
mov
mul
push
lahf
cmp
dec
sub
xchg
sbb
mov
ja
movsl
or
std
pop
cmp
mov
or
shr
into
sbb
dec
xchg
dec
clc
arpl
jne
clc
es
incl
add
sbb
pop
xor
lds
jae
cmp
loope
lea
aas
cmpb
outsb
punpckldq
pop
adc
xchg
pop
sub
stc
xlat
inc
ds
mov
movsb
idiv
xor
insl
adc
adc
es
xchg
mov
jg
sub
repnz
pop
mov
decl
cmc
loope
jnp
push
cmp
dec
sub
popa
sub
push
clc
push
jb
mov
jae
jecxz
sbb
test
sbb
in
mov
lret
jp
xor
push
jg
mov
out
jns
mov
fwait
inc
xchg
das
out
pop
push
in
jp
sbb
mov
mov
xor
sbb
add
jb
adc
xchg
push
stos
mov
mov
movl
insb
jne
fsubr
sub
incl
add
scas
lret
mov
insl
icebp
push
test
imul
cwtl
push
jmp
or
cmp
adc
pop
iret
popa
jle
sbb
push
jbe
in
gs
xchg
push
lahf
addr16
std
incl
ret
daa
jge
or
mov
cwtl
xchg
pusha
cmp
xchg
popf
js
insb
cltd
ret
push
lret
fbld
xchg
push
je
aas
jp
aad
js
sbb
dec
jge
adc
jecxz
jg
sub
mov
adc
xchg
xor
int
fs
incl
mov
jae
pop
repz
lods
lret
push
dec
es
addr16
in
xchg
incl
sbb
cmp
loopne
ss
ficoms
rcr
call
sbb
adc
push
out
daa
lock
cmp
divl
sbb
lods
cmc
repnz
decl
pop
mov
jae
cli
push
mov
sbb
mov
popf
sub
mull
mov
mov
cwtl
and
pop
bound
fildll
cmc
jg
decl
or
call
lea
or
dec
sar
jmp
adc
in
inc
in
inc
in
std
jg
outsb
lret
jbe
lds
or
fimull
pop
js
inc
dec
pushf
les
xchg
xchg
decl
jmp
push
dec
fists
xor
int3
xor
or
bound
push
icebp
or
cmpsl
push
lea
push
shrl
jge
test
mov
jecxz
dec
ljmp
aas
or
sarl
or
push
mov
rcrl
lods
aas
inc
pushf
outsb
mov
decl
jnp
cmc
adc
lds
popa
xor
mov
jl
les
pop
fwait
mov
bound
pushl
ja
and
aad
inc
out
pinsrw
outsb
cmc
add
testb
inc
incl
lea
sbb
loope
andl
je
pushf
add
xchg
adc
int3
pop
adcl
repnz
mull
fstpl
movl
scas
jb
cmc
cs
test
mov
faddl
sub
outsb
stos
pop
add
jmp
xlat
xchg
adc
jle
gs
insl
insl
fxtract
cmc
sub
mov
jno
movd
fucomip
xchg
gs
call
std
jge
xchg
gs
lods
inc
and
lret
mov
lods
sub
loope
lods
and
incl
cs
jne
orl
push
jo
lcall
hlt
mov
aas
ret
jg
lret
sub
sub
scas
fdivl
test
mov
mov
fcmove
mov
or
pop
push
mov
roll
pop
ljmp
xor
pop
mov
dec
pop
mov
mov
pushl
dec
xchg
cmp
mov
and
les
sti
dec
and
xchg
call
les
outsb
mov
lret
sub
mov
push
cld
adc
dec
je
dec
into
sub
dec
bound
mov
mov
mov
outsl
cmpsl
les
cmp
xchg
enter
js
loop
mov
insb
inc
lcall
adc
test
lea
add
pop
xchg
pop
das
icebp
and
pushl
clc
pushf
les
out
xchg
clc
mov
cmpsl
and
sub
inc
and
shll
inc
lock
pushl
int
aad
decl
sub
hlt
sti
mov
mov
loop
mov
adc
in
neg
and
les
mov
outsb
xchg
test
in
fisttpl
jo
les
mov
out
xchg
mov
push
cmp
xchg
cwtl
and
sbb
ljmp
mov
pop
loop
mov
sub
sbb
cwtl
ljmp
decb
shll
push
xchg
push
sub
xchg
les
mov
and
pushl
jl
js
fwait
les
adc
push
nop
mov
add
das
clc
pop
lock
popf
out
ds
icebp
sbb
sub
dec
dec
fdivl
pop
inc
out
add
mov
pushl
nop
js
bound
xchg
fsubrs
icebp
cmp
sbb
mov
je
or
sub
aaa
adc
mov
dec
fsubl
jl
loop
xchg
cld
pop
jg
mov
mov
fwait
and
pop
cltd
les
cs
pop
das
push
cld
pop
in
inc
pop
fsts
repz
cmp
ljmp
jmp
and
mov
sbb
sbb
dec
mov
mov
push
and
in
orb
and
push
lret
js
xchg
jae
cmp
dec
or
mov
and
lock
push
dec
hlt
dec
jle
mov
xchg
loop
mov
adc
mov
negb
sub
loop
daa
and
and
mov
inc
or
sti
and
jl
bound
sbb
jg
cmp
sub
jg
out
jmp
mov
add
sub
mov
fsubs
shll
pusha
mov
xchg
ud0
mov
out
adc
std
cmp
out
add
mov
aaa
adc
outsl
push
lret
shll
push
inc
andl
dec
loop
xor
imul
inc
cmp
repnz
movsl
popa
mov
jmp
popa
decl
ret
jmp
sub
ds
sbb
cmp
js
icebp
xchg
mov
dec
ret
pushl
xor
push
lock
dec
popa
inc
pop
mov
jl
call
xchg
dec
jae
das
sar
adcl
jp
cmp
mov
gs
jp
stos
sub
pop
test
into
mov
lock
fwait
jmp
lcall
data16
pop
mov
in
mov
push
in
mov
enter
insb
imul
jmp
and
mov
addr16
adc
dec
mov
jnp
out
popf
cs
cld
jg
nop
cmpsl
punpckhdq
sub
lods
call
mov
mov
ljmp
out
decl
les
or
inc
xor
adc
dec
int
fst
mov
lock
pop
add
stc
mov
std
mov
decl
jmp
imul
rorb
icebp
adc
andl
fcos
cmp
pop
fadds
repz
cmp
int3
mov
inc
decl
das
loop
inc
mov
rclb
dec
sahf
fwait
pusha
xor
sub
xchg
scas
cli
pushl
cmp
and
hlt
jmp
cmp
fldenv
and
jnp
pop
and
fsubs
and
mov
xchg
cmp
dec
repnz
movsb
js
stc
int
jo
jg
jo
push
push
hlt
sbb
pop
jmp
dec
mov
sahf
adc
mov
clc
stos
adcb
loope
incb
pop
shlb
mov
xchg
add
addl
or
or
or
sar
clc
aas
add
nop
or
sub
orb
add
std
pushl
lea
lock
inc
add
sub
xor
mov
add
divb
adc
aas
or
mov
shlb
lret
add
loopne
add
fstpt
jle
stos
xchg
add
push
adc
imul
fsubr
imul
pop
add
and
popl
jle
outsb
add
pop
shl
pop
push
mov
and
add
pop
lock
mov
jg
add
adc
sbb
jl
shlb
push
shl
cld
xchg
cmpb
pop
rcrb
and
xchg
fucomi
lods
aaa
std
cli
ljmp
sbb
iret
push
sti
ljmp
pop
adc
jle
mov
add
mov
pop
pushf
imulb
decl
push
repnz
scas
in
shrl
stc
out
idiv
fstpt
jg
outsl
dec
das
test
jmp
push
sahf
loop
lahf
pusha
jecxz
inc
xchg
scas
xchg
xchg
cmp
outsl
jns
incl
push
fsubrl
testb
pop
push
cs
xor
sub
mov
cmc
sub
loopne
xor
xor
jg
and
ds
mov
push
stos
test
or
mov
mov
jge
sbb
std
fmull
or
mov
xlat
dec
mov
mov
pop
test
mov
mov
adc
jmp
setle
lcall
jb
clc
sarl
pop
fstl
out
bound
push
pop
lcall
pop
clc
divb
into
pop
cld
les
sub
daa
scas
ret
pop
loopne
ret
je
mov
lds
imul
fsubrp
jle
imul
push
nop
repz
aaa
pop
lock
jle
lcall
dec
jge
cmc
loop
lret
xchg
int3
pop
xchg
iret
scas
ret
add
insl
nop
jg
sub
icebp
push
hlt
test
jl
lea
out
out
lds
mov
in
sub
jg
scas
mov
aaa
jmp
fdiv
lods
aas
out
out
mov
push
fidivs
shll
sub
mov
jnp
xorl
inc
dec
jnp
mov
std
lahf
repz
not
imul
lret
mov
cmpsl
iret
pop
mul
mov
fcomps
inc
fcoms
sarb
push
cld
mov
xchg
out
mov
das
and
pop
jge
pop
fcoml
repz
pop
pushf
adc
sbb
jmp
dec
cs
jmp
pop
jne
dec
in
stc
cmp
fidivl
loopne
js
cld
or
add
xor
sti
dec
ret
stos
adc
xor
out
mov
dec
mov
jge
sbb
mov
adc
into
sti
int3
jo
jnp
xor
call
sbb
adc
cwtl
addr16
das
imul
mov
push
pop
aas
ds
jnp
outsl
mov
xlat
adc
es
dec
dec
xchg
pop
cld
call
xlat
jb
jno
xchg
addr16
sub
leave
xlat
xor
call
jno
in
fldcw
mov
lcall
sarb
jg
sahf
add
ljmp
mov
sbb
dec
loope
cmp
imul
pop
push
xor
ljmp
outsb
xchg
js
add
cli
shrl
pop
idivl
jmp
shlb
std
cmc
shll
jg
jle
les
cmpl
dec
stc
popa
jmp
paddusw
xor
stc
pop
ljmp
mov
popa
mov
push
fs
lods
mov
dec
pop
es
mov
sbb
ds
test
nop
in
mov
mov
jle
push
adc
movsl
leave
pushl
in
cmc
inc
std
xor
ds
push
sub
inc
std
or
ds
xor
jmp
jp
lahf
clc
decl
ds
push
mov
push
push
push
sub
mov
mov
ud1
add
mov
in
inc
out
cli
pushl
mov
sub
stos
sbb
jnp
out
lret
test
decl
mov
popf
fidivrl
in
subl
sub
icebp
mov
cwtl
lahf
test
pushl
pop
cmp
cli
cld
cmp
lods
fistpll
mov
sub
mov
mull
cmp
scas
cmp
dec
mov
xchg
jl
outsb
repnz
sbb
das
pop
hlt
lea
lods
mov
aaa
jle
icebp
sti
xchg
mov
ljmp
jno
movsb
cmp
mov
push
mov
sbb
scas
pushf
sarb
or
push
mov
sub
pusha
int3
xchg
inc
xchg
insb
inc
adc
inc
jecxz
xor
adc
jge
jo
enter
dec
cmp
repnz
jo
xchg
lods
mov
push
shl
clc
mov
pop
rorl
mov
sbb
lahf
mov
jmp
call
dec
div
xchg
je
mov
fistps
mov
jns,pt
push
mov
rcrl
outsb
ret
xor
lret
iret
movsb
mov
sbb
jge
and
xchg
xor
sbb
jl
mov
and
xrelease
xchg
mov
jg
pushl
ljmp
sub
adc
add
movsb
push
jg
jge
sbbl
inc
xor
jl
cli
js
insb
je
or
inc
push
std
jns
out
jbe
lret
fcomip
dec
and
sub
sbb
cmp
sub
orb
decl
out
aam
inc
imul
jnp
ret
dec
test
je
push
into
pop
scas
clc
pushl
or
or
jns
in
test
cli
loopne
jae
pop
inc
pushf
sbb
push
aad
push
in
ret
pushf
ljmp
inc
xor
jae
fs
lods
enter
ljmp
popa
imul
inc
inc
lods
adc
cld
mov
into
in
mov
push
movsb
inc
sti
and
push
inc
test
ja
sahf
xor
pop
mov
imul
icebp
sbb
incl
call
ss
loope
repz
xor
out
push
iret
pop
imul
adc
push
in
jmp
jg
and
dec
aad
loope
xor
mov
in
enter
dec
shl
adc
adc
mov
xchg
cli
idivl
les
in
push
jle
in
push
jmp
or
xchg
xchg
mov
mov
fs
ljmp
jno
sub
cmp
and
insb
mov
mov
dec
es
jecxz
pop
sbb
cmp
sbbb
call
js
push
sbb
insl
and
dec
lea
inc
xchg
push
dec
ss
xor
js
jg
or
inc
mov
xchg
or
daa
in
insb
incl
es
in
js
adc
orb
into
push
cwtl
lds
lcall
cmpsb
andb
mov
pop
scas
sub
outsl
fs
mov
inc
ljmp
scas
movsb
rolb
ss
mov
xlat
inc
es
jle
xchg
adc
fimuls
int3
xor
cmp
xchg
xchg
and
int3
enter
xor
loop
mov
lcall
sub
subb
jg
mov
cmp
and
push
fcomip
lcall
jg
sarb
mov
out
cli
xchg
sub
xchg
and
mov
dec
or
fwait
push
ret
int
addr16
lcall
roll
stos
xchg
into
fwait
push
js
jecxz
or
xchg
push
pop
testb
or
and
dec
pop
sbb
loop
inc
stc
pushf
pop
pop
adc
int3
push
pop
mov
push
lret
inc
mov
lcall
cmpsl
add
lahf
repz
int3
xchg
push
mov
xchg
mov
fisubrs
xchg
loop
push
xchg
jne
aas
pop
out
aas
mov
dec
mov
push
stc
jo
cvtps2pi
lcall
or
cmp
mov
mov
dec
and
push
int3
and
hlt
xchg
cmpsl
lds
and
movsl
mov
shl
pop
or
int
test
and
cmp
dec
pusha
iret
jg
cmp
test
fs
ja
loope
rcrb
xor
mov
ds
sti
mov
push
test
dec
add
sahf
inc
dec
imulb
pop
or
incl
cld
idiv
pop
mov
rclb
xor
faddp
repz
cmc
push
or
dec
jg
dec
out
dec
jno
enter
or
pop
and
data16
xchg
cltd
mov
idiv
mov
mov
mov
jb
test
fmuls
xor
push
outsb
jae
xchg
iret
orl
push
jmp
aaa
jg
out
test
gs
xlat
pop
rcrl
fwait
mov
dec
mov
add
xchg
fcoms
in
je
fstp
int3
sub
fcomip
call
out
cli
mov
ss
loop
andl
jl
lahf
call
loopne
aad
sub
hlt
ds
mull
movsb
jl
cmp
pushf
std
in
fisubs
pushl
jmp
loop
in
test
enter
fistps
mov
xor
test
mov
jp
inc
jnp
mov
mov
lock
cmp
mov
insb
jno
es
sahf
cmp
sbb
jo
adcl
call
xor
pop
cmp
xchg
sbb
pop
push
mov
adc
enter
ficoms
iret
pop
bswap
cmc
mov
pop
sbb
ret
sti
pusha
aas
sbb
hlt
daa
stc
test
sar
inc
loopne
ljmp
jmp
cmovns
jle
mov
sub
jg
xchg
push
fisttps
lds
rcrb
lret
mov
ljmp
push
dec
lods
test
mov
jns
sti
mov
dec
add
xchg
scas
xor
pushl
or
push
xlat
add
cmpsb
fnstsw
call
xor
into
pushf
cltd
jecxz
ud0
jg
and
negb
xor
sti
cmp
jl
push
sub
lret
inc
adc
sti
cmc
das
scas
cli
pop
cmc
js
repz
es
push
cmpsl
mov
adcl
incl
cwtl
and
imul
sub
pop
subb
insb
jp
ljmp
fdivrl
cmpsl
jg
fdivrs
cs
lods
bound
lods
jmp
pusha
in
inc
push
jmp
ljmp
push
lret
clc
out
push
add
out
cmpsl
xor
mov
ljmp
or
call
adc
adc
ficomps
xchg
ss
mov
mov
test
push
addr16
jmp
data16
push
push
mov
cwtl
pushf
ror
bound
pushf
test
sub
iret
in
jb
in
ljmp
mov
mov
push
xchg
outsl
mov
mov
pop
add
ja
fsubrs
into
rcr
fidivrs
lds
decl
bound
shrb
pop
lods
testb
filds
ss
pop
mov
cld
testb
add
xorl
movsl
cmp
push
inc
jmp
in
adc
or
mov
dec
enter
repz
dec
sub
sub
xor
fldl
cmp
and
add
push
xor
outsb
rorl
inc
clc
mov
mov
push
clc
sbb
mov
cmp
xchg
loopne
pop
cli
pop
cmp
call
dec
and
jl
mov
das
loop
mov
push
iret
ret
mov
push
mov
xchg
movsl
sar
call
shr
lods
pop
inc
les
adc
cmpsl
jbe
mov
or
fimull
xchg
lods
subb
mov
jl
cmc
in
sub
dec
mov
mov
cmp
pushl
mov
fmuls
mov
iret
mov
sbb
push
jg
xor
jecxz
nop
inc
mov
fistps
cltd
iret
scas
into
cmpb
jnp
ljmp
jne,pn
push
pop
iret
insl
mov
lock
mov
ljmp
dec
sbb
mov
ja
rorl
cs
mov
xchg
hlt
lock
mov
pop
imul
cld
sub
sub
inc
mov
adc
adc
mov
mov
ret
test
ja
mov
jmp
jmp
pop
mov
lret
push
jle
xor
sbb
fistpll
addl
xchg
fwait
lea
inc
and
lea
cld
call
xor
aam
xor
jns
imul
mov
std
mov
mov
sub
clc
push
int3
push
fmul
mov
push
xor
int3
and
mov
pusha
cmpsl
repz
ret
xor
bound
xchg
lret
and
ss
std
mov
es
js
pop
fdivs
loop
mov
stc
roll
decl
mov
lret
inc
mov
jnp
arpl
sti
mov
cltd
sub
decl
in
outsb
sbbl
leave
out
sub
jmp
dec
aaa
movl
lcall
mov
sbb
xchg
ja
sub
int3
add
inc
sbb
jmp
mov
popf
and
sbbl
andb
push
sub
push
ret
test
cmc
or
shrl
test
cmp
ljmp
push
loopne
decl
dec
and
xchg
negb
add
fcomp
incl
out
add
dec
sbb
in
es
lea
and
in
fs
icebp
sub
jns
pushf
jb
mov
insl
incl
sub
xchg
cmc
sbb
fstps
cmp
jle
rclb
jle
push
mov
sti
pushl
lret
jp
adc
mov
cltd
push
jg
test
pop
mov
mov
ljmp
sub
jae
icebp
or
or
mov
pushl
aad
pop
cmp
mov
mov
lcall
dec
std
out
std
into
mov
sahf
call
stos
jo
jl
or
mov
xchg
fsubrl
ja
lds
repz
lods
faddl
ljmp
mov
mov
sbb
stc
ss
movsl
adc
out
call
sti
xchg
sbb
cltd
mov
adc
push
cmpl
insl
loop
or
lahf
push
sub
jg
sub
test
movsl
movsl
ret
sub
les
jbe
sub
sbb
push
lahf
adcl
pop
add
imul
and
jns
jle
mov
or
insb
cmp
cmp
aad
addr16
xchg
push
dec
push
es
into
sub
data16
mov
jle
xchg
or
test
in
jbe
add
push
daa
outsl
fs
das
push
leave
mov
outsb
test
enter
icebp
dec
popf
movsb
mov
fsts
jge
fwait
call
mov
pop
sti
push
cmp
mov
jnp
pop
std
inc
movsb
out
bound
or
cmp
outsl
jmp
imul
flds
in
aad
sahf
int
pop
jnp
or
lds
out
mov
decl
xchg
popa
leave
scas
les
mov
pop
enter
divb
push
pop
cld
cld
rolb
lods
push
pop
or
push
pop
sahf
or
push
mov
popf
out
cmp
inc
ror
loope
mov
or
adc
mov
jo
mov
pop
adc
cmp
aaa
mov
push
aaa
das
mov
pop
popa
jmp
cmp
push
insl
mov
out
orb
int
sub
fnstsw
sbb
sbb
xchg
fs
adc
filds
mov
add
out
lret
push
out
clc
lcall
jmp
inc
pop
adc
movsl
mov
mov
and
and
ljmp
mov
call
lods
push
dec
inc
inc
shll
bound
incl
cs
les
sub
enter
lods
js
aaa
call
cwtl
fimull
push
lahf
fldcw
sbb
add
hlt
add
repnz
jmp
push
dec
aaa
arpl
imul
mov
push
movsb
xchg
loopne
dec
mov
lahf
or
push
dec
mov
xchg
movsl
fisubl
daa
mov
ret
popa
insb
movsb
decl
imul
repz
sub
loop
or
push
addr16
iret
cwtl
xor
cmpsl
scas
call
movsl
adc
sbb
int3
arpl
dec
pop
cmp
addl
jmp
and
loope
call
lods
pop
insb
in
mov
imul
push
lret
fisttpll
imul
jecxz
mov
push
or
jo
outsb
fdiv
orl
jne
adc
int
cmp
incl
loop
fwait
dec
jnp
cld
leave
pop
or
xor
lcall
xor
decl
mov
add
jne
xor
ja
jge
inc
cmpsb
mov
push
or
ffreep
xchg
mov
push
pop
cmp
push
subb
loope
xor
mov
or
xor
or
dec
out
sbb
jo
mov
stos
movsb
mov
mov
ja
push
cmp
push
xchg
shll
pop
inc
cmp
rorb
ja
pop
aam
fcmovu
sbb
iret
push
mov
push
call
mov
jmp
jl
out
shrb
add
icebp
scas
push
cmp
cwtl
leave
push
inc
les
out
dec
mov
dec
inc
rcr
test
jo
pop
dec
jle
dec
and
sbb
vpshufd
inc
ss
jg
pushl
mov
inc
jns
ret
enter
push
clc
arpl
add
enter
aaa
mov
cmp
pop
or
icebp
iret
enter
rolb
jbe
cmp
xor
lea
lea
seto
jb
jnp
jo
sbb
sbb
pop
cmpsb
sbb
pusha
ds
jmp
push
or
nop
outsl
clc
mov
shlb
lret
xchg
decl
mov
shrb
cmp
mov
mov
xchg
jno
inc
jecxz
js
ret
jp
movsl
mov
test
ret
lret
adc
ljmp
jnp
xor
push
shr
std
cmp
jecxz
dec
gs
fsubs
aaa
pop
push
dec
xchg
adcb
decl
rcrl
cltd
std
imul
aaa
jns
dec
jp
dec
arpl
cmp
cwtl
ficomps
frstor
addr16
inc
xchg
movsl
lea
in
cmpsb
push
stos
call
into
ljmp
pop
jge
fidivl
cmp
clc
xor
lcall
call
or
inc
mov
jae
jns
push
fisubl
push
pop
xchg
fisubs
jmp
stos
sbb
xchg
pushf
lds
mov
xchg
add
in
push
roll
lcall
in
sub
fmuls
dec
sarb
xchg
incl
stc
mov
outsb
call
cmpb
mov
pushf
cmp
aam
push
in
cli
inc
or
add
out
daa
iret
sahf
fiadds
repnz
xchg
lcall
lock
bswap
insl
xor
int
cmpsl
lcall
and
ja
or
call
fsubl
cmpsl
pop
cmpsl
push
mov
xor
shll
test
push
popa
das
imul
test
decl
test
mov
mov
sub
lret
icebp
dec
xlat
push
mov
aad
mov
repnz
insl
jno
xchg
add
shll
mov
dec
xchg
push
add
sbb
cltd
mov
insb
and
aas
daa
int
or
mov
xor
das
clc
call
xchg
in
mov
lods
push
fidivl
mov
xchg
push
push
lcall
call
sbb
adc
out
cmp
and
xor
push
sub
loop
cmp
xchg
adc
add
xchg
xchg
scas
sub
ret
sbb
mov
stos
fmul
lock
sahf
pop
cmpsb
mov
xlat
fld
jp
cmp
mov
inc
ret
js
mov
aam
mov
je
mov
adc
jmp
imul
xchg
xor
inc
pop
push
sub
out
xlat
aaa
cmp
lock
movsb
fs
std
lock
pop
in
int
and
addb
decl
add
aad
dec
jle
shr
mov
pop
rcll
pop
mov
fsubl
ljmp
call
or
daa
je
xchg
ret
sub
in
dec
mov
add
dec
or
cli
loope
cmc
loopne
jb
mov
sbb
pop
lcall
in
lahf
cmp
fidivl
jmp
inc
dec
jge
gs
push
dec
jp
jp
mov
scas
jae
jb
rolb
mov
lcall
xor
xor
xchg
pop
xchg
aad
aas
cmp
xchg
lds
dec
lahf
fs
ljmp
cli
cmp
addr16
push
call
jge
dec
mov
pop
cld
call
adc
in
or
sbb
ja
mov
cmpsl
cli
outsl
inc
sbb
enter
call
sbb
test
shl
mov
sub
xor
jl
pusha
stos
sub
fwait
bound
xchg
cmp
les
fdivr
add
sti
ljmp
dec
or
add
push
mov
aas
rclb
pop
push
dec
stos
std
cli
das
sar
gs
push
xor
out
cmp
cmp
jp
dec
sub
lock
movsl
cmp
out
sub
jnp
jl
jecxz
lret
data16
stos
xor
xchg
std
xor
sti
fsubrs
sti
inc
or
std
xor
shlb
fcos
lcall
xlat
fs
sbb
ficompl
stos
pop
xchg
data16
push
cmpsb
lods
shr
test
ljmp
mov
pop
repz
jp
mov
shll
fists
mov
mov
fmull
test
cmp
stos
inc
sub
mov
pop
adc
out
jno
pop
mov
cltd
xor
xchg
clc
outsl
sub
aaa
jb
mov
lcall
and
dec
pushl
loopne
jg
mov
or
xor
jns
mov
cmc
xchg
jmp
dec
xchg
idiv
lcall
dec
cmp
fwait
jae
xlat
sbb
push
data16
inc
rolb
pop
shrl
jmp
push
lahf
jnp
lea
or
push
fstps
scas
lret
outsb
inc
push
sar
mov
arpl
mov
pop
dec
and
cmc
test
ret
int3
and
decl
mov
xchg
and
es
adc
pop
dec
and
lcall
and
pop
test
xchg
dec
movsl
dec
mov
sbb
sbb
cmpsb
test
dec
lahf
shll
add
dec
insb
dec
jmp
loope
incl
cmpsb
push
rorl
imul
call
sbb
daa
mov
adc
call
divb
into
insl
xchg
or
orb
fld
lock
cmp
pop
int3
shrl
add
jg
les
aaa
hlt
xor
mov
lcall
rol
mov
test
test
mov
push
pop
or
int
or
sub
adc
std
lcall
test
push
pop
jno
loope
xchg
jl
out
lcall
rorb
adc
sbb
adc
arpl
aaa
mov
xchg
sub
std
cmp
xchg
out
mov
cwtl
lock
hlt
cmp
cmp
adc
cld
movsb
in
fwait
mov
test
lods
adc
jg
call
push
pop
inc
cli
inc
push
xchg
test
fidivrs
sub
add
push
dec
cs
test
adc
call
mov
pusha
adcb
mov
push
in
mov
mov
lcall
mov
cmp
mov
sbb
in
or
outsl
push
or
push
sub
pop
hlt
pushl
and
sub
movsl
addr16
mov
jg
into
enter
mov
and
jg
cs
out
je
inc
push
fucomi
movsb
dec
sbb
and
les
in
push
shl
pusha
mov
and
mov
inc
ror
lea
addr16
or
loopne
push
xor
pusha
cmpsl
bound
jae
mov
jg
push
push
pop
aam
sub
jge
movsb
lret
testb
mov
mov
cmp
pop
inc
adc
test
pop
pop
dec
repz
leave
mov
lcall
aaa
and
out
stc
push
mov
adc
add
mov
mov
jnp
insb
incl
testl
orl
inc
cmpsb
outsb
cltd
popa
iret
sarl
in
gs
pop
notb
adc
add
sahf
sahf
mov
and
jg
mov
in
push
orb
call
out
push
adc
in
dec
loope
jg
outsl
cli
ja
push
js
out
ret
mov
dec
pop
pop
movsb
insb
add
jnp
out
cld
xor
cmc
fistl
jecxz
cmc
iret
sbb
lods
adc
cmp
jmp
xchg
push
mov
lret
es
test
pop
fcomip
dec
sub
mov
inc
or
mov
mov
mov
jmp
add
dec
dec
ljmp
pop
dec
popf
or
test
subl
adc
jmp
mov
push
cld
fldt
out
pop
popa
xchg
lahf
adc
andl
dec
cwtl
mov
incb
std
mov
leave
push
cmp
inc
lock
cmp
jbe
shll
hlt
out
loope
ljmp
add
or
outsb
add
dec
stc
fwait
mov
push
xor
out
lret
movsl
add
stos
jo
pop
inc
pop
dec
jmp
sarl
fwait
or
loope
mov
jb
out
lds
push
test
jmp
sbb
sbb
lcall
dec
rolb
aam
push
and
nop
les
push
mov
sbb
adc
call
and
sbb
sbb
jg
adc
inc
lods
loop
outsb
jnp
push
mov
mov
push
and
stos
js
jle
loope
movswl
xchg
dec
popa
incl
jmp
insb
push
lods
mov
nop
bound
pusha
cmp
xchg
repz
les
dec
int3
imul
subb
ficoms
insl
mov
popa
rcrl
dec
sub
xchg
xchg
sarb
mov
outsb
jno
jge
enter
ljmp
mov
inc
scas
inc
push
into
test
flds
lcall
nop
add
jb
add
mov
inc
pusha
pop
in
ss
or
clc
cmp
fadds
jmp
pop
popa
push
shr
pop
inc
ja
sbb
cs
mov
mov
movsb
clc
ljmp
cli
adc
cld
inc
adc
cmp
fnstcw
mov
cli
ljmp
mov
pop
orl
cs
in
adc
ljmp
test
jb
push
xchg
inc
fnsave
xchg
lcall
jge
incl
push
sbb
inc
xchg
arpl
sarl
data16
mov
pop
pop
lcall
jmp
xchg
sahf
mov
fwait
movsl
inc
lods
sub
jp
lret
mov
mov
fs
rol
into
push
clc
jmp
testl
adc
adc
mov
jns
fs
push
mov
jae
pushf
gs
sbb
pushl
pop
stc
aad
aaa
inc
inc
push
cmp
cltd
jle
cmpsb
cmp
dec
cmc
cmp
mov
mov
or
dec
inc
cmp
mov
decl
mov
sar
sbb
popa
sub
outsl
jb
int3
out
push
arpl
mov
inc
mov
bound
test
jp
shll
cld
and
adc
or
lods
mov
sbb
mov
scas
push
and
out
lret
push
inc
stos
es
aam
pop
into
mov
rcrl
clc
cmp
adc
xchg
cmp
inc
popa
in
add
push
imul
fidivs
movsb
mov
cmp
subl
jmp
pushl
mov
add
push
adc
fdivs
mov
sub
cmpsl
mull
mov
dec
test
icebp
xchg
pusha
movsb
es
incl
stc
jle
sahf
jecxz
movsb
mov
in
mov
sti
jg
cmp
outsb
inc
pushl
stos
movb
enter
hlt
mov
gs
hlt
imul
jecxz
and
adc
out
cld
mov
or
call
scas
arpl
cmp
rclb
arpl
adc
push
add
pop
aaa
and
mov
jo
jbe
loopne
out
ljmp
fnsave
xor
pop
add
stos
fdivr
out
imul
or
rcll
adc
pop
and
xor
cmp
xchg
cmp
jmp
cmc
ss
mov
je
out
push
cltd
adc
cmp
rclb
sbb
loop
xchg
jno
rol
add
decl
fwait
and
xchg
mov
imul
int3
stos
fcoms
stc
lcall
jg
push
cmp
jbe
loop
lds
lds
fcomip
daa
mov
fptan
add
dec
daa
jns
lret
inc
pop
push
fcomps
lcall
sub
lock
pop
xchg
dec
xor
scas
xchg
in
dec
shrb
and
lds
pushl
lahf
cmp
std
sub
repz
add
jg
fcoms
lods
mov
je
mov
push
cmpsl
ljmp
clc
pushl
push
fistpll
add
call
mov
cli
fnstenv
aam
aaa
cmpsl
jmp
cmpsb
jnp
incl
in
cwtl
stos
xchg
fsubrs
imul
push
mov
pop
mov
xchg
decl
test
push
push
test
cs
add
fidivrs
scas
push
mov
es
cmp
jmp
imul
xorl
or
xchg
stos
and
cmp
cld
inc
cmpb
insl
fs
jg
jge
cld
clc
xor
mov
ljmp
adc
jle
movsl
sbb
stos
fsubr
xlat
dec
dec
fdiv
push
das
sar
lods
pop
sbb
add
push
imul
and
xor
out
incl
fcmove
mull
fsub
xchg
lret
pop
notl
faddp
and
mov
gs
test
sub
jecxz
ret
filds
sarb
fwait
jl
jl
xor
imul
lcall
adc
movsb
inc
addr16
cld
scas
fldenv
mov
lcall
xor
mov
mov
cmp
aad
aad
mov
cmp
cmp
adc
ljmp
push
clc
sbb
aad
cmp
jecxz
jb
int3
mov
jo
cmc
fldcw
cli
jg
je
call
mov
sbb
cwtl
test
mov
lcall
sbb
int
mov
mov
lret
push
xchg
ds
dec
scas
aaa
mov
out
rcr
das
rcrl
mov
xchg
stos
testl
mov
insl
cmpsl
and
call
incl
bound
push
into
pop
daa
lret
scas
bound
insb
mov
cmp
fidivl
cmpsl
fiadds
loope
push
sbb
mov
sub
fdivrp
lods
sbbb
lcall
pop
inc
xor
mov
pushf
sub
push
xor
mov
in
pushl
fsubl
cmpsl
sbb
cmpsl
pushf
popa
pop
bt
or
daa
or
push
push
call
cld
lea
out
xchg
mov
adc
mov
sbb
mov
shr
inc
std
cld
incl
out
les
outsb
cmp
es
outsl
and
stos
cmp
pushl
push
mov
mov
fmuls
inc
mov
sbb
test
shll
cmp
in
xchg
cmp
arpl
or
rcr
repz
outsb
outsb
lods
ret
faddl
incl
mov
sbb
and
push
inc
mov
out
cs
dec
es
lods
pop
cltd
into
push
sti
test
pop
mov
sub
jmp
fcomip
mov
insl
push
mov
movsb
sbb
frstor
push
sub
dec
ret
shll
mov
test
jecxz
xor
lret
movsl
leave
mov
js
mov
jbe
cmp
xchg
iret
mov
xchg
jns
stos
call
jge
je
lock
xor
xchg
int3
faddl
pop
movsb
or
and
pushf
insl
aaa
sahf
adc
test
clc
data16
ljmp
jp
sti
add
sbb
nop
sbb
ret
dec
daa
int3
cmp
xchg
int
pushl
push
test
repz
mov
dec
sub
divl
push
aaa
jg
jnp
lcall
push
push
outsl
ret
jmp
sub
xchg
loope
leave
xchg
and
clc
ljmp
push
test
cmc
outsl
icebp
push
inc
dec
or
push
notl
jl
js
sahf
pop
mov
lcall
pop
xchg
mov
and
sarb
xchg
xchg
jecxz
inc
ret
pop
rcr
idiv
jmp
add
cmp
insl
mov
lock
cmc
scas
stos
leave
xchg
mov
sar
ljmp
addr16
add
or
push
repz
push
or
inc
sahf
loop
adc
inc
cmpsb
loopne
push
mov
push
loopne
out
inc
enter
pop
inc
and
fldcw
gs
jbe
cltd
xor
mov
dec
cltd
cltd
sbb
mov
sub
icebp
addr16
lds
aam
mov
add
decl
lahf
adc
sti
and
cmc
or
mov
xor
and
inc
jns
test
punpckldq
mov
daa
and
dec
add
div
popa
cld
dec
insl
pop
in
rol
bound
pushl
lds
or
cmp
pop
dec
jnp
stos
xor
push
mov
stos
mov
call
mov
add
pop
test
jl
gs
cltd
jnp
jmp
fisttpl
jg
xchg
sti
add
xchg
imulb
movsl
lock
jg
dec
mov
call
cltd
call
xor
loope
adc
xor
mov
sub
mov
andb
negb
cmc
aam
sub
loop
mov
xor
mov
in
or
out
popf
shr
sub
incl
scas
mov
inc
out
inc
pop
push
shlb
fcmovnbe
je
pop
stos
movsl
test
push
xor
rorb
movsl
xchg
adc
mov
pushf
mov
out
je
mov
xchg
mov
sbb
fsubs
or
inc
mov
idivb
cs
mov
lcall
mov
dec
ja
xor
inc
adc
sbb
fnsave
mov
mov
js
and
or
and
lock
incl
fisttps
mov
inc
jne
and
sub
mov
mov
sbb
aas
sub
jnp
mov
lods
rcrb
xchg
rorb
xchg
scas
pushf
pushl
cmp
dec
push
jno
pop
gs
add
mov
cmp
fidivrs
incl
testl
arpl
popa
or
pushl
jl
add
sub
out
or
push
sidtl
decl
jle
jle
test
das
mov
xlat
jge
jg
mov
cmpsl
in
movsb
push
pop
fdivs
ljmp
lahf
sub
mov
or
fisubs
xlat
nop
or
inc
int
incl
outsl
jbe
fnstsw
andl
pop
loope
mov
das
enter
cmc
cmp
inc
rclb
and
xor
dec
mov
mov
pushl
andb
icebp
repz
jne
xchg
mov
jnp
aam
daa
mov
pop
loopne
dec
add
jmp
leave
sub
xor
cmc
xor
mov
cwtl
in
cmp
lock
push
sbb
dec
andb
sbb
push
push
fwait
push
stos
ror
insl
lret
aad
fadds
inc
xor
mov
clc
dec
in
in
in
mov
in
rclb
xchg
inc
daa
dec
mov
sbb
push
or
inc
ss
repz
adc
cmpl
pushl
inc
and
sbb
bound
lock
push
pop
cmp
jbe
ljmp
add
sub
ret
cmpsl
dec
add
ret
movsb
jmp
pop
out
push
loop
ja
cmp
pop
lock
lds
mov
je
insl
mov
test
lcall
adc
movsb
sti
mov
mov
or
roll
pop
lods
incl
add
cmc
ret
mov
lods
and
mov
sub
fsubs
jae
in
ljmp
jns
jb
pop
and
test
pusha
and
mov
aam
cmp
ret
jecxz
add
bound
mov
xor
add
cmp
and
lcall
ss
pop
sub
or
lcall
xlat
stc
stos
int
mov
mov
ret
sub
pop
std
stos
jg
jecxz
andb
fcomip
push
sbb
jmp
pop
sti
push
clc
cmpsl
sarb
xchg
jb
mov
dec
call
lahf
jg
push
loopne
mov
repnz
fcompl
sub
dec
leave
sub
daa
xor
push
test
xor
mov
push
or
jl
pushf
jae
xchg
fsubrs
push
ljmp
outsb
xchg
fdivs
jecxz
jno
subl
jmp
push
outsl
and
int3
ja
fcmovb
or
es
pop
jnp
jns
mov
js
xor
mov
jmp
lods
bound
mov
js
call
jg
sub
cmp
jbe
stc
adc
mov
mov
cmp
mov
xor
fwait
out
test
push
ret
add
push
mov
sub
lods
in
adc
push
fs
lcall
sub
dec
loope
xor
jns
aaa
cmp
in
test
lcall
and
and
add
repnz
in
shl
pop
clc
sbb
mov
shl
stc
jle
incl
cld
cmp
dec
jbe,pn
xchg
xchg
daa
pop
out
mov
mov
out
lock
jns
jnp
or
cmp
je
add
ficoms
push
faddl
push
incl
hlt
insb
in
adc
mov
dec
jecxz
or
aad
fdivrp
xchg
loope
je
cmp
or
call
shl
ss
pop
je
push
call
shrb
xchg
cmp
ljmp
pop
lock
xchg
jg
mov
xor
sti
dec
or
pop
repnz
incl
mov
mov
call
cmp
popf
int3
sahf
out
mov
testl
out
push
arpl
mul
mov
int
xchg
iret
mov
cld
gs
fidivs
lret
loopne
das
incl
insb
enter
insl
xor
mov
test
mov
push
pop
mov
addr16
sub
lret
fs
std
incl
jmp
inc
or
jle
sti
cmp
dec
bnd
ljmp
xchg
shrl
ret
ds
jmp
pop
fisubrs
pop
cli
mov
mov
ljmp
mov
mov
and
std
ret
das
and
in
mov
adc
daa
xlat
arpl
and
xchg
div
outsl
arpl
and
lcall
shrb
sbb
pop
mov
xor
lcall
lcall
mov
retw
push
leave
mov
push
cld
call
lret
jmp
cmp
adc
out
fcmovne
and
push
enter
jl
dec
clc
cs
fldt
fnstsw
xchg
lods
data16
aas
fs
push
lock
dec
xchg
shrl
fistpl
into
jo
pop
ds
cmp
push
jb
lea
outsl
mov
push
ret
cmp
incl
mov
pushf
inc
insb
add
repnz
fsubrl
into
lret
dec
mov
nop
stos
je
ljmp
cwtl
sbb
inc
subb
outsb
sub
movsl
mov
jne
push
xor
call
popa
sub
push
fwait
icebp
or
out
int3
int
xchg
push
mov
mov
mov
ljmp
mov
and
daa
mov
add
mov
int3
sarb
fimuls
cmp
add
lcall
fadd
or
or
subb
pop
fadd
fisttpl
loop
movsb
sub
jp
dec
pop
or
enter
xchg
imul
cmp
neg
leave
sarl
dec
divb
adc
fwait
in
call
jns
pop
sbb
push
movsb
lock
or
adc
or
cld
movsb
mov
lods
mov
shl
ljmp
jp
in
cld
test
ret
lock
sbbl
sbb
andb
sub
cmp
fisttpl
andl
sbb
cmp
dec
add
inc
loope
je
adc
in
outsb
mov
icebp
pop
out
inc
insb
in
mov
or
call
daa
outsl
gs
aaa
std
xor
int
out
lcall
push
popa
arpl
sub
lcall
movsl
jb
jg
push
lods
adc
mov
lahf
decl
inc
jbe
inc
dec
mov
xchg
ljmp
popf
mov
and
jmp
mov
sbb
sub
mov
lcall
mov
cmp
mov
in
push
pop
push
call
clc
insl
sti
mov
call
nop
jo
call
jge
inc
mov
add
jbe
fcomip
cld
xchg
jl
cmp
movsb
push
insl
and
adc
add
jnp
in
jmp
mov
mov
bound
insb
addl
mov
jmp
cltd
in
xchg
adc
popf
insb
in
add
sbb
jg
dec
ss
cmpsb
iret
add
mov
pushf
fsubr
jle
test
mov
stos
jl
dec
jb
sahf
std
xor
es
mov
test
incl
cmp
dec
popa
cmc
inc
xor
mov
je
nop
int
ljmp
xchg
or
adc
jmp
add
sbb
adc
xchg
dec
loop
cmpb
xchg
clc
dec
inc
dec
stos
cmp
lcall
gs
cmp
clc
sahf
cmp
mov
sbb
lahf
xlat
stos
inc
enter
mov
lcall
fistpl
mov
jnp
pop
jg
fcomps
mov
cmp
call
lea
loopne
addl
or
pusha
add
inc
dec
mull
dec
incl
cmpsb
ss
rcrl
jo
rorl
mov
test
lods
mov
sub
inc
iret
dec
mov
movsl
lock
outsb
adc
sbb
imul
imul
dec
fwait
incl
cld
rcr
jecxz
and
jbe
or
dec
out
movsl
sub
fisttps
pop
push
mov
xorb
push
inc
mov
mov
lcall
push
out
sub
mov
sbb
sub
call
outsl
inc
ror
fmul
out
mov
sbb
jno
inc
testl
push
jmp
jmp
int
fwait
out
or
mov
jl
add
out
xor
mov
clc
mov
dec
push
jae
sti
mov
pushf
cmpsl
jo
imul
ljmp
data16
lret
or
inc
jae
test
shlb
sar
cltd
push
in
push
nop
dec
cmp
inc
ds
shll
push
mov
das
mov
test
adc
add
jo
jle
push
dec
fwait
xlat
icebp
jb
pop
incl
and
mov
aas
pushf
mov
jnp
and
jge
out
int
repz
mov
mov
cltd
and
in
enter
mov
iret
xchg
shrb
mov
imul
push
out
stos
pop
pop
xor
pop
fnsave
stc
pop
add
cmp
loop
inc
loop
sbb
popa
xchg
hlt
nop
dec
dec
iret
loopne
test
sub
pop
dec
aad
mov
addb
fistpl
mov
mov
xor
pop
push
pushl
loop
cmp
fs
mov
lahf
and
clc
fimuls
xor
insb
xor
ljmp
xchg
jle
aas
mov
add
ljmp
push
xorb
push
xchg
xlat
outsl
mulb
mov
cmp
idivb
mov
bound
push
xchg
cwtl
ljmp
pop
xchg
push
mov
loop
push
sbb
sbb
sbb
sbb
lcall
mov
andl
adcl
aaa
mov
xchg
push
lahf
test
loopne
mov
mov
sub
mov
and
lcall
fwait
ja
mov
pop
mov
ret
sti
fwait
mov
dec
mov
mov
mov
clc
mov
jg
inc
xchg
adc
cmpsb
jle
pop
push
sbb
mov
and
sub
inc
xor
repz
mov
decl
in
dec
lret
cmp
xor
jg
jno
xor
test
ds
dec
xor
inc
flds
insb
dec
lods
jne
aas
orl
fwait
repz
pop
xchg
jae
lcall
call
xchg
or
and
push
jp
and
xchg
ret
xchg
dec
in
dec
mov
jb
jbe
aas
negl
test
std
cmp
cltd
cld
in
lods
inc
and
mov
sbb
dec
mov
in
stos
push
icebp
js
adc
lahf
dec
fs
push
push
or
int3
cwtl
psubw
ss
inc
in
out
out
decb
or
xor
lcall
sbb
bound
jo
addb
mov
mov
lcall
sub
call
outsl
xor
adc
or
xchg
xchg
repz
xchg
or
dec
add
incl
sub
outsb
out
sub
inc
icebp
jl
cmpl
jnp
ret
mov
pusha
xor
mov
xchg
cli
int
cltd
fwait
in
sarl
hlt
sbb
pop
pop
sub
push
je
lcall
hlt
push
shll
pop
sbb
ret
lock
into
push
das
scas
cs
aad
fistps
and
into
mov
add
mov
movsb
cmp
orb
outsb
and
in
mov
and
xchg
add
mov
clc
decl
or
and
push
cmp
push
push
mov
ja
mov
out
mov
in
filds
aam
orl
push
fld
add
sti
movsb
mov
mov
insb
pusha
cmpl
adc
pop
out
aad
cs
push
int
or
repz
xchg
pop
pop
loopne
jne
xlat
mov
or
pop
ljmp
or
jo
rorb
jno
inc
ja
push
in
sti
xchg
jg
pop
adc
add
test
or
ja
cltd
divl
cs
push
out
mov
int3
sub
movsl
inc
push
lcall
add
call
push
add
sar
push
mov
xlat
test
or
xchg
xor
out
cli
cmp
cli
cmp
dec
faddl
and
pop
mov
inc
pop
addb
imul
pushl
out
mov
mov
in
sub
test
aaa
push
mov
js
pushl
lret
inc
popa
lods
imul
je
jb
push
inc
xor
jns
mov
popa
movd
test
imulb
arpl
xor
pop
in
cmp
and
repz
cmp
js
ljmp
add
into
es
xchg
jle
pop
outsb
dec
in
mov
pop
incl
mov
sbb
aaa
xchg
mov
pop
ret
ljmp
clc
cwtl
mov
int3
lcall
mov
mov
inc
sbb
icebp
dec
out
cmp
push
push
popa
mov
das
loop
sbb
stos
dec
ljmp
cli
bound
xchg
in
or
mov
fsubs
inc
movsb
push
or
dec
push
jb
cmp
xor
or
sbb
repz
cwtl
daa
dec
aam
addr16
sbb
or
xchg
mov
in
das
shll
loopne
push
sahf
push
std
call
sub
lods
lods
jmp
ja
cli
aas
lcall
pop
dec
jnp
add
sahf
xor
call
push
andl
xor
in
jmp
mov
pushl
pop
sbb
inc
or
aad
xor
nop
add
push
fisttps
stc
mov
nop
jmp
push
cld
roll
sarb
cmp
push
decl
xchg
nop
jle
ja
jnp
push
push
int
lahf
jl
cwtl
push
insb
inc
mov
sbb
dec
sbb
pushl
lods
clc
or
jo
ds
pop
or
std
and
mov
cwtl
testb
jge
incl
cmp
pusha
imul
stc
sub
inc
cld
mov
push
mov
test
lret
push
or
or
inc
xchg
mov
daa
clc
test
int
fxam
ss
push
shlb
push
jnp
xlat
mov
cmp
jg
cmc
cmp
sbb
cmp
sub
jecxz
shll
add
pushl
jle
loopne
adc
arpl
cmp
cli
lcall
in
push
mov
inc
xchg
test
mov
movsl
dec
ss
ljmp
adc
xchg
hlt
pop
cld
mov
xchg
lods
pop
mov
dec
outsb
or
out
popa
fcmovb
and
lcall
mov
fnstsw
mov
hlt
inc
ja
push
mov
sbb
pusha
scas
xlat
or
icebp
xor
incl
xorl
xchg
sub
les
shl
fwait
dec
in
push
out
aaa
mov
iret
imulb
mov
int3
lret
fnstcw
push
pop
rcl
sbb
call
std
and
or
sub
jle
fisubrs
inc
out
lret
lret
jmp
mov
xor
pop
test
xor
std
mov
gs
push
mov
mov
xor
or
xor
adc
dec
retw
shll
dec
xchg
lock
ret
call
jo
hlt
ja
mov
icebp
clc
mov
dec
xchg
push
sub
in
and
stos
ljmp
jge
cmpsb
mov
mov
ss
mov
sbb
jmp
pushl
mov
mul
stos
loopne
out
rol
nop
mov
xchg
pop
pop
adc
lcall
pop
jbe
jg
xchg
pop
jo
mov
mov
pushl
divb
lahf
push
aas
in
daa
cltd
push
push
vpaddsb
mov
mov
insl
rcl
mov
dec
out
incl
mov
jo
dec
scas
int
icebp
lods
test
sbb
int3
insl
loopne
cmp
les
sar
sbb
and
clc
sbb
or
call
mov
mov
imul
inc
imul
sbb
movb
add
call
push
jns
sbb
mov
dec
outsl
mov
imul
lea
mov
decl
lock
ds
pushf
sbb
je
dec
sahf
jecxz
aad
pop
lret
lcall
push
or
add
jp
aaa
cld
pop
jecxz
pop
cmpl
out
sti
jmp
mov
int3
sete
or
xchg
xchg
and
cmp
repz
fcmovnbe
sub
sahf
ret
rcrb
in
shlb
or
loop
es
or
icebp
jmp
fs
xchg
or
jb
pusha
fisttps
sub
push
jae
lahf
jge
call
pop
in
sar
fdivrl
jecxz
jl
pushf
imul
das
jp
inc
ljmp
jl
fimull
pop
cltd
lahf
adc
hlt
pop
cld
push
cld
and
mov
insb
lahf
mov
arpl
inc
adc
aam
sbb
inc
add
test
cmp
das
pop
and
loopne
movsb
pop
shlb
add
push
xchg
push
pop
cmc
mov
or
jle
or
pop
sbb
rsqrtps
lcall
nop
rol
fcoml
and
cld
ljmp
test
rcll
sti
jmp
lds
dec
js
pop
sbb
fdivs
jmp
js
xor
inc
mov
push
iret
imul
daa
push
inc
loop
sbb
jmp
dec
xor
xchg
add
jmp
addb
xor
mov
jbe
scas
adc
sar
incl
repnz
sbb
movb
or
cmpl
sbb
lea
aad
pushl
sub
pop
lret
lds
mov
mov
aam
jl
inc
popl
or
ljmp
dec
ja
mov
ds
clc
dec
daa
cld
inc
loope
jmp
push
repnz
xorl
jo
fnsave
shl
xor
outsb
mov
cmp
mov
jl
out
adc
xor
fisttpl
incl
ss
pushl
fcom
das
shl
sbb
daa
insb
xor
mov
jg
xor
inc
test
repnz
sti
sub
inc
jecxz
hlt
hlt
mov
jmp
lock
or
movsb
adc
cli
or
xor
lea
xchg
xor
pushl
and
push
adc
popa
add
test
add
push
andb
add
add
add
mov
mov
push
pusha
add
leave
add
add
jl
pop
mov
inc
jg
add
and
mov
pavgb
sbbb
push
cld
int
pop
add
pushl
ret
add
shlb
lea
push
add
inc
mov
lock
daa
decl
jecxz
xorl
cmp
xor
insw
adc
daa
cmpb
fdivrl
int3
daa
jo
sub
xlat
decl
sbb
fdivl
adc
int3
arpl
pop
arpl
cmp
sar
cmp
std
adc
sub
pop
out
xor
or
out
push
cltd
sub
std
xor
add
mov
cwtl
jmp
fdivs
add
testb
subw
mov
ja
shlb
push
fdivs
sub
jecxz
sbb
fdivs
push
inc
sub
call
in
or
ljmp
jns
int3
fwait
test
xor
bound
ljmp
cmpb
fisttps
push
das
inc
mov
xchg
or
int
pop
and
xchg
std
mov
scas
cltd
inc
cmpsl
jge
int
xchg
sbb
outsl
inc
shll
notb
inc
cmp
ret
pushl
enter
inc
iret
inc
or
aas
push
or
jl
nop
fnsaves
mov
push
xchg
test
xchg
jbe
rcr
sub
xor
jae
orl
mov
and
pop
lret
cmpsb
loope
outsb
lret
decl
jbe
in
mov
pop
popa
mov
push
mov
addr16
popa
cltd
adcb
add
shlb
sbb
push
jo
mov
pop
int
mov
inc
or
xor
add
ja
daa
aas
mov
cmpsl
adc
xchg
in
ljmp
cs
frstor
sarb
xor
jecxz
dec
jg
jp
shll
decl
lock
cmp
jo
add
add
mov
jmp
jmp
add
push
add
xor
fs
pusha
mov
pop
stc
adc
out
jge
call
jmp
loope
cmp
mov
jl
push
adc
xchg
mov
xchg
cmp
popf
xchg
push
divl
xchg
cwtl
addr16
lahf
popf
sbb
decl
dec
sbb
loope
imul
push
lds
sbb
rol
sbb
lock
popa
stc
mov
jge
sbb
inc
mov
push
int3
jg
or
cmp
inc
push
dec
pop
jbe
pop
call
jl
pop
pop
inc
xchg
jge
mov
cld
ret
inc
cli
inc
cmove
int
in
fcomip
push
imul
mov
xlat
and
cmp
aas
hlt
imul
push
icebp
or
mov
fistps
mov
pop
lret
fsubrs
js
pop
mov
pop
or
jg
mov
pop
xchg
stc
icebp
sub
std
ds
aad
push
fstl
fisubs
mov
fcomip
cmp
xorl
dec
icebp
loop
stc
cmp
add
stc
in
lret
sahf
loop
jae
ds
lcall
sub
add
sub
fwait
lret
data16
pop
pop
sbb
icebp
jp
cmp
pushl
add
int
pop
and
add
shlb
xchg
rclb
jo
ljmp
mov
adc
in
or
out
stos
mov
jg
movsb
imul
sub
repz
imul
fucomip
mov
fcomps
decl
mov
adc
ja
std
fcmovnb
xor
mov
mov
addr16
jae
out
insb
nop
push
rclb
sbbl
jmp
or
xchg
les
inc
ret
mov
test
jnp
arpl
insl
and
sub
add
mov
jmp
mov
pop
dec
leave
sbb
ljmp
mov
fistl
insb
fbld
fistl
mov
test
and
push
cmp
xor
pop
mov
popf
insb
mov
ljmp
and
out
cmc
fldcw
pop
cmc
jmp
fninit
stos
cs
iret
addl
xchg
int3
xchg
or
ljmp
cli
call
int3
shlb
push
add
adc
inc
pop
fiadds
inc
pop
setg
fsubs
cmc
pop
in
push
pop
mov
imul
adc
pop
outsl
sub
inc
cmp
ljmp
lahf
addr16
sti
cli
std
icebp
jecxz
sbb
push
ds
xor
sahf
cltd
jns
sahf
mov
fistl
imul
incl
mov
insb
cmpxchg
imul
jmp
fisttpl
ffree
mov
aam
sbb
leave
idivb
mov
mov
inc
mov
fnstenv
xchg
insl
xchg
push
mov
lret
mov
fnstenv
push
ds
pushl
subl
insl
jecxz
mov
int
sub
divb
lea
dec
outsl
decl
insb
sbb
lcall
dec
shrb
pop
dec
mov
int3
cmp
call
mov
popf
test
insl
xchg
out
imul
test
out
shrb
mov
and
int3
jb
iret
or
cmp
cmpsb
int3
jge
lahf
and
pop
fldcw
xchg
xchg
push
enter
out
add
inc
out
ret
pop
and
cmovp
pop
cmp
lret
push
jmp
jge
loopne
lret
sahf
popa
inc
jo
add
shll
lods
out
ret
or
hlt
sahf
mov
call
lock
jo
out
hlt
popf
into
repz
in
dec
push
sahf
pop
add
stos
cli
xchg
dec
sahf
dec
into
test
icebp
decl
inc
stos
sub
pop
mov
aas
dec
pop
mov
add
push
jge
cld
jp
adc
jns
outsl
call
xor
or
or
mov
mov
fnstenv
shrb
lcall
ret
sbb
push
repz
mov
or
pop
out
sti
and
or
xlat
in
fwait
enter
fisubs
ja
dec
sub
add
lcall
pushf
scas
push
sbb
pop
movb
popf
jg
ficoml
add
aas
pop
pmaxsw
mov
jbe
xor
jno
ljmp
fsubl
or
mov
pop
and
insl
movsb
push
push
mov
inc
decl
xchg
xchg
or
fidivrs
xor
std
push
call
or
loopne
push
mov
sti
call
stos
jmp
mov
mov
jecxz
xlat
push
adc
inc
sbb
cld
cmpb
mov
pop
jl
xchg
push
cltd
or
scas
mov
mov
enter
lods
and
mov
ss
into
xchg
cmp
jp
jno
scas
sbb
mov
repnz
cmp
push
test
inc
into
pop
xor
packsswb
lods
cld
add
pushl
sbb
stos
xchg
rolb
or
jb
in
pop
ljmp
mov
test
jecxz
popa
mov
call
sub
std
jae
lea
cmp
jnp
or
repnz
es
mov
sub
stc
loop
cmp
pop
jp
pop
push
xchg
sub
stos
ljmp
mov
popa
popf
fdivr
call
test
xchg
and
jne
mov
sub
mov
cmp
inc
dec
inc
cmp
sar
lds
jp
adc
or
mov
mov
aaa
pop
adc
jg
decl
loopne
loope
loope
daa
gs
inc
sbb
jl
testl
out
jne
icebp
jge
xor
mov
mov
cmp
jecxz
in
pop
sti
push
les
rcll
fcomip
fst
pop
sbb
jg
ja
clc
out
out
inc
cmp
dec
sub
adc
lcall
negl
jnp
and
addr16
gs
mov
sbb
jmp
cmc
clc
into
inc
or
xchg
or
adc
xchg
jl
mov
pushl
or
std
out
cmp
xor
push
push
mov
jnp
mov
lcall
cmc
adc
xor
xor
daa
divb
cld
mov
jnp
pop
not
aas
inc
ljmp
addb
or
ss
gs
xchg
push
iret
jl
mov
dec
adc
inc
jp
sbb
test
cmp
mov
incl
dec
lret
push
aas
andl
jg
sti
outsl
pop
cmp
bound
lahf
std
aaa
jmp
dec
and
std
fsts
pop
sbb
adc
mov
enter
in
pop
mov
outsb
add
ljmp
jl
and
fcmove
push
ret
ficompl
aad
xor
or
push
adc
or
lods
movsl
arpl
and
fmul
mov
jge
xchg
scas
int
jmp
notb
xchg
incl
jmp
push
dec
fdivrs
dec
mov
nop
and
pop
xchg
xchg
rolb
add
add
lcall
jns
pop
xor
rclw
or
push
cmpsl
out
mov
dec
fists
mov
jmp
aad
and
dec
lods
lods
dec
cmp
fdecstp
lret
mov
xor
dec
inc
movsb
ljmp
adc
fwait
pop
mov
xchg
adc
inc
inc
cwtl
dec
jae
mov
cmp
mov
incl
cli
sbb
pop
es
mov
mov
pop
mov
aad
decl
lea
bound
lods
hlt
repz
mov
mov
mov
mov
repz
dec
pop
jmp
stos
inc
cmp
pushl
test
cmp
cmp
aas
push
sarl
aaa
jle
lcall
pop
mov
inc
mov
fstps
mov
mov
mov
jecxz
je
ljmp
rcrb
hlt
inc
mov
inc
movsb
xor
jmp
dec
popa
jne
pushl
inc
int
or
pop
int
and
mov
fidivs
js
sti
ret
call
test
out
je
xor
aaa
jmp
stc
scas
fsubs
lcall
lods
shlb
sub
jmp
in
jno
dec
sahf
or
push
and
cs
repz
lret
cmp
sbb
fisubl
and
cmp
nop
pop
add
fiaddl
push
rolb
ljmp
push
jmp
out
mov
call
and
rcl
notb
decl
test
stc
popa
cmpsb
call
cmpsb
test
mov
lds
mov
in
outsl
cmpsb
arpl
pusha
cmp
in
xchg
pop
pop
dec
leave
test
cli
cmp
loope
fwait
sbb
cmp
inc
out
lea
sub
dec
leave
mov
in
lcall
daa
adc
dec
into
sub
dec
sti
movsb
lret
pop
enter
dec
das
pop
daa
pop
aam
push
out
fidivrl
jle
dec
dec
popa
sti
sub
dec
cmp
xlat
xor
cmp
mov
cmp
jmp
imul
fbld
xor
push
jmp
pop
xor
aaa
mov
adc
fnsave
outsb
mov
fildl
movsl
nop
out
jae
mov
inc
shr
lcall
ljmp
xchg
movsb
push
lods
cmp
fiadds
jns
jg
aad
ja
jns
sar
jmp
xchg
rclb
fwait
adc
les
mov
pop
xor
and
or
call
lods
ss
sub
sbb
dec
add
aad
dec
push
iret
test
sub
lret
mov
std
push
sub
sub
and
add
jbe
xor
or
dec
pushl
jmp
or
push
pop
fs
cld
jmp
test
in
in
and
pop
pop
ljmp
pop
jmp
push
mov
sub
adc
cmp
xor
loopne
sahf
repnz
inc
dec
or
ljmp
ficoms
or
pop
movsl
clc
fwait
mov
inc
jmp
sarl
ss
dec
jno
or
adc
cwtl
cwtl
and
fcomi
lods
pushl
decb
aas
dec
inc
push
sub
jbe
mov
adc
cmp
mov
and
in
call
lock
rorl
jg
sub
dec
js
leave
rclb
cmp
dec
push
loope
xchg
inc
sub
fisttpl
mov
lods
fimuls
std
adc
adc
aaa
std
fidivrs
test
and
mov
test
mov
lcall
sbb
int
test
xchg
cli
pushl
xchg
pop
lea
in
push
sahf
push
sbb
scas
pop
cmp
repnz
lret
ljmp
aam
xchg
iret
icebp
jge
pushf
cli
cmp
fistps
int3
es
insb
bound
push
sti
push
int3
stc
jmp
lret
fdivl
jno
scas
mov
movb
pop
xchg
mov
insl
mov
decl
mov
shr
into
bound
sbb
outsb
push
and
in
insb
xchg
cmp
in
mov
jmp
test
lods
inc
icebp
xchg
inc
scas
shrl
mov
mov
ret
cmp
stos
movsb
mov
fisubrl
les
pushl
xchg
cmc
divb
jae
and
dec
mov
cmp
fnstenv
xchg
inc
lods
ss
jg
mov
mov
call
adc
clc
mov
jle
xchg
xchg
pop
pushf
out
sbb
mov
pop
cmp
insl
pusha
jnp
scas
neg
jb
push
sbb
loop
in
adc
cltd
bnd
jmp
sbb
jle
cmp
sar
popf
cli
sub
imul
ljmp
add
cmp
mov
dec
imul
push
lcall
jl
push
sub
stos
mov
call
cli
push
mov
cltd
mov
sub
sbb
sahf
ret
cwtl
aad
jmp
in
push
lret
sahf
pop
imul
ret
pushf
data16
sub
xlat
inc
sbb
cmp
mov
sti
mov
dec
add
out
sub
jg
cmc
fndisi(8087
dec
sub
add
inc
cwtl
jbe
adc
rorb
fwait
xor
jl
mov
and
or
mov
insl
adc
mov
xchg
ret
mov
xor
fdivl
test
mov
push
sti
cld
popl
jbe
mov
mov
jmp
or
dec
outsb
jbe
fstpt
push
mov
incl
aad
outsb
jb
cmpsl
es
jo
inc
cltd
jle
sbbl
jb
in
dec
xor
mov
jg
movsb
dec
out
xchg
push
pop
sub
outsb
js
loopne
mov
adc
push
mov
push
cld
test
xor
cmp
inc
mov
adc
sbb
push
outsl
out
add
ljmp
cmp
jge
sub
dec
pop
sub
call
mov
jb
push
stc
scas
cmp
xchg
pushl
lahf
jae
lahf
mov
dec
jnp
xchg
push
pop
jbe
cli
add
jecxz
fcom
xor
fcomip
jg
mov
cmp
arpl
dec
jo
data16
scas
ljmp
cmpsl
pop
je
das
cmp
and
and
sbb
lcall
lods
pop
xor
sarb
insb
in
stos
cld
xchg
into
xchg
outsl
push
das
stos
pushf
andl
les
xchg
nop
jl
enter
ds
cltd
stos
mov
pop
clc
pushl
jae
jg
dec
xor
dec
ljmp
decb
inc
cmpb
and
fmulp
mov
es
inc
xchg
movsl
inc
std
ljmp
decl
xor
negl
cmpl
sub
mov
push
xor
xchg
fs
cltd
or
pop
icebp
mov
xchg
jbe
dec
adc
pop
cmp
int3
pop
sbb
dec
data16
mov
lcall
inc
fwait
test
cmc
ljmp
insl
out
cld
insl
loopne
mov
pushf
fnsave
ljmp
idivb
cmp
inc
out
mov
push
leave
lret
sti
mov
sbb
dec
jp
bound
daa
mov
jnp
mov
jns
xchg
pop
clc
dec
loopne
aam
les
jecxz
repz
pushf
lret
sub
call
pusha
out
loope
adc
xchg
dec
pushf
cmpsl
and
jge
xlat
icebp
or
scas
jmp
jae
sbb
mov
xchg
daa
leave
jno
in
sub
add
cmp
adc
in
mov
lcall
in
push
jb
in
clc
and
leave
pushl
inc
test
test
or
sbb
lahf
cmpl
or
pushl
lret
fbstp
dec
inc
sti
sub
dec
and
mov
push
cmpl
aaa
in
mov
iret
pop
inc
out
mov
push
push
cmpsl
mov
ds
cmpsl
scas
loop
push
les
ljmp
cmp
lods
add
movsl
sti
aaa
mov
loope
dec
pop
push
push
pushl
stos
outsl
mov
lock
cmpsb
aaa
and
leave
lret
jl
jmp
and
cli
dec
dec
dec
imul
dec
xchg
jecxz
adc
cmp
dec
cpuid
sub
fnstcw
add
mov
jg
inc
mov
push
push
xlat
pop
and
mov
mov
jns
ss
push
inc
loopne
popa
lods
ret
cmp
xor
add
lcall
hlt
fstps
jnp
data16
hlt
mov
ljmp
cmp
ljmp
testl
and
xchg
push
add
js
adc
lcall
addr16
jmp
pop
aaa
int3
lret
push
pop
jbe
stc
movsb
movsl
cltd
notb
cs
sub
add
mov
in
dec
cwtl
sub
outsb
cwtl
ffreep
mov
or
and
mulb
mov
call
pop
iret
std
xchg
ja
and
jnp
dec
xor
lret
xor
ret
mov
xor
lahf
repz
aas
pop
sbb
xor
mov
addr16
sbb
aas
fsubs
adc
sbb
out
das
popa
xchg
leave
das
jmp
adc
in
fcomi
and
pop
or
xor
loope
add
lret
jmp
cmp
mov
and
dec
mov
mov
scas
popl
sub
cmp
or
arpl
adc
call
xchg
aaa
out
arpl
fdivrs
loope
mov
pushf
repz
push
lods
js
push
icebp
out
adc
jmp
cld
in
test
mov
lods
inc
adc
mov
ret
inc
sbb
into
call
pop
adc
cli
xchg
push
lcall
pusha
fiaddl
mov
decl
int3
hlt
repz
jno
out
fs
test
pop
xor
dec
rolb
mov
mov
fcomip
lahf
pop
jmp
cli
fsts
repnz
mov
xchg
xchg
in
sbb
dec
das
clc
call
gs
sti
jmp
cmp
mov
jno
sbb
addr16
inc
jmp
das
mov
popf
jne
adc
push
lcall
mov
cmp
and
lea
jb
jno
cltd
outsb
mov
mov
jle
pop
addr16
pop
dec
push
xor
cs
mov
std
mov
out
sbb
push
enter
mov
sbb
pop
inc
addr16
in
lahf
sar
addr16
lcall
gs
loop
mov
int
cmp
jge
lcall
cmp
add
mov
mov
in
lock
and
enter
ljmp
mov
push
jmp
inc
pop
orb
xchg
adc
push
mov
fnstenv
out
stos
outsl
adc
js
ss
outsb
rcll
push
in
mov
cmp
testl
fstpt
cmp
lcall
ds
fadds
inc
or
aad
push
std
insb
pop
outsl
fwait
add
cld
std
fsubrs
test
in
cmp
fidivl
xchg
mov
pop
out
call
ret
lret
bound
pop
das
xchg
jbe
mov
jns
insb
rclb
or
mov
pop
enter
xor
or
inc
mov
xor
cwtl
imul
xor
fisubs
mov
divb
popf
mov
pushl
push
xor
test
fsubr
clc
dec
cmp
jl
mov
cld
pop
repz
pop
loopne
imul
lret
loopne
sahf
out
mov
test
sti
hlt
ja
xchg
in
cs
dec
pop
jo
rcr
sub
bound
outsb
pop
push
lret
mov
fucomip
push
xchg
push
std
or
rolb
decl
mov
negl
test
sahf
xchg
ja
pop
inc
pop
mov
aas
and
mov
pushf
incl
pop
jno
pop
mov
fucomip
inc
in
mov
inc
subl
xor
ljmp
pop
out
std
mov
rep
dec
movsb
roll
sbb
hlt
cmp
lea
jg
jbe
repz
adc
jl
add
sti
inc
add
inc
jmp
fdivs
xchg
std
mov
into
add
dec
ljmp
xchg
into
mov
sub
mov
fisubrl
insl
xor
dec
out
sar
call
jmp
add
int
mov
push
into
or
fildll
or
mov
inc
or
mov
or
loopne
int3
adcb
sub
adc
adc
mov
in
sub
enter
pop
dec
jo
aam
sub
mov
jmp
mov
xchg
mov
ss
out
shll
cmpb
outsb
xchg
cltd
nop
xchg
ja
jmp
mov
orb
mov
adc
scas
js
cmp
clc
je
out
aas
loopne
mov
ljmp
cwtl
xor
mov
cmp
push
inc
push
enter
jg
jmp
into
loopne
pop
in
call
pop
sub
adc
or
pushl
popa
fs
sbb
mov
out
rclb
repnz
add
in
xor
dec
sti
rorl
or
fdivl
sti
repnz
out
dec
imul
mov
jl
call
push
adc
mov
pusha
stos
lds
cld
test
sbb
adc
xchg
cmp
mov
test
mov
lods
call
mov
test
mov
xor
cmp
cli
in
adc
scas
inc
test
push
xor
xor
rclb
dec
rolb
pushf
dec
test
dec
adc
fimuls
test
push
cmp
lds
rcll
or
arpl
lea
jnp
mov
pop
icebp
jmp
dec
insl
mov
aas
pusha
cmp
mov
rcrb
aam
push
movsl
jg
jmp
repnz
movsb
xchg
das
lret
mov
mov
adc
gs
out
adcb
repnz
xor
cmp
mov
popf
mov
imulb
jno
sub
ljmp
repnz
in
ja
sbb
sarb
lcall
in
push
push
sbb
pop
dec
jmp
mov
sub
out
rcl
jg
incl
push
mov
aam
stos
push
test
es
pop
scas
in
sub
mov
cld
lcall
push
mov
insb
mov
mov
rclb
mov
out
incl
fs
test
jbe
sbb
cmc
add
movb
pop
jo
jmp
pushl
jo
call
or
cmp
jo
mov
push
das
popa
mov
jmp
sbb
movsl
sub
insl
mov
add
dec
fwait
jo
xchg
ret
lahf
pushl
pop
pop
fadds
dec
fnstsw
dec
mov
incb
add
rcrb
decl
mov
jg
adc
out
test
and
and
inc
and
mov
loope
lods
in
add
sbb
mov
inc
sahf
jg
aad
mov
daa
sbb
shlb
push
incl
aas
push
bound
cmp
pop
adc
insb
and
lock
pop
jae
lret
pop
jb
lods
or
clc
call
inc
or
dec
shll
jbe
lret
jmp
fwait
adc
insl
adc
mov
mov
out
mov
xchg
adc
inc
repz
pop
int
dec
xchg
dec
movsl
mov
imul
popa
rcrb
mov
fwait
dec
push
or
mov
arpl
mov
fnstenv
stos
inc
int
inc
out
jecxz
lds
push
int3
cs
decl
ffree
cwtl
jle
pop
xchg
sub
push
out
cmpsl
aad
sbb
jl
cmp
notb
mov
adc
cmpl
sahf
das
test
ljmp
in
push
iret
push
xor
sub
repz
sub
xchg
sbb
cld
outsl
call
jp
mov
cmp
lret
std
cmp
jg
inc
inc
mov
fdivr
cmp
jl
fwait
sub
into
idiv
ljmp
dec
adc
ficompl
hlt
mov
xchg
push
mov
dec
mov
sub
lcall
int
pop
in
addr16
push
in
mov
imul
out
cmp
mov
movsb
sti
movsb
mov
pop
xchg
jb
sbb
sbb
jp
imul
decl
mov
dec
mov
mov
lret
loope
clc
xor
orl
in
ljmp
inc
add
dec
or
loopne
fs
es
fpatan
cmp
fucomi
jno
or
incl
lea
mov
scas
jmp
imulb
clc
ljmp
cli
mov
scas
fcoms
imul
or
outsl
clc
jg
cmpsl
les
outsb
rcl
call
int
push
jbe
icebp
mull
mov
mov
into
jns
jl
mov
shrl
scas
sbb
mov
jnp
inc
pop
in
pop
idiv
mov
push
inc
fisubrl
inc
icebp
arpl
fiaddl
lret
fldt
jg
in
mov
aam
lds
orb
repz
cld
sub
add
decl
lock
test
shl
movsl
stc
int3
test
jmp
decl
jmp
xor
in
push
or
add
mov
mov
in
in
jecxz
bnd
cmp
shl
push
lea
pop
clc
scas
add
sti
add
incl
loopne
xor
push
out
out
nop
ds
sti
mov
push
xor
pushf
cmpsb
arpl
lcall
inc
jg
pusha
jg
cltd
xor
sub
sub
inc
je
sarb
subl
push
aad
mov
jb
pop
pop
mov
inc
push
in
cmpb
cmpsl
out
int
dec
xchg
int3
cmpsl
ja
mov
mov
out
mov
add
push
rcll
int
aam
mov
clc
mov
inc
push
sbb
xchg
xor
cmpsl
mov
lods
push
arpl
imul
cltd
jmp
gs
cmp
adc
add
inc
mov
fiadds
pushl
sbb
push
insb
std
inc
pop
loope
xor
fcmove
sti
sbb
enter
dec
xchg
adc
jg
push
and
dec
dec
adc
pushf
mov
shl
dec
es
incb
sbb
push
mov
mov
xchg
xor
jecxz
xchg
mov
mov
iret
decl
xchg
cmc
cs
fisttpl
icebp
mov
add
fbld
jmp
ds
dec
add
addl
dec
in
or
sarl
arpl
or
mov
lods
add
mull
ret
repz
repz
pop
mov
pop
clc
jns
mov
js
push
jo
cmp
or
cld
mov
mov
aaa
das
xlat
out
lahf
mov
je
mov
add
inc
xlat
mov
fildl
jp
sbb
sub
push
sub
cld
mov
imul
sbb
xchg
sub
rorb
aaa
scas
fmull
xor
in
push
pushl
dec
stos
cli
and
fwait
mov
cmp
push
mov
out
dec
fcomi
or
je
mov
mov
lds
cmp
jmp
pop
add
lock
ljmp
mov
sub
mov
clc
js
cs
popl
push
xchg
xorb
xor
sbb
stos
incl
adc
mov
mov
jl
aad
mov
dec
movsb
sbb
movsb
outsb
jnp
call
in
pusha
xor
jge
lea
sbb
jb
call
inc
aad
jg
mov
adc
dec
jae
jecxz
and
aad
shlb
push
popa
cmp
or
mov
test
rorb
push
sahf
dec
fcmovbe
xchg
lcall
push
movsl
sub
xchg
or
std
xor
xchg
jp
out
fisubrl
dec
ds
fisttps
mov
popf
mov
std
rorb
jge
mov
test
and
sbb
mov
jae
push
bound
inc
ja
iret
cmpsl
xchg
fcos
ds
loope
loop
pop
sbb
popf
xor
out
add
out
sub
xchg
sub
jnp
lods
xor
in
jns
scas
push
pop
mov
pop
sbb
movsb
loope
jp
mov
mov
mov
decl
or
or
out
lods
jbe
ret
out
int3
lds
std
lock
mov
and
rcrb
mov
xchg
gs
rcr
test
cmp
repz
call
sub
mov
mov
inc
aam
scas
test
popa
popa
pushf
mov
movsb
jns
rorb
mov
push
sarl
or
sbb
out
in
jb
lock
push
cmp
and
jo
in
and
ljmp
or
cltd
popf
sahf
aaa
outsl
adc
dec
xchg
mov
inc
sbb
pop
shll
ja
les
neg
in
imul
mov
ljmp
mov
mov
pop
mov
or
insb
push
inc
dec
jbe
cmp
jmp
int3
data16
test
insb
lods
inc
inc
xor
fstps
sub
pop
idivb
incl
cmp
jbe
aas
jb
jp
xor
mov
mov
in
ret
shlb
int3
inc
clc
jne
shrb
ss
imulb
pop
gs
pop
cmc
decl
stos
test
push
sbb
in
jno
imul
push
xchg
cwtl
fs
sub
aaa
cmp
aad
jecxz
pop
jmp
out
push
or
and
imul
mov
nop
lret
sbb
sahf
mov
mov
mov
jecxz
or
enter
out
outsl
decl
sub
xor
loope
arpl
ljmp
mov
lcall
test
in
jns
mov
adc
adc
imul
add
pop
into
pop
mov
inc
sahf
sar
jo
sahf
leave
cmp
stos
shrl
pop
dec
and
pop
mov
mov
mov
push
out
push
ror
push
jg
mov
lcall
mov
cmp
dec
ss
jle
pusha
inc
mov
pop
mov
lcall
scas
ret
clc
stos
or
xor
xor
mov
out
and
jo
repnz
cs
inc
mov
sti
call
jns
fildll
cmp
dec
mov
sbb
adc
pop
cld
push
add
pushl
loope
cmp
push
mov
addb
inc
dec
enter
or
adc
or
dec
jl
movsb
pop
inc
pushf
jne
mov
in
fdiv
or
push
outsb
mov
xchg
jno
scas
and
dec
xor
xchg
arpl
sbb
or
out
adc
and
and
outsl
int
push
sti
aam
and
scas
mov
add
pushl
sbb
mov
outsb
lods
and
adc
call
lcall
hlt
ss
cwtl
sub
add
test
xchg
mov
pop
es
mov
pop
push
adc
inc
mov
ljmp
stos
jecxz
jg
vpunpckhqdq
adc
pop
push
ljmp
imul
enter
jmp
fcmovbe
pop
sarb
jecxz
pop
pop
jecxz
xchg
push
scas
xchg
outsb
lret
pop
ss
sar
pushl
or
dec
dec
dec
jle
dec
mov
ret
or
int3
sti
jecxz
cmc
aad
clc
subl
lods
loop
frstor
and
loopne
push
mov
jg
lds
pop
and
int3
js
pop
mov
inc
lods
jb
cld
je
push
cld
jle
mov
adc
mov
push
cli
movsb
hlt
or
testl
jb
lods
cltd
out
adc
or
mov
cmpsb
dec
scas
cmpsb
jnp
insb
fnstenv
dec
hlt
lcall
jne
xchg
jmp
xor
popf
imul
lcall
outsb
adc
ret
cmpb
sub
push
or
decl
out
orl
cmp
ljmp
je
jns
jle
push
cli
int
xchg
adc
insb
inc
inc
sbb
push
pop
movsb
out
imul
adc
xor
xchg
dec
les
add
push
mov
cmpsb
jg
or
jno
rclb
fcmovne
shll
mov
xor
jno
shll
cmp
fcomip
out
mov
lods
mov
nop
sub
cmp
and
lret
xchg
ret
incl
cld
ljmp
rorb
rolb
inc
fsubrs
imul
mov
jb
inc
mov
dec
mov
data16
jp
inc
xchg
dec
shll
sub
xorb
out
lcall
icebp
jge
outsl
sbbl
push
dec
cmc
inc
sbb
inc
pop
jmp
mov
mov
outsl
popa
incb
push
or
dec
xor
cwtl
cltd
xor
jmp
xchg
sar
out
mov
add
addr16
sbb
cmc
and
mov
out
clc
das
xor
mov
cmp
mov
pop
and
mov
mov
sbb
or
fcos
incl
roll
ja
shrl
mov
and
aad
outsl
xchg
sub
jne,pn
push
xchg
pop
icebp
ljmp
mov
cltd
repz
push
cs
add
mov
pop
sbb
xor
jge
xchg
imul
test
jmp
sbb
fcomip
ffreep
cmp
xorb
pop
cltd
aam
mov
cmpl
jmp
addr16
loopne
xchg
rol
inc
mov
dec
xchg
in
rol
clc
aaa
std
jmp
mov
and
in
xchg
xchg
mov
adc
test
pushl
add
cmp
mov
mov
mov
cli
jmp
fs
mov
pop
mov
pop
sti
add
incl
ljmp
fisttps
mov
xor
shrb
pushf
orl
popf
pop
mov
mov
jg
stc
inc
jecxz
dec
sbb
ret
in
xor
add
pop
xchg
sbb
iret
sub
out
jecxz
in
loope
sbbb
sahf
cmp
or
xchg
dec
mov
xchg
movsb
jecxz
jmp
out
jmp
int
clc
or
xor
dec
enter
mov
push
je
jg
icebp
pop
lods
mov
scas
stos
mov
sub
xor
jg
into
dec
std
outsl
test
jecxz
mov
or
cmp
mov
pusha
mov
push
cmpsb
cmp
aas
cwtl
jg
xchg
ret
sbb
add
mov
pushl
mov
push
pop
push
jmp
enter
ret
cmp
xor
and
call
mov
out
mov
into
mov
lods
pop
push
ss
mov
inc
push
insl
mov
fiadds
jmp
sub
test
xor
loop
andl
lcall
jae
dec
mov
out
js
loope
xlat
sub
es
sti
popa
cld
scas
or
push
jl
sbb
sub
aas
inc
lcall
jmp
xchg
std
pop
in
cld
cmp
repz
sbb
iret
dec
sub
pushl
or
mov
or
insb
fcompl
addr16
xor
dec
pop
loopne
lcall
insb
jge
sahf
mov
neg
mov
repz
mov
mov
ret
pushf
mov
jmp
mov
clc
xor
ficompl
xchg
or
mov
cld
loopne
decl
adc
inc
cmp
sti
push
popa
insb
push
xor
push
mov
xchg
mov
ljmp
xor
popa
test
sub
icebp
movsb
into
arpl
cmp
mov
les
ljmp
xchg
into
pop
sbb
adc
jno
cld
rorb
push
lds
adc
sub
jg
ret
dec
inc
stos
mov
das
test
imul
test
ljmp
cmp
out
push
push
test
clc
inc
ds
add
cmp
ljmp
fnstsw
fmull
bnd
shll
jno
or
sub
loope
xor
in
lcall
cmp
push
mov
pop
or
call
ficomps
sbb
mov
icebp
stos
push
ja
push
and
fadds
push
inc
inc
adc
mov
mov
mov
cmp
imul
imul
lcall
movb
xor
push
push
sti
lret
or
mov
xchg
insl
scas
enter
incl
popa
dec
adc
pop
lds
push
xchg
jb
xchg
cmp
std
sub
imul
stc
xor
decl
out
mov
adc
into
mov
cltd
mov
mov
push
mov
in
imul
incl
iret
rcr
jle
dec
inc
in
sarb
adc
fisubrl
div
insb
sub
xchg
adcb
cmp
test
jmp
pop
sbb
mov
fisubs
inc
cs
test
popf
cs
xor
mull
push
aad
push
inc
inc
cmp
jle
cmp
addb
nop
mov
aaa
xorb
dec
jbe
loopne
lret
push
clc
xchg
pop
leave
test
inc
jo
test
sbb
push
sbb
loop
inc
mov
in
mov
cmp
dec
stos
cmp
sbb
inc
bound
jle
mov
dec
jns
shlb
pop
sbb
cld
decl
or
aas
jo
jg
sysenter
lret
pop
push
icebp
mov
add
or
mov
ljmp
stc
and
mov
adc
lret
je
add
sbb
adc
mov
sbb
fcomip
mov
mov
xor
fs
push
mov
and
inc
gs
and
jmp
lds
xchg
pop
push
mov
push
repz
outsl
iret
decl
inc
stc
or
test
jns
not
pop
sub
push
aam
mov
imul
pop
mov
aam
mov
inc
and
jg
mov
xchg
cmpsl
add
cmp
sbb
sbb
cs
inc
add
and
fadd
sub
scas
lds
insb
pop
mov
gs
std
sahf
test
sbb
push
cmpsl
cmp
testl
pop
mov
or
mov
jmp
inc
mov
sbb
sub
incb
sbb
mov
das
mov
add
cwtl
js
lods
incl
movsb
adc
daa
and
pushf
sti
out
or
mov
enter
mov
testl
pop
outsl
aam
out
out
int3
outsl
inc
lret
xchg
incl
lock
pop
jb
clc
test
add
inc
inc
mov
gs
jl
sbb
pop
mov
pop
adc
lcall
cmp
sti
mov
xor
sbb
test
loopne
jae
pushf
fiadds
call
sub
sub
xchg
sub
sarl
movsb
mov
popa
test
inc
pushl
xor
mov
lahf
pop
dec
mov
mov
ffreep
ja
dec
dec
cmc
mov
decl
popl
dec
pop
rcr
outsb
mov
in
jg
cmpl
mov
dec
sub
pop
cli
dec
jge
clc
test
lock
jne
ret
pop
xor
add
xchg
shrl
cmp
jae
cmp
or
scas
push
jnp
test
jle
push
hlt
xor
dec
das
push
xchg
push
lock
inc
jg
sub
ljmp
inc
mov
ret
aad
call
outsb
pushf
aas
popa
orl
daa
and
mov
mov
inc
and
mov
dec
xchg
lds
dec
int3
mov
push
loope
jno
fwait
jp
dec
cmp
mov
fwait
shrl
incl
inc
scas
imul
repz
dec
xlat
repnz
pop
cmp
in
jp
and
decl
push
mov
sub
test
ljmp
lods
push
mov
loope
leave
lock
movsb
pop
lock
call
xor
je
mov
fnop
fcoms
aam
jae
mov
aam
adc
adc
lcall
clc
jno
sub
sarb
add
xchg
cwtl
xchg
mov
pushl
fsubp
lock
mov
mov
mov
in
add
push
xor
scas
js
ljmp
lcall
cli
in
cld
push
cmc
dec
outsl
mov
cmp
fs
mov
xchg
inc
pop
pop
xchg
jg
rcr
cmp
test
mov
xor
push
mov
aaa
cmp
mov
ljmp
shlb
jecxz
les
les
test
imul
call
cmp
pop
jecxz
and
jno
sbb
pop
stc
mov
ljmp
out
mov
ficoml
push
cmc
je
add
or
notb
sub
fisubrs
in
adc
scas
dec
xor
outsl
cmp
mov
and
ljmp
sub
xlat
jb
paddsw
dec
icebp
jl,pt
mov
movsb
or
xor
call
mov
xlat
adc
mov
in
lods
out
js
or
sti
pushl
sbb
push
dec
inc
dec
fbld
dec
movq
add
lods
mov
inc
add
incl
sti
and
mov
lret
mov
stos
pop
sub
outsb
mov
add
repnz
popa
jno
decl
adc
dec
xorb
cmc
scas
add
dec
push
cmp
dec
pop
movsl
mov
in
jne
cmp
and
adc
and
lods
cmp
pop
or
iret
or
call
mov
scas
fcompl
imul
stos
sbb
outsl
inc
push
dec
nop
dec
mov
xlat
insb
inc
push
inc
jmp
sub
dec
movsl
inc
jo
jmp
xchg
pop
or
enter
loope
mov
loop
jl
cli
ficompl
cmpsl
adc
xor
or
out
test
into
daa
sbb
ljmp
jle
push
test
das
dec
les
loop
stc
imul
in
dec
dec
xor
pop
or
decl
push
lcall
xlat
xor
cmpsb
mov
leave
test
and
loopne
push
aas
sub
into
dec
cld
jp
mov
fsubr
sub
jb
ret
sub
dec
mov
xchg
push
cmc
mov
ret
out
pusha
ja
jne
add
jne
ret
jne
push
cmpxchg
fs
out
add
mov
push
addr16
mov
imul
xchg
adc
sbb
push
jg
or
out
repnz
push
and
xchg
sbb
sub
fcoml
ret
enter
and
push
pop
ja
stos
std
pop
dec
mov
pop
in
xchg
mov
mov
add
jle
mov
in
mov
add
call
inc
test
cmp
dec
in
fdivs
call
bound
imul
jmp
inc
pushf
in
ret
stos
push
push
xor
xor
lock
jo
xor
leave
cli
stc
mov
xchg
icebp
jmp
mov
out
mov
ret
pop
cmc
decl
mov
adc
xchg
push
sbb
mov
push
loope
out
call
jns
imul
in
xchg
fcoml
pop
lods
cmpsb
das
clc
xchg
fimull
pop
decl
es
test
jb
mov
lds
int3
cmp
je
lds
cmpsb
sbb
rcrl
xor
mov
mov
xchg
xchg
rcl
mov
mov
or
jge
daa
shlb
enter
mov
mov
sub
dec
rol
sub
or
lea
mov
jmp
mov
leave
xor
lds
mov
maxps
or
gs
jmp
sti
or
adc
pop
pop
outsb
inc
xchg
sub
mov
fwait
or
fcomi
pop
xor
lcall
imul
mov
adc
xchg
dec
xor
jne
mov
stc
pop
xchg
out
hlt
dec
fcoms
loop
jmp
sub
and
pop
fsub
and
push
mov
cmc
lods
repnz
incl
sahf
cmpb
sbb
movsb
dec
out
xor
mov
mov
loop
sbb
rcrl
insb
and
dec
in
xchg
jge
mov
decl
lods
mov
rcrb
scas
sbbb
jne
sbb
sbb
lcall
out
fidivrl
pop
loop
adc
decl
iret
dec
cmpsl
addr16
sub
dec
sub
imul
not
es
and
inc
aas
lcall
lock
push
mov
lcall
mov
cmpsl
lods
jae
test
mov
sub
mov
or
mov
sub
decl
cs
ret
xor
repnz
loop
arpl
cli
or
int3
sbb
push
les
mov
xchg
pop
das
inc
adc
repz
repz
call
and
cld
lret
into
out
pop
push
cmp
je
cli
cmpsb
mov
imul
dec
rclb
rcrb
clc
pop
mov
push
mov
cmp
xchg
outsb
pop
adc
out
insb
loopne
pop
jb
mov
testb
ljmp
inc
movsb
pop
lea
daa
and
mov
inc
inc
mov
test
ja
leave
ss
loopne
in
and
lret
lods
push
mov
and
inc
vmptrst
icebp
dec
aaa
sub
cltd
adc
sub
in
jne
fisubl
std
sub
xchg
shl
mov
pushl
in
hlt
mov
xchg
mov
pop
sbb
lahf
call
jg
daa
xchg
dec
arpl
and
ljmp
pop
add
call
movsb
push
pusha
sub
or
mov
shll
mov
sbb
call
pop
ds
pop
cmpl
int3
mov
pop
inc
mov
daa
sub
decl
lock
insl
iret
mov
jp
inc
adc
jge
cs
xor
pushl
imul
rcrl
lret
sbb
pop
aam
pop
xor
jmp
dec
inc
inc
shlb
xchg
aaa
lcall
cmp
dec
inc
stos
xor
mov
call
fisttpll
ljmp
rclb
rorl
jae
cmpsl
or
and
jmp
jecxz
cmc
add
paddq
fidivrs
jae
push
out
jge
pop
push
stos
mov
lods
adcl
mulb
jmp
mov
mov
js
xchg
fsts
or
mov
addl
pop
fcomip
jmp
mov
push
and
loop
shll
data16
movsl
pop
call
xor
or
ret
inc
dec
adc
sub
adc
in
sub
cs
lcall
int
mov
popf
adc
mov
imul
ss
dec
jnp
add
pop
icebp
mov
xchg
mov
imul
enter
sahf
pop
dec
stos
pop
cmc
incl
imul
fldenv
push
mov
mov
enter
add
daa
pop
jecxz
shl
insb
std
push
jno
push
or
orl
pop
mov
scas
inc
pop
sti
xchg
cmc
adc
push
dec
pop
inc
lods
mov
inc
sbb
dec
pushl
or
cltd
mov
sub
test
inc
push
inc
std
and
ljmp
test
sahf
xor
lahf
lds
jns
scas
cmpsb
clc
lea
jmp
ljmp
fidivl
fldcw
lea
sbb
aam
jg
jmp
mov
add
mov
cmp
pop
repnz
repnz
call
push
adc
movsl
xor
sti
mov
inc
xor
push
daa
insl
mov
inc
loop
cmp
pop
imul
js
xchg
bound
fnstcw
jle
insl
out
stc
arpl
adc
fwait
aad
or
aas
adcl
mov
fwait
xor
movsl
arpl
cmp
cmp
dec
inc
inc
enter
in
push
lock
and
cmp
add
add
mov
cmc
outsl
or
lret
pusha
mov
xchg
jb
jb
inc
jmp
ds
mov
mov
bound
movsl
sbb
xchg
and
push
add
push
push
std
mov
xchg
inc
std
xor
cmp
out
mov
and
cmp
es
enter
cmp
pop
hlt
imul
call
and
repnz
mov
inc
in
nop
push
stos
leave
scas
jg
sub
out
cmp
cmp
or
pop
imul
sub
pop
mov
jmp
cmp
test
lahf
outsb
xor
movsb
cmc
call
pusha
xor
decl
std
dec
bound
jp
add
jmp
adc
daa
jb
addl
ljmp
out
dec
push
cmp
popa
ret
sub
inc
xchg
push
std
adc
mov
cmp
decl
call
jl
xor
inc
sahf
dec
out
push
ss
cmpsl
push
push
aas
inc
pop
sub
add
pushl
mov
cmpl
push
inc
pop
sarb
xor
cwtl
nop
dec
call
pop
int
push
out
sbb
aad
jge
pop
push
out
movsl
push
addr16
push
call
sub
dec
andl
sbb
repnz
mov
out
ds
sub
push
addr16
mov
mov
out
jbe
scas
pop
fsubl
cwtl
dec
icebp
lcall
es
xor
decl
inc
inc
jle
popa
inc
dec
stos
push
pop
jmp
decb
lods
addb
icebp
in
inc
or
and
fisubrl
inc
push
lods
fisubrs
pop
push
jge
leave
push
jmp
mulw
loope
cmp
imul
sbb
test
xor
out
inc
add
movsl
mov
test
jbe
or
adc
sbbb
int
xchg
clc
inc
pop
pop
or
and
jl
sub
lahf
push
std
sbbb
js
jae
fsubs
add
lret
mov
aam
sahf
mov
push
push
fnsave
in
hlt
pop
lods
jo
repz
jle
fldln2
jmp
dec
mov
icebp
imul
sub
sbb
xchg
jmp
jae
mov
sbb
sbb
sub
cs
int
sbb
dec
fisubl
lcall
rolb
popf
or
sbb
lods
mull
xor
and
ja
ja
incl
mov
decl
jne
cmpsl
mov
xor
les
loope
rcl
lret
sub
push
inc
scas
insb
addb
nop
mov
mov
adcl
hlt
sbb
ljmp
pushl
cld
cltd
push
shrl
imul
jbe
rclb
mov
call
pop
or
xchg
push
in
mov
imul
lods
jmp
cmc
cmp
xchg
jecxz
fs
jmp
ljmp
mov
ret
xchg
push
and
mov
fs
enter
and
jmp
or
movsl
add
lods
call
clc
xchg
in
mov
and
jmp
cmp
call
push
push
dec
jo
jge
stc
out
push
cmp
setb
decl
js
insl
out
dec
inc
out
jno
mov
push
call
fbld
fildl
inc
add
out
cmp
add
lcall
popf
sbb
mov
xor
iret
imul
inc
je
dec
adc
call
mov
jae
jne
lcall
sahf
psrlq
adc
mov
pushl
daa
jle
aaa
add
inc
pop
inc
add
sbb
inc
pop
xor
mov
decl
jl
jb
inc
out
cmpsb
subl
rcrl
sub
add
pushl
cmp
das
xchg
xchg
lods
stc
clc
sub
les
dec
ds
mov
pop
xchg
aaa
sub
nop
int3
add
mov
fscale
cmpb
mov
push
mov
mov
push
test
lret
and
cmpsb
mov
ret
lock
ja
pushl
push
jg
jb
icebp
les
cmpsl
sub
mov
adc
lcall
inc
mov
or
mov
xor
pop
mov
insb
jle
lcall
pop
movsb
pop
jmp
jp
add
das
inc
mov
inc
icebp
mov
cld
sbb
idiv
jmp
arpl
xchg
jbe
jne
add
dec
mov
ds
fsubrp
adc
scas
and
jge
pop
jecxz
xor
mov
pop
xorb
fsubr
inc
leave
dec
je
cmpsl
pop
inc
pop
cmp
cs
loope
ljmp
mov
sub
imul
mov
lcall
and
in
pop
mov
jns
xchg
add
mov
repnz
pop
pop
test
ds
dec
jns
fs
ja
pop
imul
int
enter
mov
movsb
scas
pushl
jo
mov
xchg
cmp
xchg
jle
jp
lahf
orl
add
scas
jg
aad
faddl
sub
fwait
inc
rorl
inc
je
mov
mov
popa
jle
ljmp
xchg
jo
xor
and
scas
xor
mov
xchg
icebp
cmp
mov
pushf
insl
mov
hlt
outsl
test
mov
or
mov
loope
into
clc
jle
hlt
dec
jle
mov
jo
addr16
jmp
hlt
lahf
jmp
xchg
arpl
insb
mov
je
lcall
add
sbb
in
dec
sbb
xor
mov
shll
test
cmp
sbb
gs
xor
push
inc
push
fdivr
and
mov
xlat
rorl
dec
push
pop
mov
fsubs
jns
mov
dec
dec
jae
add
jmp
lea
dec
cld
cld
jne
mov
inc
cmp
pusha
push
mov
xor
or
adc
sahf
aas
sbb
orb
dec
cwtl
xchg
and
cmp
xchg
ljmp
loop
dec
mov
xchg
cld
inc
fmuls
es
sti
js
decl
stos
pop
bound
jl
test
mov
mov
out
jecxz
incb
sbb
ljmp
enter
dec
mov
and
jns
ss
call
ficoml
sub
cmpsl
jo
dec
icebp
dec
shr
mov
mov
push
xchg
and
inc
jnp
cmp
fcmovnu
fwait
or
out
cmpsl
xor
filds
nop
stc
pop
mov
cwtl
mov
inc
adc
rorb
dec
cwtl
and
shlb
call
add
test
lock
xchg
cmpsl
dec
or
pushl
outsl
imul
mov
sahf
dec
jbe
ror
push
mov
mov
in
cld
jmp
cld
inc
cwtl
cmp
dec
sbb
ret
mov
cmp
data16
push
jge
pushl
mov
pushf
daa
sub
imul
jbe
dec
mov
outsb
imul
jle
inc
mov
push
fisttps
in
ds
test
les
mov
inc
test
inc
jp
cmc
aaa
jbe
jnp
sub
mov
call
aad
sub
cli
jle
sbb
xor
cmp
or
lds
adc
adc
and
lret
ds
xchg
inc
or
dec
adc
mov
in
xor
cmp
push
ret
ljmp
push
mov
addl
or
cmp
mov
cs
adc
call
lock
xor
push
sub
pop
push
xchg
stos
les
imul
xchg
sub
call
inc
jb
cmp
jl
aas
vunpcklps
in
sub
pop
ljmp
sbb
or
xchg
jecxz
cmp
inc
inc
mov
sar
call
and
or
aad
andl
mov
dec
jnp
cmp
sbb
push
adc
cwtl
mov
inc
sub
xchg
int3
jecxz
add
mov
les
pop
icebp
xchg
lret
out
shll
fisubrl
push
pushl
lods
and
sbb
inc
lret
ficomps
out
xchg
inc
bound
mov
add
mov
shl
stc
mov
and
jmp
push
push
pop
pop
dec
rorb
in
add
cmp
push
decl
in
xchg
or
out
xchg
fildll
mov
daa
mov
cwtl
out
cld
nop
mov
lcall
mov
lods
pushf
call
mov
pop
hlt
mov
jecxz
sahf
fildll
test
xor
mov
call
sub
test
sub
loopne
call
outsb
rolb
fistps
lcall
push
aam
adc
mov
xor
mov
call
inc
fdivrl
cwtl
lods
rclb
inc
jb
jmp
adc
repz
incl
and
lret
mov
cmp
shlb
out
dec
xchg
fwait
cmpsl
mov
xor
dec
mov
jmp
fcomip
in
nop
shl
pop
jg
dec
add
test
and
jnp
mov
pop
xchg
popf
addl
mov
adc
push
add
sbb
iret
cmp
sarb
sahf
and
xor
pop
add
or
cmpsl
ss
push
ljmp
xchg
mov
stos
pop
jmp
push
fwait
mov
ljmp
jmp
fidivs
idiv
push
or
jge
adc
mov
xchg
es
pop
mov
lods
mov
ljmp
repz
stos
scas
dec
outsl
dec
cwtl
ficoml
insb
jmp
or
jg
call
xlat
jle
roll
push
pop
stos
hlt
mov
pop
ret
jmp
or
xor
mov
pusha
cmp
pop
lret
and
adc
mov
popa
subl
mov
jmp
push
stc
testb
pop
rorl
test
inc
repnz
addr16
mov
js
or
cmp
xchg
mov
es
in
ljmp
jnp
jnp
and
mov
mov
inc
xlat
repz
jge
outsb
xchg
ljmp
jle
or
shrb
or
jp
add
mov
ljmp
push
mov
insl
les
pop
rcl
sbb
push
ss
incl
gs
mov
ds
dec
xchg
sbb
fcoms
xor
ljmp
ljmp
inc
xchg
push
ljmp
imul
lret
in
pop
mov
inc
adc
in
call
decb
mov
jge
jl
shrd
stc
hlt
mov
es
jmp
and
dec
add
mov
push
mov
jnp
pop
or
mov
sbb
inc
shl
jle
jecxz
mov
inc
aam
xchg
nop
sub
gs
jle
mov
out
mov
lcall
movsb
mov
pushf
xchg
std
js
and
push
repz
jl
ja
xor
outsl
inc
es
mov
mov
aam
test
nop
pop
daa
inc
loopne
add
cld
fisttps
sbb
add
repz
mov
scas
dec
dec
aas
xor
pushl
hlt
pop
mov
popf
and
lods
popf
daa
dec
lcall
out
scas
jl
loop
out
out
call
out
push
lret
popa
pushf
pushf
jnp,pn
jecxz
sahf
xor
pushl
in
dec
dec
sbb
lods
sti
xor
filds
pushf
xchg
outsl
mov
call
dec
or
xchg
out
mov
push
addr16
cmp
rclb
insl
jp
xchg
jne
inc
sub
mov
insb
cmpsl
mov
jle
mov
sub
into
ljmp
and
in
xor
and
lods
xchg
pop
xchg
mov
out
clc
decl
push
loope
xor
xor
adc
rolb
aaa
in
xor
jmp
icebp
inc
mov
mov
les
fs
xchg
mov
aam
hlt
div
dec
jecxz
std
sub
mov
fists
fidivrs
incb
ljmp
shl
stc
pop
push
inc
das
jle
insl
jns
fidivrs
add
imul
cmp
mov
call
sub
cmp
adc
ret
sbb
mov
sub
xchg
sbb
inc
sar
ss
jp
ss
pop
stc
push
insl
aas
push
lcall
les
sub
rcll
lods
addr16
sbb
cmc
xchg
cmp
cltd
cs
jmp
test
or
call
pop
mov
pop
add
xor
stos
inc
int
pop
shrb
stos
loope
decl
in
xchg
jp
push
aam
daa
and
addr16
xor
in
xor
mov
jo
mov
mov
cmp
pusha
and
add
push
pop
inc
dec
sti
out
clc
mov
cmp
adcb
cmp
or
loop
jecxz
mov
leave
xorl
enter
mov
mov
xchg
psubw
mull
test
ficoms
nop
jmp
jmp
movsl
jge
dec
xchg
jbe
sub
xor
inc
jl
lret
cwtl
sbb
push
std
push
mov
inc
lods
idivb
jmp
fdivrl
cltd
gs
call
jbe
dec
sti
and
and
mov
lods
fisttpll
pop
mov
dec
ljmp
loopne
stc
insl
scas
dec
outsl
mov
xor
sbb
mov
pop
dec
iret
std
es
mov
cwtd
pop
pop
imul
push
repnz
sub
cmp
cli
pop
test
cmc
aaa
mov
pop
icebp
lock
xchg
mov
call
push
mov
jecxz
add
mov
enter
dec
cmp
ljmp
sub
pusha
inc
xchg
push
rcll
test
dec
lods
xor
cltd
push
pushl
jns
enter
mov
fwait
data16
lcall
test
cmpsb
mov
call
dec
scas
movsb
cmpsb
cwtl
xchg
mov
pop
dec
sub
mov
int3
jl
pop
decl
lahf
mov
test
mov
pushf
xor
sbb
sub
lahf
test
push
push
sbb
xor
xchg
fiadds
cmp
or
mov
sbb
pop
call
andb
call
xlat
sar
push
sbb
scas
pop
push
and
add
mov
inc
ror
das
ret
or
js
hlt
lcall
or
fdivp
ret
test
adc
rep
in
hlt
or
inc
mov
pop
xor
push
lcall
adc
add
std
push
xor
stos
or
mov
cwtl
aas
adc
cmp
dec
in
int
lods
dec
pop
inc
std
movsb
aad
jne
jl
add
xchg
lods
fstps
inc
mov
shr
stc
das
call
push
aam
push
fistpll
inc
sub
pushl
lea
call
push
scas
inc
mov
jo
dec
mov
jmp
lcall
xchg
xchg
sbb
inc
pop
mul
sub
paddb
mov
decl
xchg
cwtl
add
xor
insb
out
iret
and
xchg
cli
mov
fidivl
fucom
cmp
or
adc
aaa
out
pusha
add
mov
sbb
sbb
movsb
dec
sub
or
and
ret
jmp
pushl
ret
inc
dec
lods
sub
mov
je
stos
push
sbb
data16
lcall
xchg
mov
sbb
mov
sub
jecxz
dec
test
fdivs
push
cmc
outsl
lods
incl
ljmp
outsl
fwait
adc
jge
in
or
lods
push
xchg
out
add
decl
bound
adc
fwait
sub
jno
mov
cmpsl
jge
jbe
lcall
aaa
inc
cmpsl
fstl
out
pop
xorl
xor
xchg
pop
lahf
cmp
aaa
sub
scas
jmp
jmp
jns
repz
mov
lret
aam
jle
lret
insl
lods
ljmp
addr16
mov
jecxz
jecxz
mov
ljmp
mov
ljmp
mov
inc
movsl
pop
jle
dec
xor
add
cmp
pop
cmpsb
add
cmp
imulb
jg
call
out
mov
add
int3
jb
icebp
xor
lahf
popa
push
xor
lcall
sbb
or
add
fwait
mov
in
es
movsl
or
stos
jmp
insb
pop
aam
push
lahf
int
call
loopne
fsts
lds
outsb
xchg
pusha
loop
lret
es
xlat
xlat
test
scas
shl
pop
cmp
mov
push
mov
adc
sbb
jle,pt
decl
mov
jecxz
pop
and
insl
lock
pop
mov
dec
clc
in
rcr
ds
push
xor
decl
stos
loopne
inc
sahf
jecxz
lds
jno
xchg
sbb
add
pop
or
jl
hlt
push
pop
sar
push
sbb
cmp
ds
dec
jg
xchg
push
fcoms
test
stos
sar
iret
mov
inc
call
aas
adc
sub
mov
sbbb
cmp
pop
cmp
fimuls
jp
mov
jns
ljmp
fdivrs
lods
mov
sbb
fs
cmp
cmpsl
adc
cmpsl
clc
fcmovnu
pop
xor
push
mov
inc
fwait
pop
and
push
div
out
out
sahf
inc
push
push
inc
dec
push
ljmp
xchg
loopne
inc
jo
faddl
in
out
decl
arpl
movsl
jno
sub
jo
xor
mov
popa
test
leave
and
pusha
sar
fcomip
ljmp
mov
adc
rcr
outsb
sbb
xor
push
add
call
scas
adc
mov
dec
xchg
xchg
and
cmp
inc
and
into
ror
das
push
cmc
jl
mov
in
xchg
push
sbb
pusha
xchg
ret
aaa
mov
dec
fcoml
jmp
push
loop
or
cs
arpl
lret
pop
hlt
fadds
cli
iret
test
jg
loopne
pop
dec
adc
fdiv
arpl
enter
cmp
inc
incl
ljmp
pop
out
inc
or
leave
or
pop
add
lock
addr16
movsl
push
push
add
inc
sub
lcall
std
add
dec
and
lea
jg
and
mov
add
loop
dec
inc
jne
mov
dec
and
pop
ror
dec
push
fnstcw
inc
fisubl
cs
nop
bnd
testb
movsb
test
pusha
pop
data16
call
imul
cmp
and
or
cmp
inc
push
push
outsl
clc
inc
fldcw
pop
add
daa
iret
and
add
push
aam
xor
incl
xchg
arpl
push
lock
xor
or
mov
addr16
adc
dec
xor
lcall
or
subl
jecxz
push
xchg
shlb
xor
hlt
xchg
jo
jmp
inc
push
pop
mov
xchg
sbb
aad
repnz
int
jnp
shlb
inc
out
out
jecxz
ljmp
or
dec
and
cmp
outsl
inc
jp
mov
cmc
jmp
call
or
shrb
pop
dec
xchg
push
mov
sub
in
cmpsb
jl
push
ds
push
in
mov
lea
mov
mov
fiadds
aad
jae
or
ja
loop
xor
jmp
pusha
dec
outsb
jge
out
icebp
clc
mov
and
pop
in
loopne
lahf
xchg
sub
into
adc
pushl
sar
out
stc
mov
js
mov
movsb
sub
lods
pop
or
lcall
mov
add
cwtl
push
cli
nop
or
mov
incl
sti
xor
mov
jecxz
mov
fs
ss
lds
ljmp
cld
pop
popa
subl
stos
mov
fwait
sub
in
popa
push
pop
pusha
lds
out
or
xchg
icebp
xor
ds
or
out
cltd
lahf
xchg
pop
mov
fwait
cld
sbbb
mul
ret
mov
pop
aad
call
cltd
cmpsb
mov
add
and
jbe
ror
insl
dec
call
movsb
mov
mov
mov
sti
push
shl
daa
imul
aaa
scas
ficomps
ljmp
or
call
inc
add
mov
out
jnp
movl
shl
mov
xor
call
loope
mov
jnp
in
int
adc
or
jg
test
in
mov
imul
aas
leave
iret
les
testl
add
mov
fcompl
inc
movsl
cld
enter
fcomip
decl
fisttpll
into
loope
out
jae
fadds
icebp
jbe
add
lcall
call
mov
movsb
lods
scas
pusha
or
into
out
adc
aas
ljmp
mov
rcl
and
pop
loopne
dec
decl
jge
faddp
adc
push
pusha
jns
xor
mov
test
pop
cmp
push
add
jmp
stc
insb
mov
in
jge
xchg
xchg
mov
lcall
mov
adc
mov
test
out
inc
jle
jmp
adc
ss
jmp
mov
shll
aam
call
and
xor
add
lcall
and
add
ljmp
bound
sbb
insl
jbe
imul
push
in
sbb
dec
or
fwait
push
ljmp
mov
mov
setge
lock
dec
mov
jl
or
mov
call
jp
push
aad
roll
mov
test
out
cs
pop
int3
mov
push
cmpb
mov
sbb
and
repnz
inc
dec
jae
jle
call
into
out
ja
lcall
sbb
xchg
das
or
das
xor
sbb
cmpsl
pushf
repnz
mov
mov
mov
nop
mov
mov
or
jno
call
out
dec
and
scas
dec
mov
mov
inc
lock
lret
add
adc
mov
mov
clc
mov
cmpsl
pop
idiv
sbb
lahf
shrl
xchg
int3
sarl
rcr
pop
mov
out
or
mov
pushl
ret
gs
scas
push
les
inc
icebp
sbb
and
std
test
out
fildll
call
in
rorb
out
clc
xor
jo
ds
adc
mov
xchg
cmp
imul
scas
cli
sbb
push
lea
in
and
pop
jne
sarb
enter
ja
jmp
popf
pusha
sbb
sub
xorl
clc
sub
adc
lcall
or
pusha
inc
inc
sbb
sub
sbb
fiaddl
pushl
and
mov
xor
ss
cmpsb
jp
mov
ljmp
sub
mov
mov
sub
ljmp
ds
pop
pop
icebp
pop
jg
mov
lods
pop
scas
dec
mov
pushl
xor
icebp
cmp
jmp
mov
pop
mov
pop
dec
sbb
cmp
aas
dec
pushf
loopne
repnz
or
cltd
xchg
movsl
pop
push
jae
push
gs
cmp
clc
sbb
call
push
adc
add
mov
dec
xchg
push
pop
js
dec
movsb
and
pop
cs
decl
xchg
mov
and
fiaddl
pop
and
sub
and
bound
decl
cwtl
inc
jl
inc
enter
jle
jle
sbb
fists
out
sbb
jge
jp
ljmp
notb
gs
call
les
rcrl
jmp
push
cwtl
shll
pop
inc
mov
dec
roll
sbb
push
and
popa
ja
xor
mov
pushl
sub
mov
fs
jp
push
orl
loopne
sub
push
incl
jecxz
push
jg
mov
mov
xor
into
scas
jb
xor
nop
cmp
push
pusha
aad
add
push
int3
adc
mov
push
sbb
test
pop
lds
or
movsl
mov
aaa
loope
test
mov
adc
test
cli
fcos
jmp
rolb
sub
bound
or
fsts
nop
ret
out
pushf
cmp
call
mov
and
rol
sbb
push
idiv
jne
xchg
pop
cltd
jmp
mov
jmp
add
outsl
dec
push
mov
cmc
jb
dec
jb
mov
sub
and
mov
loop
in
outsb
cmc
inc
xchg
popa
iret
mov
test
xor
pop
sbb
lcall
imul
decb
js
les
repnz
loope
jg
mov
shrl
test
mov
cmp
inc
into
stos
pop
lds
test
cld
jle
cmpsb
adc
jmp
pusha
sbb
push
enter
mov
pop
decl
jns
ja
outsl
andb
inc
subps
es
scas
in
xlat
decl
dec
jmp
adc
adc
in
sbb
nop
adc
jne
bound
push
xchg
inc
cld
decl
jbe
cwtl
mov
je
sbb
bound
ficoms
mov
mov
mov
pop
das
addl
cltd
fistpl
mov
pop
out
notl
mov
std
leave
mov
inc
ficompl
int3
cld
lahf
std
push
xor
pop
les
push
adc
cli
push
decl
inc
add
imul
xchg
movsb
jecxz
decl
lock
loop
jecxz
push
push
jl
fstps
ja
and
imul
clc
decl
push
inc
ljmp
cs
icebp
fsubl
fistpl
movsb
lcall
fistpl
enter
mov
or
insl
clc
inc
int
fildl
push
ja
int3
pusha
cwtl
push
arpl
ret
inc
xchg
int
call
sbb
lahf
mull
lret
jp
enter
or
push
icebp
test
push
jl
inc
and
sar
push
or
stos
cmpl
xchg
fwait
gs
jg
jmp
xor
rcrl
dec
inc
pop
imul
decl
in
push
add
imul
jnp
lea
out
xchg
push
in
mov
ljmp
js
out
jle
pop
adc
cmpsl
ja
cmpsb
xlat
push
fidivrs
call
pop
dec
repz
popa
sbb
dec
pusha
push
mov
sub
lcall
dec
mov
icebp
in
sbb
lods
jl
xlat
add
mov
mov
jle
loopne
or
jnp
jg
call
mov
push
or
dec
aad
add
test
push
loopne
mov
jnp
fcoms
add
test
sbb
jmp
into
sti
loope
xorb
out
jbe
or
mov
out
cli
loope
dec
js
lret
dec
pop
loope
decl
in
inc
mov
lahf
fwait
out
into
sbb
add
cld
pop
xor
std
mov
pop
push
mov
sbb
cs
or
jl
inc
insl
je
test
icebp
orl
push
lds
leave
dec
pop
aam
xchg
push
incb
out
sub
jns
adc
stos
int
cwtl
or
push
push
jbe
repnz
rolb
leave
outsl
fcoml
lds
inc
hlt
lcall
je
cli
pushf
mov
dec
mov
mov
inc
int
loope
mov
fisubrs
add
inc
nop
adc
jb
imul
ret
cmp
decl
push
js
mov
jae
or
hlt
jp
mov
inc
mov
cmp
cmp
inc
repz
jnp
sahf
lds
incl
lahf
cmc
jbe
push
sub
add
rorl
subl
pop
mov
decl
in
scas
jbe
jnp
jb
mov
xchg
leave
jno
jg
ljmp
cmp
mov
and
mov
fcoml
add
lcall
jg
lcall
idivl
scas
sub
push
adc
shr
push
pop
adc
lahf
lock
std
dec
push
push
dec
in
addr16
test
in
call
decl
jbe
fwait
dec
loope
adc
aas
pop
es
imul
enter
sub
incl
mov
mov
shlb
out
test
sbb
or
jb
xor
and
addr16
or
sbbb
sbb
add
pop
xlat
int3
repnz
add
xchg
fisubl
and
aad
jnp
ds
test
cmp
add
or
iret
xor
jmp
sbb
xorps
out
push
test
mov
lret
pop
sbb
jg
in
ds
call
popl
rcll
adc
or
mov
mov
lcall
push
push
js
cs
fdivrl
test
data16
push
lcall
jmp
jmp
adc
dec
push
repnz
jge
into
shl
lcall
mov
sub
data16
aam
out
andl
lods
mov
incl
mov
push
rep
mov
ret
cmp
outsl
in
mov
popf
xor
cmpl
jmp
jge
pop
inc
pop
jne
xchg
out
fimuls
scas
movl
call
adc
inc
testb
mulb
jnp
add
lods
xor
pop
pop
sbb
aaa
decl
enter
mov
loopne
fcmovb
push
lcall
mov
jmp
mov
jmp
sahf
aaa
xor
fdiv
push
je
ret
fistpl
adc
js
hlt
cltd
sbb
pushf
jg
jb
mov
ret
sub
aaa
rclb
in
mov
lcall
mov
leave
jle
xchg
subb
popa
mov
neg
fstpl
dec
ss
jbe
not
je
decl
rclb
rcll
js
jns
arpl
outsb
add
daa
push
test
push
ret
insb
adc
outsl
sti
jge
jbe
cmp
int
mov
notl
and
lds
call
shl
and
jns
cmp
test
dec
dec
mov
push
frstor
mov
push
sbb
mov
dec
test
lock
pop
ljmp
lock
xchg
add
loope
push
add
jo
dec
lcall
sbb
fwait
mov
jmp
rep
mov
or
mov
and
aas
shll
sub
mov
xchg
jmp
dec
xchg
les
sbb
int3
cmp
pop
js
arpl
call
jns
add
pop
xor
nop
inc
das
adc
mov
fildll
orb
icebp
xor
sbb
insb
out
cs
adc
jle
jmp
mov
out
mov
mov
scas
xor
mov
in
js
push
aas
inc
add
loope
inc
xor
add
or
pushl
popa
fidivrs
mov
cmpsl
sbbl
lcall
adc
das
daa
cltd
add
in
push
pop
mov
push
daa
or
popf
push
ljmp
mov
mov
out
jg
jl,pt
out
adc
or
and
adc
shlb
push
lock
xchg
imulb
push
mov
sub
adcl
push
lock
xchg
clc
das
call
cmc
dec
dec
adc
push
jo
mov
inc
dec
xchg
fldcw
shrb
out
xor
jmp
mov
gs
and
cltd
jp
dec
in
xor
or
dec
push
mov
lods
add
insl
in
add
cmp
ds
jmp
je
mov
mov
cmp
scas
insl
sbb
push
scas
enter
mov
stos
decl
loopne
fsubs
mov
xchg
cs
stos
xchg
inc
call
std
test
dec
mov
das
pop
ret
xor
jae
inc
arpl
cmp
pop
out
mov
push
std
cmp
into
mov
jns
repnz
je
ds
adc
test
clc
pushl
js
lds
jnp
mov
add
mov
das
test
mov
jmp
jns
ss
cmp
sbb
outsb
jmp
mov
mov
fwait
out
fildl
lcall
xchg
clc
mov
mov
push
add
decl
mov
lock
xchg
fadds
cmp
loop
or
pop
fs
pop
jno
in
pop
cmp
lods
fildll
mov
inc
repz
xor
inc
push
enter
fisttps
insl
push
xchg
dec
mov
jns
mov
idiv
mov
jns
sub
dec
mov
scas
jg
lock
ficomps
shll
ljmp
idivl
and
call
push
subb
push
push
mov
popa
sarb
lahf
pop
loope
rcrb
jmp
xchg
push
imul
xchg
lods
lcall
sub
and
mov
xchg
mov
pusha
or
and
jns
mov
inc
push
cmpsl
push
fisubl
lods
fistl
mov
imul
aas
mov
std
or
mov
cwtl
adc
loope
ret
call
mov
add
iret
imul
pop
push
mov
jne
loop
lcall
push
jl
in
inc
mov
xor
cwtl
pop
mov
ret
xlat
add
pushl
jb
cwtl
jp
sub
insb
jae
mov
pop
int
flds
mov
ljmp
xlat
push
push
mov
shlb
cwtl
std
cmp
std
mov
push
inc
int3
add
call
lret
jle
or
sbbl
scas
pop
fs
pop
std
sbb
inc
addl
daa
and
ja
andb
ja
push
clc
cld
cmp
xchg
arpl
push
cmp
jg
sar
push
push
push
jmp
add
xor
or
cmc
repz
enter
pop
xchg
lods
aam
lcall
enter
cmpsl
lcall
popf
imul
decb
jo
loop
mov
lcall
xor
popl
or
movsb
subl
andb
cmp
stc
add
call
dec
xlat
repz
adc
lcall
mov
jb
clc
outsl
mov
or
decl
pusha
lret
or
jnp
lea
clc
mov
jnp
xor
cld
decb
adc
decl
mov
into
jp
mov
sti
out
imul
jle
lret
xchg
push
gs
sbb
nop
pushl
enter
xor
inc
cmp
rcll
je
and
sbb
loope
incl
loope
lret
inc
pushf
test
pop
outsl
movsb
popa
jo
neg
add
pop
call
pop
and
lods
jecxz
in
xchg
or
pop
mov
xchg
cmp
add
outsb
ljmp
adc
cld
shrb
cld
adc
mov
mov
iret
or
and
cmc
lock
scas
jno
insl
mov
sbb
popa
pop
or
push
std
cmpsl
call
incl
or
sti
test
dec
cmp
adc
fst
pop
aaa
mov
shrl
fcomip
pushl
sub
cmp
mov
cltd
cld
cmpsl
cmpsb
mov
je
stos
fs
pushl
push
jl
dec
pop
inc
mov
test
sti
cs
xchg
inc
jbe
mov
hlt
push
idiv
incl
sub
xchg
sbb
enter
pop
mov
pop
jp
fwait
xchg
out
adc
mov
dec
out
aaa
adc
lcall
xor
jo
jmp
sub
popf
test
adc
fistpll
xchg
and
sahf
cmc
add
in
xor
or
jno
decl
bound
lret
and
ret
adc
lret
shrl
ja
call
push
pushf
imul
mov
imul
or
das
out
mov
dec
mov
lcall
jmp
push
movsl
andl
lret
mov
or
scas
mov
adc
sbb
add
dec
inc
and
push
jp
mov
insb
mov
mov
jmp
mov
aaa
dec
lds
sub
cmp
repz
je
xor
call
jg
stos
xchg
int
xor
push
inc
xor
sbb
mov
pop
or
and
inc
adc
mov
mov
in
sub
vpsubd
icebp
ljmp
jbe
sub
ficompl
and
push
outsb
subb
xchg
loope
or
or
hlt
loope
mov
sub
cmpsl
xchg
and
dec
jl
pop
jmp
jno
dec
aaa
xchg
ret
sti
fidivs
push
je
stos
pop
and
pop
mov
inc
or
enter
push
popa
pop
jnp
jmp
push
jg
decl
in
out
xor
iret
cwtl
or
jge
jge
mov
sahf
arpl
adc
jmp
popf
ret
mov
dec
int
enter
push
or
push
ljmp
imul
pop
sbb
push
notb
sbb
cwtl
sub
mov
test
jecxz
pop
adc
leave
dec
cmpsl
adc
lock
sub
shll
push
call
pop
and
dec
insb
ret
inc
xor
cmp
mov
mov
mov
xor
pop
jns
aam
decl
imul
pop
movsl
jge
outsl
mov
jle
jns
xor
popa
out
loopne
cmp
scas
sub
dec
mov
mov
mov
pop
push
push
lcall
stos
jge
lea
sub
orb
push
movsb
divl
xchg
sub
sub
push
fisubrl
adc
inc
test
push
sbb
les
push
and
outsb
leave
pop
adc
hlt
sbb
out
outsl
pop
test
loopne
gs
aaa
fs
data16
scas
pushf
inc
adc
into
test
or
cmp
inc
dec
aas
sbbl
xchg
outsl
lds
jg
clc
aad
jnp
xchg
lahf
xor
outsl
push
cld
out
outsl
and
ljmp
outsl
pop
mov
push
mov
imul
testl
fmuls
mov
pop
adc
ljmp
pop
push
mov
out
dec
jge
call
loopne
call
sub
push
cmpsl
mov
clc
push
or
call
mov
add
daa
call
mov
lret
out
pop
shrb
cmp
cld
clc
ljmp
jbe
test
addr16
mov
lcall
inc
mov
je
pop
incl
and
dec
roll
jno
or
scas
leave
movsb
shll
lret
mov
jg
mov
push
sbb
mov
or
pop
lcall
jmp
fimull
dec
push
adc
jle
nop
insb
mov
mov
cmp
fwait
in
incl
mov
xor
test
cmp
imul
int
lahf
cmpsb
flds
outsl
ljmp
insb
xor
push
xorb
or
decl
movsb
jne
sbb
ljmp
or
adc
mov
filds
es
incl
les
push
lret
adc
orb
inc
dec
pop
fsubrs
ud0
incl
les
lods
lcall
sbbb
pop
ret
lods
test
jg
lcall
lcall
ret
mov
and
mov
dec
fisubl
jmp
mov
pop
add
inc
in
xchg
loop
je
dec
and
jo
bound
lods
add
dec
sub
add
js
daa
clc
push
stos
push
dec
rolb
faddl
push
xchg
fidivrl
decl
xchg
push
icebp
push
lahf
nop/reserved
cli
faddl
insb
mov
xchg
inc
jne
test
cld
mov
jmp
clc
addl
out
ja
dec
pop
or
jg
jo
cld
lahf
loopne
inc
and
mov
mov
or
stc
out
clc
jmp
mov
pop
lock
xchg
cli
pop
subb
imul
cli
mov
mov
fisubrl
shrl
rcrl
xor
out
mov
xchg
push
jnp
pop
ljmp
lret
cwtl
mov
nop
sbb
adc
jmpw
out
je
lods
daa
nop
xlat
insl
xor
dec
leave
or
sub
pusha
inc
std
dec
cld
sub
jp
adc
pop
mov
ljmp
mov
dec
or
iret
int3
loop
ja
pop
mov
jmp
lea
arpl
decl
loopne
mov
mov
ret
mov
out
xchg
mov
or
sub
ljmp
nop
lock
lds
out
cmp
das
test
inc
outsl
incl
cmp
test
jne
lret
xchg
lret
cltd
cmp
inc
xchg
mov
add
ja
mov
pop
test
out
sbb
popf
ljmp
aas
mov
test
addr16
in
push
sahf
jmp
cmp
pop
add
lret
lods
xlat
sub
pushl
xlat
lret
xchg
icebp
add
sarb
jmp
cmp
cmp
add
idiv
decl
sbb
adc
inc
pop
aas
aas
push
notl
xor
lea
test
adc
and
cmc
sub
sub
xor
mov
or
pushl
es
cmp
xchg
pop
or
jmp
mov
ss
xor
decl
mov
pop
or
call
jp
test
sbb
jo
pop
or
enter
fiaddl
mov
movsb
mov
and
xor
lcall
int3
or
incl
imul
and
mov
jo
sbb
or
jne
push
mov
stc
shll
mov
adc
pushf
mov
dec
pop
or
es
fimuls
popa
cmp
data16
pushl
mov
jne
clc
xor
mov
push
pop
sbb
call
pop
dec
sub
decl
lock
adc
add
push
push
xlat
fstl
add
ljmp
push
mov
add
mov
lcall
lret
mov
mov
push
and
nop
in
jge
push
out
hlt
add
std
incl
pop
insb
sbb
fiadds
outsl
mov
or
sbb
out
sbbb
dec
shrb
loop
push
movsl
cmp
xchg
arpl
lcall
sbb
pushf
push
cmp
jl
call
outsl
loop
ljmp
pop
sbb
cmp
inc
and
mov
lea
std
ljmp
sub
rcr
test
and
jmp
pop
or
stos
hlt
sbb
cmp
call
cmp
bound
sbb
lahf
mov
pop
jo
int3
xchg
out
cmc
jp
vmread
or
daa
and
and
xchg
mov
test
pushl
mov
pusha
sbb
cmp
and
xchg
dec
mov
mov
call
rcll
idivb
in
cmp
xor
jmp
into
mov
adc
adc
inc
inc
cltd
or
jmp
lds
cmpsb
call
mov
mov
ss
dec
out
inc
lock
into
adc
cld
fwait
xor
aaa
mov
je
jo
adc
loop
xor
arpl
dec
cmp
adc
inc
xchg
stos
xchg
stos
repz
xchg
push
repnz
cmp
imul
imull
mov
xchg
iret
mov
sti
mov
fcomip
call
mov
cltd
and
scas
pop
icebp
nop
loopne
movsl
out
sbb
cwtl
push
in
and
lcall
pop
sbb
repnz
ret
cmp
sbb
lds
popa
mov
jmp
sbb
and
cmp
jbe
jl
ffree
push
fistps
or
enter
nop
lret
inc
nop
sbb
lcall
divb
cltd
jnp
pop
sub
lcall
sbb
dec
ljmp
dec
xchg
jnp
adc
jg
ja
loopne
jne
sti
out
test
mov
loopne
insb
push
inc
sbb
outsb
mov
imul
iret
test
aam
mov
bound
inc
pop
test
cld
lcall
das
out
ret
into
xchg
mov
nop
pop
cmpsb
adc
or
or
decl
pop
arpl
dec
insb
rolb
fs
xor
push
jns
xchg
aas
xchg
sbb
arpl
cli
push
xchg
ljmp
or
cltd
cli
mov
decb
outsl
repnz
xor
jp
pushl
push
leave
cld
leave
aam
bound
lock
loop
sbb
divb
pushl
cmp
int3
inc
pop
sti
iret
mov
mov
aas
lahf
add
stc
adc
stc
call
lcall
das
enter
mov
xor
xor
or
xchg
mov
jle
or
loopne
push
inc
pop
jle
sbb
loop
or
pop
jmp
ljmp
jg
fnstcw
inc
pop
xor
loopne
cld
and
ret
adc
push
and
push
cmpb
decl
xchg
pop
mov
jle
mov
pop
pop
xor
in
sub
mov
aaa
cmp
jo
pop
ljmp
adc
push
dec
mov
xchg
sbb
mov
and
xchg
adc
jbe
jmp
mov
adc
leave
dec
stc
stos
adc
out
mov
xor
jg
add
jnp
insl
xor
mov
pop
loopne
lods
jmp
jp
out
jno
loop
xor
stos
loopne
xchg
test
pop
shll
mov
scas
xchg
jns
mov
hlt
xchg
mov
das
push
fdivrs
xlat
mov
sbb
adcl
mov
repnz
test
sbb
cmp
and
sub
ljmp
add
pusha
mov
pop
ret
push
sub
fwait
mov
and
popa
fimuls
sbb
call
aad
pop
push
dec
push
dec
adcb
mov
cmpb
clc
ror
mov
dec
push
negl
lcall
dec
jge
push
sti
jmp
insb
scas
popa
enter
jmp
cmp
mull
dec
insb
mov
dec
push
das
jo
xor
loop
add
push
pushl
imul
push
pop
sbb
jb
adc
sbb
gs
in
test
dec
push
lcall
jno
push
or
sbb
ficompl
rcrb
out
push
fs
lods
gs
pushl
cmp
xor
dec
sub
xor
xchg
idivl
hlt
xor
incl
mov
add
or
mov
xor
mov
adc
cmc
decb
cmpsl
aas
adc
push
lret
test
rol
ja
in
mov
fbld
jne
jmp
in
aaa
cmp
fiaddl
adc
push
fisttpl
cld
stos
loope
mov
jae
fmull
popf
sub
dec
push
imul
inc
jbe
jecxz
lcall
icebp
push
push
pop
subb
push
mov
mov
and
hlt
lahf
lret
xchg
xchg
imul
jmp
data16
xchg
lods
faddp
sbb
push
out
push
nop
jl
xchg
movsl
ret
add
jno
ljmp
pusha
ds
imul
jns
es
sub
loopne
ljmp
testb
push
mov
jo
stc
sbb
sub
cmp
jg
xchg
dec
xor
lcall
loop
mov
arpl
scas
xchg
inc
pop
xadd
jmp
sub
and
in
mov
outsl
clc
jmp
mov
dec
adc
popf
fwait
insl
push
fcompl
dec
inc
fcomip
call
adc
icebp
sbb
add
cmpsl
es
out
jg
mov
hlt
and
in
dec
jo
inc
rcrl
lahf
enter
ljmp
in
mov
jl
xor
inc
sub
or
fisubs
clc
cmp
ja
sar
lcall
cmp
sbb
inc
and
orl
jno,pn
mov
pop
repnz
xchg
fistpll
push
adc
dec
js
orb
mov
call
mov
push
cmp
bound
jnp
shr
cli
ja
push
rcr
pop
mov
fcoms
jmp
mov
ds
stos
mov
lcall
in
add
xchg
mov
scas
js
mov
sub
clc
or
dec
cmp
out
in
mov
mov
ja
arpl
ficoml
xorb
incl
icebp
scas
mov
stos
and
inc
insl
push
xchg
pop
dec
dec
xchg
mov
ljmp
cmp
les
jno
loopne
cld
jl
in
pop
div
inc
call
or
js
add
cs
inc
shll
incl
jae
lahf
andl
jo
cli
mov
mov
enter
mov
sbb
push
loope
lock
loopne
sbb
ret
sbb
daa
push
test
movsb
inc
jg
fwait
incl
cmpsl
and
mov
shrl
bsf
outsl
pushl
stos
lahf
test
mov
fadds
stos
les
push
adc
mov
loop
push
cld
adc
call
inc
aam
hlt
ret
out
loop
arpl
flds
lods
pushf
imull
dec
ljmp
xor
inc
hlt
or
enter
fs
in
add
fcmovu
push
fcoml
outsb
adc
adc
jnp
mov
jno
shlb
ret
mov
scas
das
incl
imul
fs
jns
fsubs
gs
xchg
lret
sbb
mov
push
jmp
hlt
movsb
jecxz
mov
fistps
add
das
out
pop
cmp
jg
into
int3
sub
jle
jg
pop
gs
push
test
cmc
lds
insb
repz
in
lods
mov
jp
push
fwait
cld
mov
mov
dec
and
push
ss
ja
pop
fs
inc
scas
sbb
mov
jbe
xor
insb
sbb
call
add
arpl
fucomp
imul
stc
add
clc
mov
clc
aad
shll
dec
movsl
pop
mov
rolb
in
xchg
fs
daa
inc
test
loope
sbb
std
popa
mov
or
stos
mov
ljmp
adc
stos
imul
rclb
repnz
stos
add
subl
les
jnp
pop
sub
dec
mov
or
dec
xchg
xchg
mov
push
cmp
into
bound
jmp
adcb
lock
lcall
lods
add
inc
xchg
clc
inc
mov
pop
push
cltd
incl
xor
and
sbb
mov
je
mov
sub
call
ljmp
add
imulb
sahf
add
pusha
adc
pop
test
sti
decl
push
mov
or
repnz
sub
out
movsb
xchg
cmp
jecxz
ds
pop
add
into
add
test
pop
inc
mov
and
fiadds
inc
and
and
push
push
and
jb
ja
pop
mov
sub
int3
dec
cld
jmp
push
vmovdqu
xor
or
fldcw
lea
sbb
dec
and
add
fbstp
call
push
lahf
xchg
pop
dec
repz
push
loopne
orl
or
or
ret
jge
decl
int3
inc
sbb
rorl
mov
sub
add
dec
aaa
std
mov
pushl
mov
jge
cmpsb
aas
xchg
mov
int
in
je
shl
std
cmp
pop
lcall
sbb
jne
mov
fistps
sub
xor
fadds
scas
call
shlb
push
shrl
mov
pop
aaa
popf
cmp
sub
inc
push
out
out
lock
pushl
cmpsl
jne
das
mov
jg
xchg
and
pushl
lret
setle
jmp
pop
mov
push
add
sub
hlt
leave
sub
lods
outsb
mov
jbe
out
ljmp
test
scas
mov
pop
fwait
dec
adc
or
mov
popf
xor
cwtl
pop
stos
movl
out
cmp
popf
mov
jns
std
jg
lcall
jbe
stos
push
dec
pop
shll
dec
cltd
lcall
fwait
testb
or
jmp
adc
fiadds
and
and
jmp
xchg
mov
sub
jl
scas
cmc
cs
sahf
adc
inc
pushf
adc
adc
adc
call
inc
loop
mov
call
sahf
xchg
mov
pop
rcrl
jno
xchg
or
push
cs
ljmp
push
mov
ds
add
arpl
inc
mov
inc
dec
sarb
sub
lods
push
pushl
je
xchg
iret
cmpsb
pushf
jno
fimuls
lcall
jl
dec
pop
sar
dec
add
adc
mov
pop
popf
or
dec
or
mov
in
fdiv
ficoml
ljmp
adc
jle
lods
mov
decl
repnz
jecxz
jo
xor
cmpb
je
jbe
add
pop
repz
shrb
arpl
mov
repz
sub
or
incl
lea
test
fdivl
fmull
jb
inc
inc
icebp
mov
jp
lret
pushl
jo
pop
mov
jne
jo
fdivp
aas
ret
aaa
mov
imul
sbb
out
loop
ja
inc
jo
add
orb
xchg
pop
jbe
es
mov
ret
xchg
push
out
xchg
xchg
ss
das
push
loope
sub
ds
loope
andb
incl
outsl
jg
push
jo
jl
jecxz
stos
adc
mov
xchg
mov
mov
lods
rcrb
push
aas
xor
std
outsb
nop
incb
dec
mov
mov
ja
ja
and
ja
mov
sarl
iret
mov
call
mov
adc
imul
std
jns
std
pop
jbe
mov
mov
jp
pop
repz
aaa
or
mov
lret
xlat
pop
sbb
int3
cmpps
jmp
xor
insl
jae
shlb
aaa
fcoml
or
push
jp
pop
and
cli
mov
aaa
cld
call
jp
adc
shll
push
rolb
call
lock
pushl
std
call
cmp
xchg
lods
outsl
inc
sar
lods
stc
sbb
jo
cmp
lods
push
or
xor
rorl
scas
loope
pop
pop
inc
adc
lea
adc
mov
call
inc
cld
add
or
xchg
pop
xor
xor
dec
in
enter
test
push
jne
sub
pop
dec
jmp
mov
repz
mov
jo
pop
insl
int3
out
jnp
or
filds
out
xor
pop
mov
xchg
dec
call
sub
dec
outsl
lods
pop
addb
xlat
mov
mov
jne
mov
inc
mov
mov
imul
call
xchg
ror
jb
mov
pusha
mov
dec
sarb
pop
dec
cmp
sahf
jle
mov
call
leave
xchg
xchg
and
xchg
sbb
xchg
outsl
cwtl
ss
lods
bound
add
and
mov
scas
mov
test
cmpsb
loopne
movsbl
int3
js
aad
lock
incl
mov
fidivrl
lret
xor
repz
ljmp
ljmp
ret
pop
jl
xor
xor
and
fcomip
jno
jg
push
mov
arpl
push
mov
dec
pop
aas
xchg
and
mov
insl
in
add
scas
out
jecxz
add
or
and
mov
add
lcall
adc
dec
sub
push
in
pop
ljmp
lret
scas
ret
cli
sarb
inc
mov
call
repnz
mov
outsl
mov
and
or
ja
cmp
pop
icebp
jmp
outsb
mov
mov
cmp
xor
mov
mov
inc
aaa
and
pop
mov
lret
out
jnp
adc
xor
scas
or
push
outsb
xchg
repz
cmp
push
pop
clc
inc
adc
in
int
sub
jne
incl
and
fsubs
aaa
cmp
outsl
add
inc
ss
ret
sub
inc
mov
in
xchg
adc
ljmp
test
lahf
out
out
iretw
xchg
xchg
cmpsl
lds
or
adc
int3
push
mov
sarl
outsb
out
cmp
sub
mov
push
sbb
jnp
mov
push
stos
and
xorb
inc
arpl
outsb
push
add
add
mov
xchg
jnp
les
cld
lcall
pop
loopne
xchg
pushf
push
inc
rolb
mov
mov
in
push
mov
inc
loopne
dec
xor
je
jp
stos
fwait
in
cld
or
pushl
cmp
push
pop
push
and
push
mov
and
push
ds
lods
in
pushl
push
jecxz
jns
mov
dec
mov
out
rolb
cs
mov
jmp
add
jle
lret
push
xlat
sub
nop
clc
shl
test
pushl
mov
mov
pop
xchg
stos
pushf
jge
pushl
into
cmc
add
clc
xor
in
insb
or
cmp
cmp
mov
faddl
ljmp
repnz
xor
fimull
aas
push
popf
mov
incb
dec
lods
ss
adc
jmp
jns
xor
repnz
sbb
cmp
push
push
push
lret
xchg
sbb
sbb
mov
pop
ret
test
test
pop
xchg
and
movsl
lret
into
arpl
out
fimull
sti
decl
and
adc
lret
gs
pop
shr
pop
lret
cld
cltd
cmpsb
test
pop
ljmp
sbb
adc
andb
inc
movsb
pusha
dec
xchg
mov
dec
sbbb
push
cmp
psubw
push
scas
jl
loop
mov
cmp
arpl
loope
in
stc
jle
cmpsl
stos
jge
mov
lods
inc
push
dec
in
jecxz
lods
inc
test
cmp
outsl
into
jbe
aad
in
mov
movsl
mov
ljmp
lret
test
clc
and
outsl
sub
push
jae
jl
in
jg
push
pop
repnz
out
dec
add
js
das
inc
lods
ljmp
ja
loope
call
loopne
fdivs
imul
test
push
leave
subl
fcomip
pushl
cmp
jmp
xchg
pop
mov
insb
mov
or
out
hlt
movsl
in
adc
in
outsl
out
addr16
pusha
mov
loopne
cwtl
lahf
sub
sub
sahf
pop
sub
cmp
xchg
sbb
daa
pusha
out
lods
cmp
shrb
ss
sbb
cs
iret
pusha
inc
mov
xchg
pop
repnz
add
mov
test
dec
mov
sbb
push
aam
cmpsb
xchg
mov
out
xor
mov
pop
push
jmp
push
or
mov
push
fbstp
jo
orb
cmp
adc
mov
and
jbe
push
aam
lcall
mov
out
les
jg
pop
jae
dec
cmp
sbb
decl
xor
adc
jns
in
jne
xchg
pushf
sub
lds
jbe
push
ljmp
and
sub
test
imul
or
push
mov
decl
push
push
jecxz
inc
jl
pop
push
jno
inc
mov
ljmp
xchg
rcrl
pop
in
mov
cli
mov
or
aas
pop
jg
incl
dec
jae
pop
add
gs
add
rcl
dec
push
out
pop
xor
pop
popa
loop
sti
inc
in
cwtl
fstps
fcmovbe
adc
js
decl
in
sbb
lock
or
gs
mov
fists
jg
or
incl
xchg
mov
inc
lock
pop
xchg
mov
out
nop
movsb
fcoms
rcrl
call
mov
or
dec
mov
insb
lods
adc
mov
out
pop
cmpsb
dec
inc
inc
cltd
popf
decb
outsb
hlt
popf
ljmp
xor
sbb
xor
xor
mov
mov
imul
pushl
xor
pop
jno
gs
jae
shrl
jge
mov
in
dec
mov
out
jmp
cld
pop
pop
sub
pop
jae
dec
or
jmp
outsb
adc
fldt
enter
lock
ja
pushl
and
push
outsb
gs
lcall
clc
cmp
mov
subb
cld
and
inc
adc
out
aam
xchg
pop
adc
or
call
push
shrl
or
dec
pop
add
jnp
out
push
int3
aam
adc
pop
and
lcall
mov
jg
push
push
sarb
popf
shll
sbbl
std
sbb
test
loope
sar
decl
mov
inc
sbb
push
mov
jnp
clc
test
lds
je
pop
popa
pop
sbb
fadds
jg
pusha
jle
mov
mov
mov
cs
and
ja
int3
jno
add
mov
scas
lock
mov
add
ljmp
or
pop
push
jno
rcll
cmp
sub
aaa
pop
mov
fistps
or
sub
cmpsl
test
inc
mov
jo
or
pop
loope
pop
out
add
push
mov
outsl
decl
ja
jo
or
pop
push
or
jo
or
inc
mov
pop
mov
jbe
ret
out
dec
dec
adc
sub
xor
outsb
or
sub
fs
push
push
mov
fmull
ret
fmull
pop
mov
fistpll
sbb
or
fcompl
mov
mov
fwait
pop
add
inc
mov
sub
je
cmp
es
mov
sti
incl
or
jo
adc
xor
inc
adc
popa
xchg
rorb
mov
decl
in
movsb
pushl
jo
mov
in
sbb
xchg
xchg
push
cmpb
push
insb
movsb
xor
push
mov
ret
outsl
pop
das
pop
jmp
hlt
cld
lods
in
jmp
or
inc
fisubl
int3
inc
sbb
nop
outsb
iret
icebp
jns
push
push
mov
jp
xchg
jl
inc
xor
fs
data16
pop
jae
sbbl
fcomip
pushf
mov
dec
inc
rorb
push
movsl
rolb
and
jge
inc
mov
jmp
sti
cwtl
lods
hlt
add
or
iret
test
sahf
leave
leave
push
adc
add
mov
or
data16
or
cmp
ljmp
fs
js
std
lods
mov
mov
ds
dec
dec
scas
rorb
adc
jl
xchg
dec
sbb
mov
or
jns
sbb
jmp
in
add
push
or
push
scas
cmpb
aaa
es
and
test
ret
outsb
push
add
ret
aas
cmpl
mov
mov
sbb
fnclex
jge,pt
out
clc
ljmp
xor
fsts
mov
hlt
xlat
loop
aas
and
lcall
mov
xor
adc
adc
dec
das
pushf
lds
and
outsl
cld
inc
call
movsl
inc
xchg
jle
pushf
cmpsl
mov
loope
mov
test
int
jnp
arpl
ljmp
or
jg
xlat
adc
adc
in
fs
sbbl
xor
in
rclb
test
mov
jmp
mov
mov
jge
decl
rorl
call
daa
fstp
mull
mov
cmp
ljmp
jne
cmc
inc
lea
mov
lods
mov
mov
rcl
push
add
adc
and
in
ja
or
mov
fistpll
pushl
mov
push
jns
lods
dec
das
das
aas
movsl
shll
scas
stos
xor
pop
ret
push
pop
mov
cld
xchg
jg
cmpsb
and
stos
pop
adc
push
inc
mov
xor
clc
inc
lahf
pop
and
xchg
mov
push
cld
movsl
xor
pop
mov
fwait
ljmp
jge
popf
mov
jo
loopne
push
scas
xchg
out
adc
std
lcall
jb
notl
pop
out
loope
lds
or
out
roll
adc
jge
call
jb
mov
out
dec
mov
mov
push
xchg
sbb
lock
pop
dec
dec
jge
add
imull
sbbb
pop
lock
mov
iret
clc
push
test
cli
xchg
inc
outsb
aam
sub
scas
cmp
hlt
xor
mov
adc
es
or
test
mov
mov
mov
lods
xchg
call
rcrb
and
mov
and
iret
jl
pop
mov
or
inc
repnz
lret
sahf
popa
leave
pushf
add
mov
std
pop
pushl
std
stc
sbb
lret
pop
cli
or
lods
mov
lds
lods
xorb
jg
incl
xchg
or
mov
xchg
repz
fisttpll
pop
stos
decl
cwtl
fwait
cmp
sbb
mov
lcall
test
cmp
push
pop
mov
je
in
call
jle
decl
lock
in
xchg
xchg
pop
push
cld
xchg
test
inc
js
inc
adc
int
jmp
xchg
sbb
xchg
je
mov
jg
cli
ja
push
not
decl
notb
stos
sahf
test
cltd
push
push
jp
and
daa
xor
or
daa
je
mov
fs
test
fsubs
cs
scas
pushl
cld
call
jmp
fisubrl
fcomps
js
daa
mov
gs
xchg
cmc
push
rol
dec
inc
push
mov
lcall
ljmp
xor
mov
in
in
xor
arpl
decl
push
mov
subl
dec
adc
xchg
pop
sub
imulb
xchg
outsb
add
jmp
rorl
or
pop
pop
mov
sbb
pop
mov
and
fiadds
jmp
mov
mov
icebp
popf
repz
cmp
mov
or
pop
mov
cld
scas
ljmp
ficompl
mov
ja
test
negb
loopne
push
scas
fwait
rcl
jns
inc
mov
adcl
jge
jbe
sub
cmp
movsl
lret
popf
clc
std
mov
fdivrl
jge
fmull
sbb
cmp
popf
lea
xchg
jns
out
mov
popa
notb
mov
cmp
mov
inc
gs
jmp
aad
pop
std
and
scas
sarl
fdivs
out
loope
adc
jmp
neg
mov
test
pop
cmpsl
lds
dec
popf
xor
push
outsb
aad
push
ljmp
clc
ljmp
jmp
pop
jo
push
ljmp
xor
pop
jno
push
push
outsb
hlt
sarb
sbb
mov
test
clc
jecxz
dec
sub
mov
or
jl
adc
pushf
insl
mov
xchg
js
jmp
jg
adc
decl
ret
rcrb
dec
add
jns
cmc
ficomps
das
jge
xlat
jge
mov
pop
xchg
cmpsb
addr16
in
fsubp
fbld
mov
out
mull
dec
jne
cmp
ljmp
loop
jp
xchg
negb
out
gs
addr16
in
testl
ljmp
dec
in
aaa
imulb
mov
in
leave
fucomi
fmull
mov
incl
cmpsb
jnp
mov
loopne
push
and
sarl
pop
je
mov
push
addb
repnz
add
add
shl
in
shr
dec
div
fcomip
mov
push
ret
outsl
mov
cmc
mov
and
dec
and
mov
pushf
inc
mov
sti
pushl
cld
push
cli
roll
ffree
inc
jge
xor
arpl
lahf
nop
push
call
add
ljmp
pop
sub
loopne
shl
cli
jmp
pop
cmp
or
das
or
in
das
fbld
fcmovbe
mov
mov
xor
in
ljmp
call
add
sbb
testl
mov
pop
xchg
movsb
popa
insl
xchg
fiaddl
sti
fwait
push
je
jns
out
mov
scas
mov
sbb
sbb
cmp
ret
je,pt
xchg
pop
xchg
cld
lret
loope
or
add
mov
pushl
pop
test
mov
mov
xchg
mov
icebp
xor
clc
lds
ljmp
lock
mov
inc
inc
mov
insb
pop
push
and
call
scas
bnd
fstpt
lret
popf
daa
jmp
leave
loop
pop
fld
out
dec
test
cmp
mov
aaa
rcrb
ljmp
pop
and
imul
ljmp
mov
sbb
daa
lcall
pop
test
xor
sarl
sub
jg
mov
mov
or
xchg
sbb
mov
pushl
test
pop
xchg
fndisi(8087
xor
aas
enter
and
arpl
and
mov
push
push
adc
cmp
cld
sbb
xchg
into
push
cmp
enter
data16
push
adcl
mov
lret
cmpb
pop
ss
pop
sete
mov
in
and
dec
inc
pushf
adc
cli
push
rcll
xchg
or
sbb
adc
dec
ljmp
inc
popa
fcmove
das
hlt
in
xor
adc
popl
push
sub
ljmp
and
pushl
jno
test
pop
xchg
pushf
sub
ss
and
lods
mov
or
pop
jae
mov
incl
lods
loope
push
and
js
sub
mov
cmp
mov
dec
les
jmp
pop
stc
jle
out
pop
sub
aad
sbb
popa
std
movzbl
push
dec
or
mov
decl
ret
aad
test
lcall
jne
xchg
stc
mov
push
lea
cmp
mov
cmpsl
jmp
jo
aam
mov
ret
jb
push
push
mov
push
gs
add
push
cmp
sahf
int
mov
ljmp
sbb
incl
movsb
sub
into
les
and
push
cmp
mov
xor
lcall
pop
mov
jp
jbe
push
ficompl
or
add
je
movsb
adc
mov
jg
push
call
adc
pop
push
pop
cwtl
mov
lods
xor
loopne
xlat
pushl
dec
in
push
ljmp
inc
sti
in
in
jmp
data16
cld
incl
and
mov
and
mov
or
lods
xchg
sub
jmp
cld
xchg
bound
fdiv
pushf
mov
add
movsb
ljmp
inc
inc
scas
out
pop
dec
not
lcall
mov
rcrl
popa
mov
out
push
xchg
pushf
xchg
sahf
mov
incl
jae
into
shll
and
jbe
push
lods
add
sar
jg
pop
hlt
cmp
int3
test
xor
pop
inc
pushf
add
hlt
sbb
dec
ja
adc
add
ds
adc
cmp
or
jp
daa
scas
jns
int
cwtl
lods
mov
arpl
das
lcall
inc
insl
aad
incl
pusha
or
jge
fnstcw
es
cwtl
or
repnz
fcomip
outsl
or
mov
stos
stos
inc
adc
fsub
xor
jecxz
stos
es
lock
add
jg
fstps
cmpsb
xchg
mov
jb
pop
mov
cmp
jecxz
dec
jecxz
insb
lods
lock
mov
add
mov
fstp
ret
cmpsb
mov
sub
andl
ret
inc
lods
xor
and
test
xor
pop
repz
mov
sbb
loop
mov
aaa
clc
sar
fcomip
dec
test
dec
sub
ss
hlt
add
push
ror
mov
ljmp
clc
jp
shrb
mov
arpl
xorl
fs
insb
in
sub
sbb
fcmovnb
cmp
lcall
cmp
push
ljmp
cmp
jge
fistl
jmp
sti
sbb
cmp
pop
xor
in
int
jle
mov
pop
pop
lock
pushl
je
sub
sub
lahf
mov
out
in
mov
and
daa
cltd
jecxz
and
lds
mov
and
outsl
sahf
xor
cmp
adc
pop
pop
arpl
daa
mov
jg
xchg
stc
inc
jmp
dec
sbb
testb
mov
lcall
add
mov
das
out
lods
mov
sbb
sbb
lods
xchg
dec
jno
mov
xchg
call
inc
xor
mov
pop
inc
pushf
xor
cs
pmuludq
mov
outsl
mov
xchg
in
jmp
mov
cwtl
and
mov
push
xlat
popf
jo
cmp
mov
xchg
xor
adc
pop
mov
jbe
fdivl
sar
call
movhlps
and
mov
imul
jnp
and
adc
push
andb
or
and
mov
rcll
mov
test
in
pop
icebp
call
test
clc
xlat
rolb
dec
shrb
movsb
test
fistl
cld
ljmp
cltd
pop
and
andb
or
pop
lcall
mov
lods
insl
in
mov
fcmovu
jbe
in
lds
lret
mov
lret
lcall
push
sub
sub
lcall
iret
inc
out
out
sti
push
out
mov
movsb
es
add
sbb
xchg
rcrl
cmp
push
jne
movsb
cmp
cmc
mov
into
mov
push
jge
movsb
js
sub
orb
cltd
xor
inc
inc
mov
fcmovbe
pop
jg
fisubrl
or
decl
das
aad
loopne
pushf
stc
lahf
repz
mov
pop
xor
es
movsl
sub
mov
pushl
jl
mov
jnp
mov
pop
mov
sbbb
lcall
pop
cltd
mov
cmc
xchg
outsb
pop
lahf
scas
loopne
and
or
ss
cmp
mov
lret
inc
add
test
in
mov
jne
push
imul
ljmp
insl
rcr
scas
and
jo
cwtl
add
push
fwait
mov
add
xor
pop
push
mov
inc
jnp
stc
adc
mov
dec
repnz
dec
inc
lret
xchg
jge
mov
mulb
test
mov
ret
cli
call
mov
pop
loope
aad
add
adc
mov
sub
jno
sub
fldt
ficomps
xchg
jmp
cmpsl
fsin
pop
lahf
cmpsb
jae
and
call
cld
lcall
dec
mov
jae
imul
insl
or
jle
dec
mov
imul
out
jecxz
sub
aad
stos
add
inc
nop
cmpsl
mov
jp
roll
sar
inc
push
aas
and
fwait
imul
idiv
mov
ret
sahf
jge
das
pop
enter
nop
sbbb
push
xchg
sahf
sbb
xor
mov
push
adc
mov
jg
lcall
cld
in
dec
mov
rorl
mov
adc
mov
movsb
and
and
inc
pop
pop
loope
loopne
pusha
les
push
out
decl
adc
in
insl
mov
iret
sarl
sub
adcl
out
test
pop
call
mov
mov
push
push
xchg
popl
lcall
popf
adc
je
dec
out
std
jmp
add
mov
lods
dec
or
negl
cwtl
pop
icebp
adcb
jmp
xor
inc
jl
stos
mov
shl
pop
xchg
hlt
nop
fs
insb
push
cmp
and
mov
sbb
mov
mov
inc
cli
jge
repnz
out
mov
out
lds
jmp
jge
in
fmulp
mov
inc
jbe
mov
pop
pop
enter
lcall
addr16
adc
pop
lret
cmpsl
dec
mov
repnz
dec
notb
rcrb
icebp
incl
push
dec
in
aaa
hlt
outsb
rorb
dec
les
loopne
outsb
jne,pt
add
xchg
hlt
jo
stos
jnp
test
pop
decl
xor
xchg
sbb
pop
xchg
fimull
xor
test
sar
cmp
pop
mov
movsb
jnp
xlat
fcompl
ja
jnp
or
sbb
das
aaa
popf
jmp
push
clc
fidivs
in
int3
test
in
fsts
fcoml
push
fs
pop
or
call
push
push
lahf
insb
xlat
popa
arpl
push
insb
icebp
test
pop
fnstsw
cmpb
test
decl
pop
aam
lahf
mov
jmp
divb
jb
push
cld
jmp
or
pusha
rcl
clc
mov
push
jno
mov
sbb
out
adc
call
fisttpl
shlb
mov
mov
add
dec
add
insl
lods
stos
fildll
mov
gs
outsb
std
mov
mov
ror
push
test
ljmp
in
xlat
sbb
pop
fisttpll
dec
shll
shrb
cmpsb
mov
sbb
ljmp
bound
cwtl
scas
jmp
jle
push
jl
dec
daa
xor
sub
into
sub
data16
arpl
fdivr
call
mov
mov
movsb
sub
jmp
stos
inc
aad
or
lahf
leave
or
add
or
pushf
ret
sbb
push
mov
loopne
lea
xchg
push
aaa
outsb
mov
pop
call
mov
cld
jb
cmp
push
pop
rcrl
xchg
js
push
cmp
aad
loopne
cmp
jbe
test
jno
sbb
sbb
mov
pop
jmp
call
mov
lods
dec
ljmp
jae
sti
sbb
mov
ror
sbb
pushf
fldcw
jne
fxam
rol
cld
call
jbe
mov
fisttpl
stc
adc
cmp
push
stos
cmpl
pop
mov
fcomps
rcl
stos
mov
jg
mov
mov
pop
cld
jg
test
iret
inc
adc
pop
mov
int3
rol
ds
loope
xchg
incl
filds
sbb
sbb
sub
jno
jns
mov
push
add
decl
dec
insl
xchg
xchg
mov
mov
mov
insb
hlt
mov
dec
aad
fs
cmp
add
pop
dec
arpl
ret
int
mov
push
frndint
jp
add
inc
push
fidivl
jae
and
lods
dec
leave
or
dec
cld
mov
shl
in
jnp
sti
fs
mov
sbb
in
dec
pusha
sub
inc
out
arpl
int
push
dec
or
cltd
cmpb
jae
lret
incb
in
std
into
cld
cs
cld
inc
ds
movsl
mov
jnp
mov
mov
movsb
subl
inc
imul
jns
lcall
out
roll
mov
shl
fmuls
xor
pop
add
out
lahf
push
adc
incl
and
or
aas
pop
mov
clc
and
lcall
jg
repz
test
xchg
in
les
icebp
push
das
mov
adc
decl
in
inc
sahf
dec
insb
in
inc
icebp
cmp
subb
dec
push
sti
hlt
ud0
call
xchg
fists
xor
stos
in
push
sub
sub
push
int
and
pushl
lret
gs
andl
divb
xor
jp
mov
mov
data16
mov
mov
push
inc
adc
out
lods
icebp
rcrb
out
decl
adc
jb
xor
mov
sub
cmp
ss
jno
repz
jmp
ljmp
and
mov
pushf
push
cmp
call
loopne
aad
lcall
sub
sahf
add
mov
stos
xchg
adc
ljmp
push
lods
push
jecxz
stos
stos
sub
popf
pop
xchg
arpl
mov
ja
sub
adc
jb
push
arpl
int3
ficomps
es
call
insb
mov
inc
pop
mov
mov
ljmp
push
fimuls
and
das
add
mov
pop
push
sub
fiaddl
xor
mov
inc
dec
cli
xchg
push
mov
jmp
sahf
or
nopl
cltd
push
int
push
stos
mov
dec
jmp
les
xor
daa
xchg
sub
jp
adc
mov
loope
jo
jecxz
push
mov
lea
out
leave
dec
cmc
and
mov
mov
mov
push
xchg
adc
negl
cmpsb
into
inc
jmp
mov
ja
xchg
cmpxchg
je
mov
test
dec
cld
push
xlat
or
xchg
divb
in
call
fisttps
xchg
data16
pop
insl
std
gs
mov
xchg
cmp
cmp
inc
pushl
inc
jne
dec
jmp
sarb
lcall
sbbb
mov
mov
and
mov
push
movsl
push
xor
xor
dec
jg
jae
xchg
decl
push
test
out
pop
lea
lock
cli
xchg
stos
jmp
ret
jge
arpl
ljmp
stos
mov
jp
mov
inc
adc
dec
out
lret
xor
pusha
xchg
or
andb
xchg
test
fisubl
sti
mov
jmp
fwait
fwait
dec
xor
out
mov
jp
scas
mov
push
mov
inc
call
cmp
out
xor
dec
sub
notb
incl
insl
mov
push
test
or
jge
sub
adc
xor
pop
insb
aas
cmc
call
andb
aam
je
push
cmpsl
sub
decl
subl
ds
inc
stos
outsb
fnsave
sbb
les
dec
ss
mov
imul
mov
jmp
xor
aas
ffreep
iret
jbe
adc
pop
add
mov
mov
fildll
cwtl
adc
ret
call
pop
or
lret
fildll
das
movsl
push
minps
jecxz
push
pop
hlt
jle
and
xchg
pop
shl
and
adcl
jl
or
fistpl
ss
fdivrl
mov
icebp
or
xor
movsl
out
lock
pop
push
ljmp
adc
mov
and
fucom
sti
nop
lahf
push
mov
jle
std
or
call
jg
mov
xchg
leave
movsb
popf
test
fistps
inc
ret
jbe
aas
sbb
aas
pop
mov
loop
jmp
jg
pop
popf
leave
cmp
xchg
jge
icebp
sub
shl
pop
stc
mov
loop
decl
dec
pop
aad
push
inc
mov
xchg
inc
outsl
mov
lret
mov
xchg
aaa
in
and
out
jmp
loop
lcall
js
mov
ja
cmp
call
test
pop
arpl
jne
jns
xor
outsl
gs
jbe
xchg
lret
imul
dec
insl
cmp
ljmp
in
cmpsb
dec
dec
xchg
push
pop
inc
mov
icebp
das
lods
cmp
xchg
into
loopne
std
mov
mov
fwait
dec
add
mov
cs
add
pushl
test
inc
addr16
cmpl
mov
jg
cmp
lahf
ds
ret
fsub
insb
pop
sbb
xchg
pop
mov
imul
lods
mov
lds
nop
movsl
and
pop
pop
jmp
fsub
adc
jb
int
or
pushl
testb
adc
test
sarb
sbb
and
in
jp
sbb
pop
loopne
add
adc
in
fwait
cmc
ljmp
mov
ss
adc
or
aad
loopne
ret
call
mov
lahf
ret
xor
stos
jl
cmp
mov
mov
sub
test
sub
pop
sub
pop
add
dec
fucomp
clc
mov
add
cmp
xchg
add
mov
loopne
js
fists
jg
loope,pt
push
push
jge
jg
fbstp
sub
out
fisubrs
insl
lahf
out
mov
xor
stos
es
jmp
cli
popf
rcrl
fwait
jmp
in
cmp
sar
shl
pushf
aad
nop
xchg
enter
addr16
pop
movsb
fistpl
hlt
pop
flds
incl
dec
cmp
rorb
xchg
lods
sub
repnz
or
xor
decl
icebp
aas
lds
xchg
lea
mov
aam
repz
sub
cli
jmp
and
iret
cmp
cmp
pop
cmp
loop
and
incl
testl
sub
test
out
push
arpl
call
or
push
jg
movsb
lret
ja
das
pop
jne
loop
lods
mov
inc
std
ja
incl
imul
rclb
inc
inc
and
sub
and
mov
and
xor
imulb
pop
cld
sub
mov
pop
dec
jns
loopne
incl
iret
outsl
rcr
push
sub
test
aas
push
lcall
cmc
les
xlat
pop
lock
daa
pop
popa
dec
pop
rcll
jg
aas
jno
cmp
cmp
push
and
aam
or
sbb
in
sub
adcb
insl
daa
cli
arpl
negb
jnp
out
mov
jge
pop
in
cmc
lcall
out
sbb
push
mov
shl
cld
js
pop
aaa
pop
add
or
dec
or
cmp
push
jae
les
dec
pushf
sbb
sbb
inc
pop
insl
test
lods
movsl
clc
jmp
outsb
mov
data16
mov
rcll
sub
inc
cmp
add
mull
mov
inc
xchg
scas
aaa
out
jge
dec
xchg
cmp
loop
les
dec
stos
dec
or
addr16
dec
orl
mov
ss
adc
nop
lods
push
pop
jge
mov
push
je
inc
cmp
xor
jl
push
mov
xchg
jmp
dec
ret
aad
imul
pop
and
adc
decl
aas
in
cmpsb
push
ficompl
scas
sub
jns
insl
add
andb
jae
insb
push
clc
lcall
add
test
js
jg
or
xchg
mov
fisubl
movsb
lcall
dec
jae
les
flds
push
mov
cld
pop
inc
mov
inc
in
pop
or
dec
jne
mov
mov
jb
ss
dec
out
insb
mov
cmp
lcall
dec
scas
test
push
push
outsl
fnstenv
or
inc
mov
fistpll
jmp
sbb
insl
pop
mov
lcall
pop
js
scas
or
scas
addr16
jbe
call
je
sbb
scas
xor
test
setbe
jb
and
pop
std
call
sub
mov
or
push
add
xchg
add
movsb
adc
das
stc
pushl
cmpsl
cmp
sub
lcall
inc
xchg
jne
and
dec
xor
incb
mov
call
cltd
daa
out
dec
xchg
js
sahf
mov
aas
push
jmp
mov
cs
add
inc
jae
jecxz
mov
mov
mov
ja
addb
imul
mov
std
shlb
pop
mov
popa
jno
inc
pop
mov
cmpsb
in
push
cmc
cmc
ss
jle
clc
aaa
std
xchg
and
lcall
or
test
push
push
jg
scas
sbb
xor
xchg
push
inc
pop
mov
pop
add
sub
sahf
xchg
fldt
repz
mov
mov
or
decb
jmp
popf
sub
nop
and
jp
ss
cli
dec
dec
mov
xor
incl
int
cmc
out
and
sbb
leave
imul
inc
cmp
aad
xchg
filds
addr16
mov
push
xchg
aas
out
inc
mov
jmp
jns
decl
pushf
shlb
andb
jo
mov
sub
mov
aam
pop
push
cld
sub
movsl
sbb
and
push
cmp
mov
jmp
push
mov
mov
jbe
pushf
aam
std
cwtl
fstl
clc
pushf
call
addr16
decl
movsl
cld
pcmpeqd
ret
in
mov
in
dec
repnz
mov
call
es
out
mov
add
mov
in
decl
lock
sub
xchg
xorl
fimull
repnz
ljmp
int
fwait
cwtl
sbb
cmp
subb
pop
ljmp
xlat
mov
fsubrs
and
push
jmp
incl
rcrb
aam
push
sbb
mov
sar
jmp
bound
cmp
cli
cltd
aam
xorl
shlb
mov
sbb
aaa
inc
push
sbb
push
or
test
pextrw
push
cmp
or
inc
mov
insb
pusha
enter
addl
incl
enter
mov
pusha
xchg
test
addb
mov
dec
push
lcall
out
pusha
in
mov
mov
fsubrs
pop
jnp
inc
pop
iret
mov
mov
incl
rcrb
push
popf
push
faddl
dec
dec
sbb
leave
in
les
and
decl
clc
push
dec
mov
mov
adc
fidivrl
mov
out
mov
fs
push
cld
stc
addr16
inc
pop
out
xchg
xor
mov
or
and
lcall
adc
adc
aam
aaa
das
mov
jp
movsb
or
push
out
out
cli
call
fcoml
mov
leave
jge
sbb
push
or
mov
jle
fsubp
dec
imul
data16
xchg
in
arpl
inc
flds
sar
incl
test
fistps
sub
fwait
imul
mov
movsb
and
sbb
add
sahf
xchg
xchg
jmp
inc
fwait
pushf
iret
sub
repz
test
lcall
fsub
fstpt
sbb
clc
sub
sub
sbb
inc
leave
jmp
lcall
mov
std
sub
xchg
xchg
iret
movsb
in
popa
xor
sar
mov
jmp
out
lods
cmc
insb
cmc
repnz
enter
andl
fsubr
xor
stos
mov
xor
pop
in
imul
addr16
stc
mov
fcos
jmp
dec
lods
add
mov
sbb
mov
and
pusha
fcmovnb
add
das
cwtl
push
inc
sbb
xchg
lea
pop
int
mov
cli
add
lds
scas
cmp
fisubrs
call
xor
bound
test
sahf
pop
ret
mov
mov
sbb
test
and
das
clc
mov
and
nop
hlt
xchg
dec
sub
ret
push
in
cli
xchg
jl
or
xor
or
fisubrs
enter
mov
pop
adc
stos
cli
dec
push
dec
ljmp
sbb
inc
mov
lcall
mov
and
scas
call
lret
push
pop
sbbb
push
jb
xor
push
movl
or
dec
or
or
jmp
into
add
stc
pop
push
call
mov
pop
in
xchg
pop
call
in
lods
jae
sub
stc
cmp
mov
daa
cmp
mov
add
loope
insb
mov
call
or
fcomip
out
rcrb
or
mov
nop
lret
enter
je
jmp
inc
cmp
movsl
mov
stc
imul
jmp
xchg
add
add
pop
push
sub
pop
dec
sar
cmp
lea
push
cwtl
xor
push
mov
popf
or
pop
ljmp
inc
pop
rolb
mov
mov
stc
popa
ss
jmp
dec
inc
cmp
rcrl
je
push
push
xchg
arpl
pusha
out
test
xlat
jge
adc
std
and
jl
sbb
fstpt
scas
cs
xor
out
add
push
aas
cs
add
incl
mov
inc
testl
imul
popa
push
pusha
lcall
mov
mov
xlat
sub
stos
test
shlb
ret
cmc
decl
mov
sub
or
scas
dec
mov
decl
bound
andl
enter
xor
outsb
hlt
sbb
pop
and
cmovbe
ret
jo
lods
xlat
push
jecxz
mov
imul
mov
or
or
push
repnz
add
push
mov
cwtl
sbb
scas
inc
and
push
ret
aad
ds
sub
sub
push
sar
mov
push
xlat
shl
jno
jg
jg
ret
pop
les
inc
loop
pusha
fidivl
mov
mov
gs
imull
add
and
mov
xor
int3
insb
mov
std
out
nop
outsb
cmp
mov
rcll
orb
inc
loope
jmp
cltd
and
cld
pop
movsb
call
sub
inc
xor
out
fisubs
test
decl
roll
xchg
outsb
fistpll
xchg
shrl
cmc
dec
loop
xchg
mov
daa
sub
aaa
test
cmpsb
sbb
jecxz
fcmovu
gs
jne
jne
aaa
incl
mov
loop
cmp
jbe
lea
and
cli
ljmp
aad
ljmp
inc
push
nop
test
cmp
cmp
es
push
pop
lcall
clc
je
push
in
lret
jno
add
cmpsl
sub
incl
xchg
mov
xchg
inc
dec
shrb
and
enter
adcl
jmp
into
jle
aad
clc
mov
mov
adcb
aam
sbb
fistps
insl
fwait
cwtl
jle
cld
inc
imul
adc
pusha
iret
jge
int3
loopne
in
rcrb
cli
aaa
insb
pop
mov
std
das
lds
insl
xchg
pusha
idivb
xchg
ds
sti
dec
mov
or
pop
push
rcrl
rclb
sub
or
jmp
shll
dec
jl
or
mov
rcrl
cli
out
std
decl
xchg
ljmp
mov
adc
shll
out
sub
sbb
mov
iret
mov
jno
cmp
enter
pop
jne
call
out
jle
leave
push
dec
fwait
jl
cmp
cs
int3
mov
cmpsl
jg
lock
test
js
rolb
out
outsl
fcomps
ret
das
lods
fsts
mov
arpl
add
pusha
nop
and
xor
dec
inc
lcall
jmp
mov
mov
cmp
dec
mov
popf
fwait
dec
mov
sub
dec
xchg
out
xor
jmp
sbb
sbb
arpl
xor
mov
cmpsl
push
push
shll
ret
mov
notb
int
jge
dec
imul
jmp
inc
pop
mov
test
decb
mov
mov
cmp
rcrb
loopne
ja
jmp
nop
lcall
jl
popf
sub
fucomp
inc
lret
or
loopne
fimull
ljmp
enter
cs
rclb
repz
inc
cmp
in
outsb
mov
stos
mov
mov
push
sarl
cmp
mov
ljmp
nop
pop
push
pop
push
fisttps
and
enter
jmp
arpl
inc
lock
ljmp
ja
xor
cmpsb
cmpsb
ljmp
cmp
xor
inc
popf
frstor
insl
sbb
inc
cld
lcall
js
idivb
cmpsb
ss
shll
mov
sub
ljmp
add
inc
cmpsl
push
ljmp
pop
xchg
imul
add
call
sub
adc
dec
cmpsl
sbb
lds
mov
fimuls
dec
nop
mov
mov
gs
cli
pop
out
mov
outsb
stos
fwait
inc
loop
mov
call
jmp
jbe
fbld
jnp
shrl
gs
shlb
push
or
jo
incl
cmp
mov
fistpl
inc
push
mov
mov
cld
test
jnp
je
jbe
adc
js
clc
fldcw
pushf
lock
xor
jne
jge
lcall
loop
ljmp
sbb
and
sarl
pop
sub
inc
ja
jmp
pop
cld
call
or
dec
dec
call
pop
jo
gs
in
push
pop
mov
sub
call
inc
outsb
fwait
jmp
outsb
mov
fdiv
jle
fdivl
rcrl
adc
lock
ljmp
mov
mov
sub
dec
cmp
pop
scas
cmpsb
push
loop
arpl
lcall
fisttps
cmp
sahf
stos
mov
jle
outsb
dec
or
sub
xor
enter
in
call
push
fucomp
out
aaa
pop
enter
dec
in
adc
js
orl
push
xchg
mov
mov
in
outsl
cmp
pop
sbb
hlt
es
rorb
push
dec
clc
push
movsb
adc
stos
rcrl
or
nop
cli
ljmp
data16
xor
loopne
icebp
add
adc
call
test
call
ds
shlb
test
shrl
dec
jae
or
fwait
in
in
push
test
daa
shl
js
ljmp
ficomps
leave
and
push
inc
cltd
int3
pop
sbb
jp
sub
cwtl
cmpxchg
jg
jmp
fs
test
clc
push
into
mov
mov
les
in
in
cmp
test
imul
arpl
cmp
repnz
add
push
mov
je
mov
cmp
lods
hlt
mov
jle
faddl
gs
ljmp
pusha
pushf
test
xor
gs
int3
xor
inc
rorb
cld
or
or
stos
mov
add
mov
adc
cmp
mov
pop
xchg
jmp
test
pushl
imull
add
in
lds
or
decl
insb
mov
mov
dec
sbb
add
dec
mov
jl
jns
ljmp
stc
addr16
mov
pop
push
push
pop
aam
sbb
sbb
and
pop
push
sbb
pop
aam
adc
mov
jmp
shll
cmp
iret
in
pop
or
jb
mov
mov
das
pop
sub
lea
mov
decl
int3
sbb
sub
iret
mov
out
pop
push
aam
into
das
or
cmp
pushl
idivl
jb
xchg
cltd
jecxz
mov
adc
fists
adc
jg
pop
cmp
or
lods
into
pusha
movsl
ret
loop
push
pop
or
insb
sbb
imul
in
mov
pop
cmp
cmc
pusha
mov
mov
jo
out
div
xchg
cmpsb
cmpsw
incl
sbb
pop
cli
cmp
sub
mov
fwait
mov
in
stos
xor
jbe
jmp
ljmp
clc
inc
push
xchg
cmp
or
into
add
ficoml
inc
shrb
int3
lahf
cmp
xchg
loope
dec
push
lods
rol
faddl
push
int3
aad
dec
std
test
mul
faddl
push
xor
insb
xorb
cmp
sbb
aaa
sbb
sub
movsw
xlat
in
movsb
cmc
or
incl
add
nop
xchg
push
outsb
or
jns
xchg
mov
insl
sub
jb
shll
lcall
sbb
jnp
pushw
pop
fidivs
arpl
jg
jle
vxorps
mov
inc
push
sbbb
mov
add
int3
add
lcall
mov
xchg
mov
adc
mov
icebp
mov
lret
xchg
pop
leave
sub
loope
decl
stos
mov
loopne
ret
dec
and
pop
mov
mov
jmp
pop
ljmp
leave
mov
je
adc
inc
hlt
push
adc
push
adc
sub
mov
js
pop
je
das
xor
lcall
cmc
scas
rcrb
xchg
pop
jle
sbb
sub
and
mov
ja
pop
imul
mov
dec
call
jg
mov
hlt
mov
mov
int
and
jae
ja
sbb
cmp
pop
mov
adc
js
test
call
std
jmp
inc
int3
mov
cmpsb
mov
pushf
les
stos
orb
mov
add
cli
dec
jb
cli
es
mov
cmc
popf
mov
cld
mov
stos
lcall
cli
popf
cmp
decl
push
aam
fnstcw
xorb
jge
adc
lods
mov
arpl
and
sbb
cmpsl
loope
cltd
inc
int
pop
in
cmpsb
sti
jno
in
mov
push
mov
roll
jbe
insb
pmuludq
insb
dec
mov
jecxz
fwait
insl
std
jmp
cmp
mov
pusha
stos
lea
mov
in
xchg
jg
dec
lahf
push
roll
pop
fildl
iret
sbb
inc
mov
cwtl
out
and
decl
cmp
iret
push
xchg
jno
mov
lods
cmpsb
lcall
lcall
imul
leave
xchg
mov
hlt
rcrb
mov
lcall
mov
enter
lcall
push
iret
mov
dec
mov
jecxz
cmp
sub
imul
xchg
fprem
cmp
or
fcomip
bound
add
dec
jmp
insl
inc
and
mov
ljmp
nop
adc
nop
rcrl
orb
in
jo
roll
jl
sbb
rcr
push
int
xchg
ret
push
sbb
xchg
inc
fcompl
jns
inc
xchg
pop
mov
jo
lret
mov
cmp
sbb
arpl
or
cmp
pop
jmp
imul
push
cmp
jmp
sbb
cwtl
mulb
iret
ss
mov
pop
adc
push
dec
push
fnstcw
xchg
adc
inc
and
mov
popa
jg
movsl
ljmp
xor
daa
int
out
std
cwtl
sarl
mov
loop
cmp
cltd
ret
nop
clc
lcall
fsubrs
iret
stc
add
mov
gs
arpl
or
call
xor
in
outsl
push
imul
sub
iret
shlb
testb
mov
das
lcall
dec
push
stc
cmpsb
sub
pop
mov
cmp
cli
dec
xlat
js
mov
out
mov
cmp
mov
outsb
into
in
test
fwait
and
inc
pop
fisubl
or
aas
mov
jmp
gs
and
push
push
sbb
push
xchg
inc
iret
sub
xor
imul
add
ljmp
mov
int3
pop
iret
in
sbb
add
cmp
pop
arpl
xchg
dec
clc
ret
jecxz
inc
hlt
sar
jp
in
int3
mov
stc
xor
dec
mov
cmp
xchg
and
and
mov
mov
sti
mov
sbb
pop
mov
cmp
out
test
cmp
hlt
add
cld
ljmp
xchg
jae
mov
es
push
fbld
aad
jg
xchg
cltd
adc
add
sarl
pop
pop
jnp
imul
sub
jg
lret
je
mov
div
mov
bound
ds
mov
imul
mov
push
jne
sbb
les
pop
leave
mov
int
jbe
push
xchg
aas
sbb
movsb
adc
add
push
leave
xor
push
adc
cmp
ljmp
sbb
inc
stos
xor
dec
imul
sar
sub
imul
ret
sub
jmp
nop
mov
cmp
inc
loop
push
xchg
sahf
mov
je
mov
lcall
inc
scas
dec
ljmp
sbb
ljmp
insb
dec
mov
sbb
ljmp
cmpsl
lock
adc
jbe
lcall
fsubl
aad
std
pop
mov
push
inc
ja
pushf
imul
mov
decl
and
jns
mov
out
inc
bound
and
mov
rcr
call
inc
mov
mov
lret
add
adcl
adc
cmp
mov
inc
adc
out
xor
jl
repz
popf
out
in
inc
std
cmp
decl
sbb
lods
xchg
js
lods
ficomps
add
jmp
sbb
addr16
ljmp
int3
cwtl
rcll
xor
aad
xchg
call
push
inc
inc
mov
call
jle
mov
mov
sbb
fwait
push
xlat
xor
ja
cmp
mov
iret
out
out
sti
mov
xor
outsl
mov
push
hlt
fdivr
lcall
mov
arpl
push
push
ficoml
out
mov
mov
xor
lahf
shlb
dec
ds
pop
outsb
pusha
sbb
mov
mov
mov
mov
pop
mov
xchg
ljmp
jo
imul
dec
jle
xchg
cltd
sahf
decl
add
or
push
push
movsb
adc
sbb
and
inc
outsb
pop
inc
mov
lcall
adc
and
mov
fisttps
push
inc
mov
mov
jp
mov
jl
insl
call
ret
addr16
dec
mov
jne
dec
pop
xlat
aaa
shl
pop
enter
ljmp
push
insl
std
jl
sub
ret
lock
cmp
or
loopne
or
sub
outsb
fstpt
jb
out
hlt
jo
out
jp
scas
jl
jp
cmpsb
or
ja
pushl
xchg
ror
inc
leave
adc
ljmp
dec
shll
jae
icebp
divl
stos
lcall
cwtl
mov
pop
out
mov
ja
mov
aaa
cld
cmpsb
lcall
mov
fs
iret
xchg
and
inc
jg
scas
or
loope
mov
xchg
jbe
lcall
loope
adc
mov
dec
enter
mov
dec
andb
scas
push
mov
je
pop
hlt
ljmp
pop
jns
fisubl
mov
push
fmul
or
ja
je
add
popa
mov
ret
in
pop
es
ror
adc
pop
adc
inc
fwait
xchg
aad
shll
adc
push
imul
ljmp
clc
enter
not
nop
or
jecxz
add
pop
push
and
pop
dec
loop
ljmp
lds
sbb
cmpsb
pusha
fs
les
lods
dec
decl
dec
dec
add
and
push
mov
mov
cmc
xor
pop
pop
ljmp
stos
cli
into
pop
push
aad
add
fwait
in
testl
ret
inc
add
mov
jg
ja
lcall
lods
sti
lock
mov
pushf
cli
jge
shr
add
ror
das
sar
movsl
scas
inc
mov
xchg
hlt
mov
mov
mov
xchg
mov
pop
data16
cli
adc
sbb
les
pusha
add
movsb
add
jmp
pushl
data16
cld
sbb
add
sub
scas
ljmp
jge
icebp
mov
popa
aad
sarb
cmp
es
aaa
out
jl
xlat
mov
clc
mov
mov
add
stc
pop
sub
cmp
scas
jg
cmp
es
ljmp
cs
dec
std
in
adc
mov
push
repnz
dec
mov
inc
and
bound
decl
sub
or
aad
xor
cmp
cwtl
mov
and
aas
cltd
in
mull
decl
pusha
adc
pop
push
cld
rcll
enter
data16
mov
adcb
dec
cmp
in
push
loope
push
lcall
pushl
cli
mov
stc
enter
and
fs
and
pop
push
lock
movsb
mov
call
and
mov
in
dec
dec
data16
jmp
aad
mov
fistpl
adc
insb
push
push
and
push
mov
dec
jb
incl
loopne
or
xchg
lds
inc
jmp
jecxz
cmpsl
cld
sbb
inc
mov
incl
xor
pop
add
cltd
or
rcrl
pop
jne
push
fcmovne
jl
mov
repnz
ljmp
dec
es
pop
push
icebp
cmp
mov
mov
int3
cmpsl
test
out
clc
cmpb
xchg
rol
mov
xor
sbbl
decl
adc
cli
push
inc
push
test
insb
push
pop
xchg
fs
lahf
pop
fdivp
pushf
ret
xchg
sub
jg
mov
and
dec
lds
jns
clc
add
push
into
dec
imul
ss
push
mov
push
ja
mov
push
pop
pop
fbstp
pushl
std
call
cs
sahf
cwtl
mov
sbb
xchg
cmc
rclb
jmp
or
cmp
pop
and
xor
jns
clc
dec
and
leave
out
sub
fwait
add
cmc
dec
ja
mov
decl
nop
lea
push
loop
das
jo
daa
inc
ucomiss
ficompl
stc
ljmp
call
rorb
jae
dec
pop
jle
out
scas
rorb
aaa
xor
leave
and
cld
or
push
scas
mov
test
hlt
lods
or
in
cmp
mov
outsl
mov
sub
add
int
xor
incl
dec
daa
or
pusha
sub
and
or
dec
push
in
add
push
imul
lcall
insl
fwait
pushl
pop
inc
jl
adc
jns
je
push
push
arpl
loopne
sbb
lcall
out
cmp
ja
cmp
xchg
js
lcall
lcall
insl
arpl
es
xchg
mov
sbb
add
push
lahf
dec
fcomip
push
out
mov
insb
je
cmpsl
out
adc
xor
cwtl
enter
xor
inc
stos
mov
ljmp
mov
mov
pushf
popf
testb
sub
mov
movsl
cld
inc
push
pop
movsb
xchg
shl
rol
pop
out
out
mov
rcl
sbb
fisttps
bound
add
scas
push
pop
and
xchg
mulb
mov
inc
xor
jno
fs
pop
lret
mov
mov
jmp
dec
ret
in
aas
pop
cmp
test
push
cmp
pushf
jg
ljmp
push
insb
icebp
incb
pushf
dec
jmp
lods
adcb
into
mov
incl
mov
fs
daa
es
and
jne
fildll
fistpl
test
shlb
xor
popa
sbb
push
incl
mov
adc
test
hlt
lret
pop
nop
xchg
js
jg
or
cmp
pop
xor
jbe
mov
dec
lods
incl
lret
cmp
cwtl
fwait
xlat
notl
add
in
cwtl
aas
repz
lret
pop
adc
lret
int3
in
imul
mov
aas
call
mov
fbstp
mov
leave
rolb
call
in
jg
call
sbb
lret
mov
jae
outsb
fmul
je
jg
pop
icebp
loop,pt
in
mov
shr
jmp
lahf
mov
shl
stc
or
dec
push
insb
xchg
jb
or
sti
mov
cmp
pop
gs
sub
adc
sbb
call
mov
fcos
mov
cmp
xchg
dec
adc
inc
lea
jp
adcb
mov
shl
xchg
push
dec
sti
or
mov
imul
inc
jge
cld
popf
negl
nop
rolb
imul
sub
bound
push
fcoms
mov
jg
setb
or
gs
in
pop
push
test
popa
xor
fisttps
decl
sub
loopne
pop
push
cmc
or
lcall
dec
push
mov
insl
insl
mov
rorb
sbb
incl
orl
add
cmp
inc
push
mov
ljmp
ljmp
jb
sub
cmpsb
mov
and
pusha
jo
stc
sbb
lcall
jbe
rolb
test
icebp
notl
cmp
mul
fistpll
jp
mov
sub
mov
scas
arpl
jmp
mov
jne
xchg
jbe
movsl
sbbl
shlb
lcall
jg
jmp
mov
dec
and
dec
add
movsb
mov
test
outsl
pushf
sub
jl
or
ret
mull
mov
cmp
fwait
mov
ja
fisubrs
cmp
cmpsl
test
decb
dec
inc
sbb
inc
or
jg
pop
mov
leave
lock
xchg
out
xchg
mov
pop
outsl
shrl
dec
popf
inc
lea
decl
xchg
sarl
xchg
mov
test
xor
in
xchg
stos
adc
mov
add
fbld
sub
incl
ficomps
jae
leave
inc
shrl
or
fldt
hlt
call
mov
pop
sarb
xor
fcomps
pop
dec
pop
dec
and
fistps
lret
mov
out
sub
hlt
jno
push
insb
lds
call
decl
cmp
cmpsb
fucomip
loop
popa
mov
in
aad
xchg
cmp
mov
incl
pushl
icebp
ret
fsubrs
adcl
add
push
scas
and
mov
divb
pop
sub
inc
fwait
push
lds
fcoml
std
xor
and
jmp
pop
xchg
and
out
stos
test
mov
mov
rcll
xor
mov
mov
push
leave
in
rcl
sbb
lcall
lea
lods
mov
movsb
xor
lcall
hlt
xchg
xor
push
xchg
ret
dec
fs
adcb
sti
incb
mov
pushl
gs
pop
mov
dec
js
shll
mov
and
jmp
decl
sbb
ja
jae
les
popaw
incb
inc
fs
movsl
dec
clc
aaa
sbb
clc
dec
test
repz
mov
mov
aaa
cmp
out
push
imul
stc
xchg
xchg
aam
push
lcall
cmp
in
and
and
mov
xchg
dec
out
lock
pop
das
xor
xchg
xchg
cmc
inc
push
sub
push
lcall
jmp
mov
dec
loope
cld
ds
push
push
mov
xor
cmovne
dec
ret
lcall
mov
or
ja
dec
fistpl
mov
sbb
xchg
lods
sub
loop
mov
pusha
lcall
pop
jno
jo
cmp
inc
scas
jb
mov
push
sub
imul
ret
add
scas
and
adc
rol
ja
sub
lcall
fbld
xchg
dec
sbb
jb
lock
sub
je
adc
mov
jne
mov
addr16
jno
movsl
popf
data16
push
std
loopne
addr16
jg
adc
sub
ja
mov
idivb
in
int3
das
outsb
jge
jg
lock
loop
scas
movsb
into
hlt
hlt
shl
je
jg
test
out
adc
lock
dec
add
shl
jb
mov
decl
jbe
in
push
shlb
test
mov
lcall
clc
push
mov
pop
pop
xchg
or
mov
inc
xlat
and
ud1
jmp
pusha
movsl
lret
sbb
inc
mov
pop
clc
ret
pop
js
dec
fcmovne
mov
jmp
std
jbe
dec
inc
in
inc
rclb
cmpsb
adc
mov
pushf
fs
pop
das
jbe
addr16
incl
add
stc
pop
test
bound
push
hlt
sbb
ficompl
shlb
mov
adc
lcall
leave
dec
and
aam
push
xchg
out
push
mov
push
xchg
cmp
push
add
out
lcall
xchg
sub
iret
jno
leave
cmp
pop
test
and
mov
fadd
mov
adc
jmp
rcrb
and
mov
sti
adc
add
frstpm(287
push
lcall
pushl
xor
dec
bound
or
les
mov
clc
cmp
pop
call
std
push
enter
inc
push
xchg
rcr
bound
adc
sbb
ljmp
or
add
loop
je
mov
fnstsw
and
scas
mov
mov
jmp
inc
int
int
inc
dec
out
daa
xor
jle
xor
repnz
inc
xchg
aam
mov
iret
pop
dec
lods
mov
and
xor
push
ljmp
sub
ljmp
ljmp
push
cwtl
pushf
sbb
bound
add
decl
push
mov
out
adc
jmp
xchg
xchg
orl
xor
decl
xchg
jecxz
stos
mov
mov
loope
das
mov
pusha
shlb
pusha
mov
jge
filds
loopne
out
push
insl
jno
pop
imul
mov
lahf
pop
inc
mov
push
adc
mov
jecxz
and
aad
fcomip
loopne
xchg
mov
fadd
arpl
mov
out
add
sbb
jno
aaa
test
lret
pop
imulb
push
adcb
cltd
sub
jmp
xchg
mov
jl
adc
sub
sub
sbb
decl
shr
notl
mov
test
sub
call
scas
movsb
jmp
fbld
rol
sti
xor
aaa
inc
movsl
pop
out
das
dec
xor
les
push
adcl
inc
testb
add
jg
aam
insl
push
icebp
dec
stos
mov
dec
jecxz
daa
iret
push
add
cmc
cmp
sub
sahf
lods
xchg
push
decl
mov
push
inc
mov
adcl
jnp
mov
call
sbb
inc
out
xchg
out
lret
pop
outsb
loop
dec
cmp
xchg
jno
in
inc
inc
stc
incl
dec
movsb
sub
cmp
inc
xchg
lret
inc
push
ja
mov
add
dec
mov
lcall
pushl
xchg
repnz
in
jns
bound
imul
ja
mov
icebp
decl
sbb
orb
and
decl
inc
insb
cmpsb
aas
mov
mov
mov
push
cltd
add
loop
mov
ljmp
fstpl
cmp
adc
xchg
cmc
jmp
movsl
mov
pushl
jg
adc
inc
jl
cmpl
mov
mov
out
roll
decl
cmp
push
mov
mov
push
sub
mov
aaa
and
mov
sbb
fadds
xor
sar
adcl
push
mov
sub
imul
clc
ljmp
adc
decl
cltd
xchg
xor
sub
fists
stos
mov
or
or
xchg
lret
xor
mov
sub
cwtl
mov
insb
loop
icebp
mov
inc
adc
in
test
add
cld
pushl
lock
test
sbb
or
loop
loop
dec
ljmp
loopne
xor
insl
js
jle
jl
or
xchg
incb
out
jne
incb
push
inc
push
lock
jg
push
pushf
push
ret
cmp
cmp
movsl
scas
test
fmuls
fs
pop
clc
mov
inc
fwait
mov
divb
in
ljmp
cmp
in
jl
ljmp
and
out
jno
mov
lret
sbb
or
push
cs
xor
mov
sub
xchg
mov
or
push
or
ljmp
adc
test
mov
jns
inc
xchg
mov
jbe
push
jmp
pop
pop
call
jecxz
pop
aas
or
mov
xor
loope
imul
cmp
incl
popf
adc
mov
cmp
xor
mov
out
ljmp
push
icebp
sbb
push
popa
xchg
loope
mov
and
xchg
cld
in
mov
mov
movsl
sbb
dec
mov
decl
and
mov
mov
mov
pop
lock
aaa
sbb
add
pop
int3
in
icebp
lds
add
notb
dec
bound
inc
mov
scas
mov
mov
dec
gs
test
inc
jae
out
mov
jge
scas
adc
cld
push
stos
xchg
std
cmpsb
pop
xchg
scas
cmp
or
jmp
dec
push
pop
lea
clc
arpl
jg
sbb
fildll
incl
andb
mov
inc
out
mov
sti
adc
pop
adc
push
inc
lret
and
icebp
in
push
cld
in
push
out
mov
and
repnz
cmc
mov
je
dec
mov
lcall
out
jp
stos
sti
or
and
cmp
leave
mov
push
rep
or
pop
mov
pop
decl
sub
xor
cli
leave
fsts
fwait
pop
mov
xchg
mov
lcall
cmp
fcomps
out
jmp
pop
mov
cld
hlt
push
mov
mov
or
fildll
lea
push
cmp
test
dec
inc
cld
lea
adc
shrl
mov
cli
cltd
incl
cld
ljmp
dec
and
push
xchg
or
sti
xchg
stc
jb
sbb
mov
sbb
cltd
imul
or
loope
out
xor
repnz
lcall
lds
les
mov
xchg
out
roll
movsb
inc
lock
ljmp
pop
enter
cmp
cmpsb
iret
int3
shl
int3
adc
inc
sbb
adc
addr16
stos
movsl
cmp
mov
add
mov
push
nop
jmp
pop
sub
out
outsl
xor
jae
xor
inc
pusha
ret
mov
push
rcll
dec
sub
sub
stc
xchg
push
sbb
xchg
xchg
imul
mov
ds
mov
or
and
jl
xor
xorb
pop
or
dec
repz
cld
lcall
cmpsl
push
icebp
xor
mov
lahf
in
iret
jae
adc
pop
pushl
adc
int3
dec
or
loope
xchg
push
dec
cld
lahf
enter
in
mov
mov
mov
sub
and
jbe
nop
and
and
cs
dec
xchg
mov
cmp
rcrl
sub
adc
and
lods
cmp
call
lock
push
adc
sbb
jmp
adc
pop
lea
je
inc
or
ljmp
clc
lahf
push
sbb
inc
pop
push
mov
call
jp
shlb
fstl
sbb
aad
mov
in
pop
dec
jle
cli
mov
inc
cmp
or
sbb
icebp
pop
cli
jecxz
aas
ljmp
das
imul
into
mov
popf
pop
jmp
cmp
ljmp
js
cmp
inc
xor
out
pop
fcomip
jmp
jl
add
std
xchg
ljmp
movsl
jb
adc
cld
jg
jmp
push
inc
mov
cmp
imul
sbb
scas
inc
aas
lahf
cli
ljmp
push
ljmp
cli
decl
mov
sbb
fldenv
inc
ret
cmp
sbb
nop
daa
cli
add
cltd
cmp
jmp
push
jo
fldt
dec
xchg
cli
pop
jns
fdivs
movsb
lock
sbb
leave
add
incl
pushf
imul
inc
push
jns
jle
jno
iret
ja
and
cmpsl
jl
adc
lock
in
ljmp
jmp
xchg
pusha
mov
arpl
fimull
pusha
test
lcall
cmpsb
cs
cmp
sbb
and
cli
ljmp
fs
push
sbb
dec
shlb
pop
adc
dec
xchg
sub
add
fcom
jg
ljmp
rorl
mov
fistl
aas
xor
aad
incl
fsts
xchg
aad
mov
pop
jnp
nop
popf
mov
out
push
jecxz
scas
dec
push
xlat
adc
gs
stc
xor
pusha
pop
adc
push
jne
cmpsl
inc
test
test
xchg
pop
pop
lret
dec
adc
dec
pop
mov
lods
pop
add
add
fs
mov
dec
test
jmp
xchg
push
fsub
add
jle
insl
adc
dec
sbb
xor
cmp
fwait
incl
std
jg
das
add
mov
scas
dec
cmp
sub
jg
push
idivb
push
pop
gs
sbb
iret
xchg
add
and
sbb
cmp
in
faddp
mov
jge
fcomip
pushl
mov
adc
add
jl
mov
pop
and
sub
int3
movsb
popf
ret
jecxz
aad
call
add
test
and
inc
aad
repz
mov
mov
sbb
jg
cmp
and
jge
outsb
les
xchg
aam
inc
mov
loop
adc
pop
ljmp
sub
mov
lcall
mov
in
adc
gs
popf
hlt
fs
adc
decl
aad
push
rolb
push
repz
test
jle
js
jge
loope
pop
mov
and
push
or
movsl
fcompp
sub
mov
dec
call
std
pusha
je
mov
dec
push
sub
push
sbb
push
leave
adc
shl
iret
push
ljmp
lcall
adc
and
xlat
jmp
incl
cmp
inc
arpl
nop
push
and
inc
inc
fsub
adc
outsb
ret
mov
rclb
clc
mov
js
cmp
ss
decl
xchg
mov
xor
sub
jl
dec
aaa
mov
decl
lahf
int3
not
nop
aas
lret
dec
sarl
jns
call
jb
push
sbb
or
loope
pop
jmp
jae
xchg
bndldx
mov
jg
mov
cwtl
fsubs
das
ss
roll
idiv
into
or
mov
add
or
adcb
jl
lret
int
jg
jle
fwait
out
push
stc
scas
lods
das
arpl
pop
xor
cmpsb
sbb
pusha
cld
mov
js
adc
jg
jg
sub
pop
das
mov
push
ds
call
inc
gs
aad
enter
movsl
xchg
divb
fs
add
sub
pushl
push
cmp
mov
mov
sbb
fisttpll
ljmp
add
int
movsl
imul
dec
lret
scas
adc
movsb
mov
mov
and
idiv
fcmovu
fwait
movups
dec
mov
dec
repnz
mov
adc
sub
inc
add
int
fdivr
daa
jg
xchg
shll
jmp
sbb
inc
xchg
lods
lcall
or
fidivl
jbe
mov
outsb
sbb
mov
incl
dec
cvtpi2pd
push
les
push
jmp
es
push
sbb
fidivrl
pop
xor
mov
sub
movsb
stc
in
mov
or
bound
xchg
xchg
cwtl
xorb
enter
decl
push
scas
jae
push
xor
sbb
xchg
movsl
pop
jmp
dec
cmpsl
leave
out
in
addl
pushl
imul
insb
outsb
mov
mov
adc
pusha
test
sbb
jmp
push
push
jp
push
xchg
mov
jmp
sarl
jl
aam
xchg
sti
subl
jg
mov
call
lret
sub
sub
mov
popa
lret
lret
in
inc
cmp
in
xorb
mov
fsubr
dec
imul
pushl
sbb
or
inc
aaa
out
and
fldcw
xchg
pop
mov
scas
clc
cld
je
ffree
mov
jl
ljmp
cwtl
fcmovu
ds
into
xlat
inc
lcall
ljmp
divb
jmp
lret
xchg
cwtl
jbe
xchg
mov
xchg
rolb
push
sti
lock
jp
insl
inc
mov
sub
lods
outsl
xchg
mov
pushl
std
pusha
daa
xchg
cld
push
add
mov
loop
stc
push
pushl
movsb
sbb
sahf
cld
mov
sub
shr
push
push
sti
jmp
jmp
imul
into
jbe
push
test
xlat
add
subb
fadds
decl
jo
jmp
outsb
int
ret
clc
sub
leave
jl
iret
push
movsl
mov
mov
cmpsb
mov
cmp
jnp
cld
push
decb
fldl
rorl
sub
jle
lods
stos
out
push
inc
adc
jb
adc
adc
incl
cld
jmp
scas
lahf
ja
lret
xchg
cmp
cs
pushl
sub
cmp
scas
lret
cmp
loop
pop
call
dec
jb
push
mov
add
jecxz
push
mov
aam
cmp
sub
loope
call
lds
pop
movsl
mov
inc
mov
rclb
repnz
mov
in
dec
popa
jge
mov
jp
and
adc
or
sbb
cmpsb
mov
jns
addr16
loopne
in
negl
je
outsl
out
pusha
lea
incl
adc
pop
xor
mov
inc
fucomi
push
das
fdivrp
sub
push
sub
sbb
int3
jns
bnd
pushl
std
add
ljmp
push
sub
ss
test
pop
ljmp
sbb
adc
cmp
loopne
inc
pop
divl
push
lret
or
das
jmp
aad
mov
lret
movsb
sbb
rcrl
and
or
fbld
cmc
mull
ffreep
fsubr
addr16
inc
out
mov
outsl
xor
ljmp
mov
jne
repnz
jbe
subl
mov
jg
cmp
push
jb
cmp
lods
push
dec
add
fld
xor
incl
adc
inc
repnz
cmovae
es
leave
adc
sub
mov
iret
pop
dec
dec
mov
push
sub
lahf
inc
xchg
cmp
incl
cld
pop
andl
into
jecxz
orl
dec
mov
xor
pop
hlt
dec
push
jp
pop
loop
dec
jmp
push
sti
imul
lods
je
loop
mov
xor
into
movsl
add
movsl
jae
mov
sbb
call
test
aas
loop
shr
xchg
mov
xchg
enter
ljmp
outsb
lret
shlb
mov
xor
mov
cltd
je
inc
push
hlt
adc
xor
mov
aaa
pop
xor
dec
shrl
insb
pop
cmp
sub
nop
movsl
fs
mov
fwait
dec
ja
xchg
iret
jno
inc
mov
or
mov
cltd
mov
movsb
int3
ss
int
mov
cmp
inc
int
in
rclb
jecxz
data16
inc
mov
fcmovnbe
push
mov
ljmp
xor
add
pop
loop
mov
fbstp
repz
jg
pushl
aam
scas
sbb
rcr
inc
lcall
cmpsb
push
ret
aas
icebp
mov
mov
mov
push
xchg
push
nop
jp
decl
ret
mov
inc
fimull
xor
mov
cmp
mov
mov
xchg
mov
mov
lcall
mov
stc
std
pop
stc
sub
jg
lahf
sahf
lds
fwait
outsb
mov
fs
cmp
idivl
jmp
sub
aas
pop
push
xor
loope
inc
xchg
xchg
xchg
sub
jo
mov
pop
lods
dec
sbb
js
push
insb
inc
mov
in
sahf
hlt
sti
repnz
js
sti
add
sbb
dec
mov
pop
ss
int
xor
lods
cmp
cltd
scas
test
push
jns
and
pop
sub
jmp
cmp
addl
rorl
icebp
fwait
arpl
call
das
mov
cmpsb
fldt
or
xchg
data16
call
jle
jae
stc
pop
xchg
div
dec
mov
ss
stc
test
sbb
xchg
decl
cmp
cltd
jno
cli
frstor
ljmp
ds
lcall
aam
insl
movsl
repnz
scas
jle
aad
xor
mov
jle
aad
mov
cmc
stos
fildll
outsl
mov
push
inc
std
out
sub
cmp
dec
push
mov
clc
push
push
jmp
aas
mov
adc
mov
pop
outsl
adc
cmp
js
cmp
fdivrp
call
and
and
daa
loopne
in
aaa
mov
mov
mov
jae
mov
cmpsb
hlt
xlat
addr16
dec
pop
add
ljmp
pop
ljmp
sub
decl
sub
and
sbb
inc
aas
sbb
pushf
mov
lock
ljmp
sti
lods
imull
sub
std
fs
ficomps
mov
rorb
lcall
loope
sub
popf
fistpl
mov
ljmp
call
jg
mov
test
mov
ror
xor
adc
adc
and
das
decl
inc
lods
lods
mov
cmp
push
test
insb
cltd
fldcw
lret
lret
sbb
pop
mov
insl
in
insb
ja
mov
clc
sbb
cltd
jns
in
pop
loopne
lods
in
fmuls
int3
repz
in
sarb
repz
int3
xor
or
cmp
push
ljmp
add
pop
mul
out
call
lock
into
out
stos
jp
in
jbe
or
mov
inc
ret
ja
stc
das
int3
sub
dec
push
fdivr
lcall
shrl
mov
sub
sub
xchg
test
mov
enter
jp
in
inc
loop
pop
sub
pop
lret
rorl
cmpsb
xchg
xchg
mov
pop
dec
mov
mov
cmp
add
mov
cli
dec
mov
lock
lcall
js
leave
xchg
fisttpl
pushf
mov
aam
test
push
andl
ljmp
push
test
push
ja
sub
or
cmp
jnp
jmp
inc
pushf
hlt
sub
sti
cmpsb
pop
pop
pop
fs
loop
in
aam
cltd
into
movsb
out
stc
mov
add
sbb
pop
cmpsb
not
jnp
mov
negl
cltd
fmulp
test
xchg
cmp
add
fildll
das
jae
sbb
pop
xchg
ret
mov
dec
cltd
lods
call
mov
jae
rorl
out
je
lahf
test
lods
ja
lcall
xor
nop
inc
sub
and
mov
jg
fidivl
lcall
inc
jno
xchg
dec
jo,pt
cld
dec
xchg
jo
lcall
lcall
ljmp
jnp
jo
lock
push
or
jns
or
dec
fimuls
in
es
push
in
scas
add
xchg
movl
std
sub
mov
repnz
divb
out
clc
push
and
bound
or
adc
jmp
pop
xchg
push
mov
mov
in
loope
lds
cmc
arpl
pop
inc
fldenv
ljmp
cmpsb
mov
push
hlt
sub
xchg
les
cli
cmp
test
or
imul
cld
jmp
mov
les
scas
out
iret
daa
fstl
mov
aaa
int3
enter
or
rclb
mov
jne
je
jge
pop
sti
push
arpl
icebp
mov
ror
shl
dec
pop
sub
fsubrl
lcall
cmpsl
sub
inc
pop
hlt
fdivs
add
mov
xchg
or
dec
inc
sbb
mov
pop
jg
rolb
or
lahf
inc
call
xchg
xchg
or
and
and
jecxz
dec
mov
jl
popf
lahf
push
xor
aaa
cld
jnp
lret
mov
jno
ja
cwtl
int
not
mov
jmp
lcall
cwtl
outsl
xchg
addr16
daa
xor
shl
lret
movsl
sub
fisttps
shll
sub
pop
pop
ljmp
int
xchg
lahf
push
jg
daa
jl
push
mov
rorb
lcall
decl
mov
out
ss
pop
aaa
pop
push
scas
xchg
movsb
dec
lahf
mov
cmp
call
loopne
loop
push
test
and
setae
test
icebp
fildll
fcomip
out
pop
insl
in
leave
mov
in
pushl
es
mov
xor
pushl
xor
cmp
test
js
ss
or
pop
mov
mov
xchg
jne
cltd
sbb
mov
stos
xchg
dec
mov
mov
iret
call
rorb
pop
test
cmp
fists
jae
mov
cmpsb
je
jbe
test
pop
inc
add
and
std
decl
sbbl
das
xor
inc
mov
sub
sbb
dec
out
dec
out
or
fs
fdivrs
aad
sub
cmc
xor
ffreep
jecxz
outsb
dec
dec
fldl
mov
sbb
hlt
lret
lods
push
filds
frstor
ja
push
in
sti
les
repz
jmp
mov
xor
pop
outsb
and
je
ds
adc
dec
dec
xchg
mov
pop
mov
sbb
sahf
stos
cs
dec
xor
sub
xchg
not
inc
add
sub
xor
mov
incb
clc
fs
arpl
sbb
push
insl
xchg
std
mov
pop
call
clc
adc
insl
sahf
sub
add
xor
push
sbb
xor
cmpsl
dec
outsb
push
call
gs
addr16
xlat
jl
sub
aaa
popf
push
mov
add
dec
scas
pop
xchg
adc
test
decl
sub
cmp
mov
xchg
or
fcmove
test
shl
iret
insb
repnz
loop
jg
cmc
mov
ja
out
sub
and
sub
cmpsl
lods
je
decl
push
or
mov
scas
addl
outsb
out
insl
lea
cmp
call
and
fstpt
sub
inc
inc
cmpsb
ss
mov
dec
mov
or
xlat
jb
inc
xchg
pushl
push
cltd
adc
imul
arpl
push
ret
repnz
sbb
popa
inc
cmp
in
xchg
sbb
sub
add
or
xchg
push
xchg
test
add
pushl
xchg
fists
ficoml
nop
dec
xchg
aam
ljmp
imul
arpl
ss
or
stc
cmpsl
jp
xor
sub
xor
dec
mov
addl
repz
aam
xor
lods
into
cmp
outsb
jl
and
stos
jl
xchg
mov
jge
push
movsb
enter
in
lcall
jp
dec
xchg
mov
movsb
lds
push
sub
int
pop
mov
push
mov
mov
dec
inc
inc
or
insl
add
mov
mov
testb
das
sbb
cs
mov
data16
fldt
or
mov
cld
sbb
cld
sbb
icebp
loop
pop
xor
lods
mov
dec
jbe
adc
mov
jns
lcall
xlat
mov
das
xchg
add
sub
dec
add
or
jns
cmc
or
jle
mov
inc
incl
mov
dec
stos
mov
decl
inc
and
push
in
sbb
inc
out
jne
xor
dec
rcrl
mov
fbld
aad
xchg
inc
call
loopne
jne
push
scas
inc
mov
and
xchg
mov
dec
sbb
mov
adc
pop
out
xchg
into
dec
or
pop
dec
test
push
pop
pop
adc
jmp
push
push
mov
pop
adc
loope
pop
lea
negl
inc
incl
pop
lea
adc
stos
pop
out
and
ljmp
ds
ja
out
es
idivl
fcomip
decl
xor
mov
data16
fidivs
mov
mov
sbb
xchg
pop
dec
scas
idiv
jmp
pop
fisubrs
call
xchg
fistpl
fiaddl
jle
stos
jne
decl
rorl
mov
imul
fs
jbe
mov
pop
and
frstor
call
mov
js
fistl
mov
out
xchg
push
jbe
cs
movsl
dec
cmc
shld
das
leave
xor
pop
daa
adc
fwait
jle
pop
loope
in
or
jg
in
push
je
stos
pusha
adc
jnp
mov
loopne
incl
pop
jmp
sbb
fsubrl
xor
xchg
jmp
fwait
das
daa
mov
int3
cs
arpl
lock
scas
sbb
out
lcall
fs
pop
xor
test
enter
push
movsb
sub
sar
decl
sub
cmp
mov
adc
and
sub
pop
sar
mov
dec
scas
push
mov
push
pop
cwtl
stos
pop
cmp
nop
leave
adc
dec
sti
mov
sti
leave
add
push
cmp
outsl
cmpsb
and
test
xchg
cmp
stos
pop
lret
cmp
dec
into
iret
jne
mov
call
fiadds
imull
adc
out
pop
adcb
in
jno
adc
lahf
decl
pop
push
adc
mov
adc
sub
rcrl
cmc
cmp
decl
lock
jmp
loop
push
jl
mov
jmp
jle
iret
lock
sbb
xchg
pminsw
sbb
push
or
cmp
pop
jne
cmp
or
call
or
loope
shll
mov
lcall
and
out
aad
cmp
pop
inc
add
jg
es
sbb
idiv
decl
lret
pop
and
dec
lahf
xor
jmp
sub
mov
jmp
loop
jnp
pop
fld
das
sbb
out
fisttpl
in
xchg
jg
mov
fisttpl
sbb
fs
stos
popf
hlt
ret
loop
mov
sahf
cmpsb
aad
inc
lods
call
sub
js
mov
in
lret
fidivs
ret
jbe
mov
incl
and
and
xorl
mov
daa
cmp
aad
ljmp
push
hlt
mov
sub
xchg
add
loope
jg
dec
xorb
dec
mov
xor
mov
mov
mov
shrl
jbe
inc
nop
adc
call
in
xchg
mov
aam
jo
and
pushf
nop
mov
xor
mov
fbld
mov
cmpsl
and
shrb
inc
xchg
inc
idiv
imulb
xchg
and
xchg
and
sbb
bound
sar
and
dec
nop
cmp
xchg
jg
and
inc
cmc
out
data16
ljmp
push
lock
adc
sbb
inc
imul
lret
enter
inc
clc
test
rclb
test
cs
movsb
jnp
mov
jbe
iret
shl
jecxz
jae
push
mov
jg
cwtl
ja
mov
pop
or
ljmp
push
in
push
cwtl
inc
or
jb
adc
adc
fists
xchg
mov
jg
subl
test
ret
or
push
xchg
dec
popa
scas
and
cli
jg
call
ret
sbb
xor
push
ds
sbb
mov
sti
outsl
jg
das
adc
test
cwtl
neg
in
aad
xor
mov
fstpt
mov
repz
add
push
sub
inc
sub
clc
push
sub
dec
or
push
inc
pop
dec
test
pop
lock
mov
mov
test
ja
sub
ror
out
mov
xor
mov
mov
cld
subb
hlt
and
mov
imulb
inc
ret
cs
adc
jo
pop
cmc
rcll
dec
bound
mov
clc
loopne
les
mov
pop
and
mov
dec
popa
xchg
mov
mov
xchg
or
jle
imul
movsl
xor
shrb
stos
inc
aam
or
lea
aad
xlat
push
les
stos
jb
mov
mov
scas
jge
jecxz
roll
mov
push
mov
loopne
xchg
adc
mov
testb
pushl
cld
sub
dec
ret
cwtl
in
mov
cmp
cmc
pop
cmpsb
call
inc
js
fsubrl
or
lahf
inc
es
cmp
in
xor
add
push
and
add
mov
call
cmpb
pop
jb
repz
inc
lock
cmp
andb
faddl
or
mov
cltd
mov
mov
gs
mov
mov
mov
cmp
sub
dec
insl
inc
std
scas
bound
cmp
and
cwtl
ret
rclb
ret
repnz
addr16
pop
push
les
pushl
ret
jb
pop
int3
xor
imul
cli
ficomps
xchg
icebp
in
add
pushl
and
mov
mov
lcall
mov
in
jle
sub
jmp
pop
cmp
xor
jecxz
pop
rcll
cmp
cld
mov
ljmp
repz
pop
jmp
jl
mov
or
repz
pushf
in
push
xor
call
mov
jo
out
sub
xchg
sbb
jne
decl
and
clc
cmp
imul
dec
xchg
fwait
push
lods
jno
pop
adc
sti
test
or
cwtl
test
cld
push
sub
lods
xchg
mov
jo
sbb
pushl
mov
push
dec
mov
iret
lret
add
outsl
inc
lock
call
jb
pop
xchg
imull
dec
xlat
fwait
lahf
fidivs
stos
daa
aad
mull
rol
cli
out
fs
lock
pop
xlat
repnz
xchg
cs
fidivs
ret
xor
call
and
xchg
lock
idiv
adc
decl
lret
dec
ja
lods
out
xchg
fcomps
stos
mov
stos
cmp
mov
mov
imul
fstpl
jbe
pop
imul
sub
in
loop
scas
push
imul
ljmp
push
ja
xchg
mov
pop
sub
gs
fmul
mov
bound
sbb
mov
test
out
fisttpll
lds
mov
pop
mov
mov
into
iret
cmpl
cli
aad
insl
out
out
mov
mov
and
rcrl
jns
into
fbld
mov
incl
stc
mov
fmul
test
mov
shrl
notl
xor
sbb
inc
sti
pushl
pushl
dec
adc
nop
mov
xchg
pop
mov
inc
inc
mov
lock
fidivl
daa
decl
mov
mov
bound
xchg
sub
push
add
push
sbb
leave
lcall
movsl
dec
out
inc
xor
cld
mov
lods
or
enter
data16
inc
addr16
xchg
xchg
insb
in
mov
aam
ret
inc
das
sub
icebp
fsubrp
adcl
pushl
roll
or
dec
adc
loopne
add
nop
lods
cmp
movsl
mov
pushw
inc
aad
orl
gs
cmc
cmc
inc
pop
cwtl
cmp
push
ljmp
aad
xchg
cli
push
into
cmpsl
fcmovne
or
pop
pop
aaa
fadds
cmpsb
jmp
jne
movsl
mov
xchg
inc
insb
xchg
imul
lcall
decl
cmp
shl
aaa
out
outsl
push
daa
push
lods
stos
jno
lods
xchg
pop
shl
xor
cmp
pushl
sahf
mov
fistpl
pop
out
dec
in
lods
dec
fimuls
push
add
push
pushl
pop
inc
sahf
mov
lea
cltd
cmc
ljmp
insl
stos
dec
mov
lcall
pop
dec
add
loop
es
fldl
insl
adc
mov
jns
rol
or
cwtl
mov
fisubrl
mov
jmp
hlt
pop
lods
cmp
insb
incl
repnz
addr16
cld
fs
mull
push
ret
sbb
decl
adc
jge
or
cmp
incl
std
lahf
insb
jg
fidivrl
push
lods
mov
es
call
jmp
out
fisttpll
lods
ds
mov
jmp
xchg
xchg
addr16
jno
xchg
pop
mov
pop
insl
xchg
mov
add
cli
ljmp
icebp
imul
jp
push
subl
data16
cmp
push
ljmp
outsl
jle
je
ljmp
and
popa
pop
data16
imul
popa
std
sub
sar
lcall
push
addb
loope
and
mov
sahf
insl
inc
mov
es
in
fcmovu
mov
jns
out
jno
xor
cmp
sbb
jae
repz
ret
jo
adc
jg
sub
mov
cmp
idiv
incl
scas
fcoms
arpl
cmc
push
call
fs
outsb
xchg
cli
and
adc
mov
aaa
and
ds
sbb
cmpb
test
pop
jge
mov
scas
xchg
lods
loop
incl
mov
push
movsl
aas
or
jge
into
insb
xor
inc
sub
sarl
and
adc
cmp
cmpsl
outsb
int
loop
dec
das
mov
mov
mov
cmp
mov
xor
jns
jmp
orb
jae
ljmp
jne
fnsave
mov
inc
push
outsb
cmpsb
cli
mov
data16
test
cmp
and
mov
sti
cmpsl
cmp
cld
fidivrs
xor
push
lcall
jnp
std
in
aam
lea
cmpsb
push
mov
xor
sbb
in
jge
out
cli
decl
insl
icebp
std
push
in
js
inc
imul
punpckhdq
mov
lods
sbb
sub
idiv
idiv
jno
jbe
insb
je
cmp
ror
dec
xchg
in
jno
push
idivb
jl
ljmp
inc
fistpl
sarb
mov
ljmp
xchg
cld
xor
movsl
ja
push
jg
inc
jp
rcrl
dec
sub
ja
pop
icebp
push
pop
leave
into
dec
aam
mov
decl
add
cwtl
xchg
mov
mov
jge
adc
arpl
decl
orb
and
out
mov
lcall
ss
loopne,pn
cmp
cld
loop
cmp
sub
pushf
mov
mov
jecxz
sbbb
push
jbe
sub
iret
inc
pop
out
subl
push
les
aaa
cli
rorl
sub
aas
mov
idiv
movsb
not
ret
push
push
cmp
lods
faddl
js
mov
bound
push
mov
mov
fisubs
mov
fwait
out
cmp
and
and
sbb
cmp
push
push
not
repz
dec
dec
stc
or
cwtl
mov
add
fucomip
or
jecxz
dec
daa
push
lcall
int3
popl
cmpsb
push
fldenv
test
sbb
sub
xchg
ljmp
incl
cmpsl
nop
xchg
loope
std
xchg
shl
ret
and
mov
incl
sbbl
in
mov
jecxz
push
dec
loopne
leave
push
cmp
dec
decl
mov
rolb
sbb
insl
mov
jae
push
sbb
jae
or
loope
jp
push
jae
mov
aas
movsb
pop
das
cwtl
fcomip
lcall
cmp
mov
inc
daa
loopne
inc
pusha
mov
in
sub
call
inc
jnp
in
push
out
outsl
in
dec
test
mov
clc
jg
dec
sub
push
movsb
xchg
or
mov
mov
imul
ljmp
pop
loopne
push
int3
enter
mov
into
xchg
mov
cmp
lret
fisubs
push
add
addr16
js
xor
pop
xchg
pop
or
mov
fsubs
xor
push
ror
repnz
sbb
lcall
pop
flds
mov
repnz
cmc
fcompl
adc
xor
andb
jmp
cmc
pushf
js
dec
fmuls
rcll
pop
adc
push
in
subl
jge
xchg
jecxz
cli
ljmp
cld
jns
repz
call
jnp
filds
push
mov
push
pusha
sbb
or
call
ljmp
out
mov
mov
add
fisubl
mov
jnp
lds
jg
pusha
sub
pop
in
push
pop
cld
lods
insl
xorl
out
mov
sbb
rcrl
int3
out
and
xchg
fwait
add
insb
adc
call
pop
dec
bound
jne
cmp
loop
cmp
or
mov
ljmp
push
addr16
pusha
scas
fs
sbb
not
icebp
sub
adc
loopne
jg
cmp
jle
mov
add
fdivrl
test
incb
dec
inc
jnp
xchg
out
decl
inc
std
cmpl
cmp
push
out
or
push
call
call
xor
daa
add
and
fldcw
mov
or
inc
leave
out
sub
cmp
mov
icebp
mov
jnp
outsb
std
mov
mov
mov
mov
out
jo
clc
xlat
adc
aas
jae
inc
push
xchg
movb
std
std
iret
out
test
dec
les
out
xor
xchg
cmp
dec
hlt
jle
out
rorl
lods
fwait
fs
cmc
jmp
ret
jg
mov
dec
ret
subl
mov
inc
test
nop
dec
mov
cld
test
insb
imul
pushl
fs
push
test
test
xchg
sbb
dec
insb
add
sbb
cli
incl
fstl
imull
leave
fwait
dec
int3
xchg
mov
ljmp
mov
idiv
jb
in
ss
mov
fnstsw
pushl
xchg
shll
mov
enter
pop
inc
rolb
outsb
dec
cmp
iret
pop
outsl
jecxz
or
mov
xchg
fsubs
xor
jns
mov
and
sbb
push
sub
add
ljmp
call
mulb
repz
jnp
lcall
pop
mov
mov
pop
jge
sub
fcmovb
xorb
rcrl
sbb
aad
out
pop
icebp
cli
and
pop
pop
pop
popf
sbb
dec
sub
fsubrl
jmp
push
adc
pop
mull
scas
xchg
jb
push
and
cltd
icebp
rcll
pop
js
add
repz
cmp
clc
insb
adc
jmp
mov
out
scas
jnp
jb
xchg
push
push
mov
in
enter
jecxz
add
decl
mov
pushf
and
nop
cmp
mov
adc
ret
jg
and
and
pop
sbb
or
aad
cld
fisttpl
in
inc
lods
mov
mov
insb
ja
rcl
and
rcl
mov
mov
ss
mov
fldcw
xchg
test
jnp
stos
xlat
sub
sbb
push
clc
mov
pop
sub
push
dec
mov
decl
fidivs
stos
push
mov
jmp
push
xchg
movsl
jno
xor
shrl
sub
into
ret
xchg
je
mov
push
mov
nop
cmpsl
and
cmp
jns
jmp
shlb
adc
mov
inc
and
push
ds
xorl
pushl
mov
lods
daa
sahf
cmp
mov
mov
call
mov
cltd
cli
decl
xor
test
inc
inc
xor
mov
sbb
fidivrs
mov
inc
inc
mov
and
cmp
insb
mov
xchg
mov
jg
stos
sub
jne
inc
sbb
movsb
icebp
push
xchg
jmp
imulb
ljmp
call
or
and
lcall
fsubrs
mov
sbb
fldcw
cltd
xor
in
repnz
mov
mov
scas
cmp
jnp
in
lea
cmp
push
mov
hlt
or
enter
out
xor
push
rorb
pop
jae
mull
rclb
scas
test
lcall
mov
add
jnp
sbb
mov
inc
add
cld
dec
aas
inc
inc
sub
push
mov
and
xchg
add
int3
repnz
decl
outsb
xlat
xlat
adc
push
xor
data16
ss
jbe
mov
push
and
out
jmp
mov
xor
mov
lret
push
dec
mov
fadds
add
insl
cltd
inc
jnp
sbb
mov
inc
outsl
xchg
stos
roll
movsl
aad
outsl
clc
ljmp
das
jne
out
mov
mov
push
mov
rcrl
xchg
jns
sbb
leave
inc
decl
mov
xchg
push
push
jno
push
sti
call
pop
add
shr
sbb
loopne
add
rcl
decb
dec
add
jg
rorl
push
jo
adcb
mov
push
xor
rcr
fbstp
lock
push
sub
lods
mov
xchg
sbb
fdivr
lods
loope
pop
sarl
sub
push
shl
sbb
sub
inc
dec
aas
fisttps
sbb
jp
jo
popa
insl
or
pop
mov
call
jo
pusha
add
push
add
mov
add
lods
add
fmull
pop
or
add
rsqrtps
pushl
loopne
shrb
sbbb
cmpsl
add
mov
add
stos
jecxz
add
add
add
add
mov
call
add
add
add
xorl
cmp
push
add
das
xor
in
pop
lock
daa
dec
notl
jbe
ret
addb
aas
cmp
testl
insb
add
cmp
push
rcrb
xorb
in
dec
add
mov
decl
incb
outsb
cmpsl
sub
pop
or
mov
jno
sahf
xor
cld
incl
jle
outsb
add
jo
cmp
repz
mov
addr16
dec
mov
clc
adc
adc
dec
int
sub
lcall
incl
outsb
test
or
loopne
pop
int3
cmp
mov
pop
cmp
mov
into
int
dec
aad
incl
lret
ret
pop
pop
icebp
inc
in
cld
cwtl
push
faddl
fbstp
jmp
jl
jle
add
mov
int3
or
in
test
aas
mov
imul
jns
push
pop
clc
pop
cmp
loop
mov
pop
pop
push
jmp
jno
push
push
imul
es
je,pn
sbb
es
mov
lcall
mov
or
sub
add
adc
std
sub
aad
lahf
test
loope
outsl
repz
inc
jmp
or
jno
cmp
out
imul
pushf
push
cmpsb
pop
pop
popa
rcl
cmp
jg
ljmp
addr16
das
in
inc
mov
mov
lds
sahf
in
decl
popa
or
test
addr16
and
push
cs
fisubrl
inc
cli
incl
mov
orb
push
pushf
dec
sub
in
cmpb
test
dec
dec
fwait
popw
repnz
and
shrb
sbb
or
mov
mull
ficoml
aas
pop
pushf
dec
add
add
push
mov
xor
dec
and
outsl
sbb
sub
mov
dec
jecxz
aaa
daa
lea
mov
test
or
sti
inc
fdivr
xchg
pushl
incl
jns
lcall
out
mov
lcall
adc
clc
xlat
mov
sbb
ljmp
jae
rcrl
lock
std
push
xchg
mov
loopne
outsl
cld
cmpsl
cld
lods
incb
adc
pop
nop
cmp
pop
dec
shll
cmp
jmp
jo
jns
xchg
xchg
dec
push
int3
jg
sbb
jp
xchg
xor
jae
mov
cmp
lret
or
or
cmc
roll
sarb
pop
xor
mov
pusha
mov
dec
push
and
in
jb
xor
in
andb
jecxz
dec
add
mov
cmp
ljmp
repnz
mov
sub
arpl
xchg
add
out
cmp
fdivrp
jmp
dec
mov
addl
movsb
sub
outsb
sar
jp
add
test
adc
mov
mov
cmp
icebp
sbb
ja
push
je
adc
mov
and
mov
cli
lea
mov
cmp
out
cli
dec
xor
sbb
push
int3
push
xor
pushl
pop
cmc
movsb
addr16
cwtl
and
sub
mov
sbb
sub
mov
mov
dec
sbb
xchg
lahf
lcall
or
sub
mov
mov
sbb
ficoml
lcall
or
pop
mov
mov
orl
das
pop
cmp
lea
aas
inc
lret
adcb
lods
test
mov
je
mov
sbb
pop
inc
push
ret
jl
pop
decl
push
or
nop
imul
test
and
xchg
loopne
imul
ljmp
lods
xor
mov
xor
add
dec
lret
lcall
int3
dec
xchg
jbe
loopne
call
xor
stc
pop
cmp
jg
mull
std
imul
xlat
jns
call
test
or
adc
arpl
mov
cmp
mov
out
cmp
sub
fnstenv
rolb
dec
out
scas
es
les
xchg
ja
scas
stc
jb
fsubrp
pop
icebp
cmp
jmp
xor
add
aad
cmp
rcrl
repz
cmpb
ds
lret
lods
jmp
pushl
rolb
aaa
mov
pushf
stos
cmp
mov
mov
mov
ja
push
dec
sarl
leave
dec
sub
ss
push
pop
inc
sub
insl
push
push
push
adc
jnp
std
xchg
sahf
stc
gs
pushl
out
ret
push
xchg
mov
icebp
fstps
adc
sub
repz
in
jnp
xchg
sbb
lcall
xchg
and
aad
mov
dec
lods
jbe
inc
repnz
call
lahf
call
xor
jge
pop
loop
insl
es
nop
cld
push
test
neg
lock
js
fiaddl
insb
icebp
repz
clc
cwtl
xor
mov
pop
test
out
cli
pushl
dec
fnstenv
gs
scas
iret
ja
cwtl
aas
push
movb
js
mov
clc
mov
lret
cmp
jg
pop
jle
push
xor
adc
inc
dec
decl
cmp
xchg
call
in
lods
mov
dec
inc
dec
pop
sub
mov
jp
bound
repnz
sti
jp
fdivr
test
dec
stos
in
push
sahf
nop
fnstenv
out
cmp
fnstsw
fwait
js
std
mov
les
cld
repnz
pcmpeqd
mov
cwtl
jbe
fcos
jg
jecxz
lret
or
fiaddl
dec
dec
ds
cmp
jle
pop
cmp
cmpsl
les
jnp
ficomps
hlt
ds
and
in
mov
jmp
repz
jl
jmp
cmpsb
cmpsl
ret
ja
pop
outsb
aad
cmp
mov
incl
arpl
jp
push
arpl
nop
sahf
cmc
test
stc
mov
xchg
jo
insl
call
mov
pop
adc
mov
dec
and
ret
jmp
fwait
push
bnd
cmp
loope
subl
test
push
in
and
dec
mov
mov
adc
or
mov
movsl
pop
frndint
cltd
out
pushf
neg
jmp
mov
ret
jle
add
mov
jmp
mov
idivl
fwait
sbb
mov
xchg
scas
out
mov
pop
cmc
pushl
and
adc
xor
xchg
jecxz
les
adc
clc
aam
mov
push
jle
push
jnp
ret
nop
dec
jae
cltd
cmp
lcall
mov
and
mov
ret
sbb
lock
ja
daa
fimuls
mov
dec
ljmp
ret
ja
cmp
lahf
mov
cmp
aaa
fwait
mov
cld
fidivl
push
cmp
ds
xor
jae
push
pop
push
adc
pop
insb
lds
cmp
adc
loop
jg
fcom
dec
in
loopne
int3
add
dec
inc
insb
lahf
testb
lahf
js
data16
xlat
imul
lret
push
cltd
or
call
out
add
sahf
out
xchg
int3
pop
xchg
dec
pop
mov
cld
out
xchg
xor
jbe
jl
xchg
jmp
shll
stos
mov
pushl
or
dec
fsubl
out
flds
test
pop
jl
push
push
fidivrl
data16
aaa
dec
pop
cmp
pushl
push
movsl
lods
mov
out
xchg
push
stc
or
sbb
fisttpll
xchg
jl
add
cli
iret
rcll
call
lods
test
jnp
inc
jl
test
mov
repnz
lods
testb
int
icebp
outsl
mov
mov
outsl
pop
pop
fs
xchg
pushf
ffree
pop
inc
jecxz
mul
inc
int
ds
jno
jecxz
sub
xor
cmpsb
decl
mov
icebp
imul
mov
jecxz
enter
out
xor
fstps
jle
dec
outsl
aad
lss
xchg
xchg
sub
sub
mov
lea
add
repnz
in
cli
mov
aam
lea
sar
call
std
xchg
mov
enter
shll
rcrl
rcl
rcll
into
sub
cld
inc
cmp
cli
cmc
out
push
dec
movsb
ss
push
xchg
loop
test
cmp
push
aas
cmp
dec
xor
lods
out
jno
sub
sub
jmp
ret
les
pop
jne
orw
adc
aad
push
test
xchg
mov
int
shrb
fs
dec
xor
xchg
adc
mov
imul
hlt
mov
fimull
aad
test
pop
xor
arpl
xchg
pop
hlt
lcall
mov
into
sbb
pop
push
push
fcos
mov
push
loope
ljmp
jmp
cmp
mov
mov
cmp
dec
jg
mov
mov
xchg
sub
cld
ss
fistl
mov
mull
in
sahf
jge
jg
cld
or
mov
scas
push
dec
cmpsb
orb
cmp
mov
fwait
xchg
cltd
mov
mov
mov
jl
mov
gs
pop
sarb
ja
jmp
xor
ss
jno
popf
mov
pusha
dec
cwtl
add
pop
mov
decb
cmpsb
mov
ljmp
or
jg
dec
aas
sahf
movsb
cld
iret
not
lcall
les
and
mov
pop
mov
fistpll
xchg
sbb
ljmp
orl
decl
lods
lret
sti
repnz
movsl
in
es
push
data16
call
push
jp
and
mov
ds
jnp
insb
fwait
mov
dec
out
repnz
loop
sub
cmpsb
cwtl
jge
mov
inc
xchg
xchg
sub
mov
xchg
adc
or
mov
fxch
pop
cmpsl
xor
dec
ds
je
jmp
xchg
push
decb
fwait
pop
sbb
scas
push
imul
jnp
sarb
and
and
xchg
push
lcall
inc
bound
add
lods
cmp
cmp
mov
push
aam
in
pop
mov
out
ss
clc
lahf
int3
cltd
dec
jns
jp
cmp
cld
insl
sbb
or
push
icebp
clc
sub
xchg
xchg
cld
hlt
pop
cld
ljmp
scas
arpl
repz
icebp
sti
lods
out
addr16
mull
lcall
xlat
xchg
fs
dec
imul
rorb
add
pop
xchg
xchg
sbb
mov
pushf
sub
add
ljmp
sbb
xor
lock
add
inc
add
inc
faddl
incl
inc
rcrl
and
xor
push
js
out
xor
pushf
outsl
push
into
sbb
shl
mov
lods
ret
sub
sub
sub
mov
pandn
sbb
xchg
ja
lods
push
sub
pop
pop
dec
mov
adc
out
outsl
addr16
out
xor
data16
js
stc
fcmovnu
sbb
pop
cmp
sub
cmp
xchg
inc
add
loopne
cli
loop
fldl
out
rcll
cmp
push
cltd
int
sub
decl
push
lds
mov
ljmp
jge
stc
mov
lcall
mov
dec
sub
push
pop
ret
push
aad
hlt
mov
xchg
aas
lds
pushl
or
dec
mov
stos
int3
inc
icebp
or
hlt
popf
inc
sub
cli
add
mov
add
xchg
push
sbb
sub
je
incl
lods
bound
hlt
lcall
mov
incl
movsl
xor
lods
pop
sub
lahf
inc
aam
push
ljmp
lea
jns
sahf
fbstp
mov
scas
pushf
push
inc
movsl
dec
imul
imul
jg
mov
or
ficomps
clc
xchg
jbe
xor
inc
inc
rcll
clc
adc
jnp
inc
mov
xor
lods
or
mov
fs
clc
sbb
leave
mov
fildl
inc
and
loope
add
add
xlat
jo
aad
lcall
je
imul
cmp
push
ljmp
pusha
mov
pop
lock
leave
mov
push
test
and
js
cld
and
mov
sub
mov
mov
ljmp
fcmovu
inc
arpl
jmp
or
movl
jbe
push
pop
movsl
std
shll
or
mov
sbb
sbb
inc
and
or
mov
shl
mov
fmull
decl
fistpll
xchg
sub
jo
push
xor
dec
jb
and
sti
pusha
mov
je
dec
cmp
mov
push
xor
stc
sub
adc
stc
xor
mov
addr16
cmp
cmc
sahf
scas
and
aas
fwait
incl
div
decl
and
dec
inc
sbb
pop
adc
add
adc
xor
incl
pop
std
es
loopne
pop
sub
ss
fwait
inc
and
mov
cli
incl
js
and
std
cmpsb
dec
pop
js
cwtl
ret
cmc
stos
mov
xchg
repz
std
pop
mov
or
testl
int3
lea
xchg
loop
pop
or
jmp
insl
xor
insl
jnp
je
jne
push
ljmp
jns
inc
adc
movsb
pop
arpl
dec
push
xchg
mov
repz
mov
mov
push
call
int
mov
jle
scas
mov
out
sbb
in
mov
lcall
pop
jnp
ffreep
sub
subb
sbb
push
nop
inc
rcrb
call
call
pop
pop
fwait
rorb
ret
gs
xchg
inc
ds
fneni(8087
sub
into
scas
push
into
les
test
cltd
sbb
lret
enter
mov
cmp
push
jbe
mov
insb
jg
jg
incl
sub
ljmp
jno
mov
cwtl
push
loope
lret
int3
ljmp
mov
xor
shr
inc
mov
fnsave
inc
xchg
dec
pushf
jo
call
mov
jmp
in
jmp
fstpl
rorl
fsubrp
mov
mov
decl
push
out
mov
xlat
jp
mov
mov
sar
decl
fisubrs
sbb
dec
sahf
add
xor
in
inc
push
stos
cwtl
mov
ljmp
in
pop
pop
mov
pop
jge
mov
imul
mov
ljmp
jg
stos
decl
inc
in
pop
mov
jno
dec
cli
mov
dec
pop
fsubs
mov
shrb
dec
in
mov
imul
repz
xchg
pop
mov
sbb
mov
and
inc
add
int3
test
fisttpll
out
decl
scas
dec
cmp
xchg
push
xor
push
ret
imul
or
aas
dec
mov
inc
sbb
or
arpl
pop
push
jp
insb
in
imul
pushl
cmp
arpl
pusha
ja,pn
std
cltd
popf
xor
ja
cmp
call
jp
sar
or
cltd
imul
cli
js
xor
push
loope
add
ror
push
outsb
push
mov
imul
and
outsl
or
out
or
out
or
cmp
mov
scas
stc
inc
rorb
jno
fsts
inc
andb
add
xchg
dec
shlb
jg
pop
mov
dec
xchg
fwait
or
mov
cwtl
ret
cmc
xchg
jge
cmp
add
cmp
das
mov
sbb
cmp
xor
push
daa
xor
dec
xchg
jle
jns
mov
aas
pop
pop
jnp
ljmp
movaps
xor
or
mulb
ss
cmpb
or
ljmp
mov
mov
aam
call
out
ljmp
lcall
or
stc
cmpsb
test
out
call
test
into
push
dec
fnsave
insb
sbb
out
decl
stc
popf
out
decb
xchg
sub
scas
xchg
data16
stos
dec
icebp
cmpsl
and
scas
js
xchg
sbb
cmp
jecxz
bound
sti
xor
add
dec
lds
dec
sbb
roll
mov
call
call
jg
push
mov
outsl
jae
mov
mov
mov
inc
das
call
int3
mov
std
mov
xchg
pop
cmp
dec
fdivs
cmp
popa
cmp
call
xchg
dec
bound
popa
adc
aad
dec
lods
jnp
mov
stos
dec
lea
xchg
sub
inc
push
loopne
das
rclb
jle
data16
pop
sbb
je
ljmp
add
dec
pop
insl
xor
jle
dec
lea
mov
lcall
call
lret
xorl
push
xor
xchg
inc
adc
clc
or
mov
bound
sub
popf
adc
lcall
sahf
dec
xchg
lcall
iret
insb
xchg
inc
jg
test
pop
cld
sub
mov
fwait
mov
mov
cmp
xchg
mov
xchg
fisttps
push
mov
in
int
repnz
mov
adc
iret
xchg
fidivrs
testl
dec
test
lret
jae
pop
or
mov
subb
push
push
xchg
in
xchg
jmp
jbe
aas
sub
sub
hlt
stos
pop
push
mov
mov
sub
lcall
insl
dec
gs
jne
sti
push
je
xchg
ljmp
decl
add
mov
xlat
loope
ds
xchg
mov
push
push
adc
and
mov
mov
cmp
mov
sbb
pop
jne
inc
xor
mov
sub
aad
bound
stos
divb
insl
push
push
call
scas
jp
popf
add
ret
or
rcr
fwait
int3
icebp
cmp
ret
lahf
loopne
cmp
xor
cmp
jno
lds
mov
push
mov
xchg
fistpll
mov
push
mov
xchg
test
popf
xchg
and
cmp
push
js
data16
insb
clc
push
dec
and
fs
ret
jle
mov
jge
loopne
mov
jmp
jmp
fucomp
jp
std
mov
mov
out
jle
pop
bound
ja
arpl
dec
dec
and
jb
xor
jmp
ss
movsb
jg
fsubl
jbe
jb
push
scas
xor
sub
adc
popl
lahf
mov
in
inc
inc
fisttps
mov
lock
aas
movsl
in
xchg
stc
es
xlat
enter
pushl
std
out
cmp
fstl
mov
push
lods
hlt
or
lods
adc
decl
scas
imul
mov
and
loop
imul
test
flds
les
pusha
loop
sub
jl
aas
mov
pop
imul
lcall
fistpll
pop
testl
adc
xchg
es
or
xor
cmp
outsl
je
mov
sub
cmpsb
aam
sub
aam
xchg
inc
add
jae
jnp
mov
test
les
popa
push
dec
incl
sub
xchg
mov
mov
addl
jnp
in
movhps
sub
hlt
testl
jae
idiv
pushl
jns
xor
xchg
add
je
xchg
js
pop
dec
fidivrs
push
sbb
push
lcall
loop
mov
loope
dec
jl
fldenv
jg
lcall
mov
cmp
sub
stc
fmuls
push
mov
jnp
mov
ljmp
dec
lds
dec
data16
jle
ja
sbb
pop
andb
and
loopne
mov
sub
and
pop
pmaxub
idiv
ret
decl
data16
push
mov
mov
js
xor
lods
mov
and
fneni(8087
call
test
jae
hlt
rcll
loope
ret
fdivr
mov
inc
xor
add
loopne
lds
int
stos
sub
lret
pop
out
inc
cld
fadd
jmp
cmpsl
jg
sahf
pop
incb
imul
mov
cmp
inc
xchg
mov
jbe
in
xor
ljmp
leave
mov
sbb
adc
cmpsl
pushl
data16
iret
mov
cld
and
repnz
mov
out
dec
and
adc
xchg
xchg
pop
std
and
jmp
mov
mov
shrb
mov
lcall
cli
adc
xchg
in
pop
inc
pop
add
or
pop
sti
cwtl
pusha
pop
add
insb
shlb
push
sub
call
popf
or
pop
add
fisttpl
sbb
das
cmpb
cld
rorl
aaa
std
ffreep
mov
sub
popa
push
mov
cmp
lock
test
std
and
ljmp
xor
or
mulb
cltd
mov
bound
xchg
shr
inc
test
insb
cs
push
pop
cmp
jmp
sub
jnp
mov
cmpsb
lds
mov
fcoms
mov
aaa
mov
cwtl
fildll
push
mov
sti
fldcw
and
setae
les
jl
daa
rorb
fucomp
decl
bound
mov
mov
sbb
aam
aas
testl
mov
jecxz
mov
and
mov
mov
lret
test
mov
in
outsl
mov
pop
sti
sub
test
shll
dec
jp
push
ljmp
pushl
and
ljmp
iret
xchg
sbb
repz
mov
pop
int3
dec
shrl
lcall
je
lock
cwtl
mov
jl
and
push
jecxz
mov
inc
adc
divb
sahf
arpl
jno
movsb
int3
outsl
mov
mov
call
jnp
mov
jmp
push
fadd
pop
lahf
jno
xchg
es
add
aam
decl
pop
add
mov
xor
jmp
call
sti
adc
cmpb
lcall
and
hlt
pop
ss
xchg
jg
cltd
mov
mov
jp
in
and
jbe
sbb
jbe
scas
lods
dec
push
push
mov
and
sbb
inc
inc
dec
push
lods
call
incl
in
lret
fistpl
mov
ret
in
adc
and
xchg
fisubrl
mov
push
int3
cmp
cmp
inc
pushl
push
inc
fistpll
dec
movsb
test
aaa
rolb
scas
rcrb
orl
imul
sub
call
test
mov
das
shr
xor
pop
pop
fs
mov
add
xor
out
mov
scas
mov
ljmp
jecxz
mov
in
or
lret
pop
cmp
or
dec
or
or
push
push
cld
jg
xorb
or
or
xchg
fidivrs
out
pushl
push
aas
cld
and
mov
scas
aas
jle
lock
push
loop
sbb
jecxz
fists
clc
or
bound
mov
fsubrs
sub
fstl
push
xchg
cli
in
push
add
pop
mov
test
mov
call
inc
lea
push
aam
test
mov
cmc
push
aam
push
cmpsl
mov
popf
outsl
bound
adc
inc
dec
cmpl
inc
std
push
stos
push
stos
push
ljmp
aas
mov
lods
dec
les
xor
xchg
or
aaa
pop
daa
xor
cmp
decl
mov
fsubr
inc
mov
or
inc
jg
pushf
mov
orb
dec
adc
mov
idiv
pop
jmp
and
jmp
jno
and
leave
mov
pop
and
mov
inc
sbb
xor
repnz
data16
push
cmpsb
adc
movsb
es
adc
adc
stos
push
mov
inc
mov
icebp
stos
loope
in
dec
inc
and
test
fdivl
and
in
sub
add
dec
mov
les
and
push
xchg
inc
mov
idiv
adc
mov
adc
pop
xchg
xor
adc
ljmp
add
jno
and
mov
adc
mov
push
add
push
xor
sub
stos
sbb
pop
insl
aad
inc
cmpsb
pop
cwtl
scas
and
jge
pop
sbb
xchg
mov
xchg
or
aad
pop
lods
xlat
loop
fs
icebp
xor
dec
fistpl
movsl
jp
sbb
xlat
lds
mov
scas
das
and
jmp
mov
jg
call
dec
shll
sub
add
jne
repz
stc
rorl
cli
xorl
fidivs
sti
insb
adc
and
xor
push
jns
stos
or
test
lea
leave
mov
pushl
rolb
mov
mov
out
add
mov
and
mov
lods
jnp
aaa
sbb
add
rcr
mov
jne
xchg
mov
incl
pop
stos
cld
sbbl
push
cmp
fisubl
lcall
push
shl
lods
and
in
std
sbb
aad
push
push
fimuls
jmp
addr16
xchg
rcr
js
aad
mov
mov
jbe
sub
decl
sbb
xor
movsb
xor
mov
decl
fists
data16
fsubrl
adc
movsl
xchg
rcrl
mov
mov
push
jmp
sti
leave
in
push
xchg
cld
xlat
shlb
push
out
xor
add
ror
xchg
std
aaa
cli
rcll
std
repnz
jg
push
imul
xorb
clc
fwait
cmc
rolb
jbe
ljmp
cli
inc
sbb
daa
pop
ljmp
out
xor
mov
aas
incl
mov
add
shl
cltd
mov
cmp
push
loopne
call
cld
jle
pusha
int
adcb
push
pusha
pop
ja
ss
cwtl
ds
out
sarl
jmp
std
lock
fbld
sbb
jbe
cmp
cli
in
mov
in
test
outsl
pushl
pop
dec
sbbb
lock
adc
cmpsl
clc
clc
addr16
dec
sarl
decl
jle
outsl
push
decb
jns
push
jae
aas
stos
in
pop
mov
call
lcall
out
pop
push
sub
inc
cmp
lret
push
jg
push
jp
ljmp
sbbl
sub
and
je
daa
iret
loope
dec
pushl
lahf
xor
jle
mov
pop
fsubrl
cmp
hlt
push
jmp
pop
push
ds
inc
cvtdq2ps
cmp
lret
or
and
cmp
leave
mov
imul
xchg
pop
js
cmc
ljmp
rcll
std
movsl
adc
mov
dec
mov
fimuls
popf
cmp
and
cmp
movl
icebp
jnp
pop
daa
adc
jns
ffreep
sub
push
and
pushl
stos
sub
stc
push
je
movsb
decl
pop
test
jae
mov
imul
out
ja
adc
dec
xchg
cmp
decl
inc
push
movsl
mov
push
in
shr
loop
loop
push
cmp
lea
sub
cli
mov
fmul
inc
scas
dec
in
sub
cmp
mov
idivb
pop
mov
and
jg
inc
fsubl
xor
lds
and
ljmp
testl
std
jmp
call
adc
fcmovbe
fdivrs
push
aas
andb
jg
sbb
outsb
jge
push
dec
and
loope
mov
mov
mov
lds
out
mov
add
fadds
xchg
lods
repnz
jne
add
push
test
call
decl
popa
repnz
cli
aam
and
sub
leave
dec
out
cs
andl
sub
fs
popf
mov
jg
sbb
mov
cld
mov
push
ja
xor
imul
in
ljmp
js
call
hlt
in
out
push
fidivs
dec
inc
fdecstp
jne
pop
jl
iret
incl
test
cmpsl
mov
test
jns
push
pop
lahf
shll
fucom
call
loopne
test
addb
inc
mov
dec
jbe
ja
xchg
incl
push
outsb
jmp
dec
icebp
popa
xor
push
push
xchg
in
cld
notb
and
pushf
scas
and
mov
add
pop
negl
loope
mov
mov
call
and
pop
mov
sub
xor
icebp
mov
insl
les
xchg
sbb
lahf
js
mov
sbb
clc
xor
or
sub
outsb
pusha
test
in
mov
lock
popa
and
adc
add
mov
movsl
decl
hlt
pop
stos
dec
popa
push
sbbl
lret
fs
sbb
dec
test
cmp
dec
fsubs
fisttpll
push
test
pusha
imul
adc
in
cmp
mov
insl
stc
and
jb
mov
mov
and
cmp
lock
mov
push
lahf
cmp
test
add
push
insl
and
sbb
lret
incl
xchg
jnp
mov
xchg
into
fnstcw
in
aad
fs
pop
cs
cmpsb
ljmp
push
push
xchg
jae
dec
xor
out
cmp
push
stc
jg
mov
pop
adc
fs
mov
cmp
mov
mov
frstpm(287
dec
test
push
out
dec
icebp
lods
sub
mov
decl
into
push
cmpsl
repz
cmp
adc
pushf
or
jle
popa
es
xchg
sbb
mov
pop
jae
sbbl
push
xchg
push
in
cmp
jne
pop
or
push
cs
rep
push
adc
xor
push
mov
mov
xchg
outsb
add
xchg
pop
lea
mov
shll
xor
jno
jg
and
jle
inc
cs
call
decl
cmp
fwait
movsb
into
test
xchg
dec
cltd
cmpsl
scas
ret
std
jg
cmp
repnz
fmuls
testl
or
adc
mov
icebp
aas
int3
fstl
ljmp
push
jp
repz
mov
xor
mov
shl
lods
push
sar
lcall
mov
mov
scas
mov
xor
mov
sub
jg
or
push
push
jae
cmpsl
pop
scas
cmp
inc
das
dec
inc
popf
mov
idiv
sub
js
push
jmp
push
hlt
insl
mov
jg
jl
mov
inc
negl
jmp
mov
jp
mov
loop
insb
and
sbb
cwtl
mov
pop
inc
test
decl
push
lods
xor
xor
jno
pushf
jne
pushf
leave
shl
ds
repnz
scas
cli
cmp
pop
lahf
cmp
sbb
cltd
fidivl
mov
rorb
dec
push
incl
rcrb
imulb
aas
stc
enter
and
push
jge
jmp
pusha
test
dec
jecxz
mov
les
mov
sti
xchg
add
mov
fidivrl
hlt
push
jmp
push
pop
pop
inc
dec
pop
loope
push
test
cltd
out
inc
test
jae
pushl
cld
mov
mov
das
xchg
inc
mov
inc
mov
fcomip
call
pop
movsb
push
cmp
xor
sbb
inc
xchg
jl
sahf
aaa
aam
cs
call
dec
jl
push
push
jne
rorl
cmp
push
dec
sub
sub
jae
xor
call
adc
sbb
lret
mov
jmp
pop
adc
lcall
je
andb
dec
gs
test
push
push
lods
pop
push
decl
sbb
mov
xor
clc
call
cmpsb
mov
cmpsl
fldcw
sub
dec
cmp
mov
sti
mov
mov
ds
inc
hlt
sti
jnp
mov
xor
jl
xchg
int3
xor
cmp
dec
sbb
int
jae,pt
mov
cld
xor
sub
push
adc
call
cld
push
jb
mov
inc
or
push
dec
adc
dec
adc
idivl
adc
das
lcall
push
cli
xor
gs
push
les
imul
jbe
js
or
inc
js
sti
jge
filds
ret
cmp
icebp
lret
movb
jns
hlt
dec
push
xrelease
or
mov
cs
cli
cmp
bound
xor
xchg
jecxz
jl
sbb
adc
mov
mov
sbb
or
or
lcall
mov
out
sahf
test
incl
roll
push
fidivrl
idivb
jmp
cmp
add
dec
or
push
push
es
les
cmp
dec
int3
mov
add
cltd
mov
jae
roll
incl
mov
cmp
pop
ficoms
sub
mov
push
cmpsl
pushf
ret
inc
mov
test
mov
in
mov
push
fwait
jns
lahf
imull
mov
mov
mov
imul
repz
inc
repz
decl
xchg
out
pushf
dec
aad
lods
add
cld
mov
sub
xchg
divl
in
int
mov
icebp
sti
lods
js
decl
pop
lcall
aas
jmp
rcl
in
push
cs
mov
das
or
js
out
push
jmp
mov
decl
dec
mov
stos
in
arpl
ret
adc
push
std
int
aas
outsb
scas
iret
sti
in
aad
pop
in
dec
and
jmp
or
fcompl
dec
in
in
sarl
add
dec
and
cmc
in
xchg
sbb
cmp
push
in
jg
cld
push
ret
xchg
xchg
push
fistpl
aaa
addr16
nop
mov
divl
out
in
cmc
test
or
sbb
movswl
push
sahf
mov
sbb
push
js
fcmovnbe
or
sub
cmpsb
imul
cwtl
push
mov
cmp
jae
call
jl
lret
loope
cmc
push
repnz
mov
fmull
aam
cmpsl
dec
imul
pop
sbb
or
pop
cli
test
jg
mov
lock
ljmp
push
sub
push
stos
mov
sub
push
cmpsb
and
fstpl
out
mov
push
orb
push
in
cmp
repz
adc
inc
repz
adc
mov
out
sahf
popf
mov
inc
pushf
jmp
jnp
iret
sub
or
cmp
dec
xchg
dec
js
icebp
sub
jecxz
push
dec
sar
mov
andl
loop
repz
ljmp
cwtl
jge
mul
cmp
xchg
das
and
ja
sti
dec
or
sub
sbb
or
lods
jmp
and
or
jg
lods
stos
loop
push
and
or
fiadds
pop
rcrb
fsubs
movsl
dec
mov
push
inc
dec
and
cli
lods
shl
lahf
adc
ja
incl
dec
in
or
mov
push
xor
sub
test
and
ret
stos
adc
hlt
out
clc
inc
mov
jns
mov
pop
pop
xor
xor
out
dec
outsb
pushl
xchg
decl
xchg
rcll
sub
fdivr
mov
push
mov
mov
cmp
aad
decl
push
add
sbb
rclb
dec
mov
ret
push
xor
lret
push
pushl
add
or
push
add
xorb
mov
or
xchg
jmp
pop
inc
sub
push
mov
imul
xchg
inc
jnp
setbe
stc
add
movsb
call
repz
sub
sti
inc
jl
nop
sub
inc
lock
cmpsb
xor
lret
in
bound
dec
fsub
icebp
jbe
xchg
rorb
gs
imul
out
js
testl
cmp
jge
scas
mov
and
and
add
fidivrl
mov
push
int
mov
in
xchg
jmp
xorl
push
pushf
jl
lods
int3
dec
dec
push
nop
mov
je
call
xor
inc
rclb
std
jo
pushf
cltd
test
lret
xlat
negb
stos
xchg
rolb
incl
xchg
adc
push
sbb
inc
fidivl
insl
sar
decl
xor
outsl
sar
das
iret
xchg
xor
jge
lods
pop
fisubl
and
je
movb
jmp
int3
cmp
stc
je
xor
add
stos
xor
mov
lock
fisttps
push
jnp
leave
xchg
test
into
and
lock
js
sbb
in
sbb
enter
xchg
or
xchg
mov
mov
call
xlat
inc
sbb
xchg
mov
dec
insl
ret
test
jno
push
leave
xlat
imul
lcall
cs
cmc
aad
sub
and
iret
push
adc
ljmp
ljmp
mov
cmp
imul
test
mov
inc
push
jne
popf
out
outsl
push
cmp
pop
jne
lcall
sub
sahf
clc
jno
and
nop
into
add
xchg
mov
xchg
add
fists
mov
xchg
jbe
pop
push
or
inc
sub
scas
push
cwtl
mov
test
mov
pop
fisubrs
fists
dec
xchg
pop
and
es
adc
pop
adc
jmp
dec
daa
jle
nop
push
int3
clc
call
filds
mov
cmp
incl
push
push
push
xchg
push
subb
imul
adc
rep
call
arpl
add
pop
pop
in
call
or
lret
cwtl
cmp
jns
xor
sbb
insb
loope
xor
loop
repz
jae
dec
jmp
xchg
shlb
cltd
in
mov
shlb
cmpsb
dec
inc
in
mov
xor
jno
in
jmp
mov
cmp
cmp
or
sti
aad
cs
out
decl
jne
xchg
test
or
mov
sub
mov
cmpsl
dec
out
movsl
xor
ljmp
push
mov
mov
xchg
pusha
iret
xchg
jae
shrl
push
lods
fld1
xor
sub
xlat
mov
lock
icebp
rorl
pushl
add
mov
fs
in
enter
inc
test
leave
dec
xchg
sbb
ljmp
ljmp
push
mov
icebp
dec
mov
cmp
movsl
cmp
mov
mov
dec
mov
pop
pushl
test
nop
sub
xchg
test
mov
scas
dec
cmp
pop
pop
push
lcall
gs
push
push
lods
cs
in
push
pop
push
cwtl
jmp
pop
sbb
cmpsb
sbb
xchg
lcall
lahf
add
jno
stos
insl
mov
jl
gs
in
stos
or
sbb
lcall
call
mov
movl
testl
call
mov
pusha
ss
lret
scas
or
dec
sub
xchg
test
scas
jg
pop
pop
push
scas
xor
jmp
das
into
adc
xor
push
in
mov
xchg
or
call
fimull
mov
stos
rol
or
sbb
mov
ja
jecxz
jl
test
xor
loopne
mov
xlat
incl
pop
loopne
outsl
jno
call
mov
nopl
rcrl
jle
enter
add
sub
or
ljmp
dec
js
add
addr16
std
cmp
dec
and
lea
stos
nop
les
xor
jg
movsb
loope
unpcklps
or
mov
jge
mov
lcall
sub
insb
in
sbb
sub
loope
shl
mov
sub
das
xor
ljmp
lahf
jmp
shlb
das
adc
pushl
xchg
iret
sti
out
ljmp
insb
pop
test
fcomip
incl
in
clc
adc
and
popf
shlb
push
cli
cmc
mov
iret
adc
jg
sbb
pop
enter
push
xchg
incl
fbstp
push
inc
loopne
xchg
shll
in
push
mov
fidivl
or
pop
std
pop
inc
cmpsl
push
es
sbb
aad
or
cmpsl
inc
add
or
mov
jb
cmp
dec
sbb
jns
xchg
je
adc
leave
andl
pop
leave
sbb
and
test
out
dec
mov
loopne
int
xchg
sbb
dec
pop
xchg
call
loop
cli
ds
jecxz
cli
cmpl
mov
sub
sub
mov
ljmp
mov
stc
aas
xchg
sub
and
out
imul
pop
xor
sbb
hlt
cltd
cs
ja
push
jnp
mull
adc
lcall
jp
cmpsl
loopne
int3
ror
sarb
and
push
xor
inc
sbb
push
test
je
jne
cs
mov
push
xor
push
stos
lahf
addr16
call
push
inc
imul
cmp
iret
xchg
out
lock
jecxz
dec
xchg
adc
clc
lcall
ss
jecxz
ja
xor
aaa
movsb
into
dec
jge
lea
pop
xchg
shll
decl
push
dec
lods
pop
in
jmp
fs
pop
adc
xor
cli
ljmp
mov
inc
and
out
into
jmp
xchg
or
mov
ljmp
ds
xor
mov
stos
push
int
cltd
mov
push
stos
dec
jne
fsubrs
lcall
pop
mov
sub
mov
lods
js
push
lahf
out
inc
clc
es
mov
iret
sar
jmp
fs
shr
lock
mov
in
sub
xchg
notl
out
nop
dec
sub
ret
sub
pop
adc
das
mov
decl
clc
or
ret
pop
inc
push
cwtl
out
xor
lcall
inc
stc
ljmp
add
outsl
pop
xor
imul
dec
shl
dec
fwait
push
pop
ja
sub
dec
xchg
outsl
cwtl
mov
push
imul
pop
loopne
sahf
or
mov
testb
jge
sbb
xor
xchg
incl
add
imul
fmuls
and
xchg
xorb
mov
inc
push
cmp
ret
push
jg
insb
xchg
xchg
push
xorl
mov
lods
inc
dec
jb
dec
inc
inc
addr16
lcall
sti
xor
xor
aam
fistpll
jnp
inc
hlt
or
leave
and
add
or
mov
jmp
inc
jge
aam
jb
test
sbb
out
cmc
inc
mov
push
fisttpll
insl
cld
lcall
add
push
shl
dec
out
adc
jg
mov
pop
lds
push
jo
mov
jl
loopne
cs
fidivrl
jne
repz
fnstcw
cmp
mov
cmpsl
lret
decl
imul
pop
es
arpl
jg
pushl
dec
mov
jle
dec
and
cmp
pop
pop
pop
pop
mov
cmp
incl
inc
mov
sti
idiv
shll
bound
cmp
and
inc
cld
call
repnz
pop
xchg
push
xorb
push
dec
daa
test
push
jle
rorl
lahf
mov
jmp
sbb
aaa
jge
sti
rolb
je
jo
cld
push
mov
and
fildll
negb
movsl
shll
jg
rclb
ja
adc
sub
push
mov
inc
cmc
pusha
lcall
loope
cmp
mov
or
lock
decl
repnz
fs
sub
mov
jno
arpl
cltd
clc
scas
addr16
nop
js
std
loop
xlat
fiaddl
and
pop
fmull
mov
fsubrl
call
lds
leave
ret
jp
lock
outsl
and
flds
or
pop
rol
dec
ss
mov
mov
decl
mov
mov
push
and
stos
push
enter
and
add
decb
ss
sub
push
ljmp
mov
sahf
movsl
sub
pop
lods
inc
mov
ret
push
sbb
xchg
xchg
aas
mov
mov
jl
int3
ret
sub
push
call
ljmp
xor
f2xm1
sbb
leave
orb
jmp
loop
in
fists
lods
test
ffreep
xor
imul
xor
or
pop
inc
sbb
and
lcall
aam
jg
mov
push
xlat
mov
sbb
lahf
mov
outsl
into
xchg
lcall
mov
hlt
loope
cmp
sti
add
mov
dec
push
shrb
fbld
lods
or
pop
mov
mov
and
sbb
loopne
lahf
andb
aam
daa
cmp
mov
mov
inc
idiv
pop
hlt
ljmp
and
pop
pop
inc
aas
sbb
inc
xchg
push
cmp
hlt
incl
dec
mov
sub
mov
inc
cmp
and
out
aam
push
cwtl
jl
mov
loopne,pn
sar
mov
mov
fadd
sub
mov
or
js
rolb
sbb
insl
jns
mov
shl
pop
add
lods
cli
lcall
lcall
outsb
lods
cltd
lds
pop
inc
mov
imulb
das
rcrb
nop
ds
mov
mov
dec
jo
adc
jl
cmp
dec
jp
inc
dec
dec
adc
and
or
lcall
movsb
and
or
xor
cli
lods
outsb
in
jg
sar
cs
divl
ja
idiv
sti
ret
cmc
xchg
sbb
mulb
cmp
mov
sub
std
jecxz
sbb
sti
fldt
sbb
rcr
incb
push
xchg
scas
jo
cmc
mov
outsl
sti
ja
cmp
in
jmp
je
shl
xlat
add
dec
push
outsb
sti
insl
xchg
sbb
insb
xor
insl
jg
cmpsb
inc
push
mov
mov
mov
jne
insl
aas
mov
ljmp
jmp
nop
jbe
jmp
adc
into
adc
add
ret
push
xor
mov
fnstcw
sub
sbb
push
movsl
shlb
aam
mov
sub
call
dec
mov
cmp
dec
sbb
nop
add
cwtl
xchg
and
mov
push
dec
inc
push
inc
incl
push
or
pop
shll
test
pop
ret
sub
lock
scas
sti
mov
pusha
pop
push
std
fidivs
idivl
fisttps
inc
mov
idiv
leave
ja
testl
xchg
pushl
adc
outsb
loopne
lret
ja
fcomi
sbb
roll
rcll
fbld
and
call
dec
lret
jecxz
pop
mov
adc
pushf
mov
ficoms
add
jg
xchg
cmp
je
test
mov
add
jge
shrb
pop
push
jecxz
mov
mov
inc
push
adc
cmp
xor
and
loope
or
sahf
inc
xchg
adcb
cwtl
add
decl
mov
and
sahf
shrl
mov
xor
aam
and
cli
and
jg
repz
push
loopne
shl
imul
pushf
mull
jg
pop
adc
inc
jbe
decl
aam
mov
outsb
and
adcl
push
cmp
mov
fdivr
imul
mov
inc
outsl
filds
push
out
sahf
add
ror
test
rcll
decl
and
add
adc
mov
mov
sbb
pop
add
sbb
ds
shrl
pop
xchg
inc
in
ljmp
lret
vmread
add
inc
add
cmp
ret
pop
addr16
xchg
icebp
decl
sub
sub
mov
inc
sbb
dec
lcall
movsl
jle
lret
jno
pop
fiadds
call
in
icebp
cmp
je
mov
dec
int
out
int
lcall
pushl
push
xchg
jns
or
mov
xor
xchg
mov
movsl
call
fwait
and
decl
adcb
dec
cmpb
cld
jge
and
stos
stos
int
fcmovnb
pusha
xchg
xchg
push
inc
aam
sti
std
xor
cwtl
xor
incl
fcmovu
cmpsl
sbb
xchg
mov
pop
dec
jbe
test
idivl
stos
inc
ja
jmp
jmp
ffreep
jle
pop
call
sbb
lcall
stos
sbb
cmp
mov
movsl
jb
pop
sbb
dec
nop
adc
sbb
mov
jecxz
leave
inc
call
ds
pop
stos
sub
sti
scas
aad
pop
jmp
cmpsb
je
nop
je
testb
jne
cwtl
sbb
cmp
mov
bound
jno
xchg
lods
mov
cmp
mov
jecxz
push
idiv
lcall
dec
mov
sbb
mov
sub
es
cmc
shll
stos
jmp
repnz
je,pt
add
pusha
lret
das
sbb
push
add
lds
es
add
das
pop
stc
sub
lock
fwait
mov
lds
push
pop
mov
and
adc
fcoms
fwait
idivb
stos
imul
jbe
xchg
arpl
inc
out
lods
das
jmp
or
je
adc
orb
sub
xchg
es
mov
xlat
movsl
mov
inc
dec
jne
xchg
leave
jmp
movsl
push
stos
mov
push
incl
cmp
data16
and
xchg
dec
adc
dec
cmc
iret
mov
ljmp
xor
xchg
pop
adc
dec
sub
cli
mov
aaa
loope
outsl
xor
sbb
mov
xchg
shl
jg
xchg
xor
leave
pop
mov
push
cmpsb
sbb
sub
loopne
lock
ss
out
ret
add
pushl
dec
mov
pusha
ficompl
mov
ret
imul
xchg
movsl
sub
xor
lock
cmpsb
dec
std
dec
push
cmp
add
jmp
jmp
inc
sub
stos
add
sub
notl
in
jmp
fldl
push
xor
mov
mov
or
xor
aad
aad
icebp
in
ss
les
or
in
dec
test
popa
push
cmp
nop
dec
cmp
inc
in
or
sub
mov
jmp
jmp
adc
mov
rol
ja
inc
xchg
pop
clc
add
fisubl
dec
cmp
push
and
hlt
rcll
push
icebp
icebp
adc
aam
xchg
xor
adc
mov
or
call
shlb
xchg
push
cs
push
aaa
cld
jmp
test
arpl
mov
fwait
xor
std
push
fwait
dec
test
inc
ja
cmp
lcall
ss
pop
cli
shlb
jmp
cmpsl
mov
mov
push
xor
or
cli
and
sub
cmp
repnz
sub
cmp
call
in
leave
add
dec
xchg
out
clc
jb
dec
mov
cmpsb
shlb
or
ljmp
push
sub
add
add
dec
daa
xor
int3
stos
nop
int
jae
jge
ljmp
xchg
jae
push
enter
sub
les
adc
lcall
daa
adc
test
xor
jno
jns
rclb
rolb
insb
sahf
adc
push
mov
mov
push
and
push
xor
mov
sbb
in
add
sub
pushl
xlat
cs
adc
invd
div
leave
mov
add
jg
sub
sub
and
mov
leave
add
lock
ljmp
pop
or
jge
and
and
out
jbe
nop
clc
pop
add
cmc
mov
shl
mov
mov
test
cwtl
jns
push
mov
pop
fistpll
sub
iret
clc
lcall
leave
jbe
and
addr16
loop
adc
scas
push
fwait
sub
mov
incl
imul
and
and
out
filds
scas
clc
decl
fs
outsl
lret
in
in
out
ret
add
js
sbb
mov
jmp
jo
or
cmp
lock
xchg
in
nop
lcall
enter
and
daa
add
repz
push
cmpsb
inc
movsl
cpuid
cmp
fbld
jge
mov
pop
xchg
jg
out
mov
mov
pop
mov
sbb
bound
scas
cli
dec
jmp
jmp
mov
mov
sub
and
adc
incl
jecxz
inc
std
push
out
sub
fsub
mov
mov
ud0
pushl
hlt
cmpsl
test
mov
or
faddl
repnz
icebp
inc
pop
fsts
aam
in
mov
incl
insl
adc
mov
mov
mov
push
mov
push
fs
dec
mov
sub
push
roll
sub
cwtl
insl
and
inc
sbb
fdivp
incl
fmull
push
inc
cmc
nop
int3
mov
inc
mov
add
jg
pop
push
mov
ret
add
scas
repz
icebp
dec
pop
lcall
jmp
mov
xor
xchg
loope
cmp
fwait
imul
xchg
fistpl
add
dec
loopne
stos
mov
xor
mov
mov
lcall
cmp
adcb
stos
fiadds
std
sahf
push
pushf
or
jg
repnz
inc
sbb
mov
inc
ret
mov
shlb
adc
popf
xor
lcall
push
jle
push
fcmovu
rorl
pop
nop
call
or
nop
sahf
pop
mov
mov
cmp
ficomps
dec
dec
pushf
jnp
int
jp
mov
add
sbb
cmpsb
decl
push
jp
jmp
aad
lret
adc
in
inc
into
insl
adc
incl
test
mov
push
xchg
call
pop
mov
jne
adc
mov
ss
mov
loop
hlt
loope
psubsb
sbb
mov
sahf
popa
mov
out
mov
pusha
adcb
cmp
ljmp
fwait
jmp
sub
jl
mov
repz
test
xchg
mov
xchg
lret
dec
addb
sbb
mov
dec
cmpsb
loopne
push
adc
push
inc
xlat
push
push
adc
push
shlb
lret
in
lret
sar
pushl
es
test
mov
pop
jns
int3
adc
fdivl
enter
xchg
pushf
imul
outsl
ss
loop
ret
mov
fisubs
clc
sub
push
int3
cs
xor
push
adc
sub
mov
inc
stc
mov
popa
and
out
imul
adc
icebp
jg
loope
or
in
imul
jle
call
sub
incl
lods
cld
adc
cltd
ja
fists
xor
aaa
in
push
and
mov
mov
cmp
aas
mulb
jbe
push
fnstsw
rcrl
cmp
mov
jg
ljmp
mov
ljmp
add
outsl
mov
push
cmp
int3
sub
push
sbb
jg
fsubl
lret
jne
ljmp
and
cli
les
fnsave
cmpb
pop
mov
scas
xchg
das
in
inc
testl
int
ja
inc
cld
lcall
sti
cwtl
mov
filds
sbb
xchg
push
jno
movsl
mov
in
aad
imul
push
jno
mov
fildl
xor
and
mov
fwait
js
xchg
lcall
out
lret
ror
xor
cwtl
cltd
in
jmp
or
cmp
rcl
cltd
cmpsb
dec
gs
xchg
pushl
push
jbe
inc
mov
mov
gs
pop
mov
mov
daa
fdiv
jb
xchg
jl
test
ljmp
sbb
mov
je
lcall
fimull
sbb
xchg
pop
aam
mov
push
and
and
in
pusha
mov
or
imul
imul
push
mov
or
cld
cmp
or
and
ret
out
add
cmp
out
and
hlt
ss
push
mov
call
inc
push
imul
pop
mov
into
lock
sub
add
icebp
sbb
cmp
mov
into
dec
cmp
in
jg
mov
or
push
jge
rclb
cmc
and
cmc
lds
pop
call
push
pop
test
loope,pn
xchg
sbb
mov
inc
out
push
lret
mov
cmpsb
xor
xor
ds
cmpsl
push
inc
mov
daa
movsl
pushf
mov
add
push
mov
popa
ret
push
push
nop
clc
call
mov
ret
mov
dec
scas
inc
and
rcll
dec
pop
imul
mov
dec
sbb
fadd
out
cld
fcomip
cmp
daa
std
cmp
lret
and
insb
jecxz
not
les
iret
call
push
ret
pop
mov
xor
test
call
dec
add
inc
and
inc
out
es
jno
mov
adc
clc
cmp
fstps
jmp
mov
dec
add
mov
addb
lret
jns
cltd
gs
push
stos
cld
scas
clc
ljmp
dec
int3
push
fisubl
or
call
push
aad
lcall
testl
mov
jae
addr16
lcall
mov
add
nop
in
push
dec
or
pusha
jmp
es
cmp
jmp
in
sub
lods
jl
out
arpl
pop
bound
sbbb
loopne
sbb
mov
into
je
jge
add
jmp
sti
xor
int3
repnz
push
cmpsb
lahf
es
jmp
sub
rcll
inc
dec
jb
test
xor
cwtl
in
in
lcall
sub
sbb
mov
pop
xchg
push
xchg
es
jbe
push
gs
stos
cmp
inc
mov
adc
lods
jbe
lods
lahf
inc
rorb
pop
sar
call
add
fbstp
mov
adc
fldt
adcb
call
je
xor
fnstenv
sub
pop
insb
in
mov
imul
sub
mov
sub
and
jp
jl
pop
clc
jmp
xor
fs
cmp
xor
sahf
and
stos
ret
xchg
idiv
incl
sub
mov
sbbl
add
mov
icebp
das
cli
call
adc
mov
jns
jmp
and
and
sti
and
pop
or
adc
cli
xchg
fnstcw
pop
mov
pop
pop
rorb
test
xlat
fs
pop
addb
pop
pop
lret
dec
ret
ficoms
mov
in
fistpll
sbb
push
sahf
sti
icebp
aam
stc
cmp
loope
add
pop
sbb
orl
call
mov
and
gs
fldl
xchg
stc
cmp
cmp
push
out
leave
jae
test
js
incl
fsubrs
js
inc
call
push
dec
sbb
js
testb
push
jns
cwtl
decl
out
movsb
mov
cmp
icebp
cltd
sbb
and
and
cli
cmp
mov
jl
loopne
dec
push
lahf
jecxz
sub
jno
stc
out
scas
insl
jl
aaa
mov
mov
inc
aas
mov
fdivr
jmp
jae
pop
push
in
inc
add
std
pop
sbb
mov
dec
mov
nop
dec
insl
inc
dec
dec
dec
insb
mov
jge
pop
lcall
icebp
cmp
out
psrld
jecxz
in
push
xor
jne
lea
mov
repz
fcompl
addl
xlat
shrb
jp
xor
add
ljmp
scas
xchg
loope
cs
mov
dec
lahf
mov
mov
sub
mov
out
or
aaa
cld
call
xchg
cmp
leave
sub
repz
divl
add
mov
dec
push
mov
add
and
push
loope
shl
inc
test
jg
aad
inc
push
cmpsl
mov
enter
lahf
xor
cld
xchg
je
clc
mov
xor
or
in
js
jge
adc
fbstp
pop
ficompl
add
xor
cs
rorl
lret
pop
in
pushf
jmp
aaa
in
icebp
jb
imul
jg
xchg
adc
and
lcall
jne
xchg
mov
and
sahf
int
and
xchg
push
setns
daa
loopne
cmp
jecxz
mov
inc
fwait
jnp
pop
lock
in
lahf
push
out
jae
shl
movsb
dec
inc
call
adc
and
nop
jmp
add
popf
mov
adc
pusha
out
ljmp
mov
std
sbb
sbb
mov
push
pop
dec
mov
roll
pop
push
call
inc
mov
shll
jecxz
cmpsb
jns
loopne
es
roll
call
incl
mov
sti
cmp
add
adc
mov
jae
bound
filds
cmp
call
adc
pusha
jns
inc
jl
sbb
mov
mov
mov
inc
jne
xor
jae
inc
jge
test
dec
aad
jg
jno
call
push
iret
mov
and
rclb
xchg
cmp
xchg
ficoms
dec
push
out
std
and
mov
in
cmpsl
jge
xchg
sbb
int3
push
jmp
dec
mov
sbb
ror
rcrb
mov
add
testb
aam
mov
inc
dec
scas
xchg
movsb
ror
repnz
mov
out
sbb
ljmp
imul
mov
leave
add
das
lcall
incl
vpunpcklbw
scas
flds
cwtl
dec
pusha
push
xchg
fstp
mov
addr16
jmp
les
scas
mov
xchg
jecxz
out
mov
cltd
cmp
fdivs
push
lcall
insl
xor
fisubs
jns
in
pop
test
add
mov
sbb
lcall
test
jb
xchg
pop
cmc
adc
cld
out
inc
in
sbb
sub
lret
decl
cmp
mov
xchg
push
in
popa
jbe
repnz
or
jg
das
cli
cmp
out
call
call
xchg
jge
movsb
mov
push
mov
loop
lcall
lahf
sub
test
in
pushf
fdivrp
mov
ljmp
arpl
dec
dec
jnp
and
repnz
push
insb
fcmovu
inc
fs
sub
mov
pop
insb
sub
jmp
iret
iret
rol
jbe
inc
mov
jmp
popa
incl
frstor
fstp
xor
sbb
clc
outsb
out
lret
pop
mov
lcall
popl
cmp
movntq
out
mov
cwtl
and
xor
outsb
in
push
push
shl
out
jmp
stos
fcompl
cmc
into
dec
mov
xorl
setbe
insb
addr16
repnz
outsl
decl
mov
mov
xor
in
div
movsl
ret
adc
cs
add
jnp
scas
add
xchg
dec
cmc
pushf
xor
sarl
call
roll
shll
sub
mov
ud1
out
dec
lea
in
mov
mov
lock
divb
mov
mov
jg
adc
mov
repnz
fimull
lea
jae
mov
mov
jo
push
and
pushl
and
mov
sbb
cmpsl
movsb
sbb
arpl
into
shrb
adc
jno
sub
cmp
test
cmpsl
inc
cmpsb
roll
dec
cmpsb
dec
movsb
xor
cltd
loope
fnstenv
into
and
in
and
push
loop
xchg
mov
mov
mov
pusha
insl
ds
dec
sub
pop
jb
push
or
or
cs
inc
ret
idiv
incl
xchg
jo
clc
arpl
sarb
adc
xor
or
pusha
or
jg
inc
mov
cmp
pop
jmp
add
fwait
jo
rcrl
pushl
rorb
cmp
pop
mov
out
dec
sub
cld
adc
inc
inc
sub
lcall
jae
jns
pop
aaa
push
leave
mov
and
mov
data16
mov
cs
dec
adc
lcall
ljmp
add
int3
lahf
inc
jb
xchg
xlat
mov
jb
cmpsb
int
test
mov
sti
push
mov
sub
rclb
shll
xlat
pop
pop
aad
dec
jmp
sbb
in
hlt
jns
out
xchg
iret
scas
inc
cmp
mov
repz
jae
fidivs
xchg
xchg
and
sbb
or
mov
adc
and
dec
shl
aaa
mov
or
jmp
and
xor
sbb
js
call
arpl
negl
sarb
lods
push
cmp
xchg
insb
ret
std
aaa
fnstsw
inc
or
mov
push
ss
push
cmpb
inc
mov
jns
idiv
dec
mov
in
ss
xor
dec
mov
jo
cmp
pushl
push
outsb
test
arpl
cmpsb
stc
stc
data16
mov
push
jns
xchg
int
decl
in
sub
cmp
jo
xchg
addr16
sar
pop
jnp
pop
icebp
pushl
cltd
adc
push
cli
sbb
ss
movsl
mov
mov
aam
mov
pusha
cld
stc
and
roll
dec
in
iret
aam
jmp
ljmp
js
bound
int
lods
dec
lods
aaa
lea
inc
or
pop
cld
pop
hlt
adc
ss
sbb
fbstp
mov
popf
fs
cld
dec
cmp
repz
push
sub
outsl
xor
dec
pop
xor
out
pop
arpl
jg
mov
repz
cwtl
in
and
add
lret
mov
jnp
lret
loop
push
and
pushf
nopl
aam
inc
mov
out
test
andb
dec
ljmp
jb
daa
inc
les
imul
mov
and
xchg
test
inc
mov
call
ficoms
subl
std
scas
xor
cltd
stc
pop
xchg
or
mov
imul
std
ss
xor
xlat
outsb
fdivr
in
incl
sub
inc
pop
sub
inc
push
aas
cli
cld
aad
jb
movsb
jo
data16
sbb
inc
inc
movsl
idivl
lcall
repz
sahf
fucomp
xor
mov
dec
rorl
outsl
clc
xchg
pop
mov
cs
cmp
nop
fsts
xchg
xchg
jmp
xor
sub
mov
arpl
scas
jno
fldenv
mov
jmp
mov
add
dec
add
cmp
ljmp
pushl
lcall
mov
push
sti
aam
mov
and
pusha
dec
test
sub
ja
ret
push
addr16
ffreep
dec
add
or
out
mov
push
adc
decl
jle
sub
and
cwtl
push
movsl
shlb
jge
fiaddl
sub
mov
in
push
insl
fs
fimull
test
outsl
cmp
dec
jge
pop
mov
sti
sahf
lds
mov
sub
stos
fbstp
push
call
add
pop
sub
in
lcall
sbb
push
pop
mov
jmp
or
loope
decl
clc
mov
gs
cli
mov
in
rolb
mov
adc
es
jnp
dec
insl
je
xor
out
imul
testl
fisttps
aam
hlt
sub
sub
into
scas
psraw
aaa
push
shr
in
cmpsb
inc
movsb
lret
cwtl
dec
icebp
push
jle
das
clc
mov
or
jl
pop
sahf
rcl
mov
xchg
ja
sub
pushl
push
xchg
inc
cmc
lods
sub
inc
push
popa
add
ljmp
jbe
pop
xchg
ret
push
in
lcall
fsubl
mov
lods
jle
and
mov
jg
sub
repz
sahf
inc
lret
cmpsl
mov
mov
xchg
xchg
dec
subb
int3
repz
out
push
jmp
jno
in
stc
fnstsw
fbld
arpl
xchg
pop
into
pop
mov
imul
xor
decl
ljmp
xor
or
movsb
push
mov
call
dec
sbb
enter
bound
movsb
inc
xchg
in
incl
jle
out
pop
shll
jmp
pop
aas
aam
mov
sbb
out
jnp
jg
jbe
enter
repnz
sbb
mov
fildl
test
inc
stos
mov
jnp
fcomp
lcall
out
cld
sbb
mov
idiv
dec
adc
movsb
out
scas
adc
jne
iret
inc
xor
jg
call
sbb
cmc
mov
fiadds
pop
jbe
inc
in
jo
mov
lcall
push
mov
sbbb
repz
wbinvd
lods
mov
jp
mov
cli
call
sub
into
sub
mov
push
jmp
leave
popf
js
aaa
add
lret
ljmp
xor
xchg
cmpl
daa
mov
out
push
fildll
lock
rcr
cmpsb
filds
mov
punpckhbw
adc
ljmp
jae
lods
xchg
xchg
mov
dec
inc
push
pop
flds
incl
jmp
jmp
out
and
xorl
iret
leave
sbb
fmull
repz
mov
decl
cmp
sbb
mov
jno
cmp
sbb
adc
dec
pop
test
fbstp
adcb
outsb
push
jno
hlt
add
dec
outsl
push
ror
decl
lock
gs
aaa
xor
pop
or
btr
cmp
jp
and
add
mov
test
xchg
test
xchg
lret
aad
dec
mov
push
pop
out
mov
jle
in
pop
mov
rclb
mov
jle
aad
cmp
jmp
lds
lcall
outsb
adc
mov
jns
pop
fimuls
clc
stos
mov
sbb
cmp
fnstenv
sub
lcall
lret
and
xchg
xor
sub
test
and
sub
jg
ljmp
outsb
sbb
push
xchg
test
mov
lret
repz
in
lahf
iret
jmp
ja
adc
cmpsl
inc
sarb
mov
in
xor
mov
jmp
mov
lcall
les
out
mov
das
push
aad
insl
mov
dec
scas
mov
enter
xchg
pop
es
ret
cmpsb
pusha
xor
jp
push
cmpsl
mov
pushl
cltd
stos
dec
xchg
xchg
test
outsl
mov
enter
pop
sub
fucomip
movsl
stos
xchg
daa
lods
push
sub
ljmp
sarl
cmp
mov
pop
inc
mov
scas
fucom
inc
mov
clc
decl
nop
gs
push
and
lahf
pushf
rol
inc
sbb
pop
idiv
decl
call
sub
push
pop
jp
push
mov
push
incl
ret
into
movsl
ljmp
bound
and
inc
push
xor
call
das
mov
rorb
mov
pop
shl
fnstcw
testb
jecxz
ljmp
pop
or
in
aas
xor
pop
data16
inc
mov
ja
fldt
call
mov
sub
sti
adc
add
cmp
mov
fsubs
cmp
jmp
sub
xchg
and
in
clc
mov
inc
cmp
ret
push
sbb
adc
imul
adc
test
mov
sub
nop
aaa
scas
jge
ja
push
arpl
ljmp
and
leave
lahf
mov
je
mov
cwtl
jbe
ds
fdivrp
jmp
or
data16
call
pavgw
filds
mov
mov
jne
aas
mov
mov
mov
pop
sbb
enter
pushl
sbb
adc
xor
rcrb
sbb
jmp
les
push
lret
out
mulb
fs
xchg
fcompl
lret
cld
pop
ficoml
sti
sbb
xor
movsl
fildl
mov
loop
adc
xchg
mov
les
mov
and
out
out
mov
push
cmp
sbb
add
es
dec
adc
pop
jae
cmp
pop
les
std
jns
pop
roll
imul
jns
fcmovu
cli
push
lock
decl
int3
ret
xchg
push
shlb
xor
pop
jg
sbb
pushl
sti
jbe
loop
pushf
imul
gs
or
pop
push
cmp
ror
inc
incl
lret
lret
add
pop
cs
mov
pop
and
lret
mov
jmp
cmp
lcall
mov
aaa
add
cmp
fildll
xor
add
mov
sbb
dec
mov
dec
adc
aad
inc
hlt
and
leave
xchg
mulb
jg
mov
mov
ss
dec
xchg
jmp
dec
jne
incl
xor
neg
icebp
outsl
cli
adc
sub
mov
test
sub
add
lret
repz
mov
rcrb
negl
jnp
mov
xchg
je
frstor
pushf
dec
decl
adc
cs
sbb
or
outsb
fisubrl
pop
add
sbb
ret
int3
jae
filds
cwtl
out
and
sbb
and
stos
movb
cli
adc
pop
fcoms
out
adc
sarl
jp
call
jg
cmp
clc
push
es
xchg
and
dec
dec
out
jno
sub
mov
js
sbb
adc
scas
clc
push
ret
fcmovne
push
pop
cltd
es
mov
pop
daa
testb
mov
and
cmpsb
ljmp
dec
call
adc
hlt
xchg
fsubl
ljmp
pop
mov
cltd
sbb
fadds
decl
fwait
adc
jle
add
push
int
rcrl
xchg
das
test
sub
loopne
ljmp
aas
dec
mov
sbb
xchg
pop
xchg
lcall
inc
dec
inc
cmpsb
adc
push
fdivrp
xchg
xlat
mov
movsb
punpcklwd
call
insb
ss
xor
in
jb
mov
cmp
inc
mov
movsl
xor
add
int
cmp
inc
lret
lock
push
rcr
xchg
and
pushl
imul
mov
mov
mov
cmp
sbb
stos
ficoms
pop
js
adc
ss
cmovne
jae
fs
in
test
lahf
sub
in
ss
lods
mov
lds
ljmp
mov
or
inc
pop
push
mov
mov
mov
add
ljmp
add
call
push
cmp
push
stc
push
sahf
es
or
out
push
lcall
xor
cli
push
and
push
xor
pushf
stos
movsl
les
std
pop
dec
rorb
push
ret
cmp
ret
lahf
add
cmpsb
xor
decl
xor
jo
cmp
inc
outsl
ret
int
incl
fistl
inc
ret
dec
clc
jns
aaa
add
arpl
inc
sub
push
cmpl
lock
data16
insb
stos
sarl
shlb
xlat
jmp
incl
repnz
icebp
data16
and
cmpb
cs
push
inc
and
ljmp
repnz
mov
xor
mov
add
aas
push
sub
jmp
imul
mov
sbb
lahf
mov
jns
mov
mul
and
mov
mov
push
dec
or
or
lcall
rcr
stos
jmp
jns
pop
es
inc
test
mov
frstor
loop
repz
lcall
pop
mov
jae
push
pop
ja
sbb
xor
mov
or
imul
imul
decl
fsubrl
mov
push
add
lcall
cmp
fistps
lods
cmp
jnp
mov
push
xor
ljmp
call
jnp
pop
popf
int
scas
out
xchg
faddl
rcr
xor
lret
xor
inc
mov
sub
rcl
incl
cld
mov
rol
jge
and
pop
cmp
insl
fidivs
les
xor
fcos
lcall
mov
repnz
sbb
mov
into
pop
mov
xor
ret
ljmp
pushl
pop
jg
lahf
sar
subl
testb
sub
bound
imul
out
iret
inc
addr16
imul
mov
xchg
push
and
pop
jecxz
xor
shll
jle
ljmp
push
jmp
mov
in
pop
dec
in
inc
and
lret
pop
mov
repz
xchg
aaa
fistl
mov
lret
outsl
popa
adc
sbb
or
jmp
arpl
stc
lock
or
mov
into
jne
lret
daa
hlt
fdivl
cmp
jp
inc
decl
mov
jae
sub
push
gs
mov
repnz
pop
enter
mov
aad
mov
or
sub
xchg
xchg
xor
std
jmp
jg
mov
out
sti
jns
sbb
pusha
out
mov
push
iret
ljmp
incl
pop
loop
ja
loop
lahf
sub
scas
push
mov
and
mov
mov
pushl
test
dec
pop
cmc
stos
lret
xor
repnz
test
xor
mov
mov
imul
div
stos
aaa
stc
or
adc
xor
icebp
lcall
ds
pop
mov
cs
push
mov
xor
xchg
setae
lcall
sbb
mov
rcll
cmp
pop
dec
add
jle
inc
std
fcomip
decl
and
rclb
pop
mov
push
bound
jmp
jg
push
pop
mov
inc
lods
dec
icebp
out
push
adc
xchg
das
cli
mov
loopne
repnz
xor
cmp
pop
sti
xor
outsb
adc
cwtl
pushl
add
jbe
or
mov
aad
dec
or
jmp
jl
ret
xchg
lods
aaa
xor
sti
jmp
test
subl
jo
insl
in
dec
mov
jg
xchg
sarb
popf
push
mov
rcll
sbb
mov
sbb
nop
popa
js
clc
mov
sub
rolb
and
fidivl
mov
incl
adc
andl
pop
insl
jne
adc
stos
incl
push
jge
sbb
jae
and
mov
mov
cmp
clc
aad
push
sub
mov
sbb
lcall
sub
fwait
xor
cmp
mov
sbbl
aaa
jae
fisubrl
imul
imul
mov
xchg
jno
ljmp
incl
dec
loopne
loop
jae
mov
sbb
mov
shlb
cmpsb
mov
pop
jg
and
jmp
lret
subb
jmp
add
push
iret
sahf
pop
test
test
jmp
push
popf
in
fmuls
out
fucomp
mov
mov
push
jno
pop
insl
lahf
test
pop
push
pop
mov
inc
push
mov
mov
mov
jbe
dec
inc
push
inc
jg
sahf
pop
scas
jg
pushl
push
sub
sub
jl
lea
push
mov
ljmp
jecxz
int
xor
pop
inc
bound
test
pop
sbb
mov
ds
mov
push
outsl
adc
test
insb
leave
dec
loop
es
pop
push
not
mov
stos
cmc
push
ljmp
pop
pusha
push
push
or
frstor
or
jmp
fs
dec
test
in
or
lcall
insb
dec
out
jbe
dec
fisubrs
mov
dec
sbb
std
popa
xor
cmp
fmull
inc
sbb
push
imulb
or
mov
decl
and
fsubs
cwtl
fcoms
inc
xchg
pop
mov
loop
bound
xor
sbb
sti
stos
repz
dec
sbb
ljmp
pop
lcall
or
xchg
push
push
fs
pop
mov
ja
jb
scas
cli
ret
xchg
repnz
movsl
addr16
jbe
mov
aaa
cld
incl
dec
jmp
add
lahf
stos
ljmp
ss
mov
ljmp
jns
mov
mov
mov
lahf
ljmp
mov
cli
hlt
leave
mov
push
lcall
mov
data16
ljmp
les
js
shrb
enter
mov
xchg
repz
mov
mov
ljmp
jo
sbb
repnz
or
loopne
xchg
sbb
xor
jg
push
mov
scas
popa
and
pushf
lods
jmp
es
aad
mov
enter
jmp
pushf
or
imul
cmc
jbe
call
outsb
add
xor
pushl
push
pop
push
decb
test
jne
fs
sbb
outsl
aam
es
sar
xlat
xchg
aas
mov
cs
mov
mov
cld
test
repz
icebp
add
cltd
fisubs
xchg
xlat
or
fcomip
lret
in
lds
xchg
cmp
mov
arpl
arpl
jmp
dec
xor
mov
cltd
ficompl
fsub
imul
cwtl
jno
and
call
push
dec
nop
mov
rcrb
mov
add
xlat
mov
out
lcall
jmp
orb
mov
adc
mov
inc
insb
mov
leave
sub
out
test
mov
mov
mov
mov
or
sub
mov
es
arpl
push
cmp
mov
rolb
jb
cmpb
stos
mov
fnstenv
int
and
aaa
push
adc
in
adc
sahf
dec
pusha
movsl
mov
fucomp
pop
push
std
lcall
sub
dec
repz
dec
subb
adc
orb
call
mov
mov
pusha
lret
pop
int
and
mov
and
xor
dec
push
sbb
stos
mov
incl
incb
das
stc
sahf
test
aam
dec
movsbl
notl
adc
and
ljmp
cs
clc
sub
jecxz
and
subb
lock
and
mov
lcall
fs
shr
cwtl
daa
xchg
push
out
or
es
add
adc
jmp
imul
out
popf
mov
ds
mov
movsl
cltd
sahf
and
jecxz
or
movsb
cmp
xorb
scas
lcall
and
clc
dec
xor
sbb
cmpsl
leave
fs
or
ljmp
loope
mov
mov
cwtl
sbb
loope
ds
fwait
mov
jg
mov
cwtl
push
lea
inc
fldt
int
loope
daa
lcall
mov
incl
dec
sub
fbld
sbb
movsl
packsswb
push
std
fidivrs
out
call
imul
outsl
sub
cli
jl
jnp
data16
lds
test
inc
xchg
lock
in
dec
lods
scas
icebp
loope
fs
incl
pusha
inc
add
insb
jns
repnz
jp
mov
push
jmp
subl
xor
pop
ljmp
adc
lcall
sahf
inc
js
out
repnz
or
add
lock
fstpt
inc
cld
mov
xchg
std
push
call
xor
dec
or
cmp
adc
inc
pop
dec
aas
insl
xor
or
orb
popa
cmp
jmp
xchg
fsubl
mov
nop
mov
test
pop
pop
or
inc
aaa
leave
movl
mov
or
or
shlb
push
adc
and
xor
mov
add
lcall
aam
mov
decl
and
sub
and
insb
das
adc
loope
xchg
mov
sub
loope
in
mov
imul
orl
dec
jg
aaa
mov
dec
pop
movsl
fwait
out
pop
gs
in
lret
inc
mov
inc
and
das
aam
divb
mov
jmp
call
dec
shll
jne
iret
fdivrs
mov
sbb
or
aad
notl
cmc
ljmp
fisubrl
das
mov
xor
jg
addr16
call
pop
cld
push
es
rcrb
mov
xchg
cli
jnp
stc
add
das
push
lcall
repz
std
ja
or
std
inc
movsb
add
mov
mov
cmp
call
pushl
jp
popa
sarb
or
jno
push
aaa
push
decl
or
xchg
pop
stos
cmpsl
repz
adc
jmp
jmp
jg
cmpsl
and
std
into
pop
xor
mov
jg
jmp
and
mov
pop
add
decl
int3
inc
stos
fs
mov
jns
mull
mov
mov
mov
mov
cmpl
mov
sbb
mov
fnstenv
lcall
cmpsl
in
mov
sub
add
in
cmpsb
rcrb
insl
loopne
lret
push
xchg
pop
xchg
sub
inc
cli
dec
movsb
jmp
int
imul
and
rol
jae
incl
stc
sti
fidivl
lock
lods
xor
lea
push
shlb
or
es
mov
outsl
clc
pushl
lock
rcrl
adc
adc
js
call
movsb
fdivr
pushl
cmp
push
cwtl
sub
xor
inc
sub
lea
fisubrl
pop
cli
or
mov
adc
xchg
decl
mov
aaa
push
orl
in
mov
enter
incl
lods
mov
xchg
loop
mov
aad
fstl
decl
stc
or
sub
mov
mov
stos
sub
or
decl
lods
scas
mov
repnz
cmc
lcall
je
clc
push
and
sub
aaa
adc
jge
add
lds
clc
out
pop
bound
xchg
repz
mov
push
std
cmp
cs
leave
dec
xor
test
mov
dec
decl
sbb
insb
cmp
or
stc
jl
jge
iret
frstor
cmpb
cmc
push
in
mov
push
inc
jl
sbb
and
shrb
xlat
divl
xor
call
pop
cmp
aaa
inc
xchg
cmp
xor
int
call
scas
pop
das
cli
push
iret
mov
fwait
cs
stos
push
jp
sbb
xlat
cmc
stos
ret
jb
xor
push
xlat
sbb
mov
clc
jmp
or
push
movb
movsl
pushf
pop
test
in
push
out
pop
mov
xchg
fcoml
push
sar
cltd
jo
in
lods
push
lcall
call
push
mov
sbb
sub
xchg
add
call
std
shl
imul
push
push
and
xchg
mov
repnz
adc
or
lods
fs
xlat
jecxz
in
mov
push
push
dec
push
push
jl
das
int
and
mov
dec
dec
iret
push
mov
inc
scas
std
loopne
into
fnsave
fisubl
into
ja
add
or
sysexit
mov
sbbl
ljmp
dec
jl
jl
push
jmp
sbb
jbe
push
fldenv
out
call
decl
jns
inc
xor
shl
hlt
jle
add
fiaddl
cmp
scas
mov
fisttps
sbb
fs
out
ljmp
mov
push
out
push
xor
cltd
dec
fbstp
lcall
mov
pop
push
dec
mov
leave
xchg
bound
cltd
dec
stos
test
jge
add
pushl
pushf
fldt
pop
addr16
iret
push
popf
outsl
je
mov
sub
in
lret
xor
inc
loope
cwtl
sub
das
outsl
ss
incl
or
xchg
pandn
insb
call
jnp
fdivs
cmpsb
jecxz
shll
ss
cld
fisttpl
ds
dec
fwait
sub
cmp
jmp
or
jp
cmp
das
mov
pop
inc
popf
xchg
pop
sub
sbb
fld
mov
xor
outsl
jecxz
addl
pop
cmc
sub
and
mov
scas
and
pushl
push
inc
cmp
cli
mov
jnp
imull
test
mov
push
jne
push
shrl
sub
lcall
xchg
out
not
jne
les
push
icebp
stos
dec
data16
stos
in
inc
mov
stos
add
adc
dec
cltd
pusha
mov
incl
lock
jge
pushf
cmp
mov
sub
cli
pop
pushf
sub
imul
push
cs
pop
sarl
add
jp
lock
ds
stc
jg
jbe
pop
je
mov
push
inc
xor
repz
sar
ljmp
push
stos
jl
es
shrl
mov
jl
rcll
cltd
outsl
in
pop
or
aam
inc
push
outsb
shl
cltd
or
fmull
das
cmp
dec
sahf
jmp
jmp
mov
lret
cmp
ja
ret
movsb
aam
in
data16
mov
xor
dec
pop
pop
cmp
pop
sub
xchg
inc
mov
push
icebp
pop
mov
sub
mov
mov
xchg
insl
cmp
imul
mov
bound
dec
arpl
add
inc
push
fisubl
xor
fsubrp
stos
mov
mov
aaa
and
aaa
add
mov
push
fildll
pushl
rclb
sbb
cmp
adc
jo
inc
inc
jb
push
pop
add
push
js
lret
std
addr16
subb
es
pop
cmpsl
jb
ja
in
ds
pushl
daa
sti
imul
stos
rol
insb
sti
cmp
or
std
sbb
and
fnsave
cmp
pop
dec
or
or
cmpsl
jmp
ret
decl
stos
sti
mov
repz
jl
add
sbb
cmp
fisubl
push
inc
or
repz
fildl
sub
inc
pushf
out
pop
mov
cmp
ficoms
fiaddl
test
pop
cmpsl
stos
ds
sub
pop
dec
add
mov
push
in
or
jg
or
xorl
sti
popf
inc
or
icebp
xor
mov
and
cld
mov
call
enter
lret
rorl
in
aam
insl
scas
movsb
inc
mov
call
dec
push
inc
mov
adc
sbb
fstl
adc
dec
pop
decl
jb
mov
adc
cmp
in
pop
loop
xchg
ds
scas
fidivl
mov
aaa
or
lock
push
data16
xor
ljmp
sar
push
mov
push
pushf
or
mov
out
dec
idiv
orl
and
xchg
cmp
adc
push
sbb
dec
test
cld
dec
mov
dec
push
cmp
jb
in
sbb
scas
pusha
stc
inc
mov
and
push
icebp
decl
lock
pop
cli
lods
push
in
jmp
sbb
mov
sub
jp
dec
test
test
mov
out
loop
and
stos
mov
mov
and
xor
sub
subl
cmp
jmp
xchg
sbb
inc
lds
dec
fdivs
shr
aaa
mov
icebp
adc
hlt
sbb
decl
aam
lret
pop
xor
push
push
fbld
mov
jle
iret
sti
fldl
mov
iret
test
lcall
cmp
sarl
jb
in
orl
pop
mov
addr16
dec
stos
pushl
and
iret
popf
adc
mov
dec
movsl
push
ds
xchg
loope
mov
in
mov
rorb
and
and
adc
out
mov
and
mov
mov
outsb
mov
pushl
sahf
lds
leave
push
sbb
cmovl
push
xchg
mov
and
stc
push
sar
cmp
std
ret
pushl
mov
repnz
xchg
ljmp
call
mov
mov
push
mov
sahf
mov
sub
or
jle
movsl
mov
dec
jmp
lods
cs
in
popf
fwait
dec
filds
cld
incl
stos
pop
js
pop
in
and
mov
mov
cwtl
cmp
decl
dec
in
and
dec
fwait
in
loope
dec
out
fstps
adc
filds
les
shl
pop
push
cmpsl
js
in
lds
insl
sub
dec
add
mov
or
insb
lods
sub
fmull
mov
adc
xchg
cmp
cmc
push
incl
cmpsb
jge
loope
jae
aad
mov
jns
adc
shl
pusha
addb
mov
lcall
mov
jmp
push
fstpt
mov
and
pop
cmp
and
decl
outsl
and
mov
push
jne
outsl
or
jp
mov
mov
call
jo
adc
dec
dec
sub
daa
and
std
repz
nop
and
fs
ljmp
mov
fsubr
adc
adc
mov
cmp
cmpsb
sbb
fldcw
aam
mov
xor
mov
xlat
popa
or
xchg
outsl
jmp
loope
stc
adc
aad
ret
jb
sbb
mov
lcall
insb
mov
cmp
ljmp
dec
cli
fcmovnu
push
pop
std
cs
mov
sbb
mov
popa
sbb
mov
fdivrs
das
bsf
adc
sbb
mov
pop
cld
call
out
jb
in
mov
mov
jmp
jno
or
decl
leave
cmp
dec
push
mov
mov
lcall
push
lods
cmp
xchg
pop
push
call
ja
cmp
mov
jbe
ficompl
sub
sub
xchg
mov
push
push
test
jg
adc
cwtl
dec
xchg
xor
popa
test
test
mov
insl
das
mov
mov
lcall
push
jle
mov
decb
sub
cld
call
and
sub
fisttpl
sbb
lahf
pusha
mov
fcmovbe
sbb
imul
aaa
shrb
aad
ret
lods
add
mov
in
inc
jge
push
xor
sbb
xchg
out
mov
fdivrs
mov
pop
mov
sar
outsl
clc
pop
pop
pop
or
sub
pushf
hlt
les
decl
sbb
mov
mov
test
cmp
mov
icebp
fsubr
mov
inc
pushl
cwtl
aam
stos
rcr
xchg
out
pop
outsb
and
jg
push
imul
push
pushl
mov
in
daa
jo
ds
and
fnstenv
ret
xor
xchg
dec
jg
call
xor
ds
xor
addl
imul
sbb
sub
stos
jno
add
cmp
arpl
bswap
mov
roll
jmp
pop
aad
ds
outsb
lods
out
sbb
stos
sbb
iret
push
xor
scas
int3
or
add
clc
pushl
adc
mov
enter
dec
and
pop
adc
cld
mov
mov
and
call
gs
mov
test
movsl
xor
xchg
test
mov
lcall
jno
arpl
mov
jns
dec
arpl
call
stos
or
in
cmp
push
sbb
xchg
sahf
pop
repnz
fwait
lea
or
or
decl
push
int3
ret
mov
mov
xchg
cltd
leave
push
pop
test
in
lds
xor
adc
jg
out
icebp
ljmp
enter
mov
add
cli
call
adc
out
jo
push
add
adc
in
sub
scas
movsb
add
inc
out
inc
pop
dec
jnp
in
xor
outsl
add
ljmp
fwait
loop
mov
and
xchg
or
jecxz
push
stc
jmp
outsb
stos
cmp
orb
cmpsb
aas
or
push
mov
push
cmp
cmpsl
sbb
lcall
or
and
inc
bound
call
or
sub
jmp
call
sbb
push
outsl
cltd
or
bnd
adc
call
popf
and
imul
push
adc
outsb
xchg
mov
gs
subl
jnp
push
or
sub
xchg
aaa
and
mov
shl
jg
or
jge
inc
sub
and
cltd
xchg
dec
loop
divb
sahf
fcmovnu
lret
sbb
sbb
out
sbb
jmp
lock
les
dec
int3
int
hlt
or
mov
aaa
push
mov
inc
loop
sub
jae
inc
push
jg
mov
das
adc
add
arpl
xchg
inc
and
sub
pop
cltd
nop
dec
cmp
not
out
mov
dec
adc
gs
cmpsb
nop
clc
js
jg
add
and
in
shll
mov
jge
sbb
out
jmp
dec
inc
dec
lds
xor
push
clc
fdivr
mov
les
mov
imul
int3
dec
xlat
sub
icebp
lahf
push
fcomip
sarb
jmp
push
hlt
mov
add
iret
std
fnstenv
sub
push
out
push
inc
xchg
movsb
clc
out
daa
cld
aas
adc
sahf
mov
dec
jg
push
cmpsb
xlat
fcomip
call
jb
xchg
imul
pop
jbe
jo
pop
mov
in
les
hlt
cld
jecxz
jmp
jmp
rolb
cltd
lret
lock
mov
pop
cmpsb
sub
mov
pop
sbb
incl
loopne
les
cs
or
add
outsl
jno
mov
ja
mov
fs
gs
les
shlb
sub
pop
cmp
push
xchg
out
inc
dec
and
mov
or
fdivr
decl
pop
and
add
pop
sub
jp
lock
cs
js
mov
pop
iret
add
filds
pop
jnp
shrl
loopne
push
cmp
cli
lcall
sbb
dec
pop
adc
inc
std
ljmp
and
inc
ret
and
and
push
repnz
sar
inc
jbe
adc
call
cmp
les
cmpsb
scas
icebp
icebp
ret
mov
jmp
xor
cmp
cmp
pusha
and
mov
jnp
cs
jnp
jle
inc
jno
pminsw
sbb
and
push
fists
loope
stc
cmpsl
lcall
sub
pushf
xchg
sbbb
movsl
mov
pop
cmp
jl
mov
xor
mov
add
jg
pushl
cli
out
aad
in
pushf
outsb
enter
cmpsl
nop
shrb
cwtl
nop
fisubrs
stc
xchg
fcomip
das
sub
aad
fisubs
mov
pop
add
repz
aam
popf
dec
pop
loop
call
mov
icebp
fcomps
jl
adc
arpl
mov
jne
dec
ret
jmp
sbb
je
mov
lret
jnp
mull
pop
pop
adc
jmp
adc
jmp
test
jo
mov
and
xor
and
cmc
jo
ljmp
or
aaa
pop
pop
or
hlt
and
pushf
pop
testb
and
cmc
pusha
jg
lcall
mov
or
adc
sbb
repnz
inc
and
gs
push
cwtl
jecxz
adc
nop
sbb
nop
add
test
xchg
outsb
daa
pop
jge
incl
lcall
pop
in
shrb
xchg
jle
pop
jge
xchg
idiv
lcall
fistpl
cmp
sub
aas
out
pusha
mov
addr16
jecxz
inc
sarl
ljmp
sarb
movsl
xchg
pop
sub
lods
sub
movsl
pop
clc
pushl
aaa
mov
push
inc
aas
jmp
ret
mov
ret
cld
jmp
das
mov
lret
add
mov
adc
cmp
stc
sub
inc
lcall
das
push
jnp
test
scas
mov
push
jg
movsb
in
loopne
stos
dec
out
lods
xchg
dec
cld
mov
push
pop
lea
ds
xlat
shlb
jmp
jmp
adc
mov
ret
icebp
stc
imul
xor
mov
mov
lcall
psrlq
int
push
sbb
insl
cli
dec
xchg
pushl
scas
jns
adc
fcoml
lock
int3
sub
shrl
jge
daa
mov
xchg
arpl
mov
movsl
out
cmp
or
xchg
enter
movsb
stc
add
xchg
out
xor
cmp
shlb
out
lret
mov
iret
jg
push
lcall
lcall
xor
mov
divps
xchg
push
or
mov
xchg
cmc
pop
std
lcall
fsubrs
insb
jno
push
xchg
pop
testb
lea
filds
or
inc
cmp
sub
sbb
or
mov
addl
or
xchg
sub
lock
fnstenv
sbb
sub
adc
cs
lods
and
in
clc
push
pop
push
adc
decl
or
in
test
push
lods
mov
sbb
and
pusha
inc
jae
jae
lcall
jl
pop
and
imul
push
xchg
sahf
xorb
cmp
in
or
jns
cld
ljmp
mov
fs
std
jg
inc
dec
xchg
sarl
or
push
and
sub
int
out
pop
xor
add
xor
push
icebp
sti
push
add
subl
pop
sahf
fwait
call
jmp
xlat
scas
dec
inc
lahf
movsb
leave
xor
aad
jb
adc
test
xor
dec
inc
daa
push
and
dec
dec
fldt
lods
mov
jmp
mov
push
or
mov
dec
add
out
cmp
sbb
jg
adc
cmpl
cs
cli
les
sbb
sbb
mov
daa
jl
pop
and
cmpsl
imul
mov
ljmp
or
pushl
xchg
cmp
fimuls
push
fsubl
lcall
pop
aas
out
aaa
std
in
lods
add
mov
pop
jb
dec
rdtsc
gs
ds
jp
pop
mov
sbb
stos
push
fcmovu
rorl
ret
pushf
sub
jbe
outsl
xchg
out
hlt
popf
cs
call
data16
inc
mov
std
decb
call
push
cli
sub
cmp
or
addb
ljmp
mov
or
es
sahf
movl
adc
in
dec
push
pushl
add
xor
push
mov
stos
mov
orl
out
mov
dec
xchg
jmp
in
inc
ffreep
mov
cmp
adc
in
in
lods
push
stos
push
mov
in
mov
inc
icebp
sbb
sahf
fmull
pop
pop
mov
les
fisttpl
lds
lock
push
fisttps
and
or
test
rcr
fbld
inc
or
adc
pop
fsubl
jno
sub
xor
xchg
adc
movsl
inc
jnp
mov
sub
mov
popa
fcomip
jb
incl
sbb
bnd
lock
les
push
scas
cwtl
outsl
imul
adc
ss
xor
lds
lcall
fwait
add
cld
fildll
or
ljmp
sar
xor
cmp
dec
fists
jns
sub
fcompl
sbb
inc
jecxz
xlat
mov
je
orl
inc
and
mov
or
xchg
jg
rcrb
inc
add
jg
out
scas
mov
push
sbb
pop
shrl
mov
dec
ud0
mov
cmpsl
sbb
xchg
test
mov
movsl
jecxz
jle
icebp
jae
dec
test
clc
adc
pop
ret
es
sti
js
xchg
push
jmp
scas
xchg
jne
pop
cmp
push
xchg
mov
add
insb
ljmp
push
jp
lods
mov
sahf
push
js
call
fsubrl
movsl
xor
push
lret
fistl
lcall
insb
ret
cmpsl
mov
aad
fstpl
mov
dec
incl
outsb
push
pop
jl
aad
jmp
data16
popa
mov
jmp
cmp
sbb
push
jle
or
test
cmp
jle
mov
scas
xchg
xchg
into
xchg
adc
out
sub
xor
loopne
add
inc
es
adc
imul
mov
mov
cld
insl
pop
ficoms
ret
push
je
test
pop
jns
ret
sbb
cmp
mov
sub
scas
cmpsl
push
and
and
push
mov
stc
fwait
or
mov
shlb
sub
pop
movl
mov
add
push
std
mov
or
into
jno
scas
sub
add
or
pushl
inc
mulb
mov
cmp
mov
ja
popf
mov
mov
mov
inc
pop
scas
cs
or
ljmp
dec
mov
icebp
xchg
mov
shl
loope
testl
jmp
je
mov
or
mov
jae
aas
mov
out
cli
std
flds
jmp
sub
cmp
test
xchg
sti
lcall
pushl
hlt
scas
nop
and
idivl
push
inc
mov
aaa
bound
test
mov
loope
mov
outsb
aam
mov
dec
leave
je
imul
neg
adc
incl
inc
jp
sub
aam
cs
push
pop
outsb
lods
out
inc
jg
sub
arpl
inc
xor
jnp
mov
inc
stos
mov
in
jecxz
sbb
fs
in
ljmp
ljmp
fistpl
push
add
call
xchg
mov
inc
int3
aam
sub
pushl
lahf
mov
shlb
sbbb
cmp
mov
sbb
jnp
test
call
inc
cmp
push
adc
cmpb
iret
rcll
rcrl
inc
shlb
push
or
cmpsb
stc
xchg
popf
push
mov
jmp
mov
push
pminub
adc
mov
leave
out
jb
testl
lcall
xchg
push
push
sti
stos
rcl
mov
mov
mov
cli
mov
jg
xlat
iret
inc
sub
loope
fst
xchg
push
adc
xchg
jmp
imul
pop
cmc
mov
hlt
inc
inc
push
inc
push
pop
pop
mov
mov
pop
mov
xlat
adc
xchg
bnd
std
jne
out
scas
xor
lcall
adc
test
les
gs
test
addl
js
mov
sbb
in
xchg
inc
fadds
sarl
testl
dec
test
sbb
jg
pop
ficomps
scas
dec
in
mov
imulb
repz
in
sub
mov
clc
call
imul
adc
adc
loope
cmp
int
cs
sub
mov
decb
outsl
jg
les
out
jp
movsl
jge
das
and
addr16
inc
lcall
jmp
sub
jne
jecxz
and
or
mov
xchg
push
inc
decl
test
fists
dec
and
pop
mov
std
xchg
or
filds
sub
loopne
jmp
mov
arpl
pop
cmpsb
out
add
inc
iret
jl
enter
call
and
push
mov
jge
mov
cltd
iret
adc
dec
in
es
jne
lahf
dec
cli
inc
rorb
xor
lock
call
mov
push
bound
cltd
loope
dec
and
cli
out
cmpsb
enter
push
mov
lret
out
jbe
mov
ss
fldt
mov
pop
push
sahf
push
jae
pop
xchg
shll
subl
decl
movsb
xor
and
mov
mov
adc
inc
test
clc
and
ljmp
test
jl
lahf
or
or
mov
mov
add
adc
mov
ja
inc
dec
xchg
out
dec
lret
cli
out
pushl
in
popf
mov
inc
pop
mov
into
aas
adc
popa
pop
mov
fsubp
cmp
hlt
out
or
lcall
pushw
sub
push
pop
xlat
ljmp
adc
outsb
or
sahf
lds
mov
adc
fists
popa
sbb
xchg
pop
test
jg
jmp
xor
ljmp
xlat
inc
xor
lret
popf
jno
pop
mov
mov
les
mov
inc
decl
enter
or
or
bound
fmul
and
dec
push
fwait
mov
pop
or
ljmp
jbe
call
sbb
push
cwtl
es
lcall
push
fisubrl
jo
pop
enter
push
fldcw
incl
subb
sub
or
mov
push
loope
cmpsb
mov
push
push
mov
loop
pushl
add
bnd
imul
clc
aad
lcall
pushf
insb
lcall
sub
mov
int
push
sub
and
sub
stos
push
incl
add
and
aam
sub
je
cmp
out
add
jp
or
insl
mov
lcall
mov
pop
icebp
jp
mov
jp
mov
dec
mov
fsubs
insb
lcall
ss
xor
les
test
mov
cmc
aaa
rorb
and
cmp
jnp
adc
in
jne
pushl
data16
stos
test
jge
out
cmc
xchg
fsts
nop
bound
hlt
push
roll
push
fistpll
jnp
pop
mov
mov
sar
mov
shll
fidivl
sbb
inc
jg
rcrb
call
test
scas
ret
jle
hlt
aaa
xor
daa
mov
popf
cli
pushf
xor
mov
idiv
decl
sub
mov
cli
stos
test
icebp
ss
leave
repnz
fisubrs
and
push
inc
mov
in
mov
xor
push
xchg
in
sahf
dec
adc
push
mov
inc
dec
sbb
bound
cmc
inc
mov
jne
mov
adc
lcall
lock
fcomip
pushl
mov
pusha
xchg
pushf
xor
mov
and
adc
lcall
incb
notb
push
mov
cmpsl
test
push
cs
decl
call
xor
mov
pop
test
daa
clc
jmp
dec
jg
inc
push
xchg
push
xor
ljmp
cwtl
popa
add
jge
xor
les
jns
imul
jbe
mov
incl
scas
sbb
mov
pushf
decb
addb
ds
mov
gs
sub
aaa
jae
dec
xor
leave
mov
jbe
fsubrs
test
push
dec
les
outsb
cwtl
jae
dec
das
sar
stc
push
sbb
test
or
adc
movsb
xor
decl
and
test
sub
push
out
iret
nop
mov
inc
jne
cmp
sub
lods
fcomip
lret
ucomiss
cld
sbb
arpl
jbe
push
cli
aaa
xchg
rcrl
and
insl
out
fwait
cld
pushl
mov
inc
mov
mov
roll
pop
std
pushl
loop
push
rclb
jmp
scas
movsb
inc
mov
rcrb
scas
lods
aam
idiv
jg
addr16
jnp
cmp
imul
push
cmp
push
jae
inc
mov
pop
std
outsb
pop
mov
mov
popa
mov
inc
fwait
pop
sub
mov
sbb
pop
shlb
pop
and
push
icebp
jg
call
test
outsl
test
xor
sbb
data16
adc
std
and
pop
add
lods
sbb
rorb
dec
pop
cmp
cmpb
andl
adc
pop
cmp
std
or
jns
add
int
xchg
int
cmp
mov
test
fdivp
int
in
in
add
les
je
dec
push
add
aaa
sbb
ret
insl
dec
lock
adc
ljmp
xchg
add
fwait
in
and
and
jnp
ret
and
jl
mov
fildll
push
hlt
xchg
inc
jg
jmp
xchg
push
cs
mov
inc
add
cld
jmp
pop
jg
bound
dec
std
fnstcw
daa
hlt
jb
movsb
fisttpl
ja
jmp
xchg
movsb
mov
popa
sub
movsb
xor
bound
jmp
je
mov
movsl
xor
mov
popa
aam
xchg
call
xchg
dec
decl
outsb
mov
je
sbb
adc
xor
imul
je
or
inc
push
inc
pushl
dec
out
outsb
ss
adc
sub
inc
lgs
push
mov
repnz
pushl
mov
inc
xlat
in
adc
jo
push
jmp
test
push
push
std
jg
cmp
jge
push
push
stc
sub
and
repnz
ja
lcall
jge
xor
sahf
dec
fs
andb
loopne
test
adc
add
jb
jg
pop
ret
pop
dec
add
jbe
mov
leave
mov
push
fsubl
mov
aad
xchg
shr
sbb
outsb
icebp
cwtl
cmpsb
fisubrs
pop
shl
mov
clc
hlt
cltd
sar
mov
sub
dec
int
ds
je
setno
stc
adc
call
cld
test
jmp
mov
xor
loope
cmp
pop
repnz
je
push
jge
mov
icebp
cwtl
sahf
call
pushl
sub
add
cwtl
dec
cwtl
gs
test
sub
in
incl
xchg
dec
push
and
mov
add
jmp
movsl
mov
push
mov
jg
sahf
scas
ss
sbb
jmp
dec
sub
mov
in
stos
in
ljmp
cmp
iret
lods
mov
or
call
icebp
or
shrb
pushf
jl
push
lret
jg
stos
lahf
mov
xchg
inc
xor
add
mov
lcall
cltd
jg
xchg
xchg
shl
ljmp
jbe
xor
mov
add
pop
dec
sarl
imulb
fimuls
xchg
aad
fcmovnb
fmulp
adc
lcall
in
loopne
mov
cli
imul
pop
inc
call
icebp
push
or
outsb
test
sti
push
or
clc
out
and
popa
mov
cli
ljmp
add
cmp
inc
cmp
pop
fisttpl
xchg
and
sub
mov
test
mov
jns
fcomi
push
fbstp
pusha
pop
pop
daa
mov
out
mov
fmull
test
out
movl
addl
jmp
jmp
mov
inc
sahf
into
arpl
push
mov
xor
mov
lds
push
ror
mov
jno
shll
hlt
push
xor
shrb
mov
jg
repz
test
mov
sbb
das
les
add
mov
pushl
aaa
adc
dec
sbbb
mov
push
in
jmp
sub
clc
inc
stos
or
lds
or
adc
mov
dec
adc
jnp
rcrl
lcall
lcall
cli
inc
sbb
psubsb
mov
inc
rolb
out
jne
push
mov
popf
jg
fcomip
cmp
cmp
out
fwait
add
ds
shll
add
ljmp
out
jnp
sbbb
xlat
mov
lahf
ja
ljmp
push
jge
fsubr
adcb
ja
mov
repnz
mov
pop
cmp
mov
cmpsl
sbb
mov
fsub
sub
gs
cmp
loopne
hlt
scas
push
push
xchg
mov
xlat
repz
lods
idivl
pop
fs
fnstcw
lds
xor
cmpsl
shlb
pop
inc
movl
out
mov
js
in
or
bound
add
aaa
cmc
and
fucomp
in
test
aaa
std
xorl
es
mov
push
sub
sarb
mov
dec
cmp
and
jmp
push
stos
addb
pop
jge
pop
leave
lock
pop
scas
stc
fs
jg
imul
nop
or
lret
xchg
std
stc
call
sub
xchg
xchg
xor
xor
xor
nop
clc
ljmp
inc
add
icebp
mov
mov
inc
insl
incl
and
in
dec
popa
call
pop
xchg
sub
jmp
pop
jb
ret
call
lods
pop
xchg
cmp
rcrb
adc
push
fildll
and
pop
int3
sub
pushl
cwtl
outsl
mov
mov
inc
sbb
rcl
das
repz
cltd
xchg
sar
cld
and
jg
dec
cmp
pop
orb
int3
mov
or
pop
mov
cmp
decl
or
sub
xlat
xchg
mov
push
xor
pop
jp
aaa
sahf
mov
incl
ds
and
enter
or
ret
push
adc
gs
lcall
xchg
out
test
xor
cmc
lock
aaa
repz
sub
fisttps
jmp
jle
jae
jl
not
aas
mov
inc
mov
mov
cmc
je
pusha
mov
imul
xchg
jb
subl
mov
xchg
loope
es
cltd
sub
mov
out
push
sbb
dec
dec
movsl
into
pop
lock
jmp
dec
xchg
std
push
je
movsl
mov
imul
push
xchg
test
and
incl
test
and
dec
lock
negl
sub
add
incl
adc
pop
cmpsl
push
popf
sbbl
mov
inc
mov
mov
out
js
out
jbe
jl
je
scas
movsl
das
push
in
daa
cmp
mov
clc
push
xchg
into
sbb
sbb
mov
cmp
lret
lods
pop
push
push
or
sub
incl
into
cld
push
and
ret
mov
rsqrtps
and
mov
or
fbstp
roll
pop
sti
mov
dec
repnz
insl
cmc
scas
nop
rcr
sbb
test
mov
decl
cmpsl
ret
sbb
pop
in
lods
negb
jo
ja
ljmp
out
push
outsb
dec
mov
rcrb
rcll
loop
into
test
jmp
pop
mov
out
mov
idivb
adc
ljmp
incl
out
push
inc
int3
adc
add
fisttpl
cmp
dec
xor
jmp
aas
push
xchg
xor
adc
aas
gs
incl
cmpsw
mov
inc
and
or
cltd
fstps
inc
add
push
jge
fiadds
call
adc
or
lods
inc
mov
clc
xlat
ljmp
adc
xor
loopne
lds
jns
lods
test
push
pop
lock
add
iret
rorb
movsl
adc
loop
mov
mov
ljmp
out
enter
bts
test
rcl
push
lcall
jg
out
push
lea
stos
push
adc
sbb
pop
jbe
movsb
sbb
loop
jae
pushl
cs
mov
push
in
dec
inc
arpl
push
mov
stos
mov
loop
and
lret
outsb
icebp
adc
in
int3
in
dec
dec
shlb
jno
lret
xchg
lret
clc
in
jecxz
call
and
js
push
cmpsb
xor
pop
adc
test
jb,pt
arpl
out
inc
in
rorb
mov
xor
xor
dec
hlt
dec
lea
inc
das
mov
sbb
aas
xchg
addr16
inc
ret
stc
cmp
pop
or
add
dec
jno
mov
rcll
cmp
mov
aas
das
test
pushf
outsb
xor
add
ljmp
sbb
pop
pop
xor
cltd
jg
incl
or
mov
imul
out
shl
or
and
sub
incl
hlt
ss
pop
cld
push
leave
gs
push
in
adc
loope
int
aas
cld
push
adc
addr16
mov
cmp
mov
stc
pop
cmp
pop
mov
ret
lods
jo
xchg
call
inc
cld
leave
pop
mov
ds
inc
lcall
push
or
dec
out
mov
dec
out
addr16
pop
sbbb
in
gs
pop
pusha
imul
stos
cli
inc
daa
jnp
sbb
mov
jb
push
jbe
and
decl
and
leave
add
dec
jp
aam
fwait
icebp
stc
mov
insl
jg
sbb
adc
jmp
icebp
fdivs
inc
and
xchg
popf
inc
and
xchg
push
sbb
and
ds
test
mov
std
push
pushl
adc
xor
outsb
lea
js
int3
test
call
stos
std
add
jmp
lret
scas
mov
adc
cmp
push
cmp
fstps
jl
movsb
add
cmpsb
pop
mov
loopne
xlat
clc
jg
inc
shll
hlt
imul
cmpsb
ljmp
jns
cli
xor
mov
lret
icebp
push
clc
cmp
mov
mov
call
outsb
iret
loope
and
sbb
movsb
adc
lock
xchg
mov
rcrb
jg
incl
call
movl
and
mov
decl
sub
data16
popa
xor
fimuls
mov
out
mov
pushl
push
icebp
leave
std
inc
popf
jle
sbb
mov
adc
aaa
leave
add
lods
and
jo
add
lcall
insl
pop
jge
popf
inc
push
loope
rcl
mov
ljmp
jo
shrl
pop
pop
or
xchg
jns
jae
cmc
or
adc
test
mov
jmpw
jmp
jg
jg
loopne
or
dec
inc
repz
iret
jnp
aam
dec
sub
repz
clc
pushl
insb
pop
sub
dec
lcall
movsb
add
xchg
psubq
sti
adc
andl
or
lds
out
push
push
mov
out
xlat
dec
lods
pop
or
sbb
lret
sub
loope
andl
push
pop
mov
jl
jb
call
jmp
mov
fcmovnu
ss
popa
jg
outsl
mov
outsl
fwait
add
test
jecxz
aad
ficompl
data16
inc
fsts
call
jno
cmp
push
dec
pop
in
lock
cld
adc
or
stc
xchg
loop
push
mov
pushl
in
xchg
push
lcall
lcall
jmp
orb
fstp
dec
xor
sbb
cmp
cmc
mov
mov
jb
lcall
add
fs
aas
ret
addr16
push
push
sbb
jmp
cmp
in
cld
into
bound
fcom
cmpsb
mov
cmpsb
mov
xor
mov
incl
add
test
sub
out
mov
int
push
movsl
jmp
cli
lcall
jmp
jnp
mov
jg
mov
mov
testb
lcall
xor
arpl
and
ret
in
fwait
cli
adc
icebp
jmp
sbb
jo
push
mov
outsl
cmpsl
jmp
lock
insb
popf
clc
bnd
pusha
pop
incl
and
or
lods
cmp
lcall
fmulp
fstps
ffree
stos
or
cmp
pushl
inc
jae
add
cmp
mov
mov
stos
jecxz
xlat
call
push
stos
dec
jnp
mov
jle
dec
stc
inc
sahf
je
cmp
mov
or
filds
mov
push
bound
jo
xor
mov
jg
adc
sbb
xor
jmp
shrb
add
jmp
mov
jge
shl
and
incl
ret
cmc
js
mov
mov
push
jmp
push
aam
stos
jecxz
gs
jae
jp
lahf
sbb
jg
or
and
mov
mov
mov
mov
mov
or
push
sbb
call
mov
adcb
jb
add
mov
add
ljmp
mov
mov
or
in
popf
jo
or
stos
sub
stos
jg
push
std
sti
jno
test
lahf
repnz
fistpl
iret
jns
mov
cmp
jae
das
pop
mov
mov
and
mov
call
push
pushf
xchg
xchg
push
or
sbb
call
ja
inc
mov
mov
sub
je
testb
push
stos
inc
nop
mov
ficompl
cwtl
mov
jb
inc
js
shll
cs
iret
fiaddl
jmp
cltd
in
fnstenv
pushf
lcall
adc
cli
out
add
fwait
ret
xor
push
dec
cmp
sbb
push
dec
scas
hlt
ss
mov
dec
fcomip
out
out
rorb
dec
mov
mov
sbb
mov
mov
adc
or
lcall
dec
xor
test
fsts
mov
andb
dec
ret
jb
adc
sub
stos
rorb
and
mov
mov
pop
mov
addb
lods
cmp
and
and
mov
stos
into
daa
repz
sbb
cmp
int3
inc
call
pop
inc
addr16
add
call
roll
rclb
aad
cmc
aad
pop
out
mov
xchg
es
jnp
ljmp
push
repz
mov
xchg
fdivrs
jp
xor
jl
rorl
mov
pop
aas
push
xchg
repnz
gs
dec
cmpsl
iret
mov
call
cld
xor
sbb
hlt
in
int
daa
popa
xchg
clc
mov
and
jl
popf
sub
cmpsb
jbe
mov
inc
mov
hlt
pop
xor
mov
xchg
inc
fwait
test
push
popa
jl
fcompl
mov
jb
dec
shlb
outsb
hlt
push
mov
jg
push
inc
mov
push
pop
pushl
andb
pop
jae
add
mov
test
or
sarl
jne
lcall
push
pop
and
sub
xor
orl
mov
sbb
fwait
ljmp
mov
xor
xor
jns
aam
pop
fdivl
pop
popa
inc
xor
decl
or
sbbb
pop
ror
jae
mov
and
inc
xchg
adc
rorl
std
incl
shr
xlat
or
popa
aaa
scas
test
addr16
sbb
add
or
cli
div
popa
jns
mov
out
add
dec
fs
pushl
mov
jnp
cmp
add
sbb
pop
lods
inc
jmp
mov
jmp
mov
cmp
mov
incl
mov
or
repnz
insl
lcall
inc
les
into
jne
jge
lock
mov
sbb
xor
inc
mov
jno
cmpsl
mov
jmp
mov
out
push
out
inc
out
popf
push
push
gs
pop
and
decl
sbb
pop
push
repz
xchg
aas
dec
fsubrp
cs
cmp
xchg
in
pop
lcall
inc
dec
loopne
addr16
movsb
mov
ds
das
push
mov
pop
pop
pop
mov
or
add
ljmp
sub
mov
imul
test
sbbl
lcall
adc
inc
mov
jne
sub
xchg
fisubrs
rcrb
outsb
lahf
sar
decl
pop
or
je
js
mov
pop
or
mov
out
cmp
lock
cmc
jg
pop
xchg
in
and
std
sub
cmp
push
xchg
int
mov
pop
cmc
mov
add
cs
movsb
xchg
aaa
fs
lcall
into
cltd
movsl
xchg
mull
push
xor
jg
cmp
and
push
inc
add
mov
scas
lcall
pop
bound
xor
lea
jg
ljmp
jno
int
std
repz
mov
push
stos
pop
dec
mov
call
sub
cmp
les
sahf
psubd
out
sarl
je
data16
dec
adcl
mov
pop
inc
faddl
mov
jmp
clc
ds
jg
and
adc
cli
pop
notb
sub
fcomip
call
sbb
leave
icebp
sub
xor
test
lods
add
mov
daa
push
inc
push
sub
movsl
jno
push
inc
xor
sub
imull
mov
pop
and
dec
xor
call
jo
cld
pop
pop
popa
xchg
sti
ljmp
js
xchg
pop
arpl
mov
sarb
sub
xchg
mov
enter
dec
lret
mov
jg
movsb
sbb
popf
xchg
popa
adc
mov
jmp
sbb
pop
and
loopne
mov
cmp
repnz
mov
lcall
mov
or
jae
ss
clc
mov
data16
xchg
stc
jl
ja
xor
cmp
inc
call
xor
mov
loopne
mov
inc
pop
push
fisttpl
fcmovnb
fldenv
mov
int
in
cmc
fisttpl
nop
das
mov
adc
addl
scas
fdivrl
popa
int
test
pop
inc
sbb
in
cmp
notb
push
test
repz
inc
pop
mov
sbb
push
lods
xchg
inc
ss
in
add
mov
jmp
rcr
jbe
inc
mov
or
lds
jecxz
xchg
mov
outsl
popa
cmpsb
test
decb
fcmovbe
ffreep
test
pop
jp
addr16
inc
cmpsb
mov
and
lret
aas
or
dec
add
pushf
mov
mov
xchg
mov
lea
fcom
ds
add
sbb
jl
cltd
push
das
jae
fisubrl
inc
out
scas
out
xor
flds
push
mov
push
mov
add
call
cs
sahf
fs
lcall
je
aas
sbb
js
orl
int3
pop
ljmp
lcall
and
sub
fldcw
sahf
cmp
push
xor
xorb
mov
decb
pushf
push
xchg
fsubs
mov
dec
in
fwait
push
mov
jmp
add
xchg
cmp
insl
and
das
cmp
dec
jo
inc
inc
pusha
sti
xlat
add
mov
std
dec
sar
cmp
mov
je
incl
add
repnz
mov
lock
inc
addr16
daa
jg
jle
mov
xchg
dec
pop
mov
cmpb
xchg
ja
icebp
shr
and
fmull
incl
shlb
scas
mov
ficompl
mov
sub
cld
adc
jg
dec
cld
mov
and
fidivl
and
inc
call
xor
push
les
lret
xor
out
inc
mov
sbb
push
call
mov
popa
pop
sbb
inc
fsubs
outsl
lret
clc
cmc
or
std
or
or
inc
or
push
call
mov
inc
jmp
and
ljmp
dec
imul
ss
rclb
fucom
fcmovnb
rcl
imul
pop
daa
jle
cltd
push
jbe
dec
add
in
mov
int
je
bound
xchg
cld
leave
lcall
mov
mov
mov
add
sar
jmp
test
lcall
xchg
in
aas
repnz
adc
rcl
pushf
decb
inc
clc
adc
mov
add
pop
lods
popf
cmp
jg
lcall
lret
lock
popf
cmpsl
mov
inc
sub
xor
int
pusha
jcxz
push
test
pop
sub
int
push
sti
sbb
xor
jmp
xchg
es
adc
int
sub
jmp
decl
les
les
les
push
das
outsb
add
pop
jp
mov
lret
loope
inc
mulb
fildll
xchg
out
mov
icebp
xchg
push
data16
cmpsl
jne
push
dec
sbb
mov
ss
inc
xor
jmp
xchg
mov
test
jmp
jmp
push
inc
sbb
loop
jmp
pop
rol
sbb
leave
xchg
sub
fists
mov
ret
or
pop
dec
fwait
or
jg
jno
fwait
enter
xchg
sti
hlt
int
lock
mov
arpl
ds
fs
sarb
fnsave
lock
mov
inc
xchg
ds
jmp
mov
addr16
cmp
jbe
push
cld
or
inc
jbe
mov
aad
xchg
and
incl
out
fs
xor
aaa
push
test
add
dec
sub
call
in
cli
inc
lds
lock
ret
cmp
mov
jge
mov
xchg
mov
mov
shlb
fidivl
dec
cwtl
lds
cli
lea
fwait
adc
xor
xor
mov
loopne
jg
scas
lea
push
je
jp
xorl
jmp
fbstp
dec
aas
mov
lods
cmpsl
and
fmull
stos
std
int
dec
xchg
rcrl
mov
mov
ljmp
int3
and
cmpsb
pop
pop
ficoms
stc
pop
ljmp
cmpl
ljmp
cld
je
inc
dec
mov
mov
mov
cmp
cwtl
pop
cmpsb
roll
or
std
xchg
mov
pop
xor
push
mov
shrl
les
sahf
pop
call
hlt
cli
pushl
js
pop
pop
cmpsb
jecxz
inc
fmull
mov
arpl
out
xchg
sbb
and
lods
push
jbe
fistpl
mov
push
mov
sbb
stc
daa
imul
add
sbb
pushaw
cmp
popf
clc
xor
fldt
repz
aam
add
ja
popf
or
test
mov
mov
cmp
xlat
loop
cmp
loope
sub
int
outsl
and
lcall
ret
adc
and
std
push
jl
incl
mov
xchg
pop
aam
push
mov
jle
push
dec
xchg
rorb
decl
xor
or
mov
mov
testb
xor
in
xchg
pop
iret
sahf
mov
incl
xchg
mov
fisubl
sarb
dec
sbb
cs
rcl
cmpsb
push
push
lcall
mov
mov
mov
into
jne
imul
repnz
lret
jp
pushf
pop
loope
mov
pop
dec
jno
gs
push
mov
aad
lahf
stos
mov
out
mov
dec
add
das
push
xchg
fstpl
ja
xchg
sti
cwtl
rcrb
lcall
mov
rol
ds
ret
push
lock
fwait
outsl
mov
fsts
mov
pop
jmp
xchg
out
or
fsub
sub
inc
pop
pop
push
inc
sub
in
jae
mov
xchg
incl
ret
stos
push
jno
jb
jno
jno
ret
sub
clc
out
mov
xor
lcall
lds
pop
mov
mov
or
ret
hlt
inc
pop
pushf
or
incl
rclb
aaa
add
dec
jmp
testl
push
pop
adc
notl
sbbl
add
int3
add
inc
and
xchg
decl
and
in
jae
push
push
out
mov
or
hlt
xchg
pusha
gs
das
mov
mov
inc
into
mov
dec
adc
rcpps
jo
adc
arpl
rcrb
sbb
cld
add
pop
push
and
adc
mov
mov
hlt
dec
xchg
lds
add
dec
push
or
sar
jo
test
mov
divb
pop
lds
lret
mov
mov
mov
jp
cmp
fsubr
mov
inc
or
jg
mov
test
in
addl
pusha
outsl
out
fmull
std
sbb
jl
shll
and
pop
lock
push
and
lcall
insb
adc
xchg
or
pushf
ss
jns
rorb
ljmp
xchg
mov
pop
push
fnstcw
in
xchg
push
xor
incl
jle
cmp
fidivl
mov
fisttps
in
inc
call
lock
call
xchg
cmpsb
inc
mov
imul
shl
out
hlt
aam
sahf
test
jecxz
mov
rol
jb
cli
stos
or
push
xchg
push
icebp
mov
incl
lcall
mov
fs
shlb
mov
insl
push
xchg
icebp
lcall
pop
imul
sbb
ja
nop
mull
mov
pop
and
out
xchg
mov
pop
xor
jb
add
repnz
jmp
out
mov
pushl
jb
lods
test
xchg
daa
mov
sbb
jmp
das
loope
je
or
decl
push
mov
loop
dec
mov
xor
ficoml
ret
or
mov
fs
jo
cmc
cli
dec
sbb
cmp
xchg
mov
sbb
popf
xchg
jbe
js
pop
pop
clc
jne
pop
pop
or
js
and
jmp
dec
cmpsb
scas
mov
jmp
sub
gs
cmc
std
nop
mov
add
subb
mov
cmc
xchg
pop
clc
out
inc
fdivrs
mov
mov
jp
push
and
call
lahf
std
pop
mov
pop
call
lcall
lret
in
add
xor
mov
cld
enter
addr16
mov
aad
filds
call
jns
sbb
int
push
mov
sub
sahf
xor
push
dec
sahf
rcrb
movsb
or
add
imulb
cmc
jnp
rcr
hlt
cmp
lcall
and
jmp
jns
mov
push
cmp
ljmp
jns
fcmovne
cmp
call
or
shrl
mov
loopne
daa
pop
mov
adc
mov
jg
jno
jo
mov
icebp
pop
jne
pop
dec
jmp
sub
mov
decl
in
js
clc
xor
sub
mov
das
xchg
sub
call
sbb
push
scas
das
int
mov
leave
jne
movsl
fstpt
cmp
cld
insl
popa
cmpsb
icebp
pop
std
call
dec
pushf
add
adcb
cmp
test
and
testl
call
movsb
pop
xchg
repz
mov
xchg
decl
js
outsb
adc
shlb
xlat
loope
es
push
iret
ret
popf
ffree
jl
lret
mov
jmp
or
jmp
out
mov
xchg
lods
adc
dec
out
inc
mov
iret
bound
mov
xor
sahf
test
lret
aas
sub
xchg
ss
adc
jg
dec
rcrb
iret
ljmp
int
cmc
adc
icebp
sbb
dec
cmp
pop
rorl
enter
cbtw
cmpsb
lcall
aam
dec
loop
andl
jmp
xchg
mov
inc
xchg
lock
jmp
or
cmc
inc
sub
dec
decb
andl
arpl
mov
sub
pop
enter
inc
xor
push
pop
je
ljmp
xchg
cmp
dec
lahf
call
cltd
adc
add
jno
xchg
cs
cmp
das
pop
les
nop
cmp
decl
fisttpll
inc
rorl
jge
je
xlat
jb
push
sbb
sub
clc
mov
in
hlt
xchg
cltd
jo
in
lcall
pushl
pop
cld
xchg
inc
mov
loop
mov
clc
out
in
xor
cmp
ljmp
xchg
push
bound
fs
adc
xchg
adc
cli
daa
iret
imul
stos
ret
mov
lea
scas
adc
mov
insl
mov
sbb
idivl
xor
mov
dec
add
and
jg
jmp
sbb
adc
push
add
jmp
push
mov
and
lcall
fcos
popf
lcall
rcll
into
jg
sub
sbb
xchg
sbb
cwtl
mov
add
and
add
adc
pushl
sub
shlb
dec
lcall
sbb
ja
xchg
les
xor
bound
jl
sarl
outsb
enter
dec
clc
popa
mov
imul
jns
sbb
rorl
cltd
cld
mov
sahf
dec
movsl
mov
mov
fs
xor
jecxz
icebp
cmc
sub
lcall
dec
lahf
xlat
icebp
ret
and
xchg
jno
mov
push
xor
daa
pop
or
lea
sub
ljmp
jmp
inc
mov
adc
mov
mov
fs
setnp
mov
lcall
mov
mov
or
inc
cli
jo
fcomp
jb
cmp
xor
xor
mov
mov
imul
in
xor
dec
push
int
push
lods
pop
push
and
mov
mov
cmp
xor
xchg
loopne
mov
out
adc
push
mov
das
aam
aam
jle
mov
or
jl
lds
and
push
incl
mov
sbb
sub
je
cmp
cmp
mov
mov
dec
jg
repz
mov
bnd
push
ret
push
les
loop
inc
pop
ljmp
add
jns
xor
hlt
pop
int
sub
fdivrl
pop
or
pop
fdiv
lcall
lock
pop
mov
push
jge
aam
jg
push
mov
lea
aam
pop
jnp
inc
fnstenv
aaa
std
incl
jae
pop
in
xor
dec
stos
mov
mov
sbb
aam
mov
fs
and
testl
repz
ror
lret
incl
pop
xchg
pop
jnp
or
add
repnz
out
jne
int
dec
or
je
aaa
mov
lcall
int
imul
or
ljmp
clc
cmp
xor
in
ljmp
dec
xor
and
push
jne
jl
push
pop
stc
xchg
fnstenv
clc
pop
and
js
stos
pop
mov
aam
sbb
fisubrl
out
outsl
sahf
pop
popa
inc
repnz
add
ret
xor
fwait
push
xchg
pusha
mov
call
ret
es
fldt
xor
orl
sahf
jo
adc
lret
ret
xchg
dec
repnz
cmp
repz
iret
pop
js
bound
push
mov
mov
lcall
inc
enter
pop
inc
mov
mov
dec
push
mov
pop
and
cmp
in
test
stos
adc
jne
cltd
fcomip
pushl
sbb
pop
pop
nop
jns
fs
daa
out
jb
in
add
inc
inc
stos
cmc
jp
aad
cmp
es
push
mov
push
das
cs
lret
cmp
das
inc
fistpl
addl
pop
testb
sub
decl
pop
lea
dec
loop
push
sbb
movsb
mov
pop
cmc
sub
dec
sub
inc
js
xchg
jmp
dec
mov
jle
mov
lcall
and
je
aaa
fwait
adc
inc
jne
xchg
xchg
js
movsb
xchg
mov
frstor
es
mov
cmp
std
inc
cmp
scas
xchg
and
pop
cmp
fidivs
lcall
mov
mov
stos
push
cmpsb
mov
adc
mov
mov
xchg
test
hlt
inc
push
fidivrs
pusha
repz
jp
jo
test
fwait
push
js
rcr
mov
mov
lock
in
shlb
out
xchg
push
std
sbb
push
in
orb
push
sub
cmp
mov
dec
dec
xchg
ss
arpl
inc
ficomps
loop
mov
rcl
lret
adc
cmpsl
out
lock
movsl
into
xchg
pop
dec
adc
in
ret
push
xchg
add
inc
adc
testb
and
movsl
filds
mov
mov
mov
in
xchg
dec
jae
mov
push
mov
mov
push
daa
test
cmp
clc
repz
les
lea
mov
jo
add
sbb
cmp
sub
cmpsb
lds
ret
cmpl
pop
lods
lock
shl
into
adc
mov
into
sbb
pop
imulb
xchg
jae
and
fsubl
insl
inc
dec
mov
jmp
and
cmp
xor
in
ret
ds
mov
or
iret
pop
mov
iret
sahf
mov
aad
iretw
int3
int
pop
mov
test
imul
sbb
outsl
jns
incl
mov
dec
xor
jnp
or
insb
test
jbe
xchg
addr16
es
int
dec
lock
cld
push
and
mov
js
cltd
dec
mov
adc
cmp
decl
jle
inc
and
push
lock
pop
cmp
mov
int
loop
mov
cld
incl
out
imul
jns
std
cwtl
sbb
jecxz
mov
les
pop
sbbb
ficompl
mov
notl
dec
and
dec
or
scas
mov
mov
push
or
fistps
dec
pop
cmp
les
jmp
pushw
int3
sbb
ret
or
push
dec
and
xchg
jo
call
cld
pushl
enter
xchg
ret
lea
ret
std
stos
mov
call
jmp
jecxz
adc
push
ljmp
aaa
cld
addr16
inc
or
dec
enter
repnz
sbb
and
bound
sub
nop
jmp
mov
fsubrl
dec
or
into
pop
pushl
xlat
mov
sub
psrad
insb
push
jns
cld
lret
in
out
pop
mov
pop
mov
xor
jae
xor
and
push
imul
jmp
repz
xor
cmp
cltd
xchg
sub
movsb
cmp
inc
in
rclb
test
call
loope
orb
outsl
xchg
or
mov
lret
in
adc
sbbl
lret
test
lret
add
pmullw
out
incl
cmp
enter
loope
lret
xchg
and
xchg
push
imul
decl
int
hlt
lcall
pusha
push
pop
adc
das
pusha
cltd
cmp
inc
cmp
inc
sub
dec
add
fwait
je
stos
je
push
testb
pop
pop
push
js
add
es
data16
call
mov
ja
add
fcmovnbe
mov
lock
jno
jne
and
pop
dec
cmpsl
in
mov
lret
mov
jmp
insl
es
mov
mov
and
lret
add
clc
fiaddl
dec
and
push
push
das
xchg
pushf
in
or
ds
notb
call
movsb
xor
fnsave
mov
aam
dec
mov
cltd
xor
aaa
into
adc
inc
addb
jmp
and
std
cld
mov
std
out
adc
dec
add
pusha
push
fdivs
les
out
adc
rcrb
or
or
mov
pop
fs
adc
pop
icebp
ds
out
adcb
push
in
xchg
out
addb
lahf
fcmovnb
call
imull
aam
push
mov
dec
adc
mov
fbstp
ret
stos
cmpsl
popa
inc
call
sarb
rclb
lock
sahf
mov
in
decl
mov
mov
jne
adcb
add
push
fsubs
inc
cld
pushl
push
popf
sarl
inc
jne
imul
mov
lret
sar
sbb
call
add
imul
mov
sbb
jmp
ljmp
lds
jl
rolb
push
cmpsl
es
hlt
xor
sub
jmp
arpl
jns
in
aas
pop
movsb
pop
mov
push
xor
mov
jmp
cmp
fucomi
sub
or
loopne
mov
std
pushl
mov
pop
jb
adc
xchg
mov
iret
rcr
push
pop
test
pop
push
pushl
ss
inc
nop
and
ret
outsl
mov
out
ds
pop
ljmp
aad
jmp
jle
xchg
neg
leave
loop
stos
gs
mov
pop
xor
in
movsb
add
or
ljmp
inc
repz
sub
sub
testb
incl
sbbl
cltd
mov
xchg
clc
xchg
jg
loop
xchg
pop
sbb
cmpsl
mov
jg
or
adc
outsb
push
incl
out
mov
hlt
add
mov
fcom
mov
lods
scas
mov
ja
clc
loopne
mov
inc
rclb
cli
mov
mov
rorb
ljmp
xchg
cmc
in
sub
jl
fcoml
ja
xchg
enter
mov
sti
repnz
jge
shlb
popl
jg
call
jp
push
sub
lcall
mov
aaa
dec
push
jbe
repz
pop
jmp
shrl
sub
jae
mov
add
rorb
add
pop
std
stc
push
mov
test
addb
or
push
sub
mov
cld
imul
sub
stc
loopne
cmp
push
xor
dec
call
sub
cmpsl
insb
lods
pushl
gs
addr16
push
ficoms
ret
rcl
lods
mov
mov
fbstp
inc
mov
nop
es
lret
mov
aad
xchg
add
push
fisubrs
jmp
dec
repz
push
addr16
pop
push
insl
lahf
pushf
pop
pop
out
pop
pop
push
push
scas
in
shrl
xorl
les
cmp
bound
imul
dec
xchg
shlb
mov
incl
fldenv
fwait
sbb
jp
sbb
fbstp
xchg
cmp
adc
stos
pop
adc
incl
inc
mov
sbb
ss
mov
jmp
das
sub
icebp
add
cld
popf
out
es
lcall
or
push
dec
cmpsl
pop
outsb
cli
pop
fbstp
and
mov
inc
inc
in
movsl
jg
inc
or
out
cmpsl
or
in
movsl
lds
pushl
push
rolb
push
loop
cmpsb
sub
stc
stos
sbb
and
je
mov
xor
mov
jg
or
imul
sahf
cltd
sahf
fcos
mov
jp
mov
testb
repnz
jb
add
xchg
ss
pop
inc
test
decl
dec
add
repnz
out
jl
jge
fcoml
out
mov
dec
fld
cmp
lock
lcall
xchg
sub
adc
fsubrl
push
imul
les
loopne
ret
fbld
shrl
insl
js
repnz
jl
sbb
insb
ret
data16
jg
outsb
loop
aas
int
fnstsw
and
ljmp
fistpll
ret
out
mov
mov
icebp
addr16
dec
js
mov
ror
mov
cli
cmp
bound
lock
ljmp
inc
and
aad
or
adc
icebp
and
adc
fildll
lahf
ja
int3
pop
insl
daa
sbb
jne
imull
push
mov
incl
sbb
mov
push
mov
and
call
into
fwait
push
adc
push
inc
lcall
out
push
das
sar
cs
xor
dec
xor
lock
test
mov
test
pushl
andl
add
push
push
test
dec
add
mov
mov
outsb
fidivrs
call
mov
dec
or
jb
aam
sub
cmp
xchg
xchg
mov
cmp
std
sahf
jae
pushf
add
fcmovbe
aas
jg
lahf
xchg
iret
sti
add
stc
mov
dec
pop
add
lock
cli
das
pop
mov
les
xchg
xor
mov
lret
incb
cs
ljmp
sub
pushf
loope
and
mov
jno
cltd
pop
ljmp
fimuls
loopne
adc
mov
enter
cs
mov
cmp
adc
jle
jne
pop
scas
add
xchg
push
pop
pushl
in
mov
pop
pop
movsb
cmp
mov
outsl
push
cmp
test
mov
jmp
cmp
ret
vshufps
in
push
fsubs
sarb
sti
cltd
out
lea
fcmovnb
hlt
sti
mov
mov
enter
jno
enter
add
push
cmp
pop
clc
sub
lcall
js
clc
scas
test
add
incl
push
pop
and
das
jle
xor
mov
xor
fs
xchg
mov
dec
push
jge
mov
cmp
mov
and
inc
into
mov
sbbb
xchg
xor
adc
cmp
aas
ret
pop
insb
sub
pop
popf
push
push
incl
nop
and
push
sahf
mov
rclb
and
cltd
sti
pop
dec
call
dec
mov
sub
test
popf
xchg
cmpsl
enter
dec
xchg
lret
mov
data16
inc
jae
lcall
dec
dec
dec
sub
into
and
jno
xchg
fdivl
mov
je
mov
lock
call
mov
cmpsl
nop
fsubl
push
jb
jp
cmpsb
push
test
push
cmc
decl
xchg
xchg
mov
outsl
push
call
movsb
call
adc
inc
jecxz
ss
push
push
sub
push
movsb
adc
and
mov
decl
jne
mov
pop
mov
or
nop
mov
push
pushf
clc
aas
inc
dec
mov
jmp
mov
outsl
out
movsl
test
cmpl
dec
xchg
stos
insb
dec
in
cmp
lcall
scas
es
push
and
leave
add
or
mov
lods
mov
add
mov
pop
iret
es
aaa
adc
mov
dec
enter
sbb
popf
xchg
jg
subb
sahf
popf
dec
push
mov
pop
daa
lods
imul
lea
xchg
loopne
jo
lds
test
js
pop
push
and
clc
incl
test
mov
cs
dec
cmp
cld
jmp
pop
call
inc
jo
stos
and
dec
cmc
ficomps
mov
call
je
insb
sbb
mov
xor
xchg
clc
bound
xor
shrl
mov
decl
push
enter
nop
jecxz
dec
in
sbb
clc
jns
jb
pushl
cmp
fdiv
pop
popa
shrb
ret
push
jns
adc
or
adc
dec
mov
push
and
lock
incl
leave
sbbl
inc
push
xchg
xor
add
popl
dec
xchg
fbstp
loope
shrl
lea
std
cmp
sahf
cwtl
push
test
aad
adc
scas
push
cmp
mov
hlt
test
je
icebp
outsl
leave
jae
in
test
inc
sub
push
mov
pushl
std
sbb
sbb
inc
int
jp
orl
and
jmp
inc
adc
nop
sub
imul
mov
inc
pop
and
pushl
or
jecxz
cmp
sbb
dec
or
testb
jo
push
pop
js
fstenv
dec
or
mov
cmp
inc
mull
sub
lret
icebp
adc
fildll
jge
or
enter
insb
and
mov
pushl
dec
cmp
push
push
in
in
out
and
mov
sub
cmpsb
nop
fistl
ss
ret
cli
incl
mulb
push
push
inc
and
mov
mov
mov
and
add
insb
jecxz
jae
mov
clc
aaa
ja
sbb
mov
pop
cmc
ja
out
mov
cmp
xchg
mov
pop
dec
inc
adc
and
sbb
decl
aas
cld
jbe
fwait
dec
out
sbb
push
jge
jns
icebp
pop
cmpsl
jl
ss
xor
mov
ja
incl
jge
push
mov
aad
fisubrs
mov
sbb
lods
aam
jecxz
push
jne
dec
dec
repz
pushl
adc
jmp
inc
mov
inc
mov
shr
push
xchg
sub
decl
les
and
inc
cmpsb
or
out
cld
dec
frstor
dec
jmp
push
xchg
lret
cmp
test
xor
xchg
clc
cltd
mov
scas
fadd
fisttpll
jns
and
pushl
push
or
lcall
dec
insb
sub
adc
popf
mov
mov
jg
std
dec
jp
lahf
pop
xchg
and
insb
imul
leave
sub
test
incl
xlat
fistpl
and
hlt
mov
addr16
jecxz
outsl
lret
jb
roll
jmp
mov
adc
xlat
dec
dec
mov
rcll
scas
lods
cmp
xlat
iret
popf
xchg
xor
inc
testl
sub
inc
cmpl
xchg
or
ja
mov
fcomip
ss
jmp
loopne
sti
mov
hlt
sbb
seta
int3
ror
dec
fldt
add
ror
pop
push
dec
xchg
mov
pop
xchg
fmulp
add
pop
daa
dec
push
or
loope
cli
xchg
test
or
fsubrs
inc
pop
mov
mov
decl
jns
mov
xchg
cs
dec
loope
std
addl
lret
cmp
aaa
pop
ret
addr16
or
adc
inc
sub
pushl
jo
lods
push
mov
test
and
divl
test
cmc
cmc
pop
mov
decl
pop
dec
aas
mov
cmp
clc
in
mov
test
fcmovbe
jb
daa
inc
fnstenv
mov
mov
loope
pop
lret
add
jne
pop
jmp
jle
neg
mov
xchg
or
call
xchg
pop
imul
out
xchg
adc
push
mov
popl
and
mov
incl
adc
push
popa
out
pop
xchg
inc
inc
lahf
xchg
rcrl
xor
push
xor
dec
inc
push
mov
cmc
fcomip
inc
adc
hlt
enter
adc
aad
mov
lods
push
and
lcall
fnstenv
inc
sbb
ror
data16
test
fcmovne
insb
mov
push
dec
out
incb
call
xlat
shlb
lret
mov
xchg
test
adc
sbb
stc
inc
aas
push
mov
test
sbb
mov
in
pushl
sbb
push
xchg
arpl
and
inc
xchg
push
push
sbb
fxch
mov
enter
ljmp
pop
sbb
and
sbb
and
cmpsl
pop
mov
mov
scas
fdiv
cwtl
add
lods
dec
imul
mov
push
xchg
shll
mov
in
xchg
sbb
dec
fmull
stos
jmp
idiv
sbb
lea
lret
in
popf
cld
aam
inc
mov
xchg
xor
pushl
hlt
fiaddl
adc
std
jle
mov
xchg
mov
out
imul
stos
xor
ljmp
adc
fwait
pusha
and
mov
repz
push
loopne
ret
add
or
pop
inc
lods
jnp
adc
mov
mov
add
stos
add
lahf
mov
hlt
dec
or
mov
jl
sbb
push
imul
mov
inc
adc
mov
repnz
mov
dec
xchg
and
jecxz
jmp
dec
gs
pop
dec
xlat
daa
pop
mov
paddb
and
mov
bnd
push
out
stos
pop
ljmp
pop
out
lcall
push
pop
js
xchg
xchg
test
rep
lret
pop
mov
cmc
lea
xchg
or
popa
ds
movsb
xchg
arpl
icebp
mov
movsl
je
xlat
inc
js
jle
decl
mov
test
shl
xchg
out
add
out
xchg
mov
test
mov
dec
adc
outsb
mov
jbe
frstpm(287
ds
dec
adc
pop
sarl
jecxz
adc
xchg
rorl
decl
clc
dec
jae
out
sbb
mov
dec
or
mov
jmp
orl
int
es
mov
dec
mov
push
lcall
leave
test
xchg
pop
mov
rcrb
lahf
nop
fstl
jmp
xor
stos
aaa
cld
pop
repnz
decl
lock
sub
mov
js
inc
sti
sbb
jno
push
lcall
lock
icebp
cmp
add
popf
mov
mov
mov
ljmp
clc
mov
mov
sbbl
mov
movl
lahf
sti
add
in
pop
lret
lea
cli
stos
mov
sahf
int3
call
inc
test
pushf
cmp
mov
not
xchg
sahf
shlb
sarb
out
adc
imul
sub
push
pushf
jl
jg
inc
rclb
xchg
push
inc
jne
or
mov
lcall
mov
pop
xor
ljmp
jge
nop
clc
ficomps
loop
cmpb
mov
xchg
add
movsl
ljmp
lds
movsl
js
pop
lcall
pop
nop
xchg
fisubrs
mov
jg
inc
sahf
lods
xor
adc
loop
nop
add
push
add
jmp
pop
rol
inc
in
and
pop
roll
push
add
cltd
enter
adc
mov
cmp
mov
add
decl
and
ficoml
xchg
push
lea
cli
fwait
pop
inc
jo
aam
in
mov
cmc
jmp
mov
loop
mov
cmp
and
test
ficompl
ljmp
mov
jmp
push
mov
mov
sub
pop
inc
inc
cltd
lods
xchg
test
call
mov
xor
add
xorl
mul
dec
sub
cltd
cmpsb
ss
je
je
fwait
and
int3
jo
xchg
out
mov
andb
jb
mov
into
arpl
jmp
jmp
les
fcomip
lcall
sbb
or
add
into
aas
or
lods
jl
in
jbe
or
jmp
mov
leave
dec
mov
in
pop
lds
push
xor
das
movsl
call
insl
dec
xchg
cmp
fdivrs
cmp
adc
lods
add
nop
mov
jbe
dec
add
stc
mov
cli
lods
xchg
pop
icebp
pop
or
js
outsl
mov
fnstsw
cmc
iret
bound
js
lcall
jbe
and
faddl
std
inc
fmull
daa
pop
or
jmp
or
jg
jl
jecxz
in
icebp
call
lock
dec
pop
lahf
cltd
lds
push
int
sbb
adc
mov
push
mov
filds
scas
pop
subb
inc
dec
jp
jmp
pop
insb
fistps
adc
jg
adc
cmpsl
lea
add
inc
mov
cmp
jo
notb
shlb
scas
fbld
adc
ds
mov
jg
or
test
push
fisubrs
push
outsl
mov
dec
cmp
movsb
mov
and
add
jno
push
loope
mov
cmpb
call
xor
cmp
xor
mov
shl
lahf
jmp
gs
mov
fbstp
jnp
xchg
or
cmp
jmp
push
fldl
hlt
dec
and
cwtl
push
stos
push
or
cmp
in
imul
mov
je
std
pop
and
into
adc
pop
or
xor
scas
jbe
inc
aas
xchg
movsl
repnz
testl
das
adc
mov
bound
xchg
xchg
pop
xor
imul
sub
and
dec
or
filds
mov
xlat
jecxz
push
xchg
ljmp
push
mov
xchg
add
pop
dec
stos
xor
dec
mov
add
insl
or
incl
nop
outsl
sarb
aad
cs
xchg
sub
jg
cmp
out
mov
jmp
sub
add
xor
jg
repz
add
loope
je
bound
dec
xor
mov
xchg
movsb
repnz
jg
xchg
add
dec
sbbl
fidivrl
imul
jmp
scas
shll
ret
mov
lahf
in
adc
sub
call
jns
loope
cwtl
push
add
std
sti
repz
call
icebp
xor
lods
pop
cmc
fsubrp
adc
ljmp
fists
sub
scas
jne
in
add
pushl
xor
das
cmp
aaa
lahf
arpl
fistps
sbb
out
call
out
cli
incl
mov
inc
test
mov
adc
ja
call
andl
arpl
adc
xchg
push
mov
loope
rclb
sbb
aaa
jl
call
and
popa
lods
push
nop
ret
outsl
mov
loop
fmuls
mov
mov
call
add
fwait
dec
sti
add
mov
cs
mov
jg
push
fnstcw
mov
ljmp
cli
pop
pop
ret
imul
or
add
mov
incl
ret
and
stc
adc
data16
movsb
push
dec
mov
dec
std
sub
lret
incl
divl
dec
lret
lahf
mov
repnz
gs
mov
popa
repz
mov
rcl
out
jb
lock
xchg
mov
add
int3
adc
xchg
sti
mov
ret
pusha
xchg
aas
adc
cld
lcall
xor
xchg
mov
sub
insb
pushf
and
xchg
movsb
mov
aaa
std
mov
movsb
iret
pop
lcall
mov
or
bsr
push
cli
pushl
lret
xchg
mov
test
mov
cmp
mov
xor
incl
adc
in
pop
lret
test
pop
imul
pop
xor
sbb
aaa
ret
ret
xchg
xchg
fildll
loope
xor
push
mov
js
add
adc
add
test
cmp
jg
push
pop
in
hlt
jb
lahf
sbb
or
xor
sbb
jg
lcall
outsl
ret
xchg
dec
out
aad
pop
push
cltd
push
mov
pop
aam
and
mov
call
loope
inc
decb
xchg
push
mov
shrb
data16
push
push
mov
call
dec
xchg
insb
xor
xchg
mov
sbb
cld
mov
mov
add
and
mov
cli
cli
inc
adc
dec
inc
decl
sub
mov
jecxz
test
or
adc
decl
add
es
lret
repz
frstor
mov
xor
ds
stos
outsl
clc
mov
pop
jae
xor
data16
mov
inc
jecxz
dec
imul
cltd
ret
inc
das
xchg
xor
dec
iret
outsl
lret
push
out
mov
jle
xchg
clc
dec
jle
sbb
cmp
cmp
lahf
arpl
and
xchg
xchg
push
ljmp
in
mov
shl
cmp
mov
xor
in
cwtl
mov
push
jno
rorl
lahf
sbb
push
push
mov
push
jo
scas
jp
test
xchg
lret
sbb
adc
push
or
jo
or
repnz
sub
pushl
jge
ret
jl
add
popa
mov
insl
out
inc
lock
int
adc
adc
mov
jp
daa
mov
outsl
inc
in
or
adc
or
cmp
push
ljmp
shrl
add
cs
cld
pushf
movb
jmp
cltd
mov
popf
push
mov
sbb
scas
adc
xchg
adc
scas
mov
cmpsl
adc
ljmp
jb
ss
cmpsl
insl
ljmp
js
bound
call
xchg
push
push
loopne
mov
test
pop
int
test
shlb
jmp
cwtl
xor
cmp
andb
lahf
cbtw
lods
lret
mov
imul
incl
roll
mov
mov
mov
fildll
and
adc
dec
push
shlb
outsb
leave
jge
flds
mov
rcrl
push
test
aaa
mov
xor
mov
pop
in
stos
and
inc
ja
xor
inc
jmp
sti
aam
rcl
and
push
scas
mov
cmp
pushl
insl
addl
lds
repz
ss
in
out
push
jge
stc
or
std
cmp
and
inc
xlat
fst
jp
rcl
test
mov
jmp
adc
popf
xchg
shrl
gs
in
daa
call
adc
decl
hlt
hlt
jbe
je
push
jbe
test
testl
mov
xchg
adcb
add
or
adcl
push
push
lret
in
test
rcrb
test
rclb
dec
dec
je
ss
decl
fists
push
lods
pop
sub
daa
fwait
mov
fildl
dec
fisttpll
stos
push
jmp
call
sarb
mov
mov
mov
icebp
hlt
mov
xchg
jbe
ljmp
inc
jne
movsb
pushf
push
mov
out
stc
mov
adc
out
xchg
cmp
push
xlat
stos
and
or
mov
or
xchg
fisubrs
lahf
add
incl
jnp
icebp
ja
jg
imul
imul
fldcw
and
mov
or
jmp
jbe
mov
jnp
pop
jae
pusha
loop
dec
mov
hlt
or
inc
test
lcall
push
add
leave
xchg
ficoml
hlt
pop
sahf
aaa
out
aam
scas
rcl
incl
leave
sub
sub
dec
mov
test
and
push
decl
sub
inc
insl
stos
dec
test
dec
test
pop
fcomp
mov
hlt
mov
add
cmp
push
rcr
clc
call
dec
das
movb
lret
ss
lret
rol
push
divb
add
jmp
inc
inc
xchg
cli
cmp
push
ljmp
and
sti
das
cld
ja
push
addr16
jmp
insb
pop
inc
dec
lcall
jmp
cmp
lods
jle
cs
out
fdivrp
mov
enter
pushl
mov
gs
sbb
movsl
push
stc
sub
dec
mov
out
outsb
inc
inc
mov
lcall
cltd
mov
int
imul
sbb
dec
jle
push
add
imul
ret
stc
incl
cmp
andl
xor
repz
adc
rcrl
inc
push
fwait
incl
sti
in
push
inc
ret
pop
cmp
push
data16
inc
sub
cmc
xor
pop
pop
or
cmp
ret
mov
rolb
jne
cmp
in
imul
pop
mov
loop
daa
pop
scas
xor
push
mov
stos
lock
jg
pop
adc
xchg
into
mov
xor
cmp
jne
xor
call
jg
inc
jle
push
stos
sub
cmc
imul
sti
iret
addr16
hlt
mov
incl
push
pop
sbb
cmp
ret
or
xchg
aad
mov
insb
or
fdivrl
sbb
jbe
movsb
lods
test
imul
cmp
mov
jne
enterw
push
xchg
inc
iret
cmovle
ljmp
jo
shrl
mov
nop
mov
lahf
test
jne
cmp
lcall
pushl
int3
pop
call
aaa
lods
test
inc
pop
or
fstpt
xor
sbb
jge
insb
lret
icebp
out
sub
sbb
in
div
out
mov
hlt
xchg
cltd
cmc
popf
xlat
inc
or
outsl
sub
jns
std
xor
push
aad
in
shrl
mov
pop
clc
das
lods
xchg
scas
mov
call
mov
jg
cmp
sub
cmc
push
outsl
mov
xchg
popf
jge
xchg
hlt
int
shl
sbb
call
xchg
mov
mov
jno
fldt
push
jbe
push
jno
push
add
xor
cmp
data16
push
mov
mov
xchg
xchg
mov
jno
mov
dec
cmpsb
add
gs
shll
shrl
call
sbb
lock
dec
push
xor
test
ficomps
pop
pop
cmp
arpl
ds
jmp
outsl
aas
adc
push
les
leave
lret
sbb
xchg
jl
pop
push
iret
fwait
mov
pushl
mull
mov
dec
hlt
fnstenv
adc
ljmp
jnp
test
mov
or
movsl
dec
xlat
rclb
or
mov
hlt
idivb
js
sahf
aad
mov
mov
adcb
cltd
pop
lea
andb
sbb
insb
mov
insl
xchg
ss
fdivp
bound
decl
scas
sub
mov
int3
push
push
mov
xchg
roll
or
cmp
insb
pop
mov
lret
add
movsb
jns
dec
or
decl
mov
loop
lret
mov
incb
je
out
mov
test
incl
cld
scas
jo
lea
cmp
sub
rorb
out
adc
jbe
push
mov
js
fsubs
dec
pusha
dec
ljmp
clc
in
sbb
scas
pop
addr16
aas
xchg
sub
xchg
push
loop
jne
add
outsb
jmp
out
not
pop
jmp
fwait
adc
jmp
dec
push
push
ret
sub
jp
cmp
mov
mov
or
cmp
sahf
xchg
cld
in
jg
cld
and
lds
push
lret
outsl
mov
inc
or
decl
insl
mov
fwait
sub
fcomip
bound
loopne
mov
ficompl
repnz
mov
ret
cmp
fidivrl
xchg
aaa
add
jmp
or
mov
or
sbb
pop
cli
mov
movsb
xor
and
jl
jo
shlb
scas
fwait
scas
sahf
into
test
or
jns
cmc
fisttps
push
cmp
mov
incl
das
inc
pop
or
test
ret
cs
lods
outsl
mov
test
push
decl
or
popa
push
and
aas
xor
mov
in
fs
adc
ljmp
cmc
mov
arpl
insl
jb
jnp
loopne
std
jg
push
push
outsb
inc
nop
ja
lret
pop
jle
sub
mov
cmp
aad
dec
aaa
arpl
sahf
call
js
sar
pushl
jecxz
jp
xor
mov
adc
jnp
push
loop
or
clc
fidivs
ljmp
ret
and
negb
out
sub
test
sti
ljmp
pop
cmp
dec
bound
pop
add
movsb
xchg
add
or
sub
lods
les
push
push
add
mov
fcoms
daa
hlt
jb
dec
lods
push
push
mov
cmc
sub
iret
popa
decl
fcompl
bound
shrb
jmp
or
addl
ret
sbb
dec
cmp
stos
pop
and
cmp
inc
push
out
in
push
xchg
xchg
and
in
pop
test
mov
lock
or
lods
pop
xor
das
xchg
incb
adc
iret
mov
fiaddl
xchg
aas
push
fs
cs
iret
les
cltd
push
sbb
dec
xorb
lods
sub
fsubs
or
sbb
jb
insb
rcrl
imul
jmp
cs
xchg
in
popf
dec
cmc
cmp
call
mov
mov
clc
fisttps
or
hlt
mov
jmp
pushl
and
jp
mov
aad
push
inc
dec
iret
jo
lcall
inc
ret
daa
adc
push
stos
jo
scas
mov
std
jge
or
test
mov
xor
pop
mov
push
cli
sub
xchg
addr16
add
cmp
jmp
test
je
cs
or
es
sub
imul
cs
xor
pop
ja
lret
das
lahf
push
cmp
inc
add
jg
imul
jnp
mov
or
mov
cmp
add
add
loopne
jmp
incl
call
sub
int3
aam
je
push
loopne
sbbb
mov
mov
cmp
or
jne
and
mov
pop
enter
fisubrl
out
mov
pop
int3
in
icebp
test
push
xchg
mov
loop
cld
scas
or
test
or
xor
lods
add
add
jecxz
cli
push
mov
ljmp
push
or
testl
xchg
push
xchg
lock
ret
pushl
leave
ret
jle
cwtl
js
addr16
push
in
jp
xchg
lcall
dec
xor
or
push
xor
lods
mov
daa
repz
jmp
call
popf
mov
ja
push
mov
and
xor
or
inc
fisttps
insb
mov
sbb
mov
ficoms
cmp
xchg
ds
int3
pushf
popa
mov
xchg
decl
dec
or
rorl
adc
mov
xchg
pushf
mov
shl
jg
test
es
mov
cmp
dec
xchg
inc
mov
sti
jnp
sahf
jne
idivb
or
mov
push
fdivl
ds
xchg
int
cs
int
loope
pop
lods
xor
and
pop
test
xchg
cmp
mov
push
shrl
add
inc
frstor
shlb
adc
int3
in
cmpsb
jno
ljmp
add
or
or
mov
mov
sbb
icebp
cmp
mov
xor
jg
add
push
cmp
aam
jmp
stc
sbb
fsubp
or
in
sbb
repnz
inc
nop
out
and
ljmp
jmp
sub
push
lret
cmp
scas
out
mov
cmp
sub
mov
dec
push
icebp
js
xor
es
fists
pop
push
push
inc
jge
push
dec
dec
mov
jl
mov
mov
inc
dec
cmp
cmp
or
lahf
mov
imul
decl
into
add
popa
and
adc
push
stos
int3
out
movsl
sar
and
pop
adcb
movsl
decl
roll
mov
cmp
out
aaa
jle
ret
and
mov
icebp
or
decl
xchg
hlt
sub
pop
push
iret
iret
pop
sbb
decl
pusha
mov
in
je
xchg
cmp
test
pop
inc
mov
add
cld
jg
inc
clc
sbb
xchg
xchg
mov
mov
ljmp
fnstenv
lods
sbb
stos
cltd
outsl
arpl
ficoml
sub
repz
fistl
xchg
out
pop
pop
and
mov
cmp
jb
popa
test
mov
cwtl
arpl
scas
push
clc
sbbb
xchg
lea
dec
jge
or
xor
clc
incl
scas
jg
and
push
push
mov
mov
adc
pop
inc
clc
out
jmp
std
mov
mov
mov
sbb
sahf
stc
adc
decl
lods
call
push
push
outsb
loop
int3
push
mov
or
sbb
loope
notb
fcomip
lahf
jp
sti
push
fidivrs
jnp
cmp
lods
sub
cltd
loopne
insb
jmp
clc
cmp
pop
add
int3
jg
sbb
push
cwtl
sub
dec
sti
pop
out
fdiv
popa
xor
imul
icebp
gs
xchg
push
mov
rorl
xlat
daa
mov
stos
ljmp
imul
rol
subl
inc
add
aas
je
jno
or
fbstp
scas
dec
sbb
outsb
stc
mov
arpl
add
shlb
xchg
xor
movsb
insl
repnz
gs
loopne
pop
and
jge
or
and
inc
xchg
cmp
daa
or
xor
lcall
fstl
jo
sti
test
push
shlb
push
inc
mov
scas
sti
xchg
xchg
leave
jmp
orb
leave
jmp
sub
bound
iret
mov
sbb
xchg
cmp
lock
xor
lahf
pushf
leave
scas
pop
cltd
xor
dec
inc
test
shr
fistps
sub
lret
cmp
jg
push
dec
mov
lds
je
iret
mov
or
xchg
incl
cwtl
addr16
sbb
adc
pop
lcall
mov
mov
lcall
jge
fsubrs
and
pop
icebp
jnp
add
in
sbb
inc
add
clc
or
push
dec
cld
add
adc
mov
pop
adc
cmpsb
in
mov
jmp
daa
push
pop
pop
jno
incl
jle
lcall
ret
xor
adc
xor
data16
or
or
jnp
pop
loop
bound
mov
addr16
jge
fdivl
jp
cld
adc
adc
mov
cmp
decl
xor
sbb
or
cmp
test
sbb
or
push
sbb
jl
mov
cld
data16
dec
lahf
popa
add
adc
jmp
push
sub
mov
push
cli
sahf
push
popa
jg
mov
jg
fcmovu
dec
mov
xchg
repz
ljmp
outsb
jle
jge
cmc
sahf
ljmp
out
sub
jg
dec
sub
ss
add
push
repnz
insb
adc
adc
lcall
movb
out
mov
mov
mov
adc
sub
scas
fwait
imul
cmc
jo
data16
xor
lods
lods
cmp
in
mov
lods
movsl
xchg
sub
pop
sub
dec
lods
xor
movsb
push
xchg
pop
push
xor
mov
fcmovnbe
outsb
dec
in
std
push
inc
and
mov
incl
fidivl
std
dec
lock
shll
jns
ficomps
and
mov
out
jmp
filds
mov
jns
cli
mov
dec
es
into
outsb
push
lds
shlb
jl
xchg
lahf
inc
sbb
movsb
or
pushl
cmpsl
mov
push
lock
dec
push
addl
call
stc
repz
repnz
mov
jp
testl
arpl
sti
call
push
add
ljmp
push
sbb
and
mov
push
lds
and
decl
and
ss
popf
mov
cmp
mov
lahf
lock
decl
mov
inc
xchg
jge
and
adc
add
clc
hlt
loope
dec
lret
inc
std
repz
js
pop
mov
adcb
push
mov
fstps
pop
mov
test
xor
dec
jne
sub
add
out
orl
xor
push
or
and
repnz
lcall
mov
mov
or
and
out
inc
sbb
pop
inc
shrl
lds
xchg
mov
jmp
ljmp
adc
jne
lods
dec
std
sbb
aaa
movsl
mov
mov
lcall
jecxz
insb
mov
sti
jecxz
dec
mov
scas
dec
xor
enter
mov
or
jae
pop
dec
in
in
adc
jge
or
mov
outsb
fnstsw
jmp
ret
cmp
test
push
int
xlat
test
xor
mov
clc
ja
jbe
fchs
xchg
fstps
cmp
rolb
cmpsl
pop
mov
mov
mov
std
adc
push
cmc
cwtl
mov
mov
loope
jnp
mov
sbb
loop
flds
add
sahf
nop
ljmp
or
mov
sbb
push
add
jmp
cld
cmp
cld
sbb
push
dec
ficomps
ja
bound
fbstp
out
call
mov
inc
andl
mov
jo
ljmp
sbb
cli
mov
popl
mov
jo
shll
push
add
or
decl
sub
into
test
mov
rcl
cld
add
ret
mov
adc
out
mov
and
test
pop
scas
aas
push
adc
push
cmp
mov
orb
fwait
jge
inc
cmp
push
and
adc
pop
call
sti
jae
inc
in
shlb
test
inc
or
push
mov
pop
and
jbe
pop
mov
pop
scas
pusha
int
iret
aad
and
scas
mov
cmpsl
aam
and
cmp
scas
lcall
test
fldt
imul
sbbw
mov
jmp
cmc
xchg
or
sbb
xchg
jge
mov
sbb
test
loope
lcall
add
mov
pop
rol
adc
cld
push
mov
sub
fcomip
cmp
int3
sub
into
mov
fsubrp
cmp
pushl
cmpsl
mov
or
cmp
scas
test
push
dec
push
dec
cmp
ret
cwtl
data16
daa
ficoml
das
sar
dec
sbb
push
fwait
cmp
les
mov
xchg
xor
jmp
fiaddl
out
data16
push
ret
pop
xchg
and
jb
pop
lock
fwait
mov
call
xchg
loop
sbb
ss
inc
out
cmpsl
xchg
mov
mov
ljmp
inc
dec
fisubrs
xchg
pop
mov
pop
inc
mov
lcall
pop
in
xchg
push
pop
cld
or
jno
clc
outsl
sub
out
mov
cmp
lret
out
cli
call
mov
bound
dec
das
jbe
xchg
mov
jg
mov
ljmp
data16
push
popf
push
cmpsb
out
and
fcomip
jne
jge
stos
inc
rcrb
jl
pusha
pushl
dec
dec
pop
inc
out
ret
mov
scas
sub
pusha
inc
pop
cmpsb
jecxz
in
incl
pop
cwtl
inc
pop
pop
pop
fbstp
mov
jecxz
pop
ret
mov
xchg
cli
fcmovu
or
mov
cmp
dec
push
cli
decl
std
enter
fidivrs
jmp
ja
inc
cmp
rcr
xchg
mov
shlb
fwait
sbb
dec
btc
jmp
test
and
lahf
les
fmuls
push
mov
fdivrs
mov
dec
dec
jmp
mov
test
pop
outsl
cmp
dec
and
data16
popa
and
or
push
mov
xor
inc
adc
or
pop
ds
incl
stc
sub
mov
sub
or
mov
dec
inc
loopne
push
cld
mov
cmpsb
ljmp
cmp
push
lret
mov
push
stc
inc
ret
jmp
pop
sub
ljmp
rcrb
lret
hlt
sbb
jp
lods
or
bound
sub
adc
test
sbb
lds
ljmp
pop
test
push
jg
or
add
stc
loop
push
test
mov
jg
je
jmp
lret
jg
jb
cmp
push
popa
dec
add
mov
xor
mov
loope
mov
jle
int
cwtl
out
mov
and
pop
pop
cmp
lcall
fmull
sarb
mov
inc
hlt
loop
imul
lahf
addr16
iret
jg
sbb
pop
cmp
hlt
iret
imul
cltd
jb
es
incl
mov
insb
xor
bound
rorl
fdivp
push
filds
cmp
hlt
lcall
das
outsl
pop
les
in
cmp
and
adc
pop
jae
and
jns
ja
mov
inc
lds
jo
sub
pop
dec
mov
jmp
xchg
dec
dec
subb
sub
nop
add
xlat
push
fstl
loopne
mov
arpl
aam
ret
test
mov
jle
jnp
mov
sbb
js
f2xm1
xchg
test
lods
rcrl
push
cmpsl
test
ljmp
mov
scas
mov
push
repnz
in
lods
divb
sub
adc
pop
mov
adc
jbe
test
stos
push
dec
icebp
mov
jne
dec
sub
add
dec
outsb
ret
push
sub
pushl
dec
in
outsl
loopne
repnz
mov
lcall
cld
and
pop
mov
xor
xchg
test
inc
sub
ja
mov
ret
sub
filds
lods
pop
or
mov
jae
push
jle
stos
pop
ds
sub
int
call
ret
rolb
cmp
in
outsb
fsubp
adc
lds
je
enter
mov
cmp
sub
pop
cli
push
xchg
pop
fucom
fstl
lcall
imul
fcomip
dec
dec
ffreep
push
xchg
ljmp
mov
insb
andb
fisubrl
dec
cmp
call
test
mov
inc
and
lcall
jne
xor
xchg
mov
aas
push
fildll
mov
cli
or
inc
sahf
call
jo
lret
fbld
shrl
popa
imul
dec
mov
jle
and
call
insl
leave
adc
iret
adc
xchg
jl
and
mov
pop
jmp
lret
mov
cltd
inc
mov
jnp
loope
dec
push
or
outsl
mov
mov
lcall
adc
sbb
je
mov
fbld
push
fs
out
pop
sbb
adc
in
sahf
aaa
std
ljmp
xor
push
push
mov
xchg
clc
add
adc
in
aad
aam
dec
xor
inc
inc
movsl
or
jns
jge
mov
stos
cmp
call
cs
pop
out
push
mov
testb
cmp
fcomip
fstp
test
ja
xchg
cli
inc
in
cmpsb
iret
hlt
dec
pushf
mov
pushf
mov
call
jmp
inc
jecxz
push
out
rcll
repnz
mov
loop
leave
sub
clc
mov
loop
cmp
xchg
notl
cmp
fistpll
and
test
lret
ljmp
scas
push
jmp
lods
cmpsb
push
cmp
push
mov
bound
insl
cmp
and
test
inc
roll
repnz
shrb
or
jmp
jmp
jo
mov
cld
sbbb
sub
imul
pop
scas
xor
incl
mov
adc
mov
mov
outsb
stc
xchg
stc
js
adc
fsubrs
shl
es
incl
movsb
dec
es
xlat
dec
sbb
js
popf
icebp
xchg
push
xchg
cmp
repz
cmpsl
mov
jge
or
push
test
jmp
cli
outsb
xchg
fistpll
cmpsb
ds
mov
in
clc
mov
or
lcall
jns
test
dec
sbb
lock
xor
scas
mov
xchg
mov
mov
jne
fdivr
pushl
pop
in
pop
ficompl
loop
sub
clc
mov
roll
out
les
push
sahf
jp
lcall
mov
mul
aad
mov
adc
pop
fxch
stc
cmpsl
ljmp
dec
pop
xorb
cld
fdivs
or
sub
jns
ficompl
add
mov
loope
jns
je
repz
cwtl
test
insb
or
out
loope
fsts
or
pushl
jno
inc
or
cmp
and
xchg
mov
dec
xchg
lods
sub
pop
add
call
pop
jp
sbb
and
outsl
adc
jmp
pmuludq
leave
fistps
or
or
incl
dec
cmp
sti
pop
setge
pop
ret
mov
nop
in
popf
aam
xchg
lret
push
push
mov
mov
cmp
push
adc
inc
push
mov
jg
push
cmp
cmp
ss
outsb
call
int
repnz
test
mov
mov
add
mov
fwait
sub
mov
and
leave
insl
jbe
pop
lcall
fs
js
lret
pop
jmp
pop
int3
inc
repnz
leave
or
xor
mov
cmp
decl
nop
lds
hlt
andb
fisubrs
dec
add
add
ljmp
fwait
ljmp
or
clc
inc
jecxz,pt
negb
lods
imul
push
popf
mov
mov
das
pop
inc
xor
dec
xchg
sub
jmp
test
decl
shll
lret
pop
repnz
loopne
jge
out
bound
pop
repz
ljmp
jb
jno
sub
adc
lods
cmpsb
jecxz
mov
pushl
push
shll
sar
sbb
out
scas
das
dec
lahf
fwait
ret
shr
push
inc
jecxz
sbbb
stos
in
dec
lock
pop
adc
cmp
rcl
out
into
push
leave
add
jg
jbe
pop
cmpsl
xor
pop
xchg
sub
inc
mov
jae
ret
dec
int3
decb
cs
jmp
pop
adc
addr16
int3
cmpsb
or
rorb
incl
sub
jae
or
inc
ret
mov
fs
scas
mov
and
aas
cli
xchg
test
pushl
daa
pop
cmp
sbb
insb
pop
jae
pusha
fwait
lret
mov
add
sbb
negl
push
and
cmp
xchg
push
daa
stos
out
repz
jae
test
add
cmpsl
fidivrs
dec
lret
test
scas
ret
pop
sub
sarl
stc
sub
fidivs
cld
pop
push
loop
push
hlt
adc
and
outsl
cmp
shll
mov
jno
mov
mov
jl
rcrb
jne
cmpl
mov
lret
movsl
push
push
fbstp
add
fwait
lcall
push
or
jecxz
xor
or
enter
jg
lds
ja
data16
add
js
sbb
and
xchg
inc
cmp
adc
inc
xchg
ja
cli
cmp
cwtl
xor
inc
inc
sbbb
ficoml
mov
int
push
jno
ja
xor
popa
in
mov
cmp
loope
push
pop
mov
mov
and
add
jmp
pop
inc
fbstp
or
lcall
stos
jnp
adc
push
xchg
out
mov
inc
in
mov
inc
mov
shll
cmc
jecxz
pop
rcrb
fcompl
sbb
xchg
shlb
pop
dec
sub
fbld
pop
inc
and
or
and
in
mov
data16
jnp
jg
add
xchg
lret
inc
mov
pushl
movsb
and
movsl
mov
push
mov
push
fstps
mov
call
decl
jo
sarb
sub
jle
fmul
outsb
sub
in
fnstenv
adcb
aas
mov
fistpl
pop
fs
inc
test
mov
call
sbb
inc
push
xchg
dec
inc
shll
xchg
loopne
mov
mov
mov
fs
push
pushf
scas
jle
push
clc
sub
pusha
ja
xchg
sti
and
pop
xchg
bnd
cli
decl
data16
or
mov
fsubl
and
cmp
push
test
into
adc
push
sub
inc
test
sub
xor
push
dec
addr16
imul
out
sbb
sbb
xor
incl
jb
push
adc
lret
pop
pop
in
fidivs
cmc
push
mov
inc
sbb
mov
sub
dec
std
xchg
ljmp
mov
into
daa
sub
cld
decl
adc
adc
mov
icebp
test
gs
adc
insb
pop
mov
jg
and
adc
cmp
pop
push
arpl
cli
jns
mov
enter
in
mov
in
ljmp
test
cmp
lret
pop
adcb
imulb
lock
mov
lock
scas
imul
or
dec
dec
jb
push
push
push
xchg
dec
jg
jnp
insl
jl
dec
pop
movsl
loopne
outsl
clc
adc
into
cmp
or
pop
loop
dec
cmp
decl
lods
inc
fsubr
cltd
les
adc
push
jmp
adc
add
pop
inc
test
mov
sahf
push
decl
stc
cmpsb
nop
cwtl
jb
wbinvd
outsb
cmpsb
icebp
cld
jg
andl
dec
cmp
pop
clc
inc
dec
incl
pop
loop
stc
push
aad
pusha
xchg
push
add
sbb
pop
or
cmp
stc
sahf
push
lahf
aaa
pop
adc
dec
add
arpl
fnsave
add
aam
loope
inc
test
xchg
fsubs
or
imul
and
inc
add
fbld
ljmp
xor
and
mov
push
adc
out
dec
xchg
scas
std
mov
insb
loopne
or
outsl
sti
jae
add
repnz
fcomip
and
insb
fstpl
sub
jle
xchg
dec
popa
test
jae
xchg
dec
lcall
insb
scas
int3
ret
movsb
pop
stc
jb
je
mov
mov
in
cmpsl
push
mov
mov
bound
push
movsb
cli
pop
les
ljmp
insb
idivb
cld
xchg
sbbb
test
cs
jmp
out
in
incl
cmp
cmp
shrl
imul
pusha
out
push
mov
and
iret
mov
loop
xchg
loopne
sti
loope
cs
mov
aaa
rolb
sub
test
inc
jle
loope
xor
add
cmc
repz
mov
decl
push
mov
stos
cmp
scas
out
stos
loope
stos
fcmovne
aad
and
mov
push
in
repnz
push
dec
imul
add
das
clc
jg
pop
mov
mov
mov
int3
add
xchg
call
cld
mov
add
sbb
xchg
pop
jl
out
popa
fidivrl
mov
fsubp
pusha
push
xor
adc
decb
xchg
fmull
cmpsb
out
loope
jmp
cmpl
popa
rorb
sarb
loopne
adc
sarl
lods
call
decl
es
pop
rcrb
mov
xchg
scas
cli
fmull
or
call
nop
ljmp
mov
pop
imul
clc
inc
sar
or
sbb
daa
ss
cmc
stos
popa
or
mov
sar
jbe
pusha
loop
mov
jl
faddl
leave
loop
pushl
mov
mov
push
dec
lock
arpl
and
cmp
call
sbb
in
imul
cmp
loopne
lock
push
mov
outsl
and
mov
mov
or
pop
loopne
adc
cld
out
mov
cmp
mov
mov
incl
mov
outsl
out
cs
jle
cltd
call
out
adc
es
push
xor
aaa
or
test
lods
test
mov
cmp
lcall
loop
out
arpl
mov
pop
mov
jmp
jl
xchg
jg
add
daa
loop
pushl
or
inc
sbb
pop
flds
push
mov
sar
jnp
fwait
push
lcall
dec
test
jnp
and
push
sbb
adc
loopne
stos
mov
mov
mov
inc
xor
lea
sahf
mov
cmp
or
lock
aam
cmp
sbb
mov
jecxz
dec
mov
repz
push
jecxz
call
xchg
das
sub
sub
pop
sbb
loope
mov
in
cmp
mov
push
xchg
lret
pop
mov
test
mov
lcall
mov
cs
ret
xchg
adc
add
and
sub
mov
incl
stos
lret
loope
dec
lcall
jge
or
aam
jne
pop
pushl
rorb
popf
xchg
adc
sub
mov
lods
clc
sub
or
xchg
mov
lcall
cmc
inc
fcoms
roll
dec
and
jg
out
cmp
fmuls
jnp
cmpsb
jg
inc
jb
xor
cs
inc
rcl
dec
sbbb
sub
ljmp
push
and
sbb
xchg
shr
out
sbb
incl
ret
fimuls
cmp
cld
repnz
or
clc
repnz
in
pop
cs
jns
mov
xchg
mov
pop
xchg
xchg
mov
xlat
sar
jg
mov
sub
aaa
in
sub
mov
cmpsb
push
cmp
cmp
out
adc
mov
mov
aad
gs
jmp
hlt
cmp
fidivs
dec
pop
pop
loop
sbb
dec
mov
mov
iret
ret
mov
inc
push
repnz
or
std
cmp
pop
xchg
pop
lcall
mov
leave
xor
pop
adc
in
mov
mov
into
pop
js
imul
cwtl
cmpl
repz
mov
dec
lea
in
inc
dec
pop
in
call
mov
ljmp
pop
push
stos
repz
pushf
dec
fwait
enter
adc
inc
scas
xchg
rcll
inc
cli
xor
dec
cmpsb
xor
sub
dec
cmpsl
je
cli
inc
jl
mov
jmp
out
cld
xchg
loope
pop
jle
sub
or
push
iret
inc
in
test
int3
testb
ja
loop
fld
lcall
sahf
test
adc
mov
les
and
lods
lretw
stos
add
fwait
out
sub
cs
rorl
test
cld
incl
movsl
adc
jp
dec
addl
loop
andb
dec
icebp
ljmp
mov
jmp
dec
hlt
dec
mov
jmp
ret
and
out
pushf
xchg
mov
idiv
mov
xchg
sbb
jmp
or
sahf
mov
xlat
adc
jmp
filds
xorl
push
cmp
push
push
outsb
outsb
ror
or
adc
xchg
sbb
inc
pop
jae
adc
xchg
add
cmp
pushl
lcall
cmpsl
or
fadds
inc
inc
adc
je
es
dec
in
fbstp
sbb
mov
jo
ss
sbb
inc
adc
stos
pushl
iret
loop
ja
push
dec
lock
jb
jmp
daa
add
jo
fsincos
adc
xchg
cmc
dec
mov
cmp
lret
movsl
or
mov
and
xchg
xchg
out
and
bnd
mov
ljmp
jg
repz
add
imul
xor
mov
and
sti
fcomip
les
imul
push
fldl
fstpl
inc
mov
sub
mov
es
test
inc
mov
mov
aam
xchg
lret
aas
addb
sub
lcall
nop
pop
push
inc
sub
hlt
shrb
xchg
sbb
mov
mov
mov
pop
loopne
inc
inc
sub
popf
xorl
movsl
incl
push
or
cmp
popa
or
dec
scas
pop
add
cli
pop
mov
dec
inc
mov
pop
cld
clc
or
cmpsl
addr16
hlt
stc
fsubr
mov
outsb
sub
incl
adcl
mov
xchg
ss
lcall
repnz
cmp
out
mov
hlt
test
push
mov
lods
mov
movsl
jo
clc
pushl
imul
mov
icebp
jl
fs
addb
incl
out
call
and
mov
cltd
jp
add
out
iret
stc
aad
xor
jp
cmp
jae
push
and
int3
mov
mov
out
loopne
ljmp
adcb
cs
mov
iret
into
pop
jnp
mov
mov
sahf
mov
rcrl
add
loope
jae
xor
call
jnp
scas
pop
push
mov
xor
shrb
std
jg
test
fmulp
mov
mov
or
std
push
dec
cmpsb
dec
lods
addr16
jmp
cmp
mov
adc
leave
mov
movsl
pop
dec
in
dec
inc
rclb
ret
push
stos
xor
mov
fisubrl
test
mov
out
nop
adc
jmp
jge
rcrb
ljmp
sub
loopne
fwait
jns
sbb
test
iret
jbe
cmp
add
addr16
pop
addr16
mov
decl
mov
mov
mov
sub
decl
scas
mov
and
and
fs
pop
lds
xor
into
xor
pushf
loopnew
shrb
push
call
xchg
ja
hlt
xor
inc
iret
scas
sti
out
decl
int
mov
les
sahf
imull
mov
mov
aad
lods
jnp
aas
inc
jl
mov
arpl
aaa
testb
mulb
jne
xchg
fsub
push
dec
loopne
jg
cmp
jecxz
fmull
sti
ret
sbb
mov
ljmp
jge
pushl
xchg
int
pusha
out
mov
push
jp
or
jle
pusha
mov
mov
lcall
and
data16
inc
cltd
and
mov
mov
movsb
cwtl
cmpsb
fsubs
popa
dec
jno
cmpsb
imul
aaa
ljmp
xor
sub
xchg
mov
stc
in
lcall
jg
jp
pop
stc
push
stc
inc
stc
pop
cmp
jl
je
out
add
inc
inc
mov
jg
push
or
out
inc
fdivr
lcall
mov
inc
lret
in
mov
jns
jmp
xchg
xlat
xchg
mov
xchg
outsl
xor
call
jbe
lahf
xchg
push
push
arpl
fldl
in
inc
xor
push
add
inc
popf
shlb
add
or
sbb
fiadds
outsl
scas
fdiv
inc
in
shlb
cld
testb
inc
or
incl
cmp
cmpps
xchg
dec
adc
push
rolb
inc
test
push
sbb
sti
or
call
out
push
and
test
shr
dec
pop
es
aad
xchg
add
aam
mov
test
test
test
mov
adcl
xor
cli
stc
jns
loope
and
jge
add
adc
xor
pop
stos
sbb
iret
mov
fstpl
out
push
mov
inc
jp
pusha
out
subl
pop
sbb
push
inc
fidivs
es
mov
mov
scas
in
sbb
rcl
inc
fwait
add
push
pop
xchg
fsubs
sub
lcall
inc
adc
xchg
test
mov
stos
and
sahf
mov
in
pushl
jmp
movsb
or
cmpsl
mov
test
cmpb
and
add
ret
std
or
enter
loopne
outsl
push
push
push
repnz
sbb
pushl
sbb
sub
adc
dec
and
sbb
dec
mov
and
jbe
jmp
mov
mov
lcall
pushl
std
jae
fcompl
mov
gs
xor
sarb
lcall
mov
sub
loop
fnstenv
xchg
push
xor
cmp
jmp
or
fldenv
cmpsl
fstps
jnp
and
xchg
pop
stos
sbb
mov
or
mov
jl
inc
fwait
sbb
enter
push
jl
into
or
and
mov
pop
mov
jmp
incl
rcll
mov
je
sti
rorl
mov
hlt
pusha
clc
jmp
ljmp
pop
sub
test
sahf
js
shll
push
sbb
jl
cmp
mov
sbbb
call
push
lret
loope
mov
inc
fbld
jae
jae
mov
xor
out
incl
jo
sti
mov
adc
outsl
sub
imul
ljmp
gs
inc
into
xchg
mov
jo
push
xchg
mov
mov
dec
cmpsb
jo
call
add
fidivrs
icebp
dec
pop
movsb
lods
push
lea
push
ss
mov
inc
ja
pushl
or
imul
sub
mov
jmp
cmpsb
loope
arpl
shrb
outsb
sub
sbb
daa
ss
fdivrp
inc
pop
pushl
setp
adc
ret
test
dec
sub
sarl
dec
or
scas
mov
scas
sub
push
gs
repnz
mov
stos
movsb
into
xor
movsb
repnz
repnz
repnz
repz
outsl
xor
jmp
mov
sub
dec
xchg
fcompl
or
mov
or
sub
ljmp
add
xor
inc
sub
stos
pop
jo
xchg
mov
pop
mov
mov
xor
aas
cmp
aam
std
inc
leave
clc
ds
jle
or
dec
sbbb
pop
adc
stos
icebp
adc
jle
xor
jmp
popl
push
icebp
inc
rorb
inc
lds
je
cmp
inc
mov
test
ljmp
cmovae
inc
adc
mov
jns
adc
xchg
ljmp
push
idivb
pop
sub
cmpsb
jmp
adc
movsl
mov
adc
in
sbb
mov
add
jl
inc
push
cmp
and
jb
inc
decb
in
call
push
pop
lret
jnp
add
jle
push
adc
mov
fwait
xchg
push
mov
idivl
call
clc
pop
test
inc
sbb
loope
call
cmp
hlt
pop
push
lret
sbb
hlt
clc
jle
mov
cmp
mov
imul
leave
cmc
popf
dec
pop
lret
lods
xchg
push
dec
push
movsb
lret
xchg
cmp
push
inc
fcos
ljmp
aam
push
push
and
mov
xchg
out
xchg
jne
popa
sub
pop
pop
adc
push
adc
incl
jbe
mov
maskmovq
mov
push
enter
and
testb
cmp
loopne
ficompl
push
enter
add
ljmp
mov
imul
cmc
add
clc
inc
aas
cwtl
repz
lcall
test
mov
mov
pop
orb
dec
pushl
or
mov
inc
icebp
in
xor
test
dec
cmp
jb
lcall
decl
cmp
hlt
mov
sbb
jmp
test
incl
scas
ret
int
out
loopne
iret
sbb
sarb
stos
mov
cmp
dec
dec
outsb
xor
inc
jb
jnp
movsl
cmp
push
cli
push
push
push
insl
inc
lcall
mov
sub
push
add
push
push
insb
xor
rcll
sbb
ljmp
xchg
mov
fisubl
sbb
popa
mov
enter
fwait
add
je
es
data16
jg
cs
ljmp
in
add
push
jno
mov
sub
rolb
cld
incl
addb
push
or
push
push
imul
icebp
fbstp
dec
mov
inc
fcoms
dec
ss
mov
mov
filds
mov
mov
insl
adc
inc
js
inc
add
pushl
mov
fdivr
out
pushf
cltd
jnp
push
mov
cmp
xchg
cltd
mov
cmp
outsl
add
imul
add
in
arpl
call
std
dec
iret
jns
or
int
push
mov
add
pop
lcall
push
mov
and
test
cmpl
dec
pop
push
enter
jmp
xchg
jp
cmp
sub
mov
adc
cwtl
or
pop
ja
push
push
clc
push
test
cmp
fst
jle
push
sarl
jmp
mov
xchg
into
jae
xor
jb
test
clc
decl
mov
sti
inc
cmp
pop
cmc
push
test
test
imul
mov
jnp
sbbl
lcall
and
sbb
xor
test
cmp
aam
lcall
cmp
push
ret
and
mov
jg
pop
out
pop
js
jg
addr16
mov
or
icebp
mov
cld
mov
int
xchg
fstpt
xchg
out
xlat
iret
inc
dec
add
into
sub
lods
mov
xchg
imul
sbb
fidivl
insb
xor
lcall
cmp
mov
fadd
iret
xlat
mov
shlb
insb
movsb
cvtpi2ps
call
movsl
mov
andl
mov
lahf
mov
mov
jo
adc
push
pop
xchg
push
cld
sarb
movsl
inc
sub
sub
jp
enter
dec
nop
mov
fs
scas
shll
add
in
pushw
lcall
dec
in
negb
scas
test
ljmp
push
rcrb
xchg
lahf
mov
mov
das
sar
inc
mov
testb
int
mov
shl
xorl
dec
int3
xchg
jmp
push
push
mov
ret
cli
imul
xchg
adc
xor
fcomp
pop
movsb
sbbl
int
orb
inc
es
inc
jmp
mov
sbb
pop
jl
mov
bound
pop
cmp
jns
jns
icebp
inc
das
std
or
fiadds
jnp
jno
fisttpll
cmp
adc
int
je
scas
cmpsb
sub
ljmp
and
sbb
pop
mov
and
fwait
dec
cmp
mov
shrb
cmp
add
enter
xor
cmp
call
adc
jns
sbb
scas
sbb
jecxz
dec
add
inc
and
in
das
cs
cmp
pop
jns
sahf
dec
test
dec
jmp
imul
push
aad
inc
sbb
fcomip
ljmp
pop
xchg
dec
repz
iret
sahf
rcr
cmp
jg
sbb
das
inc
sti
or
xor
loop
test
mov
mov
cld
cmp
adc
jp
inc
movsb
push
fldl
mov
ss
decl
es
movsl
subl
bound
mov
pop
cmpsl
stos
mov
fdivrp
pushl
bound
and
push
jb
add
mov
arpl
fidivrl
sarl
mov
and
and
ljmp
pop
orb
mov
and
cwtl
lds
inc
add
jg
test
cmpsl
push
add
mov
xor
mov
jb
cld
dec
mulb
adc
xlat
sbb
stos
cmpsb
jg
into
dec
cwtl
xor
pop
out
jo
lret
daa
jae
fistps
dec
sub
adc
repz
fucomi
clc
push
cmp
xlat
cmpsl
andl
mov
push
pop
subb
mov
out
out
mov
lcall
lods
fldl
mov
ss
xchg
mov
or
notb
push
sub
ret
imul
stos
je
push
outsl
lcall
shl
adc
dec
es
inc
inc
fadds
data16
jg
mov
jnp
gs
pop
movsb
mov
ss
ljmp
sti
mov
das
aaa
cmp
pop
stc
repnz
hlt
jmp
jne
jge
dec
ja
movsl
icebp
notl
mov
inc
lret
jg
testl
aaa
sysexit
sahf
call
adc
jno
ljmp
inc
test
adc
lock
jae
mov
cli
push
adc
rcrl
imul
fs
cmp
test
adc
pushl
aas
cmp
lea
mov
jecxz
popa
nop
cli
jg
shll
ss
int
test
clc
in
mov
pop
sbb
xor
sbb
decl
out
repnz
mov
incl
jns
pop
push
imul
shlb
sub
push
sbb
es
adc
jb
popa
in
data16
call
mov
les
xchg
push
icebp
sub
dec
fdivs
xchg
loopne
sub
in
xor
loopne
mov
int3
add
cmp
aas
idivb
inc
cmp
and
xchg
in
mov
fiadds
jmp
push
pop
inc
out
mov
cli
jp
bound
pop
dec
inc
xlat
es
dec
shlb
cwtl
daa
lds
mov
fbld
pop
rolb
jecxz
mov
sbb
enter
scas
sub
stos
in
jo
ficoms
push
inc
stos
mov
mov
cmp
call
fcompl
gs
xor
in
test
sarl
add
ljmp
repnz
push
pop
orb
decl
pop
mov
add
sub
fdiv
insl
pop
ret
jle
and
pop
jne
lea
jecxz
xor
ljmp
out
lahf
outsl
dec
mov
scas
aas
imul
mov
jmp
or
mov
ret
fsubp
mov
incl
sbb
jnp
lods
addb
loopne
mov
in
ret
ret
sahf
loope
fcomps
or
cmp
arpl
iret
insb
add
lock
jecxz
in
stos
ficoml
xchg
sub
add
mov
int3
and
dec
mov
xchg
fistpll
mov
jbe
fadd
shr
jg
sbb
xchg
sbb
xor
xchg
xchg
out
lret
out
cmc
or
xchg
mov
mov
out
clc
add
inc
imul
aad
lock
aaa
sbb
sahf
mov
aam
sbb
js
pop
ja
loope
insb
in
testb
ljmp
cmpl
jmp
jl
lods
cmp
lds
cmp
cmp
scas
aas
add
adc
push
stc
inc
fsubl
lds
dec
test
call
push
xchg
inc
out
inc
xchg
in
pop
shrl
inc
xchg
int3
loopne
out
imul
dec
hlt
lcall
ljmp
xchg
adc
inc
pop
in
repz
int3
mov
adc
cmc
fwait
mov
loope
sbb
jnp
mov
push
dec
jo
mov
aaa
xchg
adc
int3
mov
xchg
jbe
fmulp
fstpt
stos
decl
cmp
sti
out
cwtl
xor
lcall
dec
mov
sub
jae
add
ljmp
mov
lods
fisubs
cmpl
fdivr
decl
icebp
in
call
push
into
popa
scas
stc
mov
pop
pushl
lcall
call
pop
cltd
hlt
out
popf
mov
and
sbb
cmpsl
push
negb
fcos
pushl
ss
std
xor
push
adc
pop
cmp
cs
arpl
push
pop
in
push
hlt
ljmp
cli
in
jo
sbb
inc
movsb
pop
arpl
or
js
lcall
enter
imul
sbb
sbb
cmpsb
shr
jns
xor
push
movsb
repz
jne
decl
daa
cmp
pop
sub
sub
and
push
into
mov
pop
stc
xor
xor
in
fcmovne
sbb
adc
pop
es
popf
jbe
mov
pop
sub
rorb
call
sub
pop
stos
xor
lock
jmp
loop
inc
rclb
jmp
lea
fst
lcall
cs
and
mov
adc
adc
sub
gs
test
int
xchg
xor
sbb
in
adc
jp
or
loopne
iret
enter
cmp
jno
pop
in
pop
jne
scas
dec
add
ljmp
scas
fadd
icebp
addr16
mov
adc
jl,pt
mov
std
inc
inc
paddd
xor
mov
mov
nop
lahf
call
pop
lods
loopne
ljmp
mov
frstor
cli
cltd
add
adc
insb
pop
arpl
fstps
rolb
fdivrp
mov
ror
jp
xor
and
fmul
into
jg
or
repz
paddb
inc
cmp
jecxz
dec
imul
dec
hlt
jmp
xor
das
sar
fmuls
push
les
arpl
xchg
mov
in
lahf
repnz
ljmp
cli
pop
dec
pop
push
adc
js
sti
test
loop
ja
imull
jno
pushl
xchg
sub
jecxz
inc
imul
jo,pt
push
out
pop
lea
inc
ret
vandnpd
sbb
or
inc
sti
les
addr16
sub
call
or
lods
inc
pushf
mov
mov
fucom
xchg
pop
xchg
xchg
sub
inc
cli
dec
and
arpl
xor
aaa
dec
aad
cmpsl
nop
addr16
fcomip
pop
jbe
mov
clc
xchg
fdiv
hlt
sbb
sbb
xor
xchg
call
jl
nop
scas
daa
or
shl
lahf
sbb
jmp
clc
dec
in
sbb
gs
jge
inc
xor
test
je
sub
cmp
mov
mull
mov
mov
xor
pop
jne
incl
dec
jnp
and
push
into
adc
cmp
jmp
imull
outsb
faddl
bound
faddl
adc
mov
cltd
mull
decl
fs
mov
and
out
mov
inc
cmp
bound
inc
mov
fsts
sub
mov
add
out
lock
pop
rclb
inc
mov
femms
stc
ret
dec
jno
popf
xchg
dec
leave
and
or
jg
arpl
xchg
cmp
mov
jne
repnz
std
punpcklwd
adc
in
sar
incl
push
jne
enter
lret
je
lret
mov
decl
sub
and
aam
jmp
xchg
sbb
test
decl
fistps
inc
or
int3
fs
orl
aas
dec
mov
adc
sar
mov
mov
mov
scas
add
cs
push
or
test
jmp
inc
test
outsb
mov
out
pop
das
iretw
sti
ss
int
push
incb
aaa
imul
pop
add
insl
lcall
mov
dec
pop
mov
mov
fwait
xchg
push
fidivrl
mov
or
jne
inc
test
mov
scas
jbe
int
sarb
pop
mov
or
cs
mov
mov
push
test
je
mov
mov
mov
adcb
ret
dec
push
push
scas
jne
lret
fcos
sub
idivb
in
decb
addb
dec
jmp
mov
ja
jbe
out
rorl
call
nop
icebp
jb
fcoms
mov
mov
repnz
jmp
pop
insb
mov
scas
mov
mov
into
hlt
aad
xchg
fs
mov
sarl
cld
out
fistpl
jae
xchg
loop
lcall
test
add
lods
sahf
leave
pop
shll
in
lcall
adc
xchg
sbb
inc
fcompl
fisubl
mov
sub
xchg
aam
in
push
mov
xchg
adc
std
cmp
adc
out
out
je
dec
mov
cmc
rcrl
inc
fbld
push
aad
jl
lds
jbe,pt
xor
int
jmp
dec
inc
out
push
inc
jo
inc
push
insb
cmp
pop
jge
pop
jbe
fidivl
and
ljmp
jo
out
adc
pop
aam
adc
insb
stos
stc
pop
jg
sbb
mov
sub
incl
mov
roll
insl
test
lcall
jb
and
xor
sbb
lock
mov
jnp
cmc
aaa
shll
incl
pop
sub
cmp
pop
rorb
aam
adc
shlb
mov
ret
iret
sbb
out
roll
pop
mov
lcall
fisubl
out
stc
ja
mov
cltd
repz
lock
arpl
insb
int
enter
pushl
inc
sub
shrb
cld
sti
clc
mov
cmc
xor
orl
negb
imul
pop
movsl
mov
jne
iret
lcall
mov
cmpsb
push
movsb
push
or
sbb
or
pop
sub
call
neg
inc
lea
mov
mov
test
rcll
ss
or
and
pop
mov
ffree
insl
mov
cmp
decl
cli
push
lret
insl
rolb
mov
std
pop
pop
lcall
fimull
and
sahf
inc
mov
ds
decl
lret
inc
ret
pop
insb
fdivrs
adc
jbe
push
fiaddl
jbe
jno
aaa
insb
cmp
mov
fiaddl
rcrb
jne
sub
xchg
loopne
call
addl
nop
mov
add
mov
inc
cmp
jge
xchg
xchg
mov
lea
incl
cld
jae
mov
cli
xor
and
repnz
int3
mov
sbb
cltd
js
lea
hlt
and
push
xchg
push
ficompl
push
sub
out
in
pop
lret
incl
mov
sbb
inc
outsb
icebp
sti
test
je
cmp
lcall
das
xor
xor
sub
sarb
adc
xchg
xlat
add
add
xchg
dec
inc
lret
lods
xchg
sub
into
inc
loopne
sahf
fwait
test
jnp
dec
ja
mov
xlat
sbb
incl
sahf
ret
push
lods
popl
cmp
fdivs
xor
lret
imul
sbb
loop
ret
test
pop
xor
inc
or
inc
out
dec
jl
div
xchg
mov
push
notl
sub
ljmp
xchg
sbb
gs
push
pusha
loopne
mov
mov
xor
nop
sbb
mov
ljmp
sub
fucom
mov
fcomps
pop
mov
sti
pop
dec
xchg
in
movsb
xor
call
cmpsl
inc
cli
ret
push
orb
xorl
mov
test
test
fistpll
popf
shrl
cmpsl
mov
jb
fs
clc
out
iret
dec
cmpsl
cwtl
ljmp
jns,pt
ret
sbb
lret
test
and
into
jae
stos
adc
loope
cmp
or
push
jo,pt
adc
mov
pop
loopne
jmp
negl
stc
sbb
sahf
mov
xor
out
subl
jmp
xchg
cmp
shll
fimull
jge
adc
stc
mov
rcrl
cmpsl
add
mov
lcall
push
std
popf
dec
xchg
outsb
jl
or
pop
fcmovb
pop
jne
test
lock
std
cmp
test
cmc
pop
daa
nop
xchg
mov
xor
jle
stos
jns
sar
jg
out
push
das
sbb
test
jo
mov
jg
out
cmp
decl
out
xchg
ds
imul
sub
xor
aad
xor
jp
jp
lcall
dec
cli
stos
inc
mov
lahf
or
addl
popf
push
push
call
incl
pop
jnp
adc
cli
test
pop
pop
adc
aas
pop
fistpll
loopne
jns
sub
jbe
mov
fdivl
cmp
cld
jg
ljmp
sbb
aas
repnz
add
dec
ljmp
cli
aaa
xor
dec
pushf
and
aaa
inc
cmp
enter
mov
sbb
mov
dec
jle
mov
insb
mov
lret
test
ss
cwtl
sbb
incl
aas
and
orb
adcb
pop
add
call
icebp
mov
xor
call
je
mov
les
cli
loop
decb
sub
fcmovbe
hlt
push
cmpsb
out
pushl
cld
jae
mov
test
jp
push
scas
mov
iret
test
and
ljmp
mov
mov
dec
cmpsl
shlb
jg
fs
push
push
pop
lret
xchg
push
dec
mov
outsl
mov
sbb
push
pushl
sbb
inc
movsb
lds
iret
sbb
sub
jge
shlb
sub
call
mov
inc
call
lret
pop
out
imul
dec
push
push
cwtl
test
dec
popa
dec
mov
rorl
xlat
nop
cmp
adc
mov
push
mov
jp
add
push
movsl
leave
and
insb
mov
out
sbb
sub
or
int
sbbl
and
mov
lcall
daa
push
jg
add
inc
adc
mov
arpl
jmp
inc
cli
adc
jnp
cmc
inc
mov
sti
test
int
xchg
lock
lcall
xor
sarb
lahf
sub
and
mov
inc
add
cld
mov
lds
jno
leave
jg
pushl
sahf
xor
mov
jbe
les
add
jbe
jmp
and
outsl
cmpsb
adc
push
mov
mov
daa
mov
xchg
push
xchg
push
call
shll
ljmp
int3
dec
andb
sbb
outsb
js
into
pmaddwd
cmp
or
testl
mov
outsl
adc
mov
faddl
dec
push
mov
inc
int3
mov
pop
dec
inc
cmpsb
rol
je
xor
dec
xchg
fwait
test
push
pop
pushl
cmpsl
sti
xor
lcall
loop
sarl
sub
xchg
pop
lcall
call
addr16
dec
fidivrs
dec
or
inc
notb
je
je
add
inc
jbe
add
or
ljmp
jmp
cli
test
mov
push
mov
mov
pop
scas
jge
loop
icebp
pop
sub
shr
in
or
pop
pop
lret
popf
repz
incl
or
mov
cmpsb
sti
or
addr16
sbb
rclb
mov
bound
adc
jae
xor
push
ret
sub
std
call
sbb
or
nop
shll
sub
cmp
std
pop
cmp
sub
cmp
das
lcall
mov
mov
inc
dec
inc
lcall
inc
add
test
idivb
add
mov
sub
test
sbb
lcall
das
push
shll
fistpll
fidivs
and
mov
add
push
mov
ljmp
fnsave
xchg
jmp
pop
cltd
lret
call
push
mov
lcall
cmpsb
mov
ret
mov
push
jae
pop
int3
sahf
and
dec
aaa
aaa
mov
lret
decl
mov
imulb
jno
leave
push
and
aas
mov
insb
add
ljmp
je
fidivrl
mov
adc
cmc
jne
pop
mov
clc
jp
cmpsl
fsubs
pop
dec
es
std
push
push
jmp
int
jge
lods
adc
popf
fisttpl
sbb
push
xchg
dec
pop
mov
push
jno
movsb
int
sbb
in
ljmp
dec
in
addr16
cmpsl
pop
sahf
lea
mov
mov
add
inc
and
or
pop
and
andb
pop
ljmp
mov
fiadds
sahf
hlt
fisubs
jge
enter
ljmp
loopne
vmwrite
sbb
ljmp
mov
mov
cmc
and
pop
mov
iret
std
sub
jp
loope
push
negb
lcall
xchg
outsb
fdivrl
arpl
pop
loop
les
jmp
cltd
pop
outsl
add
ljmp
sbb
ljmp
lcall
scas
pusha
xor
dec
jbe
lds
outsb
insl
aas
imul
pop
mov
dec
push
push
bound
jns
push
mov
icebp
movsl
jno
cmp
mov
dec
xchg
into
jg
mov
dec
dec
jo
loop
jl
incl
push
inc
out
jne
sub
lods
fcmovnbe
and
aad
fmuls
xchg
and
cmpsb
mov
jno
cs
lcall
or
sub
sub
mov
add
jecxz
xor
sub
jnp
xor
jmp
lret
jbe
lret
iret
outsl
sub
clc
lock
jbe
mov
movsl
repz
nop
push
ficomps
and
lcall
aam
leave
push
test
stos
mov
call
push
cltd
dec
das
popa
outsl
int
and
fsts
outsb
test
push
dec
push
adc
pop
or
mov
dec
popa
adc
or
aam
mov
jmp
mov
mov
ljmp
or
cld
mov
xlat
cli
add
xchg
and
mov
or
cmp
loope
xchg
stc
dec
mov
xor
les
jg
ljmp
fsubs
insl
clc
aam
fsubl
in
and
xchg
add
int3
ror
or
ljmp
jmp
xchg
xchg
add
fs
fildl
pushl
push
shl
and
pop
mov
jmp
jne
gs
mov
mov
and
xchg
cld
call
cmpsb
je
std
loop
dec
daa
sbb
xor
dec
iret
cmp
lds
pushf
cmp
lcall
sub
xchg
in
outsl
mov
leave
pop
movsl
test
fistl
cld
in
adc
sub
leave
clc
out
faddp
dec
scas
xor
sahf
or
fcompl
lods
push
mov
add
pop
adc
hlt
imul
jl
fmul
sub
inc
mov
lea
in
inc
daa
mov
adc
lcall
pop
cltd
call
pop
mov
xor
mov
outsl
mov
and
lods
dec
jb
jns
mov
in
or
push
xchg
lods
sub
daa
stc
loopne
shl
js
jns,pt
in
add
incl
xchg
xor
adc
lods
cmp
jecxz
inc
push
cmp
test
fidivrs
lcall
mov
sbb
je
xchg
iret
rcrb
mov
and
cwtl
mov
mov
out
mov
ljmp
mov
and
add
std
insb
cmpsb
mov
popa
rolb
outsb
lods
fisubl
ja
fistps
in
jb
nop
stos
loopne
dec
outsl
in
call
in
insl
jp
imul
movsl
mov
mov
adc
pushl
mov
ja
adc
cli
bound
mov
xchg
pushl
divps
roll
movsb
cmp
jg
sbb
imul
jne
push
cmp
das
mov
xchg
jmp
les
mov
xchg
cs
xchg
push
ds
push
ljmp
addl
mov
jae
sbb
add
cs
or
mov
mov
icebp
lretw
cmp
mov
dec
call
xchg
jg
mov
and
dec
mul
js
cwtl
mov
movsl
mov
std
cli
push
mov
mov
pop
bound
jb
dec
inc
mov
aam
imul
cld
jmp
movb
mov
jmp
in
jmp
je
in
stos
sub
push
out
pop
stos
jo
js
inc
filds
loopne
lcall
pop
stos
fbstp
add
sub
loop
or
add
das
es
jl
test
sub
jg
push
loope
xchg
enter
rcrb
jnp
pop
pop
cmp
hlt
sbb
cltd
mov
call
pushf
and
ds
push
push
mov
cmc
add
test
stos
pop
incl
xlat
sbb
and
cmpsb
jns
loope
lcall
int
add
jmp
nop
dec
mov
sbb
xor
sahf
cmp
pop
jbe
push
jge
gs
push
mov
and
xor
into
xor
push
test
call
adc
incl
adc
inc
cmp
mov
mov
mov
push
or
jo
push
pop
ret
dec
pop
repnz
les
stos
adc
jmp
popa
in
ret
ret
cs
icebp
repz
lret
aas
add
or
decl
sub
add
mov
inc
adc
shr
jmp
pop
add
pop
leave
imul
xchg
call
daa
fistpll
sahf
lock
lds
rcrl
insl
scas
adc
lcall
xchg
loope
je
outsb
sub
jmp
push
cmpsl
push
in
adc
cmp
cs
adc
pushf
push
stc
jnp
cmpb
jecxz
jmp
gs
and
cmp
dec
adc
add
aas
push
inc
fxch
fmull
cld
das
sar
push
mov
pop
or
dec
push
nop
lcall
cmp
incl
add
push
outsl
jmp
int
movsl
cli
pop
xchg
outsb
sub
test
lcall
mov
cmc
call
mov
push
idivl
int
mov
mov
xor
aam
adcl
push
xor
loop
jne
inc
cmp
jno
xor
vmovhlps
adc
or
jmp
leave
mov
dec
pop
mov
push
xchg
cmp
adc
add
lret
add
rclb
andb
fildll
inc
pushf
rcrb
insb
ret
lods
sub
sbb
sar
mov
cld
ucomiss
dec
in
mov
call
jbe
stc
push
dec
xchg
inc
test
xor
mov
pop
xchg
mov
jmp
push
fnstcw
pop
ret
xor
and
jecxz
pop
lret
mov
ljmp
inc
scas
add
movsb
stc
das
xchg
cmp
adc
mov
mov
adc
decl
aad
sti
jmp
adc
mov
stc
imul
ss
jmp
scas
adc
icebp
push
and
sbb
sbb
mov
pushl
repz
les
out
loop
xorb
scas
sub
inc
insb
mov
jb
rolb
mov
decl
mov
jnp
clc
mov
push
jl
xchg
push
mov
sub
lds
ret
test
ds
jl
xor
ss
loop
decl
adc
mov
daa
lcall
jns
mov
xor
cmpsb
push
subb
dec
jae
mov
imul
notb
lcall
addr16
mov
inc
arpl
cmp
inc
push
mov
incl
imulb
inc
and
aas
or
pop
testl
in
icebp
imull
sti
test
iret
jno
lods
push
xlat
jae
mov
pushl
out
pop
std
or
fildll
or
cmp
test
xchg
jmp
push
lds
mov
mov
and
mov
scas
int
xchg
scas
clc
stos
jbe
mov
adc
and
subb
or
lcall
lds
insb
fwait
mov
incl
mov
pop
jbe
movsb
scas
pop
insb
movsl
inc
mov
in
int
cmp
pushl
stc
lcall
cmc
int
mov
mov
jp
leave
test
cmpsl
int3
jg
jmp
mov
jg
push
mov
push
and
addr16
gs
dec
aaa
ficoms
add
fs
xchg
daa
sbb
adc
icebp
sbb
int3
ljmp
mov
aam
jne
cmp
fistpll
mov
cld
dec
or
inc
sbb
das
mov
mov
repz
push
lret
lods
les
sbb
sub
fistpl
lea
cmp
xchg
xor
fnstcw
stc
decb
dec
push
rcrl
out
mov
test
mov
mov
outsl
scas
outsl
push
in
incl
dec
inc
sahf
outsl
mov
push
inc
fdivs
dec
mov
dec
into
push
nop
fnstsw
and
rcrb
iret
lock
mov
mov
jne
cmp
repnz
call
pop
push
out
incl
lret
in
lret
xchg
or
sbb
xchg
cmpsb
aaa
mov
les
adc
lret
ret
lret
insl
fidivl
xchg
repnz
or
jmp
sbb
xchg
shrl
popa
xor
xchg
jge
stos
mov
cmp
insb
jnp
jle,pn
xchg
sbb
fimull
int
movsb
scas
mov
mov
inc
xchg
arpl
jge
jg
push
mov
ljmp
out
stos
sti
aas
inc
push
pop
ds
add
lcall
adc
insb
mov
add
es
adc
mov
ss
decl
gs
fisttps
jmp
cli
es
adc
aam
orl
lcall
jnp
ficoml
fbstp
dec
fildl
stos
daa
dec
bound
ljmp
push
outsl
cmc
clc
fdivr
jmp
push
nop
push
icebp
and
sbb
in
sbb
jl
sti
ljmp
icebp
inc
aas
and
pop
data16
dec
popf
dec
and
adc
push
pop
jns
in
enter
jmp
in
cmp
xor
push
cwtl
mov
pop
mov
mov
and
fwait
push
push
rol
xor
cmpsb
insb
mov
fisttpll
mov
orb
xor
jbe
push
lahf
aas
aad
sti
add
add
push
jmp
sub
cmp
xchg
imul
sbb
mov
fidivrs
fistpl
decl
sbb
push
cmp
sbb
xlat
shrl
mov
xorb
sbb
pushl
inc
jbe
mov
lret
bswap
ss
inc
cmc
arpl
mov
ja
inc
or
inc
sub
ja
adc
jl
out
ss
jp
add
sub
mov
fldenv
jbe
es
out
fdivr
jg
jmp
cmp
mov
xor
pop
adc
or
shlb
sarl
lret
cmpsl
pop
icebp
das
rolb
fisubs
lahf
test
jg
push
add
faddl
mov
mov
scas
fnstcw
loopne
insb
ret
call
jmp
jge
mov
dec
xchg
add
rclb
test
mov
incl
jmp
inc
mov
int3
add
and
mov
ljmp
adc
out
jmp
or
mov
in
mov
ja
shl
jno
mov
cli
adc
sbb
cwtl
into
sbb
xchg
sbb
aad
in
mov
in
fsubrs
and
es
incl
xchg
lret
mov
arpl
xlat
jp
inc
xchg
mov
loopne
mov
jg
in
in
add
out
xchg
add
popa
cmovne
adc
cmpsl
stc
mov
gs
lds
pop
fwait
cwtl
ss
frstor
lcall
jecxz
ficompl
inc
mov
out
dec
cwtl
inc
js
xor
es
aad
mov
mov
fsubl
outsl
lock
movsl
scas
cmc
ret
js
gs
sahf
loopne
notb
adc
loopne
es
cmp
or
inc
test
xchg
dec
popa
pop
sbb
mov
dec
sub
jmp
or
cmp
adc
ds
movsl
cmpsl
or
fimull
cld
jecxz
insb
lock
push
fnstsw
out
xchg
jecxz
jbe
and
jns
fisubl
fistpl
mov
xchg
decl
cs
fcompl
fs
cmpsb
sahf
jp
dec
lcall
stos
clc
scas
or
pop
lret
jne
and
or
ss
mov
pushf
cltd
dec
inc
mov
jg
lret
sub
pop
rolb
call
aas
scas
cmp
ljmp
jae
es
xor
popf
cltd
add
pop
sub
leave
aad
pop
mov
ljmp
and
outsb
cmc
aad
and
cs
mov
incl
jnp
das
aas
inc
fwait
lods
repnz
inc
adc
lods
pop
mov
in
call
mov
cmp
jecxz
mov
in
sub
out
mov
mov
rclb
test
daa
sbb
cltd
stos
imul
scas
mov
mov
xchg
data16
mov
pop
loopne
inc
je
test
in
aam
inc
scas
jnp
nop
fdivl
rorb
stc
cld
push
outsb
repnz
cltd
jno
xchg
shlb
pop
push
and
jmp
in
js
inc
cltd
cs
or
cmp
jmp
mov
mov
pushl
mov
ds
xchg
push
jge
icebp
mov
fstpl
jns
lea
or
or
sahf
cmp
adc
scas
mov
adc
add
jmp
jae
cmp
jb
push
nop
mov
add
dec
and
pop
imul
lcall
sbb
jmp
mov
call
add
dec
push
or
repnz
ljmp
insl
dec
inc
stos
ds
or
lods
popa
sbb
cmp
xlat
popf
mov
testb
repnz
sbb
add
add
jne
jmp
ja
cmpsl
sub
push
rcr
cmp
test
call
xor
lcall
mov
scas
call
jmp
cwtl
cmp
mov
movb
xor
pusha
fildl
ret
movsl
mov
je
pusha
ss
jg
in
loop
xor
in
mov
push
pop
lds
icebp
das
xchg
adc
jo
sbb
mov
decl
push
insb
cmp
pop
out
cmp
outsl
pop
dec
and
xchg
fcomps
ja
incl
push
shrb
mov
mov
sahf
loope
cmpsb
cltd
mov
clc
xchg
std
or
repnz
pop
xor
mov
decl
cli
int3
xchg
adc
sarl
std
jb
mov
cmpsl
out
adc
mov
xor
lds
adc
xor
fsubl
mov
sarb
dec
nop
int3
daa
fiadds
sbb
fwait
push
icebp
jmp
loop
scas
jecxz
add
cwtl
sbb
xchg
mov
fists
outsb
and
lcall
push
push
and
pop
pop
and
aaa
mov
and
test
mov
push
rol
inc
scas
push
jge
imul
add
pop
push
mov
pop
fninit
popf
int3
test
ljmp
in
jnp
pop
adc
cmpsl
arpl
push
jmp
cmp
les
lahf
aas
sub
cmpsb
hlt
rcrb
mov
mov
xchg
lock
scas
sub
cli
dec
dec
fsts
popa
jg
mov
sub
popl
or
stc
movsb
ret
incl
sub
cmc
jne
cmp
loopne
push
jg
popf
and
adc
jns
mov
jmp
mov
aaa
daa
adc
insl
ficoml
or
test
add
call
out
add
les
mov
cmp
jecxz
or
out
decl
rorl
hlt
sub
add
pop
sbb
cwtl
decl
pop
and
pop
mov
dec
or
adc
and
jmp
sbb
jne
dec
mov
jb
lret
jb
lahf
popf
je
inc
je
in
pop
push
jg
pushf
cmpb
or
data16
sbb
mov
hlt
popa
jne
sar
out
es
cmp
and
scas
xchg
movsl
jmp
mov
test
or
movsl
adc
lock
jb
adc
sub
jecxz
lret
hlt
xor
xchg
fldcw
clc
fcomip
in
popf
add
vmovshdup
std
mov
fmuls
or
lock
push
sub
dec
pushf
jo
orb
and
jl
jle
into
decl
rcr
adc
mov
and
mov
aaa
int
mov
stc
mov
pusha
loop
mov
dec
inc
mov
aas
in
loopne
dec
incl
or
xchg
push
nop
dec
int
test
test
push
cmpsl
dec
in
cmpsb
cmc
sub
mov
outsb
push
movsb
push
and
stos
roll
dec
pop
lds
dec
mov
and
ljmp
dec
mov
adcl
cwtl
orb
jle
cmp
jmp
xchg
movsl
jo
movsb
sub
rorl
mulb
out
leave
sbb
repz
fcmovu
xor
jne
test
xchg
push
push
ds
push
sbb
or
iret
xor
and
sub
xlat
aaa
rcrb
dec
popf
ljmp
clc
push
loop
mov
inc
jmp
movsl
or
mov
inc
iret
pop
xor
call
bound
incl
hlt
imul
call
mov
xlat
es
out
jge
ret
pop
adc
lcall
rol
push
movsb
sbb
xlat
lock
dec
dec
lcall
test
rorl
jmp
or
xor
movsl
lods
dec
xchg
loop
or
loope
inc
flds
imul
aaa
pop
mov
jns
dec
jne
lock
and
js
xorb
add
test
jne
cs
fs
pop
mov
jb
call
fs
out
out
div
cli
outsl
repnz
das
std
dec
aas
ja
jecxz
mov
pushl
or
mov
jb
mov
stos
mov
fdivp
adc
sbb
pushf
mov
fwait
ljmp
cmp
stos
loop
push
pushf
fwait
lock
sub
mov
hlt
incl
adc
mov
iret
add
cmp
fmuls
ljmp
out
lods
xchg
test
inc
fimull
cmp
add
repz
xor
cli
hlt
pop
call
cld
faddl
aas
fsubrp
dec
idiv
scas
cs
lcall
idivb
pushl
out
dec
mov
dec
sub
or
ja
das
cmp
into
fmuls
clc
pop
adc
mov
notb
mov
es
lahf
sbb
scas
cmp
imul
xchg
fbld
out
mov
cmpsl
rcl
mov
jecxz
icebp
pop
iret
pushl
cld
ljmp
sti
jne
pop
imul
mov
fbstp
enter
xchg
add
decl
sub
xchg
mov
lods
pop
das
mov
xchg
dec
adc
gs
fs
mov
ljmp
cltd
pop
lcall
mov
ds
xchg
rorb
cli
cmp
fstl
pop
fnstcw
cmp
icebp
jmp
push
lret
fisttps
mov
xchg
ljmp
mov
jmp
adc
xor
jb
lcall
scas
fidivrl
xchg
push
imul
cmpsl
add
loope
sub
adc
xchg
pop
push
pop
daa
repnz
loopne
ss
call
add
or
ds
push
lock
push
mov
sbb
add
fcmovbe
ljmp
cld
xlat
push
imul
pop
add
push
adc
mov
test
cmc
pop
loopne
lcall
xchg
inc
add
out
xchg
push
jg
push
xchg
and
jl
ja
loopne
cmp
dec
adc
es
cmp
std
pop
mov
je
jl
cmp
loope
mov
pop
xor
call
int3
jle
cmp
cmp
negb
mov
insl
shlb
es
jg
ror
mov
fistpl
ljmp
and
push
cmpsb
xor
ficoms
jmp
scas
and
adc
xorl
inc
cli
and
push
sarl
dec
jecxz
es
xchg
popl
or
sbb
fidivl
sbb
push
in
cmp
mov
sarl
decl
int3
scas
int
out
test
mov
idiv
jl
dec
enter
decl
out
aas
pop
sahf
xlat
xchg
scas
push
sahf
in
mov
aam
aas
push
rorb
push
jo
cmc
cmp
pushl
or
push
cmc
pop
ljmp
mov
inc
out
or
lcall
fs
mov
ja
xchg
cmp
psllq
popa
inc
xor
fwait
fcomip
data16
sub
sbb
insl
lahf
in
sbb
jg
inc
push
add
out
aas
cmp
dec
jno
dec
lcall
jns
jecxz
mov
imul
jg
fninit
out
mov
out
fidivrl
mov
pop
pop
xchg
in
and
stos
push
cld
pushl
std
or
mov
jg
popf
jle
xchg
test
xor
or
js
xor
lcall
imul
sbb
fcomip
and
lahf
cmpsl
xchg
lret
jo
jno
fstl
xor
cmp
call
fisubs
lods
orl
xchg
movsb
ficoms
mov
mov
ret
add
ret
lret
push
rorb
jae
les
je
pop
jmp
sahf
insl
enter
inc
inc
lds
rolb
add
movsl
repz
bound
xchg
ljmp
mov
scas
lods
mov
push
out
mov
jle
pushf
xchg
iret
stc
mov
loop
cmp
lock
jmp
push
in
pop
out
mov
add
sarb
sbb
shlb
jle
mov
and
pop
or
sub
paddq
mov
mov
mov
dec
sbb
mov
pop
sbb
xor
lcall
push
arpl
push
or
out
inc
call
outsb
pop
mov
cmc
and
push
mov
enter
ds
mov
push
call
bnd
outsl
ds
stc
mov
jg
sub
cmp
or
in
imul
lods
out
add
loop
pushl
lock
mov
jp
push
hlt
push
mov
xchg
mov
sub
pop
cld
ljmp
push
adc
std
mov
push
outsl
mov
dec
add
jmp
lret
dec
pop
sub
popf
sub
movsl
call
repnz
xchg
xor
dec
add
mov
push
push
xchg
mov
dec
jo
cmp
aam
ficoms
mov
xor
test
cmp
xor
sbb
dec
gs
xchg
cmp
xlat
incl
aad
outsb
mov
ja
loopne
int
jmp
inc
jg
arpl
push
shrb
sbb
or
inc
and
xchg
fbld
or
pushf
push
outsl
out
pop
push
jl
push
sbb
adc
and
cwtl
xor
pop
mov
loope
mov
mov
inc
bound
incl
mov
lahf
or
pop
ss
loopne
les
xor
and
mov
jmp
pusha
nop
pop
stos
sub
in
rcrb
je
je
dec
repnz
cmp
out
lret
or
repnz
pushf
inc
push
ret
xchg
ljmp
aam
mov
lds
sti
das
sub
xor
fildll
mov
jmp
sub
adc
inc
adc
inc
jno
hlt
xlat
jae
dec
test
inc
pop
cltd
or
mov
dec
cmpsb
push
in
call
push
or
insl
pusha
cmc
je
aam
jle
mov
sarl
jne
inc
ja
rol
dec
sbb
incl
js
jb
popa
push
xor
jmp
test
jg
iret
mov
mov
divl
ficoml
xchg
mov
adc
lret
pop
fsubrl
ljmp
mov
fwait
dec
or
rcrl
clc
push
mov
mov
divl
incl
loopne
xchg
daa
imul
repnz
ja
cmp
mov
adc
lcall
add
cli
das
mov
std
pop
mov
inc
outsb
mov
jmp
pop
aad
mov
mov
cmc
jo
and
shlb
push
cld
or
add
sub
sti
xor
dec
les
jecxz
mov
std
sti
adc
lods
in
fs
fisubrl
lcall
pop
loope
fldcw
pop
sbb
or
fs
sbb
movsb
mov
mov
lea
clc
xchg
stc
dec
jbe
lods
cmc
sub
repz
in
iret
dec
push
mov
mov
scas
cmp
aaa
cmp
lcall
cmpsb
adc
cld
subb
add
fucompp
cmp
mov
jl
xchg
jbe
sub
call
not
and
inc
add
mov
mov
mov
decl
ficoml
jle
jae
int
or
ja
jge
mov
das
shll
decl
mov
cmp
mov
mov
pusha
inc
shr
and
and
jmp
add
inc
adc
xchg
jp
fisttpl
xor
and
cmpsl
xlat
mov
adc
icebp
mov
adc
xchg
pop
push
hlt
adc
xor
incb
cmpsb
add
push
clc
aam
xor
add
dec
cmp
cwtl
nop
lock
cmp
repz
imul
shld
mov
pop
mov
adc
cld
in
addr16
sub
fcomip
test
and
fistl
loope
loop
jmp
add
decb
decl
decl
xor
adc
pop
les
pop
into
or
push
cmp
data16
js
jmp
xchg
loopne
gs
rolb
imul
arpl
sbb
dec
mov
xor
mov
arpl
ljmp
xchg
sbb
mov
dec
sub
insb
daa
std
add
xchg
inc
adc
fmul
jl
fbld
ss
cmp
cmpsl
adc
ljmp
cmc
rclb
mov
push
add
jo
xor
mov
sbb
mov
jo
ljmp
sbb
fdiv
xchg
mov
mov
mov
pusha
ss
add
lcall
inc
inc
pop
adc
lea
sbb
mov
hlt
jmp
cmp
and
inc
std
decl
popa
ret
pop
decb
mov
into
lock
xor
dec
dec
sub
mov
int3
daa
out
fsubs
lds
inc
dec
fs
cld
xor
icebp
push
insb
fbld
and
popf
fsubl
lcall
add
add
sbb
jno
cld
sub
popf
xchg
dec
xchg
inc
and
push
xchg
or
cld
cmp
sahf
dec
mov
icebp
jl
inc
ret
jnp
xor
mov
stc
fildl
incl
ss
add
fidivs
sarb
bound
dec
out
std
mov
jmp
xchg
ljmp
mov
mov
les
lahf
inc
and
and
fcomi
jg
xor
push
movsl
xchg
pop
or
and
stc
in
dec
lea
push
sbb
je
decl
add
jno
ficoml
jle
fs
js
sti
xor
inc
adc
inc
add
sbb
add
sub
daa
adc
mov
cli
dec
loop
mov
pushl
jmp
mov
insl
addr16
cltd
jb
or
inc
fcmovb
icebp
mov
pushl
ss
leave
pop
push
aam
jb
ror
pop
enter
mov
aam
loop
stos
jmp
xor
imul
in
mov
stos
testb
or
jnp
ljmp
pop
sub
int3
pop
je
lock
stos
in
and
push
sti
mov
jnp
test
xchg
cltd
loopne
xchg
cmp
incl
les
call
xor
dec
and
adc
or
cmp
aas
xchg
hlt
aad
ficomps
lcall
lret
pop
sarb
inc
fdivl
outsl
cmp
call
gs
push
ljmp
cwtl
aas
push
ficomps
insl
mov
iret
pop
idivl
iret
repnz
dec
lea
add
inc
cli
fisubl
push
add
dec
sub
inc
lahf
repz
mov
sti
dec
fs
jae
sbb
push
pop
les
mulb
into
jp
jne
iret
int
lcall
push
mov
insl
xor
mov
out
sbb
cmp
sahf
mov
inc
cmp
ja
xchg
outsl
jns
mov
testl
incl
add
cmc
les
mov
or
mov
outsl
mov
les
ljmp
enter
sbb
fimuls
stos
xchg
nop
js
fwait
cmp
pop
jmp
dec
jl
push
mov
cmp
hlt
add
shrl
fcmovnbe
sub
movsl
fs
dec
mov
lcall
lcall
lock
lcall
jecxz
lret
cmp
in
stos
cmp
mov
xor
sbb
dec
sbb
fs
sbb
and
shll
mov
cmp
jle
jmp
sub
mov
and
fnsave
shrb
xchg
dec
add
out
pop
mov
pushf
int3
cmp
cs
xlat
pop
bound
test
enter
cmp
inc
outsb
les
popf
imul
cmp
mov
es
clc
and
clc
mov
enter
hlt
cmpsb
hlt
adc
inc
test
pop
in
pop
mov
call
loopne
mov
push
cld
pop
cld
js
jp
xor
xchg
in
ljmp
sub
and
insb
enter
lock
fcomip
call
mov
mov
and
movsb
inc
sbb
inc
cltd
xchg
adc
movsb
into
push
xchg
jbe
pop
mov
shll
jg
and
aas
scas
test
sub
out
test
jle
and
out
in
insb
mov
push
pop
stos
incb
mov
in
decb
scas
push
jg
inc
push
fimull
adc
insl
les
andl
pushf
mov
adc
cld
cmpsb
enter
xor
call
decl
out
in
test
mov
inc
lret
ror
nop
jmp
mov
clc
sbb
mov
sub
mov
daa
call
mov
push
loope
dec
fldl
jge
add
and
sarb
loopne
sbb
cmp
fcomip
lock
and
loopne
xchg
movsl
mov
loop
rolb
movsl
pop
cmp
sbb
repnz
popa
sub
leave
ljmp
inc
jb
sbb
hlt
lcall
aaa
sbbl
jnp
imul
sbb
add
fcompl
scas
sub
cmc
add
fcomip
sbb
dec
xor
fucomp
xchg
pop
cli
inc
adc
mov
push
in
roll
repz
loop
fwait
data16
sub
fbstp
cmp
daa
inc
xchg
xchg
cmp
mov
jae
pop
mov
or
mov
int
sub
and
incl
loop
cmp
cmp
fisttps
lret
inc
ljmp
and
jg
loopne
pop
xor
mov
push
dec
pop
in
xchg
incl
push
cmp
jg
sahf
inc
jb
push
mov
jp
sub
mov
nop
pop
pusha
mov
je
rorb
inc
inc
stos
mov
or
sarl
js
adc
test
mov
decl
lods
add
fldcw
cmp
sub
mov
lcall
call
or
out
call
jne
inc
repz
pop
sub
pusha
andb
decl
test
loope
es
mov
mov
ret
add
cltd
adc
aas
push
mov
push
insb
loop
sbb
sub
enter
inc
dec
jae
shlb
add
or
sbb
xchg
mov
mov
cmp
decl
movsb
inc
push
dec
mov
testb
pop
fldl
mov
incl
and
xchg
lret
jmp
jge
push
aad
or
fcoml
fidivl
inc
shll
xchg
movsb
jg
pushl
push
ret
mov
aam
or
mov
push
in
jp
jl
daa
xorl
rcrb
in
push
cld
fdivrl
xchg
sbb
jmp
pop
inc
inc
mov
ljmp
sbb
scas
add
insl
jbe
je
lahf
fwait
mov
incb
enter
outsb
mov
xor
cmpsl
pushl
popa
stos
icebp
sbb
jne
imul
es
xchg
out
mov
or
cmpsl
fcompl
xchg
push
mov
add
jo
mov
cmc
sar
jmp
fwait
add
cmp
cld
and
mov
or
push
das
xor
and
mov
imul
mov
sbbb
inc
add
scas
sbb
call
inc
cmc
repnz
nop
and
fmulp
rcrb
push
loop
ds
es
movsb
mov
lcall
stos
in
mov
cli
cmp
lods
jns
cmp
cld
add
add
imul
std
decl
jno
daa
push
lret
mov
int
sub
stc
sub
int
in
pop
clc
call
mov
mov
push
filds
xor
negl
pop
fistps
mov
jp
push
and
mov
int
les
stc
pop
mov
mov
pop
dec
sbb
loope
lcall
fmulp
shlb
xchg
cwtl
addb
and
or
cmp
enter
push
test
pop
test
jmp
jns
and
jle
pushf
cli
sbb
cs
ljmp
les
or
or
sub
mov
call
in
adc
sahf
inc
xchg
mov
inc
xchg
cmp
outsb
std
out
loop
adc
lcall
mov
xor
xchg
or
inc
je
xor
mov
push
push
mov
stc
dec
cmpb
jecxz
ja
mov
jg
pop
scas
pop
cmc
and
pushl
jbe
mov
sbb
pop
mov
pop
add
repnz
xchg
ljmp
inc
insb
mov
mov
xchg
cmc
pushf
jbe
fs
fnstenv
fiaddl
jns
sub
cmc
dec
jge
fmul
lds
jbe
daa
mov
adc
push
pop
stc
insb
push
ja
cmp
fbstp
add
fbld
xchg
test
or
cmpsl
pusha
push
out
mov
push
arpl
jg
insb
dec
push
cmp
adc
outsb
fstp
loop
mov
lcall
jae
or
notl
outsl
and
lret
ja
cmc
fldt
pop
in
push
push
cmpsl
mov
call
xchg
inc
in
clc
mov
testb
mov
sbb
dec
or
inc
aad
outsl
fdivr
dec
mov
mov
xchg
and
xchg
les
adc
out
mov
stc
dec
cs
shll
call
sbb
xchg
popa
adc
scas
mov
add
inc
out
dec
mov
xchg
imul
mov
bound
push
leave
icebp
jne
test
push
lcall
xor
popa
dec
imulb
js
incl
mov
gs
loop
jo
and
sub
lret
mov
outsb
push
hlt
in
mov
repnz
jno
xchg
leave
xchg
and
call
loop
decl
mov
filds
arpl
test
and
shlb
test
mov
jp
sub
add
cmp
mov
pushf
mov
add
mov
js
inc
pop
mov
xchg
xchg
sbb
stos
es
or
rorb
pop
push
cmp
jl
mov
jp
mov
and
testb
adc
mov
lea
pop
pop
out
jb
cmp
test
div
rol
decl
adc
or
lods
mov
pusha
or
call
inc
sbb
dec
xchg
jbe
cmp
ret
imul
mov
xor
cmp
or
mov
outsb
xchg
imul
ja
mov
dec
pusha
popa
imul
movsb
out
movsb
add
jae
mov
jg
cmc
insb
cmp
outsb
fisttps
adc
fstps
jae
adc
push
xor
xchg
lods
out
push
loope
jno
icebp
jae
adc
nop
pop
push
mov
test
push
mov
sub
insl
xchg
mov
push
negb
repnz
sbb
incl
rcrb
cmc
push
adc
ds
push
xchg
aad
and
in
pushl
adc
or
shlb
ret
add
repz
add
addl
call
test
ja
pop
sbb
mov
faddl
ljmp
ljmp
movsb
lcall
and
mov
enter
enter
int3
lahf
and
hlt
sub
add
xchg
out
lods
call
cmp
ss
cmovae
xchg
lcall
xor
or
mov
jae
ljmp
stos
add
adc
sbb
fwait
cmp
sahf
aam
mov
and
es
decl
shrb
push
icebp
add
das
scas
test
mov
decl
inc
mov
push
or
inc
je
sbb
pop
adc
sbb
outsl
pop
mov
xor
mov
fisttpll
and
test
xor
jge
adc
test
outsl
sbb
xor
sub
stos
pop
mov
fcomp
add
adc
jg
call
inc
mov
pop
sub
scas
xchg
sub
pop
ljmp
sar
imul
pushf
stc
cli
mov
inc
cmp
arpl
sub
jg
icebp
ficoms
jle
jo
jbe
pop
aaa
ss
lods
sbbl
outsb
xor
lds
pop
faddl
lods
jbe
bound
das
ss
cmp
das
cli
pop
ds
in
xchg
dec
ja
xor
fcmove
dec
adc
cli
cld
popf
stc
out
xchg
sbb
js
das
out
xchg
cmp
push
inc
out
clc
cwtl
pop
xchg
mov
scas
push
rcl
xor
jbe
lods
push
faddl
pop
fisttpl
leave
jg
fisubrs
out
js
dec
cltd
fmuls
cmc
push
loope
jne
cmp
push
adc
roll
push
in
dec
mov
cltd
mov
out
xchg
sub
jp
into
movsl
cmp
jmp
pushf
insl
push
push
inc
xor
pop
shll
xchg
add
xchg
mov
in
dec
add
dec
mov
sar
in
jg
jle
popa
lods
cmp
in
stos
pop
xchg
les
insl
cltd
jmp
fcompl
pushf
pop
gs
cmp
pop
enter
outsb
add
orl
in
cmp
dec
xorb
cmp
or
les
std
mov
scas
push
fidivrl
dec
push
push
idiv
arpl
test
cmpsb
sub
push
mov
fdivrp
sbb
adcl
incl
mov
jmp
jae
xchg
out
push
movsb
mov
jmp
dec
outsl
pop
pop
mov
loop
xchg
out
inc
inc
call
add
jae
mov
mov
jecxz
fnsetpm(287
jle
out
xor
xor
pushf
lcall
lock
pop
add
add
in
fimull
lods
xchg
cmp
arpl
out
cmp
xchg
test
inc
testl
cmpl
incl
push
push
imul
repnz
loopne,pn
adc
mov
add
cmc
call
sbb
aaa
adc
dec
add
or
add
xchg
xchg
or
xchg
mulb
xchg
int
adcb
jmp
dec
lds
add
push
dec
lcall
inc
movsl
inc
add
fsubrs
add
repz
pushf
mov
xchg
idiv
jge
cli
nop
cmp
cmp
out
dec
sti
xchg
pusha
addr16
cmp
mov
inc
insl
ret
dec
popa
repz
adc
and
or
mov
pop
ljmp
mov
sti
daa
xchg
testl
loopne
xchg
jmpw
or
pushl
pop
fsubrp
xor
pushf
les
in
clc
mov
mov
les
outsb
sbb
int
jnp
mov
pop
pop
and
out
inc
fbld
mov
nop
test
test
adc
popa
push
pop
xor
dec
adc
movsl
setns
xchg
popf
xor
pushl
xor
call
fwait
loop
inc
sbb
push
push
xchg
loop
xchg
out
fistpl
sarb
lret
fisttps
add
sbb
dec
push
mov
mov
lock
mov
gs
mov
adc
xchg
mov
and
xor
mov
pop
push
lahf
adc
loopne
scas
xchg
mov
dec
pop
imul
icebp
mov
jg
adc
pushl
data16
loopne
add
jo
xor
flds
push
pop
sbb
lcall
enter
in
rol
fs
rol
lods
lds
outsb
cwtl
push
push
testb
inc
pop
lock
iret
cmp
incl
jo
inc
mov
stc
xlat
test
cmp
ljmp
cmc
or
aam
pop
add
cmp
ja
push
mov
push
push
push
mov
test
add
sbb
lcall
loop
and
jnp
xor
xor
mov
imul
lret
mov
adc
dec
jo
outsb
mov
pushl
movsl
inc
xchg
icebp
inc
xchg
and
cmpb
mov
imul
jmp
jnp
xor
decl
mov
xor
mov
cmp
insb
sbb
xlat
jl
ss
loope
pop
or
insl
pop
mov
decl
lock
jns
test
mov
adc
pop
mov
loopne
dec
ret
std
inc
out
std
cmp
push
into
pop
and
fstps
gs
jbe
outsb
ljmp
xchg
lret
mov
xorb
ljmp
inc
inc
mov
loope
lcall
in
lods
pop
loope
out
test
cmp
lock
rcll
mul
mov
orl
movsb
movsl
mov
movsb
andb
std
jg
lods
jns
jbe
scas
push
jl
mov
cmp
pushl
mov
and
shl
lret
fnstsw
lock
mov
mov
jmp
test
pusha
push
nop
pop
cli
sahf
cmp
shl
sbb
fwait
hlt
std
scas
add
xchg
incl
frstor
lcall
inc
add
test
inc
mov
enter
je
jge
lods
fcmove
decl
cli
movsb
mull
inc
je
loope
ljmp
shr
mov
add
pop
outsl
fldcw
in
stc
lds
ja
mov
or
movsb
std
mov
fwait
inc
popf
mov
decl
mov
push
sub
jno
test
aam
push
js
and
test
sub
adc
lods
xor
out
adc
xor
mov
and
outsl
inc
ljmp
cwtl
fcmovnu
push
pop
jno
mull
jno
mov
cli
cmp
clc
adc
push
incb
add
pop
imul
mov
lods
insl
inc
int3
sub
clc
lcall
jnp
pusha
jb
ja
mov
in
inc
std
decl
pop
mov
add
sbb
pop
in
ds
push
jg
into
mov
pop
cwtl
mov
fistpl
fimuls
xchg
fiaddl
xchg
xor
fsubrs
lcall
pushl
adcl
push
and
xchg
sarl
mov
out
xor
jmp
mov
or
cmp
jmp
sub
mov
sbb
xor
in
repnz
jp,pt
daa
or
popf
mov
adc
aas
xor
xlat
rorl
pop
cmpsb
jg
push
push
pop
push
std
call
and
popf
and
mov
adc
ds
aaa
mov
aas
mov
mov
jmp
mov
test
pop
cmp
aas
inc
sbb
sahf
sarb
jnp
and
pushl
je
dec
pop
push
int
inc
sbb
cld
in
ds
icebp
inc
xor
lcall
and
pushf
push
cmpxchg
shl
inc
iret
int
mov
int3
sub
xor
jge
xchg
mov
decl
in
pop
mov
dec
cld
mov
mov
and
sub
jp
lods
test
mov
mov
jle
fbstp
ljmp
cwtl
stos
fidivrs
test
inc
pop
jp
nop
jne
addr16
into
les
xchg
xchg
dec
call
jo
fmul
inc
sbb
sub
or
lods
jbe
and
mov
sub
dec
sub
jmp
push
int3
stos
repnz
cmpsl
sti
sahf
xchg
ljmp
ljmp
mov
xor
jne
mov
xor
sti
call
js
xor
sbb
cltd
stc
imul
cli
je
mov
cmp
addr16
xchg
dec
call
xchg
cwtl
xor
pop
fnstenv
xchg
sub
fs
iret
lahf
xchg
clc
push
mov
jmp
xchg
pusha
add
filds
hlt
shlb
call
iret
sbb
icebp
mov
outsl
sbb
jnp
inc
jno
sbb
mov
ret
mov
mov
adc
decl
adc
int
lods
out
es
subl
daa
cmp
mov
cli
into
sub
or
ljmp
dec
push
sti
movsb
test
sub
mov
fcompl
faddp
adc
adc
imull
mov
adc
scas
stos
sarl
call
sub
mov
mov
and
jg
fcos
lcall
rolb
mov
insl
cli
cwtl
bound
fcom
and
call
imul
pmaxsw
pusha
pop
outsl
sbb
pop
and
lcall
incl
call
push
sbb
jge
stos
repz
ja
ljmp
cmp
outsl
ss
mov
jns
ret
cmp
int
mov
fstps
decb
lret
xchg
lret
call
mov
xorb
mov
xchg
test
stc
gs
xor
push
sahf
cld
inc
pop
jo
sbbb
fdivp
pop
es
inc
bound
out
mov
inc
ljmp
iret
adc
inc
test
or
xchg
mov
js
out
cmpsb
dec
mov
and
call
pop
and
xlat
cmp
aad
and
adc
mov
and
pushl
mov
cmp
gs
decl
adc
xor
xchg
iret
lds
lcall
addr16
ud2
pop
iret
pop
and
cmpsb
repz
rcr
idivb
xor
ret
clc
push
jl
fcmovb
inc
outsb
and
stc
dec
push
ljmp
jo
fimull
sub
call
xlat
mov
lahf
mov
sarl
popf
pusha
xor
fildll
bound
dec
data16
lcall
es
adc
decl
pop
cmp
out
dec
cmpsb
pop
jo
push
xor
xor
ret
cmpsl
jecxz
add
incl
aaa
mov
notb
sbb
lahf
iret
sub
rcll
jo
and
out
je
lcall
aas
jnp
js
std
or
mov
stos
js
inc
clc
outsl
int3
xlat
jge
dec
lcall
push
inc
fld
popl
xchg
stc
es
fdiv
clc
adc
repz
xchg
xor
xlat
jle
jmp
orl
dec
scas
or
sub
lds
pop
and
int3
cmpsb
fldcw
test
lock
stos
push
mov
sbb
cld
mov
in
mov
insb
sub
mov
sub
leave
inc
mov
push
lods
and
pop
test
push
rorl
xchg
decl
xor
scas
clc
jmp
cwtl
imul
mov
ja
mov
push
mov
mov
push
cmp
loop
mov
sbbl
jnp
ljmp
daa
arpl
and
ja
inc
lock
jmp
mov
xor
sub
shl
cmp
bound
mov
cmp
xchg
std
std
sub
icebp
popa
lock
push
xchg
incl
popa
or
jae
and
or
mov
inc
add
insb
mov
mov
loopne
xchg
xchg
adcl
mov
cltd
push
jnp
pop
cmp
insb
pop
cwtl
movsl
jg
mov
adc
cmc
je
xchg
out
push
andl
push
jns
sub
dec
clc
push
xchg
push
push
xor
lcall
icebp
mov
fisttpl
ljmp
push
dec
rorb
pop
xlat
filds
fimuls
das
pushl
add
dec
xor
mov
hlt
xor
mov
mov
scas
dec
cli
adc
cmp
lcall
inc
stos
push
mov
mov
push
xor
mov
mov
cli
decb
int3
bound
enter
leave
mov
pushl
pop
jnp
pop
mov
jmp
rcrb
jecxz
cltd
outsl
arpl
adc
into
cmc
lcall
fdivrl
cmc
mov
xor
cli
fisubl
and
sti
stos
pushf
mov
mov
inc
scas
jno
fldt
push
inc
in
sub
xchg
inc
movsb
hlt
inc
int
imul
sub
lcall
mov
cmpsb
mov
mov
mov
xlat
ja
clc
cld
idiv
mov
add
cmpb
decl
dec
push
lock
sub
push
xor
pop
adc
ss
sti
std
stc
mov
xchg
movsl
push
in
cld
sub
fcomip
mov
fldenv
xor
push
lea
cmp
into
push
addr16
pushl
sbb
mov
jbe
call
outsb
and
jmp
push
cmc
jmp
out
lds
inc
xchg
cli
nop
sub
fildl
jae
mov
pop
cwtl
aaa
pop
and
cmc
iret
mov
adcl
ljmp
sbb
jae
popa
inc
hlt
loope
push
mov
dec
sub
stos
dec
dec
fdivr
jmp
fimuls
push
in
xchg
mov
in
imul
pop
jno
fisubs
ljmp
call
aam
cmp
or
movups
mov
jnp
cltd
cmpsb
ja
lods
pop
and
dec
jns
int3
cli
pop
test
insb
mov
cmp
mov
pop
pop
outsl
xchg
lahf
ret
and
push
and
ss
ljmp
xor
cmpsb
loopne
lds
jno
loop
dec
inc
cmp
ljmp
or
push
lahf
jbe
sarl
stc
pusha
testl
cmp
incl
movsl
cmp
iret
xchg
insl
add
pusha
mov
test
les
fdivrp
lcall
adc
mov
add
out
shrb
and
cmp
scas
aam
xor
xchg
xchg
mov
out
leave
or
lds
insb
repz
addr16
dec
pusha
xor
cmp
xchg
jo
popf
iret
imul
in
and
jne
pop
xor
in
into
std
add
decl
and
hlt
dec
jp
insl
rcll
dec
jne
jmp
xchg
and
decl
push
jmp
insb
or
jg
add
aad
and
shl
cmpsb
lods
xor
sub
jle
pushl
add
mov
repz
mov
popa
loopne
cmp
in
mov
mov
mov
decl
loope
and
ret
fnstcw
sub
js
cmp
jg
mov
fiaddl
xchg
mov
add
xchg
adc
cmp
mov
jo
in
and
cmp
stos
ljmp
add
jg
push
ljmp
jp
addb
inc
hlt
add
jge
fbld
rcr
push
iret
fs
cmp
dec
dec
sahf
lea
lcall
cs
enter
mov
xor
fisttps
jmp
xor
mov
into
sahf
mov
decl
jmp
mov
sahf
cmpsl
jle
iret
data16
cmpsl
mov
mov
or
filds
push
push
cmp
jg
xor
pop
fdivl
js
cmpsl
filds
leave
cmc
push
cmpsb
jp
push
idiv
pop
rcrl
aad
mov
rol
push
cld
popf
push
xchg
mov
test
lds
xor
mov
inc
mov
mov
lret
lret
inc
testl
mov
add
or
scas
add
push
aaa
fnstenv
xchg
dec
jmp
push
data16
or
xchg
sbb
cli
repz
pop
sub
cs
lcall
lcall
mov
rcll
mov
cmpsb
pop
mov
insw
sub
pop
and
decl
sub
scas
scas
and
mov
call
mov
cld
jmp
pop
movsl
push
xchg
push
dec
cmp
sbb
xchg
mov
or
add
hlt
ret
daa
ja
popa
pusha
int
jp
stos
repz
sbb
mov
inc
dec
cmpsl
cs
in
mov
and
xor
loopne
or
jg
add
pop
int3
xor
out
cmpsl
mov
nop
mov
adc
mov
or
enter
jl
outsb
cmp
mov
cli
pop
daa
and
mov
lret
lcall
test
aas
outsl
mov
iret
cmp
arpl
inc
sub
std
xchg
dec
or
or
xchg
pushf
push
add
fistps
in
jle
push
inc
cmp
icebp
decl
lcall
push
fcmovu
sub
jno
add
lcall
sub
pop
mov
inc
inc
and
popa
jg
movsl
pop
adc
outsb
sti
in
aaa
pop
or
mov
std
ljmp
or
stc
xchg
or
push
incb
pusha
mov
movb
aad
adc
and
mov
fmuls
dec
je
mov
jge
xchg
push
sub
les
inc
jge
sahf
add
fistpll
or
or
in
lcall
cmp
and
je
jmp
inc
and
loope
loop
jle
fidivrs
xabort
push
scas
jle
lret
incl
js
test
int
sarl
out
sub
xor
mov
lcall
inc
fs
out
leave
incb
sbbb
sub
das
push
mov
pop
mov
lcall
dec
cmpsb
add
dec
rcl
pop
test
sar
jno
das
push
jbe
pop
fadds
add
call
in
ds
js
mov
sbb
in
jmp
out
mov
cmpsl
movsb
cmpsl
dec
fsubl
jno
aad
enter
mov
push
loop
jb
fnstsw
sub
out
hlt
pop
mov
fcomps
pop
imul
sbb
cmp
call
mov
mov
out
mov
lret
aam
sbb
lock
hlt
mov
repnz
imul
jp
subb
or
xor
mov
int3
pop
adc
or
fcoms
sarl
cmpl
lahf
shrb
sub
shr
push
sub
inc
xor
bound
iret
enter
or
pop
jle
std
arpl
daa
pop
push
mov
in
mov
jnp
ss
mov
dec
out
inc
jb
jb
sbb
test
adc
mov
pop
jmp
jmp
xor
lahf
sbb
and
das
or
scas
push
or
mov
arpl
push
add
mov
pop
fwait
and
dec
adc
push
mov
incl
arpl
jno
add
ficoms
mov
cs
sarl
push
popf
push
lcall
loop
mov
cmp
mov
clc
decl
nop
idiv
mov
cmp
lods
push
and
ret
push
pop
loop
mov
ljmp
mov
and
int3
mov
mov
cltd
leave
test
fwait
cwtl
stos
add
incl
xchg
lods
jmp
mov
test
or
pop
pusha
dec
fs
fbstp
pop
rorl
into
mov
jmp
jge
add
cmp
adc
movsb
mov
mov
ret
xchg
mov
jecxz
adc
lock
jnp
pop
cmpsb
out
pop
cmpl
and
sahf
inc
in
lock
ret
movsb
xor
jno
fisttps
jb
repz
enter
inc
sub
jmp
dec
mov
xchg
div
fcomip
mov
sbb
lds
push
lea
jecxz
xchg
clc
mov
hlt
xor
incl
xlat
outsb
xor
cs
pop
sahf
jecxz
jb
out
ds
mov
push
cmp
pushl
jle
jns
jmp
xchg
repz
mov
fdivrl
rcrb
or
cs
ds
ljmp
mov
pop
decb
xchg
mov
mov
mov
aas
inc
pop
icebp
movsl
mov
loopne
push
mov
arpl
nop
test
mov
jl
cmpsl
push
scas
daa
cld
mov
cld
imul
roll
bound
and
imulb
stos
in
mov
cmpsl
cmp
je
xchg
adcb
xchg
jecxz
push
leave
js
xchg
jg
call
pop
mov
psrad
lahf
test
rclb
sub
out
and
lahf
xor
push
out
leave
jge
loopne
imull
cmp
push
inc
and
sbb
cwtl
lret
bound
dec
cmp
add
loopne
lds
ret
jp
repz
call
mov
mov
sahf
cmp
iret
xor
jp
jns
js
jnp
push
insl
daa
dec
jge
jb
cwtl
out
push
popf
lret
jg
push
sti
loope
lods
or
jge
pop
cmp
arpl
push
cwtl
fwait
les
insb
cli
inc
pop
xchg
cmp
loop
and
inc
or
decl
jns
inc
das
mov
cmpsb
lock
pop
andb
add
adc
ja
clc
push
sbb
mov
pop
mov
xlat
mov
and
sub
jg
movsl
dec
fbld
xchg
nop
sahf
xchg
pop
rorb
mov
aaa
fldl
or
rcll
jnp
inc
stc
add
pop
cmp
pop
sbb
jp
ss
jnp
cltd
fstpl
mov
sub
mov
adc
imul
cmp
cmp
dec
inc
stos
out
xchg
xlat
sahf
inc
fwait
insl
mov
dec
ja
pop
out
lcall
adc
dec
xchg
dec
pop
ja
lcall
push
in
sub
dec
push
pop
jno
mov
jne
inc
xchg
mov
fcomps
clc
mov
ret
jle
and
pop
ret
xor
mov
sahf
clc
mov
cmp
loopne
std
jbe
pusha
sub
rclb
jmp
sbb
test
dec
lods
push
testb
aam
outsb
or
ret
ljmp
fs
popf
clc
add
cltd
add
sub
jle
pop
mov
aas
inc
mov
push
cmp
lock
jl
cmc
call
loopne
xchg
jle
or
jmp
cmp
push
dec
xor
and
into
push
test
inc
xchg
call
pop
andb
gs
xor
sbbl
inc
jmp
xor
and
dec
jnp
aas
in
stos
cmp
sbb
sbb
es
sub
add
xchg
mov
mov
divl
jmp
mov
fsts
mov
sub
mov
or
sti
adc
incl
adc
pop
inc
data16
adcb
test
ljmp
cli
jo
jne
dec
push
inc
or
dec
sti
mulb
sub
xchg
or
in
xor
jge
jle
cmp
jb
xchg
rorb
mov
xchg
out
clc
ja
jp
std
mov
dec
xor
add
mov
jle
and
sbb
lcall
stc
arpl
jle
jmp
cmp
adc
nop
ds
lods
addl
jne
rcl
orl
adc
push
nop
mov
mov
popa
cmpsb
imul
ljmp
dec
loopne
jle
js
add
repnz
test
lock
cld
decl
aas
pop
fimuls
xchg
inc
dec
hlt
ficoml
xchg
jo
andl
fcomip
or
out
add
lret
and
in
inc
xor
mov
gs
pop
mov
pop
inc
push
inc
push
xchg
mov
add
out
cltd
add
out
loopne
decl
lock
lret
pop
aas
shrb
add
fwait
xchg
mov
lret
cmp
imulb
xchg
out
lcall
ljmp
jo
fstps
shlb
lret
xchg
pop
lcall
icebp
inc
xchg
mov
roll
adc
out
fldl
sub
add
add
xchg
repz
jae
jnp
cmpsb
lock
mov
cmpsl
mov
das
testl
jge
push
mov
loope
lcall
jp,pn
dec
fdivrl
xchg
bound
rcl
xlat
jg
incl
es
push
movsl
ss
xorb
pop
xor
adc
add
fcmovbe
pop
or
push
mov
jg
ss
clc
pop
jge
stos
fisttpl
test
add
dec
lds
add
scas
cmpsb
mov
xor
push
ss
sub
sbb
ljmp
mov
xor
stc
rcrb
in
mov
pusha
insl
shll
call
dec
out
call
aad
mov
pushf
ja
and
mov
loope
mov
cmpsb
jecxz
sub
es
cmp
sbb
jmp
dec
adc
addr16
add
sar
incl
mov
add
int3
int
jecxz
mov
and
xchg
mov
imul
xor
imul
enter
movb
and
sbb
xor
ja
mov
adc
jg
xchg
adc
mov
jae
jne
nop
add
and
rol
ljmp
lcall
mov
xchg
clc
sbb
add
jle
mov
jb
bound
pushl
std
fldcw
cmpsl
or
cmp
pop
and
das
xchg
shlb
mov
sub
cmp
jle
test
and
add
fwait
and
inc
sub
int
in
lods
dec
mov
jp
xchg
push
mov
inc
sarb
jo
cwtl
push
sub
dec
xor
mov
dec
xchg
xor
adc
jne
fsubrs
in
jp
sti
scas
pop
lret
sbb
divb
push
scas
mov
push
adc
das
ljmp
ss
lahf
test
enter
hlt
xchg
jae
adc
fistpll
scas
dec
cwtl
inc
cld
idivb
adc
jmp
shl
std
sbb
rolb
dec
inc
push
sbb
fisubs
and
std
cmpsl
movsb
mov
xor
in
pop
fbstp
push
jecxz
pop
call
ljmp
test
cmp
mov
lcall
fs
icebp
std
cmp
fbld
test
sub
stos
mov
gs
sbb
adc
mov
push
popa
scas
jo
decl
lock
jmp
xchg
stos
sahf
sbb
rclb
cmp
jge
jno
cmp
sbb
pop
mov
or
decl
sbb
test
cmpsl
test
popf
pop
test
mov
pushl
int
dec
imul
iret
daa
repnz
dec
xor
incb
and
jp
jle
ret
fisubrs
or
addr16
cmp
xchg
movsl
stc
pop
dec
repz
lcall
jle
in
add
clc
ret
in
inc
push
push
sbb
imull
testl
jne
add
test
push
divb
adc
xchg
cld
cmp
imul
push
popf
out
ficoms
mov
rorl
sar
out
in
push
lea
mov
aad
repz
insl
pop
xchg
int3
mov
jg
lcall
es
ja
imulb
arpl
jg
ret
arpl
add
call
adc
mov
mov
iret
insl
ret
xchg
sbb
jecxz
std
lock
sub
jno
jmp
cmpsl
out
xor
and
mov
push
icebp
mov
xchg
repnz
jg
stos
ja
test
movsl
mov
enter
in
cli
fdivrs
mov
incl
sbb
leave
outsl
cmp
add
fbstp
icebp
test
inc
cmp
scas
movsb
stc
lahf
dec
lret
mov
in
fists
sub
push
ds
push
es
pop
mov
decl
fidivs
push
sti
mov
test
test
test
sti
notl
jge
out
sub
incb
notl
adc
cmp
and
lret
push
jmp
or
lret
mov
sbb
mov
loop
out
mov
inc
fisttps
scas
in
push
nop
dec
jecxz
cs
push
call
cmp
jg
cmp
jg
sahf
es
inc
mov
xor
sub
adc
out
stos
notl
ljmp
mov
xchg
xor
outsl
arpl
adc
pop
dec
jg
test
dec
pop
lret
outsb
pop
sbb
adc
cmpsb
push
aaa
dec
jne
repz
incl
stos
outsb
adc
repz
cmp
and
xchg
repz
jne
dec
mov
rol
sti
inc
sarl
mov
lcall
lea
jmp
jecxz
ljmp
xchg
sbb
xchg
pop
loop
sbb
loopne
sahf
mov
aam
ja
push
dec
pusha
movsl
jg
xor
lods
dec
icebp
lds
test
jnp
sbb
imul
xchg
loop
push
iret
shlb
ljmp
mov
mov
push
pushf
push
mov
inc
cmp
mov
jns
sbb
push
into
dec
jb
inc
xchg
dec
or
or
jmp
inc
stos
cwtl
mov
cmpl
jg
shl
pop
call
xor
loope
hlt
adc
in
cli
shll
and
sti
xor
mov
lcall
or
add
iret
movsb
push
cmpsb
ret
scas
xchg
sbb
sti
jg
inc
sub
jb
sar
daa
sar
xchg
push
and
mov
cmp
in
test
jp
ljmp
push
cld
sbb
sbbl
lcall
push
push
push
inc
pop
dec
sbb
push
stc
les
xchg
js
xchg
xchg
fstl
jge
insl
mov
loop
pop
mov
ret
add
iret
mov
ss
jmp
xchg
imul
test
test
mov
xchg
inc
inc
sub
decl
fs
in
cmp
ds
mov
popf
xchg
adc
repnz
jl
mov
decl
dec
push
rclb
daa
pop
or
sahf
mov
xlat
in
jl
and
in
sub
fildll
jmp
mov
cmp
and
fiaddl
es
lods
sbb
jns
mov
mov
in
mov
fcomip
rol
lahf
inc
jbe
and
add
arpl
lahf
xchg
and
les
cmp
js
icebp
pushl
mov
cmpsl
into
xchg
push
and
rorl
data16
jg
nop
add
jns
push
add
or
outsl
and
out
cmp
rcrb
and
add
ljmp
push
dec
add
addr16
and
jae
push
scas
shll
gs
in
repz
test
cli
in
lret
push
and
jecxz
jmp
adc
dec
ret
xor
and
ret
inc
rol
mov
sbb
pop
and
and
into
push
enter
mov
mov
add
add
arpl
sar
fwait
stos
push
jne
push
test
sbbl
inc
inc
inc
jg
mov
cltd
enter
dec
in
mov
enter
mov
adc
incl
jae
add
push
pop
jp
dec
sub
stc
add
movsl
fldcw
cmp
incl
pop
inc
mov
mov
cmp
adc
movb
adc
jmp
dec
mov
xor
fstps
cld
xor
mov
icebp
ja
dec
int3
loop
and
addr16
push
mov
out
adc
in
push
mov
sub
xor
test
cmpsl
sub
jg
clc
imul
push
shrd
mov
lahf
and
cld
incl
and
loop
orl
mov
hlt
in
lcall
pop
fsubr
test
inc
mov
xchg
testb
and
cs
ljmp
test
lret
jae
xchg
cwtl
arpl
sub
call
mov
mov
mov
inc
rcrb
push
xchg
or
pushl
or
xchg
mov
push
daa
lcall
xor
or
inc
inc
out
inc
pushl
cld
movsb
sbb
jp
pop
jp
clc
ret
mov
ljmp
pushl
pop
cmovge
pop
push
js
xchg
push
outsl
pop
call
and
pop
adc
dec
mov
outsb
loop
test
aad
call
pop
addl
es
pop
repz
lock
push
jecxz
dec
stc
push
jle
in
pushl
mov
pushf
sub
jle
xchg
mov
mov
pop
mov
das
inc
hlt
fstps
gs
lds
lcall
or
and
rcll
dec
outsl
movsb
arpl
xor
push
mov
adc
arpl
dec
loop
gs
into
aas
xor
test
dec
lret
jmp
testb
dec
test
sarb
jbe
inc
lds
aam
jl
movsl
daa
adc
push
imul
call
in
pop
addr16
jecxz
cltd
pop
shrl
sub
test
sub
daa
popf
mov
neg
icebp
adc
shll
and
test
mov
test
and
mov
aam
cmp
insb
or
hlt
scas
jbe
cmc
mov
decl
inc
jecxz
mov
push
fcmovnbe
lahf
loopne
insl
lods
mov
out
jg
hlt
jmp
inc
xorb
testl
loope
fdivrp
push
shrb
adc
dec
pop
rorl
roll
jmp
shl
fs
cmp
cmp
lcall
jmp
mov
or
add
and
lahf
adc
aam
ds
jbe
imul
push
mov
pop
adc
in
cltd
mov
cmp
lods
sub
push
ljmp
std
aas
pop
mov
adc
icebp
jmp
jg
or
mov
adc
lcall
add
andl
jg
dec
sub
dec
pop
int3
out
pushl
jge
or
dec
shr
mov
lret
or
enter
loopne
cmp
pushl
add
and
lds
jne
ret
push
lcall
cmp
scas
sbb
popf
mov
arpl
push
mov
mov
push
aam
sbb
addb
pushf
clc
jns
push
push
cld
in
lcall
fmuls
xor
xchg
jns
int
lcallw
push
xorl
popa
imul
cs
stos
shlb
test
jp
decl
sti
aas
inc
imul
sarb
shl
pop
mov
push
mov
mov
shlb
push
xor
inc
inc
xor
push
push
daa
std
jmp
cs
call
pop
fiaddl
leave
push
mov
mov
push
mov
sub
lcall
lcall
fadds
ljmp
sarl
cmp
call
dec
sar
fildll
dec
sbb
push
adc
idivb
ljmp
adc
pop
mov
sub
inc
jmp
jle
cmpsl
into
sbb
mov
cmc
lcall
jle
sub
fidivs
mov
popf
mov
mov
cmp
int3
and
xor
roll
aaa
jge
mov
std
insb
sub
and
dec
imul
fdivrl
arpl
test
mov
add
jge
cmpb
jns
xchg
xor
jb
pop
and
xor
jl
mov
sub
fdivr
mov
leave
popf
lods
notb
andl
popa
mov
xor
call
and
call
ret
movsb
cmp
mov
call
inc
inc
ret
aaa
int
pop
in
cmp
popf
dec
fs
add
inc
mov
incl
pop
pop
lcall
xchg
sbb
push
sbb
rcrb
movsl
or
sub
adc
call
cmp
out
jg
push
ljmp
or
mov
cmp
ss
jecxz
into
sub
or
call
je
adcl
xchg
xorl
sbb
inc
add
cli
mov
scas
lds
jne
or
jmp
int3
mov
sub
sbb
mov
call
call
sbb
adcb
mov
push
dec
sub
sarb
shll
fstpl
negb
mov
lcall
iret
cmp
pop
and
cmp
lea
scas
adc
xchg
or
sub
scas
sub
jns
sti
jmp
std
or
sub
push
push
inc
leave
cmc
adc
es
scas
or
jg
mov
or
mov
fildll
lahf
jnp
adc
mov
mov
sub
mov
and
sti
es
loop
cltd
sub
push
pop
insb
or
es
mov
push
add
jg
lods
iret
mov
cmp
in
dec
cmp
iret
into
sbb
lret
xchg
decl
or
inc
in
scas
jae
mov
test
iret
pushl
mov
cmp
icebp
inc
inc
lock
std
xchg
lret
pop
out
jb
mov
test
push
jmp
fiadds
into
xor
lods
cmpsl
cmc
sarb
shrb
decl
mov
stos
movsb
test
cwtl
jle
or
repnz
mov
mov
lcall
pop
pop
stc
gs
xor
push
push
sbb
xor
ljmp
push
mov
xchg
sbb
and
push
add
dec
pop
push
adc
filds
cmpsb
inc
jae
push
cmp
ror
mov
repnz
cld
pop
mov
push
jg
inc
and
leave
call
ljmp
loopne
dec
mov
xchg
adc
or
int3
xor
dec
dec
aaa
aad
lds
into
ljmp
jg
add
inc
aam
movsb
lcall
xor
shrl
pushl
jae
xchg
pusha
out
jnp
rorl
scas
push
sbb
push
mov
pop
or
push
xor
dec
jmp
sub
test
repnz
dec
mov
fidivrs
mov
roll
movsl
pushf
xchg
and
pop
loopne
dec
cli
scas
mov
and
sarb
inc
sarl
rorb
jecxz
aaa
sarb
mov
xor
js
inc
shll
clc
loopne
pop
mov
popa
ret
xor
cmp
cmp
xor
out
cli
mov
dec
ja
pushf
sarb
loop
pop
lret
jecxz
addr16
iret
iret
mov
xchg
sub
data16
rolb
lret
or
or
ljmp
mov
sbb
sbb
and
sbb
clc
wbinvd
mov
add
cmp
inc
dec
mov
cmp
push
loop
sbb
addr16
inc
jmp
lahf
inc
iret
lret
daa
je
ds
outsb
cmpsl
jl
sahf
mov
adc
pop
pop
and
fists
add
dec
add
jp
ret
enter
or
add
mov
add
mov
idivb
cmp
adc
xchg
sbb
push
sbb
adc
push
js
sbb
jg
into
das
and
push
iret
inc
lods
movsb
sarb
shrl
gs
scas
xorl
out
add
mov
sbb
jmp
icebp
out
cli
mov
mov
inc
and
adc
jne
and
and
sbb
inc
ja
inc
lock
jb
adc
jp
mov
mov
adc
jbe
adc
and
inc
mov
xchg
cli
incl
cmp
loope
pop
subl
aaa
mov
in
and
incl
mov
xchg
inc
lret
inc
popf
js
xor
imul
cmp
add
mov
xchg
mov
shrb
mov
aas
add
and
js
call
out
jnp
push
divl
mov
int3
ret
lea
int
bound
jns
and
aaa
cmp
clc
sub
rolb
push
in
das
out
lds
ret
incl
fwait
std
mov
sahf
add
fs
test
mov
call
std
or
dec
scas
je
test
lods
loope
dec
cwtl
adc
pushf
cli
movsb
addb
ljmp
scas
mov
shlb
test
imul
dec
cli
idiv
or
mov
jmp
inc
push
jle
insl
sar
call
mov
or
insb
call
jl
aas
adc
into
xchg
cwtl
es
sbb
sub
into
rcl
gs
xchg
out
xchg
stos
out
ss
sbb
jns
jle
ret
lret
mov
jno
loop
cmp
xchg
sahf
dec
xchg
mov
rorb
cwtl
xchg
xchg
out
mov
and
xor
aaa
js
dec
sub
dec
arpl
xor
push
adc
jmp
cmpsl
pusha
repnz
mov
sahf
fldenv
lret
call
ret
push
cmpsb
lock
mov
mov
push
dec
das
adc
in
inc
and
push
ret
mov
clc
mov
adc
pop
cmp
pop
mov
cmpsb
pop
xchg
adc
stos
push
inc
xchg
cld
clc
shl
lcall
loope
add
mov
push
aas
repnz
inc
dec
bound
pushl
fdivs
xchg
cli
push
fdivs
mov
data16
add
push
xor
pop
cmp
dec
ljmp
xchg
mov
mov
and
xor
and
inc
xchg
hlt
jmp
add
rorl
mov
cmp
in
inc
icebp
nop
mov
ja
pop
xchg
in
sbb
inc
push
and
push
popf
mov
pushl
inc
arpl
xchg
arpl
gs
in
jp
cmp
push
andb
xchg
sbb
add
dec
mov
pop
mov
mov
call
les
xchg
into
sbbb
xor
lods
push
adc
insl
and
incl
gs
cmpl
movsl
cmp
mov
cmp
adc
shlb
shll
cld
pop
mov
dec
and
jo
sub
pop
js
sbb
jg
aaa
data16
dec
in
jns
dec
ja
jp
cmp
dec
jl
ljmp
sub
xor
lret
out
sbb
pop
lds
jmp
fmuls
insl
clc
jae
jmp
or
sub
out
or
inc
jp
pop
pop
mov
lcall
aaa
inc
push
cmc
in
push
or
insl
movsb
jo
pop
or
jge
ljmp
cwtl
int
sub
mov
ds
lock
push
leave
add
lcall
xor
push
jo
mov
mov
imul
sub
imul
adc
imul
inc
aaa
ficompl
cmp
lock
jne
xor
adc
aaa
jbe
repnz
pushl
ret
stc
insl
or
inc
jno
mov
adc
mov
sbb
inc
call
lcall
adc
scas
outsl
je
add
add
movb
jmp
scas
xchg
mov
fidivs
xor
fwait
popa
mov
adcl
pop
loopne
cmpsb
or
push
test
loope
sub
mov
dec
mov
xchg
std
repnz
mov
pop
subl
jo
push
sbb
xchg
dec
cmp
mov
clc
decl
mov
lods
dec
inc
mov
std
ljmp
ror
cld
jns
clc
and
jp
incl
enter
orb
imul
out
xchg
jle
sbb
ret
lcall
adc
outsl
iret
jo
dec
cmp
sub
xchg
stos
lods
dec
in
aam
adc
jg
ljmp
and
lret
negb
jo
js
xchg
dec
push
daa
out
ljmp
sarl
and
sbb
xor
push
cli
leave
data16
xor
add
mov
in
push
or
add
push
je
pop
pop
mov
xor
jo
cmp
repz
call
fwait
xor
clc
sub
add
cwtl
and
mov
lahf
roll
pusha
std
call
repz
aad
rcrb
or
push
pop
loop
sbb
or
mov
lahf
push
pop
shll
mov
in
xchg
popf
push
and
call
cld
adc
adc
jp
sbbb
adc
or
mov
adc
adc
jb
cmp
push
into
and
aad
xchg
add
jmp
shll
jp
mov
mov
filds
cld
addr16
sti
iret
push
das
xchg
nop
push
lock
fidivl
test
add
sub
xor
jmp
push
xchg
div
mov
fisttps
mov
sbb
rolb
jmp
ret
and
call
and
pop
cwtl
adc
jmp
sub
imul
mov
lock
ret
jb
push
inc
outsb
xchg
jmp
lcall
sbb
mov
xchg
pop
ja
bound
jno
xchg
add
lcall
fcompl
pop
lcall
clc
mov
push
rolb
or
in
mov
fnstcw
mov
mov
loopne
xor
lcall
notb
sbb
popa
sahf
incl
call
pop
push
imulb
loop
scas
jns
lock
fwait
leave
xor
cmpsb
incl
lret
add
movsl
lods
call
mov
xchg
jns
jb
imul
fwait
push
xorb
sub
cmp
rcll
sub
adc
mov
add
movsl
jae
ret
jno
jge
les
sbb
sbb
scas
clc
ljmp
xor
xor
adc
dec
xchg
test
jbe
adc
subb
cmpsb
adc
test
nop
pop
push
xchg
pusha
iret
je
scas
popa
sub
incl
pop
cmp
ret
mov
dec
jb
pop
outsl
jmp
loop
lods
dec
incl
fcomps
dec
sub
test
and
adc
adcb
ljmp
mov
ja
daa
cmc
leave
jno
out
fisubl
push
xor
add
jb
fs
incl
push
movsb
mov
sbb
leave
mov
or
dec
cltd
es
lcall
jno
mov
or
sub
lret
push
xor
mov
add
or
dec
push
jb
pop
test
ljmp
or
or
bound
mov
pop
jbe
roll
pushf
test
out
gs
les
mov
lret
adc
pop
mov
inc
dec
push
push
mov
mov
lods
mov
push
xchg
call
xchg
or
call
in
adc
and
ds
lcall
sub
inc
or
aam
xor
das
setno
pop
push
sub
jg
add
out
cmp
clc
mov
adc
cmc
loope
mov
addr16
mov
incl
cmp
js
out
xchg
xor
incl
xorl
mov
int
pusha
adc
fcmovb
mov
leave
mov
test
push
mov
or
push
iret
ljmp
lret
pop
mov
mov
rolb
imul
pop
inc
ljmp
subl
and
pop
ret
outsl
lock
jno
popa
dec
mov
ljmp
mov
insb
xchg
insb
mov
leave
pop
xchg
xor
adc
xorl
imul
and
jmp
fwait
cmp
jg
mov
jmp
sbb
cld
lock
or
pusha
pop
or
mov
repz
jmp
lea
add
adc
pushf
aad
sub
dec
outsl
cli
mov
and
into
js
in
sub
pop
sti
stos
push
std
lea
rcrb
push
call
sahf
movsl
test
sahf
clc
or
cmpsb
fisubrl
jbe
in
xor
add
orl
dec
in
dec
pop
mov
aam
add
hlt
push
ljmp
add
hlt
mov
inc
js
or
shlb
mov
lcall
pop
cltd
or
lret
mov
testl
cs
jp
push
hlt
sub
sbb
xchg
call
hlt
mov
in
clc
and
addr16
add
jp
repnz
xor
nop
orb
ljmp
lcall
xchg
in
bound
pop
jge
sbb
adc
lcall
push
pusha
push
call
push
cmpsl
ja
pop
popl
in
icebp
mulb
bound
dec
lcall
jmp
cs
aas
rcr
adcl
cwtl
jmp
mov
decl
fs
hlt
cmpl
dec
fidivrs
in
cmp
call
or
jg
in
mov
sub
jo
mov
je
std
cltd
inc
ja
shrb
mov
fistl
cmpsl
push
xchg
jbe
mov
sub
inc
or
pop
pop
add
stc
or
xchg
mov
popf
std
insl
cmpsl
pop
imul
insl
mov
dec
inc
arpl
decl
xchg
sbb
xchg
and
fwait
push
fnstcw
stos
mov
movsb
push
push
cmp
jg
mov
mov
jmp
lea
aaa
or
lret
inc
and
ljmp
mov
xrelease
sbb
iret
dec
push
dec
jg
subb
pushl
xchg
push
rcrb
mov
int
fildl
sbb
jo
xor
in
rorb
ljmp
in
pop
inc
in
in
xchg
lods
inc
add
stos
jns
adc
lea
mov
and
xor
and
lcall
adc
cld
inc
fidivs
fcomip
xlat
mov
sub
insl
mov
cmp
fadds
movsl
out
or
rorb
rorb
pop
icebp
outsb
loope
sbb
jnp
sub
jae
les
inc
dec
jne
loop
subl
sbb
ret
rolb
fs
cmpsb
mov
jmp
jnp
mov
push
sub
fstpl
jo
stos
xchg
xchg
jbe
out
inc
cwtl
es
rcll
aaa
jo
jmp
insl
inc
cmp
fwait
sub
incl
in
scas
mov
mov
in
mov
jae
mov
pushf
mov
and
xchg
movsb
outsl
xchg
int
lahf
mov
addr16
popa
push
lea
lcall
mov
sti
sbb
subl
ffreep
mov
sub
dec
dec
cli
xor
mov
decl
scas
sbbl
lea
divb
ret
movsl
mov
jg
mov
mov
in
clc
call
jb
jp
sub
repz
loop
outsb
ss
pushf
stos
jge
imul
cmp
lock
lock
pop
cltd
xchg
lret
mov
jmp
sahf
pop
arpl
fisttpl
pop
sahf
and
lods
or
dec
xor
lcall
mov
add
pop
js
mov
imul
shrl
sbb
ljmp
test
lret
ja
jge
movsb
shrl
cmp
adc
ljmp
dec
jge
shll
xchg
mov
inc
clc
mov
pop
adc
gs
add
push
or
mov
jl
jp
xor
jbe
loope
mov
pusha
adc
push
cmp
mov
gs
fstpt
add
lcall
sbb
adc
das
pop
sbb
sbb
pusha
hlt
push
pop
or
popf
pop
repnz
in
ds
call
cwtl
jbe
insl
es
sub
into
cmpsb
push
and
sti
sbb
in
adc
pop
mov
inc
hlt
jmp
insl
push
lea
enter
xchg
jp
fildll
mov
test
adcb
mov
mov
cld
mov
jg
mov
push
xchg
imul
mov
pop
mov
lods
mov
cmp
loopne
sub
sub
xacquire
push
lcall
pop
lods
and
test
adc
iret
into
fwait
adc
xchg
nop
pop
xor
cmc
push
or
sbb
jmp
mov
loop
loopne
pop
sbbl
ljmp
mov
ret
mov
cmp
pop
jmp
pushl
or
fs
adc
and
lea
andb
repnz
mov
sarl
or
inc
sti
lcall
push
js
jmp
adc
scas
repnz
dec
jmp
mull
dec
decl
xor
mov
shlb
and
std
sbb
mov
cltd
push
in
roll
push
push
psadbw
xchg
pushl
add
mov
scas
pop
enter
dec
cs
test
adc
pop
jmp
mov
aad
push
loope
fimuls
pop
inc
pusha
hlt
nop
inc
cld
test
or
mov
mov
lret
incl
icebp
test
popa
push
lods
int3
and
cld
push
push
inc
push
ds
insl
pop
fisttps
xchg
into
mov
cmpsl
out
gs
jmp
movsb
fldenv
test
in
push
sarb
sbbb
lods
jo
fisubs
sbb
cli
call
aas
xor
pop
hlt
dec
insb
xchg
fcomi
mov
mov
dec
push
mov
push
add
adc
jae
data16
bound
add
decl
jno
ds
sbb
dec
xchg
mov
or
mov
cmp
imul
jl
fiadds
test
xchg
add
mov
pushl
popa
mulb
dec
cld
sbb
call
inc
push
test
mov
repz
fdivrs
sbb
or
lcall
fwait
mov
call
insb
mov
jg
jle
push
bound
mov
and
lcall
adc
movsb
das
xor
sub
cs
or
fcomip
data16
arpl
mov
push
push
dec
sub
lcall
xor
das
jg
fsubrl
test
out
xlat
ljmp
lods
add
fwait
sub
cmpsl
and
icebp
xchg
adc
xor
seto
lock
cs
and
lcall
mov
or
xchg
adc
aaa
ljmp
pop
test
dec
push
dec
in
jmp
xor
jae
pop
dec
shlb
fs
dec
enter
shll
xchg
dec
inc
in
in
dec
outsl
lods
mov
cmpsb
sbb
pushf
je
cmc
incl
fsubrs
popf
loop
test
add
xchg
push
cmpsl
add
addr16
xchg
stc
push
stc
adc
sti
mov
sub
xchg
movsl
lahf
xor
movsl
decl
ss
adc
mov
call
push
push
sub
repz
pop
in
ljmp
cmp
out
popa
shlb
out
rcl
cmp
jp
imul
loop
pop
notb
sub
or
lcall
out
aaa
xchg
inc
ja
inc
bnd
dec
or
insl
ja
outsl
cld
jg
mov
loopne
ljmp
int
les
or
mov
std
pushf
mov
repnz
sub
loope
xchg
jb
adcl
decl
imul
stos
enter
cmpsl
pop
loop
int3
cltd
mov
lods
nop
mov
orb
jmp
cli
or
dec
and
jecxz
rcrl
arpl
cmp
sbb
push
data16
jne
outsb
pop
add
pop
andb
adc
and
push
dec
and
sbb
mov
sahf
dec
dec
aad
fnstsw
mov
std
inc
cltd
pop
and
lcall
cmpsb
mov
shll
adc
stos
dec
outsl
fdivl
fiadds
jl
cltd
cld
adc
push
inc
mov
scas
scas
mov
mov
loopne
mov
pusha
sahf
in
add
pushl
adc
stos
pop
call
jmp
sar
mov
cwtl
aad
cmpsl
mov
ficoms
inc
jno
lret
nop
mov
outsb
sar
lcall
clc
lret
xchg
int3
mov
sbb
dec
insl
es
jae
mov
push
daa
fdivrp
ds
mov
sti
mov
loope
daa
shlb
jmp
pop
mov
movsb
push
rcrl
jns
mov
in
sub
adc
sub
out
xchg
mov
aas
push
push
lods
aad
cmp
loop
sub
pop
test
inc
sub
je
mov
fisttpl
sub
xor
daa
adc
jnp
push
jmp
mov
out
cli
call
mov
mov
repnz
jge
pushf
push
push
push
movsb
rclb
das
cli
decl
cmpsl
or
add
sti
es
les
loopne
incl
out
mov
notl
pop
cmp
in
mov
mov
sbb
xchg
cmp
add
call
inc
xchg
nop
pusha
sub
mov
idiv
push
je
pop
cmc
inc
loopne
loope
ljmp
xchg
mov
clc
pop
mov
sbb
mov
xlat
mov
das
decl
sub
frndint
mov
mov
push
mov
jmp
inc
adc
add
iret
pop
scas
jmp
dec
and
adc
das
sbb
stos
pop
sti
jmp
es
decl
sbb
into
outsl
mov
bound
mov
lret
push
mov
push
and
jno
xchg
and
mov
jbe
lahf
pop
mov
push
push
repnz
pop
cmpb
aaa
push
pop
cld
popa
nop
mov
fwait
lcall
fwait
and
push
subb
fistpll
ret
movsl
sbb
push
sbb
das
clc
xor
and
stc
idivb
sahf
ret
cld
cli
repz
filds
lcall
ds
mov
call
popf
movsb
inc
fisttpll
dec
ljmp
mov
movsb
or
dec
xchg
push
test
jg
call
adc
cmpsb
icebp
xchg
dec
ds
lahf
mov
dec
jmp
ss
lds
xorb
sbb
cmp
ds
test
inc
jmp
cmp
jg
fildll
sbb
lods
test
xlat
std
cmpsb
sub
in
pusha
leave
outsl
and
mov
adc
cld
or
stos
stos
add
out
jecxz
lret
mov
mov
xor
lods
mov
xacquire
and
ret
adc
incl
les
or
jb
sti
ja
rcrb
jge
fistps
stos
scas
and
cmpl
cmp
test
and
shlb
push
bnd
imul
mov
xlat
or
fwait
ds
dec
xchg
sub
in
clc
hlt
pop
jnp
push
jo
push
mov
xor
pop
sahf
add
sub
ljmp
sub
push
xchg
enter
mov
arpl
pop
shrl
inc
jge
popf
adc
cmp
jmp
mov
pusha
loope
sub
push
jo
cs
mov
lcall
push
mov
andb
adc
mov
lods
jp
cli
decl
dec
xchg
fisttpl
xor
jmp
movsb
imul
popf
shll
icebp
and
pushl
cmpsl
dec
in
sbb
out
popa
add
add
xor
mov
mov
call
lcall
mov
push
mov
lret
add
sub
ljmp
clc
push
arpl
inc
pop
std
adc
jg
inc
pop
mov
imul
mull
jnp
adc
mov
outsl
int3
add
inc
mov
mov
adc
call
xor
inc
jae
orb
sarb
cmp
sbb
xor
xor
loopne
mov
xchg
lcall
dec
cmp
cmpsb
sub
repnz
or
loope
jno
fisubs
imul
outsl
lea
ljmp
movsb
xor
lods
xor
ret
xchg
dec
cmp
inc
mov
pop
int
lcall
lock
shll
cli
add
add
ret
sbb
push
jmp
ret
hlt
mov
push
cmp
ds
fldcw
sar
sbb
push
mov
push
lods
insl
cmp
and
lcall
mov
imul
mov
fmuls
cwtl
repz
dec
cld
fxch
test
imul
mov
ljmp
inc
mov
push
divl
pop
push
push
inc
dec
into
sbb
fdivl
lahf
or
xor
lret
jmp
cmpb
mov
sbb
ljmp
test
and
js
pop
mov
xlat
jmp
shll
fstps
loopne
xor
and
mov
call
jo
lds
nop
pop
mov
jecxz
stc
push
es
mov
push
jb
and
and
outsl
andl
cwtl
scas
loop
lock
pop
inc
inc
xchg
test
and
xchg
pusha
mov
cmpsb
decl
in
dec
add
gs
mov
popa
adc
mov
andps
incl
je
inc
arpl
sub
nop
call
je
lods
mov
mov
decb
mov
test
pop
or
movsl
add
imul
pusha
jmp
fnstcw
ljmp
enter
movsl
push
cwtl
call
inc
arpl
cmp
movsb
fwait
lods
mov
ret
rorl
mov
lret
push
mov
aaa
orb
jecxz
aas
inc
pop
push
lds
orb
and
lods
jg
cmpsl
mov
arpl
or
clc
sbb
xchg
lock
inc
loopne
or
ss
mov
fistps
imul
push
or
loopne
add
mov
add
movb
and
add
bound
and
js
xor
cmp
and
and
ss
lcall
inc
fidivrl
dec
sbb
in
xor
int
fidivrs
movsl
aaa
gs
ja
pop
icebp
fdivl
test
push
push
lock
outsl
mov
jne
gs
jg
xchg
and
cmp
lods
pop
sbb
shrl
lret
out
lcall
inc
cmp
mov
or
stc
lret
mov
fs
aam
xchg
imul
rorl
iret
or
test
fdivr
das
sar
sub
scas
addr16
xor
sbb
sar
std
and
jmp
jmp
mov
out
pop
sub
or
in
mov
lret
aam
das
push
out
mov
jg
hlt
adc
add
sbb
sarb
push
sbb
pop
inc
sti
mov
pop
cmpsw
loop
ljmp
add
jns
jle
das
adc
jmp
mov
pushl
mov
xor
sub
in
outsl
in
jno
cmp
stos
movsb
scas
push
and
push
xchg
cld
fdivrs
lcall
loope
stos
ret
aam
rol
sub
inc
and
add
std
jmp
xor
sbb
data16
push
enter
or
icebp
pop
je
rcll
addl
popf
sbb
cwtl
lcall
movsb
mov
cmc
call
cwtl
xchg
ljmp
out
sti
insb
ret
pusha
idivb
idiv
mov
ja
into
mov
jnp
mov
in
xor
or
jg
dec
je
lock
pop
dec
stos
dec
mov
pop
int3
push
mov
xchg
push
mov
sti
push
clc
dec
cltd
or
in
jp
shlb
xor
incl
jp
mov
out
test
scas
stos
push
xor
inc
adc
mov
ret
sbb
xchg
repnz
or
xchg
nop
jb
jp
add
cmp
dec
fcomip
xor
push
shl
into
sbb
jne
and
ljmp
pusha
add
dec
stos
or
in
or
aas
xchg
stc
cs
pop
jg
fucomip
xor
or
cs
push
mov
or
pusha
sbbb
icebp
mov
outsl
adc
fimull
xchg
pop
sub
scas
cli
call
ret
add
jnp
lea
cltd
push
scas
mov
or
ljmp
xor
or
repz
enter
pushf
mov
out
xor
push
ljmp
ja
sbb
push
jmp
rcrb
mov
lea
mov
loopne
cld
loop
lcall
stc
nop
pop
jns,pn
jmp
or
ljmp
mov
in
test
or
pop
cwtl
and
cmp
dec
test
das
lods
mov
or
out
cmp
fsubrl
fsubrl
test
push
jb
push
push
xorb
faddl
jmp
adc
out
sub
dec
jp
mov
fldt
xchg
icebp
jg
nop
in
popf
ljmp
xor
jmp
pusha
cmp
iret
mov
jecxz
push
dec
loopne
mov
or
mov
cld
sub
dec
fs
adc
js
adc
mov
or
ljmp
popa
jbe
repnz
adc
shr
adc
movlps
fidivl
iret
insb
lds
pop
nop
lods
xor
xlat
xchg
push
outsl
into
lock
or
or
xchg
mov
pushf
out
pop
jmp
dec
sbb
dec
and
inc
loop
scas
ljmp
pop
add
jnp
orps
arpl
lcall
xchg
lret
jmp
int
cli
push
out
mov
xchg
out
mov
dec
ja
xor
mov
ljmp
mov
scas
out
mov
cmp
pushl
cmp
fists
cmp
jns
xchg
mov
inc
jbe
cs
xor
mov
int
je
enter
jo
push
imul
daa
rorb
inc
aas
loop
insl
cmp
jl
jle
pop
ja
aaa
pop
add
jno
xor
in
sub
jne
push
movsb
movsl
into
xor
ljmp
lret
movsb
jns
scas
mov
ljmp
pop
cs
repz
xchg
pusha
add
mov
jmp
fwait
mov
push
icebp
cmpsb
add
mov
sub
jmp
jge
lea
xchg
icebp
mov
mov
sarl
xor
sub
movsb
jae
adc
add
xchg
out
sub
lcall
add
loope
or
fyl2x
mov
add
xchg
push
push
je
jl
stos
shll
pushl
imul
pop
adc
sub
xchg
imul
into
xchg
push
xlat
negl
add
pop
push
cli
call
push
xchg
add
xlat
sub
cld
xor
sbb
fbstp
mov
xor
pop
sbb
lahf
test
clc
adc
daa
popa
aam
incl
and
cmpb
or
sar
xor
lcall
add
ljmp
push
or
fmull
rcrb
jmp
xchg
jo
adc
sub
ret
test
push
xchg
lock
fiaddl
cli
lcall
or
pop
sub
int
and
sbb
inc
repz
lcall
adc
loope
or
out
push
sub
lds
xchg
dec
push
add
add
decl
and
mov
push
lret
pop
pop
cmp
cmp
or
call
fwait
cmp
add
mov
mov
xor
mov
sub
ljmp
mov
gs
sahf
inc
pop
es
or
shlb
dec
decl
jmp
push
mov
xorl
outsb
and
adc
lahf
ss
lret
and
jmp
or
sbb
sub
in
sub
cmpsl
movsl
es
pop
ljmp
pop
aaa
stc
pop
loope
mov
repnz
stos
das
inc
ljmp
adc
and
icebp
dec
or
popf
mov
imul
movsl
outsl
lea
test
movsb
mov
ret
ljmp
movsb
add
mov
cs
movsb
aaa
mov
mov
incb
adc
pusha
stc
cmp
or
or
ljmp
push
shll
dec
or
push
xor
push
jg
sbb
in
test
add
decl
add
lret
push
mov
add
shl
inc
xchg
mov
mov
jmp
sbb
dec
jl
push
sub
cmp
add
andb
nop
pop
lods
pop
xchg
pop
orb
sti
jg
and
add
decl
std
fnstcw
jmp
mov
mov
ja
mov
inc
xchg
gs
inc
call
dec
sub
dec
cld
jg
pop
decl
js
loop
shl
lock
notl
ja
js
dec
das
sahf
lock
lock
cmpsl
cmc
mov
jp
bnd
mov
add
inc
clc
repz
mov
mov
jle
loope
push
mov
fcomip
jmp
inc
mov
jns
outsb
stc
cmp
loop
push
lods
or
incl
cmc
movsb
xchg
sub
into
jae
out
loope
in
xchg
adc
sti
push
jo
add
aaa
std
push
std
add
mov
jge
xor
fisttps
je
iret
inc
into
loope
lcall
shlb
jl
pop
jmp
jno
fcmovne
adc
std
and
out
or
test
pop
and
fcmovnb
into
xlat
push
push
sub
jg
lcall
push
inc
inc
and
sbb
test
sub
push
mov
ljmp
mov
pop
addr16
daa
or
call
lds
mov
sbbb
fwait
std
in
cmc
je
jo
fwait
rcrl
aam
iret
mov
outsb
mov
pushf
je
fcmovnu
or
hlt
and
mov
incl
loopne
rol
daa
loopew
scas
pop
push
lcall
mov
fnstsw
ljmp
push
nop
daa
xor
add
jnp
inc
shrl
fnsave
loopne
outsl
cwtl
adc
decl
push
test
not
imul
pushf
loop
jae
inc
cld
mov
cwtl
test
or
lahf
sub
cmp
in
in
cmpsb
mov
dec
out
gs
pop
sub
out
mov
dec
jg
mov
xor
leave
insb
test
pushl
xor
mov
push
push
repnz
cmp
aaa
aad
js
or
cmp
decl
inc
inc
and
and
ret
mov
mov
aaa
movsl
insl
pop
pusha
aaa
pop
mov
fcompl
cmp
das
clc
call
inc
aas
push
jae
call
test
mov
fadds
filds
out
sub
lcall
ror
ds
mov
mov
push
je
or
mov
jmp
dec
jmp
mov
cmp
xchg
push
adc
add
inc
fcomip
mov
and
mov
sbb
push
adc
xor
fcoml
pop
jnp
or
and
loopne
inc
cmp
ljmp
out
in
mov
cwtl
cmp
sub
insl
push
pop
jmp
mov
lods
xchg
pusha
in
or
xor
inc
mov
icebp
push
arpl
sub
jae
leave
data16
jmp
into
push
stc
gs
push
mov
pop
lret
jp
mov
push
pop
movsl
mov
int
ljmp
dec
push
sarl
push
rcrb
pop
ret
pop
sar
xchg
fsubrs
dec
ret
push
sar
mov
enter
jg
loope
or
lret
sub
pop
mov
stc
ret
divl
pop
stos
push
push
stos
pop
icebp
ljmp
leave
arpl
in
call
mov
dec
pop
daa
ljmp
adcb
lods
jb
add
fidivrl
fnstenv
inc
jg
xor
ljmp
lcall
cmpsb
data16
test
mov
cmp
jp
jns
or
cmp
in
inc
lcall
push
jb
or
pop
mov
cmp
incl
cwtl
mov
jo
mov
ja
mov
mulb
movsb
cmp
jae
xchg
outsb
and
fwait
jnp
frstor
cwtl
dec
insb
iret
xchg
sbb
lea
fcomip
mov
adc
and
jo
outsl
add
xchg
jae
jle
arpl
js
jmp
lea
fiadds
in
js
mov
pop
test
dec
addr16
outsb
notl
adc
lcall
jno
insl
inc
mov
test
mov
sti
xor
xchg
xor
rol
push
add
test
add
int3
out
push
je
les
mov
popf
sub
dec
sbb
cmp
int3
bound
xor
fwait
lcall
and
or
add
and
ss
mov
ljmp
lcall
jb
sbb
cmp
xlat
jle
jmp
mov
jl
xchg
aaa
mov
push
pop
test
pop
ret
and
lods
jl
nop
xor
adc
insl
inc
xorb
ror
incl
mov
in
dec
ja
jmp
push
scas
popf
push
scas
lock
or
scas
inc
pop
mov
outsl
jmp
push
inc
adc
outsl
jb
aaa
cwtl
ss
or
movsb
les
fs
loope
fldt
leave
shrb
cmc
lcall
lods
ja
pop
loope
hlt
jmp
ja
mov
fwait
out
rcrb
ss
iret
pop
and
adc
ljmp
test
imul
mov
addr16
cmpsl
pop
cld
and
jmp
xchg
mov
jge
mov
pushl
xor
sti
xor
rolb
out
imul
jno
in
lahf
pop
xlat
sub
pop
pop
addr16
decl
cmpsl
in
pop
loop
lahf
stos
cmp
lds
loopne
cmp
pushf
add
mov
jmp
adc
add
outsb
fadds
sbb
out
add
pop
pushf
lods
clc
adc
into
ds
ljmp
xchg
adc
cltd
shll
xlat
roll
cmp
xchg
inc
xchg
roll
pop
ror
or
lcall
int3
mov
add
add
js
add
dec
stc
sbb
push
cmp
mov
and
mov
mov
mov
jg
push
xchg
cmp
neg
out
mov
mov
outsb
js
push
jbe
mov
call
add
clc
adc
ret
movsbl
cmp
lock
add
incl
fisubrl
sbbb
mov
dec
cmp
mov
jge
test
add
fcmovnu
rorb
fbstp
adc
push
ljmp
pop
popf
xor
xchg
cld
lods
in
xchg
xor
ja
ret
push
lods
les
xor
cltd
inc
movsb
mov
push
fiadds
hlt
jne
out
mov
or
pop
mov
lds
pop
sub
cmp
incl
mov
sub
sbb
in
in
jge
xor
lahf
xchg
mov
inc
pop
mov
stc
pusha
cmp
mov
jle
outsl
lahf
mov
std
in
mov
jmp
in
test
je
lahf
out
add
mov
pop
incl
aaa
cld
push
cli
test
jmp
inc
clc
popf
mov
push
pop
mov
or
xor
sub
arpl
mov
xchg
mov
jecxz
xchg
push
idiv
mov
lock
jne
mov
add
aas
iret
test
mov
cld
inc
pop
stc
cli
push
pushf
dec
rcll
es
pop
pop
popf
ljmp
dec
sub
pop
jle
jg
dec
xor
idivb
ds
push
test
shlb
int3
decl
mov
pop
cmp
insl
je
push
shl
mov
inc
or
sbb
out
mov
xchg
hlt
lods
das
add
pop
mov
pushf
into
push
out
in
or
cmp
fildl
mov
into
xchg
int3
xchg
testl
or
aaa
adc
mov
in
out
inc
and
sbb
fwait
jne
popa
mov
call
xchg
push
out
cmp
mov
pop
aas
fucomi
loop
out
adc
in
dec
mov
xchg
addr16
incl
adc
mov
cs
cld
es
ljmp
int3
push
int
cld
in
sbb
dec
inc
incb
adc
sub
scas
cmc
pop
cld
lcall
or
jg
or
adc
sub
adc
lret
jnp
rcl
pushl
xor
mov
in
inc
stos
cmpsl
jb
cmp
ljmp
arpl
lret
scas
sub
mov
push
xchg
iret
popf
inc
push
lret
daa
pop
jns
xor
or
insl
xlat
push
or
in
test
pop
incl
lea
mov
push
cs
mov
cltd
test
aas
push
leave
fs
pushl
cld
xchg
inc
pop
jns
jns
mov
add
cwtl
cmp
inc
hlt
cltd
fbld
jmp
mov
mov
iret
clc
outsb
cmp
mov
jp
jmp
movsb
adc
xor
addr16
mov
or
xchg
ret
cmc
cltd
cltd
pushl
xor
ret
jnp
dec
sub
dec
sbb
ds
bnd
out
push
and
push
sbb
das
clc
call
mov
inc
out
fsubrl
movntps
adc
in
adc
pushl
jmp
rolb
sti
outsl
mov
pop
in
fidivrs
pop
mov
loopne
jns
or
aaa
std
leave
xchg
xorb
movsb
fadd
mov
push
loop
mov
cmp
xchg
cs
nop
dec
in
lcall
mov
or
inc
lds
lcall
or
iret
daa
outsl
cmpsb
test
pusha
subl
mov
test
call
icebp
or
cli
in
sub
inc
sbb
and
ret
or
fs
add
jl
orb
inc
arpl
ljmp
in
popa
xchg
iret
test
jns
lock
push
repnz
dec
jle
xor
call
inc
ret
pop
push
imul
or
inc
push
push
in
gs
or
pop
jge
adc
jmp
mov
pop
pop
fsub
push
pop
mov
aaa
nop
jmp
popf
movsl
test
call
jp
push
mov
jecxz
fsts
hlt
movsl
int
out
nop
mov
add
or
lock
pop
inc
loopne
mov
mov
fsubs
stos
xchg
pushf
jecxz
pushf
cli
cmp
pusha
mov
mov
jns
mov
pop
hlt
cs
and
mov
or
add
ss
inc
je
sbb
pusha
cwtl
push
ljmp
ret
or
clc
scas
lds
push
xor
mov
shrl
jnp
adc
add
nop
mov
shr
add
idivb
cld
mov
fidivs
adc
add
push
call
adc
ds
mov
cmp
int
or
mov
pop
loope
xchg
out
inc
lods
loope
icebp
knotw
mov
jg
popf
sbb
jle
popf
cmpsb
loopne
cmc
jp
loop
and
fildl
ret
mov
mov
inc
xlat
dec
sbb
lcall
out
add
jmp
sbb
mov
push
pop
insb
bound
scas
mov
or
ret
shll
pop
hlt
cmp
mov
push
xlat
jmp
rclb
jmp
inc
jae
hlt
mov
ja
mov
push
or
mov
mov
push
inc
mov
ljmp
mov
outsb
ret
or
mov
cld
lcall
ja
aam
jbe
jo
jecxz
push
lret
movsb
and
and
das
clc
call
pop
mov
into
jle
dec
mov
add
sbb
add
adc
jp
cwtl
nop
aam
push
add
mov
cmp
in
add
cmpsb
andl
push
jge
insl
mov
jmp
xchg
hlt
sub
shll
stos
mov
cli
in
jg
sbb
mov
rcrb
dec
movsl
jo
incl
test
imull
dec
or
add
cmp
cwtl
lcall
push
fmull
incl
mov
aad
mov
ret
fistpl
ds
in
lods
out
jecxz
lcall
jnp
jp
xlat
lcall
and
xor
pop
add
push
cmp
je
lds
pushl
or
std
adcb
and
aaa
mov
add
lcall
mov
mov
scas
xor
dec
sahf
scas
xlat
in
xor
lods
imul
call
adc
shr
dec
xor
or
or
xchg
jae
sbb
cs
pushl
cmp
aaa
push
dec
aaa
sub
loope
mov
incl
sub
loopne
shll
push
push
ss
jo
mov
in
testb
loopne
xchg
cmc
jg
repnz
rorl
sub
push
dec
push
mov
jmp
loope
inc
inc
dec
inc
ret
mov
inc
pop
sub
shrb
test
jns
ljmp
adc
out
pop
jb
inc
jecxz
or
cld
push
and
add
in
rcrb
adc
xlat
in
stos
add
xchg
addr16
or
call
std
lcall
aad
mov
cmc
cmpsl
rol
sbb
loopne
out
cs
adc
xchg
pop
pop
cmpsb
mov
inc
mov
xor
and
mov
mov
dec
sti
sub
xchg
lods
mov
push
clc
fcompl
jg
jbe
test
or
pushl
pop
mov
mov
mov
mov
mov
out
jg
das
or
imul
popf
cmp
xchg
cmp
outsl
hlt
xlat
mov
adc
incl
pushl
popa
test
dec
inc
adc
lahf
lds
pushl
das
pop
das
cmp
rcrl
out
xchg
sub
imul
or
incl
enter
idivl
or
xchg
inc
xor
loopne
incl
inc
call
repz
ljmp
int
test
xchg
sbb
clc
pushl
cld
sub
fdivs
jbe
loop
mov
mov
fisttps
js
inc
out
sarl
loopne
push
mov
sbb
jmp
inc
inc
imull
andb
fucomip
mov
repz
jl
adc
roll
xchg
cmp
mov
clc
sti
jle
in
in
inc
dec
loope
push
xor
loope
push
lods
fists
and
adc
add
movups
xor
repz
mov
and
sbb
xchg
fdivs
mov
xchg
dec
lods
ds
lock
push
test
xchg
sub
sub
out
decl
fsts
mov
mov
jg
cmp
push
push
ljmp
inc
push
icebp
add
mov
add
mov
push
ja
lcall
das
dec
xchg
loopew
and
cmp
orb
cmpsl
sub
inc
dec
clc
push
sub
add
cli
jg
imul
mov
cmpsb
repnz
jmp
pusha
loopne
push
into
sub
into
push
adc
dec
stos
sub
add
xor
push
cmpl
ja
popf
nop
lcall
mov
or
ljmp
push
inc
mov
xchg
add
and
subb
ret
push
mov
out
dec
test
inc
or
push
inc
push
sbb
rorb
jae
aam
sub
pushf
mov
mov
rolb
mov
mov
iret
out
mov
popf
push
in
aas
insb
or
adc
inc
and
or
or
mov
mov
push
stos
inc
fidivrl
test
jmp
test
sbb
dec
clc
shlb
mov
iret
inc
lock
mov
fs
cmp
or
popf
lcall
and
repnz
loope
jb
lcall
js
xchg
outsb
std
aad
dec
xor
dec
aad
test
scas
cwtl
mov
sarl
clc
ljmp
push
mov
xchg
xchg
lcall
fwait
lcall
jne
add
js
lcall
je
call
pop
int3
mov
push
adc
loop
dec
inc
lcall
cltd
out
mov
shlb
inc
std
pushl
dec
add
cmpsb
inc
sub
pop
lock
xchg
sub
es
fcompl
enter
jae
mov
incl
cmpb
loop
add
enter
dec
sar
arpl
cmp
aas
sub
aaa
decb
in
xor
repz
in
out
cmpsl
add
fists
mov
xor
das
sarl
fimull
push
in
jg
fwait
shll
xor
xchg
testb
xor
insl
std
ret
mov
jmp
jl
jns
ljmp
clc
jno
sbb
sbb
dec
bswap
dec
ljmp
mov
ret
mov
push
fistpl
repnz
adc
fldl
es
cmpl
push
inc
imul
and
push
lock
pop
or
mov
pop
fs
incl
push
sbb
mov
aad
test
scas
int3
add
pushl
call
enter
pop
les
or
dec
cmp
mov
jecxz
sub
arpl
decl
mov
or
xchg
outsb
repnz
xor
adc
popf
mov
decb
cwtl
test
je
mull
std
jo
or
insb
jo
or
fadd
insl
mov
in
insl
incl
cld
pop
mov
orl
scas
sbb
mov
pop
lret
add
pushl
cmp
loopne
fs
push
repnz
push
enter
or
lock
pop
dec
pop
repnz
ljmp
add
dec
xor
sbb
aaa
cld
das
mov
mov
add
arpl
sti
neg
insb
std
pop
jg
call
dec
jae
mov
xor
ljmp
pusha
xor
lods
pusha
ror
jmp
pop
cld
mov
sub
sub
add
jl
lock
adc
aaa
push
sbb
fstpt
or
aaa
pop
cld
ret
movsl
inc
inc
fsubrs
inc
cwtl
inc
lret
xor
scas
inc
pop
in
repz
decl
insl
pop
ss
mov
adc
out
cmp
iret
lret
shlb
mov
es
jmp
jne
adc
decl
aam
rol
pushl
dec
movsl
jne
push
lcall
add
arpl
adc
and
outsb
mov
dec
ficomps
pushl
enter
sar
or
mov
mov
in
pop
ja
lret
push
or
pop
or
sub
lcall
xor
int3
mov
mov
push
xchg
sbb
and
push
or
add
outsl
pushf
gs
outsl
xor
aaa
sub
in
mov
lock
xchg
pusha
sbbl
mov
fsubrl
fs
ljmp
rcrl
inc
fistpl
sahf
je
add
and
ljmp
pop
das
lret
movsl
adc
and
push
adc
sbb
lods
mov
incl
jmp
xchg
loopne
jae
xor
adc
idivl
les
dec
cmp
adc
out
push
cltd
lcall
mov
lret
inc
cwtl
ljmp
js
repz
lcall
dec
dec
in
xlat
or
sub
scas
add
mov
mov
fisubl
outsb
sub
dec
xor
push
pop
jb
ljmp
sub
jne
es
cmpsb
sub
xlat
mov
into
inc
xor
or
cmp
lcall
mov
sub
test
gs
das
sbb
test
lcall
inc
push
out
stos
sbb
enter
notb
enter
push
xor
dec
jg
outsl
je
cmp
adc
cli
sub
pop
xchg
mov
enter
jbe
das
sar
std
scas
repz
sbb
push
out
test
divl
aas
push
shrb
icebp
sbb
sub
icebp
pop
jp
and
incl
jns
and
inc
mov
jmp
sub
dec
mov
adc
adc
push
leave
insb
inc
add
dec
dec
adc
add
das
rolb
cmp
insb
cld
push
xor
data16
incl
xor
dec
mov
dec
xchg
into
cli
mov
jmp
jnp
cmp
sub
movsl
outsl
rorb
mov
lcall
mov
fstl
cld
fcomip
adcb
adc
add
int
into
rcrl
push
cmpsl
dec
jne
and
and
sarl
and
shrl
jmp
jg
call
cmpsb
loop
push
sub
xchg
adc
xchg
xchg
jp
cmp
lahf
jns
adc
shl
sub
add
add
jmp
push
outsl
xchg
and
fcoms
dec
stc
jg
xor
jecxz
fldl
call
inc
out
mov
inc
cli
nop
push
pop
cmp
and
les
mov
xchg
and
incl
leave
aam
xchg
dec
fwait
mov
sub
imul
xor
shlb
incl
test
sbb
pushl
sub
ret
ljmp
fimuls
push
jno
mul
lds
and
and
adc
fs
addr16
hlt
jg
cmc
adc
mov
xchg
jl
mov
xor
out
call
std
jg
test
in
add
rclb
scas
stos
pop
cli
fsubrs
scas
mov
cmp
push
sub
lahf
repnz
das
ljmp
rcll
mov
mov
test
xchg
mov
dec
out
add
push
mov
fisttps
test
js
idiv
in
in
andl
jg
sahf
out
add
fldcw
lret
pusha
xor
out
inc
xor
adc
sahf
pushw
filds
dec
insb
bound
loopne
cld
imul
jmp
insb
mov
cld
pop
xchg
and
mov
call
scas
dec
testb
pop
mov
lcall
movsl
sub
or
call
or
jl
jecxz
rcrl
dec
test
jno
lahf
cmp
jp
dec
hlt
test
jae
jge
shlb
pop
popa
push
idivb
lods
test
pushl
mov
shrl
cmp
adc
adc
push
push
idiv
mov
push
nop
cmp
sub
mov
xchg
out
push
fcomip
inc
pushl
into
aas
dec
adc
xchg
sahf
lret
cmc
cmc
ds
mov
incl
adc
mov
xchg
movsb
cmp
lret
xchg
popl
cmpsb
pusha
push
mov
ss
ljmp
adc
mov
pop
mov
mov
sub
sub
mov
add
xchg
mov
ljmp
jns
sub
mov
insl
mov
push
sbb
popa
push
dec
push
inc
add
cmp
std
negb
ds
in
mov
call
pop
and
inc
pushf
jb
dec
repnz
cmpl
mov
std
jns
dec
jns
mov
cmpsl
pop
lock
sbb
es
mov
or
out
js
sub
dec
pop
lret
incl
pushl
or
jne
out
data16
jno
sti
pop
sti
ja
jg
mov
cli
jmp
enter
cmp
leave
fiadds
jmp
clc
push
pop
adc
cli
or
mov
push
pushf
ds
xchg
ret
mov
add
inc
rolb
loop
jbe
ds
sbb
aam
ud0
jmp
mov
xchg
xor
mov
pop
int
lods
icebp
lar
scas
ljmp
fsubrs
jg
or
incl
pop
lret
push
sub
and
dec
jno
push
in
push
movsl
push
movsb
mov
xchg
mov
ss
call
jecxz
lret
mov
sub
lds
imul
pop
or
movsb
pop
xchg
fadds
sti
pop
mov
sub
mov
call
and
and
ja
push
ljmp
jl
in
rcrb
scas
cmp
sub
pop
pop
sbb
out
inc
pop
inc
addr16
scas
int
insl
jge
push
push
inc
push
inc
mov
jle
push
jnp
sub
and
call
cld
mov
shl
lods
fists
add
cs
add
loope
mov
or
call
pop
ret
mov
sbbb
les
adc
pop
rolb
jmp
aas
hlt
xor
or
jns
fistpl
jno
adc
sub
and
xor
pop
out
nop
mov
inc
pop
pop
pusha
add
xchg
add
in
inc
jno
jmp
rorb
fidivrs
loope
adc
pmulhw
mov
pushl
insb
mov
mov
test
aaa
fcoms
add
jecxz
push
hlt
in
pop
out
xchg
fistl
mov
sub
inc
sub
mov
sub
xor
mov
fiadds
jns
push
flds
mov
or
decl
idivl
lods
jo
cmp
jno
dec
cwtl
out
push
mov
clc
and
sub
incl
xchg
mov
shrb
test
pusha
daa
mov
mov
aaa
insb
push
xchg
sbb
push
iret
sahf
fildl
divl
ffree
mov
fwait
and
mov
fwait
lock
ja
jle
mov
mov
jns
loopne
es
fucomp
test
imul
xor
in
mov
ljmp
fsubr
xchg
cmp
jp
push
xchg
mov
mov
aam
inc
sbb
incl
dec
mov
xor
popl
inc
mov
out
hlt
call
inc
cli
jne
pusha
inc
es
push
xor
pushf
arpl
cmp
subl
xor
mov
call
lret
stos
rcr
aam
sahf
dec
shrb
xor
push
adc
cmpsb
or
add
lcall
fbld
inc
add
sub
ds
and
mov
out
cmp
jmp
push
xor
mov
push
jae
sbb
incb
dec
inc
sub
pushf
out
cmp
scas
cmp
push
lods
cld
adcb
pop
in
mulb
ljmp
jno
fwait
push
stos
ret
rol
dec
fsub
inc
ljmp
outsl
out
jg
jge
xchg
jbe
xchg
jne
pop
sbb
mov
rcl
mov
pop
lcall
mov
or
ljmp
mov
push
adc
push
fsts
xor
lea
cmp
mov
and
stc
sub
sub
fcomps
fildll
cmp
jg
mov
jnp
dec
xchg
add
insb
xor
ss
es
jmp
xchg
scas
scas
stos
adc
lcall
sbb
imul
movzbl
data16
ret
sbb
repz
jg
ret
adc
scas
imul
mov
mov
lods
adc
adc
test
pushl
inc
scas
rcl
mov
jecxz
repnz
cmp
ds
add
stos
adc
add
inc
pop
incl
add
in
push
int3
sbb
lcall
push
faddp
aas
sti
sbb
das
jo
mov
enter
push
inc
xlat
sub
in
incl
pop
xlat
or
xor
push
andl
push
out
push
jecxz
popf
repz
stos
dec
or
das
push
std
ljmp
dec
push
jl
cmp
pusha
xchg
and
jmp
lcall
ja
push
mov
hlt
dec
cmp
test
addr16
pop
xchg
decl
gs
sbb
scas
mov
aad
icebp
adcb
jp
push
push
jl
add
in
clc
ja
xchg
pop
add
sub
mov
add
call
in
mov
mov
dec
idivl
rclb
gs
mov
and
sub
sub
adc
sbb
sub
xchg
dec
adcl
jl
push
push
add
mov
divb
jl
cmp
push
sub
sbb
mov
loope
adc
xchg
sub
incl
mov
cmp
mov
push
bound
fs
xor
lret
cmp
jp
pushf
out
enter
dec
or
fists
mov
xchg
jno
hlt
push
test
dec
mov
push
mov
dec
lcall
or
pop
lods
lods
dec
cmp
xchg
add
xor
inc
xchg
or
push
mov
inc
adc
pushl
mov
mov
push
pop
stc
dec
cwtl
jp
imul
repz
and
xchg
adc
push
mov
shl
rolb
mov
ffreep
stc
mov
inc
pop
icebp
jmp
call
xor
jnp
or
fldcw
outsb
sub
jge
lcall
xchg
jge
ds
es
or
lret
pop
cmp
cltd
lret
lea
mov
das
icebp
mov
xchg
or
xor
mov
call
in
ret
icebp
lods
or
push
mov
mov
notl
inc
push
aas
push
add
mov
lret
dec
push
shrb
jbe
test
add
or
mov
cmp
push
ficoml
in
lock
jmp
push
adc
pop
push
xchg
cmp
push
xor
xor
inc
leave
jnp
cmp
ljmp
in
and
insl
cmpb
negb
add
scas
lds
xlat
addr16
pusha
or
mov
lods
arpl
lock
in
clc
std
into
into
mov
xchg
in
cmpsl
in
inc
int3
sub
ljmp
lret
inc
dec
push
mov
sbb
add
daa
jb
outsl
xchg
xchg
mov
mov
dec
push
and
sub
es
xchg
and
iret
jae
aad
aam
mov
out
movsb
cmpsb
mov
fwait
call
mov
sbb
out
and
cmpsl
out
jns
push
in
sbb
adc
mov
fwait
push
mov
push
cwtl
cwtl
pop
lcall
scas
lret
jl
or
or
pop
sbb
jecxz
pop
out
xchg
jp
minps
sti
js
fsubrl
pop
sub
outsl
jg
mov
mov
decl
push
dec
push
ljmp
adc
mov
mov
mov
out
mov
fldenv
testl
mov
daa
cwtl
pop
sub
or
decl
push
pop
inc
pop
mov
cwtl
mov
bound
lcall
and
mov
rcr
sahf
cld
adc
or
dec
fld
inc
loope
cld
jmp
xor
fistpl
mov
add
test
cmp
or
push
cmp
jg
and
adc
adc
dec
cmpl
ljmp
push
sub
int
adc
jnp
push
mov
xchg
push
adc
cwtl
sarb
lods
lahf
fwait
pushf
or
jge
inc
dec
test
jmp
iret
mov
int3
in
sbb
pop
push
or
andb
and
es
into
insb
dec
xor
add
lcall
arpl
idiv
imul
xchg
push
jne
cmp
and
add
lock
mov
xchg
cwtl
mov
decl
sbb
outsb
jno
aam
lds
ficomps
mov
push
sbb
lcall
mov
mov
or
sbb
stos
lret
ljmp
rcl
cli
pop
das
sar
pop
lods
aad
movl
jae
decl
push
mov
sarl
and
mov
jp
roll
push
fcomip
ljmp
push
jecxz
ja
mov
insl
lock
js
js
popl
pop
push
sub
cld
loopne
push
ss
jb
inc
mulb
fs
jg
cmp
cmp
loope
lock
int3
mov
mov
and
es
aaa
lret
xchg
inc
loope
decl
std
sbb
mov
movsb
popa
mov
pop
ds
dec
jmp
mov
mov
sbb
repz
dec
xor
jnp
cmpsb
aam
dec
les
jmp
sahf
xchg
jl
dec
jge
fmul
cmp
daa
scas
push
enter
xor
out
mov
jmp
imull
scas
outsb
dec
out
or
xchg
push
fdivrl
pop
mov
sub
and
decl
jnp
and
cmp
pop
push
jns
xor
pushf
jne
lea
daa
sbb
mov
pop
lcall
cmp
push
dec
dec
dec
xchg
cld
ljmp
in
cs
sub
nop
sahf
add
call
sub
je
adc
and
and
xor
nopl
iret
pop
push
xor
dec
mov
mov
jne
cwtl
adc
imul
and
decl
or
fdivl
push
pop
lret
sub
idivl
mov
and
sub
enter
in
mov
pop
ja
mov
jp
push
xchg
sarb
add
dec
decl
sub
ja
jns
les
xchg
jg
icebp
arpl
aaa
js
lahf
insb
mov
call
push
and
jp
in
loopne
push
repz
or
movsl
icebp
iret
dec
pushl
xchg
xchg
mov
out
lock
flds
push
rcrl
mov
xchg
in
mov
dec
sbbl
cmc
loop
jmp
cld
jmp
in
ds
pop
push
popf
mov
mov
ja
push
push
call
bnd
rclb
popa
xor
dec
imul
xor
sbb
xchg
and
cmp
sbb
and
das
idivb
mov
enter
ljmp
cltd
cmc
fwait
imul
outsb
pushf
je
call
outsl
pop
outsb
or
xchg
jnp
dec
nop
popl
xor
cmp
incl
psraw
adc
xchg
adc
cld
dec
adc
mov
sub
push
xor
ljmp
pop
pushf
sub
adc
sub
xor
xor
dec
popfw
test
decl
mov
clc
mov
xchg
out
ret
and
xlat
mov
clc
icebp
in
pop
icebp
or
add
push
ljmp
call
jp
sarl
cli
mov
jecxz
hlt
adc
mov
jp
adc
std
clc
test
movsl
das
pop
sbb
lret
cwtl
dec
adc
mov
pushl
int
dec
cmpl
and
jae
xchg
mov
movsb
inc
ficompl
inc
adc
jg
jmp
lds
lcall
sub
int3
sti
mov
pop
jg
decl
sahf
jg
mov
fists
xchg
and
pop
je
lret
imul
fs
leave
push
lds
lahf
xchg
lcall
dec
xor
rolb
sti
adc
inc
les
sarl
sbbl
stos
call
xor
adc
xor
jb
dec
sub
cmpsl
and
mov
inc
or
pusha
cmp
xchg
outsb
cmp
arpl
loop
adc
xor
fldenv
out
xchg
push
jecxz
pop
xor
test
dec
fcomp
repnz
loopne
lcall
imul
ds
pop
nop
push
out
call
inc
aam
push
sub
cwtl
push
imul
jb
idiv
frstor
pop
lods
bound
clc
and
jne
jnp
call
fs
mov
inc
fwait
xchg
sub
es
lea
ss
loopne
xorb
mov
scas
pop
dec
scas
dec
jae
mov
iret
mov
pushl
dec
cmp
adc
adc
aaa
jo
mov
add
mov
incl
inc
sbb
cwtl
mov
ret
ficomps
jl
sbb
in
rcrb
mov
mov
mov
jecxz
xor
jg
icebp
aam
scas
sub
xchg
push
jmp
xchg
mov
pxor
out
out
cmpsl
lcall
jl
data16
xchg
sbb
mov
adc
pop
pop
xchg
call
jnp
hlt
loope
fucomi
mov
outsl
push
out
lods
mov
fistpll
hlt
imul
or
clc
in
lcall
out
inc
inc
dec
sbb
out
xchg
and
out
ss
lcall
das
cli
jg
das
das
or
sti
and
push
test
jle
xchg
test
jmp
cld
mov
mov
scas
pusha
dec
and
fabs
push
icebp
cmc
lcall
notb
inc
xchg
std
push
pop
cld
call
mov
and
push
scas
lcall
adc
cli
or
pushl
and
rclb
mov
int3
fldcw
or
fisubl
lds
pop
into
mov
xchg
in
adc
iret
mov
sub
iret
dec
into
out
rcrb
dec
push
ret
sbb
or
sub
out
clc
jmp
jae
stos
imul
adc
and
push
dec
mov
out
xor
jecxz
inc
jg
cmp
adc
mov
and
mov
sub
jmp
shrl
jno
loop
incb
cmp
sarb
test
jg
xor
in
pop
clc
incl
repz
adc
dec
aam
mov
lock
in
movsl
push
sub
xor
cmp
call
pop
stos
mov
fcomp
mov
shrl
fcoms
cmpsb
push
jmp
or
mov
cwtl
cltd
cmp
xlat
xchg
xchg
push
cmpsb
add
sbb
in
mov
and
aam
push
data16
cld
mov
jl
lods
push
jg
leave
lcall
jg
inc
ss
shll
cmp
and
sbb
sbb
aas
sub
mov
dec
pusha
fcoms
mov
or
out
lcall
aam
mov
lahf
push
fsubrs
les
mov
incl
loope
insl
xchg
inc
test
test
cmpsb
scas
pop
mov
lahf
pusha
mov
gs
cld
lods
cmpsl
insb
dec
adcb
loop
sbb
fcomip
xchg
xchg
in
loop
out
repz
jge
pop
xchg
fisubrl
fsubs
lcall
shll
jo
out
rol
inc
les
ret
ret
inc
ljmp
lret
into
mov
or
or
shl
out
pop
jmp
cmpsl
sub
adc
or
cmc
movsl
adc
push
xchg
push
push
push
sbb
mov
fistl
in
cmp
int
jbe
lods
xor
mov
or
orl
mov
xor
xchg
add
xchg
mov
call
adc
mov
cltd
jp
or
addb
xchg
or
lods
daa
insl
ret
call
popa
cmp
ljmp
push
and
jle
fidivl
pushf
sub
jae
testl
xchg
ror
xlat
sbbl
shll
pop
mov
cmpsb
xchg
test
idivl
mov
mov
jo
notl
arpl
cld
out
cmp
popa
push
jle
out
or
fcompl
ret
out
in
cmpl
fstpl
sbb
sub
push
cmp
inc
or
call
mov
ljmp
rcll
cltd
xor
mov
hlt
pinsrw
rcll
xor
sbb
les
cwtl
push
add
imul
jo
movsb
mov
push
das
sbb
fiadds
push
fadd
jnp
pop
bswap
jge
and
loopne
cld
fbld
out
jae
pop
jg
out
jecxz
xchg
push
ja
ljmp
lods
shlb
js
lea
and
jae
test
je
dec
ret
mov
inc
je
inc
or
mov
imul
in
dec
ljmp
addr16
fsin
jl
add
cmp
jl
push
jl
test
adc
aad
movsl
push
jg
hlt
cs
dec
mov
pop
jb
inc
test
jo
cmp
popl
incl
jmp
stos
jb
adc
push
cmpsb
jecxz
mov
mov
ljmp
mov
out
mov
push
push
hlt
mov
wbinvd
nop
xchg
test
mov
mov
lret
inc
popf
pushf
cmp
xchg
aad
lcall
lcall
pop
in
add
scas
sarb
daa
pop
mov
mov
sbb
pushl
cmp
xor
ja
cmpsl
es
popf
push
leave
cmp
cmp
push
mov
jg
ss
lock
jns
push
xchg
and
ljmp
scas
dec
sub
fmull
cmp
ret
stos
fnstsw
mov
insb
mov
data16
pop
pop
fnclex
mov
mov
insl
mov
sahf
lods
lds
call
aam
jg
mov
dec
inc
cmp
std
mov
xor
xor
decl
lret
or
fdivr
xchg
mov
jae
jne
cmp
repz
fildll
and
push
jmp
and
mov
shlb
stos
shr
call
add
je
mov
loopne
pop
test
ljmp
ds
dec
bound
pop
push
orl
leave
mov
inc
adc
cmc
lcall
push
stos
push
ljmp
popa
xor
int3
fs
pop
cld
decl
cmp
and
jmp
add
fiadds
inc
ds
mov
arpl
mov
jle
adc
lock
cmpsl
adc
pop
test
sti
sti
dec
xor
cmp
inc
imul
fadd
xchg
outsl
inc
xchg
es
sub
movl
rorl
sar
jmp
in
jecxz
inc
gs
add
mov
outsb
push
repz
pop
xchg
mov
xchg
mov
sbb
scas
pop
repnz
pushl
inc
mov
mov
mov
xchg
cmpl
push
out
push
cmpsl
xchg
jnp
and
dec
mov
aas
jp
or
cwtl
nop
hlt
or
in
jne
incl
decl
rcrb
dec
rclb
in
mov
popf
cmp
sub
decl
cmpsb
aam
sbb
cmp
iret
movsl
xor
inc
clc
decl
adcb
int3
pop
out
int
insl
cmovb
jge
aad
inc
pop
aaa
leave
or
ret
stos
mov
jmp
push
dec
xor
add
in
lea
stc
fsubl
xchg
ret
scas
pop
add
and
cmp
rolb
jmp
push
icebp
xchg
std
pop
push
hlt
xchg
jb
std
pop
hlt
in
cld
fsts
fmull
adc
mov
xchg
push
ljmp
jmp
mov
fsubl
pop
repnz
ljmp
add
push
scas
int
test
arpl
incl
add
enter
and
stc
sub
cwtl
mov
cmp
or
mov
fs
adc
fwait
outsl
xor
sti
outsb
call
out
xor
iret
inc
cmp
and
sbb
imul
cmp
icebp
call
mov
iret
dec
aas
cld
pushl
aas
pop
cs
mov
lock
xchg
daa
cltd
das
les
stc
out
lcall
dec
xchg
xor
add
fwait
imul
mov
dec
test
adc
xor
stos
outsb
loop
shlb
jge
test
call
test
jo
mov
mov
inc
xchg
sbb
das
jle
ret
jecxz
jg
adc
test
mov
mov
mov
jge
xchg
incl
iret
pop
mov
scas
mov
loopne
sbbb
mov
mov
sbb
fimull
add
shll
add
rol
std
jmp
sub
mov
sarb
les
repz
and
das
cmp
decl
jp
lret
sahf
inc
sub
cmp
pop
aam
std
mov
pop
mov
aas
call
and
push
xchg
ljmp
xchg
pop
cmp
stos
pop
mov
aas
cld
mov
and
sbbb
jne
and
in
fdivrp
popf
jbe
loopne
pushl
push
xor
xchg
mov
cmp
imul
stos
sub
cmpsb
ficomps
pop
movsl
mov
pop
les
xor
aas
jne
stos
movsl
mov
sbb
cmp
hlt
aad
mov
std
add
clc
dec
sbb
or
bound
dec
pop
scas
icebp
out
mov
imul
sbb
mov
mov
cwtl
cmpsl
sbb
mov
call
dec
cltd
in
in
xor
and
or
mov
sub
mov
test
or
inc
ljmp
pop
ret
cmp
add
call
mov
jl
pushl
pop
push
jle
cmp
and
jne
fsubrp
or
insl
neg
pop
or
std
inc
pop
loopne
xlat
inc
xchg
stc
push
pop
insl
pop
jl
fdivrp
pushl
lcall
cltd
mov
iret
pop
push
cwtl
mov
scas
xor
mov
or
nop
les
sub
inc
fs
cli
adc
mov
lret
adc
icebp
jg
ljmp
push
shrb
xchg
mov
sbb
mov
ret
dec
xor
arpl
nop
or
inc
mov
ljmp
jbe
das
inc
sti
add
mov
test
mov
paddq
filds
mov
xor
jmp
divl
clc
mov
negl
mov
lahf
negb
sub
xor
les
cs
sub
dec
xlat
shlb
mov
sbb
dec
fs
mov
mov
stc
add
jo
and
adc
jmp
fidivrs
jno
fdivl
jnp
jp
lods
sub
stos
push
sub
addr16
hlt
lods
ljmp
loopne
lds
add
sub
pushl
in
mov
shll
insl
sbb
push
mov
inc
mov
call
mov
mov
out
in
seto
jecxz
jl
pop
into
mov
adc
jl
das
movsb
test
scas
fcompl
ficoml
loope
movsl
decl
popf
sub
callw
cmp
lahf
cmc
push
jg
xchg
xor
scas
lcall
cmpsl
sub
dec
or
sub
push
push
filds
jmp
add
jl
out
mov
push
enter
inc
and
jmp
push
push
out
adc
leave
cmp
jmp
insl
jl
sbb
adc
inc
xorb
sbb
jmp
nop
jo
pop
hlt
mov
mov
inc
inc
mov
int3
push
xorl
aam
lret
fadd
sub
cli
push
jmp
jo
loopne
push
push
jmp
sub
jns
nop
mov
jbe
dec
addr16
nop
into
fcoml
or
insl
cmp
cmp
pop
sub
insb
je
in
adc
xor
sub
incl
mov
mov
push
imul
movsl
outsl
stos
mov
xor
negb
loopne
jle
dec
sti
push
xchg
mov
sbb
andb
dec
js
xchg
and
xlat
roll
add
dec
test
and
cmp
pop
stc
in
and
aam
into
and
push
xor
dec
out
cli
sub
jle
ret
xor
sub
shll
sbb
xor
decl
sbb
cmp
xchg
xchg
nop
xor
repz
ror
jo
stc
aas
cltd
jge
lcall
pop
add
repz
orb
scas
inc
stos
jmp
int
push
jb
out
mov
out
clc
push
sbbb
mov
or
jno
dec
or
decl
gs
ljmp
xor
aam
mov
sbb
test
ret
adc
nop
movsl
jge
in
enter
call
cmp
push
adc
insl
int
fucom
dec
ja
jecxz
stos
sti
pushl
movsl
out
xchg
pop
cmc
enter
mov
mov
repz
les
nop
decl
cmp
cmp
lcall
cmp
gs
pusha
cmpsl
loop
lods
inc
mov
sbb
and
and
pushl
sub
mov
sbb
jl
stc
xchg
ret
jns
fdivrl
jmp
add
lret
push
int3
cmc
sarl
pop
dec
data16
icebp
cmp
stos
data16
pop
cld
out
sub
inc
inc
scas
test
pop
xor
ljmp
adc
cmp
pop
jmp
jecxz
icebp
sbb
xchg
mov
xor
cmp
adc
mov
imul
bound
fisttps
jmp
notl
stos
xchg
sbb
call
xor
je
mov
xlat
adcl
adc
pop
mov
jbe
stos
outsl
inc
shrb
jg
pop
dec
inc
sbb
adc
and
fidivs
fcmovnbe
arpl
out
push
popa
jle
and
in
lcall
lock
pop
jl
mov
idivl
out
jl
adc
dec
push
repz
push
push
mov
aad
and
push
lods
fsub
sub
mov
decl
into
pushf
lret
mov
mov
pop
cs
mov
fwait
xchg
lcall
ud2
and
fisttpll
pop
mov
xchg
incl
not
lcall
test
adc
out
push
xchg
mov
push
adc
call
add
hlt
test
ficoml
xor
fidivrs
aad
psubq
add
lea
iret
mov
icebp
aam
inc
insl
fdivp
ljmp
fwait
cmc
push
mov
hlt
mov
push
inc
push
jmp
mov
call
or
lds
push
repz
outsb
gs
loop
std
sub
gs
jg
loope
pop
or
in
dec
mov
inc
mov
add
and
jmp
fsubl
adc
jns
mov
out
pop
hlt
cmp
xchg
jg
imul
xchg
sti
clc
rcrl
sti
call
dec
pop
add
mov
push
testb
in
das
sub
ljmp
mov
rcr
mov
fst
in
call
pop
incl
shll
inc
pop
test
aad
sbb
aad
xor
inc
sti
cmpsb
sub
loopne
adc
adc
inc
dec
add
int
sahf
jae
movsl
xor
repz
mov
mov
fsubl
sbb
jg
pushl
cmpsb
loope
out
xchg
bound
mov
push
pop
dec
popa
gs
add
pop
std
ljmp
setg
hlt
sti
fstpl
fmull
add
sahf
cmc
andb
in
jle
loopne
sbb
sub
and
push
ja
lods
icebp
movsb
ja
dec
gs
pop
and
jnp
cmp
cli
mov
sub
xor
lock
jmp
sub
xchg
mov
out
jg
cmc
stos
xchg
jg
dec
rorl
mov
xchg
xorl
gs
fucomi
stc
imul
xchg
js
outsl
fisubl
jg
mov
ljmp
lcall
mov
stos
sbb
sub
hlt
jno
insb
ljmp
cltd
dec
xor
and
dec
add
testl
push
fimull
cld
aaa
mov
pop
pusha
jl
mov
ret
das
stc
cmp
incl
add
pop
push
push
mov
jbe
clc
sti
in
pop
xchg
loope
pop
and
cmp
inc
cwtl
dec
xchg
or
pop
rcrb
in
mov
mov
pushl
popf
xchg
push
or
rorb
push
addr16
or
sbb
test
cmp
std
popa
fdivrs
mov
int
cmpsl
and
shl
inc
dec
pop
push
jge
mov
and
adc
push
cmpsl
lds
repz
xor
pop
repnz
cmc
inc
sbb
mov
aaa
sub
add
inc
imul
and
and
fwait
fists
push
jecxz
insb
push
test
imul
add
and
call
pop
pop
inc
push
dec
pop
xor
lcall
icebp
sahf
fimull
nop
jge
adc
sub
jg
or
icebp
pop
test
rclb
outsl
mov
loop
mov
sub
add
sarl
and
addl
push
ds
in
sarl
je
iret
pop
call
dec
out
lret
cmp
jl
or
mov
out
scas
lret
sbb
lds
pop
fisubrs
push
inc
pop
mov
add
xor
call
or
lret
gs
es
filds
scas
popl
inc
jo
push
aaa
and
sbb
movsb
add
push
movsb
rorl
out
jge
scas
stos
sar
pushl
add
nop
rcrb
js
in
sbb
decl
sbb
mov
int3
xchg
in
dec
and
pop
xchg
ja
call
fdivrp
inc
xchg
dec
push
std
pop
or
test
mov
push
xchg
outsb
sarl
mov
mov
pop
stos
das
mov
push
call
loope
pop
jg
mov
ud0
call
ret
sub
or
sti
mov
sahf
jecxz
xchg
sbb
push
and
loop
fdivrl
jns
call
out
cld
mov
sbb
xchg
sub
dec
cwtl
pop
jo
dec
in
sbb
mov
out
dec
rolb
mov
pop
stc
cmp
adc
cwtl
mov
pushf
push
mov
pop
inc
xchg
test
adc
pop
xchg
push
stos
push
orb
mov
subb
inc
push
sar
pushl
xor
fcmovbe
dec
or
and
lret
loop
call
pop
pop
mov
pop
mov
pop
mov
or
pop
and
sub
dec
test
add
mov
call
inc
sub
push
jno
mov
or
ret
push
jp
aad
cmp
incl
jp
xchg
shl
jecxz
mov
pusha
movsl
push
mov
mov
cmpsb
push
jmp
js
sarb
fisubl
jmp
push
adc
mov
clc
fcom
pop
xor
test
xchg
pcmpeqb
call
inc
push
mov
lea
ss
mov
mov
iret
leave
std
lret
fwait
js
cwtl
and
push
std
stc
int3
fld
jge
dec
ds
arpl
das
xor
jae
pop
mov
cld
mov
leave
testl
lods
pop
adc
clc
xchg
mov
xor
mov
outsl
ss
ror
add
outsb
mov
out
push
dec
push
test
add
inc
xor
mov
adc
cmp
stc
roll
ljmp
cmp
adc
or
mull
mov
and
sub
cli
call
push
imul
push
jae
out
inc
xchg
orl
jmp
ud0
inc
sub
jae
out
lock
orl
and
and
in
jg
cli
jge
push
push
cli
clc
inc
sbb
inc
pop
adc
push
mov
dec
adc
xor
mov
mov
push
inc
aam
cli
sbb
imul
xor
dec
sub
adc
or
in
mov
pop
xchg
push
je
and
jns
ret
into
mov
mov
jle
clc
jl
jae
jae
call
cmp
iret
repz
cli
pushf
mov
jae
mov
nop
daa
lret
sub
mov
mov
mov
iret
push
aad
push
xor
dec
inc
loop
lret
lcall
js
in
cmp
push
or
push
add
add
push
add
sub
jg
cwtl
mov
scas
dec
dec
leave
jbe
popf
xchg
lahf
add
xchg
or
sbb
pand
push
repnz
std
bound
gs
cwtl
add
inc
pusha
call
ret
and
jo
lret
xchg
popa
jl
add
nop
out
or
ret
dec
pop
and
push
sub
push
mov
lods
jg
and
adc
lcall
hlt
dec
push
mov
test
ficoms
jo
mov
repnz
or
xchg
jg
jbe
fucomi
xchg
adc
iret
movsb
fildl
insb
ffree
aas
scas
jmp
sub
xchg
mov
push
cld
in
fadds
jl
ja
pop
sub
xchg
pop
jnp
xor
aam
pop
adc
mov
mov
insl
mov
xchg
push
incl
and
jge
fucomi
movsl
in
mov
inc
aaa
out
dec
cmc
rcl
push
sbb
xor
add
clc
in
or
xchg
jmp
pushf
stc
fists
cli
enter
ljmp
push
arpl
dec
xchg
icebp
iret
mov
xchg
loope
mov
pop
fists
test
incl
jmp
bsf
or
mov
in
sub
mov
lods
popf
xchg
push
movsl
sub
outsb
fld
jnp
cmpsl
mov
push
cli
in
mov
ror
jg
push
daa
subb
cli
mov
scas
xlat
add
and
pop
sub
loopne
sbb
sbb
ljmp
and
adc
lock
arpl
ljmp
aad
mov
fisubrs
ljmp
shll
std
lock
leave
mov
pop
outsb
sbb
mov
sub
push
xorb
inc
ljmp
mov
lret
in
jle
push
bound
stc
stos
aaa
cwtl
in
sbb
ljmp
fisubl
push
test
mov
fnstenv
xchg
adc
in
xor
gs
pushl
test
sub
jge
cmc
xor
out
cmp
mov
mov
mov
mov
cmp
sbb
mov
or
add
nop
pop
leave
test
cmpsl
inc
sub
jo
cmp
jp
pop
sti
ret
call
loope
inc
orl
adc
nop
push
cltd
scas
test
cli
push
lahf
gs
lahf
lret
jp
lcall
cmp
cmp
fstl
idiv
jns
jae
pop
jno
dec
into
popf
mov
cs
pushf
pop
xchg
jae
loop
adc
adc
inc
and
mov
mov
mov
cmp
stos
push
jnp
jne
lcall
add
cmpsb
xchg
ja
jmp
aaa
sub
push
and
dec
sub
sbb
inc
stc
mov
lcall
push
fbld
lret
sahf
jge
cmp
imul
xchg
mov
test
stos
mov
decl
roll
int
mov
mov
scas
xchg
sub
iret
push
mov
das
lahf
xor
ljmp
sbb
lcall
fsubl
cmpsl
cmc
add
adc
or
dec
inc
jo
addr16
pop
and
lcall
pop
xlat
dec
jg
sub
int
mov
mov
cli
xor
pop
add
xor
int3
mov
xchg
mov
ja
incl
dec
aaa
stc
outsb
mov
je
cmp
mov
addb
sub
es
addb
ljmp
pop
cmp
imul
rol
jmp
xchg
fsubrp
pop
pop
scas
cwtl
repz
ljmp
loopne
inc
mov
js
cmp
call
pushl
loope
test
mov
dec
sarb
push
fmuls
mov
lods
cli
mov
pop
mov
push
pop
aad
jmp
mov
sti
fwait
out
fs
jg
gs
shrb
xor
rorl
fucomi
incl
jbe
ljmp
cmp
pop
iret
lods
es
insl
cmp
mov
sti
pop
out
cmp
idiv
fcmovnu
pop
sub
mov
stos
je
and
push
jno
call
dec
clc
xchg
ljmp
push
in
add
mov
jbe
push
int
mov
filds
mov
add
jge
mov
pop
xor
pop
xchg
scas
xchg
ljmp
hlt
pop
or
pop
movsb
pop
ficoml
jo
inc
fbld
scas
repnz
mov
cmp
lods
inc
or
cmpsl
mov
mov
mov
iret
repnz
pop
and
cbtw
test
incl
cmp
lcall
pusha
ret
jo
enter
call
pusha
repz
mov
in
or
in
pop
fmull
divps
xlat
rclb
jmp
pusha
in
and
ds
jo
mov
sbb
cmp
out
ret
lcall
int3
mov
rol
pop
pop
movsb
js
dec
add
inc
or
shr
repnz
fiaddl
inc
call
imul
push
pop
mov
outsl
jbe
add
in
inc
pop
cmp
sbb
incl
push
cltd
cmp
repz
xor
int3
pusha
sysret
adc
push
pushl
test
adc
shl
adc
push
or
andb
inc
adc
jg
outsl
lcall
and
mull
loopne
add
lcall
jmp
push
mov
add
aas
loop
ja
pushf
mov
in
sbb
and
das
cli
xor
cmp
jb
call
xor
push
adc
aaa
jle
push
push
loopne
leave
out
jle
js
outsb
push
fbstp
inc
mov
rorl
xchg
mov
fsts
adc
es
sub
mov
stc
mov
stos
and
ljmp
pop
mov
mov
adc
dec
ffree
push
ret
call
loop
jl
dec
push
ljmp
and
fisubrs
xchg
mov
sub
fisubrs
lahf
sbb
outsl
or
data16
lcall
mov
aaa
popa
pop
shrl
xor
and
adc
test
cmpsl
daa
jg
std
mov
imul
lret
sahf
dec
je
sbb
sbb
stc
in
decl
cmp
mov
inc
bound
inc
insl
pop
std
mov
aad
movsl
cwtl
mov
inc
jle
cs
or
gs
cli
mov
outsb
outsb
lret
mov
jbe
sub
or
lret
push
xlat
pop
cmc
pushl
test
lds
inc
scas
or
out
inc
test
jmp
dec
loop
push
hlt
js
pop
dec
mov
repz
imul
and
incl
cmp
mov
pop
outsb
push
out
hlt
bound
clc
das
into
add
dec
pop
push
shrl
mov
lcall
push
test
int
js
pop
cmpb
arpl
pminsw
iret
lock
popf
or
push
sub
adc
daa
sub
jmp
cmp
mov
pmovmskb
xor
fsts
xchg
jmp
loopne
into
scas
lret
mov
pop
loope
mov
push
sti
mov
jmp
and
call
fdiv
dec
adc
data16
mov
sbb
cmpsl
insb
scas
mov
mov
pushw
stos
mov
lods
std
sbb
push
call
fnstcw
rcrl
inc
aaa
mov
push
icebp
inc
popf
sub
ret
out
sbb
mov
ss
mov
mov
mov
dec
sbb
xchg
mov
in
mov
mov
adc
insl
adc
lods
xor
dec
jle
mov
pushl
leave
jle
dec
sarl
in
mov
jle
sti
out
mov
jge
inc
jno
jns
jle
ror
jmp
adc
in
jg
dec
movsb
sub
insb
push
sahf
xchg
ljmp
clc
sti
fsubl
sub
push
jmp
scas
cmp
ljmp
pop
push
lds
add
push
sbb
sub
in
ja
cli
inc
jns
xchg
pop
icebp
incl
jns
push
dec
cs
scas
mov
pop
cmc
xchg
and
cmp
lods
sbb
cmp
jg
or
xlat
gs
sub
xor
pop
mov
out
int3
out
pop
xchg
popa
fucomp
iret
popa
dec
mov
cs
xchg
daa
cmpsl
add
lcall
pop
push
lds
push
in
inc
sti
int3
imul
out
mov
repnz
leave
push
mov
test
dec
push
test
xchg
int3
ja
sub
jg
out
adc
and
mov
jmp
imul
out
jge
cmc
add
jmp
mov
adc
repz
ljmp
xchg
sbb
and
push
or
cmp
xchg
adc
aaa
dec
inc
push
ljmp
call
sahf
cmp
push
daa
lock
cwtl
mov
add
orl
js
sbb
repz
into
insb
jp
and
ret
xchg
in
add
decl
nop
insl
xor
jp
int3
pop
std
jmp
das
inc
sbb
movsl
dec
pop
cli
call
pop
sub
mov
icebp
sbb
stos
sbb
into
cmp
mov
inc
push
mov
mov
les
pusha
inc
stos
ds
push
mov
and
mov
fwait
cwtl
mov
lds
ljmp
hlt
mov
fwait
or
xor
cmp
mov
inc
loopne
ret
mov
cwtl
mov
call
pop
add
rcr
ret
add
out
xor
fldcw
out
divb
popa
pop
cmp
fstps
or
pop
and
lcall
lahf
dec
insl
outsb
sub
xor
nop
fnstcw
pop
mov
cmpsl
in
popf
xor
incl
int3
aas
push
lcall
jp
cmp
bound
fwait
sbb
decl
movsl
sub
xchg
xor
into
cmp
sub
ljmp
sti
out
clc
fscale
jp
int
xor
lock
and
cmp
jmp
xchg
movsb
fistpll
inc
xchg
mov
and
mov
add
mov
jmp
xor
jg
lahf
sbb
adc
loopne
mov
lahf
mov
or
aas
stos
std
icebp
out
xor
jg
adc
out
cld
imul
out
stc
xchg
mov
out
adc
fwait
jle
mov
mov
sub
xor
sub
fcomip
fdivr
das
outsl
adc
lahf
ret
arpl
mov
ret
mov
test
add
pop
out
and
adc
cs
out
mov
out
lret
lret
and
cld
mov
pop
mov
xchg
or
lcall
xor
inc
stc
sub
xchg
xchg
mov
push
das
imul
jl
imul
incl
or
outsb
in
adc
mov
xchg
sbb
in
aaa
sahf
or
jb
jg
bound
cmc
repz
fiaddl
inc
jmp
xor
ljmp
xchg
insl
cmp
sbb
sahf
pop
sbb
push
decl
inc
xchg
pop
xor
pop
and
pop
or
decl
mov
dec
mov
sbb
cmpsl
mov
push
out
popf
mov
gs
das
adc
movsl
sbb
push
inc
lods
push
aaa
pop
orb
or
pushl
add
jmp
stos
lret
add
lahf
stos
cmp
inc
mov
mov
lcall
and
scas
inc
push
and
xlat
xchg
add
pushl
lahf
scas
push
shr
fcomps
mov
lods
inc
test
push
ret
fs
lcall
push
pop
jg
mov
addr16
lret
jne
aaa
or
mov
aad
loop
push
std
mov
cmp
pop
movsb
mov
add
inc
loopne
mov
dec
jecxz
push
mov
inc
scas
add
test
dec
scas
jle
sub
mov
and
xchg
es
mov
pushl
push
loopne
xchg
sub
imul
and
inc
int
push
hlt
in
jle
decb
cld
adc
fisttps
cmpsl
shll
in
mov
rcrl
add
xor
mov
stc
cld
mov
and
jb
js
sbb
mov
mov
jle
sub
cmp
fistpll
jmp
jle
xchg
inc
leave
push
or
xor
jmp
lock
sub
mov
out
stos
gs
and
xchg
pop
leave
dec
pop
push
imul
push
mov
lcall
push
jg
and
data16
add
scas
cli
cmp
roll
fs
mov
js
shrb
mov
clc
sbb
cmp
cmpsb
xor
sub
push
and
test
nop
inc
movsl
xchg
fstpt
sub
popa
loope
mov
mov
xchg
xchg
pusha
dec
xor
lods
decl
and
test
fbstp
sub
ljmp
rol
out
cli
push
push
xchg
lods
fdivrs
inc
fistl
lock
cmp
jmp
sub
mov
jmp
adc
jnp
out
clc
pushl
loope
sub
fwait
ja
stos
jge
int3
and
jle
push
mov
inc
fwait
into
or
incl
jge
pop
test
pop
cmp
mov
mov
adc
adcl
mov
jg
aas
xchg
loopne
cmp
jge
scas
dec
push
dec
sti
mov
push
lret
mov
std
enter
jne
mov
push
jnp
cmpsb
mov
nop
jl
mov
sub
or
ljmp
inc
xchg
inc
jae
sbb
sub
cmp
mov
int
pop
fs
lcall
dec
and
dec
outsl
das
xchg
bound
fbld
in
xchg
mov
ficomps
mov
adc
pop
cld
shrl
add
nop
stc
mov
pop
cmp
push
fildll
dec
push
add
push
push
xor
mov
pop
jb
fiaddl
fbld
or
xchg
push
add
xchg
bound
cwtl
andl
loop
gs
cmp
jbe
mov
into
adc
in
iret
cs
lahf
jp
ss
mov
sbb
xchg
mov
rclb
in
pop
or
mov
mov
insb
decb
nop
aaa
sbb
inc
hlt
decl
dec
je
sbb
pop
jno
std
dec
inc
out
mov
mov
outsl
sub
push
lcall
jmp
aam
cs
outsl
xchg
imul
bound
jbe
pop
sub
adc
call
pop
in
popf
pop
roll
xor
decl
and
pop
pop
mov
jl
inc
fs
fildll
pop
int
pop
dec
sub
push
fxam
icebp
sub
push
mov
cld
ljmp
push
and
fucomip
xchg
cli
xchg
orb
push
int3
in
pop
stc
popf
leave
cmpsb
cmp
int
xchg
jge
mov
xlat
cmp
add
testb
popa
in
add
in
bnd
jnp
repnz
sbb
xchg
push
loope
xchg
fs
cli
insl
imul
jbe
jge
push
add
dec
cmp
dec
xor
ljmp
inc
mov
mov
loop
movsl
stc
xchg
push
daa
fcmovnu
mov
hlt
jno
push
sbb
imul
mov
lcall
movsl
addb
fucom
dec
bound
or
mov
inc
mov
mov
in
pop
mov
sti
fs
xor
sarl
data16
jno
ljmp
ljmp
mov
test
cmp
sbb
inc
lret
xchg
out
dec
and
stos
arpl
in
lret
xchg
call
jmp
inc
xor
or
jl
out
imul
jmp
ja
or
into
jae
adc
stc
ja
mov
xchg
xchg
xor
pushl
pop
cmpsb
mov
daa
popa
cmc
inc
bnd
movsl
jbe
jle
and
lods
inc
jbe
mov
dec
ss
jno
xchg
incl
into
xor
mov
ljmp
stos
jp
and
jne
add
aam
jge
pop
xchg
jecxz
inc
push
pop
mov
add
or
orb
and
dec
xlat
or
nop
or
pop
ret
jg
cs
dec
cmc
stc
fsubrl
mov
rorb
inc
jo
pop
pop
lret
add
sub
jb
push
test
push
pop
push
enter
movsl
stos
adc
out
loopne
je
lcall
sahf
xchg
lahf
and
push
cmp
sbb
mov
and
push
sar
call
orl
xor
repnz
sbb
add
call
fsubrs
adc
ss
test
pop
jne
inc
test
cltd
pop
jns
cld
dec
cmp
and
cmp
jp
mov
jecxz
mov
dec
shr
inc
pop
loop
cld
call
shrl
pop
or
rol
rorl
faddp
mov
pop
decl
stos
cmp
jne
dec
cmp
outsb
add
sti
or
pushf
call
sar
mov
int3
push
xchg
dec
data16
mov
jmp
lods
les
imul
adc
sbbb
movsb
inc
and
pop
cli
jge
xchg
call
and
ss
pop
addb
sub
dec
lret
incl
adc
testb
pop
sbb
mov
xchg
cmp
mov
popf
loopne
inc
ljmp
movsb
ss
lret
push
sar
fmull
mov
js
xor
bnd
cld
mov
scas
clc
aaa
sbbb
movsl
pop
dec
fwait
stc
loopne
enter
in
fiadds
std
decl
sbb
mov
mov
fcmovne
pop
ret
mov
cld
rorb
dec
inc
cmc
push
shlb
in
shll
lock
decl
mov
int3
sub
pop
cltd
xor
stc
xchg
inc
mov
dec
pop
ds
push
rclb
pop
mov
pusha
mov
cmpsl
testb
inc
and
cmp
push
pushl
outsl
sbb
sub
pop
sbb
insl
das
jg
mov
pushl
and
imul
movsb
mov
cwtl
dec
pop
sbb
andb
push
fst
pushl
in
shlb
test
out
aad
icebp
cmp
pop
fs
add
cmpsl
pusha
adc
divb
pop
cmp
cs
inc
mov
test
cld
imul
push
mov
inc
iret
mov
mov
aaa
stos
fldcw
cmp
add
nop
cmp
lret
or
lock
lock
lods
cmpsb
jae
or
ljmp
and
cs
adc
cmp
loopne
aam
popa
jmp
aam
idivb
es
sub
cli
ljmp
add
jle
mov
insl
xlat
xchg
roll
dec
mov
movsl
push
scas
in
jg
add
outsl
out
aaa
in
insb
dec
dec
sub
sub
clc
jp
subb
adc
mov
cli
jne
jmp
and
xor
into
iret
sub
scas
ljmp
je
inc
gs
notl
inc
lahf
div
cli
push
pop
sbbb
pushl
mov
xor
enter
outsl
cmc
pop
pshufw
pop
mov
test
out
clc
mov
hlt
mov
mov
cltd
cs
jp
out
cmp
cmpsl
cmp
flds
std
pushl
push
into
jp
jae
xor
cmc
das
es
pop
popf
aad
dec
lcall
testb
scas
mov
and
ljmp
mov
inc
pop
repz
push
adc
out
mov
mov
mov
inc
loop
pop
test
incl
xchg
mov
push
int
push
mov
aas
cld
sbb
mov
fiadds
decl
pop
push
xchg
xchg
pusha
inc
fnstenv
add
arpl
or
add
cli
jnp
pusha
sti
das
pop
lock
jl
pop
add
lahf
sbb
mov
jg
push
xor
dec
arpl
and
jbe
xchg
push
add
repnz
add
negl
sar
pushl
add
xor
push
mov
js
sub
and
repnz
test
push
ljmp
fidivs
jge
jno
leave
aam
or
lds
iret
sbb
stos
xor
inc
bound
jp
popa
mov
jo
pop
std
mulb
xchg
sbb
add
in
xchg
cmpsb
rcll
punpckhbw
stos
mov
mov
cli
lods
lahf
ja
jl
or
pop
pusha
clc
test
jae
cli
pop
xor
imul
jbe
ljmp
push
iret
pop
test
mov
xchg
sub
dec
xchg
sahf
inc
fidivrl
inc
mov
in
push
pop
rcrb
mov
adc
xchg
out
popf
add
out
and
dec
outsl
xor
push
cli
cmp
imul
push
jae
cmpsl
push
push
xor
stos
fdivl
mov
xor
jb
pop
flds
jae
push
bound
adc
mov
cmp
stos
imul
in
mov
adc
and
jo
xchg
stc
movsl
int
ljmp
out
aas
test
sbb
leave
cmp
stos
cmp
arpl
out
clc
in
out
lock
inc
cs
insl
push
push
stos
icebp
jmp
pop
push
pop
mov
push
jne
loope
jg
call
xchg
loope
adc
jl
or
or
dec
jo
pop
test
mov
fcomp
loopne
int3
aad
or
aaa
call
sbb
ds
leave
mov
bswap
push
mov
add
lcall
jl
mov
dec
sbb
xchg
jge
xor
add
mov
incl
lds
aaa
pop
fsts
rclb
call
or
jno
les
jne
ret
testl
dec
jle
xor
insb
pop
stc
ljmp
ljmp
jmp
inc
jne
test
loop
adcb
xchg
sub
add
roll
cmpsb
je
cli
mov
xchg
xchg
jb
outsb
pop
pop
fcmovnbe
add
pop
je
incl
mov
movsb
pop
mov
inc
push
mov
cmp
pop
clc
sarb
into
outsl
nop
movsb
out
cmp
lret
pushl
ret
aaa
jg
mov
lods
stc
xchg
jbe
xlat
adc
fisttpll
cmp
pop
push
inc
lahf
faddl
arpl
dec
ja
les
xchg
add
push
mov
add
lods
pop
es
out
jo
fldl
lcall
add
fcomps
lods
sti
mov
fldl
mov
push
inc
mov
mov
fildl
add
push
sbb
push
and
cmp
xor
jno
enter
aaa
aaa
inc
cld
mov
push
jg
pushl
in
stos
xchg
xchg
sub
jbe
ss
pushf
rclb
test
cmp
push
loop
dec
repz
pop
mov
ja
jmp
mov
std
loop
in
aam
cmpsl
loop
test
loope
mov
ja
pop
push
dec
fwait
mov
xchg
mov
inc
mov
mov
imul
jmp
add
pushl
je
cmp
push
mov
lahf
shll
adc
mov
outsl
clc
sub
cwtl
aaa
xor
pusha
push
push
pop
in
imul
sbb
aas
fcomi
mov
leave
sbb
cmp
bound
mov
incb
push
adc
lcall
and
js
push
adc
out
daa
data16
fcmovu
jmp
lret
fistps
in
jbe
imul
xor
inc
push
fistl
push
outsb
dec
daa
outsl
push
sarl
movsb
int
mov
lahf
repz
lcall
ljmp
call
inc
std
adc
mov
cli
add
fimuls
int
pop
loopne
daa
imul
jp
loopne
sub
fnop
mov
incl
movsb
xchg
xor
sub
xchg
xchg
sub
dec
adcb
push
mov
or
push
pop
sbb
lods
loop
lret
arpl
inc
je
lahf
mov
dec
icebp
sbb
push
les
xchg
ret
mov
cmp
in
cmp
jnp
aad
fisubrs
push
sub
xor
xchg
insl
arpl
jg
jmp
push
mov
aad
ljmp
or
ljmp
cli
mov
push
jl
call
add
in
cwtl
decl
pushf
test
stos
adc
js
xchg
jl
cmpb
lock
add
stc
mov
ret
xchg
jp
lcall
cmp
call
jle
pop
mov
and
cmpsb
mov
and
mov
test
in
cmp
pop
push
lret
fidivs
push
shrb
in
jmp
cmp
push
mov
push
ss
sub
xchg
inc
mov
ljmp
or
mov
mov
cmp
out
mov
sbb
sbb
xchg
adc
jmp
mov
stos
lahf
jmp
loopne
xlat
push
cltd
fisubs
lret
jl
rolb
inc
mov
fcomip
pop
add
pop
stc
add
cmp
out
repz
add
mov
push
icebp
fstpt
xorb
clc
push
fldt
sti
adc
call
pusha
test
in
iret
push
mov
inc
sti
ret
adc
inc
xchg
stos
ljmp
jns
xor
push
or
jp
cmc
inc
cs
lcall
hlt
mov
add
pop
push
push
fs
jmp
sub
inc
testl
jge
pop
test
out
in
push
cvttps2pi
jmp
pop
inc
call
mov
imul
shl
cmpsb
mov
dec
pop
rcll
inc
pop
popf
dec
loope
decl
lock
mov
pop
mov
lcall
addr16
call
inc
cmp
jae
movsl
pusha
imul
cmp
xor
xor
pop
shlb
iret
add
aam
mov
and
call
outsl
mov
lcall
mov
pusha
dec
pop
cmc
jns
jns
cmpsl
icebp
jge
mov
nop
jno
pop
jae
pop
cld
sbb
mov
es
shl
int3
cmc
sub
ds
pop
adc
shr
dec
mov
pop
mov
xchg
fnstcw
data16
clc
ljmp
fwait
inc
jns
sbb
xor
push
or
jecxz
sub
jg
push
inc
shlb
cmpsb
pop
in
lcall
jmp
cmpsl
outsl
bound
sub
and
movsb
leave
stos
xor
sahf
addr16
mov
push
lcall
outsl
cmc
dec
add
incl
incl
iret
aas
xor
xor
jb
clc
mov
or
scas
mov
call
cmpsb
add
pop
ds
jmp
jmp
pushf
subb
sbb
push
pop
loopne
xchg
addl
repnz
out
fnstenv
clc
cmp
test
lcall
xchg
xlat
insb
aam
mov
mov
addl
jb
dec
in
stc
push
movsb
xor
xlat
in
sbb
push
lock
cmp
push
xlat
rcl
push
shll
pop
pop
mov
lods
rcll
pusha
pop
pusha
cld
lcall
mov
es
push
sbb
mov
inc
lds
dec
repz
dec
push
mov
and
pushl
aam
mov
jl
outsb
sbb
mov
ds
push
mov
mov
xchg
adc
or
cmp
sub
xchg
inc
and
dec
xor
test
ja
mov
push
cld
pushl
pop
daa
jmp
mov
cmp
xchg
fs
test
xchg
add
ljmp
jbe
out
ret
mov
fiadds
fnstsw
adc
ret
ds
mov
pop
sahf
inc
scas
xor
subb
push
adc
test
insl
jmp
mov
xchg
jo
adc
pop
mov
add
lcall
dec
xlat
dec
insb
loope
stos
dec
enter
push
stos
inc
mov
fdivr
add
repnz
imull
cmpsl
fldl2t
lods
xor
fists
addr16
jns
mov
decl
pop
adcb
jno
enter
ljmp
mov
insb
dec
shrb
sbb
cwtl
andl
outsb
jmp
pop
jbe
dec
adc
mov
jl
sbb
sbb
mov
test
cli
xchg
push
mov
mov
mov
inc
sti
gs
push
sub
adc
jecxz
inc
into
mov
dec
pop
ret
mov
jmp
js
adc
mov
push
jmp
in
add
mov
dec
push
mov
or
pop
lods
cwtl
lcall
xchg
ror
dec
pop
lcall
jmp
cs
dec
test
das
adc
call
lds
pusha
lcall
push
or
push
pop
fldt
loopne
pop
shlb
sub
mov
mov
sub
lcall
int3
sahf
movsl
or
or
jbe
leave
jne
rorb
dec
add
pop
cmpsb
cmp
cmpsb
xchg
or
xor
mov
sub
addr16
or
sub
loope
adc
subb
arpl
xchg
or
decl
int3
inc
jo
or
inc
adcb
push
pusha
and
shlb
movsb
and
pop
add
outsl
lret
fwait
or
ror
xor
inc
rclb
repnz
xchg
pop
dec
xor
lock
xor
mov
xor
pop
ljmp
mov
jae
ret
jo
popf
in
cmp
loopne
fsubrl
dec
nop
push
insl
pusha
pop
jmp
in
outsl
aaa
mov
movsb
insb
addr16
insb
lcall
push
mov
sbb
aas
ds
cmp
ret
bound
jg
push
xchg
repz
pop
loopne
pop
push
lret
mov
mov
loop
lret
cmpl
ds
movsl
mov
cmp
iret
cmp
repnz
ret
adc
stos
xor
imul
nop
mov
iret
jb
pop
test
sub
rcr
outsl
scas
movsb
mov
int
push
cwtl
test
add
mov
in
jmp
jmp
mov
xchg
push
inc
sub
frstor
mov
adc
ljmp
decl
xor
gs
cmp
mov
dec
sbb
inc
test
fcomps
cmpsb
fcmovne
xchg
inc
or
or
notb
paddsw
xchg
loope
and
fnsave
adc
cmp
cmp
cmp
movsl
rcl
movb
mov
inc
addr16
pop
int3
mov
icebp
cld
test
ljmp
incl
repnz
nop
xchg
js,pn
or
sub
inc
frstpm(287
pop
mull
pop
popa
sar
fsubs
cmc
or
sbb
in
jp
push
aam
sbb
stos
cmp
std
fimuls
adcb
enter
pop
xchg
pop
clc
inc
and
ja
mov
fs
mov
xchg
mov
pushl
push
cwtl
arpl
stos
jnp
nop
test
inc
or
fbld
add
xchg
xor
ret
enter
xlat
mov
pop
into
aas
xchg
movsb
sub
adc
jg
dec
repnz
xor
sub
pop
xor
mov
jg
mov
out
xor
pop
jbe
cmp
pop
sub
push
inc
pop
mov
sub
mov
xor
push
mov
popa
nop
push
push
mov
imul
stos
div
mov
push
cld
call
icebp
mov
mov
mov
mov
into
or
cmp
shlb
aas
cli
fidivs
shl
mov
clc
incl
movsl
mov
add
rcll
test
pop
add
arpl
pop
es
xlat
inc
inc
xlat
outsw
xor
call
mov
clc
cli
lahf
test
mov
setg
jg
rcr
add
nop
add
popf
adc
xor
adc
clc
push
push
adc
xlat
cwtl
mov
mov
mov
mov
pop
mov
loop
pop
or
or
fstl
je
or
dec
push
adc
xchg
sbb
xlat
mov
mov
inc
dec
jne
pop
in
sbb
sub
and
push
push
push
jb
and
insb
push
mov
inc
and
xor
sbb
test
sub
pop
lahf
mov
and
and
push
mov
cmc
imul
test
push
push
push
push
push
call
pop
sbb
push
in
mov
dec
fistpll
mov
lret
ret
mov
and
jne
push
xor
dec
add
pop
incl
pusha
idivb
pop
mov
fildl
push
inc
std
push
push
call
ds
or
adc
or
imul
push
push
push
xlat
mov
or
lahf
dec
and
rorl
mov
inc
or
jb
lret
sbb
push
push
or
push
push
inc
pop
add
data16
xor
add
push
xchg
lods
gs
and
adc
sub
pop
or
aam
rcl
adc
adc
push
adc
push
mov
mov
lods
adc
test
jno
shr
adc
cmc
es
mov
jno
dec
dec
dec
adc
jg
mov
leave
adc
push
stos
sbb
or
shlb
sub
mov
gs
ficomps
add
add
icebp
push
push
call
jg
pushf
xor
push
push
push
push
jp
scas
ret
push
sub
xor
jg
mov
push
pop
ret
cld
imul
xchg
or
push
add
mov
notb
arpl
out
aas
dec
ljmp
push
push
cld
dec
dec
pushf
pop
mov
cmp
sti
xchg
in
and
pusha
mov
and
sbb
mov
sar
or
add
add
js
xchg
or
mov
mov
movsb
inc
bound
and
add
and
pop
sub
adc
cs
mov
arpl
mov
scas
push
dec
repz
xor
or
inc
jo
add
and
sbb
mov
rcrl
adc
push
ret
aas
push
dec
inc
push
mov
pop
outsl
movl
mov
outsb
mov
mov
inc
loopne
fwait
add
movb
clc
mov
push
lretw
fdivp
test
push
xchg
push
call
push
mov
dec
hlt
jmp
call
or
roll
push
mov
test
xor
shlb
ficomps
and
lds
cs
ret
mov
push
xchg
mov
in
jl
into
out
call
rol
es
adcb
jg
std
pusha
mov
and
ja
push
inc
mov
shr
sub
mov
mov
lods
ror
in
fdivrl
int
rcr
out
mov
iret
sbb
cmp
jb
cmp
jae
xor
push
mov
int
and
inc
je
adc
je
mov
push
cli
push
add
jl
jle
jp
sub
inc
leave
push
rolb
sub
ss
lret
mov
imul
sbb
or
ret
enter
fisubs
add
fsubrl
xor
test
sub
push
mov
or
or
outsl
rcrl
jo
or
in
or
push
mov
add
sbb
je
sub
mov
sbb
or
daa
dec
add
push
push
in
test
add
inc
xor
in
mov
add
sub
add
sub
push
out
int
je
cld
add
inc
insl
sbb
ret
pop
adc
push
xor
call
jl
or
lds
adc
mov
jg
data16
push
xchg
rol
mov
xor
xchg
push
adcb
jae
ret
add
jmp
add
dec
hlt
and
lahf
cld
inc
cmp
mov
jbe
dec
and
shll
push
call
sbb
sub
add
mov
loope
xchg
mov
lods
sbb
fistpl
push
mov
sub
jmp
in
xor
in
adc
je
add
lahf
jmp
rolb
fcmovnb
call
outsb
jmp
and
and
push
test
clc
ret
daa
mov
lea
int
jbe
inc
dec
mov
rolb
std
jb
jl
xor
push
rol
enter
cld
dec
push
xor
pop
push
call
ret
mov
mov
and
imul
out
lds
sbb
sub
mov
clc
cmpsb
adc
jl
and
call
add
jge
pop
ret
daa
fmull
hlt
push
in
inc
xor
insb
push
xor
adc
push
xchg
fs
cmc
incw
push
inc
cmp
jl
cltd
jo
pop
mov
push
pop
add
cmp
dec
add
mov
rorb
rolb
loop
mov
cmc
inc
pop
ja
sbb
in
pop
push
push
xchg
xchg
mov
jmp
mov
cli
and
mov
stc
adc
mulb
outsb
jo
in
mov
cmp
and
adcl
insl
roll
add
test
fldl
adc
cmp
outsl
shrl
add
mov
into
jl
gs
scas
cmp
in
adc
repnz
or
jle
mov
mov
add
inc
dec
lea
inc
push
add
out
into
and
shr
or
shl
dec
test
jg
ja
in
loopne
clc
pusha
sarb
lret
mov
mov
push
call
xor
int3
pusha
mov
fnstsw
jo
dec
inc
push
test
je
or
cmp
out
ja
mov
inc
add
lea
loopne
mov
xor
ret
cmp
cmpl
insb
mov
push
pop
jb
pusha
jmp
push
lret
push
arpl
pushf
cmp
flds
ljmp
add
fisubrl
adc
daa
sub
mov
mov
data16
testl
incb
jmp
lea
xchg
cmp
out
push
inc
cmp
jb
cmc
aas
andl
jns
push
mul
dec
test
add
icebp
jmp
mov
movsb
aas
aaa
test
je
and
push
xchg
sbb
inc
cli
xlat
es
jb
pop
inc
push
and
in
call
call
mov
cwtl
or
aas
idiv
testl
push
call
inc
shl
int
pop
fimull
fsubs
xor
in
enter
jae
xchg
lea
dec
lahf
cmp
fbstp
jae
sbb
mov
aas
ret
add
ret
cmp
jb
mov
xor
mov
outsb
mov
dec
sub
add
ljmp
mov
sti
jmp
clc
dec
push
push
jle
xchg
mov
adc
push
shlb
cmpb
mov
mov
push
dec
js
xchg
stos
je
lods
inc
sbb
enter
fidivl
outsb
push
dec
add
mov
dec
shl
jle
test
mov
push
daa
mov
fnstsw
hlt
pop
pop
aad
mov
sbb
aaa
dec
adc
adc
push
or
xchg
push
jb
lret
push
pop
cld
push
adc
push
xchg
pop
sbb
inc
sti
jne
xchg
stos
mov
add
xor
popa
or
sub
add
mov
pushf
adc
push
or
inc
mov
fdivrs
dec
jae
mov
mov
or
ret
pop
xor
into
jne
mov
pusha
mov
jmp
pop
loop
mov
movsb
fdivrl
mov
clc
dec
dec
cmp
fldcw
divl
add
and
inc
inc
xchg
inc
lock
jle
pop
mov
sbb
inc
dec
jne
jmp
ljmp
jg
push
jle
movl
cmp
popa
dec
mov
dec
xor
add
jge
int3
or
cmpsl
testl
test
add
not
or
push
dec
mov
shr
arpl
ss
aaa
jo
add
mov
jmp
les
pop
aad
sub
jle
test
mov
rcll
sub
push
cmpsb
jmp
fsubp
and
sbbb
bound
mov
xchg
sub
push
cmp
mov
mulb
fisubrl
or
and
mov
sub
push
mov
mov
sbb
push
enter
mov
dec
push
cmp
or
jl
sub
and
ds
stos
inc
sarw
dec
inc
or
outsb
shl
mov
inc
or
or
xor
insb
pop
cwtl
cs
into
mov
loope
xlat
sub
aam
testb
jo
jg
mov
enter
call
lods
leave
addl
mov
sbb
adc
adc
popf
adc
or
outsb
mov
add
lret
mov
test
rcl
je
ljmp
cs
xchg
lds
outsl
in
mov
bound
mov
rorl
clc
loopne
call
fnstsw
mov
add
mov
pop
xchg
mov
mov
or
add
push
or
mov
lock
xchg
scas
cli
rclb
sahf
je
js
adc
and
out
aas
or
jnp
cwtl
int
push
ret
or
testl
xchg
mov
mov
clc
and
push
mov
inc
dec
jne
and
inc
aam
mov
add
sti
xor
push
inc
mov
out
out
pcmpeqd
fadd
add
fbld
cmpl
xchg
mov
xchg
add
add
sti
adc
nop
js
lea
sbb
aad
das
jbe
outsl
mov
neg
mov
jmp
push
sub
setle
cli
and
mov
pushw
lea
cmp
ds
pop
or
call
ss
and
dec
sub
mov
popf
jbe
push
lea
cmp
imul
popa
sahf
inc
push
dec
or
mov
jl
pop
pop
lea
push
lods
xchg
lea
or
loopne
push
addl
out
inc
out
adcl
lahf
cld
xor
push
mov
jbe
push
push
xchg
and
push
adc
call
cltd
sub
sar
into
inc
xor
roll
jb,pn
add
sub
mov
add
jb
add
push
pop
push
cmovl
ret
or
les
sub
mov
sti
testl
rep
push
sbb
lock
mov
mov
pop
pop
pop
pusha
sub
inc
and
mov
and
sbb
es
jne
xor
clc
and
add
daa
je
fs
lods
sbb
je
insl
imul
cmp
inc
insb
stos
mov
mov
pusha
and
push
or
push
or
dec
dec
in
pop
cmp
outsb
xchg
or
lock
and
push
rcll
rcll
insl
fimuls
outsl
jnp
sbb
out
ss
incl
add
nopl
jg
adc
adc
or
or
or
or
add
inc
aad
add
adc
int3
insb
or
and
stos
mov
inc
hlt
ss
aaa
and
inc
or
and
fdivrl
sub
xor
and
mov
inc
sbb
pop
add
xor
pop
adc
xlat
nop
inc
adc
in
sbb
add
inc
push
add
aam
pop
shlb
inc
adc
push
add
aam
pushl
adc
push
push
sbb
call
leave
ss
mov
lods
scas
mov
mov
push
jnp
dec
or
enter
push
push
pop
xor
adc
lret
rorl
xor
insb
dec
sub
jns
or
mov
dec
cmp
inc
inc
icebp
adc
popa
xor
xor
jle
or
lods
pop
int3
push
sub
xor
jmp
outsl
lcall
jmp
mov
and
or
test
mov
cwtl
xchg
or
nop
mov
or
mov
xor
loopne
or
rorl
clc
stos
sub
add
testb
sti
std
inc
or
sbb
arpl
jl
je
shlb
push
push
mov
adc
data16
neg
dec
in
outsl
push
add
mov
add
or
pop
pop
jl
sbb
fistpll
push
add
mov
lret
mov
call
dec
add
xor
dec
add
dec
xor
or
into
and
push
inc
unpcklps
fistpll
nop
push
mov
fstpl
or
mov
sub
incl
cmp
cmp
add
jg
insl
add
inc
fstl
add
add
addr16
cmp
jne
mov
push
pop
or
and
adc
test
incl
mov
lods
insb
sahf
add
dec
xchg
fnstsw
pop
clc
dec
and
lock
into
add
jg
pushl
add
int
bound
jne
mov
mov
push
adc
cmpl
mov
fucomi
aas
sub
cmp
sub
mov
aas
push
add
inc
mov
jnp
invlpg
pop
clc
lock
push
std
pop
aam
test
push
jle
or
push
lock
add
or
outsl
mov
loope
or
fcomps
filds
sub
repnz
outsb
or
sbb
jg
push
mov
roll
mov
or
jmp
jecxz
add
shl
por
add
mov
mov
pushl
stos
pusha
sbb
add
push
pop
outsl
mov
xchg
js
aad
aad
dec
mov
or
jg
lea
jecxz
loop
incl
mov
fidivl
gs
imul
mov
aas
inc
add
dec
jmp
bnd
mov
lods
mov
add
mov
sbb
mov
adc
jbe
add
mov
add
ret
fistpll
mull
filds
add
pop
dec
cld
call
sbb
fcmovnu
cmpl
push
mov
jg
jns
sub
roll
adc
hlt
mov
int
lock
sti
push
add
pop
mov
pop
sar
jmp
push
fcomps
mov
add
sbb
push
cmp
pop
sbb
insb
nop
jbe
jo
test
incl
jnp
mov
push
fdivr
mov
decl
outsb
sarb
jmp
ss
mov
ja
lock
mov
sbb
xchg
xor
jmp
outsb
mov
decl
imull
push
inc
test
ss
filds
add
out
jae
std
inc
ret
sbbb
inc
add
js
shlb
and
inc
clc
jmp
or
nop
xchg
in
out
add
pop
icebp
jns
jmp
jbe
sub
ficompl
push
add
jbe
ljmp
inc
test
xor
dec
dec
inc
ds
or
jne
stos
loopne
nop
lock
mov
je
movsl
adc
or
add
ud0
clc
rorb
pop
xchg
xchg
mov
popa
push
call
add
cmp
xchg
out
push
mov
ljmp
xchg
stos
push
jg
sbb
xor
mov
pop
xor
or
out
mov
mov
dec
lcall
in
mulb
stos
jmp
lahf
clc
add
mov
xor
test
adc
decb
imul
lcall
mov
test
add
into
lock
adc
push
sub
xor
das
ret
adc
xor
sbb
jmp
xchg
mov
les
mov
adc
clc
fists
or
arpl
sub
inc
add
lret
fnstenv
jmp
pop
ret
mov
je
imul
cmc
cmp
jo
ja
clc
jmp
pop
ja
pop
iret
lea
in
fwait
push
jno
cs
mov
decl
movsl
mov
enter
mov
lcall
scas
pusha
dec
leave
loopne
pop
or
lret
out
in
sub
cmp
add
loopne
sbb
mov
icebp
imul
sar
loopne
les
mov
icebp
add
ljmp
ljmp
mov
xor
sbb
mov
inc
jmp
call
or
test
and
dec
sahf
rorl
adc
addr16
sbb
xor
sbb
xchg
lods
movb
mov
xchg
and
je
or
adc
adc
fistl
jne
sbb
jmp
movq
cltd
loopne
pop
fildll
add
inc
add
adc
mov
adcb
adcb
cld
lods
jg
pop
cmp
pop
bound
add
mov
sub
pop
ss
mov
lock
das
fisubrl
ficomps
shll
jbe
dec
mov
decl
or
packuswb
js
mov
add
add
icebp
mov
mov
add
dec
adc
or
jmp
or
je
push
rorb
adc
jno
call
ljmp
or
cli
fwait
scas
inc
add
jmp
and
xchg
addl
push
rolb
roll
std
pop
js
inc
sbb
xor
jl
or
add
rcr
push
arpl
push
add
jg
loope
shl
xor
add
inc
sbb
or
sti
lcall
xor
iret
jnp
add
push
arpl
out
movsl
add
jg
add
pop
add
in
fcmovu
adc
filds
out
arpl
mov
test
inc
shlb
inc
sbb
and
sbbb
dec
out
lea
add
loopne
add
pop
mov
mov
in
cli
push
fldl
add
mov
outsl
jmp
adc
push
pop
fadds
adc
dec
out
in
aad
bound
cld
add
pop
scas
pop
rcrb
xlat
jg
insb
cld
jo
into
ljmp
adc
xchg
cmp
lret
mov
popa
push
test
ljmp
jo
jno
fldenv
aaa
mov
lods
leave
cli
fs
hlt
rcll
or
icebp
mov
mov
inc
pop
sbb
cmp
inc
or
insl
aam
adc
cmp
in
shl
or
xor
sbb
add
or
add
lds
fcomip
decl
or
mov
jmp
cmp
enter
mov
mov
or
xchg
lcall
or
adc
lock
movsl
inc
add
insb
mov
dec
or
mov
or
pop
stc
lea
xchg
or
adc
sub
ljmp
add
add
sbb
je
in
cwtl
push
xchg
adc
add
fsubl
cmp
ja
push
std
jg
outsl
add
mov
and
push
cmp
adc
in
icebp
push
dec
sbb
into
add
xchg
push
mov
dec
and
fsubrs
lret
cli
fisttps
xchg
inc
pop
cltd
mov
pop
ja
ljmp
xchg
jg
or
adc
or
enter
inc
jnp
mov
jp
clc
clc
mov
test
or
lods
ljmp
pop
jg
pop
inc
adc
xor
jecxz
je
pop
jmp
adc
mov
dec
or
jecxz
dec
and
insb
mov
mov
jne
movsb
mov
fdivrs
inc
std
inc
imul
iret
sbb
or
fidivl
push
and
pop
adc
jmp
hlt
push
jg
add
adc
mov
addl
jp
in
pop
dec
sbb
sbb
sbb
jmp
data16
push
int
push
fstpl
mov
je
out
clc
aad
or
push
mov
insl
sti
test
les
mov
lcall
sti
flds
xchg
adc
jmp
xchg
in
mov
cmp
mov
ret
scas
orl
shlb
sub
incl
cmpl
inc
testb
mov
clc
jg
dec
add
fcoms
idivb
push
mov
sbb
jg
outsl
cli
jg
cmp
pop
or
or
cltd
sbb
xchg
scas
clc
test
xor
add
add
out
sub
ljmp
pop
scas
push
enter
jl
xchg
pop
pop
imul
push
testl
nop
daa
sbb
add
adc
scas
clc
cs
punpckldq
incl
in
cmp
decl
mov
nop
lcall
mov
rcll
mov
pop
or
cmp
out
or
gs
add
call
add
xor
sub
inc
jmp
sub
add
sbb
add
cmp
jle
mov
xor
filds
mov
outsb
lahf
ret
jb
sti
or
addl
notb
js
cmpsb
mov
pop
jl
or
adc
ljmp
and
pop
shr
rcll
and
xchg
mov
xor
scas
mov
ljmp
clc
mov
into
arpl
test
decl
cmp
cmp
clc
mov
adc
aam
push
dec
or
xor
lock
jmp
mov
call
jge
xchg
sbb
sete
adc
push
sub
sbb
add
inc
lods
jne
push
mov
fisubs
test
mov
test
retw
mov
push
pop
xor
dec
lds
insl
loop
adc
push
cmp
pop
loopne
inc
cmp
push
in
addr16
mov
or
sbb
mov
jmp
add
and
jmp
or
ss
mov
es
mov
pop
pop
and
aam
fbstp
add
add
push
add
or
call
cmp
jge
lods
popf
fwait
push
ret
jno
test
scas
fs
fadd
rorb
dec
shl
cs
stos
pop
in
incl
adc
push
cmp
xchg
jmp
andb
fcom
jne
add
test
or
pop
pop
mov
lcall
cmpsb
andl
add
sbb
jp
pop
sub
dec
popf
adc
dec
adc
jecxz
aas
adc
adcl
iret
push
adcb
push
pusha
dec
inc
arpl
frstor
insl
push
jge
sbb
push
and
inc
lret
xchg
and
call
insl
setp
add
daa
push
push
cmp
cli
sub
loop
and
nop
and
fists
pushf
scas
pop
pop
xor
pop
std
lcall
pop
je
jecxz
enter
mov
xor
js
pop
pop
push
or
jnp
push
sar
fcmovnu
xor
cmp
test
or
and
jg
inc
and
test
cwtl
inc
xor
sub
mulb
jmp
or
aas
adcb
inc
mov
jb
push
orb
lcall
clc
lods
sub
cmpsl
mov
mov
aad
sbb
add
std
sbb
cmp
mov
pop
stc
cmpsl
xor
sti
outsl
mov
add
lret
sbb
sbb
fstp
js
xorb
adc
pushf
or
sbb
fdivrs
out
imulb
mov
mov
cwtl
pop
add
jge
pop
pop
add
add
stos
push
sub
sub
movsb
sub
js
pop
pop
je
lock
mov
cwtl
adc
mov
pop
inc
cld
sub
add
xor
inc
jmp
call
mov
or
scas
imul
xchg
and
pushf
mov
and
fstps
dec
and
pop
xchg
add
mov
rcrb
push
jp
or
call
add
add
cmp
jae
adc
add
out
cltd
push
push
dec
outsl
js
push
pop
or
or
arpl
jno
lcall
mov
ds
nop
sub
mov
imul
or
clc
lea
xor
out
mov
push
sub
jl
lret
test
lcall
pop
add
fucomi
mov
and
push
xor
pshufw
enter
in
adcb
or
fiadds
jo
sar
sbb
fcoml
adc
in
out
dec
incl
mov
xor
add
push
cmp
sub
cmp
testl
call
adc
pop
nop
adc
jbe
pushf
mov
mov
add
negl
dec
mov
jmp
add
in
insb
xchg
adc
pop
push
or
out
sub
mov
add
pop
push
push
int
adc
inc
push
xor
add
jle
je
add
jne
xchg
or
add
out
mov
aam
flds
sub
xchg
in
adc
add
loop
ret
cmp
fldenv
adc
mov
pop
arpl
push
clc
add
test
push
push
into
cmpw
dec
js
hlt
insl
daa
xchg
scas
outsb
jge
mov
or
dec
jne
mov
and
or
mov
adc
imul
incl
loope
fbstp
test
add
ja,pn
sbb
inc
pusha
pop
lock
incl
in
insl
mov
cmp
or
cmp
mov
or
push
adc
add
test
mov
fucomip
sbb
add
test
in
mov
incl
sbb
fsubr
mov
bound
add
aad
mov
push
pop
add
inc
jle
bound
pusha
mov
pop
fcoms
mov
rorb
or
loope
or
mov
loope
test
es
mov
mov
dec
inc
mov
mov
push
hlt
call
inc
aaa
xor
inc
out
xor
or
xor
pop
adc
insl
xor
or
jmp
add
sti
inc
pop
add
imul
inc
add
jg
push
cmp
cld
pop
add
mov
inc
xor
fldl
sbb
add
mov
test
insl
jae
shlb
push
lcall
add
add
or
leave
or
lods
sub
ret
bswap
push
out
sub
push
add
iret
jg
add
lcall
mov
sti
cs
and
sub
cmp
add
sti
das
cmc
xchg
les
add
mov
mov
mov
mov
mov
jo
jmp
lret
and
sbb
enter
pop
ret
inc
ret
jo
mov
adc
out
fs
sub
sbb
xor
fcoms
mov
mov
cli
decl
xor
ljmp
mov
sti
popa
fcomip
ljmp
in
fstps
mov
fs
xchg
lahf
push
mov
cli
idiv
in
mov
out
in
mov
push
bound
jo
adc
jne
add
or
ljmp
jns
cmp
clc
and
ljmp
push
fnstsw
mov
and
clc
fbld
xchg
sbb
sbb
insb
mov
incl
inc
ficomps
rclb
jg
xor
add
jbe
fcomip
mov
sbb
pusha
pop
mov
mov
test
pop
and
adc
js
mov
repz
testb
filds
sub
jg
jg
std
inc
push
mov
in
mov
sbb
sar
ljmp
push
cmp
jg
xor
xor
dec
cld
imulb
jle
in
jb
sub
inc
bnd
movsb
or
out
js
lock
out
ficomps
dec
pop
movsl
inc
inc
xlat
lock
aaa
cld
ljmp
mov
call
push
loope
or
mov
mov
mov
lcall
mov
mov
dec
flds
pop
dec
push
and
fcomps
outsb
aas
fiaddl
xchg
nop
push
mov
sarb
adc
dec
adc
enter
dec
xor
mov
sti
imul
mov
mov
push
jl
add
loop
xchg
or
shr
inc
je
fldcw
push
rcl
fimuls
push
xor
decl
lcall
pop
sbb
xorb
add
aaa
cmp
shlb
fwait
push
out
data16
sbb
sbb
decl
icebp
mov
mov
and
or
push
push
lret
jmp
stos
dec
sbb
add
orb
in
sbb
fs
mov
dec
add
lcall
mov
loopne
sarl
sarl
fcomp
cmp
filds
jbe
pop
push
pop
clc
call
adc
movsl
mov
sbb
push
decl
xor
scas
icebp
and
enter
and
add
add
adcl
lcall
push
and
bound
adc
mov
xor
jne
pop
sbb
pusha
mov
xchg
mov
mov
rcl
lods
adc
xor
outsl
mov
add
lock
pop
ret
jnp
fcmovb
push
leave
jmp
lea
ret
stos
out
jmp
jae
sbb
cs
iret
inc
add
mov
repz
mov
incl
mov
push
ja
or
inc
jle
lea
adc
mov
cld
dec
mov
aam
mov
std
jg
fnstsw
xchg
adc
adc
pop
jne
pusha
jmp
push
cld
cmp
ficoml
ret
push
imul
adc
jl
and
stc
mov
rorl
daa
mov
push
cmp
scas
adc
cmp
out
dec
xchg
xchg
jg
repnz
loopne
ret
mov
pop
pop
ret
in
ret
rol
sahf
cli
mov
and
int3
out
ljmp
jmp
inc
pop
sahf
mov
xchg
jnp
cmp
xchg
gs
cmp
call
xor
decl
repnz
cmp
add
xchg
mov
sbb
inc
in
iret
jb
and
push
enter
and
and
push
call
push
and
inc
mov
mov
pop
mov
cmp
push
mov
add
lea
incl
and
xor
ljmp
mov
lock
mov
subb
in
sbb
jg
add
cmove
xor
mov
adc
ja
incl
scas
adc
ds
pop
add
cld
add
shll
lock
xor
cld
decl
je
cmp
out
pop
std
and
mov
sub
xchg
or
sbb
in
rcrb
clc
dec
subl
clts
addb
mov
or
mov
shlb
or
mov
fbstp
mov
push
adc
sbb
jmp
mov
sahf
push
pop
cmp
or
inc
jl
dec
sub
mov
data16
dec
test
addr16
add
call
adc
push
sar
iret
pop
mov
adc
and
orl
in
loopne
call
inc
cmp
sarb
inc
push
adc
stos
ss
cmp
je
call
jmp
ret
nop
jle
daa
sub
js
mov
mov
sub
call
sub
pop
fs
xor
inc
mov
xchg
jp
pushl
test
push
insb
movntps
je
and
popa
fbld
xor
cld
decl
sub
ds
fdivr
mov
dec
adc
fcomip
jg
outsb
fs
lods
adc
jle
insl
mov
push
push
mov
call
outsl
fnstenv
mov
movsb
mov
push
add
sahf
les
dec
cmp
xchg
push
jmp
mov
push
or
and
ss
push
mov
mov
xchg
mov
pop
adc
push
test
mov
fisubrs
enter
mov
in
fs
insb
cmp
or
cmp
mov
mov
cli
pop
xchg
xor
and
add
ljmp
dec
and
addl
add
add
popa
jb
data16
jle
jg
sub
inc
jae
or
popa
imul
mov
outsl
sbb
inc
push
and
ja,pn
cs
dec
repnz
mov
adc
imul
data16
push
xor
adc
loop
lock
out
movsb
psubusw
dec
or
fisubl
lcall
test
aam
cmpsl
insb
mov
outsl
push
outsb
insb
arpl
push
das
jecxz
shlb
and
or
or
inc
mov
sbb
push
insb
fs
xor
scas
lods
in
ficoml
outsb
outsb
jno
jb
in
fistpll
sbb
inc
jp
mov
cmp
popa
adc
jle
ljmp
fs
imul
gs
inc
xchg
shlb
je
or
fdivl
mov
pop
jp
outsl
dec
popa
insb
adc
sbb
mov
js
and
scas
andb
popa
cmp
jb
in
call
dec
jbe
popa
or
loope
lods
lea
adc
sub
addr16
popl
addb
fs
mov
imul
or
push
shlb
popa
push
call
and
jnp
in
int
cltd
adc
sbb
cs
and
test
sbb
add
pusha
addr16
fisttpl
sbb
xor
in
cwtl
insb
push
adc
loopne
sbb
and
jl
imul
fbld
and
fnstenv
testb
lock
adc
inc
enter
arpl
popa
orb
sti
fs
nop
and
pop
or
inc
xchg
inc
fadds
push
test
imul
addr16
into
push
rorb
mov
ss
and
inc
and
stc
test
jns
pop
xchg
ret
jp
cmp
mov
fiadds
cmp
aad
sub
mov
lea
outsb
outsl
data16
call
xor
adc
xor
lock
jp
jb
dec
xor
mov
pushl
cmpl
pop
adc
mov
adc
leave
imul
lcall
das
outsb
fstps
mov
mov
adc
out
fs
or
push
jp
push
inc
jo
sbb
outsl
mov
sub
jmp
lods
nop
adc
loope
ljmp
inc
sbb
sarb
popa
adc
dec
xchg
xor
mov
and
adc
sbb
fildl
cwtl
je
popa
decb
inc
rcr
call
add
insl
xchg
mov
or
xor
outsl
fcoms
adc
xorl
dec
mov
bound
jg
shrb
arpl
pop
js
add
sbb
lods
add
mov
popa
cltd
mov
lock
push
fs
or
jne
adc
lea
cmp
adc
imul
aaa
das
clc
lds
jae
adc
xchg
ljmp
jns
sub
pop
push
xchg
sbb
aaa
bound
inc
popf
push
adc
gs
pushl
dec
dec
sbb
push
notb
pop
sbb
sub
ret
jg
je
outsl
rcll
adc
mov
xchg
mov
testb
popa
scas
adc
adc
dec
adc
insb
inc
arpl
call
outsl
je
je
orb
sbb
xor
clc
push
pop
cld
or
jp
dec
xchg
lods
adc
loop
jbe
popf
sbb
dec
xor
xor
cmpl
cmp
call
xchg
push
dec
leave
xchg
lods
adc
mov
dec
dec
adc
adc
add
inc
in
jg
jae
cli
addr16
pminsw
sbb
xchg
aad
ret
jb
std
mov
call
jnp
outsb
imul
ljmp
loope
pop
pop
adc
pop
imul
imul
pop
fldenv
jg
mov
xchg
inc
pop
push
jbe
mov
push
sbb
and
aaa
mov
jbe
inc
imul
xor
mov
pop
jae
addr16
ja
lock
ljmp
mov
lret
push
jb
jne
pop
cmp
outsl
jp
stos
fsubs
dec
pop
add
lcall
adcl
push
push
cmp
mov
repz
insb
xchg
push
addr16
pop
or
pusha
cmpb
pop
dec
add
push
daa
inc
sahf
arpl
jmp
sub
adc
xchg
or
lock
loopne
add
je
lods
mov
orb
insl
sub
sub
ss
adc
add
sbb
jg
scas
dec
insb
imul
jo
xchg
and
or
inc
shrl
fnstenv
outsl
dec
and
dec
addb
mov
cmp
pop
fs
or
in
mov
hlt
scas
jp
jae
push
mov
insb
inc
push
inc
cmp
data16
and
in
pop
push
icebp
jg
ret
dec
dec
inc
adc
arpl
lods
sbb
ljmp
outsl
pop
insb
ret
aad
adc
pusha
mov
sbb
push
cmp
je
xor
pop
hlt
fdivrs
mov
add
fs
push
dec
push
pop
pop
imul
or
pop
mov
push
jbe
or
std
popa
adc
stos
pop
mov
pop
insb
popa
sbb
push
incl
sub
jne
add
lret
push
je
pop
cmp
jg
or
add
pop
or
ret
pop
insb
pop
xchg
sub
outsl
mulb
pop
fldenv
gs
adc
das
lea
mov
adc
mov
decl
mov
addr16
or
arpl
dec
je
enter
push
jg
test
lods
dec
insb
stos
cmpsb
int3
cltd
adc
push
lds
mov
lret
leave
out
je
jg
lods
mov
sbb
sbb
mov
mov
repnz
adc
fsubrs
push
or
push
dec
out
fidivl
clc
jb
push
and
es
outsl
ljmp
mov
jbe
jno
adc
cs
or
adc
sbb
sbb
xor
test
lret
mov
jb
lds
pop
and
adc
ss
loop
call
and
mov
dec
outsb
push
mov
and
pop
push
mov
movsb
sub
xchg
jns
loopne
lds
fldcw
push
je
sbb
nop
lea
sar
enter
popa
mov
dec
push
pop
loope
lcall
fdivr
xchg
test
jb
bound
xor
xchg
push
fists
std
push
and
rorb
adc
jl
arpl
sbb
lret
nop
scas
outsl
add
in
lea
jns
imul
fdivs
push
scas
push
cmp
cmp
loopne
inc
jo
data16
ja
mov
in
dec
jno
jne
adcl
mov
lock
sub
adc
inc
or
sub
test
push
and
imul
movsb
mov
outsl
jae
fs
ja
mov
dec
loope
mov
sub
gs
lcall
inc
fmuls
cmp
popa
xor
enter
arpl
pop
bound
push
pop
lods
sub
xor
nop
sub
sub
push
cwtl
mov
or
bound
xchg
inc
ret
test
xlat
subb
xor
arpl
fiaddl
push
add
imul
outsb
lock
mov
add
test
pop
push
test
xor
mov
out
xchg
popf
adc
or
icebp
sbb
pop
enter
insb
adcb
test
sbb
jno
es
rcll
pop
hlt
mov
add
arpl
pop
cmp
sbb
cli
fldt
mov
sbb
dec
in
adc
adc
fs
in
and
xchg
and
jbe
jae
jns
push
lods
sbb
or
dec
sub
sub
mov
xor
inc
pop
adc
sbb
cmp
sbb
or
sbb
test
or
pop
xor
jno
sbb
ja
adc
pop
sbb
ret
dec
mov
ret
add
sub
jbe
movsb
jne
int3
jbe
mov
inc
mov
inc
push
push
sub
jg
cmp
sbb
test
ja
sub
jbe
mov
pop
das
bound
jg
orb
incb
fs
adc
dec
insb
mov
pusha
lret
shrl
push
nop
push
and
or
lea
add
mov
push
lcall
sbb
add
inc
push
aaa
xchg
cmp
mov
nop
jnp
jo
adc
adc
mov
add
rcrb
or
jne
adc
inc
cmpsb
dec
and
popa
ljmp
and
add
adcl
popf
xor
fisttpll
add
pushl
pop
pop
and
fwait
movsl
mov
add
gs
add
xchg
lret
loopne
push
jg
mov
pop
enter
sahf
mov
loopne
and
sub
sbb
jmp
test
add
xchg
jb
rcrb
push
pop
pusha
xchg
dec
adc
xlat
idiv
or
adc
nop
mov
and
dec
mov
std
test
mov
jg
shrl
mov
bswap
outsl
outsb
lret
lods
mov
jo
jb
lods
aad
mov
pop
sub
or
jne
lea
jae
xchg
mov
pushl
mov
and
inc
addr16
fcmovnb
mov
out
mov
int3
push
adc
mov
dec
cltd
les
outsb
adc
shlb
mov
cld
incl
cmpsb
mov
pop
mov
inc
cmp
or
gs
mov
fisubrs
sbbb
fs
add
loope
push
xor
inc
mov
push
call
sbb
mov
lods
enter
adc
outsl
imul
inc
sar
jbe
push
sbb
push
movl
and
call
daa
pop
nop
sub
push
pop
arpl
xchg
and
ja
jnp
fs
add
jne
dec
outsb
sub
aas
hlt
push
jmp
jae
jg
adc
cld
imul
lea
insb
addr16
mov
cmpsb
sti
adc
mov
add
loopne
inc
jle
and
roll
adc
and
out
sub
fists
bound
fstl
add
add
test
dec
push
mov
xor
insl
fwait
cmp
enter
out
add
mov
jo
pop
jno
addb
loop
nop
insb
rclb
push
push
stc
inc
add
fstl
pop
pop
jb
sub
inc
not
and
fmuls
jbe
sarb
into
je
push
sub
or
push
sarb
inc
aam
ljmp
cs
clc
scas
mov
push
outsl
stc
or
mov
pop
or
ficoms
out
daa
jle
and
sub
xor
insl
test
sbb
imul
xor
jecxz
pushl
or
add
jae
fwait
add
or
dec
shl
icebp
pop
aad
ss
xchg
xlat
and
add
adc
lea
fistpll
ja
push
push
xor
mov
pushl
sbb
add
hlt
xor
pop
shr
sbb
push
inc
pop
imul
add
adc
dec
sub
addr16
cli
mov
inc
aaa
shlb
sbbb
pop
jne
pop
ja
lods
rorb
cmp
push
sbbb
inc
insb
xor
ret
xchg
popa
add
dec
sbb
or
add
pop
stos
sbb
outsl
adc
inc
xchg
outsb
das
cmpsb
push
push
test
mov
jmp
gs
fisubrl
jbe
cld
fbld
jmp
arpl
push
pop
outsl
nop
adc
stos
push
jp
adc
shlb
mov
jbe
jmp
xchg
push
lret
sbb
sbb
mov
adc
in
loopne
pushl
adc
je
enter
cmp
aad
push
ret
sbb
pop
dec
and
nop
fcoms
scas
das
movsb
stos
fldl
jb
subb
mov
fstpt
adc
lea
pop
pop
jo
fists
pop
xchg
mov
cmp
sbb
shll
js
push
popa
jg
out
mov
clc
push
dec
or
inc
jb
cmpsl
call
in
adc
mov
add
push
enter
gs
cmp
fldenv
std
shll
sbb
push
outsb
sahf
xchg
icebp
push
clc
das
push
cmc
pop
push
enter
repnz
pop
lock
dec
inc
ljmp
sbb
sbb
and
cmp
pop
jmp
mov
adc
lret
pop
dec
cltd
push
movsl
push
loopne
pushl
and
xchg
orl
push
in
shlb
pushf
mov
jp
aaa
test
loop
xchg
data16
dec
xor
xor
incl
pop
repnz
cmp
or
out
sbb
fs
sbb
cmpl
add
aaa
add
sub
pushl
xor
xor
enter
call
jb
and
fdivrs
xor
sbb
ljmp
push
adc
sbb
inc
mov
shll
decl
push
dec
xchg
dec
inc
push
dec
repz
enter
sub
imul
sbb
enter
xor
dec
mov
in
imul
nop
call
mov
jg
call
jno
mov
jae
pop
sbb
imul
xor
popa
ss
decl
dec
pop
jnp
push
notb
adc
loope
int
adc
jmp
inc
leave
inc
jbe
fs
adc
dec
les
xchg
mov
fisttps
push
mov
pop
das
pusha
roll
push
mov
xchg
call
xor
and
mov
xor
add
cli
pop
leave
or
mov
add
adcb
test
mov
or
jno
ljmp
outsl
xor
sbb
mov
jp
ljmp
notb
inc
sbb
dec
cmp
loop
das
cmp
cmp
push
decl
jp
insl
jns
push
push
mov
repnz
xchg
adc
xchg
adc
inc
scas
pop
imul
adcl
call
scas
lcall
popa
out
xchg
adc
rorb
pop
sub
push
push
push
dec
ljmp
mov
sub
movsl
mov
lds
xlat
cmpb
ja
sub
sub
add
cmpsb
incl
fldcw
push
std
mov
inc
inc
xchg
mov
loopne
std
jg
lcall
sbb
cltd
rcrb
scas
nop
sub
bound
punpcklbw
clc
cmp
adc
mov
and
popa
adc
bound
sub
mov
jbe
pop
pop
cs
imul
aam
cltd
test
sub
push
inc
arpl
or
mov
sahf
dec
dec
push
sbb
dec
cmp
stc
pop
fs
pusha
sub
pop
icebp
push
rcrb
repnz
inc
outsl
push
int
test
add
lock
pop
inc
das
xor
pop
icebp
lcall
rcll
mov
fbstp
inc
adc
pop
mov
cmc
lods
nop
cmpsl
sbb
xor
push
pushl
push
inc
fisubrs
ss
mov
push
ja
scas
js
sahf
inc
mov
jae
pop
jo
sbb
adc
add
jne
movq
pushl
push
pop
rcl
dec
pop
add
adc
vmovaps
mov
jecxz
call
cmp
pop
or
push
jmp
mov
arpl
dec
dec
je
sbb
fnstenv
mov
inc
dec
mov
push
orb
inc
and
xor
mov
cli
mov
or
lods
mov
xor
mov
mov
cld
call
ss
loop
imul
aad
mov
cmp
mov
movsb
and
adc
ret
jg
ffreep
jae
arpl
xchg
adc
mov
insl
xor
adc
adcb
dec
jns
pop
push
mov
addl
lcall
mov
push
sub
ret
stc
nop
orl
inc
enter
dec
adc
mov
pop
and
call
lcall
popf
adc
sbb
in
lea
jb
add
js
push
out
clc
xor
dec
jns
push
add
jecxz
add
cli
pop
ja
insb
jl
popa
add
je
ret
das
dec
push
dec
pop
mov
incl
push
inc
dec
add
idiv
adc
cmp
loopne
jne
fists
xor
outsl
outsl
sar
xor
push
and
lock
dec
dec
or
ljmp
rorb
dec
sbb
mulb
outsl
jns
das
fimuls
ficoms
sub
incl
xchg
dec
dec
inc
jb
or
push
insb
xchg
add
sub
dec
xchg
add
dec
je
adc
cs
leave
push
push
insl
je
mov
jbe
out
rolb
sub
test
xor
sbb
aam
dec
clc
jae
adc
inc
js
insb
ljmp
xor
ljmp
mov
pop
cmp
aaa
pop
fwait
add
xchg
cmp
pusha
sub
incl
data16
push
xchg
sahf
mov
inc
inc
push
sbb
push
inc
sub
or
xchg
inc
arpl
and
nop
adc
mov
nop
add
mov
data16
sti
fcmovne
pop
xchg
data16
inc
popa
or
fstps
lret
imul
or
and
adc
addl
decl
addb
inc
push
icebp
inc
ss
cmc
out
inc
push
popa
push
dec
mov
push
mov
sbb
insl
cld
mov
test
testl
mov
aaa
sbb
cmp
xchg
lods
mov
subl
testl
inc
adc
sub
push
jecxz
outsl
inc
mov
push
mov
and
gs
mov
aaa
push
inc
divl
pop
pop
lcall
inc
sbb
xor
jae
sbb
incl
xor
jmp
push
dec
mov
daa
clc
dec
pop
xchg
mov
adc
inc
dec
mov
shrw
pusha
inc
and
hlt
fwait
adc
test
fildll
sbb
jns
jl
fcomp
adc
mov
dec
push
nop
jb
pop
leave
rcll
lods
movsb
sub
mov
push
shlb
jmp
aam
leave
sub
xor
push
andb
and
das
mov
push
test
loop
in
or
inc
filds
cmp
sub
adc
aad
mov
or
sub
leave
adc
je
ljmp
sbb
dec
adc
movsb
push
cwtl
push
mov
push
enter
incl
out
mov
rol
push
imul
hlt
enter
int3
jb
sti
idiv
rcrb
pop
or
pushf
and
or
cwtl
jle
js
nop
push
enter
stos
pushw
add
jp
aaa
aaa
sub
adc
adc
out
push
push
mov
sub
cld
in
loope
lcall
jb
and
incl
sbb
loop
sbb
pop
insb
sub
repnz
nop
ljmp
mov
inc
inc
fs
inc
testb
jns
xchg
sbb
xchg
js
ljmp
dec
cwtl
adc
fsubrs
adc
das
adc
dec
or
mov
call
add
jae
pop
push
shrl
incl
and
xor
les
sbb
or
xchg
mov
xchg
fstpl
rolb
xor
ljmp
mov
movsb
xchg
rolb
mov
and
cmp
pushl
sub
inc
lock
fs
out
ret
push
popa
aad
add
add
out
lret
xchg
scas
dec
inc
dec
sub
fld
adc
sub
add
decl
outsb
lcall
jbe
or
sub
rorb
dec
bound
sbb
flds
scas
test
dec
outsb
jg
push
in
push
or
pop
push
or
sub
jge
mov
decl
mov
sbbb
stos
sbb
lret
outsl
jo
and
pop
or
std
stc
add
pushw
mov
jp
insb
add
inc
ss
cmp
push
sub
int3
subb
xchg
jmp
inc
adc
sbb
inc
add
jmp
movsb
arpl
test
fiadds
mov
sbb
push
leave
fsubs
push
sbb
dec
dec
scas
jns
pop
add
ljmp
cli
push
sarl
xlat
es
cmpsl
xchg
push
outsl
mov
jns
and
xchg
cmp
mov
and
xor
sbbl
adc
nop
push
cmpl
dec
sbb
add
lods
add
incl
jp
or
stc
adc
arpl
aaa
or
jnp
xchg
dec
or
enter
sub
add
std
jmp
fs
lods
or
outsb
sbb
sub
dec
mov
push
xchg
int
push
sub
ffreep
add
xor
mov
mov
or
and
mov
mov
cmp
call
adc
cmpsb
jmp
pushf
or
add
fxch
add
jo
les
std
pop
lret
popf
dec
pop
or
loope
add
add
dec
mov
mov
push
test
cmp
pmuludq
je
dec
jge
pop
fildl
decl
das
adc
inc
add
ljmp
call
outsb
mov
xor
pop
xor
cmp
push
repz
inc
shll
es
ljmp
test
add
add
push
push
adc
sub
push
int
nop
imul
clc
pop
or
decl
es
mov
loop
addr16
out
and
addl
add
adc
sub
push
call
adc
outsl
jae
mov
push
push
jg
mov
orl
or
or
inc
inc
mov
jo
fdivs
mov
or
adc
push
xor
pop
fldt
outsl
arpl
dec
add
sahf
push
mov
adc
pop
sar
or
dec
fs
lods
inc
je
sbb
and
mov
push
cmp
sub
adc
lcall
mov
jp
sbb
pop
mov
je
jg
push
dec
sar
add
outsl
jnp
arpl
or
jne
insl
dec
adc
add
sub
or
call
adc
jne
mov
lods
andl
add
fucomi
mov
or
xor
inc
inc
decl
icebp
mov
das
mov
or
mov
and
stos
decb
scas
inc
mov
fs
jo
pop
push
in
int
aaa
adc
sbb
hlt
jg
lcall
fs
cmp
ret
jge
incl
mov
cmp
jo
mov
pop
and
push
inc
std
dec
cmp
mov
insl
std
outsl
in
inc
insb
cmpsl
nop
dec
movsb
in
mov
ja
inc
outsl
xor
push
or
daa
xchg
or
or
lock
add
inc
adc
inc
decl
pop
sti
in
sbb
sbb
push
push
adc
add
or
or
or
or
or
adc
or
and
pop
sbb
inc
mov
push
dec
and
lock
sub
sbb
or
or
incl
sysret
and
test
add
or
push
in
lods
std
mov
cmp
sub
sub
adc
push
sbb
clc
call
mov
imulb
push
adc
push
pop
movups
sbb
incl
adc
cmp
push
pop
adc
push
mov
cmpb
and
adc
aas
adc
push
pop
adc
push
sbb
decl
in
lcall
xchg
adc
sub
jno
sub
sub
sbb
xor
mov
mov
sub
dec
adc
insb
insl
jne
push
in
in
ljmp
push
push
or
jp
hlt
or
push
mov
pop
pop
and
or
pushl
es
push
or
cmp
or
fcmovnu
out
loopne
adc
test
or
daa
adc
ljmp
adc
sub
or
or
adc
or
in
inc
jle
mov
adc
lock
adc
test
push
add
pop
add
fwait
push
inc
xchg
addl
sbb
out
loope
pushl
push
enter
mov
lret
pop
inc
or
add
pop
and
cmp
outsl
ds
gs
xor
shlb
cmpsb
insb
pop
and
loopne
adc
add
call
test
pop
mov
xor
fsubl
mov
ja
repnz
call
hlt
mov
and
imul
call
shrb
out
repz
testb
jae
inc
gs
or
popf
pusha
ja
lcall
test
jmp
ss
dec
pushf
add
mov
dec
js
imul
sbb
mov
hlt
xchg
adc
shl
nop
call
or
andb
mov
fcmovbe
test
or
sub
mov
or
clc
mov
inc
mov
inc
add
subb
out
cld
adc
jb
inc
and
shlb
outsl
outsl
sbb
jne
sbb
movsb
dec
fisttpl
or
jp
lock
lds
sbb
sbbl
cltd
lcall
mov
repz
roll
lea
cmp
jbe
mov
inc
dec
jmp
pop
sub
imul
arpl
and
push
icebp
add
jmp
idivl
push
push
mov
call
aas
add
out
sbbb
mov
shr
rol
xchg
sub
sub
add
or
fsub
fprem
scas
flds
shlb
lea
repz
ds
fldt
mov
add
push
xchg
pushf
or
fmull
scas
push
push
fwait
jp
sub
pop
push
add
jmp
xor
es
in
out
in
lea
adc
and
ja
ret
mov
loopne
xchg
out
jmp
add
loop
minps
add
mov
mov
push
push
push
push
push
push
call
lea
pushl
sub
sub
pop
popa
mov
subb
les
sub
mov
push
movsb
dec
mov
adc
cltd
mov
lds
xor
lcall
push
jnp
cmp
xchg
pusha
aas
outsb
or
sbb
mov
pop
leave
repz
dec
js
cmp
mov
pop
jae
pusha
scas
and
sahf
pop
daa
sub
adc
sbb
mov
mull
bound
or
daa
dec
inc
push
dec
inc
dec
xor
rcrb
adc
adcl
jecxz
sub
fiaddl
imul
xchg
mov
loopne
add
int3
or
pop
out
mov
aaa
xor
xchg
ficompl
push
loop
aad
outsb
mov
xchg
mov
popa
imul
mov
stos
dec
dec
stc
lahf
dec
xor
xchg
stos
nop
subl
lret
and
and
cmp
es
and
arpl
push
and
outsb
and
imul
mov
xor
adc
or
add
inc
mov
dec
imulb
sub
rep
mov
ret
push
dec
addl
movsb
sbb
push
sahf
rol
push
xor
js
pusha
jo
inc
mov
xlat
jnp
jno
sub
mov
in
push
jo
out
dec
push
dec
jae
sbb
add
mov
loop
cmp
add
nop
pop
push
repnz
add
call
pop
add
ja
rcrb
and
add
inc
and
add
mov
mov
xor
cmp
add
adc
ret
add
iret
cmp
add
test
add
add
add
sub
int
sub
push
and
cmpsb
mov
add
insb
subl
incl
or
inc
sbb
and
xor
inc
add
dec
lods
movsl
popf
push
push
pop
pop
or
or
or
or
or
or
dec
jmp
testl
js
cltd
pop
pop
xchg
les
add
add
lods
pop
in
push
or
push
push
sub
push
and
je
add
mov
jle
cs
ljmp
outsb
in
xchg
in
jl
mov
mov
xor
mov
incl
push
sbb
int3
lea
push
push
pop
lret
add
incl
lea
mov
push
mov
push
mov
push
push
sbb
roll
out
or
movsl
pop
add
add
adc
cwtl
cmp
push
cmpb
inc
test
dec
movsl
popa
popf
mov
icebp
pop
jae
fildll
push
fcompl
std
in
add
add
add
je
ret
or
jmp
or
push
mov
xlat
inc
mov
clc
push
push
mov
ja
adc
sub
scas
into
test
rcrb
pop
jmp
add
push
cmp
cltd
or
mov
mov
cs
or
and
mov
pop
sub
lea
decl
add
sbb
mov
inc
mov
imul
fldt
push
dec
inc
or
or
sub
sar
pop
lock
ljmp
jne
push
pop
cmp
jae
push
pop
sub
shr
divb
jecxz
dec
clc
movsb
movzbl
mov
push
shl
or
incl
inc
cld
fisttps
jb
je
loope
mov
shr
and
sub
pushw
loopne
mov
jne
add
flds
in
adc
push
subb
std
pop
pop
pop
sub
jmp
stc
xor
push
insl
add
aas
cwtl
pusha
cmp
jae
push
pop
sub
shr
imul
sbb
das
in
cld
add
loopne
fdiv
adc
ret
not
add
adc
fcomp
lcall
sarb
mov
push
ret
sbb
push
ficoms
fxch
add
test
mov
ret
cli
ret
in
sbb
insl
mov
lret
fmuls
nop
mov
adc
lock
jae
outsl
add
fisttpll
dec
bound
lea
addr16
mov
adc
push
or
push
push
mov
outsb
movsb
pop
mov
nop
xor
xor
shll
push
nop
and
outsb
test
or
jne
mov
into
pop
mov
je
mov
hlt
adc
rorl
jnp
insl
jbe
enter
sub
outsb
fs
or
mov
in
push
jne
jbe
into
cld
jmp
add
scas
flds
mov
push
add
mov
push
jmp
out
pop
clc
test
mov
push
cmp
lcall
adc
push
lret
push
aas
ret
push
out
push
cmp
xor
pop
mov
fld
mov
mov
imul
cmp
inc
jae
cmp
jae
call
js
call
sub
add
cld
push
inc
or
test
out
add
test
or
cmp
pop
cld
pop
jb
sbb
adc
jae
xchg
loope
jnp
orl
lea
movl
sbb
push
enter
xor
or
mov
jno
frstor
or
sti
sahf
or
pop
adc
mov
inc
inc
xor
sti
or
add
pusha
inc
xor
sub
js
pop
add
lea
jbe
or
jae
jo
dec
popf
dec
and
loope
mov
push
or
sti
mov
fmulp
pop
and
and
jne
add
stos
inc
add
xchg
pop
inc
add
enter
xor
leave
shrl
add
jnp
mov
adc
pop
pop
test
xor
sbb
push
and
setne
dec
ds
rcr
call
and
sbb
push
testb
or
stc
jb
shlb
pop
xor
shl
or
sub
inc
sub
pop
call
xor
mov
shr
pop
addb
jne
mov
dec
shll
add
lock
pusha
ds
mov
inc
out
cmp
mov
push
sbbl
in
ret
cmp
push
pop
push
or
mov
sub
lret
add
mov
sbb
or
lea
lock
or
jle
addl
or
push
popa
sbb
cmp
sbb
mov
pop
jnp
jmp
out
add
out
and
aam
jecxz
push
xchg
popf
mov
xor
adc
pop
or
mov
sbb
or
mov
cmp
clc
xchg
xor
mov
loope
push
jb
or
or
clc
sbb
mov
loopne
inc
in
mov
cld
adc
pop
dec
clc
jae
mov
jo
jle
jmp
decb
cmpl
jb
cmp
fiaddl
mov
repnz
movsb
hlt
testb
push
push
stc
xchg
xchg
xchg
jge
push
xor
addr16
iret
dec
dec
iret
rol
lcall
pop
shl
adc
dec
mov
loopne
or
push
adc
and
pop
stos
jecxz
add
out
sti
andl
cmp
mov
xchg
je
pop
and
sub
lea
mov
xor
leave
push
dec
add
shr
rorl
jmp
jmp
insb
pusha
sub
call
mov
inc
cmpsb
xchg
cmp
dec
sbb
cld
call
dec
mov
pop
mov
dec
aam
jnp
jge
les
pusha
sub
imul
add
sub
clc
cs
jg
cld
mov
adc
cld
dec
sbb
mov
aad
dec
jo
leave
jne
cmp
popa
lock
add
and
lret
fistps
jecxz
imul
into
or
dec
fiadds
int3
add
imul
push
lret
jge
pop
cmp
mov
inc
inc
or
subl
jmp
xchg
pop
rcrb
popa
pushf
sub
jbe
sub
jmp
dec
rorb
popa
or
jne
jmp
mov
xor
shlb
sbb
add
hlt
jb
pusha
std
test
mov
lock
popa
sub
inc
ja
ss
in
aam
add
hlt
fdivs
data16
jno
popa
xor
lea
es
add
push
xchg
or
daa
inc
xchg
xlat
xlat
cmpl
sbb
add
mov
iret
or
jmp
jge
jbe
inc
xor
rcll
dec
mov
mov
imul
adc
pusha
std
cld
sub
std
or
add
lret
mov
test
lods
cltd
or
dec
dec
push
lcall
in
or
mov
out
push
mov
outsl
mov
mov
and
mov
push
es
xchg
add
int3
pop
pop
test
mov
or
sub
xchg
jne
mov
lock
clc
in
pop
test
sarb
enter
test
loopne
add
push
mov
fxrstor
mov
cwtl
mov
xchg
dec
mov
outsl
shl
inc
adcl
and
dec
xchg
mov
adc
xchg
mov
xchg
mov
or
dec
fisttps
cmp
outsl
fsubrs
add
loope
cli
pop
add
dec
loopne
push
push
iret
add
dec
inc
cmpsl
mov
mov
adc
lcall
push
test
dec
insb
in
xor
xchg
jmp
or
pop
js
les
add
cmp
add
movsb
lods
push
push
fcoms
jae
xlat
dec
xor
mov
or
enter
xchg
sbb
jne
push
jge
xor
xor
mov
shrb
fisubrs
mov
addr16
mov
mov
dec
jl
pushl
icebp
jne
ret
decl
xchg
add
cmpsl
shrl
push
int3
iret
fnsave
je
xor
jmp
or
xchg
mov
movsb
dec
and
push
mov
and
mov
jge
jae
shr
ret
mov
and
add
outsl
sub
push
jmp
add
mov
testl
mov
mov
add
int3
je
pop
imul
imul
imul
pushf
call
mov
or
adc
add
or
or
stos
int3
jne
add
insl
enter
ljmp
scas
pop
mov
jmp
or
pop
pop
sbb
sbbl
clc
dec
shlb
icebp
xchg
dec
cmp
push
data16
or
jo
or
inc
fildll
push
xor
sbbl
push
arpl
lock
jns
sbb
shrb
or
or
add
push
sub
jl
in
hlt
xchg
cmc
cltd
or
or
lcall
mov
cmpsb
imul
mov
mov
test
push
jge
incl
push
dec
jne
sub
jne
xchg
ffree
sbb
xor
and
xlat
inc
das
rcl
mov
jl
lea
jne
mov
fisttps
jbe
or
push
imul
push
push
add
aaa
jne
dec
sub
cmp
cli
jp
cld
jbe
xor
add
pop
shl
cmp
jl
lea
pop
lea
js,pt
push
clc
xchg
movb
jb
mov
shl
mov
stos
mov
push
loopne
mov
push
sti
aas
add
mov
xor
dec
mov
es
mov
dec
mov
mov
and
push
jmp
push
je
cmpsl
inc
ret
push
ret
sub
adc
xor
sbb
inc
mov
push
inc
cmp
jb
mov
jp
pushf
adc
and
mov
mov
or
sub
or
mov
neg
shrb
or
fmull
fdivrs
sub
mov
mov
inc
push
in
xor
cmp
jle
add
call
popa
add
ret
faddl
fisubrl
dec
sub
shl
mov
testb
lods
call
ljmp
jge
add
xor
cmp
jae
inc
or
push
mov
mov
mov
rorl
imul
jbe
sub
xor
enter
clc
shl
lods
aam
lahf
cmp
xchg
popa
jge
es
inc
or
adcb
mov
int3
fildll
sub
repnz
mov
je
add
push
mov
xchg
sbb
or
in
lods
aas
sbb
mov
push
icebp
push
cltd
pop
test
shrb
sub
test
lea
push
cmpsb
ss
inc
movsl
xchg
sbb
sbb
stos
xchg
and
loope
fisttpl
dec
sub
mov
inc
or
cmpl
ds
movsb
inc
push
cmp
sub
sbb
and
dec
pusha
gs
mov
add
push
sub
sbb
rcll
adc
mov
sbb
mov
push
push
pop
pop
mov
shrb
or
lret
shr
mov
jae
lock
rorb
or
loope
call
shlb
inc
dec
jb
insl
jno
in
cmp
jl
shr
lcall
fadds
lock
jmp
or
cmp
sub
cmp
je
sbb
mov
insb
out
sbb
or
add
push
lcall
and
out
cmpsb
stos
sarb
jge
add
ror
aad
into
lods
ret
lds
bound
and
xchg
sbb
aam
jmp
mov
mov
mov
lock
push
loopne
pop
adc
stc
mov
xor
cli
rcr
mov
or
cmp
add
add
push
call
lods
adc
xchg
add
mov
jne
cmp
pop
add
jne
call
fldenv
call
loope
stos
cltd
mov
cld
pop
ret
fcmove
pusha
mov
mov
cmp
scas
orb
pop
cwtl
jae
pop
add
inc
movzbl
fwait
int
jbe
icebp
sub
add
cld
lahf
push
cmp
mov
add
jmp
shr
inc
pusha
in
or
or
and
dec
pop
es
fsubrs
fcompl
in
in
lock
inc
sahf
or
mov
pop
dec
les
int3
and
iret
test
xor
repnz
enter
dec
in
addb
mov
pop
sub
inc
or
sbb
daa
out
push
sub
pcmpeqb
pushf
cmpsb
mov
pop
dec
dec
mov
or
mov
inc
xorl
inc
and
ja
jo
movsl
frstor
push
bound
pop
and
xchg
add
hlt
inc
insb
loop
dec
sub
rorb
fwait
pavgb
push
or
jne,pn
or
and
inc
sub
test
test
arpl
fildl
xchg
das
xchg
jae
mov
pop
pop
add
inc
ljmp
jo
push
jbe
orb
lock
sbb
add
and
cmp
out
add
xchg
pop
jg
dec
push
sbbl
clc
inc
inc
adc
cmp
jmp
and
or
test
inc
xchg
sbbl
fidivs
jnp
cmc
in
push
ficomps
inc
lcall
sbb
inc
cmp
push
dec
incl
and
jnp
xchg
hlt
jle
jg
push
imul
xlat
pop
imul
flds
adc
jmp
cltd
inc
fimuls
lock
popa
cmp
or
mov
lock
or
add
outsl
fstps
sbb
sbb
lock
lret
xchg
or
ljmp
dec
loopne
mov
loopne
repz
dec
jo
or
cmpsb
dec
pop
and
dec
inc
sar
jae
pop
mov
pop
add
dec
gs
pop
or
ja
ret
xorb
inc
ljmp
test
cld
cmp
test
xlat
test
add
jno
sbb
cmp
lcall
mov
mov
mov
and
mov
bound
xor
pushl
adc
pop
sbb
rol
pusha
add
pop
loopne
push
jae
cld
cli
ljmp
or
jl
roll
enter
addr16
pusha
jo
subl
rol
pusha
and
pushl
dec
or
ret
loopne
push
arpl
sbb
loopne
push
sub
call
bound
cmpl
xor
cwtl
roll
inc
xor
dec
popa
cmpsb
mov
jecxz
ret
decw
outsl
mov
xchg
movsb
dec
or
out
orb
add
jmp
mov
or
or
push
push
or
data16
ljmp
test
out
or
mov
sub
sti
dec
jmp
mov
fdivrp
ljmp
and
mov
jnp
adc
enter
stos
lret
repz
test
lea
outsl
mov
leave
and
lds
hlt
aaa
mov
xchg
and
xchg
inc
inc
cli
enter
pop
sahf
enter
sbb
xchg
ret
in
cmp
mov
loope
adc
pop
add
pushl
pop
in
or
xchg
jo
dec
nop
pop
mov
pop
lock
out
adc
dec
push
xchg
js
xlat
mov
dec
mov
xchg
lret
or
sub
in
dec
ret
push
jb
in
push
inc
jmp
in
cmp
lds
daa
in
icebp
xchg
push
jb
mov
pop
out
jne
dec
ret
push
out
js
sahf
sub
lcall
push
and
jns
mov
incb
sub
movsb
dec
es
dec
arpl
in
mov
mov
push
hlt
es
cmp
and
inc
or
rol
xor
stc
es
fistpll
push
mov
xchg
or
pop
adc
lret
pushf
xor
pop
out
push
mov
adc
test
loop
cmp
sbb
mov
jno
ss
subl
fisttps
fdivrs
fstps
pop
out
and
pop
icebp
jg
hlt
leave
in
fadd
loopne
jle
insb
shlb
mov
dec
imul
mov
xchg
cmp
xchg
mov
lods
cs
mov
int3
xor
push
leave
lret
aad
mov
clc
jge
mov
or
imul
mov
out
das
iret
mov
mov
sub
fsubrs
decl
test
add
pop
fcoms
sub
xor
ljmp
shlb
imul
lods
ss
arpl
add
fs
xor
incl
movsl
add
and
adc
lds
pop
lock
sub
mov
and
ljmp
pushf
sub
mov
sti
or
mov
pop
mov
ja
lcall
mov
daa
xchg
sub
xchg
int
ret
xor
mov
jmp
add
xlat
xchg
push
fdiv
fisttps
imul
mov
cmp
out
xchg
aad
bnd
jne
stc
rcrb
sahf
or
sbb
xchg
mov
dec
jnp
sub
arpl
stos
adcl
mov
inc
xchg
bound
and
lods
scas
leave
das
inc
ret
pushl
push
into
or
pusha
addb
movsl
pusha
add
adc
std
stos
add
scas
clc
std
adc
aam
ret
test
xchg
xor
ret
data16
mov
cmp
sub
sub
shlb
mov
pop
clc
inc
ret
sbb
das
and
sbb
cmp
push
out
test
repnz
adc
mov
inc
mov
and
inc
jl
stos
add
mov
lcall
mov
stos
jmp
push
nop
sub
pusha
pop
loope
cmp
push
xchg
dec
outsb
call
xor
push
jg
decl
ja
pop
sbb
push
dec
mov
dec
pop
xor
inc
arpl
shr
out
lcall
inc
push
sbb
movups
push
sub
dec
sbb
cli
roll
dec
add
mov
xor
mov
mov
jg
in
cmpsb
mov
bound
add
add
lcall
sub
push
adc
pop
clc
rolb
push
data16
xor
and
movsb
add
lds
sti
mov
jmp
inc
or
xlat
addr16
mov
call
jnp
pop
sub
xor
cltd
jecxz
xor
sbb
rcl
rcll
pop
ljmp
jmp
ja
mov
andl
dec
ret
lock
movsl
add
xlat
leave
sar
mov
cld
and
add
jp
xor
stos
or
call
lcall
xchg
inc
mov
lret
in
fsub
inc
adc
test
sub
test
push
cld
lcall
ja
mov
rcll
xchg
rclb
push
mov
stos
fwait
incl
xchg
xchg
push
cmp
cltd
into
jmp
rcrb
xchg
inc
cmp
jnp
push
mov
add
mov
cmp
addr16
xchg
imul
rolb
in
lods
inc
enter
enter
dec
jo
or
in
xor
mov
mov
sbb
push
mov
push
test
cmpsl
lea
mov
inc
bound
pushl
insl
test
sub
xchg
sbb
sbbb
jge
or
mov
loope
jmp
test
cmpsb
lcall
bound
or
popa
repnz
lcall
or
pop
or
inc
inc
pop
enter
cmp
ljmp
push
mov
lds
inc
mov
out
mov
jmp
jp
lret
mov
nop
push
sti
mov
test
pop
sub
ret
xchg
inc
das
jmp
imul
mov
jmp
fs
mov
js
loope
cld
call
cmp
mov
xchg
and
mov
pusha
sbb
mov
cmp
mov
out
mov
inc
and
adc
or
pop
xlat
sbb
test
sar
xor
xchg
loope
loop
shlb
or
jecxz
imul
shll
xchg
lcall
sbb
push
lea
sub
jnp
aam
mov
test
imul
mov
movsl
out
loopne
ljmp
fs
call
sbb
jae
lcall
push
adc
mov
clc
or
aas
call
xor
add
test
mov
push
pop
je
aas
or
mov
test
lea
pop
ret
and
push
rorb
jae
mov
or
dec
push
rcr
jmp
add
xchg
adcl
sub
cmp
addl
dec
lret
jl
add
xchg
xorl
call
stos
scas
push
inc
es
mov
dec
xchg
pop
jns
jns
mov
jecxz
hlt
push
js
vmread
ljmp
adc
in
sbbb
xor
pop
push
inc
inc
mov
xchg
adc
mov
arpl
dec
pop
xlat
or
int3
mov
add
fisttps
inc
pusha
pusha
sbb
and
int3
movsl
fldenv
imul
fidivrs
sub
push
gs
decb
add
dec
pop
sub
ljmp
jle
mov
xchg
es
add
sbb
leave
pop
xchg
lcall
add
or
cld
mov
pop
pop
lret
inc
mov
push
out
or
mov
popf
ret
inc
xor
ljmp
hlt
and
test
scas
ror
fwait
dec
insl
test
sbb
out
mov
pop
in
in
or
adc
jmp
jmp
cmp
xchg
dec
lahf
test
mov
mov
outsb
sub
sahf
addl
jge
out
mov
adc
incl
aas
xchg
add
dec
xchg
jl
es
add
dec
jg
mov
sarl
push
loopne
mov
cmp
xor
sbb
sub
mov
xor
inc
push
stos
jg
enter
jb
and
and
xchg
jmp
adc
lock
cs
shll
hlt
scas
cli
dec
jne
or
or
jle
xchg
mov
mov
push
adc
or
stos
fdivs
lods
add
ljmp
cmpsb
rcl
int3
int3
cmp
add
mov
int
dec
pusha
jnp
outsl
sar
decl
jne
mov
mov
jmp
inc
movsb
xor
shlb
cmp
out
clc
xchg
aas
jmp
addr16
das
mov
je
rorl
les
outsb
enter
mov
fiadds
ja
xchg
jp
lcall
mov
fwait
test
arpl
mov
in
out
dec
ljmp
decl
rorl
pusha
insb
cmc
xor
bound
rcrb
jmp
incb
lcall
outsl
xchg
in
cli
arpl
lods
pop
cmp
jmp
mov
ss
jno
movsl
add
jg
mov
xor
fdivrl
mov
xchg
mov
sar
mov
lds
daa
mov
pop
stos
ret
and
stos
nop
jg
adc
cmc
lahf
sbb
xor
push
ljmp
push
jae
aad
mov
inc
jecxz
ljmp
lods
lcall
adc
push
sbb
cmp
mov
adc
pop
lcall
mov
jmp
insb
sbb
mov
or
psubsb
dec
hlt
jg
roll
push
loopne
cmc
inc
out
pop
fisubrl
fldl
dec
add
sbb
or
mov
cwtl
fidivl
jg
dec
cmp
test
mov
decb
or
push
xchg
jmp
dec
and
cmc
mov
jnp
mov
sarl
test
call
test
mov
enter
or
mov
sbb
ret
push
mov
xchg
inc
ljmp
clc
mov
mov
push
or
mov
imul
cmp
test
lfs
sbb
add
jmp
imul
sub
cmp
or
xor
dec
sub
push
or
add
lcall
lret
sbb
sub
into
or
sub
sbb
cmp
push
and
ljmp
adc
pushf
push
pop
push
or
dec
push
sub
icebp
test
pusha
mov
mov
mov
push
dec
push
mov
sbb
or
inc
mov
aaa
rclb
mov
test
inc
rolb
dec
cmpb
loopne
stos
pop
test
fisubl
test
mov
ljmp
jmp
outsl
cmp
or
fstpt
pusha
fidivrl
and
pop
push
mov
inc
jmp
insl
shrb
or
xor
ljmp
dec
test
call
loop
lock
call
cmpsb
xchg
jp
div
divl
test
test
push
pop
push
jge
and
orb
into
cmp
jmp
or
daa
mov
mov
repz
mov
out
shlb
popa
dec
cmp
adc
push
mov
inc
sbb
sub
add
inc
sub
jno
mov
jnp
dec
dec
xor
inc
in
decl
sti
loop
dec
mov
add
jg
fldl
aad
mov
repz
mov
lcall
jb
clc
dec
sti
dec
cmp
inc
shl
xchg
and
sub
repz
pop
dec
add
out
cmp
xchg
inc
insb
push
ljmp
xchg
imul
jecxz
popa
roll
std
out
or
inc
andl
decl
and
stos
mov
jne
mov
daa
pop
jle
fmuls
jno
ljmp
pop
mov
test
xlat
jo
and
push
dec
cmp
insl
cld
cmp
mov
pop
loope
xor
pop
jle
scas
xchg
mov
lcall
pop
and
arpl
das
sub
stos
xor
nop
push
mov
sub
ljmp
pop
data16
adc
out
adc
ss
scas
pop
std
incb
or
pushl
dec
dec
mov
mov
sbbl
gs
xchg
nop
fstps
inc
insl
fadds
stos
mov
xor
mov
idiv
mov
jecxz
mov
aad
push
out
cli
push
gs
inc
mov
jp
cld
fcoml
mov
ljmp
sub
or
arpl
out
fstpt
pop
push
adc
push
add
xchg
shrb
loop
mov
inc
push
aam
fiadds
xchg
push
imul
pop
push
jne
inc
sbb
sarl
inc
push
dec
scas
or
stc
xor
push
fwait
lcall
dec
add
pop
inc
lds
xchg
cmc
push
and
pusha
imul
es
adc
dec
cmp
decl
dec
pop
imul
loope
cmpsl
pushf
iret
mov
dec
imul
mov
repnz
sbb
xlat
mov
hlt
cli
xor
shlb
add
mov
inc
lods
push
mov
jb
cmp
xor
push
pushf
dec
xchg
xchg
dec
pop
cs
adc
call
ljmp
inc
or
imull
loop
jge
movsbl
sahf
jmp
lea
flds
add
xor
fs
bound
rclb
add
cmp
repz
hlt
lock
sub
bound
out
sarb
dec
lcall
stos
mov
pop
scas
mov
enter
fmull
stc
push
out
sbb
adc
incl
lcall
cs
mov
jne
jnp
lea
js
push
scas
cmpsl
add
and
cmp
fs
add
aad
pop
mov
adc
sbb
stc
jl
scas
sub
lods
xchg
jmp
popf
lcall
int
inc
push
push
jbe
outsl
out
push
inc
pushl
sarl
sbbl
pop
push
repnz
sbb
jmp
sub
clc
or
add
cmpsb
call
push
loopne
ljmp
mov
fs
cld
xor
sub
mov
and
enter
cmp
adc
push
lcall
dec
cs
rorb
jmp
pop
dec
jb
push
xor
cmpsb
sbb
jne
insb
ljmp
pushf
sbb
push
pop
push
jnp
pop
aas
mov
sub
mov
cld
pop
fcos
jmp
repz
aas
and
dec
or
aam
in
pushf
addr16
pop
xchg
mov
fistps
sub
lods
lahf
mov
jecxz
jbe
sub
dec
nop
push
mov
inc
lcall
cmp
iret
xor
insl
mov
adc
sbb
cmp
decl
pop
xchg
imul
xlat
dec
xor
popf
xchg
movsb
icebp
into
loop
mov
decl
pop
cmp
and
std
xchg
jp
inc
mov
dec
pop
pop
and
call
jmp
cmpsb
loop
lods
in
sbb
or
sbb
scas
push
jns
mov
sbb
push
addr16
inc
lds
sbb
orl
aas
or
add
mov
mov
push
lods
adc
ljmp
gs
mov
mov
sbb
incl
push
ret
cmp
arpl
push
mov
cli
faddp
das
xchg
es
into
adc
lock
jg
jmp
ret
data16
mov
std
clc
test
in
mov
jno
decl
scas
stos
cmpsb
out
mov
aas
out
pop
pop
pushf
and
outsb
ja
pop
std
stc
inc
ficoms
sub
cpuid
outsb
bsr
mov
xchg
decb
lds
jno
pop
scas
mov
les
lahf
fwait
lret
jne
mov
jl
int
jmp
pop
xlat
inc
or
xlat
sub
addr16
jne
mov
ljmp
sub
mov
sbb
test
push
arpl
or
decl
insl
clc
lea
push
enter
sti
jmp
or
push
stos
sbb
fidivl
fcmovb
sub
mov
or
aam
aas
cmc
sti
lcall
mov
xchg
add
repnz
xor
xchg
jo
or
jo
in
add
pop
hlt
mov
add
jg
incl
mov
mov
test
jg
icebp
xor
movsb
adc
mov
stos
mov
pusha
dec
addb
or
mov
decl
mov
mov
xor
repnz
fwait
clc
inc
clc
pop
add
cs
lcall
ss
sub
pop
sbb
fcomip
cmp
adc
out
push
decl
sbb
movsl
cltd
test
sub
cli
mov
fwait
xchg
dec
dec
lcall
jmp
fstpt
inc
gs
stc
or
std
cld
push
pop
addr16
adc
cmpb
mov
push
aad
xchg
sahf
xor
xor
cmp
mov
or
xor
clc
aad
or
das
ljmp
out
jb
xchg
nopl
mov
imul
push
dec
inc
mov
jmp
jno
jecxz
frstor
sub
cmpsl
xchg
dec
cmpsb
and
jge
push
movsl
adc
jmp
lcall
xor
jg
stc
and
movsb
jl
and
int3
push
mov
insl
push
dec
sahf
out
fmull
pop
faddl
jmp
mov
and
pop
aaa
sbb
mov
dec
div
pop
mov
fisubrl
pop
adc
pop
xor
adc
cmp
pushl
pop
out
cmpsl
test
push
sbb
aam
jg
mov
fldl
cld
inc
loope
push
push
mov
sub
add
mov
pop
mov
insl
sti
fnclex
xor
sbb
int3
sbb
pop
xchg
xlat
fistps
or
icebp
stos
jp
xor
inc
lret
lods
sub
incl
mov
mov
fstpt
jge
sbb
fnstcw
fdivrp
mov
filds
test
xchg
sti
mov
fisttpl
xor
ljmp
xchg
dec
fistl
mov
sbb
loope
imul
inc
mov
mov
out
dec
inc
lahf
imull
cwtl
push
mov
idiv
pop
nopl
sbb
in
mov
mov
in
out
test
push
negl
in
add
in
lret
insl
jg
out
cwtl
mov
mov
mov
ficoms
outsb
lods
ds
stc
lret
outsl
out
cld
sub
stc
aam
dec
addr16
call
leave
mov
sbb
out
sbb
push
fstpl
stos
pusha
bound
dec
adc
lcall
decl
jl
fwait
mov
pop
out
lcall
sub
push
insb
mov
cmc
addr16
icebp
jge
ljmp
push
lods
jl
lcall
in
fnsave
sarb
mov
nop
add
push
cmc
fldt
sti
arpl
loope
lret
incl
cmc
out
andl
lds
movsl
lahf
std
lret
pop
idiv
fbstp
arpl
ja
dec
jnp
lods
in
mov
mov
lods
ljmp
add
daa
or
mov
xchg
jg
sub
out
push
cmc
jge
nop
mov
jecxz,pt
das
cli
call
cmp
lcall
pop
les
insb
leave
jmp
imulb
adc
incl
out
inc
jmp
and
pop
test
pop
and
jnp
jne
aam
aam
inc
sub
ljmp
in
int
mov
cmp
xor
ficompl
push
push
push
sahf
lods
fsubrl
mov
mov
push
jo
pop
sbb
mov
outsb
adc
orl
ljmp
cli
je
test
enter
dec
jge
cmp
daa
out
lods
sarb
int3
jecxz
xchg
sub
push
lock
cmp
mov
pop
jae,pn
ljmp
ljmp
lods
pop
mov
fld
dec
lret
push
scas
lret
pop
mov
divb
xchg
xchg
mov
jg
notb
sarl
xchg
arpl
add
pop
sbb
jmp
aad
jg
push
dec
adc
in
add
fs
jle
jp
push
adc
movsl
std
shrb
call
je
add
ret
call
xchg
in
cmpsl
adcl
mov
pusha
decl
call
xchg
mov
jno
adcb
inc
lret
js
mov
cld
pushl
call
adc
sub
jge
dec
imul
jp
nop
inc
and
enter
dec
mov
cwtl
dec
ljmp
loopne
and
movl
cmp
pop
hlt
push
pusha
mov
push
push
adc
jns
dec
adc
push
cmp
cwtl
adc
fiaddl
notb
jmp
pusha
jbe
mov
lods
add
push
pop
mov
mov
ljmp
int3
lahf
sbb
jmp
stc
add
sar
dec
dec
sbb
jb
pop
xchg
mov
mov
jnp
cmp
sti
mov
inc
pushl
xor
cmpsl
lods
loopne
nop
bound
sti
sbb
fcmovb
outsl
mov
jo
pop
scas
divb
jmp
mov
xor
imul
lock
dec
xadd
mov
adc
call
push
repnz
leave
pand
sub
pop
test
outsl
pop
jg
mov
mov
and
push
or
adc
sub
rorb
cld
dec
mov
add
outsb
sub
xchg
dec
out
mov
test
push
mov
jns
aad
daa
aaa
pop
jg
insb
idivb
movsb
pop
std
and
jns
decb
shlb
popf
daa
jp
adc
mov
push
fidivrs
pop
xor
mull
cld
ljmp
shl
xor
sbb
jg
cmpb
daa
lock
jbe
ror
shrb
inc
jg
icebp
jne
lcall
loop
sbb
dec
mov
and
popf
and
pop
cltd
and
mov
cmp
fsubl
imul
mov
sbb
pushl
adc
dec
pop
test
fwait
or
das
jbe
hlt
int
add
lret
dec
pushl
xchg
and
clc
jo
das
dec
ljmp
sub
push
jns
cmp
cld
dec
ret
popa
pusha
jmp
xchg
jle
ljmp
jmp
movsb
jno
xchg
arpl
into
add
jbe
dec
jnp
jae
sahf
fcos
mov
iret
sar
add
push
xchg
lahf
outsl
stos
movsl
arpl
aam
and
or
andl
out
push
push
shll
xchg
pushf
lods
sbb
sbb
xor
push
lods
mov
lods
pop
cmp
pop
into
push
daa
out
ficomps
pop
cli
jmp
faddl
dec
adc
push
mov
popf
mov
or
aad
jecxz
out
sahf
mov
sub
testl
shrl
cmp
xchg
fwait
dec
add
pushl
xchg
or
mov
pushl
xchg
shrb
mov
dec
pop
mov
sbb
mov
fwait
stos
xchg
add
imul
adc
decl
scas
add
cmpsb
mov
je
xlat
dec
imul
lret
enter
push
shlb
sbb
jnp
mov
cmc
sbb
lret
jo
loopne
sub
call
leave
pop
icebp
das
pop
imul
fcmove
cld
pause
push
repnz
sub
cmp
mov
pushf
sub
icebp
pop
test
test
adc
int
jp
shrb
push
and
popa
dec
arpl
add
repnz
jae
repnz
nop
sti
mov
sbb
shll
ds
sub
into
insb
adc
adc
popa
xor
das
cli
incl
adc
insl
adc
push
rorl
sub
pop
cmovs
mov
dec
mov
es
and
aas
in
xor
push
or
pop
cli
add
enter
jb
jg
adc
jmp
call
icebp
sbb
cmp
jp
mov
xchg
dec
stc
decl
and
pop
lcall
inc
andl
sub
popa
sar
and
inc
sub
call
lret
movb
mov
out
loopw
push
pop
test
clc
xchg
rorl
arpl
cld
dec
orb
inc
mov
lcall
in
popa
jge
xchg
dec
xor
dec
pushf
repnz
mov
pop
inc
ret
fidivs
addr16
pop
test
xchg
pushf
dec
xchg
pop
inc
jns
dec
aam
dec
cli
cmp
xchg
in
rcr
mov
loopne
incl
insl
pop
es
pop
stos
dec
pushf
mov
dec
mov
inc
lahf
hlt
jnp
lea
cld
jmp
cmp
pushf
push
pusha
cmpsl
cmp
and
rolb
in
dec
nop
adc
cmp
or
cwtl
xor
sbb
pop
int3
stc
inc
lcall
dec
mov
jecxz
std
orb
sti
aam
adc
ljmp
jl
fimuls
push
sti
push
jl
imulb
push
ret
sub
test
decl
pushl
pushf
xchg
nop
or
pop
nop
int
out
jl
jg
mov
add
arpl
int
cmp
or
jge
popf
mov
fcomip
ljmp
adc
xor
shrb
repz
sub
or
xchg
mov
in
inc
decl
jae
subl
sub
mov
inc
mov
ret
jg
xchg
xor
insb
test
xchg
or
xlat
mov
shl
insl
adc
lcall
jb
in
add
or
inc
daa
cmp
sahf
repz
shlb
inc
divb
fadds
mov
shlb
cld
mov
add
hlt
or
sbb
roll
push
cmp
xchg
or
xor
movsl
pop
mov
ja
cld
mov
cmp
dec
and
lds
out
ret
xchg
xchg
decl
cld
flds
mov
add
lods
or
cmp
inc
jmp
lahf
or
inc
shll
and
jp
and
in
ss
pushf
mov
loop
movsb
inc
adc
fcmovb
sub
les
incl
in
cmp
pop
adc
mov
jbe
in
cmc
mov
out
mov
mov
pop
pop
cmp
and
cltd
dec
push
mov
and
or
dec
decl
mov
iret
lcall
mov
push
push
sub
pop
jb
add
dec
lock
cli
decl
add
add
jns
lock
or
inc
int3
push
out
insb
inc
jne
bound
mov
mov
cwtl
data16
xor
xor
xchg
jne
int
ss
jnp
or
int3
aas
mov
pop
mov
mov
sub
xchg
push
ja
xor
sub
sbb
sbb
cwtl
adc
lods
icebp
loopne
mov
arpl
mov
ja
sub
insl
add
lock
or
lods
or
add
and
std
sbb
sti
aaa
inc
xchg
mov
adc
das
stos
rol
stc
sub
call
and
pop
cmp
loopne
fs
std
mov
cmc
cmp
shl
out
sbb
mov
lock
xchg
je
mov
xchg
scas
test
fisttpl
jb
mov
ds
test
jb
repnz
imul
test
subb
call
pushl
or
add
mov
std
in
icebp
push
jg
sbb
cs
rorb
cmp
popf
and
movsl
dec
xor
dec
jmp
sbb
mov
outsb
jge
out
cmpsl
test
dec
lds
dec
xchg
lods
xchg
pop
dec
pushl
fwait
scas
mov
mov
mov
loop
mov
push
xchg
and
clc
call
adc
mov
xor
leave
pop
add
sbb
decl
adc
mov
lahf
cmp
sar
sub
push
repz
mov
or
incl
cld
sub
outsl
testb
push
testl
cmp
xchg
sbb
jge
sbb
pop
mov
mov
and
outsb
data16
jno
pop
repnz
and
pop
jmp
orb
xchg
mov
cmp
andl
push
mov
adc
sbb
jmp
or
insb
mov
cmp
adc
popf
mov
stc
into
fimull
jmp
xchg
cmp
scas
lcall
mov
fidivrl
lds
cmc
dec
push
call
inc
push
sub
call
int
cmp
mov
push
hlt
xchg
xor
outsb
je
pop
leave
insl
stos
movsb
pop
cli
push
jmp
cld
adc
xchg
jle
mov
inc
fcmovbe
scas
sbb
sub
test
cld
mov
lcall
add
loop
loope
ret
call
lea
xchg
dec
inc
imul
add
pushl
push
dec
imulb
inc
and
xlat
xchg
cmp
ja
push
or
andl
rorl
inc
in
lods
pushl
in
fisubl
sub
arpl
jg
negl
inc
adcb
jle
pop
call
stos
jns
imul
daa
lret
inc
pop
insb
ret
push
pusha
push
sbb
cwtl
adc
mov
out
lock
pop
jp
fbld
mov
jmp
iret
dec
aad
in
aas
sub
pop
sbb
fnstenv
filds
dec
negb
iret
movsl
ja
jge
jmp
mov
mov
mov
mov
fdivs
in
mov
sbb
add
decl
push
call
cmp
outsb
xlat
pop
dec
clc
push
call
xchg
sbb
fisttps
movsb
bound
mov
mov
jecxz
fistl
mov
add
cs
sbb
incl
inc
out
outsb
push
lret
out
and
dec
pop
dec
imul
mov
xlat
ljmp
shll
xchg
scas
shrb
or
pop
stc
sub
sub
add
cld
ljmp
and
inc
mov
ss
and
mov
xchg
jmp
aaa
and
and
scas
push
icebp
mov
push
cmc
push
sbb
outsb
dec
clc
dec
aam
stc
cmpsl
mov
add
dec
jns
fnop
scas
call
xor
sub
mov
cmpb
push
jecxz
mull
call
flds
lods
xor
clc
rcr
add
sahf
negl
popa
xor
repnz
push
xor
sub
fsubs
ljmp
ret
insl
sbbl
ret
out
push
mov
adc
push
cmpsb
cmpl
mov
jmp
das
aad
rep
roll
loope
int3
cmp
cwtl
cwtl
cmp
call
call
and
icebp
mov
pop
or
scas
repz
rorb
aam
clc
pushl
leave
loop
repz
push
insb
or
lea
and
imul
das
push
imul
push
sbb
jbe
adc
andb
call
xor
xchg
xchg
ret
or
cmpl
cwtl
cli
movb
out
inc
xchg
mov
jmp
push
or
and
jge
mov
pusha
pusha
ret
pusha
jne
jmp
mov
mov
inc
mov
cs
enter
push
jg
lcall
or
cmp
pusha
inc
ret
pop
cli
aaa
fists
jge
loope
int
stc
stos
call
pushl
insl
ljmp
xchg
imulb
mov
enter
cmp
inc
fs
sbb
in
test
cmpsl
inc
pop
fcompl
andl
jno
pop
xor
and
push
and
pushl
out
dec
movsb
daa
into
pop
pop
mov
in
mov
sbb
sub
ljmp
sbbl
repnz
aad
repnz
jmp
inc
mov
jo
push
das
clc
incl
pop
in
dec
pop
xlat
sub
mov
push
insl
sbb
adc
imul
push
or
dec
mov
jmp
subl
je
rcrl
lods
cmpsb
dec
test
bswap
push
mov
mov
add
mov
lcall
shlb
sbbl
adc
add
adc
sub
aaa
ljmp
decl
lods
adc
jmp
int3
lret
push
fisubrl
mov
xchg
call
negl
cwtl
insb
jbe
lret
shll
add
incl
jl
push
in
pushf
icebp
leave
fwait
xor
les
or
sbb
insb
sbb
lock
cld
jmp
jg
lods
xlat
cmp
incl
into
stc
cmpsb
inc
fbld
orb
push
pop
cwtl
mov
xor
and
stos
movsw
jnp
cmc
adcb
call
adc
fucomp
add
and
lret
dec
xchg
and
outsl
pusha
lock
jg
pop
hlt
pop
cmc
insl
lock
out
push
xor
lcall
leave
cmp
xor
shlb
outsb
stos
cld
lcall
mov
or
rorb
push
add
js
js,pt
mov
ljmp
fisubrl
out
mov
cmp
sbb
pop
jp
repz
sub
ljmp
push
lods
loopne
hlt
mov
jecxz
lahf
mov
call
std
cmp
mov
cli
pop
data16
es
adc
and
jmp
jne
movsb
mov
inc
std
jecxz
mov
jecxz
mov
cmp
lock
test
and
scas
push
sbbl
into
out
rclb
jno
gs
add
fnstcw
into
xchg
inc
xchg
xor
mov
mov
mov
shrl
test
mov
out
pop
orb
aam
xchg
sbb
cmp
sti
mov
testb
sub
mov
imul
leave
sbb
into
sub
lods
cs
xchg
decl
aas
adc
aaa
sbb
mov
decl
es
sub
xchg
and
or
xor
inc
rcl
fcomip
inc
xor
nop
das
popa
inc
pop
sbb
push
jnp
jne
mov
cltd
roll
call
sbbb
pop
stc
and
pop
mov
pop
pusha
or
imul
adc
hlt
int
xor
call
stos
int
in
pop
xor
mov
pop
cld
mov
les
scas
ss
vmovq
jb
cmc
adc
filds
fbld
popa
fbld
sbb
add
dec
jmp
sbbl
push
dec
movl
xor
push
andb
call
and
lock
shll
xor
push
sub
js
sub
mov
test
xchg
pop
icebp
aam
sbb
push
xor
lret
mov
decl
cmp
int3
adcl
xor
mov
jnp
lcall
mov
call
std
imul
adc
push
ss
ss
and
insb
frstor
aaa
xor
lods
jecxz
decl
fisubrl
sub
test
insb
jnp
mov
pop
in
push
fidivrl
decl
or
sbb
pushf
rol
cltd
shlb
or
and
decb
mov
mov
mov
popf
cmp
pop
cmp
adc
jmp
cwtl
pusha
ljmp
hlt
sub
mov
in
jns
push
dec
push
jns
test
rorb
pop
in
dec
mov
inc
add
hlt
ljmp
movsb
mov
cli
or
push
mov
sbb
pushl
sub
cmp
cs
cmpsb
xchg
rorl
out
cli
push
xorl
push
rcll
nop
jbe
leave
pop
mov
xlat
jg
add
icebp
mov
pop
fcomps
out
cli
sub
cmpsl
stos
add
lret
pop
mov
fldenv
mov
sbb
fcmovbe
daa
xchg
fcomip
cmc
and
mov
push
xchg
lahf
xor
cmp
and
out
clc
call
sub
cmpl
lcall
mov
std
decl
pop
cmc
or
popf
and
test
aam
push
adcb
push
idiv
pushl
push
jle
pop
js
shlb
pop
sahf
pop
xor
dec
jns
shll
xor
imul
xchg
and
popf
cmp
pop
sub
add
push
scas
cmpsl
movsb
fimull
int
test
aad
int3
inc
mov
push
fcompl
mov
es
sub
inc
and
fistpll
jmp
lea
pop
jo
in
jnp
popf
or
aam
fcomps
mov
incl
push
cltd
xor
push
xchg
pop
inc
aaa
xchg
out
mov
dec
mov
push
test
pop
mov
int
sub
icebp
jle
mov
and
subl
dec
dec
dec
lret
or
mov
repnz
sbb
enter
fmul
xchg
and
dec
icebp
sarl
test
addr16
mov
pop
mov
pusha
or
xchg
stc
bound
mov
push
sbb
fcomip
mov
jae
dec
out
cmp
js
sub
incl
and
push
pop
mov
pushf
xchg
hlt
sbb
ret
lea
pushl
inc
mov
rorl
xchg
xlat
test
imulb
lods
pop
iret
js
cwtl
test
ljmp
cwtl
out
mov
ret
loop
adc
stos
pop
ds
loopne
lcall
or
cmpsl
hlt
inc
adc
hlt
sub
push
cli
loopne
mov
sbb
add
inc
push
pop
out
int3
cli
xadd
inc
xchg
dec
in
inc
or
fwait
ja
xchg
jb
mov
sbb
int
push
cwtl
xchg
mov
call
and
xor
popf
stos
mov
bound
in
mov
stos
inc
stos
mov
loopne
inc
pop
dec
test
es
pop
inc
xor
iret
and
fwait
and
bound
add
push
push
fsubl
lock
mov
or
lret
mov
pusha
fimuls
ficoml
push
xchg
test
jmp
dec
jae
pushf
add
mov
dec
repnz
add
notb
adc
es
push
lret
push
sub
sbb
stos
push
mov
dec
pop
mov
and
xchg
daa
xchg
daa
arpl
in
mov
xlat
mov
mov
shr
fxch
sbb
add
push
in
mov
jecxz
fcmovb
pushl
popf
jnp
sub
aam
adc
daa
mov
lods
push
inc
ficoms
or
lods
fsubr
xor
cmp
repnz
lea
add
jbe
cmp
push
xchg
jecxz
in
pop
call
call
pop
divl
hlt
fsubr
pop
ss
imul
lea
popa
dec
xor
ds
in
jp
xorb
incl
gs
and
inc
mov
xor
cmc
das
int3
add
fldenv
push
mov
cmp
ljmp
mov
ljmp
fidivl
incl
push
test
dec
push
lds
xor
xchg
fs
push
ljmp
call
mov
scas
les
in
fistps
jg
call
lods
adc
int3
mov
mov
popa
ret
xchg
mov
cmpsb
outsl
xor
scas
pop
mov
xchg
movsl
pop
rcr
fcomps
gs
mov
fwait
in
xorl
sbb
loop
bsf
popa
cmp
ljmp
sub
xchg
xorl
fstpl
pop
mov
incl
jle
push
mov
cltd
movl
mov
adcl
mov
cmpsb
jecxz
mov
mov
cvttps2pi
push
lret
and
clc
xor
outsl
lcall
or
xor
push
xchg
call
xor
dec
or
jmp
mov
in
in
jecxz
repz
ja
clc
xchg
pop
xchg
sbb
xchg
inc
jnp
lcall
push
mov
push
adc
aam
push
and
shrb
call
test
fcompl
sub
aam
adc
jae
mov
push
decl
pushl
mov
jo
sbb
ret
out
loopne
adc
mov
imul
mov
test
sub
cmpb
call
jne
fmuls
sub
pusha
iret
or
inc
and
dec
rol
dec
xchg
mov
dec
ret
call
stos
adc
jmp
cmp
dec
jo
pushf
mov
data16
push
int3
jg
mov
or
arpl
cli
cld
pop
and
test
xchg
pop
jp
add
cli
or
incl
out
pop
mov
xchg
sub
ret
push
sbb
mov
mov
call
jns
mov
aam
jmp
sub
stos
cmp
pop
pushl
fs
mov
enter
xchg
imul
sub
in
cmp
shll
jmp
into
jne
sub
xlat
xchg
fnstenv
inc
mov
cmp
sub
xchg
inc
pop
ljmp
lcall
jns
pop
adc
mov
jnp
popa
or
pushl
or
push
xchg
xchg
push
push
and
out
mov
pop
inc
stos
test
or
decl
push
fadd
imul
inc
clc
add
enter
test
shrb
incl
cmpsb
loopne
xchg
xchg
clc
mov
sub
popa
mov
xor
movsl
jb
xchg
mov
dec
js
xchg
lret
and
xchg
jecxz
xor
xlat
xor
cmp
arpl
aad
sarl
xchg
iret
mov
adc
mov
in
fs
fiaddl
pop
jle
adc
jmp
mov
shlb
mov
sbb
fs
pop
mov
lock
test
jg
and
mov
jne
and
outsl
mov
ret
cmp
ds
aaa
rorb
push
lcall
push
ficompl
cmp
and
clc
jp
cltd
and
in
cwtl
cmp
mov
in
mov
lds
jmp
mov
mov
hlt
add
int
pop
lods
cmp
notl
xor
add
in
and
sub
sbb
popf
lods
je
loopne
repz
clc
nop
xchg
sbb
ds
fcomip
sub
rorb
decl
test
js
or
loopne
mov
adc
mov
inc
and
and
cld
pushl
aaa
rorb
lods
inc
and
cmp
shrb
call
fcmovnbe
cmp
addb
sub
or
mov
scas
loope
in
mov
call
js
sub
test
jb
and
mov
inc
sub
pop
js
movsb
inc
pop
mov
jns
movsl
js
test
inc
popf
mov
pop
test
mov
movsl
stos
pop
sbb
fcompl
addr16
add
data16
mulb
stc
adc
mov
jl
call
pusha
xlat
push
sbb
lcall
inc
notl
das
mov
lcall
js
add
fs
add
inc
inc
sti
adc
ds
in
hlt
test
mov
test
push
pusha
xor
jne
aad
sub
lock
cmpb
mov
decl
jmp
xor
mov
jno
mov
sub
dec
loop
pop
data16
incl
in
gs
int
insl
shlb
cmp
add
xchg
std
pushl
cmpsb
mov
out
les
insl
cmp
sbb
stos
dec
add
mov
push
repnz
in
mov
dec
shll
fwait
jmp
xchg
in
mov
xchg
sahf
repnz
lret
out
nop
cmp
loopne
push
sbb
cmp
loopne
or
mov
inc
sub
stc
dec
gs
cmp
shl
mov
mov
fsub
pop
ret
sub
push
test
sbb
dec
cmp
decl
push
xchg
arpl
out
sub
shl
mov
lds
add
push
decl
add
xchg
sub
and
mov
cmpl
lcall
repnz
dec
xchg
lock
xor
cmp
xchg
repnz
or
incl
pop
push
mov
test
cli
mov
ljmp
int
call
add
popf
ja
movsl
mov
stc
push
movsb
je
push
aas
sub
lea
shlb
cmp
idiv
adc
sahf
loop
aas
sahf
dec
pop
mov
dec
xor
movntps
into
and
ud0
push
jl
cmpl
and
aam
mov
mov
js
pop
lds
in
std
sub
fs
addr16
cs
mov
mov
sbb
push
pop
pop
cmc
xor
xor
ja
mov
cld
push
push
aas
data16
sarl
shl
or
xchg
shll
fmul
loopne
or
pop
sbb
sub
or
fildll
or
xorl
je
cmp
xor
xor
popa
xor
addr16
adc
icebp
incl
lock
xchg
cmp
loopne
adc
cmp
xchg
mov
bound
inc
sbb
add
inc
popf
mov
aaa
cmpsb
cmp
jecxz
cmp
mov
scas
repnz
jb
cmp
pop
in
mov
sub
lea
call
das
xor
ror
xor
xchg
insb
gs
sbb
sbb
js
call
cld
inc
aas
andl
sahf
popa
lock
fbstp
clc
cmp
cmp
dec
popa
fucomip
cmp
mov
cmp
loop
push
iret
scas
and
or
fs
mov
inc
or
lock
pusha
sub
cmp
cmpl
orl
lods
data16
loopne
mov
outsl
adc
xor
pusha
adc
push
dec
xor
ret
inc
sub
adc
insb
mov
push
call
aas
sbb
add
or
xor
and
mov
pop
sbbl
jp
or
addr16
push
fbld
pop
ret
xchg
sbb
ja
incl
pop
rorl
cmp
call
mov
aaa
sbb
pushl
outsb
jns
cmp
and
js
push
jmp
mov
outsb
out
aaa
in
lds
push
lret
or
jl
mov
lods
lret
outsl
jg
sub
gs
ljmp
inc
ljmp
add
sti
sbb
mov
ja
jge
mov
loop
fldenv
ret
stos
jmp
repnz
out
or
rcrl
jg
jbe
cli
pop
mov
xchg
jg
mov
xor
mov
scas
loop
mov
js
in
testb
push
adc
lds
int3
flds
mov
js
lcall
fiadds
jg
ja
jg
shrb
or
incl
add
sbb
fbstp
int3
ds
decl
pop
sahf
mov
jl
out
in
icebp
cli
sub
cli
das
arpl
lcall
decl
mov
cmp
out
in
into
aad
aaa
or
jle
fcompl
inc
jecxz
das
decl
das
rclb
jb
mov
jmp
in
sbbb
xor
push
xchg
lods
pop
mov
repnz
sub
cld
icebp
push
js
mov
decl
fptan
ret
ja
jnp
xchg
clc
sub
mov
mov
test
enter
inc
pop
pop
jb
mov
and
scas
decl
jp
sbb
scas
arpl
or
mov
js
std
jg
cmp
pusha
sub
xchg
and
loop
add
hlt
pop
jo
jg
pop
inc
and
fdivrl
jecxz
adc
sub
out
jno
fistl
lahf
lahf
mov
xchg
and
fistps
out
aad
jmp
ljmp
das
das
ja
mov
lcall
dec
xchg
call
cld
scas
or
pusha
stc
cmp
dec
ja
aas
jnp
push
in
clc
sub
inc
cmp
std
popf
xor
mov
mov
jecxz
ljmp
js
jle
pop
xchg
mov
xchg
hlt
push
mov
out
popa
aas
std
pop
aas
out
orl
jbe
xorl
mov
enter
cld
jmp
pop
mov
inc
jl
loopne
mov
mov
or
inc
ret
mov
push
cmp
idivl
adc
lcall
sub
jecxz
pop
push
call
adc
mov
pop
in
mov
push
sbb
popa
js
in
sbb
imul
xor
lods
into
daa
push
rcrl
decl
leave
mov
cmp
lea
lahf
add
call
pushl
stc
cli
imul
jmp
jnp
outsb
fdivp
and
lret
jne
fisttps
out
rcll
loop
call
imul
ljmp
call
ret
sbb
ljmp
mov
paddd
pop
shr
lock
out
mov
icebp
pushl
outsl
jp
dec
jecxz
push
lods
cmp
pop
add
enter
fcomip
pushl
pop
cmpsb
bound
loop
cmp
cld
xchg
lea
or
xor
jns
and
iret
leave
pop
and
jl
int
fdivrl
jns
loop
lcall
fistpl
bswap
aad
out
popf
lods
xchg
dec
mov
sub
pushf
pushl
std
sbb
mov
sbb
inc
pop
mov
sbb
mov
stos
pop
cmp
and
jo
push
orl
mov
test
ror
lcall
shlb
stc
imul
sub
jmp
daa
jbe
sbb
pop
sbb
loopne
test
mov
bound
stc
sbb
cld
int
mov
fnstcw
sub
stos
adc
scas
xlat
dec
pop
adc
cs
in
stos
mov
negl
adc
mul
repz
ljmp
push
jecxz
or
mov
pop
xorb
sbb
push
add
mov
cmp
xchg
shlb
popf
mov
js
mov
scas
scas
in
adc
pushl
rcl
adc
testl
or
jnp
iret
jnp
out
mov
aas
xchg
or
inc
scas
scas
shlb
mov
mov
xchg
fidivl
xor
and
dec
outsl
push
jp
popa
jbe
or
shll
ret
pop
daa
testb
cmp
stos
mov
test
and
or
cmpsb
leave
enter
jg
cmp
push
sbb
iret
loopne
push
das
aam
sahf
fwait
aaa
aas
cli
hlt
addr16
jne
sub
clc
jmp
cld
call
xchg
sub
stos
lret
and
fiadds
repnz
mov
adc
xor
jno
fmuls
dec
mov
mov
mov
cmp
mov
ljmp
rcll
jg
mov
rcrl
adc
cmp
popa
aam
test
pop
sbb
lret
xor
mov
mov
push
and
lret
sub
test
mov
out
icebp
call
jecxz
xchg
xchg
xchg
outsl
stos
addb
jg
clc
dec
fidivs
push
xor
leave
rcll
pop
in
dec
sbb
cmpsl
out
mov
pop
stos
push
hlt
lret
jg
push
fsubrs
add
ret
jg
std
mov
cmp
test
push
in
rclb
int
mov
inc
movsl
call
scas
sub
insl
in
outsb
fildll
cmc
cli
mov
sqrtps
lret
pop
in
cmp
call
popf
iret
out
mov
shlb
mov
or
out
shrl
xchg
int3
rol
popa
and
sub
clc
dec
xchg
mov
and
insl
cmovg
in
push
jp
leave
sub
fbstp
fmull
xchg
mov
cmp
xchg
sahf
jbe
add
jecxz
add
incl
out
xlat
into
xchg
fnstsw
incl
mov
and
stos
movsb
xchg
repnz
jle
xchg
cmpsb
cli
push
popf
sbb
movsb
sti
add
mov
sbb
mov
stos
push
les
xchg
jp
mov
and
mov
push
mov
popf
mov
fcomip
push
aad
in
lcall
cmp
xor
aam
push
ja
les
jb
sahf
andb
call
rcrb
fs
sub
jecxz
push
mov
and
adc
imul
ss
rcrb
rcrl
loop
lret
push
xchg
enter
call
rcrb
in
sbb
imul
sbb
nop
inc
lds
push
mov
xchg
in
xchg
lods
xchg
lret
daa
inc
push
loopne
aas
or
jb
pop
stos
jmp
xor
xchg
ja
add
push
hlt
and
xchg
loopne
ss
jge
jae
imul
inc
ss
cmp
int
pop
xor
pop
mov
test
jmp
cmp
lcall
in
push
push
and
ds
into
cmpl
xor
sbb
cmovno
flds
out
fstps
mov
das
pusha
sbb
mov
jl
sub
pop
mov
adc
mov
adc
adc
jmp
cvtdq2ps
mov
sub
pop
addl
inc
ja
shlb
cli
cmp
int3
cmp
lret
fucomp
lret
or
or
imul
xchg
icebp
jne
jecxz
jge
lret
decl
xor
cmp
js
ficoms
jp
jne
out
push
shrb
mov
lret
decl
xchg
repnz
jbe
xor
out
add
iret
jo
mov
iret
pop
mov
rorl
and
jmp
clc
jp
scas
pop
xlat
jg
ljmp
orb
std
daa
out
ja
or
jle
fmulp
inc
push
sbb
push
push
inc
lret
cmp
dec
mov
stos
ret
mov
mov
negb
mov
or
xchg
addr16
out
mov
ret
jg
xchg
sbb
pop
in
sub
sub
xchg
mov
adc
jo
stos
jmp
call
clc
call
into
sub
movsl
test
inc
jmp
std
incl
mov
inc
jecxz
roll
sub
fucomip
sbb
int
scas
mov
mov
push
hlt
add
push
test
scas
lods
int3
cmp
mov
push
cmp
or
out
and
in
mov
jmp
sub
add
xchg
repnz
dec
call
incl
cld
repnz
ja
in
jns
sbb
fsub
mov
lret
push
loop
out
leave
jle
sbb
jmp
push
jb
inc
repnz
loop
lcall
sub
sar
loop
mov
mov
into
jmp
pop
out
fisubrl
pop
xor
dec
push
psubd
or
mov
loope
jnp
testb
and
jle
test
stos
loope
jae
cmp
adc
leave
jmp
push
orl
push
pop
jnp
adc
dec
iret
loope
es
add
cwtl
dec
adc
inc
incb
add
lret
jb
fwait
adc
fdivrs
adc
rcll
cmp
mov
pop
call
dec
roll
idivl
jl
test
mov
stos
js
lods
jg
inc
les
fistpll
jno
jge
jg
data16
scas
lret
cmp
lds
mov
icebp
mov
outsl
adc
add
sbb
out
inc
mov
pop
and
and
pushf
nop
lds
push
clc
idivb
test
call
loope
jp
call
inc
nop
cmp
pushl
sahf
cmp
or
pop
stc
je
or
ret
dec
jge
dec
inc
xor
or
jmp
adc
cwtl
cmp
daa
xor
das
sub
popa
inc
ret
filds
aas
lock
sbb
notl
xor
mov
fiadds
pushl
scas
add
iret
xchg
rcrl
mov
outsb
test
pushf
push
imul
dec
out
xor
nop
pusha
repz
fnstcw
insb
fsubl
out
and
jno
add
dec
test
aaa
or
pop
adc
lock
jl
orb
js
pop
icebp
cmpsl
jl
add
mov
and
and
imul
mov
sbb
sti
pop
dec
add
icebp
sti
test
pop
rorb
cld
or
sub
cld
scas
imul
out
xchg
scas
xchg
push
sar
mov
mov
push
arpl
loope
xchg
imul
mov
sub
in
inc
cmpsl
xor
fisubrs
mov
mov
fwait
aad
jno
popf
sbb
lcall
mov
inc
lahf
mov
shrl
out
aas
mov
mov
dec
clc
jmp
data16
xchg
mov
push
test
leave
mov
cli
mov
mov
push
les
fcoml
jge
pushl
movsb
cmp
or
faddl
filds
or
jbe
pop
insl
jbe
jmp
dec
mov
mov
and
jmp
outsl
in
fisubrs
fbld
imul
loopne
pop
outsl
bound
mov
ja
lcall
dec
sub
fsubrp
subl
js
roll
je
jl
cld
rcll
xchg
xlat
add
push
outsb
icebp
and
mov
lret
or
incb
xchg
std
jmp
and
or
jp
mov
or
shlb
stos
sub
or
cmp
jg
or
cmpsb
scas
lock
cmp
fisttps
push
dec
pop
mov
jecxz
loopne
jecxz
inc
loopne
sbb
loopne
push
adc
or
repz
jmp
outsl
ja
add
call
mov
push
dec
aad
enter
xor
pop
pop
nop
mov
clc
sbb
add
sbb
lcall
cmpsb
push
jb
neg
cltd
cmpsb
pop
out
pop
mov
repnz
aam
jne
fcomip
sbb
jb
xchg
mov
cli
ret
jmp
mov
aad
jecxz
shll
xor
xchg
add
push
dec
das
mov
dec
cltd
add
mov
inc
jmp
lcall
mov
fdivr
pop
xchg
xchg
fcomp
mov
add
insl
jmp
sub
in
sub
in
xchg
push
lods
movsl
adc
stos
mov
nop
scas
adc
push
out
decl
dec
pop
sbb
jp
jae
xchg
or
cli
mov
jb
xchg
repz
push
mov
mov
sub
decl
sbb
outsb
fisubs
cmp
outsl
mov
mov
dec
ljmp
je
hlt
lahf
cmpsl
pop
decl
popf
pop
jle
sbb
enter
rorl
lock
adc
aam
fsubrs
cld
jg
ljmp
out
in
cmp
sbb
cli
daa
and
call
sub
jbe
cmp
lcall
and
pop
aas
movsl
mov
fstpt
and
js
add
into
fcomps
pop
sub
dec
xor
adcb
push
outsl
dec
aaa
adc
or
sbb
fdivrl
jmp
sbb
mov
inc
in
in
ljmp
test
sub
lcall
insb
flds
sbb
ljmp
jp
incl
gs
and
clc
rcpps
adc
aam
subl
sbb
jg
mov
lcall
mov
jmp
jmp
punpckhbw
add
ret
cmc
inc
cwtl
mov
lret
addr16
xor
push
add
push
xor
movsl
int3
jle
cmpsb
add
out
fsubrs
xchg
test
xor
iret
mov
lock
rcll
imul
mov
xchg
jecxz
and
dec
pop
lcall
std
xchg
std
ljmp
lock
ljmp
mov
xchg
xor
dec
mov
call
mov
adc
decb
fs
cmpb
dec
js
mov
add
xor
in
push
jns
and
or
cld
mov
inc
pushl
adc
xchg
inc
fildl
mov
sbb
or
inc
pop
and
xor
adc
or
fistps
jae
xchg
adc
or
unpcklps
adc
dec
mov
xchg
incl
cmpsb
mov
cmp
lods
int3
pop
pop
std
mov
popf
xchg
xchg
movl
add
xchg
and
out
jno
cmpsb
push
ret
lods
aaa
add
or
jmp
or
adc
xlat
xor
nop
xor
xor
scas
pop
pop
loope
dec
xchg
sub
decl
into
ss
jns
icebp
or
mov
out
cli
jge
or
fisubrl
adc
xchg
sub
or
test
shll
adc
pushf
or
push
mov
lea
movsl
mov
addr16
insb
add
ljmp
fidivl
test
daa
inc
loop
dec
stc
inc
mov
xchg
pushf
test
out
out
sub
sbb
push
data16
in
jns
and
insb
clc
push
push
lods
or
xor
popa
and
sbb
les
cmp
cmp
dec
pop
jne
in
xchg
or
push
and
ret
sub
sub
das
or
inc
mov
out
jg
mov
movsb
cmc
js
xorl
and
push
jg
ds
ljmp
stc
stc
andb
inc
icebp
mov
shrl
shll
cmpsl
in
ljmp
pop
movsl
scas
scas
adcl
decb
int3
inc
gs
dec
xchg
jmp
ljmp
lock
pop
and
mov
out
fidivs
bound
xchg
iret
stos
decl
pop
div
mov
outsb
dec
fcomps
mov
adc
pushf
in
jae
out
arpl
int
dec
mov
adc
jae
push
pusha
pop
pop
pop
fsubrl
test
adc
jmp
jns
dec
push
add
fdivrp
lret
fildll
lea
jge
in
xorb
jg
push
lret
pop
and
mov
push
or
xor
dec
xor
rol
jecxz
pop
test
mov
out
xor
sbb
xchg
jae
aad
cmp
adc
pop
ds
dec
xor
sbb
cld
fsubrl
sub
sbb
lock
loop
or
add
pop
sub
push
push
call
psrld
test
adc
mov
aad
and
ret
ficomps
cmp
out
decl
mov
dec
dec
sub
in
inc
jp
nop
fidivs
ljmp
push
aad
push
fs
xor
jp
jno
repz
je
mov
sub
fisttpl
incl
fstpl
mov
stc
mov
fucom
aaa
jb
cltd
clc
test
xor
cli
decl
add
test
adc
jmp
cmp
stc
push
fbld
outsl
mov
mov
cmp
mov
clc
inc
movsb
dec
frstor
xlat
ja
and
xor
addr16
fstl
gs
call
sub
insl
aaa
ss
cmpsl
cmp
inc
lret
sub
ret
cmp
addr16
jae
insl
jg
cmp
and
adc
or
mov
mov
das
cmp
popf
rcl
cld
leave
dec
test
jmp
xor
mov
mov
push
mov
sbb
test
loope
out
cmp
addl
or
test
sbb
mov
fscale
mov
jmp
push
jecxz
sbbl
outsl
push
lcall
ja
jne
out
inc
iret
sub
mov
xor
lock
enter
mov
add
dec
mov
scas
sub
jnp
iret
test
jg
pop
aaa
out
mov
xchg
gs
lret
pop
lods
push
dec
jmp
stos
sahf
pop
xchg
jmp
jecxz
incl
cwtl
jecxz
mov
jae
pop
jne
imul
xor
fldt
pop
cwtl
add
loope
xchg
fwait
mov
in
insl
mov
ret
repz
mov
das
inc
cs
mov
mov
in
test
dec
outsl
mov
push
lods
mov
call
mov
and
fisubrl
popa
loope
jmp
imul
fs
icebp
movsb
mov
test
cmp
cmp
push
mov
sub
jg
insl
xor
ja
or
lcall
mov
push
pushl
adc
xchg
sbb
arpl
stos
sahf
sub
mov
enter
mov
mov
test
fimuls
pop
fbstp
mov
outsl
mov
stc
xchg
mov
outsb
jnp
mov
fdivl
lcall
sub
aas
mov
push
out
jle
cltd
out
pop
add
jmp
pushl
fldt
mov
mov
inc
jae
inc
xchg
in
xchg
pushf
mov
es
stos
push
inc
loop
cli
fwait
push
lahf
shlb
ljmp
sub
out
add
mov
cmp
repz
jge
xor
jne
or
dec
cli
and
scas
pop
test
lcall
insb
ljmp
out
ret
jge
bound
adc
xchg
das
xor
fcomip
or
fcomip
leave
es
ljmp
mov
sahf
mov
incl
dec
and
mov
insl
movsb
fisubl
mov
adc
shlb
ja
ret
lea
jle
fwait
dec
xor
pop
mov
rolb
pop
faddl
xchg
sar
jl
incl
inc
xchg
std
fiaddl
sbb
mov
aam
mov
inc
add
sub
dec
or
mov
sbb
jns
adc
aas
or
js
in
cmp
jl
mov
hlt
fldt
jbe
add
jo
dec
icebp
push
lds
stos
divl
mov
or
loope
loope
stos
insl
inc
cs
push
das
fs
cld
xchg
adc
xor
cli
inc
shlb
int3
mov
or
add
cmp
cmovg
inc
aad
jle
push
fisttpll
popf
loope
mov
decl
mov
pop
cld
jnp
pop
mov
mov
mov
jns
adc
cmp
mov
fcmovnb
xchg
shr
cmp
jecxz
jmp
sahf
out
js
inc
pop
push
addl
insb
xchg
add
xchg
inc
cmp
inc
cmp
mov
xlat
rclb
iret
imul
outsl
and
adc
cmpsb
pop
pop
jmp
orl
dec
loope
shlb
fisttps
fiaddl
xor
insl
xchg
incb
jp
call
cld
pop
cltd
fidivrl
push
clc
fisttpl
sub
or
nop
push
call
insb
bound
je
inc
stc
push
into
pop
js
add
inc
cmpsl
pop
cmp
lret
dec
xor
movsl
lret
out
jmp
push
stos
mov
out
push
add
lcall
push
jmp
sub
imul
ret
cmpsb
jg
xor
jle
jne
pop
addr16
mov
cmp
jl
std
jg
mov
cmc
pushl
fs
hlt
in
mov
enter
jmp
int3
mov
cmp
fimuls
scas
jno
dec
push
dec
add
out
pusha
inc
shll
je
jp
or
scas
arpl
leave
daa
icebp
mov
je
add
mov
inc
nop
mov
shrb
push
gs
mov
imul
test
jp
fwait
cmp
xor
call
pop
rcrl
add
dec
hlt
popf
or
mulb
rcr
sub
jg
jmp
sbb
push
dec
or
pop
cmpsl
pop
sub
sbb
ja
add
addb
xlat
mov
mov
sar
jnp
cmpsb
mov
sub
mov
lcall
repz
xchg
add
jmp
loopne
fists
cld
pop
sbb
mov
pop
clc
cmp
leave
cmc
loopne
inc
push
dec
pop
dec
dec
nop
test
xor
push
pusha
inc
cs
add
orb
ja
jae
outsb
enter
or
in
clc
adc
sti
push
jle
lahf
xor
shr
cld
scas
shrl
mov
xchg
mov
adc
inc
mov
cmc
mov
push
jl
ljmp
adc
xabort
shll
sub
or
les
in
fildl
ror
sbb
jo
int3
sub
and
fwait
mov
push
lret
lods
and
adc
mov
xchg
ret
aaa
cmpsb
mov
xor
and
imul
mov
or
push
mov
ljmp
jno
popf
dec
sub
ljmp
inc
lret
cli
mov
arpl
out
gs
ja
mov
jge
int3
fisubs
or
je
mov
sub
push
sub
jg
stc
rorb
jge
das
xchg
xchg
aad
xchg
xchg
fmull
sub
xchg
xchg
xchg
mov
lahf
pop
push
xor
fbstp
cli
out
push
inc
mov
ret
push
adcl
pop
pop
repnz
and
xorl
xor
mov
je
in
ffreep
mov
les
sbb
lcall
jae
ret
rcl
or
sbbb
xchg
fdivs
shl
push
std
out
lds
or
add
jg
insb
cmp
insl
addr16
adcl
pop
loopne
sti
outsb
imul
stc
pop
mov
xlat
and
inc
imul
jb
xchg
das
in
push
sbb
sbb
addr16
incl
pop
popa
jns
push
and
into
and
movsb
dec
popa
cmp
ljmp
clc
mov
mov
xchg
into
mov
mov
fistpl
mov
incl
inc
xchg
adc
gs
pop
hlt
adc
fmull
or
mov
push
imul
fistpll
ret
arpl
sbb
shl
mov
loopne
lcall
mov
popl
mov
mov
jl
lcall
hlt
mov
sbb
out
int3
mov
out
mov
bound
sbbl
call
pop
inc
les
pop
in
hlt
repz
or
and
scas
rcr
int3
or
pop
ljmp
cli
lcall
pop
jmp
xor
jg
sbb
in
xor
push
cs
pop
sbb
mov
and
incl
mov
ds
dec
sub
enter
test
push
ljmp
sbb
mov
lea
xchg
in
push
xor
fisubl
movsl
jecxz
decl
push
sub
negb
mov
jl
jge
pop
loopne
aam
push
cld
lcall
lods
or
std
push
ret
rorb
push
and
sarl
pop
sub
adc
xchg
pop
add
jg
out
popf
or
mov
push
fwait
ja
xlat
xchg
int
ljmp
incl
push
sbb
repnz
dec
popa
stc
and
fstpt
jmp
inc
sbb
lock
jg
fbstp
push
jbe
hlt
hlt
out
sbb
cmp
into
jne
ret
xlat
out
xor
jp
push
jg
xchg
cli
test
in
or
add
cmp
and
xor
mov
sub
icebp
jmp
je
cmp
mov
fcmovb
sbb
sbb
js
popa
mov
cmpb
add
cmpsl
pop
sub
aaa
inc
or
fs
cmp
mov
xor
lock
jp
icebp
sub
enter
jmp
enter
xlat
testl
scas
xchg
ljmp
push
out
sbbb
inc
mov
dec
popf
fisubrl
add
sar
clc
in
lds
ljmp
jg
test
inc
inc
mov
pushl
adc
outsl
sub
imul
xchg
mov
dec
rol
cli
enter
cmp
xchg
aad
mov
lret
dec
pushf
sbb
pushf
scas
insb
push
dec
pop
or
xchg
jns
decl
jns
cltd
bound
ds
mov
loope
movsb
mov
pop
mov
cmp
adc
ds
sub
pop
jecxz
arpl
xchg
out
sbb
iret
xor
into
and
pop
adc
fldt
imul
sbb
dec
push
es
or
cmp
xor
outsl
es
cmp
pop
jo
add
jne
in
lret
inc
cltd
test
mov
test
dec
sub
imul
arpl
daa
pusha
jg
out
fldl
xchg
jb
push
push
add
or
lods
mov
xor
push
push
insl
xchg
test
icebp
shl
shll
into
xchg
decl
inc
adc
movsl
int
insl
enter
fs
incl
lods
push
push
mov
ja
adc
mov
sub
sub
outsl
mov
sub
mov
sub
xchg
in
mov
cmpsl
cli
iret
push
std
lret
sahf
call
mov
lcall
jae
sub
lea
mov
movsl
add
add
pop
movsb
mov
sub
xor
std
push
cmp
sub
mov
or
lahf
mov
call
in
inc
jg
call
adc
aas
jmp
sub
jg
push
sbb
push
push
sub
mov
ret
lock
fwait
or
push
xor
add
sbb
cltd
sbb
push
inc
rcrb
cs
jno
jb
mov
ja
ja
repnz
adc
and
sub
or
mov
cmp
jae
mov
mov
out
cli
ljmp
idiv
in
jae
cmp
fidivs
mov
stos
xor
pusha
lods
xchg
mov
inc
mov
fcoml
int3
push
loope
clc
dec
xchg
xchg
pop
ja
iret
ja
in
cmpsb
sbb
jge
cmp
fwait
or
mov
cmp
call
sub
mov
and
add
fwait
xchg
dec
les
jl
jge
xchg
cs
std
aaa
test
mulb
sbb
and
and
js
daa
push
add
jl
icebp
or
loop,pn
and
mov
sti
mov
adc
inc
cs
das
push
repz
call
xchg
mov
mov
mov
int
inc
test
dec
or
sub
enter
in
aam
mov
jmp
mov
or
sbb
lcall
test
pop
sbb
adc
pop
adc
or
test
jns
out
xchg
add
incl
mov
sub
les
cmp
sub
lahf
inc
js
pop
sbb
icebp
fsubrl
dec
sbb
inc
mov
bound
les
es
adc
lret
jecxz
or
mov
cmpsl
xchg
scas
jle
jmp
hlt
jmp
inc
add
nop
out
shrb
das
lahf
pop
test
mov
sub
dec
orl
call
or
mov
cwtl
xor
mov
dec
push
or
adc
jge
rolb
ljmp
or
lods
add
les
cwtl
mov
push
mov
add
daa
jp
and
movsb
test
mov
incl
add
and
cmp
jbe
aaa
lods
pop
movsb
push
addr16
dec
inc
adc
dec
inc
xchg
imul
stos
or
call
or
bound
jb
add
shll
hlt
xchg
add
lock
insl
xchg
and
ja
push
mov
xor
sub
mov
adcb
sti
xchg
shl
adc
push
push
sbb
call
sti
jecxz
divb
jbe
outsl
sbb
sbb
jns
inc
sub
push
pushf
lahf
shlb
sarl
jmp
in
gs
push
jl
jmp
xor
lea
fsubs
out
pop
sbb
xor
decl
cmpsb
shll
lcall
into
addr16
xor
push
test
push
lret
and
pop
cs
adc
sub
dec
loope
andb
xor
dec
dec
pop
dec
out
push
lret
loopne
dec
xor
adc
inc
xchg
push
push
jge
fistpll
sbb
and
js
xchg
test
sub
jmp
call
pop
sub
insb
jb
push
add
mov
xor
rcrb
dec
add
lock
push
jbe
cmpsl
movsb
or
jne
dec
pusha
pop
dec
adc
fs
xchg
inc
or
daa
es
jbe
mov
sub
out
imul
cmp
push
ja
out
cli
stc
mov
push
rolb
ds
push
sub
subb
nop
dec
loopne
mov
incl
dec
enter
cld
mov
mov
ret
call
loop
sub
mov
lods
ljmp
popf
aas
sarb
ds
sti
imul
sbb
mov
mov
mov
push
out
test
cli
mull
aaa
add
aaa
rcrb
and
adc
rorl
js
push
es
cltd
jbe
dec
hlt
lret
je
pushl
jle
sti
gs
and
test
test
test
pop
sbb
cmp
call
mov
dec
scas
popf
add
pushl
pusha
into
inc
in
xor
pop
mov
pusha
push
aam
rcl
daa
aad
xor
xor
pushl
mov
jo
popa
mov
ret
and
and
dec
call
cmpsl
sar
adc
inc
mov
ret
clc
xchg
fdivs
data16
notl
mov
mov
ja
mov
lahf
add
pop
xor
popf
ret
lahf
decl
sbb
adcb
xchg
out
stc
daa
into
mov
cmp
fidivrs
adc
mov
cmp
jnp
loope
inc
mov
inc
clc
repnz
xlat
stc
sub
movups
pop
lock
push
mov
or
inc
in
and
ret
decl
and
mov
ficompl
gs
or
mov
push
adc
mov
movsb
sbb
mov
xchg
mov
gs
fcmovnbe
and
std
jg
fsub
sub
xchg
jbe
les
out
add
mov
or
hlt
jg
outsl
fbld
mov
loopne
cmpsb
mov
add
neg
add
icebp
insb
pop
add
mov
aas
inc
decl
jp
inc
ret
mov
aad
adc
aas
loopne
ljmp
cmc
mov
stos
mov
cmp
add
repz
xchg
roll
jmp
incl
push
mov
and
adc
push
mov
into
pop
mov
jmp
test
imul
pop
ja
push
mov
loope
add
jmp
lahf
xor
loopne
jl
sub
test
loope
jle
lahf
stos
movsl
ja
sbb
ret
sar
incl
bound
pop
fdivrs
insb
aam
push
xor
pop
jle
out
push
fdivs
cltd
pop
and
rol
jno
sbb
ljmp
sub
sbb
cmp
jg
repz
push
aad
ljmp
clc
sbb
jp
cmpl
xor
cmc
aas
mov
push
xchg
mov
loopne
and
fisttpll
shr
fildl
insb
mov
adc
dec
out
clc
popf
xorb
test
or
mov
push
fildll
fstps
test
clc
inc
add
and
or
mov
or
lock
lds
decl
jl
mov
dec
jecxz
add
sbb
test
mov
dec
ljmp
sub
imul
push
pop
shlb
jae
xor
decl
fldenv
sub
ljmp
push
sbb
in
adc
push
inc
push
orb
mov
xlat
pusha
aam
cwtl
scas
sbbl
movsl
cwtl
pushf
loop
adc
ret
and
negl
pop
leave
into
xchg
inc
mov
cmp
dec
inc
jp
jg
sti
push
lods
ja
mov
cmc
sbbl
inc
dec
outsl
cmp
decl
in
sub
push
inc
icebp
jo
lret
cltd
in
in
push
mov
scas
cs
mov
clc
adc
or
and
or
or
dec
jnp
add
sbb
jmp
popf
push
mov
jl
xchg
sahf
daa
mov
or
enter
jmp
outsb
in
test
sti
in
jl
sub
scas
pop
inc
loopne
ljmp
mov
jne
lcall
push
fcmovne
xlat
in
jp
lds
icebp
leave
enter
mov
mov
inc
jne
adc
adc
mov
outsb
in
imul
push
rol
out
push
ljmp
test
aas
inc
inc
push
ljmp
mov
iret
push
cs
sbb
mov
mov
jl
cmp
stos
cmpsl
negb
int3
cmp
cmp
pop
js
into
sub
pusha
xlat
into
out
data16
mov
jmp
xchg
cmp
jb
cmpsl
xchg
xor
xor
cmp
xor
cld
ljmp
cmp
jns
ror
out
stos
xor
int
jmp
sbb
cmp
movsb
sarl
push
mov
ret
inc
xchg
mov
sbb
sbb
or
negb
inc
sub
inc
push
sbb
dec
pop
push
mov
aaa
cmp
fldenv
lcall
repnz
mov
daa
pop
mov
mov
and
cmpsb
push
idiv
mov
int
out
jns
aas
push
fidivrs
fstpt
mov
arpl
fnsave
sbb
sub
stos
nop
and
jnp
jg
and
aaa
cmp
cs
js
push
stos
test
jg
dec
push
loopne
stos
and
jmp
repnz
cld
stc
lret
cmp
mov
jecxz
adc
cmp
lret
mov
sbb
sbb
add
or
scas
mov
mov
leave
xchg
jmp
js
dec
scas
mov
rcrb
jmp
lcall
mov
jecxz
or
es
jmp
or
call
cli
push
xchg
mov
decb
inc
dec
test
fcomip
ja
push
sbb
shll
mov
jo
add
jo
fwait
aam
aaa
cli
popa
and
outsb
rcrl
mov
mov
aas
leave
jle
mov
mov
mov
mov
and
xchg
xchg
mov
mov
lods
cmp
push
mov
xchg
int
inc
and
dec
inc
rcll
or
xchg
sarl
aad
and
nop
icebp
sub
lods
inc
xor
insl
into
push
mov
fildll
cld
fs
in
mov
mov
xchg
xchg
and
inc
pop
fiadds
imull
jmp
mov
lods
sub
das
hlt
out
mov
inc
int
and
pushl
add
lods
xchg
mov
push
inc
mov
adc
ds
mov
mov
xor
scas
test
icebp
jg
cmp
inc
andb
xorl
mov
lret
sub
mov
jmp
jns
push
cmp
sub
cwtl
fimull
mov
jmp
ljmp
add
bound
adc
or
std
call
mov
into
jle
call
imul
jno
mov
into
cmp
pop
xchg
andl
adc
lcall
push
mov
imul
xchg
inc
xchg
in
aam
sub
dec
push
adc
push
clc
out
pop
cmc
lods
popa
aas
jle,pt
xchg
je
xchg
push
ja
fisubrs
ljmp
xor
mov
test
jno
xchg
xor
xor
cmc
mov
out
inc
push
lret
add
dec
xchg
lcall
addl
call
inc
and
adc
popf
fdivr
adc
pop
call
pop
cmc
les
das
cmp
pop
jns
mov
push
jmp
in
stc
cmp
sub
sub
mov
repz
lcallw
stos
into
cmp
imul
or
ret
mov
ror
ljmp
in
jmp
jle
mov
sub
xor
dec
mov
mov
adc
jns
out
scas
andl
cld
push
mov
mov
add
sub
or
mov
xchg
mov
push
popf
sbb
cmpsl
sbb
lock
jmp
sub
lea
xchg
ja
and
inc
pop
pop
cwtl
cmp
aaa
mov
loop
push
rorb
ja
add
imul
inc
mov
aas
mov
sar
mov
dec
sbb
stc
pop
sub
in
pushl
jae
jne
dec
imul
jmp
stc
es
and
or
jg
addr16
arpl
push
adc
sub
ss
test
into
movq
pop
mov
cmp
decl
or
sbbb
lods
push
push
lea
cmp
lcall
mov
lock
in
or
call
sub
dec
xchg
imul
stos
xor
add
lcall
out
pushl
andb
inc
pop
fmul
sbb
cmpsl
add
ljmp
inc
lcall
enter
jmp
outsb
jno
mov
sbb
xor
adc
pop
iret
jb
int
enter
jne
inc
sub
call
mov
jnp
aad
in
fldt
jbe
sub
fcomp
sub
or
sbb
jmp
add
sub
push
loop
nop
sub
pop
cmpsb
jg
mov
mov
sbb
cmp
push
int3
jle
imul
mov
mov
or
fidivl
outsl
std
push
ror
mov
add
out
add
das
cwtl
mov
lret
iret
mov
pop
or
inc
addr16
cmp
fbstp
sbb
ja
xchg
dec
aam
lea
adc
aaa
push
scas
jmp
jg
scas
aam
cld
movsl
test
sbb
mov
jno
inc
cmp
shl
sbb
decl
cmpsb
cmp
mov
cmp
xchg
scas
in
inc
pop
movsb
popf
inc
enter
ja
mov
jmp
popf
jmp
xor
out
in
sub
pop
insl
xchg
out
jns
stc
cld
cld
std
aaa
fbstp
loop
push
jae
aam
sbb
test
je
push
or
aaa
jbe
outsl
mov
mov
sahf
in
lods
insl
push
pushl
popa
nop
pop
and
cmp
cmp
fistpll
mov
stc
loopne
lea
inc
mov
sarb
jno
xor
jg
push
fwait
cmpsl
lods
decl
dec
sbb
mov
sub
xlat
mov
std
adc
and
adc
test
pop
xchg
lods
ret
mov
lcall
jecxz
sub
mov
xchg
xlat
mov
and
sbb
jg
inc
jnp
mov
pusha
imul
jge
and
insl
sub
lret
loopne
stos
inc
js
and
ret
out
pusha
dec
out
ret
iret
lcall
dec
insb
pop
or
xchg
lea
or
sub
incl
js
loope
sbb
outsb
dec
and
icebp
fiaddl
mov
xor
inc
rorl
aad
pop
rclb
cmp
jg
sahf
enter
jo
xor
jg
ljmp
daa
clc
in
cs
dec
pop
xchg
cli
enter
fnsave
sub
mov
icebp
leave
lahf
js
jg
scas
cmp
or
outsb
mov
ljmp
loopne
daa
inc
ror
sbb
stc
dec
jl
clc
leave
cmc
inc
adc
xchg
xchg
cmp
mov
dec
ljmp
pushf
push
aas
inc
xchg
std
dec
inc
mov
mov
insb
insb
arpl
dec
fdiv
cmp
call
inc
in
xchg
xchg
popf
call
pop
cltd
mov
adc
aad
mov
clc
inc
std
notl
pop
dec
notb
sar
pusha
icebp
dec
cwtl
mov
sbb
stos
xchg
cmpsb
call
sub
lods
cmp
xchg
sub
out
mov
xchg
cmc
sbb
add
inc
jg
cmpsl
fdivrs
in
mov
pop
idivb
fwait
in
ud1
or
and
mov
fcmovnbe
jg
test
rcll
hlt
cli
sbb
cmpsw
pusha
and
std
mov
mov
aaa
cmpsb
dec
clc
call
push
and
mov
iret
sub
lods
orl
incl
out
decb
adc
fnstsw
mov
outsb
xchg
push
jns
jecxz
addr16
js
xchg
mov
jbe
outsb
xchg
iret
and
adc
or
fs
sub
dec
or
mov
aaa
pop
jno
sti
shl
push
sbb
std
or
jno
cmp
ja
mov
ljmp
out
jg
mov
mov
push
je
sub
cld
or
jg
jle
inc
scas
pop
ss
xchg
aad
pop
int3
dec
xor
ss
sub
adc
ret
lcall
sbb
jne
shl
scas
xchg
into
add
jg
cmp
push
roll
add
or
cmp
cmpsb
dec
std
sub
aas
lea
xchg
xor
gs
mov
pushf
les
ja
cmp
or
add
lea
xchg
mov
add
xchg
fst
sbb
lret
cmp
aad
dec
fisubl
inc
js
pop
ret
dec
mov
aad
push
lcall
or
dec
xchg
sbb
adc
push
mov
pop
sub
mov
aam
sbb
inc
mov
daa
mov
ss
cs
loope
jecxz
shll
xor
jp
ljmp
cmp
sbb
sbb
decl
hlt
xorb
mov
and
xor
clc
push
test
jl
ds
adc
xor
enter
pushf
nop
and
add
mov
and
test
adc
xchg
inc
lods
shrb
fstl
sub
jns
push
or
fsts
test
adc
xor
sub
mov
loope
repz
dec
sbb
shr
xor
jecxz
lea
jo
push
popf
js
orl
push
and
daa
dec
mov
gs
inc
dec
jp
lock
mov
ds
incl
out
xchg
inc
or
test
gs
jg
js
mov
sar
ljmp
xchg
aas
mov
xor
cltd
test
or
push
jecxz
out
xchg
jg
mov
ljmp
lcall
mov
sbb
cmp
leave
es
or
xor
push
push
push
outsl
incl
incl
les
je
lret
fcoml
dec
jmp
out
lret
mov
lea
push
cmpl
and
mov
loopne
dec
sbb
lcall
mov
loope
cmpsl
pop
js
lods
daa
push
pop
cmc
or
loope
out
inc
push
mov
xor
push
cmpsb
cmp
sbb
lods
pop
sub
add
aad
sahf
aaa
sahf
xchg
xchg
xchg
hlt
pop
hlt
incb
mov
sarl
in
mov
mov
pushl
push
fldenv
adc
clc
sbb
test
out
jecxz
ja
jg
add
xchg
add
fistl
pushf
lods
inc
jle
sahf
cmpsb
inc
mov
or
push
or
sbb
out
push
sbb
ljmp
xor
std
pop
mov
rcll
sar
pop
insl
hlt
fcoml
fnsave
sub
ss
outsb
sbb
push
sbb
jnp
and
or
add
pop
in
jne
test
cmc
ljmp
stos
into
inc
and
push
mov
adc
pop
and
mov
dec
in
xor
maxps
jl
decl
sahf
dec
sbb
xchg
jbe
mov
mov
dec
clc
movb
call
fisttps
filds
lahf
test
cmc
inc
clc
sub
cli
loopne
sbb
cmp
mov
xchg
mov
mov
sub
pop
pop
pop
or
shl
sub
imul
test
out
mov
lret
incl
loope
pop
jmp
clc
cmpsb
pusha
cmp
jl
movd
ret
std
lcall
sbb
ss
inc
pop
mov
dec
fldl
jo
popa
loope
in
xchg
mov
cmp
cltd
cmp
mov
sarl
shrb
dec
push
into
cmpl
mov
ja
fs
outsb
jo
mov
jl
into
fcompl
pop
rcr
les
cmp
or
mov
jecxz
lcall
pop
lcall
fistps
fsubrl
mov
ja
jae
inc
inc
sbb
roll
std
in
pop
hlt
call
aam
orb
scas
adc
sub
pop
out
jecxz
out
jno
mov
jmp
ds
repz
mov
or
mov
jmp
jle
test
pop
cmp
cmp
repnz
jbe
ret
push
push
jne
and
lcall
add
sahf
inc
inc
xor
inc
pop
add
fsubrl
aam
outsl
sbb
and
jmp
out
outsl
les
inc
outsb
mov
adc
add
mov
cmp
adc
icebp
mov
into
outsb
or
loop
daa
cmc
add
mov
shlb
jne
jb
dec
scas
jge
mov
mov
std
mov
out
ljmp
jg
jl
fwait
aam
repnz
dec
fwait
movsb
mov
xchg
mov
fwait
mov
ss
subb
shr
cmpsb
add
call
lods
scas
insb
cli
testb
sub
scas
adc
test
pushl
adc
mov
dec
popa
pop
mov
inc
jno
into
cld
jg
inc
imul
lahf
pop
dec
imul
dec
xor
xchg
call
xchg
aad
outsb
das
jnp
in
negb
lahf
dec
and
test
out
imul
mov
mov
lds
scas
loopne
xlat
mov
mov
sbb
xlat
stos
fbld
lods
jmp
aaa
lods
imul
scas
imul
call
ret
mov
inc
adc
sarl
push
mov
push
dec
jg
mov
std
jo
outsl
xor
mov
mov
call
pop
xchg
xor
mov
xchg
out
or
dec
out
fmull
cli
or
mov
dec
mov
loopne
lcall
lcall
icebp
shll
sarb
stos
or
xor
in
aaa
xchg
mov
mov
dec
enter
scas
outsl
fimuls
cmc
sbb
pop
stos
lods
out
call
das
inc
push
fwait
out
fsubrl
je
mov
stos
xor
mov
cvtdq2ps
aad
call
cli
cmp
mov
shll
sbb
mov
jo
adc
nop
pop
inc
loop
adc
lock
jmp
adc
ljmp
ret
sbb
xor
fs
test
lods
into
mov
incl
daa
cmp
loope
popa
std
int3
stos
out
rcl
cmp
mov
lret
mov
lcall
lcall
leave
mov
sbb
pop
push
sub
rorb
xchg
sbb
div
decl
insl
nop
inc
test
and
mov
push
cmp
pop
or
inc
xor
outsl
push
and
daa
mov
xor
sbb
imulb
add
inc
pop
cmpsl
cwtl
cltd
test
jg
fnsave
daa
or
sahf
xchg
inc
test
testl
inc
mov
dec
popf
fcomip
ljmp
cmc
xchg
shrb
cmp
in
xchg
seta
push
jbe
bswap
xor
inc
daa
pop
mov
movsl
mov
mov
or
popf
jl
jns
in
loope
dec
mov
cli
mov
repnz
sub
repz
cwtl
jle
xchg
sarl
push
xchg
xchg
xchg
mov
ljmp
out
lcall
or
sbb
rolb
sub
aas
and
pushf
in
call
ljmp
or
ss
xchg
mov
sub
xchg
mov
ja
cmp
push
outsb
ds
push
jmp
ds
or
sub
sub
iret
stc
jecxz
sar
das
cli
out
in
add
mov
loopne
call
jg
cmpsl
lahf
aam
inc
mov
icebp
jg
jb
sahf
in
pop
jg
negb
lock
fnstsw
sti
xor
lahf
sbb
jle
cmc
push
sbb
sbb
scas
xchg
imul
jg
call
or
ret
outsl
pop
data16
data16
fxch
jo
mov
push
jne
xchg
sar
clc
pushl
jmp
test
inc
cmp
cmc
out
cmc
int3
inc
mov
xor
dec
test
and
pop
xchg
cmp
stos
xlat
fcomip
data16
negb
fimuls
inc
jno
cmp
jg
adcb
sti
test
into
notl
push
ja
fcomi
lcall
sti
aaa
out
aam
ret
pop
mov
push
add
mov
cmp
dec
jle
call
decl
jae
repnz
lods
jecxz
aas
jne
push
dec
jg
mov
cmp
pop
out
cli
lcall
xor
mov
pop
pop
movb
mov
roll
out
mov
popa
scas
cli
decl
imul
ljmp
xchg
jp
lret
sbb
mov
ljmp
jecxz
aad
inc
pop
push
iret
jge
nop
sbb
jg
imul
fcoms
stos
mov
xor
testl
fdiv
iret
int
call
ret
xchg
push
insb
fstl
int
mov
dec
cmp
iret
clc
lahf
sysexit
popa
lcall
push
call
push
lcall
movsb
or
ds
or
cmc
aam
decl
sahf
fidivl
cltd
lods
mov
out
cmp
daa
call
shl
dec
pop
shlb
and
or
je
scas
add
cs
push
popa
mov
dec
fsub
adc
mov
and
movsl
sti
jp
in
jg
addr16
cs
inc
cwtl
cmp
fnstsw
mov
test
sbb
cli
lds
jmp
cs
fwait
mov
push
cmpsl
das
jl
dec
sbb
cmc
ja
jnp
std
int
mov
adc
loop
add
lods
cmp
cwtl
jmp
std
push
mov
scas
imul
pop
ja
outsl
std
push
fst
shrb
adc
pushf
inc
lcall
out
sti
mov
mov
arpl
or
or
xchg
scas
inc
fsubs
mov
lods
add
xor
xchg
in
jmp
ja
pushl
xchg
addr16
arpl
push
adc
mov
adc
scas
or
imul
xchg
xor
arpl
dec
test
mov
aaa
movsb
fidivrl
inc
sub
mov
push
push
mov
mov
mov
and
pop
mov
sub
xchg
fimull
pop
adc
lods
neg
push
mov
mov
sub
mov
ja
fisubrl
fdivs
push
jg
lret
dec
jae,pn
mov
shlb
fildl
fldl
or
ljmp
aas
and
repz
hlt
push
xor
push
mov
pushl
sub
add
filds
shlb
out
fsub
inc
les
imulb
iret
dec
cli
jg
push
add
jns
push
or
ds
adc
bound
mov
push
sarb
fldcw
and
fdiv
dec
outsl
js
cli
shl
loopne
lcall
int3
rcr
lock
cld
sbb
jle
push
mov
repz
in
call
popa
out
and
arpl
mov
add
xlat
icebp
sti
dec
call
loopne
imul
pop
jns
cs
push
xor
pop
dec
cmp
and
add
cmc
idiv
jbe
push
mov
inc
xchg
or
xor
cmp
cmp
decl
pop
inc
sub
stos
pop
lahf
inc
nop
mov
mov
test
sub
jmp
push
mov
mov
cwtl
add
es
cmp
imull
pop
out
xchg
cmp
cmp
xor
jge
loop
std
mov
cs
pop
mov
das
rorb
les
lret
call
push
or
push
or
or
pop
pop
jecxz
mov
add
add
jne
cmp
mov
and
es
decl
enter
flds
mov
scas
test
ds
ljmp
ljmp
inc
or
iret
loopne
jbe
add
mov
jg
and
push
aad
xor
xchg
iret
daa
out
outsl
fisubl
cmp
inc
jmp
lcall
jge
xor
jg
int3
push
adc
cltd
xchg
jg
jg
mov
sub
test
mov
mov
loopne
push
pop
out
push
or
adc
out
scas
repnz
jae
lret
cmovne
xor
xor
sahf
xor
jge
pushl
jle
mov
push
test
sub
add
incb
hlt
mov
jo
outsb
cs
jno
xchg
push
jl
roll
iret
inc
lock
daa
sbb
xor
mov
jg
adc
jbe
orl
pop
and
add
shl
pop
lcall
pop
repnz
pop
xchg
mov
xlat
sbb
ret
jno
xchg
popa
popa
adc
fldl
adc
jmp
xchg
pop
mov
fsubl
adc
xchg
mov
push
loopne
cld
xchg
or
jge
cmp
loopne
and
test
dec
or
test
outsb
xchg
and
jecxz
fmul
mov
ljmp
jae
inc
es
jp
xor
movsb
jecxz
je
ud0
mov
and
inc
loop
stc
jnp
xor
inc
loope
sar
jmp
lods
mov
cmpsb
add
sarb
mov
sahf
out
dec
inc
cmc
rcll
add
push
cmpsl
xchg
test
or
xchg
movsl
xchg
mov
jge
mov
aaa
mov
and
xor
loope
pushf
aas
arpl
sub
push
data16
subb
into
pop
cli
add
mov
mov
mov
and
ljmp
or
and
ljmp
or
arpl
hlt
adc
jbe
ljmp
clc
mov
jmp
add
sar
inc
mov
cmp
int3
pop
sbb
push
cmc
add
cld
clc
cmp
jno
push
push
and
fwait
lock
add
pop
fildl
fsubrl
jmp
in
out
push
popa
insb
incl
decl
cmp
mov
mov
js
mov
pop
inc
fistps
cmp
xchg
dec
pop
testl
pop
mov
insl
cwtl
js
sbb
pushl
sti
repnz
sub
out
jne
pop
or
test
cmp
xchg
ficomps
repz
jb
sarb
xchg
fnstenv
add
cli
inc
cwtl
sub
outsb
pushl
jge
jnp
add
pop
push
pop
jecxz
hlt
mov
dec
inc
xchg
xchg
dec
xchg
jmp
movsb
xor
cmp
jg
mov
cmpsb
mov
inc
xchg
add
pop
std
mov
push
incl
push
mov
add
ret
stos
pop
pop
shlb
sbb
mov
lcall
add
inc
xor
aaa
sub
loopne
dec
push
ljmp
mov
fadds
ss
jg
mov
repz
xor
inc
ljmp
test
ljmp
es
fwait
outsl
mov
call
push
mov
fbld
bound
insl
into
scas
bound
jge
mov
inc
sub
mov
jb
loope
or
mov
popa
ret
out
push
mov
andl
pop
add
les
lods
test
into
psadbw
push
jno
icebp
das
mov
jno
mov
lret
xor
push
xchg
cmp
jl
loop
dec
push
jmp
pop
add
cmc
jmp
ds
mov
sub
lcall
insl
js
and
cld
or
cs
or
add
fisubrs
mov
xchg
enter
push
mov
movb
pushl
sbb
xchg
sar
sbb
popa
out
inc
pop
adc
sti
movsb
in
gs
out
lods
dec
stc
fmuls
or
call
test
ficomps
mov
jecxz
dec
dec
decl
sub
insb
test
jae
andb
mov
enter
jl
add
inc
jle
or
adc
test
lcall
and
std
scas
fildl
callw
inc
movsl
jmp
xorl
jo
rcll
lock
fstpt
cmp
fisttpll
inc
and
push
daa
ljmp
pop
fdivrl
xchg
outsl
loope
addr16
jns
pop
or
xor
shrl
cld
filds
inc
pushl
mov
dec
inc
iret
mov
pop
loope
mov
inc
cmp
mov
addr16
je
and
mov
decl
mov
mov
xchg
sbb
inc
pop
adc
push
rorl
pop
scas
clc
jle
rclb
subl
mov
aad
cmp
inc
push
push
inc
push
enter
roll
sub
mov
jnp
in
aam
pushl
mov
mov
mov
dec
xor
das
subl
pop
into
adc
sub
mov
movsl
mov
clc
pop
mov
and
push
hlt
or
fstl
in
mov
add
mov
or
jl
rcrl
hlt
outsb
call
movsl
call
call
xor
lods
adc
jmp
aam
icebp
pop
cmc
inc
out
pop
push
sub
mov
dec
call
ljmp
loopne
decb
pusha
enter
and
pop
adc
jb
icebp
mov
and
sub
je
xor
lods
test
testl
xchg
in
dec
or
sti
out
decl
mov
cmp
inc
cmpsb
xchg
or
mov
outsl
jg
call
or
jb
inc
popf
popa
adcb
push
add
jg
decl
sbb
or
push
mov
icebp
ljmp
clc
sti
lret
sbb
xor
xchg
fcoms
xchg
cmp
dec
insb
or
movsl
push
pop
pop
jl
sahf
jne
xor
or
xchg
mov
add
sub
sub
inc
cltd
cmp
and
stc
jmp
jl
jg
mov
add
cltd
dec
jbe
mov
fisttps
imul
cmp
ss
push
ja
inc
dec
lcall
cmp
jno
or
fsubrs
sbb
fiaddl
push
dec
cmp
mov
push
rorl
mov
and
test
mov
mov
pop
mov
mov
lcall
outsl
pushf
call
and
mov
faddl
sub
gs
sbb
mov
incl
int
jo
mov
inc
fadds
or
sbb
cmp
jmp
xor
jecxz
add
out
sbb
out
xchg
jmp
lahf
lret
jbe
arpl
jne
add
dec
and
xor
push
pop
sbb
mov
lea
pop
jge
inc
sbb
ljmp
inc
orl
mov
mov
les
movsb
lea
jbe
mov
adc
mov
sub
jmp
test
popa
fiadds
imul
and
inc
loopne
dec
mov
sahf
mov
or
xchg
imul
pop
mov
shrb
lret
and
call
push
data16
jl
ficomps
scas
rcl
mov
inc
gs
popl
mov
bound
xchg
cli
stc
lds
push
imul
js
xchg
push
jle
xchg
push
loop
das
cli
mov
fs
pop
cltd
mov
push
movsl
or
in
sub
mov
stc
or
js
cmpsb
mov
dec
ljmp
add
dec
mov
addr16
jno
aas
stos
js
jno
push
cmp
lds
fsubrp
lcall
adc
jle
xchg
xchg
lret
std
les
into
mov
std
lret
dec
lret
mov
pop
push
mov
call
inc
popa
xor
movsb
fwait
clc
imul
push
sub
sub
bound
outsb
in
stc
sbb
in
cld
pushl
shll
fsubp
arpl
int3
xchg
mulb
imul
push
mov
inc
jne
mov
loope
lds
neg
in
sbbb
fs
inc
orps
cld
scas
clc
jmp
hlt
push
adc
in
push
push
sbb
ret
aam
aaa
imul
sahf
fs
sub
ret
or
xor
or
scas
mov
inc
lock
inc
loop
dec
mov
bound
mov
mov
sub
sub
insl
xchg
test
in
cmp
fwait
mov
fistl
stc
fnstsw
mov
stc
sub
dec
test
pop
test
repnz
out
jbe
adc
ret
daa
daa
fadd
je
dec
ljmp
fisttps
xchg
jecxz
aaa
sub
rcrb
add
jg
xchg
outsl
jb
add
push
aaa
fbstp
jecxz
lock
call
shll
in
adc
test
test
sbb
dec
sti
pop
push
cmp
dec
pop
movsb
cs
jg
pop
push
push
jae
cmp
and
sub
idivb
lea
nop
fs
ljmp
cmp
sbb
rcll
cmp
shll
and
fisubl
ds
push
dec
int3
jb
add
xchg
mov
movsb
mov
outsl
cmpl
filds
sub
hlt
data16
jbe
cs
ljmp
decl
fldt
popf
je
popf
or
jae
sti
mov
push
sti
xor
inc
jnp
sbb
pop
lds
sar
sbb
pop
jns
mov
jmp
lret
fsubl
dec
adc
in
inc
push
mov
flds
pop
icebp
push
or
inc
out
push
sub
mov
movsl
push
xchg
push
repnz
jns
pop
inc
pop
push
cmp
insb
fwait
lcall
jmp
adc
adc
test
cwtl
sbb
cs
icebp
cmp
call
dec
hlt
enter
test
daa
sub
add
rcrl
sub
f2xm1
pushl
sub
sbb
push
lahf
push
subl
jo
cwtl
roll
dec
inc
pop
cwtl
xchg
stos
lcall
fnstenv
pop
ret
cmp
pusha
idivl
sti
adc
pop
mov
imul
in
hlt
clc
jg
jae
adc
repnz
stos
mov
or
lock
and
pushl
inc
aas
ret
xor
inc
adc
xchg
jne
push
xlat
add
sbbl
push
push
cld
scas
inc
add
xchg
lea
jb
pop
xchg
gs
or
incl
bound
adc
arpl
int3
lods
and
mov
jle
mov
in
adcb
test
daa
push
cmp
mov
clc
jmp
mov
push
scas
stos
pop
xchg
out
jp
mov
xor
sti
out
std
ljmp
enter
popa
cmp
add
mov
outsl
in
mov
pop
cld
aad
incb
sub
lret
or
jg
or
lea
addb
mov
shl
sub
mov
mov
rcrb
stos
aaa
sti
or
outsb
dec
xchg
loop
filds
lods
popa
fistps
sti
cmp
out
filds
push
add
ds
add
adc
jge
jge
mov
rcll
mov
cli
push
test
mov
sub
sbb
mov
push
push
ss
push
add
dec
sub
dec
mov
ret
hlt
lret
lcall
sbb
movl
ljmp
inc
rolb
icebp
cmp
inc
repnz
jmp
cs
push
add
filds
adc
aas
mov
fimuls
int3
mov
lcall
in
test
inc
fldcw
decl
pushf
pop
dec
fsubs
mov
xchg
aas
lcall
jmp
out
nop
in
cltd
push
adc
mov
jle
je
or
mov
ljmp
std
xchg
jnp
jp
cwtl
jl
imul
rcl
mov
pop
push
xchg
adc
stos
cmp
enter
sub
test
pop
dec
jns
in
mov
jnp
out
repnz
push
loope
jle
insl
testl
inc
inc
es
xor
lret
mov
jb
mov
pop
cltd
push
cmp
fdivrl
incl
xor
cs
ds
sbb
or
mov
inc
es
les
js
ljmp
jne
mov
push
mul
int3
int3
add
jmp
sub
in
sub
jbe
aas
adc
jmp
mov
out
xchg
mov
sbb
imul
cmpb
push
mov
lods
lret
icebp
call
sub
vmovhps
sbb
leave
inc
cmp
fwait
call
loopne
call
push
pop
dec
test
jmp
mov
sub
pop
inc
dec
lcall
icebp
jg
repz
mov
hlt
or
mov
mov
mov
pushl
and
sbb
adc
ja
mov
cmp
pusha
xchg
dec
ret
dec
sub
ljmp
or
es
adc
and
cmp
popf
dec
xchg
or
xor
pusha
adc
pop
pop
insl
loop
mov
mov
xchg
mov
lret
mov
pushl
jmp
xchg
xlat
push
aas
push
or
sub
mov
xchg
xchg
pop
jnp
cli
shl
call
or
outsl
mov
push
sub
jg
test
lcall
clc
cmp
mov
shrb
and
ret
mov
int3
cmp
ret
outsl
pop
cld
push
sub
add
ret
test
ljmp
push
cld
jno
and
mov
push
adc
pop
jno
mov
outsl
clc
jmp
adc
scas
repz
and
insl
cmpl
psrld
in
mov
push
es
in
mov
xor
add
outsb
add
pop
jge
mov
lea
dec
or
or
ds
pop
cltd
dec
imul
aas
cmc
jns
cmpsb
das
sbb
mov
xlat
xlat
cmp
jle
loope
lcall
push
aad
aaa
sub
sub
pushf
mov
pop
jo
mov
sub
clc
dec
inc
cmc
mov
rcrl
dec
dec
aaa
jmp
mov
sti
jbe
fisttps
addr16
sub
je
lods
jnp
mov
pop
incb
loop
iret
std
cmpsb
mov
ljmp
push
xchg
or
sti
popf
es
lcall
pop
aas
jne
mov
lcall
jo
pop
cmp
aaa
xor
jne
mov
adc
call
sub
jecxz
call
arpl
js
test
arpl
mov
bound
test
ja
sahf
decl
xor
repz
dec
lods
icebp
dec
push
sbb
push
mov
sub
scas
lret
cmpsb
xchg
cmp
push
call
ss
inc
mov
sbb
cs
lods
cmp
xor
dec
into
pop
clc
push
sbb
int3
nop
je
jmp
push
cmp
xor
cmp
xor
icebp
pop
mov
lods
fstl
call
sarb
ret
push
mov
inc
sbb
mov
add
mov
cmp
lret
into
dec
dec
es
and
add
jae
jns
ljmp
jp
add
mov
jns
or
push
icebp
push
dec
fldenv
mov
nop
dec
sbb
and
pop
jns
jae
mov
cld
inc
cmpb
dec
mov
push
sbb
ljmp
imul
outsl
add
jns
mov
pushl
hlt
sub
cwtl
push
popf
cs
push
sub
ja
mov
mov
adc
adc
xchg
fs
lcall
mov
mov
mov
xchg
inc
pop
sbb
shr
sub
call
rcr
lock
lock
dec
mov
aas
push
in
mov
mov
cs
ficoml
jl
inc
xchg
push
movsb
dec
lea
ljmp
cmp
cs
cmpsb
ja
loopne
and
xor
stos
repnz
daa
sahf
adc
decl
xchg
daa
arpl
sub
or
add
test
addr16
into
xor
ljmp
inc
and
je
sar
mov
lock
icebp
dec
ds
mov
insb
add
incl
sbb
jp
repnz
mov
jp
out
popa
push
mov
decb
adc
cmpsb
and
aas
xchg
mov
dec
dec
jecxz
cld
filds
frstor
push
std
cmp
mov
jmp
mov
inc
inc
jnp
jg
jp
mov
pop
adc
lcall
inc
cmc
lds
push
in
jg
sub
fstp
sbb
dec
repnz
pop
nop
incl
cld
lret
or
jp
cltd
in
loope
shl
cmpsl
mov
jle
fistl
daa
cmpb
fmuls
or
jg
adcb
mov
ljmp
mov
or
pop
mov
sub
outsl
lahf
sbbb
incl
rorl
into
cmp
inc
inc
out
add
sbbb
mov
jne
clc
pop
cld
or
sahf
xor
jne
jb
loop
pop
test
shl
dec
adc
push
mov
test
inc
test
lahf
out
ljmp
imulb
pushf
fldt
fsubp
mov
push
aas
adc
cmp
clc
xor
add
jmp
jg
pop
xchg
jp
sub
mov
sub
lcall
decl
frstor
dec
jnp
jae
test
cmpsb
mov
add
loopne
pop
sbb
xchg
es
pop
pop
mov
fisubrl
or
xchg
bound
adc
decl
lock
cmpb
stc
ds
xorps
leave
mov
mov
insl
notb
ljmp
pop
mov
mov
aam
mov
cmp
dec
out
enter
enter
cli
mov
mov
lds
inc
fsubl
arpl
fwait
loop
or
jns
stos
jg
dec
lcall
jmp
mov
das
cmp
xchg
push
dec
jg
es
and
test
std
xor
push
jp
ja
jns
xchg
mov
inc
call
jp
adc
jecxz
adc
test
xlat
xorb
xor
mov
lcall
arpl
mov
xchg
cmc
lock
mov
sub
jnp
sbb
inc
adc
pop
dec
inc
sbb
data16
pop
ljmp
or
mov
std
ret
mov
call
lods
fmuls
es
movsb
out
and
jg
push
jne
push
pop
mov
sub
popf
mov
mov
push
inc
icebp
inc
push
nop
ljmp
xorl
fldt
push
dec
mulb
mov
jle
clc
stos
aad
das
sar
jg
jp
into
aad
cmpsl
inc
adc
jne
add
sbb
jg
inc
sbb
les
push
bound
popa
subb
out
jo
add
cld
cmp
inc
or
xor
mov
loopne
jno
dec
jp
sbb
jne
out
mov
jg
and
lahf
jo
sub
adc
or
stos
add
imul
gs
pop
add
jg
sbb
adc
pop
xchg
xor
ret
loope
adc
fidivrl
int3
mov
stc
push
xchg
insl
xorb
cmp
mov
fdivs
cld
xchg
pop
xchg
and
sub
cld
aaa
fcmovb
clc
xor
dec
cmp
cld
push
inc
loop
push
adc
or
adc
push
pop
add
mov
decl
push
xor
add
adc
loopne
fadds
cmc
outsb
cmp
pusha
add
mov
int
repz
xchg
cmp
stos
mov
lahf
sbb
mov
push
in
insl
decl
push
repz
pop
das
popf
dec
or
pop
sbb
mov
and
fists
xchg
jo
daa
sbb
jmp
push
dec
jp
jns
stc
je
in
dec
mov
icebp
jns
xorl
jle
idivb
popf
pop
ljmp
cmp
xor
and
test
inc
xchg
mov
push
pop
inc
push
pop
clc
cli
loope
enter
and
jmp
mov
jae
std
fisubs
and
nop
gs
mov
push
adc
pushl
pop
cmpsb
cli
mov
push
mov
outsb
pop
stos
adc
add
sub
lcall
rclb
movsl
or
int
addb
adc
xor
sub
push
mov
mov
clc
scas
les
popf
cld
sbb
xor
sub
mov
xchg
and
dec
adc
rorb
add
or
lods
fsts
mov
cld
outsb
xchg
xor
adc
iret
xor
adcb
outsl
xchg
jecxz
and
lcall
lcall
fldenv
data16
add
ja
ljmp
push
movsl
push
xor
mov
call
loopne
sub
sub
xor
inc
or
push
lea
inc
and
outsb
bound
lahf
stc
fadd
mov
int
push
jmp
lcall
clc
sarl
stc
xor
fcoms
cmpsb
xchg
inc
fs
call
adc
jge
mov
push
fwait
pushf
js
cmpsb
push
or
pushl
add
cmpsl
into
aaa
std
jl
lcall
jmp
mov
loopne
pop
jbe
out
fstpl
cmp
loop
iret
mov
popf
test
pop
mov
jle
call
les
negb
xchg
aam
addr16
fsubrs
test
adc
aad
and
imul
mov
sbb
mov
xor
lcall
dec
lock
xchg
aaa
lds
lcall
hlt
call
test
mov
jmp
fstps
inc
dec
or
addr16
ret
xchg
scas
xchg
dec
outsb
pop
sub
lcall
fsubrl
xchg
sub
aam
decl
mov
pop
mov
or
dec
xchg
loope
adc
inc
pushf
imul
cld
inc
adcl
mov
adc
shlb
add
inc
inc
sub
jns
pop
and
jecxz
jmp
dec
sbb
pop
cmp
andl
lret
ret
inc
mov
nop
rolb
or
dec
adc
imul
mov
or
inc
mov
push
and
fsubl
adc
test
fld
adc
scas
jnp
and
sbb
and
loop
ret
xor
out
gs
xor
mov
sbb
lret
xor
aaa
pop
fsubrl
mov
das
scas
push
ret
icebp
hlt
or
sub
xor
and
mov
mov
repnz
mov
stc
cmpsl
sahf
jle
mov
shr
jl
rcrl
arpl
ret
lahf
outsl
call
push
push
push
ja
lds
sub
rolb
shr
into
repnz
es
ss
adc
jb
shlb
repnz
jae
sub
sar
std
fsubs
daa
dec
jg
inc
cld
loope,pt
adc
mov
jno
push
sbb
lret
mov
add
sub
jo
or
cmc
out
cli
jg
inc
lods
and
sti
leave
shll
mov
in
imul
sub
cmp
mov
addl
or
pushl
loopne
sub
inc
push
sub
push
adc
inc
repnz
stos
rcll
call
fld
mov
notb
jge
inc
xor
call
clc
adc
scas
aam
fcompl
in
adc
loopne
lahf
mov
cwtl
leave
das
mov
les
pushf
mov
push
jno
fstpl
pop
popf
cmp
mov
lods
divb
dec
xor
out
dec
aam
cmp
or
cltd
sub
call
mov
out
and
lods
push
push
cmp
mov
outsl
jecxz
or
jg
xchg
cli
movsl
mov
mov
stos
sub
sbb
movsl
sub
inc
lods
mov
and
imul
push
sahf
cmp
xchg
inc
repz
das
shlb
fisubl
outsb
lods
jg
call
mov
mov
push
stc
enter
jp
outsl
mov
sbb
mov
inc
incl
loop
push
scas
out
xchg
mov
add
test
call
mov
fs
push
jg
aaa
inc
xor
inc
jl
jmp
xchg
mov
lret
scas
sarb
ljmp
imul
popa
add
data16
push
mov
fs
call
jmp
hlt
loope
mov
lock
xor
lret
ret
adc
add
cmpsb
ja
hlt
push
push
sub
push
mov
mov
push
pop
or
inc
in
mov
sub
rcl
scas
dec
inc
mov
jae
std
das
sbbb
sbb
cld
jg
daa
dec
jo
pop
push
nop
mov
xor
adc
add
dec
jb
sbb
cli
cmpsb
js
clc
xor
or
add
pushl
add
mov
ret
add
fisubs
push
cmp
xor
push
inc
movsl
or
mov
sbb
pop
outsl
clc
mov
push
sub
jne
or
mov
decl
mov
push
jne
lods
mov
pop
sbb
jg
fcom
xchg
lret
bound
sbb
add
push
and
add
je
jle
pop
mov
fdivr
dec
inc
xchg
jl
adc
mov
inc
test
shl
daa
stos
adc
jg
cmc
pushl
pop
and
add
rcr
jge
sbb
inc
loopne
jg
jp
inc
out
aad
or
mull
push
in
and
xchg
xor
repnz
hlt
sbb
push
jno
rolb
daa
out
cmc
push
add
mov
scas
xchg
movl
decl
and
inc
xchg
in
cmp
popa
ja
mov
cmpsb
jmp
fildll
movsb
hlt
dec
js
adc
imul
fnsave
stos
inc
xchg
dec
dec
into
imul
rcrl
test
outsl
sub
loope
mov
lods
adc
cld
or
call
cli
sbb
adc
decl
lods
sub
icebp
mov
imul
sub
push
leave
add
push
insb
sti
push
scas
xchg
dec
pop
cs
dec
or
add
mov
ljmp
roll
repz
mov
xlat
in
int3
and
fcomp
and
into
pop
mov
lcall
cmp
movsl
stc
popa
and
lahf
mov
mov
push
out
lds
icebp
dec
test
lock
cltd
pop
push
ss
ds
incl
fcomps
repz
sbb
inc
jno
xchg
ret
jl
lahf
sarb
sti
div
testb
mov
jg
ljmp
push
mov
mov
inc
rcll
mov
ss
dec
shlb
decl
scas
mov
repz
dec
mov
jg
scas
inc
mov
jl
nop
inc
pushf
into
and
jp
push
add
push
cmp
imul
xchg
pop
ret
lods
je
inc
cmp
dec
xor
pop
arpl
sub
mov
lahf
sub
and
imulb
mov
mov
mov
dec
sub
inc
dec
sbb
push
ljmp
xlat
call
cld
fstps
fbld
fsubrl
jmp
fnsave
pop
mov
lahf
inc
in
mov
add
push
ds
sarl
and
incl
fstpl
jecxz
push
cmp
dec
cld
or
jmp
pop
lods
pop
pop
jp
mov
lock
push
test
mov
inc
out
pop
mov
mov
jmp
insb
test
cmp
mov
xor
enter
inc
aam
xchg
mov
mov
and
dec
rclb
mov
sbbb
or
arpl
aaa
rcrb
xchg
push
scas
xlat
faddp
jno
idiv
jg
rcrl
mov
xchg
arpl
cmp
lcall
xchg
add
repz
les
sar
cmp
mov
fistl
cmp
mov
push
loop
cmpsl
lock
jl
call
stc
shrl
xchg
dec
int3
cmp
dec
xchg
stc
adc
aam
push
or
pushl
adc
pop
imul
pusha
xorl
xor
lock
pop
xchg
out
mov
sbb
call
pop
outsl
pusha
stc
out
cmpsb
jo
xlat
dec
scas
pushl
xor
mov
mov
ret
xchg
mov
mov
bound
ljmp
shl
fdivr
push
push
or
into
xchg
dec
lret
mov
xchg
call
decb
sbb
daa
shll
inc
mov
fs
mov
js
ljmp
xor
mov
repnz
lock
push
repnz
dec
push
leave
and
incl
lret
inc
fimuls
or
rcll
repnz
pop
stos
push
lcall
nop
mov
or
push
inc
out
pop
mov
jmp
inc
fwait
outsb
ret
imul
or
xor
sbb
ret
iret
hlt
insb
jp
cmpsb
lcall
mov
in
and
in
mov
scas
test
pusha
fdivr
call
outsb
roll
jnp
adc
sbb
xlat
mov
xchg
popa
sbb
mov
movsl
jg
lock
push
in
sbbl
mov
bound
xchg
scas
mov
stos
and
cli
jae
adc
int3
popa
xor
fwait
cs
out
test
fs
popf
lods
and
in
addb
push
ss
cmp
lcall
testb
add
and
jmp
je
inc
sti
lock
cli
jge
pusha
mov
cmp
arpl
aas
dec
mov
inc
xchg
mov
repnz
sub
lods
cmp
xorb
inc
mov
xchg
stc
mov
movb
cld
or
rcrb
jecxz
loope
stos
cld
ljmp
in
sarb
lcall
mov
jecxz
mov
sbb
xor
ss
call
sbb
sti
pop
lret
or
lods
ret
notl
shll
xor
lcall
fisubrl
mov
mov
xlat
push
push
mov
imul
stos
aaa
std
pushl
shl
cmp
cmp
nop
sbb
fdivrl
in
cwtl
and
fdivrp
mov
jmp
sbb
jns
dec
inc
ljmp
mov
xchg
out
mov
dec
mov
or
inc
dec
mov
jbe
pop
call
jecxz
mov
and
pusha
adc
ljmp
mov
mov
add
adc
loope
lcall
sbb
orl
dec
adc
enter
leave
jno
or
lret
std
decl
cmpsl
pop
sbb
sub
sahf
loope
cmc
xchg
adc
popa
push
int3
inc
cs
fisttps
push
sbb
lea
scas
mov
pushl
js
mov
mov
jmp
loop
scas
mov
jg
mov
ljmp
stos
and
je
push
gs
fnstenv
mov
sbb
mov
stos
pop
xor
outsl
ror
xchg
in
test
notb
filds
mov
pop
mov
inc
fisubrl
mov
shrl
cwtl
es
movsl
inc
aaa
jp
les
jle
jl
sub
xchg
adc
sbb
icebp
xor
loopne
daa
jl
js
cmpsb
push
ret
jmp
xor
pusha
pop
add
cmc
fcompl
lret
stc
pusha
setno
adc
ljmp
in
fcomip
pushl
loope
in
cmp
push
sub
lahf
xlat
push
dec
lock
lret
pop
out
push
lcall
imulb
push
xchg
into
lods
stos
xchg
jae
outsl
fisubl
js
add
cmp
add
hlt
lcall
jle
lcall
mov
sar
loopne
cmp
loopne
dec
in
mov
lds
sub
test
mov
inc
dec
cs
mov
or
cmp
push
fidivrs
cmp
mov
or
cmp
decl
add
mov
jl
in
in
icebp
inc
add
mov
add
in
mov
pop
loopne
jecxz
cli
scas
outsl
or
add
push
andb
lods
jb
in
pop
push
dec
hlt
pop
sbb
push
lcall
push
outsb
adc
mov
inc
decl
lock
ljmp
aad
xchg
stos
fiaddl
clc
mov
fucomi
mov
dec
out
fucom
test
jb
outsl
test
in
push
adc
pop
decl
mov
or
js
jne
sti
and
jns
push
mov
fmuls
inc
ret
cld
mov
sbb
mov
mov
mov
shlb
jge
and
dec
pop
push
mov
call
sub
mov
push
jno
imul
push
pop
inc
das
cmp
call
imul
adc
ficomps
out
cmp
sbb
jg
mov
mov
stc
enter
out
or
decl
loopne
dec
and
xor
xchg
in
imul
scas
sub
adc
jecxz
lea
inc
je
xor
inc
daa
or
aaa
clc
loop
stos
mov
or
fists
loopne
std
lods
xlat
sub
dec
dec
aam
mov
or
je
mov
cmp
sbb
dec
loop
push
or
cmc
jp
jb
lretw
jne
sub
in
aam
xchg
jecxz
lea
pop
enter
bnd
nop
call
mov
push
xor
addb
sbb
xor
decl
gs
mov
in
mov
lea
call
adc
aad
ljmp
mov
orb
stos
sbb
mov
or
idivb
mov
das
mov
mov
shll
iret
lock
ja
push
cltd
les
cmp
js
in
mov
adc
out
fnstcw
sbb
test
jb
aas
dec
adc
incl
imul
gs
sti
imul
dec
je
hlt
call
mov
insl
adc
stos
pop
imul
lcall
jmp
mov
mov
cmpsl
testl
repnz
jle
jg
add
push
inc
fwait
or
les
add
cmp
mov
pusha
loope
mov
mov
data16
fstps
scas
push
arpl
incl
pop
scas
ss
int
pushf
pushf
movsb
fs
cs
fdivl
ljmp
add
mov
jp
xchg
js
nop
sub
pop
lods
adc
push
xchg
fdivrp
pop
lock
loope
pop
jl
dec
push
aad
sbb
incl
into
daa
or
test
mov
pop
add
rcrl
inc
mov
ljmp
push
shll
sbb
out
pop
repz
repnz
inc
mov
outsl
incl
push
popf
bound
aam
popa
cmp
inc
push
pusha
es
nop
mov
mov
jp
lcall
loopne
sbb
dec
jmp
rorl
and
adc
jne
aaa
xchg
jno
dec
stos
or
xbegin
aas
pop
sbb
popf
ret
cld
loop
jl
popa
ficoms
xchg
adc
das
sarb
sub
cmpps
pop
test
pop
cld
ljmp
pop
jl
xchg
xor
les
iret
jb
mov
xor
xor
cmp
mov
data16
addr16
mov
adc
inc
inc
lcall
lahf
cld
push
or
or
loope
xor
mov
dec
call
sbb
mulb
jecxz
jmp
cli
sarl
test
mov
fiaddl
mov
dec
lock
jg
shr
lcall
gs
jns
jecxz
incl
mov
ljmp
sub
push
mov
ret
pushl
mov
mov
mov
lods
add
or
push
scas
rclb
popa
int
xchg
dec
stos
mov
pushf
adc
xchg
add
mov
pop
sub
or
pop
and
add
jg
lock
pop
sub
sbb
call
pushl
jecxz
lret
int3
aam
cltd
jnp
fwait
mov
jp
sbb
mov
je
jmp
andl
pop
outsl
inc
pop
es
ja
mov
dec
add
fistl
xchg
loopne
push
adcl
jns
fadd
arpl
mov
sbb
out
sbb
push
bound
mov
call
inc
sub
push
mov
sbb
data16
daa
lcall
dec
cmpsl
in
out
adc
das
insb
scas
fbstp
adc
lcall
pop
mov
lret
ljmp
jg
in
pop
mov
fnstenv
mov
pop
cmpsb
jg
lods
rcl
pop
das
in
ds
fildll
jmp
lret
clc
pop
andb
sahf
dec
fstpt
hlt
lret
ret
fcomps
out
repz
std
lret
mov
jge
mov
out
inc
push
ljmp
jns
xchg
aas
insb
mov
mov
mov
cmpsl
out
push
shr
movsl
mov
xor
addr16
xor
call
cmp
shrb
icebp
mov
or
lret
jmp
call
pop
mov
fisttpll
sub
lods
pop
mov
popf
fstpl
mov
xor
jnp
fcomip
call
mov
push
push
hlt
inc
jecxz
sbbl
movb
push
inc
icebp
cmp
jmp
adc
ds
mov
insl
pop
cmp
mov
mov
sub
loope
ret
jo
add
add
scas
cli
jmp
push
movsb
mov
dec
imul
push
push
cmpsb
enter
enter
or
lret
adc
mov
cli
lret
xor
push
dec
push
dec
inc
or
adc
or
push
shlb
pop
inc
fwait
dec
sbb
test
out
xchg
add
xor
or
rcl
dec
outsl
out
rcrl
outsb
orl
lret
push
arpl
cmp
das
test
incl
mov
sti
sahf
pop
xchg
cli
pop
imull
xchg
mov
fdivrs
or
sbb
xchg
jnp
jo
jg
xor
rolb
jge
xchg
and
mov
scas
mov
loop
push
lods
adc
push
in
movsl
dec
fldl
loopne
gs
xor
repnz
test
pop
lret
lahf
or
cwtl
divl
inc
outsl
fidivl
jnp
mov
ss
mov
fmul
bound
add
xor
sub
incl
mov
outsl
xor
or
mov
dec
xchg
les
lods
mov
mov
or
sbb
enter
push
push
scas
js
fucomi
adc
push
push
dec
mov
inc
sub
cmp
jne
adc
rcrb
mov
jg
incb
popf
adc
ret
rorb
ret
cwtl
in
xchg
jmp
leave
js
in
div
pushf
mov
pop
clc
or
ljmp
call
sub
cmp
pop
or
movsb
ds
pop
dec
movsb
dec
jo
decl
movsb
loopne
cmpsb
mov
xlat
ds
or
sbb
std
int
mov
cld
cmpb
addr16
mov
push
push
test
out
mov
sbb
pop
xchg
mov
scas
pop
lds
stos
fidivs
mov
mov
mov
mov
js
mov
mov
loop
fwait
adc
push
xchg
out
jg
cmpsb
fbld
je
test
inc
mov
push
icebp
mov
adc
fbld
sub
mov
dec
and
fldl
leave
mov
enter
and
in
and
clc
test
mov
lret
xchg
xchg
push
xor
sti
dec
mov
inc
mov
mov
mov
xchg
xor
lock
lret
stos
xor
call
xor
stos
in
mov
dec
push
enterw
dec
ljmp
scas
push
pushf
sub
jae
adc
cmc
jnp
stos
je
inc
incl
out
into
dec
in
aas
push
stc
inc
jge
jne
ds
and
in
ret
int3
dec
lods
sbb
insl
idiv
pop
and
mov
shlb
inc
aam
das
or
sbb
jo
lcall
stc
pusha
push
rcr
test
mov
add
push
push
pop
xchg
bound
and
ljmp
ret
xor
ja
push
pop
in
add
xchg
mov
loope
jg
sub
fnstsw
aad
jle
lock
mov
imull
inc
ret
clc
jg
lea
pop
jno
xor
jno
pop
shll
fsubs
pop
mov
cli
mov
or
or
cli
ret
cmc
adc
xchg
cmp
scas
inc
mov
test
out
and
lcall
stc
sbb
jge
mov
decl
lcall
and
push
popa
out
adc
mov
push
sar
xor
mov
adc
pop
xchg
es
andb
lcall
cmp
outsl
lahf
popa
sbb
nop
sub
gs
mov
pushf
sbb
pop
ds
pop
jne
jmp
cmp
shl
inc
pop
and
repnz
btrl
das
push
jle
scas
sub
cmp
dec
sub
fisubrl
push
pop
je
cmp
lcall
mov
into
and
roll
push
sbb
aam
pushf
push
mov
mov
mov
mov
mov
negb
xor
hlt
xchg
leave
or
pushl
cltd
pause
xchg
cmpsl
out
clc
xchg
movsl
in
cmpsl
pop
fldenv
rep
mov
and
sub
cld
call
rcrb
jae
push
xchg
dec
push
lock
push
scas
fcmovbe
out
stos
testl
ret
push
and
mov
pop
push
movsb
rol
movsl
enter
add
xor
xor
popf
inc
dec
jns
and
lcall
in
add
push
cmp
adc
jbe
jae
outsb
mov
xchg
in
add
dec
lcall
xorl
jb
xchg
cmpsl
lahf
xor
movsb
scas
imul
std
lods
adc
add
orb
popa
cmpsl
inc
pop
dec
loopne
sbb
push
jmp
inc
push
push
jge
xchg
mov
cld
jg
and
and
xlat
ret
leave
imul
mov
pop
stos
mov
arpl
je
out
adc
lret
andb
out
adc
ja
hlt
scas
andb
or
enter
mov
cmc
mov
and
pop
inc
pop
inc
jg
cmp
shll
xchg
jg
inc
and
inc
clc
adc
dec
cwtl
mov
sbb
cwtl
or
out
insb
push
cmp
push
inc
das
leave
xchg
mov
cltd
jbe
aam
mov
outsb
push
fs
ljmp
push
fcompl
inc
push
clc
lods
jecxz
cmp
mov
out
pavgw
mov
js
sbb
and
cs
sbb
cmpsl
pop
in
push
pop
cmp
xor
popa
inc
fdivs
lcall
rcrb
jmp
fsts
mov
cld
imul
popf
add
xor
dec
or
lret
add
xor
popa
addr16
jl
sub
ds
jb
cmp
cmc
add
std
sub
jmp
aad
dec
das
mov
ljmp
mov
inc
xchg
outsl
and
mov
repnz
cmpsb
mov
fdivl
mov
imul
fidivl
int3
and
push
stc
dec
bound
out
lds
add
add
xchg
inc
mov
ret
insl
shrb
fdivl
aam
test
or
shrb
es
mov
ss
xchg
inc
mov
dec
scas
sarb
stos
popa
scas
nop
mov
pop
sahf
push
pop
lock
pusha
cltd
add
adc
or
gs
or
mov
scas
lcall
inc
rcll
popa
cmp
xor
test
mov
adc
out
mov
sbb
pop
testl
adc
ljmp
ds
jl
inc
mov
pop
imul
aaa
lahf
mov
clc
inc
adc
lock
inc
ljmp
cld
xor
cwtl
push
jl
or
into
mov
imul
insb
jg
push
pushl
pushl
test
xchg
xchg
jo
add
enter
cli
cmp
push
fsts
hlt
jno
lock
call
lret
adc
push
push
mov
rol
sbb
jns
lahf
es
xchg
mov
aad
outsl
out
decl
data16
sub
das
cltd
cmp
out
in
stc
jb
xchg
lret
jecxz
push
orb
out
int3
dec
xchg
aas
orl
sbb
xor
test
push
out
xor
addl
push
decl
lods
jecxz
loop
dec
push
xchg
andl
icebp
in
mov
or
add
or
mov
or
incl
loopne
push
mov
popa
icebp
push
out
xor
cmp
push
mov
sub
fists
addr16
pop
cld
cmp
cmp
lds
testb
jle
inc
mov
push
arpl
xchg
ficoml
das
xor
jo
add
fcomps
aaa
add
rorb
inc
jae
inc
fldcw
lret
xchg
imul
dec
or
gs
dec
rclb
mov
and
pushl
rcrl
sahf
insl
sub
xor
adc
lods
aam
mov
xor
jae
sbb
fists
pop
fwait
xchg
popa
pop
lcall
jecxz
mov
addr16
in
mov
xchg
pop
mov
decl
jae
dec
insb
loopne
pop
pop
pop
pushf
push
mov
xchg
dec
jne
fistl
bound
lret
dec
fsubrs
pop
aaa
scas
and
mov
mov
lods
das
mov
cmp
dec
dec
xchg
in
mov
jns
call
adc
push
dec
pusha
cmp
clc
and
mov
vcvttps2dq
adc
bound
cmc
pop
mov
test
push
ret
loopne
sub
xlat
inc
jl
and
rolb
and
xchg
jnp
push
xor
adc
mov
dec
add
dec
pop
enter
fbld
jecxz
bound
jns
dec
leave
sbb
xchg
xchg
daa
fisubs
ret
sbb
stos
adc
cli
incl
jmp
call
push
pop
ljmp
adc
data16
decl
mov
pushf
add
ret
pop
jb
aaa
xchg
int
and
inc
xchg
in
pop
pop
pushf
pop
and
jmp
sub
and
add
test
loop
out
mov
pop
dec
pusha
into
xchg
and
int3
jo
imul
add
add
lcall
js
cmpsl
test
dec
divl
sbb
xor
jno
enter
clc
outsb
clc
pusha
dec
movsl
imulb
push
jl
sbb
push
sbb
dec
lods
inc
mov
in
add
xchg
ret
mov
mov
js
sbb
sbb
dec
shlb
push
xchg
push
shl
shrb
or
mov
mov
xor
mov
jg
aas
dec
in
ljmp
test
mov
mov
enter
mov
outsb
cmp
int3
and
cli
jo,pn
bnd
pusha
int
fs
and
cmp
adc
mov
jge
jmp
outsl
adc
adc
gs
mov
dec
outsb
jmp
sbb
js
lods
imul
call
adc
hlt
dec
shlb
mov
jle
ja
mov
mov
rclb
ljmp
test
sub
repz
shlb
fbld
lcall
daa
pop
repz
dec
std
adc
dec
cmp
mov
scas
in
adc
dec
mov
arpl
in
inc
mov
adc
push
inc
dec
jg
repz
mov
imul
loop
jae
insb
push
push
lahf
hlt
lds
and
push
mov
adc
movnti
and
jae
jno
mov
ljmp
jecxz
xchg
call
dec
xchg
out
test
int3
push
xchg
pop
and
lds
mov
mov
aas
cld
insl
lret
mov
rcrl
sub
xchg
popa
scas
or
mov
inc
jecxz
cmpsb
mov
adc
mov
cmc
or
sbb
test
pop
inc
xchg
aad
cltd
sub
rorb
jge
scas
push
test
dec
out
es
test
movsb
xchg
mov
inc
sbb
in
mov
jmp
scas
pop
movsl
pop
jge
stos
sbb
lret
sbb
stos
scas
jne
dec
sub
add
lcall
adc
mov
stos
push
call
push
mov
add
sbbb
add
mov
jg
stc
fwait
adc
sahf
iret
das
sti
xchg
insb
pop
pop
cmp
pop
loopne
loop
call
loopne
xchg
mov
repz
cltd
mov
das
pop
xlat
fcoms
inc
xchg
or
pushl
std
scas
ret
data16
xchg
xor
int
lods
nop
loopne,pn
aaa
jp
mov
sub
ljmp
adc
pusha
xchg
jbe
jb
loop
xor
dec
xor
inc
out
pushl
outsb
shrb
push
push
xchg
scas
outsb
and
pop
out
pushf
dec
mov
repnz
push
jecxz
lcall
push
movb
cltd
pushf
mov
popf
out
movsl
xchg
fnstsw
inc
inc
dec
hlt
shrl
andb
lock
or
xchg
cmp
lahf
ficomps
fnstsw
and
mov
pop
hlt
pop
call
pop
push
testb
lods
test
loop
cmpsl
aam
clc
lahf
out
inc
cmp
dec
mov
fdivs
xor
aam
pop
into
loop
ret
and
inc
incl
and
sub
mov
push
jge
aaa
cmp
and
lcall
cmpsb
je
push
push
pop
dec
loopne
ret
repnz
inc
mov
in
fcoml
pop
jns
ljmp
out
and
lcall
fs
cwtl
fwait
push
push
mov
hlt
lretw
aam
mov
std
jg
dec
addr16
or
xchg
out
mov
push
dec
ja
stos
gs
lods
incl
fistps
jle
jg
int
push
and
stos
sbb
adc
adcl
fnstenv
rcll
sub
cmp
pop
fwait
and
ja
lods
push
scas
imul
push
into
shll
incl
movsl
lret
pushf
sub
or
outsl
xchg
mov
sarl
cmp
jge
iret
sbb
jp
adc
or
rclb
sti
sbbb
push
push
fisubl
and
xor
loopne
push
stc
sub
int3
adc
lcall
jl
adcb
cmpsb
nop
or
sub
data16
jmp
push
jmp
xchg
jmp
pop
lcall
push
mov
and
cmp
pushf
lahf
pop
inc
pop
push
lods
jae
dec
sub
lret
sub
sar
lcall
jb
insb
adc
adc
lea
enter
leave
lcall
repz
int
cmp
cmp
push
hlt
in
mov
addr16
mov
loop
loopne
jmp
mov
xchg
movsb
lea
aas
ds
sahf
xor
jg
pop
add
sti
in
clc
sbb
pop
popa
add
ja
xchg
xchg
adc
pop
jb
call
fldcw
push
jnp
test
adc
pop
jb
leave
and
mov
pop
stos
mov
cmpsl
jbe
add
fwait
inc
fs
sti
cmp
xchg
mov
xchg
sub
pushf
fdivs
mov
mov
leave
and
ljmp
push
shrb
lds
add
and
cmpb
daa
scas
or
mov
pushl
dec
xorb
into
out
cmp
popf
fsubrs
sub
lcall
mov
dec
movsl
daa
fidivs
fnstcw
push
ficoml
sbb
mov
inc
cmp
clc
cmp
sub
sub
jb
mov
je
sub
inc
out
mov
lods
enter
push
lcall
rclb
bound
xlat
xchg
jmp
ja
sbb
jo
ss
mov
cmp
jmp
adc
pop
fdivrp
pop
add
pop
add
mov
jmp
movsb
shll
mov
sti
daa
in
add
into
jge
mov
lcall
jnp
xchg
and
mov
fldenv
fs
jmp
mov
mov
inc
mov
int
jecxz
dec
sahf
fdivs
add
jns
scas
add
daa
sahf
push
repnz
jne
jns
rclb
das
mov
push
lcall
sub
cmp
repz
cmp
jl
jns
jo
and
sub
loopne
push
dec
cli
ja
mov
hlt
in
cwtl
in
icebp
mov
fisttpll
mov
out
add
stos
adc
or
stos
fs
and
add
xchg
xor
lcall
jge
push
ds
sub
mov
jbe
inc
fldt
push
popf
divb
fisubs
decl
scas
xchg
push
push
lahf
mov
sbb
xchg
sub
push
pusha
jle
pop
incl
aaa
outsl
and
mov
jo
movsb
mov
fs
xor
sub
lods
les
imul
ljmp
scas
jae
insb
mov
hlt
xor
in
out
inc
sarl
loopne
cli
ret
aaa
mov
lods
jg
cli
mov
sbb
xchg
push
bound
fwait
xor
stos
subl
add
add
pushl
flds
inc
jno
adc
jmp
xor
and
and
pop
cld
mov
sbb
pop
out
xchg
fmull
sbb
lret
movsl
cmpsb
gs
and
mov
out
fidivs
sbb
fstl
in
sbbl
pop
fistl
pop
jno
or
or
jns
push
or
mov
ss
shlb
test
dec
dec
jg
adc
aad
icebp
jmp
pop
sti
dec
and
jg
xchg
and
inc
dec
jmp
pop
pop
rcrb
mov
decl
stc
ja
inc
leave
push
stos
ret
std
fildll
pop
pop
fwait
mov
bound
jae
sti
out
imul
jecxz
popa
cmp
repz
lcall
push
out
fwait
xchg
pop
sbb
imul
cmpsl
roll
jb
lea
xchg
mov
push
mov
xchg
lods
clc
in
xor
clc
insb
das
testl
dec
fwait
inc
bound
decl
mov
dec
xor
je
cli
dec
scas
dec
repnz
jno
mov
mov
jne
xchg
push
cmp
std
jg
in
test
mov
test
or
mov
ljmp
pop
dec
adc
push
jbe
hlt
dec
stos
xor
movsb
mov
inc
mov
cmc
lcall
iret
addb
push
jecxz
or
cld
inc
test
xchg
stos
sub
rcl
mov
in
xchg
in
xchg
rorl
inc
fmull
ss
stos
cmovge
mov
jmp
jg
ljmp
cs
xchg
idivb
cmp
and
daa
loope
rol
mov
sub
cmp
xor
out
aaa
fists
rcl
test
ljmp
xor
leave
xchg
nop
xor
jge
int
cmp
dec
jb
mov
sbb
stos
sub
dec
dec
notl
repz
mov
loop
and
cmp
xchg
xchg
xchg
fadd
xor
push
jmp
pop
cmp
popf
pushf
xchg
mov
dec
insb
xchg
insb
int3
mov
dec
das
sub
ficoml
fmulp
sar
lock
mov
gs
xor
jae
mov
push
and
adc
aaa
enter
mov
ret
mov
xchg
add
pushl
daa
sbb
mov
inc
out
sub
jmp
push
cld
or
out
and
xor
jne
mov
pop
or
fwait
xor
ljmp
mov
adc
cmpsb
dec
dec
mov
fs
push
icebp
aam
insb
push
dec
mov
or
push
mov
iret
pop
add
outsb
ret
add
ljmp
ja
fistpl
ucomiss
mov
cmp
out
cmp
xor
sbb
cli
lea
inc
xchg
mov
jne
dec
sub
cs
sbb
std
mov
push
mov
mov
hlt
leave
rcll
jns
push
lds
dec
mov
subb
push
xor
cmp
xchg
in
push
popf
lods
jo
sub
lods
push
in
ljmp
in
pop
adc
outsl
fisubrl
popf
test
pushf
pusha
fcomip
incl
clc
rolb
daa
notl
ja
pop
mov
and
movsb
dec
cmp
add
mov
lret
ljmp
out
mov
or
insl
or
icebp
jg
sbb
jmp
fsubs
jnp
mull
outsb
or
lods
dec
xor
mov
fistps
es
lock
push
lods
test
aas
test
sub
xor
aas
leave
push
lahf
cld
inc
mov
xchg
cmp
orl
cmp
loop
inc
jbe
and
jno
jge
daa
out
pop
or
shl
adc
pop
sub
scas
clc
out
daa
je
in
fcomi
sarb
cmc
mov
push
lods
cmp
sub
jmp
lods
xchg
aaa
cmp
sub
fisttpl
sub
pop
jb
pop
in
push
cltd
int
lahf
push
mov
dec
and
int
mov
lods
int
mov
jecxz
add
pop
imul
ss
mov
ret
lret
jg
pop
je
jb
mov
aaa
jl
cwtl
jo
sti
dec
push
aaa
insl
and
dec
clc
cmpsb
jo
sbb
call
in
or
xor
mov
dec
stos
into
insb
push
scas
mov
stos
jl
add
ljmp
lods
pop
hlt
inc
stos
sarb
shrl
ss
aad
jg
shrd
decb
mov
mov
push
sahf
sub
and
dec
clc
call
stos
sub
sarb
dec
push
xchg
test
pop
std
pusha
incl
cld
push
test
aaa
pop
into
inc
sbb
push
mov
sub
dec
push
test
push
inc
int
add
lahf
pusha
fisubl
in
dec
push
sub
mov
decl
pusha
out
xor
test
imul
push
inc
xor
dec
adc
jne
add
jmp
mul
leave
xor
es
fbstp
imul
jmp
push
sbb
xor
lods
mov
jno
push
rcl
lea
outsb
and
dec
aad
cmp
scas
push
in
popf
mov
loop
call
add
in
out
jp
xchg
clc
out
in
outsl
jecxz
jge
push
dec
jecxz
ljmp
je
stos
shll
sbb
jo
or
pop
xor
lahf
daa
dec
jmp
es
rclb
dec
jmp
daa
sub
dec
fisttps
lods
mov
lahf
lret
stos
loop
xchg
mov
ljmp
fwait
push
push
cli
xchg
push
sub
or
sub
cli
ds
mov
icebp
sbb
jae
mov
inc
lret
xchg
mov
adc
aaa
push
push
cli
push
pop
lock
mov
mov
mov
mov
mov
ljmp
xor
ja
xorl
push
repnz
in
clc
or
call
and
xchg
leave
mov
cmpb
add
mov
aaa
pop
ret
pusha
push
lret
imul
add
push
mov
inc
stos
inc
and
testb
lock
mov
add
jmp
arpl
sub
shrb
mov
and
mov
xor
jg
mov
fwait
leave
cmp
loopne
movsb
test
fnstsw
sub
dec
push
test
clc
pushl
cwtl
adc
push
jge
ret
xor
loope
xchg
insl
in
loopne
out
jl
xchg
rol
scas
xor
or
and
jle
loopne
mov
xor
jns
out
std
cmp
je
inc
outsb
out
stos
inc
into
jle
enter
mov
jp
enter
mov
sub
jg
add
cmp
cltd
push
fadds
pusha
adc
subb
lcall
andl
mov
sub
popa
adc
dec
xor
pushl
stc
add
es
mov
xchg
clc
sarb
xlat
test
hlt
arpl
jno
je
out
aaa
add
adc
push
sbb
dec
jnp
movsl
subl
popa
pop
in
icebp
ljmp
movb
test
mov
sbb
mov
mov
add
retw
inc
cmpsl
lret
xor
xchg
cwtl
adc
cmp
incl
pop
sub
out
lret
cli
dec
shr
mov
mov
jle
out
xlat
cmp
negl
mov
dec
ljmp
lods
pop
inc
test
add
sub
xor
mov
xchg
dec
std
jp
ljmp
jmp
insl
jb
jl
cmp
test
enter
pop
pop
popa
cmpsb
push
sarb
jg
pushl
and
idivb
jmp
sbb
or
sub
ds
and
jne
aaa
rol
ljmp
xlat
or
dec
and
test
bound
sub
ljmp
cmp
sub
mov
stc
sbb
ljmp
push
mov
push
mov
pop
in
cmc
or
cli
arpl
xor
out
jnp
cmp
decl
dec
jp
mov
add
andb
call
add
andl
addb
add
xchg
and
add
rolb
cmp
enter
push
in
or
cmp
das
push
jge
cmpsl
ljmp
pop
xchg
imul
cmpsl
test
aaa
imul
imul
cmpsb
leave
movsl
stos
imulb
gs
stos
dec
xor
sub
test
cmpsl
sbb
test
xchg
mov
fildl
je
mov
iret
inc
cltd
lods
jg
jg
mov
add
pusha
adc
mov
into
jnp
inc
loopne
frstor
push
out
push
or
jmp
nop
inc
adcb
mov
and
iret
jnp
jnp
xor
arpl
mov
and
les
mov
in
mulb
mov
decl
push
pop
pushf
dec
and
lahf
insl
daa
and
mov
dec
mov
out
mov
sahf
arpl
jae
ds
mov
lahf
popf
sbb
in
adc
sbb
fsubr
push
jge
jl
push
loop
jg
mov
or
ja
push
dec
lcall
aas
xorb
ficoms
fnstcw
orl
push
decl
ljmp
loopne
jno
bswap
xlat
cwtl
push
add
fnstcw
stos
call
mov
decl
aad
xor
int3
jnp
es
popa
dec
lea
dec
xchg
sbb
mov
js
sbb
or
mov
lcall
mov
and
sub
pop
push
hlt
push
lret
gs
xorl
aam
cld
jns
pop
sahf
sbb
fdivs
cmp
pop
mov
mov
pop
lods
push
into
jb
push
les
jmp
dec
lret
adc
pop
sbb
adc
filds
in
repz
mov
or
decl
mov
clc
ss
mov
fdivrs
fdivrs
jo
frstor
dec
js
xchg
dec
or
lcall
imull
adcl
mov
pop
sahf
mov
stos
mov
repnz
mov
or
add
imul
inc
dec
mov
lcall
push
or
mov
mov
das
int3
pop
nop
fwait
in
adc
pop
pop
xchg
mov
les
xor
ljmp
sbb
lret
mov
out
mov
mov
popa
add
es
jne
cmc
or
mov
aad
in
push
jmp
mov
push
mov
scas
dec
mov
push
dec
push
pop
scas
push
xlat
and
scas
ljmp
mov
cmp
push
jae
mov
cmp
out
xchg
test
cmpsb
stos
mov
jns
cli
ljmp
cmp
outsl
xchg
into
jp
ds
or
mov
xchg
ljmp
out
rcll
repz
mov
pushl
out
jmp
fisttps
ljmp
shlb
cmp
das
in
mov
jo
jge
inc
mov
push
pop
ja
ret
insb
pop
js
out
push
fldenv
in
loope
sbb
push
sub
mov
push
mov
daa
xchg
scas
mov
shl
mov
aad
movsb
hlt
jmp
pop
je
inc
xor
mov
add
push
shrl
mov
addb
adc
addl
or
out
and
decl
mov
or
mov
cmp
mov
rcrb
mov
mov
pop
mov
imul
mov
push
dec
out
mov
xchg
pop
xor
or
jl
adc
scas
je
shlb
ret
sbb
push
xor
dec
add
cmp
data16
adcl
pop
and
sub
jbe
mov
mov
mov
call
out
pop
out
daa
jp
mov
pop
stos
or
mov
pop
push
mull
mov
jmp
dec
inc
sbb
dec
popl
sub
iret
pop
sub
mov
pop
mov
and
cmpsb
xchg
xchg
push
push
jp
xchg
or
cld
mov
ljmp
inc
adc
loope
mov
jb
adc
mov
pop
insb
cmp
pushl
or
lea
stos
mov
pop
mov
sar
mov
sub
cmc
aaa
iret
dec
popf
jl
lods
fistpll
rclb
lock
fmul
cltd
dec
push
pop
or
lret
int
loope
xchg
pusha
push
lock
das
adc
inc
and
mov
push
dec
mov
call
jge
loop
push
cli
xchg
pop
mov
js
mov
fsubrs
sbb
outsb
pop
push
push
mov
xor
sti
mov
mov
fnstsw
fistl
adc
jnp
cmp
nop
inc
push
adc
dec
roll
ds
dec
xor
leave
push
cmp
jmp
cmpsb
stos
test
jmp
push
inc
push
flds
inc
mul
inc
inc
push
int
mov
mov
and
leave
and
in
incl
dec
pop
cmp
adc
cmc
xor
cmp
retw
cli
js
stos
ljmp
sbb
push
jne
mov
jo
sahf
cmpsb
in
push
ret
cmp
insl
leave
sti
aas
jl
pop
jmp
sub
rolb
clc
add
sbbl
outsb
leave
jnp
int3
sbbb
out
add
fiadds
pop
subl
pop
cltd
shr
faddl
xchg
sbb
dec
fsubp
loopne
xor
mov
mov
rorb
rcll
jmp
cmc
jmp
js
int3
std
mov
in
insl
xchg
or
xchg
sub
push
lret
jle
das
jp
inc
fcomps
push
ss
mov
push
or
add
pop
jnp
push
clc
add
mov
sar
outsb
jle
sbb
sbb
adc
and
loopne
mov
cmp
pop
add
and
in
pushl
pusha
pop
faddl
ja
lahf
loopne
out
dec
fisubrs
xor
dec
and
fadds
pop
shll
addb
lock
test
mov
dec
push
lcall
dec
cld
mov
add
sbb
ret
mov
mov
xor
pushf
push
mov
adc
fisubs
daa
mov
inc
imulb
pop
mov
pushl
push
insl
dec
call
xor
inc
inc
lret
out
add
addr16
add
jg
ds
xor
lea
ljmp
pop
mov
xchg
pop
mov
pminub
movsb
cs
lahf
rclb
loop
push
std
add
sub
cltd
imul
fsubl
and
pop
imul
xchg
call
and
pop
mov
inc
xchg
sbb
ss
jns
out
pop
lods
xchg
inc
fs
cmpsb
bound
stos
fcmovnb
mov
inc
mov
cmovae
ljmp
scas
adc
inc
stos
inc
pushf
xchg
pop
ja
ficoml
movsl
stos
sub
ljmp
outsb
pop
add
mov
jbe
push
mov
push
movsl
pushl
inc
stos
mov
pushf
jne
sbb
jge
out
sbb
ret
mov
dec
loop
jle
aam
test
cltd
rcrl
and
push
lock
fldt
push
push
adc
cmp
pop
stos
pop
inc
dec
mov
rolb
lret
cwtl
les
repnz
pop
gs
fidivrl
test
pop
dec
std
jmp
xor
pop
clc
shr
dec
lret
xchg
mov
adc
ljmp
cmp
push
outsl
cli
adc
xchg
aas
jbe
push
push
xor
push
insl
cmp
jg
jmp
mov
add
pop
add
pop
jnp
int3
test
stos
decl
cmpsl
or
and
rcrb
popa
jg
loope
lods
fldcw
loope
insb
loopne
bound
mov
mov
sbb
pop
fcmovb
and
mov
andl
inc
pop
dec
call
lods
dec
mov
mov
es
jno
fidivrs
leave
imul
jl
stos
sbb
in
xchg
push
incb
iret
sti
mov
pop
je
and
decl
lcall
test
arpl
dec
imul
and
mov
sub
cmpsl
xchg
dec
bound
and
xor
fimull
leave
push
cmp
lcall
fwait
cmp
jg
sbbl
jmp
xor
out
cmpsb
cmp
push
sub
into
fadd
test
or
cs
incl
clc
push
hlt
mov
aam
lods
sti
in
leave
mov
mov
fwait
pop
or
and
mov
into
pop
out
inc
cli
lcall
nop
ljmp
add
push
aam
xchg
cmpsl
rclb
sub
cmp
lcall
hlt
lcall
jl
pop
ficoms
mov
sub
decl
out
sbb
jecxz
pop
mov
xchg
dec
inc
sub
jo
fsubrp
mov
pop
lods
shl
push
out
mov
cmp
into
inc
lcall
incl
lret
push
pop
and
sbb
popf
lret
into
into
out
in
into
pop
iret
out
fnstenv
std
pushf
fdivrs
xchg
aam
jbe
mov
push
lcall
push
leave
movsl
lods
add
call
and
mov
or
adc
mov
call
cmp
xor
push
sbb
fdivrs
test
jg
jbe
lahf
jg
jg
fistpll
xchg
xchg
add
decl
pop
shll
shll
addr16
in
add
xchg
out
dec
mov
btr
imul
add
xchg
and
fnsave
cmc
call
sarl
push
xor
xchg
cwtl
sbb
push
lret
call
and
push
add
xchg
xlat
or
and
add
xchg
enter
inc
aaa
call
jmp
inc
aad
stos
fildl
sbb
push
das
and
bound
jbe
ljmp
cli
pushl
and
or
lea
ss
dec
xchg
imull
add
pop
adc
sbb
sub
dec
clc
dec
sti
fildl
adc
cmp
lock
clc
cmp
sbb
mov
lret
enter
xchg
inc
fcmovnb
and
aas
sub
add
mov
lock
enter
int3
mov
xlat
inc
jo
pop
pop
out
inc
scas
jmp
shl
sub
mov
stc
pop
outsl
aam
or
fistl
inc
imul
clc
mov
decl
pop
movsl
add
mov
adc
jbe
sbb
lret
repnz
cmpb
add
call
rol
stos
sub
adc
mov
outsl
add
sbb
rcrb
xchg
in
loopne
xchg
or
sub
xchg
pop
inc
mov
bound
mov
ja
cli
xchg
lods
jmp
aam
dec
pop
mov
into
jbe
inc
or
cmpsb
xor
out
sahf
push
faddl
cmp
sarb
mov
imul
or
cmp
jmp
je
xchg
fcomi
in
xchg
pushl
and
add
ss
imul
add
xor
int
xchg
pop
push
mov
daa
pushf
and
subb
jmp
inc
sbb
or
in
hlt
imul
stc
jns
sbb
mov
jp
loop
or
jne
mov
mov
arpl
je
cmpb
hlt
lahf
pop
cwtl
loop
sub
mov
jmp
mov
jp
in
inc
push
adc
std
jge
cmc
pop
icebp
pop
add
push
fldenv
mov
sbb
ljmp
jg
fnstsw
mov
mov
add
subb
ficompl
enter
ljmp
dec
icebp
pop
xor
popa
dec
stos
mov
push
mov
pop
lahf
pushf
or
sub
adc
loopne
sbbb
clc
lret
adc
ret
pop
icebp
in
sbb
cmp
subb
ds
rcrl
push
add
cmp
cmp
stos
movb
mov
add
xor
ja
daa
lret
lods
jl
dec
xchg
incl
rolb
je
nop
mov
mov
dec
ljmp
jmp
mov
loop
cld
inc
xor
xchg
ljmp
add
outsl
xchg
das
scas
mov
cld
sbb
repnz
data16
or
mov
fsub
dec
adc
and
in
push
and
test
imul
aaa
inc
add
hlt
call
orb
stos
sub
mov
xor
outsb
xchg
pop
ss
ljmp
mov
jmp
jns
leave
push
ja
cmp
lods
cmp
jmp
sarb
decb
mov
popa
out
push
inc
repnz
mov
incl
pop
or
jmp
je
scas
or
sbb
mov
push
call
xor
decl
cld
fldl
add
lock
imul
adc
pusha
mov
ss
fsubrs
mov
ret
sub
mov
mov
lods
xchg
adc
out
mov
pushl
out
pusha
lcall
imul
mov
pop
pop
sub
ret
jbe
mov
loop
add
and
and
pushf
add
mov
sub
xor
sub
iret
dec
pop
pop
call
lds
in
iret
sbb
cld
mov
pop
daa
push
dec
dec
add
ror
mov
xchg
rcrl
inc
movsb
mov
ds
decl
sbb
or
cmp
push
or
dec
inc
push
mov
push
incl
daa
pop
mov
repz
test
jno
shrb
in
mov
iret
enter
ret
addr16
jg
adcb
sub
addl
mov
int3
je
test
ljmp
iret
test
fs
lea
icebp
add
or
nop
mov
stos
cmp
fs
cld
cmc
fwait
xchg
mov
mov
mov
pop
sbb
mov
scas
movaps
push
decl
imul
aad
testb
adc
mov
jmp
setp
enter
ret
xor
mov
sahf
aad
in
clc
pop
jne
mov
or
xchg
repnz
shll
sub
and
pushl
std
jmp
enter
gs
loop
jmp
jmp
xchg
add
test
repz
lods
imul
mov
nop
ljmp
lods
int3
lret
es
pop
or
mov
out
mov
push
jle,pt
incl
push
out
xchg
sbb
adc
aam
xchg
mov
push
bound
mov
pushl
leave
mov
sub
into
rorb
mov
mov
rorl
adc
xchg
sar
int
mov
fwait
lea
mov
adc
jmp
cwtl
divl
and
mov
lret
mov
stc
mov
inc
mov
inc
mov
xor
incl
loop
jge
les
lret
lcall
lea
pop
ljmp
jmp
lahf
inc
jg
xchg
jp
in
fcmovb
ss
decl
mov
bound
and
popa
out
decl
imul
dec
jecxz
pushf
xor
ret
je
scas
sub
push
pop
push
dec
lahf
and
ja
rcrb
sbb
lret
add
pop
aam
sahf
cmp
dec
call
sahf
inc
add
adc
rorb
pop
mov
cmp
push
in
loop
jae
push
push
cmp
xchg
mov
mov
repz
ret
push
mov
fiadds
sbb
out
push
jnp
xorb
decb
jo
pop
enter
das
jo
jb
pop
and
add
sbbl
push
pusha
movl
add
int
enter
mov
mov
add
stc
jle
xchg
std
jp
mov
add
pop
clc
add
push
cmp
or
cmpb
out
aas
jle
inc
outsb
add
je
arpl
jb
gs
sti
xlat
push
sbb
imul
and
push
fisubrl
jne
sbb
jo
outsb
imul
adc
bound
outsb
outsl
loop
out
insl
iret
ja
fbld
push
push
add
out
mov
sub
jns
mov
cmp
jne
sbb
out
stc
mov
push
jo
data16
daa
fiadds
adc
out
popa
dec
popa
mov
imul
mov
jae
sub
sub
sbb
ss
je
imul
add
clc
lock
insl
jbe
mov
aaa
jo
pop
cmpsl
scas
mov
adc
jnp
adc
push
ds
imul
adc
shl
bound
fs
xchg
sbb
ja
dec
mov
jae
jg
jecxz
shrl
add
out
out
pusha
lock
inc
jo
mov
pop
xchg
dec
adc
outsb
pop
lock
addr16
insb
push
ja
cmp
xor
je
insb
cmpsl
adc
lods
push
mov
add
xor
dec
fistps
push
gs
mov
push
pop
out
mov
outsl
sbb
jbe
pop
xchg
or
jbe
or
aas
pop
aad
mov
inc
and
stos
popa
aad
jnp
jae
and
aaa
clc
fdivs
ja
and
subl
push
outsl
fdiv
mov
cmp
jo
arpl
jae
push
mov
push
lock
je
dec
lcall
jnp
cs
xorl
movl
jbe
and
push
xchg
sub
pop
fdivrl
faddl
jmp
adc
jecxz
push
notl
addr16
scas
or
je
cs
icebp
repz
pop
pop
outsl
pop
or
inc
or
into
loope
cmp
ljmp
xchg
mov
dec
mov
jb
mov
adc
sbb
shll
jo
imul
sub
inc
inc
dec
dec
push
jb
repz
sub
xlat
roll
outsb
fists
push
pop
bound
adc
aas
mov
arpl
jae
jbe
insb
inc
call
or
push
mov
and
imul
cmp
pop
adc
sbb
dec
jnp
dec
xor
inc
loopne
sub
sub
movhps
negl
dec
inc
icebp
arpl
and
inc
sbb
and
adc
mov
imul
dec
adc
pop
out
inc
pop
sub
push
dec
sahf
push
ret
add
out
test
scas
dec
pop
push
pusha
sbb
jb
sbbb
ret
mov
push
cmp
pop
cmpsl
ror
adc
loope
imul
mov
pop
icebp
jmp
sbb
ss
outsl
mov
shll
mov
push
pop
ja
xor
add
inc
mov
je
ss
shll
sub
mov
aad
xor
cmp
jne
add
inc
jmp
add
arpl
notl
sbb
adcb
adc
pop
stos
adc
ret
xlat
pop
test
sbb
mov
shlb
repz
fistl
add
outsb
cmp
stos
mov
cmpsl
and
sub
sub
mov
pop
imul
or
out
mov
out
mov
fidivrs
and
jg
cmp
mov
arpl
pop
iret
pop
dec
fwait
stos
mov
stos
mull
jnp
je
pop
mov
add
inc
xor
stos
adc
push
add
aad
add
imul
jmp
out
sub
jno
pushl
shll
lock
inc
xchg
jne
push
popa
cmp
xorl
xchg
in
stos
jo
pop
adc
or
inc
xor
aas
mov
imul
imul
scas
jecxz
out
sbb
push
pop
das
mov
and
imul
push
mov
and
and
mov
addb
mov
and
and
fldenv
mov
dec
dec
mov
or
das
ds
jg
data16
shlb
xchg
movsl
or
imul
adc
outsl
pop
stos
dec
or
adc
rorb
push
imul
ljmp
stos
mov
mov
ret
imul
adc
aam
shrl
sti
arpl
jo
xor
ds
adc
outsb
sub
out
push
scas
add
push
jecxz
mov
push
push
ljmp
pop
xor
test
dec
push
rclb
jns
fwait
add
dec
es
and
cs
sbb
adcl
ficoml
rcr
adc
pop
xchg
or
xchg
nop
adc
int
push
test
and
cmp
push
adc
cli
inc
leave
xchg
pop
add
mov
fnsave
add
and
mov
int
push
dec
sub
adc
sub
xor
adc
ss
aam
into
cmp
ja
xchg
mov
mov
test
adc
adc
rcl
aad
or
pushl
xchg
push
aas
rcl
insb
sbb
fldl
imul
dec
push
aam
in
lret
sbb
sbb
lods
pop
decb
push
add
inc
in
jmp
jg
mov
xchg
je
jecxz
or
mov
push
outsb
cwtl
push
js
mov
dec
fwait
sar
mov
xlat
imul
dec
or
sub
adc
outsb
fistpll
push
adc
repz
cmpl
jnp
sub
jp
pop
add
imul
cmpsb
jae
andb
out
imul
lods
test
popa
mov
pop
push
in
call
sub
cmpsb
and
shr
inc
pushf
dec
std
orb
cs
nop
push
xchg
or
filds
mov
loopne
ror
ficompl
rcll
shlb
lods
loope
adc
dec
xor
mov
pop
xor
inc
add
and
add
inc
pop
push
or
or
push
mov
mov
test
or
ljmp
sub
adc
adc
sub
ss
and
ljmp
data16
inc
sub
or
das
xchg
jecxz
jae
divl
aaa
or
sub
push
add
pushl
in
pop
or
dec
dec
sbb
mov
mov
aaa
aam
push
mov
mov
and
cmp
cltd
mov
mov
adc
daa
add
mov
adc
mov
jg
jg
lock
mov
mov
mov
mov
and
or
add
cmovs
iret
jmp
out
pop
and
rcrb
int3
scas
sub
int
call
nop
leave
mov
scas
in
cld
out
cmp
ss
in
mov
adc
call
add
fldenv
data16
fisttps
mov
mov
jg
inc
xor
add
movsb
stc
cmp
mov
inc
push
inc
jg
dec
push
es
push
pop
adc
sub
int
lahf
or
jmp
jne
rorb
nop
and
call
clc
test
mov
cmpsl
ret
ljmp
loope
shrb
mov
xor
incl
and
mov
inc
xchg
mov
jno
cmpsb
ficompl
ja
mov
pop
sarl
test
mov
add
cmpsl
in
xor
jo
adc
pop
or
insb
imul
je,pn
push
or
jg
or
idiv
div
or
or
push
mov
adc
push
inc
pop
sbb
sbb
call
pop
shrl
adcb
sarb
and
sub
xor
jecxz
and
and
dec
dec
dec
dec
lcall
arpl
jnp
stos
push
lret
adc
xchg
jnp
pop
pop
iret
xorb
in
mov
lcall
fmuls
int3
or
lock
lcall
push
jp
rolb
push
mov
sub
push
push
negl
cmp
call
ljmp
lock
in
xchg
sbb
add
es
cmp
frstor
mov
inc
jg
and
movb
and
je
push
adc
xchg
into
mov
inc
jbe
xor
outsl
das
pop
add
sbb
fstpl
lcall
in
daa
ds
push
adcb
dec
push
and
xor
push
fdivr
cwtl
sub
lods
jg
mov
aas
pusha
jmp
out
in
or
dec
pop
iret
in
movups
stc
dec
scas
clc
jmp
lcall
into
push
and
es
mov
and
mov
mov
push
test
enter
dec
gs
int3
mov
pop
adc
sbb
push
fst
sbb
mov
aaa
push
or
jle
inc
addr16
ds
inc
or
fs
lahf
out
push
sarb
add
pusha
sub
mov
add
popa
pop
mov
inc
cli
or
imul
ja
stos
adc
inc
fwait
aam
lock
fs
and
push
cmc
jmp
cld
pop
mov
ds
xor
cmp
push
lcall
cltd
push
test
cmpsl
cmp
cld
ljmp
lret
inc
mov
mov
pushf
aad
pop
sub
mov
loop
pushf
xchg
or
jle
mov
jno
clc
addl
xchg
push
inc
jle
add
add
jg
mov
add
inc
add
hlt
pop
mov
lock
add
incl
xchg
sbb
les
test
ss
xchg
sub
incl
mov
sub
sub
cmp
dec
scas
xor
enter
mov
jge
sar
or
and
mov
fcoml
fisubrl
lcall
jge
clc
ljmp
call
dec
into
pushl
pusha
insl
incl
pusha
addb
imul
insl
orb
movl
sahf
cmp
sbb
repnz
jae
jne
inc
int
xor
jmp
je
lcall
mov
cmp
add
movsb
dec
inc
add
fildll
inc
icebp
ret
jg
push
fs
lar
push
in
pop
imul
add
push
js
pop
adc
in
sub
add
adc
push
pop
push
push
cmpl
jg
incl
sbb
sbb
cmp
and
pop
xchg
push
sub
scas
in
pop
daa
js
int
mov
inc
cmp
imul
lds
lods
icebp
decl
pop
pop
sbb
shrl
and
cltd
das
insb
or
popf
out
loopne
jg
repz
mov
fmuls
idivl
fs
lret
push
shll
ficoms
jp
xor
lods
xchg
xor
incl
xchg
pushf
xlat
jne
and
nop
xchg
inc
stc
hlt
xchg
and
or
jle
in
mov
rcl
jle
mov
aad
cmpsl
mov
sub
jne
insb
add
popa
or
jns
cli
nop
data16
add
dec
mov
dec
adc
addb
cmpsl
int
lahf
ret
adc
mov
sub
cmpsl
push
push
adc
jbe
call
sub
push
inc
add
mov
adc
push
and
in
add
and
add
popf
pop
scas
xor
xor
in
or
add
sarl
mov
jmp
inc
cmp
fs
push
xchg
in
aad
adc
test
cmpsl
inc
in
mov
pop
jb
scas
push
es
aam
scas
std
mov
push
pop
sbb
xlat
bound
daa
in
inc
out
movsl
aaa
test
pop
push
add
adc
add
adc
mov
and
jecxz
push
add
dec
xchg
sbb
xchg
ljmp
mov
jo
mov
cmpb
mov
aad
mov
xor
es
insb
adc
aad
leave
adc
sbb
dec
cmp
cli
outsb
push
es
jp
or
add
pushf
mov
out
mov
lret
in
cmpsl
in
lahf
adc
add
ljmp
insb
popa
outsb
add
adc
jg
cltd
xor
ja
cs
inc
pop
jg
pushf
add
adc
mov
add
dec
inc
mov
xchg
nop
fnstcw
pop
and
lcall
pop
ret
rcrl
mov
inc
call
test
pop
insb
dec
push
inc
and
push
adc
add
dec
inc
iret
push
or
aas
icebp
and
add
mov
push
rclb
or
sbb
add
arpl
insb
add
and
jb
loope
and
loope
fidivs
sub
mov
mov
jg
jg
bts
add
mov
incl
cmpsl
and
xchg
ret
and
dec
repnz
jmp
stc
ss
push
jb
mov
mov
inc
incl
mov
dec
insb
movsl
adc
jbe
add
sub
data16
test
jmp
test
scas
nop
sub
mov
pop
nop
pop
mov
leave
xchg
sbb
or
rcll
enter
sub
cmp
imul
jp
push
jg
push
add
jns
pop
push
push
xor
inc
dec
fadds
inc
or
js
scas
loopne
mov
cli
push
push
pop
pop
pop
pop
push
dec
push
pop
and
jg
in
xchg
es
rorb
sub
or
and
push
leave
adcb
inc
pop
xor
push
loopne
or
or
incl
pop
loop
mov
ret
out
stos
or
out
xor
stc
adc
inc
sbb
push
aas
jl
or
push
pop
pop
pop
pop
or
clc
pop
pusha
popa
bound
ret
es
dec
and
aam
inc
add
in
cmp
imul
cmp
loopne
jb
sub
dec
adc
fists
arpl
xor
and
pop
dec
sbb
sub
es
push
xor
clc
dec
xor
push
jb
cmp
idiv
xor
in
mov
cmp
leave
test
and
sbb
jo
push
dec
js
dec
adc
xchg
inc
dec
decl
mov
ss
scas
ljmp
aam
push
push
nop
in
jecxz
adcb
adc
gs
inc
dec
pop
ret
pmuludq
sahf
lahf
push
add
scas
nop
dec
mov
aaa
mov
push
inc
roll
xor
cltd
jg
test
fidivrs
stos
imul
mov
pop
mov
or
aaa
sbb
decb
sbb
lods
inc
je
push
jge
xor
shrl
jg
lret
adc
cltd
xor
add
xchg
add
or
sbb
lcall
out
push
push
pushf
sbb
xor
sub
loope
icebp
pop
push
pop
push
xor
xlat
pop
or
inc
push
inc
out
sub
dec
js
inc
push
adc
inc
add
pushl
or
xchg
mov
and
cmp
leave
push
jmp
or
adc
or
mov
cld
fidivrl
push
pop
ds
sbb
or
gs
push
incl
repnz
cs
nop
pusha
pop
add
in
leave
or
repnz
or
xor
aaa
cld
and
sub
mov
fs
mov
add
inc
jb
lcall
roll
push
call
adc
int
push
call
or
sahf
in
xchg
inc
nop
or
add
jb
ss
dec
addl
jg
adc
mov
add
jae
inc
pusha
xchg
dec
ljmp
sub
lcall
push
neg
and
sti
dec
scas
jae
cmp
jg
popa
leave
leave
pop
roll
jmp
jbe
mov
jns
enter
sbb
sbb
adc
or
push
and
push
push
jbe
adc
mov
sub
inc
pushf
in
das
push
adc
cwtl
xor
push
clc
sbb
dec
dec
and
mov
fwait
incl
dec
sub
xor
fsubrl
push
cmp
jg
shll
arpl
adc
mov
adc
mov
lock
lahf
rcrb
rorl
pop
push
mov
push
rclb
movsb
decb
sbb
jp
je
loopne
xor
inc
cmp
xchg
inc
incl
pop
and
adc
cmc
mov
ret
xorl
sti
loopne
cs
inc
enter
sbb
daa
sub
and
inc
incl
pop
shll
mov
decl
inc
jmp
adc
push
outsl
jo
ss
jo
jg
jmp
je
int3
gs
sbb
xor
mov
repz
pop
jg
dec
inc
cmp
popa
jmp
inc
cmp
aaa
dec
xor
and
scas
and
mov
xor
cmp
pushf
std
cmp
inc
sub
jg
test
push
jb
xchg
add
sub
movsl
or
imul
add
lcall
sub
pop
lcall
adc
jmp
xor
shl
into
insl
or
loope
lock
cmp
cmp
stc
cmp
pop
aam
jmp
mov
add
jbe
jo
sub
add
stos
arpl
xchg
lods
xor
lcall
mov
scas
pop
std
mov
xlat
movsb
pop
sub
movsl
and
bound
and
test
pop
xchg
jg
pop
inc
adc
adc
lods
add
add
push
lcall
lea
sti
aaa
repz
dec
or
rclb
jl
insb
cmp
sbb
push
enter
scas
xor
sub
mov
and
xchg
mov
mov
xor
sub
sub
inc
sub
and
and
push
mov
decl
jle
push
xor
pop
pop
mov
push
pusha
popa
loope
int
or
dec
leave
adc
jle
jg
pusha
or
dec
adc
subl
push
outsl
or
jle
push
sahf
dec
cmp
pusha
mov
mov
jg
jbe
pop
and
mov
imul
das
fsubs
dec
sbb
pop
ss
pop
stos
jp
scas
jg
test
xchg
ret
add
fmull
dec
movsl
jnp
push
push
cmp
aas
xchg
push
lock
enter
jge
pop
pusha
or
cmc
jg
cmp
cmp
mov
gs
ret
inc
pushl
cld
push
mov
jecxz
ds
lock
inc
jp
push
call
dec
pop
jmp
stos
and
fs
lods
and
mov
xor
cmp
mov
inc
mov
inc
adc
iret
inc
scas
mov
mov
mov
push
jle
inc
pusha
aam
jg
jnp
pop
rcrb
and
push
push
and
or
cmpb
stc
ror
xchg
mov
fsts
xchg
pop
and
in
aad
imul
out
in
push
movsb
jge
jne
adc
jae
add
sahf
movsb
inc
shrl
sahf
add
push
mov
or
scas
cmpsl
mov
clc
mov
cld
pushl
mov
push
adc
jmp
fnstenv
xor
test
scas
cmp
cmp
pushl
stos
rorb
aas
iret
cwtl
pop
cmc
out
xchg
rcl
pop
pop
or
pushl
fs
imul
xchg
adc
jae
mov
push
sti
push
or
adc
cmc
mov
push
adc
xchg
xchg
icebp
and
jo
call
inc
push
sahf
std
xchg
sahf
push
jecxz
or
or
cmc
dec
pop
xor
xchg
push
jnp
pop
pop
push
addr16
cmp
inc
lods
xor
push
lods
ds
pop
fstps
lret
jge
jle
fst
popf
sbb
enter
dec
stc
mov
add
pop
rolb
call
mov
dec
sbb
cmpsl
push
cmp
inc
xchg
aad
icebp
adc
test
inc
cmp
and
push
lea
sti
jmp
pop
rolb
mov
mov
fs
adc
fdivrl
clts
repnz
and
mov
jae
inc
outsb
fs
and
out
jg
sub
cltd
dec
push
outsb
daa
shl
shll
xor
inc
cmpsb
nop
cmp
aas
test
dec
mov
call
sbb
dec
movsb
jp
mov
mov
jle
adc
movsl
movsb
push
and
mov
or
in
mov
stos
and
lods
add
or
fdivs
or
jo
jo
arpl
jg
push
cld
incl
mov
loopne
mov
imul
inc
xchg
dec
addr16
data16
jg
inc
inc
jg
shlb
roll
lcall
fistps
jp
mov
mov
pusha
enter
dec
mov
nop
jle
jg
scas
test
mov
jg
inc
and
add
jmp
push
decl
insb
in
shr
out
inc
ljmp
les
in
in
and
and
sub
sub
rolb
incb
lods
inc
push
jg
ja
mov
pop
xor
and
jg
daa
inc
les
jle
imul
nop
mov
adc
sub
or
bound
inc
repnz
fnsave
daa
nop
and
popa
sub
jg
incl
pushl
or
bound
cmp
mov
rcll
insl
xor
neg
xor
jle
aaa
jle
inc
enter
add
pop
push
insb
adc
mov
inc
push
sbb
mov
and
dec
add
loop
push
inc
adc
test
mov
sub
jo
jno
scas
ret
cwtl
push
jg
test
jbe
insb
xchg
and
lds
repz
ljmp
xchg
das
jg
inc
xor
incl
xor
sub
ds
xor
les
test
call
mov
mov
rcrb
fsubrs
arpl
jl
lret
movd
add
lea
dec
mov
fwait
mov
out
inc
pop
or
sahf
decl
bound
test
addl
enter
jg
hlt
dec
push
cltd
add
inc
pop
lods
or
and
imul
das
movsb
jle
shlb
adc
std
jg
adc
cmp
mov
inc
pop
repnz
insb
sbb
pop
adc
fdivrl
sti
mov
dec
pushf
loopne
mov
pushl
rcrb
jle
call
ljmp
add
add
outsb
in
dec
dec
or
mov
stc
push
push
push
xchg
mov
jle
jbe
pusha
popa
inc
cmpsl
popa
cld
and
sbb
lea
mov
int
inc
cmpsb
fisttps
jge
pushf
inc
add
jg
jge
add
or
aas
dec
fisttpll
fistpll
lds
pop
int3
xor
repnz
mov
adc
and
push
mov
adc
outsl
jp
vpmacsswd
push
mov
in
xchg
fbld
push
out
lcall
enter
xchg
call
push
cmp
scas
lods
xor
insl
sub
cli
cmpsb
ror
mov
ss
push
lcall
call
test
mov
pop
decb
pop
loop
pop
push
mov
fdivrl
icebp
lcall
sbb
pop
pop
mov
call
daa
or
xchg
js
add
les
rolb
inc
andb
pop
push
jg
pusha
jmp
in
inc
dec
or
or
add
pop
and
mov
call
pop
pop
and
sub
mov
xor
mov
cmp
aas
lret
mov
add
sbb
dec
jmp
adc
lret
jmp
decl
push
pop
mov
jg
mov
cmpsl
xor
loop
jmp
addl
sbb
out
jg
push
call
jg
add
add
and
leave
pushf
mov
aaa
push
push
pop
cmp
orb
or
sti
je
jmp
pop
sbb
dec
out
clc
pushl
mov
pop
dec
mov
inc
xchg
jo
ficompl
xor
pop
cwtl
push
sti
add
and
fwait
lcall
mov
and
fstps
clc
xchg
loopne
pop
mov
rcrb
orb
test
or
mov
sahf
mov
jg
adc
popa
or
mov
add
xchg
stos
lahf
movsb
pop
popf
mov
out
add
mov
call
faddl
ljmp
fnstenv
jmp
test
ror
popa
cmp
ret
pushl
les
aad
in
nop
stos
aaa
imul
push
fadds
mov
outsl
push
sub
inc
cld
call
push
fldenv
cmpsl
pop
push
pusha
and
mov
mov
pop
push
or
dec
inc
mov
pop
addr16
dec
inc
enter
fisubrl
pop
adc
shll
adc
pop
adc
lods
add
leave
imul
call
push
insb
cmp
xor
inc
pop
jg
nop
pop
jns
xor
push
mov
jnp
dec
pop
add
aas
insb
clc
xchg
jmp
shll
das
jl
cmpsl
fnstenv
pushf
scas
ljmp
sbb
arpl
push
popf
aaa
pop
cld
jg
sub
inc
or
jle
adc
adc
fcomip
or
push
je
jp
fs
cmp
inc
dec
inc
dec
movsb
inc
inc
dec
adc
lcall
inc
inc
push
inc
dec
push
dec
ss
dec
cmp
sub
xor
sub
jne
jbe
scas
std
mov
add
daa
adc
cmp
or
or
arpl
ret
jle
adcb
jg
add
push
test
lret
sar
lahf
loope
push
xorl
lcall
and
sub
dec
dec
inc
mov
inc
ss
es
decl
cmpl
iret
pop
lds
mov
mov
and
fmuls
mov
mov
arpl
add
mov
push
mov
movsb
roll
push
in
ret
jg
push
inc
mov
cmp
xchg
aam
incl
and
mov
xor
cmp
pop
mov
sarb
jle
mov
pop
cmp
pop
lods
xor
movsl
test
pop
jmp
xchg
add
in
sbb
xor
inc
jg
jo
jg
sub
jns
and
jb
enter
sbb
sub
or
fcomps
cmp
imul
pop
cmc
aaa
inc
incb
test
jle
out
xchg
jne
ljmp
push
adc
nop
cltd
push
sbb
bound
lods
cmpsb
cmp
dec
repz
cmpsb
mov
jg
movsl
loop
repnz
cmp
ret
jbe
loopne
sarl
iret
mov
rorl
inc
loopne
inc
aad
pop
jle
adc
mov
adc
stos
jg
inc
cmpsb
add
jg
sub
imul
xchg
fdivrs
sbb
incl
decl
sub
xor
ret
add
inc
popa
pop
pop
dec
push
sbb
outsl
aam
or
jg
push
mov
mov
cmp
push
sbb
push
shr
cmp
jg
fs
bound
add
lret
ljmp
add
adc
shlb
mov
inc
mov
mov
cmpb
sbb
pop
jno
inc
dec
dec
enter
imul
add
ja
ret
frstor
xor
add
dec
fidivrs
loope
test
and
xchg
jbe
sub
jl
sub
xor
cli
dec
add
data16
rorl
add
jns
adc
ds
movsb
mov
mov
scas
cmp
out
mov
xchg
mov
arpl
xchg
mov
ljmp
lret
daa
add
push
add
inc
decl
push
dec
adc
add
test
cld
jg
int3
or
dec
nop
dec
xor
sbb
notb
hlt
and
add
in
in
add
stos
mov
ret
stos
push
call
aaa
sarb
jle
pop
decl
stos
xchg
inc
inc
inc
lds
mov
dec
sbb
mov
mov
test
xor
pop
mov
cs
outsl
add
sarl
cs
adc
ljmp
js
incb
push
push
add
push
xchg
pushf
jg
jg
adc
and
xlat
mov
or
jb
popa
or
clc
outsl
aas
jg
pop
add
add
mov
sbb
and
int3
mov
push
ds
push
aas
cmc
inc
cs
jmp
rcrb
push
push
inc
push
scas
push
dec
pop
jle
ljmp
add
jmp
pop
mov
lcall
aad
mov
pop
add
and
add
push
and
push
cmp
adc
test
fwait
lods
adc
enter
adc
sbb
jmp
or
jge
jl
pusha
or
jmp
insl
ja
jns
jg
jle
jae
jo
push
push
dec
cmp
cmp
and
mov
pop
push
push
std
fistps
adc
pop
push
dec
pop
push
push
sub
sub
cs
xor
mov
and
scas
mov
xchg
ds
adc
pop
pop
jg
adc
xchg
and
dec
jg
enter
push
nop
inc
push
leave
ja
pop
jb
aas
xchg
pop
xor
aas
aas
cmp
aaa
push
adc
add
xchg
sbb
and
jg
push
jg
out
dec
or
aaa
or
and
jl
dec
push
sbb
dec
sbb
mov
dec
ret
sub
and
xor
fcomip
push
jle
fdivl
mov
mov
sbb
inc
and
inc
ret
jle
dec
push
push
pop
xchg
and
mov
xor
add
add
stos
mov
cmp
fldl
mov
dec
xchg
jmp
xor
xor
push
dec
aas
pop
xor
pop
add
es
sub
inc
cld
inc
movsb
hlt
sub
inc
pop
enter
es
leave
and
fisttps
dec
movsb
in
sub
mov
decl
jne
fbld
aam
ss
mov
pusha
popa
fsubl
imulb
fisttps
cld
mov
add
push
mov
xor
cmp
adc
mov
cmc
add
mov
bound
jg
das
add
ret
add
and
and
dec
or
scas
in
cmp
push
sub
sbb
lret
mov
jo
ljmp
cs
sbb
pop
xchg
mov
push
add
inc
mov
and
je
push
enter
jp
add
or
in
nop
add
in
dec
add
cmpsl
in
pop
inc
pop
or
subb
insb
mov
fildl
add
movsb
add
sbb
inc
call
pop
les
enter
jg
pop
pushl
bound
pop
das
or
cmp
ljmp
jg
lret
pop
test
rcll
in
add
sbb
cltd
pop
mov
adc
stos
add
sar
and
out
dec
jg
cmp
jo
push
sub
jg
inc
and
inc
bound
and
pushl
xchg
cld
lret
ds
adc
and
mov
imul
pop
xor
add
cmp
inc
bnd
dec
js
xor
ljmp
inc
cmp
call
lods
lea
insl
pop
test
imul
mov
dec
pop
movsb
add
lock
jg
sarb
or
push
inc
add
push
pop
dec
out
jle
repz
cmpl
in
loop
sbb
bound
mov
sarl
fcoml
adc
push
adc
push
js
mov
bound
add
mov
dec
mov
push
adc
jbe
xor
push
cmpsl
jl
cmp
pop
mov
arpl
fsubs
push
adc
add
bound
cmp
or
loopne
sub
dec
es
push
add
pop
jmp
wbinvd
jge
jae
fidivrl
in
pop
hlt
outsb
push
fs
jg
and
jp
imul
dec
inc
mov
sub
dec
inc
dec
dec
call
sar
push
pop
inc
pop
push
add
dec
dec
sub
sub
and
cs
and
and
inc
and
cmp
xor
jle
sub
sub
das
pop
repnz
add
inc
shr
inc
xchg
push
or
filds
jle
xchg
push
jg
add
lea
and
xchg
and
pop
adc
str
jo
ljmp
pop
dec
pop
push
outsb
lcall
adc
icebp
subb
ljmp
and
das
jg
dec
ljmp
jg
ljmp
dec
jg
xchg
push
and
add
inc
jb
add
mov
jg
jg
adc
sbb
enter
jne
stos
sti
sbb
or
paddd
fdivr
insl
push
add
add
decl
push
pop
repnz
stos
arpl
sti
xchg
jg
loope
hlt
repz
lods
jg
jle
mov
idivb
pushf
pop
sub
sbb
mov
xchg
xchg
sahf
ror
out
adc
sbb
and
and
aas
pop
sub
lock
dec
xorb
lods
jno
sahf
aad
mov
add
lret
mov
inc
in
mov
sub
add
jg
inc
out
jg
fisttps
incb
pop
nop
hlt
lcall
or
sbb
mov
mov
adc
sub
fdiv
ljmp
push
sub
bound
lret
scas
pop
out
into
xchg
sbb
movsb
lcall
fldcw
mov
jle
aam
sbb
jg
outsw
stc
or
sbb
and
ret
addl
inc
cmp
dec
loope
out
out
cmp
shr
call
sub
xor
popa
and
dec
mov
fisttpl
pop
cmp
cmp
rcl
lret
test
mov
mov
mov
outsb
mov
mov
pushf
in
jg
les
jle
jge
dec
lahf
inc
testb
or
xor
jle
jg
inc
cmp
or
and
cmp
sbb
insl
xchg
cmp
sar
cmpsb
cmp
push
or
clc
inc
add
test
mov
jnp
lcall
mov
insb
insl
outsb
outsl
push
jne
inc
sbb
jnp
jae
decl
jp
jns
mov
dec
dec
dec
inc
dec
inc
dec
dec
inc
pop
push
aas
cmp
lcall
push
pop
push
pop
pop
push
dec
push
push
sub
xor
and
and
and
cmp
outsl
mov
xor
ss
push
imul
dec
pop
dec
iret
jecxz
es
sub
add
dec
pop
jb
inc
into
jg
popa
dec
xchg
xor
repnz
push
addr16
jns
adc
pushl
mov
add
cmp
adc
and
xchg
call
leave
and
push
sbb
sbbl
xchg
xchg
insb
sarl
out
add
push
cld
inc
pushl
jns
out
jnp
add
mov
fldl
lea
jg
add
xor
adc
das
and
inc
es
add
cmp
rorb
jg
stc
aad
clc
inc
sub
dec
xchg
pop
dec
adc
incl
inc
rorl
sahf
fsubrl
sbb
or
xor
push
jg
push
psraw
jg
jle
add
insb
push
adc
mov
sbb
jecxz
and
ret
fiaddl
fwait
js
cmp
or
jle
into
pop
out
xor
call
mov
inc
push
mov
pop
mov
sbb
pop
mov
fst
jne
push
stos
jae
or
movsb
jns
push
pop
jo
inc
push
inc
pop
les
leave
pushl
push
push
jle
inc
dec
incl
icebp
mov
xor
jl
les
mov
test
sub
push
stos
or
jg
adc
mov
inc
daa
jmp
les
add
jle
lahf
stos
dec
adc
icebp
ljmp
jle
mov
sbb
repz
jmp
loopne
dec
fcmovne
or
xlat
inc
sub
das
fcoms
xchg
fbld
ljmp
mov
mov
mov
dec
movsl
idiv
pop
adc
xchg
scas
movsb
subb
movsb
dec
mov
pop
pusha
sahf
push
arpl
popa
incl
sbb
cmp
push
adc
jg
sbb
add
incl
push
enter
push
pop
test
lods
jg
ret
rcl
mov
int
fmull
enter
dec
cmp
pop
in
hlt
mov
mov
mov
es
and
cmp
pop
and
cmp
pop
xor
ja
sarl
pop
jae
cs
pushf
add
jg
cltd
jg
movl
inc
pop
and
jg
sbb
aaa
outsl
push
jg
lods
or
inc
jg
ljmp
cmp
mov
xchg
mov
pop
adc
out
mov
xchg
mov
xor
cmc
outsb
loope
fmulp
in
fcmovu
fxch
scas
in
cmp
pop
dec
mov
mov
shl
lcall
cltd
mov
xor
and
insb
popf
movsb
mov
mov
in
sahf
or
lahf
arpl
jg
push
ljmp
and
xor
in
xor
lock
cltd
inc
outsl
nop
xchg
push
shll
add
or
fwait
out
sbb
decl
cli
pop
pop
push
pop
in
or
jle
and
adc
sbbl
fadds
or
and
ret
jg
adc
lds
push
fwait
stos
stos
xor
out
sbb
pop
pop
inc
inc
test
incl
inc
lods
or
mov
cmpsl
push
out
pushl
sbb
repnz
decl
jo
pop
sub
jae
ret
jecxz
mov
or
sub
flds
pushl
cmpsl
loope
jmp
jo
das
clc
adc
add
mov
or
vmread
decl
jno
adc
jmp
mov
stos
add
incl
xchg
das
and
mov
ss
call
mov
jmp
add
scas
data16
xlat
fcomp
and
scas
sarb
ja
rcrl
jl
ficompl
xchg
mov
dec
dec
je
cmpsb
adc
add
sub
jg
mov
decl
nop
sub
ljmp
add
jg
dec
and
iret
adc
lods
pop
enter
cmpl
leave
and
scas
adc
sub
loopne
jle
jg
inc
xchg
leave
jae
int
loopne
or
or
mov
daa
add
adc
jns
dec
lcall
repz
add
jo
or
or
decb
and
lret
enter
les
repnz
and
pop
mov
push
fsubrl
das
sub
push
das
inc
scas
outsl
jle
clc
aaa
imul
cwtl
nop
pop
push
stos
jae
dec
sub
imul
ds
sbb
rcl
lcall
xor
sub
push
aaa
ljmp
or
cmp
xor
cmc
or
inc
or
loop
fwait
pushl
mov
popa
push
adc
icebp
shl
decl
fucomp
fildl
lret
push
add
outsb
das
iret
adc
xlat
call
xor
jp
ret
sbb
pop
add
pop
jle
fdivp
lcall
or
mov
inc
xor
push
stos
jo
sbb
jle
cmp
lahf
inc
data16
or
shl
lcall
nop
cmpsl
jecxz
dec
jg
xor
jp
and
sub
bound
or
lock
add
mov
sbb
sbb
jbe
repz
xchg
push
dec
mov
cmp
or
hlt
inc
cmpsl
push
cmp
fists
push
sub
inc
push
and
add
dec
mov
xchg
in
cld
lcall
or
movsl
or
or
adc
sub
jb
push
adc
or
dec
jg
jmp
jg
dec
jg
inc
jbe
jg
lret
jg
push
add
ja
or
jg
jp
push
add
popa
mov
enter
xchg
add
add
adc
xchg
bound
out
in
push
add
subl
xchg
sbb
test
nop
sub
push
jb
mov
push
inc
jmp
lods
dec
mov
pop
push
dec
mov
push
jg
jg
xchg
mov
ret
xchg
cwtl
push
ljmp
jecxz
movsl
push
cwtl
popa
and
call
in
dec
test
rcrl
pop
sti
lret
lret
andb
jnp
aad
test
lcall
add
mov
movsb
mov
mov
fisubl
mov
jecxz
in
pop
push
in
daa
jg
es
and
arpl
adc
incb
imul
inc
push
out
cmp
or
mov
push
movups
jmp
nop
call
xor
lcall
popa
and
daa
xor
movsb
jbe
xchg
pop
jae
ss
adc
js
lret
aaa
sar
decl
mov
sarb
or
test
fwait
push
js
cmc
mov
sbb
pop
mov
or
mov
aaa
pop
out
pop
or
test
push
sub
cmp
sbb
add
add
jg
add
imulw
lods
aaa
pop
jle
add
ljmp
push
inc
fs
test
push
adc
cmp
lcall
mull
sub
out
sub
jmp
mov
xor
rcrb
fnsave
xor
ss
dec
dec
imul
mov
rol
outsb
addb
mull
movsl
push
lds
sahf
imul
inc
movsl
je
call
in
loopne
inc
lcall
jmp
fdiv
in
repz
insb
xor
test
adc
push
dec
repnz
sub
sub
fs
daa
outsl
push
dec
pop
jp
adc
cmpl
mov
xchg
add
xor
mov
sub
adc
add
imul
cld
sub
push
push
loopne
repz
addr16
inc
push
ss
sbb
mov
sahf
fcoml
fwait
adc
dec
cmp
callw
shll
or
mov
cmp
pushl
inc
lret
jle
push
push
inc
shll
dec
jp
or
push
mov
mov
xchg
stos
mov
jo
jle
mov
mov
push
cmp
or
inc
pushf
scas
add
movsb
or
sub
popa
arpl
inc
dec
xchg
adc
pop
roll
testl
cmp
insl
fcoms
jle
add
sbb
push
inc
cs
enter
adc
sub
add
icebp
add
sbbb
adc
shlb
xchg
imul
dec
fs
sbbl
add
sahf
inc
orl
push
add
aad
inc
shll
jg
jle
incl
push
out
dec
push
cwtl
or
pop
mov
mov
jg
insl
push
fnsave
enter
aam
adc
imul
loopne
test
mov
pushf
pop
cwtl
test
jg
sub
or
adc
das
xor
pop
sbb
xchg
fisubrs
leave
repz
mov
cltd
stc
repnz
xchg
inc
insb
jnp
je
jns
push
jo
jg
and
inc
adc
sbb
pop
jg
mov
xor
jle
decl
es
and
and
imul
xchg
int3
imul
inc
push
jb
subb
imul
inc
xor
adc
jg
sub
pushf
adcb
or
jnp
mov
push
jnp
jg
sub
mov
imul
lahf
xchg
insb
outsb
ficoml
sbb
xor
mov
dec
das
fistpll
icebp
add
jg
adc
adcb
jg
inc
adc
push
or
jg
andb
cmpsb
sbb
and
pop
adc
andl
mov
add
in
arpl
arpl
dec
decb
jg
pcmpeqd
adc
dec
stos
and
cs
sbb
pop
aaa
push
cmp
pop
das
xor
ds
fs
gs
mov
dec
mov
jp
adc
pusha
jb
add
push
pop
jmp
dec
js
jns
sti
push
test
cmp
roll
jns
inc
and
inc
out
add
int3
in
push
jecxz
dec
cld
imul
decb
rorl
out
arpl
lock
incb
and
mov
es
shll
dec
or
clc
orl
iret
push
push
iret
pop
xor
mov
cmp
arpl
decl
ret
and
xchg
cmpsl
dec
subl
mov
jle
cltd
mov
fsts
mov
loop
cmp
inc
cmp
dec
add
jg
inc
imul
insb
popa
mov
dec
jle
sbb
pop
push
scas
ret
mov
sahf
loopne
mov
pushl
dec
pop
pop
insb
push
dec
or
and
jp
pop
inc
call
pop
sbb
push
sub
push
mov
shll
pop
cld
subb
xchg
push
aam
nop
add
in
bnd
in
jg
pop
sub
jbe
jae
lods
inc
or
fs
incl
mov
into
test
fidivrl
xlat
mov
test
repnz
pop
lods
mov
or
lods
push
or
jmp
or
pop
cs
dec
jbe
inc
popa
insl
xor
das
mov
cld
fs
test
push
jg
dec
jmp
fisubl
test
xchg
mov
mov
pusha
incl
xchg
sbb
in
out
scas
dec
and
int3
adc
or
dec
cmpsb
fucomp
fdivrs
mov
mov
in
out
int
adc
mov
stos
int
lds
mov
pop
push
fidivrl
mov
rclb
mov
test
mov
sbb
add
fs
mov
sarb
xchg
pop
pop
dec
jb
cld
rolb
dec
lods
and
arpl
jns
jg
insb
jg
push
sbb
xor
or
insb
dec
aad
jg,pn
jno
or
jg
pushl
cmp
push
push
ret
fldl
stos
decl
lahf
sub
sarl
add
jle
call
je
cmp
insl
add
jle
mov
stos
pop
decl
jne
dec
and
decl
jg
cmp
jg
mov
imul
jp
rolb
xchg
call
pop
or
incb
stc
xchg
and
cmp
and
inc
and
ds
push
xor
adc
dec
or
jg
addb
out
jg
add
xchg
jl
adc
push
inc
jp
out
add
cmpsb
pushf
adc
jne
cmp
call
or
adc
jb
pop
pop
jg
pusha
mov
push
pop
les
faddl
jg
sbb
or
push
leave
mov
pop
pop
cs
sarb
imul
sbb
bound
rorb
mov
push
jecxz
icebp
lock
sahf
dec
in
jmp
adc
pop
sbb
es
push
jmp
loope
add
bound
int3
fcmove
fcom
lods
ljmp
lcall
sbb
mov
dec
push
subl
test
lods
add
mov
outsb
icebp
and
mov
and
fcoms
jle
mov
lahf
in
push
pushl
imul
or
add
push
and
sub
cmp
or
jg
inc
add
jl
add
add
pushl
in
push
push
cmp
orl
dec
jecxz
push
cli
stos
fs
push
pop
lock
repnz
ret
sbb
rcl
mov
or
mov
int3
xchg
sar
mov
stos
add
mov
lods
pop
push
push
bound
adc
mov
movsb
mov
int
arpl
gs
xchg
mov
or
call
and
and
leave
mov
push
mov
and
jge
mov
and
add
cmp
inc
in
cmp
std
lcall
inc
inc
push
test
dec
pusha
dec
fs
js
jmp
and
cmc
call
xchg
jecxz
mov
lcall
gs
mov
cli
jg
jle
push
imulb
lret
mov
pop
jg
clc
call
inc
add
push
adc
dec
and
dec
dec
sbb
clc
bound
add
mov
aad
imul
ret
ficoml
push
jg
lock
leave
inc
add
jp
add
movsl
push
sti
in
insb
pop
incl
xchg
xchg
inc
fidivl
aam
ljmp
in
cwtl
lahf
adcb
pop
fstps
mov
mov
mov
dec
adc
les
jg
dec
jp
xchg
sub
imul
loope
dec
cmp
test
xchg
hlt
xor
inc
mov
xor
push
dec
push
cmp
jle
push
pop
and
inc
inc
ror
leave
xor
pop
jle
dec
add
add
imul
int3
add
add
sarl
in
rcll
add
loopne
outsb
je
add
and
std
inc
mov
imul
add
dec
jp
outsb
aas
in
inc
das
sub
outsl
jno
adc
or
push
mov
adc
enter
jnp
pop
decl
data16
arpl
inc
jg
sub
leave
jo
js
push
lock
add
jmp
or
or
xchg
push
stc
dec
jg
jbe
adc
push
adc
sub
icebp
xchg
mov
test
adc
arpl
and
xchg
adc
mov
jbe
jb
adc
push
inc
scas
nop
mov
jmp
daa
imul
in
and
cmpsb
inc
cs
mov
imul
pop
or
data16
and
ss
lods
push
lods
pop
movsl
inc
and
cmp
and
inc
dec
jns
pop
add
loop
inc
cmp
dec
push
insl
and
loopne
aas
lcall
xchg
sub
filds
pop
xor
fucomip
pmaddwd
cmc
pop
repz
cld
das
ss
in
xor
push
sbb
aas
inc
loopne
inc
add
sar
and
add
imul
outsl
xor
pop
pop
adc
sbb
jg
stc
loope
subps
jg
jmp
pop
jmp
verr
xchg
nop
dec
mov
in
hlt
cmp
or
push
xor
addr16
sahf
xchg
pop
fcoms
sub
or
repnz
inc
jne
bound
push
add
push
lcall
daa
mov
mov
xchg
int
or
sub
jg
test
cld
test
stc
imul
adc
mov
clc
sub
aas
xchg
push
and
pusha
xchg
and
adc
inc
incl
negl
pop
fs
sub
stc
push
add
fists
movsb
or
dec
enter
and
into
cmp
sub
call
xor
or
inc
xor
enter
cmp
scas
inc
xor
or
and
cmp
pop
and
pop
mov
pop
mov
add
pusha
ljmp
push
jo
mov
stc
add
add
scas
adc
jg
arpl
add
push
jo
test
or
repz
push
mov
pop
adc
jg
in
or
loope
sub
repnz
in
popa
movsb
sub
jmp
ror
data16
and
leave
inc
pushl
roll
leave
lret
mov
mov
dec
cmp
mov
and
stos
and
and
lock
pop
dec
fstps
jb
jle
mov
jle
enter
pusha
stc
add
jo
push
rolb
jle
push
xchg
test
mov
popf
outsb
or
movsb
call
jg
cwtl
add
and
pushf
inc
or
adc
sbb
pop
sub
lds
mov
or
mov
dec
push
dec
lcall
jg
adc
xchg
mov
cltd
in
outsl
in
fcomip
push
xor
or
sar
lcall
jecxz
repnz
into
inc
je
rcr
sarb
cmp
mov
fwait
inc
xor
mov
lahf
cmpsl
and
inc
lcall
add
jg
cmp
sbb
mov
dec
or
rorb
jg
shl
ret
jg
push
or
push
inc
popa
idiv
js,pn
inc
adcb
jl
outsb
outsb
hlt
cmp
adc
ss
test
je
pushl
add
and
inc
cmpsb
out
test
cmpsb
or
jmp
arpl
mov
push
xor
inc
sub
mov
out
sar
sbb
inc
or
xchg
aas
fstps
lahf
mov
ds
sarb
out
jle
out
negb
dec
dec
repz
mov
stc
jg
and
enter
mov
decl
and
jle
sub
cmc
xor
and
outsl
xchg
mov
or
in
fnstcw
mulps
cmp
add
dec
jg
decl
jae
scas
mov
sbb
enter
add
pop
hlt
decl
pop
jle
adc
add
aas
adc
movsb
in
rolb
decb
call
ficompl
pusha
loopne
mov
pop
or
add
insb
and
cmp
pop
mov
lock
repnz
adc
int
lcall
out
aad
mov
das
xchg
rcl
xor
ss
cmp
lods
repnz
or
inc
int3
dec
mov
cmpsb
sahf
ret
ret
call
jne
cmpsl
and
jg
or
clc
sbb
jg
cmpsl
or
adc
jnp
mov
out
sti
add
pop
and
popa
or
push
mov
sbb
jno
pop
push
dec
and
enter
addr16
sub
push
pop
xor
pop
outsb
lock
cmp
xor
xor
test
mov
hlt
and
callw
jnp
test
and
jmp
ljmp
decb
loope
push
and
dec
adc
xor
fucom
clc
push
fprem
insl
sbb
bound
pushl
sbb
scas
add
je
fbstp
jecxz
jo
rcrb
cmp
pusha
cli
incl
lea
loop
divb
mov
pop
xor
add
fdivl
insb
mov
xchg
sbb
jns
xchg
notb
add
xchg
xchg
jo
push
enter
in
sbb
les
inc
mov
xor
cltd
cmpsl
sbb
mov
jne
jno
push
repnz
xor
xchg
mov
mov
lock
inc
jns
addr16
pop
inc
dec
pop
sbb
jo
in
push
sbb
cmp
jle
pushl
fwait
cmp
sbb
jge
andb
push
dec
pop
cmp
das
cs
push
push
pop
pop
and
call
xchg
cmp
in
cld
dec
pop
ffreep
mov
jns
dec
add
xchg
xchg
pop
outsl
arpl
jne
test
out
jmp
and
adc
jb
jecxz
mov
fsubrs
stc
xchg
xchg
pop
into
in
sub
add
mov
loopne
mov
dec
sbb
inc
xor
dec
inc
or
int3
popa
jg
push
jo
roll
jb
sarb
lods
pusha
add
pop
pusha
sub
jo
sub
syscall
mov
lcall
xor
das
adc
dec
sub
jns
push
adc
push
xor
in
xor
decl
pop
push
gs
mov
insl
adc
mov
jbe
fidivrs
mov
inc
inc
adc
mov
decl
add
xor
scas
scas
fnstcw
and
mov
cmpsb
pop
pop
pusha
aaa
popf
jbe
sbb
mov
jecxz
and
jg
pop
leave
inc
or
adc
jg
lret
dec
sti
cld
push
leave
and
gs
adc
sub
add
pop
inc
jle
jbe
jecxz
adc
inc
cmpsl
add
aam
outsb
hlt
cmc
inc
aas
lds
pop
push
inc
inc
xchg
imul
jg
cmp
lcall
sti
xchg
inc
out
mulb
pusha
and
mov
sub
scas
lcall
mov
mov
movsb
jne
cmpsl
test
mov
lds
ret
movsl
fmuls
dec
lock
dec
aaa
pop
push
int3
mov
lret
sbb
popf
aam
dec
into
repz
int
sbb
dec
je
leave
jg
push
xor
jg
ljmp
cld
test
inc
jb
jae
test
jmp
add
int3
dec
xor
es
jg
pop
add
xchg
cmp
dec
sarb
cltd
mov
mov
mov
xchg
xchg
and
divb
dec
incl
sbb
jg
aas
push
dec
dec
jg
mov
ror
adc
pop
or
jbe
popa
and
add
call
les
lcall
xor
dec
or
add
in
push
cmp
push
pop
mov
lcall
sbb
jno
xor
inc
sub
ds
dec
jle
into
pop
pop
dec
pushl
enter
jnp
mov
test
pusha
push
fs
dec
shll
push
dec
aam
pusha
adc
jmp
inc
outsb
adc
sub
or
mov
scas
aad
jle
dec
movsb
xlat
ljmp
xor
jg
jmp
pop
push
inc
jg
cmc
hlt
lret
xchg
insb
adc
adc
ljmp
aaa
ret
push
cmp
jns
lds
inc
mov
mov
inc
ret
inc
bound
or
inc
inc
mov
sub
fwait
cli
aad
call
cld
push
leave
inc
adcb
push
call
inc
cs
sbb
ja
push
pop
es
pop
test
scas
pushf
pop
inc
fdivrs
push
ret
adc
bound
jl
pushw
sbbb
inc
addl
push
pop
incl
push
js
jb
jle
nop
adc
jb
xchg
aaa
lds
fsubrl
test
data16
dec
jno
dec
in
jmp
jmp
call
push
sbb
jl
aas
xor
sub
xstore-rng
cmpsl
inc
incl
cs
aad
add
jmp
lret
and
adc
pusha
and
shlb
arpl
mov
and
xchg
lret
adc
rorl
jb
add
sbb
add
jmp
add
aas
mov
push
add
inc
popf
push
or
sbb
sbb
sbb
fstp
push
and
ret
mov
or
xchg
push
sbb
cmc
fwait
stos
adc
mov
insb
lahf
cmp
and
invd
cltd
ds
push
scas
jl
and
jmp
push
cld
xor
or
mov
js
pop
pop
fisubl
jmp
jl
sbb
shl
jmp
mov
jne
adc
outsl
insl
jg
ret
call
inc
out
stos
into
cli
dec
or
dec
sub
out
push
xchg
cmp
push
pop
fwait
gs
out
lcall
and
sti
sub
fbstp
pop
mov
cmp
cmp
insb
xlat
add
xchg
jle
jne
push
hlt
fisttps
and
in
jno
pop
out
cmpsb
and
sbb
movsb
add
icebp
pop
jg
and
adc
jg
jl
sarl
sarb
scas
cld
out
push
clc
jle
inc
pop
sbb
shrl
xor
fst
mov
dec
daa
incl
and
inc
popl
add
movsb
cmp
cltd
in
jge
push
inc
test
xchg
incl
inc
inc
dec
dec
js
in
cmp
push
xchg
repnz
push
push
fwait
xchg
jecxz
scas
shlb
test
cltd
mov
push
jg
dec
and
adc
test
in
pop
jle
pop
or
add
mov
xor
xorb
sbb
jecxz
jecxz
loopne
das
inc
gs
fisttps
and
push
and
mov
cmc
fs
jg
mov
dec
sbb
or
sbb
add
call
loopne
and
mov
sub
adc
pop
fdivrl
fs
dec
xchg
dec
loopne
cli
inc
mov
mov
cmpsb
daa
stc
push
cmp
aad
or
test
push
mov
xchg
jg
loopne
in
aas
test
pop
pusha
outsb
fisubl
lods
mov
pop
incl
add
dec
push
cmpsb
adc
jne
add
inc
xchg
test
mov
mov
add
push
adc
inc
es
xchg
test
mov
fistps
das
frstor
inc
cli
insb
jb
lea
dec
cmp
jo
mov
decl
incl
cmp
pop
movsl
and
xchg
fldt
dec
pop
scas
es
out
les
movsl
fidivrs
daa
orb
push
scas
adc
push
decl
lea
add
out
mov
jne
and
ss
adc
jle
push
adc
aad
mov
fcom
shlb
jo
test
sub
pop
xor
sub
mov
aas
dec
hlt
inc
inc
and
dec
dec
sub
dec
dec
push
pop
xlat
lock
and
pop
pop
mov
dec
mov
data16
decb
push
inc
lea
sbb
adc
or
test
movsb
add
sbbl
mov
cld
adc
and
inc
mov
dec
push
mov
jg
push
fdivr
nop
das
adc
loopne
dec
add
clc
mov
dec
or
pushf
mov
lret
outsb
push
push
jle
inc
aad
pop
mov
inc
xchg
ljmp
jle
jmp
in
jb
jp
test
push
mov
lock
lahf
or
jle
mov
mov
and
pop
aaa
or
push
dec
pusha
es
fcomps
push
and
rorl
mov
push
imul
adc
mov
xchg
add
add
es
mov
rorb
sub
test
ds
sub
aas
lahf
lahf
sub
js
js
adc
or
sub
arpl
pop
sbb
push
scas
mov
push
jo
xor
push
loop
or
jg
xchg
mov
bound
dec
pop
scas
pop
outsl
add
das
loopne
andb
ljmp
fs
inc
popa
push
or
inc
inc
jg
les
mov
decl
ljmp
arpl
xor
xchg
or
adc
pop
adc
mov
or
and
bound
push
fneni(8087
movsb
mov
and
pusha
sbb
mov
js
js
add
arpl
call
sub
dec
repnz
dec
int3
ja
mov
std
lret
and
adc
push
adc
jg
and
push
repnz
shl
mov
xchg
adcb
xor
jg
jo
add
in
xor
rcrb
pop
rclb
mov
pop
add
add
imul
sub
cs
bnd
inc
pushf
imul
lret
jg
hlt
hlt
rorb
dec
leave
adc
pop
pop
pop
fscale
sbb
cmpsl
leave
clc
sbb
popf
idivb
cs
pusha
add
movlhps
jg
cwtl
mov
push
jb
outsb
imul
xchg
and
pop
pop
incb
inc
int3
inc
repz
push
jg
adc
pop
sbb
mov
push
or
mov
adc
add
icebp
aas
nop
ljmp
cwtl
push
dec
or
mov
dec
je
cmp
inc
xchg
sbb
pop
and
fmul
sbb
xor
lcall
orl
in
repnz
xor
clc
outsl
xchg
push
mov
jl
jo
adc
xor
xor
jg
adc
mov
jg
dec
cli
mov
lcall
mov
int
jle
sub
loopne
sbb
jg
sub
sbb
inc
das
aas
dec
jo
mov
mov
pop
imul
into
lret
adc
xor
jg
subl
mov
movsb
xor
xchg
and
jg
mov
jb
add
push
outsl
push
inc
jle
repnz
stc
ja
xor
dec
xchg
and
dec
push
cwtl
and
jp
cmpsl
loope
aad
lea
push
sbb
cmp
mov
sbb
and
lds
sbb
cmp
scas
loopne
call
pop
pop
pop
or
stos
gs
jg
inc
mov
imul
lods
cmp
push
add
jg
nop
les
rclb
mov
mov
xchg
push
fucom
push
jle
xor
sub
or
test
imul
push
push
cmpsb
adc
pop
in
gs
sbb
lcall
lcall
js
dec
pop
sbb
ficoml
push
inc
adc
jmp
test
adc
jnp
js
jle
test
pushl
xor
xor
jae
ja
arpl
cmp
sub
adc
faddl
adc
add
cs
adc
push
incl
sbb
xchg
mov
imul
popa
adc
and
add
cmp
jg
fldcw
je
xor
enter
jg
roll
popa
loope
ljmp
ret
sbb
mov
xchg
sti
xchg
ja
clc
call
cltd
pop
cmp
pop
dec
das
xor
lcall
mov
in
incl
cmpsb
and
lahf
or
mov
test
les
and
jmp
rorb
iret
incl
jne
and
xor
sbb
and
cmpsb
decl
mov
sub
mov
pushl
push
cmp
inc
inc
cs
pop
push
inc
dec
dec
sbb
jle
xor
cmp
push
pop
pop
and
add
push
or
jg
jb
aas
xor
ret
jge
add
sub
sbb
mov
dec
xor
push
lock
clc
mov
test
jg
inc
cwtl
movsb
jge
fidivrl
decb
stc
jnp
add
and
jp
call
pop
jns
sbb
add
pop
add
cmp
mov
cwtl
jl
push
and
add
pop
add
js
add
jg
dec
movsl
add
jl
jg
ljmp
push
repnz
aas
movsl
inc
aam
inc
sub
cmp
pop
dec
add
jo
imul
mov
mov
mov
inc
int3
inc
leave
add
dec
les
inc
mov
sbb
pushl
test
sub
sbb
push
cld
subb
jmp
incb
into
jle
leave
sub
decl
xor
dec
adc
jb
clc
imul
and
pop
mov
xor
cmp
sbb
sub
sub
xor
call
clc
cmpb
add
pop
pop
test
jp
lahf
push
hlt
inc
inc
lock
add
ljmp
dec
dec
jne
leave
adc
and
jbe
push
xor
sub
in
mov
pop
aaa
decl
mov
cmp
outsl
test
pop
inc
inc
xchg
pushf
sub
mov
jle
dec
out
and
xor
pop
mov
inc
pop
pop
sahf
flds
rorl
jg
push
push
push
push
xor
xchg
pop
add
jmp
add
pop
test
and
inc
sub
mov
cmp
leave
or
das
jg
mov
adc
cmp
push
and
mov
repnz
inc
push
mov
mov
pop
gs
inc
aas
dec
shll
clc
decl
lods
bound
dec
sub
cmp
cmp
sar
xchg
mov
int
dec
jg
mov
inc
hlt
dec
or
call
imul
xchg
xchg
inc
lea
inc
or
add
xchg
add
xchg
add
mov
adc
adc
fbstp
lahf
adc
sbb
frstor
stos
ficoms
lcall
add
cmc
into
cmpsl
ljmp
adc
fucomi
jecxz
mov
pop
call
into
cld
mov
aam
lea
cli
jg
cmp
lret
mov
in
dec
pop
cltd
fimull
push
movsb
orb
push
mov
mov
lcall
enter
daa
ljmp
stos
in
orb
cmpsl
adcb
cmp
inc
and
push
dec
jo
jle
pop
adc
push
mov
adc
push
jp
lcall
push
xchg
shrl
faddl
inc
jnp
adc
out
scas
pop
add
mov
shrl
pop
lcall
xor
mov
sub
pop
adc
push
sbb
movsb
xchg
mov
movsl
hlt
ljmp
xchg
or
add
cltd
push
pop
or
xor
add
js
push
jg
loopne
push
loopne
adc
jg
fs
mov
adc
pop
jmp
nop
xchg
xchg
andl
add
mov
inc
dec
in
fisttpll
insl
jg
stos
lods
andl
mov
pop
incl
jg
jae
in
cltd
and
lret
xlat
adc
dec
jg
aas
or
push
mov
jne
and
dec
sbbl
cmpsb
jbe
leave
pop
inc
call
inc
push
pop
daa
jg
sub
xchg
cmp
ret
xchg
inc
ror
sub
add
jle
nop
pusha
incl
ja
add
enter
jbe
jns
ljmp
xor
jg
mov
jmp
das
add
pusha
or
jg
js
jo
dec
mov
xor
sbb
add
jg
mov
inc
enter
cld
pusha
or
add
call
out
or
enter
pusha
je
jbe
jbe
ss
jge
push
dec
jb
into
adc
out
and
jle
out
jl
ss
jo
ds
mov
jns
mov
sbb
mov
gs
lret
push
into
xchg
add
jg
and
jno
nop
sbb
jb
sbb
pop
pop
dec
mov
sub
dec
ljmp
lret
outsb
lret
ret
add
arpl
stc
jl
push
call
shll
jns
or
lcall
addr16
pushf
push
stos
xchg
xchg
add
or
test
sbbb
pusha
xor
mov
jge
rcrb
jg
sub
js
incl
pop
add
jo
dec
jg
mov
pop
or
mov
data16
pop
cmp
lea
add
jg
cmc
outsb
xor
fildl
pop
and
lsl
mov
adc
outsb
or
movsl
and
pop
fistps
rclb
or
cmp
add
mov
jns
fistpll
aas
pop
aaa
cli
aad
sarl
aad
out
enter
push
pop
icebp
test
inc
hlt
jg
lea
push
mov
push
je
lock
xor
shrb
icebp
fistps
mov
jae
rcr
lcall
sbb
or
rcrb
pop
sbb
in
loop
rolb
jns
ret
xchg
jg
cmp
popa
decl
add
adc
xchg
jle
mov
out
and
mov
xor
call
int
mov
push
pop
sbb
push
and
daa
aaa
scas
dec
sub
je
ljmp
xor
cmp
jle
insb
ds
into
ret
inc
or
dec
mov
rcrl
mov
add
hlt
pop
rcr
mov
jge
call
push
pushf
mov
xchg
sbb
incl
inc
inc
pushl
dec
nop
insb
pop
jg
ss
or
pop
pushf
mov
dec
xor
std
stos
add
xor
les
adc
call
and
outsl
outsl
sub
ja
inc
je
popa
jo
pushl
mov
ss
cmp
mov
mov
inc
adc
jmp
push
outsl
jo
pop
das
add
sub
adc
ljmp
inc
sub
or
mov
xor
cmp
lock
adc
pop
or
dec
xchg
enter
pushl
dec
push
fstpt
jg
add
push
jg
cmovb
sbb
stos
cs
cmp
sbb
and
jg
or
adc
insb
movsl
decl
push
push
mov
scas
dec
or
ljmp
movsb
inc
out
out
and
inc
jge
mov
sbb
sub
xchg
aas
sahf
sub
jmp
out
imul
inc
aaa
xchg
jo
pop
and
jg
push
cmp
aad
xchg
add
sub
dec
daa
dec
out
mov
mov
out
cmpsb
cmpsb
stc
scas
xchg
sbb
out
fisttpll
jmp
and
imul
add
pusha
rcll
jg
xor
icebp
dec
add
add
sbb
cmp
push
mov
popa
bound
push
lods
xor
cmp
ds
mov
fadd
add
iret
or
ret
xlat
adc
notb
lcall
mov
test
cmovne
mov
in
stos
add
out
add
leave
enter
jg
sbb
imul
mov
pop
xor
incl
add
xor
push
add
xchg
jg
inc
pop
dec
aas
in
pop
imul
sub
add
imul
dec
pop
xlat
shlb
add
jg
mov
enter
jle
add
js
jg
inc
jbe
lcall
or
daa
jge
pusha
aaa
pop
sbb
jno
lcall
and
test
mov
test
rcrb
cmp
inc
js
xchg
sbb
push
inc
push
jl
fisttps
inc
inc
sub
push
inc
mov
data16
or
jns
cmpsl
jle
xor
mov
and
jg
faddl
add
add
gs
cmp
sub
add
lahf
icebp
lcall
scas
movsl
in
je
out
push
sbb
sub
icebp
aas
pop
add
xor
jge
jmp
and
and
mov
xor
adc
and
add
inc
push
stc
add
shlb
adc
pop
repz
negb
jmp
push
xchg
adc
decl
das
in
psubw
cwtl
repz
sar
dec
or
adc
xchg
jl
dec
clc
loopne
js
int
and
sbbb
jg
mov
cmp
xor
and
adc
rcr
fdivr
push
call
push
sbb
mov
jg
add
jg
push
push
inc
dec
jg
int
jns
imull
mov
call
movsl
xchg
add
jg
push
or
in
jle
sub
push
xchg
xchg
lret
mov
fsubrl
pop
into
cmpsb
jg
shlb
repnz
add
jle
jmp
pop
jg
jbe
and
sti
jle
or
cmp
pop
in
cmp
mov
xor
lock
dec
push
add
ljmp
jle
loop
add
xchg
mov
mov
cmp
xchg
lds
ljmp
les
imul
frstor
xchg
ret
insl
xor
sarl
inc
dec
dec
inc
jmp
int
cmp
in
sarl
out
jb
jo
lcall
pop
or
cmp
ljmp
cmpsl
and
adc
sti
jle
or
mov
int
pop
pusha
or
data16
adc
adc
sbb
lock
and
je
test
and
sub
decb
push
xor
cmp
cld
dec
and
add
clc
jg
incb
dec
and
gs
jle
lods
inc
pop
inc
les
add
sub
lahf
pop
ret
mov
jle
jecxz
xchg
and
jg
cmpsb
push
fwait
adc
add
test
fwait
pop
call
repz
dec
push
adc
outsl
jg
jle
sbb
add
ljmp
inc
sub
and
xor
das
jle
daa
or
adc
and
call
adc
sbb
dec
mov
inc
ficoml
mov
xchg
pop
jecxz
incb
in
fmull
pop
jle
les
dec
movsl
outsb
decl
push
aam
mov
add
outsl
addr16
sbb
sub
push
inc
leave
lock
fbstp
adc
dec
jmp
int3
cmp
push
test
or
and
mov
and
or
add
test
div
mov
push
lahf
mov
popa
arpl
dec
pusha
daa
shrb
add
xchg
scas
cld
ja
xchg
dec
dec
jo
adc
pop
or
stc
jle
cmp
ds
icebp
or
in
adc
aad
jg
push
inc
jg
or
push
jg
dec
jns
jle
je
gs
test
test
jp
movups
pushl
aas
rcrl
fimull
movsb
imul
cmp
sub
movsl
test
sub
decl
mov
aaa
cmp
inc
inc
inc
jg
fcomip
clc
jp
decb
push
shrl
push
jle
leave
ficoms
pop
sarb
loopne
cmp
jle
arpl
out
jle
movsb
jge
add
decb
mov
dec
pop
xor
cmpsl
jg
bnd
xor
repz
adc
loope
or
and
jbe
sbb
push
insb
or
xchg
add
mov
jb
jo
rcrb
or
jg
xor
push
mov
sub
jg
test
decb
aas
adc
icebp
lret
mov
out
arpl
xchg
add
cmp
mov
pop
add
sarb
lock
adc
cmc
mov
mov
adc
adc
mov
xchg
sbb
mov
dec
inc
shll
or
shl
pop
sub
scas
shrl
mov
jge
sbb
lcall
and
mov
adc
insl
scas
popa
decl
fdivl
call
push
enter
pushf
adc
inc
push
add
push
bound
adc
mov
lods
jmp
cmp
or
jo
incl
lods
xor
testb
sbb
xchg
cld
jne
and
punpckldq
add
add
adc
outsb
inc
test
pop
jge
xor
and
push
divl
movsb
gs
pusha
mov
lcall
push
inc
pop
sbb
pop
dec
push
push
cmp
and
sub
sbb
push
dec
call
mov
fstpl
xlat
daa
imulb
lods
push
dec
roll
adcb
addr16
adc
jb
in
add
addl
decl
ja
jbe
leave
add
insl
push
aas
jl
sarl
inc
adc
mov
pop
add
pushl
adc
push
cmp
push
ret
add
decl
xchg
adc
dec
fcoms
jno
faddl
sbb
call
in
jg
aaa
hlt
je
xor
pop
jmp
mov
push
adc
add
jle
pusha
jle
add
dec
or
fwait
ja
add
pop
push
and
sub
sub
jle
lahf
sub
mov
pushl
cmp
mov
enter
add
push
inc
sbb
leave
inc
fucom
call
clc
push
push
add
xchg
push
pusha
popa
xor
shlb
cmpsl
xchg
inc
xor
adc
add
add
pop
push
xchg
pop
imul
cmc
lea
sbb
pop
pop
push
mov
repnz
mov
xchg
jo
jg
mov
or
arpl
fscale
incl
enter
cmc
xor
push
adc
stc
call
ss
dec
cmp
pop
push
and
cmp
cmp
aaa
cmp
push
ss
pop
mov
ret
icebp
xchg
enter
ss
jl
mov
and
jg
adc
mov
jle
jns
sbb
jle
inc
test
dec
aam
sub
pop
jle
jns
mov
push
vhsubps
jg
scas
pop
jo
jle
push
fiaddl
xchg
push
imul
or
hlt
lahf
outsl
and
gs
sbb
or
ret
out
es
push
and
sub
jbe
jg
cmc
or
cwtl
xorl
shll
incb
add
mov
push
dec
jno
pop
sar
sbb
adcl
sbbb
xchg
icebp
loope
inc
test
orl
inc
or
add
sbb
test
jg
int3
xor
test
les
outsb
sbb
aas
add
jg
mov
movsb
adc
jo
jle
xchg
mov
cltd
inc
ds
or
add
or
cmpsl
stc
dec
or
mov
or
jle
rcll
lods
adc
pop
sbb
jmp
ffree
dec
call
sub
aaa
jg
loopne
xor
jle
fstpt
faddl
lods
inc
jle
dec
xchg
cs
or
pop
push
xor
sub
pusha
icebp
js
jmp
nop
in
or
bound
call
xor
inc
jb
arpl
lea
pushf
andb
inc
roll
xchg
jg
enter
pushl
inc
mov
add
sbb
mov
mov
dec
inc
dec
loope
icebp
and
and
inc
lcall
adcl
rorl
stos
lcall
sbb
loope
sar
mov
adc
add
cmp
or
inc
dec
rol
test
xchg
pop
adc
inc
icebp
dec
and
aas
sbb
or
mov
pop
jb
add
adc
or
jg
sub
xchg
inc
sahf
hlt
clc
imul
add
push
decl
push
mov
and
push
push
leave
sbb
jg
lock
or
ja
notb
dec
sbbl
outsb
in
mov
aam
add
fwait
push
das
cmp
adcl
inc
sub
imul
add
stos
push
jb
sbb
mov
imul
pop
or
stos
loope
jmp
sbb
fcmovnu
into
jmp
test
outsb
das
mov
js
mov
roll
inc
and
incl
or
jo
mov
cmpsb
adc
stos
mov
cmpb
or
les
pop
dec
or
jg
hlt
dec
fcoms
data16
push
cmpsb
push
pop
add
or
xchg
cld
das
push
add
scas
stos
add
inc
mov
outsl
decl
ja
xchg
pop
cmp
mov
fstl
inc
lods
inc
jae
cmp
scas
and
stc
decl
repz
push
or
jnp
sbb
pop
mov
fs
popa
rorl
push
ds
jmpw
add
rcll
out
enter
ret
pop
and
pop
jnp
cwtl
or
in
bound
popa
and
cmp
jle
push
or
sti
out
pop
and
or
and
cmp
lret
or
mov
repz
inc
and
dec
jg
jp
sub
jle
adc
out
mov
fimuls
push
inc
lcall
pop
movq
add
adc
lds
sbb
cwtl
push
clc
push
jo
jg
jg
inc
insb
jne
adc
dec
out
add
xchg
inc
incb
jo
into
jg
pop
sbb
jg
inc
outsl
outsl
jns
enter
popf
sbb
inc
jge
mov
mov
xor
mov
jnp
inc
add
or
jne
test
or
gs
cwtl
dec
int3
in
pop
inc
jns
adc
jo
lret
inc
jg
mov
adc
imul
xchg
mov
int
std
jmp
cmp
int3
daa
mov
cmp
add
adc
push
mov
xchg
in
lahf
mov
leave
jg
dec
add
jb
cwtl
in
lock
mov
insl
xor
dec
xor
imul
ret
lcall
jo
clc
push
inc
nop
mov
call
lret
ljmp
decl
xchg
rolb
and
jg
add
cwtl
cmp
sub
xchg
xchg
ss
aas
inc
mov
xor
pusha
mov
mov
lcall
ret
add
adc
cld
cld
lock
sbb
xchg
sbb
sti
push
and
fstpt
repnz
xchg
jecxz
incl
inc
xor
sub
sub
scas
aaa
dec
decl
jg
test
xchg
mov
mov
fstpl
fldcw
sub
sub
movsl
pusha
mov
pop
ret
pop
jne
add
pop
pop
mov
sub
lds
loopne
adc
xor
sub
outsb
inc
dec
adc
and
xchg
fiaddl
cs
lock
ret
mov
incb
jl
and
gs
or
loope
cmpb
nop
in
out
out
add
cli
pushl
cmpsl
mov
sub
add
movsl
xor
fcmovnb
ljmp
or
fs
jle
loop
fistps
fstpl
cld
lcall
sbb
adc
fs
fimuls
lock
incl
pop
sbb
aad
ds
mov
faddl
dec
sbb
outsl
pushl
clc
or
jle
iret
push
pop
pop
pushf
pop
mov
push
pop
xchg
rorb
fldenv
jnp
add
adc
icebp
xchg
jg
loop
pop
cmovs
imul
scas
aas
leave
jle
out
cld
pop
pop
pop
or
sbb
cld
sbb
sbb
sahf
lock
sub
cmpsl
fmull
mov
xor
xlat
mov
mov
jle
push
or
xor
packuswb
xor
dec
sbb
pop
push
sti
decl
push
push
pop
xchg
sub
pop
pop
js
push
push
cmpsl
dec
jg
in
add
push
add
icebp
add
dec
cwtl
cmp
cmp
incb
dec
test
or
in
scas
sub
icebp
push
fadds
or
mov
into
mov
stos
test
pushf
and
push
jg
jg
out
inc
xor
mov
cmp
sti
dec
inc
inc
in
pushl
or
dec
mov
xor
mov
push
pusha
xchg
mov
je
ss
out
jmpw
jg
adc
and
cmp
add
jb
mov
ljmp
push
add
inc
out
fiadds
or
mov
add
cmc
call
adc
sbb
mov
jl
push
and
jg
sub
jns
je
mov
jle
fiaddl
ljmp
xchg
mov
lods
inc
inc
inc
sti
sbb
cmc
fcoms
incl
std
movsb
cmp
lods
aas
nop
enter
jle
push
mov
jg
jne
push
enter
inc
add
shll
gs
adc
test
dec
add
xchg
les
add
add
xchg
outsl
jle
push
dec
push
decl
pop
cmp
les
mov
stc
lcall
inc
mov
push
pop
adc
iret
icebp
xor
in
repnz
push
push
pop
dec
add
sub
jmp
imul
adc
mov
dec
sti
movsl
pop
lock
stc
rorl
or
xchg
xor
xorb
dec
gs
popa
incl
push
aaa
jle
std
mov
sub
pop
insb
inc
add
pop
sbb
jbe
pop
pop
enter
inc
add
jle
inc
incb
fstl
mov
cs
into
inc
cmp
cmp
sub
add
cmpsb
ja
call
dec
jae
fsts
push
rcrb
pop
inc
sub
pusha
or
stos
mov
ljmp
jg
mov
add
and
inc
es
mov
and
cmpb
sub
pop
push
sub
push
test
jg
push
repnz
and
or
dec
repnz
xor
inc
push
mov
packsswb
je
jg
pop
imul
jne
nop
mov
test
int3
jb
jbe
push
jg
stos
or
jno
push
ss
jae
decl
inc
push
repnz
loope
test
mov
mov
adc
and
jg
push
loopne
incl
adc
imul
add
adc
mov
dec
inc
inc
push
sbb
jg
push
inc
pop
inc
pop
in
push
jnp
sbb
bound
xchg
add
scas
cmpsl
loope
dec
call
jle
xchg
add
or
scas
fmuls
hlt
mov
outsl
xor
sub
mov
inc
cld
in
fisubrs
loopne
mov
mov
jl
ljmp
sub
jg
leave
dec
sub
inc
inc
dec
dec
dec
push
push
push
ds
xor
pop
dec
add
inc
pop
sbb
adc
jmp
add
mov
or
adc
add
sbb
pop
sbb
notb
ss
ljmp
mov
sub
and
mov
dec
pop
push
cmp
lret
xorb
adc
xchg
sbb
push
mov
and
sbb
gs
xor
outsl
add
mov
cltd
inc
jecxz
xchg
pushf
jg
adc
jae
jg
jg
sub
loopne
mov
add
or
adc
jg
pop
hlt
jmp
or
aas
shl
loope
fcmovu
mov
hlt
je
ret
add
or
pushl
push
xor
dec
dec
mov
jg
mov
add
sub
pop
xchg
rcll
pop
inc
xchg
jmp
das
addb
popa
jg
dec
dec
leave
inc
in
inc
jg
or
imul
jmp
mov
pop
xchg
ror
or
mov
add
cmp
test
movsl
loopne
inc
adc
and
leave
and
pop
aas
popa
cltd
inc
dec
leave
bound
pop
push
jp,pn
mov
scas
arpl
cmp
mov
adc
add
adc
push
sub
mov
ljmp
sbb
jno
cmp
xchg
pop
push
and
adc
mov
adc
fs
cmc
mov
jmp
xor
popa
out
je
add
insl
mov
and
add
mov
sbb
add
and
push
cmpl
inc
or
and
mov
xchg
fcomps
jns
pop
sub
xor
and
fs
mov
and
or
cs
pop
adc
outsl
jg
nop
mov
stc
and
lret
daa
dec
leave
add
dec
test
add
adc
inc
inc
dec
dec
dec
dec
dec
inc
or
and
sahf
mov
cmp
fs
push
inc
push
jmp
fwait
dec
mov
call
add
and
xchg
adc
enter
and
mov
mov
push
insb
lds
pop
je
pop
dec
and
or
jge
and
add
lock
pop
pop
fwait
mov
jg
and
mov
add
and
adc
adc
add
inc
or
and
fsubs
orb
add
jle
sbb
push
push
fistl
decl
inc
fcoml
incb
dec
xlat
pop
mov
loop
negl
mov
pushl
mov
mov
sbb
stos
daa
lock
and
sub
xor
mov
cltd
jg
push
insl
mov
inc
std
jle
push
jle
xor
mov
insb
xor
js
jbe
aas
popa
jle
jge
sub
imul
push
push
push
cmovb
and
mov
dec
inc
inc
sbb
inc
out
push
pop
dec
pop
jle
and
push
pop
sub
and
jg
inc
inc
inc
inc
bound
jg
je
and
aas
xor
xor
cmp
adc
add
fnstsw
fldenv
decb
add
or
out
inc
or
jg
cmp
mov
or
jle
ds
outsb
and
cmp
jnp
or
das
incb
add
inc
sbb
sub
outsb
call
mov
mov
jg
mov
push
jmp
sbb
mov
jg
jle
mov
or
lock
fwait
adc
aas
and
popa
mov
and
jmp
popa
es
incb
mov
mov
enter
sub
inc
ret
ret
cmpb
sub
dec
dec
es
inc
sub
stos
ret
mov
pushf
push
fidivl
jg
xlat
lret
push
jnp
orl
jg
popa
lods
add
fs
or
pop
repnz
popa
xor
fnstenv
and
out
mov
adc
insb
add
mov
cmp
jmp
or
xor
add
pushl
or
or
sub
sahf
jb
adc
sbb
lock
sub
pop
adc
pop
into
subl
andb
jle
jle
shl
aas
clc
inc
add
inc
inc
inc
js
dec
ret
dec
dec
movsb
dec
jg
add
add
dec
pop
pop
pop
enter
fildl
pusha
inc
push
add
decl
xor
adc
add
add
lcall
fdiv
aaa
inc
bound
pop
jecxz
or
xchg
aad
call
push
sbb
dec
test
jle
ja
ret
add
aaa
jle
aaa
push
mov
push
cmp
sub
and
insb
push
lock
push
push
shrl
cmpsl
adc
scas
jle
lods
or
xchg
callw
in
stos
loopne
js
jg
dec
gs
bound
std
xchg
std
mov
cld
arpl
stos
les
jg
cli
push
ljmp
inc
inc
inc
push
decl
bound
inc
pop
inc
or
inc
inc
sbb
adc
sbb
sbb
xor
ljmp
and
sub
xor
and
push
jno
jno
fsubs
push
or
push
aad
insb
push
mov
pop
jg
ret
cli
mov
inc
pop
js
or
shll
jg
icebp
jg
mov
jo
adc
dec
arpl
or
jg
sub
fs
add
jg
and
push
dec
popa
jle
mov
push
sub
aaa
lock
pop
jg
cmp
and
fistps
jo
mov
pop
js
mov
mov
shrl
or
cmpsb
dec
jne
insb
cli
mov
and
mov
push
mov
xor
jle
stos
bound
jg
cmpsb
and
push
jl
add
push
aas
jg
sub
outsl
jp
jae
jg
incl
cltd
adc
out
sub
mov
jl
mov
fs
sub
dec
call
adc
adc
fdiv
dec
xchg
sahf
dec
loope
fadds
adc
subb
jg
rorb
cmp
dec
gs
outsl
andl
pop
sub
pop
sub
xchg
call
ds
pop
push
icebp
out
jbe
jbe
or
dec
and
frstor
sub
inc
test
add
cmp
xor
stos
push
incl
mov
inc
dec
inc
inc
jmp
data16
mov
stos
sub
dec
pop
aad
jle
repz
jle
arpl
or
sbb
stc
xchg
add
sbb
mov
adc
setb
xor
aaa
mov
in
in
dec
cld
cwtl
push
incl
and
hlt
jecxz
mov
add
data16
sbb
jg
aam
cld
jg
das
push
into
add
adc
cli
shr
call
mov
nop
xor
mov
das
adc
jle
add
jg
jle
loop
sub
popf
incl
pop
pop
pop
bound
pop
inc
jg
dec
test
sub
sti
sub
popa
mov
gs
dec
and
xadd
add
mov
cmp
jg
fs
mov
inc
fmull
jg
dec
clc
mov
sbb
clc
insl
or
clc
and
dec
fisttpl
aas
jne
mov
xlat
cmp
fmuls
lods
jmp
mov
insb
out
inc
cmp
std
call
push
int
inc
sbb
pop
adc
fnstcw
jle
in
call
xchg
jg
ds
push
dec
popf
push
or
bound
jb
sub
mov
xor
movups
jg
clc
push
adc
sbb
inc
popa
add
pop
test
adc
imul
dec
and
pop
dec
fwait
int
rol
cltd
loope
int
shlb
pop
xchg
in
mov
fwait
int
aad
les
mov
mov
or
pop
or
fimull
rorl
pop
lcall
into
push
mov
andb
pop
cmp
inc
inc
add
dec
jg
jg
frndint
adc
mov
cmp
outsb
sbb
adc
pop
or
adc
push
and
notb
daa
adc
jg
mov
repnz
aad
stc
xor
test
xchg
sahf
dec
adc
sbb
xchg
out
jg
js
leave
lock
andb
mov
cmp
std
jg
iret
lret
jl
nop
cld
cmp
dec
cs
notb
mov
or
test
jg
das
lahf
inc
xchg
stos
loopne
adc
nop
jb
jl
ds
dec
iret
jecxz
stc
sbb
xor
sbb
leave
sub
repz
and
in
dec
leave
test
cltd
xlat
stc
inc
outsb
push
dec
push
insb
jmp
dec
dec
push
shrl
outsb
rclb
loope
jg
pop
push
jae
fdivr
hlt
hlt
add
inc
pop
inc
insb
cmp
fs
dec
and
adc
adc
mov
incl
or
xchg
addr16
add
mov
jp
or
sub
xchg
fwait
lods
push
enter
mov
leave
mov
clc
popf
out
enter
jmp
mov
adc
dec
arpl
jle
fiadds
repz
dec
les
jg
add
sub
incl
mul
fs
mov
adc
mov
push
pusha
mov
stc
push
mov
mov
jle
inc
leave
ret
cmp
sub
stc
sbb
ljmp
add
repnz
mov
inc
shll
rorb
cmp
lcall
ljmp
loope
sub
adc
or
arpl
nop
push
enter
push
xchg
stc
jns
das
jns
or
js
das
jne
cld
cmpl
push
add
and
loopne
enter
rcr
int3
jno
enter
lcall
jg
and
push
add
jle
imul
inc
gs
das
movsb
pushf
ss
xchg
sub
pop
mov
and
leave
stos
dec
jle
pop
push
outsb
xor
pop
adc
pop
adc
and
leave
out
xlat
lcall
jne
repnz
mov
add
repnz
inc
or
pop
adc
jp
enter
out
dec
jno
inc
lds
inc
inc
add
add
xchg
das
pop
add
add
mov
inc
ljmp
push
test
cmpsl
arpl
sbbl
inc
dec
push
mov
jg
decl
imul
jbe
jg
mov
popf
bound
cs
movsl
out
daa
outsb
or
pop
add
or
add
daa
xchg
aaa
jle
in
and
cmp
cmc
mov
xor
pop
cmp
inc
ret
mov
lock
rorb
insl
dec
negl
add
mov
inc
gs
pop
pop
aam
jbe
pop
ret
sahf
aam
pusha
mov
jg
nop
dec
and
pop
jmp
push
push
mov
loopne
jle
nop
dec
mov
loopne
push
xor
lret
adc
and
loop
clc
adc
enter
imul
xor
loopne
pushl
mov
jb
stc
xchg
mov
inc
clc
insb
dec
pop
dec
repz
incb
add
sbb
lahf
popf
es
adc
cwtl
mov
and
and
pop
cmp
push
and
add
inc
cmp
cmp
sub
adc
pop
scas
xor
fistl
cwtl
sub
jle
xor
scas
testl
sbb
sub
dec
jle
pop
dec
xchg
insl
int
in
push
in
jb
loope
fidivs
push
dec
shlb
mov
call
jg
jmp
jae
jg
dec
in
or
xor
loop
mov
inc
lds
adc
pop
cltd
faddl
sbb
pop
int
mov
in
sub
xchg
and
mov
cmp
lahf
adc
clc
sub
orb
dec
inc
or
je
mov
outsl
shl
adc
push
push
loopne
pop
cmp
adc
jle
out
insb
jg
icebp
xchg
inc
push
jns
jle
or
aas
aaa
pop
enter
mov
or
inc
jg
rep
clc
ljmp
push
inc
push
sahf
repz
sub
arpl
jae
mov
jl
lock
xchg
or
push
pop
mov
push
lock
jle
popa
dec
aam
imul
data16
pop
fsub
push
inc
dec
dec
mov
sub
adcl
sub
adc
jg
nop
data16
iret
jo
xchg
push
push
adc
push
call
xchg
aam
push
adc
mov
jg
jl
gs
aas
sub
repnz
mov
roll
cs
js
sub
lods
ds
cmp
dec
inc
inc
dec
lret
pop
inc
jmp
jp
pop
loope
ret
in
fsub
cmpsl
inc
jg
xchg
shl
xchg
cmpl
push
pop
pop
or
inc
inc
mov
cld
ljmp
jmp
div
popf
in
pushl
push
repz
xchg
loop
icebp
in
cli
lods
leave
rol
cmpsl
aam
mov
fmul
mov
cltd
aam
mov
mov
leave
lods
mov
mov
int3
int
or
movsl
std
jg
jmp
nop
hlt
testl
jg
mov
outsb
addr16
stos
cmp
jge
jmp
and
lods
jecxz
aaa
pop
imul
mov
inc
jno
mov
cmp
or
dec
jg
xchg
xor
inc
push
push
cld
jg
dec
jge
movmskps
and
push
xchg
push
arpl
sbb
pop
jle
inc
addb
je
jmp
outsl
aas
pop
push
rorl
adc
rorb
sbb
jle
incl
mov
adc
add
movsb
shrb
pop
aaa
and
inc
decb
xor
out
cli
int
cmp
jg
inc
inc
xor
lods
sbb
mov
ds
or
repz
sti
pop
bnd
adc
push
mov
dec
ret
jns
and
test
clc
out
add
jg
inc
push
pop
and
aas
dec
dec
dec
xor
daa
and
adcb
sub
cmp
outsl
outsl
xor
int3
and
push
ja
arpl
push
lret
clc
insb
push
adc
bound
mov
icebp
or
pop
xlat
pop
push
jle
lods
dec
pop
in
jl
push
movsl
or
shr
and
decl
pop
push
jle
popa
arpl
ja
pop
sbb
or
inc
mov
inc
inc
stos
cmp
and
in
das
fstl
or
dec
ja
jle
ficoml
inc
mov
inc
movsb
sub
std
pushf
fwait
jb
fsubrl
jle
loop
and
xchg
ljmp
mov
cmc
scas
push
loopne
and
lea
xchg
sub
call
mul
or
and
adc
and
dec
imul
push
decl
pop
pop
jbe
sbb
or
jl
cwtl
xor
sahf
sbbb
gs
cli
ror
aaa
pop
fiadds
or
jg
repz
pusha
and
int
adc
push
jae
movsl
cmp
xor
jle
and
lcall
inc
hlt
xor
pop
fdivs
mov
cmp
jmp
sbb
mov
cmp
out
lods
nop
inc
push
jo
add
adcb
add
push
iret
adc
mov
lods
incb
mov
add
outsl
mov
aad
push
mov
or
cmp
xor
adc
movsl
hlt
sbb
mov
pop
jg
mov
imul
adc
jg,pn
aaa
pop
inc
jg
push
clc
sbb
mov
adcb
cld
push
mov
pop
imul
fwait
and
rclb
jp
hlt
jns
and
leave
and
dec
inc
or
das
mov
dec
leave
je
cmp
mov
adc
mov
sbb
fs
adc
xor
jle
mov
add
test
mov
jg
js
pop
xor
xor
and
ret
xor
repz
imul
test
cltd
push
inc
push
call
mov
and
mov
jg
sub
jbe
pop
movsb
pop
lret
repnz
lret
mov
inc
xor
lods
adc
jl
in
xchg
add
add
inc
dec
and
movsb
mov
enter
jle
cmp
pop
push
jg
pop
incl
dec
nop
add
nop
push
enter
pop
fs
jb
into
je
jnp
adc
cmp
adc
loope
jg
push
add
lcall
ljmp
js
lret
shl
mov
jle
pop
arpl
or
sbb
pop
scas
nop
iret
mov
movsl
pop
jp
mov
pop
in
and
add
or
adc
xchg
icebp
test
jg
aas
jg
pop
push
xor
jg
cwtl
imul
jg
jle
dec
imul
clc
cmp
push
or
nop
pop
ljmp
push
xor
xchg
sbb
xchg
daa
cmpsl
mov
cltd
rorl
mov
dec
push
lcall
xor
dec
jg
dec
inc
sbb
ret
pop
inc
mov
sub
xchg
and
xchg
test
pop
and
jae
cltd
inc
mov
jo
jnp
or
in
jbe
or
jg
shlb
incb
adcb
pop
jg
mov
jg
test
push
lahf
cmp
and
push
mov
addr16
xchg
and
push
pop
leave
cmp
mov
pop
decl
cmp
sbb
jb
push
xorb
test
pushf
push
mulb
repnz
mov
test
fcomp
ret
into
dec
ds
and
adc
mov
leave
or
dec
push
movlps
lcall
mov
dec
or
mov
lock
jmp
roll
or
out
jg
cmp
arpl
and
fmul
jmp
adc
rcl
scas
or
xor
sub
jle
out
enter
and
incl
push
scas
fidivrs
pop
jle
movsl
lods
stos
mov
mov
add
aam
aaa
sarb
or
pop
pop
cli
jb
or
pop
add
ret
cltd
leave
or
jb
jge
pop
les
ficompl
ffreep
incb
pushf
push
push
js
lds
jle
fiaddl
add
or
sub
js
jo
pushf
mov
addb
fisttpll
lea
or
call
mov
mov
sbb
stos
push
popa
hlt
imul
sub
sbb
adc
decl
xchg
add
xlat
mov
stos
pushl
pusha
jne
jmp
insb
lods
xchg
icebp
xor
popf
stc
loopne
and
sub
fwait
out
movsb
icebp
insb
pop
dec
cmp
add
and
cmpb
jg
es
xchg
or
inc
andl
cwtl
mov
add
mov
dec
and
fcoml
or
sbb
arpl
lcall
ja
pop
clc
mov
subb
jecxz
and
imul
cmp
decb
sub
mov
cmovnp
pop
std
ret
insl
mov
jne
les
mov
fnsave
out
lcall
add
dec
arpl
daa
lahf
jmp
mov
popf
jle
mov
xor
push
push
pop
in
into
add
sub
mov
ds
addr16
and
cmp
jg
and
push
enter
int3
in
add
decl
and
pusha
in
lods
test
jne
mov
fisubrs
lods
mov
stc
pop
rorl
imul
std
out
orb
call
nop
xchg
xor
jmp
or
fists
in
lock
or
sub
jo
inc
mov
push
add
sbb
loope
mov
push
jge
mov
or
sbb
test
jl
xchg
fmul
movsl
pusha
rcl
sub
push
xor
insb
ljmp
add
cmc
sub
jg
sbb
inc
push
inc
jg
xor
iret
dec
rcl
fmuls
push
scas
pop
shlb
std
push
ljmp
repnz
iret
sbb
xor
mov
jne
push
add
dec
call
xor
add
add
sbb
or
jle
cmp
out
pop
pop
pop
push
lcall
es
jle
cmp
lcall
xor
and
jp
push
ds
add
scas
inc
dec
dec
cmp
decl
dec
xor
bound
sbb
movsb
dec
dec
pop
pop
xchg
push
insl
test
js
inc
cld
test
jg
add
pop
leave
adc
add
ljmp
stos
dec
loop
les
push
rcl
mov
dec
sti
xchg
inc
xchg
std
cmpb
mov
mov
dec
or
call
ljmp
pushf
sbb
rcr
mov
stos
mov
cli
ljmp
pusha
jno
cmpsb
mov
mov
mov
movl
repz
jp
jae
enter
loopne
cmp
pop
imul
mov
loop
jle
js
push
push
adc
decl
sbb
nop
hlt
das
inc
pushf
clc
pop
rcr
frstor
stos
adc
popa
ja
rorb
mov
mov
sar
popa
sbb
leave
xchg
movl
jle
nop
sar
pushl
daa
add
cmp
cmp
sub
sar
cmpsl
or
adc
add
in
or
test
sub
ds
adc
inc
push
negb
sbb
fdivrl
mov
jg
test
jle
adc
or
jg
xchg
dec
inc
lahf
test
inc
jo
inc
sbb
adc
mov
fcoml
xchg
jle
or
gs
bound
jb
enter
test
call
cmp
xor
add
mov
adc
add
xor
jp,pn
dec
jg
sub
fildll
pushw
pushl
call
inc
jno
pop
cld
decl
lahf
push
jge
jnp
jge
dec
inc
and
mov
lcall
push
sub
fxch
scas
sbb
push
pop
fdivrl
pop
pop
pop
fisubrl
add
inc
inc
inc
inc
outsl
dec
int3
dec
add
dec
sbb
jnp
xor
mov
mov
shlb
jo
fimull
pushl
mov
cs
lea
add
add
push
mov
jg
jg
xchg
pusha
jle
push
pusha
sarl
push
incl
xor
call
mov
add
mov
pushf
inc
popf
sub
add
or
dec
push
sbb
sub
xor
pusha
ds
add
cmpsl
fdivs
mov
stos
cld
add
adc
sti
sahf
shlb
repnz
shr
pslld
push
jg
jle
add
dec
mov
jns
jb
xor
or
and
sarb
addb
jg
incl
inc
xchg
out
add
pop
out
lds
pop
sbb
cli
xor
dec
mov
inc
mov
dec
or
pop
dec
pop
mov
sub
pop
cmp
pop
sub
mov
pusha
bound
das
sbb
outsb
inc
mov
stc
jbe
loop
mov
pavgb
mov
stos
adcb
xor
lret
jg
sti
jg
or
or
jg
outsb
arpl
test
jg
mov
jg
in
mov
sbb
incb
scas
or
pop
lret
fsin
mov
push
xlat
or
pop
mov
lcall
not
mov
out
pop
push
out
int3
push
aam
and
inc
dec
and
pop
into
pop
scas
movsb
cmp
inc
stos
flds
stc
jecxz
cmpsb
lcall
movsl
stc
jmp
dec
adc
mov
pop
mov
aad
push
fsubs
dec
add
jg
ret
xor
jg
decl
decl
push
incl
ljmp
data16
mov
xchg
or
sbb
or
jg
jmp
xor
mov
adc
mov
out
fimull
bound
fsubrs
lret
inc
ja
ljmp
ljmp
cwtl
sub
mov
pop
mov
fcmovu
scas
inc
pop
scas
jmp
push
mov
mov
push
cmp
lock
out
xorb
clc
ljmp
inc
xchg
aas
mov
imul
call
inc
add
inc
push
or
push
das
dec
pushl
pop
jns
stc
add
and
jg,pn
push
adc
stos
inc
out
loopne
hlt
add
in
loope
js
int
adc
mov
pop
subb
sub
cmp
jl
ds
mov
mov
xor
ret
cmp
test
ret
cwtl
push
ljmp
call
ljmp
xor
or
add
adc
push
dec
dec
add
jg
and
pop
jg
jae
adcl
outsb
stc
and
rsm
aas
push
adc
dec
mov
out
push
out
dec
inc
orb
jg
pop
outsl
outsb
stc
andb
cld
inc
sbb
push
jg
roll
cmp
scas
jg
sbbb
stc
sbb
mov
lcall
inc
lcall
ljmp
push
push
xchg
push
push
aaa
dec
shlb
std
decl
incb
cmpsb
call
jo
xor
ljmp
decb
jne
push
stos
adc
and
mov
test
jmp
xlat
mov
cmpsb
cmp
xchg
sub
lahf
scas
push
inc
jg
fimull
dec
pushf
test
lahf
psubb
movsb
cmp
adc
mov
sar
or
pop
bnd
pop
inc
inc
mov
xchg
loop
test
mov
fimuls
mov
ret
mov
shrl
adc
pop
or
jo
lods
lods
imul
sub
decb
adcl
and
xchg
mov
bound
jl
nop
sbbb
out
xor
add
enter
data16
enter
or
pop
xor
mov
pop
or
arpl
or
jmp
test
push
adc
inc
stos
call
je
ret
push
jle
fstl
inc
lods
push
iret
hlt
out
aad
mov
int3
int
pushl
sbb
sub
jne
aam
xchg
sarb
or
icebp
xor
push
fists
shll
xor
jg
incl
mov
adc
xor
enter
and
cli
jmp
fs
ret
inc
bound
jne
sub
push
add
decl
inc
push
pop
sub
inc
decl
push
les
pop
lock
dec
test
mov
ror
jmp
test
jo
jmp
pushf
or
adc
shlb
jg
pushl
mov
arpl
or
js
xchg
push
push
aam
mov
sbb
in
jmp
and
sub
sub
inc
add
adc
fbstp
ret
incl
jb
adc
inc
dec
mov
cmp
inc
out
hlt
push
add
pop
or
popf
push
jle
ds
sbb
cmpsb
dec
mov
js
cmpb
ja
jl
dec
frstor
arpl
imul
imul
stos
or
jg
dec
std
jg
or
bound
inc
inc
mov
mov
dec
jecxz
repz
sub
shll
jg
incb
inc
ds
outsl
mov
outsl
aam
sub
lods
xchg
lret
sbb
lea
pop
ds
movswl
mov
xor
cmp
push
or
or
jbe
pop
xor
add
jns
or
jg
inc
ret
add
ljmp
cltd
jb
ja
pop
adcb
in
lahf
jl
lret
loop
adc
stos
fwait
into
mov
pop
jle
mov
lret
addb
or
jle
cmp
xchg
add
movsl
data16
insb
jle
adc
sub
adc
inc
out
xchg
call
aad
xor
jge
sub
inc
xchg
add
or
sub
scas
decl
bts
sbb
mov
sbb
xchg
lcall
cmp
jg
aam
es
or
jmp
adc
push
pop
mov
xor
dec
clc
psrlq
dec
pop
sbbb
jg
sahf
loope
mov
aaa
jne
xor
push
test
mov
and
mov
sub
stos
insl
push
push
push
fcmovnu
push
mov
idivb
shrl
rcl
add
jo
and
lret
sbb
add
cmp
or
and
jge
pop
enter
sbbb
fwait
popf
xor
stos
pusha
daa
xchg
xor
inc
mov
xchg
cmp
adc
jge
in
cmc
xor
dec
loop
sbb
jg
pusha
add
or
jg
or
mov
mov
add
jno
xor
jecxz
in
loope
out
jle
sub
dec
jg
mov
adc
sbb
and
mov
xor
daa
outsl
inc
dec
lcall
cmp
call
test
mov
pop
pop
jno
sbb
mov
and
cmp
mov
jle
loopne
adc
repnz
adc
dec
inc
add
addb
pop
stc
push
std
and
leave
int
and
cmpsb
daa
vpslldq
push
or
add
jg
jle
ljmp
jns
jnp
push
rolb
cli
fwait
adc
pop
mov
pop
sub
pop
push
jg
xor
movb
push
jg
xchg
sbb
es
mov
add
enter
mov
bnd
lock
jg
push
pop
jo
jg
adc
xchg
sbb
push
inc
gs
test
jg
aaa
loopne
mov
cmp
dec
push
or
fisubrl
jg
fwait
incl
test
and
push
adc
cli
nop
shrl
loopne
and
adc
xor
rolb
mov
mov
jns
insb
mov
sbb
pop
stos
jl
jne
push
rolb
cld
gs
lret
adc
jo
out
inc
or
jle
fisubrl
in
lahf
cmp
lds
or
es
arpl
insl
adc
add
and
jmp
pop
xor
mov
jg
imul
popa
push
add
and
xchg
test
mov
dec
jb
repnz
push
or
aad
jecxz
and
and
cltd
out
xor
jle
cwtl
das
jmp
add
push
inc
sahf
adc
cmp
jle
jp
add
adc
jg
call
jp
pop
and
pop
push
incb
decl
mov
add
sbb
jmp
fidivs
xor
mov
ss
jg
into
mov
or
ss
pop
xor
aas
incl
inc
push
in
repz
mov
nop
pop
mov
jmp
ret
std
push
pop
xchg
adc
mov
dec
outsb
shlb
out
lret
xchg
jno
lcall
add
or
jnp
and
push
jle
inc
adc
or
clc
incl
or
addr16
adc
dec
push
insl
dec
ljmp
rcll
push
lea
pop
add
incl
out
and
jg
xor
sbb
adc
cmp
pop
adc
push
enter
icebp
xor
mov
js
mov
sbb
imul
cld
mov
aaa
and
es
sub
jg
mov
addl
fdivs
add
jmp
or
call
jmp
pop
jg
add
daa
subb
loop
jb
sarb
dec
adc
and
popl
sbb
mov
cmc
xlat
jb
repz
pop
sarb
fwait
and
clc
int
add
repnz
cmp
js
mov
jg
push
sub
xchg
push
jg
imul
jl
pop
sub
inc
mov
xchg
adcb
daa
jg
or
mov
adc
jg
and
decl
in
out
add
or
xchg
pop
sbb
mov
sbb
adc
or
add
arpl
xor
mov
dec
enter
add
pop
frstor
sub
push
or
sub
mov
pushl
mov
mov
mov
aam
jmp
in
orb
and
sub
and
add
add
and
add
scas
xchg
loopne
add
in
arpl
stos
dec
ss
nop
cmpsl
ljmp
dec
enter
imul
jg
out
add
sahf
popa
mov
ja
pop
push
movsl
jge
call
adc
shlb
mov
jg
adc
incl
repnz
stos
sub
insl
jg
and
add
ss
pushl
je
and
inc
and
enter
add
jo
jo
and
and
sub
out
icebp
repnz
lret
in
std
ret
add
xchg
test
unpcklps
andl
inc
int
pop
popf
mov
movsb
jmp
imul
push
out
stos
loop
cmc
jecxz
lock
mov
jl
out
repnz
mov
loope
mov
dec
mov
cwtl
repz
mov
into
int
adc
aaa
shlb
cmc
pop
add
scas
icebp
jmp
inc
out
das
or
dec
xorl
xchg
cmpsb
movsl
mov
movsl
mov
xchg
mov
pushl
adcb
push
out
cmp
cmp
jg
mov
dec
adc
sar
sarl
or
add
lcall
fstps
decl
stc
mov
cs
loop
xor
mov
dec
mov
aad
lcall
xor
inc
mov
jo
add
outsl
bound
or
sub
xor
pop
sub
cmc
pop
xchg
pop
repnz
lods
jl
aas
xchg
cmpb
das
or
out
aas
adc
jg
and
push
cmp
adc
cld
jmp
incl
xor
jecxz
jge
dec
adc
filds
lock
sbb
ficoms
movsb
lock
mov
sub
sbb
lcall
adc
pop
sub
fcmovbe
add
pop
xor
incb
push
incl
incb
loop
mov
or
adc
push
lock
mov
adc
push
dec
movsl
xchg
xor
icebp
xor
adc
sub
and
cld
outsl
push
jle
add
fsubrl
dec
movups
sub
xor
pop
jle
pop
add
pusha
add
je
cmp
jp
jle
xchg
push
or
adc
inc
sbb
xchg
inc
test
shll
cmp
jle
inc
jle
stos
sbb
mov
xlat
pop
jle
call
xor
jg
pusha
mov
pusha
pop
add
dec
add
cmp
or
aad
mov
cltd
sbb
pusha
fisubl
pop
fs
sahf
jmp
push
jns
sbbb
fmull
xchg
scas
inc
pop
rcll
add
inc
pop
test
sbb
mov
lea
clc
call
int
dec
loopne
xchg
ljmp
in
xchg
fwait
sti
fstpl
aad
jle
in
rcrl
out
jp
adc
xor
leave
pop
pop
mov
cli
lcall
or
push
inc
daa
mov
les
mov
movsb
lock
jle
mov
pop
sub
mov
fnstcw
jl
nop
dec
shll
sub
insl
jg
pop
push
jo
cmpl
testl
lds
lcall
sarb
push
adc
and
repnz
inc
sub
adc
leave
movsl
fidivs
adc
call
in
dec
adc
push
call
fs
xchg
add
int3
lret
xchg
jg
mov
add
add
incb
insl
add
xchg
prefetchw
or
or
rclb
add
sbb
pop
and
lret
ds
fwait
lock
jle
sub
incb
pop
xor
pop
aaa
cmc
mov
jge
xlat
lods
inc
inc
inc
mov
dec
decb
jmp
pop
add
mov
pop
pop
fldenv
bound
shlb
xchg
pop
cwtl
push
popf
dec
push
add
add
pop
dec
test
push
inc
push
es
dec
pop
push
jle
xor
das
pop
sub
inc
ds
cmp
cmp
lds
sbb
je
jle
mov
test
dec
lds
movd
aam
inc
imul
cmp
jg
insb
sub
or
mov
stos
jg
jg
movsl
and
cmp
adc
or
mov
sbb
jmp
stc
jg
hlt
add
les
call
cwtl
add
test
xchg
lret
dec
jg
pop
add
enter
dec
xchg
pop
sahf
call
add
inc
enter
stc
bnd
or
mov
decb
or
and
add
imul
loopne
cltd
movsl
jecxz
cld
add
divb
mov
and
dec
jmp
nop
xchg
in
mov
pop
out
mov
sub
add
pushf
jg
xor
and
adc
push
jns
add
popl
jg,pn
sahf
loopne
adc
sarb
pop
dec
add
jg
dec
inc
imul
inc
add
dec
subl
test
inc
xor
pusha
push
jg
inc
test
call
inc
mov
mov
out
out
cli
mov
out
addr16
and
test
icebp
dec
push
jl
shrl
sbb
jg
pushl
mov
cltd
cwtl
addb
or
cmp
loop
iret
xchg
mov
pop
ds
dec
xor
dec
jmp
aaa
call
jg
mov
inc
addl
sbb
addb
xchg
pop
mov
xchg
sbbb
xchg
inc
and
sarl
mov
jg
insl
or
cmp
pop
dec
sbb
push
jle
mov
inc
pop
dec
scas
dec
pop
inc
adc
xchg
jno
xor
or
adc
cwtl
jb
or
mov
arpl
leave
add
add
xchg
sbb
loopne
call
incb
es
pop
adc
stos
aam
mov
clc
jmp
call
mov
jmp
decl
push
jg
nop
or
jg
push
repnz
mov
fs
sub
je
adc
decl
sbb
out
out
out
in
jnp
pop
pushl
inc
es
ljmp
es
stos
mov
jmp
aad
incb
iret
into
mov
and
pop
ret
xchg
sub
icebp
imul
or
decl
pop
push
add
pop
pop
sahf
pop
xchg
andb
enter
jle
pusha
mov
test
pop
and
and
fucom
xor
jg
out
sbb
inc
lcall
jmp
adc
dec
pcmpgtw
les
enter
jl
sub
jo
out
jb
arpl
paddd
inc
or
adc
inc
and
pop
fbld
inc
dec
jno
add
fbstp
xor
adc
daa
insl
inc
ljmp
push
xor
push
daa
xor
push
daa
cmp
cmp
lcall
clc
add
call
inc
mov
icebp
aam
push
inc
es
test
je
xlat
sub
pushf
mov
and
mov
add
and
popf
clc
push
jg
adc
add
jg
mov
dec
mov
mov
jg
adc
and
push
mov
add
adc
push
mov
inc
sahf
xchg
std
jmp
out
adc
repz
or
pop
mov
fcmovu
fdivrs
scas
ret
js
das
xor
pusha
inc
xor
mov
cmpb
pop
iret
mov
jle
shrl
mov
movsl
movsb
or
loopne
stos
xchg
push
jg
xchg
mov
clc
adc
or
cmpb
test
and
xchg
lcall
mov
pop
arpl
add
hlt
in
in
fsubs
pop
pop
and
xor
mov
mov
ja
ljmp
cmc
aad
push
mov
sti
sarb
into
xchg
mov
ret
out
sbb
or
mov
rcll
sbb
pusha
lock
push
push
push
push
rorl
sub
cltd
sbb
cmpb
jg
xchg
bound
adc
rclb
push
in
dec
lods
xlat
aad
or
jbe
sbb
pushf
xchg
mov
jg
icebp
mov
cmpsl
cmp
lods
jle
cld
jg
or
in
imul
jb
addb
push
xchg
lret
xchg
jb
inc
mov
push
dec
and
mov
das
daa
add
shlb
add
and
orl
adc
andb
jg
incl
enter
in
xchg
cwtl
mov
imul
es
popf
or
bound
sub
cmp
push
jg
dec
jg
mov
inc
and
mov
call
dec
jg
and
xchg
mov
jle
push
adc
or
push
jg
ljmp
data16
arpl
repnz
pop
js
dec
cld
jg
ljmp
adc
push
pop
dec
sub
decl
aad
sub
xor
xor
imul
and
mov
mov
dec
xchg
shll
mov
das
jle
sub
pop
das
push
rcrl
setg
jg
mov
mov
add
pusha
or
dec
adc
test
enter
sub
jo
pop
and
add
jnp
sbb
enter
js
cmp
push
out
sbb
jae
ret
leave
sub
xchg
inc
sahf
andb
sub
add
inc
and
ret
push
jle
js
sbb
fs
push
in
jmp
or
fldcw
rcll
js
ficoml
in
in
inc
movsl
pop
mov
dec
sarl
or
jg
jg
xor
xor
orl
pop
push
arpl
and
xor
pop
jle
jmp
sub
stc
cli
sti
hlt
cmc
mov
sbb
mov
fs
xchg
xor
jne
ret
inc
sbb
mov
stos
xor
call
bound
sub
pop
fsubl
js
arpl
rorl
andl
incl
leave
lret
dec
xchg
xor
cmp
decl
and
lea
add
push
inc
in
pop
insl
clc
push
cmp
pusha
std
sub
repnz
xor
xchg
pop
shlb
lret
repz
decl
mov
adc
lods
adc
loop
pop
jle
pop
daa
dec
mov
lds
push
or
mov
and
pop
jle
sbb
xor
popa
jg
pop
add
incl
cmp
and
lea
sub
inc
jg
cmp
in
iret
sar
or
je
shrl
cmp
jo
jg
iret
subl
pop
in
scas
in
pop
mov
in
sti
fbld
add
addb
mov
daa
jg
adc
push
add
adc
sbb
cmpsl
cmp
mov
lods
pusha
sbb
add
and
xor
or
movsb
mov
jno
dec
jnp
jmp
pushl
call
sub
pop
push
pop
je
pop
dec
xor
and
pop
xchg
decb
sub
and
adc
js
ret
arpl
mov
or
xor
mov
pushf
inc
aas
loopne
dec
add
insb
imul
jg
rcrb
orb
jg
and
xchg
pop
inc
push
inc
jle
pop
mov
lds
xor
xor
mov
add
cmp
or
ds
arpl
jg
or
out
add
mov
inc
jo
jg
adc
and
pushl
jns
ss
idiv
push
pop
push
pop
dec
adc
stc
xchg
xchg
xor
cmp
jo
andb
in
movsl
leave
ljmp
in
push
cmp
push
push
add
lcall
adc
sbb
in
jg
enter
or
nop
sbb
sbb
dec
jg
sbb
mov
cmp
inc
nop
and
mov
movsb
adc
mov
mov
jle
jb
mov
adc
js
jg
adc
pop
mov
lcall
xchg
add
fistl
lods
pop
and
enter
pop
ljmp
std
cwtl
mov
cs
jg
push
les
add
add
es
pop
cmp
jle
leave
or
sub
outsb
jg
fwait
ret
jo
arpl
inc
push
sbb
and
add
xor
add
push
push
push
push
je
adc
mov
dec
dec
pushl
dec
bound
jmp
cmp
inc
loop
lods
push
sbb
arpl
jg
pop
dec
aas
jo
jb
inc
mov
rclb
mov
jl
incl
arpl
das
add
mov
add
enter
inc
out
inc
or
or
adc
fisubrs
xor
call
add
into
adc
inc
les
and
or
sub
or
cmp
decb
hlt
xchg
jg
cwtl
mov
cwtl
hlt
jg
and
imul
lods
push
daa
aas
idivb
leave
pop
fs
pop
dec
xor
clc
and
dec
xchg
into
ss
decl
nop
pop
cltd
xchg
jg
je
jno
cmp
and
jg
lock
enter
xor
sbb
push
jmp
mov
stos
adc
lea
dec
xorl
dec
cmp
sahf
xor
jg
add
or
jecxz,pn
adc
outsl
bound
or
add
and
or
jg
dec
adc
and
call
jg
not
dec
out
outsl
mov
mov
dec
call
test
arpl
jo
adc
mov
push
lret
push
pushl
xor
aam
addr16
or
jge
js
fnstcw
xor
mov
sub
fcomps
ljmp
mov
test
imul
nop
std
sti
arpl
es
incl
and
jbe
je
test
sahf
jg
out
in
dec
sbb
cmp
jp
fwait
iret
fsubr
out
push
sub
xchg
cld
cmp
pusha
mov
mov
ret
arpl
ret
add
dec
test
clc
adc
jle
or
push
pop
arpl
mov
int3
mov
mov
popa
jg
mov
enter
iret
aad
sub
call
pop
ret
sub
mov
mov
lcall
or
xor
push
and
sub
jno
icebp
shlb
xorb
ljmp
cmpsl
aaa
sub
popl
imul
outsb
adc
arpl
enter
xchg
add
decb
ret
dec
sahf
std
sbb
xchg
jle
in
call
push
shr
incl
jg
mov
push
sub
push
jle
xor
lods
lods
outsl
pushf
xor
lock
push
jg
and
test
add
jmp
pop
dec
push
pop
and
sub
int
sub
pop
cmc
xchg
push
add
jns
mov
sbb
push
mov
xchg
lock
jg
and
sbb
sti
xchg
lret
and
cmp
daa
into
out
jg
push
add
pop
jmp
xchg
mov
add
and
mov
mov
push
push
jmp
jmp
push
adc
cltd
lock
pop
sbb
in
fs
lcall
sub
fmul
hlt
decl
adc
cld
cmc
adc
mov
xchg
mov
imul
cmc
mov
pop
mov
sbb
push
fs
orb
sar
or
js
dec
push
adc
add
loopne
push
dec
loopne
xor
cmp
and
repnz
data16
or
aaa
or
test
and
xor
ljmp
inc
xchg
cld
lahf
lcall
push
fstps
xor
pop
pop
jmp
push
pop
jbe
pop
jle
in
loop
add
in
pushf
in
movsb
decb
inc
xor
push
sbb
ds
nop
popf
cmp
inc
mov
daa
fnstcw
movb
xchg
iret
inc
lods
fs
outsb
pusha
push
push
lock
sub
add
test
jg
das
sub
dec
and
lahf
pop
and
sbb
push
lods
pushf
fs
jne
jae
mov
stc
inc
sahf
adcb
add
icebp
inc
cmp
jg
mov
sub
dec
iret
fbstp
pop
pop
push
add
xor
shlb
in
adc
pop
push
pop
and
sub
dec
pushl
clc
or
das
cmp
jg
dec
add
rcl
outsb
jg
or
xor
adc
jg
adc
jo
jle
adc
and
jg
insl
push
push
inc
lahf
jg
or
sbb
lods
or
add
mov
lcall
push
bswap
call
loop
xchg
inc
test
push
pop
incl
dec
xor
inc
or
mul
adc
arpl
cld
in
adc
stos
sbb
xchg
clc
inc
inc
pop
xor
test
subl
push
xchg
sbb
loopne
loop
aas
addb
jno
icebp
pop
jle
mov
adc
lcall
jle
pop
jle
xor
xor
mov
or
mov
mov
fidivs
ljmp
mov
inc
lahf
js
dec
lds
fcmovbe
fsubl
push
xlat
pop
dec
push
fwait
sar
pop
insb
jle
pop
lret
mov
jmp
push
call
movsb
jg
jg
mov
int
jb
repz
jb
movsb
jg
loope
aas
fildll
clc
pop
lock
xor
sbb
sub
jg
pop
inc
jle
sbb
and
lret
or
jle
das
fldcw
push
add
jns
shll
ds
lds
test
out
lea
in
jb
jle
inc
mov
mov
jg
inc
and
mov
popa
cs
jg
inc
mov
cmpsb
adcl
push
inc
sub
jns
pop
je
sub
lahf
movsb
jb
or
js
push
je
fs
mov
in
in
call
cmpsb
mov
inc
movsl
test
jle
pop
adc
mov
xor
scas
push
incl
inc
fsubr
out
dec
dec
ljmp
js
idivl
pop
rcr
sub
xlat
adc
pop
andps
inc
push
add
cli
ss
dec
mov
sub
jb
xchg
and
and
or
add
call
inc
pop
and
cmp
sbb
out
and
fbstp
loopne
in
arpl
dec
jae
push
cmp
adc
dec
call
int3
mov
push
push
negb
ljmp
and
mov
nop
loop
dec
je
inc
lcall
sbb
enter
jg
je
sbb
push
jmp
sub
xor
push
dec
js
inc
sub
sahf
pushf
inc
fmuls
js
jns
enter
pop
fistpl
loop
mov
xorb
sbb
jge
call
cs
nop
lret
push
jg
adc
add
xchg
adc
mov
dec
mov
insb
dec
cs
addr16
inc
ljmp
adc
lods
cs
mov
mov
and
jns
pop
xchg
repnz
push
fsts
loope
xor
es
pop
aas
dec
cld
decl
cltd
sub
sub
shlb
fistpl
mov
stc
movl
pushf
dec
loope
lcall
jg
cmp
jmp
in
adc
aad
pop
xchg
lds
fists
cs
call
fsubrs
arpl
insb
jo
sarb
inc
call
lods
push
int
aaa
cmc
daa
call
push
into
ljmp
jns
movsb
and
inc
add
incl
add
and
in
jb
loop
mov
lcall
out
or
xchg
push
xor
shrl
mov
out
jle
mov
xor
pushl
testl
mov
push
adc
mov
dec
adc
xor
enterw
call
sar
jg
pop
dec
mov
and
sub
xor
pop
jg
xor
leave
adc
aad
test
jp
addb
push
jb
mov
stos
adc
jg
push
rorb
pop
sbb
in
adc
mov
sub
and
rorl
divb
mov
and
scas
jb
jle
mov
std
ljmp
dec
xor
andb
push
pop
rorb
push
lock
pushf
flds
and
jg
adc
pop
and
push
and
rcrb
sahf
gs
cld
inc
sahf
bound
decl
cmpsb
adc
jns
ja
popa
add
insb
push
inc
dec
sub
jle
rcrl
or
fwait
xor
add
seto
jns
pushl
inc
jbe
in
add
pop
add
push
leave
push
rolb
inc
sahf
orl
and
outsb
pushf
sbb
mov
xchg
jnp
add
fs
jnp
in
jg
add
mov
lea
enter
sub
mov
fbstp
cmp
add
popa
or
jecxz
sub
adc
orb
add
xor
insb
js
mov
jle
cmc
and
sbb
pop
sbb
stos
push
jb
and
dec
mov
fcom
jo
or
rcl
shlb
fisubrs
mov
ret
or
jl
scas
mov
pop
dec
mov
dec
iret
mov
cmp
push
or
adc
jp
pop
fcomps
pushf
pop
or
inc
movsl
in
pusha
jnp
push
js
add
enter
insb
xor
xchg
cmovb
add
enter
call
fnstcw
lcall
add
lds
or
sub
and
cmp
mov
movsb
jmp
aad
enter
test
mov
sub
call
pushf
add
in
rcl
out
mov
and
cmp
mov
inc
div
push
push
mov
int
out
dec
sahf
sti
jle
push
adc
outsb
pop
jg
xchg
jg
les
lcall
repnz
dec
jg
and
adc
sbb
cmp
xor
pop
push
pop
and
das
push
dec
xor
jns
xor
pop
sbb
mov
or
outsb
cmp
dec
push
gs
or
push
outsl
mov
pop
clc
sbb
les
xchg
or
lcall
iret
fucom
xchg
mov
fnstenv
or
fstpl
in
cmp
inc
sub
repz
and
inc
sbb
jp
sub
orb
cld
orl
fs
and
mov
mov
jle
shlb
outsl
pop
sbbb
pusha
dec
sbb
dec
jg
push
cmpsb
push
adc
push
sbb
mov
rolb
decb
sub
add
jmp
rorb
inc
push
cmp
int
inc
inc
jg
cmp
and
cmpl
enter
outsw
xor
cmpl
jae
and
popf
roll
js
adc
outsb
incl
sub
daa
adc
mov
dec
sbb
jg
sub
lods
jg
sub
into
or
aad
enter
jg
sub
xor
add
stos
data16
pop
jg
mov
ljmp
inc
mov
jb
lods
or
pop
and
jle
pop
clc
les
jle
mov
outsl
rorb
pop
call
nop
or
lcall
mov
mov
test
pop
mov
out
stc
add
adc
nop
sbb
and
push
and
cmp
pop
shll
jg
enter
jle
js
movsl
add
aam
or
ret
dec
incb
and
jb
lcall
push
sub
cmpsb
push
ja
incl
icebp
pop
xchg
pop
icebp
mov
scas
push
loop
call
xorl
in
frstor
mov
xchg
shl
xor
xchg
sbb
out
test
dec
data16
mov
xchg
add
pushl
into
cmc
mov
inc
pop
fsubrp
mov
icebp
sub
outsl
add
mov
xchg
jg
jg
test
add
add
inc
rorl
les
test
jb
or
mov
jmp
int
jo
jg
xor
aam
mov
jg
inc
scas
jl
dec
movq
data16
call
push
add
pushl
jg
sub
pop
lcall
lcall
adc
cmp
shrb
add
or
jmp
push
insl
roll
and
call
add
dec
shll
divl
or
dec
jp
mov
mov
jg
jae
xlat
cmp
add
xorb
or
lea
push
fwait
jg
enter
add
in
mov
push
sbb
adc
add
data16
adc
out
lock
inc
pop
pusha
lock
std
dec
in
mov
jg
movsb
adc
rolb
adc
jno
adc
addr16
cld
and
dec
or
jne
aam
inc
jle
scas
loopne
loopne
mov
push
fsubrl
sbb
loopne
pop
ja
arpl
sub
ljmp
mov
xchg
fstp
aaa
cmc
clc
stc
je
ds
cmp
mov
lea
jae
mov
lea
mov
sub
testl
cwtl
push
fldl
add
and
js
int3
jg
xadd
and
je
inc
test
mov
in
insw
mov
push
xchg
daa
jns
cmp
xor
rcrl
jb
pop
adc
push
adc
in
push
jle
int
in
cmpsb
fisttpll
add
outsb
add
jns
jg
pop
pop
inc
add
sub
in
pop
in
and
adc
xchg
mov
xor
fistpl
adc
adcb
pusha
push
enter
insl
divl
test
lcall
add
cwtl
and
decl
ljmp
mov
sahf
addb
push
inc
jg
call
pop
aaa
int3
insb
mov
sbb
lcall
jg
dec
jg
enter
add
jg
mov
adc
imul
les
roll
jg
mov
ds
mov
mov
jle
xchg
cmp
mov
adc
int3
pushl
adc
jge
and
sub
dec
test
bound
and
lcall
sbb
xchg
mov
jle
nop
and
sar
pop
jne
cmp
add
jg
or
mov
jl
or
enter
or
cltd
jl
mov
add
add
les
arpl
cmp
cld
push
jg
imul
add
jne
and
add
cmp
jle
jmp
inc
sahf
movsl
add
xchg
add
movsb
sbb
add
add
or
lcall
xor
movsl
pop
xor
repnz
jns
ljmp
dec
xor
fdivr
jmp
pusha
and
daa
ja
lahf
push
adc
aas
call
imul
enter
ja
mov
movsb
jle
sbb
lcall
add
sbb
pop
mov
pop
lret
lods
sti
mov
rcrb
pop
push
and
data16
sbb
andb
sub
mov
jg
mov
popa
sbb
inc
jg
dec
inc
mov
lret
add
sbb
dec
fcoml
mov
mov
popf
xchg
lea
fs
in
in
arpl
pop
adc
push
sti
mov
orb
in
stos
jg
loop
mov
orl
pop
jae
xchg
xchg
shll
in
pop
add
mov
lods
or
out
enter
pop
jg
dec
cmpsb
int3
and
pusha
mov
ds
adc
sbb
lock
inc
add
push
jle
sbb
dec
lret
add
jg
cmpsl
mov
popf
ljmp
push
push
or
loop
xor
inc
dec
xchg
call
sbb
cmp
lcall
dec
mov
jp
jo
push
mov
xchg
ret
mov
dec
xlat
test
into
ret
fistpll
ljmp
jle
dec
jge
push
add
cmpsl
push
xorl
pop
pushf
fistpll
call
xchg
cmpsb
call
dec
or
cld
adc
jg
cmp
and
jo
jnp
jmp
inc
arpl
xor
inc
jno
ss
insl
cmp
cmp
insb
jp
push
inc
insb
inc
dec
lcall
pop
add
jl
dec
pop
inc
inc
inc
sbb
push
inc
inc
pop
dec
push
sbb
xor
jae
sub
fnstenv
pop
push
cmp
cmp
cli
cmp
and
sub
cmp
cmp
inc
jg
test
stos
add
jmp
sub
cld
inc
add
insb
pop
loopne
stc
imul
sub
xor
and
loopne
jl
jg
aas
pop
jg
insb
mov
aad
jae
das
incl
pop
lock
imulb
call
jle
sarb
mov
cmp
je
jle
jle
adc
int
decl
sbb
mov
cmp
repz
xorb
insb
adc
cmpsl
test
jo
sbb
sahf
cwtl
add
mov
xor
inc
or
or
dec
push
dec
cli
inc
pop
or
pushl
cli
adc
sbb
dec
push
adc
fdivrl
arpl
and
lret
cmp
stc
cwtl
test
pop
mov
pop
cmp
loope
add
lock
cmp
adc
jns
cld
inc
push
adc
pushl
pop
repnz
mov
sbb
es
dec
cmp
in
in
je
and
and
je
inc
cld
mov
jbe
orl
pop
xor
pushf
inc
jg
call
mov
adc
es
popa
add
loop
push
or
das
cli
dec
outsb
add
arpl
pop
dec
out
js
cld
dec
sub
add
fisubl
sbb
and
jle
mov
jnp
sub
xor
sub
aaa
push
cmp
sub
inc
mov
dec
dec
or
cli
push
pop
mov
mov
xor
gs
pusha
ljmp
jg
and
push
jg
stos
or
add
aaa
fs
jb
or
adc
push
lcall
int
das
out
add
xor
adc
adc
aad
call
jmp
sbb
decl
and
call
add
pop
pusha
je
xor
cmc
lcall
sarb
les
or
mov
jge
inc
mov
dec
inc
addl
pop
adc
push
xlat
push
or
pop
jle
push
lahf
jmp
sbb
outsl
or
inc
shl
push
jg
pop
add
pop
dec
inc
das
or
fwait
sub
call
adc
and
cld
jmp
repnz
repnz
lret
rcll
aad
sbbb
lcall
mov
ffree
pushf
xchg
push
lock
ljmp
pop
ss
aas
and
cmp
sbb
loope
xchg
pop
pop
pop
test
pop
inc
lcall
and
jg
bound
mov
sbb
incl
inc
sarl
xchg
pop
leave
lret
es
out
jb
and
idivb
bound
jns
dec
mov
addb
jg
pop
popa
mov
jle
cmp
mov
jle
or
pushf
enter
xchg
rcll
jg
adc
fisttpll
jecxz
jecxz
sub
fldcw
sub
sub
cmpsl
sub
mov
ret
cmp
lods
loope
or
lods
scas
mov
and
sbb
pop
lea
jp
pop
sub
lret
mov
cmp
jmp
decl
bound
imul
mov
and
sbb
ja
in
and
xchg
clc
aam
add
sub
mov
xchg
or
jmp
sub
inc
jg
push
add
nop
sub
push
inc
push
add
jg
addr16
and
add
jo
pop
nop
pop
enter
push
jg
pop
sbb
jns
cld
fdivrs
ret
and
xchg
loopne
jle
dec
add
push
jg
mov
das
cmp
jg
sub
imul
inc
incl
adc
pusha
sub
xchg
or
hlt
cli
incl
repz
inc
nop
roll
xor
dec
test
insb
or
enter
aaa
orb
fisttps
popf
push
jnp
and
lcall
cmp
cmp
sub
xor
or
mov
in
outsb
xor
xchg
jo
adc
mov
add
jg
or
jle
jne
pushl
test
sarl
xchg
loop
hlt
iret
rcrl
ds
test
cmc
sti
test
jle
cmp
lcall
hlt
outsb
dec
dec
mov
inc
daa
mov
hlt
adc
sti
push
push
dec
ds
pop
sti
call
movl
test
inc
mov
dec
inc
lret
fucom
xchg
push
adc
roll
jg
dec
and
loopne
popa
jno
mov
aas
pop
imul
adc
or
pop
in
icebp
lock
sub
xor
pop
incl
add
add
dec
rolb
adc
sub
jg
cmp
sub
sub
es
sub
and
inc
out
dec
into
pop
repz
cmp
push
and
pop
cs
lock
sbb
and
in
stos
pop
fs
gs
in
xor
pusha
or
movsb
jg
dec
mov
int3
add
dec
jge
mov
dec
and
fsubrs
in
aam
ret
call
xor
adcb
pushl
mov
add
push
je
mov
dec
jle
ret
and
xchg
cwtl
popa
sub
or
cmpsb
xor
adc
xchg
push
sahf
lock
mov
call
or
arpl
call
or
cs
aam
xor
jp
and
cmp
test
jg,pt
stc
mov
lahf
mov
push
dec
nop
je
push
xchg
jo
push
cwtl
jl
pop
sbb
pop
mov
cmp
jg
stc
cmpl
jle
pop
add
dec
add
pop
push
arpl
xchg
mov
jg
add
shrb
popa
loope
and
jle
or
subb
incl
adc
pop
decl
repnz
enter
loop
cld
test
xchg
jnp
add
push
decb
cwtl
jb
mov
fnstenv
or
ljmp
icebp
mov
dec
lret
cmp
scas
sti
cmc
decb
adc
or
ret
and
dec
cld
dec
adc
mov
cld
call
xchg
popa
loopne
mull
pop
jno
cmp
push
jmp
popa
or
jg
add
lds
leave
add
sbb
ss
test
pop
xchg
imul
lds
les
fcompl
dec
bnd
pop
or
cmp
pop
push
mov
adc
add
mov
out
stos
fdivr
scas
aam
xlat
out
mov
cmovp
scas
cmpsb
insb
jmp
inc
fcmovnu
fdivrs
fsubrs
sub
cmp
jbe
xor
mov
sbb
aam
aas
aas
inc
ret
sub
inc
inc
pop
cltd
mov
cmp
sub
pop
adcl
mov
jle
decl
lods
cs
outsb
lcall
jg
add
pop
jo
std
jns
and
push
lret
jnp
jg
mov
jg
dec
jno
jg
ljmp
out
jecxz
jbe
into
out
clc
dec
lods
decl
sbb
popf
negb
mov
mov
loope
mov
mov
xor
mov
imul
jae
inc
hlt
mov
bound
mov
push
adc
push
mov
sbb
mov
rcrl
add
or
insb
xor
int
lcall
js
and
nop
push
jg
xchg
or
sbb
jg
push
xor
jg
aam
mov
int3
aaa
lcall
shll
jg
lods
scas
adc
pushf
inc
ds
jg
decl
dec
sahf
dec
and
push
aas
pop
adc
jns
inc
stos
jbe
pop
xor
loop
fs
jg
adc
push
jg
adc
push
imul
subl
rorb
and
inc
decl
xor
xor
scas
and
sub
mov
push
pop
and
aaa
adc
and
daa
daa
dec
mov
jg
je
pop
pop
cwtl
inc
addb
inc
jg
dec
hlt
cltd
or
jg
adc
add
popa
idiv
lcall
enter
int3
or
out
xchg
adc
jg
add
popf
jbe
jbe
xor
pop
inc
jle
daa
aad
fwait
adc
outsl
clc
outsb
das
cmp
call
mov
pop
sub
cmpb
test
push
fcmove
cmp
pusha
inc
pop
scas
lds
shll
or
push
add
pop
cwtl
or
push
jg
add
insb
popa
addr16
lret
ljmp
dec
inc
test
adc
scas
jl
incl
jns
inc
add
stc
cmp
push
je
pop
sbb
dec
fldenv
push
cli
rol
ud0
loope
and
jg
jb
add
dec
add
pop
xchg
xchg
or
out
movups
mov
push
dec
push
inc
inc
jle
sbb
stos
inc
push
sub
or
ljmp
out
sbb
or
lcall
cmp
mov
or
add
sbb
jo
test
aam
insl
sbb
mov
faddp
or
pop
or
push
inc
cli
inc
mov
decl
ret
xchg
jg
lret
jg
inc
pop
jo
stc
ret
arpl
add
cs
add
das
jle
sbb
jae
and
scas
pop
and
es
pop
jle
sub
dec
clc
pop
xor
pop
aaa
pop
jle
push
cmp
inc
inc
xor
jle
jle
or
test
jle
insb
or
push
cmp
adc
mov
decb
jns
aam
loop
dec
mov
inc
jo
loopne
jg
xorl
adc
out
sub
cmp
push
enter
mov
mov
das
dec
leave
pop
out
or
mov
fcoml
inc
imul
jae
or
jg
xchg
shll
or
cli
sub
push
adc
jg
cmpsl
test
sbb
and
ljmp
or
or
insl
jb
sub
pop
inc
adc
adc
data16
push
jne
jl
adc
xchg
inc
sub
add
and
jg
add
sbb
lods
orb
imul
aaa
fsubrp
addr16
pop
pop
push
and
xor
sar
ljmp
jns
insl
jbe
dec
add
push
push
dec
inc
dec
or
mov
inc
pop
pop
adc
sbb
cmp
adc
sbb
pop
push
mov
xor
pop
dec
adc
ljmp
cmp
ss
outsl
xor
ss
out
xchg
das
and
xor
imul
or
fnstsw
pop
dec
and
xor
push
pusha
decb
and
mov
dec
pop
bound
pop
add
sub
arpl
mov
shrb
jb
lods
adc
inc
jl
jg
dec
sbb
dec
insl
mov
sbb
scas
cli
divb
lea
sti
dec
adc
xor
pop
pop
xor
xor
jg
add
mov
sub
and
jl
imul
xor
jg
dec
cwtl
cs
pmuludq
jg
iret
enter
stos
adc
rclb
imul
decb
pop
pop
adc
mov
aaa
push
pop
popf
and
xor
scas
pop
and
cld
inc
dec
pop
sub
and
adc
pop
sub
sub
jle
lods
fildll
sub
inc
sub
xor
mov
add
iret
jb
jb
test
push
sub
push
pop
xor
jg
and
and
xchg
adc
repnz
inc
push
dec
std
push
out
sub
push
lret
jle
push
cmp
aad
fcomip
iret
outsb
decb
mov
and
dec
imul
fdivr
or
pop
or
std
adc
jo
mov
call
push
add
loope
inc
or
push
sbb
pop
jl
jno
jle
imul
pop
push
pop
cmp
cmp
dec
or
sbb
insl
jp
xor
in
inc
and
cmp
pop
aas
inc
add
dec
leave
dec
call
insl
adc
dec
jle
jle
mov
adc
addb
mov
xchg
pop
cmpb
pop
jg
insl
dec
ljmp
push
xchg
cmp
cli
add
aas
int
xchg
cltd
data16
icebp
incl
out
insb
push
and
or
nop
jle
ja
inc
scas
mov
shll
inc
add
pushl
daa
add
dec
aaa
ret
dec
imul
xor
inc
enter
das
ret
daa
inc
add
movsb
movsb
mov
cmpsb
push
adc
andl
add
std
xchg
add
and
push
jg
or
mull
jg
or
ja
scas
call
xchg
add
push
pop
dec
pusha
jl
dec
jg,pt
push
imul
mov
sbb
xchg
adc
xor
xor
decl
sbb
jns
jb
adc
xor
adc
das
mov
subl
sbb
nop
call
push
or
int
insb
or
push
push
adc
inc
mov
dec
or
icebp
jg
addr16
and
mov
mov
xor
aam
or
mov
cmc
mov
icebp
fwait
ljmp
jle
push
adc
call
jmp
das
pop
aam
pushl
test
cmp
sub
or
rcl
xchg
roll
mov
adcl
jle
lret
mov
add
pop
push
mov
mov
jg
iret
adc
ret
ja
adc
jg
idivb
adc
popa
adc
jg
xchg
cmp
pop
xchg
jmp
xorl
pushl
xchg
xchg
or
int
in
repz
cmc
pop
adc
imul
mov
cmp
out
or
lods
xchg
jg
decl
cmp
sub
xor
add
jg
int
pop
mov
call
and
ss
adc
int
loope
add
js
adc
pop
inc
add
add
sbb
xchg
cwtl
loop
pushf
or
and
clc
ja
aas
sub
inc
jl
xor
lret
call
sub
sub
gs
testb
lds
dec
push
lds
pop
pop
add
daa
loopne
pop
jle
pop
dec
pop
dec
aam
and
xor
hlt
ret
pop
jle
jl
sub
movsl
jg
jg
sub
js
sub
push
or
pop
and
inc
dec
add
rclb
out
push
push
dec
xor
fcompl
idiv
in
addl
inc
cmp
mov
pop
xchg
lcall
dec
push
pop
inc
out
pop
fwait
add
push
inc
out
cmp
lock
jg
fildll
movsb
mov
lods
jne
inc
sub
jns,pn
inc
idivb
loopne
decl
jle
arpl
leave
xor
mov
dec
rorb
mov
or
pop
xchg
adc
xor
push
fistpll
and
lods
dec
pop
pusha
cmpsb
daa
fistpll
cwtl
push
movb
cmpb
orb
and
mov
jo
andl
dec
jg
jg
pusha
imul
jg
nop
repnz
bound
jle
and
adc
jg
mov
popf
jecxz
gs
jl
push
pusha
insl
cs
iret
add
adc
arpl
or
rcrb
add
xlat
jbe
mov
lods
cli
out
and
dec
lcall
push
xchg
push
push
push
stos
mov
mov
jg
push
roll
inc
jg
or
push
adc
inc
dec
adc
jg
dec
dec
jno
push
lcall
imul
addl
arpl
in
fcoml
loopne
or
and
mov
rorb
gs
xchg
inc
push
jg
repz
add
push
jne
jp
jg
mov
jae
cltd
pop
mov
add
jnp
or
addr16
ja
scas
adc
andb
out
repz
sahf
inc
jo
pop
sarl
decl
daa
movsb
pop
daa
jg
sbb
loop
pop
dec
push
pusha
push
popa
imul
jle
or
add
adc
das
das
pusha
std
pop
mov
jno
ja
jne
leave
mov
lcall
sahf
or
std
xor
xor
add
rcrb
sub
data16
pop
jecxz
pusha
add
fwait
dec
dec
dec
or
std
incl
mov
jo
push
in
pop
pop
sahf
pop
mov
dec
sbb
push
add
jmp
ss
or
add
lods
sub
xchg
daa
mov
outsl
jecxz
adc
or
inc
ljmp
fwait
jae
ja
dec
shll
sbb
arpl
push
fucomip
mov
mov
jg
fisttpl
mov
imul
adc
jg
neg
mov
mov
jg
popl
mov
jle
push
xchg
push
jg
das
mov
push
jg
lods
test
cwtl
cmp
aaa
stos
or
adc
dec
or
inc
in
test
dec
rolb
jle
ret
jg
outsb
xchg
and
or
imul
xchg
sarb
mov
jae
cld
mov
or
mov
shrl
push
push
add
adc
mov
jp
sbb
aam
jb
scas
add
or
aaa
push
or
xchg
inc
stos
push
sbb
push
push
add
cmp
adc
bound
jg
fs
movq
cmp
pop
pop
repz
dec
dec
decl
push
push
pushf
loopne
push
jle
decl
fbstp
add
jnp
roll
sub
lea
xchg
test
ja
outsl
lds
jl
jle
sub
stos
aad
xor
jne
sbb
push
mov
and
xchg
inc
xor
sbb
or
je
inc
jle
out
ror
pusha
jg
mul
xchg
jecxz
jg
adc
adc
enter
lcall
and
jle
inc
sub
rolb
push
data16
sbb
inc
mov
xor
inc
imul
pop
dec
jb
dec
incb
jle
dec
je
iret
or
fdivrl
arpl
jo
clc
fwait
repz
xchg
xchg
not
mov
and
gs
pop
stos
cmp
decl
xchg
inc
cltd
xor
jl
and
inc
or
ljmp
stos
push
daa
in
cmpsl
push
js
sub
pop
aas
and
dec
mov
add
cmp
dec
cmp
sbb
test
inc
mov
inc
cmp
stos
push
mov
push
lock
add
sub
mov
push
jle
push
aas
cld
loopne
fsubl
xor
push
lock
sbb
adc
add
dec
bound
ss
cmp
dec
movsl
add
sub
jae
jns
insb
dec
inc
cmpb
xor
cmp
pop
mov
xchg
lret
mov
iret
gs
xor
xor
push
xor
je
and
lret
imul
stos
cmpsl
mov
insb
sbb
aam
aam
arpl
jg
ljmp
and
adc
push
mov
adc
jge
enter
cmpsb
xchg
xor
cmpl
xchg
nop
xchg
xchg
in
fwait
cmc
addb
testb
jp
mov
add
pushl
sbb
xlat
jge
andl
cld
stc
push
adc
jmp
ret
xor
xchg
adc
call
decl
pop
popf
dec
sub
cmp
push
rorl
pop
cmp
cmp
aaa
jne
xchg
and
sub
jne
mov
mov
cmp
push
fwait
xchg
popa
daa
mov
and
sbb
mov
fs
ljmp
pop
adc
cmp
in
cmpsl
add
push
adc
lahf
or
add
push
gs
dec
inc
jle
ret
or
decl
incb
adc
push
aaa
pop
or
mov
dec
icebp
push
ss
push
and
inc
lock
cmp
ljmp
aad
in
jle
sub
dec
inc
das
inc
das
pop
imul
jp
jle
mov
jg
xchg
js
jmp
or
and
jo
subb
adc
addl
sub
jb,pt
pushf
in
jg
xor
jne
clc
or
cmp
and
sbb
mov
and
add
dec
dec
sub
out
or
mov
bnd
adc
fdivrs
jg
and
and
xchg
adc
outsb
dec
pop
inc
jg
fld
mov
push
in
sub
inc
enter
loope
cltd
mov
adc
xchg
hlt
movl
jmp
inc
jg
mov
push
in
fwait
arpl
pushl
or
cmp
mov
aam
dec
sbb
push
push
std
jmp
and
pop
xchg
xorl
or
cmp
out
out
in
in
dec
nop
lock
aad
adc
rclb
sbb
popf
pop
jle
aaa
inc
ret
sub
sub
cwtl
sub
sub
int3
mov
testb
xchg
xor
and
mov
inc
push
or
mov
dec
pop
scas
add
push
cmp
sbb
xor
je
bound
incl
inc
mov
dec
cmp
popa
xorb
cmp
xor
divb
xor
in
cmpb
dec
mov
pop
dec
pop
sub
xor
add
pushl
cmp
jbe
and
cmp
ja
xor
mov
add
push
inc
jmp
jmp
pop
ret
adc
lcall
jle
push
push
push
push
mov
push
and
iret
mov
cs
fbstp
jle
shlb
sbb
incb
add
sahf
loopne
ret
xchg
push
jp
push
fcompl
jg
pop
std
das
xchg
sub
push
popa
add
jle
dec
daa
dec
fisubl
push
cmp
jle
add
cmpsl
add
and
jg
mov
cmp
adc
adc
mov
sti
mov
add
sbb
ja
lock
mov
sub
inc
inc
jle
adc
hlt
inc
insb
inc
sbb
pop
rclb
xor
pushl
or
pop
js
aad
outsl
fistl
orb
lahf
xchg
pop
mov
jmp
xor
call
add
inc
inc
add
jo
jo
stos
fxch
dec
adc
clc
mov
loopne
dec
enter
jg
ds
mov
std
ljmp
in
out
dec
loop
inc
or
out
xorb
or
lock
data16
dec
dec
cmp
je
cltd
sarl
or
call
or
xor
or
jge
lock
push
aad
pop
loop
jle
rcll
jg
cmp
xor
cmp
fldenv
outsl
outsl
adc
xor
jne
jg
inc
jg
outsb
xchg
pop
or
xchg
pop
lock
call
adc
jp
sbb
xchg
push
lock
loope
cmp
and
dec
and
sub
inc
push
add
jle
data16
addr16
aaa
mov
xor
sub
inc
lret
push
mov
cmp
in
cmp
mov
jle
mov
xchg
cmpsb
mov
in
sub
lret
out
lcall
xchg
sbbb
loopne
add
popf
add
mov
emms
xchg
aam
jmp
xchg
in
jb
sbb
pop
pop
call
jg
inc
jle
mov
orb
inc
mov
mov
lods
fildl
cld
add
adc
cld
ret
loope
sbb
fstl
int
add
jbe
push
fdivrs
lcall
jp
and
cmp
ds
loopne
inc
inc
fcomip
aaa
ret
dec
dec
ret
jle
pop
scas
inc
ds
push
or
call
push
dec
pop
pop
xor
je
jle
dec
mov
xchg
jle
frstor
and
jg
cmp
or
sbb
popa
xchg
or
adc
mov
out
leave
sub
das
nop
sar
xchg
cmpl
mov
outsb
nop
xchg
xchg
mov
inc
add
or
je
mov
aam
mov
jg
jg
cltd
sbb
jg
or
out
pop
dec
mov
outsb
bound
push
xchg
pop
test
jg
adc
add
dec
jmp
not
push
pop
or
inc
fldt
mov
add
push
jg
clc
decl
pushw
xor
or
mov
sub
sahf
in
cmpsl
test
imul
jne
mov
dec
dec
mov
push
stos
adc
add
jl
jg
cltd
add
add
popf
mov
pop
inc
add
mov
xchg
mov
mov
push
inc
jg
dec
jle
add
imul
add
or
xchg
nop
xor
pop
push
lods
decl
fsub
pop
xor
adc
xchg
repnz
mov
or
cld
add
xchg
push
out
pop
in
scas
nop
dec
js
mov
mov
ret
imul
pop
enter
adc
and
stc
call
adc
push
in
bound
jp
sub
and
pop
mov
decl
movsb
add
sbb
lds
sbb
daa
sti
mov
sub
and
push
sbbb
pop
push
adc
push
jb
pop
and
es
xchg
and
nop
push
incl
shll
add
int3
jg
mov
push
jg
sub
add
jnp
mov
adc
mov
add
imul
or
mov
add
pushf
or
repz
jle
jne
fs
sub
dec
lret
cmp
cltd
mov
shl
repnz
add
jg
xchg
jae
popa
insb
jge
das
or
xchg
adc
imul
jge
ss
sbb
cs
or
push
and
enter
and
sbb
push
push
and
xor
and
cmp
mov
jp
add
subl
jg
mov
push
mov
out
mov
sub
or
mov
imul
lcall
sbb
xor
push
push
test
aam
add
push
mov
push
mov
btr
or
adc
sbb
sar
mov
gs
xor
inc
cmp
iret
aas
mov
js
push
clc
xor
aas
jecxz
popa
add
dec
int3
out
dec
scas
push
decl
insl
adc
mov
adc
jns
pop
push
mov
outsl
arpl
jmp
adc
cld
jmp
xchg
lds
rcrl
cmp
stc
push
push
in
jg
incb
mov
scas
popa
jecxz
push
inc
arpl
cwtl
add
pop
shll
push
jg
int3
push
cltd
xor
cld
sub
adc
movsb
adc
jae
testb
pusha
xor
pop
ret
and
repnz
adc
or
stc
aaa
cld
data16
mov
loop
or
mov
xor
push
pop
call
inc
jg
inc
lock
push
out
jl
inc
dec
or
lcall
adcl
arpl
adc
adc
xor
rorb
cli
pop
decb
daa
cs
add
and
lcall
add
aas
cs
das
cmp
sub
imul
inc
jmp
push
je,pt
jg
adc
adc
ljmp
push
out
mov
or
int
inc
adc
cld
incl
hlt
mov
dec
or
sbb
jmp
and
push
sbb
cmp
add
xor
pop
sbb
mov
lret
inc
sub
mov
gs
add
push
das
sbb
jl
addr16
fs
and
sbb
pop
adc
insb
or
xor
jg
and
or
pushf
pushw
stc
adcb
add
push
shll
add
adc
dec
mov
lcall
data16
add
loope
dec
pop
in
test
jmp
xlat
std
jg
incb
sbb
bound
iret
daa
movsl
movsl
pushf
lds
sub
lds
and
cmp
pop
push
push
jle
mov
movsl
or
mov
push
push
xchg
pop
mov
add
divb
mov
outsb
ljmp
pop
fdivrs
lods
xchg
and
sub
jg
cmp
inc
pcmpeqw
inc
or
call
push
inc
sub
frstor
sbb
fsubs
rorb
push
scas
es
repnz
sbb
testb
ljmp
lret
mov
iret
jecxz,pn
lods
push
add
xor
loopne
scas
and
adc
sbb
nop
jecxz
jg
push
arpl
push
jg
xchg
dec
dec
and
and
jns,pt
std
add
push
shlb
mov
dec
imul
sub
pusha
add
jle
add
lods
lods
xchg
sub
mov
xchg
hlt
xor
scas
mov
sarb
mov
xchg
jle
adc
outsb
and
lods
data16
stc
add
adc
fidivrl
inc
cmp
jns
es
out
mov
jae
rcrb
jg
jg
pop
mov
push
imul
ljmp
lcall
jle
fdivrs
sbb
adc
or
divl
xor
movsl
mov
jle
sub
jg
xor
jmp
cmp
xchg
call
xor
leave
cmp
inc
scas
vpshlb
cmpsb
lock
mov
stos
scas
ljmp
andb
adc
outsl
insl
imul
imull
jg
pop
mov
movsb
mov
in
add
pop
in
xchg
jl
ficompl
inc
subb
adc
cltd
adc
jecxz
inc
add
in
ret
jg
aas
mov
int
pop
add
lret
mov
jne
dec
dec
mov
and
cmp
mov
xor
mov
pop
ja
xor
pop
clc
jg
test
shll
std
mov
insb
mov
or
inc
cld
cmc
mov
mov
inc
les
jle
cmp
cmp
aaa
in
lret
rorb
xchg
inc
aas
repz
pop
movsl
inc
loop
nop
sbb
add
jg
jbe
pushf
push
inc
xchg
jg
inc
mov
stos
jg
incl
test
outsl
push
test
or
loopne
enter
xchg
stc
in
ljmp
dec
pop
inc
popf
out
ljmp
jo
addb
mov
stos
mov
imul
rorb
insb
inc
test
or
shrl
adc
push
or
push
xor
orl
bound
mov
or
sbb
cmp
fidivs
arpl
cmp
mov
xor
inc
or
andl
and
jg
inc
add
mov
sbb
inc
incl
add
jg
nop
adc
leave
jmp
dec
sub
xor
sbb
pop
negb
pop
pop
xchg
push
pop
inc
inc
inc
inc
xchg
cli
push
dec
dec
push
inc
dec
clc
jmp
jecxz
xor
sub
rcr
aad
lods
fdivrp
pop
cli
xor
lret
inc
cmp
xor
mov
inc
scas
sbb
mov
push
out
push
pop
lods
scas
adc
sahf
dec
add
dec
jp
movsb
gs
add
gs
cmc
adc
pop
ret
enter
jmp
cltd
clc
inc
sub
push
push
push
push
jle
pop
pop
lcall
js
push
popf
ret
sbb
push
xchg
jmp
dec
and
dec
stos
shrl
insb
aam
iret
mov
lock
mov
jno
and
incb
call
int3
xchg
push
or
je
mov
mov
mov
inc
call
gs
fnstcw
mov
or
sub
mov
cmpb
and
or
jg
out
pusha
dec
pushf
shrl
cmpsl
cmp
insl
add
dec
dec
stos
in
scas
movsb
lock
sbb
mov
mov
iret
leave
enter
sbb
gs
movd
ficompl
call
jmp
or
pop
jle
jbe
das
icebp
adc
push
lcall
pushf
xchg
xchg
scas
jg
push
add
or
adc
lcall
jle
in
ret
and
fistps
decl
out
push
mulps
call
xchg
adc
add
notb
adc
imul
out
dec
jnp
ffreep
inc
cld
dec
out
fcomip
outsb
icebp
inc
mov
pushf
xchg
lret
rorb
loopne
gs
out
mov
jle
int3
jg
dec
mov
sub
repnz
add
jae
insb
mov
mov
add
pop
inc
popa
call
jle
jl
add
inc
mov
lcall
nop
sub
fwait
loope
cld
cmpsl
loope
adc
decl
xchg
mov
lcall
imul
pop
pushl
jg
push
adc
jge
jl
ds
test
and
mov
pop
cmp
push
aad
mov
jb
ss
push
push
int3
lds
lret
dec
les
pop
dec
or
loopne
jg
dec
mov
dec
pop
addr16
or
adc
adc
inc
repz
push
cmp
test
mov
decl
sub
daa
add
xchg
xchg
mov
add
add
or
jle
je
test
or
mov
jmp
adc
add
jmp
xchg
dec
cmc
cli
data16
or
lcall
incl
shl
repnz
jg
lods
jmp
push
pop
cmpsb
adc
mov
incl
shlb
cld
xchg
and
sahf
ficompl
jnp
jae
ja
bound
cmp
jge
dec
stos
fldenv
dec
xor
aas
mov
imul
dec
xchg
mov
dec
fadd
pop
pusha
lahf
push
cmp
push
aam
das
pop
and
leave
xor
adc
repnz
test
add
js
adc
leave
rorb
add
call
outsb
mov
xorb
jle
popf
sub
call
push
pop
and
f2xm1
inc
cltd
cmp
inc
cs
add
int
pop
andl
cmp
call
inc
mov
add
or
pushf
and
clc
incl
jle
push
test
sbb
jg
popa
popf
mov
sub
mov
aam
sbb
and
and
push
adc
call
add
adc
jle
pop
push
sar
int3
into
icebp
sub
jmp
in
pop
or
dec
xorl
sub
scas
dec
shlb
xor
fdivl
aaa
cmp
sarb
push
jg
lret
or
pop
xor
push
dec
outsl
adc
lcall
push
and
mov
xchg
xor
sub
xchg
pmaxsw
shll
adc
adc
dec
or
push
add
mov
xchg
add
mov
rorb
pop
sbb
pop
ret
lock
xchg
icebp
xor
mov
fcmovnbe
ss
fwait
loopne
jnp
sbb
add
xchg
scas
cltd
jle
nop
push
or
out
dec
jb
adc
loope
mov
jge
jg
pop
add
cmpsb
mov
jg
add
pop
vmread
jp
or
push
mov
inc
jle
test
shlb
out
xor
xor
jne
adc
add
and
inc
dec
inc
pop
sidtl
or
adc
jge
jns
jg
jne
pop
adc
das
sub
cs
and
cmp
cmp
and
xor
jae
push
lock
cmp
xor
xor
xor
inc
dec
jg
in
addl
mov
or
or
aad
sbb
popa
imul
dec
adc
push
dec
cli
dec
fcmovnu
cmp
or
mov
adc
adc
ss
dec
imul
int
jg
xor
mov
push
call
clc
fdivp
in
jmp
inc
jo
inc
pop
sbb
loope
inc
test
lret
cld
iret
xchg
push
ret
stc
jne
bnd
fldt
call
sub
push
mov
lods
adc
push
sub
push
inc
lock
dec
jle
xchg
fwait
sbb
fwait
cmp
aaa
mov
xor
dec
push
xor
push
jg
sbb
jecxz
jo
ret
pop
decb
dec
pop
out
es
out
jle
adc
or
pop
jle
es
clc
cmpsb
fisubs
pop
adc
pop
cmp
popa
movsl
fnstenv
mov
rclb
push
pop
pusha
cs
jle
stos
mov
dec
inc
pop
xchg
inc
cmp
xor
mov
dec
daa
mov
or
xchg
dec
adc
inc
aas
or
imul
mov
enter
daa
push
daa
sbb
adc
inc
push
mov
pop
xor
es
adc
dec
rep
jns
adc
or
enter
xchg
pop
push
cmp
cmpb
jg
jb
adc
sub
les
or
adc
outsb
and
nop
lea
daa
in
out
lea
add
push
mov
imul
int3
jg
mov
setno
mov
pop
in
loope
das
iret
jbe
and
rcrl
stc
add
dec
sbb
ficomps
add
call
pusha
mov
sub
mov
adc
sti
pop
sub
test
xchg
decb
fildll
icebp
cmpsb
rcrb
jge
mov
and
xchg
imul
lock
xor
mov
xor
lret
ljmp
pop
rorb
int
or
incb
mov
lcall
xchg
pushl
push
shll
incl
push
ljmp
loopne
imul
incl
orb
ret
lcall
jg
adc
enter
jb
enter
jb
popa
insl
cmp
pop
push
jle
sarb
stos
in
mov
adc
sar
call
sbb
cmpsl
lsl
addr16
mov
or
sbb
repz
mov
mov
cwtl
scas
scas
add
mov
cmpsl
movsb
mov
push
xchg
inc
cmpsl
jp
add
scas
adc
movsb
popf
add
push
insb
imul
xor
ljmp
sub
cmovb
add
and
jg
mov
and
jecxz
xor
mov
jg
xchg
ds
cwtl
cld
jg
call
dec
into
ljmp
nop
pop
mov
loopne
scas
xchg
jl
jg
or
std
adc
loope
jne
testb
sarl
incb
inc
pop
addr16
adc
daa
jle
cmp
popa
sahf
adc
das
adc
cli
jg
jle
pop
sub
rcl
fisttps
fistl
xor
data16
cld
inc
stos
push
inc
jle
callw
jno
dec
dec
dec
push
cmp
arpl
cmp
sahf
add
pushl
aaa
pop
aaa
daa
push
and
dec
pusha
and
out
dec
xchg
mov
sub
xchg
cmp
enter
lahf
mov
bound
jle
jle
or
add
jg
adc
out
inc
test
adc
jg
fmuls
or
sti
mov
adc
and
adc
addl
pop
sub
jg
cmpsl
loopne
jg
push
jg
jae
mov
bound
adc
add
data16
xor
inc
je
pushf
xor
jb
xchg
add
adc
iret
pop
mov
mov
add
orb
js
push
or
cld
aas
mov
sub
outsl
or
or
cmp
leave
sub
or
mov
jg
add
and
lods
or
rdtsc
ret
ret
cld
jle
mov
add
jmp
movsb
dec
mov
push
and
adc
push
lock
iret
xchg
pop
iret
fstl
and
sbb
inc
into
mov
mov
movsb
jb
cmp
inc
or
xchg
inc
pop
ret
incl
jle
add
int3
cmp
mov
dec
and
arpl
add
aas
insl
rcrb
bound
stc
cwtl
leave
jg
es
sbb
xchg
repz
xchg
incl
sbb
add
jmp
pop
fld
das
xor
lret
mov
incl
nop
jp
jg
mov
cltd
xor
loopne
insb
mov
pusha
clc
scas
add
push
xchg
out
xchg
cli
push
sbb
dec
sub
out
fucomp
jle
mov
inc
nop
popa
leave
lock
dec
add
nop
cmpsl
jg
xor
gs
aad
jg
add
in
out
js
jno
and
xor
stc
lcall
add
pop
test
sbb
cwtl
inc
xchg
sbb
adc
push
scas
fimull
push
jo
jbe
adc
add
scas
incl
cwtl
data16
add
jg
mov
js
push
jmp
jns
mov
in
cmp
movsb
jmp
rorb
sbb
movsb
aam
mov
jmp
jg
or
pop
mov
ljmp
aas
or
cmp
sbb
repnz
push
enter
inc
ret
adc
cli
pop
incl
mov
aaa
addr16
push
imul
std
shll
enter
addr16
aas
inc
dec
lods
inc
ja
push
int
push
pop
insl
fwait
sub
cmpsl
nop
add
xchg
ret
cmp
xor
shrb
cmc
push
lcall
ret
in
dec
stc
inc
dec
test
push
push
cmp
dec
push
jg
test
shl
push
ljmp
fisttpll
in
cmpsl
mov
jg
pushf
inc
sbb
imul
adc
push
push
lock
cmp
out
jmp
adc
sbb
sub
arpl
test
push
jg
jmp
jg
cmp
js
ljmp
add
mov
and
loopne
call
lock
les
jg
decl
jns
push
xchg
mov
fdivr
neg
pusha
cmpsl
lods
jp
or
or
mov
mov
test
adc
jb
inc
push
jle
xchg
pushl
pop
sahf
adcb
jg
pop
outsb
adc
fisubs
jmp
mov
adc
xchg
cmpsb
cltd
add
shr
inc
es
data16
test
xchg
lods
arpl
and
cmp
inc
add
xchg
jg
xor
adc
in
adc
leave
add
sbb
pop
and
call
adc
mov
jb
stc
xchg
inc
leave
xchg
adc
lock
jg
sbb
inc
dec
bsf
jg
push
cld
add
ljmp
pop
out
call
frstor
xchg
ljmp
xor
sbb
sbb
and
insl
xor
jb
add
dec
or
sub
inc
lock
sbb
and
xadd
add
mov
out
loope
cmc
sbb
pop
int
pushf
inc
ss
shrl
xor
mov
arpl
in
xchg
xor
add
adc
adc
pushw
pop
hlt
sbb
jg
add
add
dec
inc
es
outsl
daa
das
add
fs
mov
sbb
inc
inc
mov
sub
add
data16
and
arpl
stos
add
add
stc
cld
dec
add
ret
inc
pop
icebp
or
cltd
and
fsubr
pop
lcall
sub
jg
and
fs
adc
leave
adc
out
xchg
add
sub
shrb
jg
jl
and
jg
inc
pusha
add
add
pop
ds
push
pop
cmpsb
and
call
push
xor
adc
or
sub
and
faddl
dec
cmp
add
fdivr
xchg
and
outsb
jl
adc
repz
sub
sub
adc
cld
push
cmp
enter
out
add
push
sub
push
add
dec
adc
add
insb
dec
adc
stos
push
push
and
xor
out
pop
fsts
shrb
movsb
jne
lret
js
js
test
xchg
fsubrl
sahf
add
scas
pop
repnz
sbb
inc
rcrl
movsb
sbb
clc
push
inc
and
pop
push
repnz
xchg
cld
add
imul
and
lods
xchg
push
xor
push
adc
test
jg
adc
jg
inc
rolb
dec
jle
dec
dec
sahf
cmp
test
inc
cwtl
mov
cmp
xor
daa
out
ljmp
sub
jg
push
mov
or
jg
lret
jg
inc
jo
jge
repnz
sub
mov
cmp
nop
add
jmp
out
sub
jns
sbb
fimuls
lret
jae
je
add
xchg
jg
outsl
xor
sarl
mov
mov
cld
push
rcrl
filds
push
and
mov
mov
xchg
or
es
je
mov
push
adc
rcrl
test
idivl
mov
jg
je
mov
jns
jo
ud0
jae
aaa
add
mov
xor
push
fdivrl
ljmp
or
jle
xchg
aam
add
push
mov
sbb
jle
cmpsb
in
mov
call
iret
pop
sub
xchg
or
jle
mov
mov
push
cmp
stos
rolb
inc
orb
or
xchg
ret
iret
outsl
xchg
push
jbe
jle
gs
pop
mov
inc
jle
jecxz
fs
cmpsl
ljmp
add
in
mov
add
adc
inc
arpl
std
sbb
push
pop
incb
pushf
call
loope
add
adc
add
mov
lahf
out
cmp
xchg
lahf
ret
mov
imul
mov
and
jl
push
push
shlb
mov
out
xlat
xchg
lea
test
popf
fcomps
pop
pusha
mov
xchg
push
inc
call
ret
or
jp
inc
decl
sarb
push
loop
cld
aaa
aas
jle
adc
insl
sbb
sub
jp
and
cmpsb
lock
fcomps
dec
nop
xor
add
incl
cmp
xchg
jnp
inc
roll
fs
push
jg
movsl
xchg
fldt
push
push
lahf
loopne
mov
pop
nop
mov
aaa
jp
push
mov
in
int
test
loopne
or
adc
add
jo
lods
cwtl
inc
xor
push
mov
test
and
fcmovbe
shl
hlt
stos
cmpsb
clc
lret
lret
loop
mov
shll
scas
mov
jmp
mov
add
add
je
push
shlb
jg
jno
jb
push
xchg
movsb
jns
mov
mov
inc
mov
mov
mov
shlb
dec
add
adc
and
and
dec
pusha
jle
dec
xor
ljmp
mov
jg
push
cmp
les
push
sub
out
xchg
pop
sahf
mov
ljmp
xchg
incb
incl
adc
add
pushf
adc
and
loopne
out
sub
insl
scas
ljmp
xor
or
ja
clc
aas
dec
loope
or
inc
stos
and
and
inc
push
adc
add
xchg
push
xchg
popa
pushf
outsb
in
ret
ret
jle
pop
lahf
repz
dec
adc
ret
or
xor
out
add
mov
jg
sbb
aas
inc
inc
fsts
cltd
scas
imul
repnz
dec
pop
push
sub
inc
adc
pop
jg
out
aas
ja
xchg
icebp
out
adc
aad
push
add
push
xchg
and
jg
adc
inc
shr
jg
mov
xchg
andb
push
and
imul
jbe
aam
cmp
jg
pop
inc
pusha
mov
inc
jg
sub
std
mov
insl
movsl
jl
sbb
insb
push
addr16
pop
and
jle
das
mov
add
or
pop
test
arpl
jbe
push
ret
insl
mov
sahf
icebp
aas
adc
cld
inc
jo
jl
push
dec
jg
sbb
sub
cld
incl
insl
pushf
xor
out
dec
jno
and
inc
hlt
add
push
add
jb
push
pop
lret
incl
adc
xchg
sub
inc
sub
rcrl
sarl
fsubl
dec
and
sbb
inc
incl
clc
in
xor
stos
clc
cltd
cmc
in
lea
mov
clc
incl
sti
inc
sbb
fld
pop
xor
testl
sub
enter
inc
shll
add
adc
push
loope
mov
scas
popa
je
jg
add
adc
inc
pop
call
xchg
pop
or
add
mov
lret
adc
fistpll
jnp
lods
xor
xlat
popf
xchg
movsl
xor
shlb
and
add
adc
xlat
arpl
push
dec
jmp
mov
mov
jg
mov
push
fdivl
jle
pop
inc
jl
je
jne
incb
movsb
xchg
inc
jg
xchg
push
inc
shrl
pushl
inc
je
cmpb
filds
push
or
add
test
inc
rol
pop
jg
cmp
cmpsb
repz
daa
cmpsl
nop
push
mov
pop
pop
push
repnz
or
push
ljmp
sub
popa
loopne
mov
push
pop
and
add
push
push
cmp
jo
hlt
aas
pop
test
ljmp
imul
ljmp
jne
daa
sub
fwait
insb
adc
jle
sub
fiadds
cld
cmp
cmp
dec
cmp
cli
sar
aas
mov
movsb
mov
xor
jg
pop
das
and
mov
mov
insb
jle
cmp
cld
mov
imul
jmp
test
sahf
jl
or
lret
dec
and
add
out
jb
add
push
and
incl
push
movsl
lods
fnstcw
and
stos
das
lret
pop
adc
repz
sar
mov
sub
shll
jg
inc
and
add
xor
cmp
jg
call
pop
add
or
jg
pop
shll
cmp
mov
ret
sbb
in
xchg
shll
pusha
jle
jp
inc
ss
call
dec
dec
add
imul
add
inc
dec
enter
add
pop
cmpsb
mov
cltd
arpl
out
push
xor
cmp
cmp
cmp
and
mov
out
push
shrb
es
xor
movd
inc
mov
sti
jle
sbb
cli
aas
test
jmp
xor
jg
pop
pop
mov
dec
aad
adc
mov
xchg
xor
int3
add
cmc
repnz
inc
jae
ja
jmp
inc
add
repnz
cmp
enter
jne
jmp
jl
in
imul
cli
push
pop
cwtl
inc
arpl
stos
and
nop
aaa
jmp
ljmp
adc
pop
mov
je
inc
push
pop
inc
jg
pop
popa
cld
rclb
add
jmp
sbb
jg
lods
lods
or
sbbb
push
cmp
adc
sbb
xchg
fs
add
or
and
xchg
jg
adc
sbb
and
jg
add
adc
jns
loope
enter
mov
out
fs
mov
mov
incl
pop
enterw
cmp
dec
dec
pop
push
das
mov
sbb
js
cld
call
jle
and
mov
lds
sbb
jg
sbb
jmp
test
jg
adc
jne
adc
dec
inc
mov
rolb
jg
cld
jg
imull
loop
fbstp
arpl
fs
mov
add
mov
jle
sbb
fistpll
shlb
sarb
pusha
push
dec
mov
ret
or
cli
ljmp
loope
jge
pop
out
popf
jg
rorb
out
jns
cmp
or
js
inc
jg
jmp
add
jno
push
jp
outsl
mov
mov
jns
or
mov
or
js
jg
cmp
shll
inc
and
bound
shll
push
rol
sbb
push
jg
in
js
dec
jg
or
dec
push
or
jle
incl
cmp
test
movsl
test
pop
adc
dec
push
imul
and
lcall
cwtl
test
scas
call
daa
test
pushl
mov
jl
adc
jge
in
mov
or
xchg
push
jmp
add
adc
ljmp
clc
push
sbb
jle
or
push
inc
jle
ror
sub
jg
dec
jg
push
adc
pop
cmp
dec
dec
and
test
xlat
and
inc
scas
jl
rorb
leave
imul
push
mov
jg
sub
adc
mov
push
ss
xor
bound
dec
mov
push
cmc
add
xchg
add
mov
add
push
add
cld
xchg
cld
movb
lock
add
pop
incl
jo
dec
add
inc
jg
inc
add
jb
mov
jg
adc
push
jg
test
mov
add
add
dec
jle
add
ljmp
ljmp
jo
cmp
cmp
std
jg
imulb
and
daa
or
add
jle
cmp
cmp
aaa
push
ss
mov
jmp
fsubr
dec
dec
dec
shll
cmp
jg
jo
jle
dec
push
sbb
insb
xchg
add
andb
xchg
nop
or
and
test
incl
and
mov
jg
or
insl
adc
xor
jmp
jle
js
sbb
or
fs
adc
push
rorb
add
pushf
jg
push
or
inc
add
push
mov
fstps
and
scas
pop
sbb
cmp
sub
jg
hlt
jle
or
jo
inc
add
add
cmp
ljmp
fbld
dec
div
test
cmp
in
loopne
mov
cmpsl
loopne
dec
decl
and
mov
xchg
sub
fistpl
dec
ljmp
xchg
cmp
test
cmovs
testb
push
scas
test
std
add
pop
pop
in
add
mov
sbbb
rorb
and
mov
mov
xor
outsl
push
xchg
sub
and
jae
gs
popa
inc
aas
fdiv
int
lret
addr16
inc
jne
push
je
jg
inc
sub
fwait
sbb
or
rorl
je
and
clc
sub
lods
in
jg
mov
call
mov
jae
dec
push
mov
push
jl
add
call
jle
test
repz
cmc
enter
cmc
hlt
incl
ljmp
repnz
bound
jp
dec
jae
and
sbb
xor
push
ljmp
push
sbb
sub
jg
popa
add
ret
and
xchg
sahf
xchg
jg
sbb
incb
add
fisubrl
and
aam
sbb
push
sub
and
loopne
ljmp
mov
cmp
sbb
mov
pop
call
push
pop
pop
popa
xchg
cmp
add
sub
cmp
js
subb
mov
jle
mov
mov
les
ss
jl
outsl
or
adc
ret
outsl
adcl
incb
pusha
pop
call
jle
loopne
adc
jp
incl
adc
repnz
sbb
jecxz
xor
rclb
gs
divb
mov
ja
jle
cmp
lods
adc
std
mov
hlt
sub
pusha
or
lds
loope
dec
mov
pop
mov
cmpsl
sbb
push
lcall
dec
sub
lock
icebp
jg
ljmp
sub
out
add
hlt
or
loope
mov
cld
into
incl
xchg
imul
push
std
out
push
mov
out
adc
jg
xlat
dec
mov
pop
xor
into
inc
cmp
add
aas
js
inc
pushl
xchg
sbb
sub
push
shrb
icebp
pushl
test
sub
push
xor
push
or
pop
stos
lcall
into
pop
pop
sbb
data16
movsb
mov
dec
jg
je
test
dec
add
xchg
jg
push
outsb
xor
add
pop
add
xor
xchg
mov
call
sub
cltd
dec
xchg
adc
cmp
ss
xchg
loope
cltd
push
lcall
inc
xor
incl
adc
stos
jg
push
enter
adc
jns
cld
les
pop
incl
add
bnd
pushf
pusha
inc
add
sti
out
mov
and
pop
inc
dec
push
insb
dec
dec
push
decl
or
das
adc
add
sbb
adc
std
ficompl
into
adc
sub
xchg
sahf
add
or
dec
add
pop
push
xor
sub
test
cs
dec
and
or
push
jnp
mov
dec
jle
jne
pop
mov
and
cmp
add
and
jg
push
push
ret
adc
xor
in
add
dec
mov
jle
xor
repz
enter
lock
mov
push
jle
add
xchg
mov
pop
int
scas
cmp
ljmp
loopne
into
and
mov
int3
stc
push
bound
ja
andl
popa
insl
sbbb
inc
add
jg
test
lahf
imul
push
push
dec
sub
daa
incl
dec
inc
dec
xor
aas
adc
xor
xlat
push
xchg
imull
insl
mov
inc
adc
stos
add
sbb
inc
jle
jle
imul
dec
xchg
mov
add
jns
roll
cmp
cld
or
mov
cs
jg
mov
and
cmp
xor
shlb
jae
addl
movsb
sti
mov
shl
xor
xor
jg
das
cld
pushl
push
sub
sub
ds
jnp
mov
jns
call
int3
sub
jle
fcmovnb
je
mov
xor
imul
jne
data16
cmp
jg
jmp
push
jle
cmp
push
or
or
adc
sbb
repnz
sar
mov
push
sub
fidivl
arpl
sub
jmp
outsl
xor
mov
xor
and
jmp
push
jle
jns
aas
sarb
inc
incl
jo
int3
mov
das
mov
lods
fwait
pop
pop
pop
subl
mov
loop
xchg
add
cwtl
cmp
jg
push
mov
addr16
testb
push
or
jle
mov
jp
xlat
push
sbb
sbb
fnstcw
cmp
hlt
in
inc
pop
inc
add
pop
jl
cmc
mov
cmp
add
sar
int
and
jo
push
pop
xor
sub
and
sbb
lcall
and
jg
aaa
mov
es
out
cli
and
push
mov
adcb
daa
loop
pushl
arpl
pop
cmp
insl
sbb
jo
ds
fdivrl
sub
jg
push
popa
imulb
sub
std
std
decl
mov
and
push
mov
or
jmp
mov
inc
dec
add
jg
or
scas
mov
adc
push
or
das
cmpsb
cld
jns
popa
jp
pop
inc
push
and
sbb
ret
into
test
subl
out
lea
inc
jl
outsl
cmp
js
push
and
mov
lcall
inc
incl
jg
or
sbb
cmp
jb
andb
inc
clc
jae
add
pop
lock
lods
xchg
mov
pop
mov
sbb
push
aaa
xchg
cmpl
pushl
aas
ds
mov
or
inc
mov
add
or
adc
mov
push
inc
dec
vpmaddwd
fistl
dec
mov
push
cmpsl
push
pop
add
ret
adc
cmp
sarl
lahf
rcl
fnsave
add
aam
push
rcll
or
jg
lods
dec
push
mov
push
inc
push
cmp
pusha
mov
dec
adc
test
jne
loope
enter
jg
pop
or
cmp
and
push
addb
decl
jne
psubq
or
jge
pop
in
cs
push
adc
push
or
pop
or
and
and
xor
lret
call
popa
cld
push
addr16
inc
sbb
dec
ss
jle
mov
xchg
movl
cld
xchg
es
sub
stos
add
pop
or
sub
jae
insl
data16
enter
adc
sub
push
shrl
sti
aaa
jg
inc
pushf
adc
imul
jle
add
sub
lcall
gs
daa
dec
and
insl
rolb
cs
repnz
sub
lock
push
das
lahf
jle
xchg
test
add
dec
ret
int
es
xor
push
cli
add
inc
out
fisubl
js
pop
push
in
lock
mov
or
ss
adc
sbb
jl
repnz
inc
rcrb
and
leave
push
sbb
lods
lds
scas
xlat
fidivrl
adc
mov
and
sub
jle
fnstcw
mov
enter
xchg
adc
push
add
xor
movups
jmp
test
int3
in
fidivl
in
push
mulb
outsb
cli
push
cmp
outsb
mov
fildll
push
call
adc
inc
jle
cmp
jbe
adc
dec
add
leave
rolb
xchg
imul
loop
jg
inc
inc
adc
jo
sub
mov
dec
jnp
or
sahf
adc
add
jo
popf
xor
xchg
ss
fldcw
inc
stos
and
jg
and
push
shll
call
cmp
ja
jo
mov
mov
pop
pop
lcall
push
aaa
or
sbb
xor
inc
test
imul
lcall
decb
icebp
inc
xor
push
xor
cli
or
xor
inc
fistpl
adc
mov
pushl
push
or
gs
inc
push
divl
cltd
and
sbb
xor
xchg
or
inc
cli
js
outsl
jl
sbb
or
das
fwait
xchg
nop
inc
jbe
dec
aas
sub
fs
sarb
outsb
jmp
jne
fmulp
aam
lds
jae
stos
xchg
xchg
mov
repnz
or
lods
stc
pop
and
lods
fists
mov
sbb
lahf
sahf
out
ss
mov
jg
inc
jo
and
inc
jg
sub
sub
and
jae
xor
orb
dec
out
stos
pop
ss
pop
xchg
jle
fistps
inc
jecxz
jp
iret
pop
xor
jl
leave
enter
mov
ret
mull
mov
jle
inc
sub
jle
enter
inc
cld
jle
stos
test
push
jmp
sub
and
decl
and
incl
inc
add
fistps
test
jecxz
xchg
and
lock
leave
popf
add
std
lcall
cmp
mov
std
adc
dec
mov
ret
ljmp
jle
mov
mov
cmp
pusha
mov
jg
jg
xchg
xchg
adc
or
and
imul
pop
inc
pop
jle
adc
cmc
xchg
dec
and
inc
mov
outsb
mov
or
test
fisttps
or
cltd
cld
enter
add
stos
and
mov
inc
jg
adc
pop
js
pop
data16
jmp
jne
jae
xorl
fwait
inc
fadds
mov
lcall
movsb
lea
dec
push
push
or
call
sub
mov
and
add
jmp
dec
lret
jmp
cmp
mov
mov
out
push
mov
fistpll
outsl
xchg
add
pop
mov
pushl
inc
jle
mov
pop
jb
bound
xor
sub
pushl
aaa
iret
fisubrl
mov
enter
jo
add
mov
popf
add
movsb
leave
push
jg
add
pop
addb
bound
dec
leave
and
and
lahf
sub
ret
cltd
or
adcl
andb
sub
pop
clc
sub
mov
sub
fwait
ror
and
mov
push
xchg
outsl
popa
ja
and
stos
jg
clc
jl
ret
sub
add
xor
dec
and
int
and
sub
das
iret
and
push
loopne
mov
xor
leave
xchg
test
sub
inc
and
sbb
cmp
mov
jle
jg
and
mov
jb
jg
jno
inc
add
mov
jp
and
push
dec
sub
mov
je
push
or
out
pop
jo
loopne
or
pop
lahf
mov
scas
es
jnp
jmp
xchg
subl
test
pop
mov
cmpsl
sbb
sub
pushl
cltd
or
stc
movsl
mov
push
lcall
dec
mov
cmc
add
pop
cmpsb
in
mov
adc
cli
loope
andb
xor
in
test
outsl
jle
incb
and
ljmp
add
add
xchg
hlt
xchg
es
inc
icebp
hlt
pushf
pop
sahf
pop
mov
and
jg
sbb
nop
aas
nop
pop
add
dec
outsb
mov
decb
sbbb
dec
loope
dec
jle
jbe
test
lds
jg
pushf
call
push
jb
pop
jle
xchg
jo
xor
dec
loopne
or
lret
ja
imul
push
jg
push
mov
loopne
jg
add
jg
jg
inc
movsl
or
fnstcw
adc
cmp
mov
loope
enter
cmc
loope
mov
in
mov
add
data16
push
shll
sub
fisubrs
scas
push
out
add
jb
outsb
mov
fidivrs
das
xchg
or
stos
je
dec
cmpsb
xchg
dec
xor
and
xor
mov
dec
inc
cltd
pop
inc
jnp
add
add
sbb
jb
cmp
lahf
jnp
fs
repnz
lret
push
inc
push
push
cltd
in
popa
neg
daa
jns
lock
mov
jg
cwtl
incl
or
cmp
add
fisttpl
cs
and
dec
push
out
or
xchg
or
cmp
in
mov
loopne
nop
das
adc
push
inc
test
rorl
push
mov
bound
lods
shll
push
in
jg
stc
sbb
inc
cmp
call
out
outsl
jbe
push
push
jb
jle
jl
sbb
jg
push
imul
adc
jge
pop
leave
add
push
pop
dec
push
mov
and
adc
sub
mov
add
xor
addb
and
push
outsl
jl
pop
sub
inc
add
push
jns
and
xor
clc
lcall
xor
fwait
int
arpl
aam
jle
test
xor
call
jg
pop
dec
and
gs
cmpl
incl
jmp
pop
fcoms
jmp
mov
in
dec
mov
cwtl
push
gs
test
inc
add
and
xor
lcall
jns
ljmp
sbb
and
loopne
and
pop
decl
fsubl
ss
inc
mov
sbb
push
jmp
decl
cmp
sahf
sarl
fistl
and
js
mov
shlb
shll
jg
roll
lock
mov
jg
or
cmpb
or
cmp
not
rorl
add
jle
repnz
add
dec
pop
push
scas
and
push
dec
jle
popa
imul
ss
push
clc
push
sub
mov
es
jle
and
adc
je
jg
jg
cmp
cmpb
icebp
es
jle
push
jle
mov
adc
ja
adc
jo
hlt
loopne
pop
and
jg
inc
cmpsb
cwtl
sbb
pop
sbb
pop
inc
sub
dec
cmp
or
push
ds
nop
mov
jle
adc
mov
mov
mov
bound
pop
mov
incb
hlt
or
data16
fstpt
push
jg
mov
js
mov
movaps
mov
add
mov
and
scas
test
cmp
add
add
and
xor
loope
enter
adc
les
mov
jle
dec
xchg
dec
in
inc
sbb
pushf
js
cmp
out
jg
jl
jl
iret
or
jae
lods
cmpsb
icebp
dec
jp
or
pop
in
mov
jns
jbe
jg
inc
jg
dec
add
cli
and
pop
imul
pop
jmp
std
test
dec
push
jg
fmull
jo
arpl
inc
fistl
lcall
pop
mov
add
mov
sub
lods
cmp
jl
xchg
adc
fdivrp
xchg
decl
test
dec
icebp
and
push
stos
cmpsl
cmpsb
stc
arpl
push
stos
rcr
data16
sar
push
pop
sbb
jg
jg
cmpsb
add
push
push
pop
outsl
push
and
add
lret
adc
incb
pop
clc
sub
mov
aaa
jg
jge
out
cwtl
fcoms
dec
and
jle
and
sbb
sbb
cli
dec
cmp
cld
aaa
jno
mov
or
lods
add
es
scas
leave
arpl
push
xor
adc
jle
mov
pop
mov
pop
xorb
pushl
outsl
insl
bound
cld
outsl
pop
and
add
cmc
xchg
add
test
loope
cltd
sub
sub
or
lcall
enter
mov
subl
push
add
fmull
pushl
xchg
jle
mov
mov
inc
cli
mov
stos
int
jecxz
nop
in
mov
cld
pop
leave
clc
or
mov
fs
ror
jg
mov
adc
jg
push
and
insb
leavew
test
std
inc
bound
jns
add
lret
jg
insb
or
push
sub
add
cld
jmp
js
cmpl
jg
dec
decb
or
jne
cmp
lods
add
cmp
push
and
outsb
push
stos
pop
xchg
mov
loope
outsl
push
pusha
insl
inc
fsubs
insl
outsb
add
adc
inc
outsl
stc
mov
adc
and
jo
imulb
imul
popa
or
lahf
rorl
sub
push
lods
xor
pop
dec
fmulp
mov
inc
cmp
pop
xor
push
sti
iret
ficomps
xor
cmp
jb
cmp
jbe
psrld
xor
xor
notb
aaa
xor
xor
push
xor
nop
or
cmp
cmp
mov
lahf
push
jl
xor
cmp
mov
ss
mov
inc
sti
jbe
mov
cmp
xor
mov
cmp
xor
xor
ss
sbb
xor
xor
ss
pusha
repz
ss
xor
aaa
das
cmp
jo
push
das
cmp
pop
cmp
xor
iret
xorl
xor
xor
xor
pop
lods
scas
imul
mov
mov
mov
adc
mov
and
into
nop
adc
adc
cwtl
fistpl
mov
ss
ds
shll
mov
xor
dec
sub
xchg
xor
sub
cli
sub
mov
sbbl
fidivs
out
sahf
out
xor
xor
xor
aas
ss
xor
push
sahf
out
cmp
adcl
jl
out
repz
sub
div
adc
adcl
js
ret
lds
adc
push
xor
push
xor
push
cwtl
xor
cmpxchg
imull
sbb
push
sub
loopne
mov
mov
popl
sbb
adc
cmp
mov
daa
inc
mov
fisubrs
stos
xor
adc
mov
cmp
test
adc
xor
sbb
in
xor
daa
xor
mov
mov
daa
xor
dec
jae
mov
xor
and
ret
xor
icebp
test
ss
xor
pusha
or
sbb
mov
sbbl
sti
push
jne
repz
push
pop
xchg
ss
jbe
xor
pop
or
xor
pop
rcll
jp
adc
orl
or
inc
ret
pop
gs
inc
stos
ja
sbbb
loope
jbe
std
sbb
inc
adc
inc
mov
sbb
fld
jb
push
lret
adc
xor
ss
jns
rorl
stos
xor
push
mov
fstpl
jns
xor
and
jns
xchg
xor
ret
cmp
sbb
jge
add
bound
data16
mov
push
test
xorb
xor
test
mov
in
out
js
pop
ja
leave
dec
ss
jnp
shl
test
stc
xor
xor
movsl
leave
xor
push
cmp
pop
jno
movsl
imul
push
cmp
xor
or
push
inc
sbb
mov
sbb
adc
cmpsl
sub
push
sub
cmp
xor
rorb
cltd
push
popa
cmpsb
fwait
and
outsb
pop
xor
dec
xor
or
aaa
mov
nop
fldt
jbe
sbb
mov
imul
jp
cmp
or
xlat
inc
pop
jbe
cmp
xor
popf
xor
movsb
or
xlat
adc
inc
xor
xor
xor
bound
xor
mov
xor
cmp
loopne
push
js
xor
cmp
ss
aaa
aaa
pop
mov
mov
stc
add
xor
cmp
xor
aaa
or
jnp
xor
sti
popf
aad
rcll
fistpl
sub
jmp
std
aaa
xchg
scas
mov
aaa
push
das
cmp
xor
pop
out
gs
jg
loopne
fsubs
loopne
loopne
shrl
adc
lods
aaa
pop
adc
in
sahf
jo
xor
loopne
cmp
jecxz
inc
push
xor
mov
xor
add
push
xor
mov
aaa
pop
sbb
cbtw
cmp
xor
sub
test
rep
cmp
jne
aaa
sbb
pusha
pop
inc
aam
out
les
push
xchg
stos
inc
pushf
xor
push
xor
mov
and
aaa
fdiv
jo
sbb
adc
outsl
orb
nop
arpl
xchg
leave
loope
jle
bound
adc
loopne
clc
ret
cmp
pop
sbbb
pop
cwtl
lock
test
xlat
add
xor
icebp
fdivs
out
ret
mov
iret
mov
mov
movsb
lret
mov
shll
jge
sbb
mov
test
loop
pop
xor
loop
adc
mov
rcrl
clc
rolb
sbb
fisubrs
mov
xor
pusha
inc
pushf
into
dec
adc
jnp
or
cmp
pop
mov
or
cmp
and
adc
pop
shll
lea
ret
dec
test
out
mov
arpl
xchg
inc
pop
sbb
cvtps2pi
insb
push
sbb
add
add
push
pop
ss
pop
rol
ret
in
ss
aaa
jnp
inc
cwtl
insb
cs
arpl
xor
fbstp
inc
shr
adc
test
pop
cli
sbb
inc
outsl
js
push
mov
push
xor
mov
ss
sbb
and
popa
mov
xor
leave
jno
cmpsl
arpl
xor
inc
aad
sub
cmp
inc
push
daa
lods
jp
xor
pop
aad
mov
inc
sub
pop
add
fsubs
out
nop
and
and
sub
push
mov
mov
inc
adc
xchg
xor
push
cmp
adc
inc
in
shr
xor
enter
lret
pop
sbb
adc
inc
loop
sub
sbb
loope
ja
xchg
dec
and
aad
xor
aad
cmpsl
cmp
adc
lea
sub
xor
enter
stc
mov
in
jae
popa
cmp
cmp
aad
int
in
jno
cs
pop
subps
xchg
xor
push
cmp
inc
aam
add
and
pop
push
stos
jo
mov
aaa
aaa
cmp
cmp
leave
add
or
testb
push
xor
xor
xchg
cltd
nop
adcl
rcl
adc
pop
xor
jb
push
loope
adcl
call
pop
xor
ret
repz
push
inc
cmp
test
xchg
pop
cmp
test
mov
mov
iret
pushf
xor
jno
jne
sbb
push
cmp
fidivl
xor
push
enter
cmp
dec
xor
xor
jne
ret
jno
adcb
cmc
or
xor
adc
adc
adc
adc
adc
stos
loop
mov
mov
stos
push
pop
jo
xor
dec
movsl
out
pusha
sbb
adc
cmp
lcall
sub
bound
or
notl
jmp
cmp
fwait
push
fdivrs
jo
je
ss
ss
pop
adcb
and
mov
pop
or
test
add
mov
outsb
iret
xlat
pop
and
inc
adcl
loop
adc
arpl
jae
mov
je
or
test
xor
xor
mov
pusha
dec
test
lds
xor
shll
adc
dec
adc
adc
mov
cmp
xor
mov
xor
cs
jle
cmp
add
xor
mov
or
shrb
xor
sbb
ss
cmc
and
add
loopne
insb
mov
dec
xor
lcall
ss
mov
aaa
dec
or
out
sbbb
rorb
xor
lods
dec
jge
aaa
or
dec
jbe
stc
mov
rorl
fidivs
aaa
in
push
xor
mov
les
mov
dec
cmp
xor
push
mov
xchg
fadds
cmp
out
jb
xor
mov
cmp
cmp
dec
dec
out
mov
xor
cmp
in
or
dec
mov
nop
ljmp
dec
xchg
lret
xor
les
pushf
dec
cmp
rorl
xor
test
rorb
addl
shlb
dec
adcl
das
frstor
pop
jmp
lods
cmp
add
xchg
jb
mov
pushl
mov
xchg
mov
inc
jl
jb
pop
data16
mov
lret
arpl
jmp
mov
pusha
inc
stos
xor
cmp
jge
dec
adc
xor
ret
int
xor
or
add
push
cmp
mov
mov
sbb
aam
xor
xor
sbbb
lea
mov
jno
or
cmp
rolb
inc
mov
jl
and
push
addr16
xor
out
fistpll
mov
mov
push
adc
add
mov
add
dec
xor
loope
arpl
fwait
cmp
dec
dec
aad
xor
lahf
mov
int3
ficompl
clc
push
dec
xor
add
fmul
add
lcall
xchg
sti
aaa
stos
dec
push
adc
ret
scas
mov
cmp
daa
ds
outsb
pop
fs
xorl
jg
xor
in
in
cmp
inc
add
fisubl
add
xorl
cmpsl
xor
je
inc
es
xor
xor
adc
hlt
xor
sbb
or
sbb
add
dec
std
xor
shrb
repnz
outsb
or
pushl
mov
xor
xor
xchg
pop
xor
and
cltd
rclb
and
in
das
and
or
sbb
cltd
push
mov
lods
xchg
test
test
cld
xor
iret
sbb
dec
dec
orl
adc
pop
adcl
cmp
insb
dec
or
and
outsl
xchg
sbb
aad
and
fisubrl
cwtl
test
dec
add
leave
movsb
mov
push
mov
add
pop
mov
xor
sbb
xor
js
sbb
dec
add
inc
xchg
mov
or
pop
mov
jmp
int3
or
fstp
push
sub
mov
adc
adc
cmp
xor
xchg
mov
xor
ret
adc
loopne
cmpsb
aaa
dec
pop
sub
push
orl
push
sbb
ja
or
pop
push
dec
jb
xchg
pusha
push
in
xchg
jnp
fsubrs
or
or
xor
sub
lods
pop
cmp
cli
aaa
dec
xor
and
insb
inc
xor
mov
rorb
xchg
shll
or
push
jne
pusha
ja
mov
scas
and
and
int3
inc
cli
xchg
push
orb
and
sub
les
cwtl
add
int3
xor
ss
mov
push
sbb
xor
sub
lret
outsb
negb
ret
int3
pop
sub
or
orb
aas
movsl
xor
int3
xor
or
dec
aas
mov
mov
sahf
dec
xor
xchg
es
pop
xchg
pop
xor
xor
pusha
lcall
pop
or
add
add
fld
dec
xor
add
inc
cmp
je
xor
dec
scas
ss
push
push
xor
daa
rorb
fidivrl
push
pop
fimull
sbb
dec
dec
lahf
scas
xchg
mov
in
imul
jo
push
orl
loop
je
push
jg
inc
add
push
inc
dec
xorb
lahf
xor
xchg
mov
xor
xor
pushf
sbb
jp
xor
pop
popf
mov
and
adc
push
inc
adc
dec
ss
xor
or
dec
shlb
xchg
lret
inc
lock
sbb
mov
push
rolb
xor
fadd
dec
xor
cmp
data16
sbb
dec
sub
push
push
gs
sub
push
sbbl
or
aaa
imul
dec
out
test
adc
mov
dec
or
and
sub
rorl
push
cmp
cmpsl
push
or
out
mov
jecxz
add
js
or
jmp
cmp
xor
dec
xor
test
cmp
pop
jo
mov
dec
xor
dec
xchg
mov
push
cwtl
es
lahf
and
popa
shrb
ss
punpcklwd
test
push
cmpsb
les
dec
xor
popf
adc
push
xor
xchg
cltd
sbb
mov
divl
xor
cmp
mov
movsl
dec
test
cltd
roll
or
or
test
mov
jnp
out
xchg
pop
or
mov
jo
mov
cltd
jne
inc
lcall
pop
jle
dec
dec
mov
add
push
push
ss
xor
push
sbb
loop
add
outsb
or
aaa
mov
cmp
add
bound
dec
xchg
or
push
xor
dec
mov
test
xor
cwtl
xor
push
inc
sub
xor
nop
dec
xor
push
xor
push
jb
xor
pop
and
dec
xor
jnp
dec
lahf
xchg
pop
ss
add
out
xor
mov
ja
cmp
dec
cmp
stos
les
xor
jo
hlt
sbb
xlat
daa
aaa
dec
push
and
inc
aaa
xor
dec
test
jecxz
mov
inc
dec
mov
push
sub
ss
push
inc
push
movsb
dec
aaa
cmp
dec
insb
mov
lahf
mov
popa
mov
xor
in
fsubrs
sbbl
aaa
jg
fstps
adc
add
cmp
enter
and
xor
fdivrs
sbb
and
and
mov
xchg
jo
push
in
xor
or
xor
and
lods
pop
mov
or
andb
into
lahf
push
inc
cwtl
mov
shrb
stc
popf
push
je
cmp
es
push
cmpxchg
mov
xor
mov
mov
cmp
sub
push
and
stos
push
sbb
test
xor
and
testb
add
mov
xchg
lea
adc
add
ret
inc
jne
adc
sbb
dec
xchg
nop
cwtl
lahf
dec
xchg
cs
scas
and
lds
or
and
dec
bound
inc
xchg
mov
push
push
outsl
sbb
movsb
lret
lds
push
mov
test
xor
adc
lahf
imul
pop
and
xchg
cld
imul
cmp
pop
pop
and
add
mov
shlb
icebp
dec
and
xor
ficompl
into
dec
mov
jb
lock
lods
and
and
sub
add
xchg
push
add
sub
xor
movsl
push
orl
pop
add
pop
push
imul
xchg
ds
xor
add
dec
out
push
add
inc
inc
dec
fmuls
and
mov
dec
inc
notl
jp
cmp
fisubrl
mov
cmp
push
fidivs
sbb
xor
pop
push
xor
dec
add
push
and
inc
xor
mov
or
fidivs
adc
out
mov
jbe
xchg
xchg
mov
mov
jmp
mov
mov
xor
sbb
out
jecxz
mov
js
in
addb
xchg
int3
jo
sub
or
sub
loope
sbb
dec
ja
push
cmp
dec
sub
dec
sbb
and
xor
int3
push
add
fidivl
or
mov
das
inc
cmpb
lea
or
or
insl
push
mov
sub
shlb
andb
sub
pusha
dec
lds
pushf
sbb
xor
nop
lcall
cmp
mov
mov
adc
inc
aaa
das
mov
adc
xchg
or
mov
xor
mov
fs
dec
xor
roll
adc
xor
xor
sbb
mov
addl
inc
sbb
xor
or
ret
pop
xor
int
sarl
sbb
in
pop
cmp
dec
push
xor
mov
lahf
push
in
ficoml
lahf
cmp
dec
dec
sbb
es
stos
push
gs
jp
mov
lcall
scas
jne
adc
xor
add
xor
sub
pop
or
adcb
cmc
mov
dec
cmp
flds
mov
sbb
inc
add
jbe
push
push
ss
add
pop
xor
mov
das
pop
sbb
xchg
adc
xchg
ljmp
xor
in
jl
xor
lods
fmuls
add
sbb
cmpsb
sbb
mov
xchg
ds
ss
mov
pop
fiaddl
xor
mov
xlat
xor
jo
orl
movsl
test
dec
mov
dec
dec
ret
lret
aas
cmp
sbb
orl
xor
jp
mov
xchg
mov
lds
and
mov
xor
in
adc
mov
mov
loop
sbb
mov
push
jb
ss
inc
cmp
sbb
imul
cmpb
mov
push
sbbb
cmp
push
sbbb
or
adc
rclb
addr16
js
cltd
popa
add
in
add
adc
mov
xor
push
or
xor
dec
mov
mov
or
push
mov
mov
sbb
inc
sbb
cmp
dec
cmp
add
insb
xor
and
push
xor
inc
sbb
dec
xor
lds
dec
mov
pop
xor
xchg
xchg
dec
cli
sbb
mov
vmwrite
pusha
test
mov
stos
cmp
scas
sbb
pop
xor
inc
sub
rol
or
cmp
mov
scas
inc
mov
dec
in
xor
add
imul
arpl
hlt
push
xor
nop
cwtl
push
dec
cmpsb
dec
dec
mov
sti
jne
int3
sub
mov
es
and
movsb
adc
aas
ret
mov
push
xor
sub
add
in
sahf
mov
xchg
push
cmp
mov
ret
mov
mov
push
dec
mov
scas
adcl
fmulp
lds
rorb
mov
xor
cmp
adc
mov
add
pop
dec
sub
sub
cmp
mov
dec
cwtl
mov
roll
mov
cmp
jp
sbbb
dec
outsl
sbb
inc
mov
mov
pusha
jne
loop
lret
sbbl
sub
insl
in
sub
xchg
mov
outsl
jns
xor
aaa
daa
daa
fisttpll
lock
xor
test
inc
pop
dec
mov
xor
cmpsb
inc
divl
test
mov
xor
dec
mov
pop
xor
mov
xor
xor
out
std
rcrb
jge
xchg
xor
adc
jbe
cmp
mov
movl
or
shrb
xor
or
cmp
and
xchg
or
add
imul
inc
xchg
xor
frstor
enter
xchg
inc
cmpsb
aad
push
adc
popa
pop
and
push
add
xchg
xor
and
adc
movsb
cmpsl
enter
aad
sub
pop
int3
nop
sbb
in
test
test
sub
and
jecxz
xor
jno
dec
push
sub
nop
sbb
cmpsl
xchg
leave
in
loop
xorl
cmp
std
xor
rorl
pop
inc
mov
lea
lret
and
test
xchg
inc
mov
sub
divb
imul
xchg
in
aaa
mov
jo
nop
ss
pusha
xlat
lods
jae
dec
add
cmp
and
mov
ss
fistps
push
cwtl
fildll
xor
push
xchg
adc
inc
add
jno
dec
inc
cmp
sbb
xor
mov
xchg
cwtl
popa
sub
inc
iret
dec
xor
imul
push
xor
daa
sbb
imul
cmc
mov
sbb
xchg
xor
insl
insb
lds
dec
out
xor
pop
out
pusha
dec
fsubrp
pop
inc
and
andl
inc
addr16
testb
shlb
sub
dec
or
sub
aam
popa
popa
or
insb
xor
je
dec
outsb
cmp
fimuls
aaa
outsl
jae
add
outsl
ss
sbb
lock
enter
outsb
sarl
rol
and
ljmp
dec
push
iret
ds
jb
push
data16
mov
jmp
pop
rorb
add
stos
es
inc
and
cmp
ret
je
xor
pop
lcall
mov
in
inc
cmpsb
xor
dec
ss
les
aaa
cld
add
in
dec
pushf
dec
adc
insb
fldlg2
nop
sub
xor
push
sahf
in
bound
fsubrl
ss
mov
movb
in
cmpsl
inc
sbb
mov
cmp
push
jmp
fwait
push
sbb
xor
add
push
inc
cmp
lock
push
jbe
jo
add
jbe
lcall
pusha
out
adc
andb
out
icebp
xorb
je
xor
fists
xchg
mov
std
neg
pushl
repz
cmpsl
repz
mov
mov
mov
outsl
fwait
sbb
mov
mov
mov
add
cmp
mov
cld
in
mov
mov
icebp
nop
jmp
mov
jno
cmc
inc
add
cld
lea
adc
push
movsl
add
add
mov
mov
out
call
outsl
subb
loopne
jmp
lock
insb
std
sbb
repz
mov
or
nop
mov
sbb
repz
aam
inc
add
add
sub
hlt
adc
movsbl
jl
add
adc
xor
mov
call
dec
popa
imulb
aas
or
jmp
or
or
xchg
rcl
roll
jmp
addb
aaa
cld
sahf
lods
loop
popl
mov
xchg
xor
mov
push
jmp
ja
or
mov
repz
mov
mov
mov
movsl
mov
notl
idiv
cmpb
xor
incl
add
gs
ret
andl
add
in
mov
mov
mov
mov
mov
dec
fistpll
mov
inc
or
test
inc
outsb
ljmp
test
sti
call
pop
mov
addl
dec
xlat
push
mov
dec
rorl
rorb
or
test
push
shrl
lcall
add
cmp
jb
addr16
cld
dec
and
adcl
andl
mov
cmpsb
incl
inc
and
incl
rolb
sub
or
add
cltd
mov
mov
xchg
sub
popa
push
rclb
ss
movsb
mov
ljmp
cmpsb
fwait
push
hlt
add
pop
addl
mov
sti
hlt
mov
mov
cld
ljmp
or
sti
mov
mov
movsb
jo
movsb
mov
adcb
clc
and
in
insb
jne
loopne
shlb
mov
mov
cld
inc
mov
jecxz
xchg
adc
mov
ljmp
inc
inc
inc
mov
adc
test
add
incl
xchg
je
idivb
xchg
mov
sub
push
push
xchg
fdiv
lcall
fs
sbb
out
out
mov
insb
jbe
mov
subb
decl
call
addb
xchg
mov
pushl
cld
or
repz
loopne
repz
xchg
or
mov
lcall
mov
add
incl
pop
leave
add
and
data16
cs
and
pushf
and
or
cmp
adc
or
adc
pop
jge
test
jmp
push
adc
ljmp
or
mov
or
insb
stc
call
dec
sbb
test
mov
sub
and
add
enter
pop
add
push
push
sahf
cld
cmp
cmp
decl
xchg
inc
scas
and
or
mov
fcos
mov
test
insl
push
mov
jmp
jl
cmp
xorl
mov
repnz
repz
mov
std
incl
and
mov
pmaddwd
icebp
icebp
test
mov
fwait
mov
mov
xchg
add
mov
decl
and
fcompp
add
jge
ds
lcall
lcall
pop
cmp
jmp
cli
call
inc
add
addb
xor
push
jb
add
cli
mov
nop
mov
fdivr
mov
mov
adc
cld
sub
and
lock
mov
mov
dec
lea
test
sub
or
lahf
jae
call
es
lahf
pushf
test
xchg
dec
adc
pushf
xchg
xchg
add
sbbb
and
xor
ja
outsb
jp
rol
imul
rcll
bound
or
add
jmp
xor
push
repz
aaa
mov
or
mov
mov
cmpsb
mov
mov
dec
mov
ret
or
mov
add
adc
decl
out
dec
shll
lcall
test
js
loopne
fdivl
nop
enter
or
je
repz
add
sub
andb
mov
jecxz
clc
xor
std
mov
fidivrl
mov
jmp
or
adc
in
jp
icebp
ljmp
inc
test
or
outsb
outsb
popa
and
les
pusha
repnz
cmp
pushf
mov
stos
or
and
daa
decl
lods
loopne
pop
xchg
stos
clc
cmpsb
push
movsl
call
enter
xor
dec
push
data16
and
or
lock
insl
adc
push
or
lahf
loop
mov
sub
jmp
xchg
repz
push
sbb
mov
loopne
jnp
icebp
xchg
mov
pop
mov
mov
push
icebp
mov
lock
mov
js
adc
insb
mov
pushl
adc
test
ljmp
je
mov
icebp
mov
mov
orb
mov
rep
inc
icebp
cmpsb
push
fsubrs
loop
jecxz
decl
lock
jg
xchg
sbbb
xchg
popf
xchg
pusha
xchg
lcall
xchg
nop
xchg
lcall
lcall
dec
lock
pop
call
mov
mov
incl
push
sbbb
xchg
test
test
hlt
and
sbb
adcl
lahf
xchg
xchg
jo
jo
or
je
out
test
and
add
sbb
test
adc
mov
adc
cmp
das
mov
xchg
push
mov
pop
or
std
dec
sti
or
cmpsl
mov
icebp
cmp
test
mov
sbb
add
push
xor
ljmp
sub
inc
xor
inc
addb
xor
and
test
lea
nop
insl
cmp
mov
add
decl
xchg
addb
pop
add
loopne
out
pop
pushf
and
dec
fdivrl
mov
mov
incl
xchg
cmpsb
xor
and
inc
addb
loopne
incl
xchg
stos
mov
mov
xchg
add
mov
nop
js
mov
pusha
es
ljmp
mov
out
push
popa
out
mov
std
cmpsl
or
mov
or
and
shl
jmp
bound
jge
sub
jmp
inc
test
jmp
mov
xor
or
and
std
pop
loope
and
and
clc
add
mov
icebp
inc
pop
mov
cmpsb
mov
mov
in
loop
es
aam
jg
dec
rolb
stos
mov
xchg
mov
pushl
inc
add
xor
add
add
mov
push
mov
cmc
mov
div
sub
std
xchg
xchg
xchg
jmp
orb
repz
sbb
xchg
sahf
lcall
xchg
test
pop
sbb
or
decl
insb
outsl
ljmp
jl
push
push
mov
or
xor
sti
cli
decl
bound
cmp
rolb
or
hlt
pause
add
test
fsts
push
incl
cltd
mov
mov
divl
mov
and
mov
mov
shlb
xchg
jo
xor
call
pusha
test
dec
jnp
push
out
add
repz
in
aaa
loop
or
pop
mov
add
sbb
cmpsb
push
pop
fsub
sar
jmp
mov
call
add
jo
add
adc
nop
out
dec
add
cmc
call
popf
mov
mov
dec
loope
ljmp
xchg
cmp
and
outsb
mov
add
lcall
or
test
out
lcall
test
add
addr16
out
add
fs
out
icebp
out
add
xchg
nop
decl
ficoml
mov
incl
decl
mov
loope
out
xchg
call
sar
std
sbbb
xchg
sbb
push
inc
test
fisttps
das
dec
imul
or
mov
mov
push
incl
xlat
add
or
sub
call
xchg
mov
mov
popf
lahf
xchg
test
orb
std
std
ljmp
xchg
pop
aam
stos
ror
xor
in
mov
push
and
cmp
mov
push
mov
adc
incl
jmp
sub
std
add
pop
inc
pushl
mov
sti
mov
jo
daa
push
cmp
push
es
mov
std
mov
test
push
mul
jecxz
or
lcall
mov
cltd
fucomp
hlt
out
out
out
add
out
xchg
test
sub
add
incl
adc
dec
sbb
test
and
insb
mov
ljmp
xchg
mov
lcall
cmpsb
lahf
mov
xchg
jmp
loope
stos
push
xchg
jecxz
nop
and
mov
sub
sbb
jmp
push
enter
pop
nop
mov
lahf
jmp
jbe
cld
cld
mov
mov
loope
and
mov
xchg
loope
sub
pop
xchg
jmp
adc
sub
movsl
xchg
inc
call
push
dec
je
insl
popa
arpl
call
bound
addl
mov
decl
nop
mulb
cmpb
add
lods
dec
adc
push
cmpsb
pusha
jo
lock
das
mov
jl
incl
mov
js
xor
jp
mov
enter
push
pushf
rolb
cmp
xchg
mov
sub
push
and
xorl
incl
inc
insb
jne
add
push
or
pusha
test
xchg
into
sahf
mov
sub
andb
or
xchg
cli
incl
outsb
adc
push
je
mov
aam
mov
adc
or
jmp
push
mov
ljmp
sti
out
pop
push
outsw
or
sbb
add
icebp
incl
ret
pop
push
je
ljmp
popa
std
incl
cli
xchg
sbbb
push
std
and
adc
sbbl
jnp
stos
pop
xchg
jp
or
mov
cmp
add
movsb
jbe
mov
sti
sub
adc
xor
repz
lods
fildll
cmpsl
mov
call
pusha
and
xor
incl
pushl
in
sub
or
and
lock
mov
mov
mov
and
gs
ljmp
or
call
test
mov
ljmp
mov
and
cli
gs
jmp
ljmp
cmpsl
loope
insl
fisubl
and
mov
hlt
mov
add
fistl
cli
call
push
out
hlt
adc
cmp
mov
inc
add
xor
pop
adc
sti
dec
incl
mov
cwtl
icebp
jmp
sahf
adc
xchg
xchg
mov
lahf
or
mov
adc
scas
loope
lret
nop
cmpsb
adc
sbb
in
xor
xchg
movsb
mov
loope
int3
cmp
addl
push
clc
aaa
ljmp
jo
or
sbb
rcrb
lock
xchg
mov
mov
push
rcr
adcl
and
addl
mov
mov
inc
incw
call
ret
incl
outsb
mov
jmp
mov
cli
xchg
mov
mov
mov
mov
or
push
jg
jae
add
orb
stos
mov
ficoml
ss
popa
sub
xor
out
and
arpl
pushl
jge
mov
mov
scas
jmp
mov
es
mov
sbb
mov
dec
or
add
mov
addl
decl
xchg
test
push
sub
imul
ljmp
mov
ret
test
mov
mov
mov
xor
mov
pushl
ret
cmp
jae
or
shll
ljmp
or
js
orb
mov
mov
sbb
icebp
fs
jb
inc
aad
daa
cli
lcall
fmulp
popa
xor
jmp
sub
jmp
and
mov
inc
repnz
pop
xor
idiv
inc
rorl
pop
mov
popf
adc
call
adc
mov
test
adc
add
ljmp
push
test
out
dec
mov
or
mov
sti
adc
adc
push
mov
xchg
mov
mov
mov
out
in
xorb
mov
mov
inc
push
ljmp
mov
cmpsb
lea
jae
push
mov
clc
repz
repz
icebp
lcall
sub
xchg
and
adc
jo
jmp
in
std
in
loop
loop
decl
or
pop
or
loope
std
jecxz
loop
inc
or
jmp
adc
incl
xchg
sti
cld
orb
popa
decl
sbbl
movsb
leave
cmp
xor
out
ret
pop
add
sub
xchg
mov
test
loop
ljmp
lea
pusha
push
cmp
mov
jl
push
jle
mov
jle
add
icebp
lock
icebp
out
mov
or
clc
call
xor
loopne
addr16
inc
sti
lcall
push
xor
lcall
fwait
mov
loopne
jmp
sbb
out
out
out
mov
loop
in
mov
loopne
lock
mov
mov
ljmp
mov
out
dec
out
dec
shrb
in
ljmp
mov
ljmp
jecxz
mov
inc
pop
pop
cli
push
push
imul
xor
adc
mov
mov
xchg
ljmp
loopne
xchg
ljmp
nop
xchg
jecxz
loop
cld
scas
adc
xchg
xchg
xchg
decb
xchg
out
xchg
jecxz
roll
add
xor
jns
sbb
addl
hlt
sbbb
scas
cmpsl
mov
movsb
scas
and
adcl
inc
jmp
cwtl
cltd
jle
popa
pop
hlt
ljmp
add
jmp
xchg
in
add
incl
cmpsb
push
add
pop
stos
decl
outsl
pop
in
pop
adc
imul
lods
gs
or
dec
xchg
jno
jae
add
add
jg
or
push
cmp
fs
shrb
adc
and
adc
jne
or
popa
sbb
mov
insl
gs
scas
push
pop
int3
or
clc
pop
cmp
imul
jo
scas
cmpsl
sub
outsl
push
and
pop
or
push
sahf
sahf
stos
repz
or
shrl
addb
call
add
mov
push
ficoms
jmp
xor
xchg
pushf
scas
mov
and
rorb
push
xor
rcrl
pop
xchg
cld
add
push
mov
sub
xchg
mov
mov
or
pusha
rcrb
cwtl
movsb
stos
mov
adc
sbb
and
jae
mov
ret
scas
adc
mov
test
sbbl
lcall
scas
xor
adc
movsb
mov
add
or
cmp
jae
sub
scas
adc
pop
xor
sub
xchg
mov
add
dec
movsl
rcll
mov
scas
adc
hlt
arpl
adc
push
fdivl
test
inc
ror
repnz
mov
push
imul
xorl
add
add
outsl
adc
mov
outsb
xchg
push
mov
or
nop
stos
or
cli
xorb
sarl
scas
pop
sbb
cld
adc
leave
scas
jne
add
rorl
sbb
xor
mov
aad
scas
scas
call
outsl
adc
lcall
adc
xchg
mov
mov
test
test
orl
or
ljmp
mov
shrl
test
add
scas
or
inc
jb
xchg
popa
arpl
xor
cld
push
xlat
rcll
adc
lahf
bound
xchg
add
adc
add
pop
outsl
fists
mov
mov
jo
mov
gs
scas
mov
mov
push
cmpsl
mov
add
dec
ror
inc
outsl
insb
dec
ret
cli
cs
push
pop
or
add
rcll
push
cwtl
mov
pop
push
das
cwtl
and
pop
adc
addl
sub
clc
xor
or
xorb
lcall
add
pop
or
movsl
mov
cmp
mov
adc
scas
sub
mov
cmpsl
mov
int
push
adc
jbe
aas
loop
sub
rcrl
or
add
hlt
inc
insb
adc
xor
cmp
adc
add
loopne
adc
jb
mov
and
punpckhwd
or
jl
and
sarl
inc
les
dec
shrl
cmpsb
add
scas
adc
inc
jnp
mov
cmpsb
mov
mov
rcr
and
push
pop
insb
clc
mov
pop
add
add
push
inc
jno
adc
mov
fidivrs
fsubrs
popf
xchg
cmpsb
cwtl
adc
test
lods
xor
mov
mov
neg
into
cwtl
and
stos
insl
push
jg
mov
fsubs
lahf
adc
jb
dec
stos
inc
mov
xchg
mov
scas
jne,pn
rcll
cli
js
jae
rcrl
add
es
stos
scas
or
add
mov
stos
mov
cmp
xchg
iret
mov
enter
js
mov
mov
mov
xchg
and
or
test
pop
adc
out
jae
mov
icebp
movsl
jecxz
loope
pop
mov
lds
adc
out
repnz
loop
dec
mov
adc
scas
mov
mov
je
lahf
lahf
adc
fiadds
push
jnp
jmp
xor
shrb
repz
pushf
test
roll
inc
pop
mov
mov
mov
mov
or
pop
mov
movsb
add
push
cs
inc
scas
sub
movups
dec
shl
xchg
mov
iret
iret
sbb
sbb
sbb
shlb
adc
xlat
mov
pop
iret
fst
loopne
push
sub
xchg
add
push
lret
xor
mov
mov
rorb
xor
jnp
push
mov
sbb
add
push
add
sub
push
cs
jns
rcrb
or
add
add
testl
mov
mov
and
adc
mov
or
inc
arpl
addb
stos
pop
das
mov
shlb
loop
mov
sbb
and
imul
inc
dec
or
movl
les
or
int3
pusha
and
int
stc
add
xor
push
or
or
or
add
add
xor
inc
lahf
push
or
push
inc
outsl
push
add
dec
add
mov
orb
inc
or
mov
mov
aas
mov
cs
test
push
pop
xor
jne
ret
mov
pop
adc
addl
outsb
sub
outsl
add
push
adc
add
xchg
mov
xchg
adc
add
add
lods
movsb
sub
adc
dec
mov
dec
fwait
push
popa
sub
sbb
push
dec
push
pop
and
es
add
add
add
and
and
and
jmp
sub
push
ret
add
cmp
push
add
pop
int3
sbb
pop
and
add
sub
and
or
add
ret
add
fldenv
movsl
daa
push
or
mov
jno
adc
add
add
sbb
adc
add
mov
jo
inc
cltd
add
lods
mov
fistps
test
gs
xorb
dec
push
adc
add
inc
stos
mov
add
sbb
cmp
dec
push
mov
jno
mov
inc
mov
fcoms
adc
nop
lahf
push
mov
shll
push
test
mov
pop
add
adc
adc
movsl
jmp
or
adc
adc
mov
and
insl
icebp
sub
or
push
adc
fcmovnbe
shlb
arpl
test
xor
pop
add
add
or
test
mov
inc
jns
jmp
sub
inc
add
mov
pop
cmp
cltd
insl
mov
or
rorl
mov
xchg
adc
pop
cmp
pop
mov
jmp
test
mov
mov
sbb
push
inc
scas
daa
dec
inc
shll
inc
xor
xor
movsb
sbb
sbb
cwtl
loopne
and
outsb
mov
xor
mov
sub
sub
dec
pop
scas
filds
mov
sbb
add
jge
lods
inc
sbb
pop
mov
xchg
mov
sub
popf
or
push
adc
inc
das
or
subl
inc
out
mov
push
fsubrs
xor
outsl
test
pusha
sahf
ss
sahf
add
inc
insb
inc
nop
movsb
sbb
and
mov
sbb
or
xlat
test
test
push
mov
add
pop
sub
add
or
push
ss
shll
out
dec
or
stos
cs
jb
pushf
cli
cmp
push
bnd
sbb
add
mov
sahf
push
and
push
iret
fwait
xchg
nop
dec
sbb
sub
daa
fisttpll
dec
in
pop
dec
or
in
das
js
xchg
and
inc
or
add
inc
and
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
add
dec
add
