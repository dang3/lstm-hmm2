fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
inc
sbb
mov
fucomi
ds
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
and
xor
push
and
add
pusha
push
int3
int
sbb
dec
cmp
push
xor
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
jge
pop
fildl
shr
jmp
or
xchg
mov
stos
pop
pop
or
insb
in
fsts
fnstenv
mov
push
stos
hlt
andl
adc
sti
sub
mov
or
add
cmp
jne
incl
inc
sbb
or
jmp
xor
mov
pop
mov
add
leave
pop
lahf
std
mov
jo
cmpb
clc
inc
inc
jmp
adc
mov
mov
notl
push
mov
mov
inc
inc
test
add
dec
out
jne
pop
xor
mov
xor
cmp
mov
and
xlat
inc
imul
lcall
fs
imul
inc
movsb
imul
dec
pop
aaa
idiv
inc
pop
stc
cli
outsl
xchg
dec
bound
sub
imul
adc
pop
push
and
clc
push
add
mov
pop
adc
leave
add
addl
adc
xchg
adc
imul
outsb
pop
movsb
jns
repz
imul
fdivs
outsl
adc
xor
inc
adc
push
pop
jl
out
adc
pusha
insb
ljmp
jae
or
lock
push
push
jg
shrb
mov
add
mov
out
jo
js
inc
jl
incl
idivl
jg
jae
mov
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
cmp
add
push
push
fstpt
or
mov
cmpl
push
or
jb
jmp
mov
mov
lea
movzwl
inc
sub
sti
fistpl
orl
cmp
outsl
outsl
fisttpl
popf
mov
inc
je
cmp
and
and
hlt
movsl
clts
pop
cmc
in
sub
and
add
xor
and
int3
push
bound
dec
andb
and
sbb
mov
call
push
sahf
adc
outsb
mov
test
je
xor
sbb
add
pop
stos
push
in
insl
mov
or
cmp
fisttpll
mov
neg
lea
jne
cmpb
aaa
mov
adc
jge
sub
cli
aas
mov
inc
sub
lret
xchg
mov
or
pop
pop
call
out
inc
jmp
xor
dec
sbb
mov
popf
mov
add
inc
ss
pop
jb
adc
cmpsb
sbb
iret
imul
mov
insb
sti
xlat
insb
fcom
ror
dec
sub
shlb
gs
pop
outsb
fwait
cmpsb
rol
outsb
or
dec
int
mov
js
enter
dec
pop
pop
push
push
shrd
mov
scas
xchg
scas
mov
mov
cmpsb
imul
mov
inc
mov
lcall
gs
lcall
cltd
movsb
insl
sarl
out
cs
test
add
call
push
mov
lcall
aaa
lea
mov
mov
mov
adc
adc
dec
jg
jne
mov
push
lcall
in
sbb
add
test
push
xor
push
push
mov
and
inc
mov
hlt
dec
mov
test
cmpsb
daa
mov
dec
or
fnstcw
push
xor
int3
add
shlb
push
push
shlb
pop
cs
lret
shlb
jns
dec
aad
callw
mov
ficompl
mov
push
inc
jecxz
mov
in
inc
out
out
call
mov
jmp
in
ss
xchg
dec
xchg
inc
cmpb
fcmovbe
cmp
cmp
push
leave
in
jo
pop
sahf
cwtl
mov
ds
mov
mov
add
push
das
rcrb
call
rcrl
jecxz
ja
ret
les
lods
pop
add
fwait
cmpsb
jmp
mov
test
out
cmp
hlt
pop
in
dec
mov
jbe
nop
dec
sarl
xor
fs
mov
or
fildl
inc
sub
and
js
jge
or
in
mov
inc
cmp
jb
jmp
cs
add
adc
andl
fbld
test
js
push
inc
jbe
daa
out
test
adc
fsubl
cmpsb
imul
imul
imul
push
je
push
pop
imul
outsl
ja
pop
sbb
insb
dec
mov
lcall
ret
mov
ret
les
lds
inc
imul
enter
lret
lret
lods
cmpsb
imul
imul
movsb
imul
rcrl
adc
dec
gs
xorb
js
insl
push
lcall
icebp
repnz
cmpsb
imul
mov
cltd
in
lock
mov
or
mov
ret
sbb
lods
iret
cmp
or
es
sti
loopne
ds
enter
inc
ret
sub
clc
pop
insl
xchg
lret
int
into
stc
inc
cli
imul
and
mov
mov
int
test
fistpl
mov
adc
sahf
dec
cmp
sti
or
sub
fisttpl
out
xor
xor
push
adc
and
cmp
pushf
in
sbb
shr
cs
test
dec
fs
popa
mov
arpl
fnsave
lock
mov
mov
fidivl
or
xor
jno
sbb
insb
inc
jo
in
data16
arpl
pop
pop
mov
pushw
dec
mov
mov
adc
inc
push
std
inc
outsl
push
dec
inc
shll
jo
inc
mov
in
shll
jp
test
or
std
es
xor
push
push
adc
mov
orl
imul
sti
pop
jae
imul
xor
xchg
insl
inc
gs
dec
shll
ja
daa
or
xor
imul
mov
je
iret
mov
ret
mov
in
dec
push
or
adc
sbb
insl
testl
loopne
mov
sbb
and
push
push
pop
das
je
jbe
pop
test
add
dec
sub
xchg
cwtl
lods
call
pop
repnz
mov
adc
add
xchg
out
adc
adc
aad
in
push
mov
popa
je
inc
arpl
outsl
cs
lret
in
jo
jns
inc
insb
add
mov
fbld
loope
xlat
sbb
push
adc
adc
xlat
andb
pop
pop
cmp
inc
push
or
adc
adc
sbb
sbb
or
add
and
fdivrs
mov
add
loope
xchg
lock
fwait
call
adc
adc
cmp
cmc
pop
shlb
push
xchg
fldt
sbb
stc
jmp
sub
out
out
push
lock
pop
push
mov
cld
sub
notb
adc
or
push
into
fisttpl
out
adc
mov
mov
punpckhdq
pop
add
pop
push
fs
lea
pushf
add
push
mov
movsb
jmp
imul
inc
inc
push
fs
jle
or
push
scas
cld
ja
loopne
push
sahf
movsl
rclb
mov
je
insl
test
es
imul
das
sbb
jbe
xorl
push
and
imul
jb
jae
mov
mov
imul
push
mov
nop
cmpsb
imul
imul
mov
jae
jecxz
pop
movsb
imul
dec
shll
sti
cld
sub
mov
cmpsb
dec
outsl
arpl
lret
leave
mov
outsl
jne
fs
inc
lcall
gs
push
pop
movsb
imul
inc
cmpl
mov
or
xor
xor
lock
loopne
js
mov
test
jbe
adc
punpckhdq
pop
fcmovnb
lea
test
add
insb
push
cmp
push
lds
int3
adc
mov
inc
movsl
cmpb
pusha
test
sbb
test
adc
mov
xor
and
and
int3
cmp
pop
bound
lea
or
js
cmpsl
imul
pushf
pushf
shl
jle
pop
sbb
push
adc
pop
xchg
sub
inc
nop
das
push
xchg
ret
or
inc
lcall
push
push
add
rcl
in
out
je
xorl
daa
mov
push
nop
and
ror
jbe
or
sbb
add
dec
add
adc
add
loope
inc
mov
movsb
jmp
mov
xchg
sub
push
pop
pop
lock
or
out
mov
enter
push
lock
ljmp
imul
cltd
lods
stc
leave
xor
sub
push
pop
sub
sub
pop
call
push
loopne
cmpl
adc
inc
jae
cmp
cltd
sub
in
hlt
pop
pusha
enter
cmp
ja
jb
add
jp
mov
fldt
neg
pop
inc
push
xor
mull
or
hlt
fdivl
adc
adc
xlat
enter
out
sbb
inc
add
push
int3
ljmp
push
xchg
push
xchg
sarb
adc
fimuls
xchg
jg
pop
mov
sub
inc
insl
pop
push
aas
dec
popa
jne
pop
cs
arpl
push
mov
int
lock
repnz
rol
jb
shll
rorb
shlb
jb
imul
inc
imul
fcoms
movsb
js
add
aaa
add
add
hlt
push
push
rolb
adc
xchg
cld
add
clc
add
movl
and
orl
mov
int3
stc
mov
push
ret
int
lds
push
inc
xlat
unpckhps
das
cltd
fdivr
frndint
inc
ds
in
cli
sar
shl
das
in
shl
cmc
mov
outsb
repz
leave
clc
gs
pop
fstl
into
add
pop
mov
shll
jns
add
xor
imul
dec
ret
aad
cmpsl
test
mov
outsb
jp
push
jge
movsl
push
scas
rcr
shrl
add
ja
shll
bound
shlb
push
push
push
clc
add
je
push
sbb
pop
push
pop
fs
mov
std
xor
push
stos
xor
dec
mov
les
mov
cmp
aaa
sti
jmp
repz
or
pop
inc
pop
iret
subb
sbb
ds
and
add
xchg
xchg
std
sar
int3
stc
notb
divb
and
cmp
dec
enter
iret
sub
icebp
adc
push
add
jnp
pop
repnz
mov
ret
sub
fs
pop
adc
adc
cmpsl
add
lock
or
add
mov
cmc
push
gs
xchg
dec
testl
pop
xchg
inc
je
jb
bound
gs
mov
cmp
push
je
imulb
xchg
gs
insb
gs
je
gs
xchg
gs
bound
ror
stos
xchg
gs
ret
pop
and
lock
push
fwait
sbb
fiadds
add
aam
push
xchg
inc
aaa
hlt
aam
jns
sti
das
enter
rcl
or
and
jb
dec
adc
sbbl
inc
or
cmp
inc
test
js
fdivr
test
and
cmp
inc
xchg
cmpsb
cltd
ljmp
and
test
in
pushf
dec
pop
jb
cld
fdivr
fdivr
jb
pop
test
cld
fdivr
in
lods
push
cmpl
mov
xchg
sbb
jae
decb
pop
or
std
add
rcrb
push
stos
and
jae
je
pop
fcmovnbe
insl
inc
push
loope
addr16
sub
sarl
push
jnp
or
hlt
xchg
adc
pop
mov
fucomp
or
negb
push
push
cmpsb
outsb
notl
push
push
or
mov
mov
mov
sbb
ljmp
xchg
sbb
xor
cmp
xchg
jl
or
pushf
pusha
leave
pop
notb
cmp
pop
fcmovnu
ljmp
nop
or
mov
cmp
andb
hlt
adc
mov
subb
xor
sbb
or
fmull
adc
popa
out
xor
adc
adcb
inc
dec
pusha
xor
sbb
jecxz
xor
jmp
or
mov
mov
or
or
lods
sbb
xchg
cmp
testl
push
add
adc
mov
cmp
inc
mov
mov
mov
clc
add
push
sub
jl
je
mov
cmc
dec
ss
sbb
xchg
cmp
cmpsb
sub
out
pop
sbb
push
es
add
sub
cmp
in
push
in
test
push
sbb
andb
pushf
pop
ret
rcll
push
js
sub
jp
std
dec
dec
enter
std
jge
mov
int3
jl
add
gs
shl
insb
fs
jne
je
lods
loope
sbb
push
enter
stc
or
cld
push
leave
push
cmp
lea
sbb
and
pop
inc
lcall
inc
bnd
iret
push
test
jl
pusha
lcall
gs
std
add
imul
xchg
or
mov
je
cs
mov
clc
mov
arpl
mov
outsb
mov
lea
add
xchg
outsl
nop
xchg
xchg
or
fwait
mov
xchg
xchg
xchg
jns
fs
fwait
pushf
insb
sub
mov
cmp
jmp
insl
andl
or
sub
mov
and
and
jmp
jns
pop
lods
popa
scas
add
cmp
and
andb
fdivs
mov
iret
fcoml
mov
or
pop
test
fs
scas
out
lock
imul
push
loopne
das
xor
icebp
add
push
push
clc
faddl
mov
add
in
mov
adc
or
gs
sub
jo
clc
push
shll
push
push
in
out
insb
push
or
fsubs
mov
add
push
push
push
or
mov
lret
push
js
or
gs
jne
fldenv
inc
fcmove
int
push
les
dec
hlt
push
push
lds
cmp
xchg
jmp
lock
pop
mov
iret
add
js
sbb
jne
push
ds
push
ret
push
lock
push
xor
cmp
add
cmp
nop
dec
ret
stos
rclb
jecxz
cmpsb
incl
mov
inc
or
insl
pop
jnp
jb
sbb
dec
pop
push
adc
push
rcl
dec
out
sarb
icebp
pop
jbe
mov
mov
sbb
xor
or
add
xor
xor
or
mov
xor
inc
or
div
imul
ret
fldl
push
dec
xor
mov
jmp
push
jne
jo
mov
mov
push
or
jnp
ja
jnp
and
sbb
or
xor
and
cmp
fsubl
pop
xor
inc
shlb
movzwl
cmp
jl
pop
nop
sahf
daa
dec
or
xchg
filds
dec
inc
mov
add
int3
sbb
enter
fcoms
or
cltd
imul
jo
push
push
negl
jl
cltd
sbbl
dec
sbb
pushl
into
push
adc
adcb
adcl
sbb
cld
sbb
data16
cmp
js
or
shr
jbe
or
out
sub
jne
shlb
clc
pop
sub
pop
loope
and
movl
das
sbb
fisttpll
pop
sahf
mov
push
sub
add
cmp
incl
gs
fisttpll
push
inc
sub
fmuls
mov
dec
mov
push
push
in
shufps
mov
loop
jmp
jae
es
js
dec
lods
pop
pop
loop
push
iret
mov
sub
inc
mov
dec
outsl
lock
sbb
ds
push
das
les
or
sbb
sbb
push
push
mov
add
ret
mov
or
enter
sub
and
test
lea
loopne
dec
hlt
aas
mov
decl
inc
add
cmp
jl
add
sub
mov
lods
sarl
cltd
lea
aam
dec
dec
clc
mov
pusha
lock
sti
mov
push
sub
rol
test
sub
adc
pop
xchg
mov
test
sbb
inc
or
ss
pop
lea
mov
mov
daa
push
sahf
subb
push
lea
fsubrl
push
int
rcr
sbb
int
cmp
add
mov
adc
push
push
or
incl
mov
mov
mov
daa
pop
cmp
outsl
out
out
clc
sbbl
test
sub
adc
cli
jl
mov
sbb
inc
movsb
mov
mov
xchg
loopne
push
test
push
inc
mov
inc
call
adc
inc
add
jmp
push
sub
push
leave
push
push
xchg
ljmp
dec
das
es
push
mov
mov
addb
fisttpll
insb
add
push
adc
movsl
js
ret
and
xor
orl
fidivl
jmp
push
lret
lds
sub
fisttpl
jmp
fstp
sbb
jne
sbb
pop
cmp
pop
call
adc
push
movsl
add
pop
int3
cmp
sub
xor
push
cmp
outsb
adc
lds
add
lods
adc
fdivs
lret
jne
dec
mov
mov
mov
push
call
sbb
jae
mov
adc
cmpw
jne
fwait
or
sub
js
loopne
or
push
in
jbe
andl
and
and
dec
add
push
pushf
jnp
jb
adc
sub
inc
adc
xor
ficoml
insl
lods
push
test
dec
sbb
jne
out
inc
dec
dec
sbb
push
sub
mov
gs
dec
mov
mov
xchg
ret
push
adc
add
pop
shrb
xor
test
stc
lea
sbb
je
inc
mov
shlb
and
mov
inc
adc
roll
aad
rcrl
xor
icebp
push
adc
mov
or
lods
xchg
int
add
mov
or
sti
inc
lock
mov
xlat
inc
enter
lods
adcl
add
addr16
pop
lock
adc
outsb
xor
xchg
fmuls
inc
fsubrs
ja
jnp
jne
mov
pusha
sub
xchg
xor
sub
or
test
add
sbb
push
ret
adc
push
sbb
lods
out
xchg
gs
cmp
addr16
test
jbe
push
mov
gs
jecxz
fsubrs
setnp
mov
pop
inc
jnp
data16
adc
loopne
in
outsb
pop
mov
out
add
dec
mov
add
adc
xchg
pop
lcall
int3
not
or
insb
mov
add
xor
pop
js
insl
lock
cmp
push
push
and
mov
loopne
cltd
and
orl
pusha
out
xor
adc
adc
and
movb
mov
sub
sub
mov
pushl
mov
rorb
and
inc
push
scas
cmp
insl
mov
cmpl
jne
shr
add
add
jb
call
add
jl
push
xor
add
xor
je
imul
jns
ja
dec
xchg
andb
mov
inc
outsl
jns
push
or
lock
lret
and
jae
mov
test
xchg
mov
cli
enter
mov
cltd
int
gs
xchg
and
inc
insb
insb
shlb
popa
arpl
pushf
inc
pop
mov
jecxz
popa
addr16
nop
mov
xchg
sbb
sti
add
sbb
lods
mov
popf
stos
stos
push
iret
arpl
mov
pushf
cs
pop
fnstsw
add
pop
idiv
add
mov
push
lock
inc
add
pop
cmp
and
andl
mov
add
mov
ljmp
icebp
inc
inc
fisttpll
xchg
pop
repnz
push
nop
inc
adc
ljmp
fidivs
inc
lock
adc
add
inc
mov
lret
mov
jo
inc
imul
outsl
pusha
nop
cmpsb
imul
in
movsb
adc
mov
pop
push
push
lods
xchg
aam
sbb
adc
sbb
mov
push
popf
leave
push
jne
and
push
inc
popa
movl
gs
je
imul
lea
stos
insb
ja
push
pop
js
xchg
andb
xchg
ja
lret
fcoms
pop
pop
dec
mov
inc
and
or
lods
aad
sbb
adc
sarl
and
nop
arpl
into
enter
xchg
std
jae
push
mov
or
sub
ror
cs
test
pop
push
push
sub
lods
pop
adc
add
or
and
stos
sub
test
fcmovbe
stc
aam
jge
enter
fdivr
pop
xor
popa
adc
popf
cmp
into
call
adc
push
fldt
lock
in
in
mov
loope
sub
adc
call
jns
or
fdivr
fcomps
or
push
fcompl
mov
or
or
xchg
movsb
sbb
push
addr16
inc
cmp
or
sti
adc
mov
push
add
xchg
pop
sub
sub
in
loopne
adc
in
bound
xor
lods
call
xchg
cmp
call
bnd
sbb
add
out
mov
push
int3
add
pushf
xchg
inc
inc
inc
ss
add
jnp
mov
jle
aaa
jne
fmuls
jb
sub
add
cmc
test
jae
sub
mov
or
loope
xlat
cmp
ret
pop
je
dec
ficomps
mov
mov
cmpsb
sbb
sub
insb
push
sbbb
push
or
dec
push
or
lods
xor
xchg
fwait
cltd
mov
fdivrl
adc
pop
fs
popa
mov
push
pusha
adc
insb
pop
fs
imul
adcb
cmp
outsb
mov
sbb
add
sti
aam
sbb
push
daa
inc
push
lock
push
mov
pop
out
xor
nop
enter
cmp
jg
mov
jne
cmpb
jne
inc
inc
mov
push
cmp
je
cmp
repnz
lcall
rorb
insb
idivb
add
and
push
sub
jns
jbe
jmp
addr16
rol
mov
inc
jmp
xor
imul
fbstp
mov
push
test
or
push
iret
mov
clc
mov
add
mov
sub
enter
in
pause
mov
orl
and
in
into
xchg
or
xchg
add
ss
mov
enter
out
or
lcall
push
cmpsb
imul
imul
dec
shll
xor
pop
insb
dec
pusha
shrl
push
pop
push
push
or
xor
xlat
inc
add
adc
insb
xchg
dec
fs
push
ljmp
dec
loopne
repnz
push
sbb
xor
shll
and
ss
shll
js
dec
shll
mov
repnz
ss
mov
add
jne
dec
incl
loope
add
xor
pop
icebp
and
roll
daa
popa
testb
push
leave
sub
rclb
add
cvtpi2ps
ja
inc
incl
xor
cs
insb
stos
dec
dec
add
or
or
mov
pusha
cltd
es
jb
gs
mov
inc
gs
outsl
fs
gs
imul
inc
jb
popa
je
fwait
mov
push
and
and
mov
outsl
jae
dec
popa
outsb
ds
pop
insl
jae
arpl
dec
pushl
outsl
jb
add
addr16
outsl
outsl
je
gs
les
mov
jg
jb
add
js
add
popa
ja
mov
pop
fs
outsb
arpl
push
inc
dec
push
xor
or
jne
nop
pusha
nop
xor
push
ljmp
or
add
pop
add
mov
xor
push
push
movl
mov
jle
jb
arpl
popa
gs
dec
dec
inc
pop
shlb
jmp
mov
mov
mov
mov
inc
or
mov
sbb
add
add
jge
and
add
mov
add
dec
nop
test
nop
je
lea
das
decl
push
mov
cmpsb
sbb
pop
jne
nop
nop
mov
sti
pushl
movzwl
mov
add
mov
add
jge
jmp
or
xlat
mov
xor
pop
mov
cmp
mov
pop
lea
push
push
in
in
gs
int3
popa
sub
fs
dec
sub
in
xlat
jb
mov
jns
popa
call
out
push
add
and
cld
pop
lea
pop
daa
adcb
push
call
pop
push
fnstsw
nop
jmp
pop
pop
sbb
dec
call
negb
xor
mulps
fcmovnbe
mov
add
nop
add
push
dec
mov
xchg
xchg
inc
add
inc
pop
add
loopne
int3
xor
add
nop
add
and
and
fldl
enter
push
pop
mov
int
jmp
mov
imul
jb
insl
and
outsb
outsb
outsl
je
bound
jb
std
push
jne
and
inc
dec
push
and
fs
mov
jl
ret
sti
sbb
add
add
mov
xchg
add
or
cmp
loope
hlt
mov
add
aas
push
imul
fwait
cmp
into
mov
dec
dec
adc
lods
and
add
fcoml
int
jo
add
mov
addb
cmp
add
mov
nop
sub
jb
ss
pop
push
xchg
rorl
sub
mov
xchg
add
int3
rorl
add
nop
lcall
loopne
jb
pop
adc
cmp
inc
orl
fadd
cld
cmp
pop
add
xor
xor
decl
or
or
cmpsb
mov
movb
ss
mov
jb
iret
mov
aas
push
aam
pop
and
sbb
or
sbbb
movsl
and
jg
adc
push
rclb
in
cmp
cmpsl
mov
jae
icebp
stos
add
and
and
decl
cmp
or
sti
ljmp
mov
push
mov
aaa
push
mov
xor
sbb
jle
jg
sbb
mov
adc
push
jmp
orb
sti
xor
push
pop
pushl
movzbl
push
je
mov
pop
lds
push
or
push
mov
sahf
fcompl
jmp
or
imul
push
sub
jne
jmp
adc
push
test
adc
icebp
incl
pop
lods
or
pop
jle
sbb
loope
fnstsw
stos
mov
sub
sub
and
push
in
pop
fistl
inc
or
add
fs
cs
lret
ljmp
jne
jae
mov
cs
adc
loop
pop
add
outsl
fwait
inc
pusha
xor
dec
inc
dec
rcrb
rol
les
lds
je
dec
enter
imul
das
lret
int3
inc
add
outsb
into
arpl
iret
outsl
cmp
rcll
shlb
shll
or
mov
daa
cmpsb
mov
js
movsb
dec
mov
mov
movsl
cmpsb
cmpsl
test
or
stos
stos
lods
lods
shrl
pop
pushl
mov
mov
mov
mov
push
dec
mov
gs
enter
cld
call
sub
popa
lea
push
add
push
pushl
xchg
jp
call
call
imulb
insb
outsl
cld
cmpsl
cmp
lcall
ja
pushl
adc
jg
fmuls
clc
pop
or
add
cmp
mov
incb
adc
add
lcall
jle
dec
je
filds
adc
push
int3
in
mov
movl
sbb
jne
mov
imul
in
out
fistps
lock
icebp
xor
jg
repz
sbb
cmc
mulb
loopne
loope
add
jecxz
pusha
pmulhw
xchg
pop
out
call
test
dec
xchg
ja
je
lea
push
and
jge
and
pop
cmp
jg
or
mov
cmp
jne
push
push
sub
xchg
or
ljmp
dec
mov
pop
dec
and
in
inc
ret
add
pusha
and
or
nop
inc
inc
cld
lcall
mov
dec
in
neg
outsb
jo
aaa
inc
mov
daa
popa
and
ljmp
cmp
xor
mov
jne
xor
out
cltd
in
xchg
cmp
test
aas
pop
rorb
and
or
cmp
out
lods
or
cmpsb
je
mov
fstpl
push
pop
pop
shr
pop
push
mov
loope
xor
lock
xchg
out
add
aam
lret
jmp
aad
test
fildl
rcr
fstp
out
sbb
clc
pushl
add
insb
int
fs
jb
jo
or
inc
jg
jne
jbe
or
popa
js
popf
sub
leave
jns
ds
jnp
fmulp
rcrb
fcomip
jle
push
mov
dec
or
subl
test
inc
pop
incb
dec
lcall
mov
loopne
xchg
add
adc
mov
decb
xchg
popa
jb
lret
xchg
jbe
gs
xchg
xchg
mov
or
lcall
in
aaa
popf
insb
addr16
gs
jae
outsl
dec
idivl
test
les
lret
insl
xlat
xor
enter
jae
jae
xor
ss
jecxz
pop
cli
je
int
shrl
in
sbb
jo
rcl
je
dec
mov
jmp
lcall
outsl
jae
fildl
imul
cmp
call
push
divb
shlb
lahf
testb
push
adc
pop
movsb
insl
aam
insb
movsb
add
lea
pop
loopne
movw
mov
adc
push
mov
pop
imul
sahf
out
pop
and
pusha
push
insb
mov
sahf
jo
xor
inc
push
add
cmp
or
mov
pop
arpl
or
loopne
mov
mov
mov
sub
sahf
xor
fdivl
adc
sbb
and
push
jbe
repnz
std
popa
pop
loope
mov
sbb
cmp
pusha
sbb
mov
sbb
pop
inc
sub
in
xchg
sub
mov
repz
iret
dec
pop
shll
cli
push
pop
mov
mov
ljmp
push
ljmp
mov
lahf
fcoml
pmuludq
mov
push
lcall
out
fwait
pop
popa
pop
add
mov
fwait
mov
add
add
decl
adc
sbb
jmp
sti
adc
sbb
or
aaa
decl
loopne
or
loope
stc
popa
sub
jle
in
sbb
dec
jmp
ljmp
pusha
ret
pushf
in
in
mov
or
mov
imul
dec
add
call
fiaddl
mov
push
les
sub
call
jbe
adcl
loope
inc
clc
jmp
imul
out
insb
rcr
fisubrs
mov
ja
negl
ljmp
pop
mov
mov
gs
je
inc
ja
clc
jmp
imul
loop
adc
sbb
hlt
pop
jb
jae
jg
jmp
dec
call
outsl
or
mov
into
push
adc
jecxz
icebp
incl
movsl
add
xor
pop
call
adc
xor
in
mov
cmp
leave
dec
or
int3
jg
mov
rcl
rcl
aam
mov
xlat
pop
mov
pushl
xor
add
cwtl
xchg
aaa
orl
xchg
xchg
jmp
cmpl
clc
outsl
jne
jg
ljmp
pushf
scas
push
fs
lods
mov
xchg
xchg
and
rclb
hlt
jle
popa
stc
mov
mov
ss
mov
sub
push
lds
aaa
ss
lcall
test
and
pop
aad
lcall
mov
xchg
jecxz
std
mov
pop
clc
daa
clc
sub
push
andl
sbb
in
inc
in
int
mov
jg
pop
call
mov
push
or
movb
or
inc
and
insb
inc
add
fmull
fldl
int
mov
loopne
iret
xchg
cs
push
out
sar
fcomi
xor
clc
testb
jge
xor
and
pushf
pushf
fdivrp
or
out
flds
fiaddl
push
aam
and
aad
stc
xlat
add
movsl
pushl
xor
movsb
add
mov
or
idiv
filds
mov
inc
dec
mov
sub
aam
sarl
mov
call
xchg
and
fwait
test
push
hlt
jg
ljmp
inc
in
inc
insb
inc
xchg
add
les
sbb
pop
outsb
fcomip
movl
xor
cmp
jbe
aam
lods
and
pop
adc
mov
rolb
cmp
notl
incl
fdivrl
mov
mov
inc
dec
scas
in
mov
pop
loopne
icebp
mov
fdivl
mov
jle
fcmovnu
mov
test
or
and
push
pop
cmc
pop
cld
das
clc
mov
ljmp
lock
mov
mov
cli
xchg
fs
inc
bound
call
incl
jb
push
mov
ds
pop
outsb
xor
imul
mov
aaa
ljmp
int
sbb
adc
cmc
jne
loope
call
cmp
sbb
insl
es
fistps
pop
and
dec
push
in
fldcw
inc
and
add
int
pcmpeqb
pop
sbb
pushf
popf
nop
fs
decl
imul
aaa
push
cltd
nop
addr16
frstor
dec
dec
enter
test
adc
and
sahf
dec
paddw
in
dec
push
fmuls
in
jbe
jbe
sahf
dec
fsubs
jbe
into
dec
adc
cmp
and
jg
mov
jb
cmpsl
js
pop
ret
pusha
and
pop
popa
pop
in
push
fdivrp
and
push
sar
decl
xchg
adc
push
loop
push
pop
lret
insb
dec
xor
dec
push
cli
or
clc
or
incl
aas
adc
test
adc
jmp
xchg
sub
mov
add
loop
or
mov
inc
je
jo
jg
ljmp
gs
xchg
sub
jae
lods
sbb
xor
xor
jg
mov
add
jnp
add
rclb
sti
fwait
add
pop
test
jmp
or
pop
or
mov
add
cmp
iret
add
rclb
stos
daa
lahf
fs
outsl
adc
cmpsl
dec
jns
push
push
sbb
inc
mov
pop
adc
clc
dec
xchg
mov
stc
dec
cli
dec
sti
inc
cld
and
xchg
sbb
or
xor
je
cmp
mov
fbstp
lea
pop
cmp
in
lcall
jg
jmp
loopne
xchg
stc
add
mov
stc
les
xor
arpl
je
outsl
outsb
cmp
or
mov
and
popf
jne
lret
or
cld
pushl
or
sub
mov
js
push
pop
hlt
and
das
std
outsl
pop
push
add
ljmp
push
pusha
jg
ror
out
dec
faddl
movsb
jae
push
jo
add
std
clc
idiv
lcall
xor
push
sbb
and
xor
add
xchg
push
int3
sbb
jbe
xor
into
aas
iret
popa
shlb
insb
clc
ljmp
aam
aad
fldt
xor
fnstenv
ficompl
mov
test
jnp
cmp
ljmp
ficomps
mov
or
xor
negb
fildl
and
fbld
cli
pop
jecxz
arpl
push
and
ffreep
call
shrl
nop
int3
dec
movzwl
mov
add
dec
test
test
call
lods
outsb
shll
mov
lods
scas
in
scas
adc
or
mov
mov
cwtl
jmp
fs
cmp
cmp
adc
xlat
outsb
inc
cmc
jo
fnsave
clc
inc
stc
push
std
incb
push
clc
push
gs
imul
or
decl
pop
nop
jae
adc
dec
pop
pop
adc
or
outsl
inc
gs
shll
inc
outsl
jne
push
dec
jb
and
je
jge
pop
shrl
incl
push
mov
mov
jg
ja
adcl
cmp
bound
ss
js
faddl
inc
mov
clc
push
pop
out
mov
clc
frstor
mov
test
jecxz
ss
jg
ss
mov
scas
sub
add
push
xor
cld
push
and
push
push
call
out
or
ja
fistpll
or
pop
test
je
dec
not
add
cmpsl
and
sub
dec
sbb
jmp
cmp
cmp
sbb
outsl
std
mov
outsl
je
sbb
leave
push
into
jbe
add
or
push
out
cmc
fcmovnu
and
call
jmp
push
sub
push
ficoms
add
ja
adc
pop
add
add
pushl
push
push
arpl
rcrb
mov
aas
add
lcall
or
mov
lods
pop
jae
xor
cmp
inc
gs
or
xor
push
cmp
sbb
or
cmp
arpl
or
push
xor
mov
cmp
pop
jae
movsb
sbb
xor
and
or
pop
jnp
fidivl
sbb
es
fistps
add
cmp
rcrl
call
fucomip
dec
sbb
ljmp
mov
or
outsl
std
addr16
and
sub
cmpsb
xorb
xor
pop
mov
mov
xor
vpaddusb
dec
pop
add
lea
jo
shrb
adc
cld
inc
adc
push
sbb
push
in
shl
pushl
nop
cwtl
fxch
sub
or
jo
jno
dec
push
push
jmp
pop
cli
push
xlat
in
aam
jbe
pop
repnz
xchg
fidivl
lods
bound
adc
jno
or
clc
lcall
adc
jno
cmp
insb
cs
int3
pop
jp
mov
gs
jge
push
cmp
jne
orb
in
inc
pushl
jns
xor
mov
jnp
sahf
lds
cli
hlt
sbb
xor
mov
in
or
mov
and
outsb
or
xchg
push
movl
jnp
lods
adc
push
sti
loope
sbb
push
sti
fcomps
xor
push
pop
loop
cld
jl
pop
xchg
inc
push
repz
imul
adc
decl
pop
cmpsl
jo
stos
dec
xor
and
sub
mov
pop
pop
mov
push
orl
push
push
pop
mov
lea
lock
flds
test
adc
pop
ljmp
add
sbb
into
nop
adcb
hlt
mov
or
mov
in
mov
mov
xlat
adc
fildl
nop
xchg
mov
cli
lret
or
mov
jecxz
push
jg
jge
cmp
call
fiaddl
push
mov
push
sbb
insl
addr16
call
sbb
mov
sub
aad
push
cmp
push
mov
sarl
xchg
clc
call
pop
cmp
iret
orl
pushf
and
mov
test
mov
push
inc
or
out
pop
lret
loopne
nop
lcall
xchg
sbb
cmp
fldt
je
jne
lds
hlt
pushl
mov
cmp
je
iret
jb
daa
adc
pop
ljmp
icebp
mov
out
push
call
mov
mov
dec
and
jo
outsl
or
or
cmovb
xchg
sbb
inc
sub
push
pushl
or
inc
fisttpll
shlb
shll
nop
sub
mov
xlat
aas
lods
aaa
push
imul
insl
or
jo
insb
cmp
shlb
xchg
and
adc
xor
into
popf
xchg
inc
or
es
jo
or
fwait
dec
mov
add
aad
lds
daa
or
or
test
push
sub
mov
push
mov
push
enter
mov
in
sbb
loop
fwait
incl
jg
ljmp
pop
std
and
push
xchg
insb
in
incb
jns
insl
popa
cmp
outsb
add
push
outsl
out
xchg
mov
mov
jg
xchg
jg
xchg
push
xchg
test
fbld
test
xor
inc
or
jg
mov
jo
add
gs
aad
cmp
loopne
sti
xchg
add
push
and
loop
fs
loopne
add
pop
pop
lods
push
mov
outsl
je
fcmovnu
cli
mov
es
sub
int
dec
mov
cld
jmp
mov
rol
xlat
or
roll
or
lcall
mov
ror
xchg
outsb
cmp
call
add
jg
sbb
pushf
mov
add
add
push
lret
sbb
pusha
cmc
loopne
push
rorb
out
ljmp
icebp
pusha
mov
pop
mov
sbb
pop
sbb
xchg
or
js
out
jle
inc
adc
out
ja
insl
cmp
aaa
incl
std
push
or
jg
into
add
cmp
jb
add
rcl
in
pop
and
jmp
enter
in
jne
aas
addr16
je
jo
addr16
nop
pop
in
mov
mov
pop
push
fsincos
mov
fdivr
or
dec
sbb
sub
das
stc
cmp
xchg
cmp
and
test
and
mov
ret
jge
mov
add
sti
lahf
push
pop
push
jl
adc
pop
pop
out
dec
cmp
test
jne
push
pop
dec
std
call
mov
dec
dec
sub
mov
add
ljmp
or
push
mov
fisttps
adcb
int3
pop
mov
aam
mov
nop
faddl
push
sbb
mov
fistps
jg
mov
and
fmuls
push
shrl
and
and
pop
loopne
loopne
mov
pop
lcall
cmp
cmp
aaa
jg
insl
cmp
lcall
cmp
inc
inc
push
inc
movsl
or
lcall
jb
gs
jbe
cmp
inc
inc
ds
jbe
jmpw
dec
outsb
dec
mov
pop
clc
or
fimuls
sbb
adc
leave
insb
mov
pop
xor
cld
or
popf
mov
push
imul
incl
aaa
icebp
inc
jo
divb
push
aaa
insl
jae
insb
popa
mov
sub
pop
mov
xor
xor
sub
test
sbb
and
decl
push
and
push
and
sbb
into
sti
and
mov
cmp
sub
sub
pop
xchg
xchg
pop
sub
xchg
test
cs
push
das
xor
inc
mov
dec
pop
xor
lcall
pop
xor
xor
in
inc
xor
inc
out
push
lock
test
jmp
xchg
lods
pop
icebp
repnz
add
mov
cmp
or
adc
outsl
mov
or
in
fs
push
movaps
in
adc
adc
xchg
adc
adc
pop
cmp
mov
mov
sub
mov
cmp
sbb
test
sbb
test
mov
add
repnz
mov
xor
ds
adc
bound
mov
pop
ret
loop
adc
dec
loopne
nop
xchg
xchg
xchg
xchg
xchg
mov
xchg
int3
lock
ljmp
mov
fwait
js
adc
xor
push
das
icebp
mov
xchg
push
adc
nop
xlat
stos
cltd
call
std
fstpt
sahf
test
pusha
inc
popa
in
dec
imul
xchg
pushl
addr16
push
imul
insb
insl
xor
daa
pop
ds
jae
xor
cmp
loopne
loope
push
push
loop
hlt
lods
mov
cs
cmp
shll
ret
push
mov
or
das
cld
movsl
push
out
in
lock
xor
imul
pop
popa
insb
push
jne
push
pop
jb
jns
decl
in
jl
mov
mov
inc
pop
push
inc
dec
dec
push
addr16
jo
push
push
scas
push
push
pushf
sub
fisttpll
fs
xor
push
addr16
push
push
push
pop
sbb
jbe
stos
inc
lcall
pop
mov
mov
pop
lock
daa
ds
sub
clc
cmp
incl
nop
or
daa
add
scas
pop
repz
das
and
cltd
mov
pusha
incb
loop
rcrl
outsb
cmp
push
hlt
adc
xlat
dec
clc
fiaddl
loope
sub
xchg
push
cmp
add
mov
leave
divb
call
and
popa
in
dec
insl
jne
jne
adc
xor
sbb
inc
jmp
in
sahf
les
jne
mov
inc
mov
int
sbb
sbb
mov
pop
sub
sar
push
pop
arpl
and
jg
mov
call
rcl
xor
in
stos
sub
incl
cmp
jne
shll
js
mov
sub
std
push
mov
call
mov
int
fs
xchg
push
sub
nop
pop
loopne
inc
mov
xchg
fsts
shrb
push
push
popf
pop
ret
sub
test
insb
push
call
ljmp
and
ja
mov
jecxz
nopl
xchg
add
mov
add
or
fsubrs
pop
pushl
clc
push
fs
mov
jg
iret
dec
mov
cmp
hlt
test
jmp
ja
jo
cmpl
mov
mov
adc
adc
fdiv
icebp
add
ljmp
std
movsb
push
test
dec
mov
inc
movsb
mov
loopne
push
adc
mov
hlt
pushl
ja
cmp
pop
out
bound
jb
dec
dec
sbb
jne
pop
ljmp
decl
les
jne
movsl
push
jne
push
lcall
dec
outsl
icebp
call
cmp
or
scas
inc
call
mov
pop
pushl
mov
mov
xor
movsb
stos
call
inc
jl
sub
roll
or
cmp
shlb
mov
add
lds
clc
ja
push
mov
add
mov
repnz
cmc
or
jp
cli
mov
dec
xchg
in
mov
jb
pop
sub
pop
push
insl
cmpsl
outsb
lock
mov
xor
and
xchg
mov
sub
cmpsb
inc
cltd
rcrb
sarb
mov
or
test
clc
push
lcall
arpl
fdivs
ret
push
call
hlt
push
mov
arpl
sbb
mov
mov
xor
xchg
orb
inc
jmp
pop
popa
xchg
pop
in
jg
push
shrl
cmp
and
addr16
cld
lock
mov
and
ljmp
sbb
and
mov
or
mov
stc
in
stc
stc
dec
iret
xorb
add
in
cmpsl
and
nop
stc
ja
stc
enter
adc
sti
in
sti
test
cld
incl
cmc
pop
hlt
insl
add
out
push
cltd
lea
pushf
popl
mov
xchg
mov
mulb
loope
pop
adc
pusha
xor
aaa
jnp
jo
sbb
jg
popa
stos
popa
pop
fwait
lods
dec
enter
inc
mov
mov
movsb
xor
decl
cld
call
shrl
adc
push
add
mov
xchg
jge
sbb
jne
jg
push
sbb
jo
mov
mov
fwait
sub
das
repz
hlt
js
stc
sbb
test
fadd
stos
fucomip
outsb
shlb
mov
xchg
adcb
jae
loopne
and
dec
popa
sub
hlt
adc
movsb
sub
jge
push
push
push
xchg
add
push
push
jb
pop
mov
pop
rcrb
inc
popf
jl
adc
inc
cmpsb
vprotq
and
pop
adc
repz
fadds
in
push
mov
inc
fdivr
lcall
je
pop
sbb
in
insb
cmp
loopne
pop
or
cmp
pop
cmpsb
pusha
cmp
push
mov
sti
xor
push
add
mov
add
rol
je
imul
sub
push
cld
gs
jmp
mov
mov
fdivl
popa
outsb
push
or
mov
popfw
mov
sub
cs
stos
imul
jns
jle
flds
push
inc
jnp
lret
insl
inc
dec
mov
mov
scas
or
xor
and
mov
cmc
inc
addr16
mov
xchg
or
popf
push
inc
mov
lock
aam
gs
adc
sub
imul
decb
shrb
adc
in
push
adc
lcall
jns
lock
enter
dec
cli
and
leave
cmp
cwtl
xchg
popa
pushl
cli
aas
pop
xor
xor
fildl
mov
xor
into
enter
clc
lcall
dec
rcl
cltd
in
xor
xor
push
sbb
inc
filds
icebp
xchg
pusha
adc
pop
fists
add
ss
outsl
lock
mov
xorb
sub
push
pop
mov
mov
jne
ss
loopne
pushf
divb
inc
push
mov
sbbb
push
cmp
mov
pop
cld
adc
and
or
sub
xor
mov
out
ljmp
xor
adc
insb
xchg
mov
addr16
callw
aas
pop
xor
cltd
mov
idiv
inc
jle
movsb
sbb
cmp
or
and
push
dec
xor
fldl
lds
jge
inc
cmp
jl
negb
pop
sub
shl
mov
incl
mov
aad
jns
sbb
repnz
mov
aas
rcrb
lods
in
adc
or
test
dec
lcall
jmp
cmp
ret
push
sti
mov
call
push
icebp
mov
ud0
incl
jae
out
xor
pushw
and
cltd
icebp
imul
clc
add
addr16
or
add
push
jl
sbb
and
pop
push
cld
clc
push
or
xor
adc
sub
dec
pop
jb
stos
xchg
pop
clc
xor
add
mov
icebp
and
inc
mov
gs
mov
lods
cmp
or
or
ljmp
inc
add
add
in
pop
pop
xor
xchg
add
sbb
sub
push
xor
adcb
orl
nop
dec
outsl
jp
xchg
stos
insb
insb
mov
push
dec
mov
ja
or
das
mov
adc
sub
out
xor
xor
scas
mov
pop
fstl
inc
xor
sarl
cli
movsl
dec
cld
rolb
arpl
adc
aad
insl
mov
loope
cmp
je
xor
jg
std
sbb
add
pop
mov
mov
imul
loopne
jnp
in
pop
lcall
dec
xor
test
xor
movsl
inc
mov
pop
movsb
enter
fsub
mov
jae
mov
in
shlb
incb
inc
es
mov
sub
aas
nop
fstpt
orl
dec
mov
addb
dec
sub
push
mov
jmp
mov
adc
clc
push
loopne
and
ljmp
and
outsl
cmp
push
lods
stos
sbb
aaa
dec
mov
nop
cmpsl
lcall
das
bound
fistpll
adc
xchg
nop
mov
mov
leave
mov
push
xor
fdivs
fdivs
fcmovne
repnz
jb
mov
int3
test
push
fbld
jns
adc
mov
lock
pop
enter
incb
push
leave
add
hlt
outsb
or
dec
imul
or
pushl
mov
push
and
adc
or
das
dec
jae
lret
or
loop
jo
push
xchg
lods
jmp
sar
mov
enter
inc
arpl
pop
ds
sbb
adc
and
push
call
incl
mov
push
mov
dec
push
outsl
call
mov
sub
or
add
pop
add
mov
sbb
out
xchg
decl
xor
jg
inc
and
fidivrs
push
lods
jne
ret
sub
aam
add
data16
pop
mov
push
add
inc
incl
xchg
lcall
mov
test
les
testb
shlb
sbb
sahf
jl
adc
xor
jmp
loopne
sar
movsl
or
fisttpl
add
jbe
pop
arpl
out
test
fwait
or
je
in
xor
or
push
popa
je
es
je
loopne
pop
insl
outsb
sbb
add
pushl
insl
or
call
xchg
ljmp
cld
imul
add
sub
cmp
loope
mov
cmp
and
mov
or
mov
add
xor
push
add
pop
adc
xor
aam
add
jg
xchg
jae
or
cwtl
lret
and
dec
mov
push
je
or
test
pusha
pop
jle
lcall
das
hlt
or
push
and
xor
cmp
or
push
nop
push
sbb
outsb
dec
ljmp
scas
shrb
and
pop
or
jl
jmp
jge
incl
pop
adc
sub
into
mov
stos
push
cltd
push
add
incl
or
pop
aad
jge
inc
inc
iret
sub
cmp
int3
popa
out
pop
hlt
dec
sub
or
xlat
sbb
xchg
inc
outsb
mov
cmp
nop
push
ja
sub
sub
mov
add
incl
das
add
bound
rolb
dec
mov
add
fldpi
or
leave
pop
call
cmp
pop
pop
xor
cmp
ret
sub
xchg
mov
ds
lock
mov
pusha
jl
xor
lret
push
imul
mov
cli
inc
ljmp
dec
arpl
fiaddl
adc
push
inc
std
call
sbb
lea
frstor
jne
inc
mov
push
lods
insb
jnp
fdivrs
jle
call
push
lods
movb
and
ret
incl
jle
cli
lea
add
push
jmp
inc
add
sahf
push
fidivrl
jl
call
test
rcrb
mov
enter
adc
lret
mov
repz
mov
std
lcall
nop
in
push
stos
or
sbb
jbe
cli
and
and
lcall
ljmp
insl
or
and
lods
push
addr16
jo
adc
dec
call
imul
nop
pop
sbb
inc
lahf
rorl
or
in
or
lret
push
jle
test
fprem
movsl
pushl
and
jns
lea
or
or
in
out
or
cmp
mov
shlb
cmp
sub
test
cmp
ljmp
cld
xchg
adc
mov
jmp
push
jae
sbb
push
xor
push
dec
hlt
in
mov
call
mov
or
mov
js
push
adc
cli
lea
mov
fimull
mov
lret
rcl
lcall
divb
pushf
pop
lret
loop
jno
push
sbbb
nop
mov
adc
push
sti
inc
sti
cmc
pop
add
aas
ss
sbb
xor
aam
xlat
popa
xorl
push
test
fldl
dec
outsl
cld
or
jb
inc
gs
cwtl
push
je
imul
pop
call
and
negl
sub
dec
xchg
std
xor
sub
call
pushl
stos
pop
mov
fistl
shll
or
jg
mov
fs
or
xor
rol
push
lcall
mov
ret
cmpw
lret
mov
add
ljmp
push
inc
add
mov
inc
cwtl
loope
pop
arpl
mov
dec
std
je
std
sti
push
mov
cmp
cmp
je
outsl
call
jl
je
cmp
jbe
add
inc
mov
in
in
xor
outsl
fucom
outsb
mov
sbb
fistl
arpl
ljmp
out
cmp
jb
sub
je
dec
insb
fldl
je
dec
dec
mov
sti
in
xchg
add
jmp
mov
or
jmp
push
sbb
ljmp
cmp
test
cmpb
testb
cli
jne
orl
lea
lods
jae
push
call
add
insb
cltd
cmp
std
cmpsl
adc
push
out
in
in
aaa
clc
sub
inc
jb
mov
push
es
mov
or
adc
or
ljmp
pop
shll
adc
clc
incl
xchg
sub
push
pop
loopne
add
ret
push
mov
in
decl
in
sub
fucomip
idivb
ljmp
leave
mov
pop
mov
sbb
lds
cmc
inc
dec
inc
addl
pushl
fldenv
and
cmp
repz
dec
pusha
icebp
lock
decl
call
addr16
fists
out
out
sub
clc
fsubl
dec
mov
stos
sahf
inc
xchg
adc
push
fildl
das
sbb
push
andb
push
push
mov
je
repz
inc
push
cmc
aaa
imul
cmp
sbb
mov
loop
fiadds
xor
xchg
flds
lods
ljmp
jno
sbb
lods
mov
mov
mov
pop
rcrb
cmp
adc
ret
inc
or
ljmp
test
ret
xchg
add
or
mov
pushl
sar
push
and
or
das
shlb
pop
jmp
ret
add
pop
ljmp
push
xor
push
inc
mov
inc
sub
in
pusha
mov
mov
add
out
or
cmp
mov
filds
iret
je
daa
inc
push
jmp
xor
lods
jg
addb
ror
pusha
sbb
cmp
cmp
mov
add
mov
jo
dec
les
sub
jg
add
push
add
insl
mov
les
loope
stc
pop
scas
lock
add
pop
cld
dec
popf
lock
int3
sbb
add
fs
sar
mov
ss
outsb
mov
mov
adc
cmp
jle
or
mov
sbb
adc
cmp
stc
lcall
insb
lock
mov
imull
lock
adc
pop
sbb
or
or
clc
out
add
incl
es
or
mov
orl
cmp
and
mov
mov
imull
in
xchg
ss
dec
xchg
add
wbinvd
jno
subb
das
jb
cs
sbb
insl
xchg
decb
pop
cli
leave
add
sarb
mov
insl
jmp
or
inc
sbb
add
and
data16
add
sbb
and
pop
or
dec
pop
mov
or
js
mov
mov
nop
or
xor
data16
sbb
mov
push
and
mov
cmp
cltd
and
sub
sbb
subb
sbb
jl
lcall
mov
movsb
cmp
sbb
orl
push
je
cmpsl
stos
ret
clc
not
enter
inc
dec
jmp
sbb
addr16
call
jp
sbb
mov
xor
fistl
in
xor
fwait
sarl
inc
mov
pop
cld
enter
neg
push
call
shr
insb
inc
jle
mov
leave
cmp
dec
cmp
lods
lcall
pop
aam
nop
mov
xor
inc
aam
xor
imul
incl
sbb
adc
jnp
imul
decl
popf
mov
xor
sub
call
push
and
call
scas
pusha
push
mov
push
ss
rcr
sub
jno
cmp
imul
push
mov
in
xor
pop
sub
ret
faddp
enter
sub
xchg
shrl
cmp
push
loope
sbb
lret
pop
imul
or
jo
inc
mov
cmp
incl
add
xor
jmp
pop
push
cmp
mov
pop
clc
jg
cmp
ret
orb
loope
pop
adc
dec
lods
incl
fiaddl
adc
rorb
pop
pop
rcr
mov
xor
jmp
fisubl
fcomp
sbb
jg
imul
add
dec
inc
andl
push
roll
incl
ljmp
adc
add
add
incl
dec
adc
sub
loope
push
mov
shr
lea
and
lcall
rolb
mov
shr
mov
decl
dec
jle
mov
push
inc
lcall
repz
bound
jg
cmp
dec
jmp
pop
lods
sti
mov
push
rorb
rolb
or
sar
mov
or
adc
daa
inc
or
dec
dec
daa
pop
push
jg
call
jne
pop
xlat
or
adc
pop
jbe
pop
cli
incl
inc
mov
mov
sbb
not
and
push
shlb
outsl
jl
decl
incb
adc
mov
movsb
push
mov
shr
aaa
adc
jo
jl
fbld
in
mov
and
jg
push
and
testl
mov
scas
shr
push
ljmp
push
js
pop
pop
ds
aam
or
outsl
shrb
in
fwait
inc
fisubs
jmp
pushf
cmp
add
fcmovnb
jo
ret
imul
out
xadd
adc
pop
inc
cs
ljmp
lock
and
addr16
lret
cmp
add
repz
sub
mov
fwait
or
repz
jne
ret
daa
pop
jg
push
insb
sub
sbb
jg
ljmp
mov
push
inc
mov
mov
push
cmpsl
lods
ret
jle
negl
decl
push
or
shlb
adcb
movb
mov
into
adc
cmp
or
xlat
sub
pop
sub
decl
fidivrl
adc
call
scas
roll
mov
sub
pushl
sbbl
lods
rcr
das
xor
add
add
xor
xchg
out
xor
add
sbb
push
jne
in
mov
fcomp
aad
mov
cwtl
subb
jecxz
frstor
int3
sbb
cld
das
pusha
adc
mov
das
pop
scas
testl
in
jg
in
out
cmpsb
pop
les
andb
mov
loop
mov
in
mov
sub
incl
sub
fcomp
sub
ret
or
fdivrs
pop
ja
loop
mov
xchg
pop
pushl
les
adc
repz
shl
popf
aaa
lret
or
xchg
cld
mov
stos
lods
enter
stos
cmp
out
aad
cmp
sbb
incl
aaa
das
push
mov
cmpsb
cwtl
jo,pt
cmpsb
cmp
outsb
or
jg
lcall
pop
xchg
or
and
dec
or
popa
adc
add
insl
cmp
and
loopne
ljmp
loopne
pop
loop
xlat
mov
bound
lods
movsl
sbb
jmp
add
and
iret
das
cld
push
jg
jge
dec
cmp
inc
rclb
sbb
lcall
sub
push
and
clc
jb
repz
pop
pop
es
adc
cmpb
push
repnz
shll
and
or
insl
jae
insb
out
call
insl
int
lods
mov
mov
adc
call
sbb
incl
fdivs
mov
pusha
adc
inc
add
rorb
lcall
imul
pop
and
clc
cmp
jge
cli
push
mov
mov
enter
jg
jecxz
xchg
cmpsl
add
fbstp
imul
or
test
mov
inc
es
and
mov
in
fistpll
filds
inc
fimuls
cwtd
xlat
sbb
in
call
pop
cmp
.byte
fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
inc
sbb
mov
fucomi
ds
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
and
xor
push
and
add
pusha
push
int3
int
sbb
dec
cmp
push
xor
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
jge
pop
fildl
shr
jmp
or
xchg
mov
stos
pop
pop
or
insb
in
fsts
fnstenv
mov
push
stos
hlt
andl
adc
sti
sub
mov
or
add
cmp
jne
incl
inc
sbb
or
jmp
xor
mov
pop
mov
add
leave
pop
lahf
std
mov
jo
cmpb
clc
inc
inc
jmp
adc
mov
mov
notl
push
mov
mov
inc
inc
test
add
dec
out
jne
pop
xor
mov
xor
cmp
mov
and
xlat
inc
imul
lcall
fs
imul
inc
movsb
imul
dec
pop
aaa
idiv
inc
pop
stc
cli
outsl
xchg
dec
bound
sub
imul
adc
pop
push
and
clc
push
add
mov
pop
adc
leave
add
addl
adc
xchg
adc
imul
outsb
pop
movsb
jns
repz
imul
fdivs
outsl
adc
xor
inc
adc
push
pop
jl
out
adc
pusha
insb
ljmp
jae
or
lock
push
push
jg
shrb
mov
add
mov
out
jo
js
inc
jl
incl
idivl
jg
jae
mov
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
cmp
add
push
push
fstpt
or
mov
cmpl
push
or
jb
jmp
mov
mov
lea
movzwl
inc
sub
sti
fistpl
orl
cmp
outsl
outsl
fisttpl
popf
mov
inc
je
cmp
and
and
hlt
movsl
clts
pop
cmc
in
sub
and
add
xor
and
int3
push
bound
dec
andb
and
sbb
mov
call
push
sahf
adc
outsb
mov
test
je
xor
sbb
add
pop
stos
push
in
insl
mov
or
cmp
fisttpll
mov
neg
lea
jne
cmpb
aaa
mov
adc
jge
sub
cli
aas
mov
inc
sub
lret
xchg
mov
or
pop
pop
call
out
inc
jmp
xor
dec
sbb
mov
popf
mov
add
inc
ss
pop
jb
adc
cmpsb
sbb
iret
imul
mov
insb
sti
xlat
insb
fcom
ror
dec
sub
shlb
gs
pop
outsb
fwait
cmpsb
rol
outsb
or
dec
int
mov
js
enter
dec
pop
pop
push
push
shrd
mov
scas
xchg
scas
mov
mov
cmpsb
imul
mov
inc
mov
lcall
gs
lcall
cltd
movsb
insl
sarl
out
cs
test
add
call
push
mov
lcall
aaa
lea
mov
mov
mov
adc
adc
dec
jg
jne
mov
push
lcall
in
sbb
add
test
push
xor
push
push
mov
and
inc
mov
hlt
dec
mov
test
cmpsb
daa
mov
dec
or
fnstcw
push
xor
int3
add
shlb
push
push
shlb
pop
cs
lret
shlb
jns
dec
aad
callw
mov
ficompl
mov
push
inc
jecxz
mov
in
inc
out
out
call
mov
jmp
in
ss
xchg
dec
xchg
inc
cmpb
fcmovbe
cmp
cmp
push
leave
in
jo
pop
sahf
cwtl
mov
ds
mov
mov
add
push
das
rcrb
call
rcrl
jecxz
ja
ret
les
lods
pop
add
fwait
cmpsb
jmp
mov
test
out
cmp
hlt
pop
in
dec
mov
jbe
nop
dec
sarl
xor
fs
mov
or
fildl
inc
sub
and
js
jge
or
in
mov
inc
cmp
jb
jmp
cs
add
adc
andl
fbld
test
js
push
inc
jbe
daa
out
test
adc
fsubl
cmpsb
imul
imul
imul
push
je
push
pop
imul
outsl
ja
pop
sbb
insb
dec
mov
lcall
ret
mov
ret
les
lds
inc
imul
enter
lret
lret
lods
cmpsb
imul
imul
movsb
imul
rcrl
adc
dec
gs
xorb
js
insl
push
lcall
icebp
repnz
cmpsb
imul
mov
cltd
in
lock
mov
or
mov
ret
sbb
lods
iret
cmp
or
es
sti
loopne
ds
enter
inc
ret
sub
clc
pop
insl
xchg
lret
int
into
stc
inc
cli
imul
and
mov
mov
int
test
fistpl
mov
adc
sahf
dec
cmp
sti
or
sub
fisttpl
out
xor
xor
push
adc
and
cmp
pushf
in
sbb
shr
cs
test
dec
fs
popa
mov
arpl
fnsave
lock
mov
mov
fidivl
or
xor
jno
sbb
insb
inc
jo
in
data16
arpl
pop
pop
mov
pushw
dec
mov
mov
adc
inc
push
std
inc
outsl
push
dec
inc
shll
jo
inc
mov
in
shll
jp
test
or
std
es
xor
push
push
adc
mov
orl
imul
sti
pop
jae
imul
xor
xchg
insl
inc
gs
dec
shll
ja
daa
or
xor
imul
mov
je
iret
mov
ret
mov
in
dec
push
or
adc
sbb
insl
testl
loopne
mov
sbb
and
push
push
pop
das
je
jbe
pop
test
add
dec
sub
xchg
cwtl
lods
call
pop
repnz
mov
adc
add
xchg
out
adc
adc
aad
in
push
mov
popa
je
inc
arpl
outsl
cs
lret
in
jo
jns
inc
insb
add
mov
fbld
loope
xlat
sbb
push
adc
adc
xlat
andb
pop
pop
cmp
inc
push
or
adc
adc
sbb
sbb
or
add
and
fdivrs
mov
add
loope
xchg
lock
fwait
call
adc
adc
cmp
cmc
pop
shlb
push
xchg
fldt
sbb
stc
jmp
sub
out
out
push
lock
pop
push
mov
cld
sub
notb
adc
or
push
into
fisttpl
out
adc
mov
mov
punpckhdq
pop
add
pop
push
fs
lea
pushf
add
push
mov
movsb
jmp
imul
inc
inc
push
fs
jle
or
push
scas
cld
ja
loopne
push
sahf
movsl
rclb
mov
je
insl
test
es
imul
das
sbb
jbe
xorl
push
and
imul
jb
jae
mov
mov
imul
push
mov
nop
cmpsb
imul
imul
mov
jae
jecxz
pop
movsb
imul
dec
shll
sti
cld
sub
mov
cmpsb
dec
outsl
arpl
lret
leave
mov
outsl
jne
fs
inc
lcall
gs
push
pop
movsb
imul
inc
cmpl
mov
or
xor
xor
lock
loopne
js
mov
test
jbe
adc
punpckhdq
pop
fcmovnb
lea
test
add
insb
push
cmp
push
lds
int3
adc
mov
inc
movsl
cmpb
pusha
test
sbb
test
adc
mov
xor
and
and
int3
cmp
pop
bound
lea
or
js
cmpsl
imul
pushf
pushf
shl
jle
pop
sbb
push
adc
pop
xchg
sub
inc
nop
das
push
xchg
ret
or
inc
lcall
push
push
add
rcl
in
out
je
xorl
daa
mov
push
nop
and
ror
jbe
or
sbb
add
dec
add
adc
add
loope
inc
mov
movsb
jmp
mov
xchg
sub
push
pop
pop
lock
or
out
mov
enter
push
lock
ljmp
imul
cltd
lods
stc
leave
xor
sub
push
pop
sub
sub
pop
call
push
loopne
cmpl
adc
inc
jae
cmp
cltd
sub
in
hlt
pop
pusha
enter
cmp
ja
jb
add
jp
mov
fldt
neg
pop
inc
push
xor
mull
or
hlt
fdivl
adc
adc
xlat
enter
out
sbb
inc
add
push
int3
ljmp
push
xchg
push
xchg
sarb
adc
fimuls
xchg
jg
pop
mov
sub
inc
insl
pop
push
aas
dec
popa
jne
pop
cs
arpl
push
mov
int
lock
repnz
rol
jb
shll
rorb
shlb
jb
imul
inc
imul
fcoms
movsb
js
add
aaa
add
add
hlt
push
push
rolb
adc
xchg
cld
add
clc
add
movl
and
orl
mov
int3
stc
mov
push
ret
int
lds
push
inc
xlat
unpckhps
das
cltd
fdivr
frndint
inc
ds
in
cli
sar
shl
das
in
shl
cmc
mov
outsb
repz
leave
clc
gs
pop
fstl
into
add
pop
mov
shll
jns
add
xor
imul
dec
ret
aad
cmpsl
test
mov
outsb
jp
push
jge
movsl
push
scas
rcr
shrl
add
ja
shll
bound
shlb
push
push
push
clc
add
je
push
sbb
pop
push
pop
fs
mov
std
xor
push
stos
xor
dec
mov
les
mov
cmp
aaa
sti
jmp
repz
or
pop
inc
pop
iret
subb
sbb
ds
and
add
xchg
xchg
std
sar
int3
stc
notb
divb
and
cmp
dec
enter
iret
sub
icebp
adc
push
add
jnp
pop
repnz
mov
ret
sub
fs
pop
adc
adc
cmpsl
add
lock
or
add
mov
cmc
push
gs
xchg
dec
testl
pop
xchg
inc
je
jb
bound
gs
mov
cmp
push
je
imulb
xchg
gs
insb
gs
je
gs
xchg
gs
bound
ror
stos
xchg
gs
ret
pop
and
lock
push
fwait
sbb
fiadds
add
aam
push
xchg
inc
aaa
hlt
aam
jns
sti
das
enter
rcl
or
and
jb
dec
adc
sbbl
inc
or
cmp
inc
test
js
fdivr
test
and
cmp
inc
xchg
cmpsb
cltd
ljmp
and
test
in
pushf
dec
pop
jb
cld
fdivr
fdivr
jb
pop
test
cld
fdivr
in
lods
push
cmpl
mov
xchg
sbb
jae
decb
pop
or
std
add
rcrb
push
stos
and
jae
je
pop
fcmovnbe
insl
inc
push
loope
addr16
sub
sarl
push
jnp
or
hlt
xchg
adc
pop
mov
fucomp
or
negb
push
push
cmpsb
outsb
notl
push
push
or
mov
mov
mov
sbb
ljmp
xchg
sbb
xor
cmp
xchg
jl
or
pushf
pusha
leave
pop
notb
cmp
pop
fcmovnu
ljmp
nop
or
mov
cmp
andb
hlt
adc
mov
subb
xor
sbb
or
fmull
adc
popa
out
xor
adc
adcb
inc
dec
pusha
xor
sbb
jecxz
xor
jmp
or
mov
mov
or
or
lods
sbb
xchg
cmp
testl
push
add
adc
mov
cmp
inc
mov
mov
mov
clc
add
push
sub
jl
je
mov
cmc
dec
ss
sbb
xchg
cmp
cmpsb
sub
out
pop
sbb
push
es
add
sub
cmp
in
push
in
test
push
sbb
andb
pushf
pop
ret
rcll
push
js
sub
jp
std
dec
dec
enter
std
jge
mov
int3
jl
add
gs
shl
insb
fs
jne
je
lods
loope
sbb
push
enter
stc
or
cld
push
leave
push
cmp
lea
sbb
and
pop
inc
lcall
inc
bnd
iret
push
test
jl
pusha
lcall
gs
std
add
imul
xchg
or
mov
je
cs
mov
clc
mov
arpl
mov
outsb
mov
lea
add
xchg
outsl
nop
xchg
xchg
or
fwait
mov
xchg
xchg
xchg
jns
fs
fwait
pushf
insb
sub
mov
cmp
jmp
insl
andl
or
sub
mov
and
and
jmp
jns
pop
lods
popa
scas
add
cmp
and
andb
fdivs
mov
iret
fcoml
mov
or
pop
test
fs
scas
out
lock
imul
push
loopne
das
xor
icebp
add
push
push
clc
faddl
mov
add
in
mov
adc
or
gs
sub
jo
clc
push
shll
push
push
in
out
insb
push
or
fsubs
mov
add
push
push
push
or
mov
lret
push
js
or
gs
jne
fldenv
inc
fcmove
int
push
les
dec
hlt
push
push
lds
cmp
xchg
jmp
lock
pop
mov
iret
add
js
sbb
jne
push
ds
push
ret
push
lock
push
xor
cmp
add
cmp
nop
dec
ret
stos
rclb
jecxz
cmpsb
incl
mov
inc
or
insl
pop
jnp
jb
sbb
dec
pop
push
adc
push
rcl
dec
out
sarb
icebp
pop
jbe
mov
mov
sbb
xor
or
add
xor
xor
or
mov
xor
inc
or
div
imul
ret
fldl
push
dec
xor
mov
jmp
push
jne
jo
mov
mov
push
or
jnp
ja
jnp
and
sbb
or
xor
and
cmp
fsubl
pop
xor
inc
shlb
movzwl
cmp
jl
pop
nop
sahf
daa
dec
or
xchg
filds
dec
inc
mov
add
int3
sbb
enter
fcoms
or
cltd
imul
jo
push
push
negl
jl
cltd
sbbl
dec
sbb
pushl
into
push
adc
adcb
adcl
sbb
cld
sbb
data16
cmp
js
or
shr
jbe
or
out
sub
jne
shlb
clc
pop
sub
pop
loope
and
movl
das
sbb
fisttpll
pop
sahf
mov
push
sub
add
cmp
incl
gs
fisttpll
push
inc
sub
fmuls
mov
dec
mov
push
push
in
shufps
mov
loop
jmp
jae
es
js
dec
lods
pop
pop
loop
push
iret
mov
sub
inc
mov
dec
outsl
lock
sbb
ds
push
das
les
or
sbb
sbb
push
push
mov
add
ret
mov
or
enter
sub
and
test
lea
loopne
dec
hlt
aas
mov
decl
inc
add
cmp
jl
add
sub
mov
lods
sarl
cltd
lea
aam
dec
dec
clc
mov
pusha
lock
sti
mov
push
sub
rol
test
sub
adc
pop
xchg
mov
test
sbb
inc
or
ss
pop
lea
mov
mov
daa
push
sahf
subb
push
lea
fsubrl
push
int
rcr
sbb
int
cmp
add
mov
adc
push
push
or
incl
mov
mov
mov
daa
pop
cmp
outsl
out
out
clc
sbbl
test
sub
adc
cli
jl
mov
sbb
inc
movsb
mov
mov
xchg
loopne
push
test
push
inc
mov
inc
call
adc
inc
add
jmp
push
sub
push
leave
push
push
xchg
ljmp
dec
das
es
push
mov
mov
addb
fisttpll
insb
add
push
adc
movsl
js
ret
and
xor
orl
fidivl
jmp
push
lret
lds
sub
fisttpl
jmp
fstp
sbb
jne
sbb
pop
cmp
pop
call
adc
push
movsl
add
pop
int3
cmp
sub
xor
push
cmp
outsb
adc
lds
add
lods
adc
fdivs
lret
jne
dec
mov
mov
mov
push
call
sbb
jae
mov
adc
cmpw
jne
fwait
or
sub
js
loopne
or
push
in
jbe
andl
and
and
dec
add
push
pushf
jnp
jb
adc
sub
inc
adc
xor
ficoml
insl
lods
push
test
dec
sbb
jne
out
inc
dec
dec
sbb
push
sub
mov
gs
dec
mov
mov
xchg
ret
push
adc
add
pop
shrb
xor
test
stc
lea
sbb
je
inc
mov
shlb
and
mov
inc
adc
roll
aad
rcrl
xor
icebp
push
adc
mov
or
lods
xchg
int
add
mov
or
sti
inc
lock
mov
xlat
inc
enter
lods
adcl
add
addr16
pop
lock
adc
outsb
xor
xchg
fmuls
inc
fsubrs
ja
jnp
jne
mov
pusha
sub
xchg
xor
sub
or
test
add
sbb
push
ret
adc
push
sbb
lods
out
xchg
gs
cmp
addr16
test
jbe
push
mov
gs
jecxz
fsubrs
setnp
mov
pop
inc
jnp
data16
adc
loopne
in
outsb
pop
mov
out
add
dec
mov
add
adc
xchg
pop
lcall
int3
not
or
insb
mov
add
xor
pop
js
insl
lock
cmp
push
push
and
mov
loopne
cltd
and
orl
pusha
out
xor
adc
adc
and
movb
mov
sub
sub
mov
pushl
mov
rorb
and
inc
push
scas
cmp
insl
mov
cmpl
jne
shr
add
add
jb
call
add
jl
push
xor
add
xor
je
imul
jns
ja
dec
xchg
andb
mov
inc
outsl
jns
push
or
lock
lret
and
jae
mov
test
xchg
mov
cli
enter
mov
cltd
int
gs
xchg
and
inc
insb
insb
shlb
popa
arpl
pushf
inc
pop
mov
jecxz
popa
addr16
nop
mov
xchg
sbb
sti
add
sbb
lods
mov
popf
stos
stos
push
iret
arpl
mov
pushf
cs
pop
fnstsw
add
pop
idiv
add
mov
push
lock
inc
add
pop
cmp
and
andl
mov
add
mov
ljmp
icebp
inc
inc
fisttpll
xchg
pop
repnz
push
nop
inc
adc
ljmp
fidivs
inc
lock
adc
add
inc
mov
lret
mov
jo
inc
imul
outsl
pusha
nop
cmpsb
imul
in
movsb
adc
mov
pop
push
push
lods
xchg
aam
sbb
adc
sbb
mov
push
popf
leave
push
jne
and
push
inc
popa
movl
gs
je
imul
lea
stos
insb
ja
push
pop
js
xchg
andb
xchg
ja
lret
fcoms
pop
pop
dec
mov
inc
and
or
lods
aad
sbb
adc
sarl
and
nop
arpl
into
enter
xchg
std
jae
push
mov
or
sub
ror
cs
test
pop
push
push
sub
lods
pop
adc
add
or
and
stos
sub
test
fcmovbe
stc
aam
jge
enter
fdivr
pop
xor
popa
adc
popf
cmp
into
call
adc
push
fldt
lock
in
in
mov
loope
sub
adc
call
jns
or
fdivr
fcomps
or
push
fcompl
mov
or
or
xchg
movsb
sbb
push
addr16
inc
cmp
or
sti
adc
mov
push
add
xchg
pop
sub
sub
in
loopne
adc
in
bound
xor
lods
call
xchg
cmp
call
bnd
sbb
add
out
mov
push
int3
add
pushf
xchg
inc
inc
inc
ss
add
jnp
mov
jle
aaa
jne
fmuls
jb
sub
add
cmc
test
jae
sub
mov
or
loope
xlat
cmp
ret
pop
je
dec
ficomps
mov
mov
cmpsb
sbb
sub
insb
push
sbbb
push
or
dec
push
or
lods
xor
xchg
fwait
cltd
mov
fdivrl
adc
pop
fs
popa
mov
push
pusha
adc
insb
pop
fs
imul
adcb
cmp
outsb
mov
sbb
add
sti
aam
sbb
push
daa
inc
push
lock
push
mov
pop
out
xor
nop
enter
cmp
jg
mov
jne
cmpb
jne
inc
inc
mov
push
cmp
je
cmp
repnz
lcall
rorb
insb
idivb
add
and
push
sub
jns
jbe
jmp
addr16
rol
mov
inc
jmp
xor
imul
fbstp
mov
push
test
or
push
iret
mov
clc
mov
add
mov
sub
enter
in
pause
mov
orl
and
in
into
xchg
or
xchg
add
ss
mov
enter
out
or
lcall
push
cmpsb
imul
imul
dec
shll
xor
pop
insb
dec
pusha
shrl
push
pop
push
push
or
xor
xlat
inc
add
adc
insb
xchg
dec
fs
push
ljmp
dec
loopne
repnz
push
sbb
xor
shll
and
ss
shll
js
dec
shll
mov
repnz
ss
mov
add
jne
dec
incl
loope
add
xor
pop
icebp
and
roll
daa
popa
testb
push
leave
sub
rclb
add
cvtpi2ps
ja
inc
incl
xor
cs
insb
stos
dec
dec
add
or
or
mov
pusha
cltd
es
jb
gs
mov
inc
gs
outsl
fs
gs
imul
inc
jb
popa
je
fwait
mov
push
and
and
mov
outsl
jae
dec
popa
outsb
ds
pop
insl
jae
arpl
dec
pushl
outsl
jb
add
addr16
outsl
outsl
je
gs
les
mov
jg
jb
add
js
add
popa
ja
mov
pop
fs
outsb
arpl
push
inc
dec
push
xor
or
jne
nop
pusha
nop
xor
push
ljmp
or
add
pop
add
mov
xor
push
push
movl
mov
jle
jb
arpl
popa
gs
dec
dec
inc
pop
shlb
jmp
mov
mov
mov
mov
inc
or
mov
sbb
add
add
jge
and
add
mov
add
dec
nop
test
nop
je
lea
das
decl
push
mov
cmpsb
sbb
pop
jne
nop
nop
mov
sti
pushl
movzwl
mov
add
mov
add
jge
jmp
or
xlat
mov
xor
pop
mov
cmp
mov
pop
lea
push
push
in
in
gs
int3
popa
sub
fs
dec
sub
in
xlat
jb
mov
jns
popa
call
out
push
add
and
cld
pop
lea
pop
daa
adcb
push
call
pop
push
fnstsw
nop
jmp
pop
pop
sbb
dec
call
negb
xor
mulps
fcmovnbe
mov
add
nop
add
push
dec
mov
xchg
xchg
inc
add
inc
pop
add
loopne
int3
xor
add
nop
add
and
and
fldl
enter
push
pop
mov
int
jmp
mov
imul
jb
insl
and
outsb
outsb
outsl
je
bound
jb
std
push
jne
and
inc
dec
push
and
fs
mov
jl
ret
sti
sbb
add
add
mov
xchg
add
or
cmp
loope
hlt
mov
add
aas
push
imul
fwait
cmp
into
mov
dec
dec
adc
lods
and
add
fcoml
int
jo
add
mov
addb
cmp
add
mov
nop
sub
jb
ss
pop
push
xchg
rorl
sub
mov
xchg
add
int3
rorl
add
nop
lcall
loopne
jb
pop
adc
cmp
inc
orl
fadd
cld
cmp
pop
add
xor
xor
decl
or
or
cmpsb
mov
movb
ss
mov
jb
iret
mov
aas
push
aam
pop
and
sbb
or
sbbb
movsl
and
jg
adc
push
rclb
in
cmp
cmpsl
mov
jae
icebp
stos
add
and
and
decl
cmp
or
sti
ljmp
mov
push
mov
aaa
push
mov
xor
sbb
jle
jg
sbb
mov
adc
push
jmp
orb
sti
xor
push
pop
pushl
movzbl
push
je
mov
pop
lds
push
or
push
mov
sahf
fcompl
jmp
or
imul
push
sub
jne
jmp
adc
push
test
adc
icebp
incl
pop
lods
or
pop
jle
sbb
loope
fnstsw
stos
mov
sub
sub
and
push
in
pop
fistl
inc
or
add
fs
cs
lret
ljmp
jne
jae
mov
cs
adc
loop
pop
add
outsl
fwait
inc
pusha
xor
dec
inc
dec
rcrb
rol
les
lds
je
dec
enter
imul
das
lret
int3
inc
add
outsb
into
arpl
iret
outsl
cmp
rcll
shlb
shll
or
mov
daa
cmpsb
mov
js
movsb
dec
mov
mov
movsl
cmpsb
cmpsl
test
or
stos
stos
lods
lods
shrl
pop
pushl
mov
mov
mov
mov
push
dec
mov
gs
enter
cld
call
sub
popa
lea
push
add
push
pushl
xchg
jp
call
call
imulb
insb
outsl
cld
cmpsl
cmp
lcall
ja
pushl
adc
jg
fmuls
clc
pop
or
add
cmp
mov
incb
adc
add
lcall
jle
dec
je
filds
adc
push
int3
in
mov
movl
sbb
jne
mov
imul
in
out
fistps
lock
icebp
xor
jg
repz
sbb
cmc
mulb
loopne
loope
add
jecxz
pusha
pmulhw
xchg
pop
out
call
test
dec
xchg
ja
je
lea
push
and
jge
and
pop
cmp
jg
or
mov
cmp
jne
push
push
sub
xchg
or
ljmp
dec
mov
pop
dec
and
in
inc
ret
add
pusha
and
or
nop
inc
inc
cld
lcall
mov
dec
in
neg
outsb
jo
aaa
inc
mov
daa
popa
and
ljmp
cmp
xor
mov
jne
xor
out
cltd
in
xchg
cmp
test
aas
pop
rorb
and
or
cmp
out
lods
or
cmpsb
je
mov
fstpl
push
pop
pop
shr
pop
push
mov
loope
xor
lock
xchg
out
add
aam
lret
jmp
aad
test
fildl
rcr
fstp
out
sbb
clc
pushl
add
insb
int
fs
jb
jo
or
inc
jg
jne
jbe
or
popa
js
popf
sub
leave
jns
ds
jnp
fmulp
rcrb
fcomip
jle
push
mov
dec
or
subl
test
inc
pop
incb
dec
lcall
mov
loopne
xchg
add
adc
mov
decb
xchg
popa
jb
lret
xchg
jbe
gs
xchg
xchg
mov
or
lcall
in
aaa
popf
insb
addr16
gs
jae
outsl
dec
idivl
test
les
lret
insl
xlat
xor
enter
jae
jae
xor
ss
jecxz
pop
cli
je
int
shrl
in
sbb
jo
rcl
je
dec
mov
jmp
lcall
outsl
jae
fildl
imul
cmp
call
push
divb
shlb
lahf
testb
push
adc
pop
movsb
insl
aam
insb
movsb
add
lea
pop
loopne
movw
mov
adc
push
mov
pop
imul
sahf
out
pop
and
pusha
push
insb
mov
sahf
jo
xor
inc
push
add
cmp
or
mov
pop
arpl
or
loopne
mov
mov
mov
sub
sahf
xor
fdivl
adc
sbb
and
push
jbe
repnz
std
popa
pop
loope
mov
sbb
cmp
pusha
sbb
mov
sbb
pop
inc
sub
in
xchg
sub
mov
repz
iret
dec
pop
shll
cli
push
pop
mov
mov
ljmp
push
ljmp
mov
lahf
fcoml
pmuludq
mov
push
lcall
out
fwait
pop
popa
pop
add
mov
fwait
mov
add
add
decl
adc
sbb
jmp
sti
adc
sbb
or
aaa
decl
loopne
or
loope
stc
popa
sub
jle
in
sbb
dec
jmp
ljmp
pusha
ret
pushf
in
in
mov
or
mov
imul
dec
add
call
fiaddl
mov
push
les
sub
call
jbe
adcl
loope
inc
clc
jmp
imul
out
insb
rcr
fisubrs
mov
ja
negl
ljmp
pop
mov
mov
gs
je
inc
ja
clc
jmp
imul
loop
adc
sbb
hlt
pop
jb
jae
jg
jmp
dec
call
outsl
or
mov
into
push
adc
jecxz
icebp
incl
movsl
add
xor
pop
call
adc
xor
in
mov
cmp
leave
dec
or
int3
jg
mov
rcl
rcl
aam
mov
xlat
pop
mov
pushl
xor
add
cwtl
xchg
aaa
orl
xchg
xchg
jmp
cmpl
clc
outsl
jne
jg
ljmp
pushf
scas
push
fs
lods
mov
xchg
xchg
and
rclb
hlt
jle
popa
stc
mov
mov
ss
mov
sub
push
lds
aaa
ss
lcall
test
and
pop
aad
lcall
mov
xchg
jecxz
std
mov
pop
clc
daa
clc
sub
push
andl
sbb
in
inc
in
int
mov
jg
pop
call
mov
push
or
movb
or
inc
and
insb
inc
add
fmull
fldl
int
mov
loopne
iret
xchg
cs
push
out
sar
fcomi
xor
clc
testb
jge
xor
and
pushf
pushf
fdivrp
or
out
flds
fiaddl
push
aam
and
aad
stc
xlat
add
movsl
pushl
xor
movsb
add
mov
or
idiv
filds
mov
inc
dec
mov
sub
aam
sarl
mov
call
xchg
and
fwait
test
push
hlt
jg
ljmp
inc
in
inc
insb
inc
xchg
add
les
sbb
pop
outsb
fcomip
movl
xor
cmp
jbe
aam
lods
and
pop
adc
mov
rolb
cmp
notl
incl
fdivrl
mov
mov
inc
dec
scas
in
mov
pop
loopne
icebp
mov
fdivl
mov
jle
fcmovnu
mov
test
or
and
push
pop
cmc
pop
cld
das
clc
mov
ljmp
lock
mov
mov
cli
xchg
fs
inc
bound
call
incl
jb
push
mov
ds
pop
outsb
xor
imul
mov
aaa
ljmp
int
sbb
adc
cmc
jne
loope
call
cmp
sbb
insl
es
fistps
pop
and
dec
push
in
fldcw
inc
and
add
int
pcmpeqb
pop
sbb
pushf
popf
nop
fs
decl
imul
aaa
push
cltd
nop
addr16
frstor
dec
dec
enter
test
adc
and
sahf
dec
paddw
in
dec
push
fmuls
in
jbe
jbe
sahf
dec
fsubs
jbe
into
dec
adc
cmp
and
jg
mov
jb
cmpsl
js
pop
ret
pusha
and
pop
popa
pop
in
push
fdivrp
and
push
sar
decl
xchg
adc
push
loop
push
pop
lret
insb
dec
xor
dec
push
cli
or
clc
or
incl
aas
adc
test
adc
jmp
xchg
sub
mov
add
loop
or
mov
inc
je
jo
jg
ljmp
gs
xchg
sub
jae
lods
sbb
xor
xor
jg
mov
add
jnp
add
rclb
sti
fwait
add
pop
test
jmp
or
pop
or
mov
add
cmp
iret
add
rclb
stos
daa
lahf
fs
outsl
adc
cmpsl
dec
jns
push
push
sbb
inc
mov
pop
adc
clc
dec
xchg
mov
stc
dec
cli
dec
sti
inc
cld
and
xchg
sbb
or
xor
je
cmp
mov
fbstp
lea
pop
cmp
in
lcall
jg
jmp
loopne
xchg
stc
add
mov
stc
les
xor
arpl
je
outsl
outsb
cmp
or
mov
and
popf
jne
lret
or
cld
pushl
or
sub
mov
js
push
pop
hlt
and
das
std
outsl
pop
push
add
ljmp
push
pusha
jg
ror
out
dec
faddl
movsb
jae
push
jo
add
std
clc
idiv
lcall
xor
push
sbb
and
xor
add
xchg
push
int3
sbb
jbe
xor
into
aas
iret
popa
shlb
insb
clc
ljmp
aam
aad
fldt
xor
fnstenv
ficompl
mov
test
jnp
cmp
ljmp
ficomps
mov
or
xor
negb
fildl
and
fbld
cli
pop
jecxz
arpl
push
and
ffreep
call
shrl
nop
int3
dec
movzwl
mov
add
dec
test
test
call
lods
outsb
shll
mov
lods
scas
in
scas
adc
or
mov
mov
cwtl
jmp
fs
cmp
cmp
adc
xlat
outsb
inc
cmc
jo
fnsave
clc
inc
stc
push
std
incb
push
clc
push
gs
imul
or
decl
pop
nop
jae
adc
dec
pop
pop
adc
or
outsl
inc
gs
shll
inc
outsl
jne
push
dec
jb
and
je
jge
pop
shrl
incl
push
mov
mov
jg
ja
adcl
cmp
bound
ss
js
faddl
inc
mov
clc
push
pop
out
mov
clc
frstor
mov
test
jecxz
ss
jg
ss
mov
scas
sub
add
push
xor
cld
push
and
push
push
call
out
or
ja
fistpll
or
pop
test
je
dec
not
add
cmpsl
and
sub
dec
sbb
jmp
cmp
cmp
sbb
outsl
std
mov
outsl
je
sbb
leave
push
into
jbe
add
or
push
out
cmc
fcmovnu
and
call
jmp
push
sub
push
ficoms
add
ja
adc
pop
add
add
pushl
push
push
arpl
rcrb
mov
aas
add
lcall
or
mov
lods
pop
jae
xor
cmp
inc
gs
or
xor
push
cmp
sbb
or
cmp
arpl
or
push
xor
mov
cmp
pop
jae
movsb
sbb
xor
and
or
pop
jnp
fidivl
sbb
es
fistps
add
cmp
rcrl
call
fucomip
dec
sbb
ljmp
mov
or
outsl
std
addr16
and
sub
cmpsb
xorb
xor
pop
mov
mov
xor
vpaddusb
dec
pop
add
lea
jo
shrb
adc
cld
inc
adc
push
sbb
push
in
shl
pushl
nop
cwtl
fxch
sub
or
jo
jno
dec
push
push
jmp
pop
cli
push
xlat
in
aam
jbe
pop
repnz
xchg
fidivl
lods
bound
adc
jno
or
clc
lcall
adc
jno
cmp
insb
cs
int3
pop
jp
mov
gs
jge
push
cmp
jne
orb
in
inc
pushl
jns
xor
mov
jnp
sahf
lds
cli
hlt
sbb
xor
mov
in
or
mov
and
outsb
or
xchg
push
movl
jnp
lods
adc
push
sti
loope
sbb
push
sti
fcomps
xor
push
pop
loop
cld
jl
pop
xchg
inc
push
repz
imul
adc
decl
pop
cmpsl
jo
stos
dec
xor
and
sub
mov
pop
pop
mov
push
orl
push
push
pop
mov
lea
lock
flds
test
adc
pop
ljmp
add
sbb
into
nop
adcb
hlt
mov
or
mov
in
mov
mov
xlat
adc
fildl
nop
xchg
mov
cli
lret
or
mov
jecxz
push
jg
jge
cmp
call
fiaddl
push
mov
push
sbb
insl
addr16
call
sbb
mov
sub
aad
push
cmp
push
mov
sarl
xchg
clc
call
pop
cmp
iret
orl
pushf
and
mov
test
mov
push
inc
or
out
pop
lret
loopne
nop
lcall
xchg
sbb
cmp
fldt
je
jne
lds
hlt
pushl
mov
cmp
je
iret
jb
daa
adc
pop
ljmp
icebp
mov
out
push
call
mov
mov
dec
and
jo
outsl
or
or
cmovb
xchg
sbb
inc
sub
push
pushl
or
inc
fisttpll
shlb
shll
nop
sub
mov
xlat
aas
lods
aaa
push
imul
insl
or
jo
insb
cmp
shlb
xchg
and
adc
xor
into
popf
xchg
inc
or
es
jo
or
fwait
dec
mov
add
aad
lds
daa
or
or
test
push
sub
mov
push
mov
push
enter
mov
in
sbb
loop
fwait
incl
jg
ljmp
pop
std
and
push
xchg
insb
in
incb
jns
insl
popa
cmp
outsb
add
push
outsl
out
xchg
mov
mov
jg
xchg
jg
xchg
push
xchg
test
fbld
test
xor
inc
or
jg
mov
jo
add
gs
aad
cmp
loopne
sti
xchg
add
push
and
loop
fs
loopne
add
pop
pop
lods
push
mov
outsl
je
fcmovnu
cli
mov
es
sub
int
dec
mov
cld
jmp
mov
rol
xlat
or
roll
or
lcall
mov
ror
xchg
outsb
cmp
call
add
jg
sbb
pushf
mov
add
add
push
lret
sbb
pusha
cmc
loopne
push
rorb
out
ljmp
icebp
pusha
mov
pop
mov
sbb
pop
sbb
xchg
or
js
out
jle
inc
adc
out
ja
insl
cmp
aaa
incl
std
push
or
jg
into
add
cmp
jb
add
rcl
in
pop
and
jmp
enter
in
jne
aas
addr16
je
jo
addr16
nop
pop
in
mov
mov
pop
push
fsincos
mov
fdivr
or
dec
sbb
sub
das
stc
cmp
xchg
cmp
and
test
and
mov
ret
jge
mov
add
sti
lahf
push
pop
push
jl
adc
pop
pop
out
dec
cmp
test
jne
push
pop
dec
std
call
mov
dec
dec
sub
mov
add
ljmp
or
push
mov
fisttps
adcb
int3
pop
mov
aam
mov
nop
faddl
push
sbb
mov
fistps
jg
mov
and
fmuls
push
shrl
and
and
pop
loopne
loopne
mov
pop
lcall
cmp
cmp
aaa
jg
insl
cmp
lcall
cmp
inc
inc
push
inc
movsl
or
lcall
jb
gs
jbe
cmp
inc
inc
ds
jbe
jmpw
dec
outsb
dec
mov
pop
clc
or
fimuls
sbb
adc
leave
insb
mov
pop
xor
cld
or
popf
mov
push
imul
incl
aaa
icebp
inc
jo
divb
push
aaa
insl
jae
insb
popa
mov
sub
pop
mov
xor
xor
sub
test
sbb
and
decl
push
and
push
and
sbb
into
sti
and
mov
cmp
sub
sub
pop
xchg
xchg
pop
sub
xchg
test
cs
push
das
xor
inc
mov
dec
pop
xor
lcall
pop
xor
xor
in
inc
xor
inc
out
push
lock
test
jmp
xchg
lods
pop
icebp
repnz
add
mov
cmp
or
adc
outsl
mov
or
in
fs
push
movaps
in
adc
adc
xchg
adc
adc
pop
cmp
mov
mov
sub
mov
cmp
sbb
test
sbb
test
mov
add
repnz
mov
xor
ds
adc
bound
mov
pop
ret
loop
adc
dec
loopne
nop
xchg
xchg
xchg
xchg
xchg
mov
xchg
int3
lock
ljmp
mov
fwait
js
adc
xor
push
das
icebp
mov
xchg
push
adc
nop
xlat
stos
cltd
call
std
fstpt
sahf
test
pusha
inc
popa
in
dec
imul
xchg
pushl
addr16
push
imul
insb
insl
xor
daa
pop
ds
jae
xor
cmp
loopne
loope
push
push
loop
hlt
lods
mov
cs
cmp
shll
ret
push
mov
or
das
cld
movsl
push
out
in
lock
xor
imul
pop
popa
insb
push
jne
push
pop
jb
jns
decl
in
jl
mov
mov
inc
pop
push
inc
dec
dec
push
addr16
jo
push
push
scas
push
push
pushf
sub
fisttpll
fs
xor
push
addr16
push
push
push
pop
sbb
jbe
stos
inc
lcall
pop
mov
mov
pop
lock
daa
ds
sub
clc
cmp
incl
nop
or
daa
add
scas
pop
repz
das
and
cltd
mov
pusha
incb
loop
rcrl
outsb
cmp
push
hlt
adc
xlat
dec
clc
fiaddl
loope
sub
xchg
push
cmp
add
mov
leave
divb
call
and
popa
in
dec
insl
jne
jne
adc
xor
sbb
inc
jmp
in
sahf
les
jne
mov
inc
mov
int
sbb
sbb
mov
pop
sub
sar
push
pop
arpl
and
jg
mov
call
rcl
xor
in
stos
sub
incl
cmp
jne
shll
js
mov
sub
std
push
mov
call
mov
int
fs
xchg
push
sub
nop
pop
loopne
inc
mov
xchg
fsts
shrb
push
push
popf
pop
ret
sub
test
insb
push
call
ljmp
and
ja
mov
jecxz
nopl
xchg
add
mov
add
or
fsubrs
pop
pushl
clc
push
fs
mov
jg
iret
dec
mov
cmp
hlt
test
jmp
ja
jo
cmpl
mov
mov
adc
adc
fdiv
icebp
add
ljmp
std
movsb
push
test
dec
mov
inc
movsb
mov
loopne
push
adc
mov
hlt
pushl
ja
cmp
pop
out
bound
jb
dec
dec
sbb
jne
pop
ljmp
decl
les
jne
movsl
push
jne
push
lcall
dec
outsl
icebp
call
cmp
or
scas
inc
call
mov
pop
pushl
mov
mov
xor
movsb
stos
call
inc
jl
sub
roll
or
cmp
shlb
mov
add
lds
clc
ja
push
mov
add
mov
repnz
cmc
or
jp
cli
mov
dec
xchg
in
mov
jb
pop
sub
pop
push
insl
cmpsl
outsb
lock
mov
xor
and
xchg
mov
sub
cmpsb
inc
cltd
rcrb
sarb
mov
or
test
clc
push
lcall
arpl
fdivs
ret
push
call
hlt
push
mov
arpl
sbb
mov
mov
xor
xchg
orb
inc
jmp
pop
popa
xchg
pop
in
jg
push
shrl
cmp
and
addr16
cld
lock
mov
and
ljmp
sbb
and
mov
or
mov
stc
in
stc
stc
dec
iret
xorb
add
in
cmpsl
and
nop
stc
ja
stc
enter
adc
sti
in
sti
test
cld
incl
cmc
pop
hlt
insl
add
out
push
cltd
lea
pushf
popl
mov
xchg
mov
mulb
loope
pop
adc
pusha
xor
aaa
jnp
jo
sbb
jg
popa
stos
popa
pop
fwait
lods
dec
enter
inc
mov
mov
movsb
xor
decl
cld
call
shrl
adc
push
add
mov
xchg
jge
sbb
jne
jg
push
sbb
jo
mov
mov
fwait
sub
das
repz
hlt
js
stc
sbb
test
fadd
stos
fucomip
outsb
shlb
mov
xchg
adcb
jae
loopne
and
dec
popa
sub
hlt
adc
movsb
sub
jge
push
push
push
xchg
add
push
push
jb
pop
mov
pop
rcrb
inc
popf
jl
adc
inc
cmpsb
vprotq
and
pop
adc
repz
fadds
in
push
mov
inc
fdivr
lcall
je
pop
sbb
in
insb
cmp
loopne
pop
or
cmp
pop
cmpsb
pusha
cmp
push
mov
sti
xor
push
add
mov
add
rol
je
imul
sub
push
cld
gs
jmp
mov
mov
fdivl
popa
outsb
push
or
mov
popfw
mov
sub
cs
stos
imul
jns
jle
flds
push
inc
jnp
lret
insl
inc
dec
mov
mov
scas
or
xor
and
mov
cmc
inc
addr16
mov
xchg
or
popf
push
inc
mov
lock
aam
gs
adc
sub
imul
decb
shrb
adc
in
push
adc
lcall
jns
lock
enter
dec
cli
and
leave
cmp
cwtl
xchg
popa
pushl
cli
aas
pop
xor
xor
fildl
mov
xor
into
enter
clc
lcall
dec
rcl
cltd
in
xor
xor
push
sbb
inc
filds
icebp
xchg
pusha
adc
pop
fists
add
ss
outsl
lock
mov
xorb
sub
push
pop
mov
mov
jne
ss
loopne
pushf
divb
inc
push
mov
sbbb
push
cmp
mov
pop
cld
adc
and
or
sub
xor
mov
out
ljmp
xor
adc
insb
xchg
mov
addr16
callw
aas
pop
xor
cltd
mov
idiv
inc
jle
movsb
sbb
cmp
or
and
push
dec
xor
fldl
lds
jge
inc
cmp
jl
negb
pop
sub
shl
mov
incl
mov
aad
jns
sbb
repnz
mov
aas
rcrb
lods
in
adc
or
test
dec
lcall
jmp
cmp
ret
push
sti
mov
call
push
icebp
mov
ud0
incl
jae
out
xor
pushw
and
cltd
icebp
imul
clc
add
addr16
or
add
push
jl
sbb
and
pop
push
cld
clc
push
or
xor
adc
sub
dec
pop
jb
stos
xchg
pop
clc
xor
add
mov
icebp
and
inc
mov
gs
mov
lods
cmp
or
or
ljmp
inc
add
add
in
pop
pop
xor
xchg
add
sbb
sub
push
xor
adcb
orl
nop
dec
outsl
jp
xchg
stos
insb
insb
mov
push
dec
mov
ja
or
das
mov
adc
sub
out
xor
xor
scas
mov
pop
fstl
inc
xor
sarl
cli
movsl
dec
cld
rolb
arpl
adc
aad
insl
mov
loope
cmp
je
xor
jg
std
sbb
add
pop
mov
mov
imul
loopne
jnp
in
pop
lcall
dec
xor
test
xor
movsl
inc
mov
pop
movsb
enter
fsub
mov
jae
mov
in
shlb
incb
inc
es
mov
sub
aas
nop
fstpt
orl
dec
mov
addb
dec
sub
push
mov
jmp
mov
adc
clc
push
loopne
and
ljmp
and
outsl
cmp
push
lods
stos
sbb
aaa
dec
mov
nop
cmpsl
lcall
das
bound
fistpll
adc
xchg
nop
mov
mov
leave
mov
push
xor
fdivs
fdivs
fcmovne
repnz
jb
mov
int3
test
push
fbld
jns
adc
mov
lock
pop
enter
incb
push
leave
add
hlt
outsb
or
dec
imul
or
pushl
mov
push
and
adc
or
das
dec
jae
lret
or
loop
jo
push
xchg
lods
jmp
sar
mov
enter
inc
arpl
pop
ds
sbb
adc
and
push
call
incl
mov
push
mov
dec
push
outsl
call
mov
sub
or
add
pop
add
mov
sbb
out
xchg
decl
xor
jg
inc
and
fidivrs
push
lods
jne
ret
sub
aam
add
data16
pop
mov
push
add
inc
incl
xchg
lcall
mov
test
les
testb
shlb
sbb
sahf
jl
adc
xor
jmp
loopne
sar
movsl
or
fisttpl
add
jbe
pop
arpl
out
test
fwait
or
je
in
xor
or
push
popa
je
es
je
loopne
pop
insl
outsb
sbb
add
pushl
insl
or
call
xchg
ljmp
cld
imul
add
sub
cmp
loope
mov
cmp
and
mov
or
mov
add
xor
push
add
pop
adc
xor
aam
add
jg
xchg
jae
or
cwtl
lret
and
dec
mov
push
je
or
test
pusha
pop
jle
lcall
das
hlt
or
push
and
xor
cmp
or
push
nop
push
sbb
outsb
dec
ljmp
scas
shrb
and
pop
or
jl
jmp
jge
incl
pop
adc
sub
into
mov
stos
push
cltd
push
add
incl
or
pop
aad
jge
inc
inc
iret
sub
cmp
int3
popa
out
pop
hlt
dec
sub
or
xlat
sbb
xchg
inc
outsb
mov
cmp
nop
push
ja
sub
sub
mov
add
incl
das
add
bound
rolb
dec
mov
add
fldpi
or
leave
pop
call
cmp
pop
pop
xor
cmp
ret
sub
xchg
mov
ds
lock
mov
pusha
jl
xor
lret
push
imul
mov
cli
inc
ljmp
dec
arpl
fiaddl
adc
push
inc
std
call
sbb
lea
frstor
jne
inc
mov
push
lods
insb
jnp
fdivrs
jle
call
push
lods
movb
and
ret
incl
jle
cli
lea
add
push
jmp
inc
add
sahf
push
fidivrl
jl
call
test
rcrb
mov
enter
adc
lret
mov
repz
mov
std
lcall
nop
in
push
stos
or
sbb
jbe
cli
and
and
lcall
ljmp
insl
or
and
lods
push
addr16
jo
adc
dec
call
imul
nop
pop
sbb
inc
lahf
rorl
or
in
or
lret
push
jle
test
fprem
movsl
pushl
and
jns
lea
or
or
in
out
or
cmp
mov
shlb
cmp
sub
test
cmp
ljmp
cld
xchg
adc
mov
jmp
push
jae
sbb
push
xor
push
dec
hlt
in
mov
call
mov
or
mov
js
push
adc
cli
lea
mov
fimull
mov
lret
rcl
lcall
divb
pushf
pop
lret
loop
jno
push
sbbb
nop
mov
adc
push
sti
inc
sti
cmc
pop
add
aas
ss
sbb
xor
aam
xlat
popa
xorl
push
test
fldl
dec
outsl
cld
or
jb
inc
gs
cwtl
push
je
imul
pop
call
and
negl
sub
dec
xchg
std
xor
sub
call
pushl
stos
pop
mov
fistl
shll
or
jg
mov
fs
or
xor
rol
push
lcall
mov
ret
cmpw
lret
mov
add
ljmp
push
inc
add
mov
inc
cwtl
loope
pop
arpl
mov
dec
std
je
std
sti
push
mov
cmp
cmp
je
outsl
call
jl
je
cmp
jbe
add
inc
mov
in
in
xor
outsl
fucom
outsb
mov
sbb
fistl
arpl
ljmp
out
cmp
jb
sub
je
dec
insb
fldl
je
dec
dec
mov
sti
in
xchg
add
jmp
mov
or
jmp
push
sbb
ljmp
cmp
test
cmpb
testb
cli
jne
orl
lea
lods
jae
push
call
add
insb
cltd
cmp
std
cmpsl
adc
push
out
in
in
aaa
clc
sub
inc
jb
mov
push
es
mov
or
adc
or
ljmp
pop
shll
adc
clc
incl
xchg
sub
push
pop
loopne
add
ret
push
mov
in
decl
in
sub
fucomip
idivb
ljmp
leave
mov
pop
mov
sbb
lds
cmc
inc
dec
inc
addl
pushl
fldenv
and
cmp
repz
dec
pusha
icebp
lock
decl
call
addr16
fists
out
out
sub
clc
fsubl
dec
mov
stos
sahf
inc
xchg
adc
push
fildl
das
sbb
push
andb
push
push
mov
je
repz
inc
push
cmc
aaa
imul
cmp
sbb
mov
loop
fiadds
xor
xchg
flds
lods
ljmp
jno
sbb
lods
mov
mov
mov
pop
rcrb
cmp
adc
ret
inc
or
ljmp
test
ret
xchg
add
or
mov
pushl
sar
push
and
or
das
shlb
pop
jmp
ret
add
pop
ljmp
push
xor
push
inc
mov
inc
sub
in
pusha
mov
mov
add
out
or
cmp
mov
filds
iret
je
daa
inc
push
jmp
xor
lods
jg
addb
ror
pusha
sbb
cmp
cmp
mov
add
mov
jo
dec
les
sub
jg
add
push
add
insl
mov
les
loope
stc
pop
scas
lock
add
pop
cld
dec
popf
lock
int3
sbb
add
fs
sar
mov
ss
outsb
mov
mov
adc
cmp
jle
or
mov
sbb
adc
cmp
stc
lcall
insb
lock
mov
imull
lock
adc
pop
sbb
or
or
clc
out
add
incl
es
or
mov
orl
cmp
and
mov
mov
imull
in
xchg
ss
dec
xchg
add
wbinvd
jno
subb
das
jb
cs
sbb
insl
xchg
decb
pop
cli
leave
add
sarb
mov
insl
jmp
or
inc
sbb
add
and
data16
add
sbb
and
pop
or
dec
pop
mov
or
js
mov
mov
nop
or
xor
data16
sbb
mov
push
and
mov
cmp
cltd
and
sub
sbb
subb
sbb
jl
lcall
mov
movsb
cmp
sbb
orl
push
je
cmpsl
stos
ret
clc
not
enter
inc
dec
jmp
sbb
addr16
call
jp
sbb
mov
xor
fistl
in
xor
fwait
sarl
inc
mov
pop
cld
enter
neg
push
call
shr
insb
inc
jle
mov
leave
cmp
dec
cmp
lods
lcall
pop
aam
nop
mov
xor
inc
aam
xor
imul
incl
sbb
adc
jnp
imul
decl
popf
mov
xor
sub
call
push
and
call
scas
pusha
push
mov
push
ss
rcr
sub
jno
cmp
imul
push
mov
in
xor
pop
sub
ret
faddp
enter
sub
xchg
shrl
cmp
push
loope
sbb
lret
pop
imul
or
jo
inc
mov
cmp
incl
add
xor
jmp
pop
push
cmp
mov
pop
clc
jg
cmp
ret
orb
loope
pop
adc
dec
lods
incl
fiaddl
adc
rorb
pop
pop
rcr
mov
xor
jmp
fisubl
fcomp
sbb
jg
imul
add
dec
inc
andl
push
roll
incl
ljmp
adc
add
add
incl
dec
adc
sub
loope
push
mov
shr
lea
and
lcall
rolb
mov
shr
mov
decl
dec
jle
mov
push
inc
lcall
repz
bound
jg
cmp
dec
jmp
pop
lods
sti
mov
push
rorb
rolb
or
sar
mov
or
adc
daa
inc
or
dec
dec
daa
pop
push
jg
call
jne
pop
xlat
or
adc
pop
jbe
pop
cli
incl
inc
mov
mov
sbb
not
and
push
shlb
outsl
jl
decl
incb
adc
mov
movsb
push
mov
shr
aaa
adc
jo
jl
fbld
in
mov
and
jg
push
and
testl
mov
scas
shr
push
ljmp
push
js
pop
pop
ds
aam
or
outsl
shrb
in
fwait
inc
fisubs
jmp
pushf
cmp
add
fcmovnb
jo
ret
imul
out
xadd
adc
pop
inc
cs
ljmp
lock
and
addr16
lret
cmp
add
repz
sub
mov
fwait
or
repz
jne
ret
daa
pop
jg
push
insb
sub
sbb
jg
ljmp
mov
push
inc
mov
mov
push
cmpsl
lods
ret
jle
negl
decl
push
or
shlb
adcb
movb
mov
into
adc
cmp
or
xlat
sub
pop
sub
decl
fidivrl
adc
call
scas
roll
mov
sub
pushl
sbbl
lods
rcr
das
xor
add
add
xor
xchg
out
xor
add
sbb
push
jne
in
mov
fcomp
aad
mov
cwtl
subb
jecxz
frstor
int3
sbb
cld
das
pusha
adc
mov
das
pop
scas
testl
in
jg
in
out
cmpsb
pop
les
andb
mov
loop
mov
in
mov
sub
incl
sub
fcomp
sub
ret
or
fdivrs
pop
ja
loop
mov
xchg
pop
pushl
les
adc
repz
shl
popf
aaa
lret
or
xchg
cld
mov
stos
lods
enter
stos
cmp
out
aad
cmp
sbb
incl
aaa
das
push
mov
cmpsb
cwtl
jo,pt
cmpsb
cmp
outsb
or
jg
lcall
pop
xchg
or
and
dec
or
popa
adc
add
insl
cmp
and
loopne
ljmp
loopne
pop
loop
xlat
mov
bound
lods
movsl
sbb
jmp
add
and
iret
das
cld
push
jg
jge
dec
cmp
inc
rclb
sbb
lcall
sub
push
and
clc
jb
repz
pop
pop
es
adc
cmpb
push
repnz
shll
and
or
insl
jae
insb
out
call
insl
int
lods
mov
mov
adc
call
sbb
incl
fdivs
mov
pusha
adc
inc
add
rorb
lcall
imul
pop
and
clc
cmp
jge
cli
push
mov
mov
enter
jg
jecxz
xchg
cmpsl
add
fbstp
imul
or
test
mov
inc
es
and
mov
in
fistpll
filds
inc
fimuls
cwtd
xlat
sbb
in
call
pop
cmp
or
jnp
ret
call
inc
loop
mov
sbb
out
or
fidivrl
movsl
faddl
pop
mov
imul
lock
in
mov
mov
mov
push
and
sub
in
dec
mov
sbb
add
push
movl
xchg
dec
fisttps
fidivs
jbe
cmp
xor
xchg
xchg
cmp
push
inc
cmp
jmp
add
mov
imul
jbe
cli
mov
mov
jno
incl
sahf
ja
cmp
js
lds
popa
popf
insl
adc
mov
pop
adc
xor
mov
repnz
lcall
in
mov
popf
sarb
in
mov
mov
inc
inc
ljmp
inc
push
sbb
in
insb
mov
xchg
mov
ficoms
in
mov
cltd
jb
repz
das
lock
push
int3
pop
push
mov
lret
loop
cld
shl
jno
xor
shrb
jmp
mov
outsl
js
or
mov
jle
sub
ljmp
pop
jae
mov
add
sbb
lock
ja
imul
out
sbb
mov
fidivl
cmc
test
xor
aam
xchg
jae
adc
fidivs
xor
pop
or
sbb
or
add
or
inc
call
jle
pop
aas
sbb
cmp
pop
fstps
js
jbe
les
in
mov
scas
pop
mov
out
fnstenv
jp
jl
pop
je
jl
xchg
adcl
xor
inc
gs
lods
les
mov
lcall
xor
mov
stos
rcrb
sbb
push
or
in
sbb
ljmp
inc
int3
xor
sub
out
inc
mov
cmpsl
jmp
xchg
stos
xor
enter
lock
push
fidivrs
hlt
cmp
adc
xor
jmp
xor
cmp
pop
pop
gs
sbb
addl
lock
int3
pushl
pop
push
dec
fbstp
pop
bound
hlt
out
call
cmp
fwait
pop
unpckhps
sbb
pop
push
test
sub
lock
push
inc
dec
jle
jnp
int
outsl
jecxz
jp
decl
add
xchg
stos
loopne
xor
sbb
out
incb
xchg
fninit
or
ret
adc
js
mov
jb
pop
lock
fdivl
mov
adc
dec
mov
cwtl
sbb
jge
sbb
xlat
sbb
mov
mov
xor
out
loopne
mov
ret
mov
aam
stos
repz
repnz
repz
int
pop
rclb
jmp
xor
mov
cs
mov
pop
jge
xlat
pop
add
pop
imul
movsb
mov
decl
dec
push
or
and
inc
mov
xchg
test
rolb
push
mov
mov
or
mov
incl
add
lcall
enter
pop
cmp
mov
push
ljmp
or
insb
js
inc
enter
decl
fwait
jl
addps
outsb
lea
push
push
inc
sbb
inc
jge
iret
pop
pop
mov
mov
adc
ror
or
pop
add
xchg
popf
pop
add
push
dec
jne
xchg
push
push
out
cwtl
mov
add
pop
rorb
and
jns
in
cmp
and
lods
aaa
lods
incl
mov
inc
cmp
std
push
lods
push
mov
add
mov
lea
rol
or
call
add
inc
pop
cmp
jl
dec
ss
sbb
lcall
or
add
movb
test
sbb
jp
lcall
mov
lea
push
aaa
add
inc
inc
jle
pusha
cld
cwtl
mov
fisttps
cmpsb
sbb
push
cmp
mov
inc
fildll
jae
lret
push
std
pop
sub
adc
inc
add
pusha
movsb
fsubrs
shl
pop
dec
add
mov
outsb
ja
faddl
in
mov
mov
pop
add
xlat
insb
decl
mov
push
pop
ss
shll
in
jae
mov
lcall
or
jg
pushl
mov
cs
daa
mov
imul
in
sbb
sub
add
jle
outsl
cmpsb
pop
or
sbb
cmpsb
or
inc
dec
push
pusha
lcall
ljmp
jne
mov
scas
pop
js
lods
push
mov
jp
clc
outsl
lcall
mov
sbb
adc
fidivs
int3
or
testb
lock
call
movsl
lea
add
add
int
incl
mov
out
adc
ds
add
jnp
cld
aas
inc
inc
add
sbb
orb
repnz
dec
jne
push
repnz
aam
inc
ja
in
mov
xor
in
jmp
ja
xor
dec
es
leave
leave
or
enter
sbb
loopne
add
movsl
aam
add
push
push
dec
inc
dec
les
fildll
push
inc
push
dec
cs
cmpsl
mov
cmpsl
ljmp
out
add
fistps
cmp
cmp
lcall
aaa
sub
ljmp
xor
psubw
stc
xchg
cmp
xor
cmp
push
lcall
sub
xor
iret
incl
xor
xor
xor
ss
das
cld
pushl
sti
jbe
xor
sysenter
add
sub
xor
mov
js
imul
popa
insb
popa
addr16
jb
lcall
jae
icebp
out
or
adc
push
sub
cmp
xor
aas
fs
decl
insb
scas
dec
mov
jnp
imul
gs
cmovno
xchg
jle
jecxz
imul
sbb
jmp
outsl
jne
je
pop
push
jns
jg
sub
arpl
insl
outsb
add
std
lcall
pop
or
fdivr
icebp
idivl
pop
sbb
pop
cli
call
mov
push
dec
cmp
pop
add
cs
shll
addr16
pop
add
adc
jae
repnz
pop
bound
lods
and
imul
fbstp
jae
or
jne
pop
dec
dec
imul
adc
jg
push
loopne
popa
insl
inc
mov
aas
arpl
mov
outsb
loope
icebp
or
and
ret
inc
pop
dec
or
mov
mov
inc
imul
or
inc
outsl
and
push
fiadds
mov
sbb
and
fists
or
sub
outsl
xchg
ret
jne
sbb
ljmp
xor
sbb
mov
loopne
jne
xor
addl
clc
and
add
jb
jb
je
cli
fcmovnb
pop
push
dec
add
in
arpl
ljmp
xchg
mov
dec
shlb
ret
pop
push
popa
fs
lret
insl
inc
sbb
jo
push
inc
insl
pop
jmp
fdivrl
jae
outsb
or
sbb
jg
imul
pop
push
je
outsb
addr16
pop
pop
sbb
outsl
pushl
aaa
xchg
mov
xchg
sub
jo
inc
push
aaa
mov
test
jg
outsl
fcmovne
push
push
imul
push
xor
jnp
jnp
jns
mov
push
imul
popf
mov
jp
dec
jae
pop
test
leave
pop
mov
addr16
outsl
imul
add
pusha
outsl
imul
arpl
cli
int3
mov
out
xlat
fmul
cld
dec
std
call
xor
cwtl
or
gs
lcall
add
insl
mov
inc
inc
inc
repnz
fidivl
sub
push
test
inc
sub
insb
and
jnp
lret
insl
mov
insb
sbbb
push
jno
or
ss
add
xor
imul
fs
imul
jae
outsw
xchg
lock
pop
mov
push
jge
imul
jg
sub
jo
shrl
jae
ja
xchg
pop
lcall
sahf
aaa
insl
inc
ja
pop
push
popa
inc
and
pop
ja
jb
jo
pop
popa
xorl
outsl
incl
fsubrp
jne
insl
stos
insl
xchg
leave
dec
and
ficomps
jae
movd
or
cmp
inc
sbb
mov
dec
jo
mov
gs
push
mov
std
insl
jl
pushf
add
xchg
fnsave
jbe
jb
push
sbb
decl
xchg
mov
imul
or
push
arpl
lcall
jnp
and
xchg
jl
out
ficompl
lahf
aas
aas
xor
lcall
aas
pop
or
xor
xlat
pop
push
or
inc
pop
or
sbb
or
leave
in
rorb
xor
mov
dec
ret
loopne
adc
ja
decl
push
inc
or
dec
push
add
dec
scas
outsb
xor
lcall
fdivl
ljmp
and
jne
in
fcmovb
std
call
lret
jns
jecxz
dec
sbb
incl
mov
ljmp
fists
or
adc
push
pop
or
and
sub
es
mov
sbb
xchg
outsl
lock
or
or
adc
adc
push
and
mov
push
mov
xor
cmp
aas
testl
inc
mov
add
dec
or
mov
adc
or
adc
add
or
adc
lret
dec
or
daa
pop
inc
and
lock
push
or
movsl
incl
or
pop
or
adc
mov
fbstp
push
pop
pop
add
push
sub
sub
test
pushl
fldl
or
push
push
adc
push
pop
or
or
push
or
sub
mov
xchg
cmp
or
or
sbb
sar
dec
adc
mov
imul
or
adc
adc
push
add
jmp
and
push
clc
orl
add
lock
lahf
mov
mov
push
pop
outsl
add
pop
and
mov
dec
lock
add
sub
sbb
cmp
popf
adc
ss
sbb
jns
outsl
lock
fsts
push
add
or
shlb
mov
adc
adc
adc
fildl
bound
or
mov
sub
xor
mov
loope
cmp
xchg
xor
outsb
and
pop
xchg
adc
lcall
fildll
dec
inc
sbb
inc
sub
imul
in
mov
push
or
cmp
push
or
dec
rcrl
decl
cs
sbb
adc
push
ja
or
mov
mov
and
adc
mov
jbe
testb
pop
cmp
loope
add
ds
or
cwtl
repnz
flds
add
push
push
add
pop
nop
add
insl
push
les
push
incl
out
mov
mov
xchg
jg
call
jmp
mov
inc
adc
adc
add
fsubrp
xchg
mov
add
add
pop
js
ss
and
movsb
nop
dec
dec
add
insb
aaa
or
aaa
clc
ljmp
fcom
movsl
or
scas
push
nop
jmp
sbb
lcall
pop
repnz
popa
inc
mov
or
daa
pop
jg
out
inc
add
es
cmc
or
incl
lret
daa
aam
sub
rcrl
daa
or
pop
ljmp
sbb
std
and
ljmp
mov
aam
mov
nop
push
notb
mov
nop
add
add
jne
mov
in
sbbb
mov
or
pop
in
add
jne
push
jae
xor
mov
jb
mov
dec
fadds
lds
leave
or
and
daa
sub
sbb
add
cmp
mov
adc
jnp
cmp
jbe
mov
inc
xchg
dec
jne
jmp
arpl
nop
mov
add
xchg
sub
fisttpll
adc
ja
add
jmp
xor
outsl
sub
cmp
ja
cmpb
repnz
mov
shr
out
mov
adc
jmp
sarl
mov
loop
cld
mov
and
shlb
lea
push
jg
mov
xchg
mov
xchg
dec
or
dec
repnz
adc
cs
mov
pop
push
aaa
fmuls
jmp
xor
cwtl
cmp
out
mov
sbb
cmp
ja
add
mov
pop
clc
cs
jo
jo
jmp
and
and
mov
jnp
jp
or
scas
xchg
inc
jle
mov
push
fwait
push
push
mov
pushl
xchg
ret
andb
andb
pop
adc
lea
std
jmp
push
cmp
jne
sub
jmp
jae
mov
rclb
rcr
rorb
movsb
jecxz
lock
nop
xor
sti
mov
push
rol
les
and
xor
rorl
shll
stc
xchg
and
roll
insb
shrb
dec
mov
imul
pop
adc
or
push
push
inc
push
push
or
adc
mov
scas
sbb
push
mov
add
sub
or
inc
mov
push
ja
fisttpll
or
sub
insb
je
aas
subb
pop
cld
dec
les
insb
pop
dec
mov
ror
out
adc
inc
lret
adc
notb
lsl
push
test
ficomps
jnp
add
cwtl
mov
sbbb
adc
add
xchg
or
aam
mov
lds
inc
push
gs
aam
sbb
mov
or
daa
inc
cmp
sbb
fcompl
dec
xor
push
outsl
inc
out
jp
lods
fmull
or
test
dec
mov
insl
insl
mov
movb
lods
jbe
shlb
js
cs
aam
imul
inc
mov
adc
gs
fiaddl
push
push
ficoml
push
rclb
pop
jbe
push
insl
imul
jnp
dec
or
sbb
bound
ss
pop
shll
gs
jp
push
mull
scas
xchg
insl
pop
or
stos
jo
andl
mov
mov
cmp
or
je
shrl
xor
mov
add
jae
pop
stos
in
adc
je
mov
subb
or
insl
or
dec
push
pop
sbb
lock
sbb
push
or
add
test
pop
je
or
test
insb
data16
addr16
jle
and
mov
inc
arpl
outsb
mov
xchg
out
dec
gs
gs
add
jecxz
arpl
pop
push
and
insl
xchg
lods
arpl
jo
or
jnp
shrl
jnp
stc
movlps
mov
push
push
stos
adc
pop
fisttpll
iret
lock
cmp
jne
jo
xchg
jb
loopne
js
fwait
dec
xorl
pop
sbb
ficomps
int3
push
xchg
and
mov
sbb
xor
ds
rolb
jnp
imul
cwtl
int
loope
or
add
fwait
arpl
fs
mov
or
dec
or
add
dec
inc
or
add
pusha
in
and
add
ret
push
test
sbb
or
cmp
xchg
adc
push
push
adc
sbb
xchg
jo
sub
cmpsl
adc
push
add
je,pn
js
cmp
adc
and
sbb
sub
sti
movsb
push
or
push
inc
cs
fwait
mov
sahf
push
rorb
mov
or
jo
cld
mov
ss
dec
add
add
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
