decl
decb
dec
add
or
movl
ret
nop
outsl
jmp
push
mov
call
testb
je
push
sbb
mov
xorl
pop
ret
aas
mov
movl
push
jnp
in
xchg
test
popa
pop
cmpsl
mov
mov
pop
or
or
jle
jmp
adc
mov
cmpsl
shr
inc
shl
push
mov
push
in
jmp
mov
mov
shll
rol
add
stos
mov
out
decl
rep
movl
mov
or
or
dec
lcall
out
add
insb
mov
call
test
pusha
pushl
push
mov
mov
mov
push
mov
call
call
pop
lock
fs
sbb
mov
push
sbb
sbb
std
jb
pop
add
outsb
mov
je
movsl
ret
mov
pushf
and
sbb
jle
sbbl
mov
outsb
pop
jno
jle
mov
sub
push
push
push
push
mov
lock
fistpll
inc
add
xchg
sub
ss
push
push
sbb
pop
sti
jg
and
divb
fildl
dec
mov
mov
aas
sti
add
mov
mov
mov
outsb
ja
fimull
nop
sbb
aas
add
aaa
ret
outsl
fistl
outsb
sbb
add
push
add
lock
cmp
jbe
mov
cmp
jbe
mov
sub
inc
shl
in
repz
xchg
adc
xchg
outsb
push
scas
les
into
push
push
push
cmp
or
add
pop
sbb
fdiv
jbe
rorl
loopne
pop
mov
cli
or
dec
repnz
not
dec
je
jo
fcoms
lds
faddl
js
fsubrs
jecxz
insl
adc
sub
ret
data16
jne
dec
add
loope
and
insb
push
push
dec
push
and
bound
pop
push
and
nop
cmp
jb
pop
fidivrs
data16
mov
mov
or
es
in
orl
adc
xor
mov
and
add
pop
hlt
adc
adcb
decl
sub
push
pop
addl
xchg
sbb
sbb
sub
add
aad
adc
inc
add
sarl
push
jbe
jle
jae
mov
sbb
outsl
mov
adc
in
adc
mov
xor
and
cmp
out
ja
std
inc
sbb
shr
fidivrs
xchg
outsl
cs
movl
fcomip
dec
enter
pop
mov
inc
cmpsl
scas
call
or
sub
dec
jg
ret
fistps
sbb
sub
mov
sub
adc
cmc
inc
inc
dec
jne
mov
ja
jnp
jp
add
push
push
jl
push
sbb
fcmovnbe
sbb
or
sub
mov
inc
shll
push
mov
mov
inc
add
je
add
lahf
mov
add
add
add
pop
loope
test
shl
push
ds
ljmp
clc
add
rorl
dec
add
add
mov
roll
orps
sub
push
mov
mov
and
or
mov
pop
fwait
lahf
jmp
or
mov
adc
fstpt
add
outsb
lahf
mov
pop
jb
cmp
jbe
and
mov
or
ret
push
mov
jge
mov
xor
movsbl
leave
adcb
jmp
in
inc
add
sub
xor
sbb
mov
add
or
mov
jmp
push
fdivp
es
add
ss
inc
pop
dec
fsubrp
push
mov
pushf
imul
mov
dec
jbe
mov
adc
addr16
daa
xchg
out
xchg
ret
lahf
pushf
lods
mov
nop
xchg
fadd
add
sbb
inc
push
call
cmp
fiadds
push
nop
out
sub
test
test
je
popf
cmp
insl
js
mov
push
xchg
movl
in
mov
adc
mov
loopne
jbe
enter
ret
xor
addr16
push
cmpsb
test
inc
push
mov
dec
cmp
cmp
adc
jae
xor
inc
add
push
lock
aas
sub
xchg
xor
add
mov
cmp
mov
sub
mov
fsubl
movsb
push
pusha
js
cmp
decl
inc
dec
rcl
or
es
push
push
std
xor
mov
into
stos
insb
mov
insl
mov
subb
ja
mov
gs
test
outsb
mov
in
add
push
mov
mov
movl
and
push
cld
lea
xor
lahf
jbe
jne
push
jmp
push
cli
push
lea
cmp
cmp
sti
push
push
mov
adc
rorb
std
test
cld
imul
and
movsb
add
mov
mov
sub
or
in
pushf
cmp
inc
aas
or
pop
mov
mov
andb
sbb
inc
loop
test
or
pop
pop
call
icebp
mov
sbb
stos
lea
mov
add
js
fstps
icebp
xor
decb
sub
jle
pop
mov
adc
mov
xorl
sub
mov
shlb
stc
push
je
daa
push
outsl
add
movl
nopl
add
pop
push
sub
add
and
rolb
cmp
int
movsl
adc
pop
je
cmp
sub
xchg
call
enter
pushf
sahf
adc
dec
push
add
fsub
addr16
adc
or
lea
adc
add
movsl
xor
add
mov
pop
cmp
in
cmp
cmp
or
mov
inc
cmp
setge
push
cmpl
mov
pop
sbb
fcomps
rolb
loope
mov
pop
loopne
test
sub
add
or
lea
imul
insb
je
push
fbstp
and
add
call
push
push
arpl
lcall
push
test
adc
pushl
test
xchg
lea
jo
push
mov
jl
scas
cmp
xor
pushf
test
or
nop
push
lea
test
jl
les
add
add
mov
xor
sbb
scas
push
cmp
jle
cmp
mov
loopne
jb
jg
leave
jl
mov
mov
sarl
icebp
pop
loop
jo
push
sub
stc
jl
xlat
mov
jle
mov
adc
cmp
jne
ljmp
mov
mov
dec
js
outsl
push
inc
fldt
dec
je
mov
cltd
cmp
jne
js
fnstsw
xor
pop
aam
sbb
pop
cmp
xchg
mov
xchg
ret
lock
add
jns
cmp
mov
dec
sbb
mov
dec
js
add
mov
mov
sbb
test
je
and
in
xchg
inc
cmp
jle
imul
inc
pop
push
arpl
data16
dec
jbe
jge
jno
sub
add
repnz
xor
sbb
popf
push
jg
call
das
mov
dec
add
sub
push
mov
cmp
test
jne
xorl
out
sarl
jne
sub
sbb
les
mov
sbb
aaa
into
shrb
sbb
and
pop
and
sub
and
pop
jmp
rcrl
adc
xor
scas
jle
lret
inc
test
test
push
ud2
and
add
por
push
jb
and
sahf
adcb
push
push
dec
nop
sub
outsl
mov
adc
cmp
xor
pop
mov
or
mov
insb
enter
aam
je
sbb
inc
pushf
pop
push
lcall
inc
stos
xlat
xchg
idiv
mov
and
mov
push
push
push
cmp
mov
and
enter
stc
add
or
sub
loopne
mov
push
push
test
iret
jnp
jp
pop
xor
cmp
cmp
adc
insb
cmp
je
jo
js
insl
push
jl
je
pop
push
out
mov
rcll
aam
mov
je
jo
and
daa
add
or
gs
je
and
pop
push
addr16
and
mov
or
sub
push
enter
adc
xor
xor
sbb
xor
int
movzwl
aaa
push
push
inc
data16
ds
push
scas
mov
and
pusha
ret
loopne
mul
jns
or
out
mov
test
push
mov
sbb
xchg
sahf
das
adc
adc
rcll
ljmp
adc
or
lock
xchg
jmp
and
xor
or
mov
je
clc
pop
cld
push
loop
or
xor
pop
notl
sbb
or
sbb
or
roll
push
daa
adc
mov
ss
in
clc
cmp
lcall
adc
xor
sbb
testb
or
clc
push
push
mov
adc
sub
jl
jl
sub
and
jo
add
sbb
icebp
cmp
push
das
jmp
adc
mov
mov
addb
add
push
sbb
ss
cmp
jg
dec
jl
sub
sub
cltd
sub
mov
loopne
cld
sets
dec
and
leave
mov
jne
int
sub
adc
or
aam
insl
movsl
in
sbb
mov
add
in
add
notb
loopne
adc
inc
add
cmp
and
add
adc
rclb
adc
and
test
inc
inc
xor
xlat
dec
das
xor
jbe
out
cmc
add
lods
add
roll
test
std
pop
mov
push
fs
add
pop
push
push
cmp
xchg
dec
push
es
cld
jg
mov
repnz
test
je
test
jne
push
push
cmp
shrb
push
inc
lods
pusha
or
das
sub
pop
repnz
pop
adc
pop
dec
ret
inc
imulb
jns
ret
or
mov
jle
movsb
stos
push
cmp
sysenter
push
sub
xchg
xchg
inc
xor
xchg
push
mov
jle
sub
and
and
in
add
xor
mov
inc
inc
inc
cmpb
lock
push
fists
mov
sbb
xor
aam
push
pop
fdivrl
mov
adc
rclb
mov
sbb
jmp
sbb
push
pop
mov
decl
into
imul
add
clts
daa
jae
cmp
imulb
sbb
scas
ja
data16
ret
push
xor
test
call
push
inc
or
je
sub
js
push
pop
push
adc
insl
mov
push
call
add
and
rorb
jno
mov
stos
or
add
jb
loopne
sbb
je
push
jge
adc
div
pop
out
or
xor
xor
aas
or
push
fildl
sub
test
sbb
les
lea
xor
push
mov
xor
mov
popa
roll
pop
adc
enter
jge
ret
push
pop
nop
push
push
cmp
test
mov
pusha
stos
push
scas
lea
je
jp
jne
sbb
add
inc
daa
hlt
inc
and
push
xorb
aaa
sahf
dec
test
fidivrs
mov
adc
fstp
adc
shr
pop
pushl
inc
push
push
repz
cmp
lea
lea
xor
sbb
daa
pushf
dec
xlat
mov
outsl
rcll
js
xchg
lret
add
aaa
sbb
cmp
or
mov
adc
xor
les
testl
sub
clc
sbb
and
dec
xor
js
xchg
mov
adc
adc
lcall
out
and
push
lea
xchg
orb
daa
mov
mov
mov
ret
test
and
cmp
or
cmpsl
mov
mov
xchg
or
sbb
sbbl
enter
push
stc
sbb
cmp
pop
mov
push
ss
push
or
cld
and
add
jne
mov
xor
mov
repz
adc
pop
sbb
fs
push
sub
push
hlt
loope
jb
pusha
lods
adc
loopne
ds
faddl
mov
inc
mov
push
push
jl
js
test
mov
shl
push
lods
jge
repnz
repnz
push
je
cmp
mov
xchg
aam
adc
sti
je
jmp
push
push
dec
push
pop
daa
dec
mov
leave
push
mov
test
adc
js
sbb
jbe
lret
or
and
ss
jo
inc
add
sub
enter
or
pop
push
in
cmc
or
rcrl
repnz
movl
push
add
fisttpll
sbb
dec
mov
in
or
loopne
les
gs
loop
xor
sub
mov
std
add
rorb
push
clc
push
mov
push
rolb
push
repnz
jle
or
inc
sub
and
insb
sarb
sbb
movsb
ja
out
fsubrl
fldt
into
mov
cwtl
pop
stos
push
cs
aas
or
mov
sub
lods
pop
outsb
jg
shl
inc
adc
pop
or
mov
ret
push
pslld
dec
pop
sahf
xchg
out
cmp
je
and
mov
add
rorb
inc
sahf
or
mov
sub
xor
and
or
mov
push
mov
cmpsl
add
test
int3
push
js
mov
or
or
loope
or
push
jge
les
jl
sarb
sbb
mov
popa
mov
js
mov
pop
mov
cmp
xchg
lret
je
mov
cmp
pop
push
inc
xor
sub
mov
daa
inc
lret
add
inc
aas
or
xchg
rclb
fstpt
xor
lods
add
arpl
aas
aaa
ret
fwait
add
push
and
fstpt
das
add
add
mov
ja
push
and
cmp
xor
outsb
sbb
or
in
enter
xchg
push
roll
je
test
sub
ret
addr16
sbb
aad
or
or
dec
lret
sbb
rorl
push
lea
out
subl
dec
cmpsb
pop
fwait
sub
out
jns,pt
dec
fldl
out
dec
rorb
push
in
or
mov
in
sub
add
mov
xor
mov
ffreep
jo
pop
xor
loope
push
rcr
ret
mov
sahf
mov
jg
dec
shlb
mov
xchg
rep
mov
into
jo
mov
cmp
or
dec
fwait
sbb
jp
inc
movsb
jecxz
cmp
aam
mov
mov
scas
xchg
push
pop
fs
or
add
sbb
push
loopne
call
pop
jne
in
sbbl
lret
and
subb
sub
cmp
xchg
sub
enter
pop
sub
out
jae
cmpsb
push
xchg
push
cwtl
cmp
dec
push
or
push
pusha
loopne
inc
cwtl
push
inc
rcll
fs
cmp
mov
cwtl
pop
mov
sub
jge
add
fcompl
push
xor
or
add
hlt
and
adc
aam
push
jmp
and
out
test
xlat
data16
fdivs
jo
insl
out
test
cs
test
xchg
lahf
roll
mov
stos
ret
ficoms
inc
adc
add
push
pop
mov
jb
mov
jp
xchg
push
pusha
adc
movsb
es
fcmovnb
add
cmc
repnz
sub
add
adc
test
push
add
fidivrl
pop
imul
adc
inc
jnp
test
aam
mov
loope
loope
xor
cmp
or
or
xor
xor
push
loop
aad
pop
or
das
loop
push
jo
or
push
ss
pop
jle
xor
xor
add
outsl
neg
out
adc
jbe
dec
test
jl
jns
and
test
sbb
push
xor
je
push
push
pop
rcr
dec
cmc
pop
dec
mov
lea
pusha
add
pusha
in
shr
add
push
cmpsb
push
pusha
pop
jb
mov
leave
adc
sub
and
push
pop
repnz
cmp
inc
xchg
or
je
xchg
jae
cmp
repnz
in
dec
je
ficoms
push
ja
imul
mov
fsts
mov
stc
loopne
fistl
cmp
push
add
xor
cmpsb
or
mov
test
popa
pop
fadds
mov
push
loop
fwait
lret
fbstp
fs
push
push
push
repz
push
or
inc
inc
adc
pop
mov
sub
mov
inc
fldt
mov
xchg
dec
jg
sar
pushf
jbe
test
cs
inc
xor
ret
push
ljmp
fsubr
sub
mov
mov
into
xor
sbb
push
inc
lock
bound
repnz
aas
nop
clc
and
sbb
mov
scas
inc
mov
je
inc
pop
subl
call
add
lea
sahf
test
adc
add
ja
inc
je
cwtl
or
test
adc
rcl
adc
dec
adc
dec
add
mov
push
roll
cmp
inc
flds
fs
cmp
jae
inc
cmp
or
hlt
je
cs
jl
pop
sbb
cmp
js
aam
sbbb
movsb
xor
xchg
xor
stos
repnz
cmpsb
push
clc
add
and
sbb
sub
insb
testb
or
rcrl
add
push
add
push
push
push
sbb
cmp
adc
cmp
adc
iret
push
or
in
leave
or
lea
sbb
inc
jmp
mov
mov
sub
inc
dec
es
outsl
dec
jb
incb
je
lcall
movb
pop
jl
ljmp
mov
jmp
fs
lea
lea
dec
dec
push
or
pusha
sbb
je
psubsw
or
pop
cmp
and
adc
inc
adc
or
sub
dec
fiadds
push
push
into
sub
or
pop
add
inc
sbb
lock
xor
cwtl
or
push
aad
in
mov
or
xchg
loope
pushl
fidivrs
or
sahf
rorl
mov
jae
cmp
mov
push
lahf
mov
or
inc
push
sbb
add
cli
movsb
dec
mov
cmp
es
cs
and
or
xchg
mov
inc
lcall
push
div
add
loopne
out
pop
pusha
aam
jmp
jecxz
xchg
adc
adcb
mov
add
cwtl
dec
movsb
ljmp
mov
cmp
mov
xchg
xchg
daa
xor
add
xchg
push
push
fs
lock
orb
push
adc
test
push
outsl
popf
mov
sub
jne
imul
outsb
push
or
pop
out
clc
test
insl
out
push
add
mov
mov
insb
rolb
mov
and
push
adc
and
imul
sahf
push
or
xlat
sub
decl
leave
dec
repz
sub
lock
inc
or
enter
sbb
dec
cmpsl
leave
outsb
sbbl
inc
sbb
adc
dec
xor
enter
test
add
push
push
pop
jmp
pop
testb
cmpsl
scas
lret
pop
push
mov
cs
faddl
sbb
mov
loope
xorl
test
sbb
fisttps
icebp
gs
cltd
cltd
fnstenv
lcall
leave
mov
jmp
mov
popa
fistl
in
test
mov
push
adc
ret
mov
push
lret
sbb
in
and
mov
bound
xor
imul
mov
jmp
aas
adc
fdivl
ja
jns
xor
push
arpl
iret
sub
and
lret
mov
push
adc
movsb
or
xor
and
dec
addl
mov
inc
sub
adc
mov
push
xor
and
add
and
xor
sub
dec
push
pop
mov
dec
cmp
or
xor
cmp
jg
das
popa
xchg
push
pop
mov
es
push
mov
mov
sbb
lret
or
sub
mov
cmp
cld
das
shl
mov
add
add
push
inc
mov
and
lea
pop
or
sbb
cmp
dec
js,pn
or
jmp
sub
fwait
mov
lea
or
add
pop
pop
movsb
add
into
pop
cmp
sbb
lcall
adc
and
inc
jg
leave
pop
mov
call
mov
push
mov
inc
xor
shlb
addr16
xchg
push
nop
test
adc
cmp
dec
xor
ss
and
shll
add
and
add
lret
mov
push
jl
lcall
xor
add
adc
iret
fmuls
push
and
or
push
or
neg
sbb
push
sub
and
repnz
push
adc
in
push
push
mov
dec
cmp
test
test
mov
sub
adc
add
lret
mov
aas
add
jle
and
adc
call
out
dec
fcoms
dec
jmp
aad
adc
js
mov
jg
je
cmp
loopne
pop
js
test
mov
test
fs
xor
ds
loope
or
sar
sar
cmp
jle
mov
mov
bound
lock
pop
test
and
and
adc
pop
fwait
cli
cmp
xchg
or
nop
les
add
push
jg
aam
into
scas
insb
sbb
jae
lcall
add
in
xchg
cmp
je
mov
loop
lods
dec
sbb
adc
movsl
pusha
jo
ret
shlb
sbb
es
lods
dec
je
clc
cmp
xlat
dec
insl
and
pop
ret
lock
push
negb
mov
xor
aas
jmp
adc
stos
adc
push
rclb
cmp
data16
hlt
loopne
cs
pop
dec
sub
rclb
push
pop
cmp
cmp
or
lock
push
js
xor
lret
inc
ret
push
sub
add
les
jecxz
lock
div
lea
lea
cmpsl
xor
or
push
rolb
xorb
pusha
pop
pop
or
cmp
push
sbb
dec
add
sbb
jl
cmp
adc
adc
into
and
js
lds
push
add
mov
xor
dec
dec
lret
jg
sbb
int3
jl
lea
mov
and
mov
mov
enter
adc
adc
sub
loopw
lahf
push
sub
notb
out
mov
jne
and
addb
clc
adc
pop
cmp
push
or
dec
test
je
mov
xchg
subl
inc
and
and
push
imul
decl
mov
fwait
cmpsb
adc
sbb
xor
or
pop
adc
cmpsb
popf
lret
rorb
out
inc
adcb
les
into
adc
inc
fiaddl
pop
add
test
jl
imul
xchg
roll
mov
out
pop
adc
ja
mov
or
out
inc
and
fistpl
push
xor
xor
jbe
hlt
push
popf
xor
add
insb
cld
iret
cmp
mov
dec
sub
xchg
das
out
dec
or
je
int
mov
or
or
sti
outsb
iret
cli
mov
push
push
pop
push
test
movsl
adcb
add
into
dec
cmp
add
mov
adc
pop
xchg
adc
ret
jg
repz
push
call
ds
sbb
cmp
je
mov
push
lcall
or
fiaddl
inc
outsb
adc
in
cmpsb
lret
xor
add
or
mov
dec
sbb
push
xchg
rcrl
mov
sbb
mov
adc
or
adc
sbb
sbbb
xchg
push
push
imul
inc
addb
sbb
dec
jge
push
lods
xor
jne
movsl
push
xchg
adc
sbbb
push
cmp
cmp
sub
js
mov
pushf
jl
sbb
and
push
lea
mov
ds
mov
pop
inc
jle
dec
insl
mov
mov
lock
std
call
arpl
pop
jecxz
ret
loopne
loop
push
stc
lret
js
dec
sub
jle
jnp
icebp
imul
data16
add
enter
jmp
pop
hlt
out
xchg
rorb
je
addb
sbb
rcrl
movl
xor
mov
mov
pop
call
jae
xor
inc
mov
adc
aas
stos
xor
loopne
outsl
movsb
mov
push
lock
je
inc
and
add
shlb
dec
mov
fistl
xorl
inc
and
mov
fidivs
ss
fisttps
sbb
repz
scas
lea
mov
mov
lea
sub
mov
add
aaa
dec
push
sbb
daa
push
iret
repz
sub
ljmp
test
ret
and
in
add
push
rclb
mov
sub
mov
cmpsb
and
sub
ja
add
jne
xor
ret
and
je
sub
and
add
push
aad
and
push
mov
dec
push
ja
inc
ljmp
pop
add
test
pop
inc
add
mov
daa
mov
push
adc
adc
js
mov
push
jae
ret
pusha
je
pusha
addb
scas
and
push
or
int3
push
in
push
sub
sub
es
add
cmp
ret
jo
test
into
mov
loopne
mov
fs
out
es
lret
orb
xor
xchg
xor
inc
dec
std
mov
dec
arpl
add
cmp
lods
les
loope
pop
jo
push
inc
addb
es
push
push
push
mov
xchg
lret
lea
jle
out
pop
xor
je
xchg
cmpb
pop
sub
xchg
sub
pop
addr16
dec
je
lea
sti
dec
movsb
inc
sub
mov
push
adc
sti
shlb
jns
test
mov
dec
or
rorl
dec
dec
push
test
push
xor
test
pop
cmp
cmpsb
or
insl
sbbb
divb
push
xor
inc
adc
mov
cmp
sub
and
push
push
push
inc
rdpmc
jno
push
mov
into
lods
out
repnz
sub
pop
movsb
sbb
push
pop
cmp
jb
movl
inc
scas
out
jl
cmpsl
inc
jg
inc
dec
in
sub
jo
out
ret
inc
xlat
lfs
mov
nop
mov
fdivs
add
cmp
jne
xchg
push
jae
pop
pop
fstpt
push
loopne
push
dec
or
xor
push
push
std
insl
enter
mov
insb
cmp
dec
mov
and
out
dec
mov
add
das
loope
jl
push
or
imul
test
pop
pop
inc
sub
and
int3
call
push
ss
cwtl
dec
hlt
ds
in
pop
xor
adc
clc
js
test
call
push
or
loopne
mov
inc
mov
add
jb
cmp
ljmp
loopne
cltd
inc
cmp
jl
jmp
movsb
mov
test
inc
cmp
test
adc
mov
jl
push
push
sub
dec
mov
mov
test
xchg
jecxz
rcll
movl
cmp
add
ret
pop
cmp
mov
mov
rclb
cmpsb
add
inc
gs
mov
fstps
and
or
push
and
jmp
cmp
cmp
jno
jl
pop
cmp
mov
and
cmp
or
push
int
push
clc
test
adc
add
cmp
or
inc
jmp
cs
daa
lods
stos
mov
add
popa
cmpsb
dec
jp
and
push
les
inc
push
inc
jl
pop
sbb
test
sub
and
sbb
xchg
jmp
sahf
in
jmp
ljmp
sahf
inc
lcall
and
inc
pop
mov
push
mov
inc
xor
movsl
and
sbb
mov
xchg
and
lock
push
hlt
mov
mov
sub
scas
pop
lods
xchg
loope
push
inc
or
sub
rcrl
xor
test
jmp
xor
pusha
mov
pop
xchg
add
mov
mov
or
sbbl
pop
mov
insb
xor
push
jns
mov
cltd
add
imul
sbb
es
mov
push
ljmp
cmp
lahf
rorb
dec
inc
rolb
dec
or
fdivl
pop
loope
sub
inc
cmp
ds
push
pushf
or
xor
inc
add
mov
out
inc
sbb
dec
cld
adc
mov
cmp
ret
or
xor
inc
mov
push
out
push
mov
dec
cmp
sti
mov
mov
pop
jns
xchg
inc
jl
add
push
xchg
aad
inc
aaa
and
sub
cmp
ret
test
mov
push
es
sub
insb
adc
orl
dec
cmp
and
imull
xchg
jge,pn
sub
fldcw
push
mov
and
mov
ret
and
movsb
dec
cmpsb
in
repnz
mov
aas
aas
or
mov
adc
jmp
nop
insb
enter
sub
call
mov
sub
je
inc
punpckhbw
aas
les
cmp
ja
adc
push
xor
jge
sbb
imul
leave
pop
or
xor
xor
jecxz
test
push
in
int3
test
in
adc
aad
xchg
or
and
mov
xchg
push
inc
cmp
pop
or
adc
mov
inc
jg
adc
fcomp
test
cmp
leave
xchg
sar
pop
mov
add
add
cmp
jg
movsl
nop
imul
sbb
xor
xor
mov
loopne
adc
rorb
xor
or
imulb
xor
mov
insb
aaa
dec
push
jns
fcompl
sbb
adc
adc
out
sub
sbb
pop
xchg
lods
subb
jb
xchg
pusha
xor
or
sub
or
add
or
ficoms
jl
or
push
shr
xchg
les
cmp
lea
cmp
inc
add
mov
sub
cmp
push
push
sub
add
andl
neg
cmp
inc
inc
add
dec
adc
pop
xchg
test
and
dec
add
add
inc
add
add
add
push
inc
push
add
subl
push
lea
add
xor
leave
lds
inc
pop
lods
pop
and
xor
inc
lods
js
leave
sub
jp
les
push
mov
jo
cmc
mov
shl
cmp
jne
cmpl
je
inc
add
cmp
jle
je
mov
rolb
fistpl
jl
add
and
jecxz
movsl
sbb
mov
inc
push
xchg
mov
adc
ficoml
dec
xor
cmp
sahf
push
xor
mov
js
pop
dec
clc
xor
mov
adc
incl
fistl
inc
dec
cmp
jle
pop
pop
add
or
test
test
hlt
or
inc
addr16
pop
das
sbb
mov
mov
jmp
and
cmpsl
push
jl
add
icebp
xlat
adc
pop
inc
sbb
inc
clc
and
jbe
pop
lea
jbe
pop
out
add
adc
xor
nop
push
xchg
flds
mov
dec
mov
jns
adcl
xor
add
add
leave
ret
into
ret
out
push
mov
addl
adc
mov
add
mov
and
lahf
push
lret
adc
mov
arpl
mov
mov
push
pop
loope
xchg
movsb
inc
sbb
cmp
rcll
popa
outsb
pusha
ret
xlat
jg
cld
mov
in
mov
push
fmuls
add
mov
rorb
sahf
push
sti
jb
xor
and
add
xchg
ss
push
jmp
and
or
cli
daa
test
outsb
mov
push
push
xchg
xorb
das
jo
push
sub
push
sub
fnstsw
sbb
std
push
xor
test
mov
ss
adc
push
sub
or
jno
popf
and
nop
sub
mov
lods
add
xor
popa
xor
call
and
jg
add
push
mov
push
in
xchg
ds
fsts
add
outsl
cli
adc
or
les
cld
push
int
inc
adc
call
xor
imulb
ss
in
xchg
repz
lods
push
pop
jno
imul
lret
stc
pop
mov
lcall
or
fcoms
or
shrb
es
test
call
int3
inc
test
add
cmp
ja
lock
cmp
sbb
xor
hlt
aas
rclb
movl
xor
mov
or
mov
push
push
sbb
pop
adc
sbb
push
or
out
pop
pop
pusha
fs
xchg
lret
or
imul
out
push
insb
push
insl
outsb
and
mov
and
lods
adc
movb
xor
shrl
mov
jge
daa
jo
pop
ret
imul
psraw
jno
outsl
sbb
dec
xchg
lods
outsb
add
orl
add
and
mov
inc
fisttps
dec
out
push
out
test
pop
mov
sbb
inc
push
inc
push
jb
jb
adc
mov
into
add
jns
push
idivl
jne
rcrl
pop
xchg
push
push
je
push
rcrl
flds
push
adc
dec
dec
ret
add
inc
mov
push
mov
lret
xor
push
xchg
les
push
cmpb
push
ffreep
adc
popa
in
adc
sub
sti
xchg
pop
xor
push
or
lock
xchg
ja
and
data16
scas
add
cmpsb
fidivrl
mov
fiadds
xor
pop
stos
cltd
inc
mov
and
push
jb
add
mov
cmp
out
inc
or
cmp
daa
and
movsl
aaa
movsb
xor
add
jle
hlt
les
pop
or
leave
adc
add
rorb
push
cmp
push
add
add
inc
mov
movsl
jo
jl
clc
jbe
sub
lret
push
rcrl
sub
ret
xor
scas
jp
pop
mov
je
shll
loop
ret
mov
inc
enter
pusha
lret
xor
aaa
arpl
stc
jl
in
sbb
pop
stos
scas
lods
jecxz
leave
cmpsb
mov
add
and
xchg
mov
add
push
and
je
sbb
mov
jle
cmp
add
dec
js
push
push
hlt
jp
roll
push
rcrl
pop
cmc
push
jecxz
cmp
mov
notb
fldpi
inc
adc
aad
xor
xlat
int
ret
cmp
lods
int
mov
loopne
dec
adc
jno
mov
cwtl
in
int
aad
arpl
mov
inc
aad
adc
pop
xor
inc
add
js
xor
cld
mov
xchg
pop
fwait
xchg
pop
dec
inc
pop
mov
dec
ret
mov
imul
in
ret
dec
es
jo
jbe
xor
daa
std
and
sti
pop
or
cli
mov
outsl
test
mov
add
fisttpl
test
or
inc
push
pop
out
inc
mov
shrl
test
dec
cmp
push
lea
push
sub
cmp
into
test
push
mov
and
or
fs
dec
or
cmp
inc
or
add
inc
push
jg
push
aaa
lock
dec
inc
push
xor
repnz
push
idivb
and
orl
repz
pop
push
inc
push
stc
rcll
jmp
push
rcrl
iret
add
adcb
add
adc
sub
das
dec
jge
and
adc
mov
sbb
adc
dec
sub
xor
test
ret
xchg
xor
mov
and
test
mov
push
mov
push
push
stc
sub
dec
iret
adc
dec
fmul
sub
sbb
int3
or
xchg
popa
push
ss
sbb
add
dec
sbb
sbb
ret
jae
jecxz
ljmp
sbb
jg
xor
and
hlt
xor
nop
push
cld
and
jmp
mov
loop
xchg
dec
imul
push
mov
call
nop
lods
sub
cwtl
lahf
mov
unpckhps
push
jmp
sbb
repz
adc
fistl
pop
or
sbb
dec
xor
and
push
add
sarl
and
adc
leave
adc
roll
pop
or
aam
daa
je
sub
mov
in
loope
adc
adc
clc
mov
push
push
add
mov
inc
cld
jmp
xor
push
jno
in
outsb
xor
add
xor
mull
ret
xor
pop
xchg
pushf
push
or
shr
popa
cmpsl
or
or
ljmp
adc
jl,pn
pop
in
sub
lds
push
xchg
sbb
call
nopl
push
rcll
push
push
adc
add
mov
sbb
push
add
and
nop
xchg
sbb
sahf
mov
xor
call
inc
mov
and
cmp
sbb
test
notb
in
lret
cmp
adc
dec
push
cmp
push
popf
pop
add
cmp
sub
ljmp
lea
jecxz
pop
push
fldt
sub
pop
imulb
rcll
cmp
imul
repz
fwait
inc
add
xchg
mov
jecxz
mov
arpl
sub
std
ret
dec
push
xchg
aad
out
xchg
out
jge
test
add
jge
fcomps
adcb
jno
int3
ficomps
mov
pop
jp
adc
arpl
push
sbb
push
xor
enter
mov
fdivr
or
add
xchg
mov
test
push
push
cmp
pop
loop
lods
jbe
xchg
xchg
xor
cmp
pusha
das
mul
shll
pusha
dec
into
mov
inc
push
inc
pop
jecxz
mov
mov
add
test
dec
cmp
movsl
loopne
pop
pop
jno
and
dec
push
xadd
add
aaa
push
fs
push
imul
push
inc
adc
leave
dec
pop
fs
push
sub
xchg
popa
pop
sub
sub
add
pop
adc
jo
xor
mov
arpl
cmpsl
or
daa
es
adc
adc
sbbb
aam
aas
jle
dec
aad
jle
rolb
jg
mov
cwtl
add
je
sub
adc
push
js
add
pusha
data16
adc
mov
push
or
adc
adc
loopne
int3
lret
inc
adc
push
push
mov
aaa
inc
aam
nop
sbb
or
push
loope
and
data16
push
push
dec
add
push
pop
in
js
cmp
out
push
clc
stc
ret
dec
add
imul
ss
or
adc
fdivl
loopne
in
or
jmp
push
sbb
pop
fcoms
push
sbb
pop
sbb
mov
fwait
sbb
pop
xor
mov
lahf
cmp
shr
or
mov
adc
or
and
in
mov
jae
out
or
stos
fsubr
ljmp
adc
jg
fwait
and
loopne
in
xor
lahf
lea
movl
sbb
dec
push
sub
push
pop
xchg
shlb
and
ficoms
or
test
mov
adc
and
lods
das
int
outsb
adc
mov
negl
or
movsl
mov
mov
mov
mov
inc
enter
xor
xor
lods
cmp
lods
dec
rorl
fdiv
push
inc
mov
mov
movsb
ds
adc
pop
mov
xor
rolb
xor
loopne
gs
inc
xor
jl
jno
or
in
fdivr
rorb
pusha
fisttps
jg
fdivl
push
cmp
jge
lea
cmp
jge
cs
pop
jo
cmc
push
mov
in
cmp
pop
cmp
or
adc
sti
xchg
inc
dec
and
jg
lods
cmp
mov
xchg
pushf
sub
mov
jg
mov
or
shll
or
inc
mov
jne
inc
mov
mov
dec
add
addr16
inc
push
xlat
sbb
pop
xlat
in
mov
dec
push
jecxz
test
push
sarl
mov
fdivl
xor
in
add
daa
cmp
jnp
add
enter
push
mov
cs
jae
jecxz
lcall
sbb
or
into
mov
cmp
xchg
js
dec
dec
mov
movsl
sub
mov
cmpsl
ds
jp
jle
call
or
lret
cs
ljmp
add
pop
mov
mov
inc
ljmp
push
sbb
adc
mov
xchg
repz
cmc
jge
pop
push
cmc
mov
test
orl
add
mov
outsb
xchg
push
inc
pop
mov
mov
add
xchg
mov
sbb
cmp
cmp
xlat
lods
scas
fbld
sbb
mulb
lods
cmp
aaa
xchg
mov
lock
pop
and
mov
cmp
sbb
and
jge
js
inc
data16
xor
add
test
push
addr16
jae
iret
and
sub
idivb
push
mov
or
test
fdivrs
sbb
xchg
or
cwtl
loope
or
insb
icebp
pop
lret
push
jb
int
xlat
inc
cmc
lods
inc
sbbb
rcll
and
scas
loopne
or
test
or
add
push
jmp
push
push
and
xchg
lea
add
add
cmp
jbe
and
jmp
sbb
push
lea
and
lahf
push
add
add
or
adc
sahf
jb
test
lock
or
pop
mov
pusha
adc
mov
jg
jo
test
inc
ljmp
pop
jg
loope
lcall
les
out
jne
lret
inc
xchg
mov
das
mov
sbb
int
or
cmp
jne
lea
inc
push
inc
shlb
pusha
sub
cs
int
jg
ss
mov
imul
jmp
mov
mov
mov
xchg
or
mov
repnz
inc
cltd
and
cmp
cld
pop
add
sar
out
jge
mov
jo
or
pop
jle
mov
mov
loopne
js
add
sarl
and
mov
shl
and
aad
pop
mov
cmp
sub
cld
nop
stc
xchg
or
mov
subps
dec
add
pop
adc
subb
js
shl
not
test
sbb
push
pusha
xchg
orb
jge
mov
push
lods
xor
sub
or
addr16
popa
dec
into
mov
pusha
mov
add
popf
rclb
jne
insl
inc
repz
movsb
jae
or
pop
sahf
mov
jo
xor
pop
lods
xor
push
or
addb
ficoml
pop
inc
lret
inc
enter
sbb
sbb
insl
or
insb
aas
leave
loopne
pop
jo
add
cmp
push
jl
je
call
sub
ss
xchg
sbbl
popf
push
inc
cmovae
fisttpl
inc
xor
cmp
mov
xor
pop
jle
pop
inc
addb
and
insb
pop
inc
push
out
mov
inc
sbb
sub
fcompl
add
push
sub
inc
loopne
lods
mov
mov
dec
pop
xchg
or
lea
testb
push
mov
jbe
sub
or
jl
mov
or
add
inc
sarb
orb
add
test
sub
pop
jo
je
or
shll
cld
mov
jle
mov
inc
enter
mov
orl
jle
fnsave
mov
or
mov
into
pop
outsb
or
mov
int3
mov
jge
push
dec
aam
dec
adc
subl
inc
add
andl
pop
roll
pop
adcb
pop
or
add
or
jp
fnstsw
mov
xor
or
jnp
stos
jne
jns
faddl
adc
sti
and
je
adc
std
and
lret
add
scas
hlt
push
lock
cmc
test
divb
pop
ret
notl
mov
nop
leave
les
pop
dec
adcl
or
dec
loop
mov
rclb
sti
adc
xor
mov
add
js
jbe
add
add
test
pop
adc
ret
add
fistpll
push
push
dec
and
xchg
mov
jbe
int3
ret
sbb
repnz
int3
les
pop
sbb
sbb
mov
mov
or
or
xor
lcall
or
test
mov
xchg
sub
cmp
mov
in
sub
and
push
push
xorl
popl
decl
cmp
daa
pushf
enter
and
add
or
aam
gs
dec
sbbb
loop
aad
push
pop
inc
jmp
and
jg
add
testl
inc
add
adc
int3
mov
in
push
dec
rolb
fisubrs
pop
adc
fidivl
lea
sbb
ret
pop
push
jne
mov
mov
jmp
add
mov
or
call
loop
or
push
push
push
scas
dec
out
pusha
pop
fnstcw
adc
aaa
push
xor
push
sbb
lods
hlt
mov
sbb
pop
and
add
jg
adc
aam
jmp
sbbb
mov
xor
lods
xchg
pusha
ss
xchg
xor
jg
xchg
jl,pt
les
and
and
fwait
sub
xchg
aas
push
inc
adc
call
push
in
aad
js
iret
cmp
mov
ficoms
push
push
nop
lock
mov
add
shlb
aas
push
fstpt
into
push
sbb
mov
adc
dec
lods
js
push
sbb
aas
cmp
pop
pop
dec
and
xchg
movsl
filds
xchg
push
in
sbb
add
lahf
inc
adc
inc
repz
or
sbb
xchg
int
mov
or
sub
nop
call
rcll
mov
mov
scas
stos
faddl
and
xchg
loopne
mov
mov
push
aam
or
or
sub
xchg
push
in
call
pop
js
test
enter
fldt
jne
push
js
mov
movsb
add
hlt
test
jo,pt
test
clc
add
cmp
es
jp
pop
aam
push
adc
gs
lret
leave
sbb
xchg
pop
faddp
and
sbb
jg
ret
mov
insl
sub
push
and
and
add
mov
add
loope
cmpsl
adc
mov
fs
adc
xchg
or
loopne
pop
xor
mov
stc
dec
daa
fbstp
test
push
mov
sbb
pop
mov
xchg
scas
dec
pop
dec
mov
pop
clc
mov
andb
mov
or
push
ror
or
fisttpl
mov
addb
or
test
add
je
xchg
adc
add
push
push
xchg
adcb
lea
js
popa
dec
je
add
mov
daa
jo
xchg
xchg
mov
mov
dec
jo
lret
data16
testb
and
sbb
or
clc
mov
cmp
call
adc
shl
cmp
jo
cs
js
pop
adc
dec
adc
and
dec
in
fnstsw
dec
jo
pop
lods
jnp
out
add
jnp
loop
mov
ja
mov
adc
gs
add
arpl
or
jno
mov
call
or
lds
push
call
lods
pop
les
mov
dec
dec
cmp
xor
or
daa
in
or
dec
xchg
jo
dec
push
mov
push
mov
dec
clc
setne
push
mov
test
data16
cmc
mov
xor
or
dec
or
add
push
xor
push
lcall
adc
xor
mov
ret
xor
mov
xchg
ret
fiaddl
nop
enter
and
out
mov
dec
stc
push
mov
je
mov
add
mov
int3
dec
mov
dec
ret
je
mov
je
add
mov
enter
daa
addb
mov
int3
add
loop
and
mov
xor
cmp
int3
push
jno
add
sbb
and
dec
dec
cs
test
pop
arpl
push
sub
add
sbb
jae
push
xlat
push
push
add
stos
enterw
rcl
test
les
shll
fwait
lods
aaa
mov
stos
or
xor
sbb
call
jmp
mov
sub
lock
inc
in
je
outsl
jno
aad
bsr
daa
sub
push
ret
rcrb
add
pop
and
inc
jne
jnp
ret
push
sub
js
rcll
or
push
adcl
push
xorb
movsb
add
jl
repnz
mov
imul
es
inc
xor
pushf
dec
into
or
test
adc
mov
add
sbb
insb
xor
push
inc
push
in
loop
loopne
lock
sub
add
clc
call
mov
add
cmc
push
pop
cmp
mov
test
test
pop
mov
arpl
int
cmpsl
je
push
insl
cmp
pop
int3
and
bnd
inc
jl
add
mov
mov
or
push
push
add
pop
ds
sbb
and
ja
es
rorl
sahf
cld
mov
stc
cmp
mov
xchg
or
je
dec
into
loop
shll
imul
sbb
rcrb
push
cld
jmp
test
lods
sub
repnz
add
mov
jo
xchg
push
dec
jne
pop
dec
sub
pop
or
rorl
sub
filds
std
mov
or
sub
insl
inc
push
xchg
pusha
mov
dec
dec
fistl
push
je
add
add
push
std
fidivs
sbb
mov
pop
in
jmp
mov
adc
lret
add
movsl
cmpl
cld
pushf
repz
mov
add
fmull
xchg
or
cmp
and
pop
sbb
cwtl
adcl
pop
xchg
jno
add
dec
cmp
je
cmp
loopne
notb
lods
add
xor
std
addr16
lea
lea
loopne
ret
nop
test
andb
cmp
dec
push
mov
or
lea
xchg
xchg
sbb
and
dec
insl
outsb
jmp
push
cwtl
push
mov
and
dec
scas
nop
rcrb
pushw
sahf
xor
shl
pop
dec
xchg
cmp
mov
aad
pushf
push
and
mov
into
cmp
jne
push
jne
cmp
pop
push
or
cmp
lahf
dec
call
inc
cmpsb
jmp
pop
or
mov
push
and
and
scas
adc
sub
cld
push
addb
add
cmp
rorl
push
xor
enter
xor
ret
leave
adc
nop
jg
mov
sbb
push
push
and
xchg
les
loop
xchg
xchg
lods
cli
in
mov
daa
sbb
pop
add
jbe
f2xm1
cmpsb
scas
jno
lods
mov
into
jae
subb
add
dec
xor
out
xlat
xor
inc
dec
inc
pop
dec
dec
xlat
inc
dec
dec
dec
imul
in
inc
push
in
push
cmc
or
pop
aas
mov
jns
in
jp
inc
push
or
inc
mov
xchg
stos
les
and
out
xor
cld
repnz
push
push
insl
pop
mov
sub
clc
xchg
insl
mov
sbb
and
push
stos
aam
xor
push
push
sbb
and
jo
gs
add
jmp
sbb
adcb
inc
mov
and
imul
loopne
inc
xor
sbb
xor
or
or
int3
aam
mov
subb
loopne
cmp
ret
xchg
sbb
fs
push
imul
movl
dec
adc
test
fldl
adc
fs
adc
call
push
enter
ret
mov
cmpsb
outsb
add
sbb
add
xor
int
daa
out
and
push
add
fimuls
shrb
out
xlat
pop
pop
outsl
mov
push
push
or
pop
push
add
cs
push
push
inc
sarb
mov
jbe
dec
or
inc
je
lods
xchg
push
sub
andl
adc
push
mov
pushf
sub
popf
jb
pop
aaa
mov
fstpt
adc
popa
adcb
popa
andb
jne
int
mov
cwtl
sbb
cmp
out
add
fmuls
inc
sub
add
jne
push
mov
push
dec
lds
dec
sub
xchg
inc
rcl
push
push
xchg
mov
js
cmp
add
cli
stc
aaa
hlt
adc
push
mov
push
xor
jbe
out
dec
sbb
xor
cltd
and
dec
call
fsubr
mov
mov
mov
xchg
and
jmp
add
fidivrs
inc
out
outsb
sub
sarl
pop
ficomps
push
xorb
pop
cmp
fsubs
mov
or
or
add
push
jae
inc
in
adc
addr16
xor
dec
ret
loopne
pop
mov
push
mov
inc
das
ret
jle
add
movl
adc
push
pop
jl
addr16
dec
jae
fcomp
inc
mov
mov
pop
movsb
jbe
addr16
push
dec
data16
sbb
push
xchg
sub
addr16
pop
jbe
sub
xor
xor
mov
cmp
adc
push
clc
mov
outsb
dec
xchg
jle
push
lods
aad
mov
jb
cltd
xchg
jb
mov
out
push
out
cmpsl
mov
lahf
adc
inc
sti
xchg
shll
rcll
push
aas
adc
sbbb
xchg
rcrb
adc
clc
addb
in
js
in
loope
pop
sbb
adc
adc
cmp
ss
sbb
or
rcr
fsubr
mov
mov
in
and
fisttpl
sub
sub
fcomps
movsb
stos
sub
or
mov
adc
jmp
in
out
or
sbb
mov
push
mov
xor
sbb
clc
std
je
or
je
scas
sbb
add
mov
inc
jb
add
add
xchg
lahf
adc
push
or
lods
add
pop
andl
sub
fildll
xchg
sub
cmp
popf
adcb
mov
add
pop
add
scas
adc
mov
adc
jl
cmp
mov
testb
jne
push
sti
sub
jmp
sbb
adc
mov
out
xchg
jns
push
jae
mov
int3
jb
cmp
add
pop
adc
cmp
add
js
js
dec
mov
gs
cmp
lret
std
fcoms
inc
cli
mov
mov
push
or
or
xor
ja
mov
push
adc
sub
mov
shlb
hlt
je
dec
je
add
mov
clc
xor
sahf
sbb
movl
cmp
adc
jmp
xor
fstl
cwtl
sbb
pop
cmpsl
xor
jae
leave
push
or
adcl
add
pop
cwtl
dec
loopne
lahf
push
push
call
ljmp
lcall
in
inc
pushf
mov
jb
sti
or
and
filds
jb
ret
ror
ja
add
pusha
dec
lock
jno
mov
aaa
xor
and
mov
fimull
addb
jne
and
pop
xchg
mov
dec
leave
shrl
mov
sahf
sbb
andl
add
xchg
or
mov
in
dec
push
pop
rcl
shlb
add
xor
loopne
cmp
push
push
sub
mov
das
push
repz
adc
aaa
test
inc
lea
dec
mov
clc
cli
rep
das
pop
mov
mov
pop
jg
sbb
orl
add
cmp
outsb
push
into
mov
push
push
adc
adc
mov
fcmove
outsl
push
inc
mov
notl
and
add
inc
mov
fnstsw
adc
cmp
jne
or
push
or
cmp
cmp
jmp
sub
inc
or
movsb
or
cmp
test
leave
push
push
sbb
add
mov
and
push
cmpsl
in
sub
or
push
cwtl
push
jmp
ss
shl
je
xor
test
js
push
mov
and
inc
and
nop
jo
test
pop
mov
pop
lods
adc
push
cmp
addr16
jle
jne
jo
test
cmpb
pop
push
pushf
add
data16
shlb
dec
adc
push
mov
push
imul
aaa
xchg
push
or
dec
int
mov
mov
inc
push
or
rcr
mull
lock
fiadds
enter
pusha
inc
add
lret
sbb
ljmp
fwait
cmpb
sub
jb
jmp
xor
movsb
fstl
adc
add
dec
push
ds
flds
ljmp
lods
sub
push
dec
or
pop
push
add
iret
addr16
aam
jnp
sbb
add
mov
pandn
inc
sbb
xchg
inc
cwtl
adc
mov
inc
mov
rorl
xchg
sbb
pop
sti
pop
xorl
dec
xchg
dec
and
filds
and
lds
cmp
call
cs
cmp
imul
outsl
gs
pop
mov
xchg
dec
insl
inc
push
cmp
pop
sub
sbb
add
inc
and
inc
add
jo
mov
xor
arpl
xor
or
sub
gs
std
adc
push
and
add
iret
insl
jbe
xchg
jl
sbb
mov
cld
jmp
and
pop
sbb
test
mov
add
outsb
xor
jo
add
nop
push
adc
push
sbb
sarl
adc
std
leave
or
xor
arpl
pop
add
push
pusha
mov
call
or
aas
popa
jne
fadds
shrb
lahf
fisttpll
in
lahf
mov
add
negl
insb
sub
movl
fldl
sub
jbe
jbe
outsl
je
or
mov
inc
sub
into
xor
xor
mov
adc
mov
cwtl
sub
out
icebp
or
nop
fldt
pop
pop
push
in
add
repz
ja
mov
sti
xlat
bound
adc
outsb
insb
mov
sub
mov
call
mov
mov
ret
enter
enter
mov
movb
or
out
mov
int3
or
jl
outsb
pop
or
pushf
pushf
or
adc
push
pop
shll
fs
pop
or
xchg
sub
inc
jae
divb
mov
push
push
aam
fisubl
int3
out
pop
lret
int
push
jo
pop
out
xchg
cmpl
add
pusha
sub
sbb
adc
pop
and
cwtl
mov
mov
push
inc
or
or
faddp
and
or
pop
jo
lea
pop
psrld
popf
dec
in
int3
testl
jbe
rcrb
sbb
dec
sub
push
adc
arpl
and
or
aas
mov
subl
loopne
push
scas
push
push
xchg
ja
jbe
push
push
cs
mov
mov
dec
add
add
dec
push
push
rclb
aas
stos
ror
mov
shrl
stos
orl
ja
adc
or
sub
push
iret
sbb
movsl
xchg
inc
add
mov
push
mov
push
pop
mov
sahf
mov
and
into
add
sub
push
add
mov
push
fistpl
clc
mov
subb
xor
push
into
xchg
xor
cmp
cmc
cmc
xchg
mov
movsl
sbb
push
shrl
cmc
cwtl
in
or
imulb
push
dec
add
push
or
push
inc
cmpsb
push
xchg
add
and
add
xchg
inc
push
je
pop
inc
push
push
sarl
aas
pop
insb
cmp
test
sub
sbb
insb
sub
sub
adc
xchg
mov
lea
sub
icebp
adc
xor
jns
push
push
inc
mov
cli
ret
out
or
xchg
push
pop
popf
xor
mov
push
loop
test
mov
lods
test
xchg
sti
mov
adcl
cmc
dec
push
pop
adc
mov
out
push
push
pusha
popa
jl
pop
pop
sub
pushf
aad
cmp
test
lods
pop
push
lds
push
pop
std
mov
in
mov
or
lea
mov
pop
imul
loope
or
mov
mov
sbb
and
mov
sbb
push
jl
adc
push
or
adc
mov
jle
sub
add
pushf
and
xchg
mov
jmp
jne,pt
push
pop
nop
add
adc
lahf
test
push
sbb
xchg
lods
pusha
inc
pop
cwtl
xor
pushw
push
and
insb
fimuls
jo
lea
popf
pushf
imul
test
aad
sbb
mov
push
nop
inc
add
mov
xor
lods
add
call
or
scas
add
cli
cs
push
pop
cmp
pusha
ja
pop
cmp
pop
pushf
das
or
fldcw
or
sub
xor
or
push
fsubrs
mov
fwait
adc
aas
xchg
in
pop
icebp
cmp
lods
or
mov
or
mov
sub
push
ds
push
fdivs
xchg
adc
aad
add
mov
es
adc
orb
adc
test
mov
insb
in
pop
sub
lcall
xor
cmpsl
xor
call
rolb
ja
sub
dec
xchg
pop
push
sub
test
fwait
lods
out
jno
pop
inc
push
sub
push
xchg
mov
imul
pushf
out
mov
inc
jnp
jmp
lret
adc
test
pop
push
jnp
inc
cmpsl
pop
jmp
xor
lock
ljmp
aas
js
sub
sbb
cmp
dec
jae
xchg
mov
in
lcall
push
mov
ljmp
and
inc
push
pusha
xchg
adc
pmullw
mov
dec
in
mov
cmpsl
push
loop
cs
push
push
push
sub
bound
js
inc
pop
push
push
lahf
xor
xchg
fnstsw
mov
je
dec
scas
adc
push
pop
xchg
popf
xor
adc
loopne
sbb
fsubrl
and
mov
push
push
push
cmp
loop
adc
sahf
sbb
adc
push
in
lods
and
or
lret
add
aam
jmp
popf
xor
add
shll
or
std
outsb
ja
cmp
sub
loope
mov
movsl
and
cmp
ret
sbb
dec
sub
aas
cmc
popa
xor
mov
mov
add
add
icebp
sbb
jge
mov
fstpt
mulb
mov
dec
jne
pop
mov
je
aaa
pop
pop
inc
dec
xchg
xchg
xor
imul
rolb
cmp
mov
js
aaa
bound
adc
jo
xchg
pop
das
or
clc
push
push
and
jnp
pusha
inc
sub
inc
imul
pop
push
pop
mov
daa
adc
cmp
and
push
stc
pop
inc
or
stos
je
add
xchg
lock
lea
mov
push
adc
mov
xchg
push
imul
pushf
cmp
adc
enter
pop
push
pusha
movsb
in
enter
in
inc
cmp
inc
es
and
stos
dec
mov
jle
xor
push
jecxz
test
jle
into
icebp
pop
addb
cmpsb
loope
movb
xchg
or
cmpl
xchg
in
push
and
jo
je
mov
arpl
imul
xor
and
mov
pop
push
pop
mov
int
sbb
maxps
pop
push
and
xor
gs
or
cwtl
sub
insl
mov
cli
test
pop
add
sbbb
adc
pop
pusha
adc
mov
sub
mov
jns
xchg
xchg
stc
mov
xor
out
dec
add
xchg
ss
dec
bound
jo
pop
or
js
add
or
aaa
inc
in
xchg
mov
cmp
inc
sub
cmpsb
lret
aaa
test
pop
or
adc
pop
call
es
push
out
loopne
pop
push
or
orb
mov
sahf
loop
jg
add
iret
or
adc
dec
cmpsl
mov
rol
adc
or
inc
shr
in
icebp
nop
aad
push
jg
or
pop
or
pop
sbb
stos
push
mov
adc
pop
es
icebp
fnstcw
out
in
push
sbb
adc
push
enter
sahf
dec
or
mov
pop
test
das
shr
aaa
icebp
add
xor
xchg
out
adc
add
add
lret
jg
adc
in
or
cmpsl
sub
add
pop
jb
gs
aas
inc
pop
sbb
ret
pop
sub
jno
add
push
sub
push
jb
inc
cld
out
aad
ljmp
js
pop
jle
mov
cmp
movsb
inc
mov
js
sbb
or
jo
enter
and
push
sub
lahf
jbe
mov
cmpsb
push
xor
mov
and
sub
loop
pop
or
cmp
movsl
rorl
into
loop
add
inc
loopne
and
sub
sub
mov
je
jmp
notb
je
push
scas
xor
lahf
sub
xor
gs
inc
sbb
or
cli
add
cmp
scas
push
adcb
sbb
shlb
pop
je
divb
sub
shrb
adc
pop
cld
sbb
xchg
test
lods
mov
inc
pushf
mov
mov
pop
mov
inc
sbb
movsb
add
cmpsb
mov
inc
inc
mov
xor
inc
mov
pop
or
mov
popf
repz
xor
sbb
xchg
sub
mov
loop
adc
mov
insb
push
or
or
out
repz
xchg
add
inc
inc
push
sahf
xchg
adc
sti
mov
sbb
cvttps2pi
jbe
and
push
sbb
addr16
movsb
xchg
mov
repz
rorb
scas
add
dec
or
or
cmp
cld
sub
push
mov
dec
mov
imul
enter
ja
pop
push
adc
add
pop
push
xchg
xor
in
in
ss
rcrb
adc
pop
xchg
frstor
adc
bound
mov
push
pop
outsw
daa
in
repnz
xchg
pop
sbb
sbb
xor
inc
or
mov
and
cmpsb
insl
or
pop
sub
fsub
inc
push
mov
movsl
push
inc
cmp
adc
adc
cmpsl
pop
int
in
push
jb
ret
mov
pop
or
add
ja
adc
jb
pop
call
in
push
pushf
lret
clc
cld
cwtl
gs
sub
xchg
and
cmp
nop
push
xchg
push
mov
and
or
jge
adc
push
test
pop
or
add
cmp
les
adc
cltd
cmp
pop
in
jg
push
mov
cmp
pop
pop
cwtl
add
mov
xchg
orl
jo
push
add
dec
test
sub
in
mov
aas
xor
mov
jb
or
in
and
or
push
lahf
xchg
fcmovnb
jo
pop
nop
pop
add
movsb
push
aas
aas
js
outsb
cmp
push
push
or
pusha
inc
and
push
jge
or
mov
mov
xor
and
sbb
adc
in
sbb
pop
sub
inc
out
imul
stos
sbb
jb
lods
es
adc
and
adc
shl
lcall
aas
sbb
push
or
loope
pop
jb
jb
or
pop
ret
je
inc
push
inc
lods
jb
sahf
inc
cmpsl
sbb
daa
or
cmp
icebp
cmp
xor
push
jns
xchg
mov
and
and
fidivs
push
sbb
sbb
in
xchg
daa
and
xor
mov
sbb
aaa
andb
and
inc
sub
cmp
jo
pusha
pop
xchg
add
lods
pop
dec
xor
xchg
shll
imull
addr16
jo
jb
leave
xor
mov
sub
dec
sbb
jle
jge
addr16
sub
jns
in
sub
sub
mov
lds
push
lcall
pushf
pop
and
adc
fistps
push
inc
int3
push
pop
aas
pushf
pushf
mov
add
cmpb
inc
pop
cmp
cmp
add
subl
mov
cmp
cs
mov
je
pop
mov
xor
push
cmp
xor
xor
in
add
add
xchg
in
loope
gs
lods
pop
lahf
add
stc
xor
add
leave
pop
adc
adc
jne
stos
and
cmp
pop
int
scas
and
push
add
add
and
dec
rcrb
sti
cltd
push
cmp
fstl
lods
add
les
add
popa
add
add
call
mov
sub
xor
cmp
xchg
push
out
jae
cmp
push
mov
cmp
in
push
clc
pop
in
in
xchg
aad
pushf
xchg
sbb
and
fwait
and
jl
call
insb
sbb
rcll
ljmp
jne
dec
cmp
mov
mov
loopne
mov
jge
mov
add
inc
adc
dec
push
clc
xchg
je
cmpsl
test
sbb
adc
test
add
mov
insb
and
outsl
push
rorb
daa
pushf
sarb
push
mov
fcoms
call
push
or
ret
pop
lahf
mov
push
jno
adcb
fdiv
dec
test
or
sub
outsb
pop
sbb
rorb
pop
pop
push
fs
add
dec
mov
mov
push
enter
clc
addl
sub
or
pushw
and
inc
cmpb
orb
dec
pushaw
mov
mov
popa
in
in
add
adc
add
sti
inc
dec
gs
adc
adc
arpl
jo
mov
push
pusha
rcll
push
ret
push
add
pop
mov
clc
and
pop
lock
add
or
mov
shll
popf
push
and
sbbb
or
ret
mov
sbb
rol
push
jmp
push
adc
out
movsl
add
test
nop
mov
push
add
add
push
jmp
sub
cmp
imul
push
cmp
aaa
push
lcall
aam
jbe
xchg
jg
data16
sbb
pop
hlt
dec
and
push
lock
mov
es
stos
je
cltd
mov
mov
clc
sti
cltd
mov
mov
mov
cwtl
call
add
add
add
cmp
dec
mov
dec
mov
pop
inc
xor
fnstcw
int3
jecxz
lea
pushw
sbb
andb
int3
sbb
and
adc
inc
mov
ret
sub
sub
pop
push
adc
lcall
sub
sahf
push
dec
lea
mov
or
pop
mov
gs
pop
sbb
xchg
inc
inc
js
insb
shrb
mov
ss
sub
cwtl
leave
popf
in
jne
jns
mov
movsb
loopne
insb
or
fnstcw
pop
test
mov
or
mov
or
and
ss
jg
inc
push
adc
add
sbb
jne
or
test
pop
pop
sub
mov
and
sbb
push
imul
cmpsb
push
push
addr16
push
mov
add
pop
sbb
fdivrs
arpl
cltd
ret
movsb
jne
inc
or
orb
popw
cmpl
jge
mov
pop
mov
push
mov
dec
pop
pop
pop
push
jmp
js
ret
pop
jne
mov
dec
std
shlb
cmp
ret
fistpl
or
aas
mov
cs
push
jl
clc
add
test
push
add
inc
dec
nop
pop
dec
mov
adc
repnz
ds
push
pop
lret
sub
adc
call
ja
push
add
push
sub
test
inc
add
and
push
jl
inc
enter
js
subb
push
inc
out
jmp
sub
or
or
cwtl
repnz
xchg
addr16
pop
jo
add
push
jle
loop
lea
inc
movsl
mov
inc
outsl
loopne
mov
mov
stc
sub
inc
test
lock
dec
sbb
out
xchg
adc
pop
pop
out
xchg
dec
add
shlb
cmpsl
push
fidivs
in
fidivl
xchg
and
push
push
enter
lock
push
adc
push
mov
mov
dec
mov
push
pop
and
rolb
ds
cmp
jb
daa
cmpl
push
sbb
fbstp
sbb
sbb
sbb
xchg
cmp
inc
push
cmpsb
mov
xor
iret
cmc
cmp
or
or
sbb
push
push
dec
rcrl
sbb
jmp
loopne
js
aad
or
popa
leave
ja
sub
push
clc
add
loopne
cmp
stos
shlb
inc
pop
adcl
pop
xor
scas
pop
dec
cmp
pusha
mov
add
sub
xchg
dec
mov
pop
andb
or
sub
add
push
rolb
xchg
out
pop
ljmp
push
lea
into
mov
or
das
movsl
push
xor
xchg
int3
mov
cmp
jbe
sub
or
sbb
or
sbb
pop
leave
xchg
cmp
or
das
add
out
mov
insl
or
cmp
xor
arpl
sti
push
sub
ds
dec
movsl
or
dec
jmp
in
pop
or
in
push
mov
cmp
push
movsb
lea
adc
jbe
dec
pusha
adc
push
jl
adc
add
xchg
xor
mov
cmp
test
inc
jbe
xor
mov
push
icebp
xor
add
xlat
mov
add
pop
xchg
fistpll
movsb
sbb
push
repnz
push
popf
orb
lahf
mov
fadds
pop
cmp
mov
sub
push
sbb
push
cltd
mov
shlb
idiv
enter
lahf
and
je
cmp
xchg
sub
in
in
daa
orb
or
stc
and
cmp
jne
iret
sti
lods
shlb
and
xor
popf
rcrb
insb
ja
jmp
test
add
dec
xor
and
fnstsw
push
jl
out
jle
mov
sbb
or
enter
jl
mov
inc
ljmp
mov
push
adc
loopne
and
fnstenvs
mov
sahf
dec
rcll
ficomps
mov
test
mov
or
shlb
mov
fwait
call
mov
adc
cltd
sub
sub
pop
push
fdivrl
jne
iret
sahf
push
pop
pop
ret
jmp
mov
and
jge
inc
cmp
scas
jns
cmp
inc
dec
push
xor
sbb
sbb
sbb
outsl
cs
cs
add
dec
push
into
insl
inc
sahf
and
inc
cmpb
in
enter
jge
cmc
mov
cmp
jge
shll
loope
mov
or
mov
adc
mov
add
jge
inc
mov
xchg
in
xor
push
imul
cli
inc
adc
and
xchg
xor
inc
add
ffree
js
mov
js
lock
push
mov
push
lea
out
pop
jle
clc
stc
js
mov
cmpsb
cmp
push
xor
xor
js
add
icebp
xchg
jl
pop
aaa
insb
inc
test
add
repnz
insl
shrb
jno
inc
je
sub
mov
dec
push
mov
cmp
lahf
and
dec
add
imul
test
push
out
inc
iret
pop
mov
into
push
push
push
cmp
ret
add
lock
mov
fwait
mov
xor
add
mov
pop
in
mov
dec
sub
in
sbb
adc
das
test
jp
pushf
hlt
test
test
pop
add
loopne
sarl
stc
dec
loope
ret
dec
cmp
lock
xor
push
dec
and
push
or
pop
div
xor
jo
incl
or
xchg
gs
and
push
push
pop
jge
dec
adc
out
jl
aad
adc
inc
mov
stos
pop
xor
shrl
ds
aad
and
cmpsb
lods
jg
push
xchg
or
xor
int3
lock
inc
push
enter
add
push
inc
mov
push
sbb
repz
push
jne
and
add
cmp
lahf
dec
inc
cmp
dec
aad
lcall
inc
and
daa
and
push
sub
mov
cmp
jge
lds
pop
pop
enter
bound
call
dec
dec
fidivl
lret
lcall
jbe
add
xor
pop
js
out
aas
jo
mov
xor
push
movsl
addl
adc
add
and
mov
les
sbb
and
inc
dec
and
sub
inc
outsb
dec
jge
jp
fistpll
add
add
scas
or
jne
aas
aad
inc
sbb
add
dec
push
sub
or
popf
out
jmp
dec
xchg
or
sar
inc
or
jb
push
push
push
dec
in
sub
mov
push
fwait
or
adc
add
or
inc
stc
sbb
or
sbb
clc
push
push
sbb
adc
call
aad
mov
lods
adcb
mov
pop
mov
popa
dec
xor
xor
pop
cmp
pop
push
in
sub
sub
mov
jle
cli
or
inc
and
subb
push
inc
cmp
pop
push
pop
popa
pop
loope
sub
mov
xchg
sbb
pop
inc
cmpsl
addb
into
lcall
loopne
xchg
shlb
inc
aaa
mov
sbb
cmp
push
jle
shrl
scas
imul
pop
sbb
push
sarl
jne
pushf
or
insl
pop
cmp
aad
mov
adc
mov
and
xlat
push
sub
xchg
out
aad
mov
jge
ret
sub
je
insl
cmp
jne
and
sub
add
mov
jno
mov
in
mov
and
and
sub
pusha
add
mov
xor
mov
push
mov
and
xor
fistpll
rep
stos
stos
xor
ljmp
xchg
les
out
sbb
ror
shll
cmpxchg
sub
adcb
push
dec
xlat
js
push
push
pop
jb
out
insb
mov
pop
or
mov
nop
fs
and
push
pop
jnp
in
rorl
xor
mov
imul
je
lahf
fwait
dec
daa
mov
leave
or
lods
jno
or
xor
sub
cmp
push
sbb
adc
leave
leave
and
or
push
or
dec
push
aad
cld
push
mov
cmp
push
mov
insb
adcb
int3
jae
push
xchg
push
or
adc
xor
cmp
xchg
enter
fwait
or
adc
nop
aam
mov
daa
js
fs
xor
nop
xchg
or
and
nop
or
and
xor
inc
xor
push
sub
mov
leave
sbb
adc
or
xchg
inc
jb
adc
add
clc
or
mov
fwait
rorb
push
les
fs
and
lods
and
sbb
inc
jb
dec
in
adc
pushf
sbb
xchg
adc
adc
xor
nop
sahf
push
test
push
nop
or
and
and
inc
xor
ss
mov
clc
or
mov
adc
or
adc
mov
dec
xchg
daa
cmpsb
add
adc
jbe
inc
or
movsb
inc
xor
pop
fwait
cwtl
orl
nop
and
nop
or
and
je
xchg
in
adc
adc
cmp
and
adc
fs
mov
sbb
and
fs
sub
xchg
inc
xchg
add
and
sbb
call
in
cmp
or
adc
or
xchg
xchg
pop
mov
fs
push
rolb
test
adc
inc
mov
sarl
and
or
jl
jo
nop
or
or
fwait
dec
dec
push
leave
pop
aam
push
and
jb
cmove
cmp
xor
in
inc
xor
cld
or
cs
in
or
mov
ljmp
rorb
shlb
mov
enter
push
xchg
dec
mov
js
inc
xor
sbb
dec
push
leave
fs
push
xchg
inc
jb
int3
or
push
sbb
dec
sbb
mov
nop
or
push
lock
popa
sub
sub
sub
xchg
fmuls
mov
xor
mov
rorb
mov
or
sbb
nop
pop
xlat
or
mov
pushf
pushf
mov
inc
mov
or
and
push
enter
and
pop
xor
or
and
adc
push
leave
leave
mov
or
or
fwait
cmpb
fs
mov
pop
enter
xor
inc
push
cmp
rorb
mov
push
in
sbb
mov
mov
nop
fcoml
fwait
cwtl
and
enter
insl
sub
leave
je
or
orl
or
sbb
cmp
decl
fwait
dec
in
nop
daa
xchg
inc
lret
or
fs
push
mov
nop
and
and
sbb
xchg
inc
xchg
dec
sbb
dec
push
add
clc
pop
or
enter
pop
daa
das
in
sti
or
pop
loope
les
cmp
and
or
or
or
cwtl
mov
dec
push
sbb
or
dec
sbb
cs
enter
cli
jbe
pop
movsl
pop
dec
sub
pop
fwait
and
xchg
cmp
pop
sub
pop
inc
cwtl
adc
sbb
add
enter
fs
push
dec
jb
or
loopne
xor
push
cmp
and
push
mov
in
or
call
add
mov
fwait
sbbb
subb
xor
pop
dec
pusha
nop
mov
das
cmp
or
add
add
nop
int
fwait
or
dec
hlt
add
sbb
inc
jg
add
les
orl
xor
pop
mov
xchg
xchg
jecxz
xorb
mov
xchg
iret
add
jl
xor
nop
or
fwait
pop
mov
sbbl
dec
push
cmp
shll
add
sub
incl
jb
dec
dec
and
add
add
lock
push
jb
xchg
add
sbb
add
xchg
daa
imul
sbb
push
idivl
mov
and
andb
test
dec
outsb
xchg
add
jo
add
mov
mov
add
leave
mov
add
adc
fwait
dec
sbb
or
xor
mov
sbb
fs
add
out
mov
push
leave
rolb
add
xchg
pop
mov
mov
mov
and
or
enter
nop
or
push
movsb
ss
and
xchg
sbb
cmp
or
je
add
shll
cmp
add
cs
lods
mov
pusha
incl
dec
jecxz
push
orb
enter
or
jo
ret
pop
sti
mov
mov
mov
or
add
sub
dec
adc
into
or
out
ds
xlat
sub
cmp
jl
jge
or
shrb
cwtl
lret
clc
mov
sbb
xchg
and
dec
orl
adc
inc
pop
sbb
test
push
mov
mov
mov
or
test
lahf
test
mov
push
or
mov
or
aaa
push
xchg
ret
mov
or
add
cwtl
cwtl
inc
rcrb
adc
test
add
xlat
mov
ret
xor
jle
popf
sbb
mov
jle
popf
or
mov
rclb
mov
mov
xor
push
add
pop
pusha
mov
cld
jbe
sub
ds
lret
fisubrl
push
add
add
jl
test
test
sti
mulb
lock
decl
jne
mov
add
sub
test
mov
sbb
es
pop
and
lea
pop
xchg
mov
repz
push
fiaddl
jecxz
cmp
adc
daa
push
inc
or
mov
add
dec
adc
push
mov
cmp
aam
push
mov
cli
mov
das
add
mov
in
cmp
mov
jg
mov
sbb
jecxz
mov
fucomi
push
jl
xor
negb
pop
push
sub
mov
add
pop
dec
jge
cmp
rcrb
mov
adc
movsb
push
sub
sub
mov
cmp
fdivl
mov
dec
jmp
pop
int3
ja
pop
sbb
mov
inc
daa
or
push
hlt
inc
popa
cmp
mov
jnp
dec
jno
lods
adc
adc
xor
aad
and
or
add
les
adc
add
mov
mov
rcll
fldt
pop
push
xor
push
movsb
add
test
int3
push
insb
and
insb
fs
and
mov
shll
adc
mov
call
dec
mov
mov
xor
add
push
mov
insb
ret
xor
sarl
push
pop
mov
dec
inc
ret
mov
lock
adc
rclb
out
andb
push
out
daa
mov
and
add
push
jb
push
out
jb
add
and
dec
sub
mov
add
push
add
adc
call
or
pop
test
lret
in
jno
loopne
cltd
out
cmp
mov
in
mov
push
jge
in
or
pop
add
dec
lea
sbb
inc
xor
sti
mov
js
in
add
loope
adc
pushf
xchg
negb
sub
div
cwtl
xor
movb
pop
push
int
vpavgb
jno
jae
stos
mov
jno
sbb
rcrl
movsb
xor
xor
inc
ds
cmpsb
lock
add
fcoml
jne
lods
xor
jg
cmp
sub
popf
out
in
or
mov
out
rcll
int
sub
test
fstps
scas
pop
push
jecxz
fldcw
test
aad
mov
cmpsb
mov
das
imul
addb
push
pusha
fmuls
push
mov
xchg
repz
test
dec
or
testl
xor
jle
je
and
in
je
push
jge
and
adc
inc
pop
aam
rorb
or
mov
and
xor
bound
fildl
mov
jmp
mov
or
jmp
push
fs
mov
icebp
out
jns
xchg
frstor
addl
sbb
or
sti
popa
and
jns
sbbb
adc
cmp
pop
vmread
in
push
push
and
mov
aas
mov
dec
cmp
cld
xchg
jge
mov
icebp
sbb
loopne
popa
pusha
test
xor
push
mov
ljmp
into
adc
sub
jnp,pt
clc
and
je
push
icebp
arpl
scas
jmp
mov
testb
ficoml
cmp
popa
les
adc
cmp
sub
adc
push
mov
subl
mov
test
addr16
adc
push
in
push
adc
inc
lret
ret
push
xchg
and
push
iret
add
push
add
adc
cld
js
orb
mov
or
sbb
jmp
mov
pop
jmp
sbb
sbb
adc
mov
jge
add
and
add
and
ja
add
mov
lods
mov
je
mov
xor
out
cmp
aaa
in
xchg
mov
inc
push
push
pop
or
jne
stc
mov
cmpsb
sbb
imul
sbb
push
ret
sbb
xor
fs
in
lcall
xor
or
dec
aad
dec
lock
shll
jno
daa
xchg
loopne
inc
push
xchg
out
iret
add
popf
xchg
mov
in
or
cmp
roll
je
add
push
push
pop
mov
push
adc
jbe
push
cld
ljmp
fwait
lods
xchg
mov
test
add
or
inc
movb
jae
jg
mov
rcll
cltd
mov
loop
jecxz
mov
add
push
cmpsl
xorb
lds
outsb
popa
xor
sub
stc
and
xor
adc
subl
jno
cmpb
push
dec
sub
inc
xor
les
ret
pop
xorb
jle
or
and
mov
or
cld
sbb
inc
xchg
and
pusha
test
testb
dec
pusha
or
xor
fists
leave
lock
push
xchg
and
jnp
lods
inc
js
add
lea
jnp
mov
or
push
dec
adc
push
dec
inc
cmp
push
push
test
push
adc
push
daa
mov
repz
sahf
fstpl
adc
jno
imul
sbb
cmp
jns
add
outsl
and
and
divb
xor
cmp
hlt
jecxz
xchg
sub
and
lock
adc
pop
or
nop
arpl
nop
pusha
mov
sub
add
mov
les
pop
xchg
adcb
add
insl
jle
cmp
push
enter
cmp
inc
jmp
aas
filds
lods
or
add
nop
out
push
push
sahf
mov
mov
test
mov
sub
push
ret
sub
add
xor
pop
pop
push
cltd
adc
inc
add
add
dec
ljmp
cmp
jne
dec
cmp
es
or
sbb
add
mov
inc
push
fs
outsb
xchg
push
push
into
fmuls
mov
fwait
js
mov
insl
das
je
jmp
test
cmp
adc
mov
wbinvd
push
imul
jne
les
add
arpl
mov
shrl
cld
dec
push
mov
cltd
enter
enter
and
scas
push
push
sbb
mov
mov
idivl
xor
into
dec
or
lods
shll
cmc
mov
scas
cltd
inc
fistl
cmpsb
sub
aam
xor
xor
sbb
jmp
pop
push
push
jp
icebp
push
push
stos
imul
push
mov
dec
sub
mov
ja
jns
jne
push
stc
sbb
sbb
xor
out
cmc
mov
lea
inc
mov
and
jae
dec
pop
and
mov
mov
or
mov
cmp
add
inc
loopne
ret
insb
aaa
pusha
loopne
ficoml
movb
add
cmp
mulb
fdivrp
xchg
push
push
mov
inc
imul
cmp
xlat
shlb
push
orl
mov
cld
push
clc
jge
jecxz
mov
add
popa
adc
push
dec
sti
add
loopne
cmp
dec
xchg
add
daa
mov
dec
mov
pop
adc
inc
dec
push
push
ds
inc
inc
inc
jo
push
inc
dec
push
dec
add
addr16
xor
add
stos
sbb
jno
sbb
aas
repnz
pop
push
jb
jge
roll
jne
jmp
and
push
inc
push
and
clc
adc
pop
mov
shll
dec
jg
cmp
add
and
and
icebp
pop
sti
or
sbb
enter
xor
inc
sbb
and
imulb
movsl
mov
test
dec
xchg
push
adc
push
es
lret
outsl
inc
mov
jl
lahf
js
mov
incb
scas
insb
push
adc
ljmp
pop
lret
mov
sub
push
jp
cmp
sub
push
push
mov
fldcw
mov
xchg
and
add
mov
inc
add
in
cmpsb
popf
jecxz
sysret
cmpb
shl
add
fnsave
xchg
jb
jle
mov
aaa
loope
add
mov
in
call
mov
test
jle
cmp
jne
cmpsb
lock
shll
push
xor
mov
out
pop
add
in
popa
stc
dec
fbstp
daa
inc
and
insl
mov
push
adc
push
jne
rolb
bnd
fld
push
sub
add
sub
adc
fwait
add
jl
in
add
push
adc
test
dec
jne
mov
cmp
cs
pop
push
and
mov
adc
inc
jle
xor
inc
add
sbb
jnp
sbbb
xchg
ficompl
and
add
mov
jne
adc
sbb
popa
sti
inc
push
cld
push
pop
xor
sbb
sbbl
aas
in
xchg
cs
in
and
cld
jg
mov
xchg
add
aad
mov
test
lods
adc
cmp
push
gs
fsubs
xor
or
sub
add
scas
and
mov
je
mov
push
xor
xchg
outsb
aas
cwtl
mov
xor
xor
cmp
inc
cmp
jmp
popf
mov
xchg
les
inc
pop
cmpb
pusha
and
imul
push
jle
mov
xorps
sbb
mov
sbb
decb
testl
push
imul
in
adc
sub
or
lahf
and
popf
and
sub
imul
and
push
adc
xchg
data16
in
add
xchg
loopne
cs
fsubrl
mov
je
in
or
rolb
rcll
movsb
push
orl
xor
mov
adcb
cmc
fwait
pop
or
inc
movsl
ja
push
aaa
roll
iret
repz
rcrl
xchg
push
xor
cld
stos
xchg
jg
adc
insb
inc
xchg
adc
push
xor
nop
imul
and
add
int
jp
and
add
mov
in
je
pop
lcall
jg
dec
out
xchg
cmc
in
jae
aas
mov
and
push
jae
inc
cs
je
sub
fstp
sbb
cmp
movsl
das
jmp
enter
add
xlat
decb
sbb
loop
vphaddubw
call
test
add
push
and
jg
push
inc
mov
cmp
repz
mov
push
push
or
imul
xor
xchg
pop
cmc
aam
cmp
adc
mov
or
pop
test
arpl
adc
jbe
xchg
xchg
jmp
sub
jo
jb
mov
adc
mov
xchg
jnp
imul
hlt
insl
xchg
imul
adc
push
inc
cmp
lea
ljmp
cmp
ficompl
std
push
scas
adc
xor
les
call
mov
xchg
es
in
pusha
cmp
loopne
mov
daa
cmp
add
lret
push
and
add
pop
loopne
cmp
les
loopne
dec
push
arpl
inc
lcall
mov
push
sbb
movsb
jl
xchg
add
cmp
popf
and
pop
jge
jne
test
xchg
out
in
mov
addl
ja
adc
mov
shll
xchg
mov
pop
hlt
cmp
xlat
push
adc
add
bound
lret
xlat
adc
aam
mov
loope
jmp
push
insb
dec
dec
mov
je
push
sbb
sbb
loope
inc
or
push
cltd
fcmovbe
scas
pop
adc
loope
cs
sti
data16
inc
pop
sbb
xor
stos
inc
add
loop
sub
dec
rolb
lock
mov
sub
aaa
mov
andl
leave
inc
mov
sub
or
bound
or
add
das
lcall
imul
mov
ja
cmp
cmp
or
fs
add
mov
cld
mov
add
add
sub
stos
je
mov
enter
std
dec
xor
and
or
or
add
or
jno
inc
popa
hlt
sub
mov
push
and
loop
sub
sarl
or
out
call
aam
mov
shll
rcrl
outsl
mov
jae
and
lds
adc
adc
pop
sub
xor
mov
adc
loopne
mov
je
sub
mov
rcrb
cmp
in
adc
jne
cmpsb
mov
xlat
jb
stos
or
aad
xchg
test
mov
push
jb
xor
jle
dec
movsb
sbb
push
push
cmp
addl
xchg
push
sub
test
pop
roll
les
mov
sub
jo
int
add
cmp
and
addl
pop
sub
xchg
jmp
dec
mov
imul
adc
stc
rolb
dec
push
jno
shr
adc
push
push
repz
mov
inc
lret
mov
lock
push
xor
and
outsl
xchg
mov
add
push
sub
and
xor
dec
roll
loope
pop
ret
add
ret
cli
push
inc
lret
sbb
adc
ret
mov
jge
and
mov
pop
cmp
xchg
cmp
inc
add
cmp
push
xorl
movsl
orl
je
sbb
in
push
add
push
pop
and
xor
mov
pop
push
sbb
repnz
dec
xchg
enter
push
push
add
loope
ss
inc
rorl
dec
push
dec
sbbb
sub
aaa
mov
adc
pop
lahf
and
pop
add
test
mov
nop
sete
add
mov
or
addb
push
pushf
add
pushl
and
push
pop
imul
hlt
in
adc
movsb
sbb
add
sbb
mov
push
notl
push
fisubs
in
jbe
jnp
test
xor
imul
mov
pop
shll
arpl
sbb
test
xor
xor
mov
cmp
test
loopne
mov
add
mov
cmpsl
sub
inc
dec
cltd
lea
push
test
sbb
ja
pop
and
adc
adc
in
or
inc
repz
mov
and
sti
bound
lods
dec
push
insb
and
ret
xor
push
push
lea
fsubs
adc
cltd
mov
pusha
hlt
nop
inc
lret
mov
popl
in
jb
push
push
nop
or
jp
sub
or
and
test
dec
jecxz
push
xor
and
cmp
mov
add
mov
lods
or
or
pushf
shlb
je
fdivrs
lock
and
or
mov
pop
add
decb
mov
xlat
mov
rep
push
inc
filds
pusha
mov
push
jnp
sub
jns
pop
inc
mov
push
aas
pop
push
mov
cmp
or
adc
xor
dec
fdivrl
pop
mov
cmpsl
push
jg
sub
lds
pushf
mov
in
or
mov
mov
or
cmp
nop
shrb
stc
filds
or
jns
nopl
addl
in
pusha
sbb
jg
jo
leave
inc
je
mov
jl
pop
pop
push
push
adc
in
sarb
int3
pop
mov
in
add
in
lea
inc
pop
pop
roll
das
or
nop
or
test
push
jns
mov
scas
mov
out
and
sbb
xor
nop
dec
int
push
pop
push
push
or
test
lahf
movsl
movsb
xor
incl
push
cltd
int3
add
fs
repnz
and
repnz
mov
repnz
js
pop
push
add
in
adc
pop
jns
xor
or
or
iret
mov
mov
clc
push
jns
push
sub
ficoml
push
push
cmp
and
popa
enter
push
and
push
inc
sub
add
push
daa
bnd
pop
inc
add
stos
leave
push
cltd
adc
cmpsb
adc
pop
popf
aaa
cwtl
sub
inc
pop
insb
xchg
cld
sub
xor
push
fcompl
clc
xchg
dec
and
jb
fs
sub
test
inc
and
and
jo
aaa
push
or
adc
and
outsb
or
aaa
pop
cmpb
push
mov
add
xor
sahf
cmp
and
jge
pop
fstl
leave
push
push
jmp
orl
or
push
sub
rcrb
sub
jo
adc
ret
and
imul
adc
in
std
lret
popf
add
js
and
rolb
pop
jo
fsubrs
inc
aaa
test
push
push
dec
repz
repnz
fistpl
push
mov
or
and
mov
adc
insb
test
insb
push
fs
sub
mov
andb
inc
mov
and
pop
nop
inc
mov
push
pop
push
cwtl
dec
xor
xor
aaa
pop
sbb
ret
or
push
aam
xor
xchg
into
lret
les
mov
shlb
cli
add
scas
lret
lahf
fldpi
inc
cmp
out
sbb
jmp
js
push
sub
jns
add
and
sub
sbb
adc
adc
add
test
inc
adc
dec
icebp
inc
cmc
ja
aam
sbb
dec
sub
or
add
and
imul
sbb
out
inc
dec
loopne
jle
add
cs
sub
pop
and
add
cmpsl
or
lret
cmpsl
add
test
push
add
cmp
out
aad
mov
push
into
and
and
and
add
aaa
test
dec
mov
pop
xchg
sbb
dec
or
or
push
inc
or
mov
lds
jge
inc
push
cwtl
push
or
call
dec
test
imul
shlb
movsb
rolb
mov
xchg
or
inc
daa
add
nop
movsb
xor
js
ja
mov
daa
add
dec
es
maskmovq
notl
adc
daa
cmp
loope
insl
and
dec
sub
sub
inc
jo
xchg
jmp
mov
fs
add
imul
cmp
and
pop
cwtl
cwtl
into
push
push
pop
popf
in
mov
push
lock
cmp
daa
pop
push
imul
xor
and
mov
inc
mov
and
adc
rorl
dec
cmp
mov
cmp
bound
adc
mov
sbb
movb
loope
or
inc
sar
xchg
push
inc
adc
dec
xor
inc
cmp
cmp
or
call
inc
inc
rorb
mov
add
xor
lds
pop
aaa
mov
lcall
dec
pushf
pop
adc
adc
inc
es
in
out
sbb
stos
lcall
enter
fidivl
push
mov
inc
add
push
loope
rorb
sub
cmp
daa
loopne
call
rorb
aas
inc
pop
adc
fdivr
mov
inc
ret
mov
sbb
pop
jl
or
push
sbb
sbb
cwtl
mov
scas
aam
push
xchg
inc
enter
in
test
pop
hlt
por
and
fsubrl
xchg
mov
movsb
sbb
push
test
xchg
adc
loope
adc
fistpll
out
fwait
cmpsl
cmp
push
movl
movsb
div
test
xchg
push
inc
inc
dec
push
pop
cmp
jo
mov
cmpsl
dec
adc
js
jle
lds
leave
inc
jg
dec
mov
nop
movsb
xor
xchg
adc
in
pop
push
and
and
and
mov
popa
leave
jnp
pop
push
je
xchg
fisubs
clc
cltd
push
mov
add
dec
ficoms
xor
lods
fistps
sub
je
test
or
jmp
daa
cmp
incl
xchg
xlat
sub
gs
jg
inc
push
pop
and
outsb
pop
xor
lods
xchg
cwtl
sub
pop
mov
vmovsd
cwtl
icebp
outsb
xchg
xor
inc
cmp
dec
push
enter
xchg
push
inc
sub
adc
dec
js
adc
pop
inc
jl
inc
mov
sahf
jnp
ffree
xchg
mov
cmpsb
mov
push
movsb
adc
sarl
insb
pusha
add
cmp
lods
bound
and
ja
int
inc
fimull
sub
mov
adc
stc
xchg
push
lods
rcll
push
stc
pop
push
push
movsb
adc
adc
fsubl
dec
int
addl
mov
movsl
add
sub
cltd
leave
add
fadd
es
fwait
int
or
sub
dec
repz
xor
mov
add
push
jb
inc
push
mov
xchg
mov
sub
mov
push
inc
adc
jp
fsts
jne
sub
push
adc
add
into
jg
adc
sbb
or
cmp
sbb
mov
lea
out
subb
sbb
mov
adc
xor
adc
repnz
jnp
jns
pusha
xor
push
adc
pop
lcall
and
movsl
jle
test
lods
inc
sbb
sbb
dec
inc
sub
sbb
lret
sub
pop
inc
lcall
enter
rcl
add
sub
aad
adc
jnp
sub
inc
rcll
shlb
jbe
add
and
mov
mov
adc
or
and
push
pusha
test
cmp
dec
xor
or
cmp
mov
push
mov
push
gs
push
cmp
add
sub
cmp
jp
or
pop
jb
imul
imul
shrb
or
cmp
and
inc
pop
xorl
pop
inc
mov
adc
lahf
and
test
push
leave
js
mov
add
iret
inc
mov
addb
mov
xor
stos
mov
filds
xor
inc
movsl
test
pop
outsl
jmp
mov
fdivrs
pop
fmuls
loop
ret
or
daa
test
adc
enter
mov
ja
mov
mov
sub
xor
mov
push
std
xor
loopne
jp
pop
loop
xchg
sub
dec
inc
sbb
mov
dec
pop
add
int
push
cmovs
mov
lods
xchg
dec
sbb
pop
mov
and
mov
or
and
data16
mov
sbb
sbb
sbb
shrl
and
pop
iret
dec
add
xchg
mov
outsl
bound
add
add
cmp
cmc
cmp
jg
dec
xor
mov
inc
les
loop
and
sti
je
mov
sub
scas
or
idivl
ret
mov
push
dec
push
inc
mov
push
push
mov
sbb
mov
or
mov
imul
call
movl
pushf
repz
add
pop
loope
mov
sbb
add
pop
push
ret
loopne
or
or
push
test
cmp
jge
clc
push
inc
add
xchg
mov
jg
add
adc
sti
xor
push
pushl
add
ret
push
pop
or
or
enter
or
ret
jp
cmpl
aam
and
sbb
xor
mov
scas
cs
sbb
imul
nop
adc
scas
outsb
cmpl
pop
or
dec
mov
cmpl
jb
mov
xor
mov
push
orl
mov
xor
lea
lea
movsl
add
movsl
pop
sub
mov
dec
and
jb
add
push
movsb
fs
xor
dec
les
add
or
jno
enter
iret
ret
cmpsl
or
cvtps2pi
jmp
hlt
sti
mov
inc
popa
fs
push
adc
leave
mov
xor
mull
or
sbb
fdivp
push
sbb
cmp
jbe
mov
pop
sbb
enter
jae
sti
daa
xor
inc
xchg
mov
adcl
adc
dec
ss
adc
iret
add
jecxz
mov
cmp
jbe
and
rcr
out
into
inc
push
pop
fmuls
ret
add
addb
add
sub
pop
gs
sub
add
daa
mov
mov
int
mov
std
add
and
or
inc
adc
mov
sub
pop
or
pop
dec
inc
cmp
mov
lock
stos
mov
rcrb
cmpl
hlt
sbb
xchg
ret
pop
add
sbb
add
lods
pop
rorb
adc
stc
cmp
adc
fnstcw
jmp
add
data16
cltd
jge
inc
ljmp
lcall
test
je
neg
sbb
and
inc
shlb
adcb
and
jp
fnstenv
gs
dec
js
sbb
iret
cmpb
pop
jne
sbb
aas
lods
push
aam
or
add
stos
gs
jmp
clc
adc
pop
cltd
fisttps
cmp
leave
mov
add
sub
push
add
imul
cmp
cld
imulb
mov
imul
mov
dec
jmp
sub
adc
fldcw
inc
sti
cmpsl
jg
inc
adc
or
shlb
add
fwait
je
pop
pop
push
jnp
data16
mov
push
lretw
js
push
push
jne
xchg
cmpsl
lea
mov
dec
jecxz
push
mov
pop
jbe
push
xlat
movsb
add
insl
shl
pop
pop
push
adc
push
movsb
mov
xor
fcomps
inc
add
int
push
xchg
inc
cmp
and
jbe
roll
inc
andl
jne
lcall
inc
in
jle
mov
incb
push
sbb
dec
push
les
cmpl
call
scas
mov
sub
add
lock
add
int3
dec
jle
out
mov
and
adc
xor
test
push
pop
imul
push
orb
inc
mov
fmuls
mov
mov
and
cmp
or
lock
dec
sbbl
adc
pop
fnsave
inc
out
bound
sub
push
push
fsubr
les
mov
push
mov
or
orl
jmp
hlt
jne
aad
xchg
mov
inc
pop
or
mov
xor
jno
sbb
fimuls
sub
and
xchg
addb
ljmp
and
add
rol
outsb
jnp
xor
loopne
call
lock
push
pop
inc
test
or
xor
jne
sub
push
dec
or
push
clc
sub
mov
in
jne
cmp
sti
xor
push
shlb
hlt
bound
lods
xor
mov
push
mov
fisttpll
cmp
xor
inc
in
or
in
pop
cmp
imul
push
je
adc
je
or
jae
fwait
cmpsb
jnp
js
sub
push
out
xchg
inc
imul
leave
jo
xchg
insb
ljmp
dec
cmpsb
jmp
mov
les
fldenv
ret
add
adc
aam
rol
cmp
pop
into
lock
mov
push
and
dec
mov
dec
aas
je
pushl
xorl
insl
cmp
sahf
addl
mov
push
ret
lock
cld
es
outsb
dec
push
adc
jnp
pop
aas
push
xor
push
adc
loope
in
jno
xchg
sub
jg
cli
mov
push
add
icebp
and
mov
sbb
cmc
dec
xor
iret
dec
lea
loop
cld
push
add
jmp
arpl
mov
cmpsl
xlat
xor
xchg
cmp
xchg
mov
mov
sub
jb
xor
sbb
pushl
cmp
imul
ret
addb
rorb
xorb
push
cmpl
mov
cmp
adcl
jge
mov
push
or
clc
push
roll
je
jg
pop
mov
or
in
scas
jne
pop
outsl
cmp
jo
nop
push
dec
adc
adc
adc
add
add
mov
push
push
jbe
movsb
push
jle
pop
fldt
adc
inc
stos
inc
adc
sbb
xor
lods
lea
testb
push
or
inc
push
dec
and
push
mov
push
inc
int3
cmp
push
mov
clc
sub
into
pop
shlb
adc
enter
and
lock
push
movsb
sbb
jb
mov
subl
cmp
icebp
adc
adc
mov
fistl
fdiv
test
sub
dec
es
cmc
jmp
adc
jge
jp
push
ja
mov
add
loopne
je
daa
jnp
jae
mov
mov
aam
dec
hlt
push
fidivrl
sarl
xchg
insl
sbb
add
cmp
mov
add
loopne
in
xor
fdivrl
test
out
pop
enter
mov
nop
lock
sub
sbb
dec
cmpsb
push
xor
andb
jne
add
add
cmp
les
lock
fdivs
nop
ret
and
mov
in
mov
push
imul
test
push
push
lods
sbb
dec
notb
enter
jp
adc
aas
sbb
imul
xor
or
data16
and
jp
pop
mov
clc
aas
mov
cld
and
adc
or
jecxz
jb
out
arpl
inc
adc
push
mov
mov
loop
aaa
push
das
jb
xor
inc
lds
iret
fsubs
xchg
sbb
xor
cmpsl
ljmp
jo
ds
lea
je
loop
xlat
sub
ss
clc
push
lea
cmp
sbb
fwait
push
loopne
xchg
cli
cmp
data16
and
in
mov
jns
and
add
and
add
aas
call
push
and
pop
jecxz
add
xchg
sbb
dec
lods
add
ret
jns
clc
dec
mov
cmp
push
inc
and
xor
push
or
mov
or
loopne
xlat
es
push
je
ret
xor
rcrb
sub
aaa
dec
push
mov
sbb
push
jp
push
xchg
test
inc
mov
shll
nop
or
pusha
mov
push
pop
and
ret
stos
add
movsb
movsb
and
stos
mov
int3
adc
rorb
dec
or
sub
push
add
pop
outsl
dec
mov
ret
cltd
rorl
dec
or
pop
cs
lock
pop
and
adcb
add
mov
lock
or
fdivl
adcb
push
inc
lock
leave
push
mov
dec
adc
imul
ljmp
jle
xor
ficompl
pop
push
nop
pushl
xchg
jnp
jmp
dec
mov
imul
test
lea
jl
inc
es
pop
dec
test
or
push
dec
jne
mov
ret
pop
sbb
mov
rcl
cmpsl
imul
faddl
sbb
pusha
movsb
sbb
mov
loop
rcrl
add
push
and
sbb
xchg
je
push
xorl
int
dec
push
xor
mov
js
in
jle
mov
push
enter
push
push
mov
cmp
lcall
push
aas
xor
mov
mov
cmp
jl
fstl
add
mov
lea
cmp
leave
cmp
push
mov
gs
pop
imul
cld
cs
adc
mov
mov
push
jbe
fs
push
cmp
pushl
fwait
adc
mov
mov
fidivl
imul
pop
adc
cmp
into
pusha
mov
sub
fstl
test
xchg
in
adc
call
js
adc
pop
push
rorb
or
rolb
push
cli
fadds
shl
sbb
js
mov
or
add
loope
lods
mov
xor
rolb
pushf
adc
push
or
rorb
adc
mov
mov
xchg
push
loopne
add
sbb
shrb
fucomip
and
mov
dec
push
pusha
cmp
lret
jmp
add
xchg
xchg
xor
add
jl
lret
add
or
add
pop
fwait
jge
inc
ret
adc
xor
dec
sbb
out
add
dec
inc
sbb
addl
fimuls
xor
and
inc
sarb
add
test
mov
imul
aam
mov
cmp
add
filds
push
mov
sbb
and
jne
call
imul
aad
add
or
pop
and
cmp
jbe
icebp
scas
inc
clc
sub
lret
mov
add
hlt
insl
push
mov
pop
pop
call
sub
inc
push
push
sbb
inc
testb
cmpl
mov
mov
jl
jmp
ljmp
add
in
lahf
popa
je
lret
pusha
test
je
mov
mov
jne
jbe
or
out
leave
dec
rcrb
xchg
or
push
inc
add
std
lret
ss
cs
pop
sbb
add
mov
cwtl
or
loopne
das
stos
stc
inc
pop
subb
push
les
dec
cmp
push
inc
sbb
cmc
stos
data16
and
inc
dec
mov
or
jo
fsubl
mov
lds
sti
add
jo
pop
adc
in
fmull
xlat
add
dec
mov
jle
add
and
pop
je
rorl
xchg
fnsave
call
or
push
orl
test
sub
fisttps
outsl
fsts
scas
hlt
lea
push
pop
loopne
adc
mull
adc
scas
stc
pop
or
add
mov
xchg
roll
sub
icebp
mov
mov
push
in
sub
inc
clc
cmpsb
adc
ss
mov
adc
lret
xor
xor
mov
inc
es
mov
lds
pop
into
mov
out
xchg
xchg
pop
dec
xor
dec
pmovmskb
insl
push
pusha
push
jae
push
jg
pop
cmp
sub
or
jb
adc
testl
cmp
mov
cli
and
fsubrs
xor
add
push
mov
adc
das
loopne
pop
aad
cmp
aam
push
inc
sub
ret
sub
and
test
cld
push
imul
aas
cmp
fisubrl
out
or
mov
pusha
adcl
cli
jp
clc
ja
notl
cld
adc
dec
adcw
js
jne
or
fsubl
xor
adc
and
inc
mov
cmp
idiv
scas
push
mov
and
mov
dec
lea
pop
andl
inc
sub
xchg
pop
sbb
shlb
out
mov
lcall
push
mov
adc
sbb
sbb
jbe
sahf
jbe
mov
lret
dec
sub
jne
pop
add
push
sti
inc
xor
shl
adc
or
jge
jb
or
push
fadds
push
add
mov
fsubs
test
push
mov
loope
sub
xor
mov
sbb
arpl
loop
ret
xor
jno
shr
cmp
loopne
aam
dec
es
les
pusha
xor
add
pop
in
out
popa
xor
pop
jbe
outsl
hlt
xchg
push
outsl
sub
stos
fadds
push
inc
pop
pop
iret
insl
mov
push
push
imul
movsl
mov
jns
push
pop
push
lods
adc
pop
mov
loopne
or
sbb
cwtl
jl
call
push
pop
cld
push
xchg
mov
add
xor
pop
add
push
xlat
and
jne
push
adc
out
mov
push
inc
lea
mov
ss
push
jo
lea
xchg
inc
mov
cmc
cs
jle
jmp
and
daa
lcall
shrl
push
dec
scas
push
push
add
dec
int3
inc
add
jge
data16
jns
jnp
scas
les
mov
adc
push
mov
lea
mov
mov
enter
clc
or
mov
push
dec
push
je
stos
mov
icebp
out
lcall
add
add
ror
jns
stos
xor
mov
pusha
insl
xchg
nop
mov
adc
sbb
mov
nop
mov
sbb
mov
or
insb
push
xchg
stos
jno
xchg
add
cmc
dec
push
pop
push
xchg
andb
je
ficoml
inc
inc
ds
je
cld
clc
sbb
dec
sub
push
cmp
mov
xchg
aad
sub
push
push
sbb
cwtl
or
dec
clc
ret
orl
es
xor
cmpb
dec
or
cli
insb
add
fcmovb
dec
cmp
add
add
aad
ss
adc
cmp
push
and
test
add
mov
add
push
insb
bound
bound
push
test
cmp
jg
lcall
fsubrs
fimuls
inc
jmp
pop
das
add
sub
or
pop
sub
cltd
pusha
jno
arpl
subps
les
sbb
jbe
and
ficoms
and
mov
out
test
sbb
ror
inc
mov
sub
imul
push
rolb
jnp
mov
loopne
imul
sbb
ret
or
pop
dec
adc
dec
push
push
xor
pop
jne
mov
cmp
je
cmp
push
pop
cwtl
enter
pop
pop
adc
ret
test
test
je
sub
out
pushw
push
pop
dec
jb
xor
enter
lret
adc
rol
rorl
stos
enter
sbb
adc
addl
ret
test
and
and
pushf
fsub
mov
idivl
fst
rcrb
fs
shrl
pop
inc
roll
pop
add
popf
pop
lea
sbb
mov
push
insb
add
pop
fcompl
js
movsb
rorl
test
cmp
push
cmp
lock
mov
mov
push
lods
push
sbb
jmp
pop
popf
clc
xchg
in
cwtl
xor
xor
call
xchg
fimuls
adc
mov
adc
cmp
or
mov
mov
mov
nop
pop
jae
aas
sbb
sbb
sbb
adc
ret
aam
cmp
mov
and
mov
sub
or
push
xor
adc
pop
push
adc
xchg
fabs
movl
sahf
js
jo
add
add
mov
inc
and
sub
pop
and
adc
add
or
cmp
jb
sub
js
sti
mov
pop
dec
add
scas
push
imul
outsl
stos
popa
push
mov
sahf
cmp
xchg
bndstx
aas
jg
add
xor
adc
popf
add
sub
push
push
imul
jno
fstpt
push
pusha
popf
cmc
sbb
add
je
nop
add
call
dec
jo
es
push
and
add
mov
bound
jne
xor
adc
rolb
add
fsub
rorb
jle
pop
push
push
sbb
add
xor
jmp
push
aas
pop
cmp
rcrl
mov
jbe
hlt
or
sbb
jmp
xor
jmp
inc
andl
cmpb
mov
cmp
or
cwtl
pushf
sbbb
pushf
jmp
sti
jbe
jae
lock
jne
mov
and
xchg
arpl
sbb
lahf
shrb
sub
mov
icebp
sub
dec
sub
xor
pop
cld
xor
mov
add
push
push
arpl
hlt
or
mov
jle
jb
mov
repz
lods
in
push
ret
testl
movsb
pop
sahf
ja
jae
loopne
inc
adc
bnd
push
enter
in
int3
sbb
or
pop
adc
and
fcompl
iret
rorl
fadd
push
mov
adcb
cmp
mov
mov
push
roll
repnz
mov
aaa
mov
mov
jo
test
inc
xor
icebp
mov
push
jg
pop
sbb
inc
cmp
mov
xor
cltd
sbb
pusha
outsb
cmpsl
sbb
inc
sahf
ret
mov
and
add
dec
push
mov
mov
fistl
push
adc
mov
jp
push
or
push
dec
and
repz
push
and
mov
lock
pop
adc
dec
lea
cmpsb
sbb
push
add
sahf
inc
sbb
aaa
int3
stc
es
mov
fld
js
lock
jo
dec
mov
push
cli
or
dec
shrl
sbb
pop
adcb
repnz
pop
push
add
dec
sub
inc
xor
andl
fistps
pop
insb
lea
loope,pt
lcall
mov
out
push
fs
jo
or
addr16
add
dec
mov
faddl
mov
cmp
jb
dec
adc
pushf
mov
dec
loope
xor
jl
mov
stos
xor
ret
jae
and
jecxz
cld
sub
mov
xlat
add
jnp
mov
xor
fmuls
jne
in
mov
push
addb
or
mov
and
jne
push
and
xchg
adcb
cmc
inc
fwait
imul
rorb
mov
cmp
fmull
mov
xor
add
fisubrs
add
mov
lods
cmp
pusha
mov
movsl
cli
mov
daa
imul
jo
outsb
imul
ja
xchg
in
pusha
movsl
hlt
mov
dec
jmp
movl
cmp
adc
push
add
andb
cmp
inc
adc
jge
in
dec
adc
insb
cmp
int
fisubl
cmp
xor
sub
outsb
jbe
or
xor
fs
aam
xor
sub
fnstsw
xor
jnp
push
push
pusha
mov
dec
mov
pop
loopne
testb
pmaxub
adc
xchg
cwtl
push
push
sub
xchg
mov
push
cli
sub
xchg
js
fsubl
inc
fisubl
jl
and
sub
ja
fisubs
push
jo
push
cld
inc
fcmovne
outsb
cmp
cmp
or
jno
pop
stos
cmpsb
push
dec
mov
loopne
dec
lcall
inc
inc
lret
jae
pop
cs
int3
or
xor
mov
cs
pop
loopne
mov
mov
dec
nop
sbbb
inc
int3
jne
and
call
adc
pop
insl
mov
sarb
sub
add
cli
adc
sbb
popa
push
xor
rcl
sub
sbb
loope
xor
nop
push
orl
aaa
cmpb
xchg
dec
repnz
insl
and
mov
outsb
cld
cld
subb
and
sbb
push
ja
push
or
cld
sti
mov
inc
sbb
or
jo
push
test
lock
mov
leave
popa
ret
out
or
mov
add
adc
ret
nop
mov
xchg
movl
add
imul
xor
mull
cwtl
mov
pop
sbb
and
jl
addl
pushfw
in
popf
jge
mov
cwtl
add
cmp
push
push
sub
push
pusha
add
cmp
inc
jb
and
imul
fcom
jo
movsb
adc
sbb
pop
jge
fwait
xlat
and
xor
les
test
sub
sub
les
scas
push
inc
in
in
ficompl
ss
push
or
mov
push
sbb
xor
push
sbb
mov
in
inc
movsb
mov
and
fs
mov
dec
mov
dec
lock
sub
push
inc
sbb
push
jp
loop
test
jne
notl
sub
out
push
loopne
cs
mov
pop
sbb
bound
inc
jb
je
es
lds
or
xor
inc
ljmp
pop
pop
and
sbbl
inc
xlat
push
in
jl
les
add
and
ficoms
adc
push
rcrl
loopne
jmp
push
push
inc
cmp
push
push
sbb
jne
adc
je
lock
fbstp
cmp
push
xchg
jb
cmp
push
or
nop
xor
cmp
test
cld
pop
loopne
loop
js
aam
arpl
dec
cmpsb
jmp
mov
fstl
shr
loop
inc
xchg
rcl
ficompl
dec
es
xchg
jl
sbb
imul
push
xor
js
movsb
mov
or
pushf
jl
in
push
dec
jo
les
push
pmaxub
rorl
xchg
pushw
shrb
stc
push
in
cwtl
push
mov
mov
and
and
mov
mov
ljmp
xor
cs
xor
pusha
mov
pop
inc
int
ljmp
push
inc
lcall
in
pusha
nop
lret
in
sbb
in
scas
inc
testl
jns
call
and
xor
mov
testb
insb
shrl
push
push
out
push
or
dec
jge
pop
sub
add
cmp
outsb
sbb
out
pop
je
pop
in
call
mov
mov
push
movsl
pop
lret
adc
mov
mov
sbb
mov
xchg
shlb
in
ret
pop
push
mov
xorl
and
cmpsb
cmc
arpl
je
test
jne
fisttpl
not
and
add
test
enter
hlt
lahf
dec
sbbl
and
cmp
out
pop
pop
mov
lock
loope
add
cmp
outsl
inc
into
adc
loopne
loopne
pop
jbe
aaa
dec
xchg
rorl
jns
xchg
push
or
jb
jge
mov
cmc
xchg
add
xor
xor
mov
cld
es
and
and
pop
in
cld
push
cli
test
jge
and
mov
rcrl
xchg
sti
rclb
inc
mov
mov
and
popa
shr
mov
push
aam
and
shl
fstl
push
push
mov
or
pop
add
negb
dec
mov
cmpsl
add
jmp
stc
out
rcll
in
enter
or
sarl
xchg
mov
outsl
jle
sub
test
cmp
jbe
ret
inc
in
push
jae
pushf
mov
loopne
cmp
je
inc
movzwl
imul
jmp
push
loopne
clc
push
in
cmp
inc
sub
movsb
imul
xor
clc
call
rclb
ja
subl
xor
push
dec
sbb
lock
in
and
sbb
pop
push
sbb
push
ja
push
aas
ljmp
xchg
movl
adc
push
and
into
push
sbb
pop
jecxz
ret
outsb
loope
pop
dec
stos
mov
nop
les
xorl
mov
je
push
lea
shl
out
xchg
pop
pop
mov
and
mov
and
aas
fldl
mov
mov
cmp
add
or
mov
fildll
add
movzbl
and
cmp
jne
enter
pop
pop
inc
pop
ds
cmp
push
cmp
js
jb
jl
jmp
clc
lret
sub
dec
jl
pop
pop
jg
or
pop
inc
testb
addb
nop
lods
push
std
cmp
clc
jae
iret
pop
fcoms
mov
mov
adc
sbb
push
outsb
and
add
add
or
push
cmp
rcrl
mov
fistps
add
mov
pop
test
mov
in
cmpl
out
push
xor
jnp
dec
and
sbb
sub
out
pop
aas
or
xchg
les
add
pusha
cmp
pop
xchg
sbb
adc
push
adc
adc
jae
js
pop
push
cltd
jge
cltd
test
xchg
decb
pop
sbb
pop
jns
inc
pop
jne
add
sbb
push
cmpsb
jo
sbb
xchg
sub
lock
int
cmpl
aam
into
mov
repz
into
sbb
stos
fiadds
pop
pop
test
je
and
push
pop
sub
sub
sub
jg
in
and
or
inc
cmp
aas
mov
loop
push
addb
hlt
xor
push
inc
rcl
push
inc
push
cmovbe
loopne
jo
std
inc
sbb
and
push
add
cli
push
pop
pop
loopne
fildl
mov
inc
loopne
adc
mov
insl
iret
cmp
sub
cmc
push
pop
inc
out
push
mov
cmc
pusha
cmpb
jle
inc
ret
pop
ret
push
mov
adc
cmp
mov
insl
sbb
dec
mov
xor
push
aam
ja
sbb
mov
cli
sub
out
push
and
insb
dec
push
push
push
xor
adc
pop
dec
hlt
add
mov
or
rclb
mov
jp
dec
jecxz
fiadds
xchg
mov
data16
jne
orb
jae
or
or
lock
int3
adc
pop
out
gs
lret
arpl
push
inc
pop
leave
in
add
outsl
lods
and
shlb
mov
and
or
or
inc
mov
test
lock
sub
xlat
not
and
push
rorb
push
ret
pop
add
mov
and
pusha
push
popf
jb
insb
popa
and
add
or
rcrb
jmp
lahf
push
movsb
mov
dec
mov
jl
mov
scas
test
fwait
and
jecxz
cltd
cmp
push
and
adc
movb
out
or
push
inc
xchg
push
push
das
sti
or
test
jo
push
add
fld
popa
xor
jae
xchg
int3
inc
ret
or
dec
ss
mov
pop
mov
cld
bound
popl
pusha
dec
rcrl
in
xorb
mov
push
dec
or
adc
lock
test
pop
nop
cs
inc
iret
pop
movsb
pop
pop
fdivrp
mov
pop
mov
popa
mov
lea
sub
clc
pop
push
and
mov
test
pop
sub
repz
mov
cltd
ljmp
movsl
addr16
jo
outsl
enter
add
out
mov
or
inc
add
inc
or
add
hlt
outsl
dec
pop
push
je
cmp
pop
push
shll
sti
push
push
adc
pop
enter
pop
sub
inc
inc
dec
pop
pop
addb
mov
mov
rcrl
addb
leave
add
sbb
lock
inc
sub
push
inc
rclb
fwait
or
not
shr
and
jp
popa
and
xchg
xchg
mov
in
or
or
orl
and
or
scas
push
add
mov
sbb
and
imul
adc
loopne
cmpsb
jecxz
xchg
orb
mov
pop
add
add
pop
punpckldq
xchg
sahf
call
cmp
sub
inc
sbb
or
inc
rcll
rclb
stos
mov
ja
f2xm1
jb
fwait
xlat
adc
adc
cltd
xor
test
mov
pop
cmp
fiaddl
sbb
inc
push
in
sti
mov
or
jae
sbb
je
cmc
aam
rcrl
add
ljmp
loope
inc
sub
addl
sub
push
xchg
mov
mov
add
test
and
divl
pop
sub
jno
jo
cmp
ljmp
das
daa
aaa
xor
cli
jecxz
nop
mov
popa
mov
loope
sbb
inc
cmp
loopne
pop
lret
sub
add
mov
xor
mov
scas
movsb
mov
mov
arpl
pop
testb
lret
inc
adc
lcall
xor
add
imul
popa
hlt
cli
or
push
or
outsl
imul
bound
pop
xchg
cmp
sub
push
das
add
outsl
cmp
aas
std
add
mov
enter
mov
and
fidivs
jl
sarl
inc
or
stc
inc
mov
cmp
jne
jle
mov
pop
sbb
inc
inc
adc
cmp
or
push
lods
add
mov
pop
jo
mov
jne
pop
sarl
and
add
loopne
mov
lods
sbb
and
add
inc
or
test
and
jns
insl
xchg
inc
or
add
dec
mov
andb
cmc
cmp
inc
sbb
mov
and
add
in
pop
fldl
fs
pop
push
pop
sub
add
jnp
or
loopne
fimuls
push
adc
add
sbb
lods
mov
jo
push
fdivl
cwtl
hlt
orl
sahf
aaa
lock
dec
jo
rcll
cld
les
int3
sub
call
adc
or
pusha
rcll
sbb
inc
xchg
or
repz
mov
push
xor
sbb
das
cmp
sbbl
fiaddl
bound
movsb
movsl
mov
pop
leave
mov
xchg
cltd
daa
inc
push
jb
pop
inc
inc
dec
rorl
and
dec
add
lahf
push
lock
mov
iret
test
inc
out
pop
sub
loopne
push
push
pop
sub
push
dec
testb
sbb
mov
enter
mov
hlt
push
hlt
and
test
sub
sub
or
fisttpl
inc
adc
sbb
adc
or
fisttpll
clc
fstps
pop
mov
or
mov
inc
mov
adc
xchg
lretw
adc
or
out
outsb
jbe
in
mov
aam
lods
adc
xor
shrb
cld
push
cmpsb
jno
push
fsub
jno
xlat
adc
mov
and
xchg
cmp
adc
pop
push
add
push
cmp
xchg
cmp
sub
std
add
mov
and
shl
cltd
je
sub
outsb
mov
add
mov
in
orb
mov
add
mov
inc
addb
pop
push
inc
enter
lret
enter
rolb
and
loopne
jb
mov
and
js
lahf
xchg
sbb
gs
jg
ficoml
movsb
popf
mov
and
pop
adc
push
mov
xor
pop
add
loopne
jle
push
stos
xor
in
fs
and
lods
pop
push
loop
cmp
pop
daa
add
shrb
test
xor
sarb
adc
dec
movsl
aam
fcoms
or
push
and
jl
ds
in
and
inc
icebp
loope
push
sbb
pop
xor
cmp
sbb
dec
or
add
cmp
in
add
dec
shl
clc
cld
hlt
push
fcoml
mov
test
mov
inc
ljmp
sub
lea
stos
ss
mov
xor
pop
lea
or
pop
sbb
mov
pop
or
and
sub
in
mov
mov
mov
and
jecxz,pn
mov
mov
ljmp
or
rcrl
push
pop
add
lods
fisttpl
xor
add
inc
mov
es
cmc
add
das
mov
stos
add
daa
push
fld
mov
inc
ret
inc
sbb
pop
cmp
xlat
stos
pop
mov
mov
pushl
jle
rol
adc
test
pop
test
lods
test
add
push
mov
arpl
cmpsb
and
push
js
xcrypt-ofb
cmpsl
scas
loopne
lock
mov
mov
cwtl
mov
fnsave
mov
inc
fimuls
jle
mov
add
addl
jmp
cmp
cmp
add
aaa
pop
in
xchg
movsb
movsl
lods
sbb
adc
pop
or
int3
add
jle
mov
imul
and
or
nop
stos
cltd
jbe
mov
dec
pop
pop
dec
or
icebp
cmp
sbb
xor
fcom
sub
inc
adc
adc
jmp
leave
out
and
sbb
xchg
out
dec
push
adc
and
or
xor
and
cmpsl
sub
sub
in
mov
and
repz
addl
sbb
mov
insb
repz
add
pop
push
push
imul
xchg
xlat
jl
fsubrl
jle
jno
mov
jp
pushl
xchg
rolb
add
jmp
mov
sub
and
in
push
and
outsb
xchg
xor
cmp
outsb
movsb
adcl
mov
add
jne
xor
scas
fs
mov
aas
jmp
add
mov
push
inc
lock
lea
cwtl
fidivrs
scas
sub
add
add
mov
jecxz
ds
fistl
popa
xlat
mov
nop
imul
sbb
and
push
ja
jno
lret
pop
jb
lret
mov
lea
jge
adc
dec
test
inc
pop
movsb
je
inc
sub
addb
mov
movsb
push
mov
sarb
inc
inc
aam
push
push
int3
pop
sub
fstl
scas
jb
pusha
mov
push
xor
pop
movsl
mov
lcall
loopne
sbb
jne
add
loopne
sbb
fcoml
into
lock
sub
loopne
loopne
aad
or
push
pusha
lea
push
xlat
je
jno
lods
jmp
hlt
pusha
out
dec
rorb
mov
jl
pop
hlt
lock
pusha
push
inc
test
addr16
imul
cwtl
jl
sub
or
aas
repnz
push
and
add
inc
add
cmp
outsl
shr
cwtl
push
mov
pop
pop
mov
inc
fildll
ljmp
push
or
or
sbb
and
clc
inc
lcall
cld
inc
adc
or
addb
jo
add
lcall
ds
or
cmp
test
mulb
push
or
test
out
push
pop
cmp
rorl
push
andb
leave
inc
jge
mov
or
push
add
add
bound
fildll
gs
pop
or
fdivrs
je
add
cmp
out
mov
sub
jno
loop
pop
or
add
pop
shll
js
add
or
add
in
pop
adc
push
outsb
push
pushl
xchg
jne
loope
jo
lret
or
stos
dec
insl
test
lea
cmpsb
xor
js
and
cs
or
add
lock
popf
pushf
jnp
jmp
into
jae
push
inc
divb
in
pop
je
divl
push
in
cmp
xchg
add
mov
jno
push
jns
orl
mov
jno
mov
jmp
cmp
insl
adc
push
mov
andb
mov
lcall
popf
push
ss
in
mov
movsb
sbb
adc
add
js
mov
or
mov
jge
jb
ret
push
std
or
or
test
xor
push
inc
xor
mov
rolb
add
int3
bound
sti
loop
push
dec
jmp
push
jnp
or
loop
dec
mov
adc
cwtl
mov
in
jle
xor
icebp
mov
add
call
or
movsb
js
push
add
mov
and
pop
jo
or
shrb
mov
je
dec
add
adc
or
push
pop
add
mov
add
push
mov
mov
rcll
clc
ljmp
add
adcb
jne
and
call
pop
es
cwtl
scas
lret
mov
dec
ret
outsl
std
and
add
ja
jl
add
insb
cli
jge
or
or
in
fadds
call
push
cmp
lds
or
jecxz
pusha
add
inc
loopne
cwtl
clc
push
jp
dec
outsl
cmc
lea
push
out
push
or
divb
idiv
push
and
dec
and
xor
mov
xchg
sbb
cmpsb
dec
push
push
cmp
dec
lock
inc
jb
dec
sbb
stc
jl
fwait
dec
xor
cmp
jb
nop
ret
lock
in
add
and
adc
outsl
cs
pushl
mov
in
adc
and
adc
push
and
add
sbb
in
fld
mov
loopne
adc
pusha
pop
push
mov
movl
or
fnstsw
sbb
fsubrs
cmpl
outsb
or
gs
outsb
cltd
test
push
push
or
outsb
jge
in
loope
push
adc
mov
arpl
push
adc
push
fs
cmpsb
lret
ret
arpl
mov
xchg
nop
or
inc
sbb
sbb
sarb
pop
and
mov
addb
jno
xor
push
jns
mov
fisttps
cmp
paddb
inc
cmpsb
xor
shl
add
xor
xor
xorw
je
pop
into
aam
ljmp
rolb
or
inc
xchg
push
aam
shl
mov
and
add
or
pushw
add
lret
cmp
mov
xor
mov
xchg
adc
push
mov
and
ficoms
xor
mov
iret
dec
xor
iret
add
jns
or
mov
sbb
cmp
jae
hlt
mov
mov
dec
outsb
jbe
xor
sub
inc
mov
mov
xchg
push
in
add
sbb
push
inc
hlt
jbe
cmpl
and
mov
or
les
mov
inc
add
repz
hlt
int3
andl
push
inc
or
mov
mov
sbb
jae
fistpll
pusha
jmp
lods
shlb
xor
push
pop
lcall
clc
outsl
xchg
inc
xor
cmp
lea
fistps
or
js
pop
and
push
fiadds
push
lcall
repnz
clc
jg
add
pop
mov
stos
or
inc
sub
pushf
xor
push
add
sbb
fs
adc
fdivrs
lahf
mov
call
dec
pop
jne
mov
pop
aaa
push
adc
nop
leave
shl
pop
call
jo
jmp
mov
mov
mov
inc
sbb
fiadds
and
and
dec
xchg
lods
push
xor
adc
push
xor
mov
or
sub
pop
cmp
jo
js
mov
sahf
or
inc
sbb
imul
dec
dec
or
sbb
testb
pop
mov
jne
cmpsb
inc
adc
sbb
add
sbb
inc
mov
mov
ret
movb
xor
xor
pop
mov
imul
jne
jae
jnp
js
sub
pop
test
adc
add
cmp
mov
rorl
in
or
jge
adc
movsb
push
cmc
mov
mov
pop
fmul
popf
pop
lret
jnp
test
mov
mov
jo
mov
fmuls
icebp
loopne,pn
mov
xor
mov
fistpl
fildl
add
xchg
mov
jle
jl
scas
adc
mov
stc
ljmp
enter
movsl
jnp
mov
je
loope
ret
jl
jmp
mov
push
push
xor
mov
test
dec
shr
ljmp
and
jle
insb
lea
shl
pop
push
fisttpl
jmp
les
test
adc
inc
jo
dec
or
fidivl
sub
loopne
sahf
mov
inc
lods
scas
and
cmpb
ss
cmp
sbb
dec
inc
movsb
add
add
shrb
inc
adc
cmp
jb
xor
xor
cmp
sbb
ret
push
adc
dec
pop
mov
ja
adc
mov
test
inc
push
pop
push
cmp
and
xorb
xor
ss
adc
sbb
cmpsb
js
pop
and
popa
sbb
adc
adc
push
jge
imul
and
jge
sub
je
or
jle
shlb
jmp
add
adc
imul
mov
jbe
ds
jle
adc
shlb
sub
or
push
cmp
pop
adc
mov
and
or
cmp
adc
hlt
jle
push
add
pop
jno
cmp
shl
rcrb
or
js
inc
out
dec
dec
or
shlb
sbb
std
in
mov
inc
cmp
cmp
mov
mov
decl
and
pop
sub
push
fsubr
push
mov
mov
xchg
insl
dec
cwtl
cld
inc
hlt
add
hlt
cmp
add
dec
cmp
cmp
dec
sub
sbbb
xor
xor
sub
scas
pop
imul
inc
ret
push
or
and
mov
das
ret
adc
sbb
sub
movsl
fldl
rorb
or
cmp
and
sbb
xor
out
inc
push
pop
push
or
ret
ds
fldt
cmp
js
jb
pusha
call
jle
pop
lea
push
push
push
lock
in
inc
push
roll
sub
cmp
jb
ret
inc
push
xor
push
dec
test
aaa
repz
loopne
jo
cmp
push
pop
pop
aas
sbb
push
loop
lea
jge
add
jecxz
push
loopne
test
push
dec
xchg
jecxz
sbb
jl
data16
cmpl
pop
lods
and
test
xchg
sbb
push
adc
sub
mov
roll
inc
loope
orl
push
add
ret
adcl
dec
inc
or
aas
sbb
jno
movsb
sbb
sub
test
add
pop
add
popf
inc
or
xor
insb
mov
in
movsl
xchg
xor
push
xor
repz
addr16
dec
ret
fcompl
mov
mov
mov
leave
adc
xchg
es
pop
sahf
subb
je
adc
insb
loopne
iret
mov
flds
push
fstps
bound
or
or
inc
adc
pop
jne
das
jb
jo
in
lret
adc
adc
mov
push
lea
ja
xor
es
or
or
inc
jb
cmpsl
adc
inc
or
lock
insb
leave
leave
movsb
lock
fldenv
mov
jb
adc
mov
xchg
addl
dec
rolb
add
dec
enter
or
decl
loopne
leave
adc
or
jbe
cmp
mov
mov
xchg
jne
shlb
fldt
push
movsb
mov
bound
mov
or
add
mov
jne,pt
adc
scas
push
pop
jge
sbb
rcrb
inc
rolb
dec
rclb
inc
push
fdivp
jne
movswl
sub
lods
push
pop
out
and
fldl
xchg
pop
daa
xor
sub
addb
mov
mov
das
mov
add
loopne
clc
adcb
fldz
cmp
pop
int3
inc
sbb
repz
loopne
faddl
stos
adc
imul
jb
jo
int3
sub
fs
stos
cwtl
in
adc
push
cmp
push
add
push
jo
stc
test
imulb
sbb
mov
add
pusha
add
fs
mov
mov
pop
xchg
inc
mov
dec
dec
mov
mov
aad
cli
dec
enter
fildll
mov
mov
dec
test
jbe
add
fimull
jmp
pop
push
lret
push
and
loopne
out
clc
jl
call
decl
imul
dec
sarb
daa
add
xor
add
rolb
xor
rcrb
sbb
inc
shll
mov
pop
or
dec
sub
movsb
incb
rorl
loop
add
cli
xor
cli
mov
mov
inc
sbb
int3
xor
inc
fwait
and
jecxz
adc
imul
movsb
jmp
movl
push
scas
lret
xor
pop
mov
adc
jb
or
ret
inc
or
cltd
push
push
int3
xlat
shlb
jo
mov
push
adc
adc
test
nop
mov
jge
sbb
enter
lret
jg
cld
push
in
sub
iret
inc
push
xor
pop
cmp
and
adc
shrb
fmull
nop
cmp
mov
dec
or
mov
sbb
mov
xchg
insb
mov
and
enter
mov
mov
arpl
out
mov
cli
add
je
dec
mov
push
out
andl
cs
jns
mov
nop
lock
xchg
xchg
xchg
push
enter
add
push
inc
adc
dec
loopne
imul
push
inc
cmp
scas
mov
sub
aam
inc
mov
push
mov
xlat
mov
jmp
cmp
sub
test
adc
sahf
mov
push
adc
jae
cmp
out
xchg
sub
aam
fsubp
xor
or
in
fwait
sub
cld
cmp
mov
fmuls
push
cmp
pop
xchg
or
jo
gs
test
call
push
xchg
inc
lea
call
push
in
mov
or
push
fadds
mov
push
fadds
inc
cmp
adc
sbb
sub
cmp
dec
or
cmp
pop
pop
aad
inc
xchg
cs
cmp
jmp
inc
push
mov
sarb
add
adc
pushf
cld
xchg
adc
adc
test
push
inc
cs
cmpsl
notb
xor
stc
adc
out
es
addr16
or
arpl
jecxz
out
les
sub
mov
imul
xor
push
inc
adc
scas
or
cmp
add
pop
rorb
movsl
push
pop
mov
imul
jo
inc
fdivs
sbb
cwtl
dec
es
or
dec
fcoms
fcoml
add
adc
push
test
ret
movsb
cmp
cltd
dec
add
inc
pop
jecxz
sub
call
adc
pop
frstor
in
push
adc
add
lcall
inc
mov
mov
imul
or
mov
scas
mov
mov
jbe
push
mov
mov
adc
adc
popf
test
add
rorb
cmp
movsl
mov
cmp
xchg
out
scas
xchg
ret
or
and
mov
iret
cmp
xor
pusha
xor
mov
sbbl
push
in
stos
sub
add
inc
or
cbtw
sbb
adc
jmp
push
push
push
fstpl
jo
ficompl
mov
mov
stos
jns
out
push
lcall
sahf
out
mov
add
cmc
test
insb
mov
roll
mov
add
and
sti
clc
mov
int3
fs
jo
xor
or
insb
adc
cmp
outsl
shr
add
sub
test
mov
test
mov
lahf
sub
xor
incl
adc
addr16
sbbl
lock
aas
ret
xchg
mov
cmp
jle
mov
loope
or
es
cmp
popa
adc
or
clc
adc
jl
xor
loopnew
push
loopne
or
int3
and
mov
cmp
push
shl
ljmp
fiadds
or
dec
filds
adc
call
or
push
mov
icebp
push
and
pushl
mov
push
or
sub
and
mov
les
xor
inc
inc
cmp
icebp
lea
addl
pop
cld
or
push
fs
or
push
mov
and
cmp
fmul
and
mov
test
fwait
movsb
bound
jge
add
jb
fcoml
xchg
push
jbe
jne
mov
or
jo
cli
cmpb
adc
in
lock
mov
test
xor
in
fdivp
test
add
or
mov
push
test
or
add
lds
cmp
and
sbb
xor
and
scas
mov
inc
and
push
push
mov
outsb
les
sbb
push
jecxz
mov
sbb
dec
inc
xchg
pop
cmp
xchg
xchg
sub
les
fcoml
push
popa
mov
in
and
test
adc
and
mov
xor
mull
fnsave
add
outsb
push
pop
sbb
jno
jne
sbb
jbe
push
mov
nop
call
out
push
shlb
sbb
les
jo
xor
add
mov
ret
push
filds
jmp
add
adc
mov
add
cmp
pop
mov
stc
push
cld
insb
pop
or
jbe
pop
loop
shll
pop
inc
sbb
xchg
fistps
jae
pushl
push
enter
loopne
decl
dec
test
sbb
dec
xchg
xchg
inc
sbb
rclb
ret
add
scas
popa
dec
mov
push
or
push
xor
adc
add
cs
add
mov
or
dec
sub
cmp
sbb
xchg
mov
and
inc
jl
push
icebp
push
into
btc
push
pop
clc
or
adc
dec
daa
mov
jne
outsb
into
es
xchg
rolb
jle
add
andl
pushl
mov
lea
testl
or
test
and
mov
sbb
add
addl
sbb
fisubl
je
inc
iret
xchg
fadds
iret
add
fstpl
ret
jmp
jle
mov
je
lods
push
outsl
adc
inc
nop
cld
sbb
push
rclb
push
rcll
sbb
cmp
push
shrl
xchg
pop
inc
dec
or
or
and
dec
xchg
mov
or
out
push
push
push
imul
cli
push
pop
jnp
jbe
push
test
inc
fs
out
add
add
sbb
inc
aas
mov
mov
popa
cld
cmpsb
xorb
jmp
xchg
js
push
sbb
ret
xor
insl
and
and
out
fidivs
mov
adc
jno
adc
xchg
ret
lcall
icebp
or
pushf
addr16
iret
mov
xchg
sub
ss
je
mov
add
fmulp
jle
inc
sti
loopne
jne
sbb
rorb
adc
dec
mov
jo
push
and
nop
jnp
push
xchg
pop
fadd
add
xchg
pop
inc
testb
enter
in
rolb
cmp
lods
xchg
inc
andb
roll
dec
shll
add
push
inc
ljmp
cmp
ret
cmpl
xor
sub
lea
aad
adc
push
or
xor
insb
inc
addl
pop
or
js
dec
push
in
loope
add
fiadds
lock
mov
and
int3
sub
popf
xor
or
pop
pop
insb
and
mov
or
lahf
push
scas
add
addr16
dec
ja
movzbl
mov
inc
pop
icebp
sub
cmp
inc
jmp
loopne
push
ja
xor
jmp
cmp
add
or
inc
icebp
push
jmp
adc
pop
lea
les
adc
es
mov
push
mov
fcmovne
sub
out
sahf
imull
xchg
pop
jne
jp
fadds
pop
pop
add
add
push
sub
cmp
push
add
add
or
xor
xchg
test
in
outsl
adc
add
dec
je
add
add
aaa
adc
jne
mov
cli
sbb
lods
sbb
pop
jne
scas
push
or
push
enter
xor
mov
loope
faddl
pop
enter
outsb
rolb
push
dec
rcrb
js
shll
sub
mov
sbb
jmp
sub
pop
je
cmp
adc
and
mov
ss
loopne
adc
adc
sub
or
std
push
pop
sbb
pop
je
sub
je
push
or
adc
jmp
xchg
pop
aad
clc
pop
stc
mov
mov
mov
das
cmp
sub
lods
cmp
push
dec
cmp
jne
mov
xor
mov
enter
in
pop
sti
xchg
cmp
loopne
or
adc
jl
jne
add
loopne
sbb
cmp
cli
cld
hlt
fsubrs
test
test
sub
cmp
pop
inc
or
push
jne
popf
jo
in
popa
fisubl
jbe
dec
push
jae
inc
loopne
jno
icebp
loope
sbb
xor
outsb
orl
mov
adc
add
mov
dec
adc
xlat
sub
loopne
ret
repz
test
inc
push
mov
ret
and
cmpsb
push
jae
add
mov
or
insl
pop
xor
add
inc
cwtl
xor
sahf
dec
mov
arpl
cmc
out
xchg
scas
dec
inc
or
cmp
lahf
adcl
lds
mov
push
and
and
pop
add
push
je
out
xor
xlat
and
sahf
cmp
sbb
loopne
lock
fisubs
in
push
dec
add
test
or
or
or
sub
pop
xor
adc
adcb
add
enter
shrl
xor
lcall
push
mov
into
and
push
outsl
call
sbb
pop
sbb
or
jge
or
dec
lock
and
push
jmp
or
lock
xchg
add
test
sbb
xchg
push
xchg
lcall
or
lock
je
scas
mov
mov
lock
push
mov
fwait
in
xorl
sarl
inc
cmp
sbb
push
in
adc
in
push
xchg
xbegin
in
pushf
cltd
fmuls
inc
enter
sbbb
or
scas
mov
or
nop
sbb
lods
movsb
mov
inc
jno
sbb
mov
clc
popf
sbb
fwait
jne
insb
lock
adc
push
sbb
add
jns
imul
mov
add
addb
mov
jl
push
je
jmp
xor
mov
dec
pop
xor
lods
stos
jbe
xor
ljmp
and
jo
movsb
fisttps
inc
and
lahf
mov
lret
rol
sbb
adc
fwait
push
icebp
jns
sbb
xor
iret
inc
ljmp
out
xor
sub
imul
cmp
or
jno,pt
sub
or
in
and
cmp
loopne
add
xchg
inc
sbbl
xchg
lret
testl
push
rclb
pop
cmp
or
divl
adcl
mov
scas
cwtl
dec
dec
int
gs
lock
push
loope
mov
nop
cmc
add
mov
sub
jmp
test
aam
inc
pop
mov
loope
adc
add
outsl
add
fcmove
xchg
push
and
outsl
or
dec
call
push
xchg
adcl
pop
bnd
pop
shll
cmp
add
pusha
mov
pop
pop
adc
mov
xor
adc
pusha
nop
add
lds
inc
xorb
push
adc
mov
ss
sub
adc
mov
pop
cwtl
jae
jo
xor
mov
test
jb
ja
test
sahf
or
sub
sub
adc
mov
pop
in
insb
call
popf
cmp
cli
jge
push
imul
sbb
loopne
mov
fdiv
ds
sub
cmpsl
push
jmp
lahf
and
adc
inc
dec
sub
mov
lods
call
sbbl
inc
loopne
sets
or
int
insb
and
dec
fmull
jne
jbe
cmp
fcoml
mov
sbb
add
push
or
push
push
xchg
sub
and
mov
mov
mov
inc
adc
sbb
aam
pop
lea
mov
or
xlat
frstor
and
ret
add
inc
sbb
add
push
lock
clc
xor
aam
ret
or
mov
or
adc
mov
pop
sbb
sbb
add
es
and
and
and
ret
jne
pop
inc
stos
adc
inc
adc
aaa
pop
stos
inc
mov
dec
adc
add
cs
push
test
cmp
jl
mov
add
mov
jge
jecxz
loopne
cs
inc
or
sub
ss
mov
js
into
pop
stc
or
test
jne
adc
lock
mov
ds
push
orb
inc
push
xchg
mov
push
fistps
inc
mov
xlat
or
xchg
dec
or
popl
fwait
dec
imul
inc
or
addr16
dec
jb
sub
jno
loop
out
scas
xor
adc
and
sbb
dec
inc
sbb
scas
xor
sbb
mov
inc
cmpsl
pushf
repnz
dec
fsub
add
jge
adc
fwait
sahf
mov
stos
push
test
mov
imul
pushf
rorl
mov
mov
push
mov
rolb
push
sarb
inc
repz
cmp
and
fmull
mov
outsl
lods
jbe
loopne
je
cmc
rorl
aam
js
addr16
pop
sub
mov
jne
pop
loope
jo
gs
jb
or
mov
mov
xchg
sarl
push
pop
jo
insl
sub
dec
jb
pop
pop
filds
popa
daa
mov
pop
dec
int
add
in
or
loop
adc
fsts
inc
shll
mov
cmpsl
push
popa
movsl
sbb
sub
js
pop
pusha
and
jmp
push
mov
jb
cmove
hlt
add
push
xchg
movl
cltd
xor
movsb
add
mov
add
push
add
jno
mov
out
dec
loopne
pop
test
jno
and
std
add
dec
inc
bound
adc
dec
pop
fbld
jne
cwtl
cltd
inc
rclb
push
shr
jmp
mov
out
je
ss
add
sub
or
repnz
xor
repz
jbe
adc
jb
jmp
add
fcoml
and
imul
dec
leave
push
inc
xchg
je
adc
add
lock
inc
mov
pop
or
jne
adc
add
add
andb
imul
into
mov
xor
cmp
push
popl
pop
cwtl
inc
ja
or
or
xchg
xchg
or
cltd
adc
mov
or
out
inc
or
jbe
shll
and
cmp
adc
push
inc
loope
rclb
subb
push
xor
or
push
or
daa
sub
xchg
push
aaa
add
push
mov
jmp
cmp
xor
jbe
xor
das
test
js
nop
push
cltd
pop
idiv
and
and
push
push
mov
adc
jae
push
scas
adc
pusha
sub
add
outsb
jmp
andb
pop
iret
mov
push
testb
ja
mov
pushf
mov
lods
fwait
aad
pop
in
nop
adc
cmp
ja
mov
or
in
sti
xor
out
outsb
mov
shrb
cltd
pop
idiv
sub
add
or
movsb
iret
aad
ja
movsl
add
ljmp
sbb
cmp
ret
xchg
sbb
push
imul
adc
pop
fildl
adc
jnp
pop
jp
add
loopne
mov
call
pop
fstp
jmp
jo
xor
js
sti
mov
rcr
stc
fwait
addb
fldenv
add
cmp
pop
add
push
lds
sbb
mov
dec
add
pop
out
out
add
in
sub
repnz
jo
xor
lret
push
mov
cltd
jbe
imulb
repnz
jae
push
jp
dec
loopne
sbb
ja
mov
imul
sub
sub
scas
mov
inc
mov
call
pop
add
out
test
pop
push
in
xchg
dec
ret
push
add
mov
push
sbb
mov
add
xor
mov
and
mov
gs
add
or
xor
fcoml
cmp
mov
hlt
mov
mov
add
mov
lcall
jl
mov
pop
pop
cli
adc
mov
jg
add
arpl
dec
pop
ret
xchg
add
fisttpl
notl
mov
dec
testl
fmull
std
fsubrs
sub
dec
movsb
movsl
test
dec
test
mov
xor
adc
sbb
in
in
pop
cmp
ret
xor
ja
test
js
mov
test
cltd
sbb
cld
inc
inc
enter
ljmp
cmp
inc
test
sbb
out
xor
cmp
mov
aam
pop
ret
and
dec
stos
pop
inc
pop
clc
pop
xchg
clc
aam
jo
and
or
jp
pop
mov
adcl
mov
inc
rclb
mov
mov
push
ss
lock
jae
int3
add
iret
sub
push
cmp
adcl
jle
and
fmull
pusha
push
jne
xor
pop
clts
rorb
sbb
testl
xor
mov
cld
mov
loopne
pop
pop
sbb
sbb
add
mov
or
daa
pop
pushw
out
mov
xchg
pop
mov
mov
mov
pop
push
out
mov
sbb
jo
popf
xchg
add
fs
ss
pop
xchg
in
ret
xchg
dec
lods
pop
push
dec
and
mov
cmp
adc
mov
dec
frndint
in
test
movb
push
mov
mov
jl
cmp
roll
enter
movsb
adcl
lcall
icebp
inc
lock
mov
xchg
mov
movsl
xchg
jno
sbb
das
cmp
or
hlt
clc
mov
pop
lock
mov
cmp
jl
or
xor
arpl
sbb
rcrb
dec
insl
lea
push
and
lret
gs
add
jnp
sbb
xor
loop
fcomps
lds
ret
mov
loopne
jg
pop
out
cs
and
dec
aaa
jo
xchg
in
jo
cld
or
ret
sub
pushf
stos
sbb
or
pop
jge
imull
and
arpl
pushf
mov
aad
sbb
and
rorb
jl
pop
add
ret
push
xchg
into
dec
lea
cmp
mov
add
pop
add
add
cmp
jge
loopne
push
cmp
adc
mov
or
add
mov
push
mov
out
and
jmp
cmc
fmuls
xchg
popa
mov
mov
mov
xor
sbb
and
popa
mov
xchg
push
addr16
dec
xchg
sub
lahf
push
movsl
mov
imul
pop
pop
xor
das
or
push
and
sub
pop
add
mov
mov
add
push
xor
mov
scas
pop
call
ret
popl
sbb
out
daa
adc
mov
outsl
push
push
in
push
or
push
dec
js
adc
shlb
imul
add
jmp
or
pop
jbe
pop
andb
jecxz
adc
add
adc
jbe
ret
or
sbb
inc
inc
jmp
cltd
and
pop
add
out
jbe
inc
add
adc
inc
jne
sub
sar
dec
ret
out
pusha
call
cmp
mov
in
fnclex
ret
fistl
dec
clc
ret
mov
dec
inc
les
adc
dec
adc
sub
xor
dec
out
je
pop
adc
pop
push
jmp
mov
fnstcw
fwait
adc
or
xchg
fistpll
or
push
clc
push
jnp
into
jp
push
adc
dec
rorl
add
cmp
jbe
sub
cs
shl
sbb
pop
adcb
int3
sub
movsl
jmp
js
jmp
mov
jb
ss
movsb
add
enter
mov
push
jmp
mov
int3
push
lock
mov
mov
mov
xor
testb
inc
add
add
out
jnp
int3
lea
dec
add
push
lcall
out
or
jg
outsl
or
push
push
cmp
repz
inc
cmp
sub
iret
sti
sbb
mov
mov
push
call
iret
repz
lock
hlt
push
hlt
cmp
clc
clc
cld
cld
enter
or
pop
add
add
adc
loope
push
mov
pop
pop
mov
xor
pop
repz
push
andl
adc
lea
push
fnstenv
dec
cld
jmp
xchg
scas
loopne
std
cld
out
adc
neg
ficomps
sbb
pop
stc
sub
ja
sbb
pop
nop
sub
dec
push
jo
mov
fcmovu
add
dec
mov
lods
mov
adc
xchg
aas
inc
out
lods
pop
shrb
out
add
nop
dec
or
sbb
dec
push
pop
add
xor
cmp
cmp
repz
in
hlt
iret
repz
sbb
sbb
cmp
repz
adc
adc
cmp
repz
or
out
sbb
aas
and
sub
cmp
das
push
add
andl
adc
mov
or
arpl
mov
inc
mov
push
add
dec
test
sub
add
inc
mov
testb
mov
test
clc
mov
or
xor
inc
mov
mov
mov
xor
push
push
ret
inc
dec
pop
sarl
adc
mov
jb
clc
inc
mov
mov
adc
or
inc
pushf
and
mov
sub
lea
daa
pop
sub
sbb
sub
add
adc
add
mov
push
gs
adc
pop
pop
faddl
dec
push
lock
dec
sbb
xor
sub
adc
lock
push
test
mov
mov
andb
or
ret
mov
ret
pusha
lea
or
or
sub
xor
int3
lds
mov
add
mov
mov
jbe
mov
call
in
daa
inc
cmp
je
sub
cmp
sbb
and
incl
xchg
sbb
sbb
sbb
movsbl
jmp
lock
push
add
ret
int
es
add
and
je
mov
pop
subb
fmuls
rorb
shlb
ret
je
mov
pusha
jns
dec
adc
or
mov
loopne
mov
je
call
or
subb
add
mov
movsl
sbb
and
pop
sub
sbb
cmp
push
sub
cmc
shll
ss
mov
mov
call
mov
push
cmp
lea
push
je
jnp
cld
adc
data16
cmp
cmp
jae
pop
push
or
loopne
fcoms
std
and
fistpl
pop
mov
jns
shlb
sbb
enter
fwait
and
loope
out
arpl
push
add
cmp
and
aam
push
das
adc
cmpsl
roll
xor
pop
add
into
add
push
jmp
pusha
insb
leave
adc
lcall
mov
shrb
aaa
inc
cmp
mov
mov
jge
ret
pop
jo
or
add
adc
xchg
enter
mov
inc
shlb
les
ret
jne
neg
arpl
mov
pop
int3
add
push
stos
mov
lods
adc
fsubrl
jno
test
pop
testl
push
cmp
je
test
sbb
je
adc
cmp
pop
adc
fbld
lock
lea
mov
test
je
sti
or
mov
jne
mov
or
and
ds
je
jmp
pop
push
out
cmpsl
mov
and
sbb
mov
or
and
mov
dec
sbb
sub
pop
adc
jmp
or
or
mov
clc
imulb
rclb
adc
cmpb
je
cmpb
or
pop
roll
cmp
mov
nop
ret
push
add
clc
push
sbb
nop
shl
lock
and
add
ljmp
cltd
xor
jl
pop
dec
sarb
or
add
scas
jb
sbbl
adc
or
cmp
mov
int
inc
hlt
testb
jb
ds
lock
jne
hlt
inc
pop
add
out
or
jmp
or
push
push
jno
mov
cmp
or
mov
jne
data16
sbb
mov
shll
or
addb
add
push
jmp
sbb
push
inc
enter
sbb
jbe
pop
ja
push
mov
mov
push
sub
lock
adc
adc
mov
pop
sbb
test
pop
outsl
add
cmp
mov
stos
jp
inc
rorl
rcll
add
sub
repnz
inc
push
shlb
sbb
push
clc
xor
add
cwtl
test
inc
inc
dec
imul
out
pop
cmp
pop
je
cmp
je
xor
fidivrs
je
popf
or
repz
fdivrs
subl
leave
sub
fistpl
inc
sbb
push
inc
inc
and
jmp
andb
pop
rcl
call
jmp
aaa
ret
pop
jb
cmpb
jne
and
add
push
sbb
pop
hlt
or
andb
inc
test
pusha
lret
and
or
push
cmpb
mov
or
rolb
jg
inc
jmp
push
das
dec
or
pop
add
or
add
test
adcb
push
and
aam
movsb
or
sub
push
adc
out
es
xchg
jle
hlt
fdivrp
and
iret
mov
mov
leave
add
and
je
adc
adc
sub
pop
sbb
push
or
orb
mov
cmc
mov
or
add
pop
sub
inc
push
aas
clc
sbb
add
lds
mov
popf
lcall
add
enter
pop
loopne
add
xchg
call
pusha
mov
mov
jmp
enter
jo
testl
adc
call
lret
push
adc
add
sbb
or
enter
jl
adc
sbb
test
mov
mov
push
loopnew
adc
jl
ja
data16
cmp
push
push
les
je
testb
push
add
push
pop
clc
inc
mov
push
lcall
scas
ret
xchg
push
jge
imul
int
jbe
cwtl
push
push
sbb
cld
mov
jne
cmp
add
sbb
mov
stc
test
repnz
pop
sbb
pusha
dec
pop
dec
jp
sbb
push
hlt
mov
adc
mov
fnsave
push
push
inc
add
inc
loop
add
push
pop
loope
add
sub
insb
adc
scas
sub
cmp
cli
js
xchg
loopne
rorl
aam
push
div
stos
je
test
repz
dec
jl
leave
add
or
or
jnp
gs
int
into
pushf
sbb
xor
pop
push
enter
or
mov
pop
dec
pop
iret
repz
push
in
aam
call
mov
xchg
push
sub
adc
pop
mov
inc
push
iret
test
inc
mov
mov
iret
pop
insb
add
fisubrs
test
mov
or
repz
repz
fs
je
test
iret
pop
aas
sub
jns
mov
mov
pop
jno
je
jne
sbb
and
and
adc
aam
push
data16
outsb
lds
mov
repnz
aad
nop
lret
sub
insl
cmp
jno
in
divb
or
ret
cmp
sbb
jmp
and
and
lahf
rorb
push
or
subb
fidivl
out
push
push
std
out
lock
mov
sbbb
mov
mov
test
aaa
add
test
test
cmc
fcmovnbe
pusha
pop
mov
jbe
mov
jle
inc
mov
jmp
lret
mov
xchg
mov
and
inc
or
mov
adc
mov
or
scas
out
rolb
pop
xchg
lea
daa
add
jo
xchg
andb
divl
ret
les
pushf
xor
mov
ret
add
dec
orl
and
adc
cld
popa
loope
jae
sbb
pushf
std
lcall
sub
adc
clc
pop
cmp
je
cmp
ja
push
out
idiv
fildll
push
sub
mov
cmp
je
cmp
jne
inc
cmp
test
sbb
test
push
lock
adc
fimuls
rcrl
out
sbb
jmp
cmp
adc
fdivrp
imulb
clc
xchg
xchg
mov
inc
mov
es
push
or
in
fisttpll
test
test
jmp
sbb
mov
inc
jne
loope
bound
les
lods
jno
rorb
cmp
loope
arpl
popf
inc
adc
enter
stos
pusha
or
outsb
inc
jmp
adc
and
movsl
sbb
pop
mov
mov
and
and
dec
pop
test
and
shll
sbb
inc
sbb
dec
cmp
sbb
add
cmpl
mov
xor
sub
call
popl
and
sahf
jp
or
ret
push
mov
add
pop
xchg
push
ret
adc
std
and
in
loope
inc
nop
loopne
adc
push
icebp
jecxz
and
sbb
fmuls
cmp
daa
xchg
push
aad
or
dec
les
ret
mov
ret
jbe
cmp
mov
jne
fisubrl
add
mov
cmp
fstl
mov
rcrl
jbe
cmp
jbe
and
shrb
icebp
pop
push
adc
pop
mov
pushf
dec
scas
fdivr
stos
mov
mov
or
call
or
pop
cmp
sub
fmuls
xor
jno
dec
cli
sub
out
xchg
inc
inc
or
mov
sbbl
leave
sub
dec
leave
sbb
or
push
leave
cmp
aaa
enter
mov
cmp
clc
inc
push
sbb
dec
push
jp
inc
inc
mov
and
adc
add
adc
pop
fs
mov
dec
xchg
mov
mov
mov
mov
push
mov
int3
lock
js
shlb
pop
adc
xor
mov
and
into
dec
dec
mov
or
pop
xor
pop
iret
push
pop
divb
jecxz
cmp
in
and
loope
lahf
nop
mov
mov
ret
pushl
call
mov
xlat
mov
lock
es
in
loopne
pop
push
mov
dec
cld
push
subb
cmp
int3
insb
js
xor
cmc
inc
inc
xor
repnz
mov
and
ss
decl
push
inc
inc
add
sub
jg
pop
cmp
jne
mov
add
cmp
in
call
mov
jb
sbb
sbb
cli
push
or
lds
cld
dec
adc
cmc
and
call
sub
hlt
pusha
push
lods
les
cmp
jne
sbb
out
pushf
fildl
stos
sub
and
dec
mov
dec
mov
jecxz
imul
mov
insb
loopne
adc
inc
adc
pop
dec
or
xor
out
cmp
xchg
or
xchg
cmp
push
enter
insb
repz
jo
loopne
push
mov
add
dec
push
push
loope
xchg
idiv
inc
push
dec
out
iret
cmp
ficoml
ret
jmp
jne
push
xor
out
outsb
sbb
cmp
sbb
leave
pop
and
popf
in
je
adc
lods
jge
push
and
mov
push
addr16
or
push
ret
cmpsl
mov
cmp
pop
es
xor
and
push
or
inc
jmp
cmp
push
dec
adc
jmp
push
push
ja
sbb
adc
and
xchg
cmp
stos
mov
add
lret
cli
out
adc
ja
ret
shl
dec
and
xor
ret
adc
xor
js
or
push
stc
and
add
pop
cmp
adc
add
pop
add
test
mov
mull
pop
mov
mov
out
pop
push
stos
dec
repz
lret
sub
fsubs
mov
loopne
or
mov
and
push
dec
ret
push
pop
daa
pop
or
aaa
cmp
jae
fdivrp
fimull
ret
inc
pusha
clc
cmp
jb
hlt
pop
cmp
jbe
js
cmp
adc
inc
test
add
cmpb
push
hlt
mov
cmp
push
fwait
cld
mov
pop
add
dec
test
mov
add
imul
cmpl
xorb
sub
xchg
jbe
stc
notb
add
add
inc
sub
daa
cli
and
idivb
cmpsl
add
mov
push
mov
pop
and
push
mov
xor
add
jae
add
push
push
mov
inc
mov
inc
cltd
xor
xchg
push
push
subb
jb
insb
gs
movsl
jo
sbb
lods
or
mov
pusha
or
jbe
add
push
out
sbb
loopne
lret
mov
cmp
or
push
test
sbb
inc
repz
and
sub
push
rcl
xor
cmc
fstpt
sbb
jbe
int
shlb
and
pop
ficoms
pop
inc
inc
stc
loopne
push
sti
pop
js
add
xchg
add
add
imul
fmuls
pop
add
mov
and
pop
loope
push
pop
ret
addb
add
or
dec
or
aam
adc
dec
xor
outsl
lods
pop
aas
or
push
ret
inc
adc
push
fistl
xchg
in
or
gs
insb
popf
and
sbb
out
xor
mov
mov
scas
aam
daa
xor
mov
je
sbb
fdivr
add
inc
cmp
icebp
push
push
add
or
or
mov
stc
inc
andl
xchg
dec
mov
pop
xchg
rep
stos
mov
jge
mov
out
mov
test
sbb
cwtl
inc
incl
sarb
ret
xchg
dec
mov
inc
jmp
test
lahf
lea
cmpl
ljmp
xchg
pop
or
sub
mov
or
cli
cmp
ja
mov
xchg
and
mov
popl
jbe
inc
inc
sbb
scas
inc
cmp
loopne
outsb
add
mov
les
sbb
cmp
xor
mov
mov
jbe
mov
push
movsl
movsl
pop
mov
cmpb
loop
sahf
mov
or
mov
push
push
jno
mov
sahf
xor
inc
jmp
push
shll
jge
xchg
stos
add
push
cmpl
xor
pop
iret
or
add
push
push
lret
mov
pop
sbb
dec
and
add
repnz
inc
sub
test
adc
sbb
cld
jne
mov
sbb
movsb
add
and
add
movsb
add
int
sub
mov
push
and
push
jecxz
lock
sarl
movsl
and
jo
sahf
ja
shlb
shrb
cmp
rcrb
addr16
push
xchg
mov
js
adc
jb
mov
push
movb
xchg
sub
push
repz
adc
std
jge
es
push
inc
mov
outsb
jl
adcl
xchg
rcrb
push
xchg
jno
mov
fildll
cmp
cmp
push
xchg
xchg
das
inc
cld
fnstsw
mov
nop
lea
mov
test
je
pop
pop
dec
pusha
notl
mov
sbb
add
xchg
xchg
adc
mov
jecxz
mov
inc
adc
sub
dec
aam
dec
inc
jb
or
xchg
enter
mov
xchg
shlb
adc
jp
push
popf
lea
in
outsl
cmp
and
loopne
xchg
mov
je
shl
jne
push
pop
shl
sub
and
inc
pusha
in
dec
mov
or
mov
faddp
or
ret
call
ficoml
cmp
mov
out
inc
or
mov
inc
shlb
sub
ljmp
mov
mov
mov
dec
inc
sbbb
jb
and
or
inc
pop
adcb
xor
or
movsb
ljmp
xor
and
sub
leave
xor
cmp
adc
mov
add
jne
in
mov
fs
dec
jl
shr
push
adc
data16
imul
push
xor
fs
movsl
icebp
loopne
xchg
cmp
sub
xchg
mov
insb
cmp
fcompl
and
xchg
push
adc
imul
dec
push
push
fnstenv
adc
or
jmp
ret
fcompl
and
inc
cld
dec
sub
add
mov
fnstsw
sbb
push
cmp
jne
ds
xchg
jecxz
or
and
je
inc
push
lahf
adc
orl
mov
jne
outsb
in
add
lods
lods
mov
push
jbe
cmp
cmp
push
inc
xstore-rng
cmpsl
ret
imul
fistpll
pop
push
adc
dec
loop
jbe
shll
mov
dec
xchg
pusha
cltd
jp
push
jge
addb
data16
jg
cmp
stos
xorl
add
adc
fs
jne
test
cmp
in
ljmp
loope
sub
inc
int3
ss
bound
movsb
xchg
push
imul
insb
xchg
cmp
int
jmp
mov
pop
pop
add
push
mov
lods
je
or
xlat
movsl
jecxz
dec
lahf
fwait
call
push
xchg
sbb
push
lds
pop
xchg
push
jb
jne
ffreep
test
rclb
adc
pop
mov
xor
pop
push
xchg
pushw
adc
pusha
mov
in
pop
push
addr16
xchg
aaa
or
testb
jne
mov
and
adc
mov
jne
push
daa
incl
xor
inc
pop
or
jno
sbb
pop
dec
adc
into
mov
ret
mov
movsl
orl
sub
cmpsb
and
in
mov
or
push
addl
add
inc
cmp
mov
dec
mov
popa
xchg
push
xor
lea
jae
xorb
sbb
pushf
movb
mov
icebp
mov
jmp
shl
mov
inc
fsubrs
pop
push
jg
pop
mov
push
cmp
rcrl
add
rorl
mov
lea
or
add
inc
pop
jbe
cmp
inc
push
adc
jne
sub
dec
or
enter
outsb
push
jmp
or
out
ret
dec
les
xor
push
aad
cltd
inc
arpl
sar
ret
nop
mov
pop
add
testb
shrb
adcl
jne
push
test
enter
push
add
or
or
dec
std
pop
cli
loope
mov
pop
data16
fcomp
sar
add
or
add
sbb
pusha
or
xchg
adc
xor
or
push
cli
mov
jl
adc
loope
push
iret
cmp
adc
pop
sub
jmp
cli
add
xor
or
and
in
or
das
mov
fisubl
data16
bound
add
cmp
adcl
pop
jo
or
and
add
push
ret
lock
lea
rcrl
inc
aam
mul
mov
lea
push
cmpsl
mov
sbb
adcl
lahf
add
mov
cld
dec
cmp
or
andb
stc
adc
xor
stc
and
sbb
mov
jb
cmp
dec
outsb
aas
add
or
push
jp
adc
inc
xchg
or
dec
jecxz
and
dec
insl
shrb
jecxz
or
test
pop
jbe
push
adc
jg
pusha
cmp
je
cmp
je
cmp
je
jae
and
dec
in
fmuls
cmp
adc
in
mov
or
mov
pop
nop
inc
add
sbbb
sarb
sub
pop
dec
jne
xchg
mov
push
pop
or
adc
andb
sbb
movsb
push
push
jmp
push
dec
xchg
add
in
push
pusha
mov
pop
inc
jge
mov
test
ss
mov
mov
sbb
mov
jle
movsb
in
pop
aaa
xchg
clc
dec
hlt
sub
pop
or
sub
shl
adc
xchg
data16
xchg
xor
nop
inc
in
jno
neg
xchg
test
xor
std
xchg
jecxz
enter
adc
iret
jo
sub
push
and
push
or
inc
rorl
push
aad
scas
jge
lods
mov
xchg
add
subl
je
xchg
adc
adc
mov
or
inc
dec
aaa
sub
jbe
enter
clc
push
cs
mov
or
jle
ds
aaa
or
fbld
adc
cs
xchg
sub
mov
adc
loop
jbe
and
push
sub
adc
sub
xor
js
xchg
pop
sub
sub
cltd
ret
fidivs
mov
addr16
or
in
mov
hlt
or
mov
mov
jl
push
or
xchg
in
fsubrl
push
xchg
aaa
sbb
xor
sub
xor
loope
cmp
arpl
cmp
xor
xor
mov
loope
ljmp
pop
es
js
dec
and
jns
xor
push
out
mov
inc
sti
sub
jmp
sti
jbe
aas
sub
xor
dec
inc
add
xchg
push
mov
xchg
cmp
inc
cmpl
lods
incl
dec
dec
ret
sub
mov
jg
test
je
dec
dec
dec
push
and
sub
jo
gs
call
clc
cmp
pusha
xor
loop
fcoms
push
push
inc
das
mov
lret
sub
add
cmpsl
imul
cmp
sub
jg
lods
ret
cmp
pop
adc
adc
dec
add
or
sub
push
cmpsb
repz
inc
cmp
inc
jmp
and
movsb
xlat
push
xorb
psrlq
add
push
test
fiaddl
add
or
clc
sbb
rolb
xchg
icebp
fisubrs
adc
pop
inc
hlt
jge
mov
rolb
xor
ficompl
add
pop
imul
lcall
dec
fbld
pop
cmpsb
fdiv
adc
test
pop
clc
mov
mov
sar
mov
sbb
or
testb
dec
fbstp
push
jae
cmpb
jne
xor
push
sbb
icebp
data16
inc
mov
inc
cmp
jns
rolb
sbb
sbb
inc
lods
shll
cwtl
and
leave
xor
dec
pop
dec
pop
sahf
shrb
rorl
aas
int
add
push
push
add
hlt
xchg
cmp
dec
inc
sbb
cmp
jae
subb
inc
inc
or
cld
arpl
and
cmc
insb
and
or
add
mov
sti
add
sbb
and
mov
jmp
or
fists
clc
add
pop
dec
xorl
adc
add
sarb
fisubs
pop
and
push
test
push
insb
insb
jne
xchg
add
outsb
ror
loop
push
mov
dec
rolb
adc
mov
addb
xchg
or
mov
mov
mov
decl
dec
loopne
push
or
cltd
js
xor
or
push
jl
in
xchg
loopne
push
mov
bound
test
mov
testb
in
mov
fmul
xchg
mov
sbb
pop
inc
addb
adc
sbb
cmp
call
test
test
sahf
sub
es
push
mov
push
pop
enter
das
adc
add
andl
mov
lods
insb
popa
lahf
sbb
cmp
xor
pop
cmp
inc
inc
jle
mov
mov
sti
cmp
inc
push
pop
push
mov
xor
xor
es
mov
xor
jbe
jmp
push
or
out
sbb
xor
loopne
push
fcoms
dec
jne
or
cmp
in
cs
pusha
or
xchg
out
mov
xor
icebp
or
or
in
push
or
xchg
fildl
cmp
xorl
or
lods
cld
addr16
jge
dec
jmp
mov
mov
sbb
add
jmp
sbb
mov
or
inc
jl
mov
jmp
imul
mov
call
mov
xlat
shlb
mov
push
xchg
push
imul
jge
ret
repnz
adc
test
pop
dec
mov
mov
cli
add
inc
lea
imul
add
or
ret
add
pushf
or
mov
xor
add
jl
add
xchg
cmp
adc
sbb
pop
scas
jbe
lods
mov
cltd
xor
push
sbb
mov
jl
and
pop
cmp
shl
adc
xchg
add
in
repnz
push
jbe
leave
cmp
cmp
add
inc
movsb
add
pushf
popf
div
mov
test
mov
or
es
xchg
sarb
or
js
dec
mov
lea
pusha
dec
inc
ds
mov
xor
jle
or
bound
jne
and
pop
jb
lret
popa
jecxz
clc
mov
mov
movsl
jmp
cmpsl
adc
int3
xchg
lret
and
lret
mov
test
ror
movsl
in
cmpl
push
add
std
in
mov
mov
subb
dec
inc
lret
pop
xchg
inc
movb
rolb
repnz
test
inc
pop
dec
xorb
mov
lock
sub
jge
or
mov
pop
add
subb
pop
lods
push
adc
test
mov
or
cmpb
jbe
fbld
jle
incl
lock
cmp
dec
adc
lea
cmp
jge
inc
mov
mulb
push
adc
adc
setp
popf
test
push
cmp
cmp
push
add
fdivl
sbb
mov
lock
pushl
jo
dec
call
or
sub
andl
rol
es
icebp
dec
ret
ret
or
out
testl
jle
cmp
jge
sub
inc
into
mov
and
lock
aam
cmp
mov
das
sub
movl
lret
and
stos
xor
int3
insl
dec
lock
cwtl
fsts
ficomps
mov
je
shlb
rorl
sub
es
sbb
pop
sahf
add
inc
shr
push
add
in
ret
in
lcall
stc
pop
inc
or
loope
stc
inc
data16
push
cmp
enter
test
adc
shrl
sahf
add
mov
inc
push
pop
or
add
cld
pop
adc
adc
pop
cmp
dec
fcmovnb
or
or
mov
add
and
std
cmp
test
pusha
jb
pop
popf
lret
adc
test
fsubrl
mov
sbb
or
andl
cmp
or
bound
test
ret
or
cmp
rcrl
mov
ds
andl
daa
jle
xchg
cmpw
pop
dec
mov
leave
test
mov
and
adc
inc
sbb
sub
sti
pop
sub
push
shld
ret
fcmovb
mov
sbb
adc
stos
add
adc
jb
int
or
call
push
adc
push
cmp
cmp
in
inc
cmp
jl
cmp
jg
sub
mov
in
dec
lock
sbb
or
pop
xor
sub
mov
push
fs
cltd
xor
cmp
mov
test
or
loop
push
push
shll
ds
push
test
mov
in
sbb
xor
cmpl
cmp
sbb
loopne
sbb
ja
push
mov
xor
cmpsl
cmc
repnz
add
cmpsb
cld
out
cmpb
dec
or
lret
adc
add
mov
xchg
aam
add
popa
dec
ret
leave
test
or
scas
jno
mov
add
icebp
add
or
pop
call
repz
pusha
outsb
dec
ret
sbbb
and
outsb
push
mov
sarb
test
js
or
out
pop
fwait
mov
or
add
or
sub
frstor
orb
lock
add
push
or
cli
add
pop
lcall
push
or
aad
and
sbb
clc
cmp
cld
sub
shll
fsubrl
add
add
popa
push
ss
push
or
adc
add
imul
lea
fmuls
push
cld
int3
adc
pushl
leave
testb
jle
cli
add
cmp
jbe
push
pop
loopne
mov
or
push
and
mov
orb
testl
or
add
sub
lea
inc
pop
jns
mov
pushf
mov
pop
add
mov
add
push
test
mov
out
in
negb
sub
or
and
push
push
cs
rolb
pop
mov
sub
pusha
mov
jne
and
sti
add
dec
popa
jge
in
pop
cmp
jbe
mov
jbe
sub
xchg
and
cmp
fcoml
or
es
jno
cmp
sarl
mov
and
add
mov
xor
jmp
lea
cmp
xorl
jae
xchg
or
testb
dec
pop
push
dec
dec
jno
sbb
lcall
mov
push
cld
pop
roll
es
bound
sbb
dec
mov
or
cmp
mov
dec
paddd
mov
jae
dec
jo
xor
inc
xchg
mov
adc
jl
push
xchg
dec
stos
push
mov
js
pop
jno
adc
pop
xor
decl
js
pop
mov
negb
jo
mov
add
movsb
add
cmpsl
lods
adc
push
mov
push
mov
aas
gs
mov
push
or
movsb
mov
scas
push
lret
in
decb
adc
inc
xor
add
and
pushl
mov
clc
and
cs
sbb
pop
jmp
adc
shrb
adc
push
lea
mov
js
and
jbe
shrl
scas
or
rcrb
sbb
iret
mov
inc
inc
adc
pusha
lret
leave
inc
add
dec
pusha
loopne
fwait
mov
inc
sar
sbb
outsb
adc
in
push
pop
mov
jg
add
data16
call
movsl
xor
sub
inc
mov
and
decb
iret
jge
inc
or
xor
iret
xorl
cmp
dec
adc
clc
mov
xor
dec
jae
pop
or
and
in
es
stc
pop
out
out
dec
testb
je
pop
lock
mov
aaa
or
cmpsb
cmp
out
cltd
push
sbb
cli
jnp
mov
mov
fwait
sbb
mov
popf
add
mov
add
inc
add
push
adc
icebp
rcrb
mov
je
or
xor
in
xlat
mov
rcll
int
mov
enter
shl
inc
jmp
mov
stc
sub
xchg
sub
pop
mov
add
cmp
jle
adc
lods
int3
mov
xor
cmpsb
dec
inc
dec
popa
cmp
sub
scas
push
leave
push
movsb
cli
sti
sub
xchg
and
mov
decb
jne
lcall
and
jmp
dec
sub
sbb
pop
push
sub
mov
push
insb
xor
dec
and
mov
add
mov
ljmp
add
icebp
jle
jp
lcall
or
test
jle
decb
jge
cmp
jbe
sub
add
into
shr
or
imul
mov
jmp
push
pop
or
dec
loopne
push
jnp
arpl
sub
or
inc
push
shl
cmpsl
mov
or
fdivs
roll
xor
shll
call
jne
cmp
mov
adc
jp
xchg
fbld
mov
lea
adc
pop
fiaddl
ret
add
push
fisubs
xor
inc
cmp
xchg
cmp
insl
jnp
push
mov
andb
rolb
sub
add
mov
dec
inc
xor
add
sub
or
dec
inc
mov
add
sahf
xor
mov
inc
adc
movsb
aam
push
sahf
loopne
ret
outsb
imul
add
xor
in
inc
or
push
dec
cmp
pop
popa
add
or
out
jns
loope
sbb
add
pop
insb
pop
or
xchg
xchg
testb
ja
lea
inc
scas
push
dec
in
mov
psubsb
inc
sub
test
js
out
inc
add
sub
sub
fiaddl
push
add
add
stos
jno
mov
dec
or
push
inc
fsubl
mov
sahf
pop
mov
inc
dec
sbb
je
dec
test
mov
jne
or
mov
and
inc
add
sbb
rcr
pusha
test
dec
mov
sub
inc
xchg
ljmp
add
jmp
push
pop
cmp
sahf
test
mov
ret
rcrb
jp
jl
leave
jl
popl
xor
push
sbb
pushf
pop
push
mov
mov
dec
pop
dec
or
pop
cmpsl
rorl
aad
nop
add
nop
pop
int3
or
and
inc
fdivrl
and
nop
dec
or
lcall
inc
pop
cld
js
stos
fiadds
loope
stos
sar
dec
mov
cs
enter
cmc
pop
cmp
or
xchg
pop
jg
or
xor
push
push
dec
pop
dec
pop
pop
cmp
dec
pop
pop
add
xchg
adc
enter
jae
int3
adc
mov
jmp
inc
out
pusha
inc
sahf
mov
jae
pop
or
in
xor
inc
xor
ja
dec
test
and
xchg
pop
inc
and
mov
jmp
inc
repz
mov
lods
mov
inc
dec
insb
pop
xor
and
add
scas
pop
adc
stos
xor
add
jne
cmp
mov
cmp
int
ret
xlat
into
je
mov
xchg
repz
xlat
dec
pop
sbb
sbb
in
in
repz
das
dec
ja
ja
inc
pusha
test
in
or
push
pop
xchg
fstpt
aad
or
and
shl
movnti
pop
xor
or
ret
inc
or
test
ret
inc
sub
test
fcoms
add
adc
jns
and
jg
test
push
inc
aas
sbbl
sub
mov
add
pop
xor
pop
jbe
dec
add
pop
les
lock
into
mov
popa
in
pop
sbb
por
das
or
xor
xchg
loope
rolb
ret
xor
js
xchg
mov
std
adc
popf
pusha
inc
jecxz
sub
dec
inc
mov
str
es
mov
push
add
push
pop
cmp
jae
orb
jne
add
cmp
daa
xchg
adc
add
cld
andw
push
je
sbb
fs
push
popa
loopne
addr16
fsubl
xor
fwait
sti
mov
and
xor
mov
push
dec
movsl
bound
push
mov
or
adc
push
cmpl
sahf
pusha
lods
pop
popa
mov
loope
into
lock
lods
aas
jae
cmp
sbbb
repz
mov
or
push
pop
xor
ret
mov
inc
xchg
cltd
repnz
sub
pop
shr
xchg
xchg
sahf
inc
je
cmpl
mov
and
or
andb
je
cli
out
punpcklbw
pop
cld
sbb
xor
or
jno
jp
pop
cmc
scas
add
or
jmp
rolb
add
or
dec
mov
aaa
jmp
test
xor
and
push
out
and
jb
mov
mov
or
in
and
sub
sbb
ret
clc
ret
xor
inc
insl
fimuls
sub
stc
or
enter
out
rcrb
or
add
andb
cmp
orl
jne
incl
hlt
lret
jecxz
or
push
ss
das
dec
push
mov
sbb
adc
lret
push
mov
jno
mov
add
loopne
cmp
rorb
and
jae
mov
lcall
lea
jbe
push
dec
clc
icebp
xor
jne
sub
movl
or
and
xchg
jg
sbb
xorb
jl
cltd
adc
in
pop
jnp
sbbb
cmp
out
movsb
cmp
jb
mov
cmp
adc
adc
testl
clc
in
rcll
pop
add
and
or
mov
sbb
mov
fisubrl
mov
or
repz
sub
inc
rcll
out
add
push
mov
dec
mov
adc
aam
inc
xor
movsb
movsb
pop
popa
xor
add
inc
jecxz
push
pop
xor
inc
cmp
clc
insl
dec
insl
movsl
jp
jno
mov
jle
outsb
sbb
xchg
vpsrlq
push
cld
mov
jo
adc
inc
cmp
xor
and
out
mov
mov
inc
add
mov
testb
pop
lahf
cli
mov
mov
or
add
lock
lret
add
test
divb
xchg
sub
or
fdivr
push
daa
jle
sub
cmpsb
inc
shrl
push
sbb
lret
addr16
fucom
nop
mov
cmp
jp
sbb
fadds
or
scas
and
mov
dec
mov
pop
add
sub
sub
loope
mov
js
cli
add
idiv
sub
add
xor
cmp
jae
clc
test
push
xor
add
insb
mov
inc
inc
jmp
mov
cmp
les
icebp
push
mov
cltd
sbb
outsb
pop
xchg
add
jno
divl
mov
data16
cltd
inc
mov
pop
add
inc
inc
lea
bound
scas
pusha
or
push
sbb
mov
jmp
jp
sub
mov
xor
jmp
xor
lock
cmpsl
outsb
push
ret
and
dec
imul
push
mov
fs
inc
add
pop
aad
icebp
push
cmpl
clc
or
sbb
sbb
into
sub
mov
add
sahf
shr
jae
es
rcrl
movsb
add
push
mov
push
cmpsb
or
push
outsb
inc
mov
or
ja
and
js
jae
cld
mov
cmp
lret
cmp
out
shlb
inc
push
arpl
pushf
flds
sub
sarb
sbb
push
fdivs
pushf
mov
hlt
call
push
movsb
xchg
je
adc
mov
cmpl
and
push
rolb
test
adc
adc
push
pop
enter
icebp
pinsrw
mov
jmp
jmp
arpl
ss
test
negb
sar
pop
sahf
clc
mov
inc
xor
pop
inc
xor
fldpi
pop
ljmp
inc
or
xorb
dec
jmp
inc
jae
or
popa
mov
jl
push
aad
pusha
add
push
xchg
imul
push
mov
pop
orb
js
dec
push
stc
sahf
flds
test
push
sbb
popa
sub
add
mov
add
stos
or
or
mov
jmp
pusha
dec
dec
pop
xchg
call
fwait
adc
pop
sub
add
aam
push
inc
arpl
sbb
push
sbb
push
mov
cmp
pcmpgtw
push
sub
add
jg
insb
sbb
and
sbb
cmc
hlt
gs
mov
stos
outsl
mov
imul
das
sar
mov
jmp
push
sbb
das
xchg
je
cmpl
fidivrl
mov
inc
cmp
dec
adc
inc
pop
push
sbb
mov
push
mov
mov
gs
xor
sub
idivb
or
sbb
pop
addb
add
lcall
or
mov
jle
push
mov
jle
bound
jle
jne
loop
loope
adc
push
xor
std
add
jo
insb
adcb
adc
adc
cmp
and
adc
leave
cs
ret
mov
rcll
shll
aad
lock
or
sub
or
mov
mov
jae
jl
jnp
jg
add
or
or
andps
jle
jns
lea
mov
and
jle
cwtl
aaa
aas
and
and
pop
pop
test
mov
cmp
loope
hlt
xorl
pop
stos
adcb
jg
jmp
cmp
and
jge
push
subb
aaa
mov
std
rolb
add
sub
inc
pop
data16
test
mov
jg
or
xchg
push
xchg
shlb
jne
dec
mov
clc
lock
jae
cmp
inc
add
pop
xor
add
push
int
adcb
std
enter
and
push
add
aad
push
js
add
fst
rol
adc
test
out
sub
inc
outsl
dec
pop
addb
adc
lea
je
les
imul
je
sub
pop
and
push
add
pop
or
and
jae
or
test
or
cmpsl
test
cmp
mov
and
jae
cmp
inc
in
add
adc
add
xchg
jle
cmp
lcall
lock
or
mov
xor
push
push
shrl
jmp
mov
dec
out
fdivrl
inc
test
insb
xor
mov
mov
mov
xor
aad
push
add
cmp
mov
push
daa
int
jno
jge
pop
insl
jne
and
cmp
ljmp
jp
sub
mov
fstl
push
lock
nop
loope
sub
repz
fwait
rcrb
faddp
cs
stos
fwait
roll
nop
xchg
dec
or
sbb
nop
popa
mov
sbb
int3
cld
int
mov
adc
jo
pop
cmc
popa
sub
dec
add
outsb
bnd
xor
icebp
inc
in
or
stos
bound
loopne
insb
aam
fwait
add
bound
push
out
imul
movsb
adc
add
faddl
pop
mov
test
outsb
sub
jb
mov
icebp
in
add
inc
pop
loopne
aas
push
sub
add
jb
xchg
and
adc
xchg
xor
je
adc
adc
push
and
push
mov
or
or
xchg
test
repnz
out
enter
es
push
jne
dec
cmp
out
adc
or
ss
sub
add
inc
jo
xor
mov
mov
xor
mov
add
fldenv
daa
add
dec
push
loop
and
pop
in
lcall
add
imul
shlb
ficoms
push
push
shlb
cmpl
in
mov
mov
insl
fistl
sbb
stos
jne
pop
enter
mov
arpl
std
cmp
jmp
jae
cs
je
imul
sbb
xchg
xor
sbb
add
inc
xchg
stos
jmp
xor
jmp
mov
push
jge
pop
xchg
and
je
dec
add
iret
add
pop
or
js
ja
idivb
cmp
inc
or
mov
pop
add
aaa
addl
scas
inc
popa
mov
add
mov
pop
push
dec
jg
xor
add
pop
imul
loopne
jp
ret
push
mov
or
or
fstpl
pop
jmp
stc
add
addr16
mov
pop
enter
inc
mov
pop
ret
jmp
imul
and
mov
daa
jmp
mov
pop
pop
int3
rolb
push
nop
and
das
ret
mov
push
mov
nop
or
xor
jne
fldenv
inc
push
sbb
adc
add
mov
xchg
sub
inc
gs
ret
scas
add
add
movsb
sbb
in
push
in
inc
inc
pop
arpl
cmp
add
imul
or
fwait
add
inc
cmp
je
inc
pop
hlt
int
aaa
pusha
ss
inc
cltd
cmp
xchg
pop
cmp
cwtl
hlt
les
insl
mov
cltd
push
sti
or
shr
pop
stos
or
cmp
sbb
or
cmp
adc
add
std
pop
pop
clc
adc
fdivl
fmull
insl
lock
nop
add
jbe
lds
loop
dec
push
cmpsb
out
dec
shrb
mov
mov
pop
dec
sbb
incl
xchg
add
and
cmp
lods
xor
add
sbb
xchg
mov
mov
popa
mov
push
in
rorl
test
jne
cld
ret
jp
inc
mov
lret
jnp
sub
add
hlt
and
xor
or
aas
ds
mov
dec
cmpb
je
cmp
jne
dec
mov
inc
xchg
sbbb
mov
fldl
aam
dec
sbb
xorl
mov
call
jno
outsb
clc
lcall
xor
rcrb
lea
xor
push
xor
cwtl
lret
inc
inc
sub
sub
push
in
adc
inc
cs
rcrl
lahf
shll
xor
mov
mov
push
and
fimuls
or
dec
xor
aaa
xorps
pop
sbb
lcall
jle
les
lahf
push
push
daa
push
mov
jne
movb
adc
dec
jle
add
insb
xor
add
fsub
mov
cli
lcall
nop
push
or
push
jno
addl
sbb
cmp
add
or
dec
jns
neg
inc
cmp
jl
cmpsb
sbb
push
adc
bnd
nop
mov
sub
or
add
xor
push
jnp
inc
hlt
out
inc
add
xor
or
sub
or
adc
jo
in
push
push
pop
jo
cmp
mov
sub
xor
ds
add
loope
test
insb
popa
xor
jmp
add
cmp
inc
das
add
pop
mov
test
ret
out
jge
leave
add
pop
push
add
mov
jo
lock
adc
xor
mov
jecxz
pusha
cmpb
addl
jno
mov
push
push
add
aad
stos
in
jl
shll
es
jge
call
mov
and
pop
fiadds
enter
adc
lea
add
add
xor
or
or
aam
xchg
xor
or
mov
sbb
cmp
testb
jmp
and
popa
clc
or
cli
fstpl
xchg
xchg
notl
jo
mov
cmp
ret
add
add
mov
fldl
cmp
and
jbe
mov
add
sub
push
inc
es
jne
mov
ret
nop
sbb
dec
mov
rcl
inc
xchg
incl
adc
inc
pusha
loopne
add
dec
data16
lret
mov
dec
fstl
roll
call
xchg
test
xor
nop
cltd
mov
sub
loopne
jmp
xchg
xchg
cmp
je
test
aas
jne
pop
cmp
xchg
mov
out
inc
cmp
dec
xor
adc
pop
dec
pop
rclb
in
push
push
je
jne
inc
fidivrl
in
and
xor
call
mov
push
in
mov
push
push
sbb
xchg
jbe
push
test
mov
pop
dec
dec
mov
push
mov
mov
sbb
jb
sbb
repnz
addl
test
shr
pop
mov
test
test
push
push
or
fcoml
pusha
xorb
push
mov
mov
or
push
jge
ficoml
lods
cmp
sub
xor
adc
pop
loopne
add
adc
push
inc
push
adc
out
jo
lods
aaa
cmp
cmp
mov
loope
popl
sahf
push
dec
add
mov
cmp
pop
jge
cmp
xchg
jle
dec
mov
js
and
xor
gs
adc
pop
enter
add
inc
or
add
pop
or
or
add
or
cltd
mov
es
outsb
sbb
pop
add
push
lods
scas
mov
mov
or
or
push
pop
inc
rcll
movsb
pop
sbb
or
ja
push
mov
inc
jmp
popf
pop
push
pop
push
sar
cltd
pushw
push
pop
push
or
std
mov
push
dec
or
sbb
cld
mov
add
scas
int
cmp
and
dec
and
inc
fsubr
or
jae
or
pop
pop
push
divl
orl
pop
xor
pop
icebp
inc
fisttps
movsb
in
mov
pop
xchg
je
lods
pop
or
stos
scas
or
fnstenv
push
push
in
or
mov
adc
mov
mov
adc
mov
xor
mov
pop
in
outsb
hlt
ljmp
popa
jne
and
pusha
mov
pop
subb
mov
push
xor
fdivl
out
out
jns
ja
adc
xchg
pop
sbb
add
outsb
or
cld
nop
dec
push
dec
icebp
clc
mov
cmp
push
push
xor
pusha
mov
jg
mov
jmp
inc
fs
jmp
ljmp
aas
mov
jge
jle
fmul
or
inc
adc
cmp
mov
pop
shlb
push
mov
add
cltd
xor
lret
jp
pop
int3
inc
push
push
mov
enter
pusha
stos
and
and
add
cmp
sahf
les
or
and
inc
or
inc
pop
cltd
cmp
lock
unpckhps
fcomp
lea
clc
xor
add
inc
jl
pop
lock
add
stos
jg
jge
mov
pop
mov
enter
sbb
xchg
push
push
adc
sysenter
jmp
mov
shll
pushf
push
data16
and
jmp
sbb
mov
stos
shrb
pop
cli
push
or
cltd
test
cmp
pushl
sub
cmp
dec
push
pmaxsw
and
pop
or
aaa
es
sub
push
and
mov
xchg
and
dec
push
inc
cmp
ret
inc
add
xchg
test
ret
mov
push
cmp
jge
lea
cltd
xchg
or
fwait
nop
xchg
fs
inc
cmp
cmp
xor
loop
and
mov
pop
add
inc
pop
sbbl
lret
xchg
orl
sbb
ds
lea
push
cmp
xchg
xchg
ljmp
stos
pusha
cwtl
test
shll
or
xor
sbb
inc
push
jno
xchg
or
or
lea
gs
mov
dec
in
ja
mov
je
lea
add
mov
cmp
jae
cmp
jne
fisubs
or
cmp
sbb
jb
shr
xor
pop
and
enter
jne
xchg
and
shlb
push
shrb
test
inc
push
adc
inc
or
jbe
mov
push
sbb
fnstenv
push
inc
mov
jne
arpl
js
fadds
popa
and
cmp
das
negl
call
clc
mov
add
leave
cli
popf
bound
je
push
push
loop
decl
xlat
call
xchg
and
test
outsb
jp
push
pop
mov
pop
xor
add
outsb
jne
out
rol
pop
decl
xchg
xchg
pop
push
push
add
int3
sub
aad
push
jnp
add
jne
nop
push
fstl
inc
add
mov
sbb
xor
adc
push
inc
and
js
mov
test
cmpsb
lods
inc
or
xchg
sub
dec
xchg
imul
test
pop
dec
mov
cmp
push
jno
xor
cmp
cmp
loopne
pop
pop
jl
imul
mov
xor
aaa
je
sub
push
jno
mov
cli
jl
test
shlb
jg
hlt
mov
mov
inc
inc
pop
aad
jae
add
inc
cmpl
jmp
cmp
xorl
mov
inc
lret
or
adc
jne
clc
mov
add
dec
bound
test
push
scas
adc
adcb
push
add
or
jns
push
dec
fdiv
incl
aad
push
push
mov
inc
add
sub
sub
call
xchg
and
gs
bound
and
rclb
add
aaa
hlt
lods
push
pop
mov
shr
mov
dec
cmp
and
pusha
push
inc
adc
inc
mov
dec
dec
cmpl
push
sbb
je
fs
cs
sbb
push
aas
push
or
add
add
out
ss
call
sbb
fdivs
andl
jb
jo
push
negb
mov
aad
cmp
fisubrl
loop
notb
jne
aad
jae
push
adc
test
icebp
sub
xchg
rcr
aaa
push
push
popa
test
sub
or
dec
ret
push
sub
inc
inc
adc
jne
add
mov
or
aam
clc
add
sub
add
push
std
adc
xchg
cmp
jmp
xor
testb
push
push
cmp
mov
cmp
inc
je
dec
dec
lahf
push
dec
ljmp
cmp
jle
pusha
pusha
adc
out
fsts
dec
arpl
dec
add
push
or
idiv
or
and
aam
popf
loope
movsb
ljmp
cmpsb
or
add
hlt
sub
dec
popa
dec
jmp
fs
cmp
sbb
dec
xchg
shlb
movsb
arpl
jne
push
ficoms
jmp
mov
inc
add
push
sarb
test
lods
fs
inc
add
adc
cmp
or
test
jnp
dec
cmp
mov
enter
cmp
pushf
push
add
lea
add
pop
push
add
inc
or
jl
adc
addl
and
enter
mov
inc
imul
or
int3
das
ret
mov
or
mov
mov
inc
inc
push
mov
aas
imul
cmp
decl
pusha
xchg
jne
test
sbb
nop
push
sbb
sbbb
dec
jns
cmc
and
pop
bndldx
jo
xchg
insl
push
loope
xor
inc
out
ds
push
orb
jno
push
setbe
adc
adc
daa
loop
addb
add
adc
je
and
out
xchg
mov
cld
push
add
aad
stc
mov
loopne
xor
add
fidivrl
cli
adc
adc
sbb
mov
inc
shl
cmp
xlat
push
sbb
loopne
aad
cli
jmp
mov
test
push
mov
jnp
pop
div
pusha
adc
call
jb
lret
mov
mov
sub
push
out
clc
add
fwait
sbb
clc
push
in
sub
adc
jb
and
sub
les
mov
popf
addl
push
dec
cs
pushf
inc
lahf
mov
es
scas
inc
add
dec
icebp
cmp
xchg
movsb
adc
xlat
rolb
sub
add
jp
sub
mov
push
add
pop
inc
bts
cld
push
pop
dec
dec
dec
push
push
or
mov
jae
cmpsb
pushf
jb
mov
add
jne
not
leave
push
scas
inc
je
dec
dec
add
ja
xor
mov
mov
mov
inc
dec
mov
ret
dec
and
dec
test
add
pop
shlb
jb
dec
test
cmpsb
sub
orb
sub
jl
or
movb
fisttpl
lds
lar
mov
adcb
mov
jg
imul
mov
or
adc
pop
je
or
pop
in
pop
add
or
mov
test
aam
sub
inc
test
xchg
paddb
std
xchg
adc
fidivs
push
mov
add
test
and
out
or
test
and
popf
jbe
lret
dec
and
inc
insb
jb
aas
xchg
outsb
or
pop
loopne
add
addr16
dec
or
mov
subb
cmp
bound
push
cltd
rcll
mov
sub
xor
xchg
jnp
nop
mov
lods
xor
lods
dec
mov
adc
bound
cmp
xlat
inc
xor
sti
dec
or
lahf
jmp
sbb
iret
loop
push
inc
add
out
sub
mov
fildl
dec
rorb
pushf
jo
dec
pop
mov
jnp
dec
adc
adc
mov
jl
and
js
push
push
jo
fistpl
mov
pusha
add
mov
subb
arpl
aas
insb
xchg
push
xor
add
cwtl
int3
ds
nop
inc
mov
push
imul
xchg
xchg
mov
call
sub
dec
clc
pop
subl
add
dec
dec
repz
and
xor
sti
sub
sbb
daa
add
std
push
push
fimull
lea
xchg
icebp
jge
mov
mov
mov
lea
jmp
bnd
es
lcall
outsb
xchg
in
cmp
dec
jbe
lcall
insb
je
ja
jmp
lret
cld
inc
adc
insb
pop
jne
and
ss
jle
xor
inc
sub
sub
push
xor
and
lock
and
movsl
insb
and
add
push
or
mov
add
xor
clc
addr16
or
movsl
pop
and
imul
inc
adc
in
push
insb
and
test
adc
cltd
xchg
dec
xor
push
add
push
jne
xor
or
dec
dec
cmp
icebp
inc
data16
cmp
rcrb
dec
ret
sbb
and
and
or
adc
jmp
lahf
cmpsb
jnp
push
out
sub
adc
and
mov
out
pop
mov
mov
push
subl
punpckhbw
or
outsl
push
pop
xorl
xchg
lock
jl
or
test
movsb
lret
call
cli
add
mov
pop
mov
lock
push
mov
inc
movd
sub
cs
pop
mov
int
popa
testl
cmp
sahf
cwtl
push
sbb
sbb
sub
ds
add
pop
clc
xor
or
pop
pop
adc
mov
pop
add
not
cmp
ja
push
sbb
dec
mov
aam
or
dec
or
mov
mov
mov
in
push
rolb
mov
out
or
fidivs
sbb
push
out
xor
pop
adc
mov
and
sbb
js
jnp
add
fistps
cmpsb
jecxz
push
imul
inc
push
jb
fdivrl
aam
outsb
pusha
pop
jge
add
push
push
lods
mov
int3
daa
cmp
cltd
jecxz
outsb
xor
push
xchg
fsubs
xor
dec
fidivrl
push
gs
pop
lcall
insl
jg
mov
movb
add
and
jle
out
mov
inc
jmp
inc
inc
addr16
or
cmpsb
test
outsl
adc
xor
in
frstor
add
out
imul
rcr
out
ret
ss
je
jne
pop
jmp
jnp
and
inc
testb
lods
rcrb
add
repnz
or
loopne
xor
xor
fimull
mov
jl
jae
lock
push
popl
jl
fcmove
sbb
push
jmp
sbb
divl
test
pop
fiaddl
or
mov
je
add
icebp
cmp
lods
pop
loope
dec
jl
xor
pop
in
fsubr
mov
sub
add
or
sub
cltd
sbb
dec
pushf
lock
push
push
sbb
sbb
push
ret
xor
or
sti
out
shll
rclb
mov
jmp
lods
sub
add
inc
sbb
xor
cwtl
add
dec
inc
push
movb
xor
rorb
hlt
cmpl
adc
test
in
or
push
push
adc
cmp
sbb
adc
pop
mov
sub
add
xor
add
inc
mov
mov
popf
xchg
mov
ljmp
sub
push
inc
nop
dec
ficoml
bound
loopne
mov
jle
push
pop
mov
add
arpl
mov
xor
ret
mov
dec
imul
shr
adc
sub
sbb
int3
pusha
shlb
outsb
dec
xor
pop
mov
pop
push
cmpsl
pusha
push
stos
clc
mov
jnp
imulb
mov
cs
fistl
push
not
jns
sbb
push
out
or
dec
dec
pop
add
mov
mov
add
add
push
xchg
add
mov
push
rcll
movsl
jns
cmp
cli
jle
mov
pop
jnp
push
mov
pop
inc
jg
and
ret
dec
jo
and
lret
adc
push
inc
mov
jp
dec
insb
loop
addl
fcmovne
sub
dec
sti
mov
decb
nop
and
cmp
loopne
in
rorb
jecxz
fldcw
pusha
mov
in
add
outsl
aas
dec
repz
mov
xor
cmp
ja
sbb
in
dec
not
and
xor
imul
dec
mov
mov
ds
das
sbb
pop
push
or
test
scas
lret
push
insl
push
xor
push
push
pop
mov
push
out
sbb
add
sbb
inc
push
addr16
dec
in
inc
daa
lret
xchg
pop
sbb
push
pop
andb
je
cmpsb
inc
sbb
push
arpl
cmp
fadd
inc
add
hlt
or
push
or
xor
stos
push
push
sub
mov
sbbb
lret
jno
in
fistpl
int3
test
jp
sub
inc
and
mov
jg
lock
sub
pop
add
sti
shlb
jge
leave
les
mov
loopne
push
jnp
jmp
imul
andb
and
mov
sbb
cmpl
and
adc
psubsb
xor
movsl
cmp
sbb
jns
out
or
aaa
aaa
or
jmp
std
jmp
cld
jg
lock
insb
mov
mov
inc
adc
outsl
add
jl
add
loope
xchg
cmpsb
inc
or
adc
ds
aad
jo
adc
inc
sbb
sbb
sub
subb
cli
addb
addr16
icebp
jae
push
shr
push
push
xchg
test
pop
cmp
shr
rcr
shr
rcr
or
div
xorb
mov
mov
sti
fisttps
out
shll
cmp
or
cmp
add
rorl
sub
js
jae
frstor
lock
fldl
pop
jae
test
iret
into
in
pop
cwtl
xchg
or
xlat
or
push
jbe
repz
or
jbe
and
or
stos
fildl
mov
push
push
pop
subb
faddl
push
cmp
and
mov
xor
xchg
or
and
mov
xor
inc
mov
loopne
pop
sub
adc
cmp
cmpb
lock
push
flds
sub
lahf
mov
jle
add
and
cli
shl
ficoms
push
or
faddl
leave
sbb
cwtl
inc
push
shl
jnp
scas
mov
cmp
sub
push
mov
je
mov
push
scas
clc
movsl
pop
fnstcw
jge
cmp
lcall
out
cmp
and
add
insb
cmpsb
sub
add
mov
cltd
fildll
inc
mov
xchg
cli
jg
jmp
mov
jmp
push
sahf
iret
lods
popa
jae
gs
lods
push
cmp
sub
xor
cmp
scas
nop
imul
faddl
cmp
pusha
pop
test
and
sub
loope
jg
and
movsl
pop
cmp
add
add
inc
cs
sub
inc
push
cld
push
inc
inc
imul
mov
outsl
loope
pop
push
ret
imul
push
push
stc
sar
push
fxch
push
cmp
lea
xchg
mov
adc
loope
cmp
xor
repnz
ret
cmpl
lods
dec
or
sub
push
dec
aam
sbb
icebp
dec
mov
ret
fidivrl
adc
mov
or
xchg
jae
testb
or
addr16
and
testb
fsubrs
inc
push
cs
les
add
sub
movsb
pop
push
andb
mov
or
xchg
popa
add
shll
ja
lock
cmp
push
mov
xor
add
sbb
adc
adc
faddl
mov
into
pop
xchg
inc
movb
loopne
add
stos
and
add
push
pushl
add
xchg
push
or
pop
shlb
into
add
mov
inc
js
subl
mov
jno
inc
pop
pop
add
xor
les
cmp
mov
cmp
jne
or
icebp
data16
jp
or
scas
clc
or
mov
mov
cmp
data16
insb
rcrl
push
add
jp
or
sbb
shl
rcr
cmp
add
pop
movb
inc
mov
jae
push
vpmovuswb
movsb
xchg
jbe
lahf
or
xor
pop
lods
and
cmp
mov
cmp
mov
xor
imul
rorb
cmpb
add
lcall
xor
clts
into
in
hlt
out
jle
jb
cmp
mov
push
out
fmulp
add
in
rcrb
test
jnp
cwtl
and
or
pop
fwait
jo
xchg
jecxz
push
push
out
add
stc
add
push
mov
xchg
adc
push
xor
jbe
pushf
push
cmp
mov
fnsave
sti
ljmp
movsb
xchg
ss
js
jb
ljmp
sti
push
sub
inc
sub
lods
or
push
pushf
or
adc
movb
inc
sarb
dec
lea
stc
icebp
sbb
into
xor
push
xor
sbb
add
adc
das
lahf
lret
jbe
xor
adc
cmp
jb
xor
lret
jb
into
nop
out
mov
bound
adc
inc
sub
pop
cld
lea
push
push
dec
leave
mov
psrlq
push
mov
pushf
or
mov
ror
xchg
cmp
cmp
jmp
sbb
sbb
dec
lock
and
mov
add
sub
push
sub
mov
sti
jne
mov
jmp
lea
mov
cmp
xchg
dec
mov
mov
pusha
pop
or
adc
aas
mov
jle
ds
orw
pop
push
imul
outsl
test
and
add
icebp
in
sbb
add
push
adc
bound
inc
adc
sub
sub
jno
jo
hlt
jmp
adc
bound
and
rclb
and
pop
dec
out
push
loopne
sub
sbb
lea
loop
add
xchg
cltd
cmp
and
or
or
es
test
pop
pop
sub
pop
push
test
and
adc
adc
stos
test
push
out
fst
adc
or
fs
pop
lahf
cmp
leave
push
xchg
sbb
inc
sbb
inc
je
cmp
jne
jbe
ds
loopne
lods
scas
sbb
or
xor
xchg
jmp
adc
inc
into
jb
clc
test
test
test
add
movsb
ret
push
push
and
push
out
xchg
sbb
xchg
cmp
idiv
inc
add
dec
loope
jp
mov
jns
lahf
arpl
push
add
xor
xor
jle
sbb
das
cmpsb
inc
push
inc
mov
int3
adcb
or
loope
mov
clc
dec
mov
cltd
push
or
and
or
std
jnp
and
gs
inc
dec
cmc
arpl
mov
pop
inc
jmp
cmp
mov
mov
imul
add
daa
inc
pop
je
mov
jecxz
mov
out
adc
sub
jb
cmp
sbb
popa
and
insb
xor
sbb
mov
cmp
mov
les
inc
stos
add
pop
scas
jb
es
sbb
cmp
in
jae
and
jns
push
inc
or
fmuls
test
subl
xor
add
bound
cs
popf
imulb
pop
add
aam
jno
mov
sbb
and
movsb
test
cmp
mov
push
ljmp
pop
xor
inc
stc
cmpsl
cmpsl
cmc
sbb
enter
outsl
fs
orl
ret
jl
adc
pop
cmp
jg
mov
pop
ret
ret
xchg
call
mov
repz
fdecstp
push
dec
neg
xor
sbbb
cld
sub
push
jge
adc
add
mov
xor
pop
aad
ret
pop
mov
es
xor
mov
mov
rcr
or
add
sti
imul
xchg
inc
adc
add
mov
or
popa
pop
mov
sub
popa
or
push
push
dec
sahf
repnz
push
bound
sbb
adc
pop
pop
insl
daa
push
sub
push
inc
cmp
das
pusha
cmp
and
sahf
pop
ret
and
femms
xchg
into
mov
adc
jns
or
pop
sbb
popf
ja
popa
fisttps
aas
push
inc
push
jmp
jne
pop
mov
add
or
xchg
sti
and
xchg
cld
sub
mov
js
sarb
cmp
jbe
or
mov
lret
enter
test
jl
and
cmp
or
xchg
pop
or
dec
insl
lret
imul
shlb
jne
xor
add
out
daa
cmp
jmp
sbb
sub
cltd
add
push
fsts
shlb
sub
or
jl
sbb
jmp
adc
add
fs
mov
sar
stc
push
pusha
mov
and
cmp
data16
mov
cmp
jg
pop
fcoml
test
inc
sbb
stc
jmp
sbb
lea
cmp
ljmp
push
push
mov
roll
dec
cmp
jle
sub
or
loopne
jmp
adc
ret
add
or
and
pop
adc
add
into
in
fs
sub
xor
pop
sub
adc
mov
mov
add
jae
lret
scas
jmp
push
pop
es
sbb
ret
inc
and
add
xlat
clc
iret
leave
xchg
adc
adc
popf
dec
xor
aaa
push
cmp
rolb
or
mov
icebp
in
sub
push
or
push
dec
sbb
add
inc
dec
fstl
inc
out
adc
movsb
jnp
add
les
or
xor
mov
add
cmp
cli
or
fldcw
sub
das
pop
out
sbb
insl
jns
and
or
push
int
push
adc
inc
cli
or
dec
repz
or
add
add
ljmp
inc
or
or
mov
sarl
and
std
rcl
mov
push
adc
das
cmp
cmp
push
cli
out
adc
int3
add
iret
pop
je
cmp
popf
jb
cmpsl
fimuls
pop
mov
adc
jbe
push
cmc
pop
mov
jo
das
add
loopne
jns
adc
and
ret
sbb
cs
faddl
lret
mov
outsb
inc
cmp
jnp
adc
or
or
add
rorb
or
add
sub
or
add
or
add
out
cmpsb
or
pop
sahf
add
rol
adc
adc
pop
lods
inc
add
push
and
or
sub
ljmp
test
jne
inc
or
loope
lock
lea
xor
jae
push
adc
ret
setno
fcmovne
out
add
mov
pop
pop
ret
jbe
mov
sub
xor
sti
pop
cli
dec
js
ss
xor
sub
push
or
jmp
shlb
icebp
loopne
pop
add
ret
pop
cltd
addr16
cltd
ret
mov
mov
sub
pop
cli
inc
outsl
ljmp
push
lret
cmp
les
aam
cltd
push
jmp
out
dec
movsb
pop
mov
push
push
adc
mov
fidivl
cld
enter
mov
sbb
xchg
ret
xchg
adc
fmulp
push
ss
or
xor
push
fs
mov
add
cmp
dec
or
gs
mov
dec
jo
lea
inc
sub
jne
push
scas
lock
es
sub
not
aam
and
mov
call
insb
cmp
pop
dec
push
xor
xchg
hlt
pop
fsubs
mov
pop
cmp
jno
call
rcr
hlt
xor
adc
nop
add
test
mov
jns
dec
and
push
jecxz
rorb
mov
pop
addb
dec
push
or
add
out
xchg
sbbb
and
aas
cmp
push
dec
in
push
inc
sar
xchg
sub
mov
or
add
inc
pop
and
call
sbb
inc
cmp
arpl
add
enter
dec
stos
xor
cmp
jg
sub
fwait
das
pushf
mov
and
push
xchg
dec
test
inc
decl
inc
rorb
aas
cmp
jl
jecxz
outsl
arpl
testl
add
cmp
rcr
std
and
add
inc
les
ss
es
sahf
and
mov
pop
or
or
fadds
push
ljmp
or
jne
fdivl
xor
aas
xlat
push
mov
call
inc
pinsrw
lea
inc
or
dec
mov
pop
inc
inc
adc
and
pop
pop
cli
fs
adc
dec
or
sbb
push
cmpsb
add
push
data16
pusha
xchg
icebp
mov
jle
mov
fcmovnu
faddl
insb
movsb
mov
mov
loop
or
and
jg
es
jl
cmpb
jl
cmp
clc
inc
push
fidivs
push
incl
jmp
and
adc
push
mov
jne
or
fwait
cmp
inc
sahf
int3
fadds
popf
mov
je
adc
cld
add
xor
xchg
jge
pop
or
fimull
movsb
mov
aam
ret
mov
imul
lahf
mov
mov
test
and
iret
ss
pop
inc
sbb
lods
ss
orl
jl
fsub
xor
add
jo
or
pop
adc
rorl
sub
sbb
shrb
data16
jmp
dec
add
inc
in
jbe
lods
adc
inc
or
loop
rolb
pushf
adc
fcmovb
jmp
or
lea
mov
xchg
mov
cltd
lret
jmp
adc
dec
sub
iret
push
dec
or
jecxz
scas
cmp
ljmp
adc
inc
pop
lret
nop
loopne
sub
loopne
xor
xchg
push
test
mov
xchg
adc
cmpsb
stos
add
lret
fdivrs
push
cmp
test
sub
int3
gs
pop
mov
mov
jl
mov
loopne
mov
or
push
mov
loopne
add
add
push
xchg
jmp
clc
mov
imul
push
dec
or
movl
mov
xor
push
adc
and
decb
orl
sub
aad
or
mov
pop
xor
mov
mov
mov
inc
out
cmp
xor
or
inc
mov
push
sbb
add
fldenv
data16
dec
xchg
in
xlat
dec
add
adcb
test
push
jp
aaa
xor
mov
cld
push
dec
jecxz
lahf
popf
aaa
mov
je
add
jb
daa
sub
lock
and
into
add
pop
push
add
sti
mov
lock
jl
loopne
rorb
push
out
add
mov
push
xchg
push
add
jle
pop
andl
arpl
sbbb
adc
xor
mov
or
gs
sbb
js
mov
push
pop
pusha
dec
and
cmp
and
push
jmp
push
mov
mov
cli
stc
lods
jbe
and
sysenter
sarb
inc
jg
shrb
and
rorb
add
pushf
test
test
test
mov
mov
call
sub
fstpt
psubsw
mov
jmp
sbb
call
mov
inc
xlat
pop
cmp
jp
popw
jmp
xchg
adc
imul
sub
and
push
in
call
pop
not
test
xchg
test
or
push
pop
xlat
sbbb
sbb
fdivr
xor
addl
pop
test
jne
sbb
inc
loopne
pop
es
lods
mov
scas
lea
daa
andb
loop
aad
loop
push
lcall
mov
cli
cmp
jl
jbe
cmpps
xor
aad
sub
nop
ret
sub
in
insl
cmp
pushf
or
dec
or
add
jne
testb
fidivrl
sbb
jb
mov
mov
cmp
hlt
cmp
sbb
add
lret
into
jae
or
adc
test
hlt
push
jmp
and
sbb
mov
inc
es
xor
adc
rol
add
sub
int3
das
or
imul
or
xor
cmp
add
sbb
das
call
pop
or
mov
mov
pop
shll
mov
lock
lret
pop
push
stos
not
or
repnz
out
jmp
add
in
out
or
out
shr
or
push
mov
inc
scas
and
mov
cmp
push
inc
dec
inc
je
add
inc
add
jbe
push
rcrb
adc
or
and
movsl
sub
dec
out
pop
xor
aaa
popa
movsbl
inc
test
pusha
push
pop
xchg
dec
mov
imulb
je
rorl
mov
shr
shl
mov
add
jae
add
bound
xor
or
jmp
dec
xchg
mov
jle
mov
xchg
xor
xor
and
aas
mov
push
call
hlt
mov
js
sbb
push
xchg
in
mov
sub
pop
sub
ss
ret
or
or
insb
out
add
test
lea
add
pop
inc
dec
cmpsb
fcmovnb
shlb
jl
or
jg
sbb
test
and
dec
cmp
test
cwtl
sub
mov
push
call
jle
fwait
pop
jmp
inc
jo
push
add
adc
iret
inc
sbb
outsb
in
sahf
movsl
into
mov
or
push
lcall
mov
jnp
mov
jb
push
sti
dec
push
wrmsr
adc
imul
iret
inc
rcr
push
lcall
mov
cmp
add
pop
sub
push
popf
jl
js
insb
stos
push
sbb
fsubs
loop
xor
jmp
or
loopne
cmp
mov
fcomip
push
jmp
adc
jns
ja
or
push
dec
dec
and
sbb
add
out
mov
mov
add
xchg
mov
andb
xchg
dec
pop
inc
in
bound
pop
inc
je
shlb
mov
mov
mov
xor
mulb
fsub
insl
xlat
clc
dec
cmovae
or
pop
dec
adc
negl
out
sub
mov
adc
mov
dec
call
out
push
pop
pop
dec
pop
aaa
jp
sarb
xchg
and
dec
sub
mov
notb
add
jecxz
pop
rcrb
fisttpll
fidivrl
lea
cmp
test
adc
dec
jp
outsl
rorb
test
test
lock
and
fildll
pop
pop
pushf
das
jbe
cmpb
jl
incb
hlt
jbe
fadds
out
inc
dec
adc
xchg
dec
cld
cmc
fsts
out
xor
inc
sbb
lock
or
xor
mov
in
add
loopne
push
sbb
ss
fsubrl
inc
sbb
cmpl
sbb
in
xchg
jbe
xor
mov
dec
push
in
pusha
xor
mov
mov
in
in
add
mov
pop
mov
dec
cwtl
sar
faddl
ljmp
pop
rclb
mov
mov
jo
push
jmp
push
nop
add
inc
outsb
lods
adc
popf
xchg
pop
mov
mov
mov
loop
rolb
in
adc
lcall
leave
repz
pop
lds
repz
inc
pop
and
xchg
shll
repz
addr16
xor
fwait
ret
imul
and
out
pop
int3
push
in
out
jmp
ljmp
mov
dec
rolb
mov
jmp
or
or
push
sahf
mov
sub
push
xchg
call
add
push
push
ljmp
fcoms
data16
mov
data16
sub
jne
mov
pop
maskmovq
xlat
pop
push
int
jmp
add
cmp
push
inc
jne
push
jg
pcmpgtb
and
cmp
aam
into
add
mov
cmp
xchg
loope
mov
call
inc
jmp
dec
shr
or
sbb
cmp
or
icebp
decl
es
imul
mov
lea
push
or
repnz
jb
mov
xor
mov
clc
jge
aas
jb
in
xor
cmpsl
shrb
add
push
inc
xor
dec
les
mov
adc
cs
out
and
cli
js
mov
mov
xchg
pop
jne
mov
popl
gs
cmp
cmpsb
test
dec
xor
cmpsl
int
lods
ret
dec
mov
dec
add
mov
xchg
in
movl
mov
subb
data16
mov
aaa
out
mov
jne
push
mov
jne
outsl
mov
dec
add
xor
mov
push
dec
jmp
rolb
loopne
cld
stos
lcall
add
ret
sub
mov
aaa
jle
mov
pop
cmpsl
cltd
sub
sub
jle
andb
scas
xchg
call
leave
loop
dec
dec
push
xchg
cmc
dec
mov
mov
mov
call
jg
es
mov
je
lock
jb
cmp
mov
add
out
clc
adc
cmp
dec
dec
jne
ljmp
fwait
mov
nop
add
flds
push
push
sbb
mov
pop
pop
leave
js
ljmp
or
inc
je
or
je
out
subb
and
repnz
or
lea
jb
loop
cmove
mov
adc
adc
rcrb
int
mov
dec
xor
push
movsl
ret
and
pop
inc
adc
sar
lock
xor
sub
fimull
push
adc
mov
nop
in
call
out
je
pop
xor
gs
das
cmp
dec
ss
adc
inc
adc
push
out
and
push
jne
test
mov
cmc
mov
std
mov
sub
mov
negl
jbe
and
inc
stc
mov
enter
ret
and
lea
pop
add
ljmp
adc
cli
std
mov
aas
ja
xchg
test
loop
mov
lret
inc
xchg
test
xchg
push
push
mov
movsl
push
mov
cmp
je
push
les
push
xchg
push
mov
into
cmp
in
push
cmp
adc
add
dec
mov
andl
gs
mov
or
iret
add
push
ss
mov
mov
lea
rcl
adc
es
xchg
rcll
cld
mov
xor
sbb
push
add
cmpsb
test
or
adc
mov
andl
or
out
mov
data16
gs
xlat
or
jg
or
fldt
sbb
pop
or
add
ret
add
jmp
sub
ss
sub
and
or
cmp
lods
dec
xor
fiadds
int
fwait
cmpsb
adc
sbb
push
or
push
pusha
jbe
push
fcomps
jmp
inc
loop
fisubrs
dec
jae
push
fimuls
in
movsl
push
add
push
ljmp
test
xor
fistps
sub
les
ljmp
sub
and
mov
scas
sub
jb
jge
push
and
sbb
or
adc
mov
inc
jne
pop
xchg
add
push
insb
add
add
and
andb
add
cmp
rorb
or
neg
sbb
xor
iret
jl
popa
mov
insb
push
push
inc
xor
xchg
jo
jne
push
mov
xchg
inc
mov
and
ja
aas
jmp
cmp
nop
lret
add
movl
cmp
jle
and
test
push
fs
aas
sub
inc
mov
lock
jb
cmpsl
mov
inc
ret
popf
sbb
adcb
push
cwtl
adc
into
xchg
push
sub
lock
shlb
jne
jg
push
aaa
adc
xchg
outsl
out
movsb
push
inc
mov
cmp
cmp
andl
jecxz
cli
call
mov
cmp
jb
cmp
jbe
inc
mov
in
shlb
movsl
jnp
popa
movsl
ss
data16
xchg
sbb
jbe
dec
imul
nop
add
sbb
xor
addb
js
and
dec
and
mov
push
test
mov
mov
mov
fstpt
xchg
ljmp
loopne
popa
bound
push
or
xor
test
push
fcomp
mov
fneni(8087
enter
push
fwait
xor
aas
push
sub
or
sub
pusha
cld
add
xor
or
insl
ficoml
sti
jmp
repz
add
jl
or
add
push
push
hlt
sub
inc
jne
icebp
in
fwait
subb
clc
out
and
cmp
push
jmp
mov
pop
mov
mov
or
push
sbb
pop
mov
xorl
jo
adc
adc
push
lret
fnstcw
cmp
adc
push
push
dec
xchg
nop
mov
fstps
loope
inc
movsb
mov
mov
pushl
lea
das
push
call
stos
aad
sbb
jbe
jmp
icebp
shlb
push
shrb
stos
ret
push
testb
xor
jp
or
push
lds
enter
mov
or
scas
lahf
add
mov
inc
adc
push
roll
fisubl
mov
mov
pop
fwait
add
fistpl
fcomi
shll
fcomps
xchg
in
and
jne
push
inc
mov
add
cmp
adc
in
loop
sub
cmp
mov
xlat
int3
sub
pop
arpl
jne
pop
hlt
dec
sbb
or
xor
mov
push
xor
imul
fbstp
push
movsb
ficoml
push
add
ss
aaa
lret
sub
add
jae
gs
shrl
jmp
fmul
and
push
push
insb
es
pop
sbb
mov
int3
push
test
add
add
and
movsb
in
push
mov
inc
stos
mov
and
or
cltd
add
insb
sub
stos
loopne
bound
in
mov
mov
mov
pop
loop
xor
fbld
into
test
ljmp
push
jl
push
aam
mov
daa
xchg
pushf
adc
adcb
jo
or
sbb
cmp
push
mov
sub
or
loopne
lods
inc
push
sbb
pop
jns
xchg
and
sahf
pop
push
mov
push
ds
xchg
inc
or
rclb
mov
filds
adc
cmpsb
out
es
adc
sub
sub
and
jg
dec
or
ja
xor
cmp
jb
and
or
cmp
or
add
pop
mov
in
xchg
test
cmp
add
and
data16
adc
imul
lret
mov
add
inc
les
pop
pusha
mov
scas
je
add
add
and
les
xchg
imul
fnstcw
test
clc
out
ret
sbb
hlt
cmp
inc
push
mov
arpl
pop
rcll
adc
arpl
sub
fistps
xsavec
inc
mov
lret
jle
arpl
and
push
sbb
sub
push
push
add
inc
test
adc
sub
sub
outsb
test
mov
popa
pop
or
test
test
fisubrl
xor
cmp
push
add
rcr
lock
lea
add
or
test
in
push
lock
sub
data16
inc
or
fcmovbe
ja
inc
test
je
add
mov
push
in
aaa
mov
or
mov
adc
sbb
fists
push
xor
or
pusha
adcl
or
in
jge
nop
add
negl
orb
imul
push
inc
insb
mov
jae
fldenv
sbb
jo
pop
dec
dec
sub
imul
imul
cmpsb
jb
xchg
mov
push
movl
and
mov
push
lods
test
cmpsl
push
cmove
sub
popa
out
push
inc
sbb
dec
daa
push
add
in
sbb
and
add
sub
cmp
fidivs
in
lret
scas
nop
mov
je
sub
mov
pop
or
jmp
cmp
lahf
je
cmp
jmp
inc
push
jecxz
std
add
jne
add
std
add
jmp
jo
rolb
iret
into
ds
xlat
ljmp
jle
inc
mov
es
imul
enter
shl
add
enter
pop
cmp
jl
add
jno
cmp
adc
jne
xchg
and
mov
push
push
jmp
das
adc
mov
in
cmp
mov
sub
pushf
lahf
pop
xor
ljmp
jecxz
sub
lea
aas
cmp
xorb
xchg
mov
lahf
adc
jne
xor
mov
test
xlat
sbb
xchg
jge
lea
ficompl
inc
rep
cmpb
cltd
loopne
jl
inc
adc
arpl
fildll
inc
or
in
or
mov
add
test
repnz
data16
pop
daa
cmc
aaa
mov
movb
addb
jle
or
or
sar
jle
and
mov
ss
xor
sub
lock
or
xor
mov
mov
jmp
pop
sub
or
loop
mov
pusha
sbb
shl
mov
jne
test
insl
xor
enter
and
jge
xorb
push
or
sub
pop
lahf
jg
mov
in
in
xchg
jmp
inc
cmpsb
adc
fsubrs
pop
fstl
lea
bound
clc
pop
clc
cmp
jl
fsubrs
ljmp
inc
addr16
fisttpl
in
testl
arpl
pop
add
and
mov
mov
dec
sub
pop
loope
js
lea
cmp
adc
cli
and
call
sub
xlat
and
inc
inc
cmp
jl
jne
cmp
and
icebp
or
jmp
shll
lahf
mov
outsl
je
cltd
and
mov
and
xor
jb
cli
xor
sbb
test
xchg
in
add
daa
xchg
hlt
jne
mov
jne
pop
ret
cmpsl
and
jl
incl
jg
cltd
sub
dec
push
pop
lods
mov
sbb
mov
pop
loopne
adc
add
pop
adc
and
or
xchg
jg
or
xchg
and
sbb
and
ja
sbb
fwait
stos
mov
out
adc
rolb
push
scas
bound
ret
adc
adc
dec
les
lcall
inc
mov
jl
jne
sub
jne
add
dec
mov
push
loop
shr
mov
jb
and
sub
xlat
int3
or
mov
ss
add
push
push
sub
jns
push
jne
jns
enter
xchg
xchg
lahf
jecxz
cmpl
and
xchg
insb
mov
xlat
fisubrl
sbb
cmp
push
adc
jb
cmp
bnd
cmp
jne
inc
push
xchg
xor
xchg
xor
adc
test
and
jne
jno
popf
ds
or
or
xor
int3
out
in
pop
push
or
dec
sbb
inc
out
pop
fbld
add
mov
or
or
xor
add
inc
or
cmp
stos
call
jmp
or
push
nop
push
dec
xchg
fmuls
sbb
dec
cmp
pop
pushf
imul
out
pop
cs
push
push
push
and
sbbl
icebp
inc
pushf
stos
or
mov
pop
or
xor
lods
sbb
inc
aaa
mov
sub
mov
pop
outsb
test
addb
adc
lods
mov
jb
dec
clc
jecxz
in
cmpsb
sub
in
neg
cmp
mov
pop
sub
fcomps
cmp
in
aam
or
ljmp
pop
pop
sub
xor
scas
je
push
pop
sub
add
mov
andb
popa
xchg
push
les
popa
pop
jmp
inc
sbb
xchg
xchg
add
cmp
xchg
notb
push
ds
add
iret
push
adc
fbld
hlt
xchg
push
cmp
pushf
and
je
sub
lods
faddp
xor
sub
add
les
fdivl
inc
jg
and
xchg
ret
div
or
sbb
addr16
or
es
add
je
test
sbb
inc
and
adc
andb
sbb
jo
push
adc
fidivs
push
std
add
inc
or
push
sbb
icebp
push
add
push
pop
arpl
subb
out
add
and
ret
aaa
lock
xchg
cmp
and
jmp
mov
mov
mov
je
or
ja
cld
sbb
inc
push
or
mov
outsl
mov
cmp
push
jbe
hlt
push
inc
aam
pop
mov
jle
mov
dec
or
fsubrs
xor
pop
pop
popa
cmp
and
rorb
scas
clc
mov
cs
cmp
jge
add
mov
jge
test
add
cmp
mov
xor
jp
clc
dec
sbb
je
push
inc
in
lods
cwtl
fbld
pusha
push
pushf
mov
mov
addr16
xor
jmp
ret
push
je
push
insl
and
sub
pop
inc
cltd
adc
sbb
sbb
sbb
sbb
movsb
jb
adc
adc
test
inc
js
icebp
lea
push
jo
xor
mov
shlb
sbb
sahf
cs
aas
xor
xor
mov
outsl
and
in
mov
inc
add
push
cmpb
loope
and
cmp
shrb
cmpsb
dec
in
jb
pusha
mov
mov
cmp
mov
lods
mov
xlat
mov
and
and
fistpll
or
je
push
fsubrs
cmp
insb
lea
jne
push
or
lahf
dec
mov
push
inc
dec
test
adc
inc
push
or
in
fs
inc
outsb
and
inc
push
cmp
adc
inc
push
cmp
adc
jge
jne
jne
xchg
imul
decl
adc
xor
xor
pop
movzwl
inc
mov
test
push
push
in
sar
insb
mov
push
add
sbb
mov
mov
sti
cmp
fildl
into
and
sti
int3
xor
add
and
insl
movsb
jo
in
mov
test
sub
loopne
cmpsb
jne
bt
nop
inc
cmpsb
in
add
xchg
inc
sub
pop
cmpsl
push
test
addr16
mov
pop
decl
data16
pop
test
sbb
or
std
sbb
adc
xchg
leave
xor
filds
cmp
je
inc
cmp
out
mov
enter
rclb
adc
jle
movsl
mov
mov
mov
dec
fdivrs
pop
test
inc
ljmp
pushf
jae
call
outsb
movsl
outsb
test
call
fsubs
pusha
test
cmp
push
mov
push
push
daa
cmp
loope
push
xchg
pop
sub
adc
sub
sti
fmull
jb
push
push
sub
jg
xchg
push
push
jae
xor
je
jno
jns
add
mov
cmpl
mulb
lcall
adc
sbb
loop
mov
sbb
xchg
pop
shlb
cld
movsb
imul
add
or
data16
inc
xchg
xor
sub
dec
rorb
outsl
adc
pop
push
sub
jns
shll
mov
out
push
mov
push
insb
xor
cmp
decl
repnz
mov
add
dec
add
inc
pop
pushf
ret
and
lock
cs
subb
jno
push
jmp
ljmp
or
add
jo
pushl
loope
das
int
adc
call
jmp
aas
cmp
add
push
aad
or
sub
mov
es
xchg
mov
mov
pushf
insl
xor
sbb
add
jne
cmpsb
ret
out
jecxz
das
pop
out
je
test
and
popa
lock
cmp
xor
or
jbe
sub
inc
jnp
pop
jp
jbe
or
mov
stos
fldcw
jne
sbb
rolb
sbb
sub
inc
rorb
and
aas
stos
loop
je
fsubrs
cmpl
ret
enter
pusha
sbb
aaa
sbb
mov
mov
push
sbb
push
sahf
je
xor
push
jmp
xor
iret
out
daa
push
pop
lods
stos
movsl
jbe
jl
mov
test
jl
inc
insl
rcrb
jno
shrl
xor
and
ficoml
push
push
dec
je
cmp
dec
mov
xchg
les
jge
push
cmp
inc
mov
mov
popa
push
push
push
pop
jmp
add
popf
lcall
dec
ja
add
inc
in
mov
xor
jbe
les
cli
jno
ljmp
add
sahf
push
inc
push
fld
rclb
jmp
ss
inc
and
inc
outsl
or
adc
jb
mov
pushf
or
adc
and
xorb
sbb
mov
stos
jne
cmc
data16
ret
mov
stos
or
adc
movb
mov
imul
sub
add
push
int3
cs
sub
and
enter
insl
sub
cmp
or
or
mov
loopne
add
or
and
sbb
or
jle
icebp
adc
bound
or
jg
push
lret
pop
sbb
or
jmp
cmp
or
clc
xor
push
mov
inc
ja
dec
sub
cmp
lea
push
inc
cld
addr16
push
add
inc
cmp
push
xor
movsl
pop
xchg
adc
push
test
xor
mov
sub
mov
insl
enter
cmp
mov
mov
inc
mov
mov
cli
sub
xlat
xchg
lods
aam
pop
lods
dec
daa
push
fsts
pop
fs
sub
mov
adc
sbb
rol
aas
inc
sub
add
xchg
add
or
cmp
push
or
jbe
adc
sub
aam
or
inc
inc
dec
xchg
rcl
or
xor
add
outsl
lret
je
test
rclb
testb
call
adc
adc
add
andl
js
cmp
push
roll
add
fcomip
and
sbb
pop
sub
adc
or
getsec
push
movsb
pop
nop
inc
mov
jmp
push
push
mov
dec
push
arpl
xor
sub
xchg
pop
jmp
adc
insb
sbb
inc
addr16
or
inc
add
seto
and
scas
es
dec
mov
push
cmp
pusha
das
push
push
cmp
xor
add
inc
adc
mov
xorb
dec
enter
icebp
add
sbb
test
es
and
shl
fadds
xor
jo
sub
outsb
cwtl
imul
mov
dec
or
mov
jle
orl
in
pushf
dec
test
sub
mov
push
inc
xor
jl
sbb
cmp
jle
mov
testl
jg
sar
jb
sub
mov
pop
lods
icebp
arpl
or
and
mov
mov
pop
rcrl
mov
sub
inc
add
bnd
jmp
sub
sbb
and
sbb
xchg
fiaddl
or
daa
jnp
mov
adc
sub
popa
je
and
cmp
ret
sub
aad
imul
sub
daa
xor
sbb
pop
lods
jo
pop
pop
sub
push
mov
inc
jno
mov
into
or
xchg
and
sbb
push
mov
test
adc
in
cmp
sbb
push
add
mov
lret
incb
aad
push
and
and
lock
rol
mov
sahf
jp
adc
mov
mov
pop
lods
mov
shrl
sbb
add
movsl
sbb
push
push
mov
pop
pushf
mov
fs
fiadds
ficompl
mov
push
jne
pop
loopne
xor
push
push
sbb
cmp
mov
inc
cli
mov
or
bound
loopne
lods
sbb
xchg
and
inc
sbb
sti
pop
sbb
pop
in
jbe
jp
mov
and
arpl
mov
scas
xor
mov
bound
cmc
push
mov
jl
push
add
outsb
or
rcl
sub
stos
pop
jl
adc
mov
shll
mov
dec
push
lea
xchg
xchg
es
ss
or
ret
ret
fstl
rcr
nop
or
or
xchg
ds
and
inc
repnz
push
popl
stos
ljmp
adc
lock
cwtl
jg
dec
sbb
adcl
sbb
hlt
inc
mov
sti
test
inc
cmp
test
loope
sub
inc
xorb
add
xchg
cmpsb
pop
add
or
adc
sahf
push
jge
push
cmp
insl
ficomps
push
call
pop
rcr
lock
jne
or
cmc
jl
adc
add
jne
pop
es
aas
aam
fldt
outsb
lock
cmp
push
mov
dec
inc
inc
faddl
das
fsts
je
cmp
in
je
subb
pop
or
add
bound
faddl
push
mov
orl
mov
dec
clc
rcl
xor
jne
sbb
pop
pop
push
mov
add
xor
cmpsl
les
push
push
imul
inc
test
push
aad
push
mov
xchg
and
inc
pusha
add
add
or
jle
xor
sub
push
loope
test
sbb
push
xchg
ret
jno
mov
dec
loope
or
addr16
lahf
jmp
sbb
test
mov
jns
add
push
pop
movsb
imul
lret
loopne
cmp
test
ret
add
dec
or
pop
pusha
out
jo
sbb
inc
add
inc
dec
inc
jb
mov
sub
cmp
push
in
jp
xorb
hlt
adc
mov
pop
and
lea
xchg
xchg
xchg
lret
dec
pusha
test
push
sbb
sub
mov
pushf
jb
push
sub
sub
icebp
and
ja
in
mov
pop
adc
dec
test
inc
mov
repz
xor
push
cmp
pushf
ljmp
in
lock
xchg
pop
cmp
jne
sub
push
push
jl
mov
xor
test
insb
pop
jne
mov
mov
add
shll
testb
movb
cltd
call
or
sub
dec
jp
imul
mov
lcall
mov
icebp
daa
add
incl
je
mov
out
push
cmp
test
les
imul
jge
sub
sbb
jl
je
lea
call
cmp
cmp
ljmp
push
push
std
push
mov
jecxz
push
or
xchg
adc
mov
and
popf
mov
sbb
cmp
xor
das
xchg
cmp
testl
pop
lea
inc
pop
push
xchg
or
mov
inc
out
or
ret
mov
fldl
test
xor
clc
add
xchg
pop
cmpb
push
into
or
and
rorb
sub
mov
adc
push
push
lds
lock
ds
add
jno
and
push
or
xorl
inc
pusha
lret
mov
xchg
xor
push
sub
sahf
inc
mov
jl
in
or
shll
inc
inc
xor
pop
push
cli
inc
push
jae
sub
mov
mov
jo
loopne
mov
js
jecxz
pop
mov
cmp
sub
sub
sarl
xchg
rol
inc
neg
addr16
stc
dec
rolb
inc
fdiv
call
add
aaa
xor
pop
xchg
cmp
pop
push
push
fdivl
mov
ret
pop
mov
or
sub
lds
imul
popa
and
add
or
loope
pushf
enter
mov
cmp
lcall
push
mov
sbb
roll
popa
sub
push
jp
subb
inc
sub
jmp
pop
sub
insl
loope
ret
add
ja
xchg
ret
push
mov
jo
xchg
fmuls
pop
ret
in
or
scas
inc
mov
notl
pop
push
cmp
xchg
inc
or
inc
inc
push
cmp
pop
add
sub
inc
inc
pop
scas
addl
int3
aas
sbb
sbb
adcl
shrb
jp
loopne
add
ret
inc
sbb
jecxz
pop
sbb
inc
fs
fiadds
or
push
test
push
popa
andb
xchg
int3
bound
sbb
insl
add
and
jo
insb
xchg
mov
je
aaa
and
push
aam
xor
jmp
lods
or
das
add
push
mov
mov
sbb
mov
stos
xchg
dec
sti
fdivs
xchg
push
sub
pusha
push
add
add
inc
pop
jl
sbb
jmp
push
push
jp
insb
addb
or
jle
jg
xor
cmp
push
inc
ds
sbb
xchg
std
sti
and
leave
mov
mov
jle
cmp
sbb
push
ret
push
push
leave
jg
jle
sbb
sbb
leave
adc
push
cltd
sub
shrl
in
xchg
fidivrl
ret
sub
push
sbbl
jge
sub
lods
add
adc
dec
add
or
cs
clc
jae
jnp,pt
nop
fstpl
pop
stc
or
ja
cmpb
inc
sbbl
es
cmp
sbb
inc
movsb
inc
orb
cmp
and
popa
push
test
pop
insb
stos
mov
pop
stc
adc
ds
adc
pop
sbb
push
repnz
lds
adc
xchg
ret
movsb
mov
add
fwait
inc
jmp
xchg
cmp
adc
outsb
push
addb
imul
push
and
mov
mov
inc
jnp
jae
jmp
mov
fiaddl
ljmp
dec
repnz
mov
inc
xor
shll
or
jp
mov
lea
pop
inc
adc
add
push
jle
aas
ror
dec
mov
inc
add
das
adc
xchg
and
cmp
or
dec
fbld
jecxz
xchg
lret
push
add
cmp
sbb
sub
or
lea
mul
std
and
xlat
inc
pop
or
or
pop
mov
dec
cltd
sub
in
ss
lea
xchg
and
and
out
push
cmp
inc
push
cmp
cmp
xadd
jg
xchg
xor
mov
add
icebp
inc
in
sub
mov
movsl
sub
shrb
stos
jmp
pop
xchg
shlb
mov
ret
andl
sti
add
or
call
lods
push
sub
clc
stos
or
in
lds
adc
imul
mov
lods
aad
sub
aas
jb
ret
or
sub
jbe
sub
xchg
push
cmpsl
push
and
aad
fwait
adc
mov
xor
push
jns
pushf
pop
stc
lcall
add
add
add
or
popf
mov
pushf
jns
fwait
xchg
push
and
pop
pop
leave
dec
add
xor
or
add
add
jge
ja
je
adc
notb
or
add
jge
clc
mov
jl
adc
push
pop
icebp
aaa
mov
xchg
sub
jge
or
repnz
lea
add
push
cmc
stos
add
push
adc
inc
mov
fistl
jp
inc
jo
push
jns
sbbl
dec
incl
push
aam
or
test
outsl
mov
add
dec
cmpsb
mov
or
and
cmp
add
dec
push
mov
adc
clc
push
mov
add
or
push
jmp
jg
adc
adc
jno
jo
xchg
insl
jp
mov
mov
loopne
and
les
sub
adc
inc
mov
test
push
push
das
or
adc
daa
lcall
test
sub
rcll
lods
ret
and
or
rol
loop
sub
pop
divb
dec
xor
jnp
pop
push
int3
push
push
fnstenv
inc
pop
inc
pop
int
in
pushf
dec
pop
push
scas
sub
mov
dec
push
adc
cltd
mov
push
dec
push
cltd
xor
jle
inc
int
inc
or
push
add
movsl
js
push
dec
push
out
and
adc
push
shlb
mov
pop
sub
je
call
jecxz
or
dec
insb
add
jne
ltr
and
sub
inc
mov
or
movsl
pop
push
adc
dec
add
mov
mov
popf
cpuid
and
daa
xchg
add
enter
jl
add
shll
cmpb
iret
or
mov
mov
mov
dec
and
ss
sub
hlt
orl
scas
inc
xchg
rolb
rolb
cmp
aaa
test
clc
add
or
lods
xchg
shrl
je
sbb
sbb
inc
jmp
shlb
jb
add
mov
lods
adc
std
mov
pop
sub
test
lock
decl
ljmp
cmpl
jle
lea
push
ret
cmp
popf
adc
cmp
aaa
popf
jno
mov
mov
fcoms
jno
push
daa
mov
xor
pop
cmc
test
push
xor
sub
mov
lock
add
push
xchg
flds
test
xchg
sub
and
xchg
adc
xchg
and
mov
add
pop
or
ja
fcomps
jb
mov
inc
jo
lahf
cmpsb
mov
loope
add
pop
inc
xchg
dec
or
leave
xchg
sti
stos
add
adc
hlt
add
or
dec
sbb
add
add
fimuls
sub
jle
orb
mov
cmp
jle
dec
vmread
inc
mov
or
mov
pusha
enter
or
loope
jle
jge
popa
cmpsb
cmc
mov
std
mov
push
and
fsts
mov
and
sub
adcb
mov
rclb
jl
out
jmp
push
out
cmp
hlt
xchg
inc
fadds
notl
addb
or
add
or
pop
and
mov
cmp
cmp
and
sub
xchg
out
jmp
out
jb
mov
jo
mov
mov
or
sti
sub
inc
cmp
and
movsl
stc
xchg
mov
jg
inc
pop
push
push
cmp
jg
xor
or
inc
mov
hlt
add
cmc
clc
push
insl
arpl
sub
mov
mov
lcall
mov
insb
aas
mov
cmp
test
xor
test
xchg
add
xchg
inc
cmp
dec
add
cmp
clc
adc
movsb
or
sub
sub
cmp
je
int
adc
cmp
adc
ja
fldt
jne
cmp
daa
pop
pop
sub
es
pop
movsl
pop
arpl
jmp
and
jne,pn
xchg
fistl
sbb
aaa
push
jecxz
cld
push
ja
ret
add
inc
mov
ret
cltd
sub
add
xor
jb
cmp
jmp
mov
xor
and
rcrb
mov
adc
lcall
xchg
add
insl
outsl
int3
cmc
adc
imul
mov
shlb
sbb
or
sbb
cmpsb
pusha
fcoml
sub
dec
ja
setbe
or
loopne
and
nop
adc
jbe
sub
mov
sub
xchg
and
add
or
dec
xchg
je
icebp
jns
shll
sbb
pushf
lret
push
outsl
xchg
dec
dec
jno
jmp
sub
add
sub
test
push
stos
outsb
push
and
mov
loop
pop
xchg
into
and
fimull
test
ss
cmp
cmp
and
adc
insb
xchg
aad
push
pop
pop
lea
int
jle
xchg
aad
js
aaa
mov
push
pusha
inc
mov
push
frstor
push
and
push
push
add
pop
mov
sub
outsb
je
sub
mov
dec
add
ds
jle
jmp
outsl
and
in
jl
cmpsb
test
movsb
rolb
lds
testb
ja
in
add
or
sbb
andl
xchg
neg
lret
jb,pt
adc
push
ret
push
andl
gs
or
xchg
add
cmp
bnd
pop
iret
xor
pop
ret
sub
push
mov
inc
dec
dec
outsl
mov
flds
fistpll
or
xor
sub
mov
xchg
or
pop
adc
sub
sbb
js
stos
pusha
test
divl
mov
les
lock
push
or
or
jnp
js
xchg
lea
sbb
add
cmpsb
movsl
and
add
inc
add
add
fs
ljmp
das
cwtl
fistpl
push
xorl
cmp
mov
adc
and
sbbb
xor
jecxz
add
add
inc
inc
push
in
xor
shlb
pop
popa
xchg
mov
nop
jb
and
or
dec
movsb
inc
in
lock
ret
mov
and
add
push
mov
aaa
add
fdivl
push
cli
sub
pop
jae
sbb
sub
jnp
push
notb
or
or
push
inc
adc
rcll
insb
orl
push
sbb
clc
push
push
sahf
rolb
mov
loopne
adc
clc
push
and
jne
adc
dec
imul
shlb
push
xchg
lds
add
fsubs
test
mov
push
dec
add
sbb
es
fsts
ss
and
cmp
lds
or
lret
xorb
adc
xchg
or
sub
es
jo
call
mov
push
test
sub
mov
push
mov
push
jecxz
pop
scas
enter
fs
sub
js
push
adc
shrl
pop
xor
mov
mov
mov
mov
mov
clc
cltd
dec
stos
jge
sub
cwtl
cmp
fstl
add
and
and
test
sbb
in
out
cwtl
add
out
adc
inc
fsubr
lods
push
push
xor
xlat
popa
fwait
fwait
cmp
movsb
mov
call
insb
pushw
add
ffreep
push
je
jle
dec
lods
mov
push
push
mov
push
fcomps
xor
push
pop
and
pop
push
or
in
mov
mov
or
and
aaa
sub
jmp
add
pop
pop
push
jmp
rcrl
je
loope
xchg
mov
fcmovne
jbe
add
sub
dec
sbb
xchg
insl
sub
cmpl
or
mov
fistl
add
insl
pop
push
pop
jge
rclb
rol
fcomps
jo
add
ds
mov
pop
mov
fsubl
xchg
mov
xor
aad
sub
mov
xor
pusha
inc
inc
push
push
cli
sub
pop
addl
sbb
aaa
pop
sarl
cmp
mov
lods
pop
cmp
or
sahf
xor
inc
movsb
push
aam
insl
add
adc
sub
pop
sub
mov
in
push
pusha
imul
add
enter
dec
shlb
leave
pop
je
pop
and
gs
push
push
push
addb
sub
stos
pop
push
jmp
ljmp
mov
push
aas
adcl
mov
or
incb
xchg
push
pop
lea
rep
mov
adc
or
xor
clc
je
test
addr16
add
lock
hlt
mov
stos
mov
mov
xor
cmp
mov
xchg
or
fs
test
in
test
loope
jge
add
add
mov
push
cwtl
adc
or
push
xor
xor
jo
mov
fwait
or
int3
cmp
ljmp
inc
das
jmp
xchg
inc
mov
or
inc
std
into
cmp
adc
push
xchg
push
xchg
inc
bswap
cmpsl
sub
mov
loop
adc
rorb
sbb
test
jne
mov
pop
xchg
shr
pop
ret
cmpl
sarb
inc
mov
jne
rclb
mov
sub
incb
mov
icebp
push
es
mov
sbb
test
out
movsb
pop
inc
jne
movl
inc
add
es
mov
inc
and
jo
test
loop
mov
std
dec
movsb
inc
mov
mov
adc
das
or
xlat
xchg
jge
jae
dec
sbb
movsb
jb
mov
je
or
lea
push
gs
adcb
cld
push
mov
or
pop
sub
sbbb
sbb
call
out
jno
pop
push
fnstsw
mov
stc
cmp
in
jge
sbb
int
in
sub
add
imul
xor
in
test
mov
add
jmp
xor
rcr
gs
adc
lahf
out
popa
jecxz
jecxz
push
test
add
inc
mov
add
lea
andl
add
loopne
dec
inc
and
xchg
arpl
cmp
ljmp
fsts
and
ss
das
mov
push
push
dec
rorb
cmp
clc
inc
pop
nop
add
dec
ljmp
push
es
lret
or
mov
sarl
and
mov
push
push
fwait
sub
jge
jno
dec
ja
lret
imull
in
lods
das
in
pop
push
or
xor
ja
cmp
xor
out
jno
and
ss
dec
and
sub
into
sbbb
mov
test
outsb
sub
pop
in
ror
cmp
rorl
test
inc
and
fs
in
pop
sahf
lret
clc
and
rol
addb
inc
lods
jecxz
xlat
cmc
in
jp
out
sub
test
aas
cmp
test
adc
lock
pop
and
or
push
xor
push
jae
and
testb
outsb
pop
xchg
or
add
fsts
adc
mov
jno
fidivs
adc
in
add
pop
insb
push
jg
dec
cmp
lea
shll
mov
xor
add
orb
std
push
setle
adc
movsl
pop
jo
mov
push
sub
es
fwait
stos
jmp
sbb
push
setge
or
cmp
loopne
dec
movsl
push
add
push
ja
aam
test
push
push
stos
sahf
scas
jl
pop
push
add
pusha
cmovs
inc
jo
jns
xchg
cmpsb
cmp
xor
dec
movsl
mov
sub
or
cmpsl
pop
test
add
aas
add
pop
adc
call
insb
and
je
mov
pop
sub
aas
shlb
adc
cmpsb
sahf
shll
mov
pop
and
inc
push
arpl
les
adc
mov
test
pop
pop
js
push
adc
daa
pop
inc
cld
mov
and
es
repz
push
cmp
pop
inc
addr16
int3
push
mov
and
cmpl
out
insl
mov
push
push
pop
adc
aam
jno
cmpsb
in
loope
add
or
jge
xchg
inc
aad
mov
mov
dec
notl
xchg
jns
decl
pop
inc
enter
adc
or
inc
or
inc
cmp
cmpsl
pop
ret
jecxz
xor
sbb
dec
cltd
hlt
sub
cmp
adc
adc
in
movsb
popa
or
inc
inc
ficomps
pop
or
jle
test
sahf
lret
add
jecxz
push
mov
sbb
add
adc
imul
jg
push
push
cmp
adc
rolb
add
push
mov
push
pop
jmp
hlt
rcrb
push
pushf
sub
push
ljmp
ljmp
and
add
or
into
es
add
mov
ja
inc
pop
mov
js
jb
mov
xor
jecxz
clc
adcl
mov
addb
or
and
push
gs
push
inc
mov
push
mov
jge
xchg
cmpsl
mov
lds
mov
mov
filds
lahf
rolb
cmp
push
ja
dec
or
jnp
push
mov
inc
loop
mov
enter
adc
pop
push
cmpsb
into
gs
and
jge
fimuls
xchg
dec
cld
xchg
lea
push
aaa
cmp
or
clc
push
aaa
or
enter
mov
fildll
dec
dec
add
test
aad
sbb
add
jne
or
imul
ret
fisubs
fisubl
xchg
pop
add
enter
les
cmp
dec
icebp
push
cmp
adc
cwtl
dec
sbb
push
stos
inc
in
adc
xchg
inc
mov
je
std
xchg
aas
popa
cmp
adc
adc
push
mov
push
scas
fwait
push
adc
inc
pop
repnz
and
aam
stos
or
cmc
mov
push
xchg
sbb
xor
sbb
aam
push
xor
xor
nop
hlt
jl
rclb
in
popa
dec
lods
in
push
aam
mov
sub
orb
push
lret
dec
es
cmove
aam
popa
ret
stos
push
sbb
shr
clc
popf
mov
sbb
shrb
cs
push
rcll
test
mov
mov
pop
mov
add
rcr
or
push
push
xor
in
ss
aaa
enter
les
clc
enter
pop
push
pop
mov
mov
push
and
pop
orb
xlat
xchg
push
sbb
xor
rolb
in
stos
leave
push
or
cmp
mov
sbb
lods
pop
shl
pop
adc
xor
dec
inc
and
loopne
add
subl
dec
jne
pop
cmp
and
sarl
lods
aas
and
inc
add
push
xor
ss
pop
ret
mov
push
push
sub
push
fcomps
jge
xlat
sub
push
push
jmp
out
xchg
jmp
clc
mov
addb
pop
iret
pop
add
fldt
enter
inc
sbb
cmpsb
and
sub
push
xor
or
in
cld
cmp
adc
mov
loope
jl
shr
mov
inc
popf
push
mov
inc
cmp
in
jmp
inc
xchg
pushl
lods
sub
lds
int3
pop
sti
sbb
enter
push
scas
cmp
repnz
xchg
stos
popf
adc
jle
stos
faddl
lock
test
enter
or
pop
jnp
out
or
stos
xchg
push
or
rcll
decl
imulb
jae
scas
arpl
stos
aam
add
leave
add
stos
mov
xorb
lret
xor
fiaddl
add
test
add
scas
pop
fnsetpm(287
popa
mov
ja
adc
fsubs
add
add
and
dec
lock
ljmp
adc
jne
fwait
or
or
shl
insl
mov
inc
and
sub
les
inc
dec
jo
or
nop
icebp
cmp
cmp
imul
mov
dec
push
xor
mov
xor
add
add
test
push
sub
lds
push
stos
add
ror
dec
or
lea
inc
or
cmp
mov
cmp
fists
add
sahf
jne
dec
pop
shrb
jmp
mov
leave
ret
bound
pop
iret
sub
cmpb
ficomps
cmp
test
mov
hlt
jl
jno
fimull
dec
fdivrs
push
or
xchg
pop
adc
jo
push
jecxz
adc
loopne
repz
jne
imul
outsb
cld
jae
xchg
adc
in
xor
jp
rclb
pop
inc
pop
adc
fdivrs
loop
pusha
subl
push
loopne
add
loopne
in
dec
dec
dec
dec
jne
push
add
and
add
stc
mov
push
mov
push
sbb
inc
int3
cld
fs
movsb
sub
pop
pop
lock
and
movsb
mov
pop
or
add
lea
sbb
js
aam
push
or
jb
push
clc
stos
xchg
dec
add
or
addr16
adc
loop
and
push
or
jbe
clc
and
insl
popa
gs
or
push
ds
sub
ret
add
or
mov
inc
cmp
jae
int
mov
mov
cmp
inc
sarl
mov
mov
mov
pop
adc
add
adc
pinsrw
xor
push
rcll
and
push
pop
dec
je
sbb
push
mov
xor
sbb
pop
scas
pop
inc
ret
bound
gs
lret
pop
outsb
or
jns
jno
adc
cwtl
cmp
mov
fs
pop
lods
ficompl
or
add
fs
inc
out
ss
or
push
out
cmpsb
mov
mov
xor
insb
mov
cmpsl
adc
aaa
dec
enter
cs
lods
mov
lea
xchg
sub
mov
xchg
push
mov
pop
test
shlb
add
lds
cld
mov
inc
jmp
addb
jle
ss
mov
xor
inc
pop
das
push
push
dec
push
push
rorl
dec
call
pushf
nop
or
imul
mov
dec
mov
dec
out
in
jle
cmp
iret
pushl
cmp
pusha
mov
lods
or
ret
push
sub
dec
clc
lods
movsb
push
adc
test
xchg
into
popf
lods
aas
mov
adc
or
xor
mov
sub
adc
mov
inc
inc
push
pop
jb
mov
loop
cld
inc
pusha
lds
frstor
inc
xchg
loopne
add
add
mov
pop
shr
imul
push
or
and
dec
stc
in
je
js
mov
data16
cmp
js
add
mov
movsb
or
jmp
arpl
add
push
jle
push
pop
pop
addr16
jmp
or
inc
push
mov
ja
mov
push
pop
aaa
ret
sub
jmp
xchg
imul
arpl
push
inc
cs
in
mov
gs
add
jecxz
in
out
sbb
adc
int
orb
jmp
push
jp
push
xcrypt-ecb
cmpsl
or
sub
xchg
les
out
dec
cs
inc
jmp
fwait
xor
iret
out
pop
inc
add
jmp
jle
int
or
aas
adc
sbb
dec
sbb
enter
out
arpl
xor
cmp
dec
dec
push
shl
jbe
iret
dec
sbb
fdivrl
test
adc
sub
push
mov
aam
dec
and
std
jg
jmp
divb
popa
in
pop
pop
adc
sub
dec
lds
pop
idiv
sub
mov
xor
and
cmp
gs
jno
cmpb
push
bound
movsb
push
push
cmp
sbb
pop
cmpsl
push
lcall
hlt
cld
jle
xlat
mov
addl
test
pop
xor
movsb
nop
cmpsl
dec
adc
out
das
adc
mov
xchg
push
les
mov
push
add
add
and
adc
scas
xor
xor
mov
lret
inc
cli
mov
mov
add
mov
rolb
test
pop
js
sbb
mov
adc
and
lret
and
sahf
or
inc
xlat
mov
xchg
test
or
lock
adc
sbb
add
and
push
xlat
pop
loop
push
dec
xor
push
cmp
subb
xchg
jne
lahf
xorl
clc
add
jmp
add
xchg
or
pop
pop
push
add
imulb
cmpb
push
addl
push
jno
popa
pop
and
outsl
adcl
pop
cmp
lock
push
mov
cmc
push
push
sbb
loope
or
mov
mov
mov
ljmp
pushf
dec
cld
or
pop
push
ret
adc
push
pushl
imul
sbb
mov
mov
shl
aam
lods
popf
notb
hlt
push
out
iret
hlt
mov
dec
mov
insl
lea
pop
loopne
mov
xchg
cmp
cmpsb
mov
out
enter
add
or
orl
push
loope
mov
inc
jne
lcall
mov
jno
cwtl
negb
leave
dec
add
test
aam
add
aam
cmp
jge
cmp
add
fwait
pop
out
loopne
add
data16
popf
push
sahf
or
popa
or
xor
adc
fisubrl
sub
clc
or
sbb
inc
js
or
pop
inc
pop
insl
mov
jl
adc
shl
inc
or
jo
icebp
add
hlt
rorb
mov
or
push
add
xor
xchg
mov
or
sbb
jo
imul
sbb
lock
mov
shlb
pushl
push
call
and
adc
sbb
mov
push
pop
nop
lret
xor
mov
rcrb
push
cmp
pop
stos
cmpl
aas
je
adc
push
add
xchg
sbb
dec
mov
push
sahf
insb
repnz
jns
push
or
push
or
stos
sbb
into
cmpsb
push
loope
and
add
inc
daa
sub
push
mov
popf
mov
dec
push
cli
dec
adc
icebp
orb
add
push
mov
pusha
js
fdivs
test
inc
loope
or
and
cmp
into
test
ss
cs
mov
in
into
mov
pop
jb
iret
add
dec
mov
ds
jnp
and
jo
jnp
or
inc
add
dec
jnp
xchg
scas
dec
popa
outsb
push
mov
inc
xchg
or
add
popa
mov
xchg
mov
push
movl
xchg
insb
dec
inc
push
mov
push
jge
jle
jl
and
bound
push
mov
test
mov
or
not
and
or
push
sahf
aas
sub
lock
clc
repz
sbb
adc
js
iret
or
add
xchg
add
cmc
push
cmp
jmp
or
shll
add
or
aam
dec
mov
pop
adc
mov
insb
out
out
cld
push
jne
dec
add
sahf
ja
dec
push
clc
cmp
jne
or
inc
jge
nop
aaa
push
cmp
cmp
outsb
push
aas
sbb
imul
mov
mov
push
out
imul
jne
sbb
sub
sbb
sub
cli
push
push
cmp
push
sub
or
mov
repnz
add
cmpsl
sbb
add
pop
sbb
mov
lods
adcl
push
jne
cmp
cmp
retw
jp
nop
ljmp
nop
jbe
and
pop
xchg
push
testl
xlat
add
or
fwait
insb
add
das
popa
in
fwait
in
xchg
ret
stos
fsubrs
pop
shlb
and
lea
lahf
push
ret
pop
or
leave
or
jnp
aad
adc
incb
mov
je
cmp
inc
sub
pusha
mov
pop
xlat
adc
pop
movb
xorb
insl
add
ret
rolb
dec
sbb
xchg
popa
push
sbb
push
rol
lock
jmp
lret
push
add
mov
adcb
enter
pop
inc
or
cmp
adc
shlb
and
cmp
dec
jb
push
and
clc
jnp
cmp
pushw
push
push
sbb
es
cmp
mov
adc
enter
inc
stos
dec
dec
sub
fisttps
adc
push
test
fwait
cmc
adc
add
call
adcl
and
repnz
pop
cmp
inc
push
in
sub
rclb
and
call
dec
out
imulb
dec
outsl
jmp
jp
clc
hlt
pop
sbb
dec
cmc
add
mov
xor
in
push
out
sbb
add
loopne
and
and
inc
cmp
lds
mov
inc
fimuls
mov
aam
jecxz
out
pop
cmp
testb
lcall
and
jp
nop
in
adc
or
jo
nop
mov
inc
cltd
dec
inc
and
add
dec
push
push
mov
ret
andl
lret
notl
andl
sub
push
inc
das
push
mov
in
or
aas
rclb
or
fwait
mov
call
add
ss
movsl
ret
psubb
cld
push
orl
inc
iret
pushf
aam
imul
mov
je
push
repnz
push
sti
mov
jae
ret
jmp
cli
inc
dec
push
pop
rol
psubsb
adc
inc
mov
adcl
xchg
lds
sub
mov
pop
mov
mov
lret
shlb
cmp
mov
cld
add
addr16
aad
cwtl
sbb
int
adc
mov
inc
pop
add
test
rorl
push
je
push
mov
xor
sbb
adc
add
dec
shlb
jle
pushf
lea
adc
push
push
loope
nop
jmp
push
scas
mov
mov
jne
sbb
test
xor
push
push
repz
adc
enter
and
push
pop
jo
cmp
inc
xchg
in
pop
hlt
clc
rclb
testb
mov
xchg
or
push
mov
xchg
clc
dec
push
inc
sub
xor
add
jo
mov
cmc
popw
and
adc
xchg
mov
clc
popf
mov
push
insl
jl
lcall
or
xor
addl
insl
push
add
ljmp
popa
pop
xchg
rorb
lods
cmp
cmpl
adc
lcall
xor
mov
test
sbb
pop
js
or
sub
inc
xorb
sbb
sub
inc
fucomip
adc
mov
push
and
inc
jae
pusha
mov
mov
xor
es
mov
mov
adc
lret
mov
push
jge
js
and
scas
cmp
push
shrl
sbb
loop
fld
push
xor
xor
dec
loope
scas
repz
lods
je
and
sub
add
mov
inc
adc
je
cmpl
and
xchg
loope
pushf
mov
mov
adc
inc
sub
bound
cmp
xchg
daa
cmpb
mov
jo
sub
mov
xor
cmpsl
pop
xchg
test
pop
sbb
cs
or
test
mov
movsl
sub
xchg
rclb
push
mov
sub
xor
push
push
daa
mov
das
ret
mov
enter
and
movsb
xor
and
int3
mov
in
or
jno
sub
aas
fs
xchg
push
adcl
arpl
mov
inc
lods
jmp
pop
inc
mov
js
add
adc
jmp
js
mov
addb
cli
fsub
shrb
dec
add
push
push
mov
xor
out
leave
sbb
and
push
add
fcomps
mov
add
and
sbb
test
subb
dec
push
add
and
cmp
and
pusha
and
aaa
mov
xlat
fwait
pop
mov
jno
xor
fisttpl
mov
and
clc
jg
pop
or
cmp
jne
inc
cmp
jne
lcall
or
jl
clc
and
into
add
and
push
and
xor
lret
mov
push
jo
mov
call
lods
pop
pop
push
and
test
dec
jno
pop
adc
sub
aaa
push
add
and
push
data16
icebp
cld
mov
xor
ret
pop
add
sub
lods
jp
aaa
or
jg
dec
ds
adc
jo
test
andb
mov
jno
dec
imul
push
and
rclb
mov
cmc
shr
sbb
add
jge
jne
int
out
and
xor
mov
and
sub
and
push
lea
mov
inc
ja
out
sbb
mov
hlt
pop
rorb
iret
add
push
xchg
nop
or
icebp
xorl
sbb
cmp
xor
sbb
ja
adc
jmp
fsubrl
inc
dec
sub
sub
rolb
mov
adc
or
fldt
jb
mov
add
and
sti
sbb
pushf
ljmp
test
pop
addl
pop
pop
lock
jg
sbb
shl
mov
test
dec
mov
mov
leave
nop
add
fs
or
pop
out
mov
push
outsb
mov
dec
sub
aad
fcoms
fistps
or
int3
das
fdivl
pushf
rolb
rdmsr
testb
dec
jl
and
xchg
in
jmp
aam
dec
or
inc
lea
insb
xchg
and
adc
mov
outsb
xchg
inc
lret
add
repnz
cmp
adc
inc
dec
fwait
mov
xchg
push
lock
ja
adc
js
or
sbb
rcrl
pop
insl
adc
push
and
jle
and
push
sbb
into
fmuls
flds
xchg
jmp
inc
dec
cwtl
shrb
jl
add
movzwl
mov
aam
mov
dec
push
or
jmp
push
loopne
and
jb
mov
xlat
and
adc
cmpsb
push
out
lods
dec
push
bswap
mov
fimull
mov
inc
cmp
xchg
inc
mov
dec
inc
cmp
rcrl
rolb
cld
xchg
and
push
in
ss
sbb
daa
dec
add
cwtl
test
ret
push
fsubrl
je
jp
xchg
push
stos
js
pop
mov
sti
testb
add
push
push
mov
mov
pop
mov
xor
or
nop
jo
and
cmp
inc
cmp
mov
mov
outsb
pop
mov
rclb
shlb
movaps
mov
out
outsb
mov
inc
stos
mov
adc
testl
push
push
ljmp
ret
push
lea
inc
jle
sbbb
add
sub
mov
arpl
lock
xchg
daa
rorb
ret
hlt
fistps
jmp
pop
xor
icebp
add
pop
cmp
imul
or
lea
jecxz
adc
xchg
jnp
ds
dec
or
or
sbb
adc
adc
dec
or
in
mov
xor
pop
pushf
pusha
dec
enter
fcmove
cmp
dec
cs
cmp
es
adc
push
sub
pop
sar
mov
es
dec
iret
clc
mov
adc
clc
mov
cltd
call
into
push
pop
clc
fwait
popa
loop
pop
cmp
jne
es
pop
pop
and
ret
add
fidivrs
cmp
pop
aam
nop
xor
rolb
mov
and
call
push
and
jg
loope
xor
jle
xor
mov
fwait
or
xor
addl
cmp
pop
pop
rcrb
notl
or
inc
or
or
push
mov
cli
mov
jb
fidivs
aad
jb
out
daa
sbb
xchg
orb
pop
je
xlat
dec
test
mov
push
mov
dec
subb
roll
inc
adc
jmp
adc
sub
or
cmp
out
mov
or
fwait
xorl
imul
lret
insb
push
and
jmp
pop
shlb
mov
add
mov
jns
in
out
subl
cmp
mov
das
cwtl
ret
xor
xchg
cmpl
mov
clc
aam
dec
ret
mov
aas
sbb
imul
pop
xor
inc
adc
xor
mov
addb
push
cmp
pop
xchg
push
jo
mov
push
push
push
cmp
ds
jno
rcll
push
shlb
add
lods
jge
jmp
jmp
add
mov
mov
sub
and
push
mov
daa
sbb
push
cltd
mov
fcomps
push
inc
pushf
popa
fcomp
push
aaa
adc
cmp
and
popa
call
dec
popa
out
inc
dec
cmp
call
add
cmp
xchg
sbb
jmp
xchg
xor
jmp
jnp
inc
jmp
lock
cmpsl
cmpsl
add
into
stos
aas
mov
push
aad
imul
cmp
pop
jb
inc
les
push
sub
ljmp
push
jmp
mov
stc
in
ja
jmp
push
or
jno
lods
aad
jecxz
pop
and
push
dec
mov
jo
enter
pop
dec
push
xchg
iret
jmp
and
mov
pop
lds
fdivrl
add
mov
xchg
in
cmpsl
stc
cmp
stos
push
sti
and
xchg
cmpsl
stc
data16
into
fucom
daa
in
push
cltd
out
fcmovnu
jnp
adc
push
sbb
push
and
ss
pop
iret
repz
jo
mov
cmpsb
mov
outsl
negb
mov
push
es
out
sbb
xchg
movsb
pop
push
push
xchg
outsb
adc
cmp
push
imul
or
cmp
mov
ffreep
into
insl
popa
jb
mov
les
mov
mov
insb
jb
or
add
cs
cmp
test
push
mov
push
jge
inc
mov
xor
and
je
clc
or
aaa
cld
daa
je
arpl
je
jmp
sbb
aam
xchg
pop
dec
int
cmpsb
add
jl
and
push
push
adc
cwtl
inc
or
das
popf
sbbl
xor
pusha
lods
and
or
or
leave
dec
dec
dec
and
das
ds
or
mov
push
daa
mov
shlb
add
jmp
or
pop
lock
pop
stos
push
push
sub
addl
add
inc
dec
and
xor
and
inc
inc
pop
mov
or
rol
sarb
hlt
push
lock
out
lret
aam
repnz
fmuls
push
jno
adc
mov
xlat
mov
ret
test
je
out
rolb
data16
cmpl
xor
sub
das
test
or
clc
sbb
mov
addr16
push
jne
mov
pop
lret
shll
mov
dec
inc
dec
loope
js
ss
mov
lret
pop
cmp
popf
or
rcr
test
lea
pop
enter
add
sbb
pop
or
jl
dec
gs
arpl
lock
lds
cmp
jne
cmpsl
jne
xor
cwtl
pop
xor
enter
arpl
fbstp
mov
fs
xchg
jge
or
jno
or
sub
pop
lods
push
shlb
mov
dec
push
ljmp
push
add
ret
stc
sbb
adc
xor
pop
push
mov
add
into
push
sub
add
and
adc
add
inc
and
xor
cmp
daa
pusha
xchg
dec
push
mov
dec
mov
push
pop
imul
loopne
add
adc
adc
popa
shl
or
sub
std
je
and
imul
rorl
insb
push
cmp
test
insl
push
ss
nop
add
adc
in
and
movsl
fcom
std
cmp
loopne
and
adc
inc
inc
test
jecxz
mov
clc
fnstcw
jl
mov
jno
movsb
jo
sbbb
pop
push
add
and
pop
clc
lret
fistpll
cmp
sub
mov
test
jg
das
lods
popa
sbb
dec
jl
mov
push
cmpsl
sbb
jns
je
gs
cmp
jns
pop
ljmp
inc
scas
fwait
cmp
or
add
call
adc
and
mov
adc
cmp
dec
call
sub
sbbb
das
jbe
or
sbb
dec
jne
mov
mov
mov
pop
ljmp
push
dec
mov
out
es
stos
out
sub
push
xor
mov
mov
into
pop
je
cli
fs
or
js
cmp
pop
cmp
cmp
aas
rolb
jmp
cmp
shll
mov
and
or
adc
push
dec
sbb
aas
pop
mov
cmp
pop
lret
fs
push
cs
or
adc
lock
pop
add
testb
leave
or
pop
jg
sbbl
fstpl
cmp
or
xchg
fnstsw
sbb
xchg
add
orb
fisubrl
adc
outsl
jnp
lds
xchg
out
js
or
dec
sub
leave
andl
outsl
adc
xchg
mov
addb
sbb
ret
movsl
mov
aas
fsubrs
inc
sub
std
jmp
mov
cmp
dec
lods
xlat
lret
test
enter
and
outsb
enter
loope
sbb
push
sbb
or
movb
dec
xchg
and
ret
add
dec
pop
or
or
cmpl
mov
dec
xchg
enter
add
mov
fnstcw
ja
jno
negb
clc
inc
mov
loopne
aaa
push
jmp
mov
lds
bound
push
pushf
cmpsl
pop
mov
mov
xchg
es
lock
push
mov
test
in
loopne
push
cld
inc
or
pop
into
xor
test
or
stos
add
pop
add
or
mov
add
push
cmp
pop
pop
and
push
adc
pop
lock
sub
fs
or
int3
add
push
or
adc
push
pmuludq
add
daa
outsb
xor
scas
and
lods
adc
das
popf
loop
inc
clc
aaa
add
in
enter
mov
xchg
add
mov
lret
add
dec
int
loopne
dec
jecxz
scas
jmp
mov
lds
icebp
push
xor
xchg
jo
cli
adc
fisubrs
jmp
cmp
leave
push
imul
pop
insl
xor
nop
adc
shlb
adc
xor
cld
jmp
testb
xor
or
aas
push
mov
imul
xchg
push
cmp
mov
es
test
adcl
jo
mov
and
cli
and
fdivl
mov
push
scas
mov
sbb
loope
or
and
xor
loopne
fisttpll
and
call
movsl
mov
xchg
push
jbe
in
mov
jmp
stos
mov
enter
add
orl
sbb
lea
sub
or
mov
pusha
inc
pusha
add
sub
inc
int3
lahf
adc
push
or
sub
cmp
inc
sub
adc
jmp
dec
lret
or
dec
mov
int
nop
cmp
jne
xor
jmp
and
pop
hlt
jle
adc
add
push
xchg
push
cltd
rclb
clc
mov
xchg
inc
lcall
mov
sbb
push
push
inc
cltd
orb
shll
push
jg
lret
ret
add
movsl
adc
loope
xor
lock
mov
dec
lcall
or
cmp
cmp
push
sbb
xchg
fs
pop
mov
mov
add
orl
fs
add
adc
das
inc
stos
rclb
je
adc
data16
sbb
xor
add
mov
sbbl
in
push
mov
adc
adc
push
fbstp
jmp
inc
popa
xor
aad
sbb
push
or
outsb
adc
pop
adcb
adc
cmpsb
cld
mov
arpl
lds
in
stos
xchg
mov
push
mov
add
andl
push
mov
adc
push
and
popa
sbb
int3
sub
sub
pushf
ss
push
inc
loopne
imul
adc
adc
inc
decb
or
outsb
pop
sahf
das
push
pop
or
fistl
pop
fwait
icebp
and
std
cli
jg
cwtl
sbb
or
mov
xchg
sub
arpl
sub
sbb
lods
movsl
je
pop
cmp
adc
push
add
ret
xchg
sbb
sub
cmp
les
roll
adc
adc
bound
arpl
jge
dec
dec
fs
fsubp
outsl
aas
sbb
lds
inc
sbb
rcr
push
add
shlb
inc
pop
dec
xor
hlt
fcoml
sarl
out
xchg
test
divb
loope
call
ss
ret
scas
sub
add
mov
mov
push
push
ds
std
sub
cwtl
sbb
test
mov
add
in
je
and
push
inc
in
and
jne
push
mov
data16
push
mov
xor
test
add
add
lock
push
jecxz
pop
xor
xchg
lock
push
test
sub
jo
or
dec
mov
sbb
mov
mov
and
cmp
add
add
push
mov
and
cmp
push
inc
mov
inc
push
inc
cli
add
mov
paddusb
ror
mov
inc
cmp
cmp
push
loopne
xor
jmp
add
mov
call
ds
sarb
movl
daa
add
call
jmp
cmc
rolb
pushw
or
or
xor
cmpl
pop
fwait
xor
out
push
decl
and
std
jmp
cmpsb
por
jno
int3
dec
add
mov
push
lods
shrb
loopne
lock
test
cmp
push
pop
hlt
ret
xor
or
loopne
and
mov
sahf
mov
push
nop
out
les
into
and
lahf
jmp
cmp
or
xlat
scas
add
fimull
add
and
jge
add
jp
push
cmp
loopne
push
add
push
outsb
pop
dec
shlb
add
lahf
lock
sub
call
sbb
push
jno
rcrb
fcompl
inc
pushf
or
mov
aas
jge
sbb
push
xor
sarb
adc
je
popa
and
repnz
into
dec
sarl
inc
cli
inc
inc
outsb
xchg
mov
xor
adc
cmp
mov
mov
movsb
jnp
push
cmp
inc
mov
jge
filds
sbbl
and
and
clc
adcl
add
cmpb
cmpsl
cmp
adc
inc
add
cmp
or
enter
cli
cmp
add
add
test
je
mov
enter
jo
sub
scas
aam
push
dec
xor
jne
sub
add
pop
sub
xor
jb
and
or
lock
jae
fstl
push
test
dec
fsub
xchg
push
aaa
in
adc
lds
iret
add
mov
ret
test
jg
dec
dec
je
mov
js
xorb
jne
cld
mov
add
dec
push
mov
imul
inc
cmp
out
insb
sarl
mov
ss
cmp
jne
push
sbb
cmp
sbb
inc
lret
pop
jecxz
data16
inc
sbb
xor
ds
xor
cmp
inc
add
ret
daa
mov
inc
arpl
or
fidivs
pop
adc
call
jl
les
xor
mov
scas
push
dec
mov
jmp
lahf
and
push
fdivl
fcompl
push
ljmp
lock
fbstp
shrd
ret
sub
ret
sub
lds
int3
scas
push
daa
dec
xchg
mov
or
lret
add
xchg
mov
adc
out
pop
push
dec
js
and
fdivs
jl
pop
mov
in
out
xorb
sub
push
das
clc
data16
pop
das
insb
lret
push
cld
std
xor
adc
rolb
mov
out
lret
inc
mov
in
adc
dec
adcl
ret
inc
inc
popf
cmp
inc
les
mov
mov
or
add
stos
test
sbb
pop
dec
pushf
aaa
mov
add
mov
xchg
mov
lahf
ljmp
lods
or
or
mov
pop
sbb
mov
into
lock
push
shrl
or
inc
call
mov
sbb
push
je
es
std
test
aam
or
cmpl
inc
push
outsb
adc
pop
hlt
mov
daa
cmp
jge
clc
je
lea
pop
imul
push
lods
push
pusha
pop
shrl
movsb
js
xor
ret
sub
popl
pop
mov
adc
pop
rcrb
cli
out
cmp
adc
mov
jmp
out
pop
mov
test
xchg
jbe
insl
stos
jmp
add
push
sbb
in
jno
cmp
push
std
dec
pop
jo
or
inc
sub
outsb
xor
js
les
mov
hlt
or
push
pop
or
and
into
xlat
fisubl
adc
aam
out
jo
sbb
int3
sahf
fcoms
xchg
shr
sahf
arpl
gs
sahf
pop
adc
lret
cmpsl
je
fwait
adc
data16
roll
test
xor
dec
jl
sbb
push
pop
push
jns
pop
xor
mov
je
sub
sar
fsubrl
mov
fiaddl
xchg
ret
cmp
out
rclb
nop
pusha
aam
push
jg
stos
jns
mov
movsb
aam
fdivrs
lds
pop
add
push
xchg
sbb
xor
xor
push
lret
fimuls
cmc
push
push
push
sbb
sbb
add
adc
pop
mov
cmc
push
add
push
scas
cmp
pop
cmp
rcll
cli
pop
cmp
mov
sub
jl
aam
xor
ljmp
loopne
mov
rcrb
mov
jmp
or
adc
push
xchg
scas
jne
out
or
arpl
into
popa
push
mov
sarb
add
sub
xor
mov
inc
inc
xor
mov
rorb
jo
rcrb
ss
mov
test
jb
fidivs
push
push
das
je
mov
or
dec
or
in
or
aam
add
shl
test
or
popf
aad
repnz
popf
rcrb
mov
add
and
xchg
and
pop
jae
popa
mov
push
push
cli
fnstsw
cmp
imul
and
adc
into
add
adc
jb
sti
xor
sbb
xchg
mov
clc
push
sub
ret
sbb
outsb
pop
fwait
xor
pop
pop
je
mov
es
cmp
orb
cmpl
daa
les
mov
inc
cmpsb
inc
dec
add
inc
addr16
test
pop
adc
cwtl
adc
push
pop
add
push
and
push
sub
sub
sub
sub
add
cmc
sbb
ss
pop
push
inc
adc
aas
fimull
ret
dec
lock
ss
sub
pop
push
je
bound
cmp
xor
and
push
pushf
lods
cmpsl
or
push
mov
jo
push
jge
cmp
mov
jae
lret
cmp
sbb
mov
adc
jge
jmp
call
icebp
inc
dec
pop
and
or
push
ja
cmpsl
pop
pop
pop
ljmp
dec
jge
pop
andl
sbb
sbb
sbb
imul
loopne
pop
and
mov
jno
or
push
scas
subl
adc
test
mov
jle
jg
rolb
in
jae
cmpl
sahf
mov
lds
add
mov
pop
jge
xchg
shrb
sahf
divb
or
aam
adc
cmc
sbb
jecxz
or
inc
and
test
push
xorl
adc
fldl
adc
push
cmp
cmpsl
mov
push
xchg
add
testb
inc
ret
std
cmp
xchg
sbb
and
or
iret
jbe
dec
dec
fsubr
pop
outsl
push
mov
ret
lods
bound
xchg
lea
cmp
inc
inc
rorb
jnp
xchg
cmpsb
fadds
push
xor
dec
fsub
push
mov
mov
xchg
mov
sarb
pop
adc
lcall
push
fidivrs
sbb
popa
cmp
call
nop
pop
stos
arpl
pop
adc
mov
xchg
sbb
in
add
mov
or
mov
cmp
loopne
adc
xor
sbb
add
cmp
xorb
clc
rolb
mov
add
xchg
mov
add
add
xor
sub
cmp
dec
aaa
mov
pop
adc
jbe
test
dec
mov
enter
aas
push
adc
lods
orb
xchg
push
fs
cmp
mov
add
nop
es
out
dec
xchg
add
outsl
daa
lret
add
push
or
ret
mov
test
xchg
bound
xchg
add
pop
sahf
or
pop
ror
shlb
cmp
out
add
shrl
adc
clc
sub
je
outsb
push
push
rorb
call
ds
je
or
pop
dec
jne
loop
pushl
int
lods
sti
cmp
imul
into
mov
jmp
sbb
pop
push
das
les
je
add
add
dec
mov
data16
adc
sbb
aas
mov
ret
add
pop
or
fisubrl
jmp
int
fadds
or
test
cmp
repz
push
mov
movsb
jbe
sti
xchg
lcall
fisubrl
loopne
popa
xor
push
push
sub
dec
push
sub
js
or
dec
pop
push
ljmp
test
and
into
sbb
ja
add
lret
xor
xchg
rol
mov
and
gs
pop
push
orl
mov
push
jmp
lret
je
idivb
test
pop
inc
aaa
stc
push
inc
push
aam
adc
inc
sbb
pop
mov
inc
lcall
sub
daa
mov
push
or
pop
or
or
ret
sub
pop
pop
and
push
mov
out
pop
jne
mov
outsb
xchg
test
and
call
mov
adc
jne
sarb
sbb
sub
and
dec
add
push
dec
jl
jge
movsl
push
or
push
add
dec
xchg
jecxz
push
cwtl
enter
sti
lods
aas
push
jne
mov
and
and
ja
pop
dec
sub
dec
loop
adc
sub
inc
and
ss
popf
movsl
ja
ret
pop
sub
inc
lret
add
gs
jge
and
inc
or
ret
push
les
into
pop
test
outsl
jns
fcmovnbe
push
rcrb
sahf
or
and
lock
test
jecxz
fldt
js
fidivs
adc
add
lea
sub
leave
mov
add
pop
xor
fidivrs
stos
mov
inc
xchg
push
mov
fnstsw
jl
pop
out
and
lret
or
push
pop
mov
add
sbb
push
hlt
ss
lods
js
lods
pop
lea
mov
aam
sbb
inc
ds
inc
pop
int3
cpuid
xchg
dec
imul
adc
sub
out
dec
adc
push
repnz
sub
mov
inc
dec
imul
adc
sbb
dec
test
mov
jnp
cmpsl
xor
aas
sarb
inc
mov
rcrb
adc
cld
inc
sbb
xchg
lahf
std
fcmovbe
mov
xor
jl
xor
aam
cmpl
sahf
xchg
sarl
and
pop
sbb
clc
movsb
mov
adc
into
adc
inc
push
push
xor
xor
mov
inc
lock
xor
adc
inc
repnz
test
mov
aas
rorl
xchg
fidivs
xchg
iret
adc
shrb
adc
fmul
add
add
cmpl
or
jle
dec
pop
aaa
test
xchg
aaa
mov
mov
bnd
sbb
test
push
aas
pop
push
and
push
rorb
mov
les
xchg
mov
push
mov
call
inc
push
test
je
ret
add
loopne
cmpl
adc
loopne
outsl
jnp
jbe
lock
out
xchg
mov
add
insl
dec
pop
arpl
xchg
pop
mov
sub
push
icebp
inc
cli
mov
cmp
mov
add
xchg
test
jg
and
out
push
scas
mov
add
mov
mov
dec
faddl
or
cmp
shl
ljmp
xor
push
mov
pop
and
add
pop
in
addr16
pop
pop
lea
pop
lret
add
and
sarb
add
movsl
aam
or
adc
js
push
jb
mov
sbb
xor
mov
adc
dec
js
dec
mov
push
mov
ret
push
add
jp
push
cmpsl
insb
sub
repnz
xor
fucom
mov
mov
ret
sub
jge
movq
mov
cld
sbb
xchg
xchg
push
push
mov
pop
push
xor
pop
lods
and
jne
dec
inc
dec
es
loopne
imulb
adc
aad
rcrb
mov
adc
sub
push
pop
push
mov
mov
dec
test
fbld
mov
nop
xor
sbb
dec
sub
push
mov
iret
jo
cwtl
in
push
lahf
sub
lcall
stos
bound
aas
lods
nop
insb
jbe
sub
mov
mov
sub
and
xchg
mov
ret
mov
mov
pusha
mov
adc
call
cld
push
mov
inc
adc
inc
and
call
pop
bound
xchg
and
or
sub
pop
movsl
mov
pop
test
mov
adc
pop
insl
imul
add
pop
popf
xchg
dec
xchg
loopne
add
cmc
mov
xchg
and
repz
push
push
sbb
rolb
xchg
mov
jmp
movsl
jne
push
xchg
mov
sbb
in
add
xchg
outsl
pop
ret
add
mov
mov
dec
fiadds
add
stos
xchg
inc
xchg
or
push
sbb
mov
pop
mov
cltd
sahf
xor
inc
or
jb
sbb
and
aaa
shl
lock
dec
arpl
roll
cmp
ficomps
lock
movsb
lret
and
mov
or
add
mov
fbstp
stos
mull
cltd
in
cltd
dec
sub
or
mov
add
pop
cmp
lock
sbb
pop
push
mov
cmp
imul
gs
add
sbb
jmp
test
in
es
push
adc
push
cmpl
sbbb
jmp
jne
xor
mov
add
std
inc
loop
or
inc
inc
cmpxchg
addl
xor
movsb
je
mov
ret
jne
add
adc
sub
lea
xchg
rclb
ret
jne
or
adcb
cmpsl
inc
add
push
dec
or
xchg
mov
sbb
adc
push
dec
addl
mov
jmp
lahf
out
xor
or
jns
pop
test
test
sbb
add
sub
aad
adcl
xchg
xchg
pop
ljmp
clc
fs
ret
ret
cmp
sub
lahf
push
add
cmp
into
add
dec
mov
and
dec
in
and
test
xchg
and
roll
ffree
ja
vaddsd
push
outsl
xchg
test
and
lahf
mul
movsb
in
imul
cmp
adc
mov
ja
inc
inc
xor
nop
pop
push
push
mov
int
push
xchg
lock
jle
lea
inc
cmp
loop
out
insl
and
inc
adc
jbe
jmp
adc
adc
add
jne
pushf
insl
add
push
mov
dec
xchg
aad
sub
inc
sbb
mov
or
shll
loopne
pop
mov
sbb
xchg
cmc
mov
push
imul
push
add
ret
dec
add
jnp
push
addl
popa
pop
lock
test
rorb
mov
xchg
shlb
cmp
aaa
mov
inc
add
dec
inc
adc
je
push
cmp
cmpl
mov
or
add
xor
call
shrb
xor
pop
xor
adc
jne
inc
ljmp
cmp
jp
push
dec
repz
jecxz
inc
lea
mov
or
cmp
cmp
insl
add
xor
sub
cwtl
cmp
xor
loope
or
xchg
pop
mov
sbb
add
jecxz
cmp
xchg
loop
popa
subb
fldenv
push
add
or
ss
enter
xchg
cli
ss
mov
dec
sbb
xchg
je
movsb
ss
int3
or
sub
dec
inc
js
push
fs
dec
or
clc
and
dec
inc
addb
fs
sbb
push
sub
les
jl
movl
dec
shll
jle
pop
and
lret
loopne
dec
inc
in
sbb
loopne
gs
or
mov
lods
je
or
or
hlt
movsb
mov
test
lock
add
test
fistpll
add
insb
adc
adc
js
push
std
xor
inc
dec
mov
mov
lods
adc
sbb
jno
xchg
test
fsubrs
adc
or
push
push
int3
dec
and
dec
jae
push
sbb
orb
and
dec
and
inc
lods
dec
push
pop
push
popa
add
jno
push
cmp
pop
jae
cmpl
movsb
cmp
inc
adc
add
adc
data16
cltd
inc
inc
out
pop
pushl
adc
mov
and
or
pop
cs
xor
push
push
add
fmul
clc
cmp
mov
jle
xchg
or
inc
push
pop
clc
fidivrs
jns
popa
dec
add
rorb
cmp
inc
inc
inc
inc
and
add
or
sub
mov
or
inc
or
xor
arpl
adc
push
add
js
mov
loop
and
and
mov
out
xor
xor
lret
rolb
jmp
andl
add
dec
imul
add
push
sub
aaa
imul
xor
js
jmp
sbb
push
fidivl
inc
xor
cmpsb
subb
nop
push
lods
iret
mov
sub
mov
add
lock
and
add
mov
sub
repz
sub
xor
dec
mov
dec
xor
cmp
cmp
pop
les
and
loop
je
insb
or
mov
or
les
dec
lock
out
outsl
or
in
add
inc
push
lods
cmpl
push
mov
pusha
sbb
das
push
daa
sbbb
clc
or
in
mov
nop
insb
add
movsl
mov
dec
or
pop
in
and
dec
add
push
rol
push
or
bound
cwtl
dec
iret
test
push
fildll
or
ret
xchg
fisubrl
lods
inc
pop
mov
negl
push
inc
cmc
inc
cmp
push
lcall
mov
cmpb
inc
push
call
adc
ret
and
mov
mov
push
cwtl
insl
inc
sbb
mov
lods
add
cmp
or
roll
push
add
dec
iret
add
cmp
push
test
inc
add
lods
dec
and
cmp
mov
pop
dec
adc
dec
inc
mov
test
jg
movb
cmp
pop
adc
or
inc
outsb
inc
xchg
cwtl
hlt
sbb
dec
xchg
dec
sar
mov
ret
dec
ret
inc
push
mov
lret
xlat
xchg
jo
push
push
cmp
push
inc
testb
leave
sub
xchg
push
loop
add
rol
pop
xchg
jb,pn
adc
sbb
rcll
mov
test
push
into
xchg
and
push
stos
adc
cmp
repz
xor
sbb
mov
popa
pop
push
cmp
and
inc
add
inc
lret
loope
inc
and
shl
or
lock
pop
xchg
or
xor
add
or
jno
pop
inc
ljmp
xor
fdivrs
or
xchg
je
cltd
testl
push
cmp
addr16
mov
in
in
push
push
or
or
fs
js
fadds
arpl
push
mov
mov
idivb
inc
js
xor
in
adc
into
push
push
cmp
insb
pop
jge
dec
xor
arpl
aaa
in
and
add
and
orb
std
sarb
stos
dec
mov
pcmpeqb
push
roll
add
fmuls
dec
loop,pt
add
js
dec
mov
mov
dec
cmp
mov
rolb
dec
fmul
push
push
fimuls
sub
cld
test
push
xor
cwtl
inc
mov
pushf
pop
or
aas
ljmp
dec
cmpsl
add
xor
test
fdivl
xchg
push
xchg
mov
or
xor
mov
mov
lret
sub
dec
ljmp
out
andb
push
ret
fwait
adc
mov
pop
sub
add
inc
test
xcrypt-cbc
cmpsl
aam
or
adc
leave
xchg
push
jl
push
or
push
test
pop
mov
sub
push
jge
xchg
sbb
pop
pop
inc
cmp
cltd
inc
inc
popf
ljmp
or
jne
adc
push
add
shlb
mov
sbb
sub
sub
pushf
ja
and
inc
add
mov
imul
mov
pusha
add
fldpi
fisubrs
je
andb
clc
add
push
push
add
push
dec
mulps
dec
fnstenv
adc
sub
filds
inc
or
jmp
aas
xchg
sbb
movsl
sbb
insl
mov
add
dec
das
inc
adc
adc
adc
int3
or
lret
flds
inc
mov
divl
push
push
andb
push
arpl
mov
iret
int3
mov
dec
in
xchg
sarb
rcrb
push
aaa
fnsave
divl
push
andb
adc
imul
and
mov
mov
mov
inc
mov
mov
cmp
adc
mov
shlb
adc
movsb
push
cs
ja
jl
cmpb
pop
pop
dec
push
sub
xchg
xor
cmp
add
jmp
jp
jae
adc
push
add
cmpsb
jge
cmp
movsb
add
push
xor
mov
sub
add
icebp
jbe
fildll
mov
pusha
ret
or
fucom
pop
aad
mov
jbe
and
enter
xchg
push
dec
call
pop
adc
and
daa
rolb
adc
push
cltd
pop
ror
das
mov
lods
mov
imul
jb,pn
push
dec
aaa
or
bswap
add
inc
adc
or
scas
lea
and
xchg
jnp
popf
xchg
pop
movsb
mov
imul
outsl
scas
fs
cmp
and
sub
pop
inc
fsubr
and
sbb
mov
ljmp
add
js
xchg
cmp
pop
loopne
das
push
jmp
adc
enter
add
mov
pop
movsl
icebp
fcom
dec
add
adc
jge
xor
mov
addb
sbb
into
cld
push
stos
filds
inc
or
inc
pop
loopne
movsl
dec
add
sbbb
in
inc
sbb
mov
jg
lret
push
movups
shll
mov
ss
add
rclb
add
or
adc
pop
push
or
inc
jmp
addb
adc
into
and
clc
sbb
cmc
push
mov
dec
xchg
push
stc
xor
call
sub
ljmp
aam
or
testl
xor
push
loopne
gs
add
and
sarb
sbb
nop
mov
sbb
pop
adc
outsb
fldenv
cmp
imul
daa
push
sub
and
cmpb
xchg
push
ret
inc
lcall
pop
add
aaa
jne
ds
cmp
stos
push
inc
sbb
call
pop
xchg
sti
scas
add
jp
loop
lods
cmp
mov
push
test
stos
sbb
dec
add
add
push
and
jmp
inc
or
adc
pop
je
int3
dec
outsb
mov
adc
and
add
cmpsb
push
xchg
fldl
cmp
loop
jle
sbb
fstl
adc
rol
and
push
dec
stos
repnz
sbb
fsubs
push
pop
sbb
pop
shll
add
jmp
pop
cli
fcoms
fdivp
jne
arpl
call
push
jmp
xchg
bound
cli
dec
adc
sbb
sub
push
mov
enter
push
add
mov
cmp
inc
divb
add
stos
lahf
cmp
rcrb
jne
add
mov
daa
cli
shl
mov
push
ss
rolb
pop
add
test
dec
movb
jns,pn
inc
lock
push
push
inc
jo
push
adc
xchg
add
push
xchg
add
add
je
dec
push
sbb
xor
pop
ret
mov
jmp
xchg
out
flds
adc
inc
push
or
lea
pop
pop
mov
cmp
xor
mov
fisttpll
mul
inc
cwtl
movsb
rcr
fcmovnbe
out
and
lea
adc
inc
subl
pushf
mov
das
nop
cmp
data16
pusha
fdivrl
jmp
add
push
loopne
inc
das
mov
cwtl
popa
add
sbb
adc
or
popf
push
pop
je
jns
push
sub
int3
push
out
add
mov
adc
addl
pushf
add
cmp
mov
sub
adc
in
mov
lds
imulb
divb
pop
dec
imul
arpl
mov
dec
inc
lea
push
jecxz
or
mov
and
cwtl
xchg
pushf
test
cld
mov
sbb
call
aaa
push
mov
push
xor
pop
loopne
push
push
push
test
jmp
adc
cmc
lahf
inc
je
mov
pusha
push
jbe
cmc
fdivrl
mov
ret
sub
and
test
sub
dec
stos
mov
loopne
xchg
es
into
mov
push
adcl
sub
and
add
jbe
mov
pop
or
add
mov
pop
bound
dec
lock
inc
clc
adc
sbb
sbb
imulb
outsb
jne
test
mov
inc
test
sub
loopnew
jp
shrb
jnp
jno
pop
nop
pop
bound
test
mov
inc
jne
push
aas
fildl
xor
adc
add
xchg
in
pop
into
dec
fsubs
add
loope
test
or
test
inc
pop
rol
push
out
add
sub
sub
or
mov
aam
xor
pop
sbb
pop
iret
or
nop
aam
add
xchg
loopne
push
ds
add
ja
je
sub
mov
stc
xor
and
push
lock
jbe
dec
daa
ja
insb
frstor
ja
je
sub
leave
orl
imul
jo
xor
jmp
push
jmp
inc
and
and
fisttpl
ds
push
jmp
add
xor
mov
lock
lods
add
inc
inc
fs
imul
test
ja
je
or
push
cmp
inc
je
js
add
arpl
add
pop
xor
sbb
ds
nop
or
mov
jmp
mov
int
lock
je
insb
jne
insb
je
popa
xchg
pop
jns
imul
or
jmp
cmp
outsl
or
popa
mov
mov
sub
clc
and
or
pop
mov
lock
sub
push
cmp
movsb
pop
pop
bound
mov
js
mov
lcall
repnz
mov
je
dec
int3
jp
push
fisubrs
icebp
scas
and
push
dec
sub
push
adc
push
jnp
clc
cmp
mov
mov
push
fdivrs
out
xor
sahf
in
pop
outsb
fists
pop
pop
pmulhuw
cwtl
pop
sbb
aas
dec
ja
inc
jp
insl
jg
pop
scas
or
mov
lock
xor
aaa
jg
cs
pop
cs
cmp
inc
and
loop
fiadds
sbb
adc
int
loopne
sbb
fadd
xchg
pop
dec
jmp
or
les
cwtl
lock
xor
and
pushf
push
sti
and
push
sbb
jae
cwtl
cmp
dec
mov
mov
pop
and
addb
sbb
mov
or
sub
push
jns
jns
sub
nop
dec
adc
sbb
fdivs
aaa
add
and
push
jl
pop
je
push
xlat
test
or
add
mov
test
enter
inc
rolb
pop
push
nop
loopne
cmp
jp
dec
fmuls
or
ds
scas
add
or
push
dec
pushf
or
sub
pop
push
mov
push
push
push
pop
sub
mov
jbe
cmp
movsb
or
mov
nop
jge
lods
adc
mov
jbe
ret
outsb
ret
push
adc
into
mov
push
jno
or
je
or
loopne
wbinvd
mov
dec
jecxz
mov
clc
or
fdivs
fistps
adcl
and
xchg
pop
leave
mov
pusha
outsl
or
popa
jne
or
pop
daa
mov
sbb
ljmp
push
and
adc
xorb
scas
add
nop
adc
je
nop
sub
fstl
inc
mov
jb
ja
xor
mov
mov
test
mov
adc
and
adc
rolb
mov
ss
sub
or
mov
add
push
jb
mov
xchg
push
nop
lock
cmp
push
dec
and
repz
inc
xor
push
ja
mov
xchg
cltd
rorb
ds
mov
jmp
insl
scas
test
jno
or
iret
rclb
dec
mov
js
arpl
int3
mov
out
dec
ljmp
adc
test
mov
mov
mov
push
and
adc
ret
add
int3
ja
fucom
mov
adc
sti
sbb
adc
adc
pop
push
dec
lock
cmp
dec
and
mov
scas
inc
hlt
adc
xlat
arpl
test
mov
mov
int3
add
or
adc
sub
or
rorb
push
jecxz
mov
loopne
pop
add
cs
nop
cmp
jl
sub
loopne
adcl
xchg
or
add
cmp
or
inc
adc
test
add
sub
and
add
add
add
loopne
dec
adc
push
addr16
in
sbb
xor
or
xchg
lret
scas
adc
insb
lret
or
ret
ja
inc
add
and
cmpsl
and
xchg
test
mov
and
sub
add
daa
pop
stos
or
lock
sub
dec
add
inc
or
test
mov
mov
bound
sub
xor
or
movsb
popf
test
outsl
add
xor
pushf
mov
and
push
mov
push
or
fcmovb
add
push
jmp
sbb
icebp
jle
push
jge
and
scas
nop
lcall
es
fidivs
loope
loopne
push
sbb
sbb
push
pop
dec
dec
dec
cmc
lods
jg
xchg
nop
fstps
jbe
jge
jg
push
jae
jmp
das
cld
int3
push
add
sar
fistps
es
add
cld
add
add
or
shrb
ljmp
pop
jbe
mov
pop
and
inc
jae
aaa
add
insb
insl
or
xor
jmp
mov
push
push
mov
sub
pop
sbb
js
add
push
nop
and
push
and
and
xor
test
cmpsb
jnp
push
jo
jl
jo
and
arpl
adc
test
in
scas
fistl
lock
push
loopne
add
push
sbb
ds
push
or
ret
not
test
sbb
add
cmpsb
pop
and
xor
push
cmp
or
out
adc
sbb
or
xor
lods
mov
cmpl
stos
js
sahf
fisttpl
mov
mov
lar
daa
repnz
ljmp
or
rol
or
mov
ret
sub
addb
mov
mov
or
push
add
xor
out
add
mov
fdivrs
imul
add
xor
and
or
xor
popa
pop
data16
arpl
dec
sub
fstpt
in
hlt
mov
or
sti
jnp
or
and
add
pusha
roll
in
add
add
add
shll
or
fs
xor
add
clc
push
stos
les
ja
sub
pusha
jo
pop
hlt
jne
inc
adc
inc
icebp
cmp
ja
cltd
xchg
pop
mov
push
fisubrs
add
mov
jbe
xchg
scas
or
push
rorb
and
fucomip
sbb
inc
sub
scas
xor
adc
inc
xchg
or
test
mov
mov
inc
sub
jne
and
cli
or
add
insb
js
adc
push
push
mov
cmp
push
cltd
or
inc
xor
daa
and
add
xor
or
add
pusha
add
mov
push
sub
out
divl
mov
or
cmp
push
es
mov
jmp
ss
sub
bound
jecxz
imul
xor
or
cmp
daa
and
push
push
sbb
push
pop
sub
inc
xor
cld
push
push
pop
daa
mov
sbb
and
pop
mov
inc
mov
pusha
jo
lea
stc
add
popf
sbb
cmp
xchg
mov
mov
sbb
push
stc
and
gs
xor
push
or
popf
icebp
bound
rcll
bound
ficoml
shlb
cld
jo
mov
cmp
add
add
add
mov
push
mov
dec
popa
xchg
push
pop
jl
pop
ret
pusha
sbb
leave
inc
sbb
lods
xor
mov
inc
mov
pusha
adc
push
rcll
shlb
cmp
pop
or
jmp
rolb
push
seta
cmp
ret
ret
rol
or
adc
and
xlat
dec
pop
adc
or
xor
insl
xchg
inc
nop
add
loop
movsb
leave
pop
push
into
mov
clc
xor
xchg
sub
add
pop
jno
adc
fwait
les
js
mov
insl
in
push
push
pmullw
push
xchg
push
jno
xor
mov
test
xor
and
repnz
push
push
dec
insb
xchg
in
loopne
pop
sbb
push
adc
sti
mov
push
out
inc
or
add
orb
cwtl
mov
fisttpll
es
sbb
inc
in
pop
and
mov
scas
orl
mov
add
jle
push
sub
sbb
out
push
push
sub
movsb
pop
ret
mov
icebp
or
jg
and
out
sub
repz
adcb
lock
clc
pop
xor
push
imul
jmp
pop
push
pop
pop
in
ss
push
lods
inc
push
add
ja
mov
add
ja
sbb
sub
shll
int3
inc
inc
roll
jne
fadds
or
nop
mov
xor
mov
adc
inc
and
or
dec
push
leave
jae
push
or
les
ret
ret
jg
pop
sub
xchg
cmp
out
cmp
mov
mov
rcrb
mov
add
jno
test
jl
pop
cli
adc
sub
les
ds
add
nop
sbb
dec
sbb
jmp
lock
divl
int
and
je
movl
ss
xor
lea
js
pushl
or
testb
ficompl
mov
sbb
pop
shl
pop
sub
lcall
mov
or
mov
mov
inc
call
push
adc
pop
push
pop
movb
xlat
xor
test
mov
inc
ficomps
sbb
add
and
mov
xor
mov
outsl
sbb
jns
mov
push
push
shl
int
sub
mov
adc
push
push
packuswb
xor
dec
loop
or
sbb
fld
popa
les
ss
push
or
and
ret
outsl
cmpsl
fsubl
add
push
mov
gs
sti
stos
sbb
fcomp
xorb
or
and
sub
pop
loopne
add
aaa
out
inc
lret
push
loopne
shlb
push
in
and
xchg
add
push
push
push
and
adc
push
push
orl
ret
pop
xor
test
jne
test
push
pop
mov
xor
xchg
and
enter
mov
add
mov
add
pusha
sbb
das
loope
xchg
adc
xor
and
inc
cmpl
xchg
lea
pop
or
jmp
pop
jne
scas
fmuls
jecxz
std
sti
push
andl
push
fdivrl
or
aad
adc
add
or
sub
push
clc
jmp
pop
xor
xor
call
push
adc
mov
mov
js
push
dec
cmc
or
inc
add
leave
mov
and
add
cmc
cmp
fisttpl
cmp
and
inc
orb
popf
test
test
push
pusha
rcrl
mov
lock
iret
push
adc
or
fcoml
push
fdivrs
mov
ret
lea
sub
adc
add
shlb
testb
and
int
mov
inc
cs
adc
daa
xor
ss
ds
add
add
jmp
mov
call
mov
dec
jmp
mulw
xor
or
shrb
xchg
roll
je
hlt
adc
stos
hlt
push
fmuls
add
add
leave
adc
add
sbb
ffreep
xor
ret
sub
push
hlt
push
sub
cwtl
negb
sbb
jp
adc
loope
cwtl
nop
shl
inc
loop
xchg
inc
or
add
ljmp
or
int
movsl
sbb
xchg
fisttpll
popa
aaa
lret
stos
jl
mov
adc
dec
dec
cmp
testb
push
mov
add
bound
dec
sub
add
adc
inc
shll
push
push
xchg
or
add
add
xor
dec
sub
rolb
xorb
push
mov
cmp
fadd
fbstp
orb
decl
push
daa
mov
inc
cmp
mov
cld
pop
rol
scas
inc
testl
xorb
jno
and
mov
push
cmp
or
add
and
movb
inc
add
add
in
push
sar
push
imul
fidivs
fidivrs
jl
pop
pusha
outsb
jne
dec
adc
and
add
dec
repnz
dec
mov
icebp
pop
dec
push
and
aam
dec
mov
push
jo
test
cmp
or
ljmp
sbb
xchg
mov
or
mov
pop
pop
mov
jp
cmp
pop
adc
cmp
call
jle
jle
loopne
mov
movsb
push
js
repz
scas
xor
shrb
jp
aam
or
rcl
mov
or
loope
addb
insb
inc
mov
cmovne
mov
push
int
mov
roll
jl
stos
jbe
push
inc
add
inc
incb
lret
jecxz
mov
fdivs
mov
inc
or
jne
or
cli
jle
jmp
sbb
je
pop
add
pop
inc
mov
cmp
orl
cli
and
into
push
sbb
push
and
sub
rcrl
xchg
push
loopne
insb
popa
adc
sub
sbb
sub
jp
jae
xchg
push
push
mov
and
and
sbb
lret
or
push
jnp
das
cld
and
add
dec
rolb
mov
andl
ficoms
pop
mov
mov
mov
or
jle
mov
ljmp
and
decl
pop
or
jg
push
imul
movsb
xchg
sub
js
jge
or
mov
xchg
inc
mov
mov
lea
mov
nop
aam
push
ret
addps
imul
inc
xchg
jle
and
pop
out
sbb
jo
and
push
adc
push
stos
and
or
xchg
nop
push
fiadds
testb
roll
cltd
jae
popf
jle
pop
idivl
xchg
pusha
adc
or
pop
pop
mov
xor
dec
or
lea
dec
or
popa
movsl
mov
lret
sub
stc
xor
mov
into
lea
test
sub
add
inc
inc
or
les
mov
sub
xchg
xlat
mov
adc
into
jne
ret
loop
or
and
xor
mov
sar
push
int
add
push
add
push
adc
adc
pop
add
stos
jl
loopne
push
loopne
cmp
jg
xlat
sahf
add
sbb
sbb
adc
clc
mov
pop
adc
enter
mov
and
loop
dec
sub
pushf
xor
mov
test
mov
test
add
pop
pop
mov
dec
ljmp
and
cld
push
adcl
and
mov
loopne
loopne
mov
lods
rclb
adc
pop
push
lea
and
movsl
xor
and
xchg
adc
dec
nop
jbe
pop
mov
cmp
in
sarb
sahf
out
and
arpl
pop
stos
mov
in
or
add
push
int3
jl
jmp
sarl
sti
jno
or
push
and
mov
xchg
ss
mov
or
repnz
aad
add
add
call
inc
out
pop
dec
xorl
xor
or
xchg
sti
inc
fs
mov
add
pause
hlt
add
fisubl
jge
sar
xor
inc
lea
cld
or
push
mulb
sbb
mov
jl
out
xor
inc
or
mov
xchg
pop
dec
jae
and
fs
es
fiadds
dec
dec
cld
icebp
orb
inc
sbb
pop
mov
xor
add
mov
lea
loope
jo
inc
and
and
cmpsb
adc
icebp
jl
push
push
xchg
insb
pop
push
loopne
mov
jmp
jno
push
push
jmp
inc
lock
fmuls
push
inc
inc
push
cmpsb
push
in
inc
xor
sbb
sub
lret
clc
sub
pand
imul
mov
imul
jo
gs
and
clc
lods
iret
adc
sahf
notl
decl
xchg
sar
dec
xor
and
addr16
inc
adc
add
jo
sub
jp
or
add
sbb
dec
sbbl
das
rcrl
ljmp
add
stos
or
cmp
int3
mov
cmc
add
enter
les
jp
adc
ror
and
outsb
xor
sub
or
rolb
movsl
into
in
mov
shlb
dec
das
in
imul
pop
lock
aad
jp
push
insb
jl
jl
xchg
xchg
and
andl
sbb
add
pop
pop
inc
inc
sbb
sbb
or
mov
lret
or
filds
cmpl
addb
inc
add
add
or
jmp
mov
adc
pop
add
push
leave
or
and
shlb
lds
or
xchg
loopne
out
mov
cmp
adc
dec
lods
movsb
push
sub
xchg
lods
enter
adc
pop
adc
pop
inc
loopne
inc
and
mov
pop
in
xor
stos
push
fs
jl
jo
dec
adc
xchg
fsts
push
lret
add
xchg
or
adc
pop
andl
add
stc
or
sbb
xlat
je
add
ret
xor
sbb
movsb
movsl
repnz
mov
sbbl
push
add
or
daa
adc
and
daa
mov
fcoml
and
aam
test
push
xor
ret
adc
xlat
lods
gs
pop
pushf
xlat
or
xlat
mov
jecxz
push
sbb
jno
fistl
mov
or
or
in
mov
adc
mov
dec
je
andl
mov
iret
push
dec
adc
dec
lock
sub
popa
or
push
stos
aaa
jo
jne
cmpsb
rorl
pop
dec
jb
movsb
pusha
push
sub
pop
dec
add
dec
gs
test
jne
adc
add
mov
and
mov
add
dec
cmpsb
add
push
imul
or
gs
cltd
dec
or
mov
sbb
mov
cwtl
sub
std
in
bound
mov
sub
inc
std
mov
fdivrs
nop
jp
xchg
in
lret
into
insb
and
add
movsb
mov
xor
sub
or
jo
call
jno
imul
imul
pop
mov
insl
jmp
in
jne
mov
inc
pop
xchg
subl
or
jmp
xadd
shr
clts
jmp
sbb
mov
add
add
stos
mov
or
xor
xchg
imul
mov
fisttpll
push
jne
cmp
leave
adc
loope
mov
fstps
leave
mov
jbe
or
je
dec
push
bound
jp
push
cmp
je
xchg
cs
xor
mov
mov
dec
js
jmp
pop
pop
add
mov
scas
sbbl
bound
fs
and
jne
sbb
pusha
in
add
int
imul
cmp
xor
mov
mov
add
mov
dec
add
adc
sub
xchg
cli
adc
js
mov
mov
add
lods
push
fs
pop
dec
mov
add
or
loopne
xor
pop
sbb
sub
adc
addl
cmpsb
rcrl
xor
jne
sub
aad
int3
mov
pop
lock
adc
add
dec
cld
outsl
leave
mov
push
testb
je
pop
jo
lock
adc
sbb
or
dec
sub
inc
add
dec
mov
sub
push
dec
mov
dec
mov
add
push
sub
test
push
sub
jns
cld
push
inc
scas
adcl
test
bound
ds
test
dec
clc
push
adc
outsl
dec
mov
xorb
add
xchg
xchg
cmp
outsb
fxch
or
insb
lret
bound
mov
jge
adc
adc
xchg
mov
push
shlb
int3
or
mov
and
daa
jmp
es
fcmovne
lcall
push
lret
push
clc
sub
or
mov
xor
push
xchg
adc
pop
xor
fmuls
dec
loope
mov
adc
adc
mov
or
into
xchg
mov
jns
or
xchg
and
in
or
sbb
fcmovnb
shlb
mov
pop
je
add
fsts
outsb
xchg
fstp
pushf
or
inc
sub
in
sti
fldl
sbb
cmc
sbb
loope
mov
push
xchg
jl
lock
push
push
mov
adc
and
pop
sbb
add
xchg
lret
xor
mov
hlt
shlb
adc
add
add
mov
mov
mov
orb
insb
mov
ds
jo
call
add
adc
test
mov
or
xchg
jno
gs
out
shlb
pusha
mov
cmp
mov
or
sbb
shlb
dec
sbb
or
sub
adc
fiadds
test
push
pop
imul
cld
cmp
mov
pop
dec
jb
ret
mov
aad
fidivrl
add
test
je
pushf
jo
test
push
pop
aaa
das
loope
cmp
int3
andl
insb
push
pop
pusha
popa
enter
add
push
adc
arpl
out
es
and
or
pusha
mulb
je
test
test
call
icebp
or
sub
pop
add
cli
mov
adc
push
add
jo
mov
insb
pushl
xchg
cmp
int
xor
lds
ss
fwait
cmp
dec
icebp
dec
test
outsl
test
jae
push
xor
lock
lcall
out
mov
sub
add
je
and
mov
fnstenv
lret
fs
mov
outsl
imul
inc
cmpsl
aam
or
lret
lret
les
lock
add
iret
cli
jmp
and
or
rolb
or
xor
sbb
xor
push
adc
inc
sbb
rorl
sub
shll
and
loope
int3
mov
or
push
push
shrb
and
aaa
iret
jnp
call
das
sbb
dec
adc
sarb
push
sahf
rclb
sbb
jmp
inc
push
xor
out
in
sub
sub
push
inc
sub
add
pop
outsb
ret
sub
add
addb
adc
in
push
add
aas
pause
or
adc
imull
and
pop
jne
rolb
adc
add
add
addb
test
fs
daa
or
imul
or
sbb
pop
and
test
dec
fs
dec
cmpsl
bound
js
xchg
push
stos
sub
fldl
movsl
add
fmull
xchg
and
push
cmpsl
stos
or
inc
mov
pop
andb
lock
adc
mov
fsubs
cld
mov
inc
aad
lock
mov
add
clc
ret
xor
and
hlt
mov
fld
ret
dec
push
pop
loopne
adc
in
pop
jp
xor
jp
loopne
jmp
jae
das
rcrl
repnz
scas
popf
cmpl
addr16
adc
adc
ljmp
cwtl
dec
in
adc
adc
mov
add
std
cmp
in
movsl
movsb
xor
push
adc
xchg
daa
sub
ds
jae
stos
xor
pop
lods
rcll
popl
or
fildll
dec
add
or
clc
daa
das
std
rcll
inc
or
ds
icebp
sbb
loop
cmpsb
push
push
dec
or
dec
enter
andl
jo
sub
pushl
cmpsb
pusha
and
sub
sub
add
inc
or
rcrl
dec
xor
add
adc
rcr
inc
push
push
push
imul
push
fs
add
addr16
xor
push
jo
insb
cli
loopne
iret
xor
or
adc
sbb
shrl
pop
jecxz
imul
inc
cs
push
dec
cmp
and
add
jmp
dec
mov
lret
in
inc
dec
inc
inc
add
arpl
leave
pop
mov
mov
xor
jns
adc
daa
icebp
pusha
adc
pop
cltd
shrb
xor
add
push
aas
cmp
add
sub
cmovge
test
adc
or
xorb
or
mov
jge
pop
push
js
in
cmp
clc
add
inc
clc
mov
jmp
cwtl
adc
jmp
nop
push
sahf
cmc
or
aam
not
adc
push
xchg
cmp
mov
push
fs
mov
pop
ret
rol
push
sbb
lcall
add
cmp
imul
cs
add
add
mov
out
xchg
sbb
pop
outsl
adc
cmpl
sbb
ds
mov
mov
mov
xlat
dec
mov
adc
popa
movsb
sbb
pusha
and
mov
sub
add
pop
les
pop
lcall
idivb
inc
aas
cs
or
popa
add
sub
mov
fmull
inc
and
mov
cli
lock
adc
mov
std
xor
cli
pop
push
push
and
push
enter
xchg
test
dec
push
lds
popf
inc
dec
push
inc
push
cmp
cmovns
add
xor
push
add
xor
mov
push
push
daa
out
cld
sub
lock
pop
pop
test
mov
lea
or
in
test
outsb
shl
mov
hlt
test
jo
add
jbe
jp
jno
es
andl
jg
jmp
xor
jb
mov
daa
pop
out
lea
dec
lea
hlt
and
or
lcall
push
xchg
pop
cld
or
cmpsb
add
mov
lods
aad
mov
sub
adc
mov
das
adc
sub
adc
jns
call
add
int3
add
das
imul
popa
lock
test
add
inc
dec
movlps
sbb
or
cmc
jne
jbe
and
adcl
hlt
into
add
and
jb
mov
and
outsb
cmp
dec
xor
sub
inc
movb
stos
cmp
inc
test
mov
daa
faddl
insl
loop
lock
scas
adc
ret
in
and
mov
inc
mov
inc
adc
test
cmpb
dec
or
mov
mov
mov
adc
ret
dec
es
xor
lret
hlt
loopne
pop
jo
inc
push
push
dec
jo
dec
dec
or
lods
aas
jae
ds
or
cmpl
xor
sbb
fs
mov
inc
nop
mov
sbb
mov
mov
inc
push
call
jecxz
test
inc
movsl
adc
dec
push
mov
xchg
jne
sbb
mov
int
fisttpl
sbb
pop
rcrb
and
rolb
inc
lret
fmuls
sbb
sub
dec
lods
jnp
push
popa
loope
sar
mov
cmpsb
lods
pop
mov
cmp
movsl
movsl
add
xchg
int
shlb
mov
fdivrl
and
rclb
aaa
cmp
add
push
testl
hlt
test
jl
mov
xor
ss
in
sar
lea
push
rclb
add
pop
push
add
rcl
mov
and
movsl
aam
loopne
loopne
jo
test
idivl
push
dec
and
cli
adc
test
js
lock
stc
push
leave
pop
inc
imul
sbb
inc
shlb
push
enter
dec
jae
jp
mov
sub
stos
movq
add
aaa
add
shl
int3
inc
enter
jl
and
xor
sbb
xchg
clc
xorl
pop
xor
es
and
mov
and
ds
jbe
cld
jo
pop
mov
add
lea
in
sub
cs
jae
adc
push
ss
jb
xor
fwait
cmp
test
pop
push
mov
jbe
mov
and
mov
sub
adc
xor
data16
ljmp
repnz
out
sub
sbb
push
insl
popa
mov
bound
xor
mov
xor
add
add
lret
pop
fcoml
je
mov
clc
rclb
mov
gs
mov
out
xorb
mov
pop
jl
adc
sub
jno
push
jne
je
notb
arpl
pop
jge
push
stos
ds
cld
addr16
inc
jne
in
jne
pop
pop
pop
das
adc
outsb
add
sahf
and
push
mov
out
xchg
or
clc
mov
mov
cltd
loop
jle
je
insb
push
inc
jae
pop
xor
shlb
insb
mov
sub
test
mov
jmp
push
js
dec
xor
test
out
pushf
xchg
push
add
cld
adc
mov
sub
jo
pop
push
lahf
out
push
mov
jnp
ss
lret
repnz
sub
in
inc
lods
xchg
dec
dec
dec
xor
dec
movsl
and
cs
pusha
push
adc
mov
mov
cmp
sub
fadds
jmp
pusha
sub
pop
lds
push
nop
or
mov
lods
sub
scas
push
fwait
rolb
lods
dec
xor
and
dec
js
add
divb
test
pop
jne
icebp
call
movsl
push
out
or
cmp
xor
enter
inc
loopne
mov
cs
and
mov
push
add
and
cli
xchg
ljmp
sub
sub
sub
pop
shr
addl
mulb
ljmp
popa
jecxz
xor
pop
pop
adc
sbb
and
pop
xchg
add
sarb
add
or
dec
jmp
and
dec
dec
ss
ja
adc
adc
sub
ret
xchg
scas
or
sbb
mov
call
or
sub
adc
call
push
imul
pop
je
or
push
xchg
pusha
push
cmpsb
and
pop
add
mov
sbb
pop
in
add
or
jecxz
enter
add
cmp
add
inc
inc
cmp
inc
mov
in
test
loop
loopne
xlat
fdivl
inc
add
mov
hlt
in
inc
fstps
push
inc
sub
push
les
call
lcall
scas
jp
sub
or
inc
rorl
inc
test
push
filds
pusha
sahf
cli
mov
cmp
or
cmc
test
push
dec
dec
add
push
outsb
cmpsb
std
adc
xchg
add
mov
testb
push
xchg
pop
lock
test
lock
add
into
push
sub
sbb
add
mov
int
push
mov
mov
fistps
cmp
arpl
out
inc
inc
leave
jge
xor
and
cwtl
movsl
add
je
xchg
jno
sbb
and
jo
mov
add
in
nop
push
push
jne
dec
cmp
rcrb
jmp
minps
push
push
mov
fldcw
inc
sbb
ja
ficoms
push
adc
aam
push
inc
sbb
into
sbb
mov
inc
fs
pop
loopne
add
add
push
cmpsb
mov
add
loop
xor
adc
mov
adcl
mov
add
dec
xchg
icebp
sub
scas
gs
fisttpll
clc
mov
dec
mov
movsl
and
or
movzbl
dec
call
lds
and
adc
adc
xchg
out
shlb
in
mov
lahf
adc
jecxz
sbb
mov
movb
lahf
fsubr
dec
ljmp
adc
jns
nop
dec
push
das
jo
out
mov
inc
or
push
out
cmp
je
pop
adc
into
test
xchg
aam
int3
add
pop
clc
in
cmp
call
sbb
xor
faddl
xorb
mov
jnp
std
inc
je
mov
fisubs
add
push
test
sbb
in
les
cmc
popf
stos
ss
inc
and
push
push
pop
sbb
inc
or
jbe
pushf
mov
mov
push
dec
orb
adc
es
jbe
jmp
stos
and
pop
divb
loope
mov
idivl
inc
outsb
dec
add
or
ljmp
adcb
jo
iret
xor
int
push
aad
in
push
mov
ljmp
xchg
loope
and
lea
xchg
nop
imul
fisubrl
js
pop
dec
xchg
mov
lds
mov
fs
aas
sahf
mov
and
shll
addb
loop
fcomp
mov
push
cmp
gs
xchg
ret
pop
sub
in
or
sbb
and
pop
push
insb
and
push
mov
mov
pushf
test
pushf
mov
ret
lods
cmp
or
push
les
and
xor
inc
gs
movsb
xor
stos
mov
mov
pop
cmp
fsubrs
sub
cmc
inc
xor
test
jg
push
aad
sub
sahf
mov
push
les
dec
into
mov
mov
mov
jmp
inc
in
inc
js
daa
push
pop
jmp
mov
sub
adc
test
inc
mov
xchg
pop
ror
jmp
not
add
fistps
arpl
inc
xchg
or
jns
inc
test
and
jno
sbb
cmpsl
dec
pusha
sbb
incl
inc
and
add
jl
mov
clc
cmp
jl
cmp
jg
push
or
cld
push
jne
inc
inc
cmp
jge
dec
cld
addl
addb
cmp
add
xchg
mov
inc
push
inc
sbbb
call
prefetch
or
mov
in
nop
mov
inc
inc
cmp
add
inc
inc
jl
pop
push
jnp
inc
jmp
jmp
fistpll
pop
push
stc
clc
jmp
add
cmova
mov
or
or
cmp
cmp
test
test
and
pop
imul
or
inc
clc
inc
daa
xor
mov
rorb
fldz
inc
lahf
fsub
cmp
jne
and
inc
adc
loope
xor
mov
rol
enter
jo
push
adc
inc
fsubrs
popa
xchg
push
adc
loopne
mov
and
and
cli
mov
movl
mov
or
js
out
and
and
enter
jno
outsb
out
and
adc
add
add
js
sub
push
xchg
imul
sbb
mov
mov
push
push
call
movl
lock
hlt
movsb
jnp
and
movsl
or
js
or
mov
jo
fcomp
ja
lods
add
xor
mov
inc
push
mov
jne
hlt
dec
adc
add
sbb
xchg
lods
adc
fists
dec
bound
or
call
mov
iret
add
lock
ret
sub
push
pop
dec
mov
xchg
add
mov
sbb
fbstp
outsl
or
das
add
cmp
jae
xchg
add
xor
jb
dec
in
pusha
dec
add
sub
push
push
push
sub
movsb
push
inc
pop
push
mov
mov
cmp
movd
jbe
insb
pop
adc
jae
ret
sbb
cmp
mov
mov
or
andb
inc
mov
mulb
rclb
clc
mov
jp
sar
inc
js
xchg
das
pop
add
addl
cmp
push
lods
adc
stos
push
popa
outsl
jno
neg
jno
inc
sbb
add
aad
adc
stc
ljmp
jmp
and
pop
test
or
ja
add
js
add
add
inc
popa
adc
dec
mov
jo
sub
or
push
and
lds
je
lret
and
or
fsubs
enter
jo
dec
dec
je
out
iret
inc
rorl
add
lahf
or
pusha
sbb
xor
inc
fdivrs
add
jo,pt
loopne
rolb
adc
or
push
pop
push
mov
xlat
sahf
inc
push
sbb
sbb
enter
pop
popl
push
add
sub
add
movaps
add
jno
dec
sub
repz
or
sub
scas
cmpsb
mov
je
mulb
push
jnp
jnp
ljmp
or
push
pop
inc
xlat
pop
cmp
or
jo
and
push
mov
inc
mov
pop
loope
testb
cmp
inc
push
inc
fimull
inc
andl
and
fcmovnbe
adc
loopne
or
test
xchg
pop
shlb
add
adc
or
cltd
loopne
shlb
data16
pushf
mov
xor
and
mov
sbb
int
and
and
jl
into
and
pop
sbb
push
in
jge
jnp
adc
xchg
cs
clc
xchg
sub
inc
and
ror
lahf
hlt
sbb
jbe
and
test
je
insl
dec
push
nop
lret
pop
sbb
mov
xchg
je
or
pusha
es
push
push
add
mov
fwait
ret
ja
clc
sub
push
test
fnsave
pop
jne
push
inc
into
div
andl
push
adc
sbb
les
pushf
mov
push
lods
test
pop
les
sub
jb
ret
js
sbb
mov
mov
les
and
out
pusha
imul
inc
adc
jecxz
orl
push
and
fs
push
stos
pop
dec
push
mov
inc
rcr
sahf
outsb
sbb
dec
and
xor
or
dec
mov
aam
cmpsl
push
inc
mov
and
and
or
aam
mov
pop
dec
and
jge
inc
icebp
icebp
cmp
inc
cmp
dec
cmp
jle
loop
mov
adcl
push
stos
adc
push
jno
mov
arpl
push
lds
add
es
xor
fxch
push
cmp
arpl
jl
and
icebp
imul
nop
lea
dec
mov
and
add
icebp
inc
xlat
jecxz
inc
clc
or
xchg
mov
js
jo
adc
dec
dec
in
mov
mov
add
xor
cwtl
imul
xor
je
push
sti
cwtl
mov
jne
dec
cmp
arpl
cmp
inc
or
out
cmp
cmp
loopne
les
xor
loopne
and
outsl
pop
popf
ds
js
or
pop
icebp
adc
fsubl
sbb
popa
or
subb
add
push
jle
movsl
jnp
adc
xchg
jb
adc
xlat
loop
jl
xorl
sbb
dec
icebp
and
loopne
rolb
and
into
mov
int3
push
mov
xor
xor
xchg
mov
pop
loopne
or
add
pop
ret
mov
sahf
in
adc
inc
jo
dec
lods
adc
add
jl
or
and
mov
das
clc
sub
dec
mov
and
int3
pop
inc
adc
dec
fcoml
in
movsb
mov
sub
and
xor
arpl
ficompl
rolb
sub
fnstenv
in
push
inc
cld
jl
roll
orl
mov
xor
xchg
movsb
mov
cli
sbb
add
or
or
out
pop
sbb
mov
in
cmp
neg
sub
cmp
push
push
lea
adc
push
call
dec
push
add
push
cmp
fbstp
dec
push
movsb
and
ljmp
xchg
je
sbb
inc
rcll
xor
xor
xchg
cmp
mov
xor
dec
ja
adc
push
lock
jae
push
pusha
xchg
lock
adc
sbb
jmp
outsb
push
cli
push
mov
lea
lea
mov
dec
sbb
sar
adc
cmp
or
es
pop
xlat
sub
sbb
and
cmp
aaa
xchg
inc
xor
xchg
lret
push
add
mov
inc
mov
inc
inc
cmp
jl
mov
mov
push
xchg
leave
push
rorl
adc
mov
push
mov
pushl
cmpsl
out
dec
sbb
mov
cmp
jno
mov
mov
xor
cld
sub
in
test
add
lret
sub
hlt
and
test
cmp
subps
fistl
imul
mov
add
adc
sub
and
aam
dec
or
enter
orb
push
lock
ljmp
mov
imul
sbb
fdivl
adc
int3
mov
and
repz
cmpsl
imul
mov
nop
inc
and
jb
minps
sbb
rorl
mov
mov
stos
add
sarb
fwait
loopne
imul
xor
int3
aam
leave
jae
dec
loopne
adc
push
dec
adc
mov
jmp
sub
mov
outsb
ss
out
inc
sti
add
enter
shrb
pop
fcoml
hlt
or
adc
rcrb
sbb
cmpsl
and
ss
pusha
or
sbb
adc
mov
or
xor
mov
daa
pop
sbb
popa
repnz
aam
les
mov
inc
shlb
mov
movb
add
xchg
cmc
pop
push
clc
mov
xchg
or
rcr
adc
pop
test
sub
je
mov
adc
sub
lea
adc
inc
cmp
inc
adc
pop
push
push
push
test
imul
sub
loop
add
and
orl
lods
ds
or
lret
subb
jp
movsb
ficomps
add
fbld
push
scas
lds
push
test
stos
in
dec
lock
inc
dec
mov
sub
cmc
leave
cmp
mov
jne
mov
icebp
pop
xchg
and
sti
adc
in
or
push
add
int
imul
mov
in
and
enter
sbb
test
push
xchg
adc
scas
paddusw
clc
mov
lea
sbb
add
pop
mov
push
jno
in
cltd
mov
inc
mov
xor
mov
sbb
arpl
inc
insb
xor
or
mov
cmpsb
and
mov
dec
clc
sbb
xchg
dec
jle
lock
mov
or
add
ret
mov
pop
and
add
int3
add
mov
aaa
inc
sub
jns
lods
orl
or
cmpsb
sbb
fimuls
mov
adc
mov
push
pop
mov
ret
mov
mov
sbb
in
push
push
mov
mov
pop
push
loopne
adc
cmp
shr
stos
mov
push
or
insl
or
mov
mov
cmpsl
push
loope
ja
pop
rorb
sub
mov
fs
add
loopne
pop
mov
sub
sub
and
mov
orb
dec
and
lock
mov
clc
inc
sub
add
fnstsw
pop
jle
sbb
movsl
lds
xlat
lea
pusha
pop
scas
mov
inc
sbb
adc
orl
addr16
inc
testl
sbb
mov
mov
or
bound
subl
clc
or
mov
pop
movsb
xchg
push
and
and
mull
or
cltd
mov
cmc
cmpsb
push
loope
addl
mov
dec
push
mov
xor
test
jl
dec
shl
js
jl
cmpb
push
cmp
or
jns
or
outsl
xor
or
fcmovu
movsb
pushf
push
jne
and
mov
or
arpl
sbb
mov
in
into
clc
cltd
add
jg
js
xor
test
data16
rol
lret
je
cmp
push
mov
scas
jno
cmp
jno
iret
mov
add
mov
or
pop
insb
je
ja
js
or
jae
shrl
sub
mov
leave
push
insb
xor
xchg
lock
mov
ss
xlat
ja
orl
pop
ds
imul
das
popf
mov
adc
jg
and
adc
jne
daa
test
inc
and
call
shll
xlat
push
ret
mov
or
call
jne
andl
mov
mov
adc
jo
jle
mov
jne
ljmp
pop
scas
rcr
sbb
hlt
dec
mov
je
test
je
pop
lret
dec
les
sub
adc
es
inc
mov
add
cmpsl
out
dec
call
push
push
movb
imul
xchg
loopne
sub
arpl
lock
sarl
sbb
adcl
es
js
pop
aam
in
mov
imul
xlat
push
icebp
inc
mov
adc
xlat
fcoms
dec
js
push
pop
xor
push
push
push
cltd
pop
adc
adc
jne
popf
movsl
mov
test
fadds
mov
lds
dec
cld
adc
push
insl
push
rcrb
lcall
add
inc
cmp
sbb
mulb
pop
add
in
jge
push
adc
cmp
xchg
or
add
adc
ret
pop
push
push
or
push
movb
and
aam
pop
sub
pop
jbe
outsl
push
push
adc
movsb
cmp
les
cmp
xor
outsl
dec
jne
mov
and
jg
sbb
mov
xchg
and
pop
dec
loop
cli
add
sbb
add
addb
sbb
adc
jae
add
lcall
pop
push
adcb
sbb
dec
and
push
jg
mov
dec
into
lret
test
scas
cmp
adc
mov
je
movsl
inc
and
push
mov
ret
sbb
mov
pop
das
add
test
and
mov
orb
and
xchg
ss
and
test
dec
cmc
xchg
and
adcl
pop
adc
or
loope
add
mov
fistl
pop
clc
mov
dec
sti
test
or
sahf
add
sbb
andb
sbb
and
push
add
sbb
xlat
lds
jo
call
orb
loopne
sarl
addl
repz
fstps
out
xor
xor
adc
mov
mov
rcr
test
shrb
out
test
mov
ret
aam
call
mov
repnz
add
in
xorl
js
hlt
inc
cmpl
mov
cmc
cmp
and
push
testb
and
movsl
dec
mov
inc
inc
invd
dec
xchg
mov
scas
adc
pusha
sbb
inc
inc
loopne
mov
int
mov
or
add
cmpsb
ljmp
ljmp
cld
ds
aas
fsubrl
pushl
lret
adc
adc
xor
mov
ret
scas
mov
jmp
push
pop
add
sbb
fsts
cli
and
dec
lods
loop
push
cli
rol
sbb
test
loopne
mov
push
pop
popf
out
stc
inc
loopne
shr
pop
adc
jg
leave
ret
inc
or
rolb
rcrb
int3
sub
dec
adc
cmovbe
cmp
addl
sub
popf
dec
sub
adc
inc
sbb
pop
xor
outsl
dec
ficoms
jle
sbb
mov
mov
or
lea
mov
add
xchg
aad
lds
add
gs
es
in
mov
ret
lret
adc
push
test
or
and
jo
sub
xor
lcall
push
repnz
popa
mov
xorl
dec
insb
lods
push
mov
add
lret
test
jmp
xchg
push
je
out
cmpsb
icebp
and
pop
mov
and
push
jle
push
pop
sti
getsec
lods
mov
jmp
push
sub
mov
daa
pop
ret
out
jbe
xchg
push
inc
cmp
mov
cmpb
imul
mov
pop
sbb
test
xor
dec
data16
sbb
add
call
cwtl
ret
push
and
adc
cld
push
xor
add
xor
popa
pop
cmp
stc
mov
push
insl
or
sub
mov
cmpsl
addr16
adc
cmp
or
push
inc
fdivrs
repz
cmp
cmpsl
xchg
push
mov
or
push
mov
push
mov
xchg
cmpl
adc
es
cmp
test
push
rcll
mov
pusha
adc
add
pop
ret
inc
and
loopne
dec
jns
adc
sbb
subl
jbe
jne
xor
pop
mov
cmp
xchg
and
jne
and
into
sub
xsaveopt
mov
push
and
scas
and
inc
je
test
sbb
je
add
js
mov
add
cmp
adc
xor
cmp
mov
add
mov
add
jg
sbb
fidivl
xchg
jns
mov
or
cwtl
adc
cmp
lea
fiadds
jae
mov
mov
pop
roll
xchg
mov
add
add
cmc
cmpsb
dec
add
add
mov
lcall
push
xorl
mov
clc
xchg
mov
test
dec
mov
lea
cmp
jb
sub
ret
lods
jns
cmp
adc
jmp
cvtdq2ps
loopne
add
add
jns
rolb
and
ds
pop
test
push
cmp
rclb
dec
sbb
cmp
cld
jecxz
sbb
ljmp
jge
dec
sub
stos
negb
dec
inc
jb
jge
pop
push
cltd
jo
push
jmp
sub
incl
inc
push
les
pop
add
out
mov
fsubs
loopne
scas
and
je
push
pop
incl
push
add
pushw
mov
fwait
inc
mov
inc
cmp
push
mov
or
add
jo
mov
call
jg
and
dec
and
dec
and
dec
add
dec
jb
test
dec
mov
lret
or
push
in
lea
shlb
or
mov
test
xor
inc
adc
daa
push
pop
adc
inc
sbb
add
das
js
pop
xor
add
pop
or
mov
sbb
dec
pop
adc
sbb
fdivs
jno
fxch
dec
dec
orb
mov
push
sbb
inc
aaa
out
in
rolb
jo
xchg
inc
add
inc
ds
inc
mov
add
mov
dec
dec
fstl
je
test
fs
xor
jl
xor
ret
sub
lock
prefetch
imul
add
loop
pop
mov
addr16
pop
push
jmp
sub
xor
shrl
clc
jno
sbb
sbb
js
jmp
push
xchg
adc
fwait
mov
or
movsb
popa
inc
adc
mov
jae
jns
adc
sub
stos
or
or
or
xchg
jle
scas
pop
ret
iret
push
imull
cs
dec
and
cmp
test
xor
mov
in
sub
xchg
mov
push
orl
jno
or
int3
push
mov
shll
or
xchg
fs
lahf
dec
or
xor
rol
cmp
movsb
daa
test
out
fs
fldcw
push
mov
inc
push
subl
sbb
mov
sub
adc
int3
cs
das
adc
or
jmp
xorl
mov
dec
mov
sbb
sbb
rolb
mov
movsb
dec
out
cmp
cmp
xor
sub
mov
in
mov
insl
adc
scas
jae
mov
inc
daa
push
sbb
rcrl
push
adc
add
sbb
mov
mov
add
mov
addb
imul
mov
fnstenv
push
lds
pushf
lea
mov
mov
or
xchg
fst
adc
xor
adc
xchg
test
xchg
or
add
nop
pusha
add
enter
or
ret
mov
dec
nop
xchg
cmp
inc
dec
mov
loopne
mov
xchg
mov
dec
mov
xchg
es
inc
icebp
inc
xchg
dec
inc
sub
add
inc
rolb
movsb
inc
jp
repnz
or
test
mov
pushf
imul
inc
lock
mov
in
test
push
or
enter
shrb
adc
cs
adc
adc
xchg
movsl
mov
add
call
adc
sbb
or
xchg
mov
xchg
add
lock
frndint
popf
sub
adc
pop
jns
and
xchg
sub
push
sub
dec
sub
outsl
nop
rolb
clc
rcll
sbb
repnz
jns
mov
or
clc
cmp
fcoms
xor
and
and
outsb
loop
xchg
cmp
add
pop
ret
ss
mov
cwtl
mov
and
in
cmp
or
adc
push
je
sbb
adc
mov
mov
adc
dec
pop
repnz
test
pop
out
adc
jg
roll
sub
jecxz
les
fisubs
add
sub
adc
add
shrl
fs
nop
jbe
outsb
inc
cld
pop
jo
in
xor
lock
adc
xchg
ret
mov
inc
outsl
pop
mov
lea
xchg
lret
repz
les
jns
cmovne
cmpsl
push
pop
adc
push
pop
or
cmp
leave
add
jb
dec
adc
mov
mov
pop
or
adcb
and
add
xlat
lock
cmp
sbb
emms
push
nop
das
adc
push
and
mov
bound
sbb
mov
bound
pop
les
mov
mov
arpl
jne
sarl
mov
movl
or
add
dec
ret
mov
dec
push
in
stos
add
xor
daa
jmp
mov
clc
push
add
push
fiadds
imul
jge
mov
push
pop
cs
mov
jnp
adc
movl
xchg
pop
jl
movzwl
add
adc
adc
jo
mov
dec
stos
sub
jbe
int3
add
sbb
jno
sarb
or
xorb
sbb
stc
sar
orb
and
xchg
push
mov
inc
mov
or
mov
in
and
adc
addb
fsubrs
dec
pop
roll
pop
mov
movb
ds
adc
adc
inc
shlb
enter
adc
inc
inc
cs
fnstsw
fnstenv
clc
push
jge
lds
xor
pop
xor
fisttpl
enter
inc
add
inc
dec
push
faddl
jns
and
dec
cmp
movsl
mov
enter
das
mov
ret
inc
mov
jns
inc
inc
pop
pop
iret
stc
inc
sahf
lods
dec
and
insb
mov
jge
and
jg
insb
push
inc
fs
or
or
scas
shrl
out
xlat
test
lcall
arpl
and
fldt
loop
testb
dec
daa
sub
mov
lret
pushl
lahf
ds
or
cmpsb
pushf
lea
ret
les
lock
shlb
cmpsb
loope
rcl
adc
push
mov
inc
add
adc
nop
jo
fisttpl
dec
outsb
ret
adc
out
out
out
imul
xlat
inc
or
add
xchg
or
pop
lock
xor
jmp
sbb
clc
js
sbb
leave
clc
pop
mov
mov
and
popa
mov
inc
or
mov
mov
subb
cmpsb
lea
and
jno
push
mulb
das
insb
fdivs
mov
or
pop
xchg
mov
push
push
push
enter
or
movsb
jl
outsl
add
add
mov
les
fldl
sub
cmp
lea
push
inc
lea
push
jge
and
stc
je
popf
fcoms
and
mov
pop
adc
add
rorl
in
jnp
push
add
arpl
dec
stos
pop
mov
pop
js
sbb
or
push
add
inc
sbb
imul
add
lea
arpl
push
push
orl
idivl
movsl
js
into
inc
push
outsb
or
gs
sub
pop
lea
sbb
xchg
in
push
push
test
add
push
imul
roll
or
push
adc
imul
pop
js
and
sbb
inc
cmp
xor
jmp
inc
inc
loope
call
mov
mov
sti
mov
in
pop
mov
test
jle
mov
sub
ret
movb
xchg
add
adc
add
jmp
adc
dec
sbb
sar
icebp
fildl
add
push
push
jg
push
test
pop
xor
push
sbb
xchg
add
pop
shll
cmp
outsl
add
mov
shll
outsb
lcall
ror
fidivrl
es
cmpsb
mov
shll
push
pop
add
and
shll
push
in
dec
dec
and
add
sbb
test
inc
or
dec
or
push
les
aaa
cmc
pop
scas
daa
leave
loop
pop
orb
mov
dec
inc
sub
xor
iret
jnp
aam
scas
adc
es
sub
popf
shl
inc
push
xor
jns
loope
mov
add
or
loop
les
xor
inc
in
add
int3
push
mov
movsl
mov
aam
mov
inc
dec
mov
cs
and
imul
pop
lea
push
gs
into
test
and
movsb
pop
shll
inc
clc
sub
mov
pushf
sub
or
inc
pop
cmp
adc
mov
adc
dec
std
mov
cli
mov
ret
imul
add
mov
xchg
push
pop
repnz
pop
mov
push
lcall
out
inc
add
outsb
loopne
and
dec
and
xchg
xchg
mov
cld
mov
mov
push
jbe
jecxz
mov
xchg
xchg
sbb
adc
xchg
jns
das
jno
xchg
and
inc
mov
adc
add
dec
mov
out
rcrb
xchg
adc
pop
xor
sbb
outsb
and
loope
dec
inc
sub
jbe
les
cmp
push
outsl
orl
jmp
push
insl
xor
mov
inc
sub
jns
ret
clc
lcall
sbb
and
aam
outsb
sub
je
xchg
imulb
cmp
or
push
and
aas
sub
sub
and
mov
push
loop
sbb
sbb
add
adc
inc
data16
inc
dec
leave
add
jns
lods
mov
push
sahf
xor
or
sbb
sbb
cmp
or
pusha
mov
popf
mov
popf
sub
add
sub
das
or
sub
in
sbb
push
lods
mov
and
push
dec
sbb
jb
xor
dec
sbb
pop
sbb
cli
add
cmpl
add
fadd
scas
std
fisttps
call
jmp
lret
xor
xor
fldenv
ss
movsb
popf
sbb
rep
sahf
scas
mov
movsb
mov
xchg
testl
mov
pushf
ret
clc
ret
mov
mov
rcll
push
inc
sbb
or
and
ss
je
xchg
pop
mov
or
outsb
mov
jmp
das
in
movsl
lahf
or
dec
adc
mov
mov
pop
test
and
movsl
scas
push
and
dec
shll
les
scas
cwtl
shlb
xor
mov
jbe
loopne
loopne
adc
push
lret
sub
sahf
and
js
js
sub
or
fdiv
mov
in
xor
insb
dec
sub
add
inc
aam
pop
inc
cmpb
push
fmull
adc
test
aaa
rcrb
ss
mov
jo
stc
or
decl
xchg
sub
mov
mov
test
and
add
mulb
cmp
pop
sub
test
loopne
sub
adc
loope
js
cmp
fdivrl
es
aam
std
fadds
cmc
mov
test
sbb
fucomi
ret
xor
mov
mov
rclb
adc
mov
or
push
mov
movsb
sub
and
ret
push
cwtl
data16
andl
xor
out
xorb
shrb
iret
sub
and
sbb
mov
push
mov
shrl
add
pop
cli
add
rolb
js
in
xor
push
jl
test
cltd
nop
fsubl
into
push
xchg
xchg
push
adc
or
mov
xor
xor
inc
or
rcrb
jne
lods
daa
or
dec
cwtl
adc
push
sbb
test
inc
and
cmp
cmp
out
xchg
inc
push
insl
test
test
add
xor
in
test
mov
dec
sbb
pop
cltd
xchg
cmp
ja
or
outsl
inc
add
loopne
xchg
sub
mov
sbb
jbe
sub
and
mov
je
xor
mov
dec
or
xor
push
data16
and
lcall
ret
jo
scas
stc
mov
sub
stos
xchg
sbb
push
adc
fnstenv
push
or
sub
mov
add
push
outsl
stos
adc
enter
jno
xor
sub
xlat
mov
or
ret
cs
push
sub
lahf
popa
imul
adc
jnp
sub
mov
mov
and
dec
xchg
jne
lods
xor
add
push
pop
add
and
pop
xorl
mov
pop
cltd
mov
cli
cltd
sti
je
decl
xor
popa
pusha
xlat
mov
fstpt
loop
out
add
test
push
add
ja
sti
divb
cmc
fldt
sbb
jne
lea
mov
xor
xor
divl
push
mov
lcall
loopne
sbb
push
bound
imul
or
pop
adc
sbb
and
mov
xor
dec
clc
add
in
popa
cmp
sub
xchg
jno
push
adc
in
pop
adc
xchg
pusha
cmp
cmp
fcom
pop
repz
fmuls
rolb
pop
int3
add
add
and
mov
push
nop
outsb
out
jnp
test
push
jno
mov
adc
adc
pusha
cmp
or
sub
js
test
and
mov
mov
fwait
xchg
and
mov
or
out
mov
inc
pushf
pop
shr
and
out
es
jne
pusha
or
inc
inc
pop
dec
inc
sub
and
adc
sub
jle
push
push
push
mov
sub
pusha
test
bound
and
int
std
jge
xchg
testb
sbb
pop
cmp
jle
es
mov
xor
add
ja
mov
push
jl
push
shrl
cli
vaddps
mov
clc
dec
imul
pop
fcoms
repz
cmp
push
aam
scas
bound
imul
in
popa
movsb
pop
push
mov
ss
leave
xchg
inc
rol
insl
or
int
ret
movsb
mov
les
xor
mov
rol
shlb
sub
js
clc
daa
or
test
ret
push
sbb
and
int3
pop
and
sbb
adc
popa
push
andl
or
in
jne
mov
push
or
cld
and
inc
fdivrs
cmpsl
pushl
cmp
cltd
rcr
pusha
xor
mov
add
add
loopne
enter
add
jmp
or
push
jge
lret
push
xchg
into
xchg
scas
inc
test
xor
jmp
dec
sub
adc
inc
adc
push
je
pop
movsl
and
push
cmp
dec
inc
mov
fcomp
cmp
xchg
mov
mov
dec
popa
mov
mov
icebp
and
add
jbe
push
pop
ret
jp
push
jle
incl
dec
negb
stc
add
mov
cli
int3
cmp
mov
or
cmp
add
iret
push
and
push
lea
mov
or
pop
and
xchg
inc
addb
mov
into
pop
sbb
xchg
adc
push
cld
cli
jmp
xlat
jmp
mov
xchg
cmpsb
add
lods
or
ss
cmp
push
repz
xor
mov
sub
sub
mov
jbe,pt
orb
ss
out
fnstsw
leave
mov
and
mov
mov
xor
or
adc
mov
xor
std
cltd
rcll
jb
mov
aaa
shlb
inc
fs
ds
fisubs
lea
insb
lods
or
adc
and
pop
adc
loope
add
add
pop
icebp
pop
cmp
jne
xchg
hlt
sub
test
add
test
push
lret
movsb
or
std
xor
inc
lea
stos
xchg
pop
loopne
sbb
inc
shlb
ret
cwtl
sub
frstor
mov
insb
xlat
sub
or
js
and
sbb
into
in
mov
push
les
mov
cmc
ss
icebp
out
or
and
out
add
mov
into
and
insb
popf
lea
ljmp
arpl
cmpb
fimull
mov
add
shl
dec
push
push
inc
sti
inc
enter
adc
dec
xchg
jo
nop
sub
jecxz
push
or
mov
and
sub
push
js
mov
add
lahf
xchg
and
mov
or
in
scas
inc
push
and
cmp
jge
fidivrl
inc
pop
setne
or
and
loop
xor
push
sub
mov
xchg
push
push
cmp
sar
jnp
adc
mov
ds
inc
sbb
lahf
aam
mov
xchg
cmp
cmp
xor
ret
adc
imul
cltd
add
mov
setl
adc
pop
inc
jae
cmp
mov
bnd
xchg
lahf
mov
pop
lcall
insl
and
mov
push
jp
push
sub
cmp
xor
lock
jge
sub
dec
mov
xchg
jo
clc
add
add
les
inc
xor
addr16
cmp
mov
cwtl
pop
dec
in
inc
mov
sub
cmp
insb
je
pop
push
pop
push
int3
lcall
mov
sub
sub
inc
push
push
inc
mov
pushf
fmull
cmpsb
push
jle
ret
pop
or
rolb
jmp
fcompl
or
imul
inc
out
fmuls
gs
xor
pop
aaa
jo
cmp
dec
mov
lcall
mov
xor
push
or
pop
std
pop
adc
pop
and
push
mov
inc
inc
adc
pop
bndstx
hlt
std
movsb
popf
pop
add
pop
and
test
push
inc
loope
pop
xor
inc
rorb
cmp
js
cli
pushf
clc
jmp
fildl
sbb
xor
sbb
call
or
push
jmp
cmpsb
and
js
dec
pop
mov
scas
mov
fisttps
pop
cld
push
sub
push
push
dec
sub
push
inc
push
push
and
fsubl
cmp
dec
or
std
dec
and
add
xchg
add
inc
mov
inc
arpl
aas
or
rclb
ja
adc
lret
sbb
xchg
mov
mov
sbb
enter
in
orb
mov
adc
cmp
movsb
or
iret
in
or
adc
lret
jae
pop
sbb
cmp
out
inc
and
and
arpl
inc
xor
add
roll
ret
out
orl
jl
add
or
jge
lcall
out
push
jae
xor
pop
fists
enter
lret
movsl
adc
inc
fnstenv
sbb
mov
mov
out
dec
pop
das
nop
ds
jns
lock
sar
aam
inc
cmpsl
dec
fmull
sub
subb
adc
js
or
mov
shrl
pcmpeqb
test
or
and
jne
sti
cmpl
sub
mov
jbe
aaa
pop
xor
pop
sti
fdivs
popf
adc
ds
negb
fisubrl
call
insl
lods
sub
dec
and
sub
pop
dec
jnp
mov
mov
and
addb
mov
out
mov
mov
ja
and
push
adc
add
out
movl
and
imul
daa
cmp
mov
sub
sbb
sbb
in
and
sti
aam
dec
cwtl
xor
bound
push
test
jb
lods
cmc
aam
mov
fstpt
jmp
xchg
xor
sub
orl
fldenv
lea
mov
pop
add
mov
add
mov
dec
add
adc
aam
movsb
aam
xor
adc
sub
mov
les
lock
or
inc
cmpb
jl
js
cmp
aas
pop
jp
push
cmp
lcall
sub
sub
dec
fdivrp
sarb
adc
das
fadds
ret
cmp
jne
pop
and
push
sub
jne
out
call
push
or
push
fidivs
dec
cmp
es
or
and
outsb
ret
xchg
pusha
inc
js
insl
and
mov
inc
jns
pop
mov
cmpsl
push
and
roll
clc
and
or
or
pop
xor
add
sub
xor
xchg
dec
and
mov
movl
ficoms
iret
inc
add
mov
adc
jae
aad
sub
sbb
iret
and
cs
inc
popf
push
add
mov
add
ljmp
lds
jp
lods
mov
push
test
lock
mov
sub
xchg
sub
aad
dec
imul
or
push
arpl
xor
push
lea
push
sub
fs
and
sbb
mov
sbb
push
je
xchg
lret
add
mov
cmp
jg
or
push
jmp
mov
or
or
jne
jge
arpl
pusha
test
xor
mov
dec
cli
or
dec
pop
decl
xchg
jno
or
push
add
jle
mov
dec
scas
and
mov
fmull
mov
mov
jo
and
scas
pusha
mov
movl
inc
popa
fs
or
mov
jo
int3
rcrb
mov
mov
push
mov
pushf
movsb
adc
int3
mov
jno
push
ret
jno
inc
xchg
and
call
pop
pop
test
inc
test
mov
push
inc
adc
adc
addl
shll
pop
shlb
jbe
sbb
ja
lods
pop
push
fistpll
or
mov
add
clc
pop
or
mov
sbb
aaa
addb
sub
decb
mov
dec
xor
pusha
mov
mov
inc
push
rclb
dec
and
xlat
pop
sbb
dec
shll
ficoml
sub
dec
sub
insb
adc
lret
jp
imul
and
mov
subl
mov
shll
push
sub
ret
xchg
push
mov
cwtl
or
push
add
xor
sbb
xchg
sub
xor
sbb
sub
pop
xor
int3
sbb
adc
or
sub
aam
movsb
xor
adc
ret
push
incb
dec
sub
add
or
inc
mov
and
cmp
mov
adc
ret
cmp
adc
adc
test
adc
push
dec
jb
in
inc
aaa
pop
inc
fnstsw
adc
shll
push
outsb
lods
adc
xchg
insb
ffreep
mov
nop
ljmp
dec
and
pop
mov
testb
xorb
fcoml
out
popf
and
xchg
or
roll
sub
inc
or
divb
mov
mov
das
pusha
cld
cmp
cmp
das
xor
testl
adc
push
jmp
cmpb
dec
shrl
pop
pusha
ljmp
outsl
sbb
jae
rclb
mov
sub
adc
adc
sti
xchg
pop
mov
jb
sbb
mov
and
jb
jo
xor
push
push
cli
or
add
inc
test
cmc
push
add
xchg
mov
and
push
mov
sbb
add
mov
test
sbb
sti
scas
adc
lock
adc
xchg
jbe
ret
xorb
fdecstp
mov
adc
pop
xchg
mov
cmp
or
mov
sbb
add
mov
fiaddl
dec
movsb
lahf
pop
sbbb
rcrb
mov
stos
ret
in
repnz
adc
les
xor
movzbl
pushf
jecxz
cli
js
jne
push
push
aam
sbb
inc
cld
mov
sub
push
xor
push
and
push
mov
movsb
mov
add
adc
add
in
jno
or
imul
push
add
jle
pop
dec
push
les
adc
inc
xor
and
inc
mov
fsubl
add
fcomps
dec
aas
shrb
les
inc
cmp
xchg
testl
cmc
push
mov
sbb
jno
sub
pusha
or
cltd
push
rorb
outsl
movl
daa
inc
je
aas
pop
inc
xlat
roll
inc
push
outsb
add
lock
rcll
andl
lea
adc
and
popa
push
xchg
or
sbb
or
pop
imul
mov
xor
ficoml
or
or
xor
adc
cmp
ret
add
les
call
fxch
pop
mov
add
mov
pop
dec
mov
test
popa
lret
ficomps
push
cmp
lock
mov
fldt
mov
loope
add
sub
std
add
mov
inc
dec
jne
cmp
push
pop
adc
lock
add
xor
je
or
adc
adc
sbb
inc
mov
add
inc
or
adc
ss
outsb
dec
in
adc
mov
aam
test
mov
popf
mov
or
adc
loop
inc
fdivr
es
loopne
xor
mov
and
dec
test
hlt
shll
cmp
stc
or
cmpl
pop
ficompl
enter
or
xor
mov
fdivrs
push
je
mov
push
or
add
jb
adc
les
cltd
and
dec
jne
addb
lfs
sub
add
addr16
sahf
es
adc
data16
push
jp
mov
pop
in
ds
nop
addb
push
adc
pop
popl
outsl
xlat
inc
sub
jle
jne
es
inc
js
imul
or
outsl
lahf
jne
ret
lods
rolb
sbb
push
pop
fcmovnu
cmpb
fstpl
pop
or
or
and
push
xchg
test
test
icebp
sbb
adc
jmp
mov
jmp
lods
rclb
mov
add
imul
sbbl
lds
xor
mov
mov
adc
test
ret
je
and
data16
adc
cmpsl
xchg
sub
pop
jmp
mov
push
jmp
pop
add
or
pop
das
ds
incb
sub
gs
ret
inc
inc
inc
dec
xor
mov
stos
jne
or
sub
xchg
mov
mov
adc
lret
imul
icebp
and
add
lea
inc
pop
imul
popa
cmp
cmp
and
ja
or
jmp
mov
andb
ljmp
jo
shl
jo
and
xchg
faddl
shll
push
cmp
mov
imul
fcmovb
add
das
out
loopne
loopne
testb
call
inc
mov
fimuls
stos
push
inc
call
sub
icebp
je
pop
dec
add
inc
rorb
roll
lock
and
adc
push
fsubr
mov
add
cmp
jmp
sbb
fstps
int3
inc
and
sbb
std
sbb
rcl
jbe
inc
sbb
out
dec
mov
jb
mov
loope
dec
add
ret
gs
dec
call
outsb
add
aam
adc
lea
sbb
or
sub
insl
or
push
adc
add
js
inc
and
outsb
pushf
int3
mov
add
ljmp
fisttpll
cmp
pop
mov
inc
clc
clc
adc
mov
xor
mov
and
mov
int3
push
shr
pop
lcall
xor
or
insl
movsl
cli
push
pop
push
popf
xchg
sub
jbe
mov
lds
fcmovne
rolb
in
leave
mov
fiaddl
xchg
iret
mov
cli
es
pop
sbb
mov
push
inc
sti
add
or
ret
add
mov
and
sbb
mov
jl
daa
add
mov
subl
push
xchg
sbbl
rorb
push
adc
rcrb
adc
pusha
rcll
fs
movsl
add
mov
rorl
add
idivb
test
push
mov
push
push
fstpt
rorl
stos
inc
bound
jo
in
cltd
jge
cmp
mov
loopne
add
inc
aam
enter
cmp
add
adc
or
cmp
shl
jmp
push
les
sbb
jne
or
hlt
and
dec
push
or
add
test
jne
jecxz
imul
adcb
test
test
adc
add
je
or
inc
lea
dec
inc
jo
xor
fs
sbb
adc
or
lea
pop
mov
cltd
adc
pop
mov
dec
aas
sub
mov
sbb
aad
xor
aas
test
addl
inc
cmp
inc
jle
mov
cmp
mov
rorb
shrb
fiadds
sub
incl
add
ljmp
dec
pop
and
add
jno
adc
xor
insl
or
test
sahf
clc
and
adc
mov
pusha
push
cmpl
dec
dec
lret
ljmp
in
mov
xchg
sahf
scas
andb
jns
mov
les
nop
and
and
xor
in
pop
or
jae
mov
movsb
sbb
or
mov
lock
sbb
mov
jo
pop
mov
and
mov
je
je
js
je
lret
mov
jmp
and
pop
or
leave
add
xchg
inc
pop
mov
nop
ja
mov
or
push
or
xchg
pop
push
mov
mov
adc
jle
pop
das
xlat
adc
fdivrl
mov
pop
cmp
sbb
add
add
mov
adc
fs
xor
sbbb
and
fildl
or
fldl
fstps
and
mov
push
sbb
fcmovu
cmp
sub
mov
ror
mov
rolb
sbbl
daa
pop
pop
jns
cmp
dec
aaa
sub
out
inc
mov
fsubl
ret
and
aad
or
push
sahf
lock
pop
iret
mov
movsb
iret
sub
jmp
inc
sarl
add
fcoml
pop
dec
pop
jmp
add
sub
xor
cmp
leave
jne
sub
pop
insl
pop
push
jl
adc
lock
insb
loopne
pop
inc
sbb
cmpsb
xor
add
rclb
mov
les
lea
xchg
or
sub
lods
sbb
xchg
push
mov
rol
pop
inc
lea
adc
jne
shl
js
loopne
push
sub
mov
iret
jno
pop
or
je
cld
or
push
jne
dec
jmp
adc
jbe
add
nop
loopne
cmpsb
popa
mov
xchg
scas
jge
and
pop
cmpl
cmp
sbb
pop
ja,pt
orb
lods
dec
aaa
adc
add
cmp
push
adcb
add
int
mov
pop
cbtw
pop
lcall
test
sarl
pushf
sub
pushf
mov
or
push
mov
dec
test
adc
lea
data16
sahf
mov
pusha
es
add
outsl
inc
adc
push
rol
adc
push
fwait
sub
add
ja
pushf
add
int3
mov
inc
mov
xchg
jle
test
push
dec
sarb
rcr
ret
jp
ja
lcall
xchg
lods
pop
push
fwait
add
xchg
jmp
je
orb
pop
fldt
mov
push
ss
dec
push
pop
das
pop
fwait
jge
cmpsl
or
mov
push
inc
imul
fiaddl
inc
pop
push
jbe
pop
loop
insl
sub
mov
push
push
popa
jne
adc
pop
pop
pop
add
mov
sub
mov
pop
call
push
test
add
sub
ret
xchg
movsb
je
push
leave
repnz
jp
sub
xor
andl
inc
jmp
inc
imul
mov
jne
and
xchg
push
push
js
cwtl
pop
and
xor
sbb
push
or
jecxz
dec
bound
lea
scas
cmpb
cmp
cs
or
nop
and
clc
loop
aad
pop
dec
mov
mov
and
fmull
jmp
mov
push
push
push
or
sbb
pop
add
jp
subl
or
fs
subl
adc
insl
sbb
repnz
pop
mov
and
xchg
inc
jo
add
mov
pop
inc
xor
push
imul
insl
and
pusha
sub
lods
not
fdivs
dec
push
inc
sub
mov
add
mov
jmp
test
loop
movsl
lock
sub
outsb
sbb
mov
lods
push
mov
mov
xchg
inc
aas
or
adc
mov
adc
xchg
aas
insb
adc
shrd
negl
dec
fs
xchg
cvtps2pd
fisttpl
adc
popa
add
adc
inc
out
loopne
dec
in
add
add
add
or
inc
pushf
std
in
mov
test
roll
sub
xchg
stos
xchg
sbb
sbb
add
mov
jecxz
std
cmp
cs
jbe
adc
shrl
subl
sbbl
insb
and
jl
sbb
in
sub
and
mov
jbe
leave
clc
push
cmp
test
fcompl
xchg
pop
xchg
movaps
dec
adc
pop
push
imul
nop
cs
mov
cmp
insl
int3
mov
jae
mov
or
popa
int3
enter
pop
fidivl
xchg
ret
shr
lods
dec
aam
paddsb
sti
lods
ss
pop
jg
nop
aas
mov
mov
mov
fdivs
sub
inc
dec
xorl
rcll
xchg
shll
aas
mov
push
fnstsw
in
divps
outsb
je
xchg
nop
lock
out
cwtl
inc
xlat
xchg
fbld
pop
pop
in
add
shrb
cwtl
mov
jae
or
sub
in
mov
pushf
stc
movq
push
ret
fnstenv
das
push
cmp
ret
fimull
pop
pop
in
pop
pop
cmp
mov
loopne
aas
movsb
in
pop
adc
int
aam
int3
outsl
les
jle
mov
fistpl
inc
lcall
jmp
pminub
lcall
inc
es
ret
or
int3
pop
or
mull
sbb
stc
push
sbb
sub
in
jb
pop
jb
in
in
cmp
mov
jmp
pushf
aas
xor
aas
dec
in
loop
scas
pop
dec
in
push
test
aam
pop
mov
mov
push
jg
pushf
incl
adcb
sbb
xor
and
je
stc
or
jo
lods
xchg
sbb
mov
pop
ds
sbb
fs
jle
cmp
or
inc
popf
loop
push
cmpb
fwait
mov
sbb
or
push
xorl
in
in
cmp
in
add
nop
add
in
pusha
and
xchg
in
sbb
inc
scas
mov
mov
prefetcht2
jg
imul
adc
mov
pop
sbb
jecxz
add
call
outsl
push
or
out
lcall
add
push
jb
inc
sahf
loope
cltd
adcb
in
in
add
nop
dec
in
in
nop
add
nop
in
in
in
les
mov
mov
xor
or
popa
push
bound
sub
je
nop
adc
push
js
cmp
lahf
add
in
xchg
pop
mov
fsubs
cmp
adc
adc
in
sbb
sbb
mov
and
mov
push
insb
mov
mov
mov
sbbl
and
or
stos
leave
inc
je
and
pop
pop
pop
sbb
pop
lret
rcrb
loopne
nop
add
sbbl
arpl
cmp
sbb
push
push
in
mov
dec
mov
adc
nop
sub
fstps
fadds
hlt
psubusw
js
cmp
adc
sbb
enter
jmp
mov
mov
cmp
js
push
in
push
test
nop
int3
stos
and
push
inc
subl
nop
mov
push
or
push
sub
call
add
in
jb
pop
jb
in
in
pop
jb
pop
in
in
in
and
jb
in
in
jb
pop
jb
in
in
pop
jb
pop
in
in
in
and
jb
in
in
jb
pop
jb
in
in
push
xchg
sub
std
lock
sub
std
lock
push
in
lock
push
in
lock
add
mov
jb
rcl
lock
jb
lock
pop
jb
lock
pop
lock
andps
sub
pop
mov
mov
dec
fcmovnb
das
dec
ds
dec
pop
in
dec
iret
sub
mov
mov
adc
push
pop
or
in
or
fmuls
xchg
fcmovnbe
lea
loopne
lds
nop
mov
mov
in
fdivs
mov
enter
jg
insb
mov
lahf
aas
shlb
pop
enter
aas
rolb
pop
cwtl
jg
js
inc
mov
cmpsl
aas
mov
pop
lods
sub
inc
mov
aam
setnp
adc
dec
push
shrb
mov
cld
jb
xchg
call
enter
mov
inc
es
jbe
adc
push
mov
xor
aas
pusha
fwait
nop
mov
nop
dec
add
mov
rcll
add
js
mov
lds
dec
cmp
jo
insl
xor
insb
je
xor
mov
movsb
leave
and
cmpsb
xchg
cwtl
adc
cmp
hlt
mov
lods
adc
mov
rolb
fistpll
xor
shll
lahf
push
sbb
inc
data16
rcr
loopne
mov
dec
inc
in
or
adc
mov
mov
enter
push
jno
loop
lods
lahf
lock
pop
add
and
lods
adc
jg
lods
lahf
jns
nop
fdivs
xchg
cwtl
and
mov
pop
fsubrs
push
dec
pop
jo
ret
insl
cwtl
aas
mov
push
sub
pushf
and
dec
aaa
lret
scas
in
test
cwtl
fistpll
push
insb
dec
push
sub
push
and
adc
mov
test
mov
rcl
jle
sets
loopne
cmp
shlb
scas
jbe
jl
daa
adc
cmp
enter
mov
aas
fdivs
cmp
ja
adc
lods
push
loope
daa
inc
lock
aad
pushf
je
or
push
pop
jb
xor
leave
dec
sti
add
sahf
dec
push
in
push
pusha
leave
leave
fmul
das
addl
or
shlb
test
cmpsb
mov
stc
pop
scas
movsl
sub
mov
add
mov
jp
fdivl
dec
das
pop
scas
inc
mov
addr16
scas
and
xchg
mov
ss
int
mov
es
push
int
mov
dec
add
nop
fistl
mov
or
inc
push
mov
mov
mov
inc
mov
xor
and
addb
sub
adc
sbb
mov
xchg
lret
adc
mov
push
hlt
inc
mov
daa
and
inc
daa
jmp
mov
ret
inc
xor
lock
std
mov
das
inc
mov
sub
rep
mov
mov
mov
push
dec
in
mov
or
and
mov
aaa
mov
daa
xchg
xor
mov
pop
insb
push
jo
mov
xor
rcrb
call
push
fcoms
pop
clc
nop
mov
xchg
insb
cmp
cwtl
mov
mov
fmull
push
or
xchg
mov
shlb
jns
rclb
std
cmp
xchg
lret
and
orb
cmpb
cmp
sub
or
out
sbb
mov
sarb
test
cmpsl
mov
mov
mov
ror
and
inc
dec
pop
add
sarb
ret
pop
cmpb
dec
fdivs
ret
mov
cmp
sub
loopne
or
mov
and
fwait
xor
pop
pop
ret
mov
les
mov
in
test
jbe
add
jmp
test
imul
sbb
testb
daa
in
imul
insb
adc
aaa
call
xor
out
ss
loop
lds
call
xlat
push
lock
fsubrs
sub
lahf
push
add
push
pop
sub
mov
push
pop
pop
fsubs
pop
push
push
es
mov
nop
sub
jl
daa
out
daa
push
leave
pop
loopne
xchg
dec
pusha
call
ss
cltd
in
loop
sbb
dec
jo
lock
cmp
sub
or
mov
imul
scas
cmp
aaa
scas
pop
sub
cmpsb
insl
mov
out
push
imul
mov
enter
leave
aaa
ret
clc
push
int
cmp
or
dec
ficompl
mulb
les
es
dec
shr
aam
dec
add
fistl
test
mov
jl
rcrb
inc
data16
dec
test
insl
inc
data16
rcl
fwait
push
mov
jp
xchg
pop
dec
add
iret
cmp
jp
cmp
dec
push
xchg
xchg
es
push
aas
addr16
cmp
xchg
mov
popa
das
into
shlb
addb
test
pop
cmc
hlt
mov
dec
add
and
and
ljmp
shrl
aad
mov
fsubl
roll
sarl
enter
adc
in
mov
sbb
dec
push
adc
adc
rorb
inc
js
sar
sbb
imul
cwtl
outsb
rcl
or
int3
mov
aam
mov
outsl
nop
and
int3
or
int3
xchg
in
shrb
ss
test
js
add
mov
and
rclb
loopne
cmp
cmp
lock
addb
lock
pop
ds
push
push
adc
jns
cwtl
add
adcb
cld
test
movsb
inc
dec
fisubs
jbe
sbb
cmp
psadbw
push
push
sbb
push
mov
push
nop
push
dec
push
dec
mov
data16
sti
pusha
add
aas
insb
dec
and
clc
xor
jns
xchg
call
push
dec
repz
inc
pushf
fcomps
xor
stc
cmp
and
jo
pusha
aaa
mov
sti
xor
add
sahf
shrb
mov
cmp
repz
lock
inc
data16
mov
adc
jg
sbb
and
mov
push
and
mov
loopne
out
jl
das
pop
sahf
mov
into
and
lahf
or
or
jp
mov
and
jge
out
inc
sahf
ja
mov
or
inc
lcall
adc
add
test
or
in
mov
mov
pop
cs
dec
in
repz
loopne
stos
cmp
shl
das
mov
adc
mov
shlb
bound
xchg
or
fisttpl
push
push
add
push
lock
xor
in
cmp
mov
push
sub
pop
nop
fwait
int
jge
push
fiaddl
jmp
cmpsl
insl
mov
push
xor
push
cmp
out
mov
dec
mov
adc
insl
jnp
addb
loop
ljmp
inc
mov
xchg
jo
push
out
insb
ficoml
mov
push
and
aas
leave
jbe
lahf
sbb
mov
jmp
pop
cmp
mov
ds
push
enter
es
lcall
adc
sbb
aas
cmpsl
and
xor
aas
jno
inc
jle
jb
outsb
push
add
aam
adc
in
add
scas
jo
inc
xchg
pushf
cmp
das
lock
dec
xchg
cmp
and
sbb
add
xchg
jb
jo
fists
xchg
int
mov
pushf
jecxz
xor
nop
sahf
nop
popf
dec
fstps
sbb
fistps
in
dec
pop
in
inc
mov
adcl
scas
inc
cs
fdivrl
sbb
xor
das
loopne
or
das
adc
mov
push
rorl
in
stos
orb
add
push
lods
das
shlb
andb
and
inc
das
mov
cmp
movsl
nop
mov
dec
xlat
in
and
cs
inc
loope
or
leave
out
repnz
addr16
enter
jb
popa
xor
push
cmpxchg
pusha
scas
dec
sbb
lahf
imulb
push
sbb
loopne
cs
fldl
jge
divl
inc
es
push
pop
call
cmpsl
push
dec
and
cmpsl
pop
push
push
push
stos
fisttps
mov
aaa
popl
scas
adc
seto
inc
das
loopne
xor
add
or
inc
fildll
cmp
repnz
addb
sub
push
imull
sub
pop
mov
pop
cmove
mov
inc
dec
and
add
add
push
loopne
out
xorb
mov
push
scas
and
sahf
stc
and
das
clc
clc
pop
adc
inc
jb
test
add
push
repnz
and
jbe
or
rcr
sbb
add
and
cmp
sbb
xor
inc
jno
sbb
repnz
and
pop
pop
push
pop
cs
xchg
adc
add
cmp
daa
adc
fcomps
xor
mov
jns
and
pop
adc
or
add
ret
pop
jb
scas
add
jo
push
lea
cmp
mulb
outsl
jo
mov
sbb
sarb
outsl
add
push
scas
loope
jno
sahf
scas
clc
in
push
imul
inc
fiaddl
gs
jo
outsb
jne
ss
jnp
sbb
pusha
out
inc
mov
add
cs
insb
pop
push
pop
or
divl
das
jo
cld
cmovs
movsb
out
orb
addr16
imul
cwtl
xor
aas
ror
cmp
inc
inc
je
insb
sub
adc
fadd
push
jmp
mov
test
pop
mov
mov
outsl
mov
bound
push
imul
push
inc
xlat
nop
mov
stos
inc
loopne
push
dec
or
fsub
jle
jl
xchg
push
cltd
je
dec
ret
ja
cmpsl
cmp
adc
jecxz
mov
push
inc
jb
popa
jns
ja
xchg
imull
aas
push
jle
add
bound
inc
mov
fstps
pop
cmp
rep
mov
dec
adc
movsl
pop
pop
or
clc
inc
dec
popl
les
mov
push
outsb
pop
lods
jne
inc
imul
repz
lods
outsl
outsb
in
aas
inc
jb
jae
mov
push
pop
pop
push
mov
xlat
aas
test
leave
jmp
cwtl
mov
outsl
mov
aam
mov
dec
adc
and
call
dec
inc
insb
imul
pop
and
ds
ret
jmp
scas
mov
jb
js
gs
imul
pop
push
gs
jne
in
cmp
out
mov
pop
mov
je
pusha
sbb
inc
inc
dec
jp
inc
dec
dec
push
push
das
and
jb
cmp
jbe
js
js
cmp
xchg
cmp
pusha
jle
mov
flds
cmp
inc
lock
jns
or
push
dec
push
or
outsl
and
das
cmpsb
ret
inc
sub
in
cmp
out
test
out
mov
sbb
sub
sbb
data16
xor
jo
test
cmpsl
outsb
cmp
fbld
negb
dec
dec
mov
dec
push
test
cmp
nop
or
pop
xor
xor
xor
cs
or
xor
sub
push
pop
sahf
xor
stos
add
jl
rorb
or
cmp
out
adc
sarb
and
cs
add
lahf
adc
sub
das
push
test
adc
ficompl
adc
adc
scas
jbe
pop
out
pop
lods
sbb
imul
push
mov
enter
pop
icebp
sub
outsl
into
ficompl
add
out
jle
sub
add
adc
jg
frstor
inc
data16
insb
imul
outsl
arpl
xor
and
jae
out
mov
cmp
jb
daa
idivb
dec
inc
jb
insl
and
sbb
push
imul
dec
sti
mov
je
jb
outsb
outsw
push
inc
outsb
jne
inc
imul
sub
dec
adc
imul
lods
ljmp
jae
dec
dec
adc
push
loop
imul
in
push
push
push
dec
adc
testb
arpl
arpl
pop
inc
pop
stos
scas
out
dec
decb
addr16
mov
push
jne
mov
loope
mov
orl
insl
lea
xchg
out
pop
test
xor
inc
ficoms
rorb
inc
js
dec
xchg
dec
fadd
cmp
js
fwait
divb
js
adc
mul
jbe
test
and
xchg
sub
push
adc
inc
push
push
jne
lcall
mov
xor
mov
in
imul
add
push
adc
xchg
test
pop
fcomps
push
iret
outsl
aad
cs
sti
cs
xlat
lock
test
push
andps
test
cs
inc
sahf
jmp
inc
sahf
out
and
sahf
out
scas
orl
push
lods
scas
add
push
push
jbe,pn
mov
das
rolb
xchg
stos
pmulhuw
add
addb
rolb
xlat
pop
aam
inc
pop
inc
insb
insb
je
xor
hlt
aam
fwait
dec
mov
lock
in
scas
cld
stos
or
dec
and
mov
pop
push
pop
mov
ja
jns
in
push
inc
inc
pop
inc
aas
pop
inc
cmpsl
cmp
mov
mov
jge
int
push
jo
movsb
popa
negb
jbe
mov
lcall
dec
inc
jge
imul
push
push
or
cmp
jg
pop
loopne
adc
and
adc
arpl
cmp
popa
ss
out
dec
pop
addl
add
scas
testb
lcall
out
js
jg
add
out
push
and
cmc
aas
mov
mov
cs
push
cmpsb
in
add
cmc
or
das
cli
out
outsl
pop
add
js
repnz
xor
sbb
inc
insl
fs
mov
mov
sldt
addr16
add
push
fiaddl
js
test
xchg
fisubrs
mov
add
les
test
mov
inc
or
fmuls
insl
push
addb
dec
pop
inc
ss
es
pop
or
or
imul
es
mov
adc
mov
stos
push
lahf
out
mov
mov
dec
jge
dec
adc
inc
jne
adc
sbb
je
je
arpl
mov
mov
cmc
andb
add
jge
cltd
or
push
mov
fisttpll
sub
imul
xor
cmp
stos
push
scas
fiadds
cmp
add
inc
lahf
out
mov
and
addl
mov
lods
mov
fidivs
rcrb
pushl
pop
arpl
jae
decl
inc
sbb
pop
inc
imul
push
pop
out
test
pop
lret
pop
inc
inc
loopne
test
add
or
cmp
jbe
push
inc
add
das
push
gs
or
push
jg
pop
lahf
sbb
sbb
add
mov
cs
pop
stc
adc
inc
imul
push
or
sbb
mov
mov
stc
or
xchg
leave
push
inc
sti
sbb
insb
jbe
push
and
outsb
jae
sub
jnp
jb
popw
push
in
mov
pop
cmp
mulb
fwait
add
test
sahf
hlt
mov
mov
sarb
mov
jo
dec
sarb
xchg
inc
out
inc
loope
or
cld
inc
rcr
add
pop
sub
shll
das
pop
add
inc
cli
adc
add
gs
push
mov
adc
cmp
xchg
mov
mov
or
adc
int3
mov
dec
clc
add
xor
sub
sub
into
out
lods
dec
jbe
outsb
inc
push
pop
dec
mov
cmp
into
mov
sub
inc
jnp
scas
inc
das
mov
jbe,pn
mov
shl
jbe
push
pop
push
decl
add
outsl
je
jne
outsl
jb
gs
lods
mov
fmuls
push
jns
insb
adc
or
push
aam
adc
andb
jb
daa
pop
dec
repz
mov
fists
dec
outsb
xor
jb
or
das
pop
inc
push
js
iret
div
push
lahf
outsl
jo
pusha
inc
imul
or
dec
dec
jo
ljmp
inc
mov
mov
pop
dec
cmp
lock
adc
push
add
repz
add
jbe
push
call
dec
dec
enter
xchg
inc
push
movsb
sbb
sti
ss
inc
inc
test
pop
sub
push
push
pop
cmp
das
fimuls
jbe
xchg
ret
xchg
test
adcb
cwtl
jns
lahf
mov
fs
cli
out
and
sahf
negb
push
jnp
push
iret
lcall
in
repz
push
aaa
push
subl
popf
cmpb
mov
dec
out
ficomps
push
es
dec
ss
test
xchg
sahf
ss
mov
iret
xor
out
dec
pop
push
idivl
lret
fidivrs
ss
enter
mov
test
mov
aam
sahf
imull
mov
mov
aas
push
cwtl
push
imul
insl
bound
js
clc
push
mov
popa
jo
push
outsl
or
shrb
push
fdivrl
push
jl
jns
mov
xchg
fnsave
mov
insl
iret
rorl
es
pop
pop
push
daa
shlb
out
shlb
inc
pop
js
sarb
pop
and
push
push
add
pop
push
dec
sbb
adcb
inc
outsl
mov
fwait
add
adc
ret
jl
pop
push
sahf
imul
pop
bound
js
bnd
mov
mov
call
inc
jb
push
mov
lods
jle
in
dec
inc
mov
inc
mov
jae,pt
and
into
cmc
cli
aaa
dec
sbb
xor
shll
cmp
dec
leave
sbb
or
mov
inc
push
push
inc
call
cmpsl
mov
push
inc
inc
push
dec
pushf
notl
push
fs
shrl
in
cs
push
push
icebp
push
dec
push
imul
mov
fidivs
lahf
jecxz
pop
daa
fs
mov
xchg
push
inc
pop
mov
xchg
pop
sti
or
jnp
adc
and
xor
inc
mov
jns
add
or
mov
mov
or
pop
push
int
and
pop
decl
pop
cs
into
adc
out
mov
push
pop
add
int
adc
jge
adc
in
mov
inc
and
add
lock
cmp
cmp
repz
adc
add
add
repz
aaa
or
pop
icebp
cmp
sub
push
outsb
push
lret
inc
cmp
out
push
mov
cmp
push
and
push
adc
outsl
ds
mov
add
adc
pop
xor
insl
jae
bound
add
imul
mov
outsb
mov
and
add
xor
cmp
out
inc
jno
push
into
repz
out
jb
adc
mov
icebp
sahf
out
je
in
cwtl
lahf
idivb
push
sahf
jbe
cmpsl
push
aam
test
fldcw
mov
movsb
jb
into
push
iret
repz
out
cmp
jnp
imul
push
fimuls
inc
nop
es
fnsave
in
inc
jnp
xchg
stos
es
dec
sarl
xchg
jns
push
bnd
mov
mov
inc
and
xor
sbb
ds
ja
push
fildl
js
cmpsl
loopne
outsl
sbb
mov
fldl
xor
inc
jae
fsubrp
jnp
repz
mov
push
dec
ja
idivl
jne
fdivrs
mov
xor
loop
pop
add
fwait
int
jns
xor
mov
mov
xchg
sbb
insl
adcl
and
pop
lods
pop
pop
test
mov
ds
daa
data16
leave
fstpt
push
pop
jle
fidivrs
out
imul
jle
out
sahf
dec
and
mov
out
test
adc
mov
imul
push
push
enter
daa
clc
dec
shlb
scas
ss
sub
outsl
and
fldt
add
mov
sti
or
cmp
xchg
das
mov
cwtl
enter
mov
jo
stos
add
push
adc
pop
nop
and
fidivs
into
push
push
sbb
fisubs
shll
ljmp
mov
in
push
movsb
inc
arpl
es
xor
aaa
or
cs
lock
call
arpl
ret
es
es
xor
popa
insb
push
sbb
test
fisubrl
das
mov
mov
testb
insl
popa
sub
jae
gs
es
insl
imul
cmpsb
jmp
push
jb
and
insb
cmpsb
testb
sbb
jo
dec
gs
es
push
mov
je
push
shrl
arpl
iret
pop
or
aas
push
ficompl
fiaddl
ljmp
sub
mov
cwtl
nop
add
rclb
pusha
into
mov
scas
or
xchg
outsl
pusha
jnp
sahf
out
mov
sbb
js
adc
push
push
outsb
movsb
sbb
or
and
aaa
sbb
mov
das
out
loop
jg
push
or
pop
out
sub
and
push
or
inc
gs
int3
adc
arpl
and
push
es
bound
sbb
out
jae
pop
fs
jg
mov
jae
xchg
ja
repnz
rcrb
adc
icebp
cmp
out
or
pop
mov
xor
xchg
xchg
fwait
leave
sub
inc
aas
int3
dec
sub
out
push
dec
xchg
into
inc
sbb
mov
add
push
out
or
out
or
sahf
testl
push
push
or
push
cmpsb
xchg
xchg
pop
add
sub
js
and
out
cmp
jle
push
orb
negl
sub
cmp
jo
iret
rolb
das
cmp
nop
scas
cmc
dec
pop
dec
pusha
inc
jne
jns
and
pusha
pusha
orb
xchg
xchg
mov
push
movl
addr16
pop
adc
xchg
data16
jnp
stos
push
jle
add
pop
in
and
xor
push
mov
and
dec
je
bound
das
jp
clc
aaa
jo
outsl
into
arpl
pop
pop
mov
mov
out
add
jge
pop
xor
es
dec
lcall
scas
rcrl
imul
pop
out
addr16
xor
rclb
and
sahf
arpl
xchg
jb
and
bound
insb
mov
dec
outsl
loopne
inc
shlb
sub
sub
aaa
add
jns
xor
outsb
sti
jle
pop
sbb
inc
jne
jl
jns
or
xlat
pop
xor
xor
shl
mov
jne
je
xor
pop
scas
jge
sub
aaa
aaa
dec
imul
notl
mov
xor
sbbb
aas
and
pop
inc
cmpsl
testb
ss
xor
mov
inc
and
cmp
imul
bound
dec
or
cmpb
dec
cmpsl
in
push
add
repz
mov
aam
cmp
aaa
shlb
inc
xor
push
pop
inc
ja
mov
scas
pmaxub
mov
push
fadds
js
or
out
iret
roll
sbb
cmp
es
leave
test
not
clc
jne
mov
loopne
insb
jne
adc
jbe
jge
inc
mov
or
aam
leave
and
xor
mov
pop
cmp
fidivrs
daa
leave
lret
push
fldl
add
cs
sbb
jg
pop
ret
iret
mov
push
rolb
out
push
fcomp
es
imul
fstpt
daa
cmp
dec
imul
call
cmp
cmp
fs
jne
pop
dec
add
adc
add
fs
or
inc
dec
scas
or
ds
fdivl
test
pop
dec
xor
adc
int3
and
fs
dec
scas
push
fstpl
loope
ljmp
arpl
inc
jmpw
bound
push
inc
sbb
into
mov
out
jae
xchg
xchg
addr16
sti
cltd
mov
xor
and
fsubrp
pop
jae
push
gs
sbb
pushf
insl
mov
jne
xchg
into
cmp
outsl
pop
dec
inc
aas
add
inc
dec
dec
inc
inc
or
pop
sbb
push
dec
inc
in
xor
dec
push
push
inc
push
push
scas
jecxz
add
sbb
mov
sub
adc
mov
xchg
push
cmp
pop
daa
xlat
adc
in
outsl
inc
adc
xchg
adc
orb
mov
fadds
das
in
fcomp
pop
rorb
jecxz
add
addb
dec
jae
inc
adc
add
gs
mov
push
sbb
dec
inc
push
dec
xchg
std
sbb
pusha
xlat
sub
add
lcall
lock
pop
mov
cwtl
loop
push
je
and
mov
dec
shrb
aas
pop
mov
push
push
and
dec
dec
inc
sbb
xchg
dec
dec
inc
and
push
xor
cmp
sub
and
imul
or
sbb
jo
in
lret
dec
aaa
outsb
outsl
je
or
push
imulb
cltd
mov
mov
jno
adc
scas
pop
rorl
and
data16
push
jo
and
jb
inc
xor
add
push
insb
fisttpl
xor
push
gs
cmp
pop
das
mov
and
mov
cmpb
outsl
cmp
or
fs
push
dec
pusha
mov
inc
mov
in
ret
sbbl
scas
inc
aaa
mov
pop
cs
imul
xor
imul
subl
add
popa
lea
inc
outsb
addb
cltd
xchg
call
test
bound
xchg
cmp
push
adcb
push
cmp
ret
jne
jae
add
xor
popa
out
sub
inc
jne
rorb
sar
dec
pop
shlb
push
imul
push
inc
mov
lret
cmc
dec
imul
inc
sbb
cmp
test
cmpsb
add
cmp
rorb
mov
ja
incb
leave
bound
push
sbb
add
icebp
pop
lahf
and
cmp
ss
out
fiadds
push
and
add
pusha
push
dec
nop
jo
add
inc
add
or
in
jmp
add
add
add
mov
xlat
pushf
cmpsb
push
ret
xchg
aaa
xchg
push
pusha
addb
decb
addb
sbb
ss
add
cmp
push
push
cld
push
sbb
or
es
pusha
addb
push
pop
jo
add
insb
jp
sarl
fistps
pop
jns
xor
sbb
pop
xchg
outsl
test
jns
mov
mov
cmp
aas
sub
mov
push
enter
jbe
jae
mov
jno
subb
xor
pop
outsb
sub
addr16
fldcw
jnp
sub
add
xor
popa
pusha
es
rolb
pop
push
inc
arpl
mov
xor
pop
and
and
dec
mov
inc
outsl
das
xchg
int
jne
jg
and
dec
inc
dec
pslld
cmove
cltd
pop
js
and
pop
nop
xor
sub
lcall
bound
pop
jg
test
pop
push
add
idivb
decl
loopne
mov
test
cmovno
pop
xchg
dec
dec
dec
push
and
fldcw
mov
pusha
cmpsl
dec
int
pop
imul
and
in
incb
int
cmp
sbb
nop
or
lahf
out
shrb
ror
dec
cmp
mov
mov
mov
jg
jle
in
push
xor
pop
mov
mov
mov
fistps
pop
add
in
bound
adc
lahf
cmp
jg
adc
push
iret
bound
add
push
mov
or
andb
jg
dec
sbb
scas
sub
adc
in
mov
push
jl
aaa
push
clc
roll
mov
or
cmp
jecxz
dec
mov
jno
mov
nop
push
ljmp
xchg
pop
inc
sub
stos
in
sbb
aaa
das
cs
stos
add
add
in
mov
cs
or
mov
cs
or
or
or
push
ucomiss
adc
add
cs
or
mov
cs
sbb
sbb
enter
dec
xor
add
jb
pop
and
add
pop
enter
loopne
sbbl
das
add
xor
add
test
or
pop
mov
or
cmp
dec
push
sub
jge
dec
ret
nop
mov
push
push
pusha
mov
sub
jns
dec
repz
pop
push
insb
aas
rclb
and
addb
cmp
movsb
fnstcw
test
dec
cmp
inc
test
adc
add
lds
adc
adc
xor
add
test
add
out
xchg
shrb
imul
daa
pop
mov
xchg
daa
pusha
aas
iret
mov
shrl
call
mov
add
jne
js
adc
sub
aas
sahf
pop
mov
mov
rolb
cmpb
and
iret
jbe
xchg
and
das
or
call
jne
dec
pusha
lahf
xchg
or
imul
pop
shrb
sarb
adc
or
pop
in
jbe
xchg
daa
js
cmp
inc
cmpsb
nop
ja
xchg
or
nop
fisttps
jns
add
in
mov
push
mov
lock
shrb
subl
daa
outsl
pop
lcall
cwtl
pop
js
dec
nop
lahf
jb
fdivrl
enter
adc
cmp
sbb
jbe
jb
jns
inc
daa
and
push
or
daa
rclb
pushl
adc
cmpsl
test
lcall
mov
shrl
xchg
sbb
cmp
inc
jp
pop
and
xchg
jo
pop
xlat
fisubrs
mov
cwtl
outsl
push
test
pop
adc
ljmp
in
stos
rorl
jnp
loopne
mov
adc
nop
adc
push
cmp
cmp
scas
jb
jo
xchg
push
adc
add
jg
mov
daa
call
ret
or
jnp
adc
in
mov
and
or
jb
jl
lahf
xchg
add
pop
jo
xor
sub
cwtl
jl
fidivrs
enter
push
cmp
or
jge
shrl
xor
loope
push
pusha
daa
nop
fcoms
cmpb
mov
mov
mov
mov
jbe
mov
jle
jns
int3
lahf
shrb
jle
jbe
jb
jle
push
daa
clc
adc
ds
pop
mov
add
daa
test
push
pop
enter
outsb
mov
scas
xchg
clc
scas
pop
xchg
pushf
dec
pop
and
jg
add
daa
jo
js
outsb
and
xchg
test
nop
jb
pop
and
call
xchg
mov
enter
adcb
sahf
push
push
sbb
nop
loopne
sbbb
lahf
xchg
or
or
cmpsb
scas
subb
loopne
xchg
clc
dec
sub
add
sbb
and
cmp
lahf
lds
adc
mov
pop
ljmp
mov
scas
xchg
dec
pop
and
addb
xchg
dec
daa
sbb
sbbb
cwtl
lahf
and
sbb
cmpl
fldt
daa
js
or
mov
pop
int3
ret
out
scas
xchg
js
pop
and
mov
xchg
shlb
mov
xchg
pushf
inc
pop
clc
adcl
mov
and
rcr
dec
test
add
mov
aas
sbb
or
xor
iret
mov
test
pop
mov
enter
cmp
icebp
pop
and
pop
sbb
es
test
fisubs
sbbb
push
mov
mov
pop
insb
mov
aas
mov
cmp
add
mov
cmpb
lock
sub
push
add
sub
test
xchg
pusha
daa
adc
incl
lahf
xchg
in
fadds
fdiv
lahf
xchg
xchg
sbb
xchg
inc
xorb
sbb
outsb
mov
jb
lahf
xchg
or
sbb
rolb
lahf
xchg
aas
mov
ror
clc
sbb
or
dec
sbb
pop
movsl
xor
inc
push
sub
mov
and
push
jo
add
daa
dec
sbb
mov
in
mov
lahf
xchg
add
pop
sbb
xchg
decl
in
mov
pusha
daa
call
mov
mov
mov
or
add
sbb
and
mov
mov
mov
and
inc
sbb
xchg
andb
pusha
outsb
dec
mov
push
repnz
add
js
mov
add
scas
mov
pop
sbb
mov
scas
jb
mov
loopne
clc
scas
loopne
or
add
and
bound
nop
mov
incl
fisubs
xor
and
mov
fdivrl
mov
or
iret
jbe
sub
xor
rcrb
pop
pusha
lea
ret
mov
push
out
lds
rcrb
shlb
and
pop
and
pop
mov
adc
outsb
dec
dec
sub
ret
or
or
js
aas
pop
mov
adc
iret
xchg
nop
enter
nop
or
enter
and
popa
or
mov
daa
ja
daa
xor
pop
decl
pusha
lcall
and
mov
mov
jg
in
repnz
sbb
xchg
daa
push
adcl
jbe
fcomps
jbe
mov
cwtl
enter
nop
or
fcoms
sbb
fldl
pusha
inc
ss
nop
and
nop
adc
inc
nop
xchg
push
shrb
add
fistl
xchg
mov
test
fildll
sub
mov
enter
pop
and
xchg
aas
outsb
mov
cmpsl
sbb
cltd
pusha
das
sbb
and
push
push
xchg
jg
iret
and
nop
daa
cmp
mov
cs
ljmp
inc
mov
dec
pop
addr16
daa
cmpsl
or
loopne
and
cwtl
and
jne
movsl
nop
xchg
lahf
xchg
dec
jo
daa
lock
cwtl
xchg
mov
ja
daa
xchg
or
sbb
out
xchg
pop
jbe
push
xor
inc
aas
push
pop
in
or
xor
out
add
pop
mov
push
iret
lods
cmp
add
das
into
jg
mov
loopne
repz
push
add
add
out
pushf
pushf
pushf
pushf
sbb
cmp
inc
or
out
into
scas
data16
outsb
push
out
jbe
pop
fstl
addr16
inc
xchg
outsl
fwait
jns
iret
mov
mov
cs
cmp
in
xlat
push
push
loop
inc
sahf
cmp
in
or
add
push
jns
dec
dec
sbb
push
addr16
sahf
out
cmovne
scas
pop
out
in
addr16
out
jno
jl
and
cmp
jb
jbe
mov
outsl
push
leave
leave
leave
adc
sub
xchg
outsl
sbb
aas
or
pop
add
and
inc
cmp
pusha
add
xor
cmp
cmpsl
nop
setp
mov
add
sub
or
dec
mov
test
lock
add
adc
in
fwait
lcall
repz
push
add
pushf
fdivrl
addr16
outsb
mov
iret
pop
jo
mov
dec
cwtl
shrb
inc
cs
stc
mov
cwtl
int
or
mov
or
jmp
xchg
in
lds
pop
pop
in
adc
scas
test
in
subb
pop
cwtl
pop
fmul
leave
leave
adc
je
cmpsb
nop
cltd
rcr
jbe
jne
cmpsl
push
call
lahf
cmp
or
jmp
mov
sub
xor
cmp
jb
jl
scas
pop
test
jmp
into
leave
insl
punpcklbw
aad
mov
vmread
subb
mov
dec
scas
nop
xor
enter
or
loopne
call
lock
pop
add
invd
in
pop
rorl
outsl
in
mov
xor
dec
jae
into
in
push
scas
pop
cmpsl
pusha
pop
push
pandn
fwait
setae
in
dec
pop
mov
mov
shr
jg
in
in
in
out
hlt
in
add
jns
cmpsb
jecxz
in
dec
rcrb
mov
in
inc
in
push
in
bound
add
jle
out
sub
push
out
jne
mov
js
rclb
fmuls
test
jns
leave
lock
scas
add
or
mov
nop/reserved
and
cmp
in
fildll
out
xor
adc
dec
out
jg
lahf
out
fsubrp
outsb
mov
add
popl
popf
pop
stos
or
out
mov
out
jns
out
jecxz
icebp
or
mov
lahf
or
mov
test
out
cmp
inc
out
enter
dec
out
pop
out
fs
sahf
aaa
jb
outsl
out
jge
mov
cltd
jns
out
or
jns
out
or
or
in
in
lahf
cmc
mov
in
sub
sbb
mov
jb
lock
inc
lock
and
lock
pop
jno
out
sahf
or
lea
fwait
lock
jns
or
in
enter
sbb
repnz
add
icebp
addr16
mov
icebp
cmp
scas
push
icebp
dec
and
dec
pop
xor
popa
xchg
dec
nop
lds
pop
adc
mov
imul
loopne
and
add
dec
mov
sbb
repnz
xchg
adc
repnz
repnz
repnz
jb
bnd
test
xchg
repnz
mov
repnz
aaa
jb
lret
repnz
out
or
js
dec
add
adc
adc
jns
out
adc
jns
adc
push
adc
jns
jae
sbbl
out
repz
and
mov
mov
jb
enter
repz
repnz
out
sbb
hlt
push
push
or
jns
out
sub
cmp
inc
xchg
out
or
push
hlt
hlt
iret
push
out
sub
xor
jb
out
push
or
pop
cwtl
jg
lahf
scas
hlt
dec
mov
hlt
hlt
aad
jecxz
lock
icebp
decl
mov
cmc
sub
inc
xlat
mov
dec
cmc
cmc
cmc
dec
dec
dec
dec
cmc
cmc
cmc
cmc
dec
dec
dec
dec
cmc
cmc
cmc
cmc
dec
dec
dec
dec
cmc
cmc
cmc
cmc
dec
dec
dec
dec
div
div
dec
dec
dec
dec
div
div
sahf
out
dec
testb
sbb
out
xchg
sbb
sahf
out
mov
out
sahf
aam
loop
lock
repnz
and
or
sbb
sahf
out
sahf
and
and
sahf
out
daa
inc
sub
out
sahf
out
sub
js
out
sahf
sub
sub
sahf
out
das
mov
mov
out
xor
xor
and
sahf
xor
xor
rorl
push
aaa
or
sbb
cmp
repz
cmp
iret
inc
cmp
cmp
icebp
cmp
aas
jnp
xchg
and
movsb
jg
xchg
sub
mov
movsb
psubb
push
enter
movsl
loopne
repnz
movsbl
clc
dec
movsl
dec
and
movsl
stc
fucom
mov
xchg
fucomi
orb
aas
inc
cmovs
pop
pusha
push
jo
orb
test
nop
pop
or
cmpsb
sahf
ja
xor
loopne
dec
dec
dec
call
mov
mov
xor
cli
cli
inc
bswap
leave
leave
leave
dec
push
sub
pop
and
in
cmp
iret
add
jo
mov
js
daa
inc
mov
mov
mov
outsl
add
jg
mov
insl
test
fs
cwtl
cmpsl
iret
jbe
cmpsb
jecxz
cli
dec
pop
loopne
inc
pop
and
scas
lock
or
xor
and
ja
push
add
movl
jns
push
sti
pushl
nop
out
jb
js
pop
mov
nop
fwait
mov
sub
das
psrld
clc
scas
lock
in
ss
cld
adc
sbb
jno
or
xor
ljmp
dec
cld
pop
andb
jb
js
out
pop
xor
cwtl
outsb
add
call
xchg
enter
stos
outsl
and
in
fs
pop
pop
push
out
inc
into
pop
adc
iret
sbb
es
test
push
add
std
push
sub
jp
std
ljmp
daa
js
or
fdivrs
cmp
mov
pcmpeqd
jb
rcr
mov
imull
inc
cmpsb
dec
pusha
and
cmpsb
nop
test
mov
inc
inc
incb
inc
inc
in
inc
inc
decb
lods
sub
xchg
sub
xor
lcall
jb
add
push
aaa
addps
jb
pusha
push
jp
inc
dec
call
cmp
mov
call
test
push
rorb
cmp
cwtl
pop
jo
psubb
sar
outsl
push
push
vmwrite
and
xor
out
sahf
out
pop
dec
or
jns
or
js
xchg
out
or
or
inc
jg
rorb
jne
pop
clc
dec
loopne
xor
loopne
jg
adc
prefetcht2
clc
aas
pop
invd
lods
mov
aad
pusha
scas
scas
bound
fcmovnbe
dec
scas
pop
addr16
jb
pop
mov
pop
jb
pop
loopne
or
test
pop
mov
mov
fsubrs
sar
mov
and
nop
dec
mov
add
sub
and
xchg
xchg
sub
or
in
add
pop
jl
and
dec
in
push
inc
xlat
push
pop
mov
scas
or
ds
inc
mov
pushf
dec
loopne
or
adc
or
mov
in
or
xlat
or
test
enter
shrb
and
cmp
xchg
sub
and
xchg
sub
inc
add
mov
aas
dec
push
fisubl
jg
iret
rcll
clc
fsubrs
and
push
mov
mov
inc
jo
pushl
and
pop
mov
enter
shl
cmp
daa
sti
or
pop
xchg
cmpb
xchg
push
negl
lods
jo
jg
aas
into
in
jbe
inc
dec
dec
outsl
push
in
xchg
lods
lcall
mov
sbb
adc
insl
lds
pushl
jb
lock
loopne
aad
cmp
cwtl
pusha
mov
mov
test
les
sub
mov
dec
xchg
dec
int3
insb
xor
mov
sbb
lock
mov
mov
jmp
and
pop
mov
and
cmp
repnz
push
jne
enter
mov
dec
scas
fcoms
dec
scas
nop
clc
cmp
mov
enter
dec
pusha
mov
dec
pop
mov
xchg
je
xchg
outsb
pop
add
mov
daa
stc
out
cld
shlb
enter
or
and
push
in
xchg
sub
dec
push
enter
mov
and
push
enter
mov
or
inc
leave
adc
xor
leave
adc
mov
loopne
pop
push
decl
cmp
pop
jo
scas
adc
outsl
dec
cmp
in
sub
mov
sub
mov
fsubs
mov
add
sub
pop
decl
mov
dec
pop
rcrb
sbbb
mov
jmp
pusha
notl
add
aad
mov
adc
dec
iret
clc
mov
in
mov
xchg
dec
and
push
dec
xchg
nop
mov
mov
loopne,pn
or
in
pop
and
or
mov
and
aaa
mov
xor
ljmp
repnz
dec
mov
xchg
flds
mov
and
or
mov
or
enter
jo
shlb
push
test
pop
xchg
push
in
in
cmpsb
scas
popf
lahf
fcmove
adc
mov
xchg
xchg
sub
inc
in
in
sub
jo
or
in
or
in
mov
pop
xor
ror
or
mov
test
push
dec
enter
cwtl
jmp
mov
or
mov
mov
fildll
xchg
lock
or
nop
dec
cmpsb
nop
shl
push
in
sbb
or
aaa
adc
aas
cwtl
shrl
rol
sbb
test
iret
and
jns
xor
aas
or
ret
inc
push
push
or
pop
ret
in
jo
stos
dec
inc
scas
enter
mov
cld
pop
in
adc
leave
mov
mov
pusha
fiaddl
ljmp
mov
loop
inc
roll
les
jbe
sub
sub
sub
xchg
mov
sub
js
scas
mov
adc
dec
and
fwait
dec
dec
and
sarb
push
insb
test
inc
out
adc
sbb
and
push
or
mov
or
js
and
repnz
mov
in
ljmp
js
jp
lds
repz
inc
scas
fsubs
fs
dec
mov
outsl
orb
es
mov
adc
pop
push
inc
psubusb
lods
push
lods
addl
jg
pop
fmuls
nop
push
aas
pop
jo
mov
dec
jmp
fmull
jmp
aaa
jp
subl
clc
sbb
dec
and
dec
inc
insb
pop
mov
dec
frstor
add
and
cmpsl
inc
outsl
mov
inc
scas
dec
mov
fadds
das
mov
in
dec
jno
or
sub
sub
adc
leave
push
leave
pop
mov
inc
ds
push
and
scas
inc
fcmovne
daa
fsubs
dec
bound
pop
stos
movlps
inc
push
or
sbb
xor
adc
xchg
lret
mov
mov
xchg
popa
imul
daa
mov
pop
xchg
jo
pop
outsb
or
sbb
call
test
jns
repnz
dec
lret
pusha
lret
jb
in
and
jae
scas
nop
mov
mov
jb
mov
or
cmp
or
mov
dec
je
jae
pop
fwait
aaa
jl
mov
mov
sub
dec
dec
mov
jae
mov
pop
push
pop
aam
sub
or
ja
mov
syscall
aam
je
daa
test
pop
pop
pop
jnp
inc
xlat
int
aad
inc
pop
cmp
mov
int
dec
test
movzwl
scas
adc
jnp
dec
dec
push
punpcklwd
push
imul
xor
sub
pop
push
cmp
cmp
add
xchg
mov
sarb
cmp
decl
push
add
mov
imul
pop
fcomps
pop
jmp
loopne
jmp
pop
iret
fistpll
iret
sbb
mov
adc
iret
or
xlat
in
and
or
mov
rclb
shrb
shrb
roll
inc
cmpsb
sub
jbe
push
addr16
pop
punpcklbw
mov
lds
lock
or
jbe
jmp
mov
fsubrs
rcrb
add
psllw
mov
adc
push
lahf
rcl
loopne
cmp
enter
daa
push
add
out
sub
pop
dec
push
pop
test
mov
negl
ljmp
dec
dec
scas
jo
sbbl
push
push
call
lahf
adc
test
dec
mov
scas
or
movsb
adc
rcll
and
inc
mov
jo
mov
loope
inc
scas
mov
enter
dec
repnz
rclb
aam
aam
cltd
xchg
adc
aam
push
inc
pop
es
adc
adc
decl
adc
cmp
mov
call
aam
cmp
aad
xor
jns
je
inc
push
aas
and
pop
or
aad
ljmp
adc
jo
in
jno
iret
fcom
lock
push
and
outsl
cmp
fadds
rolb
cmp
push
dec
scas
xchg
sub
adc
sbb
mov
adc
push
add
and
pop
push
nop
inc
adc
sub
xlat
or
insl
lahf
movsb
push
xor
arpl
fwait
scas
jge
xchg
jle
es
mov
fldcw
mov
mov
mov
adc
in
mov
and
nop
push
and
push
and
push
mov
movsl
push
dec
xchg
mov
push
fistps
cs
lcall
roll
or
mov
int
jge
mov
mov
lea
das
sbb
cmc
cmp
mov
neg
sub
das
popf
cmp
pop
add
sbb
inc
inc
inc
inc
inc
js
dec
dec
dec
dec
inc
cmp
dec
push
mov
popa
bound
gs
imul
jo
jb
je
jbe
iret
xor
js
jp
xor
xor
sub
sub
into
mov
add
pop
and
jecxz
gs
inc
les
je,pn
dec
mov
push
jg
inc
dec
lcall
push
insb
jne
and
clc
fstpl
jae
inc
jne
jb
mov
decl
dec
push
dec
dec
dec
and
outsl
jb
mov
mov
out
adc
and
xor
xchg
ja
mov
mov
out
fcmove
test
pop
push
lahf
fucomip
cli
mov
sbb
ror
in
sub
bound
adc
cs
push
push
adc
mov
push
inc
push
inc
pop
cmp
frstor
ss
jae
pop
ja
imulb
mov
sbb
gs
imul
popa
popa
mov
xor
lret
es
out
dec
add
inc
outsl
inc
and
mov
dec
das
dec
outsl
test
dec
sub
pop
push
movsb
popf
sbbb
sub
cmp
push
push
cmp
push
arpl
cmp
push
mov
sbb
iret
ja
mov
xor
mov
cltd
pop
sbb
sbbb
out
jg
scas
ret
loop
cmpsl
call
int3
mov
and
sub
imul
add
xor
fdivl
outsb
push
pop
add
mov
pop
mov
test
mov
ror
mov
mov
or
inc
mov
popa
fisubs
rcr
in
xorl
and
je
ss
js
add
outsb
addr16
ret
ret
cmp
xchg
and
jno
popa
sbb
sbb
jecxz
pop
jns
dec
jp
push
decl
divl
mov
adc
mov
in
and
cli
es
pop
pop
mov
int3
vmovapd
mov
ror
pop
aaa
mov
inc
dec
push
xor
push
cli
fs
lods
sub
popa
je
push
fisubl
gs
xor
jno
movsw
mov
lds
popa
sub
imul
pop
xor
jbe
dec
outsb
insb
pop
add
subl
and
inc
xchg
and
mov
outsl
add
adc
push
inc
inc
dec
and
jmp
js
data16
jb
insl
js
push
push
push
xchg
pop
cmp
es
and
cmp
inc
sub
xor
fmuls
mov
jb
xor
mov
outsl
sbb
ret
mov
repz
pop
mov
sub
push
shll
push
mov
mov
ret
xor
inc
or
hlt
and
call
push
mov
inc
inc
inc
jbe
fistpll
dec
adc
outsb
int3
arpl
pop
pop
push
scas
mov
cmp
icebp
pop
push
push
imul
xor
fs
push
jbe
sbb
sub
popa
or
pop
dec
adc
jae
dec
jbe
and
and
jo
es
and
int3
adc
inc
pop
shrb
shll
es
rclb
mov
inc
arpl
inc
roll
ja
add
adc
push
inc
dec
fsubr
pusha
dec
push
pop
inc
sbb
adc
inc
imul
inc
add
cld
fistps
mov
lds
scas
cmpsl
imul
mov
inc
or
dec
and
push
imul
pusha
mov
add
shrb
pop
and
aas
jb
inc
imul
out
cmp
add
je
mov
scas
inc
mov
mov
shlb
mov
push
popa
arpl
jbe
mov
mov
push
cltd
pop
mov
mov
push
insb
pop
aaa
imul
insl
jnp
jo
cwtl
jb
inc
xor
dec
jbe
ds
ds
mov
dec
cmp
mov
fs
subb
imul
pop
aaa
push
cmpsl
fldln2
loopne
dec
outsl
lds
and
jae
lea
insb
jp
mov
mov
popa
outsl
dec
inc
arpl
xor
lea
addl
jp
mov
icebp
cmp
mov
mov
imul
xor
push
push
push
lock
mov
movsl
shl
out
loopne
cmc
mov
rcr
jmp
fnstenv
dec
pusha
jns
dec
inc
dec
pusha
mov
mov
gs
lcall
mov
data16
rcrl
call
jmp
push
push
inc
push
subb
ja
jle
scas
pop
push
call
lock
stos
imul
fcoms
addr16
test
push
push
lret
push
mov
jb
ret
mov
outsl
data16
push
sub
mov
inc
sar
mov
iret
flds
ja
adc
jo
outsl
lods
cltd
jge
jbe
or
or
add
mov
mov
or
lcall
shrl
sub
sub
xor
out
push
inc
outsl
fistpl
cmp
outsb
mov
lock
out
je
mov
dec
outsb
addr16
outsb
test
or
out
push
lock
lock
lret
xchg
mov
test
inc
xor
cmpsl
mov
xchg
add
mov
mov
push
add
push
enter
push
or
mov
cmpsb
fldcw
imul
aaa
mov
loop
fistps
mov
mov
sti
mov
mov
add
loopne
mov
sub
mov
into
cli
xlat
mov
push
or
dec
ret
mov
inc
scas
je
adcl
ret
daa
jns
es
arpl
inc
push
dec
inc
dec
mov
mov
push
push
cmp
imul
push
push
and
outsb
push
xor
fcompl
inc
sub
insb
jne
addr16
mov
scas
cmpb
adc
jecxz
cmpsl
dec
inc
inc
repz
or
xor
push
ret
and
pop
popa
mov
mov
sbb
mov
dec
popa
xor
lods
cli
je
mov
jb
push
or
push
xchg
or
dec
pop
popa
sub
in
xchg
jmp
inc
imul
adc
xor
test
inc
xchg
and
xor
dec
mov
inc
push
inc
data16
dec
push
xor
adc
ljmp
push
push
jae
sti
dec
inc
js
mov
dec
push
dec
or
inc
push
push
push
dec
loopne
jne
pop
dec
pop
insb
push
pop
mov
adc
xor
push
cli
mov
sub
out
jp
mov
in
push
fs
divl
shrb
cmp
insb
and
loop
or
setge
push
dec
or
loop
or
push
inc
hlt
hlt
mov
push
jne
ret
test
dec
shlb
jo
pop
push
pop
mov
mov
inc
pop
jmp
xor
andb
xchg
add
dec
incb
fsubs
and
jbe
xor
std
jmp
dec
xor
outsl
add
lret
stos
xlat
or
or
out
ss
adc
inc
fmull
ret
adc
imul
or
or
daa
mov
cmp
lods
inc
or
add
pop
dec
jb
add
pop
adc
mov
repz
in
push
bound
inc
jne
mov
adc
jns
arpl
push
dec
jle
or
pop
outsb
out
pop
jae
or
dec
mov
repnz
and
mov
push
out
mov
mov
movsb
pop
and
xor
mov
mov
dec
push
cmp
push
ss
push
imul
loopne
sub
pop
inc
test
outsb
rorl
addr16
dec
inc
das
mov
dec
fmul
jo
xor
adc
or
fimull
notb
inc
cmp
and
sub
add
inc
push
bound
fdivrs
or
aas
outsb
mov
cmc
mov
jmp
xlat
cmp
test
mov
inc
bound
imul
inc
inc
and
cwtl
sub
push
mov
inc
jne
sbb
mov
outsl
cmp
mov
movb
mov
icebp
fimull
inc
xor
push
scas
sbb
les
sarb
push
jb
ja
and
push
fmull
data16
or
jb
cmpsl
push
fwait
jno
data16
test
inc
add
lods
imul
aaa
aaa
pop
clc
inc
enter
pop
cs
inc
push
test
push
enter
aaa
and
les
out
pusha
push
fidivrl
sub
pop
xchg
inc
mov
add
loopne
dec
push
xor
mov
jns
pop
mov
scas
dec
test
outsl
inc
subb
cmc
mov
ffree
outsb
mov
js,pn
insl
mov
or
jle
or
push
pop
rcr
mov
push
jne
xchg
cmp
popa
cmpsb
jo
rclb
jg
ss
xor
push
sub
pop
or
out
das
or
ret
rol
stc
mov
aad
mov
std
or
insl
repnz
and
pop
cmp
addb
jo
xchg
out
aas
cmpl
mov
sub
shrl
ss
sub
outsl
or
mov
insb
xor
pop
addb
cmpsb
das
xchg
add
mov
aaa
insl
push
adc
movzwl
inc
subb
cmp
push
push
or
fisttpl
push
fisubl
cmp
pop
outsl
add
fidivrl
sbb
jg
pop
inc
inc
test
or
das
adc
decl
das
out
fucomi
pop
in
pop
pop
outsl
das
bound
loopne
imul
adc
ja
push
and
pusha
aad
or
mov
xchg
out
push
dec
iret
sub
inc
ds
unpckhps
dec
outsl
push
imul
ss
pop
aas
pop
inc
inc
pop
pop
cmp
inc
mov
mov
xchg
ss
out
jg
sbb
dec
push
cmp
adc
sbb
push
or
das
adc
pop
shr
add
andl
ja
dec
dec
inc
push
dec
inc
iret
aas
sti
push
mov
mov
inc
inc
push
inc
fwait
xchg
mov
inc
filds
inc
shll
idiv
andl
xchg
data16
arpl
jno
push
dec
popl
mov
mov
pop
pop
add
mov
or
int3
xor
mov
das
into
dec
dec
arpl
inc
push
iret
and
shll
push
adc
mov
and
adc
movzbl
sbb
nop
cmpl
lods
mov
testl
sub
scas
fwait
push
rorl
sbb
aad
mov
andb
mov
je
pop
xor
das
sbb
xchg
xchg
fiaddl
dec
scas
pusha
and
dec
push
inc
xlat
and
pop
push
push
pop
in
enter
push
hlt
cmp
loop
xor
dec
ds
pusha
imul
and
inc
stos
pop
or
cmp
mov
inc
xor
ret
pop
das
imul
pop
lahf
add
add
pop
pushf
xor
mov
mov
dec
mov
sub
push
xor
inc
sbb
loopne
pop
inc
les
popa
jb
gs
ss
dec
icebp
das
addl
aas
jmp
push
pop
stos
ds
add
adcb
aas
pop
lahf
pop
shlb
adc
push
data16
roll
pop
aas
pop
mov
mov
lds
das
xor
or
movsl
push
sbb
aas
xor
push
aas
inc
xchg
pop
push
popf
cmp
mov
mov
adc
pop
sub
add
push
es
jo
push
mov
mov
pop
sub
mov
dec
mov
mov
rorl
loopne
sbb
lahf
inc
insl
bound
pop
push
sub
das
aas
rclb
pop
iret
cs
lret
sbb
sarl
test
dec
outsl
adc
iret
fisttps
cmp
jg
repz
mov
cmp
repz
pop
js
mov
repz
adc
xor
add
dec
push
dec
pushf
popl
sbb
das
shl
mov
aas
xchg
fildl
xchg
fisubl
or
cmp
mov
adc
aas
shlb
sbb
dec
arpl
push
sbb
dec
inc
pop
pop
xor
sbb
aas
dec
adc
xchg
lahf
dec
xchg
imul
jae
mov
or
dec
pop
inc
and
stos
stos
dec
pop
cmp
movsb
mov
fcomps
sub
add
add
mov
pusha
cmpb
das
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
pusha
daa
mov
cmovo
decl
mov
sbb
in
call
idivl
jle
adc
push
ficompl
push
pop
fisubrl
xor
aam
rcr
fsubp
stc
xor
push
add
push
jns
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
out
inc
ficoms
sbb
mov
iret
sarl
data16
hlt
lock
repz
repz
aam
mov
mov
movsb
pop
mov
out
xchg
nop
mov
out
jl
jo
iret
repz
sahf
pop
push
dec
mov
cmp
sub
repz
sbb
or
imul
mov
sbb
outsl
add
push
sub
bound
call
andb
adc
push
ss
add
adc
clc
insb
bound
ja
inc
pop
mov
jnp
push
mov
aas
test
mov
cmp
es
push
pop
inc
add
dec
cmp
inc
pop
add
or
mov
push
add
sub
jno
sbb
dec
push
add
and
subl
mov
add
ja
pop
push
and
add
add
pop
scas
rorb
cmp
pop
sbb
cmp
mov
nop
xchg
xchg
xchg
pop
sbb
scas
js
notb
orl
mov
jns
jne
imul
cmp
push
adc
iret
repz
in
push
out
sbb
sahf
out
sahf
js
jns
jp
jge
out
cld
and
adc
inc
sbb
sbbl
adc
jno
xor
xlat
add
adc
inc
incl
loop
add
push
inc
in
inc
adc
mov
dec
mov
fcmovnu
push
pop
pop
push
or
addr16
jns
out
pop
ja
mov
shl
xor
repnz
das
dec
insb
rcl
shlb
push
out
sahf
cmpsb
push
je
jo
push
pop
pusha
adc
out
sahf
out
push
dec
or
sahf
xor
jns
and
and
sahf
out
out
or
push
or
add
cld
imul
repz
repz
sbb
push
iret
repz
fcoml
aam
shlb
push
xlat
repz
and
push
jg
int
int3
psubb
out
pop
xchg
movups
xor
testb
cld
out
push
aaa
repnz
add
addl
lahf
test
fwait
push
dec
rorb
jp
jg
push
sti
pusha
ja
pop
add
add
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
and
xchg
clc
repz
mov
subb
fwait
xchg
and
and
aad
int3
add
sti
aas
jno
or
mov
fisttps
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
incl
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
call
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
push
inc
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
lock
jmp
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
incl
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
std
incl
gs
std
orl
pop
ficomps
frstor
test
add
push
or
movsb
mov
mov
ss
and
insl
push
add
outsb
sar
aas
xchg
add
fs
dec
gs
dec
or
das
dec
das
sysret
fxch
insb
lods
movsb
clc
xchg
mov
imul
jae
dec
adc
mov
push
adc
sub
and
inc
pushf
mov
mov
mov
xchg
jg
outsb
xor
add
mov
add
mov
gs
xchg
cmp
and
pop
cmp
ja
xorb
jmp
add
adc
outsb
or
push
gs
xor
sbb
xor
add
add
push
ljmp
push
add
ds
aas
addb
adc
in
inc
lods
in
lds
inc
inc
add
mov
inc
add
adc
insl
or
or
push
lret
addl
mov
cwtl
ds
pop
bound
lock
mov
mov
mov
jbe
loop
idivb
out
add
xchg
and
sub
ds
fistl
das
sub
aaa
sub
popf
add
adc
mov
add
or
js
adc
fisttps
add
mov
sbb
xchg
inc
mov
pop
rorb
das
inc
ret
inc
push
invd
or
lock
mov
lcall
sahf
mov
push
adc
test
add
aaa
pushl
pusha
inc
add
aaa
loope
fsubp
add
mov
hlt
dec
jbe
adc
pop
aas
repnz
push
aas
jns
or
xor
push
ds
dec
insl
and
or
cli
push
mov
inc
notl
push
je
insb
das
pop
out
loope
shlb
push
icebp
push
lock
clc
mov
ljmp
adc
stos
stc
pop
add
rolb
add
fucomip
aaa
xchg
adc
add
adc
js
adc
enter
pushf
int
add
adc
sti
enter
cs
lods
rcrb
mov
imul
ljmp
xor
sti
sub
stos
mov
or
sub
daa
push
jge
jecxz
pop
add
inc
negb
cli
pop
jb
inc
jg
stos
mov
xor
mov
mov
lcall
cmpsb
cmp
cmp
imul
stos
push
jne
mov
mov
or
scas
inc
xchg
addb
add
mov
js
mov
aad
inc
xor
cmp
je
ja
or
push
xchg
or
inc
incl
add
ffreep
icebp
add
adc
add
add
mov
ret
push
aad
adc
mov
cmp
leave
add
and
push
add
inc
cmp
sub
dec
add
or
or
push
popa
inc
inc
cmp
add
cmp
jge
mov
mov
and
inc
push
lahf
addb
pcmpeqw
inc
rolb
and
dec
adc
je
or
ret
sbb
andb
ret
add
add
test
and
sub
add
dec
and
jne
and
out
roll
sub
or
shlb
incl
or
subb
pop
xchg
aaa
push
mov
add
xchg
shll
dec
sbb
and
cmp
mov
xor
sub
mov
inc
inc
dec
subb
jg
mov
push
sub
push
lahf
sub
movl
fisttpll
cmp
add
xchg
or
loope
push
and
mov
inc
dec
or
push
dec
es
fs
inc
xlat
sahf
and
test
stos
lds
test
test
mov
flds
sti
sbb
insl
inc
push
lods
cmp
add
dec
lahf
fs
enter
dec
shll
inc
add
out
adc
fstpt
mov
sbb
inc
add
cmpsl
mov
or
jne
adc
or
fbstp
push
push
loope
out
sbb
orl
adc
and
inc
inc
adc
inc
and
add
popa
inc
dec
xchg
pop
push
lahf
mov
mov
sub
pop
inc
aad
add
addl
xor
mov
xor
orb
mov
and
adc
xor
or
push
mov
sbb
cmp
xor
subb
add
add
inc
les
inc
int3
or
fists
adc
mov
lahf
push
push
xor
cmp
cmpsl
sbb
mov
sub
stos
sbb
sbb
sbb
push
jg
adc
inc
mov
adc
aad
add
daa
jo
sub
or
sbb
adc
or
pop
pop
cmp
cmp
mov
imul
or
test
or
fld
mov
pop
mov
fstl
aad
add
adc
inc
and
dec
add
sub
aaa
dec
pop
xchg
push
xchg
shl
sub
and
or
mov
test
add
push
pop
mov
ret
push
adcl
pop
cmp
adc
fs
pusha
adc
lahf
adcl
sub
add
push
and
popf
push
add
lea
popf
lret
xchg
mov
push
or
cmp
and
mov
and
shrl
push
sbb
inc
xor
mov
inc
mov
lea
adc
add
inc
enter
push
sbb
ret
dec
outsb
arpl
test
fwait
dec
inc
push
stos
lahf
inc
addl
push
lret
jno
and
or
pop
mov
inc
xor
arpl
subb
leave
add
push
add
test
orb
orl
push
jmp
xchg
push
aad
lahf
adc
sub
mov
or
add
out
out
add
repz
aad
mov
lods
lahf
sub
ret
push
lahf
dec
dec
mov
or
test
or
push
adc
or
nop
push
jb
cmp
orl
jg
ret
cmp
and
adc
xchg
lods
andb
fiaddl
pop
mov
incb
mov
cmpb
pop
and
add
cld
push
test
in
or
push
xor
addr16
cli
add
clc
adc
imul
sub
cli
push
adc
test
cmp
aas
cltd
mov
add
imul
jmp
aad
adc
movsl
lahf
mov
cltd
and
shll
jmp
out
cli
mov
push
adc
movsb
jg
cmpb
iret
roll
into
into
shrb
adc
sub
movsl
ss
test
stos
lahf
or
test
dec
les
push
ret
adc
push
add
push
mov
lahf
stos
dec
shll
lahf
lods
push
addl
pop
ss
aas
mov
cltd
jne
stos
adc
add
add
push
sub
lahf
adc
test
xchg
pop
or
mov
lahf
push
inc
shlb
cmp
les
cmp
push
fildll
les
adc
mov
push
and
and
test
add
add
andl
pop
xchg
sub
aas
and
test
add
stos
orb
loop
xchg
incl
add
cmpb
inc
push
add
pop
inc
and
sub
and
andl
add
sub
cmp
inc
and
cmp
and
mov
jmp
adc
xchg
inc
push
int
adc
push
mov
rorb
mov
es
or
mov
add
adc
inc
and
pop
xchg
sub
test
mov
xchg
test
add
sbb
xchg
inc
je
adc
dec
sub
adc
decl
and
or
mov
push
mov
lahf
and
adc
push
dec
inc
inc
filds
mov
les
aas
mov
mov
adc
enter
adc
sub
sbb
mov
or
mov
dec
inc
inc
add
dec
adc
sub
push
popa
pop
and
adcb
cld
xor
test
adc
add
sbb
cli
stc
dec
inc
mov
jne
add
pop
cmp
jae
cmp
incb
inc
or
add
rcll
push
dec
adc
stc
add
divl
or
leave
add
enter
sbb
sbb
inc
bnd
xlat
mov
mov
test
fists
mov
das
stc
mov
lea
mov
add
inc
adc
push
sub
sub
out
add
fcmove
or
or
add
cltd
jns
sbb
or
jmp
jns
call
mov
fildl
pop
add
sbb
mov
mov
shl
xchg
fimull
sub
or
inc
jb
ja
imul
in
in
arpl
out
add
pop
xchg
ret
xor
inc
mov
add
mov
ret
add
adc
push
adc
inc
jnp
xor
imul
push
add
mov
adc
jb
out
jecxz
pop
lcallw
or
loopne
fmul
pop
fisttps
fiadds
fisttpll
add
mov
or
cmp
pop
lods
fsubs
jmp
mov
xlat
add
mov
lret
and
xor
or
add
pop
xor
jno
jecxz
and
or
in
pop
das
or
test
movsl
sbb
loope
mov
sbb
aad
mov
mov
inc
adc
xorb
xor
add
mov
xor
add
push
in
test
aad
mov
in
lahf
mov
mov
add
fcmovnu
add
xor
and
xlat
fcmovnbe
aad
aad
aam
rcl
rolb
rcl
roll
ror
iret
add
into
ds
repnz
int
int3
lret
lret
add
leave
leave
nop
fbld
enter
mov
pop
add
les
add
cmp
imul
and
inc
push
mov
sbb
addb
popa
enter
gs
pusha
daa
arpl
lds
dec
pop
ja
mov
mov
jnp
push
loop
add
sbb
sbb
cmp
pusha
mov
add
nop
add
add
mov
sub
inc
mov
outsb
sbb
roll
xchg
mov
mov
out
add
shll
push
xor
inc
push
xor
inc
or
mov
leave
inc
add
jb
adc
ss
cmp
inc
cmp
aas
push
aas
aaa
xor
aaa
xor
enter
xor
dec
mov
xor
cmp
cmp
cmp
xchg
cmp
cmp
sub
lret
das
cmp
add
inc
push
push
test
sbb
add
and
iret
das
sub
xor
xor
jl
or
jecxz
jnp
add
shl
mov
movsb
sbb
add
in
mov
ret
adc
pop
inc
mov
mov
push
xchg
inc
adc
xchg
xchg
stos
je
jnp
pop
adc
xor
cmp
aaa
sub
mov
add
sub
insl
add
and
test
add
ja
mov
push
out
mov
push
movsl
iret
leave
push
lods
stos
push
ret
mov
stos
mov
inc
stos
inc
push
mov
lahf
add
add
adc
and
stos
or
daa
or
adc
mov
jns
subb
roll
mov
mov
aad
movsl
and
adc
adc
stos
lahf
adc
movsl
bound
mov
xor
leave
cmp
and
xor
pop
inc
lds
inc
add
mov
mov
inc
push
nop
cmpsb
mov
and
mov
and
xchg
lcall
mov
jae
shrb
xchg
sub
sti
inc
cmp
xor
inc
sti
lods
xor
lea
or
movsb
or
inc
push
test
sarb
lcall
outsb
pop
sbb
sbb
jge
add
test
sbb
jno
sub
repnz
push
xchg
mov
push
inc
xchg
insl
or
xchg
movsb
or
or
test
pop
or
cmp
incl
and
je
adc
lret
cld
pushl
inc
roll
fistl
faddl
fidivrl
dec
aad
cmp
add
mov
stos
pop
sub
adc
sub
add
push
push
shll
or
aas
inc
les
adc
and
movsb
xor
daa
xor
sub
cmp
sbb
ds
mov
lcall
arpl
jnp
jmp
xchg
je
ljmp
sub
les
push
push
popa
push
and
test
adcb
rorl
les
mov
out
mov
lds
adc
push
or
femms
or
adc
adc
das
sti
mov
ljmp
sub
adc
sbb
sbb
sbb
sbb
pop
add
lcall
add
cmovp
push
mov
or
sbb
fsubrs
daa
loopne
dec
jmp
lock
push
arpl
push
dec
in
cmp
in
and
or
iret
add
sub
lahf
movsb
mov
and
adcb
subb
out
xor
lahf
adcb
adc
addr16
adc
mov
add
and
into
xor
ds
or
sub
pop
shlb
mov
in
or
stos
test
clc
mov
inc
inc
in
dec
inc
jmp
cmp
sub
in
adc
add
aam
add
out
and
leave
mov
pop
rolb
add
aam
fwait
jmp
xor
mov
sbb
xchg
xor
sub
aad
leave
movsb
mov
ja
add
and
sarl
adc
add
shll
pop
ds
jae
xor
sbb
push
fbstp
xor
add
pop
add
add
xchg
xchg
lock
stc
call
push
sub
sbb
fiaddl
add
sub
sub
jae
mov
fs
mov
inc
inc
dec
sub
inc
insl
stos
adc
push
testl
push
lahf
or
mov
or
fs
test
subl
bound
add
imul
sbb
cmpsb
imul
movsl
imul
push
push
pop
add
mov
pop
pop
xchg
out
add
icebp
cmp
cli
or
incb
fiadds
or
leave
add
les
and
xor
or
negl
sub
sub
or
jns
inc
push
xor
inc
and
sub
test
jle
movsl
xor
shll
dec
es
xor
shrl
xor
xor
std
sub
xor
pop
sbb
faddp
sar
idiv
pop
xor
mov
ret
mov
push
adc
icebp
stos
pop
xchg
adc
rorl
add
out
sub
jbe
rclb
jg
cwtl
adc
or
fists
add
sub
xchg
and
lea
dec
xchg
je
pusha
inc
neg
inc
xor
add
mov
adc
add
inc
add
imul
imul
pop
lcall
adc
fmul
clc
call
add
cmp
jmp
pop
out
sbb
aam
sbb
lock
addb
jge
hlt
pop
add
sbb
sub
ja
leave
mov
adc
cmp
sub
imul
imul
aad
push
xor
sbb
xchg
xchg
push
add
and
sbb
cltd
fisubrs
adc
dec
shll
inc
inc
pop
mov
dec
inc
dec
inc
and
mov
and
fidivs
in
sub
cmp
stc
sub
testl
cld
cmp
nop
test
xor
sub
jns
push
and
sbb
push
mov
and
adc
push
mov
push
imul
and
scas
add
sub
sbb
jmp
xchg
popa
out
lcall
add
sub
add
lahf
sarl
aaa
add
pop
adc
xor
push
and
sub
dec
shll
imul
mov
insb
add
lea
jecxz,pn
ds
ss
dec
xor
jecxz
clc
push
ss
push
xor
dec
and
gs
fcmovbe
std
sub
aam
pop
inc
repnz
mov
ljmp
add
push
stos
push
push
test
and
stos
aad
stos
push
jno
jnp
push
stos
shll
and
adc
pop
orl
push
and
inc
gs
and
or
sub
push
shll
cmp
dec
inc
inc
pop
ljmp
push
inc
jmp
dec
imull
sti
insl
push
jno
pushl
pushl
filds
inc
incl
jle
cli
addr16
negl
in
sub
sub
add
adc
inc
and
je
or
fwait
xchg
cmpsl
inc
xchg
pop
stc
pop
test
mov
add
and
cwtl
xchg
fistps
inc
xchg
add
test
cs
subb
pop
bound
gs
ret
mov
adcb
sub
sub
lcall
lea
mov
ja
xchg
jp
xchg
add
xchg
jae
mov
rcr
cli
push
inc
jmp
daa
push
ljmp
fs
inc
and
mov
dec
jecxz
push
notl
mov
aaa
lahf
mov
inc
sbb
inc
ds
lods
sahf
dec
inc
inc
sub
and
fisubrl
cmp
xor
xor
imul
sbb
add
pop
data16
lods
insl
pop
hlt
popf
cld
mov
lods
mov
xchg
ljmp
movsl
or
mov
jne
mull
and
sub
scas
inc
aaa
and
stos
inc
add
add
inc
cmp
cwtl
mov
stos
lahf
jmp
test
das
dec
cmp
inc
movsl
or
push
dec
pop
and
jne
outsl
mov
les
xchg
lahf
sahf
add
sub
push
inc
imul
and
add
shll
cmpsb
sub
pop
popa
ds
insb
push
jmp
push
outsl
xor
mov
cmp
pop
cmp
pop
lcall
sti
cmp
add
pusha
ds
dec
sub
aas
xor
rolb
repnz
ds
push
int
fisttps
test
lcall
inc
in
add
pop
addr16
adc
inc
inc
inc
add
nop
or
dec
lahf
inc
inc
mov
dec
sti
sub
das
add
imul
inc
or
xchg
cli
and
push
cmp
or
cmp
xor
rorb
and
sub
fwait
mov
xchg
push
push
inc
mov
mov
mov
cmpl
push
add
adc
pop
ljmp
xchg
mov
push
ret
fidivs
add
push
dec
bound
pop
aam
cmp
or
xor
test
push
dec
and
nop
stos
mov
mov
movsb
push
inc
inc
daa
xchg
and
and
es
cmpsb
imul
imul
cmpsb
imul
mov
cwtl
and
cmpsl
pusha
int3
aam
pushf
test
and
subl
and
xlat
add
ret
inc
add
push
inc
inc
inc
push
mov
jo
push
sbb
xchg
cmpsb
jne
and
sbb
scas
int3
xor
sub
lock
adc
test
push
inc
push
mov
push
inc
or
fcompl
push
xchg
xor
rdmsr
sub
xor
sub
sbb
cmp
mov
pop
icebp
push
nop
addb
xor
and
push
add
adcl
adc
pop
pop
or
arpl
jae
xor
shll
ret
shll
push
repnz
pop
sbb
imul
ret
and
stos
mov
push
or
arpl
push
fadd
inc
mov
inc
adc
push
inc
aam
push
mov
mov
and
and
lahf
push
xor
imul
cmp
pop
pop
ljmp
into
push
xchg
xchg
add
fidivl
dec
sar
xchg
or
sbb
cmpsb
imul
fs
mov
add
sub
add
mov
insl
repz
xchg
sub
aas
lahf
or
rclb
inc
or
inc
cmp
inc
add
mov
orl
inc
push
dec
inc
mov
cld
jg
jp
jle
arpl
mov
in
fwait
mov
add
icebp
jnp
enter
and
add
cs
lahf
hlt
test
add
into
and
xor
call
add
mov
cmp
test
mov
lahf
inc
and
rorb
add
stos
pop
arpl
and
and
mov
lea
push
dec
lea
fldcw
jns
cmpb
jo
or
sarl
add
es
dec
sar
jmp
cs
jae
inc
incb
or
mov
or
ljmp
ret
mov
adc
and
push
add
popa
scas
inc
cmp
dec
pusha
shlb
push
adc
popf
inc
and
xor
mov
xchg
inc
sub
dec
add
inc
mov
mov
dec
cmp
or
cs
cmp
dec
sti
jge
mov
test
xchg
stos
popf
cltd
xchg
jle
dec
inc
inc
add
pop
mov
cld
idivb
dec
shll
jmp
into
xor
cmp
ret
cmp
jnp
ret
xlat
or
adc
cs
jmp
stos
ret
cs
cmp
lret
push
push
ss
int
mov
cs
inc
inc
inc
pop
pusha
mov
cmp
xorb
icebp
das
pop
sbbl
mov
mov
lods
push
pop
lock
sub
jmp
xlat
pop
mov
mov
mov
shll
xlat
inc
cmp
jecxz
test
shr
lcall
xor
jbe
jbe
xor
and
dec
movsl
pop
or
cmc
add
mov
mov
jge
das
xor
and
out
lea
pop
sbb
and
sbb
xchg
mov
aad
jno
sub
lahf
pop
dec
dec
push
inc
mov
lea
cmp
std
jg
lea
xchg
lea
mov
add
sbb
push
and
jb
dec
rol
aam
std
adc
dec
mov
add
mov
adc
inc
aad
mov
rcl
sub
lret
inc
push
fildl
aad
movsl
pop
add
or
mov
mov
shrl
mov
inc
movsl
mov
in
xchg
xor
test
xchg
xor
sbb
shll
fisubrl
add
or
dec
dec
and
mov
fnstenv
jbe
ja
shll
sub
and
cmp
aad
imul
or
icebp
mov
test
sbb
xor
shll
add
mov
push
jmp
sbb
dec
loope
fidivrl
dec
dec
add
div
into
cmp
sbb
rcrb
mov
jle
mov
push
mov
mov
mov
ret
incl
sub
sub
dec
dec
inc
or
cmp
dec
fstp
fwait
std
inc
aas
inc
inc
cmp
inc
cmp
cmp
sarl
pop
adc
cmp
int
cmp
sbb
sbb
sbb
mov
adc
gs
lea
mov
bound
lods
and
add
test
jmp
or
int
xor
imul
cmp
test
sti
pop
out
sub
sbb
sub
push
pop
jns
int
mov
addl
jno
mov
das
sub
pusha
xor
inc
adc
add
mov
mov
add
adc
dec
imul
inc
sbb
nop
das
xchg
pop
fnstsw
pop
negl
xorl
popa
adcl
ret
pop
push
dec
dec
push
popa
cmp
fldt
outsl
sbb
and
xchg
ljmp
imul
dec
jnp
roll
mov
dec
loope
insb
cs
and
push
jbe
call
testb
fmul
mov
push
fnstcw
js
lahf
cmp
cltd
adc
cmpl
test
sbb
push
imul
insl
pop
mov
mov
fcmovnu
or
jecxz
sbb
sub
pop
out
lods
addr16
sub
sub
dec
adc
lods
andb
lea
mov
notl
mov
in
fwait
pop
mov
dec
cmp
dec
jno
fcoml
icebp
adcl
pop
adc
imul
lret
fwait
insl
das
insl
or
sub
shll
push
jecxz
xchg
mov
fnstenv
mov
insl
mov
or
ror
sbb
popa
fwait
rcrl
aaa
or
jmp
pop
push
dec
repz
cmp
or
dec
and
cmp
lcall
sub
adc
mov
in
add
test
xor
mov
add
out
ljmp
jle
enter
push
push
sub
and
cs
inc
ds
and
add
pop
ja
sbbl
mov
stos
insl
imul
xor
bound
push
or
pop
pop
ret
pop
fiaddl
repz
enter
jecxz
pop
mov
ss
add
add
pop
sti
shlb
sub
fstps
test
mov
and
insl
mov
sbb
adc
pop
or
rcrl
int3
mov
insb
adc
int
loope
push
jne
dec
inc
mov
stos
stos
jge
lahf
pop
xor
pop
fsts
pop
orl
in
incl
inc
inc
inc
inc
inc
add
in
cmp
sbb
fimull
shll
lret
sub
lcall
add
add
adc
decl
pushf
mov
inc
lods
subb
pop
jecxz
dec
dec
mov
fidivrl
cmp
rcr
mov
movaps
or
jno
cmp
inc
add
insb
lret
dec
dec
add
popf
cmp
mov
filds
and
adc
push
rcrl
sbb
add
aaa
pop
inc
mov
inc
mov
add
loopne
jg
fisttpll
push
das
andb
cmp
icebp
add
pop
imul
outsb
mov
jno
cmpsl
ja
lods
test
fsubrs
and
xor
lahf
popa
push
push
dec
aas
cmp
cmp
mov
add
sub
sub
std
fldl
test
ds
cmp
dec
xor
jne
add
test
adc
addb
pop
dec
jnp
cmpsb
add
fistps
scas
lods
lods
sbb
sbb
sub
fdivs
xchg
notl
sub
pop
and
mov
pop
or
sbb
pop
lock
subl
mov
outsl
gs
inc
mov
pop
pop
cmp
lods
test
gs
movsb
insl
outsl
sub
mov
in
sub
lds
outsl
fcmovnu
fsubrs
or
pop
push
jne
fnstenv
add
xor
lods
pusha
cmp
push
jmp
in
insl
das
push
pop
das
sti
sbb
mov
sbb
loop
mov
mov
dec
insl
jge
divb
jecxz
mov
dec
rol
cmp
mov
popf
lret
popl
cmp
xor
ja
rcrl
sbb
in
pop
ja
test
pop
pop
mov
add
push
stos
lds
arpl
dec
lds
sbb
outsl
scas
mov
add
inc
ds
inc
inc
inc
inc
test
add
data16
xchg
mov
movsb
loope
sahf
and
inc
cmpsb
imul
xor
mov
fst
inc
xlat
adc
push
nop
jbe
das
inc
xor
sarb
jge
dec
pop
cmp
jmp
adc
mov
cmp
pop
fcmovnbe
xor
push
lock
sbb
rcrl
imul
fldt
gs
ja
mov
sub
sub
adc
jno
mov
dec
imul
push
jmp
xchg
ja
lock
cs
cmpsl
mov
inc
int
inc
lds
sbb
sti
cmpsl
sub
adc
jecxz
xchg
iret
test
sub
shrl
pop
mov
mov
fs
push
jnp
mov
testb
or
ss
adc
fstpt
or
pop
das
pop
jne
push
sahf
sti
cmp
ds
aas
shll
inc
inc
add
inc
mov
movsl
ret
mov
xchg
pop
cltd
mov
cmp
xchg
jbe
stos
ret
xor
nop
or
mov
out
adc
jae
mov
jnp
lods
cmp
das
jnp
out
mov
sbb
dec
add
or
mov
loopne
sar
fstps
insb
sub
jge
sub
xor
ror
sbb
imul
xor
gs
and
xor
mov
jae
and
jnp
fstpt
mov
cmc
dec
inc
sbb
mov
sbb
add
shll
xchg
adc
jae
lcall
jbe
inc
fldt
xchg
aas
sti
sub
push
mov
inc
stos
sub
iret
imul
jae
mov
sub
add
push
xor
jne
jo
or
dec
sbb
cmpsb
imul
pop
outsl
cmp
cmpsb
imul
mov
push
inc
aas
fwait
sti
lds
mov
cmp
pop
or
and
outsb
mov
xor
ja
push
xor
adc
fcmovnbe
sub
ret
mov
inc
stos
fstpl
add
jge
inc
sbb
xchg
push
gs
insl
das
ja
xlat
jmp
outsl
sub
pusha
ret
fidivrl
inc
adc
and
ret
xchg
pop
shll
pop
and
xchg
stos
and
int
adc
adc
ja
imul
lahf
in
xchg
mov
sub
push
mov
lods
cmp
pop
std
ficompl
cmpsb
test
dec
adc
sarl
mov
arpl
popa
popf
stos
lahf
addr16
pop
push
push
add
ficomps
add
push
sbb
mov
inc
add
shrl
outsb
cmp
movsl
int
adcb
mov
cltd
mov
lret
jecxz
out
xchg
adc
das
and
fwait
add
sbb
sbb
sub
insl
ja
imul
pop
sbb
cmp
mov
adc
shr
inc
mov
insl
adc
cmp
adc
inc
and
and
pop
mov
push
and
push
sub
jnp
or
jo
sub
test
test
mov
inc
and
push
xor
cmp
jmp
adc
sub
adc
rolb
imul
push
test
pop
inc
ds
add
add
fisttpll
push
add
fwait
in
sub
ja
aad
sti
mov
gs
dec
push
dec
dec
inc
inc
mov
js
push
aas
dec
dec
add
out
lods
out
mov
mov
cs
inc
sub
inc
insl
inc
shlb
add
int
andl
dec
sbb
rcr
xorl
or
lods
pop
xorb
add
add
out
movsl
or
sbb
loope
insb
or
push
or
sub
mov
mov
mov
and
mov
popa
or
leave
testb
ret
inc
ja
or
inc
rol
imul
sub
push
mov
mov
ja
movsb
add
pop
push
or
fidivl
sub
shlb
adc
insl
idivb
dec
lods
dec
dec
inc
dec
mov
sti
mov
add
fdivs
inc
fidivl
imul
fcmovu
fidivl
movsl
in
imul
mov
adc
ja
pop
mov
adc
imul
push
mov
mov
xchg
dec
dec
inc
inc
or
add
xchg
or
int
inc
pop
fisubrl
cmc
rcrl
lds
inc
push
adc
inc
xchg
andb
mov
inc
dec
sbb
mov
mov
cmpsl
aas
inc
insl
mov
mov
push
por
daa
mov
add
push
lahf
insb
pusha
pop
push
inc
aas
add
inc
inc
or
or
adc
filds
and
or
push
pop
inc
inc
mov
inc
push
and
out
dec
imul
mov
out
cmp
mov
mov
push
jo
xchg
sar
mov
mov
mov
and
jnp
faddl
insl
insl
jnp
cmpsl
mov
push
and
out
xlat
mov
dec
aad
and
inc
xor
inc
pop
or
and
or
inc
stos
pusha
adc
insl
outsl
insl
add
ficompl
or
xor
pop
sbb
lods
push
push
shl
push
sbb
add
mov
sti
ret
pop
ficoml
cmpsb
mov
insb
dec
add
push
and
popa
pop
std
insl
pop
xor
mov
in
pop
push
add
adc
xchg
inc
gs
das
inc
in
not
mov
lods
lods
out
and
mov
es
cmpsl
inc
inc
cmpsl
lea
jecxz
mov
inc
jmp
or
mov
mov
out
adc
adc
insl
stos
loope
or
imul
push
lods
cmpsl
and
ja
mov
adc
mov
and
stos
dec
push
mov
int
adc
inc
sub
mov
aas
xor
adc
insb
sti
mov
cmpsb
mov
aas
orb
add
sub
push
push
dec
inc
inc
add
mov
mov
adc
sbb
inc
sbb
mov
cmp
pusha
insl
insl
lret
inc
inc
inc
sub
cmc
dec
adcb
pop
or
mov
shrl
fcmovu
push
lods
pop
fwait
loopne
lods
mov
cmc
and
push
test
jns
push
or
xor
mov
orl
fcoms
lds
insl
fisttpl
and
arpl
push
mov
bound
shlb
imul
pop
or
and
fisttpl
stos
int
jge
fadds
cmc
mov
xchg
fwait
in
and
add
inc
cmp
xor
insl
dec
insl
aad
pop
imul
lods
sub
test
cs
shrl
fsub
add
fidivrl
pop
faddl
add
out
xorl
adc
fcomps
add
and
ret
leave
or
inc
sbb
mov
mov
add
lds
cs
sub
ffreep
sub
aas
pop
mov
xchg
inc
mov
push
inc
inc
push
add
inc
add
push
dec
dec
inc
push
das
add
dec
fcomi
fidivrs
and
sub
mov
mov
cmp
insl
pop
lret
fcompl
pop
pop
nop
mov
push
outsl
fnsave
sbb
lds
lods
insl
sub
and
jecxz
jecxz
negl
mov
fstpt
adc
xchg
arpl
insb
sbb
add
push
xchg
aad
and
jmp
loope
and
add
lea
xchg
xor
inc
xor
in
imul
pop
dec
mov
pop
jnp
mov
imul
notl
aad
adc
mov
mov
mov
inc
sub
pop
xchg
pop
in
and
xor
dec
cmp
addr16
mov
mov
push
add
dec
mov
mov
adc
xor
dec
jg
bound
add
ficomps
pop
insl
mov
sbb
mov
ss
jno
or
insl
fistl
lret
or
push
push
add
mov
pop
lods
mov
inc
or
inc
shll
sbb
push
dec
or
adcb
ret
xchg
imul
sbb
andl
mov
test
dec
inc
xor
xchg
and
xor
pusha
pop
sub
fistl
xchg
cmc
ret
pop
mov
out
sub
xor
xchg
mov
roll
mov
mov
or
xchg
popf
mov
pop
dec
inc
add
dec
inc
pop
push
dec
sbb
sub
pop
pop
add
jbe
fs
andl
pop
xor
mov
xor
mov
jnp
and
mov
and
mov
pop
lods
fstps
mov
cmpb
dec
movsl
adcb
popa
xorb
inc
pop
or
push
testl
and
stos
and
rcll
push
bound
ficomps
mov
mov
fimull
inc
mov
jne
lahf
adc
adcb
or
sub
scas
imulb
gs
dec
inc
add
pop
dec
push
inc
imul
addb
notb
inc
bound
or
inc
addr16
inc
inc
lcall
and
insb
or
and
push
inc
jecxz
dec
stos
mov
add
pusha
fninit
lods
roll
and
inc
stos
rorl
xchg
sub
mov
imul
enter
dec
jno
in
jge
add
dec
in
pop
mov
sub
dec
inc
add
in
cmp
pop
dec
or
ss
and
insl
out
mov
add
mov
inc
xor
lods
or
sbb
aaa
mov
push
nop
rcrl
jecxz
loopne
pop
mov
scas
jbe
sbb
cmp
xchg
add
mov
adc
xor
fcomps
rclb
or
arpl
inc
xlat
mov
pop
sub
rorl
or
or
push
or
push
mov
pop
lds
lret
mov
jecxz
mov
dec
xor
xlat
pusha
inc
xor
fadd
push
mov
loope
repz
test
jmp
and
add
jge
movsb
movsl
or
mov
xor
movsb
lea
ljmp
and
jns
addr16
dec
inc
pop
add
dec
or
inc
pop
fdivrp
fnstsw
dec
or
test
test
pop
sub
adc
push
popl
add
pop
imul
std
jp
imul
add
xlat
jge
jbe
pop
or
ja
add
xor
fs
xor
lcall
inc
sbb
pop
add
mov
mov
fldenv
pop
imul
mov
gs
sbb
push
sbb
in
mov
in
adc
sub
inc
and
xlat
sbb
nop
das
shr
insl
out
popa
jnp
fstl
fidivs
addl
addl
pop
and
jae
adcb
jecxz
sub
sub
cwtl
pop
jmp
mov
cmc
sti
jns
js
addb
dec
and
mov
mov
lret
addr16
push
mov
out
xchg
sbb
sti
gs
inc
xor
das
fnsave
stos
pop
adc
imul
xchg
popa
pop
imul
filds
jge
ja
jp
stos
sub
insb
mov
dec
dec
pop
ss
or
adc
add
jge
pop
inc
sbb
inc
int3
mov
cmp
scas
sbb
add
arpl
enter
movsb
fwait
cwtl
xchg
fs
out
sub
fstl
add
mov
cs
cmpsb
inc
iret
pop
fdivr
les
push
push
inc
cmpsl
pop
push
push
sbb
add
fnstcw
and
into
and
das
xor
pop
sarl
pop
xchg
dec
cs
add
sbb
insl
out
or
and
or
sbb
push
lret
xor
fwait
jnp
ss
gs
sub
imul
mov
sbb
inc
fcomp
xorb
rcll
add
add
cltd
inc
add
insb
ja
pop
gs
lret
pushf
fistl
sbb
or
dec
jge
rcrl
lods
adcl
inc
pop
or
adcl
mov
insl
pop
mov
mov
lock
mov
jnp
xor
pop
mov
xor
adc
pusha
push
not
adc
in
xor
pop
loope
insb
sub
jge
xchg
in
insl
fildl
imul
xchg
push
xchg
frstor
lahf
insl
imul
or
pop
sbb
or
xchg
out
test
add
pop
cmp
xchg
adcb
cmpsb
movsb
hlt
add
jae
push
cmc
push
movsb
push
movsl
lahf
jbe
dec
jle
stos
mov
or
add
imul
xor
inc
popa
sbbl
popa
mov
jnp
test
test
add
shrl
jmp
out
push
fiadds
or
insb
dec
mov
adc
inc
jbe
das
sbb
inc
and
jno
sbb
lret
lods
cmpsl
cmp
inc
cmp
push
sub
xor
sbb
notl
jo
pusha
scas
sbb
mov
jge
jno
mov
movsb
dec
sbb
ja
sbb
adc
pop
or
dec
xorb
popf
pop
pop
pop
inc
test
mov
fidivrs
or
sub
jae
mov
sarl
ret
jnp
das
and
adc
adc
adcb
shr
ljmp
fcmovbe
mov
push
dec
sub
inc
pusha
jae
sbb
das
aad
dec
pop
cmp
enter
mov
je
pusha
jnp
cmpsl
movsb
push
push
xor
jnp
and
in
loopne
mov
cltd
xchg
dec
imul
ja
lret
test
cmpsl
xor
jnp
gs
and
lret
dec
ljmp
aad
xor
and
sub
push
jbe
jbe
sbb
nop
pop
mov
fisttps
sbb
insl
or
fbld
or
sub
xchg
insl
loope
ret
addl
imul
xchg
pop
cmp
mov
mov
cmp
jae
pop
divb
pop
subb
jmp
lret
mov
pop
add
sbb
jecxz
lahf
lods
insl
and
sbb
or
mov
lods
test
sti
lds
imul
ja
movsb
push
mov
dec
daa
aad
rorl
xchg
jno
pop
jo
das
addr16
add
int
push
lahf
jle
imul
popa
dec
add
lahf
sbb
push
jg
mov
sub
iret
pop
push
or
mov
push
and
pop
outsb
and
sarb
mov
jno
imul
xchg
lahf
push
push
popa
mov
pop
pop
mov
xor
lcall
mov
pop
loope
pop
pop
sbb
fisubrl
imul
push
inc
dec
and
xchg
and
fisubrl
xlat
push
or
cmp
nop
sub
mov
sbb
pop
push
inc
push
fstl
push
mov
lds
shrl
and
lahf
sahf
repnz
aad
add
bound
push
arpl
mov
or
lahf
push
jnp
insb
add
xchg
xchg
aas
sti
xlat
rcl
xor
popf
lcall
gs
add
add
out
sub
aaa
lret
sbb
inc
cmc
mov
sbb
test
xchg
outsl
lret
pop
lods
pop
pop
jge
pop
shlb
test
sarl
in
add
lods
jbe
push
sbb
xchg
mov
arpl
insl
test
inc
mov
push
mov
pop
lret
and
dec
dec
sub
fdivs
aam
pusha
xor
xor
mov
pop
cmp
xchg
jnp
adc
addb
adc
test
push
mov
arpl
xchg
movsl
dec
mov
cmp
pop
lahf
xorl
or
mov
fwait
fs
jnp
and
negb
gs
xor
jns
lahf
or
push
dec
scas
ds
mov
mov
xor
stos
xchg
jp
dec
pusha
jp
in
mov
imul
jbe
sub
mov
sub
fidivl
mov
jbe
fs
lds
fldt
insl
gs
out
jge
jmp
mov
fnsave
sub
fwait
jg
fadd
fidivl
cmp
push
shrl
mov
outsl
mov
mov
pop
fisttpll
insl
insl
jecxz
sbb
dec
xor
inc
ret
and
and
sbb
stos
stos
mov
mov
mov
push
movsl
cmpsl
lahf
xorl
gs
dec
or
adc
gs
pop
jnp
cs
fdivrs
mov
cmpsb
and
pop
gs
mov
imul
jo
std
ss
mov
les
cmp
and
outsl
test
ret
test
lret
mov
mov
jecxz
pop
and
cmp
mov
pop
add
sub
jnp
add
out
popf
out
loope
js
mull
push
xor
push
mov
imul
cmp
pop
popl
ret
mov
adc
insb
sub
mov
pop
pop
mov
and
mov
dec
xlat
cmc
jmp
insl
jno
mov
xlat
pop
xchg
popa
imul
mov
dec
inc
fcmovu
jnp
xchg
adc
stos
sbb
sub
bound
pop
fcmovnbe
push
inc
sti
out
jecxz
sub
fisubl
sbb
push
xchg
imul
adc
mov
arpl
xchg
mov
push
jo
push
push
push
dec
or
adc
mov
and
mov
mov
outsl
xchg
mov
push
cwtl
pop
pop
push
adc
pop
test
push
pusha
aas
sbb
test
test
push
jp
cmpsl
movsb
and
jnp
insb
sahf
fnstsw
test
push
pop
inc
push
dec
adc
sahf
pop
dec
sub
jbe
loopne
ret
push
xor
sub
sub
lret
xchg
orb
dec
sbb
sbb
xlat
sub
pop
neg
or
imul
scas
jbe
xor
mov
jbe
mov
push
mov
pop
insb
jecxz
push
lret
in
inc
loopne
sub
popf
adc
add
insl
pop
mov
sbbb
mov
and
pop
fdivp
pop
xchg
mov
lods
and
xor
sbb
movsl
xor
and
mov
sbb
pop
out
and
loopne
in
inc
sub
pop
mov
ret
ficompl
xor
sbb
and
sub
mov
lahf
je
addr16
xor
out
cmp
push
or
xor
rolb
psadbw
gs
aam
dec
insl
xchg
xor
mov
mov
test
std
inc
jle
sbb
push
pop
jo
push
pop
and
push
fldl
leave
pusha
push
pop
cmpb
add
popa
dec
bound
cmp
cmpl
or
rcrb
dec
pop
cmp
rcll
cmpsl
and
mov
fdivrs
xor
gs
xor
mov
fwait
inc
push
lret
adc
repz
inc
lret
pop
adc
pop
out
adc
sbb
push
mov
loopne
sbb
push
dec
inc
ficomps
add
pop
jae
fcom
fwait
add
sub
jbe
js
movsl
shll
imul
popa
add
mov
pop
mov
lds
fisttpll
adc
fimull
sbb
subl
imul
cmp
insl
das
sbb
ret
sbbw
pop
push
sub
lahf
test
push
stos
fnstcw
add
push
test
pop
pop
lds
mov
in
pushf
inc
mov
mov
cwtl
je
jg
jae
sti
push
shrl
aad
jno
inc
sub
pop
mov
push
inc
lahf
and
fadd
mov
jno
insl
lahf
pop
sub
sahf
sbb
sub
ja
outsb
mov
push
or
in
test
ja
pop
fisubrl
pop
jge
push
lret
ja
shlb
pop
insb
insl
insl
fldt
mov
mov
inc
dec
mov
mov
sub
adc
mov
lods
gs
mov
add
mov
fidivs
pop
pop
mov
mov
jne
mov
jno
sub
adc
pop
jae
mov
sti
sub
lea
fnstsw
mov
imul
push
into
std
out
adc
mov
popf
add
pop
test
out
inc
push
add
mov
mov
cmpsl
iret
lret
je
mov
xor
pusha
pop
jge
lea
jo
pop
jnp
cmp
mov
dec
pushf
mov
jb
mov
cmp
inc
imul
in
adc
lods
inc
lds
sbb
or
jge
pop
pop
test
in
push
cmp
mov
shll
pop
inc
notb
pop
adc
insl
outsl
sti
jge
jge
inc
mov
xchg
sbb
negb
pop
mov
dec
out
lds
or
mov
and
lods
lea
push
xchg
in
cwtl
and
dec
pop
sbb
or
push
mov
xchg
sub
notb
inc
xlat
jno
dec
insb
adc
sbb
loope
mov
shll
stos
dec
xor
dec
out
sub
or
dec
jnp
popa
aas
pop
jecxz
mov
fstpl
xchg
push
add
out
mov
add
adc
sub
dec
push
jbe
fcmovnu
pop
cmp
mov
push
sti
pop
sti
les
imul
cmc
add
push
dec
fsubl
push
jno
pop
fimull
mov
adc
inc
push
ret
pop
ret
aas
xor
xor
xor
addr16
pusha
imul
lods
lods
and
test
push
sub
dec
cmpsl
cmp
adc
cmpl
imul
stos
lods
fstp
lea
pop
imul
sbb
sbb
cmpb
cmpsb
addl
fwait
rcll
xchg
test
lahf
js
insl
popa
addr16
add
or
and
push
or
mov
dec
adc
gs
gs
fistl
sti
or
cmpsl
cmp
out
dec
sbb
cmp
sbb
and
outsl
insl
mov
and
mov
orb
mov
lock
jne
lods
pop
insb
das
gs
xchg
adc
sub
das
jnp
test
dec
sbb
jge
lret
xor
or
dec
xlat
out
sub
pop
mov
xor
adc
jnp
sub
or
in
and
nop
xchg
push
insl
sbb
inc
sbbl
sub
xor
lahf
mov
insb
pop
push
insb
or
or
sbb
add
mov
xchg
sbb
aam
fildl
fwait
shll
adc
pop
push
pop
imul
adc
imul
imul
and
add
xor
inc
insb
pop
mov
lds
sub
mov
push
in
xor
sub
adc
dec
adc
shll
cmc
pop
push
imul
sbb
insl
add
xchg
cmp
adc
sbb
mov
mov
gs
ljmp
cmpl
push
insl
out
insb
jnp
fiaddl
or
in
mov
xor
jnp
dec
test
xor
add
das
insl
sub
imul
adc
shll
lds
pop
or
adc
inc
push
cmp
jae
adc
cmc
add
mov
cmp
push
mov
mov
ja
out
insb
or
lret
pop
lds
inc
jno
pop
arpl
loope
mov
or
push
sub
mov
jmp
lds
fiadds
push
testb
mov
movsb
insb
setnp
fwait
imul
insl
pop
adc
lds
popa
mov
gs
lds
bound
insb
pop
cs
ret
sub
mov
inc
mov
lods
or
push
inc
popf
push
mov
sbb
mov
adc
insl
outsl
mov
std
stos
ret
popf
xchg
lea
pop
xlat
lods
aam
mov
dec
pop
test
rorl
lea
xor
and
dec
sub
mov
push
and
cmc
or
pop
jge
roll
in
push
sub
add
push
sub
or
das
xchg
push
adc
adc
push
add
sbb
push
push
dec
xor
adc
imul
sbb
insb
lret
add
adc
jne,pn
add
or
dec
insl
xor
mov
push
adc
ja
ficoml
bound
inc
jmp
lods
sbb
lods
insl
orl
pop
rcll
mov
lret
or
lea
or
add
cwtl
xchg
mov
aaa
mov
imul
imul
fistps
ficoml
aaa
jecxz
add
jns
or
add
pop
movsl
stos
and
movsl
xor
leave
repz
sub
xchg
xchg
add
fists
and
mov
out
and
add
xchg
jmp
adc
pop
jmp
xchg
sub
add
rorb
in
add
push
jbe
in
and
pop
out
add
pop
pusha
pop
movsb
imul
jb
lock
sbb
pop
repnz
out
pop
aam
pop
mov
pop
out
hlt
inc
and
or
push
pop
cmc
add
sbb
pop
testl
fadds
add
push
xchg
subb
pop
repnz
dec
pop
adc
in
jg
int3
negb
pop
loope
dec
fiadds
out
incl
sbb
add
add
inc
xlat
adc
add
mov
mov
add
out
ficoml
jno
inc
sbb
or
pop
dec
insl
sub
mull
lret
inc
lock
xlat
push
push
mov
inc
outsb
in
dec
mov
add
repnz
ficoml
sub
adc
outsb
fcomi
fidivrs
ja
addl
mov
das
add
mov
imul
imul
adc
jnp
sbb
inc
inc
inc
fildl
inc
or
sbb
or
add
xor
jae
add
mov
fdecstp
adc
push
fwait
xchg
lea
jmp
xchg
dec
fcmovnu
idivb
lea
inc
faddl
inc
out
mov
fmull
add
das
adc
inc
fstpl
pop
sub
inc
jnp
mov
add
add
test
out
dec
add
jno
mov
or
frstor
fnsetpm(287
add
pop
sub
fcmovnb
or
push
fiadds
fcmovu
add
mov
jecxz
fwait
sub
adc
push
dec
adc
push
add
filds
sub
xor
mov
int
add
rcl
faddl
lret
dec
inc
in
mov
xchg
js
in
mov
add
loope
jno
dec
loopne
dec
int3
xchg
into
mov
or
and
add
sub
adc
or
mov
mov
mov
fwait
dec
inc
inc
adc
dec
sbb
sbb
add
jmp
add
loopne
add
testl
das
pusha
pop
fcmovnbe
sub
inc
repnz
mov
pop
dec
dec
add
push
mov
dec
loop
add
mov
add
das
mov
add
arpl
xchg
sub
push
xchg
pop
out
mov
lea
or
mov
jno
outsl
push
in
jecxz
lods
fdivrs
int
loopne
adc
inc
xorb
mov
cmc
jge
inc
mov
add
in
lcall
add
sbb
daa
pop
shrl
add
mov
mov
rolb
mov
or
jg
pop
sti
mov
jne
add
adc
scas
xor
adc
lea
lcall
and
shrl
mov
insl
jbe
and
jbe
add
xchg
adc
and
lea
outsb
inc
outsl
inc
add
fwait
sti
add
mov
add
mov
in
dec
add
ja
and
sub
mov
subl
in
cltd
and
xor
cmp
jns
sbb
in
pop
pusha
sbb
inc
mov
mov
mov
pop
aaa
sbb
addb
ss
add
xor
cmp
mov
mov
or
fwait
inc
add
aam
xor
fidivl
sbb
mov
dec
das
add
dec
fsubrs
add
and
push
add
sub
adc
test
daa
lahf
jmp
and
xchg
rcl
ss
adc
jo
add
push
dec
fistps
and
mov
dec
pop
mov
push
in
dec
adc
mov
jns
add
jns
stos
rorl
sbb
out
fwait
sbbb
inc
xor
and
add
cmp
xchg
push
adc
jns
adc
mov
or
sbb
lea
dec
adc
xor
jb
insl
subb
test
and
mov
pop
add
repz
lahf
mov
stos
adc
jno
lahf
xor
test
push
push
stos
loopne
insl
push
inc
les
add
mov
mov
pushf
call
push
shrl
pop
mov
imul
or
and
add
sub
arpl
dec
sub
push
xchg
cwtl
mov
cmp
push
aam
and
and
push
aad
dec
lahf
mov
mov
mov
enter
int3
fs
cmp
sub
add
sub
push
test
pop
jb
add
xchg
mov
cmp
inc
sub
pop
xchg
testl
mulb
lea
aam
movsl
dec
sahf
mov
mov
dec
mov
push
mov
and
out
add
mov
cmp
and
popf
dec
adc
or
lahf
test
cmp
cwtl
xchg
add
mov
and
sub
adcl
imul
or
or
enter
aas
add
add
push
pop
xchg
sub
pop
push
dec
pop
push
cmp
xchg
and
gs
sbb
cltd
dec
lret
push
dec
add
aad
mov
or
jb
mov
xchg
push
jl
or
inc
adc
mov
inc
sub
add
lahf
sub
mov
lea
shll
aad
cmp
add
or
lret
cmp
je
sbb
adc
movsb
bound
dec
pop
cmpb
xor
inc
or
jns
lea
sbb
adcl
mov
pop
pop
inc
dec
push
push
xchg
sub
jb
add
inc
xor
jb
inc
dec
inc
xchg
dec
mov
aas
cmp
fs
add
adc
mov
push
out
add
or
and
add
leave
mov
rorl
mov
das
test
and
lahf
xchg
adc
xor
xor
inc
push
inc
and
inc
in
and
pusha
add
xor
sub
lahf
dec
dec
movsb
or
fldt
add
dec
mov
test
mov
xchg
add
add
shrb
adcb
sbbb
pop
mov
xchg
dec
push
or
add
sub
fcoml
nop
mov
aam
jecxz
sub
lcall
sub
subb
adc
add
add
inc
push
sbb
inc
add
adc
xchg
filds
test
push
aaa
fs
add
andb
inc
dec
orb
mov
jg
adc
leave
orl
and
dec
and
mov
adc
dec
fbld
aaa
add
push
pop
inc
push
mov
add
stos
lahf
inc
and
stos
xchg
inc
aam
lahf
adc
sub
add
pop
adc
inc
push
adc
or
push
adc
add
andb
das
sub
aaa
dec
cmp
push
and
subl
xchg
addl
inc
lods
aas
add
inc
adc
ret
sar
mov
test
sarb
mov
stos
fists
inc
push
inc
cmp
dec
and
mov
mov
adc
nop
inc
push
sbbl
adc
lods
aaa
andb
andb
push
shrb
sbb
inc
inc
mov
and
jle
aam
and
mov
sbb
mov
incb
aam
and
cli
add
testb
adc
add
das
sub
sbb
in
in
xor
roll
faddl
inc
add
xor
or
add
aad
sub
subl
push
xchg
fldl
lret
push
add
ja
adc
jg
xchg
sub
inc
arpl
add
xlat
imul
fcmovu
adc
imul
add
loope
jecxz
lcall
adc
or
mov
test
adc
test
mov
add
add
gs
add
adc
push
aaa
inc
repz
push
stos
xchg
push
push
out
subb
lock
jnp
fistl
push
test
pop
aad
sbb
push
lods
inc
sub
pop
cs
iret
into
int
in
inc
add
or
add
xorl
xor
in
push
in
push
pop
fstl
sti
mov
mov
mov
dec
inc
pop
sbb
push
or
jge
ret
cs
and
xorl
int
imul
lods
cli
dec
xchg
das
jmp
push
pop
repz
add
push
lods
fcmovnbe
iret
inc
mov
sub
pop
mov
cmp
movsl
sub
mov
lahf
push
out
add
ret
add
sbb
push
add
add
clc
push
add
jmp
and
dec
shll
shll
lcall
fisubrl
fldcw
cmpsb
mov
aam
rcl
adcb
ror
jle
insl
cmp
add
cmc
jle
sti
jne
lds
roll
mov
add
xlat
cmp
roll
mov
add
xor
mov
mov
add
mov
ficompl
push
add
add
sbb
pop
fcmovne
mov
adc
push
sub
inc
sbb
dec
add
enter
filds
pusha
push
pop
out
pop
pushf
dec
jno
adc
mov
mov
add
push
sub
mov
pop
sub
fsubr
hlt
pop
and
add
and
cmp
add
pop
pop
add
js
jb
js
pushf
test
jecxz
mov
int3
fsub
aaa
sbb
adc
xor
lea
cmp
mov
je
mov
sbb
cmpsl
shrl
ror
fucomi
clc
add
rcrl
cmp
sbb
dec
gs
sahf
add
push
sub
and
mov
arpl
add
mov
cmp
icebp
test
push
aad
mov
mov
arpl
inc
or
xor
and
add
orb
dec
das
test
addb
lea
mov
lahf
xor
and
or
and
fildl
lahf
inc
push
and
inc
test
sarl
xchg
insl
mov
mov
add
pop
and
or
pop
push
add
popa
roll
or
or
int3
sbb
and
adc
or
popa
call
lcall
add
inc
mov
mov
add
cmp
or
add
or
add
inc
mov
negl
pusha
ret
add
adc
sub
orb
dec
add
subl
push
inc
xor
fsts
aad
xor
xchg
and
add
add
mov
add
add
pusha
push
filds
push
add
mov
mov
cmp
and
shlb
in
or
dec
and
lods
mov
push
inc
sub
inc
test
add
adc
mov
cmpsl
or
adc
popa
adc
aam
mov
dec
push
xchg
inc
mov
movsl
add
dec
xchg
sub
imul
test
inc
sub
adc
cmp
out
adc
xchg
add
repz
cwtl
inc
popa
orl
dec
cs
add
movsb
adc
push
add
push
add
sarl
stos
and
mov
pop
add
add
adc
sub
cmp
inc
add
push
pop
adc
push
mov
cmp
add
cmp
mov
ficompl
mov
add
fistl
adc
and
pushf
add
inc
add
sub
orb
pop
inc
enter
cltd
add
cmp
cltd
sub
add
xor
mov
test
push
repz
leave
add
cmp
add
inc
sbb
adc
adc
sub
mov
movntps
push
adc
sbb
dec
xor
or
pusha
push
sbbb
test
test
and
add
fcompl
dec
inc
or
and
aad
or
aad
dec
pop
add
add
xor
imul
push
dec
insb
push
lock
add
test
mov
mov
lahf
or
cmpsl
adc
inc
movsl
cmp
test
add
sbb
add
sub
mov
or
test
dec
shlb
daa
inc
xor
orl
xchg
add
dec
das
add
or
adc
push
add
int
push
nop
pop
mov
mov
movsb
mov
xor
push
push
push
insl
and
xor
pop
add
add
adc
xor
adc
movsb
adc
movsb
inc
scas
mov
and
xor
aad
pop
or
mov
ljmp
xchg
sti
add
add
mov
and
aad
mov
push
pop
inc
inc
cmp
shl
inc
lds
lds
sub
mov
test
and
adc
add
add
or
dec
dec
popf
add
add
adc
jne
nop
pop
adc
popa
push
shlb
or
push
daa
adc
mov
inc
jo
shrl
mov
inc
leave
and
pusha
pop
mov
inc
xchg
push
push
add
sbb
inc
lahf
pop
dec
dec
cmpsl
or
push
mov
sub
cs
cmp
push
dec
dec
or
aaa
inc
ds
std
push
ja
mov
add
lcall
cmp
inc
mov
lds
mov
xor
fbstp
xor
xor
subl
push
insl
adc
mov
pop
dec
mov
mov
pusha
push
shlb
movsl
push
push
add
cmp
push
mov
mov
mov
sub
test
dec
pop
add
lds
inc
cmp
cmp
dec
jae
push
adc
inc
mov
push
ror
cmc
push
sub
and
dec
aas
cmp
sub
push
test
push
xor
or
ffreep
push
push
scas
add
inc
adc
lea
xor
push
lahf
pop
push
dec
dec
fwait
lcall
rcrb
inc
aas
inc
inc
aas
add
mov
dec
dec
mov
jle
push
push
inc
cmp
shl
mov
shrl
and
test
inc
xor
pop
push
pop
andl
ficompl
pushf
push
adcl
dec
mov
add
pop
jno
lcall
movsb
in
pop
mov
push
mov
fldl
adc
mov
pop
add
rorl
xor
lods
loopne
orl
sub
test
or
xchg
or
nop
pop
daa
jmp
mov
add
cmp
mov
aaa
dec
mov
mov
ja
inc
and
mov
icebp
std
icebp
cmp
ret
sub
imul
out
xor
mov
push
orl
lds
mov
pop
mov
cltd
inc
adc
push
jl
lahf
pop
push
dec
inc
mov
or
sarl
inc
cmp
hlt
inc
cmp
or
add
sbb
push
sbb
les
sub
and
sub
mov
sub
pop
ret
sbb
lods
push
xor
pop
dec
ret
pop
fcmovnb
ja
daa
xorl
dec
imul
imul
outsl
mov
cmp
jge
jge
push
lods
popa
adc
or
arpl
add
pop
pop
jg
fwait
and
imul
fldcw
xchg
sbb
and
pop
bound
push
sarl
movsb
lods
jecxz
pop
fwait
dec
and
mov
imul
push
lahf
cmpsl
test
dec
aaa
rcr
lds
lds
imul
cmc
das
mov
add
push
cmpsl
imul
sbb
push
lahf
push
push
push
bound
mul
jmp
mov
insb
aaa
and
cmp
or
add
xchg
mov
pop
rorl
push
out
adc
sub
int
add
wbinvd
add
inc
out
and
xor
add
and
rorl
dec
xchg
sub
sub
inc
jno
mov
push
xlat
aad
sbb
dec
pop
dec
jns
adc
inc
stos
jge
inc
lods
insl
mov
adc
call
sbb
push
into
and
pop
adc
std
nop
adcb
xor
scas
fildl
cmp
lahf
pusha
push
push
jne
inc
cmp
jge
orl
fwait
gs
or
cmp
cmp
ds
inc
add
xorb
or
rcrl
iret
mov
sbb
push
mov
xor
arpl
insl
add
in
insl
das
add
add
shrl
xchg
inc
pop
fimull
mov
sub
sub
ja
xchg
add
fwait
dec
inc
cmp
mov
adc
insl
push
sbb
push
pop
fistl
pop
out
sub
fs
sub
sbb
imul
sbb
xchg
fnstenv
jge
pop
pop
adc
lds
xchg
cmp
jge
fsubrs
push
dec
pop
mov
in
enter
jne
mov
shl
fwait
and
bound
cmp
jmp
jge
lahf
popa
push
push
out
notb
cmp
sbb
add
subl
inc
add
dec
les
cmp
inc
inc
add
inc
inc
adc
addl
jl
xorl
lea
fstpt
popa
push
movsb
movsl
and
pop
dec
lods
imul
adc
or
sub
lods
add
push
xlat
mov
adc
insl
inc
dec
jecxz
lea
aam
rol
xorb
jae
push
fdivs
insl
or
stos
inc
inc
movsl
xor
and
lret
mov
mov
arpl
xorb
daa
jecxz
pop
push
xor
inc
dec
sbbl
fldcw
popa
inc
shrl
adc
inc
xor
push
stos
icebp
add
dec
sbb
das
shl
stos
inc
pop
jno
js
shrl
and
push
lahf
arpl
jns
arpl
cmp
ljmp
ret
dec
push
incb
inc
add
ljmp
jo
and
jmp
loope
dec
addb
insl
mov
dec
inc
mov
jmp
pop
int
mov
push
popa
sub
sbb
orb
push
jb
das
ds
sub
mov
fstpl
pop
adc
mov
pop
add
sbb
sbb
ljmp
cmp
ja
ds
adc
mov
movsb
and
dec
sub
jne
mov
pusha
rolb
stos
addr16
mov
rcll
fstpl
xchg
add
lahf
fs
push
mov
xorb
negl
sbb
out
cs
xchg
dec
dec
xor
jnp
sbb
mov
je
inc
cmp
inc
dec
add
cmp
sub
and
faddl
and
fisubrs
fstpl
sub
gs
mov
stos
sbb
iret
movsl
arpl
cmpsl
or
sbb
dec
and
add
dec
fcoml
push
xchg
xchg
mov
pop
lds
imul
inc
mov
dec
ds
jge
add
and
mov
mov
mov
andl
xlat
pop
jg
popa
ret
sbb
paddsw
rclb
pop
mov
stc
adc
int
xorl
sbb
adcl
fwait
add
fdivs
insb
pop
or
inc
xchg
das
mov
mov
dec
push
xor
dec
jmp
lods
stos
and
pop
cmp
pop
cmp
ljmp
sbb
pop
add
or
movsl
aad
add
into
adc
ficoml
das
cmp
add
or
cmp
push
mov
cmp
andb
cmp
pusha
mov
dec
push
or
das
aad
add
xchg
mov
add
cmp
aad
jo
dec
aas
cmp
push
gs
mov
cmp
aas
dec
enter
inc
adc
ss
lahf
pop
push
push
gs
inc
add
push
sbb
cmp
test
pop
insl
out
imul
jmp
out
loope
mov
cmc
sti
aas
mov
adc
inc
gs
pop
mov
dec
subl
push
and
insl
mov
jecxz
adc
frstor
fimull
mov
aaa
rcrl
add
xor
js
test
stos
pop
sbb
loopne
dec
lret
mov
pusha
imul
mov
inc
and
roll
add
sbb
mov
inc
push
sub
pop
mov
pop
mov
in
rclb
xor
lea
jge
mov
xor
insl
adcl
xchg
out
adc
jae
inc
fmuls
and
sbb
insl
lret
push
sub
shlb
pop
mov
imul
sub
insl
mov
cmp
pusha
push
mov
and
dec
cmp
and
fisttpll
add
adc
push
pop
cmp
scas
jge
sub
imul
out
fstpl
mov
imul
inc
push
cmc
outsb
les
pop
sbb
dec
pop
cs
mov
push
pop
ret
mov
in
lock
xchg
ss
aaa
insb
adc
fwait
inc
or
push
ret
xor
xchg
and
das
loope
stos
insl
or
loope
pop
or
cli
stos
xor
mov
pop
mov
push
subl
or
mov
sub
xchg
sub
imul
fwait
inc
das
xchg
fdivs
fwait
cmp
or
push
sbb
sbb
aaa
mov
push
sub
insl
mov
jecxz
push
mov
or
mov
movsb
lea
pop
fwait
or
imul
xorb
xchg
push
insl
in
test
shll
js
sub
xlat
lds
inc
lds
bound
mov
pop
sbb
daa
andl
cltd
pop
inc
mov
mov
xor
xor
pop
mov
inc
xchg
xor
lods
lea
fstps
push
dec
dec
inc
inc
add
mov
jb
inc
and
dec
insl
mov
mov
jge
pop
push
insb
insl
sub
mov
and
cmc
dec
cmp
fidivl
imul
lods
ja
fidivl
cmp
push
shll
stos
sub
mov
adc
pop
xor
comiss
push
mov
mov
dec
jmp
xor
sbb
pusha
push
sbb
sbb
insl
inc
adc
pop
pop
pop
or
pusha
dec
pop
roll
gs
adc
adc
xchg
sbb
popa
cli
lahf
inc
cmp
xor
sub
insl
sti
fmul
add
sub
add
add
dec
outsb
scas
cmp
xor
outsb
imul
outsl
imul
mov
sub
mov
mov
jecxz
cmpsl
pop
jae
fildl
mov
inc
xor
rclb
cmp
lret
sub
adc
sbb
mov
jbe
sti
jo
popf
mov
fcomi
mov
cmpsl
xchg
push
mov
adc
mov
push
mov
push
ja
gs
jecxz
jmp
jnp
jno
or
mov
stos
enter
or
cmp
sub
sbb
gs
pop
pop
xchg
cld
pop
add
popa
sub
cmpsl
inc
xchg
fldenv
das
mov
pop
jg
mov
inc
rcr
jnp
lea
jmp
aad
rcll
pop
rcrl
xchg
and
aaa
sub
xchg
inc
cmp
fldt
xor
sub
imul
jbe
or
addl
mov
fiaddl
fwait
inc
ja
fldt
aaa
xchg
mov
pop
imul
dec
xor
push
jmp
or
inc
adc
xor
adc
fnstenv
fisubrl
push
push
mov
movsl
pop
cmp
sbb
cmpb
sub
xor
scas
xchg
sub
je
aam
lods
dec
repz
cmp
mull
fildl
jns
dec
mov
lods
fs
arpl
filds
bound
mov
or
pop
adc
cmp
aaa
ss
dec
ja
xchg
and
or
dec
dec
sti
fsubrs
mov
lret
or
pusha
fadds
push
pusha
mov
add
jg
mov
fisubrs
xchg
movsl
lods
shlb
cmp
cmp
les
pop
pop
dec
test
mov
adc
dec
add
inc
xchg
jmp
movsl
dec
dec
mov
cmp
lret
insb
sub
push
sbbl
pushf
leave
sbb
mov
jle
xchg
add
push
mov
sub
or
dec
sbb
inc
sub
das
aas
push
jne
push
bound
mov
nop
mov
aas
and
push
nop
xchg
jbe
mov
mov
cmp
imul
mov
adc
pop
pop
ficoml
lock
add
add
dec
adc
add
xchg
xor
shlb
and
rol
popa
test
fcmovnu
cmpsl
xchg
inc
lods
rcll
scas
inc
pop
sub
fldl
fcom
mov
sbb
inc
stos
pop
imul
or
and
jp
pusha
pop
xchg
leave
add
pusha
sbb
push
mov
inc
cmpsl
and
mov
cmp
leave
mov
sub
mov
lods
mov
std
stos
lahf
jo
pusha
push
out
imul
inc
fldt
inc
imul
in
pop
int
test
mov
cmp
xchg
push
mov
jnp
das
add
and
jno
cmp
stos
imul
mov
insb
imul
pop
mov
xor
adc
jge
and
or
insb
or
sti
xor
sbb
stos
fnstsw
andl
sbb
xchg
gs
lds
lods
adc
xor
mov
stos
pop
mov
mov
aaa
loope
shll
lods
push
sub
adc
xor
lea
pop
mov
fdivrs
ficompl
inc
das
ja
pop
xchg
mov
stc
jge
les
or
cmp
rclb
sbb
bound
xchg
mov
bound
or
das
xchg
inc
or
aam
imul
pop
and
das
cmp
inc
xor
and
and
dec
insl
add
sub
mov
pusha
rcl
dec
inc
pop
fisubl
pop
xlat
and
inc
dec
xlat
std
xchg
das
mov
aam
mov
lds
or
cmp
xor
shll
mov
add
jno
ficompl
scas
cmp
out
gs
adc
rcl
inc
xchg
cmp
inc
ficompl
lret
out
inc
mov
std
mov
shll
sub
mov
adc
nop
cmp
mov
arpl
pop
sbb
int
jnp
and
or
fistpl
and
jecxz
sub
push
lea
dec
sbb
aam
bound
adc
sbbl
mov
mov
lods
jge
sub
sub
mov
imul
mov
fstl
inc
jnp
fbld
dec
pop
jnp
mov
gs
fidivl
fidivl
add
sbb
xchg
pmaddwd
sub
mov
sbb
mov
sub
mov
aas
ss
fsubrs
rcll
ficoml
ret
rorl
sub
and
movsb
fcoms
cmp
pop
imul
jo
lea
lds
sbb
pop
mov
mov
imul
push
mov
je
arpl
inc
push
add
inc
inc
adc
in
std
mov
and
adc
push
sti
pushl
gs
push
dec
mov
add
jne
dec
xchg
push
inc
inc
fistpl
inc
sahf
jno
dec
dec
das
adc
xor
in
aas
push
jb
pop
or
filds
dec
pop
xor
mov
fs
adc
jle
gs
dec
dec
gs
inc
scas
gs
cltd
das
inc
push
gs
pop
lods
inc
imul
fstl
lret
fldl
adc
sbb
rcll
ss
gs
sbb
bound
arpl
jbe
inc
inc
mov
xchg
lea
inc
inc
adc
mov
fidivs
and
mov
mov
xlat
xor
rorl
outsl
mov
insl
mov
mov
inc
push
mov
adc
fldl
push
rorl
sbb
nop
mov
test
jo
add
inc
mov
lahf
fs
outsl
inc
or
jnp
out
cmp
sbb
mov
add
lods
rcr
sbb
les
adc
add
mov
inc
sub
mov
sub
out
fldcw
mov
inc
dec
xor
push
int
inc
sbb
and
aaa
ss
das
gs
pop
out
pop
fmull
and
add
add
or
mov
sub
and
fcmovbe
mov
add
bound
pop
inc
push
pop
mov
jbe
jge
ja
pop
mov
test
das
scas
lods
push
test
lods
movsl
and
add
lock
push
or
push
add
notb
addr16
push
xor
fidivl
notl
mov
push
cmpsb
cmp
xor
mov
fiadds
inc
test
or
test
aad
pop
sbb
inc
fdivrl
pop
adc
xchg
inc
lds
jge
sub
enter
inc
mov
push
lahf
xorb
mov
sbbb
adc
aad
not
jle
xor
cmp
sbb
push
dec
dec
pop
dec
push
scas
mov
inc
dec
or
lahf
rolb
or
xor
jo
sbb
push
cmp
insl
jnp
adc
cwtl
gs
sbb
adc
fcmovnu
gs
dec
insb
mov
sub
and
shll
insl
sbb
outsb
or
xor
pop
fcmovnbe
xlat
dec
mov
pusha
pop
ret
pop
cmp
mov
test
mov
sbb
adc
sub
jno
adc
cmp
pop
imul
imul
shll
lods
and
push
lods
inc
lahf
imul
adc
test
pop
jne
add
and
movsl
ljmp
popa
stos
jnp
fists
dec
xorb
fstp
sub
push
ja
mov
mov
cmp
inc
ss
mov
xor
cmpsb
or
mov
cwtl
sbb
test
xchg
das
pop
mov
jg
out
outsb
xlat
mov
sbb
or
or
add
into
inc
ret
lods
pop
adc
insl
pop
xorb
sbb
ja
dec
mov
push
das
cmpsl
das
les
jne
pop
mov
pop
lods
sub
fcoms
inc
and
insl
subl
out
sub
mov
insb
and
pop
std
lods
sbb
mov
mov
pop
ret
or
fiaddl
roll
xlat
lret
stos
mov
insl
add
orl
std
mov
fwait
sti
and
js
pop
insb
sub
sti
cmp
dec
dec
push
outsl
pop
mov
aaa
push
fsts
and
inc
aam
or
xor
lahf
sbb
test
xchg
sarb
push
adc
rolb
xorl
cmpl
fnsave
mov
xlat
xor
inc
xor
push
sbb
adc
je
inc
mov
lret
cmp
inc
mov
mov
push
push
sub
or
fs
push
fwait
pushl
lds
jno
pusha
sbb
or
mov
insl
fistl
inc
mov
mov
lret
cmp
adc
mov
sub
adc
push
mov
in
dec
push
rol
mov
lods
subb
inc
jmp
jb
inc
popf
inc
push
shll
sti
pop
in
or
out
arpl
pop
push
movsl
lcall
inc
jmp
aad
insb
push
pusha
or
and
movsl
lahf
cmp
and
cmpl
sarl
rcrb
xorb
cltd
xchg
mov
pop
xchg
imul
shrl
inc
pop
icebp
push
dec
push
aaa
data16
or
push
sbb
call
push
dec
dec
jl
jne
imul
gs
sbb
pop
inc
jo
fsts
cmp
add
add
mov
adc
inc
mov
sub
jo
push
fdivl
pop
inc
out
cmp
imul
imul
lret
mov
cmp
insl
insl
mov
fmull
rcr
rcll
popa
adc
sbb
out
and
and
insb
shl
add
lret
inc
lret
add
pop
inc
std
in
lods
push
cmp
ja
xlat
pusha
sti
mov
adc
inc
test
mov
xor
mov
bound
arpl
push
jns
in
and
fstpl
lret
imul
dec
adc
add
int
lahf
fxch
xchg
pop
or
lret
lahf
ja
mov
pop
dec
and
inc
dec
in
sub
mov
lahf
add
dec
push
faddl
aaa
dec
push
mov
bound
cmc
xor
arpl
stos
stos
lea
mov
jbe
movsb
sahf
inc
xor
adc
push
and
xor
mov
jno
mov
mov
mov
dec
imul
pop
negl
shrb
jl
stos
and
or
fwait
sub
mov
push
sbb
rcrl
sbb
inc
in
das
fisubrs
inc
lods
lds
or
mov
inc
xchg
mov
xor
adc
insl
fcomi
add
adc
mov
add
pop
mov
mov
or
insb
das
sub
push
mov
xchg
outsl
adc
shll
dec
inc
fisubl
gs
add
rep
sub
push
fwait
pop
lds
das
jno
push
xchg
ja
or
bound
sbb
or
scas
pop
add
sbb
and
cmp
add
and
ja
push
push
imul
mov
ja
sarl
das
adc
adc
dec
test
cmpsb
rcr
xor
ljmp
orl
inc
dec
push
pop
and
int3
pop
add
mov
add
pop
jne
icebp
fmuls
or
sti
inc
push
loope
push
pop
arpl
xor
mov
xor
adc
pop
das
cmc
inc
xchg
testb
fwait
jmp
add
dec
xor
xchg
leave
sbb
push
mov
xchg
fisubl
or
cmp
xchg
fcmovbe
push
pop
inc
xor
inc
das
push
stos
adc
je
pop
cmpsl
lahf
out
xor
ret
pop
pop
outsl
test
jecxz
out
jb,pn
sub
test
test
cmp
std
xor
push
push
push
adc
dec
mov
push
lahf
test
inc
mov
sbb
mov
js
push
add
movsb
and
ds
aas
inc
pop
jbe
addr16
adc
sbb
lcall
daa
outsl
mov
cmp
pop
aaa
mov
xor
and
imul
inc
inc
push
ss
jne
stos
dec
mov
sub
xor
insl
dec
cmc
lds
fcom
push
dec
inc
dec
mov
mov
push
imul
ret
lods
lods
xlat
lret
xchg
xor
aaa
fistl
xchg
pop
jmp
test
mov
pop
out
unpckhps
fisttpl
mov
out
fwait
lret
xor
xor
mov
xchg
jno
mov
mov
inc
or
jb
ficompl
adc
jne
lahf
jl
xor
and
mov
mov
xchg
test
sbb
test
pop
sti
rcl
dec
add
mov
xchg
mov
xchg
enter
xchg
imul
inc
inc
outsb
imul
xchg
dec
mov
stos
xor
push
dec
push
lods
adc
jne
nop
fwait
xchg
mov
xor
push
fs
lahf
push
fcmovnb
pop
fwait
pop
add
push
dec
sbb
fisubrs
push
xlat
jno
mov
and
gs
mov
mov
dec
adc
adcb
mov
xor
jnp
push
jae
add
sub
pop
test
cmpsl
inc
cltd
insb
insl
insl
in
pop
lods
add
mov
mov
fidivl
jno
adc
mov
mov
or
sbb
jecxz
stos
imul
or
mov
jmp
mov
cmp
xchg
dec
xchg
aaa
inc
jge
lahf
jge
imul
fbstp
pop
dec
adc
int3
add
inc
addr16
push
ret
push
in
stos
stos
popl
movsb
mov
jg
mov
mov
dec
pop
imul
pop
orb
xor
and
stos
jnp
cli
add
mov
xorb
sbb
inc
dec
out
push
dec
jno
ss
pop
imul
pusha
mov
mov
movsl
mov
pop
sti
sbb
mov
adc
loope
inc
in
cltd
push
insl
inc
xchg
aas
dec
xor
shrl
adc
rcl
lods
cmpsl
pop
mov
fistl
ja
push
ret
ss
sbb
adc
lahf
ret
xchg
sub
add
lcall
in
faddl
or
mov
mov
add
mov
mov
mov
lcall
cmp
fwait
add
rcrl
clc
pop
push
xchg
mov
add
cmp
push
out
sub
push
inc
inc
pop
ja
ds
sbb
inc
ficoml
das
into
jl
jno
stos
pop
sbb
and
push
adc
mov
jne
sbb
mov
gs
sbb
mov
in
sub
fwait
dec
mov
jnp
sbb
adc
and
inc
mov
roll
ficoms
or
add
cmpsl
add
addr16
mov
dec
cmpsb
arpl
lods
xchg
gs
lahf
dec
orl
jecxz
pop
pop
inc
push
movsl
or
lahf
fstpl
in
xchg
iret
or
adcl
cmp
and
mov
fcoml
add
mov
in
mov
subl
fidivl
pop
inc
fwait
add
fiaddl
jmp
insl
insl
jmp
mov
ja
rcrl
pop
test
movsl
daa
popa
dec
jnp
mov
mov
lods
aas
add
and
push
or
sbb
pop
pop
gs
jecxz
lods
insl
rcl
sbbl
mov
mov
adc
fsubs
dec
fldt
sbb
push
dec
lret
xchg
and
jmp
jno
adc
rcll
and
movsl
push
adc
flds
shll
dec
iret
imul
pop
pop
xchg
inc
std
stos
lahf
xchg
arpl
dec
dec
push
fildl
cs
das
sbb
push
dec
adc
inc
xchg
adc
xchg
jbe
sbb
push
xchg
adc
sub
lods
adc
shlb
mov
dec
xchg
or
insb
insl
insb
jno
subl
fcomps
lret
ja
dec
fcomp
fidivl
add
std
dec
aaa
sti
sub
pop
push
dec
jno
insl
sub
pop
fwait
scas
jge
dec
mov
xor
gs
pusha
mov
pop
xchg
pop
and
dec
mov
xchg
adcl
pop
or
fwait
lahf
mov
lods
xchg
jmp
mov
rclb
jecxz
xchg
rcl
outsl
inc
push
inc
pop
cmp
xchg
negl
mov
std
jno
mov
add
icebp
sti
pop
mov
inc
xchg
out
popa
insl
sbb
popf
xchg
rorl
insb
push
movsb
aas
and
pop
mov
lahf
pushf
xchg
mov
pop
popa
cli
mov
iret
xor
sbb
mov
popa
push
sub
subl
mov
cmp
mov
push
imul
mov
jno
add
ss
das
rcrl
fnstenv
adcl
mov
lds
sbb
add
mov
mov
pusha
jno
insb
je
adc
pop
xchg
inc
mov
adc
xchg
test
mov
mov
mov
xor
mov
pop
jmp
xor
or
or
adc
ljmp
imul
mov
or
push
sub
dec
fwait
gs
and
popa
or
add
outsl
fcmovnu
mov
lds
jmp
pop
pop
sub
aaa
fistpl
out
or
sti
push
pop
jnp
xorb
shrl
mov
movsl
mov
mov
jge
popa
cmpsl
sti
shlb
fwait
adc
js
or
xor
pop
insl
popa
popl
xchg
stos
movsb
mov
add
push
dec
popa
iret
pop
xor
mov
cmp
adc
popa
inc
dec
gs
fistl
inc
mov
pop
sbb
xchg
cltd
dec
cmpsl
mov
insb
jecxz
sbb
cmp
pop
inc
loop
push
std
sub
dec
ret
ret
and
dec
mov
pusha
insl
sub
add
mov
aaa
imul
fisttpl
mov
add
ret
push
xchg
xchg
daa
jne
sbb
das
pop
ljmp
mov
mov
mov
cmpsb
faddl
dec
adc
dec
adc
mov
pop
add
fnsave
mull
dec
inc
add
sub
lods
dec
arpl
xchg
mov
lods
push
sbbl
ja
aaa
cmc
bound
mov
imul
sti
sub
xchg
nop
xorb
pop
inc
or
rcll
sbb
jno
ret
or
pop
aad
or
out
pop
dec
rcr
xor
adc
sub
sub
movsl
mov
insl
lret
std
out
inc
and
push
addr16
imul
dec
and
jne
cmpsl
int
or
xlat
dec
gs
lods
mov
xor
pop
and
jo
rclb
dec
stos
pop
mov
push
sbb
cmp
xlat
inc
cmp
pop
rcll
das
paddusw
mov
push
sub
lahf
mov
lahf
mov
stos
xchg
jle
imul
jge
jno
sub
add
jnp
xchg
mulb
jno
dec
outsl
add
or
nop
fildl
push
jnp
outsb
jae
and
imul
addr16
push
std
lahf
aaa
jg
js
gs
arpl
bound
pusha
je
popa
jne
jbe
dec
cltd
or
jb
pop
add
jmp
pop
jo
pop
outsb
pop
pop
outsb
pop
pop
insl
pop
pop
insb
pop
pop
imul
push
push
push
aaa
or
push
data16
cmc
in
push
push
addr16
gs
jnp
shlb
sub
imul
fsubrl
xor
data16
jo
push
imul
popf
mov
lcall
call
jne
inc
shrl
pop
ja
pusha
js
jns
arpl
fs
callw
mov
imul
jae
test
mov
cld
in
pushl
jl
lea
nop
jg
popl
cmpl
xchg
xchg
xchg
adcb
sbbl
jle
jl
mov
sahf
fistpll
mov
lahf
xchg
mov
mov
xchg
mov
fstpl
or
insl
cmp
in
add
mov
lods
mov
lcall
sbb
pop
sbb
test
fcmovu
mov
mov
jo
xchg
fcmovnu
mov
push
cmpsl
dec
sub
mov
jno
mov
mov
ja
ja
push
ret
lods
imul
in
movsl
xchg
or
sub
pop
add
adc
xchg
stos
xchg
sub
inc
add
ficoml
add
lock
adc
testl
or
add
add
jecxz
adc
xchg
add
and
inc
test
add
ret
and
add
adc
xor
mov
pusha
xor
jns
xchg
popa
cltd
jbe
mov
adcb
mov
sub
cs
mov
test
sti
jle
mov
addb
mov
add
dec
mov
mov
imul
inc
xor
jle
mov
pusha
das
inc
arpl
add
lea
add
jle
adc
ret
addb
fiaddl
jecxz
loop
rolb
mov
or
mov
and
jle
adc
mov
add
sub
mov
xchg
loope
sub
and
stc
jle
sbb
xor
mov
add
add
inc
das
xor
adc
inc
fildl
sub
dec
and
adc
movsl
test
add
insb
mov
jns
repz
jnp
push
pop
leave
stos
sub
or
fcoml
out
in
xchg
push
push
adc
mov
xchg
pop
xor
or
pusha
inc
dec
ret
rclb
push
sub
arpl
add
ret
jge
jae
clc
inc
lcall
inc
xor
das
arpl
dec
adc
cmovno
or
stc
add
pushf
and
mov
adc
sub
adcb
outsl
movsb
and
loope
and
imul
add
inc
sub
les
add
addb
or
dec
std
scas
sub
mov
and
or
mov
cltd
ficompl
fiaddl
rolb
rolb
or
scas
cmp
xor
insl
dec
repnz
add
imul
and
test
sub
addb
and
andl
lods
mov
shlb
sbb
icebp
sbb
mov
sub
add
out
or
or
mov
add
inc
mov
mov
imul
mov
pop
dec
or
arpl
mov
mov
or
mov
out
inc
add
test
aaa
repz
push
roll
mov
adc
inc
and
inc
xchg
mov
push
mov
or
mov
and
or
add
add
adc
aam
or
mov
add
adc
add
pop
mov
aad
adc
bound
xorl
dec
inc
add
adc
jl
andps
add
roll
dec
xchg
push
shll
in
sbb
inc
adc
sbb
sbb
push
popl
nop
bound
pop
incl
mov
adc
mov
mov
mov
xor
dec
mov
call
pop
adc
jae
sub
inc
cmp
mov
dec
je
xor
and
add
inc
adc
aam
cmp
sub
sbb
inc
sub
insb
and
pop
inc
mov
lahf
sub
dec
cmpsb
test
and
dec
inc
or
xor
dec
push
aaa
inc
pop
push
sub
frstor
cmpl
movsl
mov
sub
and
sub
jnp
sub
sbb
adc
jb
adc
jnp
leave
jbe
incl
mov
dec
inc
sub
jne
adc
mov
mov
sub
fldcw
add
adcb
lcall
and
adc
adc
lea
pop
xor
rorb
adc
sbb
dec
inc
cmp
decl
inc
andb
inc
test
rolb
sub
rcl
sub
xor
inc
add
mov
xor
adc
movsl
push
cmpsl
inc
cmp
inc
orb
xor
data16
add
leave
fistl
test
orb
leave
mov
inc
and
add
pop
les
dec
push
mov
lea
pop
pop
adc
test
and
adc
test
adc
jb
mov
sub
xor
or
add
xchg
rolb
mov
jge
inc
test
aaa
mov
popa
add
mov
push
or
add
and
rcl
add
inc
pop
movsl
inc
popf
cmpsb
add
nop
orb
push
dec
shrb
mov
bound
dec
sbb
or
or
or
xor
das
and
and
pushf
pop
push
jmp
jae
cmp
inc
adc
push
jb
iret
cmp
dec
inc
repz
cmpsl
adc
add
dec
incb
inc
imul
iret
frstor
and
insl
adc
test
pop
xchg
adc
in
inc
add
shrb
rclb
loope
adc
xchg
push
addl
or
sbbb
scas
push
jne
jmp
test
pop
inc
test
icebp
push
push
mov
fwait
dec
xchg
sub
pop
xor
or
inc
adc
sbb
shrb
add
xchg
adc
xor
and
cmp
push
scas
mov
mov
add
bound
fisttps
dec
pop
push
pop
mov
movsb
add
arpl
push
pusha
inc
xor
iret
bound
sub
adc
subb
lds
int3
mov
lahf
push
test
and
sub
inc
or
or
mov
push
andb
shll
or
cmpsl
adcl
xor
and
and
test
imul
mov
add
and
ds
mov
mov
and
in
push
and
adcb
adc
das
test
sbb
jne
scas
adc
mov
call
and
adc
inc
and
push
movsb
and
dec
cmp
add
add
addb
xor
stos
or
iret
xor
add
unpckhps
and
push
aas
and
add
jb
adc
nop
test
or
mov
or
iret
or
mov
push
inc
inc
ud2
aam
or
mov
push
pop
and
and
iret
inc
mov
dec
sub
sub
orb
push
push
aam
scas
add
or
test
rcrb
mov
repnz
or
mov
xchg
mov
or
mov
jg
inc
int
outsl
add
cltd
push
fists
mov
popa
das
inc
je
orb
push
add
orb
inc
push
and
adc
or
pop
sub
pusha
push
aas
inc
inc
dec
movsl
or
add
and
add
pop
push
cmpsl
mov
rclb
or
or
mov
inc
add
or
bound
push
jb
cmp
sub
mov
and
add
cmp
sub
pop
add
inc
out
and
adc
sub
adc
add
or
and
stos
iret
inc
cmpsl
mov
jg
test
inc
xchg
sub
cmpl
or
mov
inc
nop
popl
xor
andps
dec
add
xchg
adc
inc
adc
jg
add
add
xor
fists
sbb
pop
push
into
dec
leave
mov
mov
inc
andb
dec
cmp
imul
loopne
out
pop
sbb
or
and
dec
push
add
add
std
std
and
orb
ljmp
push
dec
or
mov
nop
adc
mov
ret
out
and
push
inc
dec
inc
add
add
add
addb
sub
xor
aas
add
sbb
add
inc
add
inc
test
or
and
adc
add
dec
add
xchg
or
lea
dec
push
fwait
pop
sub
mov
dec
dec
adc
ret
mov
add
jae
pop
push
mov
repz
cwtl
mov
aad
push
addb
dec
scas
push
add
add
sub
mov
xchg
mov
xchg
and
jno
insl
nop
mov
roll
pop
mov
jbe
insb
sub
mov
das
add
push
mov
daa
aad
mov
mov
add
or
dec
inc
xchg
gs
jb
mov
test
imul
mov
sbb
add
inc
adc
lea
ljmp
mov
adc
pop
dec
fldl
mov
iret
push
inc
test
or
and
or
or
scas
sub
or
pop
sbbb
sti
xlat
add
sub
add
jne
mov
and
add
add
andb
push
sub
or
test
push
xor
test
leave
test
mov
add
and
adc
add
iret
mov
xor
mov
and
sub
add
or
mov
insl
inc
xor
aad
fildl
movsl
sub
and
stos
inc
xchg
dec
inc
inc
test
push
inc
inc
movsb
repz
pop
test
loopne
add
dec
add
jns
loop
add
and
das
cmpsl
addb
dec
inc
xchg
mov
sqrtps
lahf
mov
add
xor
pop
inc
str
add
add
mov
sbb
inc
mov
inc
scas
mov
cmp
inc
push
and
sub
enter
add
and
mov
nop
cmp
bound
add
sub
pop
or
invd
xchg
inc
add
sub
sbb
inc
mov
bound
lea
scas
add
call
lahf
or
xchg
sub
add
aaa
sub
or
dec
adc
mov
adc
add
push
addl
rcll
sbb
push
scas
scas
lods
das
push
xor
and
adc
and
push
popa
les
inc
push
push
shlb
enter
or
rcll
addl
adc
or
dec
andb
and
dec
push
and
add
xchg
adc
ret
adcb
sbb
push
cmc
iret
inc
xor
adc
movsb
adc
bound
and
mov
arpl
add
sti
lcall
mov
loopne
mov
icebp
pop
add
add
add
mov
and
add
movsl
mov
add
mov
dec
adc
inc
add
adc
sbb
adc
inc
in
fs
or
lea
addb
add
subl
test
test
ja
ljmp
inc
or
xor
xor
sub
sub
xor
icebp
xor
imul
and
cmp
es
cmp
js
jge
xor
jg
cmp
sub
pop
popa
fs
cmp
adc
lgdtl
mov
xchg
sub
add
scas
pop
sub
jge
or
push
inc
cmp
add
xor
jg
sub
das
xor
imul
mov
mov
cmp
inc
test
shll
or
xchg
push
jo
mov
push
or
bnd
sub
inc
negb
add
adc
xorb
mov
adc
jnp
add
jp
pop
pop
jns
jnp
mov
pusha
push
adc
or
stos
scas
push
push
mov
pop
inc
xchg
and
ret
jmp
scas
mov
jge
les
jg
ljmp
or
sub
mov
jns
pusha
pop
jbe
mov
mov
mov
stos
test
push
push
lods
test
or
adc
adc
add
aaa
xchg
adc
or
and
sub
fcom
mov
jp
mov
mov
lods
test
mov
lods
push
or
push
sub
cmc
or
mov
xchg
cmp
sbb
mov
cmp
push
add
adc
adc
call
inc
mov
sub
je
js
call
pop
mov
mov
lods
stos
push
push
dec
mov
pop
or
pop
xchg
lret
dec
inc
xchg
aad
push
adc
add
add
jle
lcall
inc
cmp
pop
pop
pop
addb
mov
add
mov
mov
jmp
push
push
inc
cmp
pmuludq
add
das
sub
pop
jbe
jp
popf
mov
cmpsl
scas
stos
mov
lcall
test
daa
add
stos
movl
incl
insl
insl
push
mov
aam
xlat
out
jmp
push
jmp
out
call
repz
cmc
imul
in
in
fcomp
lods
mov
data16
incl
mov
nop
jl
jle
addl
mov
adc
add
mov
shlb
push
adc
mov
data16
ret
rolb
or
inc
test
fs
mov
fucomi
in
in
fsub
out
dec
aad
ret
mov
lcall
rcr
fsubr
lock
fildll
inc
mov
dec
popf
mov
ds
cli
jg
mov
sarb
dec
push
and
aas
inc
push
cmp
add
repnz
inc
inc
adc
xor
cmp
pusha
aam
jno
sti
cld
sti
std
jmp
pop
xchg
xchg
and
sbb
enter
mov
inc
inc
movsb
loopne
add
xor
adc
add
sub
inc
mov
mov
fdivrs
dec
inc
js
insb
js
add
fucomp
call
jl
popf
xchg
xchg
mov
scas
into
lret
lret
movsb
mov
shrb
add
adcb
mov
xor
add
ljmp
mov
mov
ljmp
leave
mov
mov
inc
scas
jno
mov
cmp
jo
lods
jne
mov
pusha
mov
xchg
int
xlat
out
cmc
imul
lock
mov
gs
add
loopne
jg
jle
cmpl
mov
xlat
std
mov
or
pusha
pop
and
sub
pop
sub
aad
sti
movsb
mov
cmc
adc
push
adc
test
bound
sbb
add
cmpb
inc
lock
faddl
xor
stos
mov
outsb
fucomp
stos
and
and
imul
sarb
stos
pushf
stos
jns
cmpsb
push
scas
mov
ss
mov
cmp
lods
sbb
xor
and
cmp
mov
fiadds
test
pop
dec
inc
aas
inc
aaa
xor
out
adc
imul
roll
scas
inc
sahf
mov
scas
mov
add
gs
cmp
xchg
ret
sbb
inc
xchg
dec
inc
mov
cmp
in
fiaddl
test
and
in
lret
adc
outsl
mov
popa
add
xor
inc
add
mov
or
sub
jg
lock
pusha
pop
push
cwtl
call
shrb
xchg
andb
test
sub
xor
jno
mov
sbb
xor
mov
xchg
out
out
clc
stc
and
add
cli
lods
scas
scas
push
dec
std
push
or
xor
cwtl
mov
lahf
enter
and
rcrl
inc
inc
push
jne
scas
popl
adc
push
pop
loop
arpl
or
ret
xchg
or
add
insb
jge
mov
mov
nop
mov
mov
push
pop
subl
aas
push
dec
inc
xchg
xchg
xchg
in
out
cmpsl
xchg
jg
cmp
mov
push
adc
push
stos
imul
mov
pop
sub
mov
xchg
in
repnz
jmp
push
mov
and
add
inc
pop
mov
xchg
stos
aad
popa
mov
lret
mov
inc
mov
or
out
cmp
inc
adc
jnp
xchg
mov
push
or
inc
jns
adcl
dec
adcb
xlat
pop
sbb
fdivrs
or
pop
add
adc
jb
insb
dec
rcl
jecxz
stos
sahf
fwait
pusha
xor
ret
enter
jmp
aad
mov
test
sub
insl
aaa
adc
mov
jmp
fmulp
mov
stos
add
jmp
sarb
into
int
pusha
pop
scas
inc
test
adc
or
mov
adc
pop
ljmp
jno
cmpb
push
mov
sub
ja
push
and
mov
insl
subb
xor
and
inc
lret
test
push
xchg
or
mov
and
or
jl
mov
inc
or
sbb
dec
nop
and
push
adcl
aas
pushf
jmp
mov
dec
xchg
push
and
ret
mov
push
scas
jbe
pushl
test
xor
ja
mov
push
mov
dec
xlat
mov
mov
pushl
xchg
push
and
in
repnz
xchg
nop
push
mov
out
das
and
jb
dec
adc
adc
xchg
enter
pop
inc
sbbl
xor
jg
xor
push
xor
add
inc
sub
push
pop
ja
sub
pop
mov
pop
pop
inc
popl
and
cmp
cmc
pop
mov
inc
frstor
bound
inc
insb
xor
lea
inc
or
xor
dec
decl
addr16
pop
enter
movsl
sahf
xchg
xchg
pop
sub
adc
cmp
ret
pushf
jl
pop
sub
mov
cmpsl
mov
cmpsb
data16
sub
adc
lcall
xor
sub
mov
repz
mov
add
mov
mov
in
cld
subb
pop
mov
sub
arpl
mov
mov
push
aad
movsb
ret
mov
or
shll
and
mov
stos
pop
mull
rclb
insb
stos
inc
jnp
adc
and
test
or
and
push
adc
test
and
in
add
jg
xlat
lods
jns
jne
rcl
popf
jnp
xchg
aas
repz
call
cltd
pop
sub
enter
mov
cmp
cmpsb
push
xor
xor
lahf
pusha
xchg
pop
sub
mov
fcmovne
mov
es
push
and
fisubrl
test
or
lods
imul
add
loopne
roll
push
stos
push
iret
imul
add
pop
mov
inc
push
dec
loopne
fsub
add
jb
and
push
jbe
adcb
or
push
cmp
and
addb
xchg
xor
pop
inc
sub
lea
std
popf
xchg
adc
mov
mov
orb
xchg
xchg
nop
loope
pushl
jmp
in
rol
jp
daa
cwtl
pop
sub
xchg
je
jnp
mov
ss
fistpll
xor
das
popf
pop
sub
pop
sub
push
mov
adc
jmp
pop
cs
push
and
jo
rcr
out
addb
inc
cli
mov
stos
push
sbb
or
movsl
loopne
push
xchg
add
add
push
adc
sub
les
ret
push
pop
insl
lds
shlb
popf
jbe
jno
inc
xorl
mov
sub
aaa
scas
adc
adc
pusha
add
push
mov
lea
dec
roll
inc
arpl
lcall
cltd
cmpsb
stos
cmpsl
loop
out
mov
stos
mov
pop
xor
pop
sub
pop
pop
pop
xor
dec
scas
lcall
mov
mov
pop
scas
jns
movsl
imul
popa
xor
and
push
and
add
decl
cmp
enter
out
xchg
cltd
xchg
test
push
push
pop
cmpb
adc
add
xor
xor
out
stos
xchg
movsl
adc
cli
lcall
or
orl
addr16
subb
das
lea
adc
xchg
sub
adc
loop
push
add
ja
cmp
test
dec
sub
sbb
addb
add
and
inc
incl
mov
scas
jecxz
out
lods
jmp
andl
dec
lods
jp
mov
insb
ret
lret
int3
lods
xchg
into
scas
cltd
iret
mov
into
cmp
int
xchg
lret
stos
xchg
enter
lcall
dec
lcall
jg
dec
pop
mov
mov
mov
out
popf
mov
aam
dec
and
es
pop
inc
loop
xchg
ljmp
adc
adc
out
inc
addl
repz
pop
add
mov
and
cltd
lods
cwtl
call
dec
inc
lret
mov
push
or
into
mov
pop
jno
movsb
and
outsb
mov
and
mov
cmp
adc
orl
xor
mov
adc
pop
ljmp
test
stos
xchg
xchg
jne
lcall
mov
cmpsb
out
push
icebp
mov
test
ret
xchg
lret
in
outsl
adc
lds
pushf
cmpb
stos
jp
cwtl
pop
xor
push
pop
cmp
out
out
pushf
test
add
xor
xor
jns
lcall
xchg
pop
aaa
call
aad
cmp
inc
pusha
ret
loopne
outsb
andb
mov
das
cmp
add
mov
push
xchg
dec
mov
lret
mov
scas
add
scas
mov
inc
add
or
das
loopne
popf
mov
lods
mov
cmpsb
mov
jo
mov
xchg
jp
xchg
nop
outsb
mov
pop
ret
enter
cmc
ljmp
mov
mov
mov
inc
pop
ljmp
pop
mov
push
js
mov
leave
in
jmp
lods
inc
jne
dec
jge
jno
adc
push
test
push
mov
fcompl
ret
jbe
adc
adcl
fwait
dec
push
xor
adc
pop
pop
aaa
jmp
enter
adc
and
sub
push
adc
loopne
or
adc
mov
js
or
out
xchg
shrb
cmp
jae
add
iret
mov
xchg
ret
inc
mov
mov
out
cli
jg
je
inc
in
iret
les
lds
mov
inc
mov
rcrl
jle
test
mov
lods
js
inc
leave
ljmp
popa
cmpsb
xchg
adc
loopne
ja
push
mov
mov
scas
jl
inc
pop
inc
jo
lea
pop
mov
loope
xchg
adc
testl
or
mov
shl
push
push
sub
pop
adc
test
and
lea
sub
sbb
shrb
jns
enter
cmp
push
adcb
gs
mov
inc
inc
les
xor
sub
and
mov
cltd
jno
ljmp
fcmovnbe
sub
nop
test
mov
pusha
out
aad
test
xchg
or
jno
mov
popf
test
pushf
cmpb
jle
xchg
jp
xchg
jbe
sbbb
mov
jg
cs
ljmp
xchg
jecxz
call
pusha
pop
cmp
ret
cmp
mov
dec
xchg
inc
fwait
sbb
push
sbbl
loopne
mov
mov
inc
sub
mov
inc
adc
cmp
mov
dec
scas
stos
add
imul
xchg
push
pop
adc
and
in
subl
pushl
call
dec
mov
test
test
sbbl
xchg
mov
mov
mov
addr16
bound
mov
push
jg
mov
pop
stos
loop
pushl
aad
stos
fcmovne
ret
test
pop
mov
mov
lods
stos
push
bound
or
adc
xchg
mov
dec
bound
add
inc
and
xchg
push
adc
cmp
stc
and
xchg
ja
inc
cmpsl
mov
ljmp
xor
shlb
adc
add
push
daa
lahf
or
adc
add
int
xchg
rcl
xchg
mov
jle
out
rcr
ror
fxch
mov
push
enter
jo
xchg
jp
xchg
ja
jnp
leave
lods
xchg
fxch
rcl
ja
fstpt
shrl
fwait
xchg
fnclex
loope
jge
inc
jno
and
sbb
push
add
aas
sub
add
push
jno
inc
or
rcrb
mov
lods
inc
and
push
stc
add
mov
mov
mov
lea
push
ja
sub
ret
add
dec
loopne
addb
mov
or
sub
call
sub
orb
es
aam
stc
lahf
sub
dec
inc
fidivrs
add
addb
pop
and
mov
and
jg
insl
outsl
pop
push
sbb
rol
in
push
out
lods
mov
xchg
jle
stos
jne
shlb
xlat
shll
mov
dec
add
mov
jno
jns
loopne
mov
mov
into
mov
lcall
xchg
leave
leave
fdivs
inc
frstor
adc
pusha
xor
adc
mov
pop
sub
cmc
mov
xchg
jmp
cmp
sub
mov
sbb
insl
push
push
ud2
adc
mov
and
movsl
xchg
scas
add
shll
lods
adc
cmp
pop
nop
mov
inc
inc
inc
pop
shlb
lods
mov
and
or
dec
rorl
sarb
add
jecxz
dec
pop
dec
rorl
xor
adc
das
test
ja
xor
sbb
or
das
adc
and
loope
jmp
adc
pusha
jge
push
xor
adc
push
or
arpl
icebp
stos
xchg
xchg
inc
mov
or
sub
loope
out
adc
es
lret
inc
push
pop
mov
dec
or
insl
and
inc
insl
lds
ja
add
loopne
dec
or
cmpsb
inc
or
adc
insb
push
dec
and
icebp
inc
xor
pusha
cmc
or
mov
test
mov
jg
jp
loopne
in
out
test
xchg
jns
cmpsl
jne
lods
jnp
lods
jg
add
lods
jge
ljmp
scas
test
xchg
pusha
stos
js
test
push
cmpsl
jbe
cmpsl
je
movsl
jno
lods
fdivr
call
mov
in
in
lret
jno
push
rorl
adc
adc
sub
dec
scas
filds
inc
push
lcall
and
xor
inc
inc
inc
cwtl
push
sbb
add
cmpl
and
ss
xchg
mov
mov
pop
push
cmc
or
push
jns
xchg
add
cmp
mov
pusha
jecxz
mov
dec
ret
xor
sbb
insb
adc
xchg
adc
in
aaa
ja
ja
outsl
lcall
pusha
push
push
popf
xchg
xchg
add
pusha
push
push
cmove
inc
imul
cmp
adc
addr16
insl
mov
mov
push
shrb
and
insl
arpl
xorl
mov
push
pusha
xor
mov
xchg
mov
mov
xor
xor
lods
sbb
mov
adc
arpl
jl
cmp
cltd
imul
add
mov
inc
cmp
mov
aas
mov
mov
pop
and
das
cmp
cmp
pop
mov
out
test
mov
pop
lods
andb
addr16
ljmp
gs
andb
popa
cmpsl
jl
cmpsb
js
movsl
jbe
mov
js
mov
sar
cmp
push
aad
fcoms
cmp
int
add
in
shll
xor
jno
xor
mov
dec
lods
pshufw
jbe
mov
jae
inc
out
push
mov
cli
mov
jecxz
inc
inc
cmp
dec
mov
adc
outsl
test
stos
loopne
cmpsb
and
insl
pop
fisttpll
pop
or
cs
shrl
popl
xchg
les
pop
neg
cmp
popl
ret
xchg
ja
mov
bound
xor
in
shr
mov
negb
add
push
cmc
adc
gs
out
push
mov
stos
add
inc
popa
push
sahf
push
mov
adc
sarl
in
cmp
loope
mov
insl
jp
out
mov
imul
arpl
sub
mov
imul
pop
mov
mov
jno
and
stos
enter
and
pop
dec
xchg
add
push
add
jg
dec
inc
stos
repz
ljmp
dec
cmp
lahf
pushf
loop
in
out
in
mov
mov
xchg
addr16
movsl
jp
cmpsl
jns
test
pop
cmpsl
js
cmpsb
ja
mov
lcall
jge
xchg
xchg
xchg
mov
jmp
fcmovu
mov
cmpsl
cmp
in
pusha
in
add
pop
decl
imul
xor
mov
push
popf
dec
xchg
lds
gs
xchg
cmp
xchg
ss
xorb
imul
xlat
cwtl
sub
mov
mov
movsb
insl
inc
mov
rcrl
ja
xor
and
and
test
jne
jmp
dec
fcmovnbe
sarb
pusha
xor
pop
aas
or
pop
jnp
jmp
subl
jnp
lods
pusha
push
insb
and
adc
popf
pop
cmp
mov
and
pop
out
sub
ret
sbb
adc
imul
jp
pop
xchg
inc
jmp
fnstsw
sub
jnp
sbb
mov
lods
arpl
push
and
xlat
cmp
and
sub
mov
cmp
dec
pop
cmp
out
cli
jg
dec
inc
popf
popf
lcall
xlat
scas
mov
cwtl
fwait
pop
xchg
jle
aas
sti
insl
xchg
jle
cwtl
add
xchg
xchg
fwait
mov
mov
jmp
int3
ror
mov
add
push
inc
inc
shll
xor
dec
sbb
mov
xor
pop
mov
or
ja
cmpsl
das
fidivl
mov
nop
stos
insl
sbb
inc
mov
mov
xor
test
mov
out
xchg
test
mov
fwait
pop
push
rcll
scas
sbb
or
lods
ds
add
call
push
or
mov
lods
or
cmp
roll
sbb
push
rol
fistl
xchg
jno
jno
ss
inc
inc
cmc
mov
mov
sub
pop
dec
test
das
imul
lods
pop
inc
jmp
stos
flds
imul
add
sbb
xchg
mov
les
sbb
lods
inc
dec
push
cmpsl
pop
icebp
decl
cmp
jo
mov
mov
loope
jmp
in
loop
in
ret
mov
jnp
push
ret
int
rcrb
out
out
call
jle
scas
lods
jno
imul
ss
xchg
inc
and
divb
gs
adc
push
sub
pop
pop
xchg
sbb
push
jmp
add
sub
xchg
loopne
cmpb
xor
rcr
imul
jecxz
sbb
mov
imul
gs
jbe
mov
sub
fdivs
lods
fsubr
das
shll
mov
sub
add
adc
or
rcr
stos
les
and
lret
push
cwtl
sbb
pop
fwait
jnp
mov
inc
push
in
inc
fidivl
sbb
fwait
dec
xor
ja
and
bound
and
or
popf
insl
mov
and
fdivs
cltd
sbb
fistpl
aas
jno
cmp
dec
cmpb
stos
enter
sti
inc
add
loope
jecxz
call
loope
pop
dec
or
jnp
jae
shlb
cmp
pop
cmpsl
xorb
lods
insl
dec
pop
sbb
inc
and
add
fsts
push
mov
pop
dec
cmp
fstpl
mov
out
imul
jae
jno
sub
cmc
mov
xchg
addb
subl
mov
jbe
sub
orl
or
iret
lods
mov
sbb
add
andl
inc
push
insb
pop
mov
add
arpl
lret
xchg
mov
icebp
cmpsl
aaa
or
sbb
popl
ret
xor
dec
pop
sbb
jno
insl
adc
outsl
mov
sbb
movsb
popa
movsl
and
push
jecxz
das
outsl
inc
popa
imul
sub
fcmovnu
push
mov
fbstp
arpl
mov
sbb
fs
push
dec
fbstp
add
inc
lds
and
imul
adc
dec
mov
add
inc
cmp
jo
cmpb
xchg
push
pop
pop
lea
mov
insl
and
inc
adc
jmp
adc
dec
outsl
in
insl
test
les
sbb
addr16
inc
js
mov
kmovw
test
mov
mov
mov
or
sub
dec
insl
ret
xor
add
sarl
inc
add
push
cmp
test
lds
stos
bound
dec
xchg
adc
mov
xor
dec
jge
push
lods
and
mov
and
lret
lds
stos
punpcklwd
push
mov
jns
cmp
fucomp
fadds
dec
adc
and
pop
push
dec
pop
sbb
adc
and
sub
imulb
mov
dec
ja
inc
add
dec
out
add
ficoml
mov
dec
or
jecxz
inc
xlat
add
pop
adc
mov
mov
addr16
sub
fcmovu
bound
das
jno
cmp
xlat
stos
insl
pop
ret
lret
mov
das
cmp
add
sbb
test
sbb
aas
pop
imul
or
pop
ret
sub
aas
mov
inc
pop
jns
pusha
sub
sub
pop
jmp
inc
sbb
sub
fucom
push
lods
insl
pop
adc
jnp
dec
adc
inc
or
adc
loop
mov
ret
stos
gs
movsl
push
imul
pop
ret
sub
push
je
or
xchg
jmp
mov
addr16
pop
and
push
and
pop
xchg
and
and
nop
in
out
mov
and
fistpl
mov
imul
das
insl
cmpl
add
mov
jno
pop
jnp
ss
lret
inc
pop
adc
pop
fdivs
jmp
out
das
cmp
add
or
jnp
dec
or
insl
leave
out
dec
lea
xor
lods
sbb
adc
mov
jecxz
imul
add
adc
jns
test
enter
and
mov
leave
or
adc
pop
add
xlat
jmp
mov
aaa
push
cmc
sarb
stos
or
xchg
sbbb
int
rclb
lods
fwait
out
add
ret
cmp
and
cmp
push
xor
dec
cmp
jge
adc
xchg
push
pop
pop
lea
imul
push
inc
pop
dec
pop
and
sub
adc
iret
push
push
and
or
add
dec
xor
cmp
pop
fisubs
adc
add
mov
mov
xor
icebp
push
fisttpl
test
rorb
inc
adcb
ja
popf
pop
pop
mov
mov
pop
sub
inc
inc
or
pop
add
aam
sbb
push
add
pop
mov
mov
adc
inc
ret
aas
or
mov
scas
out
nop
pop
push
ja
push
imul
pushf
and
bound
xor
lds
mov
notl
lds
adc
insl
cmc
adc
xchg
mov
sub
fisttps
sub
sub
pop
insl
cmp
sbb
das
mov
inc
sbb
mov
and
in
lods
jno
imul
ss
sub
jno
jmp
mov
inc
sub
imul
and
jl
add
mov
orb
mov
test
dec
cmp
in
adc
sbb
aad
push
sub
arpl
push
or
mov
insl
mov
push
pusha
mov
outsl
push
mov
mov
divb
pop
stos
lods
call
mov
les
test
mov
and
dec
mov
das
add
loopne
pop
mov
dec
shll
or
push
insb
dec
lds
xchg
mov
shrl
cmp
push
dec
push
inc
adc
add
pop
sub
ds
pop
inc
fcmovnu
cmp
mov
xorb
pop
insl
dec
in
inc
hlt
das
adc
lea
insb
mov
sub
mov
inc
xchg
fwait
add
int
sub
adc
or
push
aas
xchg
fistpl
push
rcrl
xor
and
adc
outsl
mov
inc
xor
add
xchg
jecxz
inc
shll
pop
pop
mov
cmp
jbe
or
xlat
inc
gs
push
jmp
adc
mov
xorb
mov
stos
mov
mov
ud1
xor
push
inc
std
popf
and
pop
inc
mov
movsl
mov
xchg
mov
fdivrs
push
push
dec
inc
inc
add
outsl
xor
sub
insl
test
pop
or
sub
add
pop
mov
add
jno
cmp
andb
mov
sbbl
lods
xchg
adc
scas
mov
push
adc
xor
test
in
sub
sub
xchg
add
xchg
pop
xor
xchg
push
sub
mov
pop
sub
xchg
pop
dec
sub
sub
or
sub
fistpl
sub
sub
add
sbb
in
loopne
dec
pushl
pusha
or
rclb
mov
aad
das
add
add
xchg
shlb
mov
mov
fdivp
mov
mov
in
fadds
push
dec
pop
xlat
insl
fists
or
pop
inc
xchg
shlb
xchg
lods
mov
or
inc
cmpsl
xor
subb
pop
add
dec
ja
adc
mov
inc
ja
aaa
sub
aaa
int
fdivs
das
in
mov
pop
mov
add
mov
or
pop
jmp
lret
lds
sbb
jne
lret
subl
mov
adcb
push
int
sbb
add
shrd
push
mov
roll
adc
pop
push
mov
inc
orl
popa
inc
mov
jno
lea
pop
push
mov
in
push
lods
icebp
icebp
sarl
inc
fnsave
adc
lds
jno
popa
add
add
push
movb
lods
add
xor
jne
pop
jnp
ficomps
add
gs
adc
outsb
and
pop
jge
divb
imul
testl
jmp
dec
cmp
fists
lea
mov
xor
ret
xchg
or
fnstcw
sub
cmpsl
imul
popa
sbb
pop
pop
int3
push
and
jnp
mov
ja
jge
or
rcrl
ret
pop
mov
pop
jmp
and
roll
or
lret
adc
imul
add
sub
or
mov
das
adc
adc
pop
sbb
icebp
ja
sbb
test
mov
cmp
mov
pop
adc
outsb
insb
dec
ja
jge
sub
mov
insl
pop
jge
or
das
leave
mov
adc
jecxz
nop
cwtl
fidivs
sub
add
sbb
sub
push
xor
fnstsw
pop
sub
fsubs
xchg
xor
fisubrs
gs
mov
pop
mov
or
pop
ja
mov
or
add
cmc
sub
fdivs
ja
addb
sbb
mov
and
xor
or
jecxz
fcom
mov
jge
push
xchg
andl
psubusb
adc
xor
mov
xorb
mov
mov
mov
mov
and
inc
scas
jge
sub
rcll
insl
add
cmp
dec
mov
popa
insl
fistl
cmpsl
jecxz
loopne
adc
xor
cmp
pop
mov
aaa
and
mov
les
inc
cmc
gs
mov
rcl
pop
fistl
mov
dec
ficompl
cmpsl
insl
inc
mov
xor
adc
push
mov
xlat
inc
mov
fists
adc
mov
dec
inc
mov
xor
or
mov
lods
insl
adc
pop
sub
and
sub
stos
sub
jnp
or
push
or
or
icebp
popa
inc
xlat
xchg
lock
cmp
sub
push
rcr
mov
add
mov
aaa
mov
pop
je
xor
mov
stc
adc
inc
ror
sub
sub
mov
inc
mov
push
mov
inc
sbb
dec
dec
inc
inc
lds
testl
dec
imul
movsl
inc
fwait
rcll
and
test
pop
arpl
add
pop
and
scas
test
jbe
push
xchg
mov
mov
sbb
and
ja
push
inc
in
insb
mov
adc
and
lods
push
in
mov
fwait
push
jge
sbb
adc
mov
sub
jge
lods
xchg
cmc
adc
or
pop
and
outsb
xchg
cmp
mov
mov
sbb
push
fdivl
inc
mov
mov
subb
test
jecxz
imul
sub
das
gs
mov
jbe
add
add
and
xor
or
pop
cmpsb
xor
lahf
jno
push
inc
and
sub
mov
outsb
lds
js
std
add
sbb
in
push
out
lods
cmp
ja
data16
mov
sbb
aad
add
sub
inc
jno
xor
out
adc
inc
sbb
das
test
es
inc
jmp
rcll
icebp
mov
adc
mov
adc
adc
test
ja
sub
mov
inc
mov
pop
inc
xchg
mov
push
push
xchg
jno
adc
mov
pop
push
dec
and
inc
mov
xchg
dec
and
mov
bound
mov
jno
and
adc
rcll
ficoml
xor
mov
sbb
mov
fstpl
mov
imul
sub
xor
jp
imul
gs
andb
push
mov
add
xchg
jge
std
jo
pop
jno
ret
sub
add
cmp
pop
lds
mov
out
add
push
pop
cmp
xor
adc
popl
rcl
push
dec
push
add
sbb
dec
push
push
pop
mov
in
mov
jmp
xchg
add
sbb
inc
imul
sub
sbb
insl
fadds
xchg
mov
pop
sbb
xor
lods
add
das
cmc
inc
pop
mov
mov
mov
push
add
js
pop
sub
and
das
xlat
mov
shr
lods
xchg
sub
psubsw
mov
mov
xchg
mov
or
ficoml
or
pop
int
push
arpl
or
sti
icebp
sbb
cmp
push
repz
sbb
fcmovb
fstpt
insb
adc
pop
add
mov
sti
pop
mov
inc
mov
hlt
jge
and
add
movsl
and
lcall
sub
add
cs
xlat
das
or
mov
or
mov
xchg
inc
sub
mov
out
push
adc
mov
push
lret
mov
inc
push
pushf
inc
or
bound
cmp
mov
mov
pop
jo
mov
lcall
sbb
or
push
imul
xorb
pop
add
leave
mov
xor
das
in
sub
jge
sbb
rcll
pop
insl
fcmovnb
outsb
cmpsl
dec
sti
dec
jno
lea
add
ja
lret
popa
clc
imul
dec
imul
sub
dec
das
xlat
icebp
adc
pop
mov
roll
divl
sbb
pop
aas
std
mov
fcmovb
mov
adc
cmp
sbbl
push
inc
mov
movsb
insl
mov
mov
dec
fidivl
fists
lret
xor
fildl
int
lods
mov
pop
xchg
mov
mov
inc
inc
jmp
out
or
pop
stos
sub
cs
jnp
sub
popf
cmp
mov
mov
pushf
dec
inc
dec
pop
xlat
xchg
call
mov
jp
xchg
cmpsl
lds
inc
fcoml
inc
add
jge
call
pusha
orl
mov
push
push
pop
pusha
pop
shll
push
cmp
fildll
push
jns
sub
fcmovnbe
cmp
push
pop
mov
add
cmp
pop
ss
dec
mov
imul
and
fisttpll
pop
jge
xchg
mov
inc
adc
in
jmp
adc
mov
push
out
mov
pop
adc
and
addb
mov
or
cmp
jae
sub
or
jecxz
sti
loopne
fsubrs
jns
and
adc
adc
insb
inc
or
mov
add
xor
adc
adc
imul
sub
sbb
push
mov
pop
rcr
mov
rorl
sub
push
in
adc
xlat
stos
mov
fildl
cmc
lods
shll
jno
imul
sti
inc
xchg
pop
fists
jl
push
and
pop
dec
cmc
xchg
lods
rolb
das
xor
xor
arpl
mov
xchg
jnp
sub
imul
xchg
jno
cmpsl
lds
enter
cmp
stos
adc
into
mov
mov
or
inc
push
mov
popa
add
sub
rorb
inc
lods
ffree
scas
sub
add
mov
mov
xor
and
mov
jns
push
mov
shlb
xor
xor
out
jno
sub
pop
fistpll
mov
inc
mov
dec
pop
test
subb
in
mov
jecxz
inc
or
xchg
xorb
fistl
out
std
lds
mov
or
cmpb
mov
add
rcr
shll
ja
insl
sbb
mov
mov
jo
lds
in
sub
jnp
sub
jge
dec
outsl
sti
sbb
jg
pop
mov
pop
pusha
xchg
mov
pop
sub
js
add
xlat
das
jg
in
insl
pop
out
mov
mov
jge
cmc
xor
std
imul
cmpsb
push
lods
dec
push
inc
sub
sbb
mov
jae
jge
xor
imul
mov
int
sub
inc
xor
fdivrp
mov
pop
jle
testl
dec
pushf
xchg
fwait
sbb
add
and
out
sbb
insl
shrl
pop
aam
es
inc
ja
jge
pop
leave
adc
xchg
cmc
mov
push
push
popa
inc
js
neg
bound
mov
inc
xchg
mov
insl
and
sbb
sbb
imul
insl
and
add
out
or
fsubrl
mov
popa
fsts
jno
mov
sub
roll
outsb
inc
xorb
mov
inc
jae
sub
cmpsl
fwait
jns
pusha
or
insl
and
insl
cmpsl
mov
pop
mov
out
aad
pop
or
mov
lahf
out
xor
gs
sbb
jnp
scas
push
inc
mov
loopne
sbb
cmp
mov
push
mov
jmp
mov
imul
xchg
das
cmpsl
insb
xchg
imul
mov
xor
jno
push
sub
xor
and
xchg
push
xchg
dec
mov
ret
fisttpl
addb
ds
jns
pop
push
push
sub
push
xchg
mov
sub
push
jl
das
icebp
mov
push
dec
imul
dec
mov
mov
bound
lds
stos
ficompl
sub
adc
adcl
push
or
mov
fistl
sbb
xchg
mov
insl
mov
test
in
jbe
std
dec
adc
mov
mov
xor
dec
inc
insb
imul
fldl
inc
xor
jmp
popa
ret
stos
pusha
push
cltd
sub
add
mov
nop
xchg
fcoml
mov
jg
addb
push
mov
push
sub
sub
mov
dec
xor
pop
mov
bound
rolb
xor
xor
out
xor
cmp
xchg
imul
cmp
lock
gs
cltd
jmp
cmp
aaa
dec
das
sub
dec
push
insb
leave
and
mov
daa
pop
sub
xor
fldt
xchg
push
dec
arpl
ret
adc
or
add
sub
pop
and
add
xchg
fidivrl
clc
and
sub
out
lods
and
xor
test
fisttps
push
adc
mov
outsb
call
add
mov
sbb
or
mov
jne
movsb
cmp
test
jmp
in
pop
mov
fists
mov
sbb
and
adc
xor
mov
pop
push
leave
push
pop
and
xor
sub
scas
mov
insl
pop
push
pop
push
mov
adc
jns
outsb
test
adc
aaa
imul
loope
ja
arpl
jecxz
inc
sbb
sub
bound
sbb
test
shl
inc
leave
jmp
inc
fsubrs
inc
mov
popa
sub
dec
sub
arpl
fdivs
mov
sub
adc
mov
addr16
inc
nop
jbe
xchg
push
inc
insl
adc
cmp
gs
inc
test
arpl
sub
jmp
fnstenv
mov
insl
lods
lds
mov
xchg
sbb
mov
mov
test
insl
xorl
adcl
sbb
jne
arpl
push
pop
add
adc
imul
inc
test
pop
mov
cwtl
and
lods
pop
or
mov
dec
dec
mov
pop
xchg
mov
aaa
in
pop
push
adc
imul
jp
xchg
mov
dec
xor
scas
stos
scas
dec
xchg
and
jnp
sahf
sub
pop
jo
mov
cmp
sbb
fmuls
xchg
sbb
push
fistpl
mov
fwait
pop
pop
lds
and
mov
sub
imul
xlat
pop
fisubl
sub
cmp
sbb
das
rorl
mov
pop
lods
mov
mov
xlat
sub
cmp
insl
mov
ret
addb
push
sub
adc
sub
mov
adc
divl
lods
fwait
jno
push
mov
loop
adc
sbb
fbld
pop
inc
or
in
dec
jecxz
pusha
jne
push
add
push
push
les
mov
fdivs
sbb
add
push
rorl
cmpsl
scas
adc
out
inc
cmp
jo
push
cmp
mov
cmpsb
xchg
xchg
mov
add
rclb
jno
movl
add
adc
or
xchg
mov
inc
mov
cmpsb
mov
or
jge
push
pop
or
or
pop
mov
mov
pop
mov
xor
mov
shr
push
mov
xchg
int3
out
push
or
mov
sub
repnz
arpl
fadd
fisubs
gs
fidivs
insl
pop
adc
lds
iret
movsl
and
xchg
and
mov
add
adc
inc
push
jno
mov
and
cmpsl
adc
lods
insl
lret
dec
imul
inc
cmc
xor
fstpt
inc
lret
outsw
mov
das
add
add
pop
mov
dec
pop
mov
and
ret
or
mov
sbb
ss
pop
ret
lods
push
pusha
leave
add
mov
sub
ss
shrl
adc
sub
or
sbb
add
icebp
inc
mov
dec
popa
imul
test
bound
mov
in
ljmp
mov
stc
scas
aam
jge
mov
fwait
inc
call
outsl
jbe
aas
sub
cwtl
jo
inc
sti
add
stc
inc
jo
scas
loop
mov
mov
push
aas
mov
sub
idivl
push
dec
or
push
xchg
sub
push
inc
mov
adc
insl
mov
ficoml
mov
imul
ret
adc
mov
fdivl
outsl
fistpl
jge
jmp
inc
adc
sub
and
push
and
popf
mov
adc
add
jecxz
imul
mov
mov
adc
jnp
das
sbb
xor
mov
sub
mov
dec
aas
mov
idivl
addl
pop
sub
jne
and
rcrl
or
pop
xchg
ret
sub
rcrl
and
adc
mov
mov
pop
cmp
and
xchg
cmp
test
mov
mov
push
mov
popl
pusha
lcall
xchg
test
popf
xchg
mov
or
fcmovnu
out
xor
xor
pop
pop
jge
jno
jge
push
and
cmp
in
lahf
pop
and
or
add
pop
jno
adc
xor
inc
imul
adc
mov
ficoml
icebp
dec
arpl
pop
rcrl
pop
data16
sub
addr16
fdivl
bound
push
les
lods
push
xor
adc
mov
dec
sub
rcll
pop
inc
and
fdivp
sbb
rcll
mov
xorl
jge
push
orl
mov
andb
dec
push
outsl
shll
orl
add
sub
shll
ficompl
movsb
rcll
insl
or
dec
push
mov
outsb
insl
cmc
push
jns
and
les
and
sub
add
cmp
jmp
and
inc
movsb
imul
and
and
out
dec
and
push
mov
pop
inc
push
lods
insl
xlat
mov
dec
mov
mov
cmc
adc
neg
adc
dec
push
in
pop
xchg
pop
adc
dec
sub
sub
scas
or
sbb
test
sti
divb
dec
add
shrl
pop
mov
add
loop
jno
loop
pusha
js
push
mov
adc
cmpsb
inc
dec
jg
sbb
das
lods
dec
sub
sub
mov
movsb
cmp
ss
rcl
jbe
mov
inc
pop
das
dec
mov
dec
add
sub
push
cmp
xchg
push
fisubrs
lods
push
andl
fs
shrl
or
cmpl
sub
and
push
les
inc
movsb
outsl
push
add
not
mov
xor
adc
cmp
fwait
sbb
imul
loop
inc
push
les
cmpl
pop
ja
mov
sub
jbe
mov
int
mov
add
push
nop
test
mov
push
mov
es
sub
pop
push
mov
dec
push
cmpsl
movsl
pop
and
xchg
mov
fidivl
lea
push
dec
imul
in
and
sbb
sbb
scas
mov
and
xchg
mov
push
mov
add
fwait
movsl
push
pop
bound
sbb
mov
push
aad
inc
xchg
cmp
or
adc
jno
pop
mov
pop
lds
push
ja
pop
in
popl
mov
add
mov
add
fadds
je
and
sub
push
add
mov
rolb
mov
jae
rolb
cmp
mov
cwtl
fisubrl
push
test
in
mov
mov
imul
mov
mov
jno
pop
mov
mov
push
mov
sti
mov
fwait
lods
adc
lds
inc
add
add
nop
mov
sbb
push
aas
xor
pop
push
inc
sub
jmp
sub
lods
sub
mov
sbb
pop
fwait
iret
push
bound
mov
icebp
jmp
and
sbb
push
jns
push
sbb
jmp
popa
jae
add
pop
mov
mov
inc
pop
andl
imul
dec
adc
pop
mov
insl
xor
shll
pop
roll
rcr
mov
orb
xchg
movsl
cwtl
insb
imul
xor
ret
shrl
push
xchg
aaa
and
adc
mov
test
adc
and
ss
lods
mov
in
pop
inc
int
push
sbb
loopne
adc
push
test
xchg
leave
and
jno
mov
in
or
push
fwait
sub
lods
sbb
sbb
inc
xor
and
xor
aad
and
ja
mov
mov
pop
push
insl
mov
insb
pop
add
add
fisubrs
xor
add
sbb
inc
and
and
ficoms
jne
cmpsl
imul
adc
cmc
inc
or
mov
popf
mov
rcll
add
dec
shr
push
nop
inc
addr16
sub
shl
outsl
cmp
xchg
loopne
add
lods
fmulp
rcl
ret
cmp
dec
lods
ficomps
testb
xor
dec
pop
aaa
mov
adc
pop
mov
xor
adc
pop
add
imul
in
mov
jo
push
dec
sbb
aaa
inc
cmc
lea
adc
movsb
arpl
inc
xchg
pop
xor
adc
push
test
sub
mov
mov
je
push
rcll
pop
inc
aad
sub
dec
xchg
inc
adc
dec
mov
mov
notl
mov
mov
test
jne
push
pushw
push
outsb
dec
add
pop
pop
movsb
insl
fldcw
add
mov
or
pop
mov
dec
mov
pop
fcomps
mov
insl
pop
mov
insb
xor
imul
push
inc
dec
cmc
xor
adc
dec
insl
fisttpl
push
popa
push
xlat
shrl
and
mov
cmc
lret
jmp
pop
and
scas
out
mov
mov
mov
mov
mov
imul
lea
inc
sub
jge
push
insl
ret
pop
bound
mov
fucomp
outsb
adcl
int3
insb
fcmovnu
xchg
pop
or
ffree
mov
push
sub
pop
adc
stos
loopne
mov
pop
testl
mov
pop
jg
cwtl
fcomps
mov
add
loop
jmp
lret
add
push
pop
loope
and
jge
mov
push
sahf
lcall
mov
lcall
xchg
in
add
jo
mov
or
pop
pop
daa
sub
add
jg
rcr
or
test
jae
xorl
repz
xorl
jno
xorl
jg
push
aaa
ljmp
outsb
imul
jl
imul
gs
fs
mov
js
popa
jns
pusha
js
fs
jne
pop
jne
pop
pop
and
out
popa
pop
jae
pop
jb
pop
xor
pop
jo
out
xlat
mov
or
and
or
xlat
xchg
push
push
add
fstpt
pop
adcb
addr16
call
pop
sub
data16
subb
jo
test
test
std
call
xchg
outsl
mov
mov
mov
lea
mov
add
jle
xchg
cmpb
call
jge
test
test
xchg
cltd
mov
repz
xchg
mov
jg
mov
mov
pop
fcom
fcoml
add
lods
sub
inc
fildl
imul
jecxz
inc
sub
or
adc
dec
add
lret
imul
int
cwtl
and
mov
mov
test
pop
xor
pusha
dec
rolb
jns
insb
sbb
or
addb
nop
in
adc
pop
pushf
ja
push
addl
add
push
add
add
add
mov
scas
shl
daa
or
adc
adc
adcb
scas
xor
pop
bsr
fidivs
popa
das
mov
insl
out
sub
outsl
or
adc
add
test
fnsave
xor
mov
pop
or
ret
sub
push
sti
sti
cli
add
ficompl
add
add
das
add
ret
fnsave
or
add
inc
xor
adc
in
pop
pop
adc
xchg
clc
add
add
fsubp
pop
stc
adc
mov
mov
xor
aas
outsl
or
add
and
movl
inc
mov
pop
rol
lock
mov
pop
cmp
sub
pop
testb
sub
mov
testl
and
rcll
mov
loopne
add
pop
mov
add
inc
test
repz
shlw
sub
adc
insb
fdivrs
add
adc
pop
xchg
nop
sub
add
inc
adc
and
mov
pop
ss
gs
push
pop
dec
jae
sbb
mov
xchg
or
xchg
adc
fiadds
pop
sub
mov
or
psllw
or
xchg
pop
xor
sbb
in
push
enter
xor
lock
insb
push
lret
add
int
or
add
mov
or
pop
or
xchg
lods
and
inc
and
dec
mov
bound
add
out
add
andps
popa
inc
sbb
pop
sub
add
fcmovbe
push
sub
add
add
sbb
bound
inc
mov
sbb
ja
dec
inc
jecxz
jnp
mov
mov
stos
cmovs
and
push
push
int
mov
push
pop
xchg
push
mov
mov
ficomps
cltd
popf
inc
sub
rorb
jmp
sbb
sub
jnp
stos
test
fnstcw
push
dec
or
cmc
cmc
xchg
idivb
or
push
inc
arpl
or
push
insb
add
pop
or
movsl
jmp
aam
pop
dec
inc
fnsave
and
mov
pop
mov
mov
adc
inc
jno
pop
push
jge
outsb
adc
cs
add
insl
das
insb
mov
ja
add
xchg
add
sub
cltd
das
sbb
jmp
pusha
imul
in
add
inc
inc
mov
fwait
mov
xchg
int
test
cld
sub
pop
or
ss
xor
jge
xor
push
add
add
lods
mov
addl
pop
mov
fsubrl
inc
inc
das
loopne
sub
in
rolb
xchg
adc
out
mov
pop
or
cvtps2pi
movq
mov
mov
dec
fwait
std
in
lods
mov
add
pop
sub
movsb
lods
insl
mov
sub
rorl
xor
xchg
test
es
inc
lds
and
inc
mov
daa
pop
dec
mov
jnp
sbb
fmuls
add
in
insl
dec
add
ret
roll
dec
incl
pop
test
icebp
dec
pop
fnsave
push
mov
or
loope
mov
cmp
pop
add
and
push
pop
and
mov
xor
inc
push
lds
lds
add
sbb
cmp
add
jecxz
mov
jg
in
push
rcrl
ret
subb
mov
push
fisubl
or
fwait
add
dec
imul
mov
push
add
je
andb
pop
mov
mov
pop
addr16
ficompl
push
inc
sbb
ficoml
dec
fwait
or
xchg
sub
or
add
insl
add
xchg
mov
xor
add
and
push
adc
nop
cmp
aas
jnp
adc
mov
mov
aad
sub
pop
push
mov
dec
add
imul
test
mov
icebp
mov
xor
sub
test
and
cmpsb
adc
mov
and
das
call
sbb
test
sub
inc
xor
or
push
mov
and
sub
stos
adc
push
jb
push
scas
add
out
inc
dec
dec
scas
add
or
das
push
inc
xchg
add
and
jb
nop
add
and
nop
adc
inc
push
add
pop
adc
add
and
add
in
call
add
mov
inc
adc
add
adc
inc
add
add
inc
add
out
add
dec
add
add
inc
enter
inc
andb
add
adc
test
xchg
pop
aaa
push
add
and
andl
and
sbb
inc
nop
sub
orb
sarb
sub
pop
adcb
and
cmp
push
dec
rcr
add
nop
lods
add
mov
pop
push
or
xchg
and
sub
test
dec
xchg
sub
push
dec
mov
pop
xor
das
or
and
inc
and
sbb
mov
pop
inc
add
sub
push
test
test
push
inc
push
add
cmp
or
push
xorb
adc
sub
add
add
add
adc
push
add
mov
inc
xor
or
xchg
adc
push
dec
adc
outsl
add
sub
filds
inc
test
inc
xchg
mov
and
and
stos
and
add
adc
add
inc
adc
stos
inc
inc
sarb
addl
inc
push
dec
stos
mov
dec
xchg
adc
dec
fs
cmp
add
adc
leave
mov
and
mov
fs
or
inc
xor
mov
add
add
add
add
mov
add
dec
adc
add
paddd
and
test
xorb
and
dec
mov
sbb
sbb
lods
mov
add
mov
push
xchg
and
add
and
mov
xchg
fs
adc
nop
inc
add
rorl
adc
xchg
sub
add
sbb
inc
sub
mov
das
adcb
push
xchg
push
adc
xor
inc
test
xchg
and
push
mov
or
add
outsl
inc
imul
and
or
daa
loope
inc
dec
mov
sub
lret
rorb
inc
adc
sub
sbb
daa
pop
add
aad
sbb
or
pop
inc
push
adcb
icebp
cmp
or
stos
adc
mov
mov
or
inc
push
and
rcrl
xchg
sub
push
cmp
xor
xchg
ret
push
inc
and
inc
pop
les
mov
decl
adc
push
nop
sbb
inc
add
leave
pop
adc
pop
inc
inc
addr16
inc
inc
add
test
cmpl
pop
and
or
jb
mov
inc
cmp
cs
xchg
inc
sub
sub
jno
inc
add
les
add
mov
dec
inc
enter
dec
inc
jb
and
pop
adc
mov
ret
mov
add
add
stos
cmp
adc
jne
scas
popl
ret
rcrl
popa
rorl
mov
dec
andl
inc
mov
sbb
test
or
sub
aad
ret
sub
jo
insl
fsubs
scas
mov
adc
or
adc
adc
dec
mov
mov
popf
adc
addl
jne
cmp
xorb
xchg
sub
pop
shlb
add
push
mov
mov
jg
xchg
sub
mov
fimuls
dec
dec
adc
mov
inc
cmp
test
pusha
dec
test
pushf
push
insb
rcll
es
inc
inc
dec
dec
sbb
outsl
jne
mov
mov
sbb
pusha
fsubrs
subb
pop
pop
jne
mov
or
push
cwtl
sarl
dec
add
mov
sbb
lock
out
fadds
xchg
sub
mov
and
add
adc
mov
adc
add
pop
popa
dec
xor
sub
add
sub
pop
dec
pop
add
mov
cwtl
adcl
add
outsw
xorl
jno
push
inc
adc
stos
lods
mov
jo
call
inc
sub
or
push
adc
iret
add
dec
popa
add
push
sub
or
inc
and
mov
and
leave
adc
cmp
or
ret
iret
sbb
mov
push
xor
mov
add
add
and
push
or
mov
addb
fld
stos
and
dec
cmp
mov
pop
push
adc
add
push
inc
add
mov
test
add
jo
call
cwtl
stos
dec
inc
and
sbb
mov
mov
sbb
imul
add
push
inc
inc
mov
inc
inc
movsb
inc
xor
mov
popaw
dec
xor
xchg
mov
or
or
das
xchg
inc
add
arpl
dec
aas
add
mov
inc
andps
mov
dec
ret
dec
and
inc
shrb
adc
or
adc
inc
and
and
add
adc
mov
or
inc
adc
jns
add
and
add
inc
add
pop
adc
or
inc
arpl
push
push
mov
dec
orl
sub
mov
add
and
push
sbb
inc
mov
stos
bound
and
adc
and
inc
xor
repnz
sub
dec
mov
add
and
add
push
aas
jb
and
aaa
lods
inc
add
add
sub
pop
or
add
sub
and
add
test
scas
and
adc
leave
add
and
push
lahf
dec
inc
test
and
cmp
add
sub
adc
adc
push
nop
mov
push
add
and
fs
inc
punpcklwd
mov
mov
mov
decl
mov
adc
adcb
inc
mov
sbb
xchg
sub
adc
nop
or
or
add
and
mov
and
add
add
sub
sbb
mov
pushf
and
add
add
dec
adc
addb
fadds
and
test
pop
add
test
test
sbb
inc
push
adc
cmp
shrb
or
push
xchg
test
xchg
add
sbb
insb
dec
mov
or
or
pop
cmc
pop
xor
movl
dec
push
xor
push
mov
inc
dec
inc
insl
fsts
add
push
push
orb
add
pop
add
push
mov
xor
dec
add
mov
popl
or
insl
std
adc
xchg
or
lea
push
popl
xor
add
and
insl
dec
xchg
test
add
push
fadds
push
enter
add
test
js
sub
and
cwtl
dec
and
sbbb
loope
xchg
mov
test
mov
push
sbb
pop
inc
mov
xchg
mov
stos
or
adc
xchg
nop
inc
lds
dec
test
push
xor
or
aas
and
add
xchg
sub
inc
mov
adcb
mov
dec
and
rorl
and
and
sub
adc
lods
and
shrb
pop
and
sbbb
inc
fcoml
add
add
xchg
in
mov
aam
notl
xor
jg
mov
gs
pop
adc
cwtl
movd
add
sub
xor
lahf
test
inc
sub
and
push
aad
fisubl
add
jno
aam
push
imul
adc
nop
add
add
and
dec
or
inc
add
add
mov
xchg
pop
xchg
add
add
cmp
sub
mov
and
aaa
xor
adc
mov
add
inc
rcl
jne
mov
dec
pop
jne
imul
inc
rcl
jnp
lods
xchg
mov
mov
push
xchg
xlat
xor
frstor
imul
lcall
lret
inc
shlb
pop
fwait
add
scas
lods
xchg
mov
rolb
add
and
mov
hlt
dec
pop
iret
adc
and
shlb
fsubrs
fsubrs
xchg
push
add
fsubl
sbb
insb
shll
dec
pop
mov
enter
pop
jo
dec
pop
mov
test
mulb
mov
and
cmp
rcl
sbb
jecxz
js
ror
mov
xor
and
arpl
fcomi
mov
imul
mov
add
sub
mov
aaa
rolb
sub
mov
inc
inc
adc
xor
les
add
xor
lds
sub
sbb
mov
and
lea
sub
pop
and
push
shlb
adc
sbb
inc
add
add
scas
add
addl
inc
cmp
jecxz
or
mov
andb
vmwrite
mov
adc
jo
add
sub
pop
test
outsb
dec
addr16
sub
mov
adc
bound
pop
in
addl
ss
inc
add
xchg
orb
mov
inc
sub
shll
lcall
lea
add
mov
mov
xchg
adc
push
adc
int3
mov
dec
dec
mov
inc
aaa
xor
pusha
lds
icebp
jp
hlt
push
repnz
pop
int3
fwait
shll
xchg
adc
mov
and
xorb
mov
push
push
pop
sbb
add
adc
adc
rep
not
sub
push
xor
rcrb
sti
ljmp
xor
xor
xor
sub
xor
sub
dec
adc
or
dec
add
adc
jg
add
clc
jo
xlat
mov
add
adc
mov
subb
ljmp
jns
jne
movsb
mov
pusha
inc
and
dec
dec
and
or
adc
orl
mov
adc
add
mov
repz
mov
add
out
xchg
or
lcall
cld
pushl
ss
daa
and
pop
push
push
pusha
call
lods
stos
test
adc
inc
lods
out
and
and
pop
push
les
add
imul
mov
pop
mov
cmp
inc
enter
mov
das
sub
daa
and
inc
inc
test
cmpsl
and
sub
xchg
xchg
bound
loopne
push
xchg
sbb
jg
jae
add
test
xchg
sub
cmpsb
aaa
or
mov
inc
cmp
sub
push
jb
cmp
and
add
jno
adc
pop
add
jno
scas
mov
mov
inc
pop
popa
or
jmp
dec
dec
dec
jle
inc
imul
cmp
xor
mov
mov
roll
cmp
jmp
xor
and
das
sub
pop
nop
jmp
mov
addl
or
mov
add
add
mov
pop
call
push
je
mov
je
mov
mov
scas
mov
or
add
andl
add
or
test
sub
xlat
inc
mov
mov
or
decl
push
push
mov
insl
cmp
adc
mov
xor
cmp
inc
adc
popf
in
add
sub
sub
jno
add
sub
push
daa
and
or
insb
lods
shll
imul
addl
pusha
aam
add
enter
or
sub
roll
push
adc
sahf
jnp
sub
popf
mov
sbb
fistps
les
daa
xchg
adc
scas
scas
push
lods
cmp
add
iret
adc
pop
movups
shlb
or
jmp
popa
mov
jmp
push
cli
sbb
wrmsr
lahf
adc
xchg
xor
arpl
js
inc
cmp
jmp
mov
sub
sub
adc
pop
jl
sbb
inc
cmp
outsb
sbbb
push
sbb
fldl
cmp
cli
cli
fs
pop
inc
ss
outsb
mov
xor
push
mov
pop
jmp
add
cmp
adc
xor
sbb
scas
sub
test
jg
inc
sub
adc
push
adc
int
mov
sbb
aam
adc
aas
call
test
lock
fsubrl
scas
mov
cmc
jmp
adc
rcll
cmp
lcall
outsb
xor
inc
inc
aaa
sbb
mov
add
sbb
xor
jl
add
gs
rcl
out
icebp
scas
sub
xchg
xor
push
adc
push
rorl
mov
rorb
xor
adc
lea
dec
test
push
sub
push
jno
sub
inc
adc
add
pop
inc
cmc
mov
inc
insb
daa
inc
dec
dec
inc
and
incl
and
xchg
fsubrs
fyl2xp1
pushl
out
cmp
or
fcoms
cmp
adc
cmpsl
sbb
jge
sub
sub
sub
xor
insl
insb
imul
or
repz
sti
xor
icebp
mov
inc
xchg
jecxz
ljmp
push
inc
push
jne
add
and
inc
pop
je
xchg
ja
lds
stos
pop
mov
or
mov
add
test
mov
repz
and
and
addb
rorb
dec
mov
adcb
xor
scas
cmp
lcall
pop
popa
bound
sti
pop
lods
clc
jg
repz
jbe
adc
psubsb
ljmp
aas
iret
adc
ret
scas
adc
jle
xor
movsb
mov
adc
in
add
pop
cmpsb
sbb
shlb
jg
or
std
outsl
jo
dec
inc
inc
inc
shll
add
pop
xor
or
xor
push
test
aaa
mov
sub
orl
gs
mov
or
pop
ja
add
add
and
lcall
push
jnp
mov
gs
push
fcompl
ljmp
fs
dec
jnp
mov
bound
push
inc
fstl
inc
fldt
adc
int3
adc
test
out
into
int
mov
add
shll
int
ret
enter
ret
or
stc
add
inc
sub
push
clc
inc
pusha
add
cmp
sub
push
test
enter
pusha
and
xchg
fists
add
add
negl
adc
push
insb
add
popa
fisttpl
movsb
cmp
push
adc
or
add
shlb
scas
inc
stos
inc
cmp
xor
mov
push
cltd
mov
push
jmp
lcall
dec
fisttpll
ficoml
aas
fsts
cmp
push
xor
scas
into
mov
insl
out
xchg
ret
ret
mov
fwait
jge
imul
pop
add
xor
inc
cmp
sub
test
or
xchg
adc
ret
mov
push
mov
andl
inc
in
add
cmc
and
push
xchg
inc
fcompl
inc
mov
xchg
testl
add
mov
adc
pop
add
adc
mov
dec
adc
ljmp
jb
dec
mov
jl
test
insl
jecxz
dec
fisttpll
cmp
fcoml
rolb
cmpsb
das
dec
lods
jg
mov
fwait
lods
xchg
xor
xor
imul
xchg
imul
xchg
aam
xor
xor
add
xlat
addb
inc
daa
mov
mov
push
scas
mov
add
mov
sub
jmp
or
enter
inc
mov
or
cmp
adc
mov
add
and
incl
stos
mov
ret
rep
xchg
in
cs
outsl
ljmp
pop
jl
sub
or
fsts
sar
incl
adc
leave
push
cs
das
cltd
or
push
dec
push
insl
ret
ror
enter
sbb
rolb
cmpsb
imul
push
xchg
add
and
popa
dec
and
lods
or
push
xlat
das
outsb
and
movsb
loop
mov
std
or
mov
xchg
mov
les
dec
inc
dec
inc
and
adcb
cmp
inc
enter
test
add
xorb
inc
inc
push
stos
xchg
addb
jbe
cld
xchg
cmp
inc
mov
lcall
pushf
mov
push
sub
js
pop
test
bound
or
jmp
adc
fstl
rcll
cmp
aas
push
mov
mov
mov
sub
add
loop
out
add
rclb
xor
inc
imul
sub
inc
imul
sub
dec
cmpsl
mov
incb
shlb
rclb
jg
and
xor
mov
xchg
adc
xorps
push
fisttps
imul
int3
iret
fadd
iret
in
andl
jnp
bound
push
inc
fcmovnbe
push
adc
adc
or
lret
mov
inc
mov
cmpsl
lods
xchg
shll
mov
mov
dec
cmpsl
cmp
push
bound
outsl
push
push
adc
add
out
rcrl
iret
pop
add
dec
incl
cs
and
and
data16
fisttpll
or
add
clc
dec
mov
aad
int3
lret
pushl
mov
repnz
mov
es
fldl
out
jns
das
pusha
jecxz
dec
fstl
inc
fcoml
inc
fcoml
pop
cmp
inc
fimull
cmp
adc
rcrb
test
insb
mov
test
imul
imul
jmp
push
or
add
add
sub
leave
test
inc
inc
movsb
pusha
es
arpl
pusha
add
rclb
icebp
dec
shlb
sub
dec
inc
inc
sarb
and
cmp
outsb
add
rol
mov
out
push
xchg
fdivrp
dec
push
push
jge
inc
jb
jno,pt
and
decl
sbb
adc
adc
ficoml
inc
fcompl
aas
mov
gs
addl
cmpsb
mov
pop
faddl
or
outsb
xchg
sub
adc
loope
loopne
dec
dec
mov
add
rorl
mov
dec
sbb
add
mov
and
testb
imul
mov
loope
incb
sar
mov
ljmp
jmp
jle
sub
sbb
loop
dec
fimuls
aad
jb
arpl
xchg
fwait
iret
xor
sti
sahf
mov
std
mov
fwait
cmpsb
imul
lods
lods
add
inc
daa
lods
jae
lret
sub
add
sbb
mov
ret
pop
mov
dec
lret
sbb
or
lcall
xor
rcrl
out
mov
scas
inc
fdivr
sti
mov
add
fdivp
mov
ljmp
jecxz
dec
in
push
in
lods
cli
mov
xchg
fcom
imul
fiadds
insb
lcall
scas
adc
and
test
add
lea
adc
xchg
test
daa
or
push
ljmp
inc
xor
in
mov
ds
orb
shll
cmp
decl
xchg
jbe
cld
imul
out
mov
mov
mov
cltd
rcl
clc
movsb
sar
lcall
mov
push
insl
lea
add
imul
cmp
pop
push
push
add
cmp
push
in
pop
mov
inc
inc
inc
aas
inc
push
add
dec
mov
push
sbb
xor
jnp
insl
lds
xorb
push
fcomps
and
jnp
add
mov
add
jg
adc
sbbl
add
add
pop
push
adc
xor
dec
pop
add
dec
add
or
add
adc
hlt
xor
xor
add
stc
repz
dec
jle
lret
fbstp
fcom
aam
hlt
out
mov
repz
in
icebp
cmc
jmp
cmc
call
cli
outsl
imul
adc
pop
xor
ds
jg
in
rcr
cmp
cmpsb
scas
scas
dec
inc
aas
sbb
js
sub
xchg
xor
and
scas
inc
mov
adc
cmp
inc
insl
mov
mov
add
push
pop
add
pop
add
or
daa
outsl
inc
adc
add
jne
outsl
insb
mov
aaa
dec
ret
bnd
fisubl
popa
sub
es
jl
fsubs
xchg
bound
jo
lret
fsubrl
sbb
call
stos
mov
bound
dec
and
mov
int3
pop
push
push
loop
loopne
add
xor
jae
stc
shll
cmp
dec
into
inc
cwtl
or
testb
sahf
mov
std
adc
mov
movsl
test
bound
aas
aas
insb
insl
insl
ljmp
les
push
sbb
mov
jo
sbb
sub
add
sbbb
inc
fwait
jbe
add
fwait
push
fwait
jo
pop
add
mov
ljmp
push
dec
or
cmp
mov
ss
lods
scas
mov
or
ss
inc
pop
sub
add
pop
pop
cs
mov
inc
pop
pop
fcmovnbe
inc
dec
pop
inc
adc
sbb
movsl
mov
push
clc
mov
inc
dec
xor
lods
out
add
repz
enter
xor
jl
stc
cmpsb
imul
and
popf
mov
cmpsb
imul
or
jmp
js
sbb
lods
inc
pushf
mov
popf
add
popa
inc
insl
xor
fistpll
xor
pop
popf
pop
and
lret
jbe
pop
das
lods
ja
outsb
ret
and
inc
inc
inc
inc
jbe
xor
fisubs
add
ret
and
pop
xor
sub
and
xchg
mov
dec
scas
pop
nop
nop
mov
jge
adc
pop
lret
cmp
movsl
adc
lret
xlat
sti
push
sbbb
push
sbb
mov
inc
inc
push
xchg
cmp
pop
jb
cmc
je
jae
daa
les
push
dec
inc
cmp
push
xchg
stos
in
popf
xlat
inc
inc
add
out
push
push
mov
inc
xlat
outsl
or
pop
test
pop
mov
cli
mov
pop
ja
shrl
out
aaa
jns
or
push
jnp
push
cmp
inc
movsl
loope
fisttpll
aas
movsl
lea
inc
jmp
mov
push
inc
adc
cmp
cmc
sbb
outsl
and
lret
sbb
insl
fwait
sub
dec
pop
xor
ja
inc
rcl
je
dec
popf
push
shrb
mov
lds
or
jb
dec
shll
imul
adc
imul
in
lock
mov
dec
shll
push
arpl
shll
bound
adc
add
pop
mov
dec
mov
or
fmul
adc
dec
inc
inc
sti
out
lcall
push
dec
or
push
insl
jmp
and
cmp
fnsave
sbb
mov
mov
je
mov
cmc
aaa
xchg
lods
fidivs
mov
sbb
inc
cmp
push
fisubl
dec
sbb
xchg
inc
dec
cmp
imul
fstpt
jmp
push
xor
in
ffree
insl
adc
ja
mov
mov
sub
push
mov
addb
or
sub
xor
mov
scas
pop
mov
mov
xchg
mov
and
mov
jnp
jae
add
adc
jae
loopne
dec
test
fsubs
and
test
mov
pushf
sbb
adc
pop
sbb
lods
mov
cmp
mov
pop
adc
mov
mov
fstl
aad
hlt
imul
mov
sub
sarl
sarb
sub
rcrl
inc
dec
orl
xchg
add
push
or
inc
enter
jbe
xchg
idivb
push
pop
push
add
std
mov
xor
shll
clc
fnstsw
ret
in
add
mov
xor
mov
shrb
fistl
das
cmpsl
push
mov
xor
test
stos
ret
xchg
popa
pop
jo
inc
inc
xchg
adc
jno
pop
adc
inc
add
and
push
pop
scas
in
cltd
aaa
inc
inc
push
jge
inc
or
sub
repnz
adc
minps
lret
mov
das
mov
xchg
or
adc
jo
lock
push
ret
fcmovb
pop
pop
dec
rcr
xor
pushf
dec
xor
pop
mov
push
dec
add
dec
mov
xor
push
jp
es
cmc
inc
inc
inc
cmpsb
cmp
ret
jno
outsl
arpl
fadds
fisttpl
insl
arpl
xchg
ficompl
mov
jo
notb
mov
or
push
xchg
repnz
add
aam
fcomi
pop
jne
sarl
arpl
sahf
loopne
add
inc
jecxz
addr16
fsubl
subb
lods
sbb
cld
out
pop
mov
xchg
xchg
mov
inc
movsb
movsl
aaa
dec
adc
sub
movsl
loop
inc
add
add
mov
mov
roll
pop
cwtl
ss
xor
mov
lds
inc
cmc
imul
and
mov
lods
sub
xchg
insb
insl
inc
adc
xorb
xchg
pop
dec
dec
insb
mov
mov
pop
and
dec
and
add
popa
mov
mov
scas
lcall
aam
push
xlat
lret
mov
into
xor
les
std
add
sub
sbbl
addb
dec
cmp
push
test
mov
dec
add
pop
mov
jmp
addr16
add
pop
cmp
pop
xor
sub
mov
scas
dec
jno
jbe
mov
in
out
cmp
outsl
adcb
ds
pusha
sbb
pop
mov
scas
add
cmpsl
dec
mov
adc
fwait
inc
mov
andb
or
xor
stc
cs
cmpb
sub
popa
jne
test
inc
xor
dec
xor
outsb
add
dec
adc
push
push
mov
xor
lods
adc
imul
outsl
mov
in
out
scas
fsubrl
jne
push
sahf
fnstsw
inc
xor
jne
pop
or
inc
inc
push
icebp
sti
mov
mov
or
ret
inc
mov
or
sub
movnti
in
jp
cmp
inc
push
mov
add
xor
push
aad
inc
add
xor
add
xor
jo
lds
sbb
or
pop
jnp
jg
add
pop
adc
cmp
popf
sbb
jns
push
xor
pop
ja
jne
xor
adc
xchg
cmp
sub
inc
add
stos
addl
dec
jbe
cmpb
dec
shll
scas
in
cmpsb
mov
jb
adc
out
gs
sbb
int
xor
add
out
aas
dec
shll
out
cmpsb
mov
rcl
inc
inc
pop
movsl
xor
mov
jp
mov
lock
fldcw
push
pop
adc
push
mov
in
pop
insb
jle
ficomps
push
xor
ja
loope
cltd
dec
or
sbb
jbe
cmp
mov
aad
inc
stc
dec
sbb
scas
inc
out
or
mov
pop
add
dec
sub
xchg
xor
jno
pop
xor
mov
dec
push
ds
popa
aad
jmp
hlt
mov
loopne
jns
mov
pop
sub
adc
movsl
outsb
mov
pop
iret
shll
pop
pop
xchg
jmp
mov
in
pop
out
adc
fcom
mov
sub
push
push
mov
jl
pop
fstp
fnsave
jnp
or
dec
cmpsb
fucom
mov
pop
push
jne
adc
add
xchg
mov
push
xor
xchg
fsubs
mov
pop
pop
mov
sbb
imul
mov
ret
cmpsb
shrl
cmp
push
nop
xchg
dec
inc
pop
and
decl
pop
or
lds
pop
push
dec
sbb
js
sub
add
adc
sub
das
cmp
mov
cmp
jne
pop
pop
fsts
add
mov
lcall
push
cmpsb
imul
fs
fwait
cmpsb
sbb
fwait
cwtl
xchg
dec
inc
cmp
xor
fstl
pusha
xor
sub
mov
insl
das
test
insb
and
inc
cmp
int
outsl
popf
gs
aas
dec
popa
fisubl
aas
jmp
dec
dec
fadds
sub
fisubs
dec
mov
or
and
mov
outsb
push
pop
jnp
mov
sti
lret
imul
mov
inc
fmull
adc
xor
loopne
inc
push
ja
sub
repnz
inc
or
lods
or
sti
xor
xor
lock
cmp
xchg
mov
mov
adc
push
mov
push
and
mov
gs
xchg
fdivrs
faddp
dec
std
adc
mov
das
jno
xchg
cmp
push
lea
pop
jmp
jo
fbstp
inc
ret
mov
jns
xlat
mov
les
jbe
fistpl
jecxz
addr16
push
mov
movsl
call
adc
pop
or
shrl
pop
das
aad
xchg
ja
xor
ja
rcl
mov
imul
add
push
cmpsb
mov
lds
pop
push
mov
pop
cmp
cmp
fcmovnb
fidivs
pop
adc
cmp
mov
mov
rcl
and
dec
mov
test
out
shll
and
mov
add
in
cwtl
adc
inc
hlt
add
rcrb
or
test
jns
push
xor
inc
cmp
dec
in
and
or
roll
insl
add
push
dec
scas
sub
push
outsb
ljmp
es
pop
mov
ret
mov
lret
adc
sbb
push
mov
pop
jecxz
add
or
imul
lret
fwait
outsb
bound
outsl
pop
fwait
xchg
add
imul
scas
inc
cld
bound
inc
dec
push
pop
cs
nop
pusha
jne
ret
mov
mov
sub
das
mov
int
pop
and
mov
xchg
xchg
push
mov
cmp
dec
shll
call
jg
stos
xchg
xchg
stos
movsl
mov
cmc
jne
bound
sub
jbe
out
add
sbb
pop
jl
jne
out
imul
jo
pop
jmp
jge
or
add
jnp
outsl
adcl
subl
in
out
adc
inc
outsl
inc
pop
aaa
xchg
leave
xchg
mov
jo
dec
fwait
push
hlt
das
sbb
imul
push
ss
pop
and
lret
mov
jno
popa
iret
scas
adc
aad
imul
shrl
mov
or
sbb
jge
popa
push
push
inc
mov
insl
xor
insl
pop
and
sub
cmp
mov
adc
outsb
pop
mov
dec
dec
jnp
cmpsl
adc
add
pushf
adcb
push
push
cmp
xchg
push
mov
jae
dec
jno
xchg
inc
and
sbbb
ja
push
and
xchg
jmp
dec
sub
sbb
adc
mov
sbb
daa
mov
js
jae
inc
dec
jbe
inc
dec
aas
mov
add
cmpsl
iret
push
inc
pop
gs
pop
push
fwait
and
sub
dec
mov
mov
cmp
out
inc
fisubrl
mov
jnp
ja
xchg
jbe
cmp
outsb
xchg
push
sub
xlat
xor
add
sbb
mov
arpl
mov
jl
fs
call
cmp
hlt
shlb
xor
stos
lret
ret
xor
xor
lret
pop
add
inc
jo
bound
out
jne
cli
add
imul
adc
out
pop
jl
cmc
add
jae
sbb
adc
sbb
inc
das
pop
andl
inc
dec
pop
xchg
pop
subb
dec
rcrl
dec
ja
mov
add
inc
push
adc
movsl
adc
add
jno
push
fistl
dec
inc
fcmovnu
xor
or
pop
pop
adc
or
ret
xchg
or
add
push
dec
sti
adc
fdivrs
sti
pop
jno
push
and
ja
adc
daa
jge
or
xor
dec
dec
scas
xor
scas
adc
lret
daa
scas
in
push
lods
mov
sub
add
pop
xchg
push
inc
cmp
jnp
jl
cs
cmp
arpl
adc
fwait
push
imul
adc
and
lcall
jns
adc
dec
out
sub
orl
fldcw
or
xor
dec
xlat
addl
shlb
cmp
push
insl
bound
ja
out
lret
out
sbb
dec
dec
mov
mov
das
movsl
push
sbb
mov
inc
sub
lock
aad
push
mov
mov
pop
scas
sti
fisttpl
add
jge
shlb
cmpsb
mov
dec
sbb
sub
xor
sub
cmpsl
cwtl
scas
mov
dec
out
fcmovnu
mov
inc
jecxz
cmpsl
lods
push
in
and
dec
mov
sbb
fcompl
xor
adc
pusha
int3
push
dec
xor
dec
pusha
pop
mov
insl
sub
sarl
dec
and
fcmovu
cmp
mov
mov
dec
add
fwait
push
adc
pop
sbb
mov
std
cwtl
xchg
nop
pop
dec
dec
jecxz
and
addr16
cmpsb
xor
dec
lock
xlat
sub
adc
inc
dec
push
cmp
jb
cmp
arpl
xor
pop
cmc
push
gs
inc
dec
push
xor
and
adc
mov
jno
mov
or
mov
scas
inc
xchg
or
jbe
xor
add
fld
gs
inc
dec
mov
push
mov
xlat
fwait
add
shrl
cmp
inc
push
arpl
jl
xlat
pop
push
dec
jno
arpl
xchg
jl
xchg
lea
inc
cltd
test
pop
pushw
push
lods
cmpsb
addr16
dec
repnz
rcrb
dec
lods
dec
xlat
fnsave
add
xor
fucomp
out
out
adc
push
or
pop
dec
dec
push
fnstcw
push
jo
imul
jnp,pn
das
shll
arpl
sbb
in
outsl
dec
test
pop
dec
dec
shrl
pop
mov
pop
leave
pop
adc
push
dec
xchg
mov
ficomps
jge
lds
push
mov
pop
cmp
inc
or
jge
jnp
das
inc
and
sub
mov
ret
push
cmp
outsb
insl
mov
mov
add
cmp
rorb
pop
adc
stos
test
jne
imul
add
aam
dec
push
xchg
je
sub
insl
mov
jmp
xor
mov
pop
jl
lock
imul
sbb
jmp
sub
mov
fsubrl
pop
jge
cmp
in
adc
push
sbb
gs
jae
push
inc
fiadds
pop
imul
fstl
shrl
rorl
dec
jl
roll
add
dec
push
fisubs
mov
cmc
jb
dec
inc
lods
adc
pop
xchg
adc
out
cmp
add
cmp
lcall
mov
andb
pop
dec
dec
inc
pop
ss
imul
mov
xchg
pop
mov
pop
jbe
mov
mov
fwait
mov
add
push
ja
inc
pop
jecxz
jo
jl
jl
sbb
xchg
insl
add
int
rcr
cmpsb
insl
jge
cmp
pop
cmp
push
mov
mov
adcb
pop
dec
adc
add
out
stos
adc
cmpsl
pop
jg
add
ficomps
mov
outsb
rcl
adc
jge
fisubs
sbb
cmp
xor
or
inc
insb
jae
sub
inc
adc
and
mov
mov
mov
fs
shrb
divb
ja
outsl
pop
push
dec
jno
mov
negl
cmc
pusha
sub
sub
rcr
nop
int
jno
xchg
pop
push
iret
jle
inc
dec
dec
add
inc
or
and
xor
js
push
mov
jmp
pop
inc
push
fs
lods
mov
pop
push
cltd
sti
std
test
push
pushf
lcall
sub
jno
lcall
adcl
fildl
jbe
pop
jo
fmuls
jno
cs
rcrb
cld
cli
xor
cwtl
jnp
xlat
dec
jmp
je
add
inc
inc
repnz
xchg
pop
fstpl
xchg
jae
fs
mov
jle
icebp
mov
and
mov
mov
sbb
mov
jno
gs
inc
cli
mov
les
pop
jbe
js
or
inc
imul
pop
jnp
pop
push
xchg
push
inc
cmc
aaa
rolb
inc
xor
push
rcll
lods
push
shl
jae
imul
lods
orb
sub
sbb
movsl
mov
push
jb
mov
je
outsl
and
ds
add
outsb
roll
mov
sbb
pop
push
xchg
push
jmp
add
ficoml
sbb
ficomps
or
fwait
or
xchg
xchg
jo
add
inc
mov
je
sub
mov
push
inc
inc
pusha
mov
dec
int
out
movsl
rcll
insl
inc
mov
mov
popa
mov
xlat
mov
jge
lds
das
jmp
pop
ret
sbbl
fisubrs
lea
add
mov
fwait
aas
adc
jbe,pn
bound
inc
aas
or
inc
sub
jb
dec
push
or
mov
jecxz
dec
mov
inc
test
pop
xchg
pop
cmp
xor
mov
jns
xchg
mov
vpsllq
lret
jno
adc
xchg
stc
xchg
dec
gs
mov
fdivrl
sub
mov
aas
mov
ret
push
inc
aas
lds
insb
arpl
sub
incl
mov
add
adc
dec
mov
and
sub
sbb
adc
insl
mov
gs
rcrb
je
addr16
dec
jne
xchg
fidivrs
insl
or
inc
or
mov
test
mov
mov
and
popa
adc
inc
or
lds
sub
imul
das
or
sbb
pop
push
frstor
inc
cmp
imul
and
inc
or
sbb
mov
sub
xchg
xchg
mov
xor
nop
arpl
sbb
xchg
cmp
imul
and
loope
cmp
jno
inc
mov
lcall
dec
mov
xor
stos
aad
xor
xlat
ds
lret
pop
in
sub
insl
pusha
pop
xchg
and
addl
and
sub
lds
ja
lds
fcmovnu
insl
pop
pop
jmp
inc
addl
xchg
adcb
mulb
inc
mov
fdivs
lea
sti
imul
sub
sub
sbb
xchg
ja
push
sub
cmp
dec
xor
inc
lods
popf
aaa
shrl
cltd
fstl
sbb
pop
or
psubusb
pop
ret
movsl
sti
push
dec
test
push
push
adc
sbb
add
cmc
cmpsl
and
cmpsl
sbb
mov
cmp
sbb
popa
push
dec
or
push
xor
mov
mov
rcl
sbb
int
stos
push
or
xor
mov
pop
cmp
dec
or
inc
push
mov
mulb
pop
inc
inc
pop
outsb
mov
inc
and
adc
or
movl
and
mov
inc
lods
loopne
xor
dec
mov
out
pop
std
xor
in
inc
lds
imul
mov
jnp
insl
sub
push
mov
jo
pop
sbb
jmp
sbb
inc
jno
sub
ret
sub
mov
das
ret
push
mov
lea
stos
pop
jno
inc
movsl
mov
adc
and
out
mov
mov
xchg
inc
fildl
lds
js
test
fisubs
lods
jno
dec
jmp
fnsave
push
sbb
push
pop
sbb
mov
mov
lods
test
sub
sbb
movsl
lods
arpl
cmpsb
adc
gs
fldl
xchg
cmp
jmp
sub
push
sbb
add
and
inc
mov
inc
add
inc
mov
fldt
into
jecxz
inc
pop
mov
jecxz
jbe
nop
roll
add
or
xchg
add
mov
mov
shl
add
int
adc
add
mov
push
mov
push
sub
xor
adc
jne
push
fldl
stos
es
cmp
jo
aaa
imul
mov
addb
imul
mov
adc
add
rcl
add
add
cs
xchg
sub
inc
test
sub
add
mov
cs
out
sbb
sub
inc
add
adc
movsl
aam
ret
addb
lds
lods
xchg
mov
or
inc
cs
and
sbb
cs
push
lds
pushf
leave
fistl
scas
add
and
pop
out
add
movsb
daa
push
adcl
add
and
and
push
lret
xlat
add
push
jne
push
int
shld
push
or
ss
nop
mov
inc
test
add
fmull
or
pop
repnz
mov
or
fistl
ja
pop
cmp
and
adcl
mov
inc
jmp
mov
sub
insb
pop
mov
push
pop
in
xorb
cmc
lret
mov
mov
mov
pop
cmp
pusha
insl
add
push
mov
inc
insb
xor
inc
aas
jno
xchg
and
push
xlat
sbb
mov
rcrl
mov
lds
sub
insl
sbb
jmp
movsb
popa
xor
mov
xchg
sti
inc
mov
nop
mov
cmp
mov
sub
dec
push
test
mov
and
xchg
jae
sbb
mov
xchg
inc
mov
lods
cmpsl
popf
outsl
in
pop
sbb
lahf
cmc
imul
das
repz
rcr
test
add
pop
imul
mov
add
lods
inc
dec
push
and
dec
mov
movsl
insl
add
pop
jp
or
and
inc
or
fisubs
pop
xlat
imul
xor
aaa
ss
dec
lret
pop
jge
pusha
andb
pop
jo
jns
and
fwait
inc
aaa
ret
fadd
xchg
adc
fwait
push
rcr
popa
movsl
xchg
shll
ja
lds
jmp
add
das
dec
xorl
inc
cmp
jmp
out
push
pop
or
add
leave
mov
sub
pop
sub
mov
pop
pop
dec
lods
mov
insl
in
add
lds
roll
mov
dec
dec
cmpsl
xor
or
hlt
pop
pop
adc
pop
pop
add
pop
jmp
mov
jl
das
lds
daa
jg
add
mov
sub
sbb
cwtl
stos
sub
xchg
add
lods
divb
dec
pop
orb
test
add
icebp
sbb
lods
or
shll
popl
push
fistl
dec
jge
add
push
popa
mov
mov
gs
fisubl
imul
mov
xchg
add
test
test
xchg
dec
mov
add
fwait
xor
or
jno
insl
aam
les
or
nop
inc
aaa
pop
push
rcr
pop
add
mov
push
pop
add
pusha
pop
and
or
dec
lods
sub
xlat
fisubs
add
jg
subb
rorl
movsl
add
mov
imul
adc
dec
jge
adc
push
inc
xchg
sub
pop
or
subb
inc
jo
xor
push
insl
mov
mov
push
jb
sub
fisttpll
sub
gs
and
jne
inc
pop
dec
push
mov
pop
mov
adc
mov
arpl
dec
xchg
andb
aaa
jns
inc
mov
test
aaa
dec
sbb
or
add
add
pop
dec
outsl
movsb
pusha
insb
pop
adc
adc
mov
jns
les
pop
out
add
inc
and
push
or
pop
adc
andl
cmpsl
xchg
fisubrl
mov
xchg
cs
cmp
jne
fildl
mov
xor
sub
or
adc
dec
jnp
shll
imul
arpl
or
adc
pop
adc
mov
mov
cmp
lods
mov
or
mov
mov
jecxz
pop
sub
push
popa
shll
adc
testb
push
xor
popl
or
das
push
ret
inc
or
fwait
or
jmp
push
jno
std
mov
insb
pop
or
stc
mov
fmull
xchg
mov
cs
inc
sarl
inc
sbb
rcl
imull
pop
fimuls
jno
outsl
push
adc
sub
inc
jmp
mov
ja
lea
or
fcmovnb
mov
pop
xchg
cmp
mov
adc
ja
fildl
aaa
dec
popa
mov
and
rorl
gs
xchg
push
xor
mov
mov
ja
sarl
xor
add
mov
roll
sub
xor
fistpl
bound
fdivs
inc
pop
pop
jne
rcrl
or
sub
insl
sbb
rcll
inc
pop
mov
imul
inc
pusha
jnp
popa
outsl
push
loop
leave
mov
in
popa
insl
add
mov
jno
mov
inc
movsl
mov
push
push
mov
int
out
leave
mov
mov
and
sbb
xchg
inc
inc
movsl
lods
jecxz
mov
jno
stos
push
mov
jno
mov
dec
movsl
pop
mov
inc
add
in
mov
xchg
mov
pop
aad
outsb
push
jp
add
pop
push
jmp
addr16
push
popl
shll
lea
add
bound
add
addr16
push
and
cmp
jl
jp
repz
or
cmc
fcoms
pop
or
push
ljmp
fwait
xor
cmp
push
xchg
inc
imul
jno
in
out
pop
das
push
push
pusha
inc
mov
pop
insb
add
adc
mov
push
mov
pusha
inc
nop
loopne
adc
mov
fistpl
push
or
lods
jmp
mov
add
sbb
jecxz
movsl
fcomp
xor
or
pop
xchg
pop
xor
fistpl
mov
addl
pop
imul
sub
mov
das
addb
test
ss
or
das
fisttpll
ss
mov
mov
and
scas
mov
insl
lret
cmc
sti
lods
and
xchg
xor
lods
insl
fistl
pop
sbb
push
jnp
sbb
mov
add
mov
insl
imul
mov
mov
pusha
adc
inc
sbb
movsb
movsl
icebp
inc
iret
daa
lock
cmp
movsl
sub
fwait
xlat
fwait
or
mov
or
shlb
inc
and
adc
pop
and
or
adc
pop
out
inc
cmp
mov
enter
pusha
cmp
aas
rcrb
dec
popf
addb
aas
cli
cmpsb
dec
add
pop
dec
pop
xor
out
cmp
insl
cmpsl
inc
xor
notl
in
cmp
gs
mov
xor
inc
jbe
sbb
xor
movsl
pop
mov
pop
mov
fsub
mov
sub
arpl
imul
xchg
add
insb
das
lret
mov
rorl
ja
push
sbb
out
mov
or
pop
adc
movsl
loopne
pop
shll
divb
xor
jbe
and
subb
xor
fdivs
popl
orl
pop
inc
add
rol
mov
dec
jge
mov
test
mov
lods
pop
mov
mov
jno
pop
lds
xlat
fstpt
push
insb
jge
jns
test
and
sbb
mov
movsl
insl
andl
sub
bound
sub
movsl
and
or
dec
std
popa
inc
add
pop
xor
das
push
adc
decl
pop
popf
dec
rcrl
xor
das
or
mov
fs
lods
movsl
pushf
rclb
adc
and
add
cmp
call
mov
pop
pop
xor
inc
bound
jo
fcoms
dec
pop
push
push
sbb
mov
and
test
rcrl
popa
dec
cmp
movsl
jnp
daa
xlat
inc
ss
pop
mov
fisttpl
mov
and
sub
push
insb
or
push
out
addr16
jnp
movsl
loop
xorl
pop
pop
outsb
inc
ss
inc
lret
nop
or
aam
push
das
and
adc
aad
bound
in
lret
jno
outsl
rcr
push
test
cltd
mov
stos
sub
loope
dec
andl
je
xchg
push
test
or
pop
inc
jmp
add
jae
pop
mov
or
loopne
iret
mov
es
jg
adc
and
lods
inc
add
dec
pop
cmp
pusha
jmp
shll
xor
movsl
imul
mov
inc
add
pop
push
cmpsl
push
or
add
aaa
xor
pop
or
adc
jo
scas
or
pusha
or
mov
movsb
xor
dec
or
xor
cmpsb
push
pusha
pop
push
and
addr16
xchg
adc
mov
cmp
add
xor
mov
add
dec
push
sbb
inc
in
xor
fcoms
cmpsl
and
insl
push
jecxz
nop
or
and
das
lea
sub
aad
dec
mov
add
push
addr16
rclb
pusha
push
push
inc
pop
repz
fnstenv
mov
xor
pusha
stos
mov
push
xchg
add
mov
lcall
sbb
ficoml
pop
dec
rclb
inc
popf
mov
in
jge
mov
jno
sub
dec
mov
or
add
int3
xor
sbb
rolb
add
or
scas
add
mov
mov
mov
add
lods
sub
mov
dec
pop
dec
jge
dec
xor
xchg
mov
mov
dec
pop
stos
dec
add
mov
rcl
or
add
fstps
jbe
jno
mov
cmp
andb
pop
pop
add
xchg
xlat
fnstenv
jbe
sbb
dec
add
xchg
lods
sub
rclb
add
dec
pop
repnz
decl
mov
and
sbb
cmp
shrb
lds
add
xchg
insb
shll
push
adc
enter
mov
loopne
loope
push
pop
and
inc
fmull
imul
sub
arpl
adc
sarl
and
shlb
mov
cmp
inc
sub
and
xchg
subl
fcoms
xor
pop
pop
dec
push
out
fcmovnb
inc
bnd
loopne
imul
bound
push
rol
jecxz
mov
push
inc
sbb
xchg
vphaddudq
push
fucomp
dec
cmpsl
mov
addl
or
aaa
stos
insl
mov
mov
fs
cmp
fildl
lds
lods
add
or
dec
adc
sub
mov
fwait
dec
mov
shll
jecxz
mov
sbb
andl
inc
add
fs
or
add
dec
into
push
mov
into
popl
lret
pop
and
adcb
jge
orl
mov
adc
dec
sbb
nop
sub
dec
xor
pop
inc
subb
xchg
push
sbb
or
gs
jp
cmp
ret
add
mov
add
ficomps
push
nop
add
sbb
jno
and
mov
pop
and
mov
cmp
and
and
pop
rcrl
pop
mov
pop
out
imul
adc
xchg
jmp
movsb
fnsave
outsl
pop
or
sbb
insl
cmpsl
das
sub
dec
jno
movsb
insl
imul
xor
push
or
push
ret
nop
lea
imul
mov
adc
dec
insl
mov
fdivs
stos
mov
int
rorl
sbbb
jo
pop
mov
arpl
je
shll
adc
push
push
xchg
mov
add
push
stc
xchg
dec
ss
pop
test
jp
sub
shlb
jg
ja
xchg
push
jmp
pop
xor
push
adc
mov
popf
or
popa
jnp
pusha
xor
mov
jmp
xor
push
shrl
pop
std
adc
and
divb
jnp
gs
lds
push
cmp
rol
pop
popf
mov
insl
imul
dec
xor
ja
insl
mov
addb
ja
movsl
add
out
or
dec
test
rcl
mov
add
xor
mov
cltd
out
ss
ss
pop
rcrl
jge
mov
mov
dec
xchg
lds
lock
out
mov
jne
pusha
jmp
mov
sub
test
pusha
xor
dec
cmpl
xor
xlat
imul
imul
push
popl
jo
adc
mov
lock
fwait
inc
lea
sub
mov
sub
jmp
int3
mov
sub
iret
pop
inc
xchg
push
cmp
aam
xor
mov
repnz
jl
jo
push
xchg
pusha
pop
adc
add
or
outsl
aas
scas
jge
fsubrl
pop
test
inc
fcmove
push
fs
popa
jl
insl
es
or
sub
mov
test
or
fidivs
xor
lods
mov
mov
aaa
jge
jnp
mov
push
pop
das
pop
out
push
mov
cmp
enter
cmp
cmp
xor
dec
pop
dec
inc
or
dec
mov
mov
mov
add
xor
add
mov
adc
xor
mov
mov
mov
fidivl
or
icebp
stc
imul
mov
rcrl
sbb
or
sub
cmc
inc
push
bound
pop
sub
jl
jne
and
adc
jle
push
or
mov
add
outsb
pop
cmp
fisubs
mov
dec
test
adc
pop
incb
test
pop
push
pop
jno
push
pop
jmp
add
cs
cmpb
pop
dec
dec
mov
lods
pop
add
push
out
xchg
and
pop
push
mov
mov
push
in
adc
cmp
dec
in
imul
dec
and
adc
dec
and
push
fsubrl
and
pop
loopne
pusha
stc
imul
arpl
mov
jns
rcl
mov
push
mov
mov
mov
add
adc
sub
insb
lret
shr
inc
dec
fistl
push
jae
jno
mov
sub
xchg
mov
mov
xchg
add
mov
push
fstps
mov
pop
out
lret
out
sub
pop
mov
aaa
sub
push
ret
or
outsl
add
mov
push
fidivrl
adc
xchg
mov
inc
jno
sbb
lds
out
mov
fcomi
mov
sbb
nop
add
dec
lret
or
dec
jb
pop
std
movsl
or
mov
cmpsb
jbe
aas
add
sub
mov
push
addb
dec
push
pop
add
insb
dec
add
subl
push
sti
mov
arpl
mov
add
dec
and
insb
pop
sub
and
push
mov
lds
lds
or
jge
mov
adc
lods
mov
push
fcompl
or
or
push
dec
loopne
insl
pop
push
pop
inc
mov
mov
mov
imul
inc
mov
insl
lret
xlat
adc
cmpsl
mov
jno
mov
add
add
movsl
insl
mov
push
add
test
push
mov
mov
movsb
xchg
adc
shll
sbb
sub
xlat
or
xchg
or
in
add
add
mov
fistpl
or
cmp
add
fidivrl
xchg
mov
in
pop
add
add
mov
push
pop
out
out
scas
mov
mov
jnp
add
sbb
js
fstpt
push
out
sbb
push
mov
pop
pop
pop
push
jnp
push
fwait
adc
pop
sbb
mov
dec
jnp
jnp
pop
shll
inc
sbb
ss
sbb
data16
jnp
and
insl
add
inc
or
ret
mov
mov
dec
lret
mov
insl
inc
cmp
push
and
and
sbbl
mov
aas
shrl
shlb
je
sbb
sbb
sub
lret
mov
xchg
mov
inc
mov
test
fstpl
sub
cmp
subb
or
push
mov
out
insl
ja
loopne
add
test
mov
int
sub
add
test
pop
dec
in
xchg
shll
push
add
popa
rcrl
mov
push
add
es
sbb
push
add
repnz
adc
push
fldt
jno
and
dec
sbb
push
out
pop
mov
insl
insl
cmp
fcmovnu
adc
cmp
pop
add
push
jecxz
imul
fidivl
sub
mov
lret
jge
mov
fistl
dec
jns
pop
ret
jnp
imul
sbb
mov
mov
cmp
and
movsl
xlat
lods
pop
xlat
push
fcmovnu
ficompl
xor
adc
jno
icebp
dec
adc
sub
icebp
mov
mov
and
mov
pop
fldl
or
lea
popa
inc
sub
leave
push
mov
or
xlat
push
xor
adc
mov
loope
add
sbb
in
xor
cmpsl
das
fsubrp
mov
js
push
insb
pop
push
or
neg
into
add
push
insb
add
imul
sub
mov
fimuls
cmp
or
jbe
xchg
inc
pop
push
mov
mov
mov
mov
mov
fldl
cmpsl
pop
mov
xorl
mov
xorl
pop
pop
cmpsl
pop
jae
jo
insl
imul
cmp
or
pop
adc
mov
xchg
pop
add
enter
test
xchg
pop
insl
lret
adc
pop
dec
xchg
in
loopne
jae
jno
test
or
outsl
inc
scas
or
mov
dec
imul
push
xchg
fwait
or
ret
ret
push
daa
ss
jbe
rorl
insb
push
or
sub
adc
and
sub
mov
popa
arpl
mov
mov
xlat
mov
out
sbb
or
sbb
pop
cmp
arpl
add
or
pop
dec
sbb
adc
sub
mov
jne
and
insb
imul
outsl
xchg
lcall
jne
gs
pop
push
test
sub
or
fildl
and
sti
fstl
fidivl
or
pop
and
jno
lds
pusha
sbb
lret
notl
pop
pusha
mov
push
jnp
lods
adcl
sbb
pop
ret
ljmp
adc
push
leave
xchg
mov
rol
jno
sub
xor
push
add
pop
insl
inc
fldcw
pop
adc
test
ja
in
sub
jb
mov
lods
lahf
xchg
mov
mov
push
push
stc
push
sub
sbb
mov
push
gs
mov
xorl
mov
push
addr16
adc
pusha
cld
mov
jp
bound
arpl
xchg
adc
jae
mov
xchg
sbb
es
sub
pop
mov
fwait
add
or
push
sub
lret
mov
popf
pop
jmp
pusha
cmp
or
fwait
addl
aad
cmp
rcll
mov
sbb
and
scas
test
pop
mov
jo
inc
mov
or
adc
cmp
inc
xor
xchg
adc
in
xorb
mov
jno
int
push
ja
and
cmc
or
lds
xor
mov
xchg
jno
push
fisttpll
push
jae
adc
insl
mov
sbb
sub
sub
imul
adc
bound
fwait
outsl
inc
add
pusha
pop
and
pop
das
pop
pop
add
sub
mov
call
ret
ficoml
jmp
fidivrl
das
jge
inc
jo
sub
push
dec
push
fistl
inc
bound
jno
sub
movsb
add
sti
xor
fisubrs
outsl
imul
mov
stos
popa
cltd
out
imul
mov
cmp
fisubs
add
xor
dec
xchg
jmp
dec
mov
pop
sub
xchg
sub
mov
mov
mov
add
push
mov
mov
js
pop
jecxz
vcvttps2dq
push
lods
stos
insl
and
adc
cmc
inc
mov
test
jbe
jnp
fs
pop
gs
nop
mov
add
outsb
sbb
divl
icebp
mov
fisubs
xor
or
inc
add
outsb
mov
pop
mov
push
fst
mov
inc
popa
lds
add
jecxz
shrl
scas
push
popa
outsb
push
or
inc
sub
aad
xlat
scas
fwait
mov
rolb
or
xor
adc
fidivl
pop
dec
mov
mov
lds
adc
sbbl
insl
mov
push
fwait
pop
bound
sbb
mov
out
fidivl
sub
pop
aad
mov
cwtl
bound
std
push
xlat
push
adc
mov
mov
jle
mov
mov
pusha
mov
shll
push
add
call
notl
xchg
mov
xor
in
cmp
xchg
insb
or
add
mov
sti
cltd
test
test
test
outsl
sub
test
pop
xor
jg
incb
subb
outsb
push
insb
data16
sub
in
fs
push
popa
js
pusha
js
pusha
jbe
dec
in
arpl
add
popa
pop
jne
pop
je
pop
jae
pop
jb
pop
in
jge
pop
pop
and
add
pop
push
or
pop
add
in
outsl
push
dec
xchg
pop
ja
pop
js
pusha
les
fbld
jl
jnp
outsb
fs
data16
data16
jo
push
mov
sti
incl
mov
jp
mov
jge
nop
add
jg
xchg
mov
cmpb
jle
arpl
xchg
mov
mov
lahf
sub
mov
fisttpll
mov
nop
or
mov
mov
mov
lret
sahf
cmp
and
shll
and
sbb
push
mov
xchg
cmp
lret
add
sbb
imul
xchg
imul
pop
in
dec
add
addr16
mov
jg
lods
or
mov
lods
jecxz
lds
xor
loope
lds
ret
mov
inc
xor
movsl
xchg
ss
arpl
pop
adc
test
in
mov
add
lea
xchg
push
inc
mov
adcb
test
cwtl
iret
push
outsb
arpl
dec
incl
mov
add
or
dec
inc
inc
and
add
push
add
add
add
cmp
jg
add
sub
aad
push
and
and
and
sub
push
arpl
xchg
test
or
or
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
mov
add
lods
dec
adc
add
adc
test
xor
nop
inc
add
adc
sbb
test
inc
pusha
add
loope
add
add
add
adc
pusha
mov
mov
add
movsb
sbb
inc
inc
mov
inc
xor
inc
outsl
add
mov
stos
or
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
push
adc
add
add
inc
fildll
dec
add
mov
adc
add
adc
mov
add
push
push
inc
inc
jmp
add
jae
pop
dec
inc
outsb
pop
sbb
pop
pop
add
push
add
pop
sbb
aas
orb
jl
popa
mov
sub
mov
add
fwait
mov
mov
jae
push
or
aas
mov
in
subb
roll
mov
aas
ror
ret
int3
sub
in
push
mov
pop
mov
ja
add
clc
xor
cmpb
add
loopne
mov
pop
insb
outsb
or
lret
out
mov
pop
pop
push
add
cld
out
call
aad
or
adc
mov
shll
pop
outsb
jo
and
sub
out
push
arpl
jno
adc
loop
mov
sbb
fstl
cmp
add
pop
mov
add
xchg
orl
aaa
mov
or
pop
push
pusha
jo
adc
cmp
ret
data16
fs
call
mov
mov
cmp
lods
cltd
lods
jg
inc
xchg
loop
cmp
cmp
lods
and
fs
pop
or
mov
pop
lods
int
roll
and
inc
ficompl
dec
jo
aam
lea
outsl
imul
stos
cmp
pop
lds
cmp
mov
dec
insl
pop
push
adc
cmpsb
and
lret
mov
mov
frstor
and
cmpsb
jno
sub
add
inc
push
dec
and
pop
push
add
add
push
inc
cmp
and
and
jg
add
pop
add
fwait
or
push
dec
cmp
cmp
add
push
inc
inc
sbb
nop
add
sbb
lcall
inc
bound
add
mulb
cs
add
push
pop
out
sub
ud0
pop
out
jl
aaa
ja
sti
push
fcmovnu
add
jns
fadd
add
adc
insb
out
xchg
xchg
sbb
add
lock
jg
daa
iret
leave
inc
addb
dec
es
fstpl
push
aas
stc
inc
ret
loope
add
inc
push
arpl
sbb
xor
push
sub
lahf
iret
repz
cmp
xor
loopne
dec
movsl
stc
xor
sbb
js
and
push
push
dec
dec
lcall
xchg
push
cmp
pop
pop
cmp
push
push
ss
int
push
dec
push
rcrb
pop
add
stc
insb
add
lock
add
mov
outsb
ds
cld
pop
ret
and
jmp
pop
repnz
mov
adc
int
inc
xor
sysret
cmp
test
shrl
push
leave
dec
test
andb
jnp
rcrb
subl
cmpb
insb
jl
jl
push
clc
jg
jns
out
sarl
xchg
push
add
xchg
out
and
sub
pushf
xchg
cmpl
add
and
mov
add
mov
loopne
mov
sub
inc
mov
or
into
add
add
or
add
daa
mov
or
mov
sbb
rorl
jp
add
mov
or
pop
sub
movsb
sbb
ljmp
mov
inc
push
sbb
add
add
lea
mov
xor
or
inc
mov
negl
or
jo
mov
in
xchg
pop
lock
sub
mov
push
lds
lret
push
add
inc
push
loopne
xchg
popl
ret
aas
pop
aas
mov
sbb
clc
jmp
mov
mov
or
mov
mov
mov
adc
jg
or
or
xchg
cmp
or
xchg
mov
fistpl
xchg
and
mov
clc
or
or
xor
std
mov
idiv
inc
jp
jp
jae
mov
sbb
and
arpl
popa
insl
pushf
addb
pushf
fwait
jbe
pop
or
js
mov
ja
xor
or
or
or
mov
jnp
ja
xchg
or
testl
mov
rcr
or
adc
or
in
or
stos
sbb
inc
push
clc
out
jne
xor
or
adc
cmp
jne
lahf
xor
sbb
mov
loop
xchg
out
inc
pop
push
outsb
inc
iret
xlat
insb
dec
mov
mov
mov
jo
or
mov
xchg
dec
and
mov
scas
popf
pop
and
sbb
jo
push
pop
test
or
sbb
stos
and
loope
add
add
add
pop
mov
push
cld
push
add
push
cmp
push
add
jnp
negl
or
or
jp
push
and
xorb
add
sub
mov
xor
fs
mov
faddl
add
mov
fcomps
and
js
inc
aas
pop
sbb
int
shrl
sbbl
loope
mov
sarb
jae
sahf
or
jo
sbb
adc
dec
cmp
pop
fcmovu
sahf
loopne
ds
pop
setb
shll
and
repnz
push
mov
adc
jae
pop
or
lock
ret
ficomps
add
ljmp
mov
dec
dec
add
pop
lcall
or
or
mov
mov
add
or
lds
pusha
pop
fisttps
mov
lret
xor
lock
clc
imul
xor
outsb
scas
es
daa
mov
fcmovu
add
push
daa
es
js
push
xor
es
adc
in
pop
lock
jge
lods
orb
jne
scas
aaa
mov
mov
mov
loope
sbb
movsl
mov
mov
sarl
push
inc
sti
loop
add
push
sub
sbb
test
notl
fwait
mov
xchg
mov
or
outsb
ret
xlat
pushl
push
jge
and
pop
stos
push
mov
add
fdivrp
adc
sbb
sbb
rcrl
fnstenv
cs
insl
mov
inc
aad
pop
aad
nop
pop
cmp
sahf
cmpsb
lods
scas
cmpb
out
xor
ds
sbb
ffree
pop
aad
cwtl
sbb
pop
mov
enter
add
cwtl
mov
cs
adc
shll
es
sub
push
or
dec
mov
mov
fidivl
and
pusha
pusha
sti
mov
jbe
xchg
and
add
ja
cmpsl
or
sub
fmulp
jecxz
sbb
iret
scas
js
les
mov
lds
scas
inc
or
xchg
add
aaa
mov
mov
add
and
cs
movl
mov
jle,pn
mov
ret
out
ret
adc
inc
jae
aad
ficomps
push
sbb
jle
mov
mov
dec
es
pop
mov
fsubs
sar
insl
aad
cld
dec
dec
out
mov
testb
xor
mov
add
xchg
out
je
inc
ret
lods
rclb
test
and
sub
mov
scas
divb
fcoms
mov
sub
xlat
inc
pop
jae
in
out
xchg
adc
cmp
nop
arpl
outsb
ds
or
out
xor
lock
push
mov
push
push
shrl
or
das
les
imul
add
pop
pop
test
in
jae
insl
cmpsb
jl
xchg
xor
shrl
lods
fbld
adc
lods
mov
loope
lds
stos
push
jecxz
sbb
jge
sbbl
or
mov
push
pop
into
arpl
inc
orl
ljmp
rorl
ja
imul
push
rcll
stos
into
adc
fidivrl
xchg
popa
in
ret
dec
add
fldt
mov
rcrb
mov
mov
mov
aaa
dec
scas
stos
cmp
push
repz
add
jmp
push
ror
cmpsl
jnp
dec
and
lods
rorb
lret
pop
outsl
jmp
jnp
ret
and
pop
jo
cwtl
mov
jge
adc
dec
adc
dec
loopne
ret
mov
push
nop
add
imul
add
imul
jns
or
xorb
test
and
and
sbb
loopne
xchg
sub
cli
jle
sbb
add
scas
xchg
addr16
or
iret
adc
inc
add
into
es
cmp
dec
jnp
rcrb
rcr
das
sbb
dec
ds
add
sahf
lds
fisubl
mov
jo
cs
out
pop
mov
push
jg
cmpsb
aam
add
lds
out
les
pop
cmp
popa
lds
roll
pop
and
cmp
lahf
push
loope
inc
subb
rcrb
sub
loopne
into
sbb
mov
mov
fistl
sub
mov
arpl
enter
daa
sbb
daa
arpl
in
rcrb
add
aaa
ljmp
add
lods
mov
lods
cli
or
daa
dec
mov
repz
ret
pop
push
out
inc
mov
arpl
ret
xchg
adc
lock
leave
shl
sub
mov
loopne
add
lahf
hlt
mov
rolb
sbb
fildl
lcall
fs
mov
mov
pop
cmp
add
mov
mov
dec
mov
inc
lret
and
ret
mov
aas
jnp
push
pop
mov
mov
push
push
loop
add
addb
lret
mov
xchg
ret
scas
fisubrs
jmp
mov
ret
adc
dec
adc
lcall
mov
lahf
fcoms
insb
insl
adc
dec
adc
mov
aaa
mov
dec
add
test
inc
mov
ret
ficoml
mov
inc
pop
pop
push
inc
mov
mov
shr
mov
pusha
mov
pop
mull
jns
shl
scas
mov
pop
dec
aas
and
sbb
pop
push
xor
xor
adc
add
aaa
incl
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
dec
gs
imul
sti
jo
gs
xor
inc
jb
je
push
push
pop
fistpll
jge
jne
insb
inc
sbb
inc
insb
insb
outsl
arpl
dec
jae
popa
fs
mov
dec
push
outsb
sbb
inc
dec
insb
push
adc
outsl
mov
sbb
outsb
push
fs
js
add
jo
imul
push
and
arpl
xor
out
pop
push
sub
mov
dec
testl
imul
shll
outsw
jb
popa
sbb
cmp
push
pop
pop
push
negb
in
or
adc
fmull
das
adc
shlb
and
mov
inc
daa
scas
jge
lds
push
inc
pushw
jg
fcmovu
xchg
jno
fs
mov
adc
push
imul
push
jle
or
jae
jecxz
testb
xchg
inc
insl
lods
dec
into
fldenv
jmp
jno
bnd
inc
xchg
lods
xor
jae
jl
insb
outsb
ja
fs
inc
mov
imul
xor
je
dec
cmp
divb
push
outsl
dec
push
sbb
sub
sub
sbb
fiaddl
pusha
jae
jne
adcb
dec
popa
bound
push
outsl
insb
jne
icebp
and
adc
dec
adcw
mov
subb
adc
jae
mov
sbb
data16
pop
push
outsl
pxor
inc
hlt
inc
adc
loope
push
xorb
dec
inc
mov
andl
pop
cmpsb
cmp
repz
mov
and
in
sub
mov
lods
arpl
inc
dec
fistl
lock
push
sub
insb
jae
test
outsl
mov
xor
in
inc
and
aaa
popa
das
inc
mov
add
adc
fisttpl
mov
cmpsb
arpl
fs
cmp
sub
xchg
shrl
roll
pusha
xor
xchg
pop
nop
mov
adc
insl
subb
sbb
loopne
fsubrs
stos
xorb
rcrb
cmpb
call
pop
or
inc
xor
lcall
jns
sbb
dec
inc
stc
dec
std
pop
out
add
je
arpl
pop
gs
lods
shl
outsb
and
and
push
inc
xchg
push
sub
outsl
dec
fimuls
outsl
test
lods
and
pop
sbb
sbb
mov
xchg
push
xor
mov
icebp
push
std
loope
sub
inc
outsl
mov
inc
jns
outsl
push
imul
xchg
mov
or
cmp
adc
test
xchg
sub
sub
outsl
dec
scas
das
test
push
push
outsb
push
mov
inc
push
pop
je
xchg
and
xchg
divl
pop
daa
cmp
js
xchg
insl
jp
inc
cltd
xor
adc
push
sbb
inc
sbb
add
sub
sub
mov
std
inc
jbe
inc
adc
popa
push
or
push
dec
bound
imul
ja
insl
xchg
jnp
insb
and
add
push
ds
js
sbb
fiaddl
push
or
or
imul
fcoms
scas
sbb
jo
stos
cmp
insb
outsb
push
adc
int
js
pop
sbb
xor
add
aas
push
add
cmp
jns
mov
push
dec
sbb
sbb
lret
inc
cmp
xor
push
ss
scas
out
push
mov
test
fisubs
xor
sbb
in
and
stos
cmpl
add
ja
test
fs
cmp
cmp
and
xchg
jo
loopne
push
or
ret
inc
int
adc
push
add
sbb
mov
or
sub
je
cmp
ficoml
outsb
xor
aas
inc
adc
in
mov
inc
inc
imul
lcall
arpl
pushf
pop
scas
jo
je
jb
inc
sti
ret
mov
data16
dec
or
xlat
sbb
and
daa
dec
pusha
imul
push
sahf
outsl
ja
pop
addr16
pop
and
outsl
pop
cmp
pop
push
pop
arpl
pop
out
pushf
pop
arpl
test
fs
leave
xor
sbb
and
inc
jo
fsub
mov
clc
fldcw
inc
jb
js
mov
inc
aas
flds
adc
dec
scas
hlt
sub
inc
rolb
mov
add
push
divb
js
movsb
lods
orb
jae
mov
pop
push
pop
dec
mov
inc
daa
push
pop
fisubl
xchg
inc
jae
jo
repz
pop
arpl
jne
adc
test
shlb
fldenv
insb
jb
pushf
xchg
pushf
add
adc
mov
les
pop
sub
xchg
add
bound
xor
aaa
les
cmp
std
xor
inc
or
out
outsb
adc
je
insl
push
jb
je
aas
aam
fstl
mov
xchg
push
inc
iret
push
lods
xchg
adcb
sub
xor
cmpsl
pop
in
push
or
je
push
mov
sub
scas
insl
movsb
sbb
aad
ds
popf
lods
cltd
outsl
sbb
sub
test
mov
jae
loope
and
dec
outsb
imul
test
arpl
fisttpll
roll
mov
mov
ss
sbb
sbb
loope
cmp
mov
es
adc
call
loopne
std
cmp
in
jb
xlat
scas
sub
aaa
lock
jmp
cmp
dec
inc
mov
pop
and
pusha
dec
pop
push
adc
cmpsb
imul
or
mov
lcall
and
push
or
nop
std
push
push
test
dec
lock
cmpsb
push
and
imul
mov
push
push
dec
insb
jle
jnp
js
dec
adc
mov
rorl
pop
clc
pusha
mov
push
mov
arpl
ja
rolb
inc
inc
insb
addr16
inc
addb
lret
ja
adc
push
jo
insb
or
pop
cmpsb
inc
jg
xor
and
dec
pop
dec
je
jae
jno
pusha
das
add
pusha
pop
add
inc
xchg
rolb
push
push
aam
cmpxchg
push
mov
sarb
mov
loope
ss
xchg
lea
inc
scas
loope
and
push
je
loop
sbb
sbb
sarb
jnp
ja
jo
je
adc
pusha
jbe
enter
cmp
cmpsb
enter
jo
add
xchg
pop
xor
sbb
cmp
addr16
sarl
and
adc
pop
inc
push
cmpsb
sub
sbb
cmp
outsl
in
mov
push
or
cmp
dec
mov
imul
mov
inc
jge
andl
scas
jecxz
ret
out
insl
mov
xchg
mov
lods
cmp
add
lahf
mov
xor
or
sub
jge
and
lods
out
sbb
dec
dec
xor
adc
xchg
clc
orb
outsb
pop
push
mov
loope
push
imul
sub
out
addr16
nop
popa
shlb
sub
outsb
adc
jmp
imul
push
sbb
fcoml
push
cmp
imul
idiv
cmp
daa
fwait
lret
pop
and
inc
sbb
mov
pop
jns
mov
adc
outsl
mov
mov
xor
push
insb
jge
sbb
addr16
push
sti
cmpsl
xchg
mov
mov
sbb
mov
int
push
jmp
push
jne
mov
aam
hlt
shlb
push
aaa
jae
pop
mov
ja
js
adc
mov
popa
nop
xor
outsb
gs
jb
lods
mov
sar
push
fcoms
pusha
hlt
jmp
arpl
and
mov
mov
jbe
sbb
cmp
or
arpl
scas
nop
bound
mov
cmc
adc
mov
scas
pop
mov
adc
or
dec
add
push
xchg
rcrl
pop
shrl
mov
imul
stos
inc
inc
jo
mov
pop
dec
cmp
movsl
xlat
and
je
test
jge
int
xor
andl
lea
outsl
shrl
lods
sub
cmp
inc
ret
and
scas
xor
nop
sbb
pop
sub
imul
or
dec
xor
adc
jne
out
xlat
outsl
push
and
inc
stc
sbb
inc
pop
sub
pop
cmpsl
arpl
add
jge
push
sbb
push
arpl
cs
pop
es
sub
pop
pop
das
fs
xchg
xorl
push
les
imull
push
mov
pop
in
orl
test
cmp
das
addr16
push
lods
xchg
ljmp
push
addb
clc
xor
aam
test
loope
ss
addr16
adc
jecxz
mov
arpl
outsl
scas
add
shrb
sbb
cmp
subb
fdivrs
jmp
inc
pushf
popa
inc
movsl
cmp
add
push
aaa
repz
fiaddl
and
and
mov
lock
roll
dec
movsb
mov
jb
or
daa
dec
add
and
movsl
fadds
roll
decb
imul
pusha
int3
in
xor
ljmp
xchg
push
aam
dec
sub
sbb
sub
fcmovnbe
jecxz
and
enter
out
and
subl
dec
add
sbb
mov
add
add
add
daa
lret
add
inc
pop
movsb
insb
dec
rclb
arpl
pusha
mov
stos
or
dec
adc
outsb
repz
pop
or
mov
mov
shll
dec
mov
and
push
popf
cs
push
notb
mov
outsb
pusha
jb,pn
push
xchg
mov
adc
mul
pop
add
inc
cs
jb
cltd
add
cmovg
sahf
jae
arpl
idivb
out
pusha
dec
dec
js
mov
fmulp
pop
jns
add
xchg
and
add
add
imul
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
