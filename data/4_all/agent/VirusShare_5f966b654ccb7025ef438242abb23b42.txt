mov
add
add
nop
add
syscall
test
push
pop
pop
ret
pop
and
aaa
jns
pop
aas
dec
pop
and
in
adcb
pusha
pop
pop
cmp
in
add
cmp
push
xor
imul
data16
inc
and
add
add
movsb
shlb
add
mov
test
je
and
sub
or
jg
pop
add
push
push
and
lock
je
mov
pop
mov
mov
sbb
test
je
mov
insl
mov
jbe
push
mov
inc
lea
adc
push
in
outsl
xor
call
mov
push
pop
sbb
add
idivb
mov
adc
adc
in
add
outsl
in
mov
fldenv
pop
pop
pop
add
nop
add
outsb
mov
mov
mov
mov
out
ds
lea
movb
mov
fdivs
push
jl
mov
push
in
xchg
imulb
push
push
shrb
sbb
lea
pushl
adc
lret
jne
test
je
mov
mov
paddsw
outsb
decl
add
add
adc
add
dec
lret
outsb
in
out
jne
push
xor
imulb
dec
or
out
push
data16
mov
btc
popa
add
adc
push
push
cltd
push
ret
xchg
add
add
cmp
push
push
lahf
test
fadd
pop
pop
pop
pop
daa
insb
ret
pop
mov
sub
out
in
adc
or
inc
add
mov
pop
loopne
daa
mov
daa
or
movsl
mov
dec
comiss
int3
xor
xor
mov
clc
cmp
sahf
add
or
adc
fsts
cmp
jne
call
push
push
lea
test
pop
push
popa
jnp
inc
pop
and
xlat
into
int
xchg
pop
insb
push
test
ss
dec
xor
sbb
xor
sbb
push
pop
push
dec
mov
jbe
inc
mov
xor
push
jmp
jecxz
mov
push
xchg
mov
test
pop
xchg
mov
gs
pushf
jnp
adc
nop
add
dec
push
in
jg
add
mov
nop
cmpsl
call
fcomp
ja
incl
xor
mov
xchg
std
or
ret
push
and
out
add
nop
jae
outsl
push
sub
scas
aam
or
repnz
push
test
jne
lahf
add
mov
add
inc
add
or
cld
mov
repnz
inc
pop
mul
repz
cwtl
add
dec
jns,pt
cld
add
add
xchg
xchg
je
push
inc
adc
mov
push
fs
fistpll
fs
jo
test
cmp
xchg
mov
mov
push
cs
sub
push
iret
mov
dec
lock
in
jl
decl
es
clc
cmp
pand
dec
mov
in
mov
mov
or
adc
mov
divl
mov
mov
sbb
push
xor
push
mov
sti
stc
iret
mov
add
mov
add
lcall
push
push
pop
pop
mov
in
fucomip
decb
sub
mov
xor
cmp
mov
dec
push
enter
push
and
mov
adc
mov
add
aas
push
pop
popa
idivl
pusha
inc
cmp
mov
idivl
pop
mov
mov
mov
decl
push
mov
or
jg
orl
mov
mov
inc
adc
icebp
mov
dec
je
movl
sub
aaa
test
mov
add
cmp
pop
jmp
mov
add
pop
je
mov
pushl
dec
xchg
jle
add
or
fstl
mov
xor
mov
ja
aaa
push
loop
xor
popa
mov
and
cmp
fs
mov
insl
or
sub
adc
enter
inc
jb
mov
ss
xchg
sub
addr16
repnz
sar
mov
fbld
mov
add
dec
xor
in
fsubrs
or
andl
into
popa
pop
mov
and
mov
pop
cld
pop
push
ret
jnp
cmp
and
adc
pop
fdivrs
sbb
push
fndisi(8087
test
jmp
jae
inc
mov
sub
clc
push
mov
adc
mov
outsb
pop
mov
call
pop
inc
add
or
in
fimull
or
neg
push
not
and
or
mov
jbe
jmp
data16
popf
add
adc
mov
loopne
push
repnz
or
in
push
rolb
jge
xchg
stc
jle
and
xor
inc
jmp
xor
adc
cmp
jge
mov
push
add
dec
and
jne
sub
mov
or
xor
add
add
jmp
mov
loope
sub
add
add
decl
pop
jg
pop
and
pop
pop
inc
push
cmp
sbbl
push
push
xor
xor
pop
or
ja
sub
pop
testb
pop
inc
sbb
call
mov
cs
into
hlt
mov
clc
sub
cli
or
call
mov
and
add
mov
fldcw
dec
adc
push
adc
sar
loope
jle
add
je
out
xlat
rcl
xchg
jle
sub
jle
adc
sub
pop
sub
dec
out
leave
jo
inc
or
xchg
lods
cmp
call
addr16
fst
or
mov
notb
cmp
je
mov
add
cmp
jae
jno
mov
jmp
and
loopne
pop
fwait
out
jle
jne
push
movsbl
cmp
sbbl
pop
sbb
mov
nop
aam
sar
dec
inc
mov
popf
ud0
in
or
in
arpl
cmpsb
mov
pop
or
aaa
sbb
lret
sbb
and
pop
add
xor
lea
js
dec
cmp
das
pop
mov
inc
mov
push
add
incl
push
jge
ret
push
pop
call
dec
dec
jne
fldl
in
lods
mov
pushl
nop
je
jmp
sub
divb
sti
outsb
cmp
lret
bound
jnp
rsqrtps
pushf
pop
xor
push
push
dec
mov
data16
jne
test
imul
push
nop
pushl
mov
mov
nop
or
add
mov
mov
and
cmp
jne
clc
xchg
outsl
loope
add
and
jmp
and
mov
popa
sub
aaa
jbe
mov
mov
push
xor
cmpsl
movsl
inc
xor
adc
add
cld
lds
sbb
pushf
cmp
mov
push
jne
cmc
test
xchg
adc
popa
xchg
xchg
imul
les
aas
insb
sbb
mov
or
pandn
xor
lret
bound
lret
jge
push
mov
std
into
adc
cmp
leave
out
shlb
or
mov
leave
sbb
mov
add
clc
int3
pop
insl
int
lea
lea
push
push
add
bound
jmp
and
push
adc
push
pop
lods
push
pop
sahf
adc
nop
push
psubb
cmc
xchg
es
cmpl
cmpb
dec
cli
fmul
shll
std
pushf
adc
popa
mov
push
mov
adc
pusha
jle
cmp
das
cmp
push
iret
mov
mov
pop
jne
and
movsb
mov
push
leave
loopne
adc
add
push
xor
cmc
and
and
loopne
sbb
and
aaa
loope
push
adc
jp
xor
and
add
fiaddl
add
in
xlat
jno
shll
sbb
pop
push
push
call
or
pop
and
cmp
add
or
mov
mov
repnz
sti
or
and
pop
sbb
add
mov
into
add
mov
fsts
fst
and
pop
mov
pop
cmp
cmp
or
daa
andb
add
cmpsl
pop
ljmp
mov
push
sub
adc
or
mov
sub
push
add
add
dec
lock
mov
jg
add
push
cmp
mov
shll
push
xchg
outsb
popa
jl
push
pop
fdivl
loopne
and
outsl
mov
sub
je
jl
jnp
loopne
jmp
icebp
andl
or
sti
mov
cli
loop
insb
push
sub
movb
add
outsb
outsb
pop
sub
adc
or
cli
add
inc
jae
in
imul
jno
and
add
mov
inc
mov
dec
and
lea
xor
jno
xchg
mov
in
popaw
mov
ret
sbb
cmpl
xchg
jo
sbb
inc
xor
cmp
cwtl
jo
loopne
and
pop
mov
call
jno
jl
pop
je
int
pop
push
xorb
fistpl
or
sbb
std
add
or
js
xchg
and
or
ror
sub
inc
mov
into
lcall
inc
push
or
jbe
jg
jge
mov
pop
adc
dec
xchg
imul
jbe
add
sarb
lret
in
aaa
and
loop
adc
sbb
mov
fwait
data16
jmp
adc
cmp
addl
push
or
mov
jecxz
pop
orb
ja
fldcw
mov
jae
and
jmp
lds
or
bound
daa
adc
mov
pop
mov
scas
out
imul
and
cmpsb
testb
pop
push
push
jne
pop
mov
xor
sbb
and
enter
inc
std
sub
or
inc
cmp
inc
jge
iret
pop
stc
mov
data16
cmpsb
test
inc
add
mov
mov
fbld
sbb
sub
inc
xor
fisubrl
mov
dec
push
out
push
xor
adc
pusha
or
sbb
mov
pusha
js
fildll
mov
push
rcrl
pop
mov
loope
and
cmp
lock
loopne
jbe
ss
push
dec
shll
aad
add
out
cmpsl
push
jmp
xor
mov
sub
and
lea
repz
testb
jbe
orb
mov
adc
mov
flds
adc
push
pop
in
xor
outsl
adc
and
mov
cmp
repz
sub
inc
jle
push
mov
bound
pop
cmp
jg
loopne
ficoms
push
sub
aas
enter
lahf
lods
xor
int3
fstps
loope
ficoms
cmp
lods
lock
jmp
sbb
jae
sbbb
inc
sbb
cmp
dec
loopne
pop
int
add
adc
jae
inc
adcl
inc
cs
xchg
mov
mov
xor
mov
cmp
lods
shrb
js,pn
lock
xchg
gs
into
sbb
nop
fldl
sub
sbb
inc
mov
inc
sub
push
movsb
jmp
ret
push
mov
add
mov
push
push
push
sub
cmpl
mov
out
mov
push
mov
lock
jo
sti
sbb
ret
sub
fimuls
pop
xor
enter
adc
js
cmpsl
inc
incb
and
das
js
xor
fistps
or
jns
shl
loopne
mov
sahf
lods
pop
enter
mov
xchg
mov
imul
mov
jnp
cmp
fcomi
add
jne
inc
sub
sub
add
pop
lods
add
pop
inc
adc
jmp
movl
cmpsb
mov
mov
test
push
lahf
fadds
mov
cwtl
mov
sbb
shrl
or
adc
mov
lahf
clc
les
and
and
shll
add
sub
fistpl
or
or
add
popa
xor
or
mov
shlb
xor
stc
mov
sti
adc
jae
cli
xorb
shlb
and
imul
sbb
add
std
fwait
mov
jbe
add
sbb
sbb
inc
dec
fcomi
dec
mov
or
add
int
push
fbstp
popa
aam
inc
mov
je
sub
inc
inc
rcrl
mov
adc
sbb
jnp
leave
add
cmpl
aas
and
jmp
mov
add
mov
xor
cwtl
pop
add
jbe
dec
sahf
je
sarb
and
and
shlb
icebp
jne
lcall
fcmovnb
je
into
push
dec
data16
add
push
xor
adc
cmp
pop
push
or
pop
cmp
mov
mov
das
pop
sub
adc
push
imul
cld
dec
pop
xor
das
dec
mov
popa
flds
stc
mov
sarb
xor
test
push
mov
addb
jne
xor
sub
cmp
ja
cmp
jne
aaa
call
popf
aad
or
jmp
and
adc
inc
lret
arpl
jne
outsl
jmp
jnp
inc
cmpsb
nop
cmp
das
jl
cmpsl
jge
or
out
mov
jle
mov
jbe
sbb
mov
in
push
ljmp
sbb
mov
pop
popf
ret
test
xor
push
jb
xchg
push
dec
add
push
add
sbb
xchg
incb
rolb
rolb
imul
cmpb
cld
je
lea
push
sahf
mov
pusha
mov
pop
loope
dec
or
insl
pop
les
pop
sbb
sbb
call
or
adc
scas
inc
xchg
xchg
sbb
or
and
nop
adc
and
and
xor
xorb
mov
sub
sbb
add
sub
loopne
aaa
jecxz
and
test
jbe
push
enter
sbb
cmp
push
out
and
lock
imul
shr
dec
icebp
mov
adc
fisubrs
lock
adc
or
mov
addl
push
add
add
add
dec
enter
mov
xchg
in
jbe
lea
push
rclb
add
jge
sub
mov
pop
or
xor
or
repz
adc
sbb
leave
add
sbb
push
or
inc
pop
and
mov
sarl
push
sub
push
and
aam
or
fsubp
enter
cmp
ficoml
inc
data16
in
mov
insb
shr
add
fimuls
jne
mov
rcpps
mov
sti
add
lea
fcmovnbe
stos
pop
or
push
lcall
fucomi
push
or
pop
or
subl
mov
add
pop
inc
mov
movsb
add
mov
movsb
fadds
jg
outsb
or
jae
mov
subb
call
fcomp
cmp
sbb
cmpsb
and
pop
enter
add
movsl
pop
addl
insl
push
xchg
jo
mov
inc
inc
gs
add
sbb
dec
fnop
pop
mull
pop
push
cmp
sar
mov
push
ret
or
rclb
push
fidivl
ja
scas
adc
lods
or
mov
cmp
or
cmp
sti
lea
sbb
and
jle
call
mov
xlat
adc
insl
cmp
stos
and
and
enter
cwtl
ja
and
adc
bound
push
stos
ja
dec
out
ss
ljmp
pop
xor
mov
sbb
or
inc
out
adc
jbe
sbb
incb
adc
in
pop
adc
pop
or
rclb
and
adc
adc
sbb
mov
lahf
jmp
cld
sti
and
sbb
or
test
jbe
inc
add
sbb
sbb
movsb
jo
push
sbb
inc
push
xchg
push
push
flds
push
push
mov
icebp
cmp
jae
and
jne
shll
sub
pop
iret
push
lret
cwtl
ret
jo
or
jns
jbe
cmp
jne
fwait
dec
lods
push
mov
hlt
jae
leave
sbb
fisttpl
aam
or
adc
jnp
incb
ss
jno
mov
lret
lea
shll
fadds
add
pop
mov
jne
jmp
ss
mov
mov
int3
cmp
lcall
or
mov
sub
xchg
mov
sbb
les
subb
sbb
aaa
mov
mov
fbld
aas
inc
adc
xchg
adc
movsb
add
add
or
mov
adc
and
setge
lea
and
out
lret
jbe
pop
dec
maskmovq
sbb
pop
ror
shl
fs
decl
lods
mov
sti
add
add
test
dec
cmp
jmp
adcb
inc
or
or
mov
fstl
sbb
jecxz
mov
add
push
xor
cltd
sahf
insl
and
or
scas
data16
inc
xchg
or
addr16
sub
addr16
inc
or
xor
mov
adc
mov
int3
add
cmp
pop
mov
xchg
add
mov
enter
sub
cs
adc
shll
repz
pusha
lock
mov
enter
xchg
in
jl
push
pinsrw
les
ret
add
dec
jb
mov
imul
adc
ret
loopne
test
dec
movsb
mov
push
sub
mov
fmul
mov
pushf
xor
loopne
pop
dec
ret
xchg
pop
leave
or
loop
test
loopne
hlt
jbe
leave
and
call
push
add
jo
push
xchg
stos
in
lret
enter
sub
sub
inc
pop
loopne
xchg
repnz
test
jg
cmpsb
je
cmp
je
mov
push
pop
insl
andl
cvtps2pd
and
adc
fidivl
addr16
pop
dec
add
in
dec
je
add
jne
sub
lret
dec
aam
negb
lret
stc
adc
push
je
lds
decb
mov
xor
pusha
or
xchg
rcll
xchg
sub
adc
xor
push
mov
movl
test
subb
orb
sbb
xorb
les
pop
push
mov
push
xor
pop
sbb
sarb
push
ret
push
pop
insl
pop
loopne
jne
cmpb
mov
setbe
orl
faddl
mov
or
cmp
push
clc
ja
cmp
lcall
cmp
sbb
xchg
test
out
inc
or
mov
adc
push
les
testb
add
mov
add
push
mov
ror
inc
mov
add
cs
idivb
sub
stc
add
inc
loopne
call
or
bound
inc
pop
add
push
call
cmp
add
mov
mov
andl
pop
das
push
mov
push
orl
pop
or
or
inc
dec
jno
fstl
icebp
test
je
sbbb
dec
sub
pushl
inc
mov
mov
mov
ret
pop
enter
or
cs
mov
scas
jge
dec
shll
fistpll
das
loop
divw
or
xchg
jmp
movl
mov
je
popa
sti
inc
add
sti
jb
mov
outsb
mov
pushl
sub
ds
lods
cld
ljmp
filds
jge
jmp
cmp
jb
test
mov
insb
insb
ja
jns
jge
je
ret
sbb
sahf
popf
in
lods
imul
jmp
sti
int
cmp
insl
add
inc
add
jb
mov
fidivrs
scas
push
movsbl
push
dec
and
incl
dec
movsl
pop
jg
add
test
cmpsl
inc
adc
xorl
je
mov
sub
out
dec
push
aad
outsb
shll
inc
add
out
adc
inc
sub
adc
das
sti
cmp
ljmp
mov
jge
outsb
mov
gs
mov
fnstcw
pop
mov
mov
push
enter
mov
mov
rcll
cld
sarl
fstpl
clc
call
xor
push
cld
rcll
dec
push
mov
sbb
dec
pop
mov
jecxz
cmp
inc
testl
cmpsl
jbe
dec
stos
dec
rol
mov
mov
shl
movsb
xor
sbb
push
push
pushf
testb
push
stc
aam
shrb
or
pushf
push
cmpsb
xor
fcomip
lods
mov
add
or
sbb
cs
cwtl
xlat
dec
iret
cli
jbe
inc
loop
jne
push
sbb
loope
inc
push
lods
xlat
out
in
cmp
dec
lock
and
aaa
fcoms
pop
and
gs
and
aam
inc
lock
out
cmp
cmp
insl
inc
cmc
mov
pop
mov
fstps
mov
adc
jbe
push
movsb
jge
sbb
psrlq
add
cmp
adc
movsb
test
push
sbb
sahf
push
pop
mov
sbb
stos
xchg
call
jl
fisttpl
pop
mov
and
mov
sar
out
mov
mov
lea
xor
and
stc
subb
aam
pop
fwait
sbb
cmpb
cmp
xchg
ljmp
shlb
sub
mov
mov
cmp
mov
loopne
imul
pop
pop
xchg
or
out
inc
inc
arpl
sbb
inc
aad
add
js
int3
call
and
dec
mov
pop
clc
mov
jb
sub
scas
sbb
cld
loope
mov
rcrl
xchg
rol
pop
xchg
jecxz
inc
xor
cmpsb
jle
icebp
mov
pop
push
adc
gs
mov
or
sbb
inc
hlt
rcr
inc
das
clc
fisubl
daa
add
int3
jno
push
sbb
dec
les
popa
pushf
pop
test
push
push
scas
pushl
jo
shlb
fadd
faddl
cmpl
push
mov
js
dec
fmull
test
adc
cmp
xchg
push
push
and
lock
hlt
ficomps
lock
pop
dec
xchg
ret
popf
fcomp
and
xchg
in
or
cmc
rolb
jecxz
push
insb
jecxz
jo
mov
int3
jge
pop
mov
push
fsubr
or
or
pop
inc
mov
insb
add
data16
movl
insb
js
add
jmp
test
cmp
adc
or
sbbl
jne
adc
pop
arpl
jne
xor
and
arpl
dec
inc
xor
adc
push
ss
ja
pop
dec
psubusw
dec
mov
call
dec
lea
cmp
addl
add
add
int
iret
cmp
lret
loopne
sbb
adc
mov
sbb
cmp
int
or
ja
in
lods
jae
out
int3
lock
shrb
cmp
cltd
cmp
movsb
movsl
xchg
leave
jo
dec
in
or
jecxz
pop
push
mov
or
ds
push
sub
cs
mov
inc
dec
pushl
push
pop
cmpsl
out
call
and
sub
mov
mov
dec
pop
jl
and
push
push
fisubrs
jge
adc
push
or
ret
popl
lods
jo
xchg
les
jle
js
jo
clc
push
or
push
or
adc
xlat
mov
mov
add
or
call
leave
inc
shrl
pop
add
mov
push
icebp
fisttpl
data16
or
mov
or
pop
or
rorl
jbe
clc
jmp
fsubrp
jb
hlt
jae
jmp
scas
cmp
sub
movsl
jmp
sbb
jns
testb
add
enter
inc
push
lea
nop
pop
sub
adc
add
xchg
clc
test
or
rorl
add
mov
add
pop
mov
mov
dec
sub
mov
add
jl
inc
and
mov
shll
insb
fs
push
shll
dec
mov
inc
in
call
dec
in
in
lock
hlt
sbb
xor
clc
cld
cld
dec
sti
push
loope
inc
add
add
or
lock
outsb
mov
mov
or
negb
xchg
sbb
addr16
jg
neg
insl
das
or
xor
cmp
dec
stc
sub
dec
sub
push
fmuls
add
jnp
mov
dec
push
mov
pop
mov
out
add
add
mov
and
mov
lret
add
cs
ret
jg
add
popa
shrl
cld
add
or
daa
dec
xchg
imul
imul
imul
pop
inc
add
dec
xchg
insb
or
sub
ret
ret
mov
push
adc
cs
mov
mov
incl
bnd
push
loope
rolb
push
out
mov
push
je
push
pop
dec
cmp
imul
xor
jle
aam
bound
inc
rorl
adc
jbe
jbe
adc
push
imulb
cmp
lcall
push
scas
cmc
push
cmp
jg
inc
adc
ljmp
lds
call
adc
insl
test
push
decl
loope
mov
push
jl
add
or
push
pop
fdiv
arpl
data16
pop
or
js
shlb
mov
cmpsl
outsl
xor
mov
aad
jmp
adc
ljmp
lret
imul
rolb
dec
push
inc
movsl
xchg
lcall
ljmp
xlat
xor
cld
and
adc
je
test
je
test
pop
lea
std
pop
cwtl
daa
jne
and
int3
mov
xor
jmp
lret
push
fs
push
jmp
sbbl
addb
pop
call
pop
add
sbb
fiadds
fcos
jg
or
xor
fcmovbe
mov
aad
jne
sbb
mov
push
test
push
or
push
or
push
lea
jmp
push
adc
sub
push
ljmp
in
jl
sbb
test
pop
daa
or
or
xor
sbb
adc
mov
ljmp
cmp
pop
lret
adc
or
ljmp
sbb
jp
cmp
and
cmp
add
test
stos
das
jl
ds
xchg
jle
push
push
addr16
push
jp,pn
and
out
ljmp
sahf
xor
out
inc
out
mov
pop
mov
mov
mov
imul
dec
mov
sbb
dec
adc
cld
xor
adc
stos
sbb
jecxz
inc
cld
adc
fdivrs
add
clc
inc
cmp
push
pop
cmp
add
push
push
add
call
sub
mov
sub
sub
pop
inc
dec
jne
stc
shl
roll
in
lret
or
stos
sti
call
and
pop
and
in
sbb
pop
dec
repz
or
push
nop
lret
orb
rorb
in
enter
dec
shll
aas
dec
push
cmp
xor
xor
xor
and
adc
dec
mov
or
lock
jl
add
jl
dec
mov
and
mov
dec
and
sub
dec
or
jb
dec
lock
dec
xlat
or
lods
add
int3
aam
dec
mov
pop
in
add
or
sbb
mov
lahf
out
shll
xor
cmp
inc
push
lock
call
add
add
xor
xor
mov
test
imul
insl
test
mov
adc
pop
int
pop
add
int
inc
call
rol
lcall
pop
icebp
and
fwait
das
inc
in
cmp
pop
pushf
sti
jne
arpl
dec
xchg
adc
add
push
pop
inc
and
outsl
adc
inc
push
fimull
int
je
xchg
mov
xchg
adc
mov
xor
dec
or
inc
sbb
sub
dec
push
and
cmp
sub
dec
push
xorl
pop
jae
or
cmpb
push
and
or
sub
scas
andl
pop
mov
pop
bound
add
adc
rolb
pop
gs
push
daa
or
pop
sbb
lret
repnz
dec
stc
rol
cli
loope
lods
and
xchg
xchg
or
mov
outsb
inc
pop
out
push
loop
pop
enter
cmp
pop
sbb
jl
jmp
mov
sub
jle
movsl
outsb
imul
push
or
sub
pop
add
jg
data16
insb
subl
outsb
add
and
and
pushf
insb
rcll
mov
dec
mov
orb
xchg
bound
mov
jno
push
jmp
hlt
inc
and
fcom
pop
inc
pushf
mov
inc
xor
cvtps2pd
movsl
cld
mov
movsl
jmp
or
mov
fdivrl
std
pop
mov
adc
ss
rclb
jmp
sbb
jmp
fisttpl
add
pop
imul
inc
inc
mov
push
rcr
jle
mov
inc
pop
aam
aaa
aaa
inc
xlat
repnz
das
or
xchg
imul
mov
movsl
sub
in
sub
test
inc
inc
sub
dec
mov
loope
and
dec
inc
jmp
add
and
ljmp
mov
and
adc
push
adc
lea
or
mov
nop
lock
jl
add
loopne
adc
shrb
insb
ficomps
out
push
cmc
insl
or
add
fwait
mov
push
mov
or
int3
add
je
adc
mov
les
xlat
incl
push
cmp
or
mov
inc
inc
dec
pushf
or
inc
mov
cmp
fnstsw
add
cmp
call
cmp
dec
enter
dec
incl
repz
je
xor
cld
and
je
or
push
adc
ljmp
pop
call
fsubs
inc
lods
mov
lret
arpl
cmp
faddl
data16
out
xlat
loope
and
dec
pop
mov
sub
jl
cmp
sarb
push
pop
cmp
shll
insb
dec
xchg
inc
xlat
adc
push
pop
lds
xchg
jne
sbb
pop
testb
outsb
lock
inc
daa
cli
out
and
jnp
inc
popf
enter
cmp
jb
dec
xor
in
stc
decb
push
sub
xchg
adc
or
mov
ja
fstpt
stos
jae
push
outsl
iret
stos
xchg
or
aaa
push
jne
test
cmp
jns
push
push
xor
adc
ja
pop
shll
call
inc
mov
ja
push
push
push
sbb
jmp
je
sti
jmp
push
sub
mov
adc
jle
inc
cld
dec
cmp
mov
mov
xor
pop
cld
mov
cltd
cmpb
pop
cmpsb
jae
xlat
int3
gs
inc
inc
inc
cs
aas
push
inc
pop
jle
incb
sbb
inc
ss
ja
push
mov
decl
fwait
xor
pop
pop
cmp
jb
sub
inc
loop
enter
pmaddwd
ret
lock
ja
mov
mov
push
je
adc
fisubs
addb
or
xchg
aaa
sbb
lods
push
dec
adc
cmp
push
mov
inc
lea
out
mov
enter
push
pop
jns
add
push
cmp
adc
pop
pop
cmp
and
mov
sub
insb
or
js
insb
or
ret
insl
insb
in
sbb
fs
sbb
insl
test
cli
cmpsb
adc
and
adc
xor
or
sbb
sbb
fstpt
add
insl
idiv
cmp
push
sub
icebp
daa
adc
fsts
pop
adc
mov
repz
jmp
mov
add
test
pop
fisttpl
and
fisubrs
mov
cmp
sbb
push
ja
cld
lret
test
cwtl
lods
pusha
mov
pop
push
dec
pushf
or
jp
sahf
rorb
push
lods
push
je
inc
fnsave
cmp
pop
sbb
or
js
xchg
push
push
xor
dec
mov
movsb
lret
mov
push
clc
xchg
push
dec
and
ret
adc
inc
fldenv
and
jg
push
cmp
pop
je
or
subps
or
sbb
or
sbb
sub
xchg
testl
jae
aaa
rorl
jo
and
cmp
aad
jge
add
jne
loop
mov
cs
push
mov
push
mov
xor
mov
xchg
adc
pop
add
mov
cmp
or
mov
cmp
push
or
std
ja
in
add
lea
stc
add
jl
je
push
push
cwtl
xchg
test
mov
xchg
call
testl
hlt
add
or
push
mov
add
cli
pop
jle
cltd
mov
pop
cmp
jne
mov
jno
bound
inc
in
pop
aam
lea
fisttpl
addr16
outsb
fs
or
push
pop
mov
cmpsl
sub
dec
fcoml
jmp
add
cs
sbb
cmp
insb
jmp
lahf
lock
jo
or
ret
xor
sbb
push
mov
incl
cmp
je
cmp
je
cmp
shll
add
cs
or
add
mov
pop
ljmp
inc
cmp
pop
rclb
xor
rol
in
lods
in
push
jg
pusha
mov
je
add
je
lods
popf
test
lods
popa
or
sahf
adc
dec
mov
incl
adc
adc
mov
jge
inc
ss
shr
sbb
jae
ds
sbb
or
jle
enter
lock
or
pop
dec
sub
je
dec
imulb
je
add
jne
test
cmp
lahf
in
sub
pop
clc
and
cmp
mov
pop
into
add
push
mov
inc
pop
cmp
or
dec
push
and
push
mov
mov
push
lret
jge
push
sbb
aam
jo
xorb
add
add
dec
sbb
adc
adc
test
sub
cmp
push
jle
mov
es
push
cmp
je
push
dec
das
shll
leave
inc
fs
ret
int3
loopne
jmp
mov
jmp
cwtl
push
shl
cli
test
test
pop
faddl
cmp
inc
push
cmp
out
push
mov
movsl
mov
outsb
add
or
lods
dec
add
js
cmp
loopne
scas
dec
adc
and
inc
je
jne
shlb
mov
dec
or
xchg
fmul
testb
push
jp
xor
shrb
fwait
imul
add
mov
adc
roll
add
or
jne
mov
xor
add
ret
imul
or
shlb
adc
pop
cmp
xchg
xor
aas
add
cmp
add
and
popl
sbb
dec
popf
mov
mov
sbb
or
into
sub
sti
cli
push
adc
mov
xchg
test
aad
mov
dec
cmp
add
je
jmp
rorb
jae
cmp
jne
fisubrs
cmc
lea
pop
add
add
mov
js
or
mov
jne
push
pop
pop
cmp
dec
out
adc
aas
fwait
call
add
inc
jmp
cmpb
mov
divb
and
inc
or
std
xor
sbb
psubsw
mov
or
addl
mov
inc
or
hlt
inc
adc
cmp
mov
loopne
mov
add
cmp
lock
repz
or
cmc
or
out
mov
cmp
cmp
sbbb
and
cmp
push
cs
pushl
add
fists
mov
leave
pop
incl
xorb
push
mov
fwait
cmc
add
pop
mov
adc
adc
in
shlb
sub
sbb
scas
add
inc
call
jl
mov
popa
fmuls
mov
or
daa
and
push
imul
push
xor
or
mov
push
fldt
push
lret
jb
and
sbbl
inc
add
xchg
pop
aaa
mov
sarl
xlat
inc
cmp
call
test
je
shl
and
jno
scas
ss
adc
aad
or
or
sbb
jnp
sbb
inc
push
add
mov
inc
sbbl
mov
inc
sub
adc
or
or
jne
mov
dec
decw
xor
sbb
dec
add
xor
mov
daa
add
pop
enter
insl
cmp
hlt
or
and
inc
jmp
xchg
sub
ret
add
das
pushf
push
cmpb
jecxz
pop
outsl
inc
aas
ret
xchg
or
mov
mov
dec
fcmovu
mov
mov
push
pop
inc
mov
jne
sbbb
cmpl
or
push
inc
cmp
loop
or
push
push
pop
sbb
inc
clc
inc
jae
add
loope
imul
push
mov
add
dec
adcb
pop
js
pop
jecxz
mov
mov
or
sub
imul
in
jmp
cltd
test
dec
mov
sti
pop
ljmp
pop
push
mov
loopne
inc
or
daa
ret
mov
sarb
push
jae
inc
inc
or
arpl
push
repnz
das
test
clc
mov
add
mov
das
mov
xor
xor
or
push
pop
and
int
mov
pop
out
cmp
lds
push
sahf
adc
push
mov
dec
movsl
test
xor
jmp
inc
and
jnp
add
sub
inc
push
push
pop
rclb
stos
sti
jmp
mov
push
call
cmp
std
in
popa
fsub
test
cmp
cmpsb
dec
push
xor
jo
not
inc
add
xchg
mov
lock
cmpb
and
cs
or
loope
add
pop
inc
jne
dec
lahf
lods
lea
xor
and
jl,pn
jbe
add
fdivrl
mov
pop
sti
pop
mov
lea
andb
inc
xor
sub
jl
aad
or
mov
sti
test
or
sarl
sub
aam
out
roll
add
daa
aam
push
movsl
cwtl
push
nop
mov
pop
mov
mov
das
mov
and
mov
mov
pop
in
cmp
push
fdivs
cmp
test
add
mov
negb
mov
dec
inc
call
cmc
pop
xchg
test
xchg
fstpl
jae
push
data16
imul
orb
or
nop
jns
jne
fadds
bound
add
mov
xor
lea
jp
add
test
arpl
add
std
mov
loope
or
jb
lock
sub
xor
xor
insl
or
xor
mov
test
cmp
jno
jae
add
pop
jo
and
or
sub
jbe
popl
inc
push
push
lea
lret
mov
or
inc
or
xor
and
and
or
or
mov
xlat
insl
or
jle
push
or
or
aas
les
sbb
jmp
adc
sbb
insb
mov
dec
xchg
adc
pop
push
pop
xor
pop
mov
mov
add
push
and
add
or
call
data16
aam
xorl
ds
mov
inc
mov
cmp
pop
stos
into
or
xchg
dec
fisttpll
jmp
jp
adc
jbe
push
inc
cmp
retw
fadd
sbb
insb
frstor
or
fiadds
cli
jne
icebp
mov
lret
leave
stos
in
pusha
fisttpll
xor
pop
inc
mov
push
int3
adcb
push
pop
adc
fidivrs
popf
popf
fnstenv
sbb
clc
or
outsl
push
push
add
push
mov
adcl
xor
fcoms
pop
sbb
sbb
fwait
mov
push
into
shll
mov
and
mov
lea
sahf
ss
hlt
in
push
cmp
into
mov
imulb
ret
jge
test
mov
cmp
or
cmp
or
je
push
mov
inc
pop
sbb
fisttps
dec
mov
adc
or
jne
mov
insl
in
dec
sbb
loopne
ret
or
pop
mov
push
aaa
add
jmp
add
ds
pop
xor
lret
mov
jmp
inc
xor
rorb
sbb
inc
or
clc
mov
ja
test
clc
ja
cmp
in
jo
jne
push
sbb
pusha
outsb
inc
push
sbb
sbb
and
scas
jb
xchg
add
jb
mov
int
pusha
pop
push
inc
pop
push
push
pop
das
testb
es
hlt
and
mov
pop
and
xor
pop
or
inc
outsl
mov
and
add
mov
lahf
mov
add
je
bound
mov
je
and
pop
pop
bound
imul
jecxz
push
pop
fsubr
push
push
or
adcl
jae
loopne
cmp
jbe
lret
add
arpl
mov
and
and
sbb
jbe
clc
push
xchg
shll
pop
pop
mov
and
pop
xor
jo
sbb
sub
pop
jb
jl,pt
xchg
jl
xor
fistl
sub
mov
aaa
jle
push
aas
jge
adc
push
cmp
jne
or
xchg
fs
mov
in
xchg
inc
sbb
or
into
movsl
ljmp
add
mov
push
inc
stc
add
or
sbbb
or
sbb
jge
push
call
push
loop
xor
push
mov
sbb
sbb
int
jmp
int
jg
cmp
jg
mov
shl
adc
pop
jl
jle
mov
iret
lea
and
add
or
jbe
aaa
push
inc
sbbb
dec
clc
cltd
push
mov
loope
hlt
addl
hlt
add
mov
popa
and
in
jp
xor
addr16
sbbb
pop
nop
movsb
test
ret
adc
pop
fistpll
clc
or
popa
add
push
adc
dec
ffree
and
inc
lock
xlat
aad
popa
lea
lret
jns
insb
fdivs
xor
data16
and
mov
clc
jae
cmp
jl
cmp
jno,pt
clc
cmpsb
pop
dec
adc
loopne
pop
dec
hlt
mov
aam
push
out
jne
scas
lret
or
push
inc
outsb
mov
push
test
roll
fsubrl
or
xchg
cwtl
in
add
jge
pop
adc
pop
cmp
and
push
add
testb
sbb
fnstenv
lret
push
gs
or
push
add
pop
mov
push
and
sub
jbe
jne
add
cmp
add
pusha
sbb
rolb
mov
or
add
or
rcr
in
jp
fdivrl
xor
dec
push
push
add
ja
ss
pop
jmp
mov
dec
pop
and
cmp
mov
xchg
cmpsb
jecxz
mov
xor
cmp
ss
ss
sbb
pop
inc
push
sub
mov
push
out
sub
bound
outsb
push
or
pop
sub
inc
mov
jmp
sbb
popf
jns
or
pop
xor
xor
ds
sbb
aam
rcl
sbb
cld
mov
or
mov
in
loopne
sahf
xchg
fisubrl
notl
dec
adc
cld
in
xor
xorl
in
xor
arpl
cmp
fdivrs
sub
add
jns,pt
pop
gs
test
mov
mov
inc
jnp
jbe
mov
fbld
test
mov
jge
aas
or
daa
cmpl
cmpl
dec
mov
les
add
icebp
dec
out
outsb
pushf
mov
fwait
mov
adc
sbb
xor
orb
and
popa
mov
jne
or
mov
mov
or
popa
jl
mov
testb
mov
or
sbb
xor
pop
and
sbb
push
lea
jp
mov
jl
sub
insb
adc
push
outsb
enter
sbb
mov
jns
popf
dec
jae
add
faddl
es
pop
pusha
add
inc
mov
pop
mov
jmp
sbb
add
and
divb
push
mov
dec
test
xor
push
pop
jmp
orl
cmp
dec
stc
repnz
mov
add
sbb
jle
pusha
sub
xor
mov
jecxz
xor
pop
push
mov
xchg
je
nop
call
clc
or
popf
dec
rclb
push
pushl
mov
sbb
mov
and
sub
adc
adc
sarb
insl
lods
or
or
add
dec
xor
dec
fstl
push
les
insl
cld
insl
or
outsl
insb
mov
pop
adc
jmp
add
mov
and
add
push
leave
cltd
mov
loop
movsb
into
sub
roll
pop
adc
shr
pop
sub
mov
bound
roll
jo
jb
fisttpl
add
add
dec
and
sub
mov
test
dec
or
pop
sbb
adc
pushf
mov
sbb
repnz
fmuls
popa
mov
fnsave
daa
aam
xchg
les
es
imul
push
xchg
or
xchg
add
andl
icebp
filds
dec
in
insb
pop
mov
test
jne
push
adc
push
cmp
sar
outsl
stc
jbe
mov
mov
and
cmp
addr16
push
or
jbe
xorl
and
scas
push
push
dec
addr16
add
addr16
or
pop
add
js
pop
add
frstor
ja
mov
jge
loop
scas
add
xchg
push
push
movl
adc
das
pop
lock
jl
sbb
inc
fisubrl
stos
push
inc
sub
rolb
gs
jne
lock
mov
sub
mov
push
fiadds
and
mov
loopne
dec
adc
or
movsb
jecxz
inc
fimull
sub
fldl
cmp
jae
cmpb
or
jmp
dec
xchg
push
mov
jge
or
pop
add
or
xor
fidivl
pop
adc
jg
pop
and
push
loop
stos
xchg
imul
sub
add
jae
cmp
jbe
mov
sub
loopne
adc
sub
push
pop
sbb
loop
or
cmp
or
or
cs
cmp
cmp
sbb
cmc
test
addl
jo
insb
fistpl
gs
ret
mov
add
adc
push
cmp
cmc
jae
jecxz
sar
push
sub
rdtsc
jmp
inc
xor
push
push
decb
pushf
add
rorb
enter
dec
or
test
cmp
push
xchg
pop
shrl
or
mov
loope
lea
and
and
cmpsb
imul
movsb
pop
cmp
and
mov
ret
in
adc
or
icebp
leave
addr16
and
mov
sub
clc
sbb
and
xchg
xor
mov
or
cltd
lret
add
adc
sarl
jnp
xor
or
rclb
insb
xchg
push
xor
push
icebp
xchg
fmull
stos
sub
pop
fcmovnb
add
nop
pop
orps
add
pop
adc
fisttpll
jne
and
movsl
enter
jo
or
cmp
xorb
shrb
or
loop
shll
or
and
js
nop
pop
adc
push
lods
in
dec
pop
mov
cld
xor
inc
mov
or
pop
add
lock
push
adc
or
or
and
push
gs
inc
xor
gs
pop
stc
add
cld
sbb
cmp
aaa
repnz
cmpsb
loop
add
jns
movsb
and
loop
add
adcb
or
lret
icebp
mov
jmp
int
loopne
mov
adc
add
stc
push
stos
sbb
mov
dec
or
pop
push
mov
movsl
pop
test
adcw
mov
pop
sbb
inc
mov
push
aad
mov
mov
sub
adc
jo
push
xor
sub
and
push
int
sub
jne
add
stc
mov
les
sbb
orb
or
dec
leave
add
adc
repz
test
in
loope
dec
in
cmp
add
dec
or
lret
rorb
inc
je
push
loope
sbb
dec
scas
add
mov
in
sub
das
mov
push
fidivrl
mov
xor
cmp
add
add
xchg
jecxz
cmpsl
or
jge
mov
ds
jns
ja
mov
jmp
lea
in
mov
pushf
adc
cmp
dec
or
sbb
das
outsl
lods
xchg
push
or
jmp
pop
lods
mov
sbb
mov
pop
inc
out
mov
mov
nop
outsb
imul
adc
das
xor
divb
test
mov
push
cmp
or
inc
call
xchg
or
nop
out
and
jp
inc
lret
dec
adc
int3
in
ret
adc
movsb
xorl
pop
les
push
mov
pop
mov
popf
adc
sbb
jle
mov
cld
in
jnp
hlt
in
pop
into
pushw
clc
pushf
mov
ss
add
sbb
mov
mov
mov
push
ficompl
mov
and
pop
nop
adc
call
test
test
fistpl
sbb
sub
pop
cld
add
push
shr
icebp
xchg
and
mov
imul
in
add
lea
sub
je
jo
add
jg
cmpsb
jp
idivb
dec
pop
or
xchg
jmp
rorb
or
pop
arpl
mov
mov
lea
not
and
decb
jne
jne
or
and
loopne
sub
cmp
sbb
sbb
mov
add
test
or
sti
mov
jnp
pop
fucomi
dec
push
push
lret
xchg
in
movsb
mov
test
fistl
mov
std
clc
dec
pop
cmp
cmpsb
jbe
repz
adc
inc
ds
loope
mov
out
mov
push
mov
mov
pop
push
sub
adc
mov
bound
dec
mov
dec
or
adc
add
aad
jg
mov
ret
inc
pop
mov
sub
es
mov
mov
add
mov
out
and
dec
paddd
mov
jae
cmpb
push
mov
jmp
test
or
in
arpl
add
and
lea
sbb
pop
add
popf
test
push
xor
xrelease
mov
xchg
test
jbe
cmovno
in
fistps
in
in
movsb
ljmp
add
push
addb
mov
loope
xchg
push
jb
pop
xor
push
or
rorb
push
cmp
adc
mov
testb
or
cmpb
andl
adc
insl
inc
sub
insb
lea
lcall
sbb
dec
dec
add
mov
inc
mov
sub
mov
xchg
adc
lea
es
and
or
mov
and
cmp
or
or
mov
rclb
sub
ret
je
leave
sub
dec
ja
lock
push
fbld
or
call
out
sub
shlb
es
jp
in
or
call
pop
js
aaa
jo
fisttps
loope
and
and
or
sub
cmp
sti
pop
jne
mov
cmp
es
add
pop
and
loop
popf
jae
jnp
jo
aaa
jmp
es
inc
or
orb
fisubrs
movsl
push
push
out
pop
pop
fmul
and
mov
lcall
jmp
mov
cli
dec
fsubs
nop
mov
nop
inc
mov
cmp
mov
jo
push
and
or
jo
or
xchg
in
hlt
out
stos
jo
adc
and
or
je
mov
push
xchg
lret
pop
mov
sub
into
jne
insw
idivl
push
fs
test
jl
shl
inc
jmp
mov
push
stc
inc
cmpsb
jg
xlat
or
jg
jnp
incb
cmp
jle
dec
out
sbbl
or
imul
adc
cmp
mov
decb
and
mov
dec
in
and
jmp
pop
outsb
xor
sub
test
xlat
sub
cwtl
sub
jne
in
and
sarb
add
scas
jp
nop
test
test
movsl
and
movsl
fwait
sbb
or
les
fcmovnu
dec
cltd
or
mov
bound
xchg
pop
mov
cmp
jmp
sub
rclb
add
mov
jnp
jp
mov
mov
or
sub
orb
mov
lret
mov
jne
add
and
adc
cld
lahf
mov
lods
test
jne
scas
shl
sbb
sbb
movsb
roll
adc
jg
add
add
outsl
xchg
pop
jne
test
mov
cmp
inc
mov
loop
ljmp
pushf
shlb
push
inc
or
lea
xor
pop
mov
push
and
push
sbb
or
cld
sub
dec
and
mov
lret
and
sbb
pop
mov
jmp
inc
jno
pop
lds
outsb
xor
dec
loopne
ret
aaa
imul
cmp
sti
xor
mov
add
push
sti
test
out
jl
pop
fistpll
mov
addb
jg
mov
je
lea
fldt
mov
inc
ja
repnz
hlt
lea
cld
lock
dec
add
ss
mov
call
sub
mov
mov
das
test
lock
es
dec
or
cld
ret
in
gs
fs
inc
inc
mov
inc
mov
icebp
ja
push
xor
dec
inc
jne
or
add
lret
push
add
mov
mov
in
fsubrl
cmp
pop
sub
outsl
xchg
mov
sub
ljmp
orb
cmp
aam
lods
cmp
jnp
mov
aaa
or
outsl
add
dec
or
fnstenv
popl
sbb
aas
lea
dec
pop
mov
test
ds
pop
cmp
dec
adc
and
cmp
sbb
pushf
nop
ds
push
cmp
iret
or
test
add
sub
add
fwait
stos
fmull
icebp
out
out
leave
inc
xor
dec
fsubl
pop
or
lea
dec
mov
fcmovne
pop
aas
or
mov
pop
dec
pop
pop
pop
and
and
mov
pop
and
mov
and
bound
dec
test
popa
cmc
adc
xor
add
inc
pusha
pop
mov
jno
adc
ja
xchg
sti
loope
insl
ja
jge
sub
push
imul
movsb
mov
call
adc
jbe
sub
test
jne
sbb
and
imul
dec
inc
pop
jae
mov
mov
jns
jne
inc
push
xchg
dec
jbe
inc
xchg
xchg
ja
inc
test
loope
mov
add
pop
xchg
lods
xchg
in
pop
dec
dec
sbb
fs
punpcklwd
ucomiss
xchg
loop
cmp
jns
jns
in
jns
add
es
fadds
aam
test
add
lcall
mov
jg
popf
cmpb
mov
xchg
pop
adc
je
inc
cmp
jb
inc
xorb
adc
testl
jb
or
flds
lret
jbe
stos
jb
leave
lods
sub
sti
and
xor
mov
call
nop
jecxz
dec
scas
fwait
and
inc
jbe
icebp
movsb
inc
mov
hlt
sub
sar
pop
push
adc
or
and
clc
jmp
jmp
mov
movapd
push
adcb
cmp
push
test
in
add
and
imul
and
jae
mov
lcall
rcr
push
icebp
jne
jle
dec
je
dec
jne
pusha
jns
mov
cmc
jmp
divb
mov
xor
in
inc
dec
fwait
jbe
or
push
and
mov
std
adc
jnp
xor
pop
push
mov
addr16
dec
push
push
push
mov
hlt
orl
out
mov
sbb
pop
out
and
shrl
pop
mov
nop
mov
cmpsl
aas
int
fmul
mov
inc
inc
das
jno
jo
jmp
movl
or
mov
je
xor
inc
pop
cmpb
push
in
loopne
push
mov
test
mov
cmp
incl
fisttps
sub
je
insb
and
adc
pop
xchg
loopne
fistpl
inc
repz
inc
jmp
and
inc
ss
es
je
xor
mov
adc
dec
lret
insl
vpcmpeqd
jmp
or
loop
icebp
repnz
and
mov
aam
insb
shll
add
sub
je
pop
add
mov
inc
clc
aaa
or
push
and
sub
sbb
push
or
pop
out
je
push
lods
jp
es
mov
movl
inc
lret
dec
adc
mov
mov
mov
into
pop
psadbw
test
pop
mov
or
and
adc
inc
insb
mov
push
or
js
or
jg
sbb
test
hlt
dec
sbb
lcall
popa
cmpsl
stos
nop
popa
sarb
adc
cwtl
sbb
lds
rorl
insb
and
icebp
or
jl
int
adc
xchg
cld
cmpl
add
pop
mov
and
pop
jo
add
and
cmp
fisubrs
and
je
clc
add
or
mov
mov
lret
xorl
dec
jmp
ss
mov
out
adc
mov
push
insl
sbb
lock
cmp
lahf
sub
dec
inc
pop
push
jae
push
sbb
data16
push
xchg
das
rorl
inc
dec
xor
fwait
xchg
add
jge
movzbl
mov
mov
jne
rorb
ss
inc
mov
inc
or
inc
orl
push
movsb
adc
pop
aad
insb
cs
jle
xor
sbb
ss
add
or
ss
sarb
jb
andl
xchg
xor
mov
dec
les
ret
test
xchg
stos
ljmp
add
shl
aad
xchg
add
out
cltd
in
jmp
mov
test
or
mov
inc
lcall
ja
in
and
add
fs
into
mov
add
lea
adc
sub
push
add
mov
test
in
sti
shrl
nop
inc
inc
adc
adc
jbe
inc
inc
cmpb
aam
or
add
roll
xchg
js
mov
lea
out
fnstsw
pop
mov
inc
jns
dec
sbbl
or
call
fldcw
icebp
push
cmp
jmp
cli
std
ss
pop
or
dec
stos
add
or
mov
jge
push
xor
scas
dec
mov
adc
adc
push
ss
test
ret
jmp
enter
js
jne
inc
sbb
or
je
add
je
add
jmp
lock
mov
pop
sahf
cmp
or
push
insb
pop
xor
stos
mov
mov
pop
dec
mov
out
in
push
cmp
or
push
push
xor
sti
mov
inc
pop
inc
insb
hlt
jne
outsl
loop
repnz
push
lea
mov
outsb
push
mov
sbb
insb
mov
add
sub
inc
inc
mov
inc
pushl
inc
cli
andl
scas
xor
push
arpl
and
aaa
fwait
in
cmp
and
scas
fs
cld
push
pusha
daa
pop
pop
lret
jb
daa
xchg
test
mov
aad
loop
mov
sbb
adc
sbb
pop
sbb
lea
cmp
mov
test
and
pop
stos
push
cli
mov
enter
mov
outsl
dec
pop
ficomps
ja
and
and
loopne
mov
mov
loope
dec
std
or
cld
adc
inc
adc
mov
pop
add
popa
mov
sub
mov
rcrb
add
push
popf
loope
insb
sti
sub
adc
pop
mov
mov
mov
bound
pop
push
nop
jns
mov
xor
push
adc
add
dec
jo
or
push
aad
mov
loopne
adc
movb
jne
lock
mov
mov
inc
adc
js
push
iret
and
pop
jne
push
aam
mov
je
and
adc
mov
xchg
scas
inc
movsb
subb
daa
fnsave
pop
push
mov
cmp
insb
mov
jae
cs
sub
xor
insl
packuswb
push
mov
daa
movhps
pop
jge
jb
jne
cmp
sbb
imul
push
xorl
repz
or
pop
pop
ret
pusha
loop
pop
mov
test
sbb
sub
cwtl
sub
imulb
sbb
or
and
or
push
push
mov
add
adc
dec
sbb
push
cli
rcr
sbb
aad
fwait
jmp
sbb
test
mov
fnstenv
sahf
mov
imul
pop
and
push
iret
sub
jne
add
lea
outsl
lcall
pusha
dec
adc
dec
add
test
or
aam
push
xchg
push
jle
jno
pop
xchg
and
adc
add
mov
imul
adc
mov
adc
pop
mov
loop
insb
hlt
add
std
pop
or
mov
loopne
cmp
or
push
cwtl
and
shll
mov
mov
xor
push
add
fdivrs
sbbl
cmp
or
call
pop
pop
lds
test
dec
lock
inc
out
fbstp
add
jmp
movb
inc
inc
addr16
jmp
lret
sub
jmp
mov
or
inc
or
inc
in
pop
adc
pop
pop
inc
mov
inc
ds
pop
pop
test
pop
cmp
inc
jge
ret
insl
arpl
and
roll
sbb
ja
xchg
jb
je
adc
repz
push
in
lea
sub
inc
sub
or
lret
add
call
arpl
push
inc
add
lock
jmp
adc
repz
adc
push
mov
pusha
or
push
xor
cltd
and
and
out
add
mov
lret
daa
add
mov
aad
sbb
fs
sbb
inc
cmove
scas
push
mov
fsts
repnz
pop
jmp
adc
clc
sub
test
inc
outsl
inc
out
popl
call
cmp
xor
aam
xchg
cmp
jge
push
and
orb
sbb
xlat
cmp
adcl
sbbb
call
adc
pop
mov
neg
sbb
add
xchg
insl
and
push
xchg
in
jnp
out
or
dec
or
and
push
dec
testb
mov
orl
xchg
jne
push
or
pop
or
push
push
loop
popa
push
enter
and
and
or
sbb
mov
add
lds
in
mov
test
sbb
call
mov
rol
inc
and
mov
and
orb
lds
and
sub
ss
lea
scas
add
mov
and
cmp
pop
call
adc
imul
mov
cmp
aad
fdivl
arpl
popa
bound
hlt
dec
in
sbb
push
adc
movsl
adc
add
insl
or
or
data16
add
jg
fiaddl
or
or
enter
data16
mov
xchg
dec
xor
fmull
push
mov
je
push
fs
je
pop
stos
mov
add
shlb
sub
addb
stos
and
test
mov
fidivrl
or
je
fs
dec
ja
or
push
arpl
popf
sub
add
xor
cmp
pushf
rcr
or
movsb
push
mov
fcmovne
pop
push
push
movsl
or
into
clc
sbb
sbb
adc
ficoms
mov
fdivs
mov
xchg
push
xor
xchg
insl
dec
and
add
cwtl
sub
and
sub
loopne
in
cli
mov
jl
sbb
test
loop
push
int3
and
or
xchg
test
sbbl
fldcw
dec
loopne
pop
sbb
call
clc
dec
dec
push
dec
inc
cltd
or
int3
mov
iret
js
test
add
inc
push
fists
sarb
push
je
push
pop
test
or
imul
jmp
or
movsb
daa
ja
iret
mov
lods
sbb
rorl
jo
and
sbb
add
add
fmuls
shll
andb
idivb
inc
and
push
std
stc
jne
mov
cmc
imul
add
inc
pop
jge
lea
fcom
adc
stos
adc
inc
and
sub
or
testl
add
aad
cmp
jbe
ja
add
test
cmp
and
ret
es
int3
push
add
and
adc
and
pop
or
rcrl
jecxz
outsl
mov
mov
push
js
shrb
and
pop
and
dec
adc
test
clc
mov
data16
or
jmp
add
fists
popa
fisttps
xchg
xor
scas
sub
ret
pop
jae
cmp
ficomps
jmp
jge
aaa
push
int3
adc
paddsb
cwtl
push
fisubs
jb
sbb
nop
or
inc
fisttps
mov
aam
pop
xor
xchg
cs
jl
shl
add
and
mov
and
mov
sbb
addl
pop
push
movsl
dec
xor
lret
mov
mov
jb
sbb
mov
xchg
or
loopne
xor
or
inc
loope
fildll
jb
sbb
fildll
pop
push
mov
and
enter
sbb
sbb
and
in
inc
push
and
test
daa
mov
push
mov
add
flds
and
cmp
inc
inc
mov
add
mov
nop
lock
sbb
inc
sub
paddb
push
insb
pop
arpl
arpl
sbb
ret
notl
mov
cmp
push
repnz
ret
out
ret
xorb
add
lock
xchg
in
sbb
arpl
lret
add
inc
mov
xchg
push
adc
sbb
push
lret
xchg
int
cld
leave
in
mov
mov
daa
in
add
xor
shrl
and
inc
dec
shll
xchg
mov
lods
mov
lcall
dec
pop
jbe
lcall
into
scas
imul
subl
lcall
insb
js
lcall
movb
cmpsb
inc
xchg
mov
add
sub
outsb
mov
clc
pop
sbb
aaa
jge
mov
add
xbegin
pop
mov
add
sub
sbb
push
mov
or
pop
imul
outsb
mov
jecxz
add
cld
data16
jb
sbb
aaa
xchg
sbb
das
stc
sub
lahf
xor
pop
aaa
mov
mov
mov
mov
xor
push
pop
jb
jnp
imul
sub
gs
fwait
mov
cwtl
aaa
cs
sub
aaa
les
leave
sub
sbb
fwait
add
outsb
pop
rcrb
xchg
xor
push
cmp
inc
divb
jae
cmp
bound
and
je
popaw
imul
adc
adc
pop
cmp
inc
mov
xor
push
and
cmpsl
pop
mov
inc
mov
int3
pop
cmp
inc
pop
cmpb
and
jae
jb
outsb
and
outsl
and
fistpl
insl
cmp
add
mov
jb
cmp
cmp
jbe
insb
imul
jo
nop
fwait
outsb
jg
shll
aaa
sbb
xor
lret
insl
movsb
push
add
push
outsb
imul
outsb
and
arpl
xor
add
mov
dec
xchg
and
add
fucomi
ret
jne
sub
jb
jb
fwait
mov
dec
dec
push
push
adc
add
dec
inc
pop
jle
add
inc
adc
push
xor
mov
xor
or
insb
lock
popf
int3
jp
push
daa
aaa
mov
je
add
addr16
aaa
pusha
pop
ja
data16
mov
in
in
aaa
ss
fs
mov
xorl
jne
fldt
xor
or
sub
insl
or
pop
xor
sub
pop
fistpl
push
fsub
pop
fstp
pop
jbe
cmp
outsl
jo
pop
xor
dec
push
insb
fisttpl
fs
sub
or
outsb
lods
inc
and
gs
xchg
sbb
aaa
insl
jne
lods
je
and
shrb
sahf
and
das
mov
push
or
xor
mov
imul
and
add
or
popa
insl
and
ss
xchg
dec
adc
scas
shrl
sub
sub
inc
clc
test
addr16
jae
sub
xor
outsb
fiaddl
je
adc
dec
sub
pusha
cmp
push
imul
pop
jecxz
and
dec
imul
insb
jnp
int3
sub
adc
ret
cs
jecxz
ret
add
loopne
jne
ds
inc
insl
sti
or
push
pop
int
subps
cmp
std
jo
jno
ret
pop
or
aaa
cmp
ja
pop
sub
mov
data16
inc
push
dec
popa
stos
inc
mov
sbb
es
add
paddd
fs
jmp
jae
addr16
outsl
js
add
push
jecxz
mov
xor
mov
mov
es
or
andl
lcall
add
lahf
js
add
xor
adc
ret
pop
jo
xlat
pop
mov
dec
add
mov
or
test
lock
rcrb
inc
fsubrs
mov
mov
dec
iret
xor
rcll
add
or
aaa
xchg
inc
pop
inc
push
das
inc
testb
xor
jnp
or
jo
shlb
nop
jl
fadds
adc
add
call
adc
inc
mov
inc
push
adc
rorl
sbb
js,pn
mov
outsl
inc
mov
in
repnz
mov
lock
push
in
add
pop
and
inc
inc
mov
int
jge
jae
inc
test
mov
enter
aam
xchg
pop
or
and
loopnew
enter
dec
cs
clc
adc
in
cld
inc
or
xor
inc
adc
fstl
xchg
jo
enter
nop
mov
inc
js
mov
jl
insb
or
addr16
push
pop
push
and
dec
mov
jns
pusha
mov
scas
nop
daa
xor
xchg
test
xchg
push
xchg
shr
inc
clc
in
repnz
mov
enter
cmp
ds
repnz
and
inc
rcll
pop
and
mov
pushf
inc
pop
call
clc
or
int3
and
push
add
mov
push
daa
cmp
add
js
pushf
and
leave
orb
add
sbb
xor
aaa
add
mov
sahf
sbb
das
sbb
inc
sub
das
arpl
nop
add
inc
mov
fwait
mov
xchg
jo
cmp
fs
iret
pop
dec
pop
push
js
cwtl
sahf
orb
mov
cmp
add
lock
rorb
or
inc
add
and
push
out
pop
dec
push
push
aaa
add
cmp
sbb
or
xor
mov
ss
ss
pop
sbb
xor
pop
nop
dec
and
insb
mov
stc
ret
lock
mov
add
sbb
rorl
ror
jb
mov
cld
push
idiv
imul
xorb
lahf
daa
sbb
and
and
jb
fdivrl
inc
and
mov
push
loope
mov
andl
nop
pop
cmp
arpl
pop
seto
sbbb
cmp
pop
cmp
ret
daa
ret
test
ret
inc
and
mov
mov
mov
push
fs
xor
sbb
les
cmp
das
cmp
cmp
les
cmp
mov
fmul
mov
pop
inc
and
lret
and
dec
add
or
push
inc
push
dec
jo
subl
pop
cld
sbb
adc
adc
add
adc
insl
lcall
adc
dec
shll
sbb
insb
cltd
repz
cmpsb
pop
ss
and
cmpsb
mov
sti
cmp
jo
mov
mov
jl
inc
jbe
xchg
xchg
or
dec
cltd
ljmp
xor
hlt
xlat
fists
dec
inc
dec
inc
mov
push
dec
add
dec
dec
dec
inc
inc
push
aas
outsl
inc
dec
inc
inc
je
jo
das
das
ja
jne,pn
imul
arpl
das
arpl
je
mov
aas
sti
fildll
xor
xor
cmp
and
outsb
imul
mov
sub
inc
inc
push
imul
push
pop
dec
lock
insl
sti
inc
cmp
xchg
aaa
cs
outsl
sbb
pop
or
add
xchg
add
enter
inc
push
negl
popa
jae
inc
xchg
sub
pop
aas
and
outsl
ja
sbb
inc
inc
push
or
pop
je
popa
imul
add
aad
subb
pop
test
or
ds
push
mulb
inc
aas
cmp
cs
insb
gs
inc
aaa
inc
inc
dec
sbb
cmp
ss
inc
ss
idivl
push
fldcw
inc
add
sub
fs
mov
xor
mov
mov
xchg
mov
loope
iret
daa
lods
add
outsb
pop
je
sbb
and
pop
dec
outsl
arpl
int3
cltd
push
push
inc
pop
in
in
lods
nop
or
push
mov
outsl
jne
mov
leave
pop
es
daa
dec
or
or
outsl
pop
cmc
int
and
pop
pop
add
push
push
mov
pop
pusha
lret
and
add
lods
pusha
adc
xor
and
add
inc
xchg
cmp
add
xor
sub
dec
add
enter
test
adc
orb
orb
addb
jmp
push
hlt
cwtl
outsb
add
pop
cs
and
add
sbb
add
nop
add
nop
xchg
xchg
xchg
sub
cmpsb
sbb
add
or
or
add
mov
dec
aaa
inc
adc
fnstenv
adc
mov
imul
imul
mov
aam
sbb
js
cmpsb
imul
xchg
imul
fidivs
add
clc
add
ret
testl
add
dec
inc
mov
push
or
and
and
or
mov
sbb
push
sbb
cmp
xorps
adc
add
enter
pop
and
or
inc
push
xor
or
pop
push
pop
rorl
insb
pop
insl
stos
and
xorb
orl
pop
sbbb
dec
xor
and
ss
outsl
cmpsl
xor
pusha
xorl
jecxz
orl
pop
add
add
in
neg
add
cmpb
add
jle
mov
cld
movd
cmc
out
shll
pop
xchg
push
cmp
das
inc
nop
mov
mov
in
call
lahf
scas
jle
push
add
pop
pop
fisubrl
lret
pop
xor
rcr
fsubp
stc
xor
sub
add
pop
inc
and
push
jl
add
gs
mov
loop
add
gs
cltd
inc
or
push
mov
fisttps
push
jb
jbe
adc
outsl
lods
addr16
inc
push
xor
or
sub
pop
dec
inc
repnz
jo
push
or
in
std
inc
outsb
fs
fs
fcmovu
or
inc
or
fs
sub
sbb
dec
outsl
or
inc
dec
lods
inc
jns
sub
push
imul
in
ss
cmp
mov
xchg
sub
jo
fcoml
pop
loop
insl
out
insl
insl
pop
dec
outsb
and
jb
scas
push
mov
movb
jne
andb
je
push
outsb
ja
fs
popa
imul
add
inc
jb
push
fsubs
das
fldenv
pusha
jne
sbb
dec
pop
stos
mov
insb
in
or
loopne
mov
push
imul
mov
or
push
call
xor
mov
mov
sbb
divl
mov
sub
insl
fsubs
or
jae
popa
or
push
push
dec
inc
pop
pop
sub
inc
sbb
push
push
fnstcw
gs
andb
iret
or
inc
addr16
imul
jns
inc
adc
loop
lret
jb
jae,pt
pushf
popf
popa
push
xor
ljmp
jne
push
mov
add
and
dec
jno
xor
xor
pusha
push
pushf
push
das
arpl
xor
inc
or
dec
inc
dec
or
inc
fs
inc
mov
insl
jnp
inc
push
arpl
inc
pop
sbb
jnp
xchg
loopne
mov
and
insb
adc
push
jb
xor
mov
adc
or
inc
xor
add
dec
nop
or
es
lret
insb
incl
sidtl
add
and
sbb
inc
movsb
or
add
and
sahf
sbb
add
out
xchg
add
bound
inc
pusha
add
mov
adc
cmove
push
sti
mov
nop
nop
mov
pop
pusha
jb,pn
sti
lret
xchg
enter
add
pusha
negl
es
daa
dec
adc
fnop
daa
rolb
or
in
inc
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
