mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
push
fimull
sbb
lods
scas
mov
popa
and
cmpsb
in
int3
jg
fidivrl
stos
inc
jge
xchg
jg
std
enter
xor
adc
add
pextrw
sbb
cmp
std
cltd
cmp
inc
mov
orb
push
testl
shl
inc
pop
and
call
jmp
jge
ds
test
pop
pusha
adc
push
je,pn
unpckhps
push
addl
xchg
ja
adc
js
jne
jbe
fcomip
mov
cmpsl
in
and
mov
data16
jnp
subl
subl
xor
xchg
xchg
cmpsl
mov
mov
dec
push
cmp
dec
mov
mov
ret
imul
rcll
dec
xor
push
pop
out
call
popf
mov
inc
lods
ss
or
cltd
sahf
jg
mov
xchg
sub
fldt
inc
cmp
lock
and
fadd
jo
add
sub
test
ds
cld
sti
loope
stc
ds
outsl
and
dec
pop
mov
jb
enter
sbb
shll
sbbl
mov
addr16
cmp
rcrb
push
cmpsl
pop
dec
pusha
repz
shrb
inc
roll
sti
xor
xor
dec
test
mov
mov
push
popf
cmpsb
mov
mov
or
fmulp
dec
pusha
aaa
xchg
or
fsub
mov
faddp
mov
xchg
mov
shl
or
mov
js
fsub
lock
mov
loopne
loopne
sub
dec
mov
pushf
jo
insl
sub
or
sub
loopne
rorl
lahf
mov
push
pop
ljmp
xchg
or
xor
in
and
inc
inc
sub
divb
and
mov
jge
inc
jmp
cwtl
lock
jbe
in
cmp
push
mov
repnz
cmp
jmp
inc
bound
xchg
pop
sti
lahf
mov
repz
test
stos
ret
xchg
js
out
or
mov
push
jl
je
mov
rcrb
ss
add
or
cmpl
fisubl
inc
dec
mov
mov
mov
lds
lock
mov
popa
dec
mov
mov
lret
push
lods
pop
cmp
rcrb
mov
and
jp
je
xorb
lock
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
push
fimull
sbb
lods
scas
mov
popa
and
cmpsb
in
int3
jg
fidivrl
stos
inc
jge
xchg
jg
std
enter
xor
adc
add
pextrw
sbb
cmp
std
cltd
cmp
inc
mov
orb
push
testl
shl
inc
pop
and
call
jmp
jge
ds
test
pop
pusha
adc
push
je,pn
unpckhps
push
addl
xchg
ja
adc
js
jne
jbe
fcomip
mov
cmpsl
in
and
mov
data16
jnp
subl
subl
xor
xchg
xchg
cmpsl
mov
mov
dec
push
cmp
dec
mov
mov
ret
imul
rcll
dec
xor
push
pop
out
call
popf
mov
inc
lods
ss
or
cltd
sahf
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
push
fimull
sbb
lods
scas
mov
popa
and
cmpsb
in
int3
jg
fidivrl
stos
inc
jge
xchg
jg
std
enter
xor
adc
add
pextrw
sbb
cmp
std
cltd
cmp
inc
mov
orb
push
testl
shl
inc
pop
and
call
jmp
jge
ds
test
pop
pusha
adc
push
je,pn
unpckhps
push
addl
xchg
ja
adc
js
jne
jbe
fcomip
mov
cmpsl
in
and
mov
data16
jnp
subl
subl
xor
xchg
xchg
cmpsl
mov
mov
dec
push
cmp
dec
mov
mov
ret
imul
rcll
dec
xor
push
pop
out
call
popf
mov
inc
lods
ss
or
cltd
sahf
jg
mov
xchg
sub
fldt
inc
cmp
lock
and
fadd
jo
add
sub
test
ds
cld
sti
loope
stc
ds
outsl
and
dec
pop
mov
jb
enter
sbb
shll
sbbl
mov
addr16
cmp
rcrb
push
cmpsl
pop
dec
pusha
repz
shrb
inc
roll
sti
xor
xor
dec
test
mov
mov
push
popf
cmpsb
mov
mov
or
fmulp
dec
pusha
aaa
xchg
or
fsub
mov
faddp
mov
xchg
mov
shl
or
mov
js
fsub
lock
mov
loopne
loopne
sub
dec
mov
pushf
jo
insl
sub
or
sub
loopne
rorl
lahf
mov
push
pop
ljmp
xchg
or
xor
in
and
inc
inc
sub
divb
and
mov
jge
inc
jmp
cwtl
lock
jbe
in
cmp
push
mov
repnz
cmp
jmp
inc
bound
xchg
pop
sti
lahf
mov
repz
test
stos
ret
xchg
js
out
or
mov
push
jl
je
mov
rcrb
ss
add
or
cmpl
fisubl
inc
dec
mov
mov
mov
lds
lock
mov
popa
dec
mov
mov
lret
push
lods
pop
cmp
rcrb
mov
and
jp
je
xorb
lock
out
adc
mov
fstpl
mov
cs
imul
mov
movsb
mov
mov
test
popl
xchg
sbb
jne
andb
popf
nop
inc
adc
cmp
mov
leave
mov
bound
int
inc
test
outsb
jge
mov
dec
pop
call
aaa
dec
lcall
mov
negl
push
mov
scas
lret
rcrl
in
jl
cmp
push
xchg
lret
andb
jno
add
push
pop
out
dec
fcompl
pop
movsl
cs
dec
shrl
je
push
push
movsb
lea
ja
xor
lret
testl
jb
and
mov
sbb
arpl
pop
or
sub
sbb
or
scas
or
xor
lods
data16
es
popl
out
nop
repnz
iret
out
out
mov
rcrb
mov
out
cmpsb
sub
xchg
mov
std
inc
xorb
fisttpll
jmp
imul
push
fidivrs
jecxz
xlat
movsb
imul
dec
sbb
jne
xor
push
in
leave
std
xchg
xor
mov
or
adc
test
into
pop
or
ficoml
lods
push
fisttps
pop
stos
xchg
mov
sbb
in
jns
inc
clc
inc
mov
push
outsb
aam
xor
movsl
push
in
fidivrl
push
mov
sbb
mov
cmp
sahf
mov
push
xchg
mov
jge
mov
inc
in
mov
push
jge
fwait
add
lds
insb
ds
mov
cmpsl
loop
lcall
mov
mov
arpl
ljmp
mov
adc
xor
sar
pop
cmp
lds
sbb
inc
adc
pop
xor
push
lea
xchg
dec
jne
or
add
and
out
mov
lret
add
pop
into
adc
xchg
sub
sahf
pop
pusha
and
insb
push
in
ss
mov
aaa
dec
adcb
jo
fmull
imul
jecxz
cmp
movsb
in
int
jno
cmp
mov
inc
mov
lods
or
clc
popf
leave
push
ja
jb
pop
stos
jecxz
xorl
mov
in
aas
jle
jmp
sbb
xchg
cmpsl
in
rorl
inc
cmc
adc
lea
inc
jne
mov
int
test
xlat
add
aam
test
movsb
sbb
imul
pop
pop
cwtl
idiv
addl
filds
mov
sub
ds
inc
mov
pop
insl
or
xor
in
sbb
das
inc
push
lret
xor
mov
fs
push
enter
inc
out
cmpsl
rcll
lea
imul
mov
fisttps
mov
xchg
outsl
rorb
mov
or
dec
jg
outsb
imul
mov
push
adc
push
cs
mov
daa
nop
rcll
push
cmovg
rclb
mov
ror
fs
jb
xchg
loop
loop
stos
ljmp
test
inc
dec
xchg
mov
cmpsl
les
inc
pop
std
testb
hlt
std
aas
nop
lahf
outsl
loop
imull
mov
dec
out
mov
or
aam
fnstcw
push
sub
add
xchg
jmp
mov
jo
call
icebp
sub
sahf
sub
sub
pop
dec
jmp
push
int3
sbb
rcl
aaa
add
sbb
sti
xchg
add
push
fdivrl
or
pop
mov
jae
and
xchg
testl
adc
rorb
inc
leave
push
and
in
ret
es
cmpl
or
xor
or
mov
or
cltd
fimuls
pop
andb
adc
pop
rolb
imul
jo
outsl
lret
adc
addb
cmpsl
lret
or
stos
xor
lret
stos
std
in
sub
dec
call
xchg
or
pop
ret
das
call
daa
loopne
pop
mov
aas
pop
push
lahf
push
lret
movsb
mov
mov
mov
xlat
into
or
stc
sub
cmp
mov
cmpsl
cmp
mov
lret
fdivs
push
dec
in
push
cwtl
dec
jmp
addr16
sbb
pusha
add
outsl
xchg
inc
adc
out
push
dec
jbe
ja
repz
and
mov
cmp
xchg
add
inc
and
push
scas
mov
sbb
push
dec
pop
push
movsb
xor
jns
fiadds
hlt
nop
and
fiadds
lahf
cmp
inc
repnz
inc
and
aad
xor
and
xlat
jne
fbld
andb
repnz
sub
push
cmpsl
xor
xor
stos
push
repz
vxorps
xchg
sub
adc
push
or
dec
shll
push
push
jae
inc
and
lods
out
jge,pt
push
dec
mov
and
add
jnp
aaa
add
out
fldl
ljmp
fcoms
test
divl
xor
loopne
sbb
push
movsl
sub
sbb
pop
mov
push
mov
jbe
shrl
scas
or
sub
ljmp
call
sbb
lret
jns
xchg
nop
mov
shll
rorb
pop
vpaddq
jp
push
loopne
loopne
jg
cltd
shll
cmp
outsl
mov
pop
popa
adc
mov
cwtl
mov
xor
inc
fldcw
inc
mov
push
lcall
fcoms
sub
cmp
out
fbld
bnd
cmp
pusha
lock
out
xor
ficoms
adc
jg
je
arpl
rorb
mov
sub
mov
sbb
mov
insb
push
shll
push
adc
fstpt
call
loop
test
mov
jns
out
mov
push
pop
shr
and
lods
ret
dec
mov
dec
negl
mov
mov
push
inc
gs
and
inc
push
cmp
hlt
xor
in
jecxz
idivl
jge
jl
xor
mov
xor
add
xor
stos
dec
fnstsw
cli
lock
xor
fst
ss
ljmp
jmp
fs
popa
inc
sbb
icebp
jns
jle
int3
ret
js
rorb
mov
cwtl
push
js
push
data16
sahf
out
inc
les
gs
ds
enter
mov
or
mov
sbb
xchg
iret
push
dec
cltd
cmc
fs
pop
mov
mov
int
ljmp
aaa
sbb
dec
fsts
mov
cmpsb
decl
push
mov
inc
insb
shrb
add
sub
xor
pop
cmp
mov
adc
dec
hlt
out
shrb
cs
cmp
and
jns
mov
in
cmpb
xor
repnz
fsubrs
cmp
imul
mov
movl
mov
jge
jmp
lcall
mov
dec
scas
sub
les
adc
mov
sub
shr
and
out
mov
aad
leave
sbb
push
or
icebp
repnz
cmp
adc
aaa
inc
imul
and
sbbl
cmp
push
or
aam
sub
shrl
sarb
xchg
mov
stos
ds
cltd
lret
bound
sahf
lcall
push
scas
ficoml
fwait
mov
xchg
out
push
and
mov
mov
push
sahf
push
aad
cli
insb
je
addr16
pop
jmp
les
cltd
hlt
mulb
mov
cmpsl
mov
push
mov
jae
test
and
in
and
add
push
aas
mov
fdivrs
mov
jecxz
into
fidivs
sub
or
jno
insb
fisubs
jb
add
inc
and
pop
inc
movsb
sbb
pop
xchg
dec
xchg
mov
fnstsw
and
out
dec
pop
xchg
push
ds
fmull
mov
leave
das
xchg
icebp
adc
test
sti
ret
icebp
mov
sub
imul
lods
scas
or
mov
scas
mov
jbe
sub
int3
ja
xchg
js
in
flds
cli
mov
cmp
ja
push
mov
lret
lret
inc
push
out
pusha
pushf
jge
orb
gs
mov
mov
orb
cld
int
mov
icebp
mov
xchg
lods
dec
out
jne
mov
scas
pop
mov
cmc
cli
mov
sbb
adc
and
testl
imul
scas
jecxz
mov
cltd
leave
mov
leave
rcr
arpl
push
fcoms
dec
test
cltd
shlb
adc
sti
test
cmp
cli
bound
movsb
sub
dec
mov
adc
leave
ja
data16
cmc
mov
cmp
hlt
mov
aas
mov
mov
outsl
adc
push
fwait
stc
hlt
xchg
cmp
push
das
out
inc
fwait
in
daa
shlb
testb
jmp
inc
lahf
xchg
xchg
fisubl
jmp
xchg
in
xchg
repnz
inc
movb
push
sbb
lret
jge
fnstsw
jae
xor
lock
xchg
aam
push
sub
jnp
inc
sub
leave
int
stos
or
dec
add
lds
pop
and
add
add
ds
or
lock
pop
adc
daa
fistps
pushf
aad
mov
pop
mov
insl
adc
rcrb
mov
test
mov
adc
in
sub
mov
repz
pop
xor
and
mov
loope
addr16
sahf
mov
repz
sub
dec
dec
fistps
add
pop
dec
push
dec
cmp
adc
inc
movsb
sub
mov
cs
gs
sbb
orb
repnz
out
mov
pop
xor
rol
test
push
pop
faddl
jbe
xchg
shlb
xchg
adc
ret
or
test
cltd
fistpll
scas
lret
inc
in
out
mov
insb
xchg
inc
fdivr
mov
scas
mov
outsb
dec
mov
fwait
sbb
mov
sbb
sti
push
lods
mov
cmp
scas
leave
scas
insl
cmp
mov
jno
lret
dec
jecxz
lods
dec
and
imull
and
cmp
clc
push
mov
sbb
imul
cmp
fmuls
jns
cmp
sbb
sub
xchg
add
pop
imulb
mov
pop
shrl
cmp
daa
inc
cmp
sbb
addr16
int3
bound
shl
je
add
sub
and
fstl
mov
out
cs
es
xorb
imul
sub
out
add
xchg
mov
dec
sbb
lret
and
mov
mov
dec
daa
add
cld
push
jmp
cmp
lea
or
fucomp
pop
dec
dec
fisubrl
test
and
loop
ss
mov
lcall
push
mov
in
hlt
aad
cwtl
dec
ss
inc
icebp
cmp
sub
leave
lahf
mov
dec
pop
rcll
pusha
mov
stos
lret
loopne
aas
inc
fnstenv
outsb
sub
cmpsb
lcall
pop
add
icebp
or
push
jmp
inc
jl
cli
dec
xchg
adcl
cmp
repnz
mov
mov
mov
inc
push
adc
imul
jl
inc
pop
or
sarl
pop
dec
inc
add
sbb
nop
movsl
mov
ret
push
jle
lods
gs
jmp
and
ret
pop
pop
inc
sub
loopne
pusha
xor
cmpb
mov
leave
ds
mov
dec
inc
push
insb
add
js
xchg
aaa
add
ljmp
pop
dec
jne
jge
and
jmp
fnstenv
aam
sbb
and
enter
outsl
or
pop
ret
dec
adc
test
lcall
push
cwtl
test
inc
imul
out
adc
cmp
jo
jno
insl
sub
scas
mov
xor
push
pop
ja
lcall
mov
leave
jecxz
mov
jmp
push
stos
fidivrl
pusha
adc
fwait
mov
pop
push
sbb
popl
aas
ror
fucom
loop
xor
unpckhps
xchg
sub
in
fbld
jl
jle
nop
fnsave
cmpsb
fisttpll
cli
mov
push
sti
mov
sbb
dec
mov
push
jmp
push
add
adc
mov
jbe
inc
ja
inc
jle
jnp
loope
push
mov
dec
repnz
xor
test
mov
sub
and
sub
cli
mov
jne
add
push
sbb
and
push
lret
jge
xor
scas
jo
enter
mov
jbe
xor
mov
sbb
pop
scas
call
add
adcl
jnp
ret
into
jmp
mov
cmpsb
in
lods
xor
inc
cmp
cwtl
sbb
mov
dec
xchg
lret
sbb
iret
pop
je
mov
out
xchg
stc
and
jge
push
add
xchg
cmp
jne
inc
cmp
cwtl
xchg
inc
jo
hlt
mov
or
jo
in
push
pop
mov
arpl
jl
ja
dec
push
sub
mov
xchg
jecxz
pop
sub
mov
push
cli
sbb
or
push
aad
out
sub
aad
mov
in
mov
sbb
data16
inc
repnz
pop
aaa
dec
jns
insb
pop
mov
mov
pop
lret
fstp
jecxz,pt
push
push
fidivl
mov
aas
subl
lock
inc
test
lret
repnz
scas
add
add
shl
addr16
pop
daa
adc
lret
jmp
in
aam
xchg
jecxz
ss
and
cmp
fwait
cmp
add
inc
bound
xchg
in
cmp
repz
fists
into
iret
cmp
mov
xchg
and
mov
andl
lock
daa
je
xor
jns
pop
aam
jle
add
xchg
or
pushf
lods
outsb
jl
fsubrl
jecxz
testb
mov
fwait
pop
or
or
sarb
push
add
xchg
pop
xchg
adc
xchg
inc
pusha
xchg
sub
pop
pop
into
neg
stos
cwtl
mov
fdivrl
xchg
and
xchg
test
and
insl
ret
jns
sbb
daa
mov
repnz
mov
mov
pop
pop
inc
add
mov
fimuls
loopne
loop
cmpsb
jno
sub
shl
sti
and
add
jae
or
xchg
xchg
punpckhwd
enter
lret
test
insb
es
and
xor
push
loopne
xlat
push
subb
push
arpl
sub
out
jl
mov
or
iret
xchg
xor
dec
popf
out
mov
and
mov
mull
lret
cmc
les
popf
ss
scas
call
ret
sbb
fst
fcompl
adc
inc
mov
mov
and
loop
xchg
xchg
dec
sub
jl
mov
xor
xor
movsl
mov
es
or
pop
sbb
in
leave
out
ficompl
mov
add
pop
imul
sbb
inc
xchg
cmp
ljmp
jne
bnd
lret
repnz
adc
push
mov
out
pop
mov
xchg
jl
lds
jge
xchg
enter
xor
lret
insb
shrl
insb
xor
dec
in
fbld
cmp
popf
dec
cmpsl
outsl
mov
mov
ficompl
scas
or
xchg
hlt
xchg
push
out
insl
mov
lds
cmp
lock
jbe
and
insl
rorl
xor
jge
adc
xchg
loope
pop
test
xchg
pushf
in
test
dec
mov
xchg
or
add
jbe
dec
lret
nop
xor
add
rcr
jns
out
popf
pop
leave
scas
jp
test
clc
les
push
insb
mov
adc
dec
mov
pop
dec
jae
fidivl
and
test
adcb
stos
ljmp
in
jo
mov
pop
or
mov
or
in
mov
inc
jno
add
sahf
or
es
mov
popa
cmp
xor
pop
mov
pop
icebp
or
ret
pusha
stos
sbb
add
pop
loopne
popf
pop
jo
pushl
or
call
cwtl
add
pop
bound
loope
scas
push
fcmovne
cmp
pop
push
cmc
jns
push
scas
jp
inc
in
in
scas
out
mov
addr16
fcoml
xor
mov
sahf
loop
mov
pop
sahf
jbe
xchg
enter
mov
stc
mov
test
adc
push
push
stos
jg
xchg
push
mov
je
out
popa
out
popa
add
fstpt
sarl
dec
pop
and
sub
add
das
sub
arpl
mov
jae
pop
divl
or
xchg
popf
inc
jmp
xor
mov
loop
daa
dec
negl
cltd
rorl
sub
aam
xchg
addr16
cmp
outsb
stos
loopne
js
sbb
hlt
cmpsl
jmp
pop
adc
inc
aam
adc
pop
icebp
or
dec
pop
jge
mov
les
ret
xchg
popaw
sub
gs
push
test
ljmp
stc
mov
loop
enter
pop
or
or
add
int3
jbe
sbb
jo
mov
enter
mov
jg
cmpl
cmp
sub
sub
or
scas
leave
aas
hlt
xlat
dec
dec
outsb
xlat
lret
in
xchg
cld
leave
xchg
fdivl
aad
push
or
fsub
adc
fldenv
mov
mov
mov
flds
mov
jbe
sub
daa
and
sub
or
shrb
data16
loopne,pn
lds
dec
push
xlat
loopne
jge,pt
jne,pn
loop
mov
aam
sahf
ljmp
adc
lret
xor
daa
aad
test
insl
mov
and
aas
adc
into
mov
ret
xlat
or
repz
cmp
mov
xor
clc
int
dec
mov
and
fdivs
adc
int
test
dec
cs
movlps
scas
fldt
cli
push
fcmove
pop
ljmp
mov
nop
jmp
sbb
jg
or
cmpsl
in
aam
mov
cmp
sbb
aas
and
inc
push
movsl
xor
sbb
sbb
or
cmc
dec
xor
into
out
fisttpl
sbb
cmp
sub
movsl
push
pop
push
testb
cmp
xchg
loop
daa
and
jg
or
dec
push
and
sbb
imul
inc
add
fbld
es
sub
pop
loop
pushf
cmpsb
sub
loopne
out
pop
hlt
movsl
loop
lret
jne
mov
sub
jp
dec
sbb
filds
mov
out
ret
mov
dec
aam
adc
mov
test
push
push
das
fwait
inc
jmp
mov
orl
cmp
iret
sub
xor
shrb
bound
xchg
pop
pusha
cmp
rorl
shlb
lcall
fisttpll
ljmp
lret
daa
cmpsb
inc
mov
leave
les
jle
lock
mov
jle
cmp
sub
lret
inc
call
sbb
testl
les
push
stos
jp
pop
ret
lea
push
xchg
and
iret
mov
xor
or
mov
mov
lret
cwtl
push
cmp
pop
ds
pop
mov
imul
mov
iret
in
and
mov
lds
imulb
clc
imul
cs
cmp
mov
jg
cld
mov
dec
dec
ds
push
or
out
dec
or
or
xchg
sub
or
mov
push
icebp
jns
pop
cmp
dec
shlb
popf
pop
sub
mov
shr
sbb
cmpsl
jg
aaa
push
jbe
lods
mov
fucomi
scas
or
jnp
mov
dec
js
sbb
lea
xchg
inc
iret
lcall
jle
jg
xor
testl
and
xchg
out
xchg
aad
aas
bound
jno
pop
adc
xchg
inc
aam
test
xor
in
jg
xor
xor
test
pop
push
clc
xor
mov
mov
cmc
test
mov
sub
jns
je
pop
cmp
leave
gs
or
int
jnp
sub
hlt
jo
sbb
or
and
sbb
in
mov
or
adc
in
int3
dec
lret
jge
inc
jg
pop
mov
push
mov
mov
push
popa
xlat
dec
enter
push
and
pop
repnz
in
jne
mov
rcrb
repz
shlb
push
mov
out
cmp
cld
int
hlt
bnd
fstl
out
jne
mov
mov
jge
or
insl
loope
sub
mov
outsb
pop
sub
adc
sbb
dec
addr16
insl
lcall
lahf
rcrl
push
cmp
pushf
out
inc
mov
add
pop
or
jnp
pop
imul
jno
aam
or
imul
push
inc
mov
inc
addr16
imul
imul
rcll
repz
jmp
mov
scas
fmul
dec
pop
aaa
adc
cld
fs
call
or
mov
int
movsb
pop
lods
addr16
push
bnd
fildl
sub
dec
dec
hlt
inc
cmp
push
ret
bound
cmp
xchg
push
xor
mov
outsl
lds
movsb
dec
sub
mov
stos
xor
in
inc
sbb
xor
shlb
sbb
ret
faddp
cwtl
std
mov
scas
ss
insl
add
xlat
push
mov
mov
je
add
lcall
pop
iret
or
aam
popa
jns
lcall
clc
sub
cmpsl
mov
cltd
inc
or
cmpsl
or
cmc
dec
push
test
xor
jb
arpl
test
imul
pop
adc
cld
dec
inc
dec
inc
add
in
iret
icebp
data16
jmp
dec
sahf
scas
pop
inc
and
cmp
sti
mov
ret
arpl
rcll
bound
sbb
cmp
cmc
dec
dec
inc
cwtl
rcrl
xchg
cltd
in
jge
enter
outsb
icebp
cmpsb
cld
inc
cmp
fs
cmpsb
ds
xorb
cwtl
xchg
or
jbe
into
dec
jmp
sbb
fcoml
stos
out
sarb
fldcw
cmp
xor
and
jne
shrb
mov
sub
movsl
cwtl
cmpsb
inc
pop
bound
cld
movb
test
fistpl
adc
fadds
xor
mov
mov
scas
mov
jp
cmp
je
shlb
leave
pop
dec
addl
nop
cmpl
lret
lret
dec
loop
sub
sub
mov
push
xchg
mov
andl
inc
add
dec
cmp
pop
jecxz
rol
push
repz
repz
les
cmpsb
mov
sub
adc
loop
push
arpl
pusha
sarb
mov
sbbb
jmp
jle
nop
sub
ja
push
cmp
outsl
sbb
xor
addb
cmp
sti
into
adc
int3
cmp
insl
dec
imul
movsl
jo
shrb
jecxz
mov
dec
popl
jne
xor
sbb
shl
adc
scas
aaa
lret
subb
test
cmpsb
sbb
mov
roll
das
mov
adc
push
inc
cmp
jp
inc
cwtl
sbb
rol
jge
cmp
pop
add
aas
lahf
mov
repnz
fisubl
push
pop
fdivl
int3
push
jp
ds
ret
hlt
outsb
push
dec
push
lahf
mov
xchg
pop
fnsave
dec
outsl
cwtl
mov
pop
sbb
mov
int
xor
xchg
pop
pop
mov
arpl
dec
cmpsl
jp
adc
fisubs
and
sti
or
xor
ficoml
test
or
lods
add
pop
add
cltd
push
pop
enter
lds
mov
addr16
repnz
inc
ret
mov
cmp
ficomps
test
lock
mov
dec
ret
rcll
les
imul
pusha
repnz
scas
or
inc
repz
dec
lea
pop
mov
out
shr
or
or
inc
jp
mov
cwtl
iret
jo
movsl
cmpsl
add
ja
stc
cmp
sbb
sarb
push
mov
cmp
inc
sub
sarl
pop
xchg
fdivl
das
jnp
cmp
js
inc
out
pop
jmp
cli
aaa
jg
cmp
jg
mov
sub
sub
xor
ret
stos
jge
pop
outsl
dec
je
jbe
outsb
sbb
push
roll
int
lret
jbe
ss
dec
adc
aad
flds
push
pop
out
mov
pop
cli
int3
scas
imul
add
xchg
pop
test
pop
and
add
jbe
hlt
dec
mov
xor
and
or
or
adc
push
bound
jnp
mov
repnz
ret
pop
js
loopne
insl
das
push
mov
dec
ffreep
ljmp
inc
push
mov
push
jb
mov
in
xchg
rclb
push
xor
int
imul
repz
jb
sbb
mov
sti
mov
push
sbb
cld
jnp
pushf
inc
lods
pop
pop
mov
pop
mov
mov
add
push
mov
stos
pop
sbb
scas
xor
adc
pop
mov
fdivs
mov
shlb
pop
pusha
cs
xchg
push
in
insl
or
nop
aaa
cwtl
cltd
das
lcall
adcl
jne
rorl
popa
lock
sub
in
sbb
push
sbb
mov
lcall
aas
sti
outsb
dec
xchg
or
xchg
pop
mov
mov
cld
mov
das
rorb
mov
popf
xor
adc
mov
fcompl
cmp
push
jecxz
sarl
add
xchg
lds
data16
xchg
push
inc
loope
outsb
push
je
repnz
lcall
xor
pop
or
pop
and
sbb
rol
pop
jg
scas
push
add
and
pop
dec
fwait
mov
push
in
cmp
std
mov
mov
push
out
sahf
jb
or
xor
jb
and
outsl
xchg
jno
and
xchg
inc
ret
xor
aad
add
dec
and
push
pop
mov
cmp
xor
xchg
mov
int3
loopne
xor
jl
jl
push
mov
hlt
xchg
sbb
aas
addr16
lods
cmpsb
adc
add
xor
xlat
scas
popa
jecxz
pop
cltd
loope
jp
jb
xor
pusha
repnz
fcompl
sub
mov
xchg
pop
fidivrl
xor
loop
pop
adc
cmp
in
mov
pop
aas
jmp
cli
mov
xor
xchg
jne
stos
inc
dec
and
cld
xchg
repz
popf
or
ss
sub
arpl
cs
sbb
cmpsb
inc
or
pusha
scas
mov
inc
pop
add
das
add
mov
ss
aas
aaa
jb
pop
pushf
or
push
sbb
pop
or
jecxz
push
mov
jns
int
mov
mov
xchg
arpl
xchg
mov
cmp
sub
push
sub
scas
das
pushf
or
sub
cmp
mov
xchg
lods
dec
mov
call
jno
cli
fcmovu
dec
push
es
pop
inc
mov
adc
mov
mov
xlat
mov
int3
fsub
xchg
mov
lahf
jb
iret
popf
cld
jmp
mov
or
test
inc
rorl
pop
mov
pushf
mov
xchg
or
push
mov
sahf
bound
ljmp
sub
push
lahf
loopne
les
cmp
sbb
mov
or
icebp
cmp
mov
ja
mov
sahf
sbb
les
in
cld
fildl
cmp
or
movsl
lods
inc
fsubrp
outsl
lahf
dec
jecxz
ret
shr
pop
subb
out
xchg
push
test
in
cwtl
mov
jo
fdivrs
lods
dec
cs
mov
loope
sbb
lcall
js
mov
pop
int
cwtl
mov
or
fsubp
roll
dec
and
test
jae
cmp
lret
cmp
jecxz
fsubp
popa
in
cmp
insb
adc
cmpsl
iret
inc
sar
mov
jbe
xchg
sahf
test
lds
mov
ss
test
ds
cmpsl
xor
out
xchg
and
push
dec
adc
jmp
jnp
adc
loope
mov
pop
jno
dec
and
arpl
bound
cmp
test
or
jmp
cmp
out
cs
out
xchg
jmp
mov
fwait
mov
lret
xchg
dec
pushf
push
outsl
jle
stc
jle
std
and
sbb
jg
pop
outsl
js
lock
cmp
push
lock
jno
fnsave
mull
adc
dec
mov
add
out
sub
mov
leave
add
lcall
imul
test
fadd
call
cmp
fists
inc
cmc
adc
daa
bound
cmp
push
in
jo
inc
or
lahf
cmp
scas
call
shlb
mov
mov
xchg
sbb
adc
mov
or
negl
lds
mov
outsl
push
sbb
nop
sahf
cmc
mov
test
mov
cld
shll
adc
mov
mov
popa
adc
outsb
test
add
call
mov
mov
cli
xchg
pop
xor
lds
xchg
jno
pop
lret
out
outsl
and
jg
stos
xor
push
lods
mov
nop
push
jecxz
cmp
int3
jns
dec
loope
icebp
inc
decl
xchg
arpl
lea
orl
jnp
bound
and
loopne
out
inc
mov
packsswb
pop
dec
push
dec
stc
daa
data16
or
leave
jmp
or
or
dec
xlat
mov
loope
mov
xchg
sti
jp
je
sbb
loope
or
ret
int3
sahf
mov
adc
pop
call
outsl
sub
pop
push
scas
es
scas
fbld
cltd
mov
out
jmp
test
jmp
leave
test
xlat
and
mov
jmp
test
jbe
dec
pop
cmp
cmc
lea
jp
cmp
clc
pop
mov
inc
sbb
mov
mov
or
xor
sub
jp
mov
out
mov
imul
testb
inc
add
test
push
xorl
bound
push
and
mov
cmp
mov
insl
dec
sbb
fsqrt
int3
testl
dec
int
fnstenv
hlt
mov
fwait
out
pop
insl
xchg
add
pop
sbb
add
out
jmp
pop
xor
cwtl
and
adc
insl
lret
push
inc
xor
movsb
imul
in
inc
fs
arpl
sub
push
xchg
hlt
movsb
ret
pop
adc
pop
mov
cmpsl
mov
fnsave
mov
xchg
mov
arpl
sub
fildl
popf
fs
mov
sbb
xchg
scas
add
loopne
adc
in
pop
cwtl
cmp
dec
aam
push
mov
mov
and
xor
push
es
cmp
rcrb
mov
mov
sbb
fisubl
fildl
mov
test
mov
cld
repz
fsincos
or
mov
movups
in
stos
adc
push
insl
dec
xor
cld
or
or
incl
mov
pop
inc
pop
mov
inc
popf
cmp
pop
leave
clc
ja
icebp
popa
mov
mov
enter
sub
and
loopne
sti
inc
jbe
mov
es
outsb
les
mul
sbb
daa
push
jo
cld
mov
or
pop
xchg
sub
das
imul
testb
jmp
or
addr16
mov
iret
imul
sub
data16
outsb
pop
push
ficomps
xor
lret
pop
ficoml
dec
andl
out
sub
in
sbb
inc
push
rolb
ljmp
mov
push
fsubl
jb
stos
aad
shll
aas
lds
dec
out
cs
lock
mov
and
popl
jg
or
mov
lahf
out
sarb
push
pop
add
adc
push
inc
movsl
movsb
cmpsb
push
icebp
adc
js
addr16
jge
cltd
sti
insb
dec
xlat
pop
flds
daa
in
add
icebp
jbe
jecxz
push
mov
nop
popf
test
mov
sbb
sub
out
ret
gs
arpl
xchg
or
fistl
icebp
adc
test
sbb
test
xchg
sub
enter
scas
push
mov
inc
inc
pop
xor
jmp
and
jle
push
das
jmp
jo
mov
mov
mov
xor
daa
cmp
ja
rorb
ss
add
ret
jae
popf
jb
test
jbe
aaa
in
sub
repnz
call
mov
sub
pusha
frstor
jb
or
inc
pop
jnp
xchg
xchg
lret
lea
dec
test
cmp
shl
sbb
lret
cmp
movsl
les
loop
nop
dec
xor
loope
leave
cmp
sub
testb
ret
imul
and
popa
test
lock
daa
cmp
aaa
movsl
jbe
or
movsl
hlt
aad
add
into
imul
sub
xor
nop
and
mov
in
lock
lock
mov
adc
repz
sarb
loop
adc
jp
fsub
movb
pushf
push
ds
cmpl
push
add
inc
xlat
aas
cmp
sbb
ds
fld
nop
popa
xor
pop
jg
aam
in
jno
xor
add
pop
ret
xchg
sub
xchg
mov
inc
and
cli
sbb
test
in
xor
cmp
jno
sub
cmpsl
ret
mov
inc
mov
and
fidivrs
adcb
add
cmc
inc
ret
insl
pop
stos
test
fnstcw
icebp
push
movsl
adc
ror
pextrw
sbb
inc
and
inc
sub
jecxz
loop
jge
push
out
inc
mov
rclb
mov
add
cli
shl
cld
mov
lcall
stc
cmpl
les
xor
lahf
push
scas
lds
and
aam
cmp
xor
sar
mov
xchg
sub
pop
clc
dec
popa
sbb
hlt
inc
andl
pop
and
jmp
jae
in
add
xchg
fists
push
hlt
in
pop
test
test
test
inc
jns
mov
jle
mov
mov
mov
jmp
mov
sbb
and
adc
mov
pop
cmp
inc
sti
gs
mov
shl
in
std
lods
imul
pop
icebp
sub
shrl
addb
mov
and
lcall
inc
lods
jmp
inc
fcmovbe
cmp
jcxz
scas
aaa
push
andl
sub
into
mov
adc
cmp
cmp
je
es
or
lcall
scas
lock
adc
inc
sahf
inc
sbb
inc
lock
fcoms
jp
mov
mov
cmp
cld
pop
inc
iret
fwait
sbb
jl
js
push
push
sti
xor
and
dec
xchg
popf
push
dec
fisubrs
add
jp
iret
and
and
xorb
mov
out
pop
sub
rcrl
rclb
cmc
int
add
push
push
lods
icebp
popf
pop
fdivrl
mov
in
mov
push
lods
inc
jl
mov
dec
unpckhps
sar
mov
sbb
in
aam
icebp
loopne
add
add
and
outsb
cmp
int3
loop
cmpsl
loop
xor
mov
movsl
sbb
pop
cmp
insb
push
das
add
xor
popa
leave
in
xchg
mov
ret
stos
jp
adc
stc
xor
push
and
loopne
data16
and
pop
mov
cwtl
xor
scas
inc
aad
hlt
sub
out
shrl
adc
push
pop
out
iret
mov
add
repnz
loopne
jg
xor
insl
clc
inc
mov
xchg
dec
inc
rcr
andl
cmp
shlb
sbb
int3
test
mov
les
pop
mov
xor
out
jb
mov
inc
push
movsl
jo
jnp
and
xchg
dec
sub
mov
in
lret
sbb
sti
lock
xchg
mov
iret
cmp
jle
jle
stc
mov
incl
mov
es
lcall
inc
mov
mov
int3
jbe
xor
jae
pop
add
in
sbb
mov
jbe
lahf
mov
hlt
jns
xor
popf
cmp
add
and
sub
fcom
or
and
or
cmp
mov
shll
shrb
sahf
lret
addr16
xor
adc
lahf
add
inc
rcrl
jg
and
mov
fsubr
inc
das
jge
dec
cmp
jg
mov
nop
jl
sub
mov
mov
fs
imul
and
and
inc
fldcw
inc
cmp
mov
cmp
inc
imul
mov
fistpl
clc
mov
adc
mov
pop
loope
mov
out
outsl
das
stc
adc
and
sbb
or
repnz
sub
sti
hlt
add
scas
stos
xor
push
mov
mov
out
int
jne
shll
lock
enter
jg
fidivl
xchg
nop
jb
andl
data16
rolb
inc
add
pop
pusha
push
stc
cmpsl
inc
or
ror
popa
xchg
shrb
dec
push
add
cltd
adc
sbb
sahf
pop
add
inc
mov
pop
out
mov
call
pop
js
mov
jge
loope
push
shr
jae
fcoms
icebp
shlb
mov
mov
out
imul
push
je
sbb
and
mov
xchg
push
pop
mov
dec
loopne
push
and
shrb
out
outsl
mov
mov
pusha
sbb
insb
cmpsb
shrb
sbb
mov
push
jae
lret
out
icebp
addr16
mov
rorb
or
add
ljmp
jge
or
push
in
lcall
inc
or
clc
enter
mov
cli
jg
push
xor
popa
sar
push
mov
push
sarl
fucom
or
push
jecxz
jo
pop
sbb
mov
lea
push
adc
sahf
inc
mov
jg
dec
pop
int
das
add
cmp
fiadds
xchg
popa
xor
and
dec
pop
int
mov
mov
adc
ja
int3
pop
inc
jno
dec
out
pop
dec
sbb
push
dec
prefetch
or
imul
iret
jnp
roll
mov
inc
jg
movsl
adc
addr16
push
xchg
or
cmp
add
movsb
push
mov
call
ret
enter
js
pop
jb
sub
push
in
test
mov
jmp
adc
stc
call
icebp
je
or
lds
repnz
nop
andl
mov
adc
xchg
ret
mov
fldt
xlat
jp
data16
loope
shll
jl
mov
imul
gs
repz
inc
movsl
jb
notb
fwait
repz
add
in
adc
mov
push
sbb
stos
inc
mov
xlat
mov
cli
inc
inc
jb
dec
push
jg
mov
inc
lea
mov
xor
pop
mov
sbbb
inc
jo
xor
push
testl
call
jb
inc
ds
sar
or
loope
ucomiss
xlat
outsl
mov
adc
out
test
aad
movsb
out
movl
je
lahf
jl
scas
fs
dec
loop
sub
in
cmpsl
lods
mov
sbb
pop
xor
add
xchg
cmp
fiadds
push
push
and
popf
dec
and
inc
pop
jge
cltd
pop
mov
loopne
nop
push
js
mov
outsl
and
iret
not
xchg
jne
fistpll
filds
pop
enter
mov
iret
fcmovne
ror
gs
mov
xor
movsb
ret
jl
mov
fidivl
enter
mov
pop
jbe
push
loope
lods
push
lcall
insb
scas
or
cwtl
jns
dec
lock
ljmp
nop
mov
mov
mov
push
cmc
cmp
insl
pushf
lock
ret
sbb
pop
inc
adc
cmpsb
jmp
push
mov
adc
mov
xchg
xchg
lret
insb
add
sub
dec
jl
push
adc
out
mov
shlb
lock
jg
or
idivl
in
mov
add
ljmp
or
and
ljmp
ret
stos
les
mov
and
inc
inc
out
lret
sub
inc
movsb
mov
mov
testb
in
dec
shrb
add
mov
pop
sbb
out
ficoml
inc
dec
xchg
cmp
hlt
jb
cs
mov
jae
lods
sub
jg
add
insb
xchg
mov
xor
xchg
dec
aas
cld
jg
or
lcall
xor
mov
or
push
into
clc
pop
add
imul
mov
shrl
mov
repnz
test
lods
dec
bound
jge
sbb
push
xlat
gs
lds
mov
loopne
jl
adc
outsl
aaa
xor
add
outsl
sar
sbb
mov
push
fwait
ret
ret
inc
lahf
xor
shrl
pop
aad
in
out
jmp
mov
dec
sbb
sarl
aas
jmp
mov
rcrl
neg
fstpt
popa
dec
mov
fsub
xor
mov
jns
std
popf
xchg
fdivp
xchg
repnz
xor
jno
sub
clc
mov
gs
mov
dec
cmp
lcall
cmpsl
scas
sbb
xor
outsl
push
add
adc
test
add
int3
lods
call
pusha
xlat
xchg
repz
jae
inc
mov
inc
push
jl,pt
aaa
les
fcmovu
loope
movsb
add
mov
aas
int3
icebp
scas
cmp
cmpsl
push
or
filds
cwtl
jmp
in
mov
bswap
push
adc
pop
imul
xchg
je
or
xchg
hlt
outsl
xor
dec
dec
inc
jae
pushf
outsb
ljmp
pushf
negb
xchg
lcall
insb
inc
mov
decb
stos
aaa
call
mov
fwait
xchg
aas
pop
lock
mov
pop
jno
outsb
addr16
xor
add
pop
cwtl
jmp
mov
insl
push
mov
xchg
lds
mov
arpl
lock
clc
cmp
pusha
subb
nop
mov
sub
stos
sahf
xchg
xor
ret
sub
jg
push
nop
icebp
fnstenv
lock
lods
mov
out
jle
lock
fwait
push
jnp
sub
imul
inc
mov
mov
jl
pushf
and
fidivs
subb
push
fs
cmc
jecxz
pop
ret
mov
dec
das
pop
push
add
sahf
xor
mov
jecxz
add
int
sbb
pop
ret
in
outsl
mov
add
xchg
mov
add
dec
pop
test
test
lcall
mov
push
push
and
push
pop
insb
ds
sub
mov
push
push
in
int
ret
dec
daa
mov
jmp
dec
or
push
scas
fimull
prefetch
or
jnp
sbb
loopne
cs
mov
test
jg
mov
mov
divl
xchg
push
insl
in
mov
dec
mov
or
pop
lret
fildll
jno
cmp
je
add
add
pop
xchg
fcoms
cmp
insl
mov
pop
inc
insb
cs
adc
ja
daa
mov
sbb
sbb
mov
mov
ret
scas
push
adcb
add
roll
mov
dec
mov
in
inc
sbb
fmuls
inc
pop
popa
popf
mov
adc
test
das
push
popf
mov
les
icebp
xchg
stc
push
cwtl
add
cmpsl
adc
cwtl
adc
dec
pop
push
mov
js
lea
jge
popa
xchg
test
pop
divb
sub
xor
out
shr
sbb
cmp
test
pop
std
lock
aad
add
rcrl
mov
sub
icebp
popa
mov
cmpsb
pop
insb
xchg
outsb
in
sbb
lahf
aam
js
pop
mov
add
xor
pop
insb
jmp
aam
aad
ret
dec
bound
and
stos
insb
mov
inc
and
cmc
arpl
lret
cmc
jmp
sarl
dec
lcall
sub
inc
cltd
addl
fiadds
iret
jg
mov
xchg
sarl
add
out
xchg
pop
fiadds
pop
es
leave
mov
imul
movsl
mov
push
push
jns
push
notl
and
popa
jmp
sti
add
inc
add
in
push
cltd
jmp
aam
sbb
dec
lea
enter
mov
mov
and
inc
push
lods
adc
mov
ss
lock
pushf
imul
fmul
pusha
movsl
jge
pop
sahf
pop
pop
inc
popa
lret
xchg
cmc
or
fiadds
pop
xor
jge
insb
leave
stc
lea
or
pop
inc
add
test
in
pop
add
sbb
mov
loopne
cltd
inc
pop
roll
push
inc
imul
pop
daa
mov
ljmp
cltd
fiadds
.byte
cli
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
lea
lods
push
fimull
sbb
lods
scas
mov
popa
and
cmpsb
in
int3
jg
fidivrl
stos
inc
jge
xchg
jg
std
enter
xor
adc
add
pextrw
sbb
cmp
std
cltd
cmp
inc
mov
orb
push
testl
shl
inc
pop
and
call
jmp
jge
ds
test
pop
pusha
adc
push
je,pn
unpckhps
push
addl
xchg
ja
adc
js
jne
jbe
fcomip
mov
cmpsl
in
and
mov
data16
jnp
subl
subl
xor
xchg
xchg
cmpsl
mov
mov
dec
push
cmp
dec
mov
mov
ret
imul
rcll
dec
xor
push
pop
out
call
popf
mov
inc
lods
ss
or
cltd
sahf
jg
mov
xchg
sub
fldt
inc
cmp
lock
and
fadd
jo
add
sub
test
ds
cld
sti
loope
stc
ds
outsl
and
dec
pop
mov
jb
enter
sbb
shll
sbbl
mov
addr16
cmp
rcrb
push
cmpsl
pop
dec
pusha
repz
shrb
inc
roll
sti
xor
xor
dec
test
mov
mov
push
popf
cmpsb
mov
mov
or
fmulp
dec
pusha
aaa
xchg
or
fsub
mov
faddp
mov
xchg
mov
shl
or
mov
js
fsub
lock
mov
loopne
loopne
sub
dec
mov
pushf
jo
insl
sub
or
sub
loopne
rorl
lahf
mov
push
pop
ljmp
xchg
or
xor
in
and
inc
inc
sub
divb
and
mov
jge
inc
jmp
cwtl
lock
jbe
in
cmp
push
mov
repnz
cmp
jmp
inc
bound
xchg
pop
sti
lahf
mov
repz
test
stos
ret
xchg
js
out
or
mov
push
jl
je
mov
rcrb
ss
add
or
cmpl
fisubl
inc
dec
mov
mov
mov
lds
lock
mov
popa
dec
mov
mov
lret
push
lods
pop
cmp
rcrb
mov
and
jp
je
xorb
lock
out
adc
mov
fstpl
mov
cs
imul
mov
movsb
mov
mov
test
popl
xchg
sbb
jne
andb
popf
nop
inc
adc
cmp
mov
leave
mov
bound
int
inc
test
outsb
jge
mov
dec
pop
call
aaa
dec
lcall
mov
negl
push
mov
scas
lret
rcrl
in
jl
cmp
push
xchg
lret
andb
jno
add
push
pop
out
dec
fcompl
pop
movsl
cs
dec
shrl
je
push
push
movsb
lea
ja
xor
lret
testl
jb
and
mov
sbb
arpl
pop
or
sub
sbb
or
scas
or
xor
lods
data16
es
popl
out
nop
repnz
iret
out
out
mov
rcrb
mov
out
cmpsb
sub
xchg
mov
std
inc
xorb
fisttpll
jmp
imul
push
fidivrs
jecxz
xlat
movsb
imul
dec
sbb
jne
xor
push
in
leave
std
xchg
xor
mov
or
adc
test
into
pop
or
ficoml
lods
push
fisttps
pop
stos
xchg
mov
sbb
in
jns
inc
clc
inc
mov
push
outsb
aam
xor
movsl
push
in
fidivrl
push
mov
sbb
mov
cmp
sahf
mov
push
xchg
mov
jge
mov
inc
in
mov
push
jge
fwait
add
lds
insb
ds
mov
cmpsl
loop
lcall
mov
mov
arpl
ljmp
mov
adc
xor
sar
pop
cmp
lds
sbb
inc
adc
pop
xor
push
lea
xchg
dec
jne
or
add
and
out
mov
lret
add
pop
into
adc
xchg
sub
sahf
pop
pusha
and
insb
push
in
ss
mov
aaa
dec
adcb
jo
fmull
imul
jecxz
cmp
movsb
in
int
jno
cmp
mov
inc
mov
lods
or
clc
popf
leave
push
ja
jb
pop
stos
jecxz
xorl
mov
in
aas
jle
jmp
sbb
xchg
cmpsl
in
rorl
inc
cmc
adc
lea
inc
jne
mov
int
test
xlat
add
aam
test
movsb
sbb
imul
pop
pop
cwtl
idiv
addl
filds
mov
sub
ds
inc
mov
pop
insl
or
xor
in
sbb
das
inc
push
lret
xor
mov
fs
push
enter
inc
out
cmpsl
rcll
lea
imul
mov
fisttps
mov
xchg
outsl
rorb
mov
or
dec
jg
outsb
imul
mov
push
adc
push
cs
mov
daa
nop
rcll
push
cmovg
rclb
mov
ror
fs
jb
xchg
loop
loop
stos
ljmp
test
inc
dec
xchg
mov
cmpsl
les
inc
pop
std
testb
hlt
std
aas
nop
lahf
outsl
loop
imull
mov
dec
out
mov
or
aam
fnstcw
push
sub
add
xchg
jmp
mov
jo
call
icebp
sub
sahf
sub
sub
pop
dec
jmp
push
int3
sbb
rcl
aaa
add
sbb
sti
xchg
add
push
fdivrl
or
pop
mov
jae
and
xchg
testl
adc
rorb
inc
leave
push
and
in
ret
es
cmpl
or
xor
or
mov
or
cltd
fimuls
pop
andb
adc
pop
rolb
imul
jo
outsl
lret
adc
addb
cmpsl
lret
or
stos
xor
lret
stos
std
in
sub
dec
call
xchg
or
pop
ret
das
call
daa
loopne
pop
mov
aas
pop
push
lahf
push
lret
movsb
mov
mov
mov
xlat
into
or
stc
sub
cmp
mov
cmpsl
cmp
mov
lret
fdivs
push
dec
in
push
cwtl
dec
jmp
addr16
sbb
pusha
add
outsl
xchg
inc
adc
out
push
dec
jbe
ja
repz
and
mov
cmp
xchg
add
inc
and
push
scas
mov
sbb
push
dec
pop
push
movsb
xor
jns
fiadds
hlt
nop
and
fiadds
lahf
cmp
inc
repnz
inc
and
aad
xor
and
xlat
jne
fbld
andb
repnz
sub
push
cmpsl
xor
xor
stos
push
repz
vxorps
xchg
sub
adc
push
or
dec
shll
push
push
jae
inc
and
lods
out
jge,pt
push
dec
mov
and
add
jnp
aaa
add
out
fldl
ljmp
fcoms
test
divl
xor
loopne
sbb
push
movsl
sub
sbb
pop
mov
push
mov
jbe
shrl
scas
or
sub
ljmp
call
sbb
lret
jns
xchg
nop
mov
shll
rorb
pop
vpaddq
jp
push
loopne
loopne
jg
cltd
shll
cmp
outsl
mov
pop
popa
adc
mov
cwtl
mov
xor
inc
fldcw
inc
mov
push
lcall
fcoms
sub
cmp
out
fbld
bnd
cmp
pusha
lock
out
xor
ficoms
adc
jg
je
arpl
rorb
mov
sub
mov
sbb
mov
insb
push
shll
push
adc
fstpt
call
loop
test
mov
jns
out
mov
push
pop
shr
and
lods
ret
dec
mov
dec
negl
mov
mov
push
inc
gs
and
inc
push
cmp
hlt
xor
in
jecxz
idivl
jge
jl
xor
mov
xor
add
xor
stos
dec
fnstsw
cli
lock
xor
fst
ss
ljmp
jmp
fs
popa
inc
sbb
icebp
jns
jle
int3
ret
js
rorb
mov
cwtl
push
js
push
data16
sahf
out
inc
les
gs
ds
enter
mov
or
mov
sbb
xchg
iret
push
dec
cltd
cmc
fs
pop
mov
mov
int
ljmp
aaa
sbb
dec
fsts
mov
cmpsb
decl
push
mov
inc
insb
shrb
add
sub
xor
pop
cmp
mov
adc
dec
hlt
out
shrb
cs
cmp
and
jns
mov
in
cmpb
xor
repnz
fsubrs
cmp
imul
mov
movl
mov
jge
jmp
lcall
mov
dec
scas
sub
les
adc
mov
sub
shr
and
out
mov
aad
leave
sbb
push
or
icebp
repnz
cmp
adc
aaa
inc
imul
and
sbbl
cmp
push
or
aam
sub
shrl
sarb
xchg
mov
stos
ds
cltd
lret
bound
sahf
lcall
push
scas
ficoml
fwait
mov
xchg
out
push
and
mov
mov
push
sahf
push
aad
cli
insb
je
addr16
pop
jmp
les
cltd
hlt
mulb
mov
cmpsl
mov
push
mov
jae
test
and
in
and
add
push
aas
mov
fdivrs
mov
jecxz
into
fidivs
sub
or
jno
insb
fisubs
jb
add
inc
and
pop
inc
movsb
sbb
pop
xchg
dec
xchg
mov
fnstsw
and
out
dec
pop
xchg
push
ds
fmull
mov
leave
das
xchg
icebp
adc
test
sti
ret
icebp
mov
sub
imul
lods
scas
or
mov
scas
mov
jbe
sub
int3
ja
xchg
js
in
flds
cli
mov
cmp
ja
push
mov
lret
lret
inc
push
out
pusha
pushf
jge
orb
gs
mov
mov
orb
cld
int
mov
icebp
mov
xchg
lods
dec
out
jne
mov
scas
pop
mov
cmc
cli
mov
sbb
adc
and
testl
imul
scas
jecxz
mov
cltd
leave
mov
leave
rcr
arpl
push
fcoms
dec
test
cltd
shlb
adc
sti
test
cmp
cli
bound
movsb
sub
dec
mov
adc
leave
ja
data16
cmc
mov
cmp
hlt
mov
aas
mov
mov
outsl
adc
push
fwait
stc
hlt
xchg
cmp
push
das
out
inc
fwait
in
daa
shlb
testb
jmp
inc
lahf
xchg
xchg
fisubl
jmp
xchg
in
xchg
repnz
inc
movb
push
sbb
lret
jge
fnstsw
jae
xor
lock
xchg
aam
push
sub
jnp
inc
sub
leave
int
stos
or
dec
add
lds
pop
and
add
add
ds
or
lock
pop
adc
daa
fistps
pushf
aad
mov
pop
mov
insl
adc
rcrb
mov
test
mov
adc
in
sub
mov
repz
pop
xor
and
mov
loope
addr16
sahf
mov
repz
sub
dec
dec
fistps
add
pop
dec
push
dec
cmp
adc
inc
movsb
sub
mov
cs
gs
sbb
orb
repnz
out
mov
pop
xor
rol
test
push
pop
faddl
jbe
xchg
shlb
xchg
adc
ret
or
test
cltd
fistpll
scas
lret
inc
in
out
mov
insb
xchg
inc
fdivr
mov
scas
mov
outsb
dec
mov
fwait
sbb
mov
sbb
sti
push
lods
mov
cmp
scas
leave
scas
insl
cmp
mov
jno
lret
dec
jecxz
lods
dec
and
imull
and
cmp
clc
push
mov
sbb
imul
cmp
fmuls
jns
cmp
sbb
sub
xchg
add
pop
imulb
mov
pop
shrl
cmp
daa
inc
cmp
sbb
addr16
int3
bound
shl
je
add
sub
and
fstl
mov
out
cs
es
xorb
imul
sub
out
add
xchg
mov
dec
sbb
lret
and
mov
mov
dec
daa
add
cld
push
jmp
cmp
lea
or
fucomp
pop
dec
dec
fisubrl
test
and
loop
ss
mov
lcall
push
mov
in
hlt
aad
cwtl
dec
ss
inc
icebp
cmp
sub
leave
lahf
mov
dec
pop
rcll
pusha
mov
stos
lret
loopne
aas
inc
fnstenv
outsb
sub
cmpsb
lcall
pop
add
icebp
or
push
jmp
inc
jl
cli
dec
xchg
adcl
cmp
repnz
mov
mov
mov
inc
push
adc
imul
jl
inc
pop
or
sarl
pop
dec
inc
add
sbb
nop
movsl
mov
ret
push
jle
lods
gs
jmp
and
ret
pop
pop
inc
sub
loopne
pusha
xor
cmpb
mov
leave
ds
mov
dec
inc
push
insb
add
js
xchg
aaa
add
ljmp
pop
dec
jne
jge
and
jmp
fnstenv
aam
sbb
and
enter
outsl
or
pop
ret
dec
adc
test
lcall
push
cwtl
test
inc
imul
out
adc
cmp
jo
jno
insl
sub
scas
mov
xor
push
pop
ja
lcall
mov
leave
jecxz
mov
jmp
push
stos
fidivrl
pusha
adc
fwait
mov
pop
push
sbb
popl
aas
ror
fucom
loop
xor
unpckhps
xchg
sub
in
fbld
jl
jle
nop
fnsave
cmpsb
fisttpll
cli
mov
push
sti
mov
sbb
dec
mov
push
jmp
push
add
adc
mov
jbe
inc
ja
inc
jle
jnp
loope
push
mov
dec
repnz
xor
test
mov
sub
and
sub
cli
mov
jne
add
push
sbb
and
push
lret
jge
xor
scas
jo
enter
mov
jbe
xor
mov
sbb
pop
scas
call
add
adcl
jnp
ret
into
jmp
mov
cmpsb
in
lods
xor
inc
cmp
cwtl
sbb
mov
dec
xchg
lret
sbb
iret
pop
je
mov
out
xchg
stc
and
jge
push
add
xchg
cmp
jne
inc
cmp
cwtl
xchg
inc
jo
hlt
mov
or
jo
in
push
pop
mov
arpl
jl
ja
dec
push
sub
mov
xchg
jecxz
pop
sub
mov
push
cli
sbb
or
push
aad
out
sub
aad
mov
in
mov
sbb
data16
inc
repnz
pop
aaa
dec
jns
insb
pop
mov
mov
pop
lret
fstp
jecxz,pt
push
push
fidivl
mov
aas
subl
lock
inc
test
lret
repnz
scas
add
add
shl
addr16
pop
daa
adc
lret
jmp
in
aam
xchg
jecxz
ss
and
cmp
fwait
cmp
add
inc
bound
xchg
in
cmp
repz
fists
into
iret
cmp
mov
xchg
and
mov
andl
lock
daa
je
xor
jns
pop
aam
jle
add
xchg
or
pushf
lods
outsb
jl
fsubrl
jecxz
testb
mov
fwait
pop
or
or
sarb
push
add
xchg
pop
xchg
adc
xchg
inc
pusha
xchg
sub
pop
pop
into
neg
stos
cwtl
mov
fdivrl
xchg
and
xchg
test
and
insl
ret
jns
sbb
daa
mov
repnz
mov
mov
pop
pop
inc
add
mov
fimuls
loopne
loop
cmpsb
jno
sub
shl
sti
and
add
jae
or
xchg
xchg
punpckhwd
enter
lret
test
insb
es
and
xor
push
loopne
xlat
push
subb
push
arpl
sub
out
jl
mov
or
iret
xchg
xor
dec
popf
out
mov
and
mov
mull
lret
cmc
les
popf
ss
scas
call
ret
sbb
fst
fcompl
adc
inc
mov
mov
and
loop
xchg
xchg
dec
sub
jl
mov
xor
xor
movsl
mov
es
or
pop
sbb
in
leave
out
ficompl
mov
add
pop
imul
sbb
inc
xchg
cmp
ljmp
jne
bnd
lret
repnz
adc
push
mov
out
pop
mov
xchg
jl
lds
jge
xchg
enter
xor
lret
insb
shrl
insb
xor
dec
in
fbld
cmp
popf
dec
cmpsl
outsl
mov
mov
ficompl
scas
or
xchg
hlt
xchg
push
out
insl
mov
lds
cmp
lock
jbe
and
insl
rorl
xor
jge
adc
xchg
loope
pop
test
xchg
pushf
in
test
dec
mov
xchg
or
add
jbe
dec
lret
nop
xor
add
rcr
jns
out
popf
pop
leave
scas
jp
test
clc
les
push
insb
mov
adc
dec
mov
pop
dec
jae
fidivl
and
test
adcb
stos
ljmp
in
jo
mov
pop
or
mov
or
in
mov
inc
jno
add
sahf
or
es
mov
popa
cmp
xor
pop
mov
pop
icebp
or
ret
pusha
stos
sbb
add
pop
loopne
popf
pop
jo
pushl
or
call
cwtl
add
pop
bound
loope
scas
push
fcmovne
cmp
pop
push
cmc
jns
push
scas
jp
inc
in
in
scas
out
mov
addr16
fcoml
xor
mov
sahf
loop
mov
pop
sahf
jbe
xchg
enter
mov
stc
mov
test
adc
push
push
stos
jg
xchg
push
mov
je
out
popa
out
popa
add
fstpt
sarl
dec
pop
and
sub
add
das
sub
arpl
mov
jae
pop
divl
or
xchg
popf
inc
jmp
xor
mov
loop
daa
dec
negl
cltd
rorl
sub
aam
xchg
addr16
cmp
outsb
stos
loopne
js
sbb
hlt
cmpsl
jmp
pop
adc
inc
aam
adc
pop
icebp
or
dec
pop
jge
mov
les
ret
xchg
popaw
sub
gs
push
test
ljmp
stc
mov
loop
enter
pop
or
or
add
int3
jbe
sbb
jo
mov
enter
mov
jg
cmpl
cmp
sub
sub
or
scas
leave
aas
hlt
xlat
dec
dec
outsb
xlat
lret
in
xchg
cld
leave
xchg
fdivl
aad
push
or
fsub
adc
fldenv
mov
mov
mov
flds
mov
jbe
sub
daa
and
sub
or
shrb
data16
loopne,pn
lds
dec
push
xlat
loopne
jge,pt
jne,pn
loop
mov
aam
sahf
ljmp
adc
lret
xor
daa
aad
test
insl
mov
and
aas
adc
into
mov
ret
xlat
or
repz
cmp
mov
xor
clc
int
dec
mov
and
fdivs
adc
int
test
dec
cs
movlps
scas
fldt
cli
push
fcmove
pop
ljmp
mov
nop
jmp
sbb
jg
or
cmpsl
in
aam
mov
cmp
sbb
aas
and
inc
push
movsl
xor
sbb
sbb
or
cmc
dec
xor
into
out
fisttpl
sbb
cmp
sub
movsl
push
pop
push
testb
cmp
xchg
loop
daa
and
jg
or
dec
push
and
sbb
imul
inc
add
fbld
es
sub
pop
loop
pushf
cmpsb
sub
loopne
out
pop
hlt
movsl
loop
lret
jne
mov
sub
jp
dec
sbb
filds
mov
out
ret
mov
dec
aam
adc
mov
test
push
push
das
fwait
inc
jmp
mov
orl
cmp
iret
sub
xor
shrb
bound
xchg
pop
pusha
cmp
rorl
shlb
lcall
fisttpll
ljmp
lret
daa
cmpsb
inc
mov
leave
les
jle
lock
mov
jle
cmp
sub
lret
inc
call
sbb
testl
les
push
stos
jp
pop
ret
lea
push
xchg
and
iret
mov
xor
or
mov
mov
lret
cwtl
push
cmp
pop
ds
pop
mov
imul
mov
iret
in
and
mov
lds
imulb
clc
imul
cs
cmp
mov
jg
cld
mov
dec
dec
ds
push
or
out
dec
or
or
xchg
sub
or
mov
push
icebp
jns
pop
cmp
dec
shlb
popf
pop
sub
mov
shr
sbb
cmpsl
jg
aaa
push
jbe
lods
mov
fucomi
scas
or
jnp
mov
dec
js
sbb
lea
xchg
inc
iret
lcall
jle
jg
xor
testl
and
xchg
out
xchg
aad
aas
bound
jno
pop
adc
xchg
inc
aam
test
xor
in
jg
xor
xor
test
pop
push
clc
xor
mov
mov
cmc
test
mov
sub
jns
je
pop
cmp
leave
gs
or
int
jnp
sub
hlt
jo
sbb
or
and
sbb
in
mov
or
adc
in
int3
dec
lret
jge
inc
jg
pop
mov
push
mov
mov
push
popa
xlat
dec
enter
push
and
pop
repnz
in
jne
mov
rcrb
repz
shlb
push
mov
out
cmp
cld
int
hlt
bnd
fstl
out
jne
mov
mov
jge
or
insl
loope
sub
mov
outsb
pop
sub
adc
sbb
dec
addr16
insl
lcall
lahf
rcrl
push
cmp
pushf
out
inc
mov
add
pop
or
jnp
pop
imul
jno
aam
or
imul
push
inc
mov
inc
addr16
imul
imul
rcll
repz
jmp
mov
scas
fmul
dec
pop
aaa
adc
cld
fs
call
or
mov
int
movsb
pop
lods
addr16
push
bnd
fildl
sub
dec
dec
hlt
inc
cmp
push
ret
bound
cmp
xchg
push
xor
mov
outsl
lds
movsb
dec
sub
mov
stos
xor
in
inc
sbb
xor
shlb
sbb
ret
faddp
cwtl
std
mov
scas
ss
insl
add
xlat
push
mov
mov
je
add
lcall
pop
iret
or
aam
popa
jns
lcall
clc
sub
cmpsl
mov
cltd
inc
or
cmpsl
or
cmc
dec
push
test
xor
jb
arpl
test
imul
pop
adc
cld
dec
inc
dec
inc
add
in
iret
icebp
data16
jmp
dec
sahf
scas
pop
inc
and
cmp
sti
mov
ret
arpl
rcll
bound
sbb
cmp
cmc
dec
dec
inc
cwtl
rcrl
xchg
cltd
in
jge
enter
outsb
icebp
cmpsb
cld
inc
cmp
fs
cmpsb
ds
xorb
cwtl
xchg
or
jbe
into
dec
jmp
sbb
fcoml
stos
out
sarb
fldcw
cmp
xor
and
jne
shrb
mov
sub
movsl
cwtl
cmpsb
inc
pop
bound
cld
movb
test
fistpl
adc
fadds
xor
mov
mov
scas
mov
jp
cmp
je
shlb
leave
pop
dec
addl
nop
cmpl
lret
lret
dec
loop
sub
sub
mov
push
xchg
mov
andl
inc
add
dec
cmp
pop
jecxz
rol
push
repz
repz
les
cmpsb
mov
sub
adc
loop
push
arpl
pusha
sarb
mov
sbbb
jmp
jle
nop
sub
ja
push
cmp
outsl
sbb
xor
addb
cmp
sti
into
adc
int3
cmp
insl
dec
imul
movsl
jo
shrb
jecxz
mov
dec
popl
jne
xor
sbb
shl
adc
scas
aaa
lret
subb
test
cmpsb
sbb
mov
roll
das
mov
adc
push
inc
cmp
jp
inc
cwtl
sbb
rol
jge
cmp
pop
add
aas
lahf
mov
repnz
fisubl
push
pop
fdivl
int3
push
jp
ds
ret
hlt
outsb
push
dec
push
lahf
mov
xchg
pop
fnsave
dec
outsl
cwtl
mov
pop
sbb
mov
int
xor
xchg
pop
pop
mov
arpl
dec
cmpsl
jp
adc
fisubs
and
sti
or
xor
ficoml
test
or
lods
add
pop
add
cltd
push
pop
enter
lds
mov
addr16
repnz
inc
ret
mov
cmp
ficomps
test
lock
mov
dec
ret
rcll
les
imul
pusha
repnz
scas
or
inc
repz
dec
lea
pop
mov
out
shr
or
or
inc
jp
mov
cwtl
iret
jo
movsl
cmpsl
add
ja
stc
cmp
sbb
sarb
push
mov
cmp
inc
sub
sarl
pop
xchg
fdivl
das
jnp
cmp
js
inc
out
pop
jmp
cli
aaa
jg
cmp
jg
mov
sub
sub
xor
ret
stos
jge
pop
outsl
dec
je
jbe
outsb
sbb
push
roll
int
lret
jbe
ss
dec
adc
aad
flds
push
pop
out
mov
pop
cli
int3
scas
imul
add
xchg
pop
test
pop
and
add
jbe
hlt
dec
mov
xor
and
or
or
adc
push
bound
jnp
mov
repnz
ret
pop
js
loopne
insl
das
push
mov
dec
ffreep
ljmp
inc
push
mov
push
jb
mov
in
xchg
rclb
push
xor
int
imul
repz
jb
sbb
mov
sti
mov
push
sbb
cld
jnp
pushf
inc
lods
pop
pop
mov
pop
mov
mov
add
push
mov
stos
pop
sbb
scas
xor
adc
pop
mov
fdivs
mov
shlb
pop
pusha
cs
xchg
push
in
insl
or
nop
aaa
cwtl
cltd
das
lcall
adcl
jne
rorl
popa
lock
sub
in
sbb
push
sbb
mov
lcall
aas
sti
outsb
dec
xchg
or
xchg
pop
mov
mov
cld
mov
das
rorb
mov
popf
xor
adc
mov
fcompl
cmp
push
jecxz
sarl
add
xchg
lds
data16
xchg
push
inc
loope
outsb
push
je
repnz
lcall
xor
pop
or
pop
and
sbb
rol
pop
jg
scas
push
add
and
pop
dec
fwait
mov
push
in
cmp
std
mov
mov
push
out
sahf
jb
or
xor
jb
and
outsl
xchg
jno
and
xchg
inc
ret
xor
aad
add
dec
and
push
pop
mov
cmp
xor
xchg
mov
int3
loopne
xor
jl
jl
push
mov
hlt
xchg
sbb
aas
addr16
lods
cmpsb
adc
add
xor
xlat
scas
popa
jecxz
pop
cltd
loope
jp
jb
xor
pusha
repnz
fcompl
sub
mov
xchg
pop
fidivrl
xor
loop
pop
adc
cmp
in
mov
pop
aas
jmp
cli
mov
xor
xchg
jne
stos
inc
dec
and
cld
xchg
repz
popf
or
ss
sub
arpl
cs
sbb
cmpsb
inc
or
pusha
scas
mov
inc
pop
add
das
add
mov
ss
aas
aaa
jb
pop
pushf
or
push
sbb
pop
or
jecxz
push
mov
jns
int
mov
mov
xchg
arpl
xchg
mov
cmp
sub
push
sub
scas
das
pushf
or
sub
cmp
mov
xchg
lods
dec
mov
call
jno
cli
fcmovu
dec
push
es
pop
inc
mov
adc
mov
mov
xlat
mov
int3
fsub
xchg
mov
lahf
jb
iret
popf
cld
jmp
mov
or
test
inc
rorl
pop
mov
pushf
mov
xchg
or
push
mov
sahf
bound
ljmp
sub
push
lahf
loopne
les
cmp
sbb
mov
or
icebp
cmp
mov
ja
mov
sahf
sbb
les
in
cld
fildl
cmp
or
movsl
lods
inc
fsubrp
outsl
lahf
dec
jecxz
ret
shr
pop
subb
out
xchg
push
test
in
cwtl
mov
jo
fdivrs
lods
dec
cs
mov
loope
sbb
lcall
js
mov
pop
int
cwtl
mov
or
fsubp
roll
dec
and
test
jae
cmp
lret
cmp
jecxz
fsubp
popa
in
cmp
insb
adc
cmpsl
iret
inc
sar
mov
jbe
xchg
sahf
test
lds
mov
ss
test
ds
cmpsl
xor
out
xchg
and
push
dec
adc
jmp
jnp
adc
loope
mov
pop
jno
dec
and
arpl
bound
cmp
test
or
jmp
cmp
out
cs
out
xchg
jmp
mov
fwait
mov
lret
xchg
dec
pushf
push
outsl
jle
stc
jle
std
and
sbb
jg
pop
outsl
js
lock
cmp
push
lock
jno
fnsave
mull
adc
dec
mov
add
out
sub
mov
leave
add
lcall
imul
test
fadd
call
cmp
fists
inc
cmc
adc
daa
bound
cmp
push
in
jo
inc
or
lahf
cmp
scas
call
shlb
mov
mov
xchg
sbb
adc
mov
or
negl
lds
mov
outsl
push
sbb
nop
sahf
cmc
mov
test
mov
cld
shll
adc
mov
mov
popa
adc
outsb
test
add
call
mov
mov
cli
xchg
pop
xor
lds
xchg
jno
pop
lret
out
outsl
and
jg
stos
xor
push
lods
mov
nop
push
jecxz
cmp
int3
jns
dec
loope
icebp
inc
decl
xchg
arpl
lea
orl
jnp
bound
and
loopne
out
inc
mov
packsswb
pop
dec
push
dec
stc
daa
data16
or
leave
jmp
or
or
dec
xlat
mov
loope
mov
xchg
sti
jp
je
sbb
loope
or
ret
int3
sahf
mov
adc
pop
call
outsl
sub
pop
push
scas
es
scas
fbld
cltd
mov
out
jmp
test
jmp
leave
test
xlat
and
mov
jmp
test
jbe
dec
pop
cmp
cmc
lea
jp
cmp
clc
pop
mov
inc
sbb
mov
mov
or
xor
sub
jp
mov
out
mov
imul
testb
inc
add
test
push
xorl
bound
push
and
mov
cmp
mov
insl
dec
sbb
fsqrt
int3
testl
dec
int
fnstenv
hlt
mov
fwait
out
pop
insl
xchg
add
pop
sbb
add
out
jmp
pop
xor
cwtl
and
adc
insl
lret
push
inc
xor
movsb
imul
in
inc
fs
arpl
sub
push
xchg
hlt
movsb
ret
pop
adc
pop
mov
cmpsl
mov
fnsave
mov
xchg
mov
arpl
sub
fildl
popf
fs
mov
sbb
xchg
scas
add
loopne
adc
in
pop
cwtl
cmp
dec
aam
push
mov
mov
and
xor
push
es
cmp
rcrb
mov
mov
sbb
fisubl
fildl
mov
test
mov
cld
repz
fsincos
or
mov
movups
in
stos
adc
push
insl
dec
xor
cld
or
or
incl
mov
pop
inc
pop
mov
inc
popf
cmp
pop
leave
clc
ja
icebp
popa
mov
mov
enter
sub
and
loopne
sti
inc
jbe
mov
es
outsb
les
mul
sbb
daa
push
jo
cld
mov
or
pop
xchg
sub
das
imul
testb
jmp
or
addr16
mov
iret
imul
sub
data16
outsb
pop
push
ficomps
xor
lret
pop
ficoml
dec
andl
out
sub
in
sbb
inc
push
rolb
ljmp
mov
push
fsubl
jb
stos
aad
shll
aas
lds
dec
out
cs
lock
mov
and
popl
jg
or
mov
lahf
out
sarb
push
pop
add
adc
push
inc
movsl
movsb
cmpsb
push
icebp
adc
js
addr16
jge
cltd
sti
insb
dec
xlat
pop
flds
daa
in
add
icebp
jbe
jecxz
push
mov
nop
popf
test
mov
sbb
sub
out
ret
gs
arpl
xchg
or
fistl
icebp
adc
test
sbb
test
xchg
sub
enter
scas
push
mov
inc
inc
pop
xor
jmp
and
jle
push
das
jmp
jo
mov
mov
mov
xor
daa
cmp
ja
rorb
ss
add
ret
jae
popf
jb
test
jbe
aaa
in
sub
repnz
call
mov
sub
pusha
frstor
jb
or
inc
pop
jnp
xchg
xchg
lret
lea
dec
test
cmp
shl
sbb
lret
cmp
movsl
les
loop
nop
dec
xor
loope
leave
cmp
sub
testb
ret
imul
and
popa
test
lock
daa
cmp
aaa
movsl
jbe
or
movsl
hlt
aad
add
into
imul
sub
xor
nop
and
mov
in
lock
lock
mov
adc
repz
sarb
loop
adc
jp
fsub
movb
pushf
push
ds
cmpl
push
add
inc
xlat
aas
cmp
sbb
ds
fld
nop
popa
xor
pop
jg
aam
in
jno
xor
add
pop
ret
xchg
sub
xchg
mov
inc
and
cli
sbb
test
in
xor
cmp
jno
sub
cmpsl
ret
mov
inc
mov
and
fidivrs
adcb
add
cmc
inc
ret
insl
pop
stos
test
fnstcw
icebp
push
movsl
adc
ror
pextrw
sbb
inc
and
inc
sub
jecxz
loop
jge
push
out
inc
mov
rclb
mov
add
cli
shl
cld
mov
lcall
stc
cmpl
les
xor
lahf
push
scas
lds
and
aam
cmp
xor
sar
mov
xchg
sub
pop
clc
dec
popa
sbb
hlt
inc
andl
pop
and
jmp
jae
in
add
xchg
fists
push
hlt
in
pop
test
test
test
inc
jns
mov
jle
mov
mov
mov
jmp
mov
sbb
and
adc
mov
pop
cmp
inc
sti
gs
mov
shl
in
std
lods
imul
pop
icebp
sub
shrl
addb
mov
and
lcall
inc
lods
jmp
inc
fcmovbe
cmp
jcxz
scas
aaa
push
andl
sub
into
mov
adc
cmp
cmp
je
es
or
lcall
scas
lock
adc
inc
sahf
inc
sbb
inc
lock
fcoms
jp
mov
mov
cmp
cld
pop
inc
iret
fwait
sbb
jl
js
push
push
sti
xor
and
dec
xchg
popf
push
dec
fisubrs
add
jp
iret
and
and
xorb
mov
out
pop
sub
rcrl
rclb
cmc
int
add
push
push
lods
icebp
popf
pop
fdivrl
mov
in
mov
push
lods
inc
jl
mov
dec
unpckhps
sar
mov
sbb
in
aam
icebp
loopne
add
add
and
outsb
cmp
int3
loop
cmpsl
loop
xor
mov
movsl
sbb
pop
cmp
insb
push
das
add
xor
popa
leave
in
xchg
mov
ret
stos
jp
adc
stc
xor
push
and
loopne
data16
and
pop
mov
cwtl
xor
scas
inc
aad
hlt
sub
out
shrl
adc
push
pop
out
iret
mov
add
repnz
loopne
jg
xor
insl
clc
inc
mov
xchg
dec
inc
rcr
andl
cmp
shlb
sbb
int3
test
mov
les
pop
mov
xor
out
jb
mov
inc
push
movsl
jo
jnp
and
xchg
dec
sub
mov
in
lret
sbb
sti
lock
xchg
mov
iret
cmp
jle
jle
stc
mov
incl
mov
es
lcall
inc
mov
mov
int3
jbe
xor
jae
pop
add
in
sbb
mov
jbe
lahf
mov
hlt
jns
xor
popf
cmp
add
and
sub
fcom
or
and
or
cmp
mov
shll
shrb
sahf
lret
addr16
xor
adc
lahf
add
inc
rcrl
jg
and
mov
fsubr
inc
das
jge
dec
cmp
jg
mov
nop
jl
sub
mov
mov
fs
imul
and
and
inc
fldcw
inc
cmp
mov
cmp
inc
imul
mov
fistpl
clc
mov
adc
mov
pop
loope
mov
out
outsl
das
stc
adc
and
sbb
or
repnz
sub
sti
hlt
add
scas
stos
xor
push
mov
mov
out
int
jne
shll
lock
enter
jg
fidivl
xchg
nop
jb
andl
data16
rolb
inc
add
pop
pusha
push
stc
cmpsl
inc
or
ror
popa
xchg
shrb
dec
push
add
cltd
adc
sbb
sahf
pop
add
inc
mov
pop
out
mov
call
pop
js
mov
jge
loope
push
shr
jae
fcoms
icebp
shlb
mov
mov
out
imul
push
je
sbb
and
mov
xchg
push
pop
mov
dec
loopne
push
and
shrb
out
outsl
mov
mov
pusha
sbb
insb
cmpsb
shrb
sbb
mov
push
jae
lret
out
icebp
addr16
mov
rorb
or
add
ljmp
jge
or
push
in
lcall
inc
or
clc
enter
mov
cli
jg
push
xor
popa
sar
push
mov
push
sarl
fucom
or
push
jecxz
jo
pop
sbb
mov
lea
push
adc
sahf
inc
mov
jg
dec
pop
int
das
add
cmp
fiadds
xchg
popa
xor
and
dec
pop
int
mov
mov
adc
ja
int3
pop
inc
jno
dec
out
pop
dec
sbb
push
dec
prefetch
or
imul
iret
jnp
roll
mov
inc
jg
movsl
adc
addr16
push
xchg
or
cmp
add
movsb
push
mov
call
ret
enter
js
pop
jb
sub
push
in
test
mov
jmp
adc
stc
call
icebp
je
or
lds
repnz
nop
andl
mov
adc
xchg
ret
mov
fldt
xlat
jp
data16
loope
shll
jl
mov
imul
gs
repz
inc
movsl
jb
notb
fwait
repz
add
in
adc
mov
push
sbb
stos
inc
mov
xlat
mov
cli
inc
inc
jb
dec
push
jg
mov
inc
lea
mov
xor
pop
mov
sbbb
inc
jo
xor
push
testl
call
jb
inc
ds
sar
or
loope
ucomiss
xlat
outsl
mov
adc
out
test
aad
movsb
out
movl
je
lahf
jl
scas
fs
dec
loop
sub
in
cmpsl
lods
mov
sbb
pop
xor
add
xchg
cmp
fiadds
push
push
and
popf
dec
and
inc
pop
jge
cltd
pop
mov
loopne
nop
push
js
mov
outsl
and
iret
not
xchg
jne
fistpll
filds
pop
enter
mov
iret
fcmovne
ror
gs
mov
xor
movsb
ret
jl
mov
fidivl
enter
mov
pop
jbe
push
loope
lods
push
lcall
insb
scas
or
cwtl
jns
dec
lock
ljmp
nop
mov
mov
mov
push
cmc
cmp
insl
pushf
lock
ret
sbb
pop
inc
adc
cmpsb
jmp
push
mov
adc
mov
xchg
xchg
lret
insb
add
sub
dec
jl
push
adc
out
mov
shlb
lock
jg
or
idivl
in
mov
add
ljmp
or
and
ljmp
ret
stos
les
mov
and
inc
inc
out
lret
sub
inc
movsb
mov
mov
testb
in
dec
shrb
add
mov
pop
sbb
out
ficoml
inc
dec
xchg
cmp
hlt
jb
cs
mov
jae
lods
sub
jg
add
insb
xchg
mov
xor
xchg
dec
aas
cld
jg
or
lcall
xor
mov
or
push
into
clc
pop
add
imul
mov
shrl
mov
repnz
test
lods
dec
bound
jge
sbb
push
xlat
gs
lds
mov
loopne
jl
adc
outsl
aaa
xor
add
outsl
sar
sbb
mov
push
fwait
ret
ret
inc
lahf
xor
shrl
pop
aad
in
out
jmp
mov
dec
sbb
sarl
aas
jmp
mov
rcrl
neg
fstpt
popa
dec
mov
fsub
xor
mov
jns
std
popf
xchg
fdivp
xchg
repnz
xor
jno
sub
clc
mov
gs
mov
dec
cmp
lcall
cmpsl
scas
sbb
xor
outsl
push
add
adc
test
add
int3
lods
call
pusha
xlat
xchg
repz
jae
inc
mov
inc
push
jl,pt
aaa
les
fcmovu
loope
movsb
add
mov
aas
int3
icebp
scas
cmp
cmpsl
push
or
filds
cwtl
jmp
in
mov
bswap
push
adc
pop
imul
xchg
je
or
xchg
hlt
outsl
xor
dec
dec
inc
jae
pushf
outsb
ljmp
pushf
negb
xchg
lcall
insb
inc
mov
decb
stos
aaa
call
mov
fwait
xchg
aas
pop
lock
mov
pop
jno
outsb
addr16
xor
add
pop
cwtl
jmp
mov
insl
push
mov
xchg
lds
mov
arpl
lock
clc
cmp
pusha
subb
nop
mov
sub
stos
sahf
xchg
xor
ret
sub
jg
push
nop
icebp
fnstenv
lock
lods
mov
out
jle
lock
fwait
push
jnp
sub
imul
inc
mov
mov
jl
pushf
and
fidivs
subb
push
fs
cmc
jecxz
pop
ret
mov
dec
das
pop
push
add
sahf
xor
mov
jecxz
add
int
sbb
pop
ret
in
outsl
mov
add
xchg
mov
add
dec
pop
test
test
lcall
mov
push
push
and
push
pop
insb
ds
sub
mov
push
push
in
int
ret
dec
daa
mov
jmp
dec
or
push
scas
fimull
prefetch
or
jnp
sbb
loopne
cs
mov
test
jg
mov
mov
divl
xchg
push
insl
in
mov
dec
mov
or
pop
lret
fildll
jno
cmp
je
add
add
pop
xchg
fcoms
cmp
insl
mov
pop
inc
insb
cs
adc
ja
daa
mov
sbb
sbb
mov
mov
ret
scas
push
adcb
add
roll
mov
dec
mov
in
inc
sbb
fmuls
inc
pop
popa
popf
mov
adc
test
das
push
popf
mov
les
icebp
xchg
stc
push
cwtl
add
cmpsl
adc
cwtl
adc
dec
pop
push
mov
js
lea
jge
popa
xchg
test
pop
divb
sub
xor
out
shr
sbb
cmp
test
pop
std
lock
aad
add
rcrl
mov
sub
icebp
popa
mov
cmpsb
pop
insb
xchg
outsb
in
sbb
lahf
aam
js
pop
mov
add
xor
pop
insb
jmp
aam
aad
ret
dec
bound
and
stos
insb
mov
inc
and
cmc
arpl
lret
cmc
jmp
sarl
dec
lcall
sub
inc
cltd
addl
fiadds
iret
jg
mov
xchg
sarl
add
out
xchg
pop
fiadds
pop
es
leave
mov
imul
movsl
mov
push
push
jns
push
notl
and
popa
jmp
sti
add
inc
add
in
push
cltd
jmp
aam
sbb
dec
lea
enter
mov
mov
and
inc
push
lods
adc
mov
ss
lock
pushf
imul
fmul
pusha
movsl
jge
pop
sahf
pop
pop
inc
popa
lret
xchg
cmc
or
fiadds
pop
xor
jge
insb
leave
stc
lea
or
pop
inc
add
test
in
pop
add
sbb
mov
loopne
cltd
inc
pop
roll
push
inc
imul
pop
daa
mov
ljmp
cltd
fiadds
jmp
dec
dec
daa
scas
mov
and
mov
xchg
dec
daa
add
aad
adc
shrl
outsb
sub
cwtl
cmp
dec
fmuls
xor
cmp
mov
jg
sbb
mov
test
out
push
push
xchg
xchg
test
push
xchg
repnz
and
mov
adc
insl
sub
add
push
rorb
mov
and
inc
jmp
push
mov
push
out
xchg
fistl
cmpsl
or
mov
rclb
mov
dec
mov
outsl
push
int3
sub
stos
imull
mov
sbbl
push
in
orl
fmulp
jmp
inc
ffree
mov
dec
int3
es
sarb
push
shll
outsb
xchg
repnz
mov
dec
mov
xchg
icebp
orb
lods
in
scas
fidivs
sbb
jge
pop
je
mov
push
insl
cli
lea
xor
fbld
add
cmp
mov
jmp
xchg
jge
push
xchg
pop
sti
xor
and
fnsave
sub
xchg
clc
in
pop
adc
inc
bound
es
clc
fidivl
jae
cmp
lea
or
outsb
rcr
mov
in
jl
push
xor
jmp
fwait
cmp
inc
jge
xor
cmc
insb
mov
push
aas
xor
idivl
jne
jae
shlb
loope
push
add
adc
cwtl
sbb
mov
icebp
push
mov
sub
adc
aad
adc
mov
cmp
ds
jne
adc
push
jbe
arpl
fistpl
and
idivl
xchg
sbb
loope
push
sbb
lea
jno
add
fsubs
mov
call
sub
push
push
and
jb
notb
cmp
push
pop
xchg
sub
inc
mov
add
add
mov
xor
cmpb
in
aas
add
sub
push
std
mov
fs
loop
push
sub
jecxz
mov
hlt
dec
int
sub
mov
jo
cmp
jnp
pop
lock
lahf
sub
sbb
sbb
mov
std
adc
adc
fstl
push
jmp
sbb
movl
outsl
mov
out
or
and
test
sub
inc
test
cmpsl
or
iret
push
sub
test
pop
inc
dec
es
pop
int3
daa
sahf
sub
ljmp
lahf
inc
test
and
stos
push
ds
mov
insl
outsb
addr16
lods
je
dec
xchg
cmpb
pop
int
mov
aaa
mov
lret
sbb
push
inc
sbb
jecxz
fs
mov
lahf
sbb
out
jle
dec
adc
fxch
adc
imul
sbb
pop
clc
clc
in
pusha
adcl
jmp
push
fwait
into
lds
dec
fnstcw
movsb
stos
pop
int
add
fnstcw
int3
loop
pop
mov
lods
stos
loopne
push
push
rcll
mov
mov
insl
imul
and
dec
pop
mov
stos
stos
ret
push
jp
mov
insb
adc
pop
xchg
sbb
sbb
or
and
mov
adc
mov
push
jo
sbb
ja
xor
fsubrl
push
es
mov
xchg
aas
inc
stos
shl
sbb
pop
pop
fisttps
in
fiadds
stos
sarb
inc
xchg
mov
outsl
cmpsb
out
shrl
out
data16
into
sahf
stos
mov
fbstp
fmull
out
inc
mov
testb
shll
xor
cmp
sub
pop
fwait
lds
xor
aaa
stos
and
mov
arpl
popf
fildl
add
push
out
xor
mov
mov
pushf
lret
sub
jb
xchg
insb
push
repz
sbb
repz
xor
loope
adc
les
test
and
xchg
push
xchg
cld
sub
fucomip
out
mov
inc
stc
arpl
cli
add
push
aad
jp
inc
xchg
sbb
cld
add
xor
cmp
and
dec
dec
adc
sub
out
pop
stos
push
or
or
insb
mov
popf
outsb
pop
push
cmp
orl
xlat
sbb
cs
and
adc
ljmp
das
repz
test
ljmp
adc
nop
nop
add
fs
rcll
inc
bound
dec
es
mov
sub
es
sti
push
xor
lock
negb
sbb
pop
lea
mov
xchg
cmp
mov
aad
aad
jg
dec
push
pop
aaa
mov
sub
fcomip
lea
shll
xor
push
mov
inc
and
inc
push
mov
xor
icebp
sbb
mov
cmp
inc
insb
mov
push
xchg
xchg
loop
std
orb
mov
cmpsl
and
adc
hlt
mov
icebp
lods
movsl
dec
cmp
mull
aas
fldl
and
int3
or
mov
xor
mov
and
clc
fsts
rorb
int3
xlat
add
mov
testl
std
stc
cltd
xchg
pop
mov
insb
je
inc
adcb
add
mov
xlat
enter
jp
dec
jnp
imul
jne
push
in
mov
lret
inc
cmp
mov
stos
adc
mov
fisubrl
sti
scas
into
movsl
in
fwait
xor
jmp
and
movsw
push
cmp
scas
pop
sahf
lret
mov
fisubs
sbb
decl
xor
in
ja
in
jae
roll
ss
movsl
addb
and
sub
fstl
or
add
lahf
adc
push
jle
adc
sbb
cmp
push
stc
std
bswap
and
test
sbb
add
mov
sub
push
scas
sbb
imul
sub
add
sbb
stos
jo
xchg
sub
in
loope
nop
or
add
dec
repz
pop
ret
jo
push
shll
add
das
gs
popl
cmp
and
bound
push
dec
xor
adc
cmpsb
es
sarb
rcll
daa
mov
adc
pusha
sub
int3
xchg
inc
dec
and
push
cld
std
nop
adc
test
in
mov
stos
out
inc
push
shlb
xor
and
std
incl
jnp
aaa
mov
hlt
jne
out
and
fwait
or
adc
dec
bound
arpl
or
cmc
add
out
fldt
sbb
push
lret
jno
mov
pusha
sub
fisttpl
mov
call
fcmove
pushf
xor
out
jecxz
mov
lods
dec
scas
cmp
sbbb
sti
mulb
out
mov
jb
sub
sub
jg
sbb
outsb
mov
push
adc
lds
sbb
cs
fistpl
mov
fistpl
mov
pop
mov
bound
adc
inc
sbb
xchg
fadds
cltd
mov
jecxz
lcall
in
ret
and
inc
call
lds
ljmp
in
cmp
mov
inc
adc
jb
je
sub
adc
fnstcw
es
nop
mov
pop
xchg
ficoms
aas
fdivl
push
push
fldenv
lds
int
shll
jl
jle
les
jb
aas
in
adcl
roll
adc
sub
jg
jl
jge
out
mov
sub
sbb
adc
test
cmp
inc
jne
jp
xchg
dec
scas
rcrl
cmp
lret
fdivrl
int
shlb
stc
pop
xor
xchg
cli
outsl
leave
push
pop
jmp
popfw
insl
int3
mov
lea
icebp
and
dec
or
js
sahf
out
push
repnz
scas
and
movsl
mov
cmp
ret
push
hlt
jecxz
addb
xchg
mov
pop
inc
popl
imul
pushf
aam
sbb
adc
loop
dec
mov
rorl
mulb
std
outsb
sbb
push
pop
lret
jge
mov
ret
or
jp
mov
clc
inc
lds
fwait
add
in
dec
mov
and
call
sbb
fstl
shrb
loope
sub
mov
movsb
pusha
je
imul
xchg
scas
mov
and
scas
or
imull
add
cs
jo
pop
pushl
cmp
push
mov
popa
and
inc
sbb
popf
cwtl
rol
inc
int
subb
push
or
int
mov
je
lret
sbb
and
data16
scas
test
je
mov
mov
cld
aad
or
icebp
lahf
xchg
xor
mov
cmc
into
data16
loope
or
out
repnz
nop
mov
adc
adc
movsl
inc
xor
mov
and
adc
popf
add
pusha
pop
mov
sub
es
mov
inc
out
and
push
outsb
or
hlt
fs
mov
in
sbb
jns
dec
cmp
dec
mov
cmp
aad
ret
dec
mov
pop
xchg
loop
mov
aas
jb
xor
dec
xor
xchg
test
inc
mov
mov
pop
inc
and
push
sub
sub
add
cmpsb
and
adc
sub
movsl
pop
lock
push
addr16
push
nop
lock
lret
xchg
inc
imul
outsl
pop
cs
dec
xchg
insb
sub
fmul
in
mov
lret
icebp
mov
mov
add
xchg
mov
jnp
lods
cmpsl
mov
rclb
push
or
push
xor
ret
pop
aaa
jbe
jecxz
dec
cmp
jb
mov
nop
xor
shll
xchg
cmpsb
out
jmp
mull
test
fxch
pop
and
mov
sbb
jo
jne
dec
sbbb
jle
mov
add
mov
or
test
xlat
dec
jp
shll
jbe
shlb
xorb
enter
imul
xchg
lods
mov
and
jnp
or
cltd
std
xchg
scas
test
imul
in
add
mov
xor
test
lret
pop
lret
dec
data16
mov
jp
add
pop
rorl
popa
test
and
sbb
push
aas
ss
pop
xlat
stos
dec
pop
xchg
pusha
add
add
bound
ljmp
cmp
sub
es
imul
pop
push
sub
aaa
xlat
js
outsb
cli
adc
fadd
sbb
sbb
ds
outsl
adc
sub
sbb
or
mov
inc
aad
mov
push
mov
push
imul
cltd
xor
jl
xchg
test
pop
push
and
ret
lods
pop
mov
sub
aaa
arpl
je
nop
out
pop
push
in
push
cmp
add
add
lcall
movsb
cmpsb
aaa
pop
cmpsb
pop
jo
or
cmp
or
mov
loopne
int
dec
fidivrl
fisttpl
test
in
jl
xchg
inc
jecxz
pop
dec
cmp
rcll
push
ret
dec
push
inc
scas
fs
pop
cmpsb
and
outsb
jle
push
dec
test
mov
sub
mul
push
sbb
cmp
ja
cmp
sub
inc
js
mov
je
call
jge
jecxz
fstpt
cld
jle
inc
int
pop
cli
and
arpl
je
push
pop
pop
push
cli
inc
push
pop
or
fisubrl
inc
mov
mov
lods
mov
mov
push
mov
scas
inc
push
push
push
mov
or
cmp
dec
push
mov
cld
movsb
sbb
cld
bnd
push
mov
rcll
ss
mov
rorb
fildll
test
fmul
fs
insl
mov
test
inc
fcmovnbe
inc
das
push
stc
xlat
jg
push
aam
xchg
push
mov
std
fstps
or
mov
push
xor
push
call
repnz
leave
mov
adc
inc
in
or
and
inc
std
inc
movsb
bound
icebp
mov
mov
inc
aam
jle
rcrb
loope
jp
push
mov
sbbb
cmp
ret
ffree
jle
fsubs
jecxz
inc
dec
cltd
fucomi
clc
fistpl
sahf
fwait
les
push
pop
dec
enter
sbb
fcompl
imul
clc
mov
xchg
enter
lds
out
cmp
cltd
imul
in
adc
in
mov
xlat
andb
xchg
pop
loope
pop
mov
dec
data16
sti
cmp
sub
dec
jg
cltd
stc
cmp
test
jae
sbb
or
adcl
jae
bound
filds
lcall
sub
mov
add
xor
jbe
pop
and
shr
dec
pop
cmp
inc
ret
int3
pushf
das
repz
shlb
mov
adc
int
jbe
shlb
push
or
adc
push
cmp
mov
push
sub
cmp
fwait
pop
andb
into
xchg
mov
fs
pop
fs
gs
inc
insb
xchg
push
mov
gs
inc
or
dec
sbb
pop
add
sbb
sub
insl
lea
inc
cmpsl
or
dec
cmc
test
and
leave
push
push
pop
mov
push
pop
lods
pusha
jb
fsubrs
xchg
xor
daa
pop
jecxz
push
mul
lret
not
ss
jbe
clc
add
das
mov
inc
sarb
shlb
sub
pop
jne
loopne
ja
divl
out
nop
mov
pop
loope
fstpl
out
punpckhdq
mov
sbb
icebp
mov
mov
aas
inc
pop
lds
ja
mov
cmpsb
mov
mov
push
dec
sti
pop
outsb
test
incb
adc
xchg
ds
xor
pop
scas
fiaddl
fsin
cmp
imul
xor
adc
jns
jbe
ret
jecxz
and
addb
push
push
ss
fisubs
test
dec
cs
jne
int3
pop
popa
cmp
test
sbb
cmp
jns
cmp
mov
inc
adc
ss
scas
out
loop
push
pusha
jae
popf
add
enter
cmp
xor
jg
dec
pop
xorb
pop
xor
and
jmp
test
ss
xor
ret
push
xor
and
jg
lods
scas
cmp
icebp
das
dec
dec
iret
mov
int3
ja
push
dec
clc
sub
mov
lea
hlt
movsb
push
or
xlat
lods
int
push
cli
les
icebp
lods
sbbb
mov
push
sahf
in
add
insb
pop
pop
cmp
mov
pop
and
movsl
testb
mov
jae
or
pop
and
daa
dec
push
and
jb
fbstp
mov
push
ret
pop
movsb
pop
aam
or
sarl
stos
lods
dec
daa
adc
test
dec
jmp
fwait
pop
jecxz
fisttps
fsts
fwait
out
xlat
nop
jns
cwtl
push
dec
sbb
mov
cmp
icebp
xchg
dec
ror
cmp
icebp
in
add
arpl
out
imul
and
aam
xor
add
in
repnz
xchg
adc
insb
push
push
lret
mov
adc
loope
aaa
or
sbb
js
dec
sahf
aam
push
scas
mov
jle
adc
xor
iret
adc
pop
xchg
pop
loop
out
pop
xchg
cmc
je
test
int3
int3
fldenv
test
mov
call
mov
in
sarl
jne
lock
mov
lods
stos
or
repz
lea
bound
ljmp
cmpsb
xor
add
xchg
jp
mov
or
mov
jp
mov
ljmp
ss
mov
cmp
sbb
xor
stos
sahf
xchg
inc
das
jns
orb
mov
pop
out
inc
inc
hlt
adc
lahf
adc
jecxz
jmp
into
imul
xor
or
ret
int
ret
popf
xchg
pop
stos
pop
aaa
shld
sub
mov
shrl
repz
js
sub
adc
rol
xor
std
xlat
jmp
jae
data16
jo
arpl
shrl
in
ja
push
adc
stc
nop
mov
add
cwtl
mov
lock
xchg
repz
mov
adc
lret
testl
or
bound
outsb
sti
addr16
pop
adc
mov
mov
sub
pushf
loope
xchg
pop
dec
adc
mov
add
dec
cmp
insb
in
les
dec
xor
popf
sti
fimull
rcll
ljmp
outsb
mov
std
jnp
jl
in
xchg
add
inc
add
test
data16
daa
and
shrb
mov
xchg
imul
ss
repz
pop
sub
adcl
jb
sub
sar
ret
adc
sahf
jns
int
mov
cmpb
imul
prefetch
or
ror
sbb
push
xchg
insb
xchg
mov
inc
push
outsl
stc
and
sbb
mov
popf
xchg
mov
mov
imul
aaa
pushf
fwait
jne
shlb
gs
out
arpl
jl
adc
and
xor
cld
sub
cmp
cmpsb
int3
divb
lcall
push
adc
pop
dec
pop
das
inc
push
ss
hlt
pusha
and
pop
out
je
xchg
pop
xchg
sbb
jnp
aam
ja
js
pop
pop
fstps
fidivl
mov
xorb
lock
pop
lods
xchg
ret
mov
xor
in
xor
stos
incl
xlat
pop
mov
cmp
cs
int
inc
push
out
loopne
xor
pop
rcrl
add
push
stos
fidivrl
add
xor
dec
in
lds
lock
pop
inc
mov
push
or
lret
jecxz
dec
lea
xor
lea
test
jmp
push
test
xchg
outsb
push
js
jmp
arpl
push
out
xor
fcmove
xchg
jns
mov
int3
sbb
inc
aam
cmp
or
fists
shll
icebp
sbb
add
jp,pt
stc
lock
sub
adcl
sti
ret
push
mov
inc
lods
int
and
dec
scas
dec
mov
scas
cmpsl
add
lret
dec
ret
testl
or
sbb
mov
jmp
lods
popa
inc
sbb
lret
loope
pop
mov
inc
dec
lods
lahf
lret
iret
sub
rolb
mov
jno
jb
lret
mov
clc
das
or
add
xor
dec
jge
push
ljmp
or
cmpsl
inc
sbb
push
cli
shlb
ret
aas
rcll
push
addr16
xchg
pusha
sti
xor
and
aam
lahf
or
xchg
dec
imul
xor
es
sub
inc
mov
ror
lret
mov
addr16
divl
cltd
aaa
dec
sub
mov
addr16
jbe
jne
loopne
sub
rclb
mov
jmp
adc
sub
mov
or
add
out
dec
jnp
movsl
mov
pusha
cli
sbb
loop
dec
jbe
cli
stos
hlt
xchg
jmp
cmp
cmp
shlb
fldl
sbb
sbb
dec
jle
mov
push
scas
push
or
xchg
int
or
std
jmp
dec
pushf
xor
test
into
pop
stos
hlt
jle
addr16
lahf
add
push
xchg
fadd
daa
jle
push
sub
dec
jne
dec
sbb
and
push
std
mov
mov
jo
js
jno
or
xchg
insl
mov
ljmp
or
cmp
adc
aad
lods
into
xchg
std
cmpsb
dec
and
fcomps
lret
ds
add
push
pop
loop
clc
loope
inc
or
lock
mov
push
or
push
push
iret
push
push
dec
dec
ljmp
out
call
xor
push
push
mov
stc
insl
and
mov
sub
test
inc
push
and
ret
mov
fldl2t
lret
mov
test
fisttpl
call
rorl
movsl
xchg
inc
ja
das
out
add
mov
mov
jb
test
sbb
cmp
mov
mov
arpl
mov
nop
xchg
cli
ret
inc
dec
inc
jp
divl
jp
dec
int
hlt
pop
push
mov
add
sti
ljmp
testl
pop
enter
jp
pop
dec
jl
pop
fs
imul
js
inc
enter
adc
mov
dec
div
push
sub
mov
movsb
xchg
sti
dec
xchg
aam
imul
adc
jmp
xor
xor
push
xchg
dec
cmpsb
andl
test
lahf
imul
fisubs
jae
std
lahf
out
dec
imul
dec
cli
push
clc
xchg
mov
xlat
cmp
cli
mov
adc
dec
movsb
mov
movsb
int3
cmp
in
sbb
lahf
into
jno
cwtl
inc
sub
or
int
mov
lods
inc
movsl
mov
cmp
pop
das
idivb
mov
movsl
shrl
jne
lahf
je
in
lahf
addb
fsubl
xchg
sub
lock
cmp
out
jecxz
xor
fidivl
inc
sbb
jp
sub
imul
mov
jne
jno
mov
clc
push
leave
jl
cli
scas
dec
pop
sbb
arpl
add
dec
and
or
mov
inc
or
adc
js
je
add
orb
mov
add
lock
mov
fs
adc
repnz
les
and
js
scas
fbstp
pop
fstl
ljmp
es
mov
mov
sbb
cmpsb
xor
dec
sub
ss
or
shl
xor
repz
ljmp
dec
pusha
dec
xlat
jle
out
sub
xor
decb
or
test
jle
fisubrl
pop
dec
push
inc
mov
or
nop
add
adc
sti
stos
mov
pop
cmp
and
mov
scas
or
fisubs
lret
xor
mov
xchg
int3
xchg
adc
jbe
fstl
mov
sub
or
add
dec
loopne
push
je
cmp
insb
lret
daa
xchg
add
cmp
mov
loopne
insl
ja
fnstcw
test
adc
rolb
add
jbe
mov
inc
fs
pop
sbb
and
and
pop
add
xchg
stc
push
clc
jnp
xor
test
ja
std
hlt
cmp
addr16
jg
movsl
repz
pop
jecxz
sbb
test
ljmp
mov
ja
bound
or
cmova
pop
pop
jp
xchg
pop
and
js
outsl
je
cltd
out
ror
arpl
je
popa
xchg
lahf
push
xchg
inc
mov
and
inc
std
dec
ljmp
shlb
sbb
jl
pop
dec
pop
sbb
dec
dec
and
cltd
add
in
push
test
xchg
mov
imul
push
outsl
jns
xchg
in
enter
rsm
lahf
cmpl
sbb
dec
aam
sbb
repnz
push
cmovbe
pop
enter
jg
psrld
arpl
into
ret
cmpsl
out
mov
jnp
or
mov
sub
inc
icebp
push
imulb
sbb
add
out
scas
pop
in
insl
mov
fnsave
cmpsl
shr
insl
lds
test
mov
mov
jae
loope
dec
daa
and
mov
loop
jmp
pushf
dec
lods
pusha
mov
and
ds
jnp
push
mov
mov
mov
scas
sahf
popf
call
add
lcall
inc
lret
loopne
imul
push
mov
js
out
ds
mov
cwtl
stc
push
sahf
test
jo
lods
pop
outsl
cmp
jle
or
pop
add
frstor
cmp
ret
data16
inc
adc
or
pop
loop
push
shlb
mov
inc
pop
adc
daa
or
jl
movsl
repnz
fistps
add
fstpt
xor
neg
adc
stos
mov
push
in
xlat
push
cmpsb
shl
cmpsb
cmp
rolb
pusha
dec
lcall
in
mov
add
dec
push
push
sub
lods
fiaddl
mov
cmp
stos
cli
fiadds
and
xchg
xchg
movsb
fstpt
xchg
sbb
inc
aad
inc
jmp
mov
inc
jb
pinsrw
cmp
push
pop
shll
sbb
sahf
imul
aas
dec
and
adc
jp
xchg
popf
fldt
divb
fisttpl
push
dec
dec
adc
and
loop
dec
hlt
dec
or
dec
push
testl
mov
add
jmp
insl
cs
jl
mov
mov
mov
cs
mov
ret
stos
jmp
add
dec
