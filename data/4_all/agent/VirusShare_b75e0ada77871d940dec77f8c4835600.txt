fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
aam
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
scas
je
adc
pushl
cmp
pop
je
andb
int
sbb
dec
enter
mov
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
je
pop
fildl
shr
jmp
xorl
pop
stos
pop
pop
or
iret
mov
scas
insb
mov
push
popf
clc
mov
movsl
outsl
dec
andl
adc
sbb
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jmp
add
add
leave
in
mov
sub
movl
mov
shll
sbb
sbb
push
mov
mov
dec
jb
sbb
test
jne
pop
xor
adc
adc
rol
mov
sbb
insl
repnz
inc
in
insb
dec
shll
inc
imul
pusha
shr
ljmp
xorl
inc
mov
mov
inc
pop
stc
dec
adc
sti
cld
gs
sbb
or
movsb
jbe
pop
push
pop
push
and
clc
push
icebp
lods
rolb
or
pop
adc
leave
push
adc
add
mov
sbb
gs
mov
psllq
insl
shll
gs
scas
xor
outsl
adc
xor
inc
adc
arpl
push
adc
in
adc
pusha
insb
ljmp
clc
or
push
fwait
add
cmp
ljmp
cmp
mov
mov
add
add
cmp
mov
jae
mov
adc
sarl
ret
mov
outsl
fdivrl
faddl
sbb
mov
iret
cmp
fbstp
inc
mov
popa
cmp
add
push
push
push
sub
mov
cmpl
sbb
sbb
or
add
fcmovnu
mov
inc
sbb
orl
cmp
pusha
outsl
dec
jb
popf
mov
inc
sbb
jge
sub
and
hlt
jge
cmp
cmc
in
sub
jl
cmp
and
out
xchg
and
adc
sbb
fiaddl
or
and
or
push
mov
ret
les
sahf
adc
outsb
mov
cmpsl
jmp
test
je
mov
add
pop
stos
outsl
mov
clc
add
fisttpll
mov
outsb
jl
xchg
adc
shll
mov
adc
jge
lods
mov
cli
aas
mov
inc
sub
sub
call
call
add
fbld
movsb
cs
jo
in
rcrb
pusha
popf
cmp
mov
mov
pop
pop
jb
xor
sbb
cltd
xor
rol
enter
lret
test
dec
int3
int
insb
sti
iret
insb
rorb
inc
mov
dec
sub
push
xor
addr16
xorb
mov
mov
mov
rolb
daa
push
addr16
packssdw
lcall
cmpsl
test
scas
jmp
stos
jle
sbb
lcall
lods
imul
movsb
insl
shll
jns
fistpll
insl
add
mov
rol
push
lcall
aaa
rol
xchg
or
aas
mov
sbb
test
sbb
add
sub
cmpsb
popf
jmp
mov
mov
push
lcall
aaa
adc
call
jae
mov
dec
pop
push
push
sub
inc
test
inc
push
ss
xchg
dec
and
imul
je
aas
add
cmp
pop
sbb
mov
xchg
shll
pop
cmovno
mov
je
and
pusha
xchg
test
divb
mov
add
repnz
pushf
add
gs
xchg
or
push
mov
jne
shlb
in
mov
aad
data16
xchg
sbb
mov
fcompl
addr16
cs
jmp
lcall
call
mov
jmp
in
ss
mov
mov
dec
arpl
mov
loope
dec
outsb
mov
xlat
sarl
out
in
jecxz
mov
fisubs
incb
insl
inc
stc
pop
nop
leave
or
ret
fcomps
scas
jns
sub
pop
add
je
imul
mov
cmp
sub
scas
xchg
jo
jbe
leave
inc
divb
lods
les
fidivrl
jge
inc
pop
xor
mov
sub
and
fwait
cmp
dec
not
adc
decb
sub
inc
cmp
jb
jmp
cs
daa
sahf
int
clc
sbb
loop
or
jne
inc
scas
or
out
popf
lcall
push
outsl
lcallw
mov
popa
jb
imul
imul
mov
outsb
imul
data16
movsb
push
push
imul
stos
dec
push
dec
inc
fdivs
leave
inc
lret
lret
in
cmpsb
imul
imul
add
ret
mov
imul
lcall
inc
js
mov
push
mov
imul
cltd
sub
cmpsb
cmc
div
push
in
mov
hlt
adc
test
push
or
pop
push
push
rcrb
adc
inc
rorl
or
arpl
sar
cmp
adc
ret
cmp
add
inc
sbb
dec
ret
popa
je
in
lcall
aam
push
cmp
fistpl
mov
aaa
xor
and
add
push
or
adc
mov
aaa
mov
xor
push
adc
cmp
cwtl
in
mov
xor
stos
out
je
lock
xor
or
sub
sub
push
inc
push
ret
nop
insl
lcall
inc
insb
movsb
imul
push
pop
push
popa
out
add
mov
dec
ret
insb
and
outsl
imul
scas
add
call
mov
sbb
outsl
mov
mov
mov
push
push
pop
pop
push
mov
mov
mov
pop
jae
xor
sarl
je
insl
cmpsb
imul
imul
lcall
lcall
outsl
jb
loopne
fsubrs
mov
push
dec
test
or
or
or
pop
cmp
xchg
or
or
adc
sbb
pop
das
sub
mov
je
jae
xor
cmp
jmp
sub
jecxz
in
add
inc
pop
scas
or
cs
adc
or
sbb
sbb
cld
adc
fs
in
push
test
popa
je
ret
into
inc
jo
fstpt
cs
lret
faddl
imul
les
mov
stos
aam
aaa
je
fs
sub
adc
inc
cli
pop
mov
sti
ret
in
std
adc
adc
and
jb
in
ret
fs
push
fdivrs
mov
xchg
mov
xor
or
scas
push
jge
jne
lcall
test
daa
push
xchg
cmpsl
xchg
sbb
jb
xchg
stc
jmp
je
out
mov
push
lock
cmp
sub
fidivs
scas
sub
dec
leave
adc
adc
popf
mov
sbb
xlat
dec
sub
fisubrs
jge
xor
push
pop
hlt
addl
cmp
stos
add
pushf
sbb
push
mov
sbb
lret
inc
gs
and
mov
fs
xor
add
push
in
ja
add
je
movsl
rorb
mov
sbb
insl
test
xor
dec
push
je
aas
popl
jl
int
push
mov
test
mov
inc
test
imul
faddl
jae
mov
mov
call
mov
push
cmpsb
sbb
roll
jae
stos
rolb
dec
lods
lods
outsl
scas
fisttps
rorl
fs
xor
clc
stc
cli
sti
cld
pop
xchg
gs
dec
outsl
arpl
xchg
xchg
gs
outsl
jne
leave
push
xchg
arpl
inc
xor
shll
lcall
dec
shll
xor
xor
xchg
lods
push
or
push
pushf
loopne
icebp
jo
popa
movsl
jne
lret
adc
fmull
push
pop
fcmovnb
ret
jno
mov
and
fstps
mov
push
int3
mov
cwtl
adc
mov
aam
cmpb
rorb
sbb
test
adc
pusha
dec
push
dec
inc
xchg
mov
and
movsl
sbb
dec
push
xchg
js
dec
xlat
outsb
aam
je
or
nopl
adc
pop
scas
pop
jge
nop
fs
mov
ja
mov
fnstcw
push
push
push
add
rorb
outsb
aaa
je
xorl
jge
in
sbb
push
nop
and
or
sbb
add
insl
je
test
sbb
inc
and
xchg
int3
enter
loopne
fsubrs
or
push
jbe
pop
lock
pusha
xor
int3
clc
vmwrite
enter
aaa
lock
imul
clc
ret
push
leave
fmul
insb
int
lock
sub
push
pop
or
cltd
cmp
pop
lods
xchg
push
adc
out
fcomps
jae
cmp
fwait
sub
in
hlt
ja
xchg
les
or
addb
jp
mull
or
inc
push
xor
hlt
jae
xchg
jo
xor
dec
and
adc
fcomps
push
add
cmp
sub
push
xchg
clc
je
adc
inc
in
dec
pop
xchg
jg
push
jo
test
fstl
rcll
ja
outsl
insb
shll
js
mov
ja
outsl
outsl
imul
mov
sub
lds
gs
shll
jne
push
jb
push
xor
jbe
xor
jo
daa
add
dec
adc
add
call
sti
ret
dec
pop
jb
leave
or
gs
add
popf
or
ja
add
movl
sbb
mov
xor
enter
stc
int
stc
jno
enter
adc
hlt
xchg
nop
out
mov
mov
test
mov
jns
js
jl
enter
je
jge
jl
addl
fcoml
jns
inc
lods
imul
xor
or
ss
xchg
dec
xchg
xchg
push
aam
xor
xchg
inc
push
add
outsb
jo
movsl
mulb
outsl
fs
testb
mov
sbb
das
rcll
pop
ss
pop
dec
cmp
lcall
pop
push
outsl
lcall
jle
push
sub
push
fmull
push
dec
push
push
mov
lahf
or
adc
sbb
pop
cmp
data16
and
movsb
pop
xor
incb
mov
cmp
shll
xorb
mov
ret
xor
add
lods
jl
iret
add
fwait
pop
and
mov
mov
subb
cmp
mov
pop
pop
jl
fildll
xchg
xchg
cli
test
adc
notb
and
cmp
cmpsb
aam
dec
push
pushf
jne
into
loope
cli
adc
push
subl
push
nop
and
adc
add
xor
sahf
adc
adc
das
ds
les
roll
scas
in
in
xchg
sub
je
or
pop
lcall
je
cmpsb
imul
lea
nop
std
sbb
xor
fs
dec
fcmovnu
fisttpll
xor
loopne
loop
xor
shll
in
out
call
ljmp
lock
xor
leave
mov
push
or
jmp
pop
cmc
xchg
pop
nop
pop
dec
mov
or
add
inc
xchg
lods
dec
adc
enter
cmp
add
jl
nop
sub
cltd
popa
cld
cld
or
mov
add
or
and
or
jnp
enter
dec
or
jmp
jp
jb
inc
and
cld
xor
add
iret
dec
lea
mov
pop
xchg
or
pop
jns
push
dec
sbb
insl
testb
mov
inc
mov
dec
xchg
fsubrp
ja
or
jl
adc
sub
shll
xchg
xchg
stos
pop
pop
icebp
lret
jl
push
mov
fadds
mov
sbb
and
or
jne
adc
jp
lock
cmp
add
nop
cltd
pusha
xchg
and
push
sbb
mov
pop
pop
push
ljmp
push
push
mov
add
and
test
in
insl
loop
or
insb
push
outsb
push
jle
or
lret
xchg
nop
and
shlb
adc
pop
lock
sbb
mov
shll
fmull
lcall
cmp
jle
daa
inc
mov
adc
cmp
cs
pop
mov
mov
mov
and
push
adc
push
mov
add
fcom
and
push
sub
xor
cmc
dec
ss
movsb
fadds
inc
sbb
pop
push
sub
jne
jp
add
inc
xor
jne
adc
inc
mov
cmpsb
push
sbb
pop
pushf
pop
push
pusha
or
add
jo
out
lcall
jl
inc
mov
add
gs
mov
outsb
cld
cmc
and
push
push
push
loop
jne
rcr
cld
or
add
pop
pop
xor
push
cmp
and
lcall
push
mov
inc
push
test
jl
sbb
hlt
pusha
mov
xchg
gs
jo
push
imul
mov
push
cmp
lret
mov
lret
imul
lret
push
sub
mov
fdivl
mov
arpl
mov
pop
cs
insl
lea
add
xchg
cmp
call
or
cmp
je
lcall
fs
pushf
insb
cmp
or
insl
andl
or
xchg
imul
pop
xchg
gs
jns
pop
lods
lods
insb
je
scas
scas
dec
popa
lret
mov
or
outsl
shll
and
insb
aam
andnps
je
jnp
mov
mov
iret
fmull
mov
push
hlt
adc
and
int3
xor
cld
sbb
pop
sti
fs
xor
inc
lcall
mov
cmp
dec
xchg
mov
mov
push
repnz
imul
xor
sub
add
push
inc
adc
or
daa
or
and
jo
xor
dec
sti
clc
clc
jae
gs
mov
push
pop
insb
push
sub
xor
cs
jmp
dec
jo
push
push
push
lret
jb
inc
pop
push
lret
mov
js
arpl
int
jmp
repz
push
les
in
lods
inc
dec
hlt
push
push
fsubl
push
push
push
pop
push
sbb
push
iret
out
push
aas
fmuls
push
lea
xorl
sub
or
sbb
add
add
ret
icebp
push
mov
sub
push
fisttpl
inc
sbb
fdivr
arpl
pop
push
adc
dec
in
lock
dec
shrl
xor
pop
jbe
mov
lea
pop
sbb
add
push
jnp
cmp
pop
pushl
push
or
rclb
mov
xor
jg
add
hlt
inc
or
div
imul
ret
lods
add
sbb
cmp
jbe
push
call
out
jne
jo
mov
mov
push
mov
fwait
mov
mov
es
jae
adc
push
or
nop
dec
sahf
inc
cmp
adc
out
cmp
inc
rcrb
paddd
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
push
sbb
cld
add
int3
shr
in
inc
aam
pop
or
and
pushf
imul
sbb
push
insl
add
sbb
mov
fxch
push
adc
adcb
adc
in
jbe
push
sbb
cld
cmp
sbb
enter
xchg
aaa
mov
out
sub
imulb
push
or
adc
clc
pop
or
jle
push
or
in
and
movl
fsubs
mov
fimull
pop
sub
mov
mov
fbstp
inc
pusha
incl
mov
mov
inc
sub
test
mov
sub
push
pushl
lods
mov
add
push
sbb
cmovbe
les
les
push
insl
push
push
lods
pop
iret
mov
sub
jmp
mov
sub
sbb
ds
insl
fistpl
or
sbb
sbb
push
push
mov
xor
lea
add
ret
enter
sub
call
cmpsl
mov
xor
and
adc
inc
int
inc
add
cmp
jl
add
in
loopne
sub
add
std
ja
lcall
or
mov
sbb
stc
sti
mov
addl
pop
adc
adc
pop
xchg
mov
loopne
loopne
test
add
or
mov
push
lea
daa
push
sahf
mov
push
lea
fstl
push
int
rcr
sbb
jnp
inc
clc
add
jbe
mov
adc
adc
lcall
mov
mov
mov
daa
sbb
adc
cli
jl
jo
in
fimuls
inc
movsb
mov
push
test
cmp
stos
adc
mov
adc
dec
mov
inc
push
push
mov
inc
add
jmp
push
push
leave
push
pop
scas
sub
aad
jo
mov
push
mov
cs
xchg
rclb
rcll
lds
fcoms
add
pusha
add
js
xor
andl
por
push
lret
fcomi
cmp
cltd
add
or
out
out
cwtl
jno
push
mov
push
jne
lea
out
into
sbb
pop
cmp
pop
call
pop
mov
movsl
add
sub
xor
icebp
aad
lea
mov
sub
push
pop
das
cmp
lcall
rcrb
sub
dec
mov
je
fimull
mov
sub
inc
sbb
adc
jo
cmp
cmpw
jne
fwait
or
sub
insb
cmp
fwait
xchg
jmp
lods
push
fs
sbb
add
and
sbb
nop
fimuls
add
push
pushf
adc
xlat
mov
mov
rcll
fnsave
cmp
ficoml
inc
xor
popa
pop
imul
dec
dec
lods
inc
lods
enter
jne
out
inc
dec
scas
cli
lods
rolb
popa
ret
andl
test
andl
xor
andb
and
jmp
mov
sub
push
test
sarb
jne
sbb
adc
and
mov
add
mov
rolb
rcl
test
or
xchg
pop
xor
hlt
mov
cmp
adc
iret
andb
or
lods
mov
xor
sbb
popa
in
addl
push
arpl
pusha
jb
inc
enter
xor
jbe
dec
adc
andl
jbe
xchg
adc
test
popa
adc
ja
jnp
mov
in
pop
cmp
lods
push
sbb
call
push
xchg
push
test
pushf
mov
out
sbb
push
sbb
sbb
adc
push
lods
jnp
inc
dec
xchg
gs
bound
jb
xchg
gs
repnz
gs
outsb
add
clc
or
cmpsl
add
push
xor
data16
jbe
sub
outsl
jae
fs
cmp
add
push
push
add
adcb
fstpt
add
or
xor
movsb
add
or
xor
inc
pop
lock
lret
loope
push
and
sbb
sahf
and
mov
dec
fs
sbb
jge
xchg
pop
mov
xor
decl
mov
jmp
add
or
or
push
mov
daa
jp
aaa
sub
add
dec
and
inc
test
cmp
jne
call
jmp
add
pop
mov
xor
jb
scas
jl
mov
dec
push
xor
pop
xor
cmpl
ja
inc
imul
mov
jns
ret
lock
or
pop
dec
mov
dec
mov
sbb
and
nop
cwtl
call
sub
insb
inc
popa
arpl
and
and
mov
cs
cld
xchg
and
xchg
adc
js
lods
inc
in
mov
jmp
out
iret
pushf
cs
or
push
out
je
repnz
mov
pop
idiv
add
mov
inc
sub
jle
add
pop
cmp
fwait
add
rorb
clc
gs
add
xchg
add
xchg
push
fistpl
decb
or
rcrb
adc
fstps
dec
cmp
ud2
sahf
movsl
inc
jo
addr16
test
and
inc
outsl
jo
inc
pop
sbb
sbb
add
dec
shll
jbe
inc
or
xor
insb
gs
js
pop
cs
pop
fildll
add
mov
leave
push
push
pop
push
and
inc
mov
leave
gs
je
xchg
gs
cld
gs
imul
lea
movsl
lcall
fisubrl
into
xor
xor
and
xor
pop
sbb
add
es
sub
insb
sbb
pop
mov
cmp
adcl
or
in
insb
mov
lret
cs
push
push
data16
lods
jl
pop
adc
je
pusha
sbb
or
cmp
aad
enter
aam
xor
pop
fdivr
adc
xor
jmp
cmp
stos
lock
adc
and
inc
repz
jmp
sub
xchg
in
sub
or
fdivr
nop
cmpsl
mov
fcomps
add
adc
pusha
nop
or
add
push
dec
inc
xchg
dec
test
pavgw
jcxz
inc
jp
adc
xchg
adc
mov
addr16
hlt
xchg
andb
push
jb
dec
sahf
loopne
loopne
orb
bound
lods
pusha
add
jnp
dec
sahf
and
mov
call
fwait
bound
fdivs
out
add
int3
add
mov
sub
test
sub
mov
test
or
sub
or
jae
sub
mov
or
loope
mov
test
pop
je
loope
rcr
mov
or
ja
mov
mov
lock
sbb
pusha
gs
adc
dec
xor
mov
mov
add
add
shlb
or
jo
jl
pop
jae
jo
or
mov
mov
loopne
cmp
into
dec
push
and
dec
mov
mov
fldenv
mov
pusha
aas
cmp
lcall
data16
mov
add
cmp
mov
mov
idiv
xor
and
inc
or
add
or
repnz
jbe
aam
dec
movsb
dec
mov
ret
add
or
push
sub
jbe
jmp
imul
sub
scas
imul
sub
pushl
aam
lock
dec
jo
or
fcoms
ret
mov
rorl
movb
add
add
and
mov
sub
jne
adc
pop
nop
push
dec
jmp
mov
and
add
push
add
push
add
out
xor
cmpsb
hlt
or
es
shll
test
cmpsb
mov
lcall
xor
insl
lcall
ja
lcall
inc
add
adc
lret
cmpsb
imul
push
imul
imul
lcall
loop
js
lcall
movsb
jae
fwait
cmpsb
mov
aam
mov
es
jb
add
nop
push
movsb
subl
dec
dec
inc
xor
push
cwtl
add
loopne
xchg
mov
push
rclb
scas
in
push
xchg
incl
push
push
inc
push
xor
cs
insb
pop
dec
dec
add
push
or
add
add
dec
gs
gs
fbld
dec
outsl
fs
gs
imul
xlat
std
xchg
inc
inc
jb
popa
je
push
push
imul
jnp
sbb
insb
outsl
jae
dec
popa
outsb
fs
add
add
jg
mov
jo
xor
outsl
jb
cmovb
inc
outsl
outsl
je
gs
cmp
outsl
les
mov
add
js
add
mov
fisubrl
push
test
or
fs
add
mov
dec
insb
incl
lock
inc
dec
push
adc
jne
nop
pusha
nop
stc
insl
add
add
call
lds
jmp
pop
orb
push
xor
push
push
movl
das
mov
arpl
fs
rolb
mov
jae
cld
outsl
outsb
mov
mov
mov
mov
inc
or
rolb
jge
out
adc
pop
add
add
dec
nop
test
nop
je
lea
lret
jg
xor
add
push
mov
cmpsb
sbb
pop
jne
nop
nop
mov
in
je
and
mov
movzwl
mov
add
mov
add
jge
jmp
lock
popa
mov
xor
cmp
mov
cmp
je
lea
jnp
sbb
push
push
cmpsl
popa
sub
fs
dec
mov
lret
in
bound
dec
jb
ljmp
idiv
rclb
and
cld
pop
lea
dec
nop
testb
xlat
pop
ja
push
jmp
pop
pop
sbb
dec
call
testb
mov
pop
mov
dec
mov
pop
xchg
insl
repnz
add
inc
push
push
add
inc
inc
push
add
xor
add
add
nop
add
enter
xor
mov
inc
fadds
pop
mov
jg
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
bound
mov
outsb
and
inc
dec
push
and
fs
out
mov
inc
jnp
cmp
sbb
add
jle
add
addl
mov
add
jae
outsb
pop
ret
adc
xlat
popf
outsl
call
pop
add
push
imul
fwait
lods
dec
add
shll
dec
dec
adc
lods
and
add
or
into
adc
adc
jo
scas
outsl
add
test
pop
add
pop
mov
pop
sub
push
jnp
mov
or
pop
push
pop
mov
push
dec
jo
cmp
pop
mov
daa
or
push
sub
out
mov
les
out
inc
lcall
cmp
xor
mov
lcall
ud0
pop
or
xor
add
shll
lcall
test
push
xchg
push
push
jg
mov
shlb
sub
or
inc
rcr
adc
push
js
and
ljmp
int
stos
add
and
and
jmp
and
dec
jne
mov
ljmp
mov
dec
or
adc
fisttpl
jne
icebp
inc
hlt
std
pop
mov
jg
daa
stos
and
test
out
mov
push
xor
push
pop
push
out
repnz
call
pushl
je
mov
jg
jbe
xchg
pop
push
pop
ljmp
inc
mov
inc
dec
or
sub
pop
daa
mov
jnp
jmp
adc
push
sbb
adc
icebp
incl
sarl
pop
jle
sbb
loope
aaa
cld
aad
jg
mov
lahf
xor
push
cmp
mov
lcall
push
add
or
add
fs
in
mov
in
or
ljmp
out
jg
sub
jae
out
cs
adc
add
decl
adc
call
add
dec
rcrb
lcall
pop
push
inc
rol
les
add
ljmp
fs
dec
enter
mov
mov
imul
pop
int3
inc
add
lock
mov
arpl
outsl
cmp
rcll
shlb
jge
mov
mov
rclb
imul
movsb
movsb
movsl
ja
idiv
cmpsb
cmpsl
shll
stos
lods
dec
or
mov
or
pushl
fcmovnu
mov
jp
mov
jge
les
push
lock
popa
lea
add
cmp
add
jg
clc
cld
jl
clc
mov
mov
mov
inc
divb
add
cmpsl
cmp
call
pop
ja
pushl
std
aaa
mov
or
fcompl
pop
je
inc
add
cmp
outsb
cld
mov
sbb
out
adc
inc
lcall
incl
hlt
outsl
push
dec
adc
jne
push
adc
jl
scas
in
mov
decl
loope
test
das
popf
dec
or
and
in
in
pop
cs
mov
xor
icebp
xor
jb
lcall
loopne
mov
loop
jecxz
pmulhuw
cld
pop
clc
je
push
sbb
out
call
ja
mov
pushl
js
lea
push
cld
loope
or
sbb
in
outsb
jg
sti
fildll
or
add
push
push
sub
pop
push
cmove
inc
dec
pop
shll
sub
inc
ret
add
or
ret
or
lock
and
out
mov
push
aaa
inc
mov
daa
push
add
mov
xor
mov
jne
xor
out
cltd
in
xchg
cmp
lcall
decl
jno
sub
lea
decl
and
or
mov
mov
cmpsb
je
mov
fstpl
push
pop
pop
shr
pop
push
mov
push
pushl
lock
xchg
out
add
aam
lret
mov
fcomp
fcmovu
cld
dec
pop
rcr
fstp
out
sbb
add
insb
int
fs
jb
sti
mov
or
inc
jne
jbe
or
popa
js
popf
jg
ljmp
inc
jnp
fmulp
rcrb
jle
push
mov
xchg
or
lcall
in
addb
test
dec
xchg
es
add
adc
cmpsb
jmp
push
mov
popa
cmpsb
imul
mov
cltd
pop
lcall
fbstp
in
aaa
popf
insb
addr16
gs
bound
int
jp
test
les
lret
insl
xlat
xor
enter
mov
lret
xor
ss
je
int
ror
or
fistl
mov
sbb
jo
rcr
mov
pop
dec
mov
mov
inc
lcall
and
add
ljmp
push
mov
jmp
push
divb
shlb
lahf
testb
push
adc
pop
movsb
insl
fmuls
incl
insb
movsb
add
lret
fadd
pop
in
push
movw
mov
out
je
adc
push
mov
out
popa
pop
addr16
gs
sahf
out
pop
lcall
jmp
das
pusha
push
insb
mov
sahf
jo
xor
outsb
lcall
and
call
pushl
mov
wrmsr
or
loopne
mov
sub
mov
sub
jmp
sahf
xor
fdivl
adc
out
cli
decl
std
popa
pop
loope
mov
sbb
aam
pop
cmc
push
lcall
loopne
jmp
shrl
sub
pusha
mov
repz
iret
dec
pop
es
pop
int3
push
sar
and
decb
xchg
push
or
pushl
mov
fidivs
insb
adc
lcall
popa
xlat
xchg
imul
jg
ljmp
inc
fstpt
add
es
adc
pop
jbe
or
xchg
lcall
lret
gs
out
data16
es
xor
push
cmpl
inc
jmp
movsb
aam
clc
lods
sti
pop
or
dec
pop
jg
rol
fcmovb
enter
cs
push
push
stos
pop
pop
decl
xchg
jmp
int
into
and
xor
gs
rorb
rcrl
cli
incl
rcl
dec
and
test
ret
andl
out
add
mov
sti
push
repz
sbb
and
hlt
push
hlt
incl
movsl
dec
outsb
or
mov
sbb
clc
stc
or
nop
lret
decl
incl
push
sub
pop
xchg
pop
imul
mov
ja
lret
add
mov
xor
cmp
or
inc
add
dec
bound
add
movsl
mov
aam
xor
mov
ljmp
cld
fimull
add
mov
mov
dec
scas
add
in
in
mov
cmpl
out
add
in
out
sar
pop
clc
jg
out
push
mov
jmp
dec
popf
and
lods
push
hlt
inc
mov
insl
sti
xor
xor
out
sbb
dec
or
sahf
ds
jecxz
mov
sub
pop
sub
and
mov
nop
insb
adc
pushl
inc
and
sub
imul
inc
add
outsl
jmp
bnd
popa
hlt
sub
xor
imul
dec
je
adc
jle
jecxz
lcall
dec
and
jne
jp
lea
jmp
adc
fcmovnb
fsubr
pop
sub
decl
push
add
xor
test
push
mov
fdiv
mov
cmp
lock
push
sbb
push
mov
mov
test
push
cmp
push
rorb
push
imul
lea
dec
sbb
mov
call
jo
push
mov
addr16
xor
or
mov
add
inc
or
sub
cmp
pop
testl
mov
jbe
sti
pop
cld
std
addr16
fldt
dec
sarl
inc
jb
lock
mov
mov
pushl
cmc
hlt
out
mov
dec
pusha
mov
pop
mov
testb
fs
xchg
mov
call
add
jnp
movsb
or
movsw
mov
movsb
push
adc
jmp
push
mov
pop
pop
imull
rclb
cmp
push
decl
adc
add
jns
hlt
push
adc
adc
sub
xor
and
push
call
cmpl
aaa
lock
stos
pop
fs
add
add
ljmp
notl
in
add
add
imul
or
pop
call
adc
dec
or
sbb
jg
jae
maskmovq
cltd
std
or
jmp
stos
and
das
cmpsl
sub
or
cmp
mov
mov
aad
xchg
cld
push
aas
mov
aas
popa
je
insb
in
je
sti
arpl
or
mov
and
xor
cmp
pop
stos
clc
add
stos
fcompl
mov
enter
in
aad
lcall
sahf
lods
stos
jb
in
xchg
inc
mov
xor
xor
mov
mov
and
insb
pushf
add
call
maxps
and
das
pop
sbb
ret
sbb
push
vmovlps
mov
add
lcall
dec
cld
xchg
aaa
pop
lods
outsb
shll
mov
cmp
pop
mov
push
aad
jb
or
mov
mov
leave
mov
iret
and
mov
mov
hlt
pop
shrl
in
outsl
aas
dec
inc
cmc
jo
idiv
inc
stc
xor
cli
sti
test
dec
push
push
gs
adc
lods
cli
mov
cmpsb
enter
sub
gs
xchg
jmp
adc
jge
cwtl
pop
subb
or
push
inc
or
gs
add
rcr
cmpb
outsb
sub
jle
mov
jmp
ret
pusha
int3
stos
aad
mov
and
xor
incl
add
pop
cld
mov
inc
rcrl
pusha
jl
cmp
jecxz
dec
xchg
pusha
add
adc
jmp
xchg
decl
cmp
jmp
and
iret
outsl
std
jg
mov
ficoml
push
add
jnp
mulb
xor
sub
incl
fsincos
fdivr
out
mov
addr16
adc
fnstsw
mov
call
mov
mov
ljmp
or
push
ficomps
hlt
fadds
adc
jl
push
addr16
pop
xchg
push
or
je
mov
dec
xorl
cltd
push
jmp
mov
inc
es
dec
icebp
jmp
inc
mov
jae
add
aas
inc
sbb
push
mov
mov
mov
pop
add
sbb
sub
pop
inc
popf
stos
psubsb
call
xchg
in
out
cld
push
and
push
sbb
sbbl
sbb
dec
jbe
adc
and
es
andl
cld
mov
mov
std
daa
es
rorb
cmp
addr16
aas
cmp
lcall
or
add
jmpw
and
inc
adc
inc
jmp
inc
inc
ds
loopne
push
push
sbb
dec
outsb
dec
jbe
dec
mov
insb
inc
sub
jo
sbb
shrl
mov
adc
inc
sbb
mov
ret
je
inc
aam
pop
mov
popa
int
pop
push
imul
je
fstpt
or
add
sbb
xchg
push
xchg
stos
imul
push
cld
test
in
and
or
dec
and
xchg
movsl
outsl
lcall
and
daa
cmp
test
sub
sub
mov
sub
movsl
cmp
das
xor
inc
movsl
pop
lcall
xor
xor
dec
loop
pushf
xor
lret
pop
cs
xor
inc
out
push
lock
sub
inc
pop
repnz
add
mov
jnp
ja
je
nop
or
lock
cld
decl
or
jno
xor
push
or
or
insb
push
movaps
adc
mov
mov
jo
xor
xor
sub
adc
jbe
mov
sbb
sbb
inc
ja
test
sbb
push
scas
aam
incl
stos
jae
xchg
or
int3
mov
push
aad
loop
mov
mov
jo
sub
loop
dec
nop
pop
fsubrl
xchg
xchg
sub
dec
pop
lcall
fwait
js
pushf
popf
loope
mov
test
xchg
push
adc
or
pushf
nop
call
or
sbb
pusha
inc
dec
cmp
lahf
bound
or
xchg
xor
test
ljmp
gs
fs
test
mov
jo
out
imul
insl
or
cmp
iret
sbb
fcmovnu
mov
pop
cli
cmpsb
jmp
sbb
fbld
mov
fucomp
mov
lret
mov
push
mov
cs
xor
xchg
jnp
insb
arpl
sub
lret
test
out
in
iret
fs
js
push
pusha
fs
xchg
outsb
filds
je
popa
insb
inc
jo
push
je
sbbb
fistpl
add
das
cs
dec
and
lods
adc
cld
call
decb
dec
push
push
scas
test
in
push
fs
xor
in
mov
mov
cmp
pop
sbb
pop
aaa
pop
pop
enter
pop
xchg
pop
lock
clc
jg
jmp
fimull
clc
test
call
nop
add
fistpl
lds
mov
cmp
mov
incl
ret
inc
cltd
sbb
mov
pusha
pop
add
pop
loop
jg
aam
iret
push
mov
mov
ss
add
lods
aaa
jg
mov
push
cmp
in
jmp
sub
push
das
cld
outsl
std
enter
mov
mov
aaa
popa
in
jne
mov
sbb
jg
incl
xchg
js
push
in
aas
inc
mov
fldt
cmp
cmc
incl
leave
sbb
rcl
subb
in
push
and
js
push
mov
call
das
sub
enter
adc
insl
push
imul
cmp
incl
enter
sbb
fsts
das
dec
or
pop
and
rol
repz
ljmp
mov
cmpb
sar
pop
mov
lods
xor
and
popf
pop
inc
fldt
push
sti
int
or
mov
rcl
dec
std
dec
out
mov
jecxz
int3
not
mov
xchg
insb
das
ds
incl
popf
xor
test
rorb
push
fs
call
add
push
push
aaa
hlt
aas
pushf
lret
mov
cs
cmpl
push
sbb
adc
adc
jne
or
mov
mov
dec
faddl
add
pushf
out
mov
inc
movsb
aam
and
mov
loopne
loopne
jg
cs
lret
inc
sub
movsb
cmp
je
mov
jp
fnsave
dec
sub
incl
adc
in
adcb
jg
pop
pop
movsl
pop
sahf
aam
cmp
pop
cld
das
insb
icebp
imul
inc
sbb
inc
xchg
mov
ja
mov
lcall
or
pop
enter
shlb
ljmp
stos
call
lcall
mov
data16
sbb
sub
inc
fidivl
add
decl
lds
inc
sbbl
add
sbb
push
out
hlt
fcomip
sub
imul
cli
add
jg
push
jns
gs
push
mov
push
int3
in
in
out
out
inc
test
and
cld
xchg
mov
mov
mov
je
pop
clc
rolb
mov
lcall
jge
sbb
mov
arpl
pop
push
adcl
int3
mov
push
lea
push
fildll
cli
ss
jmp
or
jmp
xor
and
dec
jmp
pop
adc
inc
pop
setae
into
addr16
cld
xor
cmp
and
sub
sbb
jp
add
jmp
push
and
lock
push
icebp
inc
dec
xchg
aas
insl
enter
push
and
outsl
sbb
xor
pavgb
cld
xor
adc
jns
std
clc
std
icebp
jmp
sbb
lock
xor
repnz
idiv
adc
loop
sbb
push
mov
push
jp
movaps
add
lcall
mov
cld
cmpsl
hlt
es
mov
out
or
mov
ljmp
aad
push
sub
pop
or
repz
sbb
sbb
pusha
and
push
fnstenv
cmp
je
push
gs
popf
outsb
fs
mov
jno
mov
shlb
pop
inc
mov
xor
lahf
fsubrp
jg
cmc
subb
fdivrl
mov
add
test
adc
loopne
movsb
scas
in
inc
filds
mov
ljmp
dec
popf
dec
push
pop
aad
mov
adc
adc
pop
test
pop
sahf
and
inc
cwtl
jl
test
mov
mov
adc
push
outsb
dec
inc
mov
mov
je
mov
sbb
inc
mov
sbb
xor
mov
pop
adc
mov
inc
rolb
inc
cld
push
or
je
loopne
fnsave
je
jb
je
aam
int3
lret
sub
mov
and
or
fmuls
or
ljmp
lock
jno
jp
or
sub
je
mov
in
mov
pushf
aaa
push
adc
push
clc
push
inc
stos
in
ja
xlat
inc
dec
mov
add
jecxz
lcall
dec
hlt
push
cmc
inc
arpl
nop
inc
stc
mov
sbb
notrack
xchg
daa
jb
fdivs
and
xchg
std
mov
xor
and
fdivrl
repnz
popa
lcall
cld
outsl
outsb
bound
or
in
add
and
les
incl
int3
dec
sbbl
inc
mov
sub
mov
xor
stos
adc
clc
mov
mov
mov
fcomp
in
loop
xor
rorb
test
mov
push
sub
punpckhdq
in
pop
fists
leave
or
mov
subb
mov
pushl
or
and
add
lea
fildll
dec
mov
xor
push
push
pusha
inc
push
jae
cmc
jg
add
cld
adc
cmp
adc
mov
xor
inc
lahf
jae
sbb
pop
push
int
fcos
lods
fisttps
xor
or
int
in
jg
sub
inc
jle
fistpl
adc
push
dec
xor
jle
or
add
sub
xlat
das
icebp
decl
and
add
sub
pop
pop
push
aad
iret
ss
pop
cli
pop
xor
repnz
add
pushf
pop
shlb
cmp
pop
fcoml
hlt
push
cmpl
cmp
sbb
lcall
jo
and
hlt
sbb
and
adcl
mov
or
and
test
and
icebp
mov
andb
add
jl
outsl
mov
rclb
and
insl
decl
push
sbb
mov
mov
dec
mulb
sti
incl
adc
bound
inc
push
jbe
inc
inc
das
cmc
jg
inc
sbbl
inc
cs
mov
mov
popa
pushl
jbe
push
xchg
jae
jns
stc
mov
push
adcl
mov
xor
mov
jl
movsb
dec
pushf
outsl
sbb
lea
popa
push
pop
mov
sub
jnp
inc
adc
test
int3
jae
mov
xor
xor
pop
pop
cmp
inc
jns
xchg
in
rorl
insb
mov
popa
xchg
push
mov
xor
mov
xor
mov
or
mov
xchg
push
pop
jmp
pop
xor
jmp
jmp
cwtl
enter
outsl
inc
lcall
cmp
pop
mov
xor
cli
call
mov
ss
xor
sbb
mov
jno
rcll
lret
ljmp
push
rolb
pusha
lret
int
dec
fistps
daa
inc
ror
je
in
xor
adcb
es
adcb
cmc
lcall
dec
inc
and
dec
mov
xlat
pop
push
fwait
xor
push
pop
ljmp
adc
clc
push
loopne
inc
push
xchg
cmp
xchg
push
mov
or
filds
cmc
inc
mov
test
stos
nop
test
into
xor
adc
incl
insb
clc
movsb
sahf
inc
test
mov
push
dec
popa
ret
cmp
cs
push
sarl
sbb
jae
mov
incb
mov
jo
loop
in
out
inc
sahf
decl
std
mov
add
dec
mov
in
inc
push
inc
push
dec
or
sub
fstps
out
xor
test
inc
in
lret
cmp
cwtl
les
sub
mov
xchg
or
xlat
inc
or
aad
push
push
dec
mov
fstps
test
adc
fimuls
xchg
mov
insl
fcomps
push
and
iret
shrb
push
pushf
into
nop
sahf
or
sbb
push
call
inc
aaa
pop
add
je
pusha
cmp
or
sub
fstpt
clc
call
nop
xchg
or
xchg
xchg
inc
js
mov
clc
push
mov
xchg
inc
add
orl
mulb
adc
test
mov
adc
incl
std
push
addr16
mov
jb
jmp
insl
and
mov
adc
sbb
pop
in
leave
into
pop
call
mov
inc
cmp
repz
sub
lds
popa
push
sub
loope
aam
push
mov
leave
xchg
lods
or
jg
jg
sbb
leave
inc
jl
cmp
jg
pop
std
incl
or
jg
pop
ret
testb
inc
lcall
ljmp
pusha
push
enter
imulb
repnz
inc
mov
ljmp
adc
add
lods
dec
sahf
rcrb
insb
add
call
mov
lcall
repz
fcmovnb
and
jmp
rcrl
push
and
or
pushl
les
jne
push
add
inc
call
popa
lret
lock
mov
fnstcw
lods
daa
hlt
cld
add
pushf
push
or
xor
orb
and
fs
call
test
ss
xlat
xor
jmp
ljmp
scas
mov
loope
fldcw
lea
push
lea
rclb
or
push
lahf
mov
arpl
fsubl
negb
jg
sub
out
call
arpl
cli
mov
fwait
jns
stos
lods
sbb
xlat
andb
lea
dec
jle
inc
cmpb
sbb
xor
mov
ljmp
gs
or
popa
shlb
cmp
mov
shl
adc
orb
cltd
xchg
add
mov
inc
push
or
sbb
mov
pop
mov
sbb
idiv
mov
add
fmull
mov
jo
inc
xchg
decl
sub
bound
mov
cs
add
das
outsl
push
sub
xor
pusha
mov
sbb
je
add
jl
cmc
lods
test
cli
cmp
aas
jae
insl
or
cmpsb
push
or
or
cmp
lcall
ljmp
jo
jmp
cmp
jns
mov
adc
lods
imul
push
mov
cmp
inc
mov
loope
stc
xor
dec
aad
cmp
arpl
sub
xor
mov
or
imul
sbb
movsl
imul
xchg
cli
lcall
or
or
adc
xor
mov
je
notb
inc
std
mov
xor
dec
mov
dec
fdivr
in
loopne
repnz
hlt
mov
adc
sub
popa
das
fsubrs
sbb
adc
daa
pusha
jnp
nop
xor
aad
sub
xor
mov
call
push
stos
mov
and
repz
decl
fimuls
ss
xor
inc
jg
xchg
or
push
push
pop
xchg
inc
push
bound
push
or
sbb
pushl
int3
or
nop
daa
das
stc
data16
sar
popa
fsub
sbbb
shlb
test
jg
push
add
mov
mov
adc
ljmp
or
or
das
imul
andl
call
mov
dec
test
jb
out
adc
jge
cld
ficoml
inc
cmp
or
scas
lods
xchg
clc
insb
xlat
andl
enter
or
sub
adc
lcall
push
add
jp
dec
cmp
jg
jbe
push
or
icebp
mov
in
push
push
int3
cs
loope
push
mov
mov
jg
incl
xor
arpl
inc
xor
pop
push
setle
jg
dec
std
mov
mov
sub
int3
xchg
jp
jmp
mov
pop
pop
movsb
loop
mov
insl
push
leave
movsb
dec
in
scas
push
in
aad
dec
rcl
or
test
sbb
in
pop
aam
loope
jae
xchg
ficompl
xor
or
fs
jg
pop
lds
fidivs
xor
jno
lret
pop
inc
mov
nop
nop
mov
push
push
mov
outsb
mov
mov
add
mov
mov
fmulp
andb
loopne
sub
mov
mov
add
stos
test
lods
std
pushl
xchg
mov
pop
pop
and
pop
fnsave
and
sub
int3
ja
aam
xlat
shlb
ljmp
dec
jge
mov
mov
adc
das
push
cld
incl
gs
mov
pop
mov
aas
inc
adc
push
in
js
cli
pushl
rclb
pop
add
das
cmp
jae
pop
pop
clc
nop
add
pushf
add
push
jmp
dec
inc
xor
insb
imul
push
insl
leave
ret
push
and
ret
scas
mov
lcall
xorl
sub
mov
or
gs
rorl
jl
movsl
popa
sub
xchg
jmp
adc
mov
xchg
cmp
mov
push
out
add
std
insb
jo
cmp
pop
movl
shr
jmp
inc
mov
sbbb
xor
cld
jmp
sub
inc
and
dec
jno
add
sbb
push
dec
or
jne
mov
lahf
or
jo
scas
mov
icebp
inc
push
clc
cvtps2pi
lcall
ror
nop
addb
jmp
xchg
cmpsb
jecxz
sub
jl
lea
fcompl
decl
lret
mov
push
int
andb
outsl
add
sbb
loop
cli
cmp
aaa
test
sub
mov
lcall
inc
loope
test
mov
cmp
stos
adc
ljmp
js
inc
scas
fldcw
addr16
and
push
mov
push
orb
add
loop
incl
or
and
xor
mov
pop
mov
xchg
mov
sar
jmp
add
jne
nop
adc
and
add
call
and
cmp
jle
mov
stos
aaa
cli
incl
enter
stc
out
sti
xor
sbb
inc
ljmp
mov
mov
js
loope
lahf
sub
xlat
insb
push
jecxz
push
clc
lcall
xchg
jne
dec
and
mov
aad
mov
shll
ljmp
cld
cmp
daa
push
jbe
xor
cs
sub
jmp
in
inc
push
mov
push
je
push
test
push
movsb
or
jns
jmp
insb
pop
mov
loope
stc
pop
jg
pop
loop
popf
mov
cmp
pop
sbb
mov
and
lods
decb
add
je
mov
je
sbb
cmp
movsl
imul
jo
outsl
call
cwtl
add
call
jns
push
jne
or
xor
rcrl
stc
or
hlt
out
dec
xorb
and
ss
sub
jbe
push
push
fnstsw
call
lock
adc
adc
sub
mov
int3
aaa
sbb
push
or
in
add
mov
dec
enter
dec
add
mov
sbb
outsl
lcall
push
mov
sbb
or
cltd
insb
pop
jo
and
cld
mov
xchg
sbb
adc
or
ja
and
lret
aad
cli
push
cmp
dec
test
sub
mov
mov
icebp
mov
gs
les
in
adc
push
incl
aaa
aam
jp
dec
fstpl
aas
add
nop
lods
clc
clc
sbb
lcall
call
cmp
jge
or
or
sbb
pop
shl
in
mov
lret
cmp
push
mov
cmp
push
cmc
in
insb
fadds
inc
jge
mov
fildll
or
pop
jge
loop
xor
rolb
mov
push
pop
loop
cld
add
shll
cltd
push
cs
mov
fnstenv
js
mov
clc
cltd
ret
ficoms
pop
hlt
dec
sub
sbb
clc
sti
filds
cmp
lcall
sub
sub
push
jg
notb
pop
int3
mov
add
xchg
loope
lods
imul
pushl
leave
mov
and
lret
test
add
pusha
fs
int
cmp
sub
inc
stos
pushl
jns
gs
push
insb
pop
cli
mov
mov
insb
push
mov
lcall
stos
mov
xchg
lea
dec
int3
push
adc
push
jge
loopne
push
test
or
xor
idiv
add
pop
push
in
xlat
ljmp
insl
xorl
decl
testb
adc
sub
sar
jg
cli
push
in
pop
sbb
loopne
inc
pop
push
out
jg
mov
xor
mov
cmp
sbb
mov
lcall
cs
ret
push
repnz
cmp
pop
cmc
incl
incl
add
push
jmp
insb
mov
jg
push
inc
push
popaw
xor
inc
inc
stos
sbb
enter
mov
ljmp
icebp
enter
cmc
sbb
mov
xor
cld
xchg
psubd
mov
orb
xchg
mov
roll
jg
fldenv
cmp
xchg
and
lods
ja
jno
or
push
adc
or
js
adc
loope
pop
add
lcall
mov
lahf
xor
push
sti
jmp
daa
mov
push
loop
popl
gs
ja
pop
sub
mov
push
xchg
cmp
jg
nop
or
and
fcompl
aas
pop
mov
mov
call
clc
pusha
rclb
cmp
jp
jmp
sbb
xor
jg
add
mov
push
dec
push
movsl
mov
or
or
lcall
inc
test
popl
sub
mov
addl
pop
aaa
roll
cmp
inc
push
push
mov
mov
cmp
aam
sbb
mov
cwtl
sub
adc
mov
in
adc
xor
push
and
cmp
scas
test
fucomip
orb
negl
add
in
add
jg
or
inc
and
pop
mov
imul
imul
push
sti
push
pop
dec
mov
loope
int3
xor
leave
add
mov
clc
mov
aad
cmp
mov
je
fadds
push
clc
arpl
xor
clc
lcall
imul
mov
and
mov
ja
test
pop
std
call
sahf
cmpw
pop
mov
add
cmpl
mov
jmp
incb
add
pop
arpl
lahf
cmp
test
call
and
popf
divl
pop
ljmp
jne
ja
jge
add
pushl
ljmp
ljmp
cmp
arpl
mov
mov
sti
mov
inc
adc
push
sub
jns
cmpsl
out
mov
dec
sbb
mov
jno
int
adc
pushl
mov
push
push
mov
in
jo
outsb
lods
push
cltd
adc
out
jne
mov
js
aas
orb
sahf
dec
mov
and
jae
mov
idiv
outsl
hlt
pop
mov
mov
jnp
lods
xchg
push
adc
push
fmul
sub
inc
jb
add
mov
push
test
push
je
shlb
xchg
sub
shr
nop
mov
adc
sbb
sub
decl
cld
adc
sub
nop
or
ror
mov
sub
aaa
pop
inc
cmp
inc
sbb
adcb
jge
mov
or
mov
jg
sbb
jge
sub
or
inc
stc
ljmp
pushl
ficoml
adc
sub
cmpsb
pop
pop
fdivr
out
mov
cmp
jno
fisttps
and
rcr
sbb
adc
sbb
jo
push
outsb
push
push
add
fs
cmc
pop
or
inc
pop
pop
pop
ret
call
adc
les
and
test
shl
cmp
add
jo
and
mov
iret
test
stc
inc
cmpsb
leave
mov
fadds
push
sti
push
rol
cmpb
ds
adc
push
push
jbe
and
shlb
hlt
ljmp
sbb
outsb
jo
lds
pop
inc
test
xchg
xor
and
mov
jae
pop
sbb
or
pop
cwtl
fimuls
push
sub
pop
lcall
ret
push
test
pushl
loopne
out
sbb
pop
adc
test
movsb
cld
aaa
add
lea
cmp
daa
or
das
or
or
cltd
push
std
das
cld
aas
test
inc
popf
pop
pushf
or
add
and
mov
ret
or
lea
das
add
xchg
outsl
push
js
pop
add
xchg
xchg
or
cmp
decl
ret
daa
inc
push
jmp
xchg
loope
push
xchg
add
insl
add
dec
xor
fnstsw
ljmp
dec
addr16
fs
mov
push
popf
clc
mov
mov
inc
or
decl
repnz
jbe
outsl
lods
jg
sbbb
mov
inc
push
or
outsl
int3
aas
jnp
add
dec
loope
and
add
or
cmc
jecxz
xchg
jne
je
sub
fnstcw
and
outsl
clc
jbe
pushl
sbb
adc
cmp
iret
push
mov
sub
decl
push
mov
inc
cmp
je
out
add
add
inc
jmp
loopne
xchg
test
or
mov
lret
fadd
mov
add
jl
idiv
rolb
loop
dec
repnz
add
or
and
inc
mov
dec
iret
add
daa
or
sbb
cmp
inc
add
fildl
pop
test
lcall
push
or
mov
aaa
daa
sbb
or
sbb
pop
or
imul
add
repz
subb
push
lret
jp
add
hlt
cmc
rol
xchg
or
jg
jle
dec
add
hlt
inc
jmp
lcall
inc
ret
hlt
pop
fcomps
sub
adc
shrl
call
and
or
test
je
mov
ror
mov
mov
call
dec
jmp
push
push
adc
addr16
dec
dec
xor
xor
xor
xor
push
mov
dec
sbb
jge
mov
icebp
mov
mov
cli
iret
mov
fwait
jmp
mov
mov
dec
and
cltd
mov
decl
hlt
inc
lret
and
in
enter
add
push
mov
adc
jg
ljmp
in
dec
mov
in
lret
mov
mov
push
xlat
and
outsl
lock
ljmp
popa
mov
push
sbb
and
roll
incb
push
aad
mov
or
dec
xchg
call
mov
aam
and
xchg
and
sub
adc
xchg
call
fsubrl
pop
jmp
pop
scas
xor
xor
icebp
jne
sub
pusha
dec
lock
pop
sbbb
arpl
popa
inc
mov
outsl
cs
jae
sub
sbb
leave
push
test
inc
add
test
or
dec
aam
push
jp
data16
lods
cmp
add
lcall
call
daa
adc
fs
fcomp
pop
adc
dec
cmc
mov
fadd
cs
mov
dec
arpl
push
imul
and
jg
ficoms
add
fistpll
add
jbe
and
pop
inc
or
addl
ljmp
xchg
in
pusha
ljmp
hlt
pop
popl
int3
add
xor
xor
mov
add
call
fisttpl
inc
mov
add
cli
ret
add
adc
sub
inc
popa
add
push
fs
add
mov
sub
into
les
std
das
insl
fistpl
shrb
inc
xor
ljmp
in
gs
ss
stos
mov
push
and
add
cs
sbb
stos
fists
test
loopne
int3
les
mov
jl
bound
fisttpl
xor
addr16
cmpsb
sbb
mov
or
pop
and
sbb
or
push
mov
add
mov
lea
daa
add
movzbl
lret
pop
testl
decl
inc
lsl
pslld
push
cwtl
pushf
mul
xchg
mov
andb
scas
in
addr16
arpl
dec
shll
dec
es
leave
fs
xchg
std
jmp
xor
adc
ss
add
add
dec
push
push
dec
inc
dec
decl
push
int3
dec
cs
dec
xchg
sub
lods
mov
outsl
cld
dec
xor
pop
add
in
iret
ss
arpl
push
aad
xor
add
mov
pop
sar
lcall
cmp
cmp
cmp
das
push
gs
imul
outsb
frstor
iret
outsw
cmp
sbb
ud0
incl
and
lcall
fs
cmpsl
jmp
pop
add
das
into
jg
mov
jg
pop
add
jg
out
and
dec
gs
jmp
jb
push
jnp
out
outsl
jae
sub
add
imul
pusha
sub
mov
insw
xchg
aaa
pusha
gs
push
push
dec
outsl
imul
pop
add
push
int
pop
dec
cmpsl
inc
enter
push
add
inc
add
fistpl
add
jb
push
pop
sbb
fcoml
jg
rorl
and
call
fidivl
fbstp
ds
test
bound
gs
jg
shll
je
insl
inc
xor
jg
pop
pop
in
outsl
mov
inc
jne
data16
or
rcr
lcall
nop
sub
call
push
add
fs
add
aaa
clc
pushl
aaa
sub
jb
inc
dec
jae
out
je
xchg
add
jb
or
incl
adc
mov
shl
popa
jae
dec
insb
in
scas
insl
cmp
add
mov
inc
sbb
sar
cmp
and
pop
sub
decb
cmpsb
push
sub
ret
push
imul
adc
push
push
add
fstpt
jnp
out
outsb
push
or
or
pop
sti
imul
inc
jns
sub
pop
inc
outsb
pop
jnp
je
loop
adc
adc
sub
jo
mov
inc
xchg
clc
pop
clc
pandn
jbe
shlb
aaa
outsb
addr16
mov
sar
or
or
aaa
gs
popf
and
add
pushl
mov
in
jl
inc
or
jbe
arpl
inc
pop
out
inc
outsl
jl
inc
cmp
and
inc
imul
loopne
fcmovnu
push
daa
adc
sahf
data16
jl
js
outsl
ja
lods
clc
ljmp
pop
jae
arpl
popa
sub
das
shl
bound
jbe
inc
int
mov
jb
ret
hlt
adc
cltd
jo
pop
push
xchg
insl
fmull
sub
ret
out
das
outsb
push
mov
or
movd
in
mov
push
inc
outsb
mov
xchg
clc
ljmp
jb
in
cwtl
fwait
xor
insl
bound
daa
push
outsl
jo
fbld
imul
loop
aas
in
aas
xor
shlb
dec
inc
pop
push
cwtl
jnp
pop
push
adc
dec
out
mov
data16
icebp
insb
jne
pop
cmpsl
pop
cwtl
mov
cwtl
sbb
sar
lods
xor
push
sub
rolb
leave
push
pop
ja
inc
sbb
shll
bound
jae
in
repz
inc
fstpt
lcall
adc
dec
outsb
sbb
ret
mov
push
test
mov
sahf
sub
or
adc
or
pop
push
inc
out
cmp
jo
fistpll
std
ret
sub
pop
inc
outsl
add
pushf
js
daa
cli
incl
xor
pop
or
or
push
or
push
std
out
xchg
xor
xor
or
and
js
and
or
pop
call
adc
lcall
nop
inc
push
pop
sbb
dec
cld
xchg
or
sbb
or
or
jne
testb
add
or
adc
daa
pop
inc
and
lock
add
and
adc
sub
push
adc
adc
or
inc
dec
lock
pop
jg
sti
pop
bound
xor
movsl
and
pop
loopne
jg
and
sub
mov
cmp
popf
adc
ss
rcrb
or
adc
add
adc
pushl
fidivrl
aaa
lods
sbb
push
sbb
popa
movsb
mov
insb
mov
fwait
pop
pop
or
mov
mov
movsb
sub
and
push
xchg
add
adc
lcall
pushl
in
mov
sti
sbb
and
mov
adc
mov
fcmovnu
fwait
or
clc
xchg
outsb
add
add
xor
mov
frstor
adc
sbb
fistpl
or
mov
imul
mov
in
mov
sub
lods
std
insl
imul
jle
popf
push
sub
push
std
push
sbb
in
aaa
add
or
adc
sbb
or
mov
fs
add
lods
and
sbb
jle
pop
adc
push
mov
push
lods
add
mov
sbb
push
pop
sti
fildl
pop
or
cmp
inc
lock
adc
cs
loope
or
or
push
push
push
push
pop
or
ljmp
lock
popf
sbb
push
mov
popf
push
pop
loopne
xor
push
cs
xchg
or
add
lret
pusha
jmp
dec
dec
add
dec
add
inc
mov
mov
jle
into
mov
push
adc
push
decb
out
test
or
insb
sbb
add
xchg
lret
test
pushl
test
add
jne
lret
popa
inc
addr16
add
sti
fldt
add
xor
push
sub
lock
je
negl
mov
insb
dec
nop
jmp
and
incl
jne
mov
jne
pop
sti
or
or
daa
push
inc
add
ljmp
iret
pushf
and
daa
int
xlat
rorb
or
lcall
fisttpl
les
inc
andl
subl
add
add
scas
pop
shrb
mov
divb
nop
faddl
nop
add
lea
int3
inc
mov
inc
add
pop
mov
sub
xchg
jne
das
int3
jb
mov
mov
or
out
jne
push
jae
xor
add
test
or
ret
je
lds
leave
or
and
sarl
popa
and
add
test
aam
roll
lea
cmp
jbe
add
dec
shll
fdivrl
jmp
add
add
incl
sub
ja
add
jmp
std
mov
mov
sub
cmp
ja
cmpb
jne
mov
mov
adc
shr
rol
xchg
sub
sub
mov
loop
sti
in
mov
lea
add
or
je
mov
lea
fisttpll
mov
or
cltd
in
mov
push
dec
repnz
push
adc
cs
mov
adc
das
add
xor
in
dec
mov
mov
sbb
cmp
ja
add
mov
mov
jne
add
loop
mov
pop
out
mov
mov
mov
inc
jnp
push
imul
call
lea
jg
sub
adc
jg
pop
popa
lea
push
les
sub
jmp
int3
adc
add
cs
mov
nop
xchg
dec
lcall
mov
inc
mov
jbe
push
mov
and
xchg
and
rdmsr
mov
mov
mov
mov
inc
push
dec
inc
dec
mov
inc
js
add
dec
sbb
push
inc
push
push
or
lret
cmpb
xchg
adc
jle
sub
push
imul
adc
jo
fs
and
inc
sub
adc
jne
call
push
dec
adc
dec
outsb
je
int3
ja
pop
out
inc
stos
cmc
mov
mov
lsl
push
andb
data16
stos
mov
ds
mov
add
inc
cwtl
inc
dec
sbb
mov
and
add
fnstenv
sbb
sub
cmc
gs
outsl
push
push
lods
cmp
sbb
push
js
fidivrs
rcll
jne
cmp
push
fld
mov
adc
imul
inc
sub
sub
gs
push
or
and
mov
sub
inc
and
outsl
daa
jnp
mov
inc
cs
je
imul
je
int
je
jae
shrb
push
push
push
mov
neg
adc
jbe
outsl
outsb
push
fs
dec
sub
popa
fiaddl
bound
shll
gs
sti
jnp
add
scas
and
push
test
dec
stos
jo
outsb
outsl
fsubs
adc
insb
jae
das
addr16
fldcw
dec
popa
or
lahf
je
pop
stos
test
outsw
inc
mov
imul
outsl
fistpl
sub
jo
je
mov
add
or
insl
mov
dec
push
pop
sbb
imul
push
add
imul
adc
out
xor
xchg
sub
ja
lods
and
mov
inc
arpl
xchg
fisubrl
or
lds
add
xor
cs
outsl
mov
fsubs
pop
jo
iret
xchg
ret
push
imull
push
jnp
mov
or
popa
sub
iret
arpl
jne
jo
int
sub
xchg
inc
js
mov
xorb
sbb
mov
cwtl
cmp
push
xchg
and
shlb
outsb
gs
ds
imul
add
or
add
enter
fs
icebp
imul
dec
or
fs
inc
or
out
cmp
add
invlpg
rcrb
iret
adc
call
and
mov
test
daa
aas
or
jo
sub
cmpsl
adc
push
add
mov
je,pn
js
cmc
cmp
and
jb
sbb
mov
movsb
push
or
lret
inc
cs
js
xchg
or
daa
shr
xlat
push
jo
cmp
pop
lods
movsb
dec
in
add
add
lock
mov
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
pop
add
sbbb
add
add
add
ja
add
xor
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
add
cld
rolb
add
rolb
add
roll
add
rolb
add
add
in
rolb
add
roll
add
rolb
add
roll
add
roll
add
add
pop
roll
add
add
je
add
add
add
adc
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
data16
add
inc
gs
outsl
fs
gs
imul
js
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
aam
hlt
push
cmpb
lcall
mov
mov
push
xchg
mov
or
mov
mov
orb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmpb
lcall
mov
mov
push
xchg
mov
or
mov
mov
mov
lcall
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmpsb
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
push
push
push
aam
hlt
push
cmpb
xor
xor
xor
push
xor
cmp
xor
cmp
and
and
mov
mov
orb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
aam
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
scas
je
adc
pushl
cmp
pop
je
andb
int
sbb
dec
enter
mov
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
je
pop
fildl
shr
jmp
xorl
pop
stos
pop
pop
or
iret
mov
scas
insb
mov
push
popf
clc
mov
movsl
outsl
dec
andl
adc
sbb
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jmp
add
add
leave
in
mov
sub
movl
mov
shll
sbb
sbb
push
mov
mov
dec
jb
sbb
test
jne
pop
xor
adc
adc
rol
mov
sbb
insl
repnz
inc
in
insb
dec
shll
inc
imul
pusha
shr
ljmp
xorl
inc
mov
mov
inc
pop
stc
dec
adc
sti
cld
gs
sbb
or
movsb
jbe
pop
push
pop
push
and
clc
push
icebp
lods
rolb
or
pop
adc
leave
push
adc
add
mov
sbb
gs
mov
psllq
insl
shll
gs
scas
xor
outsl
adc
xor
inc
adc
arpl
push
adc
in
adc
pusha
insb
ljmp
clc
or
push
fwait
add
cmp
ljmp
cmp
mov
mov
add
add
cmp
mov
jae
mov
adc
sarl
ret
mov
outsl
fdivrl
faddl
sbb
mov
iret
cmp
fbstp
inc
mov
popa
cmp
add
push
push
push
sub
mov
cmpl
sbb
sbb
or
add
fcmovnu
mov
inc
sbb
orl
cmp
pusha
outsl
dec
jb
popf
mov
inc
sbb
jge
sub
and
hlt
jge
cmp
cmc
in
sub
jl
cmp
and
out
xchg
and
adc
sbb
fiaddl
or
and
or
push
mov
ret
les
sahf
adc
outsb
mov
cmpsl
jmp
test
je
mov
add
pop
stos
outsl
mov
clc
add
fisttpll
mov
outsb
jl
xchg
adc
shll
mov
adc
jge
lods
mov
cli
aas
mov
inc
sub
sub
call
call
add
fbld
movsb
cs
jo
in
rcrb
pusha
popf
cmp
mov
mov
pop
pop
jb
xor
sbb
cltd
xor
rol
enter
lret
test
dec
int3
int
insb
sti
iret
insb
rorb
inc
mov
dec
sub
push
xor
addr16
xorb
mov
mov
mov
rolb
daa
push
addr16
packssdw
lcall
cmpsl
test
scas
jmp
stos
jle
sbb
lcall
lods
imul
movsb
insl
shll
jns
fistpll
insl
add
mov
rol
push
lcall
aaa
rol
xchg
or
aas
mov
sbb
test
sbb
add
sub
cmpsb
popf
jmp
mov
mov
push
lcall
aaa
adc
call
jae
mov
dec
pop
push
push
sub
inc
test
inc
push
ss
xchg
dec
and
imul
je
aas
add
cmp
pop
sbb
mov
xchg
shll
pop
cmovno
mov
je
and
pusha
xchg
test
divb
mov
add
repnz
pushf
add
gs
xchg
or
push
mov
jne
shlb
in
mov
aad
data16
xchg
sbb
mov
fcompl
addr16
cs
jmp
lcall
call
mov
jmp
in
ss
mov
mov
dec
arpl
mov
loope
dec
outsb
mov
xlat
sarl
out
in
jecxz
mov
fisubs
incb
insl
inc
stc
pop
nop
leave
or
ret
fcomps
scas
jns
sub
pop
add
je
imul
mov
cmp
sub
scas
xchg
jo
jbe
leave
inc
divb
lods
les
fidivrl
jge
inc
pop
xor
mov
sub
and
fwait
cmp
dec
not
adc
decb
sub
inc
cmp
jb
jmp
cs
daa
sahf
int
clc
sbb
loop
or
jne
inc
scas
or
out
popf
lcall
push
outsl
lcallw
mov
popa
jb
imul
imul
mov
outsb
imul
data16
movsb
push
push
imul
stos
dec
push
dec
inc
fdivs
leave
inc
lret
lret
in
cmpsb
imul
imul
add
ret
mov
imul
lcall
inc
js
mov
push
mov
imul
cltd
sub
cmpsb
cmc
div
push
in
mov
hlt
adc
test
push
or
pop
push
push
rcrb
adc
inc
rorl
or
arpl
sar
cmp
adc
ret
cmp
add
inc
sbb
dec
ret
popa
je
in
lcall
aam
push
cmp
fistpl
mov
aaa
xor
and
add
push
or
adc
mov
aaa
mov
xor
push
adc
cmp
cwtl
in
mov
xor
stos
out
je
lock
xor
or
sub
sub
push
inc
push
ret
nop
insl
lcall
inc
insb
movsb
imul
push
pop
push
popa
out
add
mov
dec
ret
insb
and
outsl
imul
scas
add
call
mov
sbb
outsl
mov
mov
mov
push
push
pop
pop
push
mov
mov
mov
pop
jae
xor
sarl
je
insl
cmpsb
imul
imul
lcall
lcall
outsl
jb
loopne
fsubrs
mov
push
dec
test
or
or
or
pop
cmp
xchg
or
or
adc
sbb
pop
das
sub
mov
je
jae
xor
cmp
jmp
sub
jecxz
in
add
inc
pop
scas
or
cs
adc
or
sbb
sbb
cld
adc
fs
in
push
test
popa
je
ret
into
inc
jo
fstpt
cs
lret
faddl
imul
les
mov
stos
aam
aaa
je
fs
sub
adc
inc
cli
pop
mov
sti
ret
in
std
adc
adc
and
jb
in
ret
fs
push
fdivrs
mov
xchg
mov
xor
or
scas
push
jge
jne
lcall
test
daa
push
xchg
cmpsl
xchg
sbb
jb
xchg
stc
jmp
je
out
mov
push
lock
cmp
sub
fidivs
scas
sub
dec
leave
adc
adc
popf
mov
sbb
xlat
dec
sub
fisubrs
jge
xor
push
pop
hlt
addl
cmp
stos
add
pushf
sbb
push
mov
sbb
lret
inc
gs
and
mov
fs
xor
add
push
in
ja
add
je
movsl
rorb
mov
sbb
insl
test
xor
dec
push
je
aas
popl
jl
int
push
mov
test
mov
inc
test
imul
faddl
jae
mov
mov
call
mov
push
cmpsb
sbb
roll
jae
stos
rolb
dec
lods
lods
outsl
scas
fisttps
rorl
fs
xor
clc
stc
cli
sti
cld
pop
xchg
gs
dec
outsl
arpl
xchg
xchg
gs
outsl
jne
leave
push
xchg
arpl
inc
xor
shll
lcall
dec
shll
xor
xor
xchg
lods
push
or
push
pushf
loopne
icebp
jo
popa
movsl
jne
lret
adc
fmull
push
pop
fcmovnb
ret
jno
mov
and
fstps
mov
push
int3
mov
cwtl
adc
mov
aam
cmpb
rorb
sbb
test
adc
pusha
dec
push
dec
inc
xchg
mov
and
movsl
sbb
dec
push
xchg
js
dec
xlat
outsb
aam
je
or
nopl
adc
pop
scas
pop
jge
nop
fs
mov
ja
mov
fnstcw
push
push
push
add
rorb
outsb
aaa
je
xorl
jge
in
sbb
push
nop
and
or
sbb
add
insl
je
test
sbb
inc
and
xchg
int3
enter
loopne
fsubrs
or
push
jbe
pop
lock
pusha
xor
int3
clc
vmwrite
enter
aaa
lock
imul
clc
ret
push
leave
fmul
insb
int
lock
sub
push
pop
or
cltd
cmp
pop
lods
xchg
push
adc
out
fcomps
jae
cmp
fwait
sub
in
hlt
ja
xchg
les
or
addb
jp
mull
or
inc
push
xor
hlt
jae
xchg
jo
xor
dec
and
adc
fcomps
push
add
cmp
sub
push
xchg
clc
je
adc
inc
in
dec
pop
xchg
jg
push
jo
test
fstl
rcll
ja
outsl
insb
shll
js
mov
ja
outsl
outsl
imul
mov
sub
lds
gs
shll
jne
push
jb
push
xor
jbe
xor
jo
daa
add
dec
adc
add
call
sti
ret
dec
pop
jb
leave
or
gs
add
popf
or
ja
add
movl
sbb
mov
xor
enter
stc
int
stc
jno
enter
adc
hlt
xchg
nop
out
mov
mov
test
mov
jns
js
jl
enter
je
jge
jl
addl
fcoml
jns
inc
lods
imul
xor
or
ss
xchg
dec
xchg
xchg
push
aam
xor
xchg
inc
push
add
outsb
jo
movsl
mulb
outsl
fs
testb
mov
sbb
das
rcll
pop
ss
pop
dec
cmp
lcall
pop
push
outsl
lcall
jle
push
sub
push
fmull
push
dec
push
push
mov
lahf
or
adc
sbb
pop
cmp
data16
and
movsb
pop
xor
incb
mov
cmp
shll
xorb
mov
ret
xor
add
lods
jl
iret
add
fwait
pop
and
mov
mov
subb
cmp
mov
pop
pop
jl
fildll
xchg
xchg
cli
test
adc
notb
and
cmp
cmpsb
aam
dec
push
pushf
jne
into
loope
cli
adc
push
subl
push
nop
and
adc
add
xor
sahf
adc
adc
das
ds
les
roll
scas
in
in
xchg
sub
je
or
pop
lcall
je
cmpsb
imul
lea
nop
std
sbb
xor
fs
dec
fcmovnu
fisttpll
xor
loopne
loop
xor
shll
in
out
call
ljmp
lock
xor
leave
mov
push
or
jmp
pop
cmc
xchg
pop
nop
pop
dec
mov
or
add
inc
xchg
lods
dec
adc
enter
cmp
add
jl
nop
sub
cltd
popa
cld
cld
or
mov
add
or
and
or
jnp
enter
dec
or
jmp
jp
jb
inc
and
cld
xor
add
iret
dec
lea
mov
pop
xchg
or
pop
jns
push
dec
sbb
insl
testb
mov
inc
mov
dec
xchg
fsubrp
ja
or
jl
adc
sub
shll
xchg
xchg
stos
pop
pop
icebp
lret
jl
push
mov
fadds
mov
sbb
and
or
jne
adc
jp
lock
cmp
add
nop
cltd
pusha
xchg
and
push
sbb
mov
pop
pop
push
ljmp
push
push
mov
add
and
test
in
insl
loop
or
insb
push
outsb
push
jle
or
lret
xchg
nop
and
shlb
adc
pop
lock
sbb
mov
shll
fmull
lcall
cmp
jle
daa
inc
mov
adc
cmp
cs
pop
mov
mov
mov
and
push
adc
push
mov
add
fcom
and
push
sub
xor
cmc
dec
ss
movsb
fadds
inc
sbb
pop
push
sub
jne
jp
add
inc
xor
jne
adc
inc
mov
cmpsb
push
sbb
pop
pushf
pop
push
pusha
or
add
jo
out
lcall
jl
inc
mov
add
gs
mov
outsb
cld
cmc
and
push
push
push
loop
jne
rcr
cld
or
add
pop
pop
xor
push
cmp
and
lcall
push
mov
inc
push
test
jl
sbb
hlt
pusha
mov
xchg
gs
jo
push
imul
mov
push
cmp
lret
mov
lret
imul
lret
push
sub
mov
fdivl
mov
arpl
mov
pop
cs
insl
lea
add
xchg
cmp
call
or
cmp
je
lcall
fs
pushf
insb
cmp
or
insl
andl
or
xchg
imul
pop
xchg
gs
jns
pop
lods
lods
insb
je
scas
scas
dec
popa
lret
mov
or
outsl
shll
and
insb
aam
andnps
je
jnp
mov
mov
iret
fmull
mov
push
hlt
adc
and
int3
xor
cld
sbb
pop
sti
fs
xor
inc
lcall
mov
cmp
dec
xchg
mov
mov
push
repnz
imul
xor
sub
add
push
inc
adc
or
daa
or
and
jo
xor
dec
sti
clc
clc
jae
gs
mov
push
pop
insb
push
sub
xor
cs
jmp
dec
jo
push
push
push
lret
jb
inc
pop
push
lret
mov
js
arpl
int
jmp
repz
push
les
in
lods
inc
dec
hlt
push
push
fsubl
push
push
push
pop
push
sbb
push
iret
out
push
aas
fmuls
push
lea
xorl
sub
or
sbb
add
add
ret
icebp
push
mov
sub
push
fisttpl
inc
sbb
fdivr
arpl
pop
push
adc
dec
in
lock
dec
shrl
xor
pop
jbe
mov
lea
pop
sbb
add
push
jnp
cmp
pop
pushl
push
or
rclb
mov
xor
jg
add
hlt
inc
or
div
imul
ret
lods
add
sbb
cmp
jbe
push
call
out
jne
jo
mov
mov
push
mov
fwait
mov
mov
es
jae
adc
push
or
nop
dec
sahf
inc
cmp
adc
out
cmp
inc
rcrb
paddd
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
push
sbb
cld
add
int3
shr
in
inc
aam
pop
or
and
pushf
imul
sbb
push
insl
add
sbb
mov
fxch
push
adc
adcb
adc
in
jbe
push
sbb
cld
cmp
sbb
enter
xchg
aaa
mov
out
sub
imulb
push
or
adc
clc
pop
or
jle
push
or
in
and
movl
fsubs
mov
fimull
pop
sub
mov
mov
fbstp
inc
pusha
incl
mov
mov
inc
sub
test
mov
sub
push
pushl
lods
mov
add
push
sbb
cmovbe
les
les
push
insl
push
push
lods
pop
iret
mov
sub
jmp
mov
sub
sbb
ds
insl
fistpl
or
sbb
sbb
push
push
mov
xor
lea
add
ret
enter
sub
call
cmpsl
mov
xor
and
adc
inc
int
inc
add
cmp
jl
add
in
loopne
sub
add
std
ja
lcall
or
mov
sbb
stc
sti
mov
addl
pop
adc
adc
pop
xchg
mov
loopne
loopne
test
add
or
mov
push
lea
daa
push
sahf
mov
push
lea
fstl
push
int
rcr
sbb
jnp
inc
clc
add
jbe
mov
adc
adc
lcall
mov
mov
mov
daa
sbb
adc
cli
jl
jo
in
fimuls
inc
movsb
mov
push
test
cmp
stos
adc
mov
adc
dec
mov
inc
push
push
mov
inc
add
jmp
push
push
leave
push
pop
scas
sub
aad
jo
mov
push
mov
cs
xchg
rclb
rcll
lds
fcoms
add
pusha
add
js
xor
andl
por
push
lret
fcomi
cmp
cltd
add
or
out
out
cwtl
jno
push
mov
push
jne
lea
out
into
sbb
pop
cmp
pop
call
pop
mov
movsl
add
sub
xor
icebp
aad
lea
mov
sub
push
pop
das
cmp
lcall
rcrb
sub
dec
mov
je
fimull
mov
sub
inc
sbb
adc
jo
cmp
cmpw
jne
fwait
or
sub
insb
cmp
fwait
xchg
jmp
lods
push
fs
sbb
add
and
sbb
nop
fimuls
add
push
pushf
adc
xlat
mov
mov
rcll
fnsave
cmp
ficoml
inc
xor
popa
pop
imul
dec
dec
lods
inc
lods
enter
jne
out
inc
dec
scas
cli
lods
rolb
popa
ret
andl
test
andl
xor
andb
and
jmp
mov
sub
push
test
sarb
jne
sbb
adc
and
mov
add
mov
rolb
rcl
test
or
xchg
pop
xor
hlt
mov
cmp
adc
iret
andb
or
lods
mov
xor
sbb
popa
in
addl
push
arpl
pusha
jb
inc
enter
xor
jbe
dec
adc
andl
jbe
xchg
adc
test
popa
adc
ja
jnp
mov
in
pop
cmp
lods
push
sbb
call
push
xchg
push
test
pushf
mov
out
sbb
push
sbb
sbb
adc
push
lods
jnp
inc
dec
xchg
gs
bound
jb
xchg
gs
repnz
gs
outsb
add
clc
or
cmpsl
add
push
xor
data16
jbe
sub
outsl
jae
fs
cmp
add
push
push
add
adcb
fstpt
add
or
xor
movsb
add
or
xor
inc
pop
lock
lret
loope
push
and
sbb
sahf
and
mov
dec
fs
sbb
jge
xchg
pop
mov
xor
decl
mov
jmp
add
or
or
push
mov
daa
jp
aaa
sub
add
dec
and
inc
test
cmp
jne
call
jmp
add
pop
mov
xor
jb
scas
jl
mov
dec
push
xor
pop
xor
cmpl
ja
inc
imul
mov
jns
ret
lock
or
pop
dec
mov
dec
mov
sbb
and
nop
cwtl
call
sub
insb
inc
popa
arpl
and
and
mov
cs
cld
xchg
and
xchg
adc
js
lods
inc
in
mov
jmp
out
iret
pushf
cs
or
push
out
je
repnz
mov
pop
idiv
add
mov
inc
sub
jle
add
pop
cmp
fwait
add
rorb
clc
gs
add
xchg
add
xchg
push
fistpl
decb
or
rcrb
adc
fstps
dec
cmp
ud2
sahf
movsl
inc
jo
addr16
test
and
inc
outsl
jo
inc
pop
sbb
sbb
add
dec
shll
jbe
inc
or
xor
insb
gs
js
pop
cs
pop
fildll
add
mov
leave
push
push
pop
push
and
inc
mov
leave
gs
je
xchg
gs
cld
gs
imul
lea
movsl
lcall
fisubrl
into
xor
xor
and
xor
pop
sbb
add
es
sub
insb
sbb
pop
mov
cmp
adcl
or
in
insb
mov
lret
cs
push
push
data16
lods
jl
pop
adc
je
pusha
sbb
or
cmp
aad
enter
aam
xor
pop
fdivr
adc
xor
jmp
cmp
stos
lock
adc
and
inc
repz
jmp
sub
xchg
in
sub
or
fdivr
nop
cmpsl
mov
fcomps
add
adc
pusha
nop
or
add
push
dec
inc
xchg
dec
test
pavgw
jcxz
inc
jp
adc
xchg
adc
mov
addr16
hlt
xchg
andb
push
jb
dec
sahf
loopne
loopne
orb
bound
lods
pusha
add
jnp
dec
sahf
and
mov
call
fwait
bound
fdivs
out
add
int3
add
mov
sub
test
sub
mov
test
or
sub
or
jae
sub
mov
or
loope
mov
test
pop
je
loope
rcr
mov
or
ja
mov
mov
lock
sbb
pusha
gs
adc
dec
xor
mov
mov
add
add
shlb
or
jo
jl
pop
jae
jo
or
mov
mov
loopne
cmp
into
dec
push
and
dec
mov
mov
fldenv
mov
pusha
aas
cmp
lcall
data16
mov
add
cmp
mov
mov
idiv
xor
and
inc
or
add
or
repnz
jbe
aam
dec
movsb
dec
mov
ret
add
or
push
sub
jbe
jmp
imul
sub
scas
imul
sub
pushl
aam
lock
dec
jo
or
fcoms
ret
mov
rorl
movb
add
add
and
mov
sub
jne
adc
pop
nop
push
dec
jmp
mov
and
add
push
add
push
add
out
xor
cmpsb
hlt
or
es
shll
test
cmpsb
mov
lcall
xor
insl
lcall
ja
lcall
inc
add
adc
lret
cmpsb
imul
push
imul
imul
lcall
loop
js
lcall
movsb
jae
fwait
cmpsb
mov
aam
mov
es
jb
add
nop
push
movsb
subl
dec
dec
inc
xor
push
cwtl
add
loopne
xchg
mov
push
rclb
scas
in
push
xchg
incl
push
push
inc
push
xor
cs
insb
pop
dec
dec
add
push
or
add
add
dec
gs
gs
fbld
dec
outsl
fs
gs
imul
xlat
std
xchg
inc
inc
jb
popa
je
push
push
imul
jnp
sbb
insb
outsl
jae
dec
popa
outsb
fs
add
add
jg
mov
jo
xor
outsl
jb
cmovb
inc
outsl
outsl
je
gs
cmp
outsl
les
mov
add
js
add
mov
fisubrl
push
test
or
fs
add
mov
dec
insb
incl
lock
inc
dec
push
adc
jne
nop
pusha
nop
stc
insl
add
add
call
lds
jmp
pop
orb
push
xor
push
push
movl
das
mov
arpl
fs
rolb
mov
jae
cld
outsl
outsb
mov
mov
mov
mov
inc
or
rolb
jge
out
adc
pop
add
add
dec
nop
test
nop
je
lea
lret
jg
xor
add
push
mov
cmpsb
sbb
pop
jne
nop
nop
mov
in
je
and
mov
movzwl
mov
add
mov
add
jge
jmp
lock
popa
mov
xor
cmp
mov
cmp
je
lea
jnp
sbb
push
push
cmpsl
popa
sub
fs
dec
mov
lret
in
bound
dec
jb
ljmp
idiv
rclb
and
cld
pop
lea
dec
nop
testb
xlat
pop
ja
push
jmp
pop
pop
sbb
dec
call
testb
mov
pop
mov
dec
mov
pop
xchg
insl
repnz
add
inc
push
push
add
inc
inc
push
add
xor
add
add
nop
add
enter
xor
mov
inc
fadds
pop
mov
jg
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
bound
mov
outsb
and
inc
dec
push
and
fs
out
mov
inc
jnp
cmp
sbb
add
jle
add
addl
mov
add
jae
outsb
pop
ret
adc
xlat
popf
outsl
call
pop
add
push
imul
fwait
lods
dec
add
shll
dec
dec
adc
lods
and
add
or
into
adc
adc
jo
scas
outsl
add
test
pop
add
pop
mov
pop
sub
push
jnp
mov
or
pop
push
pop
mov
push
dec
jo
cmp
pop
mov
daa
or
push
sub
out
mov
les
out
inc
lcall
cmp
xor
mov
lcall
ud0
pop
or
xor
add
shll
lcall
test
push
xchg
push
push
jg
mov
shlb
sub
or
inc
rcr
adc
push
js
and
ljmp
int
stos
add
and
and
jmp
and
dec
jne
mov
ljmp
mov
dec
or
adc
fisttpl
jne
icebp
inc
hlt
std
pop
mov
jg
daa
stos
and
test
out
mov
push
xor
push
pop
push
out
repnz
call
pushl
je
mov
jg
jbe
xchg
pop
push
pop
ljmp
inc
mov
inc
dec
or
sub
pop
daa
mov
jnp
jmp
adc
push
sbb
adc
icebp
incl
sarl
pop
jle
sbb
loope
aaa
cld
aad
jg
mov
lahf
xor
push
cmp
mov
lcall
push
add
or
add
fs
in
mov
in
or
ljmp
out
jg
sub
jae
out
cs
adc
add
decl
adc
call
add
dec
rcrb
lcall
pop
push
inc
rol
les
add
ljmp
fs
dec
enter
mov
mov
imul
pop
int3
inc
add
lock
mov
arpl
outsl
cmp
rcll
shlb
jge
mov
mov
rclb
imul
movsb
movsb
movsl
ja
idiv
cmpsb
cmpsl
shll
stos
lods
dec
or
mov
or
pushl
fcmovnu
mov
jp
mov
jge
les
push
lock
popa
lea
add
cmp
add
jg
clc
cld
jl
clc
mov
mov
mov
inc
divb
add
cmpsl
cmp
call
pop
ja
pushl
std
aaa
mov
or
fcompl
pop
je
inc
add
cmp
outsb
cld
mov
sbb
out
adc
inc
lcall
incl
hlt
outsl
push
dec
adc
jne
push
adc
jl
scas
in
mov
decl
loope
test
das
popf
dec
or
and
in
in
pop
cs
mov
xor
icebp
xor
jb
lcall
loopne
mov
loop
jecxz
pmulhuw
cld
pop
clc
je
push
sbb
out
call
ja
mov
pushl
js
lea
push
cld
loope
or
sbb
in
outsb
jg
sti
fildll
or
add
push
push
sub
pop
push
cmove
inc
dec
pop
shll
sub
inc
ret
add
or
ret
or
lock
and
out
mov
push
aaa
inc
mov
daa
push
add
mov
xor
mov
jne
xor
out
cltd
in
xchg
cmp
lcall
decl
jno
sub
lea
decl
and
or
mov
mov
cmpsb
je
mov
fstpl
push
pop
pop
shr
pop
push
mov
push
pushl
lock
xchg
out
add
aam
lret
mov
fcomp
fcmovu
cld
dec
pop
rcr
fstp
out
sbb
add
insb
int
fs
jb
sti
mov
or
inc
jne
jbe
or
popa
js
popf
jg
ljmp
inc
jnp
fmulp
rcrb
jle
push
mov
xchg
or
lcall
in
addb
test
dec
xchg
es
add
adc
cmpsb
jmp
push
mov
popa
cmpsb
imul
mov
cltd
pop
lcall
fbstp
in
aaa
popf
insb
addr16
gs
bound
int
jp
test
les
lret
insl
xlat
xor
enter
mov
lret
xor
ss
je
int
ror
or
fistl
mov
sbb
jo
rcr
mov
pop
dec
mov
mov
inc
lcall
and
add
ljmp
push
mov
jmp
push
divb
shlb
lahf
testb
push
adc
pop
movsb
insl
fmuls
incl
insb
movsb
add
lret
fadd
pop
in
push
movw
mov
out
je
adc
push
mov
out
popa
pop
addr16
gs
sahf
out
pop
lcall
jmp
das
pusha
push
insb
mov
sahf
jo
xor
outsb
lcall
and
call
pushl
mov
wrmsr
or
loopne
mov
sub
mov
sub
jmp
sahf
xor
fdivl
adc
out
cli
decl
std
popa
pop
loope
mov
sbb
aam
pop
cmc
push
lcall
loopne
jmp
shrl
sub
pusha
mov
repz
iret
dec
pop
es
pop
int3
push
sar
and
decb
xchg
push
or
pushl
mov
fidivs
insb
adc
lcall
popa
xlat
xchg
imul
jg
ljmp
inc
fstpt
add
es
adc
pop
jbe
or
xchg
lcall
lret
gs
out
data16
es
xor
push
cmpl
inc
jmp
movsb
aam
clc
lods
sti
pop
or
dec
pop
jg
rol
fcmovb
enter
cs
push
push
stos
pop
pop
decl
xchg
jmp
int
into
and
xor
gs
rorb
rcrl
cli
incl
rcl
dec
and
test
ret
andl
out
add
mov
sti
push
repz
sbb
and
hlt
push
hlt
incl
movsl
dec
outsb
or
mov
sbb
clc
stc
or
nop
lret
decl
incl
push
sub
pop
xchg
pop
imul
mov
ja
lret
add
mov
xor
cmp
or
inc
add
dec
bound
add
movsl
mov
aam
xor
mov
ljmp
cld
fimull
add
mov
mov
dec
scas
add
in
in
mov
cmpl
out
add
in
out
sar
pop
clc
jg
out
push
mov
jmp
dec
popf
and
lods
push
hlt
inc
mov
insl
sti
xor
xor
out
sbb
dec
or
sahf
ds
jecxz
mov
sub
pop
sub
and
mov
nop
insb
adc
pushl
inc
and
sub
imul
inc
add
outsl
jmp
bnd
popa
hlt
sub
xor
imul
dec
je
adc
jle
jecxz
lcall
dec
and
jne
jp
lea
jmp
adc
fcmovnb
fsubr
pop
sub
decl
push
add
xor
test
push
mov
fdiv
mov
cmp
lock
push
sbb
push
mov
mov
test
push
cmp
push
rorb
push
imul
lea
dec
sbb
mov
call
jo
push
mov
addr16
xor
or
mov
add
inc
or
sub
cmp
pop
testl
mov
jbe
sti
pop
cld
std
addr16
fldt
dec
sarl
inc
jb
lock
mov
mov
pushl
cmc
hlt
out
mov
dec
pusha
mov
pop
mov
testb
fs
xchg
mov
call
add
jnp
movsb
or
movsw
mov
movsb
push
adc
jmp
push
mov
pop
pop
imull
rclb
cmp
push
decl
adc
add
jns
hlt
push
adc
adc
sub
xor
and
push
call
cmpl
aaa
lock
stos
pop
fs
add
add
ljmp
notl
in
add
add
imul
or
pop
call
adc
dec
or
sbb
jg
jae
maskmovq
cltd
std
or
jmp
stos
and
das
cmpsl
sub
or
cmp
mov
mov
aad
xchg
cld
push
aas
mov
aas
popa
je
insb
in
je
sti
arpl
or
mov
and
xor
cmp
pop
stos
clc
add
stos
fcompl
mov
enter
in
aad
lcall
sahf
lods
stos
jb
in
xchg
inc
mov
xor
xor
mov
mov
and
insb
pushf
add
call
maxps
and
das
pop
sbb
ret
sbb
push
vmovlps
mov
add
lcall
dec
cld
xchg
aaa
pop
lods
outsb
shll
mov
cmp
pop
mov
push
aad
jb
or
mov
mov
leave
mov
iret
and
mov
mov
hlt
pop
shrl
in
outsl
aas
dec
inc
cmc
jo
idiv
inc
stc
xor
cli
sti
test
dec
push
push
gs
adc
lods
cli
mov
cmpsb
enter
sub
gs
xchg
jmp
adc
jge
cwtl
pop
subb
or
push
inc
or
gs
add
rcr
cmpb
outsb
sub
jle
mov
jmp
ret
pusha
int3
stos
aad
mov
and
xor
incl
add
pop
cld
mov
inc
rcrl
pusha
jl
cmp
jecxz
dec
xchg
pusha
add
adc
jmp
xchg
decl
cmp
jmp
and
iret
outsl
std
jg
mov
ficoml
push
add
jnp
mulb
xor
sub
incl
fsincos
fdivr
out
mov
addr16
adc
fnstsw
mov
call
mov
mov
ljmp
or
push
ficomps
hlt
fadds
adc
jl
push
addr16
pop
xchg
push
or
je
mov
dec
xorl
cltd
push
jmp
mov
inc
es
dec
icebp
jmp
inc
mov
jae
add
aas
inc
sbb
push
mov
mov
mov
pop
add
sbb
sub
pop
inc
popf
stos
psubsb
call
xchg
in
out
cld
push
and
push
sbb
sbbl
sbb
dec
jbe
adc
and
es
andl
cld
mov
mov
std
daa
es
rorb
cmp
addr16
aas
cmp
lcall
or
add
jmpw
and
inc
adc
inc
jmp
inc
inc
ds
loopne
push
push
sbb
dec
outsb
dec
jbe
dec
mov
insb
inc
sub
jo
sbb
shrl
mov
adc
inc
sbb
mov
ret
je
inc
aam
pop
mov
popa
int
pop
push
imul
je
fstpt
or
add
sbb
xchg
push
xchg
stos
imul
push
cld
test
in
and
or
dec
and
xchg
movsl
outsl
lcall
and
daa
cmp
test
sub
sub
mov
sub
movsl
cmp
das
xor
inc
movsl
pop
lcall
xor
xor
dec
loop
pushf
xor
lret
pop
cs
xor
inc
out
push
lock
sub
inc
pop
repnz
add
mov
jnp
ja
je
nop
or
lock
cld
decl
or
jno
xor
push
or
or
insb
push
movaps
adc
mov
mov
jo
xor
xor
sub
adc
jbe
mov
sbb
sbb
inc
ja
test
sbb
push
scas
aam
incl
stos
jae
xchg
or
int3
mov
push
aad
loop
mov
mov
jo
sub
loop
dec
nop
pop
fsubrl
xchg
xchg
sub
dec
pop
lcall
fwait
js
pushf
popf
loope
mov
test
xchg
push
adc
or
pushf
nop
call
or
sbb
pusha
inc
dec
cmp
lahf
bound
or
xchg
xor
test
ljmp
gs
fs
test
mov
jo
out
imul
insl
or
cmp
iret
sbb
fcmovnu
mov
pop
cli
cmpsb
jmp
sbb
fbld
mov
fucomp
mov
lret
mov
push
mov
cs
xor
xchg
jnp
insb
arpl
sub
lret
test
out
in
iret
fs
js
push
pusha
fs
xchg
outsb
filds
je
popa
insb
inc
jo
push
je
sbbb
fistpl
add
das
cs
dec
and
lods
adc
cld
call
decb
dec
push
push
scas
test
in
push
fs
xor
in
mov
mov
cmp
pop
sbb
pop
aaa
pop
pop
enter
pop
xchg
pop
lock
clc
jg
jmp
fimull
clc
test
call
nop
add
fistpl
lds
mov
cmp
mov
incl
ret
inc
cltd
sbb
mov
pusha
pop
add
pop
loop
jg
aam
iret
push
mov
mov
ss
add
lods
aaa
jg
mov
push
cmp
in
jmp
sub
push
das
cld
outsl
std
enter
mov
mov
aaa
popa
in
jne
mov
sbb
jg
incl
xchg
js
push
in
aas
inc
mov
fldt
cmp
cmc
incl
leave
sbb
rcl
subb
in
push
and
js
push
mov
call
das
sub
enter
adc
insl
push
imul
cmp
incl
enter
sbb
fsts
das
dec
or
pop
and
rol
repz
ljmp
mov
cmpb
sar
pop
mov
lods
xor
and
popf
pop
inc
fldt
push
sti
int
or
mov
rcl
dec
std
dec
out
mov
jecxz
int3
not
mov
xchg
insb
das
ds
incl
popf
xor
test
rorb
push
fs
call
add
push
push
aaa
hlt
aas
pushf
lret
mov
cs
cmpl
push
sbb
adc
adc
jne
or
mov
mov
dec
faddl
add
pushf
out
mov
inc
movsb
aam
and
mov
loopne
loopne
jg
cs
lret
inc
sub
movsb
cmp
je
mov
jp
fnsave
dec
sub
incl
adc
in
adcb
jg
pop
pop
movsl
pop
sahf
aam
cmp
pop
cld
das
insb
icebp
imul
inc
sbb
inc
xchg
mov
ja
mov
lcall
or
pop
enter
shlb
ljmp
stos
call
lcall
mov
data16
sbb
sub
inc
fidivl
add
decl
lds
inc
sbbl
add
sbb
push
out
hlt
fcomip
sub
imul
cli
add
jg
push
jns
gs
push
mov
push
int3
in
in
out
out
inc
test
and
cld
xchg
mov
mov
mov
je
pop
clc
rolb
mov
lcall
jge
sbb
mov
arpl
pop
push
adcl
int3
mov
push
lea
push
fildll
cli
ss
jmp
or
jmp
xor
and
dec
jmp
pop
adc
inc
pop
setae
into
addr16
cld
xor
cmp
and
sub
sbb
jp
add
jmp
push
and
lock
push
icebp
inc
dec
xchg
aas
insl
enter
push
and
outsl
sbb
xor
pavgb
cld
xor
adc
jns
std
clc
std
icebp
jmp
sbb
lock
xor
repnz
idiv
adc
loop
sbb
push
mov
push
jp
movaps
add
lcall
mov
cld
cmpsl
hlt
es
mov
out
or
mov
ljmp
aad
push
sub
pop
or
repz
sbb
sbb
pusha
and
push
fnstenv
cmp
je
push
gs
popf
outsb
fs
mov
jno
mov
shlb
pop
inc
mov
xor
lahf
fsubrp
jg
cmc
subb
fdivrl
mov
add
test
adc
loopne
movsb
scas
in
inc
filds
mov
ljmp
dec
popf
dec
push
pop
aad
mov
adc
adc
pop
test
pop
sahf
and
inc
cwtl
jl
test
mov
mov
adc
push
outsb
dec
inc
mov
mov
je
mov
sbb
inc
mov
sbb
xor
mov
pop
adc
mov
inc
rolb
inc
cld
push
or
je
loopne
fnsave
je
jb
je
aam
int3
lret
sub
mov
and
or
fmuls
or
ljmp
lock
jno
jp
or
sub
je
mov
in
mov
pushf
aaa
push
adc
push
clc
push
inc
stos
in
ja
xlat
inc
dec
mov
add
jecxz
lcall
dec
hlt
push
cmc
inc
arpl
nop
inc
stc
mov
sbb
notrack
xchg
daa
jb
fdivs
and
xchg
std
mov
xor
and
fdivrl
repnz
popa
lcall
cld
outsl
outsb
bound
or
in
add
and
les
incl
int3
dec
sbbl
inc
mov
sub
mov
xor
stos
adc
clc
mov
mov
mov
fcomp
in
loop
xor
rorb
test
mov
push
sub
punpckhdq
in
pop
fists
leave
or
mov
subb
mov
pushl
or
and
add
lea
fildll
dec
mov
xor
push
push
pusha
inc
push
jae
cmc
jg
add
cld
adc
cmp
adc
mov
xor
inc
lahf
jae
sbb
pop
push
int
fcos
lods
fisttps
xor
or
int
in
jg
sub
inc
jle
fistpl
adc
push
dec
xor
jle
or
add
sub
xlat
das
icebp
decl
and
add
sub
pop
pop
push
aad
iret
ss
pop
cli
pop
xor
repnz
add
pushf
pop
shlb
cmp
pop
fcoml
hlt
push
cmpl
cmp
sbb
lcall
jo
and
hlt
sbb
and
adcl
mov
or
and
test
and
icebp
mov
andb
add
jl
outsl
mov
rclb
and
insl
decl
push
sbb
mov
mov
dec
mulb
sti
incl
adc
bound
inc
push
jbe
inc
inc
das
cmc
jg
inc
sbbl
inc
cs
mov
mov
popa
pushl
jbe
push
xchg
jae
jns
stc
mov
push
adcl
mov
xor
mov
jl
movsb
dec
pushf
outsl
sbb
lea
popa
push
pop
mov
sub
jnp
inc
adc
test
int3
jae
mov
xor
xor
pop
pop
cmp
inc
jns
xchg
in
rorl
insb
mov
popa
xchg
push
mov
xor
mov
xor
mov
or
mov
xchg
push
pop
jmp
pop
xor
jmp
jmp
cwtl
enter
outsl
inc
lcall
cmp
pop
mov
xor
cli
call
mov
ss
xor
sbb
mov
jno
rcll
lret
ljmp
push
rolb
pusha
lret
int
dec
fistps
daa
inc
ror
je
in
xor
adcb
es
adcb
cmc
lcall
dec
inc
and
dec
mov
xlat
pop
push
fwait
xor
push
pop
ljmp
adc
clc
push
loopne
inc
push
xchg
cmp
xchg
push
mov
or
filds
cmc
inc
mov
test
stos
nop
test
into
xor
adc
incl
insb
clc
movsb
sahf
inc
test
mov
push
dec
popa
ret
cmp
cs
push
sarl
sbb
jae
mov
incb
mov
jo
loop
in
out
inc
sahf
decl
std
mov
add
dec
mov
in
inc
push
inc
push
dec
or
sub
fstps
out
xor
test
inc
in
lret
cmp
cwtl
les
sub
mov
xchg
or
xlat
inc
or
aad
push
push
dec
mov
fstps
test
adc
fimuls
xchg
mov
insl
fcomps
push
and
iret
shrb
push
pushf
into
nop
sahf
or
sbb
push
call
inc
aaa
pop
add
je
pusha
cmp
or
sub
fstpt
clc
call
nop
xchg
or
xchg
xchg
inc
js
mov
clc
push
mov
xchg
inc
add
orl
mulb
adc
test
mov
adc
incl
std
push
addr16
mov
jb
jmp
insl
and
mov
adc
sbb
pop
in
leave
into
pop
call
mov
inc
cmp
repz
sub
lds
popa
push
sub
loope
aam
push
mov
leave
xchg
lods
or
jg
jg
sbb
leave
inc
jl
cmp
jg
pop
std
incl
or
jg
pop
ret
testb
inc
lcall
ljmp
pusha
push
enter
imulb
repnz
inc
mov
ljmp
adc
add
lods
dec
sahf
rcrb
insb
add
call
mov
lcall
repz
fcmovnb
and
jmp
rcrl
push
and
or
pushl
les
jne
push
add
inc
call
popa
lret
lock
mov
fnstcw
lods
daa
hlt
cld
add
pushf
push
or
xor
orb
and
fs
call
test
ss
xlat
xor
jmp
ljmp
scas
mov
loope
fldcw
lea
push
lea
rclb
or
push
lahf
mov
arpl
fsubl
negb
jg
sub
out
call
arpl
cli
mov
fwait
jns
stos
lods
sbb
xlat
andb
lea
dec
jle
inc
cmpb
sbb
xor
mov
ljmp
gs
or
popa
shlb
cmp
mov
shl
adc
orb
cltd
xchg
add
mov
inc
push
or
sbb
mov
pop
mov
sbb
idiv
mov
add
fmull
mov
jo
inc
xchg
decl
sub
bound
mov
cs
add
das
outsl
push
sub
xor
pusha
mov
sbb
je
add
jl
cmc
lods
test
cli
cmp
aas
jae
insl
or
cmpsb
push
or
or
cmp
lcall
ljmp
jo
jmp
cmp
jns
mov
adc
lods
imul
push
mov
cmp
inc
mov
loope
stc
xor
dec
aad
cmp
arpl
sub
xor
mov
or
imul
sbb
movsl
imul
xchg
cli
lcall
or
or
adc
xor
mov
je
notb
inc
std
mov
xor
dec
mov
dec
fdivr
in
loopne
repnz
hlt
mov
adc
sub
popa
das
fsubrs
sbb
adc
daa
pusha
jnp
nop
xor
aad
sub
xor
mov
call
push
stos
mov
and
repz
decl
fimuls
ss
xor
inc
jg
xchg
or
push
push
pop
xchg
inc
push
bound
push
or
sbb
pushl
int3
or
nop
daa
das
stc
data16
sar
popa
fsub
sbbb
shlb
test
jg
push
add
mov
mov
adc
ljmp
or
or
das
imul
andl
call
mov
dec
test
jb
out
adc
jge
cld
ficoml
inc
cmp
or
scas
lods
xchg
clc
insb
xlat
andl
enter
or
sub
adc
lcall
push
add
jp
dec
cmp
jg
jbe
push
or
icebp
mov
in
push
push
int3
cs
loope
push
mov
mov
jg
incl
xor
arpl
inc
xor
pop
push
setle
jg
dec
std
mov
mov
sub
int3
xchg
jp
jmp
mov
pop
pop
movsb
loop
mov
insl
push
leave
movsb
dec
in
scas
push
in
aad
dec
rcl
or
test
sbb
in
pop
aam
loope
jae
xchg
ficompl
xor
or
fs
jg
pop
lds
fidivs
xor
jno
lret
pop
inc
mov
nop
nop
mov
push
push
mov
outsb
mov
mov
add
mov
mov
fmulp
andb
loopne
sub
mov
mov
add
stos
test
lods
std
pushl
xchg
mov
pop
pop
and
pop
fnsave
and
sub
int3
ja
aam
xlat
shlb
ljmp
dec
jge
mov
mov
adc
das
push
cld
incl
gs
mov
pop
mov
aas
inc
adc
push
in
js
cli
pushl
rclb
pop
add
das
cmp
jae
pop
pop
clc
nop
add
pushf
add
push
jmp
dec
inc
xor
insb
imul
push
insl
leave
ret
push
and
ret
scas
mov
lcall
xorl
sub
mov
or
gs
rorl
jl
movsl
popa
sub
xchg
jmp
adc
mov
xchg
cmp
mov
push
out
add
std
insb
jo
cmp
pop
movl
shr
jmp
inc
mov
sbbb
xor
cld
jmp
sub
inc
and
dec
jno
add
sbb
push
dec
or
jne
mov
lahf
or
jo
scas
mov
icebp
inc
push
clc
cvtps2pi
lcall
ror
nop
addb
jmp
xchg
cmpsb
jecxz
sub
jl
lea
fcompl
decl
lret
mov
push
int
andb
outsl
add
sbb
loop
cli
cmp
aaa
test
sub
mov
lcall
inc
loope
test
mov
cmp
stos
adc
ljmp
js
inc
scas
fldcw
addr16
and
push
mov
push
orb
add
loop
incl
or
and
xor
mov
pop
mov
xchg
mov
sar
jmp
add
jne
nop
adc
and
add
call
and
cmp
jle
mov
stos
aaa
cli
incl
enter
stc
out
sti
xor
sbb
inc
ljmp
mov
mov
js
loope
lahf
sub
xlat
insb
push
jecxz
push
clc
lcall
xchg
jne
dec
and
mov
aad
mov
shll
ljmp
cld
cmp
daa
push
jbe
xor
cs
sub
jmp
in
inc
push
mov
push
je
push
test
push
movsb
or
jns
jmp
insb
pop
mov
loope
stc
pop
jg
pop
loop
popf
mov
cmp
pop
sbb
mov
and
lods
decb
add
je
mov
je
sbb
cmp
movsl
imul
jo
outsl
call
cwtl
add
call
jns
push
jne
or
xor
rcrl
stc
or
hlt
out
dec
xorb
and
ss
sub
jbe
push
push
fnstsw
call
lock
adc
adc
sub
mov
int3
aaa
sbb
push
or
in
add
mov
dec
enter
dec
add
mov
sbb
outsl
lcall
push
mov
sbb
or
cltd
insb
pop
jo
and
cld
mov
xchg
sbb
adc
or
ja
and
lret
aad
cli
push
cmp
dec
test
sub
mov
mov
icebp
mov
gs
les
in
adc
push
incl
aaa
aam
jp
dec
fstpl
aas
add
nop
lods
clc
clc
sbb
lcall
call
cmp
jge
or
or
sbb
pop
shl
in
mov
lret
cmp
push
mov
cmp
push
cmc
in
insb
fadds
inc
jge
mov
fildll
or
pop
jge
loop
xor
rolb
mov
push
pop
loop
cld
add
shll
cltd
push
cs
mov
fnstenv
js
mov
clc
cltd
ret
ficoms
pop
hlt
dec
sub
sbb
clc
sti
filds
cmp
lcall
sub
sub
push
jg
notb
pop
int3
mov
add
xchg
loope
lods
imul
pushl
leave
mov
and
lret
test
add
pusha
fs
int
cmp
sub
inc
stos
pushl
jns
gs
push
insb
pop
cli
mov
mov
insb
push
mov
lcall
stos
mov
xchg
lea
dec
int3
push
adc
push
jge
loopne
push
test
or
xor
idiv
add
pop
push
in
xlat
ljmp
insl
xorl
decl
testb
adc
sub
sar
jg
cli
push
in
pop
sbb
loopne
inc
pop
push
out
jg
mov
xor
mov
cmp
sbb
mov
lcall
cs
ret
push
repnz
cmp
pop
cmc
incl
incl
add
push
jmp
insb
mov
jg
push
inc
push
popaw
xor
inc
inc
stos
sbb
enter
mov
ljmp
icebp
enter
cmc
sbb
mov
xor
cld
xchg
psubd
mov
orb
xchg
mov
roll
jg
fldenv
cmp
xchg
and
lods
ja
jno
or
push
adc
or
js
adc
loope
pop
add
lcall
mov
lahf
xor
push
sti
jmp
daa
mov
push
loop
popl
gs
ja
pop
sub
mov
push
xchg
cmp
jg
nop
or
and
fcompl
aas
pop
mov
mov
call
clc
pusha
rclb
cmp
jp
jmp
sbb
xor
jg
add
mov
push
dec
push
movsl
mov
or
or
lcall
inc
test
popl
sub
mov
addl
pop
aaa
roll
cmp
inc
push
push
mov
mov
cmp
aam
sbb
mov
cwtl
sub
adc
mov
in
adc
xor
push
and
cmp
scas
test
fucomip
orb
negl
add
in
add
jg
or
inc
and
pop
mov
imul
imul
push
sti
push
pop
dec
mov
loope
int3
xor
leave
add
mov
clc
mov
aad
cmp
mov
je
fadds
push
clc
arpl
xor
clc
lcall
imul
mov
and
mov
ja
test
pop
std
call
sahf
cmpw
pop
mov
add
cmpl
mov
jmp
incb
add
pop
arpl
lahf
cmp
test
call
and
popf
divl
pop
ljmp
jne
ja
jge
add
pushl
ljmp
ljmp
cmp
arpl
mov
mov
sti
mov
inc
adc
push
sub
jns
cmpsl
out
mov
dec
sbb
mov
jno
int
adc
pushl
mov
push
push
mov
in
jo
outsb
lods
push
cltd
adc
out
jne
mov
js
aas
orb
sahf
dec
mov
and
jae
mov
idiv
outsl
hlt
pop
mov
mov
jnp
lods
xchg
push
adc
push
fmul
sub
inc
jb
add
mov
push
test
push
je
shlb
xchg
sub
shr
nop
mov
adc
sbb
sub
decl
cld
adc
sub
nop
or
ror
mov
sub
aaa
pop
inc
cmp
inc
sbb
adcb
jge
mov
or
mov
jg
sbb
jge
sub
or
inc
stc
ljmp
pushl
ficoml
adc
sub
cmpsb
pop
pop
fdivr
out
mov
cmp
jno
fisttps
and
rcr
sbb
adc
sbb
jo
push
outsb
push
push
add
fs
cmc
pop
or
inc
pop
pop
pop
ret
call
adc
les
and
test
shl
cmp
add
jo
and
mov
iret
test
stc
inc
cmpsb
leave
mov
fadds
push
sti
push
rol
cmpb
ds
adc
push
push
jbe
and
shlb
hlt
ljmp
sbb
outsb
jo
lds
pop
inc
test
xchg
xor
and
mov
jae
pop
sbb
or
pop
cwtl
fimuls
push
sub
pop
lcall
ret
push
test
pushl
loopne
out
sbb
pop
adc
test
movsb
cld
aaa
add
lea
cmp
daa
or
das
or
or
cltd
push
std
das
cld
aas
test
inc
popf
pop
pushf
or
add
and
mov
ret
or
lea
das
add
xchg
outsl
push
js
pop
add
xchg
xchg
or
cmp
decl
ret
daa
inc
push
jmp
xchg
loope
push
xchg
add
insl
add
dec
xor
fnstsw
ljmp
dec
addr16
fs
mov
push
popf
clc
mov
mov
inc
or
decl
repnz
jbe
outsl
lods
jg
sbbb
mov
inc
push
or
outsl
int3
aas
jnp
add
dec
loope
and
add
or
cmc
jecxz
xchg
jne
je
sub
fnstcw
and
outsl
clc
jbe
pushl
sbb
adc
cmp
iret
push
mov
sub
decl
push
mov
inc
cmp
je
out
add
add
inc
jmp
loopne
xchg
test
or
mov
lret
fadd
mov
add
jl
idiv
rolb
loop
dec
repnz
add
or
and
inc
mov
dec
iret
add
daa
or
sbb
cmp
inc
add
fildl
pop
test
lcall
push
or
mov
aaa
daa
sbb
or
sbb
pop
or
imul
add
repz
subb
push
lret
jp
add
hlt
cmc
rol
xchg
or
jg
jle
dec
add
hlt
inc
jmp
lcall
inc
ret
hlt
pop
fcomps
sub
adc
shrl
call
and
or
test
je
mov
ror
mov
mov
call
dec
jmp
push
push
adc
addr16
dec
dec
xor
xor
xor
xor
push
mov
dec
sbb
jge
mov
icebp
mov
mov
cli
iret
mov
fwait
jmp
mov
mov
dec
and
cltd
mov
decl
hlt
inc
lret
and
in
enter
add
push
mov
adc
jg
ljmp
in
dec
mov
in
lret
mov
mov
push
xlat
and
outsl
lock
ljmp
popa
mov
push
sbb
and
roll
incb
push
aad
mov
or
dec
xchg
call
mov
aam
and
xchg
and
sub
adc
xchg
call
fsubrl
pop
jmp
pop
scas
xor
xor
icebp
jne
sub
pusha
dec
lock
pop
sbbb
arpl
popa
inc
mov
outsl
cs
jae
sub
sbb
leave
push
test
inc
add
test
or
dec
aam
push
jp
data16
lods
cmp
add
lcall
call
daa
adc
fs
fcomp
pop
adc
dec
cmc
mov
fadd
cs
mov
dec
arpl
push
imul
and
jg
ficoms
add
fistpll
add
jbe
and
pop
inc
or
addl
ljmp
xchg
in
pusha
ljmp
hlt
pop
popl
int3
add
xor
xor
mov
add
call
fisttpl
inc
mov
add
cli
ret
add
adc
sub
inc
popa
add
push
fs
add
mov
sub
into
les
std
das
insl
fistpl
shrb
inc
xor
ljmp
in
gs
ss
stos
mov
push
and
add
cs
sbb
stos
fists
test
loopne
int3
les
mov
jl
bound
fisttpl
xor
addr16
cmpsb
sbb
mov
or
pop
and
sbb
or
push
mov
add
mov
lea
daa
add
movzbl
lret
pop
testl
decl
inc
lsl
pslld
push
cwtl
pushf
mul
xchg
mov
andb
scas
in
addr16
arpl
dec
shll
dec
es
leave
fs
xchg
std
jmp
xor
adc
ss
add
add
dec
push
push
dec
inc
dec
decl
push
int3
dec
cs
dec
xchg
sub
lods
mov
outsl
cld
dec
xor
pop
add
in
iret
ss
arpl
push
aad
xor
add
mov
pop
sar
lcall
cmp
cmp
cmp
das
push
gs
imul
outsb
frstor
iret
outsw
cmp
sbb
ud0
incl
and
lcall
fs
cmpsl
jmp
pop
add
das
into
jg
mov
jg
pop
add
jg
out
and
dec
gs
jmp
jb
push
jnp
out
outsl
jae
sub
add
imul
pusha
sub
mov
insw
xchg
aaa
pusha
gs
push
push
dec
outsl
imul
pop
add
push
int
pop
dec
cmpsl
inc
enter
push
add
inc
add
fistpl
add
jb
push
pop
sbb
fcoml
jg
rorl
and
call
fidivl
fbstp
ds
test
bound
gs
jg
shll
je
insl
inc
xor
jg
pop
pop
in
outsl
mov
inc
jne
data16
or
rcr
lcall
nop
sub
call
push
add
fs
add
aaa
clc
pushl
aaa
sub
jb
inc
dec
jae
out
je
xchg
add
jb
or
incl
adc
mov
shl
popa
jae
dec
insb
in
scas
insl
cmp
add
mov
inc
sbb
sar
cmp
and
pop
sub
decb
cmpsb
push
sub
ret
push
imul
adc
push
push
add
fstpt
jnp
out
outsb
push
or
or
pop
sti
imul
inc
jns
sub
pop
inc
outsb
pop
jnp
je
loop
adc
adc
sub
jo
mov
inc
xchg
clc
pop
clc
pandn
jbe
shlb
aaa
outsb
addr16
mov
sar
or
or
aaa
gs
popf
and
add
pushl
mov
in
jl
inc
or
jbe
arpl
inc
pop
out
inc
outsl
jl
inc
cmp
and
inc
imul
loopne
fcmovnu
push
daa
adc
sahf
data16
jl
js
outsl
ja
lods
clc
ljmp
pop
jae
arpl
popa
sub
das
shl
bound
jbe
inc
int
mov
jb
ret
hlt
adc
cltd
jo
pop
push
xchg
insl
fmull
sub
ret
out
das
outsb
push
mov
or
movd
in
mov
push
inc
outsb
mov
xchg
clc
ljmp
jb
in
cwtl
fwait
xor
insl
bound
daa
push
outsl
jo
fbld
imul
loop
aas
in
aas
xor
shlb
dec
inc
pop
push
cwtl
jnp
pop
push
adc
dec
out
mov
data16
icebp
insb
jne
pop
cmpsl
pop
cwtl
mov
cwtl
sbb
sar
lods
xor
push
sub
rolb
leave
push
pop
ja
inc
sbb
shll
bound
jae
in
repz
inc
fstpt
lcall
adc
dec
outsb
sbb
ret
mov
push
test
mov
sahf
sub
or
adc
or
pop
push
inc
out
cmp
jo
fistpll
std
ret
sub
pop
inc
outsl
add
pushf
js
daa
cli
incl
xor
pop
or
or
push
or
push
std
out
xchg
xor
xor
or
and
js
and
or
pop
call
adc
lcall
nop
inc
push
pop
sbb
dec
cld
xchg
or
sbb
or
or
jne
testb
add
or
adc
daa
pop
inc
and
lock
add
and
adc
sub
push
adc
adc
or
inc
dec
lock
pop
jg
sti
pop
bound
xor
movsl
and
pop
loopne
jg
and
sub
mov
cmp
popf
adc
ss
rcrb
or
adc
add
adc
pushl
fidivrl
aaa
lods
sbb
push
sbb
popa
movsb
mov
insb
mov
fwait
pop
pop
or
mov
mov
movsb
sub
and
push
xchg
add
adc
lcall
pushl
in
mov
sti
sbb
and
mov
adc
mov
fcmovnu
fwait
or
clc
xchg
outsb
add
add
xor
mov
frstor
adc
sbb
fistpl
or
mov
imul
mov
in
mov
sub
lods
std
insl
imul
jle
popf
push
sub
push
std
push
sbb
in
aaa
add
or
adc
sbb
or
mov
fs
add
lods
and
sbb
jle
pop
adc
push
mov
push
lods
add
mov
sbb
push
pop
sti
fildl
pop
or
cmp
inc
lock
adc
cs
loope
or
or
push
push
push
push
pop
or
ljmp
lock
popf
sbb
push
mov
popf
push
pop
loopne
xor
push
cs
xchg
or
add
lret
pusha
jmp
dec
dec
add
dec
add
inc
mov
mov
jle
into
mov
push
adc
push
decb
out
test
or
insb
sbb
add
xchg
lret
test
pushl
test
add
jne
lret
popa
inc
addr16
add
sti
fldt
add
xor
push
sub
lock
je
negl
mov
insb
dec
nop
jmp
and
incl
jne
mov
jne
pop
sti
or
or
daa
push
inc
add
ljmp
iret
pushf
and
daa
int
xlat
rorb
or
lcall
fisttpl
les
inc
andl
subl
add
add
scas
pop
shrb
mov
divb
nop
faddl
nop
add
lea
int3
inc
mov
inc
add
pop
mov
sub
xchg
jne
das
int3
jb
mov
mov
or
out
jne
push
jae
xor
add
test
or
ret
je
lds
leave
or
and
sarl
popa
and
add
test
aam
roll
lea
cmp
jbe
add
dec
shll
fdivrl
jmp
add
add
incl
sub
ja
add
jmp
std
mov
mov
sub
cmp
ja
cmpb
jne
mov
mov
adc
shr
rol
xchg
sub
sub
mov
loop
sti
in
mov
lea
add
or
je
mov
lea
fisttpll
mov
or
cltd
in
mov
push
dec
repnz
push
adc
cs
mov
adc
das
add
xor
in
dec
mov
mov
sbb
cmp
ja
add
mov
mov
jne
add
loop
mov
pop
out
mov
mov
mov
inc
jnp
push
imul
call
lea
jg
sub
adc
jg
pop
popa
lea
push
les
sub
jmp
int3
adc
add
cs
mov
nop
xchg
dec
lcall
mov
inc
mov
jbe
push
mov
and
xchg
and
rdmsr
mov
mov
mov
mov
inc
push
dec
inc
dec
mov
inc
js
add
dec
sbb
push
inc
push
push
or
lret
cmpb
xchg
adc
jle
sub
push
imul
adc
jo
fs
and
inc
sub
adc
jne
call
push
dec
adc
dec
outsb
je
int3
ja
pop
out
inc
stos
cmc
mov
mov
lsl
push
andb
data16
stos
mov
ds
mov
add
inc
cwtl
inc
dec
sbb
mov
and
add
fnstenv
sbb
sub
cmc
gs
outsl
push
push
lods
cmp
sbb
push
js
fidivrs
rcll
jne
cmp
push
fld
mov
adc
imul
inc
sub
sub
gs
push
or
and
mov
sub
inc
and
outsl
daa
jnp
mov
inc
cs
je
imul
je
int
je
jae
shrb
push
push
push
mov
neg
adc
jbe
outsl
outsb
push
fs
dec
sub
popa
fiaddl
bound
shll
gs
sti
jnp
add
scas
and
push
test
dec
stos
jo
outsb
outsl
fsubs
adc
insb
jae
das
addr16
fldcw
dec
popa
or
lahf
je
pop
stos
test
outsw
inc
mov
imul
outsl
fistpl
sub
jo
je
mov
add
or
insl
mov
dec
push
pop
sbb
imul
push
add
imul
adc
out
xor
xchg
sub
ja
lods
and
mov
inc
arpl
xchg
fisubrl
or
lds
add
xor
cs
outsl
mov
fsubs
pop
jo
iret
xchg
ret
push
imull
push
jnp
mov
or
popa
sub
iret
arpl
jne
jo
int
sub
xchg
inc
js
mov
xorb
sbb
mov
cwtl
cmp
push
xchg
and
shlb
outsb
gs
ds
imul
add
or
add
enter
fs
icebp
imul
dec
or
fs
inc
or
out
cmp
add
invlpg
rcrb
iret
adc
call
and
mov
test
daa
aas
or
jo
sub
cmpsl
adc
push
add
mov
je,pn
js
cmc
cmp
and
jb
sbb
mov
movsb
push
or
lret
inc
cs
js
xchg
or
daa
shr
xlat
push
jo
cmp
pop
lods
movsb
dec
in
add
add
lock
mov
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
