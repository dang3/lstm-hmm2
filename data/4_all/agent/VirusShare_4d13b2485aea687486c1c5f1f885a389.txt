mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
push
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
.byte
mov
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
.byte
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
sahf
mov
fcomp
and
and
jb
push
jmp
and
ds
sarl
fwait
adc
adc
dec
xchg
sbb
pushf
mov
cltd
jnp
pop
das
enter
mov
adc
imul
mov
movl
add
scas
loop
imul
push
mov
cmp
dec
cmp
sub
push
pop
inc
xchg
gs
dec
gs
adc
std
jo
mov
mov
mov
stc
into
pop
pop
mov
out
test
or
push
stos
js
test
sahf
cmpsb
or
stos
add
rorb
adc
leave
and
fidivl
mov
and
cli
ret
inc
xor
mov
lods
mov
inc
or
iret
push
push
rcl
lock
and
xor
into
mov
inc
push
lods
out
lahf
and
push
dec
push
iret
pop
sti
lret
je
cld
and
insw
rcll
jg
mov
pop
jo
popf
push
adc
ds
and
imulb
jp
adc
mov
mov
fimuls
and
and
mov
fwait
aaa
sbb
adc
dec
xchg
xchg
jle
in
inc
add
add
inc
sbb
pop
in
adc
xor
or
xchg
std
int
and
mov
sbb
decl
xchg
test
mov
testb
sub
sbb
add
xchg
lret
repnz
dec
add
dec
xor
icebp
leave
data16
popa
popf
es
popf
gs
lret
enter
jno
pop
lea
add
mov
xchg
leave
stc
xchg
dec
pop
xchg
ljmp
xchg
mov
scas
cld
push
push
adc
cmp
fisubrs
cld
pop
cwtl
enter
orl
jp
imul
xchg
sub
add
and
ret
xchg
orl
push
int
in
push
dec
fs
scas
or
jnp
fucomi
aad
sti
sbb
fld
adc
mov
fidivs
bound
imul
cmpsl
mov
push
xor
int3
sahf
subb
js
cld
xor
pop
dec
cmp
dec
mov
cmp
cmp
adc
adc
mov
jmp
inc
push
mov
mov
bound
std
inc
mov
adc
mov
repz
xor
lea
dec
add
sub
mov
aam
jl
mov
data16
dec
dec
xchg
dec
add
mov
xchg
into
hlt
jp
adc
cmp
aaa
and
and
stos
call
xchg
jle
adc
ja
enter
rolb
in
dec
int3
xchg
xor
imul
hlt
subb
nop
out
mov
push
jecxz
xchg
lahf
mov
push
aad
std
sar
inc
cmp
es
pop
ret
push
insb
add
jae
cmp
es
int
arpl
cs
lods
scas
in
jnp
push
dec
js
jle
mov
fdivs
popa
scas
sub
inc
xor
or
and
ret
jle
mov
mov
mov
push
push
add
mov
insb
mov
js
shl
mov
es
popf
sub
pop
inc
std
cwtl
jne
sbb
out
test
jmp
rorb
jns
jnp
sub
mov
and
mov
add
subl
jne
jp
xchg
mov
mov
push
lods
jb
lods
sub
imul
push
mov
push
jae
adcl
js
cmp
dec
lret
sarb
mov
xchg
aas
mov
shlb
test
int3
fdivs
mov
sbb
jne
or
mov
shlb
push
dec
or
push
add
hlt
mov
mov
dec
in
inc
addr16
fdivrl
insb
clc
imul
in
inc
xchg
mov
xor
roll
jns
mov
adc
xchg
fadds
imul
aaa
and
fildl
mov
jge
daa
js
pop
pop
mov
dec
rorb
dec
and
and
cmp
rcll
orl
or
movsl
movsb
flds
push
aaa
jg
mov
push
or
lahf
inc
xchg
cmp
inc
mov
pop
push
xor
lret
jne
nop
shl
push
in
push
notl
jb
inc
loop
sub
gs
dec
lret
jno
add
sar
mov
inc
fs
fdivs
mov
pop
adc
mov
sti
decl
test
lds
jmp
xchg
xor
je
js
out
dec
adc
ljmp
hlt
rcl
cmpsl
call
or
inc
inc
sbb
leave
push
js
xor
fwait
test
dec
mov
mov
sub
gs
xchg
push
dec
pop
lret
pop
add
aaa
sti
iret
popf
cmpsb
push
clc
repz
test
and
rcrl
stos
cmc
xchg
jl
fs
add
movsl
push
aam
aaa
xchg
or
cmpsl
xor
sub
adc
insb
push
mov
xor
mov
sub
enter
fmuls
int3
xchg
lahf
or
dec
xor
dec
sbb
sbb
push
bound
jge
mov
jae
push
frstor
pop
bound
mov
sbb
cmp
push
int3
scas
push
sbb
xlat
xor
ret
arpl
sub
mov
mov
and
std
xchg
xchg
mov
adc
jnp
add
lea
push
xchg
push
lret
mov
cmp
arpl
jge
push
cmp
das
lret
aad
xlat
nopl
jmp
ficoml
outsb
pushf
xchg
ss
fadd
ja
xchg
dec
mov
packsswb
movsb
add
inc
ja
cs
orb
sub
cmp
inc
or
mov
bound
rclb
adc
icebp
xchg
mov
mov
xor
pop
add
outsl
ja
jns
test
pop
stos
insl
pop
inc
sbb
pop
add
aaa
aas
je
mov
inc
cmp
pop
in
cmp
pop
inc
lock
sbb
lcall
pop
inc
xchg
mov
inc
je
or
ret
or
sbb
adc
fidivrl
loopne
push
jecxz
mov
idiv
sub
sub
add
xchg
pop
add
aaa
fwait
xchg
fwait
adc
or
xchg
xchg
mov
roll
daa
scas
xchg
or
pop
clc
bound
insl
nopl
aam
and
or
cld
dec
out
addr16
fnstcw
bound
adc
js
cs
push
call
or
mov
mov
cmp
push
loope
cmc
sahf
push
das
in
adc
cld
mov
repz
cmp
into
and
in
addb
sub
xlat
lcall
test
nop/reserved
lcall
inc
leave
lds
sub
sub
and
addr16
jo
mov
mov
mov
cwtl
lret
ljmp
jbe
mov
or
xor
mov
or
pop
pushf
in
cmovle
add
dec
push
inc
xchg
stos
stos
cmp
les
es
fidivrl
cmpsb
or
mov
mov
push
inc
lret
sbb
jne
loope
or
dec
xor
add
dec
inc
loopne
pop
inc
dec
inc
xor
pop
sahf
setae
stos
int
and
lcall
iret
jnp
add
pop
xchg
orb
push
pop
popf
xchg
filds
imul
sti
enter
mov
lcall
mov
mov
xor
fisubs
imul
xor
add
pop
dec
leave
je
xor
jge
or
mov
lock
push
and
sahf
rclb
js
jecxz
dec
rcl
hlt
mov
push
sub
dec
mulb
daa
add
aad
or
mov
shlb
std
insb
imulb
jl
sub
or
out
mov
imul
shll
pop
jmp
dec
sbb
je
and
mov
jecxz
lahf
cmpsl
mov
mov
push
jecxz
dec
mov
iret
lahf
add
pop
lcall
es
popa
mov
push
xchg
push
into
cmpsb
movsl
push
sub
inc
insl
mov
adc
jle
scas
cmpsb
mov
gs
jo
inc
cmp
mov
xor
cmpsb
lahf
imul
mov
clc
push
jbe
insl
orl
gs
clc
loopne
jl
jp
test
lock
imul
mov
int3
ja
add
jecxz
dec
adcb
pop
stc
cmpsl
nop
or
into
in
popa
push
js
inc
inc
jmp
scas
dec
cmp
rorb
xor
popf
int3
push
jno
ja
ljmp
push
in
mov
adc
xchg
xor
aam
rcll
jecxz
rclb
ja
scas
es
stc
mov
mov
lret
int3
or
call
push
sarl
jg
xchg
pop
push
ret
or
inc
scas
or
sub
mov
cmc
pusha
cmc
and
out
jno
jmp
sub
dec
pop
adc
jecxz
subl
pop
jge
inc
adc
loopne
and
dec
cmp
mull
fimuls
je
je
mov
jb
inc
xchg
test
xchg
and
popa
pop
and
out
jle
and
add
repz
stos
lods
out
mov
insl
sub
push
imul
add
xchg
test
or
adc
push
lock
in
pop
add
push
pop
xor
test
dec
repz
imul
test
pushw
xor
add
in
aaa
pop
or
and
pop
movsl
int
repz
jl
rorl
sub
jl
push
inc
es
mov
dec
js
adc
mov
add
mov
add
sar
sub
xor
loope
jne
imul
fwait
pop
push
inc
in
cmp
imul
mov
xchg
mov
ljmp
fs
shlb
push
cli
xchg
sub
loopne
mov
fists
jl
mov
fsubl
and
add
inc
loopne
and
add
mov
imul
iret
pop
jnp
repnz
jae
jge
mov
inc
rolb
mov
sti
and
fnstenv
push
xchg
inc
mov
adc
lods
ja
jne
cmp
std
ret
cmpsb
mov
cmpsb
outsl
loopne
cmp
jge
mov
mov
xchg
or
pusha
jns
jp
mov
xchg
repnz
out
mov
xchg
iret
cltd
lods
dec
int3
das
xchg
cld
fbld
xchg
stos
fldenv
pcmpgtb
adc
pop
cmp
loop
in
outsl
pop
lret
jae
jbe
or
loop
scas
testl
cwtl
outsl
in
mov
xor
mov
leavew
pop
cmpsl
push
movsb
test
mov
outsl
stos
fstps
jb
mov
dec
movsb
js
pop
lahf
clc
push
sbb
cmp
cmp
cmp
sar
lcall
add
cmpsb
dec
sarl
call
jne
add
or
mov
arpl
jns
pop
jge
test
fs
movsb
int
sub
adc
inc
mov
pop
pop
jb
aaa
dec
jnp
lahf
in
sbb
jae
je
pop
add
mov
mov
inc
iret
sub
xchg
ds
fldl
cmp
mov
jae
mov
fcmovnbe
xlat
leave
lods
mov
test
pop
dec
pop
pushf
mov
push
and
pop
popf
xchg
rcrl
xchg
int3
imul
in
call
and
aam
mov
jle
out
out
loope
sahf
cli
mov
mov
addr16
mov
jge,pn
test
into
jnp
cmp
mov
inc
roll
arpl
fwait
scas
clc
in
fistpll
inc
and
jne
sbb
or
dec
loopne
iret
lahf
adc
int3
lret
sbb
push
cmpsb
xchg
insb
loopne
test
nop
jo
mov
cwtl
push
addr16
xorb
and
sarl
and
jb
jns
push
jno
lret
xchg
mov
dec
jl
fwait
xor
mov
std
insl
sbb
popa
mov
add
jle
out
fisubrl
pop
fdivrs
mov
cmpsb
xor
mov
js
and
dec
push
andb
adc
mov
mov
xchg
aam
xor
jmp
cmp
or
rolb
or
sti
sbb
and
rol
jmp
sti
add
mov
pushf
jge
mov
jmp
push
xchg
or
fucomip
jne
jnp
mov
loopne
sbb
cwtl
std
loopne
adc
clc
cmp
jl
xchg
icebp
outsl
sub
and
dec
in
and
jns
sub
inc
xchg
and
mov
push
push
add
mov
inc
xchg
iret
shl
xor
and
mov
cmp
or
push
loope
sbb
bound
jmp
push
test
out
dec
jnp
std
ss
bound
or
scas
push
testb
push
lcall
mov
out
and
and
ds
add
popf
stc
repz
icebp
nop
fcoms
mov
mov
dec
fs
rcl
std
xchg
add
cmp
sqrtps
enter
in
stos
out
int3
xor
mov
cmp
fistpl
into
xchg
add
sub
test
fistl
pop
fistpl
sub
inc
hlt
sub
outsb
mov
push
pop
jecxz
sbb
sahf
cwtl
mov
lods
cltd
imul
nop
xchg
sub
fcmovb
xor
cmpsb
and
adc
xchg
pop
test
das
xchg
push
lret
pop
cli
popa
mov
mov
inc
pop
inc
in
mov
sub
mov
push
pop
ss
scas
fnsave
mov
mov
sbb
inc
cltd
dec
add
popf
or
fsubrl
and
mov
and
add
dec
add
fisttpll
inc
les
push
push
xor
dec
mov
rcl
push
xchg
sub
enter
xor
fists
inc
sti
arpl
push
shll
mov
push
sahf
sub
data16
jmp
loope
xor
jae
push
xor
jno
jb
clc
sub
sub
pop
push
add
test
nop
sub
aam
xchg
sbb
bound
jmp
or
in
lods
push
sub
sub
out
rorb
cmp
icebp
xor
mov
jbe
push
outsl
sbb
aaa
jmp
jnp
shl
in
push
mov
push
jmp
dec
push
mov
mov
mov
sahf
inc
pop
test
xchg
lret
lea
dec
dec
pop
or
sbb
xor
xchg
mov
in
loope
sbb
inc
add
out
inc
sahf
push
ret
pop
and
lock
mov
subb
repnz
mov
shrl
mov
loopne
addb
cmp
jnp
imul
jl
out
mov
inc
mov
sbb
jmp
sbb
inc
inc
pop
cmp
jnp
int3
push
jmp
sbb
stos
lock
into
fstl
xchg
cmp
lods
xlat
push
add
push
inc
repnz
jne
mov
das
lock
xor
shl
pusha
jo
cmpsl
jne
pushf
mov
das
cmp
or
in
ss
fs
cmpsb
cmp
add
mov
leave
fwait
add
mulb
cmc
cmpsl
mov
jmp
test
icebp
pop
mov
ds
jnp
inc
imul
xchg
cmp
enter
xor
fdiv
into
mov
bound
xor
push
add
int
loop
add
mov
xor
sub
lret
mov
in
mov
or
or
stos
cmp
data16
jno
dec
fdivrs
aas
lcall
xor
cli
jns
lcall
add
stos
in
les
mov
fcomps
push
clc
sbb
cmp
aaa
leave
cld
cmpb
lahf
jns
bound
fdiv
mov
cmpsl
leave
push
mov
out
sbb
das
mov
dec
xchg
fsin
scas
xor
fwait
lods
gs
pop
xlat
insl
and
lret
int3
pop
pusha
cmp
call
mov
fsubr
lds
rcrb
outsb
data16
cwtl
inc
xchg
ret
sti
mov
inc
cltd
xchg
mov
into
xor
hlt
shr
stos
push
add
outsl
fimuls
outsl
cmp
cld
xlat
or
mov
mulb
divb
xor
jle
rolb
hlt
inc
test
cli
mov
aam
mov
into
mov
sbb
rol
les
cmp
jecxz
sub
dec
sahf
shrb
popf
cmp
stc
enter
outsl
dec
icebp
jae
sub
mov
add
push
dec
arpl
xor
xchg
aad
mov
hlt
mov
sarb
and
mov
cmpsb
xchg
leave
sbb
xor
jp
adc
add
mov
mov
sbb
inc
cmp
pop
mov
sbb
mov
inc
mov
add
cwtl
mov
mov
or
jle
cmp
es
fnstcw
lods
adc
jecxz
loop
mov
imul
mov
jnp
iret
or
mov
sbb
pushl
xchg
frstor
jo
mov
clc
jge
incl
out
decl
popa
fsubrs
lds
jmp
insl
mov
push
fld
cs
mov
lahf
push
sbb
xor
sub
jb
sbb
add
subl
pop
lock
call
je,pt
xlat
sub
mov
jmp
jb
lods
adc
stos
addr16
rcrb
fwait
arpl
mov
popf
lods
mov
add
repnz
inc
nop
ja
es
std
test
mov
push
sub
pop
int3
test
pop
dec
cwtl
sbb
pop
push
enter
cld
adc
addr16
adcb
xor
jp
mov
fimuls
jae
mov
mov
push
mov
push
movsl
int
xor
jp
xchg
ljmp
xor
pop
fsubl
lret
fiadds
adc
cld
cmp
add
arpl
sbb
xchg
mov
cmp
pslld
cwtl
push
push
in
rcl
imul
jo
gs
cld
hlt
iret
pushf
mov
mov
pop
pop
lock
movzbl
lods
and
push
jne
sbb
in
out
jp
adc
enter
mov
push
xlat
dec
cmp
mov
fadds
movsb
jge
mov
rcl
xor
shlb
test
sub
movsb
cmpsl
add
jae
clc
movsl
jb
cmpl
arpl
arpl
out
sbb
jb
adc
mov
xchg
aam
push
mov
arpl
mov
cs
xor
sub
sbb
jp
xchg
addr16
fstpt
mov
shll
jmp
out
cmp
orl
punpckldq
fisttps
into
divl
cltd
mov
add
and
mov
push
adc
jne
scas
out
test
adc
fwait
mov
jns
push
xor
std
mov
outsb
dec
ret
mov
xchg
xchg
mov
test
insb
cld
cmp
inc
mov
or
and
arpl
ret
shll
shlb
sbb
cbtw
out
xchg
jmp
loopne
xchg
outsl
incl
push
lss
mov
ss
pushf
xchg
push
int3
add
cmp
add
cld
popa
repz
push
xor
shll
std
xchg
std
call
mov
shrl
and
pop
cltd
cld
sbb
push
jg
mov
mov
cmpsl
into
adc
xchg
pop
sub
jge
mov
in
dec
dec
push
jecxz
mov
pop
or
inc
inc
mov
mov
andl
aad
push
cld
test
cmp
add
imul
test
fs
mov
loopne
imul
adc
stc
pop
cmp
cmp
and
and
fs
lret
pop
mov
cs
mov
jmp
mov
dec
push
std
sbb
mov
xlat
cwtl
div
sbb
push
push
pop
mov
cld
fiaddl
mov
cmp
jmp
stos
loope
mov
lret
lret
or
mov
or
dec
pop
jae
mov
mov
sbb
sti
test
push
cmp
push
ret
test
loopne
adc
lret
sub
pop
fwait
sbb
sti
out
repz
scas
and
xchg
xchg
xchg
dec
cmc
aas
sahf
imul
outsl
jbe
sbb
outsb
lret
adc
jnp
mov
pop
mov
xchg
lods
ljmp
sahf
push
jnp
icebp
pop
pusha
xchg
and
sbb
lahf
sub
pushf
scas
out
and
lahf
jp
ficoml
jp
scas
xlat
and
push
ja
fnsave
sahf
sti
ret
and
push
iret
orl
loopne
ret
jae
mov
adc
sub
std
cmc
hlt
inc
and
mov
xor
adc
int3
scas
pusha
push
jmp
push
pusha
jg
pop
les
mov
push
popf
test
push
in
push
mov
add
mov
sbb
repz
push
xlat
ljmp
sar
aam
and
jmp
xchg
sub
pop
sbb
shr
lret
into
sbb
add
sub
mov
std
aaa
xchg
nop
and
loopne
add
xor
int3
jle
dec
sbbl
enter
out
mov
cmpsb
sahf
imul
sahf
and
sub
push
and
jo
push
stos
mov
into
mov
sbbl
out
les
mov
adc
push
dec
fcomps
clc
pop
xchg
scas
cmp
movsl
pop
or
and
mul
sub
enterw
xor
cld
sarl
cmp
lds
in
and
out
inc
loope
sub
xchg
adc
jo
es
shlb
or
movb
shlb
xor
leave
js
cmp
xchg
push
sahf
push
jmp
inc
cmc
pop
insl
mov
jns
or
popf
cltd
repz
hlt
arpl
sbb
addr16
cltd
ljmp
ds
add
lret
fstps
mov
loopne
xor
adc
push
mov
or
inc
sub
mov
orb
adc
mov
mov
and
or
dec
cwtl
xchg
mov
jecxz
xchg
jns
jns
jno
jecxz
lds
sub
pop
das
andl
jnp
lds
sahf
ss
hlt
mov
js
ja
mov
xchg
push
dec
adc
shll
xchg
out
lret
pop
ss
xchg
in
xchg
rcrb
lock
popf
in
lret
out
rcr
imul
popf
icebp
enterw
xchg
or
das
adc
add
fsts
push
mov
clc
outsl
push
mov
js
repz
fimuls
insl
imul
ret
ljmp
scas
pop
out
push
push
xor
addl
dec
aaa
bound
jge
addr16
cltd
mov
xchg
stos
stc
loopne
arpl
enter
cwtl
cmp
cmp
and
call
nop
scas
add
popa
dec
add
insb
pop
cli
loope
lds
mul
daa
ljmp
pop
mov
mov
addr16
pop
jmp
xor
push
fildl
push
fisubrs
sbb
jmp
mov
std
pandn
mov
jl
cmpsl
dec
dec
nop
xor
outsl
cmc
or
loope
pop
jmp
addr16
push
fwait
cltd
xor
mov
movsl
aam
jb
dec
idivl
lahf
push
dec
arpl
mov
adc
fldt
inc
xor
ja
push
xlat
xchg
lcall
xchg
clc
lods
iret
negl
pop
mov
dec
jo
ljmp
mov
dec
sub
aad
stc
call
fisubrl
imul
sahf
out
ljmp
xchg
lock
cltd
outsl
in
popa
arpl
insl
adc
cmp
test
scas
jecxz
dec
iret
cwtl
daa
int
push
dec
xchg
push
xlat
sbb
jb
pop
sub
in
daa
pop
fsub
shl
orb
loop
stos
or
mov
cmp
sbb
sahf
dec
sti
cmp
inc
shrb
inc
adc
mov
jae
inc
adc
cmp
pop
sbb
xchg
rcrb
inc
push
loop
dec
js
xor
or
scas
xchg
jge
or
adc
sarl
inc
sbb
icebp
ret
ja
lcall
mov
adc
pop
mov
xor
push
je
inc
fstps
mov
or
pushf
xchg
inc
ja
in
jae
leave
aas
mov
push
jge
push
push
rcl
push
lea
ret
rorl
push
nop
mov
xlat
adc
cmp
or
insl
in
xchg
aas
xlat
push
push
jg
aaa
imul
sub
cld
and
sub
mov
test
in
adcl
push
loop
push
adc
jecxz
mulb
sbb
dec
adc
das
subl
sbb
xor
xchg
cltd
mov
stc
loop
adc
cmp
test
push
mov
jge
jg
cmp
dec
mov
aad
or
sbb
cmc
rcll
push
je
xor
popa
xor
sub
jge
std
test
mov
in
push
and
imul
mov
loop
aad
sbb
enter
dec
jmp
pop
or
pop
cmpsb
lock
and
shll
pop
je
cmp
push
xchg
stc
xchg
sbb
jo
xchg
adc
fcomip
mov
cmp
pop
xchg
jg
out
adc
lea
ss
repnz
xchg
test
mov
das
push
jo
sub
or
data16
fs
cltd
mov
scas
or
dec
sub
sub
mov
sbb
or
lock
rcr
push
inc
shll
popf
es
add
inc
jmp
rorl
mov
das
lock
std
mov
cmpsb
xor
or
pop
cmp
aas
mov
sahf
sbb
sbb
stos
mov
mov
xchg
rcrb
cmp
push
fwait
in
sahf
repnz
shl
test
jb
mov
test
ja
pop
sbb
xor
xchg
scas
xor
dec
cmp
pop
dec
jmp
ljmp
mov
test
cmp
xchg
and
sbb
mov
mov
mov
aam
aas
inc
cltd
dec
cwtl
cmp
insl
or
mov
inc
hlt
fsts
aaa
pop
fwait
xor
jns
dec
xchg
in
mov
pop
out
fistps
sbb
add
sbb
mov
fsubrl
stos
sub
sbb
lock
loopne
mov
mov
cmp
cwtl
mov
movsb
sbb
dec
pop
rorl
bnd
push
bound
xor
xchg
jle
int3
inc
push
cmpb
adc
dec
cmc
jnp
xor
aas
and
cwtl
jg,pt
mov
sarb
fildl
xor
sbb
idivb
dec
sub
adc
fmuls
dec
jle
push
xchg
fisubs
xchg
fsubrs
sub
cwtl
inc
test
or
pop
ret
jle
and
inc
push
ret
xor
dec
clc
imulb
cmp
jae
xchg
xor
push
lcall
movsl
sub
push
xor
adc
scas
push
push
adc
push
adc
xchg
mov
inc
mov
cmp
and
fwait
sti
les
cmc
adc
xor
shll
and
popa
xchg
jae
mov
pop
sbb
xor
sbb
jp
outsb
addr16
lret
sub
call
fisttpll
dec
fldenv
popf
sti
xchg
lcall
jbe
push
pop
dec
scas
adc
mov
jge
enter
pop
negl
cmp
insb
dec
jnp
cwtl
or
or
fucomp
scas
in
mov
cmp
push
mull
xchg
fs
xor
jl
repnz
jnp
les
adc
add
mov
xor
xor
mov
dec
rclb
aaa
sbb
movsl
jnp
fists
js
sbb
push
jbe
fsubl
push
fbstp
dec
fprem1
scas
push
xor
mov
dec
sub
inc
or
and
add
mov
mov
mov
pop
adc
in
fmuls
and
adc
mov
int
sub
adcb
outsb
push
std
mov
frstor
dec
mov
mov
or
mov
jo
jne
jae
jnp
stos
push
ret
sbb
mov
jae
xchg
add
fsubrs
or
xchg
sbb
stos
and
dec
out
test
or
loope
mov
push
sbb
inc
xor
adc
nop
xor
and
dec
push
sarb
sub
daa
fbstp
xor
adc
ret
fs
adc
sti
xchg
data16
mov
cmpsb
repnz
mov
dec
jb
sbb
fisubrl
sbb
jg
dec
fstl
cmpsb
or
das
mov
push
fbld
stos
mov
scas
mov
outsb
cmp
inc
test
push
dec
clc
and
test
sbb
and
aam
mov
in
xlat
xchg
insb
dec
xor
sahf
sbb
xchg
mov
or
loopne
xlat
and
icebp
daa
pushf
lret
orl
mov
xor
push
pop
in
pop
cld
in
push
testb
dec
mov
or
adcb
fsubrs
push
out
dec
test
ret
out
mov
shrl
mov
int3
xchg
sub
inc
xor
add
jmp
push
divl
int
lret
inc
push
sub
jae
and
fstl
test
push
add
std
cmpsb
mov
fwait
pop
mov
test
and
sub
aaa
std
enter
jo
ret
imul
mov
dec
jl
cmpsl
lret
or
cmp
jmp
push
pop
cmpsb
sbb
jb
test
cmc
sbb
jnp
sbb
and
mov
push
jns
lods
out
inc
sub
mov
jae
pop
pop
mov
pusha
mov
jbe
mov
fcomip
ds
aad
imul
orb
insb
sbb
sbb
adc
out
push
add
les
lret
dec
jge
lea
lods
in
sbb
xchg
mov
aam
and
dec
jmp
test
pop
stc
sub
ret
or
out
rol
sti
cmpsb
stc
mov
add
fxch
add
jbe
popf
xchg
iret
ret
call
mov
in
cmp
fcomps
mov
add
fstpl
pop
mov
adc
adc
add
jno
test
cmp
and
sbb
std
hlt
add
mov
push
out
push
inc
es
test
xor
push
iret
cld
jae
sub
in
mov
ror
or
scas
sar
mov
xor
pushf
xchg
pop
bound
scas
sarl
sbb
cmp
dec
scas
pop
and
enter
inc
sub
pavgw
add
inc
dec
jp
cld
xchg
mov
mov
sub
lret
out
aaa
push
lret
xchg
orb
jge
add
pop
imul
scas
cmp
dec
data16
fidivrs
sbb
lcall
ljmp
lcall
cli
nop
int
xor
pop
push
daa
pop
mov
lea
imul
xchg
push
cmp
divl
xchg
jecxz
loope
sub
adc
cli
jae
pop
mov
test
daa
bound
test
popa
shll
repz
adc
aas
cmc
out
cli
inc
pop
dec
mov
enter
lcall
cmpb
dec
adc
xchg
jl
addl
dec
data16
and
nop
xor
xor
fcmovnbe
shll
sub
ss
adc
cmc
jecxz
and
mov
adc
jle
inc
orb
test
shlb
dec
adc
sub
bound
and
mov
aam
cmp
pushf
movsb
fdiv
insb
shlb
aas
int
fs
fs
pusha
push
xchg
sbb
fistps
inc
add
movsl
inc
sarb
xor
enter
cmpl
or
int
add
ret
lret
enter
es
lea
insb
sti
mov
xor
mov
jge
jo
cmp
pushf
pop
xlat
fisubl
pop
add
mov
or
cld
adc
ret
push
pop
xchg
and
js
push
aad
cwtl
sbb
jns
stos
lods
add
cli
sbb
xchg
es
mov
add
sahf
adc
lret
pop
ljmp
mov
pop
jbe
out
roll
push
loop
out
mov
dec
jbe
bswap
mov
adc
and
addl
pop
and
adc
fsubrs
in
pushl
pop
or
mov
addr16
mov
inc
jb
or
xchg
pop
fs
fs
hlt
sbb
jp
imul
test
popa
int3
jne
out
mov
stc
pop
push
cwtl
pop
das
mov
add
into
cmp
push
loope
mov
sahf
pusha
std
loope
fiadds
int
push
mov
xchg
mov
out
inc
or
out
dec
push
sti
push
dec
inc
sub
mov
mov
and
mov
test
xchg
jb
push
clc
adc
lds
mov
out
scas
sbb
sbb
push
mov
adc
enter
outsl
fsub
loopne
mov
pop
mov
sub
ret
mov
mov
aaa
and
scas
int
mov
repnz
and
movsb
mov
int3
out
adc
cmc
rolb
xor
push
jg
mov
sahf
icebp
fnstenv
push
mov
in
daa
cmpsb
data16
mov
inc
aaa
movsb
scas
enter
stos
cmc
dec
test
sbb
push
int
arpl
insb
dec
ljmp
mov
je
inc
adc
aam
inc
test
repz
je
sarb
sbb
aad
pop
bound
pop
insl
lahf
xor
mov
mov
loopne
imul
sub
addr16
testb
inc
icebp
mov
or
push
ljmp
sub
scas
lock
mov
mov
cmc
and
js
iret
adc
mov
jmp
leave
loop
jp
fsubp
xchg
ret
stos
sti
mov
bnd
sbb
cmp
ret
icebp
or
inc
insb
int3
sti
pop
pop
test
mov
xchg
add
mov
mov
je
jns
addr16
add
movsb
insl
fimuls
inc
les
ja
add
test
call
sbb
dec
loope
lea
aas
repnz
int3
inc
adc
mov
pop
push
pop
dec
cli
or
cmc
inc
clc
dec
push
ss
clc
loopne
push
js
lock
push
sub
add
rorb
dec
pusha
call
jmp
xchg
xor
sub
call
cwtl
mov
pop
test
cltd
stc
mov
std
xlat
cs
and
jns
shll
sbb
and
mov
pop
sbb
mov
lret
leave
adc
mov
pop
inc
push
scas
clc
int
pop
das
loopne
mov
mov
pop
rorb
dec
push
stos
in
cmp
mov
inc
daa
pop
push
out
push
inc
adc
jg,pn
cmp
enter
dec
or
mov
outsl
xor
stc
add
xchg
int3
xor
jmp
in
and
or
lea
mov
cwtl
fildl
push
mov
xor
aas
xor
or
add
push
mov
mov
and
ret
pop
into
add
inc
sbb
lds
xchg
outsl
mov
jmp
jae
push
movsb
dec
imul
and
mov
push
fucomi
sub
out
jne
pop
test
jo
cmp
jno
nop
addr16
call
bound
das
leave
xor
mov
xor
and
push
call
and
notb
cli
jbe
and
psubusw
mov
mov
out
imul
jno
pop
jecxz
mov
dec
inc
add
jo
adc
lahf
outsl
leave
mov
jecxz
insb
test
mov
dec
inc
mov
js
stos
pop
clc
js
mov
enter
jg
inc
xor
dec
shrl
incb
jge
adc
cmp
and
shrb
idivb
dec
pushf
sbb
sbb
aaa
or
jl
mov
popf
sahf
dec
mov
sub
add
iretw
pushf
insb
fbstp
sub
aad
mov
pop
mov
sbb
and
sbbl
insb
lret
xor
push
pop
jne
cmp
dec
add
inc
and
xor
mov
movsl
pop
in
and
and
mov
sarl
adc
rcl
pop
lods
pop
imul
jnp
adc
fimull
fidivrs
test
push
js
insl
xor
mov
push
stc
cmpsb
cmp
in
cmp
push
push
add
nop
insl
fcoms
add
and
in
shlb
cmp
in
push
jb
nop
std
pop
jnp
test
cmp
in
push
inc
ret
lahf
test
out
cmp
xor
repnz
and
mov
jl
mov
xchg
jb
mov
mov
ret
mov
rolb
lret
xor
sub
test
sub
sbb
mov
das
cmp
out
lret
sub
mov
loopne
nop
andb
por
orb
push
or
iret
bswap
cmp
push
sbb
push
hlt
lret
mov
jae
fisttps
test
push
roll
loopne
clc
xchg
arpl
add
cld
lret
roll
in
pop
and
arpl
fstpt
mov
pop
push
jne
insl
cmpl
daa
fldcw
lret
add
jo
sub
fistpl
sub
push
or
mov
jecxz
popa
cmp
dec
sub
xchg
mov
imul
push
push
xor
scas
stc
jno
sbb
add
cmp
mov
shll
js
jo
xor
jo
jmp
imul
enter
adc
call
push
insl
jge
xchg
jp
sub
mov
inc
in
inc
test
or
push
add
cmp
xchg
adc
mov
shll
or
xchg
rclb
and
icebp
cmp
lods
mov
fisubs
in
cmp
xchg
pushf
jl
push
jnp
sub
sub
movsb
mov
out
sbb
jno
sub
movsb
loopne
shll
and
roll
js
mov
or
xor
pop
ja
jp
push
data16
mov
cmp
lret
add
fsts
adc
fistl
xor
jge
mov
mov
ljmp
pop
ficoms
mov
mov
dec
jp
ja
repz
sub
fistps
mov
jecxz
jmp
jg
mov
testl
cmp
push
xor
mov
out
cmp
mov
xchg
lcall
jo
sub
push
cmpl
push
inc
sbbb
aaa
mov
jnp
inc
rcrl
dec
test
or
ja
jo
repz
add
adc
sarl
pop
mov
pop
imul
adc
out
lods
and
or
imul
dec
mov
adc
push
cmpl
pop
aam
push
xchg
fistpl
add
imul
jne
and
pop
mov
rorl
test
leave
push
sub
cld
fisubrs
popf
mov
mov
sarl
jnp
mov
rolb
jbe
pop
in
loop
inc
daa
xchg
push
mulb
cs
rol
push
sub
adc
scas
push
es
push
out
push
adc
push
outsb
std
out
and
mov
stc
iret
aam
testl
in
mov
js
fwait
rclb
xchg
cmp
sbb
lods
jbe
sub
jl
lret
cwtl
addr16
adc
dec
stos
in
add
ljmp
pop
out
add
and
movsl
dec
jbe
hlt
loope
out
aad
sub
aas
push
stos
inc
call
fisubl
pop
inc
or
lock
out
mov
cmp
push
je
mov
je
loop
or
mov
mov
mov
inc
out
and
lret
imul
dec
or
sub
and
rcrl
lea
inc
pusha
and
mov
rcl
pop
popf
mov
stos
sbb
insl
xor
pop
cmp
mov
mov
mov
call
sbb
adc
xor
test
mov
cwtl
jecxz
clc
loopne
adc
fprem1
js
mov
mov
js
jnp
stos
ret
sub
cmp
xchg
fisubrs
lods
fsubrl
rorb
sbb
pop
testb
inc
dec
add
sti
push
call
push
push
inc
cmp
xor
jle
cmp
mov
les
shlb
and
into
in
sti
adc
fnstsw
mov
repz
adc
repnz
jp
call
shll
sarl
out
shll
subb
adc
icebp
jecxz
bound
jge
pop
popa
cmc
imulb
mov
in
movsb
icebp
stos
shlb
xor
mov
mov
push
cmp
pop
push
jae
cmpsb
lds
xchg
mov
js
loopne
call
loop
or
cmp
rolb
rorl
cmp
dec
flds
repz
in
mov
imul
and
pop
dec
xor
mov
std
and
fcompl
inc
or
push
jnp
xchg
shl
dec
mov
cmp
rclb
pop
jns
orb
sub
cmc
out
mov
mov
rcr
sbb
test
cmpl
sbb
mov
stos
jmp
sbb
sub
xor
iret
xor
dec
pop
loope
pop
inc
rcr
xor
cmpsb
hlt
in
ror
jmp
popa
mov
mov
cmc
xor
mov
xor
sub
or
arpl
sub
xchg
add
loopne
pop
out
adc
je
lods
inc
mov
inc
inc
pop
mov
icebp
inc
inc
mov
sbb
pop
mov
dec
test
mov
fidivl
push
ss
xchg
dec
cmp
test
into
ds
push
jo
cmc
js
iret
sub
enter
cltd
sahf
jmp
dec
sahf
nop
pop
push
and
aam
jmp
ljmp
aam
out
xor
cmpb
ds
sbb
scas
lret
jbe
push
or
push
pushf
out
xchg
repz
mov
and
mov
xchg
gs
lcall
push
adc
or
ss
jg
jmp
mov
test
sti
lret
roll
dec
loope
xor
pop
xchg
lods
cmp
outsb
jbe
rclb
cld
pop
jbe
add
in
loop
mov
dec
add
push
add
cmp
out
jne
fdivrs
xor
xchg
call
dec
ror
cwtl
jns
outsl
inc
cmpsl
test
nop
pop
pop
js
fidivrs
adc
xchg
rcrl
in
lea
into
mov
cs
add
mov
jbe
mov
imul
mov
add
inc
movsl
js
insb
mov
in
lods
lods
dec
gs
pushf
sub
mov
or
stos
jecxz
mov
jg
add
in
out
rclb
dec
mov
mov
imull
testb
lret
adc
out
xor
pop
mov
mov
adc
out
jno
mov
lret
int
aad
enter
adc
xchg
inc
xchg
loope
std
mov
pop
in
or
iret
cmpb
lock
cmp
push
push
xor
push
jle
dec
xlat
inc
inc
in
lret
enter
pop
push
mov
cltd
mov
fidivl
lock
loope
mov
dec
in
xlat
popa
rclb
test
popf
dec
data16
rclb
int
pushf
call
mov
mov
mov
mov
sbb
ret
mov
xchg
repnz
lds
dec
push
fs
gs
ret
sar
inc
xchg
sahf
fs
pop
dec
mov
push
cli
fwait
rcll
enter
add
jnp
rclb
aad
push
out
inc
xor
aaa
sbb
adc
inc
and
inc
psubd
stos
jmp
test
sub
push
test
stos
pop
lret
inc
mov
leave
or
inc
xchg
push
lcall
mov
jo
mov
ja
ja
ja
jne
rol
roll
push
arpl
ret
jmp
xchg
inc
jnp,pt
add
dec
icebp
and
jl
xor
xchg
inc
push
dec
mov
lds
lea
das
push
push
push
icebp
inc
sbb
add
js
mov
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
sahf
mov
fcomp
and
and
jb
push
jmp
and
ds
sarl
fwait
adc
adc
dec
xchg
sbb
pushf
mov
cltd
jnp
pop
das
enter
mov
adc
imul
mov
movl
add
scas
loop
imul
push
mov
cmp
dec
cmp
sub
push
pop
inc
xchg
gs
dec
gs
adc
std
jo
mov
mov
mov
stc
into
pop
pop
mov
out
test
or
push
stos
js
test
sahf
cmpsb
or
stos
add
rorb
adc
leave
and
fidivl
mov
and
cli
ret
inc
xor
mov
lods
mov
inc
or
iret
push
push
rcl
lock
and
xor
into
mov
inc
push
lods
out
lahf
and
push
dec
push
iret
pop
sti
lret
je
cld
and
insw
rcll
jg
mov
pop
jo
popf
push
adc
ds
and
imulb
jp
adc
mov
mov
fimuls
and
and
mov
fwait
aaa
sbb
adc
dec
xchg
xchg
jle
in
inc
add
add
inc
sbb
pop
in
adc
xor
or
xchg
std
int
and
mov
sbb
decl
xchg
test
mov
testb
sub
sbb
add
xchg
lret
repnz
dec
add
dec
xor
icebp
leave
data16
popa
popf
es
popf
gs
lret
enter
jno
pop
lea
add
mov
xchg
leave
stc
xchg
dec
pop
xchg
ljmp
xchg
mov
scas
cld
push
push
adc
cmp
fisubrs
cld
pop
cwtl
enter
orl
jp
imul
xchg
sub
add
and
ret
xchg
orl
push
int
in
push
dec
fs
scas
or
jnp
fucomi
aad
sti
sbb
fld
adc
mov
fidivs
bound
imul
cmpsl
mov
push
xor
int3
sahf
subb
js
cld
xor
pop
dec
cmp
dec
mov
cmp
cmp
adc
adc
mov
jmp
inc
push
mov
mov
bound
std
inc
mov
adc
mov
repz
xor
lea
dec
add
sub
mov
aam
jl
mov
data16
dec
dec
xchg
dec
add
mov
xchg
into
hlt
jp
adc
cmp
aaa
and
and
stos
call
xchg
jle
adc
ja
enter
rolb
in
dec
int3
xchg
xor
imul
hlt
subb
nop
out
mov
push
jecxz
xchg
lahf
mov
push
aad
std
sar
inc
cmp
es
pop
ret
push
insb
add
jae
cmp
es
int
arpl
cs
lods
scas
in
jnp
push
dec
js
jle
mov
fdivs
popa
scas
sub
inc
xor
or
and
ret
jle
mov
mov
mov
push
push
add
mov
insb
mov
js
shl
mov
es
popf
sub
pop
inc
std
cwtl
jne
sbb
out
test
jmp
rorb
jns
jnp
sub
mov
and
mov
add
subl
jne
jp
xchg
mov
mov
push
lods
jb
lods
sub
imul
push
mov
push
jae
adcl
js
cmp
dec
lret
sarb
mov
xchg
aas
mov
shlb
test
int3
fdivs
mov
sbb
jne
or
mov
shlb
push
dec
or
push
add
hlt
mov
mov
dec
in
inc
addr16
fdivrl
insb
clc
imul
in
inc
xchg
mov
xor
roll
jns
mov
adc
xchg
fadds
imul
aaa
and
fildl
mov
jge
daa
js
pop
pop
mov
dec
rorb
dec
and
and
cmp
rcll
orl
or
movsl
movsb
flds
push
aaa
jg
mov
push
or
lahf
inc
xchg
cmp
inc
mov
pop
push
xor
lret
jne
nop
shl
push
in
push
notl
jb
inc
loop
sub
gs
dec
lret
jno
add
sar
mov
inc
fs
fdivs
mov
pop
adc
mov
sti
decl
test
lds
jmp
xchg
xor
je
js
out
dec
adc
ljmp
hlt
rcl
cmpsl
call
or
inc
inc
sbb
leave
push
js
xor
fwait
test
dec
mov
mov
sub
gs
xchg
push
dec
pop
lret
pop
add
aaa
sti
iret
popf
cmpsb
push
clc
repz
test
and
rcrl
stos
cmc
xchg
jl
fs
add
movsl
push
aam
aaa
xchg
or
cmpsl
xor
sub
adc
insb
push
mov
xor
mov
sub
enter
fmuls
int3
xchg
lahf
or
dec
xor
dec
sbb
sbb
push
bound
jge
mov
jae
push
frstor
pop
bound
mov
sbb
cmp
push
int3
scas
push
sbb
xlat
xor
ret
arpl
sub
mov
mov
and
std
xchg
xchg
mov
adc
jnp
add
lea
push
xchg
push
lret
mov
cmp
arpl
jge
push
cmp
das
lret
aad
xlat
nopl
jmp
ficoml
outsb
pushf
xchg
ss
fadd
ja
xchg
dec
mov
packsswb
movsb
add
inc
ja
cs
orb
sub
cmp
inc
or
mov
bound
rclb
adc
icebp
xchg
mov
mov
xor
pop
add
outsl
ja
jns
test
pop
stos
insl
pop
inc
sbb
pop
add
aaa
aas
je
mov
inc
cmp
pop
in
cmp
pop
inc
lock
sbb
lcall
pop
inc
xchg
mov
inc
je
or
ret
or
sbb
adc
fidivrl
loopne
push
jecxz
mov
idiv
sub
sub
add
xchg
pop
add
aaa
fwait
xchg
fwait
adc
or
xchg
xchg
mov
roll
daa
scas
xchg
or
pop
clc
bound
insl
nopl
aam
and
or
cld
dec
out
addr16
fnstcw
bound
adc
js
cs
push
call
or
mov
mov
cmp
push
loope
cmc
sahf
push
das
in
adc
cld
mov
repz
cmp
into
and
in
addb
sub
xlat
lcall
test
nop/reserved
lcall
inc
leave
lds
sub
sub
and
addr16
jo
mov
mov
mov
cwtl
lret
ljmp
jbe
mov
or
xor
mov
or
pop
pushf
in
cmovle
add
dec
push
inc
xchg
stos
stos
cmp
les
es
fidivrl
cmpsb
or
mov
mov
push
inc
lret
sbb
jne
loope
or
dec
xor
add
dec
inc
loopne
pop
inc
dec
inc
xor
pop
sahf
setae
stos
int
and
lcall
iret
jnp
add
pop
xchg
orb
push
pop
popf
xchg
filds
imul
sti
enter
mov
lcall
mov
mov
xor
fisubs
imul
xor
add
pop
dec
leave
je
xor
jge
or
mov
lock
push
and
sahf
rclb
js
jecxz
dec
rcl
hlt
mov
push
sub
dec
mulb
daa
add
aad
or
mov
shlb
std
insb
imulb
jl
sub
or
out
mov
imul
shll
pop
jmp
dec
sbb
je
and
mov
jecxz
lahf
cmpsl
mov
mov
push
jecxz
dec
mov
iret
lahf
add
pop
lcall
es
popa
mov
push
xchg
push
into
cmpsb
movsl
push
sub
inc
insl
mov
adc
jle
scas
cmpsb
mov
gs
jo
inc
cmp
mov
xor
cmpsb
lahf
imul
mov
clc
push
jbe
insl
orl
gs
clc
loopne
jl
jp
test
lock
imul
mov
int3
ja
add
jecxz
dec
adcb
pop
stc
cmpsl
nop
or
into
in
popa
push
js
inc
inc
jmp
scas
dec
cmp
rorb
xor
popf
int3
push
jno
ja
ljmp
push
in
mov
adc
xchg
xor
aam
rcll
jecxz
rclb
ja
scas
es
stc
mov
mov
lret
int3
or
call
push
sarl
jg
xchg
pop
push
ret
or
inc
scas
or
sub
mov
cmc
pusha
cmc
and
out
jno
jmp
sub
dec
pop
adc
jecxz
subl
pop
jge
inc
adc
loopne
and
dec
cmp
mull
fimuls
je
je
mov
jb
inc
xchg
test
xchg
and
popa
pop
and
out
jle
and
add
repz
stos
lods
out
mov
insl
sub
push
imul
add
xchg
test
or
adc
push
lock
in
pop
add
push
pop
xor
test
dec
repz
imul
test
pushw
xor
add
in
aaa
pop
or
and
pop
movsl
int
repz
jl
rorl
sub
jl
push
inc
es
mov
dec
js
adc
mov
add
mov
add
sar
sub
xor
loope
jne
imul
fwait
pop
push
inc
in
cmp
imul
mov
xchg
mov
ljmp
fs
shlb
push
cli
xchg
sub
loopne
mov
fists
jl
mov
fsubl
and
add
inc
loopne
and
add
mov
imul
iret
pop
jnp
repnz
jae
jge
mov
inc
rolb
mov
sti
and
fnstenv
push
xchg
inc
mov
adc
lods
ja
jne
cmp
std
ret
cmpsb
mov
cmpsb
outsl
loopne
cmp
jge
mov
mov
xchg
or
pusha
jns
jp
mov
xchg
repnz
out
mov
xchg
iret
cltd
lods
dec
int3
das
xchg
cld
fbld
xchg
stos
fldenv
pcmpgtb
adc
pop
cmp
loop
in
outsl
pop
lret
jae
jbe
or
loop
scas
testl
cwtl
outsl
in
mov
xor
mov
leavew
pop
cmpsl
push
movsb
test
mov
outsl
stos
fstps
jb
mov
dec
movsb
js
pop
lahf
clc
push
sbb
cmp
cmp
cmp
sar
lcall
add
cmpsb
dec
sarl
call
jne
add
or
mov
arpl
jns
pop
jge
test
fs
movsb
int
sub
adc
inc
mov
pop
pop
jb
aaa
dec
jnp
lahf
in
sbb
jae
je
pop
add
mov
mov
inc
iret
sub
xchg
ds
fldl
cmp
mov
jae
mov
fcmovnbe
xlat
leave
lods
mov
test
pop
dec
pop
pushf
mov
push
and
pop
popf
xchg
rcrl
xchg
int3
imul
in
call
and
aam
mov
jle
out
out
loope
sahf
cli
mov
mov
addr16
mov
jge,pn
test
into
jnp
cmp
mov
inc
roll
arpl
fwait
scas
clc
in
fistpll
inc
and
jne
sbb
or
dec
loopne
iret
lahf
adc
int3
lret
sbb
push
cmpsb
xchg
insb
loopne
test
nop
jo
mov
cwtl
push
addr16
xorb
and
sarl
and
jb
jns
push
jno
lret
xchg
mov
dec
jl
fwait
xor
mov
std
insl
sbb
popa
mov
add
jle
out
fisubrl
pop
fdivrs
mov
cmpsb
xor
mov
js
and
dec
push
andb
adc
mov
mov
xchg
aam
xor
jmp
cmp
or
rolb
or
sti
sbb
and
rol
jmp
sti
add
mov
pushf
jge
mov
jmp
push
xchg
or
fucomip
jne
jnp
mov
loopne
sbb
cwtl
std
loopne
adc
clc
cmp
jl
xchg
icebp
outsl
sub
and
dec
in
and
jns
sub
inc
xchg
and
mov
push
push
add
mov
inc
xchg
iret
shl
xor
and
mov
cmp
or
push
loope
sbb
bound
jmp
push
test
out
dec
jnp
std
ss
bound
or
scas
push
testb
push
lcall
mov
out
and
and
ds
add
popf
stc
repz
icebp
nop
fcoms
mov
mov
dec
fs
rcl
std
xchg
add
cmp
sqrtps
enter
in
stos
out
int3
xor
mov
cmp
fistpl
into
xchg
add
sub
test
fistl
pop
fistpl
sub
inc
hlt
sub
outsb
mov
push
pop
jecxz
sbb
sahf
cwtl
mov
lods
cltd
imul
nop
xchg
sub
fcmovb
xor
cmpsb
and
adc
xchg
pop
test
das
xchg
push
lret
pop
cli
popa
mov
mov
inc
pop
inc
in
mov
sub
mov
push
pop
ss
scas
fnsave
mov
mov
sbb
inc
cltd
dec
add
popf
or
fsubrl
and
mov
and
add
dec
add
fisttpll
inc
les
push
push
xor
dec
mov
rcl
push
xchg
sub
enter
xor
fists
inc
sti
arpl
push
shll
mov
push
sahf
sub
data16
jmp
loope
xor
jae
push
xor
jno
jb
clc
sub
sub
pop
push
add
test
nop
sub
aam
xchg
sbb
bound
jmp
or
in
lods
push
sub
sub
out
rorb
cmp
icebp
xor
mov
jbe
push
outsl
sbb
aaa
jmp
jnp
shl
in
push
mov
push
jmp
dec
push
mov
mov
mov
sahf
inc
pop
test
xchg
lret
lea
dec
dec
pop
or
sbb
xor
xchg
mov
in
loope
sbb
inc
add
out
inc
sahf
push
ret
pop
and
lock
mov
subb
repnz
mov
shrl
mov
loopne
addb
cmp
jnp
imul
jl
out
mov
inc
mov
sbb
jmp
sbb
inc
inc
pop
cmp
jnp
int3
push
jmp
sbb
stos
lock
into
fstl
xchg
cmp
lods
xlat
push
add
push
inc
repnz
jne
mov
das
lock
xor
shl
pusha
jo
cmpsl
jne
pushf
mov
das
cmp
or
in
ss
fs
cmpsb
cmp
add
mov
leave
fwait
add
mulb
cmc
cmpsl
mov
jmp
test
icebp
pop
mov
ds
jnp
inc
imul
xchg
cmp
enter
xor
fdiv
into
mov
bound
xor
push
add
int
loop
add
mov
xor
sub
lret
mov
in
mov
or
or
stos
cmp
data16
jno
dec
fdivrs
aas
lcall
xor
cli
jns
lcall
add
stos
in
les
mov
fcomps
push
clc
sbb
cmp
aaa
leave
cld
cmpb
lahf
jns
bound
fdiv
mov
cmpsl
leave
push
mov
out
sbb
das
mov
dec
xchg
fsin
scas
xor
fwait
lods
gs
pop
xlat
insl
and
lret
int3
pop
pusha
cmp
call
mov
fsubr
lds
rcrb
outsb
data16
cwtl
inc
xchg
ret
sti
mov
inc
cltd
xchg
mov
into
xor
hlt
shr
stos
push
add
outsl
fimuls
outsl
cmp
cld
xlat
or
mov
mulb
divb
xor
jle
rolb
hlt
inc
test
cli
mov
aam
mov
into
mov
sbb
rol
les
cmp
jecxz
sub
dec
sahf
shrb
popf
cmp
stc
enter
outsl
dec
icebp
jae
sub
mov
add
push
dec
arpl
xor
xchg
aad
mov
hlt
mov
sarb
and
mov
cmpsb
xchg
leave
sbb
xor
jp
adc
add
mov
mov
sbb
inc
cmp
pop
mov
sbb
mov
inc
mov
add
cwtl
mov
mov
or
jle
cmp
es
fnstcw
lods
adc
jecxz
loop
mov
imul
mov
jnp
iret
or
mov
sbb
pushl
xchg
frstor
jo
mov
clc
jge
incl
out
decl
popa
fsubrs
lds
jmp
insl
mov
push
fld
cs
mov
lahf
push
sbb
xor
sub
jb
sbb
add
subl
pop
lock
call
je,pt
xlat
sub
mov
jmp
jb
lods
adc
stos
addr16
rcrb
fwait
arpl
mov
popf
lods
mov
add
repnz
inc
nop
ja
es
std
test
mov
push
sub
pop
int3
test
pop
dec
cwtl
sbb
pop
push
enter
cld
adc
addr16
adcb
xor
jp
mov
fimuls
jae
mov
mov
push
mov
push
movsl
int
xor
jp
xchg
ljmp
xor
pop
fsubl
lret
fiadds
adc
cld
cmp
add
arpl
sbb
xchg
mov
cmp
pslld
cwtl
push
push
in
rcl
imul
jo
gs
cld
hlt
iret
pushf
mov
mov
pop
pop
lock
movzbl
lods
and
push
jne
sbb
in
out
jp
adc
enter
mov
push
xlat
dec
cmp
mov
fadds
movsb
jge
mov
rcl
xor
shlb
test
sub
movsb
cmpsl
add
jae
clc
movsl
jb
cmpl
arpl
arpl
out
sbb
jb
adc
mov
xchg
aam
push
mov
arpl
mov
cs
xor
sub
sbb
jp
xchg
addr16
fstpt
mov
shll
jmp
out
cmp
orl
punpckldq
fisttps
into
divl
cltd
mov
add
and
mov
push
adc
jne
scas
out
test
adc
fwait
mov
jns
push
xor
std
mov
outsb
dec
ret
mov
xchg
xchg
mov
test
insb
cld
cmp
inc
mov
or
and
arpl
ret
shll
shlb
sbb
cbtw
out
xchg
jmp
loopne
xchg
outsl
incl
push
lss
mov
ss
pushf
xchg
push
int3
add
cmp
add
cld
popa
repz
push
xor
shll
std
xchg
std
call
mov
shrl
and
pop
cltd
cld
sbb
push
jg
mov
mov
cmpsl
into
adc
xchg
pop
sub
jge
mov
in
dec
dec
push
jecxz
mov
pop
or
inc
inc
mov
mov
andl
aad
push
cld
test
cmp
add
imul
test
fs
mov
loopne
imul
adc
stc
pop
cmp
cmp
and
and
fs
lret
pop
mov
cs
mov
jmp
mov
dec
push
std
sbb
mov
xlat
cwtl
div
sbb
push
push
pop
mov
cld
fiaddl
mov
cmp
jmp
stos
loope
mov
lret
lret
or
mov
or
dec
pop
jae
mov
mov
sbb
sti
test
push
cmp
push
ret
test
loopne
adc
lret
sub
pop
fwait
sbb
sti
out
repz
scas
and
xchg
xchg
xchg
dec
cmc
aas
sahf
imul
outsl
jbe
sbb
outsb
lret
adc
jnp
mov
pop
mov
xchg
lods
ljmp
sahf
push
jnp
icebp
pop
pusha
xchg
and
sbb
lahf
sub
pushf
scas
out
and
lahf
jp
ficoml
jp
scas
xlat
and
push
ja
fnsave
sahf
sti
ret
and
push
iret
orl
loopne
ret
jae
mov
adc
sub
std
cmc
hlt
inc
and
mov
xor
adc
int3
scas
pusha
push
jmp
push
pusha
jg
pop
les
mov
push
popf
test
push
in
push
mov
add
mov
sbb
repz
push
xlat
ljmp
sar
aam
and
jmp
xchg
sub
pop
sbb
shr
lret
into
sbb
add
sub
mov
std
aaa
xchg
nop
and
loopne
add
xor
int3
jle
dec
sbbl
enter
out
mov
cmpsb
sahf
imul
sahf
and
sub
push
and
jo
push
stos
mov
into
mov
sbbl
out
les
mov
adc
push
dec
fcomps
clc
pop
xchg
scas
cmp
movsl
pop
or
and
mul
sub
enterw
xor
cld
sarl
cmp
lds
in
and
out
inc
loope
sub
xchg
adc
jo
es
shlb
or
movb
shlb
xor
leave
js
cmp
xchg
push
sahf
push
jmp
inc
cmc
pop
insl
mov
jns
or
popf
cltd
repz
hlt
arpl
sbb
addr16
cltd
ljmp
ds
add
lret
fstps
mov
loopne
xor
adc
push
mov
or
inc
sub
mov
orb
adc
mov
mov
and
or
dec
cwtl
xchg
mov
jecxz
xchg
jns
jns
jno
jecxz
lds
sub
pop
das
andl
jnp
lds
sahf
ss
hlt
mov
js
ja
mov
xchg
push
dec
adc
shll
xchg
out
lret
pop
ss
xchg
in
xchg
rcrb
lock
popf
in
lret
out
rcr
imul
popf
icebp
enterw
xchg
or
das
adc
add
fsts
push
mov
clc
outsl
push
mov
js
repz
fimuls
insl
imul
ret
ljmp
scas
pop
out
push
push
xor
addl
dec
aaa
bound
jge
addr16
cltd
mov
xchg
stos
stc
loopne
arpl
enter
cwtl
cmp
cmp
and
call
nop
scas
add
popa
dec
add
insb
pop
cli
loope
lds
mul
daa
ljmp
pop
mov
mov
addr16
pop
jmp
xor
push
fildl
push
fisubrs
sbb
jmp
mov
std
pandn
mov
jl
cmpsl
dec
dec
nop
xor
outsl
cmc
or
loope
pop
jmp
addr16
push
fwait
cltd
xor
mov
movsl
aam
jb
dec
idivl
lahf
push
dec
arpl
mov
adc
fldt
inc
xor
ja
push
xlat
xchg
lcall
xchg
clc
lods
iret
negl
pop
mov
dec
jo
ljmp
mov
dec
sub
aad
stc
call
fisubrl
imul
sahf
out
ljmp
xchg
lock
cltd
outsl
in
popa
arpl
insl
adc
cmp
test
scas
jecxz
dec
iret
cwtl
daa
int
push
dec
xchg
push
xlat
sbb
jb
pop
sub
in
daa
pop
fsub
shl
orb
loop
stos
or
mov
cmp
sbb
sahf
dec
sti
cmp
inc
shrb
inc
adc
mov
jae
inc
adc
cmp
pop
sbb
xchg
rcrb
inc
push
loop
dec
js
xor
or
scas
xchg
jge
or
adc
sarl
inc
sbb
icebp
ret
ja
lcall
mov
adc
pop
mov
xor
push
je
inc
fstps
mov
or
pushf
xchg
inc
ja
in
jae
leave
aas
mov
push
jge
push
push
rcl
push
lea
ret
rorl
push
nop
mov
xlat
adc
cmp
or
insl
in
xchg
aas
xlat
push
push
jg
aaa
imul
sub
cld
and
sub
mov
test
in
adcl
push
loop
push
adc
jecxz
mulb
sbb
dec
adc
das
subl
sbb
xor
xchg
cltd
mov
stc
loop
adc
cmp
test
push
mov
jge
jg
cmp
dec
mov
aad
or
sbb
cmc
rcll
push
je
xor
popa
xor
sub
jge
std
test
mov
in
push
and
imul
mov
loop
aad
sbb
enter
dec
jmp
pop
or
pop
cmpsb
lock
and
shll
pop
je
cmp
push
xchg
stc
xchg
sbb
jo
xchg
adc
fcomip
mov
cmp
pop
xchg
jg
out
adc
lea
ss
repnz
xchg
test
mov
das
push
jo
sub
or
data16
fs
cltd
mov
scas
or
dec
sub
sub
mov
sbb
or
lock
rcr
push
inc
shll
popf
es
add
inc
jmp
rorl
mov
das
lock
std
mov
cmpsb
xor
or
pop
cmp
aas
mov
sahf
sbb
sbb
stos
mov
mov
xchg
rcrb
cmp
push
fwait
in
sahf
repnz
shl
test
jb
mov
test
ja
pop
sbb
xor
xchg
scas
xor
dec
cmp
pop
dec
jmp
ljmp
mov
test
cmp
xchg
and
sbb
mov
mov
mov
aam
aas
inc
cltd
dec
cwtl
cmp
insl
or
mov
inc
hlt
fsts
aaa
pop
fwait
xor
jns
dec
xchg
in
mov
pop
out
fistps
sbb
add
sbb
mov
fsubrl
stos
sub
sbb
lock
loopne
mov
mov
cmp
cwtl
mov
movsb
sbb
dec
pop
rorl
bnd
push
bound
xor
xchg
jle
int3
inc
push
cmpb
adc
dec
cmc
jnp
xor
aas
and
cwtl
jg,pt
mov
sarb
fildl
xor
sbb
idivb
dec
sub
adc
fmuls
dec
jle
push
xchg
fisubs
xchg
fsubrs
sub
cwtl
inc
test
or
pop
ret
jle
and
inc
push
ret
xor
dec
clc
imulb
cmp
jae
xchg
xor
push
lcall
movsl
sub
push
xor
adc
scas
push
push
adc
push
adc
xchg
mov
inc
mov
cmp
and
fwait
sti
les
cmc
adc
xor
shll
and
popa
xchg
jae
mov
pop
sbb
xor
sbb
jp
outsb
addr16
lret
sub
call
fisttpll
dec
fldenv
popf
sti
xchg
lcall
jbe
push
pop
dec
scas
adc
mov
jge
enter
pop
negl
cmp
insb
dec
jnp
cwtl
or
or
fucomp
scas
in
mov
cmp
push
mull
xchg
fs
xor
jl
repnz
jnp
les
adc
add
mov
xor
xor
mov
dec
rclb
aaa
sbb
movsl
jnp
fists
js
sbb
push
jbe
fsubl
push
fbstp
dec
fprem1
scas
push
xor
mov
dec
sub
inc
or
and
add
mov
mov
mov
pop
adc
in
fmuls
and
adc
mov
int
sub
adcb
outsb
push
std
mov
frstor
dec
mov
mov
or
mov
jo
jne
jae
jnp
stos
push
ret
sbb
mov
jae
xchg
add
fsubrs
or
xchg
sbb
stos
and
dec
out
test
or
loope
mov
push
sbb
inc
xor
adc
nop
xor
and
dec
push
sarb
sub
daa
fbstp
xor
adc
ret
fs
adc
sti
xchg
data16
mov
cmpsb
repnz
mov
dec
jb
sbb
fisubrl
sbb
jg
dec
fstl
cmpsb
or
das
mov
push
fbld
stos
mov
scas
mov
outsb
cmp
inc
test
push
dec
clc
and
test
sbb
and
aam
mov
in
xlat
xchg
insb
dec
xor
sahf
sbb
xchg
mov
or
loopne
xlat
and
icebp
daa
pushf
lret
orl
mov
xor
push
pop
in
pop
cld
in
push
testb
dec
mov
or
adcb
fsubrs
push
out
dec
test
ret
out
mov
shrl
mov
int3
xchg
sub
inc
xor
add
jmp
push
divl
int
lret
inc
push
sub
jae
and
fstl
test
push
add
std
cmpsb
mov
fwait
pop
mov
test
and
sub
aaa
std
enter
jo
ret
imul
mov
dec
jl
cmpsl
lret
or
cmp
jmp
push
pop
cmpsb
sbb
jb
test
cmc
sbb
jnp
sbb
and
mov
push
jns
lods
out
inc
sub
mov
jae
pop
pop
mov
pusha
mov
jbe
mov
fcomip
ds
aad
imul
orb
insb
sbb
sbb
adc
out
push
add
les
lret
dec
jge
lea
lods
in
sbb
xchg
mov
aam
and
dec
jmp
test
pop
stc
sub
ret
or
out
rol
sti
cmpsb
stc
mov
add
fxch
add
jbe
popf
xchg
iret
ret
call
mov
in
cmp
fcomps
mov
add
fstpl
pop
mov
adc
adc
add
jno
test
cmp
and
sbb
std
hlt
add
mov
push
out
push
inc
es
test
xor
push
iret
cld
jae
sub
in
mov
ror
or
scas
sar
mov
xor
pushf
xchg
pop
bound
scas
sarl
sbb
cmp
dec
scas
pop
and
enter
inc
sub
pavgw
add
inc
dec
jp
cld
xchg
mov
mov
sub
lret
out
aaa
push
lret
xchg
orb
jge
add
pop
imul
scas
cmp
dec
data16
fidivrs
sbb
lcall
ljmp
lcall
cli
nop
int
xor
pop
push
daa
pop
mov
lea
imul
xchg
push
cmp
divl
xchg
jecxz
loope
sub
adc
cli
jae
pop
mov
test
daa
bound
test
popa
shll
repz
adc
aas
cmc
out
cli
inc
pop
dec
mov
enter
lcall
cmpb
dec
adc
xchg
jl
addl
dec
data16
and
nop
xor
xor
fcmovnbe
shll
sub
ss
adc
cmc
jecxz
and
mov
adc
jle
inc
orb
test
shlb
dec
adc
sub
bound
and
mov
aam
cmp
pushf
movsb
fdiv
insb
shlb
aas
int
fs
fs
pusha
push
xchg
sbb
fistps
inc
add
movsl
inc
sarb
xor
enter
cmpl
or
int
add
ret
lret
enter
es
lea
insb
sti
mov
xor
mov
jge
jo
cmp
pushf
pop
xlat
fisubl
pop
add
mov
or
cld
adc
ret
push
pop
xchg
and
js
push
aad
cwtl
sbb
jns
stos
lods
add
cli
sbb
xchg
es
mov
add
sahf
adc
lret
pop
ljmp
mov
pop
jbe
out
roll
push
loop
out
mov
dec
jbe
bswap
mov
adc
and
addl
pop
and
adc
fsubrs
in
pushl
pop
or
mov
addr16
mov
inc
jb
or
xchg
pop
fs
fs
hlt
sbb
jp
imul
test
popa
int3
jne
out
mov
stc
pop
push
cwtl
pop
das
mov
add
into
cmp
push
loope
mov
sahf
pusha
std
loope
fiadds
int
push
mov
xchg
mov
out
inc
or
out
dec
push
sti
push
dec
inc
sub
mov
mov
and
mov
test
xchg
jb
push
clc
adc
lds
mov
out
scas
sbb
sbb
push
mov
adc
enter
outsl
fsub
loopne
mov
pop
mov
sub
ret
mov
mov
aaa
and
scas
int
mov
repnz
and
movsb
mov
int3
out
adc
cmc
rolb
xor
push
jg
mov
sahf
icebp
fnstenv
push
mov
in
daa
cmpsb
data16
mov
inc
aaa
movsb
scas
enter
stos
cmc
dec
test
sbb
push
int
arpl
insb
dec
ljmp
mov
je
inc
adc
aam
inc
test
repz
je
sarb
sbb
aad
pop
bound
pop
insl
lahf
xor
mov
mov
loopne
imul
sub
addr16
testb
inc
icebp
mov
or
push
ljmp
sub
scas
lock
mov
mov
cmc
and
js
iret
adc
mov
jmp
leave
loop
jp
fsubp
xchg
ret
stos
sti
mov
bnd
sbb
cmp
ret
icebp
or
inc
insb
int3
sti
pop
pop
test
mov
xchg
add
mov
mov
je
jns
addr16
add
movsb
insl
fimuls
inc
les
ja
add
test
call
sbb
dec
loope
lea
aas
repnz
int3
inc
adc
mov
pop
push
pop
dec
cli
or
cmc
inc
clc
dec
push
ss
clc
loopne
push
js
lock
push
sub
add
rorb
dec
pusha
call
jmp
xchg
xor
sub
call
cwtl
mov
pop
test
cltd
stc
mov
std
xlat
cs
and
jns
shll
sbb
and
mov
pop
sbb
mov
lret
leave
adc
mov
pop
inc
push
scas
clc
int
pop
das
loopne
mov
mov
pop
rorb
dec
push
stos
in
cmp
mov
inc
daa
pop
push
out
push
inc
adc
jg,pn
cmp
enter
dec
or
mov
outsl
xor
stc
add
xchg
int3
xor
jmp
in
and
or
lea
mov
cwtl
fildl
push
mov
xor
aas
xor
or
add
push
mov
mov
and
ret
pop
into
add
inc
sbb
lds
xchg
outsl
mov
jmp
jae
push
movsb
dec
imul
and
mov
push
fucomi
sub
out
jne
pop
test
jo
cmp
jno
nop
addr16
call
bound
das
leave
xor
mov
xor
and
push
call
and
notb
cli
jbe
and
psubusw
mov
mov
out
imul
jno
pop
jecxz
mov
dec
inc
add
jo
adc
lahf
outsl
leave
mov
jecxz
insb
test
mov
dec
inc
mov
js
stos
pop
clc
js
mov
enter
jg
inc
xor
dec
shrl
incb
jge
adc
cmp
and
shrb
idivb
dec
pushf
sbb
sbb
aaa
or
jl
mov
popf
sahf
dec
mov
sub
add
iretw
pushf
insb
fbstp
sub
aad
mov
pop
mov
sbb
and
sbbl
insb
lret
xor
push
pop
jne
cmp
dec
add
inc
and
xor
mov
movsl
pop
in
and
and
mov
sarl
adc
rcl
pop
lods
pop
imul
jnp
adc
fimull
fidivrs
test
push
js
insl
xor
mov
push
stc
cmpsb
cmp
in
cmp
push
push
add
nop
insl
fcoms
add
and
in
shlb
cmp
in
push
jb
nop
std
pop
jnp
test
cmp
in
push
inc
ret
lahf
test
out
cmp
xor
repnz
and
mov
jl
mov
xchg
jb
mov
mov
ret
mov
rolb
lret
xor
sub
test
sub
sbb
mov
das
cmp
out
lret
sub
mov
loopne
nop
andb
por
orb
push
or
iret
bswap
cmp
push
sbb
push
hlt
lret
mov
jae
fisttps
test
push
roll
loopne
clc
xchg
arpl
add
cld
lret
roll
in
pop
and
arpl
fstpt
mov
pop
push
jne
insl
cmpl
daa
fldcw
lret
add
jo
sub
fistpl
sub
push
or
mov
jecxz
popa
cmp
dec
sub
xchg
mov
imul
push
push
xor
scas
stc
jno
sbb
add
cmp
mov
shll
js
jo
xor
jo
jmp
imul
enter
adc
call
push
insl
jge
xchg
jp
sub
mov
inc
in
inc
test
or
push
add
cmp
xchg
adc
mov
shll
or
xchg
rclb
and
icebp
cmp
lods
mov
fisubs
in
cmp
xchg
pushf
jl
push
jnp
sub
sub
movsb
mov
out
sbb
jno
sub
movsb
loopne
shll
and
roll
js
mov
or
xor
pop
ja
jp
push
data16
mov
cmp
lret
add
fsts
adc
fistl
xor
jge
mov
mov
ljmp
pop
ficoms
mov
mov
dec
jp
ja
repz
sub
fistps
mov
jecxz
jmp
jg
mov
testl
cmp
push
xor
mov
out
cmp
mov
xchg
lcall
jo
sub
push
cmpl
push
inc
sbbb
aaa
mov
jnp
inc
rcrl
dec
test
or
ja
jo
repz
add
adc
sarl
pop
mov
pop
imul
adc
out
lods
and
or
imul
dec
mov
adc
push
cmpl
pop
aam
push
xchg
fistpl
add
imul
jne
and
pop
mov
rorl
test
leave
push
sub
cld
fisubrs
popf
mov
mov
sarl
jnp
mov
rolb
jbe
pop
in
loop
inc
daa
xchg
push
mulb
cs
rol
push
sub
adc
scas
push
es
push
out
push
adc
push
outsb
std
out
and
mov
stc
iret
aam
testl
in
mov
js
fwait
rclb
xchg
cmp
sbb
lods
jbe
sub
jl
lret
cwtl
addr16
adc
dec
stos
in
add
ljmp
pop
out
add
and
movsl
dec
jbe
hlt
loope
out
aad
sub
aas
push
stos
inc
call
fisubl
pop
inc
or
lock
out
mov
cmp
push
je
mov
je
loop
or
mov
mov
mov
inc
out
and
lret
imul
dec
or
sub
and
rcrl
lea
inc
pusha
and
mov
rcl
pop
popf
mov
stos
sbb
insl
xor
pop
cmp
mov
mov
mov
call
sbb
adc
xor
test
mov
cwtl
jecxz
clc
loopne
adc
fprem1
js
mov
mov
js
jnp
stos
ret
sub
cmp
xchg
fisubrs
lods
fsubrl
rorb
sbb
pop
testb
inc
dec
add
sti
push
call
push
push
inc
cmp
xor
jle
cmp
mov
les
shlb
and
into
in
sti
adc
fnstsw
mov
repz
adc
repnz
jp
call
shll
sarl
out
shll
subb
adc
icebp
jecxz
bound
jge
pop
popa
cmc
imulb
mov
in
movsb
icebp
stos
shlb
xor
mov
mov
push
cmp
pop
push
jae
cmpsb
lds
xchg
mov
js
loopne
call
loop
or
cmp
rolb
rorl
cmp
dec
flds
repz
in
mov
imul
and
pop
dec
xor
mov
std
and
fcompl
inc
or
push
jnp
xchg
shl
dec
mov
cmp
rclb
pop
jns
orb
sub
cmc
out
mov
mov
rcr
sbb
test
cmpl
sbb
mov
stos
jmp
sbb
sub
xor
iret
xor
dec
pop
loope
pop
inc
rcr
xor
cmpsb
hlt
in
ror
jmp
popa
mov
mov
cmc
xor
mov
xor
sub
or
arpl
sub
xchg
add
loopne
pop
out
adc
je
lods
inc
mov
inc
inc
pop
mov
icebp
inc
inc
mov
sbb
pop
mov
dec
test
mov
fidivl
push
ss
xchg
dec
cmp
test
into
ds
push
jo
cmc
js
iret
sub
enter
cltd
sahf
jmp
dec
sahf
nop
pop
push
and
aam
jmp
ljmp
aam
out
xor
cmpb
ds
sbb
scas
lret
jbe
push
or
push
pushf
out
xchg
repz
mov
and
mov
xchg
gs
lcall
push
adc
or
ss
jg
jmp
mov
test
sti
lret
roll
dec
loope
xor
pop
xchg
lods
cmp
outsb
jbe
rclb
cld
pop
jbe
add
in
loop
mov
dec
add
push
add
cmp
out
jne
fdivrs
xor
xchg
call
dec
ror
cwtl
jns
outsl
inc
cmpsl
test
nop
pop
pop
js
fidivrs
adc
xchg
rcrl
in
lea
into
mov
cs
add
mov
jbe
mov
imul
mov
add
inc
movsl
js
insb
mov
in
lods
lods
dec
gs
pushf
sub
mov
or
stos
jecxz
mov
jg
add
in
out
rclb
dec
mov
mov
imull
testb
lret
adc
out
xor
pop
mov
mov
adc
out
jno
mov
lret
int
aad
enter
adc
xchg
inc
xchg
loope
std
mov
pop
in
or
iret
cmpb
lock
cmp
push
push
xor
push
jle
dec
xlat
inc
inc
in
lret
enter
pop
push
mov
cltd
mov
fidivl
lock
loope
mov
dec
in
xlat
popa
rclb
test
popf
dec
data16
rclb
int
pushf
call
mov
mov
mov
mov
sbb
ret
mov
xchg
repnz
lds
dec
push
fs
gs
ret
sar
inc
xchg
sahf
fs
pop
dec
mov
push
cli
fwait
rcll
enter
add
jnp
rclb
aad
push
out
inc
xor
aaa
sbb
adc
inc
and
inc
psubd
stos
jmp
test
sub
push
test
stos
pop
lret
inc
mov
leave
or
inc
xchg
push
lcall
mov
jo
mov
ja
ja
ja
jne
rol
roll
push
arpl
ret
jmp
xchg
inc
jnp,pt
add
dec
icebp
and
jl
xor
xchg
inc
push
dec
mov
lds
lea
das
push
push
push
icebp
inc
sbb
add
js
mov
test
add
xchg
or
loope
lock
lret
or
sub
lods
or
inc
push
dec
stos
sub
clc
and
cmp
xor
repnz
mov
mov
mov
lods
cmp
push
daa
lds
xor
inc
jl
std
and
xchg
inc
jl
xchg
ffreep
dec
inc
jle
test
out
je
daa
inc
push
imul
xchg
sbb
jnp
xchg
je
ret
insl
iret
int
cmp
js
lcall
pop
jb
aam
in
cltd
cmc
dec
mov
jns
push
push
fiaddl
fsubl
pop
inc
pop
ret
sbb
xchg
nop
adc
jbe
adc
repz
xchg
cmp
pop
arpl
sbb
aad
mov
mov
mov
mov
and
cmp
lea
outsb
mov
jno
and
sub
int
repz
cmp
sbb
das
push
xor
push
jnp
adc
ss
mov
out
cmc
shr
in
jl
add
add
and
adc
scas
add
cmpsb
fwait
in
dec
mov
hlt
mov
test
popf
pop
jg
push
sbb
lret
xor
mov
push
inc
pop
aad
cmp
mov
pop
and
jno
dec
lock
stos
cmp
shlw
ja
pop
les
fisttpll
addb
rcrl
xchg
cmp
xchg
int3
dec
xchg
xor
jge
popa
repnz
ret
ss
dec
mov
sub
xchg
and
dec
xor
xchg
movsb
add
in
or
xchg
dec
cli
xor
lahf
pop
mov
or
call
xor
jne
idivl
inc
sbb
int
gs
dec
jmp
pop
mov
in
mov
adcl
leave
adc
jl
repnz
add
or
push
pop
xor
mov
fimull
jno
in
mov
add
ficoms
mov
ror
sbb
dec
imul
add
xchg
icebp
mov
rcrb
sub
mov
cmp
jbe
pop
dec
and
xchg
sar
fidivrs
mov
popa
jns
ss
imul
mov
jnp
iret
test
sub
js
les
sub
sbb
mov
mov
movsb
sti
clc
sub
cltd
pusha
push
and
push
in
push
cmc
mov
cmp
stos
test
push
jge
mov
push
das
dec
xor
scas
out
in
mov
add
lahf
xchg
or
xchg
jne
ret
xchg
jb
and
mov
rol
push
push
pop
jno
jae
ret
sahf
repz
adc
pop
xchg
jg
dec
ss
inc
jns
sahf
lahf
out
aaa
pause
mov
jnp
jle
je
mov
dec
jge
and
inc
sub
and
mov
shlb
push
inc
hlt
cwtl
les
lret
xchg
dec
es
fwait
adc
inc
pop
pop
pushf
or
stc
in
movsb
out
imul
jle
adc
add
ret
mov
lahf
lods
aas
pusha
lret
mov
or
popf
adc
cmpl
mov
dec
inc
sub
imul
imul
test
stos
and
push
add
cli
mov
pop
mov
stos
xor
mov
scas
mov
sub
ret
loope
movsl
mov
rcll
ss
mov
ljmp
jmp
inc
mov
ret
sub
into
mov
rclb
sub
sub
outsb
or
sbb
incl
mov
test
or
sub
jge
pop
leave
mov
xchg
mov
lret
inc
jge
xchg
ja
pop
test
daa
jp
lock
jle
leave
lds
aad
add
std
fbstp
div
adc
mulb
jno
fs
insl
jmp
jp
in
sbbl
pop
mov
mov
sbb
loop
or
add
rcr
dec
les
and
ret
call
cmpsb
xorb
dec
in
insl
mov
sti
xchg
mov
es
outsl
sbb
xchg
pop
mov
dec
test
sete
add
ljmp
pop
adcb
mov
or
ror
and
sbbb
xchg
in
lcall
mov
xor
leave
int3
jge
mov
pop
dec
jbe
cmp
jb
sbb
lahf
cmp
std
jae
iret
aas
out
rcll
aas
fistpl
gs
sbb
std
mov
or
or
jb
dec
lock
dec
fisubl
sbb
xlat
jge
cmpsl
out
nop
pushf
int
jns
push
mov
fistps
mov
mov
and
leave
je
int3
mov
or
stos
loop
pop
das
ja
hlt
and
out
fldcw
fmuls
les
shl
ja
lds
sbb
mov
rcr
leave
dec
jbe
int3
mov
jnp
mov
push
xchg
in
cmp
sub
mov
insl
aad
rcll
xlat
add
mov
inc
fwait
add
dec
push
mov
cld
sub
out
nop
add
addr16
stos
lock
push
mov
xchg
jb
loope
dec
jae
jb
xchg
jno
adc
enter
xchg
dec
inc
call
ds
std
testl
sub
add
in
inc
xchg
mov
lds
xchg
and
mov
push
push
push
lock
aam
cmc
jnp
mov
mov
and
lods
out
outsl
pusha
push
fs
imul
xchg
fs
or
incb
mov
and
add
mov
out
pop
bound
or
mov
mov
icebp
fnstsw
xor
mov
mov
imul
in
push
push
sub
cltd
pop
sub
dec
mov
loope
repz
fldenv
cwtl
call
movsb
xchg
in
add
push
sbb
aaa
loopne
clc
leave
and
jne
adc
int3
movsl
lea
dec
inc
mov
inc
movsb
pop
jg
or
inc
and
mov
sub
subl
push
xor
iret
push
jns
rorb
lcall
lods
add
cld
mov
add
test
sahf
rcrb
sub
mov
push
jle
or
stc
xchg
mov
pop
adc
aaa
int3
cmp
fprem1
daa
sbb
add
xchg
movsb
arpl
loope
enter
and
test
call
push
pushw
mov
outsl
sbbl
nop
mov
mov
mov
pop
gs
xchg
or
pop
inc
mov
push
cmp
mov
test
lret
xor
in
dec
test
cmp
jmp
out
sub
outsb
pop
in
push
or
hlt
icebp
out
icebp
mov
rorb
adc
mov
inc
inc
out
xor
jg
mov
push
or
repnz
jmp
mov
aam
mov
dec
push
dec
xchg
out
loop
cmp
and
mov
sub
and
rol
dec
mov
add
mov
mov
inc
xchg
inc
xor
test
iret
sbb
data16
je
add
imul
scas
lcall
test
lods
dec
ss
push
les
cld
xlat
adc
jne
mov
jge
xorl
ss
xlat
inc
divb
into
iret
aad
inc
jmp
sbb
ja
leave
add
mov
push
mov
and
fisttps
push
xor
and
lods
cmp
jne
rcrb
fxch
movb
dec
push
inc
sbb
aas
andb
fisubrl
enter
dec
popf
mov
add
mov
adc
xor
insl
imul
xor
adc
dec
inc
dec
mov
adc
mov
inc
jae
cwtl
int
lock
sti
mov
push
inc
xor
out
mov
xchg
xchg
test
lret
lret
lods
add
mov
inc
dec
iret
inc
scas
fs
fldenv
xchg
pop
lock
jge
and
fldcw
fnsave
mov
jmp
push
push
shl
hlt
mov
adc
xchg
or
in
jne
clc
call
test
xor
cmp
xor
adc
test
cmp
test
int
fucompp
jnp
adc
lock
or
popf
mov
addb
and
and
xchg
or
xchg
mov
aas
popa
scas
mov
out
aas
mov
dec
pop
add
and
push
push
and
push
or
sbb
mov
pop
ret
dec
jp
jnp
cmpsb
repnz
test
les
mov
jmp
pop
cmp
jae
fs
cmpsl
dec
hlt
push
or
ror
fisttpll
mov
movsl
mov
lcall
dec
imul
and
inc
add
subb
xchg
mov
popf
test
and
xchg
lcall
sub
jge
das
sbb
repnz
jb
lcall
jg
int3
popf
mov
cltd
cmc
stos
aad
push
loopne
outsb
or
mov
xchg
int3
adc
leave
dec
sbb
jnp
lods
jae
loopne
icebp
fcmovnb
imul
call
inc
das
and
imul
es
xor
cli
jnp
dec
and
cmp
pop
sub
flds
cmp
or
pop
xchg
cli
ret
ja
fs
shr
dec
and
sbb
loope
insb
fisubs
pop
cmpsl
jmp
pop
inc
mov
mov
imul
mov
dec
mov
fwait
adc
cmp
in
inc
xchg
sub
mov
xlat
mov
sbb
and
or
inc
cmp
dec
jnp,pn
mov
dec
ficomps
fwait
lea
push
xor
lds
cltd
fcomps
mov
lea
xchg
mov
shlb
pop
xor
mov
xor
addr16
mov
lods
mov
xor
jl
pop
inc
repnz
into
xor
adc
sbb
pop
or
sbb
xor
lret
xchg
repnz
rcrl
add
sub
xchg
pop
dec
cwtl
or
js
enter
pop
or
fdiv
pop
dec
push
lret
fidivrs
adc
cmc
inc
shlb
pop
jp
or
out
fcmovne
mov
or
mov
xor
mov
pop
push
adc
test
inc
lea
xchg
movsb
outsb
lds
lahf
movsb
loopne
lock
lods
fcoms
push
out
xor
in
popl
repnz
inc
cmpsb
cmp
xorl
pop
xorl
dec
loopne
shll
hlt
cltd
xor
push
sbb
mov
das
div
sub
sbb
mov
inc
xor
outsl
rolb
cmp
add
lea
xchg
pop
lcall
push
push
fimull
or
movsl
mov
shlb
cmp
fiaddl
push
sub
insl
mov
pop
cld
movsb
sbb
and
add
and
fwait
cs
sbb
dec
gs
sub
sbb
inc
stc
lahf
pop
adc
and
pop
xchg
inc
xchg
fs
xchg
stos
out
shl
and
outsb
setb
jg
dec
xchg
mov
cwtl
and
pop
add
sub
mov
test
pop
pop
out
or
adc
add
and
fdiv
and
pop
adc
shr
rorb
pop
mov
pop
movsb
shl
jmp
bndldx
sbb
mov
pop
push
inc
push
inc
gs
inc
popa
xlat
orb
or
inc
and
or
xchg
les
ds
out
sub
out
lds
fisttpl
hlt
or
push
std
jge
dec
cmp
cmp
fs
dec
sti
xor
negl
inc
jg
push
repnz
cmp
xor
push
addb
pop
orb
sbb
sub
shlb
cmp
pop
pop
sub
jns
ret
aaa
clc
inc
in
jne
jl
mov
jge
inc
cltd
test
loopne
out
mov
loopne
xor
inc
cmp
call
clc
adc
mov
mov
movsb
into
les
ret
xchg
mov
xor
int
jle
mov
push
dec
fwait
push
pop
and
rorb
xchg
das
jno
mov
or
add
pop
iret
sarl
cwtl
fwait
dec
inc
inc
fwait
test
aaa
or
push
repnz
or
aaa
out
test
push
mov
jnp
cmc
inc
xor
jge
in
bswap
test
add
sub
into
scas
cmp
cld
xchg
fcoml
mov
lea
jge
lret
rcr
pop
test
sub
cwtl
inc
jno
shll
mov
scas
and
mov
repz
or
inc
sti
outsl
push
shlb
cli
pop
and
lret
jnp
and
sub
adc
call
sbb
inc
outsb
cmp
ldmxcsr
cmp
mov
fisttpl
js
add
xchg
xchg
dec
or
stos
movaps
and
int
sbb
fxtract
jo
orb
aas
loop
pop
cwtl
jg
pop
mov
ret
sub
or
pop
stos
xor
jmp
cmp
into
in
add
inc
pop
stos
cltd
lock
in
mov
add
pop
mov
or
and
add
movsl
pushl
into
fs
testl
inc
and
inc
pop
mov
outsl
leave
test
sub
add
inc
sbb
clc
outsb
aam
mov
sub
pusha
clc
jne
xchg
xor
sub
aaa
roll
adcl
popf
fimull
inc
xchg
sarb
mov
int
aaa
push
ja
adcb
or
imul
pop
jne
jae
outsl
movb
scas
orl
mov
or
aas
add
cmp
xchg
in
std
or
fcmovnb
push
std
dec
xor
cmpsl
mov
out
lcall
sbbl
stos
adc
push
cmc
aad
xor
dec
jns
in
pusha
sti
js
nop
pop
outsb
leave
mov
arpl
inc
mov
shll
push
fs
faddl
cld
mov
or
pop
test
lock
or
dec
aad
sar
mov
xor
mov
out
xchg
inc
daa
fwait
mov
inc
pop
push
test
mov
mov
cltd
xchg
addr16
mov
sbbl
and
inc
and
arpl
jecxz
and
sti
inc
enter
outsl
xchg
sbb
leave
sbb
jp
jae
xorb
insb
cld
xchg
push
outsl
dec
aas
sub
pop
sub
dec
cmp
pinsrw
lock
and
inc
add
aam
testb
adc
lcall
out
inc
push
ljmp
sbb
dec
movsbl
mov
ja
mov
dec
data16
xchg
xchg
ss
stc
mov
out
fsubrs
xor
loopne
cmp
cwtl
adc
movsb
mov
rcrl
inc
jle
lods
inc
stos
popa
cld
into
inc
mov
in
stc
add
fdivs
data16
fidivl
lret
cmpsb
and
xor
rcll
jnp
cmp
imul
jmp
sbb
mov
notb
jne
ret
out
imul
shll
xlat
adc
pushf
push
mov
leave
add
fisubrl
jge
sub
je
ja
xchg
das
stos
rolb
cmpsl
jae
add
daa
rorb
xchg
jmp
adc
fsubrs
sbb
push
fcmovnu
sub
and
add
xchg
loope
leave
outsl
frstor
mov
movsl
sub
mov
push
or
mov
roll
xchg
fiaddl
and
mov
jle
mov
repnz
pop
repz
sar
leave
cmp
pop
in
shlb
cli
in
inc
stc
push
pop
sbb
cltd
inc
imul
dec
cmp
cli
mov
pop
ss
or
cmpsl
lcall
and
xchg
adc
or
adc
jmp
sub
adc
shll
dec
adc
fisubs
mulb
mov
jbe
ret
ficoml
xor
sbb
or
fsubrs
xchg
rep
add
fadd
xor
imul
pushw
addb
push
rolb
mov
sti
sub
mov
hlt
loope
test
xor
arpl
shl
or
std
xchg
inc
dec
mov
pop
mov
fcomps
xchg
add
fcoml
add
mov
pop
cmp
inc
jle
lret
mov
test
pop
pushl
xor
dec
or
mov
loop
ror
ret
and
adc
push
rclb
ret
outsl
sbb
mov
aaa
cltd
in
xor
or
popa
xor
mov
xor
inc
out
int
push
rcrb
call
out
adc
adc
adc
jge
enter
xchg
xor
aas
xor
gs
loope
das
fstpt
leave
call
cmpsl
lods
jmp
mov
sahf
leave
mov
shrb
mov
das
sbb
mov
insb
das
sbb
fidivs
adc
loopne
dec
adc
sub
add
les
repz
pop
test
jne
and
and
cmpsl
rolb
xchg
jge
push
xlat
aad
inc
pop
stc
fnstsw
je
inc
pop
arpl
sub
imul
mov
xchg
repnz
cmp
mov
test
mov
mov
ret
fcmovnu
in
aad
cmp
xchg
aas
ret
fwait
sahf
and
int
jno
and
push
mov
negb
ljmp
mov
out
lcall
mov
mov
mov
into
imul
les
es
xchg
stos
adc
out
mov
jns
fsubr
inc
addr16
xlat
insb
rcll
sub
pop
loopne
or
mov
push
and
cmc
pop
mov
push
repnz
inc
lret
pop
mov
dec
js
aas
aad
inc
mov
cli
arpl
inc
fcmovnbe
add
jl
incl
aaa
cmp
int3
jnp
lret
mov
jge
cmp
es
xchg
cmp
xchg
vmovdqu
dec
push
fdivrs
ret
sbb
stos
mov
cmp
or
je
mov
in
aam
dec
cmpsl
mov
addl
sbb
push
or
and
sti
out
inc
xchg
pop
aaa
add
ss
jb
ret
test
xor
jl
mov
pop
mov
sti
cmp
jae
ljmp
ljmp
xor
mov
aam
jge
or
loopne
test
je
not
in
inc
enter
shrb
sbb
push
movsb
sbb
sbb
jns
in
mov
add
or
or
cmp
dec
gs
cwtl
push
pop
fnsave
pop
jp
fs
leave
lock
jp
nop
leave
loope
pop
sbb
fimuls
xor
mov
mov
push
adc
dec
cwtl
xchg
imul
cmpsb
icebp
jmp
cmp
sub
pop
sbb
xor
cmpsl
xor
or
dec
add
hlt
jnp
cmpsl
call
mov
cltd
inc
xor
fadd
test
hlt
mov
ss
scas
mov
mov
stos
aad
push
es
jnp
sub
popf
mov
jae
inc
mov
cmpsb
and
xchg
mov
push
adc
push
and
xchg
int3
lcall
mov
xor
adc
mov
adc
outsl
pop
shl
mov
or
push
in
leave
lret
mov
cmpsl
mov
cwtl
test
mov
push
in
nop
hlt
lahf
jne
test
xor
mov
or
pop
das
adc
xchg
push
fs
pop
lcall
insl
sahf
push
jle
and
jb
lock
ds
sub
aas
test
nop
int
or
bound
stos
cmp
jmp
ja
test
into
pop
call
pushf
imul
sbb
mov
dec
mov
xor
lods
repnz
pop
test
push
dec
aad
adc
aam
jmp
lea
add
loopne
arpl
popa
push
loop
jmp
loope
push
or
cmp
aas
inc
faddp
int3
dec
addr16
fwait
test
fidivs
push
in
dec
lcall
mov
mov
push
test
and
jmp
add
push
insb
sub
ret
lods
in
xor
test
jle
sub
fstps
xor
repnz
add
popa
jmp
pusha
xor
add
popa
sbb
movl
add
fimull
lahf
fnstsw
rcrl
inc
negb
xor
shll
dec
mov
push
adc
inc
cs
iret
add
shll
fucomi
arpl
mov
cli
push
ss
jae
incb
lcall
bound
add
cvtdq2ps
xchg
mov
cwtl
jno
loopne
pop
push
jmp
sub
sub
insl
fisubrs
and
xchg
popa
jb
jno
sbb
add
xlat
xchg
dec
aam
cmp
xchg
int
loopne
push
int3
xchg
push
ds
in
adc
jo
int
mov
adc
int3
ds
mov
and
mov
and
aad
arpl
jb
dec
jge
push
cld
inc
movq
in
sub
and
push
mov
sahf
adc
push
add
rcrb
inc
in
std
xor
mov
adc
jge
sub
nop
jns
xchg
mov
sbb
or
ret
pop
or
push
roll
pushf
int3
in
mov
jns
out
pushf
out
sbb
add
mov
out
sbb
pop
or
dec
ljmp
das
cmp
ss
lahf
jg
add
mov
cmp
sbb
enter
push
mov
mov
dec
xor
fwait
push
xor
dec
xchg
icebp
lds
enter
sub
xor
mov
add
sarb
icebp
std
jns
and
aas
jle
ret
int
loop
push
pop
cmpsl
test
inc
push
mov
fwait
orl
call
jbe
int3
loope
or
stos
fisttpll
dec
ficoml
clc
sbb
and
sbb
dec
into
mov
rorl
imul
jo
popa
stc
inc
push
pop
ret
xor
insb
dec
sbb
mov
xchg
dec
int
mov
add
repnz
gs
cmpsb
jnp
push
sti
cmpsw
mov
loop
dec
xor
xor
cmp
sub
or
cmp
jp
mov
adcb
dec
iret
mov
cmpsl
pop
subb
ds
sub
jno
mov
push
hlt
inc
sub
push
sbb
xor
inc
mov
xchg
lds
loopew
lock
ds
icebp
cmpsl
jp
repz
bound
jmp
push
inc
scas
lret
push
push
sub
mov
inc
push
sub
push
incb
mov
xor
mov
jge
sub
or
stc
xchg
cmpb
add
mov
cmpsl
in
cmp
out
rorb
pop
cmp
test
jne
nop
sbb
pop
adc
cmp
xlat
lods
cmp
jb
mov
lock
je
jne
xchg
nop
nop
dec
xor
lahf
mov
ljmp
ret
rorb
jb
jge
or
sti
movsl
ss
movsl
mov
out
push
inc
cli
pop
jg
adc
jne
and
xor
and
and
jge
pop
xor
test
aam
test
nop
push
out
imul
imul
popa
fldl
xor
aaa
xor
mov
jecxz
pop
ret
sbb
ds
or
or
sarb
sbb
test
mov
