imul
call
in
add
cmpb
jne
movzbl
mov
add
call
sbb
mov
cmp
pushl
aaa
or
pop
add
mov
sub
jne
movsb
sbb
bound
outsl
mull
add
mov
add
add
fcomp
add
sub
mov
push
lea
push
xor
divl
or
adc
scas
mov
mov
push
not
push
push
mov
outsl
leave
lahf
ss
or
jne
cmp
jbe
push
push
pop
sti
enter
adc
mov
lods
jle
neg
stos
or
stc
pop
pop
jmp
sbb
pushl
in
aaa
sbb
hlt
leave
ret
dec
add
inc
jg
outsl
mov
inc
fs
je
jmp
pushl
cmpsl
movzwl
push
out
iret
fimuls
movb
mov
cmpsb
or
je
fucomi
outsb
in
xor
pop
insl
dec
push
push
push
or
add
cmpl
sarl
idivb
pusha
rol
add
inc
pop
mov
dec
repz
push
xlat
std
inc
mov
mov
das
mov
shr
cmp
dec
mov
subl
pop
ret
jnp
shll
and
add
sbb
fists
inc
or
call
jae
lret
pop
fimuls
shl
or
mov
or
and
sarl
mov
shr
pop
cmp
add
ret
add
aad
movups
push
fstps
enter
push
mov
add
mov
push
dec
shrb
lret
or
decb
push
fisttps
and
push
adc
and
jne
mov
imul
adc
mov
mov
mov
add
or
enter
mov
inc
mov
jge
jg
mov
or
jns
dec
add
add
xor
lcall
mov
data16
pop
leave
ret
and
fcoms
and
sub
mov
andb
add
push
push
lock
add
mov
mov
mov
add
frstor
mov
pop
or
addr16
aas
dec
sbb
cld
std
frstor
and
or
adc
test
and
scas
lock
push
push
and
xor
sar
fsts
and
mov
lcall
jmp
adc
orl
dec
mov
dec
xor
mov
dec
jnp
cmc
ret
push
mov
mov
test
aaa
pop
inc
push
or
dec
adc
mov
adc
cmpb
cli
inc
or
inc
push
fs
jo
in
push
js
pushf
insl
mov
push
adc
je
adc
in
or
inc
sbb
xor
leave
cld
lods
inc
cmp
cmp
jne
mov
jmp
je
jl
decl
movsb
push
push
and
cmp
add
xchg
inc
fisubrs
orb
fs
mov
push
sbb
rclb
mov
sbb
std
cmpw
je
and
ss
or
ficoml
hlt
push
or
jg
out
lock
scas
pop
je
or
inc
jno
pop
jae
pushl
test
jp
lock
hlt
idivl
mov
ljmp
xor
mov
add
lds
incb
or
push
cwtl
sbb
aaa
stos
adc
jae
mov
das
cmp
or
xor
jmp
or
out
movsl
testl
sbb
pop
add
lret
insb
add
and
leave
fiadds
jg
add
out
fadd
mov
cmp
add
jne
xchg
shlb
fwait
push
mov
daa
je
mov
inc
rcl
mov
decl
adc
xorl
xor
mov
fnsave
mov
xor
sahf
add
mov
decb
and
out
test
adc
stos
call
jae
enter
xor
addl
adc
in
jmp
xor
mov
sub
mov
jecxz
sbb
movw
push
push
dec
mov
aad
add
and
add
es
pushl
dec
leave
imulb
or
lahf
cmpb
sbb
pop
xor
sbb
lahf
sbb
or
dec
je
fwait
pop
xorl
fwait
or
cmp
bound
or
lahf
arpl
or
adcb
sbb
mov
es
or
in
and
add
cmp
imul
dec
out
xchg
xchg
add
or
add
push
sub
scas
cmp
cmp
and
pop
xor
les
sub
nop
dec
mov
inc
rep
inc
imul
xor
mov
addr16
jl
push
inc
xor
ss
pop
push
lcall
js
xor
divl
sbb
or
xor
int3
sarl
jb
and
or
gs
dec
js
mov
bound
push
pop
iret
cmpl
enter
imul
push
insb
mov
fxch
rcll
lock
and
xchg
hlt
sbb
loopne
sub
xor
sbb
sbb
push
jge
cwtl
ss
repnz
clc
adc
jae
pop
dec
ljmp
adc
cmp
mov
clc
mov
inc
scas
xchg
clc
sbb
pop
cmp
adc
mov
shl
jno
xor
jbe
push
fsubr
or
push
insl
adc
stc
or
add
clc
js
sub
test
jne
negb
adc
push
mov
and
outsb
or
daa
add
jns
lret
cmp
cmpb
lds
adc
mov
xchg
add
andl
repnz
cmp
jne
dec
jne
push
test
test
mov
cmp
add
sbb
push
pop
adc
or
xchg
and
sbb
imul
and
push
cmp
pop
repnz
sub
push
push
add
in
xchg
adc
and
and
mov
mov
ja
add
xchg
ficoms
or
sub
iret
fstps
pop
xchg
add
add
idiv
sbb
and
sbb
je
cmp
je
daa
je
cmp
in
adc
call
cs
pop
ret
ret
mov
idivl
sub
arpl
push
int3
out
cmp
or
clc
and
out
in
adc
push
sub
in
or
sub
sub
add
push
and
sub
or
inc
sub
mov
shr
cmp
jne
sub
aad
pop
inc
and
pop
cmp
jne
faddl
lods
sbb
movl
arpl
push
faddl
rcr
push
sbb
push
jo
les
sbb
pop
call
cwtl
or
fs
test
jnp
in
jmp
jmp
int
mov
xchg
xchg
rolb
or
xor
cmpsb
clc
call
clc
adc
push
push
add
jnp
fstps
push
roll
fwait
jp
ja
or
push
mov
sarl
xor
push
lea
and
outsl
fisttpl
adc
subl
mov
jge
and
notb
add
decl
add
fldenv
adc
movsl
out
push
add
test
in
mov
jp
jo
ja
call
or
scas
mov
mov
fsubr
or
add
notb
pop
inc
push
sub
pop
ds
lods
in
and
adc
call
lock
lea
add
mov
pop
push
pop
xor
ror
mov
and
push
adc
hlt
aam
push
push
pop
sub
push
sahf
outsb
jmp
cld
fsubl
lahf
cmp
inc
fadds
push
jb
jne
incb
push
mov
pop
clc
mov
jae
loope
insb
push
call
xor
popa
sub
add
and
dec
mov
enter
jmp
push
clc
hlt
lcall
add
xchg
or
inc
mov
insl
xchg
mov
sub
out
adc
xor
loopne
adc
in
rcr
cmp
sbb
inc
cs
fsts
iret
mov
pusha
pop
clc
pop
cld
dec
jns
sub
fsubrl
and
xchg
dec
or
hlt
inc
add
divb
lcall
fsubrl
xlat
inc
jno
adc
mov
jb
or
mov
movsb
jecxz
push
mov
cmp
or
in
rorl
adcl
aad
xor
int
sbb
xchg
push
sahf
fidivrs
inc
dec
jl
jecxz
mov
xchg
and
outsb
jne
aam
push
xchg
adc
in
lds
mov
and
pop
push
jge
mov
pushf
mov
cmp
das
cwtl
daa
jb
mov
idivl
rcll
ss
and
pop
and
mov
jbe
or
xor
jne
dec
pop
movsl
push
dec
or
fucomi
outsl
jg
jg
lea
xchg
cmp
and
jne
push
xchg
xchg
xchg
mov
push
inc
mov
daa
xor
cmp
pop
pop
inc
jmp
mov
xorl
push
mov
imul
and
push
ret
pop
xor
pusha
call
jne
adc
jne
add
aad
or
or
xchg
out
rorl
adc
je
pop
and
loope
or
and
push
lods
sbb
xchg
in
adc
out
or
cli
sub
or
movsb
mov
pslld
mov
and
imul
fnstsw
push
mov
popl
loope
rolb
or
or
jg
pusha
das
adc
js
and
in
mov
push
jb
xor
repz
int3
decb
inc
or
sub
outsl
mov
inc
cmpsl
push
rcll
sub
or
add
mov
cmp
js
imul
add
ret
and
arpl
pushf
pusha
or
stos
mov
sbb
mov
add
shl
pop
push
sti
loope
lock
mov
mov
pop
fwait
sbb
jmp
push
decb
cs
sub
adc
sub
mov
and
popa
or
dec
insb
enter
sub
js
je
xchg
push
pop
enter
push
int
aad
mov
mov
mov
rol
cmpb
dec
push
hlt
mov
xchg
mov
jge
or
fldenv
cmp
adc
insb
jbe
mov
mov
mov
sbb
clc
clc
mulb
pop
inc
jne
pop
pop
mov
or
popf
push
into
sub
lods
int
inc
adc
adc
and
cmp
xor
add
and
je
cmp
dec
xor
rol
pop
stos
xor
out
sti
shll
movb
adc
nop
stc
dec
mov
int3
adc
mov
loop
and
or
jg
adc
dec
add
data16
pop
cmp
addr16
push
mov
out
add
sub
inc
aad
push
pop
and
rcll
aaa
add
fmuls
fld
js
jne
adc
add
mov
sbb
mov
add
jmp
popf
xor
or
movsb
lcall
jae
aam
push
inc
test
popa
daa
mov
test
pop
or
cmc
push
or
sub
xchg
shlb
xchg
jne
repz
cltd
push
xchg
fwait
lds
stc
inc
dec
xor
es
push
enter
es
adcl
dec
push
fs
dec
xchg
xchg
hlt
lds
jo
test
xor
insl
mov
xor
outsl
dec
xchg
lods
pop
insl
mov
inc
cli
mov
push
fs
insl
push
test
imul
xchg
push
enter
pop
xor
shlb
das
gs
das
adc
in
scas
push
push
and
fwait
add
sbb
in
fsubs
cmp
jne
jp
jl
dec
retw
inc
mov
pusha
xor
pop
sub
mov
bound
pop
test
call
dec
je
adc
out
add
nop
ret
adc
clc
bound
push
and
out
pop
mov
insl
or
or
and
js
inc
loop
add
add
sbb
inc
in
adc
fmull
or
insb
pop
xor
fcoml
dec
lock
test
or
pusha
pusha
sub
sub
mov
jae
orb
add
pop
adc
dec
xchg
rclb
cmp
int3
decl
inc
addl
mov
mov
mov
pop
mov
dec
mov
cmp
mov
mov
sbb
mov
mov
cld
inc
sbb
sbb
hlt
lock
sbb
sbb
call
sbb
sbb
aam
pop
sbb
sbb
shlb
sbb
sbb
mov
lods
test
sbb
sbb
sbb
xchg
nop
mov
test
sbb
je
insb
push
add
sbb
sbb
inc
sbb
sbb
cmp
xor
sbb
sbb
sub
and
sbb
sbb
sbb
adc
xchg
sbb
sbb
enter
mov
mov
or
shr
rep
pop
and
push
idiv
add
movsb
pop
pop
je
mov
decl
jns
popa
imul
xor
xor
dec
xor
inc
outsb
je
dec
imul
arpl
inc
mov
repnz
xor
xor
xor
and
xor
inc
adc
test
enter
in
int
add
into
int3
in
push
push
inc
push
dec
inc
add
push
push
dec
dec
add
repnz
cmp
imul
pop
push
dec
dec
push
inc
cs
call
inc
add
loope
cli
shr
mov
mov
loop
int3
shl
mov
fcom
jmp
fcmove
lods
sarb
iret
ret
add
es
sub
mov
mov
push
mov
aad
int3
stc
in
repnz
leave
mov
stos
shll
inc
dec
aam
rcl
lret
mov
not
loop
loop
std
mov
mov
into
repz
scas
jns
inc
insb
popa
jae
add
stos
ret
inc
push
push
add
xchg
fwait
gs
sbb
push
add
add
int
jbe
call
add
push
add
gs
pusha
add
pop
insl
mov
lcall
push
pop
in
jnp
loope
dec
aas
add
sbb
adc
jge
pop
mov
xchg
pop
cs
fisttpl
enter
mov
mov
lods
cmpsb
and
in
mov
xor
mov
cmp
ja
aaa
shll
out
out
inc
inc
aas
cmp
pop
jmp
in
or
inc
add
add
dec
push
mov
lcall
inc
shrl
xchg
pop
int3
sub
dec
in
data16
in
in
hlt
push
das
lock
jae
scas
pop
out
add
fmull
add
out
mov
xor
jae
inc
add
inc
add
data16
cmp
notb
repz
pop
jmp
in
mov
xor
int
dec
aaa
dec
add
pop
add
lret
jecxz
cld
pusha
xchg
pop
cmc
pop
pop
or
in
mov
out
ficoml
pusha
sub
or
insl
popa
add
pop
add
pop
jnp
jmp
into
add
out
in
filds
stc
fs
outsb
mov
in
ljmp
add
push
fldt
aaa
arpl
aas
out
arpl
push
lahf
addr16
fsubrl
repnz
insb
add
cli
push
xchg
mov
outsb
add
sti
imul
hlt
lret
fwait
jnp
aas
jno
cld
insb
push
lsl
jb
outsl
in
insl
das
jp
pop
jae
insb
arpl
jb
mov
outsb
je
sbbb
test
mov
xchg
frstpm(287
jb
cmp
mov
lea
jbe
mov
incb
push
dec
jmp
sbb
lret
jmp
and
add
loop
or
in
or
out
adc
or
jb
inc
in
sbb
dec
and
mov
pop
sub
out
xor
bound
cmp
pop
cmpsl
fisttpl
sub
ret
xor
aas
xor
mov
or
mov
cmp
arpl
pop
adc
fildl
adc
pop
outsb
call
add
dec
jecxz
and
and
dec
pop
dec
pop
outsb
mov
in
sub
or
inc
imul
in
fists
and
add
mov
xor
lret
in
pop
cmp
inc
xor
xor
scas
add
inc
shlb
loopne
cmp
and
dec
or
dec
pop
mov
in
imulb
push
loope
dec
int
dec
roll
das
push
filds
xor
xor
lret
outsl
outsl
adc
loope
dec
mov
aaa
pop
xor
cmp
pop
xchg
lret
pop
mov
add
in
ds
inc
pusha
inc
bound
arpl
xchg
dec
addr16
dec
push
pop
cs
outsl
push
outsb
out
insl
pop
je
add
pop
cs
cs
jnp
bound
imul
mov
add
in
add
in
add
mov
outsb
mov
push
add
int3
divl
pop
dec
imul
pop
push
push
push
jno
add
pop
jae
jb
das
pop
cs
ja
rcll
cli
add
and
sub
dec
dec
movlps
inc
mov
and
cmp
inc
add
repnz
pop
push
push
push
or
and
inc
inc
aaa
mov
sub
sub
add
es
lock
xor
or
or
pop
repnz
int
and
xorb
insb
insb
push
push
sbbb
jmp
rorb
dec
dec
dec
dec
dec
dec
add
fbstp
aas
dec
xor
xor
gs
js
pop
pop
add
arpl
in
jle
add
add
pop
pop
pop
pop
dec
add
ds
nop
add
adc
adc
pop
lcall
test
test
in
decl
aam
rol
rol
scas
lods
lods
lods
mov
push
push
mov
adc
fwait
adc
mov
adc
and
movsb
adc
dec
jg
into
ret
lret
mov
scas
scas
stos
stos
test
loope
es
addl
adc
daa
pop
adc
scas
int
dec
rcl
rcl
sarb
sahf
popf
pushf
fwait
stos
mov
cmpsl
or
cmp
jp
xchg
and
lcall
pop
dec
add
fcmovu
mov
mov
push
jg
fwait
stos
mov
and
adc
andl
js
pusha
nop
or
add
pop
popa
dec
aaa
int
int
fdivr
add
lcall
lods
adc
and
ret
adc
add
add
cmp
pop
jb
add
and
mov
adc
insl
mov
js
mov
add
or
insb
outsb
insb
or
adc
bound
or
push
add
loope
adc
add
lret
xchg
das
cwtl
mov
sbb
sub
or
xchg
adc
arpl
push
xorb
add
pushl
push
aas
aas
add
fucom
loop
jecxz
mov
add
scas
add
and
fdivr
lcall
add
pop
pop
aaa
int
xchg
push
push
add
loopne
mov
clc
loop
add
add
adc
adc
ficoml
adc
xchg
in
je
add
decl
push
add
in
das
aaa
cld
clc
cli
stc
jecxz
fists
mov
lds
lock
mov
pop
adc
sub
adc
je
adc
bnd
fs
or
sar
pop
push
inc
push
push
inc
add
in
cld
sti
daa
out
decl
adc
add
daa
sbb
adc
or
lret
out
data16
adc
push
pop
adc
adc
add
out
clc
pop
repz
add
leave
adc
sbb
cmp
pop
inc
or
insl
jae
outsl
pop
andl
adc
dec
push
ljmp
aad
int
dec
pop
imul
or
insl
insl
jbe
and
stc
inc
dec
add
cmc
jmp
ljmp
xlat
roll
mov
pop
adc
or
lret
movsl
pop
insl
insl
outsl
addr16
cmp
mov
loop
in
in
repz
notb
test
jns
xchg
inc
adc
sub
inc
popa
imul
insl
insl
add
sbb
add
add
push
adc
in
lock
in
ljmp
in
in
loopne
fcmovnu
ror
movb
pop
dec
popa
adc
fldenv
mov
add
push
daa
add
nop
mov
or
push
pop
push
push
push
add
icebp
repnz
sub
ret
sub
cmc
fst
iret
ret
add
sbb
sbb
pop
sub
jns
add
add
cmp
mov
in
lock
out
adc
lock
out
in
loopne
rol
aam
and
adc
test
js
pop
insl
aas
sub
inc
add
adc
in
out
mov
fstp
fcmovu
enter
aaa
rcl
lret
hlt
cmp
and
adc
inc
push
popa
pop
ss
js
ja
jl
pop
and
add
and
in
or
pop
cmp
add
cmp
sub
adc
inc
push
adc
mov
imul
addb
mov
lahf
bound
lock
inc
inc
inc
inc
cmp
adc
mov
movq
mov
rcrb
mov
mov
add
fiadds
add
repz
gs
bound
sti
repnz
or
sub
add
jbe
mov
xchg
xchg
add
mov
add
add
add
sbb
cld
xacquire
push
push
jbe
adc
jb
mov
nop
nop
xchg
add
xchg
mov
cmpsl
nop
popl
add
and
adc
push
jne
loop
dec
add
test
sbb
pop
add
add
xchg
outsl
xchg
pop
xor
xor
jmp
inc
ss
inc
inc
xor
and
rorl
add
add
add
add
fidivs
or
cmpsb
xor
xor
push
out
imul
sub
add
xchg
mov
push
add
into
adc
add
mov
out
add
push
popa
or
adc
daa
jnp
sbb
add
pop
fs
testb
add
mov
movsl
sbb
addr16
lods
and
cmp
inc
add
add
adc
mov
xor
pop
mov
loopne
or
xor
pop
lock
add
sbb
lods
adc
adc
roll
pushf
sbb
ja
sub
mov
dec
ja
push
adc
sub
jg
xor
adc
and
mov
push
xchg
adc
rol
jb
add
xchg
push
idiv
fcmovnbe
test
jne
lcall
psubq
add
fucom
jb
add
xlat
pop
xchg
adc
sahf
push
jge
mov
jae
lcall
out
repnz
add
add
push
jne
jns
std
pop
shll
imul
dec
fiadds
cmp
and
shrl
arpl
imul
mov
xor
dec
sub
shll
rorl
pop
imul
test
stos
xor
inc
das
out
sub
arpl
pop
inc
into
inc
shll
cmp
into
jae
push
scas
pop
lcall
mov
aaa
jnp
xor
inc
pop
out
iret
mov
mov
push
push
out
aas
dec
pop
or
pop
mov
jnp
rsqrtps
adc
popa
cmovp
mov
insl
mov
scas
jmp
cmpsb
xchg
cmpsb
scas
jmp
aaa
popa
jg
dec
xlat
je
pop
arpl
lret
insl
rcl
mov
lret
rorl
mov
jecxz
out
ljmp
decl
addl
add
jo
pushl
xor
add
sub
cmp
sub
cmp
ss
jg
push
xor
dec
dec
dec
pop
pop
push
sub
and
cmp
sti
lret
pushl
jo
dec
dec
pusha
push
push
bound
and
sbb
jo
in
fcomi
dec
dec
adc
adc
adc
or
sbb
sub
pop
stc
jg
pusha
bound
jo
xor
sub
or
adc
sbb
dec
inc
arpl
jnp
ja
inc
xor
push
add
pop
pop
in
mov
pop
adc
adc
adc
sub
arpl
pop
pop
andb
sbb
pop
or
cmp
push
pop
inc
mov
mov
push
sbb
shll
sbb
sbb
inc
pop
push
inc
clc
inc
das
das
das
inc
add
fldz
jae
xor
xchg
inc
add
pop
cs
mov
data16
push
add
lcall
inc
jo
bound
push
insb
sti
test
fs
pop
push
pop
arpl
imul
inc
imul
pop
xor
pop
xor
insl
mov
insb
pop
cmp
insl
xor
inc
addr16
mov
divl
dec
pop
add
xor
lods
out
in
inc
fs
dec
push
push
add
inc
inc
arpl
sbb
jp
pop
bound
dec
scas
add
push
add
sarb
and
imul
cmp
fdivrl
arpl
sbb
pop
imul
pop
lea
das
lret
ficomps
xchg
out
fisubs
xor
movsl
pushf
sub
mov
cmp
pop
sub
xchg
fdivl
mov
fistps
push
mov
das
sub
movb
cmp
cmp
in
sbb
pop
movsl
cmp
aaa
sub
mov
outsl
sahf
out
mov
mov
fcoml
fwait
iret
inc
mov
inc
dec
rorb
pop
add
loope
add
and
fucomp
mov
pop
add
daa
sbb
mov
fldcw
add
add
sub
sbb
sbb
pop
or
push
push
dec
repz
sbb
pop
and
adc
xchg
mov
adc
adc
adc
xchg
fdivl
xchg
inc
adcl
int
mull
sub
push
adc
or
xor
sbb
mov
popf
addr16
sub
or
and
cmp
sub
pop
imul
daa
xor
push
add
mov
xlat
or
sub
push
dec
add
mov
lcall
pop
adc
adc
pop
pop
sub
sbb
or
adc
sbb
adc
pop
cmp
daa
jl
fidivs
fs
xor
push
and
daa
sbb
add
mov
call
add
xor
and
sbb
std
dec
hlt
ret
sbb
push
aaa
sub
or
xor
sub
and
jl
lods
pop
and
xor
push
iret
push
fisttps
inc
cmp
add
repz
xorb
fmuls
outsb
sub
xchg
ja
mov
xchg
lods
add
xchg
jle
ljmp
add
xchg
test
xchg
xchg
sahf
xchg
mov
xchg
xchg
fwait
add
cltd
add
xchg
mov
xchg
lahf
test
fisubrs
push
std
cmpsl
nop
popf
add
stos
nop
lcall
nop
mov
cmpsl
test
cli
scas
nop
xchg
add
add
idiv
mov
mov
xchg
add
aaa
mov
test
mov
xor
mov
sbb
mov
lea
outsl
pop
cmpb
jle
shll
insl
jo
fildl
add
jns
mov
lds
pop
xorl
fidivrs
jbe
enter
subb
dec
les
or
lea
mov
sarl
movswl
add
int3
andb
insb
pop
subb
lea
rorl
mov
aad
arpl
xchg
mov
jg
add
jg
subb
sub
cmpb
mov
lea
lea
out
in
fwait
aas
js
in
dec
jecxz
loop
insl
add
insl
mov
and
fisttps
mov
cmpsl
fimull
testb
cmp
cmc
pop
testl
xchg
fisttpl
xchg
cmp
cmp
hlt
add
pop
cmp
add
xchg
aas
xchg
xchg
insl
repz
xchg
out
add
xchg
in
pop
fucomi
xchg
in
pop
xchg
add
add
pop
inc
xchg
adc
jnp
xchg
ljmp
pop
xchg
dec
dec
xchg
btc
out
dec
xchg
dec
xchg
in
dec
pop
dec
sti
dec
xchg
pop
loop
outsl
adc
in
xchg
jecxz
xchg
pop
lods
in
jb
xchg
dec
xchg
loop
xchg
loopne
mov
fcmovnu
push
xchg
or
pop
xchg
faddl
push
xchg
fisttps
xchg
fildl
push
nop
fnstcw
pop
xchg
fiadds
pop
xchg
fldl
pop
xchg
pop
xchg
fiaddl
pop
xchg
adc
xlat
ljmp
jg
pop
nop
nop
aad
pop
rorl
xlat
add
rolb
pop
cs
lret
bound
addr16
bound
xchg
add
lret
xchg
pop
imul
mov
adc
leave
mov
add
lds
incb
jno
lret
xchg
outsb
mov
add
jbe
movb
xchg
les
jo
add
mov
xchg
sbb
dec
xchg
rorl
adcb
jns
mov
add
mov
movzwl
idivb
mov
mov
daa
mov
orl
xor
lods
xchg
sbb
mov
xchg
xchg
scas
push
push
sub
push
fbld
push
pop
inc
leave
pop
dec
dec
dec
dec
dec
inc
inc
cmp
cmp
aas
cmp
xor
xor
sub
sub
and
and
sbb
call
or
add
aad
rcl
into
int3
lret
leave
mov
mov
lcall
pushl
lods
cmpsl
cmpsl
movsl
movsb
jg
lcall
xchg
jg
decl
addl
jb
xchg
imul
imul
insb
push
outsl
jno
jae
jbe
xchg
jns
jnp
addb
mov
xchg
cltd
pushf
popf
sahf
lahf
mov
hlt
ljmp
mov
mov
mov
enter
sar
or
call
add
movups
push
sbb
push
and
and
decl
xor
inc
inc
inc
inc
push
dec
dec
dec
pop
pop
add
das
ljmp
bound
pop
pop
arpl
push
push
adc
and
mov
pop
cmova
dec
adc
pop
xor
mov
cmp
inc
aas
rolb
aaa
mov
in
push
sbbl
pop
push
aas
add
aas
addr16
fldcw
adcb
xchg
test
xor
das
iret
daa
scas
mov
repnz
das
mov
fists
inc
iret
add
dec
das
push
loopne
out
cmp
push
filds
xor
outsl
sti
add
outsl
xchg
mov
fists
add
cmp
pop
xor
adc
aaa
push
adc
mov
shll
pop
js
and
sub
inc
cmp
fisubrs
das
push
arpl
inc
mov
dec
push
mov
pop
mov
out
testl
lock
sti
add
dec
inc
cmp
daa
cmp
and
mov
sti
sub
sbb
xchg
sub
mov
arpl
or
dec
cmp
inc
aas
dec
xor
dec
in
ss
add
sbb
or
inc
pop
adc
aas
mov
das
or
or
adc
pop
inc
sbb
inc
addr16
ret
add
inc
adc
popa
or
xor
shll
inc
sbb
pop
push
ret
jnp
push
aas
inc
sbb
mov
prefetchwt1
adc
mov
pop
movhps
sbb
add
sub
aas
sbb
sbb
adc
fcomps
xlat
xchg
dec
arpl
push
sub
ds
sbb
xchg
inc
xor
sub
sbb
pop
inc
mov
imul
sbb
sbb
out
inc
loopne
dec
jbe
xor
scas
je
leave
pop
dec
ss
pop
adc
mov
sti
movsl
rorl
pop
xor
aaa
push
add
or
xor
push
imul
sbb
imul
sbb
xor
bound
sti
aaa
dec
and
push
scas
fstpt
adc
sub
push
aaa
inc
xor
inc
inc
nop
fistps
js
dec
sbb
push
sti
mov
leave
leave
add
add
add
or
add
insl
enter
and
insl
mov
lods
mov
xor
cmp
mov
xchg
adcl
outsb
and
push
cvtps2pi
xor
fldt
jge
push
in
xchg
jmp
add
sub
shll
push
or
push
mov
add
insb
mov
js
mov
add
add
xchg
outsb
out
xchg
stos
sub
add
add
ja
add
add
add
sbb
mov
xor
xchg
mov
add
xchg
pop
sub
xor
arpl
je
mov
insl
cmp
lret
adcl
test
dec
jne
sbb
leave
pop
fs
nop
testb
call
jmp
lods
fwait
xor
imul
inc
lcall
addr16
mov
shrb
add
dec
outsl
pusha
push
push
add
imul
stos
daa
xchg
rcl
push
mov
in
add
cmp
or
ret
pandn
insb
addr16
add
push
adc
push
lock
or
jno
cmp
icebp
xchg
incl
add
add
outsb
and
fwait
sub
and
mov
adc
xchg
pusha
mov
leave
xchg
cld
pop
decb
lcall
jmp
dec
rcll
aaa
ja
sti
mov
add
lcall
xchg
sbb
clc
add
lock
xchg
xchg
add
jg
rolb
adc
das
pop
adc
movsb
jmp
add
inc
std
popa
add
adc
push
and
and
pop
rolb
test
xor
out
jg
outsl
jae
dec
popa
outsb
fs
gs
gs
je
inc
imul
in
jae
jb
outsb
or
jns
push
jb
je
push
outsl
dec
repz
arpl
jae
gs
outsl
jb
popa
inc
or
mov
lret
divb
inc
jbe
je
imul
jne
and
in
mov
cmp
sbb
jle
imulb
outsb
popa
dec
adc
je
push
std
gs
adc
jb
negb
fcoml
jnp
and
mov
in
dec
jo
jb
inc
insb
arpl
mov
push
je
lea
outsb
outsw
inc
pop
jnp
bound
push
aaa
cmovge
jne
add
test
adc
popa
insl
jmp
mulb
dec
popa
jae
jb
cwtl
inc
test
fsub
ds
imul
mov
inc
cmovge
xchg
push
push
and
int
jns
movsb
mov
call
ret
ss
sbb
xor
outsb
inc
imul
mov
fstpl
push
sbb
mov
mov
outsl
jne
insl
or
xchg
imul
fwait
js
or
inc
push
sbb
gs
in
outsl
fdivrs
jb
jae
adc
outsb
cmc
pop
xchg
mov
mov
pop
adc
outsb
fwait
mov
push
imul
xor
mov
dec
inc
imul
enter
lea
insb
int
inc
inc
sbb
mov
fcom
push
xor
add
xor
popa
loop
in
adc
cs
push
adc
cmp
push
inc
insl
lret
pop
rorb
or
stc
subb
outsl
outsb
addr16
inc
fcmovne
ficompl
movsb
outsl
mov
inc
insb
addr16
xchg
insl
lea
gs
inc
jne
jae
inc
pop
out
fsubs
mov
or
popa
addr16
call
outsb
xchg
xchg
shlb
mov
push
pop
add
ss
mov
pop
inc
outsl
inc
or
gs
xor
cs
fwait
insl
aaa
decl
mov
popa
inc
imul
insl
das
rorb
fmul
fisubrs
dec
mov
push
into
sbb
sbb
lcall
jae
popf
ret
push
mov
cmp
mov
push
jne
cmc
inc
push
mov
xchg
jo
dec
or
insb
dec
loope
xchg
inc
mov
lods
imul
inc
pop
ja
imull
add
inc
imul
cmp
pop
inc
sbb
or
adc
lcall
std
outsl
jns
lods
shrb
lods
push
jb
popa
loopne
and
or
addr16
outsl
add
fisubl
mov
cmp
sub
jo
je
inc
jmp
inc
add
aaa
mov
decl
add
or
sahf
xor
and
adc
fxch
adc
add
add
dec
push
xor
mov
sbbl
jne
add
add
mov
add
cs
pop
ds
ret
nop
jmp
and
xchg
outsb
mov
loope
jb
jnp
lret
or
or
pop
insb
mov
sub
inc
cs
repnz
dec
sarl
shlb
outsb
mov
jae
add
or
pop
cmp
push
cmp
mov
mov
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
add
