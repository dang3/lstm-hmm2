mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
add
pop
push
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
.byte
popa
and
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
das
and
pop
ror
xchg
int
dec
mov
mov
mov
imul
sub
xlat
pop
push
push
cmp
cmpsl
rclb
adc
mov
daa
lcall
shll
jae
lret
pop
in
in
inc
daa
adc
hlt
shrl
ljmp
sub
pop
repnz
ds
rclb
or
add
lock
jmp
pushf
or
dec
js
push
pusha
xor
push
repnz
pop
xchg
out
lcall
jae
iret
cmp
test
ret
cmp
mov
jl
movsl
xlat
cmp
adcb
icebp
out
cmp
and
sbb
ret
push
mov
pop
inc
add
ja
das
jp
lahf
pop
popf
call
unpckhps
mov
pop
test
inc
add
mov
push
lds
sub
pop
dec
xchg
mov
adcl
ljmp
xchg
xchg
in
cmc
in
gs
dec
push
clc
inc
jb
add
dec
ret
mov
jg
push
out
stos
or
stos
insb
dec
cmp
mov
insl
add
test
or
inc
lock
outsl
addr16
jnp
cmpsl
adc
xor
gs
fsubrl
loop
xor
out
jo
movsl
out
mov
cmp
in
sbb
lock
shlb
mov
sbb
loop
pop
sbb
scas
mov
push
aam
in
jecxz
loope
aas
jb
shll
pop
push
in
dec
push
adc
dec
adc
mov
call
mov
xchg
loopne
pop
dec
add
int3
jmp
jns
scas
je
cli
arpl
jg
repnz
adc
call
adc
adc
mov
jge
aam
dec
mov
stos
pop
or
or
mov
nop
rcll
mov
xadd
in
rcrl
mov
or
jmp
cli
aam
push
fmull
insl
clc
in
dec
loope
cmp
pop
xor
mov
inc
das
inc
in
aam
es
inc
in
pop
inc
pop
or
ja
pop
inc
cmp
mov
push
rcr
addr16
xchg
push
pop
mov
das
add
daa
push
fstpt
in
cmpsb
stos
sub
xchg
inc
out
loopne
cmp
sbb
ja
mov
and
scas
imull
ss
int3
push
adc
push
mov
sub
xchg
aam
shll
dec
rcl
push
and
into
mov
push
mov
and
iret
push
nop
push
push
repz
dec
adc
push
movsb
test
inc
pop
repnz
pop
cmp
xchg
pusha
xor
sbb
ljmp
repnz
or
xchg
bnd
and
data16
test
cmp
xchg
mov
leave
xchg
bound
jnp
jnp
adc
pop
iret
cmp
bound
pop
lret
xchg
inc
out
add
xchg
shrl
jp
movsb
pop
out
ss
outsb
andl
jbe
jge
loop
cs
shrd
outsb
dec
add
test
pop
test
mov
mov
and
nop
cmpb
cmc
xor
adc
test
iret
mov
fdivrs
stos
lretw
repz
inc
clc
neg
lds
or
adc
or
icebp
lahf
jecxz
adc
cmpl
push
fucomp
xor
call
add
jbe
stos
sub
xorl
adc
mov
stc
lret
mov
and
mov
push
call
lods
dec
adc
pushf
movb
pusha
mov
out
out
pop
jp
stos
xor
enter
add
mov
mov
dec
pop
shll
ds
add
mov
shrl
movsb
fisubs
cwtl
sub
or
add
lods
cmp
and
fwait
shl
add
jnp
inc
loop
sbb
mov
cs
pop
sbb
push
jge
inc
sbb
pop
cmp
frstor
xchg
pop
adc
loopne
insl
mov
adc
movl
mov
jmp
add
mov
call
xor
jg
arpl
outsl
mov
fincstp
ds
add
push
sbb
jne
sub
and
shlb
mov
pop
mov
nop
pop
cmp
outsl
mov
xlat
rcrl
cs
ret
dec
push
mov
sub
jp
cmp
adc
out
insb
xlat
adc
pop
mov
lea
lea
pop
inc
out
mov
sub
adc
mov
adcb
aaa
and
xor
jg
pop
stos
sub
pushl
mov
sub
test
push
imul
dec
mov
xor
pop
mov
lret
push
pop
lock
adc
shlb
movntq
out
into
stos
xor
pop
mov
jmp
int
es
xor
dec
ret
jp
pop
inc
or
rep
or
test
insl
insl
adcb
xor
push
sub
dec
push
cmp
inc
cli
out
push
inc
lea
pop
outsl
rcrl
int3
mov
shl
jae
sbb
dec
dec
aas
mov
jnp
or
push
sti
push
filds
jmp
xor
xchg
ja
inc
add
int3
mov
lea
arpl
ss
aaa
fisttpll
pop
add
fiaddl
repnz
lret
xchg
mov
mov
hlt
inc
push
mov
cmp
fs
js
ret
inc
rcrb
dec
ds
lds
lods
aas
push
in
add
pop
pop
xchg
jb
insb
stc
in
add
and
ljmp
and
rcl
cmp
movsl
jns
cmp
jl
aad
and
sarb
push
aas
sub
out
stos
or
shrl
rclb
movsl
movsl
xchg
icebp
in
aaa
jo
lds
stos
aaa
scas
scas
add
push
insl
push
call
sbb
push
mov
jne
loopne
fistpll
sbb
test
jne
mov
jb
cmc
adc
dec
in
inc
and
mov
jl
stc
aas
adcl
aad
push
arpl
lea
scas
mov
add
jno
jb
into
mov
xchg
xchg
into
lret
js
pop
inc
inc
xorl
mov
test
das
or
xor
popa
mov
dec
inc
or
pop
in
test
xchg
icebp
xor
mov
jnp
repnz
filds
repnz
xor
dec
fisubrl
cmpsb
rcll
inc
out
cmp
inc
add
cmp
xor
add
dec
lcall
fld
adc
cmpsb
pop
cmc
fwait
pop
test
and
loop
stos
and
in
mov
dec
test
rol
add
lods
out
cs
cwtl
loop
inc
and
mov
mov
pop
js
ficoms
inc
cmp
lds
dec
nop
iret
cmpsl
enter
roll
mov
cmpsb
lods
push
shlb
mov
pop
xor
subb
lods
xchg
jecxz
mov
dec
lcall
nop
push
cmp
pop
adc
int
in
jle
xchg
shrb
mov
dec
jnp
pop
adc
cmp
pop
adc
fsts
push
std
jp
int3
insb
mov
mov
jbe
xchg
jne
lret
push
cld
movsb
jmp
sbb
gs
test
adc
mov
push
or
movsb
out
pop
or
mov
xchg
ret
inc
xlat
mov
outsl
or
push
cmp
adc
stos
or
mov
push
sbb
mov
lcall
cmp
repz
mov
sbbl
xor
test
jmp
jno
movsb
cltd
mov
repnz
add
or
repz
adc
out
push
cltd
into
addr16
sahf
xor
outsb
outsl
insb
mov
jo
or
in
push
divl
add
jmp
clc
je
out
or
xchg
aam
dec
cwtl
fsubrp
sbb
sti
aas
pop
imul
pop
or
iret
xchg
fsubrs
aaa
sbb
cs
jmp
inc
pushf
mov
cmp
xor
cmp
enter
scas
stos
in
dec
popf
aad
lret
outsl
cmp
sbb
hlt
mov
out
sbb
mov
sub
loopne
push
adc
adc
popa
in
sub
lods
mov
mov
push
xchg
mov
shlb
sub
and
xor
sbb
mov
imul
aad
data16
cs
jmp
mov
sub
push
popf
stc
xchg
inc
pop
inc
sub
es
lods
mov
arpl
cwtl
leave
ds
sub
pop
outsl
js
out
adc
or
pushf
in
adc
inc
lcall
push
or
lods
nop
je
daa
sahf
ljmp
push
jo
xor
cltd
nop
jbe
lcall
cmp
rcrb
pop
test
inc
pop
add
and
ud1
out
sbb
fucomip
cmp
dec
mov
lret
xchg
mov
jp
xbegin
lods
mov
test
aam
in
fdivr
outsb
mov
xlat
into
push
push
fistpl
sub
cwtl
imul
aaa
insb
in
stos
ret
out
sub
out
mov
adc
fmul
arpl
and
add
in
inc
xchg
xor
xchg
dec
pop
fistps
push
imul
add
jae
adc
push
mov
or
pusha
test
lods
lock
shll
cld
nop
inc
test
dec
adc
ret
jle
call
xor
jle
fcoml
cld
xchg
hlt
mov
stos
cmp
rcll
or
xchg
lcall
lret
inc
test
imul
ljmp
pop
es
mov
push
je
push
pushf
dec
pop
dec
imul
dec
outsb
divl
scas
test
in
mov
cld
or
adc
sbb
adc
xor
gs
cltd
iret
test
nop
mov
xchg
cltd
xor
mov
lods
js
gs
stos
stos
push
leave
or
jo
aam
lret
bound
daa
push
mov
or
sub
in
adc
sub
lods
addb
xchg
mov
shrl
dec
insb
inc
outsb
les
dec
lahf
or
aam
lds
ss
xlat
fsubl
repz
cmp
xchg
pop
and
movl
push
push
cmc
jb
add
inc
add
pop
mov
movsb
pop
cmp
xchg
pop
jg
pushf
mov
mov
lods
cli
sti
xor
daa
adc
mov
das
sub
pop
sub
xor
les
fwait
fs
adc
daa
aas
jg
leave
push
sub
xor
adc
iret
pop
pop
fstps
or
ds
inc
inc
gs
or
adc
popf
les
mov
add
in
roll
pop
xchg
push
push
or
sub
lcall
sbb
loope
aaa
pop
inc
push
sbb
outsb
imul
push
pop
sti
push
lahf
cs
sub
jmp
adc
jbe
lods
sub
mov
mov
shr
mov
cmp
jno
mov
fcmove
ds
push
mov
sbb
insb
mov
sub
xor
cmp
xor
jo
and
mov
adc
jns
mov
push
les
in
sti
add
jno
and
dec
dec
insb
or
mov
dec
notl
stos
sub
scas
pop
imul
and
pop
mov
jnp
nop
sbb
mov
push
sub
inc
loope
jo
xchg
out
repnz
adc
popf
cld
jle
nop
stc
sbb
push
stos
cli
lret
imul
mov
and
hlt
mov
rolb
mov
jae
sbb
mov
inc
inc
jns
jns
subl
aam
cmp
xchg
push
dec
mov
iret
mov
jg
add
mov
roll
push
mov
jbe
sarl
sbb
movsb
fbstp
xchg
jns
push
jmp
faddl
adc
xchg
xchg
cmp
gs
and
mov
pusha
mov
mov
sarb
inc
out
mov
inc
xchg
in
movups
jno
arpl
les
xchg
push
dec
mov
movsb
mov
ret
inc
jle
inc
hlt
movsb
xchg
pop
in
lret
xor
imul
idivb
jle
les
mov
fildl
add
mov
sti
aaa
daa
dec
pop
add
push
or
fsubr
or
shll
and
mov
stos
inc
mov
inc
fwait
sbb
jb
cmc
outsl
out
lods
jns
dec
sub
push
imul
icebp
push
ficomps
and
sub
mov
fidivrs
xlat
dec
jnp
je
sub
adc
scas
pop
mov
movsl
mov
pop
mov
adc
jbe
push
jmp
cmp
jnp
les
push
xchg
xor
sbb
add
scas
stos
push
inc
popa
bound
sub
cmpsb
aam
xor
lods
das
ficompl
cmp
int
cwtl
pop
cmc
sti
je
xchg
sub
cs
jp
push
pop
rcl
cmpsb
inc
popa
test
mov
dec
or
cmp
xor
mov
xchg
enter
xchg
movsb
push
push
adc
clc
mov
ss
push
and
pop
add
movsb
pop
mov
jne
inc
dec
in
push
popa
lods
je
jbe
fwait
xchg
push
mov
mov
sbb
and
pop
mov
ret
pop
je
dec
pop
and
lahf
add
fisttpll
and
pop
gs
mov
cmp
aaa
or
pop
lahf
ret
dec
mov
jle
sub
or
invd
cmp
stos
or
rol
popf
stc
mov
push
call
aam
mov
in
sahf
loope
sbb
sub
dec
clc
pop
dec
imul
mov
xchg
mov
iret
xchg
push
or
ja
jns
mov
or
outsb
adc
cmp
test
sahf
cltd
mov
sub
ja
adc
inc
out
into
push
mov
jae
xchg
out
movsb
cmpsl
mov
insl
das
loopne
push
sbb
xor
insl
aam
adc
adc
lock
fsub
mov
ss
inc
xor
jp
xlat
xor
shl
xchg
mov
inc
and
lea
stos
mov
mov
add
sub
jp
pmaxsw
enter
and
ret
std
les
or
daa
or
das
pop
dec
mov
xchg
fidivrl
xor
addl
jae
je
or
repz
sbb
jge
and
addb
dec
sub
inc
rcr
xchg
lea
aam
lahf
int3
arpl
imul
fisubrs
arpl
push
stc
jmp
dec
jbe
sbb
out
test
and
adc
hlt
enter
cmp
cmp
hlt
or
sub
ja
and
mov
mov
faddl
fmull
or
mov
mov
pop
scas
fcoms
mov
pop
iret
adc
mov
inc
mov
adc
int
mov
icebp
xchg
jno
jb
outsl
dec
outsl
dec
leave
cmpl
push
jmp
movsl
enter
roll
adc
ret
mov
fstpt
sahf
jp
mov
das
dec
xor
xor
adc
mov
xchg
cmp
push
fwait
mov
into
test
and
or
movsl
and
inc
enter
mov
inc
jb
xor
mov
out
pop
test
jle
push
repz
stos
mov
cmp
loopne
into
in
gs
inc
push
or
mov
adc
pushf
inc
sub
out
mov
imull
repnz
inc
sahf
cmp
rolb
aad
jg
sbb
in
in
sub
mov
ret
push
dec
out
hlt
inc
sub
ffree
jecxz
ret
push
xchg
sub
pop
or
sub
outsl
inc
pop
inc
mov
jmp
loopne
insb
sbb
icebp
or
sbb
mov
hlt
cwtl
jae
lods
fldenv
jb
inc
divb
int3
dec
outsb
jle
test
and
cs
ficomps
cli
push
add
xor
in
adc
fwait
xor
sarl
cmpsb
test
and
fnstenv
filds
insl
mov
inc
lds
xor
pushf
gs
out
lret
sbb
outsl
call
xchg
push
and
xchg
pusha
in
push
out
pop
sbb
ja
lret
andb
jae
push
psllq
enter
cmp
pop
push
out
mov
jecxz
jmp
fdivl
std
test
and
leave
xchg
pop
or
test
aam
mov
push
cs
jb
cmpsb
dec
movsl
cmp
jg
xchg
out
add
jbe
mov
dec
dec
divb
pop
pop
add
lds
mov
sarb
sbb
mov
mov
pop
sub
sti
push
daa
lods
call
jbe
push
pop
sub
or
pop
dec
xchg
repnz
mov
jb
cmp
pushf
cltd
cwtl
xchg
mov
insl
xchg
les
cmp
or
dec
mov
pop
pop
in
cmpsl
pop
pop
inc
test
fs
clc
aam
pushf
lahf
xlat
mov
cmp
aad
pop
addr16
ss
xchg
sub
xchg
andb
mov
xchg
repz
cwtl
push
call
jo
or
sub
or
push
xchg
in
mov
pop
es
inc
data16
stos
sub
pop
gs
inc
pop
std
adc
ds
mov
sbb
int
xor
cmc
and
dec
sub
hlt
xor
ljmp
in
imul
cs
inc
mov
inc
lahf
fdivs
adc
xor
add
test
iret
mov
sub
mov
rcll
sbb
ds
int
inc
xchg
and
arpl
mov
dec
pop
aam
repz
dec
repnz
or
jmp
insb
mov
add
fsubp
jae
pop
clc
cmpsb
subl
out
lahf
pop
out
in
inc
out
xor
xchg
icebp
fisttpl
jge
outsb
jmp
fsubr
idiv
repnz
in
mov
cmpsb
jne
mov
dec
pop
lds
sub
leave
jns
test
ja
adc
fldcw
call
loopne
xchg
adc
leave
in
arpl
dec
dec
sbb
push
sbb
mov
hlt
mov
cmpl
jl
jecxz
cmp
dec
fcmovbe
arpl
sbb
jno
xor
mov
adc
dec
mov
cld
lret
pop
loope
mov
add
out
stc
mov
sahf
movsb
in
pop
popa
pop
mov
cltd
dec
inc
les
sbb
test
test
dec
cmpb
pop
jnp
mov
in
scas
xor
sub
in
jno
loope
xor
xor
pop
mov
pop
shll
or
lea
ficompl
inc
popf
movsb
sbb
mov
arpl
mov
dec
orb
jbe
adc
mov
int
dec
xchg
and
dec
in
sahf
sbb
pop
push
and
push
outsl
mov
cmpb
pop
test
int3
sahf
inc
in
nop
mov
cmp
fs
push
mov
out
out
int3
lcall
stos
mov
sub
sarb
dec
or
pop
andb
in
inc
ljmp
call
dec
push
mov
mov
int3
cmpsb
push
mov
push
jp
mov
mov
lret
mov
cmp
dec
mov
push
fnstsw
or
mov
in
cmpsb
inc
jbe
sbb
sub
xor
or
repz
sub
pop
jge
mov
xor
sahf
xlat
insb
pop
aad
js
shll
mov
fwait
movsb
vandnpd
mov
mov
jecxz
xor
push
js
xchg
ficompl
sub
cwtl
mov
lret
scas
push
xchg
test
push
add
icebp
das
xor
mov
add
xor
lock
jo
push
fwait
sub
and
lods
mov
mov
sbb
push
out
and
lcall
outsb
movsl
jg
adc
mov
test
dec
mov
inc
ja
mov
mov
adc
mov
test
rol
cli
or
movsb
mov
mov
out
daa
cmp
pushf
mov
jmp
add
scas
or
dec
bound
orb
xchg
sub
mov
js
std
out
mov
dec
jae
bound
into
adc
js
xchg
out
xchg
stos
adc
add
push
adc
adc
adc
or
nop
cmpsl
inc
xchg
xor
scas
ljmp
add
cmp
repnz
mov
clc
not
pop
add
loopne
fdivrs
push
fmull
inc
mov
cs
inc
jbe
imul
sbb
mov
add
and
mov
jmp
add
xor
push
out
sub
popf
dec
dec
pushw
push
jb
mov
mov
sbb
mov
or
xchg
shlb
fcmovnbe
sbb
xchg
lret
pop
sub
int
cmp
pop
inc
inc
ljmp
push
xor
cmp
xor
dec
cltd
popa
push
out
ret
mov
add
mov
pop
jo
nop
jecxz
je
push
fmul
lret
fwait
outsl
repnz
cli
mov
scas
jbe
mov
out
cmpsb
stc
ret
fcompl
mov
cmp
into
mov
jbe
inc
filds
sbb
inc
bound
fwait
es
fnsave
jle
dec
add
mov
out
xor
test
cld
lods
mov
sbbb
xchg
cmpsb
in
mov
xor
cmp
jne
daa
push
in
fidivs
dec
scas
and
pop
lahf
inc
repnz
mov
mov
inc
mov
in
clc
movsl
push
and
xor
mov
mov
mov
add
cmp
aas
int
mov
divb
fstps
jnp
in
inc
lock
adc
inc
mov
cltd
mov
or
sbb
rcll
xor
inc
adc
mov
in
xchg
mov
cltd
jns
push
test
fldt
mov
pushf
jmp
xchg
and
test
push
pop
cmp
mov
insb
or
xchg
pop
push
add
mov
call
xor
jge
adc
cmpsb
fstpt
out
push
inc
or
lret
push
adc
std
mov
pop
pop
sbb
mov
mov
jg
ja
mov
xchg
out
jg
jecxz
ja
jnp
sarl
xor
repnz
sbb
inc
lods
scas
cmp
mov
inc
loope
add
fiadds
xor
arpl
lret
mov
cmp
rcr
fldcw
ja
adc
jns
dec
xlat
jb
cli
push
scas
insb
sub
jge
movb
mov
inc
add
adc
insl
jb
out
stos
sub
bound
fsubrp
jno
sahf
mov
push
subl
data16
js
xchg
scas
leave
pop
ret
xor
pushf
sahf
cld
xchg
iret
mov
fists
jg
dec
pop
std
push
shll
data16
xlat
ljmp
or
inc
jle
addr16
push
movsb
imul
jp
and
pop
movsb
sarl
jmp
mov
xor
bound
cmpsl
mov
in
mov
add
and
out
hlt
xchg
mov
inc
lds
cli
jo
push
or
push
fbld
lds
pop
inc
cld
pop
mov
xchg
mov
jae
jne
stos
in
mov
push
lods
out
stos
xor
dec
pop
sti
pop
or
fidivl
inc
xchg
pop
enter
mov
pop
bound
subb
jnp
stc
mov
fst
jl
inc
or
xor
jge
push
rcrb
jg
xor
lock
xchg
ja
lahf
in
sbb
arpl
bound
inc
pcmpeqd
mov
clc
mov
rolb
daa
fxch
icebp
add
loopne
hlt
mov
cld
enter
push
lahf
ds
push
push
jle
repz
mov
outsb
shrl
mov
fimuls
mov
or
push
mov
sti
inc
jg
adc
sub
add
les
out
mov
mov
mov
icebp
ljmp
loopne
outsb
or
xor
fs
mov
mov
sbb
icebp
dec
mov
pusha
mov
cli
mov
rcr
cwtl
aam
mov
lahf
outsl
xor
std
std
or
jne
out
mov
popa
sub
insb
mov
std
aaa
aad
jecxz
fcomps
in
pop
jb
inc
and
cmp
test
cmc
aas
data16
hlt
mov
test
mov
subb
add
movsb
movb
ror
ret
shlb
scas
jge
in
push
fcomi
idiv
mov
cwtl
xor
jg
jo
addr16
or
xchg
sti
pop
dec
lret
jge
mov
add
push
mov
test
leave
cmp
mov
pop
test
int
push
add
xor
addb
xchg
mov
ret
add
icebp
cmc
mov
and
push
push
push
cmc
xor
mov
pop
imul
sbb
lods
mov
dec
mov
les
xchg
loopne
rol
jl
aad
add
and
cld
je
loop
inc
jmp
movsb
notb
outsl
negb
cmp
jno
lahf
xlat
fsubs
dec
in
xor
daa
or
mov
js
ret
push
pop
inc
cmpsl
cld
jg
cld
inc
std
popl
repnz
hlt
sbb
cli
adc
ljmp
in
loope
sbbb
adc
pop
adc
mov
insl
sti
sub
add
aaa
and
jg
andb
mov
out
aad
fldl
xlat
scas
cld
int
dec
nop
fwait
xchg
fldenv
sub
in
lods
sbb
stc
les
pcmpeqw
aad
or
pop
data16
stos
xor
and
int
cli
bound
push
fisubs
sahf
sub
push
aas
push
xchg
push
push
cmp
filds
lahf
push
movsl
lods
sub
sbb
leave
gs
scas
es
inc
test
clc
jmp
xlat
mov
sub
fldl
pop
sahf
loop
sbb
xor
mov
hlt
leave
movsl
js
xchg
jecxz
icebp
adc
jbe
jge
js
cld
sub
js
xchg
ljmp
mov
cmp
jnp
xor
pop
shr
and
xor
sar
stos
int
mov
pop
xchg
imull
js
xchg
lret
and
test
aaa
push
sbb
jb
or
cmp
adc
pop
and
jno
cs
or
push
adc
or
hlt
imul
cmpsl
mov
jne
int3
mov
push
mov
mov
clc
push
lahf
mov
aaa
test
adc
loope
lret
jo
in
mov
out
pusha
pop
mov
add
mov
imul
and
mov
mov
jno
inc
mov
nop
sbb
jns
and
xor
and
jle
std
rcr
adc
addb
mov
ja
cmpsl
xchg
fwait
adc
push
jle
nop
inc
pushf
stos
loope
and
loope
mov
push
cmpb
cld
or
push
arpl
test
jge
incl
popf
adc
rolb
pop
stc
in
in
bound
adc
fistpl
push
sarb
cmp
jns
xchg
xchg
loop
fisttps
cmp
or
pop
mov
push
xchg
movsb
cmpsb
in
fcoml
stos
js
insb
inc
hlt
ja
popl
mov
or
xchg
mov
popf
imul
jo
sti
sub
xchg
mov
push
cs
lock
jl
jecxz
cmp
cld
dec
fnstenv
xlat
rcll
jbe
push
out
pop
xchg
mov
mov
sub
test
pusha
cmp
sub
xor
shll
sub
clc
fsubs
sbb
movsb
into
rorb
jle
arpl
jge
outsb
pop
pop
xor
lahf
int
xor
fiadds
jg
mov
sbb
divl
pop
cmp
mov
es
push
or
test
jns
dec
and
mov
loopne
sti
fs
cmp
adc
cmpsb
push
pop
scas
cmc
xlat
sti
add
stos
fimuls
jl
lret
pop
enter
push
int
mov
mov
fwait
inc
dec
push
sarb
jae
cmp
sbbb
mov
fdivl
cli
push
jo
inc
ds
scas
repnz
sbb
jp
add
sti
lods
mov
bound
lcall
push
and
out
mov
dec
aad
xchg
sbb
jo
and
cmpsl
jg
mov
mov
in
mov
test
dec
cmp
or
psadbw
push
into
out
xchg
inc
dec
add
stos
insb
xchg
dec
push
lds
mov
mov
inc
and
sti
pop
ljmp
xor
adc
in
pop
cli
stos
mov
push
aaa
adc
aaa
test
movsb
adc
push
or
mov
dec
gs
mov
fisttpl
fld
orb
loope
jb
inc
jecxz
sub
jae
popf
mov
hlt
add
adc
cmp
push
cmp
and
ja
cmp
mov
jg
jnp
loop
sbb
cmp
pop
fidivs
out
lods
into
mov
in
sub
mov
push
xor
sub
mov
jl
mov
rcl
loope
arpl
je
fisubl
mov
xor
mov
jecxz
scas
dec
mov
scas
or
cwtl
aaa
adc
popa
popa
ja
into
jo
mov
lret
add
cmpsl
je
lock
imul
inc
stc
mov
dec
fldenv
adc
add
imul
adc
aas
push
mov
or
or
shl
orl
lret
nop
pusha
sti
adc
shll
add
adc
xchg
mov
dec
push
xchg
or
cmp
mov
sub
mulps
mulb
nop
insl
loop
or
jae
je
jne
mov
subl
mov
xchg
sub
mov
inc
cs
loope
jle
sbb
and
lret
imul
adc
xchg
out
xchg
and
stos
dec
and
les
out
adc
clc
imul
cmc
lret
pushf
cmpsl
idivl
lcall
add
xchg
enter
cltd
pop
lgs
inc
adc
pop
in
adc
mov
cmp
int3
testb
lea
test
lods
cmpsb
lea
inc
daa
xchg
hlt
jb
pop
sbbb
fsubrs
jge
adc
jecxz
sub
outsl
loope
cmp
xchg
push
and
hlt
sahf
repz
push
xlat
pop
mulb
xchg
test
xchg
cmp
xor
aas
adc
gs
ds
aas
dec
movsb
call
addr16
int
adc
popa
int
push
int
sbbl
insb
xchg
lods
mov
xchg
into
ffree
mov
cmp
mov
sarb
ss
sarb
enter
and
sbb
insl
mov
sub
mov
lea
lret
in
out
inc
and
aam
xchg
mov
insl
nop
lret
or
stc
sub
xchg
sub
xor
pop
pop
mov
outsb
imul
addr16
or
inc
in
push
stos
jnp
lods
in
in
mov
fsubr
mov
outsb
fiaddl
and
dec
test
bound
jg
fdiv
bound
or
push
xor
adc
mov
adc
and
and
jge
push
xchg
push
mov
divb
add
sarb
mov
and
inc
lock
add
outsb
insl
xor
jmp
rorb
adc
jge
packsswb
xor
incb
push
lahf
cmp
push
dec
cs
mov
into
push
rclb
jmp
enter
mov
or
push
out
cmpsb
mov
sub
jne
pop
fsub
es
sbb
adc
mov
adc
and
sti
ret
jp
sub
xchg
mov
arpl
pop
int
mov
dec
into
sti
push
ljmp
jae
add
sbb
sub
popa
cmovne
jle
shld
xor
jnp
cmp
arpl
inc
mov
hlt
out
mov
jg
xor
test
jae
ljmp
ja
ljmp
sbb
int3
fildl
loop
push
cmp
fiadds
xor
adc
cmpsl
arpl
mov
mov
fldcw
mov
pop
inc
loope
dec
negb
in
pop
xlat
cmp
sahf
add
pop
faddl
adc
fistps
mov
or
jl
mov
xor
adc
xchg
adc
nop
mov
pop
add
incb
xor
push
int
and
cmp
cmp
fidivl
sub
andb
jnp
out
adc
lahf
std
sahf
mov
orb
jns
sub
jle
leave
cmp
adc
iret
inc
fistpll
lret
mov
xchg
or
push
mov
aam
sbb
aad
jno
les
fistpll
add
and
mov
xchg
sub
mov
dec
mov
push
jae
push
xchg
pusha
in
movb
iret
xor
sahf
mov
sbb
pop
inc
adc
mov
jns
pop
clc
enter
push
cmpsb
inc
arpl
cmpsl
mov
adc
sbb
test
adc
xchg
negl
mov
shl
call
fcoml
iret
aad
push
movsl
adc
movsb
push
pushl
xor
inc
inc
jle
push
xor
mov
and
jb
sti
pusha
push
dec
and
repz
insb
lret
data16
xchg
push
mov
cmp
xor
and
mov
repnz
add
and
or
shlb
mov
enter
test
push
mov
repnz
pop
icebp
shrl
pop
in
inc
cli
and
pop
adc
loopne
xor
cmpsl
mov
cltd
xchg
or
in
adc
pop
pop
arpl
pushf
add
inc
xor
cmc
enter
clc
jo
cmp
cld
dec
push
push
mov
and
mov
mov
jg
jo
enter
out
ret
roll
inc
lods
les
testb
add
shrb
cltd
mov
rcll
push
incb
adc
iret
imul
orb
mov
pop
lcall
ljmp
cli
lret
imul
cmc
push
push
mov
hlt
xor
out
jge
dec
sub
inc
inc
das
outsb
mov
stc
dec
add
addr16
dec
mov
es
inc
dec
pop
xlat
dec
jo
sbb
or
cmp
xchg
pop
adc
mov
push
repz
mov
push
mov
ljmp
adcl
cmp
pop
repnz
mov
cmp
cmp
add
pop
lret
into
hlt
jne
jno
dec
call
pop
mov
lret
js
out
push
dec
cwtl
rclb
cmc
setg
push
daa
mov
dec
test
mov
push
je
loop
outsb
jbe
xchg
es
jno
pop
add
lret
iret
pop
std
cmpsl
pop
xor
push
rcr
xor
data16
fsubrp
testb
fcmovbe
pop
xchg
out
iret
adc
pop
or
or
out
lahf
lret
enter
lcall
xor
add
mov
pop
pop
pushl
js
out
inc
xchg
inc
fdivrs
in
repnz
pop
cmc
pop
inc
aas
popa
outsb
jge
outsl
shll
outsl
addr16
push
sahf
xchg
sbb
rcrb
into
call
mov
pop
icebp
ja
mov
les
jge
lods
movsb
sbb
cmp
aaa
bswap
movsl
mov
mov
xlat
pushf
or
int
mov
pop
add
subb
icebp
xchg
inc
push
rcrl
test
xchg
add
mov
cmp
push
cli
sub
add
lods
mov
ja
push
xchg
gs
lret
ds
int3
outsb
mov
or
faddp
fisubl
add
mov
and
sbb
lods
ds
sub
push
das
push
jno
mov
add
cwtl
push
cmpsl
test
fstpl
pop
push
xchg
and
imulb
test
add
movsb
nop
je
jno
cltd
into
pop
mov
les
fadd
imulb
xchg
mov
xchg
inc
pop
jp
sub
ficompl
cmp
addr16
add
mov
int
xchg
dec
fisubrs
int3
pop
lods
test
fiadds
pop
mov
cmp
xchg
int
push
add
push
stos
shl
xchg
dec
ja
xchg
cmpsb
lcall
mull
sub
rolb
or
test
add
push
mov
movsb
rolb
fdiv
cmpsl
mov
push
mov
add
sbb
add
fsubs
sbb
mov
xchg
scas
mov
xchg
or
mov
push
pop
sbb
test
aaa
inc
bound
pop
repnz
lock
push
sub
mov
inc
leave
push
mov
js
iret
jno
ss
jecxz
std
rcll
stos
push
dec
rcrl
ret
sub
mov
out
cmp
hlt
push
lock
and
gs
loope
dec
cli
addr16
aas
lods
mov
int
add
xchg
rcrb
scas
es
pushf
xchg
fs
xchg
mov
adc
in
mov
add
add
ficompl
aas
leave
add
jne
adc
adc
fwait
sbb
inc
testb
lcall
ret
mov
popf
cld
pushw
mov
xor
cmp
mov
xchg
loop
stc
stos
cmpsb
sbb
cltd
dec
add
mov
jmp
lcall
mov
outsl
ret
insl
mov
inc
cmpsl
cmpsl
ljmp
and
xor
rorb
int
jbe
ret
cmpb
push
sahf
adc
fwait
fs
cld
xchg
test
jp
ret
arpl
xchg
add
clc
rcll
lret
lea
adc
jnp
insb
loopne
add
loop
into
pusha
mov
mov
ror
sbb
adc
sub
aaa
in
es
shl
mov
push
pop
jl
hlt
scas
xchg
or
daa
stos
mov
gs
add
jp
hlt
es
xchg
cld
mov
les
incl
fucomip
xchg
mov
sbb
test
mov
jecxz
ret
scas
ficoml
add
mov
popf
push
push
xlat
pusha
push
add
add
decl
imul
aad
cmp
sub
jb
enter
cwtl
pop
cmp
jp
mov
sar
xor
push
xor
xchg
mov
jno
inc
push
mov
mov
jecxz
lods
inc
mov
ret
add
mov
adc
xchg
mov
js
jl
jo
arpl
sbb
sbb
mov
push
icebp
in
or
cs
inc
and
cmp
fcmovnb
lcall
ja
loope,pt
fldl
pop
fistpl
mov
mov
loopne
and
loope
aas
mov
sbb
cli
inc
add
sbb
push
aad
pop
push
popl
xchg
add
cwtl
cmc
lcall
fisubrl
fwait
scas
shrl
repnz
testl
pop
fbld
and
mov
cmp
adc
inc
mov
dec
jb
xor
xchg
and
movsl
xchg
pop
lock
inc
push
pop
sub
pop
pop
cmp
jbe
and
sbb
ret
mov
loop
jmp
adc
les
xchg
and
test
adc
jmp
jo
aas
adc
cmpsl
dec
call
mov
mov
cli
sub
out
repz
push
jecxz
addl
jae
cltd
sbb
divb
int
lea
xor
sub
cmpsb
lahf
lret
cmp
cmc
adc
hlt
pop
push
les
in
sarb
scas
cmpsl
xor
xor
inc
lcall
adc
mov
push
xchg
loope
mov
cltd
loopne
push
cli
and
mov
or
or
adc
sub
andl
les
mov
cmpsl
xor
in
push
daa
pop
xchg
fdivl
xchg
frstor
xor
or
lfs
imul
test
test
rcrb
imul
add
add
xor
mov
add
cmp
loopne
xor
bound
out
xor
dec
addr16
aad
lret
and
cltd
outsb
lcall
xchg
or
loop
mov
addb
jo
and
adc
or
xor
mov
mov
mov
fisttpl
dec
mov
out
mov
mov
iret
dec
incb
push
and
out
loope
mov
lea
scas
cs
dec
in
jo
imul
xor
jnp
xchg
mov
fists
adcl
push
ss
cmpsb
popa
fwait
cmc
scas
lahf
inc
sub
inc
mov
loopne
and
inc
cmp
in
aam
mov
jle
cwtl
adc
pop
ss
addr16
pop
or
enter
adc
mov
rolb
test
cmp
add
ror
xor
fists
mov
lcall
call
pop
mov
fwait
and
rclb
out
pop
mov
sbb
cld
aaa
fsubr
pusha
outsb
jae
fsubp
out
mov
or
imul
jb
mov
mulb
je
mov
push
adc
xchg
sbb
jbe
inc
lock
inc
loope
and
lds
push
xchg
dec
fsts
movsb
lret
add
sub
test
push
daa
inc
dec
mov
jle
gs
js
or
mov
mov
mov
and
gs
iret
mov
lods
cld
mov
subb
xor
loope
push
sub
movl
insb
fmulp
je
add
into
add
in
adc
push
xchg
aad
xorb
lahf
push
dec
mov
cmp
cld
dec
or
jmp
out
push
out
xchg
push
sbb
mov
nop
cmp
imul
jp
bnd
leave
xchg
mov
outsb
jns
jg
mov
subl
dec
mov
loope
xchg
addr16
pop
mov
sahf
jmp
inc
outsl
push
pusha
xor
dec
test
pop
mov
das
in
in
call
adc
pop
cmp
outsl
sbb
ret
cmpsl
adc
hlt
cmp
inc
pop
or
add
xor
nop
lret
inc
push
ds
jge
sti
in
push
push
push
and
xchg
cmp
inc
dec
arpl
inc
dec
mov
xchg
and
and
sub
adc
mov
cs
xor
clc
int3
inc
lcall
push
xlat
jmp
enter
insb
cmpsb
push
adc
cmp
cmp
mov
negl
bnd
jp
add
aaa
gs
xchg
and
push
pop
fldcw
xor
aaa
xorb
lea
jb
movsw
dec
jno
popa
ds
sahf
sub
jmp
mov
subb
fdivl
rcr
movsl
in
addr16
and
ss
push
cli
xlat
test
loop,pt
out
leave
divl
rorb
dec
inc
fnstsw
in
xor
roll
xchg
or
mov
pop
lcall
mov
dec
loope
jne
xchg
mov
lock
gs
cld
cs
call
lcall
in
mov
shl
or
std
rcr
jl
adc
hlt
mov
xlat
loopne
push
scas
loop
sub
loop
xchg
test
rcrb
sub
adc
pop
repz
subl
jb
rorb
jns
mov
outsl
dec
mov
push
cmc
cmp
stos
clc
add
push
adc
jmp
xorl
mov
fldl
sbb
push
add
jno
cmp
adc
andl
aaa
add
add
ret
lock
mov
jo
lret
aaa
push
cmp
cs
cmp
imul
std
es
movsb
insl
mov
out
xchg
pop
hlt
ret
imul
nop
fildl
sub
inc
clc
push
aas
fildll
rolw
test
or
into
adc
sub
cmp
jmp
insb
mov
add
negl
and
fsts
jg
divl
imul
ret
imul
ljmp
mov
lahf
inc
cli
mov
pop
dec
mov
push
jnp
shrb
and
push
sti
insb
test
jbe
into
push
out
push
xlat
movsl
pop
push
xchg
out
inc
sarl
pminub
inc
push
xchg
xchg
fld
lds
or
pop
adc
or
sub
push
lock
icebp
das
xchg
arpl
mov
cld
std
bound
pushl
mov
xorl
mov
or
aam
pop
inc
clc
sbbb
es
fildll
cmp
lock
cs
lret
movsl
sti
inc
icebp
cmp
fstp
sub
mov
dec
fwait
in
and
adcl
mov
insl
mov
cmpl
add
shll
fsubr
in
cs
mov
mov
mov
out
xor
jno
fisubrl
shll
fistpl
push
sbb
fs
pushf
jbe
jno
test
inc
mov
inc
in
and
or
hlt
gs
or
jne
enter
mov
mov
sub
mov
fidivs
push
add
push
out
xor
stos
inc
inc
cmc
.byte
xchg
.byte
outsl
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
push
mov
jmp
ret
cmpsb
jg
mov
mov
inc
bound
subb
cmp
dec
push
jmp
dec
into
stc
stos
xchg
mul
inc
outsb
pop
jb
xchg
or
mov
call
movsb
sub
mov
ret
pop
js
outsb
xchg
add
dec
loopne
add
jae
jge
bound
cli
push
sti
scas
fldl
push
push
test
inc
pop
push
inc
mov
fwait
sub
pop
rorb
shlb
dec
lahf
mov
enter
lea
addb
enter
dec
cmp
dec
xchg
inc
dec
xor
out
subl
adc
pushf
mov
inc
in
dec
fistpl
and
int3
movsb
pop
imull
fdivrl
pop
fnstenv
ja
mov
jne
rcr
and
push
cli
out
sub
sahf
movsl
out
adc
mov
aam
insb
and
xor
in
loop
ja
or
sti
out
or
push
je
repnz
mov
cwtl
push
sub
mov
mov
and
mov
inc
push
fwait
jp
inc
popa
inc
push
xor
mov
nop
mov
mov
sbb
jbe
stc
rorb
test
enter
enter
mov
and
push
cwtl
dec
fmul
shlw
xlat
in
dec
gs
xchg
jmp
add
das
fchs
push
cltd
and
xor
or
pop
pop
push
andb
xchg
jl
int
lds
dec
ljmp
cmp
cs
das
and
pop
ror
xchg
int
dec
mov
mov
mov
imul
sub
xlat
pop
push
push
cmp
cmpsl
rclb
adc
mov
daa
lcall
shll
jae
lret
pop
in
in
inc
daa
adc
hlt
shrl
ljmp
sub
pop
repnz
ds
rclb
or
add
lock
jmp
pushf
or
dec
js
push
pusha
xor
push
repnz
pop
xchg
out
lcall
jae
iret
cmp
test
ret
cmp
mov
jl
movsl
xlat
cmp
adcb
icebp
out
cmp
and
sbb
ret
push
mov
pop
inc
add
ja
das
jp
lahf
pop
popf
call
unpckhps
mov
pop
test
inc
add
mov
push
lds
sub
pop
dec
xchg
mov
adcl
ljmp
xchg
xchg
in
cmc
in
gs
dec
push
clc
inc
jb
add
dec
ret
mov
jg
push
out
stos
or
stos
insb
dec
cmp
mov
insl
add
test
or
inc
lock
outsl
addr16
jnp
cmpsl
adc
xor
gs
fsubrl
loop
xor
out
jo
movsl
out
mov
cmp
in
sbb
lock
shlb
mov
sbb
loop
pop
sbb
scas
mov
push
aam
in
jecxz
loope
aas
jb
shll
pop
push
in
dec
push
adc
dec
adc
mov
call
mov
xchg
loopne
pop
dec
add
int3
jmp
jns
scas
je
cli
arpl
jg
repnz
adc
call
adc
adc
mov
jge
aam
dec
mov
stos
pop
or
or
mov
nop
rcll
mov
xadd
in
rcrl
mov
or
jmp
cli
aam
push
fmull
insl
clc
in
dec
loope
cmp
pop
xor
mov
inc
das
inc
in
aam
es
inc
in
pop
inc
pop
or
ja
pop
inc
cmp
mov
push
rcr
addr16
xchg
push
pop
mov
das
add
daa
push
fstpt
in
cmpsb
stos
sub
xchg
inc
out
loopne
cmp
sbb
ja
mov
and
scas
imull
ss
int3
push
adc
push
mov
sub
xchg
aam
shll
dec
rcl
push
and
into
mov
push
mov
and
iret
push
nop
push
push
repz
dec
adc
push
movsb
test
inc
pop
repnz
pop
cmp
xchg
pusha
xor
sbb
ljmp
repnz
or
xchg
bnd
and
data16
test
cmp
xchg
mov
leave
xchg
bound
jnp
jnp
adc
pop
iret
cmp
bound
pop
lret
xchg
inc
out
add
xchg
shrl
jp
movsb
pop
out
ss
outsb
andl
jbe
jge
loop
cs
shrd
outsb
dec
add
test
pop
test
mov
mov
and
nop
cmpb
cmc
xor
adc
test
iret
mov
fdivrs
stos
lretw
repz
inc
clc
neg
lds
or
adc
or
icebp
lahf
jecxz
adc
cmpl
push
fucomp
xor
call
add
jbe
stos
sub
xorl
adc
mov
stc
lret
mov
and
mov
push
call
lods
dec
adc
pushf
movb
pusha
mov
out
out
pop
jp
stos
xor
enter
add
mov
mov
dec
pop
shll
ds
add
mov
shrl
movsb
fisubs
cwtl
sub
or
add
lods
cmp
and
fwait
shl
add
jnp
inc
loop
sbb
mov
cs
pop
sbb
push
jge
inc
sbb
pop
cmp
frstor
xchg
pop
adc
loopne
insl
mov
adc
movl
mov
jmp
add
mov
call
xor
jg
arpl
outsl
mov
fincstp
ds
add
push
sbb
jne
sub
and
shlb
mov
pop
mov
nop
pop
cmp
outsl
mov
xlat
rcrl
cs
ret
dec
push
mov
sub
jp
cmp
adc
out
insb
xlat
adc
pop
mov
lea
lea
pop
inc
out
mov
sub
adc
mov
adcb
aaa
and
xor
jg
pop
stos
sub
pushl
mov
sub
test
push
imul
dec
mov
xor
pop
mov
lret
push
pop
lock
adc
shlb
movntq
out
into
stos
xor
pop
mov
jmp
int
es
xor
dec
ret
jp
pop
inc
or
rep
or
test
insl
insl
adcb
xor
push
sub
dec
push
cmp
inc
cli
out
push
inc
lea
pop
outsl
rcrl
int3
mov
shl
jae
sbb
dec
dec
aas
mov
jnp
or
push
sti
push
filds
jmp
xor
xchg
ja
inc
add
int3
mov
lea
arpl
ss
aaa
fisttpll
pop
add
fiaddl
repnz
lret
xchg
mov
mov
hlt
inc
push
mov
cmp
fs
js
ret
inc
rcrb
dec
ds
lds
lods
aas
push
in
add
pop
pop
xchg
jb
insb
stc
in
add
and
ljmp
and
rcl
cmp
movsl
jns
cmp
jl
aad
and
sarb
push
aas
sub
out
stos
or
shrl
rclb
movsl
movsl
xchg
icebp
in
aaa
jo
lds
stos
aaa
scas
scas
add
push
insl
push
call
sbb
push
mov
jne
loopne
fistpll
sbb
test
jne
mov
jb
cmc
adc
dec
in
inc
and
mov
jl
stc
aas
adcl
aad
push
arpl
lea
scas
mov
add
jno
jb
into
mov
xchg
xchg
into
lret
js
pop
inc
inc
xorl
mov
test
das
or
xor
popa
mov
dec
inc
or
pop
in
test
xchg
icebp
xor
mov
jnp
repnz
filds
repnz
xor
dec
fisubrl
cmpsb
rcll
inc
out
cmp
inc
add
cmp
xor
add
dec
lcall
fld
adc
cmpsb
pop
cmc
fwait
pop
test
and
loop
stos
and
in
mov
dec
test
rol
add
lods
out
cs
cwtl
loop
inc
and
mov
mov
pop
js
ficoms
inc
cmp
lds
dec
nop
iret
cmpsl
enter
roll
mov
cmpsb
lods
push
shlb
mov
pop
xor
subb
lods
xchg
jecxz
mov
dec
lcall
nop
push
cmp
pop
adc
int
in
jle
xchg
shrb
mov
dec
jnp
pop
adc
cmp
pop
adc
fsts
push
std
jp
int3
insb
mov
mov
jbe
xchg
jne
lret
push
cld
movsb
jmp
sbb
gs
test
adc
mov
push
or
movsb
out
pop
or
mov
xchg
ret
inc
xlat
mov
outsl
or
push
cmp
adc
stos
or
mov
push
sbb
mov
lcall
cmp
repz
mov
sbbl
xor
test
jmp
jno
movsb
cltd
mov
repnz
add
or
repz
adc
out
push
cltd
into
addr16
sahf
xor
outsb
outsl
insb
mov
jo
or
in
push
divl
add
jmp
clc
je
out
or
xchg
aam
dec
cwtl
fsubrp
sbb
sti
aas
pop
imul
pop
or
iret
xchg
fsubrs
aaa
sbb
cs
jmp
inc
pushf
mov
cmp
xor
cmp
enter
scas
stos
in
dec
popf
aad
lret
outsl
cmp
sbb
hlt
mov
out
sbb
mov
sub
loopne
push
adc
adc
popa
in
sub
lods
mov
mov
push
xchg
mov
shlb
sub
and
xor
sbb
mov
imul
aad
data16
cs
jmp
mov
sub
push
popf
stc
xchg
inc
pop
inc
sub
es
lods
mov
arpl
cwtl
leave
ds
sub
pop
outsl
js
out
adc
or
pushf
in
adc
inc
lcall
push
or
lods
nop
je
daa
sahf
ljmp
push
jo
xor
cltd
nop
jbe
lcall
cmp
rcrb
pop
test
inc
pop
add
and
ud1
out
sbb
fucomip
cmp
dec
mov
lret
xchg
mov
jp
xbegin
lods
mov
test
aam
in
fdivr
outsb
mov
xlat
into
push
push
fistpl
sub
cwtl
imul
aaa
insb
in
stos
ret
out
sub
out
mov
adc
fmul
arpl
and
add
in
inc
xchg
xor
xchg
dec
pop
fistps
push
imul
add
jae
adc
push
mov
or
pusha
test
lods
lock
shll
cld
nop
inc
test
dec
adc
ret
jle
call
xor
jle
fcoml
cld
xchg
hlt
mov
stos
cmp
rcll
or
xchg
lcall
lret
inc
test
imul
ljmp
pop
es
mov
push
je
push
pushf
dec
pop
dec
imul
dec
outsb
divl
scas
test
in
mov
cld
or
adc
sbb
adc
xor
gs
cltd
iret
test
nop
mov
xchg
cltd
xor
mov
lods
js
gs
stos
stos
push
leave
or
jo
aam
lret
bound
daa
push
mov
or
sub
in
adc
sub
lods
addb
xchg
mov
shrl
dec
insb
inc
outsb
les
dec
lahf
or
aam
lds
ss
xlat
fsubl
repz
cmp
xchg
pop
and
movl
push
push
cmc
jb
add
inc
add
pop
mov
movsb
pop
cmp
xchg
pop
jg
pushf
mov
mov
lods
cli
sti
xor
daa
adc
mov
das
sub
pop
sub
xor
les
fwait
fs
adc
daa
aas
jg
leave
push
sub
xor
adc
iret
pop
pop
fstps
or
ds
inc
inc
gs
or
adc
popf
les
mov
add
in
roll
pop
xchg
push
push
or
sub
lcall
sbb
loope
aaa
pop
inc
push
sbb
outsb
imul
push
pop
sti
push
lahf
cs
sub
jmp
adc
jbe
lods
sub
mov
mov
shr
mov
cmp
jno
mov
fcmove
ds
push
mov
sbb
insb
mov
sub
xor
cmp
xor
jo
and
mov
adc
jns
mov
push
les
in
sti
add
jno
and
dec
dec
insb
or
mov
dec
notl
stos
sub
scas
pop
imul
and
pop
mov
jnp
nop
sbb
mov
push
sub
inc
loope
jo
xchg
out
repnz
adc
popf
cld
jle
nop
stc
sbb
push
stos
cli
lret
imul
mov
and
hlt
mov
rolb
mov
jae
sbb
mov
inc
inc
jns
jns
subl
aam
cmp
xchg
push
dec
mov
iret
mov
jg
add
mov
roll
push
mov
jbe
sarl
sbb
movsb
fbstp
xchg
jns
push
jmp
faddl
adc
xchg
xchg
cmp
gs
and
mov
pusha
mov
mov
sarb
inc
out
mov
inc
xchg
in
movups
jno
arpl
les
xchg
push
dec
mov
movsb
mov
ret
inc
jle
inc
hlt
movsb
xchg
pop
in
lret
xor
imul
idivb
jle
les
mov
fildl
add
mov
sti
aaa
daa
dec
pop
add
push
or
fsubr
or
shll
and
mov
stos
inc
mov
inc
fwait
sbb
jb
cmc
outsl
out
lods
jns
dec
sub
push
imul
icebp
push
ficomps
and
sub
mov
fidivrs
xlat
dec
jnp
je
sub
adc
scas
pop
mov
movsl
mov
pop
mov
adc
jbe
push
jmp
cmp
jnp
les
push
xchg
xor
sbb
add
scas
stos
push
inc
popa
bound
sub
cmpsb
aam
xor
lods
das
ficompl
cmp
int
cwtl
pop
cmc
sti
je
xchg
sub
cs
jp
push
pop
rcl
cmpsb
inc
popa
test
mov
dec
or
cmp
xor
mov
xchg
enter
xchg
movsb
push
push
adc
clc
mov
ss
push
and
pop
add
movsb
pop
mov
jne
inc
dec
in
push
popa
lods
je
jbe
fwait
xchg
push
mov
mov
sbb
and
pop
mov
ret
pop
je
dec
pop
and
lahf
add
fisttpll
and
pop
gs
mov
cmp
aaa
or
pop
lahf
ret
dec
mov
jle
sub
or
invd
cmp
stos
or
rol
popf
stc
mov
push
call
aam
mov
in
sahf
loope
sbb
sub
dec
clc
pop
dec
imul
mov
xchg
mov
iret
xchg
push
or
ja
jns
mov
or
outsb
adc
cmp
test
sahf
cltd
mov
sub
ja
adc
inc
out
into
push
mov
jae
xchg
out
movsb
cmpsl
mov
insl
das
loopne
push
sbb
xor
insl
aam
adc
adc
lock
fsub
mov
ss
inc
xor
jp
xlat
xor
shl
xchg
mov
inc
and
lea
stos
mov
mov
add
sub
jp
pmaxsw
enter
and
ret
std
les
or
daa
or
das
pop
dec
mov
xchg
fidivrl
xor
addl
jae
je
or
repz
sbb
jge
and
addb
dec
sub
inc
rcr
xchg
lea
aam
lahf
int3
arpl
imul
fisubrs
arpl
push
stc
jmp
dec
jbe
sbb
out
test
and
adc
hlt
enter
cmp
cmp
hlt
or
sub
ja
and
mov
mov
faddl
fmull
or
mov
mov
pop
scas
fcoms
mov
pop
iret
adc
mov
inc
mov
adc
int
mov
icebp
xchg
jno
jb
outsl
dec
outsl
dec
leave
cmpl
push
jmp
movsl
enter
roll
adc
ret
mov
fstpt
sahf
jp
mov
das
dec
xor
xor
adc
mov
xchg
cmp
push
fwait
mov
into
test
and
or
movsl
and
inc
enter
mov
inc
jb
xor
mov
out
pop
test
jle
push
repz
stos
mov
cmp
loopne
into
in
gs
inc
push
or
mov
adc
pushf
inc
sub
out
mov
imull
repnz
inc
sahf
cmp
rolb
aad
jg
sbb
in
in
sub
mov
ret
push
dec
out
hlt
inc
sub
ffree
jecxz
ret
push
xchg
sub
pop
or
sub
outsl
inc
pop
inc
mov
jmp
loopne
insb
sbb
icebp
or
sbb
mov
hlt
cwtl
jae
lods
fldenv
jb
inc
divb
int3
dec
outsb
jle
test
and
cs
ficomps
cli
push
add
xor
in
adc
fwait
xor
sarl
cmpsb
test
and
fnstenv
filds
insl
mov
inc
lds
xor
pushf
gs
out
lret
sbb
outsl
call
xchg
push
and
xchg
pusha
in
push
out
pop
sbb
ja
lret
andb
jae
push
psllq
enter
cmp
pop
push
out
mov
jecxz
jmp
fdivl
std
test
and
leave
xchg
pop
or
test
aam
mov
push
cs
jb
cmpsb
dec
movsl
cmp
jg
xchg
out
add
jbe
mov
dec
dec
divb
pop
pop
add
lds
mov
sarb
sbb
mov
mov
pop
sub
sti
push
daa
lods
call
jbe
push
pop
sub
or
pop
dec
xchg
repnz
mov
jb
cmp
pushf
cltd
cwtl
xchg
mov
insl
xchg
les
cmp
or
dec
mov
pop
pop
in
cmpsl
pop
pop
inc
test
fs
clc
aam
pushf
lahf
xlat
mov
cmp
aad
pop
addr16
ss
xchg
sub
xchg
andb
mov
xchg
repz
cwtl
push
call
jo
or
sub
or
push
xchg
in
mov
pop
es
inc
data16
stos
sub
pop
gs
inc
pop
std
adc
ds
mov
sbb
int
xor
cmc
and
dec
sub
hlt
xor
ljmp
in
imul
cs
inc
mov
inc
lahf
fdivs
adc
xor
add
test
iret
mov
sub
mov
rcll
sbb
ds
int
inc
xchg
and
arpl
mov
dec
pop
aam
repz
dec
repnz
or
jmp
insb
mov
add
fsubp
jae
pop
clc
cmpsb
subl
out
lahf
pop
out
in
inc
out
xor
xchg
icebp
fisttpl
jge
outsb
jmp
fsubr
idiv
repnz
in
mov
cmpsb
jne
mov
dec
pop
lds
sub
leave
jns
test
ja
adc
fldcw
call
loopne
xchg
adc
leave
in
arpl
dec
dec
sbb
push
sbb
mov
hlt
mov
cmpl
jl
jecxz
cmp
dec
fcmovbe
arpl
sbb
jno
xor
mov
adc
dec
mov
cld
lret
pop
loope
mov
add
out
stc
mov
sahf
movsb
in
pop
popa
pop
mov
cltd
dec
inc
les
sbb
test
test
dec
cmpb
pop
jnp
mov
in
scas
xor
sub
in
jno
loope
xor
xor
pop
mov
pop
shll
or
lea
ficompl
inc
popf
movsb
sbb
mov
arpl
mov
dec
orb
jbe
adc
mov
int
dec
xchg
and
dec
in
sahf
sbb
pop
push
and
push
outsl
mov
cmpb
pop
test
int3
sahf
inc
in
nop
mov
cmp
fs
push
mov
out
out
int3
lcall
stos
mov
sub
sarb
dec
or
pop
andb
in
inc
ljmp
call
dec
push
mov
mov
int3
cmpsb
push
mov
push
jp
mov
mov
lret
mov
cmp
dec
mov
push
fnstsw
or
mov
in
cmpsb
inc
jbe
sbb
sub
xor
or
repz
sub
pop
jge
mov
xor
sahf
xlat
insb
pop
aad
js
shll
mov
fwait
movsb
vandnpd
mov
mov
jecxz
xor
push
js
xchg
ficompl
sub
cwtl
mov
lret
scas
push
xchg
test
push
add
icebp
das
xor
mov
add
xor
lock
jo
push
fwait
sub
and
lods
mov
mov
sbb
push
out
and
lcall
outsb
movsl
jg
adc
mov
test
dec
mov
inc
ja
mov
mov
adc
mov
test
rol
cli
or
movsb
mov
mov
out
daa
cmp
pushf
mov
jmp
add
scas
or
dec
bound
orb
xchg
sub
mov
js
std
out
mov
dec
jae
bound
into
adc
js
xchg
out
xchg
stos
adc
add
push
adc
adc
adc
or
nop
cmpsl
inc
xchg
xor
scas
ljmp
add
cmp
repnz
mov
clc
not
pop
add
loopne
fdivrs
push
fmull
inc
mov
cs
inc
jbe
imul
sbb
mov
add
and
mov
jmp
add
xor
push
out
sub
popf
dec
dec
pushw
push
jb
mov
mov
sbb
mov
or
xchg
shlb
fcmovnbe
sbb
xchg
lret
pop
sub
int
cmp
pop
inc
inc
ljmp
push
xor
cmp
xor
dec
cltd
popa
push
out
ret
mov
add
mov
pop
jo
nop
jecxz
je
push
fmul
lret
fwait
outsl
repnz
cli
mov
scas
jbe
mov
out
cmpsb
stc
ret
fcompl
mov
cmp
into
mov
jbe
inc
filds
sbb
inc
bound
fwait
es
fnsave
jle
dec
add
mov
out
xor
test
cld
lods
mov
sbbb
xchg
cmpsb
in
mov
xor
cmp
jne
daa
push
in
fidivs
dec
scas
and
pop
lahf
inc
repnz
mov
mov
inc
mov
in
clc
movsl
push
and
xor
mov
mov
mov
add
cmp
aas
int
mov
divb
fstps
jnp
in
inc
lock
adc
inc
mov
cltd
mov
or
sbb
rcll
xor
inc
adc
mov
in
xchg
mov
cltd
jns
push
test
fldt
mov
pushf
jmp
xchg
and
test
push
pop
cmp
mov
insb
or
xchg
pop
push
add
mov
call
xor
jge
adc
cmpsb
fstpt
out
push
inc
or
lret
push
adc
std
mov
pop
pop
sbb
mov
mov
jg
ja
mov
xchg
out
jg
jecxz
ja
jnp
sarl
xor
repnz
sbb
inc
lods
scas
cmp
mov
inc
loope
add
fiadds
xor
arpl
lret
mov
cmp
rcr
fldcw
ja
adc
jns
dec
xlat
jb
cli
push
scas
insb
sub
jge
movb
mov
inc
add
adc
insl
jb
out
stos
sub
bound
fsubrp
jno
sahf
mov
push
subl
data16
js
xchg
scas
leave
pop
ret
xor
pushf
sahf
cld
xchg
iret
mov
fists
jg
dec
pop
std
push
shll
data16
xlat
ljmp
or
inc
jle
addr16
push
movsb
imul
jp
and
pop
movsb
sarl
jmp
mov
xor
bound
cmpsl
mov
in
mov
add
and
out
hlt
xchg
mov
inc
lds
cli
jo
push
or
push
fbld
lds
pop
inc
cld
pop
mov
xchg
mov
jae
jne
stos
in
mov
push
lods
out
stos
xor
dec
pop
sti
pop
or
fidivl
inc
xchg
pop
enter
mov
pop
bound
subb
jnp
stc
mov
fst
jl
inc
or
xor
jge
push
rcrb
jg
xor
lock
xchg
ja
lahf
in
sbb
arpl
bound
inc
pcmpeqd
mov
clc
mov
rolb
daa
fxch
icebp
add
loopne
hlt
mov
cld
enter
push
lahf
ds
push
push
jle
repz
mov
outsb
shrl
mov
fimuls
mov
or
push
mov
sti
inc
jg
adc
sub
add
les
out
mov
mov
mov
icebp
ljmp
loopne
outsb
or
xor
fs
mov
mov
sbb
icebp
dec
mov
pusha
mov
cli
mov
rcr
cwtl
aam
mov
lahf
outsl
xor
std
std
or
jne
out
mov
popa
sub
insb
mov
std
aaa
aad
jecxz
fcomps
in
pop
jb
inc
and
cmp
test
cmc
aas
data16
hlt
mov
test
mov
subb
add
movsb
movb
ror
ret
shlb
scas
jge
in
push
fcomi
idiv
mov
cwtl
xor
jg
jo
addr16
or
xchg
sti
pop
dec
lret
jge
mov
add
push
mov
test
leave
cmp
mov
pop
test
int
push
add
xor
addb
xchg
mov
ret
add
icebp
cmc
mov
and
push
push
push
cmc
xor
mov
pop
imul
sbb
lods
mov
dec
mov
les
xchg
loopne
rol
jl
aad
add
and
cld
je
loop
inc
jmp
movsb
notb
outsl
negb
cmp
jno
lahf
xlat
fsubs
dec
in
xor
daa
or
mov
js
ret
push
pop
inc
cmpsl
cld
jg
cld
inc
std
popl
repnz
hlt
sbb
cli
adc
ljmp
in
loope
sbbb
adc
pop
adc
mov
insl
sti
sub
add
aaa
and
jg
andb
mov
out
aad
fldl
xlat
scas
cld
int
dec
nop
fwait
xchg
fldenv
sub
in
lods
sbb
stc
les
pcmpeqw
aad
or
pop
data16
stos
xor
and
int
cli
bound
push
fisubs
sahf
sub
push
aas
push
xchg
push
push
cmp
filds
lahf
push
movsl
lods
sub
sbb
leave
gs
scas
es
inc
test
clc
jmp
xlat
mov
sub
fldl
pop
sahf
loop
sbb
xor
mov
hlt
leave
movsl
js
xchg
jecxz
icebp
adc
jbe
jge
js
cld
sub
js
xchg
ljmp
mov
cmp
jnp
xor
pop
shr
and
xor
sar
stos
int
mov
pop
xchg
imull
js
xchg
lret
and
test
aaa
push
sbb
jb
or
cmp
adc
pop
and
jno
cs
or
push
adc
or
hlt
imul
cmpsl
mov
jne
int3
mov
push
mov
mov
clc
push
lahf
mov
aaa
test
adc
loope
lret
jo
in
mov
out
pusha
pop
mov
add
mov
imul
and
mov
mov
jno
inc
mov
nop
sbb
jns
and
xor
and
jle
std
rcr
adc
addb
mov
ja
cmpsl
xchg
fwait
adc
push
jle
nop
inc
pushf
stos
loope
and
loope
mov
push
cmpb
cld
or
push
arpl
test
jge
incl
popf
adc
rolb
pop
stc
in
in
bound
adc
fistpl
push
sarb
cmp
jns
xchg
xchg
loop
fisttps
cmp
or
pop
mov
push
xchg
movsb
cmpsb
in
fcoml
stos
js
insb
inc
hlt
ja
popl
mov
or
xchg
mov
popf
imul
jo
sti
sub
xchg
mov
push
cs
lock
jl
jecxz
cmp
cld
dec
fnstenv
xlat
rcll
jbe
push
out
pop
xchg
mov
mov
sub
test
pusha
cmp
sub
xor
shll
sub
clc
fsubs
sbb
movsb
into
rorb
jle
arpl
jge
outsb
pop
pop
xor
lahf
int
xor
fiadds
jg
mov
sbb
divl
pop
cmp
mov
es
push
or
test
jns
dec
and
mov
loopne
sti
fs
cmp
adc
cmpsb
push
pop
scas
cmc
xlat
sti
add
stos
fimuls
jl
lret
pop
enter
push
int
mov
mov
fwait
inc
dec
push
sarb
jae
cmp
sbbb
mov
fdivl
cli
push
jo
inc
ds
scas
repnz
sbb
jp
add
sti
lods
mov
bound
lcall
push
and
out
mov
dec
aad
xchg
sbb
jo
and
cmpsl
jg
mov
mov
in
mov
test
dec
cmp
or
psadbw
push
into
out
xchg
inc
dec
add
stos
insb
xchg
dec
push
lds
mov
mov
inc
and
sti
pop
ljmp
xor
adc
in
pop
cli
stos
mov
push
aaa
adc
aaa
test
movsb
adc
push
or
mov
dec
gs
mov
fisttpl
fld
orb
loope
jb
inc
jecxz
sub
jae
popf
mov
hlt
add
adc
cmp
push
cmp
and
ja
cmp
mov
jg
jnp
loop
sbb
cmp
pop
fidivs
out
lods
into
mov
in
sub
mov
push
xor
sub
mov
jl
mov
rcl
loope
arpl
je
fisubl
mov
xor
mov
jecxz
scas
dec
mov
scas
or
cwtl
aaa
adc
popa
popa
ja
into
jo
mov
lret
add
cmpsl
je
lock
imul
inc
stc
mov
dec
fldenv
adc
add
imul
adc
aas
push
mov
or
or
shl
orl
lret
nop
pusha
sti
adc
shll
add
adc
xchg
mov
dec
push
xchg
or
cmp
mov
sub
mulps
mulb
nop
insl
loop
or
jae
je
jne
mov
subl
mov
xchg
sub
mov
inc
cs
loope
jle
sbb
and
lret
imul
adc
xchg
out
xchg
and
stos
dec
and
les
out
adc
clc
imul
cmc
lret
pushf
cmpsl
idivl
lcall
add
xchg
enter
cltd
pop
lgs
inc
adc
pop
in
adc
mov
cmp
int3
testb
lea
test
lods
cmpsb
lea
inc
daa
xchg
hlt
jb
pop
sbbb
fsubrs
jge
adc
jecxz
sub
outsl
loope
cmp
xchg
push
and
hlt
sahf
repz
push
xlat
pop
mulb
xchg
test
xchg
cmp
xor
aas
adc
gs
ds
aas
dec
movsb
call
addr16
int
adc
popa
int
push
int
sbbl
insb
xchg
lods
mov
xchg
into
ffree
mov
cmp
mov
sarb
ss
sarb
enter
and
sbb
insl
mov
sub
mov
lea
lret
in
out
inc
and
aam
xchg
mov
insl
nop
lret
or
stc
sub
xchg
sub
xor
pop
pop
mov
outsb
imul
addr16
or
inc
in
push
stos
jnp
lods
in
in
mov
fsubr
mov
outsb
fiaddl
and
dec
test
bound
jg
fdiv
bound
or
push
xor
adc
mov
adc
and
and
jge
push
xchg
push
mov
divb
add
sarb
mov
and
inc
lock
add
outsb
insl
xor
jmp
rorb
adc
jge
packsswb
xor
incb
push
lahf
cmp
push
dec
cs
mov
into
push
rclb
jmp
enter
mov
or
push
out
cmpsb
mov
sub
jne
pop
fsub
es
sbb
adc
mov
adc
and
sti
ret
jp
sub
xchg
mov
arpl
pop
int
mov
dec
into
sti
push
ljmp
jae
add
sbb
sub
popa
cmovne
jle
shld
xor
jnp
cmp
arpl
inc
mov
hlt
out
mov
jg
xor
test
jae
ljmp
ja
ljmp
sbb
int3
fildl
loop
push
cmp
fiadds
xor
adc
cmpsl
arpl
mov
mov
fldcw
mov
pop
inc
loope
dec
negb
in
pop
xlat
cmp
sahf
add
pop
faddl
adc
fistps
mov
or
jl
mov
xor
adc
xchg
adc
nop
mov
pop
add
incb
xor
push
int
and
cmp
cmp
fidivl
sub
andb
jnp
out
adc
lahf
std
sahf
mov
orb
jns
sub
jle
leave
cmp
adc
iret
inc
fistpll
lret
mov
xchg
or
push
mov
aam
sbb
aad
jno
les
fistpll
add
and
mov
xchg
sub
mov
dec
mov
push
jae
push
xchg
pusha
in
movb
iret
xor
sahf
mov
sbb
pop
inc
adc
mov
jns
pop
clc
enter
push
cmpsb
inc
arpl
cmpsl
mov
adc
sbb
test
adc
xchg
negl
mov
shl
call
fcoml
iret
aad
push
movsl
adc
movsb
push
pushl
xor
inc
inc
jle
push
xor
mov
and
jb
sti
pusha
push
dec
and
repz
insb
lret
data16
xchg
push
mov
cmp
xor
and
mov
repnz
add
and
or
shlb
mov
enter
test
push
mov
repnz
pop
icebp
shrl
pop
in
inc
cli
and
pop
adc
loopne
xor
cmpsl
mov
cltd
xchg
or
in
adc
pop
pop
arpl
pushf
add
inc
xor
cmc
enter
clc
jo
cmp
cld
dec
push
push
mov
and
mov
mov
jg
jo
enter
out
ret
roll
inc
lods
les
testb
add
shrb
cltd
mov
rcll
push
incb
adc
iret
imul
orb
mov
pop
lcall
ljmp
cli
lret
imul
cmc
push
push
mov
hlt
xor
out
jge
dec
sub
inc
inc
das
outsb
mov
stc
dec
add
addr16
dec
mov
es
inc
dec
pop
xlat
dec
jo
sbb
or
cmp
xchg
pop
adc
mov
push
repz
mov
push
mov
ljmp
adcl
cmp
pop
repnz
mov
cmp
cmp
add
pop
lret
into
hlt
jne
jno
dec
call
pop
mov
lret
js
out
push
dec
cwtl
rclb
cmc
setg
push
daa
mov
dec
test
mov
push
je
loop
outsb
jbe
xchg
es
jno
pop
add
lret
iret
pop
std
cmpsl
pop
xor
push
rcr
xor
data16
fsubrp
testb
fcmovbe
pop
xchg
out
iret
adc
pop
or
or
out
lahf
lret
enter
lcall
xor
add
mov
pop
pop
pushl
js
out
inc
xchg
inc
fdivrs
in
repnz
pop
cmc
pop
inc
aas
popa
outsb
jge
outsl
shll
outsl
addr16
push
sahf
xchg
sbb
rcrb
into
call
mov
pop
icebp
ja
mov
les
jge
lods
movsb
sbb
cmp
aaa
bswap
movsl
mov
mov
xlat
pushf
or
int
mov
pop
add
subb
icebp
xchg
inc
push
rcrl
test
xchg
add
mov
cmp
push
cli
sub
add
lods
mov
ja
push
xchg
gs
lret
ds
int3
outsb
mov
or
faddp
fisubl
add
mov
and
sbb
lods
ds
sub
push
das
push
jno
mov
add
cwtl
push
cmpsl
test
fstpl
pop
push
xchg
and
imulb
test
add
movsb
nop
je
jno
cltd
into
pop
mov
les
fadd
imulb
xchg
mov
xchg
inc
pop
jp
sub
ficompl
cmp
addr16
add
mov
int
xchg
dec
fisubrs
int3
pop
lods
test
fiadds
pop
mov
cmp
xchg
int
push
add
push
stos
shl
xchg
dec
ja
xchg
cmpsb
lcall
mull
sub
rolb
or
test
add
push
mov
movsb
rolb
fdiv
cmpsl
mov
push
mov
add
sbb
add
fsubs
sbb
mov
xchg
scas
mov
xchg
or
mov
push
pop
sbb
test
aaa
inc
bound
pop
repnz
lock
push
sub
mov
inc
leave
push
mov
js
iret
jno
ss
jecxz
std
rcll
stos
push
dec
rcrl
ret
sub
mov
out
cmp
hlt
push
lock
and
gs
loope
dec
cli
addr16
aas
lods
mov
int
add
xchg
rcrb
scas
es
pushf
xchg
fs
xchg
mov
adc
in
mov
add
add
ficompl
aas
leave
add
jne
adc
adc
fwait
sbb
inc
testb
lcall
ret
mov
popf
cld
pushw
mov
xor
cmp
mov
xchg
loop
stc
stos
cmpsb
sbb
cltd
dec
add
mov
jmp
lcall
mov
outsl
ret
insl
mov
inc
cmpsl
cmpsl
ljmp
and
xor
rorb
int
jbe
ret
cmpb
push
sahf
adc
fwait
fs
cld
xchg
test
jp
ret
arpl
xchg
add
clc
rcll
lret
lea
adc
jnp
insb
loopne
add
loop
into
pusha
mov
mov
ror
sbb
adc
sub
aaa
in
es
shl
mov
push
pop
jl
hlt
scas
xchg
or
daa
stos
mov
gs
add
jp
hlt
es
xchg
cld
mov
les
incl
fucomip
xchg
mov
sbb
test
mov
jecxz
ret
scas
ficoml
add
mov
popf
push
push
xlat
pusha
push
add
add
decl
imul
aad
cmp
sub
jb
enter
cwtl
pop
cmp
jp
mov
sar
xor
push
xor
xchg
mov
jno
inc
push
mov
mov
jecxz
lods
inc
mov
ret
add
mov
adc
xchg
mov
js
jl
jo
arpl
sbb
sbb
mov
push
icebp
in
or
cs
inc
and
cmp
fcmovnb
lcall
ja
loope,pt
fldl
pop
fistpl
mov
mov
loopne
and
loope
aas
mov
sbb
cli
inc
add
sbb
push
aad
pop
push
popl
xchg
add
cwtl
cmc
lcall
fisubrl
fwait
scas
shrl
repnz
testl
pop
fbld
and
mov
cmp
adc
inc
mov
dec
jb
xor
xchg
and
movsl
xchg
pop
lock
inc
push
pop
sub
pop
pop
cmp
jbe
and
sbb
ret
mov
loop
jmp
adc
les
xchg
and
test
adc
jmp
jo
aas
adc
cmpsl
dec
call
mov
mov
cli
sub
out
repz
push
jecxz
addl
jae
cltd
sbb
divb
int
lea
xor
sub
cmpsb
lahf
lret
cmp
cmc
adc
hlt
pop
push
les
in
sarb
scas
cmpsl
xor
xor
inc
lcall
adc
mov
push
xchg
loope
mov
cltd
loopne
push
cli
and
mov
or
or
adc
sub
andl
les
mov
cmpsl
xor
in
push
daa
pop
xchg
fdivl
xchg
frstor
xor
or
lfs
imul
test
test
rcrb
imul
add
add
xor
mov
add
cmp
loopne
xor
bound
out
xor
dec
addr16
aad
lret
and
cltd
outsb
lcall
xchg
or
loop
mov
addb
jo
and
adc
or
xor
mov
mov
mov
fisttpl
dec
mov
out
mov
mov
iret
dec
incb
push
and
out
loope
mov
lea
scas
cs
dec
in
jo
imul
xor
jnp
xchg
mov
fists
adcl
push
ss
cmpsb
popa
fwait
cmc
scas
lahf
inc
sub
inc
mov
loopne
and
inc
cmp
in
aam
mov
jle
cwtl
adc
pop
ss
addr16
pop
or
enter
adc
mov
rolb
test
cmp
add
ror
xor
fists
mov
lcall
call
pop
mov
fwait
and
rclb
out
pop
mov
sbb
cld
aaa
fsubr
pusha
outsb
jae
fsubp
out
mov
or
imul
jb
mov
mulb
je
mov
push
adc
xchg
sbb
jbe
inc
lock
inc
loope
and
lds
push
xchg
dec
fsts
movsb
lret
add
sub
test
push
daa
inc
dec
mov
jle
gs
js
or
mov
mov
mov
and
gs
iret
mov
lods
cld
mov
subb
xor
loope
push
sub
movl
insb
fmulp
je
add
into
add
in
adc
push
xchg
aad
xorb
lahf
push
dec
mov
cmp
cld
dec
or
jmp
out
push
out
xchg
push
sbb
mov
nop
cmp
imul
jp
bnd
leave
xchg
mov
outsb
jns
jg
mov
subl
dec
mov
loope
xchg
addr16
pop
mov
sahf
jmp
inc
outsl
push
pusha
xor
dec
test
pop
mov
das
in
in
call
adc
pop
cmp
outsl
sbb
ret
cmpsl
adc
hlt
cmp
inc
pop
or
add
xor
nop
lret
inc
push
ds
jge
sti
in
push
push
push
and
xchg
cmp
inc
dec
arpl
inc
dec
mov
xchg
and
and
sub
adc
mov
cs
xor
clc
int3
inc
lcall
push
xlat
jmp
enter
insb
cmpsb
push
adc
cmp
cmp
mov
negl
bnd
jp
add
aaa
gs
xchg
and
push
pop
fldcw
xor
aaa
xorb
lea
jb
movsw
dec
jno
popa
ds
sahf
sub
jmp
mov
subb
fdivl
rcr
movsl
in
addr16
and
ss
push
cli
xlat
test
loop,pt
out
leave
divl
rorb
dec
inc
fnstsw
in
xor
roll
xchg
or
mov
pop
lcall
mov
dec
loope
jne
xchg
mov
lock
gs
cld
cs
call
lcall
in
mov
shl
or
std
rcr
jl
adc
hlt
mov
xlat
loopne
push
scas
loop
sub
loop
xchg
test
rcrb
sub
adc
pop
repz
subl
jb
rorb
jns
mov
outsl
dec
mov
push
cmc
cmp
stos
clc
add
push
adc
jmp
xorl
mov
fldl
sbb
push
add
jno
cmp
adc
andl
aaa
add
add
ret
lock
mov
jo
lret
aaa
push
cmp
cs
cmp
imul
std
es
movsb
insl
mov
out
xchg
pop
hlt
ret
imul
nop
fildl
sub
inc
clc
push
aas
fildll
rolw
test
or
into
adc
sub
cmp
jmp
insb
mov
add
negl
and
fsts
jg
divl
imul
ret
imul
ljmp
mov
lahf
inc
cli
mov
pop
dec
mov
push
jnp
shrb
and
push
sti
insb
test
jbe
into
push
out
push
xlat
movsl
pop
push
xchg
out
inc
sarl
pminub
inc
push
xchg
xchg
fld
lds
or
pop
adc
or
sub
push
lock
icebp
das
xchg
arpl
mov
cld
std
bound
pushl
mov
xorl
mov
or
aam
pop
inc
clc
sbbb
es
fildll
cmp
lock
cs
lret
movsl
sti
inc
icebp
cmp
fstp
sub
mov
dec
fwait
in
and
adcl
mov
insl
mov
cmpl
add
shll
fsubr
in
cs
mov
mov
mov
out
xor
jno
fisubrl
shll
fistpl
push
sbb
fs
pushf
jbe
jno
test
inc
mov
inc
in
and
or
hlt
gs
or
jne
enter
mov
mov
sub
mov
fidivs
push
add
push
out
xor
stos
inc
inc
cmc
call
cmp
xchg
xchg
arpl
scas
fdivrs
push
push
mov
loopne
jo
or
movsb
call
pop
js
xchg
and
fsubr
enter
push
dec
dec
ror
aas
sbb
jl
push
mov
divb
ljmp
insl
in
iret
lds
and
repz
add
mov
inc
sub
pop
icebp
dec
cmp
xor
inc
mov
xor
mov
lcall
mov
aad
or
arpl
and
inc
hlt
push
jmp
jmp
jmp
iret
test
xchg
movsb
mov
lds
pop
out
cs
sub
cmpsb
bound
dec
aam
pop
aam
ret
and
mov
inc
or
iret
or
jecxz
fidivrl
add
aaa
sbb
imul
pop
and
fidivrl
scas
adc
lret
xor
jne
adc
add
incl
rcrb
push
inc
pop
sbb
or
int
push
std
inc
iret
mov
int3
popf
fsubrl
shrb
sbb
lock
and
test
enter
xor
mov
lea
int3
xchg
cltd
sarl
jge
dec
sub
dec
dec
fcoms
scas
mov
sbb
sbb
push
std
sbb
mov
inc
out
fwait
mov
test
jmp
add
sahf
je
and
and
sbb
xchg
loop
mov
dec
lea
xchg
cld
test
xor
addr16
cltd
xor
xchg
push
ret
push
jl
sti
jle
sbb
sub
mov
jg
mov
cmp
adc
test
xchg
pop
popa
xchg
fimull
cmp
icebp
push
cs
cs
in
jb
imul
fisubl
jb
lahf
js
aaa
mov
faddl
sbb
movsl
cwtl
xor
loopne
add
stc
inc
loope
subb
and
ss
push
cmp
lds
jp
rol
dec
jae
jmp
pop
out
xchg
lret
cmp
jb
cmp
lods
test
fst
test
adcl
iret
adc
cld
push
dec
call
jge
cmp
push
lcall
pop
repnz
arpl
mov
or
pop
push
adc
xor
fistpl
xor
inc
jl
and
fadd
out
jle
jmp
inc
push
mov
pop
fs
pushf
addb
call
sbb
mov
fldcw
jb
dec
js
dec
and
mov
or
adc
sub
dec
adcb
aas
leave
mov
lods
rol
clc
xchg
mov
mov
pop
push
int
dec
add
stos
xchg
rcrb
cmc
fcoml
and
adc
popa
outsb
out
mov
jmp
icebp
jbe
push
stos
mov
ret
ja
roll
pusha
stc
inc
add
loope
hlt
cli
xchg
cmp
mov
ret
jo
int
jg
xchg
in
test
arpl
popa
fucomip
fmul
adc
stc
in
add
enter
mov
pop
out
ret
test
pop
inc
xor
arpl
xchg
jmp
loope
daa
inc
ds
into
mov
imul
xor
mov
mov
repz
mov
push
inc
and
xlat
flds
dec
movsb
lods
int
add
hlt
inc
fimuls
mov
in
inc
jmp
jno
rclb
sbb
roll
jbe
adc
hlt
push
subl
fists
or
pop
cli
inc
adc
les
jmp
xchg
fnstenv
cmpsl
test
test
mov
repz
mov
add
pusha
jbe
pop
clc
mov
mov
lock
nop
inc
xchg
pop
lock
movsl
imul
inc
icebp
sbb
outsl
mov
std
xor
jno
lahf
lahf
ss
aad
outsl
fisttpl
lods
sbb
mov
sbb
xor
sbb
sbb
cmp
dec
movsb
pushf
aaa
add
dec
adc
ljmp
mov
mov
mov
push
repnz
stc
adc
and
out
push
cmp
dec
inc
cmp
insl
in
sub
movsb
adc
xorb
push
mov
scas
mov
xchg
nop
add
into
cmpsb
pop
inc
mov
jbe
shlb
shufps
xor
mov
addr16
mov
cmp
sub
mov
les
pop
pusha
in
sbb
mov
cltd
lret
dec
shl
cmp
jecxz
sub
fstps
fists
xchg
cmp
xor
test
dec
aad
sbb
jp
loop
xchg
mov
das
fs
sub
les
out
jmp
movsl
add
in
repz
pop
sub
sbb
push
mov
cmp
loopne
add
pusha
test
fwait
dec
inc
sbb
cmp
jecxz
ret
popa
stc
push
xor
mov
jno
sarb
jp
jnp
lods
idiv
mov
push
xor
aam
imul
and
dec
pop
loop
jae
scas
add
jne
add
outsl
in
add
bound
shlb
sbbb
xchg
mov
mov
dec
data16
pushf
stos
fstl
mov
adc
and
mov
xor
imul
push
je
test
xor
scas
fiaddl
jae
sub
push
pop
cld
lahf
dec
loop
sbb
clc
int
adc
mov
add
jp
fs
std
mov
mov
jno
ret
mov
xchg
mov
jecxz
mov
cwtl
scas
and
js
xchg
sarb
add
xchg
rcrl
lods
xchg
mov
popa
dec
cmp
jbe
test
cld
or
push
push
lods
cli
hlt
mov
test
wbinvd
jo
pop
lret
out
sub
dec
dec
jmp
jecxz
dec
xlat
rcr
movsb
mov
xor
shrl
pop
out
push
leave
inc
mov
mov
out
hlt
adc
dec
scas
mov
popfw
push
sub
add
push
cmp
mov
mov
ret
js
ds
arpl
cmpsb
arpl
mov
mov
aam
movsb
sub
cli
movsl
add
cmc
adc
je
pop
mov
lock
pop
andl
cld
loop
rclb
jmp
sub
and
lret
mov
dec
loope
pop
adc
push
mov
in
mov
inc
dec
into
fadds
stos
mov
pop
jns
pop
jg
xor
xor
mov
adcb
add
sbb
pop
mov
shll
push
arpl
je
out
sbb
aam
mov
dec
jno
cmpsb
and
mov
nop
inc
imul
push
pop
and
sarb
lret
aam
pushl
pop
fs
xlat
mov
inc
test
lcall
cmc
test
push
jge
push
daa
fldenv
push
push
xchg
jnp
into
jae
pop
jp
inc
sub
xor
inc
imul
fnstenv
xchg
inc
imul
pop
and
xor
repz
xchg
adc
lods
lcall
sbb
movsb
add
xor
lret
lods
add
inc
pop
popa
aad
xchg
pop
sbb
inc
pop
stc
cwtl
push
sub
faddp
and
out
dec
cmp
mov
jb
scas
sahf
sbb
lret
add
out
ja
negb
ljmp
mov
movsl
sub
xchg
cmpsb
cmp
sbb
pushf
cmp
mov
jo
dec
into
dec
mov
jno
sbb
stos
je
jne
fmul
aas
stc
fwait
cmpsb
dec
xchg
shlb
pop
mov
scas
cmpsl
loope
cmp
add
out
mov
mov
enter
psubw
stc
jbe
lods
mov
shl
aas
jne
lret
inc
cs
imul
and
adc
aam
leave
into
loopne
arpl
repz
add
inc
mov
jl
cmp
cld
lds
int3
lock
sbb
je
push
jae
push
mov
inc
cmpb
lret
les
lret
add
stc
jae
mov
lret
aam
hlt
pop
inc
loope
stos
xrelease
sbb
clc
sti
pop
jp
adc
ficoml
icebp
inc
adc
jo
loopne
cmp
int3
cld
adcb
addr16
mov
int3
movsb
lods
mov
cltd
or
dec
int3
xor
mov
push
lcall
lods
xchg
push
mov
inc
pop
ljmp
shrl
std
or
sbb
std
mov
and
mov
in
sbb
fidivrl
sub
cli
fidivrl
or
push
push
add
cmpsl
mov
xchg
fstl
or
mov
stc
xchg
push
jne
shlb
dec
inc
inc
out
mov
outsl
push
ds
add
xorb
push
xchg
dec
cmp
lahf
out
je
sahf
push
mov
mov
lods
inc
mov
jb
inc
mov
xor
and
je
les
push
xor
ret
rolb
cmpsb
inc
fs
sbb
pop
mov
movb
test
xor
addl
xor
inc
inc
dec
pop
addr16
loop,pt
pop
cmc
xchg
mov
mov
je,pn
cmp
cmpsl
fs
gs
sub
jmp
and
mov
test
fcmove
jp
xchg
push
and
sub
adc
stos
cmp
cltd
adc
push
add
nop
loopne
out
jmp
dec
je
inc
lds
out
dec
xor
mov
int3
into
adc
mov
popa
cmp
xchg
repnz
pop
out
cmp
jb
dec
aam
stc
vprotq
push
mov
sub
jae
sbbb
adc
movsb
add
sub
in
popa
mov
add
rcll
test
jno
push
push
movsl
sbb
je
inc
clc
add
sbb
out
daa
jle
sbb
mov
scas
or
shlb
imul
xchg
cmp
icebp
pop
or
stos
insb
mov
shlb
dec
adc
or
test
mov
ucomiss
inc
push
and
inc
mov
xchg
and
inc
cmp
ds
call
ret
inc
faddl
aaa
mov
add
xor
daa
push
or
ljmp
jmp
adc
fwait
ret
cltd
adc
mov
adc
and
stos
cmp
and
popa
shrl
iret
arpl
cld
or
push
mov
sbb
pop
jle
mov
addr16
jecxz
mov
xchg
addb
cmp
jl
out
jo
imul
cmp
jge
fldt
push
sbb
and
repz
lahf
xor
mov
fdivrl
cmp
in
jmp
xor
mov
jno
add
fnstenv
sub
xchg
inc
into
shlb
in
push
clc
sub
or
inc
add
ljmp
add
mov
lea
mov
les
repnz
cmc
out
ja
dec
aam
mov
add
sbb
fs
lcall
pop
and
inc
addr16
pop
xor
push
pushf
mov
push
inc
cld
cld
nop
fistl
icebp
mov
icebp
mov
jmp
leave
popa
mov
repz
and
lds
testl
lods
dec
xchg
mov
mov
pop
in
pop
cmp
cmp
and
inc
cltd
stos
mull
imul
sub
and
pusha
jle
push
scas
adc
inc
shl
int3
hlt
inc
adc
adc
xor
push
mov
sub
inc
sbb
movsl
and
dec
test
jb
sbb
decb
test
fisubs
rclb
cmpsl
stos
adc
leave
pop
filds
xor
sub
stos
jmp
in
push
cmpxchg
les
cmp
xchg
test
inc
xchg
and
ja
mov
xor
mov
jp
repnz
ja
push
cmp
outsb
inc
dec
lret
mov
dec
dec
lods
cmp
pop
test
sbb
fwait
inc
movl
mov
push
cmc
push
add
scas
loopne
mov
cli
nop
jmp
push
in
repnz
ja
xchg
adc
stc
sbb
icebp
add
test
push
fcoml
jl
lea
pusha
adc
repz
sub
dec
cmpsl
lds
scas
push
sub
sbb
xchg
and
mov
pop
aad
lods
xor
xor
cmpsb
scas
les
call
xor
test
pop
inc
push
dec
sub
sub
int3
sti
pop
call
mov
ja
cmpsb
jnp
jl
sbb
jmp
jne
in
fisubrs
mov
add
fistl
aas
pop
outsl
out
icebp
mov
mov
aas
in
dec
cmc
lcall
arpl
mov
aam
or
add
mov
mov
mov
jl
cmp
sbb
or
xor
imul
add
into
inc
inc
inc
sub
mov
gs
xor
push
ljmp
sbbl
push
sti
mov
sbb
cmp
xlat
rcrb
aam
test
sbb
push
scas
cmp
insl
add
xor
stc
inc
insl
or
cmp
aam
insb
lcall
loope
cltd
push
lahf
xor
fcoml
insl
dec
dec
shlb
adc
lods
arpl
sarb
jle
les
xchg
jne
push
push
push
call
leave
jno
dec
aad
hlt
sub
xchg
das
cwtl
mov
inc
dec
arpl
xor
lea
mov
dec
pushf
nop
jmp
lret
fstpl
scas
or
negl
push
pop
es
gs
cmp
push
cmpl
adc
clc
sti
cld
rcr
inc
sbbl
xchg
push
aad
xor
mov
xchg
adc
pop
gs
adc
loop
dec
hlt
in
push
mov
in
cmp
inc
cs
adc
jge
insb
aad
clc
adc
cmc
int3
popa
lret
push
mov
pop
mov
je
loope
sub
sbb
adc
or
stc
xchg
adc
cld
or
xchg
js
xchg
cmp
push
xlat
clc
movsl
push
jae
out
leave
lret
jl
sub
xchg
imul
fs
mov
jns
mov
outsb
mov
adc
in
mov
push
ds
cmp
cmovge
fadds
cwtl
sti
repz
sahf
mov
cltd
and
es
xor
mov
add
jo
lods
mov
jb
aam
jp
push
les
and
fcoms
jmp
jo
lahf
int3
aad
cmp
pop
jnp
repz
inc
addr16
inc
shl
int
divl
scas
aam
fcmovbe
cltd
and
add
add
lahf
out
xchg
push
or
rcll
or
scas
testl
lds
inc
aas
sbb
adc
cmpsb
pop
sbb
xchg
cmp
push
stos
xchg
pop
xchg
lock
imul
jns
pop
sbb
leave
arpl
fdivl
xchg
mov
movb
inc
mov
addl
pop
cmp
xchg
xor
push
push
outsb
xor
inc
arpl
ror
jl
push
adc
aaa
stc
jo
imul
stc
xchg
add
mov
out
sbbb
pop
cmc
dec
adc
mov
lods
sbb
test
movsb
dec
enter
shrb
popa
xlat
xor
or
sub
lods
xchg
loope
pushf
pop
js
pop
push
fildl
jns
imul
das
mov
icebp
mov
xchg
popa
dec
push
xchg
jb
ljmp
xchg
jae
shr
sti
imul
js
pop
mov
jns
or
xchg
and
cmpsb
xor
inc
or
push
aaa
dec
loop
sar
jne
sub
pop
mov
inc
sub
in
pop
mov
out
xor
add
mov
adc
arpl
push
mov
and
cmp
jl,pn
pop
ja
sub
push
ljmp
stc
cmc
int
pop
jae
fnstsw
fxch
jecxz
out
loopne
add
and
or
sub
push
dec
data16
jmp
in
cmp
inc
aas
xor
sbb
adc
jo
mov
lret
cmpsb
sub
sub
push
or
inc
mov
mov
test
int3
aam
ja
popa
mov
gs
loopne
shl
out
cmp
lock
add
fimull
inc
xor
popf
or
mov
cmpsb
push
in
addr16
inc
mov
test
xor
pop
dec
rcrb
out
sbb
jge
or
inc
dec
mov
push
es
nop
rolb
push
or
xor
into
test
sarb
cmp
mov
xchg
sub
loopne
fsubs
dec
out
cmc
daa
or
lcall
push
lahf
cltd
jecxz
pop
mov
pop
stc
inc
xor
lahf
out
dec
cltd
insl
add
sahf
push
rorb
mov
repnz
sbb
out
sub
sub
int3
fs
mov
and
xchg
pop
pop
mov
inc
jge
dec
sub
jb
xor
push
mov
sahf
movsb
mov
cmpsb
cmp
repnz
cwtl
cmp
cwtl
testl
scas
aaa
pusha
stc
inc
add
stos
mov
shll
test
xchg
fisubrs
push
push
and
cmp
cmp
dec
jno
cmpl
dec
sub
xor
jo
cmp
jmp
cmp
out
test
out
inc
inc
cmp
aam
xchg
gs
iret
inc
push
mov
sub
aam
cmp
rcll
add
data16
push
in
mov
sub
leave
xchg
mov
mov
pop
add
nop
mov
test
aas
jge
sub
mov
pop
jecxz
push
xchg
add
adc
cli
sbb
cmpsb
jge
or
and
mov
rclb
mov
int
adc
dec
and
xor
shlb
mov
and
xor
mov
pop
dec
pop
lretw
inc
and
leave
shll
cwtl
out
sbb
mov
dec
ret
jns
int
icebp
sbb
jb
int
and
mov
cmp
lock
movsb
pusha
and
fistps
xchg
cld
mov
push
add
add
adc
inc
bound
outsb
fwait
sub
jp
in
jmp
mov
dec
aaa
xchg
fwait
lret
mov
das
cs
rorl
in
ljmp
test
or
mov
jle
and
call
out
in
pop
mov
xchg
inc
dec
inc
lcall
addr16
stos
cmc
sbb
pop
mov
jno
xlat
inc
test
dec
movb
sbb
xchg
inc
loopne
jmp
add
sub
xchg
xchg
ret
xor
jge
mov
cmp
fwait
outsb
push
sbb
jp
adc
arpl
mov
ja
lods
mov
scas
int
loop
imul
adc
xlat
rcll
bound
mov
aam
lods
dec
mov
mov
mov
xor
sbb
pop
push
loope
repnz
clc
jne
sub
sbb
xor
dec
mov
push
adc
icebp
imul
mov
out
add
stos
pusha
test
sbb
cmpps
jle
pop
mov
inc
jge
xor
pop
fildl
rorl
inc
xor
jns
test
lahf
inc
mov
cmp
inc
shll
stc
loop
mov
push
into
jno
jnp
sub
dec
sbb
inc
sbb
mov
and
jmp
push
and
cmc
xor
rorl
pop
insl
fidivrs
push
push
sbb
icebp
shlb
push
iret
sbbb
notl
xchg
xor
pushf
lret
jle
fdivr
or
das
pop
fdivrs
jo
daa
ret
jns
cmc
xchg
cli
add
mov
inc
les
xchg
inc
mov
test
sbbb
mov
pusha
outsl
mov
stos
loope
cmp
dec
addr16
xchg
dec
jns
stc
mov
and
add
jmp
push
add
into
add
adc
pop
insb
push
mulb
fwait
sbb
subb
lock
sub
nop
and
je
lahf
js
in
jp
sbb
mov
cmp
sbb
mov
or
fisttpl
adc
sub
cmpb
adc
mov
push
in
test
mov
ficomps
or
iret
aas
sbb
mov
test
enter
mov
ficompl
adc
in
lahf
leave
psrlq
in
lea
add
cs
cmp
test
int
ja
cmpsl
inc
loop
dec
mov
and
in
cmp
pop
lret
or
ljmp
push
out
stos
sti
testl
dec
pop
xchg
mov
in
out
mov
push
xchg
clc
dec
pop
lods
sub
add
jo
add
xlat
sbb
in
dec
scas
push
cmp
add
std
pop
orb
and
pop
jo
add
scas
ljmp
push
adc
jns
bound
push
jle
shll
sbb
shrb
dec
lds
jg
loopne
arpl
loope
sub
jle
imul
ffreep
mov
and
cltd
jg
and
out
or
stc
mov
sbb
sti
or
ljmp
call
inc
stos
jb
adc
add
in
shll
mov
sbb
loope
in
dec
fcmove
mov
enter
mov
push
in
lea
data16
add
cmpsl
in
push
enter
clc
ret
orb
gs
shr
lahf
jb
add
mov
ret
dec
pop
repz
out
add
imul
testb
xor
jle
std
mov
jae
ret
mov
loope
movsl
icebp
mov
hlt
cmp
mov
frstor
fsubrs
add
cmp
scas
test
mov
push
daa
dec
add
sbb
mov
sbb
repz
stos
lods
je
cli
mov
sbb
adc
in
push
repnz
xchg
cmp
pop
test
sti
rcl
mov
out
jne
testl
jle
stos
out
inc
mul
and
jns
into
mov
push
add
push
fld
nop
xlat
testb
jns
xor
js
insb
fwait
cwtl
push
jns
rcrl
std
add
int
mov
pop
fnstsw
dec
cwtl
fists
push
push
bound
neg
adc
popa
or
dec
xor
mov
and
mov
or
dec
push
ret
lahf
arpl
movsl
adc
stos
sbb
sbb
push
cmp
pop
je
decl
and
cmp
gs
in
sahf
push
out
std
mov
or
shll
cld
call
push
cmp
dec
sub
icebp
sbb
notb
int3
std
pop
aas
mov
loope
in
test
loopne
mov
jns
cmovae
jb
push
loop
cmpsl
mov
