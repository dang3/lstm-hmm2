mov
push
aad
clc
cltd
cltd
xor
shr
mov
pop
in
xadd
xor
rcrl
in
add
jl
cltd
mov
in
mov
call
in
cmpsb
mov
push
pop
jns
cmc
cltd
ljmp
imul
dec
les
or
test
mov
ljmp
inc
jb
imul
into
xor
mulb
mov
pop
jnp
mov
jle
insb
arpl
inc
xor
cmp
xchg
lods
adc
rol
rcr
jecxz
dec
and
call
scas
pop
leave
stc
movl
pop
cmp
inc
adc
test
or
nop
push
and
call
jecxz
cld
push
and
rorl
pop
push
loop
or
rclb
sahf
push
pusha
mov
dec
mov
push
loopne
add
add
and
dec
jp
add
sub
mov
cmpsl
xor
push
test
inc
icebp
cmp
pop
dec
mov
push
xor
icebp
mov
adc
adc
sub
clc
addl
adc
data16
repz
rorl
push
inc
sbb
xor
pop
enter
sub
or
mov
out
aam
xchg
mov
xchg
and
scas
out
cmp
xor
and
adc
push
or
pop
and
out
or
mov
shll
add
nop
ret
or
lods
mov
andl
xchg
or
rcrb
stc
push
mov
popa
sub
fldcw
xchg
adc
imul
clc
dec
loop
xchg
push
icebp
adc
adc
mov
push
jmp
fbld
nop
mov
in
push
loop
leave
pop
in
sbb
fwait
loopne
inc
xchg
in
pop
inc
fdivl
push
jmp
aad
dec
or
mov
sub
mov
sbb
fcmovb
leave
lods
push
stos
dec
data16
movsb
sbb
sbb
ds
test
mov
aad
daa
fnsave
jle
xchg
push
mov
shrl
cs
pop
sarb
mov
push
push
test
or
pop
test
cmc
push
pop
xchg
loopne
sub
push
add
nop
mov
mov
cltd
xchg
rorb
dec
sarb
lahf
popa
dec
mov
sub
xor
fs
in
repz
xor
aaa
xchg
jne
sub
fadd
inc
out
aas
add
push
mov
mov
inc
and
adc
and
cli
xchg
adc
xchg
mov
test
inc
fildl
xchg
test
push
push
cli
mov
ret
mov
lds
es
mov
int3
fs
xchg
push
inc
xchg
pop
sbb
mov
ss
lods
pushf
lds
or
stos
sbb
mov
enter
dec
stos
add
or
rcrb
orl
into
xchg
fiadds
cld
sti
and
ret
push
mov
enter
dec
push
pop
or
sbb
push
scas
scas
mov
ja
ret
and
xchg
fwait
jmp
xchg
rcrb
or
jae
mov
adc
ret
scas
and
nop
inc
test
dec
and
sbb
push
mov
test
pop
pop
mov
pop
jmp
lea
mov
push
sbb
xchg
push
into
aas
jno
sbb
inc
cmp
jo
mov
stos
rolb
fiaddl
roll
pusha
clc
or
jb
sbb
lret
add
inc
pop
mov
xchg
xchg
cld
or
mov
pusha
insb
or
mov
push
mov
push
sbb
cld
push
pop
and
mov
aas
add
clc
xchg
inc
int
mov
xchg
cmpsl
popa
push
mov
jp
int
out
imul
ljmp
mov
mov
inc
mov
xchg
pop
add
scas
inc
or
mov
inc
les
push
mov
insb
fs
outsb
sbb
xchg
and
lods
inc
push
daa
cld
pop
add
lcall
hlt
sub
sbb
add
mov
std
xor
add
xchg
or
scas
cwtl
dec
xchg
out
cmpsb
mov
fimull
and
pmaxub
adc
cmp
pusha
std
mov
mov
or
adc
fdivrl
sub
push
and
stos
push
push
aad
pop
mov
mov
lret
mov
scas
mov
shll
or
push
sub
cmp
popa
lret
pop
mov
xor
xor
sbb
xor
sbb
push
inc
bound
inc
push
fs
into
sub
ss
push
incl
jns
mov
add
add
xchg
xchg
push
inc
xchg
insb
pusha
movb
cltd
sbb
lods
push
inc
add
fistpl
xor
je
gs
mov
sub
jns
shll
pop
add
repnz
stos
sbb
out
fcomps
fnstcw
add
mov
xchg
lds
cmp
lock
jnp
jo
mov
insb
inc
cmpsb
jae
xchg
shll
or
cbtw
fisubl
xchg
orl
movsb
sbb
ss
mov
mov
and
adc
inc
inc
out
xor
aaa
sbb
and
mov
mov
adc
push
mov
rcr
push
mov
int
jno
aad
cmp
pushf
xchg
bound
addr16
je
jmp
daa
ret
scas
imul
stc
testb
dec
jnp
stos
and
inc
pop
dec
cmp
and
pop
or
or
mov
es
lcall
orl
outsb
dec
out
xor
sbb
in
cmp
inc
inc
outsl
leave
adc
imul
jno
fwait
mov
cmp
arpl
inc
pushf
imul
insb
and
dec
sbb
dec
shll
sub
cli
cmc
cmp
scas
outsl
popa
ljmp
test
fmull
insb
inc
mov
mov
push
push
push
inc
iret
mov
out
movsl
movsb
stos
jne
fldl
scas
rolb
jmp
jmp
scas
das
cmp
adc
mov
xchg
ret
or
mov
cmpsb
out
aam
imul
or
jp
lcall
outsb
fstl
sbb
dec
je
lret
pusha
xor
into
cmpsl
imul
cld
add
in
or
jne
mov
sub
sbb
rcrb
sub
mov
movsb
leave
insl
pushf
adc
lcall
movsb
ds
nop
lret
addr16
out
cmp
mov
movsb
sub
inc
jae
imul
inc
sbb
add
nop
push
cmp
outsl
lods
mov
fcompl
cmp
cmp
loop
pop
scas
aam
xchg
sbb
add
cmp
adc
mov
aad
les
jnp
ficoml
inc
mov
inc
add
call
mov
lret
movsl
imul
lods
adc
in
sbb
adc
sarl
sub
mov
jns
xor
pop
insb
jb
pop
bound
call
lods
and
jbe
add
pusha
push
leave
jae
stos
scas
xorl
out
mov
and
imul
mov
test
mov
lds
jae
test
es
inc
jne
jae
pop
mov
cli
and
fs
mov
sub
xlat
cmp
jb
pop
fs
pop
test
mov
sub
lods
cmpsl
fsubrl
lods
cmp
inc
sahf
push
mov
call
fmuls
aam
lret
xor
cmp
xchg
shrl
in
add
xor
out
dec
andl
xlat
pop
int3
sbb
cli
sub
and
js
sbb
stos
jmp
mov
aam
fdivp
sub
call
shlb
fldenv
int
ret
movsl
mov
cld
jge
imul
int3
push
push
pop
ja
iret
insb
jge
add
mov
cmp
daa
jg
inc
mov
call
mov
cltd
mov
pop
lcall
inc
push
jmp
icebp
rcrl
jge
adc
lds
lcall
mov
aaa
test
or
add
in
lret
xor
sar
inc
push
shrl
cmp
out
neg
data16
inc
pop
pop
jnp
aaa
mov
push
jp
gs
jp
lahf
sbb
cmp
push
lret
lahf
jnp
cmp
xchg
pop
imul
in
push
int3
ds
sti
test
rorb
test
pop
int
sub
cli
bound
or
out
enter
test
or
int
ficoms
and
cwtl
shll
sbb
cmp
lods
or
jecxz
mov
push
and
enter
daa
out
inc
push
jp
jp
sbb
or
pop
data16
mov
jnp
hlt
shl
mov
or
shrl
or
cmp
jnp
xor
jb
dec
mov
scas
inc
xchg
fisubs
or
mov
sub
out
inc
out
das
mov
jno,pn
xor
mov
lcall
mov
sbb
pushf
pop
or
mov
mov
dec
icebp
jo
cmp
lock
je
lods
stc
test
lret
divb
icebp
pop
cmpsl
mov
and
mov
push
push
jo
sahf
sbb
stos
outsl
jb
popa
fisttpl
sbb
push
and
fimuls
sbb
add
loopne
or
pop
add
xchg
and
cmp
mov
mov
xchg
xor
jno
in
rcr
pop
dec
mov
faddl
push
pop
ljmp
std
push
push
jbe
mov
pop
push
add
cmp
and
imul
cli
or
lods
mov
cld
ret
loopne
dec
rclb
bound
cltd
fdivrl
or
jnp
int
pop
in
xlat
xor
sti
add
and
movsb
test
js
stc
adc
jo
packssdw
pop
movsb
xchg
lods
outsb
inc
push
loope
xor
leave
push
addr16
aam
and
mov
jb
rolb
stos
sub
into
mov
mov
adc
jmp
clc
fcoms
js
enter
sub
lret
sbb
cli
ret
pushf
lea
fdivrl
enter
sbb
pop
in
dec
mov
rol
cmp
pop
or
xorl
cmp
mov
test
fidivl
push
or
push
mull
aam
ja
mov
xchg
mov
cld
cltd
in
sahf
xor
loopne
jno
jg
sbbb
xchg
push
add
outsb
ret
call
bound
inc
dec
ljmp
sbb
inc
mov
sub
push
leave
push
xchg
decl
aam
push
testl
jnp
lea
cli
pusha
sub
hlt
push
enter
popf
xchg
dec
or
faddl
pusha
jnp
cmp
popa
xor
xor
and
xor
test
mov
xchg
cmp
insl
pop
dec
pop
push
cmp
adc
in
popa
lods
lea
inc
sbb
adc
ljmp
jecxz
iret
movq
mov
enter
mov
mov
or
andb
call
cmp
jno
inc
out
aas
out
dec
imul
pushf
push
push
dec
in
fidivrl
cmpb
scas
mov
movsl
mov
mov
mov
std
jle
jb
cmc
cmp
in
in
sub
sub
pop
mov
cld
leave
imul
mov
test
cwtl
les
popa
sub
lcall
lret
fsubp
les
dec
xchg
jecxz
mov
cmp
xchg
mov
sbbl
shrb
fistps
jecxz
xchg
lods
cmpsl
and
xchg
inc
sbb
je
movsl
idivb
scas
jg
jp
hlt
repnz
jmp
arpl
mov
lret
inc
movsl
cmp
jno
mov
pushf
fnstsw
lcall
fistpl
pop
pushf
push
pushf
repz
fsubs
out
jae
dec
lea
add
fistpl
scas
outsl
jle
cltd
lret
cmp
out
icebp
xlat
test
nop
jbe
les
insb
jmp
jmp
dec
cli
hlt
and
push
pop
nop
or
or
inc
leave
adc
inc
cmp
dec
dec
dec
outsl
cmp
outsl
lods
imul
hlt
cli
mov
mov
pop
testb
cmp
icebp
xor
je
inc
das
pop
cmp
inc
inc
mov
jne
imul
sbb
lcall
aam
xor
add
outsl
outsb
andb
pusha
ret
lahf
jno
inc
push
cmpl
je
in
adc
xchg
pop
cmp
insl
inc
popl
inc
push
test
push
pop
testl
cmp
lret
ja
cwtl
xchg
pop
push
fwait
mov
jae
dec
out
mov
mov
xlat
insl
pop
mov
test
pop
mov
arpl
sbb
int
xor
fldcw
repnz
push
xchg
pop
das
mov
sbbb
ja
es
loop
lret
sti
es
pop
or
insb
xchg
les
xor
dec
mov
jb
sub
xchg
xchg
xor
push
icebp
stos
add
icebp
in
jnp
sbbb
pushf
pop
jl
sub
or
sar
pop
hlt
loopne
add
int3
mov
shrl
mov
in
adc
sbb
mov
jl
xchg
arpl
jo
mov
dec
dec
test
lret
xchg
and
jns
push
js
popa
xchg
ja
mov
icebp
jmp
mov
es
inc
insb
loop
iret
lock
shrl
andnps
jecxz
jl
addr16
hlt
cmp
jecxz
popa
or
test
adc
sahf
add
ret
pop
loop
jg
sbb
adc
inc
add
xchg
int3
decb
shlb
addr16
pop
lcall
repz
cmc
adc
jb
ret
or
push
push
notl
in
pop
push
in
jmp
arpl
sub
lds
dec
sbb
aam
idivl
test
ljmp
imul
sbb
pop
and
xchg
dec
jns
cwtl
cmpsl
and
xor
xchg
mov
das
push
xor
pop
pushf
in
mov
dec
gs
add
les
test
cmpsb
and
fisubrl
sbb
out
sbb
sbb
sub
mov
je
sub
xorb
xchg
filds
adc
inc
inc
mov
push
insb
sbb
test
adc
leave
cmp
pop
into
ss
fs
add
push
das
jbe
push
incl
adc
popf
mov
dec
xor
vpcomw
shll
nop
int3
outsb
push
xchg
push
test
nop
test
or
fsts
in
mov
imul
mulb
mov
sarl
xor
or
jo
out
fld1
jp
std
pop
xchg
adc
adc
add
enter
dec
cli
or
jp
jae
push
and
mov
in
mov
jl
cltd
and
add
jns
jg
mov
inc
cmpsl
xor
push
daa
pop
push
mov
js
jo
cmpsb
mov
mov
gs
jae
jp
aaa
dec
jp
jg
sbb
push
js
and
dec
lret
inc
in
dec
jge
xor
movsl
jae
sarb
mov
out
adc
push
fsubl
lds
es
ss
notl
fstpl
mov
sub
subl
dec
std
sub
mov
lret
dec
in
pop
out
cli
mov
sbb
add
ss
mov
inc
push
mov
test
xor
pop
push
jp
sbb
xchg
jnp
outsb
fimuls
mov
mov
popa
cwtl
fs
jne
je
xor
dec
punpckldq
xor
orb
icebp
push
nop
pop
pop
fidivrs
push
mov
popf
xor
or
fisubrs
out
cmp
cmpsb
push
out
test
inc
das
or
divl
test
enter
inc
data16
cmp
mov
or
adc
iret
mov
jne
lret
hlt
lahf
sub
sub
push
pop
mov
dec
or
bound
sbb
jmp
pop
mov
aad
fwait
les
cli
arpl
pop
and
jnp
inc
sbb
stos
pop
das
jmp
hlt
add
or
sub
push
sbb
and
leave
xchg
mov
sahf
cmp
cli
gs
fldenv
cmp
dec
cld
dec
or
mov
ret
insb
mov
ds
push
pinsrw
clc
out
pop
popf
mov
fildl
int3
xchg
out
or
aas
mov
lahf
addb
das
dec
push
fwait
mov
or
adc
inc
shrl
mov
push
lock
mov
jle
fwait
inc
clc
aaa
inc
xchg
sub
jno
je
fucom
pop
jnp
dec
stos
in
push
ljmp
jge
lret
jge
jmp
stc
lods
test
pop
mov
push
push
lcall
cli
daa
dec
loopne
jo
jg
jp
loope
js
lea
push
cltd
pop
add
icebp
shl
nop
js
movsl
addl
das
or
scas
jp
scas
inc
lret
xchg
and
and
ljmp
jne
push
mov
lock
or
and
les
jmp
inc
out
dec
icebp
enter
cmpsb
shll
pop
sub
lcall
aad
xchg
push
jb
imul
jne
mov
mov
mov
cltd
or
push
jecxz
dec
mov
int3
aam
push
lret
sub
add
cmc
mov
imul
nop
pop
mov
leave
and
ret
sbb
adc
scas
incl
or
popa
xchg
aaa
test
xor
iret
jecxz
in
mov
dec
pop
xchg
xor
cwtl
jo
jne
xor
minps
leave
xchg
je
div
pop
cmc
sbb
mov
xchg
add
cmp
cli
popa
lret
or
adc
hlt
xor
jl
push
jmp
xor
out
mov
test
add
mov
es
sbb
sub
popa
or
fidivs
jo
jge
or
and
mov
cld
pop
inc
xchg
push
xchg
fiadds
scas
and
into
cld
mov
rcll
jle
gs
pop
fcmovnbe
pop
jl
push
adc
nop
mov
lcall
pusha
sub
rclb
test
fsubs
mov
repz
and
loope
loopne
mov
pop
mov
les
gs
loope
xchg
or
ficoml
sbb
xor
lods
loope
push
mov
das
lret
cmc
test
adc
nop
cs
pop
repnz
sti
cmpsb
loope
dec
arpl
inc
mov
xchg
js
xlat
mov
sub
test
mov
cld
loope
mov
sub
in
shl
imul
jns
xchg
mov
mov
call
cmp
jbe
ss
adc
jl
int3
lods
push
sub
fdivl
stos
sub
inc
mov
sub
cmp
xchg
push
pop
lcall
fs
inc
aaa
lods
inc
xchg
sub
test
shr
cld
repz
or
sbb
and
and
mov
ret
and
cwtl
jno
test
ljmp
loopne
cmpsb
mov
cmc
sub
mov
cmp
pop
or
aad
addr16
push
xchg
cmp
xor
insl
jns
fbld
jl
mov
lahf
push
dec
push
sti
test
test
and
dec
test
insb
leave
call
mov
lahf
push
pop
subl
or
mov
mov
push
icebp
lahf
mov
jmp
mov
dec
xchg
cwtl
icebp
jle
cwtl
inc
push
xor
popf
mov
cmpsl
sahf
lea
icebp
inc
xchg
and
pop
ret
inc
push
cmpsb
pop
lods
adc
mov
call
add
mov
loop
jno
pusha
or
mov
jecxz
sbb
push
mov
mov
cmpsb
push
int
frstor
sbb
loope
cltd
aam
mov
popf
mov
xchg
iret
shlb
fcompl
sub
mov
lock
movsl
ror
cld
lods
xchg
test
in
adc
enter
and
fstps
cmpsl
das
pushf
mov
jge
faddl
lahf
xchg
dec
ja
cli
jo
dec
pop
pop
out
dec
cmpsl
iret
les
scas
shlb
mov
or
loope
clc
daa
cmp
dec
imul
xchg
loop
lcall
mov
jmp
daa
test
sub
fs
movsb
adc
hlt
pop
int3
adc
divl
pop
mov
cmp
ds
adcb
or
sub
push
insb
int3
in
ficompl
ds
xlat
xchg
rcll
ss
scas
cmc
or
negl
mov
repnz
nop
jne
subb
aas
enter
sub
das
mov
out
test
jb
js
imul
push
adc
pop
call
add
fnsave
enter
arpl
and
mov
int
sbb
pop
data16
jmp
fucomp
fimuls
xchg
mov
sub
xor
pop
mov
jne
ss
in
or
sub
test
cmp
xchg
inc
mov
lahf
popa
jne
ss
mov
ret
jo
inc
jle
ret
mov
add
test
mov
sbbl
inc
cmp
sbb
je
mov
inc
pop
lock
test
xor
adc
inc
cs
arpl
mov
ja
jne
push
fidivs
jae
test
sbb
sbb
sbb
xchg
in
mov
cmp
aad
stos
add
xchg
std
or
sbb
inc
mov
nop
xchg
ficomps
movsb
test
cmp
cmpb
lock
out
or
lret
xchg
lret
clc
je
mov
movsl
push
adc
sbb
mov
jo
add
add
xchg
outsl
std
mov
inc
in
xchg
lds
mov
movsb
vstmxcsr
push
cmp
js
xchg
jo
fs
jne
les
test
jp
shlb
out
and
icebp
xchg
or
mov
xchg
ret
xchg
decb
gs
out
aaa
xor
xchg
lods
orb
xchg
jl
pop
mov
inc
es
sbb
sub
xchg
int
or
sti
push
lret
les
lea
pop
dec
mov
or
addr16
sub
add
icebp
sbb
stos
out
push
loope
mov
add
mov
jl
insl
add
add
lods
leave
sub
inc
push
js
pushl
add
xchg
mov
add
loop
xchg
aaa
in
cs
pop
fstl
loopne
push
rorl
out
scas
adc
mov
lcall
mov
xor
jbe
std
jnp
inc
adc
into
adc
shll
enter
pop
pushf
mov
push
xchg
out
pop
sti
push
xchg
push
mov
jno
push
test
fldt
aaa
aam
jg
ds
xor
sbb
clc
jo
leave
testl
mov
and
insb
cmpsl
jne
pop
cs
lods
sub
sahf
dec
rol
or
mov
sub
or
xchg
pop
xor
or
into
sbb
aas
xor
and
mov
inc
and
pop
ds
lds
fwait
mov
in
mov
mov
jl
cmp
xchg
testl
fwait
mov
xor
push
in
push
xchg
jmp
sar
xor
shlb
push
or
jl
jb
cmpsl
ljmp
out
jo
jecxz
adc
aas
dec
push
pop
xchg
fcomps
fs
iret
std
and
cmc
pop
nop
aaa
and
inc
mov
ja
push
test
jp
dec
lret
std
sbbl
lret
pop
out
jne
cwtl
sbb
cmp
nop
adc
rcll
inc
in
lcall
xor
movsl
fsub
cmp
lods
fbld
xchg
iret
ret
pop
jo
xor
push
jae
jg
sarl
gs
ljmp
fists
push
das
les
adc
mov
inc
xor
or
push
aad
or
enter
nop
jmp
mov
fstpl
jl
cmpsl
repz
ret
or
sub
cltd
imul
in
pop
add
sarb
xchg
pushf
mull
ret
fs
shrl
cmp
fcoml
add
movsb
pop
push
adc
sbb
iret
add
or
cmp
xor
adc
jnp
jecxz
fsubl
mov
out
test
sub
xchg
inc
mov
push
pop
in
test
push
inc
xchg
push
loopne
jecxz
pusha
sub
adc
dec
rorb
mov
int
jle
sbbb
add
mov
mov
movsl
jnp
adc
aaa
xchg
cvtdq2ps
rclb
and
xchg
jns
lods
xchg
pop
sub
sub
mov
cmpsl
in
mov
iret
arpl
lcall
or
das
testl
jbe
dec
dec
popl
pusha
xor
mov
subl
and
movsb
adc
mov
xchg
mov
mov
mov
enter
inc
outsl
jle
mov
out
sbb
xchg
jae
loopne
mov
xchg
out
jmp
in
cmpsb
in
jbe
mov
push
push
xor
outsl
and
mov
outsl
imul
push
cltd
data16
cli
xor
push
jno
scas
jmp
cmp
lock
jbe
clc
jge
push
sbb
movb
mov
pop
popl
pop
jg
adc
lods
arpl
sub
mov
lods
cli
movsb
dec
stos
xchg
inc
imul
movl
dec
frstor
jno
mov
lods
xorl
hlt
adc
add
ljmp
movsb
mov
je
fucom
lahf
mov
sbb
in
cwtl
movsl
vmulpd
mov
add
jb
jp
sbb
xlat
jne
xchg
jnp
in
ds
std
clc
pop
inc
les
filds
nop
decl
imul
jno
aaa
mov
sbb
adc
xchg
fstl
add
add
dec
sub
and
lret
scas
loopne
xchg
push
movsl
fnstcw
insl
adc
aaa
pop
rorl
enter
mov
imul
fcoml
imul
loope
loopne
xor
sbb
pop
add
or
mov
add
jbe
cli
sub
js
je
mov
inc
ljmp
xchg
aas
inc
pop
lds
lahf
into
inc
ret
daa
aas
orb
in
lods
xor
xchg
insl
int3
push
lea
dec
xor
movsl
adc
mov
jne
fadd
cmpsl
bound
sub
and
in
mov
roll
subl
mov
inc
or
cltd
out
mov
jg
and
or
sbb
stos
mov
mov
scas
dec
or
sti
lret
and
pop
pop
sbb
mov
sbb
jmp
mull
in
jne
stos
push
xor
fistl
int3
out
sahf
adc
int
aas
dec
les
addr16
jg
icebp
mov
fadds
adc
es
out
dec
adcl
pop
out
dec
sbb
push
decb
test
cld
call
lock
fwait
sub
std
shl
cli
jge
fnstcw
cmp
insl
arpl
ja
clc
lock
mov
xchg
lock
mov
xor
push
out
pop
push
iret
mov
or
mov
ljmp
in
jg
je
mov
xchg
fcmovne
iret
pop
int
js
icebp
or
pop
out
sub
cmc
lods
mov
iret
inc
jg
decl
mov
idivl
idivl
cmp
in
dec
fcmovne
enter
cli
jo
psrlq
cld
jns
cmc
lret
pop
and
sbb
cmc
call
lahf
cld
fs
mov
insl
lea
sub
es
test
fidivl
notl
cs
jae
repz
sti
push
fwait
ret
sub
jno
mov
xchg
out
and
lds
pop
aad
jle
iret
jle
push
hlt
scas
pop
mov
adc
xor
push
push
rcrl
shl
mov
jno
fisubl
pop
cli
pop
cld
mov
mov
stos
jne
aad
mov
hlt
inc
mov
sub
xchg
loopew
iret
dec
pop
inc
xchg
nop
xchg
mov
ret
aad
stos
jecxz
stc
jo
xchg
into
cmpsl
pop
call
mov
mov
loop
ds
inc
mov
push
out
or
cmp
jle
mov
xor
rorb
lea
sbb
push
ror
das
inc
adc
int3
push
out
push
rcr
push
call
mov
fldt
jge
leave
push
ss
outsb
test
mov
loopne
or
jmp
xor
mov
insl
mov
sbb
or
jnp
inc
dec
adc
iret
aad
inc
pop
bound
xchg
icebp
fisubrs
cmp
fwait
mov
outsl
xor
xchg
or
outsl
fildl
jg
cmpsl
mov
mov
sub
pusha
sahf
jl
pop
gs
cmpsl
mov
js
mov
lcall
inc
fwait
mov
into
fcomps
in
cmpsb
xchg
mov
add
mov
sub
sub
imul
ds
or
inc
scas
mov
sub
inc
xor
rolb
xchg
call
jb
lock
leave
decb
sub
daa
push
cwtl
mov
or
filds
mov
pandn
push
add
bound
popl
or
pop
jle
or
stos
xor
inc
shlb
and
aas
test
push
sub
ret
add
ljmp
pushw
lret
xchg
js
mov
lods
icebp
cli
jle
enter
jnp
pop
test
inc
sub
mov
clc
mov
sub
mov
fwait
add
xor
push
test
jmp
int3
fidivs
sbb
repnz
jbe
push
out
cli
add
mov
imul
jmp
dec
mov
aam
lret
ret
in
fwait
push
scas
pop
pop
add
hlt
cmp
jp
xchg
data16
jae
hlt
in
stc
int
sarl
lahf
out
out
pop
cmc
aam
or
mov
mov
jg
imul
ficomps
inc
sub
leave
xchg
mov
adc
out
outsl
dec
sub
sahf
mov
dec
push
insl
pop
push
mov
cs
fiadds
push
push
into
cwtl
pop
ja
test
ja
les
into
fistpll
jne
jo
loope
hlt
sbb
out
sub
jo
fcoml
loop
mov
gs
cmc
pop
mov
jge
jecxz
mov
repnz
scas
adc
dec
ficoms
mov
outsl
aad
mov
int3
pop
out
mov
pop
adc
inc
lret
cmp
outsb
insl
int3
jp
dec
es
jno
cs
int
mov
dec
stos
mov
int
fidivl
into
pop
hlt
jg
popf
jmp
sub
ja
mov
cs
cli
fcoms
cmp
aam
ja
test
dec
sub
sub
lret
outsb
in
or
shlb
popf
cmc
xlat
mov
xchg
fs
stos
aad
sub
mov
in
lods
jl
push
xchg
mov
ja
mov
out
fucomp
adc
clc
out
inc
lret
aaa
imull
xchg
mov
add
xchg
ds
into
hlt
xor
dec
jbe
mov
out
jmp
inc
lds
ja
mov
ja
fbld
cmp
je
push
hlt
outsl
pop
push
lahf
and
push
les
mov
outsb
js
insl
popf
jmp
cmp
roll
movsb
ret
sbb
shrb
or
adc
pop
sbb
push
add
or
sub
loopne
add
add
sub
sbb
insb
pop
cs
outsl
xchg
je
adcl
or
or
add
lock
or
inc
andl
rclb
push
loopne
or
dec
and
lea
imul
movaps
cmp
rolb
push
loopne
add
or
ror
pop
test
outsl
or
mov
mov
ds
add
lahf
sub
pop
jle
sbb
cli
aaa
int
sbb
mov
sar
add
sahf
sbb
mov
adc
fimuls
pusha
mov
ret
cmp
xor
test
sub
cld
pop
rcl
icebp
in
push
icebp
outsl
imul
xchg
xchg
in
clc
jp
jne
sti
shlb
mov
xchg
xor
setns
mov
xor
mov
out
fs
sbb
popf
sub
divl
lret
imul
cwtl
mov
mov
clc
test
or
fldl
mov
ds
ret
adc
or
test
test
loope
aam
lods
std
mov
xchg
fists
dec
add
mov
mov
jl
sbb
inc
dec
sti
test
faddp
sti
rorb
ljmp
jg
and
xor
test
add
xor
adc
push
pop
mov
sub
int3
imul
enter
and
jo
cmp
into
push
sahf
out
cli
push
insb
xor
jge
in
jbe
mov
dec
push
mov
mov
mov
je
das
jge
xchg
mov
cld
jge
sbb
inc
mov
mov
sti
inc
ret
imul
jb
jl
pop
dec
lret
sub
pusha
int
movsb
pop
mov
adc
inc
dec
adc
call
out
inc
mov
andl
lret
inc
xor
add
scas
ss
jp
inc
fistpl
loop
and
pop
sub
mov
or
pusha
out
adc
sbb
test
dec
fistps
out
scas
pop
cld
adc
imul
jle
cmpsb
mov
ficoms
das
outsl
mov
dec
pop
sub
xchg
mov
lds
sar
jo
xlat
pop
sub
fmull
push
push
dec
fbld
sbb
test
inc
outsb
fwait
rcrb
sbb
sub
dec
movsb
pop
jl,pt
xchg
and
add
out
test
mov
and
loope
ja
jecxz
add
pop
add
and
fwait
enter
lds
je
cmpsb
outsb
lcall
mov
or
jmp
dec
xchg
jb
xlat
movsb
rclb
stos
fnsave
and
gs
pop
add
mov
in
xor
cmc
pop
jae
fwait
jb
xchg
aaa
mov
cwtl
jle,pt
cmc
pop
fisubrs
add
push
jg
loopne
sub
sub
cld
cmp
fistpll
mov
je
outsl
or
ja
pop
pop
cld
int
repnz
cs
pop
add
fdivl
dec
mov
pusha
push
std
pushf
xlat
mov
push
into
jmp
cld
xchg
sti
jno
xchg
push
xchg
jmp
rcrb
cmpsb
xor
imul
xor
mov
out
imul
jns
pop
test
outsl
fnsave
es
dec
mov
pop
fucom
or
sbb
xor
fsubrl
fucomi
mov
cmp
inc
aas
in
push
insb
xor
and
push
pop
mov
cmp
fildll
clc
mov
stc
shll
shlb
lods
fcmovnu
loope
xor
inc
xchg
push
es
sbb
out
pop
out
insl
sarb
fdivl
jno
dec
mov
loope
test
xchg
inc
mov
mov
pop
insl
jg
or
andl
ficompl
out
cmp
lock
lods
repz
xlat
jg
into
jns
push
pop
xor
popa
stos
cli
arpl
gs
lods
fnstsw
mov
dec
or
pop
inc
pop
jb
jnp
mov
push
inc
hlt
fildll
popf
add
scas
jo
hlt
icebp
out
mov
aaa
mov
pusha
sbb
cmp
push
xor
lock
scas
enter
leave
aam
aad
inc
popa
test
mov
or
pop
fimuls
push
sbb
cmp
inc
ffreep
xchg
mov
test
cmpsb
jl
mov
sahf
push
xlat
cltd
cltd
sub
cmp
fistps
fidivrl
cmpl
stc
sbb
lods
and
imul
push
cmp
in
add
loop
mov
stos
xchg
mov
into
mov
push
cmpsl
dec
jno
push
in
or
push
mov
inc
inc
sub
pop
mov
xchg
jl
adc
cli
mov
icebp
aas
shlb
cmp
or
push
xchg
inc
xchg
imul
std
pop
mov
push
lock
pushf
ja
hlt
daa
xchg
jne
dec
fildll
popa
aam
inc
add
mov
push
mov
sub
adc
adc
xchg
mov
or
inc
in
daa
mov
jl
popf
imul
jbe
mov
and
mov
lret
jmp
js
leave
push
inc
pop
icebp
push
sub
add
mov
js
mov
xchg
test
xor
mov
mov
or
jae
les
add
in
pop
jne
mov
and
ds
cld
pop
popf
and
std
push
xor
loope
xor
sub
stos
xorl
clc
dec
cltd
cld
sbb
jl
loopne
sub
fisttps
jmp
nop
in
sub
movsb
rorb
loope
lret
adc
ljmp
sbb
adc
js
mov
push
xor
fimuls
inc
mov
andb
mov
adc
cmp
and
push
pop
mov
cmp
xor
lds
push
outsb
xchg
or
cltd
imul
sbb
jg
or
and
xor
sbb
clc
int3
sub
cmp
push
sub
lahf
lods
pop
sbb
mov
imulb
mov
or
push
mov
mov
sahf
dec
xchg
adc
and
inc
ss
loop
or
xchg
mov
and
push
xchg
ficoms
add
pop
mov
mov
fimull
dec
popa
dec
aas
pop
mov
push
in
jb
lret
xchg
jb
mov
sarl
nop
pop
sbb
xchg
xchg
cmp
sbb
pop
imul
sti
mov
cmc
aas
xchg
pop
cmp
imul
outsb
pop
dec
adc
or
pop
pop
arpl
insb
mov
mov
int
ret
out
das
lret
xor
outsl
aad
jbe
cmp
nop
dec
jp
inc
fists
int3
in
mov
inc
test
xchg
jne
jns
dec
bswap
int
mov
push
std
mov
cmc
and
xchg
push
daa
gs
outsl
mov
xchg
cmc
push
mov
xor
pop
and
dec
ja
mov
add
addr16
out
scas
sti
push
jle
sub
lahf
push
scas
pop
sub
lcall
mov
mov
sub
xor
sarb
out
jg
push
inc
inc
pop
lock
arpl
in
cmp
test
ret
xchg
pop
add
push
push
sub
or
ficoms
iret
xchg
add
dec
and
pop
bound
enter
dec
lcall
sub
adc
nop
jg
mov
iret
push
push
sub
cmp
xchg
cmpsb
ficoms
add
jecxz
sbb
fwait
enter
mov
push
pop
mov
jecxz
sub
push
cltd
popf
mov
arpl
lods
sbb
sbb
cmp
push
insl
neg
imul
add
aam
aam
cli
or
int3
outsl
adc
rorl
or
add
loopne
scas
push
mov
jnp
push
inc
fmul
ja
pop
ret
sbb
xor
cltd
loop
lods
or
or
std
inc
rorl
shrb
repnz
and
jcxz
std
movb
dec
fstpl
mov
mov
mov
repz
stos
push
decl
xorb
in
push
pop
xchg
xor
xor
mov
sbb
sub
add
adc
stc
sbb
aam
clc
loopne
cli
adc
dec
cmp
inc
mov
push
lret
ret
std
inc
sbb
mov
out
jg
jmp
cmpsl
adc
dec
cmp
fimuls
out
xor
jb
hlt
shrb
dec
hlt
sub
dec
sub
stos
pop
sbb
outsl
lret
les
sub
ja
push
pop
xchg
out
addr16
and
push
ds
xor
adc
les
inc
jmp
lea
aam
negl
and
jg
cmp
mov
xchg
mov
insb
lods
lret
add
dec
rclb
pop
scas
and
add
push
pop
mov
jle
cltd
and
in
test
adc
lahf
shrb
jne
sub
jecxz
lea
mov
outsb
aaa
repnz
lretw
jb
pop
jne
call
sub
push
sub
inc
mov
xchg
add
arpl
mov
stc
xor
mov
adc
cs
jge
clc
push
pop
adc
shl
mov
sbb
push
xchg
pop
xchg
roll
or
mov
dec
sbbl
icebp
lods
loopne
cld
add
enter
pop
std
out
push
cmc
test
xor
rcrb
gs
dec
push
cmpsb
dec
mov
fistpl
lock
sbb
iret
notb
std
scas
or
in
fwait
nop
sub
mov
mov
dec
or
mov
daa
movsb
fcmovnbe
dec
mov
jne
ss
lahf
psllw
fwait
addr16
xchg
stos
push
sbb
shlb
mov
dec
in
mov
outsb
test
jp
outsb
gs
lods
xor
xor
or
test
xchg
dec
enter
push
or
xchg
push
outsl
out
popa
in
enter
stos
pushf
stc
push
int
push
lret
lods
cmpsb
in
dec
movsl
sbb
mov
and
and
ljmp
inc
jns
cli
ss
int
scas
push
loop
mov
fisttps
fsubl
in
cmp
scas
xchg
je
mov
add
fsubr
mov
or
mov
pop
inc
shll
outsb
push
fbld
loope
mov
jnp
fnstsw
adc
xchg
push
stos
call
hlt
sbb
into
ljmp
sar
testb
icebp
subl
or
andl
stos
lods
push
inc
shl
sbbl
jecxz
sub
fwait
ljmp
aaa
mov
xchg
sti
cmp
lds
repz
xchg
sti
daa
mov
pop
cli
cmpsl
jb
lock
mov
hlt
add
test
push
pop
test
scas
inc
mov
push
mov
xchg
movsl
mov
add
inc
lcall
or
xchg
out
xchg
pop
test
and
dec
pop
test
sub
xchg
push
outsl
gs
mov
ret
hlt
push
div
push
div
push
push
repnz
mov
xor
jne
js
fidivs
push
xchg
in
xchg
lods
and
loop
push
mov
sub
fcoml
jmp
dec
push
out
pop
xor
aas
lods
dec
inc
out
inc
pop
inc
cmp
pusha
jbe
mov
dec
mov
and
cs
gs
and
cmpsl
nop
push
stc
div
and
ret
dec
sub
mov
es
lock
ja
push
fsubrl
sub
mov
mov
jecxz
test
mov
xchg
lods
sbb
push
mov
or
ret
push
mov
out
mov
fildl
mov
pop
cmp
xor
movsb
and
icebp
aaa
mov
movsl
std
lea
inc
jbe
mov
mov
push
insl
addl
mov
fisubs
je
test
sbb
rcr
ss
je
sub
repnz
sub
push
xchg
dec
dec
lods
jmp
jle
jb
in
cli
mov
rorb
out
insl
xchg
xor
sub
jcxz
pop
sub
mov
push
je
push
idivl
stos
push
out
aad
push
push
or
dec
lods
xchg
out
cli
ffreep
or
jmp
xchg
daa
loop
jge
dec
out
in
pop
popa
out
jmp
sahf
sub
sbb
subl
lcall
adcb
or
mov
xor
push
cmp
mov
addr16
ljmp
out
addb
inc
cld
cmp
out
and
test
lods
subb
xor
mov
pushf
push
mov
inc
xorb
push
and
stos
add
adc
subl
fstpl
out
sbb
sub
mov
loope
loopne
sub
jbe
fisttps
pop
sub
or
test
mov
mov
jecxz
pop
cmp
jmp
push
fidivrs
xor
aas
mov
jge
xchg
lods
jne
inc
lcall
in
out
scas
fistps
ja
fnstcw
or
scas
je
fbld
xchg
int
jae
repz
loop
pop
adc
jge
xor
adc
daa
mov
imul
pushf
test
loop
jp
cmp
sbb
insl
scas
push
mov
pop
jp
orl
jle
dec
cmp
shrl
imul
iret
add
sbb
fisttpl
in
cmpsl
fildl
push
outsl
mov
sbb
or
and
pop
rolb
pop
jp
scas
lret
pop
mov
sarl
dec
lea
adc
adc
xchg
or
sbb
push
xor
mov
dec
popf
sbb
mov
xchg
or
xchg
jb
and
out
ret
rcrb
jnp
mov
mov
stc
arpl
dec
sbb
sahf
movsb
mov
test
iret
subb
std
xchg
add
jp
stos
or
loop
popf
add
cmpsl
xlat
push
cmpb
adc
cmp
or
sbb
adcb
jecxz
mov
sbb
jne
xor
sbb
cmpb
add
pop
push
js
loopne
sbbb
out
push
add
sbbb
lods
add
rorb
push
jo
rorb
mov
push
inc
daa
shlb
outsb
push
clc
or
cmc
add
jge
mov
push
mov
rcrb
ficompl
repnz
adc
hlt
aam
mov
mov
int
imul
sahf
dec
fnstcw
push
sar
imul
dec
pop
mov
xlat
pop
hlt
je
pop
mov
sbb
inc
lods
frstor
cmp
xchg
xchg
mov
jge
dec
mov
mov
mov
cltd
fnstsw
insl
dec
ftst
out
push
fists
dec
pop
out
popf
aaa
xor
cld
mov
ret
in
xchg
lods
jbe
push
in
push
pop
stc
cmpsb
repz
sahf
movsl
sub
xchg
stc
mov
cmp
sahf
xlat
pop
repnz
ja
add
inc
mov
scas
jno
push
xchg
outsb
sbb
stc
or
mov
sub
scas
out
xchg
inc
shl
mov
or
jo
jns
inc
leave
call
arpl
inc
xor
out
popa
inc
mov
mov
gs
xor
clc
sub
adc
rcrl
pop
addr16
push
in
fistps
mov
sbb
fsubrs
push
jbe
xchg
inc
ret
mov
cmp
mov
jne
sbb
and
cmp
ja
jno
daa
in
mov
das
inc
scas
adc
scas
out
sbb
aad
jp
and
call
test
add
pushf
aam
out
rcrl
pop
jle
inc
out
push
scas
iret
insb
mov
fnstenv
lea
es
jmp
adc
lds
xchg
clc
jmp
ljmp
adc
mov
pop
std
popf
std
es
ror
insb
aam
lahf
sarl
jle
cmc
fldpi
and
inc
sbb
push
data16
enter
mov
orl
js
mov
pushf
repz
leave
mov
rcll
jns
imul
loopne
adc
sbb
cltd
cmp
push
mov
xchg
pop
cld
cltd
sbb
imul
adc
movl
mov
and
mov
pop
mov
mov
adc
push
inc
mov
mov
sti
or
cld
jae
inc
mov
pop
outsb
sbb
popf
cmp
and
xor
xchg
inc
dec
sti
out
push
mov
into
adc
mov
lret
sbb
leave
lock
jbe
psllw
sti
rcll
dec
push
insl
iret
daa
jbe
je
leave
or
lret
jp
test
jmp
push
rclb
pop
pop
add
jns
jnp
and
outsl
dec
outsb
test
add
pop
lods
mov
lods
cli
loopne
xrelease
jecxz
mov
jb
mov
inc
test
lret
icebp
cmp
add
push
xchg
mov
sahf
push
xor
mov
add
or
sbb
lcall
sahf
in
sahf
aad
cmp
ja
bound
ss
pop
xchg
sbb
and
aas
ds
dec
dec
pop
lds
or
leave
xchg
sub
pop
dec
xchg
push
inc
push
xchg
mov
sub
xor
pop
lret
adc
mov
mov
ja
fstpt
xor
jmp
sub
inc
pop
test
das
inc
xlat
insb
shl
andb
cmp
pop
and
sbb
pop
push
add
shlb
push
push
inc
jl
cmp
xor
xorl
or
cmp
mov
jae
mov
faddp
jecxz
mov
scas
inc
imul
mov
pop
mov
dec
adc
cld
pop
shrb
jno
je
hlt
cltd
int3
jbe
and
in
mov
inc
popf
cmp
roll
and
jne
int3
jp
pushf
pop
sahf
jmp
loope
int3
cld
in
icebp
sti
xchg
dec
fldt
pop
sbb
mov
jl
sub
out
lock
movsb
jle,pt
cmp
lods
testb
dec
dec
in
adc
dec
les
mov
mov
mov
and
mov
sbb
rcl
jae
xor
dec
jg
pop
mov
and
lock
iret
cmp
lsl
fsubs
add
cmp
push
mov
add
cwtl
data16
mov
cmp
je
jl
jle
xchg
adc
popf
sub
mov
add
pop
daa
mov
test
test
cmp
das
jno
cmp
pushf
jmp
xchg
xchg
hlt
mov
lock
in
sub
push
jle
out
cmp
mov
pop
pop
xor
repnz
ljmp
outsl
repz
xchg
cs
repnz
jno
stc
pop
into
loop
pop
cmp
dec
mov
bound
iret
adc
popa
lcall
cmp
cmpsl
pop
jne
cld
int
outsb
add
movsb
test
out
movsb
call
repnz
inc
sbb
and
and
mov
xchg
adc
add
loope
and
dec
inc
repz
pop
addr16
icebp
dec
mov
ret
dec
lock
sbb
dec
mov
adc
insl
jge
scas
cmp
cmpsl
mov
mov
testb
stos
repz
push
sbb
adc
lret
test
or
inc
and
jl
ss
icebp
enter
jmp
es
mov
jns
sbb
imul
and
movsb
aas
lret
sbb
jae
call
cltd
stc
into
sbb
pop
xor
in
push
out
sub
movsl
inc
mov
inc
mov
cmp
jl
jle
movsb
sti
cmc
or
mov
das
push
int3
pop
cli
cmp
rcrl
imul
sbb
test
mov
popf
mov
out
xchg
xchg
daa
lock
xor
adc
dec
xchg
add
movsb
dec
and
cld
loopne
jbe
rcl
sahf
imul
imul
jg
sbb
movsb
push
and
pushf
cmp
std
mov
aam
inc
jno
repz
rcr
lock
fnstcw
test
pusha
jge
fidivrl
movsl
outsl
in
repnz
jne
mov
dec
jnp
cmp
fcmovu
or
xchg
dec
mov
fidivrs
in
xchg
jecxz
lret
loopne
push
mov
jmp
pop
dec
mov
fdivl
cld
jp
adc
dec
xor
scas
mov
shrl
sbb
mov
and
jecxz
adc
loopne
push
mov
test
xor
sbbl
sbb
pop
or
mov
sub
add
mov
clc
push
mov
mov
lcall
leave
jae
add
pop
ret
pop
sbb
xor
push
cld
mov
mov
addr16
jbe
fdivrl
out
fisttps
je
add
mov
les
lds
sub
inc
jle
mov
int3
xorb
aas
inc
jle
fidivl
sbb
lret
lods
test
xlat
dec
push
pop
inc
inc
mov
fcompl
mov
testl
arpl
cmp
cmp
xchg
jl
imull
adc
insb
cmp
mov
adc
adc
sub
test
fldl
pop
ds
loope
inc
lcall
and
les
mov
cmp
test
outsb
cmp
push
data16
aam
dec
outsl
cmp
sarb
cltd
loopne
inc
mov
pop
mov
inc
sub
ja
pop
and
lret
addr16
outsl
aas
pop
cmp
cli
add
loope
jb
popf
popf
pop
pop
shl
loope
add
mov
push
or
sub
mov
negb
mov
mov
call
shl
inc
ret
push
or
add
ret
lcall
or
xchg
push
outsb
mov
add
dec
push
nop
sbb
xchg
sbb
aam
cmp
shll
push
and
pop
mov
aad
xchg
sbb
aad
in
stos
pop
lret
icebp
mov
pop
ficomps
sahf
cmp
outsl
in
fisubrl
mul
jns
lret
mov
imul
sbb
mov
mov
faddp
xchg
push
out
test
pop
rcrb
in
fimull
scas
push
scas
sub
dec
push
aas
stos
xchg
outsl
insb
adc
rcr
mov
pop
or
and
push
mull
cmp
lods
cmp
lret
mov
shll
and
mov
imul
add
and
ficoms
or
clc
mov
aas
sub
or
sub
sbb
out
scas
jl
or
orl
out
jnp
les
xchg
fistpll
sti
mov
in
ss
sub
or
scas
subl
in
add
inc
sti
inc
cmp
add
scas
push
and
bound
in
stos
loope
aam
mov
insl
insb
ret
lods
das
sbbl
repz
add
add
imul
add
jns
or
nop
dec
inc
rorb
add
add
sbbb
cmpb
push
and
add
sbb
into
add
jns
sbb
add
add
add
scas
fldenv
stc
test
dec
jae
fwait
pop
rorl
mov
cmp
push
repnz
lcall
and
sub
rclb
pop
dec
fisubrs
cmpsl
in
arpl
rolb
and
inc
cmp
push
ficoms
nop
or
fdivr
dec
xlat
dec
stc
push
mov
sahf
out
popf
jle
and
vmaxps
inc
add
and
mov
sarb
adc
cmpb
inc
jo
push
sub
xlat
and
and
insl
push
jecxz
hlt
bound
repz
fistl
and
mov
fnstsw
sbb
xchg
cmpsl
les
xor
jmp
jno
mov
pop
insb
or
pop
in
dec
sbb
fldt
xchg
push
jns
mov
mov
push
jge
int
mov
mov
jecxz
lret
xchg
inc
stc
add
or
and
icebp
loopne
mov
clc
adcb
xor
pop
mov
cmp
lds
cmpsl
clc
xchg
les
mov
xchg
daa
lea
cltd
jns
mov
fisttpll
sub
xchg
stc
adc
jmp
lcall
shlb
ret
xor
sub
iret
and
xlat
mov
push
out
adc
shll
mov
jnp
push
sub
jmp
data16
xor
and
repz
jecxz
jmp
loope
outsb
aaa
loop
pushl
sahf
aad
movsl
xchg
dec
repnz
mov
inc
jecxz
cld
hlt
add
xchg
jle
jg
out
inc
xor
shlb
leave
es
outsb
cmp
pop
mov
mov
xchg
fdivl
loop
jmp
and
insb
jmp
shlb
sbb
mov
jae
loopne
xchg
pop
lods
dec
push
cmp
mov
fdivrp
add
xchg
or
jb
cmp
lret
ljmp
movsl
xor
mov
ja
stc
insb
fucomi
lods
adc
pop
fmul
adc
fstps
push
psubusw
test
cmc
push
adc
or
bnd
jne
lret
sbb
not
daa
imul
push
mov
push
cmp
pop
out
lds
test
inc
push
aam
push
jno
das
jbe,pn
mov
dec
in
or
cmp
mov
xchg
xor
jmp
jmp
rorb
xchg
into
jo
addr16
test
sub
scas
stos
pop
arpl
sbb
lds
inc
sbb
mov
dec
sarl
push
cmp
mov
mov
sahf
or
cmpl
rcrl
imul
into
stos
andl
mov
xor
adcl
sbb
push
jle
sti
mov
xchg
cmp
sub
adc
bound
sbb
inc
rclb
xor
and
out
pop
push
andl
cmpsl
in
push
mov
push
stc
push
xchg
or
sbb
sbb
push
inc
rol
rcr
in
inc
adc
repz
mov
sbb
incl
pusha
pop
mov
cmpb
adcb
mov
je
add
pop
loopne
jl
inc
loopne
cmp
mov
inc
adc
loopne
fadds
scas
shlb
or
jns
jecxz
out
mov
xor
xchg
xor
lock
popf
faddl
pusha
add
cli
pop
shrb
js
push
sarb
or
inc
mov
sub
mov
ret
pop
out
lock
push
xor
mov
push
imul
mov
mov
cmp
popa
in
or
and
in
stos
cmp
xchg
insb
out
add
cmpsb
shlb
aaa
dec
pop
sbb
mov
push
aaa
inc
xchg
mov
jmp
lahf
push
ret
scas
mov
mov
imul
shlb
push
inc
pop
adcb
inc
push
inc
dec
mov
or
jecxz
pop
loope
sub
xchg
je
adc
mov
out
fdivrs
jnp
fs
filds
aad
jo
addr16
sub
pusha
jmp
pop
push
mov
mov
sbb
dec
je
adc
mov
imul
daa
pop
inc
adc
jb
mov
data16
or
dec
push
daa
xor
pushf
sbb
mov
adc
cs
imul
ja
test
xchg
jae
popf
mov
pop
xchg
push
add
pop
lahf
adc
or
insb
jg
test
cld
pop
fmull
scas
sub
lods
mov
inc
aad
je
daa
mov
imul
insb
push
mov
outsb
push
outsb
xor
xorb
mov
repnz
mov
in
push
pop
mov
dec
add
dec
pop
imul
inc
xor
dec
jo
rcrl
inc
xchg
jge
aaa
repz
insl
pop
sub
cmp
dec
jne
fnstsw
dec
add
outsl
xor
xchg
loopne
bound
pop
test
into
movsb
ret
jl
filds
out
std
xchg
out
scas
jl
mov
mov
pop
stos
push
dec
imul
scas
ret
imulb
addr16
xchg
popf
in
into
es
jbe
sbb
sbb
mov
xor
adc
mov
mov
rolb
sarl
daa
mov
fistpl
adc
stos
ljmp
sub
imul
cwtl
aad
sbb
xorps
sti
out
sahf
outsb
sub
dec
push
dec
xchg
sbb
mov
test
mov
inc
je
fwait
cmpsb
inc
insb
outsb
inc
rcr
push
add
add
mov
rol
xor
push
pop
xchg
jno
rorl
int3
mov
xchg
popa
fcmovb
sahf
in
sub
stos
sbb
sbb
imul
adc
sbb
cs
ret
mov
imul
push
add
jecxz
pop
push
push
daa
jg
or
imul
add
popa
out
mov
sbb
mov
dec
pavgw
inc
sub
xchg
stos
pop
adc
ljmp
jb
mov
add
js
jecxz
mov
repnz
clc
int
or
cmpsb
shlb
jnp
sub
call
and
mov
xor
xchg
xchg
pop
ficoms
pop
cmp
fwait
repnz
sti
xchg
sbbb
stc
std
sub
jmp
sti
sar
or
cmpsb
push
clc
lcall
pop
jbe
scas
pop
pop
add
xchg
or
xchg
adc
insb
lds
dec
daa
pop
xor
scas
popf
or
jbe
in
scas
out
mov
pop
add
adc
in
inc
ljmp
cmp
insl
rclb
cltd
sbb
lods
fwait
popf
push
in
adc
loop
mov
add
sub
popa
and
xor
and
test
ljmp
decl
repz
out
mov
fnstsw
jl
mov
clc
fisttpl
loope
pushf
adcl
adc
jge
lods
and
or
cmpsl
cmp
mov
lcall
mov
stos
filds
rorb
adc
add
or
adc
dec
xor
or
add
push
movsb
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
add
pop
or
or
or
mov
mov
add
lea
add
push
mov
add
push
push
push
add
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
lea
mov
mov
add
push
push
push
addb
push
addb
push
addb
push
addb
push
addb
mov
btr
jae
mov
std
mov
mov
add
add
rep
add
cld
jmp
add
mov
test
je
mov
mov
add
push
push
push
add
push
call
test
je
pop
pop
pop
pop
jmp
push
push
mov
mov
mov
sar
rep
mov
and
rep
pop
pop
ret
push
mov
mov
sub
lea
orl
mov
lea
mov
mov
lea
push
mov
mov
push
xor
xor
lea
push
mov
mov
mov
mov
mov
xor
mov
movl
test
jne
push
pop
cmp
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
mov
shr
and
sub
mov
je
dec
jne
shr
mov
sub
mov
jmp
sub
push
mov
pop
and
shr
shr
sub
mov
mov
jmp
mov
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
not
and
shr
xor
jne
xor
xor
test
mov
mov
je
push
pop
jmp
mov
neg
sbb
and
mov
cmp
jne
cmpl
jne
mov
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
mov
jae
lea
sub
dec
mov
jmp
lea
sub
mov
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
lea
cmp
je
lea
mov
lea
cmp
lea
jae
sub
dec
mov
jmp
sub
mov
mov
test
je
mov
andl
cmp
jbe
mov
push
pushl
pushl
call
add
add
add
sub
add
sub
jne
mov
neg
sbb
and
mov
jmp
mov
push
pop
cmp
jne
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
and
sub
shr
xor
pop
mov
mov
mov
mov
jmp
mov
xor
cmp
jne
shr
add
cmp
jae
cmp
jae
push
pop
sub
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
mov
and
sub
add
movzbl
shr
mov
mov
incl
shr
add
cmp
jb
mov
push
pop
cmp
jae
mov
add
movzbl
mov
incl
jmp
lea
movl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
mov
call
add
test
jne
cmp
je
push
mov
pop
mov
cmp
jne
mov
mov
shr
and
and
lea
cmp
mov
jae
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
mov
lea
cmp
movzbl
jae
mov
sub
mov
shrl
mov
incl
jmp
cmp
jne
push
pop
jmp
lea
xor
cmp
setne
dec
and
add
mov
lea
cmp
jae
sub
add
shr
add
mov
movzbl
mov
add
shl
lea
or
incl
cmp
jb
mov
push
shrl
pop
mov
shl
add
mov
sub
dec
and
shrl
add
mov
mov
lea
cmp
ja
cmp
jne
cmp
jb
cmp
jne
mov
jmp
xor
lea
mov
inc
add
dec
jne
mov
jmp
lea
mov
push
lea
push
lea
push
lea
push
mov
lea
and
andl
andl
push
pushl
pushl
lea
push
push
lea
movl
push
movl
call
add
test
jne
cmp
je
lea
push
lea
push
lea
push
lea
push
lea
shr
push
and
pushl
pushl
inc
push
lea
push
push
call
add
test
jne
mov
test
jne
test
jne
mov
andl
mov
push
mov
pop
mov
mov
cmp
jne
mov
mov
mov
andl
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
jne
cmp
jb
mov
mov
mov
mov
andl
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
push
mov
mov
pop
shl
mov
push
dec
mov
pop
shl
dec
mov
cmp
jae
push
pop
sub
shr
add
movzbl
mov
add
shl
or
inc
cmp
jb
mov
mov
mov
and
lea
lea
movzbl
mov
test
movzbl
jne
shr
movzbl
sub
mov
mov
inc
decl
jmp
shr
movzbl
sub
testb
jne
jmp
mov
testb
jne
mov
push
pop
shl
dec
and
add
lea
lea
movzbl
mov
test
movzbl
je
shr
sub
testb
je
andl
push
mov
pop
shl
sub
dec
and
add
shr
cmp
mov
jae
push
pop
sub
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
mov
and
lea
lea
movzbl
mov
movzbl
shr
sub
testb
jne
testb
jne
mov
push
pop
shl
dec
and
add
lea
jmp
andl
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
mov
push
pop
sub
shl
dec
and
add
lea
shr
mov
sub
mov
sub
cmp
jb
mov
sub
mov
mov
mov
inc
inc
mov
inc
inc
subl
jmp
mov
lea
sub
sub
cmp
jbe
sub
mov
mov
inc
inc
dec
jne
lea
mov
mov
inc
inc
decl
jne
jmp
shr
sub
mov
mov
inc
decl
mov
cmpl
jae
mov
shr
cmp
jb
mov
mov
sub
shl
sub
andl
mov
mov
mov
jmp
testb
je
mov
shr
cmp
jb
mov
mov
mov
shl
sub
sub
mov
mov
movl
mov
andl
cmp
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmpl
je
cmpl
jne
mov
movl
jmp
movzbl
mov
mov
mov
movl
mov
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
shl
mov
dec
and
lea
lea
movzbl
shrl
sub
movzbl
test
mov
jne
mov
movl
mov
jmp
test
je
and
mov
mov
mov
movl
jmp
test
je
test
je
movl
jmp
cmpl
jne
mov
cmp
jae
mov
sub
add
shr
add
mov
movzbl
mov
add
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
mov
sub
mov
movzbl
mov
mov
jmp
mov
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
mov
push
pop
shl
dec
and
lea
movzbl
shrl
lea
sub
mov
movzbl
test
je
and
mov
mov
mov
movl
jmp
test
jne
mov
mov
lea
lea
mov
jmp
cmpl
jne
cmp
jae
mov
sub
add
shr
add
mov
mov
add
movzbl
shl
or
incl
cmp
jb
push
mov
pop
movl
shl
dec
and
shrl
add
sub
mov
cmpl
jne
mov
lea
sub
cmp
jae
mov
lea
lea
sub
sub
jmp
mov
sub
cmpl
je
mov
mov
jmp
mov
test
jne
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
andl
mov
mov
mov
inc
inc
dec
cmp
jne
lea
decl
jne
andl
mov
cmpl
jne
test
jne
mov
cmp
jne
mov
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
mov
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
lea
cmp
je
lea
lea
cmp
jae
lea
sub
dec
mov
jmp
lea
sub
mov
test
je
mov
andl
mov
inc
dec
andl
cmpl
jne
lea
mov
push
lea
push
lea
push
lea
push
call
mov
add
cmp
jae
mov
sub
dec
jmp
mov
sub
cmp
jne
movl
cmpl
je
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
lea
mov
push
lea
push
lea
push
lea
push
call
add
cmpl
jne
jmp
mov
push
mov
pop
lea
mov
push
lea
push
lea
push
lea
push
mov
mov
call
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
mov
mov
jae
sub
dec
jmp
mov
sub
cmp
mov
jne
mov
xor
mov
jmp
push
pop
cmp
jbe
orl
add
dec
mov
mov
mov
cmp
jne
mov
mov
lea
push
lea
push
lea
push
lea
push
call
mov
add
cmp
mov
jae
mov
sub
dec
jmp
mov
sub
cmp
mov
jne
push
pop
mov
cmp
je
jmp
mov
mov
jmp
movl
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
push
call
add
cmpl
jge
xor
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
incl
lea
dec
jne
cmp
jne
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
pop
lea
mov
mov
cmp
jne
inc
add
cmp
jbe
cmp
mov
jae
mov
mov
push
lea
pop
cmp
jne
dec
sub
cmp
jne
cmp
mov
jbe
mov
mov
push
mov
pop
shl
cmp
jae
lea
sub
js
inc
add
shl
cmp
jb
mov
shl
mov
lea
sub
mov
js
add
mov
xor
dec
mov
je
xor
add
add
dec
mov
jne
mov
xor
mov
add
test
mov
je
mov
mov
lea
mov
mov
inc
mov
mov
inc
cmp
jb
mov
andl
andl
orl
mov
mov
mov
mov
mov
neg
cmp
jg
lea
mov
mov
mov
mov
dec
test
mov
je
jmp
mov
lea
cmp
jle
inc
mov
incl
add
mov
mov
add
sub
cmp
jbe
mov
mov
push
sub
pop
shl
cmp
jbe
or
sub
add
mov
cmp
jae
inc
cmp
jae
jmp
mov
add
mov
mov
shl
cmp
jbe
sub
inc
cmp
jb
mov
push
pop
mov
shl
mov
add
cmp
ja
mov
lea
lea
mov
shl
cmpl
mov
lea
mov
mov
mov
mov
je
mov
mov
mov
mov
sub
mov
shr
mov
mov
sub
mov
push
cltd
pop
idiv
mov
sub
mov
lea
lea
lea
movsl
movsw
jmp
mov
mov
mov
mov
mov
cmp
jg
mov
mov
sub
mov
mov
lea
cmp
jb
movb
jmp
mov
mov
cmp
jae
cmp
sbb
and
add
mov
jmp
sub
mov
mov
add
mov
mov
movzwl
addl
mov
mov
mov
push
sub
pop
mov
shl
mov
shr
cmp
jae
mov
lea
lea
lea
shl
mov
mov
add
lea
add
cmp
movsl
movsw
jb
mov
mov
mov
push
lea
pop
shl
test
je
xor
shr
jmp
xor
mov
mov
lea
push
mov
pop
shl
dec
and
cmp
je
decl
sub
sub
jmp
mov
decl
mov
test
jne
incl
addl
mov
cmp
jle
test
je
cmpl
je
or
jmp
or
jmp
push
mov
push
mov
push
push
mov
mov
push
mov
mov
cmp
mov
mov
jbe
mov
mov
sub
mov
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
push
call
add
mov
add
add
cmp
jne
cmp
lea
mov
jne
mov
mov
mov
sub
cmp
jbe
mov
test
je
mov
cmpl
jne
andl
sub
push
push
pushl
call
add
add
add
mov
mov
pop
mov
mov
mov
pop
pop
leave
ret
mov
movsb
push
add
enter
add
add
push
add
js
add
add
add
adc
add
xchg
mov
or
or
cld
mov
add
push
fmuls
add
add
add
add
push
add
cld
popl
add
add
add
add
add
pop
or
add
mov
add
add
add
sub
add
add
add
add
add
xlat
or
sbb
or
call
or
or
or
or
or
sub
or
pop
fmuls
add
or
and
or
cmp
or
xor
or
inc
xlat
or
fmuls
add
add
xlat
or
add
add
push
xlat
or
xlat
or
jb
or
test
or
add
add
lods
xlat
or
add
add
mov
add
add
xlat
or
add
add
fcom
or
add
add
in
or
add
add
add
inc
js
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
addr16
insb
outsl
jae
dec
gs
add
push
popa
jb
popa
outsb
je
insb
gs
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
push
dec
outsb
outsw
add
add
jae
popa
addr16
outsl
js
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
