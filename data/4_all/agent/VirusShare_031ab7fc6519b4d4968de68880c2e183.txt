fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
in
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
shlb
pushl
cmp
pop
je
andb
int
sbb
dec
fmuls
push
rorb
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
jge
pop
fildl
shr
jmp
or
xchg
mov
stos
pop
pop
or
insb
in
fsts
fnstenv
mov
push
stos
hlt
andl
adc
sti
sub
mov
or
add
cmp
jne
incl
inc
sbb
or
jmp
xor
mov
pop
mov
add
leave
pop
lahf
std
mov
jo
cmpb
clc
inc
inc
jmp
adc
mov
mov
notl
push
mov
mov
inc
inc
test
add
dec
out
jne
pop
xor
mov
xor
cmp
mov
and
xlat
inc
imul
lcall
fs
imul
inc
movsb
imul
dec
pop
aaa
idiv
inc
pop
stc
cli
outsl
xchg
dec
bound
sub
imul
adc
pop
push
and
clc
push
add
mov
pop
adc
leave
add
addl
adc
xchg
adc
imul
outsb
pop
movsb
jns
repz
imul
fdivs
outsl
adc
xor
inc
adc
push
pop
jl
out
adc
pusha
insb
ljmp
jae
or
lock
push
push
jg
shrb
mov
add
mov
out
jo
js
inc
jl
incl
idivl
jg
jae
mov
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
cmp
add
push
push
fstpt
or
mov
cmpl
push
or
jb
jmp
mov
mov
lea
movzwl
inc
sub
sti
fistpl
orl
cmp
outsl
outsl
fisttpl
popf
mov
inc
je
cmp
and
and
hlt
movsl
clts
pop
cmc
in
sub
and
add
xor
and
int3
push
bound
ljmp
pop
mov
or
push
mov
call
push
sahf
adc
outsb
mov
test
je
xor
sbb
add
pop
stos
push
in
insl
mov
or
cmp
fisttpll
mov
neg
lea
jne
cmpb
aaa
mov
adc
jge
sub
cli
aas
mov
inc
sub
lret
xchg
mov
or
pop
pop
call
out
inc
jmp
xor
or
mov
push
lahf
pop
lods
insl
std
jecxz
sbb
dec
mov
mov
and
cmp
mov
insb
negb
push
or
cmp
xlat
fsts
sbb
jo
or
ret
je
push
in
adc
pop
sbb
or
and
push
loope
sti
inc
in
sahf
sub
cmp
jmp
fs
pop
in
and
jne
adc
fildll
xchg
push
imul
std
xchg
push
inc
cmp
jl
jmp
sub
pop
mov
adc
pop
jb
dec
xor
or
into
xor
shll
rcl
rcl
jb
dec
rcl
aad
insb
lock
insb
mov
sub
push
es
fdivl
stos
mov
or
dec
and
lds
js
sbb
cld
push
push
sysexit
dec
int
lods
jne
scas
mov
xlat
push
mov
mov
mov
mov
inc
xor
xor
sahf
push
xorb
pop
in
jns
out
ds
or
test
call
mov
fwait
sbb
jnp
mov
test
aaa
orb
ja
and
mov
push
push
loopne
adc
adc
mov
mov
push
xor
push
xor
enter
sahf
imul
ss
fidivrs
and
push
cltd
push
jmp
sub
inc
pop
ds
push
mov
sti
hlt
or
inc
pusha
cld
sbb
or
insb
dec
add
jmp
shrl
add
mov
shlb
shlb
jns
lret
in
aam
aad
data16
outsl
fadds
ficompl
fildl
pop
sbb
jecxz
cs
mov
out
mov
mov
sbb
in
ss
cmpb
mov
cmp
xor
mov
loope
dec
lahf
cmpsl
mov
outsb
dec
mov
add
jbe
incb
ret
addl
lahf
sub
add
les
lods
pop
add
mov
imul
or
pop
enter
mov
or
test
shll
outsl
xor
out
scas
cmp
inc
dec
xor
mov
sub
and
or
aad
xor
add
outsl
sub
inc
cmp
jb
jmp
cs
jbe
mov
outsb
je
inc
lods
es
dec
jp
sub
adc
xchg
or
aaa
in
push
pushf
xchg
outsl
xchg
data16
cs
je
ja
xchg
jb
dec
rcl
xchg
gs
pop
dec
imul
outsl
jae
je
dec
shll
push
imul
outsl
shlb
pop
push
xor
or
push
dec
shll
push
outsl
popa
insl
pop
xor
shll
cs
shll
xor
lcall
xor
inc
imul
in
in
out
pop
pop
es
out
lock
mov
cmpsb
arpl
add
aam
shlb
push
imul
fs
jns
loopne
lcall
mull
stc
cli
sti
cld
sahf
mov
lcall
aam
pop
inc
jl
push
ret
inc
xchg
push
or
cmp
adc
mov
or
sbb
adc
add
arpl
or
and
sub
movsl
xchg
enter
loopne
xor
mov
pusha
gs
mov
mov
push
xor
xchg
gs
xchg
imul
mov
push
pop
lret
pop
int3
popa
int
imul
popa
rcl
shlb
push
mov
xchg
or
pusha
rol
sbb
sub
pop
andb
movb
jnp
nop
jmp
jb
and
add
inc
sbb
outsb
xchg
pop
mov
mov
std
xor
sub
repnz
je
or
sub
aaa
and
cld
xor
and
add
fdivrs
cmp
jecxz
js
push
adc
das
popf
insb
fwait
in
push
loop
out
je
lock
int
loop
and
fisttpll
push
mov
mov
cld
cltd
sysenter
sbb
inc
jno
insb
shll
push
pop
pop
push
aam
jnp
pusha
mov
insb
cmp
pusha
inc
push
mov
dec
shll
jns
imul
call
cmp
mov
sub
jle
add
xlat
ljmp
rcl
pop
pop
push
decb
out
shll
cmp
cmc
pop
jae
shlb
pop
int
shll
je
dec
shll
outsl
ja
inc
shll
inc
imul
iret
push
pop
push
jmp
shlb
addr16
or
xchg
fimuls
or
mov
ss
or
pop
loopne
icebp
mov
or
leave
sbb
jle
ret
je
mov
cmpb
mov
cmp
leave
lea
fldt
or
add
adc
std
sbb
sbb
loope
repz
adc
sbb
call
popa
xor
imul
dec
sarl
imul
push
fwait
xchg
fs
insl
jbe
inc
fcoml
enter
add
pop
pop
or
ret
in
std
adc
adc
and
jb
in
ret
fs
push
fadds
lods
dec
loop
mov
xor
or
sbb
jo
adc
test
cltd
add
push
xchg
cmpsl
rol
inc
xchg
sbb
and
jmp
out
fdiv
arpl
pop
push
xor
ficomps
cs
adc
adc
xor
lods
out
adc
mov
xor
orl
pop
mov
punpckhdq
dec
ljmp
or
pushf
add
jmp
push
mov
push
fs
xor
dec
call
ja
rcl
inc
cmpsb
jmp
push
test
mov
push
je
leave
cmp
dec
int
push
cld
int3
gs
push
and
lcall
jb
fcompl
outsl
mov
call
mov
push
imul
imul
jbe
jb
cmp
xor
outsl
popa
xchg
cmpsb
imul
arpl
in
pop
push
outsl
jne
mov
gs
arpl
inc
dec
shll
lcall
shlb
in
mov
push
or
cwtl
fs
fs
loopne
mov
sub
insl
cmpsl
sbb
push
pop
fcmovnb
or
hlt
adc
add
push
push
popa
add
mov
mov
cmpb
mov
pop
sbb
test
and
lcall
mov
mov
mov
fstpt
mov
outsl
push
xchg
icebp
je
push
js
or
adc
iret
mulb
sbb
adc
jo
scas
call
inc
cmpsl
mov
or
sub
jp
add
outsb
aaa
xlat
mov
push
lock
push
inc
mov
out
push
nop
mov
push
pop
or
sbb
sub
lds
mov
and
pop
loope
popa
xchg
sbb
inc
andl
mov
pop
pop
lock
movntq
insb
out
lret
enter
ljmp
clc
ret
stc
test
push
leave
xor
push
fistpl
pop
filds
mov
lods
xchg
mov
lahf
call
cmpl
mov
cmp
enter
sbb
hlt
jae
aaa
pusha
dec
cmp
xorl
cs
pop
jo
or
hlt
fcompl
adc
push
je
adc
fcom
enter
rcr
push
ljmp
out
dec
cmp
xchg
push
xchg
pop
clc
je
adc
dec
rorb
jo
test
xchg
fwait
pusha
jmp
mov
cmpsb
adc
xor
shll
js
scas
shll
push
fsubrl
xchg
xchg
movsl
push
int
je
xchg
cmp
and
and
outsb
fs
shll
insb
gs
jmp
out
lock
shrl
repnz
cltd
repz
cmc
xor
pop
int3
rolb
mov
push
aaa
cmp
inc
push
mov
ljmp
cld
add
clc
add
mov
jmp
outsl
push
xchg
int3
xor
sar
rclb
pop
popa
outsb
and
adc
aaa
pusha
push
mov
lahf
pop
bnd
fdivr
aam
pop
bnd
aad
test
jns
lahf
test
shl
clc
push
clc
lods
adc
enter
ss
into
add
movsb
inc
lcall
jns
imul
gs
stos
pop
pop
and
je
dec
imul
js
mov
mov
push
mov
fcoms
mov
mov
xor
push
dec
push
push
jnp
xorl
pop
push
mov
dec
push
add
hlt
add
mov
outsb
sub
pop
les
mov
iret
into
je
or
subb
add
cmp
sub
rcl
xlat
add
jnp
pop
push
nop
insl
and
ds
fs
inc
ljmp
adc
test
stc
ficoms
divb
mov
cmp
cmp
mov
and
adc
out
jl
subb
cmp
push
pushf
mov
popf
data16
and
clc
in
mov
adc
je
pop
push
inc
or
add
jmp
xchg
push
shll
dec
xchg
inc
enter
shll
jb
dec
shll
gs
leave
adc
sahf
push
je
lret
mov
add
lret
mov
je
jb
bound
daa
lret
mov
je
inc
adc
call
insl
push
mov
aam
imul
or
and
je
insl
fcom
jmp
in
sti
pop
jp
ss
sti
and
sbb
adc
add
inc
dec
adc
push
sbb
ret
pop
or
add
les
dec
data16
adc
or
cmp
ljmp
fdivs
or
inc
xor
ret
in
pop
in
fdivr
fdivr
mov
cld
fdivr
mov
cmpl
lea
mov
add
decb
popa
sbbb
or
ja
pushf
rcrb
push
jle
rcll
ja
jae
iret
ficompl
loope
addr16
popf
out
jnp
dec
push
jnp
or
mov
or
sbb
jo
pop
mov
xor
add
pop
negb
push
jo
mov
push
push
or
mov
int
jbe
push
or
js
mov
jne
adc
aam
aaa
gs
pushf
pusha
insb
mov
adc
xchg
jg
cmp
flds
fisubrs
xchg
cs
jecxz
dec
andb
hlt
add
cmc
rcrl
rcrl
and
mov
jno
or
or
ret
xor
popf
in
dec
sbb
out
xor
adc
and
rcl
adc
jmp
jmp
cmp
or
or
and
mov
test
popa
stos
jle
adc
enter
mov
sbbb
adc
call
mov
xchg
push
pusha
sbb
push
sti
clc
add
push
sub
lahf
inc
je
mov
cmc
dec
fcoms
in
cmpsb
je
ds
sub
xchg
sbb
sub
jne
cmp
xor
cmp
inc
push
sbb
dec
dec
dec
add
int
mov
or
fistpl
xor
std
push
js
jge
sub
arpl
jl
add
fwait
adc
clc
jne
je
xchg
popa
add
mov
sbb
push
filds
pop
xor
push
cmp
lea
sbb
and
cmpsb
test
push
mov
jae
inc
push
test
jl
xchg
je
or
push
imul
xchg
sub
mov
bound
inc
and
mov
clc
mov
fdivl
mov
mov
lea
add
mov
fwait
mov
or
or
je
or
or
pushf
insb
cmp
sahf
and
jmp
insb
andl
or
and
xor
inc
sub
and
je
mov
jae
stos
lods
pop
lods
popa
scas
pop
lods
insb
scas
dec
popa
pop
and
outsl
je
ret
ds
shll
and
fdivs
outsb
mov
shll
fmull
stos
shrl
pop
inc
adc
cld
std
or
mov
mulb
fisttpll
lock
jo
xchg
cmpl
mov
push
xlat
js
adc
incl
cmp
mov
addb
adcb
or
mov
mov
or
mov
imul
pop
xchg
gs
add
fs
jmp
dec
rclb
push
and
in
insb
inc
js
inc
dec
xchg
lods
jb
jne
mov
popa
lret
int3
int
push
les
mov
push
lds
adc
loopne
pop
fidivl
add
sbb
push
fwait
out
push
cmpb
push
or
mov
bound
cs
orb
ret
icebp
jne
add
push
dec
loopne
or
insl
inc
sbb
sbb
pop
push
adc
dec
out
adc
inc
icebp
pop
adc
sub
pop
sbb
jbe
mov
pop
xor
or
push
xchg
or
add
aam
or
div
imul
ret
push
mov
in
fildll
cmp
jbe
push
ja
divb
pushl
mov
mov
push
or
lods
mov
and
jnp
mov
and
sbb
or
leave
xor
or
adc
fsubl
pop
adc
sbb
fbstp
dec
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
arpl
test
pop
or
popf
sbb
enter
pop
loope
pusha
mov
fcompl
imul
xlat
sbb
mov
push
les
pop
inc
jle
sbb
pushl
jnp
fnstsw
adcb
dec
imul
cld
cmp
ss
sahf
sbb
and
arpl
shr
out
mov
ss
rclb
lock
inc
fildl
or
or
sbbb
and
movl
fcoml
add
lea
mov
pop
sub
add
cmp
incl
mov
out
mov
fisttpl
mov
mov
sub
insb
mov
dec
mov
push
push
ficompl
loopne
addb
syscall
xchg
lcall
sbb
lcall
pop
mov
mov
sub
imul
sbb
ds
push
or
and
or
sbb
push
push
mov
add
ret
push
test
enter
inc
mov
shlb
hlt
jge
and
dec
hlt
or
dec
mov
add
jge
jl
add
jo,pn
push
mov
or
cltd
lea
rcrb
add
stc
negb
push
fsubs
push
push
test
sub
cmp
pop
xchg
mov
test
hlt
out
xorb
jle
push
pop
lea
movl
stos
dec
sub
lea
int
mov
jl
fcomps
inc
clc
aaa
mov
testl
or
cld
push
inc
or
push
mov
mov
daa
clc
cmp
ss
lea
cli
jl
stc
mov
xchg
fcomps
imul
shll
mov
test
cmp
in
adc
mov
aad
inc
mov
and
and
inc
push
adc
inc
add
jmp
adc
push
rcll
leave
push
sub
aad
push
mov
pop
shll
add
ss
push
adc
cmp
push
ret
inc
push
addb
fnstenv
adcl
por
push
lret
lds
push
mov
push
jmp
out
in
mov
mov
sbb
pop
imul
jmp
add
mov
jns
add
sub
xor
mov
cli
cmc
arpl
outsb
adc
xor
pop
fcmovnb
push
pop
adc
jbe
jmp
jne
dec
mov
push
xchg
fimull
mov
cs
add
inc
sbb
clc
outsl
fistps
adc
cmpw
jne
fwait
or
lods
shr
inc
sub
xchg
jmp
jo
cld
mov
push
sbb
out
jp
sbb
adc
fmuls
ret
push
in
inc
pushf
adc
sub
inc
mov
jne
xor
sub
push
dec
mov
ja
fisttpl
inc
dec
jne
out
ss
scas
popa
ret
addr16
aas
mov
gs
dec
mov
mov
sub
lods
sub
add
pop
cmc
adc
xchg
push
test
push
lea
sbb
lods
xchg
ljmp
add
ret
mov
add
add
shl
aad
cmp
jl
and
hlt
sarl
cmpb
inc
jecxz
add
adc
or
fwait
jns
add
mov
ja
lods
js
addl
mov
lock
jne
enter
xchg
mov
xchg
adc
xchg
ret
addr16
lock
xchg
fadds
ret
popa
adc
ja
jnp
je
pop
clc
jne
mov
pusha
sub
push
shrl
call
into
bound
push
bndstx
push
in
mov
ret
and
lret
rclb
lea
je
sub
addr16
imul
adc
push
lahf
cmpsl
add
push
sbb
es
mov
arpl
ljmp
in
in
insb
cmp
add
mov
push
push
adc
cltd
fs
jnp
addr16
adc
cmp
scas
movsb
add
scas
add
xor
and
add
mov
mov
loopne
mov
and
push
dec
rclb
pop
mov
inc
adc
jge
js
cld
jg
movb
mov
sub
or
aaa
jno
push
mov
sub
jp
sub
and
inc
test
cmp
jne
call
jmp
add
pop
mov
xor
jb
sarb
dec
push
xor
pop
xor
cmpl
ja
inc
imul
mov
jns
ret
lock
or
test
jge
lret
and
xchg
std
dec
enter
mov
mov
cltd
xchg
and
add
cwtl
fildl
gs
insb
insb
inc
popa
arpl
pop
shlb
insl
pop
andb
inc
jo
adcb
cmpsl
sbbl
and
lock
xchg
lods
adc
jbe
mov
push
iret
pushf
cs
xor
add
loopne
lds
lcall
cltd
pop
idiv
add
push
cmp
or
fnstcw
mov
test
ret
adc
movsb
push
pop
mov
sub
pushf
fwait
xor
mov
cmpsl
cwtl
call
decb
pop
mov
ss
nop
inc
adc
rcrb
cmp
inc
jo
pop
ud2
push
xor
xor
aam
lret
mov
int
mov
outsl
jo
lret
mov
jns
imul
add
jbe
addb
inc
insb
cmp
sub
inc
fnstsw
fists
leave
push
je
xor
adc
bound
sbb
shlb
push
push
inc
sub
push
mov
movl
gs
je
pop
nop
scas
in
imul
lea
repz
pop
push
jmp
ja
imul
push
sbb
push
mov
lcall
pop
sbb
mov
mov
adc
sub
fnstenv
pop
add
adc
pop
pusha
pop
jb
adcl
or
insb
or
cs
push
push
mov
lods
jl
pop
adc
rcrl
or
mov
and
sub
std
aad
sbb
stc
lods
iret
or
sti
fdivr
adc
inc
in
icebp
dec
push
xchg
call
sahf
loop
bound
xor
mov
adc
call
push
sub
pusha
dec
or
fdivr
repnz
xchg
xor
cwtl
or
gs
sahf
add
or
aad
mov
movsb
xchg
xchg
inc
xchg
dec
pop
mov
sbb
xor
addr16
adc
inc
mov
orl
mov
aaa
add
inc
pop
dec
and
xchg
xchg
jl
mov
insb
mov
shlb
add
repnz
jbe
call
and
pop
fsub
call
dec
cmp
test
insb
add
int3
inc
ss
add
pushf
xchg
add
inc
inc
mov
mov
jne
cs
test
or
test
filds
test
pop
jae
sub
mov
or
xchg
xor
mov
mov
test
cmp
mov
ficomps
and
es
add
lock
push
lods
insb
push
push
push
rorb
sub
xchg
mov
rolb
js
mov
aaa
into
orl
adc
imul
pop
or
fs
mov
or
aam
sbb
push
sbb
lock
aam
or
or
ret
aas
pop
out
inc
push
dec
xchg
push
xor
jbe
and
enter
xor
hlt
mov
jg
xor
and
inc
or
add
or
repnz
jbe
aam
dec
test
insb
test
je
and
jns
inc
and
jbe
jmp
mov
pop
out
jne
loopne
pop
sub
leave
xor
fbstp
jmp
mov
push
test
jmp
adc
cld
add
in
sub
sub
adc
pause
popf
popa
xor
adc
mov
loopne
push
fdivs
add
lock
xor
mov
rolb
push
sbb
inc
shll
jle
dec
shll
in
lcall
cs
imul
data16
fcoms
lcall
imul
jmp
daa
sbb
es
push
pusha
push
lcall
sub
shll
fsub
pusha
dec
shll
cli
adc
lods
sbb
in
out
pop
mov
xlat
inc
push
adc
add
and
or
lock
pop
leave
sub
mov
push
nop
push
repnz
int3
push
into
push
add
adc
mov
inc
push
cs
insb
add
and
dec
add
dec
gs
gs
xor
ss
gs
outsl
fs
jmp
ljmp
imul
inc
jb
popa
je
push
push
fsubrp
and
and
insb
outsl
jae
dec
popa
outsb
fs
gs
out
lcall
arpl
xor
outsl
jb
cmovb
inc
in
idiv
outsl
outsl
je
gs
cmp
cmpsl
lret
repz
jb
mov
jmp
js
add
jne
test
fidivs
fs
je
push
push
inc
dec
push
das
mov
pop
add
add
nop
pusha
nop
add
call
iret
nop
popa
or
add
pop
add
in
out
cmp
rclb
inc
fadd
push
push
fdivl
arpl
ss
fs
stos
jae
jl
call
mov
fistpll
sbb
pop
inc
or
rolb
mov
add
jge
dec
add
mov
add
dec
nop
in
add
test
nop
je
lea
mov
repnz
mov
testl
push
pop
jne
nop
nop
mov
sbb
jle
pop
shrl
jl
sbb
cli
mov
add
jge
jmp
adcb
sub
ret
xor
cmp
test
jg
popf
adc
je
lea
push
push
dec
pop
pop
mov
sub
in
xchg
add
imul
mov
jae
call
push
pop
loopne,pt
inc
inc
and
cld
pop
lea
nop
incb
lea
push
call
pop
push
jmp
pop
pop
fidivs
fistps
mov
pop
nop
ret
dec
call
negb
mov
loopne
mulps
pop
inc
cmp
inc
push
or
lcall
add
adc
pop
data16
nop
add
sub
fxch
add
mov
push
fadds
pop
mov
int
mov
imul
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
negb
in
call
insl
outsl
fs
dec
sub
out
add
pop
int
mov
push
jmp
or
repz
fsubl
jecxz
dec
out
jns
push
in
pop
cmp
pop
push
imul
adc
out
dec
adc
es
or
push
fcoml
lock
sbb
imul
shlb
pop
add
pop
mov
sldt
xor
insb
pusha
addr16
or
pop
push
test
in
pop
rorl
pop
add
push
and
rorl
and
fistl
les
xchg
test
and
call
fnstcw
daa
inc
xor
shlb
shl
movups
xor
add
std
jo
mov
aaa
hlt
and
cltd
lahf
sti
aaa
js
repnz
cmc
lea
cmp
cmp
cmc
inc
divb
in
mov
stc
dec
cli
test
sub
inc
sti
in
idiv
cmp
pusha
mov
mov
ss
mov
imul
in
fucom
stos
add
push
ljmp
push
or
mov
or
fsubrs
ljmp
xor
ja
cmp
pop
pop
ja
cmp
decl
cmpsb
pop
mov
test
imul
cwtl
jmp
cltd
in
xorb
mov
push
inc
push
dec
cmp
xor
inc
es
cld
in
leave
and
dec
fmul
mov
mov
leave
jl
push
inc
loope
enter
test
push
or
test
incl
je
add
mov
mov
mov
jno
or
daa
dec
fdivrl
jmp
add
jmp
pop
jmp
inc
jmp
xor
fcmovne
fwait
xorps
push
add
dec
jo
jmp
aam
mov
imul
cmp
dec
je
mov
jmp
aas
aas
jg
sbb
jmp
push
mov
sbb
mov
or
fdivrs
incl
add
cmpsb
jmp
or
jl
xchg
add
lcall
std
out
ljmp
scas
imul
push
sbb
cmpsb
and
inc
dec
sbb
in
pop
xlat
and
imul
add
or
sub
jg
adc
cmc
mov
add
cwtl
cld
call
stos
loop
stos
pushf
cmp
cmc
call
into
jl
add
sub
mov
or
out
add
jo
pop
mov
call
mov
mov
dec
mov
or
push
push
out
jnp
or
test
pop
mov
push
push
or
sbb
jmp
or
lahf
sti
cmp
fs
push
mov
mov
mov
enter
jmp
jbe
fstpt
cmpb
inc
ja
lcall
fldt
cld
pop
jne
mov
sbb
sub
adc
sti
mov
jne
lcall
cli
call
sub
insl
pop
mov
test
call
add
jmp
push
fnsave
sbb
sbb
fcoms
lcall
jne
jbe
cmp
shrl
dec
int3
add
xorb
pop
movsb
and
out
outsb
pop
clc
jle
popa
dec
cmp
push
push
or
mov
adc
adc
jmp
test
fistl
lods
pop
dec
cs
mov
iret
push
incl
pop
inc
push
cmp
pop
push
cmp
cmp
mov
jle
pop
xor
dec
lods
xchg
push
into
push
in
fsubrs
decl
push
fmuls
movswl
ds
adc
pushl
inc
mov
jo
xor
inc
mov
push
int3
inc
mov
insl
inc
mov
add
lret
mov
aaa
inc
clc
ret
add
pop
mov
add
repnz
arpl
xchg
pop
dec
orl
jo
push
cmp
hlt
push
jl
push
jns
fwait
lods
or
aaa
clc
decl
idiv
add
repnz
or
or
cmp
outsb
fwait
sub
cs
xchg
add
jae
fidivs
lret
mov
call
add
in
insb
pusha
push
mov
paddusb
mov
imul
add
loop
add
dec
icebp
inc
xchg
and
fs
adc
add
cmp
cmp
mov
in
nop
ss
fbld
out
add
icebp
cmp
outsb
mov
cltd
jmp
sub
or
or
in
mov
jmp
in
push
mov
xchg
push
popa
mov
outsb
pop
push
pushl
pop
mov
lcall
lahf
mov
mov
mov
mov
push
jmp
pop
jmp
add
or
out
fucomi
sbb
and
xchg
roll
decl
fildll
xchg
push
jnp
xchg
or
jmp
out
lea
incl
dec
xchg
cli
fldcw
insb
mov
push
call
push
icebp
or
push
fs
push
pushl
pushf
inc
clc
fs
or
push
lret
data16
outsl
cld
dec
leave
lret
lret
bswap
enter
fcoml
add
sarb
pop
in
xchg
out
mov
test
fisttps
out
sbb
mov
in
sbb
js
lcall
and
adc
dec
jle
int3
outsb
sbb
fcmovne
test
ja
cmpsl
outsb
adc
loopne
test
hlt
mov
outsl
pop
cld
aaa
outsl
sub
pushf
mov
dec
das
dec
add
push
int
rorb
cmp
jne
xor
dec
add
shl
add
jbe
pop
jmp
mov
js
add
mov
adc
jo
adc
adc
sbb
or
cmc
pushl
sbb
sbb
testl
cmp
pop
jo
push
pop
aas
push
test
mov
inc
sbb
lock
enter
pop
loop
push
jecxz
jg
das
sbb
push
sbb
inc
idiv
jg
push
fistps
xchg
mov
repz
and
push
cmp
cmp
mov
push
shlb
lods
cmp
or
cld
sbb
std
push
pop
dec
or
inc
incl
jmp
rclb
pop
ret
ja
add
xor
cmp
dec
jns
ljmp
inc
lock
add
push
call
sub
sub
sarb
cmp
std
decl
jne
inc
cmp
jne
call
add
pop
ljmp
std
jb
leave
enter
push
fsubl
test
ljmp
cld
push
adc
jp
xor
int
sbb
xlat
xor
mov
xor
ret
les
sti
mov
lcall
vcvttsd2si
iret
cmp
fnstcw
std
aaa
mov
aad
jb
xor
fcomp
fs
pop
fcmovnu
fnsave
ficoms
jb
je
loopne
aaa
loop
xor
aaa
dec
int
out
call
mov
cmp
in
out
jae
xor
adc
hlt
xlat
call
aaa
push
stc
fbld
sti
cld
jae
std
rcll
inc
pop
jbe
mov
dec
jle
fucomi
movzwl
jl
push
int3
call
jl
and
adc
add
ja
push
sbb
sahf
sub
loope
inc
jmp
ljmp
adc
mov
dec
xchg
inc
xor
icebp
mov
adc
pusha
fsub
out
pavgw
adc
add
rorl
hlt
sbb
jmp
dec
stos
lea
inc
inc
pop
test
push
sbb
sub
popf
hlt
add
sbb
xchg
test
push
mov
aad
sar
incb
mov
jge
sarb
pushl
cmp
mov
mov
jg
push
mov
std
mov
mov
pushl
lret
adc
aas
inc
rcrl
outsl
adc
jg
mov
iret
outsl
jmp
dec
inc
push
dec
fisttpl
lcall
mov
lcall
lea
sbb
adc
pushl
popa
dec
inc
sub
mov
mov
decl
cld
inc
sub
inc
and
fadds
pop
sub
popa
jnp
shl
jne
push
mov
and
mov
andb
xor
adc
rclb
xor
int3
ret
sub
pop
sbb
push
int3
mov
loope
dec
push
xchg
andl
push
andb
mov
mov
popa
das
jns
pop
cld
loopne
adc
push
subb
punpcklwd
jne
pop
or
cmc
lcall
iret
out
pusha
inc
mov
dec
cmp
push
cli
nop
arpl
add
adc
outsb
into
cmp
stos
jae
mov
icebp
movsb
xchg
fdivrp
call
jg
std
pusha
repz
jge
std
mov
mov
sarb
fdivrl
decl
lahf
lock
fcompl
mov
sbb
push
jnp
outsl
or
ljmp
cld
xor
dec
mov
faddl
dec
fst
dec
sbb
fmuls
out
push
cmp
incl
add
push
inc
pusha
lods
or
and
out
and
jg
add
test
pop
pop
mov
xchg
add
add
ret
mov
push
call
shrb
xor
fistpll
test
sub
add
in
stos
xor
stc
jle
jp
jmp
dec
test
fdivrl
pushf
cmp
mov
repnz
daa
and
lock
mov
ja
sbb
or
pop
popa
or
in
enter
mov
in
les
ljmp
std
subb
repnz
or
test
push
jp
js
dec
je,pt
sub
pushl
or
test
pop
ljmp
fdivl
scas
xchg
cs
ljmp
jg
fmull
jnp
hlt
or
lcall
andl
pop
aas
mov
dec
mov
mov
xor
incb
out
cmpsb
pop
pusha
nop
xchg
dec
jo,pn
add
fwait
incl
xorl
xchg
push
or
in
cmp
std
ljmp
xor
jbe
sub
incb
dec
ja
mov
cld
push
push
xor
jg
js
adc
ds
mov
fimuls
std
ljmp
loopne
imul
das
rorl
jno
je
mov
mov
loopne
inc
push
pop
push
xor
sarl
int
pushl
ss
jg
mov
or
or
add
sbb
xor
push
or
or
mov
cwtl
mov
add
lret
aam
pop
adc
nop
pop
addr16
faddl
pop
push
or
sar
aam
or
adc
sub
adc
cmp
outsl
add
xchg
jae
arpl
arpl
pop
lods
pop
jge
mov
decl
shll
push
inc
add
lock
cltd
loopne
mov
loop
test
out
fldt
cld
enter
inc
dec
fadd
pop
mov
ja
jo
adc
shll
jmp
and
rol
and
out
pop
pop
jo
dec
insl
es
xor
and
xchg
mov
andb
mov
jo
aad
shrb
add
or
incl
decl
or
lods
lahf
arpl
adcl
inc
je
adc
add
mov
and
test
loope
jle
pop
aaa
cmp
cmp
mov
pushl
mov
je
clc
outsl
addr16
gs
push
push
jmp
notb
sub
aas
adc
push
push
lods
adc
inc
ss
dec
in
add
ret
cmp
cmp
jg
loop
sub
or
mov
jl
push
adc
loope
daa
stos
adc
or
push
jg
aad
pop
pop
ljmp
push
addr16
stos
xor
pop
ljmp
cmp
jne
addl
arpl
jmp
movsl
pusha
jmp
outsl
jecxz
jbe
inc
pop
mov
rorb
jmp
rcr
or
insb
add
inc
les
jge
jmp
xor
inc
inc
call
mov
rol
clc
push
ss
outsb
dec
sbb
daa
dec
ss
mov
add
shrb
movsl
xlat
adc
es
push
inc
or
pop
ljmp
and
dec
bound
js
call
loope
push
fstpl
orb
ds
xchg
es
aaa
dec
adc
jg
push
adc
repnz
and
in
inc
xorl
loope
push
shl
pop
shrb
xorb
repnz
cli
addr16
clc
pop
clc
sbb
fs
jb
outsl
lds
hlt
jo
cmp
es
xor
inc
clc
xor
cli
sti
adc
stos
loopne
loopne
jp
ds
mov
js
and
ret
data16
test
imul
sub
cmp
adcb
and
ljmp
incl
xor
xchg
jb
imul
pop
pop
xchg
or
jg
clc
int3
push
mov
mov
pushf
arpl
mov
fwait
mov
pop
add
mov
dec
jp
jo
mov
dec
cltd
push
inc
add
add
ds
decl
imul
add
cli
add
fs
add
add
decb
mov
mov
pop
cltd
mov
idiv
mov
lea
or
aad
mov
js
inc
push
jle
cltd
jmp
xor
stc
pushf
jb
std
sub
cli
cmp
cwtl
je
push
push
stc
sbb
je
mov
lcall
sbb
pop
mov
mov
mov
inc
rcll
jg
imul
lret
push
shlb
pop
dec
mov
icebp
outsb
mov
ret
pop
loop
fcompl
in
cmp
sarl
xor
testb
add
push
dec
lcall
jno
gs
cmc
loopne
ds
inc
loopne
mov
or
adc
push
or
cmp
push
cmc
call
inc
cmp
enter
dec
int3
inc
sbb
pop
aad
pop
sub
stos
lahf
push
shr
mov
mov
push
push
mov
pushl
xor
mov
mov
dec
push
sub
call
pusha
jae
idivb
insb
addr16
fdivrs
mov
add
pop
aaa
cli
outsl
lock
fdivr
insl
push
pop
lods
cld
ss
push
jmp
pop
cli
push
mov
imul
bound
sbb
aaa
cmp
std
loop
pushl
pop
and
cmp
jmp
fnstcw
and
pop
pop
mov
push
in
mov
add
mov
add
xchg
incl
sti
add
lock
xchg
ljmp
mov
inc
out
or
bnd
loop
jb
out
or
sbb
jl
cmp
xor
pop
loopne
inc
lea
cmp
cld
cmp
pop
ret
mov
int3
sub
jo
mov
sbb
pop
into
add
pop
add
adc
push
pushl
test
nop
adc
rorl
loopne
hlt
decl
out
aas
mov
test
mov
mov
mov
pop
add
call
push
push
fistpl
pop
jl
xchg
push
push
mov
jg
inc
inc
fstpt
fdiv
movsl
movsw
mov
push
decl
lcall
mov
pop
mov
sar
out
pop
mov
test
push
sub
mov
hlt
pushf
ljmp
insb
mov
ja
gs
mov
mov
inc
outsb
jne
jb
shll
je
jb
push
call
outsl
arpl
jae
xor
sbb
cmc
dec
jge
ljmp
pop
in
fisttpl
push
sub
hlt
mov
mov
inc
sti
incl
outsl
incl
ret
data16
xor
arpl
pushl
ficoml
loopne
xor
cmp
mov
inc
or
xchg
and
xor
xchg
xchg
xchg
adc
cltd
je
scas
sahf
push
jg
jg
shl
and
out
daa
int
js
fmull
pop
fdivr
push
mov
dec
je
clc
outsb
sbb
inc
pop
or
lea
adc
and
cmp
ss
and
iret
in
cmp
aaa
lret
lret
pushf
je
jge
and
and
push
hlt
nop
dec
in
mov
add
and
popf
in
mov
stc
ljmp
jmp
shll
loop
lret
or
in
xchg
ret
jns
jmp
incl
jmp
outsb
pop
jo
arpl
pop
or
mov
data16
cmp
insl
cld
stc
jno
sub
call
rclb
aaa
sub
mov
and
dec
xchg
or
in
in
out
out
call
cli
decl
addl
xchg
mov
lcall
mov
pushl
mov
lods
in
inc
mov
inc
rcrb
dec
cmp
cmp
das
cld
jg
clc
xchg
pop
pushf
jmp
mov
jmp
add
cwtl
sbb
jmp
xchg
add
or
cmp
dec
and
and
pusha
push
into
in
mov
dec
enter
push
incl
push
mov
and
call
insl
imul
decl
sub
push
add
or
add
aaa
or
sar
fucomip
jmp
andl
std
sub
filds
inc
cs
pop
ljmp
mov
cmp
sbb
movsl
jge
iret
add
jl
pushf
push
cmpsb
jl
add
and
in
fisubl
xchg
movntq
out
movsl
fdivp
cmp
movsl
mov
or
pop
cmpsb
fwait
jge
loopne
enter
pop
sarb
jl
add
incl
and
or
dec
scas
jle
fdivrs
mov
push
das
push
mov
loopne
loop
movsb
cmpsb
cld
loope
cld
jecxz
adc
hlt
mov
mov
out
scas
pop
pusha
or
or
dec
std
call
mov
pop
call
cmpsb
jmp
add
mov
mov
jb
xor
and
insl
ss
scas
not
or
sbb
inc
push
mov
push
data16
xor
cmovne
pushf
pushf
push
popf
sahf
lahf
mov
mov
cmpsl
std
fucomip
ljmp
mov
sahf
ja
loop
inc
sub
cli
imul
test
js
scas
fsubrp
jg
add
cmpb
cmp
mov
jl
inc
and
pusha
pop
stc
fidivl
xor
test
cs
loopne
das
leave
pop
test
or
pop
je
enter
and
pop
jns
inc
sub
sahf
nop
je
fistpl
jne
xchg
fcomps
filds
mov
jbe
cmpb
dec
ss
xchg
test
shrb
movsb
push
push
shlb
ljmp
test
sarb
xchg
mov
xchg
jo
insl
mov
outsb
fwait
data16
pop
pushf
xor
sahf
aaa
fstpl
mov
mov
sbb
gs
or
fldcw
push
aaa
clc
nop
sbb
sub
in
fwait
in
in
roll
out
pop
and
push
mov
imull
aas
inc
lods
sbb
mov
mov
outsl
je
into
pop
xor
shrl
dec
cmc
jo
adc
push
outsl
je
sbb
addr16
insl
xor
je
nop
cmp
inc
lods
inc
push
inc
jle
fstl
dec
inc
fnstsw
push
sti
cmpl
movsl
push
movsl
cmp
or
and
das
xchg
push
mov
sbb
shlb
call
call
or
mov
repnz
sub
clc
cld
imul
outsl
or
lock
xlat
lea
inc
outsl
mov
or
movsb
stos
imul
test
je
dec
insl
popa
addr16
pop
inc
outsb
arpl
aas
xorb
out
sub
in
pop
sbb
add
movsb
add
inc
cmpsl
jo
sub
xor
daa
outsl
cmpsb
ljmp
andl
fdivrl
mov
sub
clc
jg
or
cmp
sbb
jbe
push
add
push
pop
sti
ud0
push
add
fiaddl
pop
push
and
cmp
xor
aaa
fidivs
rorb
in
movsl
cmpsl
rorl
cmp
dec
cmp
cld
sub
adc
fucomp
dec
add
sbb
xchg
push
dec
addb
in
sub
jne
push
adc
cmp
ss
mov
ds
negb
out
mov
fcomip
dec
push
mov
or
lcall
fistl
mov
cmp
decl
add
imul
jmp
pop
ljmp
je
mov
add
aam
adc
add
imul
adc
push
push
stc
push
push
inc
pop
pop
cwtl
sbb
dec
pop
sar
pop
sub
lds
nop
mov
add
shrl
push
leave
lahf
inc
cmp
adc
dec
outsl
jmp
inc
and
or
mov
js
je
mov
mov
jge
sub
xor
cld
cmpb
fldcw
cmp
or
ss
int
mov
ja
pop
aad
shlb
mov
inc
or
pop
shr
pop
ljmp
hlt
inc
lret
add
add
scas
mov
ja
mov
push
icebp
adc
aam
aad
lret
mov
fisubs
dec
test
add
rolb
mov
popa
fs
jb
or
jae
fbstp
jle
mov
jb
gs
daa
or
jns
mov
inc
dec
ja
jnp
sbb
insl
jle
jp
jg
or
dec
icebp
addb
outsb
data16
dec
std
mov
push
mov
inc
mov
pop
lcall
fldt
test
cs
xchg
sbb
clc
mov
xchg
scas
incl
ja
pop
in
jmp
lcall
addr16
gs
jae
nop
in
loope
lahf
jl
les
mov
jg
sbb
jae
je
or
sbb
jo
shlb
lret
outsl
std
daa
dec
je
dec
mov
cmpsb
mov
call
push
sarl
push
mov
jne
idiv
jg
add
xor
xor
inc
dec
pop
jo
jl
mov
xor
rclb
or
call
mov
push
movw
call
jns
out
mov
pop
popa
pop
cmpsl
ljmp
sbb
addr16
gs
and
nop
cmpsl
push
pusha
push
jo
mov
fucomi
xor
xchg
cli
jp
mov
ss
and
lea
pop
fwait
and
je
call
or
movsb
pop
outsb
sbb
mov
mov
inc
dec
lds
push
sbb
enter
idiv
pushl
loopne
or
pusha
adc
out
loopne
dec
movsl
sbb
in
movsb
ret
incl
je
es
pushf
popf
rclb
and
and
imul
cmp
gs
mov
add
sub
test
jl
fidivrs
loope
mov
mov
fs
cmp
scas
cmp
lret
fistpl
sub
decl
std
fists
fsincos
testl
jnp
das
mov
cld
fists
adc
roll
mov
xchg
sub
inc
mov
adc
or
or
and
add
jmp
je
cmp
mov
push
lock
arpl
sahf
lock
imul
xlat
pop
vunpcklps
sub
push
adc
filds
push
mov
push
std
jae
fidivrl
pop
xorl
cmc
push
aad
lcall
cld
cld
mov
mov
clc
push
mov
mov
adc
sbb
sbb
and
nop
mov
subl
rcll
mov
pop
push
imul
aad
lods
inc
or
outsb
ja
in
dec
mov
in
paddd
add
jbe
dec
dec
dec
es
outsb
fs
popf
popf
gs
mov
xchg
dec
insb
outsl
jb
dec
adc
dec
dec
push
and
test
lea
pop
call
decl
je
inc
aam
jp
outsb
faddl
xchg
sub
cmp
adc
es
ret
sarl
xchg
jmp
clc
inc
data16
xor
mov
flds
mov
cmp
adc
push
test
fucomip
jo
das
dec
dec
sub
jle
sbb
push
sbb
adc
pop
call
mov
push
outsl
push
push
jbe
xor
insb
push
push
sub
icebp
jg
adc
je
jo
pop
push
xor
ret
xor
and
cmp
sub
jae
bound
test
xorb
push
jo
std
outsl
insl
in
push
sarb
pop
inc
pop
xchg
jb
mov
jnp
mov
inc
mov
or
cmp
mov
jg
out
cltd
insl
mov
movsl
dec
pop
cmpsb
cmpsl
js
test
cltd
sub
dec
or
cmp
fsubrs
inc
popf
sbb
mov
cmp
pop
fcoms
iret
into
pop
push
or
icebp
pop
sub
ja
jl
daa
cltd
push
sbb
mov
mov
sbb
mov
mov
inc
inc
aas
push
sub
int3
ret
incb
jge
pop
cmpb
pop
movsb
xchg
sbbl
daa
aaa
sbb
nop
stos
jmp
daa
sbb
pop
fistpl
pop
and
mov
cmpl
ficompl
in
pop
mov
lods
inc
xor
aas
int3
push
std
sub
in
jge
nop
sub
test
lods
aaa
in
dec
or
or
imul
jmp
movsb
xor
insb
out
lea
cmp
jb
sbb
rcl
push
and
push
lcall
jmp
and
sbb
push
mov
scas
rcll
mov
adc
incl
jmp
pop
cmc
hlt
mov
adc
jmp
jnp
add
jmp
and
mov
jae
es
ja
cli
test
mov
sub
ljmp
pop
jle
outsl
mov
int3
ss
jo
add
inc
push
popf
push
push
pop
dec
add
je
add
push
adc
jne
inc
sbb
nop
jecxz
mov
push
mov
and
incl
out
mov
sbb
ja
cmp
add
push
push
inc
aaa
pop
jg
dec
in
cs
cmpl
insb
mov
mov
lret
imul
add
movsb
push
test
out
jecxz
and
push
push
dec
movsb
or
ret
shl
mov
in
push
adc
pop
pusha
iret
adc
mov
lcall
cmp
je
aaa
into
dec
decl
cmpl
jne
pop
rorb
adc
jg
pop
jne
fs
aad
stos
sbb
or
mov
jge
or
js
out
jp
jl
cmp
stos
movsl
addr16
and
clc
pop
enter
jns
xor
pop
stos
cmp
push
ljmp
jp
cmp
or
push
int3
gs
add
sbbl
or
pop
rcrl
dec
dec
push
jecxz
xor
fsubs
xchg
stc
cli
add
leave
push
shl
inc
shrb
lods
call
test
inc
cmp
push
int3
incl
mov
and
sbb
sar
movsb
shrb
mov
fildll
mov
test
arpl
popf
push
adcl
in
mov
push
insb
mov
add
arpl
cmp
or
movsl
mov
es
inc
xchg
imul
incl
ret
addr16
cld
lock
lods
and
jg
aam
je
repnz
mov
ror
dec
loope
or
aaa
fs
stc
fdivr
in
pop
std
idivl
jne
sbb
sbb
ja
mov
clc
call
roll
in
sti
cmc
out
cmpsl
lcall
mov
mov
push
pop
popl
mov
sub
fistpl
mov
and
adc
les
pushf
call
ljmp
mov
out
ja
xorb
adc
and
adc
jg
shrb
jp
cmp
inc
sbb
add
mov
cs
lea
pop
outsb
push
add
pop
sbb
cmp
scas
jbe
jnp
push
pop
push
add
fidivs
call
cmp
jge
pop
xchg
clc
call
aam
inc
lock
cld
push
jne
mov
aad
jg
jmp
loope
inc
out
inc
dec
jl
aam
pop
cmp
cmp
mov
mov
lcall
fs
xchg
repz
aaa
outsb
scas
inc
mov
sbb
pop
ja
cmc
data16
pop
js
cli
sbb
mov
fisubrl
push
test
mov
lock
mov
je
xchg
lahf
and
mov
enter
inc
insl
or
mov
cmc
cmp
mov
jo
jo
and
gs
outsb
mov
shlb
je
mov
mov
lods
or
dec
jno
xor
leave
push
inc
scas
movsl
adc
orb
mov
xor
push
cmc
xor
fstl
ljmp
out
mov
ljmp
inc
insb
sbb
or
gs
mov
pushf
inc
sbb
bound
imul
xchg
xchg
lods
or
out
subb
lock
enter
cmp
jb
clc
adc
add
and
sbbl
cmc
fcmovnb
cmp
stos
or
loopne
loopne
in
pop
mov
ret
loope
xchg
andb
stc
aaa
sbb
addb
xor
jne
arpl
adc
imul
mov
dec
in
mov
in
hlt
les
aad
lea
testl
or
cld
jg
clc
adcl
mov
jbe
sub
es
inc
leave
enter
adc
lock
push
enter
mov
or
inc
mov
jg
xor
cltd
insb
idiv
inc
jle
sub
sbb
or
fistl
mov
and
test
adc
xor
test
sub
mov
jo
sub
jge
or
push
ss
call
mov
out
dec
rolb
mov
cld
pop
cmp
es
cs
or
imul
hlt
call
mov
rol
cmp
aaa
xorl
push
jg
adc
dec
mov
ljmp
stos
sbb
scas
mov
jle
jo
pushl
mov
push
ja
fs
cmp
cld
andb
and
inc
arpl
fadds
adc
lret
jp
insb
mov
insb
popa
push
jns
dec
or
ja
or
adc
jl
fwait
sar
loopne
push
pop
loop
jecxz
gs
scas
outsb
and
mov
les
lret
and
push
dec
out
or
pop
push
sub
roll
pop
gs
test
jnp
pop
add
jbe
or
fnsave
xor
xor
adc
enter
mov
ljmp
adc
xchg
inc
test
dec
dec
fldcw
mov
cmp
cmp
sbb
sar
jg
dec
iret
mov
sub
addb
sub
or
sarb
sbb
rol
push
mulb
pop
xor
fcoms
push
mov
xor
leave
ss
adc
inc
loopne
nop
xlat
xor
and
xor
xor
jmp
andb
inc
push
mov
leave
sub
lds
scas
sahf
arpl
xchg
mov
mov
call
cmp
dec
adc
repnz
or
insb
mov
push
aam
jge
sar
lods
incl
jno
cld
push
repnz
cli
aam
push
call
std
mov
andl
outsb
cmp
lock
decl
hlt
enter
sbb
clc
fcomi
scas
imul
lcall
inc
sub
ljmp
test
add
cmc
bound
mov
cmp
rorb
imul
jmp
pushf
or
sbb
mov
shrb
popa
mov
repz
pop
std
lcall
mov
or
sub
xor
sub
push
imul
ljmp
les
je
fiaddl
or
push
orb
bound
adcl
out
add
pop
pop
pop
stos
sahf
and
dec
subl
cmpsb
pushf
in
jg
lock
inc
cs
xlat
mov
mov
cli
mov
jecxz
clc
lcall
in
insb
fcmovu
in
dec
loop
jge
sbb
xor
jg
stos
rol
inc
or
fdivrs
jl
mov
jmp
decl
mov
movb
pop
insl
mov
push
inc
add
add
sbb
inc
mov
or
inc
sbb
inc
movsl
ret
fbld
test
inc
int
mov
outsl
cld
incl
jnp
mov
fbld
sbb
sub
adcl
call
add
and
daa
aam
push
jp
adc
incl
test
cltd
sbbl
mov
inc
in
call
or
popl
dec
js
js
jns
addr16
sbb
mov
or
nop
in
stos
cwtl
add
inc
add
into
adc
pushl
mov
pop
mov
das
sbb
mov
jmp
jg
fidivs
push
dec
arpl
test
rorl
fists
sbb
outsb
mov
sbb
pop
push
mov
add
andl
pushf
and
lret
inc
negb
inc
ljmp
pop
je
adc
aaa
sbb
mov
or
dec
outsl
cmc
mov
adc
insl
ja
add
hlt
push
push
mov
lcall
clc
mov
mov
rclb
lret
imul
andb
test
adc
adc
xchg
cli
pushl
imul
shll
add
subl
call
test
notb
inc
push
mov
cld
lea
jge
rcll
cmp
mov
rorl
add
mov
add
out
cs
mov
test
test
jne
out
mov
clc
pop
imul
popf
cmpl
and
push
ds
loopne
popf
jg
cmp
je
cli
push
and
or
mull
clc
add
loop
jne
push
sub
add
or
jg
jnp
lods
outsb
call
adc
cmp
arpl
outsb
jmp
cmp
jb
sub
je
addl
cltd
adc
outsl
inc
mov
mov
add
pushl
mov
or
push
push
and
loopne
adc
pop
test
inc
idiv
jne
sbbb
add
dec
loopne
cmp
aaa
cli
ljmp
cltd
cmp
mov
adc
push
fmul
sub
sub
xor
es
mov
rclb
push
pop
les
aaa
mov
jg
dec
es
rcl
dec
push
hlt
mov
adc
sbb
or
mov
adc
lods
lds
push
or
mov
test
pop
inc
add
push
lods
fs
incl
jno
std
xchg
cmp
jle
pushw
cmpl
sub
mov
or
inc
sub
inc
mov
cmp
jg
ljmp
fsubl
rol
and
fisttps
stos
imul
sbb
decl
xchg
pop
cwtl
repz
je
ljmp
pop
pop
pop
ret
nop
and
cmpsb
adc
daa
push
xor
lock
outsb
pop
out
out
pop
data16
shlb
lret
stos
jnp
push
std
incl
push
test
mov
sbb
fsubrs
sbb
sahf
jp
jecxz
jmp
js
aas
packssdw
push
push
push
push
push
outsl
jl
popa
xor
fs
cmp
inc
jmp
rorb
push
xor
test
sbb
dec
pop
jae
and
das
popw
in
adc
decb
add
mov
ret
sbb
and
ret
nop
call
pop
dec
scas
add
mov
into
out
jle
or
call
or
outsl
mov
subb
mov
ret
or
sub
jg
xor
add
xor
mov
pushf
sub
hlt
jbe
or
mov
or
xchg
gs
cmp
sahf
imul
imul
inc
push
jmp
add
or
mov
push
aaa
stos
pop
pop
fstps
mov
pushl
fsts
popf
clc
mov
adc
inc
aas
std
mov
test
or
mov
mov
xor
pop
pop
fildl
add
adc
inc
rol
inc
cwtl
xchg
pop
cmp
mov
add
fnstcw
mov
xchg
jmp
sbb
dec
cld
inc
cmp
lcall
mov
mov
das
insb
fsub
sub
or
mov
cmp
incl
inc
cmp
je
stos
xchg
xchg
adc
shll
or
cli
ficomps
mov
insl
inc
sub
add
jmp
xchg
ss
add
mov
das
cld
lahf
movsb
sub
lret
cs
pop
pop
mov
and
aas
sub
faddl
dec
inc
ljmp
add
add
pop
test
mov
push
and
sbb
and
sbb
dec
pop
sub
adcl
stos
aaa
pusha
imul
pusha
stos
decl
cmp
and
cld
dec
add
pop
and
sti
hlt
ret
pop
cmc
jo
and
add
call
cmp
xor
and
push
lds
jl
inc
xor
loop
add
pusha
cmp
add
lcall
divb
add
neg
jmp
dec
ror
mov
adc
jmp
sbb
int3
aam
decl
loop
orb
cmp
xor
or
ret
jae
xchg
clc
mov
jne
sarl
mov
mov
in
call
popf
out
sbb
adc
fisubs
sub
testb
dec
dec
out
cltd
movsl
out
dec
xor
fsubrp
lahf
pop
push
jns
aam
xchg
adc
sar
mov
stos
mov
or
test
leave
push
xor
js
mov
ret
cltd
mov
dec
inc
sub
outsb
outsl
cmc
incl
xor
push
aaa
mov
icebp
and
mov
imul
iret
or
push
sahf
popa
bound
es
push
mov
es
xchg
push
cmp
or
inc
sub
gs
push
mov
std
push
incl
xor
icebp
lret
dec
lock
dec
dec
insl
imul
icebp
sub
cld
outsl
fs
outsl
test
pop
or
lock
sbb
xor
decl
scas
sbb
inc
push
sbb
das
pop
cltd
push
add
sub
arpl
rcll
dec
or
mov
adc
add
jge
movsb
sbb
mov
inc
adc
jno
fbstp
sbb
icebp
pop
sar
lods
int3
add
mov
push
mov
add
mull
jmp
fs
sahf
pop
mov
dec
pop
mov
jle
pop
mov
push
mov
jl
lods
movb
mov
ljmp
add
sti
jbe
das
aaa
jbe
add
cwtl
icebp
ds
mov
mov
or
ljmp
cld
ds
push
aaa
fstl
sub
sub
call
mov
pop
push
movsb
push
aas
lret
push
cmp
add
add
push
fists
sub
rolb
incl
mov
fisttpl
out
xchg
mov
dec
pop
insl
and
push
and
insb
and
jg
ljmp
into
or
lock
cs
sbb
pop
add
lds
ljmp
push
pushw
ss
adc
sub
jecxz
pop
subb
sbb
cmpsb
push
fyl2xp1
aas
out
inc
or
incl
pop
fldenv
mov
add
mov
ljmp
repz
sarb
js
mov
add
inc
cmp
adc
jl
cmp
pop
jae
mov
and
xor
push
cld
push
ja
es
les
sarb
push
rclb
sub
cmpb
sbb
xor
dec
sti
insl
mov
nop
out
loop
mov
mov
push
push
add
inc
add
in
aas
test
lods
ret
sbb
lret
push
jne
pop
pusha
aad
rol
decl
loopne
and
fisubl
in
jne
call
clc
push
enter
jl
mov
int3
dec
adc
xchg
jne
push
dec
movq
inc
add
cmp
push
dec
test
mov
adc
mov
imul
sub
or
and
and
test
mov
orl
insb
inc
mov
ret
adc
mov
in
or
push
mov
pop
lods
dec
inc
pop
jmp
adc
xchg
jg
call
push
pop
lahf
int3
leave
jb
and
punpckhwd
leave
push
ficomps
cmp
ljmp
lcall
loop
inc
pop
pop
push
popa
lea
pop
aam
inc
sbb
push
dec
add
jg
sbb
push
dec
les
push
and
mov
je
dec
ret
add
fs
adc
movsl
enter
jns
fildll
jmp
lods
rclb
lock
jbe
sub
repz
jl
and
fstps
lcall
incl
insl
cmc
push
repz
or
push
xchg
stos
or
rorb
nop
test
pop
seto
sbb
add
adc
fstps
fisttps
sub
add
push
push
clc
incl
outsb
jnp
xor
or
mov
add
insb
in
adc
mov
leave
sub
pop
mov
cmp
adc
icebp
sbb
sti
or
lcall
es
pop
xor
dec
pusha
in
sbb
jnp
add
call
jno
js
pop
sub
cs
fsubl
jmp
inc
inc
pop
mov
lock
add
int
mov
jle
mov
fisttps
mov
into
pop
ss
add
jns
idivb
cmc
cmp
mov
cmpsb
xchg
das
subb
cmp
std
cmpsb
clc
das
sbb
fcmove
mov
cmpsb
xchg
jle
pop
outsb
outsl
dec
fisttps
dec
sub
adc
ja
add
sti
dec
sub
jl
cmpsb
pop
imull
mov
mov
clc
cld
divl
cwtl
mov
js
pop
push
dec
jle
mov
insb
or
push
or
clc
je
mov
in
rol
outsl
dec
mov
sahf
mov
xor
pusha
icebp
jmp
add
lods
imul
popf
sub
jnp
jge
push
fildll
cmp
pcmpeqw
jmp
inc
xor
xor
inc
rorb
lret
mov
add
cmovns
add
lcall
test
bound
add
in
pop
add
push
inc
daa
cmp
rcrb
push
mov
fsub
jg
jg
xchg
push
fidivl
jne
scas
in
jp
jbe
leave
fs
xor
sarl
dec
es
cltd
dec
or
jne
incl
popa
call
inc
aas
add
dec
xor
push
sbb
decl
push
or
lea
adc
adc
add
pop
and
xor
add
push
jmp
cli
add
cwtl
stos
add
aaa
popa
xor
popa
adc
enter
mov
ljmp
mov
fnstenv
incl
clc
int
test
mov
pop
sub
push
sub
mov
in
das
in
add
les
lods
adc
or
frstpm(287
xor
push
sti
aas
enter
out
lods
dec
mov
stos
mov
into
pop
divl
aas
pusha
and
mov
mov
dec
scas
mov
fscale
mov
aad
push
jecxz
scas
shll
lret
jg
aam
mov
mov
sub
leave
mov
fstpt
dec
adc
ror
ret
into
mov
subl
xchg
cld
aas
rcl
mov
ljmp
sub
stc
int3
in
int
mov
leave
cli
sub
mov
add
loop
aad
ljmp
pushl
cmpsb
add
or
inc
int
fs
gs
mov
enter
mov
stos
aad
mov
ljmp
or
fcmovne
pop
mov
and
ljmp
pop
jecxz
incl
ret
jg
int3
mov
add
fcomps
push
jle
adc
ret
pop
jb
sbb
test
pop
sahf
cs
or
das
xchg
pop
pop
mov
in
subl
inc
sbb
adcl
and
out
fcoms
pop
and
pop
mov
inc
ljmp
dec
inc
cmp
cs
add
or
outsb
imul
sub
cli
push
testb
sub
insb
dec
adc
arpl
das
cmp
outsb
push
sub
sub
les
pop
data16
mov
std
jmp
add
jmp
jge
add
fnstcw
ljmp
add
jne
mov
add
outsb
or
incl
fwait
fwait
sti
jae
sub
add
inc
add
sbb
push
lahf
mov
jae
adc
arpl
jnp
jg
dec
lock
subb
popa
leave
insl
dec
jne
imul
imul
std
fldl
xor
pop
adcb
push
addr16
cmp
and
das
pop
mov
lods
or
push
dec
pop
dec
je
jo
gs
pop
adc
aaa
cmpsb
jne
bound
jae
inc
shll
cld
inc
push
mov
xchg
aad
das
je
pop
jb
pop
and
and
pushl
ds
arpl
jp
dec
idivb
or
push
cs
decl
imul
mov
arpl
pop
or
outsl
fs
or
mov
int
testl
mov
call
sbb
cmp
jmp
fs
jmp
ja
sub
xor
and
je
inc
jne
push
sub
je
repnz
or
lods
xchg
jae
dec
gs
mov
xor
outsl
movsl
pushl
andb
pop
test
fld
push
lock
or
aam
inc
adc
ss
pop
imul
jnp
or
jp
outsl
pushl
or
test
push
imul
dec
dec
je
inc
in
mov
jns
jb
call
outsl
je
popa
insb
push
jne
jns
js
aas
pop
sti
aas
test
dec
gs
outsl
adc
inc
xor
imul
xor
push
adc
push
je
mov
std
fwait
jo
inc
lock
insl
sub
cmp
insl
imulb
mov
lcall
int
mov
jo
push
gs
push
nop
lret
pmuludq
jae
push
imul
dec
jae
cwtl
pushf
test
incl
imul
jne
pop
cld
stos
dec
fs
jo
data16
femms
inc
iret
insl
sbb
xchg
mov
testb
stc
inc
dec
adc
fcoms
pop
incl
movb
jecxz
test
fstpl
pushl
pushl
pop
dec
stos
psubq
add
insl
into
insb
ret
xor
add
jo
mov
or
iret
repnz
sub
push
ror
jg
pop
clc
fs
push
jo
ja
pop
sbb
decb
lcall
lcall
or
adc
mov
mov
lods
lock
adc
arpl
push
mov
lods
or
cmc
stos
je
idivb
jbe
inc
pop
adc
insb
call
push
mov
mov
ljmp
dec
bound
cmp
dec
push
xor
popf
adc
outsb
test
ljmp
cld
sub
inc
jge
je
insl
dec
pop
inc
mov
mov
mov
push
or
xchg
ljmp
jl
aam
add
push
push
daa
push
jbe
outsb
or
mov
incl
xchg
ja
and
cwtl
mov
stos
sbb
ret
mov
decl
gs
push
dec
push
rorb
fcomp
sbb
add
jo
pop
outsb
sar
lea
sbb
pop
or
xor
dec
sahf
xor
inc
mov
jmp
pop
cmp
inc
jae
pop
imul
ret
mov
out
mov
lods
bound
or
push
fwait
popf
mov
punpckhbw
dec
fisttpl
aad
sub
inc
push
sub
inc
xlat
jl
lahf
aas
aas
xor
leave
inc
decl
pop
or
ss
cmp
lret
mov
dec
sbb
imul
mov
in
inc
popa
jae
mov
push
outsl
loopne
movsb
test
add
popa
int3
pop
sti
js
in
push
inc
fisttpll
inc
mov
sbb
and
sub
das
cmpsb
mov
enter
inc
push
loopne
enter
scas
or
rol
pop
xor
xor
add
sub
pop
pop
pop
lcall
pop
mov
mov
or
adc
sbb
adc
icebp
movsl
lcall
or
jg
aaa
push
adc
or
inc
rdpmc
or
lods
incl
cmp
notrack
fucomi
or
or
dec
mov
or
pop
xor
push
pushl
or
or
add
or
pop
push
pop
add
decl
push
or
or
sbb
mov
adc
cmp
mov
jle
lock
imul
add
adc
sbb
or
push
in
lcall
or
or
and
push
push
or
fdivrp
mov
adc
or
dec
movups
sub
pop
outsb
mov
push
pop
nop
pop
push
inc
lock
rorl
movsb
push
adc
sub
outsl
jmp
pop
adc
add
push
xor
pop
int3
xor
or
adc
call
inc
push
or
ja
sbb
push
or
push
das
daa
test
sbb
movlps
call
push
adc
mov
dec
in
out
and
jmp
les
pushl
mov
sbb
cmp
push
pushl
or
movups
or
ljmp
icebp
adc
or
sbb
push
add
lock
or
mov
adc
pop
pop
push
clc
jmp
adcl
cmp
dec
jo
or
adc
pop
xchg
ljmp
xor
and
sub
and
push
pop
or
xchg
xor
lods
or
inc
mov
ljmp
adc
sbb
test
adc
or
dec
mov
test
lock
in
dec
out
mov
pop
push
add
gs
pop
and
insl
lret
dec
push
or
cwtl
outsl
rcrb
addr16
ljmp
ficoms
push
sbb
push
push
lock
dec
mov
outsl
fcmovnu
adc
in
push
aaa
pop
or
push
push
rolb
jg
dec
cld
orps
sti
loope
push
xchg
inc
sbb
out
add
push
lods
add
sbb
mov
cmp
sub
pop
jmp
cmp
adc
or
or
dec
push
cs
add
test
fistpll
dec
push
cmpsb
and
mov
lock
aad
lock
adc
jle
icebp
incl
push
or
fmuls
and
dec
pop
adc
insb
sub
pop
and
or
and
sbb
push
and
lcall
into
mov
add
jns
cmp
testb
mov
cmp
lock
add
pop
sub
dec
mov
loop
ljmp
jmp
jg
inc
iret
xchg
mov
sub
pop
jbe
xchg
je
mov
inc
adc
xchg
ss
xchg
movsl
sar
das
fnstsw
jbe
xor
dec
mov
cmpsl
mov
ret
jl
push
sub
add
and
xorb
sti
mov
jnp
test
aaa
cli
je
pop
inc
add
push
idivb
pop
daa
pop
cli
or
rcrb
fcomi
pop
daa
adc
sbb
test
movsl
dec
inc
divl
inc
add
mov
test
test
lock
or
lea
adc
mov
jne
mov
sub
adc
jb
mov
adc
rorb
jne
push
out
pop
stos
jae,pt
xor
stc
jb
shl
cmp
xor
es
das
leave
or
sub
dec
jne
inc
sbb
add
pop
jp
.byte
.byte
std
add
fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
in
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
shlb
pushl
cmp
pop
je
andb
int
sbb
dec
fmuls
push
rorb
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
jge
pop
fildl
shr
jmp
or
xchg
mov
stos
pop
pop
or
insb
in
fsts
fnstenv
mov
push
stos
hlt
andl
adc
sti
sub
mov
or
add
cmp
jne
incl
inc
sbb
or
jmp
xor
mov
pop
mov
add
leave
pop
lahf
std
mov
jo
cmpb
clc
inc
inc
jmp
adc
mov
mov
notl
push
mov
mov
inc
inc
test
add
dec
out
jne
pop
xor
mov
xor
cmp
mov
and
xlat
inc
imul
lcall
fs
imul
inc
movsb
imul
dec
pop
aaa
idiv
inc
pop
stc
cli
outsl
xchg
dec
bound
sub
imul
adc
pop
push
and
clc
push
add
mov
pop
adc
leave
add
addl
adc
xchg
adc
imul
outsb
pop
movsb
jns
repz
imul
fdivs
outsl
adc
xor
inc
adc
push
pop
jl
out
adc
pusha
insb
ljmp
jae
or
lock
push
push
jg
shrb
mov
add
mov
out
jo
js
inc
jl
incl
idivl
jg
jae
mov
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
cmp
add
push
push
fstpt
or
mov
cmpl
push
or
jb
jmp
mov
mov
lea
movzwl
inc
sub
sti
fistpl
orl
cmp
outsl
outsl
fisttpl
popf
mov
inc
je
cmp
and
and
hlt
movsl
clts
pop
cmc
in
sub
and
add
xor
and
int3
push
bound
ljmp
pop
mov
or
push
mov
call
push
sahf
adc
outsb
mov
test
je
xor
sbb
add
pop
stos
push
in
insl
mov
or
cmp
fisttpll
mov
neg
lea
jne
cmpb
aaa
mov
adc
jge
sub
cli
aas
mov
inc
sub
lret
xchg
mov
or
pop
pop
call
out
inc
jmp
xor
or
mov
push
lahf
pop
lods
insl
std
jecxz
sbb
dec
mov
mov
and
cmp
mov
insb
negb
push
or
cmp
xlat
fsts
sbb
jo
or
ret
je
push
in
adc
pop
sbb
or
and
push
loope
sti
inc
in
sahf
sub
cmp
jmp
fs
pop
in
and
jne
adc
fildll
xchg
push
imul
std
xchg
push
inc
cmp
jl
jmp
sub
pop
mov
adc
pop
jb
dec
xor
or
into
xor
shll
rcl
rcl
jb
dec
rcl
aad
insb
lock
insb
mov
sub
push
es
fdivl
stos
mov
or
dec
and
lds
js
sbb
cld
push
push
sysexit
dec
int
lods
jne
scas
mov
xlat
push
mov
mov
mov
mov
inc
xor
xor
sahf
push
xorb
pop
in
jns
out
ds
or
test
call
mov
fwait
sbb
jnp
mov
test
aaa
orb
ja
and
mov
push
push
loopne
adc
adc
mov
mov
push
xor
push
xor
enter
sahf
imul
ss
fidivrs
and
push
cltd
push
jmp
sub
inc
pop
ds
push
mov
sti
hlt
or
inc
pusha
cld
sbb
or
insb
dec
add
jmp
shrl
add
mov
shlb
shlb
jns
lret
in
aam
aad
data16
outsl
fadds
ficompl
fildl
pop
sbb
jecxz
cs
mov
out
mov
mov
sbb
in
ss
cmpb
mov
cmp
xor
mov
loope
dec
lahf
cmpsl
mov
outsb
dec
mov
add
jbe
incb
ret
addl
lahf
sub
add
les
lods
pop
add
mov
imul
or
pop
enter
mov
or
test
shll
outsl
xor
out
scas
cmp
inc
dec
xor
mov
sub
and
or
aad
xor
add
outsl
sub
inc
cmp
jb
jmp
cs
jbe
mov
outsb
je
inc
lods
es
dec
jp
sub
adc
xchg
or
aaa
in
push
pushf
xchg
outsl
xchg
data16
cs
je
ja
xchg
jb
dec
rcl
xchg
gs
pop
dec
imul
outsl
jae
je
dec
shll
push
imul
outsl
shlb
pop
push
xor
or
push
dec
shll
push
outsl
popa
insl
pop
xor
shll
cs
shll
xor
lcall
xor
inc
imul
in
in
out
pop
pop
es
out
lock
mov
cmpsb
arpl
add
aam
shlb
push
imul
fs
jns
loopne
lcall
mull
stc
cli
sti
cld
sahf
mov
lcall
aam
pop
inc
jl
push
ret
inc
xchg
push
or
cmp
adc
mov
or
sbb
adc
add
arpl
or
and
sub
movsl
xchg
enter
loopne
xor
mov
pusha
gs
mov
mov
push
xor
xchg
gs
xchg
imul
mov
push
pop
lret
pop
int3
popa
int
imul
popa
rcl
shlb
push
mov
xchg
or
pusha
rol
sbb
sub
pop
andb
movb
jnp
nop
jmp
jb
and
add
inc
sbb
outsb
xchg
pop
mov
mov
std
xor
sub
repnz
je
or
sub
aaa
and
cld
xor
and
add
fdivrs
cmp
jecxz
js
push
adc
das
popf
insb
fwait
in
push
loop
out
je
lock
int
loop
and
fisttpll
push
mov
mov
cld
cltd
sysenter
sbb
inc
jno
insb
shll
push
pop
pop
push
aam
jnp
pusha
mov
insb
cmp
pusha
inc
push
mov
dec
shll
jns
imul
call
cmp
mov
sub
jle
add
xlat
ljmp
rcl
pop
pop
push
decb
out
shll
cmp
cmc
pop
jae
shlb
pop
int
shll
je
dec
shll
outsl
ja
inc
shll
inc
imul
iret
push
pop
push
jmp
shlb
addr16
or
xchg
fimuls
or
mov
ss
or
pop
loopne
icebp
mov
or
leave
sbb
jle
ret
je
mov
cmpb
mov
cmp
leave
lea
fldt
or
add
adc
std
sbb
sbb
loope
repz
adc
sbb
call
popa
xor
imul
dec
sarl
imul
push
fwait
xchg
fs
insl
jbe
inc
fcoml
enter
add
pop
pop
or
ret
in
std
adc
adc
and
jb
in
ret
fs
push
fadds
lods
dec
loop
mov
xor
or
sbb
jo
adc
test
cltd
add
push
xchg
cmpsl
rol
inc
xchg
sbb
and
jmp
out
fdiv
arpl
pop
push
xor
ficomps
cs
adc
adc
xor
lods
out
adc
mov
xor
orl
pop
mov
punpckhdq
dec
ljmp
or
pushf
add
jmp
push
mov
push
fs
xor
dec
call
ja
rcl
inc
cmpsb
jmp
push
test
mov
push
je
leave
cmp
dec
int
push
cld
int3
gs
push
and
lcall
jb
fcompl
outsl
mov
call
mov
push
imul
imul
jbe
jb
cmp
xor
outsl
popa
xchg
cmpsb
imul
arpl
in
pop
push
outsl
jne
mov
gs
arpl
inc
dec
shll
lcall
shlb
in
mov
push
or
cwtl
fs
fs
loopne
mov
sub
insl
cmpsl
sbb
push
pop
fcmovnb
or
hlt
adc
add
push
push
popa
add
mov
mov
cmpb
mov
pop
sbb
test
and
lcall
mov
mov
mov
fstpt
mov
outsl
push
xchg
icebp
je
push
js
or
adc
iret
mulb
sbb
adc
jo
scas
call
inc
cmpsl
mov
or
sub
jp
add
outsb
aaa
xlat
mov
push
lock
push
inc
mov
out
push
nop
mov
push
pop
or
sbb
sub
lds
mov
and
pop
loope
popa
xchg
sbb
inc
andl
mov
pop
pop
lock
movntq
insb
out
lret
enter
ljmp
clc
ret
stc
test
push
leave
xor
push
fistpl
pop
filds
mov
lods
xchg
mov
lahf
call
cmpl
mov
cmp
enter
sbb
hlt
jae
aaa
pusha
dec
cmp
xorl
cs
pop
jo
or
hlt
fcompl
adc
push
je
adc
fcom
enter
rcr
push
ljmp
out
dec
cmp
xchg
push
xchg
pop
clc
je
adc
dec
rorb
jo
test
xchg
fwait
pusha
jmp
mov
cmpsb
adc
xor
shll
js
scas
shll
push
fsubrl
xchg
xchg
movsl
push
int
je
xchg
cmp
and
and
outsb
fs
shll
insb
gs
jmp
out
lock
shrl
repnz
cltd
repz
cmc
xor
pop
int3
rolb
mov
push
aaa
cmp
inc
push
mov
ljmp
cld
add
clc
add
mov
jmp
outsl
push
xchg
int3
xor
sar
rclb
pop
popa
outsb
and
adc
aaa
pusha
push
mov
lahf
pop
bnd
fdivr
aam
pop
bnd
aad
test
jns
lahf
test
shl
clc
push
clc
lods
adc
enter
ss
into
add
movsb
inc
lcall
jns
imul
gs
stos
pop
pop
and
je
dec
imul
js
mov
mov
push
mov
fcoms
mov
mov
xor
push
dec
push
push
jnp
xorl
pop
push
mov
dec
push
add
hlt
add
mov
outsb
sub
pop
les
mov
iret
into
je
or
subb
add
cmp
sub
rcl
xlat
add
jnp
pop
push
nop
insl
and
ds
fs
inc
ljmp
adc
test
stc
ficoms
divb
mov
cmp
cmp
mov
and
adc
out
jl
subb
cmp
push
pushf
mov
popf
data16
and
clc
in
mov
adc
je
pop
push
inc
or
add
jmp
xchg
push
shll
dec
xchg
inc
enter
shll
jb
dec
shll
gs
leave
adc
sahf
push
je
lret
mov
add
lret
mov
je
jb
bound
daa
lret
mov
je
inc
adc
call
insl
push
mov
aam
imul
or
and
je
insl
fcom
jmp
in
sti
pop
jp
ss
sti
and
sbb
adc
add
inc
dec
adc
push
sbb
ret
pop
or
add
les
dec
data16
adc
or
cmp
ljmp
fdivs
or
inc
xor
ret
in
pop
in
fdivr
fdivr
mov
cld
fdivr
mov
cmpl
lea
mov
add
decb
popa
sbbb
or
ja
pushf
rcrb
push
jle
rcll
ja
jae
iret
ficompl
loope
addr16
popf
out
jnp
dec
push
jnp
or
mov
or
sbb
jo
pop
mov
xor
add
pop
negb
push
jo
mov
push
push
or
mov
int
jbe
push
or
js
mov
jne
adc
aam
aaa
gs
pushf
pusha
insb
mov
adc
xchg
jg
cmp
flds
fisubrs
xchg
cs
jecxz
dec
andb
hlt
add
cmc
rcrl
rcrl
and
mov
jno
or
or
ret
xor
popf
in
dec
sbb
out
xor
adc
and
rcl
adc
jmp
jmp
cmp
or
or
and
mov
test
popa
stos
jle
adc
enter
mov
sbbb
adc
call
mov
xchg
push
pusha
sbb
push
sti
clc
add
push
sub
lahf
inc
je
mov
cmc
dec
fcoms
in
cmpsb
je
ds
sub
xchg
sbb
sub
jne
cmp
xor
cmp
inc
push
sbb
dec
dec
dec
add
int
mov
or
fistpl
xor
std
push
js
jge
sub
arpl
jl
add
fwait
adc
clc
jne
je
xchg
popa
add
mov
sbb
push
filds
pop
xor
push
cmp
lea
sbb
and
cmpsb
test
push
mov
jae
inc
push
test
jl
xchg
je
or
push
imul
xchg
sub
mov
bound
inc
and
mov
clc
mov
fdivl
mov
mov
lea
add
mov
fwait
mov
or
or
je
or
or
pushf
insb
cmp
sahf
and
jmp
insb
andl
or
and
xor
inc
sub
and
je
mov
jae
stos
lods
pop
lods
popa
scas
pop
lods
insb
scas
dec
popa
pop
and
outsl
je
ret
ds
shll
and
fdivs
outsb
mov
shll
fmull
stos
shrl
pop
inc
adc
cld
std
or
mov
mulb
fisttpll
lock
jo
xchg
cmpl
mov
push
xlat
js
adc
incl
cmp
mov
addb
adcb
or
mov
mov
or
mov
imul
pop
xchg
gs
add
fs
jmp
dec
rclb
push
and
in
insb
inc
js
inc
dec
xchg
lods
jb
jne
mov
popa
lret
int3
int
push
les
mov
push
lds
adc
loopne
pop
fidivl
add
sbb
push
fwait
out
push
cmpb
push
or
mov
bound
cs
orb
ret
icebp
jne
add
push
dec
loopne
or
insl
inc
sbb
sbb
pop
push
adc
dec
out
adc
inc
icebp
pop
adc
sub
pop
sbb
jbe
mov
pop
xor
or
push
xchg
or
add
aam
or
div
imul
ret
push
mov
in
fildll
cmp
jbe
push
ja
divb
pushl
mov
mov
push
or
lods
mov
and
jnp
mov
and
sbb
or
leave
xor
or
adc
fsubl
pop
adc
sbb
fbstp
dec
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
arpl
test
pop
or
popf
sbb
enter
pop
loope
pusha
mov
fcompl
imul
xlat
sbb
mov
push
les
pop
inc
jle
sbb
pushl
jnp
fnstsw
adcb
dec
imul
cld
cmp
ss
sahf
sbb
and
arpl
shr
out
mov
ss
rclb
lock
inc
fildl
or
or
sbbb
and
movl
fcoml
add
lea
mov
pop
sub
add
cmp
incl
mov
out
mov
fisttpl
mov
mov
sub
insb
mov
dec
mov
push
push
ficompl
loopne
addb
syscall
xchg
lcall
sbb
lcall
pop
mov
mov
sub
imul
sbb
ds
push
or
and
or
sbb
push
push
mov
add
ret
push
test
enter
inc
mov
shlb
hlt
jge
and
dec
hlt
or
dec
mov
add
jge
jl
add
jo,pn
push
mov
or
cltd
lea
rcrb
add
stc
negb
push
fsubs
push
push
test
sub
cmp
pop
xchg
mov
test
hlt
out
xorb
jle
push
pop
lea
movl
stos
dec
sub
lea
int
mov
jl
fcomps
inc
clc
aaa
mov
testl
or
cld
push
inc
or
push
mov
mov
daa
clc
cmp
ss
lea
cli
jl
stc
mov
xchg
fcomps
imul
shll
mov
test
cmp
in
adc
mov
aad
inc
mov
and
and
inc
push
adc
inc
add
jmp
adc
push
rcll
leave
push
sub
aad
push
mov
pop
shll
add
ss
push
adc
cmp
push
ret
inc
push
addb
fnstenv
adcl
por
push
lret
lds
push
mov
push
jmp
out
in
mov
mov
sbb
pop
imul
jmp
add
mov
jns
add
sub
xor
mov
cli
cmc
arpl
outsb
adc
xor
pop
fcmovnb
push
pop
adc
jbe
jmp
jne
dec
mov
push
xchg
fimull
mov
cs
add
inc
sbb
clc
outsl
fistps
adc
cmpw
jne
fwait
or
lods
shr
inc
sub
xchg
jmp
jo
cld
mov
push
sbb
out
jp
sbb
adc
fmuls
ret
push
in
inc
pushf
adc
sub
inc
mov
jne
xor
sub
push
dec
mov
ja
fisttpl
inc
dec
jne
out
ss
scas
popa
ret
addr16
aas
mov
gs
dec
mov
mov
sub
lods
sub
add
pop
cmc
adc
xchg
push
test
push
lea
sbb
lods
xchg
ljmp
add
ret
mov
add
add
shl
aad
cmp
jl
and
hlt
sarl
cmpb
inc
jecxz
add
adc
or
fwait
jns
add
mov
ja
lods
js
addl
mov
lock
jne
enter
xchg
mov
xchg
adc
xchg
ret
addr16
lock
xchg
fadds
ret
popa
adc
ja
jnp
je
pop
clc
jne
mov
pusha
sub
push
shrl
call
into
bound
push
bndstx
push
in
mov
ret
and
lret
rclb
lea
je
sub
addr16
imul
adc
push
lahf
cmpsl
add
push
sbb
es
mov
arpl
ljmp
in
in
insb
cmp
add
mov
push
push
adc
cltd
fs
jnp
addr16
adc
cmp
scas
movsb
add
scas
add
xor
and
add
mov
mov
loopne
mov
and
push
dec
rclb
pop
mov
inc
adc
jge
js
cld
jg
movb
mov
sub
or
aaa
jno
push
mov
sub
jp
sub
and
inc
test
cmp
jne
call
jmp
add
pop
mov
xor
jb
sarb
dec
push
xor
pop
xor
cmpl
ja
inc
imul
mov
jns
ret
lock
or
test
jge
lret
and
xchg
std
dec
enter
mov
mov
cltd
xchg
and
add
cwtl
fildl
gs
insb
insb
inc
popa
arpl
pop
shlb
insl
pop
andb
inc
jo
adcb
cmpsl
sbbl
and
lock
xchg
lods
adc
jbe
mov
push
iret
pushf
cs
xor
add
loopne
lds
lcall
cltd
pop
idiv
add
push
cmp
or
fnstcw
mov
test
ret
adc
movsb
push
pop
mov
sub
pushf
fwait
xor
mov
cmpsl
cwtl
call
decb
pop
mov
ss
nop
inc
adc
rcrb
cmp
inc
jo
pop
ud2
push
xor
xor
aam
lret
mov
int
mov
outsl
jo
lret
mov
jns
imul
add
jbe
addb
inc
insb
cmp
sub
inc
fnstsw
fists
leave
push
je
xor
adc
bound
sbb
shlb
push
push
inc
sub
push
mov
movl
gs
je
pop
nop
scas
in
imul
lea
repz
pop
push
jmp
ja
imul
push
sbb
push
mov
lcall
pop
sbb
mov
mov
adc
sub
fnstenv
pop
add
adc
pop
pusha
pop
jb
adcl
or
insb
or
cs
push
push
mov
lods
jl
pop
adc
rcrl
or
mov
and
sub
std
aad
sbb
stc
lods
iret
or
sti
fdivr
adc
inc
in
icebp
dec
push
xchg
call
sahf
loop
bound
xor
mov
adc
call
push
sub
pusha
dec
or
fdivr
repnz
xchg
xor
cwtl
or
gs
sahf
add
or
aad
mov
movsb
xchg
xchg
inc
xchg
dec
pop
mov
sbb
xor
addr16
adc
inc
mov
orl
mov
aaa
add
inc
pop
dec
and
xchg
xchg
jl
mov
insb
mov
shlb
add
repnz
jbe
call
and
pop
fsub
call
dec
cmp
test
insb
add
int3
inc
ss
add
pushf
xchg
add
inc
inc
mov
mov
jne
cs
test
or
test
filds
test
pop
jae
sub
mov
or
xchg
xor
mov
mov
test
cmp
mov
ficomps
and
es
add
lock
push
lods
insb
push
push
push
rorb
sub
xchg
mov
rolb
js
mov
aaa
into
orl
adc
imul
pop
or
fs
mov
or
aam
sbb
push
sbb
lock
aam
or
or
ret
aas
pop
out
inc
push
dec
xchg
push
xor
jbe
and
enter
xor
hlt
mov
jg
xor
and
inc
or
add
or
repnz
jbe
aam
dec
test
insb
test
je
and
jns
inc
and
jbe
jmp
mov
pop
out
jne
loopne
pop
sub
leave
xor
fbstp
jmp
mov
push
test
jmp
adc
cld
add
in
sub
sub
adc
pause
popf
popa
xor
adc
mov
loopne
push
fdivs
add
lock
xor
mov
rolb
push
sbb
inc
shll
jle
dec
shll
in
lcall
cs
imul
data16
fcoms
lcall
imul
jmp
daa
sbb
es
push
pusha
push
lcall
sub
shll
fsub
pusha
dec
shll
cli
adc
lods
sbb
in
out
pop
mov
xlat
inc
push
adc
add
and
or
lock
pop
leave
sub
mov
push
nop
push
repnz
int3
push
into
push
add
adc
mov
inc
push
cs
insb
add
and
dec
add
dec
gs
gs
xor
ss
gs
outsl
fs
jmp
ljmp
imul
inc
jb
popa
je
push
push
fsubrp
and
and
insb
outsl
jae
dec
popa
outsb
fs
gs
out
lcall
arpl
xor
outsl
jb
cmovb
inc
in
idiv
outsl
outsl
je
gs
cmp
cmpsl
lret
repz
jb
mov
jmp
js
add
jne
test
fidivs
fs
je
push
push
inc
dec
push
das
mov
pop
add
add
nop
pusha
nop
add
call
iret
nop
popa
or
add
pop
add
in
out
cmp
rclb
inc
fadd
push
push
fdivl
arpl
ss
fs
stos
jae
jl
call
mov
fistpll
sbb
pop
inc
or
rolb
mov
add
jge
dec
add
mov
add
dec
nop
in
add
test
nop
je
lea
mov
repnz
mov
testl
push
pop
jne
nop
nop
mov
sbb
jle
pop
shrl
jl
sbb
cli
mov
add
jge
jmp
adcb
sub
ret
xor
cmp
test
jg
popf
adc
je
lea
push
push
dec
pop
pop
mov
sub
in
xchg
add
imul
mov
jae
call
push
pop
loopne,pt
inc
inc
and
cld
pop
lea
nop
incb
lea
push
call
pop
push
jmp
pop
pop
fidivs
fistps
mov
pop
nop
ret
dec
call
negb
mov
loopne
mulps
pop
inc
cmp
inc
push
or
lcall
add
adc
pop
data16
nop
add
sub
fxch
add
mov
push
fadds
pop
mov
int
mov
imul
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
negb
in
call
insl
outsl
fs
dec
sub
out
add
pop
int
mov
push
jmp
or
repz
fsubl
jecxz
dec
out
jns
push
in
pop
cmp
pop
push
imul
adc
out
dec
adc
es
or
push
fcoml
lock
sbb
imul
shlb
pop
add
pop
mov
sldt
xor
insb
pusha
addr16
or
pop
push
test
in
pop
rorl
pop
add
push
and
rorl
and
fistl
les
xchg
test
and
call
fnstcw
daa
inc
xor
shlb
shl
movups
xor
add
std
jo
mov
aaa
hlt
and
cltd
lahf
sti
aaa
js
repnz
cmc
lea
cmp
cmp
cmc
inc
divb
in
mov
stc
dec
cli
test
sub
inc
sti
in
idiv
cmp
pusha
mov
mov
ss
mov
imul
in
fucom
stos
add
push
ljmp
push
or
mov
or
fsubrs
ljmp
xor
ja
cmp
pop
pop
ja
cmp
decl
cmpsb
pop
mov
test
imul
cwtl
jmp
cltd
in
xorb
mov
push
inc
push
dec
cmp
xor
inc
es
cld
in
leave
and
dec
fmul
mov
mov
leave
jl
push
inc
loope
enter
test
push
or
test
incl
je
add
mov
mov
mov
jno
or
daa
dec
fdivrl
jmp
add
jmp
pop
jmp
inc
jmp
xor
fcmovne
fwait
xorps
push
add
dec
jo
jmp
aam
mov
imul
cmp
dec
je
mov
jmp
aas
aas
jg
sbb
jmp
push
mov
sbb
mov
or
fdivrs
incl
add
cmpsb
jmp
or
jl
xchg
add
lcall
std
out
ljmp
scas
imul
push
sbb
cmpsb
and
inc
dec
sbb
in
pop
xlat
and
imul
add
or
sub
jg
adc
cmc
mov
add
cwtl
cld
call
stos
loop
stos
pushf
cmp
cmc
call
into
jl
add
sub
mov
or
out
add
jo
pop
mov
call
mov
mov
dec
mov
or
push
push
out
jnp
or
test
pop
mov
push
push
or
sbb
jmp
or
lahf
sti
cmp
fs
push
mov
mov
mov
enter
jmp
jbe
fstpt
cmpb
inc
ja
lcall
fldt
cld
pop
jne
mov
sbb
sub
adc
sti
mov
jne
lcall
cli
call
sub
insl
pop
mov
test
call
add
jmp
push
fnsave
sbb
sbb
fcoms
lcall
jne
jbe
cmp
shrl
dec
int3
add
xorb
pop
movsb
and
out
outsb
pop
clc
jle
popa
dec
cmp
push
push
or
mov
adc
adc
jmp
test
fistl
lods
pop
dec
cs
mov
iret
push
incl
pop
inc
push
cmp
pop
push
cmp
cmp
mov
jle
pop
xor
dec
lods
xchg
push
into
push
in
fsubrs
decl
push
fmuls
movswl
ds
adc
pushl
inc
mov
jo
xor
inc
mov
push
int3
inc
mov
insl
inc
mov
add
lret
mov
aaa
inc
clc
ret
add
pop
mov
add
repnz
arpl
xchg
pop
dec
orl
jo
push
cmp
hlt
push
jl
push
jns
fwait
lods
or
aaa
clc
decl
idiv
add
repnz
or
or
cmp
outsb
fwait
sub
cs
xchg
add
jae
fidivs
lret
mov
call
add
in
insb
pusha
push
mov
paddusb
mov
imul
add
loop
add
dec
icebp
inc
xchg
and
fs
adc
add
cmp
cmp
mov
in
nop
ss
fbld
out
add
icebp
cmp
outsb
mov
cltd
jmp
sub
or
or
in
mov
jmp
in
push
mov
xchg
push
popa
mov
outsb
pop
push
pushl
pop
mov
lcall
lahf
mov
mov
mov
mov
push
jmp
pop
jmp
add
or
out
fucomi
sbb
and
xchg
roll
decl
fildll
xchg
push
jnp
xchg
or
jmp
out
lea
incl
dec
xchg
cli
fldcw
insb
mov
push
call
push
icebp
or
push
fs
push
pushl
pushf
inc
clc
fs
or
push
lret
data16
outsl
cld
dec
leave
lret
lret
bswap
enter
fcoml
add
sarb
pop
in
xchg
out
mov
test
fisttps
out
sbb
mov
in
sbb
js
lcall
and
adc
dec
jle
int3
outsb
sbb
fcmovne
test
ja
cmpsl
outsb
adc
loopne
test
hlt
mov
outsl
pop
cld
aaa
outsl
sub
pushf
mov
dec
das
dec
add
push
int
rorb
cmp
jne
xor
dec
add
shl
add
jbe
pop
jmp
mov
js
add
mov
adc
jo
adc
adc
sbb
or
cmc
pushl
sbb
sbb
testl
cmp
pop
jo
push
pop
aas
push
test
mov
inc
sbb
lock
enter
pop
loop
push
jecxz
jg
das
sbb
push
sbb
inc
idiv
jg
push
fistps
xchg
mov
repz
and
push
cmp
cmp
mov
push
shlb
lods
cmp
or
cld
sbb
std
push
pop
dec
or
inc
incl
jmp
rclb
pop
ret
ja
add
xor
cmp
dec
jns
ljmp
inc
lock
add
push
call
sub
sub
sarb
cmp
std
decl
jne
inc
cmp
jne
call
add
pop
ljmp
std
jb
leave
enter
push
fsubl
test
ljmp
cld
push
adc
jp
xor
int
sbb
xlat
xor
mov
xor
ret
les
sti
mov
lcall
vcvttsd2si
iret
cmp
fnstcw
std
aaa
mov
aad
jb
xor
fcomp
fs
pop
fcmovnu
fnsave
ficoms
jb
je
loopne
aaa
loop
xor
aaa
dec
int
out
call
mov
cmp
in
out
jae
xor
adc
hlt
xlat
call
aaa
push
stc
fbld
sti
cld
jae
std
rcll
inc
pop
jbe
mov
dec
jle
fucomi
movzwl
jl
push
int3
call
jl
and
adc
add
ja
push
sbb
sahf
sub
loope
inc
jmp
ljmp
adc
mov
dec
xchg
inc
xor
icebp
mov
adc
pusha
fsub
out
pavgw
adc
add
rorl
hlt
sbb
jmp
dec
stos
lea
inc
inc
pop
test
push
sbb
sub
popf
hlt
add
sbb
xchg
test
push
mov
aad
sar
incb
mov
jge
sarb
pushl
cmp
mov
mov
jg
push
mov
std
mov
mov
pushl
lret
adc
aas
inc
rcrl
outsl
adc
jg
mov
iret
outsl
jmp
dec
inc
push
dec
fisttpl
lcall
mov
lcall
lea
sbb
adc
pushl
popa
dec
inc
sub
mov
mov
decl
cld
inc
sub
inc
and
fadds
pop
sub
popa
jnp
shl
jne
push
mov
and
mov
andb
xor
adc
rclb
xor
int3
ret
sub
pop
sbb
push
int3
mov
loope
dec
push
xchg
andl
push
andb
mov
mov
popa
das
jns
pop
cld
loopne
adc
push
subb
punpcklwd
jne
pop
or
cmc
lcall
iret
out
pusha
inc
mov
dec
cmp
push
cli
nop
arpl
add
adc
outsb
into
cmp
stos
jae
mov
icebp
movsb
xchg
fdivrp
call
jg
std
pusha
repz
jge
std
mov
mov
sarb
fdivrl
decl
lahf
lock
fcompl
mov
sbb
push
jnp
outsl
or
ljmp
cld
xor
dec
mov
faddl
dec
fst
dec
sbb
fmuls
out
push
cmp
incl
add
push
inc
pusha
lods
or
and
out
and
jg
add
test
pop
pop
mov
xchg
add
add
ret
mov
push
call
shrb
xor
fistpll
test
sub
add
in
stos
xor
stc
jle
jp
jmp
dec
test
fdivrl
pushf
cmp
mov
repnz
daa
and
lock
mov
ja
sbb
or
pop
popa
or
in
enter
mov
in
les
ljmp
std
subb
repnz
or
test
push
jp
js
dec
je,pt
sub
pushl
or
test
pop
ljmp
fdivl
scas
xchg
cs
ljmp
jg
fmull
jnp
hlt
or
lcall
andl
pop
aas
mov
dec
mov
mov
xor
incb
out
cmpsb
pop
pusha
nop
xchg
dec
jo,pn
add
fwait
incl
xorl
xchg
push
or
in
cmp
std
ljmp
xor
jbe
sub
incb
dec
ja
mov
cld
push
push
xor
jg
js
adc
ds
mov
fimuls
std
ljmp
loopne
imul
das
rorl
jno
je
mov
mov
loopne
inc
push
pop
push
xor
sarl
int
pushl
ss
jg
mov
or
or
add
sbb
xor
push
or
or
mov
cwtl
mov
add
lret
aam
pop
adc
nop
pop
addr16
faddl
pop
push
or
sar
aam
or
adc
sub
adc
cmp
outsl
add
xchg
jae
arpl
arpl
pop
lods
pop
jge
mov
decl
shll
push
inc
add
lock
cltd
loopne
mov
loop
test
out
fldt
cld
enter
inc
dec
fadd
pop
mov
ja
jo
adc
shll
jmp
and
rol
and
out
pop
pop
jo
dec
insl
es
xor
and
xchg
mov
andb
mov
jo
aad
shrb
add
or
incl
decl
or
lods
lahf
arpl
adcl
inc
je
adc
add
mov
and
test
loope
jle
pop
aaa
cmp
cmp
mov
pushl
mov
je
clc
outsl
addr16
gs
push
push
jmp
notb
sub
aas
adc
push
push
lods
adc
inc
ss
dec
in
add
ret
cmp
cmp
jg
loop
sub
or
mov
jl
push
adc
loope
daa
stos
adc
or
push
jg
aad
pop
pop
ljmp
push
addr16
stos
xor
pop
ljmp
cmp
jne
addl
arpl
jmp
movsl
pusha
jmp
outsl
jecxz
jbe
inc
pop
mov
rorb
jmp
rcr
or
insb
add
inc
les
jge
jmp
xor
inc
inc
call
mov
rol
clc
push
ss
outsb
dec
sbb
daa
dec
ss
mov
add
shrb
movsl
xlat
adc
es
push
inc
or
pop
ljmp
and
dec
bound
js
call
loope
push
fstpl
orb
ds
xchg
es
aaa
dec
adc
jg
push
adc
repnz
and
in
inc
xorl
loope
push
shl
pop
shrb
xorb
repnz
cli
addr16
clc
pop
clc
sbb
fs
jb
outsl
lds
hlt
jo
cmp
es
xor
inc
clc
xor
cli
sti
adc
stos
loopne
loopne
jp
ds
mov
js
and
ret
data16
test
imul
sub
cmp
adcb
and
ljmp
incl
xor
xchg
jb
imul
pop
pop
xchg
or
jg
clc
int3
push
mov
mov
pushf
arpl
mov
fwait
mov
pop
add
mov
dec
jp
jo
mov
dec
cltd
push
inc
add
add
ds
decl
imul
add
cli
add
fs
add
add
decb
mov
mov
pop
cltd
mov
idiv
mov
lea
or
aad
mov
js
inc
push
jle
cltd
jmp
xor
stc
pushf
jb
std
sub
cli
cmp
cwtl
je
push
push
stc
sbb
je
mov
lcall
sbb
pop
mov
mov
mov
inc
rcll
jg
imul
lret
push
shlb
pop
dec
mov
icebp
outsb
mov
ret
pop
loop
fcompl
in
cmp
sarl
xor
testb
add
push
dec
lcall
jno
gs
cmc
loopne
ds
inc
loopne
mov
or
adc
push
or
cmp
push
cmc
call
inc
cmp
enter
dec
int3
inc
sbb
pop
aad
pop
sub
stos
lahf
push
shr
mov
mov
push
push
mov
pushl
xor
mov
mov
dec
push
sub
call
pusha
jae
idivb
insb
addr16
fdivrs
mov
add
pop
aaa
cli
outsl
lock
fdivr
insl
push
pop
lods
cld
ss
push
jmp
pop
cli
push
mov
imul
bound
sbb
aaa
cmp
std
loop
pushl
pop
and
cmp
jmp
fnstcw
and
pop
pop
mov
push
in
mov
add
mov
add
xchg
incl
sti
add
lock
xchg
ljmp
mov
inc
out
or
bnd
loop
jb
out
or
sbb
jl
cmp
xor
pop
loopne
inc
lea
cmp
cld
cmp
pop
ret
mov
int3
sub
jo
mov
sbb
pop
into
add
pop
add
adc
push
pushl
test
nop
adc
rorl
loopne
hlt
decl
out
aas
mov
test
mov
mov
mov
pop
add
call
push
push
fistpl
pop
jl
xchg
push
push
mov
jg
inc
inc
fstpt
fdiv
movsl
movsw
mov
push
decl
lcall
mov
pop
mov
sar
out
pop
mov
test
push
sub
mov
hlt
pushf
ljmp
insb
mov
ja
gs
mov
mov
inc
outsb
jne
jb
shll
je
jb
push
call
outsl
arpl
jae
xor
sbb
cmc
dec
jge
ljmp
pop
in
fisttpl
push
sub
hlt
mov
mov
inc
sti
incl
outsl
incl
ret
data16
xor
arpl
pushl
ficoml
loopne
xor
cmp
mov
inc
or
xchg
and
xor
xchg
xchg
xchg
adc
cltd
je
scas
sahf
push
jg
jg
shl
and
out
daa
int
js
fmull
pop
fdivr
push
mov
dec
je
clc
outsb
sbb
inc
pop
or
lea
adc
and
cmp
ss
and
iret
in
cmp
aaa
lret
lret
pushf
je
jge
and
and
push
hlt
nop
dec
in
mov
add
and
popf
in
mov
stc
ljmp
jmp
shll
loop
lret
or
in
xchg
ret
jns
jmp
incl
jmp
outsb
pop
jo
arpl
pop
or
mov
data16
cmp
insl
cld
stc
jno
sub
call
rclb
aaa
sub
mov
and
dec
xchg
or
in
in
out
out
call
cli
decl
addl
xchg
mov
lcall
mov
pushl
mov
lods
in
inc
mov
inc
rcrb
dec
cmp
cmp
das
cld
jg
clc
xchg
pop
pushf
jmp
mov
jmp
add
cwtl
sbb
jmp
xchg
add
or
cmp
dec
and
and
pusha
push
into
in
mov
dec
enter
push
incl
push
mov
and
call
insl
imul
decl
sub
push
add
or
add
aaa
or
sar
fucomip
jmp
andl
std
sub
filds
inc
cs
pop
ljmp
mov
cmp
sbb
movsl
jge
iret
add
jl
pushf
push
cmpsb
jl
add
and
in
fisubl
xchg
movntq
out
movsl
fdivp
cmp
movsl
mov
or
pop
cmpsb
fwait
jge
loopne
enter
pop
sarb
jl
add
incl
and
or
dec
scas
jle
fdivrs
mov
push
das
push
mov
loopne
loop
movsb
cmpsb
cld
loope
cld
jecxz
adc
hlt
mov
mov
out
scas
pop
pusha
or
or
dec
std
call
mov
pop
call
cmpsb
jmp
add
mov
mov
jb
xor
and
insl
ss
scas
not
or
sbb
inc
push
mov
push
data16
xor
cmovne
pushf
pushf
push
popf
sahf
lahf
mov
mov
cmpsl
std
fucomip
ljmp
mov
sahf
ja
loop
inc
sub
cli
imul
test
js
scas
fsubrp
jg
add
cmpb
cmp
mov
jl
inc
and
pusha
pop
stc
fidivl
xor
test
cs
loopne
das
leave
pop
test
or
pop
je
enter
and
pop
jns
inc
sub
sahf
nop
je
fistpl
jne
xchg
fcomps
filds
mov
jbe
cmpb
dec
ss
xchg
test
shrb
movsb
push
push
shlb
ljmp
test
sarb
xchg
mov
xchg
jo
insl
mov
outsb
fwait
data16
pop
pushf
xor
sahf
aaa
fstpl
mov
mov
sbb
gs
or
fldcw
push
aaa
clc
nop
sbb
sub
in
fwait
in
in
roll
out
pop
and
push
mov
imull
aas
inc
lods
sbb
mov
mov
outsl
je
into
pop
xor
shrl
dec
cmc
jo
adc
push
outsl
je
sbb
addr16
insl
xor
je
nop
cmp
inc
lods
inc
push
inc
jle
fstl
dec
inc
fnstsw
push
sti
cmpl
movsl
push
movsl
cmp
or
and
das
xchg
push
mov
sbb
shlb
call
call
or
mov
repnz
sub
clc
cld
imul
outsl
or
lock
xlat
lea
inc
outsl
mov
or
movsb
stos
imul
test
je
dec
insl
popa
addr16
pop
inc
outsb
arpl
aas
xorb
out
sub
in
pop
sbb
add
movsb
add
inc
cmpsl
jo
sub
xor
daa
outsl
cmpsb
ljmp
andl
fdivrl
mov
sub
clc
jg
or
cmp
sbb
jbe
push
add
push
pop
sti
ud0
push
add
fiaddl
pop
push
and
cmp
xor
aaa
fidivs
rorb
in
movsl
cmpsl
rorl
cmp
dec
cmp
cld
sub
adc
fucomp
dec
add
sbb
xchg
push
dec
addb
in
sub
jne
push
adc
cmp
ss
mov
ds
negb
out
mov
fcomip
dec
push
mov
or
lcall
fistl
mov
cmp
decl
add
imul
jmp
pop
ljmp
je
mov
add
aam
adc
add
imul
adc
push
push
stc
push
push
inc
pop
pop
cwtl
sbb
dec
pop
sar
pop
sub
lds
nop
mov
add
shrl
push
leave
lahf
inc
cmp
adc
dec
outsl
jmp
inc
and
or
mov
js
je
mov
mov
jge
sub
xor
cld
cmpb
fldcw
cmp
or
ss
int
mov
ja
pop
aad
shlb
mov
inc
or
pop
shr
pop
ljmp
hlt
inc
lret
add
add
scas
mov
ja
mov
push
icebp
adc
aam
aad
lret
mov
fisubs
dec
test
add
rolb
mov
popa
fs
jb
or
jae
fbstp
jle
mov
jb
gs
daa
or
jns
mov
inc
dec
ja
jnp
sbb
insl
jle
jp
jg
or
dec
icebp
addb
outsb
data16
dec
std
mov
push
mov
inc
mov
pop
lcall
fldt
test
cs
xchg
sbb
clc
mov
xchg
scas
incl
ja
pop
in
jmp
lcall
addr16
gs
jae
nop
in
loope
lahf
jl
les
mov
jg
sbb
jae
je
or
sbb
jo
shlb
lret
outsl
std
daa
dec
je
dec
mov
cmpsb
mov
call
push
sarl
push
mov
jne
idiv
jg
add
xor
xor
inc
dec
pop
jo
jl
mov
xor
rclb
or
call
mov
push
movw
call
jns
out
mov
pop
popa
pop
cmpsl
ljmp
sbb
addr16
gs
and
nop
cmpsl
push
pusha
push
jo
mov
fucomi
xor
xchg
cli
jp
mov
ss
and
lea
pop
fwait
and
je
call
or
movsb
pop
outsb
sbb
mov
mov
inc
dec
lds
push
sbb
enter
idiv
pushl
loopne
or
pusha
adc
out
loopne
dec
movsl
sbb
in
movsb
ret
incl
je
es
pushf
popf
rclb
and
and
imul
cmp
gs
mov
add
sub
test
jl
fidivrs
loope
mov
mov
fs
cmp
scas
cmp
lret
fistpl
sub
decl
std
fists
fsincos
testl
jnp
das
mov
cld
fists
adc
roll
mov
xchg
sub
inc
mov
adc
or
or
and
add
jmp
je
cmp
mov
push
lock
arpl
sahf
lock
imul
xlat
pop
vunpcklps
sub
push
adc
filds
push
mov
push
std
jae
fidivrl
pop
xorl
cmc
push
aad
lcall
cld
cld
mov
mov
clc
push
mov
mov
adc
sbb
sbb
and
nop
mov
subl
rcll
mov
pop
push
imul
aad
lods
inc
or
outsb
ja
in
dec
mov
in
paddd
add
jbe
dec
dec
dec
es
outsb
fs
popf
popf
gs
mov
xchg
dec
insb
outsl
jb
dec
adc
dec
dec
push
and
test
lea
pop
call
decl
je
inc
aam
jp
outsb
faddl
xchg
sub
cmp
adc
es
ret
sarl
xchg
jmp
clc
inc
data16
xor
mov
flds
mov
cmp
adc
push
test
fucomip
jo
das
dec
dec
sub
jle
sbb
push
sbb
adc
pop
call
mov
push
outsl
push
push
jbe
xor
insb
push
push
sub
icebp
jg
adc
je
jo
pop
push
xor
ret
xor
and
cmp
sub
jae
bound
test
xorb
push
jo
std
outsl
insl
in
push
sarb
pop
inc
pop
xchg
jb
mov
jnp
mov
inc
mov
or
cmp
mov
jg
out
cltd
insl
mov
movsl
dec
pop
cmpsb
cmpsl
js
test
cltd
sub
dec
or
cmp
fsubrs
inc
popf
sbb
mov
cmp
pop
fcoms
iret
into
pop
push
or
icebp
pop
sub
ja
jl
daa
cltd
push
sbb
mov
mov
sbb
mov
mov
inc
inc
aas
push
sub
int3
ret
incb
jge
pop
cmpb
pop
movsb
xchg
sbbl
daa
aaa
sbb
nop
stos
jmp
daa
sbb
pop
fistpl
pop
and
mov
cmpl
ficompl
in
pop
mov
lods
inc
xor
aas
int3
push
std
sub
in
jge
nop
sub
test
lods
aaa
in
dec
or
or
imul
jmp
movsb
xor
insb
out
lea
cmp
jb
sbb
rcl
push
and
push
lcall
jmp
and
sbb
push
mov
scas
rcll
mov
adc
incl
jmp
pop
cmc
hlt
mov
adc
jmp
jnp
add
jmp
and
mov
jae
es
ja
cli
test
mov
sub
ljmp
pop
jle
outsl
mov
int3
ss
jo
add
inc
push
popf
push
push
pop
dec
add
je
add
push
adc
jne
inc
sbb
nop
jecxz
mov
push
mov
and
incl
out
mov
sbb
ja
cmp
add
push
push
inc
aaa
pop
jg
dec
in
cs
cmpl
insb
mov
mov
lret
imul
add
movsb
push
test
out
jecxz
and
push
push
dec
movsb
or
ret
shl
mov
in
push
adc
pop
pusha
iret
adc
mov
lcall
cmp
je
aaa
into
dec
decl
cmpl
jne
pop
rorb
adc
jg
pop
jne
fs
aad
stos
sbb
or
mov
jge
or
js
out
jp
jl
cmp
stos
movsl
addr16
and
clc
pop
enter
jns
xor
pop
stos
cmp
push
ljmp
jp
cmp
or
push
int3
gs
add
sbbl
or
pop
rcrl
dec
dec
push
jecxz
xor
fsubs
xchg
stc
cli
add
leave
push
shl
inc
shrb
lods
call
test
inc
cmp
push
int3
incl
mov
and
sbb
sar
movsb
shrb
mov
fildll
mov
test
arpl
popf
push
adcl
in
mov
push
insb
mov
add
arpl
cmp
or
movsl
mov
es
inc
xchg
imul
incl
ret
addr16
cld
lock
lods
and
jg
aam
je
repnz
mov
ror
dec
loope
or
aaa
fs
stc
fdivr
in
pop
std
idivl
jne
sbb
sbb
ja
mov
clc
call
roll
in
sti
cmc
out
cmpsl
lcall
mov
mov
push
pop
popl
mov
sub
fistpl
mov
and
adc
les
pushf
call
ljmp
mov
out
ja
xorb
adc
and
adc
jg
shrb
jp
cmp
inc
sbb
add
mov
cs
lea
pop
outsb
push
add
pop
sbb
cmp
scas
jbe
jnp
push
pop
push
add
fidivs
call
cmp
jge
pop
xchg
clc
call
aam
inc
lock
cld
push
jne
mov
aad
jg
jmp
loope
inc
out
inc
dec
jl
aam
pop
cmp
cmp
mov
mov
lcall
fs
xchg
repz
aaa
outsb
scas
inc
mov
sbb
pop
ja
cmc
data16
pop
js
cli
sbb
mov
fisubrl
push
test
mov
lock
mov
je
xchg
lahf
and
mov
enter
inc
insl
or
mov
cmc
cmp
mov
jo
jo
and
gs
outsb
mov
shlb
je
mov
mov
lods
or
dec
jno
xor
leave
push
inc
scas
movsl
adc
orb
mov
xor
push
cmc
xor
fstl
ljmp
out
mov
ljmp
inc
insb
sbb
or
gs
mov
pushf
inc
sbb
bound
imul
xchg
xchg
lods
or
out
subb
lock
enter
cmp
jb
clc
adc
add
and
sbbl
cmc
fcmovnb
cmp
stos
or
loopne
loopne
in
pop
mov
ret
loope
xchg
andb
stc
aaa
sbb
addb
xor
jne
arpl
adc
imul
mov
dec
in
mov
in
hlt
les
aad
lea
testl
or
cld
jg
clc
adcl
mov
jbe
sub
es
inc
leave
enter
adc
lock
push
enter
mov
or
inc
mov
jg
xor
cltd
insb
idiv
inc
jle
sub
sbb
or
fistl
mov
and
test
adc
xor
test
sub
mov
jo
sub
jge
or
push
ss
call
mov
out
dec
rolb
mov
cld
pop
cmp
es
cs
or
imul
hlt
call
mov
rol
cmp
aaa
xorl
push
jg
adc
dec
mov
ljmp
stos
sbb
scas
mov
jle
jo
pushl
mov
push
ja
fs
cmp
cld
andb
and
inc
arpl
fadds
adc
lret
jp
insb
mov
insb
popa
push
jns
dec
or
ja
or
adc
jl
fwait
sar
loopne
push
pop
loop
jecxz
gs
scas
outsb
and
mov
les
lret
and
push
dec
out
or
pop
push
sub
roll
pop
gs
test
jnp
pop
add
jbe
or
fnsave
xor
xor
adc
enter
mov
ljmp
adc
xchg
inc
test
dec
dec
fldcw
mov
cmp
cmp
sbb
sar
jg
dec
iret
mov
sub
addb
sub
or
sarb
sbb
rol
push
mulb
pop
xor
fcoms
push
mov
xor
leave
ss
adc
inc
loopne
nop
xlat
xor
and
xor
xor
jmp
andb
inc
push
mov
leave
sub
lds
scas
sahf
arpl
xchg
mov
mov
call
cmp
dec
adc
repnz
or
insb
mov
push
aam
jge
sar
lods
incl
jno
cld
push
repnz
cli
aam
push
call
std
mov
andl
outsb
cmp
lock
decl
hlt
enter
sbb
clc
fcomi
scas
imul
lcall
inc
sub
ljmp
test
add
cmc
bound
mov
cmp
rorb
imul
jmp
pushf
or
sbb
mov
shrb
popa
mov
repz
pop
std
lcall
mov
or
sub
xor
sub
push
imul
ljmp
les
je
fiaddl
or
push
orb
bound
adcl
out
add
pop
pop
pop
stos
sahf
and
dec
subl
cmpsb
pushf
in
jg
lock
inc
cs
xlat
mov
mov
cli
mov
jecxz
clc
lcall
in
insb
fcmovu
in
dec
loop
jge
sbb
xor
jg
stos
rol
inc
or
fdivrs
jl
mov
jmp
decl
mov
movb
pop
insl
mov
push
inc
add
add
sbb
inc
mov
or
inc
sbb
inc
movsl
ret
fbld
test
inc
int
mov
outsl
cld
incl
jnp
mov
fbld
sbb
sub
adcl
call
add
and
daa
aam
push
jp
adc
incl
test
cltd
sbbl
mov
inc
in
call
or
popl
dec
js
js
jns
addr16
sbb
mov
or
nop
in
stos
cwtl
add
inc
add
into
adc
pushl
mov
pop
mov
das
sbb
mov
jmp
jg
fidivs
push
dec
arpl
test
rorl
fists
sbb
outsb
mov
sbb
pop
push
mov
add
andl
pushf
and
lret
inc
negb
inc
ljmp
pop
je
adc
aaa
sbb
mov
or
dec
outsl
cmc
mov
adc
insl
ja
add
hlt
push
push
mov
lcall
clc
mov
mov
rclb
lret
imul
andb
test
adc
adc
xchg
cli
pushl
imul
shll
add
subl
call
test
notb
inc
push
mov
cld
lea
jge
rcll
cmp
mov
rorl
add
mov
add
out
cs
mov
test
test
jne
out
mov
clc
pop
imul
popf
cmpl
and
push
ds
loopne
popf
jg
cmp
je
cli
push
and
or
mull
clc
add
loop
jne
push
sub
add
or
jg
jnp
lods
outsb
call
adc
cmp
arpl
outsb
jmp
cmp
jb
sub
je
addl
cltd
adc
outsl
inc
mov
mov
add
pushl
mov
or
push
push
and
loopne
adc
pop
test
inc
idiv
jne
sbbb
add
dec
loopne
cmp
aaa
cli
ljmp
cltd
cmp
mov
adc
push
fmul
sub
sub
xor
es
mov
rclb
push
pop
les
aaa
mov
jg
dec
es
rcl
dec
push
hlt
mov
adc
sbb
or
mov
adc
lods
lds
push
or
mov
test
pop
inc
add
push
lods
fs
incl
jno
std
xchg
cmp
jle
pushw
cmpl
sub
mov
or
inc
sub
inc
mov
cmp
jg
ljmp
fsubl
rol
and
fisttps
stos
imul
sbb
decl
xchg
pop
cwtl
repz
je
ljmp
pop
pop
pop
ret
nop
and
cmpsb
adc
daa
push
xor
lock
outsb
pop
out
out
pop
data16
shlb
lret
stos
jnp
push
std
incl
push
test
mov
sbb
fsubrs
sbb
sahf
jp
jecxz
jmp
js
aas
packssdw
push
push
push
push
push
outsl
jl
popa
xor
fs
cmp
inc
jmp
rorb
push
xor
test
sbb
dec
pop
jae
and
das
popw
in
adc
decb
add
mov
ret
sbb
and
ret
nop
call
pop
dec
scas
add
mov
into
out
jle
or
call
or
outsl
mov
subb
mov
ret
or
sub
jg
xor
add
xor
mov
pushf
sub
hlt
jbe
or
mov
or
xchg
gs
cmp
sahf
imul
imul
inc
push
jmp
add
or
mov
push
aaa
stos
pop
pop
fstps
mov
pushl
fsts
popf
clc
mov
adc
inc
aas
std
mov
test
or
mov
mov
xor
pop
pop
fildl
add
adc
inc
rol
inc
cwtl
xchg
pop
cmp
mov
add
fnstcw
mov
xchg
jmp
sbb
dec
cld
inc
cmp
lcall
mov
mov
das
insb
fsub
sub
or
mov
cmp
incl
inc
cmp
je
stos
xchg
xchg
adc
shll
or
cli
ficomps
mov
insl
inc
sub
add
jmp
xchg
ss
add
mov
das
cld
lahf
movsb
sub
lret
cs
pop
pop
mov
and
aas
sub
faddl
dec
inc
ljmp
add
add
pop
test
mov
push
and
sbb
and
sbb
dec
pop
sub
adcl
stos
aaa
pusha
imul
pusha
stos
decl
cmp
and
cld
dec
add
pop
and
sti
hlt
ret
pop
cmc
jo
and
add
call
cmp
xor
and
push
lds
jl
inc
xor
loop
add
pusha
cmp
add
lcall
divb
add
neg
jmp
dec
ror
mov
adc
jmp
sbb
int3
aam
decl
loop
orb
cmp
xor
or
ret
jae
xchg
clc
mov
jne
sarl
mov
mov
in
call
popf
out
sbb
adc
fisubs
sub
testb
dec
dec
out
cltd
movsl
out
dec
xor
fsubrp
lahf
pop
push
jns
aam
xchg
adc
sar
mov
stos
mov
or
test
leave
push
xor
js
mov
ret
cltd
mov
dec
inc
sub
outsb
outsl
cmc
incl
xor
push
aaa
mov
icebp
and
mov
imul
iret
or
push
sahf
popa
bound
es
push
mov
es
xchg
push
cmp
or
inc
sub
gs
push
mov
std
push
incl
xor
icebp
lret
dec
lock
dec
dec
insl
imul
icebp
sub
cld
outsl
fs
outsl
test
pop
or
lock
sbb
xor
decl
scas
sbb
inc
push
sbb
das
pop
cltd
push
add
sub
arpl
rcll
dec
or
mov
adc
add
jge
movsb
sbb
mov
inc
adc
jno
fbstp
sbb
icebp
pop
sar
lods
int3
add
mov
push
mov
add
mull
jmp
fs
sahf
pop
mov
dec
pop
mov
jle
pop
mov
push
mov
jl
lods
movb
mov
ljmp
add
sti
jbe
das
aaa
jbe
add
cwtl
icebp
ds
mov
mov
or
ljmp
cld
ds
push
aaa
fstl
sub
sub
call
mov
pop
push
movsb
push
aas
lret
push
cmp
add
add
push
fists
sub
rolb
incl
mov
fisttpl
out
xchg
mov
dec
pop
insl
and
push
and
insb
and
jg
ljmp
into
or
lock
cs
sbb
pop
add
lds
ljmp
push
pushw
ss
adc
sub
jecxz
pop
subb
sbb
cmpsb
push
fyl2xp1
aas
out
inc
or
incl
pop
fldenv
mov
add
mov
ljmp
repz
sarb
js
mov
add
inc
cmp
adc
jl
cmp
pop
jae
mov
and
xor
push
cld
push
ja
es
les
sarb
push
rclb
sub
cmpb
sbb
xor
dec
sti
insl
mov
nop
out
loop
mov
mov
push
push
add
inc
add
in
aas
test
lods
ret
sbb
lret
push
jne
pop
pusha
aad
rol
decl
loopne
and
fisubl
in
jne
call
clc
push
enter
jl
mov
int3
dec
adc
xchg
jne
push
dec
movq
inc
add
cmp
push
dec
test
mov
adc
mov
imul
sub
or
and
and
test
mov
orl
insb
inc
mov
ret
adc
mov
in
or
push
mov
pop
lods
dec
inc
pop
jmp
adc
xchg
jg
call
push
pop
lahf
int3
leave
jb
and
punpckhwd
leave
push
ficomps
cmp
ljmp
lcall
loop
inc
pop
pop
push
popa
lea
pop
aam
inc
sbb
push
dec
add
jg
sbb
push
dec
les
push
and
mov
je
dec
ret
add
fs
adc
movsl
enter
jns
fildll
jmp
lods
rclb
lock
jbe
sub
repz
jl
and
fstps
lcall
incl
insl
cmc
push
repz
or
push
xchg
stos
or
rorb
nop
test
pop
seto
sbb
add
adc
fstps
fisttps
sub
add
push
push
clc
incl
outsb
jnp
xor
or
mov
add
insb
in
adc
mov
leave
sub
pop
mov
cmp
adc
icebp
sbb
sti
or
lcall
es
pop
xor
dec
pusha
in
sbb
jnp
add
call
jno
js
pop
sub
cs
fsubl
jmp
inc
inc
pop
mov
lock
add
int
mov
jle
mov
fisttps
mov
into
pop
ss
add
jns
idivb
cmc
cmp
mov
cmpsb
xchg
das
subb
cmp
std
cmpsb
clc
das
sbb
fcmove
mov
cmpsb
xchg
jle
pop
outsb
outsl
dec
fisttps
dec
sub
adc
ja
add
sti
dec
sub
jl
cmpsb
pop
imull
mov
mov
clc
cld
divl
cwtl
mov
js
pop
push
dec
jle
mov
insb
or
push
or
clc
je
mov
in
rol
outsl
dec
mov
sahf
mov
xor
pusha
icebp
jmp
add
lods
imul
popf
sub
jnp
jge
push
fildll
cmp
pcmpeqw
jmp
inc
xor
xor
inc
rorb
lret
mov
add
cmovns
add
lcall
test
bound
add
in
pop
add
push
inc
daa
cmp
rcrb
push
mov
fsub
jg
jg
xchg
push
fidivl
jne
scas
in
jp
jbe
leave
fs
xor
sarl
dec
es
cltd
dec
or
jne
incl
popa
call
inc
aas
add
dec
xor
push
sbb
decl
push
or
lea
adc
adc
add
pop
and
xor
add
push
jmp
cli
add
cwtl
stos
add
aaa
popa
xor
popa
adc
enter
mov
ljmp
mov
fnstenv
incl
clc
int
test
mov
pop
sub
push
sub
mov
in
das
in
add
les
lods
adc
or
frstpm(287
xor
push
sti
aas
enter
out
lods
dec
mov
stos
mov
into
pop
divl
aas
pusha
and
mov
mov
dec
scas
mov
fscale
mov
aad
push
jecxz
scas
shll
lret
jg
aam
mov
mov
sub
leave
mov
fstpt
dec
adc
ror
ret
into
mov
subl
xchg
cld
aas
rcl
mov
ljmp
sub
stc
int3
in
int
mov
leave
cli
sub
mov
add
loop
aad
ljmp
pushl
cmpsb
add
or
inc
int
fs
gs
mov
enter
mov
stos
aad
mov
ljmp
or
fcmovne
pop
mov
and
ljmp
pop
jecxz
incl
ret
jg
int3
mov
add
fcomps
push
jle
adc
ret
pop
jb
sbb
test
pop
sahf
cs
or
das
xchg
pop
pop
mov
in
subl
inc
sbb
adcl
and
out
fcoms
pop
and
pop
mov
inc
ljmp
dec
inc
cmp
cs
add
or
outsb
imul
sub
cli
push
testb
sub
insb
dec
adc
arpl
das
cmp
outsb
push
sub
sub
les
pop
data16
mov
std
jmp
add
jmp
jge
add
fnstcw
ljmp
add
jne
mov
add
outsb
or
incl
fwait
fwait
sti
jae
sub
add
inc
add
sbb
push
lahf
mov
jae
adc
arpl
jnp
jg
dec
lock
subb
popa
leave
insl
dec
jne
imul
imul
std
fldl
xor
pop
adcb
push
addr16
cmp
and
das
pop
mov
lods
or
push
dec
pop
dec
je
jo
gs
pop
adc
aaa
cmpsb
jne
bound
jae
inc
shll
cld
inc
push
mov
xchg
aad
das
je
pop
jb
pop
and
and
pushl
ds
arpl
jp
dec
idivb
or
push
cs
decl
imul
mov
arpl
pop
or
outsl
fs
or
mov
int
testl
mov
call
sbb
cmp
jmp
fs
jmp
ja
sub
xor
and
je
inc
jne
push
sub
je
repnz
or
lods
xchg
jae
dec
gs
mov
xor
outsl
movsl
pushl
andb
pop
test
fld
push
lock
or
aam
inc
adc
ss
pop
imul
jnp
or
jp
outsl
pushl
or
test
push
imul
dec
dec
je
inc
in
mov
jns
jb
call
outsl
je
popa
insb
push
jne
jns
js
aas
pop
sti
aas
test
dec
gs
outsl
adc
inc
xor
imul
xor
push
adc
push
je
mov
std
fwait
jo
inc
lock
insl
sub
cmp
insl
imulb
mov
lcall
int
mov
jo
push
gs
push
nop
lret
pmuludq
jae
push
imul
dec
jae
cwtl
pushf
test
incl
imul
jne
pop
cld
stos
dec
fs
jo
data16
femms
inc
iret
insl
sbb
xchg
mov
testb
stc
inc
dec
adc
fcoms
pop
incl
movb
jecxz
test
fstpl
pushl
pushl
pop
dec
stos
psubq
add
insl
into
insb
ret
xor
add
jo
mov
or
iret
repnz
sub
push
ror
jg
pop
clc
fs
push
jo
ja
pop
sbb
decb
lcall
lcall
or
adc
mov
mov
lods
lock
adc
arpl
push
mov
lods
or
cmc
stos
je
idivb
jbe
inc
pop
adc
insb
call
push
mov
mov
ljmp
dec
bound
cmp
dec
push
xor
popf
adc
outsb
test
ljmp
cld
sub
inc
jge
je
insl
dec
pop
inc
mov
mov
mov
push
or
xchg
ljmp
jl
aam
add
push
push
daa
push
jbe
outsb
or
mov
incl
xchg
ja
and
cwtl
mov
stos
sbb
ret
mov
decl
gs
push
dec
push
rorb
fcomp
sbb
add
jo
pop
outsb
sar
lea
sbb
pop
or
xor
dec
sahf
xor
inc
mov
jmp
pop
cmp
inc
jae
pop
imul
ret
mov
out
mov
lods
bound
or
push
fwait
popf
mov
punpckhbw
dec
fisttpl
aad
sub
inc
push
sub
inc
xlat
jl
lahf
aas
aas
xor
leave
inc
decl
pop
or
ss
cmp
lret
mov
dec
sbb
imul
mov
in
inc
popa
jae
mov
push
outsl
loopne
movsb
test
add
popa
int3
pop
sti
js
in
push
inc
fisttpll
inc
mov
sbb
and
sub
das
cmpsb
mov
enter
inc
push
loopne
enter
scas
or
rol
pop
xor
xor
add
sub
pop
pop
pop
lcall
pop
mov
mov
or
adc
sbb
adc
icebp
movsl
lcall
or
jg
aaa
push
adc
or
inc
rdpmc
or
lods
incl
cmp
notrack
fucomi
or
or
dec
mov
or
pop
xor
push
pushl
or
or
add
or
pop
push
pop
add
decl
push
or
or
sbb
mov
adc
cmp
mov
jle
lock
imul
add
adc
sbb
or
push
in
lcall
or
or
and
push
push
or
fdivrp
mov
adc
or
dec
movups
sub
pop
outsb
mov
push
pop
nop
pop
push
inc
lock
rorl
movsb
push
adc
sub
outsl
jmp
pop
adc
add
push
xor
pop
int3
xor
or
adc
call
inc
push
or
ja
sbb
push
or
push
das
daa
test
sbb
movlps
call
push
adc
mov
dec
in
out
and
jmp
les
pushl
mov
sbb
cmp
push
pushl
or
movups
or
ljmp
icebp
adc
or
sbb
push
add
lock
or
mov
adc
pop
pop
push
clc
jmp
adcl
cmp
dec
jo
or
adc
pop
xchg
ljmp
xor
and
sub
and
push
pop
or
xchg
xor
lods
or
inc
mov
ljmp
adc
sbb
test
adc
or
dec
mov
test
lock
in
dec
out
mov
pop
push
add
gs
pop
and
insl
lret
dec
push
or
cwtl
outsl
rcrb
addr16
ljmp
ficoms
push
sbb
push
push
lock
dec
mov
outsl
fcmovnu
adc
in
push
aaa
pop
or
push
push
rolb
jg
dec
cld
orps
sti
loope
push
xchg
inc
sbb
out
add
push
lods
add
sbb
mov
cmp
sub
pop
jmp
cmp
adc
or
or
dec
push
cs
add
test
fistpll
dec
push
cmpsb
and
mov
lock
aad
lock
adc
jle
icebp
incl
push
or
fmuls
and
dec
pop
adc
insb
sub
pop
and
or
and
sbb
push
and
lcall
into
mov
add
jns
cmp
testb
mov
cmp
lock
add
pop
sub
dec
mov
loop
ljmp
jmp
jg
inc
iret
xchg
mov
sub
pop
jbe
xchg
je
mov
inc
adc
xchg
ss
xchg
movsl
sar
das
fnstsw
jbe
xor
dec
mov
cmpsl
mov
ret
jl
push
sub
add
and
xorb
sti
mov
jnp
test
aaa
cli
je
pop
inc
add
push
idivb
pop
daa
pop
cli
or
rcrb
fcomi
pop
daa
adc
sbb
test
movsl
dec
inc
divl
inc
add
mov
test
test
lock
or
lea
adc
mov
jne
mov
sub
adc
jb
mov
adc
rorb
jne
push
out
pop
stos
jae,pt
xor
stc
jb
shl
cmp
xor
es
das
leave
or
sub
dec
jne
inc
sbb
add
pop
jp
add
adc
subb
std
cld
jbe
mov
inc
xchg
adc
sbb
arpl
ret
push
lock
sub
ja
add
jmp
inc
in
or
cmp
ja
cmpb
pushl
mov
mov
shr
rol
xchg
sub
sub
add
cmp
sti
lods
mov
or
je
mov
lea
mov
pop
or
xchg
js
xchg
dec
or
fmull
scas
push
adc
cs
mov
mov
jle
cmp
loope
xor
lret
scas
fisttpll
sub
and
dec
loope
pop
sti
add
mov
jo
jo
jmp
and
and
lods
jnp
mov
or
scas
addb
mov
mov
mov
mov
popa
lea
jg
mov
outsl
jnp
jg
adc
lea
add
xchg
push
mov
les
sub
jmp
int
fcompl
rclb
sarb
cwtl
rol
ss
shlb
ss
scas
mov
rcll
shll
pop
xor
cmp
dec
add
dec
popa
push
dec
inc
dec
adc
jp
in
incb
decb
dec
push
push
inc
push
push
or
and
jb
daa
mov
mov
inc
inc
int
mov
lret
cmpsl
iret
jnp
xor
adc
mov
cltd
cmovno
and
inc
pop
je
insl
sub
inc
imul
lods
jb
bound
adc
add
outsb
inc
stos
and
and
cmpsl
add
les
lsl
loop
insb
pop
or
movsb
add
adc
add
or
push
add
add
mov
add
add
add
mov
sbb
insl
aam
sarl
aad
fisubrl
adc
sbb
push
shrl
in
lods
push
aaa
outsl
jne
cmp
cmp
fadds
data16
push
jg
sbb
imul
lret
mov
pop
push
or
nop
sti
test
gs
insl
insl
xor
inc
imul
test
popl
js
sub
shrd
rclb
push
pop
imul
inc
push
jbe
inc
outsb
jbe
outsl
outsb
push
fs
mov
and
fiaddl
bound
shll
gs
fstsw
scas
and
mov
or
stos
jo
subl
adc
insb
jae
das
outsb
jle
insl
mov
dec
cmpsl
inc
jb
jb
je
xor
jg
pushl
outsb
outsw
inc
mov
mov
cmc
or
fcompl
fistpl
jo
je
mov
mov
or
test
dec
push
pop
sbb
imul
push
dec
insl
add
jno
pop
pop
je
or
notl
xor
xchg
sub
jle
and
mov
inc
arpl
outsb
mov
xchg
out
dec
gs
gs
add
jecxz
arpl
pop
outsl
mov
fsubs
mov
pop
pop
jo
or
or
jnp
stc
setnp
and
sbb
add
shrb
or
in
repz
jo
imul
xor
sbb
data16
lea
jne,pt
or
xor
ds
imul
push
pop
and
xor
jae
add
data16
mov
fs
inc
aad
lahf
or
dec
or
dec
sbb
adc
or
fucom
mov
outsb
dec
cli
pop
inc
pmulhuw
and
add
fmuls
add
icebp
in
cmp
dec
xor
es
or
test
mov
or
mov
sub
add
inc
push
ss
in
cmpsl
and
push
je,pn
js
add
rcll
je
sbb
jb
popa
sti
or
inc
jnp
fsubs
inc
cs
push
lret
daa
rorb
pusha
xorl
dec
loopne
push
pop
adc
jns
nop
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
