push
call
ret
ret
pop
mov
icebp
jno
and
subl
pop
cmp
cmp
out
or
mov
xchg
ret
daa
and
je
jae
stos
jo
out
dec
out
xchg
movsb
aaa
adc
pop
xchg
sbbl
adc
sbb
shlb
and
lds
add
pop
rcll
jb
inc
cmpsb
cmp
std
ret
in
pop
test
dec
pop
lahf
mov
aam
imul
add
cmc
idivl
push
pop
or
fstpl
mov
aam
cmp
inc
cwtl
xchg
jmp
out
sti
jns
cltd
pop
push
inc
dec
inc
in
jnp
stos
xchg
jno
aaa
out
lock
xor
and
clc
jle
add
loope
into
ljmp
cli
jp
pushf
and
or
adc
sbb
ret
add
xor
push
movsl
push
in
push
shr
insl
insb
ret
sbb
cmpb
mov
cmp
jp
fcmovnu
cmpsb
pop
vpcmpgtd
aaa
lcall
data16
sub
mov
js
pop
jns
xchg
jg
out
jb
int
add
popf
je
sub
pop
mov
rcll
jnp
xor
sub
shl
sbbb
xchg
loope
aad
push
sahf
cmp
inc
pop
dec
xchg
or
adc
xchg
xor
push
jle
icebp
mov
sbb
loop
xor
dec
inc
int3
in
enter
inc
cld
enter
jne
cmpsb
push
fisubrs
mov
xchg
shrl
fcompl
mov
mov
or
movb
dec
mov
popf
daa
cmp
sub
mov
pop
jg
inc
movsb
mov
mov
adc
mov
jae
xor
inc
je
push
inc
nop
push
push
mov
dec
setns
adc
mov
add
sahf
aaa
repz
stos
mov
xchg
addb
pop
mov
lods
pop
cmp
decl
imul
sub
xchg
fidivs
mov
sahf
mov
sarl
xchg
inc
sbb
cmp
add
flds
and
cmp
jle
out
mov
cltd
mov
mov
loope
in
push
sti
inc
dec
lret
shl
roll
xchg
in
fwait
add
jmp
test
es
jg
jmp
int
pop
jns
cmp
jb
xchg
les
aaa
test
jl
mov
sahf
push
adc
loope
pop
popa
jb
push
sti
out
inc
mov
mov
test
adc
sub
and
jae
mov
rorl
mov
addl
das
adc
or
cmp
sub
cmp
mov
out
xor
in
cmpsl
jle
xlat
rcrb
cmp
fbld
cmp
pop
ret
cmp
push
jb
lock
mov
jp
pusha
pop
cld
js
movsl
lods
fldt
lods
dec
mov
xchg
fldl
or
mov
fsubs
test
sbb
jecxz
inc
xlat
sbb
scas
lods
test
cli
int3
ffreep
repnz
jno
rcr
xchg
out
pop
or
jmp
dec
xchg
dec
ss
test
dec
cmp
sahf
sub
adc
cmp
adc
jbe
dec
inc
dec
xor
mov
hlt
pusha
loopne
sbb
lcall
sbb
mov
packssdw
xchg
popf
fimuls
out
xchg
sub
sbbl
iret
push
mov
sub
test
lcall
sbb
adc
sti
shlb
mov
mov
aad
cwtl
mov
cli
mov
loop
pop
dec
sub
movsb
jp
mov
fcmove
outsw
jb
mov
sub
cmpsl
das
cmpb
push
sti
lcall
xor
sub
enter
test
loop
mov
or
lods
jns
jae
mov
push
pop
in
fisubl
push
xor
inc
mov
stc
mov
sub
mov
pop
popf
or
mov
pop
jge
lahf
in
mov
jno
fstpt
sbb
fcmovnbe
test
or
shlb
mov
adc
data16
test
pushf
cltd
xchg
mov
pop
push
or
push
jns
dec
cs
test
clc
cpuid
xor
ret
faddl
add
lds
jo
pop
cli
setp
sub
dec
inc
scas
sub
push
lcall
or
mov
outsb
inc
in
movsb
or
in
xchg
mov
cmp
dec
scas
rclb
hlt
xchg
mov
in
fmull
inc
pop
divb
mov
imul
sbbb
ret
adc
ja
mov
xor
fildl
and
mov
and
jae
push
cli
js
pop
jl
mov
push
dec
push
add
out
int
or
xchg
outsb
dec
loope
aam
adc
jle
and
pop
cmpl
fisttps
push
fisttpl
mov
clc
cmp
or
je
loopne
jo
sti
stos
fmul
rcrl
fdivrl
pusha
jno
mov
fldenv
jbe
shr
xlat
stc
shll
stc
mov
test
push
push
xlat
xor
and
cmp
popf
scas
rol
mov
aas
sahf
jae
lds
jp
add
xchg
or
lahf
popf
in
inc
mov
lret
push
gs
movsb
cld
or
rcl
leave
nop
aam
lock
sarb
dec
push
sub
mov
dec
push
dec
jb
aad
adc
xchg
mov
add
ficomps
xor
adc
outsl
xor
out
adc
arpl
add
adc
ss
jo
out
decl
mov
or
lods
inc
jae
pop
or
sub
xchg
dec
pop
aaa
dec
and
or
push
repz
out
jp
fnstenv
shlb
outsb
cld
orb
cmp
push
cltd
out
into
popa
adc
out
iret
outsb
mov
arpl
jg
mov
cmpsb
loop
fstpt
pop
lods
xlat
cmp
cs
xor
push
adc
rclb
movsb
xorb
mov
scas
shll
cmc
fdivl
jl
pop
mov
jb
mov
dec
repz
ss
repz
mov
repnz
dec
jb
or
mov
rcll
mov
add
ja
xor
mov
sub
jg
aaa
es
test
cmp
cmpsl
xor
push
iret
jbe
rcl
roll
xchg
push
sub
sti
mov
jne
jnp
pop
adc
jge
xlat
subb
push
rcr
push
pusha
inc
popf
mov
outsb
cmpsl
popf
pop
shll
lret
popa
mov
popa
sbb
mov
stos
sbb
popl
mov
adc
inc
stos
mov
fmuls
and
scas
mov
lret
test
add
mov
xchg
sahf
mov
enter
xor
daa
es
test
push
jae
add
sti
mov
add
mov
ret
aas
mov
jecxz
rcr
jo
jge
lahf
popf
lock
mov
mov
inc
outsl
addr16
push
stos
lock
loop
push
dec
add
lret
int3
scas
data16
dec
push
hlt
or
sbb
out
and
mov
adc
addr16
inc
push
dec
jge
mov
mov
nop
ds
shlb
popf
push
fldenv
ret
das
mov
lahf
loopne
mov
sub
sub
sbb
sbb
mov
or
or
pop
scas
sarb
jle
js
mov
int
lret
pop
std
js
aam
cmp
fdivrl
loop
out
iret
push
add
inc
in
push
ss
and
lcall
mov
jae
dec
inc
gs
js
xor
mov
lea
sbb
cmp
sub
push
or
gs
inc
jb
xor
lods
cmp
test
aad
xchg
mov
psubq
adc
xor
push
sti
xor
sub
sub
jae
xchg
xchg
fsubrs
mov
loop
test
cli
mov
ss
mov
or
fmull
add
subb
mull
ljmp
or
add
mov
ss
pop
xchg
pop
cltd
sbb
xor
push
pop
shr
cmp
das
mov
data16
xchg
push
addr16
loop
mov
xchg
test
test
sbbb
icebp
and
xor
pop
ss
or
inc
sbb
xchg
and
jl
shrl
jmp
adc
adcl
cmp
dec
cmp
lods
aam
orb
sbb
pop
ffree
or
or
cmp
sbb
stos
jns,pt
ds
jns
insb
dec
add
lret
jne
nop
mov
test
and
add
in
femms
ljmp
test
add
into
in
aas
scas
js
lret
mov
cld
imul
clc
pop
sbb
dec
xor
adc
jo
adc
xor
jae
jbe
jge
popf
imul
mull
int
push
and
jg
jb
add
cmp
jecxz
mov
pop
in
xchg
das
adc
jmp
push
push
sub
pop
xchg
adc
push
cwtl
cmpsb
clc
add
and
dec
mov
xlat
cld
outsb
pop
adc
sbb
ljmp
loop
cmp
in
xor
addb
jg
int
pop
ret
cmc
dec
in
and
outsb
in
and
roll
mov
ja
lcall
aas
sarl
stos
sub
xor
adc
pop
pop
jns
mov
add
xor
mov
inc
shrb
outsl
fdivl
fcmovnb
xor
xor
js
push
ljmp
mov
clc
aaa
jnp
pusha
or
push
call
pop
outsb
cmpsl
aad
and
xor
sbb
fwait
test
icebp
arpl
mov
in
push
sarl
xlat
mov
shl
daa
lret
inc
ret
leave
inc
adc
adc
add
fdivl
jno
popf
mov
repz
add
push
inc
fidivs
ss
cmp
js
fildl
adc
pop
fs
cmpsb
jle
jecxz
nop
cmp
mov
push
jg
mov
call
dec
rclb
adc
jb
shll
loopne
movsl
add
fwait
cmp
arpl
and
test
cmp
pushf
jne
xor
or
gs
insl
int3
imul
mov
mov
push
std
lret
push
je
movsb
dec
jbe
hlt
shl
push
shrl
xchg
and
hlt
jnp
adc
mov
fwait
test
iret
mov
push
or
in
std
or
lcall
adc
inc
xor
xchg
jne
inc
mov
loop
push
addr16
stos
je
and
mov
int
cmp
stc
mov
cmpsl
mov
mov
imul
rclb
ret
adc
mov
adc
in
dec
push
je
imul
xchg
call
repz
jl
inc
stos
adc
inc
jg
ja
loope
xor
dec
out
lea
mov
mov
roll
cmp
in
out
stos
pop
int3
inc
test
jecxz
adc
jbe
pop
push
pop
mov
addr16
sub
pop
ja
sbb
insb
imul
shrl
push
mov
or
rcrl
inc
mov
cmc
insb
in
dec
pusha
jnp
sub
inc
sbb
inc
pop
sub
js
jae
mov
dec
add
fadd
test
lcall
adc
popl
mov
das
jne
mov
nop
cmp
outsl
lret
sub
sti
cld
inc
sti
cwtl
sar
push
imul
shll
mov
jp
das
pusha
mov
inc
ja
outsb
test
clc
data16
movsb
xor
test
push
clc
push
push
push
sub
inc
xor
scas
adcb
popf
sub
or
push
sub
in
dec
pop
add
cltd
add
insb
pop
std
fwait
dec
fidivrl
xor
data16
ss
roll
sbb
leave
dec
sub
lds
fmulp
jl
imul
add
stc
mov
adc
outsb
test
add
addr16
mov
cltd
fsubrs
ret
call
push
xchg
sbb
or
leave
out
or
mov
sbbb
push
xchg
in
call
mov
pop
movsl
ret
int3
add
pop
pop
lods
jecxz
jns
mov
inc
sti
pop
inc
popa
adcl
mov
mov
xlat
xor
repz
adc
sub
lock
aad
in
jae
shlb
inc
lods
dec
gs
jmp
movsb
shrb
mov
mov
addr16
or
xor
test
sub
pop
add
cltd
fcom
or
xor
sbb
mov
push
xchg
cmc
fmull
push
xor
push
xchg
or
pop
cmp
daa
jne
imul
ds
xor
test
jae
adc
mov
dec
add
or
sti
hlt
mov
and
jg
xchg
sahf
daa
daa
movsl
fildl
shrb
test
into
pop
pop
cltd
out
jge
in
faddl
pushf
mov
sbb
cmpsb
sbb
je
scas
sub
in
jp
imul
jbe
shll
fadds
icebp
xchg
fidivl
mov
in
sarl
mov
shlb
adc
cmp
mov
sbb
loop
mov
mov
pop
cltd
push
pop
imul
lcall
mov
sbb
push
sbb
bound
dec
addr16
lods
fmuls
push
fcomps
sub
add
ret
iret
lea
popa
cmp
fimuls
mov
dec
jno
xchg
push
sbb
stos
pop
int3
mov
nop
fimuls
mov
mov
pushf
lcall
into
xor
push
mov
js
adc
fistps
sarl
sub
jge
fists
jb
jbe
add
or
cmpsb
mov
cli
pop
mov
mov
xchg
mov
rcll
cmp
in
or
stos
add
loopne
and
mov
js
popf
fwait
mov
dec
andl
rcrl
xlat
xorl
scas
mov
leave
or
ss
xchg
fs
shll
clc
pop
mov
add
xchg
sbb
rcrb
stc
sub
xchg
pop
das
arpl
xchg
lahf
and
test
jb
in
arpl
push
jne
je
inc
mov
mov
enter
in
jae
inc
test
mov
mov
xor
imul
push
mov
pop
popa
jb
mov
popf
dec
imul
xchg
adc
xchg
call
into
int3
add
inc
pop
bound
fldt
pushf
mov
adcb
daa
dec
sub
add
popf
pushf
int
rorl
mov
inc
and
fcmovnb
inc
stc
sub
adc
push
jns
subl
rcr
test
test
dec
inc
lods
mov
xchg
ret
sbb
mov
and
sbb
adc
mov
jmp
push
and
xor
call
ret
jbe
fs
call
insb
nop
movsb
dec
mov
xor
cmp
hlt
repz
dec
pmaxsw
inc
inc
out
or
inc
test
xchg
dec
cmp
int
arpl
inc
testb
push
int3
jmp
mov
push
cmpb
mov
pop
jmp
push
push
loope
jo
mov
cmc
jge
mov
mov
mov
cmc
xadd
loope
xchg
cmp
jbe
fdivrs
and
inc
mov
sahf
fstl
fisubrs
fld
in
mov
lods
mov
mov
xchg
jp
ds
rorl
cmp
xchg
pop
cmp
les
mov
test
bound
cld
sub
iret
aaa
test
cmp
ret
mov
in
pop
es
cmp
xchg
mov
cwtl
jnp
inc
or
lods
fisubrs
sub
lods
or
aas
xor
inc
adc
and
ds
mov
adc
add
pop
pop
dec
xchg
leave
or
xor
inc
outsb
add
lahf
sub
jb
cmc
mov
cwtl
scas
and
hlt
push
ja
xorb
enter
mov
aad
sti
iret
jp
sbb
inc
daa
push
jno
aad
cld
inc
pop
mov
stc
aam
mov
mov
add
mov
stc
xchg
sub
test
pop
inc
test
push
sbb
push
push
mov
cmp
imul
call
inc
inc
das
pop
dec
bound
stc
sbb
mov
in
fadds
mov
inc
sub
push
cmc
imul
dec
jns
adc
adc
imul
je
add
cs
fcompl
lds
xchg
or
mov
push
sub
arpl
adc
or
notl
lock
sub
mov
adc
cmp
leave
sub
sub
popf
sbb
mov
push
adc
incb
mov
xchg
dec
xorl
cmpsl
shr
add
divb
xor
or
bound
xchg
iret
sub
sub
ss
out
in
mov
add
add
adc
jg
jbe
jbe
lret
out
jge
lcall
aam
push
cmpsl
je
jnp
ret
gs
out
mov
movsb
out
insl
mov
dec
out
cmp
shlb
loope
jo
testb
jo
push
fistl
lock
sbb
mov
jl
shrb
add
popf
xchg
xchg
mov
gs
sub
mov
or
add
push
js
dec
xchg
nop
inc
ds
fnstcw
insb
jge
ljmp
dec
mov
cmpsb
jecxz
or
cmpb
gs
ret
jmp
sbb
jne
lret
sbb
gs
adc
add
pop
aam
in
js
popf
sbb
cmp
sub
es
or
js
pop
xor
dec
xor
jne
hlt
cmp
push
and
lret
push
pop
cmc
dec
cmp
mov
mov
xchg
int3
pop
fistl
inc
xchg
insb
pop
xchg
testl
cmc
cmc
out
mov
xor
adc
mov
pop
cmp
rolb
imul
and
dec
mov
dec
imul
cld
mov
and
gs
push
inc
aam
sub
push
scas
push
jmp
mov
ret
roll
inc
daa
ja
lahf
stos
lock
add
pop
inc
dec
shl
rorb
scas
pushf
push
in
xchg
js
pop
loope
loope
pop
cmc
dec
jmp
in
pop
sub
ret
xchg
mov
sbb
mov
cld
inc
ror
or
movl
fmuls
das
and
jne
das
stos
fldl
mov
push
pop
test
faddp
xchg
adc
mov
sub
xchg
inc
loope
scas
ds
mov
das
jmp
aaa
mov
loop
mov
mov
or
adc
fs
hlt
mov
ret
stc
mov
push
push
xor
push
into
test
sub
negb
push
jb
aaa
mov
pop
loopne
iret
stos
push
out
imul
push
mov
ret
and
movb
inc
loop
std
dec
mov
outsb
mov
mov
pushl
movsl
ss
mov
and
int
inc
mov
xchg
sub
adc
dec
enter
jo
add
popa
push
lods
pop
cmpps
or
lahf
jecxz
outsb
dec
push
push
sub
fidivl
pop
jb
std
leave
pop
les
scas
popf
sbb
pop
std
testl
arpl
cmp
mov
std
insb
std
dec
lahf
lea
scas
add
cwtl
test
add
repz
ljmp
inc
inc
icebp
and
jo
in
sub
outsb
or
inc
fdivs
xor
pop
pop
and
add
or
pushf
jnp
imul
in
es
test
mov
and
rol
mov
clc
push
roll
je
sbb
pop
inc
fld
ret
sub
jnp
in
adc
fsubrs
imul
mov
cli
rcrl
cmp
pop
mov
xchg
leave
xchg
inc
mov
and
mov
pop
xchg
xor
fnstenv
lret
divb
push
idiv
adc
lock
push
rorl
in
icebp
rorl
mov
push
mov
dec
sbb
popf
push
mov
stc
icebp
nop
sbb
hlt
into
pop
lret
and
jp
mov
xchg
inc
fstl
pop
pushl
pop
pop
sbb
scas
aas
sub
add
mov
mov
mov
sbb
fstpl
scas
mov
xor
xor
int
mov
xor
mov
aad
loopne
mov
jb
sbb
mov
dec
ljmp
sbb
dec
add
icebp
popa
cwtl
add
sub
inc
es
jb
adc
sub
cs
push
mov
sub
sbb
cmpsb
sbb
sbb
fwait
cmp
out
xor
xchg
out
in
adc
mov
std
je
cmpsl
pop
cmp
xor
add
mov
ret
jae
das
int
xor
mov
outsl
cmp
dec
clc
dec
loopne
arpl
mov
cli
ret
sub
adc
push
add
fucomi
jns
les
xchg
ja
dec
lahf
out
lock
dec
push
je
cmp
aaa
insl
cmp
xchg
jb
or
mov
cmp
sub
cwtl
dec
aas
jmp
push
loope
push
and
mov
pop
jno
add
int3
pop
out
xor
dec
icebp
je
sbb
nop
mov
pushf
adc
xchg
lock
test
insl
and
or
hlt
cmc
iret
add
jno
roll
nop
or
push
stos
mov
pop
sub
pop
mov
sbb
or
aaa
int
fldl
movsl
or
xlat
sbbl
rcll
leave
sbb
xchg
push
dec
push
pop
xchg
mov
popa
xchg
int3
pop
ret
pop
clc
mov
mov
push
scas
negl
call
scas
xchg
xchg
xchg
hlt
adc
lsl
mov
fists
cmp
pusha
stos
mov
dec
inc
fsubrs
jnp
mov
add
mov
jmp
pop
sbb
lods
jecxz
icebp
cmp
mov
sahf
fidivl
mov
fistpl
test
add
mov
push
aam
mov
test
outsl
add
or
jo
add
cmp
loopne
fnstsw
ret
jo
sbb
lret
and
push
nop
aad
loop,pn
jmp
dec
js
in
inc
out
jecxz
pop
stos
out
mov
pop
lret
add
add
lea
nop
cmpsb
ljmp
or
inc
pusha
pop
loopne
shrb
jl
mov
mov
sub
mov
addb
repnz
nop
fisubrs
pop
sub
lcall
pop
pop
lea
in
jbe
inc
loop
or
imul
push
clc
sbb
ljmp
mov
xchg
imull
mov
mov
sub
dec
jbe
fsubrp
mov
subl
adc
adc
jle
jle
cmp
cmc
das
in
fwait
lret
push
fmull
push
inc
dec
dec
xchg
inc
cld
clc
push
xlat
std
scas
mov
xor
imul
sbb
xchg
adc
ret
xchg
mov
stos
sbb
jmp
stc
ss
aaa
test
cli
inc
cld
cmp
cmp
in
in
adc
inc
jg
icebp
lods
jbe
sahf
std
mov
mov
das
fwait
sarb
in
push
push
pop
mov
mov
cmpsb
add
in
out
out
int
or
inc
leave
pushl
ljmp
std
lahf
cmpsl
popa
adc
jle
xor
add
iret
das
popf
insb
sti
xor
cmpsb
outsb
inc
lock
popf
js
mov
repnz
cld
or
mov
stc
and
cli
data16
imul
in
add
push
and
lcall
call
add
out
jo
push
icebp
xchg
mov
outsb
push
out
mov
xor
cmp
pop
das
sti
lea
jl
inc
js
pushf
mov
xchg
int
sti
daa
insb
dec
pop
xor
xchg
pop
dec
jmp
and
sub
sub
lahf
mov
ret
mov
aad
and
in
jecxz
lahf
and
gs
out
dec
loopne
inc
and
pop
pop
addr16
je
jecxz
dec
inc
fld
mov
push
mov
mov
or
out
xchg
arpl
dec
mov
sub
add
push
fwait
pop
sub
pop
mov
xor
insb
fisubrl
adc
add
in
dec
cwtl
std
inc
mov
addr16
scas
push
repnz
pop
repz
clc
inc
push
insb
iret
stc
ret
insl
adc
xchg
sub
xchg
mov
mov
cmpsb
das
ss
sbb
cmc
pop
cmpsb
push
in
jb
xchg
js
jg
hlt
push
mov
xchg
cmp
xchg
add
pop
jbe
in
inc
ljmp
pop
adc
int
ds
xor
js
cmovnp
mov
shlb
test
or
xchg
ss
cmp
js
jge
and
and
stc
mov
adc
imul
mov
sbbl
inc
enter
mov
scas
arpl
dec
add
out
pop
push
lahf
push
adc
pushf
xchg
sbb
in
ds
ret
mov
repnz
xchg
int3
jno
ret
cmpsb
jnp
sub
xchg
sub
push
aad
mov
addr16
adc
movsl
mov
xchg
mov
jmp
lret
jne
shrl
push
int3
stos
xchg
inc
bound
add
loopnew
dec
movsl
cmp
push
mov
testb
ss
push
push
cli
bound
add
or
push
stos
sub
push
mov
or
mov
pop
movsb
mov
add
in
fst
pop
xchg
and
repnz
fs
fsubr
pop
std
popw
call
icebp
push
mov
cmpsl
sbb
inc
incb
icebp
cmc
lcall
dec
add
test
repz
jle
jg
or
das
sub
imul
mov
inc
les
sbb
jmp
cmc
mov
rorb
pushf
mov
incb
push
xchg
aas
pusha
test
adc
negb
jae
and
into
xchg
sbb
xchg
test
ret
adc
adc
insb
test
mov
jbe
mov
test
in
xchg
pop
push
fdivrp
aas
sti
in
add
fnstcw
loopne
xor
cli
mov
out
insb
test
mov
add
lock
out
or
sbb
push
xchg
xor
pop
or
mov
into
sub
cltd
pop
cmc
std
cld
es
or
mov
mov
push
add
sbb
jle
scas
inc
les
arpl
mov
roll
sub
pushf
jbe
jae
or
out
xchg
adc
loope
lret
popa
out
lcall
add
loope
push
add
sbb
cmp
popl
pusha
lea
sbb
aam
movsl
sub
jmp
lret
pop
fwait
subb
jl
pusha
pushf
mov
or
movsb
xor
inc
decl
sbb
xor
cmp
ljmp
and
inc
mov
cmpb
lea
mov
pop
cmpsl
pop
or
push
xchg
and
insb
push
mov
cmp
xchg
popa
push
dec
or
ja
cmp
cmp
das
sarl
mov
fildl
fildl
sbb
xchg
stos
insb
xor
sahf
repnz
jbe
xchg
flds
push
jo
dec
mov
mov
push
out
jmp
jnp
mov
lcall
push
jae
andl
scas
mov
dec
popf
jg
xchg
xchg
mov
jns
aam
mov
mov
shl
maxps
in
lock
fcomps
push
jnp
mov
xchg
test
pop
mov
rcl
dec
lahf
jecxz
sbb
lahf
bound
inc
fsubp
in
int
pop
xchg
sbb
jno
lahf
sbb
cld
or
int3
fadds
pop
push
inc
test
sub
xchg
or
xchg
shlb
lods
dec
lahf
lahf
in
mov
div
push
aas
xchg
out
mov
adc
mov
scas
or
fsubl
ljmp
xchg
cs
jne
sbb
mov
push
lret
mov
pop
mov
loope
cmpsl
jmp
test
push
add
ds
cld
adc
xor
cmp
cmp
xchg
pop
mov
subb
fwait
pop
dec
repnz
out
pop
mov
notb
cmpsl
std
fldcw
push
push
loop
push
inc
movsl
outsl
add
test
clc
add
gs
adc
cli
inc
movl
xchg
adc
es
cltd
sbb
add
cmp
mov
shll
imul
fdivrp
loope
jns
adc
xlat
gs
out
subl
fistl
mov
aas
nopl
jp
aad
sub
fs
add
cmp
mov
cmp
mov
fwait
xor
xchg
sub
ret
or
xchg
push
out
iret
sub
enter
icebp
pop
mov
adc
popa
cmp
out
rorb
repnz
shl
icebp
pop
mov
std
pop
in
jnp
add
mov
inc
cs
xchg
cmpsb
fsubl
pop
into
pop
or
add
repz
or
adc
jnp
mov
psllw
mov
gs
xchg
mov
out
sbb
or
xchg
enter
lods
pop
mov
mov
and
jle
pushl
ret
daa
mov
in
dec
stc
stos
aaa
push
xor
test
add
xchg
bound
data16
stc
or
inc
mov
loopne
stos
xor
xchg
out
xor
mov
add
mov
push
push
xlat
outsl
test
pop
or
popl
mov
dec
adc
aaa
leave
outsb
jno
push
mov
cmc
mov
mov
jmp
cwtl
cld
dec
adc
sub
jae
ret
mul
cltd
out
lcall
popa
xchg
orl
push
shll
add
dec
mov
jmp
pop
cmpl
lahf
jl
jle
repz
push
popa
and
loope
int3
and
inc
or
call
push
aaa
pop
add
repnz
in
mov
pusha
fcompp
sbb
adc
je
sbb
dec
cmp
bound
cmp
pop
pop
jge
fldt
mov
jmp
pop
sbb
notl
shll
cmp
push
rcr
mov
dec
pop
xor
addl
mov
sahf
xchg
fstl
jns
data16
mov
dec
sti
jb
lret
ja
int
jge
pop
ja
out
in
add
outsl
mov
filds
mov
ljmp
cwtl
xchg
sbb
enter
or
jl
std
cmp
jle
pop
add
clc
out
cli
int
lret
ret
cmp
mov
pop
sbbl
lea
adc
sub
cld
and
and
pop
gs
jb
cli
dec
out
jle
pushf
mov
shrb
push
faddl
dec
inc
clc
add
lock
mov
sub
mov
pop
arpl
out
mov
fisubl
daa
hlt
lret
mov
cmc
fstps
push
mov
add
xchg
enter
icebp
mov
mov
pop
insb
les
mov
xchg
es
xchg
push
inc
xchg
insl
out
lcall
pop
enter
or
lock
out
out
rol
loopne
mov
stos
push
cmp
stc
stos
and
test
cs
mov
in
sub
jo
mov
add
repz
push
sbb
pop
jo
test
push
les
mov
and
das
mov
cwtl
push
out
mov
add
addr16
cs
frstor
mov
cmp
add
mov
leave
fcomps
cwtl
push
ljmp
mov
mov
in
int3
aad
mov
or
dec
pop
mov
mov
jae
dec
cmp
sti
jge
insb
adc
jnp
mov
inc
push
push
cwtl
pop
xchg
mov
add
lds
or
xchg
shrl
xchg
sti
inc
sahf
pop
inc
dec
xchg
lods
inc
dec
lds
dec
subl
cs
lods
jno
enter
pop
test
mov
fidivrs
iret
sarb
in
aam
jmp
iret
mov
and
shrl
add
iret
xchg
into
push
add
sbb
adc
xchg
jle
cwtl
pop
jge
mov
pop
add
repnz
mov
lret
inc
lret
dec
cmp
je
cmp
add
je
int
xlat
xchg
sub
cmp
or
aad
sbb
sbb
pop
scas
push
into
mov
jae
loopne
sbb
inc
pop
dec
inc
sarb
mov
lcall
shrl
stos
aam
jbe
pushf
sahf
insb
mov
fsubl
bound
dec
shll
dec
loope
cmp
mov
add
sub
add
fmulp
sbb
dec
push
push
pop
mov
scas
adc
push
and
out
es
pop
push
jge
dec
adc
xor
in
cmp
jge
xor
and
push
mov
xchg
repz
jb
push
stos
pop
mov
pop
xchg
add
mov
push
js
orb
iret
jp
push
sbb
jns
lcall
xor
andl
maskmovq
adc
mov
sahf
stos
iret
loop
dec
in
sub
stos
push
fidivrl
movsb
inc
in
adc
add
ja
and
std
mov
adc
dec
shrl
mov
push
cmp
push
add
xchg
lods
out
mov
stos
xor
sbb
push
xchg
sbb
jl
pop
jae
loop
cltd
ljmp
xchg
dec
les
daa
jnp
xor
and
jno
not
dec
fldl
cmpsb
inc
dec
jp
js
pop
lret
dec
test
mov
popf
mov
inc
mov
das
clc
sar
mov
adc
cld
sub
xor
fmulp
mov
call
jl
sbb
jne
call
xchg
inc
cltd
sahf
ljmp
jp
mov
lcall
pop
sarb
jae
and
fwait
mov
shr
ljmp
lahf
out
mov
add
fs
lret
mov
jo
sub
jno
sbb
cmp
cmpsl
and
loopne
inc
lahf
adc
jno
stc
add
lods
sub
insb
test
cwtl
xor
dec
xor
or
sbbb
xchg
jae
sbb
in
mov
jle
cmpsl
fwait
inc
xchg
cmpsb
add
mov
sub
mov
ret
int3
adc
mov
adc
fisttpl
jmp
scas
popf
inc
push
cmp
mov
jb
xchg
adc
imul
stos
xchg
lods
add
mov
orb
insl
adc
push
xor
sub
sahf
mov
and
test
negb
scas
rcrb
movsb
push
in
mov
cld
sbb
or
and
xchg
mov
icebp
jmp
movsb
push
or
popf
ljmp
repnz
call
ret
sub
mov
stos
adc
mov
mov
js
add
adc
xchg
xchg
push
movsl
adc
ret
test
mov
mov
cmp
pusha
push
inc
mov
lock
mov
gs
sub
mov
sub
addb
stos
mov
sub
sbb
adc
sbb
jmp
ret
dec
test
aad
mov
adc
shlb
lret
mov
sub
mov
push
mov
iret
in
lcall
push
xor
cmc
loope
cmp
and
push
mov
mov
push
movsl
pop
or
adc
push
stc
sub
inc
and
test
mov
in
fnstcw
mov
imul
cmp
mov
fs
inc
adc
push
popa
mov
mov
push
or
adc
icebp
and
pop
dec
in
and
adc
movsw
scas
adc
fidivs
sub
push
sub
mov
push
sahf
ljmp
add
rcrb
jge
negb
arpl
xchg
push
pushf
stc
in
movsl
mov
cltd
add
and
sbb
or
xchg
push
xor
mov
pop
lods
rorb
mov
mov
ret
jae
push
pop
icebp
lahf
mov
cmp
mov
sbb
das
fldt
bound
adc
sbb
dec
xchg
arpl
sbb
mov
test
or
sbb
idivb
sbb
jo
or
out
aam
imull
imul
fwait
pop
xor
push
or
sub
inc
test
dec
out
ret
inc
std
or
jmp
outsl
jb
sbb
cli
mov
stos
mov
xchg
mov
mov
pop
add
jo
push
mov
popl
pop
fwait
inc
adc
sti
sbb
mov
hlt
mov
fs
rorb
add
mov
xchg
cmp
and
cmp
cmpb
xor
dec
xchg
popa
stos
mov
push
push
jl
jns
xchg
hlt
idivb
iret
cmc
scas
sbb
adc
pop
xchg
xor
dec
and
mov
cmp
mov
adc
sbb
les
xchg
int3
cmpsl
imul
xor
sub
daa
jns
aaa
adc
add
icebp
adc
push
movsb
shrl
inc
iret
data16
or
pop
or
out
rcll
mov
adc
fcmovu
inc
inc
in
cmpsl
add
and
add
in
loopne
scas
loope
jo
add
stos
mov
rcll
sbb
mov
das
daa
repnz
outsl
rcll
mov
outsb
sub
dec
leave
mov
test
outsb
pop
push
cmp
dec
mov
sti
iret
in
adc
sub
push
and
scas
mov
dec
clc
cltd
arpl
aas
fsubr
or
es
sarb
sbb
js
mov
and
in
jge
cmc
in
repnz
in
push
sbb
mov
mov
xchg
mov
shlb
popa
add
inc
add
cmp
mov
test
popa
leave
ds
pop
jge
in
lret
xchg
push
push
lods
lock
imul
mov
mov
lcall
orb
aas
out
xor
iret
mov
movsb
loopne
inc
repz
cmp
cltd
add
test
cmp
xor
mov
lret
lods
cltd
imulb
jno
daa
cmp
cmp
xchg
mov
push
xor
push
cs
fwait
adc
fmull
xor
and
insb
in
mov
dec
mov
push
out
mov
mov
xchg
xlat
aaa
popf
inc
and
adc
aam
jbe
cmpsb
les
repnz
xchg
mov
mov
jl
add
mov
rclb
pop
jg
jns
xchg
mov
sub
stos
mov
and
jno
cmp
cs
inc
or
xchg
pushl
jae
mov
pop
out
mov
rolb
adc
pop
lds
jo
add
daa
sbb
gs
and
xlat
popa
sbb
stos
xchg
test
ret
jns
mov
ret
outsl
rcrb
ds
dec
test
mov
xchg
int
sbb
ja
mov
pop
jb
pop
outsb
aam
push
xlat
inc
mov
popa
and
jg
dec
push
cmpsl
jbe
les
outsb
sub
gs
out
push
inc
sbb
inc
lock
adcl
cmpsb
inc
fsubs
test
pop
dec
int3
xchg
lods
ds
rorl
rolb
or
ss
cmp
inc
les
jl
call
push
dec
cmpl
stos
pop
sub
int
cmp
scas
lcall
data16
iret
xchg
shrb
movsb
cmp
cwtl
lcall
xchg
lea
stc
scas
dec
fdivp
xchg
call
push
test
jnp
jl
loope
out
subb
sbb
cmp
push
inc
sbb
enter
and
adc
jno
mov
clc
jns
xor
mov
push
inc
or
mov
in
xor
or
out
das
das
jne
imul
mov
loopne
jmp
mov
lcall
lret
jae
push
icebp
lahf
notb
ljmp
mov
sbbb
jp
adc
xchg
pushf
xor
xchg
js
pop
pop
cli
inc
fdivl
lea
enter
push
stos
pusha
add
shr
neg
push
outsb
mull
adc
push
in
hlt
jecxz
addr16
xchg
mov
int3
jbe
jge
sahf
es
cmpsb
xchg
push
das
adc
mov
pop
mov
lods
ja
lea
out
push
out
push
mov
je
decl
mov
push
sub
push
xor
or
pusha
mov
inc
add
lods
scas
sub
es
inc
or
cmpl
or
pusha
cld
ds
aas
push
xlat
test
add
mov
imul
xchg
mov
lret
ds
pop
sub
inc
out
cmp
xchg
pop
ljmp
outsb
jno
cmp
aam
xchg
shl
xchg
iret
inc
out
test
push
jns
nop
js
mov
pop
adc
mov
aam
sub
mov
int3
xchg
vpminsb
sub
push
jmp
arpl
sti
insb
and
rep
or
push
dec
dec
mov
mov
shr
das
jne
push
inc
mov
ja
sarl
aad
push
jnp
adc
jmp
cmp
mov
mov
scas
and
iret
add
test
sub
jns
push
test
es
xor
hlt
lea
cmp
push
das
jp
cmp
pop
fmuls
adc
std
or
fs
xorl
mov
mov
adc
push
mov
push
and
rclb
mov
mov
repz
lahf
cs
aad
sti
scas
shll
cmc
std
mov
imul
scas
adc
cmp
sub
mov
iret
cmpsl
mov
cmpb
xchg
adc
imul
pop
in
hlt
mov
and
clc
inc
push
sbb
inc
and
mov
bound
mov
pop
mov
popf
adc
lahf
ret
mov
sahf
pop
push
pop
call
adc
clc
outsb
push
sarb
inc
test
negl
xchg
loopne
jmp
into
xor
sbb
jne
loope
dec
hlt
jo
pop
push
mov
repnz
push
ss
sbb
js
pop
adc
dec
sbb
ret
rorl
iret
int3
push
jne
loop
loope
adc
movsl
insb
std
mov
stos
mov
xchg
dec
xor
sub
and
sbb
dec
icebp
sub
scas
pop
es
fiaddl
aad
mov
out
lret
mov
jge
pop
mov
cmp
bound
out
or
dec
push
rcr
xor
std
adc
jns
inc
cmpsb
xor
add
jmp
shll
pop
sbb
mov
jno
aaa
lock
fwait
mov
push
popa
dec
aad
add
push
mov
cmp
push
aas
aam
icebp
mov
inc
mov
pop
fcomps
mov
adc
cmp
data16
cmpsl
xor
es
lea
adcl
cld
sti
out
movsl
pop
cwtl
lret
lret
sti
pushf
and
out
add
jae
dec
sti
negl
icebp
fstpl
shll
dec
sbb
icebp
fidivrs
popl
in
inc
cmp
int
dec
lahf
aaa
push
hlt
es
jecxz
shlb
incb
mov
mov
outsb
cltd
jp
xchg
add
imul
out
ret
mov
sbb
xchg
inc
push
std
out
xchg
bnd
insl
call
js
std
cltd
add
sub
jg
pop
out
iret
popa
test
ret
arpl
into
push
add
lock
ret
cmpsl
jns
jl
lock
dec
sub
pusha
ret
inc
or
inc
mov
bound
xchg
push
into
cmpsl
mov
pop
shl
jmp
jecxz
pop
pop
cmpsl
lret
ret
xor
sbb
add
adc
push
push
pop
pop
mov
cmp
sub
fisttpl
xor
fnstenv
pusha
adc
jg
fsubrl
gs
pop
push
jo
std
sub
aas
cmp
mov
jp
jno
rcrb
adc
test
adc
xchg
xor
fwait
call
int3
mov
fiadds
pop
mov
cmp
pusha
fwait
add
push
sub
jle
mov
mov
sbb
lods
push
hlt
and
fildll
mov
dec
jbe
bound
push
jne
dec
sub
add
mov
shll
jge
lcall
sbb
xor
and
ljmp
and
jne
lds
ret
mov
xor
xchg
outsl
xchg
pop
xchg
mov
addb
arpl
mov
cmp
ljmp
je
ja
mov
jmp
and
scas
shrl
cmp
inc
nop
insl
or
push
pop
dec
sbb
insl
push
ss
mov
mov
das
add
mov
andl
sbb
sub
mov
pop
stos
and
cmp
push
or
inc
jno
sahf
jg
filds
mov
es
data16
xor
xchg
xlat
mov
jno
mov
mov
addr16
out
xorb
jecxz
fisubrs
stc
cs
cltd
or
mov
or
mov
into
dec
push
cmpsb
fdivl
cli
push
gs
imul
jmp
clc
mov
fwait
je
pop
mov
mov
mov
mov
pop
mov
xchg
xchg
pop
bound
imul
jnp
dec
mov
jmp
fs
push
xor
lods
xorl
and
pop
scas
jge
aas
into
mov
popf
cld
xor
ljmp
dec
xchg
clc
mov
or
sbb
sbb
jae
and
mov
jno
dec
ja
mov
mov
jne
inc
dec
pushf
cld
rol
adc
repz
aam
movsl
lret
cld
and
push
fwait
cmp
push
inc
mov
cmp
push
cmp
lea
in
fcomp
dec
sbb
mov
test
jae
and
imul
mov
sub
repnz
pop
push
or
xor
mov
xlat
add
mov
roll
or
cmp
and
loope
ljmp
sub
dec
mov
andb
and
out
dec
mov
mov
in
and
sahf
push
loopne
cmp
push
pop
fbld
mov
cmp
mov
cmpsb
or
or
mov
and
xorb
xchg
jae
iret
je
aad
adc
lods
and
imul
push
imul
inc
adc
ficoml
cmpsl
dec
sbb
dec
lds
mov
push
shl
or
andl
mov
pop
sub
pop
jmp
push
scas
and
ret
and
test
mov
push
cmp
in
fnsave
sub
ja
ja
lods
xor
cmp
fimull
sub
push
cmp
dec
adc
iret
mov
mov
fwait
jp
cltd
mov
push
xor
cmp
gs
mov
scas
sbb
pop
mov
inc
jge
or
cmp
cwtl
and
shl
out
and
jns
in
ljmp
jl
addb
pop
cli
clc
popa
mov
adc
add
scas
andl
scas
xchg
xchg
inc
sahf
sbb
clc
bound
push
lret
add
lcall
aaa
rolb
rolb
mov
loope
pop
ds
and
shrl
test
jp
adc
movl
mov
je
mov
xchg
sbb
enter
mov
clc
push
hlt
fs
jle
lock
xor
arpl
aaa
addr16
jl
inc
mov
cmp
testb
stos
imul
scas
xlat
push
inc
pop
push
mov
sub
call
stos
orb
outsl
rolb
dec
sahf
sbb
js
mov
sub
out
imul
sub
in
push
repnz
ret
fnstsw
insb
push
adc
repnz
test
sahf
ss
lahf
sub
outsb
or
mov
clc
daa
push
add
mov
shll
add
pop
aam
ss
icebp
cmpsb
aas
jne
mov
les
xchg
repz
loope
sbb
sbb
xor
mov
in
sub
or
push
xor
insb
aad
jecxz
adc
aas
sahf
pop
lods
shll
pop
or
lret
sub
mov
negb
mov
mov
push
add
mov
aam
lock
pop
jo
sub
cmp
out
clc
xor
adcl
subl
lea
mov
repnz
mov
aam
xchg
je
pop
out
dec
jbe
call
and
les
test
orl
fdivs
data16
inc
repnz
push
sub
aam
xchg
dec
adc
out
gs
mov
ficoml
in
in
out
cs
mov
movsl
rclb
dec
ds
xchg
in
cltd
cmp
stos
mulb
cmpsw
inc
in
mov
lods
adc
fbld
jecxz
je
dec
imul
xor
push
inc
incl
pop
test
cmp
test
addl
fidivrs
dec
cmpsb
sub
daa
jg
mov
in
scas
outsl
test
shrd
xchg
pop
sahf
mov
ror
mov
lret
pop
inc
ljmp
ja
and
and
jle
mov
lods
inc
sbb
imulb
arpl
and
xor
mov
xor
xchg
jnp
jl
and
loop
movsb
jle
rcll
mov
cmp
sub
data16
xlat
and
cs
jmp
jecxz
movsb
push
lock
sbb
imul
iret
fnstenv
mov
mov
adc
mov
mov
stc
in
xchg
inc
aaa
pop
addl
jl
pushf
repz
and
mov
lcall
test
and
jecxz
xor
call
aas
jns
pop
nop
and
int3
les
xchg
test
adc
dec
xchg
in
insl
push
sbb
adc
mov
cltd
js
test
jb
lds
jp
popa
hlt
ds
shrb
ja
gs
arpl
push
pop
mov
pusha
jae
push
mov
add
pushf
pushf
cmp
loop
lods
ret
jecxz
lcall
xchg
inc
shrb
xor
push
ret
pop
das
cwtl
mov
add
pop
lds
icebp
ja
jno
rcr
mov
mov
jecxz
repnz
dec
pusha
stos
sti
js
fiadds
jecxz
test
lret
jb
xchg
leave
dec
pusha
lods
cmpsb
adc
out
push
xchg
push
mov
add
ss
and
aaa
pop
movl
inc
std
addr16
push
xchg
lock
lret
shrl
jb
mov
push
push
sbb
mov
mov
jbe
mov
sbb
dec
inc
xor
test
sub
or
enter
xor
cmpsb
jl
jbe
xor
cmp
out
inc
mov
mov
mov
pop
pop
push
push
hlt
ret
test
cmc
xchg
rorb
outsb
imul
xor
sbb
ret
jp
mov
ds
aad
mov
jo
and
dec
aaa
cmpsl
inc
icebp
pop
lcall
xchg
adc
sbb
stc
pop
iret
mov
pop
mov
lcall
push
xchg
std
cld
cwtl
pop
in
fimuls
sbb
les
pop
or
and
out
cmp
sbb
stc
out
ds
in
repz
out
cwtl
das
cmp
or
inc
pop
jmp
mov
stos
mov
mov
lock
cmpl
fmuls
pop
mov
mov
or
adc
andb
push
mov
inc
aaa
adc
mov
lahf
fimull
jns
pop
cli
cmp
adc
inc
xor
cmpb
je
cmpsb
test
idivl
mov
inc
es
popf
lea
push
loop
in
bound
sub
faddl
xor
fcomps
lahf
mov
mov
in
add
cmp
and
jo
aaa
pop
fbstp
and
adc
mov
test
cmp
pushf
out
pop
jg
lret
and
nop
push
cmp
cmp
fwait
sub
sub
cld
mov
sbb
scas
xchg
and
mov
cmpsb
xchg
sti
xor
adc
or
push
fsubrl
out
mov
out
call
mov
dec
fildl
insl
inc
cmp
mov
leave
mov
loop
jns
arpl
loope
push
mov
add
jmp
bound
sub
xchg
mov
dec
aad
idivl
sbb
pop
dec
lods
aaa
stos
movsb
push
pusha
pop
cmpsb
push
xchg
and
cmp
pop
xabort
pushl
add
mov
in
jg
out
aam
sub
xor
inc
push
inc
aad
out
xchg
loope
movsl
lcall
mov
mov
xor
insb
xchg
mov
pop
or
out
aas
or
inc
or
mov
mov
fwait
test
xor
push
push
pop
dec
xchg
sub
dec
and
outsb
inc
les
inc
mov
pop
xchg
ret
or
or
push
fs
xor
push
pop
sbb
mov
stos
or
pop
xchg
in
jae
jbe
ret
jae
loop
cmp
sbb
fadds
push
sub
ljmp
in
adc
sub
dec
bound
xchg
push
xlat
movsl
jae
adc
shrl
mov
scas
inc
loop
ja
lds
test
orl
test
xor
cmp
push
cmp
cli
in
insb
sbb
out
push
outsl
mov
stos
lret
cmp
enter
test
xor
mov
sbb
sub
jmp
ss
mov
test
jb
adc
mov
cmp
sbb
dec
out
movsl
xchg
xlat
mov
lods
dec
push
popl
jno
pop
data16
imulb
andb
les
aam
cmpsl
dec
ret
cmc
cwtl
cld
in
jmp
cs
ljmp
sbb
push
repnz
dec
and
inc
out
dec
sbb
xchg
imul
mov
jnp
pop
and
push
add
cmp
sub
cmp
add
jno
cmc
enter
repz
in
sbb
lahf
inc
scas
dec
pusha
hlt
push
sub
cmp
popf
scas
jg
das
push
icebp
jbe
mov
inc
sub
push
dec
xor
add
or
outsb
shll
js
dec
imul
jle
or
fcompl
aas
das
sub
sbb
jnp
mov
vpsrlw
repnz
ss
ds
out
mov
mov
pop
mov
xor
dec
into
rep
jbe
pop
xchg
add
fisttpll
test
pop
dec
cmpsl
vpandn
in
xor
mov
imul
sbb
adc
inc
fadd
icebp
inc
rcrb
stc
fsubrl
push
mov
dec
enter
mov
int
adc
sbb
add
dec
in
sahf
or
mov
adc
mov
lahf
lret
lea
sub
dec
pop
pop
enter
scas
sub
lret
les
cmp
hlt
mov
test
adc
jge
cmp
out
sbb
jle
mov
nop
adc
push
pop
pop
mov
lds
ljmp
push
cmpsb
inc
add
popf
xor
mov
jo
adc
cli
jb
xor
insl
xor
gs
jl
inc
or
mov
jmp
add
fbld
scas
into
test
pushl
leave
adc
sub
aam
mov
imul
push
insb
int
inc
or
inc
pop
fucomp
flds
add
add
mov
dec
xlat
inc
xor
fldenv
repz
imul
pop
aaa
shr
add
dec
xlat
xor
lods
call
enter
out
add
xchg
scas
mov
cmp
jnp
aaa
jecxz
and
rol
and
dec
ret
add
out
and
mov
hlt
and
aam
mov
xor
dec
mov
or
jae
std
cld
jle
pop
addr16
mov
push
aam
or
adc
shl
icebp
neg
push
push
xor
scas
push
add
inc
scas
inc
ficoms
and
int3
shlb
sub
jb
frstor
rcrb
pop
xor
cmc
jnp
add
xchg
mov
js
cmp
and
inc
mov
mov
cmpsl
ljmp
ret
mov
xor
sub
lods
mov
xchg
lods
daa
repz
inc
pop
adc
test
xor
adc
and
or
int
and
push
pop
xchg
fucomi
std
test
and
in
jb
bound
call
adc
mov
dec
out
dec
scas
mov
jne
int
push
push
movsl
inc
dec
call
or
rclb
add
lahf
jl
add
jp
inc
aam
push
int3
mov
es
fst
cmp
lock
xlat
and
dec
jp
jmp
out
inc
lds
sub
je
dec
mov
push
add
xchg
sarb
xor
push
adc
xchg
sbb
mov
or
gs
dec
adcl
es
mov
popf
out
adc
xlat
dec
add
pop
adc
arpl
ficomps
and
xor
jmp
push
jae
xlat
or
xor
xor
jp
ljmp
xchg
mov
jecxz
je
lea
jle
push
push
xchg
jnp
nop
ss
ret
sub
sbb
jo
dec
or
in
jle
idivl
mov
inc
cmp
scas
mov
clc
xchg
adc
add
jo
or
mov
ljmp
fwait
xor
inc
jae
and
aam
dec
or
ja
adc
xchg
adc
pop
pop
into
jge
test
int3
decl
out
adc
adcl
popa
shrb
and
subb
mov
int3
cmc
mov
jmp
scas
xchg
mov
mov
mov
je
or
push
aad
mov
dec
jg
mov
repnz
jmp
cmp
sub
push
and
push
mov
movsl
mov
nop
dec
icebp
pop
fldz
insl
mov
push
and
jge
inc
or
xor
pop
js
je
lds
clc
lret
jg
ss
shrb
xor
lahf
icebp
xor
rcll
mov
mov
jge
pop
push
rcl
mul
jb
test
xor
add
clc
iret
xchg
outsl
pusha
mov
mov
outsb
es
push
es
cli
in
add
and
and
out
xor
imull
ret
mov
push
lods
int
popf
xchg
cld
mov
and
cmp
jae
loope
xor
mov
xchg
sub
jmp
call
push
mov
into
cld
popf
pop
rclb
mov
push
aad
xchg
shrb
jns
mov
xor
add
testl
or
push
mov
and
lds
xor
push
lahf
pop
mov
push
pop
xchg
or
ret
mov
mov
push
pop
adc
sbb
je
or
in
or
mov
loopne
scas
dec
fwait
jl
push
dec
xchg
xchg
stos
pop
imul
or
jbe
jbe
stos
stc
mov
rcll
outsl
sub
shlb
sbb
cmp
xchg
fiadds
mov
cmpsb
lcall
inc
push
inc
mov
adc
xchg
daa
fistpl
dec
mov
mov
mov
pop
stos
lods
bound
popa
lock
fs
dec
cwtl
movsl
push
pop
mov
jge
js
and
and
dec
adc
push
pop
js
cmpl
pushf
aam
cmp
xchg
mov
push
gs
mov
and
cmp
test
jecxz
in
add
lock
xor
scas
push
inc
mull
scas
lret
push
into
ss
insl
lds
mov
clc
mov
sub
out
mov
gs
sti
je
dec
pop
mov
into
stos
in
insb
shll
adc
repz
lods
leave
mov
add
fcoml
test
pop
mov
pop
enter
inc
imul
inc
pop
push
lahf
inc
lods
push
dec
movsl
lock
sbb
mov
mov
xor
pop
shll
mov
jo
mov
pop
arpl
aaa
lock
loop
loopne
push
enter
or
add
mov
cli
adc
xor
sbb
pusha
inc
sub
aaa
jae
je
repz
mov
testl
in
je
mov
movsl
andb
xor
movsb
push
xchg
in
inc
push
mov
push
movsl
data16
into
sub
mov
filds
sub
push
cmc
scas
sbb
lret
cmp
mov
incl
arpl
mov
pop
jp
or
dec
cltd
mov
pop
fisubs
das
cmp
mov
ret
add
jo
test
sub
fdivs
sbb
aas
jg
aas
mov
jbe
add
inc
ret
aas
test
arpl
aad
test
sbb
push
pop
push
fs
jg
mov
popf
xor
ds
pop
push
aad
gs
mov
xchg
inc
fdivs
or
sbb
lods
clc
add
ror
jle
adc
jb
pop
call
aam
data16
rcrb
pop
pusha
out
mov
sub
sub
jmp
xor
pop
fstp
cmp
stos
sub
cmpsl
push
data16
out
mov
adc
mov
lcall
mov
xor
sbb
aas
sub
lret
fldcw
add
xchg
cmp
call
or
push
mov
insl
mov
pop
or
jb
hlt
mov
clc
lods
cmp
aaa
pop
pop
addb
push
mov
daa
xchg
aaa
stc
and
and
mov
dec
sub
in
aaa
into
mov
fisubl
add
in
hlt
ds
sbb
and
fsubr
inc
in
std
mov
fs
mov
mov
test
inc
sub
or
stc
dec
dec
mov
jp
sub
mov
mov
sub
push
fldenv
push
outsb
lods
dec
push
adc
cmp
cltd
test
test
mov
sub
scas
mov
pop
push
mov
cmpsl
icebp
insb
rorl
hlt
inc
ret
lock
data16
fs
dec
loope
outsb
scas
pop
sbb
popf
xchg
dec
mov
sbb
inc
and
popl
mov
dec
hlt
mov
or
into
insb
sbb
pop
frstpm(287
adc
lock
fdivp
jp
jmp
xchg
cmp
push
pop
mov
xchg
mov
dec
enter
mov
or
outsl
push
mov
ljmp
test
inc
pushf
jle
xor
ds
sub
mov
xchg
loop
shlb
sbb
repz
sub
mov
in
rcl
popa
scas
pop
idivw
sub
xchg
std
lret
or
xor
inc
or
rorl
repz
pusha
mov
dec
mov
scas
movsb
dec
mov
loop
outsb
test
inc
std
stos
test
outsl
fdivp
mov
fdivrp
xchg
out
cmp
movsl
push
adc
or
prefetchw
movsb
adc
cmp
jo
lds
mov
xlat
js
mov
add
sub
cld
xchg
imul
lea
xor
arpl
js
repz
fstl
inc
dec
jge
inc
sahf
fst
jno
jb
mov
push
pop
cmp
clc
dec
sarb
fisubrl
sub
aad
fsts
sarl
std
add
enter
dec
cmp
pop
arpl
fstpl
clc
mov
xchg
xchg
cwtl
or
dec
fsts
mov
mov
jge
mov
dec
push
push
pop
add
jg
xchg
and
and
mov
stos
sub
enter
pop
jns
insb
mov
jnp
lahf
or
imul
cmp
mov
cmp
push
int3
mov
decl
jns
inc
out
xlat
and
test
xchg
or
pop
push
push
lahf
mov
push
inc
or
bound
fsts
ret
out
popf
xchg
fs
sbb
and
arpl
xor
push
loope
jne
xchg
mov
sbb
jae
mov
push
fldt
cmc
fnstsw
fwait
pop
aad
aam
cmp
mov
pop
dec
sarb
ja
or
ljmp
aas
mov
js
dec
dec
sbb
dec
sbb
and
outsl
orb
sub
pop
in
lods
sub
repz
movsb
outsl
out
stos
or
lret
imulb
xchg
fdivrl
arpl
xor
push
cld
jle
cmp
xchg
enter
in
clc
js
fisubs
dec
loope
int3
movsl
nop
lock
push
xchg
in
jbe
fnstsw
add
adc
push
jl
fs
scas
cmc
divb
xlat
adcb
mov
loopne
dec
jg
aas
enter
pop
and
pop
test
int
sub
aam
aas
and
jl
popf
inc
lret
stc
xchg
fstpt
xlat
cld
push
ds
fsincos
adc
mov
mov
mov
inc
test
pop
es
out
sbb
andl
lret
add
jmp
jb
shll
push
in
sarb
cmpsl
xchg
and
xchg
rorb
imul
movsb
outsl
and
cmp
fwait
push
fadds
mov
jmp
add
les
cmp
and
incb
jg
aad
sbb
jnp
out
jl
pop
jl
std
add
push
xlat
in
shll
ret
std
cmp
pushf
loopne
mov
push
cmp
ficoml
adc
test
mov
mov
popf
sbb
sahf
mov
jb
lahf
sahf
cs
std
or
repz
lret
dec
mov
xchg
add
cwtl
pop
mov
lret
movsl
sub
mov
fildll
jl
xchg
int3
jae
dec
loop
mov
pop
add
bound
std
popf
push
aam
mov
in
inc
cmp
mov
cmc
jno
add
mov
idivl
rorb
gs
adc
mov
out
in
in
stos
pop
aas
iret
test
adc
adc
aam
cmpsl
sarb
in
ffreep
push
or
rolb
inc
jge
cmp
js
aam
push
mov
rcrb
inc
lds
and
jno
dec
bnd
rcl
lods
subb
fs
mov
jg
lret
daa
out
cltd
loop
dec
inc
push
mov
btrl
lods
daa
pushf
test
daa
jge
mov
push
jmp
repnz
sti
arpl
fidivl
in
push
pop
outsl
push
xchg
test
lahf
xchg
cltd
inc
sahf
push
rclb
jle
sub
push
bound
aad
cld
loopne
xchg
and
int3
mov
add
clc
cwtl
jnp
aad
xor
cmovs
mov
jle
push
ja
shlb
adc
mov
fcmovnbe
push
ja
adc
repnz
lock
jnp
lock
sbb
test
stos
stc
orb
stos
cld
push
fadds
pop
rorb
je
and
test
pop
jmp
pop
data16
mov
outsb
outsl
in
mov
push
dec
mov
cld
xorb
stc
movl
dec
mov
leave
lret
pop
loop
jnp
adc
add
mov
mov
xchg
nop
clc
test
fmulp
data16
cmp
or
cmp
test
shrb
jmp
dec
int
cmpsb
jp
dec
dec
fdivs
out
push
pop
or
and
loopne
into
add
in
sub
fcoml
push
pop
add
sbb
inc
sub
and
js
jno
jle
sbb
mov
stos
repz
jmp
sub
data16
ja
gs
dec
imul
jnp
push
xchg
push
sbb
incb
xor
jb
lds
frstor
mov
aad
rorl
dec
and
imul
subl
xor
sub
mov
rolb
mov
mov
or
pop
mov
js
dec
jnp
push
sub
lock
dec
stc
pop
fsubrl
inc
scas
fsubl
mov
jp
ja
jge
leave
out
or
xchg
pushl
pop
scas
xchg
add
scas
fcompl
sub
mov
imul
sbb
mov
or
push
mov
jmp
push
lahf
lret
mov
xor
inc
jle
mov
rcrl
sub
cwtl
push
mov
push
cld
jbe
fs
repz
rclb
aas
out
stc
inc
rcl
iret
pop
cwtl
sub
into
popf
pop
das
adc
sub
inc
sbb
popf
insb
flds
and
fbstp
mov
repnz
push
push
aaa
and
aas
adc
and
push
imul
sahf
dec
sbb
pop
test
in
cmc
gs
aam
dec
mov
arpl
das
and
or
sbb
adc
dec
fisttps
lahf
adc
vhsubpd
push
mov
adc
lahf
mov
cli
out
in
pop
mov
cmp
and
xchg
dec
iret
ss
lret
cs
mov
xlat
outsl
stos
jno
hlt
imul
stos
scas
leave
in
inc
loop
adc
out
fisubrs
loop
jmp
ss
negb
pop
int
lret
pop
loopne
mov
sbb
and
and
out
roll
push
dec
gs
xor
mov
sahf
xchg
cltd
inc
mov
shll
mov
xchg
inc
jmp
push
jbe
cmp
adcl
stc
push
test
lock
mov
lret
xchg
bound
or
or
fisubrs
aad
daa
fdivr
jecxz
lcall
cli
or
cwtl
test
inc
fwait
mov
fistpl
nop
xchg
jnp
call
cltd
imul
mov
inc
dec
jge
xchg
jmp
dec
jnp
fcmovb
mov
fst
inc
or
cwtl
outsl
xor
fldenv
ret
fwait
es
xchg
lret
add
and
sahf
mov
xor
xchg
mov
xchg
add
test
pop
xor
adc
fildl
pop
xor
movsb
lock
xchg
sub
and
arpl
jg
sub
xor
decb
inc
cli
adc
movb
iret
loope
adc
div
leave
fs
cmp
push
or
xchg
pop
repz
adc
push
lock
nop
rorb
xchg
daa
loope
adc
add
cmp
push
pop
dec
sub
int
pop
fisttpl
fucom
shlb
lods
xlat
stos
mov
loope
pop
int
and
nop
xor
lods
in
push
inc
and
data16
insb
adc
pop
scas
or
enter
clc
addb
ds
inc
dec
push
mov
add
xchg
mov
aad
leave
mov
pushf
jno
mov
sub
inc
scas
ret
cmpsb
shlb
out
imul
sbb
pop
inc
jbe
pop
imul
cmp
rorl
in
mov
mov
sahf
cmp
mov
lock
pop
push
mov
shr
or
stos
out
divl
mov
sahf
loopne
in
sub
jmp
push
dec
mov
movsl
inc
sbb
subl
js
pop
je
wrmsr
xor
push
je
dec
es
xchg
adc
mov
xor
pusha
stos
nop
xor
or
mov
adc
sub
xchg
ss
js
cmpsb
pop
xchg
add
fcomps
and
cmp
leave
adc
push
dec
sbb
in
cld
push
arpl
stos
mov
push
add
inc
cmp
mov
cmp
lock
mov
loop
inc
inc
mov
nop
push
int3
jmp
std
sub
adc
lcall
sbb
repz
aaa
hlt
xor
jno
jecxz
nop
push
out
fidivs
push
mov
lds
rolb
sbb
xchg
push
mov
sub
stc
jae
lock
scas
or
and
adc
dec
fsubs
fcoms
add
cmp
cwtl
fsts
int
fnsave
notl
stos
iret
in
sbb
mov
imul
push
pop
mov
mov
test
popa
push
adc
scas
xor
sbb
out
inc
dec
sub
mov
push
mov
outsb
clc
popf
lea
cli
xchg
inc
pop
add
cmp
cmp
cmp
lods
jl
push
adc
dec
and
pop
push
cmp
aaa
or
dec
out
sbb
mov
jle
lods
mov
rcrl
scas
insb
mov
inc
js
repnz
out
xor
mov
jp
inc
pop
mov
lfs
pop
aaa
fists
jno
sub
lcall
daa
jno
scas
sbbl
movsl
adc
out
sbb
sti
shll
out
icebp
xchg
flds
jle
push
int3
adc
inc
cld
test
lds
or
inc
push
xchg
stc
sbb
sbb
inc
pushf
data16
jns
fiadds
lret
sub
adc
std
mov
cmp
jecxz
push
push
mov
leave
movsl
and
xlat
pop
xor
add
xchg
jge
jmp
xlat
rcrl
xchg
jecxz
jp
xor
call
stos
imul
leave
adc
leave
xor
fcomps
outsl
jno
stc
f2xm1
je
sbb
out
adc
es
fbld
mov
mov
mov
imul
jmp
push
mov
mov
jl
lret
dec
movsb
sahf
or
sub
daa
jge
cli
sbb
push
add
ljmp
lock
pop
inc
cmpsl
add
fidivrl
sbb
aam
gs
pop
fcmovu
addl
xchg
xor
mov
and
or
dec
rolb
push
mov
outsl
mov
jmp
mov
mov
xlat
or
inc
jge
dec
cli
in
stos
nop
inc
and
out
scas
cmpsl
int3
push
aas
ljmp
int3
or
into
enter
pop
inc
test
and
push
push
sub
push
fwait
push
jmp
or
pop
mov
rcl
fstpl
lcall
mov
loop
mov
fldl2t
mov
dec
pusha
jle
cmp
cltd
push
clc
ficoms
mov
jbe
pop
adc
cli
lret
enter
decl
ret
mov
popa
rorb
loop
bound
adc
into
lds
inc
jmp
sbb
cmpsb
mov
adc
std
jmp
pop
ret
loopne
lods
inc
aam
in
subl
imul
ja
pop
push
sub
fdivrs
daa
cwtl
mov
sub
mov
dec
cmpl
xor
lock
dec
or
or
or
out
sub
in
jecxz
int
das
sub
pop
dec
loope
dec
repnz
xor
adc
pop
cmp
cmp
fcmovne
insb
sub
fwait
push
repnz
push
mov
div
fwait
cmp
imul
loopne
jnp
jmp
popf
in
in
in
arpl
push
lods
and
or
mov
repz
movsb
or
iret
inc
lcall
lock
je
aam
roll
mov
arpl
inc
aas
or
lea
fcoml
xor
pop
lcall
inc
mov
les
adc
repz
enter
push
mov
mov
int
xor
or
aaa
pop
sub
sub
test
mov
cmp
push
mov
in
je
les
sub
and
or
mov
int
out
mov
push
ljmp
xor
mov
xor
or
out
pop
imull
scas
cmp
mov
in
sbb
pop
xchg
jecxz
xor
inc
enter
in
adc
and
push
aam
xchg
lcall
inc
fists
adc
inc
call
dec
mov
push
fisubl
outsb
call
fsubrp
mov
fmuls
cmc
mov
lods
scas
mov
pushf
sbb
push
stc
xchg
iret
bound
int3
data16
cs
dec
rolb
mov
je
movsl
jo
and
mov
loop
push
dec
ja
ss
xchg
and
std
push
dec
inc
out
enter
or
mov
jle
fildl
mov
sub
xchg
add
push
mov
jle
into
mov
xor
sub
leave
in
sub
out
cmpsl
ss
lods
orb
js
test
push
fadds
pop
and
icebp
adc
gs
out
insl
lahf
leave
jne
cmp
repnz
add
push
mov
scas
shlb
xchg
add
mov
jecxz
pop
sub
fidivrl
inc
sub
jmp
xchg
test
xor
jle
mov
mov
dec
popa
jmp
in
decb
adc
push
push
hlt
nop
arpl
xor
cwtl
out
rcr
scas
out
dec
int3
or
scas
or
jno
push
adcb
xchg
roll
sbb
dec
lock
mov
mov
sbb
pop
pop
ds
sub
dec
cwtl
jecxz
repz
testl
addl
in
and
scas
mov
adc
ret
cltd
outsl
mov
notl
pop
int3
push
jnp
or
loop
xor
mov
jns,pt
outsb
call
mov
jmp
pop
xchg
outsb
push
into
add
mov
popf
push
mov
imul
pop
push
in
sahf
rcll
lods
popf
add
jbe
int3
and
add
mov
cltd
xor
xchg
push
sub
jbe
jl
cs
dec
repnz
testb
inc
outsl
shlb
dec
sbb
xor
jne
aas
inc
add
lds
jno
mov
stos
xor
or
int3
sub
push
pop
mov
aad
pop
test
pop
xchg
cmpsl
xchg
cmp
lods
pusha
popf
push
stos
mov
jecxz
push
cmp
cwtl
fisttps
and
inc
lret
jp
sub
fdivl
cmpsl
lahf
rclb
mov
cmp
cmp
push
push
xor
push
mov
gs
adc
lret
in
sub
movsl
cltd
jl
mov
call
mov
or
call
das
add
fmull
or
filds
sbb
enter
cmpsb
sbb
push
popf
cmpsl
mov
int3
aad
jnp
or
mov
xor
shl
pop
scas
and
out
out
jne
sub
sbb
out
arpl
mov
sub
ja
sbb
xchg
out
mov
xor
xor
in
mov
fcompl
jo
test
inc
xchg
dec
fnstsw
inc
mov
dec
jmp
or
and
push
rcrb
mov
fldcw
addr16
adc
repz
ret
imul
repnz
adc
lcall
fsts
out
std
ja
lret
je
push
sbb
mov
rcr
inc
sub
out
lds
shrb
jns
testb
in
jb
ret
int3
fcomps
mov
cmpsb
ja
int
pusha
into
cmpsb
mov
push
lock
jns
jp
iret
clc
mov
ds
nop
insb
ficoml
jge
adc
subb
aad
push
mov
fnsave
cmp
add
aaa
sbb
hlt
inc
std
push
mov
stos
and
daa
addr16
mov
push
inc
dec
stc
cmp
add
mov
or
std
push
movsl
cmp
leave
shll
pop
push
dec
or
push
mov
inc
in
push
sbb
das
adc
xchg
enter
fwait
scas
push
aas
out
in
hlt
js
sbbb
jae
jmp
cmp
mov
sbb
inc
lea
push
shrl
in
mov
xchg
imul
gs
popa
insb
and
insl
cs
adc
xchg
xor
lods
pop
cmc
insl
sub
push
adc
jo
jmp
cli
cli
add
negb
pop
push
les
jns
outsl
sub
push
or
inc
mov
xor
or
push
add
aaa
cmp
fcoms
shr
mov
inc
xor
fs
mov
hlt
ljmp
inc
movl
push
ds
ljmp
stc
fisttpl
mov
sub
inc
xchg
int
arpl
fcoml
cli
idivb
jb
sarl
cmp
lcall
mov
fsubl
sub
sbb
sub
scas
xchg
jp
repz
xchg
mov
sub
sub
scas
push
adc
cmp
and
aas
scas
push
adc
add
jp
out
scas
lds
cmp
cli
mov
xchg
pop
cwtl
jno
or
xchg
or
jo
mov
test
pop
movsb
inc
or
not
mov
or
mov
pushf
xchg
inc
mov
filds
out
pop
int
fwait
xchg
mov
subb
mov
cmp
push
insl
not
into
dec
cwtl
jge
sub
repnz
jns
cld
cwtl
hlt
jns
xor
pop
dec
adc
in
notl
pop
int
inc
jno
aas
and
enter
mov
dec
cltd
and
push
or
dec
fwait
nop
xchg
lods
cmp
mov
dec
adc
aam
xchg
stos
push
cmpsb
sbb
add
ljmp
mov
inc
dec
pavgw
fldt
in
pop
outsb
cmpsb
loop
jmp
xchg
das
fidivl
icebp
data16
jge
into
dec
loope
in
pop
shrl
cmp
insb
cmp
sbb
movsl
xchg
clc
pop
add
xor
sub
xor
stos
mov
pop
sbb
das
das
rcr
inc
lods
xchg
mov
xchg
push
mov
shl
daa
movsb
push
jno
fnsave
xor
shrl
andb
dec
sbb
xchg
cmpsl
xchg
pop
enter
sub
repz
sub
enter
mov
roll
fsubs
popf
les
mov
pop
cli
mov
fcomps
jbe
ss
decb
insl
mov
clc
jnp
in
lret
mov
rcrb
sbb
dec
loop
cmp
ror
jno
xchg
hlt
cwtl
rcrl
daa
add
popf
jo
shl
inc
mov
imul
ret
push
mov
and
sub
inc
mov
js
ffreep
ret
in
mov
mov
fldl
insl
and
nop
clc
sub
fimull
rcrb
xor
and
jmp
mov
in
mov
int
mov
or
mov
rol
lret
popa
fmuls
call
push
mov
xor
in
xchg
aad
sahf
stc
add
notb
push
jnp
adc
pop
inc
mov
aaa
js
movsl
stos
imul
push
sbb
ljmp
dec
cmp
in
sub
fdivrs
in
int
adc
test
xchg
pop
std
mov
or
imul
mov
fisttps
mov
leave
pop
sarb
into
lods
cmp
addr16
sub
jmp
ret
in
mov
mov
and
push
cmc
adc
xchg
xor
mov
stc
inc
jb
dec
cmp
icebp
repnz
mov
sar
loope
sub
dec
ljmp
inc
aas
adcl
cmp
in
xchg
xchg
dec
jns
iret
popa
xchg
lea
fldln2
rorl
aas
mov
jg
imul
inc
add
pop
pushf
movsb
sbb
mov
aaa
or
cmpsb
icebp
xchg
add
popa
fisubrs
mov
or
cmpsb
push
leave
movlps
and
mov
int
js
mov
ss
rorb
jg
xlat
jns
push
add
sub
cmp
movsb
mov
imul
and
call
cmp
sub
adc
das
fisubrl
rolb
pop
push
sbb
inc
pop
sti
sbb
out
je
push
movl
jae
xchg
scas
push
xor
jno
adc
pop
fnsave
jns
sub
adc
lods
jp
push
iret
or
or
fwait
out
pop
ja
dec
cltd
cltd
loop
push
mov
and
push
insl
in
int3
and
loopne
lds
sub
push
inc
movsb
cli
xor
xchg
pop
sbb
sbb
xchg
xchg
mov
adc
imul
or
xor
incb
mov
out
jmp
in
sub
xchg
add
xchg
push
push
in
repnz
scas
inc
js
mov
sbb
jp
or
cmp
mov
push
sub
jle
cli
int
insb
movsb
inc
or
jg
push
sbb
push
pop
mov
lcall
repz
into
mov
into
insb
xor
or
pop
ss
testb
pop
imul
arpl
call
mov
in
rclb
cld
mov
out
push
fs
fidivs
mov
mov
fwait
mov
aaa
and
cwtl
pop
cmp
adc
inc
ret
outsl
push
insl
imul
test
push
fstpt
sbb
cmp
scas
stc
mov
cld
test
mov
sbb
bound
lock
mov
push
cmp
mov
mov
bound
mov
mul
jns
mov
push
jae
sbb
pop
and
add
cmp
jp
cmpsl
outsb
xlat
xor
arpl
jnp
cmpsl
jb
xor
std
test
dec
ficoml
xchg
out
lds
or
sub
cmp
inc
addr16
jl
fistl
rcrb
and
loopne
sbb
fwait
test
adc
push
jns
push
in
repnz
pop
ret
push
icebp
or
or
dec
dec
jne
lret
nop
ret
or
andl
mov
sbb
add
shl
add
pop
mov
jb
jno
jge
cmc
push
ds
push
add
mov
cmp
push
lds
adc
add
cmpsl
mov
jo,pn
mov
cmpsb
xor
mov
push
dec
das
push
push
sub
inc
in
push
sarb
mov
cmp
pop
sbb
sub
insl
pop
les
mov
in
mov
mov
insb
in
lods
rcrb
aam
lcall
mov
data16
aaa
fisttpl
repnz
push
dec
les
insb
mov
mov
sbb
pop
mov
arpl
test
clc
cltd
inc
cwtl
add
out
xchg
pmaddwd
mov
sbb
int
mov
jecxz
sbb
lret
movsb
rolb
mov
push
scas
dec
mov
andl
pop
mov
and
stc
in
fiadds
xor
push
sub
add
jne
sarb
cld
ret
xlat
adc
sbb
add
clc
aaa
jmp
ficoml
add
in
into
sti
adc
jge
mov
jg
jmp
adcb
jno
hlt
cmp
adc
jle
mov
pop
xlat
mov
push
lret
dec
adc
fidivl
out
mov
dec
mov
mov
inc
jl
je
lret
cs
pop
scas
mov
or
daa
insb
add
fstpl
mov
fmuls
scas
movsb
stos
mov
std
out
sbb
mov
in
mov
adc
test
sbb
jmp
mov
outsl
ljmp
mov
mov
fs
pushf
mov
or
das
insb
adc
fxch
push
andl
lahf
push
sub
inc
out
sarb
rcrl
add
add
fisttps
push
lods
or
and
cwtl
xchg
cltd
jl
jb
cltd
and
push
fs
int
js
mov
lods
ds
paddq
stos
cmpsl
mov
mov
sub
jp
pop
mov
cli
mov
sub
test
adc
adcb
mov
pop
jp
pop
mov
cmpsb
test
lods
cmp
pop
icebp
mov
lods
sti
rorb
sbb
enter
push
pop
mov
iret
xor
mov
movsb
or
jl
mov
leave
mov
cli
imulb
adc
mov
cmpsl
pop
xor
pusha
ja
xor
jl
popl
roll
mov
jle
sbb
arpl
push
inc
xchg
js
push
pop
aam
xor
push
add
xchg
xchg
ret
scas
and
adc
push
inc
call
xchg
xchg
popf
push
jl
out
xor
xor
psllq
je
nop
jns
stos
inc
inc
notb
inc
mov
pop
clc
movsb
or
in
nop
jnp
les
mov
inc
or
aaa
inc
test
mov
pop
push
sbb
and
inc
js
in
dec
idivb
iret
mov
mov
sbb
jl
add
sbb
or
out
adc
mov
and
push
xorb
mov
lcall
inc
scas
in
sarl
xchg
inc
dec
dec
in
xchg
cs
loopne
test
sbb
xchg
bound
daa
and
fs
mov
hlt
pusha
jge
dec
arpl
dec
mov
gs
jp,pt
push
mov
ret
jg
inc
xchg
xor
ss
movsl
out
mov
clc
mov
lods
cltd
rorl
mov
xchg
in
inc
mov
sub
imul
jne
fs
xor
js
arpl
mov
push
dec
pop
nop
mov
xor
mov
or
mov
and
cmp
fmuls
add
pop
js
mov
dec
mov
out
ret
adc
adc
pop
pop
outsb
inc
rol
loopw
dec
fsubrl
lahf
lret
ljmp
pop
mov
adc
cltd
or
dec
cmp
sti
in
push
inc
inc
jo
xchg
jle
leave
hlt
xchg
rol
sub
ljmp
cmp
pop
pop
sahf
call
inc
xor
xor
mov
adc
mov
jmp
fisttpl
xor
or
ja
test
push
pop
int3
pusha
jge
sbb
xchg
add
or
pop
in
fcomps
push
lock
enter
rcr
mov
rcll
mov
or
test
mov
mov
into
cmp
jge
je
push
sahf
cmpsb
cmp
cltd
movsb
add
shlb
add
mov
cwtl
push
cmp
mov
push
xor
pop
xchg
sar
pop
push
sbb
es
xchg
mov
popf
out
push
sbb
sahf
mov
out
jg
mov
outsb
out
out
scas
push
mov
shlb
shrl
cmpsl
fdivrl
mov
vxorpd
dec
rcl
pop
imul
fldt
push
or
push
enter
push
push
cmp
ret
mov
outsb
sub
lock
stos
inc
test
enter
pusha
mov
xorb
sbb
mov
pop
mov
xchg
lds
inc
testl
pop
pop
mov
add
sub
stc
jno
mov
popa
jp
movsb
mov
add
test
aas
cwtl
sub
sub
or
popa
fs
xlat
dec
jbe
mov
mov
out
mov
xchg
inc
aas
xchg
cwtl
loop
dec
cmp
loope
sub
icebp
or
test
subl
jne
cwtl
push
das
mov
dec
sub
inc
lret
pop
out
lods
mov
xorb
cmp
push
lcall
orb
jo
addr16
lods
in
mov
nop
imul
std
addb
ljmp
loopne
xchg
push
cmp
int3
mov
aad
iret
dec
insb
sbb
fmulp
mov
xor
xor
pop
xchg
mov
mov
cmp
lahf
sbb
cltd
rcl
jge
jnp
out
leave
inc
scas
jne
out
mov
aad
cs
nop
repnz
rcrb
lea
jo
mov
sbb
std
mov
push
rclb
repz
jge
cmp
push
mov
mov
add
pop
mov
sub
add
dec
loopne
in
bound
faddl
mov
adc
mov
pusha
mov
into
lods
xchg
adc
js,pn
ret
and
jnp
adc
mov
fstl
mov
lods
sbb
xor
xor
jbe
inc
sbb
mov
add
adc
shrb
or
adc
lea
mov
mov
into
test
fisttpl
jb
sbb
stos
xor
loop
popa
aad
stos
out
push
mov
pop
ja
push
jbe
mov
in
pop
xchg
or
sbb
mov
subb
xchg
sub
cmp
push
and
imul
jae
clc
jmp
xchg
fcoml
movsb
loope
rcll
sbb
fcomps
push
dec
sub
jmp
mov
xchg
inc
mov
test
loopne
js
or
orb
jae
push
cmp
imul
sti
lcall
dec
mov
ja
push
out
out
js
addr16
lods
mov
mov
rorb
pop
xchg
js
bound
sti
adc
cmp
mov
jmp
arpl
adc
and
or
push
popf
lret
scas
mov
cli
popf
push
imull
sbb
icebp
sbb
aad
clc
rcll
pushf
clc
hlt
sub
sbb
inc
xchg
mov
insl
inc
push
notl
push
and
loopne
aad
fwait
ja
mov
fstpl
nop
xchg
and
mov
cmpsl
mov
sti
lods
dec
sahf
jb
in
sti
stos
inc
int3
adcb
inc
inc
rorl
inc
push
test
sbb
ficoms
cmp
and
fmuls
inc
cmp
dec
lahf
into
pushf
push
shrl
leave
push
adc
mov
pusha
push
mov
adc
inc
pop
fstpt
stos
dec
mov
xor
pop
pop
sahf
bound
inc
repnz
push
jge
add
stc
pop
fdivr
xchg
cmp
adc
mov
orl
cmp
insl
std
out
ljmp
pop
fs
and
xor
pop
adc
mov
xchg
mov
xchg
and
movsl
stc
xor
lds
xor
pushf
enter
adc
cmp
mov
popf
or
loopne
popl
sbb
and
stc
mov
sub
cmpsb
xchg
cmc
pop
mov
and
jae
xchg
push
test
sub
mov
and
mov
cli
push
push
mov
or
pop
mov
pop
add
inc
inc
mov
insb
sahf
cmp
mov
subb
mov
shr
dec
into
rorb
fsubs
jno
stc
mov
scas
push
sbb
cmp
dec
xchg
push
or
lods
or
jns
jg
scas
stc
mov
mov
in
fnstcw
push
jo
or
push
mov
mov
mov
lahf
test
xchg
ss
pop
popa
jno
popa
cmc
ss
pop
or
popf
dec
cwtl
sbb
jp
mov
neg
mov
push
loop
aam
pop
mov
or
addl
scas
fwait
cmp
sub
ret
enter
imul
loop
add
ret
sbb
sbb
test
rcrl
lahf
out
adc
outsl
loopne
fdivr
push
xor
lcall
testb
mov
xchg
mov
loope
xchg
fstpt
xor
icebp
pop
imul
cltd
lret
fs
cs
lret
lret
mov
sbb
lock
lret
ss
dec
loope
mov
cs
jmp
cs
orb
push
test
pop
dec
xchg
arpl
icebp
sub
ret
push
popf
icebp
imul
fstp
aaa
mov
sub
in
cmp
out
pop
ret
movsb
cwtl
pushf
or
xchg
mov
mov
not
les
xor
mov
fiadds
jmp
fs
sti
inc
mov
out
lock
pop
add
or
ret
ficoms
in
pop
cltd
mov
fsubs
movaps
fwait
dec
inc
fst
mov
mov
pop
pcmpeqd
out
fistps
mov
outsb
out
movl
mov
scas
or
int
sub
cwtl
xchg
aam
pop
push
outsb
push
mov
dec
mov
fsts
imul
and
mov
push
sarl
cmc
cmp
add
stc
cmp
dec
mov
inc
es
outsl
mov
js
add
sbb
and
dec
rcrb
mov
loope
nop
cld
stc
and
popa
je
loopne
adc
pop
cmp
push
lods
fldt
pop
push
cmp
sbb
inc
in
ja
mov
xchg
hlt
push
cli
inc
cmp
dec
imul
xchg
dec
inc
xchg
mov
adcb
dec
insl
push
iret
aam
gs
sbb
jg
popf
sub
test
xor
into
es
or
lea
xor
jae
xor
xor
outsl
push
jecxz
lock
add
pop
test
jp
jle
les
call
or
pop
enter
sbb
pop
gs
fstpl
clc
fadds
add
sbb
outsl
inc
subl
in
test
cmc
push
in
sub
and
jne
fldenv
xor
fucomi
and
lret
aam
xchg
mov
out
adc
jge
mov
pop
add
jmp
loop
lods
dec
push
les
dec
jb
das
call
cltd
movsl
cwtl
push
and
out
mov
jge
in
sub
das
sti
cmp
sbb
flds
lcall
mov
lea
fidivrl
cmp
push
sbb
test
dec
and
daa
inc
add
ja
cmp
popf
jo
mov
in
cmp
inc
int3
clc
mov
xchg
rol
xlat
imul
icebp
inc
fbld
and
pop
aad
jmp
ss
xchg
pop
adc
clc
mov
hlt
and
popa
or
fisubrl
lcall
mov
mov
rclb
adc
fildll
popaw
pop
dec
push
roll
in
lret
je
jle
cwtl
lret
scas
xchg
test
out
add
xor
rol
arpl
aas
inc
mov
fdivs
cmp
mov
pop
sbbb
dec
xor
arpl
xor
mul
mov
loope
in
enter
mov
insb
out
jns
pop
dec
jno
jge
add
ret
mov
ja
jmp
push
popf
aas
cmp
sbb
ficomps
dec
in
jne
in
jle
arpl
dec
scas
addb
push
insb
frstor
cmp
add
js
pop
js
cmc
inc
in
mov
mov
pushf
mov
jmp
repnz
outsb
mov
push
cwtl
jne
imul
xchg
fwait
out
inc
movsl
mov
cmp
adc
movsl
aas
in
xchg
mov
hlt
mov
push
ss
out
or
mov
xlat
es
mov
arpl
sar
xor
outsl
mov
mov
push
xor
xchg
push
dec
lods
stc
scas
lret
in
clc
xchg
lret
das
cmc
icebp
xlat
ret
xchg
shlb
mull
popf
mov
jg
nop
int
push
sbb
lcall
repnz
cmp
test
adc
xchg
rcr
js
sbb
pop
addl
cmpsb
push
dec
outsb
lea
das
adc
cmpb
xor
sbb
and
or
ljmp
cmp
or
cltd
adc
add
mov
cwtl
sbb
sbb
or
popa
dec
mov
test
out
jl
jne
xor
fwait
andl
xor
out
ret
int3
popf
or
dec
sbb
faddl
roll
jg
dec
mov
mov
mov
stos
sbb
popf
lcall
nop
add
mov
xor
std
test
insl
andb
hlt
shl
shl
rorb
popa
dec
mov
sub
sbb
insb
xchg
insl
shll
mov
mov
jnp
fstl
push
fmuls
aam
cmpsb
cli
out
jl
je
les
ljmp
dec
add
xchg
mov
test
fcomi
jae
pop
add
mov
cltd
scas
pop
mov
mov
cmp
xchg
aam
stos
cs
mov
out
pop
mov
xchg
sub
leave
mov
call
sbb
xlat
aad
daa
addr16
fldcw
cltd
jno
mov
fbstp
lods
xchg
xor
into
test
jo
stc
add
jnp
xor
enter
xchg
jp
adc
shl
jecxz
fsubrl
xor
ret
jmp
mov
cmpl
mov
test
out
mov
orb
stc
jne
dec
pop
sbb
pop
scas
icebp
push
es
sbb
sub
dec
jnp
cmp
sub
mov
adc
cwtl
and
ds
popf
stos
add
sbb
pop
fistpl
cmc
test
jbe
pop
icebp
jecxz
xchg
cmp
test
add
lret
pusha
scas
mov
lret
rolb
jne
dec
cwtl
ds
sarb
and
add
out
scas
enter
pop
lret
mov
dec
outsb
push
inc
xchg
mov
cs
mov
stos
pop
fnstcw
jb
int3
pop
add
mov
push
mov
xchg
icebp
mov
lock
xchg
lcall
loope
or
push
fidivl
and
push
mov
pushf
sub
pusha
jo
jle
sbb
fwait
hlt
pop
and
push
loopne
dec
mov
fsubrl
fmuls
js
aad
mov
imul
inc
mov
push
pop
notb
mov
mov
jmp
shl
mov
gs
js
and
push
sub
imul
mov
and
je
jge
lods
andl
sbb
sbb
ja
addb
in
push
mov
jnp
addr16
mov
adc
cmpsb
add
add
adc
or
lret
mov
test
into
fidivrl
xchg
xlat
mov
mov
mov
sub
xchg
pop
xor
jp
mov
dec
mov
mov
mov
out
or
mov
hlt
lret
add
and
and
sti
addr16
into
aaa
jecxz
add
imul
sbb
inc
jp
andl
push
mov
and
inc
xchg
jb
std
mov
insl
mov
cwtl
xchg
mov
mov
rorb
sahf
pushf
dec
loopne
dec
or
arpl
popa
shrl
int
lahf
cld
xchg
mov
pushf
jl
repz
sbb
inc
jae,pn
xor
ret
popf
dec
enter
imul
pop
xchg
and
ja
adc
cmp
add
cmc
dec
test
dec
inc
fsts
pusha
pop
insl
popf
lcall
cmpsl
imul
pop
test
test
mov
lock
lahf
out
sub
jnp
addr16
push
or
aad
insl
jbe
jp
sub
cmp
fdivs
pop
sahf
lret
cmpsl
insl
cwtl
rcl
add
add
cmpsl
push
push
sbb
cmc
mov
xor
shll
movl
nop
jns
mov
or
mov
loope
test
xor
enter
mov
mov
push
add
and
cmpsl
daa
and
outsb
adc
mov
mov
sub
mov
cmp
cmp
lock
mov
shrb
jno
pop
push
fadds
adc
pop
jmp
dec
jmp
mov
adc
insb
xchg
rorl
push
adc
insl
shl
pop
sub
fnstcw
push
pushl
sbb
fnstsw
mov
cmp
inc
fcmovnu
push
sahf
icebp
mov
add
and
mov
mov
fiadds
mov
fwait
test
mov
mov
dec
mov
fadds
aam
jle
mov
lock
sub
push
jno
stos
and
scas
xor
cmp
jo
repnz
sbb
sub
adc
stc
lods
jno
pop
rcr
adc
fnop
int3
sbb
aas
push
jp
mov
xor
and
std
pop
add
mov
cld
xchg
lock
call
push
cli
sub
std
sbb
mov
add
mov
push
cmp
or
mov
cmp
push
hlt
xchg
mov
daa
pop
cmp
sub
xchg
push
je
mov
mov
mov
fstl
pop
xchg
je
shufps
out
adc
pop
push
out
or
jp
fs
xchg
in
rclb
jno
cmpsl
ja
sti
jne
scas
mov
sub
xchg
imul
push
lods
adc
cwtl
dec
and
push
repz
in
mov
mov
les
scas
mov
jg
cmc
hlt
dec
add
mov
mov
adcb
xor
and
in
mov
sub
sub
sbb
cmp
popf
mov
sbb
int3
sub
push
mov
out
push
ret
inc
fimull
leave
ljmp
mov
mov
adc
fcompl
lcall
lret
adc
fcmove
sbb
jp
je
xor
cmp
les
adc
sbb
in
sbb
inc
lods
cmp
mov
cld
in
aam
leave
mov
mov
jp
sbbl
stc
and
outsl
adc
add
mov
js
xor
mov
push
push
ret
inc
xchg
scas
and
hlt
mov
dec
cli
hlt
mov
xchg
scas
inc
mov
aam
mov
in
out
je
push
inc
push
mov
shlb
cmp
cmp
inc
and
push
pop
adc
out
mov
dec
or
inc
jge
jecxz
add
push
cmovo
adc
loopne
lds
dec
push
mov
and
fadd
push
sbb
repz
xchg
sub
xchg
push
sub
push
test
inc
adc
push
add
push
xchg
sub
aaa
add
push
icebp
lock
repnz
rorb
mov
movsb
popf
fsubl
arpl
fs
loope
andb
xchg
inc
xchg
movsb
lret
in
inc
ds
sbb
subl
jg
in
in
push
cs
mov
push
stc
subb
adc
mov
shrl
aam
shl
insb
push
push
jle
bound
push
sbb
jge
jecxz
sbb
sbb
xchg
dec
push
adc
jg
sub
cmp
sti
arpl
sbb
mov
shrb
scas
mov
enter
sbb
lret
fcoms
movsb
inc
push
mov
xchg
dec
out
lods
imul
jbe
pusha
loopne
jg
leave
and
xor
dec
or
pop
repz
outsl
push
popl
or
bswap
lret
push
fistpll
std
sub
add
sub
and
inc
scas
stc
pop
lcall
mov
outsb
xchg
std
mov
rorl
push
addr16
ror
cltd
pop
das
and
pop
xor
or
push
mov
add
sbb
int3
cmp
fmull
and
out
xor
or
jno
mov
sub
movsb
mov
pop
jg
lods
aam
mov
push
cmp
or
aaa
movsb
movsb
push
loopne
cwtl
notb
mov
and
mov
mov
imul
push
les
pop
adc
stc
pop
cmp
fiadds
sahf
faddl
inc
or
clc
fcmove
inc
and
fdivs
enter
mov
adc
jb
mov
jae
cmp
in
or
mov
fs
sahf
ficoml
dec
jecxz
push
inc
mov
outsb
das
xchg
sub
popf
mov
ror
cmp
cs
or
push
pop
pop
mov
jmp
adc
cmp
movsb
test
arpl
xor
fiadds
fwait
push
leave
inc
jne
clc
nop
mov
outsb
jno
jbe
xor
fs
xor
lock
adc
inc
rclb
lods
fisttpl
dec
adc
or
jae
stos
lods
outsl
decb
push
aas
mov
cmp
stc
xor
int3
cmp
xor
add
test
ja
ds
aaa
jecxz
aas
xor
push
clc
or
jl
xor
movsb
arpl
mov
into
mov
scas
or
mov
ds
xlat
leave
xchg
sti
shrb
lret
das
adc
sti
movsl
and
clc
jmp
scas
test
adc
in
repz
and
fwait
add
into
mov
or
loop
imul
dec
push
dec
xor
adc
mov
lods
into
push
test
pop
loope
push
bound
mov
mov
fwait
dec
jae
mov
mov
adc
xor
cmp
pushf
sbb
neg
lcall
lcall
vmovaps
adc
std
divl
in
cs
enter
add
mov
lods
and
pop
sti
dec
adc
jmp
insl
ret
xchg
xor
repnz
mov
pop
lret
mov
dec
call
mov
xchg
repz
mov
and
jge
movsb
out
faddl
addr16
enter
adc
push
jb
gs
fmulp
xchg
aaa
fld
aas
sbb
lret
jns
adc
frstor
in
insl
aam
test
xchg
mov
inc
jmp
enter
pusha
jle
pop
mov
lods
cmp
xor
cmpsl
jbe
mov
mov
cmp
inc
xchg
or
and
hlt
lahf
clc
fdiv
xor
jae
xchg
cwtl
pop
call
test
adc
cld
test
dec
insl
xchg
insl
shl
cmp
xor
pusha
out
mov
testl
push
and
aas
repnz
sarl
or
inc
and
pop
inc
pushf
jo
xor
jns
jne
jae
push
push
push
cwtl
jp
roll
push
or
pop
push
test
or
mov
inc
out
pop
popf
fadd
sbb
mov
dec
xchg
lods
sbb
orb
mov
lods
inc
pop
clc
mulb
xchg
or
add
cmp
mov
add
mov
popf
push
sbb
fidivs
xor
adc
aam
sbb
icebp
arpl
mov
icebp
mov
xchg
faddp
shlb
and
dec
pop
arpl
inc
or
loopne
les
out
sbb
jbe
enter
push
cmp
push
adc
jle
loop
pop
and
jg
cli
adc
out
insb
andl
fstl
jge
mov
mov
test
cwtl
lea
dec
xchg
sbb
cltd
fdivrs
add
dec
push
pop
in
mov
insb
jo
jmp
stos
inc
cwtl
adc
les
xchg
jmp
inc
mov
ja
jge
icebp
in
out
js
fisubrs
jge
lcall
sahf
jmp
dec
xor
xor
cli
and
cli
or
int3
hlt
cmpsb
add
push
test
sub
rorl
and
xor
dec
sub
and
dec
push
inc
iret
xor
test
fldlg2
push
jge
jmp
test
and
mov
and
call
daa
push
xchg
in
xor
cmp
into
sbb
out
push
xor
dec
sbb
popa
shr
lds
std
lea
mov
mov
push
xchg
adc
pop
push
cmp
les
xorl
jns
mov
mov
pusha
sbb
mov
add
rcl
xchg
mov
sub
js
enter
cs
xlat
sub
inc
cmp
stos
out
cmpsb
ret
or
outsl
cmp
mov
shlb
jbe
icebp
aam
xor
and
jns
es
outsb
and
loope
aaa
out
loopne
imul
jb
daa
push
out
pop
cmp
xchg
popf
jno
sub
pop
dec
std
push
push
fsubr
das
mov
ret
cmc
jmp
das
cltd
in
mov
cwtl
pop
repnz
jecxz
push
sbb
aas
add
pop
dec
sar
add
push
cmp
hlt
push
inc
cmp
movsb
and
and
jl
rcrb
insb
mov
dec
cmp
jo
ljmp
in
pop
icebp
nop
inc
mov
mov
add
inc
pop
into
jne
mov
cmp
and
xchg
jae
mov
repz
mov
and
add
into
shll
ljmp
inc
sub
fdivrs
gs
mov
nop
mov
icebp
iret
dec
xchg
fsubrs
loopne
jb
loop
loope
cs
mov
lods
fs
fidivrl
out
leave
out
inc
mov
mov
sub
dec
push
fiaddl
ja
ret
pop
call
out
rorb
and
js
jne
fidivrs
mov
cmp
push
push
notb
push
in
and
xchg
aaa
ja
mov
das
jmp
mov
jns
inc
mov
es
xchg
push
xor
mov
cs
cmp
pop
dec
jae
mov
sbb
lahf
jp
clc
mov
jge
and
fildl
cmc
repz
jle
std
fistpl
xor
xchg
addb
dec
mov
loope
imul
dec
into
mov
lret
dec
and
push
inc
dec
and
call
or
xchg
ret
cwtl
mov
icebp
xchg
adc
cmp
push
mov
lcall
add
aam
roll
clc
jmp
movsl
xor
mov
into
stc
aad
fcomp
imul
lretw
in
adc
popa
jnp
mov
or
sub
push
shlb
movsl
lods
inc
in
jb
inc
rolb
imul
mov
enter
push
aad
xor
xor
lahf
pop
int3
andl
cli
jns
fcomps
lods
sub
cmp
insb
sbb
iret
ss
leave
aad
aas
mov
and
faddp
jae
mov
mov
mov
fists
imul
dec
cli
mov
fimull
and
das
lds
out
push
push
cli
in
pop
je
int3
scas
lock
inc
mov
leave
xchg
aam
sbb
sbb
cltd
push
lods
mov
std
cmpsb
xor
add
movsl
dec
cmc
push
aas
pop
or
in
jno
add
js
popa
std
fs
lods
mov
addr16
fistpll
addr16
ror
jmp
add
cmp
sub
mov
mov
leave
lods
or
aad
and
xchg
repnz
push
hlt
je
push
rolb
loopne
xchg
cmp
inc
jmp
sbb
icebp
pusha
adc
test
cmc
das
push
fstl
shll
mov
inc
das
call
mov
push
movsl
mov
loopne
and
insl
cmp
jo
daa
cmp
adc
loopne
int3
loop
pop
inc
fsubl
xor
nop
adc
gs
fnstsw
xchg
test
mov
lcall
sbb
pop
adc
push
aaa
std
jle
and
mov
jge
pusha
lea
xor
lods
insb
xor
int3
popf
scas
mov
adc
or
scas
adc
sahf
and
cltd
push
inc
pop
sets
lahf
addr16
cmpsl
into
popf
jo
push
sub
mov
jecxz
pop
in
int
div
pop
in
lea
mov
sbb
lds
pusha
mov
idivb
inc
mov
mov
out
push
in
jp
inc
or
push
xchg
sbb
test
sarl
mov
inc
rclb
jmp
mov
icebp
jbe
inc
push
popf
push
pop
stc
out
dec
pop
jg
pop
add
and
in
mov
cmp
hlt
sarl
jecxz
lret
dec
cs
cmp
inc
cld
jb
sbb
out
xor
jp
repz
add
cmp
mov
pop
push
sahf
cmpsb
xchg
mov
pop
mov
inc
and
push
lock
leave
xchg
sbb
lcall
pushf
outsl
dec
jns
fldenv
mov
scas
cli
mov
xor
dec
bsf
clc
call
in
xor
daa
xchg
cmp
mov
mov
cld
ds
dec
ljmp
jecxz
test
iret
negb
cmp
movsb
or
test
and
push
int
imul
jmp
jle
scas
jmp
das
outsl
movsb
sub
nop
fcomi
inc
imul
cmpsb
sub
int
xor
lds
pop
add
test
jp
xchg
clc
cld
pushf
arpl
cmpsl
cmp
mov
pop
mov
adc
xlat
leave
xor
xlat
push
jp
imul
or
cs
mov
testb
mov
das
push
xchg
xor
mov
in
jae
mov
clc
mov
cmp
fsubrl
leave
hlt
lret
movsl
mov
and
and
cmp
shl
fdiv
jl
bswap
clc
xchg
in
jp
xchg
cmp
xor
or
popf
ljmp
lds
mov
sbb
push
mov
cld
cltd
pop
rclb
cmpsb
movsl
hlt
inc
adc
lret
lods
mov
xor
sbb
mov
sub
dec
sahf
xchg
push
or
lods
mov
in
cmp
ds
mov
or
stos
or
sbb
sarl
in
test
pop
pop
ret
pop
lahf
mov
xor
jnp,pt
xchg
xchg
mov
call
sub
stc
ss
sub
fidivl
or
mov
call
jmp
or
in
dec
xchg
lods
cld
fistps
ds
repnz
inc
mov
js
fs
push
call
or
lock
movsl
pop
mov
aam
jo
dec
lods
xor
std
aam
scas
dec
mov
pop
scas
fsubrp
mov
lods
xchg
fnstenv
jecxz
cli
xchg
rcrb
mov
pop
dec
pushf
add
and
repz
xchg
lcall
cld
rcl
jl
nop
jmp
push
inc
push
stos
int
or
fsts
pop
cmp
test
push
pushf
stos
adc
mov
mov
push
scas
push
add
movsb
adc
and
pop
jmp
test
test
imul
add
fdivrs
push
adc
jecxz
loope
and
repz
sbb
jae
sbb
inc
loopne
outsb
adc
stc
in
pop
inc
mov
mov
pop
jmp
ss
lods
lahf
xor
push
ljmp
adc
lock
ss
push
pop
inc
pop
ss
sub
sub
sub
enter
and
lods
loope
ja
mov
lea
lock
jmp
fs
out
dec
xor
sub
subb
adc
loopne
mov
or
js
mov
into
inc
and
icebp
xlat
ret
pop
push
shl
fisubrs
cmp
add
cmp
push
rorl
stc
dec
popl
dec
jne
dec
ficompl
cmp
lahf
xlat
push
or
es
js
test
xchg
sar
repz
aad
mov
ds
xchg
inc
fcmovb
repz
mov
sub
imul
cmpsl
push
lret
xchg
ljmp
adc
movsl
push
xor
jecxz
or
fdivrl
jns
add
push
scas
pop
cmpsl
repz
mov
sub
dec
cmc
xlat
cmc
push
mov
dec
xchg
sub
add
sub
in
inc
sbb
cld
xchg
jl
dec
mov
xchg
cltd
push
pop
shlb
rclb
inc
mov
and
repz
pop
fwait
pushf
cmp
mov
ds
push
add
pop
adc
mov
cmp
jno
mov
sub
xchg
mov
lahf
out
cmp
pop
xor
scas
and
xchg
mov
outsl
rcll
adc
loopne
insl
mov
and
cmp
outsl
daa
arpl
cmp
movl
cmp
loop
hlt
xlat
or
push
leave
jle
mov
push
test
sub
ret
fstpt
arpl
mov
add
push
std
mov
mov
xchg
push
insb
pop
sbb
xor
or
xchg
sub
or
jo
mov
jne
inc
inc
and
sbb
hlt
or
xchg
xor
push
xlat
shrl
pop
movsl
push
dec
imul
xchg
xchg
mov
hlt
mov
jns
pop
cld
jmp
ror
cltd
cmp
add
add
and
loop
or
rcrb
ja
cmp
push
jecxz
daa
ffree
insl
dec
mov
xor
sub
pop
or
jb
mov
roll
cmp
hlt
filds
cs
mov
and
hlt
push
andb
pop
push
mov
cmp
aad
pop
out
shl
clc
addr16
jg
iret
and
stos
stos
in
mov
fbld
fs
add
icebp
pop
mov
repz
pop
ss
arpl
mov
jecxz
push
dec
jge
out
jmp
cmp
popa
es
mov
jge
in
lret
aad
enter
xchg
stos
pop
xor
jmp
ficoms
mov
inc
jg
cwtl
test
enter
push
leave
xchg
cmp
jp
lds
push
loopne
mov
pop
xchg
and
je
jmp
insl
pop
cmpsl
mov
sbb
sbb
inc
out
inc
push
sahf
scas
adc
and
adc
fimuls
adc
xchg
xchg
ret
dec
daa
add
test
scas
push
and
lods
test
jb
ja
outsb
lods
rcl
hlt
cmp
testb
and
rorb
cmp
adc
cmpsl
adc
xor
jmp
inc
sbb
popa
popf
add
sbb
cwtl
cld
inc
loope
pop
shlb
mov
push
pop
mov
jmp
popf
insb
cs
mov
sub
movsb
mov
xor
mov
inc
mov
popf
pushf
mov
loopne
test
aas
cmc
sub
into
int
push
xor
sbb
or
std
call
lret
xchg
mov
mov
mov
sub
mov
or
mov
dec
or
cmpsl
sbb
les
aam
mov
fidivl
jnp
mov
insl
mov
and
lock
into
jae
mov
icebp
outsb
ja
lret
jge
popf
dec
std
or
jmp
les
or
adc
pop
jmp
stos
xchg
popa
jmp
and
in
cs
dec
lods
sub
and
fcmovbe
loope
popa
inc
mov
adc
test
xchg
push
outsb
arpl
sbb
sbb
enter
cmp
ja
xorb
jno
stos
lock
movsl
in
jle
push
es
inc
in
or
dec
inc
clc
imul
dec
add
sbb
daa
scas
sbb
or
in
add
xchg
sbb
push
pop
jecxz
inc
mov
cmp
sbb
jne
popa
push
xchg
lea
and
daa
sub
or
loop
in
decb
pop
in
jmp
cmc
lcall
and
push
jmp
push
add
subb
and
nop
or
adcb
es
sub
pop
sbb
jl
or
leave
xchg
cmp
test
and
mov
cwtl
inc
adc
cmp
adc
fsts
cltd
mov
lea
dec
or
mov
arpl
or
outsb
mov
arpl
xorl
push
adc
cmp
dec
inc
call
cmc
inc
lods
inc
pusha
bnd
mov
jns
jecxz
pop
addr16
sub
loop
inc
clc
leave
iret
in
pop
mov
mov
or
shl
les
out
xchg
and
cmp
pushf
pop
sub
test
push
sub
fstpt
aam
adc
hlt
inc
shlb
into
cli
loopne
mov
jle
loopne
dec
sub
and
adc
push
negl
mov
lea
mov
mov
stc
loop
inc
hlt
test
pop
test
adcl
cmpsb
lods
aam
fsubrl
xor
inc
shlb
add
and
sbb
mov
ja
test
jp
pop
in
mov
pop
aaa
mov
hlt
loope
or
and
ljmp
addr16
sub
imul
arpl
lods
dec
pop
call
call
add
add
subl
and
enter
lds
outsb
add
orl
fcompl
icebp
imul
mov
add
jae
out
and
xchg
callw
int3
jno
not
roll
mov
xorb
lods
push
rcrb
rcrb
mov
outsb
out
popf
mov
mov
addb
push
fists
add
pop
mov
popf
mov
inc
lods
movsl
cmp
ljmp
push
nop
xchg
cmp
dec
pop
xorb
jns
xchg
ficomps
push
bound
adc
xor
out
lods
jmp
dec
insl
jle
repz
cmp
lds
push
incl
pop
mov
and
xor
cwtl
sahf
inc
imul
xchg
jbe
jecxz
adc
dec
add
aam
xchg
lods
xor
insb
popa
idivl
xchg
dec
sub
popa
je
adcl
inc
push
loopne
nop
in
in
adc
jae
add
jnp
iret
sub
test
cmc
sub
sub
lret
or
mov
aam
inc
incl
mov
out
imul
adc
std
dec
das
mov
hlt
jp
rorb
frstor
fscale
dec
fidivl
fucomip
add
sbb
cli
mov
mov
pop
inc
sub
sub
ds
adc
into
sbb
push
inc
rcll
bound
xchg
lods
cld
cmp
sub
mov
shl
nop
jecxz
pop
and
shrb
push
dec
mov
dec
add
sub
pop
push
mov
mov
dec
out
jecxz
add
subb
add
imul
adc
icebp
mov
jo
mov
mov
sub
ja
push
cmp
sub
adc
mov
mov
or
push
outsb
xor
pop
push
pop
xor
hlt
movsl
outsl
xor
lcall
adc
pushfw
daa
out
mov
scas
dec
sub
daa
movsb
aaa
mov
out
je
mov
lods
gs
cli
xchg
test
jns,pn
xor
mov
sub
es
ret
out
push
idiv
outsl
inc
dec
shll
test
nop
int
or
pushf
adc
or
sub
cmpsl
xchg
xchg
or
mov
hlt
shl
fs
and
mov
repz
pop
ss
jmp
pop
les
mov
fsqrt
loope
sub
cmp
xchg
mov
push
push
jp
add
push
and
pop
lret
jl
stos
loopne
andb
push
ret
mov
jb
jl
mov
xchg
push
rclb
sbb
jno
xchg
mov
xor
xorl
subl
sbb
imul
das
lea
in
loop
int3
int3
mov
add
adc
fcomi
inc
add
mov
jmp
leave
cwtl
inc
cli
fldt
scas
popa
jnp
fcomps
cmp
mov
jno
cs
xchg
add
adc
cmp
pop
sbb
xor
jge
cmp
cmpsl
ja
push
and
rclb
xor
push
jae
hlt
xor
sub
cld
scas
leave
ficompl
out
mov
mov
push
imul
lock
iret
ret
test
loope
dec
repnz
jbe
rclb
inc
lahf
bound
lock
and
repz
sbb
cmp
ljmp
add
sbb
adc
lahf
inc
jns
out
sub
test
mov
xchg
xchg
cmp
xchg
or
mov
dec
movsl
add
loopne
aas
cmp
cmp
cwtl
cmpsl
xchg
rclb
sahf
je
and
lods
inc
insb
inc
addr16
in
push
inc
pushf
fsubrl
in
cmp
aaa
inc
jno
or
fiadds
sti
stos
iret
inc
out
fwait
xchg
pop
push
mov
fadds
and
pop
xchg
or
cmp
or
int3
scas
ljmp
jo
int3
add
test
rcrb
mov
pop
xor
inc
add
mov
sbb
mov
lds
xor
xchg
aaa
push
xlat
mov
in
or
arpl
lods
daa
xor
scas
roll
and
aas
je
loopne
enter
out
xlat
gs
jl
sbb
andb
cmc
ffree
repnz
js
stos
xchg
adc
sbb
xor
sti
pop
sbb
cld
daa
pop
push
lret
aam
or
mov
icebp
sbb
adc
mov
push
adc
inc
js
and
sbb
icebp
and
pop
jp
stc
pop
mov
sbb
push
push
or
cmpsl
add
fstps
sbb
cltd
icebp
or
dec
xchg
dec
cmc
int
pop
nop
mov
sub
xchg
imul
mov
adc
pushl
mov
jbe
lret
dec
mov
dec
push
sbb
out
test
in
fs
xor
mov
movsb
mov
xchg
ss
lock
or
sbb
pop
mov
call
cmp
into
fwait
mov
xchg
mov
mov
cmpsb
mov
and
dec
ret
sahf
xor
cmp
test
sbb
mov
cmp
jo
sbb
outsl
stc
fdivr
sbb
xor
shl
arpl
test
fcompl
test
decb
sub
daa
cmc
sub
movsb
or
cmp
add
pop
std
scas
in
cmpsl
test
dec
jge
jae
scas
ret
mov
mov
int3
xchg
fsts
loope
cli
pop
std
nop
mov
dec
lea
mov
xchg
sbb
insl
jne
pusha
mov
push
aad
pop
stos
adc
mov
into
mov
incb
xlat
cld
fnstcw
pusha
xchg
lahf
mov
cmp
push
pushf
jnp
dec
sbb
xchg
shll
filds
ret
stos
adc
sub
adcb
xchg
mov
test
add
xchg
lock
inc
xor
in
shlb
jae
insl
xchg
loop
jmp
stos
loopew
lods
xor
sbb
jo
push
sbb
dec
hlt
out
arpl
or
lock
inc
mov
mov
mov
dec
test
inc
fstpl
cmpsl
andl
cmp
js
push
lret
aas
negb
push
xchg
jecxz
inc
test
xor
iret
push
scas
roll
inc
shlb
jle
adc
jmp
xor
hlt
out
xorl
test
ds
xchg
pop
push
or
dec
inc
jmp
xlat
or
sbb
push
std
test
ljmp
pop
roll
xchg
repnz
movsl
popa
sbb
xchg
jo
addr16
cmp
insl
shrl
lret
mov
or
idivb
lods
fiaddl
pop
outsl
or
inc
mov
mov
xorb
in
out
nop
dec
lock
ljmp
push
and
jbe
cmp
jno
jg
cmp
ljmp
mov
cmc
mov
dec
lods
rorl
xor
jle
sbb
daa
ret
sahf
push
adc
cltd
mov
push
iret
test
clc
ja
pop
fsubr
lds
dec
jae
fisubrs
icebp
pop
inc
push
les
std
in
mov
push
aam
jmp
add
fisttpl
pushl
cs
aaa
sbb
fmul
mov
int
add
roll
inc
outsb
fnstenv
inc
lret
add
cmpl
int3
mov
mov
jne
mov
test
push
sub
mov
jmp
leave
xor
pushf
mov
cmp
js
mov
push
and
shlb
sub
adc
daa
test
push
xchg
iret
mov
cs
xor
mov
scas
add
sbb
push
scas
je
inc
rcr
dec
push
mov
stc
mov
sbb
cmc
sbb
mov
ret
jne
cmovbe
add
mov
jge
mov
movsl
cmp
or
pop
fists
push
sahf
cwtl
inc
lret
xlat
push
insl
sub
jmp
mov
dec
out
push
inc
mov
movsl
sarl
xchg
daa
mov
popf
add
rcl
loopne
repz
stos
inc
xchg
sub
inc
lock
movsl
push
loope
arpl
orl
cmpl
sbb
sub
or
pop
xlat
fimull
inc
fsubr
shll
jae
jne
adc
or
sub
push
adc
sub
pop
leave
xorl
sbb
test
adc
jnp
push
loopne
scas
push
mov
inc
andb
sbb
inc
jbe
push
mov
es
xor
and
out
add
test
mov
shrb
ret
gs
sbb
js
xchg
pop
les
or
data16
movsl
lcall
iret
cmp
lods
sbb
add
xchg
xorl
cmp
call
fwait
jbe
add
mov
inc
cmp
xchg
gs
ja
sub
das
push
xor
mov
xor
outsb
and
mov
adc
jecxz
aad
cmp
lods
adc
push
adc
mov
pop
mov
roll
adc
lock
sti
mov
sub
in
cmp
popf
sub
dec
push
push
adc
aas
rcrb
repnz
fs
rorb
xor
mov
or
xor
fldcw
pop
xlat
push
hlt
enter
loop
lea
mov
mov
je
loope
mov
gs
or
hlt
xor
icebp
lock
adcb
fimuls
add
add
sbb
shlb
in
mov
push
push
push
sbb
fs
clc
shrl
mov
imul
ljmp
cmp
popf
je
in
adc
cltd
dec
cmp
dec
inc
cltd
cmp
arpl
mov
dec
out
push
mov
cmp
jno
push
into
int3
loope
and
adc
aaa
dec
dec
sbb
dec
movq
ja
xor
shrb
movsl
inc
pusha
dec
stos
dec
mov
popa
cmp
dec
je
gs
jae
movsb
push
and
and
sahf
pop
inc
call
and
dec
jb
mov
gs
push
jl
cmp
cltd
out
xchg
mov
mov
xchg
sub
and
mov
dec
bound
inc
sbb
lret
xor
sub
ret
jne
daa
jecxz
jl
mov
fistps
mov
cli
test
stc
push
rolb
stc
loope
xchg
cmp
push
jmp
insb
aam
xchg
sub
adc
fwait
jne
add
bnd
out
in
stos
inc
and
lods
scas
fisubrs
sbb
mov
sahf
ret
inc
inc
jns
xchg
mov
sbb
enter
call
data16
test
sbb
mov
cld
lods
mov
lods
push
fchs
or
ret
ss
stc
sbb
or
stc
xchg
call
stc
mov
mov
pop
or
lret
adc
xchg
cmp
pop
fcomps
nop
jmp
or
sub
adc
sti
movd
rcrl
add
int
test
xchg
aam
loope
pop
gs
into
inc
test
lahf
popf
mov
inc
cltd
push
icebp
push
jnp
test
in
sub
mov
scas
inc
ljmp
xchg
cmp
cmpl
mov
or
hlt
lea
das
leave
mov
jp
mov
test
mov
sub
loop
or
sbb
ret
push
sti
push
movl
push
push
or
jnp
dec
fistpll
fstps
lods
cmc
insl
pop
mov
cmp
repz
push
and
jmp
push
cmp
jo
lcall
lcall
xor
jg
sub
inc
fdivl
lds
inc
xchg
outsb
jne
psrld
sahf
stos
into
mov
or
adc
stos
repz
and
popf
cli
and
push
test
sbb
arpl
hlt
das
sbb
testl
dec
adc
mov
outsl
fistl
pop
pop
fs
sbb
ljmp
ficompl
dec
sbbl
sub
or
in
in
ret
push
add
rorl
popf
dec
sbb
popa
aam
test
add
arpl
push
ret
push
pop
icebp
xchg
push
pop
dec
ret
cwtl
pusha
shll
pop
xorb
idivb
movsl
fwait
jge
adc
insl
jle
sub
push
mov
outsl
sub
loop
xor
or
xor
lcall
or
xor
loop
jge
rclb
xchg
pop
shll
sbb
and
sub
repnz
pop
mov
dec
sbb
sbb
cmp
cmp
adc
and
insl
xchg
xchg
xorl
nop
bound
jg
sbbb
jmp
jge
enter
pop
add
cmp
xchg
outsl
sbb
test
subb
add
in
cli
insl
cmpsb
push
pop
aad
and
mov
lret
test
aam
imul
sbb
push
std
xlat
mov
sub
sahf
and
sbb
jge
push
dec
add
mov
jge
and
mov
popa
cli
lds
jno
mov
add
in
inc
sbb
out
xor
rorl
push
sub
jb
lahf
mov
outsl
xchg
enter
das
adc
addb
sub
test
les
lret
xchg
repz
int3
add
pushf
aaa
popf
cmpsl
pop
ror
pop
icebp
dec
xchg
data16
ja
pusha
pop
xchg
mov
mov
add
add
in
stc
out
push
mov
xorl
cmp
cmpl
sub
push
mov
bound
xchg
mov
mov
dec
mov
out
push
xor
repnz
mov
xchg
mov
mov
mov
jg
dec
lea
in
jnp
inc
inc
add
fldenv
inc
testb
jnp
loopne
stos
movsb
add
inc
jge
loop
jge
outsb
and
dec
or
jnp
sahf
dec
adc
xchg
jmp
jl
pop
aad
std
sarl
lret
bound
out
jns
cmp
decb
hlt
cmpsl
aas
sub
cmpsl
sub
ja
xchg
lods
subl
add
sahf
stc
insl
mov
mov
pop
cmp
adc
mov
dec
mov
mov
jno
cwtl
jmp
mov
cmp
dec
shlb
pop
rcll
mov
in
test
inc
popa
sub
out
jns
stos
cld
ret
out
mov
cs
les
lods
jnp
mov
sbb
pop
test
stc
in
pop
sbb
cltd
sub
push
inc
lret
jbe
sub
fstp
and
jle
testl
mov
cmp
fs
stos
repnz
mov
iret
jmp
cli
jle
pushf
mov
daa
or
sub
mov
pop
mov
aas
dec
mov
aad
lds
sahf
loopne
sub
scas
je
popf
leave
sbbl
push
push
dec
or
cmp
push
pushf
dec
nop
out
mov
cmc
push
jmp
mov
push
sub
mov
mov
cmpl
repnz
mov
fcom
out
shlb
push
adc
rcrb
cwtl
xchg
cmpsl
sbb
push
dec
pop
cmp
mov
lock
dec
mov
xor
mov
movsl
xchg
mov
cs
dec
aas
cmc
shlb
xchg
and
mov
jns
pop
sahf
push
loopne
xchg
je
in
cmp
inc
aas
leave
pop
push
xor
jnp
sub
icebp
push
lods
popa
add
jmp
mov
jb
fmuls
in
mov
test
xor
jns
popf
cmpsb
adc
sub
xchg
sub
hlt
sti
jne
xchg
out
orb
scas
pushf
icebp
sarl
ds
sub
push
or
out
rol
jmp
jo
cmp
mov
test
pusha
push
pop
mov
jmp
lods
lods
in
clc
sbb
nop
xor
stos
lds
int3
jae
in
pop
mov
arpl
int3
xor
push
cli
pop
movsb
inc
arpl
ljmp
xor
sbb
xchg
repz
scas
jle
and
jmp
enter
jne
or
std
cmp
enter
adc
add
mov
aam
je
insb
in
scas
sbb
lds
cmp
ljmp
and
ja
sbb
cmc
in
popf
xor
xor
aam
ss
xor
push
outsb
push
and
inc
mov
aaa
lds
xchg
jbe
xor
loop
xchg
sahf
aaa
push
pop
dec
cmp
mull
xor
outsb
nop
in
je
xor
loope
imul
aaa
or
in
xchg
outsb
lea
insb
mov
jns,pn
or
lea
dec
cmpsl
lock
outsl
adc
sbb
push
decl
pop
inc
or
lret
xor
jmp
int3
xchg
push
adc
shrb
mov
sub
stc
ret
addr16
int3
int3
iret
test
scas
mov
sbb
and
mov
sbb
mov
dec
shr
loop
jns
sub
rorb
mov
pop
xor
out
mov
rorl
jno
jmp
pop
lcall
fnstenv
jnp
add
orl
mov
mov
inc
xchg
jmp
cwtl
fsubrp
incl
pop
push
cmp
jecxz
add
in
adc
mulb
xor
pop
es
scas
mov
scas
iret
xor
lea
push
pushf
ss
mov
jo
xor
test
pop
pop
pop
mov
decb
sbb
dec
in
mov
out
pusha
adc
xor
jnp
inc
gs
xlat
aad
sahf
test
jle
pop
mov
or
mov
pusha
pop
arpl
jle
xchg
push
and
mov
sbb
dec
add
cmc
jb
jnp
inc
sahf
sub
inc
add
stos
xchg
ds
mov
ljmp
xchg
mov
inc
sub
pop
leave
push
testl
push
sub
in
data16
mov
push
jb
mov
das
pushf
rorl
fsubrl
cmp
test
stos
cmp
nop
push
inc
and
jns
enter
ljmp
adc
pop
test
mov
dec
cmp
dec
cwtl
out
and
dec
pop
adc
sbb
out
xor
push
dec
inc
mov
loop
mov
push
xchg
out
push
ss
aaa
repnz
movsl
push
xor
mov
xor
bound
jno
push
mov
pop
dec
xor
and
add
push
fnstenv
les
jne
sahf
sbb
push
roll
pop
mov
pop
pop
aas
inc
and
xor
xor
loopne
movsb
sahf
in
lea
insb
and
scas
mov
xor
arpl
and
and
mov
adc
sbbl
add
sub
lret
sub
fisubl
add
pop
mov
sbb
nop
dec
cwtl
mov
in
pushf
or
mov
push
inc
movsb
fsubl
xor
cmpsb
rcr
mov
or
cmp
imul
push
shll
mov
xor
adc
mov
decb
fidivrl
lcall
sbb
aaa
pop
inc
ret
sbb
ljmp
sub
movsb
movsl
push
sarl
xor
inc
dec
mov
orl
inc
push
push
ss
dec
dec
jge
pop
jmp
dec
test
aad
call
inc
ficoml
es
popa
xchg
mov
dec
and
push
xchg
imul
pop
inc
adc
hlt
ds
jb
shrl
inc
jecxz
push
and
cmpsl
xor
and
adc
test
mov
push
sbb
idiv
and
add
mov
dec
std
pushf
pslld
daa
mov
lcall
fwait
aaa
push
cmc
clc
mov
add
xchg
cmp
adc
mov
outsl
test
bound
scas
sbb
arpl
lret
jg
outsl
jl
ret
movsl
inc
jmp
cmp
pop
mov
mov
jmp
loopne
mov
xchg
mov
test
cmp
lcall
in
pop
mov
mov
lret
or
dec
jg
dec
movsl
shlb
out
mov
jns
dec
cmp
sti
pop
fwait
shr
mov
scas
inc
jge
bound
pusha
jbe
cli
pop
or
jle
xchg
repz
dec
mov
lahf
sbb
aaa
fildl
mov
push
loopne
xchg
daa
movsl
mov
fbld
dec
ljmp
mov
pop
adc
and
punpckhbw
call
mov
mov
fisubs
insb
sub
mov
xor
pop
pop
movsb
mov
sub
pop
add
jne
faddp
rorb
cmc
pop
cld
dec
daa
sarl
push
sbb
in
push
push
ja
aam
testl
addr16
mov
stos
out
movsb
sbb
movsl
in
xchg
mov
gs
or
insl
subb
int3
inc
cmp
dec
push
sahf
inc
xchg
jnp
psrlw
jecxz
jg
jmp
or
and
lds
test
and
lcall
pop
pop
lds
jns
sbbl
stos
ror
scas
fsubl
mov
aas
jge
cmc
dec
sub
jno
movsl
mov
mov
mov
mov
repnz
out
lret
outsb
test
inc
add
nop
lret
or
push
aaa
push
mov
ss
dec
and
adc
adc
ss
rol
arpl
cmp
push
movsl
inc
in
insl
xchg
mov
iret
mov
or
fcompl
xor
testl
insb
mov
out
icebp
cmp
xchg
out
adc
push
pop
rcrl
in
inc
pop
cs
imul
inc
in
push
pop
ja
mov
daa
stc
pop
loope
daa
inc
shll
pusha
cltd
adc
push
in
xchg
jo
cmp
push
in
loop
cmp
bound
imul
mov
shrl
sahf
sbb
and
add
sbb
and
jae
aam
js
pop
inc
pop
sbb
cmp
push
js
sub
inc
ds
icebp
out
pushf
imul
bound
jnp
inc
es
shll
sbbl
fwait
ret
cltd
or
pop
fldl
xor
pop
sbb
xchg
xchg
or
sub
mov
mov
ljmp
xor
xor
push
clc
fs
fldcw
sub
das
icebp
adc
or
xchg
sarb
mov
imul
dec
and
int
lea
xor
sub
ja
inc
dec
sbb
xlat
push
xor
xlat
sbb
fstpt
sbbb
add
or
inc
leave
scas
jl
sub
and
bound
pop
mov
add
fisubs
sub
mov
arpl
insb
fisttpl
cmp
inc
xor
inc
sub
sbb
test
jle
xor
dec
mov
je
je
pop
push
push
or
or
sub
fimull
dec
jle
cmpsl
adc
mov
not
xor
test
jge
out
lock
jge
sbb
jno
ss
push
push
dec
and
clc
push
xchg
int3
stc
adc
aas
pop
addl
leave
jecxz
hlt
or
rclb
inc
mov
dec
inc
into
and
in
hlt
xor
sub
and
repnz
push
dec
test
cmp
mov
push
mov
push
shll
inc
push
xor
in
test
and
jb
clc
add
mov
mov
xchg
push
aad
adc
sbb
dec
jecxz
mov
and
sub
fildl
dec
adc
arpl
test
js
mov
cltd
in
test
and
jno
sbb
outsl
std
loop
dec
sbb
push
aad
adc
cmpsl
pop
negb
push
lret
jge
out
rorb
int3
push
xchg
clc
cmc
repnz
dec
push
push
mov
dec
and
std
dec
jmp
lds
push
sahf
nop
scas
fwait
cmp
inc
ss
or
mov
cmp
xchg
sbb
fnstenv
daa
adc
aam
dec
inc
out
jnp
mov
aas
sti
adc
sti
mov
ret
cmp
cs
dec
xchg
test
push
jmp
xchg
jo
add
xlat
dec
mov
sbb
lahf
psrld
in
loope
sbb
andb
lods
adc
mov
xchg
ret
outsb
mov
mov
pop
and
cmpsb
out
dec
jnp
lods
mov
call
jns
push
jge
outsb
mov
cltd
repz
xchg
or
and
or
adc
or
jecxz
and
testb
fldcw
fbld
and
cwtl
mov
adc
pop
adc
shrb
add
pop
test
scas
xchg
insb
lods
fxam
mov
fimull
lahf
jo
sub
imul
push
push
xchg
hlt
frstor
pushf
addl
jb
or
outsl
mov
jp
jp
mov
shrb
ret
dec
dec
jo
pop
sub
add
lret
mov
add
sbb
mov
out
sbb
call
and
dec
dec
out
mov
jl
cmpsb
xchg
jecxz
jbe
enter
rcrb
pushf
repnz
dec
adc
adc
stos
ss
mov
pop
push
popf
xchg
and
inc
xchg
or
inc
repz
cli
movl
mulb
xor
add
cmp
mov
sub
dec
mov
sub
push
fdivp
scas
and
cmp
pusha
cmpxchg
jmp
loope
decl
loopne
das
dec
jb
pusha
cmp
xor
sbb
rorl
mov
sbb
and
psllq
mov
cwtl
jecxz
mov
pop
into
dec
rorl
bound
in
fsubrp
mov
pop
push
test
addb
js
pop
js
enter
dec
xchg
cmpsl
mov
adc
icebp
jae
push
daa
cmc
test
inc
sti
stc
aaa
mov
clc
imul
jl
pop
lods
add
movsb
push
sub
rcrl
xor
int
sub
js
pop
adc
cli
or
insl
aas
lret
test
jb
fdivrp
push
jmp
jae
mov
loopne
icebp
test
and
outsb
push
call
scas
inc
negl
pop
jne
xchg
push
fsubs
xchg
or
sahf
push
andb
jnp
imul
sbb
loope
aam
mov
ja
ret
mov
cmp
mov
mov
pop
xor
mov
sub
dec
push
pop
dec
sub
lret
xchg
jne
cltd
sub
cmp
xchg
test
mov
mov
adc
aam
insb
push
aas
pushl
and
in
pusha
sub
mov
in
xor
hlt
and
into
fs
add
fs
jmp
dec
mov
ret
dec
std
aam
das
jnp
daa
adc
jp
sahf
sbb
in
ja
mov
push
cltd
inc
pop
fnstsw
inc
xor
fildll
xchg
nop
jns
sub
and
fsts
repz
inc
mov
js
call
jnp
std
test
push
cmp
adc
pop
or
adc
pop
add
mov
mov
loop
aas
xor
push
push
test
sarb
stos
test
push
fiaddl
jecxz
into
movsb
inc
imul
push
and
sbb
inc
pop
sbb
outsb
mov
mov
insl
lcall
sub
lea
movsl
inc
ds
adc
andb
inc
imul
xchg
leave
shll
pop
xchg
adcl
adc
aad
shlb
in
mov
insb
inc
cltd
mov
fwait
and
clc
or
ljmp
mov
inc
sbb
xchg
push
imul
repz
lahf
flds
addb
fdivs
pop
xchg
push
push
fwait
into
or
sub
iret
and
xor
adc
pop
bound
push
repz
ret
sbb
subl
dec
mov
jb
lret
jmp
ss
lret
mov
mov
add
push
jle
mov
push
dec
scas
lahf
ret
bound
jmp
scas
mov
stos
sbb
cmpsl
jl
add
pushf
jae
adc
mov
je
jo
and
cltd
push
jmp
and
push
jecxz
iret
je
and
outsl
lods
fdivrl
sub
and
cltd
aaa
mov
lds
push
adc
adc
ja
lods
jb
add
stos
sar
xor
mov
and
aad
ljmp
cmp
shrb
dec
nop
mov
adc
add
scas
push
mov
xorb
cmp
adc
pop
inc
icebp
add
es
mov
iret
cld
int
testb
cmp
inc
jb
decb
mov
adc
movsl
addr16
or
pop
jmp
pop
aas
test
divl
popf
scas
jl
test
jmp
js
pop
loope
sbb
jge
nop
add
cwtl
out
sarl
inc
scas
jecxz
or
jo
lea
fists
sets
nop
jle
push
scas
xor
push
loope
fwait
and
orb
sbb
into
dec
jp
dec
imul
jl
mov
cmpsb
adc
out
sbb
in
push
leave
jmp
es
sbb
fucomp
pop
lcall
sti
push
insb
das
test
sbb
stos
shlb
loopne
filds
sub
cs
aaa
push
and
sbb
rolb
pop
dec
dec
mov
jnp
push
jge
xchg
jno
dec
enter
outsb
inc
cmc
xor
shll
fildll
cwtl
das
mov
pop
push
aam
fdivrl
push
mov
add
xchg
xchg
loope,pt
mov
and
cmp
pop
js
scas
test
mov
ret
popa
insb
mov
add
pop
stos
add
es
movzwl
xchg
fistpll
les
dec
in
cli
dec
lock
push
xchg
sbb
add
lea
subb
ret
jecxz
adc
dec
push
addr16
hlt
rcll
sub
pop
popl
mov
xor
pop
cmp
scas
mov
sbb
and
cmp
arpl
and
sub
cmpsl
adc
or
lods
jno
add
jnp
dec
lahf
in
inc
cmp
mov
mov
push
jmp
data16
nop
dec
cmpsb
jno
jno
and
pop
mov
push
or
jle
das
lret
insb
xchg
cmc
cmpsl
aas
iret
cmc
stc
inc
jns
arpl
mov
das
je
cmp
mov
in
pop
stos
jg
adc
mov
jo
stos
jb
xchg
mov
fimull
dec
daa
or
das
mov
push
daa
xor
movsl
or
cmp
xor
mov
mov
push
mov
sub
xor
ret
xor
fiaddl
out
int
mov
movsw
cmp
lahf
cmp
xor
cmc
pop
fwait
scas
icebp
push
xchg
pop
mov
push
add
mov
sub
cmp
popa
dec
sbb
jns
sub
sbb
inc
jg
neg
dec
ficompl
repz
ret
test
repnz
cmp
in
nop
cwtl
inc
xchg
lds
leave
and
mov
add
jne
pop
mov
rcl
mov
lods
mov
cwtl
push
ljmp
push
js
push
fsubl
lcall
test
xor
add
jo
mov
popa
fidivl
xchg
aas
mov
sbb
xchg
dec
pop
dec
mov
lock
dec
outsb
mov
mov
iret
movsl
jp
fs
cmp
gs
cmp
jmp
enter
mov
xchg
fwait
mov
cmp
push
pop
icebp
mov
pop
push
push
push
pusha
fcmovne
lods
test
out
mov
and
mov
xchg
mov
lds
clc
in
iret
add
add
and
jno
inc
or
xchg
adc
out
es
mov
leave
inc
mov
cmp
bound
into
adc
ljmp
push
mov
repnz
ljmp
mov
lcall
push
insl
out
jb
lds
out
movsl
lock
aad
ja
add
jb
fwait
mov
mov
add
je
mov
mov
out
mov
bound
mov
ja
pop
xchg
pop
stos
pop
pusha
arpl
test
loope
adc
pushf
mov
lock
jecxz
cmp
fadds
sub
push
add
js
push
lea
jg
insl
and
fstpl
in
in
ja
mov
cltd
sub
mov
pop
adc
push
pop
push
aas
push
rcrl
and
xchg
adc
lds
push
lods
inc
test
sub
popa
dec
rdtsc
fdivrl
imul
ljmp
in
jl
inc
jl
out
and
int
pop
jns
mov
rcl
jp
or
into
mov
jo
pop
and
clc
adc
data16
out
aam
or
cmp
or
inc
jae
test
loopne
pushf
loop
jne
fldt
lods
mov
mov
adc
cmp
pop
mov
aaa
movsb
decl
nop
inc
bound
popf
repz
dec
jae
sub
imul
sub
lret
adc
pop
fisttpl
cmp
test
dec
mov
mov
sahf
stos
push
es
jmp
pop
dec
test
aas
adc
and
pop
dec
sub
pop
fwait
push
addr16
xorl
gs
mov
mov
sub
xor
inc
je
add
pop
mov
stos
mov
jnp
xchg
or
and
popa
jle
push
ja
sbb
adc
mov
pop
mov
cmp
rorb
insb
sbb
xor
les
movsl
xor
push
mov
frstor
mov
adc
das
scas
inc
sbb
dec
or
testl
jp
lock
pusha
or
mov
inc
ret
insl
push
mov
dec
outsl
jg
pop
fmull
push
inc
out
cmp
jo
jle
mov
insl
and
inc
lods
inc
cmc
in
xchg
xchg
fmull
xor
pop
insb
es
push
mov
gs
xor
jbe
inc
and
mov
ffreep
repz
out
sub
pop
fiadds
inc
sbb
rorb
data16
gs
lret
inc
add
and
jmp
repz
mov
mov
shl
lods
pushf
mov
cwtl
and
out
sbb
clc
pop
leave
sbb
adc
mov
hlt
sub
sbb
fcoms
pop
dec
jae
addr16
xor
jmp
push
cmp
imul
sub
xorl
inc
push
pop
mov
mov
mov
mov
or
push
pop
lods
repz
adc
cli
movsl
fst
testl
fistps
pop
cld
inc
jecxz
out
int
pop
cld
pop
inc
push
mov
test
shrl
jbe
sub
lds
pop
imul
pop
test
cmp
sub
les
adc
js
dec
scas
test
or
inc
je
lods
sbb
sub
add
ret
lea
dec
inc
stc
jae
aaa
xor
outsl
lcall
or
push
lea
mov
gs
stos
es
mov
sahf
pop
sub
adcb
jbe
cs
mov
push
sbb
aad
pusha
incb
fwait
lods
nop
test
xor
jbe
adc
push
out
pop
jae
add
mov
inc
shlb
pop
mov
popf
fwait
test
rorb
repnz
lret
cmp
mov
ja
cmpl
je
loop
mov
ja
cmpsl
jnp
fildl
adcl
js
mov
shrl
lds
int3
push
mov
popa
ss
cli
jl
pop
mov
or
pop
push
mov
dec
push
popa
dec
fdivrs
adcb
mov
pop
mov
add
push
mov
xchg
mov
or
mov
mov
rcll
xchg
mov
popa
pop
pop
lahf
into
lea
js
sub
cmp
imul
sbb
xlat
scas
dec
sbb
and
cs
popa
incl
jbe
test
and
clc
pop
scas
add
mov
sbb
pop
cmpsl
sub
popa
jo
cmp
mov
daa
enter
mov
insb
lret
cmc
test
jbe
or
cmp
and
jo
or
arpl
and
aaa
insl
push
pop
and
pop
jmp
les
sub
mov
in
aam
xchg
test
push
mov
mov
cmc
add
cmpsl
jg
jo
cmpsl
es
mov
pop
xor
lods
pop
mov
testb
inc
adc
nop
inc
xlat
add
test
sahf
or
dec
inc
int3
dec
popa
pop
jle
dec
mov
cmpsb
scas
add
xchg
mov
xor
xchg
mov
dec
std
mov
into
or
popf
gs
jae
iret
xlat
test
in
mov
pushf
jo
inc
dec
fnstsw
es
push
or
mov
sub
in
imul
cli
mov
andb
mov
push
cmp
movsl
pushw
xor
pop
mov
push
and
cli
mov
mov
mov
test
into
rcrb
scas
cltd
cmp
xchg
jbe
lahf
in
sbb
mov
out
cltd
ljmp
push
mov
inc
insl
pop
cmc
mov
push
inc
pop
jp
stos
jb
imul
mov
sti
mov
mov
lds
sbb
aad
mov
xor
jb
jmp
sub
and
loopne
es
mov
lds
xor
mov
ficoms
fistps
jecxz
add
in
sub
push
rcr
jno
lds
cltd
je
insl
cmp
dec
push
mov
pop
inc
push
test
xor
xor
xor
jle
popf
sbb
mov
aas
xchg
mov
popf
bound
mov
inc
or
push
jo
pop
push
and
pop
xor
jns
in
cs
push
mov
adc
or
sbb
pop
inc
inc
les
mov
fcmovb
aam
scas
js
mov
movsb
leave
jge
and
push
and
ret
pusha
xchg
sub
cltd
pop
data16
xchg
xlat
mov
push
daa
lods
jae
call
mov
cld
mov
adc
rcll
daa
adc
cld
loop
add
frstor
shl
inc
push
outsl
xor
sbb
cli
mov
lahf
cltd
sub
div
fs
std
repz
jp
aam
insl
sub
mov
je
aaa
adc
cwtl
mov
pop
inc
lds
or
push
jo
push
adc
les
sbb
xchg
jnp
testl
cmc
enter
cld
lock
add
outsb
mov
ja
mov
ljmp
push
ljmp
call
or
popf
push
jg
cmp
and
fdivrs
dec
arpl
dec
sahf
sbb
dec
popf
in
jb
test
xchg
sub
call
shr
insb
xor
xor
jnp
aam
pop
add
lock
test
jbe
aaa
and
and
xor
jle
shrl
sbb
pushf
or
adc
xor
test
hlt
xor
sbb
into
mov
jmp
leave
lea
cmp
enter
int
xchg
test
inc
xchg
dec
pop
ror
add
arpl
mov
cmpsl
sub
cld
jbe
stos
cmp
mov
inc
mov
mov
imul
jb,pt
pushf
jns
or
pop
divl
cmp
cmc
subb
cwtl
sub
stos
in
stos
lret
clc
jecxz
aam
add
and
je
and
aas
test
fstl
fwait
dec
into
jb
adc
pop
cld
fwait
xor
pop
cli
loop
push
jl
dec
pop
leave
push
push
pop
repz
push
mov
dec
cmpsb
fucomip
push
pusha
outsl
rclb
or
es
jg
cld
in
fdivs
ret
push
xchg
xor
cmpsb
cld
mov
inc
jmp
cwtl
push
ret
das
or
xor
lds
addb
xlat
xor
dec
xor
js
xchg
dec
mov
cmp
xchg
fsubrs
dec
aas
push
jnp
test
outsb
cmp
loop
cmp
xorl
dec
xchg
mov
xor
pusha
out
test
call
mov
mov
lea
push
sbb
rclb
lcall
sbb
mov
jle
enter
es
jne
insb
lahf
or
add
sbb
aas
pop
push
dec
mov
jae
push
imul
xor
adc
repz
or
movsb
fadds
or
push
dec
dec
pushf
inc
fwait
jb
sub
jns
mov
push
cmp
nop
inc
mov
test
je
xchg
iret
sahf
xchg
and
push
in
cmp
test
fmull
xlat
mov
in
lahf
pop
pop
out
inc
mov
fdivs
mov
cli
fidivrl
imul
loope
mov
mov
sbb
mov
add
and
sar
jbe
push
mov
jno
add
dec
dec
push
cld
and
iret
pop
mov
xchg
mov
int
lahf
ja
inc
jg
adc
stos
inc
or
out
dec
jbe
mov
outsb
mov
jl
popa
mov
xor
add
minps
jg
out
and
icebp
stos
lods
dec
cld
xchg
hlt
add
shlb
pop
mov
jge
push
fnsave
and
jl
fnsave
aam
jae
subb
push
mov
popf
jmp
loope
mov
jg
out
stc
and
mov
adc
in
or
and
int
jnp
cmp
sbb
mov
fsubl
xchg
scas
add
in
pop
lock
and
pop
out
push
idivl
xchg
sub
mov
sbb
dec
mov
dec
stos
rcrl
outsl
ja
imul
dec
sub
adc
inc
or
fildll
nop
and
sub
fsubl
pop
jno
jbe
jo
icebp
adc
adc
outsb
into
pop
lock
mov
mov
lret
sbb
or
rolb
xchg
pop
dec
popa
fldt
js
mov
inc
outsl
jb
in
or
jmp
and
dec
pusha
cmpsl
icebp
incl
or
inc
push
sbb
fstpt
cmp
xor
jg
pop
or
sub
pop
push
out
ss
mov
push
jbe
movb
pusha
sarl
aad
es
and
rcll
xchg
ret
int3
cmc
pop
mov
or
sbbb
gs
pop
jno
out
or
dec
adc
adc
iret
stc
and
sub
iret
sbb
push
std
repnz
stos
notb
jb
and
sub
test
in
xorl
nop
or
mov
sbb
fsubrs
lock
cmp
in
mov
sbb
or
ret
int
sub
cltd
push
data16
dec
decl
mov
or
enter
in
inc
inc
pop
mov
cmpsb
xor
mov
cmp
cltd
ljmp
add
rorl
ja
test
in
adcb
push
cmp
xor
add
xlat
pop
xchg
out
mov
sbb
add
nopl
adc
jmp
or
mov
insb
dec
mov
loop
add
iret
in
andl
das
jp
cmp
dec
push
mov
and
inc
adc
push
out
mov
int
sub
inc
arpl
sbb
pop
or
and
cmp
or
jmp
insb
stos
pop
cmc
mov
mov
std
outsb
cmpb
dec
pop
mov
movsl
xchg
cmp
pushf
outsb
pop
fildll
mov
int
adc
hlt
jp
mov
rorb
push
insb
adc
cwtl
mov
fbstp
stc
add
push
arpl
sahf
fcoms
dec
mov
mov
xor
jns
mov
cmp
xchg
and
xchg
gs
jnp
cmc
xchg
add
int
sub
adc
lret
push
insb
jns
mov
jmp
fnstenv
orl
inc
xor
push
sbb
add
loope
xchg
mov
icebp
je
cmpb
adc
sub
lret
out
out
mov
pop
add
cmp
sub
iret
cmp
push
adc
xchg
arpl
loop
nop
push
mov
adc
jae
sbb
fs
lods
fwait
dec
xchg
push
mov
imul
test
mov
pop
pop
insb
sbb
fisubrs
mov
outsl
sbb
dec
aaa
xor
push
imul
push
ljmp
test
adc
stos
out
add
xor
sbb
stos
push
cs
xchg
or
add
xor
roll
iret
mov
sbb
adc
adc
add
rorb
pop
cmp
lods
sub
fnstsw
or
hlt
dec
enter
pusha
fnstsw
stos
mulb
and
pop
xchg
lock
cmp
jecxz
nop
clc
adc
and
cli
inc
push
mov
scas
mov
cld
lcall
lods
scas
mov
mov
push
je
sub
sub
and
jno
inc
pushf
xor
pop
cltd
inc
pop
adc
ja
jl
mov
rolb
lds
adc
adc
hlt
xchg
cs
test
push
call
lock
inc
jmp
push
cli
clc
ljmp
dec
aam
xchg
decl
test
shrb
push
pop
inc
outsb
mov
push
loope
or
xchg
adc
ljmp
cli
sbb
int3
pushf
call
xor
push
mov
mov
mov
xchg
fmuls
and
adc
inc
fsubrl
dec
movsb
es
scas
ficoml
movsb
sti
mov
je
jbe
in
mov
push
es
sbb
mov
lret
cmp
loop
sbb
xchg
jb
dec
subb
jbe
jge
xlat
push
mul
cmp
jno
inc
shll
mov
mov
insb
inc
sti
fwait
xor
cmpsl
iret
xlat
mov
mov
pusha
lods
out
mov
cmp
xchg
aad
addr16
cwtl
xorb
stc
adc
push
and
enter
pop
int
dec
test
imul
inc
enter
out
test
arpl
fldl
aam
xchg
or
mov
lea
xchg
decl
ds
dec
fdivl
mov
and
loope,pt
cmp
gs
add
ja
add
mov
fmuls
adc
mov
push
jb
jecxz
sub
cmpsb
add
cmp
mov
arpl
lock
mov
inc
push
mov
mov
pop
xchg
gs
cmp
ja
add
dec
jne
fcmovbe
inc
jb
fiadds
dec
mov
mov
shlb
in
or
xlat
sahf
jmp
jmp
fsubl
nop
in
mov
adcl
loopne
addl
repnz
xor
xor
mov
jo
repnz
and
fidivl
xchg
ds
ret
or
lahf
loop
shlb
inc
daa
jmp
xchg
test
inc
cmp
loop
cmp
pusha
cmp
iret
mov
lock
scas
push
jb
mov
shlb
clc
lret
repnz
dec
mov
clc
je
or
pop
aas
ja
jae
push
mov
mov
shrb
xchg
out
pop
fisubrs
and
dec
mov
push
cmpsl
mov
push
mov
test
shll
cmpsl
lret
push
push
outsb
scas
mov
or
movsb
out
in
sbb
ja
test
mov
pop
push
es
nop
mov
call
in
pop
mov
clc
loopne
cmp
das
mov
push
push
fwait
cmp
nop
adc
out
mov
scas
pop
subb
inc
xchg
imull
in
and
dec
jns
stos
icebp
inc
pop
sti
repnz
dec
imul
sub
daa
add
mov
xor
mov
rorb
mov
lods
lcall
shll
je
icebp
fucomp
inc
mov
das
ss
add
data16
stos
scas
jbe
mov
pop
mov
lcall
test
test
cltd
cmpsl
sbb
inc
or
stos
test
cmpsl
push
jno
rcll
jb
xchg
lock
sbb
sbb
add
jae
jns
add
push
jno
dec
jno
mov
cmp
xor
xlat
outsl
loopne
mov
lods
test
add
cwtl
adc
and
arpl
in
mov
insb
or
ss
jg
stc
sbb
pusha
test
jno
push
adc
jns
decb
sbb
cmp
jae
mov
addr16
inc
nop
leave
loop
mov
add
sbbl
cmp
or
mov
mov
inc
mov
xor
jecxz
daa
mov
and
or
jbe
or
mov
test
xor
sbb
js
dec
fwait
dec
mov
std
sbbl
fsts
sub
inc
addr16
je
fs
js
test
insl
pop
sti
jmp
sti
jo
scas
jb
xchg
push
jne
test
xorl
imul
pop
out
jg
jno
testb
clc
pop
pop
mov
sbb
rolb
fidivs
dec
clc
mov
mov
icebp
jnp
dec
push
loopne
fwait
xor
and
cmpsb
movsl
or
movsl
push
js
push
or
and
cvtpi2ps
out
popa
loop
lods
jp
aaa
in
push
dec
fistl
pusha
sbb
add
into
fstl
mov
dec
iret
mov
jg
and
imul
lods
rol
pop
aaa
int
jle
lods
outsl
sub
fnstenv
inc
xor
popf
iret
cmp
jl
ds
cwtl
call
icebp
xor
out
jecxz
outsb
dec
mov
fisubl
aad
jns
dec
fcomi
addr16
loop
adc
sahf
sub
adc
sub
sbb
xchg
pop
sbb
mov
and
hlt
push
mov
xchg
out
cmp
mov
sti
jl
in
mov
arpl
fistpll
mov
mulb
xor
mov
and
adc
mov
sub
lods
es
loopne
dec
cld
mov
sbb
push
loope
inc
sub
ss
xchg
sti
jo
cmp
push
aam
lock
aas
xor
les
cmp
aaa
jbe
pop
loop
mov
imul
push
cli
dec
stc
jae
mov
xor
mov
xor
out
adc
mov
sub
shrb
or
lret
aaa
jno
mov
insl
fbstp
pop
outsl
cmp
mov
shrb
inc
testl
sbb
inc
faddp
adc
mov
js
mov
movsb
mov
bound
iret
dec
data16
js
orb
imul
push
inc
ds
mov
jp
shrl
push
lock
lods
sbb
add
jmp
cmp
fisubl
je
jo
cwtl
jg
lahf
mov
xchg
push
in
lret
das
dec
push
push
lock
lret
push
or
loope
stos
scas
cmp
xchg
les
pop
push
pushf
push
mov
xchg
push
mov
rcl
or
mov
repnz
pop
shlb
xor
test
add
add
mov
jbe
push
call
dec
lock
jecxz
dec
js
push
push
sbbl
into
mov
or
xchg
adc
mov
outsl
pop
lcall
inc
pushl
clc
sub
jno
inc
mov
inc
inc
pop
and
mov
in
not
xchg
mov
enter
cmc
push
aaa
iret
call
pop
fmul
jecxz
out
loope
push
jle
data16
pusha
xor
dec
mov
pop
imul
mov
ljmp
pusha
mov
dec
sub
aaa
xchg
aad
sub
cli
repnz
fcompl
mov
mov
add
loopne
loope
outsb
xchg
iret
pop
scas
mov
mov
outsb
sbb
mov
push
fs
sbb
jg
mov
stc
imulb
adc
pop
loopne
mov
jmp
cmp
xlat
sahf
fstl
cmp
and
leave
mov
clc
int3
popf
pop
push
mov
and
inc
ds
repnz
repnz
jecxz
ret
cmpl
ds
lods
xchg
stc
add
addb
ss
out
cmpsb
je
lret
cmc
jle
jae
int3
jp
call
push
add
inc
pop
decb
out
mov
lea
sbb
aas
xor
lods
mov
pop
jl
mov
dec
inc
inc
inc
in
ljmp
and
inc
repnz
sub
test
add
mov
stos
enter
out
add
out
add
mov
test
jae
stc
push
inc
mov
arpl
add
jne
add
pop
mov
push
in
push
push
adc
pop
and
decl
mov
fcomps
dec
mov
cld
mov
lds
fbstp
add
mov
scas
adc
push
int3
push
imul
adc
push
pop
into
push
loopne
sbb
jns
adc
push
scas
or
xchg
pushf
popf
push
mov
leave
jbe
xchg
ret
sub
sub
movsl
xchg
cmp
mov
das
pop
sarl
xchg
out
cs
xor
inc
nop
jo
xchg
jmp
cmp
fistpl
pushl
loop
ret
gs
mov
mov
clc
shll
loop
sti
ljmp
jb
push
shlb
std
dec
bound
mov
movsb
push
daa
fs
adc
loop
dec
lcall
mov
mov
hlt
or
xor
mov
mov
rorl
loop
sub
ret
andl
imul
xor
inc
xor
jl
dec
or
rcr
xor
aas
test
add
fbstp
sub
and
or
ds
mov
cli
mov
pop
and
cmp
aam
stos
jg
pushf
scas
sarl
and
and
sar
insl
sub
mov
cmp
pop
lods
int
rorb
in
or
loope
mov
stc
test
ror
jbe
movsl
js
pop
dec
add
dec
in
xchg
std
mov
or
inc
jl
push
ljmp
mov
xor
roll
outsb
enter
jno
pop
add
jp
rcrl
xchg
mov
shrb
add
rcll
cmpsl
jo
sahf
repnz
into
sarb
or
and
lret
pop
dec
adc
test
insb
jno
lods
ffree
fnstenv
fiadds
idivl
test
or
push
cmp
push
xchg
jbe
inc
cmpl
sbb
sbb
sbb
dec
mov
pop
sbb
pop
fisubl
frstor
mov
icebp
mov
or
cmc
inc
xlat
gs
lds
sbb
jmp
insb
in
dec
dec
jbe
inc
mov
push
xor
and
aaa
xor
hlt
add
in
imul
loopne
test
std
icebp
sub
mov
push
pop
jns
or
and
sbb
mov
xlat
shll
cmpb
inc
cmp
mov
sub
loopne
inc
les
pop
fimull
fistpl
outsl
inc
sbb
mov
mov
mov
jle
fisubrs
mov
test
mov
je
nop
jns
or
adc
gs
inc
pushf
add
idiv
sbb
stc
dec
leave
or
add
lea
sub
inc
adc
call
outsb
add
xchg
cmc
popa
dec
outsb
lret
push
adc
pop
cmp
mov
pop
js
xor
testb
cmp
test
sub
ret
push
insb
cmp
adc
loop
inc
test
mov
sbb
ss
shll
rorl
imul
aad
shr
popa
rorl
test
aad
ljmp
cmpsb
jno
mov
fcoml
insb
push
xchg
jge
test
aam
jo
rcll
insb
xor
dec
mov
or
jge
adc
jb
ds
sbb
inc
int
or
mov
mov
mov
leave
mov
outsl
push
lea
sbb
or
aam
push
or
sbb
popa
loopne
fidivs
add
shlb
movsb
sub
mov
addb
andl
icebp
mov
and
mov
or
push
mov
aam
push
lods
jge
xor
fisubs
sub
test
lds
and
test
repnz
repnz
cmp
jns
arpl
scas
cmp
mov
dec
stos
pop
bound
addr16
mov
mov
imulb
loop
jp
lahf
pop
icebp
lods
shll
rcrl
and
mov
ret
push
lret
xor
dec
pusha
cmp
xor
xchg
addr16
aaa
mov
in
sbb
xor
inc
xchg
mov
jmp
push
inc
shrl
lahf
sbb
jp
or
lods
ficomps
arpl
or
aam
xor
fists
es
mov
and
cwtl
fisubrs
gs
mov
xor
xor
repz
inc
push
sti
mov
jg
sub
fisubrl
sbbb
mov
inc
add
mov
pop
outsl
lea
es
stos
lea
pop
loopne
lds
imul
pushf
sbb
sbb
cmp
int3
xchg
ja
sahf
outsb
hlt
pop
out
pop
jecxz
sbb
imul
gs
gs
lods
or
xchg
dec
mov
mov
lret
pop
ljmp
add
cmp
jg
stos
mov
cwtl
adc
mov
incb
out
inc
xor
jp
bound
into
int3
sub
mov
clc
pop
mov
sbb
mov
pop
test
sbb
rorb
adc
mov
inc
faddl
dec
or
in
nop
mov
jp
dec
or
mov
enter
sbb
mov
add
mov
adc
aas
and
out
pop
push
or
mov
adc
out
cmp
dec
inc
push
out
pop
jno
lods
and
lcall
adc
stc
mov
popf
xor
and
int3
clc
push
fdivr
das
jmp
xchg
movsl
popa
jmp
mov
jno
and
xchg
repnz
divb
outsl
mov
mov
cmpsb
imul
cwtl
push
sub
pop
aam
rolb
pop
inc
pop
pop
pushf
lock
imul
inc
or
and
xchg
mov
xchg
out
sub
add
adc
mov
je,pn
stos
faddl
add
decl
mov
xlat
and
jno
push
jno
adc
pop
cld
lds
imul
mov
fcoms
icebp
pop
fs
lahf
int3
or
push
inc
icebp
out
jg
repz
adc
mov
sbb
out
mov
pusha
sbb
pop
mov
cmc
gs
pop
inc
mov
adcb
into
les
adc
adc
test
add
or
mov
scas
adc
pop
sub
dec
sbb
shll
aaa
sarl
mov
pop
lods
out
sbb
dec
adc
xchg
dec
mov
rcrl
testb
mov
mov
adc
lds
inc
fiadds
dec
sbbl
arpl
bound
mov
mov
jo
mov
jmp
add
cs
fbstp
inc
jne
shr
shlb
orl
test
pop
and
jecxz
fidivrs
jne
pop
ja
ss
sub
xchg
or
in
nop
arpl
mov
adc
mov
or
fnstcw
leave
test
mov
imul
mov
sub
lret
mov
inc
xor
test
test
sub
jmp
in
push
gs
rorb
pop
rcl
out
movsb
dec
inc
add
xchg
push
mov
inc
jb
daa
sbb
jb
lock
addr16
sub
pop
mov
and
and
xchg
lahf
fisttpl
ja
push
dec
and
dec
ss
adc
cmp
stc
inc
jl
lds
add
jb
div
or
out
or
and
adc
cmp
xor
addr16
pop
out
dec
test
fdivl
mov
rdpmc
mov
je
xchg
int3
lea
inc
aas
lods
xchg
in
xor
push
sub
sbb
test
loopne
out
fistpl
icebp
cs
adcb
dec
sbb
push
and
fcoml
inc
clc
adc
insb
lret
loop
sbb
clc
xor
inc
jb
leave
xchg
add
fstps
lea
bnd
mov
ja
and
mov
mov
jecxz
lods
cltd
and
push
push
pop
sub
inc
mov
clc
loopne
loopne
adc
sbb
rcrl
jmp
jns
ljmp
ret
jb
cwtl
popa
icebp
enter
int3
lock
push
pusha
stos
dec
and
lahf
pop
add
iret
mov
xor
inc
or
repz
or
push
jno
push
mov
les
jp
mov
loope
cmp
push
js
andb
adc
dec
cmp
push
fs
fcmovnb
xor
pop
pop
add
cmp
sahf
mov
xorl
das
add
testl
movsb
test
or
mov
shr
test
lret
out
add
in
aad
lret
fistl
and
ja
fildl
xchg
cmp
push
jno
inc
pop
mov
mov
fisttpl
pop
xor
dec
mov
test
divb
dec
sub
nop
mov
mov
fdivr
cmpsb
jmp
out
bound
adc
jae
lahf
or
and
cmp
inc
sub
inc
xor
scas
and
or
or
sub
mov
les
iret
dec
fnstsw
add
jno
outsl
adc
in
aas
test
dec
pop
adc
jg
mov
inc
mov
dec
nop
mov
xchg
leave
fbstp
inc
ds
mov
cltd
stos
fcmovb
in
mov
jge
das
leave
arpl
mov
mov
test
imul
filds
add
or
xlat
sti
xchg
pop
loop
aad
jae
rorl
testb
ja
repnz
movsb
sub
pusha
cmpb
xlat
push
push
frstor
cli
sub
andb
adc
roll
ss
mov
jae
test
idiv
fwait
aaa
or
inc
xor
mov
loopne
xorl
mov
jbe,pn
or
out
pop
mov
jae
mov
shr
fistpll
sub
jp
sti
test
adc
mov
bound
sbb
pushf
pop
xchg
and
shrb
adc
cmp
push
inc
outsb
repz
bound
das
std
sub
nopl
push
mov
push
push
cmp
inc
adc
ud2
sub
and
xchg
enter
mov
aam
and
js
jmp
js
push
inc
aad
arpl
ret
ficoms
rorb
push
out
cmp
and
mov
or
inc
xchg
add
outsb
add
pop
je
sub
shl
sbb
fwait
lock
xor
movb
add
aad
and
icebp
je
cmpsb
iret
in
xchg
lock
popa
pop
and
syscall
xchg
ret
mov
push
outsb
jp
dec
mov
out
aad
mov
clc
add
bound
repnz
sub
outsb
addr16
push
inc
add
xchg
ss
jnp
inc
mov
xor
in
sub
or
arpl
cmp
push
push
sarb
push
sbb
ss
and
nop
ljmp
repnz
mov
cmpsb
mov
sbb
shll
and
dec
sub
out
inc
mov
stos
push
xchg
pop
scas
cmp
mov
cmp
fcmovnb
lock
mov
outsl
inc
xlat
mov
jo
out
notb
adc
dec
adc
xor
arpl
aad
jae
pop
repz
mov
repz
mov
hlt
insl
test
dec
repnz
jg
dec
or
jge
movl
test
pusha
ret
mov
cwtl
dec
in
xchg
sbb
jecxz
pop
nop
arpl
inc
push
movb
bound
ret
mov
insb
and
mov
rcll
or
cmpsb
mov
mov
sbb
sahf
ss
aam
inc
repnz
xlat
daa
or
into
pop
aaa
leave
xchg
sub
sarl
testl
jae
jmp
add
and
je
inc
inc
clc
test
aad
roll
fidivrl
fildl
xchg
repz
int3
sbb
addr16
fsts
adc
adc
loop
int3
ljmp
repnz
push
fnstsw
and
cmp
mov
leave
sbb
stos
neg
hlt
out
lahf
out
movsb
xor
sub
push
adc
mov
rcl
add
js
in
jb
xchg
jmp
out
inc
xchg
inc
push
adc
lcall
push
pop
scas
push
mov
insl
push
inc
nop
in
out
into
fstps
mov
stos
ret
rcll
test
mov
int3
imul
repnz
fiadds
addr16
sub
iret
nop
sub
test
fsts
sub
pop
pushf
push
adc
fdivr
lods
mov
rcr
pop
xchg
push
add
mov
mov
mov
mov
cmp
mov
sub
pop
cmpsb
pavgw
outsb
dec
xor
xchg
not
aas
aam
pop
mov
sub
mov
lcall
popa
fdivs
mov
mov
xchg
jge
repnz
test
mov
sbbl
and
movsb
push
jnp,pn
enter
jg
popa
incb
aas
mov
pop
arpl
or
xchg
sub
aam
cmp
push
lret
insb
adc
mov
mov
out
jmp
mov
dec
add
shrb
test
shr
fdivs
add
fistpl
stc
cmp
mov
jle
scas
inc
fcoms
cmp
movsb
jge
push
sbb
adc
out
hlt
mov
bound
add
pusha
shll
test
dec
mov
pop
cmpl
dec
dec
int3
mov
adc
fcomi
inc
ss
daa
pop
dec
int
addr16
loop
test
shrb
popa
fnstcw
out
repz
nop
xor
iret
dec
lods
xlat
adc
ficoml
out
xchg
je
sarb
loop
dec
repnz
or
mov
sbb
sbb
inc
pop
xor
enter
xchg
rol
fstl
fistl
fisttpl
ljmp
push
cmp
xlat
popa
push
push
in
and
pop
push
in
shr
dec
outsl
adcl
bnd
adc
xchg
cli
cmp
and
jbe
in
aas
inc
into
sub
imul
sub
adc
pop
nop
jl
pop
cmc
sti
ror
dec
push
push
push
ds
xchg
je
xchg
add
push
adc
inc
add
popf
hlt
xchg
xchg
mov
jnp
les
sbb
fdiv
in
shr
sbb
xor
fs
pushf
or
stc
sub
cmp
sub
std
lods
sbb
cltd
lret
fwait
mov
xchg
xor
mov
scas
int3
push
fisubrs
into
xchg
mov
shrl
cmp
lods
cmp
fwait
xor
in
fld
mov
jnp
push
dec
xchg
ficompl
push
inc
dec
xor
js
cmc
mov
sbb
sub
insl
cmp
out
out
add
lods
addr16
pop
mov
push
inc
test
xchg
and
add
arpl
jne
hlt
xlat
mov
cli
xchg
lret
ja
adc
clc
or
in
mov
int3
mov
dec
fs
lret
js
mov
sbb
in
imulb
enter
movsb
push
mov
lods
lea
imul
outsb
addl
cmp
insb
imul
mov
mov
imul
and
icebp
xchg
stos
or
test
aaa
stos
iret
sbb
jnp
jle
leave
or
and
repz
pop
mov
sarb
mov
mov
sbb
or
mov
lea
test
repnz
rep
lret
cltd
mov
outsl
pop
stos
adc
cmp
cmpsl
std
jns
lock
and
sbb
out
loop
adcl
pop
insl
and
stc
jl
pop
jns
lea
sbb
xor
inc
insb
call
and
jns
loope
les
loop
das
xlat
mov
add
inc
ficomps
test
inc
sub
shl
mov
xchg
cmpsl
lret
pop
pushf
shll
sbb
cld
inc
sbb
xor
sub
xlat
or
ss
stc
lock
jo
inc
add
or
mov
sbb
in
and
dec
adc
imul
add
lret
cmpsl
stos
cmp
enter
xlat
ss
lods
out
stc
iret
xchg
sub
mov
and
jecxz
mov
add
lret
out
adc
add
mov
jecxz
pop
xchg
into
sub
xchg
loop
inc
in
mov
lea
dec
stos
loop
fidivs
daa
lcall
cli
decb
cltd
cmp
fldcw
sti
mov
mov
push
arpl
cli
pop
sbb
lods
dec
bound
dec
or
adc
and
pop
hlt
and
push
imul
jae
add
clc
aaa
inc
add
cmp
test
pop
adcl
test
in
and
imul
sbb
inc
aas
sub
shll
sbb
sbb
imul
dec
arpl
stos
sbb
push
jbe
movsl
sbb
sbb
jno
pop
jne
enter
mov
call
xlat
inc
daa
and
stos
fdivrl
push
jge
xchg
shl
mov
cmpsb
dec
shll
mov
loop
cmp
lcall
ljmp
xchg
cmp
jle
xchg
test
movb
push
and
adc
lods
mov
daa
jp
pop
xor
jp
push
xchg
sub
das
sub
sbb
push
outsl
insb
jae
inc
jecxz
ss
xchg
push
jl
jge
or
xchg
call
jo
outsl
and
mov
cmc
out
ljmp
clc
fnstenv
ljmp
sub
push
adc
push
ss
std
shr
push
shlb
fidivrl
sbb
ds
push
or
cmpb
imul
mov
out
mov
mov
mov
jmp
jg
sahf
mov
out
out
xor
cmp
repz
inc
add
push
dec
cmpsl
insl
jmp
fisubl
push
nop
mov
adc
xchg
es
add
sbb
sahf
add
cmc
xchg
lods
and
jmp
lret
cli
inc
or
mov
mov
imul
decl
test
icebp
xchg
xchg
ja
cmp
js
rorl
dec
jge
test
sti
jecxz
sahf
sub
aas
mov
cmc
hlt
jecxz
decb
jecxz
cltd
popa
pop
sbb
test
out
insl
popf
sub
stos
pop
push
fisubrl
aas
xor
push
cmpsb
popf
push
test
fwait
insl
xchg
aas
fs
or
pop
fcoms
jbe
lcall
sti
fnstcw
cmpsb
mov
jns
mov
mov
test
js
jno
push
imul
int
jecxz
iret
jno
pop
jl
push
ja
daa
fmull
clc
adc
pop
int3
add
sbb
mov
push
int3
sbb
shll
fistl
and
int
and
cmpsl
mov
out
cmpsb
orb
popa
and
pop
imul
loope
mov
sbb
in
mov
mov
cmpsl
jne
jle
and
mov
pop
imulb
sub
push
xor
lock
xchg
mov
les
leave
jp
pop
cmp
or
or
out
mov
xor
jae
outsl
mov
sbb
stos
mov
xchg
mov
js
out
cmp
jno
call
pop
or
imul
stos
sbb
das
push
push
xchg
push
icebp
int3
in
xorb
mov
xorb
daa
addr16
xchg
fisttpl
pop
je
lcall
or
xor
pop
push
or
lock
bound
or
add
cmp
loopne
xchg
ret
in
xchg
push
mov
in
cld
repnz
jno
imul
lods
mov
add
inc
outsl
jmp
cltd
imulb
mov
inc
movsb
sub
decl
icebp
fwait
jp
mov
repz
push
movsb
jp
xor
je
add
pusha
insb
lea
xchg
orl
repz
shll
inc
sub
mov
add
cmp
jl
add
add
cli
rcll
push
cmp
cmpsl
push
sar
std
jb
sbb
fnstenv
addl
xchg
js
xlat
add
popl
insl
dec
xor
adc
push
addr16
pop
mov
pop
out
popa
sub
jmp
cmp
sub
pop
pop
sub
adc
popf
shll
int3
into
sub
xchg
cmp
inc
jnp
jle
sbb
mov
out
in
ret
data16
int
in
hlt
mov
popf
push
fdivs
loopne
and
push
adc
fidivl
jp
shll
sti
jbe
stos
popa
ds
es
cmc
test
mov
or
in
nop
sbbl
xor
xchg
jmp
cmp
in
cmp
jge
and
jnp
mov
mov
mov
loope
fs
ljmp
clc
adc
js
hlt
jle
sub
mov
jae
orl
ja
mov
push
js
inc
fistps
sub
sbb
iret
mov
pop
or
aad
je
sbb
sub
popa
inc
cwtl
and
xchg
cmp
jno
pop
int
mov
push
enter
adc
and
dec
int3
dec
pop
ljmp
pusha
icebp
js
js
or
push
or
lcall
cli
fsubrs
add
xchg
dec
orl
push
mov
xchg
cmp
ja
cmp
inc
repnz
in
dec
out
jbe
cld
ret
add
aas
push
sub
arpl
jmp
enter
add
fistps
push
shl
push
xchg
outsl
pop
pop
iret
lahf
cmp
imul
cmc
cmp
sub
adc
pop
xor
movsl
stos
es
dec
pop
push
pop
push
inc
inc
xchg
fldl
xchg
dec
cmp
mov
js
pusha
xchg
test
sti
and
int3
jne
pop
imul
jno
cmpb
jg,pt
xchg
or
xchg
pushf
push
in
imul
inc
jae
enter
push
popa
push
aas
mov
dec
xlat
cmp
xlat
fsubrs
pop
dec
push
sbb
mov
xor
sbb
mov
or
cli
pop
fidivrs
popa
lret
es
in
push
pop
inc
mov
add
pop
cli
test
in
xchg
out
xchg
lods
ds
inc
rcl
hlt
cltd
jmp
sub
mov
pusha
daa
fwait
pop
ja
xchg
out
outsb
adc
ficoml
mov
add
pop
jnp
sub
in
sbb
mov
push
rorb
push
cmp
ljmp
mov
test
test
ljmp
fisubrl
sbb
push
cld
movsl
pusha
xchg
sti
inc
lea
mov
pop
test
xlat
jecxz
sbb
push
dec
std
sub
outsl
icebp
arpl
or
sub
sbb
ret
dec
fstp
lea
add
xor
dec
mov
push
add
fwait
dec
jg
enter
insb
aaa
popf
insb
test
add
daa
out
js
mov
pop
lcall
popf
inc
push
jno
push
cli
push
mov
xor
iret
lret
xchg
dec
pop
jae
mov
fcomip
jl
mov
push
mov
mov
jb
push
cmp
test
push
out
dec
jp
jge
fnsave
mov
out
push
or
and
mov
popa
call
clc
outsl
mov
mov
aam
aad
jle
nop
mov
jge
mov
std
arpl
mov
add
push
mov
push
adc
loopne
fldenv
nop
jno
sub
ja
lds
or
les
add
sub
pop
fmuls
mov
lret
shll
test
test
das
adc
mov
mov
stos
cmpb
test
les
nop
lea
mov
fldl2e
cmpb
mov
popw
clc
mov
push
push
adc
or
or
mov
repz
mov
ror
dec
adc
sbb
jmp
loop
movsb
jp
xchg
and
cld
stos
sub
and
out
outsl
or
fcompl
jmp
mov
stos
and
cli
cmp
out
lahf
test
and
int
and
inc
test
jecxz
adcb
xor
jl
push
mov
imul
pop
imul
das
int
sti
add
xchg
aam
jp
jb
mov
movsl
and
subb
jno
mov
negl
cld
push
cltd
cwtl
pop
test
push
lods
and
inc
push
popf
aas
cmp
ret
sti
dec
mov
dec
cli
mov
sub
cmp
xchg
mov
mov
je
adc
mov
hlt
dec
cmp
sbb
gs
out
xor
mov
imul
lock
fidivl
pop
gs
mov
add
pop
and
jp
aad
adc
outsl
dec
movsl
insl
jecxz
cwtl
mov
dec
lods
pusha
pop
mov
aad
and
incl
mov
cld
fidivrs
mov
sbb
movsb
aas
aad
mov
repnz
sti
adc
adc
mov
mov
inc
cmpl
mov
mov
iret
andl
cmp
pop
pushf
sahf
and
flds
add
aad
push
arpl
test
mov
fstl
shll
and
dec
pop
sub
push
inc
or
xlat
subl
std
xor
pushf
inc
or
loopne
dec
dec
aaa
aad
std
inc
push
ds
mov
inc
lcall
pop
outsb
ficomps
mov
stc
aaa
push
int3
pop
in
xchg
fcoms
ds
lods
jmp
in
sub
adc
pop
mull
out
sbb
scas
push
inc
fidivl
lret
dec
jb
xor
sbb
inc
push
or
xor
sti
mov
sbb
scas
fadd
push
xlat
dec
mov
shll
pop
xor
jp
jmp
xchg
mov
test
jns
inc
jmp
mov
push
mov
and
jns
sub
repnz
push
adc
hlt
jnp
lahf
pop
scas
jnp
fiadds
rorb
pop
fcoml
pop
fnstenv
adcl
insl
jmp
jo
clc
add
cmc
xchg
mov
xchg
xchg
test
dec
das
cwtl
inc
inc
mov
aam
movsb
ja
dec
xor
cmp
shl
sbb
sbb
push
in
lret
pop
push
inc
or
jl
mov
in
xchg
mov
inc
popa
push
jmp
jno
flds
arpl
mov
add
sbb
lods
xchg
lods
movsb
ret
cmpsb
stos
cmp
mov
cmp
xor
pusha
sahf
rolb
lahf
pushf
not
fsubrl
shlb
les
push
xor
pop
stc
xor
dec
aas
cmpsl
mov
data16
push
int
cmp
pop
and
add
fnsave
stc
jl
pop
test
scas
cmpsl
fistpl
mov
and
lret
fidivrl
scas
lret
fneni(8087
les
push
push
mov
jae
roll
fmuls
and
or
mov
jae
insb
sbb
cltd
xchg
and
jae
cwtl
movsb
mov
stos
pop
pop
sub
arpl
mov
int
adc
inc
or
xchg
mov
fiaddl
sti
insl
lods
lret
cmc
rcr
mov
scas
std
shll
cmp
cmp
lea
add
aad
sbbb
sbb
xor
popa
sub
or
aaa
inc
lret
inc
xor
lahf
jo
test
fcmovnb
or
aad
sub
push
mov
in
in
fistpll
sbb
mov
test
movsl
cmc
jl
xlat
add
rcrb
pop
aas
pop
pop
sub
fistl
mov
jb
xchg
xlat
inc
test
or
movsb
xor
cltd
adc
movsl
ret
sub
xor
xchg
pop
push
jo
push
cs
jno
insb
mov
xchg
or
adc
cwtl
xchg
scas
outsb
aaa
fwait
bound
orl
mov
imul
adc
jo
repz
enter
ja
adc
xor
add
in
sub
ret
push
in
adcl
xchg
out
dec
imul
test
jp
dec
cmpsb
xchg
in
mov
lods
fwait
inc
cld
mov
lahf
rorb
bound
lds
xchg
es
jbe
adc
mov
mov
sbb
fstps
testl
in
lods
dec
add
into
xor
fdivrp
in
or
xchg
inc
mull
mov
cmp
adc
pop
rorl
and
aas
jns
xor
and
xor
cwtl
pop
les
lahf
je
movsb
out
mov
dec
or
lock
xchg
cmpb
lods
dec
xchg
lcall
jbe
cmpsb
push
inc
jg
mov
jmp
sbb
pop
insb
cmp
add
xchg
xor
sub
aam
cltd
push
push
pop
sub
push
stc
movsl
mov
jmp
pop
imul
in
ja
mov
aam
cld
pushf
divb
mov
sbbl
cld
sbb
add
push
sar
or
stos
xlat
adc
mov
pop
data16
mov
dec
inc
in
cld
or
xchg
fcomps
mov
or
and
negl
cmp
inc
movsb
sbb
mov
xor
cmpsl
sbb
cmc
xor
push
mov
push
stos
nop
jp
test
and
or
fnstsw
out
add
mov
bound
xchg
mov
push
aam
movsl
sbb
imul
or
fwait
pushf
aaa
stc
mov
fistl
cmc
imul
mov
dec
jno
dec
push
mov
cmpsl
dec
lods
or
xchg
sbbb
mov
inc
pop
jecxz
lret
leave
movsl
inc
mov
inc
or
lods
xor
jp
xchg
push
mov
sub
nop
jne
ror
cld
fdivrs
stc
xor
cld
jecxz
xchg
mov
leave
nop
mov
pop
ljmp
fisttps
push
mov
repnz
sti
mov
shrl
inc
mov
add
fdivrp
jp
push
roll
in
rorl
clc
and
rcrb
or
rcll
push
lock
fwait
mov
mov
jb
ja
leave
adc
add
aaa
dec
icebp
sbb
cmp
inc
ss
outsb
daa
jne
test
xchg
mov
lds
mov
dec
or
mov
cltd
iret
dec
fisubl
lahf
rcll
xchg
xor
iret
enter
mov
lock
mov
cmp
inc
inc
lock
cld
std
shlb
jae
jge
or
and
cwtl
lret
push
mov
sub
and
shll
ss
xchg
jle
dec
pop
sbb
push
test
or
cmc
aam
mov
push
push
mov
jg
add
mov
push
mov
dec
loop
rorb
in
cmpsl
mov
dec
out
popl
cltd
adc
cs
xchg
pop
sbb
sarb
test
inc
jae
or
mov
fstpl
jbe
xchg
adc
push
xlat
ret
push
pop
loopne
cmp
inc
xchg
sti
mov
ret
ja
repnz
xor
xor
jno
mov
xor
sub
jo
fdivs
push
cli
mov
fdivl
push
pop
jo
pop
xor
aaa
sub
icebp
or
add
sub
cmp
fwait
data16
in
mov
shrl
in
or
notb
and
cmp
fstps
add
out
adc
mov
sub
push
test
pop
dec
mov
sub
mov
mov
mov
inc
leave
daa
sbb
and
js
in
add
dec
sub
js
mov
test
push
pop
push
pop
loopne
out
jbe
std
sahf
aad
mov
jne
pop
inc
shrb
cmpsb
dec
fistl
pop
push
inc
add
insb
pop
sub
xor
cmp
fbld
jle
mov
pop
stc
repnz
loop
call
mov
jg
fs
movd
iret
movsl
cmpsl
enter
xor
fadds
cmp
incb
repnz
and
insb
hlt
mov
ja
xchg
cmpsb
jl
adc
xor
js
shll
xchg
sub
xor
cmp
inc
in
ret
hlt
jg
pop
mov
jnp
jle
or
sbb
xorl
add
cmp
inc
push
pop
or
fnstcw
mov
adc
int
push
out
sub
stos
call
test
jl
mov
pop
cmp
loope
ret
aaa
inc
pop
xchg
and
jns
rol
inc
rcl
lods
sbb
pop
test
jae
sub
jo
icebp
jle
mov
fmuls
xchg
psubusw
arpl
jmp
sub
and
xlat
arpl
mov
ja
sub
es
ljmp
sub
or
pop
mov
loope
add
inc
or
xor
push
popa
adc
stos
lret
rolb
arpl
jns
or
push
and
pop
subb
xchg
xchg
cli
add
shrl
inc
xchg
adc
add
mov
mov
xchg
mov
ds
rcl
in
icebp
sub
push
scas
mov
std
cmp
in
shll
in
and
hlt
and
xchg
xchg
push
ds
outsb
enter
xchg
inc
sarl
cmp
fdivs
xor
jbe
jb
cmp
cmp
jb
mull
cmpsb
fdiv
ljmp
mov
add
dec
sarb
scas
dec
inc
movsb
rcr
mov
das
clc
add
push
ret
cmp
or
push
lock
jg
ds
mov
pop
dec
adc
dec
xor
and
test
xchg
add
popf
movsl
adc
icebp
js
mov
out
push
orl
sbb
cmp
sti
daa
add
ja
sarb
call
sbb
movl
orl
sbb
mov
jns
lcall
jbe
jl
outsl
jb
ficoms
push
dec
fs
leave
cmp
push
decb
mov
dec
xchg
add
cmp
and
jmp
iret
pop
popf
enter
jmp
mov
gs
adc
jne
cltd
mov
popf
push
pusha
mov
push
jg
lret
pop
fisubl
shlb
jg
bound
push
jecxz
scas
scas
mov
lret
pop
add
cltd
fstpt
mov
mov
mov
xor
inc
mov
jecxz
or
cs
mov
pushf
dec
pop
xor
cmp
jns
pop
addr16
push
ret
roll
jns
popa
jmp
push
fwait
push
pushf
sbb
add
mov
aam
stc
xchg
mov
or
mov
shlb
call
pop
push
cld
cld
stos
mov
add
sbb
mov
cltd
sahf
sub
lret
outsb
lods
repz
out
adc
push
arpl
push
movb
jno
fidivrl
adc
xor
jae
enter
mov
fwait
lods
push
cmp
clc
sarb
shll
mov
mov
sbb
emms
sub
mov
fnstenv
jp
popa
push
xor
inc
faddl
js
adc
fiadds
scas
jecxz
cmovb
idivl
adc
dec
enter
mov
mov
cwtl
js
sti
mov
leave
cmc
leave
test
and
inc
jns
movsb
adc
xchg
hlt
xchg
xchg
je
insl
lret
in
fs
cmp
clc
outsb
sub
mov
dec
je
and
push
jg
push
xchg
repz
dec
sbb
outsb
xchg
cs
sbb
aaa
push
gs
cmpsl
xchg
jbe
xor
cld
fistps
mov
ljmp
aas
push
ret
fs
xor
or
push
fimuls
push
inc
xlat
push
cmc
jmp
cmpsl
sti
rorl
jg
adc
into
add
aam
and
mov
adc
cmpsb
das
cmp
lock
test
pop
add
daa
xor
pop
repz
pop
inc
and
ss
jecxz
xchg
add
int
mov
pop
loop
mov
dec
int3
cmpsb
pop
add
cmp
xchg
xchg
sbb
jno
dec
mov
jg
ss
icebp
dec
enter
cltd
insl
outsl
mov
jae
lock
add
xchg
xchg
mov
arpl
mov
fwait
jp
call
fnstcw
inc
loop
push
add
ret
lds
xchg
fistpl
sub
cmp
mov
lds
push
test
sbb
lds
jmp
jl
mov
inc
mov
mov
fcmovnu
je
push
outsb
inc
pop
mov
stos
cmp
push
jmp
mov
cld
jbe
xor
ret
pop
sahf
sbb
jl
add
lret
lods
repz
cmp
testl
add
ds
push
xlat
popa
rcll
es
mov
js
xlat
add
iret
and
ljmp
push
sti
stc
cmp
in
ror
jmp
lds
push
sarl
push
jns
jb
addl
add
xlat
push
fs
xchg
or
pusha
jne
popl
xchg
or
xor
jp
dec
xor
repz
pop
xor
fildl
fidivl
xchg
inc
popa
clc
add
mov
clc
add
sub
cld
cmp
mov
cmp
dec
cwtl
test
hlt
mov
repnz
push
sub
lods
ljmp
shl
in
test
ss
repz
call
mov
pusha
add
dec
stc
jecxz
fcmovnu
cmp
mov
mov
imul
outsb
cltd
sar
fiadds
aas
les
jb
lea
jbe
jg
in
lods
xor
jns
xor
pop
sub
lods
push
dec
push
xchg
mov
jbe
mov
cmp
mov
sbbb
int3
push
std
sarb
outsl
or
inc
popa
push
cli
decb
lods
scas
or
or
mov
lds
mov
subl
push
or
negl
pop
xor
cmc
das
cmp
fucom
jmp
insl
stos
xor
mov
fisttps
cmp
les
and
mov
mov
hlt
push
aas
jp
dec
add
popf
cmp
cmp
dec
shlb
mov
les
xchg
hlt
notl
out
ss
cs
sbb
pushf
adc
cmpb
push
adc
subb
mov
cwtl
subl
push
lret
out
add
add
fwait
rcrl
sahf
pop
lods
cmpsl
bnd
dec
inc
popa
out
and
xchg
arpl
rcrl
lods
sub
rclb
pop
sarb
loop
sub
cmpsl
inc
sti
fisubs
pop
dec
add
sbb
or
gs
inc
hlt
dec
jle
mov
cwtl
mov
dec
pop
dec
mov
int3
xchg
ja
insb
lock
sbb
pop
negb
push
test
mov
cli
jbe
xchg
push
movsl
push
lahf
ljmp
test
mov
mov
rclb
shrb
dec
lea
das
jmp
mov
sub
hlt
mov
mov
and
inc
pop
imull
imull
mov
mov
loopne
inc
ljmp
dec
xchg
jno
lock
cmpsl
adc
lea
adc
cmp
lret
or
add
inc
bound
or
sbb
adc
push
loope
js
push
div
testl
fwait
jb
jecxz
into
stos
fisttpl
cmp
out
stc
das
pushf
and
ret
testb
and
xchg
icebp
pop
dec
jnp
add
pushl
sub
xchg
out
lea
xchg
xchg
jecxz
adc
pop
jae
sbb
adc
test
mov
popa
sbbl
xor
cmpsb
es
aam
out
xchg
cmp
inc
ja
mov
push
and
dec
dec
add
sub
enter
sub
and
outsl
lods
jns
mulb
push
sti
sub
and
mov
mov
push
movsl
pop
popa
shl
mov
xor
ret
ss
pop
mov
inc
imul
cli
in
scas
and
dec
flds
pop
clc
push
or
mov
cmpsl
negl
jnp
add
pop
dec
adc
js
or
cmovno
loopne
jae
xor
sub
xchg
scas
mov
pop
and
dec
mov
mov
aad
mov
mov
and
mov
jno
mov
inc
dec
std
pop
pop
ja
mov
icebp
sub
xor
mov
pushf
xchg
aaa
aaa
push
add
mov
andb
int
xchg
andl
js
push
nop
jbe
push
cmc
jns
jecxz
int3
cs
imul
shlb
xorl
dec
stos
push
ret
cmp
jb
push
int
test
shrl
inc
inc
stc
popf
dec
lds
xor
pop
mov
out
push
sahf
notb
push
rcr
push
fdivrl
ja
lods
int
xchg
or
rorl
mov
xchg
or
jbe
fisttpl
fidivrs
dec
jl
adc
aaa
add
icebp
mov
xor
xchg
daa
adc
mov
rcll
xchg
cs
aad
mov
xor
jo
arpl
das
mov
and
mov
popa
pop
mov
rcr
ljmp
mov
and
imul
mov
push
in
adc
mov
shlb
xchg
sub
ret
hlt
out
and
and
adc
in
lods
mov
pop
or
das
cmp
cli
push
test
jecxz
jp
add
inc
dec
cmpsl
push
jle
xor
cmp
adc
fldcw
add
out
outsb
adc
int
cwtl
xor
jno
fwait
push
jmp
jnp
movsl
mov
mov
sub
test
cmc
inc
mov
fldl
arpl
inc
inc
lea
mov
sarb
popf
mov
int
or
call
sarl
aam
or
addl
adcb
jbe
cmc
pop
pop
sbb
lret
xor
cmp
dec
mov
pop
and
xchg
push
mov
pop
fwait
jmp
jl
jno
adc
mov
mov
nop
dec
cmc
idivb
or
cmpsb
ds
ret
cmc
aam
cmp
scas
mov
pop
mov
stos
or
push
sbb
notl
rolb
cmp
pushf
cmp
in
popf
in
lret
popa
push
int3
mov
div
sahf
dec
and
rcl
testb
push
mov
into
sarb
lret
shlb
iret
dec
mov
mov
inc
mov
divb
sub
adc
and
scas
adc
addb
add
ds
lock
movsb
nop
lock
cmp
sub
movsb
dec
xor
dec
inc
pop
aas
add
stc
daa
iret
and
sbb
std
sbb
and
mov
das
add
int3
or
cli
sbb
or
mov
pop
mov
ljmp
cltd
movl
adc
roll
gs
dec
mov
ficoms
ret
adc
mov
sbb
lcall
xchg
es
cmp
pop
pop
sbb
lret
dec
cmp
lret
cmp
sti
sub
xor
push
rclb
jmp
cltd
sub
mov
jmp
jb
test
lahf
dec
dec
fwait
dec
inc
psrlq
popa
negl
incl
jle
cmp
cmp
push
push
xchg
insl
sbb
cmc
jnp
sbb
fistl
add
rcll
cld
xlat
add
in
add
cmp
lret
adc
sbb
adc
cmc
xchg
mov
cli
pushf
cmc
ja
sbb
nop
repnz
mov
mov
mov
idivb
lret
into
mov
addr16
mov
dec
pushf
push
movsb
dec
or
lock
lret
adc
xchg
mov
or
xor
push
xchg
mov
mov
xchg
sub
bound
adc
adc
jb
jg
push
xor
jecxz
fsubrp
xor
push
push
insl
mov
dec
insl
push
cmpsb
mov
fxch
push
fs
cld
ret
push
sbb
sub
cmpsb
pop
jb
pushf
jbe
sti
inc
das
faddl
add
sahf
xchg
push
sub
add
fildl
adc
and
cmc
mov
jmp
fucomp
cltd
in
jmp
stc
in
clc
nop
testb
push
or
ret
fildl
dec
aaa
jecxz
mov
add
add
and
loopne
movsl
scas
inc
push
xchg
mov
mov
iret
lds
subb
scas
cmpsb
mov
inc
push
xor
outsb
sbb
les
pop
dec
cltd
orb
inc
cmpl
add
add
outsb
sbb
xor
movsl
cli
gs
fxch
push
mov
mov
cs
xor
ds
repnz
stos
mov
adcl
mov
inc
aad
mov
push
add
popf
stos
ret
pushf
sti
cs
pushf
ret
loope
jmp
leave
movsb
cs
in
jnp
ss
ja
aas
rol
loope
inc
fidivrl
pop
push
sub
das
and
add
xlat
mov
shlb
js
push
cmp
add
jbe
jmp
mov
jge
dec
adc
imul
add
clc
pop
movsb
filds
and
sbb
popa
cmp
leave
jmp
rol
int
stos
stos
push
xchg
mov
daa
xor
scas
xor
inc
fsubs
adc
mov
hlt
jo
loopne
add
pop
sbb
scas
sbb
cmp
bound
xchg
cwtl
xchg
inc
sub
out
lock
adc
icebp
jns
or
mov
fwait
scas
mov
sbb
int3
fnstenv
fs
xchg
dec
add
and
aad
fwait
popf
jno
jmp
call
mov
sti
aas
mov
shll
adc
in
push
pop
test
and
xor
adc
or
das
sahf
jne
sahf
les
cmp
les
into
or
jge
sub
inc
out
cli
dec
cmp
jne
out
jae
mov
xor
iret
lcall
push
xor
add
push
ds
in
mov
notb
in
aaa
adc
scas
mov
ret
inc
ja
and
cmp
insb
fstl
cli
mov
into
loopne
cld
popf
ss
dec
xor
pop
add
pushf
insb
push
cld
in
rcll
cmp
movsl
in
test
orb
fdivrl
lret
xlat
jo
enter
pop
and
sbb
in
aas
xchg
orl
and
xor
xor
xor
testb
lret
pop
addr16
ja
jno
jo
sbb
xor
jo
and
push
pop
sub
sub
sub
sahf
mov
testb
loop
ret
loop
loopne
rolb
cmp
data16
clc
mov
inc
inc
arpl
or
dec
shll
leave
fadds
jmp
dec
mov
pop
add
out
movb
ret
pop
dec
sbb
cmpsb
cmp
sbb
add
fidivs
push
mov
arpl
int
aad
jmp
jge
loope
stos
cmp
sub
jmp
out
xchg
and
cmp
rorb
loope
adc
pop
cmp
pop
pop
int
mov
je
loop
das
mov
cmp
pop
daa
in
or
xchg
gs
xchg
sbb
inc
repnz
fcomip
jecxz
adc
insl
mov
or
sub
jo
lahf
push
ret
stos
es
rorl
xchg
pop
mov
mov
ficomps
mov
dec
mov
inc
sub
mov
dec
pop
and
and
xor
out
imul
ret
pop
inc
jae
adc
popf
sbb
sub
pop
xor
or
jb
and
stos
inc
loopne
push
lods
inc
in
mov
bound
in
aam
pop
dec
jnp
sahf
mov
movsb
out
xchg
jbe
in
pop
pop
jl
repnz
sub
in
cltd
int
pop
cmp
test
and
xchg
dec
lods
xor
in
pop
xorb
xchg
cmpsb
arpl
inc
inc
push
fisttpl
fsubp
imul
cs
stos
sub
call
cltd
mov
cli
xor
ja
imul
inc
aam
xchg
mov
mov
inc
repz
das
xchg
push
gs
mov
sub
icebp
sbbb
mul
imul
mov
or
adc
fcmovne
push
xchg
add
and
dec
and
ror
dec
sub
cmp
outsb
sbb
xchg
popa
test
out
test
mov
movsl
mov
les
daa
adc
push
repnz
inc
fsub
int3
cmp
push
dec
call
dec
stos
push
ljmp
insl
scas
hlt
gs
dec
xor
stc
mov
imul
push
scas
outsl
xchg
in
pop
or
daa
je
loope
jge
cmpb
clc
mov
push
lret
sub
jle
lret
push
int3
dec
pop
aam
std
mov
lret
lahf
test
jmp
xchg
rol
jnp
leave
xchg
cmp
add
pop
dec
nop
xchg
mov
mov
or
js
mov
cmp
sub
mov
adc
rorb
cmp
lret
jp
or
mov
adc
cmp
adc
mov
aam
cmc
adc
xchg
cli
ret
test
add
in
push
mov
and
push
adc
aam
gs
divb
into
std
push
fsts
xchg
clc
jns
push
es
inc
lret
je
daa
xchg
jne
and
xor
lods
xor
cltd
nop
jle
inc
out
out
and
movsl
dec
clc
repnz
sub
scas
aam
push
sub
mov
xor
adc
clc
mov
cmp
pop
out
inc
add
jge
popf
stos
int
dec
addr16
jnp
mov
mov
fisttps
cli
push
dec
lret
int
mov
leave
push
jne
and
add
push
and
pushf
inc
mov
and
push
shrb
cld
sbb
pop
mov
in
pop
sbb
cltd
int3
enter
and
in
insl
sub
dec
mov
dec
mov
sub
scas
fstps
lock
inc
dec
repz
cmpsb
lret
xor
cmpsb
inc
lcall
sbb
pusha
mov
lock
ja
and
jne
and
in
in
mov
and
sarl
cmpb
mov
pop
ss
and
mov
or
es
mov
sbb
loopne
add
std
dec
ds
dec
jg
jno
andb
jb
xchg
in
insb
test
sbb
popa
shll
or
lret
dec
das
stos
push
cmp
out
inc
dec
sti
jg
cmpsl
pop
mov
sahf
jge
rorl
ja
cwtl
into
pop
mov
imul
xor
testl
movsb
cmp
or
fmull
fsubs
outsl
call
lret
out
repz
out
adc
sbb
sar
dec
lahf
outsl
arpl
jno
jg
rolb
sbb
cmc
xor
pop
and
bound
cmp
xchg
lret
cltd
xchg
movsb
popf
adc
insl
fwait
xchg
in
lcall
sahf
jl
icebp
push
mov
ficompl
inc
jecxz
in
into
push
pop
in
loopne
and
mov
enter
sahf
stos
imul
je
push
sbb
lret
imul
sub
jns
jmp
jnp
test
sbb
hlt
jle
lds
mov
xor
ljmp
mov
jb
sbb
cwtl
add
in
mov
inc
add
adc
outsb
cli
ss
sub
add
dec
out
movsb
mov
jmp
adc
mov
popa
aam
pop
loop
pushf
rcr
mov
sbb
icebp
pmullw
cmp
test
mov
sti
cmpsb
pop
repz
shll
pop
jle
cmp
cld
mov
mov
cltd
stos
repnz
lret
adc
cs
add
clc
xor
fdivrp
sbb
cwtl
lock
adc
adc
jns
and
cmp
xchg
or
outsl
jge
shrb
pop
cmp
lods
insb
setne
mov
adc
cmp
dec
add
insb
scas
mov
and
push
stos
xchg
fisttps
aas
scas
dec
dec
mull
mov
stos
fmuls
jns
movsb
jmp
cli
jmp
enter
dec
ds
pop
mov
sarb
fistl
cmpsb
stos
icebp
jecxz
in
pop
cmc
std
xchg
jbe
push
push
fcom
stc
mov
lods
psrad
lods
sub
mov
adc
rclb
add
mov
stos
sahf
mov
sub
popf
cmp
les
imul
repz
or
mov
mov
imul
call
adc
cmp
jb
outsb
out
ret
lcall
hlt
xor
cmp
mov
lods
decl
jo
cmp
andw
or
leave
cmp
jecxz
addr16
jp
cltd
and
stc
repz
adc
repz
rorl
or
mov
stos
test
sub
js
ljmp
dec
jmp
loopne
xchg
lret
lods
sub
add
xor
rcr
xor
test
in
in
xchg
out
sbb
mov
pusha
call
fs
pop
sbb
pop
mov
pusha
mov
or
icebp
mov
enter
inc
mov
mov
sbb
mov
jnp
mov
dec
mov
arpl
fdivrs
pop
sbb
aad
xchg
cwtl
mov
cmp
pushf
dec
scas
call
lods
xor
shlb
hlt
fs
mov
sbb
jmp
add
mov
incb
divb
out
loope
push
xor
es
cmp
or
cwtl
bound
dec
cwtl
mov
cmpsl
mov
cmp
xchg
or
rorb
repnz
mov
pusha
mov
loopne
dec
pop
and
into
ret
sub
push
mov
or
mov
sub
in
sbb
cmp
in
popf
pop
sti
push
scas
shrb
cmp
or
js
lea
in
notb
lock
sbb
repnz
xor
pop
xorl
dec
push
std
mov
adc
mov
adc
mov
stos
mov
leave
sbb
cmpsl
mov
dec
dec
and
push
dec
add
xchg
fmuls
pusha
sub
xchg
mov
popf
xchg
push
inc
scas
and
bound
lock
lret
fwait
jecxz
lea
ss
int3
dec
out
push
sarl
adc
or
or
adc
mov
pop
cs
xchg
fimull
out
mov
out
push
mov
sbb
pop
jmp
dec
scas
imul
dec
aas
out
jbe
push
inc
mov
push
and
add
sub
cmp
mov
repz
clc
push
ret
faddl
push
inc
repz
test
dec
mov
inc
std
hlt
and
pop
shl
test
push
hlt
imul
pop
pusha
xor
sub
lds
ret
or
sbbb
sub
mov
mov
add
bound
xor
vandnps
outsb
and
fsub
xchg
xor
jp
hlt
mov
iret
aas
and
pop
push
in
dec
orb
sahf
int3
adc
rorb
pushl
aad
or
xor
inc
push
lcall
popa
dec
stos
xor
push
fidivrl
sbbl
inc
sub
cmp
push
insl
ficoml
dec
outsb
push
fwait
dec
mov
inc
addr16
into
jge
clc
int
cmc
out
popa
sub
cmc
jno
test
jno
jns
pop
data16
sbb
test
push
or
sbb
and
push
je
cltd
loope
scas
lock
xchg
and
fiadds
mov
adc
sti
push
pop
mov
xchg
cli
push
stc
push
lea
js
dec
jp
inc
dec
xchg
mov
pop
or
scas
add
mov
or
add
and
jmp
rcll
in
xchg
xor
arpl
push
sub
fsubr
movsb
push
movsl
aas
int
imul
jmp
pop
ljmp
in
dec
sub
movsl
dec
sbb
or
int
loopne
mov
aam
and
jb
mov
pop
push
repnz
aam
insl
xchg
je
cmp
sub
lret
hlt
and
and
sub
push
stos
xor
mov
cmpsl
aaa
or
jg
sub
movsl
cmpsl
imul
add
sub
pop
sub
lcall
call
mov
or
into
dec
cmp
cli
cmp
sub
cmp
int3
sub
scas
out
std
in
fiadds
in
and
jg
aas
insl
in
cli
rolb
ljmp
sti
out
push
cmp
mov
lahf
pandn
test
ret
popa
popf
dec
and
and
mov
iret
sub
xor
sbb
adc
outsb
faddl
mov
repnz
jae
pop
xor
inc
inc
cmpsb
ds
repnz
xchg
ja
lds
ds
std
test
xchg
push
cli
mov
xchg
idivb
jp
les
aas
cmp
xor
decl
psubw
test
or
aaa
dec
push
gs
lcall
or
hlt
pop
cmp
jae
cmpsb
adc
add
test
ja
mov
mov
jmp
sbb
lcall
xor
mov
rclb
cmp
push
shr
inc
mov
loopne
arpl
mov
arpl
dec
sub
dec
scas
adc
fdivl
xchg
cmpsb
test
or
xor
adc
mov
jecxz
shrl
inc
dec
push
mov
hlt
scas
insl
test
cmp
adc
mov
mov
and
rorb
push
hlt
sahf
stos
jo
pop
sbb
jg
cwtl
mov
push
mov
movsb
addr16
adc
mov
fldcw
gs
lock
push
pop
mov
jae
sub
mov
out
pop
mov
mov
insl
push
repz
shlb
mov
jns
aam
out
dec
inc
rcll
and
cli
inc
xor
shrb
aad
lods
aaa
cmp
in
mov
pop
in
lret
xor
xor
jo
jle
cmp
mov
bound
cmc
jnp
gs
mov
xchg
jo
rcll
add
loop
sti
shr
fdivrs
ja
add
outsb
mov
es
andb
or
lcall
push
adc
jle
ret
testb
push
pop
dec
xor
je
mov
out
add
test
negl
sahf
dec
cmc
jp
sub
and
sti
cmp
adc
arpl
and
gs
cmpsb
xchg
jnp
pop
push
out
sbb
push
and
sbb
lret
sbb
scas
ffree
push
out
and
jne
add
js
xor
pop
sub
sbb
iret
mov
fnstsw
mov
jb
or
lock
xor
dec
jg
and
dec
jmp
sbb
out
cmpsb
hlt
test
lock
movsb
mov
and
xchg
pop
inc
dec
push
and
bound
dec
lcall
dec
stos
sbb
jle
aam
dec
ficoml
mov
js
and
test
sbb
xor
scas
scas
add
mov
push
mov
imul
add
mov
and
test
mov
call
xchg
adc
adc
mov
xor
lcall
inc
cs
idiv
outsb
fildll
sbb
pop
cmp
xor
loope
sub
lcall
shll
adc
dec
test
mov
push
cld
pop
jns
les
pop
loope
addr16
push
adc
dec
mov
and
push
jge
pop
xor
lret
out
je
addr16
lcall
ljmp
cmpl
enter
jmp
out
jo
push
loope
and
inc
lea
xlat
sub
mov
xchg
pop
mov
dec
jmp
xchg
pop
fildl
mov
xchg
pop
cltd
xor
mov
cwtl
testl
imul
and
push
shll
int3
sub
fwait
xchg
adc
lcall
outsl
cmp
add
int3
sbb
scas
fwait
arpl
popf
jmp
cwtl
dec
inc
daa
aaa
xchg
mov
xorl
add
sahf
test
push
ljmp
or
cmp
lahf
cmp
mov
cmp
xchg
inc
imul
mov
mov
pop
movsb
sbb
mov
leave
icebp
inc
adc
icebp
cwtl
xchg
jno
xchg
mov
and
rcll
stos
mov
sbb
dec
pusha
iret
pop
std
adc
call
je
and
push
xor
fwait
jnp
lea
pop
mov
push
xor
mov
sbb
and
test
inc
mov
push
xchg
or
repz
lret
push
andb
adc
std
movl
jl
lahf
sub
cwtl
pop
xor
fs
loop
jmp
sbb
xchg
outsl
sti
mov
mov
popa
mov
ja
mov
lahf
xchg
iret
or
sbb
aas
loopne
or
add
cs
jg
add
push
cli
jbe
hlt
sub
arpl
fnstsw
mov
leave
or
cmpl
mov
add
int3
rolb
mov
movsl
inc
add
mov
mov
dec
test
cmc
inc
jb
clc
ljmp
dec
inc
lret
and
fsubrl
outsl
cvtdq2ps
ljmp
cmpsl
jle
sbb
push
fs
or
mov
add
xor
imul
sahf
out
sti
mov
fcmovnb
add
push
pop
xchg
js
xor
or
xor
sbb
mov
insb
inc
xchg
leave
sbb
imul
jne
imul
adc
call
cmp
jno
sub
pop
lds
rol
pop
in
mov
sbb
mov
mov
ret
push
lret
mov
shl
adc
push
xor
push
mov
xor
add
shl
loope
test
cmpsl
push
cmpsl
sub
pop
jmp
jae
jns
cmp
test
sub
push
inc
rorb
out
lret
int
dec
test
lds
and
adc
dec
aaa
je
jae
lock
leave
push
add
push
pop
jns
orb
jge
cmp
push
sub
jl
pop
icebp
sti
cmpsb
mov
fisubs
out
pusha
adc
lret
cmp
fists
or
in
movsb
adc
cmp
adc
pushf
mov
mov
jns
push
pop
mov
mov
into
add
add
sahf
sub
jns
cmpsl
scas
jecxz
scas
push
loope
test
cmp
test
fs
mov
inc
inc
push
es
mov
sub
popa
lret
inc
pop
jl
imul
pushw
je
ljmp
pop
test
jecxz
jmp
loopne
lret
xchg
nop
mov
ds
push
xchg
or
push
dec
mov
cmpb
push
imul
pop
jns
mov
inc
pop
in
xchg
mov
das
jb
fimull
lds
mov
cld
nop
pop
pop
add
xor
imul
push
lock
jg
jl
mov
mov
jge
add
sti
mov
ret
xchg
into
jne
pop
jae
jecxz
mov
and
aas
dec
mov
mov
not
fisubs
push
or
push
ja
lock
xlat
cwtl
rol
into
pop
xor
fmull
loop
add
sub
and
insb
leave
fildl
mov
into
cwtl
loopne
lcall
sbb
mov
das
scas
lcall
clc
rcrl
jmp
pop
clc
das
inc
pushf
pop
and
ret
add
lret
scas
xor
cmp
enter
mov
pop
call
popf
jge
mov
sub
imul
inc
lret
push
pop
movsl
scas
rcrb
mov
xchg
fsubrl
rorb
and
xchg
xchg
jmp
xor
repnz
lcall
jb
cld
cwtl
loop
insl
jae
stos
mov
adc
andl
adc
aad
hlt
mov
mov
nop
cmp
adc
sar
imul
inc
dec
add
repnz
mov
sub
xor
test
cld
sub
add
xchg
pop
sbb
or
jge
pusha
mov
test
movsl
or
adcl
rcll
dec
rcrl
movsl
movsl
stc
arpl
mov
jmp
fiaddl
adcl
push
imul
movsl
push
in
std
dec
mov
sbb
mov
sbb
fildl
ss
out
dec
xchg
and
fildll
push
xor
mov
mov
fsin
and
pop
dec
hlt
mov
out
pusha
xchg
inc
pop
dec
out
cmpsl
dec
mov
stc
mov
add
fldcw
xchg
das
mov
incb
sbb
inc
pop
jecxz
dec
call
jns
xor
lock
hlt
xchg
inc
scas
or
jb
mov
mov
or
sbb
sti
nop
pop
adcb
ss
orl
lcall
movsl
pushf
jne
movsl
subl
xlat
lcall
lret
xchg
ret
cmp
les
insl
ljmp
pusha
lea
inc
inc
and
and
push
out
xor
mov
loope
xor
or
movsl
ret
test
movsb
cmp
jnp
pop
jg
out
push
dec
push
sub
and
dec
pushf
sub
pop
rcl
add
out
push
vpsubb
jmp
ret
jmp
add
test
xor
and
jae
dec
loope
inc
xchg
loopne
dec
inc
cmp
aas
sahf
push
shl
outsl
mov
xor
inc
lcall
pop
popf
fbstp
add
add
pop
jne
or
add
cmpb
aad
repnz
dec
decb
movsl
add
scas
jno
arpl
scas
lods
ror
sbb
daa
jl
movsb
and
xchg
mov
or
gs
aam
ja
sbb
or
leave
jnp
fsubrl
mov
sub
movsl
cmc
pop
mov
rclb
fucom
imul
icebp
pop
cmpsb
mov
aaa
je,pn
imul
dec
dec
mov
sub
sti
jmp
mov
ficompl
xchg
addl
cmpsb
jle
and
xchg
cmp
sub
das
or
mov
jo
loope
fldt
sub
ds
int3
pop
xor
cs
cmpsl
add
cmp
pop
scas
fdiv
dec
ss
sub
sub
add
and
repnz
or
outsb
aam
lcall
add
and
sub
push
add
stc
mov
out
add
sahf
lcall
ja
push
loopne
pop
mov
and
dec
shrl
int
push
pop
aaa
std
push
inc
xchg
popa
sub
adc
sub
add
jnp
push
add
dec
or
sbb
popf
cmc
in
xor
fisubrs
cmp
lret
subb
aad
cmp
jo
xchg
pop
pop
pusha
jae
push
out
jb
xor
push
push
fidivs
jne
mov
and
and
rep
jb
js
stos
das
fwait
and
outsl
pushf
shll
mov
push
push
out
or
popf
push
fnsave
jg
pop
arpl
lea
arpl
repnz
arpl
sub
out
adc
sarb
mov
stos
jo
in
mov
movb
jnp
mov
mov
ret
add
mov
imul
or
cmpsl
mov
arpl
les
pop
mov
jns
out
fstpt
or
outsb
dec
stc
xchg
addr16
mov
outsl
jg
and
ret
mull
pop
idivb
mov
dec
pop
xor
and
push
xchg
xor
fcompl
inc
jle
aas
es
and
mov
int
mov
cmp
orl
push
into
jb
ja
mov
imul
push
sub
jmp
fidivrs
inc
adc
add
dec
sti
xchg
fsubrs
scas
sbb
xor
fldl
push
mov
add
lea
pop
push
les
lods
addr16
sbb
push
mov
jbe
adcl
push
ja
outsb
pop
aas
icebp
adc
cmp
rcrl
add
mov
popa
push
or
fbld
ds
pop
std
jae
mov
lahf
sbb
mov
lret
mov
stc
add
mov
xor
addl
clc
push
xchg
cmp
pushf
movl
imul
jb
call
inc
fdivs
insl
pop
xor
jmp
jmp
scas
lahf
xchg
mov
popa
sbb
jmp
movd
xor
xor
cwtl
je
pop
sbb
sarb
push
call
and
popa
rorl
cmp
outsl
rclb
repnz
mov
push
popa
nop
cmp
cmp
push
and
mov
mov
jae
push
lea
jno
in
jmp
pop
loop
std
xchg
jl
js
mov
divl
mov
ss
xchg
inc
ss
xchg
mov
mov
pop
inc
jo
loope
out
sbb
clc
lahf
imul
or
in
jl
mov
imulb
inc
mov
cmpsl
out
into
inc
int3
inc
cltd
mov
or
push
dec
and
adc
jecxz
adc
mov
shll
dec
iret
dec
in
or
lds
push
cmp
pop
fs
pop
and
rolb
adc
dec
adc
lret
jmp
pop
mov
push
fisubl
sbb
mov
ret
movsb
mov
loope
int3
pop
leave
or
jle
sub
pop
insb
mov
and
and
rol
lret
pop
sarb
xor
les
xchg
or
nop
sbbb
mov
mov
sbb
mov
dec
faddl
inc
loope
dec
test
inc
adc
push
fadds
push
scas
lods
mov
jge
dec
andl
test
lret
sbb
inc
mov
pop
dec
jb
cmc
clc
and
out
xor
pop
jle
aas
xor
daa
add
jbe
mov
clc
out
mov
add
inc
mov
jmp
iret
add
ror
rorl
movsb
xor
adc
cmp
lea
sbb
xchg
call
fnsave
inc
mov
and
dec
or
jmp
je
into
sub
popf
jl
mov
loope
sbb
dec
add
dec
xchg
loope
xor
pop
pop
inc
cli
cli
pop
inc
ds
or
dec
push
dec
sbb
out
loopne
xchg
inc
scas
cmp
into
popf
sahf
mov
jmp
push
xchg
in
mov
push
pushf
or
sbb
xchg
jnp
xchg
in
cmp
jmp
and
test
lret
jecxz
sti
push
in
inc
ss
push
scas
or
inc
les
in
sahf
cltd
push
aas
fwait
push
cli
jbe
mov
sub
jecxz
ss
ljmp
pop
test
inc
out
into
data16
sub
out
in
not
jmp
xlat
stc
lea
and
or
nop
mov
mov
add
dec
mov
sbb
test
fstl
adc
mov
icebp
jnp
rcll
mov
pop
push
aam
inc
push
or
push
push
adc
mov
les
daa
ret
mov
push
jne
and
jmp
out
fstpl
inc
mov
xor
loop
fnsave
lcall
jnp
jns
xchg
adc
aas
inc
inc
repz
push
lret
loopne
adc
dec
das
ja
push
out
mov
sbb
pop
mov
stos
inc
and
mov
push
push
scas
iret
mov
pop
sub
adc
add
push
or
xor
xor
aad
fldt
lock
mov
xchg
divb
xchg
sbb
xchg
xchg
faddl
xchg
std
add
clc
mov
out
pusha
xor
mov
in
hlt
jae
mov
loope
adc
icebp
mov
out
fwait
push
imul
roll
in
aad
sahf
sbbb
test
xlat
pop
sbb
rclb
adc
sub
add
repnz
pop
dec
sahf
sbb
fcmovu
push
pop
fisubrl
mov
inc
lods
xor
repnz
xorb
mov
xchg
mov
dec
adc
cmp
shlb
mov
scas
aad
push
mov
mov
inc
fidivrs
std
push
cmp
jns
mov
jge
xor
xchg
cmc
cmp
dec
push
adc
xchg
movsb
xor
xor
addl
and
mov
mov
arpl
dec
jle
add
adc
push
pusha
and
fwait
ret
mov
aaa
mov
push
int3
fcomps
jge
push
stos
or
cmp
sbb
mov
sahf
dec
and
sti
sub
inc
pop
ds
dec
push
cmp
and
test
mov
test
lods
cld
sbb
sub
lcall
dec
xchg
xor
insl
faddl
inc
pushw
es
int3
xor
div
in
push
jmp
sub
pop
push
loope
fimuls
inc
aad
mov
xlat
add
repnz
or
popf
aad
sarl
xor
sub
cmp
loopne
je
lds
outsb
adc
imul
stos
mov
xor
mov
lret
and
and
int3
mov
mov
and
add
inc
mov
cld
mov
jne
cmp
loop
jbe
outsl
jg
es
inc
lcall
outsb
jnp
inc
xchg
sbb
pop
inc
add
je
push
sbb
arpl
push
mov
xchg
pop
into
inc
mov
or
inc
cmpsl
mov
and
inc
cmpsb
bound
aad
ud0
cwtl
fwait
data16
iret
jno
adc
dec
dec
roll
or
rclb
adcl
lret
mov
ret
push
cmp
push
mov
iret
xchg
into
cwtl
pop
test
popf
pop
mov
leave
xor
shr
faddp
je
mov
das
jo
xor
push
xchg
dec
aad
mov
mov
pop
push
andb
sbb
dec
notl
popa
and
adc
xorl
xchg
in
cmp
adc
ja
jae
mov
xchg
fwait
ret
jg
aas
in
rolb
or
mov
jns
sub
addr16
inc
nop
pop
stos
les
push
mov
loop
mov
dec
mov
es
pop
xor
idivb
cld
cmp
jp
dec
sub
mov
push
xchg
pop
cmp
in
mov
and
pop
sbb
mov
daa
out
xor
subb
jl
cmpsb
nop
push
leave
lret
or
or
jo
fidivrl
mov
pop
and
jae
addr16
fnsave
xchg
fmul
mov
lea
or
into
lret
push
in
mov
jg
jecxz
mov
imul
pop
lea
and
fldl
mov
shll
dec
je
movsl
insb
or
sbb
call
clc
adc
ret
pop
cwtl
mov
ret
and
sbb
ja
pop
xchg
mov
push
into
and
mov
pop
dec
int3
les
xchg
call
out
cmp
jl
xor
cmp
and
cld
jmp
aam
mov
lock
mov
cli
repz
les
ss
rcl
add
call
adc
fsincos
dec
enter
or
xchg
lock
sti
sbb
es
out
sbb
lret
jg,pn
addr16
movsb
jl
push
sub
fcmovnu
xchg
push
and
xchg
sub
imull
andl
fldl
push
pop
cmpb
cmp
pop
cltd
and
xor
push
pop
insb
mov
roll
sbb
ss
cmp
add
adc
mov
mov
jb
jne
add
mov
mov
mov
dec
mov
dec
sahf
dec
dec
pop
ret
imul
mov
and
hlt
and
fadds
fsts
jnp
sti
mov
mov
mov
repnz
dec
or
das
inc
pop
call
pop
jg
mov
popf
rorb
movsl
sbb
or
movsl
es
jno
mov
stc
pushf
push
xchg
std
incb
adc
imul
aad
and
sub
mov
icebp
inc
jnp
iret
jno
arpl
orb
push
fsubs
push
jle
movb
fwait
push
xchg
xchg
popa
shlb
push
add
xor
incl
fidivs
pop
cltd
es
je
or
push
cmp
fisubrs
cmp
sbbb
ret
mov
or
rol
add
mov
ret
cmc
xchg
inc
out
xor
and
push
dec
or
push
dec
ds
pop
xlat
or
lock
push
popf
xor
cld
sbb
mov
add
pop
aam
scas
mov
mov
hlt
cmp
bound
xchg
cmc
int
cs
mov
pop
jns
psubq
shlb
nop
dec
out
stos
adc
test
out
dec
cmp
xor
jmp
incl
pop
loopne
cmp
sbb
jp
cmp
mov
std
sbb
shlb
aad
mov
les
shrl
mov
and
scas
mov
arpl
pop
and
push
loop
push
outsl
cmp
dec
stc
adc
adc
mov
ljmp
fwait
cltd
mov
inc
jno
in
xchg
or
and
outsb
fcomps
add
cli
jmp
xchg
imul
adc
pop
fsts
scas
lock
into
lret
repnz
mov
lods
pushl
nop
sbb
dec
sbbb
mov
xchg
rcl
jmp
hlt
mov
pop
cmc
or
xchg
iret
mov
mov
sti
mov
movsb
mov
jmp
mov
rolb
jp
dec
mov
loop
insb
mov
adc
pop
jle
idivl
and
jae
xlat
shrl
dec
outsb
and
addr16
jmp
sub
jmp
sub
adc
push
add
arpl
sbb
jns
mov
mov
cld
dec
stos
dec
xchg
out
hlt
cwtl
cmc
xor
pop
inc
mov
push
test
mov
je
fstl
hlt
push
movsb
mov
lret
rorl
mov
fsts
add
mov
lret
hlt
push
stos
push
sbb
in
cmp
jmp
lds
pushf
cmp
outsb
stc
sub
lods
stos
and
clc
adc
inc
mov
in
or
cmpsb
mov
xor
sbb
int
jnp
cmpsl
sub
mov
icebp
mov
stos
outsl
idiv
andb
pop
nop
popf
push
mov
xor
inc
jo
es
push
idivb
inc
stc
lea
xlat
in
dec
mov
jnp
test
mov
int3
push
ret
popf
sub
sub
adc
xchg
fucomip
jge
js
sub
cwtl
lods
sub
adc
pop
mov
jnp
pop
or
repnz
gs
mov
popf
shlb
aas
cmp
cmp
push
je
inc
fldt
lret
xor
test
push
and
adc
xor
shl
call
push
out
stc
pop
dec
mov
dec
pop
push
adc
cmp
aad
adc
iret
lds
dec
bound
xor
inc
adc
scas
or
push
je
and
fdivrl
fs
inc
mov
inc
mov
jle
fmul
pop
xchg
push
add
test
mov
scas
or
pop
xorl
mov
mov
out
pusha
push
into
inc
jnp
dec
xchg
ds
andb
mov
xor
lahf
lods
mov
ret
xchg
out
mov
sbb
push
mov
mov
sub
pop
adc
pop
fisubrs
inc
xchg
sub
or
push
outsl
frstor
pop
xor
stos
mov
cmp
call
cmp
into
outsl
and
push
pop
loopne
cli
repnz
incb
lds
fisubl
jb
sub
pop
cmp
dec
movsl
loope
in
jle
outsl
lahf
popf
jo
pop
push
push
mov
xor
shl
pop
mov
bound
jno
and
pop
outsb
lret
dec
jge
std
mov
addb
pop
inc
xor
lock
pop
jle
mov
imul
lods
lcall
cli
sbbb
jo
mov
fnstenv
mov
gs
cmc
cs
push
test
mov
call
xchg
cld
test
xor
xor
xchg
lods
xchg
pop
call
push
cmpsb
notb
add
add
mov
jmp
push
inc
xchg
je
test
sar
jmp
adc
cmp
xchg
mov
push
push
dec
aam
mov
out
ljmp
bound
loop
or
jnp
xchg
dec
cmp
cmc
add
jns
jns
rcrl
rorl
je
and
pop
cmpsb
mov
jp
dec
push
push
cld
mov
dec
push
inc
mov
cmp
mov
imul
jecxz
int
inc
sbb
cwtl
scas
js
jnp
leave
adc
sub
ret
mov
xlat
push
mov
cmp
xor
popa
add
xor
xchg
repz
hlt
mov
mov
inc
xchg
cmp
mov
cwtl
add
xlat
jno
pop
mov
cli
decb
dec
lock
int3
iret
pop
inc
pop
sbb
push
sub
sub
clc
lahf
jge
punpckhwd
jl
cltd
mov
mov
add
jle
adc
ja
arpl
adc
stc
cmp
sbb
push
lret
test
int
sti
loopne
dec
inc
jp
inc
jns
sahf
dec
pushf
cmp
dec
loop
xchg
xor
outsl
sbb
mov
aad
lcall
cmp
ss
lahf
add
out
jbe
imul
in
adc
sbb
jns
xchg
sub
xchg
jge
mov
jmp
clc
mov
lsl
push
imul
xchg
sti
inc
mov
mov
sahf
jne
lods
stc
jns
lcall
inc
sbb
rclb
adc
pop
add
xchg
jbe
or
sbb
dec
xor
jp
add
adc
stos
leave
loop
xchg
cmpl
adc
inc
xor
icebp
mov
nop
outsl
dec
cmpsb
lds
or
push
outsb
aas
jge
leave
fucomi
push
jg
je
dec
jno
jl
aaa
push
and
in
bound
xor
in
adc
mov
scas
cmp
adc
jg
and
cmpsl
adc
sub
lods
sbb
cmp
arpl
cmp
adc
vmovaps
es
std
fisubl
cmp
iret
icebp
mov
sti
aad
mov
imul
mov
jb
jbe
and
cld
push
add
fsubs
jecxz
mov
out
xor
sarl
enter
pop
mull
jne
sbb
mov
xlat
add
test
fs
aaa
dec
out
jg
rcrb
shlb
pop
frstor
push
psubd
jge
pop
mov
cmp
lods
or
outsl
repnz
mov
jne
and
mov
mov
inc
push
push
imul
outsb
inc
push
jge
adc
and
arpl
xor
lea
fs
sbb
xchg
inc
adc
sbb
lcall
dec
and
mov
sbbb
adcb
push
dec
out
cmp
jle
fs
inc
push
cmc
xchg
jbe
adc
push
mov
loope
popf
stos
je
mov
es
sub
add
dec
xorb
and
jbe
mov
inc
cmpsb
loop
sub
pop
xor
arpl
dec
mov
into
jp
sti
or
fnstenv
stos
inc
lods
andb
jno
jbe
cmp
mov
push
shll
lods
ret
sbb
pop
fwait
and
xchg
test
or
cld
pop
jns
stos
and
xchg
inc
cmp
jl
inc
adc
and
dec
jl
and
jo
jge
mov
cli
stc
jb
xor
jo
jns
and
stc
enter
fsubrl
cmc
xacquire
add
lahf
and
enter
shrl
int
push
sub
jmp
inc
inc
adc
in
dec
test
xchg
mov
loop
cwtl
sar
stc
out
cmpsb
outsb
inc
and
xchg
cwtl
mov
mov
dec
inc
mov
addr16
add
movsl
xchg
data16
in
mov
push
fcmovnb
inc
adc
sbb
pushf
mov
inc
sbb
lret
pusha
jo
dec
add
push
fxch
mov
mov
adcl
or
jnp
cli
aam
inc
pop
cs
idivb
inc
mov
mov
int3
aad
data16
inc
cmc
cmp
dec
pop
stos
lods
in
loope
test
xor
ret
bound
test
pop
das
dec
cmp
inc
mov
mov
inc
pop
std
rorb
mov
pop
test
shl
pop
inc
mov
adc
pop
dec
dec
out
adc
mov
sbb
sbb
insl
mov
das
cmp
dec
cmc
pop
jmp
jne
icebp
rorl
fiaddl
adc
je
cmp
je
aas
inc
in
clc
sbb
sbb
fndisi(8087
jae
fldcw
imul
int3
lahf
dec
add
jmp
hlt
xor
mov
lahf
dec
or
clc
mov
push
test
daa
hlt
mov
mov
aaa
pop
jge
mov
jae
push
rcll
jle
es
stos
jne
out
and
cmp
fisttpl
push
cmp
mov
scas
rorb
gs
push
adc
out
mov
icebp
fstps
jnp
movsb
or
push
push
sub
mov
ljmp
xbegin
or
and
inc
mov
cli
lea
data16
and
in
shl
and
inc
adc
xor
sub
in
ret
leave
mov
ror
dec
fnstcw
push
jmp
jne
xchg
or
out
jbe
jg
rcrl
xchg
or
push
push
jo
lods
in
and
mov
mov
sub
in
or
out
dec
and
xchg
push
leave
and
mov
inc
inc
repnz
je
test
add
pop
xchg
iret
mov
push
loop
enter
lods
push
jns
mov
ja
mov
sbb
aad
push
shlb
inc
negl
scas
adc
gs
mov
ret
insl
mov
lock
mov
push
jmp
mov
adc
adc
mov
ja
shll
jmp
mov
xor
pop
push
fcomp
sarl
cmc
out
loopne
popf
jle
adc
lods
in
cmp
testl
jp
ret
cmpsb
fwait
mov
xor
scas
lret
sbb
adc
mov
xchg
push
ljmp
adc
or
jge
adc
fsubl
xchg
test
outsl
cmp
ja
xor
inc
iret
jl
xor
fidivrs
sub
mov
ds
jl
inc
mov
dec
cli
jecxz
ja
cltd
addr16
mov
vxorps
jp
xchg
decb
jno
inc
outsl
movsl
dec
mov
dec
adc
jg
ds
outsl
into
inc
int
scas
and
int3
push
fildll
jp
gs
shrb
mov
push
rclb
pop
or
push
lods
mov
xchg
adc
ljmp
push
pop
pop
xor
add
fcompl
out
push
push
das
roll
shlb
lea
jo
bound
or
mov
mov
sbb
inc
sarl
jmp
xchg
ror
push
mov
push
and
jnp
jp
bound
or
sbb
mov
in
push
es
out
repz
lea
shrl
mov
pop
push
clc
aas
push
cs
dec
stos
xor
jbe
or
pop
or
cmp
sbb
mov
mov
or
stc
jo
in
pop
mov
call
cli
pop
out
shrb
cmp
lock
out
mov
xor
and
xchg
or
fdivp
scas
loopne
stos
push
mov
xchg
cltd
xchg
rclb
sbb
xchg
loope
inc
enter
dec
sub
ret
pop
test
stc
jne
mov
fsin
xchg
inc
jns
inc
cmp
outsb
and
or
ja
cmpsb
lret
lcall
ret
pusha
push
xor
ds
push
sub
stc
int3
jno
mov
xchg
dec
out
enter
in
out
jno
sbb
xor
mov
mov
hlt
shlb
dec
pusha
daa
js
arpl
fcoms
xorb
int3
push
push
fmull
fldl
jmp
mul
mov
mov
xor
sbb
or
aaa
add
dec
test
aas
stos
dec
rcrb
sbb
iret
dec
lret
int
push
mov
inc
popa
aas
sti
mov
xlat
lret
pushf
mov
cmpsb
xor
scas
xchg
lods
gs
pop
loop
pop
cltd
mov
rorl
cmp
push
lock
loope
nop
stc
and
xchg
mov
test
popf
add
cmpsl
xlat
lret
mov
aaa
popf
movsb
stos
xchg
jae
mov
addl
mov
cmp
imul
shl
pop
les
jge
and
or
das
push
cmp
xlat
inc
sti
cld
mov
scas
out
cs
rdseed
jp
xchg
stc
mov
scas
out
or
cmp
mov
jnp
fildl
jns
mov
lret
cmc
xchg
dec
jb
adc
sub
cli
stos
into
pop
divl
movsl
adc
int3
aaa
dec
and
adc
shl
cmp
xchg
jmp
dec
pop
je
mov
int
jnp
aad
pop
mov
test
push
dec
sub
mov
shrb
and
pop
adc
push
lcall
nop
jno
rolb
lret
in
mov
test
and
xchg
mov
inc
dec
dec
mov
adc
cwtl
rol
inc
cmp
fisttpll
mov
gs
icebp
lret
int
outsl
ds
pop
sub
or
scas
dec
in
lods
popa
lret
dec
das
push
test
mov
or
sbb
in
sbb
dec
sbb
xor
call
jp
andb
lock
push
ret
adc
cmp
ss
and
out
sbbl
aam
mov
movsl
iret
stos
call
imul
repz
inc
into
out
mov
sbb
dec
push
fs
and
push
cmpsl
dec
repz
loopne
xchg
js
xchg
movsb
jae
dec
stos
insl
out
lock
cmp
sub
inc
adc
sbbb
js
or
and
mov
pop
ret
add
je
mov
inc
mov
and
adc
inc
loope
mulb
movsl
mov
xor
aam
sahf
inc
lock
inc
js
and
and
je
gs
mov
sbb
sbb
mov
sbb
cmp
add
pop
adc
push
cmp
insl
jecxz
or
push
mov
imul
or
out
divl
pop
xchg
mov
stos
jl
lock
insl
dec
and
mov
xchg
inc
repz
es
pop
lds
dec
daa
fsubrs
jg
sub
loope
lahf
int3
xor
xor
cli
inc
jno
loop
xor
xchg
xor
stos
inc
xchg
and
imul
bound
xchg
or
decb
jne
pop
repnz
or
int
lcall
sti
pop
imul
add
dec
pop
cmpb
push
xor
call
icebp
mov
sub
dec
sbb
push
mov
js
xor
cmp
and
xchg
lock
fmuls
mov
mov
inc
orl
push
push
sbbl
add
sbb
add
xchg
mov
sub
dec
mov
inc
adc
jecxz
inc
dec
and
cli
daa
dec
fists
test
sbb
test
fcomp
mov
add
xor
repz
mov
inc
xchg
pop
adc
dec
shl
mov
xor
inc
dec
xor
sbb
jo
movsb
pop
jmp
mov
mov
lcall
push
dec
notb
es
stos
out
out
mov
push
imul
jo
push
cli
push
rolb
mov
jne
sub
sub
mov
or
lret
adc
mov
and
lcall
cmp
and
sub
loope
dec
xchg
pusha
jl
lret
fcmovnb
pop
ss
adc
lods
movsb
dec
xchg
push
or
in
popl
mov
inc
dec
pop
cmp
pusha
das
jb
or
scas
int
cmpsb
int
mov
jno
adc
adc
test
lahf
add
jmp
or
inc
sbb
imul
sub
out
push
cmpsb
mov
loopne
add
or
inc
int
sbb
fwait
xor
jmp
outsb
jl
out
adc
xor
in
dec
outsl
xchg
adc
xlat
out
and
inc
pop
testl
test
roll
inc
sarl
and
ljmp
in
fidivrs
out
jno
cwtl
lea
lcall
xchg
ja
iret
xor
in
outsb
mov
ffree
js
in
mov
dec
push
jecxz
sub
stos
xchg
and
neg
fidivl
push
lods
push
lock
cmp
sub
adc
sti
jecxz
jecxz
mov
ljmp
aam
dec
orl
mov
paddusb
clts
adc
push
ds
popf
cmpsb
xchg
or
notl
cmp
pop
mov
cli
lods
out
add
scas
nop
pop
and
stos
add
jne
ds
cmpsl
stc
std
mov
ret
xchg
cltd
cmp
aaa
and
jo
add
push
pop
pop
or
xor
push
insl
xchg
rcrb
loopne
pop
mov
in
aad
movsb
dec
jecxz
xor
hlt
out
inc
pop
cmp
jmp
jae
rcrl
lds
add
jbe
add
xor
mov
or
movsl
imul
and
xchg
je
mov
leave
xor
cmc
jns
mov
inc
sbb
das
dec
mov
mov
push
cs
mov
outsb
sbb
ja
inc
fcoml
mov
or
or
adc
ds
in
nop
loop
sbb
aam
ret
mov
xor
fdivp
mov
iret
sub
popf
sub
or
sub
pop
std
mov
lcall
data16
ficoms
push
lcall
lock
pop
pop
bound
dec
cmp
notb
les
sub
xchg
xchg
pop
cli
inc
in
cmp
sahf
mov
enter
aad
sar
cwtl
xor
decb
mov
xchg
bound
cld
movsl
call
ljmp
cmp
lahf
jns
fsubl
iret
xchg
sub
lods
mov
jl
inc
cmpsl
imul
jns
jmp
enter
and
or
sbb
cmp
movsl
or
push
call
lock
lcall
cmp
mov
movsl
mov
sub
xchg
xchg
dec
insb
sbb
inc
pop
push
lcall
jb
jns
popa
adc
aaa
ljmp
insb
nop
cli
gs
test
fdivrl
adc
dec
insl
push
pop
icebp
dec
fcoml
outsb
xor
mov
sub
and
mov
mov
jmp
mov
into
stc
dec
mov
dec
sbb
mov
xor
roll
mov
sub
outsl
cmp
stos
call
adc
rorb
xchg
jg
jl
int
adc
lods
das
test
mov
ficomps
mov
xchg
sbb
push
sub
push
popa
mov
and
inc
ret
xchg
sbb
pop
in
sub
add
pop
mov
sub
popf
lock
dec
jg
lcall
ret
mov
cmp
leave
add
pop
subb
call
loop
mov
out
std
pop
or
xor
popl
ret
orb
sub
mov
or
subl
cli
mov
imul
push
subl
test
cltd
mov
inc
lods
and
arpl
xchg
add
mov
rcrb
in
sub
test
dec
pop
sbb
adc
dec
ds
repnz
shrl
jmp
xchg
dec
push
aad
scas
ljmp
cli
pop
scas
mov
cmp
push
inc
sub
add
aas
inc
stc
pop
xor
cmpsb
adc
mov
dec
call
outsb
jle
jne
int
aam
dec
mov
mov
pusha
push
insb
lock
and
mov
xchg
pop
xchg
cmp
sbb
mov
xchg
sti
mov
sahf
push
xchg
mov
in
xor
jecxz
mov
daa
test
sarb
push
push
sbb
pop
cmp
pusha
lret
jne
dec
scas
xor
aas
lds
out
or
pop
push
push
jnp
int
pop
cmpsb
sub
outsb
pop
pusha
add
movsb
fadds
fwait
cmpsl
cld
sbb
ret
jp
insl
cwtl
ret
mov
out
jne
jge
and
popa
push
out
pop
outsl
mov
ss
push
jb
out
clc
or
aaa
imul
jbe
pop
adcb
stos
pop
push
rclb
dec
test
dec
or
movsb
mov
cli
jp
or
pop
lock
and
mov
push
xor
push
jbe
dec
in
sar
or
jno
data16
hlt
xchg
ds
imul
dec
jge
push
inc
mov
sub
jns
lock
xor
jnp
mov
inc
fldl
ljmp
jg
jns
movsb
rorb
xor
cmp
xchg
stc
stos
push
imulb
mov
adc
rorl
push
sbb
and
push
mov
lret
push
and
push
and
cmp
sbb
bound
jmp
pop
cmp
dec
aam
adc
cmp
pusha
sbb
in
lods
sti
leave
es
test
cltd
sub
icebp
daa
in
and
mov
cli
aaa
push
adc
sub
icebp
test
adc
add
in
aad
push
and
insb
std
adc
in
sbb
or
imul
lods
jp
cmpsb
aas
mov
cli
mov
insl
sahf
push
das
clc
cltd
nop
int3
scas
or
cld
out
push
lret
mov
fwait
out
sbb
imul
xchg
mov
pop
pop
std
ret
mov
out
loope
arpl
sbb
int3
inc
and
enter
cmp
int
inc
cmp
dec
in
dec
test
jns
scas
sub
ret
push
popa
incl
inc
mov
rcr
insl
inc
and
mov
cmp
and
pop
es
int3
xchg
aam
loope
das
repz
adcb
in
in
add
mov
andl
mov
into
iret
mov
jo
dec
add
cmp
xchg
ret
cld
and
das
pusha
pop
fimuls
movsl
lretw
mov
push
xor
pop
inc
mov
add
mov
mov
pushf
sahf
adc
dec
ret
adc
test
bound
adc
adc
push
rcrl
test
inc
mov
jb
jmp
ds
mov
mov
insb
test
ret
lcall
pop
push
shll
sub
adc
sbb
js
pop
mov
lret
clc
jae
add
xor
mov
mov
daa
jp
ret
aam
xor
sbb
cld
or
jge
mov
inc
adc
xchg
pop
and
sub
mov
or
or
bound
sub
fcompl
clc
rorl
loop
mov
pop
test
xor
mov
sbb
add
jp
fdivrs
cwtl
or
push
aas
sbb
in
movsb
and
fcoml
mov
cmc
test
xor
or
add
or
and
jne
adc
mov
imul
dec
filds
xchg
mov
test
sbbb
xchg
and
imul
or
push
xchg
lea
clc
mov
dec
dec
outsl
adcb
mov
push
fdiv
shll
shrb
add
shll
jmp
cmp
mov
push
pcmpeqw
lods
fwait
test
jae
jnp
js
rol
add
mov
lcall
fnstenv
aad
dec
aas
adc
cmp
movsb
pop
fnsave
jns
lcall
fwait
xor
lods
flds
sbb
fsubl
or
mov
dec
mov
cli
out
cmp
sbb
adc
or
and
data16
push
mov
bound
int3
icebp
push
or
arpl
mov
dec
pop
shr
cmp
push
ret
cmp
daa
addr16
push
lods
cmp
cld
mov
inc
sarb
mov
jns
cmpsb
lret
fwait
sub
mov
lds
scas
pop
out
and
sbb
testl
sub
and
dec
pop
mov
ret
mov
bound
mov
inc
add
jecxz
adc
jne
out
mov
sahf
iret
sub
neg
or
sub
mov
outsb
data16
cmp
fistl
xchg
popf
int
repnz
add
aaa
inc
pop
pop
dec
int3
bound
push
and
push
cmp
add
fwait
push
fmuls
mov
mov
pop
inc
xchg
push
jg
jmp
cmpsb
jl
ss
push
or
inc
std
lahf
cmp
or
pop
imul
stc
imull
mov
push
flds
sti
cmp
adc
jb
bound
xchg
push
push
adc
push
andl
mov
mov
dec
daa
sahf
movsl
push
dec
cmp
sub
sub
jno
inc
xchg
jg
dec
adc
in
pop
dec
daa
inc
aaa
fisubl
rorb
fstl
mov
aaa
push
aas
in
jmp
and
lret
mov
daa
and
pushf
cli
or
mov
into
xchg
in
lcall
lret
andl
jl
lcall
xor
sbb
es
xchg
and
pop
idiv
inc
inc
or
mov
mov
mov
pushf
jb
xchg
mov
sbb
bound
pop
mov
sub
sbb
lods
scas
out
in
fsubrl
add
cwtl
dec
dec
sub
lret
sub
rorb
movlps
les
mov
dec
cmp
cwtl
push
repz
mov
add
lods
mov
addr16
pop
cltd
imul
shrl
push
add
xlat
fldenv
jbe
mov
mov
mov
jb
test
js
sbb
sahf
loop
popf
in
enter
dec
popf
pop
lret
sahf
push
xchg
lods
imul
mov
cmpsb
mov
das
push
dec
cmc
ret
push
adc
dec
mov
mov
imul
in
in
xchg
cmp
push
sub
jnp
mov
in
test
push
fmuls
pop
outsl
xchg
and
sti
xor
stos
rol
loope
jno
inc
es
jecxz
cmp
lock
fmul
cs
mov
popf
clc
jg
xor
push
icebp
sub
sub
jle
dec
sub
in
cwtl
dec
insl
inc
sbb
xor
test
rcl
adc
cmpsl
clc
mov
push
pushf
mov
icebp
movsl
sahf
adc
xchg
sbb
or
and
movsl
and
or
adc
xor
jnp
popa
sti
repz
lret
stos
dec
jae
mov
jne
js
inc
das
sub
mov
add
gs
cmpsl
addb
pop
lahf
xchg
ljmp
xor
adc
sbb
sub
data16
cld
lea
pop
jb
cltd
mov
inc
dec
sub
sub
add
out
xchg
lcall
xchg
add
lock
test
shl
jge
test
add
mov
mov
push
fxch
lock
fisubrs
jmp
test
add
inc
push
sbb
pushf
cmp
push
hlt
inc
mov
jno
cmpsb
cmp
rolb
mov
in
dec
out
xor
lods
mov
aad
aaa
mov
loopne
insb
movsb
je
pop
call
inc
loope
inc
clc
xchg
jp
xor
shlb
push
mov
fisttpll
js
orl
in
or
sahf
lods
mov
fdiv
jnp
inc
fisubrl
and
sti
sbb
data16
add
jne
mov
and
outsb
clc
sbb
push
fsubs
outsl
bound
shrb
mov
mov
nop
loop
rcrl
rcl
repnz
pmuludq
arpl
pusha
cmp
sarl
xlat
sbb
sahf
and
hlt
lds
jg
mov
clc
xchg
insl
stos
je
push
std
adc
cmpsl
gs
add
shr
mov
test
mov
and
pmuludq
jb
pushw
cmp
jp
adc
or
mov
pop
lods
sbb
fnstcw
push
push
mov
mov
adc
popf
outsl
dec
stc
or
ss
push
stos
xchg
xchg
pop
ret
dec
jg
popa
cltd
sbbb
std
andl
or
in
mov
lds
ljmp
fcompl
in
movsl
mov
sub
cmpsl
sub
jb
fnstsw
jle
and
addr16
and
adc
mov
cmc
orb
dec
or
xchg
arpl
sbb
add
mov
push
or
xor
jae
jg
leave
adc
xchg
sahf
xchg
mov
repnz
add
in
nop
mov
pusha
jle
je
test
repnz
and
insb
jnp
inc
sbb
mov
fs
es
pop
pusha
stos
and
iret
cld
xor
push
out
test
lea
enter
jecxz
testb
or
mov
add
xor
into
ret
pop
aam
add
pop
mov
lods
mov
inc
stos
mov
pop
or
cwtl
cld
enter
into
xchg
arpl
inc
push
sbb
jb
or
pusha
xchg
sub
inc
test
and
sub
das
dec
dec
out
outsb
mov
sub
flds
lret
push
daa
lret
lods
cmp
jne
and
outsl
mov
mov
xor
lock
cld
rcrb
sub
mov
inc
pop
incl
cs
sbb
add
scas
mov
or
cmp
ljmp
adc
lret
mov
ljmp
movsl
xor
pushf
stos
mov
and
xor
aaa
dec
xor
push
aad
aas
outsb
stc
xor
add
dec
push
bound
mov
lret
lods
or
xor
push
cmp
loop
into
sub
cmc
imull
ffreep
adc
add
and
cmpb
cltd
inc
mov
jae
std
xor
mov
push
in
sbb
shlb
push
sbb
sbb
mov
inc
push
add
mov
push
dec
fwait
cmpsb
cmc
cmpsl
cltd
push
fwait
daa
out
out
mov
mov
lret
and
fcmovb
test
xor
push
ljmp
inc
arpl
add
jno
inc
mov
loop
test
cmpsl
or
adc
shrl
lcall
xor
dec
test
fwait
mov
push
out
ficompl
mov
push
imul
push
mov
test
ret
cltd
fbstp
shlb
jmp
sub
pop
cmp
insl
xor
cli
test
dec
jae
aaa
leave
sahf
sbb
loope
js
fwait
xchg
push
and
cmove
pop
sbb
out
dec
scas
shlb
push
outsb
inc
int3
xchg
loop
lods
flds
out
xor
divl
lods
and
stos
fildl
and
push
fldl
xor
push
inc
mov
push
or
dec
nop
js
fdivr
scas
daa
incl
fcmovnbe
and
xchg
push
sbb
mov
popl
xchg
int
sahf
inc
sbb
in
add
out
mov
vmwrite
dec
in
push
cmpsl
jno
xchg
push
jb
cwtl
aaa
mov
add
push
cmp
push
inc
inc
xchg
lods
pop
xchg
insb
shrb
or
das
xchg
jb
out
and
shrl
inc
lea
jl
pop
mov
mov
or
pop
xchg
adc
dec
in
and
insl
aad
scas
data16
in
outsb
arpl
scas
push
iret
adc
inc
notb
call
mov
xchg
sti
jmp
sbb
add
sub
adc
ret
adc
xchg
pop
cmc
cli
or
test
arpl
push
mov
fisubrl
push
int3
loopne
jge
mov
dec
jg
mov
jnp
scas
cli
mov
mov
mov
inc
jle
jg
dec
jmp
ret
daa
or
clc
push
adc
or
pop
pop
mov
adc
scas
add
clc
lods
adc
push
imul
insl
das
in
outsl
mov
out
imul
xor
data16
divb
aaa
fimull
movsb
xchg
into
pushf
cmp
popf
push
std
mov
cmp
sub
icebp
mov
in
ret
xor
mov
add
mov
push
push
es
les
je
pop
adc
dec
push
pop
xchg
mov
int
out
imul
movsb
repz
nop
push
xchg
outsb
in
adc
in
jbe
sbb
xchg
push
inc
pop
adc
fadds
xchg
sahf
pusha
push
iret
inc
mov
js
mov
sub
lahf
stos
xchg
clc
sbb
addr16
sub
cmc
xor
jecxz
ja
sbb
insl
mov
dec
mov
lret
sbb
test
pop
in
cmp
xchg
int3
repz
aad
push
mov
std
cmp
cmp
jno
push
call
outsb
mov
push
xor
call
push
jl
aad
lret
mov
mov
cmp
mov
pop
mov
in
dec
mov
in
movsl
hlt
scas
inc
mov
lock
cwtl
cmpsb
and
bound
or
jge
pop
sarb
jl
mov
repz
mov
test
rcrl
lods
int3
lea
test
xor
xchg
sbb
inc
mov
lods
ret
add
ret
jmp
jne
xchg
in
cmp
mov
mov
test
ja
push
xchg
adc
jmp
aad
shl
dec
mov
cmp
imul
sub
fcmove
push
aad
mov
xchg
cmp
xchg
cs
dec
movsb
out
and
in
insb
pop
aad
xchg
push
sahf
sub
jecxz
sub
pushf
je
ja
xchg
xchg
ret
lods
dec
mov
out
adc
mov
jmp
mov
mov
jb
sub
std
xchg
mov
and
pop
ret
mov
lahf
incb
lods
fmull
pop
inc
leave
pusha
aaa
xchg
push
fcoml
outsb
push
insb
cmp
adc
cmp
push
fadds
jmp
inc
pop
or
std
aaa
pop
push
add
inc
leave
call
call
stos
push
jb
test
add
out
jge
push
push
ret
push
mov
pop
into
lcall
into
xor
in
cmp
adc
jge
push
aam
in
cs
and
insb
jae
xchg
int3
sbb
cmp
pop
push
jl
fstps
mov
add
std
cmp
mov
inc
pop
nop
in
sub
cmpsb
fiaddl
sbb
xor
mov
xchg
int
roll
inc
sbb
jle
mov
rcrl
fidivl
lret
jb
testb
arpl
test
dec
adc
inc
leave
sbb
adc
sbb
push
mov
mov
cmpsb
addl
mov
std
mov
pop
outsl
lret
loopne
sahf
gs
pushf
lds
and
sbb
sub
adcb
xor
inc
mov
or
mov
sub
add
pop
in
jne
xchg
dec
mov
lahf
mov
fwait
xchg
cli
mov
pop
pop
mov
push
mov
mov
mov
fiadds
fcoml
rcl
mov
xor
ljmp
cmp
and
mov
dec
pusha
pusha
mov
or
push
out
cmp
cs
and
cli
inc
mov
out
cmp
xchg
leave
dec
sub
roll
or
or
cmp
pushf
es
jp
ret
lods
mov
rcrb
sbb
fcmovnb
inc
nop
clc
adc
out
jns
outsl
mov
adc
jns
popa
data16
mov
bound
lahf
mov
or
hlt
sub
imul
xchg
ss
mov
pushf
stc
jns
jmp
pop
insl
clc
daa
cmp
push
stos
or
push
dec
imul
rcl
pop
js
mov
jl
shll
popa
sbb
pushf
xlat
fwait
sub
in
xchg
xchg
or
xchg
fwait
jae
in
int3
ljmp
adc
push
out
inc
dec
pop
bound
lahf
fidivrs
shll
andb
jnp
jge
aaa
push
inc
mov
int
mov
hlt
insl
jecxz
xchg
test
shr
outsb
jo
push
shll
cmpsb
jae
lods
cli
jecxz
ja
mov
clc
ficoms
sub
loop
cs
rcr
pop
jbe
dec
jp
arpl
stos
je
cmp
fisttpll
imul
sar
test
xor
jns
test
xor
nop
jmp
mov
pop
adc
imul
and
or
xlat
test
jl
add
out
lock
jle
test
aad
pop
int3
sub
sub
adc
mov
push
dec
inc
jg
add
gs
dec
stc
jnp
push
jp
movsl
and
out
adc
xchg
or
iret
mov
fisubl
sarl
call
dec
or
je
in
or
mov
cmp
jne
in
mov
jg
addr16
pop
xor
int
push
es
push
sar
add
xchg
xor
movsb
aaa
jg
sub
mov
jge
call
loopne
mov
sbb
out
dec
das
inc
shlb
outsl
push
jmp
or
cli
mov
dec
pop
dec
adc
imulb
ss
mov
divl
daa
out
jmp
pop
out
in
roll
inc
negb
fistpll
and
add
push
sahf
adc
or
pop
sub
mov
test
stos
addr16
push
or
test
inc
jmp
in
push
jle
xchg
imul
gs
ficomps
hlt
bound
bound
loope
in
add
rorl
sbb
daa
fnstsw
pop
ljmp
out
pop
insl
and
inc
lea
mov
push
fucomi
jo
ss
mov
mov
imull
cmovnp
and
out
je
xlat
aam
push
adcb
pop
xor
mov
push
inc
cmpb
pop
sub
sti
sub
inc
and
shll
cmp
push
cmpsl
mov
jns
daa
mov
add
lret
shl
sub
add
pop
pop
adc
xor
mov
sub
out
mov
adc
add
push
ja
cmpsb
push
bound
mov
mov
mov
roll
shl
stos
xchg
and
imul
dec
push
add
lock
arpl
popf
cmp
call
arpl
mov
cmp
out
push
lea
lods
sub
jle
jbe
in
lcall
int3
sub
push
int
bound
sub
adcl
inc
mov
cmp
into
ficompl
xor
sub
popa
xchg
inc
aam
xlat
shr
lret
jg
jne
mov
xchg
movsl
in
pop
or
idivb
nop
cmp
stos
data16
pop
test
cmc
mov
and
popa
adc
fucomp
mov
cltd
adc
test
and
aad
stos
jmp
shlb
fisttps
into
mov
insl
mov
mov
loope
fsubs
xchg
xor
pushf
pop
lods
xor
out
adcb
cmp
sbb
or
cwtl
les
aas
fs
pop
nop
sub
das
ret
pop
xor
mov
mov
inc
mov
mov
sub
jg
xor
or
push
inc
and
mov
mov
sbb
addr16
jp
out
mov
xor
shl
addr16
sbb
repz
adc
sbb
nop
mov
scas
lret
int3
loop
add
in
adc
lods
add
ds
repnz
xor
aaa
cmpsb
mov
mov
js
test
push
div
mov
aas
and
xchg
mov
adc
lods
ljmp
lods
or
mov
inc
or
xchg
inc
leave
imul
loopne
rolb
das
xchg
xlat
pop
loop
jge,pt
sub
push
aaa
arpl
inc
push
lcall
fchs
mov
inc
outsb
insb
out
orl
scas
insl
push
and
sub
or
mov
mov
adc
enter
or
pop
add
xchg
xorl
jno
pop
aas
add
push
bound
enter
mov
sbb
out
sub
sti
xchg
mov
in
mov
test
jl
adc
mov
inc
mov
scas
xor
repnz
cs
cmc
inc
sub
lret
mov
dec
int
testb
sub
push
fwait
jmp
idivl
xor
outsb
xchg
pushf
mov
lock
jae
test
xchg
mov
push
cmp
inc
add
insl
mov
imul
pop
add
push
sbb
in
mov
xchg
test
cmp
js
les
push
sbb
in
jge
aad
xchg
adc
or
fistpl
enter
shr
add
xchg
bound
adc
jge
out
mov
mov
fstl
mov
and
inc
inc
dec
popa
popf
and
xchg
sub
fcompl
add
pop
movsl
cwtl
adc
and
and
fisubl
dec
fsub
mov
leave
daa
push
ja
loope
sarb
loopne
xchg
pop
mov
icebp
jmp
mov
scas
fldenv
lret
inc
xchg
jge
mov
lret
shll
adc
cli
test
ja
xchg
repnz
mov
ficoms
xchg
cmp
nop
or
std
addr16
ror
aad
cmpsl
loop
and
scas
hlt
push
not
push
enter
sub
and
push
and
pushf
daa
cmp
or
jb
xchg
das
sub
popf
pop
aas
in
clc
mov
pop
jecxz
rcrl
out
inc
push
sbb
or
mov
pop
cmc
popa
pop
jecxz
dec
shrb
fnsave
jo
cmp
add
aaa
cltd
xchg
pop
cli
int3
push
rcll
cs
lods
cs
mov
cmp
outsl
adc
out
icebp
dec
les
adc
outsl
and
adc
lods
pop
stos
inc
sarb
sahf
xchg
pushf
repz
or
enter
ljmp
testb
into
or
mov
or
and
adc
ja
lcall
xorb
out
rcll
add
imul
leave
es
rorb
inc
mov
jle
xchg
push
mov
push
push
icebp
sbb
int
lret
bound
dec
mov
cmp
cmp
cmpsb
inc
mov
adc
xor
pushf
add
jne
dec
push
outsb
daa
jne
orb
or
inc
imul
sbb
aas
test
das
sarl
cmp
rclb
add
pop
rcll
scas
sbb
add
push
sub
jg
imul
dec
fidivrl
repz
inc
cmp
jb
bound
cli
inc
iret
pop
mov
sub
idivl
xlat
leave
sub
xor
movsl
xorl
das
ja
push
sbb
in
loope
pop
jbe
mov
ss
push
xor
lds
xor
lods
inc
jp
call
lcall
jmp
pop
xchg
push
pusha
dec
jecxz
and
pop
sub
push
loopne
imul
fsubrs
call
leave
ret
sub
mov
mov
cwtl
pop
xchg
mov
dec
nop
out
fwait
cmpsb
cmp
or
add
sarl
dec
fidivrs
jo
ror
pop
jns
daa
insl
test
mov
test
hlt
mov
adc
push
mov
sti
sub
mov
sub
pop
popf
push
nop
xorb
test
cmpsb
mov
cmpsb
jns
clc
jge
lret
mov
cmp
jg
addr16
push
push
pop
push
or
adc
ds
cmp
push
xor
push
fdivrp
jle
cwtl
dec
into
inc
jno
pop
xor
shll
and
inc
inc
scas
push
xor
sti
mov
fidivrs
ljmp
bound
cwtl
mov
add
cmc
pop
in
mov
in
nop
mov
push
lret
ret
pusha
imul
inc
inc
outsl
flds
cwtl
sub
jecxz
insb
movsb
movsb
mov
sbb
cmp
sub
pop
or
mov
adc
jle
lret
or
sahf
aad
jb
iret
and
sub
pop
cld
shrl
xchg
dec
lods
add
popf
imul
pusha
sbb
fisttpll
js
imul
roll
jne
dec
shll
add
mov
adc
and
pop
gs
and
mov
je
jbe
inc
sti
or
stc
push
mov
push
add
ja
sbb
sahf
arpl
or
fcompl
cli
pushf
and
lahf
imul
loop
mov
and
popa
jl
xchg
notb
ja
lret
fcomp
pop
xchg
enter
jo
in
test
cmc
mov
sbb
push
dec
add
mov
xchg
cs
test
test
pop
aad
inc
imul
and
movsl
adc
xchg
cmp
add
pop
aaa
mov
adc
lea
sbb
cwtl
movsl
mov
ss
sub
pop
lods
dec
push
cmp
jp
dec
sub
mov
je
or
imul
jbe
and
dec
fsubrl
fldl
fmuls
enter
jl
pop
orl
sub
scas
and
leave
bnd
dec
push
in
sbb
mov
mov
or
cwtl
ljmp
lods
jecxz
xchg
imul
and
add
adc
int3
pop
int
xor
push
subl
or
stc
loop
icebp
mul
jle
mov
ret
dec
inc
pop
xor
loopne
fiadds
cmp
jno
out
scas
aas
out
je
out
sbb
call
mov
fbstp
and
or
popf
lret
ljmp
dec
push
xchg
ret
ret
adc
imul
sbb
push
mov
out
sub
add
mov
fadds
adc
xchg
jmp
push
mov
xor
jmp
int3
jnp
add
and
sbb
or
mov
lret
or
mov
jmp
pop
xchg
add
mov
inc
stos
add
mov
lret
cmp
xor
inc
icebp
xchg
mov
xor
jne
cmp
clc
jo
pushf
or
insl
xor
outsl
push
nop
pop
xchg
stos
pop
add
lret
adc
hlt
mov
ud1
mov
fstpt
inc
push
pop
push
jnp
mov
call
add
ja
mov
in
sub
push
mov
pushf
test
in
inc
std
ret
adc
push
sub
idivl
cs
sbb
and
sbb
inc
or
fildl
lret
jg
imul
mov
xor
movsb
xchg
test
push
mov
dec
cld
out
inc
dec
mov
mov
adc
push
dec
loop
push
cmc
shl
insb
rcr
sbb
cmp
add
dec
push
fstpt
out
pushf
push
subb
mov
faddl
fwait
je
mov
adc
jp
andb
int3
pop
adc
call
inc
xchg
in
cmpsl
lret
push
pop
jge
outsb
or
xchg
sarb
outsb
stc
mov
cld
test
js
fs
out
sti
in
jmp
daa
rorb
cmc
data16
xor
out
stc
xchg
fldcw
push
dec
in
or
subl
aad
aaa
test
cltd
daa
and
mov
xor
sahf
sbb
push
mov
mov
ja
and
cld
fisubrs
arpl
sbb
lret
mov
aaa
ror
pop
rclb
dec
push
cmp
cmp
sbb
in
dec
push
dec
mov
and
jnp
movsb
inc
cli
pusha
out
pusha
push
nop
jg
jb
add
cs
pop
adc
mov
iret
pop
adcl
push
or
loope
pushf
mov
pop
push
ljmp
dec
mov
dec
outsb
fwait
xor
mov
das
pop
orb
lret
pop
sti
cwtl
xor
jmp
push
jno
out
pop
sub
mov
jnp
mov
mov
mov
inc
imulb
sub
adc
int3
lods
and
pop
jecxz
sub
lea
dec
rorb
scas
jns
fldl
cmp
pop
mov
mov
test
iret
and
sbb
scas
ds
lahf
pop
fcmovnu
xchg
adc
jo
jle
lods
shll
adc
jns
cld
push
xchg
jge
mov
mov
mov
ret
andl
cmp
pop
adc
ss
into
adc
repz
mov
fstps
cld
xchg
push
and
cwtl
movsb
int3
inc
sub
test
and
addr16
mov
and
mov
mov
mov
mov
inc
dec
pop
sub
rclb
je
adc
sub
xor
add
adc
incb
push
adc
mov
sub
mov
call
xchg
movsb
daa
dec
cltd
push
addr16
jp
fst
out
ss
movsb
imul
jmp
mov
sub
dec
mov
or
push
cmp
lahf
loope
test
or
dec
loope
cs
es
adc
inc
push
iret
and
mov
jbe
mov
enter
dec
stos
pop
cwtl
mov
and
dec
mov
fsubl
mov
aam
cwtl
shll
arpl
cmc
xchg
call
arpl
fistps
addr16
arpl
adc
cmpb
imul
loope
arpl
cmp
scas
ret
xor
imul
fs
mov
mov
and
xchg
push
lret
lcall
push
push
ljmp
shll
ja
scas
gs
dec
in
inc
jno
mov
add
lret
and
daa
add
rcll
loop
out
ficomps
je
jns
nop
inc
sub
sub
imul
bound
pop
mov
aas
sub
adc
xchg
daa
in
fxch
mov
data16
repz
gs
fisttpl
xchg
mov
cmc
add
popa
imul
mov
pop
pop
lods
sub
mov
stos
jecxz
enter
mov
in
xor
hlt
add
cmp
fstps
jge
scas
aas
jle
adc
stc
or
orb
jp
stos
ja
xchg
mov
out
adc
push
test
loope
jae
mul
adc
leave
out
mov
test
cmpxchg
insl
pusha
ss
cs
mov
sbb
pop
pop
adc
insl
push
xor
hlt
imul
fucomi
sub
rcr
lret
icebp
stos
mov
popa
jnp
cmp
pushf
pop
out
insl
xchg
scas
inc
call
cwtl
xor
fsubr
leave
fildl
clc
sub
mov
rcrb
gs
inc
loopne
adc
inc
xor
subb
jns
fwait
inc
jno
jns
in
pop
loopne
clc
enter
jbe
push
push
cwtl
dec
cmp
mov
pushf
jae
or
es
mov
adc
inc
and
leave
and
sbb
inc
cmp
mov
scas
xchg
loopne
nop
fstpt
dec
adc
or
adc
aad
add
sbb
mov
xor
out
cld
push
jno
aas
inc
mov
push
mov
into
aam
aas
cmp
ret
inc
xor
pop
into
hlt
xchg
iret
stos
or
xchg
jns
or
aam
or
sub
repz
test
fmuls
cmp
ja
gs
mov
loope
sbb
lea
ds
inc
jnp
or
jae
shl
or
push
into
adc
xchg
mov
test
sbb
dec
mov
cli
ds
mov
test
xchg
test
xchg
ret
repz
xchg
fwait
sahf
imul
jae
cmpsb
xor
bound
repnz
add
es
addb
aad
jmp
inc
fwait
sbb
lret
dec
pop
mov
dec
dec
xor
xchg
push
std
dec
les
stos
sahf
inc
xlat
sbb
lods
rcll
push
adc
repz
cli
punpckhbw
fldenv
push
and
jge
xlat
dec
ss
jb
ljmp
xlat
sbb
out
xchg
add
mov
add
lds
cmp
push
enter
lods
insl
jno
in
mov
jmp
xchg
mov
mov
call
lods
fmuls
adc
jg
or
ljmp
test
ja
daa
mov
ljmp
jb
xchg
add
rcrb
pop
leave
jecxz
sbb
push
push
popf
rorb
aaa
mov
andl
int
jp
sti
lds
push
jl
sahf
add
pop
ss
lret
push
sbb
lret
pushf
fsubl
cs
bound
pop
jp
and
fwait
stos
adc
ret
popf
es
push
out
mov
jno
mov
mov
cmpsb
dec
into
rcll
jae
out
mov
fwait
xor
adc
test
daa
stos
test
ljmp
mov
adc
jp
js
lea
fcmovnb
mov
and
and
aaa
adc
inc
in
inc
aas
jp
imul
and
or
inc
dec
loop
jno
stos
or
xlat
adc
pop
or
push
rol
arpl
sbb
inc
jp
out
shlb
cwtl
sub
inc
cs
jp
lret
adc
arpl
out
bound
add
xchg
xorb
test
pop
idivl
push
mov
cmpsl
sub
push
pop
pop
push
push
loope
mov
and
addl
xor
arpl
pop
hlt
push
add
adc
mov
xor
sub
xchg
inc
jmp
xor
mov
test
stc
push
or
bound
add
push
adc
lret
movl
lcall
pop
movsb
loop
pop
test
mov
mov
sub
fucomi
or
dec
in
enter
mov
test
xor
mov
push
and
mov
sbbb
xor
xchg
mov
aad
sti
or
sbb
stc
popa
inc
sbb
cltd
inc
and
sti
jecxz
adc
mull
push
pop
adc
push
fs
lock
cmpl
nop
scas
sbb
je
addr16
inc
leave
inc
fwait
movsb
mov
sub
mov
cwtl
inc
mov
inc
ret
adc
sub
fs
lods
push
leave
pushf
loop
mov
mov
js
xchg
mov
insl
pop
pusha
inc
mov
gs
pop
orl
push
out
popf
lods
shll
cmpsb
aam
out
stos
lahf
ret
in
pop
notl
sub
dec
leave
lea
test
cmp
lods
fstpl
sbb
and
mov
cmp
rolb
lods
push
add
out
test
mov
and
push
outsl
aad
mov
out
mov
ret
cmp
xchg
xor
jb,pn
in
aad
sbb
fbstp
dec
xor
inc
negl
cmp
mov
cmp
adc
pop
ret
adc
cmpsb
rorb
sbb
movsb
jb
dec
and
jb
and
rolb
int
push
in
jns
xchg
shrl
push
loope
addr16
ficoms
and
xor
xor
push
inc
std
out
and
sub
mov
sbb
mov
lret
insb
sub
or
fmuls
mov
xchg
in
mov
aas
mov
lods
dec
cmp
mov
xor
push
mov
pusha
in
cmpsl
inc
sti
lock
adc
jecxz
cmp
jne
stos
das
fisubl
lods
pop
mov
leave
in
das
filds
movsl
dec
dec
mov
mov
dec
test
pop
pushf
mov
sub
imul
cmc
dec
arpl
enter
and
mov
fdivl
gs
ret
mov
pop
lds
dec
sbb
bound
and
add
cmp
and
mov
in
sbb
add
es
test
jmp
mov
adc
jmp
mov
and
inc
mov
pop
aad
addr16
lret
mov
inc
mov
cld
xchg
out
out
mov
inc
and
imul
cmp
jno
mov
fsubr
scas
scas
bound
cwtl
xchg
jb
stos
xor
pop
dec
insb
lods
scas
mov
arpl
into
int3
and
pusha
iret
add
das
mov
add
and
cmp
in
xchg
xchg
dec
dec
add
push
cmc
les
in
adc
and
xchg
out
or
aas
adc
iret
popf
popf
scas
adc
rolb
jnp
pop
sbb
jnp
cmc
xor
dec
mov
mov
leave
movsl
test
jae
imul
jo
cmpb
add
loop
shll
sbbb
push
xor
insb
mov
sbb
and
negl
pop
xor
out
inc
cmpsl
aam
icebp
mov
mov
dec
and
lret
xchg
jge
mov
or
mov
pop
enter
mov
out
sarl
aaa
inc
fisubl
jecxz
mov
push
pop
xchg
ja
fwait
xor
or
mov
fldl
insb
stos
xchg
mov
scas
shlb
cmpsb
xor
mov
and
pop
sub
cmpsb
dec
pop
lods
push
adc
int3
sbb
aam
lahf
push
add
cmp
jmp
shll
in
les
mov
mov
ja
fdivl
jno
incb
jne
push
cmpsl
add
shll
xchg
sahf
inc
adc
push
mov
fiaddl
fnstcw
and
lods
adc
push
mov
mov
dec
or
mov
lock
lods
mov
sub
jo
sub
mov
xchg
fildl
stc
mov
or
push
xchg
test
sti
adc
cmp
arpl
test
icebp
xor
jmp
and
mov
mov
mov
mov
clc
cmp
fwait
sub
out
push
aas
je
das
fsubrs
sub
push
dec
pop
cli
and
sub
fcmovu
inc
push
dec
scas
sbbb
arpl
sbb
jg
out
pop
insl
stos
mov
mov
mov
xchg
sarl
adc
sub
or
adc
adc
push
cli
sub
sbb
icebp
sub
fincstp
push
inc
test
sbb
mov
jne
fimuls
pusha
dec
mov
sar
or
or
rclb
fucomip
pop
sahf
lcall
popf
hlt
int3
push
mov
xor
xor
adc
push
add
xlat
fwait
mov
adc
or
popf
xor
inc
adc
adc
pop
hlt
daa
addl
fcompl
outsb
lods
cltd
mov
jle
xor
ja
loope
push
xchg
or
imul
stos
and
push
subb
mov
das
out
out
das
and
adc
loope
loope
sub
xchg
out
sbb
pushf
jns
jmp
xor
jae
scas
xor
xchg
dec
cmp
pushf
pop
aad
mov
or
fsubs
test
mov
test
pop
scas
cmpxchg
cmpsb
jecxz
push
mov
inc
and
mov
sub
cwtl
les
shll
sub
testb
adc
leave
outsl
nop
sub
sub
stos
in
movlps
int3
ret
flds
jg
movsb
das
and
test
push
jl
js
mov
orb
dec
pop
aad
dec
dec
dec
fdivrl
movsl
cmpb
outsb
sub
into
inc
push
adc
mov
jmp
cmp
or
jne
xchg
push
mov
bound
ds
cmp
leave
xor
push
sub
insb
sbb
and
test
pop
xchg
xchg
arpl
mov
add
push
inc
addb
inc
insb
in
jno
sahf
outsl
adc
out
inc
add
xor
xor
lwpval
movsl
jo
or
rol
je
xor
or
jo
pop
sbb
adc
fbstp
jbe,pn
pop
push
in
lret
imul
xor
shrl
mov
mov
jl
mov
pusha
dec
subb
push
jae
into
fcmovnb
roll
outsb
pushf
iret
call
inc
xor
lea
fs
arpl
cwtl
or
lds
pushf
adc
inc
dec
rcrl
sub
lds
cmc
jmp
xadd
xchg
jns
cmp
mov
mov
repnz
enter
ja
push
les
adc
xor
out
xor
xchg
test
dec
fldl
icebp
xor
pop
xchg
xchg
bnd
push
mov
xchg
mov
xchg
adc
leave
dec
cmc
scas
fimuls
mov
gs
xlat
movsb
add
mov
mov
outsl
shl
jno
or
push
cmpsl
or
or
outsl
mov
pop
xlat
jg
aaa
mov
xor
add
push
mov
fs
mov
adc
iret
lds
flds
shlb
cmp
cs
sbb
fs
in
js
popa
dec
icebp
mov
sti
fwait
inc
jl
mov
mov
adc
out
andb
xchg
xchg
push
insb
pop
loop
push
jnp
clc
loopne
push
movsl
pop
or
outsl
cmp
cld
and
xlat
sub
call
popf
fadds
jo
jecxz
ss
ds
das
mov
je
sub
data16
call
sub
dec
adc
dec
cli
cmp
mov
add
xor
lcall
pop
insb
and
aas
out
sub
fisttpl
push
pop
sbb
mov
adc
dec
cmpsb
aas
outsl
jnp
mov
or
or
xor
jb
cmp
add
repnz
mov
loope
push
stc
sbb
notb
stos
push
mov
into
adc
xor
pop
push
jp
push
repz
int
xchg
repz
xor
sub
adcl
xchg
xor
scas
inc
jg
and
sub
xchg
and
test
dec
cmpsl
das
enter
sbb
lret
cmc
scas
mull
cs
pop
leave
in
xor
mov
cmp
dec
scas
int
xchg
fldlg2
xor
push
cmp
sbb
xchg
out
cmc
inc
fstpl
pop
push
add
cmp
lcall
jbe
sbb
jne
mov
out
fiadds
mov
xor
add
xor
cmp
mov
jnp
xlat
mov
jge
call
das
add
arpl
mov
fdivl
mov
int3
add
jb
stos
dec
out
lcall
nop
arpl
dec
clc
pop
mov
mov
mov
ds
push
jg
and
lret
mov
mov
sti
inc
cmp
xor
les
add
push
dec
outsb
xchg
mov
inc
jmp
hlt
loopne
push
js
int3
jns
jo
andl
in
into
in
mov
jne
cmp
push
jl
mov
inc
xchg
icebp
fnstcw
push
test
sbb
fdivl
cmp
mov
hlt
pop
fstpt
inc
inc
lock
lcall
push
andl
aaa
pop
lods
repz
xor
das
pop
push
sub
xchg
push
in
fcompl
sbb
sub
cmc
mov
sbb
sub
test
mov
loopne
push
push
add
jnp
jecxz
sub
cmpsl
and
sub
aaa
jge
add
arpl
out
add
mov
sahf
xchg
mov
dec
into
cmpsl
out
sbb
and
lcall
int
push
sbb
cmp
jge
stos
outsl
ja
or
mov
popf
mov
or
fs
fsubs
and
jecxz
addb
jns
mov
mov
sub
fwait
cmp
xor
jb
adc
pop
push
outsb
xchg
jo
cltd
fsubp
xchg
imul
xchg
xor
dec
lret
imul
cli
push
cmp
arpl
ret
stos
cwtl
cmp
repz
or
sub
add
lods
push
cli
pop
mov
fwait
mov
fcomip
pushf
fwait
sbb
idivb
clc
sbb
lods
out
jbe
dec
inc
ljmp
add
adc
pop
out
cmc
sbb
addb
or
inc
test
ds
or
les
in
mov
cs
inc
and
adc
jmp
frstor
push
sti
int
mov
sbb
lods
mov
push
jge
cmp
inc
pop
ja
xchg
insl
push
jge
xchg
cs
imul
add
rcr
mov
mov
adc
pop
and
aad
ja
cmp
sti
mov
das
js
fstpt
test
hlt
sahf
int3
and
add
nop
rep
popa
sub
icebp
dec
nop
or
mov
loopne
push
popf
in
mov
movsb
pop
imul
neg
movsb
jecxz
cmp
mov
sub
lret
rolb
inc
adc
inc
jns
arpl
int
pushl
pop
pop
fwait
stos
jae
and
or
jmp
cltd
insl
iret
adc
insl
cmp
inc
mov
cmp
pop
lods
mov
jo
loope
or
xor
push
imul
pop
out
sbb
data16
adc
jle
jl
test
loop
add
xchg
es
ds
inc
jle
fisttps
add
cmp
test
cmp
popa
xor
jne
xor
add
sbb
out
mov
iret
mov
jbe
outsl
aaa
loope
mov
adc
aam
pop
out
jecxz
jbe
clc
sub
clc
or
jmp
xchg
daa
aam
orl
cmp
mov
mov
sbb
mov
adc
push
es
loopne
mov
jno
shrl
mov
fdivrs
icebp
imul
pop
lock
mov
jg
mov
scas
pop
cwtl
ja
push
cmp
mov
out
pop
leave
movsl
pop
nop
pop
push
dec
nop
mov
add
push
mov
lds
sub
add
sub
xchg
std
or
ja
aam
or
scas
mov
adc
imul
imulb
sbb
aaa
cmp
mov
jmp
fwait
cmp
pop
adc
fdiv
push
mov
mov
mov
out
leave
and
xor
fsubl
jae
mov
scas
arpl
mov
and
jge
adc
push
xor
dec
dec
mov
mov
lahf
fcompl
xor
test
mov
sbb
adc
cmp
cmc
pop
xchg
lret
sbb
arpl
cmp
repnz
lcall
jno
popf
jmp
stc
cmp
pop
lods
les
stos
pop
mov
fwait
cwtl
push
sbb
sub
sub
mov
sub
pop
ret
dec
jb
inc
adc
sbb
mov
push
inc
enter
jmp
roll
xor
daa
popf
fisttpl
lea
lret
in
lds
dec
out
arpl
stc
mov
mov
mov
sbb
pusha
ret
jge
sbb
repnz
cmp
popa
out
jo
mov
push
dec
les
or
lcall
add
pushf
xchg
jnp
xorl
pop
push
cmp
sub
mov
add
jnp
imul
pop
stc
lods
or
iret
dec
shlb
je
lahf
jle,pn
xchg
xor
ret
sbb
jl
push
popa
mov
or
adc
or
movsb
nop
test
add
xchg
andb
push
jmp
clc
sub
jnp
outsb
aaa
popl
stos
mov
loopnew
mov
or
filds
clc
cmp
pusha
jbe
adc
pop
insb
fistpll
cmc
testb
mov
pop
mul
jns
sbb
cmp
or
cwtl
lret
push
xchg
inc
mov
or
sub
test
aam
out
sub
clc
add
js
jne
jle
jns
mov
dec
sub
lret
cltd
fwait
mov
jns
fistps
push
sbb
dec
xor
mov
pop
daa
clc
push
test
dec
pop
add
insl
adc
xor
movsb
dec
popf
inc
sub
js
and
or
mov
adc
es
repnz
pop
sub
lock
push
lcall
add
pusha
test
loopne
aad
or
or
jecxz
or
in
push
outsl
fdivrs
jbe
inc
xor
in
sbb
mov
cmp
jae
std
lds
dec
cmpsb
dec
popa
cld
repnz
mov
jl
xchg
mov
mov
ret
push
jle
outsl
mov
insl
mov
mov
punpckhdq
xor
mov
mov
aaa
cmpsl
dec
mov
dec
scas
adc
out
xor
daa
jp
xchg
std
test
sbb
xchg
pusha
mov
push
or
fnstsw
adc
or
sbb
sub
push
repnz
test
lods
shl
add
rcrb
adc
clc
fdivrs
out
test
mov
and
xlat
or
xor
js
inc
icebp
out
arpl
movsb
lea
inc
test
mov
loope
jae
mov
mov
ret
hlt
jnp
testb
aad
jbe
lret
imul
sbb
jae
aam
mov
jb
test
dec
rol
cmp
sbb
imul
pop
or
add
lods
pop
mov
xchg
in
cmp
dec
pop
push
cmpsl
push
pop
test
xor
cs
popf
mov
jno
xlat
movsb
push
mov
xchg
kmovb
in
mov
pop
sbb
push
sbbl
call
dec
in
or
insb
xchg
push
dec
mov
hlt
in
mov
nop
push
and
icebp
insl
sbb
cmpsb
repnz
inc
rorb
xchg
dec
jns
outsb
sti
inc
inc
fsubp
sbb
xor
cmc
lret
popf
test
cmp
push
je
inc
testl
push
adc
mov
test
xchg
movsb
push
push
call
hlt
sub
cmpsb
pop
inc
jl
gs
xlat
pushf
mov
loope
jle
rolb
add
xchg
test
gs
or
or
mov
sahf
loope
mov
xchg
iret
pop
loop
lds
jle
gs
sbb
dec
fwait
std
push
jg
mov
faddl
xchg
lret
mov
jno
pcmpgtd
test
cmp
test
jp
mov
pop
jbe
mov
push
fcmovu
jp
mov
mov
jae
out
pop
fld
sbb
hlt
popf
jp
lahf
stos
shrl
mov
adc
stos
xchg
push
psrad
daa
add
icebp
pop
jnp
ljmp
jge
mov
test
sub
das
add
mov
je
scas
mov
or
cmpsb
cmpsl
scas
push
sub
imul
mov
aad
arpl
lahf
dec
repnz
shll
shr
add
out
push
inc
dec
xorl
or
inc
je
mov
add
mov
mov
lret
pop
push
in
inc
sbb
pop
mov
mov
scas
repnz
std
in
push
sub
mov
sarl
mov
stos
and
sub
sarb
outsl
out
rorb
xor
int3
shlb
push
stos
push
xlat
stos
ret
mov
adc
pop
clc
rorb
xlat
jo
incb
sbb
sbb
jmp
adc
push
dec
xchg
dec
lock
das
data16
repnz
push
lea
jns
insl
rorl
enter
jnp
cmpsw
adcb
lds
lds
cmpsb
insb
adc
sub
rorb
jbe
aas
in
shll
mov
ja
clc
popf
jnp
and
repz
stos
addl
adc
dec
mov
mov
xor
bound
sbb
mov
dec
cmp
int3
push
mov
mov
leave
mov
cmp
jg
bound
adc
in
neg
scas
out
jnp
mov
in
inc
add
sar
cwtl
jnp
jb
testl
mov
jb
push
mov
lock
shll
scas
sbb
mov
jne
jle
lods
jecxz
jo
mov
adc
cltd
ret
inc
nop
mov
outsl
cli
in
fisubl
movl
scas
adc
out
jle
cmp
scas
pop
push
push
into
sarb
orl
imul
or
fs
adc
repnz
mov
ds
jb
sbb
adc
cmc
mov
fdivrl
outsl
mov
or
mov
push
out
gs
mov
pop
fadd
sub
out
imul
inc
xlat
leave
jae
cli
mov
movsl
adc
jae
outsl
fwait
lahf
mov
imul
outsb
dec
sti
out
push
add
sub
mov
or
push
ret
push
int
inc
mov
push
pop
insl
inc
cmp
mov
xchg
out
orb
mov
stos
mov
push
inc
test
lods
or
mov
ds
and
jecxz
mov
dec
inc
or
loopne
jne
leave
pop
pop
or
xchg
pop
es
inc
in
sub
ds
movsl
movsb
popa
test
mov
dec
in
in
xchg
xchg
lret
jno
adc
xchg
cli
jae
xor
bound
lods
mov
in
movsl
and
add
cmp
jp
jae
add
dec
rcl
xchg
pop
push
pop
sub
pop
fisubl
mov
lock
push
adc
cmp
inc
clc
ljmp
mov
cmpsb
jmp
jnp
fbstp
loope
imul
into
fs
xchg
push
adc
subb
push
lahf
lret
ret
inc
dec
icebp
jg
shll
scas
movsb
pushf
mov
dec
loopne
lods
sub
inc
pusha
aaa
lcall
mov
add
cmpsb
pop
test
popa
stc
into
ja
mov
cmp
dec
mov
insl
fdivp
push
mov
enter
jno
jae
js
sub
dec
mov
stos
ss
push
rcrl
pop
sbb
sub
out
inc
jne
inc
jmp
mulb
lods
mov
insb
xchg
clc
bound
inc
jmp
loopne
pop
das
pushl
movsl
test
fwait
pop
xor
push
inc
jns
fnstenv
aaa
dec
jno
jno
jl
int3
pop
ror
cmp
pop
std
in
dec
scas
hlt
mov
loop
test
mov
shlb
xchg
jno
xor
faddl
enter
xor
push
cmc
push
and
loopne
mov
pop
ja
aam
stc
cmp
test
aad
cs
loopne
cmp
out
mov
jmp
repnz
or
hlt
ficoms
cmp
cmpl
mov
rclb
jg
xchg
outsl
adc
pop
or
jmp
mov
push
ret
lods
mov
mov
lcall
in
jae
stos
pop
cmp
popa
stc
and
shll
bnd
dec
rorb
mov
adc
gs
pop
mov
out
mov
ret
nop
lret
aad
or
xchg
andl
lret
dec
xor
icebp
jnp
xor
movl
mov
fwait
call
or
aas
ficoml
push
sub
les
pop
dec
clc
sub
js
add
push
mov
add
nop
xchg
push
out
jnp
push
push
lahf
cmp
dec
rolb
jecxz
fsubp
stos
adc
shrl
fsubs
lea
cltd
fmuls
daa
add
ds
and
or
test
test
scas
sbb
sub
mov
cmc
jge
addr16
pop
cmc
negb
cwtl
or
jae
insb
sub
xor
and
shr
dec
movsl
or
in
arpl
sub
jp
lock
jno
sub
movsl
mov
call
push
push
rcrl
jo
cmp
ret
imul
inc
out
push
repnz
pop
movsl
aam
add
aas
sub
out
pop
inc
add
mov
pop
inc
icebp
xor
adcb
out
add
pusha
push
test
insl
rclb
adc
popw
xchg
sub
repnz
lea
ret
inc
ds
dec
mov
push
mov
jl
push
es
inc
xchg
sbb
ud0
arpl
mov
mov
pop
cmp
into
loope
divl
in
insb
pop
cmp
out
std
cmp
sbb
jge
sub
shlb
mov
out
mov
sbb
imull
xlat
xchg
hlt
and
jp
pop
cmpsl
lret
aaa
push
mov
jnp
or
fcmovnbe
mov
adc
sub
inc
test
inc
and
fidivrl
negl
iret
xor
ljmp
into
outsb
movsb
cld
xchg
inc
and
push
cltd
mov
sbb
push
mov
push
sbb
inc
xor
jo
push
sbb
push
sub
jnp
cmp
mov
cmpsb
ljmp
inc
dec
enter
pusha
pushf
xlat
scas
jnp
jecxz
mov
push
sbb
gs
call
pusha
popa
int
inc
and
ljmp
pop
negb
call
mov
mov
cmp
xor
mov
out
dec
iret
nop
mov
mov
repnz
insl
ret
and
pop
dec
cmp
xchg
cmc
jno
les
and
das
xchg
js
mov
popf
cmpsl
fdivrl
in
inc
inc
push
sbb
scas
imul
jo
jbe
outsl
xchg
ret
shll
and
nop
xor
jne
xchg
cltd
std
daa
adc
pop
and
sub
lcall
fnstsw
sbb
movsb
jecxz
add
shll
add
fwait
or
ror
hlt
sti
imul
mov
sub
jecxz
xor
sbb
mov
or
jge
jnp
or
mov
cwtl
add
lcall
sbb
pop
sti
mov
xor
xchg
mov
push
push
xor
shll
ret
xchg
gs
cmp
frstor
xor
mov
jmp
aam
sub
repnz
ljmp
add
test
cs
popa
sub
or
xchg
inc
mull
fistpll
jno
push
mov
insl
lret
iret
js
pop
orb
cmp
enter
jp
mov
jecxz
imul
dec
stos
fcmovu
jge
rorl
sbb
adc
sub
add
pop
sarl
dec
mov
in
jnp
daa
push
dec
std
int
xchg
and
rclb
int3
out
xchg
mov
movl
je
xchg
and
ljmp
push
insl
jp
cwtl
aaa
stos
enter
jae
inc
decl
sbb
aaa
sub
je
imul
sahf
sarb
loop
popf
add
adc
popa
mov
push
dec
in
mov
or
mov
jae
loopne
cli
xor
or
push
test
lahf
mov
fwait
ret
jecxz
push
mov
jl
pop
fcoms
enter
push
and
mov
pushf
rol
lcall
mov
aad
xor
icebp
sti
xor
out
sahf
mov
out
lods
xor
mov
cmp
jp
pusha
push
mov
adc
popl
loope
imul
inc
add
pop
xchg
dec
sahf
lds
sahf
push
cs
test
jne
jmp
mov
jg
inc
pop
ficoml
push
dec
stc
dec
lret
pop
ljmp
adc
daa
int3
jecxz
jnp
leave
lods
movsl
push
mov
push
sub
into
push
test
negl
test
push
test
adc
cmp
mov
sbb
xchg
or
jne
push
or
cmp
in
in
push
mov
and
cmpsb
inc
imul
lock
push
fs
sub
cmp
out
mov
add
lock
jbe
cmovl
stc
pop
fimuls
sbb
popf
or
cmp
iret
xchg
fimull
repz
sti
test
pop
adc
call
jb
cs
xor
into
pop
mov
mov
and
enter
xchg
mov
arpl
scas
dec
scas
xchg
lods
inc
out
push
jbe
adc
sub
cmc
sahf
loop
test
pop
or
jns
mov
test
shlb
aam
jl
std
lret
cltd
call
add
ds
in
pop
xchg
adc
test
shrb
or
insb
lods
sub
pushf
push
lods
cld
jecxz
cli
and
adc
mov
mov
mov
gs
inc
add
adc
mov
mov
add
loope
fidivrl
jmp
fucom
imul
es
outsb
jg
lahf
imul
adcl
out
dec
dec
jo
mov
jl
daa
or
sti
shll
pop
loope
lds
mov
iret
fidivl
jg
cwtl
notb
or
mov
js
in
jo
out
mov
mov
icebp
xor
in
imull
out
jmp
popl
int3
mov
push
xor
push
cmp
pop
xor
xchg
clc
jbe
pusha
mov
mov
dec
fld
sahf
repz
in
push
sahf
lods
jbe
outsl
add
loope
pop
in
lea
shll
xchg
ss
push
xchg
pop
fwait
xchg
sbb
call
pop
movsl
push
cmp
stos
adc
lods
fs
cmpsb
jno
aam
jb
adc
iret
lea
std
into
fsubrl
push
ret
push
mov
mov
jne
mov
jl
addl
push
pop
inc
cmp
add
jnp
shr
and
ror
push
jne
ret
cmc
dec
pusha
ljmp
jl
inc
test
mov
dec
or
iret
sahf
push
jl
mov
pop
cmp
mov
fmuls
ss
test
mov
sub
xor
mov
inc
ss
or
jl
out
aaa
cmpsb
mov
pop
xchg
mov
push
jl
mov
cmc
insl
jns
pushf
add
mov
out
popa
jno
fldenv
mov
mov
or
scas
aam
movsl
xor
repnz
movsl
test
pop
mov
in
orb
sub
pop
push
xor
daa
mov
dec
ret
mov
pop
add
in
loopne
xor
push
or
mov
ret
jmp
inc
cli
icebp
out
inc
pop
xchg
out
mov
or
mov
cmp
ret
dec
push
jb
imul
int
jne
enter
xor
push
fsubs
mov
sahf
nop
jge
fwait
xchg
enter
xchg
mov
int3
test
mov
jb
leave
shr
aad
pop
sbbl
das
jo
ret
push
mov
stos
jns
fidivrl
dec
jg
inc
test
aad
sarb
xor
es
sar
shrl
jmp
lock
scas
mov
or
pop
jmp
hlt
fdivrs
or
testb
inc
popa
repnz
jb
or
cmc
mov
xchg
add
jg
ja
xor
add
and
lret
jbe
subl
adc
gs
pushf
cwtl
cmpsl
imul
mull
scas
pop
arpl
xchg
in
pop
ja
gs
dec
jne
mov
inc
dec
cs
pop
scas
mov
sbb
sbb
daa
js
scas
rcrb
push
or
xchg
sbb
and
cmp
jns
sbb
ds
sub
or
shl
jmp
je
sub
aam
popa
jecxz
sub
sbb
or
sub
iret
mov
int
mov
and
jae
pushf
push
shlb
stos
xor
push
faddp
adcb
mov
std
aam
xor
pushf
push
jp
mov
fcmovu
lcall
orl
iret
add
int
mov
pop
cmp
loopne
imul
pop
je
inc
push
data16
in
fldenv
popa
les
adc
faddl
std
inc
pop
cmp
outsl
push
cmp
cltd
call
mov
inc
aam
fisttps
lods
mov
push
arpl
lret
test
add
dec
cmpsb
imul
shrl
mov
jp
fstpl
inc
cs
sub
mov
push
pusha
fbstp
adc
or
repnz
lcall
shrb
or
jp
repz
adc
add
adc
pop
test
clc
addr16
subl
push
cmp
fidivs
xchg
dec
in
mov
sbb
ja
sub
jmp
jp
pop
push
cmp
xor
daa
add
push
pop
ret
and
xor
sti
ffree
cmc
aam
shrl
xchg
lods
inc
pushf
jne
movsl
inc
rorl
sbb
xor
mov
pop
cmpsb
fmuls
fbld
out
cltd
mov
inc
leave
fcmovnbe
xor
test
outsb
or
inc
and
loopne
cmc
repz
std
pop
inc
jo
cmp
mov
mov
mov
jns
or
aaa
add
adc
popa
dec
outsl
leave
daa
inc
sub
into
jb
sbb
imulb
adc
dec
imul
rclb
in
ror
jg
cmpsl
dec
ret
sbb
xor
sub
cmp
jo
pop
push
pop
ds
les
or
fisubrl
cmp
mov
dec
imul
loopne
jne
sub
pushf
jmp
je
dec
aaa
rorb
aam
xor
jmp
or
in
and
lock
xor
icebp
inc
jge
mov
sbb
pop
cwtl
adc
notb
int3
fwait
adc
jge
cmp
inc
mov
idivb
pop
scas
test
lods
xor
ret
bound
jmp
mov
jbe
fcoml
loopne
inc
jg
int3
mov
sar
xor
push
xchg
push
or
stos
jl
outsl
rcr
xor
mov
mov
or
push
repz
push
int
mov
adc
dec
jo
mov
sbb
sbb
inc
adc
jl
outsl
jbe
cmpsl
mov
das
sbb
mov
addb
cli
mov
lea
repz
xchg
cmp
xor
or
sub
dec
jb
frstor
dec
leave
jmp
decb
sub
subb
jns
lcall
pop
call
or
mov
sbbl
mov
mov
sub
leave
arpl
dec
pop
dec
stos
sub
cli
je
cwtl
dec
fistl
imul
fistl
popa
pop
test
mov
fstps
push
icebp
ficoms
andl
mov
cld
pop
jns
dec
frstor
push
mov
out
cmp
nop
pxor
adc
xlat
ret
add
xor
push
inc
jge
mov
adc
inc
rorl
jmp
insb
cmp
stos
xor
lahf
call
sub
cmp
pop
push
adc
aas
shl
cmp
daa
int
in
dec
cli
and
into
bound
cmp
int
cmp
hlt
mov
add
ja
and
enter
add
lods
data16
lcall
inc
ret
sub
cmp
cmpl
sbb
mov
jle
popa
jno
hlt
sub
mov
jo
les
stos
xor
mov
pop
lds
ljmp
iret
sub
ret
and
aad
clc
test
jge
or
in
xchg
dec
jb
fistps
scas
sbb
pop
outsb
movsb
pop
jle
mov
call
push
cmc
xor
out
jb
fldenv
cmc
pop
jb
das
cmpsl
std
sbb
call
jae
pushw
sub
and
ja
pop
pop
roll
push
sti
das
sbb
std
jo
jge
xchg
enter
or
ds
pop
adc
xchg
ret
sbb
enter
or
jbe
fdivr
je
cmc
mov
hlt
jns
and
nop
xor
mov
pop
push
pop
xlat
scas
sub
lea
or
and
push
out
sub
out
incl
fucom
dec
sub
outsb
inc
rcrl
and
inc
lock
adc
pop
out
dec
out
push
mov
dec
adc
push
cmp
clc
push
scas
pop
inc
out
mov
jne
mov
shrb
in
pop
cmp
loope
addb
adc
movsl
sarl
and
lock
sub
xchg
xchg
or
nop
pop
push
pop
push
and
xlat
rcrl
xchg
incb
inc
cmp
push
test
ja
test
lret
sbb
push
lcall
and
mov
dec
lea
jbe
mov
mov
push
cltd
sub
sbb
rorb
mov
or
or
test
xor
out
inc
pop
repz
mov
mov
inc
data16
divl
scas
cwtl
xchg
lock
rorb
idivb
insb
outsb
xchg
mov
rclb
and
xchg
dec
cs
cmpsl
inc
add
mov
popf
xor
xchg
out
ds
loopne
insb
and
test
sbb
pop
imul
add
pop
sti
mov
inc
jecxz
in
js
push
jo
pop
sti
insb
and
clc
add
mov
out
push
ss
idivb
test
fnstsw
xchg
xchg
nop
mov
subb
sbb
sbb
lea
and
shlb
push
cwtl
cmp
filds
ss
fnsave
jmp
bound
adc
xchg
dec
push
ret
and
arpl
add
or
pop
dec
mov
ss
sbb
in
add
mov
test
sub
sub
pop
popf
cmove
fcmovnu
push
das
pop
inc
push
sbb
popa
aaa
jp
or
jne
dec
jl
cmp
iret
mov
push
or
push
pop
cmpl
mov
aas
out
std
loope
cmpl
xchg
lcall
push
add
pushf
sbb
lret
pop
outsb
mov
dec
xor
and
andl
xor
inc
add
mov
sahf
dec
inc
cli
loope
daa
popf
insl
mov
and
add
jp
mov
out
scas
fsubs
stos
lahf
into
jns
mov
or
sub
xchg
or
inc
jo
fucomp
and
fwait
mov
or
jp
bswap
pop
in
jo
xchg
inc
mov
mov
xchg
sub
inc
pop
jle
clc
dec
test
mov
aad
shlb
mov
add
das
cmp
add
fwait
sub
lret
jno
sub
arpl
jbe
icebp
dec
ficoms
call
adc
mov
mov
popf
cmp
ficomps
mov
and
pusha
xor
inc
roll
dec
xchg
jbe
fdivrs
cmp
cld
jle
jbe
movsl
pop
sub
mov
aas
ja
fcom
in
jae
mov
in
adc
push
push
jle
mov
dec
dec
xor
inc
add
push
xor
cmp
jmp
mov
mov
iret
push
mov
fimull
xchg
mov
and
loope
xor
in
shll
jl
sbb
and
popa
enter
ss
cwtl
cs
rorl
jnp
dec
xorb
sbb
scas
adc
mov
adcl
inc
inc
loope
js
test
xchg
push
jg
es
or
rolb
mov
cmp
pop
adc
jecxz
rolb
gs
sub
inc
adc
call
stc
and
je
add
mov
orb
mov
addr16
add
shl
and
sti
andl
and
mov
push
enter
inc
xor
inc
inc
jmp
dec
out
mov
inc
bound
aaa
mov
or
fwait
inc
les
pop
fisttps
sbb
xor
aad
mov
aas
adc
xor
fnop
jg
clc
fnstcw
xchg
or
add
sbb
pop
mov
pop
jl
sub
xor
lods
inc
xor
addr16
push
lods
jns
negb
push
mov
and
inc
lock
test
loop
adc
sbb
rcrl
idivl
aaa
fidivrl
movl
or
test
hlt
xorl
mov
push
jg
rorb
mov
push
mov
push
adc
aad
mov
cmp
adc
arpl
fiaddl
xor
rcrb
dec
nop
stos
mov
add
xor
fcmovnb
fsubr
or
push
fucomip
arpl
int
bound
sub
push
lret
out
mov
and
and
inc
push
gs
jae
lea
xchg
add
jmp
pop
dec
pop
mov
xchg
mov
pop
test
movsb
mov
pop
pusha
push
dec
jg
sbb
je
mov
cmova
cli
gs
xchg
xor
repnz
in
call
xchg
stos
dec
cmp
loope
loop
inc
js
addl
xchg
sbb
dec
inc
sub
arpl
xchg
ret
pop
sbb
orl
ret
outsb
xlat
aam
jae
fwait
jecxz
sub
mov
fucomip
push
in
dec
mov
repnz
pop
lock
loop
xchg
xor
or
mov
out
adc
xchg
lock
rolb
lret
pop
loope
or
push
or
xchg
fiaddl
mov
xchg
pop
dec
jge
test
leave
cmpsl
xchg
xor
negl
sbb
inc
aas
scas
jb
call
mov
jmp
and
scas
mov
mov
xor
stos
imul
mov
aas
jle
fldt
cltd
lahf
fisttps
lret
cmp
mov
xor
faddl
jge
mov
orb
push
pusha
cmp
and
pop
ljmp
mov
call
dec
or
mov
sbb
mov
inc
inc
fsubrl
loope
sbbb
cmpsl
std
adc
shll
add
movsb
nop
test
in
test
dec
or
add
orb
loop
sbb
push
sub
andl
pushl
inc
test
cmp
xor
hlt
leave
test
das
ja
and
inc
pop
dec
adc
out
sub
enter
es
cltd
cmc
cltd
scas
shll
mov
mov
popf
iret
jmp
iret
push
rorb
sti
das
sbb
cmpsl
test
add
mov
aas
push
mov
repz
mov
popf
jge
jmp
xchg
ret
adc
hlt
push
xchg
inc
insl
sahf
dec
jne
dec
je
jecxz
mov
add
inc
ja
outsl
gs
cmp
clc
xor
push
and
cwtl
aam
out
orl
lret
les
mov
ret
movsl
inc
and
push
mov
or
inc
and
test
jns
jbe
xor
sbb
jle
pop
cmc
stos
fwait
outsb
ret
loopne
repz
inc
daa
or
es
jb
movsb
iret
dec
sbbl
test
imul
mov
mov
pop
nop
pop
mov
in
mov
test
and
hlt
xor
adc
xor
sbb
lds
mov
movl
sub
inc
xchg
adc
iret
cmpsb
or
jge
adc
jl
fcoml
cli
leave
out
cmc
sub
adc
icebp
lcall
sub
stos
popa
cmp
mov
jb
ds
inc
into
movsb
nop
ret
add
mov
movl
sti
pushf
add
in
sbb
mov
mov
or
cs
inc
lods
daa
mov
imul
and
cmp
and
popa
scas
mov
pop
mov
movsl
add
or
or
scas
test
xor
in
lcall
fs
jg
nop
outsb
les
mov
out
in
jg
imul
mov
xor
rol
shll
mov
and
hlt
scas
ss
imul
add
ret
lds
les
mov
lret
sbb
mov
push
xor
insl
adc
pop
cmp
jno
test
enter
mov
pop
mov
iret
mov
outsb
nop
popf
rolb
adc
push
sub
jl
jb
mov
adc
mov
in
sbb
movsb
jge
and
pop
push
cs
ret
xor
enter
loope
ljmp
inc
adc
cld
jge
pop
ror
lods
and
mov
inc
pop
sub
int3
in
das
xchg
fiadds
mov
cli
jb
out
xor
dec
xchg
jns
jecxz
jge
or
movsb
int
cmp
dec
mov
fisttpl
jle
aas
push
mov
gs
int3
hlt
jge
test
aam
pushf
inc
xchg
out
pop
data16
cmp
cmp
mov
daa
xor
add
cmp
stos
imul
sbb
mov
jg
les
shlb
clc
pop
subl
cli
mov
insl
mov
pushf
sub
dec
xor
bound
xlat
fildll
loopne
dec
push
cmp
das
dec
sub
sbb
xor
insl
pop
lds
xor
mov
jnp
imul
movsl
sbb
cwtl
xor
leave
add
fldenv
test
repnz
sbb
cmc
icebp
mov
push
cltd
mov
daa
mov
or
aad
jg
dec
popf
dec
mov
adc
sbb
in
loope
pop
sti
push
int
test
pop
or
inc
dec
rcrb
mov
stos
or
out
sub
cmc
sbb
jnp
fxch
pop
notl
inc
pop
sti
sbb
pusha
neg
push
sti
mov
mov
insb
adc
movl
and
add
mov
add
addl
lret
jb
pushf
mov
std
stos
arpl
xor
fwait
lea
dec
dec
test
adc
jae
xor
or
push
jns
out
mov
js
ljmp
inc
bsr
int3
lods
add
fisttps
scas
lret
aas
inc
loop
jmp
mov
insb
ret
imul
jb
pop
and
xor
pop
or
mov
loope
adc
adc
mov
pop
clc
rorl
decb
pop
jg
adcl
in
push
andl
rcrl
sbb
push
dec
add
xor
or
push
pop
mov
cmpsb
sbb
mov
movsl
ljmp
fdivl
inc
xor
jns
aam
pushf
stos
sub
cmp
cmpsl
xchg
or
adc
and
scas
stos
out
and
pop
xchg
adcb
push
pop
jbe
dec
xchg
push
nop
clc
fsub
test
add
test
xor
sbb
aas
inc
sub
shl
andl
and
pusha
decl
aad
sbb
bound
xchg
loop
push
lret
dec
inc
addr16
lods
insl
xor
into
jge
push
cmp
outsl
cwtl
pop
sti
cmp
push
stc
stos
jle
stos
in
mov
push
mov
mov
clc
jge
xlat
lods
and
loope
cmp
stos
add
sti
clc
inc
jnp
xchg
das
pop
scas
jmp
fisttpl
jecxz
mov
aad
xor
aas
popa
ljmp
push
out
in
shl
fildl
dec
movsl
inc
xchg
xchg
pop
out
jnp
inc
pusha
and
mov
push
inc
ss
fwait
in
insl
sub
xchg
jno
xor
adc
xor
add
sbb
xchg
inc
icebp
hlt
dec
sbb
pop
sbb
nop
lret
xor
idivb
jb
arpl
loop
hlt
adc
sbb
xchg
mov
jg
test
test
mov
adc
sbb
push
dec
jg
fiaddl
pop
push
dec
shlb
mov
clc
std
ljmp
push
pop
in
in
cs
cmpsb
sbb
push
dec
pop
add
imul
sbb
dec
in
dec
fucomp
xor
adc
adc
ds
fstpl
sub
dec
mov
push
fistpl
ret
pop
inc
imul
xchg
fisttpll
or
xchg
daa
test
or
ret
inc
movsb
ficompl
xchg
pop
pop
inc
pop
inc
sbb
sub
loope
xchg
jo
aad
pop
jae
ret
push
lret
call
inc
jmp
jp
out
dec
les
cli
xchg
lret
push
test
pop
and
sbb
jg
mov
int
mov
dec
sub
cmp
jl
xor
cmp
jge
push
into
ds
ds
mov
cltd
fiaddl
push
insl
sub
and
ljmp
enter
loop
cmc
xchg
test
cmpsl
mov
mov
orl
cmp
mov
sbb
test
and
in
iret
cmp
ljmp
cwtl
fsubs
push
jo
and
lret
popf
lea
mov
ja
push
mov
loop
lret
dec
loopne
xor
enter
mov
adc
push
cmpsb
cmp
andb
xchg
call
xor
fucomi
lods
mov
in
or
dec
sub
aas
scas
inc
push
mov
leave
mov
popa
daa
xor
sbb
loopne
das
out
xchg
imul
add
push
or
push
mov
aam
inc
adc
push
inc
repnz
int3
mov
fnstcw
fildll
mov
jge
mov
inc
or
out
cmp
mov
mov
or
cmp
fcmove
sbb
dec
cmp
aaa
popa
push
mov
fidivs
pop
push
fnstcw
sub
les
push
and
movsl
movsl
sar
aas
xor
add
cmc
ljmp
pop
push
xor
add
lahf
ret
push
or
repnz
fwait
xor
fwait
ljmp
and
in
mov
shll
xchg
jg,pn
lods
xchg
dec
sub
cmp
adc
mov
and
bound
notl
push
lds
movzbl
aaa
fnstsw
xchg
inc
shll
mov
cwtl
call
xchg
addr16
lret
test
mov
cmp
stc
mov
test
mov
mov
test
inc
test
sub
xchg
dec
lcall
xchg
les
mov
mov
lcall
xlat
dec
enter
jb
and
pusha
jb
and
lds
test
leave
lahf
in
movsb
sbb
jmp
in
dec
mov
jno
test
mov
mov
lret
push
lods
pop
jg
pop
sub
mov
jnp
cltd
cmpsb
push
push
jne
out
scas
adc
xchg
mov
out
je
xor
ror
push
jl
lea
mov
lcall
pop
sub
nop
sbb
sbb
push
push
sbb
adc
test
mov
dec
sbb
fcoms
mov
insb
pop
jge
jo
inc
fsts
aaa
pushf
push
dec
ret
pusha
hlt
es
inc
pop
dec
scas
inc
mov
divl
xor
mov
sbb
ret
jmp
fidivrl
ret
xchg
fadd
andb
fld
lods
or
sub
insl
shll
jmp
mov
fildll
faddp
add
cmp
cs
dec
lock
int
and
lret
xorb
pushf
adc
inc
lret
jmp
ficompl
lcall
int
fcmovnbe
outsl
pop
and
pop
iret
mov
xchg
fisubrs
pop
jnp
pushf
dec
mov
loop
adc
repz
sub
xchg
dec
in
andb
mov
cmp
add
adc
sub
cld
xchg
lock
icebp
fcompl
mov
xchg
fwait
jno
mov
fisubrs
push
ja
and
sahf
outsb
cmpsl
or
scas
dec
in
and
pusha
sub
lcall
sbb
aad
das
es
xor
xchg
and
mov
cmc
sarb
xchg
adc
out
pop
fisttps
and
idivb
pop
mov
push
cltd
mov
mov
inc
xchg
adc
jae
xchg
mov
jne
out
cmp
cmp
fs
mov
cli
adc
bnd
outsl
lock
push
fmuls
sbb
inc
xchg
test
cmp
mov
rclb
sbbb
repz
lods
push
ja
dec
mov
arpl
xor
into
xor
rcl
stos
ja
int
mov
xchg
sub
mov
mov
inc
repz
xor
cmc
out
je
mov
stos
push
mov
mov
std
mov
fidivs
arpl
in
mov
lcall
insl
scas
sahf
rcrl
imulb
mov
stc
adc
lds
pop
in
xchg
in
loopne
test
jg
fadds
test
mov
push
or
sub
daa
fbld
mov
xor
cmp
or
outsb
cmp
leave
xor
js
iret
ret
imul
cmc
xor
addl
test
popf
adc
mov
test
sti
pop
lret
sub
call
inc
push
pop
add
xor
sub
adc
ss
dec
es
inc
pop
mov
push
out
jecxz
arpl
push
push
dec
pop
lods
push
sbb
xor
and
in
int3
sbb
or
xchg
pminub
pop
cwtl
cltd
cmp
pop
fdivs
sbb
in
pop
sahf
testb
xchg
xor
push
lock
aam
ljmp
fs
pop
shrb
lret
movsl
sub
or
add
xor
push
mov
mov
jg
xchg
pop
dec
enter
fildl
hlt
nop
mov
idivl
and
and
outsb
pusha
adc
push
mov
push
dec
push
pop
aas
dec
jo
jno
and
pop
xor
popf
mov
push
mov
dec
mov
or
int3
orb
jnp
sbb
rcrb
mov
orb
pusha
es
test
cmp
arpl
add
and
xorb
pop
inc
scas
loop
sub
and
iret
outsb
mov
push
or
fcompl
inc
pushf
xchg
sub
ljmp
or
in
xor
push
pusha
inc
sub
lds
cmp
push
mov
aam
in
ja
add
dec
cli
out
push
jae
adc
sub
sbb
enter
daa
cmp
cwtl
mov
mov
xchg
cmova
enter
adc
aas
cmc
rclb
out
jae
push
lods
fadds
sbb
addr16
lret
cmp
sbb
mov
cmp
xchg
shrb
data16
test
icebp
or
inc
fimuls
sbb
mov
xchg
ds
pushf
pop
lahf
adc
ds
dec
xor
mov
dec
lock
jg
test
or
sbb
pop
xchg
xor
lea
pop
mov
dec
cmc
decl
mov
loop
clc
cmpsl
jne
mov
rcrb
add
push
fsubs
fldcw
jge
sbb
in
and
add
mov
push
mov
mov
js
sub
jnp
or
fists
inc
mov
stos
mov
pop
push
xchg
inc
xchg
dec
jecxz
xchg
mov
cmp
pop
enter
bnd
mov
ds
scas
pop
stc
inc
xchg
jecxz
xor
clc
std
insl
insl
inc
imul
mov
dec
addl
push
mov
out
jno
int3
lahf
lds
mov
aas
inc
divb
mov
mov
mov
cwtl
fnstsw
lds
ss
rcrl
in
adcl
notb
mov
ljmp
xchg
fstpl
fwait
imul
xchg
sahf
mov
jecxz
or
adc
or
add
cmpsl
repz
adc
subl
sar
rorb
orl
add
cmpsb
cmp
leave
lcall
imul
inc
ljmp
das
push
decb
lods
leave
push
and
std
insl
popa
ficoms
lret
fs
leave
negb
jo
call
shl
pop
push
leave
pop
movsl
sbb
fiadds
xchg
dec
loop
lcall
lea
imul
popf
sbb
lea
xchg
jge
pop
pop
popf
lods
in
inc
repnz
add
addr16
xchg
loopne
push
in
xlat
push
fsubs
in
dec
cli
dec
mov
rorl
mov
inc
in
ljmp
and
negl
repnz
adc
mov
aaa
pop
es
pop
shlb
hlt
sbb
pop
in
or
mov
jne
dec
out
xor
jae
jb
bound
nop
cmpsb
push
fs
es
test
push
add
cmp
push
push
dec
jle
movsb
stos
add
sub
not
sahf
movsl
jne
stc
adc
gs
jl
xor
js
mov
aam
int
dec
mov
mov
sti
add
es
inc
insb
outsb
mov
out
push
jnp
aam
daa
stc
fdivrp
rolb
xchg
movsl
iret
add
push
pop
jge
dec
or
aaa
cwtl
clc
jo
test
jecxz
andb
jb
push
iret
imul
or
adc
test
push
or
clc
cmp
out
push
sarl
xchg
mov
push
push
jns
lea
mov
xchg
pop
xchg
iret
jg
xor
push
vshufpd
jmp
mov
inc
loope
sub
add
filds
adc
dec
cmp
ss
ja
stos
movsb
or
popa
clc
icebp
or
push
ret
int
inc
loopne
sahf
mov
pop
jnp
rcll
mov
fcoms
popf
adc
aas
and
sbb
adc
popa
sbb
pop
jecxz
push
add
ds
sub
pop
lret
xchg
push
mov
lods
sbb
mov
sub
scas
mov
icebp
mov
aaa
sti
ret
add
sub
cmc
adc
jl
jb
mov
imul
lock
adc
insb
or
pop
ds
mov
nop
dec
es
xacquire
lret
popf
xor
jns
add
sub
or
push
pop
dec
call
xor
popa
stos
dec
pop
pop
mov
inc
movsb
mov
iret
popa
push
std
sbb
lock
out
sahf
jbe
hlt
iret
pop
je
sub
sub
adc
inc
add
sbb
aad
xchg
gs
sub
jne
cmp
pop
xchg
jp
jecxz
daa
and
ss
xchg
int3
fsubrs
popf
scas
cmp
dec
jno
mov
sti
push
ret
outsl
mov
jmp
les
vpunpckhbw
dec
xchg
fdivl
dec
rolb
decb
aas
mov
xchg
pusha
pop
loop
pop
hlt
daa
mull
in
rcl
mov
incb
push
xchg
sti
adc
outsl
data16
dec
jle
loope
xchg
ret
xchg
negb
repz
push
sbb
and
mov
and
push
call
and
ljmp
mov
xor
test
dec
lock
jno
sub
xor
iret
cld
jns
idiv
xorl
test
and
xor
mov
cmp
or
jmp
push
xor
cli
mov
sub
mov
or
or
push
rcl
incb
xlat
insb
push
out
sub
jecxz
cmp
das
xchg
inc
pop
push
in
ljmp
xlat
outsb
sub
add
cmc
out
mov
xchg
int
movsb
mov
push
pop
fcmovne
cmp
out
dec
es
xchg
push
inc
test
pop
rcrb
pushf
mov
push
jmp
sbb
popa
mov
jno
push
adc
ret
dec
jl
or
mov
mov
and
push
sar
and
inc
dec
fcoml
pop
insl
or
mov
repnz
je
test
pop
add
nop
pushf
or
cmp
in
pop
fimull
sub
pop
cmp
aam
mov
mov
jge
aaa
mov
add
rorb
push
mov
test
mov
stc
mov
jecxz
push
jg
mov
push
adc
jle
aad
xor
dec
xchg
stos
in
daa
sbb
test
repnz
sub
movsb
in
in
adc
divb
outsb
cmp
call
mov
pop
pushf
aad
in
cmp
cmp
sbb
jb
pop
or
rcr
out
mov
xor
lds
mov
xchg
lock
adc
or
jb
or
dec
or
push
fwait
movsb
xor
aaa
jne
xchg
jno
stos
push
or
lcall
and
and
movsl
in
dec
dec
jp
lea
dec
inc
popa
inc
int
bnd
std
dec
add
test
in
test
mov
cmpsb
or
push
xchg
orl
ljmp
sti
mov
enter
dec
imul
mov
inc
dec
stos
xor
jmp
bound
jmp
icebp
rorb
cmp
loop
push
loop
aam
ror
mov
jnp
jecxz
mov
call
mov
mov
sti
imul
out
pop
mov
xchg
ret
lahf
and
mov
pop
jae
mov
nop
loopne
xor
dec
cmp
test
fadds
lret
add
out
push
iret
mov
mov
push
iret
js
push
ret
xchg
xchg
mov
adc
xor
push
dec
push
out
out
dec
inc
lret
xlat
test
or
gs
inc
jno
sub
lods
sub
mov
shlb
rol
js
cmp
mov
mov
sbb
sub
inc
and
adc
inc
arpl
jp
jl
in
jo
das
pop
lock
adc
insb
pop
lds
jp
incb
fsubl
mov
out
loopne
mov
jl
out
and
repz
pop
xor
into
mov
cli
dec
and
adc
jbe
mov
shll
pop
popf
mov
aaa
cmp
fwait
fs
add
mov
and
jle
in
mov
xor
mov
xor
sbb
sub
mov
or
lahf
mov
flds
arpl
jge
loop,pn
xchg
out
inc
out
mov
inc
je
repnz
loop
out
or
inc
fldln2
sub
stc
push
in
mov
les
ljmp
scas
dec
in
mov
cmp
gs
lods
xchg
daa
aam
xchg
xchg
sbb
cmpsb
sub
pop
orl
mov
lret
cmpsl
inc
push
xor
xchg
sahf
xchg
pop
bound
outsl
xor
pop
jns
fstps
add
loope
sub
loopne
add
jecxz
dec
adc
popf
test
fisubrs
xchg
int
mov
ret
testl
aaa
add
stos
ljmp
add
inc
pop
xor
mov
sbbb
clc
push
push
mov
popa
pop
repnz
cmp
int
pop
cld
divb
cwtl
out
push
adcl
outsb
mov
cwtl
dec
test
ljmp
out
in
arpl
sbb
hlt
in
cmpsl
sub
test
dec
pushf
hlt
adc
stc
rcl
les
lret
mov
inc
outsb
cmp
xchg
mov
push
sarl
pop
aam
outsl
mov
inc
inc
mov
inc
or
add
imul
xor
rorl
ss
jge
loop
jl
cmp
bound
fprem
sbb
and
test
sub
aam
adc
ret
xor
push
pushf
and
cli
sub
fisttps
or
mov
jns
cmp
aam
jl
movsb
clc
movsb
pop
dec
movsl
mov
into
xorb
mov
pop
mov
jb
in
nop
divl
sbb
push
add
mov
aas
ret
notb
push
mov
xor
sbb
out
inc
ja
xlat
es
jbe
xchg
pusha
movsb
insb
inc
dec
or
jb
and
in
lcall
mov
dec
fsts
sbb
jl
pop
das
mov
push
xor
aam
sub
in
push
or
test
or
lahf
cwtl
push
adc
add
push
insb
lahf
clc
pop
insb
lods
iret
mov
lods
and
dec
outsb
sbb
push
adc
lods
arpl
fisttpl
movsl
aaa
sbb
or
mov
in
ds
jno
mov
jbe
dec
sub
mov
fimuls
fcmove
xor
shr
jp
and
sahf
jp
scas
mov
int3
sub
fs
cmp
in
push
push
push
stos
stos
inc
call
cmp
jmp
dec
dec
sub
or
xor
xlat
out
cmp
lock
int3
jb
jmp
jecxz
add
xlat
push
cli
inc
test
inc
xor
adc
jae
or
pop
sbb
push
xor
sub
sub
mov
cmpl
int
mov
mov
pop
nop
dec
and
bound
jno
sub
repnz
jno
in
inc
sbb
mull
mov
pop
test
pop
pop
in
fnstenv
xchg
mov
xorl
or
mov
in
mov
shlb
pop
add
inc
xchg
mov
dec
mov
xchg
fcmovbe
lcall
pop
mov
out
lahf
dec
loop
mov
cltd
mov
fs
mov
cmpsb
fsubl
xchg
xor
in
dec
mov
mov
push
xchg
cltd
sbbb
push
push
push
popa
ret
cmp
adc
fimull
movsl
mov
ds
sub
cmc
aam
pushf
lcall
addr16
inc
test
dec
lret
jle
xchg
adc
icebp
and
dec
mul
int3
enter
dec
add
inc
gs
cmpsl
push
sti
push
xchg
in
push
sti
clc
and
mov
ljmp
pop
fadd
adc
arpl
stos
lahf
shrl
push
mov
inc
sbb
out
sub
pop
and
decl
and
rclb
mov
test
pop
repz
mov
mov
jne
xchg
xchg
jmp
into
mov
insl
dec
es
mov
xchg
jp
scas
jp
movsl
inc
loopne
decl
in
adc
es
loope
pop
pop
stc
call
inc
sarl
sub
aaa
sarb
loop
mov
inc
imul
jle
jae
insb
cmp
pop
lods
pop
mov
mov
pop
adc
jge,pn
lret
cld
jnp
xchg
jns
cmp
pop
pop
adcl
test
sub
int
and
jno
xor
aam
sbb
adc
sub
pop
fists
inc
ret
lcall
mov
test
pop
pop
ret
lret
in
or
stc
mov
mov
mov
cmp
push
sub
fildl
aaa
mov
test
test
lods
mov
movsb
sbb
sbb
out
inc
xchg
lds
rorb
out
shlb
sbb
jmp
sbb
dec
xor
fcomps
pop
cmpsl
notl
std
mov
sub
imul
ds
sub
inc
lret
inc
sub
sbb
jecxz
mov
sbb
or
insb
adc
gs
cmp
addl
imull
or
pop
mov
push
add
jecxz
outsb
xor
cmp
mov
inc
pusha
and
sub
outsb
sahf
sub
je
jmp
loop
cmp
inc
mov
mov
xchg
fiaddl
es
inc
jne
xchg
dec
cmpl
fwait
or
adc
aas
inc
adc
dec
xor
rclb
push
mov
shll
add
inc
cmc
mov
roll
mov
jecxz
pop
imul
inc
out
ja
or
mov
dec
xchg
sbb
or
push
adc
int
add
arpl
mov
lock
aaa
cmpsb
pop
rorl
lahf
xchg
data16
lods
and
pusha
pop
sti
dec
inc
add
in
aas
lret
mov
push
enter
mov
or
dec
sub
gs
std
test
mov
mov
pop
cmpsl
xchg
sub
enter
inc
xor
and
mov
lds
push
cmp
nop
jg
enter
std
andl
arpl
repnz
add
push
lahf
lds
or
fwait
sbb
dec
xchg
add
fdivs
sbb
inc
in
pop
leave
mov
jle
lock
mov
call
dec
orb
mov
push
iret
in
and
das
jae
or
or
test
arpl
xchg
sub
daa
inc
dec
mov
icebp
sub
push
je
cltd
dec
in
sbb
in
and
jle
jne
hlt
and
adc
xor
inc
lock
mov
jp
subl
imul
jle
insb
sub
inc
dec
jbe
testb
mov
cli
out
adc
sub
cmc
xor
and
xor
cmp
test
xor
in
mov
cld
int
insb
gs
cli
mov
test
insb
lock
inc
orl
out
dec
xchg
and
mov
mov
adc
jns
mov
push
xor
adc
mov
fwait
jae
psubsw
add
cmp
mov
mov
mov
out
rcrl
push
sbb
jg
jo
roll
jb
mov
hlt
mov
out
mov
insl
loope
pop
add
push
mov
cltd
mov
inc
les
inc
lret
jge
jp
xor
jo
mov
jmp
insl
sub
scas
xchg
and
dec
mov
mov
mov
or
pop
jge
sti
out
and
lods
in
lea
je
dec
enter
aad
add
push
mov
shlb
xchg
inc
adc
mov
inc
jo
cmpsl
xor
cmp
dec
push
sub
movsl
xor
int
imul
xchg
dec
loop
nop
inc
testb
sub
adc
add
in
sbb
fcomps
aam
ja
sbb
into
xorb
cltd
push
je
stos
mov
nop
sarb
out
pop
adc
sbb
fldln2
sub
cs
scas
wbinvd
sti
xchg
dec
dec
pop
adc
xor
cmpsl
fnsave
movsl
dec
imull
xchg
dec
movsb
push
lods
out
sub
or
jo
push
jg
xchg
test
cmp
pop
inc
int
out
push
inc
mov
mov
cmp
push
flds
loop
in
xor
jecxz
lcall
adc
xor
adc
mov
push
in
in
xchg
push
xchg
loopne
aam
das
mov
mov
stc
ficoms
scas
mov
pop
mov
xor
aas
sub
cld
aas
dec
in
movsb
imul
pop
mov
sbb
into
jmp
adc
cs
shll
push
sub
add
sbb
sub
inc
cltd
addb
and
out
cwtl
and
cld
loop
xchg
lds
mov
cmp
fsubs
mov
ret
cs
jae
inc
es
dec
adc
dec
stos
jmp
sbb
repnz
aad
lahf
aaa
popf
jo
faddp
bound
test
or
mov
sub
inc
fdivrs
and
negb
clc
xor
xor
inc
test
xchg
and
das
insl
loope
jnp
hlt
mov
xchg
insl
insl
add
jne
dec
out
movsb
inc
icebp
lods
aas
leave
loope
shr
pop
in
mov
xchg
pop
in
jecxz
xorl
frstor
jno
popa
loop
repz
xor
add
enter
push
and
xchg
push
inc
out
scas
cld
adc
stos
scas
loope
hlt
testb
or
sbb
ret
pop
dec
loop
fs
pop
push
sbb
cmp
xchg
cs
js
decl
add
repz
pop
inc
ret
cmp
inc
xchg
and
mov
imul
out
mov
mov
sub
jmp
push
inc
dec
sbb
push
dec
inc
ret
jp
jne
inc
inc
int3
scas
push
mov
int3
enter
js
in
jns
pop
sbb
adc
xchg
mov
insb
test
mov
mov
and
js
aam
mov
jmp
add
ljmp
sbb
xchg
and
sub
mov
sti
stos
mov
cmc
push
sub
adc
and
push
imul
mov
xchg
popf
xor
add
lods
adc
lcall
andl
cmp
and
jle
jns
test
inc
imul
push
std
inc
js,pt
push
dec
push
pop
push
mov
push
xchg
fsubrl
mov
dec
int3
je
xchg
sub
das
icebp
or
pop
mov
clc
imul
imul
xor
or
jmp
add
mov
pop
cmp
adcl
fdivrl
push
inc
in
xchg
xchg
hlt
fiaddl
jae
or
loope
test
add
inc
xchg
or
push
scas
mov
imul
movsl
stos
pop
xor
mov
insb
inc
pop
pop
xor
stos
sbb
inc
cmp
dec
sbb
arpl
push
sub
in
call
sarl
mull
mov
scas
cmp
sub
mov
mov
jg
stos
dec
ds
mov
pop
popa
jecxz
dec
xchg
bound
nop
mov
cmp
es
sbb
stos
xor
push
pop
or
xor
aaa
sbbb
scas
call
clc
andl
jmp
fwait
nop
inc
pop
icebp
xchg
lods
loopne
mov
ror
inc
adc
scas
ror
and
sub
mov
cld
push
cmp
lea
fnstcw
xor
mov
and
and
cmpsb
sahf
pusha
ljmp
sub
aas
mov
int3
adc
daa
cmp
fdivrp
and
mov
fbld
in
jl
jge
ljmp
mov
das
in
pop
hlt
pop
xchg
lcall
fsubrp
mov
adcl
or
je,pt
mov
push
ret
jns
insb
mov
cmp
ds
daa
pop
or
sbb
sbb
fstps
cmp
les
push
sbb
fmul
push
add
gs
ss
pop
cld
inc
movsb
add
cmpsb
pop
nop
movsl
lcall
mov
ljmp
aad
jge
lock
sub
getsec
xor
fisubrs
push
lcall
or
xchg
in
push
cltd
andl
mov
ss
xor
xor
xchg
out
dec
mov
stos
cmp
fisttps
imul
das
fsubr
jg
inc
sbb
gs
pop
jo
out
cmpsb
or
and
inc
mov
mov
scas
leave
jnp
cmpsl
push
jb
cmp
jecxz
fs
push
ret
or
into
das
mov
testb
adc
mov
pop
inc
dec
mov
dec
jno
xor
inc
fstl
push
add
fldcw
test
fisubrl
inc
add
push
cmp
lods
pushf
mov
mov
addb
lahf
jb
in
mov
arpl
call
out
pop
sub
dec
inc
sbb
mov
xchg
sbb
cmp
psrad
jns
add
pop
das
dec
sub
mov
jecxz
jb
scas
pop
fildll
sahf
lds
pop
sub
xor
cltd
inc
mov
loope
xchg
subb
xor
outsl
test
mov
mov
dec
sub
stc
or
xchg
icebp
lcall
daa
test
clc
mov
jecxz
cmp
sbb
jbe
out
pusha
cmp
xlat
test
cmpsb
push
fwait
push
cmc
mov
aaa
pop
dec
xchg
mov
xor
push
push
fcmovne
push
or
sbb
inc
jne
sub
pop
pop
inc
pusha
or
in
cmp
mov
xchg
mov
dec
jl
fstps
xchg
movsb
pop
lock
fcmove
dec
add
add
call
out
add
outsb
adc
sbb
cmpsb
mov
xor
sbb
out
pushf
mov
jns
ljmp
dec
lock
xchg
mov
jae
in
jno
lret
cwtl
iret
into
gs
and
adc
jb
stc
jecxz
cmpsl
cmp
adc
xor
aam
mov
fxch
cmp
adc
and
pop
jb
or
divb
scas
jnp
mov
fnstsw
sub
stos
lods
outsb
out
ja
push
sub
loopne
sar
imul
mov
test
pushf
mulb
dec
jp
fidivs
sub
ret
test
frstor
je
leave
mov
frstor
rcrb
mov
aam
repz
and
clc
xor
rcll
mov
jg
add
dec
or
push
cmp
pop
mov
jp
dec
pop
add
xchg
popf
mov
hlt
sub
lahf
sahf
push
test
push
jne
jp
or
and
sarb
and
push
cld
jb
adc
dec
xchg
pop
push
dec
push
mov
sarb
mov
dec
sbb
icebp
aam
subb
es
loope
pushf
cmc
pop
cmpsb
cmp
jae
lret
popf
js
lock
xchg
repz
mov
push
push
ja
sbb
jmp
mov
push
aam
mov
adc
adc
rcr
lods
xchg
sahf
mov
push
int
inc
push
sti
sub
stc
push
jmp
jl
leave
divb
gs
sarl
inc
imul
jle
pop
jg
aaa
nop
cmp
xor
push
mov
sub
sbb
jmp
add
in
cmpsl
das
add
sbb
sbb
out
sbb
mov
mov
adc
scas
pop
jecxz
push
lahf
jne
mov
adc
push
push
test
pop
test
xor
ret
mov
out
in
xlat
xlat
cmpsl
add
lea
dec
dec
jp
xchg
mov
xchg
cmp
in
sub
lds
mov
mov
lret
stos
sbbl
notl
xlat
pushf
call
mov
jno
mov
add
stc
sbb
xchg
and
shl
sub
imul
cmpsl
mov
adc
subl
jbe
cltd
mov
push
test
cmovg
jle
aas
mov
inc
sbb
mov
repnz
dec
mov
dec
scas
and
or
loopne
or
call
dec
ja
lods
lcall
shrl
pop
jbe
icebp
cltd
cltd
mov
daa
icebp
jbe
fcmovne
push
imul
ss
cmp
dec
fdivr
mov
xor
fcmovb
filds
out
mov
push
xor
repnz
in
and
dec
xchg
add
xor
fistps
cltd
lret
xor
push
fstpl
xchg
sub
add
mov
in
jns
popa
jl
out
mov
icebp
push
dec
xorl
xchg
adc
fsubl
imul
out
xchg
fwait
imul
movsl
mov
add
push
cld
inc
movsb
push
pop
jp
rol
add
mov
mov
or
and
cwtl
imul
xchg
dec
lahf
sub
mov
xchg
mov
es
aad
cltd
push
pop
or
mov
mov
in
pusha
pushf
mov
pop
adc
lds
leave
and
mov
add
or
iret
popa
loope
cmp
out
or
fwait
adc
adc
xchg
mov
out
inc
insb
pop
jp
xor
cmc
mov
and
loop
pushf
fnstenv
pop
stc
ss
mov
jmp
lahf
cmp
or
inc
data16
sbb
push
icebp
clc
jmp
dec
imul
adc
lock
and
mov
je
adc
dec
xor
iret
pop
data16
cs
jge
dec
add
and
movsb
push
scas
int
push
loopne
xchg
fwait
addl
test
sbb
adc
aad
push
cmp
xor
imul
ja
stos
pop
mov
cs
jnp
popa
or
xor
cmpsl
das
mov
xchg
stc
and
push
imul
xchg
in
mov
jo
insb
push
adc
adc
xor
sub
push
cltd
in
pushf
mov
xchg
hlt
xchg
dec
test
jl
mov
rcll
test
add
movsb
test
xor
faddp
in
xor
insl
mov
jns
mov
sahf
inc
push
leave
cmp
imul
int
sub
cmp
or
cmp
fbld
jbe
add
jns
roll
dec
and
mov
mov
xor
sahf
pop
adc
lret
call
fxch
push
fdivr
sti
mov
mov
sub
insb
xchg
dec
fsub
pop
mov
ret
jo
xchg
stos
xchg
lret
inc
scas
sahf
push
cmp
les
in
mov
test
jb
cmp
jg
addb
or
cs
icebp
pushf
shll
enter
mov
gs
ret
mov
arpl
or
mov
mov
jle
adc
js
jnp
loope
mov
in
xchg
push
mov
mov
lods
cmovge
jno
push
add
jae
mov
cld
out
sub
pop
movsb
xor
out
mov
jp
adc
stos
push
mov
pop
xchg
mov
int3
sub
xor
rcll
je
test
or
and
insl
mov
mov
mov
je
ret
lahf
lahf
mov
fs
and
add
pop
cmpsb
lods
and
inc
movsb
xor
nop
popa
mov
pop
mov
fistps
and
sub
mov
in
mov
clc
repz
fidivrl
loopne
and
cmp
subb
xchg
mov
xlat
sbb
xor
addr16
repz
bnd
shll
add
mov
icebp
hlt
rorl
addr16
inc
cs
mov
xchg
lods
or
test
xchg
pop
stos
pusha
mov
stos
rep
pop
cmp
fwait
jl
aam
insl
push
mov
sti
mov
ds
jl
fmul
cmp
push
iret
sub
pop
mov
sbb
jne
aas
inc
in
aaa
outsl
xor
aaa
loope
sub
xlat
mov
cmp
jne
or
inc
push
mul
sahf
ret
pop
imul
push
pop
adc
fld1
mov
cld
or
mov
mov
jl
leave
add
insb
insl
cmp
xchg
aam
aaa
insb
ja
jbe
cwtl
add
out
adc
into
mulb
push
inc
mov
fwait
in
pusha
fistps
add
shl
sbb
data16
dec
insl
fsubs
arpl
scas
ret
xchg
jg
add
mov
cs
mov
xor
adc
ljmp
xchg
sub
inc
jge
sbb
ljmp
mov
adc
in
hlt
mov
daa
bound
ja
push
inc
data16
xor
pop
loope
pop
aaa
add
mov
mov
fldl
aas
mov
mov
or
and
inc
test
out
pinsrw
decb
sbb
lcall
repz
hlt
adc
lret
ja
popf
and
ret
mov
adc
cli
movsl
sub
les
add
call
xor
sti
fldcw
add
mov
popf
ficoms
addl
shrl
dec
in
fcomip
je
icebp
xchg
mov
ficoms
adcb
xor
movsl
jle
xor
stos
or
sub
pop
mov
dec
inc
mov
lret
mov
iret
mov
mov
mov
xor
jl
sbb
sbb
fcompl
pop
fs
out
das
mov
ret
jno
movsl
testl
add
dec
or
xchg
fadd
leave
sahf
popf
sbb
mov
cltd
pop
jns
clc
fwait
mov
cld
scas
in
addb
mov
pop
cmpsb
pop
xchg
dec
pop
sbbb
mov
xchg
xorb
cmp
nop
cmp
sub
cmpsb
data16
inc
push
cmp
test
inc
ljmp
mov
iret
int
dec
mov
and
jle
imul
jbe
add
out
mov
stos
xchg
int
or
in
loope
fcoml
pop
icebp
lahf
push
psubd
shlb
in
popa
push
scas
xchg
scas
je
gs
cs
mov
add
and
inc
or
mov
dec
dec
data16
cld
adcl
pushf
lret
xchg
ljmp
sbb
mov
mov
bswap
lret
xor
jb
xlat
sbb
xchg
mov
and
xchg
test
fcmove
lds
xor
inc
dec
ret
scas
imul
mov
lock
adc
or
test
jg
ja
mov
mov
subl
or
cwtl
stos
pop
xchg
mov
subl
mov
dec
push
sub
int
cmp
push
add
xor
jns
js
pop
mov
push
inc
jge
mov
mov
pop
cs
push
loopne
ficoms
or
mov
insb
lods
pop
movsb
xor
fists
adc
and
lds
inc
repnz
push
xchg
sbb
lcall
inc
hlt
scas
inc
push
notb
mov
mov
lods
xor
dec
pop
cmp
sahf
mov
iret
ljmp
rcrb
fisubrl
jo
and
mov
jns
fs
mov
into
in
int
jmp
sub
xorb
inc
fmul
subb
cmp
in
mov
leave
out
inc
xchg
dec
repnz
mov
dec
or
icebp
xor
dec
add
idiv
fs
pop
fcomps
cltd
repnz
lret
push
pop
lods
xor
sub
adc
push
lcall
sti
sbb
inc
cmp
inc
mov
insl
rcrl
mov
shrb
sbb
and
sbb
jge
int3
fcmovne
cmp
cmc
leave
imul
cmpl
cmp
rorl
sbb
jmp
adc
sub
or
xchg
mov
sbb
cmp
insl
xchg
fdivrl
fst
add
fbld
loope
nop
jne
fiadds
stos
jecxz
jl
sub
push
mov
jbe
movsl
or
jo
pop
rcpps
lcall
mov
xchg
sbb
adc
bound
cmp
inc
cs
xor
movsl
mov
xchg
decl
int3
xor
mov
out
sti
xchg
pop
aaa
push
mov
cs
iret
nop
lcall
mov
push
push
add
orl
xlat
fists
int3
mov
and
xor
jne
add
add
jle
mov
pop
or
mov
mov
jmp
mov
leave
pop
or
lret
mov
popa
or
add
loope
fyl2x
xor
aas
cmpsb
jge
add
out
test
sbb
imul
push
int
jecxz
popl
movsb
mov
scas
xor
and
test
xor
or
ret
loopne
addr16
mov
mull
int
popf
jmp
pop
or
adc
push
xlat
gs
jae
insl
xor
jecxz
lret
mov
or
movsl
aam
xchg
rclb
lock
sbb
fidivl
popa
clc
sti
rorl
push
pusha
xor
dec
add
gs
dec
rorb
push
push
mov
and
dec
cli
dec
adc
fsub
leave
loop
hlt
insb
shrl
in
jbe
push
clc
jmp
or
sub
jbe
add
incl
cld
setg
cs
in
xor
mov
sub
enter
push
les
inc
jne
xor
jb
or
mov
test
xor
andl
and
negl
pop
aad
dec
mov
mov
sub
sbb
es
adc
pushf
outsb
add
clc
in
adc
mov
repnz
xor
arpl
push
fcompl
pop
jne
aas
xchg
push
sbb
lea
add
les
test
shll
lods
mov
jae
imul
add
loope
out
push
ljmp
mov
xchg
mov
lahf
cli
xchg
cmp
cmc
call
push
xor
mov
lods
sub
sub
or
out
shl
fdivrs
pop
adcl
xor
sub
mov
scas
in
ret
icebp
movsb
mov
aad
push
mov
xchg
xor
call
out
mov
sti
and
ret
nop
jmp
shr
leave
pop
or
lods
scas
and
push
adc
test
movsb
mov
add
inc
sub
lret
sub
das
xlat
rol
ret
jno
mov
call
or
jl
fwait
out
or
jnp
inc
push
jl
sbb
sub
movsl
and
mov
cli
push
dec
pop
fwait
jns
mov
fistpl
mov
jge
je
je
pop
xchg
fdivrs
mov
aas
or
sbb
cmpsb
dec
cmc
dec
xchg
sub
or
in
or
ja
mov
jmp
add
mov
sbb
subl
mov
add
cmp
add
push
inc
cmp
icebp
fwait
imul
xchg
jle
int3
sub
shrb
push
inc
mov
mov
aaa
fucomp
add
int3
inc
jp
push
scas
ds
subb
xchg
jns
xchg
lods
pop
stos
loopne
divl
bound
add
push
int
pop
repnz
stc
sbb
hlt
incb
roll
adc
push
pop
push
in
idivb
jbe,pt
aad
push
dec
aas
dec
dec
mov
sub
adc
out
pusha
mov
sub
fmull
mov
pop
lea
mov
jns
push
mov
push
or
pop
pop
repnz
ret
int3
aas
sbb
outsl
mov
shll
fs
imul
ja
push
sahf
push
in
jnp
fisttpl
pop
sbb
imul
mov
flds
xlat
into
pop
data16
es
loope
shrb
pop
stc
jb
negb
movq
xchg
jbe
mov
pop
divb
jbe
jecxz
fsts
mov
mov
daa
cmp
iret
adc
into
cmp
jnp
int
mov
fimuls
sub
lea
rorl
fmuls
and
mov
xchg
dec
or
add
xor
aaa
mov
stc
inc
dec
xchg
cmc
pop
inc
ds
mov
dec
fstpl
mov
mov
mov
das
dec
fmull
in
cmp
js
xchg
test
js
lds
jb
lcall
push
add
jae
add
adc
aaa
jno
mov
jl
sahf
cmp
es
inc
jnp
cli
xchg
push
mov
sbb
pop
sbb
sub
fidivrl
push
pop
lret
adcl
lds
lcall
xor
xchg
dec
adc
xchg
jle
ret
adc
xlat
xor
pop
in
repz
enter
sbb
int3
orb
mov
lock
jnp
mov
xchg
sub
pop
sbb
push
sti
inc
shlb
fsubs
pop
pushl
aas
jo
xor
adc
mov
push
push
pop
clc
lock
jg
ljmp
cld
fstps
mov
adcl
enter
add
push
inc
loop
mov
mov
push
xchg
bound
jg
lahf
inc
push
pop
dec
notl
aas
in
jp
jbe
fucompp
lods
mov
mov
cmp
div
sbb
push
aad
dec
dec
mov
mov
stos
adc
jge
js
mov
mov
cli
sub
inc
fs
jnp
xchg
in
cli
lds
add
loope
cli
hlt
icebp
fistl
imul
sbb
push
aaa
punpckhwd
cmpsl
or
stos
idivl
xchg
add
sti
mov
repz
inc
push
shld
sub
push
and
stos
lret
int
repz
and
dec
rclb
pop
int3
mov
and
pop
push
xchg
push
fisubs
xchg
or
pusha
mov
xor
subb
ret
stc
aaa
inc
sub
push
xor
and
push
movsb
std
shll
xor
shrb
adc
xchg
nop
int3
mov
shrb
mov
xchg
test
pop
ljmp
and
sub
out
enter
jmp
mov
mov
dec
add
lods
cmp
cmp
dec
cwtl
jp
out
xor
dec
pop
out
mov
adc
cmp
sbb
int3
cmpsb
add
mov
cmp
clc
std
sbb
xchg
les
inc
mov
aas
xchg
adc
in
lcall
push
adc
xor
jbe
or
inc
mov
sub
or
adc
xor
pusha
mulb
mov
js
in
dec
loope
xchg
test
mov
aam
popf
pmuludq
mov
ds
test
cmp
mov
inc
pop
cmp
jns
fs
aam
lods
orl
shll
lahf
mov
test
pop
inc
ljmp
ja
mov
jb
inc
or
jne
jp
xchg
mov
mov
iret
dec
push
loope
jb
scas
loop
or
subl
mov
repz
inc
cli
mov
imul
repnz
repnz
push
les
pop
addr16
fdivl
and
push
xchg
lahf
fisubl
in
push
outsl
pop
jae
into
cmp
add
sahf
int
ja
jp
bound
movsb
pop
fiadds
push
and
cmc
mov
mov
or
or
jbe
sub
inc
pusha
jb
mov
nop
roll
shrl
call
inc
xlat
gs
sbb
ljmp
dec
mov
mov
add
outsb
sbb
out
adc
sahf
mov
int3
add
aaa
xchg
ljmp
mov
mov
mov
test
loope
push
or
out
in
jne
ja
outsl
and
test
rorl
inc
aam
lahf
and
or
mov
mov
sbb
jae
cmp
lret
cmp
jnp
jp
aad
and
andb
roll
into
xchg
imul
push
cmpsb
in
das
cmpsl
cmpb
je
or
push
mov
jne
pop
mov
and
mov
and
and
mov
pop
fisttpl
clc
hlt
add
cltd
call
ror
pop
out
mov
and
js
mull
lahf
dec
inc
cmp
mov
cmp
mov
pushf
cmp
cmp
pop
sbb
popf
mov
inc
xchg
jnp
popf
lahf
ret
pop
cmp
mov
and
xchg
lahf
pop
pop
adc
sub
xchg
inc
int
into
dec
xlat
adc
lds
ljmp
mov
out
fisttpl
fwait
mov
push
jbe
cmc
outsb
in
shlb
inc
mov
push
or
roll
fimull
mov
pop
jnp
sub
push
out
cmpsl
fisubrl
cmp
into
mov
push
gs
mov
mov
pop
and
sub
xor
addr16
enter
xlat
sub
cwtl
xchg
pushf
sub
jns
xor
es
sti
jno
xor
and
incl
xchg
push
and
inc
jle
sub
xor
dec
fsubrs
jmp
cmpsb
jge
push
popa
lods
fisttps
stc
xorb
cld
mov
mov
inc
ss
repz
or
lods
in
mov
popf
mov
mov
lods
shlb
push
addb
movb
and
inc
rolb
mov
jne
jl
mov
in
mov
add
inc
xor
je
jno
push
or
fcmovnb
and
test
imul
repnz
sbb
rolb
sub
movsl
inc
add
popa
insb
lcall
pushf
repnz
cwtl
pop
xor
mov
fldl
mov
adc
repnz
bound
sub
idiv
xchg
imul
pop
inc
mov
cmp
inc
pushf
loope
icebp
nop
mov
and
je
scas
mov
push
fwait
aas
adc
mov
inc
lods
mov
movsl
ds
jge
sbb
xchg
scas
push
pop
pop
fwait
into
test
enter
xchg
imul
iret
loopne
and
dec
cmp
mov
inc
fstps
and
ret
dec
xor
push
arpl
stc
cmp
pop
negb
unpckhps
pop
mov
xor
hlt
imul
xchg
ret
cld
sbb
push
ljmp
add
cmp
xlat
enter
inc
mov
lds
imul
lea
jns
das
stc
jl
pop
negb
cld
dec
enter
lret
and
and
lea
lret
push
das
pop
jg
lods
sub
pop
add
xchg
cmpsl
push
push
ds
mov
jmp
in
fucomip
push
xchg
flds
pop
dec
arpl
icebp
insb
stos
pop
repz
jp
dec
arpl
lret
mov
inc
xor
xorb
push
pusha
cmp
pop
outsb
push
pop
mov
pop
mov
xlat
insb
inc
je
push
idivl
and
jmp
push
aam
xchg
add
mov
iret
sbb
or
mov
and
out
insl
sbb
xor
out
test
jno
stos
ljmp
inc
xchg
insb
and
insl
cwtl
stc
leave
xchg
lods
xchg
push
scas
lock
cltd
into
ljmp
xor
mov
inc
adc
cmpsl
arpl
push
and
xchg
and
rcrl
fnstenv
and
sub
fnstenv
aam
cwtl
jle
jne
inc
mov
je
jl
fstps
push
push
adc
cmpsl
call
cmp
pop
in
sub
mov
pop
mov
xorb
sub
jne
fistpl
mov
loop
pop
insb
inc
test
push
out
test
xchg
mov
or
or
addr16
fildl
adc
sbb
bound
add
fdivrp
scas
das
push
mov
fdivl
lea
in
and
or
mov
and
orb
test
insb
mov
ds
and
adc
lods
insl
xchg
test
cmp
movsb
or
aaa
jmp
fwait
jg
shlb
and
hlt
cmp
lds
adc
cmp
inc
or
pop
mov
xchg
jb
cmp
xor
sbb
repnz
push
jge
popf
out
push
push
mov
fldl
mov
fdivl
add
push
int3
ss
inc
xor
cmp
push
jl
ss
movsl
push
dec
into
cmp
xchg
enter
dec
mov
addb
pop
xchg
stos
sbbl
pop
cmpsb
xchg
or
adc
adc
lea
cli
insb
idivl
sbb
and
outsb
mov
jno
or
xchg
mov
jbe
pushl
stos
xor
cmpsl
jnp
ja
imul
aaa
and
sub
jo
mov
idivb
or
dec
adc
mov
ficompl
add
pusha
add
das
pushf
push
fs
pop
js
cmc
popf
sub
aas
xchg
sub
jl
repnz
jo
in
lock
inc
out
push
mov
lea
or
add
push
mov
xchg
rcl
push
xor
dec
add
ds
cmpsb
mov
adc
pop
mov
jecxz
xor
cwtl
and
sub
call
sarl
bound
popa
fildll
lcall
add
mov
pop
xor
push
or
dec
loope
push
inc
pop
stc
inc
aad
into
imul
mov
aad
cmpl
jne
loopne
dec
clc
jmp
cwtl
lea
int3
jae
mov
xor
lret
out
ret
adc
sbb
sub
or
ret
sub
pop
mov
adc
jge
pop
xchg
inc
adc
jae
ljmp
mov
dec
in
cmp
push
dec
and
xorl
adc
xor
jl
pop
ljmp
and
cmp
or
scas
loopne
ret
xchg
xchg
fwait
and
dec
xchg
xchg
ljmp
pop
in
adc
xor
pop
jns
popf
or
popa
ljmp
inc
cmovp
and
add
push
idivb
je
lock
mov
push
repz
gs
inc
imul
push
scas
pop
and
adc
cli
sbb
and
je
dec
scas
jbe
sub
sub
lods
into
pop
inc
cwtl
out
int
addr16
fmull
sahf
and
imul
lea
add
mov
push
xchg
jns
fcoms
js
xchg
imul
add
sbb
mov
imul
js
imul
or
stc
je
xchg
jae
stos
leave
arpl
daa
push
insb
shll
cwtl
roll
jmp
jecxz
xchg
insb
lret
fdivl
out
pop
out
clc
inc
sub
in
adc
jp
repz
lret
je
orl
aaa
ficoms
pop
sbb
xchg
mov
outsb
pmulhw
cltd
ret
aaa
sahf
xor
cwtl
inc
into
aam
test
andb
or
xor
push
in
lds
pop
lds
notl
adc
gs
decb
and
fildll
test
and
mov
push
pop
in
sbb
dec
jmp
pop
or
pop
popa
mov
stos
nop
scas
push
inc
add
mov
lock
movsb
xor
jp
xor
cmp
leave
jmp
xchg
jl
pop
cwtl
adc
mov
cmpsb
jnp
inc
sbb
push
repnz
adc
inc
lods
mov
push
test
jmp
mov
push
inc
fdiv
and
out
sahf
xchg
data16
loopne
pop
or
jb
adc
loopne
sub
mov
loopne
pop
cmp
jns
or
adcl
dec
pop
xchg
mov
cmp
mov
mov
in
mov
cli
fsubrl
lcall
xor
dec
mov
enter
and
lcall
fsub
adcb
dec
cmp
sbb
mov
test
mov
mov
mov
int
fidivrs
mov
cmp
xchg
push
dec
fbld
movsb
sbbb
mov
in
cmp
fnstcw
xchg
clc
sub
test
sub
decb
dec
xchg
leave
cmp
aam
and
cmpsb
mov
fs
rolb
mov
in
lock
adc
test
imulb
jb
xor
jbe
fildl
aas
sub
mov
stc
push
cwtl
shrb
sarl
stos
pop
inc
sar
dec
mov
mov
pop
mov
mov
div
stc
push
ret
sbbb
and
push
push
imul
out
inc
inc
adc
cwtl
push
jb
mov
shl
lret
enter
mov
xchg
adc
mov
icebp
sub
insl
mov
aad
push
cli
loope
call
pop
sbb
imul
mov
push
pop
subl
jg
inc
mov
pop
push
daa
gs
push
lcall
stos
ret
nop
sub
or
sub
push
and
fninit
adc
cmp
dec
mov
mov
sti
mov
push
xchg
loope
sub
add
fwait
lahf
jnp
add
adc
and
dec
mov
mov
ja
sbbl
add
jbe
add
push
jo
add
ja
ret
push
arpl
push
push
int3
cwtl
outsl
or
pop
test
or
dec
mov
ror
push
push
jne
xor
lds
cmpsl
mov
mov
out
push
pop
je
lret
repz
mov
sub
insb
les
das
dec
push
add
fwait
push
pop
mov
cltd
adc
or
in
arpl
call
mov
lea
xchg
xchg
jl
jns
xchg
dec
dec
cs
fmuls
inc
out
in
bnd
mov
andl
push
mov
mov
push
lea
cld
push
add
jnp
add
subl
dec
mov
int
movsl
std
in
pushf
test
lret
and
pop
jge
subb
insl
xor
loop
jbe
xchg
push
aas
js
pop
loop
clc
push
mov
je
mov
lods
xchg
js
in
pop
out
fsubs
pop
ficoms
lea
pop
mov
xlat
push
mov
adc
inc
cltd
mov
pop
cmp
cmpps
jb
adc
cmc
jnp
adc
data16
fs
push
xchg
jmp
shl
fists
cltd
cs
jle
jb
out
mov
cmp
adc
xlat
cmpsb
adc
inc
mov
mov
jno
adc
xlat
hlt
into
cld
jb
lahf
cwtl
add
insb
das
testl
and
push
pop
push
das
jno
leave
rolb
sbb
pop
mov
iret
pop
or
pushf
mov
lret
mov
sub
add
cmpsb
aad
and
lock
lcall
inc
jl
out
xor
mov
inc
outsl
or
in
ds
iret
cld
jl
or
imul
mov
je
dec
mov
icebp
push
in
inc
pop
nop
jmp
hlt
pusha
xor
sub
xor
xor
out
add
sub
negb
arpl
cli
rcrl
lock
push
pusha
out
cs
or
lds
push
loop
stc
cs
enter
ds
xorb
lret
test
adcb
fidivs
push
mov
inc
pop
inc
dec
fistpl
xchg
cmp
adc
cs
lock
xchg
fnstcw
jnp
cld
loop
dec
insl
pop
out
movl
push
inc
je
cltd
arpl
or
adc
test
xchg
push
ret
lret
fstps
mov
mov
lds
mov
imul
hlt
pop
arpl
sub
xor
inc
push
mov
loopne
mov
in
dec
push
inc
leave
mov
push
cmpsb
mov
lea
ret
pop
ret
mov
out
push
push
std
rclb
jo
jb
jp
push
mov
addl
sti
test
adc
push
les
mov
rcrl
repnz
mov
mov
jg
inc
xchg
sub
mov
xor
sub
inc
fwait
hlt
adc
mov
hlt
jge
add
inc
pop
dec
mov
mov
out
bound
adc
leave
mov
mov
pusha
lcall
lds
leave
pop
sbb
mov
stos
xchg
xor
sbb
mov
stos
xor
test
js
dec
inc
addr16
or
jnp
shl
sub
imul
insl
add
or
inc
inc
rsqrtps
sbb
int3
lock
test
adc
rcr
leave
cld
repnz
sahf
pop
std
cmpl
xor
shrl
add
xlat
push
dec
lahf
push
cmp
or
push
and
ss
jg
adc
mov
lods
sub
jnp
fmull
xchg
dec
lret
testl
jg
mov
mov
pop
aad
add
scas
and
add
enter
repz
mov
mov
test
jae
mov
inc
and
and
cmp
imul
mov
into
xor
sub
sub
xor
mov
push
mov
sbb
push
push
call
testb
lahf
out
je
add
sub
pop
pusha
fcmovnu
das
aas
jne
sbb
mov
adc
aaa
dec
pop
repnz
mov
jne
pushf
mov
push
stos
or
mov
call
mov
ljmp
ja
inc
aaa
mov
dec
decl
loop
push
je
pop
mov
add
fdivl
add
pop
les
dec
insl
pop
sub
pop
fwait
sar
mov
mov
ror
cmpsb
cwtl
mov
ss
add
hlt
fsts
cmp
test
stos
setno
mov
dec
jg
sub
fdivrs
add
out
push
scas
js
add
cs
cmp
jmp
imull
sub
outsl
push
movsl
les
movl
and
out
test
mov
sbb
sbb
ret
mov
mov
sub
pop
int3
nop
mov
lcall
in
jge
adc
int3
lret
test
jge
aas
sub
jp
test
shll
lock
lcall
jno
shlb
cmpsl
insb
ret
test
push
hlt
cmc
xchg
out
lds
mov
jns
aad
xor
mov
cmp
and
je
fstpl
sub
xor
cmpb
dec
push
out
call
mov
dec
std
inc
lods
push
movsl
mov
add
mov
bound
les
movsl
repz
jge
xchg
dec
popaw
fdivrs
pop
sub
and
mov
xor
adc
sub
pop
push
mov
inc
lock
jnp
pop
inc
pop
out
inc
pusha
ss
sbb
and
test
jno
mov
aas
cltd
xchg
jl
add
add
sub
add
xor
add
and
add
add
add
mov
add
test
add
enter
add
add
mov
add
addb
add
mov
add
addb
add
add
add
add
addb
add
xchg
add
add
add
adcb
addb
add
xchg
add
add
add
jo
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
mov
add
add
add
rolb
add
add
add
add
rolb
add
add
add
loopne
add
add
add
lock
add
add
add
add
add
add
add
add
adc
add
or
push
add
add
add
loopne
add
add
add
push
add
add
jo
push
add
add
enter
and
add
dec
loopne
add
add
add
add
add
push
add
add
mov
push
add
add
add
add
add
add
pop
add
add
inc
add
dec
add
add
dec
add
inc
add
inc
add
divl
iret
pop
outsb
mov
add
int
js
repnz
testl
lret
fdivp
or
repnz
fdivp
or
repnz
fidivs
test
into
xchg
test
jl
sarl
push
nop
xchg
xchg
adc
lods
mov
cli
adc
je
inc
mov
push
jne
outsl
test
xor
popf
ljmp
add
or
inc
xchg
adc
cmp
in
out
inc
fstpl
jb
test
stos
mov
bound
jbe
and
flds
aaa
cmp
push
sar
cmp
sti
mov
push
test
cmpsl
jmp
in
add
mov
shl
in
sbb
lea
dec
sub
push
movsb
lds
add
add
xchg
jl
daa
or
out
test
cmp
push
adcl
jge
pop
jp
cmp
adc
fiadds
xchg
jae
cltd
adc
cmpsb
aad
xor
stos
into
xchg
cmc
push
popf
jg
mov
pop
xchg
in
mov
stc
jmp
push
in
jle
insl
pop
enter
cmp
mov
fsts
movsl
mov
fsts
movsl
mov
cmp
jo
cmp
cmpsl
jno
les
rcll
fs
fs
imul
mov
adc
ficomps
flds
and
mov
or
mov
testl
lret
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
faddp
and
sub
push
leave
or
mov
cmp
xchg
cmp
testl
lret
fidivs
jnp
fldt
mov
cmc
cld
out
cwtl
mov
cs
gs
fsubs
shl
push
lret
fidivs
jnp
fldt
cmp
mov
and
jns
mov
insb
call
repnz
fidivs
jnp
fldt
shl
push
lret
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fisubs
cmp
xchg
jg
lock
clc
pop
nop
mov
mov
hlt
pop
testl
lret
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
ficomps
aam
mov
je
ds
add
dec
cmp
lods
dec
scas
out
fs
shl
push
lret
fdivp
or
repnz
fdivp
or
repnz
fidivrs
xchg
mov
or
repnz
fidivrs
cld
jmp
movsl
ljmp
or
repnz
fiadds
sbb
xor
mov
cmc
inc
sub
or
and
mov
cmp
fimull
or
arpl
xor
pusha
test
xchg
jo
xor
es
nop
add
pop
adc
push
cmpsl
cmp
rcrl
out
test
aas
and
mov
push
scas
das
stc
mov
push
ret
lods
inc
pop
xlat
mov
inc
mov
ror
sbb
sbb
rcrl
mov
outsb
xchg
mov
iret
xchg
scas
shll
cs
mov
mov
mov
mov
jnp
loop
mov
iret
arpl
or
repnz
fimuls
cld
jne
inc
mov
bound
or
repnz
fiadds
dec
sbb
adc
fisubrs
jg
fs
mov
pop
xchg
shl
push
lret
fidivrs
dec
mov
testl
lret
fsubp
xchg
mov
shlb
jp
arpl
and
inc
clc
or
or
repnz
fisubrs
or
cmpsb
insb
cmp
cmpsl
testl
lret
ficomps
or
and
sub
sub
or
repnz
fisubs
fiadds
lods
push
xchg
or
repnz
fidivs
popa
pop
pop
push
add
icebp
in
mov
adc
fimuls
and
popf
call
or
repnz
fisubs
pminub
loopne
ja
in
sub
or
repnz
fidivrs
daa
sbb
clc
testl
lret
fidivrs
sbb
and
lret
mov
mov
cmp
shl
push
lret
ficoms
pop
inc
inc
je
and
or
repnz
fdivp
sbb
cli
out
add
mov
in
cmp
or
repnz
fimuls
push
mov
testl
lret
fimuls
cmp
xchg
jecxz
ds
cmc
movsl
testl
lret
ficoms
repz
cmp
add
push
testl
lret
fmulp
daa
stc
mov
orb
jge
pop
shl
push
lret
fidivs
xchg
dec
sbb
or
repnz
fdivp
or
repnz
fisubs
loop
jne
out
cs
sbb
adc
cmp
int
cwtl
inc
add
imul
hlt
mov
les
aas
jo
testb
in
clc
in
fimull
in
jl
or
fdivs
mov
out
rcrl
push
fildl
add
pop
insb
shlb
in
call
dec
cmpsl
lret
setb
leave
call
inc
subl
sbb
mov
dec
dec
push
imul
aas
fdivr
sub
xor
repz
int3
inc
hlt
jp
sbb
pop
dec
xchg
pop
pop
or
sub
and
xor
arpl
aaa
mov
ss
xor
dec
mov
pop
jae
out
mov
imul
sbb
fcmovnu
loopne
stos
dec
and
shrl
clc
das
mov
mov
stc
jne
pop
xchg
mov
and
dec
lods
jnp
cmpsl
sbb
in
push
jo
lea
adc
xchg
cmc
lods
pusha
movsb
arpl
insb
dec
ja
or
push
test
sub
fcom
or
adc
xchg
cmc
lods
pusha
movsb
out
adc
fiaddl
imul
xchg
xchg
push
sbb
bound
xor
inc
pop
test
jb
mov
add
cmpl
xor
pop
int3
arpl
ss
call
mov
push
mov
cmp
fistps
xlat
scas
test
mov
fstpl
sbb
test
imulb
test
int3
and
out
call
cwtl
add
push
into
das
fdivrs
dec
hlt
ja
cmp
repz
lods
push
movsl
pop
sub
add
mov
mov
loop
jl
out
fs
mov
enter
sub
xchg
xchg
shrb
xchg
xor
out
stos
in
add
sbb
rcl
add
add
inc
imul
xor
stos
lea
movsb
outsl
arpl
ficoml
mov
subb
inc
or
mov
sti
jae
fs
das
cmp
setae
xchg
adc
fistps
fdivs
mov
pop
sahf
mov
cld
lea
mov
mov
push
lds
lods
incl
jnp
dec
scas
sub
push
int
and
dec
and
not
loopne
iret
loop
add
pop
lret
add
jne
xchg
xchg
and
lds
cmc
xchg
push
loopne
sbb
dec
das
sbb
ja
lods
pop
jmp
in
add
mov
mov
pushf
mul
fldz
fidivs
lret
mov
dec
out
push
cmp
push
lods
or
mov
cmp
out
sbb
leave
pop
aas
or
test
cwtl
xchg
cmp
cld
jp
push
pop
push
dec
fsubrs
in
dec
nop
cwtl
je
fisubs
sbb
out
pop
popa
rcr
adc
cmp
popf
fidivs
js
xor
bound
xor
push
xlat
xchg
bound
pop
lcall
adc
add
ljmp
fnsave
xor
stc
adc
mov
push
cmp
cmpsl
push
pop
test
gs
rol
fcmovne
pop
out
mov
mov
inc
mov
mov
cs
xchg
xchg
mov
inc
mov
cmpsw
and
add
mov
call
sub
cmpsb
jno
mov
leave
jo
lahf
movsb
lret
or
pop
mov
mov
aam
adc
adc
cmp
repz
pop
cmp
cmc
jp
xor
fdivl
movsl
xchg
sahf
mov
leave
or
mov
xchg
int3
push
jmp
pop
sub
movsl
into
popf
push
cmp
dec
push
push
ss
andb
xor
cmc
or
int3
addr16
hlt
iret
daa
dec
add
pop
loope
cmpsl
dec
cmpsl
out
leave
xor
pop
push
mov
imul
jle
pop
cmp
add
mulb
mov
daa
roll
test
xor
into
pushf
push
in
adc
inc
cs
imul
xchg
mov
outsb
pslld
and
nop
add
cmpsb
mov
sti
sahf
pop
int
mov
fwait
imul
clc
xchg
mov
icebp
movsb
jne
enter
mov
or
shll
push
xor
cmpsb
cmpsb
sarb
xor
mov
fwait
adc
dec
sahf
mov
mov
out
sbb
out
divl
iret
push
outsl
enter
or
test
push
aad
fs
repnz
pop
testb
mov
cltd
push
sarb
clc
sbb
adc
mov
xchg
loop
dec
fsubl
popf
lds
es
mov
sub
cmp
sub
stos
dec
lret
or
and
mov
es
xor
cs
pop
shrl
jge
mov
jecxz
shrb
adc
xchg
mov
dec
mov
in
push
rcrb
push
cmp
xor
ja
leave
popf
jo
pop
mov
pop
pop
iret
cmp
lcall
test
rsqrtps
pop
sub
pop
dec
mov
xor
pop
cmpsb
xchg
cmpsb
sbb
cli
fsubs
ss
shrb
fnsave
testb
mov
cmc
pop
inc
ljmp
pop
mov
push
subb
sub
decl
pusha
inc
enter
xchg
adc
dec
lds
push
sub
data16
dec
ficompl
enter
int3
push
stos
xor
xor
or
test
inc
gs
jb
xchg
xchg
js
sahf
jns
add
imul
pop
or
data16
push
lret
add
jg
popf
jecxz
and
pop
push
out
test
pop
push
inc
popa
sub
push
xchg
push
push
scas
sub
stc
xor
dec
sbb
out
popf
ja
sbb
movsl
ljmp
xor
shrl
mov
jl
mov
inc
sbbb
into
sahf
dec
or
dec
stos
sbb
aad
cli
aad
pusha
fcomps
mov
imul
or
push
lock
xor
out
push
lcall
sub
dec
jno
mov
inc
jp
ret
sbb
scas
orb
or
mov
andl
sub
loope
aad
out
xchg
iret
rorb
outsl
and
fsubs
popf
dec
int
or
fwait
fwait
imul
scas
stos
sbb
loope
push
push
xchg
sarl
rcr
rep
jl
jo
sbb
push
dec
xor
xorl
in
mov
push
insl
xchg
cmp
adc
dec
in
movb
sub
or
push
push
xchg
pop
mov
cli
add
or
sbb
mov
and
or
jle
push
sbb
cmpsl
xlat
rorb
std
xchg
nop
loopne
shll
jle
inc
pop
out
decl
popa
cmpsl
cmp
cli
dec
sbb
mov
lret
jp
or
xor
jmp
mov
fnstenv
jnp
jae
mov
out
fstps
push
je
pop
out
icebp
inc
stc
stos
sbb
push
andl
scas
mov
outsl
fstpt
enter
lods
shll
mov
stos
ret
fs
pop
call
push
add
pop
mov
pusha
sbb
jo
call
in
dec
clc
xlat
out
xor
inc
sarb
xor
cmp
mov
push
and
and
fstl
and
dec
xchg
jg
roll
fadds
xor
inc
fadds
inc
leave
cmpsl
push
fisubrl
movsl
or
mov
mov
popa
push
test
push
es
add
dec
subb
inc
mov
pop
aas
jae
mov
aaa
xchg
sti
mov
xor
js
cli
int
push
lahf
pop
fdivp
and
out
adc
roll
pushf
adc
xchg
out
inc
arpl
jl
arpl
loop
mov
mov
pop
rcrl
dec
and
orl
imul
xchg
insl
xchg
pop
dec
aad
out
dec
mov
les
pop
shrb
out
mov
jo
ljmp
fistl
lock
bound
cmp
mov
sbb
lcall
in
pop
sahf
fiadds
push
inc
jns
inc
les
xor
enter
gs
insl
xor
mov
ficompl
es
ljmp
sahf
nop
sti
scas
pop
in
int
and
outsl
insb
inc
enter
movsb
out
sub
rcrb
sub
lock
dec
pop
cmpsb
aaa
orb
add
das
add
xchg
loop
mov
int3
es
lahf
pusha
lret
inc
fld1
sub
test
inc
mov
clc
mov
bnd
jg
mulb
fwait
sahf
aas
xchg
je
fdivrs
lods
cmp
mov
outsl
je
xlat
rcr
lcall
mov
mov
jecxz
std
out
lret
adcb
adc
dec
mov
mov
xor
cmc
mov
loop
popf
sbb
gs
popf
xor
xor
mov
ret
aad
aam
adc
das
out
cmc
cmp
mov
popa
jns
sarb
call
cltd
cmp
call
cmc
cwtl
sbb
push
xchg
loop
or
adc
mov
adc
in
push
mov
lods
insb
inc
or
and
xchg
pusha
ret
shrl
jo
test
imul
xchg
aaa
pop
cmp
dec
and
push
xor
cmp
sub
push
or
push
sbb
inc
popf
inc
ds
roll
or
loop
test
mov
sbb
adc
pushf
ret
and
stc
insb
mov
repnz
jbe
xchg
aad
sahf
sete
ss
pusha
dec
call
sbb
adc
cmpsl
repnz
jbe
pop
retw
iret
pop
sbb
jmp
jb
in
jl
sbb
cmp
in
loope
mov
rol
std
mov
mov
std
addr16
scas
lret
call
or
mov
jno
cmp
movq
out
mov
xchg
iret
mov
repnz
sub
cmp
insl
sahf
flds
mov
out
stc
mov
push
push
push
mov
cmp
mov
fdivl
mov
loope
push
dec
ret
adc
jl
push
paddb
je
in
out
inc
inc
inc
repnz
pop
pop
mov
and
enter
sub
or
jb
xor
cwtl
add
push
shrb
pop
test
jns
push
dec
daa
fwait
int3
mov
push
adc
ja
jno
fnsave
stc
mov
dec
or
sub
out
in
loope
lods
mov
mov
fstl
cwtl
leave
in
fwait
dec
mov
movsl
jge
mov
in
ret
insb
repz
fiaddl
popf
fnsave
xchg
push
cmc
mov
or
lea
idivb
add
inc
push
fdivrl
outsb
les
cmpsb
or
leave
adc
in
test
xor
scas
lock
dec
insb
cltd
jno
lcall
xchg
mov
pop
lcall
ds
fimuls
mov
sbb
add
push
adc
xchg
lret
hlt
mov
scas
in
fs
add
cmp
cs
xor
gs
inc
in
inc
data16
cli
ss
sub
fwait
xchg
dec
movsb
inc
mov
cmp
add
into
lret
iret
lahf
push
jne
out
ja
sar
push
jb
fldt
jg
inc
push
dec
jg
test
push
lds
iret
add
xlat
or
in
cli
fisubrs
rolb
stos
je
fimuls
xor
dec
test
sbbb
push
cmp
in
loope
adcl
sarl
mov
fstpt
adc
pop
xchg
stc
mov
sub
orb
jo
xchg
out
adc
aas
std
test
test
lock
jno
mov
mov
cmp
gs
pusha
sarl
mov
movsl
mov
fsubrp
idiv
push
lods
adc
imul
inc
inc
mov
mov
loopne
pop
jns
pop
sub
adc
leave
cmc
cmp
ret
out
mov
dec
cltd
cs
pop
ja
shr
cltd
push
cwtl
xchg
and
bound
stc
dec
mov
adc
jmp
arpl
das
mov
fldcw
aam
popf
push
repz
add
lds
test
insl
in
sahf
mov
jnp
jg
dec
fs
sbb
push
test
or
fdivrs
xchg
ds
push
mov
mov
xlat
mov
std
mov
std
sbb
fstl
fwait
mov
mov
cmp
cs
xchg
nop
adc
push
pop
cmp
call
or
cltd
lods
jl
dec
call
pusha
test
in
mov
xchg
lods
icebp
mov
push
pop
imul
pop
adc
inc
lcall
nop
inc
dec
lds
cwtl
hlt
mov
test
pop
fidivrs
pop
imul
testl
aas
mov
push
pop
test
inc
cmp
stos
xchg
mov
lret
sub
rclb
bnd
scas
out
inc
test
std
mov
fdivp
or
int
pop
pop
or
and
jns
movsl
xchg
push
jle
inc
push
adc
mov
stos
rcl
xlat
mov
pop
repnz
cmp
mov
call
iret
xor
xchg
pushl
xchg
fdiv
mov
movsb
fsubrp
sbbb
bound
dec
shl
movb
pushf
stos
iret
and
or
and
xchg
mov
addr16
sbb
or
push
in
dec
or
add
mov
loopne
mov
hlt
or
int
xchg
cmp
pop
mov
loopne
or
mull
inc
mov
inc
nop
loopne
stos
mov
lods
push
pop
stos
adc
fsubrl
adc
xor
cmp
stc
aad
jnp
gs
dec
jge
sub
lret
outsl
shll
cmp
jl
add
xor
mov
mov
out
pop
xchg
cld
test
lock
xchg
js
ds
push
jge
sub
adc
cmpsb
fcmovne
inc
add
out
pop
pop
in
dec
ficoml
cmp
and
in
push
loope
int
mov
rorb
js
lret
add
into
iret
mov
adc
fmulp
cmp
andb
ja
pop
push
and
push
inc
xlat
pop
and
cvtps2pi
xor
push
in
lods
sti
pop
inc
xchg
jne
sbb
in
jbe
into
dec
sbb
sub
xchg
jge
sbb
loopne
sub
mov
fwait
repz
stc
mov
and
movsl
jle
cmpsb
pop
jns
sbb
push
mov
aam
jae
sarb
add
xchg
dec
xchg
call
xchg
cltd
push
mov
and
xor
lret
mov
hlt
pop
aad
xchg
pop
xor
xlat
lret
leave
fs
clc
xchg
rorb
ss
mov
sub
pop
xor
xor
ret
and
out
imul
call
push
aas
sbb
xor
fdivrs
cmp
sbb
xor
popa
fadds
popa
mov
dec
cmp
cld
addr16
inc
das
adc
shrb
jecxz
and
jb
inc
and
or
inc
testl
cli
pop
inc
adc
or
xor
divb
xchg
popf
pop
insb
inc
cld
mov
adc
mov
push
js
mov
xchg
idivb
mov
push
stc
sbb
imul
pop
mov
sbb
cmp
fs
mov
fldpi
sbb
cmp
mov
push
or
xchg
xchg
ret
rcrl
jne
sbb
xchg
out
ror
push
sarb
loopne
shll
jns
cwtl
aam
jb
cltd
or
mov
decl
mov
subb
cwtl
mov
xor
push
and
into
or
shlb
aad
inc
inc
jae
pusha
xchg
jecxz
mov
push
lods
jge
daa
shrl
enter
aaa
into
sahf
out
test
lds
jecxz
cltd
loope
mov
into
fists
ljmp
mov
das
add
fwait
in
arpl
fcoms
cmpsl
pop
sbb
pusha
sub
cmc
fwait
aad
std
mov
mov
out
sarl
les
loop
cmp
inc
ljmp
sub
and
insb
dec
jae
and
and
dec
xchg
cmp
hlt
xor
push
pop
add
les
xor
negb
jge
popf
in
and
pushf
push
inc
xor
int
jge
pop
out
pop
lds
jns
jns
les
neg
mov
pop
or
push
pop
add
push
inc
test
test
cmp
push
arpl
das
testl
adc
leave
and
insb
js
jnp
lcall
lcall
xor
sbb
mov
nop
fldt
sbb
push
dec
jb
push
test
lahf
iret
in
inc
pop
imulb
testl
cmp
jbe
push
pop
loopne
push
loopne
dec
mov
lcall
call
loop
div
mov
ror
or
divl
out
iret
add
add
pushl
jno
inc
jo
into
mov
mov
rcrl
popa
loope
xlat
shlb
cmp
iret
dec
popf
sub
call
outsb
mov
aaa
or
sub
jne
push
in
into
lods
mov
fistl
or
inc
ret
repnz
jle
sub
daa
xchg
fisubrl
lret
aas
mov
sbb
movsb
lahf
inc
push
push
fwait
rcr
or
push
nop
pop
xchg
xchg
sub
incb
lock
jnp
xor
or
nop
adc
bound
and
std
addr16
xor
in
mov
lret
sub
lcall
nop
mov
movsl
adcb
movsl
or
adc
mov
scas
es
loopne
repnz
in
outsl
mov
pop
addr16
pusha
les
adc
mov
mov
push
aam
push
hlt
inc
popf
loopne
jp
data16
daa
jecxz
jmp
inc
dec
cmp
fs
xor
pop
ljmp
nop
dec
sub
xor
lds
insb
pop
sti
or
mov
into
jmp
push
mov
out
leave
sbb
and
sub
mov
adc
mov
xor
mov
lret
lea
add
jecxz
jae
mov
mov
out
or
jnp
add
xor
push
mov
mov
mov
xlat
xlat
stos
movl
mov
inc
movsb
out
rcrl
jp
pop
push
pop
cmp
ja
add
pop
inc
inc
js
lods
dec
push
fmulp
jnp
stc
sbb
adc
sti
icebp
jno
xchg
pop
loop
ffreep
outsb
stos
adc
xchg
adc
pop
lock
stc
fldenv
repnz
arpl
aaa
enter
idivb
adc
outsb
call
mov
fwait
push
pusha
add
dec
mov
or
dec
adc
push
push
inc
sub
scas
fwait
sarl
stos
out
movsb
mov
sahf
dec
scas
adc
jmp
inc
or
xor
and
or
push
jle
cmp
pop
mov
pop
lret
sbb
stc
imul
movsb
fcoms
inc
imull
ja
jge
and
sub
aam
aam
pusha
sarl
lock
jne
jmp
into
and
lret
int3
mov
adc
lea
and
loopne
adc
mov
pop
mov
mov
adcl
filds
repnz
jae
cli
or
fnsetpm(287
int3
in
push
es
dec
push
jp
dec
dec
push
test
js
inc
aas
repnz
popa
jae
lahf
or
adc
es
cli
shrl
push
xchg
xor
mov
mov
in
jne
pop
xchg
mov
inc
cmp
ss
fcoml
fmuls
ja
inc
pusha
lods
sub
jns
call
dec
sub
mov
push
inc
out
push
shrb
pop
inc
scas
push
decb
out
cli
mov
cmp
jne
mov
cmp
or
ljmp
test
sbb
fisttpl
xor
orl
cli
data16
pusha
or
les
pop
stos
add
stc
or
fiadds
sub
mov
dec
lea
xor
pop
xchg
out
into
sub
out
std
mov
negl
jecxz
lods
xchg
cltd
mov
sbb
loopne
jne
mov
bound
push
ljmp
or
jle
pop
or
mov
push
adc
sbb
lods
mov
mov
mov
sbbb
in
scas
pop
jmp
lds
xchg
pop
sub
fs
es
push
pop
imul
or
out
pushf
add
xor
inc
sbb
and
imul
xor
enter
shr
scas
jge
pop
cmp
sub
mov
pushf
data16
push
push
push
fidivl
jbe
jb
jmp
pop
nop
scas
mov
or
hlt
or
popa
mov
mov
xchg
aas
cmp
add
xchg
leave
mov
xchg
or
add
lds
sbb
push
ret
imul
push
aam
jle
mov
mov
xchg
dec
jnp
mov
in
lsl
dec
xchg
jno
sbb
or
insb
les
adc
adc
scas
inc
shlb
fs
inc
mov
shl
jg
es
jbe
sti
in
test
or
xchg
daa
mov
lcall
fiaddl
pushf
stc
call
cld
sub
and
ss
int
xchg
xor
into
in
push
daa
push
mov
aam
sar
leave
push
sub
push
jbe
dec
or
negl
jo
rorb
or
and
and
xchg
addr16
cmp
mov
fadds
mov
jnp
dec
sub
jne
orl
dec
dec
stos
sbbb
and
out
sbb
pop
lock
xor
sti
sarl
dec
in
sti
ret
or
xchg
inc
shrl
jno
lods
cltd
pushf
cmpl
sarb
adcl
cmpsb
jbe
nop
jge
or
jg
dec
lret
aam
das
and
loope
lea
loop
scas
nop
mov
sub
push
jb
mov
pop
in
sub
ror
add
loopne
ret
out
stos
shl
dec
into
aad
sahf
dec
pop
sub
mov
imul
cmpsb
fs
out
pop
mov
inc
subb
push
sahf
add
jecxz
frstor
shlb
int3
fmull
scas
jne
mov
mov
mov
in
pop
iret
mov
pop
xchg
push
cmp
mov
mov
cmp
popf
add
inc
and
push
stos
add
push
jg
lcall
popf
pop
dec
insb
lahf
mov
mov
roll
or
testb
je
pop
pusha
lcall
call
xchg
outsl
fildll
imul
push
lahf
pop
xchg
shll
repz
mov
dec
cmp
dec
lea
out
iret
inc
int3
andb
ja
sbb
inc
mov
fs
mov
jae
push
je
mov
std
call
jae
arpl
push
dec
cmp
test
ja
addr16
rolb
ds
xor
inc
lock
xor
out
scas
mov
cwtl
xor
xchg
mov
push
ljmp
mov
cwtl
push
pop
adc
ret
push
lcall
arpl
jle
test
outsb
push
movsb
daa
das
mov
push
mov
pop
sub
dec
inc
test
and
test
sub
bound
or
xchg
dec
scas
cwtl
negb
jmp
les
cmc
mov
cmp
scas
mov
call
and
and
sub
push
mov
aam
pushf
cmp
adc
fwait
add
push
and
repz
inc
lods
test
in
out
stos
push
cltd
mov
cmp
ret
xchg
into
call
outsl
hlt
or
jle
cmp
scas
sti
fistpll
xor
subb
les
xchg
jl
mov
xchg
pop
cmpsl
cld
push
jl
jle
push
int3
mov
adcb
ret
jb
fwait
inc
xor
dec
in
test
push
mov
inc
incb
cmp
in
adc
fwait
inc
cli
and
mov
xchg
adc
mov
pop
cmp
inc
lret
pushfw
imul
fadds
ud0
lods
mov
dec
insl
jmp
lcall
sbb
xor
call
rorl
jne
and
js
popf
inc
xor
adc
outsb
lret
imul
js
add
sbb
sbb
cmp
adc
in
pop
push
xchg
imul
mov
push
xor
dec
add
add
xor
cmpsb
hlt
shll
adc
das
mov
repz
or
arpl
fsubrs
popa
out
mov
out
out
test
stos
subb
negb
pop
mov
jg
ficomps
inc
pop
ret
sbb
fwait
mov
jmp
pop
out
jo
sbb
jns
scas
jns
mov
clc
ss
mov
es
adc
idivl
subb
sbb
mov
add
cmp
or
jl
fwait
dec
jp
and
jb
subps
sbb
push
cmc
jbe
xor
cmova
stc
jmp
les
jle
scas
andl
sahf
cld
cld
rcrl
or
int3
xlat
loop
push
insl
in
mov
fs
mov
mov
sub
pop
ror
in
mov
scas
addb
insl
test
xchg
popa
cmp
push
cmp
insl
xor
sub
leave
popl
shll
out
or
das
and
xor
mov
push
xchg
mov
jg
stc
pop
mov
movsl
test
xchg
xchg
mov
jae
rcrb
lock
rcl
dec
xchg
fstl
bound
jnp
aaa
and
loope
push
fsubl
xchg
pop
dec
cmp
mov
jg
dec
es
mov
sub
dec
jne
adc
test
adc
sbb
or
fimull
and
or
pop
dec
add
mov
push
cmpsl
mov
mov
mov
sti
lcall
subb
mov
ret
and
push
mov
fmulp
mov
sti
inc
jge
dec
xchg
fisttpll
mov
mov
adc
jmp
popa
push
dec
xchg
lods
aam
xchg
jg
inc
or
insb
ljmp
fcmovnu
mov
cltd
movsl
inc
dec
xchg
pushf
stos
xor
inc
dec
adc
bound
push
clc
bound
enter
cmp
jecxz
movsb
inc
daa
gs
mov
daa
jae
sti
fdivl
int
test
xchg
push
push
int3
outsl
cli
fdivrl
in
push
std
in
out
test
paddsw
cmc
dec
or
incb
cmp
sbb
or
mov
int3
nop
jo
pop
testl
dec
add
and
aad
je
mov
xor
sub
mov
pop
outsl
pop
pusha
cmp
sub
inc
sbb
inc
add
adc
dec
cmc
cld
adc
mov
xchg
jg
dec
push
pusha
int
shll
mov
inc
mov
mov
push
mov
insl
unpcklps
repz
rorl
ljmp
test
push
fimuls
insb
stos
cwtl
jp
lods
mov
loop
mov
cmp
out
movl
add
adc
cmp
out
mov
and
lock
xor
in
aas
add
les
jg
insl
cld
fs
jle
xchg
and
xchg
jg
xchg
jne
mov
sub
jp
mov
dec
in
xor
inc
int3
and
add
sbb
mov
leave
cmp
mov
inc
ffree
test
mov
jb
mov
into
bnd
push
cmc
mov
push
dec
mov
dec
hlt
jp
sub
xchg
dec
es
xor
or
inc
fimull
inc
cmpsb
pop
ds
mov
out
lcall
or
jp
rcr
bound
mov
mov
outsl
int
and
jbe
je
mov
mov
jle,pn
xor
or
test
ljmp
enter
lods
mov
movsb
arpl
insl
push
insl
aaa
sub
inc
addr16
mov
lret
in
and
pop
pop
popfw
test
pop
lret
add
pop
xlat
cmp
shl
lret
ja
iret
dec
jle
sahf
cmc
and
nop
jl
jbe
imul
icebp
test
pop
out
pusha
lock
fwait
add
mov
jno
int3
xlat
add
test
add
mov
or
in
sarb
push
or
andb
mov
sbb
mov
imul
movsb
add
lock
push
inc
push
inc
notl
mov
dec
adc
xchg
push
aas
dec
cmc
out
daa
and
xor
or
in
or
mov
mov
and
cmp
xor
lret
cs
ljmp
int
pop
mov
in
or
imull
popa
int3
adc
mov
inc
xor
bound
pop
ss
fucomp
fidivrs
xor
dec
idiv
inc
and
out
pop
out
cmp
out
imul
cmp
jno,pn
lea
popa
loop
xchg
inc
out
repz
fincstp
mov
daa
jmp
push
lea
add
push
addr16
lret
jl
mov
test
inc
pop
sbb
xchg
out
lcall
hlt
xorb
mov
pop
test
xchg
inc
add
inc
xchg
cli
jecxz
bnd
insl
push
roll
daa
jo
dec
pop
outsl
out
ds
add
aaa
test
test
lcall
imul
xor
shl
std
addr16
jp
mov
lret
sub
mov
stos
push
icebp
xchg
jnp,pt
into
and
or
aas
aam
mov
out
push
adc
repnz
cmpsl
or
jae
push
jnp,pn
sti
xor
in
inc
mov
or
popf
push
iret
cld
push
imul
push
jnp
and
jbe
add
xlat
dec
sub
arpl
pushf
test
cli
shlb
sbb
cmp
out
dec
or
shrl
cmc
aam
mov
insl
mov
dec
test
sti
inc
add
mov
cwtl
xchg
aad
adc
and
testb
sub
stc
mov
mov
and
dec
adc
cmp
es
cmp
test
iret
jne
out
mov
inc
in
mov
jns
mov
mov
add
repz
fs
repz
jl
or
lret
data16
xchg
dec
jnp
fildll
push
mov
push
cld
fsubrl
jl
jle
out
hlt
pop
sub
das
dec
je
scas
mov
mov
cmp
jmp
xchg
or
mov
fdivrs
shl
pop
push
rcrb
notb
popf
sub
out
sub
jl
push
and
ret
sti
lods
pushf
add
and
xor
aam
nop
mov
mov
sub
or
pop
xlat
sahf
push
jg
adc
jmp
jnp
adc
mov
sbb
push
mov
xor
cmp
cmp
xor
dec
or
cmp
cs
xor
sub
add
fimull
mov
push
out
fs
xchg
pushf
adc
fwait
lods
js
sub
fisttpll
loope
and
mov
mov
in
or
addr16
clc
pop
inc
repnz
xor
xchg
ds
mov
jmp
stos
mov
and
lret
mov
mov
add
in
inc
cmp
call
pop
pop
repnz
xchg
movsb
add
insl
out
and
fs
movsl
add
mov
lcall
mov
inc
outsl
out
int3
shlb
push
mov
or
iret
and
mov
sti
xor
add
mov
mov
lcall
mov
iret
xor
in
push
les
outsb
lahf
mov
insl
mov
and
cmpsb
mov
inc
xor
and
jp
sbbl
lods
sbb
lods
sub
es
xor
lahf
test
bound
stos
les
cmp
pop
pop
pop
mov
out
fmull
out
push
cwtl
call
pusha
sub
gs
jno
imul
fdivs
adc
not
lods
arpl
stos
stos
or
push
pop
xor
lret
ljmp
sub
mov
movsb
dec
test
clc
nop
jne
mov
jge
mov
add
fbld
sub
mov
jecxz
sub
stos
mov
data16
or
mov
cmp
movaps
and
mov
jb
test
mov
inc
dec
imul
hlt
ret
sbb
out
and
push
into
addr16
mov
jmp
xor
test
inc
cli
scas
in
out
stos
xor
sbb
movsl
adc
push
mov
in
xchg
push
sti
fbld
add
push
sbb
sarl
ds
es
fisttpl
xor
and
jae
xchg
call
loop
mov
xchg
or
fwait
pop
call
pop
xor
imul
repnz
ljmp
cmp
jbe
and
shrb
data16
int
mov
sbb
jne
mov
cmp
fldcw
aaa
mov
ja
lret
and
je
lods
shr
ljmp
nop
gs
xlat
test
popa
fst
out
aad
cli
jbe
push
out
lods
inc
fistpl
jmp
add
gs
xchg
and
cmp
mov
jb
or
fwait
loope
aaa
shll
sub
push
test
js
cs
mov
ds
jne
xor
mov
dec
sbb
addb
das
pop
flds
mov
pushf
leave
ficomps
bnd
inc
movsb
xchg
fsubl
jno
dec
jle
add
fists
popf
cli
lea
jnp
pop
and
mov
leave
sbb
mov
pop
sti
arpl
fisubs
inc
ret
stc
mov
lea
or
in
inc
and
aas
pop
loopne
xchg
push
jmp
add
das
jmp
in
divb
ljmp
add
repnz
aad
stos
sub
push
and
imul
add
push
cmpsb
leave
xchg
push
sahf
inc
fbld
jp
fnstenv
mov
enter
hlt
out
xchg
aam
dec
sub
push
aaa
xchg
push
into
ja
popa
nop
or
movsl
je
ja
xor
sahf
xchg
arpl
aas
inc
pop
sbb
push
jb
push
pusha
sahf
inc
out
mov
sub
call
loope
inc
imul
mov
sub
mov
jnp
sub
data16
or
jae
jg
cmp
pop
or
pop
xchg
pop
fidivl
jle
fdivrp
in
movsl
sub
stc
add
cmp
ficoml
es
out
cmp
pop
jne
xlat
jb
mov
pusha
adc
xchg
sub
push
push
idivb
inc
jl
mov
aas
loopne
and
adc
dec
cmp
xlat
push
lret
bound
xor
clc
lea
add
enter
fsubrl
xor
jbe
sbb
xor
or
icebp
stos
dec
and
es
jecxz
xchg
es
insl
pop
in
addl
lahf
out
pop
ficomps
adc
std
cmp
cs
xor
les
mov
mov
or
pop
inc
cmpsl
cmpsl
inc
stos
fsubl
xchg
out
les
int3
lret
sub
cmp
outsl
jle
adc
or
mov
cmpsl
dec
cmp
pop
cmp
out
ret
sub
mov
mov
pop
mov
mov
pop
cli
inc
mov
sub
and
popf
arpl
sub
push
sub
push
push
mov
lcall
cmp
ret
into
stos
pop
xor
aam
lock
xor
test
hlt
dec
and
inc
dec
scas
fstp
sbb
out
pop
mov
sub
dec
jl
sahf
mov
leave
bound
adc
insl
mov
push
mov
mov
jl
rorl
shll
fninit
xor
jae
inc
out
aad
orl
pop
fwait
out
dec
jns
rorl
xor
pop
fwait
pusha
shlb
les
jns
gs
sub
rcll
clc
test
out
das
out
cld
or
jne
and
xchg
adc
adc
jb
dec
add
pushf
mov
jnp
add
mov
mov
dec
repz
loopne
mov
mov
xor
lods
pushf
fdivrp
add
sub
mov
outsl
mov
mov
je
ja
push
and
cwtl
in
inc
xlat
pop
cmp
lods
jb
call
les
loop
aas
lcall
aas
jb
cmpsb
add
bound
dec
cli
fldenv
in
push
pop
sbb
imul
xchg
push
jecxz
mov
in
push
pop
sub
sahf
cmp
adc
insl
lret
push
pushf
and
jge
aaa
sub
jge
and
ret
and
cltd
ffree
cli
adc
mov
test
mov
nop
popa
pop
push
leave
pop
mov
lret
stos
dec
dec
popa
in
push
int
rcl
pop
pop
mov
cmc
repz
shld
and
popf
int3
mov
xor
ret
in
cmp
push
push
pop
fcomip
lds
out
xor
xchg
mov
pop
mov
ret
dec
rcrl
ficomps
mov
adc
adc
and
and
jmp
int3
push
in
inc
xchg
cmp
shl
je
and
xchg
adc
pop
addr16
xchg
inc
mov
ja
adc
loop
pop
sarl
addr16
data16
sbb
jp
or
mov
mov
push
mov
push
ss
inc
and
cmp
mov
mov
jl
adc
mov
hlt
jo
push
testb
cmp
test
arpl
cmc
sub
lcall
loope
stos
pop
lock
iret
fcomps
fwait
lret
js
add
xchg
popa
or
imul
mov
fistpl
mov
jae
int3
add
cmp
int
dec
clc
adc
inc
icebp
out
lahf
xor
cwtl
pop
pop
insl
dec
int3
stos
add
shl
cmp
enter
sbb
mov
push
mov
into
and
jne
xor
pop
sahf
lods
bnd
fstpt
mov
hlt
ljmp
mov
adc
mov
xchg
push
in
lret
mov
sbb
mov
mov
mov
insb
repz
loopne
adc
push
mov
pop
adc
lock
scas
mov
stos
shll
push
dec
jge
and
mov
dec
dec
jle
mov
fcomps
sbb
repz
fstpt
push
push
das
mov
jmp
insb
aas
add
int3
or
sbb
jbe
mov
inc
mov
stos
dec
or
add
jne
cmp
leave
sbb
xchg
mov
aas
jo
pop
add
fcom
scas
je
out
subl
dec
dec
lods
imull
add
cmp
xchg
test
shl
addl
cmp
in
movsl
sbb
adcl
pop
and
sahf
xorl
shll
idiv
sbb
hlt
mov
mov
ds
mov
int
or
or
and
enter
push
sbb
and
mov
shrl
jno
insl
pushf
mov
call
push
roll
xor
pushl
nop
std
data16
je
test
mov
lret
xchg
jbe
ret
ret
ja
ret
and
cmp
mov
inc
ss
inc
sbb
cmp
out
mov
xor
pusha
in
les
add
fnsave
push
sbb
negl
or
clc
scas
ret
cmpsl
cli
dec
xor
adc
in
jle
xchg
sbb
aas
push
cmp
and
leave
push
popl
inc
adc
imulb
push
jno
dec
mov
mov
sarl
aas
cld
inc
lea
outsb
inc
cmp
push
cmc
inc
nop
xchg
or
push
cmp
iret
std
or
push
xlat
jo
mov
mov
inc
lret
dec
add
fcomp
pop
mov
into
cs
xchg
decl
xchg
scas
sub
xor
lock
adc
inc
in
inc
call
stos
ljmp
mov
imul
jnp
les
loopne
mov
popf
add
pop
scas
adc
mov
aas
aad
cmp
mov
mov
push
xchg
sub
or
or
jns
xor
pop
test
cmpsl
or
and
insl
cmp
jg
movsl
cli
pop
mov
dec
test
mov
hlt
adc
decl
fstpt
sbb
adc
mov
and
cmp
mov
mov
jle
fs
xlat
push
push
les
jb
mov
cli
ljmp
ljmp
mov
mov
lea
xor
cmp
shrb
and
rcl
testl
inc
push
sub
std
fs
test
loopne
mov
addr16
xlat
add
dec
pop
mov
dec
cmc
call
add
loop
push
into
sbb
cmp
dec
sahf
and
cli
stos
ret
xchg
mov
push
pop
pop
stos
adc
xchg
inc
cmp
iret
push
mov
mov
addr16
lcall
fs
xchg
add
mov
xor
xchg
repnz
mov
mov
outsl
jae
sub
int
in
push
pop
bound
pop
aad
push
pop
mov
inc
xchg
sarl
sbb
sub
mov
lret
and
inc
sahf
in
dec
int3
xlat
enter
mov
andl
and
xor
mov
movsb
jo
mov
daa
add
add
jb
out
or
xchg
ja
inc
pop
out
jo
sub
mov
jecxz
mov
or
pop
bound
or
out
jnp
es
pop
jbe
mov
enter
jo
iret
mov
pop
gs
dec
mov
jno
fisttpl
jo
xchg
jno
xor
cmc
jmp
cmpsl
outsl
fiaddl
inc
jle
test
push
ret
mov
cmp
pop
jle
les
adc
sbb
nop
xchg
cmp
jno
xchg
and
leave
sbb
aas
mov
js
mov
stc
add
sahf
jge
jge
fists
mov
roll
mov
jns
imul
and
mov
das
sbbb
jb
jmp
ror
ss
pop
test
jmp
lcall
cmp
push
jns
sti
mov
lcall
popf
cwtl
mov
fmull
jb
push
pop
pop
movsl
faddl
ja
fadd
cmp
push
fadds
pop
data16
movb
xor
dec
cs
insl
rorl
mov
das
xchg
out
cmpsb
insb
aas
out
jge
xchg
sub
mov
bt
mov
test
and
sbb
addr16
fs
mov
mov
xchg
lock
and
iret
sub
testb
or
imul
sti
aas
test
cmp
rorl
rolb
and
jecxz
xchg
push
mov
andl
and
cmpb
dec
push
mov
jp
add
jmp
sub
or
jmp
or
xor
repz
daa
fldenv
xor
xchg
push
aas
gs
mov
gs
data16
cmp
xlat
ret
fisubl
popf
cmpsb
insb
pop
iret
jnp
push
sbb
test
lods
sub
movsb
push
es
icebp
and
or
arpl
dec
mov
cmp
add
sub
or
test
ss
ret
pop
jle
dec
sbb
jmp
and
shl
xchg
jmp
int
stc
std
movsb
fucom
sub
hlt
out
out
in
adc
adc
aas
mov
inc
or
mov
aaa
neg
add
movsb
push
jmp
inc
idivb
mov
cwtl
call
xchg
mov
scas
sar
and
in
pop
jg
nop
sbb
or
dec
inc
addr16
cmpsb
lods
cli
int3
and
adc
pop
cld
insl
je
and
cmp
and
cmp
cli
or
jo
mov
call
lret
cmp
push
xlat
shlb
pop
lret
mov
and
or
xchg
push
jns
aas
and
adc
or
int3
dec
subb
shrl
cmp
bound
sub
movsb
and
pop
stos
cmp
repnz
lret
aas
repnz
das
cmc
add
and
xchg
lods
jb
and
xchg
push
push
dec
cld
sbb
rcll
pop
frstor
push
jns
clc
in
pop
dec
dec
add
mov
popf
push
cmpsl
add
popf
sbb
sbb
iret
movb
jno
dec
push
test
fadd
pop
fists
nop
mov
scas
xor
sub
add
cli
fwait
std
out
xchg
xchg
mov
imul
movsb
arpl
movsb
scas
mov
cmpsl
in
ret
mov
leave
xchg
fdivrp
xlat
push
jecxz
repnz
pop
mov
ss
int3
jbe
out
shrb
jae
push
outsb
mov
lods
sahf
rol
lret
mov
and
out
jg
and
std
fdivrp
call
jb
popf
jle
icebp
loope,pt
scas
jno
adc
ss
bound
and
xchg
jecxz
dec
mov
arpl
sbb
inc
inc
rorl
jo
and
mov
jb
stc
ficompl
sbb
jo
into
inc
into
mov
repz
loope
jo
stos
in
das
or
adc
hlt
test
ljmp
add
xchg
mov
mov
adc
or
inc
pusha
jecxz
push
xchg
loope
in
cli
movsb
push
mov
insl
lahf
js,pt
push
ret
mov
cltd
sbbb
and
jno
dec
or
iret
test
mov
xlat
cmp
jns
mov
or
pop
sub
and
push
inc
sub
and
push
pop
cmovbe
push
mov
cmp
inc
xchg
lods
mov
pop
imul
rcrb
push
add
pop
inc
and
in
push
stos
mov
sub
pop
mov
push
test
and
and
in
and
push
mov
loopne
push
es
jnp
mov
push
pusha
jae
and
push
js
repz
mov
shrl
sub
push
fisttpll
mov
mov
cmp
xchg
sbb
std
test
in
leave
add
sbb
jae
push
fsubrl
cmc
jns
ss
repnz
cmp
push
lods
lea
and
lds
clc
xor
push
cs
movsl
scas
sbb
inc
iret
add
enter
test
mov
fwait
lahf
adc
xor
push
or
loope
cmp
push
into
sahf
fmulp
xor
jno
fcmovbe
mov
push
repz
fdivrl
insb
mov
test
fisubl
mov
fwait
mov
adc
scas
pop
test
jne
pop
popf
into
movl
and
and
arpl
add
jne
mov
movsl
pop
sbb
mov
pop
adc
in
imul
sbb
add
xchg
stos
xlat
test
xor
adc
fwait
dec
int
insb
add
jmp
jg
mov
xchg
nop
mov
sub
mov
imul
int
pushf
ljmp
loop
lods
sub
mov
ss
aaa
in
mov
jmp
push
loopne
inc
arpl
iret
mov
mov
add
js
cmpsb
das
icebp
xchg
mov
pop
add
or
mov
inc
cs
jo
lds
and
in
dec
add
mov
mov
call
mov
mov
mov
neg
jb
push
sahf
int
jecxz
in
insb
sahf
xchg
test
adc
add
xchg
cmp
dec
das
cmp
cmp
push
stos
pop
push
mov
mov
add
push
mov
xor
inc
pop
popf
push
sbb
test
iret
js
pop
pop
lea
mov
fisttpll
jns
push
repz
mov
pushf
mov
inc
cltd
mov
daa
insb
lret
cs
jno
sti
push
inc
mov
sub
mov
daa
gs
icebp
add
cltd
and
fildll
mov
push
xchg
daa
pop
xor
mov
or
mov
out
cmp
repz
push
xchg
pop
push
aaa
out
sar
fstp
icebp
clc
popa
dec
lret
fprem
xchg
mov
xlat
pop
push
dec
sahf
ljmp
lea
jp
cli
sub
aas
inc
gs
cmpsl
push
sbb
pop
adc
or
xor
fbstp
int
js
mov
cmp
cmp
add
jb
sub
out
mov
jbe
pop
test
scas
sub
into
loope
imul
adc
adc
loopne
pop
push
dec
les
sar
aaa
xchg
sti
fiaddl
mov
sub
mov
popf
jp
pushf
aas
adcb
fdivs
inc
outsl
xor
xor
fwait
inc
xchg
in
push
or
xlat
insb
out
adc
dec
loopne
inc
call
push
jle
loopne
test
pusha
test
and
sbb
jp
cmp
mov
outsl
sarl
push
push
arpl
xor
test
dec
lcall
ds
push
dec
xor
inc
and
aam
inc
outsb
fistpl
cmp
or
xor
rorl
les
fiaddl
push
pop
cltd
inc
movsb
push
cmp
subl
sbb
popf
clc
fidivrl
movsl
pop
rorb
dec
mov
push
out
rorb
sbb
push
fdivr
or
test
jne
and
mov
xor
add
xchg
popf
push
cli
loopne
pop
mov
sbb
sti
repz
ljmp
xchg
mov
iret
mov
mov
cmp
pop
jbe
adc
xchg
movsl
mov
push
stos
add
loop
cmpsl
xchg
stos
or
dec
outsl
inc
inc
imul
shl
test
mov
jae
push
xchg
shlb
sub
cli
jl
jle
mov
lret
jae
cmpsb
out
insb
jnp
insl
ret
test
dec
clc
push
mov
pop
mov
jns
mov
aam
push
sar
ret
inc
push
sbb
add
fs
f2xm1
mov
jne
jge
out
stos
call
out
jnp
jp
cmpl
pusha
xor
repnz
jbe
jle
pop
adc
add
inc
sbb
jb
jbe
movsl
push
xchg
mov
out
sub
repz
data16
jmp
loope
mov
adc
xor
js
cmp
daa
sub
push
addr16
cs
jno
hlt
jle
mov
cmp
and
xlat
bswap
enter
incb
movsb
push
xchg
or
push
out
lods
pop
out
jne
sub
pusha
ja
int3
imul
or
xor
inc
out
adcb
sarl
pop
jo
xchg
mov
push
stc
jge
sbb
lret
dec
ss
adc
in
sub
mov
fs
ja
out
dec
sahf
and
decl
pop
lret
jle
lret
stos
ss
add
sub
int
mov
or
insb
dec
repz
jb
inc
stos
test
das
test
mov
mov
push
push
push
jo
or
insl
adc
movsb
cwtl
jne
mov
xor
or
push
cmc
insb
pop
push
fbstp
pop
mov
nopl
es
outsl
jne
je
cmp
pop
data16
dec
adc
adc
int3
cmp
outsl
lods
xchg
jg
cmpsb
leave
xchg
add
jle
shrb
test
outsl
fs
mov
push
cld
test
push
cltd
sub
dec
repnz
loop
xchg
or
jo
sbb
mov
adc
inc
cs
dec
xchg
loop
add
ljmp
pop
sbb
aas
fildl
dec
scas
and
std
scas
push
sub
inc
hlt
sub
cld
outsb
cld
ret
rcll
jbe
movb
sahf
lahf
jp
cli
pop
mov
sbb
jecxz
shl
shll
fsubrs
xchg
les
mov
dec
test
ds
xchg
or
inc
in
inc
into
out
dec
scas
push
insb
rclb
pusha
add
adc
loopne
mov
adc
mov
sarl
mov
aaa
adc
popf
cld
adc
sbbl
push
fbld
fldcw
inc
pusha
fs
test
out
test
mov
cmp
shrb
mov
xor
bnd
fisttps
lcall
ret
xor
iret
fildl
push
jecxz
or
fdivs
jle
mov
enter
adc
cmp
push
aaa
mov
inc
push
out
iret
push
orb
imul
dec
sahf
dec
inc
push
or
imull
fwait
mov
les
stc
push
or
insl
mov
jmp
imul
in
scas
add
jle
dec
mov
in
ds
stc
ficomps
ljmp
repnz
pop
ljmp
push
frstor
push
xor
scas
cmp
xchg
inc
test
daa
imul
mov
pushw
jb
mov
testl
mov
adc
dec
xchg
icebp
or
dec
mov
movsb
sbb
push
xor
rol
fisttpll
scas
and
cmp
ret
adc
or
inc
int3
mov
and
sub
sub
test
inc
cmc
jo
insl
xchg
in
arpl
cmp
push
fldcw
jbe
insb
loopnew
and
adc
je
ror
dec
and
push
ret
add
and
pop
mov
shrb
dec
imul
cmp
out
jnp
push
cmp
pmuludq
sbb
xchg
movsb
jmp
in
out
loope
xchg
push
push
arpl
jb
dec
adc
jnp
push
adc
stos
mov
sub
inc
mov
data16
stc
cwtl
inc
mov
in
jnp
inc
daa
stos
mov
add
insl
mov
test
rcrl
push
xchg
add
ss
lahf
repnz
mov
adcl
mov
mov
push
jb
xchg
enter
jbe
pushf
movsl
or
fnsave
pop
cwtl
mov
mov
xorl
lret
ja
lods
jge
jg
scas
popa
xchg
flds
fsub
in
xor
loop
mov
shrl
cli
pushf
mov
pop
adc
inc
in
test
pop
mov
in
fcompl
xchg
jbe
in
outsb
movsb
inc
adc
jne
cmpsl
mov
in
pop
dec
dec
sahf
add
mov
xchg
adc
lea
popf
xchg
fs
mov
enter
inc
lcall
hlt
pusha
lock
subl
jbe
testb
sbb
fdivs
push
xor
sbb
or
inc
xor
bound
mov
lea
or
xchg
push
jbe
cmp
pushf
sub
xor
xchg
pushf
inc
and
int
loop
out
pop
dec
fildll
mov
xchg
sbb
lds
sub
jmp
out
cmp
in
movsl
pop
aad
mov
lahf
fidivs
scas
in
sub
test
xchg
mov
xor
dec
xor
rclb
fcoml
test
xchg
add
dec
mov
ss
inc
test
das
cmovb
adc
sbb
mov
inc
dec
sahf
xchg
in
das
xchg
inc
lret
stc
or
cld
lea
lods
sub
popf
adc
popa
dec
test
inc
popa
divl
push
cmpsl
push
shl
sub
int3
fcompl
push
sbb
or
lds
bound
int
je
dec
movsl
jmp
inc
sahf
stos
jge
cld
xchg
cltd
lds
les
push
out
add
sbb
cmp
aam
jno
dec
roll
adc
push
or
adc
outsl
mov
gs
adc
cmc
cmp
inc
adcl
out
jbe
sub
inc
in
movsb
lcall
push
xor
test
jmp
sub
mov
mov
pop
imul
cmpsl
inc
inc
arpl
push
daa
push
add
xor
inc
ja
sub
inc
pop
pop
xchg
sbb
dec
gs
pop
mov
and
jl
stos
inc
cmp
jb
inc
imull
sahf
lods
pop
dec
push
jge
cld
inc
or
inc
stc
dec
fwait
sub
mov
cmp
pushf
outsb
sbb
les
mov
lret
sub
lcall
xor
push
cmp
insl
mov
pop
movsl
clc
movl
dec
push
and
and
pop
mov
outsb
push
iret
push
pop
and
sub
filds
jmp
mov
mov
das
adc
daa
push
pop
adc
or
push
stc
inc
lods
icebp
pop
loopne
arpl
push
movsl
dec
enter
fs
gs
in
jne
pop
cmpsl
mov
dec
jo
jne
mov
xor
lcall
scas
and
ret
mov
jp
or
sbb
push
mov
push
scas
movsb
jae
sbb
je
fdivs
fbstp
outsb
jecxz
dec
add
mov
pop
rcll
mov
pushf
sbb
inc
xchg
push
pop
cli
idiv
dec
and
cwtl
adc
mov
das
sbb
je
sbb
ljmp
xchg
fistpl
repz
pxor
push
or
nop
jmp
dec
push
adcl
cmovge
xor
xchg
in
repnz
neg
call
or
outsl
cld
lods
ja
mov
daa
ds
sbb
dec
or
into
mov
xchg
and
sbbl
not
dec
dec
repz
dec
sbb
add
inc
sbb
jge
xor
mov
and
loop
iret
or
shll
pushf
adc
sbb
jmp
int3
jecxz
or
popa
nop
adc
cmp
pop
pop
loopne
ss
mov
push
movsl
mov
mov
xor
pop
sub
xchg
mov
and
stc
xor
cmp
aad
faddl
inc
out
fwait
sbb
dec
ljmp
jno
ret
sbb
jnp
lds
lds
inc
in
xchg
mov
inc
cmp
pushf
fwait
sbbb
xchg
orl
in
incl
add
push
push
shlb
loop
pushw
insl
cs
call
push
jl
mov
icebp
push
inc
out
add
repnz
fisubrs
mov
js
packsswb
push
jb
and
sti
out
adc
daa
pop
pop
nop
dec
cmp
in
jne
inc
cmpb
push
mov
sbb
rolb
adc
jmp
jb
pop
sub
pushf
shl
pusha
and
mov
inc
movsl
insl
cmp
push
jge
fnstsw
mov
and
outsl
lods
lods
int3
mov
into
daa
in
imul
ja
pop
push
xorb
data16
sbb
clc
jle
loope
mov
sub
aam
lret
out
mov
xchg
ret
lods
dec
es
xor
pop
add
jb
push
pop
ficomps
cmc
push
fidivs
mov
ds
sahf
out
lret
imul
sbb
in
sahf
in
dec
mov
sub
xor
lods
lcall
test
fsubl
in
mov
inc
test
add
jp
xor
sub
jno
mov
out
xor
movlps
sub
sub
push
icebp
repnz
std
mov
xchg
pop
fcmovne
sbb
mov
mov
ud1
nop
mov
and
outsl
dec
fwait
cmp
sbb
cmp
fmuls
or
shll
movsl
adc
lods
mov
in
daa
out
push
inc
push
dec
sbb
mov
xor
mov
dec
ret
loope
mov
dec
gs
popl
and
inc
into
daa
in
stos
jp
inc
or
lahf
lret
sub
jo
mov
xchg
out
or
xor
loope
ja
shlb
cmp
sub
cld
xchg
add
mov
fisubl
mov
ret
ja
shrb
popf
cs
aad
insl
sub
cld
mov
cmp
popf
mov
les
push
std
je
out
dec
in
pop
push
inc
pop
shlb
or
xchg
cmp
mov
xor
mov
scas
add
subl
loope
mov
mov
pop
cmpsl
and
push
arpl
sahf
jg
fidivrs
loop
neg
mov
dec
xchg
adc
pushf
fcmovbe
pop
in
adc
cmp
shll
inc
xchg
xchg
lods
sub
dec
push
js
mov
insb
rol
loopne
xchg
dec
pop
push
repnz
dec
sub
aad
and
xchg
lock
mov
test
nop
pop
add
xor
or
icebp
lock
inc
fldenv
pusha
inc
jmp
jae
and
push
fwait
mov
dec
lea
mov
fidivl
adc
dec
jge
gs
pop
jecxz
jne
sub
fsubr
mov
ja
into
jns
int3
sbb
cmpl
pop
fninit
push
xor
cmpsb
loop
cmc
ret
sub
mov
aas
cmp
js
sbb
pop
arpl
sbb
sbb
push
cmp
fiaddl
fadds
fucomp
imul
cmp
cmp
pop
sbb
in
mov
sarb
sub
pop
mov
fbstp
loopne
insl
shr
dec
jne
xchg
push
shlb
test
dec
cmpb
dec
pop
cmp
popl
in
sbb
mov
fwait
popf
pop
test
xlat
inc
mov
cld
xchg
push
and
dec
mov
movsl
mov
mov
mov
push
jmp
out
xchg
movsl
out
push
add
andl
addr16
loope
rcrl
inc
sbb
pushf
mov
fiaddl
rcrb
inc
test
aaa
xchg
lock
xor
and
stc
add
pop
scas
pop
xchg
mov
adc
inc
mov
and
cmc
div
adc
pop
loop
jp
sbb
cmp
es
subb
lcall
rolb
and
push
add
dec
xlat
aam
nop
push
bound
sbb
adc
xor
imul
mov
jecxz
ret
lret
and
enter
xlat
mov
repz
sbb
xlat
pop
adc
out
pop
and
add
dec
gs
mov
fstps
add
push
ljmp
xchg
scas
adc
jmp
sbbl
inc
in
jnp
js
xchg
pop
pop
aaa
push
xchg
adc
or
sub
movsl
mov
incl
jae
inc
aam
fiadds
inc
popa
pop
stos
data16
test
pop
test
imul
push
dec
inc
or
mov
inc
mov
andl
jg
lds
call
cmp
mov
and
or
adc
dec
repz
mov
daa
and
lods
mov
orb
pop
xor
inc
dec
cs
cmp
jge
rorb
insl
adc
test
aas
cs
and
xor
mov
jl
sahf
notl
rorb
iret
cmpsb
out
out
shlb
mov
cs
hlt
xchg
mov
cmp
adc
lds
dec
xlat
dec
sub
push
mov
jnp
dec
sbbl
push
lods
les
ljmp
cmpsb
cmp
inc
or
jmp
inc
mov
addr16
gs
lods
lock
pop
sub
inc
sub
dec
sub
or
push
jo
fidivrs
mov
dec
leave
jmp
in
cmp
lret
mov
mov
add
out
aad
int3
mov
and
pop
push
les
pop
lea
pop
pop
loope
adc
mov
mov
push
jecxz
or
sbb
lret
cmp
sub
vdivss
repnz
fmuls
mov
or
icebp
stc
jg
add
mov
in
bound
loopne
dec
test
stos
or
push
pusha
movsb
cmpsl
out
sbb
ljmp
shrb
inc
rolb
popf
mov
cmc
xchg
popa
add
or
scas
mov
mov
inc
cld
push
xchg
push
lcall
adc
int3
cmp
adc
pushf
push
andl
imul
lret
loope
mov
fistps
push
mov
ljmp
loop
jecxz
push
sbb
aam
or
cltd
clc
ret
popa
mov
add
out
rcr
pop
icebp
mov
jl
pop
xor
sub
pop
push
sub
stos
xchg
or
lods
mov
dec
fidivl
jb
push
mov
dec
xchg
or
jg
push
xchg
cmpsb
jp
stos
dec
push
push
mov
mov
inc
shlb
iret
push
fmuls
jp
push
lahf
and
in
stos
inc
push
rep
in
divb
xchg
inc
repnz
or
int
mov
add
sbb
shll
pop
repnz
faddl
sbb
fiaddl
fadd
cs
lcall
es
lret
enter
jno
mov
lods
add
popf
or
jg
jg
cwtl
movsl
mov
repnz
cmp
out
add
sub
ret
adc
mov
lahf
mov
xchg
shll
fsubrs
aas
rcr
test
mov
mov
fs
dec
movsb
mov
push
inc
ds
mov
sbb
cld
sbb
lods
adc
xlat
push
add
into
xor
shll
cmpsb
push
out
add
and
and
pusha
and
enter
enter
scas
in
scas
imul
dec
xor
outsl
mov
cmp
add
dec
flds
jae
shll
out
jnp
push
xor
out
outsl
lea
cld
ret
js
lret
inc
sub
cmc
in
pushf
xor
ret
movsb
ret
outsb
inc
aad
add
movsl
cmp
fbstp
stc
fldcw
repnz
dec
and
mov
pop
push
popf
sbb
dec
add
test
cmp
movsl
pushf
sub
stos
hlt
xchg
jne
add
xor
mov
testb
sub
jo
pushf
ja
fidivs
sub
sub
and
rcr
and
inc
or
xchg
mov
outsb
lods
addr16
and
push
jle
push
cld
dec
push
loope,pt
push
fcoms
rorb
lods
push
sarb
xchg
in
cmp
stos
out
repz
insb
arpl
lds
in
dec
icebp
aas
andb
stc
or
xor
mov
add
mov
lret
jnp
or
rclb
push
int
sbb
out
pop
inc
repnz
hlt
test
xor
or
in
pop
imul
movsl
push
xchg
insl
sub
sub
mov
jecxz
ds
pop
cmc
insb
mov
xor
pushf
xor
sub
out
push
mov
mov
aaa
jecxz
mov
lods
dec
mov
mov
sub
cmpsl
mov
push
sbb
jb
outsb
in
push
jnp
popl
sbb
cltd
orl
in
insb
cmp
popa
aam
cmc
jge
popf
xor
cmp
ds
or
jge
pop
mov
adc
into
dec
inc
fimull
movsl
sbb
xor
mov
lret
in
je
popa
cmpsl
cltd
movsl
mov
test
mov
fstpt
mov
xor
sub
out
movsb
scas
sbb
sbb
hlt
xchg
mov
bound
mov
loope
fidivrs
mov
lcall
lret
mov
lea
cs
inc
mov
shll
jmp
pushf
popf
sbb
xor
jp
ror
jmp
ja
sbb
lea
in
inc
mov
pop
mov
fdivrl
cmpsl
sbb
ja
jo
mov
rcrl
adcb
adc
pop
xor
sbbl
pop
mov
inc
lods
ret
imul
sbb
std
mov
sbbl
mov
data16
pop
xlat
sti
mov
mov
stos
mov
cmp
cwtl
sbb
and
xor
adc
dec
and
nop
fidivrs
pusha
test
xchg
fsts
ds
pop
iretw
addb
je
cmp
fcomi
pop
insl
fcoml
jecxz
test
in
push
dec
gs
xchg
sbb
popf
leave
data16
xchg
pop
xchg
mov
xchg
adc
jb
sbb
hlt
cwtl
hlt
pop
push
test
sbb
andl
bound
cmp
repz
fwait
imul
dec
sbb
cmp
jmp
mov
sub
or
sahf
lahf
out
jmp
in
shrb
xlat
loope
mov
ds
fstl
inc
jmp
and
pop
push
sbb
out
jbe
sbb
aas
cmp
inc
pop
add
inc
fldt
movsl
out
cwtl
add
pop
sub
add
gs
int3
cmp
scas
rcll
std
gs
sbbb
cmp
pop
push
shll
loope
jmp
cmp
popf
stos
repz
xchg
inc
aas
sbb
and
push
movsl
mov
xchg
std
mov
xor
lea
mov
addr16
lods
dec
xchg
ss
dec
push
mov
ss
mov
cmp
pop
lret
dec
mov
adc
mov
ss
sub
jle
shll
in
adc
frstor
je
int
call
cld
or
or
mov
mull
adc
pop
les
push
mov
aaa
sbb
jae
sar
popa
loop
push
popf
mov
jg
pop
enter
imul
fwait
js
shrl
test
sbb
xchg
shr
xchg
sub
jg
mov
xchg
cmp
and
xor
test
fidivs
or
mov
mov
insb
jb
movsl
xchg
shll
std
or
lret
aam
add
in
imul
push
loop
and
loop
aaa
movsl
fwait
pop
adc
inc
aam
cmp
ljmp
add
out
shlb
mov
mov
cmp
imul
repz
mov
gs
loopne
cmp
pop
jecxz
fiaddl
mov
insl
xlat
sti
enter
sahf
pop
add
mov
pop
push
int
mov
insl
sub
jp
dec
sub
pop
repz
mov
data16
push
add
dec
jbe
add
dec
test
es
mov
dec
out
scas
and
push
outsl
aaa
inc
test
test
and
es
cmp
push
out
jo
in
rcrl
pop
jae
bound
sub
xor
jae
mov
popa
xchg
inc
out
cli
lret
popl
mov
scas
mov
xor
mov
std
fdivrs
dec
in
mov
sbb
add
popf
and
shlb
pop
and
fidivl
adc
sbb
xchg
int3
inc
cwtl
fwait
jmp
jnp
xchg
fstl
aad
andl
mov
inc
sbb
mov
loope
jmp
xchg
inc
arpl
push
cs
pop
ror
add
pop
imul
lret
pop
aad
mov
or
cmpl
test
mov
adc
daa
pop
ss
jb
and
pop
push
sub
xchg
test
mov
loop
xchg
pusha
sbb
or
mov
xchg
andl
in
out
cmpsl
std
or
ss
out
lods
and
test
mov
rorb
es
outsb
push
ret
testl
inc
insb
inc
sbb
ds
adc
xor
inc
test
je
and
mov
or
sbb
mov
dec
cmc
out
imul
xchg
mov
mov
cmp
fsubrs
cs
dec
sub
ds
xorl
pop
fisubs
daa
add
loope
jg
popa
jle
lds
or
mov
xor
pop
pop
or
add
aad
test
sub
dec
inc
fistpll
test
lret
adc
xor
jno
pop
out
rolb
jae
lret
notb
fwait
ret
push
outsb
aas
je
xor
cmp
lret
in
or
mov
xchg
mov
adc
jo
push
sar
pop
arpl
inc
lcall
fistl
add
bound
dec
sub
adc
das
scas
dec
ffreep
jnp
jecxz
xchg
cmp
adc
xchg
in
fdivs
sub
jp
and
fs
jbe
std
mov
addl
jecxz
xchg
pop
jmp
sbb
incb
mov
xchg
push
push
xor
out
mov
pop
adc
ss
push
in
xchg
inc
push
in
sub
fsubl
and
mov
in
inc
pop
inc
add
pop
testl
fwait
dec
movsb
adc
mov
inc
dec
fmul
pop
imul
pop
stc
xchg
fsubrp
icebp
dec
cmpsl
int3
mov
shrl
sub
push
inc
push
sbbl
rcl
inc
inc
stos
movsb
lret
push
push
shrb
fwait
insb
inc
add
sbb
repz
inc
sub
cltd
add
mov
mov
mov
sbb
dec
cltd
cwtl
aaa
jl
push
push
idivl
lods
lcall
xchg
xchg
mov
dec
jb
jno
sbb
nop
xlat
or
mov
cld
imul
xchg
or
icebp
in
and
sub
xor
sub
lods
aas
ret
fmull
faddp
imul
pop
cli
inc
lcall
dec
and
arpl
mov
adc
test
mov
mov
out
pop
mov
push
cmpb
lock
sbb
pop
add
push
addr16
out
call
xor
outsl
xor
shlb
push
sahf
jmp
mov
out
jne
fnstenv
add
pushf
push
cmc
cmpsb
pop
in
sbb
or
ds
and
jge
in
mov
dec
bound
jno
neg
iret
sti
mov
rcll
push
arpl
in
cmp
xor
jo
rcrb
mov
jg
rcr
loop
imul
cmp
jge
pop
push
jl
inc
push
or
sbb
sub
cmpsb
es
orl
xchg
imul
xchg
pop
push
ss
mov
adc
ficomps
push
sub
mov
or
dec
push
pop
sarb
lds
inc
into
and
test
mov
sub
ja
mov
jp
jecxz
ja
jl
xchg
in
in
pop
mov
inc
imul
dec
int3
je
aam
push
out
xlat
or
jno
mov
lret
and
sub
cltd
mov
cmp
and
push
jl
push
xor
jnp
cmp
cmp
jns
mov
insl
shrb
push
fs
mov
push
jp
sarl
cmc
push
addr16
out
stos
mov
mov
xor
sub
jl
cmp
sbb
sub
mov
cmp
popa
ret
sbb
push
cmp
inc
cld
xor
lods
add
xlat
add
cmp
pop
add
out
in
add
ret
insb
cmpsb
imul
mov
mov
cltd
mov
cmp
xor
pop
sbb
dec
sbb
cmc
mov
out
daa
xor
and
rcll
mov
pop
loopew
inc
dec
jg
cli
jl
lods
imul
imul
xchg
xchg
es
leave
jg
cltd
add
rcl
or
mov
dec
xchg
lods
imul
popa
subl
jbe
lods
dec
push
fistpl
lods
fs
mov
mov
add
mov
xchg
pop
mov
sbb
push
xchg
mov
jae
shl
mov
mov
mov
mov
imull
fwait
imul
out
dec
mulb
mull
push
or
stos
ja
pop
xor
push
lods
cli
shr
inc
xor
jmp
fstl
dec
rcl
and
rdmsr
hlt
cld
cmp
jl
pop
imul
jecxz
ja
int
imul
scas
cmp
mov
je
sub
outsl
hlt
pop
divb
jnp
arpl
sub
jl
cmpsb
dec
push
jmp
pushf
pop
mov
roll
jns
and
mov
add
or
inc
fsts
divb
orl
sbb
fnsave
xchg
int
mov
fcmovb
jmp
test
movsb
scas
add
test
push
popf
pop
je
add
shll
xor
sahf
aas
js
in
xchg
pop
pushf
jb
sbb
pop
inc
add
inc
dec
mov
jmp
rcrb
sbb
add
ja
or
lds
dec
das
pushf
and
mov
xchg
inc
js
lcall
add
mov
add
mov
or
stos
clc
jb
cmp
jge
int3
mov
mov
lret
pop
push
std
pop
sbb
mov
adc
in
push
cmc
cmp
dec
xchg
jbe
xchg
cmp
inc
jp
jnp
mov
repnz
and
xchg
adc
adc
ret
or
jge
stos
enter
fldt
cmp
push
lods
ds
mov
inc
cmpsl
pop
add
mov
out
lret
mov
xor
jmp
subl
negl
movsl
pop
stos
mov
daa
out
lds
out
inc
mov
pop
orl
mov
cli
aas
dec
push
sbb
mov
or
popf
cmpl
lret
cltd
mov
lods
scas
lds
cmp
cmp
mov
cmpsb
subl
pop
ret
jl
adcb
test
fs
cwtl
or
addr16
sbb
shl
push
test
dec
jmp
lods
incb
lea
mov
push
xchg
and
mov
or
fst
jmp
and
xor
das
pop
push
pop
int
add
xor
fistpll
push
ja
repnz
push
jb
add
mov
pop
push
xor
pop
ss
xchg
cmp
dec
loope
dec
jl
xor
decb
jmp
adc
mov
lods
push
call
cmp
cmp
scas
pop
ret
in
outsb
lcall
lods
mov
inc
je
sbb
and
jecxz
add
pop
xor
jmp
movsb
andb
inc
clc
push
adc
lcall
inc
add
xor
cmp
repnz
pop
pop
add
sub
pushf
mov
cmp
jne
lods
repnz
lret
xchg
sar
cs
enter
in
ljmp
bound
dec
iret
or
test
stos
aaa
mov
or
and
pushf
xchg
sub
xor
xchg
fwait
loopne
ret
fnstcw
push
xlat
jp
ds
pop
mov
and
mov
mov
mov
cmp
or
call
je
jg
mov
test
imul
das
cmpb
stos
jne
imul
or
add
mov
test
fists
sub
jg
xchg
ljmp
adc
adc
jns
rolb
into
movsl
lds
mov
and
inc
pop
clc
xchg
lret
jbe
and
jne
fwait
cld
fmull
lahf
les
insl
icebp
inc
mov
lret
xlat
sub
adc
pop
int
out
stc
or
bswap
and
dec
aaa
add
enter
ret
test
loop
rolb
add
cmpsl
jg
nop
adc
lods
loope
das
xchg
or
jecxz
insl
mov
mov
rcrb
adc
push
xlat
popf
pop
push
out
and
icebp
nop
js
xchg
in
mov
sbb
mov
dec
mov
mov
aam
sbb
rcr
pushf
pop
ljmp
mov
or
pop
and
into
repnz
loope
cmc
mov
in
fisttpl
cmp
aaa
lcall
push
insl
mov
and
mov
inc
call
inc
dec
inc
adc
sub
jb
popa
stos
or
mov
push
outsl
sbb
int
jbe
cmpl
xlat
insl
adc
cmp
mov
push
jecxz
adc
add
sub
add
out
pop
les
loopne
jae
and
or
dec
test
in
pushf
jnp
jo
lahf
roll
dec
movsw
adc
js
or
lahf
aas
add
stos
pop
jbe
outsb
lds
jo
pop
frstor
jmp
cwtl
pop
mov
addl
sbb
mov
mov
or
sbb
mov
ja
adc
test
leave
push
outsb
sub
pusha
pop
mov
cmp
sub
inc
jb
push
pop
rcrb
adc
sub
shll
xlat
cli
add
lods
mov
aaa
sub
adcb
dec
or
in
inc
cld
mov
push
push
mov
push
cmp
jb
pushf
xor
loopne
adc
rcrl
xor
lods
push
jmp
cmp
mov
add
jbe
cltd
ss
xchg
ds
xchg
push
lock
mov
mov
add
xor
push
movsb
xor
data16
cmpsl
push
pop
sar
push
test
cltd
xorl
add
mov
jb
test
ficompl
les
adc
mulps
sbb
mov
cmp
out
xchg
andb
add
adc
sub
inc
sub
bound
out
sub
fbstp
outsb
pop
movsl
jo
mov
cld
out
js
inc
cli
sub
push
int
dec
cmc
aas
lds
pop
xchg
xor
in
sub
jp
mov
lret
xchg
push
mov
sbb
cld
fucomp
add
ja
cmpsb
popf
jns
outsb
and
jl
add
cmpsb
test
into
jl
jmp
arpl
adc
push
inc
ds
inc
insl
add
mov
cltd
mov
mov
jnp
addr16
pop
xchg
imul
and
sti
cmp
rcl
push
ja
cld
adc
push
mov
lods
mov
lock
test
pop
sahf
pop
sbb
cli
scas
aaa
mov
mov
inc
add
add
and
pop
pop
addr16
xchg
xor
fdivs
repnz
or
and
into
xchg
clc
insb
jl
jge
fcoms
negb
lock
addl
jae
nop
and
out
repz
js
shll
fadd
clc
xchg
jb
daa
sub
out
iret
in
push
add
les
pop
lret
lds
mov
in
pop
xchg
andb
sbb
pop
dec
leave
xchg
adcl
mov
add
sti
push
leave
cmc
xor
push
sbb
lahf
lock
out
add
pop
cmp
icebp
mov
jne
pop
push
sbb
mov
sar
movsb
sbb
cmp
addr16
push
cmp
in
in
sub
jle
ret
or
or
pop
or
add
mov
jmp
dec
mov
sub
xchg
mov
cmp
sub
sub
sahf
jecxz
or
and
pushf
mov
push
or
aad
cli
jnp
or
out
call
dec
push
sarb
jecxz
test
jp
fcomip
ret
test
inc
and
inc
cmp
push
mov
mov
mov
jmp
cmpsl
or
jnp
lds
add
pop
in
mov
inc
outsl
paddusb
push
xchg
loope
sbb
fildl
ret
addr16
lods
xchg
cld
movsl
jb
inc
pop
ret
mov
test
push
sbb
push
out
decb
sbb
dec
xchg
test
mov
lret
fstps
vpaddq
and
dec
lds
dec
pop
andl
outsl
cli
or
das
mov
inc
repz
jmp
shrl
test
lods
pusha
mov
xchg
mov
sarl
and
pop
sub
fisubrs
xor
shll
inc
xchg
ds
pop
pop
push
in
and
inc
cmpsb
hlt
jg
mov
das
sbb
and
clc
mov
mov
out
push
push
cmpsb
subb
xor
push
push
pop
push
loope
cs
mov
xchg
xchg
test
je
arpl
cmp
mov
jnp
mov
push
es
loopne
imul
push
cmpsl
fmul
push
and
adc
punpcklwd
push
stos
cs
jnp,pt
pop
sub
ljmp
daa
in
pusha
dec
dec
lock
push
fimull
inc
cli
push
mov
jns
call
pop
pop
lret
test
repz
ja
inc
or
lds
adc
lds
outsb
ret
lods
dec
int3
outsb
mov
xor
xor
cli
outsb
in
xchg
sbb
shrl
and
cmpsb
scas
lcall
shll
sub
xor
dec
xor
iret
inc
xor
sbb
test
ficompl
pop
leave
inc
fidivrs
inc
test
lds
fidivrl
mov
lock
les
cmp
cmp
shrl
clc
pop
push
out
out
mov
jmp
push
and
shrb
jne
lret
adc
shr
mov
xor
ret
xlat
stc
adc
jge
pop
and
push
push
xor
xor
and
xor
pop
into
int
test
lcall
test
lods
cmpsb
push
pop
cltd
outsb
imul
mov
inc
addr16
hlt
sub
sub
clc
xchg
mov
sub
jnp
mov
insl
push
mov
sub
sub
bnd
xor
inc
sub
inc
in
add
pop
int
dec
addr16
push
push
lock
in
sbb
sub
int
or
aaa
sub
data16
test
into
xchg
mov
fwait
sti
lods
cmpsb
pop
cltd
fdivr
adc
cmp
popa
test
je
lcall
and
cwtl
lcall
enter
pop
ffreep
repz
pop
jnp
sbb
adc
ret
dec
sbb
add
clc
jge
outsl
dec
mov
pushf
jg
adc
loop
ja
mov
jle
or
xor
repz
iret
add
add
rcl
decb
mov
pusha
fbld
pop
sub
xor
xor
mov
ds
int3
add
and
repz
add
rorl
cmp
push
js
push
xchg
pop
iret
xchg
push
icebp
dec
add
jge
mov
dec
mov
leave
out
xor
lret
adcl
notb
push
pusha
pop
sahf
inc
or
cltd
jmp
repnz
mov
and
sbb
sub
jb
adc
cld
cwtl
sub
fs
sbb
dec
mov
cmp
or
jae
and
enter
jo
jle
jae
inc
call
mov
int3
push
jecxz
xor
jnp
add
pushf
xor
or
ljmp
push
test
loop
stos
push
addb
mov
out
pop
jno
add
dec
xchg
cmp
sub
add
stos
add
ficomps
mov
test
pop
in
out
test
mov
pop
xchg
addr16
in
fcmovu
xor
mov
enter
and
rclb
add
popa
fidivrs
mov
and
loop
rcr
or
ds
movsb
fwait
sbb
cmpsl
dec
pop
ficoms
adc
icebp
test
push
lods
sub
call
jp
adc
jnp
andl
mov
fs
mov
subl
push
sbb
fldcw
xchg
mov
movsb
call
pop
xchg
cmp
inc
cld
cli
or
xchg
out
push
xor
adcb
test
cld
dec
push
imul
pop
das
xor
mov
push
imulb
enter
sahf
lret
push
mov
add
paddd
xchg
adcb
mov
lds
or
pop
imul
test
int3
fcmovnb
enter
ljmp
add
dec
stos
lcall
add
mov
xchg
xor
jno
imul
and
push
jmp
loopne
pop
or
xchg
mov
push
sahf
pop
mov
lcall
imul
pop
fs
pop
jle
fistpll
mov
mov
scas
and
out
imul
cmc
je
pusha
decl
mov
mov
xor
dec
fistps
add
pop
dec
mov
push
insl
and
jge
stc
sub
adc
push
push
add
sti
cmpl
xor
clc
xchg
push
sysret
push
mov
inc
mov
dec
cmpsb
imulb
test
lds
nop
sub
in
sti
adc
out
xchg
icebp
out
push
sbb
shll
in
pushf
mov
and
int3
pop
bound
dec
jle
js
dec
and
das
ljmp
xor
ret
shr
or
lcall
and
std
adc
jbe
pop
sub
mov
dec
mov
lods
test
mov
pop
dec
aaa
mov
mov
lods
loop
call
jl
cld
jmp
fstps
hlt
pop
mov
stos
cmc
dec
fidivrl
dec
enter
aas
jb
int3
incb
in
push
adc
xchg
mov
jg
das
mov
pop
and
add
enter
push
inc
jl
cmp
movsb
inc
cmpsb
or
dec
add
adc
dec
jo
jg
xor
inc
shlb
adc
xchg
ds
in
push
xchg
fildll
and
daa
adc
je
add
adc
xlat
inc
xchg
or
jl
fdivr
push
pop
popf
sbbl
add
and
enter
rolb
adc
dec
adc
mov
sbb
fs
sbb
xchg
stos
pop
xor
inc
lahf
into
xchg
test
mov
inc
jp
cld
popa
and
inc
pop
add
lret
scas
stos
jnp
insb
jle
gs
ljmp
add
push
pop
xchg
or
jns
stos
das
je
and
jecxz
xchg
mov
sub
inc
test
mov
leave
dec
mov
inc
movsl
add
mov
fcoml
pop
rol
pushf
das
push
iret
out
call
mov
daa
out
jle
out
into
cli
cli
popa
sti
jecxz
loopne
dec
dec
xchg
xor
mov
pop
and
aaa
mov
fldln2
mov
fsubrl
xchg
xor
jnp
cmp
push
sti
or
jno
sub
push
adc
mov
sub
iret
xlat
inc
out
or
jmp
push
aad
stos
sbb
push
sti
ss
mov
lds
sbb
les
popa
stc
gs
cmp
jmp
jecxz
mov
leave
inc
dec
fs
and
push
dec
sub
lea
mov
sbbl
sub
lret
push
arpl
insb
sbb
popa
imul
mov
push
movsb
cmc
ret
in
fstp
pop
inc
vmaskmovdqu
loope
add
fisubs
adcb
icebp
int
mov
inc
inc
fbld
xchg
rolb
mov
movsb
sub
mov
mov
mov
push
hlt
sub
jmp
loopne
inc
xchg
pop
lds
xsha256
cmpsb
push
lods
aaa
lret
and
lods
sub
jmp
pop
mov
sbb
pop
inc
dec
ja
xor
adc
xor
mov
jns
stc
imul
lret
pop
les
push
xchg
das
cmp
jg
xlat
mulb
ficomps
ds
mov
push
ljmp
cmp
and
lods
out
in
push
jge
inc
push
mov
out
std
outsl
pop
aam
aaa
or
leave
inc
dec
fists
pusha
adc
scas
or
fmull
cmp
nop
sbb
adc
xchg
loopne
loopne
testb
and
arpl
lods
movsb
sub
jnp
lds
notl
adc
in
movsl
xor
mov
stos
and
push
xchg
push
sub
cli
popa
call
rcr
out
sub
mov
adcb
in
movsl
incb
sub
mov
pop
movsl
lcall
jg
jne
pop
pop
and
cmp
xor
in
adc
pop
mov
lret
fs
push
xchg
lock
out
sbb
fistps
int
xor
mov
popa
repnz
sbb
cmp
int
sub
dec
push
sub
test
popa
xchg
lods
clc
and
inc
jnp
or
repz
push
fidivrs
insb
in
xor
mov
ret
and
fdivl
neg
mov
out
in
jmp
shrb
std
mov
fstpt
aaa
test
inc
pop
push
scas
scas
push
and
push
or
aas
jo
add
or
adc
icebp
jnp
dec
lock
adc
fmuls
mov
not
xor
add
decb
mov
inc
push
outsb
push
push
imul
jnp
dec
add
or
fsubl
cmp
push
and
daa
mov
movsl
jbe
pop
mov
sub
mov
mov
push
repz
push
pop
cmc
inc
scas
enter
loope
dec
adcb
xchg
ja
fsub
sub
or
gs
lret
mov
xchg
jmp
jl
ret
pushl
mov
cmpsb
out
push
mov
fxch
in
loopne
sti
clc
mov
push
xor
in
dec
mov
gs
inc
stos
gs
psubq
addb
xlat
cwtl
pop
pushf
mov
xor
mov
cmp
or
sub
in
jbe
push
cmc
cmp
int
mov
lock
aam
iret
dec
xchg
leave
ret
xor
rcrb
dec
addr16
iret
inc
mov
test
dec
repz
dec
mov
frstor
mov
inc
bound
pop
cwtl
lock
sbb
mov
movsb
cmpsb
or
jmp
cmp
cmp
aad
divb
jno
sub
xor
clc
sub
jae
pop
push
mov
fsubl
outsb
xorps
in
dec
mov
and
lret
stos
adc
aam
loop
push
cmp
out
cmp
pusha
jle
test
xor
sub
mov
outsl
lret
pop
push
loopne
cmp
add
test
les
popf
lret
fstpt
xchg
jg
mov
popf
mov
mov
js
inc
mov
movb
fildll
push
ss
mov
nop
test
in
inc
dec
add
mov
sarl
loope
call
sbb
insb
js
or
cmp
and
out
xchg
dec
jns
ret
pushf
rorl
pop
mov
and
pop
push
dec
or
mov
sub
ljmp
bound
inc
mov
inc
push
leave
pop
sbb
dec
test
or
aad
cwtl
pop
into
mov
scas
int
jb
mov
mov
lcall
mov
push
into
aad
jno
cli
sub
sbb
int3
xchg
jbe
dec
pusha
lods
mov
cmpsb
test
hlt
icebp
rorb
pop
jno
outsl
iret
sbb
mov
push
fisubrl
jle
push
aam
sbb
or
pop
push
cmp
lds
lret
popa
insl
mov
adc
aaa
out
xchg
sbb
cmpsb
movsl
xchg
inc
mov
pop
mov
sahf
int
movsb
arpl
inc
sarl
add
xchg
std
inc
add
outsl
jb
mov
mov
sub
bnd
mov
sbb
sub
fistl
aas
loop
das
addr16
push
mov
mov
pop
adcb
sbb
pop
icebp
cmp
mov
rcr
jmp
xor
cwtl
icebp
xor
cs
sahf
testl
lret
dec
lcall
xchg
inc
dec
mov
xchg
test
sarl
and
cmpsb
mov
jl
inc
pop
adc
push
xor
pop
xlat
pop
jns
dec
sub
mov
outsb
sbb
adc
pop
sbb
adc
xor
sbb
xchg
pop
rorl
arpl
sub
pop
cmp
inc
mov
fdiv
call
mov
pop
and
cmp
cmp
shlb
mov
popa
mov
mov
mov
mov
inc
push
mov
arpl
call
shrl
sub
or
xchg
in
lods
xchg
and
pmullw
lods
outsl
sub
int
out
jge
jnp
shlb
inc
pop
rol
addr16
and
orl
std
outsl
lea
push
mov
adc
aaa
dec
dec
dec
mov
adc
shl
movsb
sti
sub
cli
sbb
pop
dec
pop
mov
mov
push
pop
int3
lcall
mov
negb
sub
add
out
out
pop
pop
lret
outsl
mov
cmc
mov
push
outsl
shr
dec
subb
ja
inc
out
push
scas
push
popa
dec
cmp
scas
adc
fildll
test
sub
add
sahf
pushf
pusha
push
adc
mov
cwtl
loope
outsl
fucomi
xor
lahf
mov
mov
sbb
repnz
jbe
cs
lea
jbe
add
out
inc
sbb
mov
sahf
mov
mov
or
xor
cmp
insl
addr16
pop
mov
jge
jg
xchg
or
cwtl
and
ret
jae
sub
jle
stc
inc
mov
or
push
push
push
fs
ret
jge
jp
inc
or
enter
or
addr16
mov
insl
je
mov
sbb
push
xlat
inc
jp
sti
jg
sub
stc
sbb
push
fimuls
cmp
shlb
jns
test
dec
filds
xchg
mov
push
int
adcb
sbb
dec
sub
sub
ret
test
fdivrl
adc
test
push
mov
xor
push
lock
jae
push
mov
pushf
sbb
repnz
mov
into
aaa
pop
mov
adc
stos
inc
inc
inc
add
int3
insl
mov
lds
sbb
and
or
mov
int
addl
adcl
xorb
or
cld
into
cld
out
outsl
test
adcb
out
in
jecxz
fists
pop
leave
cmp
andps
std
xchg
push
lea
xor
sbb
xchg
or
xor
inc
or
mov
notl
xor
rol
add
xor
shrb
or
lods
mov
enter
sar
mov
ja
movsl
lret
cmp
xlat
mov
mov
sub
push
dec
or
nop
pop
lock
movsb
lods
out
fldl
xor
gs
jp
into
mov
sbb
call
call
push
bound
imul
push
mov
stc
xor
stc
sub
pop
fwait
push
std
and
mov
xchg
ret
mov
subb
mov
outsb
and
add
xor
push
sbb
aam
and
jbe
scas
push
mov
sub
mov
push
loopne
cmpsb
jge
xor
ds
gs
push
les
cmp
pushf
test
push
cmp
rorb
dec
fidivl
pop
xorb
jmp
in
jecxz
shl
adc
leave
jl
in
jecxz
into
jle
push
call
fbld
add
outsb
stos
stc
jl
inc
divl
in
dec
sbb
cmp
icebp
jne
dec
jns
add
jno
sbb
movsl
add
dec
repnz
jmp
lods
loopne
and
dec
pusha
sub
je
sahf
jo
ss
gs
fwait
daa
cwtl
sub
and
lret
outsb
iret
or
or
pop
fs
pop
and
stos
sub
mov
inc
pop
cs
xorl
in
and
jg
and
lahf
push
fidivs
in
cmp
dec
push
loope
popa
scas
sbb
insl
rorl
xchg
outsb
xor
mov
add
scas
shll
xor
enter
negl
test
stos
pusha
mov
mov
mov
in
std
in
bound
mov
mov
fisttpll
push
push
popa
jbe
das
or
loopne
insl
sbb
inc
lock
rorl
mov
and
and
add
outsl
sbb
insl
int3
add
inc
push
jno
cmp
mov
xchg
dec
mov
mov
fldl
jbe
out
in
lea
hlt
adc
jp
mov
repnz
out
xor
mov
cmpsb
subb
pop
je
mov
aas
lods
dec
pushf
push
stos
or
xchg
push
clc
hlt
dec
pop
jns
and
push
mov
add
bound
sarl
adc
stos
shl
fsts
in
pop
pop
daa
jb
test
test
or
adc
pop
jg
dec
or
jge
sbb
in
popa
pop
mov
jnp
mov
aas
push
adc
notl
cmp
lods
xor
adc
adc
lods
cmp
aas
sub
push
scas
movsl
pop
in
xor
jp
mov
out
push
rcrl
jg
and
shlb
dec
insb
js
sbb
jl
pop
pushf
mov
ds
adc
sub
jg
mov
mov
mov
iret
inc
andb
fwait
xchg
hlt
jmp
aad
fidivs
xchg
gs
fxch
cmp
add
add
cmc
mov
out
adc
jae
and
xor
mov
push
jb
ljmp
scas
loop
jne
xchg
pop
iret
ljmp
add
mov
lret
adc
jg
mov
sbb
iret
popa
call
fwait
cmp
jl
adc
es
xor
dec
sbb
shrl
push
sarb
andl
into
leave
flds
fcom
mov
pop
xor
inc
sub
scas
mov
pusha
decl
or
sbb
adc
inc
test
scas
jbe
mov
mov
and
lods
fwait
inc
into
mov
and
loope
jne
fisubs
cmp
jl
cmp
daa
je
pop
aam
or
sub
jns
and
pusha
adc
inc
inc
push
test
pop
enter
dec
sub
and
sahf
push
test
adc
xchg
fsubrl
roll
cmp
add
lea
mov
cmpsl
pop
pop
sub
push
mov
or
cltd
mov
ds
and
push
inc
sub
mov
mov
xchg
push
lods
orl
sub
mov
jge
je
popf
imul
flds
jge
aaa
stos
rcrb
adc
jle
jecxz
dec
and
sbbb
imul
sahf
inc
add
mov
cld
push
mov
push
jl
imul
jbe
jae
mov
repz
mov
or
or
sbb
das
mov
jne
jl
adc
inc
sbb
jb
cld
leave
sub
movsb
aaa
push
sbb
pop
push
div
bnd
cmc
fiadds
cltd
test
cmp
push
shlb
mov
cmpl
icebp
int3
jb
leave
sarb
push
mov
in
push
scas
xor
rcrb
in
mov
mov
fidivl
sub
ret
negb
jae
and
mov
inc
punpcklwd
sbb
lods
mov
cmova
roll
or
pusha
inc
push
pop
pop
aas
adc
inc
mov
and
cli
cld
cmp
dec
cwtl
rolb
jge
jmp
mov
mov
push
fiadds
xchg
stc
clc
cmpsl
jbe
imul
dec
jge
pop
lods
aad
icebp
imul
xchg
sbb
mov
mov
cmp
and
arpl
push
jne
and
push
les
mov
adcl
subb
ds
popf
xlat
fcom
mov
inc
jle
and
add
ret
push
cmc
lret
xchg
and
std
loopne
sub
push
sbb
lret
rol
iret
xchg
and
cmp
pop
int3
pop
lret
jnp
sarb
mov
cmp
jge
sub
icebp
outsb
popa
jnp
push
out
in
daa
cmpsl
jae
gs
dec
pop
sbb
sbb
test
push
pushf
cmpsl
insl
loop
dec
stos
cmp
xor
shll
fbld
add
sbb
jecxz
push
jg
es
rorb
push
and
and
popf
push
push
mov
xor
imulb
cmp
jnp
imul
mov
push
mov
jno
jbe
adc
ret
icebp
sbb
outsb
or
std
and
cmp
or
jne
mov
pop
sahf
andl
cmp
or
ljmp
xchg
or
hlt
std
push
jo
cli
mov
cmp
add
dec
rcr
movsb
or
add
jno
mov
lret
cli
sbb
push
shl
push
xor
std
ret
add
and
cltd
jno
mov
cli
mov
and
add
jnp
fildll
notl
es
fsubrs
xor
rolb
rcrl
movsl
sbb
adc
mov
mov
popa
pop
imul
sub
mov
fists
pusha
or
out
popf
mov
pop
and
sub
cmp
outsl
cld
dec
scas
push
sub
loopne
add
pop
leave
in
pop
rcl
jmp
pop
aas
sbb
sub
fsub
mov
fisttpl
lret
dec
add
mov
mov
lods
cmp
test
mov
cmp
xorl
or
mov
mov
test
arpl
std
add
mulb
pop
xchg
pushf
sbb
lcall
mov
ja
jmp
shlb
xchg
lds
mov
inc
in
xchg
imul
sbb
adc
gs
pusha
dec
test
add
mov
jns
or
test
dec
std
scas
xor
idiv
mov
xchg
add
fcmovnb
xchg
add
mov
mov
stos
std
mov
pop
ret
sar
sahf
xor
sbb
push
add
xchg
push
outsb
cwtl
in
sbb
popf
push
sbb
aad
shrl
int
imul
cmp
or
or
inc
mov
mov
insb
jp
out
inc
mov
mov
hlt
push
inc
sar
out
ficomps
cwtl
shrl
pusha
shrb
lods
or
cmp
sbb
inc
mov
pushf
bndstx
mov
dec
mov
inc
mov
inc
sti
inc
stos
mov
adc
cmp
jae
mov
xchg
fcompl
sbb
fmuls
inc
stc
cmp
ja
scas
mov
inc
sbb
mov
ja
aas
and
imul
mov
mov
pop
in
pop
add
sbb
lcall
aas
add
scas
lahf
xchg
jecxz
lahf
add
sbb
repnz
loopne
repz
sarl
shlb
cmp
fiaddl
pushf
cmp
lds
or
sub
mov
mov
jmp
aaa
mov
cltd
addr16
es
sbb
and
or
call
in
inc
cwtl
stos
notl
and
pop
inc
mov
pop
rcrl
xchg
inc
pop
inc
jge
rcr
lods
add
sbb
inc
sar
pop
lds
or
imul
xor
pop
cmpl
test
sti
mov
lret
js
jae
jge
jle
mov
fistpll
adc
lret
jg
or
mov
fidivrl
call
lock
shrb
scas
xlat
push
bnd
movaps
sti
xchg
sub
in
lret
cltd
mov
push
clc
enter
cmp
jp
cmp
pop
xor
sub
sbb
insb
ss
scas
into
or
dec
inc
jmp
sbb
sbb
pushf
sub
cmc
test
les
jnp
pusha
pusha
xor
or
cmc
xchg
push
icebp
vmfunc
inc
aas
inc
icebp
lahf
sbbl
inc
sub
cwtl
push
cmp
fldt
mov
xlat
cmp
out
xorb
enter
popf
stos
jle
in
sbb
loope
enter
push
mov
ret
pushw
sbb
xchg
test
adc
xchg
mov
sub
jmp
jle
cmpsb
push
dec
push
out
int3
inc
fsubrs
push
pop
add
add
popa
shrb
push
push
clc
or
add
jmp
daa
loope
pop
arpl
mov
enter
xor
push
jnp
cmpsl
int3
insb
cmp
jp
rolb
call
and
sbb
jle
mov
cmp
mov
mov
stos
push
mov
cmp
testb
jp
jns
add
jno
pushf
jmp
xchg
insb
pop
aad
cmp
fwait
inc
or
xlat
jp
test
sub
addr16
jbe
mov
mov
cmc
mull
or
mov
pushf
push
icebp
lret
sbb
or
stc
push
lahf
in
adc
outsl
adc
pop
jmp
push
add
stos
mov
fidivs
jmp
pop
aam
nop
mov
add
and
push
and
lock
scas
scas
fiaddl
adc
gs
stos
lods
pusha
divb
push
jne
sbb
sub
dec
cli
jns
mov
mov
or
xchg
xor
jbe
cwtl
das
std
pop
xchg
in
fimuls
add
add
inc
jle
and
aad
out
push
jg
adc
fwait
lret
pop
negl
fcoms
in
or
pop
pusha
adc
mov
cltd
push
les
pusha
pop
mov
mov
std
popl
sbb
cmp
jmp
mov
cli
push
clc
inc
mov
pop
in
pop
sbb
cmpsl
dec
movsb
sti
flds
inc
ja
dec
hlt
imul
les
pushf
dec
movsl
pop
movsb
popf
stos
push
xor
fmull
inc
sbb
loope
insb
out
adc
test
cmp
ljmp
in
mov
adc
push
adc
xor
pop
fwait
or
aaa
int
int
cmp
mov
loop
xor
ret
xor
sbb
outsl
xchg
repnz
ja
imul
popf
nop
xor
xchg
jns
test
mov
ja
lock
ror
or
jae
inc
leave
pushf
lods
inc
cmpsb
dec
repz
fadds
pop
fs
gs
xchg
outsl
sbb
sub
mov
loop
pop
cltd
ds
pop
xchg
mov
cmp
sub
mov
nop
aad
ret
mov
lds
iret
push
in
fstl
pop
or
hlt
jo
pop
lods
xchg
or
xlat
iret
inc
into
add
mov
stc
int3
mov
sub
addr16
mov
stos
pop
mov
pcmpgtw
cmpsl
xor
out
mov
push
xor
inc
jp
cmc
cmpsb
cmp
shrb
or
test
std
lods
push
sarl
mov
push
mov
sbb
popa
inc
testl
xlat
fimuls
add
das
sub
cmp
pop
popl
xchg
mov
dec
or
icebp
adc
dec
push
mov
xor
or
add
mov
or
jle
cmc
lcall
sub
adc
pushf
mov
add
es
mov
ret
or
xor
nop
mov
pop
orl
ret
push
sti
sbb
je
fcoms
pop
xor
in
cmp
andl
xchg
mov
enter
sub
jne
je
push
fwait
out
sar
and
js
sbb
xchg
push
stos
pop
xchg
ja
xchg
xorl
jl
lret
mov
bound
stos
repnz
mov
lock
ret
fisttps
or
in
loopne
dec
mov
hlt
faddl
daa
add
lods
inc
xor
fldl
or
fsubr
cmc
decl
jg
xorl
fs
mov
loop
sub
adc
lret
mov
fstp
out
pop
movsl
hlt
fstps
pop
pop
push
mov
or
add
or
push
mov
inc
and
cmpb
cwtl
lea
movsl
test
jg
cmp
sub
insl
sbb
xchg
not
test
push
sbb
xor
mov
adc
sub
ds
xchg
xchg
idiv
sub
push
scas
mov
sub
iret
mov
jb
mov
cmc
mov
pop
lods
push
mov
out
lods
clc
push
mov
pop
loope
inc
popf
shrl
inc
mov
stos
lock
outsl
jnp
fldl2t
mov
cmp
add
stos
pop
mov
mov
or
cmpsl
test
push
jns
sub
inc
jecxz
data16
push
adc
insl
adcb
xor
cmp
mov
neg
sub
mov
outsl
push
adc
imul
mov
aas
fidivl
orl
ret
add
faddl
dec
dec
sbb
push
sahf
cmpsb
popa
int
push
ret
in
or
mov
sbb
shlb
or
call
fiaddl
xor
sbb
or
dec
jge
rolb
sahf
inc
in
pop
sbb
dec
pop
ret
or
ljmp
scas
jnp
gs
dec
out
iret
mov
out
jae
jmp
or
insl
pop
sbb
scas
jne
sbb
inc
rorl
xor
lret
popf
lret
aam
jmp
cmp
sub
sub
jmp
movsl
aas
ljmp
nopl
clc
xchg
pushf
fnstenv
repnz
cmp
scas
or
jp
xchg
mov
and
xor
fnstenv
flds
mov
cmp
add
jb
lods
scas
push
pop
fcmovnb
rolb
or
xor
scas
out
or
daa
add
xor
mov
pop
mov
xor
xchg
mov
test
test
data16
sub
daa
mov
and
iret
pop
fstpt
add
add
les
sub
add
pop
jp
lret
jns
hlt
pop
push
ficoml
ficompl
cmp
mov
icebp
mov
mov
xchg
int
and
loope
outsb
insb
out
xor
xchg
in
bound
repnz
cs
stc
mov
xchg
mov
dec
movl
xchg
adc
cli
nop
push
loope
dec
pop
xchg
xchg
inc
jecxz
xchg
dec
iret
int3
xchg
iret
jne
js
xchg
jge
orb
xorb
push
nop
and
and
pop
mov
test
mov
adc
mov
mov
sub
push
lock
add
jb
shll
pop
xor
xchg
sbb
orl
jmp
pop
jl
push
out
mov
or
sbb
iret
aaa
lock
and
jb
mov
sub
fwait
jo
subb
fcmovnu
sti
mov
add
xchg
xorb
sarb
push
and
ret
sub
repz
aaa
loope
daa
add
mov
repnz
push
dec
lods
add
iret
pushf
fidivs
fwait
xchg
stc
mov
adc
pop
loop
push
and
loope
lods
push
dec
pop
lock
idiv
stc
xor
xchg
stos
pop
sub
cmpl
or
fs
xor
sbbl
xor
lahf
ret
sub
jnp
je
or
fidivl
pop
sti
push
mov
pop
fwait
lret
dec
add
dec
jge
xchg
ljmp
les
jbe
add
add
dec
in
mov
or
movsl
rcrl
adc
out
fdiv
hlt
stc
add
std
xchg
in
or
dec
hlt
sub
push
mov
ja
orl
cmpsl
jge
ss
arpl
arpl
xchg
shll
sti
inc
shlb
setae
mov
stos
loope
cwtl
sbb
dec
popa
jl,pt
xor
push
icebp
adc
xor
int3
xchg
inc
mov
cli
jno
outsl
add
lea
call
push
push
icebp
sbb
subl
push
imul
dec
dec
pop
mov
out
cmpsl
clc
lods
test
clc
jl
xor
call
jns
pushl
jae
sub
mov
adc
xor
stc
and
cli
repnz
rol
lahf
push
cli
cli
inc
mov
jg
xchg
push
fstpt
ret
jo
push
xchg
push
jl
out
dec
adc
xchg
aas
push
loope
jmp
pop
push
out
cmpsb
pop
cld
jae
test
and
sub
lea
add
lret
shlb
sbb
pop
mov
add
notl
pusha
xor
imul
gs
jb
movl
dec
cmp
xor
scas
lods
push
sti
inc
or
mov
sbb
mov
testl
dec
daa
mov
pop
and
testb
fsubrs
or
pushf
jp
ror
pop
pushf
mov
loopne
jl
jecxz
jnp
arpl
xorb
inc
shrl
mov
cmovb
and
sar
repz
push
mov
sahf
ret
or
dec
push
pop
test
ja
sahf
ss
pop
iret
or
lahf
sub
push
cmpsl
add
xchg
or
je
jge
mov
and
and
loopne
inc
or
mov
cmp
pop
sub
loopne
mov
addr16
xchg
ds
inc
mov
outsl
ret
cld
gs
adc
jle
xchg
inc
and
shlb
stos
enter
pusha
scas
jno
ss
push
movsl
mov
sub
stos
pop
push
ja
or
iret
cmp
int3
xchg
fst
rolb
ret
out
dec
movsb
cmc
cmp
mov
fldt
pushf
push
addl
dec
cli
pop
notb
call
mov
jns
sbb
or
mov
mov
rcr
push
bound
xor
mov
adc
cs
xchg
fs
sbb
jle
sti
je
push
push
push
push
xchg
mov
insl
fnstenv
aam
sbb
jp
popa
test
icebp
sbb
add
stc
xchg
and
rcr
aas
loopne
pushf
repz
adc
dec
jp
cmpsl
lods
push
aad
adc
jl
sub
cmp
xor
jae
fstpl
xchg
bound
aas
lods
insb
fcompl
mov
call
push
and
and
roll
cwtl
in
push
sub
repz
outsl
repz
insl
psraw
mov
add
or
fwait
add
hlt
or
sub
mov
mov
rcr
cmp
sub
pop
rolb
jne
jl
pop
pushf
jl
popa
jo
fistl
out
mov
imul
mov
or
mov
stos
stos
xchg
inc
mov
mov
and
dec
inc
sbb
mov
mov
pusha
cltd
cmp
adc
out
dec
dec
dec
jp
cmp
push
lahf
test
jae
scas
stos
jecxz
xchg
scas
cltd
mov
push
fsubrl
jge
dec
sbb
and
dec
add
mov
add
lds
in
negb
leave
fbstp
out
add
shl
test
push
mov
push
repnz
dec
ret
or
pop
add
testb
imul
dec
jo
pop
fnsave
cld
lea
fiaddl
cmp
xor
lock
jae
push
or
shr
or
mov
mov
dec
or
jp
jecxz
sbb
stos
mov
mov
lcall
sub
fists
das
or
or
jae
push
mov
push
scas
ret
into
test
mov
mov
aaa
mov
xor
neg
sbb
fsubl
cmp
shll
pusha
fnstenv
inc
xor
sti
out
push
mov
inc
xchg
pusha
xchg
inc
test
inc
cmpsb
jl
xchg
scas
mov
data16
pop
mov
aam
ja
enter
mov
xchg
incl
int3
xchg
jno
mov
cmpsb
sbb
test
fists
pop
pop
cmpsb
sub
mov
mov
jo
sbb
cmp
in
mov
xchg
mov
xchg
in
add
es
or
pusha
sub
or
add
repz
cmpsl
mov
rcr
shrb
aaa
lret
dec
sub
push
inc
mov
push
jecxz
ja
shrl
dec
fs
mov
pusha
mov
add
pop
gs
js
mov
clc
sti
in
sbb
ja
dec
dec
fldenv
cmpsb
pop
jmp
dec
das
enter
push
xchg
rcrl
and
bound
pop
inc
enter
shrb
mov
imul
loope
jnp,pn
fs
push
inc
insb
inc
in
sub
mov
jae
sub
dec
es
out
mov
and
jbe
jge
xor
ret
mov
testl
int
or
sub
jp
cmc
sbbl
xchg
mov
sub
sub
lods
sbb
sub
inc
enter
int3
dec
mov
pop
xchg
lahf
aas
lcall
jae
popf
sbb
cmpsb
cmpsb
push
nop
mov
add
xchg
int
mov
sbb
rclb
inc
sub
or
inc
repz
cwtl
rep
or
pop
aad
push
xchg
sarb
push
rcll
pop
pop
xchg
mov
jnp
mov
ficoml
dec
xor
cmp
inc
dec
cmpsl
xchg
mov
mulb
cld
push
add
mov
repnz
sar
callw
add
dec
dec
mov
test
clc
xor
xchg
sbb
mov
sahf
cmp
fisubl
jno
sub
out
ja
cmpl
rolb
mov
sbb
jo
xchg
cmpsl
cmc
dec
dec
frstor
cltd
imul
jl
xchg
aam
sub
fmul
or
mov
fdiv
je
pop
aad
ss
jle
out
push
test
mov
jge
addr16
scas
push
adc
frstor
fbstp
inc
fnstcw
cmp
jae
push
mov
rcr
or
outsb
and
mov
clc
jge
je
mov
ds
subb
jno
xor
ret
lods
popa
in
push
cmp
xchg
fsts
outsl
ja
xchg
dec
mov
aas
push
stos
pop
fstpt
sbb
test
int
add
mov
cmp
jae
cmp
lcall
mov
movsl
push
and
cmpb
pusha
das
xchg
por
fstps
daa
push
lods
lcall
clc
mov
repz
test
push
jns
mov
ljmp
sbb
jae
xchg
mov
shlb
sbb
aad
popf
imul
pop
xorl
test
xchg
in
or
cmp
addb
test
pop
stc
inc
mov
cmp
rol
je
or
sahf
or
cmc
xor
or
je
or
or
pushf
adc
fstpt
lahf
pop
dec
xlat
xchg
adc
lret
or
xor
mov
lock
cwtl
out
push
and
mov
aam
push
jmp
mov
repz
sub
mov
inc
stos
mov
mov
xchg
fisubs
popa
and
nop
jae
test
push
fdivs
mov
daa
inc
in
cmpsl
repz
std
lret
add
add
push
iret
push
inc
dec
int3
pop
adc
lahf
inc
push
push
jns
enter
popf
stos
push
icebp
mov
bswap
test
fistpl
sub
test
push
and
out
sub
and
mov
add
cmp
sbb
or
es
lods
mov
test
test
gs
nop
outsl
inc
add
movsl
jmp
out
in
pop
repz
and
mov
xchg
mov
add
test
iret
rep
rcll
outsl
rolb
cwtl
mov
push
idivl
icebp
jg
push
cmp
pusha
repnz
push
pusha
nopl
push
sahf
in
dec
add
sbbb
adc
insl
iret
fs
mov
lret
push
fwait
aaa
mov
lea
sub
mov
mov
sbb
sub
sub
iret
sub
jp
in
scas
lcall
add
sbb
mov
shrl
xchg
inc
addr16
adc
addr16
add
add
scas
sbb
jge
adc
cmp
push
gs
ss
pop
pop
mov
bound
out
data16
sbb
imul
fimuls
add
jg
mov
xor
mov
xor
push
xchg
pusha
mov
mov
fmuls
out
cmp
mov
dec
adc
mov
dec
add
push
ja
or
fsubrs
mov
test
jnp
das
ljmp
and
mov
xorb
sti
aad
adc
lcall
into
push
pop
sbb
xor
insl
fcompl
pop
mov
mov
add
and
out
cmp
or
dec
push
fidivl
sbb
js
mov
fwait
cmpsl
orb
pop
mov
jo
inc
mov
shll
test
aam
pop
arpl
pop
loop
pop
sahf
and
adcb
dec
mov
inc
xchg
sub
dec
sub
mov
push
bound
mov
sub
in
sbb
lods
add
mov
inc
pop
ret
mov
in
sub
pop
pop
adc
outsb
aam
adc
jp
sahf
fadd
xchg
xchg
xor
pop
push
mov
adc
popf
pop
cs
push
xor
les
cmp
adc
outsl
jle
das
cmpb
push
es
xor
xchg
rclb
xchg
inc
hlt
xchg
jbe
xor
sahf
addb
repz
pop
loopne
sub
lds
inc
inc
push
sub
cmpsl
mov
rcl
cli
pop
loopne
mov
push
sti
ficoms
adc
leave
sub
mov
movb
dec
js
sbb
adc
pop
fs
dec
pop
scas
inc
jns
jb
out
xlat
jle
pop
rcrl
and
sbb
mov
add
mov
les
lret
xor
or
xchg
mov
sub
lcall
int3
mov
add
addr16
mov
sub
lock
popf
repnz
mov
push
into
pushf
es
mov
in
push
int3
xchg
add
cs
jmp
lea
jp
mov
jl
push
jnp
neg
mov
insl
or
and
popf
out
jmp
jecxz
icebp
fcoms
inc
subb
insl
sbb
mov
div
insb
mov
sbb
cmp
popa
adc
aad
push
loope
lret
xlat
int3
mov
andl
aad
mov
pusha
xor
leave
je
dec
cmp
cltd
mov
pop
in
ja
cmc
sbbl
mov
in
push
jmp
xchg
add
jo
adc
fsubrl
mov
and
das
ss
pop
xor
mov
jne
int3
pop
cmpsb
pop
xor
call
icebp
mov
push
mov
imul
sub
stos
stc
ds
jecxz
fcom
repz
xchg
and
push
sub
dec
pusha
lods
icebp
xor
mov
and
je
or
sbb
fists
ds
fucomip
jb
xchg
int3
into
adc
xor
mov
xchg
pop
sub
movsb
mov
sbb
dec
pop
push
mov
jnp
scas
mov
lahf
insl
sub
fs
xchg
xor
es
xor
xor
inc
cli
stos
adc
pop
xchg
xor
outsl
mov
mov
cmp
pop
notl
lds
stos
dec
inc
ja
je
cmpsl
sbbb
xor
and
push
das
daa
mov
sahf
sahf
aas
lods
or
stc
rdtsc
push
lcall
xlat
outsb
xor
or
scas
pop
jo
mov
rorl
xor
roll
mov
mov
xchg
icebp
pop
xor
mov
mov
or
add
clc
fldl2e
mov
ljmp
add
mov
jae
pop
xor
xor
mov
sahf
mov
push
movsl
inc
jae
andb
jnp
dec
loopne
sti
ljmp
mov
mov
fwait
xor
mov
adc
dec
lds
xlat
mov
xchg
dec
dec
or
test
fisubrs
rep
jle
les
jp
mov
pushl
scas
sti
in
divl
mov
xchg
repz
mov
mov
cs
in
or
add
in
xor
push
and
push
xor
out
sub
je
int3
data16
ret
pop
sbb
mov
sarl
cmp
cli
stos
mov
add
jmp
mov
sbb
iret
xor
shlb
fldl
inc
mov
sbb
fcomps
mov
dec
xchg
rorl
jecxz
arpl
movsl
or
fldt
or
popf
rorb
inc
add
fwait
jg
and
jg
scas
fs
out
mov
mov
add
dec
faddl
push
and
outsl
jg
cmpsb
mov
jae
loope
cmp
jecxz
and
std
jle
cmc
bound
jae
xlat
lods
add
outsb
xor
stc
mov
pusha
sbb
push
jno
stos
sbb
and
inc
fcompl
add
fldcw
pop
fdivl
aas
sbb
es
jb
adc
xor
pop
fisubrs
je
pop
jo
sbb
push
fldt
mov
push
inc
jb
inc
into
btr
aaa
or
test
xlat
jns
arpl
ficompl
or
stc
test
and
mov
cltd
fisubs
sub
movsl
out
cmp
cwtl
push
and
repz
xor
add
stc
out
dec
add
dec
cmp
lea
pop
sub
cmpsl
stos
fld
aaa
adc
bound
mov
mov
xor
jge
mov
inc
jge
or
push
repnz
loop
imul
int
push
or
cmpb
fs
pop
mov
lds
mov
pop
lds
mov
xor
sbb
xlat
push
data16
cltd
pop
int3
push
das
dec
xchg
in
xor
scas
pop
aam
jne
push
out
sbb
mov
cs
ljmp
fisubl
jecxz
lahf
mov
call
das
sti
or
imulb
dec
dec
push
jl
bswap
push
xchg
jmp
add
mov
jo
lea
mov
int3
adc
xchg
movsl
pop
push
or
mov
adc
and
aad
loopne
shll
sub
dec
sub
jno
inc
test
mov
loop
int3
mov
mov
inc
cmpsb
add
sbb
addr16
popf
jle
sbb
std
cs
clc
mov
mov
inc
mov
pop
cld
sbb
cmp
jmp
leave
cmc
test
ja
pop
inc
imul
rorl
sbb
int
ljmp
jle
mov
cmp
adc
mov
inc
clc
sub
xor
sub
lods
pop
in
icebp
jle
inc
push
mov
add
jb
pop
iret
int
mov
jb
mov
out
mov
stos
sar
int3
mov
lahf
fwait
lcall
add
pusha
ljmp
mov
es
jo
lods
fstpl
sub
push
cwtl
insb
cmp
push
pop
stos
pop
add
push
pop
mov
mov
jae
fsts
jno,pt
loop
cmp
sub
cmpsb
pop
add
xchg
and
push
mov
jl
xor
cmpsl
dec
inc
and
fsubp
add
xor
jmp
cmc
dec
call
cmp
addr16
inc
ds
mov
mov
ficompl
in
inc
jge
into
mov
hlt
stos
sti
mov
ds
cmpsl
dec
and
push
sub
movsl
jno
mov
into
mov
xchg
cs
add
movsb
jnp
xor
ficoms
mov
daa
jb
test
ret
sbb
sti
xchg
cmp
mov
fcompl
lahf
hlt
repnz
dec
ja
inc
push
xchg
add
add
cmp
std
cwtl
and
sahf
pop
mov
outsl
in
addb
test
cmp
or
push
out
rclb
gs
cmc
dec
ret
inc
xlat
andl
mov
mov
popf
in
popa
int3
subb
xchg
jle
jns
fidivl
cli
jo
xchg
rcll
sahf
lcall
es
lea
nop
lods
jmp
out
popa
sub
jl
xchg
data16
mov
or
lret
je
push
mov
cmpsl
pop
pop
or
in
cmp
test
movsl
cli
push
pop
outsl
xchg
add
lds
add
rcrl
int3
jo
lods
mov
iret
in
sub
add
loop
adc
sarl
into
faddp
jecxz
mov
addr16
out
push
mov
sub
add
jb,pt
mov
pop
pop
je
lret
jno
pop
aaa
mov
dec
jle
daa
xchg
fstpt
xchg
sub
inc
jns
test
ret
outsl
enter
sub
lea
pusha
ror
aam
inc
cltd
inc
push
addb
cmp
adc
mov
jae
xor
cmpsl
push
das
inc
pop
int3
ret
shrl
lods
ss
add
adc
sbb
lcall
lret
adc
aad
fcmovb
mov
xchg
xchg
lahf
cmp
int
nop
enter
es
sti
scas
add
int3
scas
mov
inc
xchg
jmp
fisttps
sub
mov
inc
fwait
mov
cmp
push
cmpsb
loope
adc
ds
jg
test
jno
loopne
repnz
test
in
leave
sub
shlb
cmp
and
data16
mov
jmp
cld
mov
sbb
xor
mov
add
jb
pop
inc
stc
or
or
pop
push
rcr
cwtl
add
xchg
cmp
xchg
sbb
jb
cs
dec
cmp
mov
test
fsts
scas
jmp
jae
loopne
pop
inc
mov
push
lods
adc
out
xchg
in
mov
outsb
mov
fistl
bound
sub
sbb
andps
mov
icebp
and
sti
xchg
mov
push
sbb
out
sub
mov
dec
adc
xchg
hlt
push
push
jle
push
xchg
mov
repz
cli
fistpl
pop
dec
into
push
jecxz
xchg
cli
cmp
data16
or
xor
mov
aas
mov
xchg
dec
adc
in
or
shrb
cld
cli
push
inc
sbb
sbb
mov
xchg
pop
or
jmp
es
pusha
jno
xor
cli
cltd
popa
dec
push
mov
outsl
and
fs
gs
push
sbb
leave
dec
dec
push
jns
jne,pn
mov
adc
rclb
lock
xchg
data16
scas
sbb
pop
jmp
out
and
pushf
lret
pusha
std
cmp
idivb
pop
outsb
in
arpl
fwait
sub
fsts
test
test
dec
xchg
inc
es
subl
test
test
sbb
popa
aas
add
pop
rclb
popf
in
pop
pusha
mov
add
sbb
push
hlt
pop
in
mov
fnstsw
cltd
xor
sub
stc
mov
inc
shrl
push
imul
pop
or
divl
ficoms
arpl
jge
inc
sbb
jl
adc
and
jb
xchg
lahf
fwait
cmp
lret
nop
sub
or
cmp
outsb
fistpll
rolb
insl
iret
and
xchg
aaa
or
sbbb
sbb
lods
rcll
pop
add
aaa
ds
sub
xor
ret
pop
sbbb
mov
mov
xor
cmpsl
xor
xchg
and
mov
mov
out
mov
dec
mov
or
scas
fisubl
lret
push
add
mov
add
and
cmp
dec
jnp
leave
jge
rolb
lods
jne
jo
ljmp
leave
nop
dec
rorb
or
mov
rcr
addr16
mov
cmp
lret
lea
scas
push
or
pop
mov
lcall
aaa
arpl
push
in
push
mov
inc
jbe
pop
rcrb
push
sti
sti
lods
jmp
pop
xchg
or
in
push
xchg
jo
int
dec
cld
and
dec
inc
fimuls
add
xchg
cld
inc
loop,pt
adc
mov
aas
mov
mov
movsl
adc
adcb
test
push
addr16
loopne
push
mov
call
insl
mov
pop
mov
repz
enter
jne
dec
repnz
pop
mov
mov
popf
inc
lret
movsl
aaa
ds
add
pop
xchg
jno
mulb
out
pop
out
arpl
jg
push
lods
das
xchg
mov
pop
cmpsb
and
sub
mov
jae,pt
mov
add
or
imul
lcall
adc
sbb
mov
inc
xchg
xchg
or
loop
add
cmp
inc
popf
fiadds
sub
mov
jg
in
pop
ret
ljmp
mov
fmuls
mov
mov
lods
mov
sbb
and
andb
cmp
jp,pt
imul
xchg
jge
ret
mov
mov
nop
xor
repz
jmp
jbe
pop
push
push
fcmovbe
out
adc
push
test
jne
mov
push
and
and
outsl
call
jno
jno
idivl
cmpsl
std
xchg
sub
xchg
inc
fisttps
inc
int3
mov
add
les
pushw
ret
cmp
mov
pop
mov
lret
gs
lds
dec
int
add
mov
adc
jmp
and
dec
ficompl
xchg
adc
adc
cltd
lds
cmp
sbb
push
push
xchg
ljmp
jg
or
or
jo
xchg
jbe
add
cld
mov
pop
fdivrl
imul
mov
test
repz
pop
xchg
out
lcall
mov
aad
shl
or
std
add
jbe
movsb
mov
inc
or
data16
pop
adc
pop
cs
imul
jl
push
xor
dec
int
xor
mov
pop
and
sub
jns
lcall
dec
inc
pop
clc
add
sbb
dec
sahf
fildll
pop
add
xlat
cmp
imul
sti
ja
rcr
sarb
dec
xor
mov
sbb
cmp
bound
pusha
cmpsl
dec
inc
pop
test
dec
add
movl
dec
repnz
jnp
rorl
mov
cmc
call
cmc
hlt
mov
sub
mov
stos
leave
decl
adc
cmp
xlat
or
mov
pop
hlt
adc
mov
xchg
cli
xchg
sub
shll
inc
add
sarl
leave
call
dec
bound
addr16
push
loop
jnp
enter
bound
mov
cmc
xlat
xchg
adc
pop
sub
ficompl
subb
xchg
dec
and
aas
adc
xchg
push
into
out
mov
xchg
mov
push
or
or
ficompl
xchg
leave
adcb
dec
inc
cmp
cmp
ja
int
mov
inc
js
fwait
ret
mov
pop
push
and
aad
into
mov
add
add
movsl
jp
imul
cs
mov
pop
jb
nop
dec
mov
add
or
mov
lods
pusha
mov
inc
pop
adc
mov
or
pop
or
mov
xlat
add
mov
inc
dec
dec
cmp
rcrl
repnz
jmp
ss
sub
fistl
add
lods
dec
cltd
push
push
loop
mov
andl
mov
aad
pop
push
xchg
jg
or
sub
rorb
subl
ja
mov
adc
and
das
sahf
xchg
mov
dec
mov
lret
stos
xchg
dec
fsts
push
push
repnz
mov
cwtl
push
ljmp
lret
lock
movsl
les
sub
popa
mov
xor
les
mov
or
dec
jo
xchg
push
mov
notb
insl
add
cmp
fcom
mov
xchg
xor
xor
add
pop
sub
xchg
nop
add
arpl
fadd
xchg
into
cmp
ss
sub
adc
push
adc
fwait
lahf
inc
arpl
dec
xchg
cwtl
pop
lods
lret
pop
rol
xchg
out
adc
fstl
xor
dec
cmp
xor
out
pop
in
popf
movsl
fs
xor
into
push
cmc
mov
inc
das
rclb
outsl
fstpt
insb
push
lret
sbb
mov
sub
sub
jb
daa
mov
sbbl
inc
cmp
addr16
cmp
in
adc
jle
lods
or
xor
nop
outsl
enter
xchg
insb
mov
lock
shrl
inc
insl
cmp
pop
dec
sahf
or
test
mov
jl
cld
xchg
adc
dec
aas
jp
popl
cwtl
repz
dec
xor
fwait
pop
shll
and
jns
ficoml
leave
xor
fwait
shlb
rorl
and
jge
mov
pop
inc
add
imul
jns
out
test
ja
mul
gs
lcall
push
sub
nop
fbstp
mov
stos
push
out
fimull
push
std
ss
add
mov
lret
lock
inc
mov
sbb
in
jp
or
cmpb
out
xchg
addr16
add
jmp
clc
jecxz
mov
xchg
xchg
cmp
jbe
pop
or
lock
ret
iret
mov
adc
adc
lret
in
mov
lea
inc
jecxz
lea
scas
pusha
in
movsb
jb
mov
aam
mov
mov
jmp
dec
subb
int3
push
xchg
mov
push
mov
cld
push
scas
in
inc
fsts
adc
popf
bound
cmc
lahf
jne
test
bound
cmp
xor
pushl
andl
pop
imul
imul
adc
fsubp
sub
inc
insl
push
adc
call
ret
sbb
sub
or
cmp
mov
lea
mov
testl
push
sub
xor
popa
int
lret
push
xor
pop
push
bound
cmpsb
daa
push
divb
cltd
imul
fidivl
in
push
mov
add
mov
mov
ljmp
inc
jmp
lret
jns
jg
dec
sub
adc
test
dec
add
insb
dec
mov
int3
add
pop
jg
xor
in
xor
mov
mov
jge
pop
daa
sub
pusha
sbb
xchg
xchg
hlt
mov
push
in
cmp
add
outsb
dec
std
xchg
in
xchg
and
xchg
sbb
inc
iret
es
in
out
mov
outsl
push
adc
sbb
dec
push
loopne
xchg
les
xor
xor
mov
push
xor
dec
aaa
dec
jne
sbb
add
das
and
lret
and
in
adc
push
xchg
mov
lret
ja
cmp
jns
xlat
jg
fs
adc
lret
mov
lds
fisttps
repnz
insb
mov
data16
aaa
sahf
popf
sbb
test
xlat
movups
out
xchg
ret
xchg
jb
mov
or
enter
xchg
push
insl
mov
dec
sub
dec
sub
xchg
inc
lea
imul
orb
sbb
push
xor
and
fisubl
fimuls
ds
mov
adc
jge
lret
sarl
mov
ret
xchg
scas
pop
data16
push
inc
movsl
shl
test
add
xor
loopne
daa
out
es
add
xchg
int3
add
mov
cld
ds
and
je
mov
cmp
jp
jle
leave
bound
dec
push
pop
orl
ret
fdivl
add
xor
mov
imul
sub
nop
dec
jg
bound
pop
push
dec
fistpll
sub
sub
dec
cs
jb
mov
jbe
and
sbb
mov
imul
cmp
and
jmp
call
mov
cwtl
bnd
jo
mov
movl
add
out
mov
sbb
add
stos
pop
dec
movsb
sbb
imull
push
ret
and
dec
loopne
xor
pop
mov
sbb
cmpsl
push
das
cs
scas
lahf
mov
pusha
add
rcr
dec
cmp
push
lret
xchg
xor
lret
fwait
addb
out
in
push
rcrl
xchg
lret
in
adc
jbe
test
push
popf
cmp
mov
pop
add
push
movsb
or
les
add
push
ja
cmc
imul
xchg
adc
aaa
push
or
xchg
leave
push
das
ja
sbb
add
mov
dec
pop
pop
leave
push
imul
clc
mov
push
and
scas
pop
iret
inc
adc
push
xchg
dec
loope
fisubl
xchg
mov
imul
push
mov
push
dec
mov
and
stos
push
dec
cli
mov
xor
je
adc
cmp
jg
insl
pop
sub
call
pop
xor
leave
sbb
test
stos
std
in
mov
bound
mov
mov
bound
aam
test
sbb
loopne
inc
jbe
lods
jge
mull
scas
pop
and
pop
jns
push
cmp
enter
stos
xchg
sbb
and
es
fistpl
or
pop
mov
sub
sub
add
dec
sub
dec
es
jbe
xor
insl
jns
cmpsl
push
mov
mov
adc
ss
pop
lea
dec
xchg
xchg
imul
and
cmc
loop
ja
cmp
call
out
cli
iret
add
in
repnz
sub
ficomps
sub
clc
dec
gs
xchg
push
je
pop
mov
insl
add
dec
xchg
hlt
add
popa
sub
add
add
lods
aam
sub
fwait
or
out
popf
jae
and
outsb
out
mov
leave
out
mov
ljmp
jl
mov
or
jg
sbb
add
sbb
cmpl
cmc
out
xor
mov
mov
mov
into
sar
rcl
xor
call
jle
ss
push
out
jne
pop
setge
stos
jp
out
cld
cmc
mov
cmpsb
mov
cmc
loop
xchg
int
outsb
cmc
inc
incb
lods
pop
test
sbb
cmc
cmp
xlat
inc
loope
repnz
or
ljmp
and
fs
cmpsl
push
cmp
and
sar
push
pop
cwtl
xlat
mov
ret
push
push
jo
aas
jmp
arpl
fsubrp
nop
mov
cmpl
mov
fcoml
and
jle
test
ficomps
xor
and
add
mov
pop
cwtl
scas
xor
arpl
inc
xchg
push
cmp
xor
xchg
shlb
shll
xchg
dec
lods
and
jns
push
cltd
cltd
repnz
add
pop
leave
add
xor
inc
pushl
push
and
lcall
jmp
int
test
js
mov
repz
cmc
xchg
sub
jecxz
jno
pop
sub
insb
cmpsb
out
std
outsl
xchg
hlt
inc
xor
insb
cmp
out
mov
push
xor
sub
cmpsb
dec
aad
bound
sbb
mov
shlb
imul
sbb
mov
out
pop
or
jecxz
mov
fmull
imul
pusha
ds
imul
dec
dec
sub
jl
mov
imul
fisttpll
sbb
or
mov
sub
sub
adc
mov
insl
or
aaa
mov
adc
sbb
js
ja
mov
sub
mov
xor
adc
mov
test
pop
pusha
and
pop
lahf
add
repz
push
jns
mov
cmc
repnz
jnp
jbe
push
les
mov
out
xor
sub
ficoms
lahf
hlt
mov
movsb
mov
loope
cmp
push
int3
sar
or
loopne
cmpsb
mov
fidivs
cmpb
jmp
lcall
imul
lahf
add
jnp
push
xchg
mov
push
pop
jae
sahf
enter
mov
push
or
push
mov
or
mov
xchg
mov
icebp
adcl
and
scas
fidivs
stc
mov
stos
mov
cli
shl
aad
mov
movsl
or
lds
lret
sub
sarl
xchg
sbb
cs
lcall
dec
addl
sbb
sbb
pop
lods
cwtl
sub
test
xor
insl
fdivl
lods
inc
xor
jg
mov
in
mov
ret
insl
mov
je
add
leave
xchg
ss
pop
test
negl
lahf
lret
shll
addr16
bound
inc
mov
call
push
aad
add
jno
push
add
cmp
and
repz
jo
push
aaa
inc
pop
adc
adc
mov
repnz
mov
push
stos
jmp
jl
sbb
insl
clc
data16
dec
mov
stos
rcrl
jmp
nop
roll
scas
lock
add
insl
push
pop
frstor
bound
lahf
popa
xor
repz
sahf
loop
jle
adc
call
lret
jno
or
repnz
clc
mov
pop
and
movsb
shr
add
sub
jo
push
ret
cmp
jle
rcrl
sub
cmpsl
mov
cmpsb
lock
xchg
inc
and
in
lret
pop
popf
dec
jmp
xchg
mov
rclb
pop
ret
push
or
dec
add
and
xchg
pop
fnstenv
sbb
and
insb
xchg
ret
insb
ljmp
push
mov
jbe
gs
jge
es
incl
sub
mov
int
leave
and
dec
fnsave
or
mov
scas
jo
or
xor
shll
and
movsb
enter
sbb
dec
jge
add
fiadds
fcompl
xchg
imul
sbb
test
mov
push
pop
cmc
in
mov
bswap
les
ret
pop
cmc
add
rolb
push
dec
in
and
fbld
jo
mov
mov
inc
push
xchg
repnz
pop
xor
mov
mov
inc
js
fldenv
das
dec
dec
cwtl
mov
mov
mov
xor
stos
push
fwait
inc
ja
sub
scas
int
sbb
movsb
sub
int3
pop
cltd
jp
adc
loopne
test
pushf
lret
out
xor
popf
ljmp
jne
stos
push
inc
mov
dec
sub
mov
shll
jne
loop
xlat
pop
mov
xchg
sub
stos
xchg
push
js
pxor
lds
in
movsl
mov
pop
cmp
jne
cmovae
xchg
movsl
and
mov
jnp
adc
jecxz
and
hlt
jbe
sti
jecxz
or
out
push
mov
mov
cmp
mov
sub
mov
out
outsb
imul
cmp
cmp
dec
push
jb
mov
arpl
jne
inc
jno
stc
pop
cmp
in
lahf
outsl
dec
stc
push
pop
push
push
andb
jnp
dec
xor
test
mov
addr16
sbb
xchg
mov
in
into
ret
pusha
jg
lcall
xor
fidivs
cmpsb
std
mov
ljmp
dec
enter
roll
iret
popf
dec
inc
dec
hlt
xchg
or
pop
jg
xchg
in
dec
lret
adc
fmuls
push
daa
push
sbb
mov
add
xchg
push
push
push
mov
dec
mov
or
jbe
dec
mov
outsb
jmp
scas
mov
mull
fsubs
dec
dec
imul
loope
dec
jbe
cmp
ror
mov
loopne
cmpsb
je
inc
data16
mov
mov
push
mov
mulb
or
sbb
cmp
stos
sub
ret
mov
dec
inc
in
andl
sub
sub
aad
das
into
loop
inc
adc
ret
lret
mov
es
add
popf
inc
add
enter
icebp
mov
mov
shll
jnp
jg
cmc
and
shrb
ret
sarl
cmp
or
rcr
ss
xor
mov
sahf
mov
pop
xchg
out
push
pop
addr16
adc
mov
push
das
lret
dec
or
inc
out
cmp
aas
xor
mov
pop
fs
loop
sbbl
or
adc
push
hlt
sub
out
lds
sub
push
popw
inc
mov
xor
fscale
aad
dec
mov
cwtl
outsb
movsb
movsb
or
in
mov
push
dec
sbb
or
lea
push
mov
pop
dec
dec
cmp
enter
add
mov
les
xchg
clc
mov
push
jnp
jne
aam
adc
add
enter
jbe
jno
sub
xchg
pop
jo
pop
push
add
jnp
outsb
std
fcomps
sbb
push
iret
push
movsb
js
jb
and
pop
rclb
rorl
sub
insb
sub
lods
xchg
ds
xchg
loop
xlat
test
mov
jne
push
adc
je
hlt
mov
lods
sub
jbe
push
out
xlat
cmc
push
notb
push
push
mov
mov
mov
rcrb
or
mov
xchg
pop
stc
dec
adc
fcmovbe
jmp
inc
das
cmpsl
mov
mov
xchg
es
inc
fsubrl
or
cwtl
mov
gs
dec
add
in
aad
movsl
jecxz
jg
lcall
adcb
mov
gs
sub
mov
add
dec
mov
fcomi
push
fwait
pop
sbb
dec
lcall
inc
fbld
in
test
iret
xchg
mov
ret
icebp
aad
mov
idivb
popf
aas
jle
lea
xchg
out
idivb
stos
clc
push
and
or
dec
mov
filds
sbb
insb
pop
or
mov
lods
rcll
sub
sbb
add
into
mov
icebp
aad
fsubrs
inc
or
pop
cmp
and
scas
vmread
imul
inc
dec
in
mov
es
xlat
decb
and
outsl
and
xchg
imul
pop
out
lock
int
out
sti
jo
dec
pop
xchg
addl
mov
std
add
rclb
enter
movsl
divl
sahf
jbe
adc
cmc
outsb
psubsb
sub
jmp
pop
add
pop
pusha
add
sbb
sbb
cmp
pop
jb
sub
add
mov
rcl
mov
dec
mov
adc
mov
pop
cmc
adc
lea
push
repnz
mov
ret
mov
rolb
mov
xchg
lahf
sarb
add
and
push
iret
andl
jle
insl
mov
or
mov
shll
add
cmp
push
bound
fnstcw
xlat
jecxz
push
xorl
hlt
ret
adc
outsb
nop
testl
shrb
pop
popa
or
test
pusha
fstps
sbb
fcmovnu
leave
adc
cmp
cmp
stos
ds
shll
cli
incb
xor
test
xchg
inc
ficomps
pusha
out
aaa
pop
xchg
mov
movsb
movsb
inc
mov
roll
iret
lahf
nop
jns
arpl
addr16
int
pop
orl
and
repz
jns
sub
xor
fcomps
out
adc
jp
les
lods
sahf
loop
lcall
repz
jno
std
xchg
popa
popa
loop
inc
cmp
stc
stos
dec
and
loopne
inc
jo
out
ds
cmpsb
out
cmpsl
dec
jecxz
in
jmp
not
insb
pop
jo
test
sahf
imul
scas
mov
pop
or
jne
jbe
or
dec
pop
and
mov
dec
dec
sub
cmp
jo
dec
jg
add
cli
fisttpl
mov
cmpsb
dec
xchg
shlb
push
and
sub
xor
sbb
mov
sbb
add
mov
push
lea
jecxz
xlat
jb
stc
popa
cwtl
sbb
xchg
pop
out
iret
imul
sbb
testl
jle
addr16
mov
or
push
xchg
dec
xor
and
mov
sub
sti
int3
sbb
stc
pusha
cld
cmp
dec
push
in
fsqrt
test
cld
andb
and
xchg
cmc
lret
dec
loop
and
pushf
push
arpl
lret
or
lahf
call
fucompp
add
push
pop
xchg
jne
mov
call
imul
dec
jns
mov
xchg
movsl
test
cmp
and
arpl
lods
and
pop
lcall
pop
xor
and
ja
mov
imul
sub
push
pusha
insl
movsl
cmpsb
jb
shl
cli
sbb
xchg
cmp
jne
js
rorb
inc
pop
js
xor
xor
hlt
incl
loopne
stc
add
and
jmp
repz
xor
std
dec
inc
or
jmp
jo
and
pop
mov
cmp
jnp
in
mov
or
mov
ret
jne
and
jbe
mov
mov
sub
cmp
imul
mov
mov
jno
movsl
loop
adc
js
lods
scas
cmp
jecxz
insl
push
xchg
dec
icebp
mov
aaa
jbe
arpl
in
adc
enter
test
dec
sbb
adc
cs
sbb
adc
push
rorb
jae
daa
xor
sub
lds
jge
movsl
mov
orl
add
jmp
rcl
repnz
sbb
jmp
push
or
adc
out
insl
xor
rcrl
cmp
test
fcomip
push
add
loop
add
fdivrl
xor
jecxz
xor
jbe
hlt
into
out
lret
mov
add
sbb
cld
jmp
xchg
xor
sbb
cmp
sbb
movsb
xchg
jns
mov
jnp
or
ljmp
lock
dec
dec
shlb
adc
cld
loope
push
movsl
hlt
xchg
xchg
jle
inc
sub
bound
xchg
mov
push
push
jb
data16
mov
jb
xor
out
or
inc
std
bound
into
cmp
in
add
loope
inc
jg
and
mov
popa
sbb
or
inc
add
fsubrp
pop
pop
and
dec
aaa
aas
jns
loop
ret
lods
lret
jb
jnp
or
jo
jmp
sub
repnz
std
jbe
push
subb
jbe
xlat
xchg
aas
sub
outsb
out
int
jnp
xchg
rorb
insl
adc
push
loope
das
mov
xor
insb
lret
xchg
int
mov
jns
pusha
cmpsl
cltd
push
pop
test
cmp
adcl
repz
xchg
and
imul
cmp
shl
mov
inc
mov
mov
pop
jle
in
fcoms
lret
addr16
lock
ljmp
mov
shl
jae
arpl
icebp
repnz
fildll
mov
icebp
hlt
sti
fs
cmp
shlb
jb
ret
or
sbb
cltd
add
mov
push
das
add
xchg
and
fnstsw
cmpsl
lret
pop
js
push
push
mov
shl
xor
mov
cmp
test
gs
std
lret
jmp
je
mov
pop
test
mov
loope
xchg
dec
and
cmp
adc
out
mov
lods
jae
loopne
inc
sub
lock
rolb
cmp
sbb
dec
and
nop
adc
xchg
pusha
mov
cmp
shrl
cmpsl
pushf
xor
push
push
divl
shll
dec
xchg
add
adc
aam
les
clc
push
mov
cmp
out
pop
mov
adc
push
pop
mov
add
cmpsb
mov
stc
inc
fisttpll
fcoms
les
test
pop
loopne
jl
out
loop
pop
jb
fstpt
mov
ljmp
and
xchg
mov
mov
arpl
loope,pn
enter
pop
mov
cltd
test
jbe
dec
and
and
mov
int
sbb
icebp
insl
stos
cmp
mov
cmpsb
sbb
mov
addr16
cmpsb
bnd
movsb
adc
mov
jno
fs
shl
xchg
mov
inc
sbb
sub
out
test
xor
outsb
mov
push
adc
mov
fwait
movsb
lods
push
pcmpeqw
mov
popa
pop
xor
repnz
pop
add
popf
cs
lds
in
sbb
adc
scas
cmp
xchg
scas
and
push
dec
sahf
or
push
bound
ret
jae
jmp
jae
pop
outsl
mov
add
jne
push
popa
inc
ss
scas
lds
push
icebp
xchg
jp
popa
pusha
or
mov
inc
inc
insb
mov
aam
pop
jae
inc
hlt
out
filds
or
imul
inc
sbb
rcrl
lahf
inc
lret
inc
adc
ret
mov
add
or
inc
and
add
cli
adc
pop
sahf
xchg
cli
adc
sahf
out
adc
lret
push
push
sbb
push
jo
addr16
add
fidivl
cmpsl
out
out
cmpsl
xlat
ficoml
lcall
cmc
fnstcw
icebp
imul
xchg
inc
push
cld
fcoml
mov
add
repnz
push
push
cmp
xor
mov
sbb
sbb
sub
sbb
movsl
add
mov
mov
fcmove
mov
lahf
fwait
icebp
fs
fs
rcrl
push
push
or
cltd
jmp
adc
lds
or
dec
sub
in
enter
sub
stos
in
cmp
xlat
xor
js
int3
cmp
push
test
pop
lcall
push
cmp
jbe
sbb
jo
into
dec
lea
into
xor
sbb
dec
jecxz
pop
mov
sbb
lret
add
loop
inc
adc
or
push
mov
dec
mov
xchg
pop
cmpb
ds
call
cltd
rcrb
dec
fcompl
pop
adc
mov
std
imul
xchg
orb
jge
mov
or
cwtl
dec
pop
jg
in
adc
nop
sbb
lods
and
shlb
add
xchg
jns
push
shll
cs
popf
in
push
mov
or
inc
scas
cmp
xchg
out
out
subb
cltd
push
or
cmp
adcl
bound
repz
lds
test
add
cmp
inc
mov
pushl
imul
inc
inc
adc
cli
cli
cmp
mov
test
dec
xor
and
xchg
outsb
sbb
aam
mov
inc
imulb
incb
movsl
cmp
adc
out
dec
or
out
bound
out
inc
jle
nop
lret
inc
push
jne
and
scas
leave
mov
cs
mov
add
imul
xor
inc
nop
mov
cld
jae
sub
mov
insb
inc
sbb
push
push
lea
int
shlb
nop
jl
int3
jge
xchg
lea
jo
jp
xchg
pop
jae
arpl
jbe
js
int
dec
mov
xchg
iret
enter
loope
mov
push
jb
fstpt
xor
call
mov
loope
jno
aas
aaa
mov
cmp
js
lds
mov
in
icebp
aaa
sbb
lahf
push
and
dec
mov
aaa
add
mov
mov
loopne
and
cmp
xor
mov
push
ja
test
push
mov
xchg
xchg
jno
xor
xor
data16
in
jno
incb
aad
out
mov
repz
pusha
sarl
inc
sub
andb
add
mov
and
fiaddl
mov
jo
into
mov
lret
movsl
cld
out
mov
jo
inc
aam
mov
fistl
popa
fisubl
add
sti
lahf
int
icebp
loop
cmp
xor
lret
push
and
aad
cmp
out
mov
loopne
in
jl
inc
sbb
dec
mov
dec
in
jp
repz
mov
push
nop
mov
mov
xchg
push
cmp
lea
fdiv
imul
shlb
out
sbb
mov
xchg
dec
mov
pop
and
add
fidivrl
iret
je
and
add
arpl
mov
outsl
push
push
aad
adc
push
adc
pop
and
iret
je
shll
mov
stc
out
dec
insb
lcall
xor
xor
scas
out
test
std
jno
rcl
and
pusha
mov
out
sbbb
push
sar
sbb
xchg
mov
jnp
mov
and
inc
frstors
shr
cmp
mov
add
cmc
and
arpl
mov
xchg
aam
cmp
mov
cli
leave
dec
icebp
inc
xchg
mov
test
pop
fsubrl
stos
repz
mov
xchg
xchg
das
cmp
fdivl
mov
clc
mov
or
xchg
adc
jmp
jne
dec
ret
mov
fsubrs
cld
sbb
fs
or
cmp
jge
aad
cmp
and
mov
add
out
fwait
inc
cmpsl
addr16
lds
pop
loopne
push
mov
sbb
mov
xor
loopne
and
fisttpl
movb
mov
test
jbe
xorb
cmc
cmp
push
jae
adc
cmp
and
pop
pop
adc
push
inc
xor
adcl
outsb
js
loope
or
subb
data16
in
mov
mov
xchg
test
data16
icebp
jae
jg
push
addr16
addr16
inc
sbb
aas
push
xchg
into
mov
les
les
dec
cmp
mov
sbb
xor
mov
test
inc
push
xchg
mov
push
xor
mov
adcl
rcr
dec
mov
adc
mov
not
lcall
inc
ja
hlt
in
mov
outsl
arpl
cmp
test
or
cmp
mov
sub
xlat
xchg
sahf
scas
inc
les
pop
xor
sahf
mov
lods
mov
sub
pop
add
inc
adc
add
jle
pop
lahf
inc
push
fstl
mov
xchg
add
fdiv
cli
push
mov
pop
lods
movl
mov
xlat
stos
sbb
jg
aad
addl
iret
in
push
stos
mov
aas
loopne
int3
mov
ljmp
ds
das
clc
das
adc
mov
lods
xor
fidivrs
pop
lds
mov
stos
test
popf
xchg
mov
mov
mov
jne
cld
push
in
hlt
mov
lea
adc
imul
mov
push
mov
xchg
fisubs
jge
insb
test
pop
pop
testl
iret
jge
loopne
or
out
gs
jo
adc
lods
stos
xchg
jmp
adc
and
pop
mov
xchg
aaa
testl
mov
push
mov
mov
mov
dec
mov
lods
dec
out
aaa
sub
mov
test
sbb
shr
lcall
and
push
inc
cmp
aas
dec
js
lahf
sub
cli
and
sub
jge
and
xor
out
idivb
test
jg
inc
cmp
int3
scas
pop
stc
stc
cmp
cmc
movsb
mov
cwtl
adc
add
xor
sbb
sub
stos
rol
es
lahf
clc
dec
add
pop
es
mov
leave
imul
jle
lds
push
push
pop
sub
jns
out
je
int3
jo
imul
daa
sub
sbb
loope
ja
addr16
xchg
sub
adc
mov
lret
cwtl
add
mov
test
jecxz
pop
xor
loope
jno
arpl
aam
stos
test
into
xor
inc
int3
cmp
outsb
jecxz
enter
mov
jl
inc
das
mov
pop
pop
add
mov
sbb
ret
or
jecxz
dec
push
push
pushf
mov
lods
add
pop
cmpsb
stos
pop
aam
test
sub
in
cmp
into
in
pop
shlb
iret
mov
adc
mov
xchg
push
or
xchg
das
push
rcll
pop
sub
leave
orb
adc
bound
adc
dec
mov
pusha
pop
outsb
lods
xor
and
add
into
add
sbb
or
in
pop
push
or
cld
test
imul
imul
jne
push
add
and
popf
pop
lds
inc
or
clc
inc
jle
not
das
sub
sti
mov
xlat
sbb
lods
lock
div
or
jl
cmp
sbb
add
repnz
jp
sub
stos
popa
mov
pop
stos
out
cmpsl
xchg
dec
mov
ret
push
outsl
and
out
xchg
and
pop
fidivrs
mov
and
ja
inc
add
gs
fsubr
loopne
mov
dec
ficoms
fidivl
rcrl
test
test
sub
sbb
add
mov
imul
xor
dec
pushf
push
dec
fnstcw
push
sbb
sub
inc
cmp
mov
data16
ret
data16
mov
popf
add
gs
push
inc
add
push
cmp
and
sbbl
punpckhbw
std
test
ror
sahf
icebp
gs
fists
mov
mov
leave
fidivl
xor
test
inc
movsb
fadds
jmp
in
subb
imul
mov
arpl
ss
and
or
call
push
or
xchg
inc
or
sbb
push
sahf
mov
loopne
test
popa
outsb
cmp
and
fadds
or
xor
sub
in
lods
mov
dec
mov
cmp
mov
cwtl
pop
push
or
xor
aam
push
or
and
push
notl
sub
ror
out
loope
daa
lea
mov
mov
sub
push
adc
or
pop
cmp
jmp
movsb
dec
gs
mov
sbb
sub
rolb
pop
sub
jl
jecxz
daa
mov
adc
push
pop
out
sbb
jno
loope
adcl
jmp
ret
pop
or
outsl
push
pop
fidivrl
mov
add
das
and
jno
outsl
or
mov
push
push
jmp
sbb
push
mov
mov
shrb
lds
sub
push
add
outsb
sti
or
ret
mov
mov
sahf
out
mov
test
adc
jnp
and
push
std
enter
push
cld
mov
flds
jg
cmp
enter
daa
fldcw
sub
int
nop
fidivrl
daa
aad
mov
or
jl
mov
xor
movsb
jns
sub
jne
xor
repnz
mov
mov
imul
or
xor
mov
movsb
jne
stos
mov
in
fstps
mov
inc
sub
addr16
mov
inc
adc
orb
and
rcrl
adcl
dec
movsl
cmpsl
or
fistl
gs
jb
sbb
jl
xchg
or
add
clc
and
pop
sub
mov
sub
mov
mov
pop
cli
insl
stos
mov
fildl
fstpl
or
sarb
subb
loope
arpl
fwait
or
mov
mov
fists
add
data16
mov
cld
dec
and
shll
bound
cli
fs
js
out
push
stos
imul
sub
add
lea
sbb
insb
out
and
jecxz
xchg
leave
mov
aam
ret
insl
test
ds
test
adc
push
mov
push
push
jecxz
adc
fs
outsb
fwait
mov
adc
lods
jne
pop
popf
stc
pushf
mov
inc
pop
movsb
loopne
fstps
ja
pusha
lods
into
sbb
dec
add
cmp
and
stc
inc
je
pop
movb
ds
cmp
push
push
xchg
mov
addb
out
mov
pop
inc
repnz
test
jae
lahf
sbb
mov
jnp,pn
pusha
inc
mov
xor
aaa
out
xchg
ret
jno
inc
imul
pop
or
mov
popa
divb
mov
push
sub
xchg
sbb
inc
shrl
adc
in
stos
loop
test
push
sub
sub
iret
inc
pop
add
stos
cmp
shll
inc
xchg
test
mov
call
xor
pop
pushf
xor
adc
xchg
lret
fisubrs
mov
hlt
test
enter
mov
aas
xor
shrl
jae
aaa
out
js
pop
nop
aad
out
sub
sbb
mov
cmc
jnp
test
push
test
adc
xchg
clc
mov
loopne
jmp
arpl
cmovns
aas
dec
xor
adcl
add
or
lahf
and
ss
adc
stc
add
aam
jb
out
fwait
outsb
add
and
jg
into
cmp
sub
inc
mov
push
and
push
jne
cmp
pop
pop
fstps
insb
fstp
and
addb
adc
dec
sub
sub
push
xchg
and
sti
std
push
mov
fimuls
push
sbb
test
call
in
fbld
std
test
in
jg
pop
dec
push
adc
mov
ds
movsb
test
xchg
inc
je
bound
lds
pop
push
test
sar
stc
aad
mov
sbbb
out
and
lahf
aam
push
push
xchg
loop
dec
ss
movsl
jmp
je
scas
js
adc
mov
outsl
inc
mov
push
pop
sbb
ljmp
cmpsb
subb
loope
sarb
test
or
inc
xorl
mov
sahf
js
xchg
aam
mov
ljmp
cld
xchg
stc
vzeroall
iret
push
outsb
cmpsl
mov
frstor
addr16
fisubrs
sub
add
add
adc
lcall
adc
and
push
pusha
adc
adc
jmp
subl
fiadds
pop
jl
push
aas
insb
mov
jmp
lcall
mov
push
pusha
pop
dec
jno
iret
mov
outsl
out
inc
and
lret
sar
adc
stos
adc
nop
and
shl
shll
jp
cmp
jge
lcall
mov
or
add
sahf
hlt
fsubs
incl
pop
jle
test
pop
dec
dec
in
mov
xchg
cmpl
and
sub
dec
pop
call
filds
jge
clc
pop
push
out
or
sub
mov
sbb
sub
repnz
mov
pusha
dec
fdiv
mov
sbb
outsb
in
push
adc
leave
mov
mov
and
adc
add
sbb
sbbb
xor
orl
adc
dec
pop
inc
adc
sub
push
mov
movaps
pop
rolb
mov
push
andb
mov
inc
add
push
xor
adc
push
or
dec
out
fcomp
pop
mov
sti
in
cmc
mov
mov
fdivl
into
dec
mov
out
cmp
ds
js
cwtl
sub
cwtl
inc
add
loope
or
pop
lods
xlat
popa
or
outsl
mov
sbb
mov
xor
xchg
fldt
fdivp
repnz
subb
out
sub
push
test
out
cmc
sub
mov
pop
je
imul
pop
movsl
in
pop
sti
dec
jmp
dec
iret
jg
push
dec
sbb
sarl
into
int3
repnz
mov
push
stos
add
sub
fcompl
adc
insl
dec
out
fdivrl
sub
les
mov
xchg
popf
leave
in
out
mov
adc
outsb
scas
nop
loope
std
adc
ljmp
sahf
xor
pop
pop
test
xchg
and
add
and
stc
mov
cwtl
mov
sahf
adc
aaa
dec
int3
jg
fs
and
xchg
inc
popf
cli
lret
mov
push
icebp
pop
ret
mov
and
repz
mov
test
popa
cmp
sbb
divb
stos
xchg
insl
aaa
lret
cltd
pop
jae
jl
jg
movsl
aam
add
cs
adc
and
mov
add
xchg
inc
mov
mov
punpckhbw
push
inc
ret
inc
push
mov
cmc
sbb
je
sbb
sub
sub
scas
pop
ljmp
xor
cmp
add
push
mov
movsl
andb
pushf
add
dec
and
aam
xchg
xchg
push
mov
out
pop
test
fbld
sbb
and
roll
pushf
mov
int3
cmpsl
imul
lods
pop
mov
pop
mov
push
inc
rolb
cmp
inc
roll
fwait
inc
sbb
mull
rcl
stos
adc
stc
mov
push
inc
mov
push
pop
fistps
int3
or
xor
or
pop
lcall
ss
mov
add
subb
push
mov
std
cmp
dec
in
bound
cmpsb
imul
sub
sbbb
std
mov
ret
dec
jo
mov
jbe
inc
shrb
xchg
cmp
mov
mov
dec
adc
imul
fisubl
cmp
add
fucomi
cltd
pop
and
dec
mov
leave
or
aad
lahf
out
inc
xchg
dec
fidivl
jmp
mov
into
scas
xor
push
imul
xor
xchg
or
mov
mov
push
sbb
inc
fcoms
jns
push
cmc
jns
mov
jle
add
mov
cli
ffree
nop
pop
stos
push
test
inc
dec
pop
push
cmp
xor
jle
dec
in
test
jge
jg
or
stos
and
hlt
int3
jge
dec
or
jns
lods
das
cmp
cwtl
mov
clc
cli
mov
imul
mov
sbb
adc
les
or
fs
push
mov
adc
leave
ret
push
dec
and
pop
in
es
jno
add
test
cmp
insb
and
jno
lock
mov
icebp
lea
mov
or
and
repnz
mov
nop
pop
pop
ds
cmp
dec
sbb
cmp
mov
jle
cmc
shrb
push
std
and
loope
mov
add
xor
dec
out
mov
sbb
adc
cmc
mov
test
call
cmp
into
jp
inc
out
es
xchg
shlb
xchg
mov
out
jnp
stos
popa
fstpt
fwait
shll
test
jns
test
add
repz
ss
jmp
les
nop
div
aam
hlt
jb
sbb
adc
daa
call
jb
ljmp
push
mov
push
pop
cmp
sbb
jo
pushf
dec
cli
shrl
je
xlat
dec
orl
add
xchg
pusha
repz
jp
loopne
rcll
push
jb
lods
int3
inc
scas
addr16
push
cmp
cmp
pop
pop
test
cmp
adc
les
js
mov
ret
clc
jb
jp
test
ljmp
inc
es
pushf
push
fstpt
loop
cmp
das
cmp
pop
and
xchg
xchg
cmp
sbb
push
mov
das
lds
add
mov
lea
push
mov
cmp
fildl
in
ljmp
icebp
hlt
sub
iret
mov
and
lcall
mov
pop
out
cmpsb
punpckhdq
mov
test
repz
cmp
dec
loopne
arpl
pop
outsb
sbb
adc
inc
add
or
adc
int
int3
adc
sub
les
addr16
push
in
push
mov
dec
adc
int3
loopne
lret
movsb
cs
in
sbb
ja
jmp
xor
ljmp
call
lock
imul
aad
push
pop
das
lods
xor
daa
push
dec
js
xor
sti
xchg
cmp
and
pop
mov
aas
xor
out
in
je
mov
mov
sub
or
cmp
or
and
and
dec
ljmp
adc
std
xor
mov
stos
or
jbe
mov
cld
or
cmp
cmp
adc
sar
cli
cs
jns
arpl
mov
xchg
push
inc
call
xor
push
mov
pop
lret
pop
and
or
jnp
daa
cmc
xchg
loop
rolb
je
fcompl
insb
cmpsl
leave
in
mov
sbb
jae
jbe
pop
push
pop
adc
outsl
and
adc
frstor
inc
jbe
cmp
std
in
scas
movsl
loope
mov
test
in
adc
test
imul
rol
pop
push
xchg
inc
nop
jmp
push
jno
mov
push
pop
mov
scas
xchg
adc
ret
mov
into
or
cmp
fstl
sub
cwtl
xchg
aas
fstl
das
cld
add
outsl
mov
and
adc
in
jge
cmp
xchg
push
jb
or
aaa
sub
xchg
xor
sub
int
in
inc
xor
int3
loopne
push
and
mov
es
jbe
xor
pop
push
stc
sahf
aas
or
ret
das
cltd
jg
test
xor
shl
xchg
js
cs
aas
popa
dec
xchg
ljmp
sbb
imull
inc
mov
sub
cmpsl
mov
sbb
jno
mov
pop
jno
ficompl
aaa
push
push
out
or
cwtl
cmp
aam
ret
pop
adc
sbb
mov
and
inc
out
cwtl
stos
pop
cli
dec
addr16
pop
aaa
and
lods
cmpsl
icebp
test
push
adc
dec
mov
add
xchg
push
pushf
dec
mov
or
outsl
adc
or
cmp
ds
and
in
mov
mov
test
incb
gs
fwait
iret
adc
mov
push
shlb
add
aam
mov
or
inc
aaa
lahf
stos
push
dec
les
adc
adc
mov
adc
loope
jge
push
dec
inc
insl
jno
jl
lock
pop
mov
xor
lock
mov
jb
or
fistpl
fldlg2
pop
xchg
add
jg
xor
mov
lds
nop
scas
jg
mov
aas
ds
mov
cwtl
xchg
mov
lahf
push
push
xchg
xchg
jb
jle
dec
test
adc
pusha
cwtl
sbb
mov
or
and
outsl
or
jb
lahf
je
fistl
xchg
inc
push
xchg
sbb
add
jo
and
filds
push
mov
daa
pop
inc
shlb
or
adc
mov
sti
pop
dec
outsl
loope
rcr
in
jbe
cmp
pushf
xchg
sbb
nop
loop
mov
pop
fmulp
sbb
repz
cmpsl
rcll
inc
sbb
pop
or
xor
fcoml
push
push
popa
cmc
jle
inc
sub
sub
jae
mov
daa
adc
pop
je
decl
cli
ffree
push
xchg
aas
bnd
out
jb
dec
cmp
sub
mov
mov
repz
int3
lret
test
add
fimull
add
and
add
mov
mov
push
js
outsb
and
mov
outsb
mov
repz
mov
aaa
dec
jecxz
hlt
xlat
mov
test
shl
aam
imul
clc
bound
fwait
xor
js
popa
lds
push
xchg
icebp
mov
stos
lahf
inc
mov
in
sub
xor
push
jle
pop
xchg
jns
popf
fwait
ljmp
sub
mov
shlb
mov
std
and
into
mov
xchg
test
dec
xchg
push
cwtl
cli
fistps
fmull
movsb
mov
mov
jb
out
mov
insl
scas
adc
and
mov
hlt
in
push
jns
out
in
out
ljmp
int3
in
xchg
in
cmp
popf
mov
xchg
leave
ja
mov
shr
mov
cltd
adcb
inc
cs
push
cmp
outsb
dec
rolb
int
aas
nop
lea
dec
pop
xor
xor
pop
scas
adc
dec
inc
ss
sti
sarb
rorb
pop
int3
push
xor
hlt
pop
ficoml
nop
daa
mov
mov
scas
lods
adc
orb
or
loopne
out
add
fcmovnu
or
push
sbb
ja
dec
pop
mov
xlat
shl
jecxz
fsubrl
add
scas
rorb
inc
jl
pop
fmuls
rol
ds
test
sbb
int
dec
pop
push
xor
int
leave
repz
inc
sub
and
popa
cld
cmp
ljmp
cwtl
shll
pushf
sub
mov
or
sub
cmc
insl
mov
and
pusha
sti
pop
jp
pusha
sbb
inc
xor
into
jae
popf
or
sahf
cmp
add
std
rolb
jo
nop
sub
cs
cmp
push
mov
xor
cmp
mov
cmp
pushf
xchg
add
enter
int3
xchg
dec
cmp
stos
push
outsb
dec
mov
cmp
and
xor
inc
cmpsl
sub
sbb
xchg
add
and
mov
and
push
pop
mov
xchg
push
imull
lock
jo
mov
xchg
int
sbb
nop
gs
dec
cs
and
fnstcw
ljmp
xchg
adc
fldl
cmp
push
jmp
pop
xchg
in
test
cltd
lahf
out
add
repz
cwtl
aas
xchg
xor
int
es
outsl
pop
test
ret
push
jmp
stc
nop
adc
xor
insl
test
pop
sub
std
sbb
jnp
adc
sahf
addr16
into
pop
add
js
adc
arpl
push
sub
insb
stc
lods
or
mov
xchg
cs
jle
outsb
sti
sbbb
adc
add
adc
out
jnp
adcl
les
or
pop
mov
inc
cmpb
ss
xor
lcall
xorl
scas
repnz
mov
scas
and
repz
lock
insb
xor
mov
sahf
lret
push
jbe
jecxz
lods
ljmp
aam
mov
das
ss
push
or
push
lods
aad
es
cmpsl
jb
rcrb
push
jnp
fs
movsb
aaa
xchg
je
and
outsl
cmp
adc
sbb
xor
int
jle
cli
mov
xchg
insl
mov
cs
adc
jno
test
out
movsb
mov
lock
cmpsb
stc
scas
lods
pop
test
movsb
out
aad
mov
dec
sub
xchg
fbld
sub
lds
mov
cli
mov
mov
arpl
outsb
jmp
cmp
cmp
test
aas
loopne
pop
icebp
xor
and
stos
test
inc
ljmp
adc
ret
testl
jnp
mov
aam
adc
mov
faddl
xchg
ja
and
cmp
sbb
loopne
call
sti
icebp
nop
popf
aam
pop
and
ss
sbb
xchg
push
jl
fcoml
imul
mov
add
sahf
fsubs
lods
xchg
loope
clc
movsl
or
jbe
or
mov
mov
inc
fmuls
lock
and
pop
mov
stc
adc
push
test
and
mov
cld
jbe
test
adc
js
pop
stos
adc
jno
repz
iret
test
push
orl
jge
adc
cmpsb
mov
mov
fidivl
stos
adc
js
lods
or
jle
pop
lret
test
push
repz
jp
shl
mov
mov
or
jnp
jl
int3
aas
inc
and
mov
jmp
lret
fisubs
or
jae
lock
ljmp
pop
sub
scas
out
sti
je
fimuls
xor
or
sub
dec
sarl
xchg
sbb
pop
ss
leave
ficomps
clc
xchg
add
sbb
mov
int
sbb
and
xor
fldlg2
nop
mov
mov
call
decb
adcb
hlt
pop
cmc
call
pop
icebp
pop
outsb
js
adc
add
cmc
out
adc
mov
jmp
xor
sbbl
test
int3
xor
dec
lods
fsub
lea
or
in
pop
mov
cmp
sub
jle
aas
test
mov
mov
add
mov
inc
add
and
xchg
ja
outsb
and
aas
sti
popf
lahf
clc
inc
pop
pop
add
fucom
push
or
mov
aad
insl
inc
lret
push
std
adc
pop
or
push
push
mov
loopne
cltd
leave
out
or
sub
push
ret
pop
jb
or
and
popl
cmp
and
test
stos
and
dec
ret
and
cli
ror
repnz
jl
inc
adc
lods
dec
mov
stos
pop
inc
mov
shl
and
add
sahf
xchg
cld
rcrb
cmp
ret
adc
mov
adc
lcall
fdivl
and
sub
cmp
mov
bound
pushf
xchg
dec
rcrb
pop
test
shll
call
pushl
and
outsb
rcrb
push
xor
shll
popa
mov
xor
sub
frstor
mov
sub
stc
mulb
fsub
sti
push
js
mov
mov
adc
sbb
or
pop
jno
movsb
push
pop
push
xor
outsl
push
repnz
xchg
push
cltd
dec
test
xor
push
add
mov
mov
jns
mov
dec
call
inc
dec
das
jl
fdivrl
fstpl
popa
mov
aad
xchg
popf
adc
sarl
pushf
lret
subb
cmp
scas
push
push
push
pop
mov
fdivl
mov
xchg
push
cmpsl
sbb
pop
sti
pop
adc
jl
sub
cmpsb
xchg
dec
push
pop
ss
push
mov
shl
cmpsb
stos
testb
adc
dec
xor
jb
gs
or
dec
mov
mov
cli
divl
out
sub
push
stc
aaa
inc
mov
add
test
cs
lods
sub
pcmpeqd
jle
out
sub
sub
testb
out
inc
mov
test
push
arpl
cmp
jne
pop
xchg
xchg
inc
push
bound
and
fs
cmp
lret
sub
mov
stc
ja
insb
xchg
push
cmp
dec
mov
sub
lea
mov
and
cwtl
dec
out
xor
adc
mov
aam
fisubs
cwtl
mov
pop
movl
jne
pop
or
pop
pop
lods
cmpsb
sbb
divb
mov
xor
test
sbbl
out
loopne
xchg
fwait
or
xchg
fdivrl
movsl
xor
fdivrs
fstl
inc
dec
cltd
sub
or
xor
daa
pop
or
filds
bound
cltd
mov
inc
cmpsb
loopne
cmp
lods
jmp
decb
push
dec
les
rorb
jecxz
push
or
ret
insb
xor
sub
push
mov
add
cmpsb
xchg
or
outsl
xchg
dec
inc
jl
out
pushf
pop
call
xor
sub
iret
fildll
cmp
test
test
push
repnz
pop
mov
jns
add
lahf
std
repnz
cltd
call
jle
cmpl
mov
push
push
sbb
mov
or
inc
dec
shll
cmpsl
leave
enter
ss
cs
mov
outsb
mov
fsubr
add
xchg
sbb
cmpsl
or
and
push
rcrl
test
outsb
fdivrp
addl
jne
jge
mov
jno
adc
xor
ret
push
ret
das
js
fldenv
xchg
fwait
or
push
inc
cmc
frstor
mov
inc
adc
jmp
in
orl
push
outsl
add
adc
jnp
mov
jb
pop
and
add
ret
jb
and
inc
shlb
inc
pop
mov
jecxz
cmc
jo
lahf
leave
lds
test
insb
popf
into
mov
adc
xor
add
loope
mov
int
mov
mov
dec
xor
mov
or
pop
pop
dec
pop
sbb
pushf
inc
rorb
popa
jns
push
pop
dec
sbb
mov
mov
pop
mov
std
xor
sub
aad
fwait
push
dec
mov
adc
rcrl
bound
xor
or
pop
aaa
mov
clc
int
int
hlt
sbb
sahf
cmp
in
cmp
cmpsl
rorb
and
out
out
cld
mov
or
hlt
pop
sbb
xchg
pop
rorl
mov
int
mov
sub
lods
dec
cmp
dec
lods
movsl
pop
pop
inc
mov
inc
loopne
hlt
frstor
insb
sbb
sbb
xor
stc
shll
add
add
into
xor
jle
mov
mov
lahf
imulb
aas
insb
jo
sbb
in
aam
adc
sub
or
push
mov
stos
out
dec
adc
ret
inc
js
clc
adcb
arpl
xchg
ljmp
dec
testl
fwait
sub
jo
data16
mov
adc
in
stos
cmp
pushf
mov
int3
sbb
xor
outsb
iret
shr
das
andl
jne
push
sub
or
fs
mov
nop
lahf
add
cmp
or
notl
aas
test
and
repz
out
xchg
loop
inc
lods
cmp
ljmp
adc
cmpsb
push
repnz
or
jmp
cmc
fldenv
lock
lods
push
sub
add
iret
adc
pop
jnp
cmp
jge
jae
les
xchg
inc
fwait
pop
pop
jns
repnz
ret
dec
jle
cmp
mov
add
lcall
jae
or
cmp
cli
aam
movb
in
js
lds
cli
loopne
out
jne
rorl
popf
sarb
cmp
dec
and
mov
es
lcall
stos
jecxz
lahf
xor
test
in
scas
xor
mov
and
data16
aam
adc
data16
cmpsl
jnp
clc
mov
cmp
sahf
aam
inc
sub
nop
scas
ljmp
xchg
cmpsb
fisttpl
loopne
xor
testl
cmp
mov
xor
pop
into
shll
cmc
xor
enter
leave
mov
std
bound
cmp
push
jmp
notl
test
xchg
in
inc
andb
pmovmskb
aad
inc
lock
dec
push
push
jmp
test
stos
addr16
ljmp
out
movsb
lret
sub
pop
xchg
lds
enter
xor
pop
xor
pop
insb
sbb
add
shll
outsl
movb
pop
in
xor
stos
xor
movsb
cld
loope
lahf
ss
shll
and
xchg
add
out
add
test
lock
adc
add
into
stc
xlat
outsl
add
fwait
pop
stos
ret
cs
lods
pop
shl
jbe
or
and
or
pop
shlb
gs
mov
inc
imull
pop
popa
add
fisubs
lea
ret
pushf
gs
push
fistl
scas
cmp
jmp
fiadds
push
push
jne
adc
cltd
inc
nop
mov
xorl
dec
cmp
fisubrl
pusha
push
xchg
pop
and
xchg
repz
es
mov
ja
lods
push
pop
sub
jne
lds
pop
inc
xchg
aam
loop
push
cmp
adcl
dec
mov
loopne
or
int
int
outsl
push
rcrl
cmp
xchg
out
adc
js
push
and
mov
pop
xor
mov
cmp
push
cmp
aad
xchg
jl
test
test
jg,pn
jae
cmp
sarb
xor
mov
xor
clc
dec
dec
fistpl
in
xorl
test
imul
mov
inc
test
stos
mov
nop
fs
stc
mov
ljmp
ja
cwtl
fiadds
decb
arpl
cmpsl
dec
xchg
imul
addb
insb
icebp
psubw
stc
loop
sub
jle
out
or
mov
sub
or
mov
xchg
daa
mov
lods
in
mov
jg
into
clc
movsb
add
jne
repz
mulb
std
fisubl
in
xchg
lret
inc
pop
or
dec
pop
xchg
std
push
xor
ret
xchg
in
pop
pop
jg
cmp
adc
hlt
aad
xor
jp
push
outsb
dec
shrd
sbb
lods
cltd
jb
jg
pop
scas
pop
and
jbe
mov
inc
and
dec
mov
arpl
push
or
pop
adc
push
or
dec
mov
inc
sbb
pop
sub
movsl
sbb
pop
lcall
fs
test
or
add
repz
outsb
lods
pop
inc
inc
lods
xor
jae
lea
insb
xlat
dec
pop
out
xor
sbb
jge
jmp
sub
into
jae
jg
iret
leave
add
mov
cmpsl
add
and
cmp
ss
pop
lock
xor
outsb
push
lcall
add
or
nop
out
xchg
outsb
orl
dec
inc
sub
sbb
stc
cs
push
sbb
xchg
loop
push
in
popf
push
sti
and
or
lock
inc
xchg
mov
arpl
mov
mov
daa
pop
or
add
dec
es
pop
imul
iret
jbe
rorl
inc
and
jle
cmp
mov
lock
sub
mov
into
sbb
xchg
dec
fwait
lock
sbb
clc
ret
lcall
xchg
ljmp
bound
test
jbe
mov
in
bound
jp
pop
jmp
sbb
dec
cs
or
push
jno
xchg
ret
push
xor
std
xchg
ficoms
mov
and
gs
lds
arpl
push
push
adc
or
mov
leave
mov
sahf
inc
aaa
mov
lret
pop
push
push
push
cld
cmpsb
fcmovnb
mov
mov
cltd
daa
pop
aas
testl
add
sbb
incl
fisttpl
iret
inc
xor
or
jl
shll
mov
cs
cmp
push
xchg
in
cmp
lods
adc
and
imul
sbbb
or
jmp
stos
and
icebp
shll
ret
push
test
in
mov
cmp
add
sbb
addb
sub
mov
int
arpl
sub
sbb
or
stos
dec
dec
repnz
push
outsl
leave
test
jle
and
or
jl
sbb
jle
add
push
insb
ficoms
xor
jno
pusha
mov
sbb
mov
movsb
imul
loopne
rolb
aam
fldt
flds
test
mov
psrld
push
mov
cwtl
sub
add
add
orb
xchg
insb
fs
cmp
pop
adc
scas
add
mov
in
cs
mov
pop
and
xor
jno
fwait
or
insb
inc
outsb
and
dec
mov
icebp
pop
fdivr
sti
ficoms
repz
lods
ds
pusha
xchg
sub
xor
in
adc
lock
or
imul
mov
mov
fisttpll
jbe
pop
pop
movsl
add
addr16
arpl
in
dec
ss
sbb
cmpsb
push
ss
nop
xchg
mov
sahf
mov
shll
arpl
ds
cmp
in
jo
inc
lock
mov
mov
pop
adc
mov
jecxz
sbbb
imul
cmp
enter
leave
subb
mov
mov
stc
jo
roll
les
inc
test
sbb
lret
xor
xchg
pop
mov
jp
in
rcrl
mov
dec
sub
adc
pop
stos
in
lahf
iret
call
mov
movl
pop
dec
dec
pop
adc
pop
jl
jmp
push
mov
imul
xor
mov
icebp
fcompl
and
sti
movsb
mov
pusha
adcl
cmp
cmp
jmp
mov
js
dec
addr16
test
faddl
mov
or
mov
and
cmp
sbb
pop
int
arpl
mov
adc
push
int3
inc
imul
jne
or
and
in
dec
mov
fwait
movsb
lahf
pop
mov
test
xor
mov
int3
out
fidivrl
mov
aaa
cmpsl
out
or
cmp
ljmp
xchg
mov
jnp
or
mov
jbe
xchg
rcrb
pop
fwait
in
movsl
int
lods
loope
out
subl
aad
inc
int
jg
or
jne
adc
fs
test
sbb
sub
ret
fsubl
xorl
adc
ds
mov
mov
int
popa
cs
push
mov
out
xor
imul
xor
test
int3
repz
icebp
or
mov
iret
pop
aad
iret
cltd
inc
cld
mov
stos
jl
dec
mov
aas
lods
add
and
bound
into
sub
loope
push
pop
and
shll
and
rcl
push
sub
sub
pop
jno
xchg
aaa
mov
test
cli
cld
dec
jg
cmp
sahf
cltd
test
cs
lahf
std
hlt
xor
or
xor
xor
int3
xchg
sti
push
jg
stos
icebp
cmp
pop
insb
xor
jle
in
in
dec
mov
inc
fsub
sahf
mull
loope
sti
jne
mov
nop
or
xor
ja
arpl
pop
ficompl
mov
pop
add
jo
sub
outsb
push
stos
sub
lock
mov
out
xor
jns,pt
pusha
mov
mov
idiv
dec
in
pop
scas
loope
movsl
loopne
push
sub
pop
fsub
rorb
or
mov
xchg
push
fs
insb
push
ljmp
push
mov
dec
adc
add
outsl
dec
cltd
mov
hlt
xlat
pop
or
inc
fwait
sub
scas
ret
or
xchg
fimuls
xor
sbb
shrb
inc
push
sub
sub
or
add
rcl
dec
loop
mov
mov
rep
add
nop
push
sbb
fs
or
mov
push
popa
jp
mov
das
dec
push
or
push
cmp
mul
test
add
xchg
add
in
pop
and
shrl
mov
int3
pop
bound
cmp
mov
jge
jl
mov
push
push
xchg
sbb
gs
adc
daa
mov
xor
frstor
in
ss
adc
pop
arpl
sarl
into
dec
int
add
scas
shlb
mov
sbb
inc
xchg
movsl
jecxz
mov
adc
and
sbb
jns
mov
daa
lds
and
addl
cmp
ret
or
sbb
fistpl
jae
mov
xor
out
xchg
mov
hlt
sahf
test
mov
sub
push
and
mov
test
xor
mov
roll
push
xor
push
inc
popf
inc
test
or
or
lods
mov
xchg
mov
in
scas
xchg
shlb
mov
std
pop
ds
imul
add
in
cmpl
or
lods
mov
cmpl
jecxz
pusha
ljmp
mov
mov
pop
movsb
xor
scas
jmp
cmpsl
or
stos
pop
mov
cli
sub
inc
jns
pop
push
pop
clc
stos
out
lret
fsubrl
and
je
jle
jae
cmp
and
or
inc
dec
jg
inc
add
add
pop
testb
loope
mov
pop
test
lods
les
sub
lea
sti
pop
xor
shlb
push
fbld
in
shll
in
mov
pop
adc
lahf
outsl
int
dec
pop
mov
aam
rolb
adc
and
mov
mov
cmp
in
pop
mov
pop
stos
mov
push
add
inc
push
in
sbb
xchg
adc
roll
je
push
jo
push
ja
and
dec
adc
lods
out
push
xchg
jbe
jne
xorl
je
sub
sub
xchg
jmp
movsl
arpl
sbb
xchg
dec
in
cmp
cmp
std
mov
xor
gs
jmp
and
sub
jbe
ss
loop
dec
cmpb
jmp
aaa
mov
push
add
and
dec
and
cs
repz
lock
in
mov
push
push
lock
mov
insb
xlat
daa
xchg
pop
hlt
mov
nop
pop
mov
sub
not
popa
aaa
into
or
mov
mov
pop
out
lods
imul
cs
mov
xchg
in
mov
xor
cmp
jno
rcll
popf
stc
std
int3
outsl
add
inc
faddl
mov
mov
xchg
cmpl
mov
into
pop
push
ficoms
enter
stos
mov
in
inc
pop
fdivl
push
andl
jg
jle
mov
adc
mov
popa
fbstp
int
in
imul
or
pop
xchg
dec
jae,pn
test
aad
mov
lcall
mov
adc
xlat
sarb
hlt
fsubp
pop
jle
inc
inc
sbb
js
shr
addr16
fnstcw
cmp
sub
out
out
fnstsw
xchg
test
fisttps
dec
push
arpl
push
into
sarb
push
dec
jns
mov
cmp
stos
xchg
aas
cmp
sti
insb
push
xchg
iret
or
dec
pop
pushf
test
cld
dec
xor
xchg
data16
inc
dec
add
ltr
std
sub
test
sub
in
mov
mov
inc
call
inc
mov
jmp
pop
icebp
push
cwtl
neg
cwtd
stc
das
stos
push
lahf
and
shrb
rcll
pop
js
mov
sbb
mov
test
push
js,pt
repz
notl
stc
or
xor
pop
add
mov
ja
lea
mov
pop
cmp
movsb
mov
push
xor
add
arpl
xchg
aas
jns
xlat
jne
std
or
adc
dec
and
aaa
xor
imul
add
orl
popa
xchg
push
mov
xchg
shlb
add
nop
js
dec
andb
adc
and
negl
into
push
ss
sub
mov
pop
pusha
push
adc
push
xlat
mul
cmpsl
setle
jnp
lea
fistl
lret
or
mov
filds
out
jg
js
roll
repz
ljmp
push
cwtl
aad
xchg
pop
dec
daa
cmc
pop
nop
or
stc
xor
call
push
pop
cmpsb
stos
mov
mov
das
mov
out
jbe
xor
pop
and
mov
or
xchg
inc
and
out
loope
and
jle
out
or
adc
jge
xor
push
das
sbb
pop
inc
jmp
mov
das
cld
adc
mov
inc
push
movsl
insl
test
loop
lods
repz
and
je
lcall
mov
es
jle
jp
mov
adc
cmc
push
mov
or
lret
and
xchg
popa
pop
jae
push
add
adc
aam
and
mov
inc
fsubrl
sbb
cmp
mov
jno,pt
cmp
mov
jmp
mov
and
add
sub
or
popf
add
mov
mov
call
fldt
jne
adc
jmp
mov
push
push
addb
fidivrl
flds
mov
scas
jecxz
nop
scas
mov
es
test
pop
arpl
addb
sbb
stc
dec
orb
decb
jecxz
push
test
sti
jge
sbb
movsb
jo
sub
cltd
out
and
jp
mov
or
repz
pop
adc
mov
xor
stos
push
mov
leave
rorl
loop
mov
cltd
add
adc
pop
mov
in
and
or
adc
push
cli
cmp
in
push
mov
fildl
sbb
orl
xor
imul
mov
sub
inc
mov
out
mov
imul
outsb
push
jnp
sub
insl
cmp
mov
lahf
xor
scas
xchg
fnstcw
lahf
nop
rcrl
mov
mov
adc
adc
mov
loope
mov
in
sbb
pop
shrb
inc
imul
call
push
jnp
mov
pop
loop
add
bound
jbe
and
fidivrs
out
test
arpl
fcomip
push
fdivs
aaa
pop
sbbl
std
stos
mov
ja
rcrl
call
faddl
sub
in
aaa
xor
xchg
inc
nop
lret
aam
mov
jae
int
push
fmuls
mov
sbb
mov
jne
lcall
jb
push
adc
pop
push
lea
or
mov
mov
call
or
cld
mov
mov
lret
lods
xchg
fmulp
jb
pop
lods
mov
into
mov
bound
ret
pushf
inc
inc
repz
sub
pop
pop
lods
pop
insl
je
lahf
fisubrs
xchg
es
cli
mov
jno
sub
inc
ret
pop
jno
ds
dec
xor
out
mov
jg
fadd
arpl
jne
shlb
in
lods
cld
daa
enter
mov
fimull
out
pop
xchg
mov
xor
and
in
mov
clc
movsl
pop
xor
scas
scas
push
aaa
fldenv
int
pushf
pop
adc
js
dec
fsubrl
pusha
cmp
mov
icebp
loop
pop
das
idivl
in
cmp
xchg
add
in
in
ret
fwait
xchg
cmp
pop
xchg
mov
out
push
mov
sub
push
push
fs
dec
push
add
sbb
mov
mov
mov
movsl
pop
cwtl
cmp
or
ret
test
aas
cmp
sarb
mov
shll
mov
jns
lcall
mov
stos
rorl
cltd
cmp
jo
jae
hlt
outsb
mov
and
cmp
jle
and
fsubs
testb
push
mov
sub
and
cli
mov
xchg
std
push
out
mov
adc
or
out
ror
jno
lods
cs
mov
les
les
pop
xchg
ret
dec
push
addr16
psubb
and
imul
fs
jne
add
jecxz
pop
pop
fsts
std
mov
aas
inc
mov
icebp
adc
jo
shl
or
stos
sub
shl
lods
pop
mov
or
stos
cmp
in
xchg
lahf
pop
fmul
arpl
aad
ss
cmp
daa
fsubl
test
adcb
cmpsl
sbb
mov
lret
xchg
mov
outsb
mov
cmp
push
inc
fstpt
or
pop
imul
xlat
jmp
loop
or
or
and
cmpsb
mov
push
jmp
adc
push
cmpsb
pop
imul
pop
fimuls
shrl
dec
pop
jnp
jmp
mov
cmp
sbb
mov
fs
push
cmp
inc
lea
fimull
lret
dec
xlat
pop
mov
jge
mov
mov
jecxz
bound
roll
in
xchg
sub
sub
gs
or
ret
mov
cmp
stos
sbb
push
call
call
pop
arpl
out
push
pushf
cld
js
mov
in
sbb
sub
dec
xchg
idivl
lcall
iret
and
pop
pop
pop
pop
daa
mov
lock
dec
mov
hlt
bound
mov
and
mov
sbb
imul
jbe
jge
sub
sarb
icebp
cmp
cmp
push
out
pop
inc
xchg
stos
lock
ret
test
xchg
and
mov
pop
enter
shll
ds
cld
fisttps
push
lret
and
sbb
ja
cwtl
xor
stos
mov
add
push
bound
ret
mov
sbbl
loop
or
sub
pop
faddp
lahf
insb
inc
insb
mov
inc
jp
push
jp
popa
loope
std
mov
and
iret
outsb
jns
sbb
inc
fnsave
outsl
mov
sbb
pop
pop
xchg
out
popa
pusha
movsb
scas
push
adc
std
and
xchg
repnz
xor
mov
mov
push
mov
xor
rcll
jge
pop
jnp
inc
and
add
adcb
fldl
push
push
mov
and
bswap
pop
or
leave
fmulp
or
xor
sub
add
add
xor
cwtl
or
or
lock
lock
push
push
movsl
aas
mov
add
icebp
inc
inc
sub
cli
cli
gs
movsbl
dec
push
pop
mov
mov
jle
stc
jo
adc
cmpsb
jp
or
ds
jmp
jle
sbb
dec
iret
push
or
or
mov
mov
movsb
lcall
pop
cli
call
xor
inc
in
pusha
cmp
fmul
iret
jbe
sub
ss
scas
pusha
xchg
push
in
test
jo
aas
jle
cld
and
cmc
in
jno
xchg
sti
dec
fwait
xchg
pop
jg
and
xchg
sbb
sarb
out
inc
cld
mov
adc
sbb
out
adc
push
push
iret
cltd
loope
pop
sbb
cmp
inc
int3
or
dec
addb
inc
clc
ja
ja
mov
xchg
fbld
push
mov
lea
cmpsl
mov
sbb
out
pop
bnd
aaa
adc
imul
movsb
mov
outsb
pop
int
pop
imul
or
and
sbb
xchg
movsl
stc
into
dec
repnz
das
hlt
lds
test
dec
loope
mov
push
pop
pop
mov
and
aas
add
popa
movl
xor
jns
int3
mov
fsubrp
imul
mov
xchg
sub
lock
mov
pop
jmp
pop
or
mov
jo
add
scas
rol
xor
sbb
add
sub
loopne
jne
ss
fsubrs
aaa
std
inc
lods
and
push
fmulp
rorb
xchg
mov
mov
call
mov
addr16
jp
cmp
cmp
pusha
adc
inc
out
dec
dec
int3
inc
ss
inc
dec
inc
cmp
popf
loopne
std
mov
leave
repnz
push
rcll
xchg
mov
mov
jecxz
sbb
ds
ljmp
push
jnp
adc
lock
and
jbe
test
push
in
js
mov
imul
mov
in
mov
dec
mov
cs
test
out
mov
daa
pop
pop
push
xchg
jmp
xlat
mov
repz
ja
dec
and
insl
imull
loopne
xor
stc
sti
stc
inc
cmc
data16
mov
cmp
dec
or
neg
sbb
out
out
xchg
add
out
daa
sub
das
and
pop
sbb
les
pop
jg
mov
inc
jb
loopne
adc
mov
insb
cmp
jmp
mov
scas
movsl
cmp
push
roll
je
int3
or
pop
insb
sbb
test
fxtract
divl
out
jnp
imul
out
sbb
dec
in
ja
lods
sti
sarl
and
xchg
dec
movsl
cmp
mov
pop
jbe
outsb
shlb
push
or
lcall
scas
add
ret
pop
sub
adc
cmp
mov
or
bound
ss
sub
cmp
clc
fnstcw
mov
and
popf
fs
hlt
and
xchg
aam
test
scas
mov
mov
push
add
dec
mov
and
xchg
sahf
dec
roll
or
jecxz
popf
cld
mov
lcall
insb
xor
and
scas
mov
sti
and
ficompl
dec
imul
insb
xor
dec
push
dec
jbe
mov
fcmovne
aaa
pop
loopne
mov
xchg
popa
xchg
cmc
mov
aam
mov
adc
cmp
cs
insb
pop
pop
lods
or
imul
xlat
insl
add
mov
insb
mov
xchg
cltd
sub
push
xor
add
out
popa
and
xchg
dec
lahf
xchg
mov
loopne
adc
loopne
push
cmp
xchg
insl
ret
std
jge
lret
lret
jl
insb
mov
popf
adc
inc
xchg
aas
inc
cmp
mov
mov
cmp
jmp
seta
xlat
sub
loopne
push
pop
and
int
rorb
adc
or
xchg
loope
int3
xchg
test
int
arpl
movsb
mov
lahf
mov
aas
add
or
imul
mov
in
dec
mov
cmc
sub
adc
xchg
pop
call
cmc
subl
ljmp
adc
repnz
rcrl
mov
pop
mov
cwtl
or
fdecstp
nop
cmp
cwtl
nop
lcall
lcall
pop
xchg
sbb
push
mov
frstor
xor
pushf
push
and
mov
mov
bnd
mov
leave
sbb
jecxz
mov
imul
adc
jnp
add
xor
and
xchg
jp
fcompp
loop
mov
xor
daa
push
xor
push
decl
js
iret
cmp
cmpsl
rclb
xor
and
in
fsubrl
das
std
and
push
mov
test
pop
pop
sbb
inc
jno
into
nop
std
lods
sbb
in
mov
je
pushf
insl
pop
xlat
jns
aad
push
pop
push
insb
icebp
add
xchg
add
mov
push
in
fwait
shrl
cvtps2pd
add
sti
add
pop
insl
stos
cmc
push
int3
fldcw
arpl
push
mov
ljmp
jb
add
mov
mov
pusha
jne
sti
cltd
add
xor
and
jne
loopne
sahf
adc
xchg
push
xchg
or
test
je
loop
aam
iret
inc
mov
xchg
mov
imul
jnp
adc
dec
scas
push
jle
flds
jbe
in
mov
adc
fwait
int
es
movsl
mov
repnz
jl
fistpll
scas
orl
mov
xor
enter
jb
dec
xlat
leave
jns
mov
and
push
adc
iret
shll
cwtl
push
jne
mov
ret
icebp
jns
sub
idivb
xchg
push
adc
rcr
testb
xchg
fcmovnu
xor
mov
ficoms
adc
sub
fdivr
bnd
mov
lods
fdivrl
add
push
int
out
mov
xchg
adc
adcb
sbb
and
pusha
cmpsb
mov
popl
in
cmp
xchg
adc
pop
aam
pop
jl
fsubl
sti
and
in
xchg
sarl
lock
scas
xchg
je
cli
add
dec
xor
xor
adc
dec
iret
aad
push
cmpb
les
mov
add
inc
xchg
stos
out
fimuls
jg
mov
test
dec
outsb
xor
fsubrp
aam
adc
adc
fs
mov
adc
jle
iret
enter
rorl
add
ficoml
cmp
cmp
cs
mov
mov
js
push
jl
out
sub
push
push
lock
cwtl
xor
test
loop
cld
mov
insb
xchg
sbb
in
js
ret
aas
lret
xchg
sbb
push
add
or
cmpsl
pop
stos
stc
mov
mov
jae
enter
pop
popa
adc
or
stos
inc
mov
stos
xchg
lcall
js
jmp
sub
pop
adc
xorl
jmp
ret
cltd
call
jmp
add
mov
mov
ja
sar
loop
push
outsb
imull
mov
sahf
add
adc
sub
ss
mov
popa
sbb
fnstenv
push
mov
ss
mov
mov
scas
arpl
mov
fs
adc
aam
ds
jl
inc
xchg
push
sub
shlb
fcmovbe
dec
mov
pusha
call
in
test
lcall
mov
dec
test
sbb
mov
out
or
movsl
lea
dec
je
push
shlb
sti
lds
push
adc
jbe
in
push
xor
pop
ss
inc
adc
and
add
mov
pop
mov
inc
jo
inc
jbe
outsl
cs
pop
jb
jmp
and
mov
xor
mov
pop
sub
int3
mov
jg
cmp
pop
js
in
xchg
push
ret
xchg
aaa
sub
leave
xor
sub
xor
mov
mov
dec
pop
sub
sbb
repnz
scas
sub
and
dec
jno
out
lret
std
push
gs
and
mov
scas
mov
jbe
dec
inc
fwait
daa
sub
jl
adc
rorb
jmp
xchg
sbb
push
mov
dec
loop
cmp
jle
lods
test
into
fstpt
fidivrs
add
loope
pop
inc
mov
and
add
call
cmp
cltd
loopne
push
mov
mov
xor
adc
mov
xchg
mov
inc
notl
mov
popf
xor
fidivs
mov
push
jle
adc
and
jle
outsb
rorb
pop
lcall
mov
mov
jp
mov
cltd
adc
mov
gs
add
sti
cwtl
mov
xor
sbb
mov
in
xorl
fmulp
jl
mov
icebp
add
bswap
mov
int3
mov
inc
cmp
movb
xor
sub
push
mov
pop
fwait
pop
lods
loope
enter
push
loop
mov
daa
testl
out
jae
js
imull
push
xchg
fcmovnu
pop
mov
shrl
pop
mov
xor
js
xchg
inc
fisubs
mov
ret
push
test
dec
dec
mov
mov
xor
adc
add
dec
aam
mov
xchg
xor
cmp
pop
jno
scas
lret
dec
adc
mov
dec
ja
sub
aaa
inc
adc
inc
sbb
dec
mov
into
and
mov
aas
or
fadd
mov
in
cmp
lahf
dec
add
sbb
adc
inc
lcall
out
mov
mov
cmp
push
les
movsl
push
movsl
sbb
into
jne
adc
cmpsb
pop
cmpsb
js
add
push
xor
divl
in
cmpsl
mov
or
jns
out
add
mov
dec
fs
sbbl
sbb
sti
sbb
out
ret
jno
lock
sub
xlat
ret
xlat
adc
add
jae
push
mov
into
dec
nop
std
sbbb
movsb
jmp
inc
stos
test
mov
adc
test
push
adc
lods
lret
jnp
movsl
cmp
fisubrs
jbe
sbb
or
insb
and
and
add
jb
iret
jg
xchg
lcall
adc
lret
sub
or
fdiv
inc
sub
mov
add
pop
cli
cmc
xchg
hlt
sub
lods
test
les
mov
mov
sbb
jge
add
incl
repz
cld
or
pusha
push
sti
pop
shrb
xorl
jb
std
inc
push
andb
push
scas
je
inc
arpl
sahf
xor
mov
sub
andb
adc
pop
repz
call
ljmp
imul
adcb
jmp
loop
push
loope
adc
mov
fcomps
stc
negl
pop
xor
outsl
fnstsw
or
je
jecxz
push
jbe
mov
add
ja
cmpb
sub
xchg
shlb
lcall
dec
cmc
into
std
push
push
scas
sub
test
inc
cmp
xchg
jne
sub
add
scas
out
or
xchg
iret
jge
xchg
js
xor
mov
or
enter
mov
push
arpl
out
xchg
sahf
sbb
jb
jge
sbb
cltd
pop
xchg
fdivs
jns
mov
mov
mov
mov
pslld
push
push
push
decl
leave
fwait
sbb
push
mov
sub
dec
push
inc
mov
orl
lcall
pop
push
inc
sbb
xlat
scas
sahf
data16
cmp
jmp
xor
and
cmp
sbb
jb
ljmp
dec
movsl
out
lcall
mov
in
or
nop
rorl
das
jg
inc
mov
cltd
movsb
cmp
xor
aas
jae
push
mov
xchg
push
decl
dec
cltd
aam
outsl
into
aas
and
dec
pop
lcall
test
push
fs
jnp
inc
sti
dec
inc
sbb
dec
stos
add
dec
xchg
xchg
shlb
repnz
rcrl
pop
sbb
jo
jecxz
lea
cs
mov
data16
adc
push
adc
add
push
out
add
sbb
inc
dec
cmp
jmp
mov
push
push
cmpsl
dec
nop
and
jecxz
pop
je
test
sbb
arpl
mov
clc
push
outsb
adc
add
pop
insb
jo
mov
les
xchg
push
jge
jp
jge
cmp
js
cmp
xchg
icebp
icebp
pop
aaa
pushfw
add
xchg
cmp
and
pop
icebp
outsl
filds
pop
or
xchg
das
jo
adc
jl
test
inc
pushf
lock
test
sahf
push
xor
jo
pop
mov
push
fcoms
adc
inc
dec
repnz
cmp
xchg
sbb
mov
cmp
cmc
pop
adc
cltd
pop
popf
jns
inc
dec
into
pop
in
pushf
inc
subl
cwtl
jmp
and
das
sbb
push
inc
and
addr16
rcll
cmp
pop
ret
lcall
test
add
inc
inc
pop
adc
scas
test
out
push
es
jo
cltd
adc
xchg
mov
and
hlt
stos
add
jmp
and
imul
negl
push
insl
aad
cmpsb
pop
ss
inc
pop
push
aam
lret
int
dec
sbb
repnz
mov
push
repz
lahf
dec
mov
add
and
sbb
fists
inc
out
clc
mov
jecxz
nop
xor
imul
and
xlat
popf
jns
mov
mov
cld
cwtl
mov
push
pusha
lods
cwtl
mov
jmp
into
mov
or
aam
fs
or
fwait
xchg
add
repz
daa
push
jp
sub
ss
mov
movb
bound
test
mov
adc
outsl
hlt
add
cwtl
popa
loopne
pop
inc
xchg
cmp
scas
pushf
gs
fstl
mov
idivl
mov
cli
xchg
sbb
mov
scas
stos
leave
fildl
out
notl
popa
loop
jno
add
jnp
daa
dec
notb
jp
pause
aad
js
push
xor
mov
stc
xchg
lahf
sub
movsl
int
sti
pop
sbb
into
add
and
ss
sbb
sub
aam
leave
sbb
xlat
std
jo
ficoms
lods
ds
sarl
dec
ret
sub
xchg
scas
mov
addr16
dec
repnz
sbb
push
or
and
jbe
sub
cmp
pop
sbb
call
sbb
imul
or
scas
cmp
adc
dec
jp
pop
jle
jge
sti
ja
sbb
mov
rcr
sub
xchg
subl
mov
dec
xor
fldcw
mov
out
ss
int3
mov
pop
popf
addr16
adc
decl
sti
insl
je
ret
ss
and
and
stos
inc
xchg
pop
lahf
cmp
enter
adc
pop
adc
fistpll
scas
sbb
push
fs
insb
xlat
and
pinsrw
push
out
lea
inc
push
jl
inc
add
xor
cmpl
mov
out
jb
cld
jae
adc
mov
pop
fstp
out
push
in
sbb
xor
test
hlt
scas
addr16
lcall
lahf
fstl
aas
mov
sub
sahf
push
stos
int3
dec
in
iret
mov
frndint
push
lock
shlb
mov
sbbl
push
add
or
inc
scas
cmc
xor
mov
hlt
enter
adc
mov
cmc
roll
jo
stos
mov
xor
in
jmp
adc
jl
xchg
aas
mov
sahf
cmp
lret
fwait
pop
jo
icebp
mov
jecxz
mov
test
aad
es
and
mov
stc
cmpsl
pop
fiaddl
sub
xor
pop
inc
ret
sti
das
popf
mov
lods
sub
gs
cmpsb
inc
stc
mov
pop
sub
stos
js
fistl
sarb
dec
inc
ljmp
or
add
lcall
mov
inc
jne
nop
loop
pop
cmp
or
imul
push
lcall
dec
aaa
mov
jne
enter
ds
xchg
lcall
pushf
inc
xor
mov
gs
enter
cld
mov
popa
dec
sti
pop
mov
ret
jl
in
lock
or
dec
mov
add
das
mov
or
les
inc
mov
pop
loop
je
adc
and
cli
pop
add
pop
cltd
sub
xchg
jo
mov
mov
lock
bound
mul
fwait
jp
cmp
xor
push
mov
or
pusha
cmp
test
ret
jae
xlat
sbb
dec
push
fs
out
inc
sub
cmp
into
ret
clc
je
xchg
cltd
xor
lret
in
call
cmp
and
rcrb
or
pop
in
sbb
dec
dec
lret
pop
rcll
and
lret
mov
or
imul
push
in
jb
mov
add
cmp
lea
dec
cmc
cmp
inc
fcoml
stos
and
and
cmp
or
adc
loop
dec
jo
filds
mov
mov
popf
outsl
adc
push
jp
mov
push
lock
test
adc
out
aam
push
movsl
sahf
cmpsl
push
jl
dec
test
loopne
mov
dec
clc
xor
stos
js
sbb
pop
ja
cld
pop
cltd
push
push
cld
mov
negb
sbb
add
fwait
mov
xlat
fwait
push
jmp
push
mov
mov
int3
ret
cli
and
xchg
inc
cmp
xchg
fisttpl
dec
out
stc
push
clc
insl
icebp
test
or
pop
inc
sbb
push
nop
mov
xchg
test
test
jg
mov
inc
inc
add
test
aad
push
mov
lret
or
int3
orb
sub
insl
mov
mov
aam
cld
enter
mov
gs
xchg
xchg
int
mov
in
orl
jno
es
insl
adc
in
ss
mov
pop
lret
fidivrs
shlb
xchg
iret
mov
push
cmpsb
out
roll
jnp
mov
leave
js
xor
mov
jl
xchg
push
sbb
jmp
jnp
mov
ss
xor
jnp
bound
xchg
sbb
ljmp
enter
push
cltd
xchg
sub
ja
std
fsubrl
xchg
jle
xchg
cmp
push
mov
and
into
sbb
adc
sbb
scas
xchg
sbbb
loopne
inc
cmp
and
stc
lahf
adc
mov
lahf
aam
adc
test
dec
data16
push
fcoms
xlat
push
mov
rcll
cmp
xchg
loopne
arpl
jg
jne
jmp
xchg
and
movsl
cli
adc
int
pop
in
aas
push
and
int
subb
inc
in
push
mov
mov
mov
jmp
out
add
mov
and
int
mov
lods
inc
rorl
gs
stc
mov
jne
mov
insb
xchg
pop
mov
rcl
mov
in
int
jl
aam
xchg
repnz
jg
cmpsl
adc
cltd
pop
ds
or
test
xchg
mov
dec
std
inc
in
sti
push
addr16
mov
jle
mov
fildl
test
ret
adc
loopne
xor
pop
cltd
xchg
mov
sbb
push
or
popf
mov
daa
jg
mov
movsl
jbe
movsl
or
test
insl
jle
jmp
jae
test
adc
mov
cmp
and
lods
dec
xorb
lock
and
dec
cmp
mov
mov
pop
xor
data16
divl
lock
mov
fsubrl
outsl
xchg
test
aas
lret
idivb
inc
mov
fwait
xor
adc
sub
aaa
shll
fcmovnb
in
dec
dec
leave
cmpl
jp
mov
fbld
pusha
sub
sub
decb
stc
addl
jmp
xchg
pop
loopne
push
fwait
ja
pop
mov
aam
mov
test
lahf
mov
mov
or
outsl
pop
mov
repz
adcl
int
in
cli
mov
jo
test
scas
ja
mov
cmp
ret
xchg
pop
rcrl
pop
xor
popa
mov
push
xor
pop
iret
test
and
popf
outsb
out
inc
in
sahf
js
lea
push
mov
int
sub
push
push
mov
mov
sahf
jecxz
fdivrs
sbb
add
stos
sbb
add
sbb
int3
sti
adcl
add
cmp
xor
mov
or
sub
push
cltd
or
outsl
xchg
arpl
xlat
movsb
push
pop
adcl
pusha
mov
loop
fcomip
push
push
xchg
inc
sbb
ret
xchg
mov
mov
xor
lret
add
bswap
in
pop
pop
shl
jp
dec
sub
jl
adc
insl
push
and
subl
ret
cltd
orb
ret
js
popf
lahf
xor
push
mov
pop
xchg
mov
je
mov
mov
xchg
xchg
test
jne
inc
adc
stos
push
mov
imul
aas
adc
and
or
lahf
xor
clc
push
and
xor
and
dec
cmp
adc
int3
mov
pop
outsb
aad
daa
xchg
mov
cmp
enter
cmc
sub
test
adc
es
mov
pop
imul
jne
ret
insb
test
xor
pop
jb
xchg
pop
int3
pop
popf
mov
xor
sbb
je
jp
adc
xchg
push
je
enter
push
jbe
cwtl
aam
pop
push
hlt
dec
repnz
jno
lcall
out
push
inc
pop
aaa
je
jnp
jb
cs
fwait
push
or
sub
sbb
inc
repnz
jmp
mov
cmp
add
pop
pop
adc
jb
scas
push
aaa
lds
and
ds
js
mov
lock
sub
inc
pop
outsb
jmp
sbb
scas
xchg
jp
nop
jne
scas
loopne
cltd
addr16
sub
adc
fisubs
pop
inc
cmpsl
bound
into
jle
jo
jne
movsb
subl
incl
xor
push
cmp
add
xor
dec
cmp
xor
loop
arpl
adc
or
outsl
xchg
mov
jo
mov
mov
dec
in
cmp
std
scas
insb
adc
jp
mov
mov
and
and
fimull
insb
push
dec
movsb
aam
ljmp
loop
sub
stos
jno
inc
cmp
daa
and
jmp
dec
pop
mov
sub
adc
push
dec
or
int3
mov
ret
mov
int
int3
push
leave
adc
fcomi
addr16
xor
imul
mov
loope
and
aas
push
add
mov
ss
cmp
ja
push
adc
pushf
cltd
push
push
push
movsl
sub
mov
jns
clc
xchg
les
xchg
sub
jno
xchg
or
rorb
subb
add
push
into
xor
mov
jge
iret
test
push
dec
and
inc
mov
add
xchg
mov
sub
and
mov
mov
jnp
and
mov
fcomps
in
add
mov
lret
pop
and
loopne
cmp
scas
jae
fidivs
mov
lret
test
aam
push
jo
mov
pop
adc
ds
popf
jns
je
inc
scas
rcrb
jae
test
sahf
repz
mov
push
popa
mov
push
arpl
mov
inc
pop
gs
add
sbbb
test
mov
test
out
sahf
cmpsb
add
leave
jns
imul
push
add
fistpll
xchg
repnz
pop
xor
push
loopne
rcrl
mov
xchg
je
push
cld
stc
call
test
shrb
out
call
cmp
sarb
mov
bound
lahf
imul
xchg
cmpsl
mov
and
mov
jnp
mov
mov
vunpcklpd
inc
out
xor
pop
xchg
push
xacquire
dec
sub
mov
pop
cltd
repnz
cmp
rcrb
sarl
mulb
decb
pop
inc
pusha
shlb
in
push
fmul
inc
in
mov
test
or
inc
cmp
call
iret
filds
inc
rolb
mov
cmpsb
test
mov
aad
push
in
jl
xchg
int3
icebp
lret
push
cmpsb
sub
push
cmp
lods
aas
push
arpl
rorb
mov
mov
jae
dec
mov
mov
and
push
jo
insl
jle
js
addr16
fxch
nop
es
inc
movsl
cltd
bound
scas
in
add
and
mov
icebp
int
xchg
lods
cmpsl
icebp
pop
lods
insb
jecxz
ret
into
inc
jb
inc
icebp
pop
gs
xor
into
mov
jnp
xchg
sahf
sub
ss
push
push
adc
fs
movsl
and
push
add
pop
sarb
sbb
sub
lret
out
popa
cmpsl
xlat
dec
fs
cmp
sbbb
cmc
sub
jb
mov
xor
test
sbb
push
cwtl
fisubrs
fisttpll
xor
fisttpll
dec
test
cmpsb
xchg
jnp
ds
std
push
cmp
ficoms
js
sub
xchg
test
shll
std
bound
jp
daa
aaa
xor
cmp
mov
leave
in
rcrb
sub
push
stc
lea
repnz
push
mov
imul
mov
sbb
lret
sets
sbb
add
dec
pop
mov
je
jl
lods
mov
in
mov
test
daa
scas
jns
div
inc
sbb
xor
adc
pop
ja
adc
add
movsl
or
aas
mov
ds
xchg
movsl
and
rclb
jge
xor
push
sbb
xchg
fadd
into
pop
cmp
add
xor
or
fnstenv
xor
inc
mov
sbb
pop
adc
mov
pop
fstl
das
pop
jp
jle
push
jp
cs
jmp
inc
add
pop
mov
jnp
ja
pop
in
xchg
mov
add
call
adcb
ret
push
jl
fisttpl
pop
roll
or
xlat
sbb
cmp
or
or
ds
in
pop
icebp
jmp
mov
jne
push
mov
fldt
sub
push
cld
mov
mov
test
es
xchg
pop
fidivl
xorb
and
push
dec
pop
pop
pop
stc
mov
cmpb
das
sti
test
push
repz
sbb
outsl
push
mov
out
mov
add
repz
imul
pop
mov
addl
out
fsubp
pop
cwtl
lds
test
scas
aad
inc
into
lea
inc
sbb
aad
xchg
xchg
cld
xor
int3
mov
mov
xor
mov
or
jo
je
jl
dec
xchg
repnz
add
mov
xchg
subl
daa
daa
cmpsl
and
adc
pop
lcall
cli
mov
push
dec
out
dec
cltd
push
mov
arpl
pop
sbb
push
ss
fbstp
xor
or
pop
out
out
pop
rcrl
add
test
xchg
sbb
cld
pop
or
rolb
mov
js
test
and
sti
std
rcrl
or
inc
sbb
mov
lahf
push
and
or
mov
jb
sbb
inc
addb
adc
sub
ret
sub
sub
push
adc
in
xor
adc
xor
cmc
sub
icebp
subb
push
mov
not
pop
ljmp
sti
xor
in
mov
xchg
pop
call
mov
std
push
test
mov
enter
xor
lret
pop
xchg
pop
test
push
jbe
jecxz
fnstsw
stos
mov
mov
lret
inc
sbb
aad
jp
jecxz
add
incb
outsl
inc
jmp
cmpsb
lock
lret
mov
jle
mov
fldt
out
pusha
aad
jge
bound
cmp
mov
inc
sahf
pushf
jb
mov
mov
xor
jmp
inc
and
jge
sbbb
fcmove
jecxz
jo
mov
lahf
incb
jecxz
aam
test
imul
inc
mov
test
xor
pop
mov
call
inc
lahf
add
add
arpl
or
aaa
mov
and
adc
push
and
pop
mov
add
in
xchg
sbb
addr16
sbb
ds
dec
cmp
adc
dec
mov
xchg
mov
mov
mov
or
je
adc
fwait
jp
nop
addr16
mov
ret
inc
sbb
push
cmp
mov
cltd
in
push
sarl
push
loopne
insl
and
aaa
mov
jge
enter
sets
adc
jmp
shl
push
fnstenv
outsl
mov
adc
cli
sbb
cmp
movsb
jnp
push
or
test
pop
ret
mov
daa
in
mov
mov
adc
sbbb
xor
or
sub
stos
or
test
popa
fmull
sarl
mov
mov
int
and
or
clc
and
adc
inc
jle
lret
push
mov
lret
les
or
inc
cmp
loopne
xor
fst
popf
pop
pop
fcompl
xchg
adc
xchg
mov
ljmp
fcoml
mov
jae
or
dec
xor
std
sbb
mov
mov
stc
decb
and
andb
mov
push
ror
int
clc
sub
mov
sbb
call
in
fwait
jmp
das
sub
xor
sbb
cmc
in
mov
push
std
js,pn
xchg
sbb
cmc
fwait
pushf
sbb
sub
stc
iret
mov
xchg
loopne
lcall
add
sahf
in
and
es
ret
fstpt
pop
dec
cmpsb
adc
pop
shrb
and
jg
jecxz
add
xchg
pop
jns
rcr
jae
push
mov
ret
mov
and
xor
cmc
cmp
dec
mov
in
aad
adc
pop
rcl
test
scas
out
mov
jle
bound
xchg
or
and
fists
outsl
pop
sbb
inc
aaa
jno,pn
add
ja
and
addr16
ret
push
mov
pop
xchg
mov
scas
stos
adcl
pop
jno
sbb
adc
add
fisubrs
scas
rol
push
mov
hlt
lcall
lods
stos
jae
inc
mov
cmp
fwait
js
mov
cmp
xor
jmp
adc
ja
mov
lahf
or
testl
imul
dec
xchg
sub
out
jns
jge
push
pop
fisttpll
rcll
out
sarl
lds
xchg
push
mov
jl
lahf
push
xor
js
mov
fadd
movsl
aas
and
lret
pop
cmp
lods
xchg
daa
enter
bound
or
incl
and
test
ds
add
jecxz
cmp
jns
lret
cli
pop
and
outsl
cli
push
mov
add
or
xor
lods
pop
or
adcl
stc
in
mov
lcall
test
testl
mov
cltd
daa
je
test
mov
repnz
jno
and
out
pushf
pop
sbb
in
xchg
lret
or
jmp
out
dec
ja
ljmp
cld
mov
or
jnp
enter
testl
push
lea
rorl
lahf
dec
sub
mov
adcb
movsl
sbb
adc
sbb
leave
cmp
js
sbb
and
lahf
lds
repnz
xor
push
dec
xchg
jp
or
xchg
pop
mov
pop
cmp
leave
imul
test
popa
pop
stos
pop
movsb
mov
jns
xchg
xor
xchg
push
jge
imulb
sub
lret
add
repz
fcoms
cltd
jae
mov
adc
push
xor
stc
addr16
dec
add
jmp
xchg
stos
sarb
jno
and
loope
push
es
or
lods
sbb
in
sbbl
andl
sbb
in
test
dec
adc
bound
adc
push
shll
push
rorb
cmp
insl
test
lods
test
lods
pop
cmc
test
mov
outsb
pop
sbb
add
adc
xor
insb
cmp
fwait
in
sub
xchg
ja
and
repnz
push
dec
testb
stos
mov
push
fildll
jb
bnd
or
pop
orb
into
jl
or
mov
sbb
and
sub
push
mov
mov
lahf
ss
cltd
repnz
cmpsb
rcrb
shlb
ja
inc
cmc
ljmp
jo
ficompl
and
jnp
in
or
or
scas
data16
hlt
dec
iret
push
xchg
jb
cmp
adc
mov
js
std
gs
mov
std
adc
int
enter
aam
jg
push
xor
imul
or
xchg
aas
xor
lods
hlt
int
jne
rorb
dec
dec
xchg
xor
xor
ret
stos
jne
fwait
xlat
xor
out
icebp
cmp
or
lcall
jne
inc
sarb
ljmp
jmp
mov
mov
xchg
mov
fiaddl
leave
test
and
dec
rorb
sub
in
jns
lahf
jp
mov
push
bound
daa
int
xor
popa
inc
movsl
xchg
inc
mov
dec
movb
jae
ror
or
in
push
call
imul
aaa
adc
decb
pushf
push
loop
movsb
in
xchg
sbb
test
enter
mov
lahf
out
adc
sbb
shrl
into
je
cmp
xor
into
cld
negb
vpunpckhwd
add
int3
xor
mov
sub
and
mov
or
rcrl
inc
add
popl
imulb
inc
sbb
hlt
dec
adc
mov
jnp
jne
mov
sahf
lds
fimuls
pop
negb
sahf
push
idivb
out
fildll
outsb
fidivrl
inc
inc
cmpsb
stos
mov
xchg
lret
pop
pop
jge
adc
ss
mov
loop
es
outsl
sbb
sub
inc
popa
decb
push
xchg
mov
out
aam
cmpb
ljmp
pop
es
pop
aad
gs
jl
int3
jg
mov
add
or
lret
fucomp
adc
roll
xor
inc
or
xchg
jmp
in
sbb
xlat
mov
pop
cld
insb
into
rorb
or
out
pop
lods
aam
into
cmp
in
mov
mov
inc
out
inc
mov
add
cli
sarl
fwait
lea
je
and
imul
int
add
movsl
pop
push
push
inc
jbe
fstp
cmp
not
xchg
mov
int3
xor
inc
pop
sti
pop
int
test
out
inc
xchg
loopne
mov
fwait
int
bound
mov
mov
aam
or
jg
pop
and
daa
addb
in
xlat
push
dec
push
lods
cmpsb
cli
cs
or
addb
jmp
adc
dec
fdivl
inc
adcb
das
xchg
ja
push
rolb
icebp
or
jmp
inc
push
sbbl
xchg
repz
jl
mov
scas
div
add
pop
or
mov
cmpsl
add
in
pop
inc
mov
xchg
mov
cmpsl
repz
pop
xor
cli
std
leave
xchg
jno
les
nop
push
push
fmulp
stc
or
jae
test
cmpsb
cmpsl
pop
iret
sub
cwtl
inc
adc
mov
inc
loopne
or
sbb
cwtl
mov
popf
ljmp
xchg
test
inc
push
aaa
iret
in
mov
mov
cmpsb
mov
addr16
mov
data16
sbb
fiadds
sbb
add
mov
sub
in
mov
xor
cmp
fs
lea
sbb
sub
loop
jl
cmp
xchg
dec
xchg
or
mov
push
sbb
out
data16
dec
gs
je
push
into
sub
mov
or
psrad
mov
push
in
loop
rorb
icebp
sub
mov
jo
push
sbb
push
mov
xor
pop
push
in
sahf
rcl
loope
sbb
fwait
adc
xchg
mov
mov
sahf
cmp
pop
js
jl
mov
adc
xchg
ja
xor
repz
int3
cmp
ds
inc
enter
fwait
push
mov
stos
jge
jl
and
out
insl
loop
nop
fdivp
sub
shll
xchg
pop
insl
xorb
imul
in
jnp
rcll
mov
sbb
or
fcoml
clc
std
cmpsb
pop
ss
fmull
imul
pusha
adc
pop
loop
in
decb
jecxz
mov
int
jl
test
andps
xchg
mov
fwait
xchg
outsl
ljmp
es
mov
hlt
out
dec
push
mov
mov
and
xchg
dec
pop
or
adc
and
add
mov
push
and
sub
out
sbb
gs
jl
sbb
push
data16
push
and
and
xchg
insw
fbstp
push
fnstsw
outsb
hlt
lret
fisttpll
mov
cmp
jecxz
fisttpl
xorl
ficoml
shl
imul
mov
mov
mov
repz
test
adc
mov
fnstsw
int3
jno
icebp
jge
and
pop
lods
lret
imul
sbb
repz
addr16
lds
and
sub
aaa
dec
testb
adc
fisubrl
sbb
divb
cltd
sahf
dec
cmpsb
jl
shl
cmp
or
dec
lea
and
push
jp
add
sbb
sti
mov
jp
ljmp
sbb
push
xchg
mov
js
inc
sub
mov
push
test
sti
clc
aas
arpl
in
push
popa
fmuls
enter
lret
fwait
testb
pushf
lret
mov
dec
aaa
sub
push
outsl
out
xorl
ss
repz
fidivl
movsb
enter
pop
sbb
add
xchg
xchg
sbb
dec
mov
inc
jg
mov
rclb
jbe
das
or
imul
outsb
repz
test
imul
outsl
pop
negl
mov
cli
jbe
lahf
shrl
out
sbbb
jg
imul
repnz
mov
orl
xchg
sub
xor
repnz
call
icebp
pop
push
test
dec
std
push
dec
or
pop
imul
les
bound
aaa
pop
and
pop
cli
push
mov
loopne
fwait
jns
cltd
and
rcll
push
scas
sti
xor
inc
add
test
shll
fldl
jle
stos
addr16
es
fwait
aad
loop
imul
std
inc
andb
aas
cmp
dec
xchg
or
cmpsl
inc
aad
or
stos
div
inc
cmc
int
cmpsb
repnz
outsl
popa
iret
add
mov
in
sub
stos
and
popa
pop
sbbl
outsl
jmp
mov
jl
insb
dec
xchg
mov
inc
push
pop
mov
add
mov
push
insb
pop
daa
inc
hlt
push
in
mov
adc
or
repnz
lret
lret
pop
flds
mov
loope
lock
stos
inc
in
lcall
xchg
sahf
jns
jp
push
shl
xor
popa
inc
stos
adc
in
repz
dec
adc
out
call
sbb
and
lods
mov
inc
inc
mov
jg
mov
decb
mov
mov
push
jle
inc
sbb
pop
imul
lahf
mov
cmp
cmp
mov
stos
imul
xor
sbb
iret
xor
mov
arpl
jb
sbb
aaa
fimuls
or
xchg
daa
sbb
jbe
xchg
ret
je
data16
xchg
ret
ds
ret
flds
test
sub
outsl
mov
push
imul
inc
pop
loopne
xchg
leave
loop
xchg
stos
jno
jmp
out
xor
inc
sub
loope
pop
mov
jbe
rorl
mov
test
mov
pop
sub
incb
cmp
jg
xchg
mov
loope
roll
lods
sub
adc
xchg
xchg
adc
cmp
and
xchg
jnp
dec
mov
xorl
xor
scas
add
stos
cltd
fldt
push
push
aas
or
hlt
jge
shlb
xchg
adc
jg
xchg
or
aad
mov
out
pop
and
testl
and
loop
mov
jg
jle
decb
jle
or
je
test
mov
in
mov
dec
call
inc
mov
xorl
sahf
push
inc
sti
push
ds
and
jecxz
ret
call
mov
movsb
imul
int3
add
push
inc
stos
shlb
adc
pop
cmp
pop
dec
cmp
mov
mov
mov
pop
stc
sahf
shll
sbb
pop
dec
dec
call
outsb
in
ljmp
mov
hlt
lret
push
icebp
and
pop
ja
xchg
and
mov
jo
pop
clc
fisubrs
mov
xor
stc
and
and
xlat
dec
loope
adc
std
enter
push
test
ret
inc
mov
ds
outsl
pop
cmp
fistl
aaa
inc
sbb
lahf
lea
lcall
fstl
and
and
scas
push
in
add
jno
jno
inc
cmc
bound
out
cmpsb
and
jmp
push
jge
xchg
sahf
std
jecxz
xchg
and
sub
mov
mov
mull
cmp
pop
fs
add
daa
pop
out
loope
push
test
clc
clc
dec
in
shrb
xlat
lcall
test
loopne
fistl
bound
movups
lahf
jnp
or
gs
add
into
push
lds
add
pop
sub
adc
jp
dec
out
mov
push
pop
leave
repz
sbb
dec
inc
fildll
sbb
incl
cmp
xor
in
cmp
pop
cwtl
sbb
pop
dec
xlat
arpl
xchg
popf
stc
inc
and
lret
ds
shrl
or
jb
xchg
jg
call
inc
mov
rcrl
lret
rcll
jp
cmpb
les
ret
push
ljmp
imul
sbb
arpl
xlat
xor
push
shrb
ds
shrb
jo
mov
leave
out
cltd
adc
shlb
dec
mov
addr16
jmp
mov
dec
mov
std
int
ja
ljmp
jmp
add
xchg
xor
push
rcr
jge
dec
xlat
cwtl
add
cli
xchg
jp
aad
imul
inc
mov
out
out
cmp
sbbl
mov
inc
pop
fcmovnb
inc
or
int
jnp
xchg
adc
jmp
insb
push
out
xchg
xor
sub
mov
mov
sahf
lock
mov
inc
mov
pop
fwait
jae
cs
loop
mov
lahf
sub
in
add
out
mov
sub
jb
call
push
cmc
jbe
bound
or
sub
jmp
push
jns
xor
add
andb
jle
jno
ret
push
pusha
lods
and
xchg
mov
inc
sbb
sbb
out
imul
lock
int3
lret
pop
push
js
jg
js
push
pop
dec
ja
mov
cltd
aas
data16
out
mov
pop
and
stos
xchg
stos
cmp
daa
cwtl
cmp
inc
push
fninit
jge
cmp
mov
inc
xor
pop
adc
or
xchg
in
daa
negb
mov
sub
cmp
mov
aas
pushf
std
push
mov
orl
inc
inc
mov
mov
fildll
jno
pop
fmuls
pop
mov
div
push
aaa
movsb
dec
clc
and
xorps
shrb
mov
das
jge
mov
mov
xchg
fldl
subl
xchg
je
lds
iret
ja
push
in
push
les
es
sub
push
push
lret
inc
jecxz
outsl
test
cmp
jge
sti
dec
lret
sbb
sti
push
ret
js
mov
add
ljmp
repz
sbb
xor
xor
mov
in
adc
mov
push
int3
rorb
fsubrp
pop
lcall
add
outsb
lods
sarb
scas
inc
inc
fcoml
mov
push
adcb
sbb
sub
add
xchg
jb
leave
mov
clc
xor
inc
push
jbe
xor
or
sbb
inc
push
add
scas
inc
mov
push
xor
andb
out
inc
rolb
sbb
mov
cld
inc
es
add
popa
stos
mov
in
push
push
pop
test
popa
xor
sub
stos
mov
push
mov
cmpsb
cmc
xchg
repnz
adc
sub
inc
cmp
mov
jne
xchg
cmp
push
mov
test
aad
cmp
add
outsb
xlat
notl
pop
or
out
mov
fdiv
sbb
test
dec
or
lods
push
inc
cmp
adc
lcall
stc
lds
gs
mov
mov
hlt
sbb
dec
insb
arpl
xor
jle
xor
jg
movsb
or
fcmove
xor
mov
sbb
daa
inc
out
mov
lods
dec
in
shll
cltd
sub
dec
mov
dec
mov
testb
xchg
std
push
ja
fs
inc
sub
xor
xchg
add
sub
out
mov
lret
cmp
and
gs
jns
inc
daa
pop
push
dec
or
andl
xchg
shrl
cld
lds
enter
adc
imul
out
hlt
mov
popa
push
add
xchg
dec
nop
ja
ja
arpl
clc
add
mov
adc
push
mov
into
gs
push
xchg
scas
test
out
test
and
pmaddwd
fisubrs
fidivs
gs
cmpsl
push
aaa
mov
adc
mov
and
repz
cwtl
addr16
pminsw
mov
scas
mov
test
imul
nop
in
inc
mov
xchg
add
dec
enter
dec
das
pop
call
nop
daa
sub
outsl
cmc
xor
les
and
push
test
pop
or
leave
flds
pusha
and
dec
popf
gs
std
pop
mov
pusha
sub
ds
hlt
loop
nop
pop
mov
pusha
pop
adc
xor
jecxz
ja
pushf
pop
cmp
add
and
mov
lcall
jecxz
push
jno
in
insl
sti
inc
divb
pop
setle
sub
fistps
jmp
add
mov
out
push
test
inc
lcall
js
insb
or
dec
popf
addb
xchg
jne
mov
shrb
mov
xor
icebp
add
xor
jb
in
insl
lds
jmp
ds
into
addr16
inc
aas
rcrb
cmpsb
ficompl
es
xchg
mov
andl
xchg
fcomp
loopne
stos
and
mov
js
jns
lret
loop
xchg
cmp
add
int3
jg
mov
jno
js
aam
mov
rdmsr
push
adc
inc
je
fs
jp
cmp
pushl
or
jo
cmovl
xor
js
imul
in
hlt
jecxz
mov
ss
inc
push
out
or
out
mov
sbb
xor
mov
insb
push
mov
mov
sbb
push
xchg
test
pop
outsb
lcall
sbb
int
mov
push
xor
repz
sbb
push
mov
test
push
xchg
cmp
sbb
pop
cmp
rclb
dec
jge
jne
add
sbb
int
sahf
xchg
bound
push
jg
js
mov
cmc
mov
inc
lret
inc
jne
mov
rclb
sti
lods
push
ret
int
insb
inc
lahf
dec
test
es
mov
jmp
int3
xor
mov
add
add
out
insb
push
mov
cmc
mov
loope
out
loopne
mov
out
xchg
jmp
subb
jmp
pop
push
sub
cmpsb
cmp
das
sub
shr
sarb
aad
stc
and
sti
roll
pop
xor
outsb
je
jge
aam
jb
out
jns
insb
xchg
xchg
lock
loope
repz
and
rcrb
rolb
loop
xor
mov
inc
push
fsts
test
add
or
mov
incl
pusha
sub
mov
jae
popa
cmc
out
pop
dec
stc
std
jo
sbb
adc
ljmp
out
aam
test
cmp
lahf
mov
or
les
daa
addb
push
jae
xor
sub
ja
in
inc
aad
cltd
js
jl
je
or
insl
sti
imul
add
rcrl
push
lahf
aas
or
xor
pop
cmp
jmp
push
xor
lods
jle
in
jp
addr16
inc
pop
inc
dec
cmpl
cli
insb
nop
pop
or
enter
aas
test
mov
sahf
adc
test
scas
inc
shll
xor
bound
enter
mov
add
cltd
push
or
sub
mov
pushl
ret
pop
mov
sub
mov
sub
mov
xchg
add
ss
inc
add
jae
push
clc
dec
pand
popa
rcrb
fs
scas
rcrb
mov
mov
mov
enter
sbb
push
and
jb
scas
mov
adc
cmp
pop
dec
stc
xchg
ror
add
pop
cmc
and
in
mov
jecxz
and
adc
lods
pop
icebp
faddp
mov
imul
push
fwait
cmp
adc
push
dec
stos
xchg
adc
jg
lock
into
or
jle
push
xchg
adc
push
sar
daa
dec
icebp
out
add
xchg
nop
pop
push
icebp
pop
push
mov
outsb
mov
leave
jge
loopne
sbb
stos
pop
js
push
scas
idivb
arpl
dec
push
scas
popf
xor
leave
or
sbb
xor
xor
xor
in
mov
xchg
jb
xlat
cmp
dec
add
pop
mov
je
aaa
jl
and
push
push
popf
jmp
add
and
mov
xchg
into
add
lods
lods
xchg
enter
cs
inc
push
insl
cltd
popf
mov
xor
xor
sub
cmc
cmp
xchg
cltd
push
movsb
or
insb
sub
jge
shr
xor
cld
ds
dec
mov
xlat
jo
pop
push
dec
mov
fcomps
gs
add
sub
push
and
lods
adc
out
sub
js
mov
mov
fidivrl
cmp
loop
iret
and
mov
stc
stos
aam
xchg
xchg
ret
xchg
jmp
cmc
out
cmp
addr16
sbb
jnp
or
dec
add
mov
enter
lahf
dec
fldt
mov
arpl
xor
xchg
pop
out
scas
sub
fs
jl
adc
or
lods
arpl
icebp
les
inc
daa
add
daa
ret
add
addr16
jecxz
or
mov
outsl
xchg
mov
ret
pop
mov
sub
bound
jo
enter
mov
sar
mov
inc
sub
add
xor
mov
push
int
jmp
js
lret
leave
mov
inc
stos
pop
pop
inc
or
mov
mov
ret
fs
mov
orb
sbb
adc
sub
lds
jmp
es
lock
mov
inc
sarb
push
sub
subl
fmul
pop
scas
outsl
call
hlt
in
fs
lods
ret
or
lret
in
cmp
cld
inc
sub
mov
lock
pushf
xchg
jp
jp
or
repz
adc
jb
lcall
xchg
ljmp
addl
mov
gs
adc
call
iret
pop
push
mov
sbb
call
cmp
adc
jb
notb
inc
je
lahf
mov
lret
lea
cmpsl
sti
sub
xchg
xchg
pop
call
cwtl
cld
lcall
scas
test
rorl
insb
lds
xor
or
cli
ljmp
aam
ljmp
fistpll
std
jnp,pn
std
xchg
dec
jp
ja
jl
out
push
dec
js
mov
lret
cld
ret
dec
stos
call
fisubrs
xor
sub
clc
mov
test
inc
cmp
xorl
ja
aas
or
sub
test
mov
mov
das
add
mov
or
add
mov
ret
dec
add
dec
in
cmp
inc
lods
add
lods
adc
xchg
push
and
push
loopne
cli
imul
mov
imul
or
in
lret
sbb
lret
je
loopne
repnz
stos
cli
insl
mov
sbb
test
sbb
in
xchg
mov
shrb
sahf
jb
outsb
mov
xchg
ficoms
cmp
sbb
jo
rcrb
cs
loop
lret
inc
jge
loop
addr16
pop
lret
add
je
notb
ret
mov
sbb
insl
sahf
test
les
fsubs
pop
scas
xor
repnz
icebp
ja
test
insl
lret
test
pusha
shrb
xor
sarl
pop
mov
xchg
adc
out
xchg
inc
in
fwait
mov
out
mov
xchg
cltd
das
push
clc
mov
lret
mov
xchg
add
inc
jg
jg
push
imul
int
repz
btr
mov
iret
push
ds
pushf
pop
sub
sub
jl
push
cmp
cmpsb
inc
mov
xor
ja
sub
aas
mov
mov
test
mov
icebp
bound
aad
ja
imul
push
sub
lret
int3
mov
or
pop
or
fidivl
ficoms
push
cli
in
arpl
mull
pop
inc
sbb
push
xchg
mov
jmp
into
test
outsb
int
subb
cmpsb
cmc
push
into
pop
je
pop
es
adc
cmc
lea
push
mov
mov
out
jecxz
cmpsb
mov
cmpsl
cltd
into
and
xor
inc
outsb
in
test
mov
add
mov
jnp
xchg
pop
test
xor
addr16
test
test
mov
call
insb
cltd
test
cld
ljmp
ds
jns
rclb
js
jp
int3
lods
sub
inc
mov
mov
add
pop
mov
sub
leave
fst
es
and
fdivrl
shll
inc
retw
imul
ljmp
sub
repz
xor
adc
xor
lock
adc
aas
test
sub
imul
shlb
jecxz
dec
adc
shll
mov
cltd
mov
mov
lcall
inc
test
adc
pusha
sbb
or
cmpsb
test
cmc
mov
loop
es
scas
scas
mov
pusha
mov
mov
and
clc
xor
out
loopne
cmp
jle
jne
fiaddl
jbe
pusha
into
in
pop
sub
andl
xlat
sahf
aam
data16
movsl
cmp
xchg
sbb
xchg
mov
lods
cmp
mov
hlt
dec
nop
bound
adc
jg,pn
push
push
shll
and
jnp
inc
mov
dec
in
inc
mov
dec
cmp
fisttpll
lds
mov
je
sub
cwtl
fwait
xchg
and
mov
stos
cmp
xchg
gs
lods
rcrb
filds
loop
xchg
inc
fmull
jmp
xor
sahf
or
frstor
mov
lods
pop
xor
push
test
imul
test
icebp
enter
or
and
stos
jecxz
sub
jmp
fistps
sbb
lock
outsb
divb
test
int
xchg
pop
sbb
lods
mov
dec
lods
adc
sub
or
pop
arpl
fldl
dec
stos
pushw
adc
cld
push
push
mov
jge
popa
in
js
jbe
vpperm
das
ds
ret
ret
mov
pop
jl
dec
aam
cmp
jns
inc
shrb
mov
dec
in
sbb
ret
jne
or
or
and
dec
je
mov
data16
jno
jle
addr16
push
cmp
out
push
sti
push
jmp
jb
lcall
iret
data16
xor
adc
lods
xorb
mov
mov
sahf
add
repnz
xchg
jae
repnz
cmp
std
stos
adc
sbb
in
jnp
jecxz
dec
pop
icebp
push
scas
clc
mov
dec
scas
inc
das
xchg
jle
mov
mov
mov
lcall
or
jle,pt
xchg
and
pop
flds
jmp
dec
fdivs
dec
jle
mov
xchg
mov
pop
sub
les
movsb
mov
shl
push
shll
ret
xchg
pop
lea
in
inc
fildl
lahf
imul
out
popa
mov
fiadds
and
lds
mov
mov
pop
fucom
out
fmuls
dec
push
mov
lret
into
mov
dec
addr16
out
cmp
xor
lret
lea
aam
push
out
push
repnz
into
xor
mov
insl
inc
jp
scas
pop
sahf
dec
mov
xlat
and
xchg
sbb
hlt
test
stc
lcall
mov
xor
sbb
jnp
fwait
or
cld
loop
mov
jnp
in
fisubl
in
lahf
push
xor
dec
cmc
sbb
xor
adc
sbb
aas
adc
fwait
mov
cmp
mov
pop
ds
lock
inc
inc
inc
or
cli
div
inc
daa
idivb
cmc
and
ss
pop
add
push
mov
ror
ret
cltd
cltd
mov
inc
insb
push
mov
and
orb
lcall
sub
pop
scas
jge
mov
mov
movb
fs
cmpsl
mov
add
arpl
jnp
dec
adc
cmp
sbb
push
aaa
movsb
mov
cs
out
popa
mov
in
sbb
lock
int3
insb
add
mul
mov
cmp
sub
iret
mov
jo
lcall
ds
mov
mov
pop
or
push
sbb
clc
push
xor
inc
pop
sbb
mov
adc
lea
push
mov
and
mov
ljmp
stc
pop
mov
aam
in
jg
xorb
lret
out
sbb
mov
je
lret
and
pushf
sub
push
jge
aam
or
mov
xor
cmp
mov
leave
xchg
sbb
adc
jp
lcall
and
dec
sub
std
enter
lea
rol
arpl
sub
and
popa
shlb
scas
mov
dec
dec
daa
je
ljmp
addr16
dec
jnp
notb
test
in
clc
subb
iret
imul
gs
mov
call
inc
mov
xor
push
mov
imulb
jmp
imul
pop
scas
add
rcrl
pop
fdivs
xor
or
call
bound
fistl
pop
dec
mov
jne
sbb
jne
jb
adc
stos
int3
cli
clc
mov
jnp
xchg
push
scas
xor
mov
add
sub
mov
mov
cmpsb
push
jg
add
inc
aaa
sub
insb
das
jecxz
cmpb
pushf
cltd
and
cld
cmp
loop
cmp
cmp
push
xchg
add
xchg
cmp
cmp
test
add
out
decb
ja
mov
xchg
je
rcr
cmpxchg
mov
mov
ss
repz
cmp
addb
icebp
hlt
ljmp
push
lea
add
mov
ds
inc
scas
xor
cmpsb
mov
outsl
xor
scas
jle
addr16
popa
jb
xor
scas
push
pop
mov
jl
ja
and
pop
ficompl
lret
pop
xlat
outsb
xor
cmc
or
ficoml
lret
pop
sti
aam
imul
out
push
jl
test
in
jp
cmpsl
idivb
popa
mov
in
mov
sub
stc
jnp
lret
rorl
dec
add
cmc
xchg
inc
cld
xchg
mov
dec
lock
test
sub
insb
jl
mov
gs
pop
xchg
movl
mov
das
cmp
inc
je
push
dec
in
inc
inc
pop
adcl
inc
adc
xchg
jmp
xchg
lock
xlat
sub
addr16
xor
mov
movsb
cmpsl
fldcw
sbb
dec
clc
mul
jmp
pop
push
cld
pop
fisttps
or
add
das
dec
arpl
pop
repnz
xor
push
jns
xor
xchg
cmp
scas
adc
or
nop
sbb
lcall
push
xlat
pop
mov
stc
insb
fs
push
leave
cmpb
cmp
mov
movsl
adc
neg
xor
mov
lahf
mov
fdivs
xor
subl
aaa
push
mov
cltd
js
mov
in
aam
mov
rolb
pop
enter
sbb
mov
rorb
xor
xlat
aaa
lods
jmp
leave
xor
adc
cltd
aas
cmp
pop
out
lods
mov
jl
nop
cld
pushf
ljmp
jmp
mov
ret
subl
js
cmp
aas
xor
scas
fldenv
pop
mov
movsb
ss
jb
adc
xchg
insb
jp,pn
in
xchg
cltd
mov
cmp
mov
enter
mov
cmp
xchg
ds
jbe
hlt
xchg
adc
pop
mov
mov
aam
out
mov
mov
mov
aas
in
pushf
mov
adc
push
movsl
lods
ror
jae
int
fdivs
ret
stos
cmp
mov
pop
pop
mov
call
repnz
xchg
cmpsb
test
mov
mov
cwtl
cli
out
dec
arpl
mov
shll
ss
sbb
pop
sub
push
inc
in
imul
adc
xor
add
push
sbbl
stos
and
negb
inc
xor
sahf
loope
nop
xchg
add
pop
sti
in
cmp
rcrl
xor
sub
push
gs
add
pop
dec
ret
in
rcrl
jg
add
loop
push
icebp
ds
pop
imul
add
sbb
mov
stos
inc
test
aad
and
shll
fstpl
inc
jb
outsl
sbb
mov
mov
mov
cltd
movsb
scas
fcoms
sub
rorl
add
sti
cmp
iret
xchg
nop
mov
fmull
scas
adc
test
push
enter
add
mov
scas
shlb
sbb
repnz
pop
repz
jg
clc
mov
aaa
inc
jg
push
xor
test
ret
or
jecxz
pop
fsubs
dec
pop
push
mov
xchg
inc
pop
mov
or
cmp
out
jne
pushf
int
cld
jg
xchg
shl
scas
sub
xor
lea
add
inc
push
inc
ja
xor
dec
es
loope
dec
lock
dec
lods
cmp
mov
and
insl
stc
loopne
mov
movsl
lret
fs
pop
daa
and
add
in
inc
sbb
js
push
mov
adc
mov
aam
fwait
imul
cmpsl
pmulhw
mov
xor
xchg
or
subl
ficoml
sub
ret
or
pop
mov
in
ds
call
mov
jp
insb
sub
into
pop
cmp
pushf
push
lea
push
insb
loope
mov
push
mov
rcrl
fidivs
shrb
shrl
shll
lcall
jo
inc
fistpl
shr
xchg
into
insl
inc
sub
push
add
mov
inc
push
cld
cmpsb
adc
loop
jmp
pop
fidivl
stc
mov
xchg
icebp
add
push
sahf
push
push
inc
test
aaa
ss
cmp
mov
out
cmp
lret
dec
sbb
push
cmp
insb
es
subb
adc
nop
mov
pop
xchg
mov
dec
imul
movsb
rclb
insb
arpl
cmp
mov
jbe
and
adcl
js
pusha
mov
cmp
sub
xor
outsl
dec
push
fsub
jecxz
js
imul
jmp
pop
lock
pop
xchg
jmp
adc
std
mov
rol
fidivs
pop
mov
in
push
fimull
lods
sub
xchg
or
int
pop
cmpsb
inc
push
inc
ret
sti
fisubrl
insl
fisttpll
jo
out
mov
inc
dec
inc
push
call
insl
imul
sub
add
jle
pop
or
rol
loope
add
xor
pop
rcrb
insl
sbb
lret
jns
cld
cmp
sub
ret
lods
adc
shlb
jmp
or
mov
cltd
nop
pop
ljmp
js
cmpsl
and
and
jp
mov
inc
test
adc
and
fistpl
inc
jae
xchg
cs
int
add
xchg
in
into
push
pusha
fwait
aad
sub
fists
xchg
cld
mov
out
mov
ret
cmpsl
dec
cs
shlb
sbb
int
cmp
scas
dec
dec
dec
insb
popf
mov
mov
dec
mov
in
adc
and
enter
ficomps
into
pusha
push
and
data16
test
ret
push
popa
mov
sarb
in
or
cmp
imul
aaa
jne
cli
cwtl
cmc
sahf
mov
push
fisttpl
inc
push
into
outsl
jb
jne
ljmp
or
push
pop
adc
decl
mov
loopne
inc
iret
movsb
dec
mov
mov
lcall
out
dec
xchg
adcb
ja
int
lret
mov
call
xchg
stos
in
por
push
pop
mov
jbe
mov
or
ja
les
cli
cmc
scas
aas
push
in
lahf
cltd
cltd
mov
xchg
scas
pop
xchg
cltd
jnp
cld
daa
add
mov
and
inc
enter
jp
gs
in
mov
mov
outsl
ret
nop
jmp
jno
pop
ficomps
lcall
aaa
pop
loopne
mov
jecxz
int
pusha
ljmp
clc
mov
inc
mov
add
cmp
daa
jae
stc
pushf
enter
inc
sbb
jg
mov
jnp
jmp
jl
lods
aad
jb
ja
lahf
aas
push
filds
mov
lods
mov
js
cmp
sub
popf
cld
xor
mov
jae
loope
gs
and
jge
fmuls
and
xlat
andb
scas
aam
pop
jno
clc
ds
pop
dec
lcall
out
loop
xchg
jo
pushf
push
popa
cmp
lods
mov
xchg
scas
dec
xor
dec
mov
in
dec
push
mov
movsl
stos
pop
or
adc
ja
mov
adc
pop
repz
test
repz
ljmp
cmp
movsl
mov
xchg
pop
push
lock
popa
xchg
test
hlt
add
sbb
ss
sub
daa
sub
mov
out
rcl
in
jmp
cltd
mov
push
push
outsl
mov
sbb
jae
movsl
mov
push
cwtl
xchg
dec
rolb
inc
pop
js
add
adc
cmp
or
cltd
inc
mov
xorb
jp
mov
mov
daa
pop
rolb
and
ret
or
outsl
and
push
int3
stos
sbb
inc
out
jp
rcll
lcall
incl
push
lea
xchg
mov
pop
repnz
dec
or
std
lock
das
pusha
pop
pop
test
cmp
cli
lret
mov
mov
out
mov
iret
or
rclb
sbb
sbb
icebp
test
push
mov
jmp
mov
dec
jnp,pn
mov
pop
and
mov
stos
push
and
mulb
imul
popf
in
ss
cmp
xlat
adc
cmp
xlat
pop
in
jo
daa
std
sub
mov
cmpsb
pop
rcrb
jno
sub
shrl
or
leavew
cltd
inc
inc
mov
and
das
decl
sub
mov
dec
insb
xchg
cmp
adc
aad
fdiv
xchg
mov
jp
inc
xor
pop
pop
push
sub
test
jne
xchg
jbe
xor
lcall
jae
addr16
out
xchg
inc
mov
stos
les
fadds
insb
push
jmp
inc
mov
imul
btc
xchg
xchg
jnp
mov
stos
or
push
sbb
mov
out
lahf
mov
es
sti
in
jp
jp
mov
push
idivl
sahf
aad
cmpb
add
lods
adc
std
sub
adcb
scas
or
or
mov
popa
pop
pusha
jecxz
push
insl
in
ds
cmp
int
enter
push
sbb
fs
cmc
mov
repz
arpl
cli
outsb
cmp
jmp
icebp
jae
imul
aad
sub
out
insl
sbb
jecxz
nop
arpl
sub
cmp
fldl
cmp
inc
loopne
sbb
dec
les
adc
out
fisubrs
int3
and
mov
nop
sbb
shl
push
sbb
mov
xchg
jmp
repz
sub
push
lret
test
sub
add
push
loope
movsl
adc
std
mov
jnp
sbb
outsl
jbe
adc
imul
paddb
xchg
test
push
into
ret
or
dec
ds
mov
imul
jmp
jne
xchg
and
pop
sub
jb
push
repnz
sbb
cmp
loope,pn
cwtl
mov
xchg
xor
jg
int
push
sub
in
scas
push
add
inc
sbb
fnstcw
xchg
push
repz
push
dec
sub
test
test
jl
or
mov
rcl
push
sbbl
push
jp
xor
mov
sub
lret
ja
push
jo
bound
arpl
cmpsb
test
cmp
fdivrp
scas
add
movsl
nop
xchg
ret
inc
mov
mov
into
pop
jg
sbb
jbe
fwait
das
dec
lods
roll
mov
push
lret
fsubrl
or
ja
mov
daa
inc
add
jbe
jle
jbe
popf
add
xor
faddl
int3
flds
xor
sarl
add
fistpll
mov
xchg
xor
jbe
inc
sub
xor
lahf
testb
mov
popa
inc
jecxz
mov
sub
cmp
sub
push
dec
incb
push
inc
jae
test
das
in
and
lret
imul
mov
sbb
dec
repz
adc
and
stos
push
in
test
xchg
pop
cmp
stos
xchg
pop
fldcw
lcall
sahf
fcmovu
movsb
daa
scas
mov
cmp
pop
xlat
add
cmpsl
jne
dec
cs
jnp
ss
jmp
stos
jl
rcr
out
xor
loop
ret
rcll
dec
jb
nop
ret
add
fstl
jae
or
cs
jbe
gs
add
mov
pop
adc
shrb
out
mov
or
add
push
test
jp
xor
and
fildll
in
mov
mov
mov
sti
inc
push
int3
pop
xor
cltd
mov
cmp
sti
and
aam
inc
loop
inc
sarb
mov
aaa
loopne
push
xchg
sub
jno
cmp
in
xchg
mov
lret
lret
push
or
and
prefetchw
imul
push
adc
or
mull
xor
sub
into
ljmp
push
adc
push
jle
aas
inc
xchg
fs
jne
adc
add
sub
shlb
icebp
loopne
jns
lcall
outsl
jae
pop
push
sub
adc
inc
xlat
mov
jo
ss
sub
jl
or
xchg
flds
das
in
mov
push
movsb
inc
and
inc
jno
adc
jmp
push
sub
addr16
rcr
sub
push
add
imul
push
jg
es
lods
or
mov
loope
fwait
insl
xchg
push
pop
or
and
push
add
sbb
das
aam
jbe
jle
daa
inc
sub
rcll
mov
mull
pop
scas
cltd
sub
push
sub
dec
inc
cltd
dec
dec
cmpsb
cwtl
inc
lods
jb
and
aas
fld
mov
addl
lahf
test
mov
repz
bound
lea
scas
leave
cmpsb
pop
xchg
inc
sbb
xchg
movsb
adc
jge
shl
bound
into
mov
cmpsl
sti
xlat
daa
jb
int
lahf
out
lea
jno
xlat
and
insb
xor
adc
cmp
jo
mov
scas
adc
jns
into
mov
bnd
adc
push
xor
add
out
loopne
jge
cltd
mov
push
cmc
xchg
call
push
cwtl
add
and
push
cmp
mov
lods
and
xchg
add
aas
out
mov
sbb
mov
mov
cmp
add
xchg
mulb
cmp
insl
adc
and
push
aam
or
in
pop
pop
jl
mov
dec
cmp
das
cmp
cmp
push
test
in
inc
or
fs
add
mov
xchg
inc
mov
xor
push
mov
jns
push
jb
sarl
pop
cs
imul
not
fildl
dec
sub
inc
inc
fildl
daa
js
push
cli
and
mov
in
mov
sub
fs
in
aaa
in
ljmp
cmp
pop
loopne
add
mov
cmp
xchg
xchg
sub
cld
jne
sub
xor
jp
aad
call
push
lods
or
pusha
mov
mov
rorl
sbb
subl
rorl
in
cwtl
fisubl
inc
mov
fidivrs
mov
cwtl
pushf
or
dec
addl
pop
enter
mov
dec
or
mov
jmp
pusha
divb
testl
add
xor
int
movsb
repz
je
or
push
stos
shll
sub
lret
cmp
jmp
xor
fbld
xorl
pusha
jbe
mov
les
cmc
dec
pop
adc
movsb
or
out
imul
jnp
jecxz
pop
addr16
shll
cmc
les
data16
ljmp
cmc
gs
enter
movsl
push
cmpsl
std
arpl
out
pop
mov
xchg
cltd
mov
adc
dec
out
cmp
stos
lds
nop
pusha
insb
add
fwait
sbb
les
sbb
adc
mov
dec
mov
adc
inc
jle
adcl
mov
sbbl
cli
rcrb
fdivrl
into
daa
mov
ljmp
testb
or
pop
iret
jmp
arpl
dec
insb
jl
int3
shll
mov
cld
lock
test
lea
pop
insb
or
icebp
mov
xchg
gs
adc
lcall
pop
jl
jmp
jbe
and
mov
lea
xor
xchg
xchg
dec
xor
ja
xchg
fcoms
ljmp
sub
repnz
push
xlat
enter
mov
fs
icebp
outsl
and
repz
xor
test
ret
iret
jmp
lods
out
adc
out
xor
adc
lods
sbb
inc
pushf
lods
popl
fsts
jne
cmpsb
fnstenv
or
cmp
outsl
mov
in
scas
jg
sub
scas
mov
jne
arpl
divb
jb
inc
xchg
fs
push
cmp
or
pop
popf
daa
mov
mov
jns
arpl
and
popf
imul
pop
cmp
xorl
movsl
mov
sti
mov
sub
rcrb
arpl
mov
leave
popf
inc
cwtl
push
fdivl
mov
push
int
xchg
sbb
dec
aam
and
and
lds
sti
dec
imulb
cli
fists
jg
roll
es
cmp
fcmovbe
mov
pushf
push
cwtl
repnz
pop
xchg
ja
and
xor
enter
into
dec
in
xchg
int
cmp
mov
mov
popl
sub
scas
sub
hlt
pop
jp
xor
mov
stos
push
jp
popa
sub
outsb
jecxz
push
divl
and
lock
mov
jno
ja
repz
push
mov
push
aam
ror
dec
mov
data16
push
adc
movsl
outsb
xlat
inc
inc
mov
jmp
in
stos
mov
into
lds
popl
sarl
xchg
imul
pop
cmp
stos
mov
out
push
out
arpl
ljmp
leave
mov
loopne
cmpsb
mov
fcompl
fbld
out
add
fidivrl
or
cs
imul
mov
fstpl
xchg
rcll
sub
and
sbb
fwait
and
and
and
xor
inc
test
lret
add
dec
ret
push
ja
gs
loope
jns
push
inc
insl
xchg
and
adc
sahf
mov
mov
and
sbb
push
pop
stc
loopne
or
fistps
imul
xchg
push
loopne
mov
add
mov
cmpsl
and
push
inc
xor
cmp
jno
out
mov
cs
jl
mov
jle
inc
xchg
bound
or
sub
js
sbb
jle
mov
lahf
mov
aad
enter
aaa
movsb
cs
and
jbe
xchg
mov
or
xor
in
mov
stos
fimuls
mov
mov
aas
inc
mov
lahf
jbe
push
mov
icebp
cmovae
je
push
cwtl
scas
cmp
dec
xchg
loop
xlat
jb
inc
call
sbb
xchg
in
add
mov
cmp
mov
inc
fdivr
das
or
dec
into
mov
out
out
mov
addr16
or
pop
cmp
jge
push
sahf
xchg
int
outsb
jle
jge
shll
rcrl
lods
shl
jae
loope
in
test
loop
movsb
sahf
sub
popf
mov
stc
stos
nop
shrl
sub
xor
je
rcrl
fdivrl
cwtl
imul
xor
xchg
sub
ds
popa
fsubl
pushf
and
adc
dec
inc
xchg
mov
aaa
pop
push
mov
dec
dec
aas
push
jge
movsb
push
in
test
mov
cmp
dec
jo
cmc
inc
movsb
movntq
out
mov
cmp
lret
dec
sti
jp
loope
lcall
pusha
insl
sbb
ss
sbb
test
push
in
adc
and
daa
loop
mov
cs
ret
jge
cmc
push
pop
sub
fldcw
mov
sub
pop
lods
xor
into
adc
add
adc
out
sub
cld
aam
mov
cld
int3
shrl
insl
lock
test
fcmovnb
test
mov
add
dec
das
sahf
stos
sbb
cltd
and
fildll
in
lahf
lods
sub
jmp
fldenv
adc
incl
push
mov
popf
and
fistps
stos
jnp
push
jg
cmp
adc
pop
inc
lds
in
push
mov
insb
adc
xor
arpl
rolb
orb
jg
push
mov
inc
inc
cmp
cld
clc
push
xchg
push
pushf
inc
push
dec
loop
xor
adc
xor
leave
push
popa
std
in
cli
cmp
arpl
rclb
out
scas
in
outsl
adc
push
repnz
pusha
hlt
ljmp
adc
cmp
pop
fdivs
movsl
clc
daa
rcr
loop
aas
xchg
jmp
add
cmp
jne
ret
scas
sbb
or
movsl
test
mov
xchg
in
xchg
test
or
stos
or
inc
xchg
lea
sbb
addr16
ret
sub
movsb
xchg
jbe
adc
int
imul
lods
xor
and
push
int3
lret
push
xor
ja
fsubl
add
loopne
jmp
fldt
sbb
dec
daa
jmp
mov
mov
out
inc
loope
shr
mov
mov
mov
sbb
dec
jb
into
add
cmp
dec
cmp
push
icebp
jmp
push
shl
mov
cmp
lock
sub
dec
or
ret
stos
ljmp
mov
jnp
mov
ret
in
call
adc
insl
out
rolb
xchg
pop
aam
xor
movsb
pop
xlat
adc
shll
rcll
sub
imul
pushf
jb
and
movsl
lcall
mov
xchg
mov
jecxz
or
adc
add
xor
loopne
stos
call
clc
lds
lea
xchg
ret
cmp
jae
adc
lods
bound
sbb
jno
add
jno
insb
loop
mov
int
outsl
fcmovb
xor
cwtl
movsb
mov
es
aad
fs
push
ljmp
pop
jne,pt
fbstp
dec
cwtl
ja
xorb
inc
sbb
push
and
sbb
jge
jb
or
push
mov
lea
testb
dec
loop
js
push
cli
popa
jle
mov
jbe
pop
sahf
clc
push
cli
mov
fnstsw
pop
dec
mov
out
xor
sub
mov
out
xchg
sub
jbe
jo
mov
test
lds
das
fisttpl
cld
xchg
jbe
xlat
fdivr
mov
cmp
pop
movsb
or
sub
pop
or
ja
mov
mov
push
push
jb
dec
push
or
minps
into
aas
mov
fdivl
mov
jbe
lret
pop
repnz
test
shll
icebp
inc
ja
xchg
jge
cmp
sub
jle
gs
idivl
pop
mov
insb
adc
stos
ret
inc
inc
repz
cmp
mov
xlat
push
jecxz
add
sti
ljmp
push
sbb
cs
add
lock
shr
das
enter
mov
jne
shr
xor
or
aas
adc
scas
and
frstor
add
imul
daa
dec
sbb
iret
lods
mov
fcoml
dec
adc
lcall
lea
inc
pushf
jl
decb
in
or
xor
xchg
pop
dec
mov
inc
inc
test
fsubrs
out
ljmp
or
xor
jmp
inc
int
xchg
inc
adc
push
mov
lea
inc
mov
insl
sbb
jl
test
rolb
loope
mov
xor
jnp
pop
icebp
sub
hlt
push
pop
loop
insl
gs
mov
cmpsb
adcb
bound
xorb
mov
pop
loopne
cmp
jns
cwtl
subl
enter
andl
fmull
mov
jp
mov
int
xchg
in
xor
insb
jmp
dec
mov
arpl
mov
sti
add
jl
push
and
xor
fcmovnb
outsb
js
jb
lock
mov
ja
ror
in
cld
xchg
push
aas
jae
jo
adc
inc
xor
fucom
cmp
cld
cmpsb
or
mov
jecxz
or
call
pusha
mov
aas
cltd
jp
and
shl
ds
push
in
add
psrld
xchg
cltd
mov
jbe
jns
out
mov
imul
fdivs
cld
xchg
jp
xor
pop
mov
ds
jmp
out
adc
sbbb
popf
stos
stc
leave
sbb
lds
xor
dec
out
loop
cwtl
jle
pop
clc
cmpsb
inc
mov
cmp
inc
out
mov
jb
mov
jb
lock
mov
mul
fsts
shlb
rcr
mov
cli
in
cmpsl
push
xor
mov
mov
aaa
stc
pop
clc
jno
pop
fcoms
mov
and
enter
repnz
es
addr16
aas
mov
mov
int
invd
leave
cmp
loopnew
out
es
idivl
push
std
add
pop
push
pop
ror
mov
or
aas
cmp
or
sub
popl
mov
rorl
pop
fwait
mov
hlt
into
scas
dec
mov
push
mov
scas
inc
fsubs
adc
xor
sub
push
add
or
add
inc
punpckldq
and
into
ret
pop
add
fnsave
nop
mov
mov
sarl
pusha
addr16
jnp
adc
add
pop
push
jl
push
aam
fsubrs
cltd
enter
sahf
scas
movsb
or
fildll
xchg
shl
xor
data16
repnz
xchg
scas
cmp
cmp
in
filds
xchg
stc
sub
ret
add
xchg
sub
subb
pusha
push
lahf
sbb
out
scas
out
out
xor
cwtl
cli
outsl
dec
inc
cli
or
adc
sbb
imul
nop
insb
fldt
bound
aam
push
xchg
cli
and
ds
sbb
pop
hlt
pop
nop
cmp
inc
mov
daa
jg,pn
pop
ret
pop
mov
xchg
incl
lods
sarb
push
fwait
pop
add
mov
jnp
xchg
push
inc
jae
out
mov
dec
mov
stos
jp
jae
sub
das
mov
cmp
adc
cltd
adc
and
cmp
push
jecxz
mov
mov
fisttps
js
inc
sub
lcall
popf
retw
rol
outsl
mov
test
cmp
test
mov
inc
jno
stos
pusha
leave
sub
push
mov
cmp
and
loope
mov
insb
andb
mov
xchg
test
orb
mov
adc
notl
sahf
flds
jmp
pop
jb
pop
sarb
cmp
pop
adc
movsb
cmpsb
push
xchg
outsb
push
mov
out
push
xchg
pop
sbb
cmp
push
mov
inc
xchg
fs
mov
push
pop
or
out
add
int3
shl
daa
popa
pop
fcomps
mov
out
imulb
popf
adc
insb
push
dec
mov
xchg
iret
inc
push
or
sub
jns
inc
pop
xchg
ror
mov
jl
inc
cmp
mov
push
jb
ret
xchg
rol
cltd
pop
in
insb
clc
fcmovu
xor
lcall
sti
mov
data16
sbb
sahf
pop
fldcw
rclb
aad
lcall
pop
dec
and
or
jne
sub
bound
inc
lock
mov
mov
mov
out
add
into
insl
loop
rcrl
js
call
inc
movsb
push
mov
ja
lods
cmc
xchg
fwait
scas
mov
int
mov
pop
imul
flds
int3
sub
xchg
lahf
vpsrlq
in
daa
xor
out
push
push
push
xchg
lds
sbb
inc
cs
inc
xchg
not
lods
mov
sbb
pushf
add
mov
jnp
xchg
mov
aad
inc
push
xor
mov
inc
pop
jl
aam
out
or
in
adc
andl
fmuls
std
pop
lret
push
or
jg
popa
cmp
jno
icebp
lds
cmp
inc
jl
lcall
int3
xchg
lret
push
mov
inc
or
mov
rcll
inc
out
lock
push
mov
sub
cs
pusha
outsl
pop
cmp
fstps
cmpsl
popf
scas
mov
stc
sub
cmp
movsb
ljmp
notl
icebp
cwtl
push
test
jb
dec
pop
adc
or
or
aaa
dec
ret
cmp
in
xchg
stos
mov
dec
ljmp
hlt
shl
lods
cltd
aaa
sub
aas
push
jns
sahf
ja
mov
jle
packssdw
aaa
sbb
cwtl
mov
aam
dec
sbb
sbb
daa
jb
adc
rcrl
iret
mov
popa
mov
jns
jg
ss
push
sub
aaa
test
popa
sarl
pop
mov
sti
mov
das
lcall
push
loop
jnp
adc
and
out
addr16
iret
stc
pop
int3
add
loope
scas
xor
lcall
nop
arpl
sub
sbb
adc
push
sub
inc
add
mov
ficoml
popf
xchg
shlb
add
fdivs
lret
mov
out
xchg
lret
mov
inc
cvtps2pd
dec
hlt
and
shlb
mov
push
sbb
pop
fmuls
or
mov
fstp
popf
loope
sbb
ret
ds
outsb
mov
popf
aam
jne
sahf
mov
imul
dec
dec
orb
jecxz
dec
in
push
pop
in
and
enter
sbb
pop
mov
test
fld
and
push
dec
adc
push
add
sub
nop
mov
add
mov
or
push
xor
push
mov
cmpsl
ret
jne
andb
sbb
enter
inc
push
add
xchg
mov
jmp
sbb
add
in
stos
mov
out
sub
sarb
inc
js
dec
cli
inc
pop
ss
orb
push
and
int3
arpl
inc
lock
lods
les
nop
pop
sub
test
es
push
add
and
dec
test
lcall
ljmp
cmp
js
data16
sbb
repnz
add
popf
mov
lea
cmp
lods
negb
cmp
fwait
fs
xchg
fcmovnb
cwtl
pop
or
jb
pop
int3
cmpsb
cld
ljmp
xor
mov
outsb
repz
xchg
sbbb
outsb
or
ljmp
hlt
movsl
mov
pusha
rcrl
stc
cmp
cmp
shll
loop
ret
testb
pop
int3
sbb
mov
in
rorl
or
cs
pushf
ret
add
ljmp
test
into
push
xchg
aam
inc
jmp
ret
push
inc
jnp
insb
adc
ja
mov
inc
fcoml
fsubr
push
mov
xchg
cmp
cmp
fldenv
cltd
fs
int3
iret
push
in
sub
jge
inc
sahf
pop
mov
xchg
xchg
mov
dec
fidivs
xchg
and
in
sub
imul
pop
pop
push
pop
adc
jmp
mov
pop
daa
xchg
push
cmp
lea
movsb
jae
outsl
adc
mov
cwtl
push
sub
adc
daa
push
daa
mov
sub
in
ror
test
out
push
dec
pop
js
sbb
mov
cltd
cmp
dec
fwait
xchg
aas
test
push
out
sub
lea
xor
cmp
jmp
mov
or
sbb
arpl
cmp
inc
pop
ret
cmp
fstl
movsl
pop
and
sub
pop
dec
mov
cmp
loop
pop
out
push
es
xor
and
adc
xchg
lds
les
lret
push
int
mov
fmul
xor
sub
pop
fnstcw
in
mov
push
fwait
push
in
aad
sbb
ljmp
dec
aas
cmpsb
loope
lret
ljmp
adc
mov
jg
int
adc
scas
xchg
jo
cltd
xchg
fcomps
outsb
ss
jmp
mov
fucom
xor
clc
movsb
push
jmp
cmpsb
ljmp
jle
pop
inc
xchg
sub
popa
push
fsubs
cmpsb
xchg
push
cmpsb
cmc
mov
jle
or
ds
imul
nop
cmc
sbb
je
jbe
and
sahf
dec
das
xchg
sub
mov
and
neg
in
cmp
lods
lock
imul
lock
pop
sbb
scas
push
push
je
popa
dec
je
mov
pop
notl
fwait
out
test
add
and
sbb
call
in
adc
mov
xchg
xor
cmc
gs
jnp
and
sbb
outsl
pushf
xlat
jl
add
pop
and
sub
test
pop
out
dec
and
xor
pop
push
push
in
xchg
adc
add
jmp
mov
mov
loope
pop
fbstp
mov
nop
int
aam
lcall
insb
roll
dec
jl
pushf
scas
ret
xchg
fs
aam
clc
mov
outsb
imul
sbb
add
loope
fadd
jp
mov
jbe
or
in
inc
lods
and
dec
xchg
ret
bound
stos
or
frstor
sahf
jo
mov
andl
aaa
das
inc
add
test
lret
scas
mov
jbe
mov
sbb
popa
dec
iret
out
aad
xchg
jg
push
cmp
cmp
movsl
das
jge
test
mov
push
inc
and
pop
push
addr16
push
clc
and
sarb
xchg
mov
das
nop
mov
cmp
fwait
xchg
push
xchg
out
lock
pop
inc
fistps
mov
mov
popa
xchg
mulb
daa
arpl
push
les
mov
clc
jg
out
adc
inc
into
xchg
jbe
stos
ret
dec
jg
jmp
adc
repz
adc
js
mov
dec
lea
addb
or
jp
cwtl
mov
ljmp
jbe
clc
xchg
out
leave
jns
in
add
mov
dec
sbb
sub
sahf
or
mov
add
push
ds
sub
and
lds
es
and
mov
or
jp
stos
scas
xchg
jno
pop
mov
pop
inc
mov
pop
push
pop
cmp
outsb
js
pop
sti
xchg
add
sub
push
push
lea
or
push
lcall
push
shlb
xchg
fsubrs
dec
fcmovne
push
push
jns
xor
je
icebp
std
sub
pushf
test
cmp
outsl
jp
xchg
addl
or
fs
dec
jbe
fiadds
jl
push
jl
sub
add
jmp
rclb
cs
inc
sub
sbb
add
out
dec
adc
jo
mov
pushf
and
arpl
repnz
aas
pop
cmp
fsubr
nop
jmp
mov
enter
std
mov
std
leave
daa
insb
sbb
push
mov
movsb
sub
mov
scas
call
xor
call
inc
mov
pop
mov
jle
add
add
cmp
or
sahf
lahf
insb
inc
cli
loop
out
mov
mov
mov
cmc
mov
insb
filds
cltd
pushl
fidivs
jmp
xchg
push
popa
push
inc
add
sbb
rcl
mov
popf
adc
ret
scas
sub
dec
shrb
pop
mov
inc
lea
inc
xchg
mov
adc
jb
and
sub
call
inc
push
decl
mov
mov
cmp
xchg
add
or
leave
cmpsl
mov
jnp
mov
scas
js
cmp
sub
lods
pop
cmp
test
add
jge
adc
cmp
stc
ror
sub
mov
lea
mov
pop
mov
js
pop
int
push
cmp
jl
mov
test
cmp
push
jmp
aaa
add
rcrb
lret
gs
cs
cmc
sbb
pop
add
add
in
aaa
sahf
movsl
jno
xchg
ret
repz
xor
lock
pop
dec
sbb
sti
xchg
insl
add
aam
adc
dec
and
adc
push
test
dec
insl
dec
adc
xchg
mov
ja
movsb
mov
jae
mov
mov
inc
mov
and
call
dec
faddl
cmp
out
dec
imul
mov
ljmp
xor
sbb
lahf
cmp
leave
mov
bound
clc
jp
add
aam
jg
mov
adc
xor
mov
test
nop
iret
adcl
in
inc
sbb
sbb
inc
and
shlb
lea
popf
push
fcoms
inc
cltd
in
jne
ret
fcmovne
incl
out
adc
andl
icebp
repz
ljmp
daa
jge
dec
arpl
lock
push
inc
js
cmp
adc
and
loope
sub
push
mov
call
movsl
imul
mov
mov
insb
jle
mov
dec
sbb
add
push
mov
repz
jg
lea
xlat
sbb
les
xchg
add
mov
cmp
imul
push
mov
add
cmp
test
jge
and
xchg
das
insl
test
js
inc
cmc
cmpsb
or
lret
or
sub
mov
jnp
mov
test
ret
les
jns
movsb
jp
in
mov
sub
sbb
stos
push
sahf
mov
inc
scas
xchg
imul
mov
push
push
jnp
test
das
xor
out
jge
and
dec
jle
sahf
push
cmpsb
mov
dec
stc
ja
dec
fldenv
sbb
push
cmp
scas
xchg
jns
xor
dec
sub
test
aam
in
jg
sbb
hlt
mov
or
and
out
jle
dec
adc
inc
sbb
negb
xlat
cld
inc
xchg
out
orb
arpl
lods
pmaddwd
inc
cmpl
push
les
or
adc
inc
xchg
lret
mov
dec
mov
testb
mov
icebp
int
sub
lahf
scas
js
inc
fcompl
and
aaa
add
inc
ljmp
cmp
mov
stos
fidivl
stos
mov
hlt
adc
or
sahf
cmp
int3
add
dec
inc
decb
pop
fldcw
mov
ljmp
cmp
arpl
pop
sbb
push
pop
adc
es
sbbb
and
mov
std
mov
js
sub
mov
hlt
mov
sbb
sbb
mov
lods
push
imul
out
push
stc
add
sarb
lds
cwtl
cmpsl
push
jnp
sti
icebp
xchg
mov
push
cmp
nop
cltd
outsb
subl
xchg
sbb
icebp
inc
daa
xorb
lods
pop
xchg
inc
fldz
clc
pop
xor
sahf
movsb
icebp
sbb
pusha
int
cmp
test
movsb
mov
fimull
test
push
cmc
fs
mov
jge
push
stc
push
push
mov
and
xchg
stos
out
or
add
lahf
and
into
mov
adc
push
pop
cmp
in
loope
cli
clc
loop
rcrl
hlt
insl
xor
pop
cmp
push
daa
sub
xor
into
cmc
inc
cs
sub
cltd
cmp
popa
jne
cwtl
int3
shll
adc
sub
subl
inc
xlat
loop
mov
out
int3
dec
stos
pop
mov
pop
mov
pop
ds
rorb
or
and
addr16
mov
xchg
aaa
movsb
xchg
mov
nop
test
icebp
dec
sbb
cwtl
mov
cmp
sbb
jge
add
insb
pop
mov
ja
inc
xor
std
dec
pop
test
push
xor
mov
push
mov
leave
lods
das
test
sbb
or
mov
orb
adc
addb
push
xchg
xor
mov
push
and
mov
les
pop
jne
adc
push
stc
pop
test
sub
xor
kmovb
push
xchg
sbb
adc
adc
add
repz
push
popf
lret
and
mov
fs
and
sbb
mov
bound
ds
nop
cmc
mov
mov
fs
es
orb
xchg
mov
pop
shr
mov
xchg
adc
mov
testb
mov
dec
je
adc
cmpsb
ret
jle
rcrl
fidivrs
sub
adc
fsts
cmpl
out
cmp
lret
scas
pop
ret
cmc
stos
test
inc
and
jmp
pop
cmpsl
faddl
pop
add
mov
mov
popa
sub
and
push
xchg
aas
sahf
in
aas
ss
sub
jae
mov
lret
jne
adc
or
arpl
mov
sub
jae
push
repz
jp
jnp
les
pop
sub
dec
push
cmc
and
jl
xchg
inc
icebp
aam
lods
mov
push
add
push
inc
cmpsb
cmp
lahf
scas
neg
or
sti
es
and
sub
xchg
mov
pop
cwtl
data16
push
jno
add
adc
test
sub
cwtl
dec
mov
in
dec
rorl
add
mov
stos
xor
dec
xor
cwtl
push
pop
stos
xchg
inc
or
cwtl
jmp
pushf
xor
inc
mov
xor
jmp
ja
cli
mov
pop
mov
cmpsb
add
loope
push
jno
cmp
mov
in
ret
enter
adc
out
aam
sub
shl
mov
ret
sbb
and
fidivs
jge
sub
inc
and
push
and
sbb
xchg
adc
mov
jge
cmp
icebp
mov
push
adcb
and
mov
lods
clc
repnz
lock
jo
inc
int
sub
pop
mov
bound
xor
scas
mov
cld
mov
ds
xchg
mov
jbe
sbb
push
int3
int
insb
mov
rcr
sub
mov
xchg
sahf
adc
xor
push
cmp
call
jl
sub
adc
and
or
push
test
sti
int3
jb
nop
jmp
adc
icebp
cmp
hlt
loop
jmp
xor
add
sbb
pop
or
or
bound
cli
inc
sti
inc
adc
daa
rcll
jg
push
in
jne
xor
loop
jle
arpl
pop
movsl
in
sahf
mov
mov
in
fninit
adc
sbb
or
jb
lods
push
cmp
inc
lret
dec
xchg
ret
jb
jb
in
repnz
in
and
mov
loopne
cmp
inc
jns
push
xor
cmp
push
xorps
pinsrw
iret
inc
or
pop
lods
sbbl
mov
lods
cmc
fcomps
pop
inc
test
push
or
lock
push
lahf
add
pop
aam
dec
push
lahf
xchg
pop
ljmp
mov
adc
imul
imul
add
frstor
cli
inc
pop
rep
dec
and
insb
icebp
icebp
or
inc
xor
dec
in
or
movsl
jl
dec
push
dec
cmp
mov
aam
mov
add
mov
gs
or
xor
cmp
mov
jnp
mov
leave
adc
arpl
push
jp
shll
aam
lods
jnp
aaa
les
pop
daa
int3
daa
subl
cmpsb
fimuls
inc
sar
sub
mov
mov
into
sar
into
pop
or
and
pop
sbb
daa
xor
adc
pop
dec
cmpsl
push
mov
nop
dec
movsb
paddsw
and
add
aam
mov
scas
dec
repnz
stos
push
call
flds
push
pop
jge
push
test
ret
aam
popf
mov
sbb
arpl
jno
out
sbb
xor
push
sti
or
clc
pop
cli
movsl
nop
push
push
into
rcll
dec
dec
xorb
inc
xor
push
add
adc
mov
pop
dec
mov
imull
mov
movsb
inc
mov
add
pop
aam
inc
push
inc
adc
jp
and
push
xchg
insb
idivb
mov
inc
push
test
outsb
daa
and
xor
shll
pop
test
sub
and
les
popa
push
push
lods
mov
inc
fcomip
adc
mov
dec
pop
iret
in
test
ret
insb
xor
sti
xchg
and
adc
sub
cltd
sahf
adc
fidivl
outsl
xchg
push
lahf
std
andl
xchg
loopne
push
and
cli
rcrl
or
cmp
outsl
jae
shlb
sub
mov
fisttpll
cli
pop
mov
xchg
in
cli
test
mov
insl
push
add
hlt
call
out
push
add
mov
and
pop
cmp
scas
leave
lcall
loopne
loope
lret
pusha
mov
dec
adcb
adc
xorl
filds
cmpsl
ficompl
jecxz
sbb
and
push
add
scas
mov
push
cmc
repz
cmpsb
cmpsl
fists
in
hlt
shll
std
scas
fwait
js
in
cmpb
push
in
mov
mov
pop
add
imul
jle
rcll
or
sub
movsb
mov
sbb
jb
adc
mov
cld
inc
in
jg
insl
clc
rcrl
imul
inc
pop
push
ds
std
xor
outsl
xchg
loope
ficoms
or
stos
pop
add
pop
fldt
es
cs
movsl
lret
lret
adc
dec
sbb
or
xlat
ljmp
push
sbb
adc
xchg
or
add
add
bound
xor
sbb
mov
and
jae
and
insl
jne
inc
lahf
fistpll
dec
stos
jns
out
je
pop
shrb
int3
add
mov
imul
popf
mov
xor
lret
iret
jae
iret
push
mov
sbb
mov
add
sbb
fisubrl
test
ret
and
sbb
mov
pop
inc
addr16
dec
xlat
ret
dec
ret
mov
pusha
mov
xchg
pop
xchg
mov
add
mov
sti
in
lods
daa
xchg
fisubl
push
pop
js
jns
and
xor
dec
jge
pop
inc
inc
mov
test
idivl
push
sub
jns
mov
cmpsb
mov
sub
xchg
xchg
xchg
pop
sub
pusha
outsb
or
pop
push
cwtl
mov
call
dec
mov
xchg
push
roll
insl
cmpsb
loop
and
aad
iret
test
out
nop
jl
js
mov
pop
das
ret
fcoms
repz
stos
daa
push
jmp
fcoms
call
repz
xor
call
pop
scas
stos
cmp
insl
jne
xchg
fcmovnb
in
sub
test
ds
hlt
imull
jg
fisubrs
rcr
outsb
and
push
test
cmp
xor
pop
movsl
pop
mov
dec
sub
das
lret
jns
cmc
sub
jns
cmp
out
xor
inc
stos
pop
pop
pop
cmp
jno
fisubs
jb
fisubrs
mov
aas
push
inc
pop
loope
stos
cmp
fmull
adc
movsl
pop
lea
clc
sub
aaa
sub
out
push
inc
sub
int
es
scas
jb
ljmp
das
mov
test
inc
inc
jbe
dec
pushf
pop
mov
xor
mov
pushf
addr16
cmpsb
icebp
or
jbe
inc
test
pusha
std
sbb
add
mov
std
lds
outsl
push
ret
add
in
loope
insl
aaa
lds
mov
mov
sub
nop
jle
call
xchg
adc
push
xor
xor
movsl
sub
daa
test
mov
bound
dec
inc
cmp
mov
test
adc
sahf
xchg
mov
sbb
scas
outsl
es
fbstp
push
dec
sbb
jmp
cwtl
bound
sub
call
shl
push
stos
outsl
mov
pop
mov
scas
inc
mov
mov
push
sbb
rcr
out
ljmp
mov
out
push
xor
scas
lods
xchg
cli
sbb
in
add
fs
xlat
or
clc
mov
mov
jns
into
mov
dec
and
cltd
addr16
push
xchg
sti
aas
sub
pusha
add
dec
fldenv
les
jge
rolb
xchg
mov
shll
dec
int
test
push
push
cld
aad
and
cltd
jp
test
and
mov
out
ds
cwtl
incb
sbb
hlt
push
add
mov
rorl
sub
sub
xchg
stos
xor
sahf
xor
cli
daa
icebp
loopne
or
inc
xchg
fwait
pop
dec
xchg
imul
dec
shlb
cmp
mov
mov
int
bound
fiadds
lods
sti
mov
mov
in
and
out
sub
sbb
pusha
adc
add
pop
or
clc
adc
std
lea
ret
push
rcrb
iret
pushf
and
scas
iret
sbb
das
mov
sub
das
ja
sbb
clc
sbb
push
movsb
fisubs
jmp
in
cli
rolb
shlb
dec
mov
and
movsl
mov
mov
loop
stc
pop
ja
flds
cli
sbb
outsl
sti
lret
idiv
loop
jle
in
ret
imul
fcmovnbe
or
cmc
stos
cli
and
inc
ljmp
jmp
pusha
and
hlt
adc
in
fwait
push
pop
and
jae
lret
ret
fs
imul
mov
sarl
push
mov
inc
sub
jo
sub
fcoms
and
jg
aad
sub
jg
sbbl
mov
cmp
popa
xor
icebp
aas
nop
push
clc
hlt
push
es
jl
pop
sbb
push
cmp
int3
shl
sbb
adc
mov
daa
out
sbb
stos
sbb
test
shl
and
inc
shr
mov
dec
dec
add
sub
addb
pop
pusha
lods
pop
js
cs
push
jbe
pop
fdivr
mov
adc
aad
stc
scas
daa
push
inc
pusha
jae
insb
mov
nop
repz
and
enter
sti
mov
mov
cmp
push
dec
xchg
jb,pn
movsl
stos
enter
aam
sbbb
sbb
push
lock
cmc
pusha
imul
lock
cmc
sahf
repnz
adc
xchg
pop
clc
pop
repz
call
adc
pop
jne
mov
repz
out
adcb
movsl
clc
pop
scas
shr
dec
cmpb
pop
fcmovnb
xor
pop
call
movsb
cmc
lret
and
pop
or
jp
popa
add
call
arpl
xchg
adc
fs
sbb
fsubl
scas
mov
push
clc
cmp
push
lea
sub
mov
mov
hlt
mov
adc
daa
pop
jge
sub
cmp
mov
pop
outsl
ficomps
sub
test
jne
fwait
hlt
inc
cmp
popa
jbe
sbb
jp
add
data16
push
push
xor
adc
pusha
adcl
mov
add
pop
aam
mov
xchg
outsl
cmp
cmc
test
push
xchg
stos
test
movsl
sub
cmp
add
repz
insb
pop
or
jg
aad
testb
pushf
cli
daa
js
inc
setno
add
subb
out
or
mov
cmp
popf
cs
fisubs
add
mov
lods
cld
push
scas
mov
jecxz
jae
inc
lret
xchg
gs
leave
jge
and
jo
inc
int
inc
shrb
mov
pop
jns
mov
jecxz
arpl
sbb
pop
lret
mov
jmp
mov
dec
cmp
push
sti
imul
or
lcall
ss
adc
js
xchg
jnp
jne
inc
shr
mov
repnz
int
add
xor
jecxz
jae
mov
jne
das
test
sub
icebp
mov
pop
add
push
dec
addb
or
xor
xchg
aas
adc
dec
fstl
and
dec
outsl
add
inc
mov
lahf
sahf
rcll
pusha
cmp
movsl
xchg
lahf
mov
jl
sub
push
push
imull
lret
std
pop
jg
push
rcrl
adc
sbb
ret
mov
add
int3
or
js
dec
and
sbb
fstps
push
lcall
jae
pop
repnz
imul
movsb
push
push
dec
dec
fcomps
enter
sub
jae
push
inc
xchg
leave
add
and
sar
cld
mov
out
push
sub
in
sbb
aam
jns
jmp
mov
test
mov
out
lea
loopne
jmp
mov
jns
xor
imul
sbb
pop
and
fwait
or
add
gs
movsl
pop
stos
icebp
lahf
xchg
hlt
sub
xchg
lods
and
or
lds
pop
xchg
das
push
daa
cmpsl
mov
adc
icebp
pop
lcall
fdivrl
test
or
lds
fisubrs
cwtl
scas
data16
mov
bndstx
jge
rcrl
outsb
jae
xor
aaa
push
and
mov
jne
sub
mov
inc
pop
fstps
cmp
sahf
push
cmp
fstpt
inc
mov
push
lods
scas
pop
add
mov
jo
out
or
out
jecxz
lock
sbb
push
in
stc
aas
aad
movsl
inc
lods
pop
addr16
mov
cs
mov
hlt
popf
inc
push
sub
outsl
cmpsl
loope
jmp
pop
int3
sub
jle
push
adc
xchg
xor
call
pop
out
and
jbe
cmpsb
popf
cmpsb
clc
jne
fs
adc
dec
mov
lret
xchg
popf
pop
mov
pop
sahf
jl
push
rcr
shlb
mov
dec
xchg
mov
adc
cmp
ret
lret
pop
sub
or
mov
or
mov
jle
xlat
fisubrs
loope
fwait
dec
call
or
movsl
shl
xchg
dec
aad
mov
push
pop
inc
push
in
xchg
mov
adc
xor
inc
push
lahf
das
jno
ret
jmp
int
inc
into
cmc
dec
push
dec
jg
inc
inc
fs
cltd
xchg
cmp
jae
xlat
out
mov
cmc
jo
jmp
cmpsb
inc
push
lods
pusha
adc
fsubs
inc
inc
pop
sahf
or
push
inc
pusha
pop
lret
stc
out
insl
cmpsb
dec
out
in
lds
cmp
fmul
lcall
inc
aas
cmp
push
add
or
mov
adc
mov
cmp
aam
bound
ret
fwait
jnp
pop
mov
test
rcrl
lods
dec
mov
mov
out
aas
int3
sbb
fsts
or
adc
jb
mov
mov
fsts
push
push
dec
lock
sub
dec
fstl
cld
fldenv
jnp
add
scas
test
dec
data16
push
dec
push
scas
push
out
les
mov
and
data16
jae
mov
je
xchg
call
jns
lods
popf
aaa
dec
adc
sahf
shll
pushf
icebp
xor
ljmp
movsl
sbb
mov
jne
mov
adc
mov
lahf
das
sub
sbb
xlat
cmp
jmp
push
movsb
push
mov
pushl
movsl
in
jb
push
xor
jno
xchg
hlt
mulb
rolb
insb
dec
call
mov
inc
test
jb
add
xchg
nop
in
pop
inc
mov
sbb
adc
outsb
cmp
sbb
aad
sti
sahf
jbe
inc
ss
xor
nop
cwtl
mov
sbb
shlb
ljmp
and
xchg
sti
stos
scas
jecxz
loop
pop
stos
xchg
adc
dec
inc
mov
pop
popf
sbb
pop
sbbl
inc
shll
inc
test
negl
in
jecxz
ficomps
movb
test
data16
mov
xchg
pop
dec
and
aam
sub
xchg
xor
lcall
mov
mov
jb
enter
mov
mov
sub
roll
pop
xor
loopne
pusha
adc
out
pop
xchg
ljmp
call
adc
std
sbb
js
xchg
sbb
inc
jno
push
jb
jp
ja
leave
jmp
pop
fisttps
fcmovb
lret
sbb
movd
out
pop
xchg
aaa
fstpl
xor
and
mov
lods
scas
and
pop
cmpsl
mov
add
sub
mov
shll
fwait
dec
imul
xchg
negl
adc
sub
enter
inc
cwtl
movsb
mov
ret
divb
or
pop
icebp
push
stc
mov
jl
das
sbb
dec
addr16
or
adc
xor
mov
pop
inc
ret
sbb
out
movl
mov
add
fiadds
mov
sbb
xchg
add
and
push
adc
mov
mov
repz
pop
out
in
pop
leave
in
mov
xchg
sahf
in
ret
lahf
mov
shll
inc
push
lods
sti
cld
cmp
test
jb
or
pushf
lret
jns
insl
dec
or
mov
pushf
sbb
test
pop
xchg
clc
cmp
shl
sub
dec
push
aam
mov
out
out
push
dec
je
mov
lretw
fldt
gs
out
addb
out
test
outsl
cmc
test
out
aad
sbb
jge
push
mov
cmp
or
xchg
push
inc
lret
xor
out
xlat
pop
xor
lea
xchg
mov
push
in
sahf
sbb
jecxz
xor
pop
dec
dec
les
xlat
sbb
test
jbe
pop
ss
lret
and
hlt
xor
fwait
in
mov
add
mov
push
add
sbb
loop
xor
sub
ret
fsub
dec
push
add
int3
cltd
jle
adc
add
mov
cmpsl
fwait
jns
cwtl
in
xor
mov
add
and
xchg
push
cli
pop
out
lret
lods
ret
lods
mov
out
sbbb
repz
mov
incl
inc
stc
nop
addr16
stos
fsubl
faddl
xchg
xor
mov
xchg
add
test
jb
add
test
cli
xchg
es
negb
mov
and
pop
movsl
lods
push
pop
std
push
outsb
inc
ret
xchg
mov
shlb
stos
out
and
cmp
push
scas
dec
testl
fsubrs
xor
xchg
out
mov
fadd
idivb
and
mov
scas
cld
repnz
xor
call
test
loope
sahf
pop
dec
mov
sub
xor
mov
adc
cmp
cltd
lods
fisubrs
dec
divb
mov
enter
sbb
or
divl
pop
repnz
loopne
adc
sahf
lret
gs
or
fdecstp
cmpb
dec
and
enter
mov
jnp
nop
xor
and
and
movsb
shlb
pushl
faddl
rorl
cmp
cmp
shlb
loope
rcl
xor
mov
xchg
or
push
int3
sub
fnstsw
cs
add
and
cmp
jnp
adc
and
lcall
and
daa
js
mov
test
mov
ss
lahf
push
ret
outsl
cmpsb
subl
fwait
cltd
xchg
mov
test
or
cld
inc
pop
sbb
pop
in
aad
fnstsw
mov
and
aam
push
xchg
dec
mov
ds
cmp
and
negb
rcr
rcrl
xor
adc
shlb
mov
int
fbld
mov
lcall
loopne
call
jae
jmp
xor
test
lret
movsl
xchg
push
pop
popf
mov
pop
cwtl
clc
nopl
jne
cld
inc
xchg
out
sti
imul
dec
dec
stc
ficomps
les
sahf
cmp
xor
inc
icebp
inc
adc
jbe
sub
pop
and
push
mov
mov
jecxz
mov
mov
mov
cwtl
lock
stos
cmp
lock
loopne
mov
out
stos
mov
imul
adc
mov
push
inc
pop
dec
and
fsubrs
cli
fwait
ja
mov
rclb
push
data16
xlat
hlt
sbb
outsb
xchg
jbe
loope
imul
aam
push
adc
data16
xor
les
daa
aaa
mov
dec
icebp
xchg
sbb
testb
dec
lret
rolb
jo
xlat
jp
aad
sbb
sbb
jge
cmp
sbb
aaa
add
jmp
jl
repz
mov
lcall
jne
and
ret
andb
clc
mov
mov
imul
jno
add
inc
aas
jecxz
int3
aam
out
repz
in
lcall
sbb
js
push
or
push
js
xchg
jg
xor
fcoms
push
push
mov
pop
addb
icebp
sub
sbb
fisubl
imul
sbb
lahf
lret
lea
jge
xchg
cmpb
xchg
mov
xor
or
cmpsb
jmp
scas
ret
fdivp
bound
sbb
je
aad
repnz
stc
sub
pusha
aas
mov
adc
ror
mov
xchg
and
out
ror
push
clc
xor
pusha
shlb
imul
adc
stos
pop
mov
jb
sbb
ret
mov
rolw
movsb
repz
inc
pop
outsl
call
dec
adc
inc
test
xchg
movsl
ror
ret
in
inc
add
push
jb
cmp
jle
popa
loopne
adc
mov
rcrb
mov
xchg
test
call
add
pop
js
sub
add
add
pop
sbb
test
dec
dec
lret
cmp
mov
cmp
bound
mov
dec
push
add
icebp
jo
xorl
push
test
in
fmull
mov
push
ds
dec
xchg
aaa
dec
insl
sbb
pop
lcall
insl
jmp
add
jb
jg
dec
sbbl
add
into
jb
fdivp
xchg
ret
lret
push
loope
jb
pushf
cmp
xchg
and
scas
and
adc
dec
pop
sub
dec
jnp
dec
insl
pop
cmp
pop
xchg
push
cmp
mov
add
dec
add
add
xor
ret
inc
pop
loopne
adc
sti
cmp
into
push
xor
add
sub
pop
dec
xchg
mov
arpl
scas
inc
mov
mov
mov
inc
movsb
leave
int3
jno
sbb
fistl
and
jno
xchg
fdivr
bound
testl
cltd
or
jp
ljmp
je
inc
jmp
fiaddl
xchg
popf
aas
sub
scas
sub
fcomip
xlat
mov
jbe
xor
pop
push
lods
outsl
xchg
lds
insb
leave
ja
mov
jnp
xor
into
mov
xchg
stos
push
xor
rorb
xchg
mov
data16
or
das
rol
mov
rol
and
ret
pop
cwtl
cmp
add
nop
out
inc
cmovo
jno
pop
jno
jge
adc
imul
or
inc
adcl
pop
sub
pop
movsb
lods
ret
mov
test
cs
jmp
jo
mov
mov
sbb
iret
xlat
pop
movsb
mov
sub
enter
jbe
cmp
pop
imul
pop
fwait
in
je
mov
imul
sbb
cmp
clc
pop
bound
inc
and
test
imul
mov
mov
sahf
bound
pop
pop
pop
or
sbb
add
xor
push
push
fldt
adc
dec
inc
out
outsl
and
xchg
negl
fstp
lds
loop
divb
fadd
add
cmp
mov
adc
inc
xor
rcr
sti
xor
icebp
inc
shlb
mov
fcompl
jmp
dec
mov
je
sbb
aam
pop
jle
scas
xchg
and
sbb
call
repz
inc
sub
lcall
int3
sahf
mov
daa
out
pop
xchg
into
sti
js
dec
pop
je
out
push
mov
pop
sub
add
jp
cmc
sub
iret
adc
dec
push
or
push
repz
out
xorl
xchg
sub
adcl
insl
jl
shr
sbb
jb
loopne
pop
push
daa
lahf
mov
sbb
xchg
sub
dec
daa
cs
mov
inc
repz
int
pop
xor
popa
rcrb
sbb
push
nop
pop
sub
jnp
sub
movsb
push
call
sbb
xchg
in
aam
jle
ret
xchg
ficomps
pop
jbe
pushl
xchg
lds
std
sub
inc
imul
fsubs
pop
inc
mov
movsl
jnp
gs
into
push
pop
out
sahf
lret
inc
xchg
hlt
scas
adc
test
mov
mov
insb
lret
dec
stos
call
inc
aam
aas
loop
dec
or
inc
stos
and
js
and
leave
iret
popf
test
mov
mov
insb
or
xchg
push
test
fstpt
testb
scas
movsb
xchg
cmpsl
cmp
in
adc
lods
or
pop
lea
popf
inc
fistps
les
aad
add
xchg
scas
xchg
sub
jge
inc
jg
and
dec
aam
lods
aad
cmp
xchg
notb
dec
in
lods
pop
roll
test
xchg
adc
xor
mov
add
adc
push
pop
repnz
outsb
fwait
adc
adc
fdivrs
icebp
ret
mov
push
dec
sbb
or
mov
pop
inc
mov
mov
mov
ret
adc
fstpl
inc
shll
push
hlt
jno
xor
sub
sub
xor
adc
pop
xor
xor
sub
in
ja
mov
xor
iret
insl
mov
sbb
sbb
jno
xor
testb
or
stos
rol
lea
cmp
fistpl
lret
sahf
jge
and
outsl
mov
xchg
inc
enter
mov
sbb
inc
fwait
cwtl
or
es
rolb
push
mov
pop
sahf
ficomps
sbbb
stos
int
add
xor
jb
mov
js
aaa
out
add
pusha
add
stc
push
push
fidivrl
or
sub
xlat
aam
hlt
cmc
cld
js
xchg
ja
add
test
push
or
push
jno
jmp
loopne
jp
pop
je
jbe
stos
xor
cmp
add
movsl
pop
dec
xor
test
xchg
pop
das
pop
out
fcoml
mov
xor
and
es
int3
inc
pop
sub
dec
in
pop
fs
push
in
pushl
imul
xchg
stc
loop
cld
jge
lahf
adc
mov
sbb
jbe
mov
dec
add
loope
sbb
insl
sub
ds
rorb
dec
add
aam
insl
xchg
jnp
sub
add
movsl
jb
in
mov
jne
loop
or
test
fdiv
loope
aam
stos
dec
es
add
in
cmp
in
cs
mov
pushf
sub
mov
inc
loopne
stos
mov
ffree
and
ss
imul
arpl
jmp
jg
sbb
cmpsb
mov
or
xor
or
xchg
sahf
out
sahf
dec
in
sub
mov
or
jmp
adc
xchg
data16
repnz
hlt
test
fcompl
ja
jp
jns
daa
outsl
addr16
sbb
lret
mov
cmpsb
ret
out
je
gs
lods
cltd
adc
pusha
dec
inc
out
pop
and
pop
insb
mov
scas
push
sub
cmpsl
and
xchg
insl
pop
mov
mov
push
rcrb
js
dec
test
cmp
dec
int3
mov
notb
iret
subb
jae
scas
popf
xlat
xor
fcmovnu
shr
push
mov
jp
mov
xchg
jp
mov
loop
js
dec
hlt
mov
call
ss
dec
sarl
mov
into
jmp
insb
or
into
clc
pop
js
adc
fidivrl
fisubrs
addl
fidivs
shll
rep
xchg
sbb
cmpsb
push
outsl
adcb
cmp
ljmp
inc
lret
cmp
push
jbe
xor
fsts
mov
push
rclb
jmp
cli
adc
leave
and
pop
and
and
neg
mov
lea
xor
dec
adc
sahf
mov
iret
movsl
push
fsubs
push
mov
into
fdivr
inc
sub
cmp
sti
pop
push
sub
mov
daa
ds
fildl
rcrb
jo
leave
cld
mov
pop
pushf
xlat
xor
cmp
test
sbb
adc
push
push
add
push
dec
dec
in
mov
dec
jge
jle
and
pop
std
push
or
cmpl
pop
mov
insb
mov
add
cmc
xchg
stos
popa
daa
lcall
aam
jns
rcrl
fdivl
clc
dec
mov
xor
sub
js
and
adc
xchg
sbb
test
and
cmp
mov
mov
dec
and
daa
pop
sub
leave
dec
aam
cmp
lret
sbb
xchg
daa
ficoml
dec
push
mov
sarl
jo
mov
lea
push
sbb
imul
fcompl
xor
xchg
mov
jbe
hlt
daa
out
hlt
ja
cmpsl
js
jecxz
dec
aas
xor
aad
sbb
in
stos
scas
xor
mov
popf
cmp
jbe
out
roll
sub
sub
ret
xor
xor
fstps
and
shll
clc
jg
out
test
push
pop
jb
xchg
mov
push
sub
test
movsl
loope
pop
sub
out
dec
insb
aad
add
mov
scas
andb
lea
jno
inc
lock
inc
aam
test
add
or
repnz
das
jmp
lcall
and
mov
lea
mov
or
and
jb
test
jg
lcall
je
pop
push
fistpl
mov
add
clc
int
mov
or
add
pop
mov
add
pop
push
mov
lds
lahf
fwait
test
mov
dec
adc
icebp
adc
adc
rcll
rcr
stos
js
xchg
xchg
or
jle
sbb
cmpsl
xor
inc
jmp
pop
pop
or
and
cli
xchg
xchg
sub
mov
mov
mov
popf
test
or
pushf
data16
mov
sbb
sub
insl
jno
iret
mov
loop
jmp
mov
pop
push
push
mov
pop
mov
mov
sub
aas
sub
xor
mov
popa
sub
popf
cltd
xor
scas
xchg
imul
or
jle
stos
lea
dec
pop
jecxz
in
push
adc
test
xor
rcr
cmp
mov
inc
or
mov
call
pop
ret
cmp
mov
push
shrl
inc
jle
leave
cltd
addr16
adc
int
nop
insb
fists
jmp
negl
xchg
and
cltd
into
les
outsl
mov
jae
xchg
fcmovnu
jg
mov
dec
cmp
lock
cld
arpl
mov
gs
mov
push
sbb
jns
mov
cmp
add
jg
push
cli
push
xchg
adc
xchg
ljmp
or
and
int
cld
lret
and
dec
cli
enter
xchg
adc
add
and
fiaddl
daa
xchg
adc
lret
mov
stc
movsl
or
cld
push
mov
sahf
jmp
lods
mov
ret
sti
mulb
push
jbe
cmp
mov
cmpsb
sbb
insl
jp
sub
pop
int3
sbb
mov
std
add
insb
popf
and
lods
shl
fldt
dec
mov
test
push
dec
ds
lods
bound
xor
pop
push
mov
cld
jae
jns
pushf
adc
loope
stc
xor
lods
sub
lock
aas
dec
cmp
xchg
fwait
adc
sub
das
sub
stos
clc
and
or
cmp
loope
pop
test
inc
sbb
adc
loop
mov
adc
or
nop
shrl
ds
testb
cmp
xchg
jmp
xchg
pop
movsl
inc
dec
or
push
adc
popf
xchg
leave
es
sbb
jcxz
fwait
add
push
gs
jns
sub
push
jp
sub
movsb
fstps
xchg
gs
loop
addb
test
add
jge
xchg
das
adc
and
cmp
ret
pushf
js
repz
push
fsubrl
rorl
in
add
rorl
jo
and
push
sub
jno
ja
add
or
movsb
xchg
test
pop
inc
cmp
neg
mov
mov
adc
pushl
inc
pop
nop
jo
inc
test
inc
pop
out
dec
jecxz
mov
paddb
sbb
scas
cmp
xor
loop
clc
ret
inc
push
or
je
xchg
fmuls
dec
inc
movsl
xchg
dec
pop
push
add
into
add
dec
out
incb
jge
inc
push
mov
pop
dec
add
les
pop
mov
sbbl
subb
xor
mov
xor
mov
shr
lods
sbb
and
fstpt
or
popf
cld
in
lods
jg
mov
sbb
mov
xor
das
fidivl
xchg
jae
jbe
xchg
movsl
ss
jg
xchg
int
insb
scas
mov
outsb
xor
ljmp
sbb
mov
mov
std
clc
cmp
pop
jle
jecxz
push
lea
in
xor
xor
push
ret
fwait
or
mov
popf
stc
cmp
cli
in
in
mov
mov
inc
xlat
jno
lcall
mov
enter
mov
mov
mov
ret
xor
jmp
cmp
jb
sbb
inc
mov
in
lock
add
cmpsb
or
sub
js
es
dec
test
xor
sub
dec
mov
mov
test
mov
daa
mov
aam
ret
repz
out
and
test
xchg
dec
pop
cmp
dec
ja
cwtl
jno
fidivrs
jne
sti
jns
sub
mov
mov
pop
int3
xchg
icebp
cmp
xor
and
push
mov
mov
xchg
movsb
jecxz
add
xchg
pusha
pop
int3
insb
jnp
outsb
push
cmp
push
sub
push
pop
mov
lcall
popa
das
repz
xlat
push
lock
test
sbb
lcall
add
lret
jbe
test
cmp
mov
fidivs
jae
pop
jo
inc
cld
sbb
cs
adc
icebp
cmp
pop
pop
jl
in
add
pop
loop
add
movups
das
cmp
insl
ljmp
xchg
push
and
mov
sbb
movsl
jle
and
sbbb
cmp
inc
push
fstpt
cmp
hlt
adcb
popa
dec
cmc
call
jns
aas
rcll
jge
insb
jo
stc
mov
cmc
sub
sarl
mov
dec
xchg
sahf
in
jns
pushf
sub
popa
push
cmp
pushf
pop
and
mov
test
pusha
inc
sbb
adcl
inc
lret
pop
arpl
data16
mov
cltd
lret
negl
push
cli
jo
jl
mov
jbe
roll
mov
test
shr
std
stc
fcmovb
mov
jecxz
icebp
add
ss
lock
pop
testl
enter
psrad
pop
test
adc
xchg
adc
popf
jecxz
lds
mov
xor
fstps
push
mov
or
pop
iret
test
xor
adc
fucomp
jno
adc
insb
rclb
push
ret
stos
iret
stos
test
sbb
fadd
inc
jns
int
movb
in
mov
test
cld
mov
mov
stos
dec
hlt
pop
push
pushf
jns
les
fistl
cmp
test
ffree
jle
ljmp
push
sub
xchg
addr16
aam
out
cmp
push
sbb
dec
shl
xchg
aaa
lock
xchg
add
adc
pop
pop
popa
xchg
inc
jmp
sub
roll
repnz
mov
stos
rorb
repnz
push
or
jmp
nop
shl
xor
mov
call
mov
fdivrs
out
xlat
adc
pop
movsl
xchg
and
push
les
sub
sbb
imul
popf
data16
push
rcrb
lret
rclb
add
or
inc
imul
xchg
push
cli
xchg
in
rorl
or
out
dec
js
add
in
cwtl
stos
out
xlat
out
test
sub
cmp
sbb
addr16
jo
adc
mov
je
mov
cmp
fdivl
mov
and
aas
hlt
int3
sti
add
jnp
ja
mov
lret
xor
in
ja
imul
inc
xchg
outsb
outsl
cmp
and
or
xchg
loopne
fcmove
nop
ss
lret
sbb
xor
int3
into
push
xchg
mull
sub
hlt
popf
repnz
pop
sbb
add
test
inc
ss
call
cmp
pop
xor
into
mov
lds
cmpsb
movsl
flds
adc
or
xor
cltd
pop
pop
mov
xchg
mov
stc
mov
jg
sti
lret
jno
negb
es
cmpsb
mov
mov
ficoms
push
pop
sti
pusha
test
sbb
test
push
xor
inc
daa
cs
mov
outsb
ja
ljmp
inc
rolb
outsb
jp
or
in
mov
xchg
mov
dec
mov
pop
cmp
jmp
push
or
jge
pop
xor
push
push
xchg
lcall
rorl
jecxz
cmp
cmp
insl
cmpsb
inc
push
push
and
sbb
dec
add
gs
or
icebp
test
bound
inc
lock
or
scas
lock
fbld
bound
stos
fdivrl
xlat
sub
sbb
imul
push
rorl
fistpll
lods
dec
pusha
add
lcall
sbb
sbb
nop
int
pop
adc
pop
stos
mov
cltd
push
lds
xchg
add
sbb
dec
icebp
icebp
push
mov
icebp
jl
dec
insl
or
pop
icebp
jbe
add
xor
and
pushf
fisubrl
mov
adc
sub
cmpsb
pop
pop
jnp
outsb
jge
in
jge
sbb
fsubrp
mov
shrl
mov
dec
mov
push
xchg
xor
pop
lock
cmp
sbb
sbb
add
rcll
lock
outsl
mov
nop
mov
mov
mov
imul
imul
nop
sbb
sbb
fisubrs
pop
add
jns
add
dec
mov
scas
mov
push
push
sbb
cmovns
ja
mov
sbb
mov
jno
mov
xor
adc
ljmp
push
and
aaa
and
je
fisubl
imul
push
inc
jl
mov
xchg
push
int
dec
notl
les
or
pop
sbb
cmp
ret
xor
dec
lcall
sub
mov
repz
or
sahf
or
idivl
negb
mov
jp
in
in
and
push
fcoml
mov
fwait
sub
push
loopne
cmp
daa
sub
repnz
outsl
jmp
xor
sbb
add
or
enter
push
jmp
pushf
fidivs
dec
push
repz
mov
lods
aaa
or
test
lods
or
or
je
cmpsb
loop
lods
fstp
shlb
mov
aam
ja
hlt
arpl
js
repnz
fnsave
incb
or
imul
stc
insl
in
loope
aaa
push
dec
adc
push
and
aas
and
sub
daa
sbb
aas
test
add
popa
arpl
xor
pushf
out
in
mov
push
push
jp
aas
roll
or
inc
loopne
add
nop
mov
cmp
dec
incb
iret
jo
sbb
push
fwait
imul
xor
cmp
insl
sbb
cmp
add
enter
mov
scas
mov
push
xchg
lods
add
lret
xchg
and
jnp
rol
pop
mov
push
out
jecxz
repnz
lcall
adc
cmp
mov
sub
adc
mov
cmpsl
bound
and
push
or
and
stos
xchg
dec
push
jns
loopne
adc
sub
inc
jmp
fstpt
xor
xchg
ss
cwtl
lret
mov
or
inc
sub
in
push
out
jg
stos
in
lahf
clc
dec
fs
push
popa
sub
stc
insl
dec
int
pop
dec
jle
cs
and
add
je
and
scas
push
pop
scas
ja
ljmp
test
loopne
mov
mov
daa
mov
movsb
push
jnp
mov
mov
mov
lahf
inc
xchg
pop
lret
shll
jns
pop
and
push
lods
icebp
std
pop
sub
dec
dec
sbb
inc
lahf
inc
jno
je
int3
out
mov
add
andl
dec
cmpsl
inc
cmc
and
mov
jmp
sbb
cwtl
pusha
loopne
test
xor
xor
cmpsl
arpl
and
repnz
and
and
xchg
andb
test
xlat
bound
incl
fs
lods
out
lahf
add
xchg
mov
mov
and
mov
pop
das
nop
inc
sub
or
js
stos
lock
jecxz
pusha
pop
fnstenv
and
scas
ja
cmpb
in
and
jbe
xor
jp
sub
adc
lds
outsb
test
mov
nopl
xchg
in
dec
jmp
sub
jnp
mov
adc
mov
or
push
push
cmpsb
mov
mov
lea
push
mov
cmpsl
maxps
jne
fdivp
les
mov
shlb
pop
mov
inc
mov
pop
mov
lea
lret
repnz
lock
into
mov
pushf
das
adc
mov
xchg
gs
mov
adc
dec
cmp
int3
sub
ret
and
bound
or
add
adcl
jnp
add
orb
std
insb
cld
fdivp
dec
mov
popa
dec
std
jmp
inc
xchg
cwtl
xchg
ss
push
call
test
add
cmovns
pushf
sub
sarb
mov
test
sbb
mov
pop
aam
dec
mov
xchg
inc
sbb
rclb
lret
sarb
inc
sub
pop
xor
inc
push
inc
pop
mov
mov
mov
subb
push
aam
xchg
inc
inc
lock
push
mov
mov
cmpsl
and
repnz
jb
add
pop
cmpsb
fisttpll
pusha
push
pop
jle
lahf
and
pop
jb
pop
mov
daa
push
sbb
mov
or
aad
dec
arpl
testl
inc
sahf
xor
scas
loope
inc
andb
mov
stc
filds
out
test
push
movsl
into
ljmp
push
xchg
jne
insb
mov
lods
adc
dec
push
cmpsl
mov
pop
cli
daa
mov
repz
jecxz
rorl
hlt
popa
cmp
xchg
lea
or
jg
lock
aad
loop
jp
psrld
xor
mov
push
dec
icebp
sti
push
inc
fisubl
fidivs
mov
andb
repz
fs
cli
cmp
arpl
std
ja
fwait
or
out
or
mov
push
lock
adc
int3
mov
jecxz
aad
xchg
sbb
sbb
lret
sub
add
andl
rcrl
adc
inc
loope
mov
sahf
mov
or
out
inc
mov
pop
frstor
iret
jae
cld
dec
xchg
repz
xor
cmp
dec
stos
inc
pop
jb
adc
out
dec
xor
xchg
daa
cmp
pusha
pop
in
je
jl
xchg
fwait
or
icebp
dec
push
xor
and
es
mov
loop
mov
clc
out
sbb
inc
pop
lock
xor
inc
mov
push
adc
imul
cmp
int
shlb
fs
lret
scas
addr16
jnp
repz
mov
cmpsl
sub
add
aad
imul
in
aad
xor
fs
adc
xchg
jne
fidivl
aas
xchg
mov
repz
mov
jbe
rcrl
add
xor
into
jge,pt
mov
cs
xchg
cmpsb
pop
xlat
jg
add
cltd
fnstenv
and
in
js
push
pop
cmpsb
xchg
scas
or
mov
jecxz
mov
or
ret
or
cmpsl
ljmp
xchg
stos
cmp
int3
xchg
or
fwait
dec
scas
add
pop
shrl
push
lret
aam
in
push
xor
out
sti
jb
push
cbtw
sbbl
mov
mov
mov
lret
ljmp
xor
mov
sbbb
push
mov
shrl
cmp
lahf
cmp
inc
into
inc
or
stos
into
insl
shll
aaa
xchg
aad
popa
adc
dec
ljmp
jno
aam
mov
aaa
insb
or
mov
pop
push
rol
nop
xor
mov
add
jbe
dec
dec
mov
mov
or
dec
stos
stos
movsl
sub
cmp
aad
ja
sar
xor
lret
out
and
inc
add
cmpsl
mov
movsl
push
cli
xor
jne
xchg
dec
cs
lods
cmc
pusha
fwait
je
mov
idiv
add
aas
aad
adc
dec
mov
into
push
push
and
mov
lret
xchg
push
test
lahf
push
outsl
pop
xor
push
aad
inc
mov
mov
fsubs
mov
outsl
and
enter
inc
inc
mov
inc
ja
loope
sbb
bound
fisubrl
cmp
jno
int3
add
cmc
imulb
sti
or
pop
mov
jl
aam
adc
iret
push
outsb
movsl
mov
popa
into
adc
mov
stos
cmpsl
rcll
adc
pop
push
mov
scas
pop
mov
inc
xor
in
add
fwait
lods
jb
xchg
jl
cld
arpl
jae
push
push
push
in
lret
push
push
add
ja
dec
mov
mov
lret
xchg
xchg
mov
dec
fcmovu
pop
cmp
push
sbb
loop
cli
inc
xchg
or
lret
mov
mov
push
pop
inc
cmp
lds
pop
xchg
push
xor
dec
pop
outsl
jl
xlat
lcall
cmc
sbb
daa
mov
or
bound
ror
pop
pop
lock
xchg
or
aas
aaa
in
js
dec
dec
add
paddsb
ffree
sub
push
fucomi
mov
or
cltd
popf
xor
fucom
mov
aad
imul
xor
push
test
push
enter
mov
mov
in
loop
test
adc
pusha
ja
or
cmp
fisubrs
add
dec
jg
je
add
mov
xchg
cli
ja
out
mov
mov
dec
cmc
adcl
testl
std
sub
cmp
xlat
add
fnsave
fsubrl
ds
cli
or
out
ljmp
or
cs
push
cmp
push
cmp
push
leave
cli
out
shr
lods
xor
mov
cld
mov
and
aam
xchg
pusha
xchg
jmp
clc
ss
lock
jl
xor
out
cmp
into
lock
adc
inc
dec
pop
into
scas
lods
outsl
sti
jle
out
icebp
cmc
test
lds
dec
les
out
testb
stc
fisubs
stos
aad
and
clc
in
repnz
or
testl
rcrl
push
arpl
sti
stc
dec
cmp
fisubl
push
arpl
sbb
or
push
xchg
sbb
icebp
test
or
imul
fs
jl
jbe
mov
xchg
mov
aaa
jge
insl
mov
and
dec
or
mov
xchg
or
and
sbb
sub
mov
cs
push
cmp
fsubrl
jmp
xor
mov
fs
jle
and
stos
stc
bound
subl
fmuls
js
enter
lcall
ret
inc
aad
and
arpl
jae
inc
mov
pop
mov
lods
lods
or
call
adc
push
adc
lret
arpl
inc
sbb
movsl
cmp
repz
sahf
scas
jle
mov
add
mov
scas
inc
jmp
cld
sub
inc
andb
test
rclb
rclb
movsl
adc
addr16
mov
loope
pop
mov
repnz
xlat
andb
or
dec
push
fnstsw
pop
cmp
gs
adc
sbb
and
xchg
pop
movsb
int3
nop
stc
dec
sbb
lcall
jne
and
mov
popl
pop
int3
cwtl
enter
cmp
fwait
sub
dec
xchg
cmp
xchg
rcrl
mov
jne
ds
add
jo
push
mov
adc
sub
mov
mov
cmpsl
jae
sti
jg
pusha
loope
sarl
pushaw
clc
adc
adc
mov
ficompl
sub
adc
sti
xor
inc
and
push
das
mov
add
mov
outsl
shrl
shll
xchg
push
xor
push
xchg
sbb
data16
add
cmp
ret
pop
stos
push
sbb
arpl
es
adc
int
das
mov
inc
outsl
movsl
leave
xchg
inc
cs
add
movsb
cmp
les
rolb
and
fmuls
pop
adc
in
add
pop
mov
sbb
add
cmp
add
adc
push
and
mov
inc
bnd
mov
out
mov
mov
repnz
icebp
adc
cs
jmp
and
pusha
xchg
imul
jnp
cwtl
subb
test
mov
jnp
das
dec
into
xchg
adc
shll
in
cmpsl
mov
imul
arpl
fiadds
sub
gs
rolb
cmp
sub
mov
xlat
arpl
dec
pop
lahf
aas
jmp
mov
sbb
sbb
and
jg
xchg
push
mov
sbb
jo
leave
mov
shlb
sub
jbe
inc
into
int
sbb
imul
outsb
fwait
pop
lock
repnz
addl
xchg
dec
xchg
mov
es
jmp
mov
pop
pop
mov
adcl
inc
mov
movsb
and
nop
or
imul
ja
addl
out
xor
xor
fistl
adc
sub
xor
out
mov
sbb
mov
push
pop
and
stc
inc
in
push
xchg
and
sahf
cs
hlt
xchg
int
mov
in
xchg
mov
or
enter
pop
mov
xchg
pop
in
hlt
mov
popa
cli
imul
inc
mov
leave
jne
cmp
stos
sub
sub
xchg
xchg
fdivs
adc
repnz
xorl
adc
lret
push
daa
xacquire
pop
das
push
and
mov
sub
sub
sub
rcr
sbbb
andl
adc
mov
cld
mov
push
and
xchg
cmp
ret
push
into
test
or
iret
and
nop
pop
pop
movsl
cmc
sbb
push
jb
inc
aad
fildl
lret
popa
jns
pop
jne
add
insb
mov
lods
inc
ret
adc
pop
mov
loop
lret
call
mov
js
ror
sbb
or
push
arpl
sbb
push
nop
jge
push
push
jae
pusha
pop
sub
rol
lcall
cltd
mov
jae
std
or
incb
ss
lcall
xchg
sub
or
push
int3
nop
fdivr
lcall
mov
push
jl
adc
out
fs
lea
pop
jbe
stos
push
push
pop
and
add
dec
out
movsl
mov
fistps
insb
icebp
imul
outsb
cmp
mov
mov
cli
das
push
rolb
loopne
mov
in
mov
mov
rorl
xchg
xor
mov
mov
jle
adc
test
mov
cli
sub
cmp
xchg
push
xor
and
cmp
add
mov
jbe
push
xor
inc
add
sbb
scas
xor
xor
das
imul
clc
ljmp
shll
les
push
clc
push
mov
jae
cmp
mov
fs
jae
mov
xlat
sbb
fstps
jo
into
pop
jmp
scas
cmp
mov
cmpsl
and
pop
mov
in
out
hlt
in
push
xor
icebp
outsb
insb
aas
sarb
add
clc
inc
adc
mov
dec
mov
sub
mov
jb
std
jp,pt
pop
jmp
in
and
and
sub
aad
loop
xchg
inc
cmp
xchg
push
sub
repnz
ffreep
jmp
mov
push
clc
add
cmp
arpl
fildll
push
sbb
inc
lea
fsts
mov
and
out
sub
repz
pushf
orb
add
cmp
loope
inc
negl
fstpt
xor
push
and
lcall
inc
int3
xchg
ljmp
mov
cltd
inc
aaa
js
rcll
je
cmpsl
xlat
push
inc
stc
xchg
lahf
inc
push
jge
adc
jmp
mov
sbb
jge
mov
insl
rdmsr
xor
dec
inc
sbb
push
adc
test
add
add
inc
push
lcall
sub
mov
xchg
clc
sub
mov
dec
out
popf
sbb
cmc
cmp
mov
cmp
gs
out
mov
cli
mov
inc
push
inc
loope
cmp
sub
lock
imul
and
push
cld
dec
adcl
daa
les
les
push
jo
shlb
sub
jbe
div
push
jnp
inc
dec
cmc
in
cli
popa
mov
data16
mov
test
ja
in
icebp
in
push
into
movsl
sbb
scas
iret
stos
pop
push
out
mov
popf
mov
sbb
sti
or
cltd
cmc
imul
cmp
repz
or
loope
shl
sbb
xlat
fdivs
sti
lahf
pop
jb
pop
in
loopne
lock
mov
test
mov
call
push
jmp
scas
jg
imul
into
and
mov
sbb
in
je
cmp
xchg
and
push
xor
sub
pop
dec
mov
or
int3
ficoms
push
xor
adc
nop
xlat
mov
cmp
push
or
push
ds
sub
push
xor
cli
popa
cli
pop
and
mov
xlat
sarb
xor
sub
scas
and
xchg
jg
inc
inc
out
mov
into
jp
xchg
jns
push
movsb
sbb
cmpb
pop
xchg
jg
mov
insl
into
xor
cmp
inc
call
scas
mov
stos
cmp
daa
cli
xor
push
xchg
and
xor
xchg
mov
mov
cld
ret
lock
push
in
pop
int
adc
into
add
mov
arpl
or
rol
pop
sbb
rol
pop
pop
pop
in
imul
xchg
add
push
pop
sbbl
sbb
mov
sahf
xor
xchg
xlat
and
sbb
xor
push
cwtl
outsb
mov
xchg
mov
inc
adc
test
icebp
lret
cmp
lcall
cltd
xchg
sub
dec
repz
fchs
jb
xlat
adc
mov
cmp
test
mulb
push
adcb
fsts
jge
repnz
ficompl
dec
pop
das
arpl
mov
pop
push
inc
pop
jge
xor
out
mov
pop
push
jae
xor
and
cli
mov
pop
dec
aaa
sbb
aad
mov
mov
rclb
adc
jge
mov
fnstenv
add
mov
jne
jle
jge
movb
cmpsb
cmc
dec
mov
jl
mov
jo
sti
jns
mov
mov
inc
push
sbb
scas
mov
adc
push
nop
mov
jl
ret
loope
clc
sbb
push
jae
push
dec
test
adc
imul
fwait
scas
fstpl
mov
pop
lret
or
pop
pop
mov
bound
dec
movsb
dec
pusha
imul
out
mov
inc
insb
inc
cmp
addr16
dec
add
jmp
bndstx
loop
sub
pusha
or
ljmp
das
mov
adc
add
jp
out
xor
daa
andb
sub
inc
sbbl
in
fwait
or
stc
loop
jne
mov
dec
sub
inc
stos
push
or
fs
lahf
dec
pop
pop
pop
mov
push
sub
call
xlat
aam
cmp
jne
repz
ds
xchg
ficompl
sbb
dec
leave
call
je
js
inc
pop
lahf
or
inc
mov
inc
adc
jne
lcall
cmpb
inc
lds
dec
daa
mov
push
mov
scas
aam
push
roll
ret
fldl
stos
inc
xorl
idiv
lret
inc
mov
xor
xchg
jo
pop
mov
int3
fwait
sbb
pop
cmpsl
sub
outsb
pop
test
loopne
adc
pop
push
inc
leave
aam
addr16
rcll
jnp
sbb
aas
inc
xchg
lret
push
jne
gs
cmpsb
mov
add
ret
fsubrl
repz
in
sub
or
shlb
or
push
push
jno
inc
clc
push
pop
mov
cmp
jo
bnd
ret
adc
xchg
dec
jne
lcall
jge
cmc
test
inc
insl
ret
out
xor
push
int
xchg
add
inc
jge
mov
xor
jmp
orb
sar
mov
xchg
mov
cmpl
leave
inc
sbb
push
push
sti
dec
leave
xor
mov
adc
jo
movsb
enter
push
pop
shr
jae
cwtl
data16
aas
call
test
push
bound
xchg
add
lock
push
sbb
rcrl
das
cmc
xchg
mov
sub
loopne
or
or
and
xchg
jne
pushf
rcll
sbb
loopne
loopne
or
mov
or
int
inc
cmp
int3
movsb
mov
pushf
jae
sbb
pop
sahf
push
test
fildl
ficompl
sti
pop
jp
fst
lahf
jecxz
pop
and
jecxz
xor
jbe
mov
xor
mov
ret
mov
mov
sub
fisubs
outsb
xor
adc
mov
fmul
or
aas
jno
and
pop
inc
jmp
jno
cs
test
push
sbb
scas
jns
xor
mov
int3
xchg
pop
lret
push
inc
pop
addr16
imul
fiadds
je
out
insl
movsb
scas
and
rcrb
test
out
add
test
and
adc
xor
aas
icebp
mov
inc
bound
mov
jg
and
mov
mov
cmp
in
jmp
fwait
sbb
out
and
ljmp
call
in
adc
out
mov
fst
mov
cld
xor
mov
rorl
cmpsb
out
mov
jb
shll
call
lret
insl
push
fwait
movsl
sbb
sub
sub
stc
and
test
cwtl
lods
xor
cli
dec
jl
add
mov
ret
out
dec
testl
or
mov
jb
ret
inc
and
adc
pushf
mov
mov
ds
js
prefetch
lods
cmpsl
jnp
push
push
lds
mov
push
mov
outsb
pop
imul
sar
adc
pop
test
in
xor
out
or
xchg
in
call
sbb
cmp
arpl
jns
stos
clc
insb
lock
scas
aam
psubd
pop
aas
jo
push
or
inc
rol
mov
ljmp
sub
pop
sahf
xor
ficomps
and
pop
enter
fisttpl
mov
sbb
lods
int3
sub
inc
icebp
mov
movsl
push
test
out
in
xchg
mov
idivl
call
cmpsb
negl
movsl
and
js
sub
data16
ljmp
sti
jl
lcall
stos
stos
jle
mull
lahf
push
adc
cmp
add
xor
imul
aam
mov
int
mov
xchg
and
pop
call
dec
mov
mov
sbb
mov
std
lods
mov
into
inc
jne
sbb
sbb
cmc
inc
push
jmp
inc
jecxz
fld
sub
fwait
mov
push
sub
cmp
add
inc
imul
mov
inc
cmp
pop
pop
or
popf
in
div
ret
xchg
xchg
fldl
sbb
add
imul
add
popa
nop
lahf
lods
fcomps
push
jbe
xchg
or
cwtl
fadds
push
mov
mov
inc
in
mov
dec
jle
ror
je
sub
nop
cltd
out
or
xchg
test
dec
add
add
mov
mov
sbb
ficoml
sbb
xor
daa
push
shlb
rorb
out
sub
ja
mov
mov
pushl
mov
rcl
stos
mov
out
cld
cmp
inc
lods
jno
rorl
gs
cs
mov
shr
mov
adc
dec
sahf
push
push
xchg
inc
lods
add
or
xor
dec
lret
mov
insl
imul
push
je
aas
dec
add
ds
jbe
inc
jbe
xchg
movsb
or
xorb
cmc
mov
mov
lret
cmc
out
dec
and
xchg
mov
xor
fldl
je
push
iret
ret
mov
inc
sub
ss
ds
jo
sahf
jecxz
dec
dec
outsb
cmp
adc
mov
scas
cli
push
hlt
push
sub
jp
mov
das
shll
cmpsl
jne,pt
inc
cmp
int
push
dec
add
mov
mov
fidivrl
lcall
xchg
pop
cmc
xchg
add
fisubs
pushw
mov
insl
sub
sub
sbb
push
loop
and
pop
pop
adc
iret
test
repnz
ja
xchg
push
and
add
sahf
lods
lahf
scas
jl
jg
fisubs
push
xor
adc
out
xchg
mov
in
mov
sub
fsubrs
das
fsubrs
movsb
add
push
insb
imul
test
xor
inc
lahf
stos
pop
rclb
or
pop
stos
into
pop
cmp
dec
out
je
push
test
or
adc
out
mov
pop
stos
dec
mov
fadd
hlt
test
addr16
inc
push
push
jmp
and
aad
in
mov
jp
and
or
sub
push
out
repnz
nop
mov
push
push
add
xor
mov
xor
loope
xor
gs
gs
xchg
jg
jg
xchg
das
sbbb
sub
je
cmpsb
mov
loop
mov
mov
aam
and
cmp
notb
push
scas
out
insl
add
sti
nop
jl
mov
sbb
xchg
push
daa
fsub
fisttpl
cmp
jmp
pop
mov
inc
out
stos
mov
ljmp
jo
pop
es
movsb
movsb
jae
roll
mov
aam
fimull
test
or
mov
icebp
xchg
movsb
pop
orb
pop
and
popl
or
pop
das
xor
and
push
or
mov
addr16
and
mov
mov
xchg
sub
adc
mov
cmp
cli
mov
mov
push
push
jns
sub
push
jmp
mov
data16
imul
and
and
mov
aad
aad
sahf
in
cmp
add
or
stos
push
pop
and
cmp
or
add
add
fmulp
mov
pusha
scas
mov
mov
adc
lret
jge
push
popa
nop
mov
dec
jne
mov
add
lahf
mov
cmp
lret
rclb
fcmovbe
pop
push
mov
enter
scas
mov
mov
out
mov
xor
jae
inc
mov
mov
xor
mov
insl
mov
xchg
adc
test
mov
mov
push
jge
shr
ret
push
lret
push
push
sbb
das
adc
mov
clc
jne
lods
dec
pop
adc
ret
add
int3
daa
cmp
jl
cmpsb
pop
ret
out
sub
pushf
add
lcall
outsb
out
loopne
inc
aad
ss
xchg
cmp
inc
in
sub
cltd
cld
gs
mov
sbb
push
out
loope
adc
mov
xor
test
or
dec
push
xor
xchg
inc
enter
loope
add
inc
cmc
in
out
or
fst
aas
add
sub
into
sbbl
int3
pop
fcompl
add
imul
and
jnp
ret
fs
push
mov
mov
repnz
jge
push
lds
dec
call
mov
mov
jg
std
mov
je
in
into
fimull
pop
mov
lods
sahf
push
fisttps
push
adc
cmp
cmp
and
cmp
clc
test
pop
idivb
pop
sbb
pop
push
push
or
push
fisttpl
pop
lock
mov
jle
and
ja
jp
out
sub
ds
xchg
mov
adc
popa
jle
dec
shlb
jl
sub
jg
aam
mov
inc
jecxz
cmpsb
push
repz
insl
jecxz
addr16
test
mov
lods
outsb
sbb
mov
mov
mov
pop
jne
gs
loopne
cwtl
add
jge
sub
mov
std
sub
push
jge
scas
xchg
dec
lock
bnd
loopne
in
jb
lret
cltd
inc
xor
xor
xor
mov
into
adc
mov
ret
push
test
ljmp
iret
dec
pop
clc
into
pop
mov
sub
outsl
in
mov
pushf
push
and
mov
dec
pop
ret
mov
sbb
mov
mov
cmp
cmpl
iret
dec
test
add
or
mov
dec
jp
push
jle
mov
mov
xchg
outsl
cmp
mov
leave
icebp
cmp
aad
xor
mov
rcl
into
jbe
bound
mov
shl
or
lret
sbb
scas
pop
pop
and
lea
pop
icebp
cmp
test
stos
sbb
pop
jnp
cltd
stos
push
insl
lahf
or
movsb
fmuls
popf
mov
adc
cltd
inc
push
out
aad
and
add
scas
cmp
mov
push
xchg
lahf
pushf
loope
fmulp
mov
stos
sub
sbb
arpl
test
mov
mov
or
mov
ret
insb
popf
xor
adc
or
adc
mov
popf
js
sub
pop
and
or
dec
test
mov
xchg
and
xor
flds
nop
mov
push
orl
inc
cmp
mov
xchg
in
add
loop
jne
fldcw
idiv
mov
push
push
in
leave
inc
sahf
inc
sbb
sbb
dec
imul
push
mov
sbb
shrl
test
xlat
jg
pop
lods
arpl
lret
cmp
push
lods
cmp
test
sbb
inc
fsubrp
push
lea
sbb
sti
add
push
rorl
ret
xchg
inc
out
mov
repnz
jle
mov
fisubrl
cmp
rolb
xor
imul
pop
fldenv
inc
outsl
rclb
pop
mov
or
pop
adc
aas
jle
xlat
pusha
shlb
mov
add
mov
notb
push
mov
mov
mov
cmp
inc
cmp
loope
jecxz
dec
lods
iret
sar
push
or
jb
lock
popa
cmp
sbb
lret
lock
adc
push
and
xor
sbb
mov
dec
out
popf
jo
fldcw
sarb
mov
push
mov
daa
mov
jnp
mov
or
mov
or
inc
cmp
loop
sub
lcall
dec
pop
adc
cmpsl
es
dec
and
xor
fsubs
dec
jbe
jg
jmp
mov
jp
mov
repnz
gs
pushf
clc
sub
xor
xchg
cmpsl
pop
push
in
daa
jmp
adc
aaa
outsb
imul
lock
xchg
pop
clc
mov
enterw
pop
bound
imul
xchg
or
xchg
stc
ficomps
fistpll
in
popl
outsb
ss
pop
test
outsb
or
aas
mov
sarb
inc
push
mov
mov
inc
out
push
push
scas
int
inc
xor
loope
dec
loope
pop
cmpsb
pop
sahf
and
xchg
xor
fistpl
dec
push
mov
fisubs
fidivrs
mov
outsl
pop
cmc
add
out
adc
pop
mov
cltd
cmpsb
ds
rcl
arpl
or
xor
inc
xchg
fwait
mov
sub
gs
xchg
pop
loope
inc
jecxz
pop
mov
repz
ds
leave
ret
fists
or
leave
in
jb
jmp
popf
mov
xor
add
mov
imul
or
bound
fs
outsb
add
insl
cli
inc
mov
icebp
add
inc
xchg
lods
xor
fidivrl
sbb
sub
ffree
gs
into
push
scas
adc
xor
dec
lds
out
incl
lds
sti
in
sub
jmp
adc
ja
loopne
les
and
lcall
jecxz
insb
inc
push
insl
int3
cmp
xor
mov
mov
or
or
xchg
lds
cltd
sbb
or
cld
xchg
jp
js
das
in
ljmp
add
arpl
aam
cwtl
adc
adc
pop
push
fdivl
push
shll
std
jb
mov
push
addr16
inc
mov
aam
loopne
ljmp
lods
xchg
jecxz
lret
mov
out
xorl
mov
rorl
shrl
pop
add
xchg
and
add
das
cmp
rcrb
push
mov
push
and
xchg
push
in
xchg
fsubrp
lcall
jno
clc
sbb
popf
and
cmc
out
sti
adc
pop
out
mov
jbe
ds
jno
pop
cltd
cli
ja
pop
fsubs
add
call
and
xor
sub
xor
xor
pop
arpl
inc
sbbb
xor
or
jns
and
sahf
mov
test
and
scas
push
iret
pop
push
les
pop
adc
pop
int
push
lahf
xchg
aaa
sahf
xor
fiaddl
fs
xor
xor
adc
in
sub
sub
nop
out
and
int3
lret
adc
dec
repnz
je
pop
lret
jl
lcall
dec
into
mov
das
fwait
mov
sbb
adc
cmp
push
push
jp
mov
sub
cmp
movl
pop
xor
stos
jno
cmpsb
shrl
xor
add
test
sbb
test
mov
push
jmp
and
cltd
or
sti
rorl
mov
pushf
cltd
lcall
sbb
mov
pmovmskb
mov
shrb
cs
filds
jge
std
lods
mov
cmp
icebp
pushl
xor
scas
insb
outsb
arpl
sub
adc
sub
test
jl
push
movsb
sbb
pop
or
jns
push
loopne
in
adc
test
ret
pop
push
repnz
negl
ret
cmc
sub
repz
xor
push
dec
sarl
in
cld
and
rcrl
push
sub
stos
mov
fcoms
imul
mov
and
lcall
dec
or
lds
insl
push
mov
repnz
and
jp
std
cmpl
mov
jge
mov
sub
ja
mov
cmp
push
mov
xchg
pop
cmp
xor
pop
pop
hlt
xor
mov
pop
xor
adc
shll
push
pmulhuw
mov
mov
xchg
xchg
pop
pop
test
ljmp
pop
mov
inc
lahf
sbb
in
fsubs
aas
dec
xor
mov
roll
in
aaa
mov
fidivrl
inc
loope
scas
jp
adc
fs
subb
mov
pusha
loope
push
push
int
mov
hlt
das
aaa
and
das
int3
xchg
out
jo,pn
rep
cwtl
sub
xor
imul
xlat
add
das
sub
sub
xchg
jae
jl
jle
mov
push
jno
insl
jecxz
or
ds
xchg
imul
into
inc
fisttpl
imul
push
test
mov
enter
clc
sbb
sbb
lahf
int3
js,pt
jns
cmpb
xchg
jecxz
scas
jcxz
and
push
cmp
divb
call
es
fadds
mov
mov
mov
lods
daa
outsl
push
lods
sub
test
std
sub
lcall
loopne
mov
adc
shlb
mov
mov
test
inc
adc
aad
push
aam
pop
fmuls
mov
xor
xchg
imul
ret
outsb
xlat
mov
sbb
inc
and
xor
fwait
pop
out
arpl
or
mov
sub
ud0
mov
outsb
add
cli
push
aas
int3
stc
sub
ds
mov
push
adc
nop
fst
pop
jno
pop
lahf
xchg
and
inc
loop
xor
lahf
mov
mov
sub
dec
adc
xchg
filds
sahf
or
insb
mov
mov
mov
and
xchg
lret
pushf
data16
stos
imul
jecxz
or
mov
dec
fadd
dec
dec
arpl
es
out
cmp
ljmp
inc
xchg
or
mov
hlt
test
lcall
push
test
movsl
or
lret
mov
dec
or
pusha
jp
push
sub
inc
push
dec
or
mov
adc
loopne
xchg
pop
mov
mov
je
dec
loope
sub
bound
sub
mov
das
shrb
fnstenv
xor
sub
push
rolb
push
cmp
push
push
jns
cmp
stos
jno
push
jmp
lea
inc
mov
mov
out
sahf
and
addr16
push
push
int3
loop
dec
cmpsb
fidivs
mov
movsl
dec
push
fsubr
lfs
jp
push
cltd
add
das
or
pop
repnz
inc
mov
xchg
sub
dec
shll
pop
ds
in
outsb
mov
hlt
xor
negb
jae
out
clc
mov
scas
rorl
mov
mov
imul
jle
xchg
mov
mov
and
pop
in
push
stos
mov
pop
stc
lds
in
dec
loopne
sbb
cmp
inc
or
mov
imul
jge
push
or
xchg
push
cld
clc
xor
push
imul
imul
sub
xchg
pushf
out
sbb
test
mov
cmp
ss
jge
dec
xchg
push
roll
mov
xlat
pop
push
cmpsb
mov
xchg
dec
pop
mov
call
pop
add
adc
bound
jg
loopne
xchg
dec
mov
lds
pop
xor
ret
mov
or
movsl
mov
push
rcrl
xorb
push
dec
aas
mov
and
sub
jg
xor
insb
dec
push
add
dec
or
or
mov
ljmp
pusha
pop
xor
test
cmc
inc
push
mov
cmpl
mov
dec
bound
clc
pop
xor
mov
cltd
sub
popf
push
sbb
fldl
test
pop
inc
cmp
jmp
mov
test
rolb
cwtl
fsubrs
push
jb
je
fmull
lret
in
add
and
out
mov
jb
in
fwait
cltd
aaa
xor
mov
test
dec
into
xor
xor
addr16
pop
adc
outsl
xor
fnsave
in
pop
xor
mov
ljmp
pop
sub
in
pop
fs
mov
adc
in
clc
cmpsb
jecxz
addb
ja
jmp
imul
out
cmp
xor
pop
icebp
or
mov
inc
loop
add
aad
in
mov
cmp
addr16
cld
dec
sub
ss
add
inc
sub
mov
xchg
mov
scas
scas
test
xor
out
clc
in
in
jecxz
push
leave
fwait
xchg
scas
arpl
aad
xchg
mov
push
pop
sbb
cmp
mov
mov
push
test
xchg
pusha
add
les
push
push
stos
jo
sbb
leave
ja
push
push
shll
call
in
lds
std
jl
outsb
mov
inc
in
ja
add
std
les
inc
sahf
sti
aaa
out
in
adc
outsb
lcall
leave
rcrl
xchg
lds
ja
xorb
ret
mov
sbb
mov
xor
adc
addr16
nop
jge
sub
inc
sub
xor
sub
divl
addl
lock
cs
sbb
pop
lret
pop
lcall
cwtl
cltd
and
and
lret
scas
clc
pop
mov
jb
mov
jo
push
push
pop
xor
in
imul
cmpsl
ret
cmp
mov
jb
je
imul
push
cld
ret
pop
int
xor
push
xchg
xor
imul
leave
mov
and
sub
cli
mov
int3
xor
pop
orl
test
fcoms
aaa
jnp
pop
pushf
mov
add
inc
ss
in
fmulp
fldcw
in
addb
icebp
das
inc
adc
cmpsb
or
jg
sbb
inc
sub
or
out
popf
stc
xor
mov
in
cltd
sbb
jb
inc
jo
mov
pop
pop
lret
lret
stos
mov
sbb
loope
pop
push
stos
aaa
mov
bsf
popa
lea
jle
adc
addr16
push
lock
xchg
in
rcrb
or
ja
inc
dec
outsl
add
push
jbe
mov
cmp
jl
sbb
cltd
and
dec
or
push
mov
das
test
push
inc
pop
ja
mov
add
inc
repnz
sub
aad
add
xchg
pop
cmp
movsb
pop
and
xor
pop
sbb
mov
mov
hlt
and
push
nop
mov
and
fldenv
cwtl
scas
inc
sbb
mov
daa
cmp
mov
mov
mov
push
insl
xchg
out
rolb
jge
add
fucomi
xor
pop
push
push
lods
pop
add
scas
mov
and
icebp
adc
mov
mov
in
outsl
aas
bsf
dec
sti
and
push
cmp
dec
in
shll
sub
cmpsb
jmp
test
xor
pop
xchg
mov
scas
loope
lret
push
add
inc
in
je
sub
and
cli
imul
fs
sbb
pusha
mov
je
rcrl
or
dec
into
aaa
push
inc
lds
xchg
notb
pop
jno
jmp
test
bound
inc
pop
or
xor
fcmovb
popa
fistps
xchg
loope
loop
push
stos
mov
push
push
in
test
lods
out
jae
test
imul
pop
sbb
mov
xchg
movsl
stc
xor
stos
xor
enter
pop
cli
jbe
push
arpl
dec
push
stos
push
xchg
ljmp
jg
lock
pop
ficomps
mov
dec
pop
ret
dec
outsb
or
adc
inc
pop
rolb
or
push
call
outsl
iret
xchg
push
call
pop
lea
lret
into
cmpsb
sbb
or
insb
xchg
loop
leave
push
loope
and
mov
popa
fldt
sub
sbbb
add
push
jp
jmp
aas
clc
repz
adc
dec
add
push
mov
stos
push
sub
push
andl
gs
and
inc
pop
mov
add
data16
or
fidivrs
lock
add
inc
cli
push
or
mov
rolb
jl
jb
xchg
cmp
data16
and
xchg
int3
pop
sbb
rcrl
adc
pop
sarl
mov
mov
bnd
dec
xchg
ss
insl
int
enter
adc
dec
iret
inc
repnz
insb
in
imul
dec
jae
mov
pop
test
scas
mov
mov
icebp
in
pop
adc
sub
sbb
push
sub
data16
and
shll
pushf
mov
outsl
push
mov
sbb
mov
lret
popf
cltd
pop
dec
adc
mov
rorl
or
loopne
cld
pushf
adc
ss
add
mov
les
adc
mov
dec
outsb
nop
mov
repnz
jbe
in
or
dec
shlb
dec
insb
mov
mov
stos
fld
fdivrs
adcl
dec
sub
inc
fs
enter
adc
mov
and
inc
clts
mov
lret
jae
mov
incl
cmp
test
cmp
mov
test
cltd
stos
test
pop
dec
mov
mov
incb
mov
shrl
sub
inc
and
and
mov
shrb
dec
and
or
out
lfs
imul
xchg
nop
jb
les
addr16
rcrl
adc
xchg
xlat
ljmp
shll
or
xchg
mov
dec
or
add
lret
mov
push
idiv
adc
inc
xchg
mov
sbb
sti
dec
jnp
jb
fcomps
cmp
mov
jp
int3
mov
enter
std
or
add
xchg
adc
xchg
mov
mov
dec
jmp
push
clc
xchg
icebp
sahf
out
sub
fbstp
stos
fisubs
les
test
lahf
mov
popl
push
lcall
sahf
or
repnz
mov
or
inc
cmc
xor
stos
mov
xor
nop
shll
sub
sub
in
jg
dec
inc
adc
fsubl
imul
pushf
inc
loop
push
shl
dec
ja
mov
mov
je
mov
out
sub
push
cmpsb
jg
xor
push
fwait
xchg
and
pop
scas
push
cmp
pop
loopne
cmpsb
inc
add
mov
movsl
subb
rcrb
add
push
xchg
lods
dec
sub
dec
or
rcrb
push
jno
sbb
js,pn
add
clc
dec
adc
ficompl
adc
push
lcall
shl
xchg
lock
adc
or
and
push
fs
enter
nop
and
pusha
adc
shrb
sahf
or
mov
cmovl
loop
dec
mov
loopne
sti
scas
popf
in
mov
repz
xchg
call
add
mov
or
xchg
je
lea
pop
imul
mov
aaa
add
jmp
push
xchg
or
mov
shll
jmp
jl
repnz
pop
mov
call
cli
or
dec
js
xchg
push
jecxz
lret
dec
in
cmp
stc
mov
jns
push
mulb
ret
mov
cltd
push
fimuls
cli
pop
add
cmp
enter
pop
fimuls
test
and
sbb
add
sbb
ljmp
icebp
ret
cwtl
das
or
cmp
cmpsl
icebp
xor
scas
fs
andb
sub
mov
or
insl
lods
xor
mov
fst
jecxz
aam
cmpl
xor
shll
and
inc
out
xchg
pop
roll
inc
in
pop
insb
mov
imul
pop
mov
ret
addb
fmull
aad
outsl
cli
movsb
sbb
xchg
push
push
jmp
cli
pop
int3
and
cs
xchg
add
fdivp
xor
inc
xchg
cs
jl
insb
mov
jecxz
icebp
dec
push
jp
or
stos
push
movsb
sbb
push
int
out
pusha
xor
adc
call
xlat
sub
addl
adc
push
jno
or
add
inc
mov
cmp
xchg
daa
leave
je
push
test
xchg
xchg
imul
pop
std
test
add
adc
mov
imul
xorb
mov
into
xchg
pop
or
std
dec
lds
jo
inc
mov
aas
out
add
sub
clc
push
mov
lret
arpl
pop
popf
inc
mov
sub
and
mov
ds
and
or
push
inc
cltd
dec
sub
dec
mov
inc
stos
inc
adc
loop
ror
int
dec
insl
jne
repnz
mov
mov
dec
pop
or
lods
mov
lock
dec
inc
ljmp
jo
bound
iret
jbe
jg
sbb
scas
aad
xchg
add
adc
rcrb
or
dec
inc
and
mov
mov
out
and
push
sub
push
iret
cs
out
fsubr
push
push
push
jle
xor
and
jbe
cmp
repnz
push
sbb
icebp
add
mov
sbb
sub
sbbb
iret
leave
rclb
das
daa
pop
aaa
mov
and
pop
xor
mov
je
mov
jl
ljmp
sub
outsl
pop
sbb
xchg
pop
mov
daa
mov
rolb
pop
push
or
ss
push
mov
fcomip
call
sub
push
mov
mov
mov
negb
pop
test
jnp
mov
mov
lcall
roll
jmp
pop
into
add
inc
out
and
arpl
push
dec
adc
add
dec
ror
pop
cmp
adc
jno
fstpl
aas
mov
pop
and
test
and
imull
or
sbb
dec
lods
fdivr
mov
js
mov
in
push
xor
in
mov
subb
clc
and
cmp
cli
jle
mov
jle
cmpsl
sbb
popf
pop
pusha
or
adc
outsb
arpl
das
sbb
push
jae
popf
fs
sbb
mov
ljmp
cli
or
cmpl
xor
xor
add
pushf
in
les
sahf
mov
test
rcll
nop
inc
outsb
mov
mov
iret
sbb
ret
cmp
cmp
sub
push
aam
test
mov
cmpsb
and
xchg
addr16
ficompl
sbb
loope
mov
sbb
xor
movsb
test
sub
js
dec
and
lods
fwait
and
mov
repnz
jecxz
adc
mov
nop
test
shlb
pushf
fisubs
pop
cwtl
daa
test
pop
push
rclb
inc
loope
je
std
push
or
sbb
sub
mov
xchg
jge
push
call
sahf
mov
jp
jecxz
sub
fcoms
jmp
rcrb
fisubrl
mov
push
lret
in
xor
jnp
xchg
cmpsb
negb
xchg
dec
inc
push
jmp
pop
aaa
stc
inc
in
aas
fs
cmp
xor
les
ret
mov
mov
insl
push
test
cmp
xor
mov
push
mov
pop
iret
jb
push
jp
or
subb
cmp
push
out
sub
test
inc
int3
cmp
inc
cmp
scas
sbb
cmpsl
scas
das
sub
cmc
mov
lods
std
rclb
cmp
aaa
test
xchg
pop
dec
test
lock
or
dec
addb
sahf
dec
pushf
das
dec
test
shlb
ret
add
les
imull
or
lret
push
or
inc
das
aam
iret
stos
pop
pop
icebp
popa
mov
xor
mov
pop
les
and
xor
jg
scas
mov
dec
adc
pop
add
cmp
adc
or
repz
ret
dec
jmp
fwait
push
fists
jg
leave
cmp
or
or
in
and
nop
mov
repz
pop
mov
xor
mov
xchg
mov
test
pop
xlat
fmuls
aam
mov
xchg
xchg
into
mov
in
jp
cmp
pop
xchg
jb
mov
daa
sbbb
movsb
aam
inc
in
mov
mov
shrl
outsb
pop
dec
cwtl
mov
std
add
inc
jmp
cmp
cli
lret
out
lret
add
xlat
scas
gs
mov
movsl
or
sub
test
xchg
dec
int3
xor
outsb
push
xchg
js
adc
adc
jmp
int
xchg
test
inc
test
jecxz
sbb
aas
and
jnp
addr16
lret
cmpsl
mov
push
outsl
add
shll
int
or
es
popa
sbb
xchg
xor
loope
sub
jmp
push
loopne
daa
les
push
imul
pop
sub
xchg
insl
xchg
xor
xchg
mov
pusha
jae
xor
ss
int3
push
xchg
adc
scas
scas
lcall
xchg
jns
subl
ret
mov
inc
pop
out
ss
and
cmp
dec
dec
cli
adc
shll
pop
ss
out
notl
add
outsb
or
jno
mov
ja
sbb
cmp
popa
or
mov
adc
insb
lods
pushf
es
cli
mov
lods
mov
pop
push
inc
dec
pop
es
les
add
push
pop
jo
cmp
cmp
inc
lcall
imul
and
test
add
xchg
and
out
cltd
loope
imul
sbb
rol
cli
cmp
pop
inc
push
ret
inc
fwait
push
enter
movsl
xor
mov
and
fcompl
xchg
shrl
mov
icebp
xor
xchg
ja
or
adc
mov
loopne
aas
cwtl
pop
ret
lcall
stos
inc
shlb
jmp
inc
pop
jle
mov
lock
pop
and
cmpsb
adc
aam
rclb
inc
dec
push
push
fisttpl
adc
in
push
bndldx
adc
cltd
out
jg
popf
mov
push
cmp
jmp
jecxz
int
push
cwtl
shll
popa
insl
les
nop
mov
mov
add
aad
lds
das
das
cmpsb
adc
movsb
jbe
loope
mov
mov
xor
mov
jl
or
in
mov
pop
sti
lods
mov
shlb
repz
cmc
test
mov
dec
push
jb
out
mov
dec
mov
add
mov
inc
repz
fistps
in
out
pop
fisttpll
pop
leave
adc
sub
test
outsb
sub
sub
push
out
lods
insl
fwait
cltd
out
mov
shr
push
clc
pop
fstp
mov
lock
or
fiaddl
adc
mov
jo
push
sbb
cmp
rcrl
mov
aaa
jp,pt
imull
sbb
fidivl
sub
repz
cmc
fwait
adc
sbb
jb
decb
mov
jne
hlt
xor
jo
std
scas
push
out
iret
ds
mov
add
stc
mov
leave
pop
xor
pop
jnp
add
movsb
mov
adc
ret
into
orl
cmc
div
cld
sub
aad
add
out
fstps
jno
inc
push
aad
out
aas
scas
cmc
aas
and
sahf
mov
cmp
and
mov
push
mov
push
stc
mov
out
push
lea
xor
or
inc
xchg
scas
pop
dec
testl
xor
nop
xor
rol
movsl
fcompl
nop
loop
sbb
mov
mov
call
fildl
sti
pop
ret
mov
mov
xor
jg
repz
inc
repnz
sub
mov
in
dec
sub
cmp
mov
insb
mov
push
mov
mov
insb
ja
ja
andb
mov
movsb
xchg
mov
icebp
loope
movsb
jle
in
lea
fcomi
lds
aad
leave
stos
in
cs
mov
pushf
pop
jo
cli
loopne
xor
cli
test
add
cwtl
aam
aaa
cmp
xchg
pop
sub
mov
das
ja
sub
pushf
iret
repnz
jmp
dec
jmp
mov
imulb
dec
gs
cld
cmc
mov
lahf
jp
fs
mov
mov
outsl
fwait
imul
and
in
loope
dec
daa
add
das
movsb
pop
fstpt
mov
push
jecxz
mov
out
test
push
jno
cmp
mov
lds
jno
fisubrs
lods
sbb
jno
and
das
pop
ret
into
inc
cmp
ficoml
setns
push
lock
sub
lahf
iret
pop
call
cld
xor
mov
mov
xor
divb
imul
mov
xor
hlt
xor
jnp
movsb
in
das
cmp
inc
ds
aam
pop
lock
dec
xchg
xor
test
xor
inc
ret
or
out
pop
jnp
test
test
mov
push
jmp
test
jg
fwait
les
adc
ret
xlat
mov
daa
rcr
mov
mov
sub
lret
sbb
iret
lcall
push
popa
xchg
sub
pop
insl
xor
or
lods
sub
inc
pop
jnp
mov
inc
js
jmp
push
cmp
add
shrb
iret
jae
inc
xor
in
cmp
out
adc
ljmp
int
aas
sub
inc
jne
push
pop
jnp
mov
int
aaa
pushf
mov
sub
scas
popf
mulb
ret
int
pop
push
mov
xchg
mov
sub
adc
add
inc
sub
jp
add
cmc
jmp
dec
jl
mov
and
iret
push
mov
frstor
cwtl
fwait
iret
dec
ret
pop
fwait
loop
insl
lahf
fldcw
pop
mov
stc
roll
call
jns
adc
jle
jae
out
adc
lds
push
cmp
xchg
adcb
mov
sahf
push
mov
mov
sti
xchg
rorb
orb
ljmp
xchg
enter
int
in
xor
pusha
dec
leave
sub
cmpsb
sub
mov
lea
cmc
jle
test
popa
lods
xorl
and
dec
inc
pop
mov
fwait
inc
or
aad
leave
dec
inc
add
dec
and
cmp
lods
xchg
in
lods
jl
lcall
inc
fwait
add
daa
lods
cmpsl
loopne
xor
mov
fdiv
xchg
jno
fwait
inc
or
dec
xor
leave
lcall
add
gs
jo
testl
inc
sub
into
cmp
push
test
inc
sbb
ss
push
pop
movsl
aad
jne
in
adcl
cmpsl
pop
or
aas
outsl
inc
fucomip
dec
daa
das
stc
jnp
adc
xchg
test
call
and
sub
rcll
bound
pusha
mov
cmpsb
jmp
adcb
xor
mov
push
dec
iret
xlat
mov
adc
std
daa
inc
aad
into
mov
iret
jbe
ret
bnd
adc
cmpb
imul
inc
jge
cs
cmp
sbb
outsl
inc
or
pop
je
scas
sub
jmp
movsb
ds
jnp
dec
mov
inc
inc
pop
rcrl
jge
cmp
lret
push
lock
aad
jmp
cmpsb
mov
ficomps
inc
xchg
push
in
jae
cld
fldenv
data16
in
aad
fucomi
movsl
lea
mov
fwait
adc
sub
addr16
xchg
dec
xor
inc
mov
lods
jecxz
iret
stos
xchg
sbb
fsubrs
sbb
mov
jno
bnd
add
and
push
xchg
jg
sahf
inc
imul
jg
lcall
jmp
iret
arpl
inc
test
popf
dec
xor
outsb
push
out
add
mov
mov
roll
and
call
or
dec
out
xor
pop
mov
push
and
test
mov
push
xor
leave
mov
in
imul
or
bound
and
jg
or
hlt
and
sbb
aad
sbb
add
jge
cmpsl
mov
xor
outsl
shlb
mov
jnp
jnp
or
fadds
call
out
cli
outsl
add
or
cmpsb
out
outsl
out
xchg
es
sub
pushf
pop
int3
dec
xchg
push
mov
push
xor
xchg
or
inc
rorl
rclb
dec
stc
aas
or
push
sub
sub
imul
cmp
sub
cli
shlb
cmpsb
cmpb
mov
test
mov
pop
or
and
ljmp
addr16
ret
inc
jb
pop
mov
mov
subb
sub
xor
push
and
and
rcrl
dec
pop
hlt
dec
fsub
je
add
subl
or
mov
mov
xor
pop
leave
push
loop
lea
push
inc
cld
loopne
les
mov
hlt
cmp
inc
cld
out
insb
ds
das
dec
int3
and
push
into
outsl
push
popf
dec
jecxz
cmp
jmp
and
cmp
mov
or
mov
mov
clc
lret
ficompl
or
adc
out
mov
mov
test
stos
mov
test
mov
bound
out
xlat
rorl
jne
bnd
ljmp
neg
jnp
cwtl
or
scas
inc
outsl
jo
sub
push
mov
or
xchg
mov
add
in
and
fbld
lock
and
stc
xchg
add
movsl
lock
pop
jns
adc
and
pop
mov
mov
movsb
mov
jbe
cmpsb
sbb
les
cs
dec
cltd
std
into
mov
mov
scas
inc
loopne
push
test
mov
setl
mov
inc
pop
adc
std
cmc
mov
cmp
stos
iret
mov
cmc
cmp
in
lds
popa
inc
pop
and
rcrl
cltd
ret
add
cltd
mov
je
shr
lods
jl
xor
pop
arpl
in
pop
jle
je
daa
add
pop
push
or
add
mov
ret
xchg
jmp
imul
loop
into
xchg
ss
cmp
daa
pusha
cli
xlat
movsb
pop
fiadds
int
cmp
xor
out
dec
add
lds
and
incb
xorb
mov
xchg
mov
movsl
imul
push
cmpsl
repz
dec
aas
add
add
frstor
inc
push
inc
cs
xchg
lahf
or
inc
jge
xor
ds
aas
xchg
mov
data16
mov
es
lods
mov
sbb
lock
imulb
jns
and
xchg
icebp
lods
push
cmp
stos
sub
mov
aad
out
ror
gs
or
popf
stos
xchg
popa
inc
js
push
jbe
sub
aad
imul
mov
inc
ret
repz
mov
lods
out
jnp
mov
or
sub
sub
sbb
sbb
sbb
iret
mov
mov
mov
jle
imul
inc
mov
or
incb
jb
adc
cmc
loope
shrb
adc
addb
add
ds
cmp
aaa
and
lods
dec
mov
cwtl
ja
or
sub
xchg
jge
jmp
mov
cld
pusha
pop
arpl
iret
aas
test
add
and
add
xor
mov
leave
inc
sbb
mov
rorl
sub
scas
mov
adc
or
ja
cld
test
xlat
popf
sti
bound
test
je
or
inc
pop
out
decb
shl
pop
movsl
push
jae
cmp
lds
xlat
adcb
dec
arpl
dec
pop
in
idivl
sbb
out
inc
cwtl
pop
pop
xchg
jns
jl
ja
leave
scas
int3
test
call
jbe
mov
lcall
sub
inc
fildll
jae
in
add
pop
mov
push
mov
pop
inc
nop
flds
dec
ror
cmp
pusha
popa
lret
jbe
jb
xchg
lds
loope
lds
add
or
mov
mov
jbe
mov
shr
xchg
decl
pop
lds
mov
sub
lods
imul
adc
push
daa
pop
addl
bound
pop
mov
fiadds
dec
sbb
jl
andl
pop
pop
lods
push
push
out
fcom
mov
loopne
fldt
pop
add
push
iret
sub
lss
mov
xor
cmp
mov
sbb
call
mov
stos
push
pop
push
popf
mov
xchg
xchg
stos
stc
hlt
sub
mov
ret
ja
call
cmp
cld
dec
sti
dec
fidivs
dec
movsl
mov
adc
add
mov
inc
loopne
dec
jo
leave
fiadds
add
lods
cmc
jle
dec
cmpsl
mov
dec
mov
or
pop
paddw
out
fcmovu
push
mov
push
fwait
sbb
dec
jae,pn
das
adc
xor
aaa
mov
bound
test
cwtl
mov
pusha
in
mov
imull
sub
push
sub
das
inc
add
idiv
mov
std
cmp
mov
adc
pop
jmp
mov
dec
pop
pop
mov
xchg
ffreep
xchg
sbb
repz
xor
inc
fistl
loope
inc
xor
sbb
popa
or
xchg
es
adc
mov
inc
leave
arpl
adc
stos
cmp
ret
insl
popl
ucomiss
jno
testb
call
cmp
repnz
cli
cld
pushf
mov
ljmp
imul
dec
sahf
adc
mov
adc
mov
inc
daa
or
mov
gs
pop
or
imul
in
mov
xchg
sub
es
cld
cmp
mov
and
xor
addb
push
mov
rclb
ja
xor
or
loopne
pushf
aaa
jg
jb
mulb
test
adc
aaa
xor
addb
outsb
xchg
daa
jns
add
push
repnz
test
imul
inc
test
pop
cli
push
xchg
pop
out
sti
stos
or
xchg
xor
ret
fwait
mov
scas
adc
and
cmp
push
addl
test
daa
stc
jmp
or
dec
fsin
or
into
dec
add
jb
imul
sbb
pop
rorl
sarl
js
fnstenv
pushf
xchg
por
dec
popa
out
mov
decl
xchg
jmp
xor
mov
imul
push
pop
decl
dec
xor
test
inc
inc
xchg
and
push
mov
add
pop
dec
in
jne
sahf
mov
ds
mov
sbb
test
test
dec
loop
mov
lahf
fiaddl
mov
cs
sbb
xlat
dec
es
pop
sub
sub
insb
xor
and
pop
push
sti
sbb
sbbl
sub
sarb
imul
imul
in
loopne
jge
jge
mov
inc
dec
xchg
lret
stos
or
pusha
lea
mov
pop
hlt
outsb
loop
inc
add
fistpll
push
fstpl
ds
stos
sub
cmp
outsb
test
hlt
es
cmp
roll
sbb
push
jnp
rorb
arpl
jmp
pop
xchg
sub
mov
and
addr16
cmp
adc
js
adc
dec
out
sbb
mov
shrl
hlt
push
cmc
fsubr
inc
lods
mov
ror
mov
sub
mov
cltd
cmp
cmp
mov
rorl
movsl
cli
and
cli
or
push
adc
mov
mov
arpl
mov
jbe
pop
xor
clc
aas
mov
sbb
jae
mov
cmp
xchg
fldcw
stos
stc
xchg
xchg
mov
nop
in
inc
cmp
jmp
inc
mov
cmp
cwtl
cmc
dec
or
inc
rolb
mov
mov
ds
push
data16
sub
cli
sti
push
icebp
push
push
fisubs
je
addr16
xchg
in
inc
test
pop
and
xorl
je
in
push
dec
pop
sahf
xor
lcall
fsubl
inc
loope
add
addb
inc
aad
pop
loopne
and
sub
int
and
arpl
cmp
roll
or
xchg
push
aad
xor
push
jnp
sti
pop
push
push
cmp
xor
shll
testl
imul
cmp
imul
popa
imull
sar
jmp
push
add
add
inc
ffreep
or
add
mov
dec
stc
loope
or
shlb
push
pushf
rorb
repnz
push
into
cmpsb
popa
push
iret
mov
sbb
xchg
fimull
inc
push
add
inc
pop
pop
inc
shlb
inc
fucomp
or
inc
pop
decb
xchg
and
movb
shl
ss
jns
cli
xchg
cmp
jb
test
xchg
push
dec
dec
enter
add
fs
add
mov
sub
and
mov
jmp
fildll
std
mov
xor
das
lcall
pushf
ja
pop
fwait
repnz
mov
cmp
cwtd
add
mov
int3
push
fwait
adc
jbe
xor
mov
clc
stos
not
repz
add
push
xlat
lea
fdivl
mov
jne
push
and
xor
insb
cmp
stos
xorl
call
int3
out
mov
add
decl
les
cwtl
aad
dec
jb
shr
dec
add
push
test
ds
aam
sbb
call
dec
push
sarb
in
jae
sub
mov
add
xchg
mov
out
daa
jo
add
fstl
xor
mov
aas
cwtl
pop
adc
jecxz
push
leave
aam
fisttpl
enter
push
cmp
fdivr
aaa
xor
jp
lds
ficoms
repnz
mov
jns
and
mov
or
enter
jp
outsl
adc
je
andl
call
adc
pushf
int3
xchg
and
xchg
push
shlb
in
aam
stos
andb
clc
gs
test
sub
testl
inc
push
movsl
mov
mov
ds
jbe
fdivp
inc
test
xor
mov
scas
bound
and
cli
push
add
psadbw
xor
popa
lds
aas
xchg
sub
mov
dec
cmp
mov
and
movsb
add
imul
inc
sub
loop
add
mov
in
fisttpll
pushf
out
aas
inc
add
jnp
inc
xlat
fsubrs
ficoms
pop
lahf
or
adc
lods
adc
add
jmp
stos
push
aas
cmp
pop
xor
xchg
fisubs
inc
dec
daa
es
add
dec
and
mov
inc
cmp
cmpsb
add
icebp
cmpsl
cmp
test
push
cli
imul
mov
sub
stos
mov
xor
xor
fildll
fcom
xor
sbb
push
fildll
imul
push
jbe
jno
xchg
int
dec
push
inc
imul
sarb
add
add
mov
out
test
and
mov
or
add
mov
sarl
and
xchg
sub
nop
dec
scas
jnp
scas
sti
adc
pop
sub
je
cmp
aad
popf
aas
sbb
cmp
es
mov
push
gs
add
add
xchg
push
sbb
rcr
outsl
add
test
cmp
out
mulb
add
out
ret
addr16
pop
test
es
cmp
pop
pop
popf
lcall
mov
mov
rcll
mov
xchg
xchg
jmp
pop
std
rclb
out
fcoms
testl
adc
push
mov
or
nop
in
out
pop
add
fcomp
add
scas
xchg
and
adc
xor
push
mov
movsl
add
mov
sbbb
fucomp
adc
xor
sarl
leave
sbb
addr16
push
leave
rclb
add
push
outsb
es
cs
or
notl
or
scas
pop
mov
repnz
jae
and
pop
sbbl
jae
aam
cwtl
ficomps
lcall
mov
cmp
xor
pop
inc
dec
popf
pop
sbb
call
pop
inc
aam
mov
out
imul
in
dec
pop
pop
mov
int3
mov
pushf
mov
push
out
mov
pop
fdivs
in
mov
pop
and
shll
test
inc
push
jne
arpl
test
sbb
test
imul
stos
cmpsl
pop
cli
mov
lea
mov
fbstp
xchg
cmpsl
std
cmpb
movsl
mov
les
and
mov
insl
xchg
mov
sbb
jnp
sbb
shlb
xor
fildl
adc
sahf
and
fucomip
sbb
popf
mov
loope
xchg
or
add
jge
mov
cld
test
jb
mov
imul
outsl
jne
imul
rorb
call
ss
push
add
cmp
mov
mov
shrl
movsl
xchg
mov
cmp
push
imul
push
shll
jmp
or
loope
mov
ret
std
roll
sub
nop
push
jae
std
outsb
dec
sbb
sbb
mov
fsubrl
pop
mov
add
pop
dec
test
sbb
or
je
dec
pop
inc
aaa
xchg
xor
mov
outsl
repz
cs
adc
cmpsl
shll
mov
adc
outsl
imul
add
lock
mov
ds
cld
inc
fnsave
jmp
add
es
popa
enter
sahf
xchg
enter
pop
mov
gs
stc
pusha
xor
and
cmp
mov
cs
jp
cltd
lcall
mov
sbb
xor
xchg
or
and
ja
push
sub
fs
jne
and
cmp
add
mov
imul
push
sub
sbb
popf
sub
les
dec
cmc
icebp
shrl
inc
gs
in
inc
lret
out
push
sti
and
das
mov
sbb
cld
jecxz
mov
loope
ds
xor
repnz
scas
sbb
mov
cwtl
data16
fdivrs
ret
rcrl
out
sarb
cmp
mov
mov
sbb
enter
sar
adc
ss
sbbl
push
sub
jno
dec
cmp
mov
jno
xchg
and
or
nop
pop
mov
lret
arpl
pop
stos
xor
dec
jae
add
cmp
sbb
sub
fs
mov
cltd
and
in
xor
mov
and
xor
adc
imul
popf
jl
into
push
mov
repz
pop
push
cmpsl
fcmove
je
add
mov
arpl
mov
roll
or
push
aas
sub
out
loop
mov
sub
sti
cmp
dec
pop
insb
outsl
divb
xchg
xchg
push
shll
push
cmp
jl
xor
insb
inc
inc
dec
cltd
push
mov
dec
fsubrs
mov
jb
fcmovbe
or
rclb
cld
test
mov
add
lcall
ret
arpl
sub
push
subb
or
jecxz
arpl
xlat
cwtl
mov
jle
repz
imul
adc
mov
dec
cmp
add
xchg
ljmp
aad
sbb
les
popf
push
pop
mov
jp
iret
sbb
into
mov
push
cmpsb
pushf
xchg
push
hlt
rol
pop
mov
cld
push
and
or
jecxz
sub
mov
test
push
pop
sub
imul
mov
imul
jecxz
rcll
out
jnp
jp
out
aas
aad
mov
mov
lcall
jb
lods
in
out
int
cmpl
pop
and
aad
cli
xlat
and
leave
jge
push
ja
jmp
xchg
lret
inc
nop
jmp
out
cmc
movsl
jl
pop
mov
and
cli
mov
rcll
popa
mov
pop
gs
or
aad
lods
scas
or
in
add
cmc
and
sti
lret
pop
xchg
inc
js
lret
cmc
test
xchg
dec
add
sbb
jge
cmp
addr16
sbb
stc
rcr
mov
jge
jns
pop
and
rorb
xchg
gs
and
clc
adc
fsts
je
les
or
inc
mov
lahf
in
sbb
dec
popa
push
xchg
nop
in
pop
pushf
pop
pop
mov
cmpsl
mov
cld
inc
dec
mov
pop
mov
inc
adc
mov
fstpl
or
shlb
test
jmp
inc
adc
and
jg
sarl
xor
aaa
sub
fwait
cmpsb
cmp
xchg
mov
add
dec
dec
insl
adc
int
mov
add
leave
cmp
mov
jle
and
sti
clc
mov
or
test
mov
or
popa
outsl
mov
sahf
das
cwtl
adc
movb
mov
in
push
out
insl
and
pusha
outsb
test
insl
stc
or
or
push
aas
aas
adc
mov
in
imul
push
nop
adc
push
inc
sbb
lds
lret
push
lahf
fwait
jmp
test
and
pop
push
sti
jae
cmp
push
popa
outsl
fnstenv
push
movsb
cmpsb
mov
daa
testl
loope
xchg
push
cld
rorl
std
dec
pop
xchg
fnsave
rolb
aas
sbb
aad
test
push
cmpsl
fnsave
es
inc
adc
loopne
loopne
xlat
jns
addb
cmpsl
adc
mov
test
test
cmpsl
ds
mov
in
sub
das
fiaddl
adc
pop
adc
loope
cld
push
dec
loopne
lahf
jo
lea
cli
mov
inc
inc
sub
mov
adc
pop
fistpl
insb
jp
mov
ds
ss
push
pop
xor
sbb
decl
stos
sbb
int3
add
psrlw
scas
out
jmp
aad
and
in
inc
push
loopne
fs
mov
xor
xchg
push
cmp
rcr
in
inc
mov
or
or
xor
or
mov
inc
cmp
outsl
movzbl
shr
pop
xchg
movsl
sub
jno
pop
gs
pop
icebp
xlat
pop
jnp
inc
std
pop
pop
in
push
ret
xor
test
or
pop
aad
xchg
std
lret
xor
pop
cmp
out
sub
movsl
addr16
call
int
inc
mov
cmp
add
das
and
mov
fyl2x
scas
inc
add
orl
add
sub
leave
cmp
and
dec
inc
sbb
mov
add
test
and
push
repz
jb
insl
push
rolb
ret
lods
es
cmp
dec
push
insl
enter
mov
scas
push
insl
cmp
xchg
or
lock
shrl
aad
mov
jp
mov
sti
jecxz
jl
mov
cmp
mov
dec
test
lods
push
in
xchg
ficoms
mov
inc
sarb
fdivl
out
pop
ss
pusha
testb
mov
test
mov
jge
arpl
push
inc
pop
ljmp
jle
es
and
and
stos
inc
and
push
ja
ja
les
dec
xor
mov
inc
andl
push
xchg
mov
or
dec
cli
pushl
aam
push
push
mov
ret
lods
jo
std
add
mov
loop
xchg
call
jg
cmpsb
xchg
addr16
inc
inc
lret
repz
pop
xchg
or
orl
scas
lret
gs
andb
mov
popf
fs
push
inc
sbb
repz
shrl
cmpl
lret
cmp
cltd
inc
and
dec
pop
lea
mov
decl
sub
movsl
jle
out
pop
cmc
xor
add
lret
pop
js
xor
xchg
fldt
lret
int
es
inc
pusha
bound
fmulp
sbb
and
repz
push
jp
arpl
fldt
call
adc
flds
mov
cmp
pop
fimull
jo
add
xchg
scas
and
rcrl
pop
and
and
jbe
mov
inc
aaa
add
and
push
jle
gs
in
jge
inc
add
cmp
xchg
int3
jbe
lds
inc
sbb
pop
jge
sub
fmuls
lahf
lea
add
sbb
mov
andl
rolb
ret
mov
adc
pusha
mov
test
push
pop
jbe
mov
rcll
rcrb
mov
mov
sub
clc
xchg
cmp
xchg
xchg
pop
out
inc
dec
mov
adc
sarb
movsl
pop
dec
xchg
mov
rclb
or
adc
scas
xor
insl
call
jns
pop
jae
gs
inc
sbb
xchg
js
mov
loopne
popf
loopne
pop
push
cmp
rep
mov
dec
ficoml
popf
outsl
into
pop
jmp
shll
cmp
je
imulb
dec
or
popa
outsb
test
ljmp
mov
adc
scas
adc
mov
sbb
lods
cmpb
ret
jle
leave
or
stos
xor
in
adc
cmp
aas
cmp
xchg
out
lret
rcr
jl
xor
repz
mov
inc
rclb
sub
adc
shll
addl
popf
fwait
cmp
fidivs
xchg
adc
negb
jb
jp
cli
jbe
mov
iret
inc
test
lret
insl
xchg
aam
inc
and
rorl
pop
enter
sub
cld
sub
sub
mov
aas
and
and
pop
out
mov
cmp
in
ja
pop
and
and
movsb
jmp
sar
cltd
push
fwait
cmpsb
cli
adc
pop
mov
xor
mov
mov
inc
les
psrlq
cmp
fcoml
adc
jecxz
lods
xor
jb
rclb
sub
or
fisttpl
clc
out
add
aas
aad
fldl2t
aaa
repz
popa
mov
lds
or
cmp
fsubrp
vprotb
pop
sti
addb
cmp
mov
not
rcr
sbb
iret
push
leave
xchg
xchg
aas
daa
push
push
decl
and
mull
and
pop
test
pop
xor
loop
mov
test
cli
insl
jb
shr
aaa
mov
out
orl
add
push
xchg
je
mov
jo
inc
cli
mov
nop
or
inc
js
out
movsb
mov
and
mov
mov
repz
orl
mov
test
sbb
mov
sbb
push
cli
arpl
cmp
add
mov
xchg
notb
xchg
lcall
push
inc
mov
sbb
xchg
pop
pop
cmp
jns
fucomp
xor
pop
xchg
in
and
push
pusha
and
cmp
jo
cmpsb
int
xorl
pop
pop
frstor
fmull
push
mov
adc
cmc
adc
rcrl
scas
jge
adc
fcomps
pop
adc
cwtl
pminub
cpuid
xor
les
pop
sarb
sete
xchg
fstpt
pusha
mov
add
push
cmp
xchg
xchg
sbb
sub
in
dec
andb
aam
dec
mov
sti
out
sub
pop
js
mov
iret
pop
cmp
test
cmpsb
jbe
and
jmp
or
sub
dec
flds
xor
cwtl
push
sti
loopne
xor
push
out
inc
pop
mov
inc
lea
mov
mov
sbb
in
xor
mov
rorl
sub
das
bound
mov
imul
jl
int
sbb
subl
xchg
jns
xchg
aam
pop
xchg
inc
stos
or
add
inc
fildll
and
stos
mov
loopne
pop
fisubrs
ljmp
push
mov
loopne
imul
outsb
or
popa
push
xor
pusha
pop
sbb
and
and
es
push
and
test
pop
pop
and
test
ret
sbb
pop
jns
mov
push
shrl
jmp
mov
and
jbe
je
mov
push
jg
pop
cmp
cmc
mov
sub
cmp
fs
push
or
xor
dec
movsb
lahf
js
lret
cmpb
lods
movsl
xchg
or
daa
push
mov
cwtl
adc
mov
lods
fs
popl
dec
mov
ljmp
insb
std
sub
dec
xchg
in
xor
stos
cli
jne
ror
stc
test
mov
mov
in
loope
or
out
or
or
in
fyl2xp1
shll
sub
mov
ss
and
scas
dec
or
lret
jg
mov
hlt
xchg
pop
mov
aam
fistpl
cmpsb
pop
mov
pop
dec
and
sahf
sbb
cmp
mov
ffreep
jg
push
mov
divl
pop
pop
mov
dec
mov
fnstcw
sbb
lret
jne
lock
or
sub
mov
cltd
popf
xchg
popf
lahf
xor
mov
add
sahf
cli
add
cwtl
outsb
push
pop
sbb
pop
xchg
dec
xlat
pop
call
fimull
adc
adc
jg
jmp
ret
je
cmp
jmp
mov
adc
insb
mov
stos
mov
cmp
pop
cltd
jo
and
scas
testl
pop
clc
and
push
pop
xchg
clc
and
roll
or
adc
push
sub
out
dec
dec
clc
dec
push
push
mov
jnp
xchg
es
es
cmp
ret
js
push
pop
icebp
or
add
test
xor
sti
imul
in
add
xor
out
imul
bound
fwait
or
pop
and
cmp
push
mov
jecxz
cli
sbb
fbld
cwtl
mov
adc
mov
dec
push
xlat
xchg
add
out
mov
insb
sub
aam
mov
and
push
les
adc
shlb
insl
jp
mov
sbb
fsubrs
mov
fcmove
sbb
push
push
mov
imul
push
sahf
test
lods
push
lcall
lods
mov
or
cmp
mov
hlt
lahf
out
lcall
cltd
insl
xor
aam
cld
or
subb
imul
hlt
aaa
pop
inc
sbbb
mov
call
cs
rorb
dec
pop
mov
add
sbb
push
sub
in
cmpsl
jmp
jbe
hlt
testb
ds
popa
fcomip
dec
dec
add
mov
pop
test
clc
scas
adc
mov
inc
popf
xchg
xor
sahf
cs
sub
push
mov
pop
sbb
xorb
gs
jb
mov
mov
mov
cli
repnz
add
xchg
outsl
xor
mov
int
sbbl
mov
int3
lock
fildl
mov
frstor
sbb
xchg
dec
inc
aad
lods
cmp
fcomps
add
pop
fsubp
daa
inc
adc
jle
fwait
je
xor
push
lods
insb
push
arpl
ret
sbb
jne
cmp
pop
arpl
add
mov
cmp
push
loopne
jae
sbb
cmp
aas
ret
cmp
jmp
popa
fldl
add
aad
in
mov
dec
add
cs
lods
xchg
pop
pop
popa
mov
lods
dec
dec
rorb
mov
out
sbb
mulb
nop
test
bound
loopne
xchg
das
sbb
and
mov
jge
mov
inc
sub
sahf
mov
mov
jmp
or
pop
mov
aad
in
jb
popf
mov
pop
push
repnz
loop
sbb
jnp
scas
add
mov
xor
stc
lcall
into
xor
lahf
or
mov
mov
int3
outsl
sbb
mov
rcr
sub
scas
shrl
daa
adc
ret
mov
loop
pop
mov
data16
cmp
lea
jne
out
cld
adc
or
mov
pop
add
lcall
pop
dec
cli
ljmp
xor
fildl
or
mov
inc
cmp
lahf
in
fisubs
mov
out
and
leave
cmp
imul
or
int3
jbe
adc
lret
imul
adc
cmpsl
pusha
mov
sub
out
and
mov
int3
push
xchg
lods
outsb
out
jmp
or
mov
test
cmp
rcll
push
sbb
inc
pop
push
aas
je
es
pop
xlat
stmxcsr
iret
adc
mov
mov
jno
shlb
popa
xchg
cwtl
jnp
mov
insl
mov
sub
sub
push
fisttpl
fs
sbb
xchg
jl
mov
mov
mov
cmp
outsb
icebp
mov
fdivl
or
lods
fistpl
mov
scas
stos
adc
arpl
movsl
sbb
xor
es
ja
imul
mov
add
rcr
mov
add
out
xchg
adc
push
mov
fwait
adc
mov
adc
je
cmp
cltd
cmp
lea
sbb
dec
mov
aaa
pop
jb
fisubs
insl
jbe
cmp
inc
mov
sbb
mov
pusha
andl
push
in
jmp
imulb
dec
stc
sub
clc
pop
dec
push
dec
mov
out
test
pop
jmp
add
icebp
xor
sbb
mov
imul
inc
iret
ljmp
je
sub
cld
pop
sbb
ret
adc
xor
sbb
rol
cld
cwtl
pop
push
adc
cltd
cli
mov
repz
inc
nop
jno
mov
sbb
in
cmp
or
std
add
mov
xor
jae
fcoms
mov
fdivp
mov
outsb
push
sbb
mov
fisubrs
and
loop
pop
jle
shlb
popa
sbb
in
lahf
iret
xchg
sbb
mov
aam
lret
adc
jbe
out
adc
mov
sti
sbb
push
imull
fucomi
addr16
mov
pop
mov
dec
pop
xchg
adc
mov
daa
cmc
sahf
push
sbb
outsl
sbb
or
fstpl
mov
sbb
aas
lea
and
xor
in
pop
dec
lods
xlat
inc
push
jb
xor
stos
hlt
sbb
push
xchg
out
in
fwait
outsl
sbb
mov
mov
jecxz
push
inc
aam
mov
push
loopne
and
aas
fs
pop
push
mov
mov
and
cltd
in
xchg
push
mov
in
fldt
inc
in
xchg
loope
pop
fiadds
sbb
rolb
and
cmp
jbe
shll
add
popa
std
test
out
scas
sbb
cmp
dec
stos
lds
jnp
int3
out
and
xchg
jp
loopne
rorb
adc
in
repz
push
out
xchg
stos
dec
xor
push
daa
stos
jne
push
repnz
and
sub
push
adc
mov
int
ret
pop
mov
push
or
js
mov
lods
fldenv
test
sbb
into
pop
testb
fwait
es
gs
and
iret
pop
pop
addr16
popf
mov
cmp
adc
das
xchg
sub
and
enter
and
movsl
xchg
into
jb
adc
xchg
pushf
rorl
cmpl
xchg
loop
shl
add
xlat
cmp
imul
and
sub
iret
pusha
cmpsl
rcll
movsl
xchg
cmc
pop
test
shl
pop
je
popf
stos
push
inc
ss
push
jne
cli
shll
lret
inc
lcall
xchg
pop
aam
cld
movsb
cmpsl
cwtl
sbb
pop
xchg
or
mov
inc
fs
movsl
out
dec
dec
fildll
imulb
pop
push
pop
xchg
test
fstenv
mov
add
sub
cmp
fmuls
fsubrs
xchg
pop
out
add
movsl
pop
mov
inc
cmpb
jnp
test
scas
enter
push
mov
aas
lret
xchg
xor
out
add
in
mov
push
hlt
in
adc
add
mov
lcall
dec
in
push
aad
push
outsl
or
push
sub
cmp
js
and
fwait
loope
fcomip
movb
aas
sarl
push
lcall
dec
sub
outsb
stos
inc
cmp
add
inc
push
xchg
subb
pop
cmp
sbb
cli
js
mov
sbb
cli
push
xchg
lcall
es
ret
push
and
mov
push
mov
or
pop
push
lea
and
jle
jbe
and
jb
adc
repnz
pop
mov
push
fldcw
insl
ret
mov
pop
mov
cmc
andl
mov
mov
mov
icebp
push
xor
into
shll
xor
stc
rorb
lret
test
ret
xor
jae
scas
xchg
or
cs
or
fstl
icebp
xor
mov
stos
js
add
and
add
sub
lock
dec
jno
jbe
jbe
jle
shll
xchg
adc
cwtl
clc
mov
mov
jno
xchg
fadd
std
bswap
xor
movl
pusha
mov
out
mov
lock
dec
js
int3
imul
int
inc
leave
jge
mov
cmp
popa
in
rolb
outsl
movsl
mov
loopne
and
fs
xchg
popa
mov
sub
lcall
or
sub
push
xor
adc
mov
sbb
gs
lret
mov
in
push
iret
pop
jne
ljmp
add
xor
stos
push
shl
dec
stc
aaa
and
xor
stc
sub
and
sbb
push
out
jmp
mov
lods
mov
sbb
loopne
pop
leave
adc
push
lret
cmp
in
dec
and
loope
lea
aas
mov
push
mov
mov
in
mov
sub
fnstsw
popf
out
or
mov
iret
sub
popl
pop
pushf
and
stos
into
sub
mov
push
mov
cmp
xchg
ja
jl
aad
adc
ret
clc
repnz
mov
or
push
icebp
cld
test
mov
data16
add
pop
push
ss
insb
mov
inc
mov
sbb
hlt
in
movl
lret
ljmp
push
mov
add
push
adc
and
jl
add
add
loope
loope
push
inc
lret
xor
mov
sarb
leave
mov
xorb
out
push
jne
outsb
mov
adc
jg
or
ljmp
mov
int3
dec
push
jmp
xchg
jg
mov
push
ds
in
add
adc
add
jmp
xchg
sbb
xchg
lea
js
lods
pushf
leave
push
stos
outsb
mov
loope
cmpsl
std
cmp
into
push
scas
call
clc
call
push
cmp
or
sahf
test
xor
aam
bound
mov
stos
imul
adc
push
outsl
rorl
pop
icebp
jg
mov
pop
mov
sub
in
jge
xor
push
push
and
in
out
dec
and
sub
repnz
push
clc
mov
xchg
pop
dec
mov
imul
stos
push
sbb
inc
fadd
jge
dec
cs
aas
insl
data16
test
shl
pop
and
mov
and
divl
sub
adc
aaa
lock
out
fimull
sub
dec
dec
movsl
jbe
sarl
lret
push
pop
mov
in
mov
pop
in
mov
dec
dec
pusha
into
push
lds
mov
movb
push
mov
mov
dec
scas
inc
test
in
ds
psadbw
sub
in
inc
add
push
outsb
aaa
into
daa
inc
push
loop
sbb
mov
sub
mov
xchg
cwtl
mov
push
insb
add
iret
add
mul
mov
jle
push
adc
js
stc
iret
mov
mov
add
hlt
cmp
jo
popf
dec
dec
cli
mov
leave
jmp
xchg
add
xchg
gs
popf
daa
mov
addr16
jg
cld
cmp
push
dec
out
cmp
sub
mov
orb
fstps
scas
cmp
lret
add
mov
and
movsl
pusha
test
insb
mov
push
jecxz
push
xchg
ljmp
dec
test
jbe
movsl
in
movsb
push
sbb
dec
cld
xchg
fs
sub
gs
clc
movsb
imul
pop
repz
or
lock
xor
dec
pop
iret
mov
sbb
mov
pop
dec
repz
lods
jb
lret
stos
sbb
pop
xor
inc
pop
xchg
adc
pop
cmp
mov
jle
shlb
sahf
sar
push
pop
lcall
mov
iret
ret
jp
arpl
jl
cmp
xor
jl
fistl
or
add
cwtl
enter
sub
addr16
cmp
inc
jecxz
add
testl
pop
adc
outsl
mov
mov
andb
outsb
jp
cmp
test
pop
lahf
cmp
inc
aad
loop
jl
mov
mov
pop
lret
mov
shl
sbb
sub
mov
xchg
or
xchg
sub
fabs
push
mov
push
in
and
or
ja
jge
push
or
movsl
stc
out
outsl
testl
fldcw
push
jp
xlat
and
sbb
xor
lret
add
stc
leave
ret
flds
loope
enter
shll
int3
filds
pop
sbb
jge
mov
mov
xlat
loop
sbbl
push
sub
sbb
addr16
sub
loopne
inc
icebp
je
sub
adc
jne
inc
xor
aaa
and
fwait
nop
cmp
cwtl
daa
pop
cld
sbb
ds
push
adc
mov
push
sti
out
scas
pop
sub
inc
jg
je
daa
mov
inc
cmc
xlat
mov
inc
aas
dec
mov
sub
jp
push
bound
mov
and
iret
rol
nop
push
lods
xchg
mov
imul
mov
mov
xorb
js
lds
jns
or
jae
jae
xchg
adc
dec
xor
lcall
adc
jb
cltd
aaa
jbe
sub
dec
movsb
push
je
fwait
lock
lret
sub
cld
fs
das
and
sbb
loope
pop
popf
iret
inc
shrb
mov
adc
cmp
cmp
mov
aas
pop
rcrl
dec
cld
pop
fbld
inc
mov
nop
mov
and
jb
cmp
jle
pop
std
fmul
and
repz
mov
pop
stos
lds
lds
call
outsl
sub
int3
fdivrl
mov
fildll
sarl
xchg
jg
jp
add
adc
jb
in
adc
jge
popf
sti
jmp
adc
subl
arpl
cmc
addr16
xchg
jo
sahf
enter
lret
fnstsw
add
mov
loope
push
lock
lock
push
inc
xchg
xchg
pop
jmp
ret
mov
test
cmpsl
inc
jnp
sub
sahf
mov
ss
cmp
sahf
ret
and
push
loopew
xor
dec
inc
inc
neg
shlb
sub
test
push
ret
jg
sbb
mov
jg
xchg
fidivrs
outsb
xchg
ja
push
sbb
fmull
pop
sub
pop
js
lret
out
cmc
idiv
lock
push
icebp
jae
cmp
jns
inc
xorb
adc
das
stos
adc
fcmovnu
sub
cmp
adc
stos
mov
and
das
rsqrtps
cmp
xlat
lods
out
paddsb
cmp
in
mov
cmpsb
sbb
loop
stc
jae
push
xchg
js
inc
push
test
insb
dec
push
int
mov
into
sbb
lds
jnp
mov
pop
les
mov
dec
xchg
xor
dec
xchg
push
ret
jb
sbb
out
fldcw
sub
aad
stc
repz
adc
or
inc
sbb
add
pop
lret
call
add
lds
xchg
or
adc
scas
cmc
mov
fisttpl
cmpsl
inc
dec
add
push
inc
hlt
jle
mov
mov
fs
and
outsb
in
fstpt
and
xchg
cmc
ljmp
xor
ds
push
jo
fldcw
jmp
je
sub
xlat
faddl
rcrl
fwait
xchg
lock
ja
sbb
fwait
mov
mov
pop
sub
mov
jl
xchg
sbb
test
fdivp
pop
cli
bound
movsb
aaa
mov
sbb
mov
aas
mov
sbb
mov
es
xchg
cmpb
ljmp
sub
push
int
cli
fsubl
dec
jmp
sub
test
fwait
or
in
mov
cmpsl
int3
iret
xor
addl
pop
lock
mov
shll
iret
jmp
jno
in
orb
fldt
sub
mov
out
inc
cmp
push
out
or
negb
imul
into
sahf
or
cltd
push
adc
hlt
and
xchg
cmp
adc
into
add
inc
pop
in
dec
std
cld
lds
dec
pop
insb
js
mov
stc
out
jmp
addr16
jne
mov
iret
pop
push
jge
push
and
cmp
push
pop
xchg
jne
push
jl
jae
pop
test
mov
mov
add
cmp
scas
test
lahf
mov
or
sbb
cmc
cli
mov
adc
out
sti
aam
andl
out
inc
pop
jmp
movsl
push
mov
arpl
dec
test
ds
arpl
push
pop
add
sbb
add
pop
sarl
paddsw
out
sub
ss
mov
xor
sbb
add
pop
push
pop
sarl
mov
add
std
cltd
dec
push
sbb
mov
and
lods
push
jns
sbbl
pop
add
data16
mov
push
ja
test
iret
scas
sahf
into
mov
es
addb
faddl
pushf
and
int
pop
mov
das
sbb
adc
xchg
push
mov
inc
outsl
xor
adc
push
je
xor
rcr
push
and
or
push
push
cmpsl
add
push
into
ficompl
xchg
add
popa
xor
push
mov
mov
lods
adc
adc
lods
sbb
add
fstl
xchg
push
sbb
aad
jl
pop
mov
jge
mov
xchg
pop
out
es
xor
push
jne
sahf
push
ljmp
sbb
push
mov
pop
scas
sbb
add
or
loopne
sbb
dec
test
aam
add
mov
xlat
shrb
mov
and
test
shll
bound
lret
pop
adc
lcall
ljmp
cltd
xchg
sub
mov
xor
lahf
imul
inc
insb
xor
pop
cmp
aas
and
call
sbb
test
xlat
pop
les
push
pop
mov
push
pmaxub
mov
fs
adc
sbb
out
aas
xchg
xor
ljmp
jle
jae
and
pop
and
and
add
stos
xchg
les
lods
repz
mov
call
testl
dec
inc
push
xor
pop
push
pop
push
add
or
or
mov
jbe
mov
and
xor
ret
js
jo
add
in
sub
xor
mov
lret
mov
jo
adcl
in
ds
inc
imul
mov
cmc
lahf
xchg
lret
or
or
jecxz
inc
mov
pop
lock
or
cmpsb
sub
mov
out
dec
lea
dec
add
out
mov
sub
cmp
add
push
and
sbb
btr
fisttps
insb
out
and
pop
xchg
lret
jbe
adc
xchg
xchg
iret
pop
jns
nop
mulb
insl
shll
lods
das
sbb
sub
mov
lahf
inc
or
cld
push
fsub
mov
pushf
jmp
test
jno
push
mov
xor
mov
into
pushl
cmp
stos
les
test
jb
stos
xor
cmc
mov
mov
test
add
push
or
cld
mov
pushf
and
lea
in
in
mov
push
icebp
sub
imul
and
xor
xor
imul
hlt
clc
mov
add
cmp
jp
xchg
xor
and
icebp
in
xor
push
clc
stos
mov
mov
add
pop
push
pop
setae
xor
clc
aad
sbb
mov
js
jno
popf
scas
stos
sbb
jb
testb
cmpsl
lret
gs
push
loopne
cmp
adc
movsl
outsb
sbb
fnsave
add
cmc
imul
in
call
imul
xchg
cmp
fstl
pop
stc
cmp
mov
jns
mov
int
mov
jg
and
mov
lcall
cmp
imul
daa
lds
lock
push
mov
cli
mov
ret
cmp
incb
cli
mov
push
mov
addl
fnstcw
add
or
adc
lods
mov
cmp
pop
pushf
xchg
shrl
xlat
loopne
inc
adc
push
scas
into
xchg
into
mov
push
movsl
or
cmpl
sarb
push
push
xlat
mov
mul
and
fs
xchg
inc
and
shl
popf
sti
lahf
adc
int
imul
mov
fs
aaa
pop
pop
mov
or
mov
xchg
sub
xchg
fs
in
lcall
push
fld
add
pop
add
mov
enter
sbb
pop
jmp
xor
loopne
cld
push
in
mov
and
jl
xlat
and
stos
jmp
js
push
lcall
cwtl
mov
pop
daa
xor
loope
fucom
notl
ret
lods
inc
mov
scas
push
pop
jg
aad
addr16
xor
or
dec
popa
insb
mov
cld
mov
mov
xchg
fidivl
nop
xlat
jge
xor
fadds
xchg
and
decb
clc
call
sbb
test
aaa
xchg
ds
lret
in
mov
loop
push
inc
enter
sbb
mov
or
shrl
sbb
lods
addps
add
push
lock
push
and
imul
xor
stc
inc
xchg
shll
add
cmp
or
inc
mov
mov
pushf
jnp
cmc
push
lods
data16
sbb
sub
aas
cmpsl
push
jecxz
dec
xor
jp
sbb
and
push
mov
enter
pusha
inc
xor
pushl
clc
jne,pt
setle
sahf
add
aam
arpl
lahf
jbe
fistl
shll
mov
jns
insb
mov
in
inc
data16
mov
and
jno
push
and
mov
push
and
adc
xchg
incb
daa
dec
cmp
push
cmc
js
xchg
lock
cmp
or
adc
lret
lods
push
sub
push
pop
xchg
mov
sub
call
mov
inc
cmp
jo
adc
add
sub
notb
pop
and
addr16
dec
push
ret
mov
lods
jae
loope
lahf
push
xchg
addr16
cmp
scas
push
pop
sub
pop
mov
out
cmp
pop
idivl
xchg
pop
inc
pop
loopne
fiaddl
shlb
add
in
push
fsub
xorl
hlt
fdivrs
mov
test
push
outsl
mov
les
mov
popa
or
test
and
rcll
dec
inc
out
mov
mov
int
ret
jae
decb
test
xor
or
dec
pushf
push
lahf
and
add
xor
cmp
mov
pop
cwtl
sbb
adcl
iret
jbe
dec
lahf
jo
xor
push
test
pushf
cmpsb
jbe
adc
les
fwait
adc
insl
pop
mov
scas
in
cmp
xor
lret
dec
fcmovb
push
fistps
popa
into
call
xchg
or
das
enter
aaa
inc
lret
pop
aad
ja
jp
pop
mov
and
jo
icebp
inc
jl
shlb
test
addr16
inc
mov
inc
std
clc
lret
sub
mov
pop
inc
mov
hlt
xchg
test
dec
ficomps
lods
push
fsubs
mov
xchg
pop
test
lods
sbb
pop
push
scas
bound
das
mov
push
loopne
mov
into
out
sub
jecxz
imul
int3
outsl
stc
gs
cmp
mov
adc
push
cmp
js
stos
rclb
int3
dec
cmp
xor
ds
add
andb
xchg
aas
popa
scas
call
xchg
lret
pop
dec
dec
xchg
scas
pop
mov
or
cltd
push
and
push
fldt
divb
rorl
adc
push
adcb
loope
xor
add
pop
sub
hlt
scas
jne
pop
cmpsl
leave
int
mov
fisubs
xlat
or
sub
mov
rcrb
mov
fdivrp
xchg
xchg
aaa
mov
out
or
stos
rclb
outsl
repz
cmp
push
pop
adc
stos
xchg
out
pushf
repz
imulb
mov
cmp
out
icebp
lock
sbb
ffree
sbb
stos
iret
cmp
push
mov
in
adc
shrb
stos
adc
jp
pop
and
icebp
sub
xor
mov
lock
sub
insb
jmp
sbb
int
inc
mov
ljmp
push
inc
dec
mov
mov
adcl
frstor
fidivrs
test
dec
sbb
fistl
mov
ljmp
scas
lcall
into
add
jl
add
in
lods
sub
cmc
add
ss
lock
jp
std
sbb
test
call
popa
jle
dec
pop
lods
icebp
push
xlat
xchg
mov
int3
inc
cwtl
fadds
pop
icebp
adc
repz
push
lret
push
cltd
lock
aaa
mov
mov
loope
imul
shl
and
xchg
push
adc
xchg
shrb
test
inc
push
repnz
jp
std
aas
leave
fcoms
add
in
fsqrt
mov
lds
pop
sti
xchg
jnp
scas
lods
xor
jmp
mov
add
xchg
and
pop
loopne
push
mov
out
xor
scas
jnp
dec
sub
cmp
xchg
insb
jp
lds
fistpll
jge
sbb
push
aaa
loope
mov
dec
shrb
fwait
mov
je
out
mov
push
repnz
fdivrp
lock
std
xchg
pushf
int
out
fdivs
or
lods
rcrb
xchg
test
mov
cmp
mov
xchg
sub
pop
shr
dec
and
iret
sahf
jne
jg
cli
pause
call
scas
or
adcl
test
jb
frstor
xor
fcomps
mov
out
mov
cmpb
out
inc
iret
iret
stc
add
pop
inc
insl
and
lods
ret
sub
bound
leavew
imul
cld
adc
aaa
outsl
push
jp
lret
add
lods
sahf
shrb
mov
cmpsl
jb
cmpl
mov
hlt
stos
inc
ret
scas
or
fadd
add
into
repz
jmp
arpl
data16
push
xchg
pop
fcompl
inc
lea
dec
mov
pop
cmc
loopne
xchg
push
test
sti
inc
popa
stos
aam
push
mov
mov
mov
push
subl
add
push
mov
scas
fdivrs
adc
add
scas
bound
jo
std
call
lock
add
mov
imull
test
jle
in
out
pusha
dec
mov
and
pop
pushf
mov
mov
pop
jb
cmpsl
cltd
dec
xchg
and
cmpl
rep
addl
mov
test
pop
mov
sbb
sub
adcb
cmp
jg
int
mov
das
and
sbb
sub
mov
xchg
jmp
fildl
clc
sbbb
mov
lahf
mov
sarl
sbb
push
mov
testb
pop
cmp
subb
dec
xchg
adc
push
shrl
cmp
push
inc
push
test
jnp
dec
pop
stos
xchg
into
xor
js
inc
dec
sbb
aam
stc
add
xchg
in
sahf
aaa
jnp
or
pop
lcall
cmp
mov
ret
ficomps
movsl
push
mov
sub
lods
test
or
leave
into
mov
daa
mov
cmp
shrb
dec
fisubs
xor
push
cmp
sarb
push
gs
repnz
arpl
std
sahf
inc
aas
dec
sarl
mov
push
lds
lcall
orl
into
add
cmpsb
scas
fidivl
mov
dec
jae
sub
and
add
fs
pop
inc
jae
mov
pop
inc
shll
xor
xchg
fldcw
jecxz
popl
pop
mov
mov
mov
mov
insl
dec
xchg
insb
inc
sti
leave
sbb
sub
push
or
cli
mulb
dec
scas
mov
or
dec
stos
fs
out
cmp
xchg
mov
das
push
lds
das
fs
push
in
fwait
push
sbb
fs
es
push
push
and
cmp
ja
mov
stc
mov
lods
out
sub
lea
dec
sbb
push
adc
dec
push
aaa
jb
inc
xchg
xchg
xor
aas
mov
xchg
cmc
stos
pop
aad
sbb
cwtl
mov
sub
xchg
sbb
dec
and
and
jmp
mov
adc
sub
hlt
push
adc
sahf
jg
xchg
dec
mov
je
loope
aad
and
sbb
xor
cmpsl
add
sbb
test
movsl
add
out
lahf
aad
ror
test
pop
aam
dec
int3
mov
movsl
pop
cld
loope
sub
insl
mov
xchg
repnz
push
inc
clc
aad
insl
mov
lcall
inc
jmp
jp
add
jae
rcrb
clc
xlat
sub
cmc
push
inc
test
xchg
lahf
mov
push
cmp
jno
sub
xchg
xor
mov
jp
jbe
sub
cmp
aas
cmp
lret
adc
mov
arpl
jl
mov
mov
xor
adc
es
inc
pop
pop
mov
cs
sub
mov
push
mov
lock
repz
lcall
pop
sbb
xor
or
into
imul
inc
psubusb
pusha
pop
adc
and
mov
in
jge
in
dec
aam
int3
je
imul
lods
cmp
outsb
lahf
cmp
mov
inc
out
push
pop
push
mov
dec
cli
jle
cmp
shlb
sbb
movsb
adc
test
inc
or
sub
or
insb
hlt
mov
pop
imul
fidivs
stos
push
jg
xor
sub
std
add
popa
test
push
divl
xor
std
int3
and
xlat
fldcw
mov
mov
fldenv
shrl
daa
mov
and
mov
lea
in
cli
popa
push
test
repnz
lds
push
jbe
fnstsw
pop
dec
rcl
add
adc
push
or
imul
dec
fdiv
jg
in
cltd
inc
popf
jb
xor
shrl
nop
mov
dec
sbb
pop
sbb
inc
les
mov
jne
aam
adc
imulb
or
js
stos
sti
and
cmp
ja
mov
mov
lcall
stos
cmc
pop
push
pop
xchg
xor
mov
in
jae
mov
pop
sbb
jecxz
mov
adc
jb
es
cltd
or
dec
cld
sbb
mov
xor
inc
or
test
add
shrb
lahf
xor
ja
pop
pop
pop
push
ss
jge
pop
gs
jge
push
jecxz
push
negb
pop
dec
lea
clc
mov
test
or
mov
add
loopne
stc
adcb
adc
cmp
shrl
pop
pop
xor
sbb
test
cs
test
sbbl
lret
icebp
push
dec
ret
pusha
pusha
adc
lods
sub
push
add
xchg
cs
cli
mov
mov
cmpsl
dec
xchg
xchg
mov
dec
inc
int
jno
xchg
fwait
in
fsubs
jle
dec
xchg
imul
xchg
cmp
in
fs
fstps
outsl
mov
lock
pop
fisttpll
pop
mov
xchg
mov
cmpsl
mov
fs
cmpsb
push
mov
pushf
mov
mov
jno
lock
aas
out
pop
jmp
outsb
int3
movsb
enter
sbb
insb
inc
adc
xchg
sub
insl
ret
adc
xchg
jle
mov
outsb
mov
mov
test
dec
mov
push
inc
enter
dec
rclb
ds
pop
loop
popa
pop
adc
sub
xchg
in
jge
dec
sbb
and
pop
ds
cmp
add
mov
xchg
mov
dec
in
jb
pop
push
aas
divb
in
ret
lea
les
lcall
sub
or
ret
addr16
sub
cli
out
out
pop
push
dec
mov
add
pop
dec
pop
pop
xor
dec
les
push
adc
or
out
xor
add
adc
cltd
mov
jge
ja
aas
ds
and
adc
push
adc
cld
iret
jns
mov
loop
loop
inc
mov
in
lret
dec
out
ds
mov
stc
lcall
cmpsb
nop
rorl
mov
sbb
jl
mov
sub
aaa
lea
repnz
lcall
loop
mov
hlt
or
fistpl
inc
jmp
ret
es
fwait
loopne
in
nop
or
pop
cld
cmc
int
imul
xchg
jmp
insb
aas
fnstsw
xchg
pop
sbb
xchg
jne
bound
and
dec
loop
jns
decb
push
aaa
inc
in
inc
cmp
rcrb
and
cmp
enter
pop
jns
xor
cmp
sbb
xchg
xchg
loop
sarl
xchg
sub
scas
xor
push
push
mov
mov
mov
fldt
ljmp
pop
add
dec
push
repz
and
sub
cmp
and
pushf
fnsave
adc
jb
cmp
js
pop
pop
xchg
sbb
jle
or
cld
andb
adc
shll
fimull
lahf
jp
test
jo
inc
scas
adc
inc
xor
divb
sub
add
inc
xchg
push
andl
aas
outsl
mov
jnp
cs
out
xor
lock
shlb
int3
imul
xor
clc
ret
mov
push
sub
movsl
mov
mov
xchg
int
scas
mov
adc
lcall
cmc
js
xchg
mov
mov
clc
mov
cmpsb
cli
fdivrl
dec
jmp
pop
scas
xor
in
mov
xlat
and
mov
shrb
push
int3
cmpsb
lds
cli
sarl
out
mov
pop
push
je
jl
sbb
in
pusha
shll
pop
push
mov
push
gs
in
jno
adc
jnp
lcall
jg
xchg
lret
popf
pop
outsl
xchg
arpl
pusha
pushf
mov
sbb
ljmp
loope
outsl
movsb
inc
cmpsb
repz
decl
mov
mov
subl
push
pop
mov
leave
std
mov
insb
je
cmp
sub
mov
adc
jecxz
mov
adc
roll
loop
fisttpll
jmp
jl
mov
cmpsb
mov
or
sub
sahf
in
xor
xorb
out
fiaddl
push
sahf
pop
mov
scas
xchg
testl
adc
mov
data16
adc
repnz
pusha
scas
inc
loop
outsb
fsub
push
xor
cmp
data16
in
push
pusha
sbb
push
jb
sarb
lods
rclb
mov
jge
int
out
ja
push
in
stos
popf
dec
inc
push
xchg
gs
fsubrs
mov
in
out
cmpsl
cmp
cmp
cmpsb
mov
pop
inc
inc
call
fwait
xor
xchg
and
push
inc
cld
mull
xchg
jecxz
push
out
add
cli
mov
mov
inc
arpl
rcrl
xchg
mov
lea
push
fwait
xchg
mov
mov
fwait
sti
lret
nop
int3
cs
inc
and
jle
pop
sar
add
insl
inc
cltd
mov
mov
push
xchg
jne
test
lock
pusha
cmpsb
adc
repnz
dec
mov
test
scas
sub
aam
aad
enter
mov
fistpl
pushf
stc
or
call
lea
movsl
mov
movsl
sub
and
push
lahf
and
cwtl
sbb
repnz
movsl
push
add
pop
es
aas
imul
ss
incl
arpl
mov
pop
ja
sub
mov
std
inc
lods
sbb
or
rcl
mov
fs
cmp
sahf
hlt
push
cmp
cmp
dec
aaa
sub
adc
ljmp
divl
loope,pn
call
arpl
into
mov
fucomp
push
jnp,pn
imul
andb
mov
insb
pop
lock
ret
jmp
mov
pop
jp
xchg
icebp
or
shlb
push
test
fsubrs
or
aam
dec
adcl
popa
sbb
add
or
mov
pop
or
fwait
jle
in
movsl
and
add
cmp
xor
jl
push
mov
mov
add
xor
leave
mov
cld
cmp
xchg
loope
movsb
xlat
or
sbb
jg
mov
rorb
test
daa
scas
and
leave
pushf
data16
daa
insb
cli
jns
arpl
mov
fst
aam
jb
mov
xor
add
popa
popa
ret
push
push
ja
add
pop
dec
aam
or
dec
fbstp
mov
push
xor
fucom
adc
and
inc
jne
pop
repnz
aad
popf
scas
sbb
test
push
aam
xchg
xor
jge
mov
nop
jbe
movsb
and
insl
cmp
shufps
sbb
jecxz
cld
fimuls
pop
sub
clc
pop
testb
pop
inc
imul
push
sub
mov
adc
pop
jecxz
push
dec
add
pushf
add
cmp
scas
cmp
mov
add
xchg
jne
mov
jecxz
std
inc
mov
pop
ret
dec
cmp
jl
jns
cs
sub
jne
fs
and
subb
pop
inc
mov
in
add
lock
lahf
adc
or
rcrl
fldt
adc
sti
ja
in
imul
fsubl
mov
jno
mov
or
sbb
mov
mov
dec
das
mov
bound
fdivl
inc
test
sub
mov
jno
xor
xor
or
sub
cs
cwtl
dec
cmp
fmull
lds
sub
push
icebp
or
cmp
imul
orb
mov
test
jge
sub
repz
mov
test
fsqrt
fs
rclb
jnp
enter
popa
pop
ds
arpl
lea
dec
push
adc
arpl
nop
mov
into
add
les
movsb
sbb
mov
out
cmp
scas
xchg
jge
pop
push
inc
or
dec
loope
mov
mov
psrlw
addl
pop
add
addr16
fstpl
add
push
aas
push
mov
out
push
xor
mov
ds
mov
dec
push
mov
mov
jbe
loop
mov
dec
jl
enter
jae
sub
int
jecxz
pushf
in
stos
or
push
jmp
xor
jp,pt
popf
pop
sbb
cmc
sub
dec
mov
bound
sbbb
push
mov
fidivl
xchg
imul
mov
imul
cld
loope
outsl
dec
test
in
or
adc
cmp
pusha
lret
cld
or
mov
push
jl
sbb
fmuls
and
pop
mov
inc
out
outsl
fdivrl
mov
scas
ss
add
jo
repz
insl
dec
pop
mov
in
sbb
fwait
mov
push
mov
in
out
jae
inc
add
ror
xchg
jno
sub
mov
cld
movb
test
jno
cmpsl
add
jnp
mov
popf
cli
movsl
outsb
jg
or
pop
add
test
push
mov
loopne
xchg
push
sbb
aas
outsb
test
orl
lret
mov
mov
pushf
mov
mov
shl
dec
cli
and
shll
or
jl
fisubrs
jecxz
rcrb
pop
lock
add
sarb
mov
shl
call
add
in
fistpl
loopne
lea
and
rcll
pusha
pop
jl
test
cs
movsl
adc
jb
repnz
cs
popa
jmp
mov
pop
mov
out
xor
xchg
cmp
mov
mov
mov
mov
xchg
cmp
dec
adc
mov
mov
xchg
dec
cmp
sub
and
std
adc
xor
scas
lcall
lods
mov
sbb
mov
mov
jbe
lea
sub
xor
cmp
je
mov
lods
testl
int
pop
lods
adc
add
movsb
aad
imul
cmp
imul
cmpsw
ja
scas
jg
or
mov
mov
inc
nop
inc
pop
in
ja,pt
and
mov
xchg
and
pop
or
sbbb
out
test
sbb
mov
or
test
sub
xchg
and
sub
lods
sbb
sbb
mov
xchg
and
cmpsw
aas
popa
add
popa
push
jecxz
cmc
mov
or
outsl
test
adc
push
mov
cmp
dec
fucomi
jmp
push
daa
rol
outsl
mov
pop
jne
repnz
push
mov
sbb
test
cmpsl
mov
mov
cmp
inc
sub
mov
test
sbb
clc
sub
ror
aam
dec
movsb
out
test
xchg
mov
scas
ja
cwtl
icebp
mov
inc
loop
fistps
add
rcl
mov
sbb
pop
xor
jbe
test
and
sub
or
cwtl
fcomp
jo
leave
loopne
aaa
cmp
pop
sbb
rcrl
aad
mov
jo
movl
pop
pop
lcall
scas
call
cld
mov
push
popa
push
adc
dec
dec
mov
repz
imul
cltd
cmp
scas
ja
add
jb
test
leave
cmp
mov
repz
push
sbb
cmp
adc
xchg
sahf
pop
inc
movsb
insl
outsb
data16
mov
push
repnz
jne
pop
inc
lods
push
outsl
jns
push
mov
mov
dec
js
xchg
lock
repz
xor
filds
sti
cmp
int
lret
ss
xchg
cmpsl
leave
mov
enter
jo
call
jmp
ret
push
gs
adc
outsl
pop
push
dec
pusha
pusha
sub
inc
and
sbb
cld
hlt
or
outsb
out
test
je
movsb
adc
mov
push
xor
mov
aam
scas
mov
pop
jnp
mov
mov
inc
push
imul
bound
xor
sbb
mov
adc
pop
inc
mov
cs
pop
inc
cmp
pop
push
adc
cmpl
out
in
fucomi
out
int
sub
inc
movsb
inc
sbb
jo
cld
xor
xor
testl
dec
dec
xor
inc
pop
xchg
test
push
scas
inc
out
fstpt
rcll
mov
inc
insb
or
out
add
ss
jbe
mov
and
xor
sbb
lock
jl
bswap
push
xchg
iret
sub
inc
jl
addl
sub
rcll
add
and
xchg
shl
jo
sub
lea
and
dec
pop
repz
fstl
add
bound
or
inc
les
push
stc
xchg
in
inc
fwait
cld
call
adc
icebp
mov
cmp
cmpsl
mov
sub
icebp
mov
jmp
add
arpl
sbb
mov
out
push
dec
xchg
add
call
scas
scas
xor
mov
jne
mov
scas
cmp
mov
cmc
jo
lret
mov
mov
out
daa
ret
sub
dec
ffree
out
pop
sbbb
sub
add
inc
cli
in
lods
inc
fldt
int3
les
jp
push
scas
pop
adc
xchg
fwait
push
sub
rcll
cmp
add
sbb
ljmp
loopne
cmp
fsubrs
lock
cwtl
test
dec
add
pop
xor
xor
insl
push
sbb
fwait
or
insb
mov
je
or
mov
je
mov
aaa
xor
adc
leave
jno
or
js
outsb
rcl
dec
cmpsb
xchg
addr16
dec
mov
or
sbb
cmpsb
lea
cmp
sub
push
lds
in
sub
outsl
push
mov
outsb
fwait
jp
adc
jo
fs
out
aas
or
sbb
push
inc
pop
scas
pop
mov
in
pop
mov
adc
inc
push
dec
je
stos
test
mov
add
aam
in
rorb
js
mov
xor
pop
ja
mov
mov
push
lcall
rolb
daa
nop
testl
hlt
cmp
hlt
pop
loop
inc
jl
jl
push
push
jmp
or
roll
call
xchg
add
sbb
mov
popa
xor
mov
mov
ret
mov
add
les
pop
xchg
das
mov
and
cmp
jmp
cmpl
lcall
adc
andl
repnz
jmp
sub
dec
subl
xchg
pop
or
gs
jns
enter
int3
and
rolb
daa
and
fsubrl
add
in
out
stc
rol
imul
shrb
jge
add
sbb
movsb
jl
pop
sbb
sbb
xchg
mov
xor
push
out
ss
inc
gs
jle
test
xchg
cld
cmpsl
xchg
xchg
ret
add
mov
cmp
jl
push
mov
mov
decb
enter
cmpsb
mov
int
pop
jmp
rcl
push
fstpl
fwait
and
push
fadds
jp
jbe
mov
jl
out
add
add
fdivrp
jbe
inc
shlb
cmp
jae
pop
sbb
mov
push
push
lret
add
mov
jno
mov
add
dec
outsl
cmc
mov
or
notl
xor
lcall
ljmp
inc
lret
and
inc
cmp
pop
inc
test
inc
cli
and
scas
dec
inc
sti
repnz
sbb
cmp
xchg
xor
fidivrs
mov
insl
pop
mov
dec
jno
jmp
daa
fs
scas
imul
push
sbb
test
push
imul
sub
sub
inc
xchg
and
stos
mov
or
into
jnp
sbb
int3
xchg
scas
rcrb
xor
pop
aam
jns
test
sbb
fldt
sub
cltd
push
lock
loopne
out
mul
mov
ret
fists
mov
jnp
push
jno
adc
sbb
out
js
dec
hlt
addr16
inc
pop
nop
pop
xor
mov
rcrb
out
mov
leave
popa
pop
ror
stos
pop
enter
shrl
outsb
adcb
inc
dec
fnstenv
mov
clc
cmp
int3
rcrl
or
jbe
popa
out
sbb
add
lods
inc
jmp
push
popa
outsl
not
stos
ja
jp
imul
faddl
jp
rorl
ljmp
and
add
loop
mov
mov
mov
out
or
pop
xchg
inc
fcoms
subb
pop
jae
pop
and
ja
imull
xchg
fsubr
sti
mov
jl
shlb
bnd
xor
adc
fnstenv
dec
ljmp
cmp
push
xchg
mov
sbbb
xor
test
nop
lcall
in
fs
lret
mov
imul
mov
loopne
cwtl
test
stc
popa
xchg
mov
adc
xchg
adc
adc
adc
loopne
mov
mov
ds
or
sub
adc
pop
and
popf
push
mov
gs
jbe
or
push
mov
jb
sub
add
dec
inc
cmpsl
inc
mov
aad
imul
xchg
mov
add
out
push
arpl
test
ret
jns
jae
fstpl
out
push
xor
data16
sbb
xchg
pand
lods
sbb
push
mov
and
sbb
cmp
fistps
cmp
subb
xor
xor
fs
fidivrs
jp
dec
xor
stc
jp
fwait
subb
xlat
jmp
lahf
and
outsl
iret
js
dec
mov
cmp
inc
fdiv
ret
loope
call
push
cli
mov
pop
add
cmc
jns
pop
dec
mov
jge
shll
add
in
shr
aaa
mov
xchg
mov
loope
aam
loopne
mov
ss
adc
jg
cli
jge
jbe
add
jle
mov
fstpl
pop
dec
or
add
lcall
sahf
movzwl
cli
sub
push
movsl
dec
add
mov
cli
fwait
add
loope
push
jl
in
and
imul
sbb
fnstcw
xlat
and
mov
pop
xchg
rorb
mov
inc
add
aaa
push
lret
jne
add
lcall
ret
inc
int
orb
jle
lret
cmp
enter
sub
and
mov
add
adc
and
mov
push
aam
stos
xchg
lahf
pop
mov
les
stc
xlat
cmpsl
mov
adc
xor
repnz
jmp
mov
pop
pop
ljmp
mov
add
push
dec
ror
pop
lret
pop
sub
daa
mov
mov
lahf
push
frstor
mov
add
add
enter
inc
pop
xchg
out
enter
imul
fs
xor
es
push
push
mov
jge
pop
ret
lock
jne
xor
cmp
mov
mov
aas
mov
mov
dec
mov
mov
xchg
dec
popa
mov
daa
test
inc
stos
mov
xchg
dec
push
les
repz
push
stos
lods
push
roll
xchg
jae
mov
in
daa
push
les
xchg
cmp
sub
insl
arpl
cwtl
jnp
sub
roll
push
in
inc
loop
mov
jb
push
insb
cwtl
dec
rolb
and
pop
push
add
scas
addr16
or
mov
jl
sbb
lcall
xchg
mov
push
mov
rcll
shl
std
aam
adc
rcrb
push
lods
andl
sbb
sub
imul
xchg
je
jnp
lock
ss
fdiv
icebp
or
pop
ficomps
add
enter
je
imul
cwtl
jne
mov
pop
je
and
xlat
fistpl
or
pop
cmp
sub
adc
cmp
fildll
mov
sub
sbb
mov
or
scas
jns
push
xchg
xlat
sub
jg
inc
gs
shrl
inc
sub
into
push
dec
ss
dec
lock
fisttpl
mov
pop
inc
mov
insb
rcrl
or
scas
jne
out
xchg
std
call
scas
loope
pop
mov
xor
mov
xor
push
adc
bound
dec
pusha
sub
nop
dec
mov
dec
dec
mov
rcrl
out
push
mov
xlat
pop
mov
cmpsb
jp
jae
call
lock
and
sub
cmp
xchg
push
inc
adc
mov
push
mov
fmull
in
addr16
inc
inc
xor
mov
fdivs
pushf
lods
dec
dec
dec
xor
notb
jbe
call
sub
and
daa
out
cmpsl
test
dec
xchg
cmpl
mov
mov
popl
es
mov
jle
ret
push
cmp
mov
sub
cmpl
shrb
mov
les
xchg
fwait
outsb
adc
addb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
jb
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
jb
addr16
bound
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
jb
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
rolb
addb
add
add
add
add
mov
add
add
mov
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
add
add
incl
jp
mov
jnp
je
testb
add
add
add
add
add
add
add
adc
incl
add
add
add
add
add
addb
add
add
add
add
mov
add
add
pop
fisttpll
push
add
jae
je
add
add
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
nop
add
or
jnp
je
testb
add
inc
pushf
jae
and
and
and
and
and
and
mov
add
add
pop
addb
pushf
js
jge
or
pop
nop
add
or
jnp
je
testb
addb
pushf
add
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
adc
call
out
sbb
cli
stos
or
push
and
test
adc
icebp
or
add
adc
add
jl
pop
mov
es
mov
cmpb
jnp
push
fldenv
add
add
in
mov
pop
pop
mov
pushl
call
push
push
clc
shll
aaa
movsb
or
push
das
cmp
movzwl
pop
pop
push
adc
pop
xor
mov
xor
call
jo
outsb
setl
add
add
mov
pop
sub
mov
mov
movswl
sub
dec
jmp
add
addl
jle
sub
cmp
jne
mov
stc
sti
iret
xor
jae
add
pop
dec
sbb
push
pop
movsb
push
push
or
pop
jmp
lret
cmp
adc
aad
out
push
or
stc
lds
out
cli
in
daa
outsl
ds
scas
out
inc
add
lock
out
push
dec
sbb
in
dec
mov
pop
dec
addl
xchg
dec
mov
dec
pop
dec
sbb
mov
mov
bound
push
dec
sbb
fcomi
xchg
mov
mov
lret
cmp
adc
in
out
adc
add
jmp
inc
sbb
add
cmc
iret
add
dec
xor
sti
lock
or
push
mov
mov
arpl
inc
fs
into
or
add
xor
adc
adc
inc
mov
sub
dec
dec
push
mov
ja
add
xchg
push
mov
add
or
fsubrs
add
outsb
push
xchg
xor
in
jne
add
stc
sbb
push
stos
std
movsl
pop
out
mov
mov
jle
pop
cmp
stc
or
jns
jne
fwait
cmpsb
jno
xchg
xchg
push
xlat
aaa
pop
mov
lods
xchg
sub
add
orb
cli
mov
cmp
xchg
sub
je
push
or
push
mov
cmp
test
mov
cmc
add
jbe
aaa
push
sarb
mov
xor
pop
push
js
inc
insb
cmpsl
xchg
lahf
push
int3
int3
push
outsb
and
mov
leave
stos
pop
sbb
les
push
adc
xor
out
fadd
add
pop
sbb
cwtl
sbb
sbb
stos
inc
daa
adc
cmpsl
xor
fwait
lret
cwtl
dec
add
pop
sbb
mov
pop
cmp
cli
scas
jmp
lcall
loopne
dec
jo
ret
fdivr
imul
and
lcall
pop
bound
sub
push
xchg
nop
cmp
leave
fldt
leave
stos
pop
mov
jecxz
mov
sbb
inc
lods
test
lahf
sbb
stos
inc
lret
xchg
fidivl
leave
stos
pop
pushf
jno
ja
mov
scas
outsl
lods
xor
pushf
iret
stos
jge
ja
push
sub
les
sbb
push
out
pop
movsb
pop
or
mov
adc
les
rorl
popf
ljmp
jle
push
jns
push
inc
mov
add
clc
stc
stc
popf
ljmp
movsb
addl
push
and
dec
in
inc
push
jl
push
outsl
sub
add
xor
push
shll
imul
leave
cmpsl
xchg
icebp
add
popf
ljmp
insl
enter
cmpsb
jnp
repnz
int3
repnz
int3
dec
mov
lret
xor
rcr
mov
outsl
mov
cmp
loope,pt
lcall
insl
lret
aaa
iret
fs
jmp
or
aaa
daa
scas
movsb
xlat
or
into
insl
movsb
outsb
mov
out
or
aaa
daa
scas
add
sti
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aam
aam
add
sub
jmp
mov
aaa
lcall
ret
aam
das
jb
bound
push
jno
xchg
cmp
pop
jne
mov
jecxz
andb
lods
imul
cmpsb
jnp
xor
cmpsb
jnp
mov
jnp
aaa
das
out
dec
cmpsb
jnp
mov
outsl
mov
xor
jnp
add
inc
mov
mov
dec
jp
fstl
rorb
jnp
mov
jnp
aaa
inc
dec
xorb
loopne
sub
jnp
mov
es
mov
jnp
aaa
sub
outsl
mov
jecxz
in
xor
or
and
xor
out
jns
cmpsb
jnp
pop
cltd
divb
mov
or
jp
sub
or
mov
mov
cmpsb
jnp
stc
lahf
pop
mov
jns
out
loop
iret
cmpsb
icebp
mov
jnp
aaa
divb
adc
xor
das
out
jns
cmpsb
jnp
or
jnp
into
jmp
sub
dec
arpl
and
mov
es
mov
jnp
aaa
sub
ja
xor
jp
xor
test
cmpsl
fucompp
out
lods
sti
mov
cmp
jle
xor
jnp
xor
cmpsb
jnp
sbb
push
roll
pop
loop
jbe
mov
adc
jmp
xor
lcall
jae
out
loope,pt
push
jmp
xchg
out
ja
cmpsb
jnp
lcall
jae
pop
jae
mov
leave
xor
leave
aam
sub
pop
push
sbb
pop
push
jmp
xchg
mov
dec
loop
pop
push
cmpl
sub
pop
push
sbb
pop
push
jmp
aaa
mov
insl
mov
jnp
aaa
mov
sbb
pop
push
sbb
loop
sub
test
pop
push
mov
scas
push
inc
ficompl
mov
jnp
aaa
cmpsb
pop
jae
mov
leave
xor
sub
pop
push
call
mov
xor
cmp
enter
mov
scas
lret
mov
mov
fisubl
or
push
das
insb
cmp
js
xor
jns
jge,pn
addr16
iret
push
and
sub
sub
mov
cmpsb
jnp
aaa
das
cs
xor
insl
mov
aaa
cmpsb
js
in
add
cmp
xor
enter
xor
imul
jnp
mov
mov
pop
into
pop
xor
mov
xor
outsb
and
cmpsb
cld
sbb
pop
cli
pushf
mov
aaa
das
xor
xor
shlb
mov
add
std
sarl
xor
arpl
movsb
leave
outsb
sbb
push
mov
ja
outsb
mov
jecxz
outsb
mov
dec
jmp
add
ret
aam
lock
push
dec
xor
cwtl
mov
mov
sbb
inc
loop
xlat
mov
pop
cmpsl
adc
pop
lock
aad
cmp
sbb
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
out
outsl
mov
dec
push
jnp
aaa
imulb
aaa
cmpsb
jnp
aaa
cmpsb
jnp
xor
jnp
aaa
cmpsb
jnp
aaa
scas
inc
mov
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
jnp
aaa
cmpsb
imul
movsl
add
inc
pop
aas
das
outsb
fisttps
add
xchg
pop
adcl
sub
jecxz
ljmp
sahf
aam
dec
lock
mov
push
cmp
adc
in
jg
les
stos
or
sahf
inc
cmp
xchg
repz
jp
std
inc
mov
insl
fldt
sbb
push
outsb
call
int3
push
jne
or
xchg
adc
fsub
outsb
dec
mov
mov
push
push
push
movsl
push
ds
fdivr
int
fldenv
inc
add
pop
ljmp
and
popa
add
enter
and
xchg
pop
mov
xor
push
subb
loope
int
push
inc
fwait
hlt
aam
jle
push
out
jbe
push
cltd
dec
loop
xlat
gs
mov
fiaddl
mov
mov
sbb
xchg
jbe
sub
outsl
cmp
add
add
add
or
add
sbb
cli
push
add
push
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cli
push
add
stc
push
add
add
add
push
add
add
add
push
add
add
add
push
add
sti
push
add
add
add
push
add
sti
push
add
add
add
push
add
sti
push
add
add
add
push
add
sti
push
add
add
add
sti
push
add
add
add
sti
push
add
add
add
sti
push
add
add
add
sti
push
add
add
add
arpl
cs
insb
add
jbe
jb
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
insb
ja
jo
cs
insb
add
jbe
jo
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
pop
cld
push
add
add
add
cld
push
add
add
add
add
add
add
add
cld
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
pop
gs
je
add
dec
gs
popa
addr16
outsl
js
add
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
push
gs
popa
insb
jne
inc
add
add
aas
xor
imul
popa
jae
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
cmp
add
or
sub
push
scas
sbb
in
pop
sbb
loop
hlt
dec
xchg
pop
mov
or
das
and
out
es
imul
repz
sbb
into
lcall
lcall
pop
jns
mov
dec
inc
repz
or
push
xchg
mov
in
icebp
add
xchg
clc
jne
scas
and
stc
out
inc
or
repz
mov
push
sti
jb
aaa
mov
mov
push
daa
clc
pop
mov
pop
pusha
sub
jg
test
lcall
out
cwtl
cmp
lea
fs
mov
add
push
adc
lcall
jae
push
fwait
imul
dec
testb
xor
jb
adc
in
jns
ja
jo
add
mov
xchg
mov
repnz
push
repnz
rcrl
fldt
push
cltd
xor
pop
and
lods
insl
add
and
rdpmc
addr16
rcrl
insl
mov
outsw
lcall
fs
rcl
and
mul
jle
fmul
cmp
orb
aam
std
push
and
ss
js
jo
mov
jnp
call
or
cmovo
sbb
fwait
je
mov
pusha
sti
ja
xchg
fs
imul
mov
jg
jle
mov
dec
jo
xchg
sti
pop
andb
add
push
sahf
sbb
pop
jmp
std
iret
mov
hlt
daa
mov
jbe
inc
test
fs
nop
dec
loope
out
jnp
pop
mov
dec
inc
ficoml
cltd
add
pusha
sahf
lea
lods
or
fwait
and
jg
cmpsb
mov
ja
insl
sub
ficoml
and
gs
test
dec
sti
mov
scas
out
mov
dec
cmpsl
lea
lock
xchg
push
enter
or
ret
cmp
pushf
xchg
dec
xchg
out
in
popf
cmp
mov
jp
jnp
clc
mov
and
add
xchg
mov
lret
mov
xchg
adc
jnp
loopne
mov
test
xchg
mov
cmc
fildll
and
lea
cmp
xlat
pop
cmp
add
pop
jb
addl
add
adc
or
decl
popf
mov
add
sub
jne
lcall
aas
or
popf
sbb
mov
enter
fcomp
data16
test
sbb
andl
or
mov
daa
pop
std
rcrb
and
icebp
pop
xchg
jecxz
add
insl
push
pusha
add
mov
cli
insl
mov
dec
mov
jg
jg
pop
lahf
xchg
nop
jb
jl
cli
sub
test
adc
out
pop
dec
js
sbb
xor
stc
bound
outsl
js
dec
fsubrl
and
mov
add
inc
adc
sub
cmp
jl
popa
test
out
fdivrs
out
fidivrl
ret
into
pusha
sbb
cmc
shlb
adc
dec
adc
gs
mov
sbb
ret
mov
jns
xchg
gs
inc
pop
testb
stos
lret
cmp
mov
iret
pop
xchg
jmp
pusha
stc
leave
repz
mov
or
add
cltd
int3
xchg
xchg
imul
dec
jne
out
les
out
jg
aas
leave
push
jne
jb
shrl
ja
iret
mov
lahf
xor
jno
cmpsb
mov
scas
dec
pop
inc
rcrb
jns
sub
mov
enter
cwtl
push
andl
mov
cmpsl
cmp
ja
or
outsb
roll
add
ret
addl
mov
sub
in
cmp
mov
enter
fsts
nop
fadds
in
inc
scas
aam
mov
test
push
sbb
popf
in
das
xor
push
lock
cli
imul
sbb
shlb
mov
inc
mov
cmpsl
cmp
out
nop
das
cli
push
add
stos
imul
mov
je,pn
adc
cmp
pop
adc
sbb
enter
jbe
cmpsl
sahf
cmp
jge
pop
or
mov
shrl
addr16
pushf
mov
jle
cmpb
ds
or
insl
mov
pop
push
pushf
push
xor
sti
jo
into
push
or
sarl
xor
lds
into
sti
shr
push
pop
fimull
jmp
aaa
mov
clc
loop
mov
jb
jmp
test
out
add
imul
fisubrl
and
push
mulb
or
ror
faddp
scas
lds
loope
jecxz
shrl
outsb
pop
js
add
dec
dec
sub
cmp
cmp
cmp
xchg
mov
pusha
inc
dec
sbb
add
xchg
pop
pusha
and
imul
shr
pop
cld
sbb
mov
ja
sub
bound
inc
out
imulb
jbe
and
out
iret
insl
out
movsb
mov
outsl
adc
dec
mov
xor
sahf
sahf
scas
push
daa
fstl
and
mov
scas
adc
ss
adc
pop
add
dec
in
test
imul
pop
out
loope
inc
mov
jmp
rdmsr
push
mov
fwait
mov
into
sub
push
loope
sub
add
mov
lods
inc
in
add
inc
dec
sbb
aaa
fs
stos
dec
popa
jmp
int
sub
inc
shlb
loope
jge
and
pop
or
pop
sub
cld
lock
pop
ret
loop
fs
mov
inc
scas
jns,pn
pop
aaa
xor
cwtl
push
mov
aaa
adc
out
sub
push
mov
imul
jecxz
mov
daa
push
jle
inc
and
std
xor
jmp
es
aad
cmp
lods
stos
inc
arpl
inc
dec
call
in
push
mov
jne
or
out
mov
pop
repnz
dec
out
fwait
inc
xchg
outsl
rorb
mov
cmp
or
dec
cmp
cmp
test
xchg
lret
scas
mov
push
mov
test
negb
pop
es
movsb
sub
mov
jl
pop
shlb
repz
push
daa
sbb
je
pushf
mov
lds
sar
out
pop
clc
inc
push
push
call
adc
sub
fisubl
mov
mov
xor
cltd
scas
xlat
add
push
lahf
fnstcw
out
into
int
je
outsb
mov
mov
das
outsb
mov
loope
lret
cmp
loope
adc
pop
es
push
jmp
xor
sub
xchg
ljmp
or
adc
in
ret
aam
mov
cmp
cmp
imul
test
add
push
push
rcrb
scas
push
jne
pop
out
and
jg,pt
roll
scas
ljmp
pop
decb
nop
movsb
jl
lahf
mov
std
jmp
and
push
jbe
cmp
xchg
mov
mov
ja
or
repz
push
mov
cmp
adc
or
pop
scas
mov
mov
stc
shrl
mov
or
inc
inc
sub
insl
imul
in
scas
push
sub
jp
jbe
or
jns
jle
or
sbb
rclb
add
jle
fwait
adc
mov
and
cmp
add
jecxz
add
adc
daa
sbb
ss
mov
push
jne
lock
in
loopne
es
inc
push
test
jns
in
bnd
mov
lods
movsl
sbb
inc
sbb
inc
ljmp
ss
dec
dec
negb
sub
push
pop
push
daa
adc
mov
inc
mov
gs
push
pop
es
jnp
out
mov
bound
sub
or
xchg
std
mov
int
cmp
cltd
and
scas
xchg
and
or
adcl
push
and
out
nop
jnp
mov
xor
insb
outsb
push
icebp
repz
inc
push
mov
fisttpl
and
lds
sbb
cmpsl
inc
sarl
repnz
inc
xor
mov
sarb
imul
sub
push
xor
xchg
mov
or
cmp
and
pusha
jo
add
xchg
adc
push
scas
leave
add
shlb
inc
xchg
andl
push
or
dec
mov
jg
sbb
mov
cli
or
mov
mov
loope
pusha
sub
xor
mov
pop
jo
test
pop
out
xchg
popa
xchg
aad
cmp
lock
pop
jle
jge
mov
imul
ret
cmpsl
push
cltd
mov
hlt
mov
in
mov
push
dec
xor
enter
lods
xchg
cmp
stos
fmulp
imul
push
mov
and
scas
nop
pop
pusha
inc
sub
jp
add
imul
xor
imul
fisubrs
in
movsl
clc
mov
pop
mov
pop
fildll
pop
sbb
data16
pop
inc
std
push
mov
adc
orl
ret
in
xlat
repz
test
test
and
and
outsl
cs
insb
testb
and
sahf
mov
ss
mov
push
arpl
sub
sti
and
imul
popf
cli
aaa
imul
jge
scas
rclb
dec
push
sbb
mov
fcomps
mov
mov
repnz
movsb
push
mull
push
and
inc
adc
jl
es
xchg
dec
shlb
bound
in
test
sahf
fistpll
inc
xchg
test
pop
xchg
incl
daa
sbb
and
clc
lret
jae
aas
out
xor
mov
push
sub
sub
inc
adc
outsl
dec
loopne
into
orl
push
call
sbb
test
xchg
xor
leave
roll
sub
outsl
sbb
pop
adc
and
mov
call
aaa
jo
inc
in
push
subb
aaa
add
add
jno
jge
xchg
pop
fildll
cmpsl
inc
add
int
lahf
je
stc
xchg
xchg
cli
jge
flds
xchg
mov
out
cmpsl
and
xor
or
xchg
ss
and
iret
inc
add
or
pop
rolb
sbb
in
jle
aaa
sub
push
imul
inc
and
loope
lods
push
dec
sbb
in
addr16
or
data16
shl
inc
mov
int3
pop
pop
jo
rcrl
push
pop
cmpsb
dec
adc
xor
pusha
pop
loopne
daa
xchg
adc
aas
fidivs
test
nop
xchg
fs
dec
xorb
decl
cltd
in
dec
or
mov
aad
movsl
pusha
add
cmc
fstpl
cmp
sub
jb
mov
mov
pop
xor
aaa
lods
jnp
stc
mov
inc
insb
iret
mov
shlb
dec
fnsave
inc
out
cmpsl
je
jns
or
subb
addr16
xchg
jno
adc
sbb
adc
lods
cmpb
pop
leave
push
mov
sbb
js
mov
dec
pushf
enter
flds
sahf
xchg
and
push
xchg
jecxz
adc
mov
jns
fnstenv
fisubrs
push
cmp
testl
pushf
inc
xor
dec
inc
aam
pop
std
push
push
daa
sub
xchg
push
shl
out
push
mov
jnp
jne
pushl
mov
cmc
cmp
popf
inc
popl
xchg
shld
xor
jne
ds
cmpsl
mov
sbb
in
cltd
inc
mov
int
stc
jo
pop
jb
dec
pop
in
cs
movb
dec
mov
xchg
pop
cmp
pop
xchg
testl
rolb
sub
jle
pushf
cmp
stos
fnstcw
xlat
jmp
call
pop
lock
or
or
inc
test
test
sub
sub
lods
stos
jg
xor
test
xor
in
pop
arpl
inc
cld
jns
push
push
push
xchg
dec
lock
add
ret
jo
jo
movsb
movsl
js
sbbb
xor
mov
push
and
mov
cmpsl
lea
or
dec
js
jb
mov
ficomps
dec
pop
roll
out
cwtl
xlat
and
jae
inc
movsb
bound
mov
push
and
xchg
cmp
aaa
pusha
xchg
push
movsl
imul
jmp
dec
sub
insb
popf
push
cmovge
stc
dec
lcall
out
insl
push
lods
jo
fcmovu
sub
call
loopne
in
mov
inc
push
fimull
xchg
imul
hlt
add
pop
std
fcmovnb
and
and
jnp
repz
pop
inc
fs
jle
aas
inc
je
out
and
pop
cwtl
xchg
xchg
cli
cli
aaa
push
cmpsw
rorb
cmpb
push
addr16
mov
fstl
push
adc
rcl
sbb
scas
jno
ss
jg
aaa
and
jnp
or
jns
adc
mov
fwait
push
stc
xchg
fdiv
pop
and
aam
mov
dec
add
and
jg
aas
fists
cmp
cli
add
adc
movsl
xchg
or
scas
add
fadds
rcr
popf
icebp
xor
cmc
outsl
insb
jnp
and
pop
and
push
push
outsl
aas
mov
loope
sbb
les
fnclex
mulb
imul
and
je
in
cmpsb
shlb
ret
jp
sti
incl
je
test
js
jae
pop
les
popf
fldcw
sbb
mov
aaa
xchg
ss
testl
lcall
movsl
mov
pop
adc
fsub
mov
adcb
lds
out
out
std
mov
pop
or
or
xchg
pushf
mov
pushf
enter
aas
out
gs
repnz
sbbb
add
pop
sbbl
stos
sub
pop
cmpl
pop
push
std
adc
push
and
or
xor
add
xor
jb
add
ret
mov
jae
mov
rclb
pop
xor
push
cmp
in
enter
and
insb
add
nop
insb
or
push
push
insl
aas
mov
xchg
loopne
inc
test
xchg
dec
xor
xchg
lods
insl
daa
cmc
adc
or
pop
in
push
ss
push
xchg
pop
jne
push
xchg
nop
cwtl
mov
scas
xor
inc
shl
hlt
lret
pop
inc
lds
out
sbb
add
pop
sub
inc
andl
or
in
ds
sub
xchg
sbb
or
inc
ss
rcrl
mov
pusha
and
push
arpl
and
in
xchg
inc
pop
mov
xchg
xchg
push
pop
adc
imul
adc
mov
test
xchg
imul
loopne
add
and
into
and
xlat
inc
test
fldt
mov
rorl
mov
push
repnz
push
mov
arpl
add
pop
movntq
fisubs
fistl
xor
fisubrl
lods
decl
push
stos
data16
mov
and
not
pushf
add
cmpl
repz
cmp
dec
xor
and
dec
xchg
pushf
push
pop
mov
shl
cmp
adc
mov
jne
push
xor
xor
push
cs
arpl
pop
cs
dec
repz
cmc
jle
cmp
arpl
es
mov
push
es
or
adc
cld
dec
sbb
jg
lcall
out
cmpl
cmpsl
xchg
push
jmp
mov
mov
add
pusha
pop
mov
scas
mov
dec
rcpps
mov
lret
mov
sti
in
adc
cli
mov
or
ja
xor
xchg
sub
xlat
ds
fs
cmp
cmc
enter
test
hlt
inc
mov
stos
sub
lcall
push
push
dec
dec
jmp
cmp
push
add
jl
fstps
outsb
shrl
jmp
clc
mov
push
movsl
out
insl
cmpsb
mov
popa
sbb
cmp
add
mov
call
jmp
inc
rclb
dec
pop
sub
pusha
sub
jmp
jl
cmp
repz
gs
mov
les
dec
shlb
jo
rorb
addl
cli
loop
jmp
mov
call
adc
inc
hlt
hlt
push
dec
mov
adc
push
movsl
pop
test
inc
dec
das
outsb
lahf
jo
std
stos
mov
push
sbb
push
sub
xor
jecxz
iret
jecxz
stos
push
jge
push
inc
lds
daa
and
push
xchg
out
and
pop
ret
pop
loope
addr16
mov
mov
cli
xchg
ret
jae
data16
mov
add
and
sub
push
mov
lcall
and
add
movsb
xchg
ljmp
mov
push
dec
pop
sub
loopne
or
xchg
mov
lahf
push
xchg
testl
and
push
leave
mov
xchg
aad
push
jmp
stos
out
clc
jl
aam
mov
xchg
call
imul
jl
and
dec
jb
popf
pusha
adc
test
mov
pop
push
sub
jbe
mov
enter
push
jge
cmpb
inc
out
test
fstpt
scas
movsb
dec
mov
xchg
hlt
ret
mov
rorl
cmp
push
jo
add
or
mov
shrl
cmc
inc
jmp
jge
adc
push
nop
cmc
out
xor
pop
push
es
shl
mov
test
scas
fisubrs
fcmovu
mov
jge
fcmovne
mov
adc
andb
enter
xor
jnp
and
daa
add
shlb
sbb
lret
pop
fs
lea
adc
xchg
and
push
mov
mov
jo
in
cmc
in
sbb
loopne
inc
es
fcoml
sbb
sti
or
jecxz
popf
lods
add
mov
aad
pop
and
sub
stos
ret
stc
sti
out
cmp
mov
push
movsb
stc
push
add
add
xchg
xor
or
adc
out
addr16
pop
addb
fcom
inc
addb
cmpsl
sub
loop
sbb
mov
fmulp
mov
test
push
xchg
insl
sub
leave
or
imul
add
push
aam
adc
adc
jae
lret
push
fstpl
xor
cmp
sbb
adc
sbb
bound
test
aam
and
jae
pusha
xor
subl
jge
hlt
jb
xchg
jns
insl
sub
push
out
jle
sbb
les
shrl
push
int3
inc
andl
aas
push
int
mov
sub
cmpsl
mov
sbb
add
adc
lcall
fcoms
inc
or
add
push
mov
mov
or
cmc
mov
pop
cltd
xchg
call
sbb
outsb
jbe
ljmp
sbb
test
mov
scas
pop
inc
call
pop
dec
mov
and
xchg
and
push
or
jns
xor
add
sbb
dec
popf
inc
daa
mov
cltd
lods
ss
cmp
in
jne
hlt
fstsw
popl
mov
push
mov
mov
cltd
das
repnz
lcall
ds
stos
push
push
and
pop
or
test
std
mov
fs
int3
push
sub
jne
add
push
ret
call
pop
jbe
shrb
iret
fadds
dec
or
out
mov
lret
inc
test
cmp
mov
ds
dec
call
sbb
push
stos
sti
pop
pushf
aad
test
and
add
fisttpl
jo
cmp
cmp
adcb
mov
or
aaa
into
mov
rorl
mov
mov
shrl
dec
es
sbb
sub
aam
mov
into
mov
roll
inc
and
pop
cmpsb
arpl
shll
mov
inc
adc
data16
or
pop
mov
inc
pop
jnp
xor
lahf
fdivr
enter
adc
xchg
adc
rcl
loop
adc
lock
mov
shll
jb
sub
lods
mov
sarl
idivb
jb
adc
cld
sarb
outsb
mov
xchg
push
inc
xlat
cltd
inc
popf
pop
in
push
dec
jno
out
adc
movsl
jecxz
jns
jno
mov
sub
mov
mov
or
jmp
cmpsb
cmp
into
movsl
adc
mov
xor
jecxz
add
and
jmp
lods
mov
shll
xchg
negb
lods
lods
ret
mov
xchg
and
testl
xlat
pop
sub
cmp
adc
xchg
pop
cmpsb
shl
mov
mov
aaa
and
push
sub
adc
sbb
push
dec
push
notl
mov
out
push
test
insb
addb
jnp
mov
inc
push
xor
outsl
cwtl
mov
xchg
es
not
xor
gs
or
nop
sbb
jle
sbb
jp
lcall
xlat
inc
ret
mov
xchg
jno
add
mov
movsl
pop
loopne
shrb
fcmovnb
fmuls
rclb
out
mov
shl
jle
gs
fs
jmp
add
imull
push
or
mov
jle
xchg
and
pop
pop
cmc
in
fimull
jne
or
sti
adc
jp
fldt
lahf
cmc
js
lods
pusha
jmp
stos
in
cmpsb
ljmp
mov
sti
add
mov
push
les
imul
pop
xchg
hlt
dec
mov
ja
test
adc
adc
mov
andb
cld
lock
js
mov
jl
icebp
sti
mov
xchg
dec
in
mov
dec
dec
test
mov
lock
aaa
adc
pop
test
icebp
xlat
imul
icebp
add
fistl
scas
mov
add
and
jmp
xchg
jns
test
sbb
insl
out
mov
jg
loope
ss
les
mov
movsl
stos
in
pop
push
lret
sub
aas
sbb
lea
or
xchg
push
or
movsl
push
pop
push
sbb
lahf
aas
pusha
outsl
mov
jmp
jg
or
test
and
dec
mov
aad
add
add
insl
scas
cli
push
ja
pshufw
das
pop
pop
and
leave
or
xor
mov
jne
inc
inc
xor
scas
fs
cmp
pop
jmp
sub
or
cmp
push
sub
lods
stos
adc
adc
and
in
jns
in
sub
stos
movsb
mov
dec
dec
mov
lahf
notl
dec
loope
das
jmp
sbb
sbb
mov
fdivp
addr16
xchg
mov
fcoml
push
lods
jnp
ss
and
lods
sbb
loopne
xor
loop
add
and
pop
pop
jle
out
jne
pop
push
jne
bound
lods
les
jl
nop
push
dec
mov
imul
ret
mov
movsl
aad
pushf
inc
sub
sbb
outsl
ret
test
stc
jecxz
inc
mov
pop
add
xor
or
push
cmp
push
cmp
push
mov
fs
adc
cmc
aaa
push
repnz
jmp
std
bound
sbb
dec
or
jb
push
mov
lock
movsb
gs
pop
add
repz
lods
fld
test
andl
aam
pop
pop
sub
push
aad
aas
cmp
adc
mov
sti
andb
pusha
xchg
pusha
loopne
push
and
clc
push
loope
or
lds
arpl
jle
fistpl
jb
mov
jge
xor
cli
addl
mov
adc
push
js
mov
mov
or
fs
sbb
repnz
pop
push
push
dec
or
es
xchg
mov
int3
dec
push
cwtl
js
icebp
xchg
sbb
or
pushf
sub
cltd
or
in
repz
mov
test
mov
sahf
scas
xor
sbb
pop
cltd
fisubrl
and
xlat
test
add
gs
push
mov
movsb
lret
out
rcl
cwtl
cli
js
or
cs
pop
pop
lea
out
fstl
pushl
pop
sahf
shll
lea
mov
xor
dec
add
aad
leave
jne
sbb
ljmp
pushl
mov
hlt
mov
xchg
jnp
sbb
cmp
and
pop
pushf
sbb
mov
pop
fstps
std
mov
je
lds
sbb
mov
divl
dec
jmp
stc
mov
pop
test
xor
and
mov
xchg
mov
rcr
popf
inc
stos
lods
jbe
test
fadds
fcmovb
fidivrs
cmp
sbb
pop
jae
pop
dec
stos
ret
mov
inc
lret
and
xchg
xor
lret
lcall
dec
sub
lahf
jae
out
cmp
call
sub
jp
xchg
dec
pop
les
push
adc
mov
imull
mov
jmp
sub
dec
imul
cmp
inc
sbb
mov
pushf
and
push
mov
mov
loope
outsb
xor
scas
dec
fmull
lea
bound
pop
test
sub
mov
cmp
sahf
mov
mov
and
repz
insl
js
jp
jmp
xchg
das
push
in
jmp
test
add
pop
and
sub
ret
xlat
cli
sub
add
mov
lds
adcl
pop
outsl
mov
fists
xchg
pusha
out
xchg
jmp
cld
rcl
popa
add
xchg
sub
sub
xchg
in
in
jns
out
lods
jecxz
test
jb
dec
sbb
mov
add
and
shrd
les
push
pop
rcl
sti
mov
daa
and
inc
cmpb
pop
mov
jnp
sbb
das
dec
push
add
mov
test
aas
insb
inc
xchg
clc
and
adc
dec
inc
cmc
mov
repz
aas
into
xor
les
out
jne
inc
add
in
pop
pop
ds
jge
ds
movsl
repz
out
rorl
mov
push
push
clc
outsb
aas
add
mov
or
pop
mov
and
pushf
cmp
sbb
push
pop
fistl
cmp
inc
mov
lcall
pop
test
xor
in
push
mov
imul
dec
out
std
pop
rclb
add
push
push
xchg
out
inc
push
sbb
cld
dec
pop
rolb
or
leave
dec
jo
push
push
in
sub
lahf
add
adc
sbb
xchg
and
aam
xchg
jbe
pop
mov
jnp
cmp
insl
lods
push
sbbb
sbb
push
xchg
and
cmp
or
or
jecxz
adc
ljmp
mov
dec
enter
lds
push
and
mov
mov
push
inc
lods
lock
sbb
adc
rolb
out
arpl
jnp
cwtl
jno
shrl
jecxz
movb
jno
iret
mov
andb
dec
dec
out
ret
into
cmp
pop
pop
iret
pop
fstl
int
sub
xchg
adc
xchg
leave
pop
cmc
outsb
aad
nop
hlt
std
mov
sbb
or
data16
or
xor
adc
out
call
call
lea
add
imul
push
nop
arpl
pop
cli
sub
je
iret
mov
mov
cmp
add
dec
add
xchg
mov
cmp
mov
xchg
jp
or
aam
or
repz
fiadds
pop
mov
cwtl
cld
imul
fs
enter
in
inc
mov
mov
inc
call
mov
fwait
mov
add
sub
test
dec
outsl
lahf
aaa
or
cmpsl
jl
out
testb
inc
jne
inc
aam
jo
sbb
movsl
test
xchg
rorl
jg
adc
insb
repnz
rolb
inc
fildll
adc
fcompl
pusha
in
xchg
std
in
sbb
rorb
gs
sbb
xchg
call
xchg
outsb
pop
jae
stos
test
shll
inc
mov
mov
adc
mov
push
mov
dec
test
mov
ds
mov
arpl
add
ja
and
imul
loopne
add
dec
outsl
js
notb
or
bound
pushf
daa
into
push
add
xchg
mov
aad
clc
stos
mov
cmp
test
sbb
dec
inc
dec
mov
jp
int
cld
fstl
mov
or
std
sub
jnp
stc
int3
xchg
jns
mov
dec
add
out
jno
out
loopne
jns
jge
sub
insb
dec
mov
stos
adcl
sub
mov
subb
test
cs
xlat
xlat
mov
dec
fwait
leave
and
loop
lods
push
xor
adc
mov
inc
gs
jne
les
icebp
or
pop
xor
testl
outsb
mov
dec
insl
pop
xor
push
aad
jecxz
push
cld
cmpsb
in
push
pop
lret
push
std
rclb
push
pop
orb
into
xchg
mov
pop
gs
out
ss
icebp
pop
dec
rorl
and
mov
mov
js
jl
xor
ds
cmp
cld
lea
jnp
mov
adcl
jmp
out
das
push
cltd
sub
fnsave
push
dec
test
cmp
aad
outsl
cli
faddl
jno
insb
and
push
repnz
push
add
add
mov
adc
mov
jnp
fdivrs
fwait
loope
fwait
mov
andl
or
mov
addb
push
add
mov
xchg
lcall
add
in
fcomps
aam
xchg
sahf
aam
repz
pop
adc
sbb
int
lods
mov
lcall
pushf
or
sbb
icebp
not
push
fs
push
andb
inc
rclb
call
bound
stos
orl
and
cli
leave
leave
jo
add
mov
js
pushf
lcall
add
add
fistpl
loopne
es
idiv
icebp
pop
sub
or
or
adc
icebp
xchg
stos
lods
lahf
loopne
and
ss
je
cmpsl
sbb
rolb
and
sub
cmpsl
sbb
push
lcall
aad
pop
xchg
cli
roll
mov
sahf
pop
movl
into
cmpb
adc
icebp
and
xor
mov
mov
jo
jb
pop
shrb
xchg
std
xchg
pusha
pop
fstl
in
bound
popa
xchg
sbbl
push
dec
in
xlat
xor
cmp
sub
in
ss
mov
ja
stos
adc
call
aad
cwtl
leave
mov
stc
jns
mov
stos
mov
dec
out
imul
mov
ss
loope
jmp
push
out
incl
pop
sbbl
clc
les
loop
xchg
mov
sub
cmp
dec
fsubs
fsts
lret
int
sbb
out
adc
jge
xor
and
push
pop
add
aam
jno
imul
mov
pop
push
addr16
cmp
mov
test
cli
mov
pop
jnp
int3
into
push
fisttpl
std
or
sub
clc
sub
pop
xchg
fwait
pop
inc
loop
rclb
add
dec
sbb
xor
mov
rorb
sbb
and
jnp
mov
jae
mov
nop
xchg
mov
jnp
sub
mov
mov
pop
fcmovnb
adc
push
lods
xchg
mov
popa
adc
adc
cmp
or
xchg
dec
inc
inc
pop
dec
and
add
lcall
or
gs
nop
ljmp
int3
jbe
frstor
dec
xchg
xchg
lock
inc
imul
add
push
sarl
push
xchg
jle
mov
xchg
inc
fs
ss
push
movsl
xchg
jg
pop
pop
and
int
push
sub
add
aaa
mov
loop
mov
cs
xor
insl
fidivs
leave
jns
xchg
mov
dec
sub
leave
adc
add
add
fwait
ds
sub
mov
cwtl
pop
and
push
and
sub
or
sbb
dec
jno
mov
cmp
inc
sub
sahf
rorb
fistl
xchg
lods
addr16
into
dec
pop
add
mov
pop
sbb
outsb
aaa
sarl
sub
insl
movsb
jo
js
inc
xchg
inc
mov
pop
ficomps
out
out
sbb
ror
lahf
loopne
mov
inc
stos
push
sub
push
test
mov
cmp
mov
scas
mov
lock
xor
mov
cltd
and
pop
pushl
ja
clc
in
stos
int3
mov
js
sbb
popa
dec
lret
sbb
inc
loop
xchg
add
gs
mov
xchg
into
mov
dec
jge
jge
mov
iret
loop
push
out
ss
sub
jnp
dec
add
int
mov
pop
pusha
clc
mov
and
jecxz
rol
aas
adc
ret
pusha
adc
sbb
nop
shrl
insb
push
cld
mov
adc
inc
imul
loopne
repnz
sub
insl
mov
fldl
mov
fisttpll
sbb
jle
adc
fldenv
xor
push
mov
js
mov
ss
test
xlat
xchg
mov
mov
es
pop
inc
shl
xchg
call
fwait
mov
ret
nop
shrb
ret
lret
adc
repz
push
or
roll
ljmp
sub
push
jl
mov
repnz
std
push
push
pop
daa
sub
xor
xor
mov
mov
mov
cmp
add
and
xchg
pop
add
loopne
jmp
mov
sahf
pop
adc
xchg
cwtl
in
inc
inc
subl
mov
fs
pop
mov
cmc
std
aaa
mov
push
call
sbb
das
andb
pop
and
dec
mov
shlb
aam
mov
xchg
add
push
je
push
dec
xchg
int
fldenv
or
xchg
loope
ret
dec
add
inc
jbe
cmp
push
fistpl
ja
mov
inc
int3
repz
add
outsl
sub
mov
ja
push
fwait
clc
pushf
push
pand
jo
dec
pop
filds
xchg
xor
test
mov
and
jns
les
lea
mov
xchg
or
adc
ja
lods
fadd
pop
int
ds
pop
adcl
mov
lahf
xor
sub
sti
call
sub
sub
mov
xchg
inc
pop
lods
mov
testb
sbb
imul
scas
mov
adc
sbb
cld
push
jb
push
push
pop
ficompl
test
sbb
mov
jne
jb
jle
sbb
movsb
push
or
mov
dec
imul
les
mov
xor
jae
cmp
repnz
aam
and
icebp
cmpsb
and
loope
std
rcrl
test
inc
and
daa
sbbl
imul
dec
jge
xlat
inc
inc
scas
mov
jno
push
cmp
imul
out
lods
dec
fidivrs
jl
rcll
call
imul
push
test
mov
or
push
dec
lods
aaa
mov
jmp
aas
jmp
sub
insl
jle
sbb
filds
daa
lods
icebp
popa
jp
or
mov
xchg
adc
mov
mov
adc
test
inc
clc
sti
enter
fidivrl
subb
pop
sub
fwait
out
bound
aam
popa
leave
xchg
out
enter
lods
add
sbb
cmc
xor
aam
adc
inc
push
push
mov
popa
sbb
lret
ret
pusha
and
adc
aaa
ds
or
sub
fimull
push
push
inc
in
push
lcall
lcall
mov
sub
xor
ds
call
fstps
or
xor
js
loope
push
fisubl
movl
dec
adc
sbb
lock
popa
pop
adc
adc
iret
xchg
add
jnp
ds
adc
push
pop
aas
fidivl
mov
call
cmp
pop
pop
jns
mov
push
add
inc
lea
mov
sub
iret
fsub
shlb
aas
movsl
jne
fisttps
xchg
adc
add
imul
dec
int3
push
mov
cmp
push
jnp
test
jmp
xchg
mov
pop
jp
add
out
dec
sar
repz
sbb
and
jmp
imul
loopne
arpl
jl
mov
mov
daa
mov
jle
jmp
cmc
lea
jae
and
push
sub
push
stos
mov
sub
mov
adc
jl
xchg
mov
pusha
fnstsw
adc
cmp
movhps
adc
pop
ret
test
xchg
cmpb
bound
cli
ss
daa
cmp
lret
inc
popa
or
pop
pop
adc
pop
pop
inc
jae
xor
pop
fwait
decb
inc
vpsrad
test
cwtl
push
dec
mov
and
lret
mov
cld
sbb
je
xor
imull
push
test
and
lods
pop
lds
pushf
aaa
rcrb
xor
cmp
shlb
inc
lret
xchg
xchg
fimull
xor
cmp
inc
lea
mov
pushf
stos
dec
adc
lahf
insl
xchg
sbbb
outsl
inc
clc
out
xor
jne
fisttpl
xor
sti
outsl
adc
or
cwtl
test
jl
xchg
push
xor
push
adc
push
sti
cmp
dec
int3
mov
lea
das
dec
mov
pop
xchg
dec
xchg
icebp
xchg
cs
push
push
jne
gs
sbb
stc
inc
out
jecxz
mov
daa
inc
mov
stos
cwtl
mov
jg
ret
adcl
test
inc
into
inc
dec
push
mov
lret
push
jns
inc
clc
or
lods
mov
popa
xor
add
jg
in
outsb
and
mov
in
adc
mov
cmp
cmc
mov
and
js
je
add
mov
stos
rcrl
pop
dec
or
dec
cli
push
fists
xchg
xchg
fmull
lcall
sti
leave
andl
dec
xor
push
sahf
les
test
mov
pop
aaa
sub
fs
mov
push
jnp
mov
inc
mov
ret
xor
and
sbb
mov
imul
icebp
insb
adc
idiv
ljmp
rolb
adc
cld
repnz
fmull
add
inc
add
sbb
mov
data16
fsts
insb
ja
mov
xor
pop
call
push
inc
pop
xor
aam
push
stc
or
iret
mov
mov
scas
or
push
pop
mov
insl
movsl
dec
stc
out
jmp
int3
adc
imul
mov
sti
or
mov
sti
inc
mov
xor
iret
loopne
out
sbb
aad
push
or
lods
xor
test
outsl
inc
pop
stos
dec
inc
push
insl
mov
or
imul
rolb
mov
sbbb
push
loope
xor
test
mov
test
popf
jp
in
repnz
mov
mov
sub
js
mov
jge
mov
sbb
sub
xchg
test
in
test
or
mov
or
pop
daa
cwtl
ret
outsl
push
add
push
test
insb
pop
shrl
and
jb
push
sub
and
jno
adc
in
add
cmp
imul
mov
loope
stos
sub
xor
xchg
sub
cmp
mov
jg
or
testl
xchg
push
jo
pop
xchg
fs
pop
pop
inc
aad
add
js
fadds
insb
pop
or
mov
push
cmp
fisttps
lea
lcall
jg
movb
push
sub
cs
cmc
call
lods
xor
jp
sub
mov
add
xor
pop
dec
adc
loopne
out
cmpsb
mov
aas
inc
daa
test
cmpsl
pop
jae
xchg
jo
inc
and
cmp
jno
or
hlt
jnp
adc
pop
sti
inc
das
das
jg
pop
aas
xchg
enter
mov
jne
add
lret
enter
or
fmuls
mov
cmp
mov
mov
mov
pusha
loop
inc
int3
adc
test
jle
xchg
cmpsb
in
lahf
outsb
jo
or
stc
testl
in
mov
imul
mov
and
sub
jo
xor
insl
dec
cmp
cmp
sub
je
mov
aaa
fnstsw
and
jo
inc
daa
ret
dec
mov
rorb
sub
xor
fmull
repz
pop
into
je
cmpsl
inc
rcrb
sbb
rorb
arpl
dec
jp
les
push
int
jo
insb
xor
lret
dec
loope
cmp
aaa
sub
paddq
ret
rcr
popa
shrb
xchg
mov
fs
aam
rcrb
sti
jle
lock
mov
pop
fsubrl
adc
cwtl
ja
xchg
xor
xchg
xchg
xor
fmull
add
imul
js
stos
xchg
or
jp
in
push
sbb
fdivl
push
jl
fs
xor
subl
cld
outsb
mov
adc
aam
xor
jnp
mov
dec
ljmp
dec
mov
jp
push
outsl
aam
xchg
aaa
jg
hlt
inc
out
hlt
imul
fs
sbb
mov
shrl
mov
push
mov
jb
inc
pop
mov
sbb
cwtl
das
add
es
push
rcrl
add
das
mov
push
cli
loop
xorl
add
push
ret
gs
test
jbe
push
lret
addr16
mov
into
movsl
mov
pop
adc
test
mov
movsb
popf
push
xor
loope
pop
mov
test
jns
shr
xchg
xchg
dec
enter
adc
mov
aad
fdiv
fildll
cmp
xlat
jp
les
loope
mov
rcll
cmp
mov
inc
insb
or
popa
inc
pop
jp
or
jle
mov
in
sub
in
push
and
mov
mov
sahf
xor
outsb
dec
dec
mov
and
les
or
mov
ds
xchg
inc
or
add
test
sub
jge
sub
cmpsl
scas
ret
and
add
out
shrl
out
mov
mov
stos
lret
movsl
lahf
cmp
xchg
mov
xlat
icebp
enter
jo
iret
sub
push
adc
insb
leave
sbb
test
and
mov
and
sti
js
fists
loopne
stc
fs
dec
jg
out
lret
imul
sbb
int3
add
mov
xor
ds
les
jo
fisubs
sub
sub
ret
aam
test
cmc
dec
dec
jae
popf
adc
cmpsb
insb
or
sub
mov
add
sti
add
mov
push
mov
push
movl
and
cmp
les
in
mov
mov
add
jp
pop
lock
dec
sbb
mov
bound
xchg
aam
push
shlb
xor
dec
lock
xor
sahf
adcb
mov
filds
mov
and
call
loope
cmp
pop
mov
adc
xchg
mov
iret
lea
das
loop
fbstp
int
cwtl
add
sub
mov
lret
rcl
xchg
test
sbb
inc
cmc
fxch
js
xor
and
xchg
cmp
or
repz
pushf
ret
in
mov
aam
mov
mov
xchg
jnp
dec
mov
in
lods
pop
push
jno
dec
test
cmpsl
mov
stc
xchg
aad
addr16
int
ds
daa
insl
fsubrp
test
xor
shrl
xchg
inc
xlat
xor
enter
fcmovnb
sub
push
ret
xchg
shrb
das
in
sbb
xchg
dec
out
pop
pop
xchg
xchg
cmp
mov
xor
jmp
sbb
fnstenv
xlat
mov
std
shll
imul
insl
adc
dec
sbb
push
jg
fnclex
ret
mov
outsl
lret
icebp
mov
movsb
fldcw
mov
sbb
pop
loope
loope
fwait
icebp
inc
mov
test
mov
rclb
and
and
rcr
sub
cmp
xchg
mov
outsl
xchg
popl
jno
push
jae
dec
nop
jb
push
mov
xchg
adcb
xor
dec
mov
push
andb
sbb
cs
mov
pop
pop
clc
ljmp
pop
dec
nop
sbb
call
or
subl
loopne
testl
xchg
and
lock
jo
mov
in
mov
jae
cld
fstpl
cmpl
dec
xchg
hlt
mov
int
into
xlat
idivl
shlb
loope
mov
pop
jb
add
pop
mov
mov
shrb
push
jl
test
adc
int
cld
outsb
xchg
xor
inc
pop
dec
fdivl
mov
mov
imul
test
leave
pop
movsl
leave
pop
adc
clc
xchg
mov
test
aas
push
mov
adc
enter
add
mov
sub
sbb
in
or
mov
and
adc
js
sub
insb
push
loop
push
push
lret
mov
in
xchg
pop
mov
addr16
inc
pusha
inc
jnp
and
add
shll
sbb
push
or
jno
adc
in
jge
push
add
lods
jns
dec
dec
mov
aas
leave
add
imul
mov
loop
mov
psubq
mov
cmp
and
xchg
pop
pop
sbb
ljmp
xchg
cmpsb
mov
jae
insl
scas
adc
ret
inc
fsts
mov
lret
pushf
xlat
and
stos
divb
jg
pop
dec
add
out
and
shlb
mov
pop
pop
jne
lods
add
pop
dec
je
push
pop
test
cltd
push
xor
push
push
cmp
push
in
scas
cs
lds
rorb
push
adc
ja
pushf
add
jb
cli
mov
imul
jo
testb
jge
push
jle
rcrl
push
jmp
inc
in
sbb
cmc
js
gs
aam
xlat
or
xor
xchg
pop
inc
test
flds
xor
imul
push
insl
rorb
xchg
aas
cmp
das
jl
popa
adc
lock
cmpl
into
loopne
sbb
ja
arpl
shll
outsb
xor
out
pop
insl
xchg
push
or
sbb
out
jns
ret
mov
dec
ficoms
hlt
roll
cmp
xor
lret
jno
repz
js
orb
movsb
pop
stos
pop
adc
mov
insb
daa
jle
pushf
vshufps
pusha
mov
test
iret
cld
jb
push
insb
push
add
mov
aam
gs
scas
mov
adc
jns
adc
fwait
and
push
hlt
cmpsb
in
add
es
dec
or
push
xchg
fstl
fldenv
sub
adc
xor
cs
fisttpl
mov
xchg
stos
adc
mov
gs
cmpsl
add
xchg
mov
add
insb
dec
cmp
push
js
sarl
sub
xchg
mov
sub
mov
and
jl
jo
mov
imul
lahf
loopne
inc
loope
jle
fwait
jg
jbe
arpl
imul
pop
push
scas
addr16
enter
or
inc
out
jmp
cmpsb
dec
sahf
and
popf
push
xlat
cmp
sub
ret
scas
push
sbb
mov
xchg
in
or
nop
cmp
loope
loop
mov
shl
je
pop
sub
dec
push
push
sbb
add
xchg
inc
or
adc
lcall
out
xorb
jo
mov
jns
xchg
pop
sbb
cmp
shlb
dec
pop
add
daa
in
or
aas
in
fnstcw
sbb
lret
xor
stos
sbb
andb
ljmp
cmp
jmp
jecxz
loop
in
icebp
repnz
into
cmp
pop
mov
outsb
push
lods
mov
jg
lret
arpl
or
add
jge
dec
rcll
stos
outsl
icebp
jb
in
jl
ljmp
push
or
and
sbbb
out
ss
pop
jmp
mov
xchg
or
cli
jge
push
mov
popf
ds
sarb
xor
popf
xor
cli
stc
outsl
and
lea
cmp
mov
mov
cs
sbb
sbb
enter
jno
mov
scas
emms
inc
iret
mov
and
pop
es
into
clc
fcoms
das
mov
and
das
push
push
adc
push
add
subb
xchg
insb
scas
pop
jp
mov
mov
inc
push
xchg
pop
jmp
mov
and
sbb
lcall
data16
repz
fdivr
std
or
mov
push
daa
sub
adc
jmp
repnz
mov
mov
sahf
mov
jbe
out
push
xor
and
aas
fcoml
push
jmp
rorl
sbbl
push
pusha
mov
rol
loopne
pop
sbb
pop
adc
mov
jne
push
loopne
dec
js
leave
std
shrl
push
cli
mov
jmp
sahf
or
mov
test
in
xchg
fists
in
push
jnp
push
xchg
fstps
test
rorb
or
mov
or
dec
inc
stos
mul
add
sti
pop
setne
jmp
repz
sbb
stos
lock
lock
xorb
daa
cmc
inc
pushf
imul
fisubs
sbb
mov
xlat
cmp
sarb
std
stos
fisttpl
fisttps
sahf
lret
scas
repz
test
mov
inc
dec
pop
dec
sub
das
xor
inc
mov
enter
movl
loopne
mov
jns
xor
add
mov
lret
lock
mov
jb
cli
add
imul
cmp
xchg
push
mov
mov
test
pop
jo
dec
inc
jle
in
or
sub
test
mov
mov
jbe
sbb
push
out
fildll
adc
ss
mov
enter
dec
das
data16
inc
js
testl
or
outsl
inc
and
mov
pop
outsb
pop
or
dec
mov
dec
mov
adc
shll
loope
mov
fiadds
mov
les
mov
mov
lret
or
sbb
and
arpl
add
imul
loope
imul
mov
clc
pop
mov
push
lods
sbb
mov
dec
shll
or
outsb
bound
movsb
adc
shlb
lea
dec
mov
rorb
xor
call
sub
addr16
adc
xor
or
pusha
clc
das
push
leave
xchg
cmpsb
xchg
shl
jae
gs
jmp
add
ja
je
mov
ja
push
xchg
pop
push
in
out
jbe
and
or
jmp
xor
inc
jb
mov
dec
clc
subb
or
xchg
jg
pop
out
inc
mov
mov
daa
enter
or
out
fdiv
and
mov
cli
out
das
loope
dec
push
mov
and
fs
pop
outsl
insb
push
xorb
adc
ret
cmp
cmp
or
xchg
push
push
repnz
jp
pop
out
mov
dec
and
jl
cwtl
sti
sub
leave
fistps
mov
push
movsb
pop
xchg
xlat
outsb
fsubrs
pop
adc
lret
xlat
inc
sub
mov
mov
lds
fldt
push
xchg
pop
mov
enter
mov
mov
stc
sub
lcall
clc
jo
xchg
mov
ljmp
sub
cmp
inc
rorb
test
push
shr
add
push
sbb
pop
push
das
lahf
xor
xchg
cmp
fsubl
