dec
xor
dec
xchg
sbb
cmp
add
loop
add
scas
inc
add
cmp
xchg
add
mov
adc
cs
or
push
add
cmp
jno
cmp
or
mov
cmp
ret
or
into
out
cmp
or
xlat
sbb
cmp
or
xchg
sbb
push
cmp
sbb
inc
xor
out
add
stos
ret
push
dec
sub
mov
adc
mov
popl
cmp
aas
cmp
lret
adc
adc
scas
popa
inc
cmp
leave
add
cmp
add
scas
mov
cmp
push
xor
xchg
adc
cmp
push
cmp
inc
cmp
lods
pop
cmp
or
push
cmp
or
test
cmp
cmp
cmp
ljmp
mov
ret
pop
cmp
add
out
pop
or
cmp
cmp
outsb
push
push
cmp
sub
outsb
arpl
cmp
push
cmp
mov
lods
jg
into
pop
test
jle
cmp
pop
add
shrl
ds
mov
push
nop
test
mov
adc
cmpb
mov
data16
push
cmp
cmp
fcoms
dec
and
cmp
jno
cmp
pop
push
or
cmp
mov
inc
cmp
roll
cmp
sbb
mov
and
cmp
out
cmp
push
inc
cmp
shlb
cmp
or
cmp
dec
cmp
lods
pop
cmp
icebp
pop
cmp
and
push
push
push
cmp
aad
cmp
mov
ret
cmp
scas
cmp
pop
dec
cmp
enter
sahf
xchg
cmp
in
cmp
sub
cmp
jbe
cmp
push
jl
push
inc
fidivrs
roll
xchg
es
cmp
cmp
cmp
mov
mov
out
fcoms
inc
or
cs
aaa
cmp
add
cmp
pop
lock
data16
jg
sahf
mov
out
xorb
sahf
jne
cmp
cld
cmp
jg
sahf
jnp
cmp
adc
jbe
out
cmp
jnp
cmp
push
mov
cmp
cmp
scas
and
out
cmp
cmp
xor
or
and
jp
xor
cmp
insb
cmp
xchg
loope
inc
fildl
cmpsb
les
cmp
call
add
cli
imull
cmp
cmp
inc
scas
inc
cmp
popf
dec
cmp
fwait
cmp
ret
inc
cmp
mov
jb
std
cmp
jl
cmp
add
sarl
mov
mov
fs
cmp
and
sbb
cmp
fdivrl
cs
dec
cmp
scas
outsb
cmp
mov
out
pop
jne
sarb
dec
cmp
sbb
cs
inc
xor
cmp
and
mov
xchg
cmp
adcb
out
test
and
cmp
sbb
fldl
scas
call
std
cmp
cmp
jp
cmp
rol
cmp
cmpsl
dec
cmp
pop
cmp
lcall
push
mov
cmp
cli
aad
idivb
cmp
add
push
cmp
outsl
jo
into
in
popa
cmp
shr
cmp
inc
cmp
daa
ret
int3
inc
ds
cmp
mov
cmp
in
cmp
sbb
fdivrp
cmp
cmp
out
sub
cmp
cmp
hlt
cltd
cmp
in
cmp
xchg
sub
cmpsb
nop
out
mov
cmp
cmp
pop
dec
cmp
adc
cmp
ret
push
cmp
and
and
scas
cmpsl
mov
scas
push
cmc
cmp
mov
cmp
insb
cmp
fstps
cmp
cmp
mov
add
out
adc
push
test
cs
cmp
out
or
imul
cmp
cld
lahf
cmp
sub
cmp
xor
dec
sub
cmp
gs
cmp
add
cmp
and
cmp
push
insb
cmp
cmp
cmp
stos
cmp
iret
sub
inc
add
lcall
ds
xlat
cmp
jbe
cmp
jp
push
xor
cmp
cmpsl
cmp
jns
cmp
push
sarl
aaa
dec
cmp
pushl
cmp
arpl
cmp
sbb
scas
cmp
cmp
mov
cmp
out
cmp
mov
cmp
push
outsb
cmp
or
cmp
lds
cmp
push
cmp
cmpl
mov
cmp
adc
cmp
aad
cmp
and
cmp
movb
testb
cmp
jg
cmp
mov
cmp
push
jns
bound
sbb
mulb
sarl
inc
fistpll
outsb
ljmp
out
scas
sbb
mov
jns
data16
cmp
push
cmp
lahf
cmp
push
push
cmp
rcrb
cmp
int3
ljmp
fldl
mov
cmp
cmp
cmp
enter
push
cmpsb
cmp
xor
cmp
xchg
test
lret
cmp
xor
scas
sub
out
sub
sub
cmp
xor
cmp
enter
push
cmp
pop
stos
cmp
sbb
cmp
ret
and
or
cmp
fimull
jle
inc
cmp
and
lcall
cmp
xor
cmp
push
push
cmp
lret
pusha
cmp
pop
dec
cmp
mov
and
movsl
sarb
int3
cmp
jp
ds
cmp
push
and
incb
sub
push
ljmp
push
sub
xchg
ljmp
xlat
jmp
cmp
mov
cmp
dec
std
in
cmp
xchg
cmp
inc
cmp
xchg
scas
cmp
mov
cmp
icebp
ja
mov
sahf
cmp
adc
cmp
fs
cmp
fdivrs
cmp
mov
cmp
stos
dec
cmp
mov
cmp
out
cmp
fsubp
cmp
xchg
out
jle
xchg
cmp
leave
nop
cmp
mov
clc
cmp
mov
push
cmp
aaa
hlt
cmp
push
push
cmp
lret
rcrl
cmp
jp
cmp
sbb
cmp
mov
and
mov
cmp
mov
cmp
es
jbe
jge
jo,pn
cmp
mov
cmp
out
fistpll
mov
pop
popf
cmp
aad
cmp
pushl
push
and
in
cmp
imul
scas
pusha
and
outsb
rorl
cmp
and
cmpb
xor
cmp
dec
or
push
dec
jbe
jbe
cmpl
data16
cmp
leave
push
cmp
pop
jp
scas
mov
cmp
fnstsw
dec
and
outsb
or
cmp
sub
cmp
fldt
outsb
mov
cmp
lods
mov
cmp
inc
outsl
cmp
jmp
cmp
outsb
cmp
mov
cmp
scas
push
popf
cmp
mov
cmp
mov
xchg
cmp
sub
cmp
ror
cmp
jbe
sub
cwtl
cmp
cmp
cmp
scas
cmp
jge
cmp
push
fidivrl
mov
inc
cmp
sbb
mov
mov
cmp
fidivrs
cmp
das
sarb
out
sbb
cmp
jp
cmp
in
cmp
mov
fstpt
out
sbb
scas
sti
xor
into
mov
jmp
xchg
push
xchg
and
sub
sarb
dec
cmp
sub
leave
cmp
orb
push
das
cmp
lea
sub
jbe
cs
pop
cmp
movb
cmp
jle
cmp
shl
cmp
inc
dec
cmp
mov
sarb
inc
cmp
movsl
fs
fimuls
push
cmp
pop
jo
xor
outsb
xor
cmp
aas
fs
data16
cmp
cmpb
in
ds
out
cmp
bound
imul
cmp
mov
cmp
xor
jo
jle
popf
cmp
data16
cmp
fisubl
cmp
scas
adc
mov
fstpt
jmp
push
mov
fidivrs
push
sbb
lcall
cmp
int
cmp
popa
cmp
inc
cmp
mov
cmpl
jle
inc
cmp
dec
mov
out
add
cmp
repz
mov
fnstcw
mov
cmp
mov
insb
cmp
ds
cmp
stc
cmp
cwtl
xor
cli
iret
mov
scas
xchg
and
lcall
adc
cmp
cwtl
das
cmp
mov
cmp
sub
dec
pop
adc
cmp
mov
mov
cmp
cmp
push
out
cmp
fimuls
cmp
and
cmp
loop
cmp
arpl
cmp
sub
cmp
mov
test
and
fidivrl
push
mov
cmp
push
xor
jle
iret
cmp
push
sbb
cmpsb
mov
ds
jnp
mov
mov
loope
adc
cmp
test
es
cmp
fdivrs
aas
sub
jle
int3
ds
mov
mov
test
cmp
xor
cmp
ror
cmp
or
mov
mov
fiaddl
cmp
lret
cmp
add
add
into
sbb
cmp
adc
cmp
ret
ljmp
pop
mov
notb
adc
sahf
pop
in
cmp
mov
movsb
cmp
pop
mov
cs
and
xchg
fstpt
mov
lcall
xor
cmp
mov
ds
roll
pop
js
sahf
ljmp
cmp
adc
mov
popf
ds
cmp
push
mov
pop
cmp
or
cmp
pop
lret
out
push
mov
ds
cmp
push
cs
jbe
or
pop
xchg
ds
aas
mov
pop
cmp
loop
cmp
scas
subb
lret
jmp
jmp
mulb
dec
cmp
cmp
mov
inc
aas
mov
repnz
sub
cmp
add
mov
js
cmp
ss
cmp
inc
mov
cmp
pop
aas
into
or
inc
cmp
dec
cmp
xchg
sub
cmp
insb
cmp
popa
adc
bound
insb
cmp
xchg
inc
cmp
sarb
outsb
ss
adc
cltd
lods
cmp
sahf
and
cmp
seto
mov
dec
sub
mov
sahf
out
cmp
ss
cmp
out
ds
jo
lret
cmp
and
out
mov
out
mov
cmp
inc
or
xchg
push
cmp
pop
ds
cmp
push
cmp
sbbl
and
cmp
push
fisttpl
into
xchg
call
cmp
cmp
cmp
addr16
stos
idivb
cmp
push
gs
pop
mov
into
xor
cmp
imul
into
cmpsb
mov
cmp
xor
loop
sarl
or
fsubrp
hlt
xchg
cmp
scas
push
sarl
loop
xchg
gs
inc
nop
lods
cmp
xor
fnstcw
xchg
fmull
dec
or
ds
sbb
xchg
ret
jecxz
cmp
push
cs
lret
sub
outsb
jno
cmp
hlt
mov
outsb
or
push
mov
sahf
xor
lret
cmp
push
cmp
ja
dec
shr
aas
mov
xchg
adcb
fsubp
hlt
cmp
outsl
cmp
mov
pusha
aas
jbe
sub
push
sub
xchg
idivb
decb
push
inc
ds
mov
cmp
inc
jp
outsb
loope
cmp
shlb
cmp
fwait
cmpl
xchg
daa
cmp
pushl
aas
jb
sarb
stc
ret
cmp
jbe
xor
mov
xchg
aas
faddp
or
and
cmp
arpl
xchg
mov
cmp
xchg
data16
pop
idivl
comiss
cmp
lea
push
int3
pushf
cmp
loop
cmp
popa
fdivrs
cs
sub
ds
xor
bound
ds
xchg
lret
xchg
push
loop,pt
lret
cmp
inc
mov
scas
rcr
xchg
test
cmp
mov
mov
loop
mov
cmp
pop
pop
cmp
ss
xchg
arpl
scas
out
jne
ds
cmp
pop
push
ds
add
ds
jmp
sub
cld
jle
out
lret
jle
cmp
int
inc
inc
cmp
mov
aas
cmp
sub
imull
jb
xchg
ss
cmp
jecxz
ds
jne
fidivs
inc
out
stos
hlt
cmp
fdiv
aas
dec
stc
xor
into
mov
xchg
cmp
sbb
aas
decb
stc
ds
push
cmp
mov
insb
cmp
mov
adc
jbe
cmp
fidivl
aas
fisubs
cmp
xchg
and
or
inc
cmp
xchg
icebp
aas
subb
cmp
inc
xchg
cmp
mov
inc
cmp
mov
dec
ds
jecxz
push
sar
inc
sbb
mov
cs
aas
aas
ljmp
aas
cmp
aaa
cmp
or
fcoms
jg,pn
cmp
cmc
cmp
repz
andb
ds
ljmp
ret
inc
mov
dec
cmp
pop
inc
mov
inc
bound
inc
js
aas
xchg
hlt
mov
cs
xchg
cmp
mov
inc
cmp
cmp
aas
mov
xchg
cs
ds
cmp
lcall
mov
mov
inc
push
mov
cmp
cs
ds
movsb
pop
aas
dec
mov
lret
cmp
cli
sbb
cmp
cli
jae
cmp
sub
adc
ds
inc
repnz
ds
imul
cmp
push
jns
sub
aas
andl
cmpl
mov
mov
cmp
push
mov
subb
cmp
outsb
addr16
push
mov
ss
cmp
scas
in
inc
dec
shll
ret
ds
and
push
mov
and
mov
cmp
rep
cmp
sbb
es
pop
cmp
add
cmp
ds
fwait
dec
cmp
inc
iret
cmp
ljmp
cmpsb
adc
inc
mov
cmp
adc
aas
into
mov
mov
inc
push
push
loopne
inc
shll
push
push
repz
mov
and
ss
das
inc
outsb
dec
icebp
ds
aas
js
inc
dec
mov
inc
push
addr16
mov
aas
into
mov
scas
cld
or
sub
inc
scas
sbb
inc
scas
pusha
cmp
mov
cmp
mov
push
fs
cmp
dec
pop
ds
adc
cmp
mov
aas
push
out
insl
cmp
stos
jo
outsb
repnz
cmp
xor
cmp
bound
fstpt
sub
dec
inc
mov
inc
lret
mov
pop
cmp
sarb
mov
adc
aas
cs
cmp
push
xchg
cmp
leave
aas
cmp
imul
imul
inc
inc
into
cmp
inc
sahf
jb
aas
dec
inc
mov
xchg
and
test
mov
imul
jne,pn
cmp
dec
aam
js
inc
mov
inc
outsb
sub
stos
cmp
ret
ds
sbb
bound
jle
cmp
cli
imul
xchg
xor
inc
push
out
loopne
inc
pop
xchg
cmp
negb
outsb
cmp
ja
inc
pop
xor
fs
cs
ds
imul
aas
and
inc
mov
test
ljmp
cmp
ljmp
jp
outsb
test
cmp
lcall
jbe,pt
leave
inc
push
out
inc
cmp
push
stos
sbb
imul
inc
lret
cmp
cltd
inc
jb
das
cmp
cmp
scas
sbb
stos
jnp
inc
imul
inc
fidivrs
mov
aas
repnz
std
cmp
mov
lods
cmp
pop
sbb
pop
test
imul
cmp
inc
and
mov
ds
test
lcall
aas
jle
pop
cmpsb
movsb
cmp
push
sbb
cmp
popf
pop
cmp
cld
and
aas
inc
add
fisttpl
cmp
fnstcw
jle
add
aas
inc
movsl
jb
cs
sbb
dec
lea
cmp
push
sbb
add
pushf
les
fdivp
int3
ds
shr
push
lods
ret
fstl
inc
sbb
and
inc
sub
dec
inc
jle
cs
and
hlt
cmp
mov
gs
push
sub
and
inc
push
and
mov
mov
mov
sbb
insl
cmp
jp
inc
into
dec
cli
cmp
or
cmp
adc
cmp
push
and
inc
add
popf
cmp
pop
int3
inc
sarb
ds
mov
cmp
ror
aas
repnz
gs
ret
cmp
jbe
xchg
negb
inc
cbtw
push
aas
cmpsb
lret
lods
aas
orb
ss
sarl
push
insl
es
push
mov
aas
dec
and
cmp
mov
testw
inc
outsb
push
jnp
scas
push
insb
inc
inc
cltd
insb
ds
mov
cwtl
lea
jne
cmp
mov
xchg
fnstsw
jbe
iret
inc
testl
cmp
je
ds
in
bound
and
inc
loop
inc
scas
idivl
inc
dec
mov
inc
xchg
flds
dec
mov
inc
inc
scas
mov
lds
outsb
jbe
data16
inc
push
loopne
sbbb
out
cmp
inc
inc
inc
pop
sub
inc
fistpll
cs
addb
pop
inc
cmpsb
cmp
test
inc
add
inc
xchg
into
push
ds
ret
aas
dec
pop
mov
inc
push
sub
cmp
call
cmp
xor
test
inc
and
cmp
js
inc
cs
lock
scas
sub
lret
loop
push
and
inc
into
dec
inc
cmp
dec
clc
out
mov
jnp
inc
push
mov
pusha
inc
ljmp
cmp
mov
inc
mov
stos
ds
nop
mov
popf
outsb
cmp
gs
xor
push
inc
dec
ror
ds
cmp
into
iret
inc
out
je
out
mov
fnstcw
push
push
fiaddl
xor
inc
mov
push
inc
mov
dec
inc
loope,pn
outsb
popf
add
outsb
mov
sub
xchg
cmp
mov
xchg
xor
cs
fs
push
add
inc
dec
adc
lahf
adc
pop
lea
test
mov
push
add
sbb
jnp
mov
cmp
cmpsb
test
insl
popa
inc
jb
sarl
cmp
nop
aas
outsb
mov
test
mov
mov
aas
jle
fidivrl
xchg
push
inc
outsb
leave
mov
inc
xchg
cmp
and
cmp
test
ljmp
cmp
scas
and
cmp
imul
aas
fdivs
cmp
or
inc
outsb
lret
aas
mov
push
imul
scas
add
push
ds
xlat
add
push
cmp
outsb
sbb
sbb
aas
cmp
cmp
mov
lret
pop
pop
cmp
outsb
push
jbe
orb
notb
inc
ficoms
addr16
xchg
mov
aas
pop
adc
into
sbb
inc
test
inc
out
push
fstps
aas
mov
cmp
fstpt
cs
and
push
daa
cmp
lods
enter
sarb
jle
sbb
pop
mov
inc
mov
faddl
jns
cmp
xlat
aad
ficompl
cmp
inc
fisubs
repz
inc
add
inc
scas
call
add
pop
pop
inc
xchg
jne
inc
fimuls
push
inc
fisubs
pop
mov
cmp
push
push
jmp
ds
or
sbb
mov
aas
mov
jmp
aas
outsb
lret
sahf
andb
outsb
stos
xor
notb
cmp
imul
movsl
cmp
mov
inc
push
loope
inc
mov
xchg
clc
aas
mulb
adc
mov
fisubrs
inc
outsl
lods
cmp
pop
inc
jle
adc
cmp
sarb
ds
ds
mov
push
lods
mov
inc
cli
inc
ja
out
leave
cmp
movsl
scas
aas
mov
outsb
mov
test
ret
rclb
inc
lret
cmp
inc
ret
incb
inc
sahf
pop
test
cmp
xchg
aas
jbe
cmpb
mov
lret
inc
push
cmpsb
pop
aas
cmp
inc
dec
mov
aas
push
mov
ja
out
std
dec
cmp
pop
and
repnz
aas
cs
inc
add
push
cmp
lret
inc
into
lods
fildl
out
enter
bound
xor
pop
push
mov
cmp
xchg
inc
scas
mov
cmp
add
or
dec
cmpl
push
aaa
push
inc
inc
push
fnstsw
scas
jns
inc
loop
sti
inc
cmpsb
inc
jl
data16
sbb
lret
xchg
clc
ds
or
out
push
gs
rolb
jnp
fisubrs
pop
cmp
ja
cmp
pop
repz
push
scas
inc
push
jecxz
inc
into
aam
inc
sbb
stos
cmp
into
stos
jle
sub
test
pop
leave
inc
lret
dec
inc
jecxz,pn
ds
sub
inc
mov
xor
inc
mov
aas
cmp
out
adc
repnz
xor
repnz
insl
cmp
pusha
mov
ds
flds
lcall
inc
mov
cltd
inc
xchg
sbb
xchg
mov
ds
and
inc
xchg
scas
test
inc
loopne,pn
inc
jbe
ja
or
jp
push
jbe
inc
mov
call
inc
inc
cs
cmp
adc
inc
mov
ds
cmp
aas
decb
cmp
inc
pop
sbb
into
cmp
mov
inc
lret
mov
mov
inc
push
cmp
inc
and
cmp
movsl
cmp
std
inc
dec
or
cmp
shlb
inc
mov
aaa
cmp
scas
or
cmp
cli
push
xor
rcr
jp
jl
jbe
jb
or
insl
jae
xorb
es
inc
bound
aas
mov
jb
aas
jbe
push
inc
lret
sbb
xor
out
int3
or
ret
jb
push
xchg
lret
inc
loop
aaa
inc
fidivs
adc
outsb
or
push
je
inc
mov
dec
sbb
cmp
aas
or
pushf
inc
lret
cmp
mov
cmp
adc
inc
es
and
mov
ds
jnp
push
lret
mov
mov
inc
push
adc
inc
jle
pushf
inc
push
pop
lahf
inc
cli
cwtl
pop
inc
fidivs
jl
cs
push
inc
lcall
inc
out
xchg
xor
fisubs
pop
ds
lahf
cmp
inc
inc
xchg
inc
cs
filds
lds
inc
into
push
loope
mov
loope
inc
bound
test
jbe
imul
pop
mov
cmp
mov
loop
push
pop
sarb
xchg
jp
inc
jge,pn
inc
pop
movsb
mov
inc
outsb
and
jecxz,pn
cmp
push
aas
xchg
cmp
pop
jns
outsb
mov
cmp
jmp
cmp
into
lods
pop
inc
ret
ds
pop
int3
ds
cmp
sbb
push
mov
mov
mov
jle
adc
ljmp
loopne
inc
mov
xchg
xchg
inc
ficoml
mov
outsb
push
mov
pop
cmp
jecxz
scas
decl
cmp
dec
int3
inc
cli
jmp
inc
push
fildl
fadds
push
push
lods
inc
push
lret
mov
inc
aas
ret
inc
ss
inc
lret
inc
mov
pusha
pop
inc
mov
mov
mov
roll
cs
inc
es
inc
ss
xchg
cmp
lods
imul
xor
jl
aas
push
scas
dec
inc
sub
inc
xor
inc
cmp
ret
ds
push
test
out
pop
cmc
cmp
xchg
xor
addr16
sbb
jle
xor
inc
cs
inc
sbb
into
out
add
inc
mov
cmp
decb
inc
fidivrs
mov
pop
jb
inc
mov
and
in
cmpsb
mov
outsl
inc
jle
jg
push
cmpsb
std
cmp
mov
cmp
es
jae
inc
lret
inc
into
lret
jae
dec
dec
mov
inc
scas
loope
inc
pusha
lods
cmp
clc
jb
scas
mov
mov
inc
scas
fstpl
cmp
sahf
cmp
cmp
subl
mov
cld
inc
shlb
xchg
cmp
stos
and
je
inc
cld
push
cmp
or
sarl
mov
inc
sub
test
incb
jle
cmpsb
loop
inc
scas
dec
bound
popf
add
jg
aas
add
inc
jle
adc
sub
cmp
mov
cmp
lret
push
inc
add
xchg
inc
mov
inc
xor
in
inc
push
ss
inc
insb
loop
push
push
inc
cmp
popf
jp
out
ret
sub
mov
je
outsb
out
cmpsb
ds
gs
cs
mov
inc
out
cmpsb
xor
outsb
push
inc
push
sahf
les
dec
pop
xchg
ds
bndldx
jae
ds
repz
inc
rorb
mov
inc
ds
lea
mov
or
decl
xchg
and
decb
cmp
mov
movl
fildl
inc
xchg
stos
cmp
or
inc
push
outsl
popa
inc
sahf
push
push
inc
test
inc
push
int
inc
out
es
scas
lret
mov
inc
ds
loopne
lret
inc
ds
inc
es
inc
adc
inc
push
daa
les
sbb
inc
repnz
sbb
loope
inc
cli
into
inc
inc
mov
gs
roll
inc
cs
sub
sarb
test
lcall
inc
ficoms
cmp
sahf
push
std
cmp
stos
dec
inc
sub
inc
push
test
jbe
es
push
mov
fs
push
jmp
push
inc
scas
cmp
inc
inc
push
xchg
sub
mov
inc
push
idivb
out
pop
cmp
loope
inc
ss
inc
push
fsubs
jmp
push
inc
and
inc
push
mov
cmp
andb
push
jp
cmpsb
cmp
push
inc
jle
cli
inc
xor
fs
scas
xlat
mov
or
aas
push
daa
cmp
adc
inc
out
push
test
mov
pushl
repnz
inc
out
cmp
lea
ja
push
mov
pop
inc
mov
cmp
lods
xlat
inc
out
cltd
je
ret
inc
push
mov
inc
xor
inc
inc
pop
sti
jl
jle
xchg
inc
push
jp
inc
cs
cwtl
cmp
in
mov
imul
add
ja
jbe
pop
inc
and
and
mov
ds
jbe
bound
inc
add
jae
and
inc
xor
out
sub
movsl
jnp
into
jne
inc
xor
mov
data16
mov
enter
xchg
inc
or
adc
cs
cmp
aas
mov
mov
push
inc
xchg
adc
dec
scas
pop
mov
shlb
mov
inc
push
popa
dec
fidivs
hlt
inc
outsb
loopne
inc
es
in
add
add
lret
movsl
addr16
jle
fildl
cmp
dec
and
inc
es
pop
dec
outsb
jne
dec
pop
jnp
xchg
movsl
cmp
mov
pop
cmp
outsb
insb
scas
cmp
add
push
fistpll
push
inc
cs
cmp
pop
dec
testb
inc
outsb
adc
jle
mov
fdiv
dec
dec
scas
les
and
dec
or
inc
outsb
fldcw
jbe
xor
sbb
in
out
cmp
push
cmp
ds
sub
adc
push
xchg
dec
mov
ret
jp
pop
outsl
dec
inc
scas
out
aas
es
push
inc
mov
cmp
jle
gs
fidivrl
outsb
sti
loop
scas
imul
cmp
aas
pop
mov
ss
repz
mov
mov
inc
out
hlt
jp
push
sub
or
inc
fisubrs
out
scas
pop
aad
push
jmp
push
idiv
inc
push
mov
ds
outsb
repnz
mov
movsl
inc
adc
aas
dec
jle
cmp
cmp
cmp
xchg
xchg
push
aas
ljmp
inc
out
outsb
inc
pop
insl
adc
into
mov
aas
adc
jns,pn
inc
ficoms
aas
inc
jle
cld
inc
mov
push
inc
push
jg
inc
lret
inc
into
aad
cmp
xchg
cmp
lods
jecxz
push
sbb
fsubp
mov
inc
push
mov
inc
out
ret
cmp
mov
addr16
inc
insb
scas
inc
inc
mov
ds
lods
cmp
aas
adc
loopne
cs
inc
dec
test
fidivrl
inc
push
sarb
cs
aas
inc
std
adc
rorl
scas
cmpsl
fdivrl
bound
inc
jbe
fisttpll
jne
cmp
and
push
dec
push
in
inc
or
and
inc
push
dec
ss
pop
inc
into
outsl
dec
cmp
cwtl
enter
mov
sub
lret
cmp
dec
dec
inc
fiaddl
inc
lret
inc
push
mov
aas
lcall
inc
lcall
cmp
scas
sarl
dec
ss
inc
jle
jne
push
or
decb
fildl
les
inc
bnd
inc
into
fstpl
inc
into
add
cs
inc
xchg
mov
fadds
loop
outsb
andb
dec
inc
dec
mov
imul
fidivs
aas
scas
adc
sbb
pop
outsl
inc
cmp
inc
repnz
dec
fsubp
dec
ror
repz
jle
test
cs
mov
dec
xchg
inc
push
ja
cmp
fdivrp
jo
rol
xchg
inc
jle
xchg
inc
cs
cmp
add
movb
popa
dec
sbb
out
cs
mov
add
lret
pop
cmp
and
daa
pop
cmp
cli
push
in
mov
mov
pop
cmp
adc
scas
xor
inc
cmpsb
cld
fisttpll
pop
imul
sbb
inc
dec
stc
out
cli
imul
mov
std
mov
ds
jne
jle
xchg
inc
push
in
inc
jle
push
inc
cmp
xor
mov
popa
cmp
mov
dec
cmp
test
pop
and
inc
push
daa
or
pop
insl
addb
dec
dec
pop
stc
inc
push
cld
inc
inc
jp
test
push
inc
push
in
cmp
pop
xchg
inc
cmp
inc
sub
cmp
push
cmp
jns
inc
mov
movb
sub
inc
mov
mov
cmp
mov
rolb
mov
cmp
mov
aas
scas
fwait
add
inc
jle
out
inc
push
cwtl
jb
pop
por
cld
push
inc
push
jne
inc
push
jne
inc
outsb
orb
cli
hlt
cmp
push
mov
sti
cmpsl
dec
mov
add
jbe
sub
scas
leave
es
pop
popf
lods
inc
push
add
inc
mov
add
inc
es
data16
dec
mov
addr16
pop
xchg
inc
fisubs
addb
cmp
loop
pop
inc
pop
pop
add
fidivrl
cs
cmp
xchg
and
pop
cmpl
sarb
stc
aas
scas
in
imul
xchg
loop
dec
sub
dec
cmp
inc
outsb
push
aas
dec
outsb
sub
cmp
xlat
dec
cmp
xchg
scas
mov
orb
xchg
mov
call
inc
adcb
push
inc
out
push
pop
inc
scas
std
add
inc
out
mov
inc
ficoms
inc
scas
rcrb
cmpsb
mov
dec
inc
or
inc
scas
mov
inc
ds
je
scas
xchg
adc
or
faddl
push
sarl
push
mov
cmp
jle
lds
into
mov
mov
testl
pop
push
inc
scas
push
decb
lret
aas
mov
lcall
lcall
inc
and
push
push
and
cli
sub
push
xchg
mov
inc
push
loopne
inc
mov
popf
je
push
js
dec
add
sub
popa
aas
push
push
inc
inc
scas
filds
imul
aas
loopne
pop
jae
inc
lcall
dec
dec
cmp
inc
mov
movsb
pop
inc
ds
dec
into
cmp
neg
fwait
inc
scas
and
push
dec
test
jne,pn
cmp
adc
inc
xchg
inc
inc
push
mov
dec
fidivl
dec
push
adc
or
scas
cmpsl
jb
ljmp
xor
inc
push
pop
sbb
daa
inc
xchg
cmp
testb
mov
sarl
push
mov
inc
adc
pop
xor
inc
sahf
xor
cmp
pop
cmp
mov
scas
iret
or
xchg
cmp
es
aas
inc
push
mov
dec
fcompl
out
inc
dec
outsb
pop
lock
xchg
push
sarb
mov
mov
cmp
fimuls
into
das
xchg
dec
pop
ljmp
loop
jmp
push
mov
inc
mov
add
add
add
add
xor
add
xor
sbb
repz
jp
add
test
mov
loop
pop
adc
add
fldl
mov
push
loop
mov
add
into
mov
add
xchg
int3
outsb
add
add
fwait
andb
or
mov
scas
cmp
data16
lea
testb
add
add
movsb
lahf
popl
sbb
xchg
xchg
inc
ficoml
ja
add
cmc
mov
push
add
add
add
test
push
xchg
add
fiaddl
cmp
cmpsb
sti
arpl
xchg
add
dec
adc
jecxz
not
leave
lods
fprem
lahf
imul
mov
cmpsl
or
add
add
aad
imul
repnz
hlt
cltd
cmpsl
mov
or
push
scas
xor
mov
daa
lds
loope
push
mov
dec
add
es
add
add
add
xchg
cli
xchg
add
add
add
pushf
pop
push
lds
lea
xchg
movsb
add
cltd
fcompl
cmp
sub
mov
lods
xor
jl
dec
add
inc
add
add
pop
add
add
bound
sar
fsts
jb
inc
add
out
in
sub
lret
div
or
add
adc
add
out
add
inc
add
xchg
lahf
dec
loop
cmpsl
orb
add
xor
add
sti
lcall
pusha
add
ja
dec
aas
ja
push
adc
add
aas
add
lods
fdivs
out
loopne
sub
repnz
cmp
je
fs
inc
jecxz
and
out
in
rolb
xchg
inc
add
push
and
xchg
add
addb
cmp
mov
imul
or
and
inc
int3
xchg
or
pop
add
add
fdiv
ficoml
cli
enter
inc
add
negb
add
mov
inc
fistps
add
repz
jle
outsl
mov
add
pop
aas
mov
aam
cmpb
push
or
mov
mov
mov
add
xor
pop
jp
and
add
scas
pop
add
in
adc
add
sub
fdivs
mov
push
fdivs
add
loop
out
sub
test
outsl
repnz
xor
add
pop
add
loopne
add
add
cmc
notb
xchg
add
add
sti
add
imul
lds
mov
lea
iret
adc
loope
mov
sub
call
mov
lea
push
push
push
push
call
shr
cmpb
jne
mov
push
push
call
add
and
xor
cmp
jb
lea
and
or
es
push
mov
test
je
shr
test
jne,pn
nop
leave
lret
or
xchg
cld
call
sub
push
add
loop
gs
sub
cltd
shl
and
add
les
pop
out
andl
inc
add
push
add
cmp
movsl
gs
sub
sub
insb
add
int3
inc
cmc
jb
mov
shlb
mov
add
push
add
adc
add
inc
add
cmp
imul
pop
dec
add
add
mov
mov
add
mov
mov
add
repnz
xor
ss
sub
repz
add
lcall
mov
jbe
cmp
xchg
cwtl
add
dec
add
loope
leave
daa
in
add
cltd
mov
add
jns
cmp
int3
pop
test
xor
sub
cld
imul
out
dec
add
mov
inc
add
add
add
add
jb
loopne
fwait
loopne
fisttps
das
scas
or
mov
dec
lods
out
xor
add
daa
stos
add
sub
or
ror
cwtl
mov
sub
scas
sub
or
jns
pop
xchg
add
jecxz
repz
add
mov
adc
jb
cmp
add
mov
fisubl
add
add
leave
mov
dec
add
inc
adc
sahf
or
inc
add
add
jmp
mov
mov
fadds
mov
data16
mov
inc
add
push
add
push
add
mov
mov
add
mov
mov
sbb
adc
add
jnp
cmp
loop
xchg
cmp
add
sub
hlt
test
add
mov
push
xchg
push
cwtl
mov
xchg
add
into
sub
lret
mov
stos
adc
and
add
pop
add
jnp
icebp
add
cmp
repz
add
sbb
add
add
xor
add
add
pop
pop
add
jae
fidivl
lods
lret
add
lods
ret
outsb
add
int
cmp
sub
xchg
iret
and
hlt
add
add
add
scas
add
mov
fiadds
pop
add
jg
jae
jo
jge
cwtl
fucomi
cmc
lret
or
sub
enter
cli
pop
mov
sbb
sbb
add
imul
add
add
add
add
pop
pop
add
movsb
add
lret
add
sbb
pop
cwtl
add
add
inc
add
and
add
inc
fdivrs
divb
fbstp
sahf
sahf
pop
or
cmc
dec
add
pop
inc
add
add
mov
or
stc
add
add
or
leave
xor
add
push
add
xchg
add
add
je
cmp
mov
pop
add
pop
add
mov
lcall
mov
mov
add
xor
add
mov
pop
add
mov
cmp
jnp
sub
test
or
out
add
shll
sahf
add
add
roll
stc
push
add
in
insb
add
pop
add
out
popl
adc
add
add
fwait
add
xchg
add
mov
adc
mov
jo
adc
add
cmp
cmp
add
stos
inc
add
mov
cwtl
aam
inc
sub
or
aam
adc
subb
jle
jecxz
add
jo
aas
std
pop
add
jae
out
call
add
int3
add
jp
dec
add
in
or
sbb
add
add
add
movsl
cld
mov
push
push
mov
add
inc
add
add
lods
movsl
cwtl
pop
add
add
mov
jo
adc
int
jg
pushf
into
icebp
scas
xchg
jp
or
or
jecxz
nop
insl
fisttps
shlb
add
int
mov
add
ret
push
daa
add
add
lahf
cli
dec
jnp
test
xchg
jno
enter
mov
add
jmp
add
mov
add
cld
cmc
jae
add
mov
sbb
les
mov
add
inc
add
pop
add
or
xchg
and
add
icebp
pop
pop
add
dec
inc
push
aas
call
or
test
lea
add
cltd
add
add
out
filds
add
movsl
xchg
popf
and
in
roll
sbb
in
mov
mov
add
incl
stos
or
jecxz
mov
push
add
sub
gs
inc
add
cmp
divl
stos
call
and
pop
cmp
mov
cmp
push
add
out
mov
dec
adc
sub
ret
inc
inc
add
add
sbb
mov
hlt
dec
arpl
add
and
add
add
xchg
mov
mov
int3
add
movsb
pushf
xor
add
test
add
add
add
scas
repz
add
push
add
adc
add
dec
cli
jmp
add
imul
xor
add
add
sub
mov
cld
jb
pop
jne
xor
stos
add
add
add
add
mov
in
adc
add
popf
pop
add
std
mov
and
add
aas
add
add
mov
mov
add
cmc
insb
add
add
add
sub
push
inc
add
add
clc
push
add
test
popf
repnz
mov
test
add
call
mov
int
fisubl
jg
aam
adc
add
into
xchg
xchg
xchg
xor
add
fldl
mov
add
fstps
insl
bound
out
adc
mov
pop
popa
push
add
data16
stc
mov
clc
pop
or
mov
enter
add
add
aaa
roll
add
cmp
lcall
shl
push
add
andb
push
add
jle
mov
popf
fmul
dec
jae
push
add
add
in
jno
cmpsb
add
stos
mulb
add
add
push
add
dec
add
cs
mov
sbbl
es
add
mov
pop
add
loope
adc
add
jb
ret
pop
loope
out
sub
fsts
aas
add
scas
aas
jnp
xchg
loopne
add
add
add
xor
add
adc
add
adc
add
add
sbb
mov
add
add
dec
add
mov
add
prefetchnta
mov
push
mov
notb
lock
add
add
push
add
add
add
add
ja
popf
aam
mov
add
adc
add
add
add
cwtl
ljmp
add
cli
ja
enter
add
mov
faddl
add
add
insb
add
and
add
jne
pop
add
add
inc
in
std
push
add
sti
ss
add
and
adc
xchg
dec
icebp
inc
add
ficomps
push
add
pop
xor
add
cmpl
xor
add
negl
add
add
insl
jno
xor
add
jno
mov
sbb
dec
add
movsb
int3
addr16
pusha
add
add
add
dec
add
scas
idiv
inc
clc
push
loope
add
jl
mov
add
adc
inc
add
push
inc
add
and
add
mov
loopne
icebp
sub
or
cli
pop
add
mov
add
dec
add
lds
cli
add
add
sbb
push
rcrb
cld
add
dec
add
pop
out
mov
pushf
jmp
ret
scas
pop
sbb
pop
add
sbb
cmp
cli
rcll
cmp
sbb
into
add
into
mov
inc
add
add
pop
das
and
mov
push
add
add
mov
jmp
add
loopne
push
add
rorb
lea
out
dec
mov
add
jns
aad
mov
stc
scas
gs
fcompl
lea
jge
add
scas
mov
pop
fstl
scas
or
sbb
push
add
cmp
das
pop
xor
or
repz
mov
out
push
and
add
jmp
add
fwait
movsb
dec
add
call
xchg
in
cli
insl
test
add
mov
cmp
enter
xor
add
out
je
sbb
add
cli
mov
repz
add
xchg
out
aas
lahf
lahf
rcr
fstpt
inc
jno
add
inc
add
push
rol
jns
das
call
add
dec
jns
xchg
mov
or
and
add
add
and
mov
add
jb
cli
rorl
add
dec
inc
add
add
loopne
sub
call
add
subl
add
add
outsl
ja
add
fwait
xchg
lds
cltd
add
or
clc
mov
std
adc
cmp
pop
add
adc
inc
adc
add
outsl
cli
pusha
add
adc
popa
ss
mov
cmp
inc
shl
lds
lahf
add
cmpsl
insb
add
sub
test
add
add
mov
sbb
int
test
mov
shl
fldl
lret
push
xchg
in
adc
add
xchg
sbb
dec
add
xor
add
loop
or
in
lcall
shl
pop
add
mov
push
add
add
mov
js
repnz
push
add
fdivl
push
add
dec
movsl
aaa
clc
add
inc
add
add
push
add
outsb
add
ss
adc
add
add
inc
mov
incl
pop
xlat
jns
sub
mov
jno
add
dec
push
mov
add
iret
scas
loope
add
add
repnz
add
pop
ret
or
add
sub
add
add
aaa
push
add
add
jecxz
add
jle
adc
add
movsl
sbbl
push
sahf
add
add
sbb
mov
add
test
int
and
add
in
dec
cwtl
into
and
add
enter
outsb
add
outsb
add
mov
sbb
xchg
add
cmpb
xchg
sub
subl
in
xor
pop
add
add
sub
scas
scas
mov
iret
cwtl
sbb
add
xchg
aam
ja
aaa
add
clc
mov
repnz
inc
add
lret
mov
add
mov
jg
fistpll
add
jmp
mov
dec
xchg
mov
jnp
pop
icebp
lea
adc
lods
push
in
or
cmpsl
lock
add
add
lahf
insb
add
mov
sub
in
jo
or
sub
jae
add
aam
je
mov
rcr
lret
mov
add
pop
adc
in
mov
sub
and
add
add
add
mov
add
xor
and
add
mov
or
lock
inc
add
outsb
add
sbb
and
cmpsl
fisttps
fldln2
inc
add
add
in
cmp
add
mov
ret
xor
add
scas
in
add
jo
dec
add
xchg
ret
cwtl
and
mov
adc
add
add
hlt
inc
icebp
mov
add
inc
add
jg
add
xchg
adc
mov
jne
lods
xchg
jb
jae
add
inc
add
sbb
lahf
cwtl
bound
sbb
lock
fadds
inc
fcom
pusha
add
cmp
jl
cmpsl
in
out
adc
and
add
sub
xor
add
push
repz
xchg
rcr
mov
adc
jp
cmp
cmp
xchg
xchg
add
mov
sbb
test
and
aas
add
add
add
jg
add
inc
add
jmp
jbe
mov
dec
add
into
add
jno
sarb
pop
lret
inc
add
add
in
xchg
repnz
sbb
and
cmp
push
add
cmp
inc
add
add
xor
mov
sti
mov
sub
fistpll
push
loope
add
push
test
xchg
inc
ret
xor
inc
add
out
arpl
add
add
push
add
add
add
add
inc
mov
int3
jg
xor
rdmsr
mov
and
add
push
xchg
cltd
dec
add
ret
or
stc
cmovs
lds
mov
dec
add
mov
in
inc
test
mov
add
jnp
add
push
adc
sbbb
add
outsb
add
push
mov
xchg
incl
dec
push
add
lret
cmp
sbb
jns
and
shl
bound
sbb
mov
fmuls
push
add
ret
add
ss
popa
push
add
in
je
inc
int3
mov
add
xchg
jecxz
add
leave
loop
outsb
add
dec
aam
or
cmp
cmpsl
add
add
cmp
add
add
add
mov
push
fwait
sbb
enter
jbe
xchg
sarb
loope
add
cmp
pop
scas
std
adc
inc
add
rcr
push
add
add
loope
add
iret
inc
out
add
jne
je
cmp
andb
jnp
or
push
add
lcall
test
jae
push
add
addr16
mov
mov
in
sbb
sub
or
nop
add
outsl
add
mov
scas
add
add
and
dec
adc
push
add
mov
cmc
sbb
xchg
add
push
add
or
mov
imul
jb
xchg
inc
pop
dec
add
push
add
in
shl
push
dec
popa
mov
mov
movsb
adc
add
add
add
pop
jbe
sub
movb
add
sarb
add
loop
add
dec
add
fbld
mov
inc
add
mov
add
add
add
xor
add
cmc
pop
add
add
jmp
add
arpl
pushf
add
sub
jge
int3
push
add
and
add
push
add
jo
jo
or
xchg
cli
dec
push
sahf
add
pushf
add
mov
add
std
adc
push
add
mov
pop
leave
push
into
repnz
mov
or
out
add
je
push
dec
add
jbe
cld
mov
push
fsts
push
xor
jg
xchg
add
add
add
cmp
dec
pop
les
add
add
add
stos
cmp
lret
add
push
sub
outsl
pop
cmp
out
sbb
jbe
aas
or
cmp
add
adc
add
pop
pop
loopne
insb
add
add
popf
test
xchg
cwtl
and
add
add
pusha
add
add
dec
add
les
leave
popf
and
inc
add
add
scas
push
add
push
cli
lea
shrb
add
stc
add
fildl
cmp
pop
add
cmp
jmp
add
lahf
mov
pop
add
mov
adc
add
cmp
js
mov
add
adc
jno
jae
nop
ret
xor
in
jle
clc
into
aam
push
add
mov
leave
mov
or
xchg
es
push
add
add
push
add
popf
cli
data16
sub
or
mov
jg
lret
push
add
xor
add
jb
stos
push
add
fimull
xor
xchg
movsb
test
push
lock
addb
add
push
or
mov
scas
mov
mov
imul
xor
add
sub
cmpsb
and
add
lret
add
add
stc
xchg
and
add
dec
add
es
add
mov
jl
push
hlt
jnp
ret
push
lock
add
dec
add
dec
add
inc
cs
mov
dec
arpl
dec
add
or
bound
mov
aas
adc
lds
and
jbe
jbe
jbe
adc
or
mov
sbb
and
add
mov
sbb
inc
mov
jg
jns
cld
and
add
add
xchg
in
sahf
cwtl
js
and
add
or
inc
dec
mov
add
add
cli
xlat
push
out
add
mov
subb
add
into
test
mov
aaa
jle
in
add
or
into
xchg
popa
lret
mov
ljmp
add
frstor
imul
std
sub
ficompl
add
ja
pop
cmp
lock
call
sti
add
lcall
add
mov
add
add
cmpsb
pop
insb
add
mov
pusha
add
cmp
out
xor
add
add
ret
fmulp
jno
add
mov
imull
ret
hlt
mov
ror
rol
bound
sbb
sbb
inc
add
mov
jecxz
scas
add
rolb
adc
sub
movsb
or
lds
out
mov
xchg
jbe
insl
jl
test
daa
add
xor
imul
in
push
add
mov
in
mov
aad
fadd
test
cwtl
mov
sbb
push
dec
add
fisubl
jb
mov
mov
addl
push
add
mov
mov
sub
hlt
add
shr
cmp
add
div
jb
mov
daa
add
add
add
mov
and
push
add
lret
popf
sub
fiaddl
push
add
aas
dec
add
xchg
add
jle
xor
add
in
out
outsb
add
insl
add
xor
add
xchg
cmp
dec
add
fucomi
lea
lods
push
or
in
add
dec
das
adc
add
out
mov
dec
add
inc
add
add
mov
js
adc
xlat
cmp
push
inc
add
fstp
xchg
mov
into
add
add
sbb
xchg
inc
cmpsl
outsb
add
addl
xchg
mov
add
repz
insb
add
push
push
add
ret
loop
in
mov
add
dec
push
add
insb
add
add
add
fildl
dec
add
enter
incl
xor
xor
inc
add
add
jmp
jno
cmovns
mov
xor
add
xor
daa
cmp
data16
cmpsl
cmp
add
and
lea
xor
add
movsb
inc
add
or
add
out
jne
out
mov
wbinvd
cltd
orb
add
aaa
add
pop
clc
add
and
addb
push
mov
lds
push
add
ret
test
lds
add
cmpl
test
sti
adc
mov
mov
mov
sub
fwait
sub
add
add
jecxz
fsubrs
mov
lods
fnsave
je
and
add
popf
mov
push
add
add
pop
mov
xorl
add
add
add
or
inc
add
sub
dec
add
sub
add
ljmp
add
mov
pushf
cltd
pushf
push
add
shll
jnp
add
das
jg
imul
cmp
icebp
fwait
jl
mov
test
insl
out
mov
push
add
add
add
outsl
jp
lock
jmp
mov
mov
add
add
mov
add
add
mov
push
add
imul
add
mov
jge
test
lods
add
add
xchg
loop
sub
sbb
add
push
add
insl
in
dec
lds
mul
mov
aad
aas
mov
popf
push
rorb
add
lea
pop
data16
or
xchg
sub
pusha
add
or
fidivrs
add
es
jl
popa
repz
add
int3
add
mov
push
add
adc
cmp
int3
hlt
xchg
push
adc
shlb
movl
loop
addr16
lahf
lods
loopne
aaa
mov
cld
xchg
jb
std
stc
hlt
and
add
or
mov
adc
add
add
lahf
add
rclb
dec
add
dec
jl
rolb
add
stos
add
mov
add
inc
add
lock
mov
push
adc
add
push
add
push
add
test
popa
adc
add
mov
mov
add
aad
cmc
sub
outsb
add
fistpll
fdivrs
pop
bound
sbb
mov
stos
cltd
fidivl
cmp
enter
gs
sbb
add
lds
outsb
add
adc
cltd
mov
jns
jb
test
add
add
sbb
sbb
repnz
in
faddp
fsubl
sub
pusha
add
insl
cmp
js
ljmp
jmp
xor
imul
sbb
mov
mov
sahf
add
xchg
int3
daa
jmp
ljmp
add
add
das
sub
fwait
cmc
negb
add
add
mov
lcall
mov
add
in
jae
jp
mov
mov
lret
inc
add
scas
push
out
xor
fstpt
add
jmp
shlb
mov
loopne
leave
cwtl
jg
mov
mov
push
add
add
add
jbe
push
add
loopne
inc
add
add
jnp
add
out
push
mov
sub
stos
loopne
cmp
add
add
aam
jno
pop
fdivs
add
das
mov
nop
add
movsb
scas
inc
add
jl
jae
fwait
xor
add
add
daa
jns
jns
arpl
lods
leave
add
lahf
add
add
je
add
scas
out
out
flds
push
jecxz
arpl
add
push
ret
jnp
daa
pop
add
mov
dec
je
jge
jne
add
cmpsl
mov
out
enter
ss
mov
push
pop
add
rep
xor
add
cli
mov
xor
add
add
add
add
xchg
mov
mov
insb
add
out
add
pusha
add
rolb
dec
sub
mov
lcall
mov
pop
xchg
aam
mov
add
cmp
xor
inc
add
add
std
mov
cmpsl
add
mov
loopne
int
pop
mov
xlat
add
or
or
and
add
mov
mov
mov
add
pop
add
add
faddl
cmp
iret
mov
stos
xchg
cmp
ljmp
add
xchg
mov
mov
add
int
pop
es
push
add
add
pop
add
jne
add
mov
add
fwait
mov
orb
or
ljmp
lock
arpl
add
pushf
hlt
lods
ljmp
ja
test
mov
xchg
xchg
push
cmc
je
jecxz
mov
gs
add
into
jae
add
dec
add
loop
dec
add
addl
add
cmp
mov
gs
add
add
adc
add
sahf
arpl
loopne
and
testl
or
daa
add
sub
out
pop
add
nop
xor
mov
add
add
sub
mov
xchg
pop
lcall
add
adc
adc
jp
hlt
add
xchg
mov
add
add
cmpl
add
sub
jae
loopne
cld
push
xchg
outsl
movsb
test
outsl
inc
into
jae
add
lret
add
add
pop
inc
mov
in
fcomps
lods
xchg
lret
pop
or
out
cmpb
jno
add
jecxz
or
add
add
dec
outsl
sub
mov
add
add
pop
add
data16
xchg
add
mov
test
lret
mov
testb
add
mov
jne
add
lahf
adc
cmc
xchg
mov
dec
add
dec
lods
fsts
adc
add
in
pop
xor
orb
rcll
add
add
inc
add
push
jo
add
pop
add
xchg
mov
das
add
jb
je
jb
jmp
xchg
out
cmp
stos
push
add
sub
xchg
stos
cmp
dec
add
xchg
jmp
mov
movsb
add
sub
pop
adc
aaa
faddl
sub
out
sub
adc
xor
jp
loope
mov
adc
add
add
xchg
push
add
push
add
sub
rcl
pop
dec
add
add
add
rclb
add
mov
sbb
add
je
out
inc
add
je
dec
add
cmp
xor
add
xchg
data16
push
xchg
mov
mov
sbb
mov
add
add
rcll
add
add
pop
add
add
add
add
aaa
data16
add
or
jp
adc
out
roll
mov
mov
fiadds
xor
add
inc
cli
stos
dec
add
add
mov
and
add
inc
add
mov
mov
popa
push
icebp
add
test
fcmovnbe
or
dec
and
add
mov
add
mov
icebp
and
test
out
mov
jns
dec
cwtl
gs
mov
rolb
addl
xor
fisttps
es
add
adc
add
cmp
xchg
xlat
inc
cmp
xor
add
add
add
adc
add
stos
add
je
cmpsl
fimull
add
add
or
mov
pusha
add
sub
add
add
jg
jbe
sbbl
add
add
test
shlb
arpl
add
mov
out
fsubr
sti
ljmp
sub
or
inc
je
adc
add
add
add
or
pop
sbb
mov
cli
test
push
push
adc
mov
sbb
cmp
loop
add
fcompl
jmp
add
pop
lods
mov
xchg
out
enter
add
mov
sbbb
adc
add
iret
shrd
mov
test
push
movsb
xor
sbb
pop
pop
add
pop
add
add
loope
pop
repnz
pop
sub
mov
lahf
int
add
pop
cmpsb
and
fwait
xchg
push
add
add
sub
insl
dec
mov
cmp
lea
add
push
add
test
addb
add
and
add
mov
ret
pop
add
testl
js
outsb
add
add
cmp
stos
mov
jmp
inc
add
addb
inc
fistl
in
dec
jne
push
add
pop
add
test
sbb
loope
push
add
ljmp
sahf
mov
add
add
pop
add
js
test
jp
clc
js
ds
mov
test
add
lcall
mov
lods
add
dec
add
add
fistps
add
add
push
xor
sbb
xchg
inc
mov
add
cmp
mov
sbb
fadd
dec
add
add
xchg
fsubl
cmp
shl
add
add
fistpll
ljmp
add
add
aad
mov
add
mov
sahf
ds
xchg
in
and
mov
pop
inc
insb
add
rcrl
cmpsl
cmp
xchg
movnti
cmpsb
pop
pop
add
push
add
add
add
sbb
mov
cmpsl
dec
add
mov
pop
add
add
mov
cmpsl
pop
ret
push
je
dec
add
jmp
clc
mov
add
sahf
xchg
add
and
pop
push
add
in
xor
insl
add
add
loopne
add
mov
inc
les
repnz
inc
add
dec
add
add
out
add
mov
add
test
push
add
add
insl
add
sbb
or
jbe
stos
add
lahf
cmp
push
add
mov
lods
jbe
adc
add
add
add
dec
pop
add
imul
aas
cmpb
xchg
fsubrs
add
jmp
xchg
push
add
sub
rorl
int
add
sbb
add
add
add
add
nop
jmp
insb
add
jo
adc
add
gs
cmc
testl
or
testb
scas
xor
aam
push
add
cmpsb
add
mov
jae
adc
add
add
add
adc
add
imul
dec
jmp
insb
add
jae
clc
fimuls
adc
add
mov
add
sub
jp
mov
mov
inc
cmpsl
fucomi
rorl
lcall
pusha
add
or
fwait
ret
sahf
lret
lcall
push
add
movb
mov
add
pop
add
push
rolb
add
mov
aaa
lret
pop
xchg
aaa
xor
ljmp
pop
mov
jnp
mov
dec
add
cld
into
int3
mov
insl
iret
cmp
ret
pop
mov
addr16
jne
cmp
jo
and
andb
movsl
inc
add
xor
pushf
cld
push
add
sar
call
xor
add
rolb
add
mov
add
inc
xchg
test
mov
add
hlt
add
outsb
add
push
arpl
add
xchg
stos
jns
cmp
std
stos
xchg
mov
cli
mov
test
inc
add
add
mov
add
add
scas
add
xchg
bound
loop
cmp
adc
mov
dec
add
add
imul
sub
mov
incb
mov
lret
xchg
mov
inc
add
xchg
inc
push
movsb
push
fwait
cmp
mov
jbe
lds
and
insl
sub
xor
dec
xchg
mov
or
jecxz
jnp
xchg
push
add
insb
add
ja
and
add
add
pusha
add
inc
add
data16
push
add
push
add
cwtl
es
add
cmpsl
fildll
sub
add
in
adc
add
pop
adc
or
mov
add
ljmp
adcl
xor
add
scas
aad
dec
add
incl
shrl
sub
rclb
pop
add
add
stos
add
cmp
xchg
sub
or
add
add
or
pop
out
or
cwtl
sbb
fstp
mov
test
add
and
rcrl
aas
aaa
test
add
jle
or
pop
push
xchg
add
add
filds
jg
out
test
add
add
jge
jmp
xchg
add
xchg
mov
in
mov
or
ret
stos
addb
dec
add
add
add
cli
pop
xchg
jb
add
xchg
add
xor
add
add
add
add
adc
add
ss
add
ja
repz
add
and
add
adc
add
add
cmpl
and
cmp
insl
popa
dec
sub
les
cmc
sbb
scas
insb
add
fadd
jo
cmpsb
and
add
pop
cmpsb
mov
add
repz
and
dec
inc
or
popa
inc
add
das
cmc
in
xchg
movswl
jns
rcrl
push
add
mov
add
pop
aad
cmpsl
icebp
test
add
outsl
out
add
adc
add
add
pop
and
push
add
fstpt
stos
nop
out
and
dec
pop
add
xchg
pop
add
jg
stc
xor
pop
loope
scas
inc
add
mov
jmp
mov
or
mov
repnz
cwtl
outsl
hlt
std
in
popa
lret
push
add
mov
mov
add
push
icebp
add
xorl
sahf
lret
add
pop
psrad
daa
inc
add
stos
add
cmpsl
and
add
bound
push
adc
mov
add
and
add
sbb
loope
aad
add
imull
add
add
add
inc
add
xchg
enter
sbb
and
add
iret
push
add
xchg
mov
pop
ljmp
add
out
sub
add
mov
push
mov
add
adc
add
add
gs
add
push
out
push
add
sub
jnp
mov
add
fistl
std
mov
add
add
scas
sbb
lret
add
xor
pop
and
bswap
insl
lods
push
add
sbb
test
ficoml
xor
dec
and
add
movsl
xorb
push
cltd
repz
push
pop
add
in
pop
cmp
neg
sub
xlat
sub
sub
add
pop
cmp
push
add
push
add
push
add
lahf
add
lods
data16
hlt
sub
ficompl
add
sub
push
add
sub
movsl
xchg
insl
push
add
pop
add
pop
add
add
add
add
sbb
orb
sarb
or
repz
les
leave
lods
xchg
dec
aad
mov
pop
pop
inc
add
lods
add
stos
insb
add
and
mov
enter
push
and
xchg
data16
mov
mov
inc
add
pop
add
xchg
add
add
mov
xchg
aaa
adc
arpl
add
pop
fistpl
int
gs
add
push
add
setbe
data16
add
or
sbb
mov
sbb
add
mull
add
jle
dec
add
xor
add
adc
add
test
mov
add
pop
cmpsb
add
arpl
imul
ss
add
add
mov
into
test
in
jl
imulb
sahf
movsb
jmp
outsb
add
pop
add
outsb
add
sub
sbb
std
cmpsb
push
rdtsc
test
fnsave
dec
add
stos
add
jnp
add
dec
add
xchg
push
add
cmp
mov
pop
subb
call
or
add
dec
test
add
dec
sahf
inc
cwtl
leave
xlat
shrb
hlt
push
fbld
fildl
adc
add
dec
popf
loopne
adc
outsb
add
add
mov
sbb
fisubl
xor
inc
add
jecxz
mov
xchg
out
in
fldl
in
inc
cmp
ffree
hlt
incb
addr16
add
stos
dec
add
add
jbe
mov
add
js
mov
add
mov
sbb
jg
add
ljmp
add
jae
jmp
add
add
add
jg
or
mov
lret
and
add
in
sbb
ja
sub
sti
enter
mov
dec
add
loope
sbb
inc
add
lods
push
push
add
xchg
mov
xchg
loopne
mov
add
add
add
int
clc
out
lcall
inc
add
ljmp
adcb
mov
sti
mov
add
push
fucomi
movsb
ret
add
push
add
insl
add
or
sub
cmp
imul
add
jae
scas
repnz
add
cmp
mov
xchg
mov
add
cld
sti
outsb
add
or
and
mov
fstp
mov
push
add
add
inc
mov
mov
ret
dec
push
popf
filds
fiaddl
dec
add
push
popa
cmp
xor
sbb
sbb
add
sub
or
mov
add
ljmp
dec
add
hlt
sub
push
test
mov
jns
dec
add
xlat
sbb
xchg
mov
add
cwtl
xchg
je
fnstenv
add
imul
jb
addb
loop
add
imul
loope
cmc
call
add
or
mov
mov
popf
jne
movsb
sbb
cmc
add
add
cmp
xlat
and
add
fcompl
add
push
outsl
jo
movl
add
or
icebp
andl
add
jle
pop
add
lods
movsl
cmp
adc
add
dec
ja
scas
add
sbb
adc
add
jne
rolb
icebp
pop
mov
lods
sub
lods
in
mov
sbb
sub
xchg
fdivs
dec
sbb
fisttpll
adc
mov
xor
add
mov
mov
and
sub
add
add
push
loope
cmpsl
jns
add
add
clc
add
nop
leave
fcmovne
inc
add
lret
add
add
push
add
lock
mov
xchg
jge
dec
aam
lcall
add
mov
inc
inc
add
sbb
inc
add
pop
pusha
add
jle
add
test
stos
in
data16
inc
add
cmp
int
mov
inc
stos
xorb
add
push
aaa
and
inc
add
stc
sbb
cwtl
add
mov
addr16
sti
in
pop
sbb
xor
add
xchg
dec
cmp
inc
add
xchg
lea
xchg
add
push
stos
test
lods
push
add
sub
add
add
cmp
stos
jbe
and
cmpsb
add
jmp
add
or
add
add
adc
jg
mov
jnp
mov
push
add
dec
add
add
xor
add
and
add
leave
jae
pop
pop
add
push
inc
add
test
bound
loop
mov
push
add
jno
jae
insb
add
adc
js
inc
jp
repz
add
inc
fstl
data16
pop
add
test
mov
clc
jmp
pop
add
ja
aam
imul
add
or
negb
add
add
mov
test
jp
lods
std
cmpsl
lss
xchg
cli
les
sbb
movl
add
loop
jecxz
push
add
add
std
add
dec
add
cmpsb
dec
and
add
push
add
xor
shlb
add
push
sub
add
in
sub
add
add
jg
push
pop
add
data16
rcrb
sbb
cmp
fwait
insl
pop
add
xchg
out
sub
pop
add
push
lea
and
clc
sbb
js
add
inc
add
add
add
add
pop
and
xor
add
add
add
xchg
push
add
xchg
fucompp
fwait
jb
sbb
mov
inc
jne
add
mov
sbb
cmp
jno
std
add
xor
jp
push
das
and
nop
sbb
or
pop
jbe
mulb
add
adc
add
pop
add
jle
jnp
imul
mov
sbb
inc
fucomip
sub
mov
into
mov
add
rcrb
je
lods
mov
mov
ret
test
adc
add
les
mov
repnz
in
inc
add
push
movsb
add
add
mov
add
add
dec
mov
movsb
cli
dec
or
mov
push
add
movb
add
add
xchg
loope
cmp
stos
lods
enter
mov
pop
add
sbb
mov
aad
add
cmp
push
add
jg
sub
test
inc
add
adc
add
fsubp
ss
add
jle
mov
loopne
mov
sub
addb
pop
dec
imul
add
fisttpll
pop
push
add
cmp
jge
xchg
mov
inc
cmp
jae
add
test
add
into
testl
scas
sbb
pop
ljmp
push
enter
add
inc
mov
sbb
fimuls
add
add
or
ja
hlt
cmp
and
add
mov
push
add
xchg
jecxz
inc
add
inc
add
or
and
mov
xor
inc
add
call
push
add
mov
andl
cmp
mov
add
add
or
add
test
or
hlt
stc
fnsave
loop
mov
or
add
pop
roll
rorb
add
and
add
aaa
jne
xchg
lahf
nop
adc
add
mov
xor
add
jecxz
or
push
add
and
add
test
jp
pusha
add
adc
and
pop
add
add
je
testb
add
add
clc
xlat
arpl
add
jns
dec
add
pushf
inc
add
sbb
xchg
stc
jbe
dec
pop
add
add
imul
decb
aam
add
icebp
mov
pslld
add
cmp
lock
test
sbb
mov
xchg
insb
add
sub
sahf
or
jmp
outsb
add
add
out
xchg
add
pop
cmp
mov
jne
insl
jge
add
xchg
mov
add
or
add
add
push
movsb
test
dec
pusha
add
adc
aad
add
idiv
mov
or
pop
dec
mov
add
add
push
dec
add
jl
pop
add
lret
lds
jle
gs
les
jmp
add
lea
sub
mov
and
add
and
pushf
add
add
lods
jecxz
in
xor
mov
add
popa
das
stos
test
das
mov
mov
jmp
outsb
mov
mov
lods
gs
add
add
mov
pop
add
push
and
clc
jae
call
mov
mov
lret
shl
cltd
mov
pop
int
mov
pop
add
stos
add
add
add
add
addb
add
xlat
imulb
or
incb
jae
add
jo
mov
gs
add
xchg
ret
mov
int
mov
xchg
fmull
mov
add
pop
add
lahf
add
insb
add
lds
adc
add
jno
gs
ret
jae
or
mov
and
or
add
aad
movsb
pop
add
les
add
mov
push
add
jmp
push
mov
shll
jle
dec
jnp
jmp
push
mov
lock
ret
xchg
and
int3
int3
add
add
mov
lret
xchg
xor
ret
mov
loop
repz
lods
outsl
stos
adc
add
popf
add
pop
out
xchg
mov
push
mov
lock
ret
and
push
and
add
clc
jae
mov
int
mov
stos
inc
hlt
clc
inc
pop
add
add
rol
movsl
and
add
add
add
and
push
mov
lock
ret
sahf
mov
add
add
stos
sbb
jg
add
mov
add
add
add
mov
adc
add
add
movsb
mov
adc
imul
cld
add
cmp
jae
cmpsl
push
pop
add
add
insb
add
add
adc
add
push
je
iret
push
xchg
add
add
add
push
jp
repz
clc
jae
and
es
dec
or
add
or
adc
add
add
movsb
or
mov
fdivr
ds
cltd
push
add
inc
add
mov
xor
push
mov
lock
ret
sbb
jae
add
repz
iret
add
mov
mov
lret
add
add
xor
add
or
push
mov
lock
ret
fisttps
aaa
call
jb
dec
loopne
add
add
or
mov
add
testb
enter
mov
add
dec
cmc
enter
or
clc
fldcw
aam
sarl
add
xor
adc
mov
lock
ret
dec
xchg
mov
jno
dec
add
xchg
les
in
add
out
aad
mov
repnz
jae
rclb
mov
and
or
mov
xor
fdivl
jmp
and
add
cltd
rcl
jno
daa
jg
je
fdivrl
add
jg
mov
add
inc
add
fmul
mov
arpl
push
repnz
jae
mov
mov
das
push
dec
in
push
incb
lcall
lds
hlt
add
test
add
xchg
pop
lods
add
loop
add
add
arpl
mov
insl
dec
add
dec
xchg
in
adc
fcmovnb
sbb
aas
movsl
in
daa
add
mov
mov
popa
mov
add
lods
add
xchg
clc
jae
es
dec
mov
mov
jae
mov
loope
clc
xor
add
add
and
add
add
cmp
pushf
cmp
loop
add
jns
add
add
pop
mov
jae
sbb
jae
mov
inc
xor
mov
add
add
add
in
adc
sub
lea
add
mov
cld
add
xchg
add
mov
jnp
mov
mov
ret
add
xchg
and
add
jg
jb
lcall
mov
orb
mov
add
and
add
aad
xchg
dec
add
inc
sub
stos
mov
add
pop
add
bound
xchg
clc
jae
mov
aaa
pop
mov
mov
mov
mov
mov
repnz
jae
xchg
adc
stos
add
lods
xor
hlt
test
add
sbb
jg
iret
jmp
shl
add
dec
add
add
add
add
mov
mov
mov
repnz
jae
bound
mov
dec
add
ss
add
ljmp
pusha
add
rcr
loopne
shrb
push
stc
je
push
mov
lock
ret
shlb
repnz
jae
dec
push
mov
sbb
add
sub
divl
mov
adc
leave
sub
add
je
sub
mov
in
repnz
jae
mov
shlb
mov
xchg
cmp
mov
pop
push
gs
push
add
add
imul
adc
sbb
pop
add
or
and
add
fdivl
mov
in
cmpsb
add
jmp
jns
or
mov
mov
add
mov
add
push
add
sbb
adc
fldenv
add
in
inc
add
push
mov
lock
ret
push
mov
pop
outsb
mov
test
add
test
inc
jmp
repnz
jae
arpl
dec
fbld
sbb
push
cli
sub
add
cltd
movsl
mov
incl
loop
xchg
jmp
jae
mov
push
sbb
or
xchg
pop
add
aaa
xchg
add
call
sub
aam
add
mov
dec
mov
dec
dec
add
dec
adc
add
mov
shll
es
cmpps
imul
add
add
jno
push
add
insl
cs
push
ret
mov
sahf
add
add
out
test
add
add
push
add
rcrb
adcb
notl
lods
dec
add
leave
sarl
stos
push
pop
mov
add
sub
popf
mov
rorl
add
jmp
movl
xchg
mov
add
add
add
cmc
fsubr
jno
jne
test
dec
nop
stc
xchg
xchg
jmp
subb
mov
aaa
es
outsb
dec
bound
add
pop
add
mov
add
clc
jae
dec
and
mov
rcrl
ret
dec
add
add
faddl
add
add
call
mov
mov
add
mov
loop
add
sub
push
fbld
mov
aaa
sbb
push
sub
dec
xchg
les
ret
add
mov
or
or
and
in
mov
mov
inc
add
xchg
ret
mov
mov
int
dec
das
sub
outsb
add
add
add
add
fstpt
stos
out
aas
cmp
lods
add
xlat
cmc
aam
add
outsb
add
lahf
sub
xchg
push
sub
add
and
int
mov
addl
add
test
nop
add
push
mov
lock
ret
aaa
mov
pop
mov
and
add
add
cltd
inc
add
inc
movzwl
repnz
jae
das
fisttps
sahf
mov
xchg
or
or
call
pop
and
clc
jae
mov
mov
mov
in
mov
aam
add
add
or
add
add
xchg
dec
and
les
jp
mov
add
int3
add
dec
add
mov
sti
xchg
cli
push
add
shlb
mov
push
add
loopne
pop
loopne
stc
lea
push
mov
lock
ret
adc
add
out
add
add
clc
jae
push
outsb
dec
mov
dec
and
dec
dec
cltd
pop
leave
add
lods
mov
push
lahf
ja
add
add
arpl
add
call
add
rep
push
mov
lock
ret
mov
mov
and
mov
xchg
mov
lock
ret
shlb
dec
mov
dec
push
arpl
push
add
jmp
xor
out
add
sbb
sub
popf
add
jns
add
stc
push
xchg
jmp
and
mov
mov
inc
add
arpl
add
bound
jle
fwait
out
cmpb
add
mov
ficoms
add
add
add
dec
pop
add
push
add
sbb
cmc
gs
dec
add
add
in
add
add
ret
movsb
movsb
fildll
add
or
lock
xor
repnz
jae
es
bound
xchg
lret
aad
scas
add
sti
mov
test
add
repnz
jae
and
shrl
add
ret
add
dec
add
xchg
xor
rolb
js
xchg
xor
fs
jmp
pop
mov
dec
sahf
or
dec
sahf
mov
imul
pop
pop
negb
add
xor
mov
add
and
movsl
ret
mov
pusha
add
sub
pop
mov
xor
ret
mov
mov
bound
add
sbb
add
push
add
mov
sbb
pop
add
add
add
pop
add
add
loope
add
mov
jle
add
ss
add
mov
pop
add
cmp
inc
movsb
mov
cmp
add
into
add
out
jne
jle
jge
xor
inc
add
add
xor
repnz
add
xchg
fdivs
lods
add
xor
add
jnp
mov
clc
jae
int
mov
or
push
mov
inc
pop
repnz
jae
sahf
call
mov
mulb
jno
mov
or
xor
sbb
cmp
lret
sbb
je
push
add
add
pop
lods
pop
cmp
and
add
inc
test
cmp
pop
jns
bound
ja
mov
cmp
cmc
adc
add
add
adc
mov
test
cmpsb
addps
pop
cmc
mov
add
add
mov
mov
in
inc
xor
sub
and
std
xchg
mov
jno
dec
int3
mov
outsl
pop
push
cli
add
mov
mov
pop
add
mov
ret
test
add
add
lahf
xor
add
and
add
xchg
mov
repnz
jae
sahf
aaa
mov
call
xor
add
add
add
out
add
mov
mov
add
add
dec
mov
dec
loopne
add
add
push
cmpsb
ljmp
in
cmpb
stos
or
cwtl
mov
mov
push
mov
lock
ret
shlb
mov
mov
inc
add
add
bound
dec
sbb
push
out
add
mov
add
imul
add
add
sahf
add
std
jle
push
fiaddl
in
xchg
jle
enter
add
inc
xor
repnz
jae
dec
mov
dec
shll
mov
roll
push
xchg
or
repz
add
leave
push
roll
jp
mov
sti
std
mov
fmuls
sub
mov
mov
dec
lods
pop
add
mov
repnz
jae
push
call
push
arpl
lcall
int
fmuls
loope
inc
add
dec
add
cmp
add
add
roll
out
xchg
pop
fadds
ficomps
push
add
sbb
mov
lock
ret
adc
push
dec
mov
faddl
clc
add
sub
fcmovnb
adc
add
add
outsl
xchg
xchg
cmpsl
pop
add
jmp
or
mov
dec
or
sahf
orb
inc
add
push
mov
lock
ret
mov
mov
dec
mov
add
cwtl
ror
push
and
jo
pop
inc
add
and
add
push
add
sahf
aaa
inc
add
and
add
scas
inc
add
xchg
ret
int
shll
inc
add
outsb
add
add
xchg
jmp
mov
mov
es
jo
mov
movsb
jno
add
or
arpl
add
mov
out
mov
jne
adc
add
xor
test
xchg
cmp
inc
and
dec
or
clc
jae
push
adc
pop
mov
outsb
mov
mov
or
and
add
xor
add
add
fildll
ret
push
add
sbb
repz
add
push
ret
repnz
jae
push
mov
pop
mov
outsb
xorb
aad
icebp
inc
add
xchg
fisttpll
add
clc
jae
xchg
and
add
xchg
jmp
bound
mov
mov
mov
mov
jmp
pusha
add
lods
pop
cld
add
call
xchg
jmp
mov
adc
dec
arpl
repz
call
ds
add
add
or
push
add
js
jmp
das
inc
xchg
jae
mov
and
mov
sub
jno
int3
mov
in
into
push
int
pop
xchg
pop
add
add
add
inc
add
inc
add
mov
add
and
add
xchg
jmp
mov
int
mov
push
das
pop
or
add
add
add
mov
fisttps
mov
mov
fcompl
adc
push
add
dec
add
cmp
fsts
add
add
xchg
xchg
mov
add
add
and
shl
xchg
notl
repnz
jae
mov
mov
xchg
bound
fcomi
out
pusha
add
xchg
add
inc
insl
mov
lods
inc
sbb
aad
add
insb
add
xorps
add
add
or
add
repnz
jae
mov
cmpb
mov
push
add
add
inc
pop
data16
rorb
mov
or
jmp
cmp
xor
sahf
mov
add
fists
add
sbb
xor
add
pop
inc
add
xchg
ret
mov
das
and
mov
add
cmp
add
inc
add
cmp
jmp
cwtl
loopne
mov
mov
jmp
dec
dec
aaa
mov
es
mov
mov
sahf
pop
mov
add
data16
dec
add
add
add
clc
jae
or
dec
bound
xchg
add
or
stos
jle
jns
add
xchg
jmp
rcr
adc
mov
subb
loop
cmc
enter
sahf
notb
mov
mov
push
xchg
jmp
jae
sbb
arpl
lea
clc
jae
mov
das
fists
mov
jle
sub
jle
mov
movsl
add
pop
push
add
icebp
pop
jecxz
mov
aaa
mov
mov
mov
fcompl
loopne
pop
push
add
pushf
aas
add
add
add
nop
mov
xor
repnz
jae
ffreep
adc
mov
stc
notl
push
mov
lock
ret
mov
mov
add
add
mov
lock
ret
int
mov
mov
ret
iret
sahf
and
add
add
add
pushf
mov
inc
add
xchg
ret
mov
sti
push
add
xchg
shr
xchg
jmp
pop
mov
sarb
add
and
add
add
fmulp
jp
dec
add
jae
int
shlb
aaa
call
add
jmp
lret
orb
push
bound
bound
dec
pop
pop
add
xchg
sbb
lret
das
andb
add
outsb
add
add
in
add
push
add
mov
filds
aad
add
insb
add
and
xor
ss
pop
xchg
test
add
imul
add
dec
add
xor
add
dec
add
inc
push
sbb
stc
popa
repnz
jae
mov
outsb
and
mov
aaa
mov
add
mov
add
sbb
rcrl
daa
cmp
nop
xchg
test
push
mov
lock
ret
and
dec
bound
mov
push
add
fistps
mov
outsb
add
cmp
and
mov
push
sahf
add
test
xor
aas
stos
stos
or
mov
pop
pop
sub
mov
add
dec
add
add
jl
flds
add
faddl
add
int3
add
mov
mov
push
add
pop
js
add
jmp
fnstcw
jp
mov
add
mov
xchg
jmp
dec
mov
adc
dec
call
and
inc
add
xor
add
cmpsl
xchg
push
mov
lock
ret
and
xchg
cmpsl
cmpsb
clc
js
xchg
mov
add
add
push
lods
add
add
fs
inc
in
js
aas
adc
mov
push
add
add
add
into
and
add
cmpsl
mov
stos
shlb
repz
adc
add
mov
inc
add
jmp
cltd
xor
add
inc
notl
repnz
jae
dec
es
fbld
jae
ljmp
push
add
jne
inc
pop
in
mov
xor
and
add
add
pop
add
lods
leave
push
jo
dec
add
add
add
inc
loope
add
addb
add
aam
mov
and
or
pop
cmp
sbb
iret
and
test
shrl
test
add
xlat
jmp
cmp
dec
add
iret
fdiv
push
cmp
out
enter
push
repnz
jae
pop
push
mov
cmpb
hlt
add
add
xorb
add
aam
add
add
adc
repnz
jae
dec
arpl
and
arpl
add
add
dec
out
mov
push
clc
int3
inc
add
add
lds
cmpsl
push
add
and
sub
mov
xor
add
in
jns
cmp
andl
add
mov
ror
adc
bound
shll
add
dec
add
add
add
adc
imul
mov
repnz
jae
bound
bound
jae
mov
sub
pop
add
jecxz
add
popa
mov
cli
popf
sahf
mov
mov
shl
jae
bound
dec
mov
arpl
scas
mov
xlat
testl
add
inc
push
repnz
jae
mov
mov
mov
mov
rorb
idiv
out
pusha
add
and
xchg
add
add
add
push
adc
add
add
add
dec
add
dec
add
loop
jle
dec
fnsave
push
jp
insl
pop
add
fcmovnb
sti
call
in
mov
cltd
adc
add
mov
int
and
xchg
push
add
icebp
rcl
addl
in
add
cmc
add
add
add
push
add
push
jl
mov
add
or
jae
add
in
add
add
push
add
sbb
ret
add
mov
mov
mov
scas
scas
mov
clc
jae
push
mov
int
mov
sbb
xor
add
xor
add
sbb
fldt
out
pusha
add
xor
add
mov
insl
test
fnsave
mov
enter
push
add
mov
push
mov
lock
ret
push
int
mov
and
push
add
mov
inc
add
push
mov
adc
add
add
xor
add
push
add
mov
scas
push
add
adc
loop
xchg
jmp
or
jae
sbb
sbb
sbb
mov
lea
sub
fisttpl
jmp
mov
adc
or
call
add
jno
repnz
jae
fbstp
mov
add
addb
mov
cmc
add
ljmp
rcrb
and
lret
sbb
add
xchg
and
push
mov
lock
ret
pop
and
mov
arpl
cmp
mov
lock
ret
outsb
adc
sahf
outsb
orl
mov
mov
arpl
add
sbb
add
lock
mov
lock
ret
mov
shrb
mov
mov
push
pop
add
add
add
cmpsb
add
ret
jno
rcrb
imul
dec
lods
fsubrl
add
xchg
int3
lcall
jge
fwait
push
add
add
shl
aaa
pop
add
push
add
clc
rolb
add
es
add
popf
dec
add
test
aam
aad
add
xchg
scas
arpl
add
mov
push
add
cli
frstor
in
add
call
add
adc
or
xchg
mov
add
lods
mov
loopne
add
add
imul
mov
xor
sub
lods
push
add
sub
imul
add
mov
sbb
out
cmc
je
add
dec
add
dec
add
add
mov
outsl
adc
aad
push
sbbl
outsb
add
add
decl
enter
test
add
add
xlat
rcr
aad
cmpsb
idivb
adc
add
jns
dec
add
adc
inc
add
xchg
ret
dec
or
mov
push
xchg
popa
add
pop
add
add
push
mov
lock
ret
rorl
cli
cmp
gs
add
xor
repnz
jae
or
push
push
call
mov
add
data16
cmp
push
add
lock
add
add
in
add
mov
movb
jle
in
lods
dec
add
mov
pop
sub
inc
pop
loope
xchg
ja
jo
mov
jmp
mov
dec
int
xorb
test
sbb
filds
add
add
xchg
jmp
mov
jae
mov
arpl
cmp
ljmp
and
sti
or
add
clc
jae
mov
mov
fildll
mov
clc
jae
push
int
and
dec
and
add
add
xor
mov
mov
cmc
je
je
in
mov
ret
push
add
add
nop
dec
cmc
pop
nop
add
add
in
into
add
or
lock
mov
mov
push
add
stos
loop
add
add
add
stos
add
mov
push
add
shrl
mov
hlt
lods
aas
xor
add
pop
mov
mov
mov
sbb
pop
add
mov
mov
add
dec
push
scas
pop
push
add
cld
aaa
cmpsl
add
add
add
add
push
add
jg
ja
or
pop
call
jmp
arpl
dec
mov
out
sbb
lods
mov
ja
add
mov
push
sub
aad
bound
fisubs
add
add
dec
add
fisubl
in
popf
in
pop
loopne
jl
add
mov
cli
sbb
sub
jno
add
adc
scas
ljmp
ja
ret
cmp
jno
fcmove
inc
jae
jecxz
xor
cmc
enter
xor
and
imul
mov
pop
loope
add
xchg
mov
push
mov
lock
ret
adc
mov
mov
dec
add
xor
cltd
inc
add
sahf
imul
push
mov
jb
leave
xor
jno
inc
add
jmp
and
mov
arpl
xor
xchg
mov
repnz
jae
shll
mov
jo
daa
ja
fisttps
xor
add
add
in
std
sbb
xor
add
pop
xchg
movsl
repnz
jae
mov
bound
sbbb
add
add
jns
and
xchg
jmp
mov
outsb
and
push
scas
out
pushf
ljmp
adc
loope
add
add
xor
add
int3
add
sub
cld
sub
out
int
add
dec
add
push
adc
add
or
aad
mov
add
sahf
out
cmc
cmpsb
cmp
insl
daa
xor
add
push
add
popf
mov
add
and
rcrl
cmc
test
xchg
clc
xchg
mov
add
add
add
xchg
mov
outsl
push
fsubrl
cmp
aad
or
mov
add
mov
decb
mov
lock
ret
mov
mov
add
pusha
add
add
inc
add
add
add
add
fcomp
lods
and
add
add
gs
mov
loop
add
pusha
add
xor
add
add
xchg
add
testl
adc
gs
add
xchg
push
add
jl
mov
pop
add
add
test
push
mov
lock
ret
rcrl
push
xchg
or
add
pop
arpl
add
int3
pop
movsl
add
jge
out
dec
add
cmp
out
scas
dec
add
lea
mov
pop
mov
fcoml
es
pop
jae
js
or
daa
add
je
jns
xchg
test
inc
sahf
jns
mov
mov
int3
add
movsb
repz
fmuls
mov
incl
add
add
sbb
rcrl
adc
cmp
stos
rcrl
jl
data16
mov
sbb
daa
fiaddl
loopne
add
mov
repnz
jae
call
shlb
inc
add
or
pop
add
shll
mov
out
add
or
dec
add
xor
cmp
ror
push
mov
lock
ret
dec
jae
or
mov
inc
add
cmp
mov
mov
mov
add
add
push
inc
lret
mov
add
add
jns
aad
or
sbb
pop
add
jne
repnz
jae
mov
rorb
ljmp
jae
mov
mov
aaa
mov
aaa
dec
jae
jo
adc
add
flds
or
push
add
lcall
das
and
add
add
dec
iret
sub
fstpl
xor
add
add
dec
add
mov
push
sub
mov
push
mov
lock
ret
pop
mov
arpl
fadds
jne
jnp
lock
dec
add
lcall
xchg
add
adc
add
mov
loopne
pcmpeqw
cmp
aas
xchg
jmp
bound
or
mov
mov
pop
bound
sahf
add
add
push
add
pavgw
imul
mov
or
mov
add
mov
mov
add
outsl
repz
add
addb
dec
add
mov
repnz
jae
mov
sbb
arpl
leave
iret
dec
add
ret
push
add
std
mov
adc
imul
jge
movsl
jmp
pop
add
and
cmp
outsl
loopne
xor
add
ficoml
pop
add
sbb
add
sbb
pop
cld
jns
mov
push
mov
lock
ret
mov
sbb
rep
repnz
jae
mov
int
int
and
add
pop
mov
mov
repnz
jae
push
sahf
mov
mov
mov
xchg
xchg
mov
lock
ret
push
adc
das
xchg
sti
mov
or
push
mov
lock
ret
mov
popl
mov
or
mov
rolb
sbb
insb
add
std
add
add
add
and
add
out
and
or
add
mov
mov
fbstp
mov
inc
mov
clc
jae
mov
xchg
mov
jae
das
shll
add
mov
clc
jae
das
mov
bound
mov
bound
add
pop
nop
daa
jb
jecxz
aad
add
cmp
push
add
test
inc
and
add
ja
loopne
sub
jno
repz
add
cmp
add
xor
add
xchg
add
enter
addb
add
aaa
add
mov
or
cmp
and
in
lahf
pop
inc
stos
test
xchg
push
es
data16
jb
adc
in
push
mov
push
add
add
lret
iret
ficoml
add
mov
add
je
mov
add
imul
adc
add
jmp
mov
sbb
mov
filds
inc
add
movsl
jecxz
stos
adcl
outsl
mov
jbe
inc
add
movsb
lret
insb
add
add
mov
jae
mov
dec
mov
aaa
mov
int
mov
std
pop
sub
fldl
test
fildll
and
add
push
add
add
jge
std
mov
hlt
push
fiadds
add
in
notl
mov
repnz
jae
dec
pop
xchg
sbb
mov
add
xchg
in
dec
add
add
pop
fstpt
add
mov
add
or
fnstcw
add
sub
jge
add
str
stos
fsts
out
xchg
add
cmp
push
push
mov
lock
ret
jae
jae
filds
push
pushf
mov
ljmp
and
add
push
add
push
repnz
jae
das
mov
sub
dec
aaa
sbb
mov
add
add
jp
std
jbe
aad
rcrb
cli
xor
lea
cmp
jae
cmp
mov
addb
add
arpl
stc
mov
xchg
jmp
es
dec
orb
adc
add
add
pushf
add
out
addb
clc
jae
mov
mov
mov
and
std
xchg
loopne
iret
add
pop
fidivrs
pusha
add
jbe
repnz
jae
push
jae
dec
das
sahf
pop
mov
jg
cmp
push
add
addb
add
dec
les
leave
mov
mov
mov
inc
add
xchg
add
push
mov
lock
ret
dec
mov
mov
add
jae
and
dec
bound
push
mov
call
aas
out
add
sub
add
mov
add
cmp
push
pushf
add
rolb
inc
cmp
test
jl
inc
sbb
sbb
mov
popf
xchg
mov
clc
jae
mov
sahf
and
call
mov
jno
xchg
rep
xchg
jmp
shlb
fbld
mov
sbb
pop
xchg
xchg
mov
lock
ret
outsb
xchg
push
shrb
mov
push
pop
add
dec
pop
fs
dec
and
add
stc
jne
push
mov
lock
ret
pop
addb
push
pop
repnz
jae
das
mov
aam
icebp
add
add
loop
add
xor
repz
pop
into
sub
fdivl
mov
mov
add
push
mov
lock
ret
adc
mov
sub
les
push
add
or
xor
xor
sti
lods
sub
add
movsb
inc
mov
addl
xchg
ret
dec
and
mov
int
mov
add
fcompl
fiadds
repnz
jae
xorb
pop
shr
fdivrs
add
in
add
add
sbb
scas
add
mov
add
jne
test
mov
pushf
stc
push
repnz
jae
call
call
pop
mov
push
sbb
jg
sbbb
add
adc
add
outsl
add
mov
test
shll
push
add
notb
repnz
jae
jae
mov
rclb
mov
pop
or
dec
add
gs
cmp
sub
stc
push
repnz
jae
jae
mov
adcb
and
add
add
daa
incl
es
pop
add
js
mov
sbb
inc
mov
xchg
jmp
mov
shrb
lods
add
add
mov
adc
dec
add
add
dec
add
add
sti
push
movl
add
add
mov
call
roll
mov
mov
movsb
add
scas
cwtl
lret
cltd
jbe
mov
push
add
add
add
add
gs
or
mov
add
push
jmp
inc
add
and
jnp
lods
jl
pop
lock
xor
add
cmpsl
scas
lock
sub
inc
pop
cmp
je
pop
mov
jmp
andl
lcall
xorb
lock
add
stos
add
push
add
sub
pop
pushf
js
arpl
shrb
clc
jae
mov
mov
pop
and
pop
add
push
add
add
cli
sbb
push
xor
add
dec
add
xchg
jmp
outsb
mov
and
mov
sub
add
movsb
rcrl
add
mov
shr
add
add
outsb
add
mov
and
add
lret
add
add
dec
mull
iret
add
add
scas
call
pop
add
or
aas
push
roll
or
mov
shll
xor
lcall
out
dec
add
cmp
jno
and
add
jg
jle
orb
jae
call
xchg
jnp
fdivs
pushf
ja
mov
int3
test
fimuls
push
add
add
sub
mov
xlat
arpl
or
sbb
mov
pop
add
int3
xchg
clc
jae
rcr
ror
and
dec
cmpsl
add
rorb
mov
or
dec
add
add
mov
cmp
ss
test
daa
movsb
add
xor
int
add
push
repnz
jae
dec
fbstp
aaa
das
xorb
xchg
add
js
cmc
push
lret
mov
sbb
add
addb
popf
mov
add
dec
add
add
add
pop
mov
xor
add
sbb
jmp
shrl
fistpl
test
fcmove
sahf
xchg
test
lcall
pushf
push
add
stc
mov
repnz
jae
push
mov
rorb
shlb
outsb
push
add
add
dec
in
gs
add
push
in
repnz
adc
out
xor
add
push
jae
cmp
lds
add
add
add
shlb
add
jmp
xchg
jmp
sahf
adc
sahf
mov
mov
mov
add
add
outsl
adc
xorl
movsl
jo
cmpb
xchg
cmp
xchg
rep
push
mov
lock
ret
bound
mov
add
int
aaa
dec
add
jmp
scas
popf
pop
mov
addr16
add
xchg
add
fcoms
sti
add
xorb
mov
sbb
cmp
pop
mov
out
xchg
and
add
push
add
testl
push
add
add
add
mov
clc
jae
sbbb
es
fbstp
inc
add
cmpsb
mulb
arpl
jnp
lock
mov
add
mov
aas
sub
xchg
xlat
xchg
jmp
mov
mov
mov
push
add
sbb
xchg
push
push
imul
dec
inc
add
in
push
add
dec
add
add
adc
dec
add
jmp
or
mov
add
xchg
jmp
add
mov
fdiv
fwait
loop
jg
add
add
push
mov
lock
ret
rorl
shlb
pop
std
xor
add
sbb
clc
jae
and
mov
mov
sarb
repnz
jae
sahf
mov
mov
call
add
or
stc
and
repnz
jae
sbb
adc
mov
add
sbb
or
rolb
and
add
mov
jae
outsb
sbb
fbld
scas
dec
add
cs
push
fidivrl
leave
jns
idivb
and
add
lock
ja
jno
add
sarb
add
add
add
sub
add
add
add
push
dec
add
xor
add
add
repz
orl
mov
loope
add
xchg
pop
add
aaa
roll
scas
lahf
lea
mov
aaa
or
sbb
divb
pop
add
add
add
add
mull
psraw
add
add
add
ror
pop
xor
add
aam
testb
ret
add
dec
add
add
adc
add
xor
loop
ret
and
add
and
push
mov
lock
ret
mov
mov
push
shlb
fsubl
jg
adc
xchg
cmp
and
add
add
cmp
adc
cmp
add
loopne
clc
add
sbb
pop
add
iret
test
and
add
add
push
int
add
add
testb
sbb
add
test
into
jae
jbe
lahf
sub
je
and
add
mov
jo
push
popa
xchg
lock
push
add
add
clc
jae
dec
arpl
dec
jae
mov
add
insl
add
lods
pop
jmp
or
or
mov
jmp
xchg
mov
mov
es
sbb
shll
call
add
jb
mov
add
dec
add
push
add
push
mov
adc
xor
push
mulps
mov
inc
add
add
add
and
cs
in
stc
mov
repnz
jae
mov
roll
jo
iret
and
add
movsl
aam
ja
les
aas
pop
in
add
sbb
add
inc
add
lret
add
add
and
add
scas
push
and
add
dec
add
add
lahf
push
add
xchg
sti
pop
std
add
mov
push
clc
jae
aaa
sahf
dec
arpl
add
loop
repnz
loopne
iret
add
mov
add
add
aaa
add
mov
add
stos
mov
and
pop
inc
add
lcall
data16
push
sub
mov
adc
add
imul
mov
lock
ret
outsb
mov
xorb
fstpt
add
movsb
gs
ljmp
mov
clc
jae
fbld
mov
sahf
and
das
es
test
add
repnz
jae
rcrb
mov
roll
inc
dec
add
add
add
mov
enter
icebp
pop
scas
mov
shlb
add
ljmp
mov
and
add
mov
fisttpll
imul
add
int3
ja
icebp
dec
add
push
add
into
inc
sbb
ficoms
add
fsubrl
mov
add
fs
add
adc
mov
in
xor
out
mov
add
dec
scas
jbe
mov
mov
add
in
pop
add
add
and
sbb
ljmp
push
pop
add
in
add
ret
popf
mov
fldl
vunpcklps
add
inc
add
pop
xchg
jmp
dec
and
arpl
mov
mov
call
push
sbb
xchg
pop
in
add
xchg
sub
add
add
scas
test
dec
popf
pop
xor
add
add
jbe
andl
jns
aad
add
gs
inc
add
mov
jge
sbb
add
adc
gs
in
imul
mov
push
add
lea
daa
pop
add
ror
ljmp
add
and
add
loope
es
insl
cmp
clc
jae
dec
shll
mov
sbb
addl
call
sbb
and
add
push
add
ds
out
add
sub
int3
mov
add
add
repz
mov
add
mov
mov
lock
ret
dec
filds
xor
js
pop
addb
ss
add
jecxz
cmp
jl
xchg
add
in
addr16
add
add
daa
incl
cwtl
xchg
dec
add
jmp
cli
sbb
sar
pop
repnz
jae
push
dec
arpl
dec
mov
mov
ror
arpl
add
cmp
sub
sahf
adcb
add
mov
dec
fcmovb
movsl
xor
add
inc
add
mov
jmp
jle
dec
in
sub
adc
add
lahf
lea
xor
shl
int3
mov
shl
jae
dec
filds
and
daa
add
push
mov
lock
ret
shll
jge
adc
shrb
add
sbb
jmp
add
mov
mov
add
dec
add
and
add
ds
mov
jae
xchg
mov
sahf
andb
add
xlat
iret
or
mov
push
mov
lock
ret
outsb
adc
adcb
mov
leave
fadds
cmp
fsubrl
dec
pop
add
decl
popa
dec
pusha
add
inc
add
jmp
fldcw
les
clc
jae
shll
shlb
sbb
out
rcll
add
ljmp
or
clc
jae
mov
aaa
xchg
stos
jo
enter
add
insb
add
divb
flds
das
push
mov
add
push
lea
and
add
adc
add
scas
or
mov
cwtl
mov
add
add
add
jmp
xorb
shlb
pop
add
flds
jno
add
mov
decl
push
mov
lock
ret
mov
jae
mov
xchg
ret
lcall
bound
call
add
mov
add
add
aam
or
data16
cmpsb
fld
es
fdivrl
je
test
rcrl
mov
add
mov
fdivs
add
pushf
mov
add
add
add
add
add
aaa
pop
inc
add
xchg
ret
mov
or
lret
stos
push
add
add
mov
and
add
std
jmp
hlt
out
cmp
add
sub
and
xchg
insl
cmp
lock
add
jmp
mov
test
lea
add
add
add
fs
sub
and
add
pmaxsw
loop
leave
in
daa
fiadds
and
add
add
mov
in
test
add
inc
add
cs
mov
and
sub
pushf
ljmp
jmp
dec
mov
push
dec
adc
sbb
clc
aaa
popa
add
mov
lock
ret
int
mov
mov
push
push
xchg
jbe
mov
sub
pop
pop
push
add
mov
jne
add
xor
bound
fistpl
add
add
push
add
cltd
push
or
xchg
cmp
stos
repnz
jae
mov
dec
bound
dec
in
jo
sub
push
add
dec
inc
add
mov
sbb
or
push
les
add
test
add
je
push
add
mov
out
add
mov
in
add
add
je
cmpsb
lret
jecxz
add
add
inc
add
xchg
add
xchg
aas
xchg
xchg
fmull
sub
clc
jae
and
das
sahf
push
es
out
sti
aas
sbb
cli
fdivl
and
jae
add
add
cmp
mov
mov
adc
repnz
jae
jae
mov
jae
bound
jp
mov
or
jae
mov
mov
dec
pop
pop
mov
andl
add
add
mov
in
ss
add
subb
add
or
cmp
std
movsb
adc
out
call
cld
mov
add
add
add
mov
jecxz
add
lods
add
in
xor
ss
add
inc
add
add
or
cmp
add
add
add
add
mov
insb
add
xchg
leave
pop
cltd
pop
add
add
dec
add
pusha
add
adc
add
add
call
repz
push
add
bnd
add
je
js
push
add
dec
addl
dec
imul
pop
add
dec
bound
bound
add
pop
add
leave
popa
pop
mov
ljmp
mov
jmp
mov
mov
push
mov
mov
jmp
jae
outsb
fbstp
adc
add
sbb
adc
add
and
sti
mov
add
dec
add
mov
add
cli
or
pop
add
add
and
and
add
mov
add
lods
mov
add
pop
or
add
push
add
xchg
jmp
push
shll
mov
mov
sub
adc
xchg
pop
add
in
test
pop
add
add
add
hlt
add
lds
mov
add
in
jmp
es
loop
add
hlt
jmp
add
inc
add
mov
pop
jmp
add
test
je
imul
mov
cs
and
xchg
std
pushf
sbb
fcmovnb
insb
add
jnp
add
sti
xchg
es
add
test
incb
add
push
mov
lock
ret
mov
adc
bound
add
add
repnz
sbb
add
iret
lret
std
mov
add
and
add
add
adc
jp
push
add
cmp
addr16
lods
out
sub
xchg
insb
add
dec
sub
xor
add
cmp
mov
push
push
add
pusha
add
push
add
add
jge
jnp
sbb
pop
add
add
add
in
rcll
add
test
adcl
aam
outsb
add
add
add
call
and
rep
out
push
imul
leave
xchg
jmp
xchg
mov
mov
mov
das
bound
decb
mov
orb
add
scas
sbb
gs
cmp
add
stos
xchg
cwtl
icebp
cmp
ja
add
add
mov
add
cs
int
add
mov
fiaddl
xchg
sar
pushl
rorb
sahf
mov
push
aad
xor
je
push
mov
lock
ret
cmpb
sub
pop
cmp
lods
jae
pop
add
jns
add
add
xchg
cmp
xchg
jmp
sub
pop
rclb
bound
add
add
add
add
sbb
lcall
decl
sbb
arpl
shll
clc
jae
mov
dec
and
shlb
add
xor
add
inc
add
push
add
into
dec
add
or
ja
lret
fnstcw
in
sti
sbb
test
push
add
push
and
mov
ss
add
fiaddl
mov
and
cmp
addps
xor
add
add
add
add
cmp
inc
add
add
jo
mov
add
mov
lock
ret
mov
outsb
mov
mov
pop
dec
adc
lods
mov
and
mov
add
add
popl
add
movhlps
add
sbb
inc
sub
nop
leave
add
add
popf
mov
cmp
add
or
aam
lret
add
add
add
andb
add
imul
cwtl
add
xchg
lock
add
cmp
add
and
mov
rcrl
push
add
jbe
sahf
mov
jle
movsb
mov
add
jle
mov
or
add
popl
add
imul
call
das
mov
mov
push
mov
lock
ret
aaa
sahf
mov
dec
mov
mov
push
and
add
add
and
add
cmp
jle
inc
add
push
test
add
xchg
ret
call
mov
mov
xchg
clc
jae
dec
push
dec
and
int
or
sbb
and
aaa
dec
add
add
repz
sti
daa
jo
jb
lods
add
add
jecxz
push
je
pop
add
push
mov
mov
add
std
pop
pop
repnz
dec
add
add
pusha
add
add
hlt
repnz
data16
fsubrs
aaa
mov
mov
imul
mov
test
pop
add
add
inc
add
or
mov
sub
ss
add
cltd
adc
add
repnz
jae
sbb
das
int
mov
flds
mov
or
push
data16
out
movl
add
or
push
and
fstl
mov
stos
test
jmp
push
repnz
jae
mov
jae
aaa
sbb
or
push
loope
add
mov
call
jmp
call
subb
mov
lods
dec
add
fcmovnb
pushf
push
add
insb
add
add
jo
add
add
aaa
add
ljmp
xor
add
jmp
mov
fists
dec
xchg
push
jmp
add
call
or
lahf
fldcw
jns
add
jns
popl
add
movsl
xchg
pop
add
ret
jmp
sahf
insb
add
nop
fildll
sbb
fnstcw
add
aas
jmp
pop
shrl
call
and
add
inc
add
test
mov
mov
add
and
loope
sub
and
ja
fiaddl
xor
add
aas
pop
pop
add
int
mov
repz
jae
mov
outsb
pop
arpl
push
sahf
mov
loope
and
clc
jae
mov
rorb
and
xor
add
adc
xchg
push
add
hlt
and
add
std
jbe
cmc
mov
ret
and
mov
add
jae
filds
or
mov
int
popf
dec
xor
add
jmp
add
add
sbb
push
add
ficomps
add
add
js
stc
mov
repnz
jae
mov
jae
dec
mov
mov
sbb
aaa
popf
add
or
and
add
subl
mov
jecxz
and
add
or
add
int3
mov
add
inc
stos
xor
pop
jmp
loope
adc
jns
ljmp
hlt
ljmp
fldl
cmp
in
add
pop
sbb
jmp
jmp
outsb
dec
mov
adc
aaa
inc
add
jecxz
mov
jno
insb
add
cmpb
fistl
add
sbb
add
push
mov
lock
ret
adc
mov
cmc
scas
ret
add
add
jbe
arpl
clc
add
add
mov
pop
add
and
jns
or
lea
push
clc
jae
and
or
push
ror
push
fldl
add
and
das
adc
in
stos
mov
sub
sbb
test
xor
add
popa
ret
scas
sub
inc
add
mov
xchg
data16
and
add
add
aas
and
add
mov
in
enter
fmull
push
xlat
sbb
stos
add
add
out
adc
in
lock
add
cltd
adc
add
insl
add
and
sahf
bound
dec
add
int
shrb
loope
add
add
add
inc
add
xchg
push
lret
mov
loope
xchg
ret
xchg
bound
xchg
hlt
pop
and
lret
add
add
sub
dec
add
xlat
aam
loop
mov
jno
lahf
test
add
and
add
mov
push
cmp
lcall
add
outsb
add
pop
add
sub
das
add
pop
add
add
in
sbb
pop
sub
adc
clc
add
aas
add
loope
add
add
jb
lea
cmpsb
in
push
pop
int
add
push
clc
jae
sbb
jae
adcl
gs
jnp
mov
add
testb
roll
movsb
dec
cmp
xor
frstor
mov
cmp
push
add
cltd
movsb
pop
fwait
add
sub
pusha
add
push
add
add
clc
jae
int
dec
pop
sarl
incb
outsb
add
and
pop
out
add
or
clc
jae
dec
and
adc
xlat
add
add
andb
dec
aam
add
mov
int3
movsb
fstl
add
stos
jae
cld
int
cwtl
cmp
cmp
or
icebp
in
imul
mov
push
lahf
xor
ficompl
pop
lcall
cmp
jle
mov
mov
and
test
nop
das
imul
outsl
mov
mov
xor
rorl
call
nop
repnz
sarl
add
pop
mov
imul
mov
push
add
add
hlt
jno
xor
imulb
xchg
add
inc
adc
add
clc
jae
mov
mov
jns
sub
add
add
add
xchg
lock
add
arpl
mov
mov
fxch
cmp
rcl
jmp
pop
repnz
jae
call
addb
cmp
out
mov
push
add
out
dec
add
xor
lock
or
aas
sub
scas
inc
das
cmc
ret
je
pop
mov
movsb
xor
lret
xor
repnz
jae
adc
and
aam
add
aaa
popf
add
adc
xchg
cld
mov
loope
inc
add
add
and
js
jno
add
xchg
dec
add
add
add
jno
fnstcw
add
add
lcall
add
add
add
pop
incl
adc
sub
je
movsb
shrb
loop
add
pop
add
add
or
pop
ja
add
push
or
push
add
add
sbb
jae
dec
dec
pop
push
dec
push
arpl
adc
aad
and
pop
add
add
mov
pop
add
jmp
hlt
sbb
add
add
dec
add
push
addl
ret
mov
mov
mov
xchg
push
adc
add
lret
add
add
add
gs
cmpsl
xchg
xor
repnz
jae
mov
sahf
mov
adc
push
xor
es
add
xorl
add
mov
sti
popf
dec
add
add
inc
add
xor
or
jmp
jno
add
or
insb
add
add
add
sub
call
add
jb
call
cmc
xchg
add
repnz
jae
mov
sbbb
aaa
inc
add
lods
add
addb
rcl
subb
mov
add
repz
jge
add
int3
mov
add
lock
ret
mov
dec
int
and
mov
sbb
leave
mov
in
lods
jno
or
cmpsl
push
hlt
push
xor
add
sbb
fdivs
push
add
and
add
sahf
pop
xchg
add
data16
adc
aas
lock
add
je
in
add
mov
add
test
inc
add
pop
add
jb
enter
jno
xchg
and
add
lds
sahf
cld
mov
add
add
push
add
jecxz
test
push
add
cli
stos
shr
and
add
shrb
xchg
mov
sbb
out
dec
mov
add
arpl
pop
add
cmpsb
insb
add
jg
xchg
mov
lock
ret
mov
aaa
rcl
imul
jmp
inc
add
xchg
cmp
xchg
pushf
dec
cmp
sub
mov
add
xlat
repz
dec
add
add
sbb
les
jmp
jmp
push
dec
add
pop
and
add
add
fwait
je
in
add
or
push
add
jne
es
add
sub
add
jo
jne
add
std
lcall
les
pop
add
xor
add
mov
icebp
add
add
add
rorb
add
inc
add
popa
test
aam
cmp
add
loope
in
cmp
add
popf
push
sahf
add
or
add
in
mov
add
pop
add
jne
mov
inc
add
jno
int3
orb
pop
add
mov
lods
pop
data16
inc
orb
add
call
inc
add
add
roll
out
push
add
test
flds
add
rolb
xchg
push
add
sub
push
add
add
add
ret
add
add
add
ljmp
jge
mov
out
mov
mov
clc
jae
adc
jae
mov
mov
push
mov
add
sub
add
push
push
mov
lock
ret
dec
mov
mov
mov
rclb
subb
mov
mov
mov
sahf
out
add
jg
add
call
jne
lcall
add
mov
ret
test
jg
popf
add
add
cmp
les
and
add
pop
add
pop
hlt
out
cltd
mov
movsl
push
inc
add
add
adc
add
das
mov
pushf
sahf
shrb
add
add
repnz
flds
add
lea
repnz
jae
mov
mov
mov
cltd
ret
jle
cmp
mov
cmp
sahf
mov
popa
add
jmp
das
sbbb
mov
adc
sub
daa
adc
pop
pop
add
add
add
test
lret
shrb
inc
add
push
add
fisubrs
dec
push
add
add
mov
mov
mov
and
clc
jae
aaa
shll
mov
add
fcomps
clc
sub
loop
rclb
sahf
add
push
add
cmp
mov
jp
and
add
clc
add
inc
add
xlat
push
add
mov
mov
add
sub
push
add
mov
mov
popa
repnz
jae
sahf
mov
mov
mov
arpl
xor
sbb
test
pop
int
cs
pop
add
cmp
leave
xlat
cmpb
pop
mov
dec
das
jae
adc
xchg
aad
add
mov
add
push
add
add
and
pop
dec
add
inc
add
aas
inc
add
insb
add
mov
lahf
shlb
push
add
mov
add
adc
add
xchg
or
add
inc
add
dec
add
cwtl
push
dec
iret
push
add
xchg
push
xchg
jmp
mov
mov
bound
dec
mov
xorb
add
out
inc
mov
stos
and
jecxz
sbb
sub
add
inc
loope
xchg
cmp
add
push
add
mov
popa
add
clc
jae
and
es
add
xchg
mov
cmpsb
inc
add
cltd
add
out
xor
add
mov
or
jp
mov
add
add
into
add
fsubr
dec
lds
rcrb
add
cmp
add
popf
nop
int
and
add
test
movsb
repz
xor
push
add
inc
push
push
mov
lock
ret
outsb
mov
fistps
add
add
adc
lds
add
mov
and
sti
xchg
xlat
bound
dec
add
add
mull
lods
add
add
int3
dec
dec
add
mov
mov
loopne
push
push
cmp
or
add
mov
adc
push
call
pop
xchg
xlat
mov
dec
leave
inc
add
xchg
ret
and
mov
roll
insl
and
add
test
popf
cmp
repz
cmp
add
pop
add
lahf
add
jne
push
cmp
or
push
add
mov
mov
inc
add
sub
jo
jge
mov
outsb
add
add
add
add
lret
sahf
inc
add
xchg
and
xor
add
mov
add
add
jne
pusha
add
data16
add
add
add
add
add
add
add
add
xchg
sub
fcomps
mov
call
repnz
jae
dec
mov
aaa
mov
subb
test
cli
or
mov
add
fimuls
jmp
mov
and
sarl
fisttpll
lahf
aas
daa
imul
add
ret
imul
cli
aam
and
lods
mov
test
in
push
clc
jae
fbstp
sbb
pop
movhlps
add
lods
jg
cmpsl
ljmp
imul
dec
add
int
adc
add
add
add
xchg
add
xlat
mov
stos
xchg
jl
and
or
push
push
add
mov
shlb
jle
les
xchg
imul
repnz
jae
dec
cmpb
mov
mov
and
push
add
jo
add
add
pop
sbb
rcr
cmp
pop
ficoml
sub
mov
jmp
cmp
mov
add
mov
add
add
clc
jae
adc
mov
iret
cmc
jp
ljmp
xor
mov
add
add
stos
mov
add
add
xor
add
sbb
adc
cli
incb
push
add
or
and
add
mov
mov
jmp
mov
jae
dec
mov
adc
sbb
imul
mov
lods
add
jo
cmp
add
add
daa
mov
push
add
addb
mov
adc
mov
lock
ret
mov
or
bound
add
cmp
add
es
inc
add
daa
cmpsb
add
into
mov
jmp
jno
add
xchg
ret
xchg
push
and
add
cmp
adc
in
clc
mov
xchg
data16
add
loopne
xchg
ljmp
and
mov
lock
ret
and
mov
push
jne
xor
add
add
sub
jle
test
jmp
cmp
and
add
out
pop
add
or
add
bound
mov
cmpsl
push
push
mov
mov
add
push
mov
les
clc
jae
arpl
and
push
and
mov
test
add
add
int
dec
add
lcall
cmp
fdivrs
mov
mov
mov
mov
repnz
jae
outsb
or
fbld
push
arpl
and
cmpsb
ss
add
sbb
std
cld
xlat
in
jae
jb
test
sbb
jbe
mov
repnz
jae
and
jae
push
and
add
push
add
push
clc
jae
shlb
and
rorb
add
add
cltd
insl
pop
lret
lcall
add
add
mov
sub
add
loopne
adc
add
cwtl
sar
sbb
dec
aaa
and
fbstp
aad
mov
xchg
add
mov
add
jb
clc
adc
add
pop
add
add
adc
add
repnz
jae
dec
arpl
mov
mov
iret
test
xor
add
mull
fwait
pop
dec
das
mov
add
dec
add
stc
add
dec
add
pop
add
add
xchg
shr
repnz
jae
jae
mov
xchg
js
mov
add
ret
xchg
push
enter
push
sbb
imulb
inc
popa
xchg
jmp
dec
mov
outsb
pop
mov
mov
fisubrl
and
jmp
adc
fbld
sahf
mov
fbstp
mov
mov
add
push
add
addl
stc
push
push
mov
lock
ret
mov
bound
jae
mov
sub
stos
cmc
stc
jne
push
mov
lock
ret
mov
add
xchg
add
dec
xchg
and
pop
add
add
add
repnz
jae
mov
arpl
addb
imul
in
adc
and
daa
jb
int3
fcoml
fsubs
out
dec
add
into
data16
pop
add
jl
cmp
cmpsb
xor
add
loopne
cmp
xchg
call
std
scas
dec
ret
enter
leave
mov
add
add
add
dec
sbb
popf
xchg
out
add
add
clc
jae
mov
push
xchg
mov
dec
add
mov
clc
jae
mov
mov
fistps
mov
outsl
in
add
add
jp
xchg
add
add
add
xorb
add
daa
pushf
add
repnz
jae
mov
mov
int
es
jae
jmp
dec
movsl
inc
mov
xchg
jmp
dec
mov
sahf
sbb
mov
lcall
push
dec
add
sub
mov
shl
aaa
jae
das
add
add
and
add
add
lret
mov
cld
sbb
ficoml
add
add
add
fwait
add
add
loop
decb
add
add
add
ljmp
adc
sahf
scas
mov
mov
loop
jmp
rcrb
mov
mov
arpl
sbb
les
jb
ja
fiadds
add
in
lds
and
clc
mov
ja
adc
add
imul
lret
mov
std
xchg
push
push
mov
lock
ret
call
and
cs
push
sbb
mov
mov
lock
ret
das
sbb
mov
push
add
add
pusha
add
aas
or
jae
push
pop
es
add
and
popa
frstor
rolb
push
add
and
incl
add
aaa
das
adc
int
outsb
xlat
data16
add
rcr
insl
pusha
add
push
add
jae
iret
push
push
sub
add
add
jb
lods
lret
dec
add
cltd
add
testl
add
popf
loopne
jl
mov
lock
ret
aaa
or
subb
rorb
sub
clc
jae
dec
mov
arpl
arpl
pop
pop
pop
add
mov
arpl
add
jmp
outsb
sbb
leave
test
aas
cwtl
jecxz
mov
fisttpl
les
les
add
add
pop
int
dec
sahf
fistps
mov
mov
xor
pushl
dec
mov
mov
push
and
add
push
mov
lock
ret
dec
mov
or
or
push
incl
jae
add
jae
in
div
insb
add
xor
add
cmp
outsb
add
or
add
clc
jae
mov
mov
xor
shl
add
and
jecxz
jne
push
mov
lock
ret
mov
xorb
loop
das
ja
inc
add
add
xchg
pop
hlt
sbb
xorb
lret
push
ret
dec
insb
add
add
add
lret
jb
pop
icebp
add
mov
add
and
jo
mov
add
leave
fldt
fildl
mov
add
add
lret
push
mov
lock
ret
fbld
shll
or
lcall
mov
jg
repnz
jae
adc
or
mov
test
xor
add
inc
gs
das
pop
mov
pop
add
ljmp
add
repnz
mov
mov
repnz
jae
push
shll
mov
add
add
dec
add
and
add
add
add
insb
add
outsl
je
and
aaa
add
push
add
xchg
icebp
add
leave
call
ficomps
cltd
iret
arpl
push
rolb
pop
add
cmp
and
mov
add
add
add
add
dec
add
or
sub
mov
xor
popa
add
xor
orb
cmp
add
add
add
pop
dec
mov
add
popf
mov
add
cmpsl
bound
rcr
movb
scas
xor
add
or
out
lods
jg
add
add
xchg
cli
sahf
mov
xor
adc
add
pop
add
pop
add
xor
push
mov
lock
ret
xorb
mov
push
adc
add
add
add
imul
add
in
mov
pushf
mov
push
add
add
in
add
sub
and
outsl
aaa
out
add
ret
inc
add
add
add
pop
clc
push
push
xchg
push
movb
add
xor
jp
stos
call
imul
loopne
jmp
add
add
lret
add
das
imul
ja
add
add
add
or
mov
pusha
add
popf
jle
hlt
adc
imul
jecxz
ja
jg
pusha
add
inc
cmpl
xchg
jmp
mov
sahf
shll
inc
add
add
jmp
mov
stos
push
add
push
add
out
add
out
mov
and
movnti
fists
mov
push
add
add
add
loope
pop
fldl
push
movsb
sbb
mov
mov
shlb
mov
sahf
cwtl
jmp
add
clc
and
add
add
add
cmp
outsl
js
out
data16
push
add
mov
clc
jae
es
call
mov
push
dec
jo
in
sbb
mov
add
test
add
add
paddb
enter
mov
add
add
mov
mov
jmp
vmovq
shll
adc
aaa
addr16
sbb
sub
adc
add
repz
add
pop
icebp
cltd
sub
mov
pop
add
add
adc
add
or
pop
out
add
enter
add
and
mov
mov
add
add
lret
imul
orl
clc
jae
mov
pop
das
dec
dec
dec
mov
arpl
pop
sti
push
faddl
arpl
and
add
and
add
mov
cld
fndisi(8087
and
add
xchg
add
mov
fdivrs
and
add
jne
repnz
jae
mov
outsb
xchg
add
popa
add
int3
dec
add
mov
jb
mov
xlat
adc
adc
xchg
jmp
rcrl
aaa
xorb
push
lret
add
repz
or
mov
call
xchg
jmp
and
dec
push
mov
sbb
mov
leave
leave
sahf
xchg
test
inc
add
xchg
ret
sahf
es
push
sahf
ja
add
cmp
ror
ret
pop
sbb
cld
push
add
add
arpl
bound
stos
dec
add
add
xchg
pop
call
dec
add
in
add
out
add
pop
add
rolb
pop
add
js
ficoms
andl
pop
mov
xorb
sub
ja
gs
add
mov
repnz
jae
mov
fisttps
mov
xchg
adc
add
jp
and
cmpsb
or
mov
add
xlat
mov
xor
ret
es
das
das
mov
mov
aaa
add
jae
shll
mov
adc
and
jmp
adc
loopne
imul
pop
and
out
popa
out
sbb
imull
outsb
add
add
loope
add
mov
lock
ret
and
dec
mov
popa
jmp
and
add
add
in
pop
add
mov
add
clc
jae
outsb
es
das
and
xchg
mov
pop
clc
add
out
pop
repnz
jae
mov
adc
mov
loop
test
into
pop
mov
add
dec
add
push
mov
jb
mov
jle
fldenv
cli
add
and
add
movsl
lock
int3
add
adc
add
mov
xor
add
ds
cmp
out
mov
cli
adc
cli
out
add
dec
lods
sbb
mov
pop
imulb
leave
inc
lea
repnz
jae
xorb
fists
cmp
push
je
mov
add
lds
add
sub
popf
inc
dec
and
inc
popf
repnz
jae
outsb
arpl
aaa
pop
jae
or
mov
sar
jmp
inc
sarb
dec
add
jmp
pusha
repnz
jae
mov
or
aaa
xchg
sahf
adc
add
sub
mov
cwtl
ficompl
rcrl
jl
ljmp
and
imul
mov
jmp
repnz
jae
mov
mov
aaa
pop
int
inc
add
filds
add
lock
dec
add
popf
add
push
add
cld
subl
repnz
jae
mov
mov
or
shlb
mov
mov
add
xlat
jnp
and
mov
xchg
add
add
sbb
add
add
add
xor
add
lods
add
mov
add
addl
add
aas
outsl
push
add
lods
cmpsl
add
cmc
mov
loopne
add
add
mov
jp
imul
add
lods
outsb
add
add
add
ret
inc
add
push
popa
or
pusha
add
add
fists
rcrb
add
rep
repnz
jae
and
mov
mov
in
ljmp
add
repnz
jae
fistps
arpl
imul
and
add
add
cmp
cwtl
mov
outsl
and
xchg
bound
add
dec
or
xorb
call
arpl
push
cmpsb
jnp
imul
add
push
mov
lock
ret
mov
mov
mov
add
adc
cmp
bound
push
imul
test
sbb
dec
add
xchg
ret
xchg
jmp
pop
fistpll
dec
outsb
arpl
dec
xor
fwait
jbe
movzbl
add
add
imul
out
add
pop
add
mov
mov
lock
ret
sahf
mov
mov
cmpsl
mov
cmp
out
mov
mov
jae
sbb
push
and
pusha
add
jns
mov
add
xchg
ficoml
mov
popa
add
jmp
adc
fists
mov
mov
mov
xlat
mov
jecxz
clc
add
mov
add
popa
push
add
adc
push
add
mov
shl
add
sbbl
std
sub
div
int3
pop
in
add
add
addb
add
hlt
sub
xor
add
add
repnz
jae
sahf
sahf
sahf
sarl
dec
add
ret
mov
repnz
jae
mov
rorb
int
push
add
add
jp
mov
xchg
jae
shll
sahf
mov
jg
mov
dec
add
inc
add
fiaddl
mov
mov
repnz
jae
aaa
mov
pop
das
es
repnz
jae
shlb
outsb
mov
call
hlt
jo
dec
pop
jle
xchg
inc
decl
in
adc
add
popa
sub
add
add
rcrb
add
sbb
sbb
xchg
adc
add
xor
xor
add
repnz
jae
mov
dec
sbb
mov
or
adc
sbb
or
mov
jg
mov
cmc
stos
mov
mov
lret
int3
and
add
xchg
add
xor
rcrb
pusha
add
mov
enter
fildll
add
call
lret
push
add
add
js
mov
insl
cs
push
neg
inc
mov
jnp
gs
add
jl
push
mov
repnz
jae
mov
mov
mov
das
dec
shlb
dec
add
orb
jb
movsl
cwtl
mov
loop
and
loopne
outsb
add
xor
add
add
cmp
call
push
push
mov
lock
ret
mov
das
bound
dec
and
into
in
add
repz
imulb
add
notl
sbb
push
inc
add
test
and
pop
add
sahf
adc
add
mov
jnp
mov
arpl
inc
add
sbb
lea
pop
or
xor
add
cltd
pop
add
vpcmpgtb
inc
add
mov
mov
dec
xlat
rorl
cli
lcall
add
mov
jae
dec
push
pop
mov
jae
jecxz
inc
inc
add
hlt
add
cmp
push
mov
lock
ret
pop
dec
mov
stos
add
and
or
int
jmp
mov
add
inc
add
insl
or
add
in
push
add
iret
xchg
inc
cmp
jmp
push
mov
xchg
shll
pushf
jno
mov
ljmp
add
xchg
jmp
adc
addb
add
add
pop
add
bound
and
add
add
in
pushf
dec
add
rcr
cmpsb
dec
sahf
xor
inc
pushf
inc
add
jne
loop
pop
iret
sbb
add
repnz
jae
rorb
shlb
imul
cmp
pop
pop
add
addb
cmp
jecxz
add
pop
add
add
pop
add
jl
sub
inc
inc
add
add
add
inc
xor
add
test
push
or
in
popf
es
add
lds
xchg
mov
aaa
dec
das
int
rorb
test
inc
scas
push
pop
add
out
cmp
lea
and
add
dec
push
cmpb
xchg
mov
dec
out
mov
add
addb
and
add
add
leave
add
add
jns
inc
repnz
jae
filds
dec
push
and
or
adc
mov
add
mov
cmp
fistpll
add
cltd
add
add
add
and
das
int3
inc
xor
add
out
inc
add
sub
sti
into
fmull
sub
add
je
lcall
jbe
or
mov
stos
add
pop
movl
call
add
add
mulb
xor
and
test
add
jmp
dec
pop
fsubl
push
repnz
jae
mov
dec
mov
push
push
shrb
xchg
add
push
clc
jae
and
or
sbb
xor
mov
push
mov
dec
add
mov
mov
dec
add
add
je
push
add
mov
mov
adc
add
sub
out
dec
add
loop
ja
pop
add
add
idivb
and
add
adcl
push
add
push
sahf
add
mov
add
test
add
add
mov
push
add
and
add
add
imul
jae
and
pop
rorl
and
cmp
je
push
mov
lock
ret
mov
sarb
add
or
test
das
mov
add
adc
cmp
xor
add
decl
repnz
jae
mov
dec
int
shrl
jecxz
add
or
lret
adc
lods
add
mov
pop
jo
inc
add
add
scas
fcoml
push
daa
flds
mov
xchg
mov
mov
xchg
jmp
mov
and
mov
sti
xchg
jmp
mov
shlb
dec
and
lea
mov
add
pop
mov
add
dec
mov
clc
jae
aaa
shll
sahf
mov
mov
call
pop
add
sub
lahf
dec
mov
insl
outsb
add
xchg
adc
add
push
js
xchg
dec
add
add
mov
shll
sbb
mov
add
add
test
dec
ja
inc
add
and
add
ret
adc
add
add
dec
add
adcl
jno
sub
roll
rolb
shrl
popl
pop
add
inc
loop
add
jmp
dec
mov
dec
es
bound
loope
fstpl
andl
add
mov
lock
ret
mov
dec
mov
push
or
xchg
fstp
inc
add
xchg
ret
das
call
adc
mov
mov
call
mov
add
push
mov
add
sub
jle
sarb
add
pop
add
xchg
and
push
mov
lock
ret
dec
dec
mov
mov
daa
loop
lods
lcall
mov
add
push
add
inc
add
jae
dec
push
dec
arpl
mov
dec
pop
les
and
add
sub
and
add
stc
push
push
mov
lock
ret
dec
call
repz
cmpsl
push
add
add
shufps
repnz
jae
or
and
or
dec
pmovmskb
repz
mov
mov
add
fcomps
mov
add
mov
pusha
add
aas
data16
cld
ja
add
sbb
lds
mov
lea
repnz
jae
das
adc
sbb
mov
sub
add
sbb
and
add
jnp
lea
iret
arpl
aam
mov
repnz
jae
outsb
dec
push
push
mov
push
pop
mov
pop
cmp
sbb
add
dec
es
mov
mov
adc
mov
add
fcomps
add
add
ret
out
popa
enter
and
add
incb
mov
jmp
add
test
xchg
jmp
mov
mov
mov
sahf
jae
dec
mov
orl
xor
add
dec
fisttps
mov
adc
xor
add
jl
shlb
add
add
add
clc
jae
or
das
rorb
add
push
mov
xchg
jmp
call
adc
mov
stos
add
add
xor
add
in
push
add
add
scas
bound
push
fisttpl
add
add
sbb
inc
mov
ret
movsl
push
add
dec
add
cmp
add
rolb
adc
add
clc
add
sub
adc
xorb
add
mov
sub
pop
add
in
push
xchg
sti
jo
inc
cmpsb
andb
shrb
fadd
testl
jmp
shll
mov
sbb
addl
add
add
add
test
lods
dec
add
add
stos
loope
xchg
mov
repnz
jae
and
mov
dec
xchg
adc
add
cmp
mov
fiadds
subb
les
cltd
dec
mov
pop
jns
mov
clc
sar
mov
jmp
jae
dec
push
pop
bound
or
xchg
add
xchg
adc
jecxz
lcall
pop
add
add
fucomi
dec
lret
js
xchg
or
push
mov
lock
ret
call
mov
add
xor
shr
fdivrl
mov
mov
sbb
xchg
xchg
xchg
movsb
stc
call
push
mov
lock
ret
jae
mov
out
lods
ret
add
imul
mov
repnz
jae
mov
mov
mov
les
int3
add
inc
add
pop
add
xor
cmpsb
sbb
add
add
pushf
data16
clc
jae
call
dec
mov
filds
test
add
mov
mov
and
add
adc
add
push
inc
push
push
mov
lock
ret
mov
mov
xchg
add
lock
push
add
sbb
fcompl
and
lods
out
movb
add
loope
insl
xchg
enter
lods
jno
add
xchg
ret
pop
jae
mov
add
sub
in
push
add
cwtl
adc
inc
add
add
jno
xor
add
stc
mov
push
mov
lock
ret
dec
mov
mov
cld
push
addl
add
fadds
popa
cltd
rcl
or
fs
xchg
shr
cmc
sub
cmpsb
call
sbbl
pop
add
int
push
leave
adc
add
mov
aaa
mov
imul
mov
jmp
mov
fistps
xlat
or
loop
sbb
or
fidivs
mov
fcoml
add
inc
mov
scas
add
push
add
mov
add
add
jmp
mov
bound
add
jmp
std
stos
jp
iret
xchg
add
xchg
jmp
mov
das
mov
mov
scas
sti
je
jnp
pop
add
jecxz
out
js
add
add
add
in
mov
add
pop
push
add
jmp
pop
add
jno
pop
pop
sub
pushf
addl
popf
and
faddl
out
push
add
adc
add
jns
movsb
add
add
shrb
pop
sub
cli
xchg
or
repnz
jae
sarl
or
enter
add
es
add
jne
push
repnz
jae
mov
adc
add
subl
add
dec
mov
pop
in
pop
add
pop
add
sbb
xchg
push
add
add
pop
jge
fstp
movsl
push
add
push
push
add
jne
add
aam
jne
cmp
pop
add
mov
sahf
fwait
xchg
jmp
jae
mov
xchg
outsb
lds
push
add
add
in
add
les
add
push
sbb
icebp
in
adcb
cltd
and
and
add
and
out
clc
mov
add
popf
pop
test
pop
dec
xlat
les
nop
mov
leave
xchg
jmp
mov
dec
mov
pop
pop
mov
mov
xchg
aad
jmp
or
inc
add
sbbl
jnp
addr16
push
add
mov
imul
inc
add
add
addr16
outsb
add
add
add
pusha
add
popa
addb
add
stos
cmp
mov
and
cltd
dec
icebp
aam
add
das
mov
jne
dec
add
mov
xchg
aaa
cwtl
add
clc
jae
jae
aaa
and
jae
jae
mov
adc
lahf
popa
dec
inc
ret
insb
add
add
add
movb
push
xchg
add
dec
call
call
inc
ret
repnz
jae
mov
and
sahf
push
mov
stos
ljmp
and
add
cmp
hlt
fnsave
and
xchg
movsb
xchg
jmp
and
mov
add
rcrl
insl
jl
shll
cmp
xchg
jmp
das
mov
mov
and
rep
add
fwait
cltd
inc
add
add
movsl
and
mov
lahf
je
dec
add
adc
add
xor
scas
mov
mov
hlt
pop
movsb
add
in
or
mov
mov
cmp
shlb
or
js
ret
add
cmpsl
add
lret
or
fistl
cmp
add
pop
push
mov
lock
ret
mov
mov
sbb
add
divl
mov
test
jecxz
xchg
jne
repnz
jae
mov
mov
call
dec
add
loop
jne
sub
sub
rcl
fldt
and
add
sbb
scas
test
out
enter
dec
add
lock
icebp
out
and
add
imul
jae
xchg
jmp
xchg
bound
dec
push
dec
push
add
pop
add
push
add
cli
shrl
out
mov
repnz
jae
fbstp
sahf
mov
inc
add
add
jecxz
daa
jbe
push
add
add
add
icebp
add
out
add
je
bound
jle
push
add
cmp
mov
add
js
jmp
lret
mull
lahf
add
xchg
mov
xchg
jmp
and
dec
xchg
inc
add
mov
jo
pop
bound
pop
inc
add
mov
mov
xchg
jmp
outsb
es
mov
jae
add
subl
pop
add
mov
in
cmp
add
sub
mov
pusha
add
les
fildl
jle
lods
lods
cmp
insl
mov
jg
mov
mov
xchg
ret
bound
mov
mov
mov
jae
and
mov
xor
inc
iret
sub
std
xchg
inc
add
aas
das
sbb
pop
inc
add
flds
mov
les
popf
pop
add
jno
add
es
rcrl
sbb
add
mov
push
out
add
and
les
mov
int3
int3
add
add
bound
add
mov
mov
mov
add
add
cltd
mov
add
cld
pop
inc
mov
repnz
jae
es
orb
add
dec
jmp
add
jno
sub
add
lea
sub
add
inc
das
mov
fwait
pop
xchg
fnstsw
add
add
sbb
mov
add
imulb
add
lret
int3
or
ss
mov
and
add
jmp
mov
out
add
mov
add
int
add
jo
cmp
bound
pop
xor
fistps
push
out
add
divl
add
dec
add
testb
inc
mov
push
mov
lock
ret
mov
div
repnz
jae
shll
int
xorb
adc
add
mov
add
sbb
mov
jae
adc
mov
xlat
sbb
fwait
jmp
add
add
mov
push
mov
lock
ret
rcrb
jle
sbbl
add
push
add
sbb
popa
xchg
sub
repnz
jae
xchg
mov
arpl
sub
sub
stc
mov
xchg
jmp
mov
and
dec
mov
das
mov
xchg
jmp
orb
es
and
cli
push
fsubrl
push
jmp
inc
push
repnz
jae
mov
mov
adcb
das
mov
xchg
push
add
scas
add
jns
imul
add
mov
inc
push
xchg
jmp
push
jae
das
bound
mov
pop
addb
push
add
and
pusha
add
push
add
xchg
orb
test
cwtl
lods
inc
add
pusha
add
jle
shr
sti
sbb
adc
add
mov
hlt
sti
dec
add
mov
mov
lock
ret
mov
mov
dec
xlat
imul
repnz
and
insl
inc
add
repnz
jae
dec
push
mov
xchg
mov
js
or
add
add
imul
lcall
daa
arpl
cmp
sbb
inc
add
pop
add
adc
add
test
popf
push
add
pop
add
jg
add
sub
inc
add
jg
pop
push
add
pop
add
push
data16
mov
jae
mov
mov
aaa
mov
bound
push
mov
add
lds
add
push
inc
add
adcl
add
add
cmp
add
stc
mov
repnz
jae
dec
dec
aaa
xorb
aad
add
mov
xchg
sbbl
test
add
call
repnz
inc
add
xchg
ret
dec
dec
dec
dec
add
rclb
add
jge
add
push
xchg
jmp
or
mov
arpl
jae
cwtl
stos
adc
call
push
mov
lock
ret
pop
arpl
daa
add
adc
pop
add
in
dec
add
xor
add
mov
add
sbb
pop
mov
push
add
dec
add
xor
add
add
add
add
add
call
inc
push
add
xchg
ret
and
out
xlat
lods
pop
xchg
add
xchg
insb
add
es
push
shrb
add
add
xchg
test
fcos
push
clc
jae
mov
outsb
mov
mov
push
add
push
add
fwait
push
add
cmp
movsl
and
add
icebp
sti
dec
xor
dec
dec
outsb
add
dec
xchg
mov
xchg
insl
call
insl
shlb
jb
mov
mov
das
cmp
jecxz
push
add
mov
mov
or
addr16
adc
or
cmc
bound
adc
inc
add
xchg
ret
mov
mov
pop
add
mov
push
add
insl
jne
add
ja
inc
dec
add
sub
xchg
add
popa
mov
inc
mov
repnz
jae
bound
mov
ror
outsb
pop
in
out
inc
add
add
and
aas
cmpb
test
mov
push
add
sti
mov
sub
repz
pushf
xchg
mov
int
mov
das
dec
int
call
add
adc
mov
add
enter
test
cmpsb
cmp
add
pop
add
scas
movsb
mov
sub
xor
ret
xchg
mov
arpl
and
add
jb
push
add
mov
sub
decl
mov
mov
shll
aaa
in
xchg
xchg
mov
repnz
jae
jae
push
or
mov
dec
mov
dec
bswap
cmp
data16
add
add
add
pusha
add
jle
inc
mov
push
mov
lock
ret
andb
dec
mov
orl
add
mov
add
in
add
inc
add
outsb
add
mov
inc
add
mov
add
add
pop
test
xchg
sbb
sub
sti
or
daa
repnz
mov
popf
fidivl
adc
je
mull
jl
xorb
inc
add
push
add
sbb
movsl
lahf
loopne
jg
push
iret
test
dec
add
repz
int
std
addl
in
cwtl
call
jmp
and
call
mov
jae
mov
add
sbb
repnz
jae
arpl
mov
aaa
sarl
pop
push
add
jae
or
mov
icebp
add
add
jb
lods
into
mov
in
cmc
cmp
xchg
push
repnz
jae
xchg
das
push
mov
mov
fcomi
aaa
sub
mov
add
add
add
dec
cmc
sti
jmp
add
push
sbb
decl
sbb
les
sahf
add
fwait
stos
xchg
mov
repnz
jae
dec
shll
mov
push
ss
add
out
jb
jne
sbb
cmpsb
adc
adc
add
inc
add
push
fnstsw
sbb
aaa
sub
movb
add
out
jge
xchg
arpl
jnp
ret
push
pusha
add
mov
sbb
mov
xlat
movsb
cmp
jne
lret
jmp
imul
leave
repnz
jae
jae
mov
mov
mov
mov
add
repnz
jae
mov
mov
dec
mov
outsb
sbb
add
inc
add
sub
pushf
jae
and
push
mov
lock
ret
xchg
outsb
mov
lret
sbb
mov
add
add
pop
sahf
or
addb
mov
aad
popa
pop
add
sub
out
inc
scas
add
stos
mov
jbe
and
cmc
adc
add
inc
add
cmc
imul
sub
lret
clc
std
popa
mov
mov
call
add
or
jmp
repnz
jae
adc
mov
push
aaa
add
add
add
mov
add
xchg
jmp
jae
arpl
adcb
jecxz
mov
xchg
jmp
mov
mov
and
push
clc
jae
outsb
dec
shll
add
add
add
ret
add
xchg
ret
dec
int
into
fsubl
add
sbb
jp
pushf
pop
test
rolb
add
call
mov
mov
in
clc
add
add
add
mov
mov
mov
lock
ret
es
or
and
aas
aam
push
repz
add
xlat
pusha
add
pavgb
sub
in
mov
xchg
jmp
aaa
mov
dec
rcll
aaa
test
lds
add
add
outsl
or
add
dec
mov
add
xor
push
sahf
xchg
mov
data16
call
repnz
pop
add
and
rolb
clc
in
sub
cmp
insb
add
add
add
sub
repnz
jmp
je
pop
add
add
add
mov
add
lret
add
mov
add
push
pop
add
icebp
push
add
test
add
add
inc
add
push
add
stc
add
add
dec
add
add
jecxz
push
xchg
jmp
mov
dec
push
aaa
mov
shlb
les
push
cmp
add
add
fwait
inc
add
hlt
mov
inc
add
arpl
and
sub
cmp
add
sub
and
add
jecxz
inc
add
add
push
scas
mov
imul
repz
aaa
push
add
jmp
add
add
out
pop
add
add
xchg
jmp
mov
int
bound
pop
add
cmc
pop
sbbl
into
sub
push
add
jp
jbe
outsb
add
test
or
cmp
pushf
decb
mov
adc
inc
add
add
cmpsb
push
je
movsb
dec
add
add
add
test
bnd
pop
xchg
mov
lock
ret
outsb
dec
mov
mov
mov
cwtl
adc
icebp
xchg
mov
jmp
mov
mov
das
arpl
das
bound
add
mov
cmpsl
stos
mov
aas
pop
pushf
pop
or
ret
stos
test
add
insl
leave
lahf
fs
sub
jo
dec
add
nop
add
add
icebp
cli
mov
popf
inc
add
push
add
push
xor
aaa
cmp
clc
sbb
and
add
or
and
mov
sub
test
add
dec
xchg
mov
mov
add
add
add
sahf
add
scas
imul
cmpsl
in
data16
ds
jecxz
loop
mov
sub
nop
xor
add
add
jne
xchg
jmp
mov
sbb
hlt
into
sub
aaa
outsl
add
nop
xor
dec
add
lods
mov
lret
push
fiaddl
into
add
add
cwtl
dec
add
add
add
mov
lock
ret
mov
jae
mov
mov
ja
sahf
add
rcrb
add
add
push
add
xlat
push
add
xchg
add
repnz
jae
push
pop
mov
mov
dec
pop
imull
jo
fildl
call
aam
add
inc
add
mov
jg
ficompl
mov
mov
arpl
xchg
jmp
jae
int
mov
and
and
adc
xor
add
in
cmp
nop
pop
sbb
mov
or
repnz
jae
mov
sbb
inc
mov
outsl
xchg
ds
xchg
shl
repnz
jae
mov
shlb
pop
dec
mov
sub
aad
arpl
push
add
xchg
fidivrs
add
dec
repz
js
sbb
jo
sbb
mov
rcll
out
jl
sbb
nop
or
shlb
add
xor
add
and
add
add
je
push
mov
lock
ret
mov
add
add
sbb
in
fisubs
push
add
push
inc
add
iret
ficompl
add
lret
push
repnz
pop
add
add
add
xor
scas
aas
inc
add
sbb
cmp
xchg
pop
mov
repz
mov
repnz
jae
shll
mov
mov
jmp
data16
jmp
mov
and
and
xor
ja
test
cmp
cmp
push
add
mov
or
mov
and
adc
cmp
mov
mov
ljmp
gs
cmp
jle
lahf
cmp
std
adc
pusha
add
jmp
add
js
addl
lods
add
add
lea
sub
cmp
jecxz
push
add
add
cmp
sub
bound
sti
sub
cmp
add
les
cmpsb
jge
daa
add
jmp
dec
fisttps
int
mov
adc
add
and
add
jns
add
pop
cmp
jb
add
cmp
jecxz
add
add
lock
cmp
into
test
or
in
int3
outsb
add
loop
mov
das
cmpsb
and
add
rcl
sub
nop
rcrb
enter
add
movsb
mov
clc
cltd
dec
add
jo
push
add
jo
int3
push
add
add
repnz
jae
es
bound
sbb
fiadds
mov
inc
add
ljmp
add
add
inc
add
sbb
push
add
push
out
add
mov
push
add
xchg
add
rcrl
and
add
mov
insb
add
jne
mov
js
lret
inc
add
stc
add
xchg
cmpsb
mov
push
cmp
gs
mov
negl
push
in
cmc
adcl
add
mov
hlt
dec
add
fsubrs
xchg
mov
mov
ja
rorl
jae
mov
aaa
arpl
xchg
rep
xchg
jmp
outsb
roll
jae
das
aas
popf
pop
add
out
in
mov
rcll
add
addb
add
jge
jae
cmp
mov
mov
clc
jae
dec
sbb
or
pop
mov
sub
mov
add
mov
fistpll
lods
lea
pop
jbe
sub
or
xchg
jmp
das
bound
dec
mov
stos
pop
add
adc
add
out
roll
mov
sbbl
add
add
add
fnstcw
fiadds
push
int
push
repnz
jae
jae
mov
dec
sahf
dec
jae
dec
add
sahf
xchg
pop
lods
add
inc
add
mov
xlat
and
add
cmc
mov
out
xchg
inc
icebp
shlb
add
addb
out
add
stc
xor
repnz
jae
es
call
mov
das
mov
in
xor
add
lcall
iret
mov
mov
add
lcall
mov
pop
ljmp
ret
sbbb
sub
fbld
daa
add
or
or
repnz
jae
xchg
mulb
lret
add
test
pop
popf
dec
inc
add
jb
mov
lods
cld
and
xorl
lods
xlat
inc
add
xchg
ret
sahf
mov
mov
dec
mov
dec
add
pushf
ret
adc
or
popa
cltd
or
add
out
dec
in
mov
sub
xor
add
xchg
add
movsl
setae
js
mov
push
add
movb
add
sahf
add
push
inc
add
add
andl
decl
mov
mov
es
sbb
lods
imul
mov
lock
ret
xchg
mov
push
xchg
test
cmpsl
test
mov
ss
add
inc
cmp
push
mov
lock
ret
mov
shlb
jge
arpl
stos
and
bound
hlt
fdivl
roll
cmp
imul
xchg
jmp
fbstp
outsb
mov
sbb
nop
add
in
add
pusha
add
dec
in
repz
pushf
repnz
jae
mov
dec
mov
jae
mov
sbb
jp
insl
dec
fwait
or
sub
sahf
xor
add
add
into
pop
loopne
mov
add
inc
popa
repnz
jae
mov
or
shrb
es
jae
dec
out
rolb
and
jb
loope
sti
and
mov
push
add
sub
cmp
mov
cmp
loopne
movsb
mov
xchg
sbb
cltd
nop
fwait
data16
jno
sub
xchg
outsb
add
cmc
out
roll
add
add
rcl
add
push
add
add
cmc
in
sbb
push
push
add
adc
add
scas
add
arpl
stc
add
popa
dec
sti
pop
mov
call
xlat
dec
out
add
add
jb
sub
dec
dec
sbb
mov
jae
int
and
mov
stos
push
add
add
ret
mov
add
add
add
aad
pop
loope
lcall
clc
sub
pop
mov
jb
arpl
push
add
add
add
rolb
add
push
aaa
xchg
lock
cmp
flds
push
stos
pop
add
cmc
jae
add
xchg
pusha
add
sbb
jge
add
mov
jmp
repnz
pop
push
add
aam
mov
pop
add
add
pop
add
cmc
jnp
sub
add
push
add
mov
xchg
jmp
dec
mov
shlb
add
fildl
negl
add
sub
add
lea
repnz
jae
mov
and
shrb
add
lods
out
lock
rorb
ret
sub
lret
sub
dec
fildl
xchg
add
cmp
bound
cmc
dec
add
or
mov
in
pop
ret
ss
add
add
mov
xor
add
dec
pop
add
and
or
xchg
mov
repnz
jae
dec
mov
bound
mov
or
pusha
add
add
mov
sti
and
add
out
and
add
mov
js
xor
mov
idiv
dec
jae
fbstp
mov
xchg
cltd
sbb
aam
sbb
movsl
or
xchg
mov
test
mov
lock
ret
shlb
or
add
pop
and
add
imul
add
push
clc
jae
and
mov
xchg
adc
add
icebp
inc
call
repnz
jae
mov
es
mov
push
leave
jp
push
je
lret
xchg
jmp
dec
andb
mov
int
mov
inc
fstpl
mov
add
add
or
fisubrl
add
iret
add
add
lret
repnz
jae
fbld
mov
sahf
mov
sbb
add
inc
dec
rorl
xchg
jmp
mov
das
jae
and
cmpsl
add
add
jno
add
lea
add
inc
add
loopne
sbb
aam
adc
stos
imul
add
loopne
loope
daa
jnp
rclb
mov
sbb
jge
pop
leave
mov
out
add
add
call
sub
add
fdivs
and
xor
add
add
add
out
popa
sub
add
dec
jle
rolb
add
xor
cli
jl
dec
add
outsb
add
add
add
add
push
add
jnp
call
jnp
mov
addl
add
mov
jmp
les
sbb
lldt
cmp
scas
ret
xchg
adc
sub
xor
sbb
add
push
mov
lock
ret
int
and
gs
add
repnz
add
call
pop
ja
add
xchg
ret
aaa
or
push
add
jns
sub
xor
aas
mov
add
pop
add
mov
jne
repnz
jae
mov
fbstp
mov
dec
add
enter
out
and
add
jl
xchg
int
and
or
push
add
sahf
inc
add
pop
adc
jns
mov
mov
aam
cmpsl
into
dec
add
add
mov
add
lahf
add
mov
fidivs
xor
add
mov
fwait
insl
mov
icebp
out
add
add
fwait
add
add
stos
add
dec
add
cltd
das
add
add
jo
push
mov
enter
add
push
mov
lock
ret
sahf
dec
shll
ret
stc
pop
push
mov
lock
ret
sarb
mov
and
add
push
add
xlat
icebp
lods
decl
js
add
add
add
add
xchg
ljmp
rcll
ffreep
mov
ret
repnz
jae
call
mov
mov
cmpsl
add
and
add
sahf
lods
dec
add
mov
enter
test
inc
xchg
jo
jecxz
outsb
add
inc
add
add
or
cmp
add
xchg
jmp
and
aaa
and
sahf
shll
add
clc
repnz
jae
mov
and
fbld
rcl
imul
add
mov
inc
test
add
add
xchg
clc
jae
int
dec
fisttps
pop
mov
fwait
and
cwtl
cmpsl
ret
test
sub
add
fstp
out
in
ljmp
movsl
or
scas
gs
pop
add
stos
inc
pop
xchg
jmp
or
mov
dec
mov
sbb
out
push
add
jmp
add
sar
push
clc
jae
xorb
testb
cmpsl
mov
mov
push
repnz
jae
das
pop
mov
int
mov
jg
inc
stos
adc
add
iret
lea
stc
pop
push
mov
lock
ret
mov
fildll
dec
mov
jns
int3
leave
mov
mov
mov
outsb
add
mov
push
add
mov
cld
inc
add
sbb
stc
jmp
repnz
jae
mov
es
dec
cld
cmpsb
lods
scas
and
push
push
mov
lock
ret
call
es
xchg
xor
add
add
add
adc
xlat
mov
add
add
add
ffreep
jbe
add
add
pop
add
lret
icebp
adc
add
incl
lcall
sahf
mov
add
mov
push
clc
jae
sahf
sbb
sbb
cld
mov
sub
add
js
dec
mov
push
add
clc
dec
add
insl
test
dec
add
mov
ret
add
pop
mov
ltr
cmp
mov
clc
jmp
or
hlt
mov
add
outsb
add
sub
add
jmp
mov
rcrb
sbb
iret
push
add
addr16
arpl
aas
add
xchg
incl
add
dec
loopne
add
sub
mov
call
jge
mov
inc
add
xchg
ret
mov
int
adc
mov
insb
add
pop
add
mov
or
dec
cld
pop
lods
add
arpl
fiaddl
imul
mov
mov
inc
add
push
add
imul
add
addl
outsl
mov
add
xchg
xor
add
pop
add
movsb
test
stc
mov
push
mov
lock
ret
or
pop
call
add
add
mov
add
push
and
mov
call
faddl
mov
adc
add
out
dec
pop
data16
stos
rcr
scas
arpl
sbb
loopne
add
push
add
pushf
repz
mov
cmp
mov
clc
jae
and
push
mov
mov
xor
add
dec
add
pop
pop
daa
add
dec
add
push
pop
add
add
xchg
fcompl
faddl
or
loopne
add
add
mov
ljmp
add
mov
pop
incl
pushl
mov
cli
int
pop
repnz
jae
pop
aaa
and
mov
dec
add
clc
data16
bound
dec
mov
in
push
in
popa
jno
aad
add
add
cmp
sub
cmp
and
add
add
add
out
xor
add
loop
pop
add
out
cwtl
xchg
push
inc
push
repnz
jae
int
bound
dec
mov
add
movsb
add
xor
add
jecxz
lods
lret
out
jnp
add
jp
mov
sbb
push
push
xchg
addr16
xchg
inc
repnz
jae
dec
mov
dec
mov
mov
push
add
add
mov
fsubr
xchg
out
sbb
pop
add
xor
nop
pop
add
fiadds
bound
sbb
add
addb
orl
dec
add
inc
add
pop
mov
pushl
and
push
sbb
inc
push
cmpsb
sbb
idivl
cmp
in
sbb
adc
add
add
add
pop
add
add
add
mov
add
lock
mov
add
iret
ss
pop
add
add
add
repnz
jae
das
mov
mov
xchg
inc
mov
fistl
inc
or
xor
add
addr16
ss
pop
add
insl
mov
add
mov
add
pop
add
add
add
mov
enter
lods
leave
mov
mov
mov
add
out
add
jno
ret
mov
rolb
mov
mov
add
movsb
out
movsl
sbb
std
cmpsl
pop
add
lea
add
mov
add
add
das
loopne
mov
or
clc
lret
jle
int
add
sbb
repnz
call
xchg
jmp
mov
mov
dec
mov
xchg
ss
add
sbb
mov
mov
addr16
andb
push
add
push
aad
fdivp
mov
test
xchg
jmp
dec
dec
mov
mov
add
add
mov
add
and
add
xor
add
add
stc
add
repnz
jae
dec
or
adc
inc
add
mov
or
rcrl
add
fwait
add
add
add
sbb
or
bound
lods
cwtl
ljmp
add
sub
data16
mov
or
add
jbe
push
rorl
jb
ret
fbld
add
gs
insb
add
add
movsl
lods
mov
hlt
mov
mov
add
xor
ret
arpl
mov
add
add
fmulp
cld
sub
mov
jge
repnz
jae
mov
mov
inc
add
add
push
add
aaa
popf
add
imul
add
adc
add
push
mov
clc
jae
mov
mov
push
outsb
mov
push
mov
cwtl
inc
mov
add
xor
data16
std
cmp
xor
add
or
movl
repnz
jae
rorl
and
xlat
out
mov
call
xor
cli
add
sti
sbb
add
aaa
sti
add
sbb
pop
mov
mov
lock
ret
mov
mov
and
or
fcmovnu
or
cs
fcoml
and
leave
lret
add
repz
add
iret
pop
add
add
add
add
je
xchg
jmp
mov
mov
mov
test
xchg
push
add
add
add
and
pop
icebp
aaa
add
jmp
and
add
popf
add
test
jmp
orb
jl
loop
cmp
lock
loope
dec
iret
jns
jg
dec
out
add
add
inc
add
pop
push
jmp
aam
jae
out
add
inc
rcr
mov
push
add
add
add
or
jo
loop
add
enter
fcompl
out
outsb
add
sub
add
es
mov
mov
sub
aad
jnp
add
jmp
mov
mov
sub
add
js
push
add
add
and
fstpt
add
imul
add
add
mov
and
add
mov
and
jb
sbb
dec
add
adc
out
iret
push
add
mov
repnz
jae
rcr
dec
dec
dec
mov
mov
mov
loopne
ja
lcall
add
sbb
fwait
mov
jae
mov
adc
pop
enter
sub
inc
sub
xchg
jmp
and
mov
mov
aaa
adc
adc
add
mov
vpunpcklwd
adc
add
mov
add
fdivrp
ss
add
ret
add
inc
add
mov
bound
cwtl
sub
mov
dec
add
inc
mov
repnz
jae
es
fists
or
sbbb
add
cmp
xchg
pop
add
add
inc
aas
in
jg
movsl
add
dec
add
mov
jnp
lahf
test
xor
add
cmp
cmp
add
adc
jmp
add
or
add
sub
dec
add
fiadds
fisttps
stos
je
lret
imul
add
mov
lock
ret
outsb
push
mov
shll
push
mov
add
aad
add
cmp
and
add
jl
in
push
dec
add
aad
fiadds
mov
and
add
js
lods
lcall
add
inc
add
and
inc
add
add
rorl
and
lock
xchg
aam
data16
lds
add
add
test
mov
or
xor
adc
clc
jae
and
xorb
add
add
test
aam
incl
decl
dec
mov
mov
jge
mov
jge
cmp
pop
rolb
js
stc
pop
push
mov
lock
ret
sahf
mov
call
pusha
add
add
and
repz
mov
inc
imul
fadd
das
rorb
mov
lock
ret
and
aaa
push
aaa
jg
add
push
push
mov
lock
ret
mov
outsb
mov
ljmp
mov
inc
add
add
sub
push
xor
ja
sbb
sub
add
in
dec
and
add
sub
lds
ret
and
xchg
mov
jmp
jae
aaa
shll
mov
das
dec
test
or
xchg
pop
repnz
jae
es
and
aaa
and
add
jmp
adc
mov
bound
add
xchg
jmp
mov
dec
mov
mov
add
les
push
repnz
mov
pop
fldlg2
mov
add
jae
aaa
call
push
sbb
pop
add
dec
cmpsb
dec
add
mov
sbb
sub
cmpsl
addr16
mov
xorb
out
add
add
push
add
cmp
pusha
add
lds
leave
hlt
aaa
popa
add
add
xor
add
add
js
mov
ret
xlat
dec
add
pop
nop
rcl
or
pop
add
lcall
add
je
mov
rolb
add
mov
mov
bound
mov
cmp
popa
daa
mov
lock
mov
add
dec
push
out
add
mov
arpl
mov
adc
add
jns
add
sbb
inc
add
test
add
pop
ret
inc
adc
add
cmpl
std
outsb
add
push
push
add
mov
add
or
std
idivl
push
add
add
jb
gs
mov
lods
add
aam
andb
test
xchg
sbb
cwtl
sbb
jbe
xor
addb
ljmp
jmp
push
add
pop
sahf
add
adcl
lcall
sahf
orb
es
mov
or
jb
pop
add
cld
cmp
test
jns
add
add
add
imul
imul
pop
fiadds
sbb
xchg
ret
setl
add
dec
pop
add
idivb
fwait
in
jp
push
push
int
push
aam
xor
push
mov
lock
ret
mov
outsb
mov
sarl
add
add
inc
mov
repnz
jae
push
sahf
dec
mov
mov
repz
add
pop
add
fwait
lret
mov
mov
cli
pop
add
lret
add
xchg
ret
mov
and
lret
cmp
js
addr16
data16
clc
jae
arpl
push
and
call
add
jb
stos
xchg
xchg
les
lock
ret
dec
bound
arpl
mov
add
push
add
add
add
std
jecxz
sti
mov
add
add
fwait
sub
lods
mov
fcoms
iret
add
pop
add
cmp
repnz
fsubl
inc
add
add
movsb
add
add
adc
add
imul
pushf
arpl
mov
ret
outsb
add
add
add
pop
add
add
sbb
add
add
push
add
add
cmc
or
and
addr16
xlat
add
pusha
add
xchg
add
xor
fstpt
mov
sub
mov
add
aam
inc
push
repnz
jae
sbb
jae
xchg
jo
test
add
add
nop
test
add
mov
fldl
ljmp
add
ret
les
xchg
jmp
jae
xchg
xchg
cmc
or
aaa
cmp
les
shr
ljmp
push
pop
mov
mov
mov
std
mov
roll
jno
cmp
outsb
add
xor
add
in
add
jmp
push
daa
arpl
addr16
mov
addb
add
lcall
arpl
sub
hlt
add
mov
add
adcl
sbb
push
xchg
jmp
mov
mov
sbb
mov
jae
sahf
arpl
pop
bound
pop
dec
je
cmpsb
stos
sbb
sti
xchg
dec
add
fwait
or
inc
push
add
add
cmpb
jae
bound
mov
push
dec
jbe
lcall
outsl
jle
cli
sub
sti
fbld
sub
dec
add
out
add
hlt
push
les
loop
push
mov
test
aam
push
clc
jae
or
shlb
mov
mov
xor
add
add
pop
add
add
xchg
adc
inc
call
shlb
xor
add
add
xchg
mov
xchg
jmp
pop
mov
mov
mov
aaa
push
fildl
js
fst
ja
mov
add
out
add
cmpsl
jns
or
nop
pop
add
inc
into
or
pop
add
add
dec
add
xchg
add
add
add
push
add
add
loop
add
push
int3
push
xchg
cmpb
pop
stos
xchg
js
sbb
int3
push
add
adc
inc
xor
repnz
jae
dec
mov
dec
sbb
jbe
cwtl
mov
clc
jae
push
arpl
dec
mov
dec
push
add
cwtl
push
add
int
mov
mov
cmp
pop
mov
ja
add
jno
add
xchg
repnz
jae
mov
arpl
mov
lret
xchg
inc
imul
mov
jae
std
lret
jp
lahf
pop
jle
mov
sahf
lret
sti
ja
jmp
test
into
adc
mov
add
mov
add
add
or
add
add
add
int3
inc
add
and
add
and
add
add
add
stc
add
cmp
jecxz
arpl
or
enter
aas
mov
add
pop
add
xlat
inc
xor
gs
add
cmp
repnz
mov
jnp
mov
xchg
add
repnz
jae
or
arpl
sahf
mov
add
jns
ja
outsl
mov
aam
jne
imul
add
adc
push
bound
popa
add
lods
cmp
sub
add
popl
cmpb
xor
pop
icebp
jmp
icebp
push
push
add
add
call
sub
add
sbb
sub
xchg
test
add
daa
aaa
add
push
add
add
mov
repnz
jae
mov
sahf
mov
add
push
mov
lock
ret
xchg
dec
dec
out
cmc
test
add
mov
and
add
subl
xor
aam
jmp
add
cmpsb
cli
insb
add
inc
and
add
add
fxam
test
pop
add
cmp
and
add
add
imul
lea
xchg
jmp
mov
es
adc
inc
push
rcl
test
jge
cmc
imul
sti
seto
adc
add
jecxz
add
adc
add
add
or
push
bound
ret
mov
jecxz
add
jne
insl
dec
add
add
jae
lods
lods
nop
stos
mov
inc
sar
push
mov
lock
ret
dec
das
int
shrb
cmp
add
pushf
out
addl
int3
faddl
mov
pop
repnz
jae
push
mov
bound
add
imul
movsb
xchg
jp
out
or
adc
add
mov
shll
loop
sbb
cmpsb
pop
add
sahf
mov
add
add
cld
pusha
add
xchg
push
add
call
sbb
jle
loop
mov
mov
xor
add
ss
add
sti
mov
js
in
in
hlt
adc
outsl
cwtl
data16
data16
push
insl
scas
inc
pushl
repnz
jae
mov
push
dec
mov
jg
mov
mov
ljmp
add
xchg
pop
repnz
jae
mov
and
mov
das
push
imul
mov
bound
jle
outsl
daa
xchg
jbe
dec
add
mov
lock
ret
rorb
sbb
das
lret
cmpsl
scas
mov
mov
stos
xchg
jmp
dec
mov
mov
mov
xorb
sbb
push
add
add
add
sbb
or
lock
mov
repnz
jae
mov
mov
mov
das
arpl
or
popa
testl
dec
xchg
xchg
jno
push
clc
jae
es
fistpll
push
lahf
out
imull
jb
push
add
push
mov
in
inc
inc
repnz
jae
mov
mov
mov
mov
dec
push
mov
sysexit
sub
int3
jae
add
push
add
ss
add
pop
rcll
push
jae
xchg
repz
or
push
add
pop
out
add
popf
mov
mov
rcll
add
adc
sbb
and
cmpsl
jl
xchg
pop
repnz
jae
mov
rorb
adc
dec
mov
sbb
inc
add
add
add
orl
xor
add
mov
jns
add
add
push
add
add
lcall
pop
es
int3
jns
add
sub
or
lret
pop
add
mov
leave
lcall
in
mov
cmc
das
decb
push
add
adc
add
cmp
add
sbb
mov
xchg
and
mov
out
stos
out
test
cwtl
xchg
xchg
fistl
and
add
mov
test
pop
add
add
movsl
shrl
mov
cmp
int3
add
xchg
loop
andb
add
xchg
stos
add
jae
jno
and
mov
mov
or
das
push
add
add
add
lds
mov
sub
lret
lds
mov
add
arpl
mov
add
hlt
sbb
test
mov
mov
push
pop
add
lds
dec
test
mov
lock
pop
add
add
add
jge
cmp
xchg
jmp
das
mov
fbstp
push
outsb
add
clc
jae
mov
xchg
mov
lret
xchg
imul
jne
pushf
scas
jp
and
add
lret
jo
sbb
pop
add
lods
mov
xor
push
mov
lock
ret
sahf
mov
dec
pop
xorb
add
arpl
jmp
push
add
add
add
xchg
sub
arpl
sbb
dec
fisubl
cwtl
dec
and
add
pop
test
xor
movsl
mov
data16
repnz
lcall
daa
lahf
add
or
stos
shll
mov
das
test
add
mov
repnz
jae
and
sbb
sub
jb
jne
jae
cli
pushf
and
cld
mov
int3
int3
add
add
dec
xor
add
je
loopne
testb
out
dec
sbb
pop
stos
test
and
add
shl
clc
pop
add
loopne
add
mov
lock
ret
mov
mov
mov
inc
add
xor
add
xchg
popa
add
clc
jae
shll
adc
add
jne
add
addl
ret
or
mov
sahf
or
push
add
clc
jae
mov
and
dec
adc
inc
jne
push
mov
lock
ret
sbb
leave
pop
add
aaa
pop
add
in
pop
nop
test
jnp
arpl
cmpsb
inc
or
sbb
xor
add
leave
jbe
testl
jmp
xchg
into
xlat
mov
cmp
rcrb
in
mov
mov
dec
sbb
int
or
add
cmp
xchg
and
repnz
jae
mov
mov
adc
cmp
push
popf
add
add
andb
add
adc
add
lret
or
jb
add
add
sbb
pop
push
push
roll
add
icebp
sbb
push
pop
in
add
stos
and
ret
faddp
cmpsb
add
and
add
add
mov
ret
inc
call
inc
add
xchg
ret
mov
jae
dec
fisttps
mov
int
mov
add
adcb
sub
jnp
add
movsl
add
pop
add
add
add
pushl
or
aad
call
jl
clc
lea
add
sbb
clc
jae
mov
and
adc
xorb
sbb
xor
add
fistpl
push
add
jp
cltd
sahf
cld
bound
xor
add
cmp
jle
or
add
stos
cmp
jae
ret
add
push
cmpb
inc
add
pop
cwtl
pushf
shrb
dec
add
mov
lock
ret
adc
mov
mov
add
add
add
push
add
xlat
add
dec
xchg
mov
js
cwtl
sub
shrl
clc
jae
mov
mov
int
mov
iret
das
les
add
adc
add
pop
push
nop
and
add
je
pop
add
and
add
cmc
push
fistl
add
add
je
inc
add
into
imul
jae
mov
mov
aaa
and
in
or
mov
call
call
inc
add
cs
cmpb
xor
push
mov
lock
ret
dec
es
mov
mov
xchg
jmp
aaa
dec
mov
mov
mov
pop
add
inc
add
add
add
xorl
pop
add
sub
lds
cmpsb
and
push
pop
add
add
addr16
movsl
dec
add
adc
ljmp
mov
mov
lock
movsl
push
int3
push
pop
lret
roll
xchg
pop
repnz
jae
push
adc
mov
jne
mov
clc
jae
adc
mov
mov
sbb
insb
add
add
pop
xchg
add
and
add
mov
add
addl
add
jae
adc
notl
imul
int3
int
add
add
fwait
adc
xor
mov
and
hlt
adc
add
add
cmpsl
negl
jno
push
jo
xchg
adc
test
add
add
add
sbb
cltd
in
addl
xchg
add
push
xchg
pop
je
out
jae
add
in
jmp
add
loope
movb
add
out
mov
test
add
xchg
scas
test
stos
je
adc
add
mov
jbe
lcall
adc
or
and
add
sbb
push
sub
lods
testl
outsb
add
xchg
mov
jne
push
xorb
jge
add
add
mov
cld
mov
add
add
and
add
stc
pop
add
roll
adc
lods
into
push
push
sub
xchg
add
mov
add
sbb
ret
sarl
adc
push
cwtl
add
ror
add
sbb
int
jae
fwait
loopne
xor
int
xchg
negb
addr16
out
es
add
pop
fisubrl
xchg
mov
ljmp
add
mov
lcall
loopne
fimuls
das
push
lods
add
aas
add
lret
dec
out
xchg
imul
add
out
add
loope
jns
sbb
jg
xchg
mov
and
add
js
imul
cmp
sub
xchg
out
pminub
icebp
jb
inc
add
jmp
pop
sbb
add
add
adc
add
mov
shl
adc
add
leave
add
rcll
add
add
add
lret
add
test
dec
add
aad
and
add
cmc
pusha
add
aad
mov
cmp
fidivrs
jnp
loope
xchg
push
incb
xchg
add
mov
mov
add
cmp
ljmp
dec
add
add
pop
addb
sbb
call
cwtl
cmp
adc
xor
add
inc
add
push
add
add
add
loop
add
add
add
add
jns
and
add
outsl
inc
add
add
xchg
add
add
inc
add
mov
sub
mov
inc
add
cmp
inc
add
pushf
xor
xchg
cmc
pop
stos
hlt
cld
mov
jo
das
sub
jo
cmp
mov
mov
add
mov
adc
add
add
add
mov
or
or
sbbl
lret
add
dec
in
mov
sub
shll
xchg
add
cld
add
dec
add
insb
add
fwait
pop
addr16
sti
pop
add
js
lock
fildl
in
das
and
add
scas
jmp
push
or
cmp
sbb
push
add
add
repz
movsl
sub
data16
add
inc
add
fcoms
pop
addl
mov
ja
leave
sbb
sub
aam
add
mov
dec
add
cmpsl
mov
orl
leave
fcomps
or
dec
add
jo
aaa
xor
in
lret
leave
jp
jg
nop
adc
add
mov
ljmp
add
mov
imul
sbb
ds
mov
repz
lods
add
adc
add
xchg
stos
sbb
sbb
add
add
test
xchg
pop
nop
sub
mov
jl
pop
daa
mov
fisubl
imul
jecxz
subb
in
out
mov
test
out
jmp
xor
insl
and
and
add
inc
add
add
add
cld
clc
mov
add
aad
std
jnp
or
pop
add
add
add
fstp
sarb
pop
add
and
add
add
xchg
xor
adc
xor
add
add
ds
push
loope
in
add
add
push
cwtl
add
sbb
das
in
insl
out
fsubrs
add
add
add
sbb
repz
jnp
xor
mov
fs
push
inc
add
addb
test
je
mov
sub
xchg
mov
sbb
fmuls
sbb
data16
divl
add
sub
mov
add
xor
mov
push
add
cmp
into
xor
aas
mov
int
aaa
pop
add
dec
add
mov
ror
jp
fbld
hlt
test
fidivl
lldt
fildl
mov
add
add
pop
add
cli
mov
lret
dec
add
dec
int
mov
rolb
shll
popa
add
add
into
lods
stos
sub
loop
adc
mov
cmc
insb
add
scas
add
inc
lods
lock
in
jecxz
sub
dec
fcoms
add
sbb
pusha
add
dec
add
sbb
aas
or
movsl
sahf
jnp
adc
ficoml
mov
fistps
inc
add
jns
and
push
lods
rol
clc
out
mov
dec
mov
jo
aad
pop
stos
adc
nop
mov
or
imul
inc
add
push
add
add
daa
add
jb
push
add
aam
mov
lds
lcall
dec
mov
and
dec
add
movsl
mov
xchg
dec
xor
inc
add
stc
pop
js
test
test
sbb
add
add
bound
xchg
loopne
mov
int3
in
sarl
mov
add
jns
pop
aam
adc
popf
out
xor
cwtl
pop
adc
or
xchg
and
mov
push
jge
lock
mov
pop
add
lret
jmp
iret
std
fcmovbe
sbb
mov
xchg
pop
xchg
js
aas
adc
adc
add
in
stos
es
add
insb
add
pop
pop
add
nop
add
add
cmc
add
popf
add
adc
push
add
jns
inc
lods
ljmp
add
repnz
popa
sub
daa
jns
shrb
aaa
jae
adc
ss
add
jge
rcrb
ss
add
add
add
testb
or
psllq
add
add
scas
add
repz
dec
out
test
fisubl
in
cmp
adc
int3
cmp
mov
jg
aad
push
enter
add
test
arpl
add
add
and
dec
add
add
inc
add
jbe
imul
add
jns
scas
add
ss
add
add
ss
add
outsb
add
pop
add
ljmp
inc
add
add
or
call
gs
add
ja
iret
bound
ljmp
mov
or
sar
psubw
ja
in
jge
cmpsb
push
add
jae
dec
add
adc
imul
add
pop
sbb
adc
sbb
jle
fsubs
pusha
add
stc
cmpsb
loop
add
sub
mov
add
add
stos
dec
add
push
mov
dec
add
addl
jg
add
sub
cmpl
add
add
add
movsl
xor
add
test
add
roll
sbb
ss
add
add
and
add
stc
sub
mov
xchg
mov
fmul
inc
mov
pop
mov
sub
std
lea
cmpsb
mov
dec
mov
fcmovnu
or
adc
add
cmp
inc
add
add
add
add
push
adc
add
xor
roll
in
imul
ja
add
add
imul
rcll
add
inc
add
sbb
add
add
push
add
inc
add
cmpsb
sbb
jns
repnz
lret
mov
movb
imull
cwtl
add
add
add
stc
fcompl
adc
icebp
daa
sub
js
lcall
mov
das
cli
fists
ss
jb
cmp
mov
add
push
add
lahf
or
xchg
pop
imul
adc
aas
outsl
cli
notb
add
dec
add
rorb
inc
testb
add
add
lods
adc
add
sbbl
sbb
xchg
mov
cmp
or
mov
lret
add
adc
add
add
orl
repnz
adcl
sbb
lods
hlt
add
push
and
add
nop
aaa
roll
add
add
sub
sub
or
add
xchg
dec
fs
insb
add
std
add
add
es
add
repnz
cli
jle
jmp
pop
add
lea
pushf
xor
das
sbb
rep
add
push
add
add
lret
xchg
mov
jo
scas
xchg
in
ficomps
js
xor
daa
or
pop
add
push
aad
lahf
add
in
jp
movl
imul
loopne
xor
dec
add
inc
add
aaa
add
fistpl
add
add
mov
add
adc
sbb
add
push
add
cmpsl
fcmovnb
cmp
mov
cmpsl
xchg
sub
out
add
add
mov
mov
add
or
mov
xor
add
add
decb
cmp
adc
sti
movsl
jmp
sub
out
push
inc
test
loopne
add
arpl
add
add
scas
aaa
cmp
test
mov
ljmp
sbb
out
jnp
dec
out
or
clc
pusha
add
add
ss
shll
or
pop
add
add
push
add
mov
mov
adc
add
sub
inc
add
add
cmp
push
add
shlb
xor
mov
sarb
add
aam
add
out
pop
and
add
mov
test
add
and
add
lahf
add
add
mov
leave
imul
sub
movsl
sub
mov
addr16
das
push
jle
es
ss
add
cmp
ds
inc
test
sub
int3
in
into
mov
mov
mov
sub
stos
push
lock
ficoms
clc
add
add
inc
in
add
cli
add
or
xchg
adc
add
inc
add
push
add
adc
add
mov
cmp
mov
cmp
add
add
lods
pushf
aad
adc
aaa
flds
xor
add
add
xchg
hlt
in
and
add
sub
in
shr
sub
aas
pop
pop
add
add
sbbb
jmp
or
lods
imul
in
leave
std
out
add
imul
and
in
add
add
in
in
out
pop
lods
add
push
and
ret
stc
icebp
mov
rolb
lret
inc
add
in
faddl
sub
aam
movsb
ja
adc
add
jg
enter
aam
bound
jno
mov
add
jg
test
add
xor
out
inc
fildll
add
adc
add
pushf
das
dec
add
jge
add
add
mov
jo
lret
add
int
xor
and
jp
in
sbb
jno
add
in
xchg
stos
nop
repnz
xchg
push
dec
add
enter
mov
call
rolb
fidivl
push
mov
mov
mov
ds
fistps
je
jmp
lods
roll
je
lods
mov
jg
push
add
imul
dec
add
add
add
add
mov
dec
add
adc
xchg
dec
add
fnstcw
add
lds
negb
scas
or
subl
sbb
pop
xor
adc
cmpsb
inc
add
jns
addb
decb
dec
inc
add
nop
cmp
push
mov
test
les
push
sub
pop
jne
sbb
lock
fidivl
pop
add
xchg
and
data16
arpl
sbb
loopne
repnz
pushl
add
add
outsb
add
add
xchg
jmp
inc
add
add
add
add
fs
jge
jp
inc
push
add
add
add
add
push
sub
and
add
jae
add
adc
add
cmpsl
lock
pusha
add
stos
jo
cli
inc
inc
dec
repnz
add
adc
add
sub
inc
add
fdivrs
xor
add
flds
jns
add
je
xorb
xor
add
mov
movhps
add
xchg
cmc
addr16
leave
enter
xor
fwait
mov
popf
sbb
jl
xor
mov
adc
sub
xor
addl
or
mov
mov
scas
add
pop
into
enter
add
movb
or
xchg
cld
jns
push
add
adc
jns
add
inc
xchg
adc
add
mov
mov
or
rol
or
mov
add
sub
or
mov
mov
add
mov
jg
cmp
imul
add
adc
add
gs
push
add
push
add
mov
jo
adc
lret
add
in
call
enter
xor
add
in
add
dec
add
cltd
nop
popa
bswap
sub
rcrb
ror
jp
cld
movsl
mov
add
add
gs
or
lods
lea
add
outsb
add
sbb
or
insb
add
jge
xlat
add
add
mov
cli
ret
neg
clc
mov
and
add
add
sub
add
and
add
outsl
cmp
sbbl
add
mov
add
roll
cmp
movsl
adc
add
add
add
test
mov
dec
in
mov
out
add
add
xorl
sarb
std
lods
shll
add
jle
mov
cltd
mov
jno
add
inc
add
and
mov
data16
int3
je
fstl
dec
mov
jp
and
add
std
add
add
add
xchg
or
dec
jno
push
call
in
jg
add
test
leave
dec
add
push
add
sbb
fnsave
insb
add
xor
ss
add
shrl
es
addr16
aad
add
add
testb
sub
and
add
pop
add
shll
add
mov
mov
jb
xchg
xchg
ret
mov
ret
sbb
rcl
mov
addr16
inc
mov
insl
add
and
add
add
out
mov
std
add
fstpt
sti
pop
mov
add
pop
add
cmpsl
or
pushf
lret
push
add
test
leave
xchg
jg
mov
add
xor
add
add
push
add
popl
and
add
xor
add
xor
add
adc
add
enter
add
shr
mov
fwait
jbe
pop
popf
or
mov
add
add
rcrb
cmp
cmp
add
jg
push
add
dec
add
cld
add
or
je
jmp
shlb
aam
int
sarl
leave
add
out
mov
push
inc
add
nop
or
cmpl
mov
les
inc
cli
lock
mov
mov
aam
out
mov
add
movsl
push
add
daa
fwait
add
sub
in
add
add
mov
insb
add
sti
pushf
jle
nop
pop
add
int
add
cld
add
xchg
stos
bound
test
inc
add
add
sbb
iret
jne
mov
mov
out
add
xchg
add
add
ret
add
fcoml
clc
add
add
add
add
xchg
sbb
adc
jmp
adc
add
addb
add
je
scas
inc
jle
push
sbbb
mov
bound
mov
ds
adc
add
add
imul
pop
add
stos
jbe
and
add
cld
cmpsb
into
or
iret
dec
add
into
outsl
cmc
test
add
push
mov
mov
and
jg
test
xchg
sbb
les
std
stos
mov
imul
aas
add
fwait
inc
ljmp
adc
pop
mov
movb
mov
jnp
mov
scas
pop
add
das
adc
add
push
add
fmull
add
insb
add
int3
fisttpll
dec
inc
push
add
add
stos
fld
mov
add
hlt
add
stos
imul
jae
pop
ja
xchg
add
incb
jmp
dec
jecxz
sahf
add
xor
add
jecxz
jae
faddl
add
cmc
clc
jns
lock
jg
jo
outsb
add
lret
add
mov
ret
sub
pop
aaa
les
loope
cmpsb
clc
fwait
scas
or
sbb
mov
shlb
daa
cmpsb
add
push
add
push
adc
and
add
ja
iret
pop
add
xor
add
pop
insl
mov
pop
xchg
add
add
bswap
cmpb
add
jmp
xor
loop
add
fildl
push
add
stos
daa
je
ljmp
mov
mov
pop
add
add
out
add
adc
add
mov
add
mov
sbb
inc
add
pop
jns
pushf
stos
out
inc
xchg
les
pusha
add
arpl
adc
add
mov
cmpsl
add
ret
rorb
movd
call
ret
stos
daa
mov
sub
push
add
add
add
mov
scas
sbb
je
adc
add
outsl
mov
pop
add
pop
jb
cli
popf
mov
rcr
mov
daa
sub
cmp
jae
popa
fxch
mov
cmp
mov
outsl
lods
adc
add
mov
sub
mov
sub
dec
add
jne
aas
jne
add
add
add
or
lahf
aad
xchg
iret
ud1
scas
pop
stos
add
mov
inc
add
xor
add
add
add
add
shlb
add
hlt
js
xchg
fistl
add
stc
inc
jmp
daa
movb
inc
add
and
divb
test
pop
lock
lahf
aam
test
out
add
add
clc
pop
add
mov
and
add
push
add
cmpsb
lret
fmuls
add
add
in
lds
add
add
cmp
pop
sbb
push
add
push
add
inc
loop
lods
push
add
add
jbe
test
inc
dec
add
sub
sbb
push
xchg
add
imul
add
add
push
shll
add
xor
add
add
call
std
bound
xor
add
push
add
push
mov
or
shl
or
push
cwtl
stos
mov
add
add
mov
dec
add
pop
add
std
add
add
xchg
addr16
or
leave
mov
pop
push
add
xchg
sbb
or
dec
add
les
xchg
inc
add
je
mov
ffreep
scas
shl
add
mov
xor
packsswb
xor
xchg
dec
push
add
mov
pop
testb
push
outsb
add
mov
pop
add
leave
add
or
lret
xchg
inc
add
xlat
test
shl
adcl
mov
dec
add
dec
punpcklbw
mov
rorl
add
add
xchg
je
pop
add
addr16
add
in
push
add
shrl
add
push
add
xchg
js
inc
or
add
fwait
pushf
addr16
lds
leave
addl
sbb
sbb
fidivl
shll
in
pop
rcrb
clc
fidivl
roll
dec
add
inc
dec
add
adc
push
add
stos
xchg
xchg
sub
imul
out
mov
xchg
add
add
test
xor
add
into
in
scas
loop
pop
xchg
test
jo
push
add
cmp
aam
and
dec
sbb
sub
inc
les
xchg
push
cmp
dec
pop
cli
shll
out
add
fwait
les
imul
add
mov
pop
shlb
push
mov
pop
movsb
divl
rcll
cmpsb
andl
cwtl
loopne
add
add
add
xor
add
cmp
push
add
xchg
mov
xchg
popa
sbb
mov
push
mov
push
add
inc
jns
out
add
aas
add
add
push
add
jle
cmp
out
add
mov
data16
jb
aam
adc
aad
rcrl
inc
jae
sbb
es
add
testb
imulb
cmp
mov
outsl
add
fiadds
jns
add
test
mov
and
test
addb
add
mov
add
jno
push
add
inc
xor
jae
sti
loopne
fnstcw
les
xor
xchg
sub
add
cwtl
mov
add
repnz
push
add
sbbl
mov
add
mov
add
dec
xor
mov
add
stos
add
cltd
sub
fwait
add
jo
movsb
lret
test
dec
cmp
push
add
cs
mov
ret
pop
mov
inc
fsubrl
and
cltd
add
add
add
add
xlat
cmp
ja
iret
mov
arpl
cmp
inc
jnp
mov
adc
stc
test
ficoms
add
bound
jne
add
addb
add
sub
dec
add
pop
mov
mov
fists
js
jns
aad
add
mov
add
push
mov
add
leave
mov
lret
in
add
add
in
in
push
idiv
das
or
mov
mov
les
add
jae
mov
sbb
adc
xor
rolb
push
xchg
push
std
adc
add
repz
cmp
fcomps
push
fiaddl
bound
jnp
test
jg
mov
je
xlat
outsb
add
in
mov
sub
add
adc
cli
add
add
out
lods
mov
push
add
scas
adc
ret
int3
add
popa
add
and
and
add
xchg
popf
stc
and
add
jmp
cmp
cs
inc
or
insl
jb
test
dec
lahf
insl
xchg
jbe
jl
mov
xlat
add
test
sbb
xchg
std
jo
lock
mov
int
mov
into
add
pop
add
pop
push
leave
outsb
add
popf
sbb
mov
out
add
inc
out
add
add
mov
pop
add
sub
mov
mov
shlb
add
andl
int
aad
add
cmp
and
add
add
lret
ror
mov
aas
xor
sbb
pop
add
jns
add
and
jnp
in
jp
js
sahf
mov
adc
add
cli
sub
cld
les
clc
ret
int
mov
cli
jg
jp
or
add
mov
pop
divb
push
sbb
sbb
mov
xor
mov
mov
jmp
mov
movsl
push
adc
add
dec
cmp
sub
jl
daa
fwait
add
mov
jge
jle
js
ret
scas
out
and
add
ret
les
add
push
add
mov
add
arpl
and
add
pop
mov
sbb
jecxz
push
add
sarb
add
dec
adc
add
add
cld
jnp
add
ret
push
jns
stc
fcomps
cmp
xor
add
xchg
pop
mov
adc
add
stos
cltd
mov
mov
stc
pop
add
add
pop
sub
dec
jp
lods
add
push
add
add
inc
add
mov
add
das
pop
add
add
add
es
cmp
repz
xor
add
add
add
xchg
add
add
add
sub
push
out
imul
scas
sbb
filds
mov
sbb
dec
lret
sbb
ret
push
popa
jae
add
add
cmpsb
sbb
sti
repnz
dec
pop
sahf
out
es
add
shl
aaa
inc
add
pop
cmp
dec
add
add
scas
xor
add
addb
sub
test
popa
andl
add
add
addr16
cld
push
mov
mov
cmpb
add
push
jmp
cmp
mov
addr16
popa
adc
add
sahf
ret
add
add
fs
mov
es
add
jecxz
jne
imul
pop
bnd
xchg
add
pop
popl
pop
loope
sbb
mov
cmp
rcrl
mov
add
clc
hlt
ds
test
pusha
add
xchg
mov
jnp
push
jmp
loopne
add
gs
in
scas
dec
leave
mov
xchg
aaa
imul
xor
add
js
push
in
add
xlat
sbbb
mov
add
fs
mov
xor
add
dec
add
insb
add
popf
shrb
jl
xchg
loope
add
sahf
add
cmp
add
add
mov
cmp
inc
add
lods
lods
cltd
rcrb
lds
test
ret
sub
ds
jmp
pop
add
loopne
inc
sbb
inc
scas
iret
loopne
lds
mov
movsb
lahf
cmp
mov
inc
push
xchg
jb
icebp
xchg
xor
add
stos
add
xchg
add
add
test
roll
and
add
add
mov
add
push
add
test
jg
insl
inc
movsb
jbe
dec
add
stc
fwait
lret
imul
add
loop
inc
add
lods
std
pop
dec
lahf
push
sub
je
mov
cmc
movsb
mov
mov
test
xchg
bnd
add
out
xor
add
loope
sbb
dec
add
enter
cmpl
outsb
add
mov
and
add
rcr
mov
mov
add
leave
rcr
lahf
dec
add
cmc
or
adcl
pop
jbe
aas
in
xor
add
or
bound
push
add
mov
add
loop
add
out
or
popf
dec
add
push
add
bound
mov
sti
jecxz
out
data16
pop
add
add
sub
in
test
es
add
push
add
mov
test
push
add
and
add
sti
enter
lods
bound
arpl
dec
add
xchg
cmp
imul
mov
js
sub
jl
pop
add
jmp
add
cld
push
add
fnstcw
dec
cvttps2pi
in
add
testb
add
and
sbb
pop
add
in
push
or
push
cmp
stos
cmpsb
cmp
test
add
xorl
jecxz
sub
mov
sbb
push
add
pop
inc
add
jbe
es
add
das
fiaddl
in
add
add
hlt
test
sub
pop
add
mov
pop
mov
mov
xchg
push
and
add
sub
pop
scas
je
mov
add
xorl
pop
add
or
adc
add
loope
in
pop
int
add
arpl
and
dec
scas
jl
pop
add
add
and
add
mov
mov
adc
and
add
ffreep
cmpl
addb
lret
add
add
add
add
add
pop
add
flds
pop
add
pop
push
mov
push
pop
add
mov
movsb
add
cmp
cltd
jno
cmc
and
add
sbb
pop
ja
add
test
mov
inc
rcr
cli
push
arpl
push
dec
add
add
add
outsb
add
cmc
push
fldl
push
xor
les
mov
addl
adc
xor
fldcw
imulb
rcrb
jle
push
push
movsl
add
add
sbb
lods
insl
push
add
ljmp
mov
aam
cmp
scas
add
jbe
xchg
int
add
sub
push
add
adc
add
sti
ljmp
imul
repnz
lret
mov
orb
add
add
xchg
push
add
push
add
lock
add
inc
aaa
add
or
cmp
inc
add
rcrb
xor
xchg
std
in
lahf
inc
add
loop
xchg
add
add
loop
add
xlat
add
jae
rclb
sbb
and
ljmp
sbb
jbe
add
les
add
cmp
pop
incb
add
cmpsb
lcall
push
push
push
add
out
out
in
dec
xlat
xor
das
fsubrl
nop
mov
jl
pusha
add
insl
cmp
jecxz
int
xor
add
sub
sbb
clc
add
cltd
dec
add
pop
push
vmovsldup
add
int
ljmp
push
hlt
add
sbb
adc
add
pmovmskb
bound
mov
or
cmpsl
cmp
imull
add
pop
add
cmp
mov
pop
add
hlt
lret
pop
pop
add
sub
pop
add
xchg
pop
add
pop
adc
add
filds
push
add
inc
dec
add
sbb
pop
add
pop
addb
lret
xchg
fwait
mov
add
cld
inc
add
adc
add
out
lahf
dec
ror
jbe
arpl
sahf
clc
rol
test
xor
notl
jnp
mov
add
outsb
add
or
and
in
add
data16
data16
cwtl
rcr
cmpsl
mov
scas
mov
stos
das
push
add
add
mov
mov
and
add
and
sbb
xlat
mov
pop
push
jno
and
xchg
add
sti
add
add
rolb
mov
pop
add
aas
mov
cmp
add
add
add
add
add
mov
out
add
add
push
add
xor
add
add
cmc
cmp
dec
add
or
sbb
fisubrl
add
sbb
and
add
add
pusha
add
ja
jae
add
add
aaa
push
add
cmpl
jmp
lret
mov
adc
add
jp
popa
movsb
xor
orl
xor
popa
bound
push
add
mov
dec
cmpsl
int
push
add
xchg
ss
shrb
pop
add
jecxz
add
pusha
add
mov
push
add
out
sarb
mov
repnz
inc
outsb
add
mov
mov
xor
add
stc
int3
stc
mov
mov
adc
scas
add
addr16
add
insl
sub
add
pop
xchg
add
out
add
out
int
cmp
and
lahf
xchg
data16
dec
add
in
jae
add
sub
add
add
cli
jecxz
add
add
out
pop
jno
mov
mov
adc
add
je
push
add
mov
add
fisubrs
addl
add
je
pop
add
loop
daa
pop
add
roll
out
or
jle
fidivrl
ret
add
xchg
cmp
jecxz
paddw
add
ljmp
mov
fadds
repnz
add
xchg
inc
pop
fisttpl
add
add
int
jb
add
add
testb
cltd
and
add
push
add
aad
dec
add
ss
add
dec
add
sub
or
xchg
add
or
add
sub
ja
popl
in
push
stos
add
cmp
add
add
push
xlat
add
incl
and
add
dec
add
out
aad
outsl
or
rclb
jmp
fnstsw
int3
roll
pop
dec
vpsubsb
add
aam
mov
mov
jp
fistps
add
or
push
add
ja
jecxz
and
shlb
cmp
mov
xchg
pop
mov
int3
jl
mov
aaa
fadds
mov
repz
add
and
outsb
add
leave
inc
loopne
fdivl
fiadds
inc
add
rorl
add
add
xor
out
add
add
add
sbb
ss
xchg
add
add
shlb
add
push
add
pop
cmpsb
cmp
jo
ret
int3
mov
fiadds
dec
stos
js
jg
stos
add
add
add
cmp
fxch
cld
mov
sti
mov
ret
sub
in
mov
popf
iret
pop
add
pop
sub
add
roll
mov
cmpsl
add
sbb
push
add
xchg
pop
mov
data16
sub
sbb
sub
arpl
inc
mov
lds
dec
add
lret
dec
add
adc
add
add
in
cmp
push
movsb
add
push
add
inc
add
push
testb
push
add
pop
add
adc
in
jo
inc
add
add
add
mov
cmp
pop
inc
add
push
add
add
add
imul
loope
add
iret
hlt
push
sbb
cli
data16
lahf
jle
lcall
fdiv
nop
in
push
andb
add
movsb
jbe
mov
imul
inc
jbe
mov
add
add
adc
add
mov
ds
stc
pop
mov
add
push
jae
insl
add
add
sub
add
add
lea
adc
repz
lock
xor
add
in
add
rep
in
or
add
or
in
pop
int3
jae
fcomps
into
and
and
xchg
movsl
dec
xlat
add
inc
add
pop
xchg
xor
add
in
dec
jns
mov
add
mov
fildll
jmp
push
add
mov
mov
xchg
add
add
pushf
pusha
add
jmp
stos
fstpt
mov
adc
add
adc
and
add
cmp
jbe
test
add
add
lea
sbb
inc
add
loope
add
cmpsl
in
inc
add
ljmp
xor
fdivs
add
or
rolb
into
roll
add
mov
pop
push
add
jle
mov
les
scas
add
imul
add
add
cmpsb
add
push
add
add
inc
data16
add
add
add
in
add
out
adc
add
or
sbb
add
das
nop
sbb
add
ret
fstl
adc
xlat
mov
fs
addr16
xchg
stos
scas
in
mov
jnp
xchg
add
add
mov
lret
add
add
add
xlat
movsl
loop
cmp
and
add
test
add
add
add
mov
inc
add
and
clc
mov
and
add
mov
dec
add
add
sbb
scas
mov
xchg
loopne
movl
cmp
data16
cmpb
add
mov
daa
sbb
add
add
add
add
jp
adc
hlt
iret
push
add
sti
pop
ficomps
add
dec
push
add
scas
fdivl
in
add
cmp
add
lea
imul
add
pop
add
xor
aad
mov
add
add
dec
add
fiaddl
add
loopne
xchg
sbb
inc
add
add
pop
add
add
add
pop
add
std
cld
std
mov
arpl
lods
jns
enter
cmp
add
and
add
xchg
mov
adc
mov
add
mov
pop
add
cmpsb
fsubs
add
sub
test
and
xor
cmp
pop
add
daa
and
repnz
add
add
adc
fs
fstps
and
add
add
repz
data16
sbb
adc
add
push
add
pop
add
mov
inc
push
add
icebp
icebp
flds
dec
add
arpl
clc
add
loop
scas
pop
roll
add
pop
add
sub
insb
add
loop
lock
iret
jnp
mov
add
popf
mov
mov
mov
sbb
mov
pushf
mov
xor
jbe
mov
sbb
ret
adc
add
add
push
add
sbb
add
mov
pusha
add
clc
incb
lcall
sub
pop
icebp
lds
add
das
loopne
xchg
rcrl
push
add
add
cmp
dec
adc
icebp
sub
push
add
faddl
bound
in
enter
fdiv
test
pusha
add
add
push
adc
repnz
sbb
jp
xchg
cwtl
jo
lea
or
mov
inc
add
insl
push
loopne
or
bound
sub
pop
add
add
adc
lahf
xor
add
add
add
inc
add
and
add
mov
or
fiadds
sbb
cmp
in
xor
xchg
bound
cltd
xor
add
mov
adcl
cmp
cmp
mov
iret
arpl
sub
out
das
inc
add
movsl
pusha
add
stos
jge
insl
jecxz
add
int
test
cmp
into
add
add
out
sub
pushf
in
rolb
popf
in
mov
stos
cmp
mov
add
test
cltd
xchg
insl
mov
jmp
ficoml
cmp
subl
ret
push
add
xchg
outsl
and
add
mov
lods
je
js
push
add
push
add
arpl
out
inc
or
sub
mov
add
leave
sbb
fwait
and
mov
xor
add
add
subb
flds
xor
push
mov
add
add
ret
add
mov
add
loopne
data16
mov
add
mov
add
iret
int
aaa
pusha
add
insb
add
inc
add
or
loope
rorb
sbb
insb
add
xchg
add
add
push
add
mov
cmp
test
jmp
or
sub
inc
add
das
mov
push
lods
div
cmp
testl
stc
add
add
xchg
shr
add
jne
inc
inc
ret
add
add
add
mov
bound
ljmp
jno
mov
push
xchg
data16
and
mov
stos
add
add
mov
int
add
add
out
movsb
mov
lret
lret
imul
shll
xchg
adc
push
loop
add
add
and
mov
add
pop
add
enter
jl
sub
pusha
add
xor
lcall
add
aam
shlb
add
roll
add
cmp
sahf
ljmp
sbb
das
and
aad
inc
add
lods
add
dec
add
sub
xchg
loop
call
mov
das
shll
jle
cmp
or
jae
add
movb
jecxz
mov
xlat
xor
add
jmp
xor
and
push
add
mov
cltd
mov
add
push
sahf
mov
incl
mov
inc
mov
sbb
test
test
add
pop
add
mov
pop
ljmp
rcrl
sbb
pushf
movsb
pop
xchg
insb
add
mov
bound
mov
in
add
add
addl
insb
add
cld
add
mov
add
add
push
mov
shrl
adc
add
add
add
add
sub
repnz
mov
fildl
int
mov
test
fucomip
leave
mov
mov
vmovlpd
add
shll
add
mov
dec
add
testb
add
sarb
call
add
testb
fldl
inc
fbld
lock
jg
xor
add
nop
in
add
add
add
lret
mov
in
cmp
or
mov
add
xchg
add
xchg
pop
add
ss
add
pop
mov
ret
push
cld
data16
in
add
dec
jo
push
add
xchg
nop
dec
fimull
mov
sbb
cwtl
pop
cmpsb
add
push
add
add
mov
pop
scas
push
fiaddl
mov
add
fisubrl
mov
rorb
cmp
xchg
xchg
call
xor
add
adc
in
dec
add
rorl
xchg
xor
fsubrl
test
lock
sub
mov
cmp
das
fcomip
or
add
test
mov
test
push
cmp
ljmp
add
jne
outsl
sbb
shrb
insl
cltd
mov
ss
add
mov
addr16
movsb
mulb
out
add
add
or
mov
add
stc
add
data16
add
ds
dec
add
jle
cwtl
int
sub
push
bound
inc
stos
push
add
pop
sbb
lcall
and
scas
push
fldl
ja
test
dec
inc
nop
sbb
xchg
inc
add
adc
add
add
mov
inc
xor
add
dec
add
add
or
cmp
sbb
xchg
xor
add
inc
add
imul
mov
pop
add
rolb
arpl
add
jecxz
add
cmp
lcall
mov
mov
mov
insl
add
les
or
add
pop
and
bound
pop
insl
add
mov
outsb
add
xchg
in
incl
add
add
dec
add
add
cmp
or
jbe
sbb
andb
add
add
and
add
ret
push
add
add
mov
jae
int3
addr16
cmp
jp
out
push
adc
add
add
mov
fwait
mov
scas
ss
adc
add
and
jae
add
lock
pop
cmpsl
xchg
imul
jmp
xor
test
sbb
inc
dec
mov
enter
jns
mov
add
add
add
dec
add
lahf
ja
mov
in
adc
add
add
cmp
sbb
or
pop
sub
fldt
add
and
add
cmp
add
mov
and
pop
sub
and
pop
add
fs
into
or
add
add
mov
loop
mov
push
aas
add
mov
mov
jmp
add
and
add
inc
add
pop
add
scas
out
add
cltd
and
add
test
test
sub
xchg
sbb
add
mov
jns
add
out
shll
add
inc
push
cmpsb
popa
cmp
mov
pop
add
sub
ret
fnsave
xchg
fstl
xor
push
add
test
out
push
add
pusha
add
xor
add
out
sti
xchg
pop
add
inc
repnz
xor
ljmp
cwtl
and
pop
into
xor
jbe
ret
mov
in
in
push
inc
add
in
nop
arpl
cltd
push
push
xchg
loope
outsl
adc
pop
add
mov
orb
jbe
mov
dec
add
xor
aam
sub
add
add
push
pop
add
rcrl
icebp
loope
add
jnp
loopne
add
add
adc
add
sahf
aaa
jmp
aam
push
add
add
sub
stc
jae
shlb
add
lods
fdivp
jb
aad
xchg
xor
pop
mov
cld
pop
test
jle
sub
mov
mov
add
add
mov
int3
lahf
test
test
sahf
pop
mov
jnp
fstps
sbb
dec
mov
push
add
and
add
lds
add
add
push
add
ret
divl
lret
push
test
add
dec
add
add
pop
add
add
add
xlat
mov
jle
mov
std
or
mov
add
into
sbb
ljmp
push
and
dec
aam
in
lods
mov
add
add
icebp
add
inc
xchg
pop
roll
jp
iret
int3
enter
jns
sbb
push
in
add
mov
nop
js
sarb
xor
sahf
testl
insb
add
cmp
out
jbe
push
pop
xchg
add
sarb
repnz
sarb
add
add
add
mov
push
add
cmpsb
cltd
jae
popf
into
addl
add
insb
add
sbb
cltd
daa
jg
das
mov
mov
data16
dec
je
or
pop
nop
inc
fchs
pop
add
adcb
mov
lods
and
mov
shrb
add
dec
and
add
movsl
add
stos
add
ja
dec
cld
popa
push
dec
add
jb
dec
add
mov
add
inc
add
mov
xchg
in
xchg
cmp
xchg
ret
xor
add
cmp
in
dec
push
sub
ja
mov
or
add
add
call
add
add
cltd
pop
jae
loope
std
xor
add
or
add
repnz
lret
sub
stc
das
mov
mov
scas
popa
lret
add
add
movsl
lods
fstpl
add
test
movsb
sbb
fmull
add
push
add
jmp
jp
xor
cmc
and
add
add
scas
xchg
sbb
xchg
xchg
scas
xlat
mov
add
and
or
jg
stos
sbb
les
mov
mov
mov
add
aaa
jns
mov
lds
add
adc
add
addl
frstor
add
ror
sbb
inc
mov
add
inc
add
jle
in
fdivl
mov
insl
add
sbb
pop
mov
xchg
inc
add
fstpl
mov
xchg
fwait
dec
add
loopne
jg
aaa
add
scas
scas
enter
add
scas
bound
and
add
lret
push
icebp
xchg
mov
mov
inc
add
daa
or
cmpsb
sbb
and
add
add
out
and
add
sub
push
stc
lea
cmp
push
add
ja
scas
lds
movsb
add
test
add
out
test
add
dec
add
add
add
mov
ret
add
cmc
mov
add
add
jmp
nop
push
arpl
divl
sldt
or
jle
nop
adc
and
scas
lcall
add
add
loope
jb
fwait
push
cmc
int
add
mov
out
push
add
add
mov
sub
add
add
add
add
test
shlb
xor
pop
add
shll
sbb
add
in
sub
push
add
jecxz
add
and
roll
int3
add
fldt
insb
add
xor
jp
rclb
stos
mov
dec
add
fiadds
sub
push
test
jo
lcall
add
xor
das
insl
pop
imul
cwtl
add
xchg
and
add
pop
enter
cmpsb
test
jecxz
pop
int
insb
add
xchg
add
cmpsl
lea
adc
add
aam
ja
scas
push
add
mov
stc
lds
out
jb
jnp
mov
pop
mov
add
repnz
sub
lret
pop
pop
add
xor
add
mov
dec
add
jmp
adc
add
xor
mov
sub
jno
loope
fcomps
rolb
add
rorl
jne
xchg
out
cmpsl
jbe
fxch
int
mull
sbb
push
addr16
sbb
and
add
leave
add
stos
cmp
filds
sub
xor
add
sbb
jmp
andl
add
aad
lods
sarl
add
push
add
sbb
mov
fnstenv
or
xchg
push
add
out
add
mov
dec
add
sbb
xchg
ljmp
mov
cmc
ret
xor
add
and
mov
pop
aaa
jnp
sub
pop
add
dec
fucomip
xchg
fsts
repz
sarb
sahf
add
lret
and
inc
add
out
in
fcmovu
movsl
adc
cli
adc
add
adc
or
push
sti
imul
sahf
das
lcall
roll
jns
aam
std
inc
add
nop
lock
cmp
pop
push
jne
add
test
add
mov
sahf
cmp
inc
add
inc
add
xchg
movsl
insl
jge
add
fistps
add
add
mov
sti
lcall
pop
add
and
and
push
andb
or
lods
sahf
sbb
sti
das
rclb
pop
and
push
add
cmp
addb
xchg
pop
clc
sbb
inc
add
mov
push
sbb
out
pop
push
add
bound
sbb
clc
sub
mov
sub
xor
cmp
test
xchg
orl
pop
es
mov
leave
lea
sbb
fsubrl
add
add
add
rolb
popa
jp
add
fmul
pop
nop
mov
cltd
xchg
shl
js
sti
mov
xchg
inc
add
leave
or
loope
test
xchg
into
fnsave
push
pushl
flds
jmp
mov
fiadds
xchg
mov
lods
add
lret
and
add
xor
and
nop
dec
flds
add
mov
mov
mov
adc
add
leave
lods
repnz
insl
aas
add
add
rolb
adc
add
pop
dec
ret
add
add
inc
enter
stc
cltd
pop
fbld
in
jae
xchg
or
sbb
nop
mov
add
mov
pop
or
out
sbb
adc
add
jmp
movsb
inc
add
sub
add
lods
jmp
add
mov
mov
cmp
fiadds
fwait
mov
push
add
xchg
add
add
xchg
push
add
xchg
add
shlb
or
aad
loope
mov
sbb
cwtl
inc
add
std
add
in
aad
daa
ret
out
std
or
aam
out
add
add
ret
mov
add
add
add
or
dec
add
pop
cmp
inc
jnp
xor
test
add
push
and
aad
jnp
xor
add
jle
xchg
lods
xor
add
add
popf
ljmp
or
inc
mov
je
cmp
add
mov
add
add
lds
lds
jae
inc
lods
aas
or
jmp
mov
sarl
mov
sbb
xlat
mov
add
xor
jbe
inc
pop
add
add
fstp
rol
and
add
pop
sub
sbb
jns
pop
add
je
push
add
daa
hlt
add
scas
popa
loop
mov
jae
add
push
add
sub
cmp
hlt
lods
jecxz
cmpsb
out
pop
add
push
mov
js
movsb
xor
pop
add
sub
cmp
and
add
subb
popa
add
xchg
adc
add
add
ljmp
jbe
push
inc
add
mov
or
sbb
and
push
data16
jne
add
add
jge
pop
jmp
sahf
mov
inc
add
dec
add
add
out
mov
out
in
insl
iret
adc
pop
add
add
movl
adc
push
and
aad
fildl
orb
push
add
popf
aas
cmp
iret
pop
sbb
ja
push
movsb
add
add
int
mov
arpl
pop
add
and
add
adc
add
in
and
xchg
and
add
add
add
lahf
scas
pop
add
insl
inc
orb
cmpsb
inc
add
mov
addb
add
add
out
lea
inc
add
rorl
int
xchg
add
sbb
inc
add
add
flds
add
add
add
add
add
sub
nop
nop
pushf
adc
add
add
mov
fwait
sar
jo
orl
lret
push
mov
leave
add
sbb
sarl
add
sbb
sub
push
xrelease
out
rolb
add
add
add
adc
wrmsr
xchg
add
add
sbb
xchg
mov
jg
test
lcall
add
add
mov
dec
add
cmpsl
mov
mov
mov
cmp
jecxz
pop
ret
push
add
sbb
xchg
and
add
stos
jp
mov
add
push
mov
push
adc
add
lds
sbb
add
js
stos
cs
jbe
fstpl
mov
add
pop
nop
add
mov
pushf
inc
test
and
inc
add
or
mov
out
iret
cmp
out
add
add
mov
adc
jmp
xor
stc
cwtl
jb
inc
adc
or
lcall
rclb
cmc
mov
fiadds
popf
mov
add
sbb
dec
add
and
icebp
adc
add
in
call
arpl
add
pusha
add
inc
add
add
add
add
push
add
loop
imul
lods
loop
add
stos
in
add
test
fwait
mov
and
add
cmp
out
fbstp
add
mov
icebp
xlat
mov
cwtl
jo
mov
inc
add
mov
dec
add
jmp
add
rolb
sub
adc
jge
cmp
int3
mov
insb
add
into
int
repz
aam
daa
aaa
add
adc
add
add
add
add
jbe
add
add
xor
test
add
aaa
jb
addr16
sub
out
std
sarb
sub
push
add
movsl
mov
inc
add
xchg
and
add
lea
call
add
jp
or
mov
ljmp
lea
add
mov
sub
loop
str
jnp
pop
add
cmpsb
add
and
icebp
stos
cmc
mov
je
adc
ret
fs
xchg
xor
add
add
jne
add
push
xchg
sbb
popa
and
mov
add
xchg
add
xorl
mov
add
xor
add
pop
add
cltd
add
rcrl
mov
add
jbe
add
add
add
filds
add
inc
and
lods
aad
popf
out
fmul
repnz
jo
sub
push
add
add
add
mov
stc
fsubl
testb
sbb
push
bound
mov
pop
dec
add
xor
add
ds
fsubs
add
clc
mov
and
add
add
sbb
inc
rcrb
add
add
daa
stc
add
dec
add
incb
and
add
dec
add
add
leave
add
enter
xor
rcrb
rorb
add
jge
int3
shrb
add
aaa
addl
xor
xchg
in
mov
xlat
or
jno
sahf
jbe
adc
push
scas
je
sbb
jne
add
pop
add
cmpsb
mov
add
jnp
sub
adc
add
push
add
add
jl
dec
xor
enter
add
jbe
daa
sahf
add
mov
sbb
sub
dec
pusha
add
aam
daa
cmpsl
add
push
test
jns
add
cmpsb
xchg
mulb
push
add
jae
mov
add
sub
icebp
in
notb
add
mov
lods
add
add
mov
sbb
cmp
ret
pop
add
stc
jecxz
cld
add
add
lods
jne
mov
add
add
enter
xor
test
add
adc
add
repz
repz
jmp
sbb
jle
mov
add
dec
add
dec
stos
sub
mov
jmp
sbb
inc
add
shl
add
sub
out
orl
push
leave
out
mov
rcl
inc
rclb
sahf
add
addl
xchg
cltd
aas
add
icebp
sub
dec
xchg
mov
pop
add
sbb
xchg
out
mov
xor
out
int
add
sub
xor
pop
inc
add
cs
pop
push
add
jg
push
adc
jp
stos
sub
enter
xchg
pop
cmp
pop
fisubs
jo
movsl
inc
int3
jo
jnp
mov
add
add
xchg
nop
dec
add
int3
adc
push
add
add
xchg
mov
outsl
gs
add
sub
sub
add
jmp
imul
daa
xchg
xor
add
ja
inc
scas
mov
popf
push
fwait
add
push
add
test
repz
dec
add
mov
mov
add
jns
cli
and
ja
push
add
jnp
mov
int
xchg
sysenter
adc
xchg
les
popf
xchg
push
in
sub
and
add
add
mov
push
add
inc
add
jl
add
add
leave
add
add
inc
add
add
rcll
mov
cmp
lret
gs
cwtl
xor
pop
testl
add
mov
sbb
lret
inc
add
xchg
dec
add
movl
imul
sub
xor
add
and
add
inc
add
movsl
add
and
loop
pop
add
push
add
xchg
add
add
add
inc
repnz
pop
add
xchg
mov
insb
add
lea
xchg
add
loop
cld
popa
mov
stos
dec
add
add
add
sar
xor
add
fstpt
mov
jbe
std
sbb
aad
addl
add
movsl
add
jmp
inc
out
ror
sub
stc
mov
mov
push
add
inc
insl
stos
jle
frstor
fwait
loopne
rcr
inc
stos
in
jl
sub
jb
lret
or
rorb
in
mov
adc
imul
ljmp
dec
add
add
push
add
shrb
push
add
jne
out
add
add
add
aad
sub
iret
lock
add
in
insl
ja
int
les
cmpsb
jge
add
add
or
test
jle
xor
add
lahf
xchg
mov
faddl
inc
add
pop
jmp
adc
add
add
test
add
add
fstps
mov
jg
mov
leave
stc
jmp
je
cmpsb
push
xchg
outsb
add
adc
sub
add
add
fldl
sub
icebp
call
jae
jg
xlat
pop
out
aam
js
push
add
pop
push
cmp
lahf
add
mov
adc
mov
in
cmp
in
sbb
add
jmp
pop
cli
incb
test
and
add
add
add
fldt
add
fbstp
je
push
add
lock
stc
xchg
sub
jl
dec
add
xor
jecxz
out
and
add
add
fcoms
inc
add
mov
daa
lret
add
mov
jnp
jp
jb
xchg
lods
sub
add
lcall
les
sti
fwait
test
add
in
adc
add
add
add
sub
jmp
add
add
sub
enter
add
add
add
jecxz
inc
add
decb
stos
add
jp
popf
pusha
add
sbb
lods
cmp
add
add
pop
cltd
xchg
push
add
verr
bound
xchg
add
add
cmpsb
ss
cmp
clc
icebp
adc
je
push
sbbl
pop
in
mov
scas
add
test
insl
add
sub
inc
add
mul
gs
lret
push
lret
add
xchg
jg
xchg
and
add
sub
icebp
and
add
dec
add
add
push
add
jne
add
fyl2x
rcrl
add
xlat
inc
add
pop
dec
add
add
dec
push
xchg
push
jae
xor
add
cmp
dec
add
add
mov
push
push
inc
add
loop
add
xchg
push
add
movsb
add
cmpsb
leave
add
jne
xor
add
add
mov
cmp
xchg
das
out
add
dec
adc
add
out
jno
add
dec
scas
ljmp
add
test
add
add
add
xchg
outsb
add
movsl
pop
sbb
xchg
les
jp
jno
aas
xchg
add
add
aad
inc
add
gs
add
pop
sub
adc
add
add
stos
sbb
iret
cmpsb
push
ret
and
subl
in
mov
loop
lock
push
add
or
add
add
fnsave
mov
add
mov
add
add
cld
push
repnz
fdivrs
ja
lahf
add
roll
xchg
inc
int
cwtl
shll
xor
bound
xchg
iret
or
xchg
setno
iret
add
pop
add
adc
push
adc
sbb
shll
add
lret
imul
adc
add
mov
xchg
push
popa
push
mov
jnp
add
dec
add
int
enter
lret
rcrl
jne
add
mov
scas
add
add
fwait
push
inc
add
xchg
pop
push
outsl
jae
lret
movsb
xchg
dec
add
add
push
iret
dec
lea
add
and
imul
dec
push
add
add
add
adc
add
gs
mov
mov
insb
add
add
cltd
popa
movsb
adc
add
and
je
add
mov
push
add
adcb
add
in
sbb
add
scas
jo
fwait
out
sub
sahf
stos
push
mov
xlat
leave
inc
add
lds
and
add
mov
push
jbe
rorl
add
arpl
dec
add
fcoms
add
push
insb
add
shrb
add
and
add
gs
add
hlt
pop
inc
rcll
mov
mov
cmp
shrl
in
push
mov
adc
pop
add
pop
dec
or
push
add
sahf
add
cli
fistpll
add
inc
add
add
insl
xor
inc
add
roll
in
outsb
add
mov
push
add
pmulhuw
pop
jae
jmp
push
add
jb
jg
sub
std
or
cs
mov
add
add
ret
mov
lds
push
add
add
enter
add
loope
mov
jb
add
or
inc
add
pop
add
mov
daa
in
add
clc
sbb
shl
mov
cmpsb
xor
add
int3
pop
mov
sub
fisttpll
add
add
add
cmp
test
daa
out
lods
add
push
add
add
sub
outsl
adc
add
adc
into
mov
jecxz
es
add
push
or
jnp
add
loopne
xchg
rorb
jbe
mov
out
repz
test
mov
or
xlat
mov
mov
sbb
es
add
stos
insb
add
mov
mov
test
jb
xor
add
mov
sbb
dec
popa
movsb
test
add
inc
add
add
fadds
fwait
push
adc
add
jmp
mov
enter
inc
or
xor
add
addb
add
pop
add
sub
fwait
subl
mov
xchg
cld
jge
fwait
pop
cmp
fsubrl
rolb
pop
jne
add
hlt
les
add
mov
add
sub
or
dec
add
pop
stc
add
sbb
cmp
rcl
filds
add
pop
add
xor
pop
pop
add
int
pushf
add
dec
add
jge
insb
add
les
stos
js
outsb
add
int3
movsb
into
hlt
mov
ja
inc
add
cli
xchg
adc
mov
sbb
sub
xchg
aaa
nop
add
fadds
sub
movsb
insl
dec
xor
or
ret
sub
fidivrs
mov
add
jo
popa
push
add
jmp
daa
cs
test
add
cmc
dec
imul
repnz
popf
and
push
mov
add
mov
mov
add
insl
in
fnstenv
stc
push
add
and
pop
mov
add
add
pop
sbb
add
int
mov
jl
pop
add
cld
push
insb
add
add
mov
cmp
jp
int3
dec
in
sbb
adc
add
add
fwait
mov
cmpsl
push
add
jb
std
insl
stos
add
add
add
notb
jecxz
sarl
add
dec
call
fists
repnz
add
add
push
nop
sbb
daa
adc
mov
push
add
lret
inc
add
push
loop
cmp
dec
add
add
add
add
in
faddl
stos
mov
pop
add
add
add
mov
xor
ja
out
or
jne
rcr
fwait
cmp
add
xchg
fcompl
xor
add
push
add
cwtl
mov
add
mov
add
mov
inc
add
aaa
addl
add
add
add
jo
add
add
xchg
inc
add
add
pop
aaa
aas
add
pop
adc
add
stos
and
pop
gs
xor
add
and
add
add
add
rorl
iret
int
adc
add
sub
icebp
bound
sbb
add
mov
test
loope
shll
mov
sbb
inc
adc
test
pop
ja
mov
aad
faddl
cmp
adc
nop
mov
push
test
nop
add
cmp
test
andb
add
push
add
popf
mov
jge
dec
add
cmp
mov
movsl
add
mov
xchg
sbb
jle
lcall
add
lea
repz
pop
xchg
inc
stos
imul
mov
add
les
dec
add
add
push
add
iret
add
add
sbb
xlat
sub
sbb
add
add
inc
pop
add
rcr
imul
sub
addb
repz
add
add
pop
jb
rol
je
mov
xor
add
add
test
mov
lea
cmc
fwait
push
add
sbb
bound
xchg
push
add
xor
add
out
add
das
jo
adc
add
mov
cmp
push
lcall
push
add
add
cmp
addl
add
add
xchg
add
add
pop
jl
fisttps
mov
add
aam
xchg
lock
jne
flds
bound
pop
add
movb
bound
out
push
sbb
dec
rclb
add
sbb
push
add
xchg
cmc
sbb
and
in
cwtl
sbb
cmp
xchg
es
add
add
add
mov
cwtl
push
jp
add
add
push
add
add
clc
in
lcall
andb
out
mov
add
add
test
in
add
sub
xchg
push
arpl
push
addb
jl
adc
add
sub
add
add
add
aas
into
sub
inc
into
xor
add
mov
outsb
add
js
mov
out
add
cmpsl
pop
in
sub
scas
add
add
add
in
jb
mov
roll
mov
add
cld
mulps
out
fwait
pop
add
add
add
out
dec
cmp
add
add
mov
ss
xor
out
add
mov
out
push
dec
add
sbb
adc
shll
pop
lcall
add
stc
cmpsb
push
mov
aas
add
add
xchg
lahf
push
add
test
bound
mov
add
mov
inc
add
mov
jle
rcl
adc
add
add
mov
out
sbb
adc
add
rorb
add
add
pop
cmp
cmp
in
mov
data16
mov
pop
test
and
add
inc
add
adc
dec
int3
and
add
and
pop
add
xchg
pop
add
mov
jbe
mov
jae
incb
dec
aaa
pop
add
add
sub
xor
mov
xchg
mov
mov
add
mov
add
add
mov
dec
add
add
rolb
jae
inc
inc
mov
lret
add
stos
add
sub
shlb
add
jb
push
add
xor
add
ja
jecxz
outsl
insl
xchg
mov
fwait
add
add
add
inc
add
rorb
and
ja
fmull
lods
in
push
aaa
addb
add
add
pop
scas
add
aas
lock
add
adc
out
cmp
add
and
add
adc
add
mov
jmp
mov
add
rclb
xor
je
sbb
sub
jp
sbb
sbb
fidivs
ficoms
cld
add
mov
in
js
imul
or
stos
cld
std
insb
add
add
sahf
stc
push
sub
lret
add
imul
jle
stos
rcrl
fbld
add
push
add
into
sti
test
outsl
add
xchg
sub
mov
shlb
add
jp
insl
xlat
in
adc
outsb
add
xor
add
mov
nop
add
dec
sbb
mov
xor
push
add
sbb
pop
sub
xchg
cld
mov
aas
cmc
lcall
mov
add
jnp
jae
pop
fcomps
xor
fwait
mov
jge
add
popa
stc
lods
inc
add
jnp
cmpsl
leave
and
add
jns
daa
add
push
outsl
and
or
or
negl
push
int
in
data16
cmp
lcall
stos
and
dec
mov
xrelease
dec
add
push
add
cmc
bnd
mov
xchg
rclb
nop
sti
iret
inc
and
add
cmp
xchg
fwait
daa
fildl
jae
jae
xor
mov
add
add
and
scas
xchg
jne
mov
mov
pop
mov
cmp
cmp
sti
mov
add
fnstsw
cltd
stc
mov
loope
pop
pop
add
pop
add
stc
aad
sarl
add
dec
mul
push
hlt
add
popa
ss
add
jmp
add
add
adc
ret
add
es
add
and
xlat
data16
outsb
add
leave
add
jp
ret
stos
fbstp
fadds
push
add
mov
imul
add
ret
push
fs
xlat
xor
add
bnd
xor
add
sub
dec
add
lods
add
mov
cmp
fldt
adc
jecxz
push
adc
popa
xchg
out
lret
push
add
mov
inc
add
mov
add
add
mov
add
lahf
xchg
pop
add
add
add
incb
gs
inc
add
mov
std
loope
adc
pushl
sub
xor
push
push
add
push
popa
add
movsl
push
add
je
mov
push
add
imulb
add
pop
add
sub
out
lods
sub
bound
xchg
dec
add
data16
dec
mov
mov
fisubrl
jl
into
test
int
loopne
mov
add
fsubrs
pop
sub
add
jb
cmpsb
and
add
sbb
add
add
in
add
fcompl
add
sbb
add
cmp
and
jg
movsl
andb
jb
pop
stos
into
cmp
ret
add
cmpl
push
xor
add
bswap
xchg
repz
mov
fdivrl
add
sti
pop
add
test
mov
lret
adc
add
in
push
add
add
add
daa
sub
rolb
jge
dec
test
pop
or
add
add
lret
mov
jmp
sub
mov
mov
nop
imul
sbb
cmc
adc
add
cltd
divb
lods
add
jne
add
bound
stc
push
add
xchg
in
scas
add
add
inc
sbb
adc
jle
xor
add
dec
add
push
add
inc
xor
add
mov
add
jmp
xchg
cmpl
push
xor
add
pop
add
out
add
movsl
cmp
aam
add
sub
cld
add
add
pop
add
lcall
mov
nop
xchg
adc
cmp
adc
cmpsb
fldenv
jne
cmpsl
jmp
adc
push
fwait
test
add
add
sbb
test
adc
add
sub
call
add
call
or
cmc
jl
sbb
or
mov
cmpsl
cwtl
and
add
js
xor
pusha
add
icebp
je
dec
add
icebp
add
inc
test
js
lcall
loop
pop
lcall
out
insb
add
faddl
jbe
mov
add
add
mov
xchg
jnp
cmpsl
dec
cmpsb
dec
mov
popa
sub
add
add
mov
add
add
out
insb
add
push
add
aaa
repz
mov
lcall
dec
add
leave
add
jnp
add
rolb
ja
mov
cmp
fistpll
xchg
enter
sub
mov
out
adc
add
outsl
ss
add
mov
adc
add
dec
add
add
scas
jbe
lods
xchg
push
add
lret
out
add
add
or
jg
std
add
add
or
xorb
add
inc
mov
pop
jmp
dec
add
les
ficomps
sbb
add
inc
add
pop
add
cmp
sub
mov
or
sbb
sbb
shr
popf
jg
push
mov
clc
pop
add
out
push
add
sbb
mov
pop
add
mov
add
mov
dec
add
cmp
cmp
not
sub
popa
outsl
jnp
add
or
nop
jo
cmp
add
jp
jg
add
rolb
xor
lea
ret
mov
jo
mov
jecxz
jecxz
dec
mov
and
sbb
add
scas
push
add
jae
push
add
and
add
xchg
mov
jo
mov
add
add
rolb
cmp
aaa
add
fdivrl
add
call
in
dec
add
dec
add
das
mov
mov
icebp
xlat
adc
add
stc
ficoml
inc
add
in
arpl
inc
push
inc
add
pop
mov
lret
xor
sbb
sbb
clc
add
add
sub
gs
ds
mov
jp
shl
repz
test
lods
cmp
cmpsb
jmp
sti
mov
add
pop
bound
xchg
add
shlb
iret
pop
add
jnp
mov
dec
cmp
dec
add
add
out
outsb
add
add
mov
push
jb
iret
popa
cmp
loope
stos
add
push
aaa
add
pop
in
lcall
mov
test
push
add
lods
pop
xchg
sbb
add
nop
fstpt
add
push
add
push
add
insb
add
add
jge
push
add
jecxz
aaa
addb
fwait
add
imul
cld
mov
adc
xor
xorb
cmc
add
fwait
mov
js
mov
adc
add
fwait
test
cmpsl
shrb
aad
and
inc
add
dec
add
add
mov
push
inc
add
add
negb
dec
mov
jns
dec
addr16
cmpb
add
xchg
fs
pop
das
cld
int
add
fdivrl
add
inc
add
xor
add
pop
add
jmp
mov
and
leave
cld
push
roll
mov
stos
add
fstpt
cltd
stos
xor
add
adc
xchg
fldl
stos
cmp
add
scas
in
add
dec
add
inc
add
mov
out
add
mov
je
jns
add
cmc
fistps
push
add
xor
adc
add
mov
jbe
lock
fbld
aaa
aam
inc
add
xchg
ds
rcrl
push
add
push
add
data16
in
inc
add
add
jge
lds
in
push
add
shlb
add
push
mov
xor
add
add
push
or
inc
pop
mov
cwtl
jp
xor
testl
jbe
fidivrl
std
shll
add
push
mov
popf
bound
pop
sub
push
add
add
fsubp
lahf
inc
add
cmp
ficoms
inc
ss
add
mov
add
sub
dec
add
mov
add
pop
inc
add
mov
lock
jg
dec
iret
loop
pop
add
add
cmp
add
fxam
push
add
add
add
vmovdqa
add
xor
add
mov
xchg
aaa
out
jl
and
ret
pop
lock
add
push
and
add
mov
add
int
int
mov
jae
movsl
add
sub
add
cmp
fsubl
add
sub
fisubrl
movsl
call
in
bndstx
add
jl
mov
mov
add
cmp
aad
add
lds
sbb
aad
rolb
mov
add
add
add
add
into
cld
leave
enter
add
add
inc
jnp
mov
cs
xor
add
cmp
mov
testb
sub
xlat
movsl
enter
add
add
bound
sub
add
push
add
xchg
sub
xlat
push
adc
add
cmp
mov
sbb
jae
pop
add
scas
adc
add
add
push
add
insb
add
insb
add
movsl
xchg
push
mov
scas
xchg
push
adc
add
mov
outsl
push
add
jp
add
add
outsl
add
cmpsl
add
add
cltd
or
and
xor
pop
add
mov
add
add
cld
dec
adc
or
daa
mov
add
rclb
sbb
mov
dec
inc
push
lea
fldcw
mov
add
pop
js
xorl
add
xchg
add
stc
mov
or
mov
outsb
add
add
add
and
and
add
lret
test
addl
nop
xchg
add
push
ret
dec
add
dec
add
or
lea
or
add
push
mov
test
and
add
ss
add
mov
jbe
stos
jecxz
add
adc
mov
add
icebp
jnp
add
mov
mov
in
add
mov
fsts
inc
add
xor
into
inc
insl
ret
scas
in
add
mov
ret
fildll
jb
icebp
mov
cmp
pop
testb
sub
rcrb
pop
add
repz
loopne
leave
lahf
in
mov
pop
xchg
xchg
inc
add
cmp
push
dec
add
pop
add
fists
in
ret
mov
bound
out
clc
adc
add
mov
or
cmp
lret
xorb
add
jl
mov
add
push
add
int
jle
mov
inc
and
add
dec
add
mov
add
lods
vlddqu
xor
add
lahf
jne
add
xorb
outsb
add
and
add
xorb
add
pusha
add
push
add
int
dec
ds
inc
add
call
pop
add
sub
adc
add
jbe
or
push
ficompl
adc
mov
loopne
add
mov
aas
and
add
fnstsw
jp
sti
push
mov
outsl
jbe
clc
lahf
add
add
aaa
mov
xchg
outsb
add
pop
data16
rol
pop
and
cmp
jbe
dec
xor
add
add
add
dec
cs
addl
adc
add
add
lock
lods
lret
dec
movsl
sbb
push
add
jbe
dec
inc
add
arpl
add
add
jge
cmp
enter
cwtl
push
dec
xchg
sbb
mov
int
pop
jnp
enter
add
sbb
shlb
add
push
add
inc
add
xor
je
cld
pop
add
lods
add
add
cmp
add
icebp
imul
dec
out
sub
add
cltd
push
sbb
cmpsl
sbb
insb
add
jge
add
add
add
cs
scas
loop
iret
pop
mov
test
push
stos
sub
mov
stos
cmp
cwtl
aam
sbb
jp
fstl
std
cltd
mov
je
pop
mov
xor
add
test
sbbl
dec
add
mov
xor
push
ljmp
jp
pushf
divl
adc
lret
cmp
dec
add
push
mov
mov
add
test
jbe
dec
mov
add
add
xchg
or
call
push
add
mov
cmp
adc
add
outsb
add
add
and
add
mov
inc
add
rcrl
mov
add
orb
ljmp
out
add
add
in
iret
inc
add
add
add
sbb
cltd
ja
jle
jo
cmp
repz
add
pop
add
mov
data16
popa
add
pushf
fidivl
hlt
test
xor
add
pop
add
popf
cs
dec
fcmovbe
adc
add
jb
add
add
xor
mov
xchg
cmpsl
stos
sti
adc
add
push
add
jno
in
add
aas
mov
pop
adc
add
inc
fistpl
and
add
in
or
popa
and
add
inc
add
movsb
loope
mov
outsb
add
sub
inc
add
sarl
sbb
test
add
mov
add
add
in
dec
xor
mov
mov
add
jb
out
xchg
mov
mov
mov
cld
jl
mov
add
dec
add
add
mov
cmp
bound
sub
ljmp
push
add
fidivl
xchg
add
in
xchg
dec
call
cmpsb
mov
cwtl
add
or
es
add
out
call
sahf
push
jbe
pop
pop
add
mov
aas
cwtl
xor
cmpsb
cmpb
add
std
add
gs
inc
add
test
lahf
out
rclb
add
xor
dec
add
jb
out
cmp
or
sbb
dec
add
insl
pop
out
mov
adc
adc
add
mov
push
adc
add
add
out
add
add
and
movsl
pop
dec
add
pop
add
loop
sub
into
push
in
add
lods
arpl
imul
sbb
mov
add
jecxz
hlt
or
sbb
adc
add
xor
add
shlb
add
xchg
push
mov
aad
push
adc
add
or
out
shr
addr16
dec
loope
dec
add
add
push
fwait
sbb
xor
add
add
sub
or
mov
xor
and
mov
add
orl
add
add
aaa
nop
add
loope
or
icebp
push
add
sti
xchg
pop
add
add
imul
int3
lret
adc
add
inc
and
add
aam
filds
movsl
lods
xor
add
mov
cmp
mov
add
mov
inc
add
loope
sub
add
enter
inc
xchg
sbb
mov
pop
ljmp
arpl
aam
mov
sub
jae
add
sub
pop
outsl
add
cltd
xor
add
mov
aad
xchg
fdivr
fisubl
outsb
add
push
add
adc
add
dec
outsb
add
cmpsl
test
je
xchg
push
xchg
arpl
add
add
mov
fs
xchg
dec
add
cmc
or
cltd
pop
sbb
xchg
mov
fdivr
mov
sub
out
push
mov
mov
xor
inc
gs
pop
into
shlb
loopne
adc
mov
pop
add
add
adc
add
adc
add
pushf
xchg
fs
jg
les
sub
xchg
sti
sub
inc
push
sbb
shlb
adc
inc
ret
add
adc
leave
mov
testb
in
insl
sub
or
int3
rcrb
or
loopne
pop
push
addb
shll
add
leave
lret
mov
add
mov
add
adc
lea
data16
mov
pop
movsl
outsb
add
js
cmp
add
rcr
add
add
mov
adc
add
or
lea
fistpl
mov
pusha
add
xor
nop
mov
mov
jb
sub
cwtl
aaa
addb
add
add
test
ror
lea
loope
les
dec
imul
pop
add
add
xchg
shrb
pop
test
add
add
cmp
lret
sbb
stos
pop
inc
scas
inc
add
dec
add
add
push
aaa
bound
push
add
mov
xor
xor
add
out
subl
add
mov
bound
leave
bound
mov
add
mov
inc
add
test
lods
or
xchg
testl
insl
aaa
sbb
aad
add
add
jmp
popa
xchg
add
add
mov
add
mov
iret
es
adc
add
push
pop
add
lahf
ret
mov
mov
or
add
lcall
jne
add
xchg
sub
sub
inc
add
mov
clc
jns
popa
fsubrl
lock
mov
loopne
add
add
or
xchg
sub
repz
sub
int3
loope
cmp
add
movsl
add
push
out
repnz
loopne
cld
insl
sbb
fidivl
sub
loopne
mov
aam
leave
add
imul
jg
push
mov
imul
mov
inc
jae
dec
inc
add
add
and
loop
mov
std
xchg
mov
add
imul
insl
xchg
mov
stc
ja
mov
add
cmpsb
lcall
outsb
add
mov
cmp
lods
add
add
inc
add
icebp
add
lock
lods
je
sbb
cli
aam
add
in
add
xchg
punpckldq
sbb
ljmp
push
add
add
or
cmp
lret
adc
add
add
add
sbb
test
mov
into
movsb
dec
add
mov
scas
add
add
sti
loope
out
xchg
add
aad
add
lock
jmp
dec
add
adc
add
outsl
and
add
add
or
mov
push
add
mov
add
sub
mov
arpl
add
mov
jg
scas
add
cmpsb
cmp
andb
test
sub
sub
in
dec
notl
xchg
dec
lahf
shr
lcall
add
push
pop
stc
add
jecxz
mov
add
cltd
and
add
jb
jae
push
add
scas
sbb
jecxz
cmp
scas
movsb
lock
inc
shr
xor
add
add
jb
sbbl
add
sbb
pop
add
add
jl
xor
add
cmpsb
lahf
push
and
add
int3
addb
jae
add
add
sbb
inc
push
es
add
xchg
jp
sbb
ljmp
push
add
add
data16
adc
add
std
add
add
mov
jb
sbb
jl
lret
data16
jmp
push
inc
outsl
subl
sub
adc
cld
mov
add
in
mov
add
mov
ficomps
jg
std
test
sysexit
push
sbb
lcall
es
mov
loopne
jg
fsts
out
add
xor
mov
outsl
sub
ja
rcr
push
add
les
jg
mov
mov
or
data16
xchg
mov
add
icebp
xorb
test
xorb
mov
add
mov
in
sbb
adc
sub
roll
mov
imul
add
sti
pop
add
mov
sbbl
pushf
cmp
cmpsb
shrb
add
add
or
ret
popa
cmp
xchg
std
sub
insl
mov
pop
pop
add
adc
enter
addl
and
filds
int3
frstor
add
sbb
test
add
add
xchg
or
sbb
loopne
mov
xchg
int3
cltd
lcall
add
cmp
pop
enter
bound
shrl
add
mov
cs
int3
test
aad
pop
enter
not
push
mov
adc
add
repnz
and
test
and
push
add
les
bound
xchg
sbb
add
and
add
mov
add
dec
add
xor
add
push
xchg
add
loop
add
aam
mov
sbb
add
add
repnz
mov
testl
pop
out
add
insl
in
popf
add
xor
add
out
inc
and
add
add
sbb
and
add
sub
sbb
aad
mov
inc
add
push
movsb
add
test
pop
mov
frstor
sahf
add
add
dec
add
add
xchg
mov
dec
add
xchg
add
add
push
add
sarb
out
add
mov
je
stos
mov
test
repnz
int
scas
mov
add
push
lret
sti
dec
dec
add
cmpb
mov
call
add
sarb
jns
stos
jno
jmp
or
cmp
add
mov
add
enter
jno
add
xchg
pushf
imul
dec
or
add
push
add
lea
aam
add
inc
add
add
insl
xorb
add
sub
or
add
inc
add
xchg
xchg
cmp
ljmp
cli
add
add
add
jmp
das
add
call
out
popa
leave
xor
add
sarl
mulb
nop
push
add
add
jg
std
cltd
pop
add
cwtl
jecxz
add
add
mov
movb
cmp
mov
add
test
popf
pop
add
mov
movsl
out
add
and
pusha
add
add
mov
cmp
push
add
push
mov
add
and
add
call
adc
add
add
or
mov
add
add
add
outsl
add
add
add
sbb
andnps
pop
add
jmp
pop
add
in
movsl
sbb
data16
mov
sahf
test
xchg
mov
scas
mov
jecxz
add
push
outsb
add
js
loopne
add
data16
cs
das
out
cmp
das
sbb
adc
mov
mov
add
iret
ja
add
cmpsb
adc
add
int3
push
add
les
jns
xor
adc
insb
add
mov
lock
add
add
add
xchg
fwait
jb
add
sar
cmpsb
inc
add
mov
aam
push
stos
mov
ret
pop
add
sub
add
popa
pushf
xor
add
add
add
add
sahf
mov
pushl
jae
push
add
cmc
add
fidivrs
insl
or
insb
add
jl
push
jne
leave
das
or
add
repz
mov
xor
add
jge
lds
jl
in
mov
push
cmp
stos
ret
mov
xlat
add
sbb
push
add
fwait
or
push
add
add
or
xor
add
push
add
add
xor
add
push
and
cmp
lcall
mov
in
inc
add
push
add
xor
add
or
or
add
and
mov
loope
mov
jne
in
inc
jns
cli
pop
add
test
or
aad
add
in
add
add
scas
add
rolb
out
mov
add
add
mov
add
add
ret
add
add
movsb
sbb
push
add
sbb
adc
add
movb
add
push
add
and
lahf
inc
add
mov
loop
mov
add
inc
add
aam
cmp
lea
lods
adc
add
add
fnstenv
dec
mov
and
lret
add
add
push
and
add
add
xor
jns
add
insl
adc
add
mov
test
stos
push
dec
push
push
add
mov
add
mov
pop
jno
lret
push
insl
add
stos
mov
mov
pop
nop
test
inc
out
shll
out
add
ret
add
adc
mov
push
int
gs
push
add
sbb
jl
cmp
mov
push
aad
xchg
or
insb
add
sti
or
jecxz
rorb
out
inc
push
add
movsl
clc
stc
xlat
xchg
jge
sub
push
lret
add
add
add
int3
fwait
test
jb
clc
arpl
lret
inc
mov
add
add
std
insl
mov
int
xlat
inc
inc
pop
add
roll
mov
mov
add
add
ss
add
jo
or
jl
xchg
iret
mov
add
int3
call
jns
sbb
stos
jp
leave
xchg
call
add
add
jle
iret
inc
ret
xchg
addr16
jno
movq
push
add
jne
cmp
cmp
add
inc
add
popa
mov
add
xchg
mov
mov
aas
adcl
add
add
mov
repnz
add
cmp
jl
loope
sbb
add
lret
add
dec
xor
cmp
mov
aad
fildl
test
adc
sbb
rorb
add
xor
cmpsb
cmp
int3
dec
pextrw
jne
add
pop
add
mov
add
aad
mov
stos
adc
add
lock
and
add
adc
add
lret
push
and
insl
push
sti
pusha
add
test
cwtl
jmp
inc
add
push
add
pop
push
add
movb
std
add
add
push
adc
mov
imul
mov
inc
add
add
fwait
loopne
add
push
into
lcall
jb
jecxz
dec
cmpsl
or
xchg
xor
add
test
inc
stc
inc
add
imul
addr16
ljmp
sti
inc
push
add
mov
aas
adc
jp
addb
add
faddl
or
add
dec
xchg
inc
add
ret
fidivs
adc
cmp
add
mov
fwait
pop
das
add
add
fsubr
cwtl
add
test
gs
xor
dec
cli
fs
push
mov
add
add
add
add
push
stos
add
adc
mov
clc
jmp
outsb
add
mov
inc
testb
aam
add
lock
add
add
dec
add
add
cwtl
add
ret
and
cmp
test
in
fbld
xchg
add
mov
add
outsb
add
dec
ljmp
jecxz
pusha
add
pop
add
test
out
out
lret
pusha
add
insb
add
adc
add
lea
xchg
fwait
hlt
push
sbb
jae
test
xchg
mov
add
add
addl
sarb
mov
in
add
outsb
add
inc
add
jge
test
mov
push
add
and
iret
outsb
add
add
lods
and
add
rolb
sbb
add
push
inc
enter
repz
into
and
xchg
pop
inc
sub
and
add
divb
cwtl
insb
add
push
add
push
inc
add
stos
stos
movsl
cmpsl
sub
mov
ljmp
add
add
push
into
mov
add
pop
cmp
repnz
sbb
mov
add
repnz
add
add
movb
mov
aas
nop
pop
pop
push
lcall
lcall
add
out
mov
lods
out
adc
add
add
js
xor
lcall
lahf
nop
xor
mov
outsl
jns
or
mov
sbb
jecxz
test
mov
add
cmp
jmp
sub
test
jne
and
add
orl
nop
add
add
add
dec
add
add
add
add
clc
pmulhuw
je
cmc
mov
jb
cmpsb
pop
outsl
sub
fldt
cwtl
or
lahf
inc
add
or
and
add
add
add
inc
add
push
add
add
push
repnz
jl
pushf
inc
add
mov
bound
fwait
mov
add
jbe
sub
dec
add
mov
mov
add
add
mov
xor
add
pop
add
push
addl
int
inc
add
loopne
add
icebp
inc
add
pop
xchg
xchg
out
sbb
in
lret
test
jbe
andb
add
and
loopne
add
add
dec
add
push
add
add
sbb
fisubrs
add
fnstenv
add
add
adc
add
testb
cli
mov
pop
add
fadd
pop
add
xchg
dec
add
outsb
add
popf
outsb
add
aaa
xchg
add
insb
add
hlt
jmp
add
out
incl
sub
ret
add
sub
lds
movsb
add
fdivl
add
dec
add
inc
add
push
add
jle
add
add
xor
push
xchg
mov
mov
pop
daa
push
add
lret
sbb
popa
pushf
xchg
iret
lahf
jecxz
add
cmp
lret
aas
cmc
dec
add
jmp
add
add
add
mov
insl
decl
jo
or
scas
dec
add
mov
cmpb
add
arpl
rcll
subb
mov
push
cmpb
add
rcr
pop
add
add
into
add
in
dec
add
pop
add
hlt
add
lods
mov
fxch
idivb
sti
xchg
iret
int
repnz
mov
add
addl
add
test
sub
jg
mov
mov
sbb
popl
push
inc
add
adc
mov
enter
leave
dec
mov
fsubrl
notb
outsl
mov
shr
aad
js
pushl
ljmp
rorb
xchg
call
pop
add
int3
aas
adc
add
sbb
mov
sbb
sbb
jl
mov
adc
repnz
test
cmp
in
jns
loop
cltd
mov
adc
jmp
mov
add
add
jnp
sub
call
stc
in
addb
mov
sbb
sub
push
mov
gs
mov
clc
push
subl
lds
add
daa
incl
cmp
int
mov
mov
add
pop
add
or
mov
xchg
add
gs
cmp
add
add
mov
mov
cmpsb
add
add
add
add
bound
shl
add
add
adc
add
adc
add
sub
xchg
aaa
sti
add
aas
or
xor
add
jns
add
add
rcrb
add
sbb
add
sbb
out
shll
mov
add
add
sub
mov
add
add
add
nop
xchg
ljmp
fistpll
add
test
and
mov
stos
jnp
or
add
test
push
lods
out
cld
ljmp
sbbl
add
fmuls
pop
lret
add
loop
sbb
stos
andl
xchg
add
mov
inc
jne
sub
cmp
sub
adc
add
cmp
inc
clc
mov
cmp
push
add
sbb
iret
push
cld
pushf
cltd
les
mov
add
icebp
add
lock
add
arpl
js
iret
lods
ss
add
fs
adc
xor
add
cmp
sar
divl
push
add
pop
add
loopne
scas
add
mov
mov
xor
add
add
xchg
adc
add
fsubr
xchg
push
mov
addb
add
fists
dec
mov
sti
fidivs
dec
add
mov
jmp
add
add
and
add
add
xchg
add
xchg
ret
out
mov
popf
sbb
add
dec
add
in
call
cmp
jae
call
cmp
jae
xchg
cmp
push
jle
push
sarl
ret
mov
add
add
clc
cltd
sub
pop
bound
push
lahf
in
cmp
pop
inc
add
add
add
xor
add
pusha
add
fcmovu
inc
lcall
movsb
add
add
or
add
inc
sub
add
mov
lret
sub
aaa
add
sub
fstpl
loop
add
test
add
and
pop
rorb
fiaddl
sbb
pop
add
add
add
movhps
addr16
loop
sbb
dec
add
shlb
adc
ds
fcom
fcomi
xchg
call
add
mov
add
loope
mov
mov
add
das
add
push
add
int3
sarb
sbb
mov
notb
add
shrb
add
adc
push
add
add
push
add
mov
jae
mov
std
out
nop
mov
push
add
cld
mov
inc
add
mov
and
add
stc
and
pop
in
popa
dec
pushf
sahf
iret
and
in
fsubrl
jno
pop
andb
add
bound
cmp
sahf
add
stos
add
add
sub
jne
loop
mov
pop
add
and
test
or
repnz
add
stc
add
add
and
cmp
daa
addl
push
add
push
das
add
daa
push
bound
bound
je
imul
shl
jge
aam
cmc
mov
testl
add
lock
js
mov
lods
add
mov
loop
cmp
test
xor
aam
xchg
add
pop
add
arpl
sub
mov
dec
movl
push
add
mov
inc
shrl
sbb
push
mov
aas
push
test
dec
add
addr16
subl
sub
shrl
rorb
push
add
add
add
or
div
xor
add
cmp
in
fsubrs
sub
xchg
add
jg
mov
push
add
pusha
add
jge
loop
mov
push
add
lds
add
insl
add
dec
pop
jecxz
add
add
sbb
rcrb
dec
and
loopne
cld
add
js
push
mov
cmp
pushf
push
add
push
aas
pop
add
rcrb
add
push
adc
ficoml
stos
push
pop
add
sub
xchg
adc
add
or
movsl
insb
add
fcmovne
int3
es
cld
fst
enter
mov
mov
fisttps
scas
sub
and
into
add
and
iret
cmp
in
mov
push
add
add
add
pop
add
add
cld
push
add
cwtl
cwtl
mov
or
out
cld
cwtl
fisubl
add
add
mov
mov
add
or
add
add
add
out
dec
add
sarb
jl
fnstcw
cmp
add
xor
add
pop
cs
pop
add
push
add
rol
mov
nop
dec
mov
mov
add
add
fldenv
mov
aad
cli
loop
jmp
lahf
pop
add
or
jmp
jne
adc
fstpl
add
push
add
imul
jmp
outsb
add
cmp
jp
push
filds
push
and
sbb
push
add
inc
push
add
add
adc
add
inc
mov
mul
push
add
shl
popa
jb
daa
mov
jl
fs
lret
add
insl
adc
add
add
cmpl
stos
xchg
and
add
pop
jg
inc
add
jbe
lea
add
cltd
out
xor
add
gs
push
add
push
add
add
xlat
adc
add
add
or
mov
cmp
cld
mov
jge
addb
movb
je
xor
add
mov
repnz
in
nop
loopne
ja
cmpb
push
add
jg
push
je
das
cmc
cwtl
jle
mov
add
stos
mov
scas
add
inc
add
lea
mov
imul
mov
mov
dec
add
in
xchg
jno
xchg
lods
sub
lcall
wbinvd
lods
sbb
lret
add
roll
mov
subl
inc
sbb
add
add
cmpb
out
sbb
inc
and
add
dec
add
xchg
shll
add
add
cwtl
add
popa
add
add
add
sub
cli
add
dec
add
add
sub
add
mov
jae
cmpsb
inc
add
stos
lret
stos
cmp
pop
andb
and
std
jno
add
jg
leave
xchg
es
add
stos
mov
add
pop
sub
xchg
add
add
xlat
pop
push
add
add
add
add
add
jecxz
sub
movsb
stos
shrl
and
sbb
dec
and
add
add
mov
mov
cmpsb
daa
addl
inc
add
fdivp
sbbb
add
mov
pop
aam
loopne
ffreep
cld
lods
jb
cmp
insl
xchg
repnz
xchg
cltd
scas
stos
iret
movsl
test
cmpsb
add
and
imull
add
add
dec
pop
xchg
add
push
push
add
sti
std
mov
loopne
jae
cmp
push
lcall
push
xchg
sarl
push
or
xor
add
out
xor
mov
shll
aaa
add
add
pusha
add
add
pop
add
fsubrp
enter
adc
add
add
push
movsb
mov
inc
add
mov
pop
adc
sub
lds
fiaddl
add
shll
fisubrl
shlb
add
xlat
cmp
fldt
mov
out
sahf
lret
push
add
add
add
cli
push
add
fcompl
cmpsb
pushf
adc
add
std
clc
mov
ljmp
arpl
push
outsl
add
fstps
adc
add
hlt
fldenv
mov
call
pop
add
mov
push
add
das
sub
inc
in
inc
add
outsb
add
out
loope
dec
push
and
jg
aam
xor
add
add
adc
add
jl
rorl
adc
add
lret
pop
cmpsb
inc
inc
add
pusha
add
pushf
test
add
shrb
dec
inc
add
add
add
add
mov
loop
ffree
ret
add
scas
add
fstpt
jb
data16
ret
jne
loopne
add
pop
add
push
add
add
addr16
push
ror
jp
add
add
cmc
das
sub
out
mov
add
add
add
jmp
add
iret
add
push
jmp
push
nop
cld
fisttpl
insl
mov
std
shll
cmp
xchg
std
lods
out
xor
add
mov
imul
loopne
jecxz
scas
outsb
add
addr16
jnp
add
shlb
sbb
add
add
inc
add
sbb
sarb
rolb
xchg
dec
add
add
add
mov
sub
add
add
jnp
fwait
dec
dec
icebp
nop
mov
jmp
xchg
clc
rorb
mov
xor
add
insl
sti
aas
or
sub
movsl
add
cmp
shl
mov
add
lret
add
or
add
add
and
add
or
mov
sub
sub
out
test
icebp
mov
movsl
add
xchg
push
and
add
add
jae
add
add
shll
add
mov
add
mov
mov
cmc
mov
add
inc
add
add
pop
add
jbe
ror
in
fsubp
mov
in
xor
sub
rclb
andl
icebp
into
dec
add
aas
in
sbb
cwtl
cmc
fidivrl
add
add
enter
add
sbbl
fadds
pop
int
int3
inc
sub
cmp
les
add
fcmovnbe
out
jne
sbb
aad
jmp
cld
loop
inc
add
pop
adc
xchg
fiaddl
sti
add
rolb
xor
add
adc
cmp
add
out
sub
cmp
cmp
mov
sub
sbb
insb
add
sub
add
add
shll
push
repnz
lret
mov
and
add
fcmovnb
push
add
add
add
inc
add
sub
mov
mov
sahf
jae
jge
adc
add
popa
cld
inc
push
inc
add
add
psllq
add
mov
sub
add
add
gs
test
push
sub
jp
aad
js
jb
outsb
add
add
mov
sahf
inc
add
jl
inc
add
pop
enter
add
fsubs
aas
add
fcomip
sbb
add
add
and
dec
add
xlat
jo
or
nop
pop
sahf
mov
mov
loop
pop
add
add
sub
into
idiv
pop
shrl
out
es
fiaddl
cwtl
pop
xchg
add
xor
fcoml
cmpl
add
sub
outsl
int3
jbe
add
and
add
mov
add
sbb
std
sub
inc
add
add
stos
cmp
xor
add
add
dec
add
inc
push
xor
add
sarl
loope
mov
add
loope
enter
into
inc
lea
testl
add
dec
xchg
clc
jno
sub
nop
repz
and
add
fwait
xchg
test
inc
adc
add
outsb
add
pop
add
ret
add
sbb
daa
pushf
add
jge
pop
add
add
add
add
jmp
add
gs
xchg
lret
jg
scas
pop
add
popa
pop
xchg
stos
stc
fidivs
cmp
dec
icebp
add
add
mov
les
add
scas
add
daa
add
outsb
add
add
rcrl
add
aad
jb
pop
add
mov
cmp
add
xor
daa
filds
or
jns
lods
add
push
add
sbb
add
imul
add
cwtl
das
and
cs
hlt
mov
test
jns
add
dec
cltd
enter
fwait
xchg
push
add
cwtl
xor
add
rclb
ss
jne
lret
jle
or
add
xor
add
add
sub
shlb
jp
inc
add
jnp
ja
cmp
sub
lret
popa
mov
inc
xchg
pop
push
add
pop
add
push
mul
inc
add
mov
pop
data16
add
adc
jne
jo
mov
add
add
lds
add
add
mov
sub
xor
add
jecxz
sub
mov
add
pop
lods
dec
or
and
add
lret
out
std
pop
int
and
into
rolb
std
add
add
pop
into
inc
add
and
add
je
mov
add
add
push
add
xor
test
inc
pusha
add
sub
pop
xor
outsl
push
mov
or
and
and
inc
inc
mov
ljmp
imul
add
xchg
dec
add
lret
insl
add
add
xor
add
in
cmp
in
lahf
inc
add
outsb
add
sbb
mov
adc
add
fidivl
inc
add
in
add
add
pop
inc
add
into
sub
mov
stos
outsl
fistpl
sub
rcll
add
les
pop
xor
add
insl
adc
scas
or
aam
icebp
in
inc
add
jmp
lcall
cmpsb
dec
shll
push
aad
cmp
mov
test
xor
push
push
add
push
lcall
cmpsl
add
and
lret
outsb
add
mov
push
add
out
xor
int3
xor
or
jbe
lock
adcb
rol
into
scas
ficompl
add
loope
enter
add
sub
popf
hlt
dec
cwtl
mov
add
add
add
sub
pop
add
hlt
pop
mov
data16
test
fucomi
out
or
cmp
adc
sub
cli
faddl
add
icebp
push
orb
push
add
xor
jl
adc
punpcklbw
pushf
mov
vhaddpd
std
pushf
repnz
outsb
add
lret
cmp
push
add
push
hlt
popa
adc
add
daa
sub
outsl
in
ret
sahf
and
add
or
loopne
jle
add
sbb
jmp
xchg
mov
addl
hlt
add
cmp
outsb
add
sbb
roll
or
popf
call
xor
int
or
push
add
fbld
stos
and
add
xchg
rol
xchg
psrlw
mov
outsb
add
dec
stos
xor
mov
movl
shll
scas
aaa
popa
add
das
add
imul
arpl
ret
in
cmp
add
cmp
pop
push
add
lods
add
mov
cli
cwtl
dec
add
cmp
xlat
in
pop
add
scas
pusha
add
cmp
es
add
add
add
sahf
xor
das
jg
mov
add
incl
sbb
std
cld
icebp
in
and
add
bound
cltd
pop
add
test
add
add
fsts
mov
mov
test
mov
add
rcrb
loope
cli
dec
add
fildl
sbb
xor
add
xchg
xchg
xor
enter
dec
add
and
hlt
adc
cmp
add
mov
lods
test
stos
cli
jp
mov
xor
dec
out
add
add
adc
test
sub
mov
sbb
das
scas
std
lock
inc
add
fimull
add
data16
add
sbb
ror
popa
inc
add
lret
scas
adcl
jge
add
jo
aam
call
add
and
imul
sub
adc
add
mov
xchg
or
push
add
mov
out
xchg
and
mov
xor
dec
insb
add
mov
mov
cmp
pop
or
add
or
data16
or
out
inc
add
jl
mov
add
cmpsl
cmp
and
jecxz
dec
add
test
ja
arpl
mov
cltd
dec
add
add
sbb
or
nop
cmp
adc
add
add
mov
mov
add
mov
scas
xor
add
sub
sahf
fcmovu
sub
mov
add
cmp
push
loope
jmp
ret
cwtl
std
xchg
leave
mov
add
imul
stc
pusha
add
inc
add
add
ja
sub
push
in
arpl
scas
jle
std
jg
push
mov
and
and
fucomp
xor
add
add
cli
or
xchg
inc
add
daa
xor
xor
add
and
cld
add
pop
add
insl
add
add
cltd
add
leave
jl
xchg
and
lret
or
shl
lock
jecxz
and
add
push
fildl
pop
loopne
mov
cld
and
add
out
push
mov
outsb
add
add
jge
cmp
negl
add
add
sbb
add
sbb
xor
gs
adc
add
add
insb
add
sub
add
pop
cwtl
cmp
add
add
xchg
add
test
sub
xchg
sbb
sbb
add
xchg
add
lods
add
or
add
add
push
add
cmpsb
cmp
das
xor
add
mov
cmpsb
mov
add
or
cmp
sub
lcall
add
arpl
sbb
loope
and
inc
add
dec
add
add
pop
or
add
nop
stc
add
mov
lret
ljmp
add
pusha
add
inc
add
add
icebp
add
mov
aaa
add
add
fisubs
add
adc
mov
cli
add
adc
add
sub
rclb
add
inc
add
insl
or
cmpb
imul
lods
cli
add
add
add
out
icebp
stos
shl
cmp
push
testb
insl
fists
sub
scas
xchg
fs
fcomps
pop
stos
ljmp
sbb
add
rcll
ljmp
dec
add
dec
in
rclb
sub
mov
data16
push
add
adc
inc
add
add
sbb
loop
add
push
scas
hlt
ja
add
test
pop
add
in
dec
pop
xchg
test
jnp
rcll
add
jp
xchg
cmp
aaa
push
add
add
stc
add
add
mov
cld
mov
push
xor
add
fldcw
in
add
aad
add
add
js
xorb
add
sbb
bound
js
sub
jmp
add
add
imul
das
pop
mov
inc
add
sub
data16
outsb
add
dec
add
add
add
ret
ffree
bound
sbb
dec
add
push
push
xchg
add
rcrb
clc
jbe
xchg
pop
int
jmp
cmp
iret
dec
push
iret
add
sub
pop
or
add
mov
test
xorb
in
mov
mov
lret
cmp
sahf
mov
dec
add
ljmp
int3
jae
adc
mov
test
pop
mov
cmp
out
rclb
sti
push
add
jnp
xchg
sub
jl
inc
sbb
jns
pop
inc
mov
jne
xorb
rol
ss
push
add
pop
cmp
cmp
pusha
add
sub
or
or
jno
add
xorb
lea
shll
jg
out
rcr
add
jge
dec
add
mov
adc
int
dec
add
cmp
dec
add
loop
add
or
loop
mov
dec
aam
add
movsl
cmovb
push
and
add
lods
aaa
adc
sub
add
add
add
mov
add
add
lcall
fcomp
mov
add
lret
add
pop
add
test
sbbl
imul
gs
sbb
cmp
mov
ja
push
sar
sbb
int
adc
mov
add
mov
add
add
push
add
push
icebp
add
add
xchg
sbb
dec
add
lds
dec
std
xor
add
add
push
push
add
cltd
add
jbe
and
test
push
mov
xor
stos
mov
add
add
add
inc
add
ffreep
pop
inc
add
in
out
jbe
mov
mov
add
add
add
add
pop
jno
movsb
fdivl
insl
movsb
adc
add
pusha
add
insb
add
mov
add
xlat
add
and
add
add
add
fwait
ss
sbb
jg
nop
pusha
add
add
sub
sbb
stos
out
mov
jg
lcall
gs
add
cmp
stc
mov
dec
add
fadds
push
add
std
or
cmp
cld
mov
xlat
ret
mov
fistpl
les
add
add
sub
mov
ss
add
hlt
sbb
outsl
cltd
xor
add
add
inc
xchg
scas
or
xlat
popf
push
in
push
xchg
negb
out
jo
cmp
pop
ja
inc
repz
xchg
push
add
lcall
adc
fwait
pop
add
add
adc
add
push
add
add
add
jnp
mov
pop
lods
xchg
mov
jge
call
add
or
cwtl
and
add
jbe
jno
add
add
cld
stc
in
sub
cmc
sti
fmuls
jne
add
repz
sub
mov
add
inc
add
imul
add
std
or
sub
data16
rcrl
add
out
add
ficompl
popf
jno
sub
add
outsb
add
test
jp
lock
sti
bound
add
add
add
jo
inc
add
call
cmpl
jno
xchg
mov
out
fmuls
cwtl
and
ret
add
add
out
jae
bound
jo
fwait
mov
or
insb
add
scas
out
cmp
xor
jbe
adc
push
dec
add
inc
sub
shlb
add
testl
add
add
inc
add
add
pop
add
lea
repnz
and
add
lock
add
mov
push
add
sti
push
add
movsl
jmp
js
inc
hlt
cmp
dec
add
out
add
xchg
add
add
xchg
mov
add
add
push
fcmovne
shrb
rolb
and
movsl
out
scas
cs
repnz
xchg
xor
add
lcall
add
add
inc
mov
add
mov
add
jmp
aam
add
loopne
mov
push
add
imul
iret
movsb
dec
fsubrp
mov
add
stos
and
add
ljmp
add
cmp
fnstenv
test
sbb
pop
jecxz
or
push
cmp
add
pop
add
sub
push
add
enter
xor
loopne
in
sbb
jns
loope
es
dec
add
lock
shrl
add
add
mov
mull
repnz
add
mov
add
jne
daa
inc
add
add
xor
add
add
add
push
and
aad
pop
movsl
add
pop
add
add
pop
add
mov
mov
fwait
pop
sahf
add
add
add
mov
mov
mov
add
arpl
arpl
add
pop
xchg
adc
js
pop
jmp
push
add
xor
push
outsb
add
lods
mov
add
xor
add
into
sub
add
inc
add
aas
clc
jl
mov
sbb
icebp
imul
mov
or
fdiv
lahf
mov
les
xchg
pushf
pushf
sub
or
add
mov
jp
pop
imul
add
rclb
push
add
mov
fsubrl
test
mov
add
push
add
in
test
test
add
dec
add
add
mov
xchg
mov
bound
fistpl
mov
push
add
add
dec
dec
add
testl
sub
adc
add
je
sub
xor
add
mov
add
ljmp
pop
aad
ss
lds
lds
push
push
ss
cmp
movsb
sub
shl
xchg
and
add
and
popf
int
xor
ljmp
mov
jg
add
sar
adc
add
rcll
movsb
inc
add
jo
or
insl
out
dec
cmc
insb
add
pop
add
adc
add
test
cmc
mov
aad
add
jae
out
push
add
inc
add
shll
add
add
add
add
add
xchg
pop
cmpsl
jmp
jb
call
aam
and
mov
push
or
add
xchg
int
dec
add
mov
pop
mov
xor
add
in
and
pop
mov
out
mov
jecxz
xchg
out
push
add
lock
js
cmp
decl
aad
fildl
int
push
add
xor
pop
dec
add
fisubs
add
cmovo
pop
add
add
lea
inc
mov
sbb
sub
scas
data16
stos
add
sub
push
jmp
add
add
sbb
dec
add
inc
add
adc
add
push
add
das
adc
add
sub
push
inc
add
xchg
add
faddl
fs
dec
mov
inc
add
pusha
add
mov
and
sub
out
inc
mov
jp
stos
data16
add
push
add
adc
add
xchg
movsl
inc
add
js
in
inc
add
dec
add
sub
pop
add
add
ss
jno
nop
and
add
movb
add
add
enter
cmp
nop
and
pop
leave
add
push
and
jbe
bound
sub
loope
add
shlb
add
test
sub
xchg
cmpsb
rcll
add
int
add
cwtl
push
add
popl
mov
popf
fdivrl
push
jns
ljmp
shlb
pop
add
add
mov
in
or
addl
out
inc
and
adc
add
mov
add
push
add
sub
sbbb
call
stos
repz
pop
test
add
adc
add
mov
or
push
dec
add
cmp
push
add
in
stos
add
cmc
lcall
dec
add
in
mov
or
add
js
xor
add
imul
add
insl
add
lea
test
dec
add
sub
es
add
loope
add
jg
xor
iret
push
add
mov
sub
sub
add
add
pop
add
bound
jbe
addl
ret
scas
cwtl
stos
sbb
or
add
add
adc
push
add
jecxz
or
add
call
add
add
ja
pop
and
add
mov
in
rol
notb
jb
negb
notl
pop
add
push
outsl
adc
rclb
push
add
mov
cld
mov
sar
jno
and
add
add
inc
add
movsb
add
movb
add
xchg
mov
mov
inc
inc
add
inc
add
outsb
add
mov
andb
add
lock
add
mov
push
add
mov
pop
add
xchg
ds
cs
addl
jmp
test
jg
inc
add
nop
cli
push
inc
add
cmpsl
sub
jbe
pop
leave
cld
pop
xchg
jecxz
add
int
mov
mov
mov
push
add
xchg
push
rcl
aaa
cwtl
add
loopne
add
add
pop
add
addr16
je
mov
add
add
add
icebp
add
cmp
jp
out
pop
scas
lds
dec
add
add
arpl
call
mov
dec
add
add
insb
add
add
mov
mov
push
pop
jecxz
movsl
aam
int3
sbb
inc
mov
int3
ret
pop
mov
filds
add
lock
pusha
add
lock
push
jb
fmuls
add
inc
add
iret
repnz
repnz
add
add
stos
loope
cmp
mov
test
in
jge
sbb
adc
add
dec
add
xchg
int3
dec
add
sbb
cli
jle
stc
aaa
xor
push
add
test
pop
add
stos
pop
add
push
jmp
sbb
iret
lret
add
add
add
mov
or
les
arpl
jns
out
in
and
add
jmp
inc
mov
jno
add
adc
push
lret
jne
ret
ss
test
mov
rcrb
push
add
xor
push
add
fistpl
shlb
add
and
mov
add
add
push
add
add
add
inc
mov
les
xorb
data16
lods
jecxz
add
inc
add
add
lahf
les
add
lods
add
jnp
insl
add
mov
in
add
inc
pop
iret
inc
add
mov
add
out
ljmp
push
loopne
lock
add
dec
cmp
scas
mov
or
cmp
mov
mov
add
roll
in
arpl
add
add
mov
add
add
push
pop
xor
add
movsb
dec
add
pushl
ljmp
sbb
jae
icebp
add
nop
push
add
xchg
mov
ficomps
xor
add
jo
outsb
add
lahf
xor
scas
das
shlb
push
add
add
std
repnz
lret
lods
ss
xor
add
loop
sbb
xchg
jecxz
jae
fwait
push
jle
sahf
stc
fimuls
mov
add
xlat
jae
inc
add
add
adc
mov
push
add
add
outsb
add
dec
in
push
add
mov
les
ds
into
cwtl
not
into
mov
and
add
xchg
idivb
add
add
ljmp
lods
inc
or
push
add
push
jmp
pop
add
add
jns
lods
add
jb
dec
inc
mov
add
or
in
cmp
jae
add
movsb
mov
shll
add
add
add
jnp
jno
add
sbb
push
rolb
or
mov
mov
add
insl
mov
jmp
lods
dec
fwait
mov
add
movsb
mov
add
or
dec
jnp
rcrb
add
xchg
pop
mov
add
add
add
out
cmpsb
fdivrl
pop
rcrb
das
jmp
adc
add
pop
mov
add
dec
add
xchg
add
outsl
in
sbb
add
insb
add
fwait
add
repnz
pop
add
or
loopne
imul
nop
and
add
repz
add
mov
mov
add
push
add
lods
add
in
outsl
mov
adc
fsubrs
outsb
add
shll
cmp
add
and
cmp
cltd
mov
rolb
lea
inc
add
mov
test
jmp
mov
add
cmp
jns
add
mov
shl
scas
mov
mov
clc
sub
dec
add
add
inc
add
add
mov
dec
jo
sub
and
add
lods
and
add
push
add
cmp
xchg
xchg
cmc
aas
shl
or
mov
add
inc
repnz
mov
das
mov
mov
add
sbbl
or
push
add
add
add
cmp
xor
add
xor
add
xor
add
sbb
sti
and
add
add
or
and
inc
add
shll
clc
mov
scas
add
aaa
cmpsl
add
add
ss
add
add
mov
cmpsl
fcomp
sbb
xor
add
add
sti
repnz
sbb
sahf
scas
jb
out
pop
mov
mov
clc
fsubs
testb
lahf
mov
pop
sbb
add
sbb
push
add
sbb
loop
cmp
mov
stos
pop
xor
add
test
jmp
clc
mov
fisubrl
add
add
add
popf
pop
add
jne
incb
lahf
cmp
inc
mov
jb
pop
sbb
scas
cmp
adcl
add
jecxz
cwtl
ret
iret
mov
push
add
add
mov
add
repz
or
add
repz
or
pusha
add
pop
add
test
jb
cmp
and
scas
dec
add
in
jnp
mov
add
add
stc
and
add
notb
js
out
fwait
push
scas
fadd
push
add
mov
jno
pop
add
mov
imul
add
cwtl
lds
in
add
pushf
add
add
xorl
and
js
push
add
sbb
sub
lods
stos
stc
fcom
test
add
sti
cs
push
add
dec
add
int3
jne
or
add
add
scas
add
inc
adc
add
je
je
clc
dec
call
mov
cmpsb
stos
cmp
mov
data16
movl
mov
add
sbb
add
xchg
add
pop
adc
add
shrb
addb
repnz
loope
pop
mov
add
lret
fbld
and
add
rcr
cmp
xchg
add
jmp
ja
push
add
ja
add
roll
pop
sub
cmp
push
add
or
add
lock
pop
loope
stc
dec
add
xchg
jle
fcmovu
mov
ljmp
pinsrw
add
push
xor
scas
sbb
mov
mov
cld
add
adc
add
cltd
add
inc
push
lret
push
add
or
push
add
push
cld
add
xor
add
repz
fs
lods
jmp
add
popa
test
cmp
hlt
dec
jbe
subl
add
mov
aam
add
lret
mov
mov
mov
and
add
fs
sbb
mov
add
jecxz
adc
fidivs
add
inc
add
or
mov
mov
push
add
hlt
outsl
push
icebp
in
cmp
add
dec
sti
jns
add
add
sbb
or
xchg
leave
dec
add
lahf
stos
nop
js
fbld
push
add
push
add
out
add
add
adc
mov
or
add
add
lods
sti
push
dec
pusha
add
hlt
or
leave
ds
js
mov
sti
dec
add
dec
add
test
inc
add
add
nop
sub
clc
dec
add
lret
aaa
ss
loope
loop
push
jno
movsl
shrl
add
rolb
xor
cmc
or
cmp
popf
add
xor
add
push
add
jae
add
les
mov
loope
ret
notb
dec
add
push
add
test
popa
dec
add
add
add
add
pop
add
dec
add
add
add
lds
addr16
sbbb
add
cli
lods
inc
add
add
xor
add
add
mov
jg
or
sub
test
sbb
and
adcb
into
inc
add
aam
pusha
add
add
in
sbb
xchg
add
mov
pop
add
ret
add
pop
add
addr16
xchg
lea
in
push
incl
adc
add
hlt
jne
cmpsb
mov
dec
insb
add
and
add
xor
add
scas
inc
add
js
aam
add
mov
mov
cmp
add
addb
adc
pop
add
jge
xorb
outsl
adc
jecxz
add
cmp
test
add
arpl
filds
add
jb
in
loop
mul
aam
sbb
mov
inc
add
addr16
push
add
lcall
add
or
mov
mov
jne
cmpsl
pop
add
orl
add
jl
dec
lds
faddl
sbb
mov
add
cmpsb
or
addr16
addr16
mov
js
es
add
mov
adcl
add
loop
jae
fwait
movsb
mov
add
inc
add
add
mov
xor
add
shl
loope
add
call
add
roll
ret
lret
mov
bsr
int
stos
mov
pop
add
inc
add
push
add
je
clc
popa
xchg
outsl
into
aas
and
add
add
xor
add
xor
pushf
cwtl
out
ret
mov
test
pop
dec
add
das
inc
add
xchg
cmp
mov
sub
adc
add
cld
lods
fdivrl
out
fwait
sbb
cltd
roll
or
lahf
xor
push
mov
add
jmp
xchg
mov
push
mov
faddl
incl
addr16
add
jnp
cmp
aaa
das
add
jp
add
pop
add
mov
add
roll
xchg
int
lock
add
js
fptan
lret
mov
sar
and
or
inc
leave
addr16
jg
jb
outsl
add
adc
add
add
enter
in
jns
mov
or
inc
cmc
fildl
add
fnstenv
popa
cmp
data16
add
pop
add
fwait
cli
shrb
dec
add
and
repz
pop
add
in
sahf
ret
add
les
add
push
add
insl
mov
sub
add
pop
rorl
cmpsb
pop
out
and
add
mov
jmp
add
adc
adc
add
out
test
divb
das
add
loope
call
jbe
and
push
out
add
arpl
out
xchg
sub
std
cli
jne
inc
add
push
dec
add
fcoms
ja
sbb
add
add
jmp
mov
cmp
sub
ret
add
cltd
leave
mov
cmp
push
jg
sub
mov
sub
push
xchg
add
mov
add
mov
test
in
test
push
push
jl
test
lock
pop
adc
pusha
add
or
cmp
rcl
test
in
mov
pusha
add
fiaddl
mov
popa
dec
lahf
mov
out
cmp
adc
add
das
add
pop
sahf
add
or
out
lret
add
psubq
mov
shrl
arpl
out
cltd
cs
xor
pop
dec
add
mov
daa
cmp
add
add
add
adc
sti
testb
clc
mov
pop
mov
add
add
add
bound
aam
sub
imulb
cmp
dec
int
cmp
add
add
das
out
xor
jl
add
pop
add
add
xchg
xor
das
mov
fstpl
add
add
scas
sti
xlat
dec
add
ret
jecxz
lret
in
mov
xor
add
inc
add
sahf
add
add
sbb
sub
insl
shrb
jg
xor
add
fcomps
mov
push
std
jae
adc
jns
js
fisubrs
add
add
add
add
mov
add
lcall
outsl
nop
adc
imul
aad
add
int
addr16
jmp
sub
add
sub
daa
xchg
arpl
sbb
jne
loop
xchg
add
add
rcrl
pushf
mov
gs
movsl
and
add
ss
mov
add
cmp
aaa
jb
rcrl
frstor
push
clc
loope
popl
xchg
cmp
clc
cltd
rcr
mov
ja
jle
cld
lods
cmp
mov
add
jns
add
repz
add
add
or
xor
or
or
jp
lds
lods
popf
push
add
sbb
in
inc
add
hlt
push
add
add
add
lods
testl
scas
add
add
xor
out
push
add
xor
pop
add
cmpl
loopne
imul
add
shll
cmp
mov
pop
add
stos
lea
mov
lods
add
add
jo
add
add
outsb
add
jg
repz
ja
dec
rorb
add
add
mov
push
ret
add
fs
and
add
and
add
pop
add
jne
xchg
flds
stc
dec
xor
sub
int3
std
loopne
adc
out
mov
add
add
insl
pusha
add
rcll
inc
add
out
add
mov
push
add
leave
rolb
in
mov
cmp
jecxz
inc
psrad
xchg
sbb
jl
sbb
out
loop
or
sarl
fldl
mov
pop
cmc
dec
or
scas
add
in
lahf
mov
lret
mov
ret
lahf
aas
cmpsl
jne
pushl
out
add
sub
imul
les
sbb
inc
add
cmp
adc
add
aad
sbb
jmp
adc
xchg
xor
lcall
inc
add
mov
add
fadds
enter
pop
xchg
jmp
inc
add
lahf
sbb
xor
incb
mov
test
incb
sub
adc
lahf
and
popf
loop
adc
add
stos
sbb
fidivrs
roll
xor
add
pop
add
add
imul
or
out
add
mov
jl
cmp
in
loop
add
pop
cld
ss
add
or
sbb
jns
fdivrs
in
sbb
xchg
sbb
xchg
add
jecxz
adc
add
sbb
inc
pop
add
ret
add
test
mov
stos
cmp
cmp
xchg
subb
sbb
aaa
add
push
add
sahf
or
add
scas
mov
or
pop
add
ret
mov
add
or
mov
add
addb
add
add
in
jbe
ljmp
push
add
adc
pop
add
sub
or
fisttpl
sti
repz
jp
shll
sbb
aas
and
add
call
notl
add
in
adc
add
add
push
jne
loope
cmpsb
push
add
imul
add
add
add
add
inc
add
add
add
mov
mov
jge
pop
cltd
add
inc
add
add
dec
daa
add
mov
dec
add
addr16
adc
add
jb
pop
add
pop
cmp
push
decb
popl
add
adc
imul
add
jmp
mov
in
and
add
cmpsb
add
add
add
mov
lcall
add
inc
lods
test
sub
notl
ret
add
dec
add
scas
pushf
adc
add
xchg
in
xor
add
push
mov
add
fdivrs
xor
add
outsl
pop
add
fisubl
cmp
sbb
add
into
fmull
incb
cmp
lret
push
add
cmpsb
jne
dec
inc
add
movsb
xchg
popf
stos
push
add
sahf
aas
mov
cmp
dec
add
adc
inc
add
icebp
xchg
jno
add
add
outsb
add
test
enter
lock
or
xor
popa
test
lret
add
add
and
add
outsl
and
add
sbb
inc
add
test
add
je
jge
or
fldenv
verr
out
add
inc
add
add
jo
mov
sti
cmpsl
mov
jae
dec
add
add
in
add
push
add
jno
jnp
xchg
icebp
and
sub
add
lahf
pop
add
popf
jnp
add
cmpl
add
add
fldl
dec
add
add
pop
add
dec
add
push
dec
add
add
int
xor
daa
inc
add
cmpsl
mov
loope
add
mov
add
inc
add
daa
cmc
add
push
add
push
add
ret
add
cmpsl
lcall
movb
or
jecxz
cmpb
data16
jnp
mov
lock
add
jle
imul
rcll
adc
jb
mov
data16
add
mov
cmp
loope
cmp
jae
test
and
sti
inc
add
add
push
mov
leave
in
sbb
jns
push
inc
dec
sub
in
and
xchg
jmp
std
xor
ds
divb
outsb
add
ret
pop
add
arpl
mov
add
add
pushf
imul
xchg
popf
hlt
push
add
fiadds
rcrb
add
in
sbb
outsb
add
pop
add
xor
ljmp
xchg
add
cli
xor
cmp
cmp
lock
push
add
dec
test
push
add
sti
add
mov
add
insl
out
sbb
aas
or
pop
add
lods
mov
mov
pop
add
popa
mov
mov
add
rorl
push
add
add
xchg
rcll
xor
pop
mov
rcrl
clc
sbb
scas
cmp
ljmp
xor
add
mov
mov
add
dec
add
sub
cmc
push
add
xor
add
xchg
aad
scas
loope
outsb
add
add
orl
push
add
and
sub
add
add
xchg
mov
xlat
add
fadds
xor
pop
add
add
add
xchg
pushf
xchg
icebp
fiaddl
roll
or
mov
insl
bound
pop
mov
pop
testl
pop
les
not
scas
cltd
outsl
sub
add
push
add
fscale
and
add
pusha
add
add
xor
add
mov
add
add
sbb
ja
or
xchg
je
pop
add
or
sub
add
movsb
mov
adc
xor
add
sahf
dec
add
add
jbe
xchg
movsb
pop
test
jp
inc
leave
sahf
test
fldcw
or
add
imul
pop
call
bound
push
add
xchg
pop
jb
jo
sub
jbe
cmp
push
add
sahf
ret
xor
add
inc
add
sbbl
add
add
jae
mov
add
add
sub
add
add
push
add
add
add
popf
andl
push
fs
rorl
and
add
adc
add
or
ja
xor
jmp
pop
adc
in
and
ret
std
or
bound
add
inc
push
mov
scas
add
int
movsb
shl
movl
bound
in
jbe
ret
and
add
rorl
lret
sar
pushl
aad
imul
test
cmc
pop
mov
mov
xchg
rclb
jbe
shrl
movsl
add
add
add
adc
add
aas
pop
or
dec
jp
xchg
nop
inc
xor
push
dec
cmp
add
xor
add
ja
mov
cmc
lret
cmp
and
lret
add
add
test
or
insb
add
rcr
lock
add
stos
add
sub
add
push
add
push
gs
ret
mov
sbb
sub
sub
movsb
inc
rcll
sbb
xchg
mov
scas
add
add
int3
data16
xor
les
or
jp
push
add
pop
add
add
mov
and
add
cmp
cli
mov
aad
mov
and
adc
add
add
jbe
aas
mov
outsl
xor
add
call
ret
add
xor
add
jmp
stos
sbb
lcall
stc
push
dec
add
scas
push
add
enter
aad
test
jnp
rorl
lock
add
cmp
dec
add
or
sbb
adc
lcall
jno
add
xor
add
adc
add
iret
dec
add
push
call
add
mov
add
push
scas
int
jne
mov
jno
js
fdiv
loop
or
cmpsb
inc
add
stos
jl
or
roll
mov
sbb
mov
or
insb
add
sbb
and
in
lods
dec
nop
pop
add
sub
pusha
add
out
add
add
jecxz
add
xor
call
in
or
cmp
xchg
pop
add
sub
adc
add
out
add
ret
jne
add
sub
lds
dec
stos
mov
pop
add
add
dec
add
rcl
add
or
lea
jl
sub
leave
mov
jbe
and
add
add
repz
jl
adcl
add
test
cltd
ljmp
lret
ljmp
jbe
sub
add
add
add
xor
add
add
add
dec
add
aad
pop
sahf
dec
add
add
pop
or
cmc
in
cmp
rolb
jb
cmp
mov
add
dec
add
arpl
pusha
add
jl
cmp
outsb
add
jb
push
scas
xchg
fld
xchg
popl
addl
aaa
pop
add
add
mov
iret
add
enter
mov
push
rol
into
add
push
sbb
sti
add
add
std
dec
rorb
punpckhwd
cmp
enter
add
das
lcall
mov
aad
test
lret
xorb
jecxz
dec
add
mov
add
insl
add
int
inc
add
cmp
scas
daa
ss
fisubl
add
add
inc
pop
test
cmp
movsl
sbb
sbb
mov
out
mov
jl
int3
es
add
int
dec
add
mov
stos
push
fsubp
sbb
bound
dec
xchg
sub
add
add
int
add
into
and
aaa
ja
shrl
add
add
mov
add
test
add
out
xchg
adc
sub
hlt
sub
mov
outsb
add
add
out
push
add
add
add
add
xor
mov
mov
ror
subl
add
jno
arpl
xchg
add
add
orl
xchg
lods
jmp
add
add
lahf
inc
add
idivb
subps
dec
xchg
daa
adc
sbb
ljmp
cmp
xor
add
adc
push
std
adc
mov
dec
add
jae
cltd
dec
sbb
cmpsl
mov
mov
and
and
add
loopne
mov
sub
fstp
dec
add
add
cld
ljmp
jg
fdivl
mov
sar
push
add
es
add
or
push
add
add
adc
add
xchg
pop
lahf
add
sbb
jge
xor
mov
add
cltd
or
xchg
imul
add
lock
jmp
cli
pusha
add
add
jle
orl
imul
add
arpl
sti
jecxz
shr
pop
lcall
mov
mov
es
add
cli
pusha
add
xor
add
mov
adc
call
jns
fsubrl
jg
pop
dec
mov
mov
lock
add
sub
call
imul
arpl
les
sbb
and
add
add
add
add
mov
stos
add
inc
mov
add
sbb
add
out
add
push
cmp
xchg
add
xchg
lea
add
mov
stos
xor
add
add
dec
add
xor
add
add
add
mov
scas
dec
loope
dec
sbb
adc
adc
mov
and
add
and
add
add
movb
add
add
addr16
adc
add
add
add
cwtl
shr
ljmp
add
adc
sub
stc
add
aaa
push
add
insl
add
pop
add
mov
into
jne
jge
jns
lea
lret
adc
add
fisttpl
sub
ja
fcoml
add
inc
add
cwtl
inc
xchg
shll
pop
add
fsubl
mov
dec
add
lret
and
add
xchg
cmp
add
data16
pop
add
fadd
sub
into
test
out
mov
add
add
push
lock
mov
out
mov
add
and
mov
lods
popf
adc
add
insb
add
daa
adc
xor
ljmp
add
mov
jl
jge
mov
or
add
add
mov
add
or
sahf
pop
mov
mov
add
pop
add
jbe
pop
jmp
cmpsb
sbbl
out
idivl
fst
jns
fsubrp
cmp
jno
mov
add
leave
add
add
add
lods
cmp
push
push
lret
and
ret
lret
add
add
add
flds
add
mov
dec
add
testl
adc
add
cmp
rcll
jmp
arpl
add
repz
aam
les
xchg
add
dec
std
lea
jne
sti
add
lds
loopne
and
add
dec
out
arpl
mov
fiaddl
xor
cmp
and
sub
fxch
inc
add
push
dec
adc
or
outsl
xor
loopne
aam
jge
fldcw
add
scas
aad
arpl
leave
cmp
test
add
sub
dec
imul
add
lea
bound
and
dec
add
adc
add
arpl
aam
add
add
mulb
loop
outsb
add
add
fwait
add
insb
add
call
mov
out
push
add
xchg
enter
add
pop
add
cld
add
jp
out
test
js
ret
ffreep
out
mov
add
add
cmpsl
jb
xchg
sbb
sub
sahf
sti
fmul
and
movsb
jne
dec
mov
test
cmove
out
or
mov
test
add
cmpsb
fsubs
sub
and
xchg
adc
dec
add
call
js
and
add
or
jg
test
add
fstl
add
testb
and
add
inc
add
pop
push
add
mov
call
cmpsl
mov
je
add
mov
das
dec
add
add
in
pop
ja
test
inc
pop
add
fmull
mov
add
add
addl
and
add
jmp
mov
fcomps
ffreep
fsubs
sbb
add
add
lock
subl
das
mov
test
add
fmuls
add
in
and
add
loopne
add
add
int3
cmp
inc
add
les
add
push
add
add
xor
stos
nopl
push
add
add
loop
add
leave
add
pop
add
add
xchg
add
pop
jo
xchg
or
fisubl
jmp
data16
bnd
cmp
pop
mov
add
fwait
add
pop
add
xchg
jp
adc
add
aam
mov
add
addb
outsb
add
out
push
incb
outsl
xchg
pop
add
push
mov
movsl
popf
jo
addb
add
rcrl
jnp
addr16
fdivp
sbb
popa
enter
rorb
add
jb
xor
add
xlat
add
cmpsb
add
adc
add
in
shlb
add
iret
fadds
repnz
popa
or
add
mov
add
iret
dec
cmp
es
add
pusha
add
mov
jmp
xor
lcall
aam
xor
cmp
les
adc
test
mov
jnp
jle
inc
mov
mov
jl
adc
add
fwait
out
xchg
lcall
cmp
cltd
pop
sbb
dec
add
out
add
loop
sbb
loopne
cmp
xchg
popf
pop
popf
movsl
adc
movsl
lds
sbb
add
orl
push
add
pop
add
mov
add
pusha
add
add
dec
add
xchg
mul
add
add
push
cmpsl
fwait
sub
out
cmp
scas
add
and
loop
mov
cmp
xor
add
add
aaa
jae
shl
and
add
je
mov
xor
xor
add
pop
add
in
add
add
mov
mov
out
add
insb
add
dec
add
sub
add
pop
add
add
add
push
add
cmp
je
inc
add
or
jno
stos
pop
iret
xchg
push
imul
cmp
push
add
mov
icebp
cwtl
shr
mov
jge
xchg
imul
xor
fstpl
ficoml
outsb
add
push
add
add
and
sub
std
and
pop
add
aas
inc
add
dec
add
in
mov
mov
push
bound
imulb
push
add
ss
add
mov
imul
adc
add
popf
out
add
aam
xchg
add
mov
js
add
add
sbbb
imul
js
repnz
add
xor
add
sbb
js
adc
add
add
addb
add
add
xchg
inc
fmull
add
add
add
add
mov
push
loop
lods
add
add
les
or
int3
int
popa
jle
pop
js
push
add
movsb
inc
add
add
and
add
fldl
stos
jo
clc
shll
add
xor
and
repnz
jecxz
lods
xchg
pushf
lea
xor
xor
add
dec
insl
push
jae
xor
add
jmp
add
mov
and
add
jmp
test
jbe
imul
add
add
data16
add
or
xor
push
add
fisubl
mov
jo
cli
mov
in
outsl
clc
jle
into
test
imul
cmp
sub
mov
sub
sahf
sbb
cltd
dec
popa
pop
or
sbb
aas
mov
orb
push
loop
mov
add
adc
loop
outsl
unpckhps
add
dec
add
add
mov
add
mov
int3
incl
cmp
ja
or
pop
or
add
outsl
bound
xlat
jle
leave
cwtl
inc
aas
pusha
add
pusha
add
add
decl
jns
add
inc
add
pop
pop
xor
sub
add
jmp
add
adc
jle
xchg
es
clc
insl
push
sbb
mov
add
cmp
jecxz
add
dec
imul
ljmp
push
add
pop
incb
mov
xchg
fwait
xchg
and
add
insb
add
out
sahf
jl
in
iret
outsl
dec
add
mov
lock
pop
add
add
mov
shrl
lahf
push
add
xor
and
icebp
mov
push
add
push
add
add
push
add
or
jno
iret
enter
lret
mov
fs
shlb
filds
cld
add
mov
aas
xor
add
add
add
aad
and
add
nop
mov
leave
mov
mov
add
inc
or
stc
cmc
clc
fwait
mov
add
faddl
mov
std
cmp
jl
jno
popa
pop
xchg
int3
mov
inc
add
xchg
cmpsb
stos
and
and
add
hlt
dec
add
dec
call
jge
jno
cmp
inc
orb
jge
dec
add
divb
xchg
add
add
add
in
push
add
add
test
stos
out
arpl
out
jp
push
add
data16
cmp
fdivs
xchg
js
mov
add
xchg
lcall
movsb
leave
dec
add
sub
loopne
sbb
sbb
cli
cmpsl
stos
int
imul
pop
sbb
dec
add
xor
add
mov
inc
add
pop
sbb
mov
adc
mov
insl
mov
leave
mov
xchg
add
add
ret
sbb
add
xor
add
std
push
into
add
ror
pop
add
add
add
out
data16
jno
rcr
fimull
jge
adc
add
jbe
scas
ljmp
jns
icebp
cmc
pop
imul
add
les
or
add
jl
cmp
sub
es
add
add
sub
and
call
fnstcw
add
xor
add
xchg
add
add
sbb
fcmovnbe
jmp
jmp
cmp
sbb
pop
add
xchg
sub
xchg
xchg
fcmovnb
xchg
jbe
cltd
push
add
add
sarl
xor
add
sub
cmp
iret
stc
add
add
rolb
inc
add
fistl
mov
add
out
or
rorl
gs
pop
add
cmp
or
stc
shlb
cli
add
imul
xchg
imul
mov
pop
add
nop
add
sahf
jnp
cmp
repz
add
mov
add
add
or
adc
add
pop
add
jl
negb
loope
add
add
add
adc
add
xchg
cmpsl
push
jo
mov
add
call
shll
shufps
outsl
js
pop
aas
not
mov
out
roll
scas
das
sahf
movsb
push
add
bound
dec
add
mov
fldenv
add
or
fsubs
je
inc
add
or
add
add
add
nop
jae
add
add
add
adc
add
enter
mov
jns
data16
pop
jb
in
cmc
cmp
fistl
std
loop
xchg
add
jae
add
xchg
xchg
add
mov
add
mul
out
add
jbe
and
add
pop
dec
mov
std
add
mov
popa
and
xchg
into
inc
dec
add
pop
icebp
fucomip
mov
sti
adcb
add
add
push
add
shrd
inc
add
mov
xor
std
mov
xor
add
adc
cld
lods
sbb
sub
and
inc
add
and
add
fimuls
inc
add
push
add
inc
add
je
mov
add
pop
add
jmp
add
pop
out
movsb
les
add
add
xchg
repnz
cmp
push
add
mov
and
lret
xchg
inc
cmp
rcll
sarl
cmc
lea
add
js
push
add
scas
aad
xor
stos
xor
add
sub
mov
sbb
add
cmc
xchg
add
mov
add
jg
pop
and
xor
add
add
add
push
and
prefetch
add
xchg
pop
jnp
add
sbb
je
lods
sarl
fs
xor
add
imul
add
mov
pop
cld
add
dec
adc
sub
mov
lret
outsb
add
add
movsl
add
cmpsl
andb
jp
cmp
daa
mov
shl
jp
xchg
add
dec
add
jecxz
jge
add
add
clc
fwait
xor
add
push
add
and
dec
outsb
add
js
mov
xor
cwtl
inc
add
repnz
jge
xchg
add
addl
pop
add
jne
icebp
add
add
jp
int
cmp
add
sub
add
shlb
lahf
outsl
and
cmp
movsb
popa
fisttpll
mov
mov
in
gs
cmc
add
pop
add
or
popa
imul
add
test
add
dec
add
out
aaa
cld
add
xor
add
int3
push
jl
mov
cld
sbb
or
lds
push
add
dec
add
adc
add
add
mov
add
add
xor
add
jae
jg
jg
insl
lret
push
add
mov
jo
mov
nop
mov
mov
adc
add
loope
xchg
mov
imul
lods
sbb
leave
add
add
push
jne
add
or
inc
push
lods
jle
adc
add
pop
fiaddl
js
add
out
int
cli
arpl
push
add
or
xor
add
add
add
jp
rol
les
inc
xchg
je
roll
add
add
je
pop
ja
pop
add
out
fsts
add
adc
nop
adc
mov
add
xlat
add
pop
add
iret
add
cmpsl
test
orb
lds
hlt
iret
xlat
xchg
jno
push
add
aaa
pop
add
fsubs
add
jge
mov
adc
add
mov
push
add
add
lret
mov
and
adc
add
call
add
add
inc
add
dec
add
pop
mov
jae
jns
out
add
cmp
lret
sub
dec
dec
add
sbb
fldl
push
add
pop
add
mov
pusha
add
add
mov
add
add
jle
js
cmpsl
nop
dec
add
out
add
xchg
addr16
push
add
adc
mov
aam
sub
xchg
adc
add
adc
mov
mov
aas
aam
mov
add
daa
fiadds
push
cli
xchg
add
push
add
xchg
inc
add
in
scas
add
add
aaa
cmp
stos
push
cmpsl
mul
scas
cmpsb
pop
out
fcompl
add
cmp
adc
add
sub
fdivrl
add
xchg
sub
sub
sbb
jne
inc
add
add
jb
mov
std
mov
movsl
push
add
fsts
and
or
add
sub
int
xchg
inc
push
add
add
jb
fstpl
ret
pop
dec
add
or
fadds
mov
add
sbb
in
data16
out
data16
jmp
add
or
cmp
and
shr
stos
mov
push
movsl
fdivrl
mov
add
negb
add
addr16
test
add
add
cmp
test
mov
sahf
fsubs
test
scas
add
and
ret
sub
mov
fldl
cmc
test
movsb
cld
dec
add
add
push
movsl
dec
aas
call
xlat
shlb
add
cwtl
mov
leave
add
add
push
pop
add
add
mov
jno
push
arpl
lods
fcmovu
in
sbb
add
add
pop
add
lea
cmpsl
dec
xor
movsl
adc
add
inc
add
jb
sbb
nop
pop
aaa
add
push
add
fistps
add
orl
xor
add
sub
jle
xchg
into
cmp
pop
addl
shrl
in
add
addr16
sbb
cmp
lods
andl
add
movsl
loope
mov
test
sbb
dec
negl
ret
data16
add
add
push
add
jle
shrl
add
bound
dec
popa
rorb
pop
add
aas
add
mov
mov
add
idivb
sbb
jo
mov
add
cmc
lcall
push
adc
add
add
movb
mov
mov
add
push
mov
lcall
aaa
adc
sub
pop
add
aad
jae
jle
xor
add
pop
inc
add
cltd
sub
add
into
dec
cmp
add
jo
cwtl
mov
fsts
mov
sbb
push
add
jg
cwtl
mov
into
and
add
add
lods
push
mov
dec
add
add
add
fwait
push
sub
add
mov
cmc
lea
xchg
cld
add
jns
pushf
inc
add
dec
cmp
add
adc
add
cli
iret
add
add
add
push
add
sbb
mov
add
pop
dec
add
andl
cmpsb
pop
cmpsb
sbb
call
dec
out
iret
aas
dec
add
rcr
add
repnz
imul
add
add
cmp
shrb
add
pop
mov
jecxz
push
add
pop
add
inc
jmp
adcb
add
mov
mov
aad
cltd
add
sarl
sbb
add
mov
push
dec
jl
jp
dec
fldt
jne
add
mov
movsl
add
add
aas
pop
pop
add
mov
cmp
in
dec
xchg
dec
adc
adc
add
jg
mov
add
aaa
add
add
into
sti
lock
add
nop
aam
add
add
shr
rorl
pop
add
hlt
sbb
mov
cmp
lods
out
and
add
add
add
push
add
add
add
and
or
add
mov
pop
add
hlt
add
int
or
or
call
pop
add
adc
add
and
pop
xchg
adc
out
fwait
mov
cmp
out
add
sbbb
js
aaa
cmp
out
lds
pop
outsb
add
stos
sarb
add
addb
pop
stos
shll
scas
fwait
sub
shrl
insb
add
int3
mov
pop
test
or
js
add
adc
or
xchg
sub
and
add
jge
add
lret
rcrl
jb
add
add
add
les
dec
pop
add
rcrb
add
into
pushf
shlb
je
mov
sbb
fcompl
repz
or
aad
ret
in
popa
inc
loope
sub
ds
inc
inc
add
dec
add
mov
rcrl
fs
xchg
add
lcall
xor
add
fimuls
add
add
daa
add
aas
add
fucomi
enter
add
leave
add
popa
std
xorb
test
ja
adc
cmpsl
add
scas
mov
ficoms
adc
add
add
mov
daa
hlt
add
xchg
lock
outsb
add
mov
out
dec
add
jl
mov
xchg
add
pop
push
jno
icebp
cmp
insl
adc
loope
in
mov
mov
inc
add
mov
add
inc
add
ja
leave
mov
add
add
add
dec
pop
add
add
push
add
push
cmp
loope
sbb
and
add
sbb
cmp
push
add
loope
adc
dec
add
in
int3
and
jns
stos
test
or
ret
inc
add
xor
pop
add
scas
add
push
push
out
add
xor
dec
out
inc
add
cmp
adc
add
cwtl
loope
data16
jae
ret
addr16
sbbb
int
sarb
stos
cld
jne
add
add
mov
mov
stos
add
add
gs
add
xchg
mov
mov
repz
fdivrl
ja
or
int
mov
out
add
adc
add
push
add
mov
call
dec
dec
popa
outsl
sub
push
add
add
add
stos
add
mov
add
and
mov
into
cmp
sub
adc
add
ret
ret
mov
stc
nop
mov
add
mov
add
sbb
shrl
xor
push
stos
addr16
popf
add
add
fisubrs
dec
add
xchg
add
add
mov
sub
xlat
imul
icebp
add
mov
cld
sbb
imul
or
push
add
roll
add
loop
arpl
adc
cltd
pop
fcompl
ret
jne
cmpsl
mov
cld
and
add
add
sub
and
leave
into
mov
cld
and
mov
movsb
outsl
dec
imul
pop
sub
add
lcall
mov
es
add
lea
jecxz
mov
dec
add
loope
sbb
mov
test
xor
add
add
cmpsl
jo
sbb
es
or
adc
add
push
rolb
mov
in
sbb
hlt
out
cltd
scas
adc
add
or
mov
inc
add
lods
cld
or
pop
push
add
ret
xchg
sti
pop
push
test
add
imul
jns
xor
add
in
push
add
outsl
loope
bound
push
or
add
mov
add
mov
ret
add
and
add
js
push
add
add
out
je
push
add
data16
sbb
sub
adc
add
xor
add
inc
add
inc
add
mov
add
ret
adc
xchg
pop
add
mov
mov
cmc
sub
xor
in
pop
insb
add
int3
mov
lods
int3
sbb
icebp
bound
mov
lods
sbb
test
add
test
inc
add
roll
jp
scas
testb
sbb
cmpsb
and
add
mov
push
sub
push
and
mov
add
xor
ret
dec
repz
add
or
in
movaps
je
xchg
xchg
sbb
xorl
mov
mov
sar
inc
inc
mov
sbb
mov
mov
add
and
add
loop
mov
dec
mov
adc
add
out
popf
cmp
aad
fs
xchg
dec
add
shrl
ljmp
add
mov
adc
add
add
pop
add
or
inc
add
jns
ret
idivl
add
add
push
add
test
or
xor
scas
imul
fidivs
mov
and
add
mov
dec
mov
daa
sti
add
fldl
pop
mov
jb
out
mov
add
pop
loopne
loopne
add
add
xchg
out
xor
add
insb
add
add
pop
xor
add
sarb
add
roll
pop
inc
add
add
or
cmp
insb
add
psraw
add
add
jmp
add
rcr
jmp
jne
aam
fcmovbe
loopne
add
add
pusha
add
sbb
fimull
loope
js
aas
in
add
mov
lea
daa
add
popf
add
add
xor
and
add
add
or
cmc
int3
dec
aad
xor
sub
add
inc
outsb
add
add
stc
fistl
push
add
cld
inc
out
add
dec
jmp
aad
add
sbb
pop
xor
imul
jo
mov
jmp
dec
add
out
inc
add
scas
jbe
pop
add
scas
add
xchg
dec
push
pop
add
jno
jl
and
shrb
aad
in
inc
add
mov
stc
pslld
int3
or
cmpsl
pop
add
jb
mov
pop
add
add
addb
xchg
add
mov
and
add
xor
test
fmull
add
add
cs
add
outsb
add
add
add
add
js
aaa
rolb
pop
push
add
fdivl
sub
stc
or
and
lds
mov
mov
out
pushf
xorl
xlat
sub
test
add
xor
pop
add
movsl
push
popf
add
adc
adc
add
or
add
sahf
sub
adc
lods
gs
ffreep
fisubrs
add
faddp
adc
inc
xchg
js
ja
push
add
insl
stc
xlat
mov
cwtl
add
ds
or
cmp
sti
pop
insl
push
aas
jo
inc
push
mov
add
jb
xor
xor
notb
add
add
add
loop
lret
jge
inc
add
add
pop
add
loop
dec
cmc
ret
test
insl
mov
add
add
mov
clc
mov
cwtl
push
repz
push
bound
cmpsb
mov
add
das
dec
add
aam
add
popa
lret
add
add
enter
xchg
dec
add
push
aaa
add
stos
sar
mov
add
ja
mov
mov
dec
add
push
and
sti
int
cwtl
shl
fstl
add
pop
sbb
add
movsb
and
add
std
stos
sahf
sbb
call
add
push
add
jne
and
add
or
pop
std
add
rcrl
add
cmp
jb
pop
add
jp
mov
inc
add
xchg
and
jno
add
add
add
ljmp
mov
loope
sub
lock
cmpsl
cmc
loope
adc
mov
pop
xchg
mov
add
dec
insl
dec
add
add
sub
cltd
mov
leave
cltd
dec
add
lods
repz
mov
cmp
iret
xchg
jmp
push
add
add
or
push
add
pop
add
lret
into
fisttpl
jge
and
int
sub
mov
inc
add
neg
push
add
dec
add
roll
inc
add
add
push
add
outsl
push
fwait
add
mov
loope
cmp
je
or
out
push
add
repnz
cmp
add
pop
add
push
add
cmp
jb
stos
jnp
jne
mov
add
mov
add
jbe
aam
xor
imul
add
jae
movhlps
add
insl
add
add
inc
add
add
add
sub
outsb
add
test
mov
into
add
xlat
addl
add
rcll
jno
add
jg
add
push
add
test
add
add
enter
add
add
into
or
mov
add
outsl
add
push
add
jo
add
fwait
mulb
addl
fbstp
add
pusha
add
mov
les
jle
rcr
cmp
popf
sub
mov
mov
add
sbb
mov
jns
pop
add
xchg
divl
add
add
add
pop
sbb
int
pop
mov
loopne
arpl
lea
mov
add
enter
mov
add
dec
aas
inc
push
add
pop
add
ja
addl
add
or
pusha
add
inc
loopne
add
add
iret
add
add
xchg
ret
rorb
add
stc
scas
sbb
push
add
test
or
data16
dec
add
mov
pop
pushf
aad
add
add
add
mov
add
xchg
in
lret
ss
add
sub
sti
fnstenv
repnz
daa
adc
pop
mov
push
add
pop
add
jp
inc
movsl
push
add
js
pop
cmpsl
inc
clc
cmpsb
jmp
add
xor
add
je
je
orl
add
add
int
add
add
add
test
xchg
and
add
add
sti
mov
lahf
mov
add
fwait
fs
dec
push
add
add
sbbl
sbb
sbb
pop
or
sbb
adc
add
dec
add
clc
mov
add
paddsw
cmp
nop
push
dec
add
add
mov
mov
pop
add
jbe
repz
add
add
test
jge
push
add
add
sbb
and
add
add
add
xchg
mov
xor
sbb
sub
loopne
add
or
jmp
push
movl
and
add
jae
insb
add
test
cli
repz
mov
jl
in
pop
add
cmpsb
adc
add
movl
mov
push
add
cs
ss
add
and
ret
and
add
enter
sarb
or
movsl
xor
xor
sub
inc
add
xor
xchg
mov
xchg
add
ja
jo
xor
add
xor
add
xor
add
pop
add
push
inc
add
aad
aad
mov
add
aas
add
sbbb
jnp
fdivl
add
iret
add
add
ret
sub
mov
dec
aad
mov
fmul
fcmovu
jns
mov
shrb
add
add
add
push
ljmp
cmp
aam
and
add
jp
dec
add
pop
add
int
pop
aas
cltd
incl
lods
add
jns
or
add
xorl
add
std
add
add
sbb
sbbb
cmc
imul
cmpsb
addr16
in
outsb
add
push
stos
adc
sti
lret
mov
add
add
and
data16
push
add
imul
stos
dec
pop
pop
add
add
xor
add
add
out
inc
gs
aaa
imul
addr16
add
pusha
add
jg
test
sbb
fwait
repnz
sub
sbb
add
inc
add
add
inc
outsl
test
notb
add
mov
mov
xor
outsb
add
sbb
xlat
nop
fistpl
lock
outsl
adc
add
inc
add
add
cli
or
pop
add
mov
mov
inc
add
push
add
mov
rolb
sbb
mov
mov
add
push
out
sub
lret
js
hlt
cs
mov
loop
push
add
insb
add
sub
incl
sbb
or
xchg
aas
outsl
sbb
imul
xchg
mov
add
popa
data16
xchg
or
ja
int
add
sbb
cld
add
adc
dec
add
push
add
pop
add
cmp
imul
loopne
add
inc
add
mov
add
add
pop
add
lock
add
fcomps
jb
and
aaa
icebp
add
and
stc
arpl
pop
cmp
xlat
shr
daa
pop
add
push
outsb
add
or
imulb
arpl
mov
jl
dec
sbb
aam
pop
add
scas
add
mov
xchg
jno
xchg
fucomi
ja
xchg
outsb
add
int3
test
push
pop
add
in
xor
add
cmp
add
out
mov
outsl
adc
add
repz
les
dec
add
mov
sbb
in
dec
add
mov
push
push
add
insb
add
add
mov
add
add
inc
ficomps
add
xor
add
sub
inc
add
add
std
sub
mov
add
lods
mull
and
aam
cmc
je
sahf
dec
add
add
add
jbe
pop
add
xor
push
fwait
xchg
imul
outsl
fidivl
inc
add
call
imul
inc
add
push
in
cmp
sbb
adc
add
add
and
add
add
dec
mov
into
ja
mov
or
insl
or
out
add
std
test
cld
add
stc
sbbl
add
addr16
add
fwait
mov
add
pop
add
jbe
pop
add
sbb
and
and
add
mov
add
adc
add
data16
fmuls
add
fcoms
pop
add
sub
fnstcw
xchg
mov
or
mov
fwait
jp
in
movsb
stc
cld
divl
lcall
xlat
iret
lds
add
add
in
mov
rolb
mov
or
add
and
aam
ror
data16
dec
add
scas
inc
or
mov
orb
movsb
sbb
xchg
add
loop
loop
movsl
add
add
notb
repz
dec
fnstcw
jp
jp
or
push
add
add
aam
add
add
add
xor
sti
mov
add
inc
adc
add
add
add
dec
cmp
leave
sub
sub
mov
test
cmp
sub
push
add
add
jmp
add
push
add
add
xchg
fdivr
dec
add
enter
ret
dec
add
rol
mov
and
xor
out
add
dec
add
add
lods
fst
notb
cmp
jns
lret
xchg
add
jl
sbb
rcrl
ret
sbb
gs
cmp
xchg
loop
mov
mov
push
add
xchg
mov
sahf
add
ja
std
dec
add
push
add
cld
loop
add
in
fldl
sbbl
add
je
inc
add
dec
add
mov
inc
mov
xor
add
popf
mov
lcall
xchg
aas
sti
push
adc
add
xchg
mov
mov
shll
test
outsb
add
add
add
cmpb
add
add
rorb
cli
add
add
lcall
xor
xchg
les
mov
or
add
add
cli
mov
in
add
popf
insb
add
xchg
fistpll
pop
xchg
add
inc
add
cmp
pop
push
add
xchg
add
dec
xor
int3
mov
mov
iret
icebp
outsb
add
dec
add
cmp
add
dec
add
mov
loope
jle
shlb
decb
add
add
add
mov
add
fstl
outsb
add
and
dec
pusha
add
add
jl
mov
push
mov
add
add
inc
jno
inc
add
push
popa
cmc
xchg
fwait
xor
push
mov
adc
add
xor
add
fiadds
je
rcrb
mov
ja
xor
add
add
ss
add
mov
out
or
push
add
lock
add
mov
pop
scas
add
negl
add
icebp
dec
add
jmp
add
push
lahf
stos
mov
pop
add
pop
jecxz
into
imul
add
sahf
mov
clc
mov
adc
lock
add
add
pop
add
repz
xor
add
push
pop
add
mov
test
cwtl
aam
fdivl
dec
add
mov
sbb
cmpb
cmpsb
mov
sbb
in
loop
xchg
xchg
pop
add
add
gs
pusha
add
sub
add
pop
add
xor
add
leave
gs
addl
add
mov
xchg
xchg
data16
xor
push
mov
iret
xor
add
jp
push
add
sub
popf
mov
push
xor
add
add
cmpsl
add
xchg
pop
xlat
xchg
ficomps
icebp
sbb
xchg
mov
add
addb
sbb
mov
lahf
mov
xchg
add
push
or
push
add
std
sub
fidivs
add
add
add
sub
and
add
jmp
loopne
add
testb
add
hlt
sub
xchg
call
inc
add
or
mov
lods
pop
pop
pushf
add
sbb
dec
add
lret
cld
push
add
out
movsb
sub
lods
add
ja
mov
add
and
sbb
xchg
push
add
xor
nop
mov
outsl
shll
pop
add
add
cld
sub
xchg
mov
fs
push
add
add
cmp
jo
xor
add
mov
into
ret
scas
ficompl
adc
add
jae
aad
cmp
call
and
xchg
jecxz
jmp
pop
add
add
cli
xor
add
push
add
inc
add
test
pop
aam
insb
add
mov
repz
add
add
dec
sbb
jo
out
xchg
pop
add
jae
jmp
xor
lret
fisttpl
push
add
leave
add
enter
data16
les
sub
mov
loopne
inc
add
and
mov
add
push
add
sti
cwtl
scas
inc
add
add
push
int3
dec
and
add
mov
push
mov
sarl
jb
sub
fisttpll
jno
mov
sahf
add
ja
inc
rolb
xchg
cmp
addb
fstpt
je
loop
mov
add
xor
add
sub
cld
movsl
cmp
and
add
adc
push
add
imul
add
sbb
sbb
notl
mov
aam
imul
cmp
xor
mov
push
xchg
out
hlt
sub
lret
lret
test
jb
and
add
mov
mov
fcompl
scas
outsb
add
mov
sbbb
aas
add
cltd
add
loope
mov
stos
jno
add
faddl
test
ret
inc
add
add
mov
dec
add
cltd
inc
mov
icebp
add
add
mov
xor
add
test
add
dec
int3
inc
sub
pop
or
inc
test
adc
stos
add
and
add
add
aam
gs
mov
adc
add
ss
add
push
add
xchg
dec
add
and
add
lods
ret
je
push
mov
and
add
cmp
pop
cwtl
lods
movsl
dec
cltd
mov
addr16
hlt
add
and
movsl
jne
addl
hlt
sbb
addr16
add
mov
filds
lods
sbb
stos
rclb
add
test
xchg
aad
das
out
frstor
mov
pop
jbe
jbe
arpl
cmpsb
pop
add
pop
pop
nop
push
add
and
add
les
fs
cmp
mov
mov
mov
sahf
das
add
andl
sahf
add
add
scas
and
js
and
add
push
add
push
pushf
ja
sub
add
add
fwait
sbb
aam
or
shlb
pop
loop
push
popa
dec
add
jbe
idivb
mov
add
mov
pop
sar
jmp
nop
fcmovnbe
enter
push
add
push
test
and
add
xchg
jl
outsl
mov
mov
sbb
fwait
icebp
add
xor
add
enter
lret
add
jl
pop
fildl
jb
loop
inc
add
loop
adc
add
hlt
frstor
sbbb
sub
push
dec
add
mov
dec
inc
add
sbb
adc
sub
and
pop
cltd
divb
sti
add
mov
mov
add
in
ljmp
add
mov
das
add
sub
add
pop
into
add
cli
cmp
push
add
lds
xor
jp
mov
aaa
xlat
add
pushf
add
mov
adc
add
xor
pop
popa
jl
mov
add
sbb
cwtl
out
xor
add
add
dec
mov
mov
outsb
add
in
add
adc
fwait
daa
add
adc
push
add
cmp
jge
outsl
or
lods
bound
jne
add
add
add
cmp
loope
jmp
sarl
sbb
add
and
les
out
lods
cmp
push
and
add
pop
and
data16
cmp
cmpsl
mov
std
add
add
cmp
push
add
hlt
add
jae
dec
lds
mov
and
add
add
mov
xor
jge
push
add
cmp
add
mov
stc
add
jge
add
add
push
nop
xchg
cmp
loope
cmp
test
call
or
orl
gs
add
add
xor
add
roll
jo
push
add
jbe
and
ret
mov
xchg
loop
fcmove
stc
jecxz
cmp
push
add
add
test
add
sub
ja
dec
add
push
sbb
out
add
outsl
test
push
dec
add
jp
data16
in
lods
add
pop
add
cmpb
xchg
movsl
adc
add
mov
mov
aad
add
add
data16
ret
adc
inc
mov
push
add
dec
add
add
incl
adcb
mov
add
shlb
mov
add
add
cltd
add
pop
enter
push
or
adc
add
push
add
pushf
pop
add
add
mov
inc
add
add
sub
les
dec
aad
and
je
cmp
stos
pop
dec
add
inc
cmp
and
add
adc
mov
and
mov
push
add
mov
mov
jp
lods
xorb
add
pop
add
add
mov
lds
cmp
orl
add
dec
add
ror
mov
inc
add
add
mov
add
flds
lods
popf
popa
insl
adc
add
mov
lock
stos
repnz
add
add
sbb
mov
and
cmp
jg
jp
ja
mov
test
jbe
cmc
cmp
mov
add
mov
add
imul
add
int3
cli
mov
ret
ljmp
in
mov
add
xchg
cmp
in
add
add
add
mov
push
fs
arpl
into
xchg
push
ret
or
test
pop
into
sbb
pop
add
aad
dec
cmpsl
std
fsubrp
mov
and
or
add
add
stos
loopne
into
lret
add
add
inc
jl
leave
icebp
pop
fildl
sub
sti
sahf
pop
or
in
push
add
xor
lds
inc
add
add
pop
xchg
add
add
jo
add
lea
mov
cmp
pusha
add
popf
push
sub
add
and
add
add
mov
mov
sahf
jo
pop
add
or
inc
add
add
dec
add
out
scas
sbb
adc
outsl
movsb
andb
rorl
add
arpl
je
adc
or
mov
test
xor
aas
fidivl
add
clc
and
icebp
movsl
sub
in
jne
inc
inc
add
mov
pusha
add
mov
clc
xchg
insb
add
shlb
pop
push
jno
mov
roll
dec
ror
mov
stos
subb
dec
add
outsb
add
add
xchg
sbb
add
mov
add
jle
verr
push
add
inc
adc
add
test
add
mov
call
add
add
add
nop
in
sub
frstor
clc
push
cmp
jno
mov
iret
push
pop
add
sub
mov
mov
xlat
mov
add
add
add
add
xchg
clc
xor
add
mov
add
add
mov
loop
add
or
outsl
sub
xchg
arpl
xchg
fisubl
pusha
add
loop
mov
je
mov
xchg
inc
imul
outsb
add
cmc
mov
loope
lods
jne
dec
add
lcall
adc
cmp
sbb
in
pop
mov
add
adc
add
jbe
mov
add
cmc
and
shll
add
pop
pop
add
call
pop
add
repz
data16
mov
loop
outsl
add
add
sbb
add
jg
xor
inc
repz
les
cwtl
jo
shlb
mov
dec
sahf
inc
xchg
add
add
add
pop
add
fisubs
jbe
mov
aad
hlt
add
enter
mov
add
inc
add
and
arpl
hlt
mov
ljmp
add
sub
add
jae
add
add
pop
mov
mov
fiadds
sbb
lret
push
add
dec
add
add
add
addr16
cmpsl
or
ja
xchg
xchg
shll
add
add
jnp
lret
mov
add
push
aam
add
fwait
add
mov
mov
pop
add
mov
add
add
add
push
add
mov
or
sbb
sbb
mov
add
dec
push
add
lock
je
add
mov
dec
add
mov
add
inc
add
add
movsb
mov
shl
loope
push
add
add
xor
mov
add
testb
cmpsl
mov
roll
cltd
test
jge
pop
add
pushf
pusha
add
inc
add
mov
mov
or
add
add
or
adc
adc
sub
sub
xor
fdiv
js
pop
add
mov
jmp
add
add
lods
add
add
in
int3
jmp
push
popl
adc
add
out
aam
adc
add
adc
add
add
xchg
inc
add
xchg
imull
cmp
es
add
adc
add
mov
ja
push
add
pusha
add
and
add
insl
sub
xor
add
mov
jne
data16
jmp
add
and
add
jae
xor
add
div
cmpsb
jo
xchg
adc
aaa
mov
shr
add
add
ja
sub
mov
mov
imul
add
mov
lahf
lcall
mov
mov
stc
xor
hlt
lret
aad
je
pushf
pop
loopne
xchg
add
mov
add
add
mov
add
inc
add
and
dec
add
cmp
nop
scas
imul
xor
add
add
jl
fdivrl
add
ss
push
popa
add
sbb
in
mov
iret
or
push
add
adc
add
push
sldt
pop
pop
add
mov
out
add
add
add
push
sub
pop
cvtps2pd
mov
sbb
test
add
mov
bswap
mov
out
push
add
aad
movsb
loopne
jmp
add
add
jmp
and
fsubrs
data16
lahf
lock
call
push
add
add
addr16
add
mov
jge
or
int
jmp
adcl
flds
mov
mov
dec
sti
xor
add
pop
add
testl
xchg
pop
cld
mov
rcl
std
inc
add
arpl
inc
add
stos
mov
pop
add
data16
jbe
fnsave
outsl
jg
test
sub
movsl
outsb
add
lea
mov
mov
xchg
jmp
mov
insb
add
or
inc
lods
aaa
nop
add
mov
fsubrp
je
data16
dec
add
add
lds
push
and
jmp
push
mov
out
xor
add
xchg
inc
add
pop
add
jle
test
out
sti
arpl
xlat
add
add
add
sub
movsl
bound
mov
sahf
aad
add
test
mov
bound
pop
push
add
js
icebp
stos
push
add
add
xchg
mulb
push
add
loop
fsubs
jmp
jp
mov
mov
int
aam
add
lock
in
inc
add
add
add
xchg
add
inc
add
icebp
add
sahf
push
push
add
add
aam
sti
adc
push
mov
rolb
add
push
add
gs
sahf
mov
add
push
mov
or
push
xchg
and
mov
add
xor
add
mov
shl
inc
add
ljmp
dec
add
and
mov
add
add
adc
add
mov
cmp
cwtl
mov
dec
int
jp
push
add
add
cmp
arpl
nop
add
std
add
add
sub
ljmp
js
add
add
fldenv
jbe
mov
xor
mov
push
add
cmp
dec
add
or
xor
stc
or
das
inc
add
add
sub
pop
mov
in
inc
aad
sub
inc
mov
mov
int
add
mov
jl
sbb
mov
dec
pop
add
cmpsl
or
sub
push
sarb
stos
and
add
aas
add
lret
add
loope
add
cmpsl
dec
add
popl
mov
mov
mov
add
outsl
fisttps
pop
add
xchg
add
sbb
add
add
leave
test
dec
add
insl
cmp
enter
add
sub
and
add
add
cmp
lret
ret
add
xor
pushf
xor
sti
mov
je
and
dec
add
jno
scas
fstp
insl
inc
pop
push
lods
mov
sahf
push
add
outsb
add
enter
into
rcr
fnstcw
movsl
stc
mov
push
xor
movsb
int
jbe
dec
add
in
and
or
cli
xchg
stos
add
mov
jl
jne
add
jmp
add
stos
add
mov
mov
test
mov
sti
jne
push
add
add
add
pop
lahf
push
gs
fimull
add
cmovle
fldl
add
jno
jbe
sub
mov
jb
dec
mov
nop
add
add
out
mov
loope
cmpsl
inc
mov
xor
add
jle
lds
inc
cmp
ret
mov
add
pop
mov
push
enter
je
cmp
pop
leave
add
mov
cld
mov
inc
add
add
bound
or
pop
add
cmc
mov
dec
add
or
mov
bound
icebp
push
pop
jp
and
filds
aad
cmp
test
sti
lahf
test
repz
add
mov
mov
sbb
add
xor
add
sub
fcomps
cli
add
scas
lock
push
test
jecxz
push
xor
add
lods
add
imul
add
add
fists
mov
mov
scas
mov
inc
add
loop
add
inc
add
xor
sbb
daa
aaa
add
cmp
cld
mov
testl
inc
and
add
xchg
push
add
xchg
hlt
push
jmp
add
xchg
add
dec
lock
in
add
lret
add
add
add
add
pop
add
mov
cmpsb
jge
cmc
adc
add
cmc
mov
rorl
jo
jmp
sub
dec
xor
aaa
cwtl
add
add
inc
add
jno
aam
add
dec
add
out
mov
add
jg
mov
inc
jb
jno
xor
out
fnstsw
add
add
test
mov
lahf
jno
mov
dec
add
aad
paddq
imul
adc
add
ljmp
stos
add
aaa
add
fs
fwait
jbe
xor
add
je
xchg
pop
cmp
xchg
xchg
mov
mov
lods
leave
sbb
leave
sbb
enter
add
push
outsb
add
ja
mov
dec
add
mov
dec
add
in
xor
and
add
aaa
cltd
add
fadds
or
popa
shll
add
cmp
lret
dec
add
add
or
hlt
xlat
imul
add
mov
add
rorl
mov
pop
add
orb
stos
cld
mov
ret
addl
xor
add
fdivr
sahf
jne
inc
add
pop
add
add
movsl
cmp
fidivrs
add
fwait
mov
or
aad
out
bound
xchg
icebp
in
add
flds
js
pop
inc
cmp
add
push
inc
add
orb
dec
add
add
xchg
add
add
cltd
stc
notl
add
dec
add
and
call
or
ret
inc
pop
das
ficoml
push
add
dec
add
cld
adcl
add
add
movsl
inc
scas
push
xchg
jp
sbb
add
add
roll
xlat
sbb
add
cmc
loopne
mov
shll
xchg
xor
add
es
test
outsb
add
rcrl
lret
mov
add
add
bound
mov
fwait
inc
movsl
pop
icebp
add
cmp
xchg
sub
cld
sbb
movsb
jae
push
add
pop
add
add
cmp
and
add
or
jg
aas
push
lahf
clc
movsl
inc
bound
xchg
mov
add
fldcw
pusha
add
mov
push
movsb
pop
add
add
add
mov
xchg
and
add
js
pop
call
add
mov
int3
mov
add
add
test
cmpsb
mov
add
popa
in
ja
inc
movsl
dec
rorl
add
add
fistps
add
cmp
cld
push
aas
and
add
shrl
add
add
and
jge
sbb
sbb
add
mov
push
add
add
sub
icebp
or
pushf
nop
jl
sub
mov
popa
add
mov
rolb
add
mov
imul
inc
add
mov
push
add
in
add
adc
add
cmp
roll
add
add
add
frstor
fidivl
inc
repnz
fwait
add
add
or
inc
add
add
dec
ss
add
imul
push
in
pusha
add
sbb
mov
add
adc
add
xchg
inc
pop
jge
jl
lods
lcall
push
aaa
or
mov
and
test
arpl
repnz
add
add
add
addb
ret
call
cmpsb
pop
stos
add
dec
pop
add
add
test
cmp
add
add
out
cmp
or
add
adc
xchg
add
out
enter
sbb
xchg
xchg
lret
mov
jno
add
in
dec
mov
in
add
mov
shll
add
cmpl
jecxz
aad
inc
add
add
add
add
mov
add
fbld
and
mov
mov
mov
sub
out
mov
fdiv
cmp
fwait
out
jae
add
lds
jne
lods
enter
lret
mov
adc
jns
cltd
jge
rolb
subb
pop
hlt
add
outsl
inc
dec
add
filds
add
sbb
data16
mov
fisubl
sub
jns
movb
add
pusha
add
mov
add
add
clc
jle
mov
pop
jbe
and
movsl
adc
add
add
fldl
fistpll
pop
add
add
pop
or
add
push
add
out
add
add
lds
sbb
fsubl
rolb
push
mov
and
pop
jno
mov
inc
add
jns
sbb
pushf
sbb
add
or
pushf
jl
add
inc
add
and
mov
movsl
push
pop
add
jbe
mov
add
add
add
rolb
mov
jge
mov
xor
out
ret
int3
into
pushf
jbe
jmp
add
add
fwait
je
cli
ret
lret
adc
add
sub
cmp
dec
add
add
add
mov
je
push
shufps
mov
cltd
jmp
aas
adc
add
aaa
enter
loop
sub
jmp
add
push
add
lret
add
out
lret
push
add
inc
add
dec
add
aaa
push
add
les
sbb
push
add
xchg
sarb
push
or
sub
pop
sub
add
sbb
stc
inc
outsl
bound
push
xor
xchg
add
add
mov
add
ud2
ret
gs
pop
add
loopne
sbb
mov
jle
xor
add
mov
icebp
in
fldl
jg
sub
sub
pop
lcall
les
cli
cli
stc
aaa
ret
data16
rorb
add
add
add
fsubrl
add
fsubrs
mov
dec
add
and
cmp
mov
add
add
mov
push
lret
add
adc
aas
add
add
scas
cmp
mov
fwait
add
add
add
lcall
add
add
add
fnstsw
clc
xor
add
add
pushf
lcall
loope
adc
sbb
mov
add
cmp
scas
test
add
add
push
add
cmc
pop
add
lret
push
jle
sahf
fimuls
mov
pop
dec
cmp
mov
stc
push
add
or
lock
add
fwait
stos
or
lret
mov
fcoms
add
add
mov
adc
add
loopne
or
jne
pop
add
mov
add
repz
lods
add
aad
inc
add
cwtl
inc
add
outsl
rolb
add
jmp
lea
add
test
push
add
addr16
add
xchg
add
sbb
addr16
add
popl
fisttpll
inc
add
bound
mov
add
dec
add
std
mov
and
add
sub
add
mov
leave
gs
inc
and
mov
scas
fimuls
add
add
mov
add
or
add
stc
adc
add
inc
sbb
adc
add
add
fcmovne
jns
cmp
adc
imul
mov
lea
cltd
sub
in
loope
ljmp
pop
mov
out
mov
pop
dec
add
add
xor
aad
push
mov
add
or
call
jmp
add
lret
add
pop
std
hlt
sub
fildl
or
icebp
cld
mov
and
mov
testb
add
add
sub
mov
mov
adc
add
xor
add
scas
add
push
add
jg
and
add
add
pop
add
add
jbe
fucom
shr
test
sarl
add
and
add
repnz
add
les
in
test
xor
pop
popa
cmp
fisubrs
xchg
and
jp
js
pop
dec
add
cmp
add
add
and
jno
xchg
and
add
xor
add
int
pop
cwtl
xor
sarl
pinsrw
outsb
add
and
add
outsl
jp
sbb
pop
xchg
mov
add
lahf
dec
xchg
adc
js
inc
dec
std
test
add
popf
lock
add
inc
add
or
cwtl
jae
and
add
lret
jb
mov
mov
data16
adc
jbe
push
and
scas
sti
pop
pop
aas
add
pop
add
daa
add
mov
out
sub
xchg
jge
stos
dec
add
jo
adc
add
testb
pop
cmpsl
xchg
add
add
cmpsb
mov
mov
mov
cmp
inc
add
scas
ja
fs
cmp
pop
add
pop
add
int
add
sub
xlat
xchg
dec
sub
inc
fidivrl
add
push
fadds
push
push
add
sub
add
add
jp
add
and
add
cmp
xchg
jmp
mov
add
xor
sub
jb
dec
add
inc
add
flds
xor
add
dec
mov
enter
outsb
add
mov
add
mov
add
pop
mov
mov
dec
add
fnstenv
add
mov
mov
inc
dec
xchg
mov
add
and
add
mov
xor
mov
add
sbb
add
jle
xchg
frstor
add
or
test
add
add
mov
add
jle
jg
mov
loopne
xchg
sub
lahf
lret
sbb
leave
add
es
in
add
add
xorl
shlb
aad
add
repz
xchg
pusha
add
fldt
aam
add
jb
jne
add
pop
mov
sub
jno
xchg
add
outsb
add
add
mov
insb
add
addb
add
cmc
mov
add
mov
cld
mov
aam
fwait
mov
int3
xchg
loop
mov
nop
mov
add
add
xor
add
dec
inc
add
data16
add
add
mov
int3
int3
or
xchg
add
add
lods
sub
add
fs
pop
dec
add
push
dec
add
repnz
scas
sub
add
test
add
lcall
xchg
bound
flds
dec
add
inc
subl
add
add
aas
rcll
add
sub
sub
mov
fimull
add
into
pop
cltd
add
enter
sbb
nop
je
sbb
add
pop
add
add
push
cltd
push
add
add
int
push
mov
add
add
sbb
add
push
add
mov
add
movsb
xor
add
repnz
subl
push
loop
add
inc
xor
pop
mov
cmpsb
dec
add
addb
mov
inc
add
add
or
cwtl
inc
stc
xchg
dec
mov
xor
inc
add
in
inc
add
mov
in
inc
dec
bound
aas
or
out
inc
add
loop
inc
enter
mov
cli
daa
push
add
xlat
daa
arpl
sbb
add
add
sub
cwtl
lods
jno
add
pop
add
adc
insb
add
sahf
jge
or
adc
mov
add
add
loop
add
mov
cmp
jo
pop
mov
add
or
mov
add
xchg
arpl
in
xor
add
add
orb
adc
add
test
sbb
adc
add
loop
push
mov
dec
add
and
add
fcomps
push
rclb
add
mov
add
jg
add
pop
dec
add
pop
add
ret
add
arpl
xor
add
add
and
add
cmp
inc
mov
pop
add
lea
xor
xchg
push
add
jne
aam
xor
and
add
xchg
scas
jg
or
or
push
add
cmp
jns
fmull
add
movsl
push
dec
add
dec
add
repz
add
inc
decl
push
mov
add
add
cltd
je
inc
add
mov
jmp
inc
push
add
loope
add
repz
xor
mov
mov
add
sub
cli
add
mov
xorb
sarb
enter
in
xor
add
scas
dec
out
jg
clc
sub
dec
add
add
cmp
and
add
pop
jnp
push
loopne
imul
sub
mov
add
add
adc
push
add
scas
in
scas
push
add
aam
movsl
mov
add
mov
les
add
dec
add
mov
add
inc
add
add
mov
sub
mov
and
add
push
add
add
inc
rcrl
add
aaa
jg
sbb
not
push
add
mov
sbb
push
add
bound
xchg
fidivrl
add
mov
dec
add
push
add
push
add
cli
mov
pop
cmp
sbb
xchg
mov
iret
lds
or
lahf
ret
movsb
aad
stc
inc
add
leave
sbb
imul
add
adc
or
xor
add
add
je
outsb
add
sub
mov
xchg
mov
push
fsubs
cs
into
adc
add
jno
jns
in
sub
jno
adc
pop
fwait
push
add
push
add
cwtl
je
les
incb
in
mov
or
xor
ret
popf
out
stc
add
xor
xor
add
sbb
cmp
push
pop
subb
imul
aas
mov
add
mov
mov
xchg
jae
add
hlt
clc
hlt
jb
rcll
add
pushf
out
in
jle
jb
mov
push
add
lock
mov
mov
mov
add
pop
mov
loop
cmpsb
imul
sbb
mov
add
jb
insl
sub
lds
lods
add
xlat
add
cmp
add
pop
cld
add
cltd
mov
lea
push
push
add
ds
subl
add
pop
add
lds
cmp
subps
call
nop
xchg
dec
mov
mov
fisubl
sub
aaa
loop
loopne
pop
add
data16
xchg
pusha
add
add
add
mov
xor
add
push
outsb
add
pusha
add
and
add
push
add
add
mov
mov
test
sub
mov
xor
sub
sub
cmp
lods
fisubrs
sbb
sbb
add
xchg
sub
aam
xchg
lods
jns
add
mov
jp
imul
data16
sahf
add
aas
pop
add
adc
add
add
out
add
cmp
dec
add
push
mov
fdivrl
in
add
outsl
mov
sbb
push
push
movsl
add
sub
mov
fists
out
sbb
sub
mov
add
add
loope
jns
inc
add
sbb
bound
lods
inc
add
nop
jl
xchg
and
add
dec
sbb
cltd
sahf
push
cmc
add
add
hlt
lods
or
push
add
jne
add
push
add
fwait
sbb
andl
mov
add
cwtl
lods
aas
int3
sbb
daa
jg
pop
inc
cmp
out
pop
stos
cmp
cltd
add
add
mov
repz
je
or
sbb
and
add
jp
in
inc
rcl
or
pop
add
push
stos
add
push
add
lahf
bound
xchg
xor
add
sbb
xchg
dec
add
add
add
fstpt
add
lcall
repnz
pushl
xchg
mov
sub
mov
insb
add
xor
sub
push
add
inc
add
out
add
add
stos
add
mov
dec
add
mulb
inc
xchg
lea
lcall
call
add
push
add
add
popa
sub
sub
movsb
outsl
mov
sti
loope
and
add
sub
inc
add
push
add
insl
add
jnp
call
add
out
fstpl
lahf
fucom
mov
ss
add
dec
iret
add
xchg
mov
add
add
bound
sahf
movb
add
add
cmpsl
aas
shll
addr16
add
sahf
das
data16
imul
push
or
aad
out
repnz
and
add
test
push
sub
sub
sbb
cmc
mov
add
dec
add
stos
jb
js
adc
inc
add
lds
pop
out
sbb
and
adc
mov
sbb
test
decb
add
daa
mov
mov
repnz
add
mov
pop
sub
pop
lret
add
add
add
add
cmp
xor
cmpsl
out
xor
add
adc
aam
xor
jnp
sub
mov
add
inc
add
add
jns
fadds
daa
dec
add
add
sbb
add
jle
pop
fiaddl
fnsave
out
xor
add
in
pop
add
insb
add
test
out
jns
add
cltd
mov
stos
push
add
ror
jns
nop
push
add
loop
adc
inc
shlb
enter
sbb
mov
shlb
addb
fldcw
sbb
movsb
pop
cmp
scas
in
je
sti
sar
sarb
mov
xor
mov
rolb
lahf
fcompl
sbb
add
mov
add
push
add
pop
fildl
fs
dec
mov
sbb
add
mov
add
aad
push
add
add
add
add
or
inc
pop
inc
add
adc
jae
dec
add
inc
pusha
add
mov
cltd
sub
fiadds
sbb
cmp
push
sti
add
add
inc
add
add
add
add
movsb
mov
add
scas
rclb
xlat
sub
movsb
ja
xor
add
aad
sbb
add
fincstp
cli
sbb
push
add
add
clc
mov
sub
in
push
add
add
jl
inc
push
push
add
loopne
mov
push
add
mov
add
mov
push
cmc
inc
add
add
mov
pop
add
xchg
orb
roll
xchg
mov
add
push
add
add
popa
popa
insl
xor
orl
fninit
into
jnp
add
add
jno
movl
cli
roll
add
das
rcll
std
add
adc
mov
add
xchg
mov
add
xor
add
or
cmpsb
lcall
lock
mov
fwait
add
add
add
pop
sbb
inc
add
mov
push
addb
add
in
mov
cltd
add
add
lcall
out
sub
roll
or
mov
mov
cwtl
rorl
mov
xchg
xchg
int3
and
add
mov
insb
add
jl
mov
cmp
pusha
add
add
lea
add
mov
or
add
push
pop
scas
add
push
add
hlt
fcmovb
push
jp
add
and
add
add
mov
pop
fiadds
push
lcall
add
cli
xor
add
inc
lret
pop
idivl
push
add
add
fiaddl
push
add
cmp
jb
in
add
jle
inc
in
aam
jp
outsl
adc
xor
add
insb
add
xchg
xor
mov
mov
iret
lock
mov
xchg
mov
push
subb
mov
sub
add
out
ret
inc
pop
add
add
add
jp
cmp
cmc
and
inc
add
jns
ja
mov
xchg
lret
xchg
push
add
xchg
mov
mov
mov
scas
add
push
pop
add
add
and
add
add
add
mov
mov
mov
jae
je
cmp
inc
jecxz
push
add
iret
jns
loopne
push
popf
cmp
inc
add
mov
add
add
dec
add
add
sbb
out
jge
xor
fwait
loop
add
add
add
out
mov
cld
add
cltd
ljmp
add
roll
es
add
mov
hlt
lcall
add
dec
ret
pop
add
cmovle
pop
push
add
xchg
inc
lahf
cmp
jnp
pop
add
jne
ret
add
enter
add
add
imul
add
xchg
movsl
mov
clc
and
add
add
push
add
xor
push
cli
movsl
or
int
mov
push
add
ja
push
cmp
clc
jecxz
xchg
data16
xchg
xor
pop
add
loopne
test
add
decl
add
jno
orl
add
stc
pop
add
xchg
pop
cwtl
add
and
add
addl
add
std
cmovge
hlt
add
cmpsl
ret
add
adc
add
adc
add
aas
aad
sahf
loop
xchg
roll
arpl
sub
nop
mov
mov
add
add
push
add
daa
xor
out
xchg
xchg
pop
hlt
and
add
mulb
sbb
rolb
add
mov
movsl
je
rolb
add
flds
or
adc
add
or
mov
pop
add
stos
mov
xchg
lods
repz
ljmp
in
insb
add
push
add
imul
adc
add
pop
add
shr
pop
pop
add
ret
mov
cmp
negl
test
sbb
add
cmp
sbb
lods
or
hlt
sbb
mov
add
jno
add
push
push
mov
pusha
add
mov
in
or
popa
pop
fiadds
or
call
inc
pop
es
add
jp
xor
les
add
add
adc
icebp
sub
mov
loope
loop
jbe
push
cli
popf
rol
jmp
pop
add
or
xor
add
add
roll
add
iret
or
inc
add
dec
sub
pop
xor
add
adc
popf
add
add
ja
frstor
lods
add
in
inc
add
test
pop
add
in
roll
in
xor
rorl
pushf
inc
in
movntq
out
pop
jle
cmp
jae
add
xchg
add
cltd
mov
jg
xchg
out
gs
push
add
cmc
xchg
mov
mov
adc
xor
add
shl
repnz
add
add
cmp
sti
shrb
add
add
mov
push
add
pop
add
add
xchg
negl
cmp
add
add
dec
add
js
out
fsubp
fistps
add
add
jmp
mov
les
add
add
sbb
ds
inc
add
movsb
cmpsl
xor
sbb
xlat
or
out
cmp
mov
loope
jmp
mov
pop
pop
add
add
mov
sbb
hlt
xchg
mov
pop
jb
in
pop
das
aas
cltd
pop
push
insl
add
aad
cmp
add
test
subb
in
add
jg
and
xchg
icebp
push
add
adc
add
movsl
loop
mov
movsl
add
je
cs
xor
add
dec
jmp
inc
add
jg
add
jae
and
add
outsl
outsb
add
pop
push
mov
add
add
mov
inc
add
add
add
fnsave
add
popa
inc
lahf
push
mov
add
mov
mov
mov
bound
pop
out
out
push
xchg
push
add
push
add
cmp
ret
sub
dec
add
jmp
jno
add
dec
lret
add
into
pop
test
add
jmp
popa
push
add
pop
add
push
mov
in
testl
add
or
js
sti
jns
cld
add
jbe
and
add
add
add
fs
out
add
insl
add
add
aas
mov
add
in
inc
add
dec
insb
add
or
aaa
sub
fstp
mov
ret
jbe
data16
dec
add
pop
mov
mov
add
add
add
in
inc
add
scas
xchg
cmovs
repz
test
dec
add
sub
jl
out
cmpsb
mov
dec
add
add
push
add
outsb
add
sub
or
out
mov
mov
cli
add
scas
pop
in
push
mov
vpshuflw
pop
sbb
mov
lods
inc
add
inc
sub
jle
js
xchg
inc
and
add
push
xchg
xchg
mov
je
add
add
add
add
jno
stos
mov
repnz
dec
add
or
sub
lock
add
add
lcall
pop
add
fdivl
jno
and
lock
push
add
push
add
push
jp
bound
ret
movsb
push
add
mov
arpl
out
cmp
lods
enter
stos
add
add
in
fdivr
pop
add
fidivs
scas
and
add
add
push
add
je
pop
jnp
push
adcb
adc
in
mov
jo
fimull
adc
cmp
push
add
sbb
push
add
add
add
add
stos
cmp
sbbl
movsl
add
add
shl
mov
orl
aad
add
mov
orl
out
and
add
add
add
incb
add
add
ret
sbb
dec
add
fwait
adc
add
push
cmp
movb
cmp
int3
adc
sahf
int3
lods
cmp
sbb
movsl
xchg
xor
mov
pop
add
xor
add
dec
fsubrl
add
jl
cmpsb
xchg
pushf
jge
jbe
dec
add
adc
add
test
cmpsb
fnstenv
out
add
mov
fstl
jnp
fisttps
add
ret
repnz
inc
add
dec
mov
mov
sub
inc
mov
mov
add
jb
stos
push
sub
cmp
mov
cmpsb
stos
inc
add
inc
iret
stos
xchg
lea
rclb
pop
add
add
add
cld
int
adc
in
mov
repnz
add
add
mov
pop
add
dec
add
das
add
fisubl
mov
and
add
popf
add
jo
push
add
add
sti
dec
add
mov
imul
mov
mov
pushf
outsl
jo
cli
loopne
add
mov
add
push
xchg
filds
orl
add
cmc
adc
pavgb
mov
adc
ds
add
mov
into
jbe
xor
andl
push
sbb
xlat
or
pop
sub
add
add
scas
es
add
push
add
imul
push
cmc
cli
xchg
enter
add
add
addl
inc
loopne
fsubrl
dec
add
stc
std
add
dec
add
repnz
inc
xchg
pop
insl
add
aam
add
test
fnstenv
add
repnz
add
ds
cmp
jecxz
add
mov
sub
shll
add
fadd
jp
mov
dec
add
mov
fstps
outsb
add
std
mov
add
rorl
jecxz
push
sub
cltd
push
pop
jb
fistpll
mov
mov
add
mov
add
mov
mov
cmp
or
mov
add
push
cmp
lcall
add
dec
ljmp
adc
add
pop
cmpsb
jg
loope
in
mov
prefetchnta
dec
jae
fs
xchg
repz
in
sbb
flds
add
add
push
aam
jle
cwtl
lods
sarb
out
add
testl
cmp
add
dec
add
imul
pop
sahf
lcall
mov
mov
mov
xor
es
add
insb
add
mov
xlat
add
pop
mov
add
ds
xor
add
add
add
loope
fiaddl
jne
add
out
ret
sahf
inc
add
lds
lret
mov
dec
mov
inc
dec
add
aad
add
imul
scas
xchg
dec
add
sbb
xchg
stos
lea
fdivs
jl
test
adc
cwtl
sbbl
add
mov
fucomi
test
mov
data16
ja
pop
mov
shrb
add
pop
mov
sbb
or
rorl
add
lds
mov
add
lcall
add
add
add
lods
lahf
test
jg
dec
add
add
iret
jo
cld
mov
add
rclb
adc
and
add
add
mov
push
add
inc
add
mov
mov
xchg
ja
add
add
lods
add
nop
cld
out
aas
push
int
add
sbb
sub
sbb
loop
add
cltd
ja
push
scas
pop
cmc
filds
cmc
test
js
jnp
bound
out
loope
ret
hlt
clc
aaa
add
insl
rcll
inc
add
ret
int
jno
xchg
push
add
rcr
pop
add
adc
add
sarb
scas
xor
stc
mov
es
add
aam
int3
xorb
add
mov
add
shr
mov
fcmovnu
stc
or
or
add
add
add
shll
xchg
in
leave
add
ret
or
jbe
lret
xor
add
dec
add
add
gs
inc
inc
sbb
mov
sub
stos
mov
adc
dec
pop
add
add
add
ds
daa
sbb
jae
add
lret
adc
add
out
add
push
add
add
add
inc
mov
xor
add
aam
ljmp
or
cmpsb
cmp
ja
jo
les
out
sub
rolb
jp
or
jle
add
cmp
rcrb
add
xor
add
in
pop
add
xor
add
add
std
fld
jbe
lcall
adc
ljmp
jbe
lret
ficoms
sbb
jle
push
nop
add
sbb
xor
add
pop
dec
jmp
les
mov
sub
daa
and
adc
add
lret
sub
mov
add
jb
jecxz
jmp
add
push
push
nop
xchg
shlb
cmp
sbbl
add
sbb
mov
aas
push
aaa
add
lret
movsl
mov
sbb
enter
or
stc
push
sub
call
jae
scas
xchg
xorb
add
sub
dec
add
mov
outsl
lods
adcb
add
xchg
cmp
cmp
mov
pop
add
cltd
mov
xchg
sbb
add
clc
add
in
pop
into
sub
repz
push
add
xlat
test
cld
cmpsl
lods
xchg
ljmp
mov
jle
outsl
xchg
popf
outsl
add
mov
divb
repnz
cmpsl
add
add
mov
in
add
inc
add
mov
fiaddl
sub
dec
add
add
and
adc
add
lret
dec
pop
add
pop
cs
and
xchg
popa
add
or
sub
push
adc
add
inc
mov
add
dec
add
bound
es
add
mov
and
int
andb
add
data16
adc
rcr
mov
add
add
jp
stos
ret
xor
add
mov
push
add
mov
add
add
or
mov
sbb
iret
xchg
pop
mov
and
fwait
jbe
dec
add
xchg
adc
add
test
stos
aad
sbb
cld
addr16
dec
add
xchg
fimuls
jno
add
add
xchg
jle
je
into
xchg
mov
pop
fdivl
adc
add
xchg
aas
rol
jbe
cmpsl
imul
and
cmp
pop
cmp
jns
filds
iret
add
imul
xor
xchg
adc
add
add
sti
out
adcl
sub
push
mov
sbb
mov
repnz
shl
inc
mov
push
add
pusha
add
in
sbb
mov
lock
ficomps
pop
add
dec
add
xchg
movlps
add
dec
push
add
add
add
test
repnz
fwait
gs
rcll
cli
pop
cmc
jle
out
jge
fucom
lock
addl
add
hlt
cmp
in
add
mulb
mov
loopne
test
pop
add
fwait
jl
lret
js
gs
mov
arpl
dec
addb
add
pop
add
mov
filds
xor
add
sub
adc
add
push
add
add
leave
or
ja
les
adc
push
add
jl
add
insb
add
hlt
mov
cmp
push
rorl
data16
test
fdiv
dec
add
add
mov
fimuls
mov
icebp
icebp
fbstp
cmp
xor
add
fdiv
xchg
or
or
andb
call
mov
and
in
jmp
sbb
add
or
pop
sbb
sub
add
add
add
or
push
in
cwtl
jl
mov
add
popf
add
aaa
mov
add
xor
loop
shlb
add
fldt
add
or
and
add
add
cmp
je
xchg
xchg
cmp
pop
add
and
add
mov
insl
adc
mov
cmpsb
cli
xchg
adc
ror
shl
dec
popl
add
fimuls
add
scas
fisubl
lock
adc
add
pop
sbbl
cltd
mov
lea
add
add
lahf
pop
mov
xchg
add
push
add
loopne
sub
cwtl
test
add
lret
add
add
sbb
pop
xchg
mov
jne
data16
add
mov
and
add
dec
cmp
mov
mov
xchg
cltd
jge
and
adc
add
add
cli
add
fimull
add
mov
xchg
test
add
add
inc
es
add
in
add
movsl
cltd
sub
add
clc
in
push
add
adc
pop
add
sub
jge
add
push
add
pusha
add
add
add
mov
and
leave
dec
add
daa
inc
add
mov
lock
add
lock
adc
add
inc
pop
test
add
or
aas
sub
add
ror
mov
add
stos
sub
dec
add
sbb
dec
out
test
sbb
pop
add
push
push
add
icebp
bound
or
pop
push
fwait
pushf
in
enter
jg
add
in
mov
add
leave
push
xchg
add
add
add
cmc
scas
test
stc
add
dec
push
std
add
add
add
jo
adc
add
imul
ret
add
ds
dec
add
cmpsl
add
inc
add
jb
adc
add
fistpl
fists
bound
sbb
xchg
jb
or
out
mov
and
mov
cmpsl
xor
add
jb
jae
add
add
inc
add
test
ret
dec
add
jmp
hlt
fisubs
aas
repz
add
pop
je
bound
pop
add
dec
add
pop
add
sub
and
add
bound
add
add
add
in
cmp
and
test
out
les
mov
add
in
jge
popf
inc
push
add
pop
add
add
sarl
add
ds
fisttpl
cmpsb
punpckhwd
or
mov
cmpsl
xchg
mov
outsl
sbb
adcl
mov
pop
add
adc
add
addl
xchg
xor
add
test
add
aam
inc
add
push
add
outsl
ljmp
add
aam
pusha
add
aad
push
add
stc
add
into
add
inc
add
xor
xchg
sub
nop
cmp
inc
loope
mov
jmp
adc
add
cmp
and
jecxz
data16
repz
add
push
movsl
add
push
aam
sbb
pop
dec
add
add
xor
or
xor
aam
mov
add
inc
add
test
cli
pushf
insb
add
daa
call
in
cmc
je
xchg
push
add
xchg
cmp
xchg
add
adc
int
es
pop
add
push
adc
jbe
sbb
and
add
adc
add
insl
add
lea
out
inc
mov
cli
ret
add
sub
bound
fmulp
mov
add
ljmp
neg
js
jb
cmp
mov
inc
test
mov
addr16
dec
add
push
add
dec
add
mov
fwait
pushf
mov
ret
fnstsw
pop
add
xor
pop
add
movsl
add
fildll
ljmp
add
daa
add
lret
std
pop
outsl
add
xchg
loope
cmc
mov
mov
adc
add
repz
into
jmp
loopne
push
add
lods
dec
pop
ja
add
cli
psubusw
add
add
xchg
add
cli
xor
jns
add
lds
xor
add
lock
rcl
jmp
dec
add
sahf
cwtl
jns
sub
stos
gs
add
add
sti
adc
add
xchg
dec
add
add
aas
fimuls
add
jae
add
adc
add
jo
jl
sbb
adc
add
add
adc
add
add
sub
lret
cmp
lcall
filds
add
mov
inc
add
add
nop
hlt
inc
add
test
cmp
mov
push
lods
xlat
pop
add
add
out
decl
pop
add
out
shrl
mov
in
fwait
cmc
ja
add
sahf
add
test
jne
xchg
shll
out
les
sub
pop
add
out
mov
add
jle
xchg
out
loop
stos
xor
add
pushf
mov
rol
pop
mov
cmp
sbb
flds
dec
cli
mov
and
sub
pushf
dec
add
xchg
loopne
int3
pop
push
fwait
in
dec
add
sahf
push
roll
imul
push
add
fistps
pop
or
repnz
inc
add
xlat
mov
fadd
dec
add
add
dec
push
xlat
add
add
rorl
sub
sarl
pop
add
cmp
cmp
dec
add
cltd
xchg
je
xor
add
add
dec
imul
jno
add
dec
add
aas
gs
or
arpl
daa
stc
jno
dec
jo
push
inc
add
cmp
jbe
sub
push
push
int
idivb
fnstenv
sub
push
add
jl
lods
cmp
add
aad
gs
add
push
add
adc
add
lcall
add
xchg
xchg
aam
add
out
das
fdivs
xor
push
mov
dec
lahf
lods
cmp
jb
push
push
cmp
push
add
add
add
push
add
lahf
add
mov
inc
add
dec
inc
push
pop
add
and
add
dec
add
testb
and
push
add
cmp
add
dec
add
mov
idivb
add
out
fldcw
mov
cs
add
add
mov
clc
add
sub
fisubl
add
add
sbb
mov
jbe
mov
sbb
pop
add
test
add
sahf
and
add
enter
sahf
adc
shr
pusha
add
or
jmp
or
aam
mov
enter
pop
cmp
mov
call
sbb
or
add
pop
add
movsb
add
dec
jne
sbb
sbb
and
add
jge
add
subl
cld
pop
sub
sbb
dec
add
rolb
dec
add
and
add
xor
add
jg
and
add
jb
push
add
mov
xchg
inc
dec
add
aaa
faddl
adc
mov
add
mov
popa
repz
pop
add
mov
lds
add
add
add
and
add
adc
add
sub
sub
sahf
jge
sub
jbe
mov
ljmp
add
lds
iret
sbb
pop
add
add
fnsave
add
add
sarb
pushf
add
add
push
jne
lds
add
rcrl
std
js
jl
lcall
loope
jg
add
sbb
add
add
add
into
jp
sub
push
add
loopne
or
mov
pop
data16
mov
lods
add
add
add
sub
lock
add
aaa
in
cmp
add
stc
add
add
fdivrl
mov
add
add
or
xchg
sbb
cmp
in
je
jns
mov
add
cmpsl
repz
jb
cmpsb
daa
fildl
int
pop
add
movsl
lock
dec
xchg
add
add
movsl
add
std
sub
sahf
jbe
sbb
mov
shlb
add
and
dec
add
mov
sbb
cmpsl
mov
cmp
or
mov
outsb
add
shl
std
inc
ja
add
add
pop
add
xchg
add
inc
mov
mov
insl
sbb
fiaddl
push
push
add
add
add
scas
add
dec
inc
mov
xchg
arpl
and
add
lahf
and
add
ljmp
movsb
int3
adc
add
popa
out
sub
xor
add
mov
js
popf
inc
xchg
xchg
pop
add
add
add
add
out
push
add
mov
dec
stc
jo
pop
add
push
mov
cmp
or
jne
pop
lock
incb
test
testb
cmp
nop
pop
std
add
push
add
sub
jns
popf
adc
mov
addl
and
add
outsl
int3
scas
imul
inc
add
ja
mov
out
fdivrl
add
add
add
add
and
sbb
loope
cmp
jecxz
mov
call
sub
std
loop
add
adc
add
aaa
faddl
out
in
nop
add
movl
nop
xchg
and
add
mov
cmp
and
jno
jnp
and
fisttpl
push
add
adc
sbb
cltd
sub
sti
gs
push
add
aam
hlt
add
inc
add
mov
jae
subb
je
bound
mov
adc
push
add
rcrl
out
dec
add
add
ljmp
add
lret
push
inc
add
jo
jns
cmp
jne
movsb
scas
xchg
mov
lcall
add
add
sar
aas
push
add
add
mov
mov
aas
inc
xchg
mov
mov
fdivs
and
sub
mov
inc
add
add
sub
or
call
add
add
add
mov
jmp
or
add
xor
pop
add
dec
lcall
add
adc
add
add
ja
js
pop
and
icebp
push
sbb
push
add
cmp
daa
xor
aas
das
repnz
out
add
or
adc
xchg
and
add
mov
pop
sbb
leave
jno
add
sub
add
add
add
daa
add
addl
sti
push
int3
inc
add
add
stc
ljmp
push
add
daa
add
add
pop
add
incl
cltd
inc
rcrl
add
jno
mov
push
dec
add
dec
js
and
test
mull
jl
add
mov
add
jns
scas
add
mov
popa
insl
in
add
movsl
sti
lock
xchg
lods
jb
test
data16
add
sahf
add
mov
add
xchg
jl
rcl
jne
sub
mov
add
shl
or
sub
push
add
pop
cmp
mov
or
dec
add
jge
lahf
loop
loopne
arpl
adc
sbb
add
push
xchg
pop
mov
push
xor
sahf
bound
and
add
add
add
sub
arpl
cs
stc
add
movsl
add
mov
ljmp
int3
rcr
ja
fildl
movsl
cmp
add
mov
xor
or
mov
add
add
lret
mov
add
sbb
mov
add
cli
and
leave
push
mov
pop
add
pusha
add
jmp
cmp
xchg
add
sub
fadds
ss
out
mov
xor
inc
jmp
mov
xor
jns
dec
add
mov
add
pop
add
xor
add
adcb
xchg
inc
dec
inc
rorl
out
mov
xchg
popa
popa
jecxz
es
jno
lret
and
add
push
cwtl
enter
mov
jns
add
inc
push
add
leave
aas
cli
sahf
setge
jmp
xchg
mov
lret
leave
loope
je
mov
fisttpl
stos
clc
mov
or
imul
mov
add
add
pop
add
adc
add
sub
aad
scas
div
mov
daa
cmc
add
inc
add
jo
mov
int3
jmp
push
add
cmp
add
incl
sbb
cmc
mov
dec
add
add
bound
int
add
add
add
xchg
xchg
loopne
test
stos
mov
pop
cmpsl
add
cli
add
and
push
add
in
add
ja
push
mov
mov
inc
add
or
fistl
add
loop
lcall
cmc
pop
push
add
cmp
popa
sub
pop
sub
cmp
pop
out
add
add
pushf
enter
std
mov
ret
mov
lret
fmull
mov
xchg
push
add
dec
add
add
add
add
nop
cmpsl
xor
add
xlat
push
pop
add
scas
push
add
add
xchg
add
test
inc
cmpsl
lret
mov
lods
pop
add
mov
movb
add
sbb
inc
ss
add
add
pop
fmuls
ret
jecxz
das
into
outsl
and
jl
call
test
outsb
add
dec
add
scas
add
jmp
inc
add
inc
pop
add
data16
jnp
bound
loopne
pop
or
das
roll
dec
add
dec
add
rcrl
jecxz
add
fildl
xchg
jge
jae
lea
xchg
add
mov
movsl
scas
aad
add
xor
add
mov
lds
xlat
adc
dec
add
mov
gs
ret
das
mov
add
imul
mov
xchg
add
shl
in
cltd
or
add
jl
adc
lods
repz
add
jl
inc
jmp
mov
push
add
add
adc
fnstcw
icebp
fimull
add
add
nop
scas
test
and
push
xlat
add
mov
cmp
jge
dec
add
rorb
loope
add
jmp
ret
add
int
out
je
lcall
add
push
outsb
add
lock
mov
in
in
push
js
cmpsb
shr
mov
xor
add
add
movsl
test
sahf
in
jle
je
lret
jmp
ror
ret
shrl
add
adc
xchg
mov
in
rolb
inc
add
ret
arpl
popa
cwtl
cmpsl
jecxz
bound
call
jmp
sbb
cmp
inc
add
add
add
pop
and
add
mov
rcl
jp
int
mov
add
aaa
jmp
pop
pop
lcall
cwtl
cltd
cld
popa
stos
lock
jne
pop
add
scas
add
lea
push
adc
add
add
orl
add
aas
and
add
xor
push
or
or
xlat
ret
inc
mov
int
add
ss
and
add
jo
dec
test
add
add
push
add
and
add
sbb
lods
mov
test
add
mov
mov
push
add
xor
sub
mov
add
sbb
push
nop
add
add
pmaxub
das
pop
or
mov
or
add
add
add
mov
les
add
cltd
jle
sbb
or
sahf
lahf
fwait
dec
and
leave
cwtl
scas
icebp
xchg
push
sub
add
add
test
push
add
insb
add
push
add
dec
add
shlb
hlt
mov
hlt
test
add
mov
push
add
add
cld
cmpsb
scas
pop
add
add
loop
add
pop
loop
push
add
or
loopne
add
lea
add
cmc
add
out
jae
rorl
add
aam
jg
fs
ljmp
sub
xor
cltd
daa
imul
add
lea
pop
add
add
stos
lcall
add
lret
add
cli
add
jl
xorl
add
mov
or
add
shlb
daa
xchg
add
cmc
pop
add
add
add
sbb
lods
sub
leave
daa
push
add
test
clc
shlb
sbb
push
nop
lock
jb
fbld
xchg
vzeroupper
jecxz
push
add
add
add
add
outsb
add
adc
mov
push
inc
add
add
fidivrl
add
xchg
sbb
aas
sarl
pop
add
cmp
jp
pop
jnp
add
pop
push
ror
aas
xorl
push
add
push
add
jecxz
inc
add
cmp
jecxz
jns
pop
adc
xchg
fisttpl
ss
add
or
dec
add
jno
dec
add
icebp
enter
icebp
test
test
cld
mov
test
ficompl
repz
pusha
add
pusha
add
dec
add
adcb
outsl
daa
cmp
xchg
dec
mov
mov
cli
cld
fs
rol
push
add
movsb
cmp
shll
jp
xchg
gs
scas
fldcw
pop
add
bound
or
or
mov
dec
add
shrb
add
sarb
roll
sub
pop
in
ficoml
fiaddl
xchg
cmpsl
jae
add
gs
or
mov
into
lahf
fcmovb
dec
add
mov
pop
mov
aaa
xchg
pop
cwtl
pop
insb
add
add
sub
mov
int3
out
test
rolb
mov
fstl
enter
rolb
push
cltd
shlb
test
repnz
or
push
add
inc
add
or
mov
add
cmpsl
or
or
add
mov
popl
lea
aad
push
jo
add
add
cmp
add
add
bound
dec
add
std
outsl
jmp
hlt
push
mov
mov
add
inc
add
add
add
dec
add
repz
scas
add
xor
add
movsl
insb
add
mov
in
insb
add
stc
and
jle
xor
bound
pop
mov
adc
add
pop
xchg
push
inc
add
xchg
add
add
push
add
adc
pop
xchg
add
sahf
jecxz
imul
add
rcrb
jne
jne
xor
add
jge
xor
add
add
push
add
aaa
fiadds
loop
xchg
mov
xchg
call
add
lock
add
inc
mov
add
gs
shl
inc
or
int
add
ja
jl
xchg
xchg
jle
dec
add
loope
mov
add
add
dec
out
pushf
or
roll
loopne
add
push
adc
mov
add
mov
stos
add
repz
fiaddl
stos
fidivrl
add
mov
mov
add
and
daa
add
dec
add
ret
cmp
outsb
add
add
pop
add
or
mov
out
adc
imul
cli
mov
pop
add
test
add
jne
push
sbb
adc
rol
mov
add
add
mov
and
add
pusha
add
add
fwait
push
repnz
test
add
add
stc
add
fucomp
inc
xor
mov
or
xor
add
mov
add
pop
add
sub
sbb
out
jl
mov
xor
add
mov
push
mov
clc
push
mov
leave
dec
mov
sub
repnz
inc
mov
xor
insl
cmpsl
int3
mov
int3
in
lret
jae
mov
pop
add
clc
add
jecxz
xchg
add
adc
add
adc
add
push
add
fsubl
add
or
test
in
gs
add
add
add
add
mov
sahf
loopne
add
add
add
cmpsl
add
lcall
jl
and
xchg
mov
loope
mov
fwait
adcb
sbb
pop
mov
add
jns
fistps
jno
out
shll
fidivrl
imul
sub
and
pop
cmpsb
data16
in
cmp
dec
adc
add
xor
add
lock
add
push
push
ds
daa
loope
stc
cmp
add
xorl
add
outsb
add
push
cwtl
add
int3
pop
int3
mov
add
add
sbb
mov
push
std
mov
pop
add
lret
pop
push
add
pop
adc
jno
cmc
stos
bound
shrl
sarl
add
jg
or
jg
out
add
xchg
add
je
es
mov
mov
icebp
inc
mov
mov
bound
std
and
fcompl
add
in
push
add
shll
jbe
imul
add
cli
add
add
testl
push
add
push
add
lea
mov
sub
js
dec
fisubl
add
test
mov
cmp
pop
fcoml
shr
push
clc
fldl
lods
test
sarl
dec
mov
or
inc
pop
add
outsl
jg
and
add
push
add
adc
xchg
bound
mov
rorl
dec
xor
clc
call
add
ja
dec
insb
add
fdivl
pop
loopne
mov
push
sub
jb
jecxz
aaa
lods
add
pop
add
add
xor
add
dec
pop
jne
cmp
add
push
aaa
xor
notl
popa
push
mov
jle
sarl
add
add
inc
add
pop
add
adc
add
add
dec
add
sarb
mov
xor
lea
adc
dec
pop
fcmovbe
adc
sahf
sbb
das
xchg
movsl
push
add
jns
mov
enter
and
add
fstpl
out
add
stc
mov
xor
add
pop
movsl
cmp
mov
xchg
add
insl
push
cmc
movsb
xor
dec
add
pop
add
lea
jle
or
imul
add
jmp
adc
add
mov
data16
add
mov
aas
adc
add
andb
sub
mov
add
test
ficomps
scas
mov
mov
sub
mov
mov
xchg
arpl
mov
jmp
mov
sarb
and
add
pop
add
add
jg
adc
add
iret
mov
aaa
mov
test
dec
add
jle
cwtl
fdivrs
out
add
add
hlt
add
add
movsb
add
mov
enter
movups
leave
add
xchg
jns
xchg
adc
sbb
popf
mov
add
lea
add
scas
mov
sbb
aaa
roll
mov
stos
into
and
add
gs
addr16
add
cmpsl
sbb
cmp
clc
or
xorl
add
rclb
outsl
rorl
sbb
sbb
dec
dec
and
add
mov
xor
jle
sbb
pop
add
xchg
faddp
adc
add
xor
add
std
mov
scas
idivl
cmp
xor
add
out
ret
dec
data16
add
dec
add
lahf
subl
add
add
adc
add
mov
repnz
cmp
popf
jo
les
add
inc
lret
mov
add
enter
add
add
mov
mov
imul
sets
push
ss
cltd
and
cld
nop
dec
add
add
les
cmp
rorl
jns
sbb
xlat
cld
or
sub
push
add
repnz
add
aad
lret
dec
add
push
loopne
mov
add
add
xlat
insb
add
aas
inc
stc
popa
cmp
arpl
aas
mov
add
cmc
pusha
add
shlb
add
sbb
bound
mov
add
add
mov
jnp
add
es
add
inc
lahf
pop
cmp
aam
sti
lods
test
jg
lret
inc
add
rclb
xchg
add
and
inc
add
and
add
mov
mov
add
xchg
repz
dec
add
into
sbb
add
mov
pop
add
jle
roll
add
loop
aaa
ret
inc
data16
mov
data16
or
aas
push
add
stos
add
loopne
push
add
cmpsl
out
pop
enter
jae
add
inc
add
imul
add
repz
dec
stos
add
add
mov
pop
add
sbb
add
xor
add
pushf
sub
jl
xchg
dec
fidivrl
fucomip
int3
addb
out
fcoml
xor
add
xor
add
push
mov
addl
fadd
fisttpll
add
add
cmp
gs
in
movsl
jo
inc
add
jbe
leave
and
pop
add
insb
add
inc
add
out
clc
cli
inc
add
mov
in
push
inc
add
pushf
mov
add
add
lea
add
mov
jnp
add
aad
adc
add
xor
mov
orl
add
enter
nop
dec
test
xchg
loope
and
dec
add
and
sbb
pop
add
add
dec
jp
in
xchg
loop
dec
add
cmp
dec
add
nop
insb
add
or
jmp
gs
mov
add
push
add
add
add
icebp
xor
dec
add
hlt
xor
add
sub
push
mov
das
rclb
fs
fwait
inc
add
notl
sub
fwait
mov
add
decl
add
add
sub
dec
dec
add
xchg
add
out
insl
or
or
and
add
xchg
push
xor
pop
add
js
int
test
add
test
aas
cmpsl
xchg
xchg
pop
add
inc
add
add
and
add
jbe
daa
arpl
mov
fldenv
fwait
add
cmp
xor
add
addr16
pusha
add
cmpsl
popf
leave
mov
test
in
lret
or
stos
mov
mov
jg
js
sbb
sub
cmp
add
mov
pop
mov
add
cmpsb
mov
add
mov
add
jno
loop
add
sbb
mov
jp
fstl
ret
daa
push
add
adc
jns
icebp
pop
mov
adc
add
lods
aam
ss
cmpsb
rorl
pop
add
fs
lods
mov
mov
add
in
xor
sbb
and
add
and
xor
adc
cmp
ljmp
and
add
jp
lahf
add
or
jecxz
xlat
out
push
add
adcb
jne
filds
inc
add
add
mulb
mov
or
and
aad
inc
pop
add
shlb
lock
fisttpll
or
ret
add
add
inc
add
add
cwtl
lds
push
add
cmp
add
jmp
cwtl
pop
add
mov
enter
imul
push
add
flds
inc
cltd
shrb
add
pop
add
xor
add
add
add
dec
mov
dec
add
jge
add
dec
add
loop
dec
add
inc
add
je
repnz
or
mov
dec
add
dec
add
mov
lret
aaa
imul
or
jo
pop
add
inc
jb
mov
data16
addb
add
dec
add
push
add
mov
adc
sub
int3
sub
xor
sub
sub
sbb
cmpsl
mov
jmp
xchg
mov
mov
sub
cld
xchg
jo
xchg
pop
add
aad
push
add
sbb
test
fsubrs
lea
cltd
test
dec
add
pop
ss
lret
mov
fldt
mov
jno
fld
jl
mov
lock
test
pop
add
add
push
lahf
aas
fstpl
add
or
dec
add
mov
add
sbb
cwtl
aad
mov
push
add
mov
lea
fisttpl
aaa
stos
add
pop
rcrb
add
add
jge
and
add
or
sub
sbb
fcomps
cmp
sahf
ljmp
dec
add
les
add
scas
add
add
add
mov
mov
leave
jnp
add
cmp
dec
add
cmp
ret
insl
notl
aad
call
jo
cwtl
and
mov
add
roll
add
inc
outsb
add
or
push
aas
cli
lcall
lahf
ljmp
inc
add
inc
add
mov
and
or
pushf
add
add
mov
test
add
add
ja
sahf
mov
mov
add
sarb
outsl
data16
mov
movsl
or
pushf
inc
cmp
add
mov
jns
add
mov
add
mov
icebp
add
mov
add
mov
add
add
iret
jmp
dec
add
xor
ffree
out
in
lock
lret
add
and
jno
add
jl
lea
loop
cmpsb
add
add
je
nop
push
dec
dec
iret
shll
add
add
dec
pushf
mov
add
inc
pop
and
add
add
fcoml
add
cmp
add
mov
xchg
loopne
mov
out
xor
mov
cmp
pop
andl
add
xchg
popf
in
aas
mov
jbe
shrb
dec
add
mov
push
add
push
add
rcrb
add
dec
add
cli
push
add
loop
xor
add
pop
add
xchg
push
add
cmp
out
inc
add
or
add
cli
xchg
mov
bound
pop
lret
add
ja
push
add
lds
cli
sahf
pop
hlt
dec
add
notl
pop
add
lea
sub
add
mov
aas
add
add
or
dec
add
mov
shr
jmp
loopne
pop
add
lahf
int
in
pop
add
push
add
add
mov
add
add
bound
mov
add
sub
pop
add
and
rolb
fldl
aam
sbb
and
add
mov
outsl
jl
cwtl
push
add
and
inc
out
add
add
aad
add
filds
push
pop
add
and
ja
in
mov
pusha
add
les
push
out
lret
cltd
pop
aad
and
lock
std
push
add
add
scas
mov
rorl
xor
add
sbbb
inc
add
push
stc
imul
adc
sti
dec
push
xchg
jl
dec
add
add
add
add
addl
jle
es
cmp
xchg
pop
add
add
je
aaa
adc
daa
lea
push
shlb
cmpsl
add
test
jmp
sahf
mov
ljmp
in
sti
xchg
mov
sar
pop
or
andb
jge
ss
lock
cmp
sub
add
data16
push
add
add
imul
aaa
incb
fldl
mov
sub
fwait
jg
mov
rolb
push
add
sbb
push
aaa
cmp
push
ret
add
cmp
loop
int3
and
addr16
mov
cmp
add
xlat
jge
add
imul
xchg
inc
add
add
dec
clc
jnp
cmp
pop
add
add
add
subb
cmp
sbb
push
cmpb
sbb
pop
add
stos
jo
jle
cmp
popf
push
fwait
sub
xchg
inc
sbb
sbb
gs
out
nop
mov
xchg
inc
and
popf
out
pop
add
scas
inc
add
bound
adc
add
push
scas
jns
ljmp
push
loop
mov
push
add
inc
add
sub
adc
aaa
dec
add
inc
push
add
mov
push
add
ss
test
cld
imul
cmp
pop
sub
pushf
jle
clc
data16
sub
xchg
fucomip
sub
adc
mov
cwtl
push
in
mov
push
or
out
cli
adc
add
add
sub
imul
in
add
add
adc
add
hlt
and
in
add
add
xor
add
cmc
lods
cmp
std
dec
sub
jg
cwtl
gs
mov
add
add
inc
add
add
xchg
pop
loope
add
mov
iret
add
jmp
pop
adc
inc
add
lahf
jo
test
fdivr
mov
add
adc
add
popf
xchg
into
dec
add
data16
mov
adc
add
xchg
mov
xor
mov
cmp
add
inc
add
cmp
sub
ljmp
add
scas
add
add
in
push
sbb
cwtl
cli
in
lcall
divb
jne
negl
and
add
add
cwtl
pop
lock
add
dec
int
sahf
mov
add
mov
add
gs
add
mov
ss
add
pusha
add
test
ljmp
xchg
push
imul
jne
jno
add
push
add
add
std
es
add
fadds
adc
icebp
pop
jg
add
es
hlt
pop
outsl
add
and
mov
add
or
and
add
test
inc
and
loopne
dec
add
mov
icebp
and
add
mov
mov
sbb
mov
and
add
xor
add
xchg
std
dec
add
jmp
sbb
inc
xchg
aam
and
add
jne
jmp
add
dec
pop
add
add
loope
aas
mov
add
aas
add
add
add
stc
add
add
jge
pop
add
add
addb
jne
loop
sti
or
dec
add
jne
sbb
add
mov
shrb
xchg
fwait
add
add
jmp
xor
and
add
mov
and
inc
add
lock
push
mov
imul
push
scas
or
fcmovne
psubsw
fwait
jns
add
stc
push
add
and
sub
sahf
repnz
add
loop
mov
mov
add
adc
add
shrl
mov
add
loopne
je
mov
add
xchg
sarb
sub
push
icebp
nop
mov
add
sub
into
xchg
lods
testb
stos
fiaddl
cmp
ds
ss
add
add
mov
sub
imul
pop
add
add
xchg
loope
test
add
add
add
dec
mov
push
or
xlat
lock
add
add
pushf
jae
out
mov
fwait
add
icebp
adc
add
push
add
lahf
push
shrb
sub
pop
add
stos
push
add
inc
add
aas
adc
dec
mov
add
aas
add
rcrb
call
fistps
add
xor
bound
mov
mov
add
push
add
popf
cmc
push
push
add
add
repnz
add
add
add
ffreep
addr16
sbb
out
rol
loop
add
int
add
nop
inc
add
cmp
add
ljmp
xchg
test
pop
add
xchg
add
pop
add
pop
add
add
inc
add
ja
push
flds
mov
add
mov
stc
and
jnp
movsb
add
adc
add
icebp
sbb
add
or
cmp
arpl
dec
push
add
sub
sub
jg
cwtl
pop
into
xchg
sub
add
xchg
pop
add
push
add
mov
aam
mov
mov
pop
add
adc
add
iret
mov
sub
add
sbb
scas
mov
jmp
xor
jae
popf
xchg
pop
add
sbb
cmp
add
inc
stos
fs
and
call
add
fstps
add
add
and
cmp
fldt
mov
enter
pop
xchg
sahf
sub
iret
add
cmp
sbb
push
jb
inc
jne
cmp
pop
ds
repnz
add
push
pop
out
add
jg
add
push
xor
data16
arpl
test
add
adc
add
add
in
pop
add
push
add
add
xlat
daa
int
or
add
push
add
scas
add
addb
inc
add
lcall
test
adc
insb
add
push
xor
add
add
xor
pop
jo
lahf
fstl
out
lds
or
fst
dec
sahf
je
les
aam
push
imul
cmpsl
mov
xor
add
add
xlat
test
add
pop
add
inc
add
push
add
xchg
mov
js
inc
add
aad
push
add
fwait
sbb
inc
cwtl
sarl
pop
pop
add
add
sbbl
mov
fildl
push
arpl
jg
dec
xor
popf
das
sbb
out
aam
add
cmp
add
ja
jle
fcmovbe
jmp
cmp
mov
add
dec
cmpsl
mov
jg
stos
scas
xchg
test
add
mov
push
add
ja
movl
test
pop
adc
ja
jb
js
xlat
push
add
cmp
add
mov
mov
mov
add
pop
cltd
pop
lods
mov
dec
in
out
jmp
rcrb
add
add
add
jp
jp
cmp
in
xor
add
push
loope
xchg
sbb
add
fidivs
or
and
xor
or
mov
adc
mov
lds
mov
movsl
add
hlt
pop
insb
add
add
add
lock
fwait
add
cmp
insl
xchg
jno
add
mov
add
or
and
daa
out
add
ja
push
pop
add
xor
add
hlt
jbe
fdivrl
sbb
jl
dec
movsl
add
dec
pop
imul
scas
pop
sbb
xchg
js
or
sbb
loop
aad
mov
jp
jnp
add
out
notl
fldl
push
iret
sbb
sub
add
add
add
popa
push
add
pop
add
add
in
cmp
jb
ja
add
add
add
add
xchg
in
jle
add
pop
add
dec
add
cmpsl
sub
mov
imul
add
repnz
add
sbb
mov
cltd
es
add
cmpsb
add
add
add
mov
mov
add
loop
cmpsb
sti
adc
fstl
jno
mov
add
loope
insl
dec
add
add
fdivr
jo
fstl
pop
add
xor
add
push
add
ret
outsb
add
scas
icebp
in
pop
add
add
leave
pop
add
js
ret
dec
popf
popf
test
mov
ja
mov
lret
cmp
cmc
sarb
cmp
pushf
filds
jge
cmp
addb
sub
jle
dec
add
pop
mov
jmp
fidivrs
add
cmp
dec
cmp
jo
cmp
shlb
add
xor
adc
cmpsl
xor
pop
stos
les
and
add
add
testb
imul
add
dec
ret
xchg
arpl
mov
add
cmc
mov
and
add
pop
mov
les
add
add
push
xchg
push
add
ret
cmpsl
add
ds
loop
scas
jns
add
add
dec
add
clc
lahf
negl
pop
and
mov
bound
lcall
mov
dec
add
and
add
sub
fldt
xchg
jnp
ljmp
sbb
inc
pop
jns
aad
arpl
dec
add
adc
add
jns
cwtl
and
push
lret
add
cmpsb
scas
cmc
cli
push
insl
into
lret
mov
fwait
jl
insb
add
insl
mov
mov
lock
loopne
add
add
push
add
add
fnsave
hlt
jl
or
mov
pop
clc
add
pop
add
shll
push
add
fldl
sub
adc
add
add
xchg
insb
add
or
lods
inc
add
add
negb
add
xchg
inc
in
dec
mov
add
fiaddl
pop
adcl
aam
inc
add
mov
push
hlt
pop
aad
scas
popa
jo
pop
add
add
mov
icebp
sub
movb
data16
mov
cmp
out
cmp
xor
add
add
sbb
hlt
dec
add
or
inc
add
jb
adc
nop
shll
cmc
in
push
add
push
add
je
dec
add
dec
movsb
inc
add
add
sti
outsb
add
orb
sti
stos
cmp
je
cs
fisttps
add
sbb
inc
add
pop
addl
add
push
cmp
jne
xchg
out
popf
xchg
or
pop
adc
add
add
jae
fcoml
add
xor
xchg
and
xchg
shlb
mov
sti
fisubs
push
imul
movsl
add
add
mov
imul
add
add
add
pop
add
fs
testl
lock
movl
test
cmp
dec
pop
add
mov
add
test
ljmp
enter
adc
add
add
into
sarl
pop
icebp
hlt
lret
icebp
push
add
push
in
inc
add
add
dec
xchg
jecxz
cmpsb
aad
popf
ret
fsubrl
sub
add
jg
add
mov
add
add
sub
add
xor
shlb
add
test
repnz
add
sub
repz
pop
jnp
add
and
add
dec
add
jb
jb
addr16
scas
dec
add
push
add
xor
jecxz
imul
mov
mov
mov
fnstenv
sbb
mov
fwait
dec
add
jmp
lea
cmc
add
dec
aad
in
dec
add
mov
outsb
add
adcl
in
sbb
imul
add
icebp
in
in
add
sbb
ja
add
add
pop
loop
jbe
dec
add
add
scas
lret
out
inc
add
dec
lret
xchg
pop
cmp
ss
add
cmpl
sub
pop
and
dec
add
push
add
cmpsl
rolb
adc
add
incl
xor
add
nop
add
sub
or
cmp
mov
jmp
jl
add
add
dec
add
jecxz
or
shlb
cmp
pushf
ret
outsl
les
jecxz
or
dec
mov
sub
add
add
out
add
xor
sub
jns
add
pushf
or
mov
loope
xor
add
test
sbb
push
and
inc
fs
add
add
pop
add
or
sub
and
or
loop
add
cmc
xchg
rcrb
add
add
push
and
daa
push
add
xor
add
mov
add
arpl
lods
fnsave
add
scas
gs
xchg
cmp
cwtl
push
add
pop
repnz
or
xor
repnz
add
xchg
cmpsl
cmp
outsl
and
xchg
lcall
out
jne
lret
sbb
cmp
mov
lcall
add
mov
jns
pop
pop
pusha
add
leave
add
mov
sarl
int
add
lods
mov
mov
push
add
mov
pop
add
push
add
adc
add
add
addb
jb
jne
pop
add
mov
jl
push
add
add
ret
cltd
cld
and
enter
sub
scas
sub
xor
add
pop
add
add
test
dec
add
pop
add
xchg
sahf
hlt
ljmp
add
repnz
sub
jp
inc
pop
movsl
add
and
add
cmp
push
mov
mov
outsl
jecxz
add
stc
pop
inc
add
add
arpl
ljmp
in
sub
sub
jnp
dec
or
jecxz
stos
aad
sub
jbe
push
add
add
inc
add
and
lock
add
roll
aad
add
lds
int3
mov
movsl
popa
push
arpl
push
call
cli
mov
ljmp
add
add
add
mov
aas
add
aas
add
jmp
add
add
rcrb
pushf
jle
adc
mov
das
add
inc
add
adc
cltd
xchg
js
das
jnp
jb
insb
add
add
inc
add
pop
add
out
add
jmp
add
sbb
mov
fwait
add
lock
add
rcl
ljmp
add
mov
add
add
ja
mov
pushf
inc
mov
enter
xchg
sahf
loop
add
add
out
add
nop
cmp
dec
add
add
testl
ficoml
jno
outsl
adcb
add
mov
dec
add
loopne
aam
out
pop
jp
push
inc
jb
mov
pop
add
mov
push
or
add
push
add
add
cmp
push
add
add
add
cltd
mov
and
jne
daa
add
test
add
fldl
sub
mov
add
enter
adc
aad
mov
xlat
xchg
jo
mov
dec
add
mov
icebp
push
add
cld
cmp
cmp
mov
add
push
add
pop
loopne
mov
aam
imul
mov
imul
add
xor
push
ja
mov
loopne
pop
movsb
add
or
cwtl
imul
outsl
shl
movsl
lods
js
dec
popf
mov
jb
aad
js
bound
add
push
add
lds
xor
add
insb
add
jmp
mov
xchg
cmpsl
mov
scas
movsl
mov
out
add
jno
movb
sahf
xchg
mov
xchg
add
test
add
pop
lea
out
xor
add
add
add
movsl
imul
outsb
add
add
sbb
shrb
add
add
cltd
mov
cmp
sub
add
and
addl
add
int3
movl
xchg
int
test
cmp
enter
ret
aaa
icebp
add
dec
add
sbb
xor
pop
adc
lret
stos
add
jno
jnp
out
decl
icebp
inc
add
call
xor
add
add
xchg
inc
add
add
add
jbe
or
fwait
jbe
jbe
xlat
fldz
inc
add
xor
add
mov
stos
jns
insl
insl
in
inc
nop
mov
add
ret
jbe
pop
add
dec
add
mov
or
push
jmp
xor
inc
popa
mov
cmpl
add
jo
mov
test
add
insl
mov
popf
cmpsb
hlt
je
mov
sbbl
popa
stos
push
add
ss
pop
xor
cmpsl
sbb
lahf
xor
add
add
pop
cld
add
xchg
cli
stos
fisubrs
add
add
add
add
in
shrb
add
dec
add
inc
dec
es
add
mov
xchg
add
popa
mov
sbb
cmp
lods
adc
arpl
inc
add
lret
mov
mov
scas
add
add
xchg
verr
add
and
cli
inc
add
xorl
sbb
add
sar
imul
cmp
lods
iret
lods
sbb
outsl
test
add
add
sub
jnp
or
xchg
lea
and
repz
lock
mov
aam
mov
add
insb
add
cmp
mov
push
add
movsb
add
fldenv
add
jg
sbb
mov
add
jmp
lock
mov
push
add
insb
add
inc
dec
sbb
test
inc
pop
and
das
push
xchg
iret
mov
xchg
push
insl
add
and
mov
mov
add
fnstsw
inc
add
dec
pop
add
mov
ss
testb
add
add
mov
jmp
sub
rcl
xor
add
mov
push
add
ja
cmc
push
add
loopne
add
leave
jle
dec
aaa
mov
add
sbb
push
add
add
dec
add
mov
xor
inc
add
mov
jg
jnp
add
and
xchg
add
popf
mov
fnstenv
outsl
adc
dec
add
cmp
sbb
add
addl
add
nop
jo
inc
mov
mov
aas
sbb
nop
or
pop
add
ja
and
add
mov
jns
int3
add
sbb
cmpsb
fstpl
add
cwtl
add
add
adc
cltd
pop
je
ficompl
add
push
lahf
add
pop
add
sub
xchg
adc
dec
and
add
aad
call
and
add
and
jmp
xor
add
js
dec
add
pop
and
xchg
add
pop
dec
add
mov
add
pop
mov
lcall
jnp
add
add
add
add
add
xchg
sub
add
sbb
inc
add
jmp
outsb
add
cmpsb
mov
shlb
add
ret
icebp
xchg
sbb
addl
pop
jo
dec
add
mov
bound
loop
dec
mov
iret
pop
add
add
add
into
add
cmpsl
pop
add
xlat
push
add
sub
or
pop
dec
add
add
dec
fcompp
cmp
cli
sub
es
cli
pop
add
push
add
add
add
jnp
das
dec
xchg
mov
add
pop
add
mov
and
xor
add
movsb
cmp
xor
add
sub
mov
sub
cmp
jne
dec
add
test
testb
add
test
jle
icebp
push
add
add
jge
pusha
add
jbe
lret
xor
xor
add
add
or
add
inc
popf
inc
add
in
pop
rolb
ret
and
jae
xchg
test
test
adc
test
add
mov
add
add
pop
cmp
mov
add
xor
add
adcl
xchg
mov
add
adc
inc
add
xchg
add
add
stos
dec
fnstsw
cmp
lds
and
or
flds
stos
test
add
add
mov
mov
into
cmp
sub
or
sub
sarb
movsb
lds
repz
push
jae
sti
aam
mov
repnz
pop
add
rol
loop
sbb
jno
outsb
add
add
popf
movsb
adc
add
add
jmp
sub
jp
xlat
push
lret
outsl
cmp
add
add
pop
xchg
and
xchg
sub
xor
sub
sti
push
add
and
scas
pop
arpl
mov
out
and
add
add
sbb
adc
add
mov
cmp
push
add
mov
add
js
lock
push
push
inc
add
sti
lcall
push
addl
push
add
add
mov
add
movsb
push
js
pop
xchg
add
add
mov
pushf
xchg
es
add
xchg
fisubrl
jmp
mov
jnp
add
es
add
add
int3
sub
ret
or
nop
shll
add
das
sub
mov
jmp
mov
mov
mov
push
add
shlb
pop
add
or
add
fbld
js
sub
and
and
add
addl
xchg
testl
and
lods
ret
and
add
push
add
add
add
mov
lods
ja
mov
rorb
add
pop
aam
jle
shrb
sahf
and
dec
add
outsb
add
push
dec
add
out
aad
add
fmul
mov
push
add
inc
add
mov
lret
add
push
add
and
add
mov
push
add
jecxz
sbb
sub
lret
mov
ficomps
stos
jge
and
lret
push
xchg
data16
pop
sbb
ds
lret
and
add
insl
add
adcl
jl
orl
leave
inc
gs
je
in
inc
repnz
lahf
mov
jno
loope
mov
jp
jge
add
push
add
xchg
stos
push
adc
add
in
incl
add
pop
add
mov
scas
add
bound
add
mov
xlat
or
insb
add
push
add
ljmp
add
jg
jmp
add
das
outsb
add
popf
push
add
add
lret
sub
fldl
into
movsb
adc
das
cld
sub
aas
dec
jno
mov
scas
jns
sub
adc
out
out
pop
add
jns
sub
pop
add
add
inc
cmpsb
mov
adc
sub
xchg
cld
xchg
icebp
push
sub
jno
add
push
pop
add
cmp
jnp
cld
cmp
add
pop
add
aad
inc
ficoms
or
push
mov
or
out
mov
lock
pushf
das
ja
sub
or
popa
dec
jne
push
add
jmp
mov
fnstsw
add
icebp
and
add
fwait
add
pop
push
add
cmc
mov
das
dec
add
adc
mov
lock
scas
lcall
add
sahf
add
in
stos
pop
out
loopne
jecxz
and
add
jbe
outsl
popa
sbb
sub
jmp
push
add
add
add
mov
add
cwtl
mov
or
xlat
xorb
add
imul
inc
add
cmp
int
push
sub
add
mov
les
pop
dec
cmp
and
push
add
and
cmp
out
add
dec
add
inc
add
iret
cmp
mov
out
fldcw
cmp
aaa
xlat
add
mov
jmp
push
xor
add
xchg
and
pushl
stos
add
mov
add
lods
sub
sub
test
test
ljmp
xchg
les
push
adc
add
xor
sbb
loope
mov
sarb
addr16
add
mov
test
xchg
lahf
or
leave
pusha
add
add
mov
lcall
pop
sub
stc
jl
jecxz
add
loope
fwait
xor
add
stc
filds
mov
test
dec
add
add
add
jb
pop
inc
add
sarb
add
mov
add
sbb
sarl
add
add
test
call
movsl
add
jns
in
push
and
add
inc
add
cmp
test
arpl
jae
mov
stc
aaa
lds
orl
sbb
jno
add
cs
or
aad
push
xorb
cwtl
call
pop
rep
add
push
add
add
mov
jecxz
add
add
add
popa
or
or
add
add
cmp
out
jne
add
xor
pop
rol
test
call
loop
add
dec
add
pop
add
sti
icebp
pop
add
add
loopne
aad
add
push
add
push
lds
add
sbb
mov
mov
sbb
mov
ljmp
add
add
hlt
pop
add
add
ror
or
mov
and
dec
add
inc
inc
lea
rorb
mov
add
incl
push
lret
mov
pop
add
inc
add
mov
add
addr16
add
pop
add
push
scas
ja
ret
insb
add
xchg
aaa
mov
push
add
pushf
int
add
mov
xor
add
movb
add
add
or
mov
mov
pop
add
jl
js
out
test
pop
add
pusha
add
inc
add
add
out
inc
add
sahf
and
add
xor
jnp
ss
add
add
mov
jb
in
fwait
push
add
lcall
lcall
fisttps
ret
inc
adc
add
adc
add
jecxz
sub
xchg
ret
cltd
movsb
bound
sub
xor
jae
repnz
add
loopne
pop
add
faddl
enter
xor
push
mov
add
loope
or
int
fldl
sbb
xchg
sub
jnp
cs
or
push
add
inc
add
jle
push
add
out
cld
and
add
add
add
daa
add
push
mov
mov
add
in
dec
add
clc
shll
gs
adc
add
or
arpl
xchg
mov
mov
xchg
and
add
mov
pusha
add
sub
adc
aaa
in
add
mov
into
jecxz
mov
dec
add
cli
cmpsb
andl
data16
or
push
lahf
rcl
gs
add
add
outsb
add
stc
lcall
adc
add
xor
add
adc
add
xchg
add
arpl
int
stos
push
in
lods
cwtl
inc
add
cmp
scas
enter
scas
push
lds
fidivrs
dec
hlt
dec
add
inc
add
movsl
add
mov
xchg
out
popf
add
xor
xlat
xor
fmul
mov
add
mull
jecxz
xchg
sahf
add
add
mov
add
ds
mov
add
jecxz
out
xor
mov
jg
insb
add
add
out
cmp
add
add
ljmp
int
mov
mov
bound
nop
out
pop
add
inc
add
mov
loope
mov
add
add
sbb
pop
add
add
add
dec
sub
dec
add
add
sbb
mov
dec
add
add
icebp
mov
dec
add
cmp
testl
mov
push
add
roll
movl
add
data16
pop
add
add
adc
and
fwait
pop
add
xchg
lcall
lods
jp
stc
or
dec
add
add
aad
xchg
jbe
cmp
adc
pop
call
popa
add
add
test
mov
pusha
add
sbb
cmp
es
and
add
sti
add
mov
dec
add
or
jl
jge
mov
sub
fbstp
repnz
adc
add
or
add
pop
add
mov
lahf
add
push
add
shlb
fcomp
mov
inc
cmpsl
lret
sub
mov
jnp
dec
add
or
inc
iret
add
xchg
repnz
mul
xor
cmp
inc
add
shr
lret
adc
mov
into
sahf
das
inc
cmp
cwtl
mov
testb
incl
xchg
negb
add
add
mov
sbb
add
add
add
sbb
add
cmpsl
orb
add
add
lds
cmp
pop
add
movsb
add
mov
add
movb
add
add
jbe
pop
pop
add
push
add
fmul
cmp
repz
add
xor
nop
xor
add
loop
rcl
adc
jmp
add
and
add
mov
add
add
adc
sarb
add
in
add
mov
xor
cwtl
lret
dec
adc
add
pop
mov
sldt
xchg
fucom
cli
add
inc
add
les
call
aad
push
xchg
add
syscall
xchg
add
dec
add
daa
test
jge
dec
add
mov
add
add
aam
cmc
adc
mov
enter
add
call
mov
jge
rorb
sub
jl
jo
mov
add
xor
in
xor
xchg
lods
xchg
xchg
aad
add
stos
add
fidivrs
cmc
adc
or
clc
sub
js
jmp
mov
xchg
cmp
xchg
fs
nop
gs
ja
add
jle
repz
add
rorl
sub
pop
test
cvtdq2ps
add
in
add
add
add
faddl
mov
xor
add
sub
sti
jg
testb
or
jne
fcmovnu
sub
cmpb
cmpsl
loopne
insb
add
push
add
add
stos
popf
pop
add
movsl
jp
cmp
dec
add
mov
add
add
js
pushf
lock
add
mov
add
xor
add
add
add
add
xor
add
scas
add
arpl
inc
sub
cmp
or
int
roll
mov
daa
xchg
imulb
add
add
jb
repnz
mov
sub
je
scas
stos
scas
sub
inc
add
xchg
fwait
leave
or
lahf
sarb
stos
dec
add
mov
sub
mov
add
cwtl
rcr
inc
jmp
and
out
xchg
dec
add
and
add
add
popf
insb
add
xor
iret
out
test
cmp
xchg
xchg
push
pushf
int3
cli
add
xlat
sbb
mov
sub
sbb
inc
les
add
fisubs
dec
add
dec
add
cmpsl
cmp
repz
jbe
xchg
mov
mov
cli
data16
xor
add
add
adc
add
lods
add
mov
out
push
add
pop
add
add
fildl
test
mov
add
pop
add
cwtl
add
repnz
out
xlat
jne
into
add
xlat
add
add
push
add
or
loopne
iret
push
or
inc
add
sub
cmp
lea
cld
scas
das
in
std
dec
add
add
sbb
mov
aad
add
or
sub
add
outsl
aas
pop
fs
stos
sub
push
add
or
push
mov
add
popa
add
adc
add
movsl
mov
cmpsb
out
push
movb
adc
pop
mov
sub
pop
add
int
mov
lea
add
sarl
pop
inc
add
push
sbb
add
call
push
outsb
add
sub
add
add
add
and
add
nop
xor
jae
add
xor
jmp
sbb
dec
add
cmp
iret
adc
mov
push
jle
lea
into
test
add
adc
dec
add
xchg
add
xchg
adc
adc
add
stos
xor
add
sbb
mov
mov
dec
add
rolb
sbb
adc
pop
add
add
pushf
std
sbbl
jg
add
pop
add
jecxz
cltd
in
xorb
jne
mov
add
dec
imul
shll
inc
add
mov
xchg
out
add
ret
jae
push
mov
addb
cmp
dec
add
pop
add
call
pop
xchg
sbb
arpl
and
pop
or
push
add
jb
jne
xchg
and
mov
xchg
push
add
lods
decb
inc
push
rclb
add
xchg
mov
xchg
sub
sbb
pop
add
cltd
jecxz
cmp
into
sbb
cmp
push
add
data16
fcomps
cmp
push
add
add
add
add
jmp
aad
pop
add
push
add
fs
and
stos
inc
pand
add
add
fwait
out
movsl
mov
or
in
inc
add
and
jmp
stos
add
add
negb
add
jb
mov
add
test
jae
lahf
cmpsl
push
add
add
hlt
arpl
add
pop
test
ss
int3
loop
add
cmpsl
pop
lret
xor
add
xor
mov
dec
add
in
add
or
stc
add
add
add
ss
add
pop
movb
add
pop
add
sarl
aad
add
xchg
dec
push
insb
add
cmpsl
xchg
test
pop
add
stos
adc
add
cwtl
add
loope
inc
add
add
mov
add
inc
add
add
leave
dec
add
stc
push
lret
add
add
xor
add
hlt
sahf
popf
test
xor
add
jbe
push
jbe
fldl
inc
add
mov
iret
xor
mov
out
mov
negl
fildl
not
cmp
cmp
cld
rcll
mov
sbb
pop
add
insl
lret
xor
add
jno
and
add
repz
mov
cmp
or
cmp
add
mov
cli
dec
add
add
add
jae
pop
pop
mov
lret
dec
add
add
add
add
add
push
add
sbb
dec
add
int
add
cmp
and
add
xchg
add
add
inc
xchg
xchg
sub
sbb
dec
xchg
cwtl
push
add
push
jbe
iret
sbb
mov
cmp
add
js
sete
add
insb
add
into
xor
add
add
movb
jnp
jbe
jb
and
add
cmp
dec
pushf
cmp
push
add
lds
fcomi
inc
add
scas
lock
and
jbe
mov
xor
cmp
clc
jecxz
outsb
add
ret
inc
sub
add
loope
hlt
and
add
xor
int3
xchg
and
add
test
int3
add
add
lock
lcall
adc
add
dec
add
repnz
xchg
lods
fdivl
arpl
xor
add
or
nop
scas
je
push
add
add
ret
add
add
jp
bnd
adc
push
cwtl
sub
int3
stos
push
scas
pop
lock
add
arpl
test
push
add
addl
sbb
movsl
out
test
inc
add
js
pop
push
lea
add
and
add
push
add
xchg
xchg
add
add
loopne
sbbl
xchg
int3
cld
les
add
add
add
add
adc
add
outsb
add
fsubrs
push
lret
jle
aaa
xchg
add
jne
push
add
cmp
dec
mul
bound
inc
add
inc
add
jne
sub
stos
adc
js
movsl
repz
fadds
ljmp
add
clc
mov
pushf
push
add
mov
dec
add
push
add
add
sub
add
add
dec
inc
add
loop
pushf
sub
add
mov
add
push
pop
repnz
add
mov
shl
sub
add
mov
mov
nop
add
add
roll
or
add
push
inc
add
add
xor
dec
aam
push
add
push
xor
and
add
sub
mov
add
add
xchg
push
cmpsl
jl
dec
add
add
jmp
iret
ds
xor
fnstenv
jecxz
add
pop
ret
add
mov
mov
roll
push
add
fmul
cmp
or
fdivl
lock
inc
xchg
add
repz
sbb
in
ljmp
add
add
jp
cmc
dec
add
popf
add
leave
adcb
jbe
sahf
imul
add
push
rolb
dec
add
add
pop
add
mov
xchg
imul
mov
add
arpl
add
add
lock
sub
add
aaa
xor
adc
add
pop
add
stc
mov
cmpl
and
inc
enter
push
or
cld
sbb
cwtl
push
testl
ret
add
lock
add
pop
add
pop
add
add
xor
add
popa
mov
add
int
ret
xor
add
sbb
add
popa
mov
call
verr
jns
addr16
sti
add
add
add
mov
insl
pop
jne
scas
hlt
xor
ret
add
add
arpl
ljmp
pushf
hlt
repz
add
cld
add
push
add
insl
dec
add
hlt
pop
bound
mov
in
pop
inc
push
pop
sti
add
shl
out
mov
movsl
test
sbb
lret
mov
sub
mov
stos
push
iret
add
cmp
divl
pop
add
cmp
jp
nop
cmpsl
daa
jno
push
lahf
xor
add
cmp
pop
add
fs
push
bound
idiv
mov
ret
out
pop
mov
mov
add
jge
push
add
shlb
cli
xor
inc
add
sbb
add
add
push
test
jb
lcall
cmpsl
add
cmc
add
add
adc
add
add
imul
add
sbb
call
ss
test
jge
xor
add
and
add
sbb
jl
dec
daa
xor
sbb
mov
xor
xor
add
add
orb
js
aas
mov
test
addb
add
mov
add
roll
loop
mov
hlt
icebp
add
or
addr16
push
pop
add
out
adc
add
cmpsl
pop
add
leave
add
loope
xchg
pop
add
fldl
push
ret
dec
mov
testl
and
xchg
pmullw
add
add
add
shll
or
hlt
inc
add
push
movsb
jne
nop
movsb
xchg
adc
addr16
js
pop
push
add
xchg
fxch
sub
add
pop
add
add
jecxz
cmp
jbe
mov
jo
mov
add
mov
insl
xor
add
int3
cld
xor
dec
add
mov
push
rol
mov
sub
sbb
add
out
add
cmc
repz
add
push
add
in
mov
add
std
shll
push
add
inc
push
out
add
push
add
push
test
fwait
lahf
icebp
xor
add
imul
lds
in
cmp
and
or
out
adc
or
aam
xchg
cld
jmp
std
jae
dec
add
sbb
popf
std
and
add
add
xor
add
dec
mov
add
add
and
add
add
jge
in
in
jns
or
push
add
add
ret
iret
push
cld
push
add
xchg
outsb
add
sahf
dec
inc
cld
and
add
mov
add
add
nop
movl
in
inc
icebp
repz
add
add
shrb
add
inc
add
and
adc
add
and
add
lds
in
aad
aam
cld
leave
jp
or
add
dec
cld
mov
fimuls
js
sahf
test
add
lret
aad
pop
xchg
fldenv
add
pop
add
jb
push
jecxz
or
mov
cwtl
add
fidivl
add
sub
add
mov
add
lret
addb
pop
push
add
add
lret
dec
addr16
add
sar
imul
mov
mov
fildl
add
data16
xor
repz
fisttpl
add
add
adc
and
sbb
popf
jecxz
cld
pop
add
xor
add
add
push
adc
inc
add
add
in
or
call
aam
out
mov
xor
std
out
out
add
repz
xchg
out
dec
add
out
scas
add
add
sbb
dec
outsb
add
add
ljmp
movsb
fyl2xp1
or
or
jmp
push
add
jnp
sbb
out
cmc
mov
and
add
cmp
imul
dec
add
xchg
mov
inc
add
adc
sti
mov
sbb
lret
add
and
jno
cmp
leave
hlt
pushf
push
or
jns
jmp
mov
mov
cmp
inc
add
push
lss
mov
fwait
and
dec
lret
in
