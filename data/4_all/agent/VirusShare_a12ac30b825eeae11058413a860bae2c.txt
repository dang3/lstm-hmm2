jne
pop
add
add
or
jne
pop
add
add
add
add
notl
mov
rorb
fwait
xchg
dec
es
imul
jae
xor
push
add
insb
push
sti
mov
push
ffree
or
insl
pushf
mov
add
mov
test
jle
mov
hlt
mov
xor
arpl
and
or
pusha
out
mov
sbb
jg
and
pop
ror
sub
adc
sahf
and
push
push
lcall
cmp
dec
adc
ret
mov
xchg
cwtl
fiadds
into
xchg
aam
mov
aad
stc
xor
xchg
repnz
daa
adc
jg
repz
xor
fisttpl
and
pop
rol
jmp
imul
test
sub
insb
inc
mov
addr16
fiadds
shrl
hlt
daa
ret
dec
sbb
pop
adc
cmovg
sub
and
add
or
dec
inc
ficoml
rcrl
and
adc
insl
jns
pop
pop
scas
cwtl
in
xchg
mov
or
pop
hlt
inc
in
dec
popa
xchg
lret
mov
pop
frstor
xchg
sbb
mov
pop
cli
mov
sub
mov
xor
xor
aas
push
imul
cmp
lods
sub
cmp
dec
inc
dec
jp
icebp
lret
or
call
test
int
jge
dec
ss
and
testl
dec
int3
add
sarb
cltd
adc
sbb
add
mov
add
fcoml
jecxz
mov
icebp
bound
cwtl
xchg
mov
inc
rcll
imul
jle
and
push
sub
pop
mov
sub
jbe
rorb
inc
xchg
ljmp
out
stc
loopne
xchg
jns
scas
push
dec
dec
mov
ret
imul
fbstp
icebp
mov
movsl
icebp
sub
ret
jno
push
cmp
pop
aaa
shlb
mov
adc
inc
mov
inc
or
aas
mov
test
add
and
fistps
insl
mov
sarl
aad
adc
xlat
xchg
popf
inc
adc
test
int3
cmpsb
mov
pop
and
loopne
out
jle
call
cli
pushf
jns
pop
test
push
and
aaa
je
aaa
pop
add
adc
and
hlt
iret
xor
test
out
sbbl
jne
mov
cltd
nop
cld
xchg
lock
push
xchg
jno
ret
mulb
movsl
ja
cmp
int
mov
and
ss
ret
movsb
sbb
scas
or
xchg
in
fdivrp
bound
adc
imul
js
call
sub
out
imull
js
aam
push
push
pop
xchg
cmp
sub
adc
stos
sub
loopne
or
in
addr16
lret
data16
jnp
imul
pop
cmp
cli
xor
push
popa
mov
ljmp
imul
or
es
add
mov
jmp
mov
ljmp
cmpsb
outsb
dec
inc
loopne
mov
adcl
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
jo
cwtl
pop
ja
aad
or
cmpsl
adc
je
dec
add
stc
add
push
testb
mov
jns
scas
ret
hlt
pop
insl
jne
dec
mov
jb
out
mov
cmp
js
or
inc
push
and
ret
fisubl
mov
add
push
mov
out
cmp
xchg
out
xchg
sti
lret
xchg
push
aad
xchg
ret
jmp
dec
hlt
push
arpl
adc
sub
cmp
mov
and
mov
out
and
mov
fucomp
mov
or
adc
rcll
add
inc
dec
jl
xor
add
sbb
jno
sbb
pop
jae
pop
push
or
and
and
sbb
cld
popa
loop
das
cwtl
dec
cs
or
lods
nop
movsl
lods
shl
push
mov
inc
test
ss
rclb
icebp
shrl
mov
ret
mov
push
movsl
jns
jmp
ret
popf
jp
cmpsl
cmp
frstor
xchg
ret
notb
ret
xchg
sub
cmp
mov
mov
adc
jle
shrl
out
xchg
pop
sar
loop
jg
adc
mov
scas
mov
mov
sarb
cmp
fistl
daa
and
js
lods
das
mov
xchg
xchg
mov
push
mov
sbb
mov
mov
in
aad
push
jmp
nop
jp
test
roll
ljmp
push
cwtl
cmc
xor
add
in
out
nop
ss
repnz
je
jnp
dec
mov
or
jns
add
sub
mov
in
mov
dec
xchg
sbb
inc
adc
mov
adc
adc
loop
sub
cmpsl
inc
icebp
jns
sub
cld
dec
dec
or
jne
rcl
jmp
sbbl
sub
cmp
cmpsl
cwtl
mov
ret
es
stc
in
loop
fnstenv
and
stos
les
and
jp
xorb
push
cwtl
xchg
pop
test
dec
xor
xor
pop
mov
lret
mov
or
sbb
jnp
mov
jmp
notb
dec
push
outsl
popf
xchg
ja
inc
pop
pop
mov
lahf
ret
jo
out
add
mov
inc
mov
fsubr
icebp
cmp
cld
sbb
sbb
or
pusha
adc
sbb
mov
dec
mov
pushf
mov
or
mov
inc
mov
cmpsb
pop
xchg
adc
pop
mov
mov
sahf
xor
xor
sbb
dec
sahf
jecxz
outsb
mov
jmp
std
sbb
decb
xchg
lcall
clc
mov
adc
adc
jecxz
push
pop
les
out
cmpsb
in
and
adc
imul
xor
aam
and
scas
cltd
fistpll
mov
push
sub
in
mov
leave
push
push
fidivl
int3
push
push
call
or
hlt
mov
std
jb
dec
lcall
aas
jl
cmp
call
loope
ja
cs
popa
push
cmpsb
lea
shlb
push
mov
adc
subb
push
lods
outsl
jno
test
outsl
mov
dec
jo
push
lock
scas
jne
sarb
cmp
incb
push
sub
fsubrs
testb
or
call
lret
xor
or
sub
test
cmc
mov
icebp
sub
roll
push
mov
mov
xor
addr16
stos
hlt
dec
pop
mov
loop
gs
mov
orb
jp
in
push
fnsave
pop
movsl
add
pusha
xlat
repnz
ss
shrb
aaa
clc
push
push
jmp
test
xor
xchg
xor
push
testb
andb
enter
lret
pop
xchg
fiadds
sub
imul
outsl
mov
ja
mov
imul
adc
mov
or
dec
mov
or
pop
sbb
int
inc
sub
inc
xor
pop
add
xor
jmp
pushf
sbb
sub
jae
push
xorb
hlt
mov
movsl
inc
dec
cmpsl
lods
ss
es
sub
dec
xlat
xor
jnp
dec
and
or
sbb
out
xor
out
stos
negb
incl
enter
scas
movsl
lods
dec
sbb
rep
insb
sub
and
xor
icebp
addl
mov
cmp
push
mov
lods
loope
negl
cwtl
xor
daa
dec
in
mov
repz
cmc
lock
clc
fcoms
inc
dec
out
pop
popf
inc
gs
test
jae
divb
cmpb
addl
dec
mov
fisubl
pop
dec
mov
push
mov
pop
fwait
mov
lods
mov
es
mov
repz
dec
push
pop
popa
leave
rclb
int3
test
xchg
push
sub
push
add
data16
jmp
xor
sahf
adcl
stc
mov
aam
sahf
dec
lret
enter
add
popa
pop
icebp
adc
inc
test
push
sahf
fidivrs
dec
dec
repz
outsl
lods
adc
sub
js
pop
pop
xlat
lods
repnz
add
xor
jge
daa
out
cmpsl
nop
and
stos
cmp
repnz
cwtl
dec
cmp
xchg
or
and
mov
loop
les
sahf
pusha
leave
pop
and
sbb
ljmp
sbb
mov
fs
inc
and
popf
jmp
leave
add
push
xchg
je
jecxz
sahf
add
jb
push
adc
jo
rclb
enter
lcall
out
mov
out
test
clc
popa
sbb
cmp
ja
dec
mov
pop
sub
add
cwtl
les
pop
mov
jl
xchg
insl
sahf
mov
sub
fldcw
rep
mov
into
jg
iret
aas
dec
xor
imul
mov
std
jp
ljmp
in
rorl
mov
add
mov
mov
out
mov
xchg
out
movsb
mov
sahf
pop
cltd
jb
insb
xor
and
dec
push
add
lcall
imul
mov
sbb
sub
pop
shrl
movb
test
mov
jg
cs
push
mov
or
cmc
and
cmpsb
inc
call
add
xor
xchg
lcall
inc
std
sub
insl
push
addr16
es
loop
push
pop
iret
into
popa
push
out
mov
jg
push
loope
sub
jnp
icebp
mov
inc
xchg
das
pop
jne
xchg
enter
adc
pop
movsb
push
push
push
scas
xor
test
sbb
aam
jnp
mov
or
call
push
sub
mov
cmp
test
es
dec
and
loop
xor
stos
pop
push
lahf
jae
shrb
lahf
cmp
or
nop
flds
test
mov
scas
mov
fwait
lock
mov
push
and
out
dec
pop
leave
dec
fdivrs
and
pop
iret
lret
xchg
mov
push
daa
movsb
cmpsl
stc
xor
sub
push
scas
js
pushf
out
lods
pop
cmpsb
mov
mov
clc
dec
adc
mov
dec
dec
add
or
inc
and
out
sub
push
jle
imul
mov
pusha
pop
test
pop
adc
jmp
mul
lcall
fcoml
push
popf
outsb
ja
fsubrs
addb
adc
push
dec
fwait
shrl
or
bound
xchg
pop
aam
ss
inc
movsb
shlb
out
adc
mov
push
mov
inc
outsb
xchg
jmp
inc
or
es
icebp
aam
call
adc
pop
daa
iret
call
test
lahf
cli
out
mov
dec
cltd
dec
aad
add
aas
xorb
sbb
popa
mov
mov
and
loopne
mov
mov
insb
mov
sahf
sbb
lods
ljmp
push
inc
ja
fisttpl
je
ja
in
add
les
cmp
ret
ss
xchg
fwait
jle
and
in
testl
ret
xor
adc
or
cmp
jno
in
sahf
sarl
idiv
mov
mov
jns
mov
div
inc
ret
add
stos
add
dec
hlt
repz
or
sub
insl
rcrl
adc
cli
js
movsl
scas
dec
repz
inc
or
cmp
sbb
call
sbb
pop
adc
jp
fbstp
jne
adc
in
inc
push
xor
sahf
enter
fidivl
aaa
imul
inc
jecxz
ficoml
dec
pop
adc
pusha
addr16
jb
mov
jnp
out
mov
ja
out
testl
push
arpl
test
popf
imul
rcrl
pop
mov
bound
inc
ret
cmp
and
movsb
rcll
cmp
jo
mov
fistps
imul
inc
sub
mov
mov
or
mov
lahf
mov
cmp
push
add
addb
in
pop
pop
jnp
test
imulb
inc
or
pusha
mov
xchg
add
popf
pop
movsb
loope
fldenv
popf
enter
push
add
or
into
jmp
into
mov
dec
mov
push
arpl
addl
inc
pop
sbb
mov
orb
arpl
jp
push
adc
fiaddl
fs
imul
out
jecxz
iret
mov
call
xchg
hlt
sahf
data16
js
and
jge
xchg
xchg
mov
int
or
leave
mov
xchg
lahf
insb
lret
mov
int
push
in
xchg
das
dec
xor
sbb
push
and
jns
mov
lods
mov
and
mov
mov
ds
icebp
pop
ret
cltd
cmp
cmp
lahf
fcoms
xor
inc
inc
xor
daa
push
xor
scas
aas
pop
sub
test
imul
jl
mov
push
sbb
pop
addr16
adc
flds
ss
jp
mov
jae
scas
lret
jge
or
test
test
mov
cli
repz
pop
adc
push
test
cwtl
fadd
js
or
and
sbb
adc
outsl
jge
gs
pop
fs
sahf
lods
mov
mov
mov
jb
stos
push
inc
stc
fadds
fimull
add
pop
add
arpl
cltd
push
inc
popa
and
movsb
lcall
inc
popa
xorb
test
addr16
dec
sub
insl
mov
cltd
adc
mov
pop
jne
dec
xchg
cmp
push
repz
mov
lods
mov
cmp
pop
aaa
jo
mov
and
push
lret
inc
dec
pop
scas
gs
xchg
xor
pop
jo
lods
mov
mov
imul
mov
imul
test
icebp
adc
jle
cs
jb
sbb
or
repnz
cmp
push
lock
and
cmp
xchg
cltd
gs
pop
inc
lret
sub
adc
sahf
mov
xor
aas
fcoml
sbbb
jmp
jnp
mov
mov
andl
ret
mov
cmpsb
test
daa
inc
popa
dec
test
xchg
ds
jnp
dec
mov
or
scas
xlat
jb
ljmp
add
sbb
call
pop
sub
sbb
mov
push
arpl
cli
popa
dec
addr16
dec
xchg
loope
xchg
stos
add
arpl
jl
es
pop
inc
test
jb
jnp
std
inc
adc
enter
cld
int
add
ds
push
sbb
pop
mov
xchg
negb
out
loopne
lods
call
jp
cs
arpl
mov
push
push
mov
repnz
adc
jo
fsubr
je
push
jnp
out
js
xor
in
sbb
pop
adcl
xchg
xchg
dec
push
pushf
sbb
ja
std
leave
outsl
lret
mov
sbb
mov
pop
lea
inc
xor
mov
mov
scas
mov
stos
pusha
and
notl
dec
fldt
das
enter
inc
jbe
sbb
cmc
fstpl
hlt
lods
jno
add
aad
fstpl
arpl
sahf
out
mov
inc
mov
push
out
xchg
jnp
pusha
subl
jnp
inc
mov
or
jne
leave
inc
gs
sub
cmpsb
lods
cwtl
xor
ret
ficompl
pop
fbld
inc
push
xchg
sbb
popa
mov
cwtl
ljmp
mov
imul
xor
push
mov
lock
fadds
push
push
jno
mov
mov
cmp
icebp
mov
movsb
daa
sbb
jo
std
push
jae
fnstenv
push
out
jmp
jno
xchg
mov
xor
jne
cld
or
cmp
inc
push
push
mov
mov
fs
xor
ficomps
stc
into
popf
mov
jb
jne
cmp
sub
cltd
sbb
pusha
and
pmulhuw
pop
js
pop
cmc
lock
push
loopne
mov
lock
xchg
mov
pop
mov
xchg
jae
and
mov
rorl
inc
pop
ljmp
loopne
dec
push
mov
das
test
add
add
xor
iret
scas
sub
aas
and
sub
test
pop
xchg
test
test
mov
popf
xchg
mov
push
jae
in
inc
data16
test
jp
fcmovnb
aad
cmp
movsl
xchg
pop
pushf
insl
fisttpl
in
or
sarb
movnti
push
insl
cmp
jecxz
cs
xor
dec
hlt
inc
pop
cmp
sbb
cmpsl
lret
inc
mov
insl
js
adc
xchg
es
mov
lret
test
pop
xchg
mov
pop
fidivrl
mov
mov
rolb
pushf
push
mov
addw
cmp
divb
push
or
fsubrs
in
js
out
icebp
scas
ja
cmp
inc
or
fsub
repz
push
push
xchg
push
bound
ja
out
das
sarl
xlat
fwait
xchg
or
mov
inc
xchg
or
fldenv
in
outsb
aad
movsb
ja
add
sbb
pminsw
fs
pop
lcall
push
or
adc
sbb
cs
jmp
lds
repnz
dec
add
mov
mov
mov
and
mov
sarl
xchg
dec
jne
push
jns
cwtl
jp
fwait
push
cmc
or
fisubl
sub
jge
fildll
inc
mov
push
mov
fs
insl
pop
xchg
cmp
stc
movsb
mov
lods
ja
inc
jb
icebp
insb
xorb
jo
push
and
sahf
jle
sbb
sub
jno
scas
out
mov
pop
test
mov
dec
pop
jnp
add
xchg
adc
std
xchg
mov
sbb
dec
mov
lret
mov
insl
mov
xchg
mov
aaa
stos
pop
sbb
out
xchg
pop
jp
imul
lret
ss
loope
jecxz
cmp
sub
pop
or
in
jnp
mov
ja
aad
sbb
push
lret
mov
scas
jmp
cmp
or
adc
fidivl
imul
movb
pop
rcrb
into
push
or
jl
cmp
pop
daa
fs
dec
dec
xor
insl
adc
sub
fdivl
pop
dec
jp
fdivrl
movb
jge
idivb
sbb
insb
cmp
jge
sub
sub
into
mov
mov
dec
xchg
ds
sbb
rorb
shlb
jp
pop
fsts
jne
es
xor
aam
mov
negb
lcall
mov
mov
cmpsl
fwait
bound
insb
mov
gs
push
sahf
cs
nop
cltd
lret
fstl
in
insl
les
dec
mov
sbb
in
fisubs
xor
hlt
lret
mov
xchg
insl
sbb
sarb
std
mov
mov
adc
aas
enter
hlt
push
pop
aaa
push
sbb
ds
test
add
ds
lret
or
adc
nop
mov
test
enter
mov
test
inc
sar
xor
dec
es
or
dec
add
nop
in
pusha
mov
into
xchg
xchg
fs
in
mov
sub
jae
jb
sbb
push
mov
movsl
xchg
adc
dec
scas
inc
sub
fldt
push
lea
fisttpll
xor
inc
jns
xlat
sarl
jb
cmp
lea
call
xchg
jmp
addr16
icebp
orl
add
sub
aas
sbb
sbb
test
stc
xchg
cmp
mov
xchg
xlat
lea
in
lahf
mov
cmp
or
outsl
aad
and
stos
push
dec
fsubrs
mulb
scas
cmpsb
xor
pop
cmc
call
cmpsb
sahf
or
call
mov
daa
fsubrs
shlb
push
aaa
mov
out
inc
out
xchg
insb
dec
dec
sbb
fdivr
cld
int3
and
mov
pop
add
cmp
repz
sub
and
adcl
out
aaa
pop
jnp
popa
rcll
cwtl
and
sbb
dec
ljmp
xor
loop
or
sub
test
push
push
insb
jns
jmp
jne
push
xor
in
pop
push
jmp
push
pusha
dec
scas
cmc
inc
rorl
sub
lahf
mov
cmp
ret
in
adc
and
jb
fs
xchg
roll
mov
xor
mov
push
ret
fldlg2
pop
mov
sbbb
ljmp
add
add
lds
dec
dec
mov
xor
adc
cltd
lock
bound
shlb
aam
mov
rclb
mov
adc
cwtl
pusha
dec
sub
fstl
icebp
loope
sub
dec
or
sarb
gs
xor
lahf
out
dec
hlt
dec
pop
test
xor
js
sub
lock
cmp
mov
sbb
dec
lret
inc
add
mov
bndldx
orl
mov
dec
adc
bound
xor
xor
lock
lcall
fs
jb
es
sub
push
fcmove
les
inc
mov
add
inc
mov
push
cmpsl
sbb
adc
jb
cli
loop
shll
xchg
jnp
dec
xor
jl
mov
loop
ret
and
mov
xchg
cwtl
int3
stos
xchg
shl
sub
jle
in
dec
js
pop
add
xchg
sub
scas
imul
rcpps
roll
stos
pop
pop
rcrb
inc
jl
movsb
scas
in
jno
sub
sbb
fidivrs
adc
jns
or
stos
scas
xor
adc
xchg
pop
or
notl
or
nop
hlt
das
xchg
fs
push
xlat
sub
jno
push
shr
loop
roll
popf
add
adc
mov
push
push
pop
into
movsb
enter
jne
inc
sahf
int3
ret
aas
jmp
mov
sub
xlat
sahf
cmpsb
mov
xor
mov
lods
int
push
enter
xchg
sub
mov
lods
bound
js
adc
cmpsl
fistps
push
cmc
jnp
sti
and
lock
add
fcomip
fwait
push
les
call
sbb
and
push
mov
sar
sbb
loop
xchg
mov
and
int3
loop
pop
lods
inc
sbb
sub
add
xchg
shll
push
and
mov
xchg
pop
mov
mov
xchg
add
xchg
popa
mov
push
inc
inc
popf
andb
sarl
ss
mov
xorb
sbb
sbb
xor
mov
jmp
push
pop
mov
outsb
in
push
in
jae
jae
das
leave
imulb
push
push
sub
nop
push
xchg
mov
or
and
mov
dec
inc
out
lret
jnp
fsubp
subb
bound
repz
inc
lock
or
jnp
sub
movsb
jns
fwait
out
clc
adc
mov
pop
sub
xchg
in
push
fstpl
movsl
inc
fnclex
mov
test
rol
mov
rcl
xchg
mov
out
iret
add
mov
mov
sub
jmp
adc
sub
push
inc
xchg
push
and
mov
push
fcoml
pop
xlat
sti
pushf
call
ds
fsubrl
dec
lds
dec
out
cmp
or
repnz
cmp
xor
cmp
je
fidivrs
enter
movd
push
rcll
out
imul
imul
jo
lret
xor
mov
cli
rcll
pop
pusha
mov
leave
popa
push
adc
pop
int
jns
aaa
rolb
in
or
pushf
inc
std
adc
stc
push
negl
ficompl
jle
out
xlat
mov
test
dec
push
xor
and
jl
pop
cmpsl
adc
shrb
bound
xchg
test
loopne
popf
rcrb
imul
sbb
dec
decb
mov
or
and
mov
cwtl
cltd
fstpt
sbb
fcompl
ret
andb
mov
jecxz
xchg
arpl
arpl
mov
inc
and
sbb
arpl
outsl
or
sbb
xchg
test
cmp
cmp
aad
fisubl
in
jp
stos
adcl
push
es
dec
mov
movsb
sbb
adcl
push
push
fcmovb
pop
data16
aam
adc
jg
ret
jb
bound
adc
insl
mov
lods
ds
jno
test
aaa
jb
add
psubsw
mov
xor
cmpsb
xor
imul
shrb
and
pop
sbb
mov
mov
xchg
jg
mov
pop
xchg
clc
je
dec
cmpsl
pop
jmp
jp
and
pop
push
mov
pop
add
rorl
cmp
fbstp
movsb
xorl
test
mov
mov
pop
sub
nop
sbb
xchg
pop
sahf
lcall
pop
or
mov
dec
push
mov
clc
dec
jno
pop
arpl
inc
or
sub
mov
inc
andb
imul
mov
insl
sbb
xchg
mov
arpl
int3
cmp
push
sub
mov
jne
lods
pop
das
repnz
push
push
js
leave
mov
sbb
pop
mov
repz
cltd
idivb
or
jmp
repz
lret
dec
je
xchg
or
push
in
movsb
lcall
inc
pop
jge
mulb
iret
loope
mov
mov
pop
mov
pop
ja
out
imul
pop
jnp
jp
sub
jg
inc
inc
cmp
dec
mov
jge
pop
or
cmpsb
add
sbb
xor
aas
fimuls
shrb
imul
mov
fdivs
ljmp
lea
mov
dec
andl
push
adc
jb
mov
sub
mov
sbb
sbb
dec
push
jno
and
sbb
mov
sbb
testl
imul
fldl
mov
pusha
add
cld
xlat
fs
xchg
lods
clc
pop
out
es
stos
dec
dec
popa
mov
push
mov
inc
pop
push
add
sarl
xor
mulb
mov
mov
mov
stc
icebp
out
ds
lea
in
data16
pop
push
fcmove
orl
mov
loopne
dec
fadds
leave
pop
loop
mov
out
lods
imul
mov
pop
cmp
ret
data16
xor
int
test
arpl
mov
mov
or
imul
loop
in
cwtl
or
push
jg
rdmsr
jl
pushf
ja
jge
inc
std
into
cmp
pop
pop
sahf
xor
icebp
xchg
xchg
es
loope
jno
mov
pop
fistps
ds
fnstsw
jae
lahf
xchg
cmc
mov
sub
mov
test
rorb
push
stc
ljmp
push
pop
xchg
cltd
fmulp
into
jp
pop
lret
loopne
fadd
or
adc
mov
mov
mov
and
adc
mov
adc
add
jb
xchg
pop
or
test
popa
and
fstps
xchg
into
xor
dec
hlt
test
cmc
jmp
xor
xchg
pop
or
outsl
out
popf
dec
mov
arpl
movsb
fwait
dec
xchg
pop
inc
xchg
imul
mov
ret
mov
jmp
das
pop
jmp
movsl
cmp
clc
add
mov
adc
mov
sahf
and
es
inc
call
sahf
dec
imull
lcall
mov
dec
inc
mov
fs
mov
sbb
xor
xlat
dec
push
ror
int3
add
je
es
sub
ffree
daa
jp
cmc
sahf
jmp
cmpsb
aaa
lds
xorl
movl
xchg
xchg
pop
xor
push
adcb
mov
push
push
neg
jmp
dec
orb
mov
xlat
cmp
xlat
jo
adc
sbb
negl
lahf
jecxz
mov
mov
push
jp
add
pushf
and
adcl
pop
inc
lods
xchg
xor
test
pop
dec
add
imul
shll
push
dec
and
test
xor
pop
jmp
inc
push
mov
pushf
cmpsl
adc
negb
sahf
add
test
lods
xchg
outsb
inc
imul
fadds
or
sub
push
repz
or
movsb
test
push
jmp
push
lahf
pop
loope
pusha
gs
xchg
out
cmp
mov
mov
leave
cmpsl
ss
push
xor
repnz
sbb
orb
mov
xor
aad
aam
push
mov
aam
dec
sub
in
xor
ja
xchg
jg
add
bound
sbb
jle
mov
mov
sahf
lcall
pop
push
xor
stos
push
cmpsl
cmp
mov
sbb
jmp
pushf
xchg
stos
sub
popf
and
les
inc
xchg
push
lds
inc
mov
frstor
in
jno
gs
sub
xchg
and
sbb
xchg
sbb
out
cmp
mov
mov
inc
xor
mov
repnz
and
pop
jmp
and
push
ret
jg
sbb
mov
push
pop
lahf
cmp
bound
cmp
pop
hlt
aas
cmp
mov
sub
ja
xchg
ret
mov
sub
xor
popa
es
or
cmpsl
ljmp
xor
jae
add
xor
sbb
mov
push
bound
fwait
addr16
sbb
rcl
out
out
insb
data16
and
hlt
mov
inc
xor
aas
and
pop
aam
pushf
cmp
hlt
cmpsl
jmp
mov
cmpsl
int3
fwait
xchg
xor
adc
fisttpll
daa
adc
mov
in
out
fdiv
mov
leave
fdivl
pop
mov
outsb
push
xor
pop
mov
sbb
inc
mov
mov
loopne
pop
push
scas
xor
outsl
sbb
mov
xor
mov
sbb
fstps
mov
add
sbb
mov
pop
inc
stc
fldl
call
aam
mov
stos
stos
in
adc
andb
pop
cltd
push
fisubl
test
dec
int3
pop
popf
adc
sbb
or
adc
mov
jae
inc
push
jp
sub
loopne
jp
rcll
push
jecxz
mulb
push
jle
out
cwtl
loope
shlb
clc
iret
or
lret
jnp
jecxz
jo
stc
rorb
cwtl
jmp
les
push
adc
inc
xchg
sbb
inc
xor
mov
popa
addr16
lds
lret
inc
jae
cmp
rol
stos
push
pop
mov
stos
and
pop
or
pop
outsb
adc
dec
pop
aas
mov
movsb
mov
orl
in
pop
call
adc
sbb
xor
mov
dec
dec
add
jb
mov
call
fisubrl
in
xor
inc
insb
repnz
fstl
jp
out
sbb
jo
popa
mov
ret
rcrb
push
movsl
movsb
sub
mov
mov
inc
inc
lea
outsb
aas
or
cli
sub
pop
pop
lods
push
and
xchg
subl
imul
pop
mov
xlat
sub
pop
test
insl
pushf
dec
sti
repnz
dec
icebp
testb
add
push
xor
jp
inc
call
xor
push
push
shl
sbb
sbb
xchg
hlt
sub
mov
push
loopne
dec
lods
push
xor
cld
and
pop
outsl
pop
ret
sar
fcoms
or
sub
notl
jecxz
dec
in
xor
hlt
cmp
adc
jo
push
mov
mov
cli
xchg
jo
add
les
push
mov
sbb
int3
jmp
dec
mov
test
popa
xor
movsl
pop
xchg
pop
inc
sub
clc
les
bound
jbe
loope
aaa
aad
inc
mov
cmp
jnp
shll
cs
xchg
mov
dec
cmp
mov
in
mov
mov
mov
pop
pop
hlt
pop
loope
xor
mov
add
xor
adc
lret
leave
orb
gs
cmp
pop
hlt
xchg
push
xchg
mov
daa
in
mov
aas
jb
out
xchg
test
shll
cld
loop
insl
sbb
mov
cmp
cmp
ja
mov
or
jmp
std
pop
inc
mov
fcmovnu
jl
lea
inc
dec
mov
adc
xor
or
mul
pop
xor
int
popa
sub
dec
fbld
js
inc
mov
cld
mov
mov
mov
loop
jne
fdivs
into
mov
and
cmc
mov
testb
cld
push
inc
add
movsl
lock
cmc
xchg
adc
inc
mov
arpl
cmp
jp
loop
enter
inc
mov
imul
arpl
shlb
push
add
xlat
int3
and
lods
lcall
dec
lcall
adc
in
and
mov
add
mov
stos
pop
sub
xor
mov
mov
add
xor
jne
push
jno
cld
adc
xor
bnd
push
js
invd
or
loop
ja
inc
dec
into
pop
rorl
mov
and
enter
mov
adc
fmuls
icebp
pop
xor
mov
or
mov
ds
bswap
sub
insb
mov
mov
push
popa
jb
lahf
add
lods
into
js
loope
mov
sbbl
movsb
stos
adc
or
imul
mov
inc
gs
add
jmp
dec
adc
push
pop
stos
dec
or
bound
xlat
insl
xchg
leave
jmp
adc
mov
nop
pop
enter
dec
ud0
imul
mov
fidivl
out
xor
mov
mov
mov
je
jno
xchg
leave
mov
cmp
push
gs
daa
mov
pusha
xor
pusha
movsl
xchg
and
imul
xor
pop
sub
xchg
out
fnstenv
ss
inc
sarb
out
test
outsl
push
scas
push
mov
jecxz
adc
xor
or
pop
dec
clc
mov
lret
mov
dec
or
movsb
gs
enter
sahf
xchg
bound
cwtl
outsb
and
fbstp
stc
or
nop
cli
or
pop
repnz
test
loop
cld
cld
andl
shll
xlat
pop
sub
cmc
gs
lods
pop
fldcw
or
mov
push
mov
jnp
cli
xchg
movsb
sbbl
fsubrl
bound
ds
add
les
in
push
add
dec
mov
pop
rol
xor
fldpi
push
in
lahf
adc
popf
sbb
mov
cmp
lea
dec
or
xor
add
dec
xor
mov
and
test
nop
pop
loop
sbb
pusha
lahf
adc
cmc
call
jne
adc
daa
push
notb
xor
shlb
push
pop
xchg
in
sub
insb
jo
sbb
fimuls
fdivs
ret
push
mov
or
and
mov
int3
call
pop
les
mov
push
push
fwait
outsb
xor
mov
fists
or
fistl
cmpsb
test
dec
stos
mov
pop
cltd
push
cmp
xor
aas
test
je
aas
cmp
cltd
mov
and
cmp
pop
test
xor
fidivrs
aas
jo
add
mov
push
inc
cld
jo
test
fucomip
idivb
lods
ret
lea
dec
or
ja
lds
xchg
daa
sarb
dec
dec
cmp
js
imul
jo
call
xchg
pushf
mov
xchg
stc
inc
cmp
outsb
pop
cld
dec
outsb
cmp
ljmp
lcall
ret
jle
and
dec
push
add
movsl
scas
dec
je
cmp
ds
jne
mov
testb
or
js
fisubs
xchg
mov
mov
lcall
jns
mov
lds
imulb
add
repnz
push
xor
sbbl
mov
and
pop
rcl
pusha
push
inc
in
int
dec
mov
jbe
pop
ret
push
ds
jl
adc
insl
icebp
adc
push
aam
mov
jns
testb
pusha
adc
cmp
push
hlt
add
jb
push
xor
dec
mov
lea
out
push
cltd
inc
cmp
cltd
xor
data16
jae
and
and
jo
sub
fistpll
lcall
decl
xor
pop
pop
repnz
mov
jg
mov
pop
ja
pop
loope
fnsave
cmp
icebp
pop
cmp
enter
movsl
mov
pop
dec
and
mov
cwtl
sbb
out
jo
adc
daa
adc
cs
pop
inc
lret
ljmp
xchg
mov
stos
inc
cltd
sub
cltd
add
and
adcl
aad
das
cltd
sub
inc
aaa
hlt
mov
mov
cmc
mov
outsl
lods
fistpl
mov
jle
aam
sub
adc
pop
mov
pop
xchg
xor
sbb
jg
cmpsl
cmp
jae
insl
jb
icebp
mov
cmp
cmp
xor
cmp
aaa
aaa
push
inc
and
clc
inc
or
in
inc
push
pop
jmp
insb
adc
xor
into
pop
sub
cmp
insb
insb
sarb
test
mov
jnp
dec
xlat
nop
cmp
pop
frstpm(287
xor
aaa
add
push
dec
aas
sbb
hlt
cs
or
push
fdivl
mov
cmpsl
movsl
and
and
dec
push
addb
xchg
fdiv
fimuls
dec
loop
test
les
clc
les
or
fs
ja
mov
dec
clc
mov
rcrb
cltd
or
negl
clc
neg
mov
or
stos
pop
push
inc
pop
xlat
and
rcrb
fidivs
cmpl
test
fsub
les
cmp
mov
loop
sbb
push
insb
call
xchg
movb
arpl
ret
fisttpll
movsl
mov
or
pop
addr16
dec
pushl
mov
iret
cmp
pushf
les
sub
loope
arpl
fcomp
cli
pop
inc
sti
cmp
jecxz
in
and
push
cmp
push
dec
jo
sub
inc
mov
jmp
movsl
inc
das
or
test
fnstcw
push
inc
push
xor
sbb
orb
jle
fcomp
cwtl
xchg
insl
mov
push
pop
nop
inc
mov
inc
inc
jae
cld
sbb
adc
rolb
faddl
inc
xor
jae
dec
push
lret
clc
jb
sbb
outsl
jae
add
jb,pt
bound
sbb
iret
outsb
push
fbstp
lods
addl
sarl
imul
push
cmp
js
and
fwait
mov
icebp
jns
dec
and
fisttps
in
and
jmp
fmuls
xchg
rcll
pop
shlb
notl
xchg
inc
int
or
push
dec
aaa
jbe
xchg
mov
or
xchg
inc
mov
jmp
inc
shl
enter
adc
jl
loopne
shrb
call
movsb
mov
push
adc
mov
mov
dec
add
pop
icebp
jno
sub
loope
sbb
sarb
and
outsb
addb
andb
pop
or
je
mov
andb
jl
mov
out
ljmp
mov
imul
fidivrl
dec
xor
xchg
and
jb
add
mov
inc
and
ljmp
cmovo
inc
test
xchg
cmp
add
jb
out
sub
cmp
dec
sti
jmp
add
add
pop
in
and
and
xor
into
mov
jl
ljmp
rcrl
inc
xchg
faddl
xchg
mulb
inc
sarb
and
mov
movsl
pusha
or
stos
dec
sar
rclb
and
jle
mov
out
jbe
sub
test
adc
push
or
out
cld
jmp
and
in
push
shll
xor
dec
xor
mov
jg,pt
or
lret
mov
dec
pop
andb
mov
sub
xor
out
jnp
jg
decb
pop
dec
cmp
outsl
and
into
mov
ds
repz
mov
loopne
mov
popa
ljmp
mov
hlt
mov
repnz
sbbl
push
loope
pop
adc
sbb
dec
sahf
fiadds
lret
jge
les
in
lret
push
imul
aaa
mov
jno
arpl
cmp
cmp
enter
or
jmp
clc
and
or
lods
cmpsb
cmpsb
shll
test
push
movsl
outsl
sahf
popa
xchg
imul
enter
mov
cmpsb
xor
ret
int3
mov
or
je
jo
dec
outsl
push
fisttpl
mov
loopne
das
sub
cmp
hlt
int3
gs
cmp
sbb
das
rclb
add
sbb
xor
xchg
push
jp
imul
lock
test
adc
int
push
xor
rorb
inc
jno
adc
jle
cmpsb
fcompl
push
sbb
orl
mov
pop
dec
cmpb
cld
jg
push
fwait
mov
push
shrb
inc
bound
int3
mov
ror
int
xchg
sbb
pushf
xchg
jne
and
loopne
xchg
arpl
or
test
repz
imul
dec
movsb
dec
jg
jmp
fcoml
or
lcall
inc
in
xchg
out
data16
or
push
inc
push
cmp
cmpsl
mov
or
ficoml
cwtl
mov
shlb
adc
xchg
mov
and
sub
xchg
xchg
loop
fpatan
ljmp
jg
jle
hlt
fidivl
xchg
aas
mov
mov
xchg
lret
cld
sbb
sbb
pop
daa
sub
jge
adc
mov
adc
pop
dec
mov
pop
inc
shlb
ljmp
addb
negl
scas
arpl
je
and
loope
sub
xor
jp
mov
popf
out
mov
mov
jne
adc
clc
call
popf
pop
push
orl
loopne
push
in
rcll
out
int3
clc
jnp
inc
mov
sub
sbb
lods
jo
sub
jnp
cltd
cmp
in
cmp
je
inc
cmp
and
es
out
mov
insb
xor
pop
dec
insb
mov
inc
imull
push
dec
cltd
sbb
sbb
out
mov
addl
mov
pop
int
jmp
adc
sub
xor
fs
pop
xorl
jp
addr16
xchg
movsl
scas
cmp
ja
loopne
add
ds
aas
add
arpl
rcll
clc
mov
push
sub
loopne
in
mov
clc
les
jb
mov
and
jo
ficoml
movsb
inc
stos
insb
loope
in
shll
sbb
call
xchg
mov
nop
arpl
stos
mov
mov
adc
fwait
cmpsl
jge
inc
jl
rcll
loopne
ffree
int3
insl
mov
mov
mov
xlat
mov
test
sub
nop
xchg
jg
ss
fiadds
jl
repnz
pop
jnp
sarb
sbb
or
std
sbb
push
dec
in
imul
push
sub
ret
add
aaa
push
subb
jnp
add
shl
and
xchg
clc
and
xchg
xor
lods
mov
subb
outsb
loop
bound
daa
add
divl
out
xchg
pusha
mov
sarl
movsb
nop
pop
dec
pop
inc
arpl
push
pop
bound
xor
xchg
lret
bound
popf
and
mov
sbb
jae
push
xchg
inc
pusha
call
cmp
data16
sahf
xchg
sub
cmp
mov
clc
dec
sub
sbb
addr16
test
out
lret
sbb
movsb
addl
sub
inc
push
push
aad
jle
xchg
mov
scas
jb
aaa
adc
mov
loop
arpl
jbe
pop
push
jae
add
iret
push
pop
sub
rorb
test
adc
sbb
pop
repz
mov
pop
xchg
cmc
insl
or
rcrb
jle
mov
jle
push
mov
rcrb
pusha
dec
push
push
mov
arpl
popa
add
push
adc
arpl
push
jmp
xor
mov
inc
nop
ja
push
dec
push
pop
jl
ret
and
addr16
jecxz
jge
adc
test
add
xor
xchg
add
imul
scas
or
fstpt
cmp
es
mov
jl
mov
dec
cli
add
aas
dec
mov
leave
mov
addr16
xor
adc
jecxz
test
and
leave
iret
xorl
rolb
dec
cmpsb
mov
mov
jmp
mov
in
ret
adc
adc
es
push
xchg
test
xchg
jl
cmp
adc
addr16
xor
xchg
sub
test
mov
test
jle
push
dec
pop
lahf
jp
inc
hlt
enter
sahf
mov
ss
test
pop
cli
jg
inc
lock
enter
inc
out
xor
adc
mov
cmpb
outsl
xchg
dec
mov
ja
fwait
xor
mov
lock
xorl
push
cmp
xchg
inc
xlat
inc
add
aam
les
popa
push
jle
adc
imull
std
mov
or
sub
cmp
jbe
or
in
icebp
test
mov
sbb
push
fiadds
xchg
cmc
inc
cvttps2pi
adc
add
and
test
addr16
mov
sbb
leave
pop
fs
inc
rcrb
imul
cmp
cmp
fs
sbb
scas
xor
add
xor
jae
pop
mov
push
mov
sub
mov
rol
and
push
mov
add
out
in
jecxz
in
iret
jl
insb
fwait
push
test
call
aad
or
lret
movsb
push
dec
xchg
pop
outsl
int3
cmpsl
mov
cs
jecxz
lds
in
in
adc
inc
shrl
push
outsb
mov
jnp
dec
lds
rclb
sbb
filds
outsl
push
mov
icebp
and
scas
and
xor
dec
inc
and
xor
or
test
mov
cmp
movsl
in
sar
dec
mov
insl
add
or
incb
add
rcll
loopne
inc
mov
mov
mov
imul
inc
sbb
lea
push
mov
push
fs
mov
push
push
outsb
pop
pop
call
arpl
mov
mov
xor
mov
test
and
xor
repz
jecxz
sbb
stos
pushw
int3
cli
mov
xchg
push
sbb
movl
push
cmp
sub
insb
adc
xchg
lods
push
inc
inc
stos
lea
mov
lock
cmpsl
fdivl
jnp
lahf
enter
dec
shrb
icebp
dec
push
daa
xchg
inc
push
adc
xchg
jl
cmpsb
xor
mov
adc
xchg
ret
mov
mov
out
fwait
dec
push
fiaddl
sub
mov
mov
adc
lods
sbb
push
std
movsb
or
ror
lea
pop
or
pushf
dec
sbb
xchg
repz
xlat
lret
sub
mov
cmp
mov
es
pop
lcall
dec
adc
scas
and
out
mov
test
cli
jmp
stc
xchg
mov
pop
add
jmp
add
mov
mov
mov
stos
stc
mov
inc
shrl
hlt
xor
das
call
cwtl
sbb
pop
repnz
leave
repz
inc
add
stos
push
sub
mov
mov
and
mov
movsb
repnz
into
cld
mov
and
jo
mov
push
arpl
ljmp
fs
arpl
iret
or
xchg
repz
xchg
cwtl
jl
fcmovnu
mov
inc
jo
inc
sbb
rcl
sahf
daa
mov
addr16
xor
out
bound
sti
xor
add
pop
push
add
sub
imul
or
fwait
movsb
or
pop
mov
popa
lret
loope
fnsave
enter
xor
stos
mov
mov
xor
sahf
in
push
mov
and
dec
push
fstpt
bound
add
paddsw
xor
in
fndisi(8087
in
jle
test
test
push
pushf
scas
leave
or
in
cmp
and
or
fs
stos
dec
jle
pop
xchg
mov
pop
cli
jnp
mov
sbb
mov
mov
dec
lods
mov
imul
sbb
outsl
jne
sti
clc
xchg
pop
stos
loopne
popf
cmp
inc
ss
movsl
ss
and
push
iret
test
ret
cltd
mov
ds
les
aad
js
or
mov
push
mov
adcl
loope
inc
pop
dec
jno
adcl
loope
dec
dec
je
pusha
lds
es
gs
inc
rolb
iret
sub
jl
or
nop
pop
cmc
movsl
mov
mov
and
out
add
add
add
das
pop
or
sbb
dec
sahf
gs
test
inc
or
adc
jge
sbb
fcmovnb
mov
lock
call
add
mov
fdivl
xlat
out
imul
aaa
sbb
fldt
iret
lret
pop
and
inc
aaa
nop
stc
mov
movsl
pusha
push
or
mov
movsl
mov
jnp
xchg
push
xlat
pop
mov
mov
sbb
push
sarb
xchg
leave
pop
add
cmp
xchg
push
pop
cmp
xchg
inc
mov
xchg
ja
lods
push
adc
movsb
jp
cmpsb
shl
bound
out
xchg
jbe
adc
mov
dec
and
nop
push
loopne
imul
mov
dec
mov
mov
lret
inc
lds
out
xchg
faddl
dec
mov
mov
inc
sbbl
loopne
mov
jmp
mov
lds
mov
shll
les
sahf
jbe
sub
and
ret
lahf
xor
lret
jnp
mov
adc
xchg
and
aad
ss
push
push
imul
inc
pop
cmp
cmp
addr16
std
aam
push
push
mov
dec
xchg
dec
or
in
xor
in
dec
loop
jl
cmp
or
jp
mov
and
xchg
cmp
pop
mov
iret
xchg
sarb
dec
xchg
arpl
cwtl
idivl
loopne
xchg
out
xchg
jae
pop
inc
inc
or
mov
adc
test
inc
dec
icebp
cs
outsb
jo
xchg
jno
adc
mov
int
pop
mov
pop
mov
xchg
inc
cmp
jmp
mov
repz
adc
ret
loopne
dec
jno
addr16
pop
ret
fdivrp
loopne
cmpsl
push
aaa
cmpsb
lret
dec
pop
test
xor
inc
jae
dec
jle
pop
pushf
jmp
into
sti
push
repnz
enter
jge
sub
inc
push
jne
repz
and
lret
enter
stos
xchg
aas
sbb
push
add
lahf
loopne
mov
test
orb
jp
mov
xchg
dec
lcall
enter
int3
gs
and
or
and
sub
xor
cmp
cmp
adc
cli
push
stc
sbb
pop
stos
sub
rolb
das
out
xchg
fnstsw
inc
xchg
pop
mov
or
push
testl
adc
pop
jns
sahf
insb
sbb
dec
cmp
into
mov
cmpsl
and
sbb
xchg
scas
sub
push
xor
popa
xor
push
xor
push
jle
add
cmp
ja
mov
mov
inc
cwtl
xchg
fmul
hlt
pop
pop
push
xchg
ja
out
mov
ds
daa
xor
xchg
mov
popf
outsl
lock
cmc
cmp
in
add
int3
outsb
data16
inc
add
adc
jl
ret
xchg
cs
imul
popf
lret
xorb
jl
jb
adc
movsl
cli
bound
mov
leave
mov
and
cmp
pop
pop
in
sbb
popf
stos
movsb
pop
loop
jns
fucom
and
and
push
sbb
jp
stos
jbe
sub
popf
or
and
fisubrl
mov
sbb
inc
gs
and
rcrb
ja
pop
add
ret
mov
int3
mov
clc
sub
testb
jae
inc
fwait
xor
aaa
dec
mov
js
mov
mov
movsb
adc
xchg
add
and
lea
sbb
xlat
aas
push
mov
xor
cmpsb
out
fdivp
mov
or
and
mov
sbb
sbb
sub
sub
sub
mov
cmpsb
dec
outsl
je
out
push
cmp
or
push
push
xlat
cmp
pop
mov
mov
outsl
popa
test
push
fisubl
cmpsw
enter
dec
push
mov
imul
insb
scas
adc
lahf
push
add
movsl
stc
movsb
pusha
sbb
loop
repz
mov
cmp
and
inc
addr16
cli
pop
add
jne
jnp
insl
push
push
out
mov
sbb
andl
xchg
jne
add
pop
cmp
dec
lret
in
pop
in
fidivrs
cmp
in
lds
lock
push
push
test
jnp
or
movsb
int3
and
aas
push
mov
xor
jg
mov
mov
cmp
pusha
loop
add
jb
fistl
xchg
xchg
xlat
cs
test
push
mov
push
jl
iret
insl
out
dec
adc
out
xchg
in
adc
bound
push
gs
pop
in
mov
pusha
ja
adc
mov
cmp
sub
jl
imul
or
fwait
sbb
jnp
mov
insb
add
fnsave
ss
push
fldt
push
dec
movsl
add
mov
push
lods
ret
lret
xor
sahf
sub
dec
arpl
jg
or
dec
cs
lods
cmpl
fnstcw
adc
icebp
mov
andb
lret
in
dec
pop
jmp
adc
ja
lcall
test
test
inc
dec
add
cmpsb
xor
pop
std
sbb
jb
lahf
loop
rorb
xor
test
mov
mov
lods
test
loop
movsb
and
aam
cmp
mov
imul
addb
lds
jno
jne
pushl
lods
xlat
scas
mov
cmp
adc
cltd
xchg
lret
dec
aam
or
and
xor
mov
jne
das
or
and
out
imul
jle
xchg
and
in
sbb
icebp
out
inc
lret
nop
in
jnp
leave
inc
push
jo
xlat
sbb
fcompl
test
inc
int3
data16
cwtl
in
mov
test
pop
cmpsl
js
and
and
mov
pop
clc
frstor
outsl
mov
fimuls
das
cmpb
adc
sub
xchg
push
movsb
xchg
pop
push
sahf
mov
enter
xor
sub
fldt
sbb
cmpsl
iret
sub
out
cwtl
push
sbb
fdivrl
dec
filds
mov
sbb
sub
fiadds
data16
cmp
ret
icebp
clc
mov
pushf
data16
inc
dec
icebp
out
sub
shl
push
push
push
mov
push
pop
imul
sbb
in
aas
sbb
cli
fldenv
inc
scas
imul
jecxz
xor
adc
lea
outsb
ss
add
leave
inc
sub
pop
or
fcomps
jb
mov
dec
dec
mov
jp
sub
cmp
subl
mov
push
fcmovu
fs
adc
iret
pushw
mov
aad
js
or
lahf
dec
jbe
xor
and
adc
out
xor
sbb
cmp
and
cwtl
sti
push
jne
nop
push
rorb
hlt
out
mov
jae
pop
mov
lret
cmp
cs
pop
jne
pushf
xor
iretw
push
push
testb
xchg
test
or
ja
jg
inc
popf
xchg
add
test
stc
test
or
in
cmp
or
dec
daa
fistpll
or
xor
movsb
ljmp
dec
inc
pop
ja
inc
sbb
fldl
orl
fbstp
in
cmp
add
addr16
sahf
cmp
test
mov
in
lods
xchg
xchg
loop
imul
cmp
call
shrl
fldlg2
and
test
aaa
fnstcw
mov
sbb
cwtl
sub
lret
cmpsb
lds
fimull
inc
repz
jae
rol
mov
sbb
xorb
bound
jge
stc
maskmovq
testl
cmp
xchg
arpl
push
sbb
cs
ret
loop
loope
cmp
mov
movsb
mov
xchg
mov
jnp
lret
pusha
lock
push
and
outsl
add
shlb
rclb
fmuls
imul
and
stos
dec
pop
outsb
popa
aam
fmulp
mov
cmc
int
add
push
cli
push
lahf
jmp
cs
sub
add
push
xchg
sbbb
rorb
xchg
out
leave
push
inc
sbb
push
and
pushf
jp
or
jbe
mov
lea
cmc
sbb
ret
test
or
inc
dec
stos
mov
jl
jp
dec
mov
mov
aas
stc
inc
js
das
cmp
push
mov
jle
loopne
loope
xchg
push
sbb
push
imul
leave
cmp
adc
or
adc
inc
dec
insl
fs
cmp
adcb
mov
stos
out
xchg
daa
xor
fsubrl
xor
cli
cmp
adc
aas
test
rorb
imul
ret
fnstsw
enter
outsb
sti
adc
fidivrs
mov
jbe,pt
xchg
aaa
in
dec
mov
cli
mov
xor
mov
dec
mov
lock
rorl
or
mov
popf
sbb
fidivl
cmc
jns
fsubs
loopne
hlt
jb
aam
push
mov
xor
sti
sbb
dec
lock
inc
or
dec
inc
dec
push
inc
loope
cmp
sbb
mov
pop
dec
loopne
idivb
mov
das
iret
hlt
xchg
jno
fwait
enter
icebp
pop
mov
sbb
add
fs
pop
push
lods
mov
dec
dec
test
and
scas
push
lods
ret
ds
mov
pop
or
add
xor
test
push
in
loope
mov
lcall
pop
iret
mov
jecxz
pop
xor
les
out
test
sbb
jge
and
cwtl
adc
pushw
lods
shlb
lock
jb
inc
repz
rcrl
jnp
iret
ljmp
sub
ud1
aad
xchg
push
sub
pop
or
inc
mov
mov
lret
das
pop
fldt
lea
or
rcrl
out
cmp
clc
sbb
decb
sub
divl
std
dec
mov
loop
and
push
js
imul
jl
and
loope
lret
test
push
push
xchg
clc
push
push
je
jle
imul
js
jmp
xchg
and
lret
xchg
sarl
lahf
fxch
jno
scas
test
cmpsl
std
into
sub
jne
mov
pop
xlat
jge
into
pop
push
xchg
call
ja
inc
cld
clc
add
and
add
ss
cs
add
xor
inc
mov
inc
inc
dec
aas
fidivrs
insb
mulb
sbb
mov
pop
xor
mov
insl
or
xor
cs
pop
mulb
lods
cs
sub
fists
test
push
push
dec
add
sbb
sbb
jbe
jp
dec
mov
sbb
xchg
sub
mov
fwait
adc
mov
push
xchg
and
inc
sub
jns
push
fidivrs
and
push
data16
pusha
out
pop
lock
pop
lret
mov
es
aam
push
push
cmp
jnp
sub
jle
in
test
push
jp
adc
jle
xchg
lods
inc
inc
cmpsl
sbb
xchg
push
lahf
into
adc
incl
lea
dec
inc
sbb
adc
shr
ffreep
daa
test
jp
popf
insl
aam
in
push
or
icebp
sub
inc
inc
push
lods
cmp
pop
push
in
lods
test
popf
ljmp
roll
xchg
inc
enter
ds
outsb
push
pop
lret
in
shufps
push
pop
loope
aam
daa
mov
sbb
mov
iret
faddp
in
dec
jp
add
out
xchg
dec
cmp
jle
sbb
jno
imul
push
pop
mov
sub
cmp
mov
push
and
jb
adc
test
mov
stc
sub
cmc
push
shr
sub
add
das
add
in
sti
pop
movsl
cld
aas
mov
push
fsubp
les
sbb
int3
inc
sbb
jne
and
inc
sub
or
data16
inc
outsl
mov
out
sub
xchg
in
hlt
and
pop
inc
mov
pop
js
xor
adc
jge
jg
jo
sub
lret
test
jmp
add
mov
pop
lret
dec
rcll
mov
loope
lahf
add
into
xchg
ss
sub
add
gs
cmovl
shll
stos
jmp
jmp
popa
aas
cmp
daa
push
int3
scas
add
test
xchg
or
jb
cmp
aaa
into
mov
inc
xor
fxch
add
pop
xchg
mov
adc
push
pop
sub
cmc
fwait
push
xor
loop
xchg
pushl
sbb
movsb
push
cwtl
fiaddl
pop
push
mull
cmp
loop
jmp
push
xor
pop
or
inc
dec
dec
pop
cli
aad
adc
jecxz
push
jae
push
pop
jns
jnp
push
fisttps
stos
aaa
je
mov
rcrb
sbb
aad
sti
js
jne
add
out
inc
shll
mov
nop
in
dec
mov
add
insl
fnsave
mov
cmp
aam
ffreep
cs
in
fistps
jo
sbbl
xor
mov
leave
insl
mov
mov
iret
aaa
stos
lock
jl
xchg
test
push
jmp
arpl
cmp
stos
dec
icebp
and
jns
sbb
mov
in
xchg
popf
cmp
push
jle
xchg
dec
or
js
push
add
lds
lock
ret
jo
addl
cmp
jmp
push
or
les
cwtl
xlat
cmp
push
lret
or
adc
mov
mov
inc
mov
fnstenv
jb
dec
inc
sahf
mov
dec
dec
jg
push
loopne
popl
xor
add
stos
mov
clc
rcrb
push
dec
mov
leave
sub
and
stc
lds
outsl
add
loop
mov
and
cmpsl
incl
push
insb
cmp
cltd
mov
jmp
push
mov
adc
jp
mov
int
sbb
sub
sahf
mov
xor
hlt
es
jno
add
outsb
push
mov
rol
daa
fsubrs
and
mov
aam
fsubs
pop
nop
std
pop
psadbw
loopne
jnp
out
lods
ret
and
dec
and
fistl
rclb
roll
dec
fidivrl
mov
mov
insl
add
dec
jnp
push
add
jle
lea
pusha
sarl
add
mov
fisttpl
pusha
sbb
movsb
pop
mov
ljmp
fsubrp
lods
dec
pusha
inc
aas
sahf
insb
in
dec
mov
lea
flds
xchg
pop
jbe
jmp
popf
inc
xchg
sub
adc
inc
adc
call
mov
cmpsl
inc
icebp
and
dec
xchg
jnp
cs
lahf
xchg
mov
xor
mov
xchg
xchg
int
mov
mov
imul
or
shlb
aas
xchg
jae
call
cld
lea
mov
fstpt
dec
pop
jg
add
mov
cltd
mov
sbb
ja
and
rcll
fcmovu
bound
pop
cmp
pop
dec
aas
jno
push
int3
scas
clc
test
xchg
sbb
clc
mov
sbb
call
mov
sbb
jno
popa
mov
in
out
push
add
jmp
outsl
adc
adc
cmp
pop
push
push
push
pop
xchg
sbb
mov
lret
cwtl
jl
mov
adc
pop
fwait
pop
cmp
or
movsl
jne
dec
push
aam
adc
jb
mov
call
inc
or
mov
xlat
dec
enter
adc
test
push
nop
fimull
inc
in
dec
popa
stos
pushf
inc
cmc
scas
es
dec
imul
adc
repnz
bound
push
ror
insb
cmc
lea
sub
popa
push
add
push
loopne
test
jmp
inc
fistpll
ss
outsb
sub
mov
push
outsl
cmpsl
sub
mov
loopne
jge
pusha
push
aaa
pop
cli
mov
outsl
fisttpl
scas
repnz
dec
pop
inc
dec
call
stos
imul
add
jno
clc
adc
dec
sahf
mov
push
test
out
popf
imul
push
mov
mov
and
mov
cli
jb
add
mov
mov
push
mov
mov
int3
sbb
dec
sub
subl
movsl
pop
adc
sub
mov
test
push
stos
inc
ja
xor
add
xchg
and
js
xchg
xor
jmp
cs
shlb
add
adc
push
loopne
pop
js
or
add
adc
adc
mov
cmpsl
mov
fnstcw
ja
int
popl
psubusb
inc
xchg
jne
sti
and
lcall
icebp
mov
andb
cltd
rcll
mov
les
outsb
cmp
xchg
xchg
push
pop
fs
rol
sub
cmp
add
sarl
bound
mov
int
mov
pop
pop
in
sub
int
cmp
lods
dec
pusha
cmp
and
jae
fisttps
mull
out
lods
addr16
lock
aas
add
shl
ret
mov
cmp
fadds
or
rcr
xchg
jg
xor
fimuls
pop
inc
sub
ss
popf
subl
sub
xchg
pop
jb
fdivs
cmp
lds
or
cmc
cs
pop
xor
cmp
test
es
inc
addr16
dec
clc
adc
test
loopne
pop
adcb
sub
out
mov
imul
sub
fcmovbe
dec
popa
mov
push
fnsave
cmp
jb
outsb
imul
loopne
and
idiv
pop
imul
add
imul
pop
rcrl
in
xchg
push
or
or
sbb
stos
xor
insl
negw
or
rorb
add
jmp
out
icebp
aaa
add
stos
mov
inc
mov
in
js
jmp
rcll
fidivrs
call
cmp
rorl
dec
das
or
je
mov
add
xor
rclb
test
test
fcomps
ret
mov
in
dec
loopne
sbb
loopne,pn
mov
sbb
ret
int3
cmc
popf
or
or
jmp
pop
lret
lahf
ljmp
outsb
lret
lret
iret
cmpb
popa
xchg
xchg
js
mov
das
cmpsl
cmpb
dec
fnstsw
and
int3
sbb
aas
das
pop
inc
push
rcll
bound
mov
nop
sub
jae
xor
and
pusha
xor
mov
or
loope
insl
stos
addl
adc
jg
jne
testl
push
dec
data16
xchg
in
pop
adc
cwtl
ja
dec
cltd
lock
fnsave
adc
inc
jmp
mov
inc
pop
inc
test
inc
nop
pop
movsl
cmp
dec
add
popa
lods
addr16
dec
movsb
pushf
adc
sbb
inc
mov
mov
outsl
mov
mov
cmp
xor
loopne
out
jno
outsb
push
and
add
mov
mov
lock
pop
aam
aam
sub
mov
cmpsb
aas
cmpsl
cmp
adc
sti
lods
mov
xchg
sub
shl
dec
jns
inc
mov
jo
adc
fidivl
cmpsb
jb
outsl
out
sub
out
out
stos
das
sti
push
cmpsb
push
fimull
xlat
sbb
cmc
sbb
sub
sbb
out
sbb
rcll
sbb
icebp
lret
call
xor
imul
xchg
icebp
cltd
xor
pop
dec
inc
cmp
mov
nop
outsb
sbb
xchg
fwait
in
xchg
ret
mov
mov
push
mov
js
jge
pop
fstps
and
jge
aam
repnz
sub
cmp
fwait
in
cmp
stos
shll
fldl
pop
mov
loop
test
jne
sub
dec
push
sti
ret
lret
mov
pop
icebp
fsubrs
jle
lret
repnz
jo
test
push
loop
push
popa
js
mov
mov
cmpb
mov
enter
sub
and
or
dec
addb
shrb
add
lahf
leave
or
mov
mov
loopne
adc
cli
inc
ljmp
pop
mov
add
jl
and
mov
cwtl
and
xor
sbb
lcall
mov
mov
mov
cmp
adcl
dec
lahf
das
arpl
xor
dec
xchg
lret
hlt
int
dec
arpl
xchg
movntq
out
lds
call
fsubl
add
pop
mov
in
nop
and
xchg
push
push
std
xor
mov
sub
jno
loop
mov
jne
and
adc
fidivs
stc
pop
in
lea
les
jne
loopne
add
inc
push
push
dec
insb
rorb
ret
pop
inc
add
add
insb
add
add
push
imul
ret
sub
adc
int3
into
dec
push
push
add
jb
mov
out
add
lods
mov
jae
and
push
shld
cmpsb
and
xchg
out
out
movsb
fs
inc
sarb
aad
push
cmp
sub
mov
dec
test
stc
call
leave
cmp
mov
lret
sysenter
cmp
mov
xor
or
enter
xor
sbb
test
sub
sahf
call
imul
ror
arpl
rorb
push
xchg
inc
dec
movsb
subb
xor
sub
xchg
push
jb
pop
and
jp
jns
popa
add
stc
inc
cmc
add
push
or
in
xor
enter
dec
cmp
and
fdivr
repnz
push
and
and
sbb
test
lds
idivb
stos
mov
xchg
xchg
ret
cmpsb
loopne
popf
or
adc
fs
dec
jmp
xlat
cmp
dec
inc
mov
out
repnz
adc
je
fdiv
dec
add
cmp
push
dec
cmp
setbe
enter
mov
sub
std
sbb
bound
aam
and
mov
in
push
stos
aam
cmp
add
and
xchg
imul
pop
pop
push
sbb
push
adc
and
xchg
lahf
out
or
popa
inc
mov
and
cmp
les
jno
out
fs
in
pop
aam
add
jo
fdivrp
dec
data16
adc
push
xor
xorw
cld
xchg
mov
and
jns
cwtl
inc
insl
sub
fdivp
imul
stos
fnstsw
shll
xchg
arpl
ret
cmpsb
dec
dec
sbb
scas
andb
jl
call
stos
mov
xchg
push
jl
jo
jo
push
pop
mov
in
cwtl
fstpl
and
xor
jbe
aaa
or
outsl
jno
push
inc
xchg
mov
adc
xor
cwtl
les
cmp
dec
push
lods
rcr
dec
std
mov
xchg
jns
pop
into
stos
pop
adc
jns
push
ret
and
aaa
add
repz
pop
repz
fstps
adc
dec
test
mov
out
clc
cs
and
insb
mov
das
in
int
add
jne
sbb
data16
jmp
out
cs
lds
out
jo
xlat
repz
ss
aam
ds
push
lds
je
movsl
loopne
pop
inc
inc
push
and
dec
lcall
shl
js
sbb
add
divl
ret
pop
mov
mov
call
pop
inc
js
shr
sbb
xchg
pop
fbstp
insb
cmpsb
lcall
dec
notl
cmpsl
xor
xor
sbb
inc
loop
lock
cwtl
test
cmp
cs
fdiv
push
fsubl
test
mov
lcall
and
jge
dec
sti
stos
add
or
daa
hlt
test
jmp
and
adc
push
imul
cwtl
jne
idivl
orl
fs
inc
nop
push
and
addr16
and
shll
xorl
in
mov
cmp
shll
iret
pop
int
push
ret
lock
xor
dec
xchg
sub
fwait
and
loop
shlb
mov
outsl
in
cmp
mov
je
inc
cmp
and
andl
test
std
rcrl
popa
and
test
or
mov
cli
sub
cwtl
lds
dec
mov
mov
mov
xor
jno
fs
sub
test
xchg
je
xchg
mov
sub
mov
subb
adc
fists
mov
and
xchg
pusha
insb
je
stos
mov
aam
mov
mov
mov
pop
mov
fidivs
scas
jne
mov
outsb
repz
jne
aaa
out
cmp
pop
lret
push
or
mov
enter
mov
ret
sub
pop
outsb
stc
mov
cmp
sbb
dec
lds
pop
movsb
outsl
add
scas
sbb
outsb
iret
or
out
lods
je
stos
sub
mov
mov
das
cmp
ret
aaa
loopne
int3
lret
or
jecxz
es
lods
outsl
or
outsb
repz
out
jns
adc
mov
out
fcomps
in
push
fst
and
pusha
push
nop
push
and
or
pop
scas
jg
clc
cmpb
sahf
icebp
stos
mov
lods
jno
andl
out
add
push
cli
add
loopne
xchg
push
mov
cmpsb
test
sbb
pop
push
adc
fdivl
cltd
and
lock
adc
ret
mov
popl
mov
adc
lods
into
xor
gs
fwait
lock
pop
leave
xchg
loop
inc
inc
loop
daa
out
es
xor
int
lcall
sahf
push
jle
out
int3
add
in
sar
xor
mov
cmp
add
or
sarl
in
sbb
sub
ficomps
aaa
imul
das
cwtl
dec
int
or
lcall
sbb
adc
push
inc
dec
ja
iret
arpl
aaa
ret
adc
ja
push
push
movsl
test
mov
xrelease
test
insl
fdivrl
aad
leave
jecxz
mov
mov
jb
mov
xor
xchg
jmp
aad
jae
fdivp
jne
jl
pusha
rolb
cmp
xchg
bound
push
jp
mov
sub
lea
mov
adc
mov
push
push
mov
iret
test
pop
test
jmp
aaa
sti
jae
jp
or
mul
and
cs
sub
jle
adc
std
lock
mov
cli
or
ljmp
xchg
sbb
loop
in
jns
cmp
decb
mov
jae
in
mov
cwtl
or
mov
pop
cmpsb
ret
rorl
jne
push
lcall
scas
scas
cmpsb
fnstcw
fbstp
xchg
jo
jge
mov
lcall
rcrb
mov
bnd
mov
cmp
rcl
stos
mov
add
xor
add
xor
ljmp
imul
sbb
xor
mov
imul
push
ja
sbb
inc
sub
fsubrs
cmp
jns,pt
cmp
mov
xchg
inc
out
pop
outsb
rorb
lea
ficoml
pushf
movsb
push
in
cld
sbb
js
xor
data16
loope
aam
into
sub
lock
adc
fmuls
sub
xchg
xor
mov
jge
and
loopne
in
dec
and
push
sarb
addr16
loop
cld
mov
shl
adc
mov
popf
sbb
fldl
dec
insl
call
insb
fs
pop
daa
adc
sub
arpl
loopne
xchg
mov
cmp
clc
fmul
stc
mov
aam
adc
fcomps
adc
mov
rclb
mov
push
sbb
mov
xorl
test
jmp
jo
jg
push
or
rolb
pushf
inc
mov
cmp
rcl
dec
add
movsb
icebp
iret
outsl
pop
adc
mov
leave
or
mul
movsb
mov
dec
and
enter
aam
inc
movsl
xor
decb
movsb
mov
sub
xlat
xor
hlt
jl
mov
lods
aaa
or
dec
pop
adc
sub
popa
enter
jp
int3
lcall
jmp
or
lds
enter
xchg
test
dec
out
jae
andb
pusha
pop
pop
or
int
pop
cmc
mov
inc
mov
rorl
dec
call
sbb
lahf
inc
mov
and
xchg
add
int3
testl
sub
les
fistps
fcoml
repnz
push
and
lods
icebp
jge
mov
movl
test
cmpsb
or
push
add
call
pushl
sbb
out
mov
jecxz
mov
xchg
mov
sbb
movl
lcall
ficompl
sbb
cmp
push
pop
dec
inc
inc
pop
jnp
rcr
xor
sbb
popf
or
push
cmpb
mov
pop
andl
mov
xchg
ds
iret
mov
push
inc
xor
xor
jl
mov
cmpsl
push
xor
test
dec
call
jae
sub
fidivl
mov
int
js
xchg
mov
mov
xor
add
push
insb
in
mov
int3
imul
add
add
scas
arpl
push
gs
jge
call
fstps
jp
pop
add
xchg
unpckhps
dec
jnp
cmpsl
arpl
movsb
movb
cmp
ja
mov
mov
scas
idivb
orl
lahf
in
loope
cs
divl
add
out
fisubs
mov
fwait
cmp
inc
insl
sub
ljmp
inc
dec
jmp
jle
cmpl
je
mov
mov
test
adcb
sbb
pop
fistpl
jp
js
xchg
cmp
mov
xchg
cmpsl
xchg
xorl
dec
dec
lahf
xor
int
xchg
popf
int3
inc
cmp
adc
rol
push
pop
xor
popa
out
jge
aas
stc
ficoml
mov
or
fwait
aad
daa
cmp
jp
nop
push
nop
inc
mov
xor
loopne
cmp
push
pop
mov
arpl
les
mov
stos
sub
sbb
or
pop
nop
adcb
mov
loop
jnp
aaa
iret
out
scas
lea
pushf
cmp
negb
out
jbe
ljmp
lods
divb
jle
or
sbbl
sbb
test
test
mov
cmpsb
or
fidivrs
testb
add
mov
loope
lret
fisttpl
pop
mov
sub
xchg
shrl
mov
xchg
inc
push
sub
ds
bound
inc
in
pop
cltd
add
loop
divb
lea
fmull
lods
or
xchg
push
xor
lret
je
sbb
xor
stos
or
mov
mov
xor
push
jp
test
push
sbb
add
sahf
scas
iret
mov
movsb
sbb
dec
pusha
xchg
xchg
cmp
movsl
ret
pop
inc
call
sbb
loope
mov
pop
or
dec
das
push
fisubrs
cmp
aad
in
push
inc
push
fisttpl
xchg
push
sbb
mov
cwtl
leave
imul
pop
sbb
lea
xor
cmp
sbbb
lcall
rcll
in
insb
imul
in
pushf
repnz
mov
sbb
mov
inc
hlt
fucomip
jne
jl
jge
or
mov
or
mov
mov
fadd
sahf
ror
decb
call
xorl
or
xchg
lea
mov
sbb
scas
sti
push
adc
pop
rclb
popf
arpl
aas
or
clc
inc
pop
sub
inc
jbe
and
fs
fisubs
pusha
js
std
push
stos
lods
nop
shrb
sub
repz
pop
clc
fs
ds
push
repz
adc
fs
inc
sub
mov
and
adc
stos
ret
jns
xor
popa
fadds
adc
push
movsb
push
or
sbb
and
ret
sbb
jecxz
pusha
cmpsb
subl
and
imul
mov
jo
lock
jmp
push
aas
and
mov
xorb
push
dec
stc
cmpsb
xchg
in
stc
push
mov
xchg
adc
movsb
pop
mov
jae
popf
out
adc
cltd
and
or
movsb
jp
fadd
pop
decl
test
clc
mov
add
pop
or
repz
mov
sbb
dec
cmp
push
lret
lret
xchg
xchg
xor
and
out
stos
fs
cli
dec
push
or
adc
lret
clc
sub
lds
push
enter
fs
xor
sub
mov
jl
aaa
insb
clc
je
jns
and
cwtl
mov
jns
ja
xchg
inc
mov
fnstcw
icebp
in
push
mov
push
orl
maxps
push
loope
jns
std
test
push
and
sbb
dec
imul
sbb
ret
cmp
push
sbb
das
inc
lock
add
mov
sbb
push
adc
jg
in
icebp
fstps
xor
cmp
cmpsb
push
jb
fmull
cmp
sarl
ljmp
xor
mov
into
push
adc
mov
dec
ror
adc
sti
leave
stc
das
xor
mov
call
dec
add
xor
loope
fisttps
clc
sti
jmp
lcall
in
pop
xchg
insl
fs
enter
lret
int3
mov
stos
push
and
or
or
mov
shll
jle
fisubrs
dec
or
mov
jns
lret
dec
in
xor
cmp
ret
popa
pushf
mov
lock
test
or
das
out
aaa
test
cld
cli
lea
inc
stos
pop
and
jno
jne
negl
cmpsl
sub
and
inc
mov
lea
fstl
sbb
aas
mov
ret
fwait
adc
push
push
or
stos
fbld
mov
xor
cmp
pop
movsl
aas
xchg
mov
outsl
dec
inc
ja
sbb
xchg
enter
lret
or
dec
sub
mov
pop
mov
hlt
fcompl
sub
imull
iret
mov
push
lds
and
pop
adc
push
lret
pushf
lds
push
inc
les
or
mov
jne
push
dec
mov
cmp
inc
mov
rcrl
dec
stos
mov
mov
xchg
xor
jl
incl
sbb
mov
jp
or
sub
scas
dec
out
dec
repnz
sbbl
mov
jle
pop
dec
xchg
mov
cmp
adc
getsec
dec
push
pop
jno
mov
sbb
in
sub
cwtl
lods
lret
xchg
jnp
scas
mov
adc
xchg
cltd
loop
out
enter
clc
pop
aad
sub
add
and
and
sub
data16
inc
xchg
ss
xchg
not
mov
ljmp
jnp
stos
test
inc
popa
jl
inc
ljmp
scas
rcr
mov
or
and
je
dec
lods
dec
jl
sbb
shrb
mov
or
test
nop
mov
in
daa
mov
pop
scas
cltd
jbe
sbb
dec
sub
adc
dec
push
cmpsl
imul
fld
mov
pushf
rclb
sahf
mov
mov
scas
les
xor
ret
jecxz
shll
cmp
pop
and
ss
adc
sub
fcmovu
xor
mov
dec
and
cli
jo
or
pop
inc
push
mov
outsb
mov
andb
mov
jne
or
pop
inc
jno
lret
pop
push
dec
das
mov
imul
loopne
test
icebp
gs
arpl
push
lahf
adc
push
jge
lods
popf
xor
sbb
adc
jo
lcall
pushw
adc
enter
push
or
int
push
movsl
repnz
push
out
in
outsl
ret
mov
adc
out
inc
add
into
das
push
mov
into
insb
jmp
cmpsl
push
aaa
es
sbb
lds
xchg
cmp
dec
fwait
push
test
mov
cmp
sub
nop
loopne
adc
test
fldt
dec
cmp
and
lret
add
lahf
pop
inc
or
in
xlat
sub
xlat
jno
inc
inc
pop
pop
addr16
inc
insb
xor
mov
rorl
dec
adc
and
outsb
jnp
ja
pusha
jns
daa
dec
daa
mov
xor
xchg
aad
imul
nop
nop
popa
cmp
pop
bound
cmpb
xchg
es
adc
insb
shll
jmp
xchg
or
js
sub
call
jne
lret
jae
or
jp
movsl
push
ret
cmp
aaa
mov
repnz
sub
sbb
mov
mov
sub
pop
xchg
fistpll
mov
push
inc
int
mov
lods
push
cmp
mov
test
or
sub
jb
push
or
and
and
xor
jne
push
aam
mov
call
sub
and
out
ds
cmc
mov
stc
jge
sti
shr
sub
mov
cwtl
mov
test
adc
dec
xchg
and
int3
icebp
push
jmp
cmp
lods
hlt
pop
dec
ret
fmul
mov
loopne
and
and
mov
xchg
add
xor
jb
xchg
outsb
xor
std
dec
sti
mov
jl
rorb
jl
imul
fnstsw
or
xchg
push
or
xor
daa
sbb
cmpsl
cmp
sbb
mov
xchg
sbbb
mul
dec
dec
loopne
aaa
sbb
mov
rorl
push
repnz
pop
and
orl
out
xor
mov
jno
insb
mov
lods
pop
pop
cmp
scas
sbb
pop
cmp
lahf
outsl
mov
mov
fwait
jne
ficoms
lret
ret
jns
in
fcmovnu
insl
int3
dec
adc
cmp
stos
out
loop
clc
fwait
aad
sahf
mov
inc
stos
dec
dec
fsubrs
int
ss
frstpm(287
inc
test
or
ljmp
repnz
jnp
fistpll
ret
aad
loopne
xor
in
dec
mov
inc
das
push
repz
and
loope
sahf
add
fists
pop
xor
pop
ja
xchg
and
rorl
call
aad
aas
jmp
mov
ss
loop
xchg
inc
mov
cmc
adc
cmp
xor
imul
dec
mov
or
jnp
cmpsl
push
adc
jg
push
fwait
sub
movsb
mulb
lahf
xor
out
into
mov
pop
loopne
jno
pcmpgtw
push
pushf
sub
cwtl
adc
cmp
decb
cwtl
cmp
pop
sub
loopne
fisttpl
pop
insl
ror
int3
or
in
insl
in
add
jl
push
xor
sub
pop
fcomps
ja
jmp
ret
ret
inc
dec
jne
popa
add
hlt
std
repnz
and
add
and
push
push
push
out
lea
outsb
rcr
adc
lods
or
fistl
outsb
jmp
dec
flds
arpl
pop
in
cmp
mov
icebp
mov
addb
popa
fs
push
pushl
loopne
push
xor
fcmovnbe
or
stos
jg
mov
pop
jo
inc
xor
pop
or
jge
push
pop
cltd
and
push
or
mov
jmp
mov
std
mov
test
fstpl
imul
xchg
cmpsl
jbe
mov
loope
in
pop
mov
lcall
pusha
insl
xlat
dec
jl
lea
popa
mov
jle
inc
cmp
int3
jne
pop
roll
shll
test
shl
scas
fsubs
scas
cmp
imul
pop
cli
add
dec
in
xor
or
rcrl
add
lcall
jne
stos
in
divl
test
sub
leave
dec
bound
add
mov
aad
xorl
mov
pop
xchg
iret
or
push
jmp
push
jg
push
idivb
inc
pushf
flds
les
jle
xlat
cmp
in
mov
and
dec
mov
sbb
in
xchg
push
mov
push
clc
push
sbb
add
in
bound
orb
fwait
daa
jo
jae
xor
mov
arpl
dec
imul
fwait
add
pop
push
loopne
sbb
in
jb
push
xchg
call
pop
ret
lret
jmp
xor
and
cmpb
mov
sub
int
cld
subl
dec
fmull
in
mul
loopne
into
push
loope
pop
lret
xor
ret
test
sahf
leave
mov
call
out
lds
dec
dec
dec
mov
lds
cmp
popf
in
stos
ret
in
sbb
call
sbb
popf
mov
cs
and
mov
inc
mov
or
push
ljmp
cmp
adc
xor
push
data16
or
add
movl
int
imul
addb
mov
sbb
adc
xchg
sbb
and
repz
dec
mov
pop
add
std
ds
arpl
hlt
scas
stos
mov
cwtl
ret
mov
mov
int
mov
push
cli
jae
stc
adc
xchg
mov
test
aas
cmp
mov
or
adc
mov
or
xchg
enter
dec
mov
loopne
insb
adcb
or
fsubrl
jb
lods
lds
les
mov
insb
pop
add
push
jg
cmp
lcall
loope
gs
ficomps
sti
out
mov
dec
clc
fisttps
jg
lods
sbb
push
xor
addr16
mov
daa
or
es
aam
add
fbstp
pop
inc
stc
pusha
jnp
mov
inc
popf
jnp
ljmp
jno
out
add
lds
pop
dec
jbe
sub
or
leave
cmc
mov
icebp
dec
or
mov
cmc
test
imul
and
movb
sbb
jl
xchg
dec
mov
repz
ret
xchg
inc
sbb
inc
xlat
cmp
rorl
lret
movsl
mov
inc
adc
std
jle
addr16
xchg
daa
adc
push
popa
inc
not
adc
mov
movsb
in
push
add
pop
dec
xchg
pop
push
xchg
xchg
inc
inc
dec
push
out
seta
call
sbb
in
and
ret
ds
repnz
das
inc
mov
movsb
cmp
fs
adc
inc
push
xchg
add
xor
fsubrs
scas
test
xor
mov
imull
loope
push
and
sub
fistps
adc
js
mov
mov
cld
aam
pop
or
shrb
fcompl
ficoms
roll
sub
xchg
jmp
xor
push
push
stos
roll
lcall
outsb
mov
fidivrl
adc
push
aaa
mov
cmc
mov
push
cmp
test
push
mov
inc
xchg
test
mov
sbb
add
popl
cmp
lods
dec
or
mov
mov
jno
dec
push
int3
aad
push
les
add
std
mov
in
jmp
scas
test
pop
xor
insb
test
stos
stos
mov
xchg
in
cmpsb
cwtl
fdivrp
cmp
pop
repz
push
loop
or
hlt
les
mov
ss
or
push
pusha
cmp
call
js
sahf
mov
inc
xor
ja
push
adc
mov
aad
adc
sub
inc
jae
testl
daa
or
loope
mov
cltd
add
jle
pop
xchg
shll
rol
sbb
xlat
mov
inc
rclb
pop
icebp
xchg
mov
sahf
fldenv
lds
fldl
push
pop
mov
xor
ljmp
fisttpl
push
test
xchg
das
cmp
mov
inc
pop
inc
cs
cwtl
aad
outsb
cmp
or
push
lahf
xchg
mov
sub
test
sub
sub
mov
fnsave
jg
add
movsl
jne
test
ret
test
and
lret
adc
push
cmp
inc
cmp
jecxz
mov
test
mov
mov
mov
stos
sahf
pop
cli
loop
dec
mov
mov
mov
loope
inc
addr16
mov
xchg
ljmp
sub
stos
shrl
mov
insl
xor
xchg
cmc
inc
adc
push
push
mov
in
xor
mov
cld
add
stc
scas
bound
shll
mov
lcall
fisttpl
push
in
popf
adc
js
pop
lahf
js
add
popf
xor
jle
xor
fistl
cld
adc
pop
pop
sub
scas
fdivrl
loopne
sbb
out
sbbb
testl
pop
ret
imulb
mov
xchg
dec
pop
lds
cmp
mov
mov
push
jge
lahf
and
pop
push
roll
inc
cmc
jge
cmp
mov
sub
sarl
sub
sbb
int
adc
sbb
sbb
das
sub
dec
dec
sbb
push
negl
add
cld
push
pushf
cmp
daa
jae
pop
and
aas
jecxz
loopne
add
ds
and
inc
xchg
push
xchg
int
iret
enter
aam
mov
sbb
mov
xchg
add
adc
mov
arpl
mov
fsubl
pop
mov
pop
fcoml
lret
cli
xor
ss
imul
pop
add
insb
xchg
mov
movsb
push
jp
or
sbb
mov
pop
lock
push
xchg
sbb
sub
cmpsl
xchg
mov
pop
lds
pop
insl
mov
push
shlb
lret
jne
xchg
dec
or
dec
cli
adc
rolb
icebp
push
push
popl
or
fbld
cwtl
ja
cmp
push
and
jns
push
ret
mov
jmp
mov
add
cmp
sbb
jmp
hlt
into
xchg
sub
pop
insb
sbb
pop
jb
jg
adc
add
and
pop
push
mov
sbb
inc
pop
inc
clc
rorb
inc
and
movsb
sub
arpl
sbb
adc
pushf
and
sub
icebp
ljmp
add
jb
testl
xchg
loopne
dec
inc
loope
jb
rol
jns,pt
push
shll
call
test
dec
out
mov
aas
mov
scas
dec
cmpb
in
push
stos
push
mov
sub
jbe
xlat
imul
fld
push
cli
shl
dec
push
fsubl
xchg
inc
mov
jbe
and
add
mov
out
test
xchg
pop
sub
xchg
outsb
imul
enter
mov
sbb
dec
mov
inc
out
jbe
xor
aaa
mov
mov
inc
or
popf
shll
cltd
cmc
sub
fdivrs
jmp
adc
inc
jg
mov
mov
lret
js
and
mov
lret
push
sahf
push
pop
int
push
ljmp
mov
cmp
les
sbb
adc
mov
cli
lcall
or
add
pushf
mov
ljmp
insb
adc
mov
sahf
mov
pop
loopne
addr16
stos
pop
push
out
push
or
mov
mov
int
cmp
xlat
inc
mov
inc
fcoms
loopne
cmc
adc
sbb
inc
cmpsl
out
push
aam
loope
imul
xlat
push
jbe
jnp
pushf
sbbl
fucomp
cmp
hlt
or
lock
sbb
rclb
mov
mov
in
and
pop
or
arpl
and
test
or
xor
sbb
xchg
mov
xor
rcl
inc
lret
adc
enter
adc
sti
scas
cltd
lods
inc
xchg
or
lds
mov
xchg
xchg
stc
test
mov
sub
out
repnz
mov
inc
mov
xor
mov
and
mov
hlt
or
sahf
orb
jp
ja
lcall
lret
mov
and
arpl
or
pop
bnd
sahf
test
jp
arpl
cmp
add
mov
push
imul
sbb
pushf
stc
iret
mov
pop
dec
das
roll
dec
inc
test
mov
loope
push
and
pop
lcall
in
cmp
lds
iret
insl
sub
iret
pop
rol
rol
jg
cmp
adc
or
push
lods
adc
inc
int3
sub
or
xchg
clc
dec
movsb
or
jge
pop
pushf
adc
cmp
mov
jne
mov
sahf
adc
cmpsb
iret
icebp
jnp
mov
inc
mov
cwtl
push
addb
lods
stc
test
gs
aam
jecxz
xchg
xlat
out
jmp
add
cmp
das
cld
int3
imul
or
iret
and
mov
and
pop
and
lahf
adc
push
in
push
push
sbb
loopne
cmc
cmp
inc
jnp
push
scas
push
sbb
xchg
add
and
daa
mov
pusha
cmp
lock
sub
mov
sbb
jecxz
jnp
sub
cmp
mov
aaa
inc
xchg
jl
dec
pushf
je
enter
pushf
sbb
stos
inc
push
lods
imul
jmp
js
mov
jmp
rcll
fpatan
dec
pop
push
out
inc
lods
in
sub
ficoms
mov
jmp
push
push
jl
popl
inc
sub
cld
mov
and
mov
lret
shlb
jl
bound
daa
andl
mov
stc
xchg
fs
mov
lret
add
scas
mov
cli
cmp
jae
mov
pop
aaa
pop
enter
cltd
mov
and
jns
add
lds
lods
ljmp
sub
pop
adc
or
out
jcxz
stos
cli
inc
stc
xlat
dec
pop
aad
push
cwtl
add
mov
and
stos
leave
inc
adc
les
icebp
clc
aas
insb
jle
imul
xorb
push
jge
fbstp
imul
sahf
push
push
mov
pushf
mov
stos
insb
in
cmpsb
sbb
std
scas
pop
ds
flds
xor
adcb
jmp
or
mov
adc
or
cmp
or
les
in
enter
add
or
test
pop
cltd
xchg
jmp
sub
push
inc
ret
stos
and
jp
inc
cmp
ret
in
or
call
das
mov
inc
lahf
sti
aas
mov
xchg
xor
sub
mov
and
gs
ficoms
pop
call
jl
adc
dec
out
incl
rcrl
jo
sbb
sub
or
push
lahf
cld
cwtl
mov
popa
std
iret
push
xchg
xchg
inc
cmpsl
xor
mov
mov
test
cli
pusha
dec
outsb
or
adc
jge
pop
or
adc
cs
pushf
int3
and
sub
lahf
loopne
xlat
jmp
mov
lcall
push
cmp
dec
jmp
insl
aas
xor
jge
fwait
data16
repnz
xchg
push
mov
mov
ret
sarl
or
push
stos
and
push
sbb
pop
adc
rclb
push
add
jns
push
fdivrl
gs
push
lock
nop
jg
jbe
mov
cmc
jl
gs
ljmp
sti
daa
jg
enter
jns
fcom
jecxz
dec
aas
jge
enter
pop
pop
and
repnz
sub
fildl
lea
mov
sahf
movl
pop
sahf
ror
and
fcomps
push
aaa
push
and
lcall
in
sahf
xor
inc
pop
rcr
or
inc
cwtl
sbb
loopne
aaa
mov
inc
xor
pusha
testb
push
jmp
cmp
xor
add
dec
sahf
jo
mov
push
mov
orl
xchg
in
lea
shrb
mov
into
inc
pop
mov
ret
pop
mov
bound
sub
jp
loop
movsl
adc
mov
fsubs
mov
lock
movsl
adc
test
in
std
lret
cld
pop
inc
fimuls
inc
jae
into
pop
shll
ds
pop
into
xor
inc
and
gs
adc
mov
ja
sub
dec
adc
arpl
fwait
popa
mov
xchg
ljmp
adc
cmpsl
loop
shlb
xor
jp
lea
pop
ljmp
sub
or
hlt
out
pop
test
rcrb
out
repnz
andl
cwtl
inc
mov
addr16
push
in
xchg
adc
mov
shl
cmp
adc
sbb
lds
ret
flds
roll
ljmp
loop
xchg
dec
sbb
cs
push
sub
aas
pop
xchg
mov
cmp
mov
popf
push
in
lahf
ds
inc
add
in
neg
jp
in
push
pop
jmp
hlt
mov
fistpl
repnz
out
push
mov
inc
inc
notl
mov
rcrl
mov
jo
push
fsubs
jg
inc
dec
mov
jge
pop
outsl
jmp
cld
test
pop
push
push
cmpsb
sbb
dec
inc
mov
mov
cmp
dec
das
lods
out
and
insb
test
cli
mov
sbb
mov
mov
cld
cmp
in
and
nop
push
xchg
inc
stos
in
xor
int3
jecxz
cmp
loopne
adc
cld
mov
sahf
mov
jecxz
mov
fstpt
push
pop
xor
ds
lds
daa
mov
hlt
push
dec
sub
decb
out
call
dec
pop
push
loop
xchg
nop
xor
jo
enter
dec
dec
fwait
enter
enter
cltd
js
mov
mov
sub
lods
stos
sti
fimuls
pop
or
pop
movsb
xlat
pop
jbe
test
loopne
jge
nop
or
orb
sub
xchg
scas
loope
jne
sbb
push
test
icebp
sub
pop
push
lea
notl
dec
stos
cmp
popf
mov
sbb
lret
mov
nop
pop
aaa
sbb
jae
and
pop
shlb
mov
cmpl
lret
mov
imul
mov
cmp
mov
jp
mov
jmp
stos
js
frstor
mov
lods
lods
stos
mov
xor
cltd
sub
repnz
mov
repz
imul
adc
jg
mov
arpl
adc
sub
rorl
add
fldenv
and
leave
inc
mov
cmpsl
inc
cmp
push
xor
xor
xchg
sub
mov
add
mov
aaa
add
and
push
fstpl
lods
push
roll
mov
imul
lahf
ss
lods
adc
ja
cmp
dec
or
cmp
in
cli
fisttpl
jo
push
loope
nop
loopne
dec
cmp
jl
adc
sahf
xchg
sub
sbb
and
es
jmp
rcl
or
hlt
xchg
icebp
daa
dec
push
cmp
fldcw
mov
jmp
in
mov
into
add
lret
xchg
sub
les
imul
xchg
inc
gs
jne
out
mov
inc
jns
mov
out
sbb
jge
mov
repnz
popa
lea
push
or
ja
loop
push
adc
enter
mov
pop
mov
dec
pushf
mov
fmuls
jno
push
dec
cmpsl
and
jmp
xor
push
pop
cvtps2pi
les
cmp
ret
imul
out
pop
lods
lret
adc
out
mov
aaa
sbb
jmp
jmp
xorl
mov
in
lods
lea
test
or
outsl
xor
jmp
dec
outsb
mov
int
push
movsb
gs
repz
scas
mov
ud0
dec
clc
inc
xor
popa
and
sub
ja
push
sbb
movsb
adc
push
popf
arpl
xchg
sahf
push
or
shrl
rcr
fwait
push
and
inc
dec
mov
lods
adcl
mov
jnp
mov
pop
dec
in
adc
inc
outsl
filds
push
addr16
sub
sti
sti
push
dec
mov
ret
outsb
scas
or
insl
filds
movsl
or
jns
xchg
mov
mulb
clc
mov
sbb
mov
pusha
movsb
fmuls
testl
jbe
test
mov
leave
dec
jg
cwtl
outsl
xor
loope
rolb
aam
test
mov
push
or
ds
or
mov
add
ret
daa
pop
xor
sbb
xlat
mov
lock
mov
xchg
push
and
adc
es
xor
xchg
in
cmp
call
sub
fdivrs
icebp
or
pushf
mov
ss
cmp
pop
hlt
pop
mov
xchg
jge
mov
xchg
rorl
fucomp
pop
push
sub
fidivs
shlb
sub
fimuls
aaa
std
mov
sub
push
hlt
fdivl
mov
sub
mov
jmp
push
mov
pop
ja
lds
mov
gs
sub
fdiv
dec
and
mov
or
xchg
rclb
jnp
push
insl
scas
mov
sbb
addl
push
xchg
adc
mov
mov
scas
push
mov
popf
jnp
in
inc
loope
in
sub
lret
in
movsb
push
dec
sti
stos
sbb
mov
adc
cmpsb
int3
hlt
rclb
adc
stos
xor
xorl
lcall
xor
es
adc
push
ret
mov
in
sub
xor
rcrb
jno
xchg
push
inc
repnz
jg
rclb
lods
ja
aaa
std
imul
pop
and
mov
push
mov
mov
xchg
fadds
cli
xchg
dec
nop
xchg
mov
loopne
adc
push
insb
lret
jne
push
stos
lods
mov
iret
and
mov
and
les
rcrl
mov
mull
mov
jecxz
insl
xchg
test
adc
jo
xor
mov
andnps
fsubrl
jo
out
fdivrl
inc
mov
ficoml
jecxz
js
nop
repnz
jns
fucomip
pushl
mov
push
and
xchg
mov
mov
je,pn
ret
mov
dec
test
xchg
sahf
cmpsl
leave
adc
adc
mov
sub
xchg
fisttps
or
scas
cmpsb
push
int
cwtl
jo
scas
mov
stos
add
pop
cltd
pop
les
cmp
fistl
push
arpl
subb
cwtl
xor
or
adc
hlt
pop
mov
jle
mov
outsl
in
xor
fimuls
mov
pop
or
fadd
mov
pop
mov
lods
lahf
jge
idivb
test
cmp
mov
dec
adc
and
stc
jecxz
mov
xchg
xor
aam
cmp
rorb
mov
rolb
sarb
hlt
int
mov
xchg
nop
adc
addr16
out
mov
jecxz
or
or
ss
ljmp
ret
pushf
mov
jno
inc
xlat
xor
jns
pop
sbb
lea
cmpsl
sahf
bound
jg
add
subb
push
lock
in
add
fstpt
inc
mov
inc
push
nop
mov
out
sbb
cmpsl
movb
lret
iret
sti
adc
fs
xchg
push
out
sbb
in
push
frstor
test
jge
in
movsl
add
dec
rorl
out
fildll
pop
pop
push
shr
push
jge
xchg
mov
or
add
dec
xor
push
js
loope
das
jnp
and
cmp
aad
and
addr16
lds
sbb
push
pop
out
dec
pop
jne
cmp
inc
dec
xchg
push
push
mov
xor
out
fists
add
js
push
cmpb
outsl
xor
push
lret
ljmp
cli
iret
hlt
push
in
enter
out
std
or
lock
jmp
repz
pop
cmc
fists
cmp
gs
in
pop
repz
and
mov
mov
test
xor
add
nop
ljmp
inc
lock
xchg
jbe
popa
pop
cwtl
test
adc
sbb
cmp
adc
and
inc
orl
and
xchg
push
or
js
push
cs
lods
arpl
mov
adc
ret
gs
aaa
lcall
mov
mov
pop
or
movsl
cmpsb
cmpsb
dec
test
add
inc
adc
movsl
fnsave
stc
push
cmpsl
add
enter
and
iret
lds
jle
inc
and
test
jns
add
pop
fimull
mov
pop
jb
push
dec
add
inc
fbld
shlb
shr
imul
pop
jae
xor
movsb
hlt
pop
sub
xor
daa
jae
stos
pop
adc
push
std
lahf
push
scas
xchg
pop
inc
cmp
nop
ret
mov
or
ja
xlat
les
in
out
jno
in
cmpl
mov
and
push
fs
negb
cli
in
mov
imull
int3
cmp
xor
pop
jl
adc
add
int3
mov
call
ljmp
mov
or
scas
sbb
xchg
inc
jne
pop
adcb
fcmovnbe
leave
mov
sbbb
hlt
insl
ljmp
xchg
xchg
sbbb
repz
mov
lods
into
jae
xlat
movsb
test
arpl
into
jae
mov
push
mov
negb
sub
fsubr
sbb
mov
mov
xchg
cwtl
mov
inc
push
jnp
cmp
outsl
and
sbb
xchg
sbb
ss
or
out
pushf
mov
outsl
mov
out
push
movsb
stos
push
test
in
cld
dec
test
out
repnz
ljmp
gs
and
sbbl
sbb
int
push
jns
mov
ss
jne
out
and
push
push
sbb
enter
sbb
mov
leave
movsb
xchg
xor
inc
push
popa
pop
or
lods
fstps
out
ss
aas
adc
jo
movsl
aad
fsubl
fwait
neg
mov
jno
ljmp
call
popa
cs
xchg
sub
inc
xchg
mov
jl
push
scas
out
and
cmpb
push
std
sbb
cmp
movsb
cmp
hlt
pushf
fwait
add
and
push
jle
das
fdivl
jge
imul
mov
inc
mov
mov
xchg
mov
popa
cmpsl
xchg
or
jae
adc
or
inc
add
pop
out
xchg
sbb
pop
jae
iret
inc
rorl
mov
fsubs
mov
xchg
or
jmp
jge
orl
jae
jle
cmp
mov
push
int
push
jne
rclb
add
clc
fldl2t
and
and
adc
into
out
xor
inc
mov
out
pop
fwait
lahf
mov
das
mov
cld
cwtl
and
fldcw
push
sbbb
sbb
mov
daa
and
mov
or
and
or
adc
ficoms
or
shrb
dec
add
lea
dec
fidivrs
in
test
or
fnstsw
negb
xor
testl
inc
divb
lods
push
sbb
scas
inc
cs
adc
mov
mov
xchg
inc
cs
mov
dec
sub
dec
mov
dec
xchg
mov
scas
iret
ss
les
jmp
addr16
incl
sub
pop
pop
fldenv
ljmp
mov
xor
aaa
xchg
ficompl
ljmp
je
and
outsb
ficomps
sbb
mov
je
in
scas
xchg
nop
xchg
dec
sbb
xor
mov
loope
sub
test
lods
cmp
push
pop
sub
mov
fisubrl
xor
scas
inc
mov
xorb
sub
mov
fnsave
mov
dec
lods
add
adc
push
iret
sahf
push
inc
dec
push
cmp
addr16
les
push
xchg
aam
or
fstps
jp
push
adc
dec
test
rorb
data16
mov
cmp
jne
pop
push
movsl
int3
test
mov
lahf
lcall
pop
mov
lcall
cmc
inc
ljmp
sbb
das
and
mov
cmc
mov
leave
mov
jb
inc
pushf
jo
sbb
movsb
pushf
ret
jns
or
lret
lahf
mov
xlat
out
and
repz
stos
add
clc
or
inc
jo
push
stos
xchg
add
insl
mov
leave
bndstx
dec
fcmove
rclb
xor
xor
xchg
inc
xchg
inc
idiv
adc
icebp
jnp
mov
xor
xor
adc
sbb
movsb
es
lret
dec
add
cltd
pop
and
jl
insl
int3
lcall
popf
arpl
sbb
mov
ficomps
cs
xchg
stc
je
cwtl
jp
jge
stos
xchg
loope
pop
aam
xor
les
add
jo
xorl
sub
test
das
cltd
in
stos
fldcw
out
test
mov
fcomp
xor
xchg
xor
xchg
or
and
xchg
push
testl
add
add
jp
mov
popa
fnstcw
iret
adc
hlt
sti
in
arpl
bswap
mov
aam
cltd
or
sub
shr
add
adc
es
cli
mov
sbb
in
dec
sub
pop
xchg
xchg
and
jo
idivl
bound
xor
call
jg
and
ret
jle
inc
in
in
call
sbb
xor
sub
lret
sub
mov
and
jl
lods
pop
jp
stc
test
and
xchg
insb
insl
lds
ljmp
adcl
int3
xchg
in
sbb
sub
and
iret
dec
mov
mov
mov
mov
fnstenv
mov
movsb
mov
mov
fldt
cs
mov
addr16
fcoms
sbb
xchg
lahf
cmpb
outsb
aas
add
sub
jle
test
and
es
add
mov
inc
or
movsl
jl
push
inc
xchg
push
data16
dec
mov
test
lcall
stos
pop
pop
nop
add
push
push
or
out
mov
sbb
shll
sbb
jmp
mov
out
lea
sarb
popf
shlb
push
add
scas
cmp
test
add
stos
es
pop
cs
rorl
je
ljmp
push
sub
sbb
bnd
notb
rcl
fcmovb
adc
and
dec
sub
icebp
pop
std
jno
bound
inc
aaa
mov
outsl
pop
popa
out
lcall
fs
xor
inc
xchg
pop
sbb
xor
es
sbb
jmp
mov
pop
or
repz
pop
in
xor
pushl
pop
cmpsl
stos
xor
add
negb
jg
addr16
pop
jge
cmp
pop
push
sub
xchg
repz
cmc
dec
popa
gs
sub
dec
xor
int3
fwait
or
jno
sub
fcoml
hlt
test
push
push
daa
adc
mov
in
pop
repnz
mov
stos
mov
shll
jge
cmp
stc
rcrb
stos
xor
mov
jno
sbb
subb
sub
mov
lds
insb
dec
ret
jmp
cmpsl
call
repnz
ret
jo
idivl
loope
cmc
movsl
pop
js
std
outsl
dec
dec
iret
add
inc
or
icebp
xchg
sub
dec
pusha
jp
inc
mov
in
jecxz
push
add
mov
sub
pushw
inc
mov
xor
dec
int
frstor
mov
mov
sub
ss
sbb
ds
dec
xchg
cmp
jns
dec
or
dec
and
subb
fs
aam
pop
mov
adc
cld
stc
mov
test
inc
cmp
ja
xchg
dec
cmc
mov
stos
sbb
loope
test
cltd
jnp
int3
xor
mov
and
dec
les
push
hlt
dec
enter
add
test
mov
push
pop
pop
push
shl
inc
xor
nop
gs
mov
pop
xchg
ljmp
aaa
adc
pop
pop
stc
ret
or
cmpb
inc
fnstenv
lahf
sahf
pop
movsl
outsb
fyl2x
insb
roll
shlb
jo
xor
fs
mov
pop
ds
fstpl
push
sub
popf
mov
sub
push
cs
jno
out
xchg
stos
inc
xchg
bound
jmp
lock
ret
aam
adc
stos
ret
xchg
out
maxps
loop
push
push
pop
lret
cmpb
aaa
loop
test
mov
cmp
leave
mov
mov
mov
bound
xor
inc
push
ljmp
mov
sub
das
in
daa
mov
cmp
lock
adc
jns
les
sub
sbb
add
sub
enter
xlat
add
ljmp
push
shl
and
mov
sahf
mov
pop
and
jae
bnd
popf
les
mov
jo
mov
dec
jb
int
daa
ja
inc
pop
pop
pusha
movsl
pminub
and
dec
sbb
rolb
movsl
mov
inc
orl
movsl
jbe
pushf
scas
xchg
popf
dec
jmp
pop
push
sbb
pop
push
pop
imul
repz
sbb
dec
xchg
mov
enter
jg
lahf
in
pop
cmc
jecxz
gs
sbb
test
int3
jmp
xchg
sub
mov
loope
mov
pop
mov
shlb
mov
je
sub
dec
outsb
jge
dec
sbb
adc
and
negl
or
mov
adc
popa
lock
pop
jmp
mov
mov
lods
fnsave
adc
pop
lods
mov
and
leave
cmp
gs
icebp
mov
call
mov
jne
pop
mov
jmp
stos
mov
int3
push
push
movsb
dec
sub
sti
out
ss
dec
inc
push
adc
cltd
push
mov
out
pop
adc
popa
lods
cli
test
xor
mov
loopne
jns
xchg
push
fucom
andb
repnz
dec
ds
mov
adc
inc
addr16
xchg
sbb
pop
mov
add
pop
dec
cmp
imul
mov
mov
pop
push
jne
test
mov
jle
ljmp
test
hlt
jae
push
lcall
iret
rolb
push
xchg
shl
pop
push
lahf
fcomps
mov
or
sbb
ret
push
icebp
xor
sub
lea
push
pop
scas
out
or
js
es
add
repz
call
divl
scas
cmp
clc
xlat
mov
sarb
dec
sbb
pop
add
lock
testb
jge
stos
or
add
pop
fdecstp
daa
cmp
pop
xorb
jo
jle
addl
sub
jge
popf
jp
cwtl
dec
pop
inc
fs
add
xchg
shlb
mov
ret
lock
xor
sub
dec
pop
ss
sub
jmp
pop
out
lea
cmp
dec
mov
stc
stos
fwait
xor
push
xchg
or
xchg
fisubl
xchg
stos
fsubrs
in
lret
divb
cwtl
xorb
fbld
aaa
test
aam
xchg
push
mov
dec
jp
mov
fs
mov
pop
xor
and
roll
pop
inc
cmp
xchg
inc
ja
cmp
adc
inc
sub
rorl
dec
sub
dec
lock
outsb
pop
xorl
xor
cmp
push
test
les
scas
mov
cmp
mov
lret
pop
ficomps
cwtl
cmp
xor
xor
repnz
jecxz
cmp
pop
shll
movb
pop
xor
add
add
adc
sub
push
and
sub
dec
or
pushf
enter
dec
dec
rol
ds
lcall
xlat
jno
jno
adc
jge
mov
or
fisttpll
icebp
jmp
and
add
mov
dec
int
adc
and
jns
or
lcall
popa
rcr
dec
ret
add
out
popf
jmp
push
xchg
sub
cmp
insl
mov
dec
sub
cltd
push
js
dec
mov
mov
pushf
es
ljmp
cli
out
mov
push
xchg
push
xor
mov
sub
inc
jmp
stos
sub
sbb
outsb
iret
test
daa
xor
and
sub
fisubrl
ret
xchg
inc
xor
lods
mov
push
fs
cmp
out
jbe
dec
xchg
clc
fwait
lret
xchg
mov
jp
out
or
or
mov
jno
adc
mov
imul
subps
in
mov
fs
push
mov
pop
mov
adc
int3
jmp
lret
lret
xchg
and
mov
cwtl
add
xor
mov
mov
sub
xchg
adcl
in
xchg
bound
push
fsub
bound
push
mull
les
dec
cld
dec
fisttps
push
dec
call
or
scas
jge
insl
or
mov
jg
adc
aas
or
rcll
push
jo
pop
jnp
les
inc
inc
mov
in
or
fistpll
js
sub
movsb
pop
test
mov
and
sarb
loope
inc
jne
call
in
mov
xchg
mov
mov
and
fimuls
mov
enter
xor
insl
ret
aas
push
sub
mov
cmpsl
pop
scas
xchg
ja
add
test
int
jge
xor
outsl
jmp
insb
pop
mov
rcrl
pop
out
push
lret
pop
loopne
les
pop
mov
sahf
or
aaa
ret
idivb
jmp
outsl
jmp
xor
push
push
pop
fstps
push
imul
pop
les
cmp
orb
cs
xchg
mov
jecxz
mov
insb
push
in
rclb
outsb
jns
rolb
cli
mov
inc
and
mov
in
es
stos
lahf
mov
ret
lcall
inc
scas
mov
aad
arpl
lahf
fwait
lods
test
iret
ret
call
and
iret
mov
rcl
out
mov
sub
decb
stos
xor
ret
fs
mov
cmpsb
xor
adc
add
lret
cmpsb
pop
mov
ret
xor
ljmp
push
rcr
and
loop
fs
mov
xor
pop
leave
repnz
addl
pop
cmp
in
out
xchg
pop
movsl
xor
lods
xor
inc
mov
call
or
mov
aaa
stos
aad
xor
in
jge
sub
adc
fisubl
jl
lahf
xor
loop
inc
push
xrelease
cmp
mov
cli
mov
gs
xchg
in
jne
enter
lret
ret
xor
jae
mov
in
lahf
int3
xchg
jbe
es
fnsave
dec
add
dec
xchg
lret
out
mov
or
cltd
mov
dec
push
inc
jne
sarl
cli
jecxz
mov
xchg
ret
jmp
or
mov
pop
bt
icebp
mov
pop
in
lds
fidivrl
mov
lahf
xor
out
mov
sub
lea
pop
clc
mov
in
mov
mov
dec
cli
dec
js
mov
bsf
adc
out
sbb
subl
in
xor
cmpsb
mov
addr16
je
clc
push
cmc
inc
je
hlt
pop
lods
fcomi
mov
and
out
testb
lea
adc
loopne
test
xor
mov
dec
push
sbb
mov
inc
add
es
inc
and
add
cmpsb
xchg
cmp
ret
scas
movsl
or
sub
xchg
ss
je
inc
shll
ud2
sub
inc
sub
cmpsb
loop
mov
cmp
add
xchg
lret
pcmpgtb
ja
add
loop
cs
add
mov
rclb
cmp
pop
jl
mov
mov
rcrl
call
lea
mov
gs
jns
test
fnstcw
pop
jo
and
enter
xchg
xchg
scas
push
jg
lret
clc
mulb
push
adc
inc
sub
in
stos
or
pop
dec
lods
jg
ret
adc
dec
sti
adc
int
jmp
fs
xchg
pop
xchg
sub
xchg
xor
stos
xchg
je
cmc
es
addr16
stos
pop
sbb
pop
sahf
mov
push
sbb
inc
add
cmp
or
xor
insl
sbb
sbb
ljmp
aaa
ja
jns
dec
shlb
stos
mov
notl
icebp
lahf
adc
fwait
nop
mov
pop
lcall
aam
pop
mov
pop
cmp
dec
mov
inc
mov
call
adc
adc
jno
add
out
aam
and
negl
jmp
mov
and
push
aas
jne
stc
scas
xor
ja
inc
pop
out
push
outsb
and
mov
mov
rep
and
lock
dec
bound
mov
adc
mov
push
ret
mov
xor
pusha
pop
out
ss
or
mov
pushf
mov
mov
and
mov
rolb
mov
ljmp
sbb
daa
mov
mov
sub
jnp
in
mov
dec
int
mov
outsl
cwtl
jae
add
lret
popa
push
jo
in
out
out
cmp
and
rcrb
cmpsl
push
and
aas
and
mov
pop
fldenv
jle
popa
mov
inc
lods
gs
sarb
push
es
pop
mov
sarl
and
jns
push
subl
push
lock
sbbl
pop
mov
cltd
int3
cmpsl
or
testb
stos
mov
push
push
pop
popf
lods
aad
add
sti
and
cwtl
scas
subl
jns
sbb
xchg
mov
shrl
gs
or
add
lret
dec
das
dec
inc
int
movsb
sar
inc
mov
mov
out
aad
or
dec
xchg
cs
sbb
cmp
fstpl
jbe
mov
test
add
mov
inc
cltd
mov
sbb
das
ljmp
and
and
fsts
clc
movsl
jae
jmp
aaa
bnd
mov
jb
jae
sbb
dec
insb
int
icebp
test
scas
inc
push
dec
mov
rcrb
adc
xchg
cmp
adc
xchg
int
cmp
mov
outsl
scas
jbe
scas
and
sahf
and
imul
and
jle
pop
outsl
mov
and
bound
add
jno
jp
out
dec
cmp
jmp
xchg
in
addr16
stos
pop
fists
notb
repz
fwait
call
nop
xchg
fwait
or
xchg
in
stos
cmpsl
cld
mov
aaa
dec
arpl
push
out
push
xor
in
movsb
fdivrl
sahf
push
ds
sbb
loope
cwtl
jno
std
movsb
into
pop
xor
js
or
push
add
clc
push
sub
in
shll
jb
mov
push
inc
push
adc
jb
in
js
and
pushf
inc
mov
sahf
sahf
scas
sbb
xchg
dec
push
inc
jp
addr16
sahf
jne
pop
inc
sub
push
and
pusha
jmp
cmp
push
or
push
mov
mov
xor
inc
xchg
leave
mov
xchg
pop
int3
mov
jae
xor
cmc
dec
cltd
or
rcrl
lret
mov
stc
adc
mov
cld
arpl
in
fildl
xlat
fisttps
add
cmp
jae
mov
aad
pop
les
cmp
and
sub
sahf
xchg
adc
stc
cltd
repz
mov
sub
sub
xor
fistl
dec
fcoms
jno
fsubs
mov
mov
stc
insl
imul
arpl
ret
sahf
leave
inc
sub
shlb
loop
or
sbb
xchg
cltd
xchg
lods
sbb
int
push
xchg
or
inc
std
sbb
push
insl
shr
lods
pop
loope
push
shl
pop
out
dec
cmp
jg
fs
out
and
mov
cmp
rolb
fcoms
div
lret
add
dec
in
fiaddl
in
cwtl
roll
stos
sbb
pop
inc
add
lret
loop
pusha
call
es
subb
in
out
mov
fnstsw
jge
out
xchg
xchg
xlat
xchg
sub
jb
cmpsb
cld
dec
test
sub
movsl
sbb
push
mov
lea
mov
lret
mov
nop
out
or
es
ja
das
leave
sub
jbe
pop
repz
lcall
ret
fsts
xchg
jo
call
dec
mov
mov
lea
push
mov
sub
mov
outsl
pop
movsb
test
fs
xlat
loop
xchg
and
dec
sbb
push
cmp
mov
add
add
jp
orb
xchg
insb
pop
shll
cmpsb
add
pop
lock
push
adc
into
pop
mov
add
jne
mov
xlat
push
fwait
push
je
dec
cmp
clc
xchg
mov
arpl
lcall
test
xor
xchg
inc
adc
in
or
out
push
push
lods
push
cli
and
ret
into
int
add
jno
cmpl
shlb
add
icebp
xor
jbe
ret
sub
jp
outsl
jo
push
xchg
loope
repz
cli
in
xchg
cmpsb
hlt
cmp
fdivr
push
jbe
sbb
mov
cwtl
gs
insl
sbb
sbb
inc
xchg
imul
mov
subl
xlat
enter
in
xlat
aad
test
sub
or
push
sarb
cmp
movsl
mov
mov
test
xchg
mov
ret
cmp
repnz
push
push
int3
adc
insb
cmp
inc
adc
mov
lret
mov
push
loop
nop
and
mov
jmp
das
mov
push
ds
pop
or
inc
mov
or
sar
pop
shlb
or
stos
jp
inc
xorl
adc
repnz
cs
clc
lret
outsb
or
xchg
jnp
mov
enter
ret
enter
pop
andb
dec
imul
jmp
adc
jl
rclb
lret
testl
shrl
or
rcrl
stos
inc
adcl
aas
mov
ret
and
daa
mov
jae
leave
lret
jb
xor
dec
mov
outsb
repz
test
mov
and
inc
and
les
ja
lods
addr16
push
push
add
mov
push
fistl
and
shlb
jo,pt
data16
js
adc
outsl
stc
test
push
repnz
dec
into
gs
dec
mov
jb
mov
dec
ja
push
sbb
daa
test
push
mov
fwait
inc
xor
pop
push
imul
clc
mov
int3
in
adc
xor
lcall
lods
movsl
stos
or
cs
adc
mov
out
ret
imul
loop
jno
lret
dec
jecxz
xlat
inc
mov
or
inc
xlat
test
cs
ljmp
pop
or
and
loopne
jl
mov
pop
push
cmp
jmp
jbe
jp
test
add
imul
sbb
mov
hlt
clc
das
arpl
dec
shr
xor
mov
push
lahf
fs
in
mov
xorb
dec
lods
or
lods
mov
out
dec
outsl
dec
push
in
mov
scas
xchg
push
xchg
add
push
rcrl
outsl
fisubrl
std
ret
dec
push
sub
out
leave
sub
mov
lods
jnp
mov
sub
sarb
int3
or
or
scas
mov
outsl
xor
repz
mov
adc
sahf
jl
std
mov
fucom
push
mov
popf
js
sahf
push
and
les
or
ffree
stos
stos
pop
out
sub
jl
out
cs
mov
fisubl
fnstsw
imulb
cmp
xor
aaa
push
insb
out
push
loope
lea
je
out
lcall
inc
lahf
iret
daa
cld
mov
jo
call
sub
add
xchg
fmuls
sbb
sub
out
sbb
mov
or
fsubs
push
xchg
mov
mov
push
pop
dec
lea
lea
lahf
sbb
push
mov
add
sub
sbb
cmp
xor
xor
stc
shll
imul
pop
pop
pop
and
or
adc
xor
aaa
xlat
xorb
lds
mov
mov
bound
xchg
lds
dec
mov
and
jle
pop
testl
fisubl
subb
rorb
scas
pop
dec
repnz
repz
iret
imul
dec
mov
jge
incb
frstor
jne
scas
aas
test
int
jo
cwtl
adc
cmpsl
std
sbb
mov
push
popa
js
test
ds
inc
push
push
xchg
fbld
mov
stos
aaa
les
mov
push
adc
mov
or
mov
or
shr
leave
stos
and
scas
push
arpl
cmp
mov
aad
xor
push
push
jmp
fadd
call
stos
push
pop
stos
fistpll
pushf
mov
lods
add
and
mov
scas
cmp
xor
js
in
xchg
mov
insb
fdivl
cmp
cltd
and
into
or
push
loope
into
fistpll
cmc
scas
add
mov
or
sbb
inc
cs
sti
inc
jae
sbb
icebp
mull
lods
mov
jmp
sbb
popf
test
pusha
sub
pop
xchg
out
divb
cld
push
mov
mov
test
decl
cli
pop
rcl
out
test
cltd
add
lldt
xchg
pop
lcall
cmpsl
paddsw
mov
fcmove
mov
imul
ljmp
mov
mov
cltd
mov
mov
arpl
test
out
inc
xchg
xor
ja
lahf
clc
push
xchg
test
cmp
and
xor
imul
popf
out
or
int3
pop
data16
lret
cmp
out
push
and
xchg
popa
inc
sub
roll
xlat
negb
mov
xorb
pop
xchg
sbb
cmp
test
into
fsubl
popf
push
xchg
icebp
mov
int3
cmpsb
cmp
add
dec
mov
cmp
cmpsl
mov
loop
sahf
pop
gs
sub
shll
cmpsb
mov
movntq
mov
das
insl
jge
fbstp
push
dec
mov
jg
sub
adc
out
xor
cli
cmc
rclb
jg
popl
movsb
xchg
add
int3
xchg
and
lahf
inc
xor
mov
and
lea
cli
fldenv
fiaddl
pop
pop
stos
mov
shll
dec
cvttps2pi
lods
std
dec
push
dec
sbb
ljmp
cli
jp
or
outsb
lret
cld
lea
dec
repnz
stos
inc
sub
insl
sti
insl
flds
scas
sti
inc
fistl
jne
jnp
add
sub
je
out
fnstcw
andl
cmpsb
cmc
std
mov
rorb
inc
fcomi
fs
adcb
jno
add
fdivrl
xchg
xor
add
push
outsb
push
cmp
rcrl
mov
push
cmp
pop
inc
mov
or
popf
xor
pop
or
and
int
cmovno
fdivrs
dec
mov
and
dec
pop
mov
xchg
btc
xlat
sbb
addr16
mov
int3
fildl
cmpsl
jns
xor
sub
fs
fbld
push
in
int
dec
sub
inc
mov
cmpsb
cmp
mov
push
mov
pop
out
xchg
push
sub
stos
sahf
xor
mov
mov
and
adc
bound
mov
ja
xlat
jno
les
aas
sbb
and
inc
push
xchg
push
outsl
out
add
mov
insb
push
sub
les
stos
popf
fadds
add
ds
cmp
push
mov
sub
dec
shl
mov
cmp
mov
push
call
xchg
shll
jno
dec
mov
dec
adc
cmp
sbb
fwait
jnp
pop
mov
cli
and
sbbb
pop
repnz
push
sub
or
es
addl
jb
or
jns
addr16
cmp
sub
dec
pop
mov
push
sar
ljmp
or
fsubr
push
and
pop
repz
inc
or
pop
and
popa
pushf
es
clc
mov
in
adc
xchg
mov
add
dec
fildl
jb
push
fisubrs
push
inc
mov
inc
mov
call
fcoml
pop
imul
hlt
popf
mov
inc
xchg
nop
nop
push
or
sbb
fisubs
ds
lods
dec
or
dec
sbb
xchg
bound
fldl
cmp
clc
pop
jp
fdivrl
pop
jp
and
out
rcrl
movsl
leave
xchg
iret
aad
cltd
cmp
xor
jle
mov
cmp
out
sbb
leave
xor
jnp
or
mov
fs
aad
pushf
insb
and
lods
and
testb
pop
cmp
dec
mov
xor
leave
dec
sbb
dec
sbb
adc
cmp
pop
inc
mov
je
add
int3
mov
cwtl
cmpsb
rorl
enter
lods
dec
bound
arpl
xorl
inc
mov
into
mov
mov
rclb
pop
out
daa
mov
xchg
outsl
push
clc
sahf
cmp
push
test
push
clc
shll
push
loope
shlb
sti
sbb
cli
mov
xchg
idivb
imul
jmp
dec
and
sub
push
pop
dec
loope
hlt
xor
pop
cmpsl
das
mov
sub
sbb
push
xchg
push
inc
or
pop
cwtl
inc
push
imul
mov
ret
mov
stc
dec
cmc
cli
pusha
add
lods
fldcw
leave
inc
sub
pushf
popa
xor
xlat
sbb
int
cmc
dec
int
or
sbb
mov
cwtl
cmc
test
jae
xor
shl
scas
or
repnz
ds
inc
jl
cmpsb
sbb
lods
mov
ja
jbe
insl
mov
cmp
test
or
jecxz
push
cli
out
pop
pop
lahf
inc
test
xchg
int3
into
outsl
jg
fcomp
or
add
push
push
sub
pushf
lahf
pop
pop
mov
dec
pop
fdivrl
pop
jp
xchg
pop
scas
fnclex
jl
fidivrs
push
je
fdivl
aam
shll
clc
imul
jl
jns
pop
test
push
or
aas
fidivrl
inc
insb
insl
xor
sub
jg
adc
push
shll
movb
out
dec
sbb
test
dec
lea
xchg
inc
pusha
pop
add
and
sub
lock
lret
cmpsb
outsb
or
imul
xlat
mov
mov
xlat
nop
in
cmp
hlt
cwtl
or
jl
add
adcl
insl
xor
add
adc
mov
loop
stc
sbb
xor
pushf
stc
pop
inc
insb
or
mov
lods
das
shrb
lret
mov
and
adc
aad
lods
xchg
jno
pushf
in
das
ss
movsl
pop
lods
pop
xchg
loop
iret
cmc
adc
push
js
fistpll
jle
bound
in
add
pusha
mov
pop
sub
mov
sub
adc
shr
lods
sbb
xchg
pusha
push
scas
repz
nop
in
dec
xor
aas
scas
ficomps
rcrb
fsts
sbb
sbb
aad
or
stos
inc
sub
dec
pop
mov
xor
enter
push
out
cmp
cmc
add
mov
test
jae
xchg
mov
aaa
or
sub
add
pop
ljmp
fsubr
xor
cwtl
jl
repz
pushf
push
jl
dec
mov
push
push
cmc
popf
loop
int3
neg
dec
mov
popf
sub
cmp
sub
scas
mov
out
scas
dec
sub
das
or
mov
loop
mov
dec
movsb
dec
jge
or
hlt
int
xchg
dec
dec
or
into
mov
fists
fwait
or
test
inc
nop
add
mov
jne
xlat
scas
lods
and
movsb
enter
sbb
push
lods
pop
dec
sbb
or
rcl
xchg
out
xor
sti
inc
xor
sbb
aaa
fs
subl
mov
cmp
pusha
mov
insb
test
and
mov
mov
out
push
clc
fdivrs
pop
js
xchg
cmpsl
lea
aam
push
jne
lea
sbb
jg
filds
test
int3
imul
pop
mov
cwtl
lock
mov
adc
call
cmc
sub
or
mov
jecxz
sahf
adc
fs
lods
and
rep
push
mov
mov
jge
mov
mov
rol
nop
adc
testb
and
jg
inc
aas
in
push
loope
cli
adc
loopne
inc
rorl
jns
scas
mov
inc
add
int
push
fsubr
jne
out
cmc
sahf
pop
dec
test
sub
pop
fbld
lahf
inc
xor
add
int3
repnz
mov
loope
add
sub
add
fwait
repnz
test
mov
xor
push
push
leave
sbbb
xchg
mov
mov
flds
mov
icebp
outsb
lret
adc
outsl
fiaddl
repz
xor
gs
loope
and
or
xorb
imul
cmp
aam
repnz
sbb
stos
enter
push
movsl
leave
lods
add
ljmp
jl
leave
mov
divb
cmc
fs
xchg
dec
push
adc
shrb
jo
and
or
sbb
inc
popf
lods
stc
mov
out
fidivrs
arpl
js
dec
imul
push
out
xor
adc
jg
inc
push
inc
loope
cmp
dec
mov
jne
xchg
mov
sbb
mov
add
xlat
fs
addb
pusha
jmp
pop
arpl
dec
test
rclb
mov
loope
push
repz
or
iret
stc
movb
cmp
les
shl
dec
or
cltd
sbb
and
dec
aaa
leave
inc
jnp
mov
adc
jae
inc
iret
mov
ret
dec
xor
xor
jmp
push
sub
in
and
xchg
ja
in
xchg
pusha
xchg
push
inc
loop
pop
mov
xchg
shll
hlt
popa
or
scas
popa
jo
or
jns
scas
loop
leave
xchg
sub
xor
pop
dec
aam
or
lods
jo
jmp
stos
or
out
xchg
mov
scas
int3
sbb
pop
inc
xchg
cmpsb
stos
or
stos
xor
fcmovbe
ljmp
adc
jo,pn
cmp
stos
test
xchg
add
pop
outsb
leave
movb
mov
mov
icebp
mov
pop
sub
into
testl
pop
jmp
shl
mov
push
cli
adc
push
push
sbb
loope
ficoml
sbb
xchg
out
pop
lcall
pop
ret
testb
xor
pop
adc
mov
sbb
insl
adc
mov
lea
loopne
out
mov
xchg
sahf
pop
mov
cmp
dec
mov
out
add
mov
gs
and
ja
stos
notb
xchg
rclb
rorb
in
call
mov
daa
enter
or
inc
sub
pop
sbb
and
pavgb
shrb
insb
fcompl
push
push
cwtl
fmuls
lahf
dec
jno
and
das
das
pop
sbb
mov
shll
mov
push
or
push
ficompl
mov
aam
inc
dec
pcmpeqw
insl
das
nop
inc
ljmp
and
cmpsb
fs
sub
pop
mov
and
hlt
icebp
test
and
or
loope
test
and
jae
mov
xchg
es
sbb
rolb
lods
adc
fsts
push
das
xor
mulb
ret
cli
xchg
fs
dec
shlb
sbbb
jb
push
lcall
dec
gs
mov
pop
scas
mov
mov
push
dec
stc
jle
mov
add
pop
ja
push
jb
xor
rol
bnd
lret
push
cwtl
xchg
repnz
lods
mov
jnp
mov
jmp
or
xchg
testl
scas
jle
mov
xchg
mov
jecxz
mov
and
or
and
mov
inc
pop
cmpsl
sub
pop
jbe
repz
and
popf
inc
adc
int
inc
mov
adc
and
je
xor
sub
hlt
outsb
push
push
mov
mov
cld
mulb
dec
inc
imul
cli
rcrb
mov
push
push
sub
aam
mov
pusha
cmp
in
and
divl
nop
mov
dec
jg
testl
sub
or
sub
sbb
scas
sub
lods
jo
ds
movsb
jmp
sbb
jecxz
sub
inc
cltd
out
and
xchg
jge
leave
leave
cltd
xlat
pop
bound
sbb
ja
stos
std
ret
xor
mov
jp
pop
xor
xchg
jmp
mul
outsb
mov
jmp
movsl
movsb
pusha
std
jne
xor
jecxz
sub
sarb
mov
dec
jl
mov
sbb
mov
lea
mov
popa
cmp
fadd
mov
jno
push
mov
pop
or
dec
outsl
stos
mov
shufps
mov
mov
stc
xchg
jmp
aad
xor
jmp
call
dec
lcall
test
sahf
inc
xor
and
mov
in
les
cmp
lods
call
stc
lock
mov
mov
adc
movsb
xor
and
stos
add
cmpsb
pop
inc
jnp
roll
jl
arpl
and
and
jne
mov
imul
pop
lods
mov
loope
sub
and
add
dec
movsb
or
pop
out
mulb
hlt
clc
imul
jnp
mov
pop
jo
cmp
cmp
ficoms
outsl
outsl
shrl
inc
clc
scas
cltd
shl
aam
sbb
add
xchg
mov
aaa
dec
mov
push
xchg
xor
or
add
dec
jnp
and
in
cmp
cmpsl
mov
fisubs
fcoml
mov
aaa
jo
out
orl
pop
inc
or
sub
fs
test
push
scas
insl
lret
cmp
or
mov
xlat
jnp
icebp
add
push
push
dec
stc
imulb
mov
cmpsl
or
cmp
push
pop
arpl
in
pop
adc
adc
or
or
dec
data16
into
dec
mov
add
add
lods
insb
pop
test
mov
insb
cmpsl
adcl
rclb
sbb
adc
lret
ret
jmp
stos
int
xor
sbb
push
add
xchg
ds
pop
xchg
mov
movsl
daa
sbb
push
push
fsubs
sbb
in
push
or
cwtl
push
jno
lcall
scas
inc
add
lcall
xchg
repz
pop
adcb
hlt
mov
lcall
outsl
push
push
adc
scas
cs
and
enter
orb
adc
test
ret
jns
lods
sbb
add
pop
out
and
cwtl
pop
scas
adc
or
cwtl
rolb
cmp
mov
repz
repz
daa
jl
jnp
gs
inc
mov
push
inc
in
sbb
xor
push
mov
push
mov
fcmovne
or
js
stc
and
sub
sahf
add
lods
dec
cmpsl
add
inc
out
sti
int3
je
mov
mov
aad
push
lret
es
setbe
mov
push
cmpsl
and
fimull
jne
daa
in
lahf
xchg
pop
pushf
ret
mov
mov
add
mov
fcoml
add
or
cmp
pop
mov
jmp
std
adc
inc
mov
xor
cmpsb
shll
mov
sub
pusha
cmc
fcoml
jbe
sti
lods
push
pushf
hlt
inc
adc
xor
into
mov
nop
inc
es
insl
sahf
repnz
pusha
test
mov
mov
in
sbbl
xchg
inc
fwait
ja
in
jo
mov
pop
das
addr16
inc
shlb
pop
adc
sub
cmpsl
dec
incl
add
add
push
jmp
inc
lcall
cs
mov
or
inc
pop
int3
fbld
xchg
jecxz
sub
in
xchg
sbb
cwtl
xchg
repnz
leave
push
pop
or
mov
repz
jmp
cmc
sar
nop
ficoms
jno
fisttpll
sbb
or
push
ret
pop
test
push
fstpt
in
fstl
aaa
loop
mov
lods
mov
jno
int3
dec
push
cmp
push
adcb
andb
inc
mov
aam
movsb
rorb
mov
cmpsb
and
sub
push
jge
adcb
lret
mov
idivb
push
push
popf
jb
or
data16
mov
cmp
add
negb
mov
fistl
js
adc
push
pop
or
cld
dec
scas
inc
iret
ja
sahf
inc
mov
cmp
mov
push
or
sarl
jns
jae
test
sub
cmpsl
cmp
pop
call
repnz
pop
xor
fwait
sub
cmp
mov
xor
das
mov
jne
cltd
imul
pop
and
push
lcall
cmpsl
push
pop
cmp
arpl
mov
pop
test
cmc
jg
mov
push
push
jmp
sbb
lahf
loopne
dec
test
add
loopne
xor
pop
pop
and
push
xchg
mov
and
push
testb
ss
sub
rcll
mov
push
or
fs
dec
sarl
addr16
mov
repz
pop
jo,pn
mov
outsl
rolb
fstpl
cmp
pop
loop
mov
pop
cmp
dec
inc
in
inc
adc
mov
sub
adc
inc
xor
stc
lcall
and
mov
push
lret
insb
push
aam
int3
push
ja
jae
sbb
add
mov
loope
xor
nop
iret
stos
decl
xor
jmp
or
push
push
testb
insl
js
mov
fidivrl
pushf
cli
pop
jmp
int
test
arpl
sub
jne
jecxz
daa
push
push
clc
popw
addb
cwtl
sbb
sbb
cmpsl
stos
mov
xchg
fs
jl
insb
add
fwait
inc
lock
inc
cmp
jle
or
cmp
fsubrs
filds
add
and
dec
and
push
sbb
push
jmp
jnp
sub
mov
cmp
xor
loop
ja
and
push
les
movsb
int
jo
lcall
push
inc
jmp
add
or
jnp
inc
add
mov
mov
dec
sbbl
popa
out
test
repnz
cltd
pop
and
push
jns
pop
mov
ret
dec
out
push
mov
neg
or
mov
jle
movsb
push
xor
xlat
aam
fnsave
pop
cmp
pop
es
stc
mov
cmpsl
jmp
roll
faddl
iret
outsl
jo
cmp
push
int3
sbb
mov
xor
lea
mov
pop
daa
rcll
dec
fisttps
mov
inc
lret
and
lahf
cmpsb
inc
sub
sub
inc
sbb
dec
sub
inc
sbb
lea
cwtl
mov
sti
cltd
lods
test
adc
fbstp
das
fstps
push
cmp
mov
test
mov
add
cmp
pop
sub
push
jecxz
jp
xor
jae
mov
and
fistps
push
jno
testb
pop
xchg
test
dec
outsl
shrb
pop
add
cltd
push
lret
loope
xor
cmp
add
popa
adc
lock
mov
xor
or
movsb
mov
lea
jp
in
pop
inc
pop
and
cmp
imul
jae
xlat
fildll
push
in
sub
stos
push
sub
mov
shlb
fwait
inc
dec
push
dec
sbb
hlt
sbb
es
xchg
dec
ss
sub
int
xchg
scas
les
adc
push
jle
jo
cltd
fcoms
pop
cmpsb
xchg
sub
sbb
cmpsb
xor
mov
hlt
nop
mov
inc
arpl
jnp
outsb
add
int3
call
data16
pop
push
and
pop
lcall
and
xchg
enter
int
inc
lea
add
and
fbld
jp
mov
sbb
enter
or
call
scas
adc
push
mov
cmp
out
fidivrl
or
and
push
fmuls
in
add
cwtl
jb
ficoml
repnz
bound
dec
push
cmpsl
insb
mov
xchg
dec
loop
adc
ficomps
out
push
xor
test
pop
sub
dec
scas
mov
mov
adc
scas
fucomip
je
add
jbe
int
lock
adc
xor
out
or
dec
jmp
push
add
outsl
sub
out
jns
mov
dec
mul
xchg
push
inc
xor
and
mov
insb
xor
add
movsb
cmp
mov
iret
insl
or
jb
dec
out
mov
repnz
filds
lods
push
fisubrl
iret
cmp
test
and
pushf
lods
hlt
imull
fnstsw
mov
jecxz
pusha
pop
and
add
xchg
and
mov
ds
cmp
push
cmpsl
or
outsb
or
lods
lahf
scas
call
mov
dec
in
cmp
fcmovnb
or
leave
or
xchg
or
lods
pop
dec
addb
mulb
cld
imul
inc
and
mov
or
push
inc
iret
add
mov
ss
shll
jo
add
mov
scas
mov
stc
ret
mov
xchg
gs
adc
imul
lret
mov
and
test
sbb
fsts
stos
aad
testb
repz
stc
xchg
testb
sub
cmp
mov
iret
ret
dec
lea
xlat
sbb
imul
daa
fcompl
lcall
gs
js
mov
dec
sub
inc
sub
cli
daa
inc
and
mov
je
add
adc
mov
dec
sti
xor
outsl
dec
ret
and
inc
and
jle
cwtl
std
bound
jecxz
test
mov
out
sub
jg
leave
ret
dec
pop
add
out
xchg
pop
mov
sbb
or
jo
push
call
pop
fsin
adc
xchg
mov
popfw
leave
mov
stc
or
pop
adc
mov
addr16
adc
mov
xchg
outsl
sbb
lock
pushf
scas
fsubl
mov
fmuls
xlat
mov
pusha
inc
sti
not
jnp
fstps
cs
roll
fists
daa
fwait
or
xor
xchg
cltd
xor
push
enter
dec
mov
xchg
push
sbb
dec
mov
mov
into
inc
ljmp
mov
jno
push
movsb
mov
mov
mov
mov
mov
fwait
arpl
shl
leave
push
in
inc
and
add
and
mov
fwait
push
mov
es
mov
ret
aad
stos
and
inc
adc
inc
xchg
add
cs
cs
jge
mov
sub
push
jo
xchg
or
add
lret
and
pop
test
mov
std
shr
mov
push
xor
icebp
call
imul
lods
xchg
sub
aam
stos
rorb
jl
mov
loope
xchg
xchg
dec
repz
push
jo
lret
mov
mov
cwtl
cmp
jmp
sbb
ljmp
pop
notl
xchg
pop
imul
rclb
xor
adc
dec
jb
cmp
iret
mov
leave
sbb
and
fstpl
loopne
adc
or
lret
mov
out
inc
cmp
mov
adc
mov
dec
stos
pushfw
movsb
mov
loopne
test
shrl
cmp
mov
xchg
enter
ret
cli
movsb
fnstsw
xor
push
cmp
and
or
xor
push
dec
mov
xchg
inc
in
std
xchg
hlt
xor
lds
mov
xchg
jg
mov
js
mov
sbb
cmp
icebp
jbe
int
popa
xor
add
mov
jmp
call
stc
rorl
inc
rorl
add
out
aaa
lea
pop
pop
fcoml
std
je
dec
les
arpl
adc
xchg
in
mov
and
nop
aad
lea
push
push
or
cs
inc
xchg
je
adc
push
and
and
mov
repnz
mov
cmpsl
and
aaa
loope
xchg
jp
pushf
mov
sub
sub
inc
pop
ss
jb
in
repz
push
inc
cli
dec
test
cmpsl
inc
jmp
add
andb
pop
pop
in
stc
push
shlb
subl
pop
jp
imul
adc
sbb
adc
or
mov
aas
sarl
repnz
out
jae
mov
lret
cmp
fwait
push
cmp
jle
add
out
pop
mov
mov
push
aaa
popf
jmp
test
dec
sbb
mov
mov
push
out
test
push
addb
es
sbb
inc
imul
lds
fucom
sub
repnz
rcl
mov
out
idivb
jb
in
out
inc
daa
inc
mov
cltd
inc
testb
pop
and
stos
jmp
aas
addr16
inc
jle
push
cwtl
inc
fs
shlb
pop
and
mov
add
imul
push
pop
out
dec
loope
and
sub
jg
out
sub
xlat
and
mov
mov
dec
or
test
sub
btr
mov
sub
cmpsl
loopne
push
cwtl
insl
adc
sub
and
insl
addb
xor
sub
stos
adc
or
pop
push
pushf
mov
lea
mov
repnz
sub
xchg
push
shrl
neg
loop
into
aad
loopne
xchg
les
push
enter
jb
xor
outsl
jns
pop
inc
rclb
in
and
into
inc
mov
pop
adc
mov
dec
pop
add
test
outsl
pop
out
sbb
inc
cltd
add
icebp
mov
sti
ds
int3
aaa
inc
mov
sub
iret
int
push
jg
add
add
in
cmpsl
xchg
fmull
dec
lods
insl
stc
dec
inc
iret
popf
inc
pop
ljmp
imul
sbb
int
repnz
pop
xor
sbb
and
je
push
push
sub
pushf
leave
cmp
in
xchg
sar
clc
add
mov
mov
inc
adcb
lahf
xchg
pop
test
cmp
lret
sbb
add
out
jns
cmp
xchg
jge
fsubs
inc
pop
outsl
mov
jmp
or
out
mov
adc
xor
daa
sbb
xchg
add
repz
sbb
add
les
xor
icebp
call
or
adcl
testl
adc
fiaddl
enter
adcb
cld
incb
xchg
fbld
shll
and
cwtl
xchg
daa
push
into
adc
test
sbb
lds
hlt
pop
data16
repz
cmc
add
bound
lods
stos
jl
pop
jns
add
xor
call
sub
push
icebp
inc
les
cltd
sub
imul
sub
fldenv
aad
mov
and
aam
xchg
loopne
lea
or
mov
sbb
lds
test
sbb
and
loop
mov
or
in
ds
rcll
xchg
ljmp
cmpsl
xchg
pop
push
arpl
test
gs
sbb
jb
ret
xchg
in
pop
mov
mov
inc
pushf
rcrb
sub
mov
ss
nop
repz
btc
adc
adc
and
fsubl
andl
mov
jne
mov
mov
mov
cmp
sbbb
movsb
sbb
mov
in
cmp
jp
loopne
daa
pop
out
das
into
sbb
adc
push
je
push
sbb
in
push
bound
jo
xor
inc
jle
fs
inc
pop
push
into
cmp
mull
cmp
cmc
lds
xlat
pop
in
xor
push
sub
jl
test
shlb
cli
outsl
sub
xchg
and
dec
mov
inc
or
push
outsb
cmp
xor
mov
or
mov
loopne
lock
loopne
mov
ljmp
ds
mov
shrd
pop
jge
sti
mov
rclb
leave
lock
cmp
mov
mov
cmp
data16
pop
lea
dec
inc
into
push
fadds
jbe
mov
jns
and
push
mov
sbb
pop
adc
push
sub
rclb
test
push
jle
push
shll
dec
add
push
ror
xor
clc
shrl
pushf
and
mov
mov
add
xor
stos
subl
mov
xchg
cli
cltd
imul
repz
dec
mov
into
gs
cmp
clc
out
pushf
unpcklps
adc
cmp
andl
ficoml
mov
insb
pop
out
push
movsb
rcl
fmuls
das
xchg
or
lods
xor
aaa
lcall
shufps
stos
adc
mov
in
and
jg
call
repnz
adc
mov
mov
icebp
fnstcw
stos
sub
leave
jns
pop
cmpsb
rclb
repnz
xchg
je
arpl
clc
xchg
adc
adc
popa
inc
pop
dec
mov
inc
decl
ret
gs
cmp
xor
mov
push
js
das
xchg
push
jp
jb
jp
jmp
mov
leave
testl
lods
stc
mov
lcall
insl
lock
jge
inc
stos
cmp
cli
loope
mov
pop
sub
cmp
xor
pop
xchg
roll
mov
loop
inc
mov
inc
leave
cmp
repnz
in
jno
mov
add
cmp
cs
jnp
fiaddl
jo
clc
ret
cmp
fiadds
test
pusha
dec
cltd
lret
jg
sub
clc
mov
cmpl
add
es
and
jecxz
mov
loope
decb
dec
dec
add
aam
popf
test
sbb
ret
dec
iret
jecxz
mov
push
stc
xor
jp
mov
cmp
xchg
mov
pusha
or
js
mov
ficomps
pop
add
int
jl
jecxz
or
adc
dec
xchg
std
out
movsb
push
mov
leave
in
data16
insl
es
repz
mov
xlat
nop
loopne
jnp
out
push
jo
or
jp
inc
mul
ja
aad
sbb
xor
jmp
movsb
xor
pushf
add
inc
insb
jne
lock
stc
pop
push
imul
mulb
loop
gs
out
hlt
cmp
ficomps
mov
bound
outsl
jne
dec
or
js
fsubs
adc
ret
gs
dec
shlb
mov
xor
fisubrl
loope
dec
insl
rcrl
ljmp
sti
dec
js
test
and
ja
sti
pusha
imulb
aam
outsl
daa
push
xor
ret
xchg
sarb
aam
cmp
out
jecxz
sub
xlat
mov
out
lock
push
es
sarb
xor
lret
xchg
loope
shlb
testb
cmpsl
push
mov
sub
imul
mov
jecxz
and
xchg
cmc
into
adc
stos
ja
popa
or
adc
test
pop
jge
xorl
lds
mov
fs
mov
or
sbb
push
or
pusha
and
jno
das
xchg
sub
ret
cmc
and
dec
pop
and
xor
xor
shrl
insb
add
mov
fstpt
mov
mov
jge
cmp
or
pop
cltd
ljmp
mov
aaa
push
in
insb
xchg
mov
popf
mov
decb
mul
cmp
mov
aas
daa
pop
movsl
les
and
cmp
mov
sbb
ds
das
das
and
stc
sub
addr16
add
adc
xacquire
dec
faddl
sahf
jbe
dec
movsb
out
sbb
or
call
sbb
mov
inc
push
js
dec
mov
inc
xor
cmpsl
shlb
jmp
ss
cs
leave
andb
mov
ret
mov
and
movsl
hlt
sbb
pop
pop
orb
sub
and
jne
xchg
aaa
jae
add
add
jo
movsl
pop
lret
cs
mov
push
imul
lock
mov
or
sub
dec
lods
stos
movsb
adc
mov
push
pop
cwtl
jmp
adc
sub
fcomps
sbb
mov
jae
mov
or
rcrb
mov
add
xor
jge
jmp
aad
insl
mov
push
jne
mov
jbe
cmpl
les
xchg
add
mov
and
sbb
ret
push
jns
rcl
inc
jne
push
push
push
xchg
stos
push
adc
sbb
aas
xlat
push
xchg
stos
rol
inc
push
ss
sbb
mov
cmpsl
mov
pop
dec
xchg
add
test
andl
mov
clc
out
inc
or
or
mov
add
js
sub
push
push
int
cmp
lret
adc
ret
lods
in
jnp
jns
push
xchg
notl
inc
nop
das
adc
jge
fcoml
sahf
fdiv
scas
cltd
cwtl
sub
in
cmp
sbb
cmp
data16
pushf
mov
pop
xchg
ljmp
mov
mov
fsubr
mul
leave
mov
mov
ljmp
push
mov
add
or
adc
mov
jle
andl
dec
mov
daa
pop
and
mov
pop
clc
mov
dec
jae
aas
int
jbe
dec
int
in
hlt
xchg
cmp
pop
scas
and
xchg
cmpsb
test
sbb
inc
data16
stos
mov
jbe
mov
xchg
jns
into
clc
or
lret
push
mov
mov
iret
shrb
ja
in
repz
sub
test
into
adc
jns
sub
enter
mov
fsubrs
insl
aad
mov
pop
insb
jl
in
mov
pop
jo
scas
push
sbb
pop
pop
push
xchg
mov
jp
xor
ds
push
outsb
jno
xchg
push
test
sub
push
andb
mov
icebp
movsb
add
pushf
and
in
mov
mull
popa
fcmovbe
pop
cs
test
or
popa
jle
je
add
mov
repnz
adc
cld
addr16
cmp
les
scas
mov
nop
mov
in
mov
sub
loopne
out
addr16
ret
lock
xchg
or
push
sbb
cli
les
sar
imul
xchg
mov
loope
out
pop
pop
jge
mov
test
mov
push
fimull
sbb
repnz
clc
dec
cwtl
and
pop
push
mov
aaa
jmp
je
add
movsb
push
mov
test
pop
mov
fisttpll
dec
psubb
movsb
add
xor
and
mov
adc
nop
insb
addr16
xlat
pusha
mov
inc
and
mov
xor
dec
xchg
pushf
aaa
leave
out
jnp
mov
dec
insl
je
cmpsl
ret
icebp
xor
fbstp
lock
mov
cmpsl
cmc
mov
cmpsl
push
lea
mov
inc
popa
xor
mov
jp
xchg
rorb
iret
adc
or
mov
xchg
sub
fsubs
icebp
gs
push
pusha
add
scas
pusha
stos
sub
sub
pop
out
clc
mov
les
push
mov
pop
push
jg
inc
scas
cltd
enter
fwait
or
test
push
jne
jecxz
cmp
clc
andb
sub
inc
icebp
add
pop
mov
add
mov
ret
es
mov
addl
xchg
jno
mov
pop
in
lret
push
inc
cmp
sub
add
notl
cmc
xchg
mov
mov
push
push
dec
pop
movl
idiv
push
dec
lods
pop
pop
push
es
push
shll
lret
arpl
push
stos
xchg
or
sub
imul
inc
cmp
mov
int3
ret
jmp
iret
sbb
jge
lcall
jecxz
mov
sti
mov
pop
or
subl
call
out
pop
xor
sahf
jle
fcomps
imul
push
sbb
iret
cs
jg
ljmp
nop
not
pop
jl
push
mov
pop
jb
push
sub
jg
gs
cwtl
dec
daa
rolb
into
outsb
jo
imul
sub
cmp
xchg
push
cld
or
cmp
push
jbe
inc
sub
sub
jbe
popfw
dec
xchg
or
mov
or
dec
imul
adc
rcr
inc
sbb
sbb
in
sub
lcall
cmp
xchg
fsubrl
pop
xchg
cmpsl
je
mov
sub
out
mov
mov
leave
push
stos
and
mov
call
jp
sbb
shll
call
insl
jl
mov
adc
insl
sub
sbb
xchg
ficompl
aam
pop
push
sbb
pop
jl
shl
inc
rorl
xchg
pusha
mov
enter
sbb
sbb
mov
pop
std
sub
rcll
lock
hlt
mov
out
lret
adc
into
stos
push
lret
fildl
jecxz
lea
out
jecxz
jb
out
pop
fsubs
jmp
shr
or
insl
cmp
or
lret
xchg
jge
xchg
xor
mov
rclb
cmp
push
sarb
repnz
sbb
clc
and
mov
sbb
pop
rcrl
fiadds
add
out
jb
push
movsb
bnd
fiadds
cmp
xor
inc
push
push
mov
sub
xor
lea
out
shll
push
add
jl
sti
shll
aam
std
dec
inc
aaa
push
push
test
mov
jge
insl
cmpsb
xor
je
outsb
inc
repnz
fisttps
mov
add
xor
rcll
imul
fcoms
pop
pop
and
dec
push
leave
sub
scas
cld
pop
xor
or
xor
idivb
out
cs
lock
mov
lret
dec
dec
mov
cvtdq2ps
jb
cwtl
xchg
mov
add
and
roll
xchg
pop
imul
jmp
lret
imul
incb
and
xchg
pop
push
jns
mov
pop
xlat
and
push
mov
sub
dec
cmp
xor
icebp
or
pop
lods
imulb
adc
jg
lods
pop
xchg
ljmp
xchg
xchg
out
cld
mov
sbb
sbb
mov
orb
popl
cs
adc
xchg
push
lea
dec
xchg
fcomp
fstl
shl
dec
jge
mov
inc
add
xor
ja
lea
xor
ljmp
mov
aas
sub
notb
jo
xchg
jecxz
adc
or
pop
dec
cmpsb
andb
sahf
inc
pop
lea
andb
dec
cmp
push
cmp
push
ffreep
pop
stos
data16
mulb
sbb
lret
sarb
mov
popa
sbb
cld
and
lea
adc
insb
or
inc
lcall
inc
daa
push
loop
arpl
mov
lods
pusha
or
rclb
pop
popf
pop
out
pop
stos
cmpsb
in
and
adc
cmpsl
fld
xor
push
lods
lcall
cmp
mov
inc
loope
dec
push
dec
sbb
lret
mov
subl
fidivrs
cld
lcall
sub
fs
xor
in
cmp
cmp
inc
push
adc
jl
call
nop
inc
cmp
fsubl
es
dec
repnz
jns
mov
sbb
in
jge
jl
fwait
dec
loope
jnp
push
cltd
lahf
or
out
incb
sbb
jne
pop
jp
jns
or
and
int
stos
cs
mov
mov
out
cli
xor
dec
mov
test
gs
adcb
xchg
aam
scas
or
push
push
insb
packuswb
jnp
push
pop
fistpl
sarb
mov
aad
inc
mov
imul
pop
mov
push
test
jmp
testl
aas
cmc
lret
and
mov
lds
mov
inc
repnz
sub
mov
inc
mov
and
add
and
inc
mov
jle
stos
xor
mov
dec
pop
lcall
push
dec
adc
pop
mov
sbbb
in
std
mov
ret
adc
jmp
je
jle
dec
movsb
pop
in
popf
or
cltd
in
nop
in
mov
lods
mov
xor
dec
cvtps2pi
je
lret
test
and
ja
add
mov
jecxz
enter
fdivs
in
clc
sti
inc
or
pop
pop
filds
das
lcall
ficoml
sub
mov
pop
fs
insl
xchg
enter
lods
pushf
inc
subb
cmp
es
mov
arpl
clc
loope
movsb
or
add
cli
inc
call
ret
add
loop
mov
rcll
movsl
push
pop
adc
xchg
dec
xor
addb
mov
stc
test
dec
repz
pop
movsl
mov
stos
jo
mov
dec
mov
test
lods
lock
daa
mov
add
dec
push
and
cli
add
test
adc
cmp
xchg
iret
jl
xor
fmuls
mov
out
jl
mov
sub
pushf
push
adc
jns
fisubrs
mov
lods
push
xor
es
jns
jecxz
jle
dec
adc
int3
scas
dec
sbb
xor
enter
bound
and
stos
aas
or
ret
call
pushf
in
push
ja
imul
sbb
bound
add
push
inc
lret
fstpl
sbb
xor
outsb
fisubrs
push
cmc
cmp
jmp
jle
mov
sub
sbb
add
cltd
out
sub
pushw
jl
adc
in
xor
mov
jge
sbb
add
loope
cmp
inc
test
cld
cmpb
cmp
aam
ror
rorl
jle
outsl
xchg
and
dec
sub
adc
mov
xor
pop
sbb
sbb
cmp
lods
jg
out
repz
push
pusha
jecxz
mov
add
cwtl
pop
lcall
push
dec
jno
in
and
in
and
loopne
dec
add
and
arpl
outsb
jns
or
cs
push
pop
test
dec
and
xchg
sahf
xor
push
cmp
dec
repnz
xchg
js
push
in
sub
sbb
xchg
cmpsl
mov
in
faddp
jg
fstps
jb
into
dec
popa
jmp
shr
or
push
scas
push
movsb
push
lods
insb
lcall
popa
insb
nop
mov
mulb
shrl
mov
mov
or
push
fcmovnb
js
push
popa
rolb
and
cmp
ss
jle
mov
mov
scas
push
in
pop
adc
inc
lock
decl
mov
xor
sub
enter
sbb
pop
add
cmp
test
les
sbb
cmpsl
xchg
insb
leave
inc
add
cwtl
movsb
pop
cmpsb
or
rorb
sbb
push
jp
loop
pop
or
xchg
pusha
cmc
nop
inc
into
and
push
or
js
loopne
cmp
fdivrl
adc
test
mov
push
push
mov
jno
sub
cli
push
xchg
jns
daa
repz
hlt
add
cs
sub
adc
scas
push
jb
test
popa
or
aam
dec
dec
mov
movsb
xchg
pop
push
xchg
jl
call
in
pop
int
xchg
mov
out
mov
gs
mov
jnp
int
pusha
jp
cmp
dec
dec
sbb
lods
jg
pop
fisubrl
cmc
jle
inc
insl
lahf
or
adc
xchg
pop
fstps
insl
ja
xor
scas
add
jne
xor
and
fcmovnb
pushf
push
push
push
dec
pop
or
sub
sub
out
mov
sub
enter
jl
adc
pop
pop
movsb
into
nop
push
push
clc
jmp
fildll
mov
aaa
sarl
stos
push
ret
lds
fdivs
mov
mov
pop
pop
lretw
sahf
pop
or
jl
jl
mov
jecxz
dec
sub
repz
mov
fwait
push
lcall
sub
dec
iret
add
popf
xchg
mov
pop
xor
xor
js
pop
aam
arpl
sbb
iret
push
aaa
jle
dec
xchg
xor
jbe
push
cwtl
fwait
rol
push
fstl
xchg
xchg
or
adc
mov
jg
or
sub
dec
test
loop
push
out
pop
jbe
xchg
push
push
pop
outsl
xor
popf
dec
sbb
cli
in
push
jecxz
test
insb
jo
arpl
ret
mov
pop
gs
imul
clc
fistl
sbb
add
fmuls
inc
adc
adc
adc
loop
and
dec
adc
adc
cmp
xor
fcoms
xor
popa
mov
inc
jae
movb
push
fisttpl
sbb
jbe
repnz
xor
pop
xchg
add
rolb
hlt
out
add
shl
push
push
mov
fs
jecxz
push
push
sub
adc
sbb
cmp
mov
xchg
adc
popf
mov
dec
push
lcall
insb
sub
mov
push
jle
pop
arpl
stos
shl
dec
mov
pop
lret
or
adc
cltd
mov
in
dec
lods
loopne
cmp
jns
out
das
push
movsb
jb
mov
je
mov
out
push
imulb
cltd
adc
sub
std
xor
out
sbb
adc
loop
jp
fwait
xlat
test
mov
out
bndmov
pop
add
mov
xchg
mov
dec
cmc
sti
pop
pop
out
jne
out
mov
outsl
lock
pop
push
aaa
lock
das
push
mov
inc
outsb
push
adc
aad
mov
and
imul
hlt
dec
aam
ja
ret
stc
jge
cmp
enter
jae
mov
hlt
iret
loope
movl
jmp
and
into
mov
mov
in
cli
daa
xchg
xor
adc
pop
add
in
inc
loope
ja
mov
rorl
in
cmpb
shr
pop
jo
aas
cmp
in
mov
std
std
sub
mov
test
call
loopne
adc
jo
dec
cmovae
and
div
push
pop
hlt
push
test
add
sub
movsl
dec
ret
test
dec
in
stc
lcall
and
pop
std
lock
push
leave
cmp
imul
cmp
lret
addr16
das
push
push
in
hlt
jae
fidivs
aam
rcrl
push
outsb
sbb
jns
lret
push
xchg
push
dec
fldl
add
lret
sti
test
aam
lahf
push
mov
inc
call
mov
idivb
ja
fwait
jae
mov
stc
cs
inc
nop
push
jmp
xor
xchg
xor
sub
fldt
cli
pop
pusha
cmp
ret
mov
shll
loopne
les
cmp
mov
mov
test
sbb
add
xchg
mov
pop
dec
jns
outsl
lret
mov
js
mov
out
cmpsb
cltd
fmull
incb
lods
or
inc
fdivr
mov
xchg
add
xchg
das
into
add
psrlw
sbb
in
les
insl
loop
mov
adc
push
push
stc
je
ja
mov
ret
mov
bound
ret
inc
inc
je
divl
lcall
sub
aam
xchg
mov
pushf
xchg
pop
outsb
push
stos
clc
mov
aas
mov
add
sub
test
test
lock
stc
fxch
bound
enter
mov
adc
fmuls
xchg
stos
cmp
cmp
lds
idivl
add
cmp
push
ds
das
das
pop
dec
inc
dec
mov
pop
and
mov
lahf
xor
outsl
into
aad
dec
inc
pusha
xor
mov
cwtl
test
lods
inc
and
inc
gs
push
outsb
sub
push
adc
push
or
sbb
lahf
cmc
fisubrs
repnz
cli
push
add
test
arpl
jmp
sub
out
sti
adc
lcall
mov
sub
pop
push
aad
add
pop
inc
pop
mov
sbb
repnz
test
push
std
mov
xchg
clc
jle
xlat
aaa
scas
mov
mov
inc
aas
inc
rcll
or
xor
cltd
psubusb
rcrb
jp
jg
add
push
xor
out
adc
mov
adc
sbbb
mov
stc
aam
in
mov
cmc
divb
sbb
ss
arpl
mov
xchg
ss
cmp
add
ret
jl
push
xchg
xchg
inc
ja
xchg
dec
loopne
movsb
xchg
and
or
jmp
dec
shrb
ja
lods
mov
push
shll
cmpsl
cmp
jecxz
sub
adc
cmp
ret
adc
popa
gs
add
xor
fucomp
sub
imull
lods
and
lea
ficoms
and
in
cmpsl
mov
jns
icebp
insb
das
int3
push
cmc
pop
cmp
jp
scas
xchg
dec
scas
dec
test
jle
sub
or
inc
fs
sub
movsb
ljmp
test
clc
pushf
icebp
out
pop
icebp
xchg
leave
add
addr16
push
adc
icebp
sub
pop
js
adc
loope
cmc
enter
mov
mov
lret
jno
inc
aas
jnp
leave
pusha
icebp
cmp
jg
rcrl
cmc
xor
xor
es
ja
decl
pop
lods
fldt
sub
loopne
mov
inc
sub
call
fwait
scas
shl
xor
add
popf
repz
ret
int
cmpsb
inc
repnz
add
mov
push
sbb
cmp
mov
aad
pop
push
xchg
push
xlat
jno
stos
in
int
xchg
add
mov
fisttps
cli
sbb
push
aad
test
lret
lds
pop
test
sbb
hlt
xor
xor
ficoms
punpcklbw
or
add
fistpl
idiv
repz
arpl
jae
pop
adc
jns
push
sbb
icebp
scas
mov
lcall
inc
jmp
insb
loop
and
out
inc
cld
or
icebp
sub
xor
jb
lock
adc
push
push
call
fs
jmp
nop
cmp
and
pop
pop
or
sti
ss
loopne
out
dec
mov
xchg
test
das
ds
notl
jne
outsl
pusha
das
test
sbb
push
data16
gs
mov
push
pusha
data16
pop
aad
cmpb
push
cli
jns
pop
rcr
inc
insl
sub
or
xchg
lds
and
inc
cmp
in
bound
sbb
mov
ficompl
shrl
je
fwait
push
mov
add
xchg
adc
mov
scas
aas
shrl
fistpll
cmp
cmpsb
mov
pop
ret
pop
lret
out
mov
cmp
xchg
sarl
test
or
rol
cs
scas
and
jo
arpl
ret
pop
and
lock
imul
adc
jecxz
xchg
jl
loopne
ss
lods
sarb
cmpb
repnz
lods
pop
fs
jg
mov
in
push
or
xchg
mov
push
pop
xor
out
sub
cmp
jle
mov
adc
jb
pop
add
inc
sbb
jb
outsb
and
stos
in
cmp
mov
js
fistpll
in
imul
lock
shrb
sbb
shll
mov
out
push
sbb
inc
ficomps
bound
test
addl
mov
sti
inc
movsb
push
out
xchg
ja
mov
jmp
cli
dec
dec
pop
mov
push
lret
push
stc
movsl
cmp
lcall
sbb
add
lods
fcoms
cmc
inc
push
lahf
or
dec
movsb
mov
push
sti
subb
add
mov
enter
xor
add
lahf
xor
push
push
rclb
push
cmp
xchg
dec
sbb
sbb
mov
mov
imul
xchg
ror
cmp
cmp
adc
imul
fs
and
jnp
sub
and
or
or
xor
inc
jp
loope
ret
pop
test
push
add
dec
pop
sub
ja
repnz
lahf
test
ja
pop
inc
mov
test
inc
push
outsb
jl
aas
imul
inc
sub
or
dec
mov
sahf
mov
cmp
pushf
aam
jns
inc
jmp
inc
push
sbb
insb
xor
sbb
ficompl
clc
xor
std
in
cs
fcomp
pop
cmove
inc
cmc
pop
aas
call
mov
jmp
cld
or
cmpsb
stos
leave
xor
lock
lea
sbb
aam
shlb
iret
andl
xchg
and
sahf
jae
hlt
rclb
lret
shlb
nop
and
arpl
mov
imul
lcall
adc
dec
imul
stos
rcll
fbld
fbstp
adc
out
mov
xchg
mov
nop
fidivrs
mov
xchg
inc
sub
sbb
stos
loop
jo
adc
cmp
stc
cwtl
test
scas
push
orb
int
adc
or
icebp
pop
roll
movsl
mov
dec
adc
fcmovu
rcr
mov
data16
pop
leave
iret
push
stc
pop
imul
mov
jp
fmuls
in
insb
cmp
pop
sub
adc
jnp
sbb
test
add
jg
jecxz
fcoms
xor
adc
sbb
add
or
add
dec
lods
dec
jp
loop
cmp
and
jne
pop
cmp
push
mov
adc
imul
int
decb
iret
xor
out
or
inc
xchg
pop
cld
fs
xlat
dec
dec
mov
or
lods
adc
rolb
out
pop
xor
mov
pop
pusha
dec
or
inc
ljmp
xchg
adc
je
lret
in
xchg
or
ret
mov
mov
insb
xor
xchg
in
cs
ds
jle
movsb
stos
bound
adc
jle
mov
int3
and
xor
negb
je
cmp
ljmp
fstp
in
ftst
push
or
cmp
dec
aaa
inc
mov
push
and
mov
mov
rol
mulb
xchg
loop
fistl
iret
fisubrs
leave
fisubrs
shlb
nop
rcl
pop
nop
jecxz
decl
pop
xchg
lret
sahf
imul
in
outsb
idivb
pop
or
dec
push
jle
and
sub
arpl
and
in
outsl
addr16
adc
mov
cld
dec
mov
push
or
imul
pushf
sti
inc
mov
aaa
adc
cltd
pop
inc
in
test
or
pop
outsb
lret
jmp
dec
popa
dec
std
lcall
cli
pop
xchg
lea
cmp
add
cmpsl
push
aas
jge
sbbl
xchg
mov
shlb
mov
push
adc
ljmp
mov
dec
lahf
cmpl
aas
cmpsl
call
xorb
push
jnp
pop
sti
mov
stc
stos
lcall
adc
sbb
mov
inc
jbe
fwait
ja
mov
adc
pop
xorb
inc
push
dec
or
data16
jl
xor
ret
unpckhps
pop
mov
jp
xchg
jmp
stos
jle
insl
hlt
add
daa
mov
mov
lahf
inc
and
lahf
or
push
cwtl
icebp
and
sub
mov
push
inc
jl
idiv
mov
xor
subl
or
inc
subb
push
pop
mov
push
mov
add
in
fwait
iret
xor
jnp
andb
or
pop
ficoml
mov
lods
jo
mov
loope
lock
adcl
xor
addr16
xor
push
push
fisubs
and
cld
lea
cwtl
dec
push
adc
jbe
sub
push
mov
and
das
popa
sub
ret
mov
add
or
shlb
jecxz
xor
divb
dec
popa
push
pop
ret
fnsave
lahf
jg
fimull
into
fnsave
test
xorb
pushf
repz
outsl
out
scas
cmp
mov
rorl
xchg
sahf
out
adc
in
cmp
jg
lods
mov
inc
aas
pop
mov
jge
push
popf
cmp
outsl
and
push
or
dec
movb
ror
push
jmp
dec
push
jno
pop
inc
repnz
dec
int
fdivs
gs
or
adc
cmp
imul
lahf
mov
mov
mov
addl
fwait
sub
inc
inc
push
pop
icebp
addr16
hlt
aaa
xchg
or
rcll
push
cli
in
ret
mov
mov
in
inc
pop
stos
daa
clc
icebp
scas
xchg
arpl
outsb
mov
xlat
dec
xchg
sbb
pop
cmpl
mov
cwtl
mov
ret
repnz
and
sub
aam
ljmp
mov
sbb
cmp
insl
inc
cmp
xlat
mov
jns
pop
mov
xchg
icebp
dec
aad
mov
cmc
or
orb
in
cltd
jg
jo
add
fs
aas
and
jns
pop
lea
mov
bound
hlt
mov
ja
push
out
pop
mov
sub
sbb
addr16
pop
lahf
add
jecxz
lea
dec
stc
daa
jge
aaa
mov
in
mov
ficomps
pop
sti
xchg
icebp
fidivrl
jp
mov
adc
movsb
sarl
cmp
push
dec
xchg
hlt
fcompl
mov
mov
mov
sbb
cmp
push
adc
xchg
int3
sti
pop
jmp
adc
xor
xlat
pop
outsb
mov
mov
or
jp
aam
enter
sub
imul
stos
jmp
dec
jae
adc
andl
jo
mov
add
jno,pn
dec
xchg
mov
mov
inc
mov
imul
cmp
cmp
push
mov
fdivrs
jnp
gs
sbb
sub
push
sahf
mov
into
je
sub
sti
sarb
push
xchg
imul
adc
xlat
jo
rcll
mov
cmpsl
repnz
xor
adc
add
arpl
std
sbb
push
imul
push
jle
mov
mov
loopne
test
lds
nop
jg
push
adcl
xor
nop
mov
jmp
ljmp
mov
pop
jb
mov
adc
xor
stc
insl
aad
lea
lock
out
mov
push
mov
jmp
jmp
loop
sbbl
cmp
adc
repz
mov
push
and
cmp
es
in
cmpsl
leave
pop
ret
pop
inc
jg
scas
cld
cmp
push
mov
and
fs
rcr
loope
mov
push
lds
lods
and
sub
push
addr16
cmp
xchg
in
cmp
pop
sub
ljmp
pop
mov
mov
or
sub
stos
push
jbe
push
mov
push
mov
cmpsb
fcomi
cli
dec
repz
enter
imul
xchg
adc
inc
cmpsl
jp
cmc
ljmp
mov
jmp
inc
mov
push
mov
adc
sarl
jno
mov
stos
aam
fwait
hlt
dec
xchg
jns
rcrl
mov
inc
jge
add
enter
daa
popf
imul
es
or
sar
aas
push
addr16
mov
adc
xchg
xchg
adc
xchg
sub
adc
dec
dec
mov
fmuls
xchg
clc
out
inc
cmp
bnd
test
arpl
dec
test
xchg
imul
sub
sbb
pop
std
cmp
out
sbb
jbe
fcmovu
out
roll
push
mov
mov
aad
push
inc
cmpsl
jbe
cwtl
xchg
insl
or
das
int3
add
ret
or
loopne
clc
test
mov
push
mov
mov
pusha
cmpsb
xchg
int3
jp
mov
inc
jl
jnp
jo
imul
xor
xchg
mov
mov
add
jl
rcrl
outsb
xchg
inc
sub
xor
sbb
push
and
fs
mov
sbb
add
xor
inc
popf
and
cmp
dec
loope
jbe
push
into
cmp
mov
and
mov
dec
or
jno
inc
mov
pop
jmp
jecxz
mov
mov
and
dec
fbld
popa
cmpsl
mov
iret
cmp
push
out
call
das
repnz
pop
lret
loope
insb
xor
dec
add
outsb
fdivrp
jmp
cwtl
in
cs
or
fs
adc
mov
sarb
add
jns
dec
push
xchg
in
sbb
inc
jo
fs
add
sbb
and
loop
aad
cmp
je
fsub
xchg
ds
push
pop
insl
push
insl
push
outsl
cmp
mov
lret
pop
neg
setg
mov
ret
push
es
inc
loope
loope
add
out
ret
rclb
add
xlat
xchg
pusha
mov
je
jge
sbb
stos
test
arpl
into
push
mov
mov
mov
loop
lock
xor
inc
mov
lods
test
jmp
jge
push
jo
aas
mov
xor
popa
fwait
mov
test
es
mov
cmc
inc
mov
cwtl
int
xchg
loopne
xchg
lea
pop
loopne
mov
psrlw
shl
sti
arpl
loop
fisubrl
push
jae
lods
je
out
popa
out
mov
push
cmp
inc
mov
jge
sbbb
pop
xchg
leave
push
jbe
push
xchg
cmp
pop
jae
inc
mov
push
fsubp
adc
test
inc
jne
jge
loopne
cmc
or
test
call
repz
shl
in
dec
aam
or
xor
loop
add
mov
dec
fidivs
call
out
clc
fldcw
ret
mov
shll
cmp
mov
pop
dec
pop
lret
add
jae
sub
mov
mov
mov
sbb
or
mov
pop
mov
push
imul
stos
stos
ret
fldt
inc
mov
jbe
add
shrb
imul
xchg
loope
cmp
and
xchg
mov
sbb
das
xor
pop
adc
dec
std
out
shrb
add
dec
mov
sub
mov
js
sarl
push
fdivl
lahf
fs
pop
push
or
aaa
es
pop
add
loope
loopne
sub
push
mull
sbb
test
and
pop
fimuls
xor
sbb
and
mov
or
popf
mov
or
mov
aas
movb
ja
and
rcl
sub
ljmp
ret
mov
xchg
addr16
xchg
xchg
or
inc
fistpl
daa
cwtl
pushl
cmc
lret
sbb
jecxz
sub
aaa
pop
pop
xor
mov
pop
cmp
xchg
push
or
cmpsl
dec
lods
pop
incl
in
mov
testl
fcoml
mov
mov
add
nop
icebp
mov
cmp
fsub
test
sub
int3
pop
sub
push
lock
sbb
dec
ficompl
shll
stos
jo
lea
xor
fwait
lea
pushf
push
push
pop
xchg
test
jmp
xchg
and
sub
jp
lock
jne
adc
dec
mov
int
pop
test
xor
mov
int3
mov
dec
lcall
or
mov
stos
mov
inc
ret
cmp
jmp
test
xchg
outsl
jmp
sub
neg
popf
das
mov
xor
jl
cmp
in
movsl
pushf
push
mov
rolb
pusha
icebp
les
xchg
imul
jne
das
loop
mov
repnz
dec
jb
pop
add
ja
jmp
push
call
mov
mov
xchg
stc
aad
xor
xchg
jo
ja
movsb
adc
and
push
fmul
xchg
dec
orb
pushf
int
sahf
add
dec
cmp
jmp
or
scas
sub
out
les
adc
mov
in
pop
mov
sub
push
out
jbe
pushf
dec
jb
hlt
jmp
fld
and
insl
int
insl
pop
push
push
mov
push
mov
add
mov
out
lock
or
out
rcll
jge
mov
and
data16
dec
jbe
mov
andb
dec
and
mov
iret
mov
das
xchg
cwtl
rclb
insl
cmp
call
ss
cli
pop
jne
adc
inc
fwait
mov
movsb
pushf
inc
mov
pop
push
mov
lahf
lods
sub
jmp
inc
or
cwtl
and
das
in
inc
or
sahf
paddd
sub
fidivs
sub
xchg
jmp
fldcw
pusha
push
scas
sbb
cmp
cmp
xchg
push
sbb
je
mov
stos
xchg
jb
push
xor
mov
repnz
sbb
enter
and
gs
cmp
insb
lea
mov
rcrl
roll
or
cmp
pop
add
add
push
out
daa
xchg
push
and
xor
mov
sbbl
fsubr
faddl
xchg
pop
mov
dec
mov
adcb
stos
lret
fmulp
push
out
pushf
jno
xorb
ds
mov
jae
cmc
push
sbb
hlt
xor
push
stc
jo
repz
ret
sub
cmp
push
jb
shrb
scas
xchg
cld
adc
adcb
clc
mov
scas
adc
cmpsb
iret
inc
adc
mov
sub
jno
add
push
jnp
das
std
jle
dec
pop
and
and
lock
clc
and
pop
hlt
repnz
or
addr16
int3
enter
roll
les
sbb
fists
lret
xchg
notb
in
push
adc
add
push
add
sti
insb
inc
lahf
cld
ss
push
ret
cmp
pushf
addr16
shll
sahf
mov
mov
or
dec
adc
dec
mov
lahf
adc
clc
je
out
rolb
adc
shrl
inc
sub
popa
and
dec
outsb
jo
fwait
adcb
lods
testl
jne
pop
lods
je
stos
outsb
mov
fildll
adc
xchg
outsl
les
jl
jge
dec
loop
insl
pop
sbb
aam
stos
cmp
aas
mov
out
xchg
stc
lock
sti
scas
adc
sbb
movsb
inc
andl
mov
mov
push
jge
mov
mov
sbb
sbbl
sbb
stc
fsubp
adc
jmp
inc
jno
cs
dec
push
and
inc
or
jo
das
fadds
lahf
adc
sbb
pop
dec
inc
pop
stc
mov
push
xchg
js
mov
jp
add
xor
push
dec
lret
cltd
pop
movsb
dec
outsb
xor
xor
in
and
popf
add
xor
das
repz
sbb
call
mov
cltd
repnz
aam
bound
outsl
dec
in
xor
stc
fs
pop
ds
push
jle
movb
inc
jle
scas
mov
cmp
and
dec
cmp
mov
nop
test
xchg
outsb
mov
dec
push
mov
in
mov
sbb
sub
pop
jp
jns
fdivs
jns
js
sub
out
xchg
add
std
sbb
mov
lods
mov
clc
dec
push
cmpps
sub
jecxz
lock
stc
xchg
adc
fisttps
or
push
push
cmpsl
and
adc
mov
ljmp
jecxz
in
pop
in
aad
add
scas
lea
lea
icebp
in
nop
daa
sub
inc
xor
cmpsl
sahf
insl
jns
sbb
adc
cmpsl
cmp
leave
pop
int
repnz
out
jo
sarl
mov
ljmp
xor
dec
cs
bound
insb
xchg
jo
xchg
aas
repnz
ss
nop
out
push
add
push
xor
je
out
add
sub
mov
xor
dec
lahf
outsl
test
mov
xchg
cmp
inc
orb
inc
mov
ficompl
cmp
scas
pop
push
cmp
mov
add
mov
cmp
jb
lods
es
lahf
and
cwtl
sbb
addb
cmp
rolb
xchg
adc
jno
sub
sahf
sub
js
pop
dec
jns
pop
jmp
adc
xchg
js
cmp
jb
mov
push
dec
jl
lahf
imul
inc
sbb
push
je
jecxz
enter
lock
adcl
iret
int
inc
notl
pop
adc
int
push
mov
xor
daa
mov
cmc
mov
mov
mov
cmp
dec
sub
or
cs
and
sub
xchg
add
lret
cmp
sub
xchg
cli
sti
jns
repz
mov
sbb
int3
enter
int
clc
movsb
xor
jecxz
and
xchg
fiaddl
dec
sbb
mov
jnp
ret
adc
mov
xor
and
fcoms
stos
in
repnz
pop
mul
xchg
sti
add
pop
repz
jae
pop
repz
xchg
cmpsb
pop
popa
test
rclb
jae
lcall
out
push
addl
iret
cmp
sub
in
aad
mov
stos
sub
jnp
sarb
add
out
jns
out
push
mov
rcl
pop
hlt
ja
jl
rol
bound
inc
or
mov
add
add
mov
enter
mov
jecxz
adc
pop
sbb
out
mov
test
out
mov
pop
iret
inc
fs
dec
mov
out
mov
push
call
lea
sub
cltd
push
push
push
fstl
sub
gs
push
xor
fidivrs
sti
pushf
push
mov
adc
outsb
popf
adc
lods
imul
lods
sub
pop
or
dec
push
fbstp
sub
inc
lods
aaa
push
cmp
iret
and
rcll
mov
mov
out
add
mov
icebp
scas
push
js
pop
popf
pop
lods
rcrb
sbb
es
cmp
mov
sub
cmp
cmp
mov
sub
sbb
xchg
adc
mov
roll
jmp
or
sarb
popa
nop
jg
cmpsb
sub
test
cltd
fld
icebp
mov
out
shlb
or
cmp
lock
leave
es
das
pusha
mov
or
orl
jle
xchg
int
sub
sub
jbe
mov
and
insl
sbb
lds
mov
mov
add
add
inc
arpl
movsl
jne
mov
jbe
push
into
repz
jl
iret
mov
data16
inc
js
mov
insl
in
mov
adc
sbb
outsb
stos
pop
mov
lock
fistps
inc
in
pop
add
xchg
addb
notb
leave
mov
mov
add
ret
cld
xchg
out
inc
xor
sbb
popa
aad
iret
jae
es
int3
lea
cmp
inc
faddl
stos
or
jns
inc
in
imul
lret
xchg
fisttpll
inc
clc
mov
mov
dec
sub
add
cmc
repz
out
out
adc
or
jno
lods
jmp
cmp
bound
inc
push
cmpsb
xor
or
or
movsb
push
jb
cmp
insb
clc
ret
xor
roll
stos
ds
jbe
int
or
cld
imul
mov
sbb
jno
daa
xchg
stos
sbb
add
es
popf
jno
outsl
imul
mov
push
movsl
stc
sar
sub
mov
addr16
cmp
mov
or
mov
inc
and
rorl
ja
fdivl
or
sti
hlt
aaa
jp
pop
sbb
daa
or
dec
ss
push
push
stos
fstpl
mov
cmp
cmp
add
mov
cwtl
outsl
scas
adc
out
push
es
dec
inc
push
out
pop
fnstcw
js
stos
aad
movsb
in
js
into
ja
mov
loope
dec
jo
ret
movsl
cmp
jmp
dec
add
push
repnz
add
leave
and
dec
sub
int
fdivp
ds
popf
movsb
cs
fildl
inc
lock
mov
fwait
push
sbb
dec
hlt
mov
xchg
cli
xor
mov
jb
sahf
adcl
test
ss
fists
mov
rorl
popf
adc
lods
mov
ja
adc
adc
movsb
push
sbb
xor
jo
aaa
dec
push
loop
outsb
test
and
cmp
xchg
add
xor
imull
dec
fyl2x
jne
shll
pop
mov
or
arpl
mov
push
ret
mov
imul
sbb
push
out
int3
push
xorl
sbb
jp
sbb
inc
call
ljmp
fwait
ss
jp
lods
mov
jo
push
ss
insb
lea
mov
adc
dec
mov
dec
and
popf
loop,pt
das
in
and
push
cmp
pop
sbb
mov
popa
or
sub
icebp
dec
cmp
xchg
into
pop
and
xlat
mov
push
fsub
cmc
ljmp
mov
lods
nop
test
push
repnz
inc
or
scas
pop
cmp
nop
lock
add
sub
std
movsb
lret
mov
loopne
cmpsl
inc
push
repz
jg
ret
popf
mov
sbb
cmp
in
mov
subb
or
dec
inc
lods
inc
pop
push
pop
adc
loope
adcl
or
sbb
adc
out
fsts
mov
mov
lods
stos
icebp
std
sub
sub
adc
sarl
call
mov
aaa
mov
pop
xor
out
in
mov
dec
in
insb
sbb
aas
lahf
push
lods
jl
outsl
mov
xor
cmp
xchg
fwait
xor
insb
add
nop
scas
jp
mov
pop
xchg
bound
aas
pop
mov
out
ja
adc
insl
lds
movsb
adc
add
movsb
out
call
xor
dec
and
xchg
lcall
mov
cld
add
mov
adc
cmpsb
lret
add
cmp
fs
in
pop
pop
nop
xor
mov
mov
dec
jmp
mov
adc
les
ja
cmp
push
iret
daa
clc
lods
mov
ljmp
xor
pop
popa
mov
mov
shll
nop
inc
test
add
addr16
pop
pop
push
cli
outsb
jae
popa
push
movl
loopne
mov
sbb
imul
lcall
or
loopne
sti
add
scas
lahf
jecxz
xlat
mov
add
clc
sbbb
mov
lock
push
nop
sbb
outsb
cld
jbe
das
and
mov
sub
cli
lret
mov
pop
inc
std
push
xlat
jnp
mov
rclb
jbe
roll
mov
popf
add
cmpsb
iret
push
jno
or
stc
aad
inc
bound
jg
xchg
push
jae
mov
xor
mov
mov
cmp
cs
stos
pop
add
jmp
sbb
push
dec
mov
push
jmp
xor
push
ljmp
sbb
pop
xor
xchg
pop
fisubrl
push
inc
ret
lret
into
loope
pushf
add
mov
and
test
repnz
mov
pop
and
inc
inc
mov
shl
aas
aam
out
mov
sbb
int3
arpl
loop
imul
dec
lods
aaa
addl
cmp
adc
dec
sbbb
and
arpl
sbb
lret
lahf
pop
jbe
sub
mov
test
push
int3
lcall
cld
mov
or
dec
jmp
or
arpl
xor
imull
mov
xlat
lock
out
popf
sub
cmpl
add
pop
push
pop
and
shrl
pop
jmp
mov
je
lret
lods
scas
jecxz
fs
aam
pop
ljmp
mov
in
shll
test
sub
cmpsl
mov
jl
loope
loop
loopnew
ljmp
xchg
fisubrl
repnz
inc
lods
cmp
mov
sub
hlt
mov
cmp
push
enter
cli
std
dec
dec
push
cld
pop
jge
and
into
repnz
mov
sub
in
mov
shl
cmp
test
movsl
imul
hlt
mov
shrb
cmpsb
cli
mov
sti
outsl
lods
in
ja
lret
inc
lcall
dec
shll
ss
notb
in
repnz
loopne
in
xchg
and
iret
cmp
call
and
lea
call
loopne
jge
mov
jo
or
es
lods
pop
xchg
mov
mov
je
popa
push
icebp
jno
cmp
jmp
stos
push
les
int3
jo
mov
lret
jle
add
xchg
or
and
jge
stos
jl
mov
lcall
pop
xor
sbb
mov
jmp
xor
adc
mov
std
test
jae
pop
movsb
push
or
xchg
jno
and
mov
daa
cmp
dec
jnp
mov
jae
mov
mov
frstor
clc
push
notb
leave
ret
push
mov
inc
cli
test
adc
xchg
bound
sarl
and
lret
and
sbb
rorl
jne
test
or
or
push
sub
jns
or
and
into
push
xchg
cmpl
cmp
fucom
mov
pushf
fisttpl
dec
mov
clc
outsb
cltd
xlat
lret
fbld
xor
cmp
mov
xchg
adc
inc
adc
add
hlt
pop
or
out
ret
push
in
and
jge
mov
jp
pop
push
es
movsb
pop
adc
mov
out
xchg
push
imul
and
scas
mov
mov
mov
mov
and
insb
cwtl
pop
xor
and
mov
jne
lahf
loopne
rorb
sub
inc
adc
ret
iret
and
fmul
mov
int3
adc
movsl
fwait
lret
stos
scas
inc
test
jne
sbb
loop
ja
inc
mov
push
hlt
mov
neg
sbb
mov
ja
jbe
push
dec
push
pop
in
adc
jnp
pop
adc
loop
bound
lret
les
fnstsw
push
lods
movsl
jo
fldt
and
stos
adc
stos
adc
and
sub
dec
jbe
sbb
sub
jl
inc
push
sub
push
or
xlat
mov
test
repnz
add
cmp
dec
dec
or
mov
push
aad
daa
je
pop
xchg
push
std
aam
shll
jnp
aad
imul
inc
scas
andb
cmp
insl
mov
andb
subb
repnz
mov
sti
aam
arpl
repnz
and
movsl
jno
cmp
and
jmp
lahf
inc
xchg
js
cmp
mov
and
aaa
push
inc
add
push
es
push
adc
fs
ret
and
mov
stos
pop
push
push
mov
jl
sub
jb
dec
aas
xor
xor
xor
repnz
mov
and
jnp
add
ljmp
into
subl
fld
xchg
and
icebp
into
das
js
mov
xchg
repz
xchg
pop
jg
cmpsb
add
enter
mov
mov
adc
push
lods
in
std
pop
std
in
dec
scas
xchg
repnz
popa
mov
add
std
push
inc
jl
cmp
fmulp
out
jecxz
xor
mov
and
add
loopne
mov
mov
xor
push
adc
jb
add
std
lds
and
test
jecxz
dec
add
dec
sti
lret
inc
rolb
das
out
adc
aaa
bt
popf
sub
js
sub
cli
das
jne
imul
cltd
orb
dec
fistps
mov
stos
fcmovnu
pop
pop
andl
sub
movsb
out
add
insl
push
xor
loope
sub
mov
mov
mov
loop
test
jge
in
dec
lods
dec
jmp
xchg
mov
imul
mov
ljmp
dec
dec
mov
in
pop
push
sub
push
mov
sti
mov
mov
inc
mov
loop
jo
push
out
ljmp
adc
cmpsl
les
mov
mov
fs
pop
adc
clc
aad
stos
mov
xchg
mov
mov
out
and
popa
mulb
add
dec
mov
inc
lds
xchg
lcall
ret
jo
adc
xor
dec
lcall
and
lahf
mov
je
data16
dec
fs
jp
jnp
sub
jmp
mov
movsl
jmp
xchg
mov
pop
or
mov
orb
cld
pusha
jl
adc
out
xlat
pinsrw
ret
enter
xchg
lret
inc
arpl
xchg
in
adcb
fwait
sahf
daa
div
std
fbstp
xor
xchg
jbe
fdivr
push
xorl
pop
gs
sbb
ja
pop
loope
movsb
xchg
daa
sub
inc
jbe
or
fcmovnbe
in
into
pop
ljmp
cmp
cmp
mov
jp
lock
xchg
out
cmp
mov
test
icebp
push
shr
int
ret
mov
test
leave
frstors
loope
inc
shr
dec
cmp
mov
mov
sbb
and
push
mov
sbbl
mov
std
movsl
scas
xchg
jmp
js
sub
repnz
in
shlb
jle
xchg
pop
push
ret
pop
cmc
cli
insl
xchg
cmp
loope
add
push
sub
jne
push
data16
shrl
fcmovnbe
mov
pop
fxch
test
jg
test
jmp
enter
movsb
loope
adc
adc
pop
mov
push
adc
ja
iret
movlps
sub
imul
sub
sub
outsb
or
jg
lahf
mov
aas
sub
inc
push
xchg
jo
and
mov
sub
int3
jle
xchg
insl
jo
enter
lea
cmpsl
and
hlt
aad
rclb
test
mov
mov
shll
fadd
mov
orl
mov
jnp
xor
cmp
xchg
stos
sahf
push
aaa
das
push
cmpsb
fdivr
rcr
push
inc
test
jecxz
pop
outsb
cmp
dec
ljmp
sub
xor
mov
fwait
pop
jle
es
out
push
pop
dec
ficoms
jg
pop
fwait
lcall
out
jnp
or
mov
hlt
repnz
aas
addl
jecxz
push
aad
cmpl
or
pop
js
stos
lock
test
mov
dec
imul
xor
cmp
out
inc
scas
int3
adc
stos
out
xor
xor
les
repz
jg
xor
mov
movsb
ss
inc
ss
and
loopne
in
or
ss
out
mov
fdiv
jbe
or
ret
sbb
aas
aam
dec
fistpll
xchg
cli
stc
sbbb
andl
repnz
inc
pop
cmpl
lods
mov
fmuls
shrl
int
leave
adc
movsb
dec
outsl
xor
movsl
fsubs
sbb
pop
imul
dec
dec
mov
clc
fldenv
outsl
fiaddl
mov
loope
jmp
rcll
inc
loopne
adc
pop
int3
inc
repnz
mov
push
gs
cmp
jno
dec
push
pusha
movlps
adc
sub
cmpsb
shr
mov
in
loop
sbb
xlat
iret
adc
adc
pop
and
jmp
sub
push
or
test
xchg
in
adc
insl
shrl
pop
xor
lods
dec
sub
push
stos
mov
xchg
lods
add
cli
fadd
or
sub
add
lock
push
inc
les
adc
das
mov
je
aam
movsl
xchg
ss
das
xor
or
lods
pop
jbe
sub
dec
jne
ret
cmp
xchg
hlt
push
leave
stos
cmp
and
popf
fneni(8087
mov
mov
mov
push
sbb
lds
jecxz
cmc
add
out
das
scas
sub
pushw
push
xchg
cmpb
or
mov
sub
add
xchg
test
out
jle
sub
mov
inc
lahf
fidivs
enter
mov
jbe
pop
or
repz
pop
xchg
pop
cmp
jmp
dec
out
jbe
adc
mov
stos
leave
cmp
pop
fcomip
sub
jecxz
mov
sub
pushf
jmp
adc
push
jno
lcall
mov
pop
fadd
movsl
mov
dec
out
mov
fldenv
adc
push
loop
nop
ret
mov
aam
jmp
vmovdqu
enter
mull
and
inc
push
xchg
inc
jne
adc
adc
sti
decb
fs
mov
sub
rorl
add
int
jbe
lods
cwtl
inc
jl
jb
sbb
mov
cs
push
insl
ljmp
or
shrb
jecxz
jl
xchg
test
ficoms
cmp
and
add
out
and
jmp
mov
je
or
addb
aaa
sub
jno
jns
push
dec
sbb
jg
iret
sbb
xor
mov
push
push
dec
push
iret
or
shrb
jae
mov
icebp
fdiv
push
jbe
inc
add
xor
addr16
call
loope
shlb
mov
movsb
jb
or
xchg
js
in
pop
sarb
addr16
xchg
je
xor
pushf
out
mov
pop
inc
dec
mov
ss
mov
sub
les
out
fdivl
xor
xchg
loopne
sub
pop
jmp
cwtl
cld
movsl
xor
int3
shlb
push
rolb
out
jbe
cltd
mov
imul
push
inc
aad
xlat
inc
out
add
out
cmp
cltd
jecxz
mov
xor
popf
adc
je
lods
mov
mov
pop
add
xlat
dec
push
lret
enter
jmp
mov
mov
cmc
push
mov
divl
mov
mov
js
daa
inc
add
cld
or
dec
jnp
pushf
pop
push
pop
js
shr
nop
loop
xchg
cmp
lret
out
add
int
into
mov
mov
mull
lret
testl
scas
and
enter
mov
mov
jg
insl
or
adc
inc
sti
pop
sub
shll
mov
mov
rcrl
adc
in
je
loopne
ficoms
fiadds
adc
mov
cltd
push
arpl
push
add
sti
test
mov
mov
jg
jmp
inc
sub
pop
mov
std
sub
xor
mov
scas
into
cmp
adc
dec
jmp
mov
fxch
mov
sub
add
popf
leave
fcoml
and
ret
pop
clc
shrl
xor
insl
push
hlt
lahf
mov
adcl
loope
jns
les
call
ret
jge
and
xor
mov
or
pop
dec
dec
sbb
mov
sub
imul
and
dec
movsb
cwtl
add
mov
mov
in
sbb
notl
sub
rcrb
add
shlb
lret
mov
xlat
sbb
arpl
add
mov
bound
cmp
std
repz
popl
pop
out
std
mov
jbe
mov
push
gs
cwtl
or
xchg
aaa
ds
mov
sub
push
shl
xchg
push
in
fisubrs
sub
adc
in
pop
mov
out
iret
scas
lods
jmp
mov
xlat
mov
sbb
cmpb
mov
outsl
pushf
adc
mov
xchg
ret
inc
or
lahf
adc
inc
lahf
add
loope
cmpsb
cwtl
stos
jns
cmc
dec
fildll
test
and
add
pop
out
add
test
xor
pop
jg
jnp
and
pop
xchg
je
sbb
or
addr16
aaa
daa
dec
mov
pop
jne
nop
dec
mov
stc
ss
mov
inc
inc
push
jnp
and
dec
jecxz
int3
enter
pop
mov
gs
out
xchg
xchg
mov
cmc
inc
adc
nop
xchg
lahf
and
add
jb
xchg
out
cmp
xchg
fucom
jl
mov
pop
lcall
scas
mov
cmp
fcmovnb
add
fwait
iret
lea
lret
and
cli
inc
jge
push
repnz
mov
jns
inc
out
xor
insl
xchg
lea
ja
ljmp
mov
shlb
inc
lahf
jae
inc
ja
cmp
sbb
movsb
inc
sub
xor
adc
or
ficoms
in
adc
jno
xchg
xor
adc
mov
jne
icebp
xor
mov
ljmp
not
sbb
es
mov
push
inc
inc
or
andb
push
dec
bound
mov
sub
mov
pop
adc
push
inc
jl
lock
fists
mov
sbb
ds
movsb
mov
push
add
inc
mov
lret
adc
rorl
mov
pushf
inc
xchg
cmpl
dec
sbb
sbb
nop
and
pop
push
int
movsl
test
rorb
mov
les
ljmp
jle
mov
bound
bnd
fbstp
mov
mov
jno
sub
jge
xor
call
xchg
sar
mov
popa
sub
inc
jg
mov
call
iret
or
pop
leave
inc
adc
cmpl
and
jo
cmpsb
movsb
xlat
cs
adcl
xchg
add
clc
mov
xchg
adc
mov
shrl
cmpsl
test
ret
ficoml
int
test
imul
jg
and
mov
and
hlt
push
cmp
es
loopne
dec
push
aaa
idivl
push
jnp
in
push
lods
insl
repnz
push
mov
push
cmp
loop
cmp
aad
test
movl
jb
pop
jp
adc
jp
fwait
outsl
cmp
cmp
lds
lds
mov
fs
popf
xor
and
sub
lcall
rcr
and
mov
adcl
addl
adc
negl
ficoms
and
xchg
ret
mov
lea
dec
push
dec
adc
and
aam
lret
std
shrb
mov
mov
adc
add
push
sub
movups
mov
cwtl
add
xor
dec
in
js
inc
sub
or
fisubrs
lock
xorl
arpl
pop
dec
adc
filds
jmp
and
mov
jne
and
mov
add
jnp
xor
mov
scas
jae
and
sub
add
dec
data16
lret
mov
decb
cltd
sahf
adc
cs
or
enter
cltd
sahf
test
dec
sbb
push
pop
xchg
jmp
fidivl
and
fs
jo
enter
push
insb
lods
imul
adc
mov
testb
les
sarb
xor
xchg
call
cmc
sub
out
es
mov
sahf
ss
sti
fadd
test
adc
data16
aas
call
icebp
insl
jecxz
sub
mov
adc
nop
out
mov
mov
mov
xorl
test
mov
xchg
push
aaa
and
scas
adc
mov
xor
or
xor
jbe
mov
inc
inc
push
push
lock
inc
int
aad
sub
jecxz
out
xor
pop
mov
rorb
pop
testb
jmp
and
fldcw
push
jecxz
lods
cmp
lods
fdivl
lcall
pop
and
int3
adc
sbb
fdiv
mov
fildll
fsubrl
sub
out
sbb
pushf
mov
test
cld
sbb
cmp
and
jl
in
pop
sub
inc
cmp
addr16
lods
aaa
lea
leave
pop
iret
sbb
fnstsw
mov
enter
cmp
add
jo
bound
add
icebp
out
idivb
js
and
icebp
insl
das
xchg
popf
int3
mov
int
pop
nop
shrl
cmp
pusha
das
cmp
push
cmp
or
cmp
lods
pop
lahf
sbb
pop
rorb
adc
neg
jg
pop
mov
xor
xchg
cmpb
jae
adc
sub
jp
call
mov
adc
stos
push
lods
xchg
xchg
test
dec
dec
shll
pop
xchg
mov
pop
add
pop
aam
rorl
roll
jle
push
aaa
inc
fwait
insb
push
cmpsb
sub
inc
and
js
jo
daa
xlat
cwtl
loop
mov
pushf
sbb
fsubr
stos
test
sbb
xor
loope
dec
mov
sub
loop
dec
push
sub
xor
pop
mov
inc
and
dec
jge
xchg
scas
mull
orl
loop
push
jb
rol
in
jmp
dec
int3
out
xchg
js
hlt
sub
sbb
xchg
in
add
and
cmp
out
xchg
mov
mov
xchg
hlt
push
test
pop
lahf
sbb
cli
mov
popa
mov
xor
cs
pop
into
cmp
sub
rcll
ss
rcl
pop
fs
sub
movsb
ret
push
sbbl
fnstsw
cmpsb
pop
repz
mov
inc
and
lods
jmp
arpl
mov
jle
fisubs
ljmp
sub
lcall
ds
or
mov
push
dec
sbb
testl
xchg
cmp
setl
lds
aam
sbb
stc
adc
jae
pushf
and
mov
or
int
dec
xchg
rcrl
pop
inc
movsb
mov
xor
sbb
add
sub
mov
das
or
mov
cld
sbb
es
out
xor
or
js
sbb
adc
andb
movsb
insl
cmpl
sbb
adc
mov
sar
hlt
jae
sub
push
mov
push
sbb
iret
lret
jae
out
add
lods
js
lret
clc
leave
imul
push
jno
xchg
scas
sub
pop
int3
loopne
xchg
cmp
into
insb
cmpsl
dec
sbb
mov
mov
js
mov
jne
xor
xor
dec
data16
out
and
add
lods
dec
push
inc
jecxz
dec
in
movsb
and
bound
xchg
daa
sbb
xchg
ret
fucompp
fiaddl
pop
scas
stos
aad
fstpl
out
stc
fsub
hlt
push
call
jg
or
leave
sbb
inc
xlat
cltd
inc
ds
jle
dec
ffreep
aam
popa
rcl
in
dec
xchg
push
xchg
nop
insb
mov
jmp
stos
jno
js
shll
mov
scas
pop
inc
sbb
and
ss
jg
jnp
jno
pushf
or
dec
pop
aas
pop
sbb
jecxz
mov
nop
inc
push
lret
and
xchg
data16
inc
lds
jl
jne
xor
call
ficompl
cltd
int3
sub
mov
pop
cmc
xor
dec
mov
clc
loope
loope
push
cld
lock
add
add
sbb
dec
out
scas
add
ror
and
sbb
stc
int
pop
decb
add
cltd
sbb
mov
mov
dec
inc
stos
dec
addr16
std
cmpsb
sbb
shr
lock
jp
sbb
sub
fstps
int3
jg
ss
mov
jne
pop
fisttpl
push
andl
and
adc
jnp
lods
jo
cmp
std
adc
bound
push
flds
adc
das
nop
or
sub
jmp
xor
jns
inc
test
imul
fiadds
adc
test
daa
mov
jge
ds
lods
or
aas
leave
fisubrs
push
rcrb
into
insl
mov
lock
pop
pop
pop
sub
add
ja
leave
or
and
mov
test
push
pop
scas
sub
das
lock
or
cmp
sarb
dec
mov
mov
cli
jns
sub
neg
insl
mov
jns
sub
lea
or
out
push
mov
cmp
xor
movsb
loopne
shll
scas
in
pop
jg
repz
stc
mov
stos
pop
in
lods
ljmp
sbb
aaa
mov
inc
sbb
loop
pop
and
jbe
pop
int
lds
popa
mov
sbb
sub
lahf
ret
or
push
jno
mov
inc
mov
or
testb
xchg
lcall
add
ja
xor
inc
adc
mov
mov
xchg
les
shll
mov
aaa
push
out
mov
repz
push
jmp
jl
stos
test
insb
sar
je
mov
nop
adc
inc
mov
stos
mov
mov
jo
dec
mov
loopne
lds
push
rorb
or
outsb
add
xor
jbe
data16
sbb
shrb
int
inc
pop
shll
xlat
cli
jmp
push
icebp
or
xchg
loop
ficomps
mov
mov
add
push
ss
cmp
repz
jle
int
cmp
imul
push
loop
mov
dec
sbb
inc
clc
lock
ret
cld
cmc
adc
mov
iret
imul
imul
and
dec
cmp
ss
inc
xchg
mov
leave
mov
mov
scas
adc
stc
cmc
lock
repnz
pop
ds
fstpl
lds
insb
inc
dec
sbb
mov
jne
mov
mov
aad
adc
inc
addr16
or
std
xor
cmp
cmp
add
and
and
xor
jne
dec
cmp
jnp
pop
lods
pop
mov
pop
xlat
pop
aas
sbb
leave
jne
outsb
lds
xchg
mov
iret
rcrl
push
rcrb
subl
xchg
xchg
xchg
sub
shl
insb
hlt
aad
xchg
cmp
dec
cmp
sbb
clc
push
aaa
xor
pushf
inc
out
shrl
daa
aas
jle
fistps
fsubp
rolb
lock
repz
jbe
adc
popa
pop
add
aad
stos
test
loopne
lret
adc
popa
push
add
lds
fidivl
and
jnp
enter
cmc
xor
mov
inc
ja
mov
mov
stc
mov
push
or
mov
sbb
push
mov
jl
cli
push
imul
sti
mov
subl
mov
jle
out
add
sub
add
mov
mov
in
inc
les
pop
and
jno
add
mov
or
jae
out
add
xor
dec
and
pushf
fistps
pop
adc
sbb
xor
jo
les
cwtl
sbb
xchg
push
sub
cmpsb
aam
jb
cmp
test
mov
lods
jmp
sub
insl
outsl
loopne
ret
repz
mov
add
mov
out
es
xor
sahf
xchg
pop
cmp
dec
cs
push
std
mov
out
xchg
mov
cwtl
ljmp
cmp
jne
pop
lret
adc
stos
add
mov
lods
insl
push
mov
cmpsl
push
lods
aas
dec
outsb
or
lods
movsl
mov
pop
xchg
ss
dec
mov
aaa
fildll
roll
cmp
pop
and
sub
xchg
repz
push
add
jg
jae
scas
push
data16
dec
inc
ja
rcrl
adc
lea
popf
lods
rdmsr
rorl
sbb
js
pop
jl
cmp
sub
or
xchg
xor
push
idivl
mov
loope
data16
adc
xor
xchg
loopne
inc
jae
jle
pusha
push
mov
out
shll
mov
repnz
push
sbb
xorl
lods
pop
xchg
pop
loope
adc
sub
xor
insb
jno
ljmp
pop
and
imulb
in
and
test
stos
or
pop
mov
mov
inc
mov
jne
push
icebp
or
or
jmp
xor
pushf
push
aam
adc
iret
in
std
lret
sarb
testl
mov
pop
stos
mov
pop
mov
enter
jle
push
inc
mov
popf
repnz
bound
add
adc
add
das
cltd
call
ja
pcmpgtb
jle
fdivl
bound
mov
es
fstpl
dec
repz
jge
cmc
pop
cltd
leave
pop
mov
mov
test
pop
cltd
xchg
jb
xor
clc
dec
pop
xor
mov
lret
lret
jnp
rcl
shlb
jl
fsubp
fwait
cmp
add
lahf
rorl
jo
aam
rcrl
out
mov
push
mov
cmp
lret
stc
or
sahf
cs
xor
nop
rcl
idivb
lea
ds
cs
cmp
int
pushf
hlt
shlb
and
in
xchg
xor
div
int3
cwtl
or
push
sahf
add
xor
mov
out
std
test
test
orb
test
fdiv
push
pop
cmpsb
cmp
mov
jg
add
sbb
data16
mov
jae
push
push
jae
push
shll
or
enter
pop
jl
adc
das
mov
adc
adc
push
inc
cs
ss
pop
iret
fsts
mov
cli
out
in
xchg
mov
ljmp
loop
sub
nop
test
push
inc
adc
aam
add
gs
pop
loope
or
jg
and
push
dec
daa
cltd
pop
and
ret
test
fstps
inc
fnstsw
arpl
push
pop
mov
pop
sbb
xor
inc
aad
fildl
lods
xchg
andl
pop
adc
fistpll
pusha
inc
daa
sbb
and
xor
cli
sbb
clc
add
add
jo
jbe
out
ror
rcll
ss
test
ljmp
dec
add
sbb
xor
cmp
cmp
cmp
push
in
mov
popf
xchg
inc
dec
icebp
mov
je
out
pop
mov
cmpsb
mov
inc
mov
repz
add
dec
dec
xor
push
fidivs
in
ret
inc
pop
jge
aas
pushf
rorl
add
lret
scas
xchg
adc
inc
or
out
mov
and
shl
adc
out
xchg
stos
inc
roll
sbb
mov
sbbl
xchg
stos
cmp
aas
pop
jle
adc
inc
outsb
pop
sarb
jo
adc
pop
lret
ret
cmp
jno
adc
test
xchg
mov
gs
in
mov
call
adc
dec
cmp
test
cmp
fisubrs
cmp
sbb
inc
cld
pop
cmpl
push
loope
add
cld
pusha
jmp
cmp
enter
inc
dec
mov
sub
mov
loope
or
push
pop
pop
mov
es
cmc
inc
mov
int3
sbb
test
lock
mov
clc
xchg
lret
stos
in
shrb
sub
lock
push
daa
cli
or
inc
aam
test
stos
xor
shl
cmp
xchg
cmp
mov
loope
push
sarl
clc
mov
vunpcklps
jp
xchg
xor
cmc
mov
jg
mov
mov
or
test
fcomi
xchg
gs
xor
stc
loopne
adc
mov
ds
stos
das
fcoms
movsl
scas
sub
gs
sbb
xor
data16
push
push
push
xor
mov
push
les
outsb
icebp
push
test
jns
out
cmp
cltd
inc
pop
and
sbb
dec
into
mov
mov
out
popf
imul
lds
xlat
push
xchg
inc
mov
mov
ja
jb
xlat
mov
cld
ficompl
sub
loope
call
or
int3
adc
andl
pusha
mov
test
pop
inc
pop
into
push
rcrb
arpl
mov
sub
lret
mov
jl
in
test
jno
daa
xchg
out
pop
out
push
push
movb
xor
outsb
mov
ret
into
popf
decl
pop
xor
dec
jbe
popa
fs
mov
es
fdivrs
mov
mov
fisttpll
cmp
and
adc
mov
jno
in
shr
sub
cmc
sbb
adc
inc
mov
push
jo
adc
jne
adc
nop
pop
mov
sub
mov
cmpsb
sub
cmp
ret
xchg
mov
mov
inc
cmpsl
mov
lahf
xlat
add
enter
inc
cmp
pop
add
xor
ljmp
mov
fwait
jp
nop
jmp
mov
push
cmp
xor
adc
push
mov
or
push
insl
inc
jae
les
sub
ja
mov
add
and
fstpl
xor
test
or
pop
shlb
aad
push
mov
cltd
fwait
dec
jb
test
testl
jmp
mov
scas
loop
outsl
adc
packuswb
es
out
pop
push
lahf
ret
movsl
or
mov
or
jge
mov
repz
add
sub
fcoms
adc
pop
flds
lea
pushf
inc
hlt
mov
mov
mov
shlb
shl
sbbl
lea
shl
pop
out
lret
mov
jno
mov
testb
jmp
push
pop
xor
mov
out
mov
insb
lahf
adc
lods
jmp
repnz
mov
ret
dec
fimuls
mov
xchg
jnp
fwait
in
mov
pop
inc
add
dec
jecxz
cmpsb
mov
out
mov
xchg
add
outsb
out
jmp
push
jle
aas
sbbl
es
adc
nop
inc
xor
or
sub
sub
push
popa
push
out
adc
dec
add
inc
xchg
add
shlb
cmpsb
icebp
loopne
sti
fiadds
in
xchg
sahf
push
dec
insl
inc
mov
xor
hlt
repnz
int
xchg
or
pushf
lds
repz
fldl
push
lcall
jle
push
decb
cmp
sub
sub
xchg
pop
adc
dec
fnstsw
push
stc
lods
xor
das
and
sbb
adc
cmc
inc
cmp
fidivs
out
sbb
push
and
xor
inc
push
fistpl
sbb
lret
xchg
pop
or
outsl
push
cmp
scas
in
sbb
xorl
lahf
add
insb
roll
pusha
lds
loop
and
add
lea
into
test
repnz
imul
jl
add
cld
jge
push
sbb
jl
leave
in
stc
dec
adc
xchg
push
xchg
jp
push
lcall
push
lcall
in
pop
mov
mov
pop
cmp
push
adcb
or
push
mov
sbb
fnstenv
insb
xor
dec
push
push
jp
add
std
mov
or
add
ss
sbb
dec
paddusw
lea
div
test
mov
push
nop
push
sub
rclb
add
cmc
pop
inc
mov
rorb
andb
hlt
cmp
xchg
cmp
mov
pop
pop
lcall
sbb
faddl
xchg
out
ja
and
test
jl
or
fs
jl
and
cwtl
mov
or
sar
fdivs
es
or
sbb
out
dec
mov
inc
in
xchg
push
dec
push
fisttpll
arpl
imul
loop
outsl
cmp
popf
iret
sar
cmp
pop
cld
jne
adc
cmpsb
inc
stc
jp
incb
xlat
popa
inc
jp
stos
enter
out
sbb
xchg
pop
pop
mov
iret
jg
loop
fidivrl
cmpsl
cmpsb
inc
aad
jg
or
or
mov
arpl
inc
jo
test
pop
inc
jo
inc
adc
out
or
fmull
jecxz
rcll
cmp
sarl
nop
jno
pop
and
push
popf
xchg
daa
jb
push
push
and
sub
lods
ljmp
jp
mov
out
or
scas
dec
sbb
pushf
popa
out
in
shrb
sub
and
enter
mov
adc
rcl
push
repnz
into
dec
mov
aam
mov
xlat
add
sbb
pusha
cs
lea
bound
in
and
jg
in
inc
inc
outsl
jns
mov
jl
pop
testb
push
repnz
out
mov
cmp
pop
fdivrp
movsb
lcall
mov
movsl
jo
inc
loopne
push
and
arpl
and
jecxz
dec
xchg
xchg
aas
sub
mulb
xor
xchg
cwtl
mov
fs
mov
inc
lcall
movsb
jbe
leave
mov
and
mov
daa
mov
data16
popf
push
xchg
addr16
inc
mov
inc
inc
push
sbb
iret
xchg
mov
es
je
mov
fmuls
cmp
lret
jo
ficoms
test
in
orl
and
adc
cmp
push
xchg
arpl
sahf
mov
dec
mov
xchg
pop
stos
imulb
out
lods
or
sbb
nop
andl
outsl
sbb
mov
leave
test
ljmp
imul
pop
out
or
test
mull
inc
fisubrl
dec
out
mov
add
cmp
pusha
sub
sub
loope
mov
leave
mov
aas
mov
lods
test
in
rcrl
add
xchg
jae
int
mov
and
and
aam
int
xchg
sti
or
pop
sub
ja
jl
popa
gs
pop
xchg
dec
mov
lods
mov
jns
cmp
or
nop
sbb
movb
outsb
les
push
mov
inc
xchg
and
add
lret
xchg
jmp
add
push
adc
leave
out
subl
enter
mov
js
aam
cltd
xchg
pushf
push
adc
fildll
add
or
dec
sub
jmp
or
adc
loopne
adc
mov
daa
aaa
sar
roll
ds
test
jecxz,pn
imul
scas
out
sub
jne
aaa
mov
inc
rorl
adc
push
movsl
cli
loop
or
xchg
dec
mov
jo
or
dec
outsb
xchg
enter
addr16
fmul
sbb
mov
testb
mov
popa
test
imul
dec
mov
rclb
and
add
sub
aas
mov
in
bound
xor
mov
orb
inc
mov
add
imul
ja
inc
xchg
pop
in
sub
jmp
lea
sbb
add
pushf
rol
mov
jp
jle
sub
outsl
mov
mov
adc
jge
in
adc
jmp
jecxz
inc
addps
jo
or
testl
mov
sub
sbb
fists
repnz
out
mov
icebp
mov
mov
fnstcw
popa
cmp
gs
aas
xor
fdivl
lods
imulb
mov
rorb
je
paddw
test
inc
js
insb
cmpsb
aad
out
jl
xor
fistl
inc
test
orl
push
adc
fucomi
xor
jo
mov
sub
and
and
cs
sub
aam
js
jge
jge
cmp
sbb
xchg
fidivrs
xchg
adc
js
inc
out
dec
lahf
shr
jo
jae
pop
pop
sti
cmp
vmovupd
jb
mov
sub
or
inc
xchg
dec
insb
mov
cld
pop
adc
pushf
sub
inc
out
or
mov
ficoms
jmp
lahf
leave
and
push
idivb
addr16
insb
mov
scas
pop
dec
pop
xchg
bnd
loope
lods
inc
cmp
cwtl
cmp
mov
test
js
dec
fsubl
or
jo
sti
inc
sbb
or
int
les
dec
cmc
add
jno
outsb
pop
mov
add
cmc
pop
push
cmp
inc
push
int
addr16
ffreep
jns
mov
repnz
dec
cwtl
mov
xor
xchg
push
ret
adc
pop
arpl
test
insl
addr16
dec
addr16
imull
lock
add
add
psrld
dec
addb
inc
mov
and
popa
nop
lahf
jns
xchg
fwait
rolb
repz
lcall
sbbl
add
icebp
and
leave
or
adc
out
jnp
inc
scas
pop
je
mov
stos
test
inc
fdivrs
sbb
rcrb
pop
and
mov
cmp
scas
mov
out
push
test
das
mov
cmp
mov
xchg
dec
cmc
inc
sbb
and
adc
mov
pop
popf
xor
push
xor
ret
mov
push
dec
dec
hlt
test
stos
arpl
test
pushf
je
inc
and
push
inc
push
stos
loope
fsubl
xor
fmuls
popf
fstpt
push
push
mov
jae
mov
mov
repz
xchg
sarl
mov
das
push
sbb
xor
pop
ret
dec
jae
push
add
mov
fiadds
sub
shl
xchg
ljmp
shl
ss
mov
out
mov
aaa
cld
mov
jp
loopne
iret
mov
addb
jae
lods
inc
sbb
pop
or
ja
sub
pop
add
xchg
out
cmp
mov
lahf
adc
mov
inc
or
lret
or
clc
dec
mov
sub
sub
fimuls
hlt
dec
jne
push
scas
ja
add
in
fistps
int3
mov
and
movsl
mov
or
movsb
adc
dec
icebp
add
xchg
push
push
cltd
hlt
lcall
add
imul
fiaddl
xor
lcall
push
adc
xchg
fwait
inc
cs
or
aaa
and
cmpsl
push
ja
push
loop
add
fistpl
sti
lds
jo
mov
lods
jmp
jl
fwait
test
mull
int3
adc
out
mov
sti
jo
cmp
push
aaa
outsl
cli
fiaddl
cld
aas
push
inc
fidivrs
pop
jno
negb
mov
xlat
xchg
pop
jnp
add
dec
and
jae
and
mov
inc
sahf
sahf
add
test
movsb
ja
jbe
scas
mov
inc
cli
ror
out
out
fs
xchg
mov
movsl
fistpll
push
data16
xchg
loop
or
call
dec
cmp
enter
mov
in
cmp
adc
int3
shll
pusha
sub
enter
cmp
hlt
mov
pop
in
enter
jno
push
xchg
das
popa
sbbb
xlat
pusha
jno
sub
cli
jecxz
cwtl
icebp
inc
push
jns
xchg
clc
mov
pop
mov
mov
sub
data16
xchg
cld
cmp
jne
push
sahf
fsubl
mov
xchg
push
gs
arpl
stos
test
adcb
xor
lcall
enter
inc
push
sub
clc
aas
mov
in
imul
push
ss
inc
negl
fs
jmp
fld
test
pop
xor
mov
test
jmp
add
sub
pop
cmp
loope
clc
xchg
xor
test
std
push
rclb
cli
repz
clc
jbe
idiv
push
out
sbbb
imul
je
cmpsb
lods
arpl
adcl
push
add
mov
adc
xor
push
arpl
in
sub
jecxz
xor
roll
mov
jecxz
add
mov
cltd
mov
lock
aad
mov
dec
and
xor
cmp
out
pop
negl
out
or
and
cltd
testb
jmp
mov
mov
aad
jb
test
sbb
subl
push
aad
push
jnp
push
cmp
and
pop
scas
orl
pop
loop
repnz
sbb
xor
repnz
inc
lcall
fwait
scas
push
mov
lcall
jmp
dec
daa
mov
push
xchg
xchg
xchg
lret
add
les
jle
xchg
out
and
xchg
inc
add
dec
cmpsl
or
dec
jno
sbb
mov
or
das
add
pop
xchg
jle
jle
ljmp
cmpl
cmpsl
in
add
cmc
xchg
pop
xor
ror
and
aad
test
inc
push
out
popa
addr16
out
xchg
test
xchg
loopne
fwait
dec
mov
cltd
fnstenv
or
add
ds
sub
push
sub
jl
sub
or
ljmp
call
mov
aas
cmp
adc
xchg
shl
inc
popa
pusha
mov
sub
mov
mov
outsb
sbb
sub
cbtw
loopne
lds
call
inc
jbe
aam
mov
mov
out
daa
test
xorl
xchg
inc
fwait
mov
paddusb
jl
incb
sbb
xchg
adc
test
repz
daa
mov
mov
mov
mov
add
mov
cltd
xor
push
repnz
insl
sbb
add
sar
in
xor
loop
pop
rorl
cwtl
dec
mov
fwait
cmp
les
or
out
shlb
js
jo
sbbl
push
cmp
push
sbb
icebp
cmpsb
es
lock
xor
and
pop
dec
ret
adc
jno
stos
dec
fidivl
hlt
push
add
test
test
xchg
push
out
in
outsl
in
les
sub
out
in
or
sub
push
jp
fst
cltd
es
pop
aad
inc
fs
cmp
or
pop
iret
sbb
mov
jb
test
inc
or
lahf
mov
call
insb
mov
mov
aam
dec
insl
cwtl
popf
lahf
jl
add
es
xchg
lods
mov
int3
xchg
jle
pop
inc
out
outsb
lods
push
or
sbb
push
fcomps
fiaddl
dec
xchg
sub
mov
dec
leave
cld
mov
inc
jbe
mov
dec
in
nop
stos
dec
gs
push
xlat
cmp
pop
aam
mov
in
xchg
and
repz
inc
add
enter
sbb
mov
cwtl
pusha
cmpsb
fdiv
and
cmp
inc
icebp
add
notl
icebp
jle
push
pop
adcb
icebp
pop
test
je
dec
dec
sti
jbe
int3
and
or
das
test
inc
cli
call
mov
test
push
jae
xchg
repz
cli
int
jne
mov
inc
xchg
mov
pop
sbb
addr16
lcall
sbb
std
loope
cmp
pop
and
loope
scas
pop
mov
hlt
adc
xor
cmp
pop
mov
loope
dec
pusha
hlt
cli
add
push
out
dec
add
mov
xchg
pop
lcall
inc
xchg
push
mov
adc
bound
inc
jle
scas
pop
adc
lahf
adc
aaa
hlt
add
dec
repz
jg
lock
aam
jp
pusha
adc
lahf
dec
daa
jle
cwtl
orb
test
std
and
adc
stc
push
ljmp
scas
adc
sub
mov
aas
mov
xchg
lea
gs
adc
mov
je
xorl
pop
loop
test
jbe
mov
inc
add
dec
jecxz
cld
scas
jb
negl
jns
test
repnz
subl
adc
rcll
test
mov
jns
dec
roll
add
test
or
jbe
xor
aas
lds
and
pushf
mov
std
mov
js
mov
test
mov
test
out
mov
cs
notl
mov
mov
sub
mov
cmc
and
inc
jns
push
mov
jg
push
or
insl
scas
pop
adcb
inc
ret
inc
dec
fs
push
orl
pop
data16
sbb
xchg
jne
movsl
cmc
shl
ret
imul
into
and
jl
sbb
mov
scas
adc
jbe
ds
adc
scas
pop
aaa
shl
imul
xchg
xor
push
stos
iret
dec
push
lock
daa
in
mov
loope
lods
rclb
and
loop
fbld
pop
dec
clc
std
sub
mov
adc
and
scas
adc
sbb
add
aam
or
hlt
pop
shlb
test
test
xor
dec
imul
push
aam
adc
push
push
out
push
dec
test
pop
imul
xchg
or
or
jge
int3
or
mov
mov
clc
bound
leave
add
mov
fidivl
js
shl
jp
inc
loop
add
dec
out
dec
xor
jns
jmp
and
clc
cli
stc
sbb
xchg
mov
stc
cwtl
push
mov
enter
xchg
sub
pop
and
jp
je
cmp
dec
pop
mov
aam
xchg
jl
lock
dec
rorl
fists
cmp
xor
addl
iret
ja
add
pushf
inc
das
in
inc
add
aad
or
cmpsl
cmc
jb
mul
sahf
lds
adc
jge
adc
sub
popf
mov
in
or
nop
aaa
xchg
xchg
movsl
mov
sti
stos
jbe
push
jle
adc
jg
xchg
loopne
or
aaa
outsl
or
movsb
lods
icebp
mov
test
fisttpll
dec
aaa
pushl
fucomi
mov
in
mov
xchg
test
mov
rcl
enter
xor
cmp
divb
or
push
cmp
cmpsl
adc
test
in
imul
lods
inc
enter
or
fdivrs
scas
insb
shl
jmp
xchg
lea
pop
mov
dec
adcb
test
pop
mov
addr16
mov
shlb
mov
jo
fwait
and
sbb
pop
rcll
jecxz
xchg
imul
out
cmc
cltd
mov
push
inc
ss
je
mov
dec
inc
imull
ja
pop
cmp
sub
popf
jmp
or
test
sbb
loopne
xlat
hlt
cld
mov
push
mov
fcomps
xor
jae
rcr
das
mul
lea
rcll
mov
push
lods
inc
fidivl
ja
inc
jp
aad
inc
sbbb
ss
cmp
or
sbb
xor
movsl
test
movsb
mov
jae
insb
jbe
jno
out
push
fcoml
cmpsl
push
or
lds
dec
push
jno
mov
mov
enter
pop
popf
or
neg
subl
adc
cltd
mov
xor
mov
pop
cmp
xor
cmp
inc
push
cmp
and
mov
insl
sbb
sbb
lods
add
xchg
imul
mov
out
adc
jmp
insb
enter
and
xor
dec
push
sub
push
and
pop
mov
mov
xchg
mov
cwtl
and
xor
lods
jb
mov
mov
dec
jae
sub
push
or
shll
andl
sbb
jp
xchg
push
sub
pusha
mul
push
das
sub
faddl
mov
inc
data16
lods
bound
mov
inc
mov
aaa
cmp
outsl
rclb
fld
or
imul
cltd
lds
jge
xchg
inc
mov
pop
push
loopne
popl
clc
mov
icebp
adc
jne
addl
imul
inc
push
popf
add
lret
add
into
test
cltd
push
fbld
fstpl
popa
scas
mov
je
daa
push
mov
adc
xchg
pop
cmpsb
cmpsl
lret
sbb
mov
cmp
loop
or
inc
mov
sub
and
shl
icebp
fldcw
cld
hlt
add
mov
xchg
xchg
and
pop
or
cmpsb
in
mov
call
mov
adc
adc
daa
mov
mov
and
adc
jp
and
mov
or
iret
xchg
add
ljmp
daa
mov
mov
push
xor
dec
les
mov
clc
adc
xchg
adc
insl
mov
stos
mov
mov
xor
mov
mov
shl
je
lea
push
sub
sub
sbb
mov
mov
inc
into
xchg
rcrl
dec
jno
add
adc
das
mov
lds
decb
xor
and
pop
add
lds
cli
cmp
aas
and
es
inc
and
add
or
loopne
xchg
out
xor
movsl
adcb
fcompl
rorb
dec
movsl
jecxz
push
mov
ljmp
adc
push
fldenv
stc
add
cltd
pushf
dec
ljmp
push
outsl
loopne
aas
cld
dec
xchg
jns
mov
jmp
jo
jmp
inc
stc
ss
pop
adc
hlt
push
sub
icebp
fisttpll
mov
movsb
cmpsb
cmp
jne
mov
es
bound
mov
fldl
mov
das
cmp
xchg
pmulhw
addr16
int
mov
xchg
adc
xor
shl
fwait
mov
js
movsl
lret
cmpsb
pop
sub
dec
or
adc
mov
push
fwait
pop
inc
faddl
mov
repz
cmp
lcall
lcall
sub
lahf
pop
test
push
cwtl
mov
push
fimull
popa
pusha
in
pop
pop
outsl
add
or
subb
push
addb
add
arpl
mov
mov
and
xchg
push
inc
loope
mov
sbb
cld
movsb
in
sbb
sub
or
lcall
inc
outsl
adc
xchg
lcall
fwait
arpl
fsubrl
aam
and
js
flds
popf
push
clc
rolb
movsl
mov
scas
dec
aaa
dec
aas
ss
in
cwtl
and
bnd
adc
mulb
jl
jg
xchg
cmpsl
ss
add
add
je
call
inc
orb
or
sti
enter
aad
bound
xchg
jnp
loopne
dec
and
or
inc
sub
pcmpeqb
xlat
push
mov
dec
icebp
mov
dec
sbb
and
pusha
mov
xor
iret
mov
test
pusha
sbb
loope
test
push
into
cmp
cwtl
ret
add
fisttps
xlat
fistpll
out
fs
cltd
test
lods
add
xorb
mov
addr16
inc
sbb
das
push
push
scas
push
xchg
xlat
cmp
jbe
inc
or
test
sti
mov
dec
fdivrl
movsl
inc
mov
cmp
pusha
push
jae
mov
push
adc
mov
scas
jno
mov
adc
mov
cmp
jecxz
inc
nop
cmp
aas
xchg
cwtl
sub
stos
sbb
sar
adc
sub
fdivrp
mov
das
jno
data16
xlat
les
call
inc
add
or
in
fbld
cli
jbe
jno
mov
mul
daa
scas
fnstenv
jo
hlt
jg
test
pop
mov
and
rclb
sbb
dec
and
adc
shr
and
or
sahf
sarl
pop
cmp
jb
loopne
loope
jmp
push
scas
sbb
js
xchg
ret
call
sub
stos
insb
jae
cwtl
sub
imul
xlat
cmpsb
emms
mov
xor
xor
lds
scas
mov
stc
sti
pop
sub
inc
fs
andb
adc
cmp
mov
dec
and
jo
adc
xor
loope
adc
inc
inc
iret
enter
sub
cmp
aam
repz
gs
xor
outsl
test
stc
rclb
ror
mov
orb
stos
gs
xchg
jno
out
or
inc
pop
mov
sub
call
adc
testb
add
sbb
sub
mov
in
cmp
arpl
popa
jnp
inc
jne
dec
outsl
in
or
sub
gs
push
andb
xchg
loop
pop
pop
lahf
or
fdivs
repnz
jb
jns
loopne
xor
adc
and
insl
popf
pop
outsb
fwait
mov
in
push
mov
or
ss
and
int
inc
shr
cmp
add
sbb
in
xor
clc
adc
dec
lds
cwtl
stc
lds
js
nop
imul
test
inc
icebp
sbb
lret
pop
cwtl
push
in
xchg
movsb
repnz
mov
sbb
arpl
mov
sub
inc
add
into
aaa
iret
lret
xchg
cld
inc
pop
mov
cmp
jl
mov
js
mov
push
lcall
fwait
mov
jecxz
mov
adc
je
mov
pop
jns
insl
addl
movsb
aad
lret
test
dec
mov
push
icebp
test
sahf
inc
mov
xchg
pop
sub
orps
cwtl
das
scas
jb
mov
dec
and
shr
ss
fwait
daa
mov
orb
ficomps
cmpsl
iret
mov
repz
mov
pop
fdivrl
mov
icebp
clc
stos
ret
dec
inc
add
imul
enter
xor
xor
ja
pop
jo
sub
xor
and
mov
pop
stos
gs
xor
push
stos
in
popf
icebp
repz
and
dec
and
or
push
mov
ljmp
mov
cmp
gs
inc
push
sub
mov
cli
sti
dec
dec
dec
and
aas
adcb
push
inc
out
pop
test
and
fistps
out
sbb
stos
cmpsl
pop
jae
mov
sbb
mov
or
jno
faddp
jmp
popf
loopne
insb
and
stos
pop
push
fwait
and
and
mov
je
in
mov
popf
cmpsl
in
into
mov
mov
push
lods
mov
aad
and
mov
sbb
xor
rcll
les
les
jbe
imul
or
int
outsb
or
cmpsb
push
fadds
pop
out
daa
loopne
mov
xor
out
outsl
xchg
or
mov
or
sub
mov
call
mov
test
shrb
jle
jae
out
std
jne
jae
arpl
jl
sub
mov
mov
sub
sub
ja
sub
fsubrl
xor
and
aam
dec
aaa
imul
dec
and
mov
mov
repz
xlat
mov
sbb
repnz
mov
adc
cmpsl
jbe
in
pop
out
sbb
inc
cmpb
inc
mov
aaa
in
cwtl
push
and
test
cmpsb
das
fdivp
pop
insb
iret
sub
dec
push
int3
and
lea
add
inc
xor
mov
imul
mov
and
adc
pop
mov
xor
stos
nop
and
dec
dec
push
push
movsl
xchg
pushf
shlb
pop
cmp
je
js
dec
xlat
cmp
mov
fcmovu
fiaddl
inc
and
cmp
sarl
dec
lock
xlat
fucomi
fdivs
push
in
xchg
sub
psllw
jo
movsb
mov
ljmp
insb
movsl
mov
fldl2e
pushf
lods
mov
sbb
cmpsl
xor
dec
sbb
and
aas
push
mov
mov
in
lret
add
inc
inc
pushf
out
mov
jl
shlb
pop
fs
mov
stos
adc
pop
fldcw
or
and
jle
movsl
lret
lods
xor
lea
jnp
push
stos
jne
ss
bound
fidivl
adc
enter
dec
or
jge
mov
inc
int
sub
pop
and
pop
mov
jnp
ret
cmp
mov
push
pop
or
add
psadbw
mov
rolb
lea
movsb
cld
mov
xor
push
loopne
repz
sub
push
sub
repz
push
inc
mov
inc
and
jbe
cmp
aad
cmp
scas
push
jle
cmpsb
clc
lahf
aaa
sbb
cmpsb
mov
test
push
inc
test
arpl
add
xchg
test
imul
mov
shlb
or
mov
cmp
ja
imul
dec
xchg
movsb
in
mov
xchg
xor
mov
std
mov
pop
movsl
movsl
cmc
lds
popf
out
cmp
or
push
pop
call
fldenv
arpl
mov
mov
pop
adc
dec
movsb
stos
into
imul
push
mov
and
jge
xchg
sahf
mov
pusha
xor
lahf
inc
jle
xor
add
not
pushl
mov
out
in
test
fwait
nop
lret
adc
pop
pop
inc
add
and
add
cld
aam
xchg
movsb
std
sahf
fisubl
xchg
fmulp
cmp
in
and
out
mov
xchg
das
out
rorb
xor
pop
xchg
cmp
lret
addr16
lods
cs
jo
fisubl
call
mov
pop
int3
roll
push
jecxz
mov
jbe
xchg
imul
es
sub
sbb
sbb
pop
bound
repnz
mov
fisubrs
mov
sbb
lahf
xchg
cmp
push
aad
sbbb
call
mov
mov
aam
popf
addr16
push
mov
cmp
push
sub
int3
and
into
cmp
js
push
sbb
cmpsl
ret
pop
cmpsb
mov
pop
stos
aas
lock
mov
mov
clc
push
stos
sub
insl
int3
mov
in
imul
sub
lea
xchg
push
insb
pop
arpl
ljmp
jne
inc
mov
adc
stc
pop
sub
mov
into
xchg
push
jecxz
lock
cmp
pop
pop
daa
ret
das
push
fists
addr16
mov
and
fisubrs
rcl
push
repnz
vphaddudq
adc
mov
test
cmc
dec
jmp
mov
mov
fbstp
jl
insb
adc
inc
dec
cwtl
jns
or
and
lds
nop
xchg
jp
lret
loop
adc
sarb
rol
adc
imul
sub
sbb
and
pop
push
leave
dec
lods
mov
xorb
andb
into
xchg
jns
push
lock
out
fs
push
fildl
xor
mov
xor
cs
arpl
or
mov
sub
mov
lahf
cmp
mov
add
sbb
aam
xchg
lods
jbe
or
aam
jmp
xchg
popa
dec
or
les
dec
xchg
cmp
stos
adc
and
out
dec
test
mov
cli
push
inc
mov
les
js
sti
pop
add
push
cmp
insb
sbb
or
movsb
in
ja
lods
idiv
fcomps
out
xor
je
dec
cli
pop
or
push
jne
ret
pop
aam
jmp
pop
mov
push
subl
rep
push
enter
movsb
push
push
pushf
test
fwait
push
dec
lret
pop
xchg
mul
sbb
enter
mov
mov
jle
pop
popf
aam
sub
decl
or
bound
mov
cmp
scas
sub
stos
inc
lods
push
sti
popf
lods
sbb
sbb
stc
mov
mov
cld
pop
jbe
test
xor
mov
dec
out
xchg
pop
jo
mov
test
fmull
push
cwtl
in
pop
je
push
popf
pmaddwd
xlat
lcall
cltd
mov
pop
sbb
cmpsb
xor
xor
cmp
mov
xor
aad
lock
adc
in
ja
jo
fstps
repnz
add
ljmp
loopne
jmp
dec
lahf
mov
inc
mov
xchg
mov
push
mov
insl
mov
sbb
into
pushf
insb
mov
and
dec
out
sbb
cli
daa
sahf
in
lret
jno
xchg
cli
pop
lock
push
mov
aad
imul
fwait
test
sti
lods
enter
pop
add
out
fistpll
push
fs
outsl
jl
adc
add
in
mov
fwait
mov
push
pusha
sub
cwtl
sti
jmp
add
das
and
mov
cltd
push
inc
xchg
jo
cmc
xchg
outsl
imul
jge
std
add
shlb
cld
xor
int3
and
cltd
xor
inc
and
pusha
xchg
dec
sbb
repnz
sbb
add
repz
fsubl
add
or
lret
adc
shl
mov
movsb
arpl
imul
mov
out
pop
mov
rclb
repz
or
push
aas
gs
lret
aad
loopne
adc
jae
enter
cwtl
aam
jae
inc
js
mov
pop
jns
or
mov
imul
dec
add
hlt
jo
repnz
mov
dec
out
pusha
xchg
rorl
and
rcr
or
sbb
and
jg
bound
pop
cltd
sbb
les
das
sub
jmp
repz
sbbl
pop
adc
mov
inc
xchg
repz
pushf
xchg
enter
int3
jns
pop
dec
adc
mov
sarb
es
mov
jge
push
lahf
lds
push
mov
ret
ja
pop
xor
mov
and
lods
mov
mov
lret
frstor
mov
insb
jp
sahf
insl
ljmp
mov
stos
and
repnz
outsl
cmp
push
mov
ds
and
push
into
jne
jbe
iret
mov
leave
mov
movsb
sbb
lock
xchg
inc
cld
jno
les
inc
and
or
mov
cld
scas
js
xchg
std
push
jno
mov
dec
loopne
icebp
lods
jg
or
xchg
inc
xor
add
faddl
sub
mov
insb
pushl
pop
xchg
pop
out
pop
fldenv
inc
stos
hlt
inc
adc
fwait
sti
sar
sbb
jmp
xchg
idivl
mov
fs
adc
dec
mov
rclb
mov
movsb
adc
adc
ficoml
fstpl
out
in
mov
push
dec
aam
add
repnz
movsl
repz
out
cmp
lret
add
fwait
jns
pusha
ficoms
mov
test
inc
sub
daa
je
push
jg
mov
pop
aad
cltd
jae
clc
adc
pop
pop
pop
cmp
dec
push
repnz
out
sti
cld
and
mov
dec
lret
mov
cwtd
xchg
loopne
inc
icebp
movsl
inc
mov
push
sarl
xchg
jl
filds
cmp
and
outsl
jecxz
cmp
outsb
jge
loop
std
mov
jl
cmc
cmp
data16
jne
rorb
popa
pushw
leave
jmp
cmp
jns
je
sar
loope
inc
mov
cmp
lahf
mov
movsl
sti
ret
enter
lret
shll
fisttpll
jae
aam
cmpsb
ljmp
xchg
lahf
sbb
mov
sub
cmp
cmp
cmpsb
pop
push
pop
roll
pop
jmp
sbb
ljmp
sub
jle
fldcw
out
fisubrs
inc
int3
cmp
popf
ja
or
ss
das
inc
out
repz
push
imul
insb
movsb
and
in
dec
outsl
jl
fldt
shrl
and
daa
lods
lds
or
mov
xchg
cmp
pop
add
push
cmp
mov
xor
test
hlt
lods
push
mov
test
daa
repz
in
mov
inc
push
repz
es
sbb
sub
cwtl
mov
sbb
lock
daa
adc
cmp
xchg
xchg
test
xchg
push
loopne
mov
loope
xchg
adc
lds
inc
push
push
hlt
pop
xor
outsb
ljmp
fs
mov
mov
mov
inc
pop
gs
cs
and
in
adc
inc
imul
jmp
or
dec
and
jg
mov
sbb
dec
jge
lahf
dec
out
jne
sbb
push
cli
or
divl
js
je
clc
pushf
fwait
xchg
push
pop
or
ret
mov
dec
dec
jmp
mov
mov
mov
pushf
test
sbb
push
leave
jl
add
pop
sbb
subb
aas
jge
out
lcall
xchg
and
fdivrp
dec
sub
add
inc
inc
in
imul
mov
pop
jae
cmp
pop
xlat
scas
jns
daa
fisttps
push
add
cli
or
dec
mov
mov
or
push
enter
sbb
push
pop
sbb
mov
mov
pop
in
in
lahf
stos
add
push
test
dec
and
into
lock
repz
adc
xor
jo
mov
lea
fistl
pop
ret
mov
fstpt
pop
loopne
jg
lret
or
stc
je
enter
js
lock
inc
adc
aam
popf
sbb
imul
call
mov
je
jns
mov
jae
mov
and
push
call
push
lods
push
push
lret
sbb
lods
mov
sub
aaa
shlb
mov
jecxz
sahf
dec
adcl
cmpb
inc
and
ss
clc
add
stc
mov
or
subb
adc
mov
sbb
push
clc
aam
xor
and
jno
and
dec
pop
addr16
push
test
out
sub
jl
call
jge
pushf
out
mov
lods
loopne
dec
fwait
loop
or
mulb
int3
xor
mov
dec
jecxz
loope
sub
xor
sub
cmpsl
inc
xchg
add
lods
clc
fbstp
and
ret
movsb
rclb
clc
shl
xor
inc
mov
fdivs
mov
rclb
pop
filds
pop
cwtl
jg
add
adc
sub
ss
outsl
mov
xchg
sbb
ret
fisubrl
loope
test
pop
adc
lds
xchg
push
clc
xor
push
sbb
mov
push
nop
clc
scas
add
sti
arpl
ja
inc
movq
fidivl
fwait
jbe
in
jnp
mov
cld
fadds
or
in
push
jmp
push
sub
xchg
je
mov
popf
push
add
mov
lods
or
cli
ss
stc
inc
inc
mov
roll
inc
fcmovnb
arpl
sarl
sarb
xchg
push
jnp
das
jecxz
push
mov
or
std
push
mov
push
iret
mov
sbb
xor
int3
clc
mov
sti
sbb
loope
rcrb
lea
push
rclb
lahf
jecxz
mov
inc
sub
mov
out
and
xchg
xor
pop
fdivrs
cmpsl
adc
mov
lret
pop
dec
inc
lcall
sahf
inc
ds
pop
or
mov
cmpsl
test
cmp
lahf
fnstsw
jns
pop
pop
mov
dec
daa
out
push
stc
sbb
jns
les
cmpsb
and
add
inc
sar
cmp
cld
jno
pushf
sbb
aaa
inc
mov
push
mov
jp
lods
or
out
addps
cwtl
outsl
sbb
jge
push
lret
jo
xor
pop
xchg
sub
adc
or
mov
push
shlb
fdivp
movsb
cmpsb
fwait
mov
ss
xchg
adc
dec
lahf
mov
adc
aad
outsl
lcall
insb
mov
stos
push
add
add
data16
cmc
sbb
imul
into
movsl
mov
lds
or
shl
push
outsb
test
into
or
jge
test
lret
arpl
shll
nop
enter
sub
ljmp
jnp
outsb
aaa
inc
ficoml
jg
pop
cmp
pushf
push
repnz
rcll
aaa
fwait
or
cmpsl
xor
or
sub
nop
sbb
mov
sbb
jmp
int
xchg
outsb
sbb
sbb
xor
push
sarl
test
adc
pop
testb
fildl
jl
mov
cmp
push
or
or
mov
adcl
ss
das
jns
mov
ret
fdivrs
xlat
dec
clc
add
lods
clc
lods
fwait
inc
push
push
lcall
dec
xchg
sbb
push
aam
mov
cmp
jecxz
je
xchg
imul
aaa
xlat
jecxz
cs
jmp
add
and
addl
daa
jbe
push
ficoms
enter
xchg
inc
das
dec
dec
icebp
sub
push
enter
mov
mov
shll
dec
xchg
in
fdivs
out
jnp
icebp
push
fstpl
cmp
daa
adc
popa
cltd
xchg
and
cmp
loopne
scas
jl
pop
addr16
lahf
ret
jecxz
out
mov
aas
push
aas
mov
add
xor
sbbb
bound
movsb
lods
dec
shrl
inc
push
clc
push
mov
lret
lock
aam
xor
and
mov
xchg
adc
js
aaa
sbb
pop
and
sub
xor
pop
fmul
sarl
mov
mov
mov
sbb
movsl
pop
adc
xchg
inc
cmpb
ss
adc
xchg
mov
xchg
or
adc
cmp
stos
push
push
scas
xor
cli
cmpsl
in
subb
fcmovnb
test
mov
dec
mov
dec
cmpsb
mov
mov
roll
loope
xchg
and
inc
or
pop
ljmp
out
sbb
or
xor
jg
cmp
fldenv
xor
xchg
in
mov
fcmovu
pop
sbb
mov
fxch
pop
sbb
adc
sbb
pop
pop
in
rclb
cld
or
js
push
push
sbb
jnp
jecxz
push
or
pop
pushf
addr16
ds
mov
xchg
adc
jge
loope
pop
je
jge
cmc
arpl
sub
pusha
mov
or
and
fwait
push
sbb
cwtl
sahf
jbe
scas
addr16
sbb
lock
test
int
dec
fcmovne
cmp
add
sbb
cli
lea
jns
add
mov
inc
aas
lahf
xor
push
pop
or
add
jbe
push
pop
mov
xorl
sbb
pop
xor
lods
add
jo
gs
sbb
push
add
loop
xchg
cmp
cmp
fstpl
pop
jp
mov
loop
shlb
add
dec
and
xchg
xchg
iret
fists
jl
xor
dec
sbb
lret
or
negb
ss
jnp
hlt
mov
or
dec
lods
ficomps
js
jo
push
and
and
mov
sub
loopne
out
clc
out
inc
fbld
je
mov
cli
mov
ljmp
jns
ja
insl
adc
nop
fildl
loop
call
pop
mov
add
cld
jns
add
or
call
mov
sti
mov
adc
lods
orb
push
dec
testb
xchg
daa
xchg
movb
cltd
pop
cwtl
add
xorl
cmp
pop
cli
aam
pushf
aam
and
testb
adc
mov
push
ficomps
mov
and
std
loop
std
test
pop
outsl
mov
push
sub
pushf
mov
jp
call
pop
xlat
inc
push
adc
rcll
and
mov
out
jle
ss
xorl
into
jo
and
sub
xlat
lods
xchg
or
add
out
iret
lea
lahf
push
stc
xor
mov
mov
dec
mov
cwtl
bound
daa
in
into
arpl
pop
call
dec
ret
adc
ljmp
aad
mov
mov
div
cmp
fstps
rolb
push
in
inc
jns
sub
fimull
sbb
sahf
push
or
stos
mov
fstps
xchg
and
inc
jae
sub
push
jnp
or
jae
fwait
inc
mov
data16
movsb
in
mov
lods
cli
inc
cmp
sti
clc
test
int
arpl
out
aaa
test
cmpsl
xchg
sub
stc
push
movsb
fsubl
adc
inc
cmp
fs
mov
mov
push
cmp
adc
int
jge
addr16
push
imul
lret
or
out
jb
mov
add
jp
adc
int
mov
jo
adc
cmp
jle
inc
jae
cmp
xchg
insl
or
inc
xchg
movsl
cmp
or
ljmp
test
mov
cmp
xchg
subl
xchg
lcall
fs
xor
inc
xchg
insl
xlat
dec
mov
inc
enter
add
xlat
cmp
out
test
fildll
dec
xchg
ja
mov
mov
rorl
push
xorb
jge
inc
hlt
dec
outsb
push
push
push
aad
sbb
fisubs
xor
jle
popf
scas
xchg
ljmp
arpl
mov
jnp
loopne
les
leave
fcmovnu
jecxz
dec
xchg
test
fidivl
xchg
sbbb
push
les
mov
loopne
mov
jle
imull
add
fsubr
pop
mov
aad
sub
arpl
rolb
mov
cld
mov
jae
sbb
cmpb
ja
iret
cs
mov
xchg
mov
push
xor
pop
fwait
clc
and
jmp
push
imul
pushf
mov
insl
scas
sti
lcall
test
insl
adc
loopne
dec
mov
sar
stc
jle
shrb
fdivl
adc
lcall
or
fwait
das
lahf
and
cmp
shlb
out
dec
xchg
jge
into
mov
and
lea
lahf
clc
scas
sub
xor
dec
xchg
pop
jmp
mov
adc
inc
adc
hlt
pop
inc
dec
in
repnz
push
mov
gs
repz
mov
lds
cmp
cmp
xor
add
xor
cmp
cmpsl
and
out
push
enter
shrl
xchg
mov
ljmp
icebp
cmpsb
fwait
rcl
xor
mov
lahf
pushf
repz
pusha
pop
subb
dec
and
shrb
daa
subl
xchg
jbe
enter
jbe
mov
xchg
nop
sbb
adc
xor
push
cmp
in
es
inc
lahf
nop
jae
inc
xorb
mov
and
call
xchg
out
xor
mov
fneni(8087
xor
inc
fstps
xchg
mov
cmpsl
jp
test
outsl
fcomps
jmp
test
mov
xor
and
hlt
dec
mov
into
mov
nop
cmc
xlat
push
mov
pop
add
push
aaa
inc
cld
pop
dec
adc
cld
or
push
push
dec
lods
dec
out
jmp
rclb
push
adc
mov
sahf
call
in
fdiv
dec
mov
push
insl
jl
repnz
psubusw
xor
xor
ret
fisubs
nop
cmp
inc
push
xchg
pop
imul
in
pop
pop
mov
repnz
test
adc
jge
in
xchg
fs
test
hlt
insb
in
or
das
stc
dec
add
add
es
mov
sub
lea
nop
push
and
test
popa
cmpsl
js
bound
mov
je
iret
sti
cwtl
clc
push
lock
out
lods
add
popl
pusha
mov
cmc
adcb
insb
mov
pusha
lods
push
in
dec
in
scas
pop
inc
fldcw
adc
or
sahf
in
dec
mov
movsl
ss
and
lcall
rolb
ljmp
mov
mov
mov
pop
add
jg
xchg
clc
jno
filds
sbb
adc
adc
add
or
pop
push
mov
pop
roll
inc
in
mov
pop
sbb
lcall
adc
sbb
les
mov
sub
inc
insb
aam
imul
in
lods
xor
repz
sbb
dec
loopne
or
xor
sbb
rorb
cmp
add
or
push
push
sbb
enter
cld
push
cmp
out
push
daa
js
sbb
popf
push
sahf
mov
call
sbb
rolb
pop
ds
shrb
mov
lods
inc
rcrl
pop
and
lds
std
insl
pop
xchg
jg
xchg
jae
pop
xor
fisubrs
es
insb
mov
shlb
aam
ds
and
jae
call
add
pop
fcomi
sub
lods
and
sub
out
ja
sbb
rcrb
add
sti
cmp
outsl
jae
xor
das
adc
pop
das
add
imul
loopne
adc
pop
movsl
or
in
pop
loopne
scas
xchg
sbb
mov
js
bound
lcall
out
sti
mov
je
mov
insl
arpl
mov
das
or
stc
movsl
mov
scas
subb
cmp
or
loop
mov
sbb
rorb
dec
adc
jbe
insl
jne
mov
imul
add
jle
out
lahf
inc
adc
pop
lea
repnz
dec
mov
xor
sub
xchg
ret
sub
int3
sub
wrmsr
mov
repz
pop
xchg
test
jb
mov
loope
jno
hlt
sub
sbb
ss
xchg
pop
cwtl
mov
fldl
jbe
adc
leave
bound
or
dec
pop
mov
xchg
xchg
mov
cltd
das
add
mov
sarl
adc
and
insl
pushf
mov
pusha
sbbb
pusha
push
xchg
scas
ds
sub
loopne
inc
xlat
mov
leave
mov
test
outsb
outsl
inc
repnz
and
mov
lret
int
jae
mov
out
pop
sbb
jae
mov
incl
pop
mov
mov
mov
mov
ret
outsl
mov
adc
out
sub
mov
inc
lahf
pop
stos
lret
rcrl
mov
mov
push
jbe
in
cmpsb
sarb
int3
mov
adc
jbe
adc
mov
cld
add
xor
aaa
cmpsb
xchg
jbe
or
sub
sbb
adc
mov
addr16
pop
cmpsb
mov
cltd
test
rorl
fisttps
test
inc
adc
js
xchg
imul
push
adc
mov
test
je
sbb
loopne
mov
negl
lock
mov
jge
jp
push
test
es
xor
int3
dec
fucom
sub
jmp
sbb
sub
mov
sbb
push
mov
jp
aaa
and
xchg
cmp
mov
mov
mov
mov
sbb
aaa
push
ja
and
or
mov
shl
mov
xchg
int
ljmp
inc
dec
mov
pop
in
cmp
sub
mov
cmpb
cmpsb
test
stc
repz
xor
mov
or
popf
jbe
cmpsl
add
cld
xchg
iret
test
sbb
loope
lds
adc
sub
rclb
aam
lahf
push
inc
popa
outsb
data16
mov
icebp
shlb
in
cmp
mov
ds
adc
daa
jg
movsb
pop
movsl
movsb
xlat
jne
cli
jns
ljmp
insb
repnz
ret
enter
xchg
movsl
sbb
sbb
std
stc
repnz
bound
adc
add
or
lret
jb
shl
cwtl
roll
sub
orl
xlat
test
adc
cmpsb
imul
test
stos
cmp
daa
iret
fbstp
stos
mov
rolb
scas
pushw
cli
pop
sub
sub
addr16
les
and
sbb
fwait
add
xchg
pop
test
rcrl
inc
xchg
rcr
or
push
loope
mov
pop
hlt
or
repz
dec
add
cmp
inc
jno
imul
arpl
test
pushf
xlat
jecxz
cld
sbb
push
cli
outsl
lock
in
in
mov
stc
cmp
mov
mov
inc
cmp
insl
sbb
dec
mov
jp
dec
add
cmp
rcll
jecxz
or
in
mov
sub
xor
cld
xor
dec
mov
std
push
cwtl
adc
mov
cmp
es
inc
dec
scas
and
jmp
in
inc
fs
test
test
jmp
int
mov
repnz
adc
sarl
pop
mov
inc
in
jge
push
adc
cmp
popa
scas
rclb
mov
imul
push
cmp
jae
or
daa
leave
inc
mov
xacquire
shrl
hlt
sbb
aad
shr
adc
cmpsb
mov
push
scas
nop
sti
ljmp
push
pop
xchg
test
test
lock
sub
pop
outsb
or
stos
cltd
fstl
sarb
cltd
inc
lcall
cs
jnp
je
dec
faddl
jo
sbb
ljmp
clc
push
adc
aad
jno
dec
ret
out
je
mull
or
es
jmp
hlt
daa
jecxz
mov
sbb
pusha
or
in
sub
lock
adc
mov
insb
mov
or
inc
sahf
iret
sbb
lret
push
and
pop
out
dec
xchg
faddl
jbe
adc
mov
je
jo
xchg
mov
ljmp
cmpl
and
pop
xlat
mov
mov
jno
insb
mov
or
fs
add
push
sbb
stc
pop
fwait
xchg
aaa
idivb
sub
mov
and
jno
add
ret
pop
sub
push
add
pop
ficoms
aad
fwait
ror
in
xchg
push
mov
sub
pop
mov
rol
push
inc
xor
add
shlb
mov
cli
dec
movsb
gs
test
dec
add
xor
and
iret
stos
dec
ss
ja
leave
sbb
jae
inc
xor
loope
inc
daa
xchg
sub
jno
or
dec
ret
ds
fldl
pusha
or
inc
lret
pop
push
fs
jecxz
rorl
fdivrs
dec
adc
cld
jo
aad
pop
sahf
pop
sbb
jecxz
ljmp
cmpsl
add
ss
repz
fldl
mov
sbb
sbb
cmp
out
jmp
xchg
in
int
outsb
cmc
ds
push
xor
cmp
push
mov
movsl
aam
addb
stos
sahf
stos
into
jle
out
mov
jle
test
lea
out
sbb
inc
mov
mov
cltd
jmp
dec
jb
inc
rclb
push
jle
sub
inc
mov
mov
xor
outsl
movsl
inc
push
sbb
adc
shrb
push
scas
movsb
inc
xchg
dec
shl
mov
jg
addr16
push
push
pop
jbe
pusha
aas
popa
push
cs
lret
lods
xchg
inc
ljmp
mov
jns
mov
mov
dec
mov
mov
stc
push
es
fwait
jo
xor
shl
fcompl
call
es
push
arpl
fsubs
out
adc
test
fldt
adcl
inc
pop
and
test
or
je
and
cmp
push
xchg
shll
arpl
lcall
xchg
rorb
ja
jne
xchg
pop
push
xchg
pop
std
mov
sahf
xchg
jo
and
ss
sahf
cmp
in
nop
jno
test
xchg
enter
xor
push
ds
jge
push
cmpsb
or
xor
mov
jl
orb
cmpsl
xor
xor
sbb
push
ss
sbb
push
das
int3
xor
icebp
test
xchg
pop
xor
aaa
mov
ret
popa
sub
sbb
jnp
in
pop
cmp
in
in
mov
andb
mov
mov
out
dec
loop
nopl
mov
in
xchg
ds
add
and
lret
mov
ficomps
repz
shl
jmp
inc
ja
dec
sar
jae
test
sub
add
or
xor
lea
out
shl
inc
lock
iret
mov
lret
sbb
icebp
push
cld
je
rcl
in
add
mov
je
jge
sbb
test
sbb
dec
popl
mov
mov
adc
dec
cs
pop
out
fstps
jnp
sub
orl
mov
lock
xchg
adc
cmc
sbb
mov
les
xchg
idivl
add
stc
ds
push
mov
mov
lods
movsb
repnz
cmp
scas
pushf
into
mov
mov
and
jne
movsb
inc
inc
cmp
out
stos
fistpll
mov
popl
ja
dec
inc
add
xchg
in
loopne
pop
lret
idivl
fstps
cltd
shrb
pop
cmpsl
fidivs
jae
pop
rep
inc
in
fldenv
pop
stos
mov
mov
mov
in
mov
mov
out
inc
div
in
outsb
mov
sbb
xchg
mov
add
fsubrl
les
xor
fcmovb
push
xchg
mov
mov
orb
js
adc
adc
out
movsl
push
push
cmpsl
pop
aad
xchg
inc
in
and
jns
shlb
fdivrl
stos
sbb
jp
push
mov
sub
push
inc
jge
jmp
fiaddl
arpl
repz
ds
enter
aaa
xchg
inc
mov
jne
jnp
lret
mov
imul
push
in
xchg
pop
cmp
stc
je
repnz
jle
xchg
fistpll
aad
mov
imul
je
pop
jmp
pusha
mov
cs
or
mov
ss
jecxz
scas
insb
imul
pop
and
adc
mov
jle
mov
in
mov
arpl
into
std
push
push
aam
shll
dec
loope
pop
pop
inc
jae
into
pop
out
shl
xorb
dec
iret
add
repnz
mov
xor
sub
bound
test
lods
mov
adc
int3
rcrl
jmp
mov
sbb
lods
cmp
imulb
inc
enter
mov
add
sub
hlt
fcomip
aaa
cld
aaa
cmp
rorl
mov
das
xchg
out
sbb
out
rcr
sub
fidivrs
ss
mov
dec
pop
mov
cmpsl
test
mov
leave
jecxz
int
pop
jb
push
xchg
nop
mov
orl
iret
pop
pop
fdivrp
cs
mov
stos
loop
ja
pop
sbb
mov
mov
cmp
int3
jmp
fistps
repz
sub
add
xchg
int
ret
pop
jg
subb
inc
aas
mov
ds
inc
jae
xor
cwtl
jg
out
jp
pop
insl
lret
stc
lods
or
xlat
xchg
ja
xchg
ss
jns
cmpsb
inc
test
pop
mov
enter
gs
movsb
pop
ds
mov
mov
add
mov
test
dec
test
js
adc
mov
sub
lret
in
je
and
jg
mov
aas
jne
lret
sub
fucomi
adc
testl
stos
inc
insl
push
mov
arpl
jbe
push
and
mov
pop
lods
popf
inc
cmp
rep
sbb
icebp
lret
ljmp
std
jle
daa
cmc
ja
jecxz
sub
imul
or
pop
mov
inc
sub
xchg
cmp
push
cwtl
movb
lods
out
xor
inc
icebp
pop
int3
or
lcall
jno
ret
sub
stos
js
jae
xchg
dec
xor
js
lods
dec
xchg
add
xchg
clc
push
cld
in
imul
movsl
pop
pop
loope
xor
lea
and
cmpsb
loopne
or
and
push
dec
xchg
jl
into
pop
sbb
or
mov
mov
cmpw
dec
cmp
mov
jb
sub
push
stc
pop
cmp
out
out
enter
push
pop
movsl
mov
mov
cmp
push
dec
push
lea
xchg
loopne
pop
fisubl
sub
and
jmp
mov
pop
add
jmp
add
cmp
sbb
xor
testl
filds
cmp
xchg
adc
imul
pop
or
decl
push
xchg
jmp
ljmp
imul
sub
jg
dec
repz
xor
fs
cmp
or
inc
addr16
push
jnp
xchg
ret
stos
out
das
pop
mov
xor
sub
movsw
xlat
mov
outsl
loop
jns
push
loop
and
loopne
or
into
cld
sbb
dec
fisttpl
or
push
mov
sbb
jbe
std
test
jno
mov
in
xchg
dec
inc
aam
adc
push
cwtl
push
mov
xchg
rcll
cli
lret
filds
mov
dec
add
pop
xchg
xchg
and
fcompl
xor
push
jnp
fwait
jb
adc
xchg
xchg
sbb
fdivs
cld
sub
sbb
ficoml
and
push
cs
cmp
lret
mov
mov
add
mov
pop
divl
lods
push
mov
shlb
jecxz
cmpsl
test
sub
jnp
mov
shll
aas
fwait
mov
pop
nop
loope
xor
jp
push
dec
ds
stos
dec
lds
clc
jnp
add
int3
lock
std
cmp
shll
std
rcr
dec
add
loop
into
in
or
add
rcl
fadds
mov
adc
pushf
or
add
lea
or
dec
scas
pop
sbb
jl
push
and
jbe
adc
fucom
test
xor
add
push
inc
cli
loop
shrl
popa
scas
inc
dec
cmp
les
daa
cmp
jns
test
clc
xorb
xlat
dec
cmp
xchg
dec
xchg
ficompl
add
add
dec
xchg
test
aas
loope
mov
cmp
popf
aam
push
adc
or
sbb
je
js
inc
fiaddl
push
adc
adc
repz
adc
cld
in
sub
sub
mov
ja
push
mov
adc
fwait
cmc
mov
sub
push
xor
adc
jno
mov
incb
daa
and
in
jnp
stc
ss
lcall
push
push
iret
shr
sub
shrb
fucom
jle
cmp
adc
lods
jne
adc
jl
xor
test
xchg
dec
insl
cwtl
sbb
insl
sub
mov
jns
mov
cld
imul
xor
add
jo
out
imul
lret
mov
decl
mov
add
stos
xor
jmp
and
test
lods
mov
pusha
mov
data16
test
data16
lock
sub
fsts
inc
pminub
jge
dec
and
das
addb
call
pop
imul
sbb
fisubrs
sub
mov
repnz
push
std
mov
aaa
sub
xchg
in
test
int
arpl
xor
js
adc
mov
xchg
sub
push
movsb
push
test
mov
push
scas
rcrb
sub
pushf
lret
setge
push
loopne
adc
sbb
push
sub
fisubrs
idivl
push
test
std
add
jge,pn
mov
insl
outsb
es
nop
ds
dec
push
daa
xchg
cmpsb
cmp
enter
int
dec
pop
popa
sbb
add
gs
cmp
imul
repnz
dec
pop
rorl
and
pop
and
call
fidivrs
aas
adcl
jl
orb
hlt
push
pop
add
or
push
push
mov
cmp
push
push
push
jmp
sbb
pusha
add
lods
js,pt
add
push
jns
push
cmpsb
dec
sahf
iret
pop
jmp
and
push
add
outsl
inc
xchg
or
jbe
addr16
test
jns
pop
xchg
lcall
xchg
mov
popa
push
sahf
dec
inc
dec
loop
add
ljmp
adc
mov
inc
mov
pop
hlt
mov
insb
push
inc
lahf
shl
test
xchg
adc
add
mov
add
sub
sbb
xchg
mov
jl
adc
std
jle
movsb
mov
inc
xchg
test
sbb
cmp
jge
sub
and
es
cmp
add
mov
lods
lds
cmpl
aad
xor
jge
hlt
hlt
stos
push
dec
insb
loopne
ret
imul
mov
mov
mov
stos
pmuludq
inc
and
or
jg
in
test
push
fsubs
inc
or
sub
testb
sahf
out
das
mov
bound
mov
mov
pop
mov
aas
dec
js
cmp
push
out
mov
js
push
popa
psadbw
xchg
imul
mov
jg
mov
push
cltd
fisttpll
inc
nop
rolb
inc
fists
xchg
js
mov
in
adc
mov
subb
out
test
inc
jmp
jns
pushf
mov
outsl
stos
xchg
movsb
mov
mov
outsl
push
repz
xchg
sbb
push
lds
pop
inc
sub
mov
hlt
test
inc
mov
mov
jb
ret
out
fs
loop
or
pop
mov
fidivrl
inc
nop
pop
shll
mov
mov
loopne
nop
test
push
sbb
sti
mov
sub
jge
stos
sbb
pop
test
push
scas
pop
out
popa
loopne
lods
outsl
jne
xchg
stc
pusha
adc
cmp
arpl
in
aad
frndint
push
inc
fwait
inc
push
hlt
pop
js
das
int
and
out
adc
imul
ljmp
sub
add
dec
lret
lahf
scas
xchg
shlb
xor
loop
adc
loop
pushf
sbb
mov
rcll
int
push
fwait
and
cld
fistps
sbb
rcrl
mov
pop
add
std
xchg
xor
pop
lahf
cmpl
fldpi
pusha
orb
jecxz
sbb
jne
mov
mov
adc
adc
imul
sbb
jbe
adc
in
stos
stos
lret
mov
daa
sub
pop
lods
fwait
ljmp
jbe
inc
mov
in
jno
stos
pushf
inc
add
rcrl
fsubs
call
lret
icebp
lret
es
ret
stc
leave
mov
stc
mov
push
mov
lahf
push
decb
lods
pushw
insb
test
andl
insl
jle
mov
add
inc
mov
mov
into
cmpsl
sahf
push
fstpt
test
or
jg
mov
ret
ss
adc
push
in
jo
int
pop
sbb
cmp
dec
popa
orl
push
push
in
add
int
mov
sbb
or
out
outsl
loop
xchg
add
in
sub
es
xor
out
add
push
pop
out
rcll
cmp
xor
mov
mov
push
fsts
add
mov
xor
pop
cld
jbe
sbb
pop
ss
sbb
sbb
scas
push
mov
bound
sbb
lahf
inc
mov
pusha
adc
es
fistpll
in
xchg
sub
in
or
dec
pop
fisttpl
sarl
inc
leave
popl
adc
icebp
cld
add
push
ficomps
daa
mov
pop
adc
mov
push
sub
push
test
jbe
xor
push
jl
adc
jecxz
jae
cmp
sub
ret
pop
xchg
pop
adc
in
add
pop
testb
xchg
xor
and
xchg
ret
lahf
pop
pop
mov
sub
xchg
adc
mov
xchg
dec
stos
dec
scas
jae
push
mov
iret
or
mov
out
cs
adc
and
stos
cs
xchg
dec
repnz
mov
cmpsl
negl
fnsave
ljmp
rolb
push
fs
mov
lcall
xor
sub
mov
xchg
roll
out
jge
subl
repnz
push
jno
in
and
adc
fstpt
mov
xchg
or
cmc
sub
inc
stos
jmp
mov
mov
adc
xlat
leave
inc
sub
ret
pop
inc
cmpsl
lret
pushf
lret
adc
test
adc
and
idivb
es
je
repz
fcomps
jo
stc
mov
in
jg
pusha
mov
js
and
mov
pusha
push
fcomps
shl
enter
inc
add
movsb
push
sbb
mov
insl
inc
aas
jb
test
push
xor
shll
nop
in
push
mov
push
cli
mov
pop
jmp
test
shrl
shll
add
icebp
xor
cmpsl
or
fs
cmpsb
fisttpll
mov
test
xor
dec
dec
xchg
sbb
stc
xlat
loope
xchg
ret
cltd
std
rclb
fbstp
loope
add
cmp
movsb
jmp
ret
nop
inc
jg
cmpsb
pop
and
or
push
cmc
push
int3
xor
mov
mov
popf
popa
dec
leave
push
sbb
pushf
push
dec
xor
jle
sbb
iret
stos
mov
pushf
add
dec
adc
les
in
fiaddl
sarb
dec
push
add
inc
mov
xchg
aad
jmp
scas
mov
fdivrl
mov
imul
cltd
mov
mov
lock
fwait
sub
inc
xor
xor
int3
scas
popf
sub
mov
mov
mov
lcall
mov
inc
into
cld
mov
add
mov
jmp
nop
popa
pop
dec
daa
pushf
jmp
inc
adc
cmp
mov
mov
inc
decb
inc
popa
shrl
cmpsl
push
xchg
pop
je
jae
rol
imul
popf
xchg
lock
mov
mov
repnz
popf
ret
inc
cmpsl
dec
ret
lods
hlt
cmp
imul
pop
pop
sbb
std
stos
cmc
shlb
inc
sub
cs
subb
mov
xorl
addl
jnp
mov
push
pop
inc
sbb
decl
cmp
mov
lret
pop
cmpb
pushf
mov
jmp
fildll
stos
sbb
repnz
push
xor
cmp
insb
jmp
and
pop
sub
jne
repnz
sbb
out
fisttpl
loope
enter
arpl
repz
mov
jp
inc
rcrl
push
imul
inc
hlt
xchg
mov
cld
inc
adc
jo
adc
flds
out
sub
scas
les
js
sub
sub
push
or
or
or
xchg
out
xor
in
jbe
rorb
arpl
and
mov
jmp
out
sub
test
cld
jg
dec
xchg
aas
pop
jbe
shld
dec
stos
mov
push
mulb
add
data16
or
dec
adc
push
xchg
xchg
mov
insb
mov
xchg
fidivl
pop
pop
outsl
std
lods
int
test
inc
push
xchg
add
or
or
cmp
mov
repnz
dec
stos
lods
sub
mov
cmp
mov
and
sub
std
dec
ja
movsl
and
fstpt
clc
pusha
cli
leave
in
inc
stos
lret
mov
push
out
setg
jmp
push
stc
test
adc
std
stc
icebp
xor
nop
and
xchg
out
push
xor
jno
sub
icebp
sub
jg
out
je
or
pop
lea
add
test
ja
insl
mov
cmp
add
mov
sti
test
dec
mov
and
icebp
mov
mov
pop
fidivl
or
jge
dec
scas
push
adc
cltd
pop
dec
out
lods
cmp
sub
jp
add
push
aam
pop
lret
iret
mov
or
pop
push
push
add
jae
sbb
sbb
mov
sbb
mov
iret
insb
loope
test
and
sub
fimuls
pushf
mov
jb
int3
test
cmpsb
bnd
push
pop
mov
xor
adc
lea
xchg
scas
jae
lea
out
jne
pushf
shll
inc
sti
ffreep
jmp
pop
testl
cmp
xchg
adc
sarl
jl
mov
icebp
mov
jne
cmpsl
std
jb
incb
sbb
push
add
add
lods
cmp
out
pop
jbe
mov
aas
jb
cmp
fwait
inc
rolb
out
ja
fcoml
pop
cmc
mov
push
mov
adc
icebp
sarl
cltd
lods
sbb
cmp
cmp
into
inc
push
mov
mov
lock
sub
out
loopne
inc
dec
out
pop
aas
jmp
shrl
mov
sub
inc
or
sbb
out
and
dec
pop
insl
les
rcrl
insb
adc
xor
inc
in
arpl
out
push
xor
or
and
sbb
lret
mov
clc
xchg
pop
call
fsts
adc
sub
and
or
mov
popf
push
or
lock
sti
arpl
pop
xor
or
dec
cs
loop
jecxz
scas
sub
mov
aas
mov
sti
jae
mov
push
gs
lds
dec
outsb
cmpl
mov
movsb
jl
mov
movsb
mov
sbb
xchg
xor
dec
xor
xchg
inc
mov
and
push
cltd
xchg
or
pop
fsubr
sti
shlb
sbb
push
push
andl
aad
xchg
lret
ffree
in
and
out
pusha
call
js
into
mov
rclb
sub
ret
add
in
or
dec
jns
inc
mov
ja
cmp
sbb
jmp
and
sti
mov
jo
and
cmpsb
jle
mov
test
test
shll
cmp
jo
dec
mov
and
test
mov
sbb
push
mov
out
cmp
cmpsl
mov
mov
out
mulb
sub
push
xchg
push
xchg
test
xchg
mov
icebp
mov
cmpsb
sub
adc
pop
das
faddl
dec
dec
adc
xor
cmp
scas
mov
mov
ficomps
daa
notl
pop
insl
rcrl
ret
pop
sbb
out
in
cmp
lret
arpl
shl
xor
leave
jnp
jb
push
and
mov
ljmp
push
shl
jno
arpl
push
pop
push
cmp
ret
xor
bound
mov
add
pop
in
repnz
cmp
sbb
pushl
enter
sub
xchg
bound
cmp
mov
fidivl
mov
inc
pop
mov
js
aaa
push
je
dec
jno
fs
push
mov
jns
push
shll
movb
jle
mov
add
insl
aam
repz
lahf
outsl
jl
and
inc
pusha
cs
loopne
sti
and
repnz
shlb
movsb
mov
inc
outsl
or
push
ds
in
cmp
repz
leave
rcrl
mov
mov
pop
lret
mov
sbb
sub
out
and
xor
ds
mov
xchg
cmp
cmp
int
in
cmpsl
dec
inc
pop
sbb
pop
imul
and
dec
mov
loop
sub
xchg
mov
clc
push
cld
out
call
push
cmpsb
out
outsb
pop
push
cmp
outsl
xchg
push
into
mov
into
int
push
sub
sbbb
or
push
out
xor
fisubrl
hlt
dec
xor
repz
and
sub
cmc
adc
sbbl
pop
in
jg
popf
dec
push
xorb
adc
rorb
mov
lcall
adc
xor
lahf
sbb
push
test
xchg
mov
push
pop
pushf
sbb
cltd
adc
mov
fmul
xor
mov
inc
ftst
inc
dec
cmp
rclb
inc
jbe
adc
insl
in
push
jp
xor
inc
rcl
or
xchg
rol
out
mov
xchg
jae
repz
or
insl
dec
rclb
fdivl
movsl
fdivrp
jle
popa
js
add
test
mov
imul
test
fstp
mov
sub
imul
rcl
mov
cs
iret
inc
ds
mov
pop
sub
sbb
pushl
ljmp
mov
lea
xchg
bound
mov
adc
push
cld
mov
loopne
and
mov
mov
daa
int3
fs
xor
or
jle
stos
dec
mov
pop
rcrl
test
adc
loopne
loop
xor
insl
scas
cmp
push
out
fdivrl
or
lcall
add
push
cwtl
add
adc
dec
mov
mov
and
cwtl
fnstenv
addr16
mov
xor
lea
outsb
lgs
bnd
push
pop
jnp
imul
dec
lock
faddl
adc
loope
lods
xchg
js
das
jno
popa
dec
popa
mov
scas
nop
ja
dec
pop
adc
insb
icebp
loopne
add
mov
jl
push
pop
outsb
dec
sub
jle
test
sbb
clc
inc
addr16
pushf
pop
sahf
ja
cmp
addr16
addb
or
sbb
sti
xlat
movsb
jno
mov
push
sub
outsb
and
int3
ja
jnp
pusha
dec
add
outsb
sub
std
xor
xchg
mov
adc
stos
pop
frstor
xchg
inc
mov
and
dec
pop
nop
sahf
cmp
sbb
xchg
and
inc
mov
mov
adc
or
mov
ficompl
push
push
scas
insl
mov
pop
pushf
jle
adc
xor
mov
fsubr
jle
xchg
sub
fmull
mov
cmc
lret
add
repz
dec
sti
xchg
pop
stos
insb
mov
dec
xchg
pop
daa
iret
cltd
add
push
inc
mov
push
clc
xor
jb
pop
sub
xor
ja
jbe
sbb
sub
xchg
jns
mov
mov
ja
mov
adc
subb
inc
iret
xorb
imul
pushf
jp
mov
mov
inc
sbb
sub
mov
inc
call
shrb
popf
inc
dec
jo
iret
pop
pushl
xor
add
testl
or
add
mov
cmp
dec
sub
popa
jge
add
inc
aam
cmp
or
insb
cmp
fcom
push
lods
inc
adc
mov
lret
push
in
les
cmp
pop
adc
lcall
mov
inc
in
lds
pop
pop
sti
push
scas
mov
adcl
pop
and
sahf
loopne
imul
movsb
mov
outsb
imul
push
jle
jne
mov
test
les
jmp
ficoms
fsubrs
push
shrl
into
stc
cmp
push
aad
pop
mov
mov
sub
and
out
je
push
dec
mov
lret
lods
xor
mov
sbb
push
loope
inc
fbstp
dec
push
mov
int
xor
and
mov
or
pop
in
cmp
xor
sub
imull
popf
movsl
shrb
adc
imul
jae
inc
mov
fcmovnb
push
mov
jbe
xchg
popa
xchg
xor
mov
sbb
sahf
fsubrs
cmpsl
or
lahf
jae
outsb
jne
mov
loop
iret
fldcw
sti
push
mov
push
pop
dec
push
cmp
fisttpl
add
push
sbb
add
fcomps
mov
dec
aaa
out
inc
rorl
fsubl
sub
ret
cmp
mov
inc
arpl
add
sbb
fnstenv
shl
and
popa
jle
cmpsb
lret
ljmp
mov
ret
xor
test
add
loope
inc
imul
scas
add
loop
pop
cs
fists
lcall
push
mov
jo
or
jp
and
xchg
xor
push
jno
sbb
mov
add
out
sbb
stc
outsb
add
push
mov
inc
jl
or
jl
shlb
lock
lods
mov
test
adc
push
pop
test
jg
sub
xchg
jmp
dec
cmp
cmp
lret
xchg
mov
jmp
and
and
pop
push
stos
inc
sbb
aam
adc
notb
xor
adc
je
lret
test
sub
es
push
scas
mov
xchg
mov
cli
lret
and
negb
call
cltd
insb
bnd
inc
add
xor
push
jg
jge
stos
call
fisttpl
scas
leave
stc
outsl
dec
out
mov
ja
out
roll
popf
lea
cmp
test
dec
hlt
cmp
mov
push
xchg
mov
xor
cmpsl
pusha
int
sub
mov
js
jae
cmp
and
pushf
mov
jmp
or
or
rclb
jl
jbe
inc
xchg
mov
lahf
cli
or
sub
int
push
in
pop
xchg
stc
xcrypt-ctr
cmpsl
popf
push
dec
push
movsl
mov
orb
sbb
jne
test
cmp
outsl
pop
xchg
cwtl
sti
mov
lds
mov
in
cmp
lds
inc
xchg
sbbb
pop
mov
or
fcomp
test
clc
test
and
fists
cmp
lret
test
adc
popf
xchg
or
push
pop
jmp
imul
popa
fadds
xchg
insb
stc
pop
jecxz
jbe
data16
out
leave
xorb
rorb
hlt
or
jl
repz
xchg
sbb
xor
loope
mov
in
dec
fldl
cmpsl
inc
popf
xorb
aam
sahf
mov
ficoml
lcall
movsb
jb
add
in
adc
sbb
dec
rolb
movb
lds
dec
jnp
sti
add
daa
cmp
xor
pop
dec
jmp
push
rcrb
and
mov
std
or
push
cmc
lahf
push
xchg
test
in
std
adc
sar
cmpsl
pop
leave
mov
divb
out
ficoms
adcl
or
xor
cli
loopne
xor
xor
fisubs
cmp
mov
jno
icebp
jl
pop
popl
xor
mov
fistpl
stc
out
xchg
xchg
mull
dec
pusha
mov
scas
cmp
xlat
lock
cmp
or
push
in
or
add
std
or
fst
xchg
inc
dec
in
enter
lock
jecxz
jecxz
mov
sub
cmp
jp
aaa
sub
je
add
out
cmova
test
lods
jo
and
adc
dec
push
lds
icebp
mov
out
cmp
add
mov
dec
add
fidivrl
mov
add
mov
repz
aam
imul
addr16
cwtl
pop
push
xchg
lea
adc
addr16
data16
cltd
aas
jb
cld
and
pop
add
pop
arpl
iret
mov
xlat
fdivrp
adc
push
notb
jnp
mov
int3
fstl
dec
mov
cld
lcall
mov
in
push
lock
cmpsb
mov
cltd
ret
cmp
mov
mov
push
cmp
clc
popf
lods
call
or
ja
sti
mov
sahf
inc
xchg
xor
loop
lahf
in
les
les
dec
fs
jg
adc
lock
and
inc
dec
xchg
jp
xchg
cmp
inc
stos
adc
lods
dec
stc
mov
jns
push
lahf
lods
xchg
test
shl
aaa
mov
adc
test
popa
roll
inc
lret
jecxz
mov
fs
int
push
mov
mov
inc
loop
rolb
dec
jecxz
add
scas
mov
jnp
movsb
inc
nop
adc
push
xor
mov
adc
dec
pushf
lds
mull
inc
mov
push
jbe
dec
aas
mov
xor
sbb
sub
mov
xchg
and
jmp
xchg
mov
int
pop
add
jae
inc
jg
in
xchg
ljmp
push
ja
call
sbbb
pop
lods
ss
mov
or
dec
jnp
fildl
addb
dec
test
lret
fs
setb
mov
fdiv
sub
fisubrs
popf
add
pop
lds
sbb
sti
inc
jle
inc
inc
mov
sbb
push
mov
ud0
fwait
das
pop
shlb
fistl
jb
mov
ret
xor
pop
xchg
in
xor
ffree
or
loope
sbb
ret
push
cli
push
daa
mov
aaa
sbbb
sti
rorb
bound
sbb
js
inc
sahf
or
jp
dec
sub
cmc
add
xor
or
mov
scas
out
aas
adc
dec
jb
lea
push
pop
dec
es
fbld
mov
push
dec
int3
xchg
push
lea
ds
hlt
fcmovnbe
adc
in
lds
test
stos
out
insl
into
mov
mov
addr16
sar
lds
rcrl
mov
xor
cltd
ret
ret
popf
shl
inc
lret
add
incb
in
insb
test
or
adc
push
inc
dec
push
jp
inc
mov
dec
pop
mov
cmp
outsb
adc
cltd
negb
jno
jo
inc
mov
push
and
xor
scas
push
imul
pop
mov
adc
fbld
fldenv
ret
mov
mov
loop
scas
negb
cli
and
ds
std
inc
js
aad
or
aam
push
int
mov
mov
cltd
sub
sbb
loopne
leave
out
test
pop
les
xchg
adc
shll
jb
sbb
lcall
cli
movsl
and
loope
xchg
xor
into
ret
arpl
rcr
push
xchg
mov
mov
add
push
test
jbe
jmp
mov
mov
jl
xor
xchg
add
icebp
leave
add
test
adc
out
cmp
jne
inc
repz
sub
dec
cmpb
cltd
and
sbb
push
add
and
std
insl
or
icebp
enter
imull
xchg
pop
push
addl
pop
stos
cmp
jle
sub
cmp
scas
cs
xchg
mov
pusha
aam
jmp
cmp
std
mov
cs
mov
push
mov
xchg
pushf
xlat
inc
sbb
push
test
sub
dec
inc
or
push
add
sub
orb
call
sub
push
pop
cs
mov
stos
ljmp
je
sub
lcall
mov
jne
arpl
and
hlt
stos
push
jmp
jbe
or
dec
inc
jl
les
out
sbb
addr16
xchg
push
cwtl
jo
fs
pop
mov
mov
jl
jno
pop
pop
int
mov
int
adc
xor
or
jbe
lahf
roll
push
loopne
add
dec
stos
add
or
jo
or
cmp
mov
sub
lods
ret
sbb
jae
sbb
dec
ljmp
jecxz
inc
les
inc
movsb
test
push
add
aam
dec
in
lods
push
imul
enter
popf
mov
mov
xlat
push
jle
mov
adc
mov
cmpsb
aam
inc
sbb
adc
gs
jg
ljmp
or
jge
or
cld
add
mov
mov
jbe
cmp
imul
pop
lds
dec
mov
mov
out
or
jle
lret
shlb
icebp
js
sbb
rorl
jnp
pop
jo
mov
pop
adc
loope
and
fisubrl
test
stc
cmp
daa
sbb
sbb
xor
iret
pop
jge
pop
jle
daa
sbb
xchg
pop
and
mov
or
cmp
sti
sbb
inc
adc
out
stos
sbb
pushf
push
inc
dec
inc
test
fnstenv
sahf
icebp
and
lock
pop
pop
int
repz
inc
xchg
jne
gs
or
pop
nop
insb
push
aaa
data16
inc
pop
icebp
cmp
insl
test
cmp
lock
dec
jo
mov
xlat
or
fs
repz
inc
xchg
outsl
push
loope
fbld
pop
mov
mov
jmp
test
push
xchg
mov
push
fwait
mov
xor
or
mov
leave
stos
dec
test
movsb
pop
mov
sub
cmpsb
loopne
xor
vminps
push
and
adc
inc
das
xor
cmp
ja
pop
das
sbb
fildl
xlat
ror
pushl
xchg
cmp
cmp
xchg
xchg
repnz
sbb
inc
bound
daa
aad
cmp
rcr
mov
mov
xchg
mov
add
insl
inc
push
ret
cmp
inc
aas
test
cmp
push
cmc
nop
test
lods
push
pop
andb
jbe
sti
xor
xor
jge
iret
scas
sbb
ret
mov
dec
je
sbb
out
ljmp
mov
inc
sahf
cs
nop
jnp
cmc
mov
leave
test
mov
cmp
rcr
addr16
mov
or
jnp
testb
notl
mov
inc
and
cld
or
xchg
arpl
add
and
dec
mov
dec
sti
movsb
xor
inc
pop
add
lods
sub
dec
iret
xchg
or
fwait
nop
add
add
lret
pop
add
inc
jecxz
push
andb
push
int3
add
cltd
fwait
pop
pop
hlt
jge
shlb
int
test
xor
insl
test
mov
mov
mov
ucomiss
loope
into
push
fstl
into
or
mov
lods
movsb
cmpsl
stos
xchg
out
mov
js
mov
or
or
jb
or
jecxz
cmpsb
xor
cmp
ret
js
mov
leave
rorl
sbb
add
pop
jnp
ljmp
mov
pushf
test
xchg
push
push
dec
loopne
pop
jne
repz
in
dec
sbb
shl
or
mov
arpl
pop
leave
push
mov
fwait
sbb
addr16
rcr
es
and
shll
sbb
adc
data16
add
ljmp
cmpsb
sub
add
iret
dec
inc
cli
fwait
sti
int
idivl
insl
mov
mov
cmp
cwtl
xchg
stc
imul
maxps
inc
add
adc
imul
xchg
arpl
xorb
sarl
mov
dec
shlb
lcall
jb
stc
cli
aas
inc
out
sub
stos
push
stos
lods
dec
in
dec
pop
mov
loope
jb
pop
or
out
cmpsl
jno
lret
lea
adc
jp
mov
das
or
cmp
scas
test
adc
inc
shrl
dec
frstor
mov
gs
test
fnstenv
cld
int
clc
out
cmp
sbb
mov
sbb
inc
lods
inc
mov
scas
mov
ret
jno
xor
sti
add
inc
rorb
cwtl
push
shrb
mov
mov
mov
inc
xor
imul
lcall
mov
jne
sub
cmp
pop
mov
inc
dec
inc
loop
sahf
lahf
sarb
lds
sub
inc
sti
out
sbb
push
imul
xchg
and
cmp
das
mov
mov
sbb
push
das
aad
shlb
jle
test
adc
jg
mov
inc
enter
or
lcall
mov
lret
fcomp
test
jne
ja
test
push
into
stos
jle
ljmp
xchg
stc
sbb
out
test
sbb
jp
movsl
add
ret
and
cmpsb
out
fwait
mov
out
icebp
jmp
dec
ljmp
adc
das
sbb
and
mov
adc
aas
repnz
dec
movsb
xchg
mov
fisubs
adc
ret
mov
sbb
and
fimull
pop
shlb
fsubrl
dec
xor
mov
or
cmc
and
scas
cmp
movsb
xchg
or
cmp
bound
jb
push
nop
out
dec
sub
sbb
pop
jae
mov
sub
lds
ljmp
add
mov
hlt
cli
mov
test
ss
cmp
mov
call
push
sbb
adc
mov
inc
mov
sub
es
loope
pop
test
sar
add
inc
test
dec
jmp
mov
sbb
lock
mov
mov
aas
inc
mov
out
mov
pusha
sarb
sbb
notb
xchg
dec
mov
stos
pop
popf
mov
cwtl
xchg
jae
and
scas
cwtl
lahf
lds
pop
lods
icebp
inc
sub
dec
mov
pop
xor
je
jmp
pop
int3
jnp
mov
push
sbb
lea
ret
movsl
rolb
in
rcl
fucomi
iret
cmpsb
shlb
stos
add
outsb
xchg
rclb
orb
mov
xor
inc
cld
pushf
dec
int
add
in
loopne
ror
xchg
and
adc
shl
andl
loopne
mov
lret
flds
jb
pop
sbb
xor
push
or
sbb
jge
push
push
fs
mov
lea
push
mov
sbb
jg
insl
pop
xor
loopne
jne
jl
inc
ret
add
push
jbe
fisubs
jle
cmp
mov
bound
mov
xchg
add
in
mov
push
ds
xor
out
jl
push
add
aaa
add
xchg
add
adc
pop
fwait
mov
out
mov
je
mov
sbb
mov
jg
int3
repz
mov
je
clc
mov
lret
cld
add
lea
loope
addl
push
aam
arpl
aas
pushl
mov
xor
mov
lock
push
popa
movsl
iret
testb
arpl
inc
loopne
pop
cld
mov
sub
and
xchg
mov
int
mov
adc
sbb
imul
inc
and
mov
push
orb
pop
or
push
mov
ss
mov
mov
push
int3
xchg
je
imul
mov
out
outsl
pop
aad
cltd
shll
fmull
out
mov
cmp
out
test
ffreep
iret
adc
push
pop
rolb
or
adc
gs
iret
xchg
push
adc
jne
jmp
ret
bound
mov
jp
fistpl
xor
popf
negb
xchg
add
add
and
mov
lret
cmpl
sbb
mov
imul
inc
aaa
mov
daa
lahf
pop
add
fdivrl
xor
outsl
test
call
hlt
and
repnz
mov
mov
nop
push
push
push
data16
or
ljmp
cmp
clc
cld
clc
or
pop
lock
ljmp
fildl
jno
inc
jae
adc
push
sbb
xor
in
lea
inc
inc
add
add
cs
fstpt
ror
mov
lret
sbb
xchg
enter
xor
and
fs
cmp
pop
gs
inc
pop
lcall
imul
movl
imul
push
sbb
sbb
pop
xchg
test
xchg
push
xchg
in
sbb
stos
push
xor
clc
mov
xor
aas
cmc
jae
out
xchg
std
daa
fildll
lods
fidivrs
pop
jnp
mov
inc
lock
push
lods
xor
movb
outsb
mov
and
jmp
loop
mov
and
loop
gs
lea
add
in
es
mov
push
pop
test
mov
add
mov
ficoml
inc
mov
hlt
test
mov
lcall
jle
aaa
adc
repnz
out
fisttpl
sub
inc
je
stos
dec
mov
cmc
dec
sbb
loopne
push
mov
ja
ret
addl
orl
cmc
cmp
adc
or
xlat
xorl
inc
xchg
rcrl
pop
xor
in
mov
dec
xlat
sbb
push
mov
outsl
and
add
sub
xchg
shll
cmc
mov
mov
pop
popa
push
shl
dec
xor
inc
fiaddl
scas
pop
mov
ret
adc
lret
mov
bound
scas
xchg
je
xchg
mov
stos
into
cs
and
ss
mov
or
std
cmc
pop
clc
jbe
sbb
mov
or
outsb
sbb
jecxz
stos
xor
data16
out
xor
cs
pop
andl
jns
mov
jle
test
mov
lahf
lds
rcl
stos
imul
out
mov
cmc
sbb
or
mov
cmp
and
jno
fldl
push
inc
fildl
adc
ffree
popa
js
push
mov
mov
mov
pop
scas
adcb
jbe
push
stos
jo
mov
cmc
sub
pop
sbb
mov
test
test
ljmp
scas
pusha
aad
sub
sub
sub
imul
adcb
or
shl
std
fs
pop
fsts
das
mov
scas
sarb
add
push
lcall
pop
ds
and
imul
xor
cmp
in
fwait
dec
into
mov
jecxz
sti
jl
test
cwtl
push
push
rcll
call
loop
mov
mov
popa
ret
js
gs
dec
jae
jl
fsts
sub
iret
test
pop
shrb
xchg
mov
test
mov
je
icebp
fdivl
loopne
inc
sub
ds
adc
addb
out
push
pop
pop
pop
hlt
cmp
stos
mov
data16
fs
mov
test
jnp
xchg
pop
dec
orl
jmp
stos
sub
movsl
lea
sbb
fst
testl
fisubl
rcrb
cltd
pop
pop
cmpsl
lcall
push
inc
xor
test
les
data16
lods
negl
dec
sti
mov
cmp
lds
jmp
lret
subb
in
sub
pushf
rcrl
shrb
and
call
push
push
xor
xchg
in
out
imul
aaa
sbb
lret
inc
rcll
ljmp
sub
pop
cwtl
adc
mov
and
add
hlt
mov
data16
mov
mov
xchg
lods
jns
sub
ds
test
ret
push
mov
ds
les
sub
jle
es
lds
pop
stos
xor
adc
mov
outsl
ret
push
call
imul
lock
push
loopne
pop
sub
call
pop
and
fwait
icebp
sar
iretw
hlt
mov
push
sbb
loop
add
cmpsb
and
mov
stos
push
push
and
and
jg
push
push
mov
in
add
jns
out
sbb
cs
jns
outsl
xchg
mov
sub
jns
pop
shll
rorb
lret
push
outsl
xchg
inc
loopne
or
sub
ror
xchg
mov
into
in
adc
pop
or
or
mov
jns
daa
inc
cmc
dec
jno
jle
ds
inc
repnz
je
mov
inc
cmp
cmpsb
mov
inc
int3
leave
dec
inc
jno
cmpsl
xor
or
xchg
fnsave
es
es
push
fcmovnbe
or
lcall
jl
shr
inc
adc
fs
or
jae
sbb
das
sahf
aaa
sub
out
je
and
or
mov
aaa
lcall
loopne
js
clc
sbb
pop
in
mov
jae
xor
out
push
cmp
jne
addr16
adc
aad
aaa
push
add
add
sbb
adc
pop
and
xor
frstor
mov
pop
addb
xor
out
loopne
jo
or
out
shrl
clc
xlat
or
pop
add
push
inc
fildll
fwait
mov
fidivs
enter
cmpl
and
xchg
cltd
push
and
and
and
mov
dec
mov
or
orl
movsl
sub
push
add
loopne
fidivrl
dec
dec
adc
js
in
imul
mov
loope
aas
mov
xabort
mov
lea
out
push
cmpsl
mov
test
in
sub
out
xchg
jmp
mov
sbb
mov
push
jl
lret
addl
sti
xchg
pop
or
mov
pop
imul
and
test
nop
push
popa
pop
xor
gs
fdivs
cwtl
lcall
js
movsl
in
xchg
xchg
cltd
out
cmp
mov
cmp
push
scas
mov
sub
popf
pop
loop
into
jnp
fdivl
and
mov
mov
ljmp
xchg
xchg
jo
add
ljmp
stos
nop
hlt
xchg
pushf
mov
mov
outsl
insb
sub
andb
in
std
fsts
out
rcrl
loope
cmc
out
cmpsl
push
or
repz
mov
dec
aaa
add
lods
dec
int3
andb
push
xor
sbb
xchg
inc
clc
adc
jle
lock
rcrl
adc
push
push
jne
int
stos
out
out
loopne
jecxz
ds
in
in
rcrb
mov
mov
mov
cld
insl
add
aaa
mov
dec
sysenter
xor
loopne
mov
or
fwait
mov
and
in
in
loop
dec
sbb
sbb
pusha
mov
cmpl
mov
mov
sahf
or
jno
adc
leave
int
push
push
jmp
mov
loop
cwtl
cmp
neg
lret
add
and
popf
neg
pop
mov
scas
test
mov
xor
jne
push
fstl
sub
mov
sub
jle
lahf
shlb
pop
popf
jmp
pop
mov
jb
decl
and
mov
pop
mov
xchg
das
lcall
loop
mov
mov
mov
popa
in
shlb
test
pop
xor
inc
stos
call
push
test
pop
or
and
xorb
mov
inc
imul
fcoms
sbb
push
or
insb
mov
xchg
mov
sbb
lds
inc
out
stos
pop
pop
cmp
das
mov
pop
lods
adc
pusha
stc
pop
repz
stc
add
add
xor
dec
or
scas
lcall
lock
pop
repnz
out
push
mov
add
gs
adcl
nop
aam
xchg
cmp
mov
aas
dec
fists
sbb
lea
pushf
test
push
dec
cmp
sub
or
and
rolb
jle
in
sti
jbe
mov
lods
add
out
or
mov
aam
sbb
adc
popf
mov
push
cmpb
lds
add
jle
pop
xchg
ds
push
out
fistpl
movsl
xlat
outsb
loopne
loope
mov
jns
scas
xchg
pop
push
xchg
xchg
fistl
cmpsl
push
inc
in
push
orb
xchg
mov
shlb
jbe
loop
add
popa
in
sub
fwait
cmp
xchg
adc
mov
dec
jg
push
popa
jnp
push
loope
clc
in
pop
or
cmp
lret
add
mov
and
sbb
push
fcos
mov
jmp
sahf
out
jns
add
cli
push
test
mov
xorl
mov
aaa
repz
xor
stos
ror
sbb
mov
test
dec
mov
bound
mov
jne
sahf
mov
mov
js
xchg
or
sub
into
or
or
subb
in
and
push
ret
push
shll
lret
sti
mov
or
pop
jg
pop
shrb
cmp
push
test
and
shr
jecxz
sub
pop
out
jb
push
cmp
push
jecxz
sub
xchg
cmp
mov
mov
subb
imull
push
add
movsb
push
xchg
addr16
es
fisubrs
mov
push
sti
fsubrs
sub
in
lods
ds
push
stos
jb
xchg
add
and
mov
aam
jp
adc
jge
xchg
out
mov
cmp
jae
mov
inc
add
loope
xchg
push
iret
pop
xor
enter
pop
mov
and
mov
mov
fisubl
mov
test
push
int3
adc
inc
int3
sub
mov
lock
out
ret
sbb
jae
mov
aad
shll
cmc
pop
mov
mov
mov
add
adc
xor
into
adc
repz
add
int3
pop
in
mov
daa
jbe
add
add
push
pop
push
movsb
pop
cli
and
sub
pop
leave
push
cli
sub
arpl
fs
mov
pop
scas
movsl
ret
sbb
ja
mov
insl
je
push
cli
hlt
add
push
and
rol
pop
dec
js
add
add
mov
push
sub
mov
push
adc
aad
dec
dec
in
or
aad
push
sub
sbb
mov
dec
test
mov
xchg
xchg
ror
and
cmp
mov
or
mov
jmp
icebp
pop
inc
xchg
pop
mov
and
inc
jl
dec
dec
cmp
jae
sub
hlt
push
mov
add
xor
jo
fxch
mov
mov
xchg
loope
int
add
movsl
xor
std
in
daa
and
pop
ret
in
xchg
test
xchg
sahf
push
pop
jge
sti
adc
fldl
mov
scas
xchg
lret
loop
lret
adc
xchg
test
mov
test
push
daa
das
cmp
sub
mov
cld
dec
fmull
fdivs
and
jae
les
or
sar
andl
fsts
ja
adc
or
ret
mov
mov
repnz
mov
push
lock
push
ss
mov
mov
dec
xor
mov
adc
fldl
aas
std
jb
sbb
shl
jmp
inc
cli
shlb
xlat
adcl
ljmp
jnp
test
gs
enter
stos
push
jne
pop
cmpsl
mov
fcomps
test
movsl
xorl
out
mov
ljmp
push
insl
xchg
adc
sub
cmp
pop
test
xchg
jo
add
les
fisttpll
fs
add
and
movsl
mov
ljmp
xor
adc
mov
clc
push
or
in
repz
cmp
mov
bound
es
cltd
je
sbb
fsubs
pop
ret
ficoms
xor
or
add
mov
add
insl
xchg
cltd
fdivp
out
mov
xor
cltd
lcall
inc
sub
insl
dec
dec
xor
outsb
leave
addr16
xor
loop
or
hlt
pop
fucomp
lret
les
mov
jnp
cmp
outsb
test
ds
or
jne
adc
icebp
xchg
das
out
mov
cltd
sbb
xchg
xor
and
adc
leave
and
and
insb
lret
sbb
insb
addr16
mov
jb
pop
or
mov
cmp
mov
xchg
adc
or
clc
add
push
mov
aam
pushf
gs
dec
dec
cs
in
repz
mov
pop
pop
or
imul
or
lahf
outsb
dec
lock
xor
jo
je
addr16
out
dec
sub
push
aam
jo
mov
push
push
bound
adc
pop
sbb
push
xchg
fucomip
data16
mov
mov
dec
mov
adc
js
std
pusha
loopne
adc
sub
repnz
shll
outsb
ja
xchg
jnp
sub
inc
add
outsl
fildl
shl
push
sbb
sahf
scas
cmp
leave
rclb
mov
fs
and
or
loope
outsb
jecxz
mov
cwtl
addr16
inc
cmp
mov
imulb
lods
fs
outsb
aad
daa
jbe
cmp
adc
push
jo,pn
fwait
out
inc
xlat
fisubrl
jg
repnz
stc
jmp
jo
aaa
xlat
and
int
je
icebp
push
xchg
dec
mov
dec
daa
cmpsb
sbb
xor
popf
lds
dec
mov
pop
sub
push
sbb
jp
fimuls
cmc
xor
leave
jecxz
rorb
cmp
loop
jp
push
mov
push
sahf
jmp
je
lods
xchg
cmpsb
std
aad
jns
mov
pop
jecxz
mov
test
mov
enter
push
adc
loope
clc
dec
or
gs
in
or
push
imul
xchg
mov
imul
out
jmp
lea
in
mov
add
inc
aad
sbbb
ret
insl
mov
jns
sub
inc
inc
test
mov
jbe
jmp
jne
xchg
cmp
jae
dec
pop
icebp
mov
and
push
pop
mov
add
addr16
fcomps
dec
scas
pushf
cmc
jmp
jge
inc
xchg
pop
add
clc
cwtl
xor
lock
into
jns
jl
bound
jne
or
movsl
mov
jns
cmc
jbe
xorb
fdivl
jmp
adc
push
inc
cwtl
cmpsb
push
cmc
mov
pop
ljmp
sub
pop
fsubr
ljmp
sti
lcall
clc
jge
rcrb
in
insb
aaa
or
mov
cmpsb
stc
mov
dec
pop
add
xchg
in
adc
dec
xor
daa
xor
xchg
pop
stc
test
jmp
sbb
add
enter
mov
mov
and
pop
and
jae
int3
sbbl
sub
rcrb
and
in
fcomi
xor
adc
stos
cmpb
jmp
mov
nop
mov
dec
lahf
sbb
arpl
out
fcmove
xchg
push
lods
std
pop
mov
cwtl
popf
xchg
sbb
sbb
adc
mov
inc
or
faddl
jecxz
into
mov
std
clc
push
imul
mov
test
popf
inc
sub
js
push
xorl
loop
daa
fcompl
js
test
xor
pop
inc
mov
jg
xchg
nop
and
or
iret
inc
gs
pop
inc
jmp
cmpl
loope
and
sub
movsl
nop
jne
adc
dec
jb
dec
insb
mov
inc
sysenter
cwtl
aaa
jae
test
inc
bound
mov
adc
jo
shrl
mov
cltd
insb
sub
in
push
and
fisttpl
dec
mov
aam
scas
jmp
pushf
fwait
push
cmp
push
jnp
ja
push
loope
mov
push
mov
lea
xor
sbb
mov
cwtl
insl
mov
stos
rolb
dec
fsubp
fs
pop
add
lahf
int3
lods
test
andb
push
xchg
mov
pop
and
js
dec
stos
dec
sbb
push
push
jns
pop
int3
ja
cmpb
push
add
addr16
outsl
pcmpeqw
pop
in
sub
lock
shl
sbb
inc
nop
outsb
aaa
and
test
popa
dec
sbb
in
inc
adc
repz
jecxz
loope
mov
aad
mov
sbb
adc
lock
add
mov
dec
pop
mov
and
dec
test
fmull
fldl
in
xor
std
lods
outsb
inc
inc
push
or
jmp
ljmp
in
jb
sti
jg
leave
cmp
pop
hlt
enter
gs
pop
inc
jbe
lret
mov
jle
mov
jl
mov
inc
rclb
mov
inc
add
add
mov
adc
xchg
mov
push
jle
daa
scas
inc
and
movsl
and
mov
sub
fdivrs
or
sbb
mov
scas
clc
js
loope
push
in
push
fwait
into
xchg
jle
scas
and
sbb
aas
rorl
cmp
xor
test
pop
sbb
mov
jno
jl
or
lock
clc
mov
iret
test
sub
imulb
xor
arpl
cmpsl
mov
push
data16
jb
xchg
imul
sahf
ljmp
cmp
pop
out
shrb
jnp
test
jp
fstpt
insb
and
push
mov
push
orb
lahf
jle
fs
xor
aaa
adc
in
fisubrl
add
loopne
sub
xchg
cmpsb
or
push
cmp
sahf
mov
leave
gs
out
xchg
movsb
repnz
xchg
mov
xor
stc
mov
cwtl
mov
or
inc
push
test
pop
cld
xchg
add
or
scas
mov
les
clc
daa
popa
fstpt
shlb
fldl
hlt
sahf
dec
mov
mov
stos
ror
adc
insb
es
add
test
jecxz
mov
pop
or
not
ds
push
cmpsb
test
dec
or
es
sub
push
mov
int3
shlb
mov
popf
push
lods
jp
lea
mov
js
xchg
adc
pop
lret
pop
dec
repnz
cli
arpl
aam
sub
les
mov
mov
mov
sub
insl
push
outsb
mov
sahf
sbb
out
sbb
cmp
lods
inc
sub
xchg
cmpsl
push
pusha
cmp
dec
stos
rorb
mov
pop
pop
imul
adc
cld
aas
pusha
fstpl
adc
pop
add
mov
jp
enter
and
imul
pop
jg
stos
dec
mov
les
scas
outsb
rclb
push
out
cs
jle
cmp
cli
push
test
mov
pop
sti
imul
sub
jno
scas
cmc
enter
outsb
or
cmp
dec
push
xor
mov
mov
mov
xchg
aad
fbld
aas
and
lock
push
xor
pushf
repz
cli
mov
cmpsb
fwait
and
pop
scas
daa
mov
addl
or
mov
cs
loopne
xor
mov
mov
ljmp
cmp
clc
push
sbbb
xor
es
add
add
lahf
mov
fadd
mov
popa
inc
ret
adc
sub
sbb
adc
add
push
xchg
mov
test
pop
push
imul
lcall
xchg
ljmp
js
mov
cmp
jnp
iret
jb
sbb
lea
popf
in
jp
xor
add
mov
and
int
jp
lock
push
push
ljmp
dec
pop
inc
xchg
mov
sbb
subb
lcall
imul
pop
pop
cmp
inc
stos
or
daa
push
lods
out
mov
pop
cmp
out
andl
jmp
pop
call
fimuls
mov
pop
stc
js
enter
sub
xor
mov
jmp
mov
hlt
cmp
lea
mov
pop
sbb
push
adc
out
mov
aas
jge
lock
or
in
dec
cltd
inc
push
rorb
std
sbb
daa
and
xor
mov
push
or
mov
ljmp
xor
aad
push
adc
jb
mov
jae
imul
in
rolb
mul
push
mov
bound
xor
stc
daa
pop
mov
adc
fldt
hlt
pop
ret
out
dec
and
stc
fildll
or
shlb
mov
mov
xchg
cmpsb
mov
insl
xor
or
outsb
leave
cmp
pxor
adc
mov
in
into
jns
enter
clc
jbe
ljmp
rolb
mov
xchg
push
sub
in
adc
in
les
pusha
and
mov
int
lds
inc
imul
sbb
mov
sub
push
insl
faddl
mov
cwtl
pop
mov
sbb
scas
popa
or
jecxz
mov
in
xlat
dec
push
leave
jge
mov
jl
loope
icebp
or
jb
xchg
jbe
and
sub
sti
std
ret
in
scas
inc
or
iret
xor
lock
not
sbb
das
shll
sbb
xchg
inc
gs
jg
jmp
or
enter
hlt
mov
dec
nop
movsb
xchg
filds
xchg
data16
fsubrs
mov
push
sbb
mov
dec
sti
cmp
mov
aad
aaa
cmp
sbb
nop
rorb
adc
nop
pop
sbb
hlt
pop
imul
movsb
frstor
out
inc
push
add
jb
pop
jae
sub
pop
mov
mov
add
push
les
or
inc
stos
jl
lods
xchg
mov
cmp
push
lret
enter
cmp
cli
imul
int
insb
dec
cltd
mov
cmp
cld
sahf
sbb
shl
cmp
cmp
jge
pop
push
sub
in
in
jecxz
ja
sbb
in
fidivrl
cli
lcall
imul
sub
cli
mov
dec
icebp
fsub
inc
jg
push
fisubrl
pusha
loopne
lahf
shll
cmpb
add
fidivrl
imul
sahf
in
js
shll
std
loopne
add
dec
xorl
mov
pop
daa
jb
push
and
and
mov
pop
or
scas
test
movsl
ds
push
dec
mov
cld
int3
dec
into
test
gs
cmpsb
cmp
jae
lock
inc
cli
shll
sbb
lds
fs
mov
pusha
xchg
js
jo
das
xchg
sbb
push
icebp
pop
loop
loope
loope
push
push
sbb
data16
cmp
mov
push
cld
dec
adc
sub
jns
imul
aaa
into
ffreep
mov
xor
inc
push
or
mov
sbb
pop
lahf
mov
jbe
cmpl
je
and
cmc
lea
insb
push
jp
sti
test
sbb
push
push
nop
adcl
xchg
ds
adc
sbb
dec
fucomip
leave
jg
adc
rcl
hlt
das
inc
cltd
sbb
es
out
or
rorb
push
lea
and
sbb
in
jge
mov
jbe
cmpsl
cli
add
lds
add
push
pushf
es
adc
mov
icebp
ljmp
mov
pop
sbb
and
lret
idivb
xchg
into
pop
mov
je
jp
mov
test
mov
cmpsl
sub
lods
lock
mov
dec
fnstsw
les
mov
scas
test
mov
inc
cmpsb
xchg
mov
outsb
je
xchg
xor
stos
scas
push
push
jbe
ss
lret
push
scas
lahf
outsl
xchg
shl
push
loope
dec
in
jecxz
xchg
cmp
mov
insb
sub
pop
sub
cs
pushf
movsl
mov
mov
test
dec
xor
jne
call
sbb
popa
movb
test
pop
sbb
cmp
xchg
sub
and
dec
push
sub
cmpsl
es
xor
xchg
push
mov
jmp
insl
loopne
sti
loopne
sub
out
mov
or
nop
pop
inc
adc
in
jmp
xor
dec
and
or
imul
cmp
fstpl
mov
test
test
sahf
sub
adc
jmp
adc
xor
sbb
out
adc
ss
inc
dec
int
aaa
fisubl
xchg
int
add
in
cmp
fbld
add
test
enter
mov
sub
mov
sub
repz
out
push
or
shlb
xchg
bound
out
xor
mov
int
jle
orb
aad
pop
or
pushf
push
xor
out
cmp
cmpl
pop
das
ljmp
out
jmp
shl
dec
icebp
dec
xchg
push
loope
dec
adc
cmp
mov
and
push
jl
sahf
mov
mov
dec
mov
xor
into
hlt
pop
pop
das
sub
inc
iret
xchg
test
xor
mov
cmp
sub
das
std
out
js
xor
cmc
and
mov
das
scas
mov
insl
cmc
sub
sbb
cli
and
dec
lods
sub
inc
addr16
es
and
ret
and
add
ficoms
dec
pop
jge
cld
ret
fldt
jmp
jp
and
push
test
shrb
mov
arpl
mov
ds
scas
inc
daa
cvtpi2ps
mov
push
xor
cmp
xor
ja
jne
and
adc
sbb
and
call
out
das
xchg
ss
nop
dec
out
inc
xchg
mov
into
in
fwait
scas
and
hlt
dec
or
daa
xchg
mov
xchg
push
movsb
sub
mov
sti
add
lock
jnp
xlat
push
mov
roll
sbb
mov
cld
adc
in
in
xor
jae
xchg
je
addr16
xor
mov
cmp
loope
addr16
jmp
sbb
sub
add
push
andl
js
inc
push
sbb
pop
and
jge
xor
mov
in
jae
sub
mov
pop
lods
mov
pandn
cli
pop
inc
inc
sbb
mov
pop
xchg
lahf
and
out
sbb
cwtd
imul
out
mov
or
mov
jae
lods
adc
add
and
mov
sbb
aad
jmp
loop
xor
es
ja
rorb
mov
sahf
jl
testl
in
mov
sub
cvtps2pd
mov
push
mov
mov
xchg
imul
daa
cs
ret
push
scas
nop
jno
sub
je
int3
int
and
jae
push
pushf
dec
xchg
test
sbb
les
arpl
sbb
mov
or
and
call
mov
sti
or
jg
xor
pop
add
pusha
push
ret
jo
mov
jge
scas
jecxz
lahf
xlat
cmc
jb
mov
fs
pop
xchg
nop
subl
imul
fs
sbb
ss
icebp
adc
ljmp
icebp
mov
fsubp
jge
jne
push
stc
dec
call
inc
mov
push
iret
add
les
sbb
sbb
mov
adc
clc
jbe
pop
add
mov
mov
lret
fisubrs
ja
push
mul
and
stos
jo
inc
push
ret
inc
adc
mov
jg
add
pusha
loope
icebp
fcmovbe
pop
mov
ret
into
and
popa
outsb
inc
jle
or
in
leave
std
fdivrs
nop
shlb
dec
das
inc
dec
orl
push
int3
inc
rcll
mov
lcall
lods
push
std
je
inc
and
pop
outsl
push
push
lcall
mov
clc
push
jg
rorb
lret
lcall
lret
idivb
xor
vhaddpd
in
mov
cmp
out
nop
add
imul
sub
test
lcall
push
inc
sub
rorb
aam
or
loope
out
aaa
popa
add
adc
or
jne
adc
in
jecxz
inc
or
xor
mov
xor
cmp
sarb
rcrb
popa
inc
incb
and
sub
cmpsb
mov
or
rcll
test
mov
pushf
ret
dec
aad
inc
repz
or
cmc
insb
arpl
inc
iret
sbb
es
or
pushf
repnz
inc
or
jecxz
cmp
xchg
lahf
jmp
and
fstps
imul
in
cltd
push
sbb
sbb
adc
das
xchg
sub
jl
or
mulb
gs
or
add
sbb
adc
inc
int3
adc
push
pop
cwtl
push
hlt
jle
push
cmpsl
or
sub
cli
jg
inc
fistpll
cmpb
pop
add
pop
adc
rcrb
rcll
imul
sbb
lock
mov
test
push
inc
test
sub
sahf
ret
lret
call
lcall
vpmovzxbd
ret
fistpll
jns
repz
push
mov
add
jmp
pop
add
rolw
xor
xchg
les
jb
les
loop
cld
sub
pop
faddl
fninit
je
fdiv
shll
jne
mov
cmpsb
mov
fwait
cmp
dec
mov
idivb
dec
shl
lcall
into
movsb
in
inc
cmp
mov
xchg
mov
outsb
fmul
mov
dec
call
cmc
add
adc
fs
or
sub
inc
xchg
rol
iret
lock
mov
sbb
bound
je
pop
and
iret
mov
sbb
sbb
pop
cmp
push
in
into
mov
xchg
movsl
js
in
mov
mov
or
test
orb
add
or
insl
cli
jne
xlat
cltd
inc
lods
fnstsw
mov
adc
mov
lods
adc
cmpsb
int3
pop
test
out
adcl
pushf
sub
or
xor
xor
rclb
pop
dec
pop
test
fcomps
testb
jle
adc
dec
cmp
stc
jg
repnz
ret
sub
mulb
mov
push
dec
cmp
and
adc
cmp
dec
cmp
jle
in
jo
mov
orb
fsubrl
jne
test
mov
dec
pop
sarl
sbb
scas
push
in
xor
aad
test
cmpb
push
leave
popa
add
outsb
sub
mov
sub
loope
lods
pushf
insb
out
sub
mov
lods
cs
orb
dec
nop
je
pop
xchg
gs
xchg
mov
scas
out
lock
out
imul
out
les
jg
mov
arpl
ja
xor
sub
inc
in
hlt
mov
fldl
cltd
mov
mov
cld
jo
nop
sarl
pop
cmp
sub
fst
add
jle
cmp
aas
sub
aad
dec
adc
loope
jmp
sub
lods
mov
rorb
aas
cmc
sbb
xchg
jb
mov
cltd
sub
insl
lahf
cmpsl
scas
fmuls
jmp
cmp
push
jp
mov
shll
movsb
adc
dec
hlt
je
ja
sbb
fsubs
enter
fldl
jbe
addb
mov
aas
popf
xor
std
sbb
xchg
adc
add
arpl
xchg
xor
adc
lods
pop
lods
lret
mov
adc
xor
dec
pop
fistl
or
repz
adc
mov
mov
int
push
mov
cmp
sbb
loop
mov
push
in
push
mov
scas
repnz
pushf
in
push
inc
popa
out
jae
mov
mov
add
mov
lds
in
mov
push
inc
push
add
xor
push
jg
lds
and
xor
and
movsb
in
inc
popf
fwait
or
or
es
movsb
xor
clc
cli
scas
pushf
imul
mov
pusha
mov
xlat
push
jmp
cwtl
pop
inc
dec
hlt
movsl
mov
rclb
cld
in
inc
jecxz
std
fs
mov
adc
repz
in
or
pop
stos
lahf
mov
adc
push
push
xor
sub
xchg
mov
imul
loop
gs
adc
sbb
mov
js
insl
lret
xorb
xor
fcmovb
jne
leave
repz
xchg
bound
lock
mov
and
out
inc
sbb
add
out
jg
inc
aaa
mov
mov
movhps
add
add
popf
sub
mov
lret
jae
or
xchg
adc
adc
jae
or
jb
fwait
push
test
arpl
pop
dec
mov
out
cmp
sbb
jg
in
cwtl
addr16
and
shlb
out
mov
shl
cmp
mov
sti
dec
pop
es
movsb
and
mov
pop
jmp
inc
out
adc
push
cmp
lcall
cmpsb
mov
lods
rorl
cli
xchg
leave
out
push
sbb
adc
add
and
pop
clc
lahf
push
fdivrl
mov
jp
sbb
and
lahf
bound
lahf
icebp
xchg
cltd
adc
lea
add
cmp
sub
aas
xor
mov
mov
xor
jb
addr16
sbb
push
pushf
add
xchg
inc
sbb
movsl
fistl
dec
add
mov
or
cli
leave
jge
leave
cmp
xor
cli
aaa
jb
out
std
cmp
jnp
or
dec
push
push
sarl
mov
jle
fs
dec
sbb
mov
xor
aam
xchg
inc
push
cmp
mov
or
pushf
insb
jb
aad
xor
jmp
dec
jnp
and
mov
pop
outsb
int3
ret
shrb
mov
jne
jo
stc
add
xchg
xor
data16
lock
inc
stos
lahf
cmc
inc
sbb
sub
test
inc
push
es
ret
add
sub
cmp
mov
aaa
push
jo
ret
aas
js
repnz
movsb
sub
xlat
movsb
pop
mov
add
pop
mov
mov
jns
jecxz
notl
push
pop
aam
jns
cwtl
rcr
mov
cmp
xchg
dec
int
jl
popa
mov
ljmp
cld
insl
lds
mov
inc
add
sbb
jae
sub
jae
mov
popf
popf
cmpsb
mov
test
sbb
xchg
mulb
aas
sbb
sbb
mov
push
int3
mov
push
mov
jge
mov
push
or
sbb
shlb
adc
jno
popa
test
dec
or
and
imul
lods
xchg
push
test
ds
lcall
sbbb
mov
inc
and
jns
add
lret
inc
lods
cli
imul
jg
mov
dec
addr16
mulps
es
push
leave
dec
call
rcrb
lea
in
data16
dec
ficompl
adc
or
stos
sbb
sub
mov
mov
add
out
mov
int3
dec
or
push
jb
out
push
mov
jnp
sbb
jnp
add
fsubrs
pop
cmp
pop
jbe
int3
jb
inc
inc
jmp
inc
mov
popf
lock
add
or
cmp
xchg
cli
mull
inc
sar
mov
imulb
out
push
roll
scas
inc
loope
repnz
xor
jg
aad
push
cmp
xrelease
into
lret
out
sub
xchg
pop
addr16
push
out
jg
in
xor
add
mov
jno
lret
popa
or
adc
ret
imul
xchg
sti
or
xchg
lock
and
pop
mov
jmp
sbb
push
mov
jae
in
jl
clc
sbb
ss
inc
xchg
test
mov
lods
icebp
mov
fs
inc
call
adc
adc
int
push
popf
add
pusha
loope
sub
sub
sbb
push
test
push
lcall
mov
mov
aas
xchg
sarb
shrl
xchg
daa
movsl
pop
lahf
gs
popf
jnp
jb
xchg
xor
jmp
xchg
lcall
addr16
push
sub
mov
lods
inc
dec
into
xchg
inc
cld
mov
add
mov
pop
aad
mov
inc
fucom
sbb
push
stos
jecxz
push
filds
sbb
mov
scas
movsl
inc
push
fbld
sub
mov
in
outsb
int
xchg
stos
mov
stc
jb
xor
cmp
mov
mov
sub
inc
neg
mov
aas
sub
or
mov
insl
push
subb
push
and
in
lds
mov
xchg
inc
push
enter
sahf
mov
cmpsb
fldenv
push
push
mov
rorb
cmp
ss
outsb
jmp
cli
stos
mov
and
sub
dec
sub
enter
mov
jle
mov
insb
cltd
xchg
mulb
fimull
jge
pop
jae
xlat
jp
fidivrl
enter
enter
add
test
jno
dec
aam
lods
cmp
mov
adc
test
or
insl
adc
mov
dec
jl
adc
pop
std
lock
test
push
cmc
aad
sub
and
iret
ljmp
cmp
lahf
cwtl
mov
inc
lock
jno
iret
adc
je
aas
into
popa
xor
ljmp
bound
xor
adc
ja
pop
or
and
test
shll
mov
loop
sbb
aad
xchg
mov
iret
daa
sub
adc
loope
mov
movsb
push
cmpsb
sti
fwait
mov
sub
and
xchg
jbe
clc
and
das
aam
in
out
cwtl
imul
paddusw
aam
xor
mov
jbe
sub
in
lahf
push
lret
sbb
ret
cmp
push
imul
push
clc
arpl
cli
aas
mov
leave
lock
ror
lahf
and
pop
xor
adc
adc
sub
cmp
push
call
xor
sahf
cmp
notb
cwtl
bound
cmp
leave
fdivs
arpl
imul
mov
fidivl
inc
bound
push
push
push
shlb
stos
jne
inc
in
xchg
push
mov
es
or
push
pushf
insb
mov
push
mov
mov
arpl
insl
int3
jnp
mov
pop
lods
fildl
jmp
xchg
mov
test
jb
sbb
int3
hlt
push
xchg
mov
pushf
jnp
mov
cs
push
jmp
add
inc
rcr
jge
sbb
mov
dec
lea
mov
adc
inc
adc
cmpsl
daa
in
pop
and
jmp
push
mov
or
cmc
pop
inc
xchg
stos
sbb
ds
push
icebp
push
scas
cli
fnstcw
and
pushf
add
inc
jge
jp
sbb
mov
repz
stos
xchg
je
inc
shll
dec
iret
inc
popa
mov
insb
xchg
imul
inc
jl
and
jnp
repnz
push
mov
push
xchg
mov
shl
cs
or
xor
jne
jecxz
and
sbb
cmp
dec
mov
fwait
and
push
inc
js
and
push
movsl
cld
mov
adc
hlt
push
rol
insl
add
xor
mov
pusha
pusha
sub
add
push
dec
insl
mov
aam
pop
shr
imul
pop
add
int
jg
test
jo
test
rcrb
testl
and
add
push
push
loop
subl
pop
mov
xor
mov
pop
cmp
push
ror
test
imul
mov
loopne
dec
cmp
or
outsb
mov
shlb
out
ljmp
movsb
add
cmp
popa
int
or
push
pop
push
repnz
pop
push
int
call
jg
adc
insb
dec
jb
sub
cli
enter
xchg
mov
inc
mov
xor
pop
pop
clc
jns
cltd
sub
dec
insb
cld
cmp
push
mov
ret
dec
pusha
icebp
inc
sub
test
cmp
pusha
das
out
mov
push
mov
rcll
add
jle
out
ret
and
jns
xor
ret
in
insl
out
adc
cmp
out
addl
jb
jne
hlt
xchg
adc
int3
jge
jge
push
mov
shll
dec
jle
mov
mov
inc
push
jbe
pop
icebp
push
orl
in
xchg
xchg
jne
mov
cld
cli
imul
les
out
pop
and
sbb
sbb
clc
std
mov
sahf
insl
inc
mov
sbb
adc
cmpsl
insl
in
pop
xchg
jg
jle
mov
inc
add
fs
add
xchg
inc
jle
inc
out
xchg
lods
dec
or
mov
test
data16
xchg
das
jmp
notl
xchg
cmc
test
xchg
je
pop
adc
mov
xchg
inc
add
notb
icebp
repnz
jne
xrelease
lea
mov
ja
mov
out
mov
xlat
gs
ds
mov
out
outsb
int
and
xor
mov
sub
lds
popf
imul
or
cs
sub
rcrb
cmpsb
call
std
inc
loopne
and
test
cmp
or
sub
pop
pushf
pop
pop
xchg
sbb
ret
inc
mov
scas
or
mov
lea
jae
aad
push
adc
fnstenv
por
mov
mov
xor
pop
popf
xor
jbe
dec
out
aas
sti
xor
add
and
dec
or
insl
lret
mov
inc
inc
xchg
jge
dec
aaa
std
add
push
or
mov
mov
jle
es
adc
ljmp
subb
inc
div
hlt
inc
cmp
pop
subl
dec
int
mov
roll
sub
sbb
jbe
dec
pop
sti
jg
rorb
sbb
mov
sub
test
jnp
std
mov
push
mov
inc
rcrl
js
rolb
lods
jle
stc
mov
add
icebp
test
cltd
cmp
push
inc
pop
mov
cltd
push
ret
data16
sub
cmpsl
mull
push
dec
jae
and
push
ss
xchg
push
xchg
hlt
add
xchg
cltd
sti
imul
push
cmp
mov
in
pop
sub
ss
mov
add
out
mov
jae
xchg
out
jb
sbb
pop
in
xchg
xlat
sub
adc
push
xor
mov
pop
repz
arpl
cmp
popa
mov
test
cmp
lock
xchg
xchg
inc
in
int3
inc
mov
movsb
mov
sub
lret
mov
jmp
decb
fadds
int
or
mov
icebp
lods
shr
mov
int3
or
or
pop
sbb
cmp
lock
push
aaa
dec
adc
pop
xchg
jge
dec
ljmp
pop
popaw
jp
dec
and
push
inc
cwtl
movsb
inc
in
stc
mov
leave
adc
pop
xchg
or
jae
out
lock
adc
jecxz
push
sbb
xchg
mov
dec
repz
jl
mov
ja
lods
inc
and
xchg
insb
fistps
les
adc
cltd
aaa
xlat
dec
out
popf
aaa
cmpsl
sbb
inc
or
repz
adc
pop
pop
cmp
in
push
sbb
pop
lods
mov
cmc
addr16
pop
bound
lock
mov
xchg
loopne
xor
fwait
jecxz
ljmp
dec
shlb
daa
sub
pusha
cmp
mov
sbb
pop
mov
and
xor
mov
pop
in
subl
xchg
clc
sbb
pop
movsl
xor
jo
sbb
aaa
icebp
or
out
pop
mov
mov
push
inc
jge
loope
xchg
xchg
dec
add
pushf
dec
int
or
push
mov
in
xor
aaa
out
or
pop
mov
cmpsb
mov
test
or
movsl
and
add
lea
aad
arpl
adc
cltd
mov
sbb
stos
pop
sbb
aaa
cmc
pop
mov
or
push
add
daa
icebp
test
outsl
adc
cmpsl
sbb
rcrw
sbb
push
movsb
mov
int3
sbb
subl
aad
push
xor
mov
scas
sar
loope
adc
arpl
adc
dec
pop
outsb
lods
sbb
std
dec
xor
inc
mov
push
nop
dec
add
jns
mov
cmp
mov
push
dec
mov
and
rcl
pop
inc
lret
es
adc
cltd
leave
les
adc
out
or
daa
adc
dec
cmp
emms
daa
pop
push
mov
xlat
daa
jg
les
add
sub
mov
out
inc
rcrl
movsb
lds
add
add
lret
adc
cmc
adc
inc
mov
ret
lods
add
sbb
rcrl
add
mov
lods
mov
adc
mov
stos
lea
adc
scas
imul
inc
pop
sub
adc
andb
adc
lahf
adc
fsubrl
ffree
xor
popa
fs
adc
sbb
cltd
adc
inc
fbstp
std
dec
pop
and
bnd
int
lods
inc
push
dec
sbb
and
insb
loope
cmp
sub
shrb
out
or
into
addr16
shrb
data16
mov
mov
sub
pop
xor
hlt
in
jo
leave
inc
lock
xchg
xor
adc
jo
xlat
jne
sbbb
lcall
cmp
iret
cmpsb
push
enter
push
cmp
cmp
push
mov
mov
dec
jns
lds
inc
fists
jp
arpl
dec
fistpl
xor
mov
and
and
ret
mov
daa
xor
add
and
fwait
cmp
sti
sbb
jb
fdivrl
jge
leave
and
je
repz
add
notl
in
cmp
fwait
push
and
nop
jle
push
xchg
pushf
mov
mov
push
pop
jae
into
in
add
sbb
dec
cmp
sbb
test
iret
std
add
add
push
sbb
or
xchg
test
adc
jns
cmp
or
pop
ljmp
mov
arpl
inc
push
xor
sub
cli
mov
mov
jnp
xor
pop
divl
pop
jp
and
xchg
xchg
and
test
jb
ret
outsl
cmpsl
scas
dec
add
or
scas
mov
push
xor
or
adc
enter
js
push
imul
in
jecxz
cmp
btr
lea
sahf
mov
and
adc
iret
inc
mov
movsb
adc
adc
xchg
xchg
mov
aaa
push
jl
arpl
outsb
bound
pop
cltd
add
addr16
jge
xchg
mov
push
mov
xor
cmp
cs
je
jbe
adc
pop
sbb
stos
outsl
gs
and
clc
ja
paddb
lret
and
cmpsl
das
xor
push
sbb
out
rclb
rolb
sahf
ret
out
xchg
test
dec
or
cmp
jle
fwait
sub
clc
lret
call
sbb
xchg
inc
out
fwait
insl
pop
add
mov
mov
in
adc
rol
jne
mov
mov
iret
and
push
clc
xchg
in
aaa
sub
popa
fiadds
repnz
das
xor
mov
mov
stos
cmpsl
out
ret
rol
gs
into
inc
dec
popf
dec
xchg
pusha
mov
adcl
icebp
lahf
fmull
add
ss
fmul
pushf
dec
lret
push
push
mov
push
sub
dec
mov
ds
and
pushf
pop
sahf
jb
cmpsl
sub
inc
adc
sti
call
mov
cmp
enter
jge
mov
inc
xchg
inc
lds
das
sbb
xlat
pushf
fld
in
fidivrl
and
and
cmp
shlb
add
adc
and
add
lods
ds
push
fcmove
in
sub
jle
loopne
push
insb
lcall
rorb
gs
data16
xchg
xchg
inc
mov
sub
cmp
in
inc
fldt
sbb
dec
mov
xor
mov
bound
pop
je
mov
inc
data16
xchg
sbb
shll
inc
xor
into
mov
xchg
sti
lods
das
cmp
jmp
or
adc
jmp
mov
arpl
mov
mov
mov
push
pushf
movsb
popf
sub
into
scas
dec
std
push
mov
jecxz
out
js
fnsave
or
stc
decb
stc
mov
arpl
pusha
jecxz
xor
xchg
insl
fwait
fimull
jbe
out
inc
xlat
aaa
xchg
repnz
mov
fiaddl
es
icebp
ss
aad
jl
mov
pop
mov
jno
fdivs
idivb
addr16
fmuls
or
out
push
or
mov
ret
or
call
add
pop
test
cs
pop
andl
jo
clc
push
push
fnstsw
mov
cwtl
push
popf
pusha
jne
lret
or
xor
and
fs
lahf
mov
sbb
add
movsl
clc
nop
and
add
fdivrs
jo
mov
imul
and
mov
data16
cltd
mov
aad
xchg
xchg
pushf
pop
test
xchg
imul
pop
stos
shrb
push
pop
and
out
mov
mov
call
js
mov
or
repnz
rolb
es
in
xor
cmp
push
subb
js
les
pop
mov
sub
pop
bound
cmp
cwtl
lahf
mov
and
rorl
add
push
lahf
push
pop
ja
lcall
adc
sarl
out
mov
icebp
ror
adc
andl
pop
mov
xor
fldcw
jb
adc
sbb
xor
cmpsl
repz
push
mov
add
andl
lods
loope
mov
popa
mov
push
stos
sarb
xlat
adc
clc
jecxz
addr16
sti
and
cwtl
mov
mov
xor
scas
jge
dec
fsubl
cmpsl
xor
inc
cmp
dec
hlt
sahf
aad
push
scas
imul
rcll
out
push
pop
movsb
mov
mov
pop
dec
movsl
xor
int
push
mov
inc
mov
scas
push
inc
dec
lock
jo
not
cli
mov
sub
pop
sub
lahf
pop
jecxz
icebp
sub
fbstp
push
push
xchg
clc
nop
adc
push
jno
cmc
pop
cmp
lods
push
cmp
movsl
ja
pop
inc
mov
loopne
je
lods
mov
pop
stc
push
xor
fucomp
cmpsb
scas
add
or
mov
mov
push
imulb
ret
aam
add
cmp
sti
lahf
idiv
mov
dec
add
jns
enter
addb
loop
out
shlb
fdivrs
ficoms
int
xlat
cmp
inc
xchg
rcrb
ret
add
jns
fs
mov
repz
add
hlt
mov
pop
mov
imul
sbb
cmpb
and
out
xchg
out
cmp
lea
lods
fcoml
fs
out
dec
sahf
fnstsw
sub
adc
cmp
out
fsub
jno
jecxz
push
cmpsb
fimuls
stos
lret
cmpsl
cwtl
dec
xchg
mov
std
insb
pcmpeqd
sbb
xor
sahf
and
dec
mov
and
inc
dec
inc
lea
mov
std
adc
dec
xor
cld
push
dec
js
mov
push
mov
repnz
push
push
xchg
mov
pop
test
xchg
sub
add
or
ficomps
adc
adc
rorl
mov
cmp
mov
dec
push
loop
in
orl
aad
mov
pop
in
in
test
push
add
ds
jmp
imul
loope
stc
outsl
movsl
out
adc
xlat
and
inc
push
inc
inc
mov
sub
sbb
enter
pop
mov
inc
or
cmp
jp
mov
in
jns
or
divl
mov
pop
sbb
sub
add
aad
sarb
dec
insb
jbe
mov
dec
cwtl
ss
xchg
and
cmp
inc
je
push
std
inc
inc
xchg
out
xlat
popf
xchg
call
xchg
insl
repz
push
iret
and
arpl
or
lret
mov
dec
stc
inc
mov
and
mov
sub
sbb
jae
mov
xchg
pop
lcall
clc
stos
mov
jns
lcall
ret
ret
out
nop
mov
xchg
dec
mov
cmpsl
enter
sbb
and
mov
jmp
pop
js
push
xchg
and
icebp
in
pusha
movsb
das
js
xor
mov
pop
mov
sub
aam
cmp
insl
arpl
in
push
nop
inc
jns,pt
movsl
fistpl
loope
ret
xchg
mov
jns
push
mov
orl
sub
pushf
test
in
inc
mov
mov
stos
adc
inc
ljmp
stos
lods
push
fldcw
xchg
scas
fucom
push
push
in
mov
cmp
dec
repz
cmp
adc
dec
lds
pop
sub
lds
test
shl
stos
or
sub
cmp
pop
jge
leave
cmpl
lods
and
inc
sub
aad
mull
pop
test
fisttpll
pop
adc
and
and
pop
hlt
int
clc
fists
cmp
or
lds
lahf
imul
inc
cmp
dec
int3
inc
aaa
and
adc
jge
jae
jns
stc
aas
or
push
enter
arpl
push
mov
insb
in
dec
adc
lds
imul
sbb
lods
mov
dec
clc
fnstsw
ds
shlb
add
scas
in
repz
push
cld
jge
jb
addr16
ss
mov
testb
mov
sub
xchg
out
imul
xchg
add
mov
xlat
mov
xor
cmovl
dec
stc
ficoml
std
loop
add
fwait
add
scas
ret
push
add
fwait
push
or
push
fdivrl
or
out
outsl
or
sbb
je
mov
arpl
test
movsl
sbb
idivl
fadds
test
cmpsb
jmp
xchg
sbb
inc
imul
xchg
clc
outsl
mov
arpl
xor
xorl
pop
lods
imul
adc
shll
mov
stc
xchg
and
mov
lds
push
scas
jle
inc
xor
push
jns
and
out
pushf
jge
fidivl
repnz
test
adcb
push
jg
pop
push
movsb
hlt
xchg
in
out
imul
ds
imul
mov
fwait
popf
out
fidivrl
out
in
mov
mov
cmpsl
inc
push
dec
dec
mov
mov
or
es
lret
aas
fnstenv
enter
cld
aad
and
fistpll
mov
adc
rorl
adc
inc
jp
adc
lds
scas
lock
scas
rorl
inc
out
pop
jge
push
and
jne
popf
out
cmp
sub
inc
inc
add
ljmp
andl
mov
push
sbb
xor
mov
xor
loopne
adc
mov
andb
sub
dec
mov
leave
js
mov
int3
jge
scas
shlb
mov
movsb
arpl
lcall
cmp
jno
adc
fcom
lods
cmp
dec
mov
xor
push
rcl
into
push
movsb
sbb
cli
lock
pop
subb
out
jno
fwait
and
test
shll
inc
cmc
xor
pop
leave
mov
push
cmp
and
bound
push
jnp
out
lock
roll
push
push
lret
loopne
loop
jo
cmc
stos
ret
leave
mov
nop
clc
sbb
lods
push
loopne
xchg
inc
andb
dec
arpl
xchg
xchg
aad
mov
xchg
out
pop
out
popl
popa
cmp
inc
mov
xchg
push
mov
test
shrb
xor
std
mov
xor
jns
xor
cli
mov
jmp
data16
mov
and
fisubl
clc
rolb
sub
dec
addl
add
push
jne
int3
rorl
daa
mov
scas
jecxz
mov
sub
test
pop
dec
mov
add
push
emms
xchg
mov
sub
jg
gs
xor
add
sti
aam
xchg
out
mov
ds
xorl
insl
ss
dec
push
mov
jnp
lcall
popa
add
in
and
int3
in
or
push
testl
pushf
std
jge
das
jle
repnz
aas
xor
insl
fisttpl
shl
cwtl
out
or
clc
or
cmp
repz
push
fldl
push
xor
pusha
scas
pop
xor
xchg
ljmp
jle
lcall
or
or
shld
or
xorb
push
repnz
cwtl
sbb
lahf
push
lock
jmp
stos
mov
mov
mov
xor
sub
aaa
xorb
or
dec
daa
pop
add
xor
pushw
adc
sbb
push
mov
sbb
mov
std
scas
lahf
mull
roll
cmc
jp
lods
hlt
jmp
lcall
push
jb
inc
jl
clc
jmp
out
push
lahf
mov
jl
push
jnp
jecxz
rcrb
dec
movsl
mov
ss
cmpsb
or
dec
mov
lock
jmp
pop
cmp
rclb
xor
test
jnp
sti
clc
daa
and
cmpsb
pop
ret
xchg
push
cltd
insb
dec
or
mov
push
inc
ljmp
icebp
int
dec
test
mov
rcrb
scas
dec
xor
add
pop
flds
mov
imul
es
add
mov
jl
inc
scas
insl
or
mov
sbb
or
sub
lcall
fnstcw
std
inc
xchg
clc
fisttpll
hlt
xchg
adc
stc
nop
ret
pop
xor
and
push
lea
pop
mov
faddl
inc
mov
lock
test
mov
mov
mov
sub
sub
cmp
push
pop
jbe
lods
mov
pop
mov
loopne
nop
jmp
rclb
call
cld
bound
mov
inc
fcoms
lds
rcrl
movsb
aam
jne
push
sbb
das
mov
mov
jge
pop
sub
call
out
sub
scas
movsl
imul
out
jg
mov
bound
or
sub
dec
mov
subb
add
xchg
cmp
cmp
clc
xchg
mov
js
cmp
add
mov
cmpsb
push
add
popa
push
ret
mov
sub
mov
aas
push
outsl
mov
adc
test
cmpsb
or
mov
push
repz
jno
test
xorb
mov
shlb
adc
mov
fcomi
cmpsl
popa
mov
dec
popa
cmpsb
sub
shll
iret
pop
inc
test
leave
cmpb
xchg
fiadds
jp
cmpsl
inc
and
or
jns
mov
scas
mov
js
pop
loope
mov
jns
mov
push
ss
jns
insl
add
cld
xlat
add
aaa
cmp
idivb
arpl
mov
xchg
stos
ret
pusha
sbbb
incb
sbb
pop
mov
data16
clc
mov
repz
mov
xchg
das
aas
inc
enter
fstpl
inc
das
push
aam
push
je
and
cmp
push
test
jae
mov
mov
test
repz
dec
shlb
dec
cltd
sub
lahf
push
scas
movsb
loope
inc
xor
in
add
jmp
pop
inc
mov
add
pop
imul
xchg
mov
loop
dec
popa
or
cmpb
jecxz
add
in
aas
mov
inc
repz
mov
insl
push
into
push
lods
push
sub
jg
arpl
or
arpl
enter
mov
lret
inc
cld
add
shlb
and
repnz
pop
cmp
in
insl
fistpl
insb
cltd
cmp
and
xchg
out
nop
pusha
push
int3
pushf
xchg
mov
out
cmp
ja
push
daa
mov
sbb
push
xchg
test
repz
addr16
scas
dec
fs
mov
dec
sub
pop
sub
int
jg
ret
sub
dec
fsub
jo
repz
movsl
movl
jle
scas
push
sub
sub
dec
ficoms
pop
fsubl
push
scas
js
fldl
jbe
adc
cs
fs
ds
xor
mov
sbb
adc
lea
je
shll
ljmp
or
xchg
push
xchg
hlt
cmp
loope
out
adc
ljmp
cld
sbb
lahf
in
out
lods
sub
jp
dec
cmp
mov
pop
fs
push
xor
adc
shlb
movl
cmpsl
dec
mov
sub
mov
test
cmp
xchg
std
sti
mov
or
jle
xchg
in
push
xchg
cmp
push
fisttpl
mov
push
jno
andl
or
push
push
sub
inc
dec
adc
call
lret
fimull
dec
jns
pop
jmp
lea
and
aad
int3
jle
sbb
fidivl
sub
sub
inc
xchg
fcoml
je
adcb
dec
fsubl
adc
add
or
lcall
mov
pop
lret
lock
jo
lcall
mov
mov
rorl
les
mov
inc
movsb
insb
fcmove
add
cmc
lcall
mov
cwtl
ds
or
cwtl
int3
dec
push
adc
ret
xor
cmp
imul
jbe
sbb
and
scas
das
xchg
movsl
adc
jmp
inc
mov
and
ret
hlt
stos
pop
les
test
push
pop
or
mov
cmp
pusha
in
frstor
nop
mov
xchg
pop
jl
jle
sahf
add
test
out
cmp
xadd
lods
push
jecxz
or
js
add
jmp
sbb
lahf
jae
arpl
call
cmpsb
sub
mov
xchg
aaa
fdivrl
push
dec
aam
inc
lods
call
jle
pop
dec
aad
mov
pop
dec
push
fildl
mov
add
push
cmp
xor
repnz
addr16
xchg
mov
mov
sub
or
std
aaa
popf
test
jmp
pop
mov
adcb
push
push
popa
test
xchg
int3
xlat
mov
or
push
pop
push
test
add
into
and
andb
adc
in
outsb
iret
fnstsw
xor
ja
mov
push
cmpsl
shlb
std
imul
lcall
test
arpl
loope
andl
push
pop
pop
dec
xor
sub
rorb
leave
in
mov
jmp
pop
loope
scas
movsl
leave
icebp
popf
lret
mulb
pop
inc
enter
into
push
sub
fwait
dec
mov
jge
mov
scas
xor
or
mul
xchg
cli
call
popa
in
es
or
pop
jge
lods
push
test
jne
loopne
cmp
push
mov
xchg
ss
in
xor
xchg
pusha
loope
or
dec
push
enter
jmp
pop
lods
cmp
pop
xor
jne
in
mov
cmp
in
arpl
es
repz
inc
pusha
outsl
js
cmpsl
cmpsb
jg
js,pn
aas
and
dec
add
ja
mov
int3
adcl
sub
mov
bound
addr16
xchg
jp
and
inc
into
leave
mov
and
pmaxub
pop
pop
fcoml
xor
mov
jp
pushf
push
dec
aas
scas
xchg
jecxz
cmpsb
idiv
mov
shrb
and
cmp
jge
leave
lret
mov
popf
popf
imul
cmp
cmp
in
out
push
inc
pop
popf
cltd
mov
sbb
xchg
inc
jne
add
stc
mov
inc
mov
mov
jecxz
fcmovne
jle
push
sbb
lcall
js
arpl
xchg
popa
sbb
mov
out
cld
fwait
mov
mov
arpl
sub
jg
shl
mov
fstpl
push
mov
jg
dec
cwtl
test
roll
mov
and
pop
sbb
nop
pop
loopne
mov
jns
push
dec
jle
jns
mov
sbb
inc
xchg
sbb
out
aad
cwtl
mov
xchg
les
adc
jne
sub
dec
sbb
pop
int3
lods
subb
or
push
or
mov
xchg
xor
stos
push
adc
push
push
int3
out
test
mov
xorl
cld
addr16
jb
imul
je
fs
mov
mov
cli
lods
mov
sub
popa
jp
mov
jb
push
inc
xor
pop
xchg
cmpsl
dec
cwtl
dec
cmp
lcall
sub
addr16
push
adc
push
fisubs
xor
dec
mov
xlat
fdivrl
adc
mov
jp
mov
mov
and
sbb
outsb
call
addr16
nop
jnp
push
movl
pop
lock
ja
or
clc
xor
sub
fcoms
and
stc
cwtl
xchg
mov
dec
mov
stos
shrl
sub
leave
in
xlat
sbb
call
inc
cmpsb
repnz
fistpll
or
sub
mov
mov
enter
fimuls
dec
movsb
cld
aas
testb
adc
xchg
lea
lds
mov
sbb
lret
pop
rol
pushf
lock
push
pop
mov
loope
lcall
test
orb
int
loope
pop
scas
jb
shll
push
shll
mov
aaa
sahf
out
nop
push
mov
cmp
jp
xchg
insb
jae
jns
mov
test
arpl
imul
movsb
cmpl
push
mov
mov
in
mov
sub
xor
pop
mov
psrlw
push
in
adc
andb
cltd
outsl
jnp
sbb
imul
std
daa
adcb
call
aad
inc
mov
fidivrl
and
popa
sbb
sub
ret
nop
push
xchg
int3
cmp
xchg
or
pushf
inc
movsl
stos
pop
icebp
out
fcmove
and
shll
pop
dec
push
xbegin
dec
xchg
adc
xor
mov
hlt
js
and
hlt
xchg
or
mov
into
sbb
xor
push
icebp
imul
pop
bound
jo
or
xchg
shrb
loopne
int
xchg
fdiv
test
mov
std
push
fwait
leave
jo
mov
xchg
std
fwait
jo
fistl
add
add
test
xor
xchg
or
movb
xchg
and
int
sub
movsb
xchg
repz
dec
xor
jecxz
xchg
fiadds
sbb
pop
stc
int
mov
and
cltd
add
xorb
xor
lock
and
mov
imul
out
xcrypt-ctr
cmpsl
sbb
mov
enter
inc
pop
add
shll
aam
ret
je
scas
inc
rcrl
arpl
int3
mov
stos
pop
aad
dec
ret
test
repnz
imul
mov
jmp
dec
lret
push
push
aas
xchg
adcl
inc
xchg
popa
hlt
inc
inc
js
arpl
je
movsl
leave
sbb
sbb
lock
dec
cwtl
cmp
mov
fidivl
sub
mov
imul
test
sub
push
shrl
and
daa
cmp
xlat
and
testl
es
mov
push
pop
xorb
add
xchg
jb
xor
cmp
out
mov
scas
sbb
push
pop
lds
int
pop
aad
fisubrs
cmp
adc
mov
add
xchg
xchg
movsb
dec
outsb
and
xor
insl
vphaddubq
setp
xchg
push
loope
in
inc
jmp
lods
cmp
aas
aaa
adc
add
sub
pop
ds
cmp
ss
rcll
cmp
jmp
jg
jo
testb
xchg
lock
mov
xorl
and
cmp
mov
or
adc
adcl
out
sbb
stos
aad
push
faddl
repnz
ja
mov
sarb
cmp
pop
out
cmc
pop
mov
shl
pop
maxps
mov
cmp
jne
add
or
sbb
out
loope
jge
xchg
out
leave
push
repz
dec
mov
cwtl
les
adc
push
push
mov
dec
mov
sub
mov
bound
mov
lahf
loope
pop
pop
or
inc
cmp
jb
cltd
or
cmc
cwtl
mov
pop
push
in
gs
incl
fsub
mov
sbb
fistps
xor
addr16
jbe
aas
imul
push
dec
jmp
pop
leave
outsb
xchg
adc
repz
jp
cltd
sub
push
ret
sub
fsts
repz
add
loopne
es
jg
call
out
inc
sub
pop
fsubl
lcall
xor
aam
dec
scas
pop
mov
aas
int
mov
pop
sbb
or
lret
popf
cmp
push
mov
fbld
ret
lcall
test
mov
dec
pop
adc
mov
push
or
mov
fsubrl
sbb
sub
shll
jecxz
cld
insl
and
or
jo
loopne
jecxz
hlt
clc
dec
sbb
fwait
cmp
das
std
cs
in
xor
inc
jg
test
cmpsl
pop
mov
shlb
insl
pop
enter
loopne
xchg
push
aaa
xor
mov
shll
adc
int3
inc
sbb
bound
add
cmpsb
pop
arpl
sbb
jo
insb
mov
scas
ret
and
fistpl
jbe
in
shll
mov
call
inc
sahf
jp
inc
or
arpl
es
mov
shll
ror
inc
ret
mov
addr16
aad
jmp
cltd
arpl
push
cmc
xchg
push
fbstp
push
icebp
hlt
and
cmp
pop
dec
lods
adc
aaa
jo
adc
bnd
xor
into
ss
pop
daa
jns
add
daa
mov
lahf
sub
cmp
inc
xchg
aam
mov
mov
pop
dec
and
dec
lret
and
or
xchg
mov
das
bound
aad
fdivs
cwtl
scas
sbb
fdecstp
inc
mov
pop
sbb
shlb
arpl
jno
dec
jno
xchg
pushf
pop
sbb
ljmp
add
dec
and
push
inc
and
xchg
in
int3
xrelease
push
sub
xor
xchg
push
ret
test
mov
sbb
nop
popf
jmp
add
inc
push
test
xor
xchg
sbb
cmp
mov
cmp
mov
in
mov
movl
mov
ret
pusha
xorb
push
outsb
mov
inc
scas
das
jecxz
mov
or
add
xchg
inc
mov
cmp
arpl
push
lock
lret
jge
fimuls
or
cmp
popa
cltd
lret
repz
and
mov
pop
gs
int3
gs
cmc
or
out
mov
jo
mov
ljmp
xchg
popa
jbe
jl
xchg
mov
xchg
cmp
cmp
xor
insl
dec
and
sub
adc
xlat
push
jns
daa
divl
xchg
jecxz
lods
pop
or
xorb
xchg
inc
shlb
dec
dec
fisubrl
and
adc
xchg
mov
inc
xor
mov
mov
out
push
inc
push
push
call
pop
inc
imul
dec
xor
cmp
adc
fdivs
inc
jle
jbe
jecxz
fiaddl
mov
stos
out
jg
push
fwait
push
fadds
sbb
hlt
lcall
sbb
xor
inc
ret
xchg
aaa
iret
flds
adc
push
mov
cltd
sbb
add
or
push
mov
pop
pushf
mov
orb
xchg
xchg
and
in
incb
cmp
push
das
fcmovnu
push
mov
fstpl
lods
movsb
popa
mov
adc
mov
fsubs
mov
jge
mov
das
xor
pusha
pop
loope
xchg
mov
fbld
jo
inc
lods
popf
add
jge
ss
insb
cmp
clc
or
xchg
xchg
cmp
dec
shlb
and
mov
sbb
mov
fistpll
mov
aaa
pop
push
aad
insl
outsb
cmp
jbe
insl
lret
jle
loope
clc
rcrb
xor
push
call
ret
pop
push
jl
cmp
in
push
push
pop
push
cmp
rcrb
test
mov
jne
adc
inc
sub
mov
mov
cmpsl
shlb
popf
xchg
dec
pushf
out
adc
pop
and
aaa
jp
xchg
and
mov
inc
mov
inc
popf
fdivr
add
rol
loop
inc
pop
and
mov
mov
insb
aaa
and
xor
pushf
shll
xchg
dec
sub
popf
mov
inc
push
xchg
mov
imul
movsl
shlb
or
sbb
mov
cld
or
imul
shll
inc
cwtl
scas
add
cmp
sub
adc
sub
sbb
lret
addl
fldenv
push
ds
add
sbb
iret
cmp
stos
mov
push
adcb
and
inc
and
sub
push
jmp
sbb
jne
jo
or
pusha
out
aam
sbb
dec
cmpsl
cli
or
mov
mov
data16
or
cli
outsl
inc
in
in
cmp
xor
or
leave
ror
add
mov
dec
mov
push
pop
sub
test
pusha
pop
xor
data16
lds
ret
shlb
fdivrp
xchg
lcall
cmp
leave
adc
into
data16
dec
pop
in
adc
scas
rorb
nop
dec
adc
popf
pusha
and
jnp
push
dec
stos
lret
stc
adc
cltd
inc
mov
adc
jbe
inc
popf
int3
mov
jno
loop
xchg
adc
aas
xchg
lods
lock
icebp
xlat
jmp
add
fcmovne
pxor
cmp
aam
pusha
ffreep
movsb
jmp
mov
inc
pop
inc
test
gs
inc
pop
out
jg
movsb
jp
cmp
hlt
les
jae
pop
jecxz
jns
in
push
cmp
xchg
and
cmp
mov
mov
sbb
arpl
fcompl
cwtd
or
xor
pop
rcrl
lahf
and
mov
xchg
insb
cmp
pop
adc
sub
or
mov
and
push
aam
xor
xor
and
popa
loopne
and
xor
xchg
popa
nop
test
push
xchg
and
mov
ja
mov
int3
out
or
call
or
and
cltd
xchg
into
cmpsl
dec
pop
mov
and
test
sti
shll
dec
mov
rorb
pop
push
pushf
jmp
xchg
push
pop
pop
scas
push
cmp
loop
sbbb
xor
out
xchg
dec
sbbl
pop
xor
pushf
cmpsb
jmp
insl
iret
dec
outsb
mov
fisttps
loopne
fldenv
xchg
push
lock
jno
aaa
lds
aam
in
shll
mov
push
inc
in
push
sbb
jl
mov
jnp
rcrl
xchg
xchg
flds
xor
xor
mov
push
aad
sub
dec
jns
loope
cs
ljmp
jl,pn
jmp
xchg
leave
scas
rorl
push
xchg
dec
push
mov
std
icebp
mov
jmp
push
push
push
xchg
jbe
js
aas
xchg
nop
nop
call
mov
xor
inc
dec
std
adc
movsl
xchg
ljmp
push
pusha
sbb
loope
ljmp
fiadds
test
pusha
mov
aad
aad
data16
negb
jle
inc
pop
loope
jns
gs
shlb
cli
int3
test
bound
xlat
lahf
jo
xchg
pusha
or
add
jne
out
add
sub
dec
lahf
in
inc
popf
sub
jge
pop
aad
gs
mov
test
ljmp
addb
ja
cs
popf
add
pushf
adcl
into
inc
mov
or
pop
jg
pop
and
jmp
outsl
pushf
mov
jg
pop
and
dec
idiv
addl
les
sbb
clc
mov
add
xchg
dec
or
jl
or
stc
jmp
aad
std
push
cmpb
addb
xor
mov
lods
lcall
jl
sub
aad
jle
mov
pop
and
sti
push
and
push
inc
jo
dec
ficoms
imul
xchg
sbb
push
in
pop
sbb
adc
jle
cli
cmp
aad
sub
jns
mov
or
push
fisubrs
ror
sbb
fcompl
push
jp
bound
popa
or
push
cli
loope
sbb
mov
inc
iret
adc
pop
cltd
jecxz
dec
jp
shlb
jle
lea
push
sbb
add
push
add
mov
cwtl
pop
cmp
mov
xchg
mov
mov
add
mov
inc
hlt
jmp
push
mov
jns
sbb
lea
mov
cmp
repz
mov
xor
addb
dec
fildll
push
mov
and
dec
mov
loop
jo
dec
push
cwtl
xchg
cli
imul
fisubrl
gs
es
push
or
jge
mov
pop
gs
cmpl
insb
mov
and
or
add
std
mov
roll
shr
mov
or
movsb
stc
popa
fisubs
aas
jae
fxtract
fs
pushf
mov
jge
repz
mov
in
in
xchg
xchg
pop
mov
dec
mov
xchg
shll
or
cs
xlat
dec
andl
cld
push
js
lret
ds
nop
imul
dec
int3
rcll
push
pushf
mov
adc
shl
lds
sub
in
inc
or
pop
adc
repnz
inc
xorl
out
flds
jp
pop
fld
mov
cmp
push
xor
sbb
ja
mov
scas
lret
scas
movsl
jg
mov
xor
and
sbb
fcomi
sub
and
inc
mov
adc
aas
mov
arpl
dec
int
in
stos
das
in
dec
fstpl
rcrl
ljmp
xchg
adc
jecxz
outsb
sbb
stc
lea
xor
faddp
js
xlat
pop
pop
cmp
xor
cld
xchg
loopne
mov
repnz
inc
or
stos
cmp
adc
or
push
jmp
cld
pop
or
popf
mov
xchg
je
adc
jle
jno
stos
mov
mov
lock
das
push
cmp
mov
leave
sub
test
or
cmpb
fnstcw
cmpsb
les
cmp
mov
xchg
movlhps
adc
and
inc
cs
sbb
fiaddl
repnz
stos
pop
cmp
sbb
popl
pop
mov
lock
fstps
mov
cwtl
add
cmc
xor
dec
data16
mov
ja
pop
les
cmpsb
pop
lods
pop
scas
dec
or
push
loope
call
rcl
js
pop
or
mov
sbb
xor
pushf
push
lret
stc
mov
out
or
pavgb
xor
xor
sbb
lock
pop
fstps
jns
outsl
sti
xchg
jne
mov
mov
in
xlat
popa
sbb
lea
jle
inc
dec
dec
push
je
imul
cmc
out
cmp
cld
lds
pop
and
sub
in
sub
inc
xchg
aam
shl
mov
sub
sbb
aas
gs
adc
lea
outsl
xlat
aad
cmp
std
and
fucomi
jae
sti
cmc
lds
mov
ret
xchg
cmp
rorl
mov
ret
adc
pop
push
sbb
pop
daa
pop
and
push
push
jg
pushf
xchg
call
cmp
fiaddl
int
push
pop
jne
push
filds
xor
shr
adcl
jp
push
sub
test
add
sahf
es
stc
cmc
inc
int
add
loope
pop
xor
fucomip
idivb
sub
fxtract
push
repz
or
fnsave
xchg
scas
xchg
xchg
in
orb
cmp
lret
cmpsl
sbb
test
mov
xchg
add
stc
and
pop
push
or
cld
mov
jbe
jns
aam
mov
fs
hlt
iret
aaa
mov
or
in
dec
rorb
adc
sub
lds
imull
and
or
mov
push
test
push
in
pop
in
cmp
insl
jge
scas
push
fdivrp
push
and
fucompp
add
insb
loop
inc
leave
jae
push
add
pop
std
in
push
lock
fidivs
cmp
insl
add
sub
mov
mov
jbe
dec
punpckhwd
adc
push
xorl
or
cmc
fwait
sbb
int
xor
mov
mov
iret
aaa
mov
andb
and
test
add
lods
mov
sbb
mov
add
js
and
fwait
mov
sub
sub
stos
sbb
and
cmp
das
fs
lods
lret
clc
inc
mov
in
cwtl
leave
in
jecxz
mov
sub
test
add
hlt
mov
xor
mov
lods
push
addb
outsb
sub
pop
iret
out
jge
pop
xor
xchg
xchg
add
mov
lea
mov
sbb
and
adc
dec
adcb
inc
xchg
jmp
fstp
push
mov
sbb
push
fisttpl
jmp
xorl
mov
pop
mov
sbb
lea
sarb
jl
pop
mov
sbb
mov
sahf
mov
rorl
lahf
fstl
pop
test
enter
mov
dec
mov
pusha
adc
aas
in
dec
sbb
xchg
leave
fistps
sub
adc
pushf
add
and
flds
es
out
enter
push
imul
push
cmpsb
xor
inc
and
call
sub
cli
inc
cmpsl
imul
std
outsb
mov
xchg
stos
cwtl
add
insb
mov
mov
jnp
lds
push
aam
sbb
mov
idiv
cmpsl
iret
cs
mov
adc
cmp
pushf
cmp
xchg
mov
aam
mov
xor
push
xor
and
aas
lret
rorl
loopne
out
pop
jne
pusha
and
and
loope
cltd
ficoml
cmp
cmp
testb
and
fcmovnb
adc
xchg
sbb
dec
lret
dec
imul
cmp
out
push
adc
hlt
jne,pn
scas
aaa
inc
repz
in
dec
fsts
jmp
mov
pop
hlt
cmc
movsl
andnps
cmp
inc
les
pop
mov
pop
sbb
cmp
adc
push
jne
mov
arpl
pop
push
mov
jne
or
push
ja
mov
ret
mov
dec
xor
std
int
leave
inc
and
xor
fsubrp
add
data16
popl
test
jecxz
push
pusha
mov
jmp
sarw
out
mov
mov
pop
push
sbb
jmp
xorl
inc
shrb
cmp
push
es
mov
in
mov
add
jno
mov
or
jbe
mov
js
inc
mov
lods
and
add
aam
ljmp
sbb
xchg
adc
mov
adc
cmc
xchg
inc
in
inc
js
shlb
jle
lret
jae
sbb
cmc
pop
jae,pn
ljmp
jo
pop
icebp
arpl
sub
or
mov
mov
ljmp
arpl
cs
jg
repnz
hlt
dec
in
xchg
adc
mov
cmc
xchg
out
int3
or
jmp
inc
repnz
iret
pop
add
sub
shlb
stos
and
lods
sub
out
sub
shl
sub
ljmp
and
test
mov
hlt
out
xchg
cli
and
fwait
in
sub
push
dec
sahf
das
fldl
or
and
es
stc
movsb
jecxz
inc
pusha
and
sbb
test
scas
mov
jne
sub
pop
loopne
xlat
cmp
popw
add
mov
negb
je
xor
sub
cmp
call
mov
sti
pop
shr
or
mov
test
xchg
inc
mov
jge,pn
fxch
aas
push
lret
iret
mov
lods
cmpsb
lret
xchg
mov
in
fldl
imul
push
in
inc
sbb
pop
cwtl
les
fwait
repz
and
fdivs
pop
repz
sbbb
and
push
cmp
xor
mov
xlat
mov
adc
jle
xor
dec
adc
xchg
or
je
insb
add
pop
pusha
push
call
jl
movsl
jge
mov
pop
out
cli
mov
nop
mov
mov
xchg
bound
in
cltd
loopne
jl
leave
pop
mov
in
loope
sub
shll
push
cmc
and
xchg
mov
jmp
call
dec
dec
mov
pop
xchg
sbb
dec
push
sub
mov
mov
into
dec
fwait
sbb
cmp
aad
adc
adc
jno
dec
pushf
ret
sub
insl
test
push
popf
dec
push
adc
pusha
mov
jo
notl
mov
std
push
mov
xor
inc
arpl
cld
mov
hlt
xlat
mov
mov
nop
mov
xchg
outsb
xor
lahf
jne
fs
stos
xor
int
ljmp
jno
cwtl
adc
pop
pop
sub
inc
je
stos
mov
xchg
push
mull
cwtl
mov
xchg
cltd
fcmovbe
mov
lret
mov
mov
insb
fs
inc
jno
loope
mov
xor
or
cli
sub
and
jbe
cmp
lock
sub
adc
lods
push
cmp
dec
and
fdivr
sbb
mov
imul
rcrl
dec
mov
pop
je
pop
clc
mov
mov
mov
mov
sbb
int
cmp
ret
cmp
or
stos
sarl
loop
imul
cld
sarb
lock
and
scas
mov
xchg
cli
sbb
sbb
call
cmp
and
push
arpl
cld
aas
iret
shlb
mov
scas
or
jle
push
xor
and
sbb
cmpsb
addr16
mov
ret
cmc
imul
xchg
fbstp
enter
and
test
in
cmp
bound
mov
add
data16
sbb
cmp
das
cmp
sbb
mov
inc
pusha
fucomp
mov
es
mov
jbe
push
xor
nop
sbb
icebp
fdivrp
add
sub
test
addb
adc
imul
and
and
test
out
push
fwait
out
loop
or
xor
sub
scas
jmp
pop
cmp
repz
mov
xchg
cltd
arpl
shlb
push
scas
sub
lahf
insl
add
push
sbb
dec
fyl2xp1
mov
sub
mov
imul
popf
jno
xlat
pusha
aaa
outsb
lret
test
push
mov
push
not
icebp
pushf
add
mov
mov
std
sub
leave
shr
pusha
cmc
test
cmp
outsb
sbb
jb
out
popf
push
int3
hlt
shlb
aad
insb
mov
push
mov
stc
jb
les
loop
or
ds
int3
dec
add
ljmp
out
scas
cwtl
push
lret
inc
mov
subb
mov
mov
es
mov
lahf
mov
mov
push
mov
popf
lret
jne
das
fimull
pop
nop
je
lret
in
movsl
sub
inc
jae
sub
or
loope
mov
cmpsb
jp
add
ret
cmp
bound
or
push
lidtl
addr16
stos
movsl
imul
jg
mov
insl
xchg
stos
push
cmc
pop
outsb
repz
cld
lcall
in
pop
pop
iret
cmp
add
dec
add
faddl
xchg
and
cmp
or
or
js
jp
fnstcw
inc
and
ljmp
or
inc
lret
add
push
push
stos
daa
mov
lock
nop
mov
xchg
and
in
loop
inc
in
push
add
xchg
lds
mov
out
mov
aad
and
jbe
xchg
sub
or
and
mov
and
cli
fcom
cmp
pop
mov
pop
ret
stos
mov
sub
pop
inc
dec
pop
pop
mov
adc
push
xlat
leave
notb
sub
adc
std
xchg
sbb
pusha
sbb
movsl
dec
lds
and
dec
int
sbb
lret
mov
xchg
repnz
fldenv
dec
push
daa
pushf
int
pop
mov
xchg
nop
and
adc
int
mov
cs
arpl
shlb
jl
mov
call
cwtl
lock
imul
out
mov
movsb
or
and
mov
and
sub
mov
orb
ljmp
arpl
dec
mov
sbb
xor
and
sarb
jp
push
cmpsl
pushf
out
call
pop
push
lea
jp
jl
stos
ror
mov
out
bound
mov
mov
out
jl
sub
fdivl
cmp
outsl
pusha
mov
xorb
sbb
jmp
push
in
pusha
or
xor
stc
pop
pop
jmp
loopne
movsl
icebp
leave
mov
mov
dec
push
je
lret
dec
inc
xchg
aaa
cvtpi2ps
inc
jmp
push
fmull
js
mov
and
call
mov
pop
repz
and
push
cmp
scas
adc
push
push
cmp
mov
movsb
or
fdiv
sahf
pusha
mov
out
mov
ljmp
fisubrl
into
fs
mov
sub
or
sub
jecxz
fst
pop
in
mov
pop
jnp,pn
add
ret
push
xchg
dec
jno
cli
movsb
push
inc
cmp
insb
js
and
and
leave
and
adc
das
cli
repz
shll
imul
or
jo
smsw
jb
test
cmpb
fisubl
sti
hlt
stos
sbb
imul
cmc
ljmp
pop
enter
adc
add
jns
in
not
sub
add
mov
je
mov
outsl
jo
mov
ja
aad
fs
movsb
cmp
sbb
pop
cli
stos
sahf
and
adc
into
push
addr16
inc
mov
xor
fcomi
xor
cmp
gs
cmp
inc
imul
xor
push
add
movsl
lret
mov
fisubrl
clc
jmp
mov
pusha
ja
in
idiv
cmp
stos
jl
xchg
sub
fildll
or
mov
sahf
or
sub
pop
push
jge
nop
dec
cld
mov
fs
sub
push
cmpsb
movsl
test
push
add
int3
idivb
out
pop
rorl
in
sub
mov
sub
insl
xchg
dec
add
test
inc
mov
cli
scas
fs
inc
sub
pop
lods
pusha
js
fisttpl
test
and
pop
inc
test
test
nop
movsb
pop
pop
andl
adc
add
push
iret
test
mov
ja
jl
xor
sbb
sbb
repnz
mov
movsl
pop
dec
mov
out
jp
lock
xchg
xchg
push
daa
mov
pop
outsl
mov
xchg
imul
sbb
stos
bound
sbb
jb
mov
and
mov
mov
jmp
notb
hlt
mov
mov
cltd
les
fmuls
inc
fdivr
or
cmp
sub
push
xchg
pop
dec
dec
pop
popa
addl
jecxz
or
or
mov
push
and
inc
insb
mov
jge
es
mov
mov
fs
mov
sub
xchg
inc
fwait
jno
lret
jo
mov
lods
insl
lods
mov
xorl
js
cmp
adc
mov
adc
cmp
insl
or
lods
xchg
lods
dec
loop
insb
mulb
jl
mov
dec
sbb
test
sahf
cmp
lock
in
inc
out
arpl
mov
inc
data16
mulb
inc
mov
xor
testb
pop
sub
xchg
xor
bound
mov
movntq
icebp
daa
insl
jg
repnz
push
push
fcomi
mov
in
icebp
mov
lock
mov
add
shll
mov
std
les
jmp
sub
inc
push
jne
sub
push
dec
or
rolb
test
xor
aad
int3
sbb
mov
out
xchg
cmc
mov
mov
outsl
stc
testl
lods
mov
repnz
dec
push
pop
arpl
fwait
push
mov
icebp
cmp
mov
ret
int
imul
stos
test
mov
mov
inc
es
gs
fistpl
sub
adc
filds
push
push
rcll
cmp
jae
and
lahf
fldenv
sahf
aad
mov
movsb
je
jns,pt
or
add
dec
scas
mov
cmp
cmpsb
pop
xor
iret
loope
loop
add
fwait
push
add
scas
dec
push
pusha
daa
xchg
loop
and
test
or
cmc
adcl
adc
lcall
dec
int
pop
mov
jmp
push
lea
sub
es
mov
ret
imul
repz
insb
cli
and
in
adc
out
movsl
jmp
jae
inc
jae
je
mov
mov
cltd
mov
add
mov
xor
stc
test
adcl
scas
jnp
lea
shll
xchg
mov
inc
inc
call
ret
sub
and
dec
mov
in
push
mov
jl
pushf
rclb
and
jmp
aaa
int
sahf
adc
pop
cs
andb
fsin
lods
shl
inc
mov
stos
rcrb
or
pop
or
adc
xchg
dec
xor
popa
jae
cmc
je
loop
cmp
loopne
inc
hlt
mov
sbb
mov
dec
and
lcall
in
fld
out
mov
scas
adc
sub
inc
jp,pt
dec
mov
inc
jge
popf
xor
pop
sub
cltd
cmp
cwtl
inc
push
sar
push
push
rcrb
xchg
fbstp
repz
sub
addr16
dec
loopne
pop
cmpsl
jns
xchg
pop
dec
push
imul
mov
pop
shl
mov
mov
fbld
insl
jne
or
push
js
push
aas
mov
mov
shlb
mov
imul
fidivrs
sub
xor
jmp
push
jle
cmp
inc
add
sbb
dec
jmp
and
pop
out
jl
hlt
jnp
cmp
mov
lcall
popl
and
push
pop
into
xchg
adc
setae
jle
jecxz
insl
clc
dec
gs
pop
mov
mov
daa
or
cmp
or
jp
pop
dec
cmp
sub
mov
inc
ss
js
std
push
iretw
cmp
inc
mov
pushf
or
lock
lret
cmpsb
or
stos
test
pop
and
test
add
das
in
das
dec
dec
into
xor
mov
pop
movsb
daa
in
jb
and
jo
aam
cmp
add
jecxz
mov
pushf
mov
push
lea
and
cmpsb
out
loope
std
daa
dec
insb
pop
jno
cmp
sbb
pop
rorb
and
fs
pop
fcoml
andl
int
aaa
cwtl
dec
insb
sahf
and
inc
arpl
mov
std
inc
xchg
aaa
popf
in
pop
adc
pop
push
out
repnz
jo
xchg
push
dec
xchg
hlt
test
shlb
aas
les
adc
lock
icebp
and
dec
xor
dec
enter
mov
cmc
mov
mov
fadds
imul
add
adc
into
push
fucomp
inc
ja
in
les
fcomp
pop
push
push
dec
jg
inc
xor
push
jns
mov
imul
jge
arpl
mov
jg
sbb
je
pop
test
and
fdiv
hlt
and
mov
jns
cwtl
mov
mov
and
push
imul
push
dec
mov
loope
jo
sbb
or
js
mov
push
dec
jp
pop
das
enter
xchg
jl
and
repz
sbb
xchg
mov
scas
pop
les
cmp
in
imul
push
inc
es
push
shlb
in
or
repnz
sub
mov
xchg
ds
pop
adc
ror
sub
jmp
dec
xchg
xlat
movsb
mov
and
jge
mov
push
mov
out
xchg
or
mov
mov
outsb
lea
loopne
cli
punpckhdq
cmp
ret
rol
add
stos
vpackssdw
fs
add
pop
push
xchg
sub
out
call
jnp
xor
jo
pop
add
adc
adc
xor
mov
stos
mov
jle
and
dec
cltd
pop
xor
scas
xchg
jnp
pop
pop
cmp
ljmp
sahf
inc
push
xor
inc
int3
jmp
adc
fdivp
jmp
xchg
inc
sbb
popa
mov
xchg
popf
out
cmp
negb
sbb
sub
stos
dec
sbb
pop
cwtl
movsb
xlat
out
pop
fstpt
inc
movsl
shll
test
xor
jb
xchg
loopne
adc
outsb
movsl
repz
outsl
mov
xor
jp
mov
pop
das
sub
jns
mov
xchg
push
sarl
sbb
test
pop
addr16
mov
aad
sbb
ss
and
aad
enter
jge
arpl
or
cwtl
daa
inc
sub
lcallw
push
movsl
sbb
sbb
cwtl
cmp
and
cs
pop
ret
lds
push
pop
push
xchg
fistpl
mov
dec
or
shl
cli
loopne
shl
test
lods
ljmp
pop
in
test
lock
and
es
sub
lahf
inc
sub
dec
jmp
xchg
pop
pop
push
test
sahf
pop
push
xlat
sub
shlb
jg
fimuls
sbb
jb
out
sbbb
adcl
out
repnz
inc
addr16
push
int
jle
cld
dec
add
outsb
xchg
cmc
cmp
sbb
lcall
in
pmaxsw
push
dec
mov
sub
sbbb
in
sub
xchg
insl
push
pop
push
xchg
add
mov
in
nop
push
cmpsb
fiadds
push
stos
mov
mov
icebp
or
push
jo
sub
push
lods
test
mov
dec
mov
scas
sbb
xchg
pop
jmp
xor
shll
xor
std
pop
cmp
aam
imul
push
fistps
dec
cld
inc
loop
mov
sbb
mov
enter
or
or
or
int
repz
xchg
mov
repnz
rolb
dec
adc
daa
fs
loop
loope
dec
xchg
scas
lret
jae
mov
sub
inc
adc
push
and
fsub
mov
mov
ficompl
adcb
jae
adc
push
decb
pop
and
es
jl
lret
push
inc
fwait
sti
addr16
aaa
imul
jb
xchg
int
je
test
dec
loope
xchg
clc
sub
inc
xchg
xchg
pop
add
filds
xchg
shl
xor
jmp
js
decl
add
cltd
sbb
das
xchg
mov
jg
aaa
repz
mov
loopne
xor
inc
in
lahf
rcll
or
cmp
push
push
mov
pop
cmpsb
xchg
push
gs
adc
cwtl
jmp
mov
dec
out
pop
andl
push
ret
in
scas
ret
cld
imul
inc
add
notl
and
push
and
cmp
sbb
inc
in
clc
pop
or
bnd
add
mov
mov
loope
dec
dec
push
sarb
stos
sub
dec
loope
mov
xchg
push
lret
cltd
jae
es
inc
xor
dec
mov
or
push
lock
sbb
inc
fs
loopne
jmp
jp
mov
std
int3
lahf
mov
ja
jne
iret
fwait
lret
sub
test
lock
loopne
sbb
loopne
jns
xor
incl
notl
aaa
out
pop
mov
pop
and
jmp
mov
outsb
add
jae
adc
mov
popf
in
mov
sbb
push
testb
push
pop
adc
enter
adc
fsubs
and
cwtl
jb
sarb
in
cmp
test
gs
xchg
jb
pop
add
icebp
adc
sbb
xchg
iret
or
sbb
sbb
xchg
mov
sbb
enter
stos
cmpb
dec
pop
sbb
jp
test
xlat
mov
mov
push
cmpsb
mov
mov
test
pop
sub
js
add
fdivl
adc
out
cmp
sub
in
repnz
rdpmc
push
repnz
cmp
pop
mov
dec
sub
mov
push
jbe
cmpsb
repnz
push
and
lret
lods
and
mov
js
pusha
aaa
pop
int3
mov
adc
cmp
pop
lret
les
xchg
xor
xchg
cs
mov
ret
je
sub
repnz
inc
push
mov
and
arpl
cmpsb
and
xchg
pop
shll
mov
popa
add
in
sub
adc
roll
xchg
hlt
lret
fcmovu
mov
pop
jno
popa
dec
mov
imul
scas
pop
and
out
sbb
dec
cld
loope
inc
or
mov
in
jp
arpl
int3
pop
mov
mov
lds
pop
add
and
mov
xchg
enter
ret
dec
pop
pop
outsl
clc
scas
adc
push
mov
addr16
outsl
inc
push
lods
test
idivl
lahf
dec
insb
jle
rcr
cs
push
cmpl
sub
je,pt
inc
xchg
into
add
fisubs
outsl
push
push
mov
inc
mov
subb
pop
push
sar
adc
xorb
inc
cmpsl
and
sbb
js
adc
cmp
jo
lods
sti
and
outsb
xlat
imul
jns
sub
pop
lcall
test
fsubrp
insb
iret
fdivs
fwait
jb
sbb
and
fdivs
jmp
cwtl
xor
sbb
inc
fwait
or
dec
and
aas
push
xchg
icebp
or
inc
cmpsb
pop
jno
test
popf
pop
rolb
int3
pop
inc
mov
movsl
xor
cmp
add
and
sub
notl
or
lock
adc
mov
int3
mov
cmpsb
cmpl
orb
cmpsb
sahf
cmpsb
lret
les
adc
xlat
sti
jge
and
add
push
xor
insl
push
xor
faddl
push
sbb
nop
gs
jge
pop
mov
and
mov
ss
xchg
mov
shll
mov
shll
jns
call
loopne
cmp
adc
js
iret
in
push
out
imul
pusha
add
les
lcall
dec
aam
sub
cmp
test
sub
push
dec
inc
pusha
jns
xchg
mov
adc
into
and
sub
pusha
fwait
shl
jnp
test
sbbb
xchg
inc
pop
je
shll
jb
jne
lods
lcall
and
push
sub
mov
testl
rcll
mov
pushl
add
call
mov
sbb
xlat
jle
sub
call
jl
hlt
jge
xchg
jne
mov
fwait
and
xchg
add
mov
addr16
fcompl
int
mov
jle
inc
fs
pop
pop
sbb
lods
lcall
add
les
mov
and
lods
inc
or
or
cmp
out
adc
lahf
sub
mov
cwtl
outsl
push
adc
dec
cmp
notl
out
movsl
rol
and
mov
sbb
lock
sub
adc
adc
test
js
fldt
pop
lcall
mov
adc
inc
dec
insb
sub
add
dec
arpl
popa
inc
jecxz
or
add
or
dec
in
add
mov
or
sub
sub
xchg
push
imul
dec
movsl
adc
xchg
cmpsb
mov
cmp
cld
add
in
jge
enter
cmp
ret
lahf
ja
fs
mov
adc
mov
xchg
jle
aad
loop
out
scas
insl
iret
inc
mov
xchg
adc
xchg
insb
push
rclb
je
push
mov
add
dec
sbb
jle
mov
adc
nop
int3
faddp
icebp
bound
cmp
push
or
sub
xor
push
jne
push
jnp
sub
push
sar
roll
fwait
aaa
aam
lcall
cbtw
dec
cmc
enter
adc
pop
cwtl
clc
in
jmp
sahf
adc
inc
fcom
mov
mov
aas
sub
xor
jl
push
mov
outsb
add
xchg
sti
imull
repz
rcrb
roll
jae
mov
jmp
push
fwait
aaa
dec
lea
dec
cmp
add
xchg
push
gs
movsl
push
dec
inc
jmp
mov
or
inc
outsb
je
or
sub
jl
add
std
or
fadd
sub
pushl
jnp
movsb
sbb
aam
or
mov
sbb
jge
std
push
inc
or
xchg
mov
stc
nop
fdivrs
push
das
sti
ss
lret
mov
insb
shlb
sbb
scas
push
scas
fistpl
pop
xor
repnz
or
sbb
inc
shlb
sahf
aam
mov
jnp
xchg
aam
repz
sub
insl
fnstcw
pop
mov
out
cmp
pop
sahf
cs
repz
adc
cwtl
pop
or
inc
loopne
mov
push
insb
movsb
xor
sub
mov
sahf
insb
cwtl
adc
sbb
stos
adc
and
minps
mov
xchg
jl,pn
pop
xchg
xchg
sbb
movsl
inc
or
js
inc
push
push
fldl
cmp
ror
pop
add
mov
xchg
mov
cmpsl
adc
jl
loope
iret
test
pop
and
or
aas
jle
scas
andb
push
pop
insl
add
sbb
gs
ljmp
call
jnp
test
mov
addr16
cmp
cmpsl
sbb
enter
fdivs
jnp
mov
jge
pop
xor
jb
call
push
mov
jecxz
push
mov
sahf
out
jne
cmp
pause
push
popa
out
gs
out
call
sub
add
mov
outsb
inc
fidivl
adc
bound
add
lret
repz
testb
xor
xor
mov
idivl
dec
inc
cmpsb
sub
xor
push
stc
mov
and
fbld
dec
add
adc
mov
xchg
dec
xorb
repz
push
lods
data16
neg
test
mov
sub
adc
aam
inc
push
sbb
test
test
mov
pop
rorb
daa
dec
inc
cmpsb
cmpsb
mov
nop
and
push
ss
mov
popf
sub
loope
jge
mov
xchg
fadds
std
scas
mov
fadd
mov
into
adc
mov
in
xchg
stos
jp
sbb
sbb
xchg
ss
subl
and
jecxz
or
xchg
shrb
ficoml
sti
ret
loope
or
jno
pop
mov
mov
mov
or
stos
clc
mov
xor
xor
scas
dec
dec
cmp
dec
mov
adc
dec
lds
sti
jae
or
or
pop
xchg
mov
cli
ret
popf
dec
add
dec
push
mov
data16
cmp
push
cmp
dec
dec
sbb
xor
jecxz
sbb
mov
in
xchg
cmp
pop
scas
aad
aas
roll
adc
mov
add
push
and
dec
aas
dec
rol
push
and
pop
pop
push
daa
pushf
sbb
adc
out
fsubrl
or
xchg
rcrb
pop
pop
pop
pop
ss
stc
lret
out
ja
test
adc
scas
lds
jg
push
ja
sbb
mov
sub
xchg
and
fstpt
cwtl
or
bnd
addr16
cwtl
jp
adc
pushl
sbb
adc
mov
int3
sub
call
aam
stc
sahf
xor
repnz
cmp
jb
mov
in
jmp
pop
mov
mov
iret
pop
ljmp
fwait
and
cmpsl
lcall
dec
add
jo
sbbb
andl
testl
mov
stos
inc
cli
pop
repnz
or
or
in
aad
addl
ret
jb
fcompl
lods
leave
jb
xchg
adc
cmpl
pushfw
jns
sbb
scas
mov
repz
mov
add
dec
pop
add
jp
out
push
mov
test
movsl
jp
aam
js
add
jae
fldt
xchg
sarb
push
push
jg
xchg
int3
cld
xchg
loope
dec
push
ljmp
nop
lea
outsb
lods
and
mov
shrb
cmp
scas
lods
push
sahf
stos
pusha
not
mov
stos
push
inc
jge
sti
es
or
cmp
dec
into
inc
cmp
mov
jge
test
jno
sub
adc
mov
sbb
pop
jno
push
aad
jb
and
out
inc
ja
or
loop
movsl
cld
xor
mov
pop
outsl
jge
and
ret
stos
test
mov
bound
xor
stos
inc
int
sub
pop
cmp
fnstenv
hlt
xor
add
loope
es
imul
push
js
cltd
in
mov
add
mov
ret
sub
gs
or
sub
add
adc
cli
xor
popf
imul
sub
pop
push
cmp
sbb
mov
xchg
mov
imul
sbb
add
scas
test
and
inc
pop
jle
imul
pop
xor
and
cmp
add
bound
es
aas
sub
pop
mov
or
pop
sub
push
xchg
call
sbb
inc
call
jmp
les
adc
jecxz
inc
inc
mov
mov
cli
and
adcb
mov
add
out
mov
andb
mov
insl
push
insb
and
push
adc
aam
sub
add
and
sar
xlat
push
xchg
leave
loop
fidivl
loopne
push
out
adc
hlt
andl
sub
out
mov
xchg
test
sbb
jbe
lret
iret
lret
js
push
inc
mov
bound
lahf
mov
insb
mov
mov
sub
pushf
lret
enter
or
imul
cld
in
dec
cmpl
adc
push
insl
lds
xor
add
and
adc
inc
sbb
mov
pop
xchg
sbb
in
repnz
enter
movsb
arpl
xchg
sub
push
mov
loop
xor
loop
jl
xchg
in
add
mov
shrb
inc
daa
insl
xchg
jnp
testl
addr16
inc
fsub
rclb
popf
add
iret
icebp
movsl
push
cld
inc
fbstp
int
add
mov
pop
or
jbe
mov
sbb
test
inc
pop
mov
or
pop
push
adc
lcall
add
outsb
jo
jmp
lea
inc
xor
xor
cmovb
loopne
rorb
call
shlb
adc
pop
pusha
mov
lods
hlt
or
outsl
pop
inc
test
mov
mov
les
inc
jmp
loope
loop
cmp
out
sub
xchg
sub
sarl
add
mov
leave
push
test
filds
jns
repnz
and
sahf
mov
push
or
popf
push
in
xor
cmp
scas
testl
insb
mov
inc
icebp
sbb
or
pop
mov
test
cmp
mov
ds
roll
mov
inc
gs
inc
insl
lcall
out
sub
dec
mov
sbbb
or
mov
xchg
cld
dec
pop
jl
cli
iret
mov
jecxz
inc
pop
lret
adc
outsl
nop
dec
leave
repnz
pop
stos
shlb
push
scas
push
mov
imul
mov
jns
popa
test
adc
xchg
push
ret
mov
inc
fidivrs
mov
fwait
mov
inc
test
add
mov
push
dec
fldt
data16
in
cmp
jl
out
js
inc
and
lahf
out
sub
jne
aad
adc
adc
test
int
pop
testl
mov
or
fimuls
gs
int
mov
out
jle
fistpll
insb
sbb
iret
add
jo
dec
and
aam
mov
aam
adc
ret
inc
cmp
and
mov
add
adc
push
hlt
push
cmp
inc
and
rcll
hlt
je
and
xor
push
mov
adc
ljmp
mov
add
loop
ja
jg
cmpsl
cmp
pop
ja
cmp
dec
movsb
fs
rorl
mov
rclb
sti
jg
sub
jae
or
mull
lcall
push
mov
pop
adc
das
add
scas
push
test
lock
das
push
push
jg
add
lcall
rcr
repnz
pop
jl
ret
sub
cmp
or
sbb
ret
jmp
push
jo
fcompl
inc
andb
aam
pop
mov
or
cld
into
add
popfw
pop
jmp
mov
stos
add
push
mov
mov
fldenv
push
xor
addr16
leave
sbb
mov
gs
lods
pop
mov
fnsave
jl
mov
sbb
in
out
xor
push
daa
ficoml
jnp
cli
fisttpll
imul
stc
sarl
pop
and
add
push
mov
adc
iret
js
and
push
insb
inc
pusha
push
sub
xchg
pcmpgtw
clc
enter
movsb
in
cli
xchg
int3
test
sub
test
push
xchg
leave
push
add
clc
aas
inc
mov
std
gs
je
pop
dec
ja
cmp
push
mov
ja
inc
ljmp
mov
xchg
out
mov
jp
test
imul
test
pop
call
mov
movsb
jns
addr16
inc
hlt
jmp
cltd
inc
push
sub
inc
xchg
cmpsb
cld
clc
adc
lahf
jmp
push
imul
nop
sahf
rol
stos
iret
or
pop
jno
mov
sub
rcrl
aaa
lcall
bound
fisttps
and
xor
adc
mov
mov
into
pop
add
xor
in
xchg
hlt
cmp
lea
mov
flds
scas
enter
dec
mov
pop
jbe
add
jge
mov
mov
js
jns
fimull
in
rcr
mov
sub
test
jb
adc
loope
out
or
xlat
pushf
test
hlt
push
pop
and
adc
lds
push
jl
incl
repnz
mov
dec
mov
xlat
daa
xchg
pusha
adc
jae
test
jmp
xchg
and
adc
xor
cs
std
cmp
push
dec
inc
rolb
aaa
mov
fnstsw
cmp
dec
scas
je
ret
sbb
cltd
fucompp
sbb
xor
cwtl
mov
andb
std
cltd
addr16
pusha
push
push
add
jnp
imul
xor
sub
push
icebp
pop
pop
adc
iret
xor
les
dec
shr
sbb
fdivrs
jo
repnz
loopne
mov
mov
sbb
test
fiaddl
sarb
daa
xchg
mov
push
fcompl
test
sub
push
and
jne
ja
fldt
mov
icebp
jmp
push
inc
ficompl
push
iret
mov
inc
mov
inc
loope
sub
mov
pop
pop
add
sarl
in
xchg
insb
cltd
mov
or
aad
mov
jnp
jmp
or
cmpsl
pop
lret
and
lods
mov
stos
ficompl
test
jne
int
add
inc
aam
add
aad
xchg
test
inc
xlat
mov
testl
mov
add
dec
loope
xor
and
lea
mov
mov
fs
mov
rcrl
push
test
in
sbb
push
and
inc
jl
adc
xlat
imul
fildll
sub
fistpl
push
lahf
aaa
jne
pop
test
xchg
add
test
cmp
cld
xor
loope
push
lds
mov
loopne
sub
mov
int
push
call
sbb
ret
inc
enter
insb
shr
mov
adc
cmpsb
or
xchg
mov
sbb
pop
out
int
inc
xchg
inc
push
int
test
pop
icebp
jp
or
adc
mov
and
popa
xrelease
and
xor
adc
test
sub
push
adc
repz
mov
inc
xchg
mov
es
sahf
jl
push
daa
lock
dec
or
inc
movsl
mov
dec
out
dec
addl
lret
rclb
xor
xchg
jg
divb
sbb
adcb
pop
sub
xor
test
adc
mov
mov
lods
inc
mov
movsl
add
and
xchg
sbb
fildl
mov
pmuludq
popa
cmpsl
fs
xchg
mov
gs
push
sbb
je
or
into
incb
sbb
ret
push
push
push
addl
adc
jae
pop
ljmp
xchg
jmp
data16
or
jae
dec
les
sub
rcrl
ror
addb
das
aas
dec
orb
mov
pop
pop
sub
in
dec
mov
std
push
jo
jle
arpl
inc
pop
unpckhps
inc
xchg
call
mov
out
and
testl
inc
jo
fcompl
cwtl
das
scas
fnstcw
push
repnz
sbb
mov
jo
push
sub
inc
out
cmp
sub
loop
sbb
mov
incb
outsl
outsb
or
xor
fiadds
arpl
xchg
and
imul
cmpsb
in
test
push
or
aad
xstore-rng
cmpsl
mov
lret
or
imul
dec
jl
subb
add
add
push
pop
cmp
mov
cld
xor
insb
loop
stos
inc
inc
xor
scas
xchg
das
push
divb
movsb
sarb
xlat
std
mov
cmp
inc
mov
ds
jl
xlat
jno
mov
mov
mov
lahf
adcb
mov
loop
mov
jo
lret
jne
mov
sub
cwtl
pop
dec
enter
dec
aad
cmpl
mov
sahf
jge
pushf
pop
and
mov
stos
push
jg
test
inc
lds
sub
cmp
or
sub
cmp
push
adc
mov
pop
adc
stos
xchg
push
dec
fldl
and
dec
rcl
push
mov
cmp
movsb
cmpsb
movsl
cltd
pop
lds
cmp
sahf
gs
sbb
mov
outsb
add
adc
sahf
inc
int
ss
sub
add
mov
pushf
mov
jo
push
dec
jecxz
adc
lcall
mov
xor
inc
mov
xchg
add
ret
and
icebp
cmp
loope
fs
fistpll
movsl
data16
cld
scas
ljmp
jb
ljmp
push
adc
leave
shll
adc
mov
push
xor
adc
xchg
stos
addr16
mov
xor
jmp
clc
addr16
mov
sub
out
mov
test
mov
push
pushf
lea
stc
push
lods
jmp
repnz
test
jmp
aam
push
inc
push
mov
xchg
test
incb
inc
jnp
xchg
adc
aaa
aaa
movsb
testl
mov
js
mov
scas
sub
ja
sub
cmpsl
or
stos
mov
rcrb
jo
cmp
in
ljmp
arpl
push
push
add
and
aam
xchg
mov
jle
in
add
fdivr
add
cwtl
lret
pop
sbb
test
or
pop
push
ljmp
out
outsb
pop
idivb
mov
push
mov
cltd
sahf
ja
xchg
cld
inc
adc
mov
in
lock
adc
call
or
pusha
jmp
arpl
jno
or
mov
aad
mov
jge
xchg
jmp
add
xchg
movsl
lcall
in
nop
pop
in
repz
and
fwait
bound
jnp
push
fists
bound
repz
sarl
ret
xchg
inc
mov
mov
pop
cmc
jnp
sbb
imul
lods
inc
in
rcr
xorl
lea
inc
ss
xchg
scas
sub
les
push
cs
inc
lret
cltd
jle
and
push
mov
mov
nop
scas
xchg
adc
ret
mov
adc
xor
lret
into
mov
jl
aaa
and
dec
pop
outsl
pop
data16
add
imul
add
inc
std
or
push
and
or
stos
mov
and
mov
rcrl
out
add
push
ret
mov
test
adc
xchg
mov
int3
inc
or
cli
lds
mov
inc
scas
push
lcall
fldcw
aam
add
fldenv
imul
dec
rclb
cmp
into
iret
loopne
jae
popa
jne
inc
insl
pop
fisttps
clc
cmp
inc
rcl
icebp
outsl
dec
pop
add
cmp
adc
pop
mov
sbb
cmp
int
mov
fidivs
pop
inc
mov
xchg
out
xchg
outsl
adc
or
or
mov
ret
bound
outsb
gs
into
fimuls
jbe
inc
leave
jp
pushf
xor
push
inc
pop
mov
ret
frstor
cmp
fs
push
xlat
lods
mov
sub
bnd
pop
sahf
add
fstpl
and
cmp
int
in
fsubs
ss
mov
leave
sub
mov
mov
cvttps2pi
scas
push
scas
arpl
movsl
lret
loopne
fisttpll
jae,pn
mov
and
call
cli
ret
xchg
or
test
int3
nop
xchg
dec
hlt
inc
cmpsb
inc
mov
stc
sub
outsl
ftst
mov
es
mov
ljmpw
mov
in
imul
fistps
aaa
pop
fmull
dec
insl
mov
dec
aaa
pop
jp
out
stos
icebp
pop
sahf
repnz
testb
scas
repz
jl
loopne
cmp
dec
jl
pop
dec
cmpsl
shrb
sbb
mov
and
leave
in
and
enter
sbbb
xor
sti
orb
mov
push
jle
mov
xor
nop
popf
mov
push
or
call
xor
or
sarl
cltd
mov
pop
mov
sbb
cmp
imul
in
pop
ret
push
subb
enter
mov
mov
pushf
popf
mov
shll
aad
jge
cltd
inc
sbb
sbb
jmp
push
cmp
or
adc
or
mov
xor
clc
mov
pop
mov
outsb
sti
inc
sbb
das
sbb
or
in
jge
cmp
out
mov
shlb
stos
and
dec
aaa
pop
lock
jnp
dec
cmp
insl
and
push
cltd
xor
out
popa
dec
mov
lods
fcmovne
dec
roll
mov
or
push
out
data16
and
stc
cli
adc
subl
pop
xchg
mov
inc
orl
lahf
dec
xor
mov
or
sub
mov
mov
mov
or
sbb
cld
fldenv
sbb
stos
lret
jecxz
push
mov
std
and
aam
fs
jae
popa
sbb
imul
lret
inc
scas
cmp
cli
jp
dec
js
push
out
arpl
jnp
pop
add
imul
cmpsb
add
pop
call
ljmp
mov
pop
fstp
je
insl
push
mov
xchg
push
sbb
icebp
sub
adc
and
push
rclb
lea
stos
in
lret
and
rorb
lods
test
pop
xor
jns
push
int
mov
lret
popf
fs
mov
and
int3
scas
mov
out
pop
loopne
mov
aad
pop
sbb
ret
mov
xor
fisubl
mov
mov
stos
mov
dec
cmp
sub
nop
gs
imul
mov
mov
je
xchg
mov
adcl
ret
enter
loopne
mov
jge
sbb
fwait
mov
sti
les
mov
push
jne
jno
orb
add
cmc
aas
mov
aam
in
data16
cld
nop
notb
adc
push
pop
imull
adc
or
fimuls
lret
cld
add
and
jl
and
mov
ljmp
cmpb
in
mov
test
int3
ret
pusha
sub
lods
adcb
int3
enter
les
push
in
push
xor
sub
sbb
push
ds
mov
xrelease
aam
mov
pop
add
jmp
daa
and
pop
aam
lret
sbb
xchg
sbb
addr16
out
cmpb
sbb
push
clc
mov
add
leave
xchg
test
cmpb
mov
icebp
sbb
pop
jo
mov
subl
push
fstpt
add
sub
call
inc
jp
and
or
insb
stos
fsts
popf
outsb
add
jb
stos
xchg
xchg
lock
lods
xor
orb
add
fbstp
xor
push
mov
fistps
in
xor
fs
sub
cmpsl
in
sbb
mov
in
cmp
mov
push
aad
cld
mov
jp
mov
sbb
mov
adc
dec
xchg
mov
push
iret
mov
int
leave
outsl
aad
lods
jmp
out
xchg
ja
fnstcw
cmp
imul
leave
mov
mov
popf
mov
mov
in
push
cmp
dec
push
arpl
cmpsb
inc
jecxz
jnp
in
pusha
mov
jmp
repnz
adc
aad
int3
push
add
push
or
or
jle
lahf
sar
lods
inc
adc
pop
lds
jg
add
push
mov
inc
mov
mov
in
leave
test
test
adc
test
test
enter
xor
mov
call
cld
push
test
and
roll
pop
jnp
in
sbb
das
lcall
push
ljmp
and
adc
cmc
mov
push
gs
or
insl
sbb
sub
repnz
pop
jb
test
test
sub
mov
leave
mov
stc
or
and
mov
cltd
xorb
pop
into
xchg
add
stos
test
ret
in
adcb
xchg
xor
fists
rclb
loop
into
mov
ljmp
je
inc
fsubs
xchg
mov
xorb
int
jle
push
insl
packssdw
xchg
add
leave
and
jnp
pop
popa
inc
ja
sbb
in
in
shll
aas
scas
push
fs
cld
lahf
adc
or
addb
insb
pop
ja
and
lret
inc
ja
sub
jl
dec
lods
or
jle
int
test
mov
pop
add
ja
mov
sbb
mov
sbb
or
push
daa
nop
sbb
sarb
shlb
adc
call
les
xor
ss
mov
or
pop
stc
mov
add
cltd
xchg
and
dec
scas
xchg
mov
ficomps
xor
push
mov
sub
xor
aam
sbb
jp
lret
lods
cmp
add
movsb
ljmp
adc
das
stos
xchg
in
lods
push
cli
jns
jl
sbb
xor
std
ljmp
pop
xor
mov
fiaddl
inc
dec
mov
inc
test
mov
jle
fisubrl
and
inc
sarl
sti
shrl
imul
cld
test
fwait
repz
sub
in
repnz
imul
and
mov
ds
adc
push
lods
cmc
jns
arpl
sub
push
aam
or
dec
adc
ss
outsb
test
mov
fnsave
movsb
jmp
insb
xchg
mov
movsb
jg
mov
outsl
fsubl
bound
xlat
push
pop
ret
ret
pusha
pop
cmc
push
cmc
fistl
fsts
pop
pop
fcomi
adc
roll
repnz
roll
inc
mov
aad
sbb
push
int3
movsl
aaa
and
adc
fimull
cld
pop
and
aam
dec
cli
sbb
xchg
sbb
mov
loop
mov
adc
pop
fucomp
int3
aad
adc
fsubs
scas
sub
jle
jo
int
dec
push
rorb
lahf
mov
mov
sahf
lcall
jp
mov
scas
push
dec
mov
pop
insb
ljmp
add
mov
fnstenv
lcall
cmp
xorl
xchg
or
outsl
mov
sbb
mov
ljmp
xor
mov
add
jp
insb
fistl
jge
xchg
sub
sbb
call
js
repnz
push
movsb
test
out
insb
or
scas
in
mov
incb
test
and
adc
clc
xchg
jbe
iret
bound
fldcw
jb
inc
scas
jns
pop
mov
mov
and
jmp
jo
in
sbb
xchg
ss
out
in
pop
add
pop
popl
int3
fwait
xchg
test
and
xchg
rcr
pop
xchg
mov
jnp
fildl
pop
cmp
mov
and
popa
bound
rcll
mov
pop
fstpt
pop
inc
jno
mov
mov
pop
push
cmpsl
push
cmp
cmpsl
test
movsl
lock
or
dec
mov
dec
inc
pop
mov
jl
mov
xor
outsl
lods
scas
pop
mov
icebp
adc
fwait
or
dec
daa
fstps
loopne,pt
pop
dec
mov
mov
clc
mov
and
sub
sbb
lret
adc
mov
adc
roll
sbb
aas
jp
sbb
ss
xchg
adc
jge
fwait
inc
add
cld
adc
xor
and
add
sbb
push
enter
mov
jb
loop
ret
mov
mov
iret
das
push
outsb
push
loop
test
fscale
mov
fwait
pop
cltd
mov
ljmp
jmp
mov
stos
mov
sbb
jb
inc
mov
test
stos
mov
ds
lret
xor
xchg
mov
cmp
les
xchg
adc
cltd
add
jb
sub
idivb
cmpl
xchg
test
je
cmp
out
ret
jbe
inc
loopne
sbb
test
ror
cmpb
repz
test
test
jl
mov
loop
test
jecxz
sbb
jg
and
cmp
and
incb
xchg
fsubl
es
sub
pop
jne
jg
dec
outsl
aam
push
adc
xchg
pop
mov
inc
jmp
sbb
push
adc
mov
mov
dec
add
sbb
inc
inc
cmp
adc
pop
outsl
movsb
push
into
jp
inc
inc
inc
jo
lods
add
iret
adc
int
imul
inc
push
aam
xor
stos
or
xor
jnp
pop
mov
outsl
stc
cmc
ret
adc
cli
xor
in
inc
stos
xor
add
mov
mov
imul
push
lods
fs
mov
rcrl
mov
mov
mov
or
mov
xlat
dec
sbb
adc
popa
std
adc
pop
sahf
test
movsl
cs
inc
mov
push
xchg
stc
loop
fldl
inc
or
adc
outsb
jp
in
sarb
cmc
lock
dec
ss
cmpsl
add
test
mov
add
cmp
mov
xor
fcomps
sarl
push
aas
sub
mov
int3
xlat
sub
jo
sub
xor
mov
sbb
sbb
sub
loopne
sub
daa
dec
loope
out
dec
adc
sti
test
sbb
ja
sub
out
sbb
scas
push
jns
push
cmc
mov
loopne
test
outsb
int
dec
insl
adc
xchg
dec
xchg
scas
mov
mov
and
xchg
pop
dec
push
jno
mov
loopne
push
pusha
jp
push
es
push
mov
sub
cli
pop
ss
mov
mov
aam
mov
scas
cld
ss
loop
out
scas
ss
ja
inc
sub
mov
pop
fcoms
pop
out
and
xor
xchg
fsubl
jb
lahf
movl
or
lods
call
movsl
inc
add
insl
addr16
scas
push
sbb
les
cltd
sub
add
cmp
fists
pusha
nop
push
xchg
dec
and
daa
ja
inc
xchg
cmpsl
cmp
xchg
cs
in
jmp
gs
push
adc
lock
mov
outsb
pop
jne
mov
mov
dec
jmp
mov
mov
call
mov
shlb
dec
mov
push
loope
add
mov
ds
arpl
jecxz
pop
add
addr16
fcom
stc
std
lods
mov
dec
pop
xchg
cltd
lds
test
jbe
sar
dec
inc
or
xor
rclb
dec
sbb
arpl
add
repz
inc
stc
inc
mov
stc
xchg
mov
ja
shll
inc
je
inc
daa
clc
jae
lret
int3
push
mov
rep
cmc
cmp
insb
addr16
pop
and
out
push
sbbb
and
sub
in
lcall
imul
mov
cmpsl
jbe
out
scas
jg
adc
js
sti
jnp
aad
mov
lret
mov
xchg
sub
lock
xor
fwait
cltd
adc
adc
pop
shlb
sub
mov
popf
repz
xor
mov
sti
adc
jge
movsl
sub
jns
or
jmp
mov
shll
adc
rorb
mov
roll
arpl
les
aaa
inc
xor
sbb
dec
sub
popf
cmp
arpl
fs
outsl
cwtl
lods
sbb
andb
into
je
int
mov
iret
xchg
mov
popf
jecxz
mov
bound
cltd
cld
fistps
lcall
in
mov
sahf
in
andnps
adc
fnstsw
stos
mull
out
in
pop
mov
mov
fistl
test
mov
add
push
or
and
and
jo
mov
dec
mov
fistpll
jp
stos
pop
pop
movb
mov
lcall
mov
shrb
fwait
jb
add
add
andl
es
es
jge
lods
push
cli
pop
push
add
int3
add
inc
inc
loope
push
add
movsl
jae
or
xor
cmc
and
js
aas
dec
sub
mov
or
adc
xchg
cmp
inc
sub
sbb
test
jnp
fisttps
jmp
icebp
push
sti
out
rclb
notb
lret
mov
mov
add
jb
jno
or
pop
lods
or
xor
jnp
mov
jmp
add
ret
repnz
cli
ss
das
out
fs
popa
cmp
or
and
lea
pushf
cmp
mov
sub
test
dec
xchg
into
push
sub
rolb
sti
lods
in
imul
popf
dec
shlb
inc
fbstp
xor
cmc
call
call
cmpsl
jnp
add
sbbb
icebp
sub
cmpsb
cmp
in
push
ja
add
xor
or
sahf
adc
add
pop
jle
mov
mov
sbb
fcomps
icebp
push
cld
inc
lds
repz
pop
pusha
xor
lods
mov
push
mov
mov
cmp
scas
inc
clc
pop
push
dec
loop
lret
jmp
inc
das
andl
jbe
lahf
push
mov
xchg
lret
fdivl
jp
ljmp
sub
mov
sub
mov
cmp
pop
push
ret
mov
cmpl
xchg
lret
mov
xlat
icebp
ret
xchg
pop
pop
xchg
push
xor
and
icebp
bound
xchg
push
push
inc
movsl
xchg
out
inc
pop
inc
popa
stos
jge
dec
out
pop
add
lcall
nop
mov
scas
and
and
xchg
or
push
outsb
push
xor
jecxz
imul
jbe
aam
or
pusha
xchg
adc
or
mov
decl
iret
pop
push
movsb
mov
inc
mov
push
int
push
movsl
out
out
pop
and
pop
gs
arpl
xchg
cwtl
push
aad
adc
cmpsb
lea
dec
push
or
adc
test
test
imul
jmp
mov
popa
push
adc
and
push
adc
scas
loope
dec
loope
ds
clc
sub
sarl
out
fwait
mov
sti
mov
ss
iret
ret
push
jns
les
scas
dec
dec
movsl
lea
and
jmp
stos
imul
roll
lcall
bound
cmpsl
clc
lahf
xchg
inc
in
mov
in
shl
sarb
pushf
mov
push
mov
nop
movsb
ss
sbb
shll
arpl
and
cmp
xchg
push
jo
orb
adc
add
enter
push
mov
push
inc
js
add
and
dec
dec
sbb
je,pn
cltd
outsb
mov
cmp
fidivrs
inc
or
jg
mov
push
sbb
insb
inc
ljmp
out
cwtl
sub
insl
insl
fsts
aas
cwtl
mov
push
add
ds
xlat
xchg
ss
or
sti
ds
loop
iret
adc
ud2
push
push
addl
fdivrl
leave
xchg
adc
fisubl
dec
out
test
lret
push
add
xor
and
xchg
outsl
xchg
dec
dec
sub
pop
mov
ret
dec
mov
sub
out
sbb
push
and
repz
aas
es
in
test
fucomp
andl
inc
shlb
mov
ljmp
shl
jnp
mov
ds
sub
push
push
out
xchg
fcomi
es
or
lret
jb
fcmovne
popf
pop
push
fs
push
cltd
sbb
insb
adc
out
sub
mov
movsl
push
mov
inc
sbb
mov
or
mov
repz
cmp
and
pop
inc
test
mov
popf
add
inc
rolb
loope
cmp
mov
daa
and
lods
add
jno
out
mov
sub
test
lock
fdivs
mov
dec
pop
xor
das
lcall
lahf
sbb
lret
mov
mov
pop
lds
lret
push
pop
add
insl
test
or
push
gs
sub
cs
pop
test
or
pop
adc
ficoml
and
lods
or
fldcw
fcmove
fstps
mov
imul
and
mov
jns
insb
mov
enter
out
lret
sbb
in
gs
inc
cltd
movsb
loopne
dec
and
pop
mov
and
mulb
daa
js
add
in
repnz
xchg
mov
stos
enter
mov
xchg
dec
dec
icebp
pop
pop
xchg
jl
or
pop
cmpsl
inc
xchg
inc
mov
loop
mov
aaa
add
xor
mov
cmpsl
in
out
push
rclb
scas
out
int
iret
jo
shll
loop
mov
xchg
cmp
sub
imul
xorl
ss
neg
nop
or
jno
sar
or
mov
jecxz
sub
and
test
sbb
inc
int3
das
jge
leave
pop
push
pop
daa
sarb
adc
xchg
into
add
cmp
loop
mov
inc
out
lds
movsb
sub
cmp
pop
jno
jp
lcall
mov
dec
inc
ds
mov
add
add
das
pop
xor
mov
inc
insb
sub
xchg
add
out
pop
xor
sub
negl
push
pop
daa
push
push
jge
mov
js
push
cmpsb
jmp
outsb
roll
jno
in
jge
jmp
ja
xor
out
sbb
jmp
fcmovnu
xor
or
dec
dec
push
adc
movsb
pop
or
in
bound
lcall
lret
or
push
mov
leave
inc
sbb
jl
jnp
push
mov
mov
lcall
iret
imul
mov
dec
xchg
mov
cmp
jg
push
les
imul
jae
loopne
inc
repnz
out
push
sbb
push
pop
js
loope
and
push
and
jbe
dec
push
jge
inc
xchg
cmp
fisubrl
pop
call
stc
js
mov
xrelease
mov
push
pusha
pop
sbb
lock
dec
jle
outsb
mov
push
mov
jbe,pt
aaa
arpl
mov
popf
out
cwtl
mov
mov
sub
gs
arpl
jnp
repz
add
pop
jno
push
fs
lahf
ja
xchg
cld
sbb
sbb
lahf
pop
fisubrl
hlt
pop
mov
inc
in
cmp
push
sub
sbb
cmpsl
in
mov
push
out
push
mov
mov
xchg
mov
cmp
adc
cmp
iret
or
jno
pop
sub
test
iret
pop
or
sti
repnz
jecxz
lock
lea
jp
lahf
pmaxsw
pop
enter
inc
push
jns
xchg
push
or
dec
xor
xlat
push
inc
lods
xchg
popf
mov
xor
pusha
xor
ds
movsb
divb
stos
dec
mov
call
mov
sbb
sub
or
mov
inc
cmp
adc
sbb
clc
jae
sub
dec
bsr
push
fildll
fnstcw
adc
or
out
clc
lds
cmp
add
je
shlb
pop
add
and
sbb
ffree
jns
cltd
scas
pop
aam
fsubrp
mov
in
pop
bound
rcrl
xlat
aas
jmp
push
sub
ret
pop
xor
fcmovb
push
sbb
lods
jae
mov
iret
imul
pop
rcl
sub
leave
mov
or
inc
xor
and
out
ffree
inc
mov
jecxz
dec
sbb
push
orb
xlat
dec
sbb
xchg
xor
mov
jecxz
fnstcw
ss
mov
pop
xor
out
addl
sub
jb
dec
aam
adc
ds
jmp
lea
lret
leave
mov
ds
push
push
mov
xchg
je
les
fisubrl
iret
mov
push
daa
mov
dec
inc
or
lahf
dec
mov
cmpsb
iret
sub
addr16
xlat
je
notl
mov
lods
aad
cmpsl
fcoml
ret
lods
nop
xchg
jno
enter
push
stos
dec
out
jp
sbb
add
mov
pop
ret
jmp
adc
add
std
pop
push
outsl
leave
pop
or
jecxz
mov
mov
int3
push
test
aad
es
xchg
cmp
push
xchg
add
hlt
sub
push
test
jp
pusha
rorl
and
inc
sub
xor
lea
outsl
xor
jae
xor
jmp
mov
inc
insb
pusha
vmovsd
dec
adc
or
in
movsb
adc
sbbl
sub
sub
jecxz
sbbb
sub
dec
push
cltd
cmp
sbb
pop
sub
outsl
push
mov
iret
in
xchg
sbb
dec
sub
fistps
mov
das
or
arpl
popf
sub
or
or
aad
gs
inc
ss
xchg
rcrl
and
mov
int
fs
pop
dec
add
shrl
push
sbb
push
cmp
jno
adc
or
jle
xchg
inc
add
mov
sub
lea
enter
das
jmp
cld
addl
jp
test
add
dec
sbb
fisubs
js,pn
jge
lret
jno
inc
pop
imulb
inc
leave
mov
sub
inc
push
fwait
outsb
xchg
mov
push
xlat
jl
shll
push
stos
mov
pop
lcall
lock
movsl
orb
mov
sub
in
and
cmp
js
lods
repnz
jge
and
jge
dec
sub
cld
mov
mov
daa
mov
sub
mov
xor
nop
xor
in
mov
outsl
leave
jmp
mov
icebp
push
mov
enter
xchg
sahf
xor
sub
push
dec
sub
mov
jg
cmc
push
or
daa
clc
fcompl
mov
lcall
lcall
test
jg
xchg
cwtl
add
mov
cmpsl
push
lret
xor
sbb
roll
jbe
int
cltd
cli
cmpsb
xchg
mov
mov
lods
pop
dec
inc
sbb
inc
dec
sub
jl
jp
mov
push
mov
iret
xchg
scas
jno
dec
andl
aad
mov
clc
loop
mov
lock
cltd
xchg
popf
cs
ret
mov
sub
je
cmpsb
out
es
jbe
adc
mov
repnz
push
je
lret
and
sbb
sahf
mov
sahf
leave
insb
fsubrl
out
cmp
mov
jnp
xchg
dec
jno
int
cli
xor
insl
and
sbb
mov
lea
addb
mov
sbbb
clc
pop
ffree
mov
mov
in
xor
out
jmp
xchg
and
and
mov
pushf
test
and
pop
mov
rolb
cmc
cwtl
stos
out
xlat
mov
lods
shrb
sub
nop
sbb
stc
add
adc
mov
mov
jnp
leave
pop
es
clc
sub
fdivl
sub
pop
push
aas
jp
popf
jl
push
pushl
sbb
pop
xchg
test
nop
hlt
push
mov
dec
ret
mov
bound
popa
jecxz
jg
mov
fwait
jge
ret
mov
pop
addr16
stos
out
cmpsb
movsb
orl
cld
aam
lret
movsb
ja
jl
or
inc
aam
inc
mov
jl
xchg
lret
aas
push
test
pop
or
test
mov
rep
cmp
adc
mov
jge
lods
outsl
sub
fistpl
ljmp
jmp
lea
shll
lds
mov
xor
cmpsl
xchg
fmulp
imul
std
rcll
push
adc
push
sbb
stos
jle
cs
pop
int3
pop
shrb
inc
push
insb
inc
cmp
sbb
add
pop
add
sub
mov
push
cwtl
mov
or
adc
outsl
mov
cmpl
xor
lea
mov
dec
test
and
pusha
in
popa
pop
mov
cmp
les
hlt
test
aad
cmpsl
movsb
flds
lods
sti
imul
mov
insl
xchg
in
xor
insl
sub
pop
mov
jg
andl
jae
stos
sbb
sbb
cs
mov
add
movsl
push
cli
pop
test
lea
repnz
popf
mov
test
loopne
mov
adc
outsl
lods
sub
xchg
hlt
js,pn
mov
mov
stos
cmc
clc
and
push
or
popf
dec
or
ja
xor
das
and
add
jb
pop
xorb
das
cwtl
sahf
imul
push
xchg
push
cmc
mov
ret
mov
ljmp
fwait
jb
push
or
push
push
ficompl
push
jecxz
icebp
stos
icebp
iret
inc
adc
pushf
push
ret
sbb
mov
cmp
clc
push
jnp
es
dec
or
add
pop
out
gs
cmpsb
leave
xchg
int3
fnstcw
lds
hlt
or
push
aam
in
cld
enter
stc
inc
xor
daa
loopne
je
mov
xchg
sbb
pinsrw
pusha
int
hlt
pop
xchg
sub
fisttps
mov
ret
or
push
out
sarb
inc
orl
stos
mov
scas
jp
loop
cmp
ds
push
bound
mov
addr16
jecxz
mov
mov
test
adc
fsts
xchg
jp
sbb
fmuls
fildll
bound
pop
xchg
pop
movsb
jmp
dec
inc
sbb
mov
cmp
jbe
and
mov
int
inc
ficompl
sti
jnp
sti
fstpl
adc
xchg
repnz
out
inc
rorb
sub
sub
lahf
pop
xor
jnp
adc
adc
sbb
sub
lcall
xor
stos
add
mov
jns
je
xor
cmp
dec
in
and
mov
call
and
jecxz
imul
testl
popa
stos
loop
mov
xchg
mov
pop
adc
add
mov
mov
or
ret
inc
push
lahf
push
or
popa
cmp
mov
clc
stos
fmul
lret
dec
sbb
nop
mov
icebp
testl
je
out
or
ret
inc
les
ds
movsl
out
mov
out
push
xchg
repz
xchg
in
or
inc
mov
or
aas
adcl
inc
push
push
int
xchg
xlat
int3
cmp
sub
cmc
neg
cs
out
adc
nop
cmc
mov
ja
jae
outsl
int3
push
orl
xchg
dec
cmp
or
call
outsl
js
and
clc
lcall
dec
pusha
mov
adc
movsl
aad
or
aam
adc
or
mov
sub
push
cs
jmp
cmovns
push
pop
push
test
cwtl
cltd
mov
xchg
sub
jl
add
mov
jg
sbb
ret
cmc
mov
out
mov
mov
loope
in
adc
xor
jne
push
or
pop
mov
movsl
mov
test
jb
mov
and
xor
movsl
dec
cmp
jg
or
dec
mov
pop
add
in
sub
and
cwtl
adc
cmp
or
mov
ss
cltd
dec
xlat
bound
dec
inc
and
out
imul
idivb
pusha
cmp
pop
cmpsb
sbb
leave
les
jg
ja
mul
pusha
add
jecxz
jae
scas
inc
insb
and
insl
xchg
aaa
jb
adc
pushf
or
stos
fld
push
sti
loop
inc
repnz
scas
push
iret
push
mov
sahf
iret
test
cmc
sar
out
xchg
or
leave
dec
add
fnstcw
popf
cmp
cltd
jne
lea
jnp
push
dec
cmpsl
pop
pop
xor
mov
pop
push
enter
xchg
mov
lcall
push
jnp
cltd
ja
mov
mov
das
pop
cmp
test
inc
cmp
fistpll
insb
dec
dec
cmp
test
pushf
cs
out
and
jmp
test
fbld
pop
loopne
mov
fwait
push
pop
push
aaa
xchg
sub
lds
sub
pop
lret
xchg
push
inc
fsts
xlat
sub
mov
inc
sbb
jge
rclb
cld
ds
pushf
xlat
adcl
adc
ret
loop
dec
repnz
ret
je
adc
mov
fcmovb
shrb
jge
mov
loope
insb
dec
in
pop
in
rol
stos
sahf
ret
pop
push
aam
call
fisubrs
outsl
incl
cmp
mov
and
stos
and
scas
xchg
fnsave
xor
ret
in
mov
push
jb
adc
mov
xor
les
lea
cwtl
pop
mov
or
dec
mov
stc
sub
sahf
push
lret
add
rep
jmp
outsb
insb
adc
lods
jecxz
fsubs
add
or
test
sbb
je
rcrb
push
jg
pushf
fidivs
dec
push
mov
cli
ret
shll
xor
pusha
mov
shrl
jno
add
fs
cwtl
lods
gs
ja
jno
sbb
into
ds
sbb
jmp
adc
faddl
out
into
jbe
push
push
cmp
jbe
sub
out
int3
les
fistpl
mov
sub
mov
xor
and
pop
repnz
outsb
cmp
roll
adc
not
jno
xor
addr16
popa
stos
stos
mov
dec
sub
in
arpl
shlb
mov
pop
inc
addr16
stc
lods
mov
repz
inc
mov
dec
bound
scas
rorl
ds
cwtl
fistpll
je
pop
add
cmp
push
imul
adc
xor
push
call
xor
addr16
out
mov
dec
in
arpl
mov
jb
pop
test
mov
mov
mov
int
inc
mov
mov
mov
scas
aas
movsl
cmc
xchg
jo
int
icebp
push
addb
lahf
xchg
push
sarl
ret
push
sub
loope
pop
mov
dec
fildl
orb
sahf
test
add
jo
fs
outsl
loopne
jbe
cmpsl
fnstenv
movsw
xchg
cmp
cs
push
movsb
pop
hlt
in
sub
roll
mov
fs
mov
and
out
and
dec
js
jbe
loop
sti
popf
mov
cmpsb
jnp
cmp
cmp
das
loop
mov
inc
neg
ljmp
insl
push
mov
jbe
aad
pushf
in
loop
scas
jecxz
mov
jecxz
and
jns
shll
pop
int3
adcl
mov
rol
xchg
jmp
push
push
rolb
inc
push
cmc
dec
adc
mov
dec
ljmp
test
movsl
pop
mov
xchg
xchg
mov
outsb
shlb
mov
cld
fsubrl
inc
xor
adc
xchg
sbb
sub
cmp
adc
clc
fstpt
or
cli
xchg
sarb
sub
inc
je
or
jns
jbe
scas
in
shr
or
xor
dec
adc
test
jle
and
insl
or
gs
std
push
cmpsb
daa
sbb
std
mov
mov
fcomi
xchg
pop
mov
cmpsl
pop
outsl
pop
cmp
add
stos
mov
sub
aas
jbe
stos
xchg
or
sbb
das
cld
mov
fs
xchg
inc
mov
or
fs
add
sub
jo
pushf
div
mov
cmp
out
test
xor
sbb
mov
mov
test
sbb
hlt
cmp
insb
daa
fdivl
inc
repnz
and
inc
xchg
ret
or
jae
cld
pop
call
ds
fisubrl
mulb
mov
or
comiss
add
out
xchg
pop
xchg
int
les
fucomi
addl
fwait
iret
mov
mov
in
jg
cmp
push
fwait
xchg
je
imul
sub
sti
leave
jns
leave
lds
pop
dec
pop
and
les
ds
xorb
jb
cld
pop
adc
mov
and
repz
sarb
cwtl
divl
andb
movsb
mov
inc
aam
adc
lcall
pop
pop
ret
push
loop
gs
popf
jmp
lret
mov
add
mov
div
divb
adc
mov
dec
test
pop
inc
cmp
in
sub
dec
add
push
jno
adc
aam
or
sub
adc
sbb
and
xlat
adc
aad
lret
mov
insl
outsl
xchg
inc
sbb
das
cmp
idivl
dec
adc
lds
xor
lock
xchg
cwtl
mov
lret
lds
shll
jb
cmpsb
mov
cltd
xchg
xor
mov
inc
outsb
sbb
mov
mov
ret
mov
jns
inc
xor
dec
test
in
push
lds
ss
sub
es
scas
mov
fisubrs
movl
mov
pushf
push
pop
push
sub
gs
push
inc
cwtl
loopne
iret
cmp
add
je
cltd
sub
imulb
stos
dec
movsb
out
out
sub
bnd
cli
adc
xchg
mov
inc
jp
inc
inc
sbb
add
or
mov
push
jg
add
pop
pop
jg
xchg
aad
adc
mov
jno
rolb
mov
push
iret
bound
pop
add
out
rorl
add
daa
jae
addr16
adc
ljmp
cmp
xchg
mov
or
mov
rclb
outsb
sbb
dec
xor
sbbl
push
clc
stc
lcall
dec
mov
mov
add
iret
test
jno
gs
pop
stc
and
pop
push
mov
rcrb
repnz
push
or
fstl
xlat
idiv
mov
ljmp
div
icebp
je
adc
ror
push
mov
icebp
lock
push
lret
dec
add
sbb
cli
mov
out
ret
movsl
mov
inc
push
xchg
fmuls
push
ds
and
cmpsb
clc
cmp
dec
rcll
jnp
mov
mov
leave
stos
outsb
iret
add
movsb
mov
mov
mov
push
xor
inc
lret
mov
or
mov
loopne
imul
jmp
ss
lahf
cmpsb
les
testb
add
or
arpl
mov
sbb
dec
lahf
dec
in
repz
and
and
adc
and
push
xchg
addb
xchg
xchg
test
push
sub
shrl
mov
repz
cmpsl
and
outsb
leave
mov
sub
or
cmpsl
pop
testb
or
popf
mov
repz
sti
push
sub
dec
dec
push
inc
inc
lds
push
xor
stos
popa
rcll
ljmp
push
fsubs
imul
lret
jmp
mov
add
xchg
hlt
in
xchg
xlat
dec
aas
inc
cwtl
mov
arpl
jo
test
or
scas
int3
mov
inc
jmp
sub
adc
dec
sbb
jne
std
xor
mov
cmp
movsl
cmp
push
sarb
leave
xchg
ret
dec
arpl
sbb
out
adc
dec
dec
jns
leave
cwtl
jp
mov
leave
arpl
lods
inc
mov
xor
dec
inc
js
test
cmp
gs
push
orb
fadds
faddp
lret
or
mov
in
inc
push
mov
ja
xor
push
popf
ja
sbb
out
cmpsl
mov
pop
and
push
ljmp
and
pop
dec
pop
dec
es
lods
mov
addl
out
mov
cmp
fsubl
ret
push
test
ja
xchg
lods
xor
xchg
xor
out
movsb
cmc
mov
mov
push
enter
or
push
or
rclb
jae
std
push
std
les
inc
movsl
mov
pop
cmp
fstpl
outsb
cmpsb
dec
dec
mov
scas
gs
mov
fcomip
in
xor
mov
xlat
lcall
push
cmp
imul
mov
pop
dec
js
mov
mov
sub
inc
and
imul
adc
xchg
xchg
imul
dec
fs
cmp
jge
or
push
roll
popf
ficoml
dec
push
repz
ja
xor
mov
fdivrl
sub
sub
mov
adc
cmpb
in
push
js
es
jl
popa
pop
test
sbb
outsl
cmp
or
sbb
lcall
cmp
enter
in
cmp
imul
sub
cmc
jle
xchg
jl
adc
mov
mov
std
adc
inc
inc
xchg
xchg
or
jg
daa
hlt
jb
insb
sbb
cwtl
out
mov
sub
cld
jo
sub
les
scas
lock
sub
dec
and
jle
je
cli
test
xchg
fs
and
mov
mov
in
fistl
and
imul
dec
fmull
imul
inc
fs
and
fdivrp
mov
loop
rclb
xlat
jle
jns
fcomi
pop
mov
dec
fisttps
jb
mov
or
lods
xchg
test
aam
dec
push
jno
pop
fcmovnbe
arpl
jge
mov
mov
xlat
xchg
push
or
adc
loope
or
xor
mov
movsl
shlb
push
jae
inc
mov
rorb
aad
test
cmpsl
xor
hlt
or
and
call
mov
gs
pop
movsl
ss
jmp
jb
pop
xor
filds
push
cld
or
adc
push
lods
lret
jp
ss
mov
mov
jmp
ret
xchg
mov
lds
sbb
mov
std
mov
mov
push
inc
or
cld
out
sahf
outsl
xrelease
push
add
dec
cltd
xlat
dec
jp
mov
pushf
cmpsb
jnp
sbb
sub
hlt
adc
aam
dec
inc
mov
push
cld
add
leave
cmp
jecxz
jno
push
adc
and
loope
jg
or
lcall
fistl
inc
adcl
fistpll
sub
xlat
xor
js
sbb
mov
aas
out
pop
notb
push
decb
or
fildll
xchg
sub
mov
lods
les
mov
aas
inc
cmp
adc
xor
mov
inc
cmpl
mov
pusha
dec
iret
cltd
xor
mov
iret
outsl
mov
mov
push
mov
or
push
sar
lret
fiadds
sbb
add
aaa
push
add
shlb
cltd
sub
aad
xchg
popf
dec
pop
pop
sbb
rep
ds
cmp
daa
out
fists
lods
jmp
js
dec
adc
not
jb
mov
adc
in
add
in
iret
mov
sbb
mov
cmpl
iret
inc
loope
adc
dec
out
sbb
pop
test
dec
mov
or
mov
adc
jp
push
aaa
sarb
and
cmpsl
ret
hlt
mov
loop
sub
push
pmaxsw
dec
arpl
les
out
jl
add
arpl
and
arpl
repz
push
in
inc
cmpsl
out
test
cmc
test
aad
scas
push
push
repnz
sbb
adc
xchg
mov
and
mov
cmp
in
lret
inc
xchg
jmp
inc
mov
hlt
xor
sub
ret
xchg
mov
jbe
dec
outsb
int
or
jle
and
fbstp
lret
iret
inc
cli
jmp
sbb
clc
pop
loopne
dec
aas
cmp
dec
adc
or
or
gs
das
or
jle
jo
push
in
pushf
or
stos
dec
xor
leave
and
mov
mov
fld
scas
dec
fwait
stos
xor
add
je
cld
test
or
pcmpeqd
inc
mov
lret
rorl
nop
pusha
gs
cmpsb
xchg
adc
lcall
out
jnp
xor
sub
push
or
loop
or
pop
add
pop
mov
xchg
xor
pop
cwtl
dec
and
xor
rcll
add
movsl
dec
scas
pop
xchg
adc
add
sub
or
add
js
loop
mov
cmc
sbb
push
mov
mov
mov
iret
and
sbb
enter
fnstenv
into
push
sub
cmp
call
push
add
mov
lahf
cld
inc
mov
push
mov
scas
repz
sbb
fimuls
jne
stc
mov
push
clc
into
sbb
mov
sbb
adc
jmp
add
test
enter
push
push
xchg
push
fwait
hlt
mov
rcrl
sub
mov
sbb
in
inc
push
mov
pop
sahf
mulb
pop
subl
out
mov
cmpsl
outsl
dec
pop
rolb
insb
add
xchg
enter
sub
sub
cmc
outsb
aas
mov
movsb
aas
int
cwtl
test
sub
sbb
dec
xor
xchg
cmp
xchg
jno
pushf
lea
test
sub
mov
bound
lds
cwtl
mov
sub
loop
hlt
rcr
gs
add
cmc
push
lds
xlat
inc
cs
loopne
into
inc
cmpsl
andb
and
out
jbe
adc
fnclex
fs
and
les
mov
inc
bound
cmpsb
lds
nop
mov
pop
pop
dec
jns
xor
jmp
loopne
xchg
pop
dec
sti
push
jp
mov
or
push
xchg
sub
mov
jb
out
adc
mov
sub
cmc
xor
je,pn
fucomi
movsl
push
shrl
lock
xor
pop
add
sub
jo
mov
das
pop
add
cmp
and
orb
push
adc
scas
subb
in
jmp
and
mov
mov
dec
or
and
mov
mov
dec
ljmp
fbld
in
inc
mov
aad
cli
shll
in
inc
fcmovb
imul
mov
mov
stos
repnz
lcall
cltd
sti
dec
test
or
sub
fs
daa
mov
jae
imul
sub
imul
push
stc
adc
mov
inc
iret
cmp
jo
scas
lea
mov
outsl
lahf
pop
dec
dec
xchg
repz
dec
leave
xchg
cmpsl
jp
pop
push
cmp
lcall
cmp
jne
jbe
mov
orl
cs
popa
lret
into
out
mov
dec
movsl
in
push
out
sbb
mov
pop
inc
loope
into
insw
and
jg
or
or
add
test
push
add
sub
xchg
mov
fsubr
mov
mov
outsl
fdivl
movsb
adc
jbe
xor
icebp
mov
mov
jl
sub
add
mov
ja
test
or
and
rdmsr
and
mov
sbb
and
out
int
rcrb
sub
fiaddl
cwtl
add
pop
pop
xchg
push
jg
ret
dec
sub
dec
mov
fsubs
popa
rcl
push
fs
into
and
mov
jae
xchg
pop
pop
fisttpl
aas
or
jp
inc
jmp
jge
ss
pop
jne
lcall
adc
call
sub
push
push
cmp
xor
and
outsl
loop
addl
das
sbb
or
jbe
push
push
xchg
data16
test
sbb
insl
sbb
add
add
imul
cmp
mov
daa
cmp
call
xor
dec
test
push
xchg
or
ss
cs
mov
cmp
inc
and
test
ret
cmp
jns
and
add
movsb
adc
leave
and
dec
mov
adc
dec
cmc
movsl
sub
mov
outsb
xor
ljmp
jg
sahf
push
faddl
int3
imul
sti
jne
sub
and
shll
jne
das
and
jae
ficoml
and
push
mov
jl
xchg
icebp
sbb
lret
push
fildl
cmpsl
xlat
add
mov
jae
nop
outsl
push
cmp
jo
inc
sub
mov
cmp
cltd
add
and
jl
iret
pandn
mov
lods
pop
mov
dec
or
imul
clc
scas
mov
dec
or
insb
mov
jo
mov
shl
cmp
fwait
adc
into
insl
pop
repnz
cmp
filds
pop
mov
sub
pop
loope
jl
stos
or
mov
push
dec
or
ja
lcall
cltd
in
jg
popf
adc
js
adc
into
lahf
lock
inc
jne
xor
fnsave
jne
js
js
sbb
ds
aam
pop
mov
add
insb
xchg
jns
aad
jns
cmp
adc
dec
push
add
xor
decl
cld
jbe
lcall
pusha
cmp
xor
arpl
pop
inc
push
mov
and
jge
jp
jae
add
mov
fs
icebp
dec
ljmp
adc
mov
cs
int3
cwtl
hlt
xor
outsl
pushf
data16
xchg
loope
mov
ss
mov
scas
xchg
loop
mov
clc
jmp
js
mov
aam
sub
sti
jb
outsb
jge
pop
es
sub
popa
gs
cmpsl
or
sbb
pop
cmp
xchg
xor
pop
cmp
cmpsl
push
aam
adc
push
aam
and
inc
cwtl
test
xchg
sub
xor
push
xor
cmp
push
mov
or
and
outsb
mov
sub
push
xchg
cmp
xor
aad
mov
shll
sbb
and
cld
sbb
xchg
sbb
push
jnp
xlat
jae
and
inc
xchg
adc
xor
add
mov
test
cmp
pop
in
out
jp
test
jl
dec
ja
or
dec
lock
xor
mov
dec
inc
add
out
adc
loope
add
xor
stc
cmp
pop
enter
jecxz
adc
xchg
sub
in
and
jmp
notb
ret
or
lock
stos
xor
xchg
xchg
push
testb
mov
bnd
cmp
rcll
xchg
push
lcall
sbb
stc
fsts
iret
pop
mov
mov
sbb
or
shrl
xchg
idivl
xchg
es
inc
xor
sub
test
adc
les
push
mov
stos
pop
xor
nop
in
jno
roll
sbb
add
lea
daa
pop
mov
pop
and
fistps
cmp
add
xchg
sbb
mov
cli
jo
and
sbb
sbb
xor
cmp
pop
cmpsb
rorl
mov
cmp
inc
in
test
pop
ja
adc
mov
ret
lcall
push
cmc
pusha
es
arpl
jg
out
addl
adc
aad
jge
cmpsl
mov
jae
decb
cmp
nop
js
inc
mov
repz
ret
cli
bound
iret
or
aas
mov
mov
gs
mov
test
push
mov
in
xchg
and
jo
mov
cmp
inc
jo
add
ss
shrl
retw
jp
adc
inc
jne
jge
mov
int
das
into
mov
fnstenv
add
iret
or
outsl
xor
sbb
movb
pop
addb
jns
popa
rcl
push
add
mov
mov
and
addl
pop
jmp
loope
data16
or
and
add
scas
xor
hlt
fdivrl
incl
pop
ja
movsl
fwait
icebp
cmp
sarb
mov
sbb
ret
out
xchg
test
js
outsb
shl
mov
inc
mov
jl
aas
cmc
pop
aad
loopne
or
imul
push
mov
ds
mov
mov
sbb
scas
add
stos
jecxz
push
notb
mov
xor
mov
cwtl
cmp
test
leave
stos
jae
lods
enter
cmp
sbb
cmp
and
aaa
cmpsb
es
push
int3
aaa
push
les
and
pop
jmp
enter
or
rol
pop
aaa
jmp
rorb
js
inc
inc
xor
sub
rcr
enter
outsl
pop
sbbl
into
mov
xlat
inc
xchg
ret
scas
in
or
js
sbb
push
pop
lret
pop
inc
xchg
xchg
xchg
ljmp
sub
adcl
dec
notb
sbb
repz
inc
push
test
sbb
adc
daa
mov
nop
inc
add
out
in
adc
pop
faddl
pop
sbb
das
pop
mov
cmp
fadd
fucomi
inc
leave
dec
jno
movsb
push
add
and
imul
adc
aad
imul
in
inc
lock
sbb
cmovb
in
push
or
mov
fbld
add
insl
test
xor
pop
int
addr16
mov
iret
push
fisubrs
loop
dec
icebp
xchg
out
loop
cmpsb
lret
cmc
mov
lret
cmp
push
fldt
rolb
lcall
test
pop
lods
out
cmp
popf
addr16
sbb
push
iret
mov
dec
lret
cmp
imul
sbbl
les
repnz
push
xor
pop
push
in
ds
adc
aam
xor
add
sub
add
ds
xorb
cmp
lea
cwtl
imul
pop
aas
push
lcall
or
xor
divl
dec
sbb
scas
outsb
mov
cmpl
adc
jl
sarb
gs
popf
push
dec
test
jmp
push
lods
ds
inc
push
and
inc
in
test
call
test
rol
mov
roll
insl
sahf
int3
sub
lret
push
fwait
adc
movsb
lret
xchg
je
mulb
push
cmpsb
cmp
mov
pusha
outsb
cli
jp
inc
sub
fwait
mov
pop
sti
sub
lret
or
rorl
jb
push
sti
divl
cmp
mov
mov
out
in
jmp
movsl
test
add
mov
sub
fldenv
inc
cmc
cld
sbb
pop
ret
cmp
mov
lret
mov
pop
dec
xchg
mov
iret
jl
enter
and
jg
hlt
and
xchg
or
jle
or
dec
fidivrs
xor
movsl
out
mov
call
insl
sub
nop
leave
mov
sbb
jl
cli
mov
jle
cli
jl
dec
xor
testb
xor
push
lret
mov
and
pop
mov
xchg
out
jo
and
mov
inc
popf
xchg
mov
cmpsl
out
push
insl
dec
sub
pop
mov
add
ja
adc
fidivs
mov
in
sbb
cmc
lods
push
mov
in
leave
es
popf
inc
stos
push
push
fisubl
pop
fsubs
mov
jne
out
inc
insl
lret
xchg
and
inc
inc
scas
pop
dec
and
jmp
lret
test
jae
int3
aas
dec
dec
dec
mov
std
dec
jecxz
pop
and
adc
mov
inc
iret
les
fsubl
incb
dec
and
xor
fcoms
jo
adc
push
cmp
in
cmpsl
lods
addb
add
xor
nopl
imul
aad
mov
cmp
push
cmp
mov
arpl
jmp
addl
or
fidivs
push
and
inc
sarl
mov
xor
mov
sbb
popa
dec
lret
mov
mov
jb
lahf
mov
and
xchg
push
push
sti
test
in
push
sub
mov
int3
lret
add
jo
pop
cmp
lods
cltd
arpl
dec
push
push
push
stos
pop
lods
mov
dec
jb
pop
clc
int3
mov
sub
dec
mov
mov
cmpsl
mov
sahf
xchg
inc
jae
popa
outsl
jne
adc
xchg
out
ja
mov
in
es
test
xor
je
lods
mov
leave
das
hlt
stc
push
cmp
aad
insb
inc
pop
sbb
mov
xchg
xchg
ds
pop
shll
push
into
jbe
inc
add
pushf
stos
inc
pushf
insl
jecxz
mov
xor
outsb
cmpsb
adc
jbe
cmp
outsb
movsb
push
into
call
xchg
lods
jno
call
push
sub
and
inc
dec
adc
inc
or
test
sbb
cmovns
enter
lock
push
repnz
test
nop
or
push
sub
or
imul
dec
jmp
or
insl
shrl
xchg
cli
ja
out
add
jno
sahf
adc
mov
in
sarb
call
gs
mov
clc
mov
and
add
xor
popa
adc
dec
mov
sbb
jns
orb
or
add
adc
xor
inc
in
xor
jb
adc
int
pop
test
mov
sub
or
sub
mov
push
int
xchg
jg
fwait
mov
pop
or
mov
arpl
std
sub
cs
int3
mov
pop
sahf
fs
cmc
aas
repz
popa
lahf
sti
jge
inc
adc
xor
int
pop
ret
or
jl
testl
addr16
in
clc
sub
adc
mov
jbe
scas
scas
jne
cmp
aam
mov
push
sti
jge
sbb
imul
xchg
sub
mov
jo
xchg
pop
sub
pop
into
arpl
fidivrs
cmpl
push
lahf
cmp
xor
or
or
jmp
shl
popa
pushf
jb
sti
repnz
aam
es
stos
rcll
es
addb
aas
mov
and
pop
sbb
cltd
pop
xchg
sub
ds
or
push
clc
sub
mov
mov
push
push
movsl
out
popa
stos
iret
xor
sahf
cmpsl
icebp
test
sbb
loope
scas
or
cmp
add
xorl
pusha
aaa
std
fsubs
add
stos
and
dec
sub
ljmp
int3
lret
dec
fs
sahf
inc
add
cld
fstpl
leave
pop
pop
std
or
test
shll
push
push
ret
xlat
mov
negb
stos
test
xor
lock
pop
jae
rcrb
inc
jmp
xchg
fdivrl
sub
mov
ds
scas
je
xor
mov
outsb
and
popa
or
push
daa
cs
shrb
sub
in
sub
stc
popa
loopne
xor
pop
inc
shr
jp
pop
inc
sbb
or
aaa
and
sbb
out
jbe
jno
and
loop
xor
push
xchg
jmp
sbb
pop
shr
cli
sub
adc
ret
fstpl
and
enter
mov
pop
fwait
mov
or
xor
push
scas
fwait
mov
mov
roll
xchg
inc
jecxz
push
jmp
pop
mov
and
xor
and
pop
in
call
out
int
test
xor
push
pop
xor
jge
push
cld
jo
imul
push
fdivrp
stos
gs
sbb
subl
cmp
cmp
in
daa
adc
xor
sbb
xchg
stos
cwtl
sbb
shll
stc
shll
pushf
cmpb
aad
xor
push
pop
pop
and
int
mov
inc
gs
adc
inc
xchg
jnp
stos
add
out
jle
mov
arpl
adc
adc
push
adc
add
insb
data16
dec
lret
cmc
or
aad
adc
pop
sbb
cld
cmpsl
mov
inc
les
jne
pop
xor
fwait
rcrb
mov
push
call
mov
clc
mov
add
call
xor
mov
or
xorb
stc
xchg
lret
mov
xchg
lods
mov
jle
inc
and
stc
add
fiadds
gs
std
cmp
decb
mov
ret
jae
dec
sub
arpl
stc
mov
pop
xor
mov
pop
sbb
ret
lea
aas
gs
out
pop
mov
sbb
jecxz
js
fcoms
mov
aas
mov
xchg
xchg
lcall
jecxz
je
xchg
mov
sbb
pop
sub
imul
jne
sahf
stos
lock
jge
inc
mov
cltd
lock
push
mov
leave
and
add
mov
insb
mov
xchg
xchg
rol
or
mov
mov
aaa
xchg
add
popf
mov
leave
or
mov
sub
inc
xor
push
adc
add
pop
faddp
jne
mov
mov
js
mov
jnp
imul
loopne
dec
or
enter
push
sbb
imul
xchg
lcall
cmp
cltd
or
loop
fidivl
pop
xor
adc
fsubrs
je
adc
loop
add
sub
arpl
or
fsub
mov
mov
fiadds
cwtl
es
outsl
or
adc
sub
test
cld
daa
inc
roll
out
cld
xor
push
adc
sbb
sub
fiaddl
out
rcl
inc
imul
popf
jl
out
add
push
movsl
sbb
and
add
adc
inc
clc
mov
mov
push
fisttpl
cmp
and
les
inc
push
fucomi
lods
cmp
scas
jge
pop
in
push
in
enter
mov
or
push
popa
cmp
inc
cltd
lahf
out
jge
das
orl
or
pop
sbb
mov
push
pop
shrl
sub
push
jno
sahf
mov
test
pop
jl
xor
sub
das
adc
adc
fidivs
jg
ljmp
and
mov
jmp
notl
ret
or
in
jge
xlat
cmp
xchg
pushf
sar
leave
test
les
adc
xchg
mov
add
xchg
in
cli
and
int
stc
out
lahf
insb
xor
dec
pop
dec
inc
popa
push
xor
xchg
fwait
xor
or
hlt
call
pusha
xor
push
imul
std
pushf
sbb
xchg
in
dec
fsubrl
jnp
xchg
je
mov
xor
stc
daa
xor
dec
add
jne
mov
mov
dec
cmc
shl
push
or
jnp
mov
inc
push
pop
mov
lret
push
clc
pop
stos
xor
data16
add
inc
pop
mov
outsb
pop
aas
imul
movsb
push
aas
dec
add
movsb
push
pop
fbstp
mov
cmc
fidivrs
idivb
jb
cmpb
mov
inc
inc
and
je
fimuls
cmc
push
scas
inc
shr
movsl
in
pop
repnz
sbb
jge
xlat
xor
cmp
mov
imul
incb
mov
dec
cld
out
add
mov
xorb
pop
dec
mov
mov
dec
ja
inc
loope
mov
and
lods
jns
cmp
add
xor
pop
push
pusha
mov
or
mov
daa
push
stos
fildll
int3
ret
jle
adc
fldcw
sbb
ret
dec
cld
mov
clc
gs
enter
rclb
in
and
ss
push
pop
push
jns
xlat
pop
xchg
mov
pop
aam
jecxz
lret
into
fidivs
push
sub
nop
pushf
mov
adcl
out
add
and
add
dec
push
lods
mov
sub
and
push
or
or
loopne
test
or
jecxz
push
and
fistpl
push
adc
mov
movsb
xchg
mov
jg
mov
arpl
enter
imul
mov
or
notb
jge
cltd
aas
add
scas
shlb
sbbb
sbb
mov
add
or
lock
mov
jg
adc
jne
adc
or
or
lcall
and
shlb
sarb
bound
dec
orb
push
add
enter
orl
ss
add
inc
cmp
xchg
dec
and
mov
in
jno
sbb
push
mov
xchg
or
lods
mov
sbb
mov
or
or
ret
loop
xor
subb
lea
addr16
pop
sub
out
add
sbb
leave
lods
xchg
in
sbbb
jns
adc
sbb
mov
xor
push
mov
xchg
jno
push
dec
push
ja
les
out
sub
mov
insb
xor
test
out
sub
jb
movsl
adc
addr16
aad
int3
push
popf
xchg
xor
dec
cli
stos
out
aas
sub
cltd
mov
pop
jmp
dec
cmp
sahf
fistpll
insl
testb
movsl
imul
push
js
jae
fdivrl
lds
xchg
test
fs
push
sub
pop
dec
lret
and
inc
stos
fldcw
jecxz
dec
leave
in
sbb
pushf
test
mov
xlat
sbb
mov
into
add
jp
fidivs
mov
push
fdiv
popa
rcr
mov
push
aas
subb
push
shll
fimull
sbb
cmc
jo
inc
jl
or
and
sti
in
icebp
fcomp
rolb
shll
cltd
clc
jb
mov
cmc
cmpsb
cmp
pop
jg
rorb
roll
adc
jne
es
push
pop
out
adc
push
in
push
mov
int3
imul
sub
daa
mov
out
sbb
sbb
jo
inc
inc
sub
sarl
push
mov
fmull
ljmp
int
lret
add
adc
mov
cmp
adc
push
cmc
mov
imul
cmp
sub
jns
idivb
or
pop
pop
sub
sub
repz
pop
ret
outsl
cmp
sub
jno
mov
inc
ffreep
addr16
and
pop
xor
arpl
adc
dec
pusha
aaa
mov
js
sti
cmpsb
aaa
je
mov
int3
mov
xor
shlb
scas
ret
mov
lds
ret
mov
mov
xchg
pop
xorb
leave
inc
insb
insl
ret
scas
popa
mov
push
stc
and
inc
shr
lret
sub
dec
into
notl
pop
ror
jmp
inc
out
in
rcr
icebp
cwtl
add
add
jo
loopne
sti
jge
pop
jbe
xchg
cld
lods
jno
push
cmpsb
add
xor
imul
sbb
or
lret
aam
jno
das
enter
inc
mov
pop
push
out
mov
hlt
es
sahf
data16
mov
out
fsts
mov
cmp
nop
cwtl
push
loop
jle
jne
dec
pop
push
fadds
stos
xchg
add
loope
mov
mov
add
fcmovb
shlb
scas
in
inc
cmp
sbb
adc
or
lret
jbe
pop
bound
xor
jecxz
pop
lods
shrb
ror
push
sbb
pop
mov
sbb
loop
je
roll
outsl
xchg
das
xor
jle
fs
pop
mov
xchg
lds
and
les
mov
lea
add
cltd
cld
in
sub
sub
jle
imul
push
push
and
test
sbb
pop
aad
stos
data16
sub
add
jl
mov
xchg
sub
out
inc
divb
sub
clc
in
int
push
in
or
pop
inc
dec
pushf
mov
xchg
adc
aas
inc
mov
or
adc
not
insl
into
cmovl
push
cwtl
mov
sub
cli
test
unpckhps
xor
dec
pushf
dec
shll
fisttpll
outsb
or
mov
mov
jno
xchg
jo,pn
fucomp
jae
test
movsb
popa
mov
xor
lds
jns
shlb
dec
sti
xor
xlat
mov
fmull
jecxz
jmp
xlat
andb
iret
xor
pusha
repnz
sbb
jmp
aad
test
add
scas
push
stos
dec
dec
xchg
dec
test
mov
mov
cmc
jb
pushf
shrd
cld
xor
push
adc
movsb
hlt
pusha
xor
xor
dec
sbb
repz
scas
mov
push
imul
jae
pop
sub
mov
int3
xlat
out
add
mov
scas
jnp
push
ret
lods
stc
sbb
xchg
pop
or
out
mov
ficomps
out
push
and
iret
loopne
pop
ficoms
aaa
mov
repnz
and
lret
out
sub
jae
in
mov
add
push
mov
dec
iret
cmp
adcl
inc
push
popf
test
or
inc
push
jp
fldcw
enter
jnp
clc
lock
jb
sub
mov
shll
int
or
fisubl
and
pop
call
jne
cmc
fists
jle
sub
loope
xor
mov
ret
pop
fmull
mov
test
lds
pop
clc
mov
xchg
pushf
xor
push
xor
sub
push
fiaddl
ss
push
push
pop
or
fldl2t
push
mov
mov
push
adc
inc
add
push
dec
nop
add
pop
mov
into
call
out
inc
sbb
pop
push
fbstp
pop
cmpsl
mov
sub
popf
push
sub
inc
stos
cmpsb
int
mov
sub
mov
mov
lret
mov
in
sbb
dec
pop
loopne
xchg
aas
stos
or
pop
xchg
cli
mov
leave
adc
jl
movsl
cmp
sbb
and
out
xchg
insl
xor
insl
pop
test
lret
lods
and
loope
mov
jmp
push
xor
lahf
sbb
mov
dec
inc
xchg
lock
call
xor
into
data16
jle
cmp
rorb
loopne
stos
fbld
jge
into
mov
bound
mov
mov
int3
decb
flds
jmp
sbb
cmc
push
cmp
popa
add
clc
fstp
nop
orl
push
leave
in
push
jp
mov
orl
lods
mov
lea
mov
cmp
je
jnp
mov
pop
sbb
xchg
dec
mov
stos
push
ret
sub
fsqrt
push
scas
mov
push
mov
mov
cmc
push
es
in
jno
add
dec
insl
jmp
push
push
scas
sbb
stos
jl
push
jno
movsl
cwtl
lods
out
xor
int3
lcall
mov
adc
mov
sahf
jle
pop
jo
pop
mov
push
fldenv
sub
out
call
loop
sbb
sbb
sub
sub
jge
inc
loope
lret
pop
jb
sahf
lods
sub
icebp
pop
fstps
or
ds
push
sbb
mov
pextrw
jbe
sub
push
dec
xor
mov
dec
push
pop
sbb
loop
mov
jecxz
adc
out
mov
stc
js
mov
mov
adc
sahf
cmp
pushf
xor
adc
inc
cli
mov
ret
adc
mov
arpl
pushl
dec
cs
ret
shlb
test
enter
pushw
dec
xor
jmp
xchg
into
mov
mov
test
in
cmp
mov
call
add
and
outsb
jno
int3
movsl
add
mov
jp
xchg
stc
divb
test
lret
mov
pop
push
int3
sbb
lret
shrb
xor
mov
and
sub
stc
push
out
jle
rcr
fstpt
aam
cmpsl
push
mov
inc
aam
aas
and
inc
jle
enter
insl
ss
imul
push
roll
rorl
fbld
sbb
and
dec
add
pop
out
mov
mov
pop
push
inc
fsubl
add
loopne
fwait
cli
fmuls
dec
push
mov
fwait
or
es
dec
mov
lods
hlt
add
mov
pop
sahf
push
push
cmpsb
push
xlat
push
xor
jge
xchg
shrb
jae
stos
notb
cmpsb
frstor
popf
shl
subb
fadds
aam
add
je
insb
xchg
fidivs
mov
cltd
adc
jbe
sbbl
je
jg
loopne
inc
js
mov
test
jle
and
ljmp
jle
cwtl
cld
inc
add
sub
add
orps
dec
insb
mov
clc
or
cltd
push
jbe
cmp
shl
sbb
cmpsb
and
in
lret
movsl
cmp
into
pushf
xor
sbb
dec
scas
jmp
dec
or
mov
xchg
pushf
push
jp
test
push
mov
xchg
les
js
outsl
cmp
push
jo
dec
jge
adc
cmp
mov
adc
bound
add
pop
aaa
mov
dec
jg
jecxz
sub
inc
jbe
push
pop
subb
repnz
pop
mov
idivb
jno
adc
sub
fdivrl
mov
stos
int3
fcmovb
inc
dec
xor
cli
stc
mov
jb
test
inc
mov
jle
add
fnstsw
sahf
pop
mov
test
lea
nop
lret
in
or
ljmp
das
ret
and
call
push
sub
xor
mov
adc
mov
popf
inc
loopne
test
loop
imul
aas
adc
stc
cs
cmpsl
mov
adc
or
mov
jo
xchg
testb
es
hlt
mov
cld
add
push
rorb
jns
cld
repz
add
ret
sub
inc
hlt
cmp
sub
scas
mov
jns
lds
cmp
das
test
xchg
xor
cmp
aad
or
dec
mov
das
scas
or
cmpsb
cli
in
mov
or
mov
dec
xor
lods
fcmovb
insb
and
mov
call
popa
pop
out
sbb
push
sbb
cld
pusha
sub
sbb
int
or
xchg
outsb
stc
xorb
inc
addl
addr16
lea
cmp
pop
out
in
push
xor
xchg
scas
lock
cmp
mov
out
jo
cmc
lcall
xor
out
out
dec
inc
ja
aam
lods
xchg
aaa
aaa
iret
mov
xchg
std
ja
mov
mov
fmull
fwait
stc
add
mov
add
add
in
push
mov
js
jg
cmp
aad
and
fst
movsl
push
inc
cmc
add
xchg
xchg
adc
pushf
adc
xor
jl
daa
mov
nop
roll
adc
pop
and
imul
dec
dec
sti
jp
test
pop
sub
lcall
les
cmp
and
repz
andl
mov
mov
add
ss
es
jl
test
cli
ljmp
mull
mov
lods
mov
mov
cmc
daa
scas
add
adc
or
dec
loope
mov
cmp
adc
pusha
or
xchg
push
inc
push
xor
adc
dec
scas
cmp
and
lods
inc
cs
and
in
dec
mov
dec
cwtl
lret
mov
popa
out
sbb
insb
dec
adc
cli
movsl
insl
out
jno
icebp
or
repnz
cmp
push
and
jnp
sbb
jnp
mov
pop
mov
mov
rolb
mov
fbstp
cmp
inc
loop
ret
xlat
cmp
lret
mov
cmp
mov
and
mov
add
fldt
mov
xchg
inc
out
add
mov
pusha
jbe
inc
loopne
dec
sarb
adcl
jl
pop
ficoms
sub
xchg
jns
and
out
imul
scas
jp
out
shll
rorl
repz
dec
out
mov
mov
inc
scas
xlat
dec
stc
cmpsb
mov
jmp
fisubs
dec
stos
insl
jo
aaa
jae
in
xchg
jo
int3
sbb
lret
pushf
xor
xchg
push
cmc
fcompl
sbbb
movsb
insl
jnp
lret
push
jb
push
jae
negl
pop
repz
or
mov
jp
jle
dec
popf
insb
dec
sub
fsubs
or
sti
pop
push
lret
shlb
adc
dec
mov
push
push
divb
int3
nop
mov
sub
lret
xchg
pop
dec
jno
mov
sub
js
xor
dec
movsb
lret
enter
mov
jnp
and
mov
xlat
test
fninit
adc
cld
in
repnz
inc
lods
jle
or
fsubrl
pusha
int3
stc
in
inc
fdivrs
jecxz
out
add
push
mov
aaa
sbb
add
jae
push
int3
sub
xchg
adc
pop
iret
jmp
and
xlat
lret
pushf
call
adc
fwait
dec
std
into
mov
imul
jbe
pop
rcr
mov
out
rclb
jg
test
lret
sti
jmp
push
sbb
idivb
clc
aad
mov
shlb
mov
fcoml
lret
sbb
loope
aaa
sbb
lret
pop
adc
jl
mov
pop
fildll
or
into
fidivl
inc
insl
shl
add
xor
call
xchg
popf
leave
jp
fsubrp
loope
and
ror
mov
div
mov
cltd
mov
sbb
inc
clc
fistps
cltd
sbb
je
imul
rolb
repnz
ret
pop
push
and
sbb
call
sub
xchg
hlt
leave
popf
jmp
stos
mov
xor
imul
test
sub
pop
stos
nop
push
fstpt
ret
push
repz
daa
pop
frstpm(287
clc
add
cmp
lock
pop
xchg
aam
mov
adc
push
mov
jg
mov
ret
adc
ja
dec
rcrb
mov
cmpsl
xor
out
mov
mov
push
pop
push
dec
insl
fimull
adc
das
jns
inc
mov
xor
add
jno
out
sbb
xor
adc
push
add
pop
cmp
test
rol
xor
and
ljmp
and
sub
dec
aaa
pop
mov
rcrb
sti
cs
push
cmp
mov
idivl
pmaddwd
mov
xor
std
fcompl
pop
xor
imul
push
mov
jg
lret
jmp
arpl
adc
out
inc
rorl
push
sahf
test
xchg
adc
popa
push
hlt
andl
jns
cmp
and
fucomip
sahf
shrb
pushf
mov
arpl
dec
cmp
push
push
sbb
dec
xor
sub
cmc
fs
lahf
xor
pxor
cmp
pop
add
int
push
into
das
test
pop
lret
mov
sub
test
sub
in
aam
mov
outsl
mov
test
mov
fstpl
inc
xchg
mov
mov
pop
push
scas
push
rorl
sub
fcompl
data16
dec
shl
push
or
dec
mov
hlt
mov
jo
test
ficomps
push
add
das
in
and
xchg
cmp
or
fiadds
mov
inc
or
stos
bound
aas
mov
mov
std
sbb
jne
sub
pusha
idiv
out
xor
inc
adc
push
sahf
mov
mov
or
out
popa
div
insw
adc
ljmp
inc
int3
xchg
xchg
mov
shll
cmp
jg
pusha
clc
pop
pop
ja
lahf
mov
dec
sahf
sub
mov
dec
sbb
xchg
cld
push
js
repnz
and
outsb
cli
cmp
sbb
sbb
mov
lea
test
bound
js
int3
fmuls
sub
test
imul
shl
inc
mov
into
inc
fnstenv
add
icebp
add
sub
and
xchg
mov
lds
pop
push
jp
in
cwtl
lret
push
shll
out
clc
call
push
or
add
lock
dec
push
out
scas
sbb
das
dec
pop
xor
push
nop
jecxz
stos
out
mov
add
cmc
mov
pop
sub
loopne
jne
aam
js
movb
sbb
xchg
cmp
cmpsb
bound
xchg
adc
sbb
sub
jns
pop
push
cmpps
dec
inc
repnz
mov
xchg
sub
ja
jae
sub
dec
push
out
push
jb
cmpb
fs
rcrl
and
repz
xchg
loopne
pop
int3
sub
rorl
and
insl
pop
push
fisubl
mov
xchg
lods
repz
jecxz
cmpsl
xor
pushf
int3
aas
inc
jo
imul
mov
aam
jne
push
hlt
inc
iret
fistps
outsb
dec
push
sti
push
out
mov
mov
cmp
lea
push
cmp
rorb
inc
or
adc
pop
gs
cli
stos
mov
loope
pop
jno
mov
push
xor
lret
mov
hlt
scas
xchg
pop
sti
push
mov
jo
rcll
call
inc
push
and
xor
ret
sub
xchg
in
adc
pop
ret
mov
or
mov
outsl
pop
les
fsubrs
mov
push
mov
cmp
mov
push
or
fiaddl
rcll
mov
xchg
cltd
lret
jle
test
xchg
push
push
xchg
es
movsb
bound
sbb
mov
out
pushf
rcrb
push
add
sbb
adc
jmp
add
xor
xor
movsb
mov
sub
mov
add
pop
mov
xchg
xchg
icebp
sub
pop
jbe
jno
test
cli
xor
lods
test
push
mov
xchg
jmp
cmp
in
test
xor
mov
dec
popa
mov
jne
lods
mov
push
and
mov
and
mov
pop
jle
lret
not
sub
subb
test
jno
pop
ja
roll
and
cmp
xor
mov
fadds
jae
test
shrb
sub
dec
rcrl
ljmp
push
ljmp
push
in
test
imul
pop
lods
into
add
cmpsb
xchg
pop
jno
js
sub
mov
inc
rorb
pop
push
inc
js
fadd
push
xchg
pop
fidivl
je
fldcw
push
iret
jno
push
lahf
xor
pop
test
negb
popf
add
movsb
notl
mov
mov
dec
adc
mov
lock
fcmove
cmp
and
inc
fsubs
jbe
xchg
xor
movl
jb
pop
ret
sbbl
inc
push
sbb
es
jbe
and
xor
push
hlt
hlt
jmp
cmp
or
stos
popa
xor
or
xchg
sbb
ljmp
test
ljmp
xchg
imul
cwtl
movsl
jecxz
mov
mov
out
jnp
lock
add
add
add
adc
xor
sub
mov
xchg
xchg
lods
push
hlt
xor
inc
divl
xchg
ja
mov
mov
push
or
jle
ss
lret
testb
iret
cmp
in
lahf
lea
lahf
in
jge
adc
int
hlt
dec
push
push
aam
ds
imul
xchg
push
cmp
sbb
add
sub
cmpb
cmp
popf
shll
inc
pop
shll
mov
stc
cmp
push
or
insl
jns
sbb
mov
loopne
inc
xor
xchg
inc
or
sarl
and
mov
scas
mov
ret
loop
add
mov
push
cmp
int3
push
sbb
test
rcll
jae
cmp
imul
scas
jp
pop
mov
and
cmpb
fadds
out
popf
sbb
dec
sahf
movq
mov
call
hlt
push
mov
pop
mov
mov
imul
repz
std
and
lock
neg
push
and
fwait
cs
xorb
cli
loopne
movsl
fidivrs
ja
stos
pop
mov
insl
inc
aad
jle
mov
in
push
add
rcl
leave
test
cltd
jbe
mov
fdiv
or
dec
push
cmpsb
jg
mov
mov
nop
leave
flds
lods
push
fcmovne
add
xor
or
jp
jp
pop
dec
sarb
pop
jb
rcr
push
cwtl
fildll
or
inc
mov
mov
fldl
jle
jno
xchg
in
push
out
ljmp
jae
xchg
push
cmp
mov
jne
or
test
dec
dec
into
push
jo
adc
pop
sbb
pop
loope
cs
inc
shlb
adc
push
aam
inc
dec
xchg
enter
push
pusha
pop
mov
xchg
mov
push
test
lea
mov
adc
xchg
mov
push
xor
xchg
sti
fs
sub
mov
mov
rcll
outsl
push
jmp
clc
out
and
sahf
outsl
pop
pop
lds
test
add
ds
fnstsw
outsl
xor
adc
sarb
cmp
loope
sbb
cmpsl
jne
scas
aad
data16
pushf
out
jbe
dec
imul
xor
xchg
jmp
xchg
jp
and
mov
sub
call
sahf
lods
je
pusha
test
or
loopne,pt
xorb
loopne
mulb
fstl
push
mov
sub
in
pop
push
mov
dec
mov
mov
sub
nop
mov
outsl
cmpsl
inc
mov
jb
in
xchg
lahf
and
jle
shr
cmp
cmp
push
arpl
mov
or
sbb
lcall
ljmp
cmp
pop
ljmp
push
adc
mov
lock
jns
mov
data16
outsl
daa
lods
xor
test
pop
je
pop
mov
ret
xor
test
pop
shll
xchg
pop
lea
call
jno
push
cmp
lret
inc
movsb
jmp
mov
test
int
movsl
push
xor
test
mov
mov
ljmp
adc
push
mov
push
orb
jl
push
cmp
adc
jno
adc
xchg
pop
xor
mov
or
fstpt
rclb
add
pop
out
push
lds
jbe
aam
jge
sbb
add
mov
jbe
lds
sbb
jno
inc
invlpg
out
scas
enter
mov
lahf
cltd
pop
jb
lahf
popf
test
in
pop
or
out
out
pop
or
incb
mov
sti
lahf
loope
adc
pop
inc
xchg
jl
lret
pop
adc
cmp
rolb
mov
mov
adc
or
rcll
mov
inc
outsl
sub
push
std
test
je
or
mov
imul
or
add
fadds
push
loopne
jmp
aam
cmc
insb
jge
das
enter
mov
adc
xor
das
in
ja
rcrb
cwtl
lods
pop
stos
repz
rolb
aas
ss
push
cmpsl
fiadds
fimuls
lds
nop
dec
and
jne
in
sbb
cld
sbb
cli
aaa
and
call
pop
jne
sub
sub
push
cmpsl
push
pushf
popa
or
push
cmp
fldt
shll
notb
mov
push
jl
lcall
test
inc
ja
mov
push
sbb
call
adc
inc
sarb
cmp
pop
rcll
pop
ret
shrl
jno
and
jmp
dec
movb
test
pop
std
mov
push
xchg
mov
les
pop
iret
push
stos
int3
mov
xor
mov
into
dec
addr16
xchg
fmuls
insl
jecxz
sub
sbb
lcall
push
popf
sub
rcll
xchg
les
jp
into
iret
cmpsl
pop
fwait
imul
je
jmp
out
lea
outsl
or
xchg
push
insb
pop
popa
ret
inc
fstps
ljmp
sub
aas
pushf
sub
cli
pop
dec
sbbl
inc
and
inc
sbb
pop
out
jae
and
bnd
repz
fcomi
jne
mov
test
aaa
repz
call
arpl
cmp
cmp
jmpw
and
lea
xlat
movsb
pop
fcom
out
jne
cmp
ljmp
mov
lock
or
fldl
bound
int3
insl
pushf
int
adc
sub
out
inc
lods
mov
add
pusha
xchg
sti
lret
mov
hlt
xchg
popa
cmp
jnp
pop
pop
sbb
int
js
mov
adc
int3
ss
sub
or
adc
sbb
jae
je
dec
jmp
jno
cbtw
cli
leave
pop
sbb
dec
add
aas
mov
lods
mov
daa
dec
add
pop
push
and
or
xorl
sub
inc
fbld
cmp
adc
sbb
cmpsb
je
xchg
addb
push
add
in
mov
sbb
push
pushf
shrl
ja
mov
roll
sbb
cmc
mov
imul
shlb
inc
or
aas
or
mov
sbb
rcrl
in
jne
and
mov
ljmp
jnp
xchg
inc
push
arpl
pop
xchg
rcl
cmc
xor
cmp
push
sti
add
cmc
addb
cmp
adc
pop
xor
pop
xchg
hlt
mov
lods
ret
iret
shrb
cmp
xchg
outsl
add
xor
lret
push
cmp
jg
lahf
loopne
shl
adc
adc
pop
lods
sbb
cmc
aas
pop
jne
lock
loop
cmp
add
push
cmpsl
insb
lcall
mov
loop
mov
clc
sbbb
lahf
cmp
sub
les
xor
or
and
pop
aas
into
xlat
in
and
xor
loopne
ror
mov
fidivrl
ret
pop
cmp
fisubs
rorl
das
xchg
adc
mov
xchg
cltd
mov
outsl
repnz
sub
xchg
imul
packuswb
lea
lahf
sub
pushl
mov
and
out
insl
lret
sbb
fdivr
xchg
sub
pop
add
icebp
jo
popa
jns
int3
push
mov
arpl
pop
xchg
mov
pop
adc
sub
mov
cmpsb
in
clts
ret
sub
sub
and
mov
inc
or
xorb
mov
push
dec
dec
sbb
stc
nop
xchg
push
and
sbb
mov
inc
mov
into
cmp
aas
repnz
dec
cmp
mov
pop
test
sbb
test
mov
jno
mov
sbb
movsb
aad
les
fidivl
lock
xchg
cmpsb
mov
dec
daa
addr16
imul
js
cmp
ja
out
out
dec
or
mov
adc
fldenv
dec
push
fs
xchg
cmpsl
fdivs
xchg
jbe
ret
ja
or
call
aad
leave
add
lock
push
mov
decl
pop
loopne
cli
cvtps2pi
push
fildl
out
test
mov
fs
ss
int3
imul
lret
inc
xchg
jle
push
xor
inc
shl
shll
xor
jno
es
push
jl
rorb
inc
pop
fwait
cmpsb
sub
fdivrp
cmp
or
es
dec
jl
fsubrl
loope
pushf
orl
sahf
jge
xchg
sbb
push
adc
push
inc
aad
pop
movsl
lret
loopne
push
clc
in
cmp
and
out
xor
sbb
fistpl
shrl
sub
sub
lods
mov
cmp
ret
add
and
pop
fmull
cli
pop
or
std
je
std
jp
out
sub
lahf
int3
sti
push
and
jnp
out
icebp
sub
fdivr
mov
and
adcb
fidivs
vmwrite
outsb
xor
xchg
push
loopne
or
addb
fdivr
sub
mov
mov
inc
fimull
stos
cld
sahf
test
jecxz
xor
movsb
mov
fstl
test
ljmp
lods
mov
jns
lods
lea
sbb
imul
sub
scas
sub
xchg
pop
mov
ljmp
mov
imul
repz
fwait
dec
adc
das
icebp
movsl
pop
xchg
adc
dec
in
lods
xor
es
test
sbb
inc
mov
inc
sbb
cs
dec
add
iret
mov
enter
repz
popa
daa
sub
push
aam
xchg
out
xchg
scas
lds
jmp
push
je
sub
mov
in
divl
iret
dec
pop
leave
out
into
xchg
jge
bound
in
push
aas
lea
mov
inc
pop
ja
pop
sbb
inc
ds
push
mov
popf
daa
insb
leave
lret
inc
roll
addr16
data16
cli
cmpsl
mov
mov
js
dec
in
in
mov
dec
cmp
adc
loop
inc
rcll
mov
inc
sbb
aad
mov
sbb
pushf
adc
sbb
mov
mov
xchg
mov
cmc
mov
xor
aam
in
iret
xor
jg
mov
dec
mov
pop
imul
adc
rcrb
ja
mov
mov
mov
cmp
xchg
xor
inc
sub
cld
bswap
adc
fistpl
cmp
outsb
lret
addr16
int3
adc
cmc
outsb
loop
vmovupd
leave
inc
cmp
and
mov
inc
and
sub
push
push
xchg
test
in
icebp
je
repnz
ljmp
adc
daa
push
into
mov
les
xchg
mov
inc
and
and
xor
sbb
addr16
jecxz
test
mov
xchg
aam
mov
cmp
mov
mov
cltd
xor
or
mov
cmp
xchg
xchg
lahf
cmpsl
add
sar
jns
pushf
adc
shlb
sbb
icebp
xchg
mov
repnz
rolb
scas
push
mov
or
pop
mov
mov
mov
mov
mov
push
sbb
rcrb
in
aaa
dec
mov
cmpb
addr16
xor
push
out
xchg
lds
pop
xor
in
cld
sub
sbbl
xchg
cli
pop
push
imulb
and
lock
out
lods
pop
inc
out
arpl
and
jg
mov
shll
inc
mov
pop
ljmp
jmp
insb
mov
jbe
pusha
pop
test
insb
jae
xor
mov
inc
scas
sub
sbb
ret
xchg
das
jno
inc
push
and
mov
jnp
add
inc
fsubp
inc
push
pop
inc
adc
les
push
pop
jb
test
mov
jmp
sar
lcall
xor
ljmp
sub
jo
orl
movnti
je
les
outsb
and
mov
jno
lret
jnp
mov
int
fimuls
xor
in
cltd
add
lock
das
icebp
mov
jo
add
inc
fstl
sub
nop
int
popf
push
mov
pop
negl
mov
in
pop
rcll
dec
popa
pop
repnz
xor
jo
cmc
imull
sbb
mov
mov
sbb
test
jle
inc
aad
iret
inc
xchg
add
mov
mov
jmp
sarl
xor
in
mov
rcl
inc
dec
mov
jno
je
or
and
push
pushf
fwait
outsb
lock
mov
sub
rolb
xorl
sti
pop
sbb
popa
push
jle
mov
clc
mov
insb
sti
stos
lret
xor
fcom
sti
pop
scas
cmpsb
sbb
inc
adc
fwait
push
sub
mov
arpl
test
sbb
fwait
cs
idiv
scas
insl
sbb
loopne
add
test
data16
mov
fcom
fs
push
pop
lock
or
rorb
adc
in
fdivl
dec
adc
pop
sub
mov
pop
movsb
cmp
xchg
outsl
test
movsl
push
pusha
sar
mov
or
dec
xchg
ss
sub
sub
popf
add
loope
mov
repz
cmpsl
jb
mov
jns
inc
ljmp
cs
xchg
fsubl
hlt
sbb
ss
jae
cwtl
popf
pop
dec
out
or
jb
inc
cmp
movsl
sbb
sub
sbb
sbb
cmc
icebp
in
int
fwait
jge
pop
out
dec
push
add
push
in
add
loope
sbb
shll
in
fildll
pop
insl
xor
add
mov
lahf
or
stos
add
or
mov
jne
test
mov
loop
xchg
adc
xor
adc
adc
push
sbb
inc
shrb
push
outsl
fprem
jl
push
sub
gs
iret
mov
and
iret
and
loop
cmp
push
fidivrs
repnz
pop
jae
adc
fcmovbe
aam
ret
mov
xchg
scas
inc
sbbb
mov
sbb
cmp
ss
xchg
sub
in
aad
and
ret
mov
push
outsl
scas
test
sub
in
and
mov
jge
adc
cmp
mov
push
mov
call
ret
int3
jnp
pop
jne
xor
mov
mov
out
movsb
xor
fbstp
dec
out
sub
push
scas
jecxz
or
fmul
call
and
adc
mov
mov
aad
test
jle
jge
loope
arpl
mov
lret
test
jp
insb
fnstcw
imul
or
mov
in
or
xor
cmp
push
cmp
insb
cmovb
shrd
cmc
pop
or
dec
inc
in
lods
lahf
loope
sbb
push
lahf
aas
movsl
out
je
je
clc
or
mov
lahf
xor
je
inc
lcall
outsb
or
pop
outsl
cmc
mov
sub
adc
xor
inc
push
fistps
test
push
add
lret
dec
mov
pop
jmp
dec
lds
mov
push
cs
mov
xchg
jp
sbb
cmpsl
orb
or
and
sbbb
inc
adc
movsb
cmpsl
inc
inc
mov
mov
sbb
lahf
sbb
mov
push
js
stos
out
scas
sbb
push
out
in
dec
nop
daa
mov
imull
gs
dec
xor
dec
movsb
enter
cmp
insb
push
mov
stos
ret
inc
jb
sub
aaa
sbb
ret
and
movsl
sub
xlat
mov
xchg
call
int3
xor
push
mov
inc
xchg
lods
jns
xchg
pop
jb
push
sbb
lods
ljmp
fistps
fcoms
subl
nop
fcmovnu
or
pop
adc
lahf
or
ja
mov
xchg
sbb
daa
fisubrl
lahf
mov
mov
push
in
sbb
add
pushf
and
orb
out
inc
icebp
adc
mov
push
or
aas
and
mov
mov
aam
cmp
jmp
and
in
mov
mov
js
cmp
mov
dec
or
repnz
inc
pop
pushf
stc
add
xchg
mov
ret
cs
jge
mov
psubd
into
in
or
sub
dec
icebp
test
lcall
test
or
dec
cmp
ja
mov
insl
shlb
lock
outsb
jns
pop
shl
imulb
sti
hlt
and
iret
lock
and
int3
ret
dec
stos
mov
add
mov
cmp
cmp
lods
shrb
in
mov
jnp
sub
adc
das
push
fs
icebp
lock
sub
push
scas
add
push
cmc
dec
popa
sbb
pop
mov
fwait
mov
push
jae
popf
push
push
je
xchg
mov
push
fisubrl
push
mov
leave
or
lock
cmp
sbb
mov
push
pop
pop
mov
adc
mov
push
sahf
imul
mov
dec
js
lds
sbb
xor
push
test
cmpsb
movsl
loope
jecxz
fnstsw
mov
inc
xchg
push
incb
out
into
or
xchg
pop
icebp
mov
cmp
ljmp
repz
pop
mov
push
jns
dec
icebp
out
lods
sbb
cmp
mov
xor
and
and
mov
sbb
ret
xor
adc
mov
inc
fldl
mov
jae
pop
lahf
icebp
and
mov
pop
sbb
mov
jle
or
xchg
inc
cli
mov
pop
mov
xlat
adc
dec
xchg
ret
fmuls
cmp
push
das
sbb
cmp
cld
sbb
repz
jg
cmp
movsb
fs
rcrl
mov
fldcw
dec
inc
mov
mov
out
dec
scas
and
scas
andl
adc
xchg
popa
enter
fnstenv
lret
mov
jne
add
and
pop
and
cmc
fsts
je
xchg
mov
mov
into
push
mov
pusha
clc
mov
ror
std
or
cwtl
movsl
add
cli
call
xchg
mov
inc
or
adc
fwait
cwtl
stos
push
xchg
mov
jge
pop
jb
xchg
jl
call
lods
int3
idivb
adc
jp
jo
sar
sub
iret
cmpb
add
leave
fwait
jmp
jno
notb
mov
push
xor
data16
jne
lcall
sub
aaa
add
rcrb
mov
mov
int3
mov
xlat
out
mov
ss
stos
dec
push
dec
setns
jge
dec
and
in
dec
add
sarl
jl
push
push
insl
xchg
insl
lock
sahf
sub
xchg
testl
dec
jp
scas
sbb
push
sbb
sub
bound
dec
cs
clc
dec
mov
sbbb
sysexit
cmp
cmp
ljmp
mov
outsb
fnstcw
lcall
xorb
sar
inc
xor
clc
loope
movsb
cmp
leave
mov
call
ds
or
cmpsl
mov
in
push
sbbl
ret
pop
mov
lock
and
push
inc
mov
add
jnp
test
push
sbb
jno
sahf
into
rcrb
cmpsb
clc
addr16
jecxz
adc
and
jle
inc
mov
sub
in
adc
js
mov
dec
or
mov
fndisi(8087
nop
or
mov
movsb
imul
loope
aam
daa
test
ficomps
xchg
test
rcrl
push
je
adc
pusha
sti
bound
inc
add
loop
ret
xchg
popf
push
jg
movsb
or
inc
or
js
into
inc
mov
dec
adc
movsl
jbe
int3
sbb
lock
loop
rcll
pop
xlat
leave
shlb
and
mov
sub
cmp
and
loopne
and
iret
xlat
cmp
bound
mov
cmpsb
test
stc
ror
mov
daa
daa
imulb
in
push
xchg
sbb
sub
sub
hlt
jle
mov
mov
out
pushf
ss
sub
sbb
and
inc
dec
movsl
mov
jg
fidivrl
xadd
and
sbb
jne
jge
gs
push
scas
loopne
repnz
push
mull
xor
add
sbb
dec
pop
mov
dec
jo
cld
inc
cmc
xor
and
cmp
xor
adc
stos
adc
add
loopne
mov
popf
mov
cltd
jmp
mov
ds
jae
push
jnp
mov
sahf
test
inc
sbb
jne
mov
loop
xchg
mov
repnz
dec
lret
sbb
sbb
sub
nop
scas
sbb
jecxz
aam
mov
fiadds
cmpl
mov
push
je
mov
movhps
jb
push
pop
stos
mov
adc
repz
lret
push
sbb
movsl
inc
repnz
mov
inc
mov
xchg
daa
leave
inc
mov
xchg
jb
loopne
pushf
clc
das
mov
pushf
decl
add
adc
push
outsb
out
jle
fwait
rcll
xchg
stos
add
lods
cmpsl
out
or
push
insb
ror
xchg
decb
or
jecxz
shlb
fdivrl
jnp
lahf
push
or
in
imul
mov
fwait
loop
mov
adc
adc
jns
bnd
mov
sbbl
rclb
xchg
xchg
push
lea
dec
ret
aas
jmp
inc
cltd
add
add
push
pop
test
dec
ds
outsl
jno
call
testl
xor
pop
xor
lahf
fldl
lret
lods
dec
out
pop
dec
pop
xchg
add
das
jne
stc
sbb
lock
mov
push
out
cmpsl
adc
imulb
mov
mov
xchg
cli
mov
mov
fldcw
cwtl
fcoms
ss
mov
dec
xor
pop
push
xchg
insb
std
jl
rolb
stos
pop
push
sbb
mov
sub
repz
or
or
push
aaa
movsl
push
cmp
cmp
sbb
jo
pop
adcl
jae
and
xchg
shl
and
sti
sbb
mov
repz
pusha
cmpsb
sbb
xor
sti
pop
inc
je
or
in
ret
int
lock
out
es
dec
stc
into
xor
and
dec
xchg
sub
cmc
sti
push
outsb
lret
ror
imul
xchg
add
nop
jmp
bound
cwtl
inc
sub
push
lods
push
push
inc
mov
xchg
test
hlt
sub
jnp
xchg
jbe
sbb
sbbb
xor
add
and
scas
cmc
stos
pop
jae
jbe
daa
mov
je
clc
pop
rorl
mov
pop
push
insl
xorl
cmp
ja
jp
and
jmp
ret
sub
mov
dec
sub
lcall
rcll
jno
xchg
jl
out
sub
cmc
cmpsb
fcomps
ljmp
dec
mov
insb
cmpsb
pop
xor
mov
das
out
fs
add
jecxz
xor
mov
cmp
push
mov
in
mov
or
jge
xchg
sti
js
pop
xchg
jp
mov
repz
and
adc
ret
loope
scas
mov
test
adc
sbb
notb
cmc
cwtl
cmp
mov
mov
leave
xchg
cmpsb
leave
mov
cmp
loop
jno
pop
test
int3
icebp
int3
daa
mov
in
jp
jge
mov
dec
loop
mov
or
adc
inc
push
or
hlt
push
mov
dec
test
inc
add
fs
or
das
jle
lea
ds
cmp
fsubs
add
out
fwait
jle
xchg
test
mov
cmp
scas
push
or
push
mov
pop
rolb
pop
mov
push
repz
imul
xor
xchg
push
push
inc
ret
gs
jo
dec
jno
mov
mov
stos
add
cmp
or
repz
add
or
or
mov
aaa
cli
add
stos
push
xor
ljmp
sahf
ja
inc
pop
aam
insl
mov
cmp
cld
pop
lea
fsqrt
sub
rorb
addr16
out
cmp
or
jle
jmp
xchg
imul
rorb
imul
mov
adc
xchg
mulb
pop
mov
lock
repnz
pop
cli
in
ds
std
or
ret
iret
cmpsb
adc
or
rol
xchg
sbb
cmc
push
xchg
movb
or
ljmp
divl
push
jmp
fists
adc
pop
mov
mov
inc
out
call
aam
or
les
pushf
fadds
out
repnz
xor
xchg
mov
mov
xchg
inc
sbb
adc
push
mov
iret
or
repz
stos
cmp
sahf
pop
movsb
jne
sti
in
mov
jle
in
scas
xor
sub
xor
cmp
add
jmp
fidivrs
push
mov
imul
xor
fisubrs
cli
dec
cltd
in
test
add
add
add
xchg
mov
andl
and
push
mov
push
fdivr
imul
xchg
push
out
adc
int3
jae
mov
xor
orl
sti
int
mov
dec
jmp
loope
out
or
mov
loopne
adc
jo,pt
imul
lods
pusha
loopne
arpl
fadds
adc
jb
pop
sub
into
shl
add
shl
jp
cmpsl
leave
cmp
lcall
int
lret
out
gs
mov
dec
pop
rclb
loopne
push
shlb
mov
inc
mov
sub
or
mov
mov
in
rorb
es
pop
fwait
pop
jb
aas
lea
adcl
sti
insb
xchg
cmp
out
jg
cmp
ljmp
idivb
push
jbe
or
decl
popa
mov
shlb
and
pushf
into
lds
aam
cltd
ja
mov
pushf
fwait
push
insl
sbb
or
xor
hlt
jae
cmpsl
out
xchg
mov
mov
or
inc
icebp
js
fisttps
enter
aam
dec
neg
enter
xchg
stos
and
std
mov
aas
pop
int3
jae
rclb
add
test
xlat
cmp
cmp
insb
cs
mov
jno
lret
addr16
mov
inc
in
mov
mov
dec
adcl
push
mov
push
mov
lahf
sub
push
adcl
cltd
repz
mov
jns
mov
mov
pop
aaa
mov
push
faddl
sbb
cmp
jp
mov
dec
fmuls
jecxz
ds
inc
and
push
inc
leave
cmpsb
fimuls
cmp
dec
aaa
cmp
mov
not
test
scas
sti
cmp
jl
inc
jnp
pop
cmp
inc
out
test
mov
mov
xchg
sbb
pop
mov
lods
fcmovb
or
repz
xchg
and
jae
insb
fs
imul
xor
clc
bound
xchg
cmp
mov
not
xlat
jbe
cmp
pushf
and
mov
out
jb
subl
les
out
lcall
or
loop
pop
ss
cmpb
xchg
xchg
pop
sahf
lret
adc
clc
negb
fcomps
dec
outsl
jg
popa
mov
les
xchg
das
or
mov
sbb
ret
jns
xor
or
push
and
sbb
push
jae
dec
dec
fwait
dec
and
stos
std
jmp
clc
pop
or
sub
add
mov
das
mov
or
fimull
or
jne
loope
cli
mov
push
mov
pop
lea
mov
dec
jno
es
adc
xor
call
sub
sub
bound
push
jbe
scas
mov
ret
je
push
and
lcall
push
fmuls
lods
sub
nop
repz
xor
push
sbb
and
aaa
fs
jecxz
bound
int
nop
pop
mov
jnp
sub
sbb
mov
mov
jmp
std
data16
fistps
cmp
mov
cmpsb
dec
in
cmpsb
outsb
cmpl
in
mov
jl
jmp
adc
movsb
jae
pop
hlt
or
push
ds
add
pushf
lret
push
test
daa
dec
or
mov
inc
jp
cltd
and
shl
ret
int
cmp
fistl
fprem1
push
imul
mov
xchg
jl
lods
arpl
pop
imul
jne
pusha
add
scas
hlt
xchg
jmp
je
icebp
sti
inc
jp
jo
ds
out
sub
add
mov
fwait
aaa
xchg
cmpsl
imul
sub
or
in
les
push
popa
or
sbb
jb
sbb
fistps
mov
ja
dec
jns
inc
rclb
add
iret
dec
test
loope
mov
pop
mov
cltd
fsubl
pop
jns
out
push
pop
mov
xchg
lods
ljmp
adc
fdivs
vsubps
push
add
add
push
sub
push
popa
rcll
and
and
std
xchg
bound
cmpsb
dec
adc
jg
dec
and
aad
ret
imull
stc
mov
cmp
insb
sub
ds
inc
dec
cmp
xchg
clc
lret
push
popf
push
or
stos
xchg
cwtl
or
movsl
testb
sahf
mov
xchg
movsb
adc
enter
aaa
js
cld
ds
scas
push
push
jae
and
adc
xlat
push
mov
xor
sbb
add
jp
push
fidivs
or
sahf
clc
pop
ds
arpl
add
scas
mov
or
or
test
sbb
xchg
xchg
pop
push
sub
dec
inc
push
hlt
jg
stc
dec
call
enter
xchg
cmp
push
push
nop
aas
movsl
add
add
bound
xchg
fiadds
push
inc
icebp
push
sub
pushf
sub
sbb
inc
cmpsl
mov
push
sub
cmp
out
push
xchg
push
sub
cmpsl
xor
ret
mov
mov
pushf
ss
pop
idivb
popf
pop
pop
push
out
pushf
inc
and
icebp
imul
add
mov
call
add
sub
adc
lea
jbe
fsubrl
or
mov
pop
sbb
xor
cmpsl
cmpsb
pop
cmp
pop
jb
dec
push
sub
stos
ds
mov
fstps
into
ja
das
icebp
and
mov
adc
cli
mov
cmpb
aam
shl
shrl
mov
out
or
or
sbbb
jge
mov
mov
xchg
jl
jno
add
or
ja
hlt
sbb
jg
mov
jmp
mov
popf
test
inc
mov
inc
stos
fsub
mov
sbb
fcompl
xchg
mov
repnz
inc
and
adc
loopne
hlt
xlat
push
ss
or
fdivrs
rorl
pop
xchg
test
fistps
mov
pop
push
pop
repnz
xchg
and
or
add
mov
add
int3
std
push
imul
ficoml
notl
or
inc
jnp
adc
sbb
mov
ret
adc
dec
jno
lods
cmpl
lock
divb
arpl
adc
dec
xchg
sub
cmc
jg
ds
pop
lea
xor
testb
mov
add
sub
shrb
in
sbb
iret
aad
js
pop
dec
mov
sbb
xchg
dec
test
adc
addr16
pusha
add
xor
shll
addr16
cli
cmp
fidivrs
and
adc
fisubrl
out
ret
inc
fnsave
jmp
out
and
lahf
pop
insb
daa
sarb
sub
sar
cmpsb
cmp
into
in
jmp
cs
fs
repz
xchg
stos
clc
iret
mov
xor
incl
mov
in
push
pop
stos
add
and
inc
add
ss
jmp
xchg
pop
mov
push
sti
or
inc
inc
and
lret
flds
cmp
dec
lock
call
mov
insl
dec
int
into
sbb
or
ret
mov
addr16
xorb
rcrl
sbb
mov
jnp
add
test
test
out
push
mov
mov
jno
and
int3
pop
das
pop
push
mov
inc
mov
dec
or
cmp
mov
cld
enter
test
lock
sub
cli
insl
mov
push
xor
es
std
sbb
pop
push
addr16
jnp
xlat
xchg
cmp
xor
lock
ljmp
cld
mov
cmp
adc
jmp
add
test
mov
push
mov
jae
outsb
jg
xor
or
push
adc
into
js
pop
fidivrs
push
jl
jmp
les
dec
cli
frstor
push
fidivl
rcl
xor
xor
jae
cmp
jge
aad
rorb
pop
repz
imul
aaa
repnz
mov
dec
addr16
pop
mov
push
mov
jl
pop
lods
imulb
fisubrs
paddq
fcoml
sbb
mov
ffreep
pop
cld
sarb
pop
lods
cmp
push
cmc
jnp
test
dec
iret
test
xchg
nop
push
cld
cli
xor
xchg
push
and
jb
mov
jne
sub
arpl
mov
mov
cmp
mov
mov
pop
adc
add
xchg
call
inc
xchg
pop
push
sahf
and
add
dec
int
inc
icebp
mov
jnp
nop
mov
leave
adc
xchg
and
cmp
pop
lcall
nop
sub
ret
fs
sbb
xor
out
pop
xchg
incb
loop
pushf
adc
icebp
lahf
pop
pop
fisttps
xchg
loopne
push
lret
jnp
inc
loope
mov
fistpll
push
loopne
into
movsl
rorb
jp
push
jbe
dec
inc
sbb
rcl
cld
push
outsb
add
mov
nop
add
lret
cmp
pop
cmp
adc
sti
ficomps
jmp
stc
jmp
jge
sbb
stc
fistl
sub
fbstp
pop
xor
push
daa
or
rorb
push
sbb
push
shlb
fisttpl
pop
aam
jbe
jge
sbb
lods
orb
fidivrl
negb
lds
jne
or
mov
sbb
push
idiv
jns
xor
std
popf
cmp
add
ljmp
shl
push
xchg
sbb
pop
stos
inc
xor
and
int3
and
lods
push
xchg
xor
sub
ljmp
add
int3
mov
aam
loop
roll
mov
bound
mov
jmp
in
push
mov
loopne
adc
cld
pop
stos
into
xchg
cmp
sbb
and
sahf
rcll
lods
inc
out
outsl
jecxz
jmp
fsubrs
xchg
bound
mov
fmuls
adc
mov
imul
leave
pop
lock
call
popa
jne
ret
in
pop
pop
cwtl
inc
fisttpll
mov
push
push
pop
sbb
out
inc
sbb
notl
or
fildll
xchg
or
jns
ret
push
mov
inc
pop
ss
xor
sbb
ficompl
pop
xchg
push
pop
xor
mov
push
cmpsl
test
fildl
lods
pop
scas
push
test
ss
xlat
jns
or
mov
mov
ret
movsl
and
mov
jns
sbb
mov
mov
mov
mov
xor
cltd
adc
test
icebp
addl
stos
loop
push
lahf
push
pop
xor
cmp
jns
sti
lret
lahf
cli
xchg
sub
clc
mov
stos
push
xchg
lea
dec
sbb
sti
fidivl
addr16
iret
out
bound
push
xor
xchg
pop
jo
push
push
js
cltd
imul
adcl
xchg
xchg
sub
dec
dec
sub
or
dec
xor
xchg
dec
inc
and
dec
aas
mov
movsl
arpl
cs
out
nop
xor
ss
aam
dec
ret
adc
jle
les
pusha
lret
leave
add
ret
xchg
int3
fiadds
and
popf
mov
in
mov
scas
stos
shlb
aam
pop
jns
mov
sub
aad
js
mov
rcll
mov
push
ljmp
out
call
adc
push
int
out
mov
movl
adc
movb
dec
hlt
loop
push
push
dec
dec
pop
addl
dec
popa
into
push
repz
aad
inc
cmp
mov
sub
xor
leave
std
add
leave
push
cld
dec
push
or
movsl
inc
rorl
pop
jns
mov
sub
mov
ss
outsl
sub
mov
or
aaa
adc
dec
fsubr
icebp
fdivs
insb
mov
inc
inc
jge
stos
pop
lea
adc
int
hlt
push
ljmp
cmp
fcoms
inc
and
xlat
lods
cmp
out
cmpsb
les
cmp
imul
adc
sub
fnsave
addr16
sbb
sub
lods
inc
pusha
bound
ja
jb
sub
sahf
dec
mov
jl
lret
pop
dec
cmp
inc
pop
adc
add
pop
inc
outsb
ljmp
les
out
push
fwait
cltd
cmp
mov
fists
stc
mov
or
pusha
rol
imul
imul
outsl
aaa
sub
adc
sbb
add
repnz
jge
adc
xchg
dec
out
ljmp
aas
in
sub
add
icebp
inc
dec
hlt
push
push
imul
cs
cmp
rclb
push
pop
mov
mov
scas
jnp
cmp
mov
xchg
and
sub
adc
sbb
mull
lcall
loop
and
call
xor
jno
or
sbb
push
sbb
adc
repz
addl
pop
xchg
inc
jne
push
and
leave
repz
lds
sahf
mov
cli
shlb
xor
hlt
jae
je
dec
push
rdmsr
pop
loope
jbe
jg
out
jns
xchg
cmp
mov
pop
fcomp
cmp
push
loope
sbb
jo
adc
in
dec
jae
cmp
aaa
sbb
outsb
mov
sbb
test
incl
push
fmul
inc
dec
sbb
lock
jmp
cmp
jle
pop
out
pushf
movsl
insb
jb
imul
frstor
movsb
pushf
sti
sub
mov
mov
jp
mov
sti
ss
mov
leave
je
andl
orb
arpl
orl
in
inc
xor
in
sti
jp
lock
lahf
mov
ss
outsl
xchg
or
data16
imul
mov
ret
or
out
xchg
arpl
cmp
imul
mov
andl
mov
fmull
cmp
adc
mov
xor
jne
push
jg
sti
push
sahf
fnstcw
mov
stc
pop
jae
out
or
sbb
in
cld
in
add
sbb
fisubs
cli
mov
jno
add
xchg
push
clc
in
test
pop
jmp
mov
mov
test
iret
push
enter
pop
lret
popa
or
push
push
movsb
dec
sub
fidivs
mov
icebp
fwait
outsl
xor
jns
add
pop
or
es
dec
lds
arpl
sub
xor
ret
outsl
xor
jg
mov
mov
or
and
and
or
out
mov
add
aam
out
jmp
jb
test
ficompl
sti
mov
lahf
dec
iret
hlt
inc
push
or
jecxz
pandn
repnz
test
add
cltd
scas
ss
pop
or
ja
ja
sub
xchg
mov
adc
jle
vxorpd
push
lea
sti
xchg
jae
ja
mov
cmp
xchg
pop
cwtl
dec
dec
push
into
xor
sti
call
ss
add
test
cld
arpl
shr
loop
pop
neg
dec
xchg
jge
jg
das
pop
sbb
push
xor
add
fst
jmp
cmp
pmullw
negb
test
xchg
pop
test
inc
xchg
xchg
call
jg
cmpsb
xchg
jae
and
outsl
pop
pop
mov
cmp
lock
inc
int
push
xchg
lods
icebp
loopne
pop
inc
xchg
lods
sbb
inc
aaa
sub
sahf
jmp
add
push
xor
ss
lret
rolb
test
fisttps
add
sbb
inc
in
jle
jb
mov
mov
add
and
scas
das
add
xorl
sbbl
xchg
jnp
enter
push
fimuls
loope
inc
sbb
popa
sbb
fistps
in
lcall
movsb
sub
mov
push
cwtl
cmp
adc
cs
mov
mov
jmp
inc
xlat
outsl
and
ret
xchg
xor
gs
mov
pop
xchg
call
or
sti
cmp
dec
xor
jbe
sbb
push
push
dec
mov
jle
sub
dec
xor
sub
mov
movsl
cmp
pushf
fnstenv
call
and
push
push
clc
jmp
add
decb
sbb
lret
xchg
ret
and
mov
pop
sbb
in
or
sbb
push
mov
aad
or
iret
inc
xchg
icebp
mov
outsl
lock
inc
jmp
rcrb
pop
jo
push
push
rcrl
mov
stc
test
mov
jo
mov
push
and
jmp
adc
cs
lds
rolb
rclb
stos
adc
sub
xchg
pop
lds
add
test
sub
dec
pushf
jl
add
enter
popa
sarb
dec
insb
pop
dec
xlat
push
and
lcall
ja
out
cmp
movsb
into
outsl
addr16
sub
or
aam
cmp
inc
pop
clc
and
sbbb
cmp
insb
inc
popf
xor
pop
nop
sti
xchg
outsl
xor
push
test
mull
insb
sbb
or
mov
dec
or
adc
cmc
ret
out
mov
int3
xchg
ss
arpl
stc
fbstp
add
bsr
push
in
cld
arpl
inc
push
ja
cmpsl
lods
ret
icebp
idiv
cmpsl
adc
aam
cmp
adc
ss
daa
mov
movsb
inc
sub
dec
aad
mov
and
mov
popa
mov
mov
mov
push
rcrb
gs
or
test
or
xor
xor
mov
dec
andl
mov
jecxz
xchg
ret
xlat
cwtl
inc
push
xchg
inc
cltd
fldenv
or
testb
pop
pusha
hlt
fwait
mov
pop
adc
push
call
mov
icebp
pop
adc
mov
xor
mov
gs
loope
xchg
lcall
sub
push
daa
inc
repnz
jbe
mov
jmp
push
hlt
stc
mov
cmpl
sub
push
cltd
shll
and
loopne
fldenv
mov
xor
push
xor
inc
inc
lahf
out
or
pop
xor
fcmovnbe
popa
lea
int
mov
and
out
lahf
xchg
ja
xchg
cmpsl
sbb
xlat
dec
daa
push
or
xchg
dec
call
add
js
out
pop
jl
mov
xor
shll
out
aad
leave
out
cmpsb
xlat
xchg
push
xor
loope
mov
adc
xor
hlt
cmp
aam
pop
pushf
inc
test
stc
test
and
and
inc
incl
pop
cs
cmp
in
rorl
mov
push
fdivrl
in
aam
lea
pop
mov
sarl
sub
push
jl
leave
rorb
push
aas
jg
jno
mov
pop
lock
cmp
sub
pop
das
das
mov
push
movsl
mov
je
rcrb
xchg
inc
push
into
xchg
xor
ljmp
jae
fiaddl
mov
es
pop
mov
mov
imul
pushf
mov
push
pop
sbb
and
mov
sbb
xchg
test
shlb
push
dec
dec
sbb
imul
mov
ret
test
insl
xorb
mov
dec
fisubrl
push
hlt
adc
xchg
rcll
xor
push
ljmp
jecxz
sub
and
lods
movsb
outsl
insb
add
popf
sub
xchg
jecxz
xchg
cs
pop
shrb
xchg
ljmp
lret
jne
jmp
sub
jle
push
xchg
or
mov
adc
stos
mov
push
push
out
mov
imul
repz
sbb
div
lret
mov
adc
stc
shlb
pop
push
popa
clc
push
cmpsl
es
pop
mov
pop
enter
cs
sub
hlt
and
pop
mov
sbb
mov
cmp
inc
cmpsl
ffreep
fnstcw
fisttps
and
pop
and
outsb
xchg
and
sub
ret
xor
les
mov
jmp
gs
fs
int3
or
std
mov
pop
imul
cs
jmp
popa
or
sahf
into
mov
call
and
mov
insl
dec
fcoms
inc
push
jecxz
or
push
jmp
push
les
adc
sbb
int3
mov
movsb
nop
sbb
xchg
int
ljmp
pop
or
jnp
adc
sub
loop
jmp
dec
mov
sub
dec
stos
pop
ds
mov
pushf
mov
rorl
cltd
ret
loop
jae
jle
push
cmp
jecxz
aas
pop
dec
testb
pop
add
mov
mov
outsl
es
sub
sub
inc
fwait
jns
adc
andl
js
mov
jb
or
xchg
addr16
and
pop
lret
cmp
mov
inc
int3
push
jge
ret
inc
pop
push
jp
sbb
dec
xchg
add
nop
fimull
inc
bound
or
pop
jmp
mov
xor
mov
xchg
adc
loope
xor
fwait
sbb
push
cwtl
dec
fwait
mov
mov
pop
ss
pushf
pop
push
sbb
inc
stos
sub
aas
inc
cmp
sub
repnz
and
push
pop
ret
test
xor
mov
sbb
jo
adcl
push
xchg
aam
jae
mov
jecxz
pushf
jae
and
ljmp
addr16
je
cltd
mov
push
lret
data16
ja
add
jns
and
inc
movsl
mov
inc
pop
lahf
pop
mov
insb
roll
cmp
xchg
ret
add
and
nop
inc
cltd
out
mov
stc
daa
stc
nop
aas
and
push
and
sub
jl
mov
lods
movsb
je
scas
mov
aas
xchg
cmpsl
mov
adcl
push
js
das
bound
mov
insl
stos
int3
sub
mov
and
sub
dec
dec
mov
sub
fmul
and
cmpsb
mov
scas
insl
fisubs
cs
sbb
out
int
test
pop
xchg
nop
xchg
int
pop
cmp
xchg
dec
es
std
imul
inc
cmpsb
icebp
test
jl
mov
sbb
xor
sub
inc
call
pushl
arpl
push
fistpl
sahf
cs
adc
inc
sub
lahf
jecxz
pop
outsl
icebp
imull
and
loop
sbb
rcrb
mov
cmp
xor
mov
pop
or
and
inc
or
out
and
push
pop
test
push
or
jge
xor
jle
out
mov
adc
sbb
mov
enter
shll
xlat
shll
inc
cmp
xor
mov
adc
loop
imul
stc
cld
out
push
pop
cmpsb
aad
pop
ret
stos
inc
cltd
add
jae
jbe
fadds
mov
jnp
fmuls
xchg
mov
es
xchg
inc
nop
ds
pushf
dec
adc
jmp
adc
sbb
sub
mov
insb
shlb
push
pop
inc
sub
sar
jbe
mov
test
xchg
loopne
pop
push
stos
rcrb
sahf
mov
xchg
ficoml
xlat
daa
and
mov
or
inc
push
xchg
lcall
dec
xchg
or
mov
out
insb
aam
popf
mov
add
aam
pop
out
mov
orb
test
pop
sbb
cmp
or
xor
fdivp
mov
pop
inc
and
and
and
leave
push
insl
sbb
mov
cmpsb
insb
stc
xor
fbstp
pop
mov
jno
movsb
push
in
cld
inc
xchg
scas
pop
pop
and
pop
dec
test
icebp
test
pop
mov
data16
movsl
shlb
jo
or
clc
cmp
cmpsb
je
test
xor
sbb
and
rcrb
in
mov
shrl
or
bnd
jmp
pop
sbb
jbe
addr16
cmpsl
or
or
inc
inc
mov
out
jns
popa
or
movb
shll
pop
mov
and
popf
adc
jmp
sbb
add
dec
fadds
frstor
mov
jns
pop
and
mov
enter
and
push
clc
xchg
clc
pop
ret
xor
sub
mov
outsl
pusha
push
das
hlt
in
bound
repnz
inc
push
loope
mov
pushf
xchg
adc
rcrb
and
xchg
inc
enter
sbb
add
xor
pop
fidivrs
iret
andl
or
cwtl
test
jns
mov
push
jle
push
cmp
dec
mov
imul
lcall
or
fistpll
out
test
inc
ds
stos
nop
sbb
das
cmp
fwait
nop
adc
fwait
jae
xchg
gs
pusha
rorl
dec
mov
test
add
push
pushf
fidivrs
daa
mov
sub
insb
sbb
fdiv
nop
mov
push
inc
adc
hlt
insl
mov
mov
aad
mov
mov
bound
lock
pop
mov
mov
das
pop
mov
aam
add
fidivl
cmp
and
out
stos
loope
pop
cltd
cwtl
cmpsb
xor
stos
aas
repnz
fdivrp
call
in
mov
xlat
xchg
rolb
pop
push
cmp
dec
lahf
shl
pop
inc
jno
sbb
sbb
in
and
arpl
jae
es
dec
or
xchg
fidivl
cmp
inc
mov
jecxz
fists
stos
jns
xor
mov
ret
mov
push
cmpsb
int
adc
in
aad
mov
push
xchg
xor
test
or
ss
sbb
mov
mov
jmp
push
pop
jnp
bswap
xor
push
daa
sarl
adc
in
inc
or
pop
test
xchg
mov
into
test
xchg
jge
andb
lret
xchg
shrl
inc
adc
fidivl
or
inc
adc
inc
jl
cmp
enter
ficomps
push
fadd
pop
out
ficoml
cmp
mov
mov
sub
je
sti
ret
aas
xchg
push
jmp
sbb
mov
pop
pop
mov
and
insb
adc
xor
sbb
jp
popf
ss
mov
dec
arpl
loop
je
and
jnp
push
gs
inc
mov
cs
jg
aad
cmp
and
jne
add
xor
aaa
sub
cmp
jle
mov
sbb
fisttpl
jge
int3
decl
push
pop
stc
out
scas
mov
out
or
pop
je
push
jp
test
test
pop
popf
jne
cmp
fcom
int3
cld
inc
mov
jg
testb
mov
add
xlat
xchg
mov
pop
pop
mov
loope
xchg
sbb
inc
mov
sbb
cld
mov
cli
adc
into
adc
div
push
rclb
adc
in
out
mov
jecxz
clc
mov
subb
lcall
pop
jno
clc
arpl
lods
mov
sub
xchg
ret
jle
jge
aaa
imul
cld
xchg
rcr
in
in
inc
das
aam
movsl
pop
lds
xchg
cmp
cmp
dec
es
shll
xlat
pop
stc
std
stc
ja
jl
out
into
cmpl
pop
jmp
push
pop
das
cli
mov
jne
pop
mov
das
sahf
mov
mov
push
pop
out
fdivrl
sahf
sarb
aad
add
pop
push
sahf
jp
ja
mov
mov
fcoms
out
outsb
mov
repz
or
sub
cmp
xchg
fisttpl
out
xchg
cmpl
push
sbb
push
ljmp
outsb
cmp
xchg
loopne
jmp
xchg
dec
bound
out
and
jo
in
shl
or
test
stos
or
cmp
out
adc
outsl
add
mov
daa
mov
xlat
ds
out
push
fistpl
mov
lds
push
sbbb
lods
ja
clc
mov
mov
lods
std
mov
int3
fadd
lods
lods
mov
adc
scas
cmpsb
jne
add
bound
jecxz
scas
or
nop
data16
bound
dec
rcrb
mov
je
lcall
push
xchg
xchg
jle
sbb
dec
data16
jmp
into
push
pop
xchg
xor
push
test
xchg
mov
or
fdivrs
inc
add
push
and
maskmovq
mull
add
dec
jge
cmp
lcall
insl
adc
jecxz
pop
faddl
mov
out
mov
loope
xchg
sbb
fdivrs
popf
int3
mov
jmp
cmpb
mov
jae
inc
lahf
push
lods
jno
adc
loopne
jb
mov
hlt
cmp
mov
dec
lods
cmp
adc
cmp
adc
fucomi
and
ror
push
fcoml
mov
imul
push
mov
out
loop
lret
out
inc
ss
outsb
popf
jp
mov
decl
push
rorb
arpl
sub
adc
xor
cmpsl
test
mov
imul
and
jnp
xor
into
scas
jo
push
add
xor
imul
jg
inc
jle
jae
clc
jb
adc
into
jmp
pop
insl
jae
mov
xor
jecxz
test
pop
pop
pop
lds
mov
pushf
clc
iret
lret
jns
test
mov
inc
andb
and
cmpsl
imul
in
sahf
shrl
aas
adc
mov
sbb
popfw
pop
or
sub
mov
js,pn
push
sbb
cmp
mov
push
sub
mull
or
inc
push
daa
shlb
mov
or
inc
xchg
test
loop
adc
sbb
cmp
rcrl
pop
xor
fisubrs
repz
pusha
clc
mov
and
add
adc
jno
push
cmc
fcoml
mov
jmp
push
das
pusha
fs
mov
inc
jae
mov
pushf
out
add
dec
into
ds
das
pop
into
mulb
ds
decb
pop
std
std
ficoml
mov
orb
lds
enter
jb
sub
cmp
mov
push
push
pop
jo
into
fdiv
testb
sti
movsl
add
das
outsl
fidivl
and
sbb
out
or
sub
cmpsl
fsubp
aaa
roll
push
adc
es
testl
adc
push
inc
mov
or
sbb
xchg
jnp
out
fnstsw
icebp
pop
mov
outsb
push
aas
std
cltd
fs
sahf
outsb
adc
jo
sahf
mov
adc
sbb
js
mov
inc
je
loop
sub
or
pmaxub
inc
aaa
insl
mov
mov
mov
nop
xor
xor
push
clc
jo
jecxz
in
adc
sub
std
mov
negl
outsl
lret
clc
adc
mov
dec
ja
mov
mov
and
pop
add
push
stc
aad
leave
mov
mov
sbb
es
out
out
sub
roll
dec
cmp
lea
jb
sbb
sub
sub
inc
aad
lret
test
ja
mov
mov
repz
cmp
aad
pushf
pop
push
pop
add
or
arpl
out
push
test
fidivs
sbb
loop
test
lret
xchg
sub
iret
fldt
test
mov
pop
outsb
inc
inc
mov
cwtl
int
and
pop
cmp
enter
dec
pop
ret
mov
mov
les
addr16
cmpsl
sbb
push
int
cmp
test
add
stos
jecxz
test
sti
dec
mov
sub
imul
jb
stc
pop
xchg
mov
add
aaa
lds
stos
test
shr
mov
ljmp
icebp
xchg
and
shll
mov
cmpsb
mov
lahf
sub
pushf
stos
sbb
jmp
dec
call
dec
js
adc
mov
shll
jp
cmp
pop
arpl
mov
cld
push
ror
sbb
dec
ljmp
dec
mov
adc
mov
dec
sub
repnz
xchg
xor
pop
lahf
repnz
dec
or
xchg
sbb
cmp
adc
pusha
cli
aam
sbbl
lods
sti
dec
arpl
lcall
fwait
mov
clc
jmp
bound
pop
gs
mov
shll
lcall
sub
fscale
test
push
sub
fiaddl
xor
push
enter
jmp
jne
addl
or
shlb
adc
jbe
jns
roll
xchg
sub
daa
sub
jno
cmp
add
jecxz
sti
lret
aam
mov
xor
xchg
test
daa
hlt
push
push
jmp
jno
push
aas
and
jb
aas
pop
pop
inc
cli
jnp
add
ret
cs
sti
mov
stc
mov
jge
pop
das
adc
jae
and
daa
jp
int
dec
jbe
out
mov
sbbb
dec
inc
dec
mov
test
sbb
pop
jne
xchg
incl
cmp
sti
sbb
testl
cmp
xchg
mov
scas
sub
or
lret
scas
add
dec
and
jo
and
fs
xchg
clc
jle
cs
lods
cmp
jmp
pop
out
sar
in
sarb
push
mov
int3
leave
rcrb
loope
add
dec
push
inc
push
das
insl
in
dec
fists
roll
mov
int
jb
and
or
pop
or
xchg
xchg
cmp
int3
mov
fwait
jnp
mov
loopne
jb
push
and
cli
add
pop
or
repnz
bound
jp
xchg
popf
adc
sub
xchg
cmc
pop
mov
lahf
lret
clc
sbb
adc
ljmp
mov
rclb
imul
cmp
xor
scas
mov
and
push
sbb
adcl
sbbl
cmp
inc
and
mov
sbb
add
lds
adc
cmp
movsl
sbb
fistpll
int
scas
mov
iret
push
mov
punpckhwd
push
sub
aam
stc
push
dec
xor
mov
call
mov
jecxz
xorl
mov
cmp
xor
leave
sub
dec
adc
imul
lds
sbbl
movsb
iret
pop
aam
xchg
push
pushf
mov
push
add
dec
and
ja
sbb
sub
cmc
or
and
dec
mov
loope
cmpsb
sbb
push
push
and
cmp
ret
fstpl
in
dec
adc
fisubrs
mov
push
push
lea
jl
jge
ss
jb
leave
bound
mov
aad
stos
stos
pop
jmp
sbb
fiaddl
lret
add
mov
sbb
add
or
xor
lret
sarb
inc
sar
push
insb
push
enter
jb
cmp
sbb
setbe
jb
add
mov
popl
and
xchg
push
rcll
add
or
loop
fwait
sti
cmpsb
aam
call
stos
inc
icebp
cmp
sub
sub
jbe
insb
imul
imul
jne
mov
xor
add
into
push
add
ss
ret
lds
andb
out
and
sbb
jl
jge
es
mov
xor
xchg
mov
pop
mov
xchg
xchg
mov
aaa
adc
cmp
out
std
mov
out
ja
sbb
add
fisubrl
push
fwait
sub
sub
into
aad
mov
cmp
rcrb
xchg
mov
enter
mov
dec
loop
popf
sarl
neg
in
test
movsl
adc
packuswb
popa
stc
data16
dec
mov
xchg
cmp
xchg
aas
mov
xchg
fdivrs
shlb
clc
stc
pop
fnstenv
cmpl
cwtl
cmc
insl
adc
adc
test
pushl
jne
mov
in
testb
and
push
mov
sub
inc
adc
xor
dec
stos
jl
jp
mov
mov
data16
xor
pop
mov
pop
or
fnstsw
sub
push
mov
imul
mov
push
es
stc
xchg
imul
imul
shll
icebp
enter
pop
and
sbb
inc
sub
sbb
fwait
insb
xor
cmp
iret
lcall
pop
or
das
adc
addb
mov
mov
push
outsb
inc
push
add
aam
pop
dec
dec
push
enter
mov
mov
or
or
cmpsb
adc
mov
repz
mov
in
pop
adc
or
sub
loope
cld
mov
fiadds
outsb
pop
subb
sub
jmp
addr16
mov
push
repz
dec
push
mov
xchg
imul
shrl
inc
and
xor
push
pop
or
jle
cmp
xchg
loop
sbb
repz
popa
xor
movsl
out
mov
out
pop
inc
leave
mov
cmp
stc
mov
shll
repnz
pop
shl
bound
cmp
dec
in
cmp
fdivrp
sub
leave
in
out
xchg
xor
inc
push
insl
adc
mov
mov
xchg
push
add
je
xor
jb
out
sti
in
push
xchg
enter
dec
pop
jp
xchg
cmpsl
std
cld
pop
xor
shr
mov
test
adc
add
cli
inc
sub
and
push
jbe
addr16
aaa
mov
pop
push
mov
in
imul
sarl
mov
xchg
std
pop
mov
cmp
add
inc
inc
and
pop
mov
aaa
outsl
inc
xchg
xchg
or
dec
dec
xchg
xchg
sbb
ljmp
rolb
mov
inc
mov
pop
rorl
sub
xchg
xorb
mov
fldt
andl
jbe,pn
push
in
inc
scas
inc
xor
xchg
xchg
inc
scas
cmp
xor
scas
aaa
or
xchg
mov
fisttpl
bnd
jns
leave
mov
mov
add
sbb
dec
push
dec
int
ret
outsl
int3
ds
pop
aas
or
mov
mov
inc
loopne
jl
icebp
adc
xor
subb
out
xor
cmp
idivb
and
int
lahf
call
xlat
jb
jne
pop
dec
jne
xchg
ja
jmp
xchg
jno
imul
pop
clc
iret
mov
subl
sub
je
fwait
push
cmp
xchg
ret
mov
inc
jno
xchg
arpl
jnp
mov
sub
or
cli
jle
fldcw
popf
xchg
xchg
xchg
aam
dec
xchg
and
stos
push
and
inc
addr16
and
mov
mov
scas
test
rorl
rorl
dec
adc
aam
dec
ret
es
and
jg
fsubrl
push
sub
mov
cmp
test
fnsave
push
pop
push
xor
jb
clc
push
ss
pusha
push
imul
fiaddl
sub
pop
jle
sahf
xor
inc
test
xor
std
jne
shl
or
negb
sbb
jp
mov
dec
pop
lcall
cmp
add
sub
jnp
cmp
or
mov
pop
dec
push
mov
add
mov
adc
inc
mov
mov
cmpsb
or
call
inc
or
inc
aad
adc
and
mov
and
bound
leave
push
loopne
loope
xchg
dec
mov
js
ljmp
inc
shlb
test
mov
sbb
test
mov
mov
loope
psllw
or
movb
test
and
movsb
jp
daa
xor
sbb
cltd
mov
dec
push
addps
les
imul
push
jno
data16
nop
xchg
les
sub
inc
movsb
adcl
push
mov
mov
add
mov
outsb
or
sbb
or
mov
mov
stos
std
ffreep
mov
xchg
sub
test
jecxz
or
icebp
rcll
in
pop
ja
icebp
jbe
in
push
pop
push
jns
cli
pushf
aaa
dec
ret
push
mov
adc
insb
lea
sub
outsl
cmpsb
pop
jnp
and
pop
xchg
jl
in
ficompl
xchg
out
jo
imul
add
cmpsb
fistps
pop
movsl
popa
inc
insb
add
sti
cmp
lcall
hlt
test
ret
js
xor
aaa
push
pop
decl
lods
fsubp
js
das
mov
das
mov
jb
mov
cmp
jg
sub
iret
dec
mov
push
pop
mov
lods
andb
into
add
mov
test
imul
jbe
js
mov
nop
dec
mov
jmp
lock
pop
add
pop
fcmovbe
fisttpl
idiv
mov
mov
mov
sub
pop
or
cld
xchg
cmpsb
xor
jg
push
ja
push
or
pop
arpl
push
mov
or
dec
push
insl
ret
xor
rclb
filds
ljmp
push
test
pop
lret
push
xor
fs
sbb
dec
xlat
ds
mov
inc
inc
das
xor
inc
jnp
loopne
stc
imul
les
sub
cli
mov
mov
int3
arpl
mov
xchg
jbe
daa
dec
pushl
sub
jne
add
stos
js
ss
dec
ljmp
sub
stc
dec
mov
push
movd
push
push
add
cmc
push
shll
les
xor
push
push
pop
dec
or
dec
ja
stos
or
lahf
leave
dec
jmp
or
cwtl
lods
or
push
mov
push
shll
aam
popa
lods
xchg
lods
xchg
inc
inc
bswap
sti
and
lcall
cmp
std
cmp
mov
cmp
push
xchg
test
ljmp
movsl
mov
and
cli
les
mov
push
or
inc
jns
subl
add
ret
mov
and
add
and
inc
loop
ficoms
pop
test
movsl
imul
das
lock
pop
mov
dec
mov
pushf
or
mov
push
sahf
adc
jno
mov
mov
loop
loope
aas
push
lock
and
mov
pop
in
dec
mov
or
incb
leave
jmp
sbb
cmp
mov
and
out
mov
mov
xor
cmp
and
inc
lahf
inc
xor
insl
arpl
cmp
mov
inc
jecxz
scas
xchg
mov
pop
inc
jno
aas
xchg
in
lock
sti
push
daa
push
outsb
ds
adc
cmp
daa
mov
cmpsb
sub
mov
jo
and
stc
pcmpeqd
mov
cmpsb
mov
add
mov
fisubs
decb
cmp
jle
jns
or
mov
jno
sbb
int3
mov
loope
jge
dec
or
ja
lods
cmc
dec
dec
jge
sbb
jge
inc
stos
adc
into
aaa
test
int3
xchg
lods
leave
mov
filds
xchg
int3
les
pushf
faddl
jne
jb
xchg
jno
pop
cmp
push
dec
sbbl
push
push
xor
inc
fnstcw
pop
rorb
mov
mov
ja,pt
push
pop
lahf
cmp
xor
push
xchg
mov
mov
jg
sub
sub
iret
adc
negl
test
mov
jnp
jne
shll
add
inc
xchg
mov
cmp
xor
es
dec
add
mov
fcomps
mov
mov
lods
bnd
pop
sbb
dec
outsw
outsl
push
arpl
jmp
lahf
mov
cmp
shlb
xor
out
and
lods
sbb
call
nop
mov
xchg
dec
sub
pop
out
dec
or
test
out
dec
out
xchg
repnz
dec
inc
imul
xor
loop
dec
imul
inc
sub
xchg
cltd
adc
dec
inc
cmp
loopne
and
inc
jp
adc
add
ljmp
or
cmovns
xor
rol
fcoml
je
jnp
bound
idivw
adc
loop
fimuls
dec
test
xor
xor
push
test
adc
xlat
sarb
pop
mov
aas
inc
fcomi
or
popa
xor
out
pop
dec
cmp
xor
jmp
shl
inc
sbb
push
inc
fidivrl
mov
insl
xchg
or
mov
daa
sbb
stc
ljmp
dec
push
mov
mov
jmp
out
pop
pop
lcall
stc
mov
iret
lods
scas
sbb
xchg
inc
fs
jg
mov
mov
fildl
fwait
jl
pop
subl
cmpsl
sub
jnp
lods
sahf
pusha
stc
shlb
mov
shl
fbld
scas
arpl
push
or
test
ret
pop
jmp
or
fnstcw
sub
xchg
add
sbb
mov
mov
aaa
aam
push
cmp
mov
xchg
repnz
stos
rorb
pop
leave
mov
pop
jle
xchg
mov
popf
fdivl
inc
insl
xlat
das
push
sahf
inc
mov
leave
aad
cmpsl
test
xchg
shll
sar
cltd
cmp
hlt
in
leave
cmp
bound
stos
ljmp
aas
mov
es
js
mov
loope
out
sbb
mov
addb
xor
jl
pop
addr16
ret
sti
cmpsb
push
pop
mov
fmuls
notl
push
cmp
pop
scas
ss
mov
out
push
mov
iret
push
test
jbe
aaa
or
scas
pop
gs
enter
lea
out
cmp
ss
push
fmulp
popf
add
loop
push
lock
fidivs
mov
push
scas
lcall
bound
and
int3
mov
mov
mov
mov
out
adc
test
sbbl
jns
dec
dec
jae
aad
xchg
pop
add
push
jle
xor
dec
dec
mov
jecxz
cmpsb
dec
pop
insb
repnz
xchg
out
sarb
and
adc
xor
pop
pusha
inc
bound
xor
repnz
mov
ds
outsl
scas
push
adc
dec
cmp
pop
lret
aas
jmp
jnp
xchg
jg
sbb
push
decl
clc
sbb
out
lahf
xchg
stc
andb
sbb
subb
cld
clc
or
mov
xchg
loop
add
cmc
inc
or
pop
stos
push
push
lods
cwtl
jmp
xchg
adc
mov
inc
or
adcl
mov
pop
xchg
sub
fbstp
mov
sbb
cmpsb
inc
xor
cmp
scas
aam
push
cs
cmp
sbb
push
or
pop
ja
pop
arpl
pop
scas
cmp
pushl
dec
mov
pushf
cltd
cmpsl
sti
push
pop
xor
xchg
jne
loopne
addr16
mov
mov
loopne
jmp
sub
cli
es
adc
pop
dec
or
cmp
ja
lods
xchg
scas
push
jge
xchg
sbb
add
lret
pop
aad
jbe
add
xor
das
cwtl
enter
imull
xor
xchg
cmpsb
or
stc
sub
ljmp
xchg
sbb
movnti
insb
sbb
jne
dec
sub
or
mov
jl
add
jnp
sub
jae
xchg
push
nop
inc
push
sbbl
adc
mov
js
inc
jmp
xor
pop
notrack
int
aam
dec
ja
adc
jp
loopne
ss
shll
cwtl
lahf
clc
repz
inc
xchg
push
xor
pop
daa
xchg
add
pop
mov
jecxz
cmp
cmp
fistpl
test
insl
sub
pop
addr16
mov
mov
divl
cld
jns
lahf
push
add
gs
push
icebp
jno
mov
sti
mov
arpl
lock
shl
pop
les
adc
push
insl
sbb
xchg
mov
xlat
mov
jae
loop
jno
pop
jb
fdivr
mov
movsb
andl
scas
xor
pop
addr16
add
xor
dec
rorl
insb
dec
mov
fcoms
ja
xchg
pop
lcall
mov
sahf
hlt
mov
or
ljmp
stos
push
sub
inc
push
pop
xor
mov
mov
daa
das
jmp
fimuls
jge
dec
daa
jae
test
addb
movsb
mov
out
and
mov
iret
push
fiadds
or
les
mov
aam
mov
push
imul
fcomp
xor
mov
cmp
mov
into
data16
and
ljmp
les
daa
pop
nop
imull
ror
test
shlb
push
push
mov
or
adc
dec
push
divl
push
xchg
sbb
stc
adc
lahf
xchg
mov
pop
bound
mov
rcll
sub
xchg
pop
add
mov
dec
addr16
scas
lret
xchg
dec
les
int3
xchg
lods
idivb
mov
and
js
cltd
sti
mov
or
in
xchg
jb
adc
pop
xor
xor
jmp
add
in
xchg
cmp
add
mov
mov
out
sbb
cmp
lret
int
adc
push
push
mov
sbb
ror
xor
adc
xor
imul
xchg
in
xchg
adc
lds
mov
bound
jmp
fcmove
xlat
push
outsl
push
adc
push
sub
jno
inc
clc
add
daa
shll
pushf
repz
insb
rcll
loop
test
clc
or
sbb
xchg
push
imul
insb
out
lret
addr16
sbb
fwait
sbb
add
dec
shrb
jg
daa
mov
dec
push
sbb
fsubl
jb
hlt
dec
popf
jecxz
loopne
or
jle
stc
inc
and
and
sahf
cmp
orb
sub
out
ja
sbb
rcrl
scas
lcall
mov
mov
loopne
push
popf
dec
shlb
lcall
ja
cmp
sub
push
adc
lods
cmpl
rcl
jno
sbb
jns
stc
mov
sbb
push
ret
mov
cmp
loope
add
sbb
push
jge
cmp
mov
mov
aam
movsb
shld
inc
pop
push
loope
jns
hlt
cs
sub
ret
or
cmp
imul
into
addr16
xchg
mov
nop
stc
icebp
lea
jo
push
into
xor
push
xchg
int3
test
push
xchg
and
pop
adcb
sahf
lock
jne
movsb
fidivrl
adc
aaa
in
hlt
pop
jae
stos
out
sub
cmp
ret
in
inc
push
out
lret
xchg
in
xchg
mov
pop
dec
push
jne
mov
inc
in
push
add
inc
cmpsl
pop
mov
loop
mov
sub
sub
adc
xlat
jge
add
push
call
inc
push
add
sbb
dec
lahf
add
push
lret
pop
out
jl
in
outsb
sub
lcall
scas
dec
or
outsb
sahf
cs
inc
mov
cmc
cmp
lcall
mov
pop
inc
xchg
jge
fdivs
arpl
cs
or
enter
loop
cmpl
int3
inc
les
xchg
dec
add
jle
mov
push
fcoml
fstpt
inc
int3
rorl
pop
fcompl
push
jg
les
inc
mull
cs
sahf
mov
outsb
jns
insb
dec
cmp
mov
dec
mov
inc
xchg
jg
in
scas
add
push
mov
std
pop
dec
mov
mov
js
push
xchg
mov
mov
les
cmp
int3
cmp
enter
pop
add
ficompl
mov
pop
aad
dec
mov
xchg
rorb
fsubr
xchg
inc
test
xorl
mov
std
cmp
shrb
jecxz
push
mov
fldcw
mov
aam
ret
arpl
push
gs
lcall
adc
xchg
jnp
dec
std
mov
xor
jg
cmp
cmp
je
jl
xchg
xchg
xchg
ja
dec
inc
or
in
jle,pt
lret
ds
sti
and
lea
jge
mov
xchg
push
in
lock
das
sub
movsl
je
and
or
pop
repz
fisttps
mov
sbb
subl
fcmovnu
cmpsb
cmpsb
add
addb
lea
dec
repz
mov
cmp
js
mov
cs
outsb
mov
sbb
sahf
mov
jecxz
ljmp
shlb
movsl
jmp
test
lock
jns
mov
cs
rclb
int3
fstpl
mov
sbb
mov
push
sub
stos
mov
lds
pop
aam
lret
lret
call
inc
pop
cld
add
addl
lea
pop
add
outsb
sub
or
cmp
sub
xor
and
stos
push
mov
and
cwtl
push
mov
mov
mov
ja
and
mov
adc
out
loope
add
inc
fildl
in
sar
dec
stc
lret
xor
pop
mov
and
scas
test
loopne
inc
cmc
shr
out
adc
add
mov
inc
notb
cmpl
gs
sahf
add
les
push
mov
lock
into
fsubrp
jp
fldt
outsl
mov
push
push
fwait
cmpsb
daa
shlb
mov
push
mov
jnp
loop
mov
ja
jmp
ret
sub
out
inc
int
fisttps
mov
movsb
dec
jns
push
cmp
pop
and
push
mov
dec
add
outsl
clc
dec
dec
inc
adc
mov
mov
mov
cmc
je
pop
add
push
pop
mov
pop
sub
ljmp
mov
das
sub
adc
aad
add
and
cmp
das
scas
mov
xchg
inc
and
clc
add
push
add
add
lcall
push
sbb
jo
xchg
cmc
lret
js
loop
lods
or
mov
les
loope
insl
je
add
jl
xor
int3
add
out
leave
mov
movsb
dec
mov
xchg
xchg
xchg
add
lds
outsb
xlat
mov
pop
lret
ljmp
outsb
dec
pop
mov
sbb
in
jne
fidivrs
fdivs
push
arpl
cld
pop
push
movb
test
enter
add
or
mov
jmp
add
insl
mov
or
call
xchg
add
dec
xor
iret
mov
and
jecxz
out
sahf
sbb
inc
popf
ficoml
add
fcomps
cmp
pop
fcoml
rcl
dec
mov
aas
push
neg
mov
and
sti
mov
mov
cmp
xchg
push
push
pop
sub
aas
adc
pop
adc
rolb
dec
and
std
fucom
mov
sbb
jne
jl
mov
push
pushf
mov
sub
mov
clc
lods
adc
ss
int
test
aad
movsb
mov
xor
in
jbe
xchg
mov
jg
cmpxchg
jl
lahf
insb
jbe
iret
add
xor
sbb
sti
retw
push
jnp
mov
pop
test
jno
or
mov
push
and
inc
adc
out
jns
inc
cltd
fmuls
adc
xchg
jb
ret
mov
xchg
lock
pop
pop
lea
bound
clc
movsb
aam
repz
outsl
imul
mov
filds
das
stc
div
cltd
outsb
inc
scas
fwait
mov
mov
out
push
dec
mov
cmp
ljmp
outsl
lds
pop
test
mov
imul
lret
cmp
adc
je
repz
mov
jne
dec
add
into
out
aas
or
rcrl
loop
andb
ss
decl
lcall
push
and
pop
in
jmp
xor
fucomip
cmp
add
test
xor
lret
push
cmpsl
in
cwtl
cld
out
cltd
div
and
push
enter
out
push
sbb
stc
out
out
pop
xchg
pop
jecxz
jl
pop
call
pusha
fcomps
ficoms
shl
adc
sub
movsb
jae
xchg
fisttpll
testl
cmpsl
cli
add
lods
pop
inc
outsb
adc
imul
mov
gs
arpl
mov
jo
cmpsl
cmp
aad
gs
mov
sbb
sbb
push
pop
xor
sbb
mov
jg
aas
inc
add
push
add
mov
push
pop
bnd
mov
sbb
cs
mov
dec
add
icebp
xor
out
js
push
or
push
xchg
sbb
xchg
popa
or
or
push
test
mov
xlat
bound
pop
lahf
xchg
nop
and
cmp
adc
out
sub
xchg
push
mov
push
shl
test
ret
fdivrl
sbb
xchg
in
xchg
xchg
inc
adc
cltd
xor
pop
cli
sbb
ss
arpl
xchg
std
inc
andb
and
ds
pcmpgtb
lea
dec
inc
mov
repz
pop
mov
es
fnstcw
stos
push
adc
inc
fcmovnu
into
xchg
js
js
cmp
pop
inc
mov
inc
scas
and
sbb
stos
in
add
imul
jne
call
xor
jnp
or
inc
cmp
test
scas
test
sti
cltd
mov
mov
add
mov
imul
out
adc
lods
cmpb
out
mov
dec
sbb
arpl
sub
adcl
popa
lock
cmpsb
inc
pop
lret
fimuls
jl
push
jo
xor
clc
aad
lahf
aas
pop
test
out
cwtl
ja
shr
mov
jg
mov
lret
addl
adc
pop
insl
xor
push
add
push
push
jmp
sub
in
and
frstor
ds
aas
daa
dec
mov
mov
cmp
cmpsb
ljmp
pop
aam
mov
mov
pushf
sbb
icebp
xor
sub
jmp
pop
jle
xchg
rorl
aad
int3
adc
mov
aam
aaa
push
clc
orl
lds
fsubrl
popf
sbb
dec
and
int
outsb
stos
out
cmp
shl
add
es
sub
mov
adc
maxps
addr16
and
dec
xchg
jbe
or
inc
pop
imul
loope
aad
loopne
icebp
and
packsswb
pop
icebp
pop
add
lcall
pop
ficoml
repz
mov
movsb
sub
and
lret
xchg
xchg
mov
cmpsl
cs
add
cmpsb
mov
add
mov
sub
cmp
mov
mov
fwait
cli
push
xchg
int3
cmp
and
addb
mov
mov
shll
imul
scas
push
or
jp
insb
test
cmc
cs
push
dec
mov
push
jge
xchg
cmp
lahf
cmpsl
pop
inc
push
outsb
les
xor
aad
mov
sub
movsl
out
add
xchg
or
mov
mov
lock
xchg
dec
xor
notl
cmpsl
ja
repnz
into
xor
fadds
fcoms
aas
lock
outsl
push
push
mov
sub
inc
pop
popa
movsb
insb
aam
mov
es
test
sti
fiaddl
cli
repnz
popf
test
fwait
lea
mov
sahf
aas
stos
ljmp
mov
and
sub
movl
arpl
loope
std
xor
das
out
xchg
dec
lods
sbb
stos
shrl
pop
repnz
outsl
mov
icebp
xlat
int
shlb
mov
pop
push
mov
outsl
sub
xor
adc
push
mov
add
cmp
mov
cltd
and
mov
jle
xor
das
xchg
or
inc
nop
es
pop
lds
in
fcoms
fistpll
rcrl
xor
xchg
or
mov
or
and
adc
pop
repz
jge
cmpsl
pop
aad
in
mov
xchg
and
push
pop
cmpl
movsb
rcrl
je
sub
outsb
outsb
sub
xchg
pop
outsl
push
mov
mov
fildll
jg
or
mov
jnp
push
loope
cmp
jecxz
mov
cmpsb
add
data16
push
mov
cmp
pop
adc
cmp
in
jl
pop
hlt
imul
inc
mov
mov
fdivl
aaa
adc
fisttpll
push
test
mov
sarb
and
std
lock
rol
mov
pop
sbb
xchg
ljmp
push
and
loop
divb
push
jmp
fs
adc
stos
lahf
add
xlat
sub
mov
and
imul
cwtl
fnstsw
fdivrs
pop
push
leave
ret
in
inc
clc
and
push
arpl
mov
andl
ret
or
or
sbb
notl
imul
mov
jnp
jge
mov
mov
or
mov
enter
or
push
inc
pop
cld
or
std
scas
loop
test
sub
cld
outsl
jno
leave
dec
add
xlat
lahf
cmpsb
mov
into
jle
popl
lods
repnz
rolb
icebp
test
xor
pop
push
popl
add
mov
jb
pop
xor
shll
push
sbb
mov
xchg
pusha
insb
inc
xor
cmp
pop
imul
jo
lods
fiadds
ljmp
in
sbb
pop
insb
adc
lcall
aaa
push
cwtl
es
mov
adc
mov
aas
in
push
push
cmp
or
jno
xchg
and
or
std
sub
push
jo
mov
and
imul
fsubrl
jns
pop
cs
clc
mov
ja
cmp
xchg
xchg
ss
cmpsb
icebp
pop
jnp
insl
lds
mov
xchg
mov
jp
or
rorb
or
xor
push
pop
mov
gs
cmp
out
in
mov
enter
mov
in
push
xor
clc
fists
jp
add
and
sbb
mov
sti
push
pusha
fildll
adc
ss
xchg
hlt
dec
cmpsl
repz
jne
sbb
pushf
cs
mov
mov
adc
imul
jl
clc
insl
or
mov
jne
sub
mov
xchg
add
mov
pop
push
stc
cmpsl
jnp
inc
or
push
pop
mov
dec
push
je
bnd
out
testb
mov
stc
xchg
out
test
rcll
sbb
and
pop
jne
in
lcall
mov
addl
out
in
shlb
mov
mov
push
cmp
xchg
int
gs
pusha
enter
xchg
and
jae
lods
out
outsb
xor
hlt
pushf
or
jns
ret
into
xchg
mov
jae
inc
adc
push
fstps
out
adc
clc
mov
and
sub
xchg
mov
pop
popl
jno
sub
jnp
test
out
cs
icebp
icebp
sub
rol
xchg
popa
cmp
dec
nop
test
mov
dec
rorb
push
incl
ret
sub
cmp
enter
sub
add
aaa
dec
add
div
int
fists
xchg
push
or
sub
xchg
out
sahf
dec
pop
adc
fdivl
ds
out
xchg
jle
shl
loopne
lret
dec
bound
xchg
test
fwait
out
xchg
pushf
dec
test
cmp
in
loope
sbb
idivb
shrb
push
les
mov
add
jmp
sbb
sbb
icebp
repz
xchg
in
push
stos
and
icebp
mov
sbb
ds
cmp
adc
or
adc
cmp
add
sub
sti
dec
mov
ja
imul
mov
jg
push
pushf
movsl
adc
sub
inc
shlb
cmp
or
mov
sti
sbb
lds
imulb
mov
pop
imul
jo
add
mov
pop
push
pop
adc
jmp
pop
roll
xor
popf
xchg
push
cwtl
and
sbb
mov
loopne
cmp
or
out
sti
mov
daa
pop
out
pop
adc
out
or
jp
xor
inc
jge
and
jns
ret
jl
iret
fnstsw
stos
jae
fs
adcb
push
lret
and
out
adc
in
jmp
lret
cmp
mov
dec
sbb
sbbb
out
lret
mov
mov
lcall
sub
addb
add
nop
in
fists
syscall
jp
mov
cmp
sub
cmpl
lret
icebp
or
sub
es
jge
testb
sub
mov
xchg
sbb
dec
cltd
rolb
pop
leave
loop
ret
push
fisttpll
lret
movsl
hlt
push
mov
sub
aaa
push
cmp
les
xchg
jge
mov
fldl
mov
in
jmp
test
add
push
and
pop
add
and
gs
xchg
xchg
dec
test
dec
sub
inc
push
in
jge
dec
push
inc
shlb
mov
loopne
fildl
and
aaa
mov
sarl
lods
mov
push
int3
js
xchg
mov
repnz
add
in
repnz
mov
dec
mov
pushf
xor
int3
sub
jmp
cld
lds
lds
jecxz
pop
inc
inc
jne
int3
sbb
scas
push
mov
cmp
bnd
out
lcall
lds
pop
xor
xchg
imull
pop
cmpsl
lcall
cmpsb
jp
adc
dec
popa
lret
and
dec
hlt
cmp
jmp
into
or
or
mov
adc
aad
push
gs
or
inc
lods
mov
pusha
out
dec
aam
pop
mov
pop
ficompl
lahf
mov
or
pop
adc
jo
call
sbb
je
fnstsw
cmpsw
pop
lods
loope
fcmovnu
sahf
dec
scas
sarl
out
lods
rcll
cli
cmovle
pop
cld
sbb
sahf
xchg
loope
es
std
imulb
ret
push
mov
iret
jnp
pop
xchg
mov
daa
xchg
popf
jae
dec
mov
and
cld
mov
hlt
fwait
xor
adc
dec
aaa
and
dec
push
adc
cmp
xor
dec
jge
xchg
movsb
xrelease
mov
adc
xchg
out
adc
enter
loop
pop
frstor
inc
adc
loope
int3
in
rorb
out
mov
js
mov
adc
xchg
ficomps
push
mov
dec
jbe
push
in
xor
xor
pop
xchg
mov
inc
nop
add
xchg
scas
dec
orb
or
int3
jmp
divl
int3
or
cmpl
cmp
inc
pop
mov
cmpsl
les
cli
sub
pushf
lods
and
jmp
push
lcall
jbe
fdivp
inc
pop
xchg
outsb
pop
cmpsb
push
sbb
notl
dec
and
aam
xchg
aam
or
adc
lds
cld
jle
adc
sbb
arpl
pop
out
mov
loop
dec
sub
mov
dec
mov
jge
int3
aad
and
xor
in
sbbl
js
mov
push
std
cmpsl
loopne
std
push
nop
push
push
jne
mov
repnz
and
into
inc
inc
inc
and
je
ja
movl
loopne
les
xchg
sbb
xchg
push
es
mov
ficompl
int3
push
je
neg
lahf
xchg
fwait
sub
ficoms
jbe
test
add
insl
pop
jno
mov
and
inc
cwtl
mov
xchg
push
or
ja
jl
lret
dec
stos
dec
adc
aad
in
test
jl
scas
ret
int3
jo
in
bound
and
ret
std
mov
sbb
scas
dec
arpl
insl
add
push
gs
popf
adc
imul
sub
xchg
lcall
xor
cmp
add
xor
jo
mov
or
sbb
and
and
fbstp
lock
xlat
add
fsts
inc
pop
jle
sbb
cli
sbb
cli
test
or
adc
jmp
cs
add
cmp
mov
or
aad
and
mov
jno
fs
and
push
shlb
or
dec
mov
jle
aad
ret
scas
dec
in
cld
xchg
xorl
outsl
xlat
dec
pop
mov
xchg
inc
stos
sub
test
pop
mov
mov
sbb
pop
and
cmp
imul
jne
and
xorb
and
jb
sub
push
movb
dec
mov
out
sti
cltd
mov
push
data16
mov
cli
hlt
or
pop
test
outsl
int3
pop
jnp
sahf
xlat
xlat
fnsave
clc
cmp
lahf
jg
mov
add
add
add
shll
jmp
push
hlt
or
jo
or
jo
sub
fwait
test
or
inc
stos
push
jp
fildl
jecxz
insb
push
dec
or
sub
lahf
jmp
xchg
hlt
fdivrl
pop
test
aaa
mov
scas
mov
pop
idivl
jns
dec
fwait
jo
addr16
mov
mov
aas
cmp
mov
inc
push
pop
jmp
aas
push
insl
lahf
hlt
out
outsb
lcall
sarb
push
lret
push
sbb
das
adc
adc
push
adc
sbb
push
cmp
pop
test
xor
sbb
in
testl
lds
sahf
sti
sub
cld
mov
imul
mov
rcrb
xlat
xchg
jbe
mov
and
addb
into
lds
nop
leave
rcrl
cltd
aas
xchg
scas
jnp
push
dec
insb
dec
fcoml
cmp
pop
dec
movsb
dec
popf
aad
mov
add
out
lret
enter
loop
push
daa
sbb
imul
and
and
dec
iret
test
push
clc
sti
and
mov
lahf
test
xor
or
je
adc
jns
adc
add
xchg
xor
push
repz
mov
fsub
xlat
ret
sarl
or
xlat
sub
push
icebp
add
cmp
lret
lahf
jno
jmp
cld
iret
jne
in
movsl
mov
mov
lahf
testb
ret
int
jp
push
cmp
xchg
xor
sbbb
cmpsl
dec
xchg
pop
out
sbb
cmp
shll
rcrb
sbb
fildl
pop
push
push
xchg
das
xchg
sbb
inc
mov
or
loope
and
or
negl
icebp
and
adc
movsb
rclb
cmp
adc
sub
fcmove
outsl
and
rcr
cmp
inc
fcomps
push
loopne
mov
ficoms
enter
pop
jmp
bound
pop
mov
mov
bound
or
mov
mov
shll
cmpb
push
rolb
out
mov
mov
jo
lret
adc
ds
dec
rcll
and
popa
sbb
jmp
outsl
and
inc
jmp
xchg
pop
sbbb
add
dec
mov
addr16
jmp
dec
jge
or
sbb
xchg
mulb
clc
lahf
dec
sub
mov
loop
shl
mov
insb
jecxz
pcmpgtd
jmp
pop
pusha
jb
fprem
in
and
sbb
ficoms
jg
les
fwait
add
or
push
pop
jle
fwait
mov
stos
dec
xchg
inc
ss
loopne
dec
mov
cmp
ret
add
sub
clc
sarl
in
xor
sub
sub
loope
or
testl
jge
xchg
subb
jp
clc
inc
push
lret
imul
out
dec
pop
movsl
shll
add
outsb
sbb
cmpsb
dec
cmpsb
arpl
imul
xchg
lods
pop
sbb
data16
cmp
fs
std
mov
mov
xor
dec
jge
inc
scas
inc
push
adc
test
xchg
sbb
fdivr
jmp
and
or
add
push
imul
or
leave
lret
sub
rep
jle
cmp
je
lock
imul
jne
cmp
call
lods
fldenv
into
les
cs
aad
xchg
test
inc
nop
cmp
inc
inc
movsl
xchg
imul
sub
inc
shrb
sub
jl
fucomi
pop
inc
test
adc
push
aam
mov
add
lods
jge
dec
andb
adc
mov
inc
jge
lret
and
aaa
outsb
cmpsl
xor
ret
xchg
mov
sub
loop
scas
jb
gs
pushf
stos
repz
adc
movsl
sub
jp
loope
in
lahf
sti
jmp
scas
mov
jns
outsl
call
out
das
ds
punpckhwd
out
icebp
mov
stos
scas
addr16
jnp
ljmp
push
xor
sti
shll
movsb
movl
and
lds
std
mov
jne
lcall
ret
jb
jns
jl
cmp
pop
and
jo
test
mov
std
decl
xlat
jle
xchg
push
scas
xlat
jo
adc
ds
jae
pop
repz
jno
insl
dec
dec
dec
push
sbb
pushf
xchg
fwait
mov
xchg
test
dec
jmp
inc
add
inc
push
test
in
lods
stc
mov
ror
jo
fwait
outsl
cmp
jb
mov
icebp
out
bound
push
push
pop
pusha
aad
and
dec
or
push
dec
iret
dec
adc
sbb
lahf
mov
lahf
sahf
cmpsb
lods
lret
inc
push
fmull
fbld
sbb
inc
jecxz
mov
and
or
negl
add
lds
je
adc
cmp
xchg
in
mov
outsb
test
rolb
push
xor
dec
lods
fs
sahf
inc
fisttpl
jle
hlt
mov
leave
loop
scas
push
push
gs
out
pop
cld
popa
cmpsl
stc
push
and
cwtl
loop
sbbb
inc
jno
xchg
adc
mov
rclb
fists
dec
push
adcl
xchg
mov
push
es
cmp
jge
lds
jno
dec
sub
adc
add
jns
add
sti
and
les
test
dec
fldcw
jo
sbb
mov
push
test
shll
out
add
mov
call
xor
mov
movsb
in
js
pop
filds
sub
aaa
ds
outsl
lahf
xchg
ja
es
int3
sbb
xchg
pop
ss
mov
lret
dec
push
pop
mov
xor
jae
repnz
pop
mov
inc
dec
xchg
xchg
push
pop
xor
or
aaa
adc
loope
mov
cltd
out
mov
lds
xchg
out
test
in
adc
jge
dec
ds
mov
xchg
ljmp
sbb
xor
pushf
sub
ror
adc
pop
mov
push
lea
sbb
sub
sbb
lock
jp
lock
push
test
orb
mov
jmp
int3
sub
and
add
aas
jg
divb
test
bound
shrl
add
mov
stos
and
clc
xchg
test
jbe
out
jb
aas
std
out
movsb
adc
aaa
aad
push
fdivr
mov
imul
dec
dec
popa
xchg
cli
jle
lock
stos
jl
or
inc
test
std
rcr
pop
or
mov
loope
stc
mov
adc
pop
mov
xchg
inc
push
add
adcb
xor
jno
shrb
addr16
imul
out
jmp
xor
xchg
fcmovb
fs
xorl
scas
ret
scas
sbb
js
je
mov
out
jecxz
cmpsb
gs
or
xchg
sub
test
incl
and
sbb
sbb
sub
shll
push
icebp
clc
fldl
mov
mov
jmp
pop
sahf
sbb
jl
clc
inc
mov
dec
leave
mov
cwtl
or
or
out
pop
out
outsl
push
ss
xor
cmp
jb
cmp
repz
fs
jns
add
shl
or
into
imul
mov
and
or
pushf
xchg
jae
dec
sub
sbb
cld
out
stc
inc
stos
leave
xchg
je
pushl
push
out
ret
fisubs
adc
push
pushf
jns
jno
push
ja
js
in
test
in
fdivs
or
scas
mov
jp
sbb
sbb
loope
out
pop
or
dec
push
cmp
stos
and
fdivrp
sub
scas
xchg
jb
cmpsl
stos
push
loop
adc
cmp
mov
xchg
xchg
or
sub
bound
int
scas
leave
jae
jno
push
test
insl
loopne
imul
cld
cmpsb
inc
sbbl
loope
inc
cmp
cmp
ret
arpl
sbb
cli
mov
repnz
adc
js
mov
andl
and
add
shrl
cmp
push
xor
jb
xchg
pop
sub
rcl
dec
jns
pop
push
out
insb
aam
push
mov
aaa
insb
and
gs
pop
arpl
scas
lock
nop
xchg
mov
or
xchg
shr
imul
add
clc
or
stc
cmp
xor
les
in
mov
sahf
outsl
jnp
push
xor
inc
loopne
xchg
add
call
push
sub
pusha
lods
jb
inc
ret
dec
inc
sbb
loopne
sbb
jno
ret
outsl
xor
cmpsb
clc
mov
push
and
pusha
icebp
adc
cmp
pop
rcll
cli
lock
jns
rorl
cld
and
jl
test
xor
inc
outsl
enter
inc
fcom
clc
mov
in
xchg
jno
out
adc
xlat
jno
ja
sub
cli
push
inc
js
lret
negb
movsb
cmp
sbb
cmp
xor
sbb
insl
push
push
pop
sarl
push
lods
jmp
pushf
lcall
dec
shl
rorl
je
cwtl
outsb
clc
jecxz
sub
adc
cmpsl
and
push
cli
cmp
mov
sub
cmpsb
cmpsb
sub
sahf
mov
jp
mov
mov
fwait
iret
ds
fidivrs
jns
and
in
xor
sub
pop
sub
cmpb
cltd
push
fisubrl
and
xor
inc
scas
sub
push
loopne
jns
neg
sub
ds
inc
mov
push
xchg
and
mov
and
les
lock
fists
push
inc
in
push
push
inc
imul
into
xor
xchg
testl
adc
inc
jbe
out
aaa
enter
pop
mov
cmp
dec
lret
lahf
push
enter
stos
push
rol
fwait
jae
rorl
out
dec
cltd
imul
lahf
loope
les
lcall
xlat
out
sbb
icebp
mov
mov
inc
or
or
call
aad
int3
sbb
repnz
xchg
or
xor
out
nop
scas
fcoms
jmp
push
leave
imul
mov
add
gs
inc
add
push
fs
add
cmp
bound
enter
js
stos
sub
fbld
lahf
test
or
imul
add
jo
dec
scas
popa
arpl
and
cmp
ljmp
mov
lret
xor
pop
xchg
divl
cmp
jnp
lods
mov
or
ja
push
stos
push
loope
in
std
sbbl
push
or
aaa
lret
nop
xor
inc
je
out
adc
xor
or
rcr
aad
notb
fbld
push
inc
int3
sbb
jecxz
dec
pop
in
shlb
popf
dec
jne
and
ror
mov
enter
loopne
lea
fsubl
mov
or
dec
aam
adc
scas
lret
fdivl
sub
pop
jne
stos
in
int
jp
dec
mov
incb
xor
sub
in
add
lret
sbb
push
sbb
and
pop
add
lret
ljmp
push
and
jmp
push
or
pop
push
test
inc
add
test
push
xchg
cwtl
or
inc
data16
inc
mov
sub
fcomps
sub
mov
ja
aad
cmpsl
dec
data16
loop
popa
xchg
imul
loop
and
push
dec
sbb
adc
push
ljmp
iret
dec
dec
test
adc
add
loopne
add
addr16
pop
sub
pushf
jo
icebp
jne
push
add
lods
mov
out
shl
dec
jge
xchg
pop
popa
mov
jo
leave
jg
pop
aaa
mov
mov
decb
sbb
daa
int
shll
test
stos
xchg
cwtl
sahf
adc
mov
pushl
jo
xchg
dec
idivl
sbb
or
frstor
inc
test
pushf
jmp
in
mov
sar
orl
adc
das
dec
xchg
out
bound
aad
in
data16
outsb
mov
and
add
push
push
lcall
inc
bound
out
movsl
lock
fsubrl
std
or
inc
lea
cmovo
scas
sahf
mov
sbb
test
mov
btc
dec
sbb
into
mov
adc
cmp
or
push
pop
or
repz
ja
add
loopne
popf
dec
push
addr16
aas
cs
sarl
popa
mov
aad
cli
add
test
jno
mov
sbb
rcl
int
mov
xor
xchg
sbb
in
jnp
sti
das
push
cli
imul
sub
clc
xor
iret
pop
out
inc
shll
xchg
lock
cltd
cmc
test
pop
jle
lods
xor
imul
in
jae
jb
mov
xchg
rcr
xchg
adc
into
lock
punpckhwd
fdivrl
enter
or
fwait
in
xor
and
dec
dec
sub
bound
cli
mov
inc
pop
or
fcompl
sub
add
dec
ret
inc
data16
stc
push
xlat
mov
mov
adc
and
dec
into
les
and
vmulsd
xlat
js
inc
inc
xor
test
stos
cwtl
std
mov
mov
cltd
jb
push
jns
jae
pusha
cmp
add
mov
cmp
mov
push
pop
outsb
jmp
sub
add
push
pop
jge
pop
js
xor
rcrl
dec
add
ljmp
sahf
jecxz
mov
pusha
mov
mov
inc
jo
bound
push
ja
cltd
sub
mov
stc
push
mov
pop
ret
add
mov
repz
mov
jp
insb
adc
push
push
icebp
fwait
or
mov
pushf
adc
xlat
xchg
scas
jae
jmp
cmpsl
inc
call
inc
cs
mov
adc
packssdw
das
inc
bound
push
out
jle
inc
push
pushf
rcrl
sbb
pop
pop
xor
push
ja
cs
mov
rcrl
scas
clc
daa
ficompl
pop
in
sbb
xor
leave
movsl
aam
xchg
push
dec
add
shll
negb
adc
dec
push
sbb
ljmp
push
xor
scas
sbb
into
insb
insb
push
out
sbb
pop
sbbl
cli
test
nop
in
jmp
xor
adc
sbb
sub
pop
arpl
test
mov
adc
sub
rcr
outsb
push
inc
mov
mov
jmp
mov
xor
mov
fcmovnu
es
das
mov
fs
ficoms
cli
jbe
in
les
pop
divl
lea
fidivrs
addl
movsb
xchg
imul
dec
out
cwtl
jp
inc
in
cltd
xchg
movsb
dec
cmp
ja
push
ret
mov
loope
pop
pop
jo
sbb
xor
daa
in
rclb
scas
pushf
shlb
mov
or
gs
lcall
int
inc
push
jae
push
push
es
inc
packsswb
shrl
pop
and
pushf
and
loopne
jae
fwait
sbb
jns
cmp
mov
out
daa
dec
adc
push
jmp
xchg
rcll
inc
popa
fcoml
mov
sti
push
dec
xor
test
jecxz
out
add
fdivs
dec
in
jno
add
mov
into
shl
sbb
inc
push
in
jno
and
or
cmp
mov
push
mov
push
sarl
pop
jle
in
jge
inc
lock
and
sub
movsl
pop
xchg
int3
mov
aas
add
std
mov
ret
out
les
jmp
aas
imul
arpl
sbb
xlat
jmp
fists
daa
das
mov
pop
sar
xchg
mov
push
cwtl
popa
and
dec
xor
daa
test
test
mov
arpl
inc
adc
and
std
sbb
test
mov
lret
or
call
cltd
sub
imul
pusha
inc
pop
add
jb
or
cmp
dec
nop
xor
and
mov
xor
inc
lret
je
es
push
push
dec
xlat
cmp
or
nop
mov
mov
adc
jnp
fistpll
mov
sub
enter
cmp
add
dec
push
mov
jmp
mov
push
push
repnz
xchg
cmp
je
and
inc
fistl
add
pusha
mov
ror
and
lret
pop
cmp
mov
jmp
jmp
out
sbb
add
mov
pop
clc
movsl
xchg
mov
sbb
fists
pop
sub
or
adc
adc
int3
icebp
cmp
pop
add
xchg
fwait
mov
mov
pushf
inc
mov
push
dec
iret
lret
cmc
js
jp
add
mov
aad
mov
and
aas
mov
cs
inc
cmp
push
ss
xor
hlt
xchg
subb
addr16
push
iret
ljmp
dec
jge
addr16
mov
enter
fsubrs
in
stos
addr16
fdivrp
pop
scas
je
pop
das
or
mov
jmp
js
sbb
or
ljmp
xchg
jo
inc
cmp
push
lds
into
dec
jecxz
out
orl
out
imul
popa
adc
push
test
and
pop
jg
aas
arpl
cmc
notb
push
mov
in
jne
fbld
es
jle
int
sets
cmpsb
push
cmp
sbb
mov
push
nop
fsub
test
idivl
mov
pop
test
imulb
push
xchg
movl
mov
add
push
cmp
mov
or
cmp
mov
mov
nop
xor
inc
pop
adc
test
mov
fs
mov
pusha
loop
daa
cmp
rolb
cld
ljmp
jecxz
mov
pop
mov
add
cmp
sbbb
or
mov
pop
push
nop
or
mov
movsl
xchg
ss
fwait
loope
lahf
clc
aas
sti
rcl
push
pop
cmp
sub
pusha
flds
shlb
pop
mov
inc
adc
adc
fisubrl
lea
mov
cmpsl
xor
stc
xorl
or
cmp
pop
ficoml
clc
out
sbb
fsubl
pop
add
sub
test
out
xchg
cli
xchg
xor
inc
mov
dec
pop
daa
jecxz
and
aam
lret
dec
cltd
data16
mov
cmp
xchg
mov
adc
mov
lock
and
lahf
data16
stos
push
ja
push
mov
outsb
push
mov
fldl
movsl
xchg
pusha
lds
xchg
arpl
out
mov
and
cltd
push
inc
aaa
jo
add
test
and
ja
mov
and
mov
inc
dec
sub
push
sbb
pop
pop
fs
xchg
aas
outsl
idivl
pop
pushf
push
or
xchg
cmpsb
dec
les
bound
add
pop
push
xor
dec
pop
push
pushf
pop
mov
cmpl
jmp
xchg
inc
ffree
mov
cmp
cmp
sub
outsb
pop
addb
mov
test
jg
mov
shll
adc
pop
add
in
ret
popl
adc
aam
push
cli
lods
or
push
out
push
rclb
and
imul
out
xchg
xlat
mov
fisubrs
cli
jae
insb
or
rcll
iret
sahf
gs
aam
es
pop
shll
sar
cmp
or
or
and
daa
and
or
shrl
incb
fnstsw
xchg
rorb
cmp
push
jne
mov
aas
gs
mov
xor
jne
ds
fs
push
xlat
mov
add
hlt
out
test
and
xor
pop
js
in
pop
jbe
lret
mov
addr16
sbb
and
stos
inc
sbb
and
ret
out
cmp
out
jno,pn
push
pusha
inc
mov
cmp
sub
daa
inc
add
in
and
ficompl
stc
stos
js
dec
mov
sbb
pop
mov
adc
xor
lods
jmp
int3
out
addr16
clc
rcl
adc
dec
inc
mov
xlat
and
aad
sub
inc
imulb
les
mull
inc
fnstcw
orb
inc
idivb
jb
push
ret
aaa
lods
lret
loop
cmp
daa
rcrb
add
out
add
sub
inc
sub
js
add
jbe
sbb
add
pop
dec
xor
div
xlat
mov
out
adcl
fisttpll
in
or
jb
addr16
aam
sarb
sub
sub
rorl
dec
push
pushf
mov
fstpl
shrb
mov
add
inc
mov
xor
add
jae
out
or
add
xor
pop
inc
xchg
sti
xchg
mov
push
cmp
roll
xchg
mov
arpl
daa
add
dec
mov
lret
pop
sub
and
dec
enter
sub
push
ret
cwtl
cltd
cld
adc
idivb
cmc
pop
dec
xor
jbe
cli
lret
add
fists
daa
imul
push
xchg
stos
mov
cmp
movsl
mov
jecxz
push
jmp
rcrb
jl
pushf
ja
jge
mov
jne
mov
push
mov
roll
mov
push
push
xchg
mov
jns
fistl
dec
dec
in
xor
dec
popf
lret
or
addr16
lods
test
jge
pop
movsb
fs
loopne
fnstcw
cmp
mov
mov
lret
das
adc
pop
inc
xor
outsl
mov
dec
add
jmp
or
sahf
imul
sbb
mov
mov
icebp
cmp
mov
lret
int3
lret
jae
imul
repnz
clc
sbb
enter
rcrb
xor
in
repnz
sbb
or
jp
push
rorb
xor
xchg
jle
arpl
cmpsb
inc
mov
push
sub
adc
and
or
dec
test
xchg
lods
jp
iret
in
pushf
dec
cltd
int3
add
outsb
jo
adc
sbb
sbb
sbb
icebp
jg
int3
ljmp
fwait
xchg
pop
aaa
dec
in
test
mov
lods
adc
in
lock
in
push
lods
fadds
or
repnz
addr16
ds
out
push
lcall
hlt
sarb
adc
mov
mov
stc
cmc
lahf
ret
push
inc
cmpsl
lret
xchg
adc
push
dec
pushf
adc
test
xchg
adc
xchg
icebp
mull
mov
push
lret
ljmp
out
sub
outsl
movsl
xchg
clc
repz
fst
add
adc
ja
or
mov
neg
push
xor
shr
jge
dec
shlb
shll
push
dec
adc
movsb
add
lret
xchg
cltd
jp
mov
lahf
insb
outsl
cmp
dec
mov
and
ds
test
jo
pop
mov
mov
in
sbb
xchg
repz
sbb
lods
mov
mov
popa
adc
stc
mov
rorl
add
push
mov
jle
push
mov
das
jp
mov
or
fs
mov
xlat
push
push
push
or
xchg
or
out
inc
mov
or
lock
add
out
push
sub
xchg
pushf
js
int
and
pop
jno
dec
adc
or
insl
jecxz
or
repz
or
int
xorb
cld
adc
cltd
ret
sti
dec
mov
ja
repnz
gs
inc
les
mov
fisubrs
and
mov
add
xchg
pushf
ljmp
insb
insb
repz
sub
jae
push
push
add
jle
add
repz
xchg
rcrl
in
jmp
xor
shr
add
xchg
call
push
sahf
jns
das
iret
mov
push
sbb
cmpsb
pop
test
mov
cmp
imul
mov
imul
icebp
adc
jbe
push
dec
inc
loop
add
pop
mov
jb
idiv
dec
pop
xchg
push
inc
inc
popa
mov
and
imul
xor
cmp
fdivrs
popf
outsl
ja
lods
pop
mov
nop
sbbl
push
rcll
outsl
iret
idivb
push
insb
mov
pop
loopne
sahf
aam
or
enter
jl
imul
call
jne
leave
cmpl
pop
adc
inc
or
shrl
mov
call
shr
pop
or
mov
adc
scas
cmp
orb
enter
out
lea
jae
pop
aam
adc
cli
push
push
xchg
call
mov
add
sub
mov
lret
xchg
and
icebp
pop
mov
xchg
pop
mov
jg
cld
hlt
push
lcall
xchg
sub
in
in
out
repnz
mov
loopne
mov
aad
xor
push
shr
or
in
outsb
or
hlt
jecxz
lahf
inc
lret
popa
xor
pop
push
je
cwtl
and
iret
mov
stc
out
mov
inc
push
mov
rolb
dec
mov
mov
nop
pop
stos
enter
jno
sub
ja
nop
xchg
fnstsw
push
adc
pop
ret
and
pop
xlat
shll
dec
pop
mov
pop
mov
or
clc
int
pop
xchg
in
xor
ret
pop
xlat
ds
clc
cmp
push
or
faddl
and
lock
jmp
ja
rolb
dec
sub
std
enter
fyl2x
jmp
addr16
cmp
sub
jmp
lret
jne
ja
ret
outsb
adc
jne
inc
sub
mov
push
not
cmp
adc
shlb
les
dec
xchg
inc
sbb
or
ja
mov
iret
xor
mov
xlat
mov
add
dec
push
mov
js
fs
adc
adc
jp
mov
ffree
cmp
int3
popf
iret
dec
and
sahf
fnsave
call
xchg
push
scas
mov
xchg
cmp
stos
cmp
nop
or
fs
out
push
jns
pop
rcr
inc
xlat
inc
outsl
adc
out
orb
outsl
jbe
add
inc
test
pop
movb
cld
adc
pop
clc
cmpb
inc
add
mov
fstp
mov
movsl
fwait
loop
aaa
dec
shrb
add
xchg
mov
xor
sub
sbbb
shll
cs
cmc
mov
sub
inc
sahf
push
je
fcmovnu
ds
cltd
jnp
adcb
and
je
push
adc
imul
inc
push
clc
pop
enter
mov
test
ffreep
js
mov
inc
and
mov
push
xchg
sbb
xor
xchg
out
or
mov
cli
push
cmp
lods
outsl
stos
push
or
les
leave
pop
pop
ds
pop
ja
jge
push
rdpkru
push
push
test
outsl
pop
xchg
lods
ret
hlt
pop
or
fbld
push
pop
and
je
fidivs
jnp
sbb
push
mov
inc
jo
out
inc
mov
adcl
sahf
mov
sti
lea
ds
adc
into
sub
xlat
adc
xchg
out
shlb
bound
inc
idiv
popa
mov
xchg
in
rcl
das
lea
push
xor
jae
pop
arpl
outsb
add
stc
add
gs
cs
pushf
inc
lds
lods
lcall
mov
lds
sub
push
jo
mov
jge
insb
lock
pop
sbb
data16
test
fwait
adc
gs
push
out
ds
push
stc
inc
add
xchg
push
pop
das
push
or
push
mov
mov
popf
dec
push
popf
sbbl
inc
into
sbb
cmp
sbb
dec
jo
ds
fcmovne
fnstsw
push
adc
faddl
fwait
nop
sub
or
aaa
dec
xor
scas
out
punpcklbw
stos
lock
xor
dec
pop
add
cmc
out
lahf
lods
in
in
insb
hlt
pop
xor
nop
sub
push
push
out
xor
lret
cmp
mov
scas
and
push
pop
cltd
dec
scas
adc
cwtl
dec
popf
pop
xchg
cli
mov
repz
insl
imul
mov
frstor
mov
mov
mov
xchg
jbe
push
test
push
fnstenv
loopne
das
mov
or
pusha
or
dec
sub
xor
lock
inc
movsb
dec
inc
movsb
pop
lods
shll
push
fdivr
and
xchg
sbb
sbb
pop
jle
aas
pop
popf
fsubs
test
lds
mov
in
or
testl
or
mov
movsl
sbb
add
clc
rcrb
add
mov
mov
mov
push
mov
jns
or
jbe
push
in
cmp
pop
iret
xor
pop
lea
cmpsb
fs
pop
movsb
scas
cld
push
jbe
and
push
mov
lret
sti
fisttpll
xchg
lret
pop
mov
xor
cs
mov
imul
pop
arpl
xchg
push
jns
inc
fcoms
push
jne
mov
lret
push
rcrb
into
scas
cld
mov
mov
pop
scas
pop
or
adc
ret
jno
insl
repnz
jp
sub
inc
lcall
mov
mov
pusha
and
cwtl
adc
cs
inc
adc
imul
xchg
pop
les
push
shlb
sub
mov
adc
pop
or
adc
pop
mov
test
mov
mov
ret
mov
mov
fsubrs
in
out
loopne
or
stos
and
dec
rcrl
iret
ror
jl
jbe
mov
and
mov
mov
push
xor
imul
loopne
push
into
mov
sbb
test
mov
jno
daa
and
jmp
out
lea
fcmovbe
imul
push
push
xor
scas
aaa
jnp
dec
mov
xchg
test
jno
mov
push
mov
pop
pop
mov
mov
mov
loope
xchg
sahf
out
mov
push
loopne
add
fs
dec
mov
pop
xchg
outsb
add
dec
bnd
repnz
loopne
pusha
sub
jne
insl
jle
incl
sbb
push
lahf
js
add
in
pop
sbb
dec
mov
das
cmp
aad
xchg
push
ja,pt
ljmp
pop
data16
imul
push
pop
insb
push
loopne
pop
lock
pushf
insl
imul
mov
stos
cmp
ret
dec
and
cli
ss
jl
pop
gs
inc
pop
adc
xor
into
jo
xchg
cmpsb
xchg
std
jbe
jmp
inc
jo
scas
imul
out
cmp
add
push
pop
ficompl
ja
loopne
ljmp
and
xor
adc
fimuls
mov
fnstenv
xor
ret
leave
jbe
adc
hlt
inc
sbb
packssdw
data16
xchg
movsb
sbb
fst
mov
sbb
jne
nop
fsubrl
inc
cmp
sbb
mov
popf
push
jns
jmp
sub
pop
xchg
or
ror
push
jmp
mov
pop
jnp
pop
jl
lret
lods
test
mov
lcall
adc
jae
cs
sbb
mov
out
les
fwait
ret
dec
popf
or
push
int3
sub
push
data16
and
pop
das
aaa
jp
mov
je
lret
dec
es
jb
mov
add
or
je
push
jno
cltd
sarl
cmp
inc
test
and
sar
jg
add
xorl
repnz
push
xchg
jge
outsb
mov
xlat
push
sub
jp
xor
xor
insl
cs
sub
sldt
jmp
out
mov
jmp
cmpsb
xchg
pop
xor
decl
push
leave
fmuls
js
push
mov
sar
fdivs
pop
jae
rorl
stos
cmp
stos
repz
popa
push
mov
jg
lea
inc
cli
xor
sub
mov
sti
subps
cs
add
jg
je
jp
lea
mov
ror
lods
push
loopne
cmp
adc
cmp
sub
sub
mov
test
jo
cmpsb
daa
or
sbb
imul
jp
movl
push
mov
jge
jl
lds
and
mov
imul
icebp
mov
xchg
fxtract
iret
inc
mov
jae
mov
aam
adc
ja
popa
fisttpl
sbb
or
int3
call
mov
addr16
inc
dec
popa
addl
and
int3
and
idivl
shlb
lret
aad
sbb
ret
vpandn
test
test
or
add
dec
dec
cmp
roll
jnp
jo
nop
sub
clc
inc
test
push
fcompl
pop
inc
dec
push
mov
scas
test
fidivrl
out
mov
insb
jp
imul
mov
aaa
lods
mov
ret
cmpsl
adc
pop
sub
and
out
ret
and
stc
icebp
inc
addr16
mov
mov
shll
or
xlat
inc
not
gs
fsub
pop
sbb
or
in
mov
push
mov
repnz
xchg
xchg
pop
adc
imul
pop
mov
cli
jl
jmp
les
inc
jnp
push
sbb
pop
ret
mov
or
outsl
jl
clc
loop
add
inc
mov
and
dec
adc
aas
mov
lock
jmp
lahf
lcall
mov
push
loop
outsl
jge
int3
aad
mov
bnd
mov
mov
xchg
cltd
bound
or
xor
jmp
fsubrs
sub
dec
out
cmp
pop
and
pop
ds
sub
inc
sbbl
in
test
and
sub
dec
or
lahf
mov
iret
jns
sub
jnp
jno
out
into
popf
mov
movsl
mov
and
adc
sbb
fiadds
sbb
push
lods
pop
mov
xchg
cld
jecxz
lret
and
jne
sahf
push
pop
mov
jle
shl
dec
cmp
jecxz
push
push
xor
add
mov
aam
jge
xlat
pusha
lea
into
mov
adc
inc
sub
enter
cmpsb
movsb
push
sbb
jns
dec
and
pop
jns
cmp
aam
nop
inc
mov
dec
stos
mov
jbe
add
cld
mov
mov
xchg
loopne
dec
lock
movsb
std
nop
addr16
mov
mov
adc
mov
pop
and
movsl
pop
in
jecxz
mov
and
cmp
xchg
adc
in
mov
lcall
mov
cmp
mov
push
pop
lods
jmp
dec
jg
scas
xor
sub
xor
insb
out
fdivrs
sbb
lods
push
gs
stos
sub
mov
loop
sbb
pop
jbe
mov
mov
inc
mov
dec
mov
rolb
int
push
pusha
pushf
and
mov
sub
or
pushf
daa
add
adc
add
inc
xchg
push
and
add
test
sarl
pop
xchg
sbb
repnz
jae
imul
push
scas
jno
and
lds
and
and
jns
popa
das
xchg
fisubrl
scas
out
dec
mov
mov
jne
cmp
push
push
push
test
loope
dec
scas
pushf
cmp
les
into
cmpxchg
arpl
enter
shlb
xchg
inc
push
pop
mov
inc
jge
jmp
aam
out
mov
cmc
mov
adc
pop
les
push
sub
gs
jge
sub
in
test
adc
fcoml
ret
push
push
cmp
lock
jmp
mov
rcrl
roll
mov
mov
adc
sub
std
sub
pop
add
clc
call
sub
dec
mov
inc
push
divb
aaa
xchg
lds
in
int
out
out
xchg
ss
dec
data16
ljmp
dec
fcmovnu
xchg
div
lahf
out
bound
mov
lret
enter
or
mov
aas
lret
in
add
or
icebp
in
mov
and
adc
in
fbstp
and
outsb
push
shl
mov
adc
cmp
sub
out
ja,pn
adcb
ret
into
push
mov
jb
cli
fidivl
mov
shl
push
ja
add
outsl
xorb
xlat
pushl
xor
sub
sar
clc
loop
push
sub
test
push
call
jge
dec
mov
xchg
aas
aad
mov
xchg
in
ljmp
cmp
xor
into
int
push
sbb
sti
repnz
int3
popa
jmp
lds
adc
aaa
sbb
cmp
lcall
ja
xchg
sub
xor
and
negl
jle
add
rorl
daa
sti
popf
test
mov
out
pop
inc
jns
pop
hlt
mov
push
mov
push
inc
mov
mov
xor
shrl
pop
test
or
pop
sub
and
lcall
pop
scas
pop
das
mov
sub
pop
push
add
mov
stos
jne
js
inc
dec
mov
push
jg
and
mov
dec
loope
or
std
jp
add
test
jae
or
mov
insb
cwtd
movsb
popa
push
jl
sbbb
ds
lods
stos
adc
inc
mov
movsl
jno
cltd
stos
cmp
lahf
cmpl
pop
mov
mov
daa
cmpsb
outsb
in
icebp
scas
jp
xor
je
inc
pop
or
sbb
pop
insb
rol
lret
xor
cmc
repz
xor
es
and
cs
call
sub
scas
or
mov
cltd
ja
cmp
xchg
pop
or
push
cmc
test
dec
xor
lcall
mov
inc
jb
mov
stc
jg
sahf
inc
pusha
rcll
pusha
iret
push
lahf
repz
insl
adc
adc
xchg
in
jl
rcrl
jb
dec
bound
mov
dec
adc
pop
jp
int3
mov
loope
ljmp
pop
lds
sti
out
in
repz
fidivrs
iret
mov
ljmp
stos
pop
cmp
sub
mov
or
dec
je
add
lods
push
jno
mov
sub
iret
cmp
adc
repz
cli
dec
es
mov
xor
and
lret
mov
cltd
xchg
add
rcrb
cmp
mov
mov
sbb
xor
out
icebp
test
mov
sar
pop
insl
adc
in
movl
iret
rorb
jnp
sti
mov
dec
loopne
or
fs
aaa
jmp
in
mov
sbb
mov
or
cmc
jno
hlt
clc
mov
jno
aad
jmp
push
test
dec
xor
mov
enter
sub
movsl
mov
jnp
imul
jecxz
pop
int3
and
add
les
mov
mov
push
fcoms
mov
inc
popa
mov
out
pusha
fxch
and
call
push
ljmpw
mov
jae
mov
in
xor
push
xlat
pop
cmp
scas
aam
jg
aaa
mov
stos
mov
sub
aas
xlat
push
popa
lahf
add
ja
push
cwtl
repnz
rcrl
add
cs
mov
fmuls
enter
adc
jle
into
and
xor
mov
inc
mov
or
fs
fstenv
sbb
inc
jae
popa
cmp
mov
add
ret
cmc
addr16
das
sbb
or
add
jo
adc
fisttpll
mov
cmp
sub
dec
fildl
dec
jmp
push
sbb
pusha
lcall
sbb
int
cmc
lock
sbbb
sbb
movsb
push
call
jp
push
dec
or
mov
inc
fisubrs
cmpsl
cmpsl
gs
mull
xchg
fldenv
xor
dec
and
aas
ds
jne
jg
mov
cmp
je
popa
inc
pop
ljmp
mov
adc
xor
cwtl
cmpsb
pop
test
cwtl
cltd
arpl
pop
mov
inc
cwtl
fstps
jno
sbb
cmc
adc
repz
test
mov
and
sahf
add
movsb
mov
scas
insb
pop
pop
in
nop
cld
xchg
daa
dec
aaa
fdivr
test
inc
stos
xchg
clc
jl
xchg
icebp
pop
pop
xlat
cmpsb
rorb
mulb
lods
fnsave
inc
sbb
icebp
pop
aas
dec
adc
jno
sub
out
movsl
xchg
xor
sub
repz
fidivrs
or
int
fisttpl
pusha
xchg
pop
testb
movsl
push
push
adc
enter
cmp
arpl
aad
fs
stos
xor
dec
lods
sub
mov
inc
pop
pop
mov
inc
inc
xchg
inc
mov
adc
mov
ss
cmp
das
or
iret
lods
adc
jbe
ret
mov
sbbl
loop
bound
inc
sbbl
jns
es
std
outsl
movsl
push
pop
and
xchg
pop
jns
es
or
sbb
inc
cmp
repnz
loop
push
sbb
mov
imul
enter
ret
in
push
shr
and
jb
orl
cs
cmp
pop
mov
js
mov
inc
ror
stc
inc
jae
ss
testb
xor
std
and
shl
in
jmp
dec
adc
cmp
lock
dec
out
ss
inc
cmc
inc
loope
and
popf
mov
push
dec
sub
sbb
cmpsb
out
popf
xchg
lods
xchg
into
xchg
mov
and
iret
ds
insb
pop
mov
push
lock
pushf
and
jae
pushf
js
cmp
jg
xchg
inc
fwait
xchg
in
loop
adc
pop
dec
test
pusha
cmp
shl
cmp
push
or
int3
jnp
mov
cmpsl
mov
outsb
push
jnp
push
subl
ljmp
test
popl
or
jo
add
mov
insl
mov
std
or
loop
cmp
jg
test
mov
push
pop
sbb
js
inc
popf
addl
sbbb
sub
mov
xor
repz
mov
adc
loope
insb
xchg
lret
xor
jp
push
xchg
and
jnp
in
lcall
outsl
aaa
pop
mov
cmp
out
es
dec
push
xor
mov
repnz
dec
mov
inc
add
lods
sub
push
jbe
cmp
sub
mov
cmp
sub
jle
lret
mov
xchg
ja
addr16
xchg
pop
jno
subb
in
jae
in
mov
pop
sbb
subl
sub
ljmp
call
dec
xor
jno
out
sub
adcl
shrl
adc
and
sahf
lret
adc
popa
ret
cmc
fcomps
pop
orl
int
mov
push
push
lods
pop
jmp
out
ja
push
dec
pop
stos
pop
pop
or
sbb
scas
add
in
push
test
dec
push
out
sbb
mov
xor
rorl
dec
js
movl
cltd
or
mov
test
sbb
xchg
insl
or
push
cld
seto
adc
fdivr
jmp
mov
loope
stos
xchg
xor
xor
aam
mov
fdivl
sub
stos
clc
pop
insb
imul
pop
mov
ljmp
mov
outsb
cli
dec
fcmovnbe
mov
cmp
movsl
and
addb
lcall
mov
pop
addr16
push
call
push
rorl
popf
mov
test
nop
or
test
and
in
sarb
pusha
aad
inc
fnstcw
iret
sub
add
dec
fadds
mov
mov
mov
movsb
lods
dec
inc
orl
sarb
sbbb
cmp
push
ja
in
pop
xor
adc
mov
stos
lds
sti
mov
pop
inc
xor
xchg
xor
ret
orb
push
mov
jno
mov
inc
pop
or
cmp
in
rclb
sub
mov
cmp
dec
mov
xchg
mov
push
es
pop
leave
sbb
rcrl
push
add
fists
cli
call
mov
jp
mov
xchg
mov
adc
push
add
jle
arpl
enter
imulb
ja
and
loope
loopne
test
call
pusha
xor
pop
mov
sbb
insl
mov
jbe
pusha
xor
pop
sub
lea
rcrl
push
mov
or
adc
sbb
adc
jb
sbb
mov
fisubrs
lods
rcr
ror
icebp
insl
jno
ja
inc
dec
xchg
mov
dec
cmp
fsub
sbbl
sti
and
out
test
dec
mov
adc
pmulhuw
icebp
jmp
push
sub
fs
jl,pt
test
gs
cmp
mov
xor
and
adc
enter
xor
repz
icebp
scas
add
inc
mov
mov
lock
scas
iret
sbb
xchg
inc
xchg
push
inc
mov
cmpsl
mov
sbb
ret
jae
cltd
call
or
dec
push
loopne
xor
aam
adc
outsl
out
movsb
or
icebp
pop
dec
xlat
xor
inc
mov
sub
jl
stos
jl
mov
out
loope
daa
xchg
xchg
pop
arpl
pop
in
push
xor
inc
mov
cwtl
sub
sub
sahf
lock
test
mov
test
imul
dec
mov
lahf
pop
arpl
cs
xchg
push
dec
jle
pop
or
push
test
inc
cltd
adc
insb
and
xchg
andb
lock
orb
jp
inc
pusha
jo
aam
jno
lods
xor
mov
sbb
xchg
mov
in
inc
addr16
add
jae
sbb
push
inc
cli
ficoms
je
mov
xor
arpl
cmp
bound
outsb
repz
jnp
popa
insl
fidivs
insl
sub
lahf
or
cmp
in
leave
push
cmc
mov
scas
adcl
fdivs
call
add
nop
enter
out
cmp
std
cmp
inc
aam
sbb
jecxz
xor
push
or
pushf
push
xor
sub
ret
repnz
jl
dec
jns
push
frstor
cltd
gs
add
add
jbe
xchg
fcomps
sub
je
popa
mov
jo
out
mov
sub
pushf
dec
push
mov
and
jns
add
insb
cmp
repnz
testb
loop
push
mov
jbe
sbb
in
iret
sar
movsb
popf
pop
loopne
xlat
inc
aad
in
xchg
das
xchg
pmuludq
fsubrl
fstl
outsl
sbb
or
push
ja
adc
mov
mov
push
int3
repz
cmp
inc
loope
cli
mov
sbb
fsubl
push
rcll
fldenv
jp
ja
or
or
shr
dec
sbb
out
fstp
clc
movsb
bound
sbb
jb
cli
inc
and
retw
jle
jo
hlt
xor
rcl
mov
pop
jge
mov
mov
daa
inc
inc
jns
mov
inc
mov
push
shr
adc
mov
dec
lods
push
dec
cmp
out
cwtl
dec
pop
in
xchg
xchg
call
ss
shll
or
cmp
test
les
sahf
add
sahf
add
mov
cwtl
repnz
inc
stos
stc
out
mov
push
mov
test
jne
dec
cltd
testl
fidivrl
cmpsl
cmp
push
jae
xor
adc
daa
dec
das
into
das
pusha
and
jnp
and
sbb
fbstp
lock
cmp
and
pop
adc
mov
pop
push
mov
ja
jae
dec
cltd
or
in
pop
xchg
data16
std
je
leave
in
mov
mov
test
jp
lock
xor
fdivs
iret
in
stos
in
fisubl
scas
ja
push
mov
decl
icebp
pop
push
mov
loope
xchg
insb
add
test
es
in
or
fildll
jle
push
in
lds
inc
fmuls
shr
pop
mov
in
push
lret
inc
dec
jle
jns
add
sbb
das
inc
inc
jo
stos
mov
xchg
fcompl
popf
movb
ss
dec
adc
bound
fs
cmp
lock
ret
push
lahf
ret
and
adc
lods
fistpll
jnp
pop
enter
sub
mov
and
std
repz
js
pusha
shl
mov
adc
scas
hlt
push
pop
mov
inc
inc
dec
dec
imul
pop
fcomp
arpl
xor
sti
out
call
mov
inc
es
jnp
call
cs
repz
ret
mov
pop
ja
aam
xor
xchg
pushf
int3
daa
lahf
bound
fistl
jae
stc
jge
out
scas
into
rorl
adc
sbb
sub
fmull
jnp
cld
jnp
dec
mov
mov
mov
and
push
lods
mov
jp
lds
test
aad
pop
mov
fcomps
pop
mov
mov
add
popf
popl
mov
sub
pop
mov
ret
xor
test
or
xchg
mov
ds
mov
sahf
mov
imul
fs
orl
mov
bnd
pop
pop
inc
dec
fcoms
and
mov
enter
push
rolb
js
xor
xor
outsb
out
jo
aad
dec
lahf
dec
leave
loop
sbb
inc
std
adcl
int
sahf
sbbl
mov
mov
pushf
push
mov
pop
fsubrs
lods
cmp
xor
inc
mov
fdivrl
ljmp
insl
mov
inc
out
xor
and
out
nop
cmpsl
addr16
dec
sub
aas
xchg
cmp
sub
stos
fcom
xchg
dec
or
lahf
dec
lahf
in
mov
lea
clc
inc
insb
or
sbb
aas
or
fidivrs
mov
or
sbbb
outsl
sbb
or
jnp
adc
inc
push
stos
es
inc
pop
nop
add
int
or
sub
sub
lret
hlt
jg
xchg
mov
fsubrl
mov
dec
xchg
mov
mov
nop
dec
js
fdivrs
dec
xchg
push
daa
xor
sahf
inc
add
hlt
cmp
push
frstor
jg
sub
shll
nop
jp
lret
add
sub
cltd
loope
push
or
test
mov
dec
add
leave
mov
dec
xchg
rcrb
cmp
inc
in
test
lret
cmc
ret
stos
sbb
jp
sub
and
inc
iret
fnsave
cmp
mov
dec
shrl
lret
cld
jbe
cltd
fistps
icebp
outsb
insl
push
out
xchg
jmp
iret
sub
lcall
sub
call
nop
push
mov
les
jns
in
sti
shl
inc
popf
add
popf
adc
fwait
mov
andl
nop
pushf
out
lcall
inc
popa
test
fnsave
cwtl
lret
push
xor
jecxz
loopne
leave
mov
adc
arpl
sbb
xor
and
fs
mov
cmp
sahf
lods
adc
out
jge
lret
test
sbb
xor
add
lea
data16
imul
mov
enter
fisttpll
stc
pop
sbb
cmp
push
cmc
aad
loope
jns
push
orb
lock
mov
jno
sbb
cltd
lahf
pop
adc
mov
add
xor
sub
mov
pushf
je
std
jecxz
fdiv
clc
dec
xchg
dec
dec
pusha
ret
jo
call
push
data16
xchg
push
call
shrb
out
mov
push
pop
test
nop
scas
lods
inc
lods
pushf
ud1
outsb
nop
inc
jecxz
pop
icebp
roll
xlat
add
inc
pop
mov
out
outsl
idivb
fsubrs
cmc
inc
insl
mov
scas
repnz
lret
out
hlt
or
lret
decl
repz
jecxz
addl
fs
insb
test
pushl
jmp
push
rcrb
sbb
mov
cwtl
add
xor
aaa
adc
pop
mov
sub
jmp
lahf
jp
rcll
and
pop
push
xor
push
fwait
sti
lods
sbb
lock
adc
inc
mov
scas
fsub
jl
cli
lods
dec
sbb
iret
mov
and
pop
sbb
aaa
mov
lret
insb
dec
add
fwait
jge
aam
jg
mov
leave
xchg
testl
testb
push
loopne
es
dec
dec
push
mov
int3
lock
push
clc
gs
in
mov
adc
jmp
ljmp
lock
push
mov
out
add
adc
pop
inc
imul
out
mov
sahf
dec
inc
in
fstpl
loopne
jno
insl
lods
scas
inc
mov
push
jle
push
fwait
jge
jle
cwtl
lock
fs
rcrb
aas
jl
stc
dec
sub
icebp
jb
adc
repz
xchg
mov
mov
mov
loope
adc
xchg
xchg
fimuls
mov
and
push
shll
mov
incl
sub
mov
test
sbb
dec
into
jno
inc
repz
sti
push
and
lods
xorb
fcoml
push
and
daa
sahf
cmp
mov
ret
shll
fs
inc
pusha
jne
sbb
jg
adc
js
cmp
outsl
jno
pushf
add
call
test
push
jne
sbb
cs
repnz
sarb
sarl
pop
jne
add
sub
push
out
push
add
or
test
xchg
imul
shll
repnz
pop
mov
sub
add
push
ficoms
gs
shrb
xlat
push
xchg
data16
push
outsb
shll
pop
xchg
push
mov
inc
fs
xchg
stos
lcall
orb
fs
xchg
inc
mov
xor
xchg
sub
push
out
push
inc
xchg
jmp
sub
sbb
push
push
pop
mov
lret
cmp
rclb
mov
in
cmp
jmp
xor
out
repnz
sbbl
clc
jl
leave
jg
dec
ret
mov
aad
les
popf
test
or
or
pushl
repz
cmp
mov
xchg
jp
xorl
push
dec
addr16
push
scas
data16
mov
lret
pop
xacquire
in
mov
aad
and
arpl
iret
lods
dec
mov
push
pop
test
cli
ds
negb
mov
cs
cld
xor
and
stos
adc
scas
xor
sub
roll
pop
sub
lock
idivl
lods
xor
push
mov
ja
hlt
jae
enter
outsb
mov
cltd
sahf
jno
gs
xchg
insb
hlt
push
imul
addl
jmp
mov
xor
and
rclb
mov
cmc
push
dec
pop
fdivl
fwait
outsl
call
mov
sub
adc
sbb
add
mov
cmpsl
xlat
and
and
push
and
push
push
cli
ja
push
xor
push
push
cmpsb
scas
lods
add
je
out
jle
call
dec
addb
lahf
lcall
lret
and
js
repz
push
pop
push
je
mov
inc
inc
mov
pop
in
shll
push
nop
outsb
notb
je
out
data16
push
cmpsl
pxor
xchg
dec
mov
lahf
cmpsb
lcall
fadd
scas
dec
js
mov
jecxz
iret
adc
xor
hlt
xchg
sti
icebp
add
loopne
xorb
adc
adc
adc
mov
rcrl
in
leave
scas
insb
push
mov
mov
iret
idiv
cmp
lods
add
mov
cmp
adc
repnz
push
sub
mov
outsb
push
call
mov
jmp
cmp
data16
dec
shll
cmpsb
add
shlb
daa
push
or
call
dec
mov
mov
pop
pop
aam
mov
mov
dec
inc
aas
jg
fwait
add
ja
add
pop
cmp
dec
and
lret
shl
sar
mov
jb
pop
js
xchg
mov
pop
push
jno
out
xchg
data16
dec
mov
or
aad
jnp
cmpsb
mov
rorl
mov
loopne
pop
lea
xor
mov
inc
hlt
test
jne
sti
rcl
cmp
fxch
ljmp
jmp
push
jmp
mov
push
pop
jbe
mov
lock
pop
aas
inc
fstpt
cld
jge
and
mov
jae
jne
mov
jb
aam
je
inc
dec
int3
inc
sub
add
loope
imul
mov
inc
iret
pop
mov
sarl
pop
sbb
dec
les
adcl
lods
cmp
mov
mov
in
mov
sub
sub
ja
je
lret
sbb
daa
fcomi
and
xchg
jp
stos
out
insl
rorl
scas
sahf
pop
jo
adc
push
xchg
mov
xor
insl
cmpsl
lea
mov
add
test
add
push
cltd
cmpsb
cmpsb
sbb
cmp
hlt
pop
popa
ret
shrl
sbb
sbb
cmc
jns
pop
xchg
cmp
or
je
nop
movsl
cmc
adc
pop
mov
sub
mov
xor
lret
mov
pop
dec
or
push
push
pop
int
enter
push
loopne
insl
dec
add
lret
ljmp
aaa
aaa
adc
ret
cmpl
dec
pop
mov
scas
inc
sahf
jl
cltd
mov
leave
pusha
sbb
insl
xchg
aaa
stc
adc
addr16
cmp
mov
mov
mov
es
out
test
call
jl
fs
cli
fisttpll
mov
mov
loop
lock
cmpsb
sub
pop
cmpsb
repz
in
mov
mov
dec
add
jbe
mov
loop
sbb
sbb
popf
incb
cltd
pop
fsub
pop
ss
inc
aad
shlb
jl
ret
add
push
dec
pop
fwait
sub
push
fisttpll
jbe
movsl
ja
inc
hlt
pop
and
push
enter
or
jns
fscale
cmp
aad
cmpsb
and
jp
xchg
lret
fildll
shlb
cld
pop
negl
xor
add
ret
movb
leave
int3
sbb
in
cmp
test
dec
orl
mov
notb
jne
jge
mov
test
fdivl
jne
fadds
jle
or
scas
mov
movsb
add
aaa
cmc
int3
sub
sub
or
sti
repnz
fwait
adc
das
ja
adc
inc
test
inc
mov
cmp
adc
sahf
rolb
cmp
inc
roll
inc
sbb
and
stos
xlat
les
mov
adc
les
jmp
xorb
jae
push
mov
mov
imul
mov
fsubrp
scas
sbb
test
pcmpeqd
push
push
push
iret
mov
pusha
mov
xchg
fsubrs
mov
lret
addr16
lcall
mov
cmp
cmp
cwtl
and
imul
test
fwait
cmp
xchg
fnstsw
movb
cld
inc
test
lods
imul
pop
jnp
adc
sbb
and
imul
xorl
int3
mull
sbbl
inc
andb
xor
mov
sub
sbb
sbb
mov
out
mov
mov
ss
jno
pusha
shlb
add
fsubrp
popa
xchg
es
adc
sub
dec
xchg
xor
inc
ficoms
stos
inc
ja
repz
xorb
ja
mov
ljmp
mov
test
and
add
pop
jno
xorl
hlt
mov
lahf
pop
mov
dec
arpl
push
add
and
fstps
mov
jge
jmp
das
pushf
mov
xchg
push
jge
jnp
movsb
pop
fstpt
push
imul
test
adc
in
sbb
daa
sub
mov
ss
popf
shlb
cmp
lods
sub
dec
mov
stos
or
pop
mov
incl
gs
dec
sahf
cmpsl
fisttps
mov
mov
in
pslld
dec
inc
cs
nop
add
pop
pop
negl
push
fstps
mov
mov
popf
test
shll
mov
popf
jae
push
dec
nop
fldenv
inc
pop
mov
jb
or
and
xor
sbb
xchg
test
cltd
push
ljmp
cmc
and
sbb
jne
xchg
movsl
imul
fs
std
jmp
rolb
mov
insb
lcall
inc
lds
adc
int3
fxch
imul
or
fsubs
call
mov
shr
push
fisubs
lods
and
xchg
je
jle
mov
add
sahf
mov
arpl
test
popa
and
sub
add
lea
jmp
fcmove
inc
movsl
in
inc
stos
call
movsb
jb
iret
ficomps
testl
mov
fdivl
imul
or
inc
jne
addr16
jns
push
xchg
mov
jnp
gs
fsts
or
mov
out
mov
lret
arpl
inc
icebp
add
popa
sub
ret
int
push
clc
jno
or
fs
rcrb
stc
out
outsl
jb
stos
rorl
jle
xchg
mov
sub
gs
enter
xor
mov
outsl
fcomps
incl
in
sub
pop
xor
in
pop
and
jns
addb
xor
lds
je
inc
lea
ret
jo
data16
divb
xchg
stos
add
jecxz
push
or
push
loop
imul
xor
daa
stc
push
mov
mov
cmpsb
or
jmp
sub
imul
lcall
hlt
and
scas
sahf
loope
and
pop
std
xor
sub
arpl
out
adc
push
pop
jmp
dec
jg
fsub
addr16
sub
popa
stos
negb
mov
mov
loope
hlt
pop
ja
enter
mov
mov
push
int
mov
mov
inc
mov
cmp
mov
shrl
out
lret
xchg
dec
xor
loope
push
xlat
cltd
stos
cmpsl
xor
repz
fidivrl
jnp
lock
xchg
imul
sahf
shlb
js
shlb
jmp
push
pop
adc
push
fsub
fwait
jl
bound
adc
cmpsb
and
push
cmc
imul
mov
sub
fistpl
std
aas
ret
or
ret
ficomps
cmp
test
ja
int
in
jae
jae
inc
dec
dec
repnz
pushf
sbb
cmc
shll
icebp
xor
mov
std
or
addr16
and
cmpsb
scas
mov
add
dec
sbb
inc
adc
dec
into
popf
cwtl
mov
xchg
fwait
dec
movsb
ja
nop
xchg
fildl
mov
ds
lods
ficoms
mov
mov
xchg
lods
jnp
push
push
popl
inc
sbb
loope
mov
cs
mov
cld
add
and
lcall
mov
jl
or
call
cwtl
or
stos
mov
jo
mov
lret
lods
movsb
pop
mov
jmp
insl
cmpsl
aas
sbb
das
dec
add
xorl
mov
out
loopne
ja
aas
jns
add
mov
or
dec
movsl
das
aas
lods
jecxz
loopne
jmp
or
lock
and
lods
push
pop
bnd
push
mov
add
push
jecxz
or
in
xchg
fmull
xchg
and
ljmp
or
int3
cmp
lret
push
adc
pop
xchg
adc
xchg
mov
push
arpl
cmp
fs
dec
sbb
mov
and
cmp
push
rcll
mov
leave
mov
ror
bound
in
pop
mov
sahf
lret
push
movsb
arpl
mov
or
insb
mov
test
and
xchg
xchg
mov
cld
es
pushf
mov
dec
call
cmp
push
mov
ja
shrl
inc
ljmp
repnz
iret
sbb
negl
pop
jne
add
push
addr16
icebp
sub
dec
stos
xor
pop
inc
xor
ja
arpl
scas
ljmp
fwait
xor
jecxz
adc
ds
icebp
jbe
mov
and
iret
push
fisubrl
pop
aad
mov
mov
xor
xchg
pushf
pop
and
mov
cmpsl
add
lret
adc
jl
inc
mov
add
fisubrs
mov
shlb
inc
mov
xor
movsl
jno
frstor
rcl
mov
add
mov
in
push
in
push
xlat
aad
arpl
ljmp
pushf
subb
out
inc
stc
sbb
movsl
sub
cwtl
subl
lret
icebp
in
gs
or
inc
frstor
int3
and
scas
ror
pop
adc
aad
in
or
or
loop
cmpsb
cmp
imul
lret
flds
das
out
pushw
or
xor
adc
ror
repnz
int3
mov
sbb
fcmovbe
cmp
loop
pushf
arpl
jae
test
lock
mov
test
mov
xchg
adc
out
sahf
push
push
faddl
cmp
push
xchg
lea
in
jge
inc
push
xchg
or
add
xchg
lods
inc
or
jno
adc
loope
mov
sahf
mov
and
in
inc
in
and
daa
lock
jno
iret
gs
pop
push
pop
xchg
bound
adc
mov
nop
clc
leave
mov
mov
mov
loopne
das
mov
and
mov
fildll
cwtl
jnp
jp
sub
mov
fbstp
jmp
inc
and
or
test
xor
test
fnstcw
test
pop
mov
xor
aad
xchg
lret
mov
inc
lcall
popf
push
lds
push
call
mov
inc
mov
test
sub
and
aad
icebp
fisubs
cmc
fsts
cmp
repz
arpl
shlb
data16
std
mov
test
adc
call
mov
sub
insl
jp
xor
or
pusha
and
sar
mov
sbb
sbb
outsb
dec
cmpsl
xor
inc
dec
cmp
or
xlat
lcall
cmpsb
jmp
bound
sbb
iret
testl
and
mov
mov
jns
inc
sub
inc
icebp
sti
sub
dec
or
clc
inc
jnp
xchg
pop
mov
nop
cmp
jle
nop
outsl
dec
inc
lds
mov
cltd
xchg
and
xor
or
call
or
inc
mov
and
dec
or
iret
lock
out
push
ret
push
cmp
lcall
repnz
js
cmp
cmp
dec
cmp
into
pop
jne
pop
out
movsb
pop
data16
adc
jecxz
add
or
out
mov
lahf
inc
push
insb
in
cmpsl
aad
push
fisubl
cmp
xchg
movsb
scas
sbb
mov
std
je
andl
push
imul
jb
xor
xor
or
pshufw
inc
xor
aam
call
fiadds
jb
push
add
sbb
sbb
mov
lds
leave
adc
insl
mov
es
push
arpl
pop
shrl
pop
movsb
mov
and
jne
addr16
loopne
xor
mov
add
test
cmp
sbb
imul
pop
push
push
popf
nop
imul
mov
test
sub
mov
dec
inc
push
add
lock
sub
xchg
outsb
ss
add
fsubs
aas
mov
sbb
hlt
jmp
jno
mov
jae
jmp
xchg
pushf
jecxz
mov
sahf
adc
push
cmp
icebp
cmp
dec
and
push
fisubrs
sub
add
push
insb
jge
lods
adc
movsb
in
nop
aam
or
sub
mov
mov
lea
ret
std
inc
sub
pop
cmpsb
push
or
test
and
xchg
mov
sub
mov
push
mov
pop
roll
vpmulhuw
pop
sub
arpl
ficoml
xor
in
pushf
mov
testb
add
loop
test
add
cmp
lret
jecxz
inc
xor
push
xlat
cwtl
imul
dec
inc
stc
xchg
add
mov
mov
int3
test
sbb
pop
mov
mov
fdiv
repnz
popf
xchg
stos
cltd
addr16
inc
lds
ja
adc
std
lea
mov
bound
or
stos
aad
mov
dec
mov
pop
add
dec
mov
iret
shll
pop
outsl
xorb
dec
je
jmp
mov
movb
imul
stos
andl
jo
and
xchg
fisttps
scas
dec
je
mov
shrl
sub
fsts
sub
xchg
cmpsb
cmp
mov
fimuls
push
sarl
adc
sub
mov
ret
das
push
sbb
stc
sub
mul
pop
int3
les
jno
inc
cli
stos
lea
inc
and
jbe
shlb
out
sti
hlt
das
pushf
cmpsw
call
pop
clc
push
or
jns
xlat
aad
dec
sub
push
jp
fidivrs
aam
popf
pop
dec
lds
and
inc
sbb
insl
rcrl
mov
pop
or
jb
xchg
ljmp
push
jno
es
cmp
imulb
add
ja
jmp
fwait
mov
pop
xorl
add
sub
mov
test
in
push
jb
mov
icebp
aad
popa
movsl
sbb
cmc
dec
insl
pusha
lahf
or
adc
adcb
clc
dec
push
imul
adc
cmp
in
enter
movsb
inc
inc
jecxz
xchg
pop
scas
push
inc
inc
xchg
mov
mov
fwait
cwtl
xor
cld
push
movsb
pop
jge
xorl
inc
jno
mov
or
xorb
pop
jmp
jno
xchg
divl
enter
lret
test
xor
ja
push
cmpsl
out
sub
enter
mov
test
int
xorb
pop
mov
ja
xchg
in
lahf
mov
mov
cmp
add
loope
sti
mov
dec
int3
adc
add
pop
stos
test
adc
scas
xchg
pop
lock
sbb
dec
or
aad
xor
lcall
push
insb
dec
cs
lods
vpshaq
mov
xchg
test
mov
sti
aaa
cs
xchg
vcvttps2dq
sub
shll
xor
jle
inc
je
mov
mov
insb
mov
mov
ficompl
ret
imull
lahf
mov
fisttps
add
movsl
loopne
ds
data16
xchg
test
inc
inc
lahf
inc
add
push
cld
inc
mov
rorb
push
jnp
movsb
and
dec
pushf
adc
fwait
gs
ja
inc
push
mov
cld
and
sub
xor
movsl
or
xchg
scas
or
inc
xchg
mov
sub
ret
add
mov
xchg
jecxz
sbb
or
ljmp
jg
stc
lcall
stos
dec
out
or
xchg
mov
loop
sbbb
mov
cmp
das
mov
xor
xor
xlat
jae
jl
stos
cmpsl
cmpb
sti
dec
cmpsb
push
loop
pop
popf
pop
mov
mov
jo
or
cmp
lods
and
pop
add
in
dec
inc
cs
xor
xor
push
ret
lods
push
or
les
add
cmpsb
jbe
loope
pop
jnp
fistps
push
fistps
ss
fcom
jo
loop
jecxz
cmp
mov
rolb
mov
dec
idiv
ret
insb
and
nop
pop
lea
dec
push
cld
and
out
push
mov
aam
mov
pop
push
pop
in
push
cmp
loope
fcompl
mov
cmp
lret
inc
lea
push
mov
fnstenv
jns
jl
mov
mov
jecxz
insl
decb
rolb
stc
push
ja
pop
cmp
push
xchg
sub
ja
ret
adc
ds
mov
sbb
cmc
lods
mov
adc
jge
mov
mov
push
repz
push
xchg
lcall
cmp
rcl
inc
lods
jp
or
popa
divl
cwtl
hlt
pop
movsb
pop
push
das
sbb
pop
loope
mov
aad
aad
int3
movsb
roll
inc
movsb
call
loope
cmp
pop
jno
arpl
ret
jne
xchg
in
sub
jmp
ds
pop
or
adc
fildl
cmp
enter
icebp
lret
js
xchg
or
rcrl
int
fmul
lea
mov
push
pop
gs
aad
aas
ds
xorb
cmpsl
loopne
sti
pop
repz
ficoml
dec
cmc
and
fmull
popf
cwtl
cmp
dec
mov
jae
in
in
daa
sahf
lea
ret
xor
push
js
cmp
xchg
es
inc
test
cmp
dec
pop
xor
xchg
pop
mov
push
leave
xor
sub
int
mov
sarb
or
jb
leave
loopne
test
inc
test
pop
inc
jle
outsl
in
mov
pushf
dec
dec
dec
shr
int
push
mov
inc
and
xlat
add
std
sub
outsl
jg
aas
das
fcomp
lret
subb
repnz
fs
out
xchg
inc
inc
cltd
fiadds
jno
ret
xchg
cmp
mov
inc
fisubs
lods
rorl
push
cs
mov
cmc
add
iret
scas
jae
js
stos
in
pushf
pushf
sub
add
xchg
bound
jns
inc
outsl
lds
enter
inc
jmp
and
gs
lock
test
aam
stos
idivb
mov
movsl
inc
ret
bound
lret
leave
int3
loop
outsl
mov
imul
sub
adc
and
scas
sbb
inc
aaa
pop
adc
lcall
fsubr
push
xor
test
sbb
mov
adcl
fsubr
notb
push
mov
dec
jecxz
hlt
imul
mov
lods
push
lret
std
daa
aaa
pop
xchg
arpl
or
mov
and
mov
mov
and
lods
mov
loopne
out
adc
ja
sbbb
mov
sahf
mov
test
xchg
xchg
sub
insl
int3
pop
bound
add
cmp
jecxz
divb
sarl
imul
push
cmp
pop
addr16
sbb
and
push
mov
movsb
ret
fadd
sub
cmpb
lea
stos
push
xchg
test
stos
xchg
shr
jmp
lret
cmc
lock
fisubrl
pop
je
sbb
jmp
lods
mov
test
jl
lcall
fistpll
sbb
gs
enter
mov
jle
not
popa
fwait
sub
xchg
push
loope
in
leave
xor
sbb
inc
lds
jb
and
or
sub
pop
jmp
mov
jo
push
fwait
aam
sub
insb
push
sub
adc
loope
jmp
add
xchg
lds
add
xchg
and
cmc
inc
and
out
pop
mov
inc
and
shl
imul
xchg
add
movsb
mov
push
and
sbb
adc
sbb
mov
pop
es
pusha
mov
sbb
clc
in
cmp
out
mov
cmp
mov
out
je
fidivs
and
dec
fidivl
andb
jg
ss
cmp
or
xor
pop
idiv
xchg
inc
inc
mov
jo
pop
jl
push
mov
push
test
jmp
outsb
into
or
inc
movsl
mov
mov
mov
es
sub
int3
fwait
or
jbe
clc
sbb
sahf
jle
add
lcall
int
or
pop
and
call
or
mov
sbb
xchg
cltd
and
inc
mov
cmpsl
mov
inc
out
push
cltd
jmp
lock
stos
push
aam
pushf
cmpsl
jge
mov
outsb
repnz
and
es
sbb
popf
sbb
ss
adc
add
clc
xchg
push
jne
and
shlb
sti
inc
inc
fwait
data16
lret
stos
lret
pop
sbb
mov
add
push
cmpl
dec
push
repnz
sbb
aad
testb
cmpsb
cld
cld
orl
mov
pop
lock
inc
and
lret
xchg
stos
loopne
adc
sub
mov
cli
hlt
jb
jl
inc
jle
rcr
rcll
out
movsl
movsl
pop
outsb
or
push
push
fcompl
pop
in
int
fisttps
fstpl
jle
xchg
test
out
cmp
inc
nop
mov
dec
push
fimuls
mov
es
mov
filds
or
mov
sti
pushf
jl
jg
into
sarl
imul
mov
bound
ffree
dec
aad
sub
inc
and
push
lret
mov
sbb
xlat
scas
inc
arpl
inc
or
cmc
call
popa
lods
mov
imul
mov
test
dec
int3
mov
hlt
daa
pop
out
popa
pop
repz
xchg
jne
mov
add
jg
and
cmc
cwtl
movsb
push
and
add
mov
push
mov
dec
pop
mov
js
mov
jecxz
mov
rolb
pop
fimuls
pusha
adc
push
xor
in
jae
out
jne
adc
mov
cmp
or
test
sub
cwtl
cs
cwtl
jns
ss
popf
imul
cmp
popa
push
dec
andl
sub
mov
test
pusha
aaa
inc
mov
xor
push
push
repnz
imul
jnp
jns
pop
ss
stos
lods
pop
sub
and
and
repnz
mov
repnz
lock
nop
mov
out
mov
popa
push
and
movsb
or
mov
inc
adc
add
jbe
and
insb
pop
inc
jb
mov
lcall
jns
test
ja
lock
sbb
cmp
and
pop
jne
xor
das
lds
or
cmp
or
sbb
sub
stos
int3
adc
mov
xlat
scas
sbb
push
xchg
loope
insl
pop
and
mov
roll
lds
arpl
pusha
xchg
incb
cmp
mov
aas
popa
repz
ja
stos
dec
or
mov
pop
lea
int
adc
add
mov
xor
dec
mov
dec
xchg
and
dec
in
lahf
enter
outsl
insl
lods
jle
mov
or
dec
inc
mov
xchg
popa
xchg
or
inc
leave
pop
pop
pop
mov
in
pop
icebp
and
movb
or
xchg
mov
movsl
and
or
adc
aad
mov
pop
shl
clc
enter
xor
or
shll
pop
gs
adc
loop
xchg
push
push
es
mov
pop
loope
mov
jnp
dec
add
into
push
push
xchg
xchg
dec
jmp
add
xor
cs
into
das
inc
pop
lahf
push
lcall
imul
lcall
mov
scas
dec
cs
and
push
push
add
ja
outsl
jmp
aad
repz
pop
xor
int
aaa
cmp
add
and
shrb
mov
dec
inc
mov
adc
pusha
mov
aaa
cmpb
mov
xchg
adc
in
cmpsl
xlat
in
in
subl
ja
and
pop
add
pushf
andb
jae
sti
in
jge
sub
lea
adc
js
popa
xor
das
xor
ja
adc
icebp
test
sbb
push
xor
std
outsb
inc
es
push
fucomip
inc
push
roll
cli
xor
mov
icebp
rclb
sub
mov
test
imul
out
scas
ja
popf
shl
es
movsb
sub
ja
sub
sub
das
jbe
arpl
mov
adc
or
leave
pop
mov
aas
sub
mov
xchg
aaa
aas
ja
xor
cmc
or
inc
push
lock
cli
inc
xor
push
data16
inc
xor
mov
cmp
ror
pop
jns
and
xor
mov
cmp
sub
sub
adc
sbb
inc
xchg
hlt
or
inc
cmp
cwtl
lret
cmpsl
pop
nop
rorb
mov
insl
xor
add
enter
jp
adc
cmp
pusha
pop
fdivs
xchg
cwtl
cs
icebp
xchg
ss
mov
mov
push
pop
inc
rorb
in
and
xor
repz
scas
mov
mov
xchg
movsb
mov
imul
inc
lods
call
inc
cmc
inc
scas
outsb
rep
inc
test
sbb
add
mov
lea
push
in
fisttpl
out
insl
and
orl
mov
cltd
in
mov
neg
xchg
pop
out
lret
mov
lods
xor
aas
rcrl
cmp
in
adc
repz
mov
hlt
jb
jae
xchg
push
out
ret
rep
sbb
push
xor
shl
push
jmp
pop
dec
sahf
cmp
or
mov
add
ds
testl
adc
mov
pop
insl
in
and
jo
mov
lcall
loop
jp
lea
dec
jbe
lcall
mov
sti
mov
loopne
mov
call
mov
shl
jne
or
jge
adc
push
popf
mov
jmp
out
insb
sahf
bound
idivl
das
inc
push
in
pop
test
scas
js
cmp
pop
mov
and
test
movsb
bound
jp
xchg
leave
scas
aaa
lds
mov
ss
mov
mov
lods
sub
sub
jno
fwait
call
std
pop
sahf
jo
arpl
insl
push
std
mov
les
mov
das
cld
sub
add
mov
pop
aas
jmp
cmp
inc
jmp
sbb
inc
es
jbe
jmp
pop
bound
adc
lea
and
fsubp
pop
jno
in
popf
fbld
mov
push
cmp
xchg
mull
outsb
mov
push
push
pusha
pop
shll
aad
cmp
dec
mov
push
add
xchg
pushf
sbbl
xchg
aas
test
sbb
sbbb
mov
fildl
mov
sub
xchg
xchg
xor
lods
in
cmpsl
cmp
pop
mov
stos
xchg
sub
dec
mov
shlb
mov
dec
mov
push
lea
ror
pop
arpl
out
ja
mov
pop
or
mov
adc
nop
cs
or
mov
xlat
shl
daa
fisttpll
fisubrl
jp
cmp
cmc
daa
aas
int
ret
ss
popa
push
dec
fidivs
notb
arpl
push
insl
sti
fcmovb
or
xor
push
dec
ret
call
and
loope
or
xchg
pop
shrb
jg
add
xchg
outsl
mov
int
mov
nop
adc
xor
or
sub
divl
cmp
cs
aam
add
xor
shll
cmp
pop
test
inc
adc
pop
push
push
insl
sbb
push
jmp
push
in
int3
sub
insb
imul
pop
push
leave
mov
iret
or
addr16
mov
add
jae
inc
aad
jle
pop
cmpsb
inc
or
int3
mov
sbb
xor
ljmp
popa
xor
cld
nop
add
lcall
push
sub
adc
sub
mov
call
lds
stos
xorb
filds
fbstp
lods
sub
ja
mov
mov
xchg
fcmovnb
leave
sbb
dec
jg
pop
clc
lock
xchg
cmpsl
xchg
mov
add
xor
cmp
mov
push
daa
popf
sub
jmp
sub
and
jae
pop
aas
aas
data16
pop
and
sub
inc
pop
push
int
add
pushf
sub
add
cmp
fldt
jg
enter
out
jp
cmc
clc
addr16
jns
fisttps
xchg
and
lock
pop
shll
fs
cli
adc
mov
scas
in
cwtl
call
lods
fmull
lcall
add
dec
clc
sti
push
mov
test
sbb
cmp
sbb
xor
bound
pusha
pusha
test
ficoms
cmp
and
mov
arpl
sbb
cwtl
push
mov
cltd
lcall
cltd
cmc
dec
inc
arpl
sbb
lret
insl
lcall
sub
and
push
int3
in
mov
xor
test
jbe
pop
xchg
push
pop
or
sbb
pop
loope
sbb
shrl
data16
sti
leave
leave
mov
dec
rcrb
xor
push
lret
inc
push
mov
mov
sti
cwtl
rorb
sub
loop
rcrb
lods
decb
dec
fs
int
and
inc
add
xchg
test
mov
mov
pop
sbb
popf
push
push
jecxz
dec
or
sbb
repz
cmpsb
fld
pop
jns
pop
adc
shrd
xchg
sbb
rcr
cmpsl
loope
mov
movl
incl
inc
subb
adc
and
stc
bnd
sub
pop
and
cmp
inc
shlb
adc
leave
in
dec
dec
imul
mov
jle
ficomps
outsb
shlb
stc
jo
inc
lods
cmp
sub
inc
dec
mov
bound
pusha
mov
orl
adc
or
int
orb
mov
or
xor
stos
xchg
fs
sub
fidivrl
loopne
or
stc
xchg
cmp
mov
inc
ljmp
inc
jp
lea
pop
mov
mov
inc
pop
xchg
ss
pop
fcmovnb
push
jmp
aad
out
mov
inc
jbe
test
xchg
jno
cltd
fiadds
sbb
mov
dec
push
test
loope
cmp
sub
xor
jecxz
mulb
fdivrs
adc
cmp
std
xor
stos
mov
dec
imul
mov
mov
pop
adc
xlat
mov
jno
sub
push
xor
mov
fimuls
cmc
mov
pop
mov
jge
fldenv
std
cmp
sbb
daa
push
dec
ficomps
call
mov
decb
subl
push
cmove
das
add
stc
pop
popf
jge
add
test
mov
mov
lret
dec
loop
mov
mov
mov
fs
call
cmpsl
clc
push
lcall
in
push
push
pop
fwait
cmp
loop
xor
int
xchg
pop
mov
sti
xchg
outsb
adc
and
jmp
rcl
ja
sbb
add
sub
cmp
push
sti
push
fisubrs
cmp
rolb
popf
sti
inc
loopne
push
or
mov
enter
xchg
pusha
lret
subb
cld
icebp
cmp
pop
pop
sbb
fsubrl
or
or
lcall
mov
ret
fmul
idivl
fsts
lods
jbe
leave
pop
xchg
jp
mov
aad
mov
cli
mov
aas
std
xchg
orl
cmc
ds
inc
dec
repz
std
cld
repnz
subb
jb
js
inc
nop
popa
jmp
sbb
out
xchg
push
jne
aas
pop
adc
cmp
sub
mov
mov
dec
push
daa
push
shll
fsubs
sub
dec
xchg
sahf
leave
das
push
arpl
xor
sub
js
pusha
adc
jecxz
adc
xor
sbb
and
dec
and
bound
ss
ds
rorl
int3
test
and
mov
jl
aas
push
popf
scas
int3
sbb
mov
into
xchg
iret
push
call
sbbb
mov
mov
mov
cmpsl
xchg
mov
push
inc
push
out
inc
or
lcall
pop
pushf
cmp
outsb
repz
fwait
je
add
jmp
mov
mov
cs
cmp
pop
adc
adc
sub
sbb
nop
rcrl
fsubrl
mov
xchg
xor
pcmpgtw
push
mov
mov
sbb
mov
xchg
int
mov
and
jmp
sti
and
nop
fldz
cmp
mov
movsb
in
mov
jmp
icebp
sbb
jmp
cmp
cmp
dec
pusha
pop
sub
cli
ds
outsl
mov
adcl
pop
sub
add
inc
das
test
mov
lds
mov
popf
inc
cli
inc
arpl
pop
xchg
in
lahf
lods
fistps
dec
scas
cmp
adc
jecxz
jbe
pop
imul
jae
push
stos
cmp
call
push
lahf
sahf
outsb
push
outsb
pushf
lret
lret
xor
loopne
dec
push
mov
shll
lcall
sub
cmp
test
into
insl
sub
sbb
int
fimuls
adc
jb
xchg
fisttpll
pop
and
inc
cmp
lahf
xchg
mov
xchg
adc
mov
fdivl
test
cwtl
add
mov
je
jmp
sbb
out
cs
jae
sbb
dec
jb
dec
sbb
xor
xchg
mov
add
pop
inc
pop
lcall
mov
adc
cltd
push
stc
arpl
in
mov
jg
pop
adc
gs
pop
mov
jbe
jg
mov
lret
cwtl
cmp
xchg
inc
mov
add
xor
rorb
out
sbb
popf
dec
ds
sub
jecxz
push
into
mulb
fisubrs
jge
aad
add
popl
inc
repz
out
fcoms
popf
sahf
xor
std
xor
sbb
inc
sbb
outsb
jne
jno
jo
js
dec
push
hlt
fwait
dec
jecxz
into
test
inc
lahf
vpmaddwd
dec
sahf
testb
or
imul
jns
sub
call
push
xchg
jae
mov
cld
sub
push
mov
jne
add
and
push
jmp
nop
mov
addl
dec
or
jae
mov
push
sub
mov
iret
sub
pop
sbb
pop
or
and
mov
ss
xor
int3
cmpsb
out
out
mov
clc
lcall
sub
fcmovbe
push
pop
push
pop
call
sub
ret
pop
mov
jbe
bound
cli
scas
lret
call
mov
test
cld
cmp
movsb
fimuls
adc
jl
dec
push
in
or
cmc
xlat
rcrl
icebp
sbb
or
mov
in
push
fistps
cmp
mov
sub
jge
add
mov
lahf
jmp
cmpsb
mov
adc
and
test
cld
test
adc
jnp
fisttpl
lock
sbb
outsl
sub
sub
sbb
push
scas
cmp
adc
cmp
sti
movsb
data16
pop
ljmp
xchg
sbb
repnz
xchg
test
push
loope
add
in
push
js
pop
mov
sub
adc
or
cmp
lret
pop
pop
test
mov
sahf
xchg
cmc
jle
push
cmpsb
sub
mov
xor
jne
rolb
dec
mov
mov
pop
testb
stos
push
xchg
js
inc
loope
and
jno
jle
and
mov
cmp
outsl
in
cs
icebp
jo
pop
lds
sti
addr16
mov
pusha
int3
stos
jl
jae
mov
xlat
sti
imul
stos
sub
push
scas
xor
push
mov
nop
rolb
mov
pop
cwtl
dec
jnp
out
dec
cs
push
in
push
cltd
in
pop
ret
or
insb
idiv
imul
addl
xor
lahf
dec
and
xchg
xor
adc
jo
mov
mov
mov
fldl
fsubr
jno
or
cmp
out
imul
xor
dec
das
jge
aam
lea
pusha
cmp
or
imull
pop
and
push
inc
xchg
pop
mov
mov
xchg
pop
fdivl
into
or
mov
rep
jb
fistpl
cs
dec
aam
or
dec
mov
inc
xor
imul
mov
nop
xchg
fisubrl
mov
xchg
sub
cmpsl
push
icebp
push
add
clc
and
sub
ja
push
pop
inc
fdivs
outsb
ja
outsl
mov
divl
sti
push
adc
sub
jmp
inc
add
push
stos
xchg
addr16
push
std
jmp
stc
stos
inc
push
lds
repz
jbe
aaa
mov
mov
push
nop
and
es
mov
test
les
sahf
ficomps
push
jle
mov
pop
sub
xchg
insl
pop
adc
mov
pop
testl
add
ljmp
jmp
stc
popa
pop
mov
inc
pop
aam
inc
jle
dec
mov
push
test
iret
lret
int3
int
fsubl
push
outsb
ja
mov
xchg
mov
jb
inc
cmp
push
push
ret
add
lahf
into
adc
push
dec
or
repz
in
fs
call
add
lds
out
sbb
fldcw
aad
pop
icebp
push
subl
push
and
out
test
inc
cmc
in
or
add
dec
orb
ficomps
repz
and
adc
aad
sub
and
dec
add
mov
push
mov
mov
cmc
clc
ja
xor
and
pop
sbb
mov
dec
in
xor
shl
into
es
cld
pop
into
inc
inc
inc
pusha
out
popf
inc
or
inc
fldl2e
js
sub
mov
and
addb
ss
mov
add
aaa
clc
jmp
sub
aad
push
pop
popa
sbb
pop
stos
fstps
adc
xor
sub
in
or
incl
dec
lret
out
mov
cmp
arpl
in
inc
clc
xchg
cmp
sub
jnp
lods
or
andb
xchg
jo
aas
sub
pop
in
inc
insl
loope
jnp
mov
jg
cmp
sbb
and
or
push
jp
xchg
pop
in
dec
xlat
cld
lds
sub
xor
pop
mov
call
and
das
test
cmp
jecxz
pop
iret
sub
xchg
out
lds
sbb
dec
mov
test
pop
dec
in
xchg
inc
push
in
adc
push
cmp
add
lea
data16
xor
xchg
pop
aas
inc
inc
add
bnd
fisttpll
cltd
inc
in
cmpsb
pop
in
add
das
mov
fs
in
aas
sub
cmpsl
jle
das
das
pop
out
inc
or
cmp
xor
sbb
lock
punpcklwd
loope
loop
stos
das
in
test
cmp
jle
enter
xor
mov
das
popa
mov
in
rcrl
cltd
in
incb
test
mov
and
cmp
add
cmpsl
xor
dec
leave
bound
inc
fdivrp
loop
popa
sub
rol
andl
inc
outsl
int3
xchg
imul
or
pop
xchg
stc
mov
jmp
iret
sti
pushf
inc
repnz
add
fwait
cmc
dec
or
stos
adc
inc
out
repz
cli
xchg
jmp
lock
pop
pusha
movsl
std
enter
inc
clc
mov
xchg
jo
mov
mov
out
mov
mov
int3
ljmp
push
ret
push
lret
push
dec
in
in
fs
or
mov
fs
cltd
xchg
in
cmp
mov
pop
subb
icebp
arpl
and
fsubrs
mov
xor
aaa
cmc
negl
cmpsb
ljmpw
xor
sahf
xchg
mov
je
ljmp
dec
sbb
mov
ret
mov
movsl
sbb
xor
rcl
xchg
dec
daa
movsl
or
mov
popa
push
les
mov
push
mov
sbb
jge
cmp
pop
pop
jmp
mov
mov
xchg
lods
mov
dec
pop
push
cmp
mov
stc
xchg
push
jne
mov
and
sbb
push
or
inc
inc
or
fldl
push
jbe
mov
xchg
push
pop
loopne
cmp
lods
push
xlat
pextrw
inc
and
jno
frstor
mov
mov
loopne
in
xchg
lea
aas
outsl
mov
and
les
out
and
jmp
inc
out
mov
mov
mov
std
xor
je
hlt
negb
and
jecxz
mov
fsubrs
mov
xor
inc
lret
test
movsl
xchg
mov
pop
scas
out
int3
xchg
je
mov
hlt
jo
mov
mov
jmp
sub
pop
add
ss
pop
decb
and
out
fistl
pop
mov
sbb
fldl
rcrl
inc
dec
lea
sbb
jle
xor
mov
in
push
mov
pop
daa
fiadds
shlb
mov
mov
cmp
repz
inc
push
inc
mov
pop
insl
int3
and
jns
sti
outsl
fisubrs
ror
xor
mov
push
inc
outsl
test
lret
push
cmp
insb
mov
sarl
enter
std
sti
and
outsl
pusha
fwait
loope
mov
or
nop
ret
dec
xchg
fs
out
mov
xchg
pop
inc
cmp
ja
mov
and
imul
rcll
mov
fsubp
push
mov
sahf
sbbl
aas
and
fiadds
jns
jno
mov
sub
mov
mov
repz
andl
push
sub
jl,pt
cmpsl
jae
mov
mov
nop
insb
imul
lahf
rcrb
sbb
lock
push
stos
sbb
mov
fiaddl
or
and
out
popa
pusha
mov
std
popf
sub
push
repz
sarl
jecxz
arpl
cmp
out
mov
nop
dec
cs
lret
je
sbb
mov
inc
mov
pop
mov
and
jmp
lods
cmp
dec
insb
loope
mov
dec
adc
test
scas
mov
cld
xlat
add
pop
kmovb
cmp
inc
pop
push
in
int3
fs
inc
es
fstpl
lock
mov
xor
sub
stc
mov
ds
dec
mov
push
lods
add
popf
push
mov
ja
cmp
jno
outsb
sahf
adc
rclb
mov
lahf
stos
mov
ljmp
xlat
or
cmp
mov
fstp
pusha
clc
outsl
jp
xchg
std
mov
ljmp
aam
mov
and
stos
jne
and
mull
and
les
test
call
push
jl
push
push
pop
dec
xchg
repz
lds
xor
lcall
and
xchg
dec
ds
pop
add
outsl
int
stos
cltd
mov
xchg
ds
xor
dec
outsb
xchg
movsb
fistpll
xchg
xchg
shr
sub
mov
les
iret
push
rcrl
stos
in
adc
inc
mov
iret
test
jge
xchg
mov
aam
sbb
xchg
shlb
mov
ja
icebp
shrl
jmp
push
bound
setb
or
call
scas
shlb
jnp
jbe
and
dec
arpl
push
rcrl
call
das
mov
loopne
xchg
in
mov
pop
cmp
mov
xlat
sub
mov
jge
stc
push
xor
jbe
push
dec
jne
shll
cmp
dec
out
mov
jne
cmpsb
jns
mov
mov
rcll
add
adc
sbb
or
hlt
mov
out
xchg
jg
pusha
out
push
mov
scas
sbb
xchg
cmp
shr
aaa
xor
push
ret
and
xor
in
outsb
inc
sbb
fimull
fmull
adc
clc
rorb
pop
mov
fldl
push
cs
in
fucom
out
push
jg
imul
pop
out
lret
js
into
push
push
sub
mov
mov
inc
inc
ja
cmp
pop
push
repz
adc
repz
or
in
divb
push
in
imul
adc
ja
std
mul
cmp
dec
pop
mov
hlt
fstpt
sub
loop
push
mov
cmc
aam
pop
pop
sub
jne
add
dec
fs
ljmp
push
std
mov
jbe
test
cmpsb
push
ja
inc
mov
or
mov
sub
into
push
jle
jg
xchg
push
in
dec
add
ja
lock
push
test
cld
xchg
mov
shll
push
inc
push
cmpsb
sub
push
in
xorb
cwtl
out
jecxz
loope
dec
imul
jns
ljmp
xchg
fiaddl
and
add
repnz
inc
mov
xor
aas
mov
fucom
daa
jo
fwait
adc
in
add
je
fsub
andb
out
jo
and
out
sbb
pushf
imul
cmpsb
push
pop
push
jbe
fbstp
lret
loope
mov
sbb
push
subl
dec
rclb
jae
popa
and
mov
push
pop
mov
stos
pop
insl
dec
call
ds
add
das
mov
and
cmp
push
iret
shll
mov
push
push
inc
repnz
xchg
sub
push
data16
mov
add
add
jno
lds
jle
scas
cmp
add
stos
data16
mulb
aaa
out
sub
cmp
loopne
push
lret
mov
add
cmp
dec
mov
inc
inc
leave
ss
mov
mov
or
inc
xchg
pusha
xor
mov
int
jae
xchg
push
add
and
out
or
pop
ja
fldenv
repz
js
dec
or
ljmp
pusha
mov
xchg
cmp
iret
orl
clc
stos
js
repz
outsl
cmp
jecxz
xor
enter
or
test
divl
leave
mov
stc
aad
loope
sarl
popa
in
bnd
xchg
jle
aas
xchg
test
ret
jb
or
jecxz
sub
dec
adc
test
jbe
jp
fucomi
movb
pusha
imul
dec
dec
addl
cwtl
mov
out
testb
sub
jmp
in
jns
negb
jl
push
lds
adc
subl
sub
lcall
xor
adc
nop
xor
ss
movsl
ss
xchg
mov
pop
xchg
add
fidivrl
xlat
int
mov
adc
mov
mov
arpl
je
loope
ljmp
popa
int3
sub
sti
dec
jl
iret
mov
xor
cwtl
xchg
daa
loopne
pop
lcall
and
lret
loopne
xor
bound
and
scas
clc
and
ror
inc
fwait
mov
sbb
jecxz
jmp
cmpsl
mov
or
ret
dec
cmc
xchg
rorl
and
xchg
cmp
js
mov
out
push
mov
jne
aad
push
mov
movsl
xchg
mov
pop
icebp
inc
sbb
idivl
xor
sub
adc
mov
iret
popf
dec
xor
jl
push
xor
lds
fwait
cltd
sbb
pop
aaa
sbb
jl
popf
out
popa
xor
outsl
lret
add
add
mov
mov
xor
jne
mov
mov
jecxz
imul
loopne
jnp
mov
ja
dec
pop
xchg
popf
sub
add
fistpl
outsl
push
inc
fstpl
outsl
sub
dec
cltd
and
icebp
inc
jmp
out
mov
sahf
inc
xchg
vmovsd
out
push
daa
aam
fadds
aaa
adc
jg
push
xchg
cwtl
adc
scas
ja
movsb
stos
or
mov
pop
cmp
mov
loop
mov
inc
jae
xchg
movsb
inc
jno
xor
push
sub
cs
add
add
xchg
out
inc
sbb
mov
push
xor
in
xchg
mov
mov
int
test
jl
sbb
jno
sub
popa
jecxz
mov
popa
dec
insl
cmp
outsb
xchg
adc
jle
cld
lds
mov
jle
fstpl
ljmp
cmp
mov
push
je
sahf
sub
add
test
je
fmuls
and
jp
or
jb
es
daa
call
jle
push
sub
daa
aas
mov
push
sbb
cmc
pop
adc
cmp
shlb
jge
pop
lock
push
or
mov
icebp
add
out
cmpsb
mov
add
roll
mov
lock
cs
dec
sub
lret
xchg
repnz
dec
jle
data16
or
xor
xchg
std
ud2
or
test
in
xchg
cltd
shll
mov
lahf
scas
add
jne
aam
rol
arpl
repz
sbb
adc
xor
cmc
andl
inc
adc
push
popa
sti
dec
pushf
lcall
pop
push
or
lret
into
xor
push
cmpsb
and
pop
ficoms
sbb
pushf
mov
loope
insb
cli
push
insb
jno
adc
pushf
push
movsb
subb
mov
fimull
and
push
pmaddwd
push
mov
stc
arpl
cmp
xchg
mov
mov
push
aad
cmp
out
jae
sub
pop
mov
xlat
mov
incl
sub
xor
es
and
hlt
jl
add
mov
xor
pop
pop
xchg
test
push
mov
aad
lret
xchg
inc
jb
push
es
and
adc
ret
dec
lods
push
stos
lock
mov
lods
push
cmp
jno
add
inc
cmp
test
pop
iret
mov
push
mov
dec
adc
mov
add
mov
or
insl
fsubrl
sub
xchg
int3
sbb
lock
push
lret
in
push
sub
icebp
cmc
faddl
and
mov
push
ror
sbb
xchg
pop
push
fxch
ret
cmp
pop
or
std
inc
adc
inc
add
cmpb
xchg
movsl
or
cmp
xchg
xor
repnz
jbe
xorl
int3
insb
inc
push
cli
arpl
in
addr16
push
inc
xchg
pusha
pop
les
push
pop
pop
dec
lods
js
and
fsubrl
xchg
xchg
cli
sub
in
stc
lea
fxch
xchg
popf
and
push
mov
lods
addl
cmp
and
in
xor
add
sarb
adc
and
test
push
cmpl
sbb
add
popf
loopne
pop
loop
push
arpl
jl
and
roll
adc
mov
movsl
xchg
cmpsl
jge
adc
push
mov
xor
pushf
sahf
leave
and
mov
movsl
stos
jo
movsb
inc
or
mov
jbe
adc
adc
sub
jmp
les
xchg
ret
fcomps
adc
dec
mov
lret
rcr
xchg
movsl
pop
imul
dec
push
and
mov
sbb
testl
popf
jge
xchg
mov
aam
adcl
lret
cld
lea
imul
mov
dec
inc
mov
xchg
into
mov
cld
repz
data16
pushf
cs
push
adc
fildl
jge
aad
mov
in
mov
adc
mov
inc
or
imul
test
out
mov
test
cwtl
imul
mov
mov
iret
and
out
ss
lret
inc
pop
clc
dec
inc
and
cwtl
aas
add
leave
sbb
xor
pop
sbb
cmpsl
cmp
adc
lea
mov
lds
cmpb
popf
or
in
stc
popf
ret
jle
fs
push
inc
incl
adc
sahf
lods
adc
mov
aas
sbb
inc
ret
xor
dec
sbb
sbb
jl
inc
mov
fisubrs
cltd
add
xchg
rcll
dec
jle
sahf
mov
nop
ret
push
and
mov
call
adc
aaa
sti
dec
arpl
rcll
pushf
out
push
jo
lock
pop
jae
bound
mov
and
inc
pusha
in
mov
pushf
add
lock
fistpll
insb
loop
mov
push
or
nop
xor
or
mov
adcb
xor
jae
lock
mov
shl
push
adc
je
arpl
sti
gs
xor
insb
jb
xor
jo
call
inc
jecxz
inc
and
mov
jns
inc
lds
cmp
ficomps
fistl
mov
push
outsl
mov
stc
je
nop
mov
shl
cmp
xchg
mov
mov
mov
add
adc
mov
xchg
imul
mov
mov
mov
gs
cmp
push
das
dec
and
xor
pop
push
sbb
stc
pop
sub
gs
adc
fisubl
jo
add
or
stos
adc
cmpsb
fldcw
sub
fldenv
push
cmpsb
repz
xchg
pop
lret
sub
mov
add
repz
insb
xor
push
jmp
jmp
add
jg
add
pop
sbb
add
flds
or
and
xchg
mov
mov
mov
xor
incl
mov
xor
dec
push
xor
rorb
sub
cmpb
xchg
in
aad
insl
jne
in
scas
icebp
mov
mov
jecxz
xor
mov
icebp
dec
sti
fildl
cmp
lcall
jo
enter
out
cmpsl
movsb
xor
push
test
imul
lcall
mov
insl
push
enter
mov
aad
jo
out
cmpl
les
and
in
or
jne
imul
pushf
test
jno
or
cltd
repnz
test
ficoms
lods
fsubrl
fwait
subb
adc
imul
ret
fnsave
pop
sahf
pop
inc
xor
fildll
popf
xchg
and
inc
loopne
aas
fldcw
pop
or
push
cs
cmp
cmp
stos
fwait
jecxz
add
xor
xor
ret
xor
mov
bound
scas
or
xchg
cmpsl
xchg
mov
cmpsl
xor
jmp
das
pop
jg
xchg
mov
jmp
js
jae
sbb
and
xchg
js
and
cli
cli
popf
jp
inc
push
mov
dec
inc
dec
pop
addb
mov
jmp
adc
cld
sahf
movsl
repnz
cld
pushf
pusha
cmp
das
and
scas
mov
pop
pop
test
mov
jne
sahf
cmp
push
lock
mov
cmpsb
inc
pmullw
aas
imul
lea
or
pushf
aaa
pop
incl
insl
adc
jb
jmp
fwait
jae
fsub
sbb
movsb
loopne
les
jp
push
fistl
dec
addr16
dec
das
jno
add
sbb
add
aad
insl
inc
shll
in
cmp
nopl
cld
sub
pop
xor
lods
das
inc
lock
cwtl
adc
jnp
inc
stc
adc
add
int3
add
pop
sub
jg
adc
jae
jne
out
aaa
mov
addr16
add
sbbb
mov
adc
mov
mov
fidivs
hlt
std
cmp
or
push
fdivl
mov
xchg
int
in
out
cmp
xchg
popf
mov
dec
xor
mov
cltd
adc
xchg
push
mov
push
dec
pop
nop
movsb
movsb
insb
pop
lea
sub
inc
fsts
ljmp
and
push
bound
negl
bound
addr16
dec
rolb
aam
jne
add
movsb
and
and
pop
and
call
jle
fmull
xchg
imul
xchg
mov
or
mov
imul
mov
stc
xor
mov
push
ret
dec
jecxz
pop
mov
xchg
lcall
jg
cs
ss
fnstsw
inc
movsb
jno
negb
sub
sbb
mov
adc
push
sar
dec
cli
jne
jmp
dec
dec
or
pop
hlt
lds
aam
jecxz
addl
xor
stc
lahf
sub
mov
mov
int
addr16
inc
mov
fs
es
roll
popa
dec
xchg
pop
or
push
add
dec
dec
jnp
insb
scas
add
out
mov
sbb
xor
repnz
popa
lret
sbb
out
jns
dec
divl
adcb
jecxz
push
in
out
pop
in
out
stos
pop
fisubs
not
push
call
xor
stos
xchg
adc
ljmp
filds
sbb
incl
pop
mov
cli
xchg
push
or
mov
xor
mov
call
push
je
je
cmp
dec
subl
loopne
mov
sbb
and
leave
push
and
push
inc
push
loope
xor
sub
pop
sbb
call
jle
les
jl
data16
lret
dec
addl
xchg
xor
dec
ljmp
pop
sbb
inc
int3
mov
xchg
cmc
dec
xchg
pop
repz
clc
push
pop
test
shlb
cmp
mov
movsb
sub
xchg
in
pop
cmp
mov
repnz
cs
and
adc
iret
or
imul
sub
psrlq
popf
jmp
ljmp
les
cltd
enter
test
ret
cltd
sub
adc
pop
mov
mov
adc
xor
dec
cwtl
push
js,pn
je
inc
sbb
hlt
xchg
orl
mov
arpl
outsl
xor
or
aad
mov
mov
mov
mov
xchg
mov
mov
shlb
inc
out
mov
inc
lahf
mov
sahf
int
pop
dec
pop
xchg
inc
call
adc
dec
dec
xchg
mov
cmp
add
subb
icebp
je
popl
inc
test
sbb
dec
andl
xor
out
lret
add
xor
sub
shrb
push
or
je
movsl
inc
shlb
inc
cmp
and
lahf
loop
repz
jge
sbb
rorl
repnz
cmp
xor
and
pop
pop
data16
js
jge
push
jns
sub
pop
xor
xor
addr16
idivb
sub
emms
dec
aam
xchg
jge
stc
test
or
adc
insb
pop
test
lcall
jbe
adc
movsb
xchg
inc
xor
dec
test
cmp
fwait
in
cmpsb
sbb
scas
aaa
lods
inc
in
jno
adcb
std
scas
jl
mov
push
sub
je
mov
adc
scas
mov
mulb
dec
xchg
add
push
jp
sarl
cltd
lock
xchg
or
idivb
int3
and
pop
mov
inc
and
mov
out
add
popa
adc
push
gs
fwait
dec
mov
hlt
test
cmp
icebp
sub
add
cmp
push
jb
leave
fwait
in
pop
nop
sub
repz
cmpsb
mov
mov
dec
mov
insb
je
adc
icebp
cli
inc
out
xchg
lds
mov
pop
mov
scas
jge
aad
sbb
arpl
inc
push
jae
mov
je
jecxz
jp
gs
inc
outsb
sbb
inc
sbb
imulb
insb
push
push
jns
and
incl
or
cmp
aas
iret
repz
addr16
adc
pop
xchg
mov
pop
gs
rolb
and
aas
adc
sub
leave
adc
xchg
andl
add
or
rcll
mov
pop
jecxz
sub
in
fsubrs
clc
cmc
ljmp
xorb
xchg
pop
xor
pop
sahf
lds
push
lcall
push
inc
cmp
movsb
pusha
vmovq
push
add
outsl
out
ret
test
mov
lds
iret
cmp
sub
subl
ds
mov
pop
fs
xchg
sbb
xor
ja
cmc
jnp
lods
lods
and
lock
add
mov
sub
lret
mov
mov
push
ret
mov
insb
mov
inc
add
dec
sub
repz
push
cli
push
fidivs
xchg
pop
sbbb
jg
mov
sti
sbb
and
ljmp
and
js
adc
adc
sti
leave
int3
mov
cmp
sarb
ret
dec
jno
dec
or
ret
jb
sbb
lcall
lea
cmp
jns
inc
or
add
push
cmc
fdivl
lock
lds
mov
int3
adcl
push
cmp
cmp
inc
xchg
movsb
hlt
enter
imul
shlb
clc
lods
mov
xchg
cltd
movsl
cli
testb
es
jae
push
es
lret
frstor
aad
mov
dec
inc
sub
loopne
movsb
add
push
dec
or
loopne
dec
loope
popf
sbb
mov
push
jns
add
fidivrl
js
insb
pusha
repz
mov
xchg
ret
lods
fistps
jb
cmc
mov
ret
sbb
or
dec
dec
mov
das
sub
iret
pop
push
sbb
sbb
inc
addl
or
or
jl
sbb
or
or
jne
or
test
adc
mov
flds
in
jl
hlt
push
dec
add
mov
orl
and
mov
push
push
pushw
daa
repnz
out
sahf
pop
shrl
aaa
fmul
jns
filds
inc
and
stos
lods
adc
lret
pop
add
movzwl
jp
push
mov
fsts
sbb
mov
andb
pop
sbb
xchg
dec
hlt
push
scas
jle
xrelease
test
dec
push
cld
repnz
mov
pop
xchg
aad
xor
nop
jmp
push
or
rcll
xor
adc
and
jle
gs
adc
cmp
pop
mov
or
xchg
mov
in
or
dec
push
xchg
mov
or
arpl
fcmovb
je
or
sub
in
xchg
movsb
pop
aaa
jnp
es
xchg
cmc
imul
out
movsl
mov
mov
inc
pop
pop
lcall
push
adc
push
push
jnp
les
les
sahf
pop
pusha
popf
inc
scas
sbb
rcrl
xchg
pop
add
cld
repnz
fiaddl
inc
pop
mov
sub
push
rol
sti
sahf
cmp
mov
mov
and
fldenv
mov
addr16
push
adc
lods
xchg
mov
es
shlb
push
xchg
or
and
sub
pusha
xor
aaa
xchg
inc
int
enter
sbb
add
inc
cli
test
pushf
sub
adc
ljmp
sub
push
sarl
jnp
out
inc
or
xchg
push
sbb
stos
mov
xlat
test
xor
mov
das
aas
jno
xor
sub
sti
ss
cmpsb
pop
inc
push
movsb
cmpsl
cmp
out
call
mov
cmpb
int3
or
push
loop
ja
dec
hlt
or
vmread
jle
rcl
out
xchg
ss
sti
or
pop
mov
out
in
lcall
in
cmp
adc
and
inc
dec
aam
mov
fldenv
mov
mov
daa
push
adc
sbb
and
ds
jg
xchg
int3
inc
xchg
lret
pop
pop
mov
insb
or
repnz
je
in
dec
fcomps
outsb
gs
or
push
and
shrl
xchg
push
sarl
mov
cmp
dec
or
roll
mov
add
jae
pop
shlb
fnstenv
dec
repnz
pushf
or
bound
mov
insl
lahf
fimull
and
mov
push
lahf
aas
inc
lds
lret
fisttps
cmc
loop
mov
es
xor
sbb
adc
arpl
and
mov
sbb
mull
int
mov
push
neg
pop
dec
push
mov
adc
addb
lret
movsl
insl
je
mov
in
pusha
mov
xor
lods
mov
mov
fistpl
aas
ds
xlat
pop
sbb
pop
sub
xchg
push
jbe
lods
das
adcl
jno
lret
mov
mov
mov
cmc
adc
inc
xor
fmull
negb
jg
sub
push
push
mov
xchg
popf
sbbl
jle
inc
push
jae
jno
sbb
mov
sub
mov
shll
xchg
negb
pop
pop
xor
jmp
mov
pop
cmp
cmpsl
test
sbb
cmp
iret
jl
cmp
mov
sub
mov
jle
popa
imul
enter
pop
jmp
js
xchg
lds
xor
loop
pop
xor
scas
fwait
cmpsl
mov
sbb
je
cmpsb
pop
jnp
iret
imul
cmp
xchg
cmp
mov
clc
out
stos
xchg
sub
jle
dec
mov
aaa
xchg
jb
flds
mov
sbb
cld
jne
sub
stos
pop
and
xor
pushf
loop
add
mov
in
and
subb
push
jo
rcl
das
adc
popa
cmp
sbb
jge
repz
imul
in
hlt
test
mov
ljmp
stos
pop
nop
bound
dec
shll
mov
out
pop
lock
add
inc
dec
test
aad
sub
adc
iret
adc
sbb
sbb
adc
cmp
push
loop
dec
movsl
test
adc
loopne
push
loope
jns
in
xlat
orl
fimuls
inc
mov
stos
or
jle
sbb
ret
test
mov
add
nop
repnz
push
mov
cmp
fwait
lcall
cwtl
aam
repnz
outsb
inc
dec
mov
pusha
and
data16
popf
xchg
push
repz
mov
notb
dec
cwtl
sub
xor
sbb
stos
mov
cmc
shr
add
lods
cs
ss
mov
cmp
mov
pop
add
mov
cld
mov
mov
inc
sbb
inc
test
pop
hlt
inc
orb
mov
adc
dec
mov
aas
and
cmp
dec
add
loope
fsubrl
push
dec
jecxz
repz
jmp
or
aas
or
or
mov
mov
into
xor
decb
sbb
sub
cltd
adc
ret
movsb
loopne
dec
mov
push
xchg
pusha
in
sbb
pop
ljmp
sbb
mov
popf
push
push
mov
into
in
adc
mov
cmpsb
sti
mov
rolb
mov
xor
adc
mov
paddq
cmp
mov
fnstsw
jecxz
movb
xor
testb
out
cmp
pushl
cmp
xchg
data16
cmpsb
push
testl
pop
cmpsl
inc
jmp
pop
xor
es
cmp
out
mov
popa
and
icebp
pop
enter
dec
add
test
popa
loope
and
add
xchg
add
std
test
hlt
add
mov
outsb
fmuls
or
jl
in
lock
sbb
loopne
es
adc
loop
pushl
jbe
push
aas
mov
cmp
xor
gs
loopne
lock
sub
pop
push
pop
cltd
cmc
outsb
stos
sahf
scas
sbb
xchg
adc
inc
mov
aam
subl
sbb
add
xchg
mov
mov
test
pop
test
int
add
and
push
xchg
sbb
out
stos
or
mov
cwtl
and
arpl
xor
orl
lret
pop
lea
icebp
adc
sti
enter
int
mov
mov
lea
mov
int
mov
pushl
sbb
and
fsubrp
lret
cmp
mov
pop
mov
lcall
push
rcr
add
jae
add
or
shrb
je
mov
jp
cmp
mov
pop
out
arpl
les
lock
sub
adc
in
dec
xlat
aad
mov
popa
xor
mov
add
lret
mov
subb
ret
inc
das
lcall
nop
cs
xchg
sbb
out
ficompl
mov
mov
arpl
hlt
xor
mov
push
aam
mov
in
mov
xor
dec
inc
mov
or
fadds
rcll
lock
fdivrl
inc
mov
jg
lret
jo
jno
mov
push
push
sbb
in
mov
hlt
dec
in
jb
xor
imul
sbb
xchg
push
das
or
fsts
imul
push
test
fisubl
imul
inc
cmpl
jb
sbb
mov
pop
push
or
ret
push
cltd
fcomp
aad
pop
pop
xchg
mov
lea
xor
test
outsl
pop
mov
dec
sahf
incl
repnz
enter
mov
mov
adc
push
add
mov
xor
out
jbe
shlb
inc
inc
mov
loopne
jae
dec
pop
cmp
cmc
jns
jl
adc
iret
jp
push
push
and
xchg
cwtl
in
outsb
aas
test
push
repnz
lret
mov
lock
xchg
dec
add
xchg
add
cmp
mov
jg
mov
das
sbb
iret
out
adcl
cmpsb
mov
cltd
push
xor
jecxz
dec
lcall
roll
jmp
mov
mov
or
movl
mov
sahf
or
mov
in
mov
out
add
jmp
cmpsl
or
ds
testl
or
fstl
orb
push
sub
add
push
push
icebp
daa
into
sub
push
cli
loope
xlat
push
cmp
mov
push
mov
pop
cltd
fidivl
imul
cli
jmp
negl
shll
adc
fdivs
pop
jl
divl
or
cmpsl
cmp
pop
fbstp
inc
loope
jne
call
pop
push
mov
or
das
pop
jmp
clc
pushl
das
push
addr16
sub
cmp
and
adc
jl
mulb
ljmp
mov
push
gs
cmp
jo
pop
push
dec
cmpsl
add
xchg
int
xor
lods
adc
push
pop
loopne
and
andl
mov
mov
sub
adc
jg
cld
pop
test
je
lds
cli
adc
cmp
dec
mov
xor
cmp
mov
lock
mov
sub
test
addr16
dec
bound
movsl
ja
or
cmpsb
jae
jp
fwait
les
mov
push
lcall
mov
mov
jnp
adc
and
add
lcall
adc
mov
inc
sub
and
in
out
mov
lcall
inc
movsb
sbb
aam
xor
mov
lods
pop
push
test
add
popf
mov
sub
adc
sub
jb
and
adc
stos
pusha
xchg
clc
mov
pushf
xor
ss
cmpsb
adc
sbb
mov
xor
sahf
mov
imul
dec
jne
pusha
hlt
out
fidivs
mov
jmp
js
hlt
push
push
enter
sbb
stos
jne
lret
mov
jnp
pop
add
lods
mov
dec
push
repz
sub
test
pop
out
in
mov
mov
test
and
sbb
test
subb
xor
mov
dec
push
mov
cld
push
inc
pop
aas
push
inc
inc
xor
jb
fwait
inc
shll
inc
sub
xlat
pop
mov
loop
fimuls
aad
push
stos
adc
xchg
mov
sub
jb
inc
inc
mov
mov
imul
icebp
arpl
je
add
adc
iret
lods
ja
cmp
loop
sarl
cmp
xchg
jno
adc
nop
fs
jmp
movsb
push
negb
cmc
push
out
pop
dec
inc
int
adc
sbb
xchg
jno
cmp
fbld
add
mov
dec
mov
shll
bound
mov
sbb
xchg
testb
pop
add
test
aas
inc
daa
sub
inc
adc
inc
cmpsb
aam
lahf
arpl
sbb
daa
jp
pushf
mov
enter
inc
mov
cmp
popf
push
mov
adc
data16
cwtl
adc
jne
sub
rcrl
push
fstps
rcrl
or
loop
mov
pop
jnp
inc
dec
inc
inc
cli
push
fisttpll
push
dec
ret
mov
inc
mov
push
fnstcw
push
jbe
cmc
mov
lods
mov
lret
stos
push
mov
popf
mov
lods
and
mov
xchg
mov
clc
lahf
je
scas
and
push
sbb
add
sbb
lds
xor
adc
mov
mov
arpl
pop
sti
adc
call
or
stos
mov
jne
lds
loop
push
or
inc
imul
js
mov
adc
mov
jp
adc
out
aam
dec
push
fisttpl
mov
insb
cmp
out
addr16
or
icebp
inc
in
push
addr16
mov
mov
mov
decb
inc
imul
out
out
xchg
xor
shll
stos
gs
cmp
push
imul
jnp
mov
and
out
gs
push
cmp
sub
aaa
orl
inc
xor
jno
cmp
mov
push
out
filds
cs
testb
cs
sti
cli
std
fs
clc
mov
push
sub
sbb
mov
stos
ds
adc
xchg
ret
xchg
fmuls
cltd
cli
scas
jo
rol
sbbb
fs
xor
jp
or
nop
repz
sbb
mov
fidivrl
fisttpl
fidivrs
fisubrs
xchg
adc
fwait
mov
jbe
xchg
xchg
shrb
aam
and
cmpsl
xor
inc
inc
cmp
push
pop
cmp
sub
pop
push
and
fdivl
dec
imul
cli
add
pop
xor
outsb
imul
dec
cmp
xchg
data16
jnp
lcall
push
out
scas
jno
sbb
hlt
inc
cltd
sub
mov
test
cmpsl
mov
xor
mov
bound
fcoml
stc
sbb
mov
mov
inc
int3
scas
and
cmp
sarl
push
jmp
push
scas
mov
test
nop
addr16
ret
outsl
scas
mov
icebp
sub
pop
dec
sti
loopne
sub
loop
daa
and
outsl
pop
cmp
arpl
or
and
jno
sub
scas
push
mov
int
cmp
out
add
jmp
and
movsl
cmc
inc
xchg
shll
lods
repnz
and
lds
movsb
mov
sbb
ja
dec
fcmovne
cmp
dec
rol
and
mov
add
sahf
push
insl
int3
loope
adcb
les
adc
mov
jae
xchg
jmp
jg
or
mov
data16
pop
ret
fsubl
ret
jecxz
outsb
cmp
cmc
mov
daa
or
cltd
adc
inc
dec
and
and
les
ljmp
fs
push
jl
shrb
cmpsb
fmuls
mov
and
lret
scas
xchg
aas
test
jp
enter
mov
mov
sub
popf
mov
in
or
xchg
sbb
or
mov
and
jge
and
les
xchg
ror
frstor
clc
add
fildll
add
ss
in
xchg
and
adc
lahf
fwait
mov
pop
push
mov
adcb
sbb
es
push
mov
sbb
jmp
into
mov
in
nop
pop
adc
mov
sti
fdivr
std
push
fsubs
cmpsb
je
popf
dec
xchg
mov
cmp
push
jle
clc
inc
mov
mov
repz
shrl
insb
dec
popa
fisubs
scas
rclb
popl
xorb
pushf
loop
test
sub
cmp
test
or
or
jmp
jne
fstpl
lock
cmp
fcmovbe
adc
addr16
ret
sti
das
aaa
dec
iret
mov
mov
mov
sbb
and
gs
sub
test
pop
adc
push
xorb
xchg
in
int
enter
js
sbb
add
pop
jae
mov
in
add
lret
jb
and
clc
pop
movsb
popa
hlt
mov
push
cmpsb
inc
psubusb
adc
test
adc
jmp
push
pushf
bswap
ret
mov
mov
test
popa
call
pop
test
ljmp
mov
dec
or
gs
jmp
in
push
push
std
push
clc
fldcw
add
and
dec
test
in
push
add
aaa
scas
jns
push
xchg
mov
loopne
push
pop
lods
jecxz
call
mov
dec
lock
push
or
push
sbb
pop
ds
xor
and
lock
sub
cmc
jbe
aas
fadds
inc
fisubs
cld
xchg
and
xor
pusha
push
cltd
jae
jmp
lock
mov
jae
jae
add
add
pop
adc
in
leave
or
mov
divl
adc
adc
jo
adc
shlb
xchg
lea
push
xor
mov
sub
or
jo
and
cmp
and
loope
ljmp
iret
cltd
popa
aad
pop
ds
shll
push
lods
mov
pop
mov
fisubrs
add
pop
dec
scas
cwtl
mov
hlt
shl
mov
filds
je
daa
pop
rcrl
enter
cmpsb
and
mov
mov
fcom
insb
idivb
clc
or
cmp
popa
mov
or
mov
lock
dec
push
jle
mov
mov
xchg
test
fwait
and
jecxz
loopne
icebp
mov
push
push
out
pop
cmp
pushf
add
push
mov
iret
cmp
clc
sbb
mov
push
jns
xor
mov
loop
xor
add
fnstenv
and
call
dec
nop
add
cmp
repnz
dec
mov
ljmp
and
add
push
ror
xchg
pop
loope
mov
test
pop
pop
int3
pop
add
sub
ror
pop
lds
loopne
sub
lret
jns
lret
adc
xchg
jno
insb
pusha
add
inc
push
mov
push
jl
movsl
bound
rclb
mov
mov
push
add
dec
outsb
cwtl
lods
les
jns
pop
mov
jb
mov
sbb
add
inc
inc
out
push
inc
mov
arpl
pop
or
imul
add
loop
insl
jne
test
pop
shll
es
adc
roll
dec
jno
cmc
inc
adc
rcll
mov
addr16
inc
lock
sbb
mov
mov
lret
fsubs
or
outsl
adc
xor
jo
sbb
popa
lahf
pop
std
add
negb
repz
sbb
aad
adc
push
mov
test
mov
cmp
push
sarl
inc
pop
push
xchg
and
push
inc
inc
sarl
sub
jnp
pop
dec
pop
jmp
out
xchg
gs
jecxz
in
mov
lods
inc
aam
das
sbb
cmp
movsl
or
sub
or
sub
aad
addr16
mov
mov
mov
loopne
cld
mov
push
push
aam
or
pop
push
in
xor
sub
dec
ficoms
cmp
mov
icebp
sub
insb
or
stc
adcl
xchg
fisttpl
das
add
xchg
jg
es
cs
push
pop
jnp
jecxz
cwtl
pop
push
insb
mov
test
add
jmp
fxch
fs
ret
inc
xchg
xchg
add
and
or
insl
dec
test
push
aas
ja
repnz
lock
jle
jnp
test
hlt
dec
sbb
es
adc
test
or
push
push
in
cwtl
or
mov
fnsave
loopne
jno
adc
inc
jb
add
inc
leave
mov
je
repnz
test
push
roll
mov
jmp
movsl
das
xchg
lds
adc
sbb
adc
fidivl
in
aam
pop
rcrb
xor
test
xor
aam
jp
dec
and
shrb
insb
jmp
inc
stos
xor
std
fisttpl
xor
mov
imull
sbb
mov
mov
sbb
jecxz
cmp
dec
adc
insl
pusha
dec
pxor
jmp
sbb
cmpsb
leave
mov
rcll
mov
lds
push
cmp
data16
enter
add
inc
pop
pop
imul
inc
shlb
mov
in
es
mov
xchg
notb
imul
xor
test
dec
adc
xchg
imul
xchg
adc
pop
xor
test
push
mov
pop
imul
shll
dec
lods
jle
ret
rcrb
aas
mov
pushf
pop
lods
sbb
clc
rcrl
mov
sbb
scas
sbb
lahf
jmp
xor
cltd
outsb
and
rolb
mov
inc
inc
push
jnp
cwtl
das
popf
mov
push
xchg
mov
imul
push
xchg
lock
jmp
cmpsl
xchg
jae
jno
jle
stc
dec
loope
push
xor
push
aam
and
dec
jle
shr
rcll
pop
lods
in
pushl
or
mov
sbb
jno
orb
jge
loopne
dec
adc
pop
xor
or
pusha
daa
aam
leave
f2xm1
bound
cli
xor
cmp
jnp
adc
int3
mov
dec
inc
sbb
jb
or
cltd
mov
insl
xor
push
sahf
out
add
arpl
scas
pop
dec
pop
dec
stos
ss
sub
mov
and
in
push
leave
adc
mov
fdiv
jbe
adc
data16
lret
dec
or
pop
pop
inc
jp
cmp
mov
push
repnz
ret
jne
outsl
arpl
add
sbb
adc
lcall
test
mov
sub
sbb
mov
pop
aas
aaa
pop
adc
stos
add
adcb
mov
jp
jne
xor
int3
or
aaa
mov
or
add
scas
sbb
lods
lods
add
push
sub
jne
lods
inc
inc
or
jb
inc
push
mov
sbb
aad
jecxz
ljmp
inc
pop
sub
and
dec
mov
lods
push
push
int
push
pusha
repz
repz
repz
xor
test
jmp
outsl
cwtl
fisttps
jno
sub
repnz
jl
loopne
gs
sub
ret
nop
out
imul
or
mov
jbe
pop
mov
xchg
jno
mov
scas
ret
dec
stos
scas
rorl
and
jg
ja
or
ja
insl
aad
and
inc
add
sti
pop
in
sbb
dec
imul
sbb
lods
adc
or
fbld
loopne
mov
xor
stos
add
popf
adc
push
popf
pop
xchg
js
and
scas
mov
inc
and
out
pop
or
mov
push
movsl
ljmp
mulps
test
pop
stos
xchg
inc
adc
shlb
jmp
into
xor
aad
dec
xchg
dec
jge
mov
call
insl
dec
sbb
mov
cld
fwait
popf
fldenv
mov
repz
inc
movsl
adc
adc
xor
xchg
or
jns
dec
jns
jno
push
mov
jo
push
jnp
out
lds
fmull
jo
or
cwtl
push
lods
test
insl
mov
xchg
in
outsb
sbb
pushf
mov
inc
xor
arpl
repz
mov
gs
int3
pop
dec
int3
adc
sub
jle
clc
or
cli
xchg
fwait
jns
cmp
mov
shlb
les
test
bound
sbb
jmp
push
insl
outsl
lock
movsb
mov
dec
idivb
and
test
mov
pop
xor
or
repnz
jmp
scas
and
and
inc
fwait
in
xchg
jp
das
push
dec
test
mov
xor
leave
lock
and
mov
int
out
xchg
xor
jo
jg
cmpsl
xor
xor
test
shlb
adc
mov
sti
call
cmp
pop
and
mov
pop
popf
push
cltd
andb
mov
jle
xchg
inc
or
cmpsb
xor
jne
push
in
fstl
jne
cmpsb
scas
arpl
mov
or
mov
stos
test
mov
dec
into
mov
sub
add
xchg
inc
movsb
fbstp
push
pop
xor
jb
aam
pop
std
loopne
jl
pop
imul
inc
jo
and
pushf
mov
data16
cmpb
xchg
int3
jno
xchg
int
fwait
inc
add
sub
sbb
jl
mov
and
decl
mov
mov
lods
cmc
xor
dec
xchg
push
dec
jmp
inc
js
ret
mov
inc
sub
icebp
sbb
mov
jae
rolb
pop
outsb
cs
sbb
xchg
aaa
or
popa
mov
in
std
xorl
subl
mov
inc
cmpsl
sbb
jg
or
mov
psubd
dec
pop
dec
mov
call
arpl
mov
jno
into
mov
pusha
jle
ljmp
cmpsb
test
lock
data16
insl
sahf
and
mov
jmp
mov
sti
push
xchg
mov
adc
dec
outsl
or
aad
inc
ljmp
pushf
pop
stc
jbe
je
sbb
push
in
jne
std
jecxz
cmp
mov
jg
push
addl
sbb
adc
xchg
cmpsl
or
cltd
xchg
je
adcb
fcomi
pop
push
jmp
push
ret
mov
daa
jae
int3
mov
inc
or
pop
icebp
inc
push
test
addr16
popf
push
lds
std
popf
test
in
fwait
pop
out
gs
jnp
xchg
dec
xor
pop
xchg
cld
xor
adc
movsb
test
push
bound
es
repz
leave
imul
ljmp
cmp
js
xchg
mov
movl
int
iret
dec
stos
xchg
lea
adc
imul
add
mov
mov
mov
pop
push
mov
and
push
popf
xor
inc
jbe
adc
popa
push
push
dec
in
add
fnstsw
test
pop
movb
in
fucomp
or
lds
mov
push
popf
sub
gs
push
iret
mov
cmp
out
pop
jbe
lahf
idivl
inc
push
jo
sbb
rol
mov
xchg
fisubl
ret
shlb
andb
aad
push
mov
add
push
push
sahf
fld
jp
mov
aas
lahf
lcall
ja
push
insb
sub
out
imull
loopne
insb
sbb
out
jmp
dec
mov
mov
imul
mov
popa
out
or
mov
cs
ss
outsb
loop
jns
scas
mov
lret
lret
in
scas
pop
mov
pop
pop
call
andb
mov
xor
xchg
inc
mov
add
dec
jg
stc
mov
xchg
out
lret
lock
sbb
shlb
dec
aas
rorb
dec
dec
and
mov
rcl
mov
or
adc
add
popa
jae
sub
mov
movsb
and
cli
cmc
sub
or
push
fcom
pop
mov
cmp
aas
adc
dec
push
and
shl
and
mov
pop
ret
push
dec
int3
ss
dec
ja
mov
stc
push
fs
push
inc
shlb
sarl
pop
mov
fwait
repnz
lret
mov
xchg
test
mov
pop
gs
fistps
subb
xor
hlt
pop
test
dec
push
insb
mov
jns
mov
adcb
imull
stos
stc
in
sahf
mov
lods
mov
or
les
xchg
xor
shll
push
or
adc
andl
movsw
and
jg
ret
jg
mull
dec
mov
pop
cmp
aas
cmp
out
dec
iret
fwait
js
mov
aad
cld
xchg
ficoml
push
ljmp
adc
dec
cmpsl
int
dec
push
clc
mov
lods
ljmp
push
and
in
inc
cmpl
cs
xchg
ljmp
jge
out
cmp
test
repz
cltd
push
sbb
pop
repnz
insb
xor
adc
fwait
cmpsb
loop
test
repz
aad
test
cltd
hlt
jle
shr
xor
std
mov
clc
adc
jb
mov
jb
sbb
sti
jo
aaa
push
lret
sarb
ja
mov
pusha
mov
imulb
or
xor
jns
orl
pop
out
xchg
dec
test
js
jp
dec
lock
ret
loop
clc
into
loopne
xchg
mov
clc
jno
mov
add
test
call
pop
fnsetpm(287
outsb
jmp
fistps
mov
jge
xor
sbb
inc
hlt
lret
adc
inc
push
cmp
pop
scas
cli
lock
xchg
gs
mov
mov
pop
inc
jo
je
fwait
test
mov
or
or
sbb
xlat
jae
lahf
sub
inc
mov
pop
or
sbb
lods
imul
and
rolb
ror
rolb
scas
jbe
insl
pop
nop
pop
mov
sbb
loop
das
pop
jns
clc
pop
cmp
xor
popa
and
jb
push
mov
adc
and
cwtl
lret
dec
test
std
dec
pop
mov
icebp
mov
jns
ret
jns
sub
adc
ds
lods
mov
out
xchg
scas
loope
jmp
xchg
cs
pop
cmc
mov
ret
dec
pop
adcb
mov
mov
jno
call
sub
or
push
jge
push
insl
mov
pop
js
pop
sbb
insb
pop
or
xor
add
or
in
subb
inc
aaa
cmp
cmp
or
shl
lods
inc
dec
inc
out
mov
xor
xchg
dec
lgs
imul
or
stos
cmp
jg
pop
fisubs
xchg
loopne
add
inc
int3
gs
sti
adc
jae
imul
inc
inc
cltd
jne
pop
pop
sbb
lds
mov
pop
insb
dec
push
adc
stos
mov
push
xchg
sub
inc
mul
mov
repnz
ja
adc
out
rcrl
inc
out
xchg
push
mov
dec
ds
insb
pop
sub
cvtdq2ps
ficompl
out
je
idivl
iret
jns
pop
subb
into
sbb
ds
cwtl
cwtl
andl
dec
mov
cwtl
xchg
fcmovne
jge
imul
pop
xor
cmpsl
icebp
pop
in
xchg
ja
rcrb
cltd
xor
jl
push
dec
dec
adcb
icebp
mov
out
lcall
and
in
mov
xlat
ficompl
adc
jne
imul
inc
or
xor
aam
or
cmp
or
aaa
mov
cltd
add
pop
xchg
orb
push
mov
movsl
in
gs
sbb
das
imul
jnp
aam
push
dec
add
inc
mov
subb
mov
inc
push
mov
pop
int
cmp
mov
pusha
popf
jp
xor
lock
inc
push
dec
xchg
test
es
xchg
pop
nop
cmp
aaa
pop
mov
gs
and
or
mov
jl
imul
sahf
or
ja
jno
stc
pop
xchg
or
cltd
enter
sbb
aad
inc
loopne
ss
or
std
mov
push
es
or
sub
stc
cmpsl
leave
testb
ds
ret
push
stc
sbb
adc
pop
mov
pop
push
or
flds
mov
outsl
mov
insb
daa
cmc
xchg
push
jg
call
ljmp
into
adc
sbb
xlat
fstps
jb
push
popa
out
and
xor
inc
mov
jb
shld
in
adc
das
call
and
in
add
jns
adc
push
outsl
inc
stos
daa
lret
imul
mov
jno
sbb
pop
popf
ds
adcl
scas
xchg
pop
push
mov
pop
xlat
dec
dec
xchg
mov
stos
dec
aad
sbbb
mov
fcompl
xor
add
sub
mov
gs
add
aas
mov
adc
into
sbb
loopne
add
or
mov
cmp
jge
adc
pushl
daa
fdivs
or
push
fildl
push
cmp
loopne
mov
lcall
mov
lods
idivb
dec
in
popf
test
lret
pop
shrl
lods
hlt
xchg
mov
sub
jge
cmpsb
jae
and
and
mov
fsubs
repz
lods
int3
pop
sub
in
lods
int
fldt
test
xchg
loop
xchg
std
jmp
sub
push
arpl
int
decb
call
pop
mov
iret
xchg
into
jg
pushf
loope
ret
cmpsb
sub
addr16
addr16
jecxz
cmp
std
lret
dec
jae
rolb
pop
gs
pop
mov
repnz
lret
cmpsb
dec
or
xor
push
adcb
rclb
sub
cmpsl
fldenv
std
sbb
or
mov
cld
fistl
push
outsl
pop
jmp
jmp
dec
add
dec
outsb
int3
ret
jge
js
cmp
push
gs
cmp
push
stos
xchg
mov
scas
fiadds
inc
cwtl
int
aad
jo
mov
mov
xor
call
sbb
lods
and
rcrb
arpl
inc
aam
sbb
out
pop
cmp
xchg
sbb
imul
cmc
xor
rol
sahf
scas
add
cmpsl
push
push
es
adcl
xor
jle
ljmp
ljmp
fisubl
jge
sbb
aas
cmc
mov
mov
nop
call
dec
addl
rcrl
nop
sub
jno
mov
lcall
gs
call
xchg
test
sbb
xchg
es
xchg
in
lret
mov
ja
sbb
push
xchg
test
icebp
jge
sbb
and
mov
xchg
sub
sub
test
clc
jl
rcll
pop
xchg
or
dec
push
xor
scas
pop
ss
mov
fs
ss
js
adc
ret
xlat
stos
mov
js
out
jb
mov
aaa
pop
movsb
xor
mov
xchg
jmp
jg
pop
andl
pop
and
mov
or
and
add
jnp
pop
shlb
mov
sub
imul
cmp
jmp
xchg
mov
inc
lahf
mov
into
xchg
add
jg
ja
aaa
mov
push
je
push
xor
mov
roll
adc
les
mov
in
sub
add
dec
pop
stc
sbb
sub
loop
jl
mov
enter
ret
sbb
kmovw
loope
bound
sahf
mov
lods
je
mov
dec
mov
xor
pop
cmp
adc
popa
aas
rorl
xchg
in
sub
fcmove
jno
mov
insl
out
mov
inc
ljmp
jno
xchg
jle
or
in
or
cmpsb
xchg
push
sbb
mov
nop
jb
dec
push
xchg
aas
push
mov
or
jp
or
cmc
inc
xchg
dec
cmp
andb
push
mov
iret
fbstp
adc
push
or
lret
jl
xorb
ror
lahf
jmp
shlb
cmp
sarb
and
xor
or
divb
shll
xlat
xchg
pop
jge
cmp
rcrl
insl
xorl
leave
lcall
mov
aad
pop
jbe
xchg
das
jl
xor
sbb
movsl
cmp
je
cmp
lea
jl
lea
mov
aaa
jne
or
bnd
push
xor
inc
int
fisubl
pop
cmp
xor
lods
dec
stos
add
mov
inc
cmc
fldcw
test
xor
lods
negb
sub
faddl
pop
jmp
adc
push
cmp
jmp
pop
into
mov
mov
push
xchg
mov
ja,pt
inc
add
jecxz
fnstenv
pop
sbb
mov
lods
jp
aam
imul
xchg
xchg
adc
mov
jmp
sahf
bound
mov
fidivrs
stos
xchg
xchg
int3
xchg
adc
mov
pop
addr16
and
sbb
dec
popa
xchg
jns
push
add
lcall
call
lds
mov
loope
inc
pop
cmp
inc
inc
jne
lret
pop
or
daa
pop
jp
sbb
and
and
jge
mov
mov
addr16
inc
lods
out
fwait
repz
cmp
mov
sub
clc
inc
imul
cmc
dec
and
xor
out
jmp
das
inc
pushf
xor
dec
aas
mov
ja
loopne
jp
jo
fcompl
ret
outsb
cltd
scas
push
push
push
in
mov
shlb
rcl
push
imul
pop
movsb
fnstsw
push
sub
adc
push
mov
push
xor
dec
cmp
frstor
xchg
jne
jbe
add
xor
pop
jecxz
push
dec
clc
xchg
and
insb
testl
lret
repnz
xchg
frstpm(287
into
lret
repz
inc
sarl
popf
dec
push
xchg
xor
cld
fmull
leave
imul
hlt
adc
or
mov
xor
jb
cltd
push
neg
adc
or
fadds
jns
add
stc
sbb
cld
das
test
adc
cmp
test
sbb
xchg
cmp
mov
push
lret
fldt
aaa
xchg
faddl
dec
inc
ljmp
pop
movsb
xor
cmp
outsb
mov
sub
lods
push
shrb
or
fwait
insb
dec
mov
cmp
ljmp
hlt
adc
pop
mov
sub
repz
test
adc
jnp
mov
adc
sahf
mov
das
mov
mov
rcrb
jl
mov
and
sbb
cmp
mov
pop
movsb
and
sbb
push
mov
xor
sbb
dec
pop
cmp
es
mov
dec
jnp
outsl
mov
and
out
popf
jnp
scas
shll
pop
and
out
mov
mov
aam
je
jno
dec
fstl
sub
xchg
jne
rolb
fcoml
sar
xchg
ds
in
je
sarl
or
in
pusha
in
pop
data16
stc
fwait
xor
fldcw
push
popa
out
cmp
mov
cs
cmc
mov
das
push
mov
sbb
test
movsl
mov
sub
jmp
stos
xchg
scas
mov
mov
addr16
in
jl
dec
mov
sub
out
into
xchg
mov
enter
dec
and
sahf
mov
mov
push
pop
idivl
cli
aas
rorb
mov
js
add
testb
mov
sbb
arpl
imul
pop
sbb
sbb
pusha
xor
out
fstpl
dec
outsb
dec
xchg
and
ds
pop
data16
fs
movsb
jnp
subl
xor
xchg
sub
xchg
mov
hlt
add
repz
data16
push
push
sbb
stc
sbb
fsubl
popf
inc
shll
incb
jle
imul
into
inc
dec
xor
loop
mov
ja
mov
mov
es
ror
movw
jp
lahf
gs
popf
in
mov
hlt
je
jp
cmp
in
popa
jb
nop
sub
and
mov
sub
dec
repz
loop
subl
inc
std
cmp
inc
nop
push
or
scas
push
enter
cmc
cltd
xor
jno
mov
adc
mov
xor
sarb
adc
cmp
inc
cmpb
jg
fdivl
push
fs
pop
inc
push
mov
dec
fisubrl
push
movsl
cmp
lahf
loop
mov
test
insl
jbe
dec
int3
dec
lock
push
and
or
pop
imul
mov
pop
pop
lock
cmp
mov
and
cmc
aad
jmp
dec
mov
adc
jp
pop
push
sub
out
xchg
stos
sbb
mov
mov
pop
mov
jnp
mov
inc
int
cmpsb
dec
adcb
xor
adc
push
sbb
in
roll
mov
dec
pop
pop
into
mulb
sub
aaa
or
lret
mov
inc
rcrb
dec
xchg
mov
std
sti
xchg
xchg
and
bnd
pushf
xchg
sbb
xchg
in
push
mov
data16
adc
xor
push
sub
mov
or
fsubs
jae
js
gs
jae
hlt
sub
gs
aaa
xchg
mov
xchg
data16
insl
clc
pop
out
outsb
and
pusha
sbb
jg
pop
mov
scas
mov
test
jp
icebp
mov
push
add
pop
in
mov
fs
call
ds
xchg
gs
mov
iret
adcl
movsl
arpl
jmp
popf
aas
pop
sbb
mov
mov
mov
xchg
ss
add
ror
inc
outsb
adc
push
cltd
je
mov
or
enter
push
mov
lods
mov
mov
mov
repnz
scas
cltd
push
dec
mov
adc
dec
push
and
arpl
js
add
dec
fdivrs
adc
push
mulb
sbbl
in
mov
cmp
je
push
inc
int3
ja
mov
inc
call
inc
pop
sti
fldt
dec
sbb
lods
add
lock
push
pop
and
pop
sub
test
repz
cmp
jns
dec
jmp
sti
push
sbb
je
and
addl
xor
xlat
insl
jno
push
leave
mov
xchg
xchg
bound
mov
repnz
add
mov
sbb
or
cmpsb
subl
mov
stos
dec
insl
dec
jae
movsl
out
aas
popa
insl
pop
adc
mov
xor
aad
mov
pop
cld
xor
jo
xchg
and
outsb
pop
cld
loope
push
popa
inc
mov
and
std
popa
adcl
addb
fs
sbb
cmp
stos
sbbl
mov
push
std
sbb
push
dec
jb
lods
ljmp
out
testb
jecxz,pn
lock
je
pop
inc
xchg
cmp
dec
mov
rcl
fists
cld
std
stos
inc
imull
dec
bound
cmp
imul
out
inc
leave
cmp
mov
cmp
gs
ds
sbb
loop
movsl
repz
outsl
jecxz
add
aam
lret
aas
add
cld
fistps
pop
dec
dec
inc
lea
xchg
hlt
add
pop
dec
mov
lcall
dec
cmp
ficompl
iret
jae
stos
insb
cmp
mov
and
inc
je
jns
out
cmc
cmp
mov
pop
sub
lret
or
lods
pop
dec
xchg
jns
push
mov
add
out
xchg
mov
popf
rcrb
pop
sub
fisttpl
test
imul
aas
adc
enter
movsb
loop
out
test
or
sbb
mov
pop
and
pop
add
test
lcall
fsubs
or
sub
fcoml
hlt
outsl
movsl
xchg
pop
jo
mov
xchg
rcrb
sbb
sbb
mov
dec
fisubrs
hlt
sbb
lea
push
pushl
clc
mov
push
inc
icebp
cld
insl
lds
stos
test
fsubr
ret
movsl
jb
sbb
push
jp
es
stc
pop
loop
push
mov
dec
jmp
pmulhw
or
cmp
mov
aad
pop
sub
pusha
imul
fdiv
in
and
cmpsl
mov
jns
stc
fidivl
pushf
sub
pop
dec
movsl
je
icebp
imul
cmp
incb
xorb
fidivs
sar
dec
mov
pop
test
mov
push
repz
pop
arpl
out
mov
jne
fistl
je
std
push
neg
imul
fistps
mov
iret
push
loop
sarl
push
jnp
lea
shl
pop
dec
or
arpl
pusha
dec
fsts
inc
jb
adc
stos
inc
cmp
push
inc
leave
fmuls
pop
inc
mov
imulb
scas
mov
hlt
enter
or
aaa
lcall
paddd
push
sub
jb
iret
call
inc
mov
or
dec
inc
outsl
cmc
or
test
dec
or
or
aam
out
into
mov
das
ja
pop
shrb
pop
and
xchg
or
push
jns
mov
lods
movsb
lcall
adc
sbbl
xchg
ds
rcll
daa
mov
or
loopne
mov
scas
lahf
mov
adc
orl
bound
or
cmpsb
xor
mov
stos
scas
or
xor
sbb
loope
mov
test
sbb
push
mov
cltd
fidivl
jp
in
push
cmc
sub
mov
das
test
ja
out
dec
xchg
ljmp
icebp
popf
es
stos
xchg
mov
mov
mov
aaa
mov
shlb
fisttpl
hlt
inc
push
jle
and
xchg
cltd
je
dec
fadd
aas
decl
push
sbb
out
push
mov
jno
jmp
sbb
mov
push
rorb
mov
aas
in
mov
jge
xor
into
inc
adc
mov
pop
mov
ret
rorl
jg
dec
mov
addl
fsts
sbb
add
or
cli
add
es
clc
adc
cs
mov
fsubrl
pop
jno
and
popl
aas
push
mov
push
mov
mov
out
aas
les
fcom
test
push
nop
inc
jmp
test
inc
pop
xchg
mov
clc
mov
adc
js
push
dec
push
loope
test
popa
mov
adc
or
cwtl
sbb
cs
test
orl
jge
aam
cmp
pop
test
iret
xchg
dec
repnz
imul
cld
push
dec
cld
ret
jl
mov
ljmp
mov
lods
adcb
sbb
xorb
fidivrs
sub
imulb
sahf
fstpl
push
jmp
sbb
lahf
jb
cmp
lret
pusha
bound
scas
jb
xchg
push
xor
push
fstpt
and
dec
les
nop
mov
fsubr
mov
pop
cmp
adc
jp
jb
sbb
aad
movb
pop
pop
push
into
pop
mov
rcr
lods
test
cmc
mov
or
loopne
scas
sub
adc
lret
xor
sahf
ret
mov
sbb
mov
pop
dec
sbb
lock
push
push
stos
mov
imul
aam
jg
ss
sbb
mov
push
sub
ss
jne
loopne
xor
and
jo
sub
jg
mov
dec
loopne
cli
jp
lea
leave
daa
dec
fsin
lds
dec
and
ds
xor
cld
cmp
mov
cmp
movsl
aaa
push
cmp
insl
ret
ror
add
sub
cli
sub
lods
int
mov
bound
sub
mov
mov
mov
push
fdivr
xor
jge
xchg
xchg
stc
rcll
sub
movsb
arpl
jmp
icebp
out
inc
clc
and
dec
inc
adc
fldt
jnp
out
add
fidivs
xchg
xchg
cli
dec
in
insb
jo
sarl
mov
add
mov
cmp
xor
or
or
movsl
inc
leave
xchg
loopne
call
std
out
in
in
daa
test
enter
jle
add
leave
mov
push
xlat
faddl
mov
inc
mov
icebp
dec
pop
jns
jecxz
jecxz
add
mov
fdivr
push
stc
sub
sub
repnz
jp
repz
in
insb
mov
sbb
iret
cmp
inc
adc
cmp
aas
nop
mov
mov
jmp
rep
adcl
adc
inc
sbb
aas
pushf
test
lret
scas
ret
sub
jae
sub
in
jo
inc
and
aad
testl
daa
les
or
add
jl
push
push
xchg
mov
inc
fstps
inc
add
arpl
fimuls
sbb
add
cmp
cwtl
and
lahf
lret
ds
lret
push
cmc
rcrl
es
jns
pop
aam
push
jno
arpl
gs
scas
sub
fcomps
adc
in
int3
sub
cs
mov
mov
and
mov
jb
pushf
daa
xor
pop
xchg
push
add
mov
scas
scas
test
cltd
xchg
in
sahf
fisubl
mov
push
jo
xor
loopw
push
call
and
push
sbb
shrb
cltd
add
mov
insb
jo
cmpsl
xchg
xor
pop
sub
pop
xlat
cmp
mov
rolb
decl
insb
adc
pop
popa
xchg
lcall
cmpsb
fwait
stos
aaa
xchg
xor
mov
push
inc
incb
xor
push
add
fcompl
repnz
jmp
adc
mov
das
adcb
cmp
call
xchg
pop
je
pop
sub
or
ret
and
mov
push
xor
dec
daa
negb
mov
outsb
pop
sub
mov
repz
es
xchg
in
adcb
test
call
scas
ja
mov
call
out
rclb
xchg
sbb
pop
pop
adc
dec
aad
stos
add
insb
xor
mov
fnstenv
jae
dec
std
cmp
sti
mov
js
sbb
inc
pop
inc
pop
sub
loope
fsubrl
stos
sbb
ret
lds
aas
rorl
jle,pn
clc
add
inc
lods
scas
pop
int3
in
out
jb
cli
out
jl
mov
icebp
mulb
adc
filds
sarl
push
punpckhdq
lock
inc
jmp
clc
or
mov
jle
lods
jl
out
adc
mov
ss
xor
add
add
push
jl
xchg
les
les
mov
in
lahf
popf
cmp
loopne
mov
test
and
push
aas
cmp
dec
xlat
jmp
pop
push
insb
cmpsl
inc
cmp
mov
xor
or
in
hlt
xchg
fidivrs
mov
imul
sbb
inc
dec
divb
data16
bound
xchg
push
pop
cmp
xchg
push
shll
mov
js
and
adc
outsb
pop
ret
mov
lods
xchg
dec
sbb
cmpsl
call
mov
mov
add
adc
insl
xor
sub
ret
shrb
push
mov
xchg
dec
mov
shll
dec
cmp
or
pop
push
sbb
pop
cld
test
mov
push
adc
pop
dec
add
adc
mov
cltd
xchg
cmp
fisttpl
mov
nop
in
add
jle
mov
or
pop
dec
push
mov
roll
mov
loop
js
xchg
mov
pop
adc
xor
jae
inc
std
divb
push
scas
scas
mov
xchg
xchg
scas
adc
daa
ret
push
pop
into
push
and
inc
pop
and
mov
fisubrl
xchg
adc
mov
xorb
mov
mov
xor
dec
adc
inc
pop
mov
stos
xchg
jge
je
mov
movsb
movsl
adcb
inc
std
in
iret
add
cmp
imul
push
and
jge
jle
leave
std
add
mov
jle,pt
es
sbb
lods
ja
adc
xor
adc
stos
mov
or
sti
in
pop
mov
mov
and
and
and
mov
inc
jae
subb
mov
and
test
push
sub
pop
hlt
pop
mov
sahf
xor
out
ljmp
adc
lock
sbb
jge
adc
xchg
jnp
cmp
and
sub
lret
cmp
adc
inc
ror
int3
add
mov
sbb
adc
push
push
dec
pop
ficomps
push
lret
imul
sahf
cmp
rcrb
jbe
lret
xlat
mov
mov
pop
pushf
fistpll
dec
rclb
jmp
xchg
cmp
xchg
xor
cmp
mov
fcompl
lahf
add
mov
pop
jp
xor
test
stos
iret
mov
cltd
out
add
xor
sub
pop
mov
aas
xor
and
shrb
fcomps
mov
dec
fadd
divb
jecxz
dec
mov
ret
fdivrs
cmp
sub
sub
cmc
adc
pushf
lds
rcrl
daa
lea
bswap
xchg
cmc
sub
xchg
cmp
insl
add
movsb
out
ficomps
push
cmp
mov
out
sub
fldl2e
jle
fstpt
pop
loop
pop
xchg
and
sbb
jg
int3
notb
dec
pop
cmp
aas
rcrl
out
xchg
jo
rcrb
jno
in
leave
and
addl
in
movb
pop
dec
pop
aas
xor
leave
repz
pop
in
jmp
lea
nop
ds
add
stos
jle
rclb
scas
stos
cmp
ds
add
push
call
mov
in
aad
hlt
pop
jecxz
xchg
push
loope
sbbb
cmp
push
in
adc
mov
lcall
jnp
jbe
movsb
outsb
out
inc
inc
xchg
or
das
testb
ljmp
xorb
cmp
jl
inc
pushf
push
adc
cmc
shrl
and
cmp
out
pop
xor
sub
lods
mov
lret
mov
xor
or
imul
nop
lods
es
jnp
gs
fildll
aam
jecxz
lods
je
add
aad
sarb
mov
jecxz
jo
add
dec
pop
cmpsb
stc
mov
aaa
mov
movsl
mov
jp
xor
mov
bt
sbb
mov
ret
idivb
insl
pop
dec
repz
cmpb
xor
dec
lcall
mov
jmp
adc
push
mov
lahf
nop
movsb
jns
test
daa
ja
daa
rclb
mov
js
sub
inc
ret
pop
int3
js
in
in
or
cmpsb
in
xor
mov
aaa
je
in
sbb
lock
xchg
ja
push
in
mov
stc
jp
jb
adc
and
and
fisubl
sub
lcall
pop
pop
jmp
popf
pop
cmp
and
and
pop
lods
cmp
sbb
and
and
adc
sub
loope
lock
dec
iret
xchg
fistpl
push
inc
pop
das
xor
stc
in
xorb
enter
or
cwtl
pushf
xor
dec
js
xor
adc
cld
mov
pushw
popf
or
push
sar
cmpsb
sti
mov
movsb
mov
push
jmp
xchg
mov
gs
xchg
iret
xor
aam
cltd
inc
lcall
scas
pop
daa
call
push
sti
cli
ja
push
in
and
pop
pop
xor
inc
and
sahf
je
and
dec
lods
lcall
mov
inc
inc
daa
adc
sub
retw
or
lods
xor
mov
je
jno
mov
adc
stos
dec
add
sahf
imul
arpl
mov
aam
into
xor
adc
push
push
test
fadds
aad
push
loop
out
push
mov
xor
and
cmpb
cmp
pusha
sbbl
xor
push
mov
xor
pop
aam
mov
cld
sub
inc
fs
inc
pusha
xor
arpl
sbb
movsl
xchg
jge
pusha
add
in
adc
jno
int3
in
imul
call
stos
dec
test
scas
xchg
popa
int
pushf
fcmovu
aad
in
lds
pushf
jmp
sahf
mov
mov
and
js
jle
insl
std
lcall
adc
lock
mov
fidivrs
lahf
inc
mov
pop
jmp
out
adc
in
movsb
inc
andb
jmp
push
popf
flds
js
sbb
push
mov
frstor
cwtl
leave
std
fadd
jbe
pop
fcoml
inc
lea
mov
pop
hlt
mov
nop
jb
loopne
lock
dec
inc
or
rcl
mov
jno
sub
add
bound
test
mov
popf
ljmp
ret
xor
aad
dec
pop
mov
adc
mov
test
insl
sbb
mov
stos
dec
or
scas
mov
xlat
cmp
xchg
fcmovu
push
outsl
cmp
cmpb
cmp
inc
scas
rcll
fadds
pop
cmp
ficomps
icebp
mov
or
push
aam
aaa
or
ret
shrb
loop
pop
lods
das
push
inc
ljmp
and
push
lretw
cmc
mov
fsubrl
je
jbe
loopne
add
rcrb
xchg
in
jge
xchg
rolb
addr16
cmp
or
cmc
aas
sahf
pop
xor
jb
lock
mov
ljmp
adc
sti
add
nop
sahf
sahf
and
shrb
and
pop
sbb
push
loopne
push
xchg
mov
push
rcrl
mov
sti
icebp
cld
sbb
loopne
push
dec
or
xor
pop
jl
xor
sub
test
je
sub
cmpsl
mov
mov
cmp
insl
jne
xlat
xor
xorl
je
iret
xor
inc
jns
hlt
imul
adc
sbb
sti
inc
mov
sti
cmpsb
test
xchg
push
insb
test
imul
aaa
stos
xor
into
fwait
lods
dec
les
xchg
add
and
ffreep
sbb
pop
and
lea
das
or
mull
int
int
leave
setge
mov
loop
sub
sub
addb
fstpt
jae
cltd
daa
sarb
dec
sbb
pusha
inc
fnsave
dec
sti
imul
cltd
imul
pop
dec
sub
or
lock
outsl
lret
in
ret
mov
inc
jbe
inc
movsb
call
inc
pop
and
sub
xchg
test
mov
adc
push
jg
sbbb
lds
incb
jne
push
jp
jbe
mov
inc
lret
cltd
push
jg
xchg
mov
lods
xor
inc
in
cwtl
sbb
or
int3
fadds
jg
stos
lret
clc
xchg
fdivrl
push
loope
xchg
out
repz
popf
andl
push
and
mov
inc
nop
fistpl
pop
ja
pop
ss
adc
popa
fdivrl
inc
insb
xchg
add
mov
out
loop
loopne
add
push
xor
push
jecxz
ftst
inc
lods
dec
stc
lcall
xchg
mov
adc
jbe
leave
cli
sbb
or
mov
pop
adc
data16
add
js
cli
stc
aas
lahf
ljmp
test
fldl
adc
push
sub
test
rolb
cld
xor
inc
jb
or
mov
subl
jle
je
push
testl
outsl
sbb
mov
rcrl
jmp
sub
mov
ljmp
dec
aaa
outsb
pop
cs
and
jg
push
mov
scas
xor
sub
dec
and
push
aaa
dec
jne
fdivrl
ja
mov
xor
nop
sub
sbb
mov
mov
stc
stos
scas
dec
repnz
clc
mov
nop
mov
inc
add
popf
out
mov
pop
or
sbb
add
je
mov
pop
in
cmp
pop
push
data16
jo
pop
push
or
insl
push
sbb
out
mov
mov
push
dec
dec
mov
lock
dec
jg
lret
sub
xor
add
pushf
pop
mov
cmp
int
mov
cs
outsb
xchg
jne
arpl
js
sti
cmp
addr16
mov
push
mov
mov
add
jae
push
in
cmpsl
mov
insb
jmp
push
add
jb
rcrl
mov
and
out
rolb
dec
jecxz
adc
imul
and
fsubrl
push
xor
sub
sbb
sbb
sbb
pop
mov
jae
loope
inc
lret
cmpsl
sbb
and
add
cld
xchg
fcomps
arpl
ja
xchg
enter
popa
sub
cmp
divl
gs
sub
xchg
sub
push
inc
xchg
insl
loopne
dec
popf
ds
xor
inc
mov
in
repz
aam
jae
push
sub
xchg
push
pop
push
push
sbb
sti
push
add
rcl
sbb
ret
loop
outsl
lcall
xchg
insl
fnsetpm(287
xchg
and
or
xchg
jle
sbb
xchg
fs
lahf
mov
data16
inc
pop
fsubrs
inc
cmp
push
pop
push
inc
inc
xchg
fimuls
fisttpl
inc
inc
push
imul
mov
sbb
xchg
jg,pn
cwtl
dec
pop
loope
cmp
cwtl
push
mov
inc
lcall
sub
adc
outsl
xor
push
and
aas
iret
add
xor
mov
mov
enter
lock
lods
daa
mov
mov
cmp
jecxz
ds
xchg
addl
enter
ss
cli
add
inc
pop
ret
or
mov
dec
adc
ss
mov
movl
rcr
add
cmp
in
push
shlb
bnd
and
mov
imul
das
lods
mov
sub
mov
rcrl
sub
aad
mov
xor
mov
lds
pushf
sti
pop
xchg
aaa
pop
xchg
xchg
sbbb
mov
dec
cmp
xchg
pop
sbbb
stos
les
pusha
sub
das
cwtl
push
push
lods
jg
xorl
dec
loope
loopne
cmp
xor
dec
mov
lea
ljmp
and
or
fdivrs
jno
mov
fbstp
mov
movsl
pusha
sub
cs
xchg
in
adc
mov
xchg
pop
lahf
xchg
in
enter
and
push
les
pop
xlat
out
data16
mov
int
arpl
enter
sbb
cmp
pop
push
sahf
pop
inc
scas
bound
cmpsl
popa
jg
lret
jnp
ljmp
xchg
mov
aam
sbb
add
sbb
sub
fisttps
jo
bound
and
sti
rcll
idivl
roll
mov
push
fists
hlt
ret
pop
pop
std
icebp
mov
add
scas
pop
ds
and
and
jle
pop
pop
xchg
mov
jg
call
cmp
out
mov
add
mov
mov
inc
mov
stos
inc
inc
push
ljmp
cmpsl
mov
push
cs
pop
sub
mov
dec
loopne
push
cld
jg
loope
gs
shlw
imul
sbb
fsts
pop
mov
sbb
nop
lods
xchg
lds
add
add
cmp
cmp
cmp
sbbb
jg
cli
push
pop
xor
data16
xchg
push
sarb
aaa
lret
outsb
das
aas
pop
cmp
or
div
mov
xchg
push
aas
mov
inc
jnp
ficomps
ljmp
sub
popf
push
adc
pop
bound
xor
fs
sub
sbb
xchg
push
ss
test
mov
ret
inc
mov
jo
cmpsb
jns
inc
pop
mov
outsl
int3
je
rolb
mov
xchg
hlt
addl
mov
or
pop
inc
sbb
xchg
orl
cmpsl
int3
xchg
pop
mov
roll
sub
adc
fcomp
pop
mov
pop
ret
mov
jns
sbb
xor
ja
out
pushf
mov
je
mov
sub
nop
inc
push
out
adc
and
test
mov
out
xchg
mov
xchg
in
push
pusha
inc
add
aaa
enter
and
arpl
and
inc
stos
jmp
xchg
push
scas
adc
xchg
jnp
sti
test
cmpsl
add
rcrl
rclb
scas
push
add
mov
aad
dec
ljmp
sub
sbbb
pop
dec
fisttpl
xor
add
mov
sbb
pop
lcall
mov
and
cmp
cltd
cmp
and
lcall
cltd
bound
scas
xchg
mov
add
pop
dec
push
data16
and
and
dec
or
lcall
xchg
adcb
sahf
and
frstor
push
fisubl
or
sbb
lods
iret
int3
js
pop
sbb
adc
popl
das
sbb
add
cltd
mov
outsl
insl
mov
cmp
loop
test
aam
jb
scas
loop
fnsave
jb
es
int3
repz
pop
je
shrb
in
jne
faddp
jge
jl
movl
push
lret
jge
sahf
mov
pop
cmp
jo
in
fsubrp
mov
mov
lret
call
lods
dec
and
xor
and
cs
add
xlat
popa
mov
dec
mov
rol
cmp
ret
stos
jbe
divb
movsl
pop
ret
lods
cmp
xor
das
inc
mov
hlt
push
sbb
sbb
mov
lds
shrb
dec
nop
ds
notl
mov
mov
idivl
xor
call
mov
arpl
push
fmuls
in
call
mov
jns
jb
dec
adc
pushf
mov
jnp
loope
negb
lahf
std
mov
fldenv
sbb
insb
ret
addr16
das
fdivl
in
cmp
xor
test
dec
dec
std
shlb
repz
mov
xlat
sbbl
mov
stos
dec
movsl
pop
jp
mov
jl
nop
in
cmp
push
outsl
dec
subl
mov
mov
cmpsl
jno
loopne
push
jecxz
fadd
mov
dec
jmp
dec
lahf
inc
mov
les
cmp
and
push
pop
dec
mov
and
xor
notl
into
in
insl
xorb
mov
sarl
pop
sti
lret
insb
pop
xchg
aam
or
adc
addb
sub
aaa
jno
hlt
pop
lcall
ss
cmp
sub
aad
cld
incl
pop
outsb
stos
insb
ja
jl
ds
imul
dec
xor
inc
rcr
inc
js
push
pushf
lcall
xchg
insb
je
sub
js
mov
and
lret
roll
icebp
adc
lahf
fnstenv
add
adc
xor
iret
jae
mov
xor
mov
sahf
cmp
test
out
sbb
or
sub
push
ret
arpl
daa
movsb
and
sti
and
cmp
dec
and
in
lods
push
dec
enterw
aaa
push
hlt
mov
adc
fwait
and
push
cmp
xor
scas
cltd
fsubrl
cmp
pop
cwtl
add
jle
adc
test
loope
cmp
stc
lahf
cltd
jecxz
mov
sbb
jp
movsl
pushf
cli
lock
in
sti
iret
lock
and
loope
sbb
cli
sbb
dec
sub
sbbl
ret
xchg
fstpl
ljmp
mov
pop
scas
sarl
xor
jl
push
cmp
jnp
leave
jo
ds
inc
sub
sbb
loopne
mov
mov
cmp
and
pushf
ja
sub
in
loope
inc
popf
ftst
pop
adc
insb
nop
and
clc
mov
push
scas
xchg
test
mov
xlat
inc
pop
lea
cmc
and
xchg
xchg
popf
sbb
jns
xchg
aas
in
dec
dec
mov
adc
sbb
fldl
aam
xor
pusha
adc
xor
sbb
pop
pop
pop
int3
cmpsl
pushl
or
mov
fisubl
dec
sub
and
mov
adc
lcall
jno
jns
cmpsb
out
dec
jb
cmpsb
push
outsb
adc
popf
cmp
adc
je
jae
pop
ja
lahf
lods
int3
sbb
popa
or
mov
aam
cli
frstor
sti
jns
shl
add
in
fsts
out
out
push
cs
xchg
adc
pop
pop
push
or
pop
xchg
lods
lret
pusha
xor
pushf
xchg
dec
xchg
or
jmp
mov
leave
push
not
aam
add
aas
cmc
pop
jl
loopne
mov
sub
pusha
fcmovnu
adc
cmpsl
into
int3
test
xchg
xor
pusha
dec
sub
fcom
cwtl
fucom
dec
dec
loope
fadds
scas
inc
xchg
xor
test
stc
cmpsb
push
lcall
xchg
inc
pop
stos
sbb
push
jecxz
ficomps
into
sbb
push
xorl
xor
add
jge
pop
xor
inc
push
sahf
inc
push
add
dec
mov
ss
inc
xchg
int3
mov
mov
cmp
push
pop
aam
fmull
jne
jnp
imul
xor
movsl
nop
in
xchg
fisubrs
cli
dec
dec
jmp
test
xlat
test
sbb
repnz
icebp
rcl
imul
sbb
add
in
xchg
push
sarl
popf
frstor
mov
pop
adc
push
jecxz
push
pop
dec
inc
cwtl
mov
and
les
dec
jle
mov
repnz
push
xchg
xor
jge
push
faddl
and
movsb
aas
jno
mov
push
aad
jmp
pop
push
outsl
mov
js
cwtl
outsb
sahf
or
pop
push
dec
add
lret
pop
lods
cmp
lcall
mov
xor
jno
dec
das
icebp
rolb
rorb
ret
fs
sbb
sahf
adc
dec
inc
movsb
or
stos
das
mov
rolb
mov
stos
pop
sub
outsb
xchg
and
imul
add
test
pop
add
add
inc
sbb
add
fs
repnz
es
pop
je
imul
mov
mov
rcl
nop
xor
movsb
cmp
xchg
es
mov
jnp
xchg
js
push
leave
add
scas
mov
push
xor
pop
fimull
in
xchg
loope
mov
cmpsl
jmp
lea
loopne
inc
mov
xor
insl
sbb
jbe
push
push
push
add
and
ret
aam
outsl
mov
dec
push
xor
pop
xchg
lds
jo
rcll
xor
jns
int
pop
xor
dec
sbb
es
jno
movsb
xor
mov
add
add
into
push
adc
pop
mov
aam
pop
shl
imul
shl
sbb
mov
pop
sub
push
cmc
ret
out
es
das
mov
loopne
sub
movzbl
dec
hlt
jle
mov
lahf
test
push
movl
les
inc
cmp
adc
add
sub
dec
popa
add
jle
int3
pop
jmp
inc
outsb
mov
dec
stos
test
or
jle
jl
cmc
xchg
xchg
mov
scas
cld
push
lret
cmp
inc
jns
inc
int
outsl
pop
xchg
lret
add
or
insl
mov
or
mov
adc
jae
adc
sahf
or
std
aad
cmpsb
fwait
push
add
stc
mov
into
cmpl
pushf
cli
mov
test
shrb
cmp
rcl
or
adc
lea
mov
cmp
push
cmpsb
jns
xchg
enter
dec
inc
lret
mov
test
pop
fmul
idivb
gs
sbb
xchg
xchg
jl
data16
lea
add
adc
xchg
lcall
cs
jl
dec
add
xlat
push
dec
cmp
inc
or
inc
push
push
in
lock
aam
or
jmp
mov
sbb
xchg
mov
das
pop
lcall
pop
or
enter
cmp
sbb
push
test
hlt
xchg
ds
sub
dec
clc
loopne
xor
mov
pop
jo
clc
lds
pop
es
addr16
out
mov
popa
aam
mov
insl
sbb
add
add
movsb
lods
pop
or
mov
dec
xchg
and
jge
shll
inc
out
sbb
cmp
loope
into
jne
dec
aaa
push
sub
push
das
pop
pop
test
mov
sbb
data16
sub
insl
push
sbb
mov
aaa
fcmovbe
int3
jle
mov
push
fwait
push
in
sbb
into
movsl
aad
stos
or
js
int3
jmp
cmove
in
adc
cmpsl
sub
push
test
mov
in
sbb
std
popf
mov
in
jp
mov
add
jecxz
pop
fdiv
aas
pop
imul
mov
sub
jp
ljmp
mov
cmpsb
insb
xor
repnz
push
ret
fidivl
pusha
ret
xchg
ljmp
mov
or
adc
test
cmp
cmp
pop
and
gs
xchg
mov
mov
sbb
dec
clc
pusha
lahf
loop
adc
mov
jbe
clc
lods
imul
mov
sidtl
push
push
pop
fwait
push
hlt
push
shrl
test
lods
mov
iret
jns
jne
jecxz
mov
popf
bound
roll
test
dec
sbb
pushw
mov
push
mov
fistl
or
lods
out
rcl
cli
fistpll
shl
ljmp
xchg
mov
jns
adc
sahf
fsub
sahf
ds
das
fistps
jnp
loope
out
ss
sub
fdivs
pop
and
out
mov
test
jne
pop
ja
arpl
les
lret
xor
into
int
push
sub
jge
pop
mov
and
add
setnp
xchg
pop
jb
inc
inc
fsts
scas
cmp
pop
xchg
lods
mov
mov
in
test
xorb
dec
or
xchg
xchg
cmp
pop
or
xchg
xchg
test
enter
jns
sbb
cmpsb
ret
or
mov
add
xchg
and
fdivs
outsl
xlat
andl
fwait
inc
shl
outsl
xor
xchg
sbb
pop
sahf
inc
or
jne
inc
mov
jmp
mov
add
jecxz
arpl
inc
dec
cmp
sbb
push
repz
repnz
fldl
insl
jmp
push
sub
cwtl
pushf
pop
cmp
xor
or
imul
mov
mov
xor
nop
mov
and
mov
xor
push
push
and
scas
cmp
jae
sbb
push
outsl
dec
xor
dec
mov
xchg
sahf
inc
loope
sub
push
add
hlt
and
sbb
pop
xchg
or
mov
data16
jg
add
xor
imul
pop
pop
faddl
stos
add
add
cmpsb
int
sbb
mov
adc
jmp
call
cmp
mov
cltd
push
xchg
jle
xchg
ret
test
loope
roll
cmp
push
popf
outsl
subb
clc
cmc
cmp
dec
cmpsb
add
sub
aam
fnstsw
sbb
xor
in
incl
fstp
lahf
je
xchg
sbb
xchg
out
dec
xlat
mov
xchg
xchg
nop
movsb
cltd
repz
inc
mov
inc
ds
and
push
inc
popf
jnp
dec
stos
push
test
loop
inc
mov
push
mov
xor
push
call
jg
push
iret
inc
dec
aaa
cmp
xchg
stos
add
in
es
idivl
iret
lods
pop
js
rcrb
jmp
push
ljmp
shll
jbe
cwtl
xchg
and
ss
push
je
into
shr
enter
arpl
lds
adc
bound
rorb
and
mov
adc
popa
add
nop
jb
xlat
pslld
mov
push
sub
mov
or
sbb
inc
jo
jns
xchg
cltd
mov
fdiv
sbb
push
sub
cmpsl
or
shl
ret
adc
out
aaa
dec
cltd
stos
cmpsb
shll
add
pop
mov
push
ss
and
out
pusha
loop
sahf
xchg
ficoms
pop
lret
int3
or
adc
iret
enter
iret
daa
pusha
add
add
loopne
sbb
test
test
mov
push
dec
inc
cld
in
xchg
das
mov
fisubl
push
pop
sbb
or
mov
nop
mov
cs
xchg
mov
scas
xchg
pop
test
cwtd
mov
mov
insl
lods
test
mov
push
gs
add
stos
adc
mov
push
pop
mov
in
ja
test
xor
cmp
xchg
jb
xor
clc
orl
loop
jge
fdivl
fs
push
cs
lods
imul
push
sbb
cmp
mov
neg
leave
stos
mov
data16
pop
lahf
sti
stos
or
jae
adc
cltd
addr16
mov
jmp
popf
lock
push
jecxz
add
das
pop
xchg
hlt
pusha
inc
mov
imul
shlb
push
dec
mov
push
iret
enter
mov
sub
mov
mov
mov
or
fcmove
mov
and
lock
lret
orb
xchg
mov
push
into
stos
outsl
dec
test
in
fs
push
repnz
sub
lods
jno
or
and
or
and
imul
dec
cmc
ret
out
test
leave
or
shlb
int3
mov
popa
test
add
pop
mov
push
pop
test
ss
mov
ret
fildll
fimuls
ds
in
test
jg
jp
fsqrt
mov
mov
fdivrs
les
out
cmpsb
mov
insl
jnp
sbb
sbb
mov
adc
int
mov
ds
push
in
xlat
fcmovbe
ss
int3
xchg
cmpl
cmp
hlt
dec
stc
jmp
test
rcrl
xor
dec
repnz
fistpll
pop
int3
repz
bnd
mov
stos
ja
fdivrl
adc
jnp
or
js
add
inc
dec
add
jns
sar
sahf
cmpb
popf
cs
pop
and
mov
xorl
push
sbb
cltd
dec
insb
lret
cmp
cmpsb
xchg
enter
mov
clc
xchg
or
jno
cli
push
shl
adc
es
inc
cmpsl
xor
add
popf
sbb
test
jecxz
imul
out
inc
addr16
leave
jg
dec
xchg
dec
adc
pop
adc
fcmovbe
lahf
sbb
push
pop
icebp
pop
lods
xchg
xlat
ljmp
js
loope
dec
and
movsl
dec
cmp
inc
and
lock
pop
mov
fnsave
cmpsl
push
xchg
gs
cmp
jl
mov
out
pop
mov
aam
add
pop
insb
and
xchg
js
subl
fldt
xchg
dec
push
dec
jnp
add
js
xchg
jg
push
dec
pop
or
pop
ret
aaa
inc
pop
cltd
adc
push
fbld
cs
sbb
push
sbb
sub
out
mov
pop
xchg
xchg
jecxz
js
in
fmull
int3
in
fsubrl
ror
adc
jecxz
dec
and
loope
divl
push
jnp
push
add
in
stos
fildl
pop
addr16
mov
je
mov
pop
cmp
mov
je
dec
mov
fnstcw
je
jne
lods
fs
ss
and
scas
imul
stos
dec
sub
inc
bnd
inc
jl
ja
enter
cmp
add
sbb
mov
ja
inc
xchg
cmp
and
jge
mov
lret
pushl
dec
mov
xchg
xchg
insb
mov
xor
stos
push
pop
enter
std
xchg
add
sbb
mov
add
pop
xchg
pop
pop
out
inc
xor
in
mov
cwtl
movb
jno
xchg
mov
rcrb
cmp
adc
pop
addr16
call
mov
rclb
insb
hlt
jmp
into
in
add
mov
ret
xchg
or
pusha
imul
mov
sbb
repnz
nop
shr
mov
lds
adc
push
shll
sarl
es
xor
mov
mov
inc
mov
ds
ds
mov
xchg
lcall
lret
mov
fists
cwtl
cs
xchg
lret
inc
add
sbb
pop
mov
xchg
and
inc
mov
testl
xor
mov
out
scas
jmp
lret
sub
test
fnstsw
inc
push
mov
inc
xor
sbb
arpl
jno
xchg
fwait
mov
aad
jle
sub
jmp
push
insb
push
fs
stos
movsl
jl
cmp
fimull
mov
in
nop
inc
stc
jp
in
outsl
rol
das
leave
nop
mov
cli
clc
aas
xor
mov
pop
cmp
ljmp
data16
lods
mov
test
imul
jo
xchg
aas
push
lods
cmpsb
xchg
xchg
or
hlt
pop
inc
loopne
sbb
fcomps
sub
rcl
cmp
int
mov
aaa
std
add
cli
pop
xlat
out
xchg
push
pusha
fwait
xchg
jl
xchg
push
sub
sbb
or
push
fwait
addr16
out
lahf
arpl
lea
fiaddl
mov
jmp
push
or
adc
in
push
out
fcoms
push
ja
stc
nop
push
repnz
jo
inc
push
or
dec
fidivs
lods
repz
js
and
dec
bound
mov
jmp
xlat
pushf
ror
ret
loope
push
cmp
xor
xor
adc
and
stc
push
fwait
lahf
rcl
cmp
add
daa
fsub
mov
cmpsb
aam
mov
gs
test
xchg
jno
mov
mov
sub
aam
add
cwtl
fisubs
sbb
ret
out
out
adc
cld
fsubrs
dec
cli
push
lret
jl
ljmp
mov
jl
cmp
iret
cmpsl
in
ja
stc
out
sbb
jae
movl
in
ljmp
and
stos
dec
mov
pop
cltd
inc
adc
cmp
inc
pop
dec
out
xor
cmp
adc
cli
mov
and
adc
jo
inc
test
push
into
cmc
push
dec
addr16
inc
xor
rcrb
or
pop
inc
int3
or
fwait
ds
shlb
in
lret
mov
ret
repnz
clc
pop
jns
lret
and
sub
lret
jge
or
lods
cwtl
mov
add
jns
jbe
push
nop
in
lods
sbb
or
or
push
dec
and
jb
pop
pop
push
fistpll
rclb
in
les
pop
test
dec
fwait
ss
pop
cwtl
outsl
inc
imul
mov
jbe
xorl
in
fmull
xor
pop
aad
dec
scas
pushf
dec
adc
stc
movsb
test
jge
sahf
popf
shll
xorb
push
mov
and
pop
push
cmp
in
dec
in
adc
movsb
test
sarb
push
les
ja
in
jns
in
mov
adc
jo
fneni(8087
lret
dec
mov
sub
enter
mov
mov
jb
mov
xor
in
jbe
lods
js
sbb
bound
pop
out
mov
pop
lret
bswap
push
inc
pop
push
ljmp
imul
xchg
ficoms
pop
fildll
mov
xlat
iret
lock
insl
dec
jmp
movsb
mov
cmpsb
xchg
in
cmp
lret
push
fiaddl
scas
aam
jmp
in
jne
sub
push
push
js
aas
pop
out
aam
fnstenv
cld
pop
xchg
fcompl
sub
adc
jo
test
ret
and
test
scas
fwait
jg
lods
enter
sub
cmp
out
movsl
push
inc
in
hlt
jns
test
pop
imul
imul
mov
sbb
int3
mov
in
and
xor
and
cmpsb
stos
jmp
jbe
cmp
add
les
stos
sahf
orl
mov
mov
adc
jl
xchg
daa
mov
cmp
xchg
test
add
dec
cltd
sbb
mov
inc
inc
xchg
fldt
insl
push
pushaw
imul
in
hlt
sub
mov
mov
sub
into
mov
in
cltd
push
sbb
jbe
pop
lret
adc
sub
jb
ds
or
cmpsb
repz
push
test
mov
mov
lcall
dec
clc
push
fisttpll
and
call
call
mov
bound
data16
add
push
fwait
stc
push
scas
sub
mov
arpl
repz
sbb
movl
mov
lods
sub
in
sub
cmp
or
mov
adc
negl
popf
jl
inc
inc
xchg
test
push
cmovs
stc
mov
int
jg
sub
sub
ret
js
sti
int
rclb
gs
mov
imul
push
mov
jnp
adc
xlat
inc
mov
leave
mov
push
inc
arpl
bnd
mov
mov
pop
mov
mov
mov
jecxz
cmpsl
test
jl
cli
pop
pop
push
and
test
mov
fistl
rolb
fucomp
cmp
cmp
iret
les
ds
rcl
pop
ljmp
inc
inc
shrl
push
aad
and
sbb
dec
cmp
xorb
or
pop
cwtl
or
test
jg
in
clc
imul
add
mov
cwtl
out
fs
lock
jg
lods
cmp
test
into
adc
cmpsl
jecxz
inc
sarl
dec
xor
shll
inc
imull
in
cmpsl
fbld
ja
popa
cltd
push
or
lds
xor
cmp
inc
inc
xor
dec
repz
xchg
jmp
fidivs
jns
jnp
pop
hlt
jp
sbbb
inc
sbb
sti
dec
stos
call
sub
ja
inc
arpl
ja
or
mov
mov
aad
push
mov
test
or
cmp
fs
popa
mov
in
icebp
clc
rcrb
popf
fs
mov
xchg
shl
jmp
jecxz
gs
or
mov
lods
mov
ja
xorb
add
mov
mov
jecxz
cmp
dec
ss
pop
decb
addr16
ffreep
cld
and
int
in
xchg
sub
xchg
aam
jle
and
andl
es
frstor
shll
jae
sbb
in
fwait
inc
shll
bswap
movsb
or
cs
sti
push
call
adc
jbe
lock
push
mov
add
in
scas
test
int3
xorb
pop
mov
mov
add
nop
and
fs
push
adc
lock
xchg
sbb
mov
adc
xchg
push
jne
sub
les
cld
sar
lods
insl
dec
pop
xlat
data16
mov
movsl
repz
icebp
stos
out
lea
sub
jge
mov
loop
push
and
add
rclb
inc
stos
lea
or
mov
adc
out
or
jb
adc
xor
mov
or
pop
lahf
jle
leave
xor
jg
psubsw
pop
sub
push
ljmp
mov
push
sbb
push
jmp
xchg
scas
out
mov
inc
int
lods
icebp
ds
nop
mov
adcl
lcall
xchg
xor
cmp
popa
addr16
sahf
cwtl
imul
mov
cmp
das
ss
lea
idivb
divl
and
lret
xor
mov
pop
fucomip
jle
sahf
sbbb
push
inc
jno
iret
lcall
std
call
sub
fwait
push
pop
outsl
xor
hlt
dec
je
fisubl
adc
test
hlt
sub
pusha
jmp
mov
dec
mov
dec
sub
ss
cld
addr16
imul
xchg
adc
mov
pop
ljmp
mov
sub
dec
and
in
loopne
pop
cmp
outsl
adc
jecxz
adc
and
pop
loope
pop
mov
push
pushw
cmp
enter
lods
sub
xor
daa
in
inc
push
pop
call
outsb
hlt
push
inc
push
call
ror
dec
daa
aaa
push
xor
pop
pop
jbe
scas
popa
es
andb
test
bnd
push
mov
inc
pop
adcl
sbb
fwait
xor
mov
mov
push
frstor
and
sbb
xor
data16
loop
mov
push
cmp
xchg
fdiv
fdivs
ja
int3
pop
push
lea
in
ret
jge
hlt
push
insl
inc
xor
push
fdivl
aad
or
repz
shlb
fiaddl
cli
push
das
and
push
fsubrp
fldcw
mov
inc
pop
int3
inc
mov
jns
dec
inc
arpl
out
dec
push
out
mov
xchg
aas
jle
mov
sbb
push
lods
int
xchg
sti
jbe
arpl
xor
dec
dec
xchg
or
sbb
lcall
data16
jle
sub
sbbl
repnz
std
fcompl
call
mov
xchg
or
mov
ljmp
leave
scas
faddl
or
dec
sti
js
shrb
addb
je,pt
inc
dec
mov
push
imul
dec
cmp
fstpl
pusha
jmp
out
mov
test
inc
nop
cmpsb
ffree
pop
negl
fwait
inc
jg
xor
pop
rcll
jns
push
cmp
stos
sub
xor
mov
scas
movsl
roll
jno
iret
ds
fwait
jns
mov
into
cld
mov
push
sub
sbb
cmp
xor
jp
pop
je
jbe
orb
lahf
cmp
add
fsubr
aad
es
jnp
mov
sti
test
mov
adc
sbb
jmp
fucom
jae
fsubs
test
xchg
xchg
in
fstp
lret
gs
test
xor
aad
movsl
xchg
aam
pushf
pop
iret
cmpsb
xor
gs
lds
dec
nop
jnp
int
mov
outsl
hlt
mov
push
inc
std
div
jl
idiv
push
jb
mov
add
sbb
leave
enter
pushf
pop
push
out
iret
xor
repz
mov
adc
push
pop
sub
dec
insl
pop
nop
dec
enter
sub
inc
xchg
jne
ret
clc
clc
aaa
aam
test
popf
inc
cli
pop
cs
daa
pop
sahf
pushf
fwait
shr
pop
div
data16
stos
or
call
push
push
mov
push
lods
fxch
pop
xlat
outsl
inc
in
rsm
mov
fldl
es
lret
adc
loope
xchg
pop
out
rcll
in
lcall
mov
out
xchg
stos
cmpsb
adc
mov
dec
ja
cs
xor
xlat
pop
add
or
lcall
fcomps
dec
repz
mov
fxch
inc
repnz
shll
testb
xchg
pshufw
mov
lds
out
in
dec
jne
and
cs
out
mov
pop
mov
xlat
mov
adc
sahf
fwait
dec
aaa
add
mov
cmp
cmp
dec
jns
stos
aad
rcrl
jge
andl
cmp
jbe
jae
dec
les
adc
or
out
popa
xor
and
test
aam
sbb
add
pusha
push
add
mov
fbld
xchg
sarl
mov
xlat
je
repnz
test
and
push
bound
and
sub
push
pop
in
add
sbb
pop
icebp
sahf
and
or
int
push
sahf
lods
and
mov
xchg
lahf
mov
in
push
adcb
dec
jbe
in
jbe
outsl
in
and
mov
cmc
int3
mov
push
mov
frstor
push
push
ss
xchg
mov
jmp
stos
jbe
inc
repz
test
inc
mov
call
std
clc
push
add
cmp
jo
xlat
pop
arpl
fwait
jnp
jl
push
add
sub
push
xchg
inc
push
cmp
ret
iret
sti
push
sbb
ficomps
or
sbb
xchg
and
jl
nop
pop
push
and
and
sub
js
add
cmp
insl
insl
mov
scas
lss
imul
mov
jge
lsl
push
lret
les
mov
pop
cmp
gs
int
shl
xor
xchg
sub
shrb
sbb
int3
imul
call
pop
cwtl
ret
mov
cmpsb
adc
sbb
fidivrl
adc
outsb
adc
sub
test
sahf
cmp
mov
push
mov
pop
mov
cmpl
xor
icebp
imul
rcrb
addl
outsl
jb
push
dec
pop
int3
lcall
lret
mov
dec
jo
push
ror
gs
jo
xchg
test
sbb
sarb
sbb
mov
cs
insb
les
int3
or
or
lret
xchg
or
push
divl
mov
into
xchg
mov
dec
mov
inc
inc
and
lcall
jo
xchg
shl
cmp
inc
xchg
and
int3
lret
mov
sti
nopl
das
lret
push
movd
pushl
dec
jge
and
cmp
xor
jns
arpl
test
lds
jecxz
inc
inc
mov
andl
add
xchg
cmpl
lods
cmc
cmp
and
mov
in
sbb
pop
testb
pop
mov
or
imul
jge
jge
aaa
dec
insb
sbb
lcall
pop
ret
mov
cmp
leave
cmp
das
out
sbb
das
push
mov
pop
rcll
stos
pop
jo
aaa
js
sbb
inc
and
ret
jmp
test
jno
inc
out
push
gs
mov
enter
mov
inc
ljmp
sbb
pop
jl
push
lock
es
or
addr16
call
shl
adc
sub
jns
fs
dec
xchg
outsl
and
aad
push
xor
or
js
mov
jmp
pop
cmc
inc
inc
scas
addr16
cwtl
test
dec
out
push
mov
aad
dec
cld
adc
xchg
cmp
xchg
push
icebp
repz
xchg
loopne
xchg
and
xor
ljmp
sbb
jb
lahf
out
fs
cld
sbb
idivl
adc
ret
mov
ss
push
dec
xchg
popf
xor
cmp
cli
xchg
lods
ds
sbb
sbb
inc
mov
loope
sub
pop
mov
add
jl
and
lret
mov
inc
fs
fucomip
push
std
xor
addr16
movsl
subl
xchg
adc
pop
insl
testl
sti
adc
fstl
inc
xor
dec
in
cmpsl
jnp
mov
repz
ds
lcall
insb
push
jle
and
or
sub
inc
mov
lods
xchg
aas
mov
pop
inc
addr16
adc
hlt
jl
fdivrs
sub
cwtl
pop
sbb
cmc
jl
lret
push
lods
adcl
mov
jg
mov
mov
jo
lret
clc
pop
es
lcall
push
cmp
sti
xchg
fbstp
inc
fidivrl
xchg
inc
outsb
out
fs
xchg
dec
jg
paddusw
jle
cmpsb
cltd
add
sbb
jl
xor
mov
adc
stos
out
xor
inc
test
sub
inc
out
stos
xchg
jmp
pop
insb
mov
xor
jle
gs
push
push
jp
xor
stos
add
pop
sbb
popf
add
outsl
sbb
sub
cmp
in
mov
sub
test
fdivrs
push
pop
cmp
jl
xor
popa
sbb
arpl
sbb
mov
xchg
or
movsb
repz
aam
int
and
lea
push
inc
fidivrl
outsb
inc
or
or
jle
push
outsb
lret
std
loopne
movsb
add
lods
lds
xchg
push
dec
mov
aad
jnp
push
jbe
jae
dec
jno
push
inc
sbb
and
xchg
or
xor
sti
shll
pop
pushf
mov
sub
mov
mov
push
and
pop
jp
xchg
push
aam
in
lods
or
stc
test
adc
std
outsb
outsl
hlt
aas
out
add
add
imul
lahf
es
sbb
add
loope
fsubp
cmpsl
loope
ja
imul
sbb
icebp
and
sub
test
adc
sti
gs
and
popa
push
sbb
cs
fistps
add
stc
hlt
sbb
add
and
in
stos
cmp
and
mov
cmpsb
addb
mov
push
inc
adc
mov
pop
test
lods
lret
mov
push
jbe
and
dec
shr
cmp
push
pop
cmp
shll
scas
push
scas
mov
push
popl
jb
push
add
lahf
or
pushf
or
or
mov
ret
adc
xorl
es
sbb
into
inc
mov
repz
inc
jo
shl
rcll
or
lcall
bswap
dec
cmp
int3
lea
pop
pop
pushf
sbb
add
push
out
adcb
or
test
adc
jmp
mov
and
push
rorl
jmp
mov
addl
sub
push
stos
aam
es
xchg
lods
loopne
adcb
xorl
aad
popa
cmpsl
sarb
shrl
pop
dec
xor
dec
xchg
ret
push
xor
sbb
and
dec
mov
test
hlt
ret
mov
fadds
sbb
in
sbb
int3
in
xor
loopne
xchg
movsl
sub
add
in
int3
pop
icebp
push
popf
cmp
mov
xlat
gs
jmp
pop
cmpsl
out
adc
icebp
mov
imul
ljmp
lods
jns
inc
cmp
cmp
std
nop
mov
aaa
insb
mov
push
pop
xor
mov
ss
shl
mov
mov
lods
push
fists
scas
sbb
ja
ja
iret
fdivs
movsl
sub
xor
xchg
mov
cli
movsb
push
dec
outsl
mov
jge
sub
insl
fsts
xchg
push
xchg
and
orb
ret
dec
mov
loopne
ja
jb
mov
mov
jle
clc
jle
ret
sub
cwtl
sub
dec
dec
or
test
xchg
xor
or
out
mov
adc
dec
adc
sub
xor
in
mov
out
cmp
dec
pop
mov
ds
insb
jns
jg
mov
pop
xor
sbbl
pop
push
and
aam
push
jb
inc
mov
mov
xchg
in
xor
insl
cmp
or
ret
sbb
sub
loop
sub
dec
cmp
imul
adc
jno
das
xor
cltd
xor
adc
sub
in
lahf
mov
rcr
jp
dec
xor
mov
imul
nop
enter
push
pop
and
fidivrs
test
inc
mov
lahf
cmp
cmp
into
add
in
pushf
add
or
push
xor
mov
nop
daa
xchg
add
int3
add
mov
xchg
sbb
aas
pop
cmp
sbb
inc
sbb
dec
xchg
xor
daa
lahf
cmp
add
clc
or
cmp
and
push
push
mov
pop
xor
rorl
mov
je
iret
lcall
outsl
jle
stos
jmp
sbb
xchg
ja
pop
sbb
js
jl
and
pop
dec
pop
cs
or
push
pop
and
stos
lcall
inc
int
pop
stc
cmp
scas
ja
jge
in
push
inc
in
outsl
mov
dec
and
stos
inc
cmp
mov
pop
pushf
hlt
das
jmp
sbb
and
lods
insb
lods
xchg
jge
les
mov
ret
ret
imul
mov
xchg
xor
fdivp
jmp
mov
inc
mov
mov
mov
sbb
sbbl
jb
stos
adc
push
xchg
gs
enter
test
mov
mov
fcmove
popa
cmpsb
data16
or
sub
dec
movsb
cmp
iret
jo
loopne
cwtl
test
mov
outsl
mov
mov
push
pop
sbb
cwtl
or
cmp
dec
js
jmp
cmpsb
icebp
nop
insb
sbb
repnz
jge
dec
leave
cmp
xor
sub
lea
cmp
or
sbbl
sbb
push
mov
scas
add
sub
sbb
push
fwait
pusha
jg
lock
std
pop
loopne
xchg
xor
les
ror
cmp
pop
sub
pop
shrl
jp
jns
jmp
adc
jno
les
dec
or
lahf
pop
repz
imul
dec
divb
iret
test
xchg
xor
test
xchg
lahf
lods
cmpsl
scas
pop
dec
mov
out
xlat
in
bound
fs
and
js
in
pushf
pop
add
pop
cwtl
inc
pop
stc
inc
and
jge
adc
ret
ljmp
jae
fstl
mov
mov
idivl
sub
popf
fnstenv
mov
data16
bound
mov
cs
sti
daa
jp
sub
and
push
xchg
sub
cltd
cmpsb
cli
dec
enter
sub
lods
imul
jecxz
mov
xchg
scas
and
add
insb
cltd
push
pop
js
sub
repnz
pop
jb
ja
rcll
mov
cmp
dec
call
dec
test
xchg
mov
jmp
jne
aaa
and
xchg
sbb
push
sar
mov
test
xchg
push
add
cmc
pop
or
pop
rcrl
das
mov
iret
insb
insl
xlat
mov
in
or
xchg
movsb
add
xchg
std
arpl
inc
outsl
adc
cli
mov
fs
push
xor
repnz
cli
cld
ss
sbb
fstpl
jecxz
lcall
inc
aad
sarb
iret
mov
jno
jnp
cmp
jne
iret
pop
add
push
jae
jge
call
pop
mov
nop
xchg
push
popf
mov
adc
lea
sbb
pop
aam
rol
pop
outsb
cs
ud0
out
mov
shrl
jp
xchg
adc
adc
mov
lock
or
xchg
xlat
sub
arpl
fucomi
add
sti
imul
lcall
mov
jmp
nop
fsubl
pusha
jns
adc
xchg
in
dec
mov
mov
stc
jecxz
cltd
push
adc
inc
das
sub
xlat
adc
sbb
aad
fucomp
movsb
jp
test
jb
dec
out
out
lods
sarl
or
shlb
sub
mov
fbstp
js
jp
gs
sbb
leave
mov
push
sub
outsl
push
xchg
mov
mov
jnp
shl
push
or
mov
out
movsl
and
pop
xor
lock
xchg
cmp
stos
mov
and
idivb
popa
shrl
sbb
clc
add
xor
mov
lret
push
pop
sti
and
lods
lds
sarb
js
int
mov
or
nop
jecxz
stos
fidivrs
sub
cmpsl
inc
js
pusha
and
jbe
jge
mov
pop
mov
xchg
fcmovne
cmp
aas
cltd
fwait
out
fisubl
seto
xor
mov
movl
outsb
pop
xchg
sbb
movsl
inc
lods
sar
cmp
aam
and
out
mov
aam
mov
inc
insb
adc
pop
imul
mov
stos
sub
dec
movups
cmpsb
shrb
jle
aam
cs
mov
jbe
aaa
inc
mov
repnz
or
arpl
xchg
xchg
fbld
cli
mov
inc
push
add
pop
and
decl
mov
jb
inc
rclb
leave
jns
enter
jbe
enter
mov
xor
out
dec
scas
mov
and
das
xchg
shrb
push
aam
add
addr16
cmp
call
push
jbe
dec
imul
int3
pop
nop
leave
ds
adc
xchg
pop
pop
pop
lahf
pop
mov
adcb
mov
add
inc
mov
pop
bound
push
insl
xchg
fcomi
pop
push
cmp
and
int3
es
jo
fs
addr16
lods
inc
loopne
inc
push
pop
or
or
adc
push
jp
stos
xchg
jo
xchg
notl
mov
outsl
loop
adc
shrl
xorl
mov
fstpl
pop
sbb
mov
jbe
dec
ljmp
adc
or
fs
sbb
stos
add
and
jno
sbb
or
fstl
and
lahf
add
into
and
jbe
ffreep
leave
mov
adc
adc
xchg
sbb
jae
push
insl
mov
pop
clc
and
push
clc
in
xchg
add
inc
shlb
mov
lods
aas
cwtl
pushf
xlat
cli
nop
or
int3
das
cltd
imul
aad
sbbl
mov
inc
inc
movsb
mov
repnz
xchg
lods
dec
lahf
sbb
ss
and
adc
mov
cwtl
jbe
lds
push
sbb
xor
sbb
jne
pop
fldcw
xor
enter
pop
inc
pop
fabs
adc
mov
loop
push
sbb
loop
mov
test
mov
test
outsl
add
inc
cmp
or
or
mov
and
rcrb
dec
outsb
test
lods
iret
mov
mov
in
xor
pusha
sarl
jge
inc
mov
cmpb
dec
mov
enter
xchg
rcrl
mov
or
arpl
dec
inc
fbstp
add
popf
push
repnz
pusha
idivb
pop
dec
imul
push
add
jl
jmp
daa
in
and
sub
das
xacquire
call
cs
rorl
and
sbb
add
jecxz
mov
fs
sub
mov
jbe
adc
out
outsl
aas
cmc
in
fsub
sbb
pop
ljmp
jb
leave
mov
fsubrl
dec
cmp
cltd
mov
xchg
pop
inc
push
aas
inc
sbb
fwait
les
dec
ficomps
call
test
aad
mov
icebp
sub
fdiv
test
inc
xor
push
mov
sub
inc
rolw
insb
or
je
loopne
ret
jbe
jmp
mov
cmp
jmp
test
imul
push
pop
arpl
pop
andb
ret
loope
das
lret
mov
cmp
sahf
out
and
xor
lods
jecxz
data16
jl
fs
lds
aaa
imul
xor
insb
hlt
inc
stc
enter
mov
insl
sub
pop
loope
and
or
jne
cld
push
dec
test
sti
lods
cwtl
cmp
adc
xchg
cmp
xchg
mov
jbe
xchg
mov
ljmp
fistl
movsb
ret
leave
mov
cmpsl
xor
lea
mov
sahf
mov
push
popf
ss
sub
inc
sub
sbb
sbbl
xor
or
dec
shrb
jge
push
push
push
fwait
push
sbb
pop
je
loope
data16
addr16
adc
cmpsb
mov
lods
mov
imul
fs
and
inc
cld
mov
roll
dec
mov
cmc
xchg
repz
dec
adc
push
daa
aad
fidivs
jo
gs
dec
icebp
cli
imul
jne
loop
mov
in
adc
sbb
or
enter
aam
mov
sub
mov
push
inc
pop
daa
or
fmull
rcll
cli
mov
lods
int
sbb
cs
fnstenv
out
cmp
mov
ja,pt
add
mov
inc
lret
movsb
ret
dec
sbb
int
mov
mov
mov
xor
sub
data16
lock
rclb
jnp
in
or
adc
mov
xchg
and
mull
mov
xchg
sahf
pop
dec
ja
cli
addr16
add
inc
out
iret
pop
ljmp
add
mov
das
mov
xor
jo
mov
and
add
adc
call
push
je
shlb
in
xchg
lods
and
mov
xchg
xor
inc
mov
popa
sbb
testb
jle
out
cld
add
daa
loop
dec
mov
fisubrl
loopne
mov
movsl
mov
std
enter
dec
scas
xchg
pop
mov
sahf
push
daa
mov
mov
mov
test
mov
mov
mov
or
pop
dec
popf
dec
in
xchg
pop
sub
mov
jnp
xor
xor
jecxz
push
in
mov
cltd
pusha
test
sub
jge
xchg
cld
call
and
cmp
mov
push
jp
or
lcall
xchg
jo
imul
add
addr16
cmp
movsl
push
loopne
add
mov
xchg
adc
jb
sub
mulb
in
rcr
das
orb
cmp
xchg
js
and
js
pop
pushf
loopne
mov
ret
and
mov
xor
shrb
and
pop
gs
js
icebp
dec
inc
sub
pop
setno
sub
sbb
fisubrs
mov
std
decb
sbb
repnz
add
push
jnp
mov
add
outsl
arpl
mov
lock
test
mov
rolb
aad
xchg
lret
data16
cmp
and
inc
mov
in
popa
pop
repz
push
xchg
mov
testl
out
subl
push
test
push
push
repz
shlb
test
pushf
insb
int
lods
mov
fcom
insl
repnz
lahf
push
cwtl
mov
test
add
mov
cli
icebp
loop
mov
and
js
mov
inc
adc
scas
inc
pushf
in
sub
lret
das
iret
push
int3
es
push
test
test
jae
scas
xor
jno
gs
xor
popa
bnd
lret
jmp
inc
mov
adcb
jbe
xchg
lret
sahf
mov
jl
pop
and
push
sahf
fnsave
sbb
and
dec
bound
clc
rcl
lds
xorl
lods
cmp
fwait
sbbl
cmpsb
cwtl
dec
xchg
jo
je
add
xchg
pushf
cltd
add
push
mov
inc
stc
cmpsl
xchg
mov
js
xlat
mov
je
inc
ds
push
in
mov
jo
sbb
dec
jge
or
lret
lock
fnsave
dec
lcall
sarl
sbb
dec
enter
sti
or
xor
cmp
sbb
and
jge
out
add
inc
xchg
stc
aad
xor
in
outsl
xchg
pop
jns
and
xor
or
sbb
movsb
xor
xchg
addr16
cld
cmp
push
movl
mov
adc
scas
repz
jnp
in
xor
inc
push
mov
insb
xchg
pop
adc
fsubl
loop
jb
push
sbb
cltd
fstps
mov
dec
repz
lcall
fdivrl
stos
aam
push
pop
and
or
cltd
int
fnstenv
sbb
jg
sub
sub
and
mov
add
jmp
pop
mov
rcll
and
scas
rcll
aas
or
mov
and
fildl
cmp
and
insb
mov
cmpsb
or
xlat
clc
push
mov
negb
loope
sbb
sub
jne
mov
je
stos
jno
xchg
mov
int3
add
add
iret
or
rcrb
loope
jecxz
mov
jae
cmp
faddl
imul
seto
and
pop
xchg
xchg
pop
pushf
xor
das
cmp
jmp
or
fistps
adc
xor
jne
and
or
or
fdiv
sub
push
pop
dec
sbb
dec
mov
cli
ret
push
push
mov
stos
mov
dec
je
add
bound
ss
mov
jbe
out
cltd
lock
repnz
xlat
lock
cmp
add
mov
fdivs
and
repnz
es
sub
xchg
jecxz
stos
adc
pop
loopne
pop
aas
or
iret
cmc
stc
xchg
push
dec
ret
adc
sbb
sti
xchg
sbb
sub
pop
xchg
mov
jb
dec
sahf
mov
das
push
sti
imul
cmp
mov
insb
stos
add
push
repnz
mov
js
lods
addr16
sbb
stos
ret
mov
popa
push
mov
pop
xchg
or
cmc
lods
sub
dec
aas
clc
sbb
ror
repz
cmc
flds
adcb
jecxz
inc
popa
mov
rol
sub
cmc
or
adc
mov
aam
fildll
stos
in
test
xor
pop
cmp
pop
push
jp
push
test
and
sub
and
sbb
popf
inc
jne
sub
cmp
orb
and
push
or
jle
shll
jp
repz
test
addr16
push
cmp
mov
mov
jecxz
sbb
pop
mov
fsubrp
cmp
shl
and
dec
sahf
jae
in
test
repz
enter
cmp
cmc
pop
hlt
xchg
sub
sub
sub
ja
in
adc
fcomps
sahf
outsb
sbb
in
cmp
insb
icebp
out
sbb
rcrb
xor
stos
adc
sarl
push
lock
hlt
cld
sub
xor
xchg
push
nop
push
cwtl
mov
mov
popf
adc
mov
test
push
xchg
pushf
pushf
mov
ljmp
xchg
lods
and
ljmp
es
je
fcom
jecxz
push
imul
addr16
adc
cmp
mov
dec
pop
add
in
test
sub
loope
mov
daa
dec
push
sbb
adc
in
or
adc
in
mov
or
sti
jle
inc
cs
pop
sub
add
loop
test
mov
jnp
push
xchg
and
adc
frstor
dec
xchg
sub
stos
and
dec
jg
mov
mov
jb
pop
pop
mov
je
or
or
xchg
xor
mov
and
sbb
mov
jne
mov
fs
cltd
jmp
mov
rol
adcl
loope
add
xor
and
dec
push
cld
movl
sub
mov
stos
in
sub
jno
pop
bound
dec
fmul
test
push
fiadds
fwait
jns
push
xchg
pop
mov
inc
inc
pop
mov
test
push
xchg
gs
mov
add
mov
mov
call
inc
ficoms
xchg
aad
mov
repnz
call
xor
daa
stos
fwait
lods
pusha
cs
jae
fistl
jne
jmp
jg
jmp
xchg
fistl
sub
mov
add
in
loope
rol
rclb
gs
andl
icebp
cwtl
pop
cmpsl
ret
adc
pop
rorl
gs
mov
fisttpl
or
push
mov
jo
mov
cmpsl
xchg
mov
fsubrs
and
shl
pop
lret
push
subl
sbb
dec
call
fwait
test
inc
pop
xchg
std
iret
outsb
mov
push
int3
arpl
daa
pop
sahf
js
test
add
popf
stc
test
push
std
dec
sbb
lahf
inc
push
sbb
xchg
push
leave
or
test
aaa
nop
sub
dec
sbb
jbe
mov
aas
out
add
test
push
add
add
les
js
jecxz
popf
and
outsl
fsts
or
mov
scas
rcrl
cmp
inc
xchg
mov
loope
fildl
mov
cld
rorl
ds
vcvttsd2usi
icebp
pop
js
int
ficompl
in
popw
sub
popf
leave
sub
int3
test
cld
insb
mov
mov
pop
mov
lcall
jno
imul
xchg
bswap
daa
out
scas
jno
xor
test
xchg
ret
and
out
mov
jne
test
mov
push
xor
fwait
push
inc
add
popa
mov
mov
inc
hlt
stos
push
cmp
mov
repz
mov
sbb
cmp
ret
and
jge
jle
andb
dec
mov
stos
xchg
or
mov
or
pop
js
push
ss
mov
bound
les
mov
insl
xor
push
cmp
push
mov
or
scas
cmp
mov
push
ss
xchg
cmp
cs
xchg
inc
movsb
in
pop
adc
push
push
adc
cmpsb
xchg
fistps
push
ss
and
outsb
into
xor
enter
pop
mov
loop
lock
roll
lcall
mov
hlt
cmp
mov
fwait
mov
fwait
stos
aam
jnp
fcomi
test
js
cmp
xchg
adc
xchg
insb
inc
or
negl
outsb
mov
sbbl
jl
push
xchg
mov
adc
popf
push
jnp
push
paddd
inc
into
mov
fbld
jns
pop
mov
sbb
push
ljmp
and
sahf
xor
ds
and
xor
push
aaa
mov
negl
mov
iret
mov
enter
cli
repnz
mov
dec
adc
sub
cmpsl
cmp
push
ja
ret
andb
xchg
addr16
sub
hlt
add
repz
test
and
jnp
lret
jl
orb
push
sbb
xchg
mov
into
xor
add
sarl
in
dec
or
mov
divl
stc
jmp
xor
roll
or
nop
or
loop
fadds
cld
pop
call
mov
pushf
lds
aad
cmc
cli
ret
mov
pusha
enter
cmc
and
xchg
pop
test
mov
xchg
xor
jl
dec
loopne
int3
sti
sbb
lods
cmpsl
subb
jns
push
js
pop
xchg
addl
stc
mov
loopne
mov
stos
ret
movsb
nop
loope
push
mov
divl
repz
xchg
and
cld
test
sti
xor
xchg
in
scas
cmp
movsl
jle
cwtl
cmp
push
imul
sub
sub
dec
mov
orl
add
cmpsl
push
scas
mov
out
test
push
push
aas
mov
push
ljmp
adc
push
int3
mov
mov
call
pop
xchg
xor
fmull
sbb
or
sbb
sahf
lcall
inc
pop
in
sbb
xchg
pop
xor
cmp
xor
popa
aad
mov
aas
dec
cmp
ficompl
xchg
or
pop
je
mov
pop
addr16
ljmp
dec
loopne
jecxz
mov
stos
in
adc
pop
mov
int3
pop
mov
push
sub
add
mov
lds
pop
pushf
aaa
fldt
push
testl
notl
call
push
xchg
dec
pusha
out
push
or
popa
mov
add
and
xchg
add
lahf
jne
sti
ss
in
adc
pop
lods
or
je
and
out
pop
maskmovq
notl
testb
pop
cli
aam
ds
in
inc
mov
jp
imul
lcall
jl
jno
insb
pop
push
inc
out
add
xchg
popa
pop
loope
dec
mov
pop
aas
clc
dec
push
in
outsb
hlt
sub
dec
mov
addr16
xor
cmp
imul
js
pop
pusha
nop
sub
test
fnstsw
nop
xchg
push
loopne
test
lods
aad
jmp
xor
testb
push
outsb
sbb
and
test
iret
jno
mov
sbb
pop
and
or
cmp
clc
inc
cs
cld
and
cmp
cmp
mov
shrl
dec
inc
insb
jo
pop
fs
adc
pavgw
shl
add
jg
pop
enter
sub
mov
daa
jno
bound
loopne
lea
bound
fdivrs
fstl
jecxz
popa
xor
imulb
aam
push
ljmp
dec
dec
lock
ja
or
mov
mov
jo
sbb
movq
addr16
adc
aaa
roll
or
xchg
push
lcall
sbb
imul
ja
ja
adc
dec
les
in
nop
lret
mov
push
push
mov
inc
xchg
push
pop
dec
mov
ret
inc
sub
jns
rcl
out
lds
dec
shl
out
insb
jp
ret
or
movsl
aad
pop
shll
lds
jmp
ja
push
arpl
dec
mov
xor
pop
add
push
push
adc
fcmove
aam
xchg
cwtl
roll
repz
adc
add
add
push
inc
push
std
xchg
jb
cwtl
fiaddl
filds
pushf
or
xor
imul
mov
xchg
cs
fcmove
nop
xchg
insl
fbstp
add
push
mov
div
cltd
pop
andb
xor
inc
jl
ret
and
mov
rol
mov
jle
std
or
int
mov
imul
pop
xchg
jbe
cmp
cmp
pop
cmp
mov
fsts
mov
sub
mov
fildll
out
mov
jne
cmp
push
pop
and
xchg
push
xchg
mov
out
mov
inc
xor
outsb
or
cs
rcl
lea
lods
adc
xchg
or
fiaddl
push
mov
repz
cmp
xlat
ret
xor
and
fs
inc
adc
in
add
inc
test
xchg
mov
test
and
ja
xchg
fs
and
scas
add
in
mov
mov
ss
dec
insb
cmp
mov
scas
lock
andb
cmpsl
cld
loopne
outsl
pop
sarl
arpl
jae
cmp
sub
mov
adc
lods
xor
adc
or
mov
ret
ja
jns
xor
jnp
inc
inc
push
jge
mov
mov
push
into
lcall
mov
sub
movsl
push
xchg
inc
insl
in
inc
out
sbb
mov
sub
ljmp
pop
jbe
sub
push
xchg
leave
cs
mov
and
negb
inc
or
add
push
loope
add
shr
inc
cmc
fwait
std
dec
pop
or
or
sub
lret
lret
addr16
in
mov
shll
jmp
adc
jg
mov
loope
sub
nop
add
dec
lea
cli
stos
mov
nop
sub
ret
ficomps
fucomip
add
or
xor
push
xor
mov
mov
dec
mov
xchg
subl
cmp
mov
idivl
push
xchg
push
aaa
push
cmp
lods
test
out
mov
imul
filds
sub
movsb
adc
roll
pop
mov
lcall
dec
mov
idivl
cmpsb
and
daa
push
or
aam
sub
inc
adcb
test
mov
mov
push
jno
ret
or
shlb
fwait
ret
insb
decl
stos
xorb
pop
mov
lods
cli
dec
fs
pop
push
push
xchg
jmp
out
mov
xchg
addl
cmc
push
ret
pop
jae
lock
cli
push
adc
xchg
mov
mov
jg,pt
jmp
loopne
push
xor
mov
dec
push
cmp
rorl
jmp
scas
sub
adc
xchg
jb
outsb
filds
mov
push
addr16
aad
mov
out
cmpsb
and
scas
adc
movsb
jge
cs
xchg
outsl
rclb
and
or
pop
add
sbb
popf
mov
mov
or
xchg
adc
ljmp
dec
cli
mov
push
cwtl
and
dec
mov
shll
xchg
pmulhuw
sarl
and
pop
out
add
les
sbb
mov
mov
xchg
and
mov
mov
cmc
in
cmp
add
sbb
push
cs
mov
mov
push
sub
fwait
imul
enter
dec
mov
pusha
and
and
enter
jp
cmp
arpl
pop
xchg
and
outsl
scas
or
mov
sbb
addb
jb
xor
push
in
roll
notb
push
push
jp
xchg
push
mov
mov
jne
aam
jo
test
add
scas
push
cmp
xlat
push
mov
fidivs
xchg
in
inc
in
fcoms
jg
mov
pop
sbb
popa
xchg
push
pop
mov
inc
mov
mov
cmpsb
mov
cmp
mov
outsl
jle
test
push
outsb
xlat
loop
cmp
stc
in
or
xchg
ja
in
sub
addl
mov
popf
and
or
mull
push
sbb
in
sub
cmp
scas
add
ja
pop
mov
aam
ret
fdivrs
xchg
adc
imul
es
jo
fcomps
jns
xor
pushf
cmp
out
lcall
dec
sbb
idiv
xchg
mov
insl
leave
add
ja,pt
xor
adc
pushf
jecxz
dec
push
popf
mov
or
jbe
in
dec
add
jnp
call
xor
push
cli
push
add
mov
arpl
jno
outsl
inc
mov
xor
xor
popf
sbb
jbe
xchg
cmc
mov
stos
xchg
push
lahf
jmp
jbe
mov
xchg
sbb
insb
inc
and
scas
pushf
je
scas
pop
mov
enter
idivb
inc
nop
in
sahf
test
ds
je
cwtl
out
scas
or
push
filds
imul
xor
pop
leave
mov
das
inc
lcall
and
in
movsb
fstpt
lods
pushf
hlt
je
mov
and
xor
jns
scas
lods
call
xor
pop
in
jbe
add
add
push
scas
or
fcmovnu
add
xor
loopne
mov
sbb
cmp
inc
out
aam
lods
jb
sub
subb
xchg
aam
mov
mov
fcmovb
shrl
or
lds
dec
shlb
leave
jns
pop
and
iret
mov
or
ret
adc
add
push
mov
repz
je
xor
call
loop
mov
jecxz
push
push
mov
and
cmpsl
pop
inc
jae
and
push
pusha
pop
add
xor
xchg
mov
mov
sub
jbe
mov
mov
add
std
sbb
fildl
mov
lret
in
sbb
inc
xlat
xlat
loop
jns
adc
cmc
int3
enter
outsb
add
in
je
dec
push
mov
adc
lahf
xchg
loope
cmp
dec
inc
xchg
mov
cmp
test
movsl
es
aam
or
ret
push
aad
mov
cs
push
xchg
pop
mov
and
jbe
sarl
call
jb
xor
xor
adc
mov
mov
jnp
xchg
imul
jns
xor
inc
in
jbe
mov
pop
cmpsl
aaa
push
hlt
call
or
jae
icebp
jg
insb
mov
paddsb
movsl
xor
add
loop
sarl
pop
jl
jbe
jne
cli
push
fwait
adc
cli
hlt
push
push
xchg
cwtl
push
or
xor
inc
ljmp
sub
scas
aam
fcoml
out
rep
loope
iret
in
rol
fsubrl
rorb
ret
dec
dec
mov
mov
into
xchg
cmpsb
push
sti
iret
inc
pop
add
and
sbb
sbb
push
jmp
fnstenv
js,pt
cltd
inc
shll
imul
mov
jb
cld
push
or
push
out
add
cmpsl
mov
or
or
popa
repnz
fs
or
dec
in
mov
adc
rcl
push
cltd
mov
ljmp
sub
adc
sahf
andl
in
movsl
nop
cmp
mov
push
std
pop
movsl
jg
je
xchg
fnstsw
js
inc
sub
imul
and
sub
in
mov
decl
xchg
aaa
pop
lea
das
loope
cs
imulb
mov
push
std
lcall
pop
aam
cs
and
sbb
add
push
jmp
cmp
sub
mov
cltd
inc
test
in
mov
inc
push
ljmp
iret
jmp
repz
sub
jb
cmp
mov
ret
scas
sub
test
sar
pop
lret
outsb
pushw
xor
and
aam
lea
jecxz
shlb
test
stc
dec
add
jne
push
icebp
push
or
and
out
repnz
push
adc
push
sub
cmc
jecxz
inc
add
mov
decb
addr16
lods
nop
shl
cmpsb
test
cmpl
outsb
lods
and
ret
sub
inc
pop
inc
xchg
in
dec
sbb
add
es
push
or
repz
jecxz
cmpsb
add
icebp
in
mov
adc
inc
aam
clc
and
push
add
adc
jg
adc
loop
fadd
jg
outsb
imul
out
pusha
dec
cwtl
fistpl
cwtl
cmc
xorl
fimull
mov
sub
push
orl
pop
int
mov
push
lcall
mov
sbb
clc
adc
jo
and
push
outsb
insl
leave
test
pop
loope
pop
and
mov
dec
jle
lret
mov
xchg
adcb
into
fs
jnp
repz
out
pop
stc
repnz
ljmp
ret
clc
in
jmp
or
push
mov
jno
pop
jb
inc
inc
in
call
repz
daa
xor
or
idivl
pop
int3
mov
andl
popa
ss
xor
sbb
sarl
aaa
sbb
nop
sti
inc
into
arpl
lret
inc
std
jge
cmp
and
popa
push
or
ret
test
aaa
clc
cmp
popa
insb
sub
ds
cmp
adc
xchg
lods
xor
pusha
or
sub
inc
xchg
jle
enter
leave
pop
lock
insb
add
xchg
je
sbb
and
fchs
and
push
push
jg
bound
gs
mov
ja
setae
daa
xor
add
jge
je
ret
std
pop
inc
loop
xor
in
push
xorb
rcll
in
and
inc
sbb
xchg
pop
mov
jo
sbbl
cmp
xchg
or
jp
lea
clc
and
aaa
cmp
rcr
mov
clc
into
mov
add
adc
in
icebp
rcr
xchg
push
sbb
loope
fsubl
fsubs
scas
mov
aad
out
mov
push
popa
adc
sub
xbegin
push
nop
imul
in
and
mov
clc
movl
inc
mov
sbb
push
cmpsl
mov
mov
in
pop
imul
or
test
dec
xchg
loope
in
ret
xchg
hlt
mov
stos
mov
test
cmp
push
incl
mov
jecxz
incl
cmpsb
fcmovnu
fiadds
pop
nop
in
jle
scas
test
push
js
jmp
inc
pusha
test
test
inc
push
mov
jp
pushf
xchg
and
dec
pop
or
jne
faddl
and
sub
mov
imull
sbb
enter
pop
das
or
pop
aad
fs
bound
sahf
pcmpeqd
arpl
iret
mov
push
sub
mov
sbb
jecxz
mov
pop
xchg
push
cmpsb
mov
lahf
jae
cmp
sbb
ret
test
xchg
fs
xchg
push
sbb
out
add
or
nop
dec
jne
add
ds
push
adc
call
popf
xor
shll
mov
outsl
into
mov
pop
add
scas
addr16
and
sbb
inc
test
dec
ljmp
nop
js
sahf
in
cmp
inc
push
adc
arpl
dec
sub
jnp
jge
sub
push
sub
mov
xor
dec
xor
push
icebp
cmp
cmpsl
fnsave
and
testl
xchg
loop
roll
popa
mov
ficompl
cmp
add
mov
mov
out
jb
outsb
call
sbbb
xor
test
mov
xorl
dec
push
add
call
je
loope
popf
mov
or
call
divl
xor
mov
adc
fldenv
shlb
daa
pop
in
push
push
inc
and
subl
and
dec
and
mov
jp
leave
adc
xchg
xor
dec
int
cmp
or
movb
push
xchg
test
fwait
add
sbb
jmp
xchg
pop
orl
xchg
ljmp
and
test
insl
lods
out
mov
xor
test
testl
loop
in
add
outsl
dec
mov
je
cmp
push
cld
arpl
ret
jne,pt
stc
sti
popf
out
out
sbb
sti
add
jecxz
or
in
add
mov
hlt
adc
pop
xor
mov
flds
cmp
jno
dec
sbb
mov
test
jnp
xor
or
jecxz
xorb
fs
nop
pop
sub
jp
jae
test
cmpsl
mov
dec
or
cmp
jmp
sbb
sub
or
adc
and
pop
movl
inc
jns
mov
jo
into
rcll
ret
mov
mov
mov
rorl
shll
jmp
pop
cmp
pop
dec
fs
adc
test
daa
or
push
and
into
mov
pop
pop
mov
lcall
sub
subl
inc
push
push
mov
sub
pop
roll
inc
lds
mov
sub
sbb
ss
or
scas
insl
sbb
jl
pop
repnz
stc
jle
outsl
xor
pop
push
pop
adc
scas
pop
sbb
data16
pop
decb
push
es
add
aas
mov
sbbl
mov
shrl
or
xor
push
inc
mov
jne
xor
xor
xchg
aad
or
mov
aaa
xor
ja
imul
push
xchg
mov
pop
mov
test
inc
xor
jo
pop
lcall
arpl
pop
sbb
fwait
mov
mov
enter
lods
js
add
sti
sahf
jbe
jns
cli
adc
xchg
insb
nop
push
in
inc
and
xlat
lods
mov
test
push
jbe
xchg
imul
lret
dec
mov
inc
xchg
xor
or
pop
pop
imul
mov
and
mov
cmp
jo
mov
fstpt
ret
dec
mov
pop
adc
sbb
mov
int3
mov
mov
xchg
cwtl
jl
and
push
imul
xchg
sti
or
sbb
sub
xor
mov
bound
cwtl
mov
xchg
cmp
mov
int
push
xlat
test
in
ret
add
mov
and
popl
mov
lret
push
movsb
push
mov
cltd
sbb
xor
and
push
imul
xor
dec
icebp
out
cmpsl
mov
sbb
shll
dec
and
ss
add
pop
sub
jne
fwait
sbb
in
xchg
out
aas
cmc
adc
popa
fisubl
outsb
shlb
clc
int3
dec
xchg
cltd
sub
das
push
push
pop
mov
rorb
xchg
cmpsl
jae
mov
sbb
gs
xchg
shll
icebp
and
mov
sbb
movsl
dec
mov
pop
mov
push
sbb
movsb
iret
lods
sahf
dec
xchg
andb
cmp
popa
mov
jp
mov
mov
lock
jnp
out
lret
repnz
mov
cmp
popa
repnz
dec
and
pop
jp
sub
mov
ret
push
and
out
or
out
pop
mov
mov
xchg
sub
out
push
push
push
sub
jne
add
jb
mov
adc
in
mov
lahf
and
jl
mov
mov
arpl
popa
movsb
push
popa
add
bound
ds
dec
sti
cmp
mov
mov
arpl
and
cltd
and
add
adc
shl
iret
cli
pusha
aam
jp
push
mov
mov
jle
icebp
sbbb
sbb
fdivrs
not
cmp
test
jp
pop
ja
insb
fistl
mov
loope
sbb
iret
mov
adc
adc
xchg
inc
pop
gs
jl
shll
subl
cltd
push
push
fs
xor
les
xlat
negb
jno
pop
pop
jo
or
mov
cmpl
push
or
cmpsl
mov
pop
scas
adc
imul
xor
xor
aaa
ja
mov
sub
fiaddl
xor
negl
xchg
xor
rcll
mov
dec
std
arpl
nop
pop
lock
lahf
xchg
dec
pop
addb
jb
jne
sub
cmp
and
test
push
cmp
mov
and
ss
mov
or
cmp
mov
pusha
out
inc
call
paddw
add
loope
jnp
test
and
call
scas
ljmp
xor
fmuls
mov
icebp
sbb
mov
cmp
fildll
insl
les
mov
jg
sbb
test
dec
out
mov
repnz
call
lds
mov
rcrb
das
push
jecxz
inc
cli
not
cwtl
adc
sub
call
in
cmp
mov
xor
mov
cmp
cmpsb
cs
and
aad
mov
sbb
loop
lea
sbb
jl
push
xor
push
out
loopne
jp
dec
or
and
sar
addr16
push
mov
and
adc
jns
in
cld
test
mov
lret
loopne
jle
xor
insb
push
int
push
jo
out
jecxz
cmpsl
daa
arpl
inc
testl
ror
mov
shll
shll
clc
xchg
push
mov
sbb
xchg
xor
jmp
ret
adc
cmc
stos
movsb
mov
adc
adc
sub
enter
shll
aas
pusha
mov
stos
xor
mov
sbb
ret
or
mov
push
iret
pop
inc
xchg
mov
inc
inc
jle
xor
insl
out
jno
cmp
imul
push
dec
fcoml
icebp
in
repnz
sub
add
mov
std
fwait
adc
call
shrl
data16
mov
in
repnz
sub
dec
fnstsw
jp
rorl
xchg
loope
fwait
xor
out
sub
push
add
jno
mov
loop
out
cmp
stc
loope
inc
outsb
dec
sbb
sub
rorl
mov
imul
sbb
pop
call
scas
mov
lds
push
inc
xor
loope
push
add
movl
pop
mov
cmp
and
or
mov
inc
and
and
dec
arpl
add
sub
push
lods
inc
xor
dec
add
pop
mov
sbb
shlb
pushf
ds
arpl
or
cs
pop
mov
iret
push
cld
and
jmp
lds
dec
adc
scas
out
scas
sbbl
lock
dec
aas
inc
ret
or
loopne
fwait
cltd
lock
fildll
lds
pop
pop
sahf
mov
shr
xchg
fucomp
leave
sub
mov
je
or
imul
call
xchg
cld
int3
shll
popa
cmpsl
lods
shll
xchg
bound
fcmovbe
lcall
stos
outsl
jne
lcall
sub
in
cmp
addr16
dec
dec
lcall
ret
ljmp
dec
dec
addl
pop
xchg
enter
call
add
pop
mov
rcrl
push
push
movsb
je
insl
sahf
popa
filds
lahf
fisubrl
inc
negb
outsb
sbb
jge
inc
idivb
add
inc
shll
mov
jo
sub
in
es
aam
mov
dec
les
inc
mov
mov
pop
popl
out
lock
loopne
enter
bound
mov
in
testl
xchg
cmp
addl
dec
ficompl
scas
and
in
push
in
sub
push
clc
jne
dec
mov
dec
lcall
gs
fldt
rclb
mov
int3
in
xor
insb
jno
in
adcb
scas
lock
jp
sbb
dec
xor
ror
mov
iret
xchg
stos
es
sub
scas
adc
lcall
dec
mov
mov
inc
repz
mov
pop
and
or
xor
adc
push
mov
xlat
ss
add
out
mov
lods
or
cmpsl
repnz
les
sahf
andl
dec
in
mov
push
fstl
enter
push
jae
mov
dec
out
jl
sub
es
mov
xlat
adc
frstor
pop
push
rolb
dec
mov
sub
inc
scas
mov
mov
movsb
mov
mov
mov
test
rcll
add
jo
sub
js
popf
int3
cld
popa
xor
adc
pop
lea
pop
xchg
out
adc
mov
popf
sbb
test
int3
out
movsl
adcb
es
mov
inc
cmpsl
push
push
jae
xor
in
fimuls
sub
adc
or
mov
icebp
xchg
mov
mov
xchg
xchg
not
insb
jge
jae
push
sub
jno
mov
push
ja
pop
sbb
cmpsl
inc
les
repnz
movsb
imul
jne
je
xor
inc
xor
sarb
pop
das
jae
fs
subl
push
mov
add
xchg
xchg
pop
dec
neg
mov
andl
leavew
cmp
es
sbb
jg
fstp
adc
inc
in
pop
lea
and
inc
push
push
push
pop
cltd
in
ss
mov
out
dec
adc
sahf
popa
iret
mov
mov
mov
mov
xchg
push
push
push
inc
add
arpl
addr16
leave
jbe
fwait
out
mov
fcmove
fisubs
hlt
xor
pop
xchg
or
jo
movsl
cld
mov
xchg
jae
mov
fists
pop
les
xchg
mov
mov
xchg
ret
out
ret
inc
inc
mov
aaa
dec
add
repz
push
or
cmp
test
adc
xor
shll
cmp
mov
mov
outsb
in
pop
ret
fwait
dec
xor
xor
das
xchg
sbb
xchg
mov
sti
lahf
mov
sbb
xchg
out
sbb
inc
int3
fcoms
cmc
iret
mov
jp
push
loopne
jle
in
stos
daa
lock
dec
pop
cli
mov
clc
dec
mov
shr
adcb
test
daa
pop
aaa
ficoml
jl
jnp
mov
lods
enter
mov
inc
jae
aam
pushf
rcll
jle
int
pop
xchg
repz
les
sbb
jnp
lret
pusha
lcall
add
movsb
jmp
push
jle
scas
pop
and
int3
pushf
inc
shlb
xchg
mov
xchg
sub
jb
cmpsb
mov
xchg
shlb
je
nop
pushf
add
xchg
fldt
stos
inc
leave
pop
lret
aas
inc
mov
outsl
dec
push
xchg
cs
rcll
xor
or
jnp
xor
stos
insl
xchg
dec
jg
inc
jecxz
fcompl
or
into
cmp
roll
push
cltd
mov
pop
cwtl
pop
add
dec
sub
ret
das
test
jne
jno
ljmp
aas
or
add
int
out
cmp
negl
or
pop
mov
movsl
pop
pushf
out
inc
pop
call
xchg
push
jmp
movsl
or
adc
not
pop
or
sub
mov
dec
add
dec
mov
push
adc
in
push
mov
fcompl
xor
insb
lret
jne
cs
stc
mov
mov
pusha
inc
xchg
sbb
repz
test
mov
rorl
scas
imul
in
adc
loopne
and
daa
mov
mov
xor
mov
xor
xor
imul
aas
jp
xchg
or
test
and
and
divl
daa
sbb
push
cmp
rcll
xor
inc
cmc
testb
mov
shlb
and
nop
or
push
pushl
outsb
push
shrl
jecxz
insb
leave
pop
das
leave
xor
in
xchg
pusha
jnp
rcll
push
cld
cmpl
jns
xchg
adc
xchg
cmp
push
or
mov
mov
jnp
test
imul
pusha
jnp
and
jno
jne
into
adc
es
push
or
inc
insl
out
jecxz
push
mov
pop
push
add
mov
mov
and
mov
sub
scas
popa
in
push
rcrl
mov
je
test
cmp
shlb
or
mov
xor
xor
js
lea
std
jmp
sub
and
hlt
mov
stc
xchg
mov
cmp
mov
jg
fsubrp
stc
cmp
push
dec
push
dec
add
fcompl
mov
add
mov
inc
xchg
out
clc
mov
push
pop
mov
cmpsl
sbb
dec
pop
sarl
aaa
scas
cld
jae,pt
cmp
add
lock
jle
cmpsl
and
lahf
andb
pop
xchg
ret
xor
shrl
decb
cld
sub
rcrb
inc
jb
dec
mov
sbb
movsl
stc
popf
cmp
mov
in
flds
inc
push
cld
packssdw
and
shl
xchg
call
iret
and
je
or
mov
mov
cmp
cld
sub
movsb
push
mov
icebp
lea
mov
dec
enter
fcmove
inc
pusha
cmp
ret
rcll
popa
cmp
dec
xchg
or
fwait
daa
ret
or
mov
outsb
in
dec
rolb
dec
xchg
lods
aas
sbb
inc
gs
sub
test
rorl
mov
adc
cli
fdivs
mov
test
aam
mov
in
cli
vmwrite
push
sub
or
xchg
fwait
xchg
call
popf
loop
xlat
cmpsb
cltd
jmp
jbe
cmpsb
andb
xchg
scas
stos
push
bswap
sub
mov
shll
ud2
ja
xchg
add
test
sahf
mov
jecxz
lea
jle
rcll
jg
inc
jbe
push
mov
pop
jg
stos
sbb
push
mov
stos
movsl
mov
movsl
jb
cmpsb
leave
pop
and
setle
int3
rorb
inc
rorb
push
jno
sbb
aam
adc
je
das
pop
sarb
decb
mov
shll
ljmp
insb
adc
add
pusha
xchg
bound
ljmp
outsb
mov
adc
and
jmp
xor
xchg
dec
pop
in
insl
mov
popa
shll
dec
add
pop
pusha
rclb
lret
ja
mul
sub
mov
mov
jns
jae
fisubs
and
loop
mov
inc
mov
adc
and
gs
push
test
out
sbb
rcr
flds
loope
xor
sbb
cmpsl
outsb
roll
std
mov
into
mov
arpl
jo
in
jle
fistpll
mov
jecxz
jno
cmp
and
xchg
xchg
cmp
ljmp
insb
xchg
ficomps
dec
inc
push
arpl
jno
mov
sbb
in
jmp
xor
add
fdiv
push
aaa
sub
adc
sarb
sub
dec
jno
mov
ss
jg
cmpsl
lcall
pop
xor
les
sub
test
jg
mov
dec
aad
jmp
xor
sbb
xchg
inc
push
orb
clc
repz
cmp
jmp
xchg
mov
mov
mov
adc
fldenv
jecxz
fldcw
aad
and
xor
popf
decl
xor
push
icebp
dec
nop
jl
xor
shlb
ss
lsl
sbb
stos
inc
xchg
jnp
push
daa
das
shlb
push
hlt
ja
pop
sti
mov
pop
addb
cmpsb
sbb
mov
lahf
cmc
aas
js
out
inc
mov
mov
dec
dec
mov
movsl
loopne
outsb
sbb
xchg
fsubrl
cmp
mov
js
cltd
jo
cltd
or
gs
sbb
test
out
push
cmp
in
jb
sub
idivb
cmp
mov
fidivl
int3
sub
pop
cmp
sub
gs
aaa
and
mov
ret
aaa
add
ljmp
push
jmp
stos
and
fisubs
xchg
adc
mov
pop
popa
mov
lret
ret
mov
or
sub
imul
cld
mov
pop
jl
enter
clc
pusha
push
es
das
xchg
stos
add
or
je
cmpb
mov
inc
xor
push
xchg
or
add
mull
and
xchg
mov
ret
pusha
rorl
xlat
cmp
and
cmp
adc
aad
lcall
xchg
enter
mov
xchg
jbe
stc
mov
fdivrl
jp
push
and
out
int3
jo
sbb
fists
mov
loope
inc
push
fidivl
mov
out
hlt
dec
push
pop
fidivl
in
cs
mov
inc
jnp
sub
and
mov
push
push
test
xchg
in
mov
int
mov
out
xor
pop
dec
int3
dec
xor
cs
fisubs
xchg
cwtl
mov
icebp
sub
cmp
aam
xchg
leave
addr16
or
ds
sbb
push
jmp
shll
mov
mov
sbb
repz
out
outsb
mov
jle
push
jae
pushf
adc
sub
filds
push
push
lea
inc
sub
leave
add
iret
es
lods
jne
and
jno
adc
fs
push
pop
jl
leave
in
sbb
push
aas
pop
xchg
aam
aas
scas
outsl
adc
adc
xor
out
xor
lret
lods
jbe
pusha
rolb
cld
xchg
insb
xchg
cltd
cwtl
fs
xchg
ljmp
les
push
mov
fadd
in
ds
sub
hlt
mov
push
or
xor
dec
inc
jb
xor
dec
ja
scas
adc
ds
mov
lcall
out
dec
addl
inc
dec
cmp
pop
dec
cmpsl
in
aas
aad
fistl
pushf
lea
stos
jle
mov
push
arpl
mov
rcrb
ljmp
pop
bound
popf
es
and
push
clc
jp
sub
cli
insl
lea
dec
sbb
dec
out
mov
xor
add
inc
dec
sbb
adc
lock
pusha
jecxz
dec
xor
mov
mov
outsl
adc
sub
xchg
scas
mov
pop
sbb
xchg
pop
adc
sar
arpl
cmp
mov
jge
sbb
int
cmpsl
mov
cltd
stc
cmp
jne
sub
scas
cmp
pop
outsb
push
fwait
and
push
stc
jp
xchg
stos
hlt
or
sbb
scas
imul
jns
pop
rclb
js
push
cli
xchg
jne
pushf
sub
popa
shll
subl
ror
and
int3
adc
std
adc
ds
mov
aam
test
adc
push
pop
add
sbb
and
jae
mov
loopne
or
repz
or
push
cmpsb
arpl
dec
outsl
xor
outsl
xor
push
loop
pushf
mov
cmpsl
xor
ret
movsl
mov
pop
sbb
stos
mov
sbb
in
test
xlat
pushf
inc
sti
jle
cmpsb
adc
add
in
jle
inc
cs
dec
sub
popa
or
sub
inc
push
mov
dec
repz
push
xchg
sub
shlb
and
sub
pop
lret
pushf
test
xchg
call
or
gs
mov
lods
mov
jl
xor
cmpsb
push
shr
iret
pop
add
xchg
mov
jecxz
or
js
xchg
jo
push
xor
aaa
add
push
mov
aad
and
jbe
outsl
fwait
xor
adc
jle
aam
subb
and
jg
mov
les
outsl
iret
mov
sbb
outsb
das
test
es
data16
jb
xchg
or
pushf
popa
mov
icebp
cmp
loopne
lds
clc
cli
jp
ds
lds
push
xlat
int3
or
aas
std
adc
cs
ret
mov
dec
dec
in
add
imul
movsb
xchg
pop
push
jmp
mov
or
push
lods
mov
js
cli
ret
mov
scas
imul
int3
das
push
cmp
push
push
dec
stos
push
ret
ret
mov
inc
enter
inc
jp
int3
loop
inc
sub
inc
les
adc
jns
mov
xor
and
mov
xchg
cli
inc
mov
std
imul
push
xor
mov
out
mov
aaa
pop
xor
cmp
pop
add
or
mov
adc
iret
mov
daa
outsl
xor
pop
add
imul
push
jo
ficoml
test
xchg
bound
mov
pop
sub
pusha
adc
fs
fisttpll
push
inc
and
cmpsl
or
xor
cmp
or
and
jle
scas
xchg
ds
cwtl
aas
inc
dec
jno
loopne
dec
js
or
cmpl
mov
jmp
and
lods
mov
cwtl
jbe
es
cmp
mov
ret
insl
andb
xchg
and
jl
repz
mov
sbb
movsl
sbb
add
movsl
ss
repnz
sbb
adc
cmp
pop
mov
pop
das
fistps
push
mov
in
push
mov
dec
in
adc
mov
and
aad
stos
mov
lods
push
mov
mov
repnz
add
out
mov
jnp
xchg
push
push
fisubl
ret
andl
loopne
inc
in
xchg
sub
mov
cmp
mov
sub
outsb
or
xorl
cmp
push
adc
push
push
adc
insl
pop
fdivs
sti
dec
sub
mov
popf
fcomip
pop
xor
test
dec
mov
out
cli
sbb
sahf
ret
insb
xor
push
ret
xchg
ret
daa
scas
push
and
std
ficoms
jae
dec
mov
faddp
lock
cmp
cmpsl
or
add
add
fmuls
or
cmp
test
add
dec
subb
fxch
jns
into
mov
jg
push
lods
inc
ret
adc
bound
shll
loope
arpl
or
push
scas
push
aam
mov
jge
or
imul
mov
imul
cltd
movl
inc
and
aam
xchg
and
mov
fimuls
or
loopne
cmp
test
sub
and
sbb
lahf
lret
out
sahf
sahf
ljmp
jle
dec
jnp
inc
lock
or
inc
cltd
mov
mov
in
add
sub
loop
in
lret
adc
stos
mov
sbb
inc
inc
or
mov
arpl
lcall
sbb
sub
push
jno
dec
mov
push
fdivrp
sub
pop
adc
fsubs
cwtl
inc
fdivrl
pop
add
fldenv
adc
dec
ss
jl
push
and
inc
push
mov
or
es
addb
rorl
stc
jl
adcb
push
call
loope
bound
sub
jbe
sbb
or
push
adc
loop
fnsave
gs
cmp
js
lods
ds
lahf
call
pop
pop
sub
jle
mov
int
ret
push
push
jp
in
addr16
sub
or
push
cmpsb
ds
or
stos
xchg
shl
mov
aaa
lock
mov
dec
pop
pop
pop
sub
lds
ljmp
lods
xchg
inc
aam
jecxz
push
lcall
cmp
jae
push
cwtl
inc
sti
sbb
cmpsb
ficomps
out
lea
dec
bound
jne
sahf
aaa
inc
fwait
xchg
fdivrl
cmp
aaa
sbb
add
push
iret
dec
idivb
xor
dec
ret
pop
sub
adc
mov
add
xchg
add
lds
dec
mov
jnp
inc
shrl
ja
pop
jnp
aam
sarb
repz
faddp
add
cltd
mov
jg
push
lahf
mov
mov
cmp
mov
hlt
push
outsl
inc
shlb
fadds
je
xor
out
add
movsl
xor
das
inc
aaa
addr16
mov
stos
and
adc
or
out
mov
jg
push
jbe
arpl
mov
or
ret
mov
jecxz
push
imul
push
jecxz
xchg
clc
dec
ja
push
sub
add
insb
es
in
mov
je
inc
jno
mull
fmull
xor
jo
insb
jnp
push
or
jnp
dec
dec
mov
das
lods
pop
xor
out
mov
mov
ljmp
xlat
sbb
sahf
scas
das
les
xlat
or
imul
imul
push
push
clc
arpl
cmp
jmp
xor
adc
adc
stos
add
pop
movsl
jg
adcl
das
mov
and
scas
cs
sub
sbb
loope
cmp
sub
sbb
xor
jmp
xchg
orl
mov
lds
inc
and
sahf
inc
stc
push
icebp
hlt
inc
aad
loope
int
jne
jns
sub
adc
mov
adc
pop
repnz
push
push
xchg
jge
outsl
fidivs
lahf
movaps
rolb
icebp
je
fcomp
or
xor
xor
adcl
sub
pop
cmp
in
ja
inc
loopne
stos
inc
outsb
mov
jp
leave
fcoms
sbb
and
fimull
sti
rcrl
mov
push
jae
push
pusha
sbb
mov
sarl
add
scas
xor
or
ljmp
cli
aad
jo
and
sbb
je
enter
push
dec
sub
inc
adc
lahf
decl
push
or
xchg
popf
and
cmpsl
bndstx
adc
xchg
shll
das
inc
sbbl
push
pop
loop
push
jnp
mov
jae
out
popa
cltd
rclb
iret
into
mov
or
sbb
pop
int3
cmp
sbb
movsl
jg
and
mov
fsubs
shrl
cltd
dec
adc
inc
xchg
scas
mov
fisubrs
mov
xlat
cltd
inc
mov
or
push
sbb
icebp
aam
aad
xor
xchg
add
cmpsb
popf
mov
mov
inc
cmp
pop
gs
mov
rcrl
fiaddl
je
sbb
or
loop
sbb
push
sti
mov
inc
push
jbe
ficoms
jae
push
lds
std
jmp
add
dec
divb
push
je
jbe
jnp
dec
cwtl
jae
push
inc
mov
dec
and
pop
filds
cmp
inc
adc
mov
xchg
lds
xor
lock
jb
fisubrs
or
jle
orl
or
int
ret
add
pop
mov
or
mov
sub
divb
adc
sahf
out
jge
mov
lock
pop
icebp
lret
cmp
push
sbb
inc
outsl
push
or
and
je
push
jge
mov
daa
rcl
cld
movsb
hlt
cs
and
jmp
jecxz
pop
movsb
lds
inc
mov
pop
adc
cltd
test
push
cmpsl
and
lods
dec
pop
xchg
jbe
jbe
xor
cmpsb
dec
rol
cli
jae
pop
jne
pop
psrad
jg
insb
push
add
out
mov
call
or
mov
adc
push
orb
bound
sub
cmc
xor
push
adc
sahf
jmp
fsubs
popa
stos
mov
dec
imul
addr16
rol
insb
loope
push
lds
sub
enter
scas
inc
addr16
cli
lock
cmc
mov
cmc
mov
cmc
sub
mov
in
outsl
movb
xor
mov
dec
mov
arpl
popf
sbb
lods
xchg
inc
test
push
mov
push
inc
in
jae
adc
mov
mov
inc
arpl
std
xor
lret
test
pop
mov
inc
jle
mov
movsl
pop
or
inc
xorb
inc
cwtl
cmp
adc
add
repz
rcrl
jb
push
outsb
sub
or
inc
popa
pop
sub
and
orb
push
jns
lret
call
and
jmp
push
fstpt
fisubrl
sub
mov
pop
les
fs
push
ljmp
fdivrs
mov
repnz
cmpsl
pop
xchg
pushf
ljmp
jge
mov
addr16
mov
hlt
or
loope
jo
ss
cmp
push
or
out
push
mov
ljmp
vhsubpd
xor
aaa
jmp
pop
sbb
jb
ret
flds
iret
andb
leave
aaa
stos
inc
fsubrs
insb
push
and
out
mov
fmul
pop
popa
pushf
adc
and
out
shrb
ret
in
dec
push
out
xor
jno
add
sub
stos
push
clc
jne
outsb
pop
add
aas
fcoms
xor
jnp
test
lret
jns
push
push
cmp
outsb
iret
repz
adcb
aam
in
add
xchg
mov
cwtl
in
mov
mov
nop
lahf
push
or
lahf
jle
push
mov
push
push
or
scas
pop
mov
push
jo
or
je
mov
jmp
jo
pop
pop
fidivs
add
sahf
push
dec
cwtl
das
xchg
arpl
xchg
and
sbb
push
stos
pop
sbb
pop
nop
fcompl
aad
lcall
test
pop
pop
outsb
xor
mov
hlt
push
out
xchg
insb
je
pop
cmc
dec
sbb
cld
arpl
jno
or
lods
data16
addr16
aaa
jno
and
fchs
stos
sbb
les
jae
stc
nop
xchg
pop
add
adc
and
sub
sub
inc
pop
out
test
or
mov
int
inc
xchg
pushf
sbb
das
scas
xorb
pushf
ret
mov
xchg
dec
push
divb
insl
push
xchg
jne
imul
add
fldl
mov
sbb
into
leave
push
sbb
mov
cli
pop
mov
mov
mov
sub
iret
xchg
mov
push
inc
xor
addl
icebp
fstps
jae
mov
adc
cmpsl
xchg
notl
in
mov
jns
mov
stos
mov
sub
mov
nop
mov
jle
pop
out
xchg
sub
movsl
stos
jne
pop
int3
iret
add
bound
rcrb
adc
jns
int3
jmp
int3
pop
pop
dec
jmp
loopne
test
lea
mov
or
in
jae
pop
stc
jle
push
or
inc
test
lret
es
stos
stc
in
gs
lock
mov
in
hlt
fcomip
pop
mov
mov
push
inc
jb
cld
cmp
xchg
jno
or
push
or
stc
ljmp
dec
movsb
xchg
mov
add
xor
mov
sarl
mov
pop
push
cmc
in
and
lds
aaa
mov
xor
cltd
sbb
out
add
ret
shll
iret
xor
xchg
dec
repnz
enter
push
rol
dec
xor
sub
aaa
xor
mov
xor
mov
and
mov
sti
mov
jp
popa
ret
mov
jl
and
add
dec
mov
outsb
sub
xor
push
jge
cwtl
jp
loope
sbb
inc
insl
hlt
mov
mov
mull
push
pop
inc
in
xchg
and
stc
pop
push
ret
repz
pushf
push
bound
xchg
push
sbb
mov
stc
pop
pop
dec
sbb
sub
mov
ror
loope
aam
stos
mov
mov
outsb
mov
cmp
pop
je
lcall
mov
mov
jne
dec
mov
xchg
les
push
xchg
mov
jl
xadd
cmp
add
xchg
in
outsl
mov
mov
jl
inc
xor
and
or
mov
push
and
jmp
movsb
push
add
xchg
pop
push
or
xchg
sbb
insl
xchg
push
sbb
mov
pop
cmp
in
mov
mov
test
lds
xchg
pusha
mov
pop
or
fiaddl
clc
mov
mov
fs
orb
fnsave
add
loope
dec
ffreep
inc
lods
sbb
stos
sub
arpl
aad
push
in
stos
dec
lods
sbb
xchg
fldl
pop
lcall
sbb
lods
xchg
mov
mov
push
gs
ret
jbe
arpl
movsb
jnp
nop
sbb
ret
loopne
push
scas
icebp
into
cmc
mov
rolb
push
mov
inc
adc
test
cmpsb
xor
pop
int
call
nop
repnz
testb
mov
inc
mov
mov
mov
movsb
jbe
push
mov
mov
and
mov
fsubl
incb
xchg
call
in
imul
cmpsb
adc
sti
das
pop
xchg
xor
push
adc
ljmp
xor
cltd
add
mov
push
mov
mov
mov
mov
pop
sbb
popf
pop
push
mov
aam
sub
mov
jo
test
push
jns
add
inc
fidivs
xor
shl
mov
pop
push
push
mov
fiadds
or
and
xchg
and
mov
addr16
in
ljmp
jmp
leave
repnz
or
popa
xor
xchg
stos
inc
inc
mov
xor
sbbl
movsb
jae
adc
sbb
xor
pusha
adc
ljmp
test
lods
paddb
sbb
cmc
pop
fsubrl
jl
mov
push
sbb
xchg
mov
in
jae
and
ljmp
roll
push
jle
pop
int3
mov
inc
xlat
push
popf
mov
jmp
pop
in
mov
mov
dec
dec
push
and
lds
fisubrl
cmp
shl
push
xor
repnz
sub
icebp
sub
cmc
movsl
adc
int3
sbb
inc
out
adc
nop
sti
scas
outsl
xchg
cmp
leave
mov
sbb
mov
push
pop
adc
push
xchg
or
and
sbb
adc
test
adc
lret
insl
outsl
jae
mov
jbe
add
jmp
sub
xor
lret
lahf
jo
and
adc
fcmovbe
and
aaa
xchg
mov
in
pop
inc
test
inc
xchg
push
jge
insb
inc
call
fwait
clc
jnp
sub
int3
sbb
push
js
loop
inc
push
push
dec
jmp
sahf
insl
pop
test
ss
or
or
xor
sub
add
ljmp
test
and
bound
daa
mov
sarb
mov
adcl
ljmp
sub
ds
lcall
push
jbe
test
push
inc
push
mov
inc
pop
ss
mov
inc
xor
pop
pop
inc
pop
cs
hlt
int3
outsl
in
mov
add
lock
push
pop
pop
mov
pop
cld
out
idivl
shlb
shl
xor
add
pop
out
and
mov
mov
push
push
shrb
testb
insl
mov
fadds
ret
sarl
idivb
sbb
imul
lds
mov
mov
ficompl
pop
mov
sub
stos
hlt
testl
pop
test
loopne
push
scas
sub
inc
dec
mov
xor
outsb
cmpsb
push
jo
clc
and
add
stos
add
pop
add
test
out
xchg
push
call
cmp
out
and
jmp
gs
add
test
xor
mov
mov
mov
lret
aad
add
out
nop
roll
dec
cmovnp
cli
push
inc
xor
enter
inc
pop
or
cmp
xchg
pop
inc
mov
cs
or
int3
mov
inc
xor
arpl
lcall
iret
cld
and
or
ljmp
adc
fwait
jbe
lock
mov
test
sti
loope
into
sahf
stos
idivb
ds
stos
fisttpll
cli
mov
out
out
sbb
leave
jmp
je
cmp
outsl
cmp
fsubrl
xchg
adc
cs
std
rclb
addr16
popf
and
ficoms
xor
jno
imul
mov
add
notl
sti
push
cmc
shl
std
lods
dec
pop
dec
dec
negl
xor
mov
insl
dec
adc
out
cmpsb
pushf
std
push
pop
cmp
rorl
adc
fstps
jae
or
cmp
ja
shr
xor
leave
mov
ja
inc
xchg
sub
rcrl
and
outsl
in
cld
sbb
aad
sbb
add
adc
mov
cwtl
int3
loopne
mov
push
add
out
xor
sub
cmp
sti
adc
push
xor
cltd
add
iret
lahf
dec
in
jecxz
cs
xor
mov
inc
ss
adc
mov
sbb
push
addl
or
xor
arpl
cwtl
sahf
sub
dec
jbe
in
dec
sub
inc
and
stos
sub
ret
fcmovnbe
mov
xchg
pop
hlt
mov
jge
in
into
push
cmpsb
fidivl
lea
jg
adc
lock
inc
pusha
mov
and
mov
mov
xor
lods
fsubl
xchg
pop
dec
mov
fwait
cs
repnz
cmpb
cwtl
or
aam
lret
and
sbb
xchg
xor
push
dec
jno
fimull
mov
dec
xchg
scas
push
push
jae
cmp
sahf
xchg
mov
dec
iret
adc
es
fwait
je
pop
shll
and
xchg
inc
aad
int
lahf
jb
xor
sti
divl
add
mov
mov
imul
pop
je
dec
pop
cld
lret
ja
fs
lret
push
jecxz
popa
push
xor
push
cli
movsb
out
mov
jne
ljmp
enter
loopew
inc
pop
mov
sub
push
or
cs
pop
lods
cltd
pusha
xrelease
lret
loopne
push
out
or
test
cli
push
aaa
jne
rcr
fldl
enter
pusha
adc
out
pop
and
lcall
mov
dec
cmp
push
cmpsb
cmp
dec
inc
xor
mov
push
xchg
xchg
aam
sub
inc
popf
jb
cs
and
xor
mov
jp
js
insb
lcall
shlb
push
outsb
aad
xstore-rng
cmpsl
test
jge
pop
sbb
leave
xchg
cltd
cs
add
insb
push
call
jmp
fld
add
cmp
fldl
iret
push
push
not
sub
jl
push
pushf
mov
and
cmp
inc
mov
cmp
lods
pop
rol
add
mov
lea
push
pusha
mov
and
scas
mov
jo
mov
jnp
icebp
jns
pusha
push
pop
xchg
roll
adc
mov
in
sti
dec
ficompl
mov
mov
pop
xchg
stos
hlt
pop
and
test
in
and
mov
ret
xor
notb
les
iret
imul
fstpl
stos
adc
push
jb
adc
lret
or
daa
ret
xchg
sub
jge
adc
sub
cmp
std
dec
shr
jmp
mov
imull
js
rorb
jno
adc
jb
mov
sbb
push
into
or
xlat
jns
jo
xor
bound
repnz
mov
and
xor
stos
mov
in
xlat
sub
rorb
sub
insb
sbb
push
lds
push
or
mov
das
mov
iret
mov
dec
call
stc
out
push
addr16
adc
xor
fidivrl
inc
out
movsb
shlb
outsl
out
sbb
dec
add
rcl
or
xor
lds
fcompl
cmp
sub
add
js
sub
xorb
or
dec
sub
test
mov
mov
jb
adc
jns
mov
and
mov
dec
and
sbb
cmpsl
sahf
test
cwtl
sbb
or
in
leave
scas
xchg
and
lock
adc
xor
fs
mov
or
pushf
mov
movsb
xchg
sbb
movsl
dec
out
hlt
clc
inc
and
mov
mov
cmp
push
sbb
pushf
jae
adc
jg
inc
mov
push
jg
xchg
in
test
icebp
mov
je
leave
in
pop
xlat
dec
dec
ret
xchg
mov
imul
dec
insl
movsl
adc
cmp
inc
xor
add
movsl
or
enter
xchg
xor
jbe
adc
jg
inc
add
jmp
test
mov
and
mov
mov
js
inc
stos
sbb
or
sarb
xchg
jl
nop
mov
fbstp
ds
mov
push
xor
mov
mov
ss
mov
fwait
aam
std
cltd
addb
sbb
and
xlat
sbbl
inc
loope
movsl
leave
loopne
out
mov
mov
sub
aam
dec
test
pusha
xchg
out
int3
sub
add
cmpb
into
clc
gs
or
imul
xchg
mov
int3
cmp
sahf
loopne
or
into
xor
adc
je
sti
test
mov
push
mov
stc
add
adc
cli
or
dec
cmp
xchg
xor
pop
inc
jmp
insl
or
lea
xchg
imul
add
cmp
sbb
mov
mov
jecxz
add
cmp
popa
les
daa
pop
push
cmp
fisttpl
mov
int
mov
lea
ret
cmpsl
sar
fmull
out
sub
test
test
mov
or
leave
cmpsl
sub
movsl
out
int3
in
iret
and
leave
not
pop
ljmp
icebp
mov
sub
adc
xchg
fildll
enter
into
loop
test
xchg
xor
mov
cmp
xchg
sbb
add
scas
shlb
add
jns
and
stos
adcb
or
push
push
scas
setne
inc
pop
dec
enter
xor
test
mov
push
push
test
cmp
pop
dec
cld
enter
mov
cmp
and
call
lea
inc
mov
inc
mov
dec
pop
or
mov
cld
lods
pop
or
loope
cmp
or
sbb
enter
lret
into
jmp
pop
inc
cmp
xchg
sbb
jp
imulb
inc
jg
and
add
lret
jb
insl
stos
dec
xor
mov
inc
imul
or
mov
inc
lods
adcb
lret
pop
jo
cmp
mov
daa
xor
xchg
dec
push
das
push
cmpsb
in
sub
es
mov
mov
and
or
sub
into
xchg
add
sarb
call
pop
pop
test
mov
push
stos
pop
insl
fsub
mov
repnz
fld
sub
mov
xchg
mov
es
dec
stos
iret
out
pop
arpl
and
and
ror
mov
push
or
sub
mov
pop
adc
outsl
stos
cmp
sbb
cmp
push
sti
xchg
arpl
sbb
push
cltd
mov
inc
hlt
cld
imul
repnz
sbb
popf
dec
sbb
or
pop
push
vrsqrtps
imul
xor
insb
pop
pusha
mov
icebp
xchg
cltd
loopne
jae
xchg
add
arpl
mov
nop
dec
xor
jo
outsb
dec
ret
xor
leave
add
sub
xorl
rcr
mov
mov
mov
dec
cmp
xchg
sbb
int3
mov
aam
jbe
insl
imulb
data16
xor
sub
jge
sbb
mov
fdivr
mov
or
adc
in
icebp
push
jno
jb
fwait
sub
flds
push
cmc
lret
dec
mov
push
adc
subb
bound
pop
jbe
fs
jle
pusha
lret
ret
rcrl
xchg
jle
fdivl
cmpsl
jmp
push
clc
rolb
mov
jbe
pop
enter
and
test
jle
scas
lret
add
mov
jl
mov
mov
out
mov
xor
mov
in
jecxz
jnp
push
lcall
jp
adc
fs
daa
sub
out
repnz
mov
and
xchg
xor
inc
mov
in
or
shll
adc
xor
ds
ret
or
movsl
jp
fwait
push
and
test
nop
and
pop
stos
je
pop
fnstsw
cli
dec
xor
addr16
das
test
addb
jbe
jmp
cld
stc
test
in
pop
cmp
in
fucomip
adc
xchg
pop
sbbb
jae
sbb
daa
pusha
mov
mov
push
imul
in
mov
mov
loope
pop
mov
sub
imul
notb
push
mov
into
xchg
repnz
and
pop
outsl
mov
imul
aam
fdivs
in
or
outsl
and
add
jmp
int
xor
ret
xor
and
loope
aas
push
dec
les
aam
add
push
add
mov
hlt
hlt
out
ffreep
dec
sbb
lods
mov
pushl
out
cltd
stos
lods
iret
and
mov
pop
sub
cmp
add
and
mov
outsl
pop
dec
sbb
jbe
lcall
ljmp
adc
lods
push
add
jge
fstps
push
into
mov
repz
imul
sub
outsl
xor
sti
lret
add
mov
call
inc
pushf
fisttpl
ss
or
les
incl
icebp
cld
leave
xor
stc
adc
dec
fnsave
fistpll
mov
loopne
push
push
inc
stos
cmp
fsubrl
sub
cmpsl
fs
push
mov
sahf
cmp
jp
out
lods
pop
push
into
data16
ljmp
xor
ljmp
inc
rorl
pcmpeqd
test
fmull
mov
cltd
cmp
out
hlt
or
xorb
inc
jg
pop
and
aaa
js
insb
pop
push
insl
fimuls
data16
cmpsl
push
mov
jmp
xor
add
xchg
sbb
mov
add
fwait
cmp
jbe
call
mov
out
insb
add
mov
lcall
aaa
xorl
leave
arpl
nopl
out
inc
mov
sub
pop
push
dec
mov
insb
jg
xchg
pop
addr16
push
jno
nop
pop
push
push
frstor
xchg
xorb
or
cmp
cmp
pop
cmp
loop
xor
pop
push
notl
insb
sub
cmp
out
mov
mov
push
out
xlat
int
lahf
xorl
dec
sbb
je
ljmp
jo
mov
lods
mov
es
insb
push
inc
mov
jne
sub
mov
leave
loop
pop
testb
lods
lret
lds
cmp
loop
fcoms
pop
mov
inc
sti
inc
sub
cmp
popl
lds
outsb
aas
cwtl
pop
push
sub
or
pop
mov
or
out
imulb
xchg
push
and
test
pop
xlat
imul
repz
and
addr16
imul
fmul
cmp
fidivs
out
inc
loopne
and
scas
loopne
push
push
mov
inc
add
daa
je
dec
pop
sahf
xor
jp
dec
in
mov
mov
stc
push
xor
aad
jge
movsb
adc
mov
push
inc
icebp
adc
insb
xor
cmpsb
push
xchg
rcrb
scas
movb
daa
daa
pop
jle
push
jbe
push
mov
stos
mov
int3
jns
pop
int3
mov
mov
repnz
outsb
inc
cmp
aaa
xlat
jns
cmpsb
mov
xchg
sbb
stos
and
sbb
lds
jle
outsl
cmp
pop
pop
mov
mov
pop
test
cmp
int3
inc
jnp
stc
mov
std
aaa
push
or
out
ret
jae
lds
adc
fistps
out
add
adc
jle
out
and
popf
fimuls
nop
pop
out
lds
mov
push
xor
ss
mov
push
xadd
dec
aas
and
loop
mov
cltd
iret
js
sbb
or
inc
sbb
and
fcomp
xchg
adc
stc
jno
cltd
aad
sbb
adc
push
jb
or
mov
in
enter
ror
push
popa
adc
insl
outsl
mov
nop
fimuls
inc
ljmp
sti
stos
pop
cmc
inc
jg
rcr
rorb
or
daa
dec
cmpsl
jo
cwtl
cld
jp
cld
sbb
sbb
mov
lcall
jl
jmp
int
lods
mov
enter
cmp
push
test
lret
mov
lock
mov
daa
outsb
dec
mov
stos
push
dec
xchg
aaa
lock
xor
add
inc
lods
scas
push
jbe
fwait
in
mov
pop
out
push
push
pop
mov
daa
mov
jmp
mov
fistl
add
int
imul
lret
out
mov
push
sub
jnp
loope
stos
mov
mov
dec
popf
pop
dec
mov
dec
jns
xlat
push
cli
ret
out
dec
insl
sbb
or
jp
enter
adc
and
xchg
pop
inc
sbb
mov
std
or
add
sub
lds
inc
loope
sub
and
sbb
mov
testb
sub
add
mov
outsl
or
push
js
shrl
sbb
movsl
jge
mov
ret
fsubr
and
sahf
sarb
popa
cmpsb
aad
pop
fisttps
jecxz
jp
in
lea
fisubs
repz
sti
int3
push
les
subb
sbb
add
sbb
dec
or
fiaddl
sub
inc
sbb
cmp
cmp
mov
dec
mov
stos
cld
mov
pop
dec
mov
mov
push
adc
adc
int3
push
test
shrb
inc
sbb
mov
aas
lahf
fdivrp
push
dec
xchg
loop,pt
std
in
inc
push
in
pop
insb
sub
testb
int
sub
jo
xchg
insl
pop
in
push
imul
push
inc
sbb
data16
pushw
inc
notl
inc
lods
ficomps
adc
cmp
mov
jge
inc
add
fisubl
in
xor
add
out
xchg
xor
adc
mov
adc
je
push
sub
mov
mov
push
bound
mov
call
cltd
movsb
or
sbb
rcrl
cld
xor
add
rol
push
sbb
sub
dec
mov
ret
shl
push
dec
jmp
inc
out
das
dec
cltd
cmp
xor
pop
or
xchg
jbe
rclb
mov
mov
rorb
jle
push
inc
and
mov
in
sbb
lods
push
aad
dec
iret
push
insl
cwtl
or
mov
adc
add
sarb
push
inc
push
out
scas
or
adc
jo
and
mov
sahf
adc
and
addb
sti
xchg
bound
mov
jmp
idivb
xchg
mov
cmpsb
pop
pop
dec
daa
mov
or
lcall
int3
sub
adc
mov
mov
int3
lds
cmp
sub
mov
xchg
or
xchg
adc
mov
pusha
addr16
into
xchg
push
enter
cmp
outsb
sarl
pop
ret
out
out
pop
and
loop
imul
push
jle
into
mov
jnp
jecxz
jbe
and
adc
mov
mov
inc
pop
outsl
mov
mov
mov
stos
ret
jne
pop
add
sbb
pushf
int3
out
dec
fildll
mov
jnp
ja
es
das
add
divl
add
jecxz
pop
xorl
fsubs
push
out
mov
adc
mov
jno
add
adc
pop
mov
pop
aas
fcmovu
xchg
adc
ja
xchg
cmp
push
sub
jmp
jle
cmp
or
and
cld
or
ret
das
lds
push
mov
imul
adc
inc
mov
es
aad
inc
push
mov
das
jge
jb
mov
in
gs
jmp
xor
mov
out
insb
sbb
or
js
outsl
jns
stos
mov
ja
je
mov
sahf
mov
les
es
jmp
inc
faddl
inc
sub
ds
pop
cmp
inc
push
inc
cmc
adc
scas
sahf
scas
sub
outsb
aam
pop
lret
xchg
into
cwtl
dec
enter
gs
je
daa
sbb
xchg
dec
jns
or
push
xor
and
pop
aaa
xorb
mov
sub
xchg
fiaddl
std
cmp
das
cmp
push
and
mov
jl
sub
sbb
push
sbb
outsl
imul
jno
sbbl
xchg
cwtl
cmc
iret
push
or
mov
pop
int
adc
pop
xor
subl
xlat
xchg
testb
cld
pop
lret
fwait
jo
pop
inc
inc
sub
dec
outsb
sahf
enter
fidivrs
orl
push
subl
dec
dec
pop
pusha
cmp
pop
xlat
push
lea
sbb
fists
fwait
jp
and
das
mov
nop
orb
aad
fcomps
xchg
mov
sub
jb
outsb
adcb
gs
fbld
cwtl
push
rorb
ret
mov
push
arpl
fdivrl
jo
movsb
mov
sbb
xchg
sbb
add
insb
push
pop
fisubs
adc
clc
sbb
dec
adc
add
out
xchg
sub
pop
push
lahf
aad
jge
lock
mov
pop
pusha
jecxz
jmp
aas
lret
cmpb
jp
pop
mov
pop
jns
mov
jle
cmp
in
in
cmp
ficompl
icebp
mov
jmp
sbb
js
mov
cmp
push
fildll
add
xor
add
xchg
mov
pop
or
loop
cmp
and
xor
inc
fldl
dec
rolb
pop
jae
nop
lret
mov
sub
xchg
jecxz
cltd
sub
cwtl
shl
ja
negl
push
addl
inc
push
add
xchg
add
leave
stos
sbb
or
mov
push
mov
scas
insl
sbb
adc
mov
fldl
dec
mov
repz
movsb
adc
and
clc
ret
sbb
or
fisubrs
pop
xor
inc
imul
sub
addr16
and
xchg
xchg
les
sbb
dec
out
or
sti
stc
fistpl
mov
xor
orl
pop
rcrl
adc
cmp
pop
nop
out
xchg
inc
pushf
dec
xchg
scas
push
filds
das
lods
push
sbb
or
mov
pop
insl
test
jne
dec
push
in
scas
and
sub
fiadds
enter
and
jbe
out
or
movsl
and
retw
pop
shl
push
xchg
insb
stc
and
pop
or
lods
nop
xor
ds
mov
sub
addr16
test
push
lcall
aas
jp
rorl
insb
call
stos
pop
stc
xlat
xor
xor
mov
divl
sub
jb
sub
leave
cmp
imul
mov
xchg
jbe
sub
hlt
jbe
sbb
js
pusha
stos
mov
push
imul
fcoml
leave
mov
in
jno
andb
add
arpl
test
cli
pop
pop
sub
and
imul
cltd
or
fwait
out
cli
sbb
imul
loop
ret
pop
cmp
loope
std
push
jge
adcb
pop
mov
outsb
jl
jno
jp
adcl
sbb
push
pop
jb
aam
in
mov
dec
int
cmc
movsbl
ds
push
mov
cmp
fcomps
dec
insl
add
insl
sarl
ds
mov
lods
or
out
and
data16
jns
imul
sbb
test
jnp
and
jne
mov
add
inc
cmpsb
add
lds
mov
mov
cld
out
sbb
lds
mov
aaa
xchg
jl
test
push
pop
jo
cmp
xor
fdivrp
movl
out
mov
push
inc
inc
mov
jge
sbb
and
inc
js
xchg
incb
loopne
xor
mov
push
cltd
push
cmp
cmp
aaa
fldl
popa
fs
dec
push
into
cwtl
xchg
add
pop
mov
mov
iret
shrl
xchg
pop
or
dec
jne
test
arpl
xor
outsb
adc
dec
xchg
jl
movsb
mov
popa
push
aam
inc
andb
rclb
xchg
pop
addr16
loopne
outsb
mov
mov
das
repz
xor
imul
mov
rclb
cmp
pop
mov
dec
jge
push
ficomps
dec
dec
sbb
add
lock
out
mov
or
xor
in
dec
rorl
pusha
sub
popa
sub
mov
cld
shl
adc
dec
cltd
aaa
xor
sbb
iret
stos
stos
repz
mov
sbb
add
xor
mov
sarl
ret
negl
pop
pop
xchg
mov
out
push
stos
mov
test
sbb
pushf
xlat
imul
repnz
leave
in
loop
add
enter
stos
jo
jae
jp
cmpsb
pop
jno
shr
xchg
ja
movsb
or
ds
in
mov
add
lea
fxch
daa
mov
addl
adc
ret
mov
and
push
push
cld
xor
xchg
jae
and
mov
xor
cld
and
jle
jle
pop
sbb
dec
sbb
add
sahf
sahf
jno
fidivrl
lock
pop
ljmp
push
xchg
xchg
push
and
inc
inc
addr16
lock
mov
cwtl
sbb
adc
mov
inc
xchg
add
out
jb
mov
push
mov
xchg
sbb
push
lock
sbb
sbb
push
ja
cli
outsb
inc
cs
popf
mov
mov
and
ljmp
je
cmp
lods
addr16
sub
movsb
or
adc
jo
or
mov
ja
pop
shl
ljmp
rorb
mov
mov
jg
pop
cs
lcall
mov
mov
fwait
mov
inc
ja
aam
roll
jl
dec
sbb
pop
fstp
mov
clc
fdivrp
cmc
popa
add
clc
pop
adc
out
mov
in
test
test
aad
ror
push
stc
jb
test
adc
add
push
mov
xor
in
das
mov
cmp
lret
fwait
mov
adc
pop
jno
add
inc
das
fbstp
sub
popa
push
and
sti
fiadds
inc
xchg
daa
pop
cld
out
popf
je
push
hlt
mov
pop
xor
pop
rep
test
test
cs
and
add
jle
add
inc
pop
jno
leave
popa
push
or
jb
jbe
shrl
pushf
ljmp
xchg
enter
pop
fisttps
cmc
xor
jmp
mov
mov
arpl
je
out
rcl
mov
aad
sub
push
subb
test
lods
pop
pushf
movsb
shlb
inc
jo
les
push
imul
mov
xor
cmp
add
mov
cwtl
push
cld
or
mov
sbb
insl
dec
in
inc
ret
cmpsl
jmp
push
jle
jecxz
push
xchg
std
sub
sbb
inc
lcall
jbe
cmc
ffree
sub
dec
lods
nop
xchg
dec
icebp
insl
push
sbb
push
or
mov
sub
incl
xor
pop
jns
dec
jb
cli
add
mov
push
sar
sbb
out
cmp
iret
xchg
lret
add
and
xor
shlb
dec
add
adc
push
cmp
fimuls
popa
pop
sub
sbb
aas
and
push
mov
push
cmp
pop
in
pop
stos
clc
mov
push
out
jne
adc
add
in
xlat
add
cmpsl
push
push
int3
mov
pop
push
lods
cmc
addr16
pop
outsb
les
sub
hlt
sbb
push
int
jnp
dec
mov
pop
dec
imul
pop
popf
je
imul
mov
aaa
cli
arpl
and
xor
or
ficompl
mov
push
pop
test
cmc
cs
push
mov
and
rcll
pusha
fistpl
push
ss
imul
ja
incl
add
arpl
mov
xchg
xor
xor
stc
lahf
jb
cmp
sbb
push
dec
push
popa
jo
dec
mulb
pop
xor
xor
aam
jp
cld
inc
inc
pop
inc
pushf
mov
xor
aam
lods
mov
add
jnp
mov
out
gs
mov
ljmp
lods
add
jns
cld
mov
jle
pop
lock
popf
ss
mov
mov
out
mov
aaa
nop
in
enter
idiv
loope
ss
outsb
sub
sub
cmp
pop
cmp
sbb
stc
push
pushf
dec
mull
jecxz
jae
cld
push
filds
xor
movsl
jnp
push
lahf
scas
icebp
cltd
lret
xchg
cmp
leave
out
xor
pop
in
icebp
cld
jnp
movsl
pusha
xor
inc
lods
push
out
jae
arpl
pop
fildl
push
shrb
or
or
xchg
outsb
adcb
xor
test
stos
int3
lock
mov
xor
pop
jecxz
jge
jecxz
or
cmp
insl
sbbl
push
stos
jmp
push
push
xchg
out
add
cli
mov
xor
inc
dec
pusha
sti
push
xorb
xchg
fwait
mov
mov
sub
dec
cs
iret
pop
orb
fidivs
pop
adc
enter
rep
cwtl
loope
add
fs
cmp
aam
push
sbb
dec
insl
stc
inc
into
test
pop
cmp
test
push
movsb
rclb
aam
out
icebp
dec
clc
jo
sbb
inc
and
ss
fnstenv
xchg
push
sub
xchg
add
arpl
mov
movsb
subb
sub
xorb
insb
stc
sbbl
pop
and
cmp
mov
push
push
push
sbb
xor
das
sub
das
scas
cwtl
mov
vmovmskps
enter
repnz
bound
mov
xchg
ss
mov
xor
les
test
mov
jmp
xchg
inc
push
imul
ds
and
fistps
cmp
stc
stos
movsl
mov
xchg
jl
lock
dec
jle
fwait
or
push
cmp
pop
jmp
sub
daa
dec
fiaddl
fisubrl
in
mov
pop
xchg
lahf
ret
dec
sub
pop
inc
push
test
push
in
cs
jns
int3
in
jg
push
cld
repnz
stc
nop
and
inc
pop
and
sub
and
int3
xchg
ror
xchg
imul
jno
fsubs
push
test
in
int3
mov
jg
and
es
imul
push
and
xor
sarl
popl
mov
push
aam
and
scas
stos
scas
pusha
mov
outsb
dec
xor
mov
push
push
stos
dec
in
dec
lret
lret
notb
out
dec
cld
pop
and
mov
sub
sbb
out
repnz
mov
clc
stc
push
dec
and
dec
push
pop
daa
js
mov
sbb
stos
lret
pop
fstpt
test
adc
flds
fsubrs
icebp
jns
sub
mov
addr16
test
test
mov
xlat
cmp
cmp
fldl
pushf
mov
push
mov
add
rcr
pushl
sub
pop
or
mov
lods
xchg
movsl
and
sbb
in
imul
cmp
movsl
pop
ret
pop
xchg
js
out
in
lock
mov
push
push
loop
xor
xor
jno
push
sbb
or
adc
test
sbb
jno
jnp
cmp
dec
and
inc
sub
mov
psubd
mov
pop
add
cs
and
xor
sbb
stc
mov
pop
rcrb
mov
and
push
mov
inc
fwait
insl
jg
xor
popa
movsb
out
xchg
inc
lods
jmp
mov
call
jno
aam
jne
inc
adc
lds
or
push
dec
xor
mov
cmpsb
cltd
shl
incb
jmp
out
mov
fdivrl
pusha
out
fs
clc
stc
xor
fidivrs
stos
adc
cwtl
sub
out
jo
mov
mov
cmp
or
test
jo
int
les
xchg
in
jle
add
dec
fimull
mov
and
push
sbb
lock
ss
mov
xor
jmp
push
push
cli
adc
movsb
ficompl
ret
aad
xor
or
xchg
insl
test
mov
je
cld
adc
sbb
or
sub
xchg
in
mov
sub
sti
popa
ds
adc
xchg
mov
outsb
add
dec
fbld
lea
aaa
mull
shlb
push
insl
pop
stc
jl
inc
mov
sub
scas
jl
adc
inc
jmp
xlat
mov
dec
push
ja
in
inc
jno
sub
and
cmp
dec
cmc
jbe
pop
inc
mov
sub
jmp
mov
sub
repz
popl
adc
xchg
push
ja
sub
or
sbb
inc
stos
adc
pop
les
mov
mov
out
mov
inc
adc
sub
inc
xor
aaa
iret
mov
icebp
cld
mov
mov
subl
sbb
scas
xorl
loope
ret
jno
dec
jl
fiaddl
pop
mov
add
loopne
repnz
call
das
cmpsb
xchg
arpl
and
aas
mov
or
jno
mov
lahf
loopne
mov
icebp
sbb
shll
jmp
mov
das
sub
xchg
popa
mov
int3
ret
bound
testb
in
mov
jb
mov
ljmp
outsb
xor
stos
cmpsl
mov
cmp
pushf
and
outsb
stos
push
jg
popf
repz
xchg
pusha
mov
out
add
push
cltd
jle
leave
fstpt
ss
aas
jmp
pop
clc
jp
out
out
adcb
loope
stc
jo
lret
aam
xchg
cmp
test
aad
fnstcw
dec
sbb
into
mov
rorb
mov
mov
je
xchg
arpl
mov
in
pusha
pop
out
jbe
pusha
xchg
jne
test
jg
adc
add
cmp
je
insl
mov
xchg
sub
outsl
aas
jnp
push
and
fwait
mov
pop
cltd
adc
rsm
mov
inc
add
aaa
out
dec
mov
lea
addl
aas
fst
cltd
repz
pushl
leave
cld
test
dec
or
jnp
inc
sbb
lcall
ret
outsb
pushf
push
mov
push
adc
mov
imul
repz
or
aad
cmp
pop
cmpsl
add
jno
push
ds
inc
lods
sahf
adc
mov
ljmp
or
jl
xor
aad
shll
leave
stos
adc
ror
adc
addr16
lods
cmp
icebp
popf
les
adc
clc
jmp
fcom
movsb
mov
es
aam
enter
imul
sbb
sbb
push
jbe
aas
jmp
test
movsl
cmc
push
hlt
arpl
mov
sarb
mov
pop
xchg
lock
mov
dec
int
data16
inc
mov
test
arpl
pop
mov
xchg
rcr
rcr
inc
fistpll
sub
push
ret
push
mov
pop
hlt
lods
ret
jne
push
sahf
mov
sti
push
sub
loop
enter
js
sti
movsl
jne
repnz
cmc
mov
xchg
xor
cltd
adc
loop
sub
mov
or
and
mull
jge
movsl
pop
lds
mov
inc
cli
jmp
sub
addr16
loop
bound
inc
fstl
sub
out
std
lods
mov
dec
xchg
loope
movsl
and
inc
and
and
sub
xchg
add
mov
nop
fiadds
insl
movsb
xchg
or
sbb
lock
add
fdivrp
les
stos
enter
fcoms
sub
add
sbbl
cmpsb
icebp
dec
popf
aaa
std
mov
subb
movsl
pushf
stc
fimuls
cmp
mov
frstor
xlat
mov
sarl
pushf
cmp
sub
jno
hlt
iret
and
add
jbe
push
push
jecxz
aam
push
in
cmpsl
in
mov
imul
pop
arpl
inc
mov
xor
out
lods
inc
cld
adc
int
fcmovne
sub
or
jns
rorl
sbbl
lea
lahf
mov
push
xor
mov
test
xorb
arpl
adc
inc
test
xchg
xchg
dec
pop
jg
imul
hlt
xor
xchg
pop
or
cmp
xor
arpl
shrl
mov
icebp
push
and
add
rcl
xor
cltd
inc
and
fisubs
inc
jns
sarb
pop
nop
sub
fldl2t
and
push
xor
pop
xor
out
enter
dec
jg
sbb
fstp
scas
xchg
cltd
ja
test
dec
mov
and
out
xlat
in
aaa
int
jp
jae
mov
jg
mov
cld
out
mov
pop
inc
out
scas
push
mov
pop
mov
incb
fs
pusha
xchg
in
xor
and
js
nop
xor
imul
mov
mov
mov
xchg
jns
in
xchg
arpl
iret
aad
push
rcl
inc
cmp
inc
sbb
cmp
lds
xor
push
test
ret
mov
lea
repz
aad
fnstcw
add
dec
movsb
xchg
pop
stc
pop
fildll
int
adc
xor
pusha
fmuls
push
push
adc
pop
dec
cmpsb
xchg
pop
push
mov
jg
nop
imul
xor
inc
bound
mov
jns
pop
xchg
xchg
sub
test
or
jns
pop
add
and
cltd
jle
add
ret
daa
cli
rcll
xchg
enter
sbb
sub
daa
rcrl
inc
mov
std
push
push
jne
jecxz
inc
ss
cmp
mov
pop
push
xchg
adc
xchg
hlt
xor
movsb
xchg
mov
fs
xchg
divl
es
fmull
mov
mov
in
add
or
xlat
mov
pop
cwtl
mov
or
in
push
loope
push
nop
test
push
jno
outsb
imull
mov
in
arpl
shlb
roll
nop
and
lock
xor
cmp
out
inc
rcrl
in
cmp
ret
push
jge
in
data16
icebp
ja
jae
lods
xchg
mov
jmp
jmp
or
push
popa
jnp
clc
subl
sbb
jp
mov
mov
insb
jge
xor
cs
fstpl
adc
push
ja
in
jg
imul
mov
pop
int
adc
shll
fs
xchg
add
push
lea
popf
inc
adc
mov
ret
fists
push
ljmp
aaa
rolb
mov
pop
pushf
dec
add
jo
into
cmp
add
mov
xor
mov
push
int3
lds
jge
fisubs
push
xchg
inc
dec
and
lea
out
jp
insb
mov
add
sub
aaa
fs
stc
mov
std
xchg
xchg
loopne
data16
sub
adc
adc
fisubl
pop
outsl
pslld
popf
and
scas
cltd
add
mov
cld
dec
push
das
nop
mov
into
cmp
pushf
bound
ja
add
cmp
and
inc
insb
jnp
add
pop
xor
dec
or
xchg
dec
pushf
or
inc
nop
insb
leave
es
push
leave
outsb
mov
cmp
test
pop
repz
sub
pop
or
imul
lea
fiadds
dec
outsb
push
in
add
xchg
pop
sbb
inc
mov
mov
movsl
push
jne
pop
out
loopne
stos
pop
or
mov
xchg
sub
mov
test
loope
dec
sub
das
ret
pop
xchg
xchg
into
push
stos
aas
sbb
add
loopne
loopne
push
cmpl
and
ret
inc
mov
pop
sbbb
mov
mov
inc
arpl
int
add
std
jg
test
sti
dec
add
gs
xchg
push
fidivrl
jns
push
scas
into
adc
push
xchg
adc
sub
dec
and
or
jnp
pop
pop
mov
pushf
adc
outsl
push
push
das
pushl
cmpsb
dec
fcompl
and
sbb
xchg
adc
push
jge
xor
pop
adc
xchg
or
ss
pop
push
mov
dec
lret
xor
test
xor
dec
and
test
in
lret
inc
xor
pop
jbe
xchg
push
stos
mov
scas
stos
bound
push
repnz
das
adc
mov
movb
cmp
xor
mov
cmp
push
fstps
sub
mov
in
jo
inc
mov
clc
fs
xchg
pop
je
sbb
dec
mov
stos
scas
jne
cli
pop
rep
lods
mov
sbb
xor
cmp
rclb
pop
jns
push
sti
jno
inc
jb
add
push
sarb
lret
in
lahf
mov
scas
pop
es
in
inc
dec
out
cmp
sbb
inc
rclb
ss
or
ja
movsl
inc
pushf
insb
pop
or
scas
cld
mov
push
lods
fsubs
xchg
sub
sub
cmpsb
in
or
loop
or
sbb
test
pop
mov
jge
sbbl
sbb
movsb
lret
jnp
jl
in
scas
adc
dec
add
mov
cmpsb
incb
std
push
mov
stos
clc
jne
stos
cltd
stos
adc
outsl
movsb
mov
movsl
aad
rep
mov
push
stos
sbb
mov
in
cmp
outsb
cmpsl
pop
aad
fmull
xchg
and
sbb
sti
stc
xor
mov
das
mov
test
jecxz
or
jnp
add
sub
mov
mov
and
mov
inc
clc
pusha
fbld
mov
add
sub
mov
dec
add
scas
mov
lea
sbb
xchg
aaa
push
add
ljmp
ss
in
cmpsb
xor
fists
xor
ficoms
mov
fsubrs
cmpl
aas
les
add
cmp
dec
lock
addl
mov
mov
add
out
mov
fwait
mov
arpl
pop
fs
jae
push
and
outsl
movl
lods
fbstp
pop
cs
jne
lahf
inc
outsl
inc
stc
mov
cmp
fucomi
sub
cld
dec
xor
bound
std
into
mov
pop
ss
adc
lds
adcb
add
or
mov
daa
jno
pop
xchg
loop
into
cltd
out
cmp
jl
push
push
shll
hlt
cli
xor
fs
push
insl
pop
push
mov
sub
ret
jge
mov
int3
push
pop
push
scas
push
or
insl
mov
mov
sub
stc
push
mov
jbe
outsl
xchg
scas
push
fimull
dec
pop
into
jg
xchg
scas
dec
in
daa
xor
arpl
mov
jns
dec
std
mov
inc
adc
testb
aad
sbb
out
into
in
out
rcll
gs
fcomps
loope
pushf
mov
lcall
imul
xor
cli
sbb
cs
fs
divb
jno
pop
fistpll
jns
ret
pop
cld
mov
mov
rorb
mov
incb
push
icebp
xor
cltd
pop
xor
mov
call
and
lret
fwait
and
sbb
sub
mov
xchg
lods
repnz
mov
sarl
jg
push
mov
sub
pusha
cld
push
movsl
sub
int3
test
in
fbstp
je
sbb
xchg
insl
movd
out
aas
movsl
mov
mov
sub
das
leave
fdivr
in
iret
cmp
cwtl
out
push
or
call
test
sub
inc
inc
popa
pop
in
sarl
dec
in
sahf
and
mov
jo
sub
std
loopne
mov
xchg
in
pop
cmpsl
cwtl
push
mov
into
or
push
lods
xlat
sbb
jl
ljmp
mov
test
popw
cltd
and
push
and
mov
stos
lock
or
mov
cwtl
imul
cld
mov
icebp
popa
pop
jl
and
jp
jo
and
imul
sbb
ds
cmp
ret
sub
mov
inc
add
dec
dec
pop
out
mov
lret
sub
fwait
inc
or
mov
xchg
lret
mov
pop
fwait
insl
insl
or
dec
rorl
cmc
out
decl
int
mov
lock
jecxz
ret
sub
pop
loope
mov
add
ret
in
bound
cmp
in
or
arpl
push
pop
testl
mov
and
outsb
insb
mov
mov
lea
into
jle
mov
sbb
fs
movsl
mov
popa
lret
add
movsb
mov
xchg
xor
and
popa
inc
push
mov
test
pusha
iret
movsb
mov
call
xchg
or
imul
lods
mov
lods
dec
jp
mov
ds
roll
out
adc
int3
push
mov
lods
cmp
fiadds
outsb
out
in
movsb
lods
je
inc
into
add
lret
lahf
mov
mov
out
mov
push
cmc
rorl
bound
mov
mov
adc
insl
lahf
aas
mov
pop
dec
mov
incb
inc
daa
cwtl
in
fs
dec
paddsw
loopne
pop
fwait
xor
int3
add
sub
sahf
aaa
mov
popf
nop
ljmp
nopl
push
cmp
mov
and
cmp
xor
int3
bound
mov
enter
cmpsb
fldcw
movups
cmp
dec
or
ret
lret
enter
inc
js
mov
mov
paddsw
cltd
out
mov
mov
push
jmp
mov
mov
mov
in
subl
imul
fstpt
xor
arpl
sbb
iret
cmp
xor
ret
mov
sub
or
stos
fimuls
mov
dec
pop
int
shll
in
mov
jecxz
sbb
xor
in
adc
sub
mov
mov
sub
add
jno
mov
mov
fimull
sub
jb
jg
mov
lock
or
xor
loopne
call
mov
in
das
mov
mov
int3
outsl
adc
cmp
pop
push
jbe
push
dec
imul
pop
adc
mov
xchg
data16
stos
push
inc
cmpsl
mov
sbb
mov
or
jp
lea
add
inc
and
fistl
sub
insb
clc
ffree
push
push
jmp
loope
ljmp
inc
mov
cmp
sahf
mov
add
stos
mov
in
das
push
jmp
sub
mov
pushf
arpl
pop
cmp
xchg
lods
in
inc
ja
mov
dec
sbb
push
shll
push
bound
fsub
lea
jne
mov
cli
xor
inc
jl
aaa
dec
popl
movsb
xchg
loop
or
or
hlt
push
nop
rcr
out
cli
ja
iret
shll
sti
movsb
jp
icebp
dec
out
out
int
xchg
dec
mov
mov
jp
call
hlt
jecxz
inc
andl
push
mov
aas
pop
push
mov
pop
xchg
xchg
ret
out
add
jp
fmull
lea
pop
shll
aas
pop
test
lock
inc
pop
sbb
or
ljmp
pop
inc
scas
jne
popf
and
call
lods
rclb
mov
das
ds
fs
push
les
cltd
cmp
and
push
test
jae
and
divb
shl
add
rolb
ja
in
cmpl
sub
pop
xchg
sub
push
sbb
sub
insl
in
push
pop
xor
pop
lods
fs
inc
scas
ja
and
es
and
and
faddl
or
stc
cmp
or
psubw
lods
fwait
xchg
out
sti
pop
push
repnz
movsl
add
pop
mov
sti
jecxz
push
jbe
pop
mov
or
cld
dec
push
push
mov
mov
movsb
mov
mov
les
push
dec
or
sbb
mov
adc
cmpsl
sbb
mov
lret
stos
mov
movsl
fwait
addl
xchg
push
loope
iret
push
lret
mov
or
out
xchg
dec
lds
sar
icebp
push
in
inc
idivl
icebp
xchg
add
lahf
js
pop
call
adc
sub
dec
sub
mov
icebp
add
fs
add
push
cmc
out
sub
idivl
pop
arpl
in
jo
loop
adc
dec
insl
lods
add
or
clc
call
lea
sbb
sbb
cmp
sub
lock
add
dec
repnz
imul
iret
xchg
aas
test
push
or
je
adc
fmull
dec
add
jle
icebp
sub
sbb
dec
mov
sbb
lcall
aas
addb
mov
cmp
test
stc
addr16
in
mov
push
int
xchg
andl
int3
bound
aam
rcrl
arpl
imul
subl
jg
hlt
lcall
dec
adc
lds
fdivs
cmp
sub
in
shrb
sbb
aaa
adc
adc
loope
aam
push
loope
insl
divb
dec
dec
sar
push
hlt
pop
test
out
aad
and
inc
mov
adc
or
push
mov
pop
adc
xchg
jl
ja
or
dec
negl
xchg
sar
cli
xchg
mov
cmc
mov
cmp
sub
cmp
add
pusha
cmp
test
rcrb
add
in
fisubl
cmp
movb
and
daa
mov
or
or
pop
scas
divl
mov
inc
jl
outsl
repz
ret
out
jl
pop
pop
adc
and
adc
out
mov
jno
repz
cmp
cmp
test
jp
das
dec
cmp
lods
out
jle
lods
sbb
mov
or
ljmp
add
fisubs
sub
and
mov
daa
scas
call
jl
cvtpi2ps
int
scas
or
hlt
mov
in
pop
push
ds
pop
fiadds
dec
sbb
push
jae
in
adc
mov
and
adc
roll
dec
jge
mov
adc
or
loop
push
pop
mov
lret
sub
sub
cmp
rcl
dec
xor
or
add
cmpsb
mov
gs
int
add
cmc
or
mov
xchg
imul
jo
test
nop
cmc
sbb
and
fldcw
cmpsb
ja
or
xor
in
test
add
mov
sbb
setns
rclb
xchg
fbstp
int
loop
jnp
nop
fdiv
movl
lods
cmp
cltd
mov
mov
jne
data16
cmp
call
repnz
jp
mov
jmp
inc
push
test
inc
int3
popf
ficompl
incb
add
xor
bound
fldl
imul
jge
popf
or
bswap
ss
add
xchg
xor
addr16
push
mov
or
lahf
xchg
lret
inc
mov
xor
pop
or
scas
mov
lods
mov
popa
shl
and
xchg
pop
dec
clc
adc
and
jns
mov
sarb
adc
mov
dec
push
push
test
test
aam
ret
adc
mov
test
cmpsl
and
mov
sbb
adc
call
mov
cmp
stc
jne
cmpsl
jmp
test
rcrl
add
lods
pushf
jne
and
fidivrs
xor
dec
or
jge
pop
addb
fs
outsl
loop
enter
loopne
mov
stc
or
int3
pushf
scas
das
add
int3
sahf
jecxz
imul
push
lock
jns
outsb
mov
dec
add
imul
adc
mov
out
sbb
jns
lret
cmpl
inc
fucomp
push
ret
je
xchg
neg
xor
mov
fsubs
mov
icebp
hlt
jle
imul
cmp
lods
jmp
mov
xchg
add
daa
cmp
aas
sub
mov
mov
fstpl
mov
std
lock
out
jle
pusha
mov
xor
pop
aaa
scas
lea
loope
push
lret
push
cli
dec
dec
mov
ret
sub
loopne
ljmp
cltd
arpl
lock
push
repz
mov
cmp
sbb
cwtl
lock
adc
mov
cs
shlb
std
dec
adc
bound
pop
lds
jle
inc
movsb
add
pushf
hlt
je
adc
jnp
add
testl
xor
lds
nop
cmp
adc
adc
mov
inc
sub
pop
into
mov
aad
jno
inc
jge
jge
mov
ret
loop
dec
push
jmp
xor
loope
jp
popa
rclb
and
cld
mov
sbb
jmp
fnstenv
fnstenv
and
push
inc
leave
push
mov
fs
adc
lods
scas
push
adc
call
push
jge
ljmp
das
sbb
das
popf
ficompl
push
aas
les
negl
test
mov
rol
xchg
scas
sbb
out
cmp
daa
mov
lahf
mov
icebp
push
add
js
dec
bound
xchg
aas
adc
inc
int
andb
mov
or
or
fiaddl
push
adc
insb
adc
aam
add
aaa
inc
mov
inc
mov
das
cmp
subb
adc
or
vsubps
iret
push
push
enter
idiv
inc
jbe
seto
xor
and
and
inc
xchg
subl
clc
jae
push
cmp
test
out
pop
nop
add
push
test
dec
cmp
inc
inc
fcoml
mov
mov
mull
xchg
lahf
and
pop
fistpll
pop
cmp
dec
adc
add
cmp
inc
jno
pop
lods
and
and
pop
adc
popf
sbb
adc
es
sti
sbb
sub
pop
xchg
rorb
xchg
sbb
sub
adc
cmp
pop
sbb
jge
xor
pop
repnz
int3
adc
adc
push
inc
mov
adc
jl
notb
push
and
ja
subl
cmc
in
and
xor
jge
push
pop
mov
es
test
adc
and
scas
inc
pop
sbb
add
lcall
stc
mov
inc
nop
stc
add
lds
or
and
mov
cwtl
adc
in
inc
cmpsl
dec
mov
mov
lahf
mov
mov
je
jl
insl
xor
or
jg
js
addb
es
pop
mov
dec
mov
aas
push
mov
push
jl
dec
cmp
stc
pop
mov
outsl
xchg
shlb
lret
xor
pop
mov
mov
pop
call
sahf
mov
loop
push
push
gs
dec
insb
mov
xchg
dec
mov
fcmovne
sbb
cs
jo
jle
dec
xchg
mov
mov
stos
add
out
mov
cmc
icebp
dec
out
pop
sub
jne
std
add
cwtl
cld
ror
mov
and
jno
cmp
mov
jno
mov
imul
inc
jns
stc
clc
hlt
xchg
add
test
lea
jmp
push
pop
ds
stos
shl
and
xchg
inc
nop
inc
sub
mov
mov
popf
inc
sbb
and
bound
stos
nop
clc
insl
mov
test
stc
out
rcl
push
xchg
dec
mov
pop
inc
jmp
sti
push
inc
dec
or
sbb
inc
rclb
ret
push
inc
test
imul
in
mov
shl
sti
cmp
sbb
add
cmc
push
mov
mov
mov
leave
or
mov
lret
pop
push
ret
lds
lds
fidivrl
popl
aaa
jecxz
mov
mov
jmp
test
dec
sub
and
not
add
inc
lret
jl
push
or
xchg
test
cmpsl
mov
inc
in
ja
daa
jmp
push
sbb
jmp
mov
je
ret
cs
leave
int3
movsb
push
inc
inc
dec
cmpsb
sub
or
shlb
jge
daa
mov
lock
sbb
addl
ljmp
iret
das
insl
les
adc
inc
mov
push
into
dec
jecxz
cmc
push
push
sub
lret
fstl
lds
inc
adc
push
iret
ret
or
adc
stos
sbb
ljmp
mov
pop
sbb
es
adc
adc
sahf
mov
xsave
adc
rcll
scas
shlb
xchg
inc
pop
loop
fldenv
test
xor
cmp
xor
push
mov
pop
push
test
or
mov
arpl
push
xlat
pop
lcall
filds
divl
xchg
pushf
dec
data16
iret
add
inc
cmpsb
xchg
mov
paddsb
outsl
push
pop
xor
orl
test
icebp
out
ss
add
hlt
mov
or
out
cli
hlt
push
and
jmp
and
sub
stc
roll
xchg
ja
aam
cmove
jecxz
nop
leave
cmp
in
mov
call
inc
nop
out
jne
popf
push
mov
sub
lret
xor
adc
enter
lds
hlt
fwait
shll
mov
inc
mov
push
enter
dec
roll
sarb
fbstp
mov
jo
push
mul
imul
dec
dec
push
and
inc
mov
mov
jno
lods
test
aam
bound
or
lods
pop
dec
ret
push
mov
pop
ret
push
and
jo
inc
bound
mov
dec
pop
shlb
outsb
mov
sbb
xor
lahf
or
inc
pop
in
popa
add
aam
push
test
mov
xlat
int
daa
cmp
xor
sub
lret
fwait
scas
inc
mov
inc
stc
and
pop
xchg
cmp
call
adc
sahf
divl
dec
rorb
arpl
icebp
call
shrb
mov
cld
out
dec
pusha
cltd
or
insb
mov
xchg
fdivr
cmc
andl
inc
xor
mov
test
outsl
fwait
xchg
pop
add
hlt
and
gs
xchg
gs
xchg
cld
outsl
xor
ds
pop
stos
mov
dec
pushf
add
push
pop
adc
adc
mov
mov
in
mov
gs
fcmovnbe
shlb
dec
push
fs
mov
pop
pop
inc
mov
mov
test
mov
cmpsl
pop
imul
repnz
les
outsl
stc
or
in
ja
jo
lahf
outsl
aad
jl
mov
mov
jle
mov
jl
call
fs
bound
movsb
lret
es
imul
push
xchg
gs
add
dec
sub
daa
sti
push
mov
in
pop
sub
ret
mov
mov
call
cmp
or
mov
fcomps
and
out
sub
test
mov
or
sub
sub
push
cmp
or
jnp
cmpsb
ljmp
pusha
pop
inc
add
mov
shll
arpl
mov
rcrl
bnd
mov
cwtl
jecxz
adc
xchg
stc
add
jle
cmpsl
hlt
jmp
movsb
xchg
loopne
imul
xchg
shl
and
stos
or
idiv
add
mov
into
push
adc
dec
mov
cmp
push
stos
sbb
mov
test
xchg
sbbb
psrld
shl
imul
lea
adc
jb
sbb
ret
roll
imul
lods
les
ds
sbb
mov
pop
jns
xchg
dec
and
dec
pop
sbb
push
push
cmpsb
xchg
ret
mov
cmpsb
push
pavgb
hlt
lahf
pop
fists
xchg
sahf
cmp
adc
adc
mov
pop
sub
insb
adc
dec
inc
inc
pushf
mov
sub
push
fidivrs
aaa
dec
mov
pop
pop
repz
pop
lods
mov
push
aad
push
xchg
gs
xchg
xchg
mov
andb
xchg
scas
push
pushf
sti
je
sbb
in
xchg
out
cmc
mov
xchg
jo
in
lret
pop
cvtps2pi
inc
lock
outsl
xchg
rorb
push
inc
in
sbb
xchg
xor
xchg
xchg
sbb
xchg
stos
fldenv
lret
mov
mov
fnstcw
rcll
pop
test
ljmp
mov
lahf
test
into
push
dec
add
sub
or
les
fdivs
in
repz
loop
loope
bound
lidtl
or
or
xor
mov
scas
outsl
adc
push
je
jl
jnp
out
adc
sarb
inc
or
add
cmpsl
sub
stos
xchg
cmpsb
mov
lcall
and
std
xor
stos
mov
inc
pop
jge
popf
out
cmc
cltd
jae
jg
fildl
mov
cmpsb
xor
sub
daa
nop
mov
mov
fstpl
jno
mov
lds
jge
nop
lahf
push
insb
mov
cs
xchg
testl
in
ficoml
push
sub
sbb
mov
add
cs
mov
pop
or
ds
xor
cli
sarb
in
into
dec
je
scas
out
or
orb
lcall
or
leave
jno
xchg
cld
leave
insb
lods
jp
in
test
dec
and
mov
mov
push
adc
lret
aas
daa
cmp
outsb
cwtl
in
mov
mov
fidivs
jno
adc
cmp
lahf
movsb
mov
or
call
mov
and
xor
test
das
and
ljmp
les
push
imul
mov
mov
lods
aad
pop
ljmp
mov
push
push
and
stos
std
lret
adc
stc
outsl
repz
ss
repnz
lock
dec
cmc
mov
addr16
dec
inc
jl
je
mov
adc
cld
mov
push
push
fstpl
pop
mov
scas
test
lods
test
mov
test
xchg
xchg
or
and
cmpsl
shl
push
jo
xor
jecxz
bnd
cwtl
jp
push
lret
mov
mov
sbb
es
test
rcrl
insl
add
call
loope
mov
xor
stos
rcll
and
xchg
lea
testl
mov
icebp
js
lret
mov
mov
lret
mov
jmp
cmp
push
add
call
push
movsb
lret
addb
popf
adc
iret
bound
mov
mov
jecxz
cltd
lock
call
shrl
push
sbb
loop
push
push
and
add
jo
xchg
mov
mov
sbb
icebp
lcall
outsb
repnz
sbb
mov
cmp
inc
jp
int3
data16
or
sbb
or
push
jge
scas
lods
mov
mov
sahf
pop
enter
push
enter
outsb
push
mov
mov
cmp
adc
andb
cmp
jo
aad
mov
repnz
xchg
stos
cmc
cli
gs
fwait
mov
jb
adc
inc
outsb
push
ffree
dec
jge
in
inc
mov
xchg
pop
xor
out
std
nop
test
or
or
mov
push
jns
addr16
inc
movsl
in
pop
ds
dec
xlat
lods
mov
imul
repnz
cltd
jge
or
lret
repz
movsl
es
iret
cs
push
test
jge
idiv
ret
sub
ja
add
mov
lret
mov
mov
dec
add
es
push
cmpb
jns
or
aad
jle
push
adc
and
push
jnp
leave
inc
inc
scas
popf
mov
shll
dec
call
popa
mov
scas
sbb
xchg
xor
insl
jg
xor
lcall
fcoml
mov
xchg
dec
fucomip
in
mov
add
jbe
xlat
dec
mov
repz
xor
pushf
adcl
sbb
bound
jae
inc
xchg
or
in
loop
insb
lock
push
add
jb
shl
push
addr16
cmp
rcll
mov
inc
mov
push
add
xor
imul
inc
idivb
out
mov
pop
jo
adc
sbb
push
pop
int3
mov
jmp
inc
in
pop
fucomp
cltd
js
outsb
inc
xchg
imul
test
cmp
xchg
adc
inc
mov
pop
pop
out
mov
pushf
stc
xchg
cmp
or
cwtl
sbb
adc
mov
sub
mov
cld
jnp
fdiv
xchg
jle
enter
daa
adc
inc
xor
dec
mov
jle
mov
add
jb
rcrb
leave
sbb
xchg
mov
lret
fisubrl
icebp
lock
ret
jo
arpl
mov
dec
xchg
dec
sti
dec
inc
arpl
jge
jg
add
rcr
mov
jno
pop
pop
sbb
inc
sub
pop
sarl
and
sub
pop
cltd
adc
lret
lret
cmp
cmpsb
test
jmp
and
inc
sbb
ljmp
sbb
icebp
dec
arpl
sarl
xchg
mov
fwait
js
sub
add
stos
pop
pop
mov
mov
lods
mov
cli
cmp
fadd
mov
add
push
push
shlb
jg
divl
icebp
cmc
dec
out
mov
mov
dec
into
mov
and
push
xchg
mov
test
adc
lahf
cmpsl
inc
ljmp
sahf
and
mov
fcomps
call
rcr
testb
bnd
xchg
jl
cmp
cmp
push
repnz
mov
lds
xlat
cmp
inc
js
pop
ret
push
test
movsb
or
shrl
orl
add
inc
cmpb
add
mov
je
subl
out
ljmp
and
sub
xlat
pop
sbb
inc
shll
je
dec
arpl
inc
cmp
jge
aam
add
sbb
dec
mov
xor
inc
cmpb
pusha
push
pop
mov
fbld
ljmp
sbb
pop
sub
mov
dec
lea
movsl
and
das
loope
insb
pop
jecxz
pop
jno
mov
add
dec
sarb
and
jle
loope
cmpsw
movsb
adc
jg
fnstenv
lods
mov
out
jecxz
cmpsb
inc
fs
cmpsb
insb
test
lcall
sbb
leave
stc
dec
sbb
cld
stos
pusha
add
shll
sti
add
pop
jmp
loop
mov
les
push
dec
std
fisubl
bound
enter
mov
pop
aaa
sbb
cmp
push
cmc
out
loopne
lret
adc
xchg
cltd
mov
lret
xchg
push
pop
js
rorb
cmp
jle
jno
ffreep
gs
sti
add
sar
mov
cmp
fiaddl
fstps
and
inc
std
cltd
aaa
data16
xchg
xchg
shll
cmp
mov
add
inc
lcall
and
sarl
or
sahf
lret
fisubrs
mov
icebp
popa
jle
dec
inc
dec
adc
rclb
and
xchg
imul
ja
lods
jmp
dec
or
mov
mov
sub
divb
inc
test
das
add
inc
loope
orb
enter
leave
icebp
in
inc
and
mov
clc
in
and
loopne
incl
loope
jl
dec
add
xchg
adc
push
addl
ror
enter
push
mov
iret
popf
xor
xor
mov
jmp
std
cmpl
call
lods
addb
cmp
cmpsb
pop
and
in
pop
call
cmpsb
pusha
stos
mov
sti
ss
adc
dec
ss
add
aaa
jns
sub
mov
aam
jne
loop
out
int
lock
jbe
cmp
notb
inc
inc
loope
loop
inc
and
loop
cmp
fimull
popa
xor
les
mov
repnz
adc
add
fdiv
cld
dec
addr16
jne
movsl
xlat
mov
mov
and
shlb
jg
imul
and
pop
aam
sub
mov
push
xchg
xchg
jne
fcoms
outsl
ja
daa
lds
mov
fwait
mov
fmuls
xchg
nopl
or
fcoms
enterw
inc
add
insl
in
scas
mov
sub
ja
dec
ret
mov
dec
inc
dec
sarb
or
jbe
xor
xchg
repnz
adcl
inc
and
gs
addr16
push
sbb
or
and
push
or
mov
test
or
sub
xor
subb
inc
scas
mov
adc
lods
nopl
mov
or
jl
mov
lds
adc
mov
and
adc
jne
stos
push
or
mov
and
jns
xor
mov
lret
add
sbb
sub
addb
icebp
aam
xchg
sti
and
dec
iret
jp
xchg
pop
xorl
sub
xchg
lds
push
push
mov
xchg
mov
mov
scas
je
sbb
push
lret
lods
fdivp
je
xor
aas
mov
cmp
pop
mull
and
add
scas
mov
in
push
cmp
cld
enter
and
test
icebp
add
hlt
iret
xchg
and
sub
data16
sub
cmp
pop
pop
xor
push
mov
in
pushf
sbb
pushf
movsb
inc
rcr
mov
rcll
or
cld
mov
test
push
in
scas
mov
xchg
movsl
inc
cmp
pop
loopne
shll
xchg
sub
out
mov
xor
bound
daa
and
sub
dec
out
popf
inc
mov
cltd
dec
stos
jns
mov
lret
inc
pop
jg
pusha
push
bound
adc
test
cmp
inc
inc
dec
movl
adc
in
jg
js
sub
mov
push
insb
lds
or
dec
das
out
test
lret
mov
repnz
mov
mov
int
mov
sub
push
push
mov
jl
pop
in
cwtl
dec
xor
cmp
adc
cmpsl
js
scas
insb
sbb
fisubrs
add
shlb
jne
jge
sub
call
and
xchg
dec
int
xlat
imul
arpl
dec
repz
imul
adc
jae
dec
inc
aas
dec
jb
fmuls
dec
bound
shrl
cmp
xlat
stc
out
jl
dec
aaa
pop
aam
adc
jb
fmuls
sbb
gs
sub
dec
testb
lods
shr
loope
in
je
push
push
mov
push
enter
shlb
or
fildll
mov
mov
mov
and
stos
jmp
incl
mov
decl
aas
xchg
cmp
mov
popf
fs
aad
sbb
cmpsl
rorb
xor
xchg
xor
mov
outsl
push
fisubs
xchg
clc
popa
roll
xor
fs
cmovae
scas
push
inc
push
std
jne
test
or
repnz
sub
sbb
or
push
dec
cmpsb
lret
shll
jbe
cmpsb
or
test
dec
in
outsl
and
add
in
bound
adc
xor
insl
fdivs
xor
xchg
jnp
push
fwait
push
dec
daa
cli
jne
pop
push
xchg
cmp
or
sub
or
mov
stos
pop
imul
jb
sahf
insb
cwtl
int
aam
pop
fwait
or
mov
pop
leave
pop
inc
jecxz
add
and
movsb
pop
clc
nop
loopne
fwait
and
fsubr
xchg
and
sbb
out
adc
and
shll
dec
lds
mov
jp
mov
dec
shrl
mov
sub
mov
pop
in
stos
call
cmp
inc
dec
or
loope
dec
daa
jmp
ret
out
pop
js
add
lcall
bound
loop
cmp
in
inc
pop
cmp
jnp
push
jl
lcall
xchg
xchg
js
cs
int3
mov
sbb
jnp
inc
sbb
add
inc
fldt
sub
mov
inc
int
scas
xor
in
dec
cmp
cld
mov
jae
lock
pop
out
rorl
dec
popa
mov
sub
cmc
fidivrl
dec
sub
adc
mov
dec
lcall
fwait
test
mov
mov
bound
mov
imul
xchg
push
and
fxam
mov
xchg
inc
xor
mov
jbe,pn
sub
add
iret
and
scas
clc
dec
xchg
in
jl
das
rol
jecxz
fchs
sbbb
daa
and
popf
gs
sbb
ds
aad
xchg
push
orl
and
inc
inc
jno
jge
or
xchg
ret
test
leave
mov
add
in
cmp
out
mov
mov
mov
inc
into
cmp
mov
jnp
lahf
lock
sahf
pop
icebp
test
fincstp
or
je
aaa
lahf
test
mov
mov
imull
lret
or
insl
mov
adc
xor
imul
sub
sbb
stc
mov
mov
imul
mov
sbb
mov
and
xchg
dec
sbb
mov
cmp
cmp
daa
add
stos
push
pop
mov
outsl
add
xchg
adc
mov
and
add
out
into
dec
mov
cmpsl
mov
dec
xchg
pop
xchg
nop
xchg
test
and
sub
inc
xchg
push
rolb
push
out
in
xchg
iret
inc
mov
icebp
jmp
mov
mov
inc
xchg
lahf
mov
jg
dec
mov
jle
cwtl
in
jno
push
rorl
sbb
mov
mov
xchg
mov
out
xchg
sbb
and
or
hlt
jnp
rorl
lahf
test
or
test
jl
jecxz
pop
out
mov
loopne
les
ss
lock
or
pop
pop
push
sub
mov
fcoml
lret
sbb
in
in
dec
nop
sbb
ds
ds
sahf
imul
test
out
pop
daa
or
shll
push
mov
adc
roll
movsb
fs
icebp
filds
add
add
xor
inc
rcrb
add
popf
mov
add
cmpl
jnp
das
cmp
out
ja
push
ljmp
and
gs
xchg
mov
jge
lds
cmp
pop
adc
fsts
fdivs
imulb
jo
xchg
fistpll
and
mov
dec
mov
xchg
lret
mov
push
mov
mov
call
add
push
sar
push
cmp
jo
pop
jp
cmp
je
xor
orl
xchg
push
nop
or
addb
cmpsb
cmpsl
test
dec
sbb
cmp
call
jl
xchg
push
test
scas
push
inc
xchg
addb
les
mov
imul
mov
mov
je
sbb
scas
rorl
xchg
sti
ficomps
loop
lcall
mov
imul
pusha
clc
daa
lahf
and
pop
dec
jo
or
int3
outsl
xchg
push
ret
jl
out
cmc
stos
and
fwait
lret
ss
mov
pop
pop
xchg
das
into
fidivl
fistpl
mov
inc
xlat
out
idivl
xor
and
jge
clc
idivl
pop
pop
out
stc
gs
push
pop
ret
fstpl
mov
sti
cmp
ja
pop
sahf
push
xchg
in
pop
cli
out
mov
inc
sbb
lods
xchg
push
fistpl
ja
xchg
hlt
push
sbb
push
mov
mov
add
cmp
ficoml
shlb
stc
mov
fcoms
enter
xchg
mov
in
rcrl
sbb
out
stos
or
out
outsl
enter
add
dec
lahf
fsubrp
or
popf
pop
lods
mov
dec
in
add
pop
lcall
add
movsl
sub
pop
xchg
pushf
push
or
sub
icebp
lods
outsl
cmc
icebp
add
adcl
pop
jnp
cmpsb
movsl
out
mov
push
adc
ja
jbe
inc
mov
loop
ret
std
les
push
ljmp
icebp
fs
movsl
ss
jne
data16
jg
popa
testl
lcall
movsl
or
jbe
pop
rorl
sarb
dec
mov
sub
outsl
scas
je
repz
push
sbb
inc
js
jle
or
push
push
push
cmc
pusha
rorl
sbb
hlt
mov
or
xor
sarl
sarl
or
mov
or
mov
jbe
xchg
xchg
jnp
lock
jl
out
add
push
stos
stc
add
xchg
mov
mov
and
out
sti
lock
inc
idivb
or
cmp
stos
xchg
dec
icebp
adc
loope
icebp
test
dec
and
inc
call
add
inc
sbb
ret
ficoml
movb
jge
cltd
mov
push
iret
xchg
ficomps
in
jne
add
inc
insb
fabs
mov
das
leave
mov
icebp
ss
mov
add
pushf
icebp
int3
mov
stos
cmpsl
inc
inc
in
cmp
jb
mov
lods
mov
imul
cmp
pop
mov
mov
sbb
sahf
sub
adc
call
push
scas
jl
and
jb
and
sub
jle
xor
cmpsl
int
jne
lds
push
test
mov
xor
roll
call
loop
sahf
push
loopne
lret
push
jl
add
pop
push
jmp
test
fnstsw
lret
cmpl
gs
inc
mov
out
test
fnstenv
pusha
xchg
jae
sub
adc
cmp
loope
cmc
adc
clc
lret
fwait
ljmp
out
mov
nop
in
lret
and
push
ja
push
call
xor
pushf
scas
xchg
inc
jmp
or
roll
jmp
adc
jmp
bound
das
jl
lock
fwait
bound
ret
cwtl
mov
jnp
sub
push
jle
fsubs
sbb
rol
xchg
inc
sub
out
or
fsubrs
stos
hlt
inc
loopne
aaa
orl
add
fwait
mov
mov
loope
stos
mov
pop
xlat
dec
lahf
aam
add
ret
push
adc
xchg
adc
rcll
dec
idiv
push
mov
inc
fidivl
adcb
mov
dec
mov
add
sub
mov
fsubs
ret
test
sbb
out
movsl
mov
ret
in
jno
jl
mov
and
cmp
jne
dec
sbb
mov
inc
push
roll
inc
jl
inc
lods
xchg
xchg
lcall
fwait
push
aas
add
sub
pop
mov
xor
insb
out
arpl
push
dec
ret
je
aas
dec
dec
je
test
xchg
in
aad
aas
scas
pop
fnstenv
outsl
es
adc
sahf
cmp
xchg
dec
sarl
xchg
fst
inc
in
dec
mov
mov
xor
pop
andl
dec
add
pop
out
sbb
mov
enter
xchg
mov
scas
add
ljmp
loopne
ror
dec
jecxz
mov
push
xor
add
std
outsb
je
andl
lods
xchg
jno
cwtl
pushf
imul
add
mov
lret
inc
test
daa
sbb
roll
sub
lods
and
test
pop
dec
jnp
int
lods
lret
rorb
cmp
loop
inc
pop
outsb
inc
sbb
xchg
or
rcr
call
or
loop
mov
push
and
call
xor
cmp
das
fadd
fmul
mov
lahf
adc
jge
repz
mov
adc
addb
mov
lret
loope
loope
out
pusha
test
sub
lret
inc
imul
dec
fs
bound
mov
lret
fnstsw
outsb
int
fimuls
sub
push
push
inc
ja
add
add
aaa
jp
outsb
cmp
scas
fists
xor
fdivrl
iret
lock
push
mov
rcl
jmp
imul
cli
mov
mov
dec
sub
sbb
aaa
inc
adcl
lods
sub
mov
mov
lret
sarl
mov
jg
xchg
dec
rcr
sti
fldt
lods
cmpsb
das
aam
mov
sbb
movsb
mov
lahf
clc
pop
dec
mov
xor
dec
ss
cld
outsb
dec
add
insb
add
jle
movsb
scas
pop
aas
cmc
imul
jae
xchg
notl
xor
popa
jno
jno
sub
dec
xor
rclb
sbb
andb
pop
fcomp
mov
test
and
mov
adc
jnp
xchg
out
stos
dec
imul
lock
out
mov
dec
test
div
inc
leave
xor
mov
jae
dec
mov
insl
int3
pop
jo
xor
inc
lods
jno
push
mov
js
scas
sbb
cld
cld
mov
ja
imul
outsl
push
cs
popf
testb
ret
push
lret
jl
call
fiadds
stc
push
flds
sub
cmc
gs
mov
push
repz
cmp
andl
add
out
mov
psllw
ficompl
xchg
stos
push
in
mov
out
aas
xchg
xor
stc
bound
hlt
inc
mov
jbe
and
ficoms
jp
adc
mov
dec
shlb
and
add
mov
mov
enter
negb
ret
or
xchg
subl
pop
fisubrl
cmp
stos
out
les
aad
sbb
inc
fadds
cs
pop
mov
xor
add
fisubrs
add
sbb
cmc
into
mov
dec
mov
dec
xor
jb
mov
aam
mov
cli
in
xchg
rcr
inc
cmp
arpl
xchg
adc
leave
cmpsb
xchg
out
movsb
and
mov
scas
jmp
ret
push
movsb
inc
and
xchg
and
sahf
ja
push
stc
sbb
aam
xchg
je
jns
jmp
ficoml
lcall
mov
dec
mov
jb
outsb
leave
test
leave
arpl
jae
pop
movsl
lret
js
stos
push
imul
nop
sbb
aam
pop
inc
cltd
add
and
ret
aas
movsl
dec
sar
leave
adc
sbb
xor
or
mov
cmpsb
adc
mov
push
add
mov
jne
ds
ds
sti
lock
pop
fcompl
inc
push
clc
xorl
daa
or
pop
mov
adc
aam
test
adc
mov
and
imul
push
daa
cmpsb
leave
or
fisubrl
hlt
jnp
and
dec
icebp
shll
and
jbe
cmc
in
inc
testl
cld
je
xchg
into
and
loop
add
out
jmp
ret
lods
loope,pn
xchg
fadd
cwtl
and
gs
fstpt
sub
jns
mov
mov
jle
loopne
mov
mov
xor
or
pop
add
or
fnsave
scas
jae
daa
lret
pop
insl
mov
jle
sahf
sub
lcall
movl
scas
sbb
or
mov
je
mov
mov
dec
mov
pop
arpl
inc
dec
movsb
mov
push
addr16
sbb
or
icebp
pop
orl
adc
pusha
pop
rol
scas
sbb
pop
mov
jle
movsb
dec
jae
lea
xchg
mov
mov
je
add
mov
push
mov
sbb
ret
repnz
lock
cmpsl
int3
mov
out
adc
andb
and
pusha
mov
repz
xlat
inc
xor
hlt
aam
add
test
sub
enter
rclb
mov
mov
loopne
outsl
xor
push
mov
pushf
dec
cmp
and
js
jge
sbb
push
dec
xlat
jae
xchg
mov
test
cmp
push
or
cwtl
sbb
mov
jo
mov
fstps
jb
movsl
sub
inc
sbb
add
pop
test
cmpsl
sarl
mov
xchg
repz
mov
jo
jno
cmp
aad
frstor
fabs
outsl
mov
lahf
mov
mov
ror
fldpi
sbb
pop
jmp
xchg
cvttps2pi
sbb
mov
mov
or
inc
mov
fdivp
dec
push
and
pop
pop
cmp
jmp
jg
pop
pusha
xchg
call
popf
mov
call
sub
sbb
push
subl
je
xor
div
test
ljmp
add
out
or
xchg
daa
test
sbb
shr
in
movsb
decb
out
shr
mov
xor
adc
mov
xchg
add
sub
mov
sbb
push
mov
aad
ss
loope
add
jg
ret
or
cmp
scas
cli
out
and
popf
daa
into
mov
lret
xchg
jno
shll
mov
dec
test
add
imul
add
xchg
rcrb
aaa
jmp
xor
subb
or
and
stos
fmulp
fildll
cmp
hlt
or
mov
push
pop
lret
popa
sahf
mov
xchg
or
clc
cmp
cli
es
aad
lret
fidivrl
adc
pop
enter
push
jl
aad
aaa
inc
pushf
inc
jns
subb
inc
jbe
cmp
push
ret
cltd
int3
jbe
loopne
inc
mov
xor
nop
mov
inc
aas
cwtl
adc
test
jno
adcl
test
mov
or
dec
lods
adc
adc
jb
stos
jmp
or
lret
inc
cmp
lods
clc
int
push
fcomip
fcomps
fbld
insb
in
add
ss
loop
cmp
push
mov
or
test
pop
out
push
mov
push
ja
add
push
sti
lahf
pop
jmp
push
xchg
ret
lods
dec
fdiv
pop
dec
or
clc
enter
aad
dec
mov
mov
ss
and
lds
adc
lret
xor
cmp
dec
sahf
sti
xor
add
jnp
cli
ds
ds
xlat
mov
cmpsl
ds
scas
ds
and
fisttpll
pushf
fs
pop
ja
sbb
xchg
push
test
loope
repz
lret
push
pop
mov
inc
hlt
sbb
lret
push
sahf
in
shrb
xor
jo
mov
xchg
fstpt
aad
scas
add
daa
jge
sbb
cmpsl
mov
scas
in
adc
cmp
dec
insb
fsub
cli
stos
stos
clc
jle
xchg
inc
loope
jp
adc
addl
pop
inc
xchg
dec
imul
push
loop
repnz
mov
mov
pop
mov
jmp
ss
lea
js
je
push
cmp
scas
cltd
pop
sub
loop
xorl
xor
ljmp
rol
dec
sub
cli
mov
scas
mov
or
rcl
repnz
xor
in
mov
or
std
imul
ficoms
mov
and
xor
in
or
ja,pn
repz
or
push
aaa
push
lea
loopne
pop
aas
pusha
outsl
call
mov
and
inc
inc
shll
mov
roll
inc
mov
push
add
cltd
mov
dec
jno
shl
call
push
hlt
cmp
lods
test
daa
mov
xchg
jno
add
arpl
or
ret
xor
pop
add
cli
cltd
push
jmp
lret
dec
loope
ds
in
lods
test
test
or
addr16
inc
xchg
test
mov
mov
sub
outsb
test
loope
jg
movsb
outsb
xchg
sub
das
mov
xchg
push
adc
jmp
enter
cs
imul
fildl
mov
loope
jle
mov
aaa
xchg
vxorps
jnp
out
out
adc
cltd
mulb
repnz
cmp
xchg
jg
test
xchg
cmp
pop
bound
pop
leave
sbbb
jmp
repnz
arpl
cmp
mov
out
or
shrb
add
pop
int
stos
stc
dec
outsl
mov
stos
inc
dec
xchg
inc
sub
sbb
push
xchg
or
xor
pop
lret
add
cmc
cld
xchg
sbb
mov
push
push
push
jg
test
in
enter
sbb
push
out
xchg
iret
pop
add
xchg
mov
mov
cmpsl
ljmp
cmp
mov
xor
imul
aad
jbe
dec
sbb
in
dec
pop
test
aaa
sub
cmp
jmp
cltd
or
dec
push
cmp
xor
cmpsl
mov
loop
pop
sub
lods
lock
or
imulb
sub
push
inc
cmp
push
repnz
xor
sub
push
jbe
hlt
hlt
mov
clc
dec
shl
sbb
jne
out
xlat
sbb
test
ss
rcrb
adc
test
repnz
inc
xlat
and
sti
pop
subl
repnz
mulb
and
inc
xchg
mov
mov
inc
leave
pop
dec
rcll
movsb
hlt
mov
inc
push
and
leave
jl
push
loop
daa
add
xor
jnp,pt
cmp
xchg
jno
sahf
outsb
fs
dec
mov
mov
loop
xchg
add
inc
and
sub
mov
xor
dec
nop
xchg
xchg
xor
jnp
push
mov
scas
out
xchg
cmpsl
jg
push
sti
fildl
ljmp
aam
cmp
push
sub
mov
aad
pushf
and
es
rclb
rclb
xchg
xor
pushf
cmp
jns
sbb
dec
sub
cmp
aaa
or
dec
xchg
mov
andb
popa
add
int3
xchg
and
mov
sub
pop
mov
or
test
test
orb
jns
mov
dec
mov
mov
cli
cmp
inc
mov
add
or
fmull
mov
or
push
les
or
insb
xchg
stos
ja
or
jbe
jl
je
adc
rolb
sbb
xchg
push
in
fcoms
test
bound
inc
out
lods
repz
jno
roll
std
fsubr
test
add
or
add
mov
mov
into
mov
jns
shll
jl
mov
scas
cmp
or
push
xchg
js
pop
aas
xor
fildl
inc
sbb
add
shlb
je
adcb
mov
sub
popf
popa
pop
fstpl
pop
ds
push
ret
ret
xchg
jnp
test
add
push
sub
mov
int
and
imul
mov
enter
jbe
dec
push
mov
mov
pop
mov
and
enter
popf
inc
jl
inc
rclb
sub
jo
mov
mov
xchg
push
push
adc
mov
push
mov
and
jg
inc
push
and
jbe
and
pop
divl
xor
cld
mov
adc
enter
int3
outsb
jl
xchg
mov
ljmp
cwtl
rcl
sub
insb
nop
mov
sub
push
leave
cld
call
fiaddl
movsb
shlb
bound
or
cmp
push
loop
js
lds
mov
outsl
dec
insb
aas
popl
sarl
xlat
xlat
xchg
add
das
mov
mov
and
pusha
cmp
sbb
or
sbb
xchg
dec
cmpsb
pop
dec
jbe
xor
insl
or
enter
pop
sbb
lock
sbb
cmp
add
push
push
cld
push
mov
inc
jle
sbb
test
sub
add
or
mull
inc
jle
dec
cs
cmp
mov
cwtl
sti
lahf
lea
inc
rorb
jb
or
out
cmp
sub
out
mov
fnstsw
xchg
aad
aam
mov
jno
loopne
mov
iret
ljmp
out
and
sbb
inc
cmp
andb
push
dec
or
gs
xor
stos
pop
pop
out
mov
fadd
sub
fs
lock
int3
in
inc
cmp
add
popa
test
push
data16
je
testb
mov
addr16
mov
cmp
cld
sub
aad
imul
jmp
push
push
mov
mov
or
jnp
or
call
enter
fldcw
or
fdiv
cmp
ss
add
mov
cwtl
sbb
stos
inc
jecxz
movsb
mov
jns
insb
in
imull
mov
or
xchg
adc
xor
rcrb
adc
out
jns
fdivrl
dec
and
in
dec
mov
int3
and
mov
jns
movsl
test
out
aad
xorl
lahf
sub
dec
lds
int
jp
or
shll
dec
inc
pop
pop
or
inc
outsb
cmpsb
jae
mov
mov
lret
and
jo
inc
sbb
popa
mov
dec
mov
fcoml
in
mov
aad
jecxz
push
ljmp
mov
mov
jecxz
popa
push
push
and
adc
mov
push
shld
lret
adc
jae
jnp
mov
mov
ss
scas
js
jne
cmpsb
or
out
mov
and
mov
jnp
sub
bound
or
dec
leave
syscall
and
stos
mov
hlt
xchg
es
or
dec
popf
loop
or
mov
sub
out
insl
pop
ja
mov
int3
mov
mov
outsl
clc
adc
push
movsl
pop
lock
sub
enter
or
jp
cld
xor
push
addl
push
mull
decb
mull
shll
das
fistl
enter
add
mov
mov
adcl
push
jge
test
ror
cmp
ror
and
pop
and
push
add
data16
insl
adc
popa
pop
push
adc
and
and
adc
andl
add
icebp
dec
frstor
addl
lea
scas
cmp
lods
leave
xor
cs
lret
xor
subb
adc
adc
sbb
or
push
enter
mov
gs
inc
jne
push
pop
jb
insb
outsl
out
ficompl
pop
sti
jmp
pop
scas
xor
sbb
and
js
cmp
ds
mov
pusha
cmpsb
jg
enter
pop
push
xchg
ss
dec
sub
inc
test
mov
in
inc
sub
mov
stos
mov
sbb
fisttps
sti
test
decl
mov
xchg
inc
push
inc
xor
pop
cld
xor
lahf
fwait
push
jno
sub
sahf
insb
mov
loope
arpl
ret
xchg
outsb
inc
call
pushf
add
inc
or
lods
xlat
add
pushf
push
mov
loope
insl
xchg
aad
lahf
push
out
in
repz
out
add
or
fmull
or
hlt
xor
sub
sti
and
lcall
xor
clc
dec
inc
adc
add
enter
daa
fnstsw
cmpsb
rclb
sub
add
dec
pop
bound
insl
clc
xchg
imul
loopne
push
or
cmp
out
inc
movsl
add
shl
push
pop
lea
mov
lret
test
cmp
xchg
sahf
cmpl
inc
push
test
xchg
ljmp
mov
fcomps
pushf
rcl
and
add
jnp
dec
adc
gs
repnz
aad
and
pop
rolb
cmp
push
repnz
and
mov
ds
xchg
mov
fiaddl
adc
sub
cmpsl
xchg
iret
pop
pop
xor
push
cld
mov
and
ret
repz
cs
cli
jp
mov
test
in
stc
in
mov
sbb
adc
rolb
mov
nop
data16
lcall
mov
push
push
cltd
add
loopne
shrl
pop
loop
imul
loop
arpl
out
xchg
sahf
rorb
rcr
dec
aam
lock
and
jb
xchg
popf
pushl
call
xchg
fiadds
enter
cmpsl
out
add
or
mov
repz
adc
jle
mov
iret
cmc
fcomps
pushf
xor
pop
call
push
mov
jnp
jge
jae
sbb
sahf
adc
clc
and
mov
test
sbb
loop
add
mov
sarl
int
and
add
xor
push
mov
mov
xchg
insl
adc
les
cmp
lcall
out
xchg
stos
push
into
xchg
fidivl
sub
hlt
and
pusha
sbb
cmp
or
movsl
mov
lahf
adcl
idivb
add
lret
sub
insb
pop
not
mov
loope
loopne
xchg
test
pop
rcl
inc
mov
sarb
or
mov
mov
dec
dec
and
lds
icebp
sbbl
add
sub
inc
jbe
out
pop
out
insl
jae
cli
cli
lahf
into
int3
push
add
mov
inc
jnp
and
push
shll
fs
aas
pop
in
and
mov
pusha
mov
sahf
xchg
inc
mov
xor
leave
fisttpl
scas
dec
mov
loop
inc
ljmp
outsb
in
das
mov
and
xchg
insb
call
cmp
scas
in
sbbl
add
jmp
add
mov
in
js
mov
fiaddl
push
in
iret
push
xor
dec
push
pop
lcall
xchg
xchg
push
xchg
cmp
or
sub
shl
mov
lret
mov
xor
ja
lcall
fistl
das
movsl
xor
dec
dec
and
scas
scas
mov
xor
lods
xchg
mov
gs
pop
and
mov
fisubrl
cmp
pushf
pushf
jnp
or
pop
ret
mov
aam
std
cmp
and
insb
sbb
test
adc
mov
ret
pop
and
movsb
adc
pop
ljmp
insb
cwtl
inc
xor
hlt
rorb
cmp
inc
add
shlb
push
fisubrl
adc
xor
dec
ja
in
int3
gs
loop
adc
push
enter
test
clc
outsb
dec
ficoms
popa
inc
roll
ds
pop
xchg
inc
cmc
fbld
in
lahf
adc
int
push
rclb
cs
shl
adc
mov
push
mov
mov
push
ljmp
add
stc
mov
jno
cltd
divb
mov
pop
dec
ds
push
push
pop
inc
sahf
sub
jbe
jo
pop
jp
cmp
aas
arpl
shrb
mov
test
mov
out
jl
xchg
lcall
xor
xor
movsb
jb
xor
mov
xlat
mov
loop
test
add
adc
ffree
lret
jbe
jno
loop
jnp
and
xor
jne
xchg
fcompl
jbe
shrd
and
push
xchg
repnz
popa
lods
syscall
push
cmpsb
aam
enterw
push
xor
mov
mov
in
fwait
pop
cmp
push
xor
or
test
lods
xchg
arpl
cmp
jmp
movsb
jb
retw
repnz
pusha
add
fildl
int
stc
mov
mov
inc
dec
sbb
lahf
outsl
fists
mov
or
mov
jge
jle
xchg
stc
gs
mov
sub
pushf
ret
test
cmpsl
es
mov
lock
jg
mov
or
mov
fwait
mov
inc
pop
aad
mov
or
hlt
std
inc
outsl
sbb
jl
mov
mov
mov
ja
icebp
vpmacsdd
mov
fsubl
notb
lock
and
mov
mov
test
aam
les
shlb
fnstsw
loope
jp
mov
push
jae
cmpsb
mov
outsl
incl
jmp
scas
mov
fisttps
call
mov
imul
out
jmp
outsb
xchg
and
sub
and
mov
daa
fdivrl
lds
sbb
pop
jae
daa
cs
int
mov
push
mov
pop
cs
mov
out
adc
xchg
jo,pn
stos
mov
mov
mov
dec
push
ret
cmc
mov
cmp
xor
mov
push
fucomp
sahf
xchg
push
push
loop
int
push
das
add
cmp
movsb
aas
xchg
xor
call
sbb
and
jmp
xorb
or
inc
pop
addr16
push
mov
inc
lds
into
popa
dec
adc
call
imul
inc
lcall
jb
push
and
cs
jl
int3
es
cld
pop
xor
mov
xor
js
es
jno
mov
cwtl
lds
test
add
xchg
sbb
xchg
add
sub
in
cli
add
adc
dec
mov
scas
xchg
lods
jns
mov
cmpsb
orb
cmp
push
jo
and
xchg
mov
xchg
dec
popa
insl
pop
imul
roll
pop
push
and
mov
fidivrs
xchg
jge
test
jmp
mov
sub
sbb
imul
xchg
dec
jg
mov
push
push
popf
jbe
jnp
push
jne
xor
pop
roll
lds
frstor
mov
push
jnp
mov
iret
inc
xor
shl
cltd
dec
repz
dec
jmp
stos
adc
in
push
movsl
xchg
cmp
mov
jbe
jae
add
or
sbb
adc
add
sub
and
jl
aas
xor
inc
pop
cmp
ss
inc
lds
jo
fsubl
adc
xor
in
jo
fldenv
mov
outsl
dec
loope
xchg
mov
pusha
lea
out
call
jns
dec
mov
scas
adc
leave
jmp
rorb
pop
mov
pop
orl
push
mov
adc
mov
daa
jbe
cmp
iret
frstor
inc
shl
pop
addb
cmpsl
in
ret
sti
ror
mov
fcomps
adc
mov
sub
int3
into
mov
stc
setle
movsl
jmp
inc
pop
xor
out
or
jp
les
add
xor
cltd
outsl
mov
inc
push
movsb
in
ret
pop
fldt
mov
adc
inc
cli
push
cmpsl
pop
aam
pop
push
fwait
jno
adcl
out
stos
fs
pop
dec
push
dec
adc
int
imul
and
sub
mov
jbe
push
cmpl
and
lds
lea
cld
das
adc
int
xor
ljmp
cmp
and
sbbb
scas
aam
xchg
xchg
inc
jae
xlat
xchg
mov
cmp
xor
cmp
cwtl
and
in
xchg
inc
test
call
shrb
push
cmp
out
mov
pop
xor
ficompl
mov
push
mov
or
popf
pop
adc
xor
jns
pop
mov
shl
jmp
sarb
push
test
aad
mov
adc
je
neg
pusha
sbb
test
lret
popa
mov
es
jmp
mov
pop
push
nop
jne
pushf
xor
mov
adc
insl
insb
and
xchg
andl
jo
and
jno
stos
and
and
fstps
or
xchg
inc
sub
inc
cs
clc
lods
inc
lods
popf
and
ja
mov
les
cmp
mov
add
mov
add
dec
inc
fs
lret
xchg
inc
xor
ljmp
inc
lret
pop
test
sbb
xchg
imul
fwait
cmpsl
xor
adc
out
add
mov
test
xchg
push
inc
repz
xchg
pop
into
xchg
jbe
ret
push
jg
stos
stos
lahf
adc
ljmp
incl
lret
aad
mov
repz
xor
stos
rcr
sub
sbbl
lock
in
mov
imul
mov
fbld
fwait
sbb
idivl
cltd
sbb
mov
ret
pop
xchg
orl
mov
leave
stc
lds
push
sub
sub
popf
push
jmp
inc
mov
inc
lcall
mov
stc
xor
aad
ss
adc
cmp
roll
push
pop
adc
and
mov
sbb
popf
mov
test
rclb
or
or
pop
mov
cmpsl
jle
les
cmp
out
pop
leave
rolb
mov
jmp
imul
sub
jnp
sub
cmpsb
sub
int
pop
pop
push
sub
scas
push
xor
xchg
andb
fucomi
test
cmp
xor
aas
mov
inc
jne
stos
sub
sarb
sbb
es
pop
in
adc
sar
push
inc
add
inc
iret
jbe
adc
pop
or
add
mov
psubw
dec
lods
frstor
mov
popf
leave
leave
push
inc
add
jno
inc
mov
fucom
jp
jns
rorb
cmovle
jmp
stos
movsl
pop
jge
xchg
mov
in
cmc
jecxz
mov
fsubrl
push
push
mov
xor
popf
mov
and
mov
sahf
xor
jo
std
xchg
sub
xchg
and
repz
repz
fstpl
arpl
test
arpl
sub
je
in
mov
int3
pop
jmp
jns
adc
push
pop
adc
in
and
cmpl
push
mov
adc
cmpsb
loop
push
jb
push
divl
sub
jmp
test
add
and
cs
add
repz
sahf
jecxz
sub
ja
aam
rorl
insb
push
mov
add
add
pushf
jecxz
push
mov
mov
mov
fstpl
xor
cmpsb
jge
jl
mov
cmpsb
ret
scas
mov
or
dec
ja
dec
jns
jb
or
jl
or
mov
stos
mov
dec
mov
cmp
add
and
pop
jl
out
out
lods
fs
cmp
xchg
mov
lret
in
leave
adc
and
pop
stos
insb
sti
xor
jle
xor
mov
test
inc
popf
in
scas
pop
adc
add
loope
or
sahf
dec
mov
add
aaa
jl
pop
xchg
dec
icebp
out
sti
fbld
cmpsl
test
je
sub
or
inc
pop
inc
dec
push
nop
mov
mov
and
xchg
and
mov
mov
aad
mov
or
sub
aam
mov
cli
into
adc
lea
test
xchg
rol
hlt
scas
iret
sub
scas
cmp
bound
mov
xor
jno
test
dec
add
ficoms
adcl
lea
mov
mov
mov
neg
inc
ret
sbb
adc
or
cmp
mov
adc
xor
jbe
in
inc
add
jmp
movsb
jbe
popa
iret
xchg
or
clc
test
add
rorl
push
lock
cld
and
std
pop
add
xchg
lret
push
and
mov
push
popa
mov
sahf
and
add
cmc
pand
xchg
dec
nop
xor
pop
scas
lret
mov
inc
insl
incl
xchg
ret
insl
xchg
mov
inc
mov
adc
ret
add
mov
lods
push
pop
ljmp
xchg
jmp
xchg
mov
std
dec
xchg
loopne
in
leave
push
cs
sub
pop
cmp
pop
sar
inc
add
push
mov
lret
sub
sub
test
or
cmp
pop
adc
jle
jb
lahf
aaa
imul
fdiv
xor
arpl
in
idivl
jge
test
inc
push
repz
jg
jmp
outsl
loope
add
scas
aas
shll
aaa
out
add
sti
pushf
jne
xchg
pop
ds
jb
aaa
sbb
cwtl
push
mov
pop
sbb
lret
add
mov
sbb
cld
test
xchg
xchg
addr16
add
inc
inc
addr16
mov
ss
inc
cltd
push
nop
cmp
lret
push
imul
xor
mov
mov
js
roll
in
loope
cmpl
sbbl
push
cli
in
cmp
adc
lock
je
pusha
inc
shll
ret
movsl
xor
imul
xor
xchg
push
loop
out
dec
mov
cmc
pushf
leave
add
or
sbb
sub
xchg
xor
cltd
mov
arpl
ja
sbb
jnp
jnp
or
add
pop
inc
mov
bound
sbb
mov
int
clc
stc
lds
pop
icebp
iret
addr16
or
movsl
mov
sbb
dec
jno
jecxz
xchg
jmp
jecxz
pushf
add
andl
hlt
shll
das
aad
sahf
loopne
xchg
scas
jp
mov
adc
mov
lock
mov
in
shl
gs
xor
popa
shl
mov
lods
xor
xchg
push
mov
hlt
or
in
test
add
dec
xchg
loope
loop
jg
jb
fstps
cmpsb
or
lods
xor
outsl
imul
test
lahf
mov
das
xchg
sbb
cmc
arpl
xchg
xchg
cmp
out
xchg
lret
insl
mov
mov
mov
mov
in
out
push
int3
leave
enter
xchg
gs
add
repnz
frstor
cmp
or
rcll
xchg
pop
sub
dec
mov
out
cld
das
rolb
test
xlat
push
pop
adc
out
andl
stos
in
ljmp
call
nop
aam
add
jp
pop
test
push
jne
pop
loopne
int
ja
mov
fildll
pushf
or
loopne
push
mov
shrl
nop
insb
data16
ljmp
jne
mov
sbb
mov
jb
loopne
loop
jge
sbb
ret
outsb
iret
add
int3
leave
push
cli
mov
nop
das
xchg
imul
jl
in
cmp
mov
insl
lods
sbb
loop
pop
jbe
repnz
das
rcrl
js
push
fmuls
lods
jg
shll
xor
fsubs
in
mov
jns
add
fs
xor
and
pusha
jge
enter
lock
push
xor
js
xor
adc
popf
gs
push
jno
cwtl
add
aas
jle
std
lods
fidivrl
test
sbb
mov
ret
adc
test
xchg
mov
mov
rcr
add
mov
ja
mov
jge
sub
loop
in
and
jno
adc
mov
mov
scas
and
dec
mov
mov
in
pop
pop
sbb
jecxz
xor
leave
cmp
insl
mov
aad
add
mov
popa
aas
movsl
ds
nop
loopne
xchg
dec
ret
cwtl
in
shll
mov
mov
pop
bound
xchg
nop
pop
lcall
add
aad
dec
ror
push
out
mov
fldcw
xor
mov
int3
jmp
enter
xchg
push
cmpsl
in
in
roll
jnp
inc
mov
push
xor
lahf
add
push
ds
inc
rorl
jp
xorl
repnz
xlat
fistps
rsqrtps
jae
lcall
dec
out
nop
in
cmp
dec
in
mov
sub
fcmovbe
inc
addl
sub
popf
pop
cmp
out
subl
push
xchg
outsb
push
jo
cmp
aas
xchg
and
aaa
jae
inc
xor
jg
add
aam
into
out
xchg
movsl
push
addr16
xor
mov
lret
mov
push
fiadds
pop
cli
imul
xchg
lcall
fdivrs
mov
pop
pop
cmp
jle
inc
dec
fadd
xchg
jne
rcl
mov
fldl
aam
loope
push
repnz
inc
decb
cmp
push
xor
inc
cmp
xchg
or
pop
push
inc
pop
cmp
mov
xor
push
or
jb
adc
aaa
cwtl
in
push
mov
xchg
aas
dec
xchg
pop
mov
jecxz
jmp
add
cmp
mov
pop
pop
aaa
mov
pop
sbb
in
lds
cmp
ret
testb
xor
mov
cmovp
cld
test
mov
inc
and
loop
cmp
jmp
add
xlat
push
inc
or
inc
icebp
add
in
add
pop
pop
loopne
sbb
or
sub
mov
xor
add
out
jp
lea
scas
cmp
or
fisttps
and
add
adc
inc
mov
or
test
jne
xor
ret
cs
push
movsl
jecxz
iret
dec
jnp
out
sbb
sahf
insl
insb
daa
mov
mov
outsb
int
sbb
jp
in
jge
mov
fisttpl
bound
ds
dec
repz
std
adc
xchg
xchg
push
and
push
mov
stc
add
lods
push
aam
inc
ljmp
inc
enter
in
imul
jae
call
fcoml
addr16
and
push
stos
lea
int3
popa
dec
sub
push
loope
fs
mov
pushf
xor
clc
push
mov
inc
loop
bound
xchg
mov
add
je
popf
push
mov
sub
leave
in
mov
scas
bound
in
inc
jle
xchg
je
push
mov
push
push
adc
adc
imul
popa
push
out
mull
mov
stos
mov
inc
pop
nop
mov
addb
cmpl
dec
mov
sbb
and
and
iret
cld
loopne
ss
mov
xor
mov
out
jmp
scas
das
lds
jge
js
subl
cmp
sbbl
shlb
aas
cmp
xchg
jmp
lds
xchg
imul
pop
aam
adc
sbb
push
cmp
sarb
mov
nop
fmull
lret
pop
inc
leave
shlb
cmp
jp
jmp
push
repnz
xor
pop
inc
cltd
mov
sbb
lret
inc
jg
and
stc
dec
fwait
mov
xor
int3
adc
pop
stos
push
loopne
arpl
repnz
mov
stos
adc
dec
jnp
push
xchg
dec
jmp
cmp
int
dec
inc
or
sbb
test
add
lock
or
sbb
int3
jl
je
cmp
aad
sub
adc
inc
shlb
pop
mov
in
rclb
dec
in
fistpll
in
fsubrl
stos
mov
ret
adc
andl
lea
out
fsubs
adc
xchg
mov
dec
add
push
pop
mov
jg
xor
sbb
icebp
add
jae
sbb
inc
add
imul
cmp
push
jae
in
mulb
xchg
fistpl
out
mov
xlat
add
xor
push
dec
shl
or
cmpsb
cmp
arpl
dec
out
test
das
nop
pop
mov
jmp
clc
fld
mov
fsubs
mov
orl
jae
mov
into
movups
ficomps
repnz
cmpsl
cli
in
or
nop
shlb
js
mov
pop
loope
lea
add
push
icebp
stc
clc
aaa
mov
cwtl
lea
add
mov
push
js
aam
mov
or
push
or
jecxz
jne
js
xlat
arpl
and
inc
sti
loope
sub
and
push
faddl
adc
cld
adc
cwtl
ljmp
outsl
lahf
hlt
push
push
mov
iret
mov
mov
sbb
sbb
cltd
xchg
dec
push
es
shrb
repz
movb
and
inc
gs
lods
mov
movsb
vcomiss
in
xlat
into
scas
lods
mov
sbb
push
cmp
mov
and
mov
dec
out
test
gs
mov
xchg
inc
addr16
iret
rcr
mov
mov
and
enter
or
sbb
xchg
add
lds
daa
and
xor
lret
and
lock
or
cmp
call
inc
out
ds
ret
sti
pop
or
mov
ja
test
sub
push
or
fnstcw
jnp
or
lcall
fildll
aas
inc
jg
mov
push
mov
dec
jb
jmp
out
jne
adc
pop
mov
xchg
jg
mov
scas
inc
jbe
dec
pop
mov
or
jae
sahf
test
rcrb
fstl
insb
outsl
cwtl
add
rol
dec
fs
js
lock
test
or
inc
push
mov
pop
cld
inc
sbbl
mov
orl
pop
jmp
mov
pop
inc
mov
ss
fdivrs
aaa
mov
or
cltd
adc
xchg
lret
pop
pop
jle
addr16
jbe
cld
in
nop
sbb
cmp
sbb
addr16
sub
test
xor
pop
lahf
loop
ret
aas
dec
push
sub
add
aas
xchg
push
push
cmp
mov
pop
fdivs
js
jge
jns
cltd
movsb
mov
gs
fwait
xchg
add
cwtl
jnp
xchg
sbb
in
lahf
out
mov
shrl
and
scas
cmp
daa
or
inc
sbb
cs
sbb
xor
stc
stos
das
pop
cmpsl
rcll
sub
xchg
rcll
or
imul
into
mov
icebp
pop
aas
into
aaa
ja
lods
xchg
popf
test
je
push
xchg
push
out
push
clc
mov
pop
pop
cmpsl
pop
out
cmc
lahf
insl
cld
mov
cmp
xchg
hlt
stos
xchg
sub
aad
and
adc
mov
subl
dec
push
dec
push
dec
mov
lock
and
fsts
mov
lret
mov
clc
fwait
loopne
jo
inc
ret
mov
ss
sbb
xlat
xor
push
cmpsl
and
xchg
cmpsl
bound
test
leave
out
adc
mov
dec
mov
es
nop
inc
enter
lock
sbb
cmc
sbb
push
dec
aas
pop
fwait
cmp
stos
in
jmp
clc
xor
scas
sub
loop,pn
jae
mov
jns
sub
cld
insl
dec
mov
mov
daa
sub
clc
xor
push
mov
ja
dec
sub
out
icebp
shlb
scas
lahf
outsb
jne
enter
mov
add
outsb
pop
call
xchg
addr16
or
bound
mov
xor
xchg
jmp
lcall
imul
mov
ljmp
arpl
lret
imul
mov
push
aam
jbe
scas
imul
clc
int3
sbb
mov
inc
scas
sahf
cmp
dec
pusha
mov
jmp
aad
xor
xchg
fs
pop
adc
push
aaa
push
push
sub
mov
das
pop
dec
push
in
pop
cmpsl
or
test
shll
add
data16
test
xchg
mov
mov
dec
sti
jmp
addr16
fbld
hlt
jecxz
jae
ret
neg
sub
push
daa
mov
sbb
dec
addl
loopne
mov
stos
dec
mov
push
mov
aam
dec
mov
aaa
repz
fisubrl
sbb
imul
xchg
inc
or
lcall
adc
hlt
xlat
add
dec
push
insb
or
push
pop
mov
aaa
lahf
pushf
dec
cli
mov
add
mov
mov
cld
dec
sbb
dec
mov
adc
xor
sbb
das
test
rcll
xchg
push
cmpsl
cmp
out
xor
jbe
cs
sarb
mov
gs
dec
sti
mov
stos
push
pusha
jecxz
pop
sbb
test
fiadds
cmpsl
maskmovq
fmul
or
and
scas
pop
in
jp
mov
aam
call
scas
test
sahf
lods
out
js
inc
enter
bound
cwtl
jo
and
xchg
adc
sub
mov
push
cli
add
pop
popf
mov
test
cwtl
rorl
les
jae
lods
push
dec
adc
adc
mov
pop
and
pop
cmp
idivl
xchg
in
testb
sarl
and
in
jo
and
sub
lock
and
jbe
std
mov
sti
adc
sub
loop
mov
push
jg
andl
out
pop
test
mov
xor
and
fdivl
sarl
mov
shll
in
out
test
dec
fs
mov
lret
aam
xor
cwtl
jmp
inc
mov
xchg
jl
xor
lock
lret
pop
jne
sub
sub
inc
xor
cmp
mov
mov
pop
iret
jbe
pop
sbb
sub
in
add
pop
push
data16
push
xchg
mov
mov
mov
lret
rcrl
movsl
test
pop
das
fs
mov
sti
and
push
mov
aam
std
adc
push
xchg
mov
fwait
aad
inc
mov
vunpckhps
or
in
xor
mov
jmp
xorb
pop
jbe
aaa
and
push
ret
lcall
das
ja
jae
and
push
ret
leave
sub
xor
std
adc
sbb
xlat
mov
loop
sbb
sub
sbb
mov
stc
daa
jmp
jae
loope
bound
and
sub
xchg
cmpsb
scas
jecxz
enter
push
shl
mov
rolb
push
adc
xchg
sti
sub
sub
or
push
jae
push
test
add
mov
call
lret
add
add
or
movb
test
dec
shlb
mov
test
mov
jle
clc
and
sbb
test
aas
and
push
das
mov
lea
mov
pop
mov
inc
dec
imul
aaa
cmp
ret
sbb
cmpsl
pop
pusha
addr16
out
pop
add
ljmp
jo
cmp
icebp
loop
fs
mov
adc
xor
lods
popf
sti
add
mov
xchg
adc
fstps
cmp
shrl
xchg
fscale
xchg
mov
daa
mov
and
test
add
outsb
or
mov
enter
inc
cli
and
shll
push
sub
js
xor
mov
jno
inc
out
fwait
hlt
xor
mov
push
je
adc
pusha
mov
and
jno
mov
xchg
jecxz
sahf
icebp
fistps
test
stos
fs
or
pop
cmp
mov
lretw
sbbl
test
stc
push
lock
mov
rsqrtps
adc
push
mov
repnz
test
sbb
push
mov
adc
sub
mov
insl
and
js
scas
ret
filds
xor
adc
inc
leave
cld
rolb
add
outsl
mov
and
test
insb
sub
mov
cmovl
ds
mov
pop
mov
dec
int
inc
add
dec
lds
scas
out
nop
pop
stos
xchg
je
jge
imul
popf
popf
cmp
inc
pop
ficoms
pop
int3
stos
xchg
mov
insl
mov
pop
dec
mov
jbe
pop
xor
lea
loope
sahf
cld
out
sub
sti
push
shll
xor
or
cs
shlb
cmp
inc
jo
mov
mov
ljmp
inc
push
out
inc
gs
mov
or
fstpl
xchg
fs
scas
mov
in
push
xor
cmp
jno
mov
loope
ret
sub
sets
cmp
dec
test
adc
push
imul
push
dec
into
inc
je
jno
test
cwtl
xchg
insl
or
fcmove
sahf
mov
push
sahf
dec
pop
fisttpll
jnp
mov
inc
icebp
in
add
xor
fwait
xchg
popf
mov
push
add
sub
ret
push
in
mov
adc
ret
cmp
aas
push
scas
fsub
inc
push
repz
cmpsb
scas
int3
and
xlat
add
and
adc
jno
mov
test
fimull
or
cmc
xor
ljmp
mov
imul
pop
cmpsb
loope
push
icebp
adc
daa
mov
adc
and
adc
adc
mov
pushf
cmpb
adcl
shl
and
out
sbb
push
fisubs
lret
and
inc
je
loopne
in
mov
pop
xlat
push
and
gs
icebp
aad
cmp
cmp
mov
out
neg
ss
push
adc
xor
pop
dec
sti
inc
push
mov
sub
xchg
int3
adc
adc
cmp
and
cmc
insb
and
arpl
ja
hlt
lods
or
dec
pop
adc
jmp
push
sub
adc
mov
cmp
dec
sub
fnclex
or
cmc
and
sub
lods
sub
mov
and
push
mov
jns
call
mov
xor
repz
cltd
sbb
aaa
sbb
ret
pusha
push
bound
pop
mov
sarb
and
sbb
sbb
cltd
mov
inc
outsl
xchg
adc
jg
mov
inc
xor
push
mov
out
mov
dec
pop
mov
or
loopne
insb
test
inc
je
lds
movb
inc
or
mov
bound
fistl
or
hlt
jecxz
fmul
lods
adc
lods
xchg
mov
les
jl
sub
jle
inc
fldt
jae
iret
xchg
addl
cltd
fwait
dec
mov
mov
popa
dec
fwait
add
out
ja
mov
inc
loopne
movsb
or
mov
insb
je
inc
fbld
and
addr16
mov
rcrb
hlt
loopne
and
fdivrs
and
pop
imul
js
push
mov
mov
push
fwait
push
cli
xchg
stos
cltd
sti
pop
jns
outsl
pop
pop
je
xchg
sbb
in
mov
mov
mov
add
insl
leavew
pusha
cmp
mov
out
cmpsb
xchg
sbb
and
mov
subl
push
loop
jg
sub
inc
orb
bound
mov
ja
adcb
mov
pop
push
jb
enter
dec
insb
rclb
les
enter
ret
mov
pop
loope
data16
icebp
test
pop
loop
andl
mov
movsl
lea
ljmp
xor
stos
add
bound
xchg
add
pop
popf
sbb
scas
xchg
nop
aad
xchg
in
pop
push
insb
enter
ds
das
xor
clc
movsb
or
mov
sbb
ret
arpl
mov
mov
mov
or
jge
pop
cmp
adc
or
nop
in
aam
sub
or
push
xor
ljmp
out
subl
test
rorl
add
mov
movsl
xchg
and
dec
push
and
repnz
scas
ljmp
dec
out
lds
scas
fstpt
dec
out
jl
push
push
pusha
dec
imul
mov
lahf
in
in
jns
xor
sub
aaa
sbb
pop
outsb
loope
pop
cs
dec
add
xchg
imul
dec
inc
test
fcoms
xor
and
data16
addr16
jne
loop
cmp
xchg
jae
lret
rorb
jp
aam
and
dec
adc
cmpl
push
and
mov
mov
icebp
pop
mov
or
adc
cwtl
outsl
ret
fcoms
lods
pop
push
xchg
out
rorl
arpl
jl
mov
adcb
xor
mov
adc
lret
lcall
int
mov
and
dec
pop
sub
rcll
xchg
push
gs
leave
rorb
push
pop
pop
dec
mov
nop
cmpsl
pop
mov
das
add
xchg
sub
adc
pop
pop
fwait
mov
testl
sbb
push
das
movsl
aam
adc
xorl
ret
add
adc
push
fsubs
int3
arpl
js
cmpb
popf
rcr
or
pop
ss
inc
lret
adc
ja
pop
out
sbb
fsts
jp
mov
hlt
sub
rcrl
dec
mov
loopne
xchg
inc
push
jg
mov
mov
pop
xchg
lock
jg
iret
cwtl
mov
mov
mov
add
push
push
add
aas
push
inc
or
cmp
das
cmpsb
rolb
dec
test
mov
adc
iret
pop
sub
out
lock
jne
inc
inc
jle,pt
adc
push
jmp
inc
jo
pop
add
adc
shlb
bound
cmp
fs
bound
adc
outsl
popa
adc
mov
mov
fisubl
jbe
jp
rcrb
inc
mov
ss
js
and
jecxz
xor
sbb
arpl
ljmp
push
test
push
sbb
xor
movsb
adc
jo
fsubl
pop
outsl
imul
std
in
in
fsubl
test
dec
rorb
je
cmp
in
fld
int
lahf
jge
movsb
jnp
mov
out
imul
lods
push
lods
adc
jb
aaa
adc
fstpt
lods
subps
cmpsl
out
movsl
insb
das
jle
out
pop
mov
out
cmp
xchg
fistps
push
add
add
jle
mov
in
lods
aaa
inc
push
sub
stos
add
push
imull
xor
mov
xor
out
rol
iret
loop
ljmp
xchg
adc
mov
sti
mov
stc
cmp
or
cmp
cmp
pushf
lcall
ret
loopnew
cs
fsubr
or
inc
lea
testl
movsb
pushf
xchg
dec
or
pop
add
aaa
push
addr16
icebp
add
out
or
test
repz
loopew
jl
push
xor
push
dec
shl
cwtl
mov
test
pop
loop
outsb
ja
xchg
fisubrs
dec
pop
movsl
aaa
xchg
faddl
das
adc
inc
mov
jae
cli
cmp
cmp
push
hlt
mov
aas
rorl
clc
and
loopne
das
arpl
sub
xchg
xchg
xchg
leave
or
dec
xlat
mov
insb
repnz
inc
std
mov
subb
cmp
outsl
inc
inc
std
jns
add
jmp
iret
jns
mov
clc
xchg
fwait
mov
push
pop
and
jnp
lcall
cltd
scas
adc
push
ds
in
shrl
add
push
and
xor
imul
loopne
push
test
push
cltd
testl
sahf
fidivl
cld
xchg
push
das
into
aam
arpl
mov
adc
ja
add
cmpsl
or
adc
dec
jns
inc
push
js
cmp
push
xchg
in
mov
orb
ror
push
test
push
shrl
iret
movsl
adcl
mov
jmp
hlt
adc
fsubrs
idivl
in
ds
mov
cmc
sub
scas
ss
outsb
aaa
push
out
mov
mov
sahf
mov
mov
or
mov
sub
adc
dec
repnz
sbb
mov
adc
jge
inc
mov
das
mov
jae
or
jg
add
pusha
mull
jg
add
mov
add
dec
xor
jae
das
mov
shl
xchg
adc
mov
cltd
sub
dec
mov
dec
jge
movsl
pop
sbb
pop
xchg
imul
xor
das
mov
fidivrl
push
push
ss
hlt
dec
sahf
movb
fxam
aaa
in
out
adc
imul
aaa
push
dec
test
int3
icebp
scas
cmp
inc
in
jmp
aam
xlat
stc
or
ljmp
xchg
pop
test
or
add
pop
push
and
hlt
or
adc
leave
aas
fnstsw
mov
cwtl
inc
bound
and
sahf
shrl
faddp
push
les
xchg
mov
in
jge
pop
hlt
xor
fsubs
test
ljmp
add
fwait
cmp
xlat
ret
rep
gs
pop
cmpsb
imul
imul
jno
popa
test
adc
jno
push
pop
mov
dec
and
jnp
int
sahf
add
pop
lcall
jne
lds
sub
mov
shl
cmpsb
inc
flds
test
lcall
xor
lret
lds
mov
jmp
cmp
xor
xor
in
inc
adc
in
je
cltd
or
jl
in
pusha
pop
lds
pushf
test
shufps
push
bound
movsb
aad
lahf
aam
stos
jo
mov
lds
outsl
sub
inc
push
stos
mov
mov
inc
imul
lods
stos
add
or
sbbb
dec
pop
mov
cli
aas
jl
gs
fs
mov
push
orb
ljmp
sbb
or
jo
push
jge
jae
scas
jae
inc
jb
mov
and
dec
or
pop
ret
insb
mov
push
sbb
outsl
mov
nop
push
adc
sbb
rcl
push
sbb
pop
subl
cmp
jb
ficoms
xchg
jb
add
sub
fisttpll
pop
pushf
sahf
decb
push
jbe
fdivs
subb
in
inc
push
out
push
xor
call
mov
js
mov
lods
daa
lea
repz
mov
jl
ds
dec
jnp
aas
jg
sub
xchg
fldt
or
sbb
insb
add
jae
and
add
addr16
call
gs
dec
jns
or
enter
dec
pop
sbb
inc
mov
stc
lcall
xchg
push
cmp
mov
fisubl
cmp
ljmp
lahf
stc
fisubrl
inc
xor
adc
cmc
dec
mov
pusha
and
icebp
leave
mov
call
adc
shlb
mov
stc
testl
cmp
inc
and
ret
adc
sbb
xlat
mov
aad
xchg
or
mov
add
xchg
fidivs
and
mov
pushl
test
pop
inc
ss
call
jb
lds
add
idivb
adc
mov
push
push
dec
pop
dec
jno
in
sub
adc
loopne
adc
mov
jle
push
rcll
inc
pop
out
xchg
jo
push
pop
inc
out
imul
inc
push
aam
mov
mov
mov
fistpll
pop
gs
mov
jle
xchg
pop
pop
mov
loop
out
pusha
fcom
mov
sub
sub
mov
sti
mov
pop
inc
aas
or
repnz
cld
out
push
ss
adc
rcrb
aam
fmuls
stc
lret
jmp
sbb
cs
add
adc
fstps
fwait
gs
pop
ja
sub
lock
call
dec
adc
add
sub
cwtl
push
ljmp
push
call
jbe
pop
aas
ret
loop
pop
xchg
dec
push
xor
push
push
fwait
clc
pop
out
out
into
xchg
jbe
add
int
in
rcr
jne
sbb
cmp
scas
pop
add
insb
dec
pop
cltd
or
pushf
jl
add
nop
xor
js
push
das
cmp
sub
jp
mov
cmc
cmpsb
or
outsb
and
shlb
sub
ret
inc
xchg
insb
mov
outsb
xor
jle
loopne
bound
jns
jns
aaa
pop
insb
loope
xor
gs
xchg
lds
push
xor
rol
sub
in
lea
dec
insl
sbb
out
push
jp
push
mov
mov
outsb
lret
push
sbb
lods
mov
mov
in
cmpsl
outsl
jle
stc
fwait
cs
fidivrs
sub
mov
cs
test
dec
cmp
mov
jo
push
shll
int
into
jge
xor
dec
push
push
cmp
mov
push
notl
stc
and
loope
pop
fcomps
sbb
mov
cs
ja
xor
cmpl
xchg
add
ret
jo
lahf
mov
sub
sbb
scas
fsub
sbb
idivl
arpl
sbb
jne
mov
sub
xor
adc
pop
cmp
mov
out
insl
fisttpl
outsl
lods
cltd
jge
xchg
shrl
outsb
xchg
pop
cmp
enter
and
inc
push
std
pop
fstps
jnp
xor
mov
dec
and
inc
or
std
dec
xchg
out
add
jp
or
fwait
test
hlt
in
inc
jno
or
dec
xor
ficompl
xor
push
mov
push
icebp
dec
jge
je
and
xchg
jg
stc
lods
push
ss
add
testl
add
mov
push
push
mov
xor
aas
and
push
or
lods
sub
xor
std
xor
add
push
push
xor
mov
das
xchg
mov
mov
dec
cs
frstor
sub
dec
cmp
fiadds
push
inc
insb
fldenv
cmp
cltd
scas
rol
clc
fisubs
test
sub
out
les
mov
hlt
jmp
data16
lock
xchg
es
loope
and
iret
xchg
les
adc
rorl
mov
push
push
testl
lods
fwait
cmp
loope
stos
loope
and
stos
es
mov
pop
mov
jg
ret
idivl
sub
ret
sbb
sub
push
jp
add
xchg
mov
push
lods
enter
jge
xchg
adc
add
orl
jns
dec
cli
loopne
aaa
shlb
mov
std
jns
sbb
leave
or
push
mov
jle
add
mov
lea
repz
xor
call
adc
mov
pusha
es
in
cmpsl
inc
repz
push
xor
mov
fsts
push
js
jecxz
mov
push
mov
sub
inc
xor
ss
cmp
or
pop
out
scas
sahf
push
sti
sbb
cmpsb
adc
call
inc
pop
inc
adc
inc
cmp
aam
aas
add
push
pop
push
mov
cmp
xor
js
mov
and
inc
rcll
push
add
insb
and
push
or
arpl
jbe
push
pop
push
xor
pop
xchg
andb
lret
popl
mov
aaa
movsl
adc
js
sarb
shlb
pushf
faddl
es
inc
add
or
and
pop
inc
addr16
iret
add
dec
inc
pop
xchg
rorl
or
pop
iret
scas
adc
cmp
stos
xor
fstps
out
stos
push
cli
xor
pop
mov
stos
scas
out
mov
push
addb
int
cwtl
mov
int3
movsl
movsb
scas
loopne
sbb
dec
popl
mov
mov
cmp
loope
push
test
xlat
cmp
pusha
mov
add
js
les
adc
loopne
lcall
fcmovnbe
and
hlt
std
ror
xchg
mov
shrb
arpl
in
cmp
aas
hlt
lret
int
mov
sbb
cli
ret
add
lcall
rolb
and
ja
pop
lods
xor
aaa
mov
cmp
fnstenv
insl
jne
fcoms
ficoms
test
sbb
popa
icebp
sub
or
mov
cmp
stos
sbb
xor
ret
add
adc
cmp
outsb
dec
loop
inc
daa
lods
bound
jg
pop
and
xor
fisttpl
cmp
dec
add
pop
dec
inc
out
das
mov
dec
add
xor
out
out
mov
sbb
test
loope
hlt
adc
adc
scas
js
test
xchg
cmpsl
push
sahf
sub
jne
or
orb
mov
mov
pop
aaa
cmp
pop
popa
or
xor
aaa
push
jmp
jecxz
adc
or
lods
das
jl
cs
scas
push
js
les
das
sbb
loope
scas
jo
pop
or
je
orb
pusha
fcomp
mov
repnz
sub
pop
mov
mov
and
add
lret
loopne
xchg
cmp
out
push
mov
add
in
clc
leave
notb
dec
and
shl
ror
out
inc
push
jns
push
and
cmp
push
push
mov
xor
push
push
out
call
mov
adc
xlat
daa
cltd
shrl
js
jnp
add
pop
call
aaa
das
fwait
jo
loop
cmpl
call
je
mov
adc
adc
mov
arpl
sub
and
mov
mov
push
sub
dec
fnstsw
mov
ds
int
js
icebp
bsr
xchg
lea
ljmp
add
inc
aad
arpl
mov
jp,pt
jge
xchg
push
jg
mov
xor
xor
jg
pushf
pop
popf
xor
lcall
out
xchg
jmp
sub
cmpsb
jae
inc
ror
aas
or
jae
mov
mov
push
dec
ljmp
sti
add
cmpsl
dec
pop
dec
lods
rol
adc
jno
or
in
add
insb
hlt
xlat
data16
dec
or
sub
xorl
mov
ret
xor
into
push
cmp
fwait
pop
sub
and
cmp
jno
and
fwait
or
pop
add
sbb
imul
rorl
pop
repnz
insb
inc
pop
adc
sub
mov
xchg
jmp
mov
xchg
test
insb
mov
icebp
ret
adc
push
mov
push
aad
movsb
in
dec
xchg
cmp
les
loope
jmp
lods
and
add
push
in
add
pop
fwait
adc
xchg
mov
xor
mov
mov
inc
mov
stos
call
adc
push
subl
leave
or
jo
adc
pop
mov
inc
jmp
fistpl
lock
ret
pop
jge
adc
cmp
or
add
or
cltd
out
out
and
test
adc
lods
fcmovne
jle
mov
push
cmpb
outsb
mov
nop
inc
fstpt
mov
clc
mov
fs
xchg
lds
andl
mov
ja
in
mov
cmp
ffreep
xor
xchg
shrl
jno
adc
stos
test
cmp
sbb
add
adc
mov
leave
inc
mov
imul
sbb
and
ret
jne
cmp
inc
jae
pop
inc
ds
dec
push
push
add
outsb
aas
mov
negb
loop
mov
push
js
mov
test
out
rol
inc
cmp
out
push
cmp
adc
push
and
int3
imul
and
fistps
pop
ss
int
adc
out
dec
push
arpl
jno
sbb
jl
gs
ret
pop
jns
mov
and
adc
mov
sbb
cs
int
jbe
incl
push
ret
push
xor
inc
cmpsb
pop
mov
sub
xchg
push
adc
push
daa
jl
dec
in
mov
addr16
das
lcall
insl
pop
jnp
xchg
inc
jge
mulb
sub
push
insb
inc
loope
sub
in
push
outsl
fiaddl
pusha
dec
dec
lcall
push
in
xor
sub
mov
dec
es
or
add
or
sti
jo
inc
mov
xor
repz
sub
cmp
enter
adc
jne
mov
repnz
movsl
xor
cmp
fistl
inc
std
hlt
sbb
jae
and
nop
mull
jns
lds
je
das
test
mov
mulb
pop
pop
adcb
aaa
xchg
push
outsl
hlt
inc
notl
xor
or
sbb
xchg
adcl
push
sbb
imulb
dec
cmp
lahf
movsl
outsb
push
fisubrs
cs
out
divl
sub
inc
cwtl
and
aam
mov
dec
out
in
test
xchg
nop
mov
xchg
sub
sbb
dec
xor
daa
sbb
inc
push
xlat
jge
icebp
dec
jbe
mov
inc
jne
jg
pop
inc
xor
sti
dec
scas
sub
xor
repz
jl
test
lock
loopne
push
sti
push
jmp
inc
mov
push
hlt
xchg
cmp
cmc
ljmp
cmpsl
lock
jecxz
test
cld
sub
jo
inc
movsl
adc
jo
scas
out
pushf
mov
outsl
sbb
pushf
pop
dec
add
movsb
aas
or
js
cmp
imul
imul
mov
dec
xor
mov
lcall
popa
xchg
or
sub
push
xor
sub
loop
std
bnd
xchg
mov
les
sub
hlt
lds
das
loopne
mov
cmp
mov
aam
dec
aas
fsubrs
adc
sti
cmp
pop
pop
sar
rcrb
stos
xchg
sub
sub
pop
and
nop
sbb
fs
fdivs
rolb
xchg
call
movsl
in
xor
ljmp
jbe
popa
adc
ds
jp
mov
cmp
mov
push
push
insb
xor
or
add
mov
cmc
fstpt
pop
xor
sub
pop
xor
pop
xchg
dec
hlt
jns
loopne
pushf
mov
mov
cli
fsubl
add
and
movsb
leave
xchg
and
dec
pop
inc
fsubrs
enter
pop
jne
orl
das
stc
lret
sbb
mov
ja
test
jge
icebp
or
rorl
sbb
xor
jno
mov
repz
insb
aas
cltd
scas
inc
ja
xor
or
lahf
repz
mov
addb
jne
subl
std
arpl
mov
xchg
pop
mov
addr16
dec
rol
sbb
aam
sbb
sti
xchg
test
xchg
cltd
ja
mov
mov
push
pop
inc
das
hlt
sbb
scas
lahf
adc
movb
or
loope
call
pop
or
xor
cmpsl
mov
xchg
adc
xchg
cmpsb
push
cld
mov
sub
fists
mov
in
stos
ret
dec
pop
imul
sbb
adc
sub
push
mov
push
pop
scas
xor
pushf
ret
xor
iret
cmpsl
imul
std
push
add
dec
mov
push
loop
or
push
inc
dec
and
lret
push
xor
dec
aad
mov
dec
xor
test
dec
jg
jecxz
push
xchg
leave
xchg
fcoms
fwait
ljmp
out
add
cmpsb
jmp
mov
addr16
add
adc
shlb
outsl
ret
mov
out
xchg
dec
and
and
cmp
scas
sbb
repz
sub
sbb
cld
int3
mov
fidivrl
jnp
jnp
xlat
mov
cmpl
pop
test
mov
xor
clc
lret
push
movsb
fstpt
ret
jmp
xor
or
sarl
inc
in
xor
vcmpps
shr
les
inc
aaa
push
iret
andb
in
mov
inc
lret
fmull
rcll
sbb
dec
pop
lods
push
sub
scas
xor
imul
xor
stos
adc
dec
repz
cmp
int
mov
push
std
xor
loop
fists
into
cli
out
fwait
mov
fists
int
sahf
aad
cmc
cld
push
loope
pushf
push
mov
sti
std
mov
adc
sub
loope
cld
adc
shrl
icebp
dec
push
pop
icebp
sti
lods
push
outsl
addl
xchg
xchg
pushw
fs
dec
xor
pop
js
jb
sti
adc
icebp
sub
sbb
pop
aam
mov
adcl
inc
push
icebp
sbb
ficompl
inc
fstp
ljmp
dec
push
sub
jno
out
mov
faddl
mov
rcll
loop
xor
sub
insb
jle
out
add
inc
inc
xlat
push
pop
popf
lock
or
imull
xor
sahf
add
jbe
in
out
ficoms
dec
shll
xor
outsl
push
mov
xor
out
rol
repz
in
lds
sbb
enter
repz
or
xor
xor
push
cld
sub
and
sti
or
outsb
push
cwtl
iret
cmp
xchg
adc
nop
pusha
lea
inc
adc
and
arpl
nop
test
fsincos
cmp
push
bound
iret
repnz
or
loope
mov
adc
mov
js
test
stc
mov
push
xorb
xchg
mov
cmp
xor
and
jbe
jp
sbb
pop
ficompl
and
test
cmp
outsb
sahf
hlt
mov
dec
cld
outsl
div
and
sbb
gs
adc
mov
fistpl
scas
dec
xor
adcb
cmp
mov
rcrl
into
push
shrl
dec
scas
popf
cmc
push
jbe
cmc
xchg
sub
out
sti
loope
outsb
add
xor
or
adc
inc
adc
add
imul
fwait
cmpsb
lds
dec
or
dec
sub
pop
fwait
into
imul
mov
test
jle
popf
fists
pop
clc
ja
jae
adc
daa
and
mov
popf
mov
dec
shll
mov
lea
add
loop
adc
mov
push
mov
das
inc
cmp
in
inc
xchg
mov
pop
sub
movsl
cli
sub
mov
mov
int3
int
in
jmp
out
rcl
sub
sbb
xchg
and
adc
inc
mov
lret
ljmp
xor
pop
push
and
aad
pusha
leave
cmp
rclb
dec
adc
into
inc
dec
cs
jmp
jg
jb
mov
sub
cltd
push
add
cwtl
fidivs
sbb
ljmp
mov
xchg
jne
popf
push
nop
mov
xchg
lret
adc
pop
inc
cmp
mov
std
inc
mov
cld
inc
xor
add
aaa
mov
arpl
push
out
pop
cmpsb
mov
ss
int3
mov
aad
or
bound
pop
mov
jne
add
sub
les
pop
mov
sbb
adc
dec
nop
lret
push
imul
cmp
adc
xor
cwtl
mov
mov
add
or
mov
cmc
xor
adcb
outsb
jge
adc
cmp
shll
ja
movsb
cmp
fistps
jmp
test
and
hlt
repz
cmp
es
fisubrs
aam
fistpl
data16
pop
adc
scas
into
rclb
aad
dec
ljmp
pop
les
loopne
xor
movsl
cli
mov
rorl
sub
faddl
mov
jno
loop
mov
loopne
in
jl
lahf
and
xor
call
inc
shll
xchg
roll
test
push
aas
ljmp
mov
jae
inc
mov
leave
movsb
daa
fistl
jg,pt
cmp
xchg
imul
ljmp
mov
sti
push
int3
dec
jg
in
test
cmp
push
jmp
push
xchg
div
jbe
xor
pushf
in
mov
not
push
std
push
mov
adc
jnp
fsubrl
inc
enter
sbb
in
test
pop
enter
xchg
jg
sub
xor
shlb
fsts
and
mov
das
lahf
movsb
jmp
xor
jns
xor
push
cli
jmp
mov
incl
jmp
sahf
in
add
shrl
shrb
imul
push
and
mov
arpl
insb
scas
pop
xchg
or
cmp
imul
sub
lcall
jno
push
fst
sub
orb
sbb
lock
es
mov
push
mov
mov
and
push
ret
inc
adcb
jo
andl
mov
test
out
lahf
mov
cmpsb
imul
les
pop
fwait
data16
jecxz
jle
cmp
xor
int
ljmp
push
lahf
mov
sbb
fcom
sbb
push
mov
pop
or
cmpsb
scas
sub
popf
mov
push
in
rcrl
xlat
out
leave
sub
inc
jg
cmp
xor
jnp
pusha
xchg
fwait
inc
jbe
dec
cwtl
out
xchg
cmp
mov
jcxz
mov
sub
add
xor
jno
push
mov
inc
or
daa
decl
rclb
nop
fistps
lahf
aam
ss
push
jmp
ja
rcrb
jg
les
aad
push
push
xchg
filds
dec
xlat
push
call
outsl
test
xor
das
ss
aam
es
mov
enter
popa
dec
cmp
add
push
inc
and
adc
insl
dec
nopl
cmc
lea
aad
incl
repnz
imul
cmpsl
clc
mov
je
cmp
lock
test
dec
pusha
pop
inc
insb
jb
jg
mov
repnz
dec
and
add
cs
imul
adc
ss
jl
stos
jo
jae
insl
out
fs
sbb
dec
test
rcrb
daa
cmpsb
sub
into
xchg
jb
scas
lcall
lea
jbe
mov
pop
aaa
mov
pop
fstpl
and
in
cli
push
add
dec
mov
pusha
xor
aam
xor
mov
enter
and
jnp
and
mov
addl
lret
add
pop
insl
sbb
movsb
pop
loope
xchg
mov
push
nop
cltd
subl
mov
lods
inc
shrb
inc
mov
cmpsl
fisttpl
dec
arpl
mov
pop
imul
fcomp
test
dec
mov
cli
dec
add
imulb
in
mov
ds
sahf
push
je
ja
mov
pop
mov
inc
mov
jne
fdivs
pop
addl
int
mov
sub
pop
scas
sbb
int
dec
mov
and
or
repz
and
xor
cli
pop
daa
in
daa
ljmp
add
popa
ss
call
jb
scas
xchg
in
in
and
imul
test
push
aam
jns
lret
mov
loope
or
sbb
xor
sahf
mov
cmp
scas
xchg
xor
or
sub
push
mov
mov
sar
jb
loop
cmp
jecxz
imul
repz
mov
adc
sbb
sub
pop
lahf
sub
mov
repnz
mov
ja
stc
fs
cmpsb
jp
shld
out
xchg
cmpsb
push
insl
xor
gs
or
fildl
sub
fisubrs
lods
icebp
mov
sub
push
fstps
xchg
addr16
mov
adc
inc
cld
and
and
push
mov
jg
mov
mov
xchg
fdivrp
arpl
jno
imul
je
aad
frstor
orb
xlat
ds
in
xor
jnp
push
mov
push
cld
mov
mov
mov
add
jmp
movsb
shl
bound
sub
lahf
push
pop
fisttpll
std
mov
jo
lds
push
or
push
push
mov
mov
insl
inc
inc
pop
scas
insb
out
mov
ja
aas
and
jns
adc
leave
ret
sub
cltd
mov
arpl
or
out
std
pop
dec
adc
repz
and
push
pop
pop
jno
mov
sbb
aad
mov
outsl
pop
mov
fisttpl
sub
test
loop
scas
mov
cmp
add
call
out
pop
push
lcall
push
mov
shr
aad
push
inc
popf
push
inc
mov
out
cltd
xchg
cmpb
mov
sbb
jl
dec
std
inc
rcll
sub
jnp
push
push
movsl
dec
inc
inc
mov
add
jno
pushf
je
dec
pop
xchg
repnz
mov
cmc
js
cld
imul
add
mov
addr16
into
or
movsl
movsb
std
sarl
mov
xor
pop
gs
lret
pop
into
and
cmp
mov
rolb
add
xchg
or
data16
aam
mov
ja
ret
sbb
dec
jns
sub
inc
js
lret
sbb
idivb
xor
rclb
stc
add
jecxz
mov
js
sub
aas
mov
bound
mov
cmp
and
mov
jo
push
mov
shll
sub
out
inc
dec
adc
sarl
fcoml
pop
adc
in
cmp
push
test
push
das
sbb
push
xchg
and
jno
cmp
sti
gs
pusha
xchg
ret
cltd
jp
cmpsb
adc
xchg
push
adc
mov
jmp
jne
test
pop
out
es
jp
mov
shrb
data16
setl
les
imul
ja
or
push
adc
call
sub
dec
das
ret
addr16
jmp
mov
xchg
in
xor
mov
sbb
les
inc
pop
pop
aam
addr16
dec
sbb
jbe
rcr
or
dec
jl
iret
dec
inc
mov
mov
loop
cli
notb
adc
pop
or
pop
mov
mov
adc
stc
test
mov
pop
out
lretw
nop
and
aam
hlt
inc
int
jnp
xor
jge
pushf
cmpsb
aam
fadd
mov
sub
jp
call
sbb
xor
add
jg
mov
out
mov
and
out
xchg
mov
out
fsubs
cmp
in
popf
outsb
loopne
sbb
dec
fnstsw
stos
sbb
orb
mov
ret
ja
mov
test
adc
incl
ss
jnp
cwtl
push
mov
aaa
les
bound
frstor
fimull
shlb
ret
or
and
mov
cmp
cmp
mov
aad
cmp
popa
in
test
jbe
adcl
mull
in
loop
push
xchg
test
jnp
cmpsb
jae
std
inc
jmp
das
enter
inc
sbb
pop
movsb
mov
stc
sahf
xchg
jge
test
cmp
xchg
insl
mov
pop
ret
cmpsb
aad
add
mov
addr16
and
push
xchg
add
pop
out
push
add
push
rep
inc
and
sub
jae
aas
push
ss
jae
movl
pop
jp
cld
add
dec
mov
mov
sbb
pushf
dec
dec
sbb
aam
fs
cmp
movsb
movsl
add
rep
cmpsb
jns
lods
cmc
lret
mov
xor
hlt
fstl
xchg
in
sarb
sub
mov
mov
icebp
add
mov
inc
mov
jg
mov
xchg
test
and
dec
push
loopne
cmp
mov
mov
mov
std
jmp
int3
jae
in
push
or
lock
stos
scas
mov
mov
mov
inc
shll
pop
mov
rcrb
mov
fsubr
sub
add
mov
aaa
std
mov
dec
adc
movsl
xchg
pop
pop
dec
push
imul
xchg
and
les
mov
and
and
cmp
pop
pop
sub
dec
push
fwait
movsl
mov
mov
popa
daa
icebp
cmpsl
jb
mov
push
repnz
push
out
adc
fwait
stos
fs
inc
add
inc
fiaddl
ljmp
dec
add
je
in
sub
mov
pop
int
mov
mov
aam
mov
pop
pop
lea
out
stc
mov
fmulp
fs
stos
add
jmp
xchg
lock
xchg
lock
sbb
xchg
data16
aad
outsl
loope
and
mov
push
cmpl
pushf
dec
out
mov
imul
ror
fwait
clc
pop
stc
inc
inc
jecxz
ljmp
dec
les
sbb
cld
int3
stc
inc
out
mov
cltd
mov
std
sbb
imul
mov
pop
mov
or
pop
xor
xchg
or
ss
dec
divb
jbe
mov
sbb
inc
sub
jecxz
lock
sub
dec
imul
sbb
push
in
int3
mov
or
and
add
mov
cmpsl
sub
mov
push
leave
dec
ljmp
inc
lret
xchg
jae
mov
outsl
mov
movsb
ret
lea
mov
jl
dec
inc
std
push
in
addb
cli
jnp
sbb
scas
xchg
jle
push
shrb
adc
mov
sub
mov
dec
fstpt
in
lret
lods
pusha
sbbb
adc
in
lods
mov
push
stos
push
dec
shrb
mov
pop
popa
mov
jl
repnz
cmc
fsubr
mov
mov
xor
xor
mov
pop
add
lock
fs
jg
cmc
cltd
push
jl
out
push
sbb
add
adc
outsb
xor
dec
push
out
repz
sub
es
scas
xchg
cwtl
mov
pop
push
and
or
fisubrs
scas
push
repnz
popf
pop
push
aam
cwtl
leave
xor
je
sbb
adc
lods
mov
je
clc
insb
stos
dec
loop
jmp
xchg
add
push
mov
sbb
jle
and
push
dec
movsb
mov
test
mov
xchg
loop
push
cltd
clc
mov
cwtl
mov
add
sub
test
xor
cmp
call
adc
mov
or
mov
bound
adc
mov
and
sub
hlt
mul
xor
mov
jge
xor
jbe
lock
add
call
out
mov
and
pop
mov
inc
push
test
adc
fidivs
sub
dec
das
add
mov
sub
repz
mov
or
jg
mov
mov
or
sbb
pop
xorl
cmp
insl
adc
jge
lods
jae
or
popa
mov
stos
fnstsw
jnp
addr16
or
xchg
xchg
aam
std
xchg
and
lea
pop
lcall
lret
push
push
out
mov
jne
add
push
inc
imul
loope
ss
cmp
adc
cmc
mov
out
sbb
add
mov
pop
or
in
mov
sbb
jle
dec
and
jne
mov
movsb
outsl
mov
jb
sti
push
push
stos
mov
imul
inc
movsl
movsb
daa
mov
xchg
adc
mov
sbb
popl
push
xor
inc
cmp
and
leave
mov
imul
sub
lcall
inc
xor
sbb
add
out
call
test
push
outsl
push
shlb
cmp
mov
mov
fdivs
inc
jge
js
lock
je
adc
fs
fwait
fwait
and
insl
test
push
jge
jno
add
sub
mov
push
in
arpl
xor
xchg
mov
outsb
clc
and
inc
jno
mov
sbb
mov
ret
sub
or
mov
jmp
push
sbb
mov
insb
cltd
cwtl
jg
mov
push
repnz
xchg
mov
xchg
mov
stos
push
scas
pop
xor
frndint
jno
pop
cs
inc
lds
xchg
ss
ds
xchg
ror
ss
mov
aad
push
jmp
jg
xchg
mov
push
or
xchg
aaa
stc
lret
stos
jl
iret
imul
cli
cmp
cwtl
cltd
fbld
loope
sti
cmp
xchg
sbb
mov
mov
xchg
aaa
xchg
push
shlb
std
or
push
mov
lret
push
inc
fstpt
fnsave
sbb
inc
movsb
fildll
jae
rolb
mov
xor
mov
push
pop
hlt
xor
in
cli
sahf
shlb
mov
test
add
sub
jns
in
mov
leave
mov
sbb
out
loope
shl
shlb
insb
mov
jo
or
rolb
cwtl
and
test
lods
push
stos
xchg
sbb
adc
fidivs
sti
add
cs
cmp
addl
xchg
mov
data16
loop,pn
lock
jb
and
cmp
mov
gs
add
cmpb
test
mov
inc
leave
mov
out
or
mov
xor
xchg
mov
sahf
daa
cwtl
push
sti
out
sbb
and
in
cmp
or
jae
mov
pop
fcoms
cmp
inc
out
cld
lods
ret
adc
daa
xchg
mov
pop
mov
js
push
int
loope
or
lods
dec
pusha
test
bound
mov
scas
mov
xor
pushf
in
por
xor
shll
lea
xorb
sub
or
pop
sti
mov
lret
jmp
subb
xchg
repz
orl
ret
mov
adcl
cmp
fisubrs
mov
inc
ja
inc
lds
fists
dec
mov
sub
cli
sbb
jecxz
fnstenv
shlb
cmp
stos
in
cld
cmp
int
cmp
in
push
push
adc
jbe
push
sti
insb
sub
mov
jp
xchg
xchg
jae
mov
stos
scas
mov
xchg
xchg
cmp
rclb
add
or
lcall
dec
cltd
push
rol
lahf
inc
sahf
shlb
sbb
loop
mov
mov
push
xor
in
xchg
xchg
sti
jp
leave
sarl
xor
gs
adc
mov
or
les
fucom
mov
mov
mov
pop
js
inc
out
fsubs
fsubrp
pop
test
mov
lea
lods
orl
push
test
stos
mov
lcall
mov
mov
push
rorb
mov
data16
sub
and
adc
lods
sub
push
in
or
xchg
aam
movsb
mov
xor
or
sbb
sbb
aaa
fistps
arpl
inc
fwait
jecxz
mov
rcrb
mov
jge
aam
mov
ror
cmp
ss
jb
les
sbb
sarl
inc
mov
les
xor
aaa
pop
aas
pop
loope
lods
les
jge
mov
jl
fdivr
nop
cmp
mov
mov
popa
push
adc
imul
lret
aas
inc
jo
push
stos
loop
inc
fdivl
insl
lret
je
insl
mov
mov
cs
mov
clc
pop
adc
and
pop
xor
cli
and
and
add
rcr
imul
push
push
insb
pop
pushw
repnz
push
sub
in
rclb
xchg
or
cmp
xchg
add
pushf
out
add
ret
ds
rcr
pop
cmpsb
mov
lret
or
hlt
or
daa
mov
xchg
and
xchg
push
mov
data16
jbe
lea
jbe
or
test
sub
sbb
cmc
pop
add
ret
inc
push
cmpsb
mov
test
inc
and
push
ds
stos
cmpsb
jge
jle
dec
cli
add
push
ds
mov
andl
xor
stos
mov
push
pop
lcall
int3
dec
mulb
repz
adc
popf
pusha
sub
sub
xor
jl
out
lret
mov
push
rolb
jno
ja
dec
bound
repz
xor
lock
push
sbb
fstl
hlt
xchg
call
popa
lods
inc
pop
fcom
cmp
int
inc
fstl
inc
repz
inc
lods
rclb
adc
sti
bound
pop
sub
sub
rcl
out
xchg
mov
jg
decb
repnz
dec
dec
stos
scas
adcl
rclb
inc
mov
cmpsl
rcrb
clc
xor
xor
fwait
jne
jbe
mov
xchg
mov
divb
cmp
fildll
das
jbe
jle
mov
xchg
pop
std
jb
sub
sbb
test
or
lret
xor
add
int
nop
mov
in
js
mov
inc
dec
push
ja
fcom
ss
loopne
repnz
pusha
jno
jl
orb
adc
fidivrs
movsb
xlat
sti
ret
ds
xor
adc
mov
in
push
adc
aad
int
mov
nop
sub
lods
cmp
movsl
dec
adc
cmp
xor
xor
jae
xchg
cld
mov
xchg
outsb
hlt
pop
je
andl
mov
sub
ljmp
insl
popa
enter
sub
or
gs
lods
sbb
call
std
es
add
xchg
or
je
stc
shll
sbb
xchg
dec
xchg
rcrb
lock
push
mov
cmp
pop
nop
enter
es
mov
add
in
lods
and
shrb
rolb
loop
hlt
adc
cmpsl
movsb
pop
and
sahf
pushf
push
lods
pop
mov
mov
cmpsb
scas
arpl
mov
dec
stos
out
cmp
xchg
cmpsb
sbb
int3
out
sub
lret
lock
sbb
pop
mov
iret
cld
jbe
push
call
adc
mov
pop
addr16
not
push
xchg
mov
dec
dec
pop
in
ja
test
pop
mov
mov
popf
cltd
stc
and
mov
xor
lods
enter
aas
jle
in
push
pop
insl
mov
js
iret
mov
or
jecxz
push
ret
popa
mov
fldcw
lds
imulb
xchg
jg
pop
cmc
jo
sbb
psrlw
cmp
pop
or
xchg
leave
sbb
aam
sub
cmc
movsb
inc
push
pcmpgtb
int
fcompl
add
lcall
cmp
jg
addr16
xor
xchg
adc
es
call
sub
sti
lods
adc
xor
divb
or
jno
jmp
les
pop
outsl
push
mov
int3
in
and
int
int3
sar
push
gs
sbb
pop
cmp
push
sbbb
xchg
and
mov
outsb
sbb
pop
pop
cmp
stos
hlt
into
notb
adc
cli
orb
arpl
rorl
inc
aas
vmulss
aaa
add
xor
loopne
fcoms
pop
fnstenv
push
xor
es
sub
sub
inc
dec
xchg
push
xchg
adc
push
js
pop
adc
pop
mov
and
aas
shlb
mov
loopne
cmpsb
outsl
push
jae
mov
repnz
fisubrs
sub
in
jne
addb
mov
faddp
lcall
xchg
mov
je
test
xchg
das
lods
mov
jl
adc
sbb
sbb
scas
cmc
jb
mov
or
dec
lret
push
mov
call
jo
adc
sbb
xor
adc
inc
sbb
fnstcw
and
test
mov
pusha
mov
xor
inc
test
xchg
pop
ds
jns
je
ret
shlb
mov
idivl
test
pop
nop
sub
cwtl
mov
xor
repnz
push
inc
leave
lods
idivb
cmpsb
fists
lea
mov
push
sbb
dec
ds
xchg
ljmp
cmc
xor
mov
and
mov
and
cwtl
mov
lods
cmp
fnstenv
push
cmp
adc
xchg
test
jae
jg
ljmp
xor
or
leave
mov
add
cltd
jno
rorl
mov
push
repnz
mov
xor
or
lret
ss
mov
mov
ss
inc
pusha
push
sub
pop
fbld
jp
jp
nop
lret
fdivs
fsts
push
cwtl
rorl
repz
xor
sarb
xor
pop
rclb
add
popa
dec
cli
mov
add
out
pop
repz
pop
repz
or
xchg
lock
cmp
aam
fcompl
mov
mov
hlt
js
aaa
mov
sbb
lds
cmc
inc
push
clc
call
fistpl
or
lds
push
aad
jmp
hlt
lods
fucom
mov
orl
insb
xchg
cld
cmc
pop
adc
xchg
les
clc
jnp
cmpsl
jp
push
inc
repnz
xchg
mov
mov
pop
dec
push
or
pop
imul
in
lcall
std
shlb
call
loopne
ret
and
in
and
aam
jmp
pop
add
int3
xchg
in
add
daa
sub
loopne
cmpsl
cmpsl
mov
mov
je
mov
out
lret
mov
inc
xchg
insb
and
leave
mov
pop
jbe
jecxz
jge
lea
gs
popf
stc
adc
rcl
in
xlat
mov
ljmp
movsl
and
fs
orl
aas
imul
xor
push
lea
mov
cmpsl
in
pushf
aad
adc
mov
inc
data16
ja
mov
dec
outsb
or
or
pop
mov
sti
leave
push
or
push
hlt
movsl
mov
xchg
push
cmc
push
mov
out
das
repz
js
or
inc
mov
jne
or
xchg
pop
xchg
mov
outsl
cmp
and
outsl
loope
cltd
cmp
out
cmp
ja
pop
mov
sbb
add
sub
stos
outsb
test
int3
movsl
jne
jle
push
fisubl
push
pop
and
push
inc
sub
and
cltd
push
ret
inc
lea
adc
aaa
leave
nop
pop
pop
adc
orl
and
ljmp
sbb
repz
push
mov
pop
fmuls
mov
fs
sub
fs
idivb
rorl
pop
shll
cs
daa
jg
repz
xchg
addr16
mov
pusha
movsl
ret
inc
mov
addb
mov
mov
jle
mov
in
imul
aas
frstor
push
sbbb
lcall
jmp
or
mov
dec
xchg
jae
pop
mov
xchg
sbb
mov
push
xor
test
sub
testb
call
loope
js
fwait
std
ja
call
push
push
ret
aad
push
and
idivl
xchg
in
stos
dec
jecxz
pop
int
sub
xor
out
popa
outsl
push
and
jne
and
loop
push
gs
pop
sbbl
jp
scas
sbb
int
xor
std
dec
sbb
out
pop
xor
int
out
or
imul
ja
std
xor
cmp
xchg
icebp
mov
or
repnz
and
roll
xlat
popa
mov
daa
or
les
pop
and
sub
fsts
push
and
sub
in
ja
pop
mov
mov
mov
add
lea
inc
scas
icebp
in
imul
xchg
ds
je
int
cmpsb
push
jge
push
dec
stos
mov
es
xchg
or
and
mov
pop
and
cmp
pop
jecxz
pop
lds
and
and
insl
divb
xchg
scas
dec
dec
pop
or
int3
shrl
dec
or
mov
xchg
dec
rol
push
pop
gs
sbb
adc
cltd
cmp
test
mov
xchg
ja
lahf
ljmp
fnstcw
lea
sub
data16
sbb
test
lahf
mov
decl
repz
ljmp
das
stos
inc
lcall
adc
scas
aam
ret
jno
dec
lcall
and
adc
jp
imulb
stos
sbb
addb
imul
ja
lahf
jg
iret
adc
cli
std
pop
or
sub
fistpll
loope
mov
insl
mov
sbb
pop
or
addr16
outsb
sbb
xlat
mov
push
lret
cwtl
xchg
je
movsl
cmpsl
out
in
jnp
adc
int3
dec
pop
stos
jle
inc
sub
xchg
jp
push
push
cmpsb
in
scas
mov
ds
fnsave
push
push
jl
adc
stc
les
pop
call
cmp
fld
pushf
add
sub
and
aaa
mov
cmp
sub
push
mov
or
sbb
or
les
cld
add
in
lret
add
sub
mov
and
ret
xchg
mov
inc
pop
mov
stc
in
test
xorl
repz
in
pop
mov
jb
rorl
popf
in
sub
mov
sbb
call
or
fisttpll
or
pop
xor
loope
sahf
in
and
fstl
and
push
loope,pn
sub
loope
clc
int
mov
pop
adc
pop
lcall
adc
xchg
pop
enter
nop
mov
mov
insb
je
pop
mov
jl
fstpl
jge
popl
jne
push
movsl
xor
inc
pop
cmp
movsl
push
jmp
push
dec
mov
push
outsl
test
in
mov
cmp
in
repz
mov
fnstenv
xchg
loop
and
scas
inc
xchg
loope
mov
jmp
pop
bound
out
push
and
cwtl
lds
cli
adc
jbe
loopne
mov
aaa
sbb
outsl
jo
xor
scas
adc
and
out
mov
movsl
jne
inc
add
movb
aam
sub
mov
sub
sbb
inc
add
decb
fbld
mov
in
xchg
insb
outsl
jp
push
lret
cmpsl
fdiv
ljmp
popa
and
push
cmc
or
pop
lods
xor
enter
adc
mov
lods
pop
mov
xchg
push
popf
add
sahf
daa
mov
pop
stos
lods
mov
jmp
push
mov
dec
std
xchg
mov
mov
arpl
sbb
cmp
je
xchg
sub
and
xchg
negb
mov
add
aam
sarb
pop
call
xchg
jp
popa
mov
aam
pop
and
mull
test
test
adc
add
sub
mov
xchg
or
cltd
and
cwtl
jae
into
mov
adc
testl
mov
inc
mov
outsl
loopne
xor
push
jmp
and
xchg
add
sub
es
scas
xor
mov
pop
push
add
jae
add
push
out
mov
pop
jne
sub
sahf
push
into
fnstsw
dec
adc
mov
jl
pop
sub
mov
or
cld
fsubrs
jle
fucomi
or
sub
xchg
adc
push
jl
sub
sbb
loopne
sub
rcl
mov
add
pop
cmp
sbb
xor
and
out
sub
or
push
push
mov
icebp
mov
mov
flds
jnp
adcb
popa
jne
aam
add
fdivs
aas
xor
jmp
pusha
fidivs
lock
lock
dec
sub
mov
dec
mov
pusha
mov
out
pop
lcall
bound
scas
cld
lret
and
enter
test
hlt
jo
movsl
cmp
in
into
aaa
adcb
sbbl
mov
mov
cli
mov
int3
add
arpl
popa
pop
into
cmp
insb
mov
sub
cmp
pop
mov
push
movsb
sbbb
push
cmp
mov
aaa
out
mov
adc
imulb
jae
sub
rorl
sbb
cmc
popf
xchg
sar
fimuls
mov
dec
or
adc
repnz
std
push
fadds
jae
sbb
shr
sbb
fmuls
jle
sbb
cltd
xchg
into
xor
lret
je
cwtl
loop
ficompl
popf
jmp
lret
pop
cwtl
mov
int
fdiv
mov
xchg
or
xchg
jle
add
mov
ret
dec
and
pop
inc
sbb
outsl
lret
fdivrs
push
loope
push
imul
insl
je
jbe
mov
out
punpckhwd
sarl
imul
rorb
mov
ja
insl
fsubr
jo
dec
jl
push
lock
pop
or
enter
testl
inc
mov
rcrb
insl
mov
mov
mov
push
js
add
sbb
in
cltd
out
lahf
jae
aam
inc
addr16
fists
and
pop
pop
fwait
or
data16
icebp
pop
ficompl
jbe
push
mov
adc
in
mov
add
jnp
hlt
and
enter
roll
pop
adc
pop
idivb
pop
mov
lea
jl
push
cld
cwtl
jl
dec
xchg
lret
adc
dec
orl
pusha
sbb
fsubrp
stos
mov
jmp
xor
xchg
pop
leave
loopne
mov
mov
out
dec
les
and
scas
and
xchg
pop
or
pop
mov
lods
push
fucomi
inc
out
fwait
xor
insb
lods
jmp
adc
stos
dec
aaa
mov
xchg
cmpsl
inc
divl
loop
jns
inc
or
stos
fxch
sub
xor
mov
arpl
movsb
sub
jle
mov
data16
xor
stos
outsl
push
cmc
paddusw
add
stos
pop
fwait
add
push
lret
rorl
icebp
out
mov
xor
mov
sub
insb
inc
xorl
mov
mov
xor
dec
mov
lcall
xchg
mov
cltd
sbb
cld
aad
mov
sbb
xchg
lahf
and
gs
pop
jae
adc
mov
insl
rcr
mov
pop
cmpsl
dec
push
ficomps
aam
nop
in
jae
lock
jmp
pusha
sahf
rolb
push
pop
cmp
sub
bnd
mov
int
sbbl
cmp
xor
orb
popf
rcrb
xchg
movsl
xor
and
or
sbb
test
dec
scas
inc
aas
movsl
xchg
jno
push
sbb
mov
xor
dec
mov
imulb
jmp
push
aas
xchg
sbb
icebp
push
adc
jmp
jp
dec
shrl
outsb
cmpsb
adc
pop
iret
adc
or
and
ret
fisubrl
int3
xor
dec
lcall
sbb
pop
ficoms
adc
js
leave
add
pusha
mov
cmpsb
repz
stos
push
neg
or
xor
add
xchg
add
pop
dec
pop
jg
test
add
fdivrl
lret
inc
int
xor
xchg
sbb
mov
ficomps
jg
fisttps
mov
loop
pop
add
mov
cmp
out
fs
inc
dec
inc
push
and
jp
std
es
and
jns
dec
lret
stos
cmpsl
je
aad
cmp
mov
pop
push
inc
push
lds
jp
subl
fdivp
or
cli
sbb
and
lea
and
loope
jnp
lret
fistpll
dec
rolb
or
xchg
test
jb
pusha
pop
push
scas
push
xchg
inc
fs
xchg
mov
xchg
lret
xorl
aaa
mov
pusha
daa
bound
jne
popa
fwait
scas
xchg
outsb
adc
add
cmp
dec
out
cmp
popa
fadds
dec
adc
shlb
imul
sub
adc
push
mov
sub
rcrl
mov
imul
daa
adc
repnz
cs
cmp
les
jmp
cmp
lods
adc
lds
shll
lock
ret
jecxz
movsl
and
cmp
inc
je
or
outsb
in
lcall
sbb
rclb
int
lcall
sbb
mov
dec
pop
xchg
in
fcompl
dec
push
and
mov
push
inc
iret
stc
in
cmp
sub
int3
pop
mov
cmp
repz
mov
pop
sbb
rcrb
push
sbb
push
pop
dec
out
xchg
mov
jge
lods
push
repnz
jnp
and
cmp
popf
into
mov
popa
sti
pop
int3
or
jmp
out
push
icebp
xor
les
insl
gs
movsl
jb
sbb
rorl
test
jg
adc
sub
iret
xchg
push
ficomps
mov
cmp
daa
add
xor
jb
mov
hlt
mov
jns
mov
loope
sbb
sub
into
in
movsb
sbb
mov
mov
push
adc
sbb
ss
and
and
push
out
test
js
inc
sbb
aad
mov
iret
cmp
xor
fdivl
jg
mov
cmc
aaa
sub
inc
notl
imul
das
in
mov
test
scas
or
cmp
out
fadd
pop
pusha
and
and
lea
sub
fcomps
shlb
mov
outsl
dec
push
sub
in
mov
adc
call
cli
push
or
or
dec
loop
mov
jb
jns
pop
imul
rolb
xor
adc
aas
dec
adc
push
mov
pavgw
inc
mov
jno
std
outsb
outsb
stos
test
fdiv
sub
mov
mov
pop
mov
mov
xor
clc
stc
std
adc
mov
pop
shlb
mov
out
ds
movsb
aaa
xadd
inc
push
pop
xchg
scas
pop
jno
fistps
clc
popf
loopne
push
data16
ds
xor
xlat
dec
call
in
mov
movsl
or
cmp
push
in
mov
cld
inc
mov
lahf
movb
insb
cmp
fildl
dec
add
test
aad
sbb
xchg
mov
inc
inc
enter
incb
jnp
cld
mov
cs
sub
dec
adc
jl
fstpt
dec
mov
sub
and
jb
push
call
cmp
pop
mov
nop
inc
cmp
stos
dec
shld
sbb
and
mov
push
dec
mov
out
mov
pop
in
cmpsb
clc
sbb
insb
push
xchg
inc
lret
add
lahf
sub
mov
push
dec
sbb
es
out
fldenv
cmpsb
data16
jbe
rcr
dec
sbb
repnz
out
mov
push
out
inc
rorb
mov
xor
sahf
pop
xor
cmp
daa
mov
repnz
fidivrl
in
or
insb
je
call
pop
jl
xor
cmp
test
nop
mov
ds
xchg
scas
cmpsb
bound
subb
and
xchg
or
or
pop
adc
mov
fisttps
xchg
xchg
cmc
or
mov
inc
inc
push
sub
cmpb
sub
test
inc
inc
pusha
aas
mov
mov
stos
rcrl
xchg
imulb
pop
adc
fwait
cmc
test
pop
fwait
shlb
inc
and
loope
add
loopne
repz
sub
pop
add
sbbl
ja
cltd
add
or
ja
loope
sub
in
cmp
in
pop
lock
mov
lret
and
ljmp
cwtl
mov
xor
out
popf
sbb
popf
in
lahf
mov
add
pop
adc
cmp
or
jbe
inc
mov
dec
jecxz
in
das
xor
stos
dec
out
lret
mov
mov
rcrb
mov
in
insl
and
or
push
mov
leave
mov
shr
insb
sbb
je
mov
cmpsb
sub
es
mov
popa
push
and
call
jmp
adc
jns
jnp
adc
mov
jp
or
std
mov
das
shr
sub
addr16
lret
hlt
std
dec
sub
inc
mov
loope
mov
xor
push
and
loop
sbb
mov
xlat
int3
adc
dec
mov
sub
push
jb
xchg
cmpsl
mov
and
nop
add
sahf
test
cmp
add
in
sbb
sub
in
sub
mov
inc
mov
loopne
cmp
sub
ljmp
in
mov
lret
es
fnstsw
scas
loopne
pop
mov
or
adc
push
pop
paddsw
pop
lds
in
subl
add
stc
ffreep
add
fadds
movb
scas
xor
xchg
pusha
imul
jl
mov
dec
or
sub
js
in
ret
movsl
sti
mov
pop
and
icebp
outsb
iret
jno
inc
cmp
pop
jae
cmp
xchg
rol
iret
sbb
inc
push
push
dec
xlat
dec
jecxz
pop
testl
cmpsb
jg
push
orb
pushf
lods
mov
cmp
push
lods
arpl
mov
leave
cmp
sti
lods
pop
int3
xchg
test
mov
dec
es
push
cli
iret
inc
xchg
add
mov
mov
comiss
add
rorb
js
nop
jp
pop
pop
cmpsb
mov
jae
push
mov
add
pop
add
jo
imul
or
mov
xchg
mov
fdivrs
loop
aaa
push
mov
cltd
inc
das
sbb
nop
rcrl
in
mov
sbb
out
dec
sbb
sar
jge
adc
daa
std
lret
mov
stc
insl
daa
out
mov
pop
sub
fcompl
add
test
mov
mov
lods
test
addr16
aas
pusha
jnp
push
sub
mov
adc
out
pop
push
and
pop
mov
xor
pop
mov
xchg
sub
test
hlt
into
inc
enter
fdivrs
inc
sub
add
inc
sub
inc
out
ss
adc
xlat
sarl
lret
icebp
addr16
and
xchg
mov
inc
int3
loopne
mov
and
lcall
hlt
pop
leave
jecxz
mov
and
test
cwtl
ljmp
stos
mov
fsubl
dec
int3
pop
mov
push
jo
nop
xor
int3
mov
es
imul
rcr
inc
in
fisttps
aaa
icebp
mov
push
mov
jo
or
jl
fwait
lods
xchg
roll
mov
push
jns
mov
adc
inc
or
jo
add
scas
pop
mov
cmpsl
and
hlt
fbld
outsl
in
jns
mov
sbb
mov
decb
es
pop
sub
cmp
aas
and
adc
cmp
mov
sub
xor
aam
mov
push
inc
ss
sub
xchg
fs
adcl
jnp
cld
fistpll
xor
fdivr
add
mov
fwait
xlat
outsb
cmp
mov
jmp
xchg
xchg
pop
daa
daa
insl
das
sbb
push
ror
out
inc
jecxz
xchg
or
aad
stc
idiv
dec
lds
xchg
mov
addr16
mov
loope
leave
sub
popf
mov
ret
jl
pushf
or
adc
mov
jbe,pn
push
inc
sbb
pop
and
adc
mov
sahf
add
jg
sub
lret
jmp
cmp
vmread
push
mov
std
jmp
in
adc
push
or
xchg
cmpsb
jne
cmp
pushf
sub
andl
pop
sbb
repnz
rorl
subb
mov
std
shrb
insl
das
in
mov
enter
dec
cmovae
mov
add
mov
adc
jnp
adc
movzbl
mov
mov
lods
int
idivl
add
jmp
and
mov
loopne
dec
arpl
mov
imul
sbb
jge
xchg
fcmovne
jge
xor
dec
in
daa
ljmp
call
cli
and
adc
pop
mov
sar
push
add
or
and
xor
lods
out
ror
pop
inc
jg
push
test
sbb
out
add
lea
fs
add
dec
push
out
bound
lods
jnp
pop
dec
cld
cmp
or
add
sbb
insb
jo
adc
repz
add
movsl
sub
mov
loopne
sub
stc
or
lahf
inc
push
rcrl
cmp
aas
lea
pop
loope
pop
mov
mov
push
sub
xchg
adc
push
mov
lods
es
sbb
jnp
popf
setle
inc
jb
push
or
and
cwtl
inc
pop
and
in
mov
lods
mov
nop
mov
lds
push
jmp
int
in
and
shrb
inc
fstpl
push
test
ds
push
jmp
scas
xlat
mov
sbb
sarl
mov
mov
lahf
or
push
sub
lods
scas
sub
cs
rcl
and
add
xor
sub
cmp
dec
sub
mov
das
aad
jnp
dec
inc
into
adc
lea
scas
inc
cmp
pop
insl
pop
cmp
movsl
fsubr
pop
sar
and
pop
pop
pop
data16
lds
sub
shlb
int3
repz
loopne
popf
xchg
shrl
out
add
gs
sbb
xchg
lods
mov
mov
pop
icebp
pop
xchg
jbe
lock
xor
xrelease
insb
push
push
out
mov
nop
mov
push
mov
lea
xchg
inc
and
push
ljmp
pop
test
mov
jle
aas
xchg
xor
pop
cli
outsb
push
lcall
jp
js
shl
mov
sbb
push
mov
add
in
popf
push
lea
cmp
xchg
and
add
inc
ret
ficoms
inc
pop
adc
sub
push
pop
push
adc
sbb
popf
and
movsb
or
jl
mov
test
inc
sbb
xchg
xlat
xchg
adc
fisttpl
or
into
mov
jl
jno
sub
jne
cmp
sahf
clc
xor
cld
bnd
in
ret
cmc
out
sub
dec
sub
dec
xor
xchg
push
cld
mov
lea
sbb
imul
aad
xlat
cmpb
push
or
int3
sti
das
sbb
mov
pop
sbb
push
out
lret
idivl
hlt
test
fidivrs
sbb
rorb
dec
sub
mov
cmc
orl
adc
mov
add
or
mov
loope
push
fs
inc
outsb
jnp
add
popf
movsb
int
lods
stc
test
lods
in
out
xor
insb
push
push
iret
cmpsb
mov
das
sti
popf
mov
pop
mov
nop
ja
outsb
fmull
xor
scas
xchg
mov
dec
arpl
pop
cli
shll
push
xchg
scas
inc
xchg
lods
pop
in
xor
lahf
aaa
mov
or
out
add
test
lret
icebp
sbb
adc
or
inc
movsb
jl
addr16
jecxz
inc
test
push
fisubrl
mov
das
adc
xor
mov
inc
mov
mov
push
inc
jne
xchg
sub
pop
sbb
mov
pushf
inc
pop
dec
lret
push
cltd
repnz
cmp
mov
mov
popf
cmp
jmp
xchg
xor
std
inc
dec
in
adc
push
cmpsb
xchg
jg
paddsw
mov
dec
push
stc
insb
aaa
push
out
fldt
scas
inc
sub
out
call
stc
insb
sub
out
fldcw
cmp
js
es
pop
pop
push
mov
data16
aam
add
insb
dec
cli
fwait
cs
jecxz
icebp
jecxz
lcall
fiaddl
xor
xchg
in
out
pop
lods
mov
adc
mov
rcrb
in
lahf
cmp
inc
cli
dec
jns
pop
cmp
stos
into
or
pusha
cmp
fwait
movsb
add
adc
aas
mov
or
adc
fmull
jnp
out
in
push
enter
int
popa
inc
xor
aad
or
insl
sbb
mov
daa
insb
call
pop
xor
cltd
jb
sbb
xchg
std
test
xlat
loope
sbb
sbb
scas
rorl
pop
sub
push
cs
jmp
jmp
aam
pop
push
lret
mov
xor
mov
dec
lahf
inc
cld
inc
mov
xchg
clc
inc
aad
push
lds
outsb
divl
mov
lcall
arpl
xor
pop
mov
sub
push
adc
adc
int3
add
push
xchg
out
pop
or
das
sub
outsl
stc
xor
sbb
rcr
call
inc
mov
pop
aas
lods
cld
nop
and
movsl
sbb
lret
shl
add
imul
mov
pop
jnp
fs
sbb
pop
je
add
outsb
aaa
dec
imul
xlat
addr16
or
and
lret
and
ljmp
dec
test
movsb
sbbb
xchg
psrlw
mov
mov
mov
int
jno
sahf
cltd
iret
add
inc
mov
out
ja
test
pop
sub
nop
cs
xchg
sbb
lds
pop
outsw
inc
cmp
mov
pop
cmpsb
jno
jbe
mov
test
and
lcall
int3
sbb
arpl
dec
mov
mov
dec
cmpsl
addr16
in
xlat
add
addb
mov
cmpsl
stos
fdivl
pushaw
loope
arpl
fcos
scas
pusha
mov
repz
cmc
ret
push
mov
icebp
fimuls
pop
sbb
bound
xlat
icebp
into
fdivl
repz
repz
and
sbb
and
scas
pop
fnstsw
out
leave
jbe
call
and
scas
cmp
sbb
pushf
cmpsl
mov
push
aaa
les
pop
lock
nop
mov
loop
testb
sub
adc
xor
sbb
lcall
cmp
adc
jo
inc
dec
mov
adc
insl
decb
add
sbb
insl
mov
cmp
sbb
xchg
shlb
out
adc
dec
bound
sub
arpl
dec
hlt
jmp
test
mov
enter
mov
inc
mov
dec
inc
xchg
loope
cmp
outsl
dec
sbb
out
outsl
mov
fsubr
push
fistl
mov
dec
adc
popa
pop
inc
xor
mov
inc
nop
jnp
mov
ja
sub
orl
test
and
arpl
add
leave
dec
enter
cs
outsb
sub
cmc
out
imul
shrb
pop
mov
test
push
mov
ss
adc
fsub
div
ficomps
mov
rorl
mov
push
dec
xchg
push
cltd
mov
xchg
lahf
rsm
and
scas
out
cmp
lret
sub
addr16
mov
mov
cs
inc
or
roll
xor
mov
jno
and
test
push
shr
sub
mov
ror
jo
mov
pop
cmc
jo,pt
arpl
jbe
and
mov
pop
nop
mov
or
movsl
adc
adc
jo
jmp
repnz
wbinvd
test
repz
mov
or
clc
shlb
lods
inc
fwait
mov
out
adc
inc
cmpb
jne
fiaddl
mov
sbbl
jne
sbb
popf
lcall
jns
jne
andb
cwtl
xor
xor
sbb
insb
imul
jge
cmpsl
mov
xchg
call
mov
inc
sbb
or
movb
rolb
pop
movsb
inc
sub
lods
push
cwtl
xchg
jae
or
xchg
pop
adc
or
test
mov
gs
add
movsb
push
lret
sub
mov
je
cmc
dec
mov
inc
in
add
andl
xchg
sbb
sbb
aas
scas
iret
cmpsb
lret
inc
iret
sbb
insb
inc
push
out
pop
xchg
push
aaa
and
adc
fcomps
cli
hlt
test
jns
flds
test
mov
je
mov
sbbl
cmc
lahf
mov
or
inc
pop
push
add
pop
fcoms
sbb
psubusw
fisttps
add
mov
pop
aas
roll
loop
ja
or
syscall
rorl
mov
and
mov
lods
pop
popa
pop
imul
sbb
inc
loope
mov
inc
mov
pop
add
xchg
test
lahf
add
negl
ss
mov
sbb
mov
dec
mov
loope
aam
dec
adc
out
les
and
xlat
xor
dec
fcmovu
adc
add
pop
add
jbe
xor
mov
fidivrl
je
xchg
mov
test
jge
and
jmp
xor
xchg
aas
mov
pop
jnp
mov
sub
push
xor
push
lret
add
xorw
movsb
mov
or
mov
sbb
jo
and
aas
fwait
mov
and
out
psllq
aad
movsb
rorb
das
pusha
jmp
sub
call
icebp
mov
xlat
cmpsl
or
jae
mov
jns
add
mov
ljmp
inc
sbb
pop
xchg
in
adc
ret
aad
dec
jmp
push
or
sbb
pop
repnz
cs
mov
sahf
movsb
add
outsb
lahf
cmp
jae
sub
mov
sbb
dec
popa
xchg
imul
test
push
lret
cwtl
dec
cmp
movsb
rcll
imul
jle
lods
mov
pop
sub
jg
dec
jno
test
cmpsb
jl
or
aas
inc
out
jo
rcr
jns
cmpsb
clc
fisttpll
mov
arpl
push
bound
cmp
repnz
repz
sbb
lods
insl
push
jo
sub
lods
jne
dec
mov
sbb
sbb
ficoml
jns
test
in
dec
jmp
cld
mov
cmp
mov
lret
mov
or
dec
sbb
sbb
inc
loope
enter
and
add
jb
push
icebp
test
cmpb
ss
lock
and
imul
push
or
xor
lcall
dec
in
stos
test
lods
sbb
das
scas
je
cmp
aam
sbb
rorb
mov
push
xor
dec
and
imulb
pop
shll
cmc
out
jno
cmp
js
xor
scas
xchg
xchg
rcr
cmp
jg
ss
or
mov
test
iret
or
dec
bound
fsubs
cld
sbb
rcrb
add
and
pusha
or
push
into
push
mov
dec
mov
dec
jp
push
adc
xor
mov
aas
nop
dec
dec
fnstenv
mov
sbb
inc
faddp
or
xchg
frstor
jo
mov
cmp
aam
popa
mov
sahf
lret
bound
enter
add
mov
jns
pop
clc
sbb
add
lock
add
and
inc
out
out
mov
mov
into
fidivrl
push
pop
in
dec
inc
xchg
fdivrl
das
sahf
ljmp
cld
idiv
or
sti
loop
loope
rorb
sub
jbe
sbb
add
incb
jp
xchg
pop
xchg
lds
mov
push
cli
inc
je
jae
mov
inc
lahf
mov
stc
or
xor
mov
adc
pop
frstor
push
aaa
testb
in
sbb
xor
scas
jp
leave
jge
scas
xchg
dec
call
into
push
sbb
scas
repnz
dec
xchg
insl
fistpll
mov
arpl
ret
pop
sub
jno
retw
out
push
shl
jns
or
pop
sar
push
fcoml
mov
jbe
xchg
ja
mov
shl
push
jo
aam
xchg
dec
xchg
inc
jmp
lret
sub
pop
idivb
push
hlt
mov
cmp
in
add
adc
mov
jmp
adc
lret
cld
lcall
add
inc
dec
inc
fstpl
mov
inc
movsb
push
push
mov
jg
jecxz
imul
or
push
xchg
adc
rorl
push
sahf
sub
push
fiadds
negb
gs
cld
pushf
cmpsb
lret
xchg
stos
sti
rol
outsb
mov
lods
aaa
push
or
mov
test
jb
cmpsl
mov
cmp
push
cld
stc
add
adc
sbb
call
jp
ret
rcrb
fisubl
jae
or
andl
cld
mov
popf
push
xchg
push
movsb
push
popf
es
mov
fisttps
jnp
adc
or
divb
in
lret
frstor
jmp
loop
mov
jmp
call
rcrl
mov
mov
mov
roll
cld
add
dec
cmp
pop
dec
or
or
jle
test
ss
jmp
stos
shrl
mov
test
lods
fs
xchg
insl
aas
andl
inc
in
fucomip
sarl
fnstcw
jmp
dec
in
adc
push
mov
push
fdivs
in
xor
mov
sub
negb
xchg
mov
push
and
jmp
imul
sarl
pop
sub
jg
mov
inc
or
push
test
fldenv
mov
or
fstp
outsb
cmp
jle
sbb
mov
jno
bound
out
lods
sti
sub
out
mov
mov
flds
push
push
js
mov
decb
mov
mov
dec
fs
movsb
shrb
jge
xchg
sbb
cs
lods
je
out
pop
jmp
mov
xchg
ja
popa
add
inc
sbb
inc
push
jne
push
jle
xchg
testl
xor
loop
rcrb
add
aam
or
mov
cmpsl
and
xchg
adc
pop
pop
dec
aam
jnp
std
lods
lods
or
pushf
int3
mov
push
lods
fstp
scas
stc
push
negb
cmp
je
jecxz
lahf
bound
aas
mov
fsubrp
test
inc
fcompl
pop
outsl
inc
divb
mov
cmp
xchg
out
test
xor
fucomp
xor
bound
fdivs
popl
lds
ss
xor
sub
cmpsl
icebp
lret
jge
in
jno
or
xchg
jg
pandn
nop
jae
in
xor
pop
adc
popa
scas
or
mov
xor
in
push
mov
push
cmp
inc
loope
jno
mov
cmp
test
hlt
push
aad
sub
aam
adc
fisubs
xor
cmp
push
cmc
pushf
xchg
and
mov
add
xorb
jae
dec
add
mov
ror
testb
add
push
sub
push
pusha
mov
sahf
ret
repnz
popf
mov
shrb
loope
ja
cmp
test
sbb
pop
pushf
jl
orl
add
rorb
inc
inc
push
adc
sub
mov
mov
and
int3
mov
jnp
outsb
xchg
xchg
mov
movsb
push
pop
or
repnz
sahf
out
scas
dec
mov
inc
adc
popa
stc
push
jecxz
scas
repz
adc
xor
xchg
or
or
out
dec
add
cld
mov
xor
mov
imul
mov
ds
xchg
cmp
cmpsb
and
push
fsubp
xor
xor
and
testl
int3
jae
pop
xor
bound
ljmp
into
sub
in
sahf
scas
inc
pop
xor
cltd
mov
notl
xchg
xor
fiadds
inc
out
cmc
neg
je
pusha
push
xorb
jge
mov
insb
inc
inc
cmp
mov
pop
or
sub
add
arpl
dec
iret
xchg
xchg
cli
mov
stos
push
inc
mov
push
sbb
sub
push
pop
jbe
sub
ja
mov
cld
cld
inc
addr16
call
cmp
and
dec
lret
cmp
int3
sbb
xor
push
pop
clc
movsl
pop
test
push
mov
jge
sub
std
hlt
lods
xchg
stos
in
xchg
mov
insb
call
clc
jb
fwait
xor
jnp
adc
jecxz
addr16
sbb
push
push
les
lods
cmpsl
sub
icebp
push
pop
cmp
pop
ret
jbe
imul
fldl
pop
pusha
cmp
xor
mov
lds
xlat
and
pop
stc
cmp
xchg
xlat
mov
lds
push
lahf
jecxz
or
fisubl
js
mov
dec
jbe
cmp
mov
fdivrl
insl
out
or
xor
mov
add
std
clc
mov
imul
jl
in
or
into
mov
subb
aam
test
pop
in
insl
mov
hlt
sti
sub
dec
sbb
pop
mov
push
das
decl
mov
lret
or
sbb
mov
xchg
repnz
cli
cmp
enter
decl
lret
dec
out
jbe
std
repnz
leave
fsts
frstpm(287
dec
cld
and
push
inc
inc
scas
rclb
push
pop
jp
movsl
inc
and
add
je
out
adc
insb
add
ljmp
dec
adc
and
enter
jnp
sbb
sub
sub
cmp
push
insb
mov
lahf
arpl
pop
jle
iret
add
cld
push
mov
push
jmp
and
mov
lcall
clc
mov
add
call
dec
sbb
pop
inc
je
jne
lods
cs
outsb
ja
sub
mov
cmp
js
push
dec
inc
sbb
mov
mov
xchg
cmp
subl
mov
popf
cmpsb
jae
cmp
daa
add
es
push
movsb
mov
jbe
pop
xchg
push
sahf
fnstenv
mov
sub
and
loope
push
int3
mov
loop
mov
xchg
or
out
jle
pop
jmp
mov
icebp
popf
xor
dec
sub
je
lcall
int
arpl
inc
int
outsl
adc
mov
jae
jnp
cmp
sti
xor
test
ret
pop
dec
pop
pop
ret
mov
jp
xorb
mov
repnz
jae
sbb
shll
mov
xchg
leave
cltd
movsb
out
ret
daa
cs
lock
and
lock
lods
cltd
inc
fstpl
jp
xor
sbb
je
pop
fwait
dec
xchg
cmp
cld
push
cld
lahf
mov
dec
push
mov
sub
dec
cmc
add
addl
aam
je
in
cmp
or
xchg
sbb
mov
inc
test
imul
xor
adc
nop
jno
push
popf
or
nop
repnz
js
or
xchg
jns
adc
sub
push
pop
cmp
adc
mov
aas
mov
jl
jge
fdivrp
movsl
add
push
mov
mov
loop
xor
pop
push
sbb
sbb
popf
mov
movsb
cwtl
mov
pushf
repz
lret
sahf
icebp
addr16
fdivs
and
xchg
movsl
ret
push
repz
inc
inc
lret
mov
loop
sbb
and
cmp
fistpll
int3
add
shlb
out
cmp
inc
das
xor
push
in
pop
testb
and
insl
clc
jb
aas
out
js
sbbl
add
popa
in
pop
jle
add
pusha
into
sub
aad
insb
test
mov
or
jmp
dec
ds
sarl
jle
jno
fwait
aam
inc
stos
xor
pop
pop
inc
fsubrp
test
fiaddl
lods
cmpsb
popf
movsl
dec
dec
adc
pop
adc
mov
mov
pushf
mov
push
lods
pop
cltd
sbb
cs
call
xchg
incb
cmp
lea
dec
test
xchg
mov
lds
filds
add
fdivrl
rclb
xor
pop
imulb
out
adc
lods
xchg
int3
cmpsl
mov
fwait
mov
mov
in
out
xor
mov
inc
mov
push
loopne
xchg
mov
add
sar
sub
enter
adc
inc
mov
sbb
or
les
into
fnstcw
into
movsl
pop
jl
hlt
lea
inc
cvtdq2ps
sbb
addl
inc
or
mov
dec
inc
push
jecxz
mov
bound
jno
test
insb
dec
fwait
stos
pop
insb
dec
lock
cmp
notl
mov
mov
lods
ss
out
leave
pusha
pusha
push
mov
imul
mov
mov
or
mov
sub
mov
das
adc
and
call
push
loop
stc
add
test
sub
mov
xor
mov
mov
ret
andl
test
pusha
outsb
adc
or
inc
xchg
cli
stos
inc
ljmp
test
cld
mov
xor
mov
lds
popf
inc
fucomp
xchg
jb
arpl
mov
cmc
aaa
jae
jno
test
mov
jae
lret
jo
fstl
sbb
notl
jne
adc
das
enter
lods
test
mov
insl
cs
pop
cmp
dec
push
test
stos
inc
std
mov
iret
fnstenv
jae
jo
sub
and
pop
aam
jmp
sub
mov
icebp
push
ret
or
sbb
jnp
push
lods
mov
and
insl
sbb
cld
daa
mov
jmp
lds
rcr
cli
rcrl
adc
inc
into
add
dec
xor
call
add
inc
sbb
push
jbe
pop
cmp
repz
repnz
cmp
sub
rclb
dec
sub
mov
push
jmp
shl
je
sahf
cmp
adc
fsubrs
incl
fwait
inc
add
jmp
ficoms
stos
jbe
movl
imul
sbb
mov
gs
insl
ljmp
in
or
test
loop
jb
adc
mov
push
ja
ds
jbe
imul
xlat
inc
ds
ror
or
adc
push
push
or
fs
inc
js
fwait
add
mov
ret
outsl
fs
in
xchg
enter
and
je
scas
loop
push
sbb
xor
sbb
or
cmpsb
xchg
or
loopne
add
mov
adc
sub
xor
jo
rclb
ret
adc
es
test
mov
mov
jns
xchg
aaa
cmp
and
std
incb
int3
inc
mov
ret
sub
insl
sub
add
and
mov
mov
iret
lock
xchg
mov
inc
sub
fistpl
jne
and
call
int3
frstor
xchg
add
mov
adc
stc
sbb
jmp
inc
jne
in
mov
bound
insl
or
mov
inc
shr
addb
adc
aaa
dec
fs
popa
insl
dec
nop
dec
test
cld
cs
stc
push
notl
inc
push
xor
stos
inc
inc
inc
pop
mov
inc
stc
lret
add
cmp
js
mov
cmc
adc
mov
and
dec
stos
fadds
leave
sub
lock
sarl
mov
sahf
adc
int3
push
mov
subb
mov
mov
or
cmp
cmc
shrb
xchg
inc
pop
xchg
or
fwait
pushf
popf
add
shll
inc
insl
addr16
js
nop
call
pop
sub
sbb
cmp
mov
push
inc
xchg
push
mov
test
fsubl
insb
inc
repnz
test
clc
or
shrl
mov
je
jbe
fldenv
lods
mov
or
andb
xchg
loop
add
pop
sub
push
fbld
out
or
inc
push
cmp
add
jp
insb
filds
in
push
test
sub
mov
data16
and
ret
mov
push
xor
jp
out
mov
push
sub
leave
pop
dec
push
out
pushf
je
in
jp
dec
dec
sub
fwait
loop
xor
call
dec
pop
into
xorl
dec
cmpsl
add
and
mov
cmp
or
or
rcl
cmpsl
leave
dec
mov
sbb
mov
in
mov
aad
lcall
roll
xchg
add
pushf
xchg
testl
stos
push
bnd
lea
fimuls
out
adc
fistpll
dec
push
pop
mov
mov
inc
inc
stc
adc
or
hlt
lods
mov
mov
cmpsb
dec
bswap
xchg
ficomps
mov
mov
clc
addr16
sub
repz
fstpl
aaa
push
xor
aad
mov
mov
cld
into
mov
mov
jp
shr
movsb
cmpsl
pop
add
ret
call
jl
int3
fidivrl
mov
xor
je
test
repnz
mov
pop
adc
mov
jmp
mov
sbbb
addr16
jnp
decb
sbb
inc
push
imul
dec
aaa
jecxz
repnz
insl
repnz
jns
push
dec
or
pop
dec
mov
mov
leave
sbb
push
cmp
cld
or
cmc
pusha
push
inc
add
jle
fildl
push
movsb
cmpsl
divl
imul
in
js
push
inc
mov
dec
push
hlt
aam
je
sub
jge
push
aam
loop
mov
ja
inc
mov
push
insl
cmp
mov
sub
aad
or
or
lret
push
jns
daa
js
inc
adc
outsl
push
pop
mov
ss
cmp
outsb
mov
sub
mov
icebp
pushl
xor
ret
push
inc
adc
or
or
jnp
stc
mov
ss
movsl
dec
cmpb
cltd
cmp
and
movsl
cmp
push
je
int
or
dec
loop,pn
mov
push
cmp
int
cld
mov
cltd
push
push
inc
dec
sahf
nop
mov
and
movsl
mov
pop
xchg
jno
test
mov
enter
cmp
cmc
pop
xor
inc
lret
and
pop
cmp
adc
jp
jmp
sahf
sbb
jb
cmpsl
sti
dec
loopne
insb
loop
push
push
mov
mov
loop
push
xchg
dec
inc
inc
xchg
ljmp
push
mov
mov
mov
xchg
cmp
jl
fs
loope
dec
cltd
les
add
xlat
jge
mov
dec
or
and
psrlq
xchg
movsl
sbb
js
inc
inc
mov
push
pop
fildll
shrl
lods
inc
or
dec
popf
jp
pop
xor
mov
fwait
scas
sbb
gs
and
in
pop
enter
stos
int
push
jl
daa
add
xor
popf
and
lahf
pushf
sub
xchg
shl
pushf
test
push
pop
jne
daa
fimuls
outsl
lods
fsubrs
pushf
mov
arpl
sub
add
and
push
mov
aaa
outsl
xchg
adc
dec
xchg
and
cs
pusha
xor
jmp
imul
lcall
xlat
gs
jae
push
test
xchg
pop
jecxz
pop
jecxz
xor
jp
pop
pop
lods
xchg
js
xchg
cs
adc
mov
fstpt
mov
jl
mov
arpl
or
sti
cmpsb
push
sub
movsb
movsb
push
in
xchg
ret
adc
cmp
cmp
pusha
adc
mov
subl
mov
and
lahf
aas
jbe
inc
xchg
jo
fstpl
in
scas
cli
popa
sbb
adc
mov
lret
mov
jl
mov
rcl
in
mov
xchg
sub
xor
xchg
xchg
inc
jns
out
fdivs
fs
sub
cmp
mov
xchg
xor
lods
sbb
cmc
shrb
adc
xchg
aam
sbbb
push
mov
insb
or
or
pop
fcompl
ds
subb
cltd
xchg
jns
enter
cltd
mov
inc
aad
push
mov
cmp
mov
jae
imulb
sbb
sbb
cmp
loop
push
cs
push
cmp
invlpg
adc
loope
out
push
sbb
mov
or
repnz
push
je
xor
gs
add
pusha
add
imul
mov
cmp
ret
sub
mov
or
aad
iret
jns
add
loope
ja
mov
ret
clc
xor
xchg
xchg
fs
xchg
sub
in
lods
inc
ficoml
imul
insl
sub
mov
cmp
fcoms
hlt
xchg
mov
cs
sub
dec
cmp
add
test
pusha
mov
add
andnps
dec
sub
inc
scas
sbb
inc
rcrl
or
or
dec
cmp
fs
pop
orb
pop
cmpb
popa
mov
imul
sbb
in
cli
js
ss
mov
push
mov
xrelease
int
mov
imull
add
incb
pop
sub
push
cmp
std
xor
out
adc
push
std
imul
push
mov
out
mov
mov
pop
lea
in
dec
sub
push
mov
and
loop
js
lds
pushfw
aam
in
lods
mov
cmpsb
popa
mov
roll
in
shrb
sbb
jl
outsl
dec
iret
pop
pushf
adc
cmpsb
sahf
jae
andps
sbbl
mov
mov
push
sub
push
pushf
mov
mov
shlb
dec
jae
xor
jno
push
int3
xchg
js
and
test
arpl
outsb
mov
lock
lods
je
dec
fs
lahf
gs
into
and
and
aas
jg
adc
imull
fwait
or
mov
xor
sbb
dec
nop
adc
cli
and
and
and
xchg
imul
xor
add
std
out
bound
push
jp
aad
push
test
cmp
sub
scas
lods
test
ljmp
shlb
xchg
cmc
loopne
dec
add
daa
add
popa
jmp
mov
xchg
mov
inc
sub
push
pusha
movsl
out
rol
inc
mov
ljmp
jo
xor
xchg
daa
and
pushf
jl,pn
cmp
xchg
idiv
pop
sub
les
fwait
mov
mov
mov
lcall
test
xor
jae
mov
pop
xchg
cld
dec
popa
jno
stc
jne
fucomip
jmp
push
in
push
cmp
sub
loope
sahf
int
push
push
call
push
ret
les
inc
push
test
sub
mov
int3
add
xor
dec
xor
xor
fstpt
cs
dec
imul
cli
sbb
popa
in
test
sbb
lods
xchg
ljmp
popf
aaa
iret
dec
add
push
scas
scas
int
sbb
popa
loopne
int3
adc
das
sbb
mov
sub
test
dec
push
pop
ds
sbb
imul
loop
mov
neg
adc
pop
loop
filds
inc
int3
out
push
mov
push
fcomip
mov
adc
leave
xor
push
pop
cld
push
insl
aam
sub
stc
push
pop
sub
test
mov
mov
xor
lea
stos
data16
ljmp
dec
call
lds
ss
dec
popa
cld
mov
fadd
test
dec
roll
cli
sbb
add
and
or
out
jne
dec
pusha
mov
in
lret
mov
mov
add
pop
popaw
clc
cmpsl
push
fisubrl
and
adc
lcall
shl
mov
mov
push
mov
and
xor
inc
or
pop
mov
sub
or
imul
movsb
leave
data16
mov
inc
push
in
dec
das
adc
and
lcall
daa
mov
adc
xchg
repz
fstpl
lock
inc
stos
xchg
fstps
sub
out
mov
jb
pop
mov
fldt
mov
stos
icebp
mov
fadds
push
add
pop
leave
repnz
sbb
xor
pop
pop
cltd
mov
mov
lods
sbb
xchg
jae
loope
sub
fisttps
test
pop
mov
mov
das
add
push
xlat
mov
add
jo
pop
ss
or
xbegin
mov
or
enter
inc
sub
lldt
imul
sbb
mov
push
or
out
and
or
inc
movb
cmpsb
fbld
adc
xchg
stc
sub
out
or
stos
popa
loope
pop
movsb
out
dec
hlt
and
adc
stos
fwait
mov
ret
bound
fs
adc
test
adc
dec
or
ret
in
lock
xchg
mov
jmp
xchg
shlb
hlt
jno
and
scas
xlat
into
pop
pop
pop
imul
push
mov
jns
pop
add
sub
pop
mov
outsb
adc
and
mov
jle
mov
int
fdiv
js
or
scas
cld
cmc
adc
mov
arpl
mov
insl
mov
in
js
sbb
aad
dec
mov
int3
ficoms
fsubrl
test
push
clc
lcall
jbe
push
cmpl
cmp
test
insb
shll
mov
stc
sti
dec
dec
test
or
addb
imul
push
es
inc
fwait
repz
jp
and
cli
adc
sub
data16
xchg
cmp
stc
fidivs
xor
addr16
movsb
xchg
insl
jle
adc
pusha
cmp
mull
outsb
mov
movsl
ret
jge
gs
inc
ret
iret
clc
rorb
xor
pop
pop
inc
jle
mov
mov
and
dec
xlat
mov
arpl
xchg
fistpll
jmp
loope
scas
jle
sub
inc
and
dec
cmp
cmp
inc
lods
mov
mov
add
jecxz
inc
sbbb
int3
ss
repz
shlb
lret
iret
cmp
ljmp
or
cmp
pop
pop
jp
push
adc
jnp
repnz
fdivrs
dec
xorl
push
xchg
popa
cld
push
imulb
aas
outsl
fisttpl
mov
pushf
ja
push
mov
sbb
pop
les
in
or
mov
inc
ret
aad
or
inc
lds
out
and
adc
idivb
mov
pop
xchg
xchg
xlat
mov
ss
xor
sub
or
push
outsb
inc
xchg
fsubs
mov
mov
repz
cmpsb
add
lret
mov
pop
addr16
sub
fwait
fs
fwait
pop
or
es
sbb
dec
pop
stc
outsl
cmp
dec
cwtl
adc
mov
lock
adc
fdivrl
push
sbb
fimuls
aaa
aad
xchg
sub
lods
loopne
out
inc
add
cmpb
sub
test
lods
pop
lods
into
xor
sbb
rorb
test
test
sti
fiaddl
sub
imul
in
jp
cmpsl
ljmp
inc
or
sbbl
in
into
dec
add
and
push
das
xchg
pop
pop
cmpsl
cmp
fstpl
mov
ret
mov
mov
scas
out
data16
sbb
jecxz
cltd
js
sub
and
push
mov
jae
cld
push
iret
push
cmpsl
xor
ret
sub
cmp
dec
and
and
jb
cld
push
stos
popf
pop
inc
push
sbb
in
xchg
cmp
mov
pop
push
repz
bound
pop
xor
xchg
inc
sbb
jnp
ret
push
dec
mov
iret
mov
int3
or
hlt
je
adc
in
leave
mov
mov
mov
shl
into
mov
lret
ljmp
ret
jns
and
out
pop
xchg
sbb
sbb
lret
mov
aad
in
add
add
outsl
fnstcw
adcl
inc
dec
das
es
popa
and
xchg
cmp
ds
jecxz
jmp
mov
sti
mov
mov
mov
je
fldlg2
fs
mov
out
iret
rorl
imul
sub
push
mov
sub
xor
loop
outsl
adc
mov
or
lcall
test
pop
fmul
daa
dec
cmp
fwait
scas
in
jmp
push
pop
sub
fbstp
insb
pop
lret
cmpsb
pop
test
dec
cmpsb
cltd
cs
mov
or
fs
stos
cld
or
lahf
mov
inc
movsb
leave
orb
mov
sub
mov
mov
insb
push
mov
ret
cwtl
pop
mov
add
pop
notl
jno
ja
mov
mov
jge
movsb
mov
wrmsr
call
sbb
mov
xor
add
scas
mov
push
lea
lods
jns
adc
aad
jecxz
inc
push
enter
clc
inc
xchg
lret
mov
inc
mov
push
lock
push
jle
cmpsb
pop
sbb
adc
mov
mov
mov
inc
push
lods
mov
mull
popf
push
ficoms
mov
sub
ret
mov
stos
xchg
and
daa
testb
sub
out
mov
je
cmp
lods
fnstenv
jne
adc
adc
inc
inc
in
and
outsl
bound
mov
cld
jg
aad
jmp
bound
pop
xorb
repnz
xchg
push
inc
sbb
xchg
mov
jle
sbb
mov
or
pop
out
fimull
call
faddl
js
lret
stos
lret
sub
cli
push
sub
inc
mov
jmp
fiadds
cmpsb
pop
jnp
cmp
fstps
adc
popa
jg
das
loopne
xchg
pop
xor
or
vmovd
push
add
sbb
inc
imul
test
in
pop
inc
push
call
mov
xchg
jle
jmp
add
push
sub
fstl
mov
mov
push
jg
sbb
cmp
pop
jle
in
imul
push
cmp
xor
mov
lcall
pop
cmp
out
add
and
xchg
stos
or
cs
in
mov
push
push
sbb
inc
ror
mov
push
gs
dec
xor
in
adc
xor
xchg
adc
jns
jg
mov
fimuls
add
xor
pop
fwait
cltd
pop
or
inc
testl
and
test
inc
adc
loopne
insl
jle
jbe
pop
dec
dec
push
xor
cmp
lret
loope
jno
iret
jne
fwait
leave
out
aad
int3
push
test
add
pushf
mov
and
mov
adc
cmp
cmp
mov
jbe
inc
cmpl
shlb
jns
xchg
mov
movl
ss
arpl
rcrb
adc
ret
shll
pop
pop
mov
or
mov
and
sbb
jns
test
add
loop
inc
cmp
xor
jmp
popa
aas
mov
jle
pop
daa
mov
pop
daa
and
ja
xchg
out
or
popf
aaa
shll
fsubrs
divl
pushf
mov
movsb
cltd
leave
xchg
xor
inc
fidivrl
xchg
aaa
fldenv
lahf
cmpsl
sub
mov
push
test
pop
lret
aas
fsubl
mov
fimuls
enter
es
insb
xchg
xchg
xor
adc
push
sti
sbbl
roll
inc
bound
jo
xchg
mov
nop
lock
pop
daa
stos
negl
mul
mov
push
ret
jmp
ret
mov
cmpsl
sbb
mov
clc
add
enter
cwtl
clc
mov
lret
mov
inc
adc
or
out
or
mov
pushf
leave
fstl
sub
mov
scas
cmp
nop
mov
mov
mov
loope
ljmp
in
adc
or
and
mov
es
push
push
lock
lcall
or
jmp
mov
outsb
or
into
repnz
mov
bound
jns
aaa
push
nop
mov
pop
test
out
je
or
loope
scas
mov
sbb
idivb
sbb
jg
xchg
enter
or
push
or
push
mov
rorb
dec
xchg
cltd
cmc
jmp
arpl
addr16
popf
fcmovbe
push
orl
fs
xor
xchg
pop
mov
bound
test
adc
les
psubq
scas
cmp
repnz
rcl
add
and
js
pop
fwait
nop
lods
xor
lock
adc
mov
xor
inc
dec
hlt
xor
and
pop
jmp
dec
push
aas
inc
mov
mov
jnp
popf
fcomps
ret
jp
jl
aam
or
int3
mov
mov
stos
stos
jnp
lods
cmp
push
das
inc
xor
add
push
imul
cmp
mov
cmpsb
cmp
cmpsl
es
jle
cmp
aaa
and
ss
leave
movsb
sub
cmovl
cmp
bound
inc
xchg
imul
clc
idiv
subb
arpl
push
mov
xlat
jb
dec
data16
pop
jns
gs
mov
pop
fwait
stos
int
xlat
mov
hlt
mov
add
jl
je
mulb
es
test
add
mov
sub
mov
mov
dec
jo
es
cltd
jecxz
mov
mov
push
dec
je
cmp
fisubrs
pop
out
lret
sarl
and
mov
xor
imul
mov
ret
ret
add
repz
lock
adc
stos
sub
add
xchg
jno
mov
adc
popa
imul
in
loopne
cmp
mov
cwtl
lahf
pop
adc
inc
mov
inc
aad
adcl
xchg
mov
mov
jb
lods
je
cmpsb
xchg
dec
mov
stos
sbb
and
test
arpl
ljmp
jmp
paddd
push
adc
mov
out
pusha
or
fwait
inc
sbb
mov
dec
mov
xchg
cmpsl
loopne
mov
jecxz
inc
ret
iret
mov
or
pop
inc
dec
xor
xor
push
inc
rclb
and
into
icebp
push
ret
xchg
pop
fwait
sbb
enter
xchg
orb
inc
call
insb
xor
aaa
out
lods
mov
inc
fwait
lods
sbb
or
clc
push
push
sub
add
sub
test
mov
pop
jl
jae
mov
test
daa
addr16
outsb
cmp
loop
icebp
cmc
pop
xor
fs
mov
int
jne
scas
inc
mov
testb
cmp
pop
xchg
lret
sbb
clc
xchg
jg
mov
cmp
cmpsb
ja
or
lret
jge
jb
int
icebp
xor
dec
call
push
dec
xor
mov
mov
cmp
shrb
ds
pop
stc
pop
jns
ljmp
xor
cmp
push
scas
xchg
shl
setb
xchg
inc
push
pop
je
add
xor
mov
mov
dec
cmp
fisttpll
movsl
pushf
xchg
outsb
push
fnstcw
stc
pop
ret
adc
fcomps
orb
fidivs
or
mov
dec
imul
lret
cli
rorl
push
lcall
bound
jbe
call
int
xor
mov
inc
add
repz
jns
cmp
mov
lret
in
jp
cld
out
push
fdivrl
js
lret
popa
scas
lret
cmp
les
bound
out
xchg
push
pop
mov
scas
sbb
mov
cmpsl
popa
xchg
inc
cmp
adc
xchg
xchg
jp
stos
stos
out
pop
sub
int3
in
mov
mov
push
mov
mov
push
sbbl
mov
stc
gs
movsl
imul
pushl
adc
dec
mov
in
inc
mov
xchg
clc
inc
add
in
mov
dec
mov
arpl
jle
iret
out
pop
dec
pushf
inc
lret
aad
inc
ljmp
sub
mov
mov
push
lret
xchg
sahf
and
mov
xchg
xlat
jg
nop
js
neg
or
js
jno
jns
push
cmp
test
push
or
shll
jecxz
mov
testb
xlat
sbb
fistps
fs
shrl
sti
bound
cmp
push
mov
repnz
mov
add
in
mov
push
mov
aaa
and
mov
xchg
lcall
pop
add
ds
jno
push
ficoms
out
pop
leave
daa
dec
xchg
sbb
sbbl
mov
shl
inc
or
xchg
aad
jnp
pop
stc
call
aas
push
ljmp
je
loop
movsl
in
mov
cmp
cmp
repz
cwtl
sub
jbe
inc
pusha
dec
sbbb
xchg
add
popf
outsb
jo
fists
stc
and
cmp
cmpsl
outsb
jl
inc
jmp
lods
mov
orb
in
mov
push
mov
push
test
mov
jo
jno
xlat
hlt
lret
xlat
hlt
pop
adc
lahf
and
jb
and
sub
xor
sbb
add
ds
fidivrl
loopne
mov
sarl
test
scas
sbb
icebp
mov
sub
pushf
cwtl
shl
repnz
ljmp
mov
xchg
pop
shll
lods
add
ss
jge
and
mov
rolb
clc
enter
cmp
push
aas
or
cmpl
xor
mov
inc
orl
xor
xchg
adcl
sub
mov
outsl
cmp
inc
xlat
jp
xor
mov
js
push
in
in
int
xchg
in
push
popa
push
cs
or
xor
loop
loop
pop
es
jo
ss
std
add
jl
aad
mov
leave
lcall
dec
es
mov
xor
mov
aas
cltd
test
xchg
fldenv
xchg
xchg
cmc
xlat
test
cmpsb
pop
cli
mov
fucomi
out
mov
lods
out
mov
add
out
pop
lret
iret
inc
ljmp
mov
cld
loopne
push
in
cmp
out
lret
data16
andb
push
adc
mov
xor
pop
int3
adcb
loopne
mov
les
fimuls
sbb
pop
popf
cmp
mov
fiaddl
sbb
call
jne
cmpsb
loop
add
out
and
sbb
sahf
push
call
js
xchg
sbb
addr16
and
in
jbe
adc
add
mov
mov
add
into
add
pop
subb
jp
mov
loop
imul
fwait
sahf
inc
int3
xchg
push
test
xor
hlt
lret
fsubl
arpl
dec
call
call
mov
or
pop
or
mov
fstl
loope
cmpsl
jl
push
sbb
or
cmc
stos
xor
mov
fisubrl
dec
add
jns
xchg
lret
push
sbb
inc
inc
movsb
dec
and
dec
inc
cmpb
rcll
in
fwait
pop
movsb
pop
mov
fnsave
or
fbld
mov
mov
add
adc
arpl
sar
ja
loopne
pop
iret
jle
bswap
popa
inc
shrl
mov
pop
or
mov
add
and
les
mov
jae
test
rcll
pop
inc
popa
adc
push
or
pop
lock
push
imul
cmpsl
in
or
scas
hlt
and
adc
sub
mov
sti
in
pusha
fsubp
test
cmpsb
inc
or
dec
movsb
aas
rclb
sub
ret
adc
jae
aas
inc
add
xchg
pop
sub
cmp
fimuls
cli
jnp
sarl
or
mov
gs
dec
and
cmpsl
pop
xchg
in
cli
cld
in
cmpsl
mov
jmp
stc
mov
pop
in
in
enter
xor
sbbl
inc
pop
jae
in
enter
xchg
push
pop
and
or
pop
inc
pushf
popf
or
ds
cli
pop
jl
mov
push
and
pop
xor
inc
jo
lret
pop
xchg
dec
incl
mov
fadds
fcmovne
rcrb
stc
setb
shll
xor
ljmp
into
and
mov
cmpsl
popf
cmc
xor
shll
movsl
imul
shl
lret
out
dec
mov
daa
aad
jns
mov
cmp
dec
pop
pop
in
jne
jns
jl
mov
xor
add
fmul
arpl
fwait
pushf
data16
repnz
xchg
arpl
push
push
and
lret
pop
jo
cwtl
in
mov
enter
clc
push
mov
mov
jmp
lock
inc
or
les
and
xchg
inc
xchg
pop
and
cmp
les
adc
popa
outsb
pusha
mov
adc
imul
imul
and
rcrl
add
dec
fldcw
cmpsb
mov
jb
or
push
loop
daa
loope
xor
pop
push
scas
or
iret
icebp
add
cli
clc
call
add
mov
aam
xor
add
mov
push
push
add
lahf
cltd
jb
jmp
adc
pop
stos
push
sub
ja
andl
mov
pusha
ds
lcall
xchg
test
push
repz
add
and
pop
shll
adc
addl
push
movsb
inc
or
jno
sarb
popa
adc
inc
pop
movsl
inc
add
das
xchg
inc
push
shl
fwait
xor
dec
mov
sbb
adc
stos
push
arpl
and
pop
jp
xchg
in
xchg
xor
in
in
gs
das
mov
mov
inc
add
test
hlt
and
lods
rcrl
frstor
mov
mov
mov
xchg
mov
pop
cmp
jmp
push
daa
aam
or
in
nop
insl
mov
jbe
pop
adc
mov
mov
pusha
bound
or
in
push
xchg
mov
and
push
dec
outsb
movsl
leave
in
pop
pop
jp
adc
pushf
pop
push
and
out
xor
pop
negb
and
sbb
pop
jg
mov
scas
loope
data16
sub
imul
mov
jge
xchg
stos
xchg
cwtl
sbb
mulb
mov
push
jb
adc
in
pusha
pop
sub
cmp
or
hlt
push
adc
std
jno
mov
aad
add
roll
aam
mov
pop
adc
mov
popf
pop
lcall
adc
mov
aad
mov
xchg
fwait
lea
int
stos
cmp
sub
xor
add
inc
popf
repnz
dec
and
rolb
cmp
mov
mov
mov
jbe
xchg
imul
pusha
ss
ljmp
mov
xlat
outsl
push
jmp
cli
mov
mov
mov
popa
adc
fisubrs
cmc
cmpsl
pop
insl
outsb
jne
adc
sub
scas
fs
mov
js
add
jp
insb
inc
sbbl
lock
jne
fisubrl
data16
jb
sbb
movsl
sti
mov
imul
daa
scas
jmp
jle
and
mov
das
aaa
cmp
lret
sub
and
cs
in
xchg
cmpsl
call
mov
jbe
lret
insl
mov
fisubs
mov
sbb
pusha
push
mov
fstpl
rcrb
inc
es
std
lds
notl
mov
js
xchg
sub
fst
fst
jae
xchg
lret
mov
adc
stc
mov
mov
and
pop
inc
test
and
jb
outsl
rcr
pop
dec
mov
jecxz
aad
mov
push
pop
bnd
cwtd
sub
jl
xchg
mov
jp
roll
or
repz
adcl
sub
fwait
mov
adc
hlt
or
xchg
sbb
jo
sub
fildll
cmp
hlt
dec
lahf
dec
test
pop
and
test
sub
xchg
xor
dec
adc
loopne
sti
mov
push
jge
add
and
sti
push
sti
dec
xchg
jecxz
cmp
inc
mov
xchg
jmp
and
mov
push
cmc
mov
stos
addr16
push
mov
jl
xor
nop
cmc
add
pop
pop
popa
dec
mov
or
out
xchg
shl
adc
pop
bound
mov
cld
or
std
mov
ja
fsubr
mov
outsb
jae
sub
sti
adcl
in
dec
pop
in
out
notb
seto
push
clc
adc
sbb
mov
into
sbb
sbb
pop
inc
xor
mov
and
loopne
adc
das
fiadds
inc
cmpsb
fdivrs
xor
pop
aam
daa
sub
roll
icebp
pushf
mov
iret
push
mov
lods
mov
fbld
push
inc
jne
hlt
icebp
test
js
jg
xor
push
pop
cmp
push
popa
fsubp
es
fldt
repz
imul
ret
mov
or
jp
dec
or
xchg
pop
outsb
jo
orl
outsl
push
je
lret
mov
mov
lcall
inc
sti
xchg
shlb
jl
dec
loopne
push
stc
outsb
daa
sub
cmpsl
int3
cmpsb
or
adcl
fdivl
push
test
test
mov
mov
rclb
jp
xor
fucompp
mov
sbb
ds
or
inc
fistpll
lea
mov
fldt
iret
mov
mov
adc
in
jne
sbb
ffree
xchg
xchg
addr16
xor
aam
out
inc
imul
mov
repnz
ss
icebp
cmp
sahf
xchg
mov
adc
imul
push
popa
rcl
sbbb
loope
push
xchg
out
xchg
sbb
adc
sub
adc
sbb
cmp
fcompl
scas
test
lret
ljmp
dec
xchg
push
ret
repz
mov
cli
xchg
mov
or
or
dec
pop
adc
stc
cmp
nop
nop
mov
cs
daa
pop
mov
js
or
lahf
push
outsb
rcrl
push
or
xor
push
insl
add
adc
adc
inc
and
cwtl
and
xchg
lea
adc
add
fdivrl
out
insl
cmp
mov
iret
sahf
arpl
jge
int
ret
push
and
sbbl
sbb
aas
mov
out
mov
push
rep
mov
push
lods
xor
aaa
sbb
mull
pop
add
int3
push
insl
mov
cmc
mov
xchg
xor
and
add
add
movsb
or
sti
xchg
leave
adc
add
filds
mov
fcmovbe
mov
movl
pop
pop
xor
adc
inc
movsb
lods
inc
mov
jo
loop
lock
xor
pop
jb
pop
xor
in
jns
out
xor
call
addb
or
and
push
adc
stos
inc
cmpsl
sub
icebp
inc
sub
out
testl
push
sahf
jmp
xchg
sbb
jnp
inc
fisubl
filds
xchg
jl
push
test
push
or
test
mov
shlb
jge
out
xchg
fnstsw
repz
cmp
sbb
push
sbb
dec
xor
jns
sbb
mov
sub
outsb
imul
and
stos
test
ret
mov
lods
testl
lea
xchg
adc
imul
in
mov
jmp
out
fld
jb
xchg
imul
dec
jp
jae
mulb
xor
sub
sub
out
cli
in
adc
nop
mov
xor
outsl
pop
mov
in
mov
push
bound
leave
ret
bound
add
cmp
mov
gs
repnz
add
ds
lods
and
fwait
ja
jecxz
mov
bound
stc
lret
jp
mov
xchg
cwtl
ret
popa
jnp
shr
sbbb
push
inc
shlb
jle
arpl
cs
mov
imul
jae
push
dec
mov
push
xor
mov
scas
notb
xchg
stos
test
push
and
loope
jo
sbbb
outsl
sbb
cmp
fs
imul
insl
hlt
dec
gs
arpl
dec
fdiv
push
pop
fsubl
push
out
dec
fwait
add
cmp
xor
dec
and
cmc
xchg
iret
adc
addb
adc
sbb
ds
outsb
add
iret
push
aas
dec
inc
push
mov
clc
sti
adc
dec
ja
in
js
jp
and
add
mov
cltd
dec
mov
or
pushf
pop
push
mov
jns
adc
push
and
jecxz
inc
shr
mov
pop
movsl
adc
mov
notb
lahf
pop
xor
bound
lcall
rcrb
lret
pcmpeqb
sbb
mov
cs
mov
jmp
push
stc
xlat
add
cmp
add
pop
shlb
push
push
mov
xor
nop
shlb
push
in
divb
push
es
push
js
sahf
jmp
dec
shl
in
lahf
mov
aas
add
subb
pop
adc
fwait
in
pop
xor
into
lea
or
and
mov
mov
pop
jae
aaa
call
shrl
inc
cwtl
jnp
test
push
sub
mov
dec
fidivrs
adc
test
and
dec
cwtl
out
pop
arpl
ds
lret
gs
or
movsl
cmc
popa
pop
les
out
xchg
pop
jmp
dec
mov
cmpsl
mov
sahf
jns
fistpll
and
test
sbb
or
mov
dec
or
pusha
sub
in
sti
lret
mov
rol
lods
sub
or
inc
mov
cld
imul
adc
inc
into
cmp
movsb
push
jne
mov
mov
loopne
xor
ljmp
push
pop
ret
call
int3
or
mov
aas
xchg
in
sub
cmp
push
or
lret
dec
mov
jecxz
shlb
into
popa
jbe
addl
push
sbb
adc
mov
pop
lock
jg
test
jmp
mov
in
sbb
in
lcall
jle
jb
add
xor
pop
loop
push
push
jno
aas
and
stos
mov
mov
repnz
ljmp
lret
xchg
in
jb
mov
cmc
jae
insl
enter
cmp
ja
int3
push
mov
mov
xchg
pusha
inc
inc
push
add
bound
adc
fstpt
subl
push
jmp
out
int
cmp
icebp
insl
jge
sbb
sbb
xor
test
adc
pop
dec
mov
cmp
fistl
test
inc
aas
mov
xor
pop
in
jnp
out
jp
and
pop
sbb
popa
ret
add
shr
and
pop
lea
mov
sbb
inc
push
imul
pop
pop
repnz
data16
aam
push
aad
loopne
xchg
jge
aas
ret
adc
out
test
sub
cmpsb
inc
inc
inc
cmp
insl
ds
idivl
test
and
out
cli
push
xchg
cmp
pop
cmpsb
inc
shlb
cltd
inc
addr16
in
popa
clc
hlt
stc
outsb
jne
lock
inc
jp
sub
out
mov
mov
and
sbb
xor
or
adc
mov
add
filds
pop
lds
dec
inc
xchg
cmp
in
sbb
inc
inc
xchg
or
inc
push
mov
xor
enter
xchg
pop
dec
and
inc
mov
jnp
inc
xchg
mov
mov
lret
ret
or
adcl
and
std
xchg
fildll
lds
xchg
sarl
mov
push
adc
xchg
mul
lods
dec
mov
ss
inc
sbb
xor
xlat
or
xchg
mov
adc
mov
xlat
into
bound
push
adc
or
stos
mov
cmp
dec
push
mov
fcompl
fstpt
fs
xor
jge
push
pop
addr16
push
lea
add
xor
ljmp
shll
xchg
xor
cmp
xchg
test
cmc
insb
adc
xchg
dec
outsb
dec
mov
outsb
out
sbb
jl
lock
imul
sti
push
inc
mov
clc
repnz
je
xor
adc
fs
fidivrs
loopne
scas
cmp
cmp
out
insl
clc
icebp
sbb
shlb
inc
aad
sbb
fscale
add
divl
inc
daa
movsb
mov
dec
js
loopne
lods
sub
sar
loopne
loope
jnp
in
or
lret
xlat
out
aas
es
addl
or
and
pop
mov
pop
mov
sub
push
cld
ljmp
push
inc
pushf
ljmp
inc
push
scas
ret
insl
ss
loopne
loopne
loopne
mov
push
xor
push
lea
inc
subl
xor
pop
inc
xchg
sahf
dec
xor
movsl
adc
pusha
cmp
aad
scas
cli
push
test
push
std
cmpsb
xor
xchg
mov
imul
sub
mov
lcall
sbb
das
sbb
pop
sti
and
pop
shll
in
addl
lods
mov
push
mov
pop
psadbw
xor
jle
dec
jbe
test
jne
outsb
lret
xor
mov
hlt
fs
adc
lret
gs
sbb
inc
add
clc
lds
adc
xchg
popa
jmp
sbb
dec
xor
arpl
sub
ljmp
cltd
sahf
enterw
outsl
push
imul
dec
aad
incl
cltd
push
faddl
inc
outsb
fs
rolb
sub
daa
aad
xchg
xor
enter
cmpsl
adc
ja
dec
jnp
mov
xchg
xor
shrl
mov
mov
xchg
fisttpl
sub
ljmp
sub
cmpsb
push
mov
sub
dec
mov
pop
popa
int
rcrl
into
sub
sbbb
popf
ret
dec
rorb
aam
fmulp
cmpsl
imul
sbbl
adc
std
xchg
mov
cmp
outsb
mov
je
jge
dec
test
aaa
xchg
inc
jne
push
cltd
mov
inc
and
mov
cmpsb
ss
add
or
cmp
repz
lea
fisttpl
dec
test
fwait
imul
or
or
insl
mov
push
daa
mov
sub
inc
cmpsl
and
adc
cmpb
fimull
mov
test
xor
jno
daa
jecxz
outsb
xchg
movsl
and
adc
arpl
mov
and
pop
jbe
jnp
mov
notl
sbb
int
aad
fwait
imul
int
xor
repnz
cs
in
cmp
aaa
cmp
mov
sti
mov
pop
cmp
bound
cltd
jne
shl
movsl
test
ds
adc
pop
lds
sbb
mov
push
inc
and
std
mov
push
sbb
mov
push
adc
xchg
cmpsb
jo
or
jecxz
xchg
mov
repnz
add
adc
jae
pop
xlat
iret
push
loopne
inc
xchg
ja
cmp
push
mov
cli
push
xor
dec
test
test
mov
pop
dec
add
pop
cmpsl
outsl
pop
int
mov
pop
mov
and
cli
mov
sub
and
hlt
mov
dec
sub
add
and
aad
jg
mov
dec
mov
aam
test
call
test
cmp
xor
xor
cmp
mov
test
sub
or
mov
sbb
pop
xor
fmul
iret
lods
sarl
and
std
in
iret
mov
adc
mov
jne
sahf
arpl
stos
sub
lods
lret
movhps
subb
ds
add
out
mov
rcr
mov
in
jnp
jmp
sub
call
gs
jecxz
pop
fildll
push
push
xchg
cli
ds
cltd
sbb
pop
pop
pop
and
mov
fs
bound
scas
js
adc
jns
lahf
or
lea
push
inc
mov
mov
pop
pop
mov
xor
jge
fs
push
xor
int
xchg
xor
adc
mov
fisttpll
add
mov
jnp
gs
jp
cmp
or
dec
leave
adc
enter
lcall
pop
icebp
xlat
mov
pushf
pop
dec
in
xchg
ds
mov
in
jns
insb
xor
insl
ret
jge
icebp
and
stc
addr16
or
xchg
in
addr16
jne
mov
xor
mov
xchg
and
inc
jp
out
pop
sub
xchg
lea
nop
arpl
leave
mov
jp
rcrl
popf
cltd
jbe
fadds
mov
arpl
xor
loop
aad
ja
out
xchg
and
mov
cmp
gs
mov
adc
ret
loopne
cmp
fcoms
and
scas
stos
cld
push
add
sarl
sbb
int
mov
aas
jbe
sub
aaa
aam
mov
adc
arpl
mov
repnz
test
in
icebp
jl
out
xor
fiadds
jmp
lds
push
cli
add
jnp
sub
inc
inc
aam
cmp
and
scas
sbb
ds
pop
insb
jne
xchg
xchg
cld
pop
and
aad
jne
sub
mov
iret
push
ds
xchg
cmp
adc
sti
cwtl
adc
adc
jne
lds
mov
dec
ret
cmc
jecxz
jmp
scas
jg
ljmp
imul
xor
xchg
mov
fwait
cs
push
pushaw
mov
add
sti
cmpsb
xlat
cmp
fldl
ljmp
or
pop
jge
icebp
lcall
or
pop
cli
aas
jmp
pusha
leave
popf
ds
adc
mov
ja
inc
inc
xor
xchg
mov
stc
popa
popa
nop
jg
dec
imul
je
pop
dec
mov
mov
loop
jno
pop
nopl
outsb
ja
in
imul
int3
scas
nop
add
fsts
xchg
roll
dec
cld
cmp
out
mov
addl
fcompl
stos
inc
xor
or
jb
rorl
out
in
popf
mov
repz
iret
ss
cmpsl
pushf
in
jg
and
clc
es
and
cli
xchg
xor
jno
dec
jmp
push
and
xchg
push
shr
sub
or
rcr
mov
ror
push
pop
cmp
jecxz
pop
sti
sbb
mov
lds
push
test
add
cltd
pop
lret
xchg
dec
in
mov
sbb
mov
sbbb
imul
fcomip
jecxz
lret
call
movsl
jp
flds
add
stc
xchg
mov
js,pn
cmp
push
mov
call
fwait
dec
bound
sub
loope
mov
push
mov
out
xor
or
inc
iret
insl
cmpsb
scas
pop
lea
add
aas
sar
or
shll
movsb
pop
xor
test
or
je
daa
xchg
addr16
out
xlat
int
shl
and
arpl
out
pop
pop
jae
xorb
push
mov
shlb
xchg
xor
and
cmp
jg
lods
jecxz
popa
jb
xchg
push
cmc
push
into
dec
rcll
adc
stos
loope
adc
arpl
add
push
xchg
mov
lcall
push
xchg
xchg
cmp
ljmp
shlb
cmpsb
lcall
mov
ret
outsl
jbe
and
mov
jg
inc
push
push
adc
sbb
mov
jo
mov
cmc
movsl
iret
mov
not
cmpsl
jp
or
mov
mov
pop
mov
ret
adc
subl
push
push
test
out
scas
mov
sbb
pop
pop
push
fdivp
xchg
sbb
ljmp
sub
jb
shr
imul
fwait
mov
mov
out
push
cmpsl
out
mov
jnp
and
gs
xchg
xchg
adc
mov
push
fisubrs
mov
fnstsw
stos
xchg
rcl
out
xchg
ror
push
or
test
fs
cmp
mov
sub
pushf
mov
jbe
pop
negb
cmp
sub
rolb
dec
aaa
inc
pop
dec
out
shr
fisubs
fsts
inc
hlt
lock
mov
mov
dec
mov
push
pop
bound
sub
test
movsl
fisubrs
xchg
fmuls
nop
fisubs
popl
fs
adc
mov
ljmp
imull
scas
mov
add
mov
mov
cli
xchg
xchg
mov
out
cmp
mov
xorl
jae
std
mov
sub
out
jl
and
imul
mov
jecxz
mov
int3
ret
push
test
jae
int
sbbb
mov
pop
xchg
or
mov
outsb
add
jo
mov
mov
jmp
jle
push
pop
push
cwtl
pop
xlat
insl
jae
mov
adc
or
jne
cld
pop
dec
xorl
sbb
fisubs
movsb
mov
call
push
push
ds
jns
adc
sub
data16
xlat
js
jp
scas
push
dec
jb
in
inc
xchg
ljmp
ds
dec
ret
xchg
rorb
adc
ja
pop
mov
or
pusha
sub
fld
arpl
fdiv
fbld
sbb
cmc
dec
jge
ljmp
arpl
xor
cmpsb
sbb
pop
pushf
out
pop
mov
aad
clc
jae
fnstcw
push
jne
adc
xor
rclb
test
sub
or
pop
xchg
movsb
in
stos
loopne
add
sub
shl
movsl
dec
cltd
test
sbb
push
xor
sub
aas
mov
pop
cld
adc
xchg
rcll
push
rorl
int3
and
insl
pusha
sbb
cmp
sti
imul
cli
cmp
cmp
dec
repz
es
sub
sbb
or
xor
std
sbb
ljmp
add
cmp
repnz
pop
hlt
jg
pop
or
dec
inc
mov
sbb
icebp
out
es
mov
xchg
push
mov
jne
dec
xchg
jne
es
xchg
bound
loopne
or
jg
enter
imul
mov
jmp
mov
jae
pushf
fimuls
pop
lds
mov
nop
adc
jo
dec
push
xrelease
js
fcomps
mov
dec
pop
xchg
mov
les
push
xor
cmp
push
adc
je
leave
sbb
cmpsl
scas
pop
fwait
sbb
push
pop
or
jns
cmp
add
push
testb
mov
mov
fisttpll
inc
frstor
and
and
pop
popf
pop
adc
les
mov
add
and
pushf
aam
add
push
int3
mov
fs
or
pop
cli
fwait
loopne
mov
sbb
fsub
movsl
jmp
in
arpl
lret
or
inc
in
xchg
or
ret
out
cmp
sbb
sub
mov
clc
xor
add
and
loope
ss
jne
pusha
mov
repz
sub
push
cs
test
push
mov
in
mov
xchg
adc
sub
xchg
adc
fistl
adc
in
xchg
push
mov
lds
pop
jbe
inc
movsb
mov
fisubl
int3
inc
cmpsb
mov
shlb
adc
mov
jmp
xor
dec
enter
jb
and
jbe
mov
aas
and
cld
pop
in
sub
data16
movsb
jle
jle
les
jge
jns
pop
jg
loope
xor
or
mov
inc
adc
inc
xor
int
mov
adc
xor
sub
cmp
dec
pusha
lcall
pop
inc
or
adc
sahf
aad
cld
mov
in
jbe
fsts
push
xor
sarb
or
or
jns
push
adc
push
ds
jne
jge
lea
cmp
clc
popa
lret
sbb
mov
out
xchg
int
sarl
add
test
or
inc
out
fs
cmpsb
aad
dec
mov
mov
fisubs
test
popf
test
arpl
mov
adc
repz
loop
push
adc
into
xchg
xchg
sub
mov
dec
frstor
xchg
mov
popa
scas
rcrb
jle
push
pusha
test
lcall
pop
cmp
arpl
outsl
mov
lds
clc
test
arpl
jp
push
sahf
scas
test
jmp
push
arpl
mov
push
xlat
ljmp
andl
gs
xor
fs
outsb
mov
lock
pushl
dec
or
xchg
mov
gs
xchg
push
dec
movsb
jnp
insb
dec
bsr
cmp
cmpb
mov
les
jmp
sahf
xor
test
gs
gs
cmp
sarl
adc
push
stos
push
xchg
sbb
arpl
pop
jp
pusha
jecxz
nop
leave
mov
fwait
add
jns
ret
jecxz
hlt
stc
enter
adc
jmp
insl
out
outsl
nop
push
inc
int3
seta
imul
sbb
or
mov
xchg
jmp
sahf
pushf
mov
mov
arpl
arpl
push
mov
fidivs
sub
inc
sbb
or
add
mov
cld
aad
mov
sub
ja
ljmp
fcoms
mov
mov
in
or
lock
xor
sbb
ljmp
les
mov
jno
inc
jp
add
jecxz
stos
ljmp
jp,pn
out
cmp
jg
add
sub
lods
xor
or
mov
in
xlat
je
stos
call
adc
roll
out
jle
xchg
int3
dec
ds
dec
sub
or
jp
mov
sub
daa
fsubr
cmp
out
fmull
scas
sbb
rol
jae
inc
mov
or
xor
xor
out
lahf
pusha
lahf
cmc
mov
imul
notl
lods
jecxz
or
popf
mov
pop
xchg
add
xor
add
out
scas
cmp
mov
nop
or
gs
outsb
push
pop
push
imul
inc
sti
mov
cmp
sub
imul
pop
imul
pop
mov
adc
pop
jnp
or
fwait
loope
pusha
movsb
test
lret
push
mov
arpl
movsl
cmp
sbb
sbb
js
inc
mov
adc
xor
scas
test
ret
push
loopne
stc
sbb
xchg
je
int3
sub
popf
mov
repnz
inc
ret
sbb
push
pop
sub
shrl
pop
jmp
xchg
cld
imul
out
jmp
arpl
rorb
in
or
cld
mov
fwait
and
adc
insb
xorb
cmp
test
and
repnz
xor
shrb
shll
jge
inc
add
insb
mov
std
lcall
aad
cwtl
fwait
xchg
jl
fadds
jp
aaa
cwtl
call
rorb
dec
pop
test
jp
aam
ds
xchg
cmc
bswap
lods
ficoml
sub
imul
fwait
sub
in
xchg
mov
add
cmc
aas
cs
subl
div
inc
adc
dec
fimuls
jge
ss
mov
push
mov
jecxz
cmp
push
lret
leave
jb
mov
pop
aad
lret
out
std
les
loopne
adc
mov
dec
pop
lret
jns
or
or
adc
out
js
ficoms
pop
push
pusha
jns
icebp
call
clc
std
or
stos
lds
jb
icebp
xor
mov
push
and
lahf
daa
pushf
and
xchg
out
std
cmpsb
ja
adc
and
rcr
aam
mov
inc
sub
js
mov
mov
xchg
shrl
dec
and
je
xlat
jno
fnstcw
icebp
pusha
adc
jnp
cs
je
xor
xlat
pop
mov
dec
rcr
jbe
jno
xor
rorl
shl
or
add
sar
les
cmp
ror
pop
ja
imul
test
hlt
xchg
xchg
imul
jmp
mov
scas
mov
jmp
mov
push
ds
into
add
mov
xor
fiadds
sahf
dec
push
lcall
in
jae
ss
ss
stos
sub
movsb
pop
push
xchg
pop
loope
xor
pop
pop
and
dec
jne
lock
mov
divb
hlt
xlat
lcall
fisttpl
sbb
fsubrl
jecxz
jmp
test
jmp
loope
pop
push
stc
ficoms
or
aaa
or
push
push
jg
dec
adc
jno
lret
mov
jns
or
push
hlt
stos
mov
push
sbb
loopne
adc
dec
inc
mov
add
add
push
scas
xor
testb
sbbl
or
jne,pt
in
xchg
sub
dec
mov
push
cmp
jne
sbb
pop
lcall
push
sbb
test
jp
push
scas
sbb
adc
sub
test
jb
in
sub
jnp
inc
cmp
jo
das
sub
imul
lock
xor
ds
xchg
xchg
pop
push
pop
push
test
insl
push
adc
fs
je
dec
cmp
shl
xor
enter
test
jecxz
and
sbb
mov
mov
sti
rorb
fwait
ja
dec
fadds
jns
sub
lret
jl
je
push
rcll
pop
je
mov
out
mov
pop
icebp
popa
leave
fnstcw
xorb
pop
inc
mov
mov
xchg
sbb
jns
outsl
sarl
mov
pop
jmp
ljmp
push
pop
rcrb
jge
cmp
adc
cmp
adc
cmp
ficoml
lock
fwait
out
pushf
add
mov
push
sbb
mov
mov
into
shrb
mov
inc
xchg
popa
and
jne
mov
mov
popf
mov
mov
bound
roll
or
stc
sahf
adc
enter
add
repnz
js
jbe
stc
fidivrs
outsb
cs
jecxz
and
sub
aad
mov
jne
xor
pushf
mov
pop
out
enter
jbe
fwait
adc
mov
mov
inc
lcall
dec
or
or
and
ljmp
lret
and
dec
out
mov
mov
aas
mov
pop
rorl
fdivrp
aad
pop
out
clc
sbb
push
dec
lods
hlt
jecxz
pop
scas
jp
fs
or
addr16
gs
cmpsb
jg
mov
mov
mov
xor
jns
mov
lcall
add
stos
lods
rclb
jmp
js
test
jge
xor
ljmp
sub
pop
fs
mov
add
loopne
cmp
sti
setno
sbb
cwtl
push
mov
pop
movsb
jne
dec
jle
notl
dec
mov
nop
into
mov
mov
lcall
lahf
aas
mov
lods
mov
add
xor
in
dec
fistpl
inc
mov
mov
mov
inc
fwait
jg
loopne
or
insb
cmp
dec
pop
mov
insb
movsb
add
enter
gs
insb
fidivs
sub
xchg
jp
cmp
cmp
xchg
fcomp
xchg
mov
hlt
shl
cld
add
lea
popw
mov
dec
std
sub
push
add
cs
lods
jle
and
sbb
mov
adc
scas
add
xchg
push
fiaddl
pop
repnz
jecxz
loope
mov
mov
stos
mov
cmp
push
and
jnp
clc
mul
jo
fsubs
fmuls
pop
fisubl
iret
pusha
insb
popa
cmp
push
fsts
test
xchg
fbstp
sbb
inc
stos
je
cmp
in
addb
mov
push
cmpsb
mov
mov
jmp
sub
sarl
clc
in
ret
mov
ja
adc
mov
ja
and
std
iret
jp
loop
in
pushf
cmpsl
xor
and
push
jne
sub
cltd
push
jl
shl
xlat
xchg
mov
xchg
jp
and
sub
add
mulb
and
ret
call
sbb
mov
cmp
sbb
sbb
adc
dec
sub
xor
mov
inc
cld
and
mov
fidivl
lcall
jg
loope
pop
pushf
ljmp
mov
mov
lds
dec
jmp
int
dec
sbb
sub
pop
pusha
push
inc
push
icebp
push
pop
and
mov
or
shl
push
mov
idiv
mov
add
jecxz
daa
cld
test
test
mov
push
dec
mov
cld
cmp
test
fwait
hlt
and
inc
addr16
in
shlb
push
xchg
pop
scas
mov
imul
clc
arpl
add
mov
push
stos
jns
andb
cmpsl
out
cmp
inc
sbb
or
push
jle
cli
enter
icebp
push
dec
mov
imul
or
lea
repz
adc
daa
jno
repz
jg
popf
das
mov
out
push
vmovhpd
jp
leave
ret
sub
fwait
push
jns
sub
test
dec
aam
mov
pop
push
aas
cmp
cli
pop
push
or
mov
shll
cmp
add
jmp
push
add
rep
add
push
mov
cmp
sub
cmpsb
pop
pop
call
test
test
xchg
xchg
mov
xor
inc
adc
sbb
mov
ljmp
adc
pop
cmpsb
mov
clc
dec
mov
mov
adc
xchg
sti
out
dec
jle
inc
shlb
mov
pop
push
cmp
in
fldt
std
cmp
mov
stos
add
push
jecxz
test
jl
xor
repz
pop
cli
cmpsl
pop
jo
or
sub
cmc
cmpsl
dec
pop
push
jnp
popa
xchg
cmp
test
pop
jo
test
adcb
or
repnz
pop
sbb
ret
xchg
lcall
pop
xor
mov
sub
adc
mov
ret
lahf
fwait
lock
mov
adc
ljmp
jecxz
inc
scas
lods
sarl
loopne
jle
mov
push
xchg
mov
movsb
in
inc
and
push
cmc
adc
jmp
pop
aas
popf
outsl
inc
push
in
and
add
nop
pop
push
dec
enter
cmp
test
mov
cld
int3
test
add
cmp
es
or
add
mov
addl
mov
or
and
pop
mov
and
aam
out
mov
pop
nop
jl
xchg
or
nop
mov
jg
sub
and
fisubrl
mov
bswap
push
or
cli
movsl
test
fbld
hlt
adcb
outsb
testl
dec
mov
push
idivb
add
out
mov
pushf
add
repz
pop
loopne
mov
or
int
sub
popa
lods
cmp
ljmp
xor
xchg
cld
lret
stos
test
dec
imul
sbb
movsb
xchg
dec
mov
into
out
jecxz
addr16
scas
cmp
inc
jbe
adc
stos
js
and
or
scas
scas
jo
xor
adc
or
pop
xchg
add
sbb
and
clc
clc
pusha
out
stos
aaa
daa
out
jl
mov
imul
jae
add
add
movsb
mov
rcrl
mov
ret
pop
or
dec
jp
sahf
shll
jo
outsb
pop
mov
arpl
pop
insb
repnz
scas
xchg
stos
ja
push
xchg
negl
cmp
mov
inc
mov
inc
fbstp
xor
aaa
lds
mov
lret
mov
inc
pop
les
into
pushl
ljmp
push
push
pop
sub
xchg
add
mov
sub
ds
in
into
pop
xchg
mov
shll
xchg
aad
lods
sar
stos
sub
inc
fs
int3
pop
sub
stos
cmpl
rcrl
inc
and
add
push
std
in
loopne
scas
sbb
scas
add
std
push
mov
sub
fldln2
shll
inc
lea
pop
cmp
lods
ss
xor
into
adc
fsubrl
pop
xor
bound
int
lods
jp
jg
aam
cmp
je
inc
mov
stos
scas
cwtl
repnz
mov
leave
in
fwait
xchg
jmp
xor
repnz
stc
fidivl
fwait
test
fcoml
and
cwtl
mov
faddl
ja
push
xchg
movsl
or
cwtl
and
cmc
push
dec
cwtl
cmpsb
xor
or
lds
dec
jg
call
rcr
movsl
add
jo
scas
bound
xorl
test
fists
test
sub
mov
movsb
inc
shll
int3
sub
cli
mov
dec
ss
jecxz
adc
push
xchg
bound
mov
nop
enter
lods
add
sahf
or
adc
sti
cltd
mov
add
imul
inc
stos
jl
xchg
in
mov
fdivrs
lcall
sbb
mov
xchg
xor
sub
push
orb
sub
out
adc
andl
dec
dec
stc
std
fdivrl
jg
jp
xor
adc
enter
xorl
push
mov
test
negb
stos
jl
negl
and
aam
addr16
lcall
clc
les
in
xor
push
xchg
rol
in
cmp
sahf
lds
ss
repz
enter
rcl
push
dec
mov
pop
cs
aas
sti
jno
test
mov
out
sbb
mov
in
stos
sbb
das
jl
fcmovnu
add
in
push
pop
mov
outsl
loop
icebp
jmp
push
push
push
out
mov
lods
cmp
fidivs
xor
xchg
adc
cmp
in
jne
and
dec
repz
jb
cli
sub
aaa
lret
sub
push
cmp
imul
mov
xchg
fsubs
out
mov
push
cs
xchg
rcrl
mov
sub
cmpsl
push
pop
ficompl
or
or
jl
jb
pop
sahf
test
loope
shr
cld
mov
cmpsb
aam
xchg
xor
sub
ds
jmp
std
lcall
jbe
data16
dec
mov
andl
inc
and
lea
mov
and
stos
lods
rorl
in
in
jb
cmp
xchg
mov
and
insb
lcall
jge
jb
mov
inc
pop
add
xor
je
dec
mov
repz
or
out
adc
dec
pop
mov
pop
popf
or
mov
fbld
mov
or
jmp
imull
jns
xchg
jo
sbbl
inc
lea
into
and
iret
fadd
pop
scas
scas
stc
cmp
mov
adc
add
mov
movl
mov
stos
or
pushf
jo
inc
push
cld
or
mov
in
ror
std
lret
je
das
push
and
mov
rolb
aam
insl
add
mov
xor
dec
push
fwait
popf
insl
test
add
popa
pop
arpl
mov
outsb
adc
fsts
pop
lods
push
das
or
lcall
lret
outsl
insl
mov
mov
testb
push
into
mov
xor
jp
cmpsl
sti
or
cld
fadd
je
xor
stos
mov
or
out
push
mov
inc
xchg
mov
xor
and
dec
xchg
cltd
push
stos
sub
jle
sub
jp
push
aam
jne
pop
test
push
xor
repnz
xchg
gs
movl
jno
push
stos
loopne
push
outsb
cld
mov
and
mov
push
dec
cmp
mov
movsl
sbb
pop
mov
sub
xor
ss
jns
hlt
bound
pushf
insb
mov
mov
mov
and
mov
dec
lret
hlt
mov
pop
mov
cmc
mov
inc
in
lret
les
add
or
jmp
andnps
pop
mov
lea
mov
adc
in
push
xchg
mov
adc
push
pop
out
push
in
imul
adc
std
mov
outsl
sti
sti
xchg
loopne
add
cmp
fmull
out
push
adc
sub
scas
fisttps
mov
rorb
sbb
jae
jns
mov
push
insl
lcallw
pop
or
mov
mov
enter
sahf
iret
loop
mov
fwait
xchg
fcmovnbe
pop
jp
add
add
cmpsb
je
scas
fwait
jp
mov
pushl
mov
insl
call
lea
jb
xor
mov
jno
xchg
push
pop
sbb
movaps
mov
call
xchg
adc
loop
sahf
inc
mov
in
test
or
pop
cmpsb
imul
sub
ret
out
enter
stc
outsb
xor
mov
dec
std
add
inc
test
pop
inc
mov
mov
shll
cmp
movsl
out
repnz
mov
mov
adc
data16
xchg
cmp
insl
rcl
sub
addr16
push
mov
in
mov
movsl
jno
jno
jno
pop
and
insl
sbb
je
adc
arpl
lcall
mov
std
outsb
pushf
mov
aam
pop
dec
mov
push
hlt
xchg
sti
das
push
leave
mov
hlt
test
lea
push
sub
jecxz
add
cmp
mull
add
mov
cmc
mov
jmp
int
inc
pop
sbb
out
or
sarb
mov
ss
push
pusha
fst
ljmp
js
pop
das
stos
mov
loope
nop
imull
dec
mov
xorb
fnsave
inc
and
xchg
loop
pop
sub
sti
divb
jmp
aam
cmp
sub
in
sbb
cmp
or
insb
rorb
scas
push
pushf
mov
das
jl
xchg
xchg
pop
inc
adc
inc
cs
jns
xor
ret
mov
adc
in
jl
inc
jbe
pop
push
mov
mull
sub
push
test
inc
cmp
cmp
lods
jge
lahf
in
xchg
repz
clc
nop
mov
add
in
sub
fwait
dec
ja
sub
loop
mov
cmp
sbb
or
pop
or
mov
imul
or
inc
xor
iret
sarb
sbb
call
mov
les
shrl
sbb
adc
int
sbb
sahf
jbe
or
fnsave
jne
lahf
or
stc
jmp
lret
lds
insb
pop
mov
loope
or
xor
mov
test
gs
mov
mov
std
sahf
xchg
mov
push
mov
push
mov
add
cmc
dec
sbb
jmp
enter
xor
jle
pop
bound
xchg
mov
lret
or
sub
xlat
fwait
clc
mov
pop
stos
test
cltd
repz
pop
dec
adc
in
lcall
sub
mov
int3
outsl
imul
jo
jno
pop
shlb
mov
push
add
mov
leave
fldl
cmp
sub
aam
dec
push
add
es
mov
packssdw
fs
mov
gs
jle
data16
cmpb
sbb
push
pop
lods
xor
pop
adc
loope
scas
inc
scas
test
mov
es
mov
sub
test
aam
pop
inc
mov
dec
aas
push
lret
sbb
popa
mov
mov
jge
out
lahf
xchg
inc
mov
test
int
mov
cwtl
mov
push
mov
inc
push
push
or
xchg
andb
dec
push
movsb
mov
push
outsl
and
push
push
and
outsl
sub
adc
xchg
cmp
xchg
inc
push
adc
mov
mov
call
xor
dec
mov
sub
inc
pop
mov
xchg
add
test
push
repnz
xchg
pop
sahf
add
xor
scas
xor
inc
outsb
das
cmpsl
adcb
or
jno
hlt
or
fwait
out
ret
mov
pop
xchg
fdivrs
mov
pushf
jl
movsl
fldt
movsl
mov
out
mov
jb
arpl
sub
stos
jl
mov
jl
dec
xchg
or
nop
jmp
and
insl
dec
or
xchg
dec
and
and
ficomps
fnstcw
sbb
rorl
clc
in
leave
adc
cld
push
lock
and
xchg
fwait
es
jae
sub
and
and
lahf
mov
jp
or
sub
in
scas
addr16
pop
sub
dec
cmc
mov
movsb
pop
arpl
mov
pop
mov
out
inc
mov
jle
inc
pop
xchg
mov
add
dec
addl
sub
adc
inc
negl
je
sbb
adc
out
mov
sub
xor
ja
test
fnsave
push
imul
or
xor
or
mov
stc
push
ret
mov
inc
icebp
popa
lock
mov
xchg
data16
mov
faddl
cmp
fdivs
inc
icebp
mov
sub
pop
test
or
push
dec
sbb
sbb
fdiv
sti
xchg
stos
les
pop
jmp
push
sub
ja
xchg
ret
mov
lret
adc
cmpsb
pop
pop
inc
cmp
jmp
mov
rcrl
je
stos
inc
addr16
dec
push
adc
repnz
movsl
pop
mov
dec
movsl
push
bswap
mov
clc
cs
insb
xor
or
pop
sbb
mov
add
cmp
push
cli
sub
sbb
imul
outsb
dec
addr16
or
sub
jle
lods
push
pushf
aam
shll
lds
daa
xor
sbb
out
lods
cmpsl
dec
pop
ret
cmp
cli
stos
dec
lea
jbe
jbe
scas
ja
sub
movsb
in
mov
test
test
pop
lock
rolb
mov
mov
mov
lret
mov
add
clc
cmp
clc
stos
cmp
mov
mov
jle
sub
add
inc
das
mov
dec
add
cmp
pop
test
shrb
sub
sub
mov
xchg
sti
fdivrs
popa
pusha
or
repnz
out
push
insl
cmp
cmc
pop
dec
sbb
out
and
decl
xor
xor
js
sbb
fs
mov
stos
jno
push
or
dec
push
lret
lret
bound
fistl
lea
ds
cmc
bound
ja
xchg
xchg
pop
lods
cmc
pushf
dec
pushw
int
push
cmp
xchg
rclb
jae
cmpsb
adc
xchg
mov
sub
ss
jl
idivl
mov
sub
int
notl
jno
xor
jnp
mov
ficoml
cmpb
jne
dec
cld
xchg
cli
xor
cmpb
hlt
aad
xor
fnstcw
movsl
adc
mov
fmuls
xchg
push
fcmovu
jmp
push
in
jmp
testl
mov
aad
std
push
pop
hlt
jb
mov
pushf
dec
push
test
popa
lds
push
out
push
xchg
negb
sahf
and
ret
test
lcall
repnz
jl
aas
jecxz
adc
in
js
xor
pop
daa
pop
cmp
jb
xor
pop
lea
movsl
push
dec
xchg
xchg
add
sub
popa
outsb
xlat
lcall
lret
jle
and
xchg
out
sub
and
rorb
addb
push
cmp
sub
jno
add
repnz
jl
xchg
ret
mov
dec
fisubrs
mov
xchg
cmp
cs
lods
dec
pop
out
es
imul
fiaddl
jo
mov
aas
sbb
adc
adc
call
jecxz
mov
lods
rolb
fxch
sub
shrb
out
stc
pop
iret
dec
movsb
mov
mov
pop
inc
mov
mov
push
lret
movsl
loop
and
mov
sub
xchg
mov
sub
xor
cmpsb
cmpsb
add
xor
adc
jle
mov
add
pop
scas
mov
sbb
cmp
pop
pusha
pop
lods
jge
stos
and
loop
xor
xchg
mov
fcmovu
xor
push
shlb
cmpsl
dec
repnz
sbb
inc
push
push
int3
cld
sbb
imul
bound
bound
imul
test
cld
sub
xchg
rcrl
pop
or
std
cmp
test
push
push
or
mov
fwait
cmpsl
out
mov
scas
out
jecxz
jmp
cmp
push
repz
and
dec
adc
inc
cld
sub
xorl
cmc
sbb
mov
test
test
and
imul
mov
loope
pop
mov
adc
jle
test
cmp
fwait
xchg
cmp
adc
aad
addl
lea
adc
inc
and
movsl
ja
adc
out
imul
mov
or
sub
addr16
loope
and
mov
sbb
mul
outsb
xchg
scas
xchg
xchg
inc
pusha
cmc
inc
sahf
mov
lock
ret
ds
mov
pop
bound
dec
sahf
mov
jne
mov
mov
lds
mov
xor
stos
push
dec
dec
dec
inc
jae
subl
jge
sub
ja
sbb
dec
out
fistpl
imul
cwtl
mov
pop
mov
fmul
rorb
in
loop
add
cmpsb
nop
pop
loopne
pop
shrb
aam
mov
movsb
insl
mov
jbe
fs
pop
add
out
pop
ds
out
cmp
pop
inc
jg
add
lcall
push
jnp
pushf
push
inc
clc
xor
imul
fiaddl
andb
push
jmp
sahf
ss
dec
mov
icebp
ret
xchg
mov
xchg
jle
add
jmp
orb
sub
push
andb
mov
ljmp
xchg
mov
dec
sbb
sub
cmp
insl
xor
xor
mov
stos
jmp
fldt
into
ss
sbbb
jae
adc
jecxz
sbb
lcall
cmp
sub
out
imul
lods
adc
loope
jnp
test
sarb
movb
pop
dec
les
js
bound
dec
cmp
fsubrl
dec
and
fnstsw
push
fldz
test
push
leave
inc
fwait
add
cmp
xor
jae
jno
js
mov
pop
sub
cmc
in
das
dec
call
inc
mov
out
in
jns
lds
adc
shrb
nop
fistpl
imul
push
and
mov
mov
cmp
cwtl
imul
inc
stc
pop
sbb
gs
xor
pop
bound
jmp
adc
sub
leave
pop
and
insl
dec
faddl
repnz
clc
mov
sub
sbb
into
sub
arpl
xchg
arpl
add
cwtl
leave
or
shlb
xor
std
xor
dec
rorb
mov
xorl
adcl
repnz
jmp
mov
pop
data16
in
sub
nop
push
or
out
cwtl
cmp
lcall
scas
mov
push
push
adc
dec
cmp
les
or
sbb
push
mov
push
and
fcmovb
sub
sub
inc
inc
dec
shrb
xchg
push
flds
mull
loope
pop
enter
roll
mov
outsb
pop
hlt
sti
ljmp
rclb
add
or
es
sti
xchg
add
adcb
dec
aaa
mov
clc
or
in
pop
sub
cmp
inc
sahf
mov
mov
cli
nop
popf
cltd
xchg
push
enter
xor
adc
jp
dec
mov
cmp
subl
sub
mov
sub
inc
and
push
dec
in
mov
push
fs
rolb
adcl
sub
movsl
cmp
into
or
ja
push
and
fs
addr16
adc
jnp
stos
or
insl
test
fistps
dec
ret
call
dec
and
nopl
sub
sbb
pop
add
roll
push
mov
call
sub
imul
movsb
pop
pop
sbb
imul
shl
mov
mov
or
pop
sbb
jns
sub
mov
fs
out
stc
inc
jnp
or
dec
mov
bound
jecxz
aaa
push
dec
xchg
popf
pop
mov
xchg
push
jmp
andb
dec
mov
arpl
push
jb
inc
jge
aas
dec
mov
out
sbb
aad
ss
jo
sti
mov
jle,pn
xchg
sub
pop
insl
sbb
sub
lods
pop
loopne
adc
or
jnp
dec
sbb
faddl
movsl
sub
inc
pop
sti
and
les
test
mov
cmpsb
fucom
xchg
jge
inc
outsl
dec
mov
icebp
out
cmc
push
shrb
sub
pop
arpl
bound
stos
data16
mov
ss
xor
pop
insb
push
and
mov
imul
popf
shll
push
fsubrp
aam
pop
hlt
adc
xchg
adc
xor
aad
push
rorl
pop
cmp
daa
cs
sbb
push
xchg
jno
outsb
mov
fiadds
shll
add
outsl
fdivrl
test
mov
jb
shr
cmc
fimull
sub
divl
aam
sub
stos
mov
mov
rorl
fsubrs
movsl
add
sbbb
test
shll
test
es
scas
in
test
outsl
in
xchg
mov
push
addr16
push
sbb
shrb
rcll
mov
clc
cltd
xchg
mov
pop
or
test
jl
or
out
sub
dec
fimull
test
add
movsb
sahf
mov
xchg
loope
insb
rep
cmp
fldcw
loop
mov
ljmp
daa
push
inc
pop
out
std
push
xor
xchg
mov
pushf
sti
or
lea
scas
std
mov
fs
or
es
jbe
lcall
mov
shl
sub
lcall
movsb
lcall
push
add
aad
sub
xor
ss
and
push
jns
insb
or
xchg
pop
rorl
ja
xchg
jmp
mov
negb
xor
ja
mov
pop
mov
insb
vmovupd
mov
movsb
xchg
icebp
xchg
push
lods
jecxz
jae
xor
adc
outsl
xor
lcall
adc
repnz
popf
push
fimuls
es
sbb
enter
fnstenv
loope
fimull
cmp
popa
repnz
inc
or
idiv
push
push
out
lods
pushf
mov
mov
or
and
push
xchg
sbbl
ret
int
push
dec
dec
inc
inc
imul
pop
xorl
sub
cli
sbb
sbb
jo
es
add
cs
sbb
mov
cld
testb
sbb
repnz
push
ljmp
fst
movsb
dec
loope
out
or
mov
stos
sub
cmpsl
hlt
js
scas
mov
jnp
les
loopne
js
arpl
in
lret
nop
lods
adc
sub
pop
push
xor
xor
movsl
loope
or
mov
push
jp
dec
imul
shl
inc
push
cs
sub
out
xlat
pop
mov
pop
sbb
stos
stos
sbbl
sub
mov
sahf
push
enter
mov
sbb
int
testl
mov
pop
sub
or
ficomps
orb
inc
add
pop
mov
jae
xor
jbe
jns
lahf
push
jo
mov
mov
loop
add
sub
mov
dec
movsl
pop
in
test
loope
mov
icebp
cmp
sbb
sub
cmpsl
sbb
cmpsb
notl
sub
pop
out
add
sarl
add
movsl
sub
mov
push
jns
out
mov
ja
fisubl
ficoml
cmp
and
xor
or
and
imul
fcmovb
mov
mov
or
cmp
addl
clc
push
fs
subl
cmp
or
enter
sub
jecxz
sarb
xor
jle
dec
pusha
jnp
insl
or
inc
rcrl
push
pop
popf
pop
cmpsb
arpl
imul
dec
xchg
push
mov
rcr
aad
or
je
and
jle
loopne
inc
movsl
adc
fs
scas
popa
and
pop
xchg
pop
xchg
cmp
cld
pop
dec
call
and
jb
int3
lods
sbb
mov
inc
pop
je
mov
push
shll
lahf
out
mov
roll
imul
mov
mov
out
lcall
cli
ja
add
sub
aam
xor
in
insl
popf
jmp
cmp
loope
popl
sbb
popa
pushf
addl
cs
lret
pushf
stos
insl
gs
inc
mov
test
shl
xchg
loop
pop
mov
xor
dec
or
cmp
pop
rclb
enter
repnz
ficomps
rcl
pop
sub
mov
lods
add
loope
sbb
push
xor
and
inc
or
add
popf
pop
dec
into
mov
xchg
mov
cmc
mov
fs
jnp
jnp,pn
das
pusha
lock
mov
clc
push
js
mov
mov
loope
mov
push
jecxz
ror
and
shrb
cmp
sub
int
mov
inc
test
sbb
hlt
call
inc
cmp
xchg
out
mov
fucompp
push
loope
mov
outsb
and
xchg
xchg
jecxz
daa
mov
push
cld
and
je
mov
xchg
push
sbb
in
mov
sbbl
mov
mov
std
lods
or
mov
ja
dec
sti
pushf
add
fdivl
push
jo
lret
daa
or
mov
shlb
addr16
cmp
outsl
pop
aas
mov
ficompl
nop
lds
inc
in
test
mov
add
inc
lods
inc
sti
xor
sub
fwait
xchg
aaa
rcrl
bound
xchg
add
lds
fld
mov
test
stos
fs
cmc
sbb
push
lea
push
jg
fidivs
sti
pushf
in
popa
or
cmpsl
cmpsb
mov
fcmovnu
sbb
xchg
jl
add
bound
push
int
insb
pushf
cli
out
jle
cmc
sub
inc
add
cld
lea
imul
in
xchg
mov
xor
hlt
movb
subl
in
add
sahf
dec
dec
xor
jle
arpl
sub
in
jb
leave
daa
pop
sbb
dec
gs
lods
mov
in
ja
nop
mov
andb
add
test
loop
rorw
arpl
push
test
push
adc
or
iret
pop
inc
push
or
cmc
mov
stos
push
push
pop
jne
lahf
xor
scas
jnp
push
push
rcll
test
movswl
xor
ret
sub
aas
push
leave
test
sub
jge
outsl
je
mov
xchg
fs
cld
fisttpll
out
in
cli
xor
ljmp
mov
jecxz
notl
dec
mov
dec
test
cmc
hlt
and
pusha
gs
aas
mov
pop
mov
mov
sbb
sbb
and
stos
outsb
push
mov
mov
in
popa
lds
in
mov
vdivss
in
jecxz,pt
addr16
cltd
cmp
jg
mov
dec
iret
inc
cwtl
pop
in
mov
or
cmp
clc
insl
decb
test
test
and
pusha
and
pop
addl
jmp
dec
out
mov
and
sub
fistps
pop
test
pop
lods
xor
lock
int3
inc
std
mov
mov
cmp
inc
sub
popf
or
or
out
ss
add
rcrb
das
xor
mov
pusha
lret
and
jno
adc
adc
out
in
in
loope
xchg
add
scas
cmp
insl
in
loop
and
push
addps
mov
stos
lods
insl
pop
lret
loop
test
jbe
out
xchg
cmpsb
sub
adc
pushf
fadds
dec
insb
call
gs
imul
gs
imul
pop
loopne
inc
mov
stc
add
pop
bound
sbb
jno
mov
popf
and
xor
iret
add
lock
sbb
xlat
mov
rclb
push
data16
ficoml
jl
and
cs
lea
push
jg
jnp
adc
xchg
clc
les
in
jle
xchg
cld
mov
and
movsl
push
jae
pushf
int
push
xor
and
les
nop
idivb
ds
cmp
cmp
je
data16
lea
or
out
cld
shrl
iret
sub
cwtl
pop
and
inc
pop
fistpl
movzbl
jae
loop
movsl
and
sti
mov
and
pop
jge
cmpsl
mov
aaa
lods
idivb
push
jmp
sbb
test
dec
adc
push
dec
in
adc
aam
cmp
jo
fildl
cld
fsubl
scas
xchg
inc
jne
jns
mov
add
icebp
mov
aam
mov
addr16
ret
fwait
mov
sbb
testl
mov
xor
cmp
push
inc
in
mov
push
lock
adc
aad
pop
subb
add
in
test
scas
and
out
pop
inc
insb
loopne
es
xor
cmpsb
ffreep
scas
jp
idiv
adc
jns
sub
push
out
lock
lahf
jp
call
es
addr16
push
pop
into
sbb
jno
mov
mull
dec
lods
inc
clc
sbb
or
add
cs
jae
push
pop
filds
push
and
inc
js
adc
inc
xchg
ljmp
les
adc
push
jae
push
cld
repz
stos
inc
pop
push
pop
and
pushf
jne
dec
outsb
icebp
push
pop
push
pushf
scas
fadds
push
cmpsb
stos
push
subb
mov
pop
scas
sbb
mov
ds
jae
orl
xlat
lcall
cli
cmp
xchg
add
jmp
pop
stos
cmc
sub
and
jge
jmp
pop
or
dec
stc
mov
shlb
mov
test
adc
add
or
dec
decl
push
mov
xchg
test
or
aaa
sbb
cmp
mov
mov
int3
jnp
push
dec
dec
es
ss
cmp
cmp
faddp
push
insl
add
push
push
or
stos
repz
dec
jge
mov
bnd
xchg
jno
mov
sbb
ja
push
scas
inc
jns
push
mov
sarl
aaa
test
subb
inc
mov
fsubr
jne
daa
je
std
xchg
mov
dec
mov
js
inc
mov
mov
xchg
add
sbb
dec
dec
cmpsb
cmp
dec
dec
mov
imul
sar
adc
fnstsw
jle
cmp
fidivs
scas
ja
jbe
xchg
cld
cmpsb
mulw
ljmp
cld
mov
addr16
loopne
bound
ret
insl
rcrb
mov
lcall
rol
xor
pop
jb
pop
repnz
push
repz
dec
xor
mov
inc
stc
test
push
or
push
lahf
movsb
out
sbb
xor
sub
dec
insb
cmp
fisubl
loop
inc
sbb
mov
cltd
fcoms
inc
dec
jb
divl
loop
pop
pushl
dec
pop
xchg
jbe
mov
pop
int3
mov
movsl
jo
mov
jg
testb
aas
push
add
mov
pop
lods
mov
mov
pop
cmp
jae
sbb
pop
or
mov
jecxz
mov
sbb
xlat
incl
fadd
lret
addr16
pop
jno
aam
cmp
movlps
cld
adc
and
adc
inc
push
jo
mov
aas
mov
mov
imul
and
lds
sarl
loope
cs
cmp
ficompl
xchg
xchg
js
jne
pop
movsb
mov
sbb
xor
mov
cmp
dec
and
call
int
jp
sub
mov
fmul
lea
lcall
in
out
mov
and
cmpb
inc
lret
mov
fmul
iret
mov
fcomps
and
mov
add
shrl
mov
cmp
adc
mov
les
outsl
push
lret
push
mov
or
cmp
loop
std
mov
cli
outsb
movsl
and
pop
mov
pop
div
repz
fiadds
hlt
gs
aas
mov
fistpll
mov
push
and
push
pop
jle
mov
mov
int
cmp
jecxz
aaa
inc
jns
dec
cli
mov
fs
stos
add
loope
xchg
and
aam
push
addl
movsl
jns
mov
lods
mov
lock
cmp
popf
mov
clc
jb
mov
pop
xor
push
or
outsl
ljmp
insb
filds
clc
mov
mov
sub
imul
aas
adc
jle
das
out
test
repz
shlb
mov
pop
jmp
in
rolb
jg
into
cmpsl
testb
movsb
push
mul
sbb
mov
enter
dec
scas
and
dec
cld
mov
pop
or
sbb
cmp
jmp
stos
xlat
out
aam
cwtl
iret
sub
xlat
xchg
xor
push
iret
dec
push
cmc
iret
push
shrb
or
and
movsl
dec
mov
adc
adc
dec
insb
add
add
mov
xor
mov
movsl
lahf
data16
jmp
pushf
stc
scas
push
sub
lods
push
pop
fstps
xchg
mov
add
cmpsb
dec
mov
testb
leave
xor
push
sbb
nop
lods
std
mov
xor
imul
dec
mov
lds
pop
adc
mov
dec
adc
jo
push
jp
and
xchg
int3
std
arpl
jns
sbb
les
stos
mov
pop
insb
les
xchg
push
mov
out
mov
mov
cld
xchg
xchg
push
dec
movsb
scas
test
xchg
ss
out
pop
test
aad
cmp
sti
cmp
adc
jbe
fisttpll
add
and
xchg
jae
ja
pop
xor
xor
mov
push
xchg
fs
xchg
add
xchg
add
xchg
add
sti
push
pop
icebp
mov
mov
mov
mov
xchg
iret
push
fyl2x
cmpsl
int3
lret
les
add
jmp
es
mov
jb
cmp
inc
and
jmp
dec
push
dec
jge
xchg
fs
insl
jle
cltd
jecxz
sarl
inc
push
les
pop
std
outsb
rorb
mov
fmul
xor
inc
jle
mov
inc
jl
jecxz
shr
enter
lods
cld
pop
and
and
pop
jbe
outsl
xchg
pop
mov
in
pop
mov
and
lcall
les
nop
fcmovb
xchg
pop
push
push
dec
cmpsb
pop
nop
ffree
fdivrs
or
in
dec
int
aaa
or
imul
pop
lea
add
add
popl
in
sub
nop
pop
pop
mov
not
sbb
mov
mov
insb
nop
jb
enter
xor
xchg
dec
pop
loopne
cmpsb
insl
push
sbb
cs
inc
or
dec
cmp
jne
xchg
cs
push
fnstcw
mov
jnp
cli
outsl
pop
push
call
fisubrs
pop
fldt
pop
dec
stc
mov
pop
inc
ret
adc
cmp
ja
cmc
xchg
xchg
cmp
sub
mov
in
hlt
js
cmpb
jbe
or
cmp
mov
icebp
xlat
mov
daa
inc
jmp
mov
lock
xchg
or
imul
inc
jne
test
loopne
cld
iret
push
sbb
sub
push
xor
cmc
lods
sbb
xchg
loop
std
stos
call
nop
pop
stos
test
sbb
add
test
fsub
mov
test
add
xchg
sub
test
xchg
fsubs
jb
test
mov
cmp
imul
stos
or
enter
lods
adc
pusha
mov
or
adc
lods
notl
mov
sbbb
shrb
push
jbe
data16
in
xor
push
push
out
and
cmp
jno
sti
sbb
ret
or
adc
push
sti
push
mov
jae
or
movsb
cli
sub
and
cs
divb
lods
movsl
xchg
dec
or
inc
and
sti
loopne
push
fdiv
jns
lret
addr16
mov
xchg
sub
pop
pop
sahf
shrl
mov
ja
adc
lods
pop
jmp
xchg
inc
push
mov
frstor
add
push
mov
test
icebp
ljmp
stos
push
inc
dec
lods
pop
xchg
xor
outsb
adc
pop
jl
stc
pop
push
push
or
push
add
aam
out
push
por
popa
inc
stc
xor
mov
gs
test
lret
movsb
jmp
or
adc
addl
popa
popf
out
push
lea
mov
jl
push
dec
mov
fisubl
pop
cmpsb
aam
into
and
and
and
cmp
sbb
or
in
mov
cmpb
mov
jl
daa
mov
add
frstor
add
mov
mov
sbb
testb
sub
xchg
push
lods
xchg
cmpsw
cmp
test
cmp
sub
orl
and
inc
jns
jecxz
xchg
lret
mov
xchg
arpl
ljmp
into
leave
outsl
testb
dec
push
nop
movsl
inc
push
sbb
or
nop
movsl
inc
add
lds
into
mov
or
out
mov
jecxz
cmp
in
jp
cmp
push
scas
cltd
loopne
xlat
cld
jmp
dec
cltd
ljmp
sarl
inc
imul
mov
mov
adc
and
add
cwtl
clc
stos
mov
adc
dec
jg
inc
scas
into
das
jp
cli
cwtl
jp
test
mov
dec
in
inc
icebp
push
ljmp
pop
dec
pop
pop
and
js
xlat
add
xchg
xor
cmp
rclb
decb
cmpsl
sub
adc
and
mov
mov
xchg
mov
jecxz
out
pop
push
mov
int3
push
sub
notb
fstpt
push
sbb
adc
add
add
dec
xchg
mov
xor
gs
int3
sbb
cltd
faddp
mov
js
adcl
outsb
push
adc
push
inc
or
pop
sub
pop
xchg
xor
aam
decb
aaa
xchg
shll
add
int
bound
push
cmp
inc
jns
jne
aad
jl
pop
movsl
xchg
int3
fdivs
repz
or
pop
xchg
sti
rcll
adc
adc
sub
push
aad
cltd
mov
pop
test
lahf
inc
mov
sub
push
xchg
fwait
es
and
jae
shll
in
stc
or
pop
mov
shrb
push
sub
add
sbbb
and
out
and
loopne
or
inc
aam
push
pop
jns
in
faddl
inc
and
jne
mov
stos
inc
out
in
jp
int
dec
sbb
add
jl
cmp
pop
loope
sar
fisttpll
mov
inc
outsb
mov
ss
sbb
lret
es
xor
jl
inc
sti
pop
jge
dec
je
fidivrl
or
int3
adc
test
rcl
adc
and
sbb
jns
loope
adc
jmp
int
int3
inc
aam
icebp
or
jg
enter
mov
add
sbb
in
jbe
inc
jle
inc
aam
adc
test
add
sbb
lock
daa
jmp
adc
dec
lea
mov
out
cli
int
arpl
sbb
pop
in
dec
push
add
dec
push
aad
and
add
repnz
add
add
sahf
mov
xchg
pop
repnz
les
add
movsl
sbb
inc
sbb
lahf
popf
movsb
addr16
mov
js
aad
test
loopne
in
push
loope
dec
cmp
adcl
pusha
repz
addr16
popa
fucomip
stc
frstor
jne
adcl
add
adc
das
jae
xchg
aam
rolb
dec
insb
movsl
lcall
je
stos
cltd
mov
add
dec
mov
add
rorl
xchg
sahf
cmp
fisttpll
and
sbb
hlt
mov
hlt
add
aam
mov
sbb
lds
test
xor
push
mov
jle
sub
sti
in
cmp
lcall
sbb
aam
nop
jecxz
jo
stos
sub
push
shll
and
test
lock
sbb
movsl
push
out
mov
inc
adc
pop
ffreep
fiaddl
out
lcall
mov
adc
mov
jne
mulb
or
add
xor
mov
fsubrs
sbb
jae
loope
xchg
lcall
push
call
adc
stos
xchg
out
sbb
jb
test
fstps
pop
adc
sub
loop
push
sub
adc
fildl
imul
push
and
adc
daa
cmc
lret
out
sbb
int
pop
flds
mov
insl
jbe
adc
divb
xchg
jb
movsl
cmpsb
fistpll
aad
jns
mov
and
out
push
cld
frstor
cltd
cs
adc
sub
loop
lcall
jb
and
jns
mov
push
outsl
call
ret
jl
loopne
into
jo
mov
or
adc
add
xlat
sarl
addl
pop
inc
or
lcall
cmp
testb
mov
adc
imul
rorb
adc
imulb
test
inc
xlat
sbbl
nop
xor
mov
xchg
add
xor
cmp
push
pop
xchg
cmpb
aas
inc
leave
jns
clc
fwait
stc
xchg
or
in
adc
imul
pop
ds
add
inc
sbb
mov
add
sbb
sub
dec
add
jb
fsub
adc
aad
xor
xchg
jbe
pop
dec
in
sbb
int3
orl
cmc
add
sub
pop
push
push
loope
push
jns
or
add
shl
mov
out
test
and
bound
loop
incl
mov
cmp
stc
int
stc
cmc
std
pop
xchg
jle
mov
pop
mov
fimull
test
xor
in
cwtl
movsl
or
sbb
clc
mov
and
and
aad
fcom
in
xchg
xchg
insb
hlt
push
add
dec
dec
bound
cwtl
or
test
mov
fwait
shl
pusha
pop
inc
lea
sti
and
push
xlat
in
xchg
xor
leave
sarb
jmp
out
xchg
in
push
fistl
cwtl
cwtl
cmp
cmp
loope
andl
aaa
leave
xor
xor
xor
dec
jl
into
shrb
pop
sbb
out
mov
daa
adc
jbe
cmp
pop
mov
cmp
jge
sub
dec
ljmp
jb
mov
sub
popa
popa
adcb
pavgb
push
repnz
rolb
mov
adc
jge
divl
sub
xor
lods
stos
jnp
fmulp
xor
xchg
jmp
sbb
sbb
pop
sahf
ja
mov
movsl
push
nop
jmp
ljmp
mov
adc
pop
inc
scas
or
stc
mov
adc
jnp
pop
lret
call
add
sub
test
sub
xchg
in
mov
sub
pushf
inc
ja
mov
imul
cmp
out
mov
pop
mov
inc
popf
cmp
xor
inc
and
jle
pop
add
mov
lods
push
jnp
xchg
cmp
out
rcrb
inc
dec
mov
mov
mov
or
lret
jge
xor
icebp
fisttpl
jmp
sub
sub
fwait
mov
adc
ja
fisttpl
xchg
imul
push
ss
fidivrs
jnp
and
inc
pop
je
mov
cmp
xchg
cmp
test
ljmp
xor
mov
or
mov
xchg
stos
xor
cli
into
in
aad
iret
adcb
sbb
pop
or
inc
lcall
jno
int
jp
lds
cmp
mov
int
insl
mov
inc
or
push
sub
mov
test
popf
scas
cmp
inc
or
lahf
out
add
xlat
jmp
jns
gs
jne
mov
jg
mov
cli
push
push
adc
stc
fdivrl
xchg
xor
add
mov
movsb
push
rolb
outsb
jo
jmp
arpl
sub
cs
loop
mov
into
and
xor
gs
pop
movsl
sbb
dec
pop
mov
xchg
pop
mov
inc
clc
inc
test
mov
and
jo
lahf
fldt
ja
outsl
aam
push
loop
fistpll
mov
imul
test
jmp
xchg
and
sbb
sbb
sbb
inc
lret
push
fwait
mov
outsb
test
testb
ret
add
pop
push
arpl
inc
xor
enter
mov
dec
rcrl
or
outsb
xor
loopne
mov
scas
jle
mov
ss
or
test
add
into
push
push
xchg
xor
xor
xchg
decb
mov
mov
xor
jb
aas
test
cmp
jno
xchg
sbb
lahf
mov
loop
dec
xlat
push
xor
push
cmp
rcll
stos
hlt
mov
mov
bound
out
mov
insb
and
cmc
in
mov
pushf
adc
cmovs
imul
das
jo
xchg
lret
cwtl
xchg
out
jbe
sbb
or
jge,pn
imul
in
mov
insb
pop
xchg
ja
insl
mov
jp
inc
xor
sbb
inc
sbb
jge
xor
xchg
jno
stc
xchg
push
faddl
out
int3
js
shrl
xor
mov
shrl
int
inc
fisttps
add
add
xchg
bound
jns
jge
aaa
popa
jge
loopne
xchg
fisubl
push
fs
sub
lcall
mov
mov
ljmp
lret
pop
jbe
test
cmp
mov
pushf
sub
rcll
loopne
add
push
and
sahf
lahf
aad
lds
mov
adc
push
pop
imul
test
adc
pop
xlat
je
push
lahf
es
sahf
pop
mov
cmp
dec
pop
out
sti
xor
fs
addl
jl
sub
insb
mov
cmp
push
aam
daa
xor
jle
cs
xor
adc
mov
mov
fsubrs
jb
imul
xchg
es
stc
fldl
cli
aaa
movsb
inc
rorb
js
fs
rclb
decb
test
mov
fdivrs
data16
mov
sub
cmpsb
xchg
out
mov
das
mov
insl
lcall
dec
or
insb
movsl
mov
into
lods
jge
sub
dec
repnz
outsb
subl
iret
stos
bound
icebp
jno
sub
mov
push
scas
mov
push
sub
or
ret
fucomip
into
test
nop
mov
test
jae
inc
cmp
popf
outsl
xor
popa
adc
pop
cmp
sub
enter
mov
out
stos
or
lods
mov
mov
mov
and
cmp
xchg
outsb
popf
leave
cmpsb
cmc
into
dec
lea
call
xor
dec
call
cwtl
loopne
sub
push
outsb
pop
cmpsl
xor
aad
iret
jo
cmp
sbb
rcr
lcall
jno
ret
cmp
ror
clc
add
pop
dec
pop
inc
dec
dec
in
out
fwait
jl
mov
aam
loop
call
lods
ret
fsubs
pop
xchg
mov
sbbl
mov
mov
out
scas
pop
xor
call
xor
fstpl
clc
mov
or
xchg
xor
push
pusha
call
pop
insl
cli
jmp
mov
neg
aas
jp
fidivrl
stos
hlt
mov
jb
ss
or
and
or
rclb
test
mov
sbb
push
negb
cmp
lahf
je
nop
out
stos
dec
repz
fucomp
mov
push
cmp
adc
push
add
arpl
or
testb
mov
inc
mov
icebp
and
xlat
loope
call
hlt
enter
and
cltd
outsl
cmp
sbb
aas
int
shlb
arpl
fdivs
lods
dec
lret
lock
jne
faddp
and
cmc
js
add
mov
mov
push
adcb
adc
push
cmpps
push
ljmp
push
and
or
or
movsb
push
scas
addr16
std
lret
xchg
jmp
pop
sahf
mov
jmp
cmp
dec
push
hlt
or
cmp
xchg
pop
xchg
jo
xlat
cmp
leave
popl
inc
dec
fnsave
add
cmpsb
iret
pusha
or
xchg
cltd
jbe
or
jbe
push
repz
cmc
sub
push
mov
pop
mov
std
ljmp
jnp
sub
add
test
pop
mov
pop
sub
adc
add
pop
popa
jmp
xchg
cs
mov
nop
or
aaa
inc
dec
mov
out
sbb
cmp
mov
sbb
push
fimull
xor
leave
in
push
out
loope
icebp
in
shl
cmp
lea
stos
shrd
sbb
es
cmp
mov
sbb
push
repnz
sbb
mov
mov
mov
inc
rcrb
mov
pusha
jns
js
push
movsb
xchg
or
or
cmp
pop
xchg
ds
idiv
call
push
sbb
fists
popa
jmp
fsubs
test
jmp
sbbl
out
loopne
push
fldenv
mov
std
and
subb
ja
or
int3
pusha
mov
xor
mov
adc
call
xchg
xor
or
inc
jmp
lds
test
mov
loopne
loopne
mov
xlat
cmp
jb
incl
pop
jno
jg
push
dec
sub
sbb
scas
lock
xchg
and
mov
mov
add
mov
or
call
fstl
frstor
inc
xlat
int3
or
cld
push
jo
lock
dec
or
pusha
inc
cmp
out
pandn
push
mov
adc
repz
and
mov
imul
dec
das
scas
fdivrl
fistps
bound
xchg
cmp
mov
xchg
mov
mov
cwtl
lock
scas
lcall
pop
xchg
aas
mov
or
pop
mov
lret
addl
jbe
sbb
fs
dec
lock
push
mov
es
pop
call
dec
dec
xchg
test
adc
dec
jle
lret
cmovne
leave
mov
sbb
shll
mov
fs
sub
ja
and
cli
push
pop
iret
lret
pop
je
insl
push
mov
adc
pop
lret
dec
adc
inc
bswap
int
mov
cmc
sub
inc
inc
adc
mov
jl
push
imul
mov
cmpsb
in
inc
mov
cmpsl
inc
enter
leave
cmp
jne
testl
mov
cmp
out
loopne
ds
shll
mov
adc
cmp
loopne
mov
mov
cmp
push
test
mov
pop
xlat
mov
je
pop
cmp
popa
nop
lcall
mov
mov
xchg
out
inc
repz
mov
cmc
fxam
outsl
adc
dec
pop
xor
pop
inc
mov
sub
test
mov
mov
mov
int
dec
mov
xchg
push
xchg
aas
xor
add
dec
xchg
mov
mov
and
pop
mov
jno
fcmovb
mov
cwtl
imul
xchg
dec
sbb
add
out
push
insb
das
and
aam
push
dec
mov
popf
adc
push
xchg
fdivl
xchg
push
add
sbb
fists
cwtl
mov
mov
mov
mov
imul
pop
test
xor
imul
pop
xchg
or
inc
push
or
mov
adcl
jbe
adc
fs
sub
jbe
jecxz
stos
fisttpll
jp
bound
hlt
into
sub
add
adc
stos
inc
lahf
mov
push
pop
push
push
lret
push
lcall
loope
jp
aad
cwtl
mov
mov
roll
repnz
out
inc
cli
push
outsb
mov
mov
push
jge,pn
cmp
aam
inc
leave
movsl
xlat
pop
push
je
dec
cmp
inc
inc
push
push
sarl
inc
inc
out
pop
and
mov
fcmovnb
popa
xor
ret
push
dec
pop
in
push
popf
sub
lods
clc
push
loope
lods
fs
mov
add
jecxz
mov
daa
push
leave
leave
dec
aad
sbb
test
inc
inc
fstl
sbb
or
fldl
mov
cmp
test
test
lcall
stos
push
faddl
lea
imul
jae,pt
push
loope
daa
add
or
fwait
mov
xchg
pop
jns
lods
mov
jg
ffreep
ret
jmp
imul
aas
jns
std
imul
mov
cmp
mov
cli
sahf
clc
cltd
push
test
daa
loop
mov
shrb
mov
and
adc
push
dec
das
and
jg
enter
mov
sbb
sahf
in
stos
mov
into
push
jbe
int
lret
xchg
cmpsb
inc
mov
add
mov
pop
stos
sbb
rcr
fcoms
sbb
cmp
addr16
cmc
add
add
sbb
xchg
shll
dec
pop
sbb
fstpl
bswap
imul
xchg
int
orl
jp
ss
hlt
adc
adc
out
out
mov
mov
pop
mov
loop
sarl
fidivs
push
mov
or
cmp
add
xchg
push
lcall
std
adc
push
ds
adc
fistl
fcmovbe
jmp
dec
mov
push
lret
ds
mov
pop
les
aam
cli
jno
xchg
push
es
dec
pop
pusha
test
rorl
jge
pop
pop
and
cmp
mov
cmpsb
mov
jbe
push
fnstenv
add
loop
aas
aas
addr16
repnz
subb
jbe
push
repnz
jo
dec
or
xor
mov
mulb
mov
mov
loope
xchg
lahf
sbb
stc
stc
loop
out
or
and
mov
jbe
xchg
and
cmp
sbb
xlat
xchg
leave
imul
clc
movsl
xor
push
pop
fstl
test
mov
lods
icebp
lret
jg
cmpsb
les
add
fsubr
cmpsl
sub
adc
pop
ljmp
sub
adc
popf
stc
enter
mov
lods
sbb
dec
and
sbb
imul
push
jae
push
push
fnsave
aas
adc
shr
les
mov
jle
repnz
jg
push
sub
inc
shrb
je
sbb
ljmp
fistl
pop
mov
xchg
mov
orb
out
mov
sbb
icebp
je
push
aas
cmp
sub
lahf
push
outsb
cltd
decl
xor
roll
cld
jns
cmpsb
in
std
inc
adc
xor
cmp
sub
ret
scas
into
push
sub
movl
rorl
push
jae
and
insl
sub
sbb
cwtl
push
jae
mov
mov
lahf
mov
or
dec
and
ss
aad
inc
adc
cli
insb
and
cmc
jecxz
jl
jne
cmp
inc
insl
negl
cmpsl
or
or
inc
push
pusha
test
dec
mov
jle
lods
push
xor
dec
into
fcoml
pop
stos
jae
pusha
mov
adc
outsb
jne
daa
sbb
movl
dec
sbb
aad
out
jmp
loope
imul
push
and
test
inc
ret
pop
ss
mov
aam
lret
mov
in
add
pop
inc
je
lods
nop
enter
cld
dec
int
pop
jno
push
xlat
pushf
mov
addr16
pop
les
stos
cli
loop
mov
movsl
xchg
test
shlb
out
jno
in
mov
fstps
push
adc
cmp
imulb
cmp
jnp
pop
jl
xchg
shl
fimull
xchg
mov
mov
lret
ret
mov
aad
outsl
push
fisubrl
int3
add
or
dec
filds
jae
je
scas
cltd
mov
pop
es
jecxz
adc
jge
xchg
lods
stos
cmp
repnz
cmpsl
mov
xchg
addb
dec
jl
fsubrl
negb
pop
xor
sbb
mov
inc
push
out
dec
xchg
add
sti
pop
pop
mov
xchg
push
jnp
fimull
lods
jb
scas
fcompl
bound
icebp
lock
or
rcll
jo
pushf
or
idivl
xchg
sarl
sub
lret
xor
adc
xchg
rcl
cmp
fisttpll
jo
into
jg
sbb
enter
pop
subl
jns
push
sbb
jno
pop
aad
sub
xlat
call
xlat
or
dec
add
jg
cltd
in
sub
sbb
xor
mov
test
mov
mov
test
jb
movsb
push
orb
inc
int3
test
cmc
lock
jl
out
icebp
arpl
push
popa
ficompl
fs
sbb
movsl
jmp
xchg
out
xchg
jp,pn
mov
cmp
add
lret
dec
popl
inc
add
pushf
sub
ja
ds
sbb
mov
test
ret
cwtl
loope
ja
jno
mov
shlb
add
out
aaa
ja
daa
push
or
or
jns
xor
dec
cmp
push
sbb
fisttpll
dec
into
xlat
call
outsb
xlat
and
dec
stc
jle
mov
pushf
jecxz
mov
cmpsb
movb
xchg
lahf
repz
out
sbb
pop
sub
clc
sahf
movsb
jbe
into
sub
test
ja
loopne
xchg
cmp
jnp
push
stos
push
cmpsl
or
mov
push
jo
and
sbb
cmp
test
mov
sub
mov
out
mov
jb
imul
cwtl
ret
jae
lods
xor
push
rcrb
sti
addr16
add
xchg
outsb
popf
add
popa
jg
and
cmpsb
jl
adcl
adc
and
add
dec
adc
mov
and
cmp
mov
scas
imulb
xlat
push
fcoml
fdivs
lret
xchg
and
cs
incl
btc
pushf
scas
xor
mov
in
xchg
dec
mov
sbb
dec
data16
out
sbb
aas
icebp
outsl
cmp
xchg
push
ja
mov
xchg
mov
add
insb
ret
push
inc
pop
dec
push
cmp
inc
das
push
cmp
mov
mov
or
add
insb
pop
pop
xchg
loopne
dec
cld
dec
ret
icebp
mov
or
cmp
pop
outsb
push
and
mov
mov
loop
cld
js
shlb
loopne
mov
lods
call
inc
jmp
mov
fucom
xor
xchg
mov
adc
outsl
mov
out
jbe
add
xlat
notl
fildl
es
sbb
push
dec
ret
loope
mov
fcoms
inc
ja
repnz
fisttpll
mov
jmp
jne
mov
mov
xchg
sub
mov
iret
ret
orb
mov
aam
outsb
movsl
insb
push
cmp
and
lcall
test
mov
adc
pop
xchg
cmpsl
add
pop
std
rcrl
outsl
sub
int3
imul
int3
jp
lret
xlat
scas
xor
lds
mov
sahf
push
cld
je
or
mov
test
inc
xor
lcall
das
xor
pop
or
movsl
add
xorl
jmp
cltd
inc
inc
ds
dec
mov
insl
lahf
xchg
sbb
push
or
je
and
jno
add
ds
push
jns
bnd
push
test
sarb
adc
jl
push
dec
cmpsb
jae
mov
sbb
xchg
jle
ds
lea
in
dec
cmp
xchg
push
mov
mov
push
movsb
rclb
fiadds
pop
sub
test
dec
or
roll
jo
hlt
add
imulb
lcall
sub
mov
nop
std
cmpsb
mov
cmp
pop
lods
jmp
ffree
or
addl
out
mov
dec
aaa
fwait
std
mov
shll
lahf
inc
mov
inc
dec
outsl
jle
push
fsub
xor
mov
jmp
adc
jmp
outsb
mov
xchg
test
ret
pop
jae
iret
sbb
sbb
push
push
inc
adc
sbb
sbb
adc
inc
mov
and
or
adc
stos
cmpsb
out
pop
stos
sub
lock
les
jae,pn
ret
xchg
testb
sti
xchg
fnstsw
sbb
sbb
jbe
jmp
in
push
or
lret
ljmp
in
dec
lahf
sti
mov
stc
idivb
pop
sub
test
cld
ds
pusha
jae
dec
cmp
rolb
insb
jge
adc
adc
pop
mov
sub
rolb
sub
dec
add
mov
lea
inc
pop
mov
lea
jecxz
mov
adc
and
pop
mov
inc
pop
dec
stos
push
jmp
imull
movsl
inc
and
pop
aas
jecxz
mov
mov
notl
jp
push
loopne
cmp
cmp
aam
pusha
testl
cmpsl
into
and
sub
dec
push
mov
mov
pusha
mov
fwait
sub
js
psubsw
icebp
stos
xchg
or
add
sbb
loope
xchg
xchg
push
bound
lods
lret
int3
mov
or
cltd
adc
jmp
xor
call
jb
std
dec
sbb
pop
push
inc
lds
cli
add
cmp
out
mov
mov
sbb
js
loope
mov
jnp
inc
shrl
mov
lret
sahf
mov
push
push
aas
xchg
pop
push
fcoml
into
and
outsl
cmp
and
mov
inc
adc
and
push
aad
rcl
les
xor
lret
cmpsb
jecxz
mov
xor
int3
xchg
cmpsb
xchg
into
xchg
mov
or
and
fidivs
mov
aaa
push
push
push
inc
ss
jae
sub
bound
rclb
jecxz
jge
mov
mov
mov
jecxz
adc
jo
adcb
sbb
movsl
cmp
loop
sbb
pop
aas
pop
mov
sbb
push
sub
mov
xchg
cli
fbld
rol
inc
hlt
xor
ja
add
inc
xchg
imul
push
or
push
jns
mov
inc
mov
in
pop
icebp
push
mov
mov
or
sub
push
xor
mov
sbb
adc
aaa
dec
jmp
adc
jge
xsaves
mov
xchg
outsb
mov
mov
bound
lret
data16
adc
aas
mov
cltd
xchg
pushf
pop
imul
mov
push
cwtl
lret
mov
pushl
pop
stc
cmp
push
pushf
aad
cs
popf
mov
jg
fwait
cmp
mov
std
pop
jb
jmp
leave
mov
mov
adc
inc
xor
dec
jae
cli
data16
pop
cli
cltd
dec
inc
test
inc
test
push
shlb
mov
jmp
pop
push
push
sbbb
jno
cmp
lods
rdpmc
loopne
ljmp
loopne
negl
cmp
sti
aas
pop
mov
test
push
loope
pusha
sub
dec
sbb
ss
mov
mov
movb
mov
nopl
popf
pop
and
mov
push
fdivrl
or
gs
scas
aad
push
inc
sbb
pusha
jae
push
aam
out
pusha
divb
repz
shr
xchg
xchg
out
mov
les
pop
push
pop
ds
sub
scas
fs
jmp
and
dec
xchg
mov
push
xchg
xchg
pop
fstps
addr16
fisttpl
xchg
sbb
inc
in
test
or
mov
test
xlat
ljmp
push
dec
sbb
dec
lret
pusha
sbb
call
shr
dec
jmp
cmp
mov
cmpsl
adc
cli
xchg
add
xchg
push
insb
popa
dec
pop
push
fwait
cltd
call
lock
ja
and
mov
gs
mov
adc
pop
push
or
js
xchg
incb
insl
xorl
imul
loope
scas
and
add
xor
push
in
enter
roll
pop
push
xchg
imul
pop
dec
inc
dec
add
lret
push
movsl
or
js
jl
jmp
pop
ss
leave
aad
add
mov
insb
testb
shll
jns
inc
aad
push
addr16
add
sub
dec
mov
cld
mov
xchg
sub
stc
dec
adcl
das
call
insb
dec
inc
shrl
sbb
aad
sub
pop
sahf
lea
sbb
insl
push
loope
xor
mov
gs
js
xor
adc
and
pop
add
xchg
stos
jae
xlat
mov
int3
scas
in
popf
in
or
loop
in
stos
jnp
xlat
out
lcall
sbb
push
pop
testl
xor
nop
pop
mov
xchg
in
lcall
pop
push
xchg
bound
adc
sbb
or
jb
mov
scas
in
dec
cmp
push
jno
xchg
cwtl
out
ss
fnstenv
ljmp
subl
add
addr16
or
std
int3
inc
je
adc
ja
test
filds
pop
push
push
cmpsl
add
adc
inc
shlb
fdivrl
sbb
pushf
js
and
shrl
jo
fcmovnu
cmp
fdivs
adc
xchg
push
adc
sbb
mov
pop
je
and
scas
out
imul
leave
in
dec
fists
or
xchg
cmp
xor
enter
jbe
fmul
push
jo
mov
das
lret
cmpl
xlat
aam
push
mov
xchg
mov
scas
jnp
ret
dec
int
daa
pop
inc
int3
sti
lcall
daa
fdivs
and
and
mov
lret
sar
popf
jbe
cmpsl
bound
dec
mov
pop
dec
pop
loope
add
xchg
clc
cmp
lcall
pop
xchg
cmp
sahf
xor
and
inc
jo
fnstenv
notl
insb
test
xchg
cmp
std
dec
lcall
mov
add
push
inc
and
fstpl
imul
push
mov
test
outsl
mov
insl
and
cmp
xor
cmp
or
lods
or
cs
cmp
and
ds
inc
dec
ljmp
mov
push
xchg
ja
xor
pop
lds
cmp
pop
aam
pop
lods
mov
movsl
xor
pop
adcl
mov
subl
sbb
fs
movsb
pop
mov
test
xchg
adcl
jne
addl
dec
call
out
mov
cmc
mov
hlt
dec
jne
push
xlat
inc
xchg
xchg
or
faddl
pusha
add
clc
rclb
push
inc
pop
leave
mov
pop
xchg
pop
outsl
sbb
outsb
inc
xor
pop
pop
fisttps
fistps
cwtl
lcall
sbb
cs
push
std
push
and
nop
xchg
repz
xor
inc
fldl
jmp
into
lock
push
xor
idivl
aam
or
jg
mov
jno
sbb
hlt
fs
xchg
das
clc
jne
mov
fisttpl
daa
test
test
or
mov
cwtl
and
dec
adc
fwait
push
repnz
push
mov
jno
sub
mov
ds
jg
mov
gs
or
xchg
loop
xchg
pop
or
pop
sbb
enter
fwait
es
pushf
scas
inc
jp
xor
adc
sbb
mov
push
jnp
jae
out
mov
imul
clc
mov
dec
xor
xchg
inc
dec
push
xor
or
adc
sti
jno
ss
jle
call
call
imul
adcl
jge
mov
jno
pop
repz
cld
in
cmp
or
add
mov
mov
test
insb
insb
mov
or
mov
clc
xor
fimuls
and
fisubl
in
xchg
push
mov
inc
lea
dec
arpl
mov
into
out
sub
pusha
cmc
push
mov
insb
lods
sti
stos
and
mov
adc
jb
jno
cmc
cltd
sub
pop
rcr
ds
xor
cmp
mov
or
cmp
jecxz
pop
arpl
jb
sbb
in
out
xchg
test
adc
shr
ds
inc
loope
outsb
xchg
and
inc
test
mov
cltd
cld
int3
cmpsb
jo
xchg
jnp
and
and
dec
icebp
mov
add
jns
mov
pop
dec
adc
adc
jns
jne
xor
inc
dec
inc
push
hlt
jmp
and
imul
pop
cmp
mov
add
inc
mov
sti
cvttps2pi
mov
lcall
fwait
sub
xchg
cmpsl
mov
xor
jne
add
jae
inc
outsb
xor
adc
jle
pop
push
xchg
fsubr
test
rorl
stos
leave
jnp
movb
pop
std
inc
pop
push
fmulp
shlb
movl
fcomps
pusha
insl
idiv
mov
in
adc
lcall
stc
sbb
in
fdivr
movsl
inc
mov
bound
jnp
js
test
pushf
fimull
add
lods
pop
jp
mov
mov
out
inc
mov
adc
sub
fstpt
xor
adc
or
ljmp
push
gs
lds
mov
out
mov
lret
pop
out
subl
sbb
clc
sbb
gs
or
cmp
jb
mov
dec
xor
mov
cmc
lock
sbb
inc
cli
lret
sbb
and
sub
pop
and
pop
push
fsubr
data16
xchg
mov
inc
test
or
hlt
ds
add
push
xor
xor
dec
dec
cmpsl
sub
add
icebp
xor
mov
gs
xor
outsl
idivl
cld
pop
add
es
in
xor
pop
xor
imul
add
xchg
jge
jb
sub
jg
push
arpl
fmul
test
and
sub
outsl
iret
inc
sub
jbe
sarb
lret
pop
jecxz
popf
and
pushf
lods
sbb
hlt
icebp
test
imul
add
push
in
push
adc
mov
sbb
insb
push
jne
loopne
scas
push
in
cmpsl
lahf
jb
stos
shlb
stos
mov
rolb
scas
xor
sahf
fwait
xchg
jns
scas
movsb
hlt
shl
imul
sbb
mov
dec
inc
xchg
mov
or
mov
inc
adc
sub
xchg
lcall
dec
pop
popf
nop
mov
and
push
in
movsb
push
cmp
sub
jbe
cmp
jg
aad
insb
adc
pop
xor
xchg
ret
or
sbb
push
mov
inc
inc
cltd
ja
push
xor
sbb
xchg
xor
lahf
adc
test
lock
daa
push
ret
mov
dec
pop
scas
xor
mov
das
clc
inc
adc
cmp
rolb
mov
insb
fdivrs
jae
rclb
ss
lahf
hlt
sub
cmpsl
jge
add
xchg
mov
arpl
or
mov
mov
outsb
mov
movsb
add
pop
outsl
lret
lret
sbb
dec
mov
rcr
adc
sub
push
cmp
lcall
cld
cmp
orb
fadd
aaa
ljmp
or
mov
int3
mov
imul
dec
cli
clc
addb
outsl
cs
jno
pop
movsl
mov
pop
outsb
sti
mov
inc
shr
into
sbb
inc
lcall
mov
fdivl
popa
out
xor
and
andb
push
addr16
push
cmpsb
dec
jg
insl
mov
adc
mov
mov
idiv
adc
rcl
lock
xrelease
fwait
inc
popl
or
aam
fnstsw
or
stc
xor
sub
cmpsb
in
mov
ret
xchg
test
mov
push
test
xor
fiadds
add
cs
and
xchg
inc
out
pop
add
sbb
jecxz
pusha
jp
test
imul
out
subl
out
xlat
add
cli
push
cmp
jbe
jb
sub
inc
adc
inc
mov
adc
xor
aaa
in
jp
or
jle
mov
pop
add
adc
inc
nop
pop
push
pushf
pop
dec
cmp
leave
inc
mov
xchg
mulb
jecxz
sub
jl
mov
jmp
fidivl
ljmp
jne
or
adc
ljmp
imul
or
add
loop
mov
inc
outsl
insl
scas
sub
stos
incl
mov
mov
call
shrl
dec
pop
xor
addr16
mov
and
xchg
arpl
pop
rcr
push
push
lahf
aam
call
mov
xchg
pop
rcrb
les
xchg
lds
repnz
movsl
div
pop
in
pop
out
xlat
dec
push
insb
ret
jnp
lahf
push
and
loopne
jns,pn
pusha
inc
enter
xchg
mov
xchg
sbb
fadds
ss
push
adc
add
gs
sub
cld
pop
sub
stos
sub
adc
or
pusha
pop
xor
outsl
lds
push
mov
daa
leave
incb
xchg
out
aas
enter
insl
mov
out
inc
mov
pop
add
shlb
sti
out
enter
jae
inc
xor
xlat
mov
push
mov
pop
es
ja
clc
fcompl
push
add
add
lods
aad
cmc
cli
or
xor
fisttpll
cld
shr
mov
bnd
pop
pop
pop
pusha
insl
cld
push
ja
mov
shl
push
push
mov
sub
dec
inc
fwait
aas
jl
mov
sahf
dec
sub
mov
xchg
push
inc
fadds
sahf
int3
push
or
ss
sahf
lcall
fisubl
jge
dec
loop
repnz
sbb
inc
mov
or
dec
jnp
cmp
rolb
jno
lock
cmpsb
fcmovb
push
jo
mov
gs
mov
leave
mov
cmc
add
mov
fldenv
cmpsl
arpl
jmp
imul
sbb
sub
dec
push
pushf
stos
arpl
push
jne
pop
add
fwait
push
pop
xor
jl
inc
lds
adc
jb
imul
adc
jp
lret
andl
inc
pushl
push
test
push
mov
es
mov
cmpb
pop
xchg
add
arpl
lret
js
xchg
mov
push
or
jl
out
andb
dec
fcomp
xchg
xchg
jge
inc
adc
mov
shlb
in
mov
stc
xlat
mov
xchg
sbb
test
clc
inc
xor
mov
bound
xchg
movsl
or
xchg
fs
or
xor
clc
imul
outsb
mov
lret
xor
mov
or
push
pop
hlt
sbb
jmp
sbb
ljmp
jmp
jmp
mov
js
push
adc
inc
dec
dec
xor
pop
pop
loop
cmp
inc
std
icebp
mov
or
cmp
std
jl
je
mov
testl
jl
movl
punpcklwd
loopne
mov
inc
xor
dec
jge,pt
mov
pop
lds
mov
scas
pop
pop
enter
mov
xor
or
or
mov
int
repz
xchg
pop
inc
sbb
pop
test
adc
sbb
in
xchg
xor
mov
insl
fiaddl
xchg
push
test
push
push
push
dec
outsb
mov
mov
daa
in
mov
mov
fsubrp
icebp
pop
cwtl
dec
aaa
movsb
nop
inc
cmpsb
sbb
xchg
sbb
es
in
outsb
rorb
shl
out
dec
pushf
dec
insl
out
hlt
imul
arpl
aad
jne
sub
dec
sub
push
xor
insb
jb
in
in
in
mov
cltd
mov
mov
cmpsb
sti
cmp
xchg
cltd
pop
add
lahf
or
mov
arpl
cld
push
aaa
mov
xor
in
xchg
pop
addr16
adc
jne
inc
test
pop
lods
sub
push
mov
xlat
mov
inc
xchg
cli
xor
mov
jg
aas
popf
xor
lcall
mov
jo
pop
dec
sub
add
xlat
fucomip
imul
test
xchg
rolb
aam
data16
call
or
mov
int3
popa
mov
mov
rep
iret
aad
or
andl
and
and
mov
sub
aaa
pop
stc
xchg
insl
les
arpl
sub
jbe
loopne
xchg
jae
xchg
mov
jp
xlat
cmp
inc
push
nop
icebp
sti
pop
jb
adc
ja
pop
out
add
xchg
or
mov
mov
in
adc
sbb
ss
push
dec
adc
dec
les
pop
push
inc
mov
test
inc
dec
loop
cmp
mov
aaa
shll
cmpsl
test
lods
subb
add
lahf
cmp
out
pop
loop
sbb
aad
jmp
test
or
xor
jne
mov
xor
xchg
or
mov
dec
out
add
cs
add
adc
push
cmp
aas
sbb
or
in
or
imul
rorl
mov
fdivr
push
iret
idivb
jg
stos
roll
pop
pushf
sub
mov
lds
mov
popa
out
xor
les
enter
in
mull
jp
sbbb
in
xchg
std
jl
xorb
adcl
bound
shll
xchg
mov
icebp
ds
or
push
jl
add
push
repz
and
xor
andb
loop
inc
jns
push
mov
mov
sahf
inc
lret
mov
add
scas
testb
insl
sbb
mov
cs
dec
mov
in
pushf
xchg
and
adc
sub
sbb
push
out
insb
data16
into
mov
and
out
stos
and
dec
cs
cmp
adc
or
psrlw
mov
pop
shlb
or
mov
add
dec
cmp
or
lock
mov
cwtl
lods
mov
or
inc
mov
fiaddl
jns,pt
shl
inc
mov
cmp
jnp
or
test
pop
sbbb
je
int3
ret
das
test
xchg
cmp
push
jle
xchg
sbb
cmp
fldenv
out
sub
sub
push
xchg
adc
inc
fisubrl
loop
push
popf
add
sarb
jge
dec
xor
fs
push
sub
std
sub
mov
dec
dec
sahf
jg
dec
lods
out
mov
xchg
and
xor
in
dec
in
outsl
ret
xadd
imulb
sub
jnp
xor
enter
pop
fcmovne
pop
fsub
test
js
xchg
inc
scas
insl
inc
sbb
fdiv
sti
or
iret
jns
je
pop
pop
hlt
push
cmp
fs
inc
or
xor
loopne
mov
ret
and
je
sub
adc
fisttpl
jp
and
inc
jl
push
int
xor
cmp
mov
or
pusha
test
aam
xchg
cltd
fxch
mov
lods
jbe
mov
jnp
lock
ljmp
xchg
loop
les
push
sub
sbb
test
mov
sahf
xor
pop
xchg
mov
and
add
and
jns
jb
and
fwait
mov
xor
addr16
ljmp
lods
jae
or
lahf
dec
fwait
adc
mov
movsb
xchg
push
scas
mov
or
cmp
mov
gs
sbb
cmp
movsl
jecxz
scas
stc
or
sbb
mov
cmc
jnp
in
pop
cmp
xorb
ja
les
das
or
std
sahf
or
and
jbe
call
mov
test
sbb
xlat
dec
lcall
divb
fs
cmp
fs
mov
jo
mov
jo
sub
mov
push
mov
test
sub
inc
mov
stc
fmulp
aad
enter
leave
fsub
sub
out
jb
ds
xor
sbb
push
and
leave
xchg
jle
push
cmp
daa
xchg
pop
leave
and
dec
cmp
xor
ljmp
add
aas
xchg
insb
test
sar
mov
pushl
add
sahf
push
sar
mov
pop
out
shr
hlt
sbb
mov
sbb
or
and
push
jbe
and
add
jge
enter
aam
es
fsubrl
pop
inc
fld
or
cmp
and
mov
pushl
inc
mov
mov
add
fstl
into
push
sub
cltd
cli
pop
adc
lahf
cli
scas
mov
dec
mov
stos
leave
push
push
dec
mov
cmp
cli
xchg
arpl
add
or
adc
scas
rol
sub
testb
outsb
xor
cli
adc
enter
in
test
js
cmp
movsb
mov
dec
sahf
pop
testl
gs
and
or
and
test
mov
jo
mov
push
pop
ljmp
mov
mov
dec
and
inc
push
add
mov
popf
inc
pop
fs
movsb
in
pop
movsb
arpl
imul
add
or
add
push
push
mov
ss
pushf
cmp
lock
push
xchg
mov
pusha
inc
in
lret
stos
aas
mov
rcrl
inc
xchg
lret
pop
ffree
scas
scas
jae
pop
ror
or
lds
xor
stos
push
fidivrl
xchg
cmp
dec
xchg
jl
xchg
dec
inc
pushl
stos
addb
and
push
sub
dec
and
mov
push
mov
insl
fimull
pop
lahf
mov
ret
cwtl
outsl
inc
add
or
shll
xor
inc
lret
sub
sbb
mov
xchg
mov
dec
in
push
push
pop
loope
or
add
out
add
mov
sub
imul
test
cmpsl
aad
xchg
xchg
adc
lret
aad
fadds
imul
mov
push
mov
sbb
in
lea
adc
push
fwait
xchg
call
nop
push
push
jo
test
inc
hlt
in
nop
push
or
jp
jecxz
sbb
mov
js
mov
fwait
mov
mov
push
adcb
xchg
push
mov
dec
push
icebp
xchg
and
fwait
cmp
lret
and
adc
lock
and
xor
cwtl
push
fs
aas
xor
cmpl
cmp
jecxz
fadds
push
test
js
xadd
ds
dec
shlb
mov
xchg
in
inc
sbb
add
daa
enter
mov
repz
push
mov
cwtl
in
pop
lcall
jo
fstpt
xchg
push
test
pop
cli
jmp
or
push
and
lods
loope
mov
push
push
popa
sbb
les
cltd
mov
dec
scas
es
aam
inc
in
push
sub
sbb
roll
pop
enter
jmp
dec
cmc
lods
adc
xor
sub
cmpsb
scas
cmpsl
pop
fstpt
xchg
outsl
idivb
pop
jno
imul
xor
sti
xchg
aaa
inc
mov
adc
cmp
push
sbb
repz
and
imul
sahf
mov
or
andnps
sarb
push
sub
faddl
iret
cli
xchg
jmp
lret
mov
popa
jp
xor
jg
dec
or
add
cwtl
aad
and
cmpsl
mov
imul
inc
enter
hlt
sti
cmp
cmpsb
dec
outsb
pop
push
stos
repnz
xor
sbbl
pop
push
mov
adc
pushf
rolb
or
faddl
xchg
dec
lret
xchg
adc
lods
jmp
lds
pop
cwtl
in
cld
out
sahf
enter
call
pop
xchg
or
mov
inc
sahf
popa
push
jge
mov
leave
cwtl
jno
out
popf
divl
lods
xor
mov
pop
jle
jge
in
js
fs
mov
int
aas
jb
jae
lcall
mov
jae
and
adc
or
pop
mov
sbbb
loope
dec
scas
mov
sub
mov
orl
icebp
xchg
mov
or
movb
xlat
js
push
call
clc
rcrl
jmp
icebp
gs
pop
mov
hlt
mov
mov
sub
daa
clc
pcmpgtd
pusha
and
sbb
addl
es
xor
xchg
xchg
ljmp
rorb
ret
xchg
xchg
pop
stos
aas
mov
popa
pop
or
push
or
mov
faddl
out
jno
mov
fwait
outsb
pop
loopne
and
jns
dec
sbb
push
sbb
mov
sti
xchg
dec
pop
sbb
push
movsb
enter
sub
mov
outsl
jg
pusha
popf
scas
sbbl
test
mov
inc
xchg
sahf
add
icebp
daa
call
mov
sahf
push
out
cmp
lret
adc
sbb
cmp
xor
xchg
out
cld
std
imul
cld
xchg
in
fldt
lds
and
mov
mov
ss
out
xlat
sti
push
aad
adc
pusha
sub
sahf
arpl
loopne
push
ja
inc
mov
push
dec
cli
fisubs
jl
mov
sub
mov
xchg
fwait
mov
jp
imul
jg
ja
jnp
dec
es
push
aam
pop
jge
mov
adc
push
pop
cwtl
dec
inc
ds
lds
jmp
mov
aaa
jbe
and
leave
push
pop
stos
xchg
push
das
das
fcomps
out
sarl
sbb
adc
jno
les
xor
js
pop
test
sub
mov
xchg
inc
jl
outsl
sub
or
cs
test
sub
sbb
outsb
mov
jge
hlt
cmpsb
xchg
pop
dec
add
fadds
jmp
sub
in
cltd
inc
pusha
mov
hlt
add
pop
xor
aaa
test
sbb
fiaddl
jnp
hlt
cmpsl
add
mov
sahf
xchg
push
shrl
shlb
ljmp
dec
test
push
cmp
in
cmp
out
mov
mov
cmpb
cmp
faddl
mov
inc
ljmp
lock
addl
inc
sub
sbb
mov
out
icebp
jmp
mov
add
cmpsb
push
xchg
cmp
inc
lods
into
xchg
subb
mov
popa
and
mull
adc
push
jge
cmp
inc
push
and
repz
or
lret
pushf
aam
enter
sbb
sbb
xor
or
jl
sbb
jno
adc
out
mov
xchg
ss
je
and
adc
cmp
push
xchg
or
repnz
push
les
stos
fstpt
or
adc
sti
dec
mov
mov
xchg
xchg
mov
ds
add
xchg
out
insb
daa
outsl
jecxz
xchg
adc
mov
repnz
sub
wbinvd
adc
sbb
imull
xor
xchg
mov
dec
inc
iret
cmp
adc
call
int
leave
sub
push
movsl
sub
mov
call
subl
test
filds
fucomi
dec
fsts
add
dec
push
rcl
xor
cmp
push
pushf
pop
jecxz
mulb
test
push
and
xchg
stc
popf
sbb
cmp
and
out
pop
pop
ds
cmp
adc
ss
push
push
insl
aaa
rcl
test
stos
int3
xor
mov
push
cld
push
lcall
mov
pop
jmp
dec
xor
repz
movsb
cli
insb
insb
jb
dec
pop
add
lods
push
xor
mov
mov
popa
pop
call
rclb
roll
and
dec
push
xchg
add
fwait
inc
xchg
and
pop
cmpb
das
or
adc
push
je
jbe
jne
jp
ja
enter
jecxz
movlps
push
loope
xlat
aad
mov
das
add
jne
xor
add
jmp
mov
test
dec
inc
imul
dec
cmc
push
aam
push
fstpl
jmp
adc
mov
sbb
xor
or
pushf
imul
mov
inc
call
nop
inc
test
adc
adcb
pop
outsb
out
and
dec
mov
les
daa
lea
mov
addr16
push
mov
xlat
dec
test
rclw
xchg
pusha
adc
fbstp
lcall
jge
push
call
sarb
mov
mov
ja
mov
inc
add
inc
mov
add
repz
js
icebp
jns
hlt
paddw
dec
push
scas
inc
dec
sti
cmp
mov
jle
lods
fs
loopne
mov
rcrb
sub
test
ret
dec
push
cs
push
iret
pop
or
pop
pop
pop
leave
push
xorb
ret
in
fbld
clc
cli
push
data16
shrb
push
cli
xchg
xchg
cmc
add
cmp
shrb
icebp
mov
cs
pop
mov
sarl
pop
stos
fs
das
fidivs
add
fs
aad
xor
cmp
cwtd
gs
shlb
stos
shrb
loopne
inc
test
xchg
pop
lods
jge
lods
mov
pop
pusha
add
adc
in
out
inc
scas
es
inc
add
notl
dec
xor
shll
cmp
push
cli
xchg
out
test
cli
mov
aam
adc
mov
sub
xchg
xor
lea
idivb
adc
stos
xor
loopne
mov
in
push
inc
jg
sbb
xchg
es
roll
mov
mov
sub
enter
movsl
push
adc
xchg
out
mov
mov
fisubrs
lods
ja
imul
dec
mov
and
jmp
and
lcall
incl
dec
jmp
rcrl
adc
or
pop
xor
filds
xor
jecxz
push
add
fstpl
mov
mov
or
insb
dec
mov
insb
xchg
movsb
lcall
cmpb
inc
mov
cmc
mov
cwtl
test
pshufw
mov
js
sbb
cli
loopne
iret
in
mov
xor
test
jnp
adc
int
lods
dec
mov
test
mov
pushf
aam
lods
xor
and
jbe
xchg
mov
sub
wrmsr
mov
outsl
sub
mov
cmp
xlat
dec
mov
nop
add
push
add
shll
xor
adc
push
scas
lahf
jno
std
jbe
mov
push
sbb
lcall
out
pop
js
sub
jo
cmpsb
leave
cmc
jge
mov
or
mov
jge
fxch
scas
ret
test
dec
push
sub
lret
cmp
in
movsb
jno
jb
pop
adc
jg
lds
xchg
popa
je
adc
cmc
pop
lea
mov
les
insl
rcll
mov
scas
fs
jecxz
mov
in
imul
inc
je
fs
das
xor
add
sub
jle
loope
add
sub
dec
and
xchg
jbe
out
sub
inc
pop
cmp
xchg
sbb
inc
pop
dec
dec
and
cmp
cmpsl
add
call
push
pop
jno
mov
pop
push
xor
mov
xor
outsb
mov
lds
ja
sub
fdiv
arpl
xor
repnz
cmp
js
mov
pushf
inc
gs
xchg
push
push
lret
loope
aaa
push
jae
jmp
cmc
jns
mov
inc
mov
push
out
sbb
inc
pop
loope
fbstp
pop
pushf
subb
test
mov
dec
jecxz
scas
cs
jmp
out
out
push
arpl
out
maskmovq
cmpsb
sarb
xchg
and
int3
divl
data16
cmp
shlb
and
cmp
in
loop
add
std
sub
lods
cmc
xlat
mov
cmp
sbb
test
lcall
jae
push
jae
shll
and
jno
xor
xchg
xor
xchg
lcall
lock
popl
into
ret
mov
rcrl
inc
add
mov
shlb
ss
xchg
xchg
pop
mov
shll
imulb
sahf
or
mov
test
lret
fbstp
and
into
jmp
add
cmpsl
es
fdivr
xchg
inc
inc
mov
xchg
add
dec
xchg
dec
adc
popa
es
lods
out
subl
addr16
nop
or
cmpsb
loope
mov
sbb
jo
and
inc
ja,pt
pushf
lret
sahf
jge
call
jecxz
int
call
inc
call
push
or
imul
out
xlat
jb
or
sbb
jecxz
jg
xor
ret
les
cmpsb
pop
pop
daa
imul
adc
enter
inc
and
aam
in
shlb
add
pop
pop
push
jmp
or
jo
jne
sub
or
mov
xchg
mov
inc
dec
cmp
add
xchg
adc
push
fildll
push
or
dec
in
out
xor
cli
pop
scas
jo
push
cs
dec
dec
mov
data16
lret
cmpsl
push
inc
enter
push
sahf
cmp
pop
xchg
mov
nop
fdivrs
nop
dec
mov
inc
dec
sbb
cli
stc
xchg
addr16
dec
and
xor
jno
adc
aaa
xor
fmulp
mov
xor
push
mov
je
int3
cmpsl
aas
lret
or
xchg
mov
out
jno
movsb
jns
jno
add
add
pop
or
js
ja
push
and
mov
and
jle
stos
mov
sub
adc
adc
lds
out
and
pop
mov
inc
adc
lods
push
add
jbe
adc
lret
sahf
cmpsb
inc
fstps
js
mov
sbb
push
adc
pop
gs
add
cltd
xchg
add
testl
stos
xor
into
adc
add
popf
int3
jbe
pop
outsb
stos
mov
push
ds
pop
add
inc
mov
push
xchg
xor
push
fstp
lea
outsl
xchg
ss
test
xor
jns
pushf
je
xor
rcrb
lcall
testl
gs
stc
and
mov
inc
ja
sub
mov
jno
les
cmc
xchg
cld
gs
push
jb
or
lods
or
outsl
sbb
inc
jae
sarl
loope
xchg
push
das
mov
cmc
addr16
pushf
es
jno
dec
imul
inc
daa
movl
ret
jo
dec
mov
int
mov
sbb
and
adc
stc
add
stos
add
cld
pop
clc
mov
ret
dec
ficoml
int
mov
pop
pop
lock
cli
lahf
loope
popf
data16
addr16
jnp
repnz
sarb
push
push
ficomps
scas
jecxz
pushf
mov
adc
mov
mov
jo
nop
sarl
xchg
jmp
push
jg
sbb
fsubl
inc
mov
icebp
xor
dec
out
stos
data16
xor
fs
or
adc
int
cmovb
wrmsr
mov
or
xchg
mov
xchg
cmp
into
adc
cmp
push
add
in
out
sbb
decl
pusha
ds
mov
cmp
rclb
pop
mov
sbb
xchg
sbb
sub
stc
in
cwtl
dec
sahf
insl
sub
lea
movsb
rol
push
das
lcall
xor
sahf
out
sub
adc
ja
mov
js
shl
adc
add
sub
test
pop
cmpsb
xor
aad
push
imulb
addr16
or
repnz
shrl
jg
dec
or
addr16
sbb
jns
ds
mov
push
or
inc
sbb
daa
cmp
and
xor
loop
cltd
xchg
aaa
push
push
fildl
jbe
inc
sbb
pusha
inc
pop
sub
sbb
add
ret
stc
test
adc
out
out
and
xor
jne
pop
js
enter
mov
dec
repnz
adcl
cmp
mov
out
sbb
ret
adcl
js
add
inc
arpl
fisttpll
xor
jmp
add
or
test
popa
into
test
xchg
pop
xor
test
nop
dec
sbb
xchg
fcoms
xor
push
mov
push
fstl
adc
push
and
xchg
ret
sahf
xchg
fcmovb
stos
sbb
push
cmc
out
adc
loop
fcmovnbe
and
adc
addb
dec
ret
or
cmp
inc
aas
sub
add
into
in
xorb
jl,pn
das
leave
xor
and
or
lods
and
rcrb
cs
in
out
xchg
ja
ja
int3
aam
rcl
dec
push
jmp
sahf
xor
ljmp
repz
insl
ret
mov
inc
add
stos
or
mov
adc
shrl
cmp
fldenv
push
adcb
xchg
cmpsb
xchg
aad
shrb
jecxz
sub
dec
mov
ss
ss
jecxz
pop
jmp
mov
addr16
mov
mov
in
or
popa
fisttps
cmp
sbb
push
fs
push
inc
sub
rorb
sbb
ficompl
push
jge
add
lret
ljmp
push
test
or
daa
lock
inc
inc
push
push
clc
pop
loopne
repnz
fwait
mov
xchg
dec
mov
inc
mov
es
std
leave
mov
into
mov
es
daa
jb
mov
pop
fisttpll
sub
imul
push
cmp
ret
pop
mov
lds
bsr
jb
mov
and
mov
popf
jnp
outsl
mov
sar
xor
hlt
int3
xchg
scas
inc
push
dec
std
mov
aaa
cmp
xchg
imulb
out
push
rcrl
cmpsb
mov
dec
out
enter
popf
inc
dec
insb
sbb
data16
adc
jmp
jg
fmuls
lahf
in
xor
fstl
push
insl
ds
pop
popf
xlat
pusha
test
push
negl
mov
jae
sbb
fbld
mov
sub
andb
sub
gs
mov
int3
sbb
icebp
sub
mov
pop
rcrl
cmc
jo
push
mov
into
test
cld
ljmp
add
xchg
out
fidivs
xor
mov
shll
movb
sti
dec
sbb
aas
mov
mov
cmp
cltd
or
cld
stc
mov
jnp
sub
jo
inc
add
mov
fsubs
lods
pop
push
dec
scas
movsb
cmp
lcall
out
pushf
int3
inc
ljmp
aaa
stos
test
push
cmp
cmc
das
ret
pop
repnz
inc
call
pop
popf
mov
data16
jno
es
ja
push
cmp
add
stos
mov
je
mov
gs
addr16
or
or
ljmp
rcrb
or
cmp
jp
and
and
mov
push
lret
pop
xchg
jp
inc
lods
pop
mov
push
psubd
cmp
mov
pusha
jae
sub
fnstenv
int
pop
cmp
in
mov
dec
xor
xlat
xchg
fisttpl
pushf
mov
cli
or
xchg
push
pop
push
adc
push
xlat
mov
mov
lcall
inc
mov
sbb
jbe
xchg
xchg
ljmp
enter
dec
ret
jns
aad
cmp
int3
dec
lret
cmp
and
mov
mov
fcmovbe
dec
sbb
add
jg
out
adc
push
call
lcall
lret
int3
add
popl
lret
add
fwait
sbb
jne
adc
pop
addr16
jb
outsb
mov
cmp
mov
jecxz
ficomps
sti
popl
xor
sub
int
arpl
push
jnp
push
mov
fsubrs
sbb
orl
push
and
test
mov
add
int
inc
test
ljmp
xor
ds
or
push
jb
push
or
mov
and
jne
shll
and
fsubl
movsl
mov
mov
cmpsb
out
out
lret
push
sub
movsb
xor
pop
rclb
shlb
sbb
or
lods
bound
test
ret
or
aas
notb
pushf
cmpsl
jle
in
adc
mov
inc
xchg
mov
and
mov
shll
and
in
cli
cmp
add
aam
mov
and
add
in
sub
cltd
adc
fsts
rcr
push
or
inc
into
mov
cmp
mov
sub
xchg
add
das
shlb
xor
popa
mov
mov
enter
adc
inc
loopne
popf
mov
jmp
jecxz
outsb
dec
and
push
test
sub
jp
pop
shrb
inc
mov
sub
out
stos
stos
popa
jecxz
mov
xor
fnstsw
push
jnp
pop
cmpsb
pushf
mov
xor
sbb
xchg
and
fstpl
and
imul
sub
jb
xchg
sub
push
pop
rorl
fiaddl
xchg
cmpsl
fisttpl
push
andb
mov
or
frstor
inc
push
jnp
jle
je
push
mov
xchg
negb
jl
inc
mov
popf
inc
int
ret
push
aas
pop
ret
cmc
mov
fmuls
pop
cltd
call
outsb
and
aam
push
push
adc
jl
lock
cs
add
push
push
je
icebp
inc
or
into
inc
aad
stos
lock
and
or
mov
mov
out
rolb
cmpsb
cmpsl
xchg
push
loope
ljmp
push
add
push
jno
or
sti
lahf
aad
or
sbb
sbb
js
sbb
mov
lahf
mov
fucom
inc
aas
dec
lea
dec
int
fstpt
loopne
jo
test
jno
addr16
leave
cmpsb
leave
sub
cwtl
lcall
inc
out
pop
push
pop
cwtl
sub
lcall
daa
insl
divl
aad
shll
dec
push
sbbb
cmp
push
adc
sbb
mov
incl
xor
imul
dec
push
cs
aad
jnp
pop
fs
fs
sbb
and
jle
mov
notl
in
cmp
push
cmpsl
fisttpll
divb
mov
cmp
call
pop
mov
inc
das
repnz
inc
dec
mulb
movsl
and
scas
or
fistpll
xor
pusha
daa
add
pop
sub
mov
jbe
and
loope
lahf
out
mov
sarb
push
jp
mov
dec
push
mov
mov
xchg
scas
int3
cmpsb
sarb
js
dec
xlat
pop
sub
xchg
dec
adc
pop
xchg
lret
sti
sub
rclb
jp
sub
jnp
ss
ljmp
sti
mov
or
ret
cmp
sbb
xchg
cmpsl
loopne
or
jnp
jo
dec
push
loopne
mov
push
or
cli
ficomps
inc
lret
mov
mov
aad
sub
mov
shl
jne
and
das
or
test
outsl
inc
popa
and
rol
add
enter
fwait
les
cmp
dec
dec
dec
add
dec
xlat
xor
cmp
inc
xchg
cs
pop
std
cld
popf
xchg
add
add
scas
mov
ret
out
push
pop
movsl
pushf
int3
and
inc
dec
jbe
enter
push
or
dec
paddw
jge
cmp
aaa
adcb
pop
pop
jne
dec
and
fiaddl
pusha
or
push
fists
pop
pop
mov
adc
or
inc
orl
ds
adc
loope
js
push
cmp
outsl
xor
hlt
xorl
stc
stos
adc
xor
xchg
cmpsb
push
fs
out
sbb
outsl
and
mov
mov
out
mov
scas
rcll
ja
bound
dec
push
sbb
fmul
sub
fs
movsb
add
mov
dec
adc
mov
test
in
jle
mov
punpckldq
arpl
rorl
int
fisubrl
notb
push
movsl
clc
cmpsl
mov
or
jo
push
inc
ljmp
add
mov
add
adc
pop
imul
mov
push
push
xor
pusha
pop
adc
push
or
fdivp
flds
subb
gs
adc
cmc
jo
fisubl
dec
and
fcmovnb
xchg
pop
or
mov
subb
or
sub
jne
jmp
lds
sbb
sbbl
mov
sbb
xchg
loop
add
mov
gs
push
dec
fisttpll
sarl
or
jge
stc
test
arpl
jge
out
pop
xor
mov
jnp
add
jmp
push
mov
cmp
mov
sub
push
jecxz
mov
lret
scas
cltd
and
repz
adc
sarl
sub
das
scas
loope
lahf
pop
mov
inc
ror
sub
test
sub
ss
and
bnd
sbb
inc
pop
inc
fsubs
sub
xchg
sbb
stos
dec
lea
jbe
sub
movsl
mov
popa
adc
fstpl
xchg
sarl
loope
mov
sarl
das
cmp
xchg
ss
lods
or
frstor
stos
out
imul
repz
cmp
mov
sub
aad
pushf
adc
jo
sti
push
sbb
add
out
bound
jl
sahf
xchg
sti
xchg
sarl
xchg
mov
lahf
scas
adc
cltd
mov
mov
mov
aaa
bound
aad
testl
sub
leave
or
std
lea
popf
and
mov
clc
leave
in
shr
push
sub
lea
les
xchg
xchg
mul
adc
xor
imul
and
dec
xor
and
jae
mov
icebp
movsl
mov
mov
push
or
xchg
push
jmp
in
xor
xchg
jno
push
iret
push
clc
out
in
cld
insl
push
lods
imul
add
push
fmull
jle
push
mov
mov
dec
push
lret
push
lahf
lret
aad
dec
xchg
xor
mov
jne
addr16
std
loope
imul
stos
enter
ret
adc
add
mov
and
sbb
aaa
xchg
xchg
sbb
push
sub
leave
loop
push
pusha
mov
mull
cmp
inc
cltd
jmp
mov
cwtl
mov
rolb
cmpl
test
dec
adc
inc
cld
mov
fnsave
sub
push
and
shlb
mov
mov
sbb
or
add
fdivrs
in
scas
mov
adc
dec
ss
inc
js
mov
movsb
sbb
push
pushl
mov
inc
scas
fdivs
stos
dec
sti
lds
lods
daa
xor
arpl
in
pushf
mov
adc
std
mov
mov
lcall
mov
mov
outsl
je
aad
ficomps
pop
or
mov
push
xchg
fstl
xchg
int3
push
jne
adc
push
rcr
fdivrp
stos
dec
jae
push
xlat
or
push
stc
imulb
daa
mov
into
xchg
fsubr
rorl
js
lcall
stc
xor
or
sub
out
and
cwtl
rcr
add
idivb
push
lock
dec
ljmp
push
mov
stc
mov
mov
sub
cli
adc
cmp
sbbb
movsb
cmp
leave
mov
nop
das
jbe
fwait
imul
fidivrs
adc
jg
add
and
scas
and
jl
pusha
cmp
push
mov
push
dec
xor
sbb
cmp
sbb
pop
jae
sub
jnp
adc
adcb
lea
ret
in
adc
jno
out
fwait
pop
inc
mov
mov
lods
icebp
aas
cwtl
pop
out
insl
sub
outsb
ss
orb
dec
cltd
xchg
mov
jl
cmp
pop
mov
mov
or
adc
divl
adc
fldcw
aam
test
imul
int
jmp
pop
sub
popa
sub
mov
push
xrelease
add
or
shll
out
sub
sub
push
mov
sbb
int
cwtl
dec
vcomiss
std
gs
jnp
pop
adc
out
cmp
loop
inc
jge
xchg
mov
xchg
scas
fadds
aas
cwtl
scas
fs
push
push
mov
data16
out
lahf
lahf
ss
push
leave
add
aam
mov
sub
inc
pop
pop
aad
scas
mov
scas
push
sti
fadds
sbb
jnp
adc
lea
jo
pusha
mov
out
scas
jae
push
pop
imul
mov
out
or
loope
shrl
mov
adc
adc
inc
mov
lods
iret
sub
cld
test
and
cmp
cmp
push
dec
in
push
mov
int
lea
in
pop
mov
jbe
sub
cmp
cwtl
movsl
cmp
in
cmpsl
jle
push
mov
sub
pop
mov
xor
in
cmpsl
and
add
repz
dec
push
lret
xchg
stos
xor
iret
notl
insl
stc
mov
sub
xor
arpl
jecxz
xor
push
aad
pop
mov
andb
loope
sub
pop
in
and
cmp
mull
cmp
insb
dec
notb
repnz
cmp
xchg
bound
out
dec
fwait
inc
js
adc
mov
mov
cmp
jne
in
cwtl
stc
loop
stos
out
mov
aam
rcrb
jle
insl
mov
cmp
loop
adc
cmpsb
bound
inc
shll
out
mov
jecxz
shrl
sti
movsb
xchg
xchg
ljmp
sbb
cmp
sub
gs
or
add
cmp
dec
sub
pushf
sub
sbb
cli
dec
repz
sbb
int3
lret
stos
hlt
fadd
dec
ljmp
xor
jle
cmp
cmc
call
rclb
add
or
cmpsb
scas
mov
lds
test
stc
jnp
adc
mov
pop
fisubrs
cmpsb
out
lret
sbb
arpl
imul
sub
cwtl
pop
xchg
in
push
cmp
xor
ljmp
or
adc
and
mov
das
fmuls
pusha
add
push
cmpsl
scas
mov
cmp
ret
push
xchg
xorb
cmp
test
movsl
mov
or
jns
mov
xchg
xorb
jno
xlat
pop
imul
xor
scas
mov
in
and
sti
in
mov
andb
popf
lret
sub
push
lcall
int3
sub
adcl
mov
cltd
push
rcrl
jnp
jno
enter
je
aad
stc
adc
mov
movsb
xchg
adc
mov
fs
sub
inc
xor
int3
flds
in
jmp
jle
ficomps
sbb
xor
in
ja
clts
mov
push
icebp
mov
orb
push
cmp
cli
fistl
jmp
inc
ja
std
or
and
and
clc
xorb
xor
ret
jmp
or
adc
cwtl
pop
add
iret
stc
jp
cltd
pop
imulb
adc
sbb
adc
inc
jge
lcall
mov
cmp
push
int3
in
mov
xchg
je
jge
les
pop
movsb
push
arpl
mov
add
xchg
push
jle
testl
mov
pop
rorl
or
mov
mov
mov
mov
sti
dec
cmp
cmp
cltd
out
adc
test
dec
jp
insl
stc
jp
aad
jne
mov
sti
dec
not
movaps
int
xor
cmpsl
adc
icebp
fimull
push
jno
add
push
les
mov
add
push
add
xchg
fnstenv
pop
fisubrl
pop
xchg
test
fnstenv
fucomi
dec
adc
pop
mov
stos
xor
xchg
pop
push
jp
pushaw
dec
es
xchg
es
sub
dec
loop
loope
push
push
jecxz
in
cmp
dec
testl
push
scas
es
push
add
mov
xchg
lods
push
xor
sub
dec
jae
aad
enter
cmc
mov
jecxz
nop
icebp
stc
dec
mov
dec
sub
lds
stos
ljmp
mov
sub
stos
mov
out
xchg
hlt
mov
enter
popf
cltd
loope
movsb
lods
dec
jns
test
es
leave
lcall
add
xchg
mov
movsl
loopne
push
jecxz
nop
lahf
mov
fdivrl
add
ja
fldl
lods
repz
ret
xchg
xchg
mov
push
hlt
and
insb
push
cmp
mov
jno
cmpl
cmp
jns
xor
mov
mov
imull
xchg
icebp
jmp
les
cmp
sbb
sub
or
fs
sub
enter
movzwl
jnp
inc
es
inc
inc
or
cmp
fsubrs
lcall
cmovs
jl
out
les
add
loop
xor
and
jbe
rorb
lret
ret
std
inc
fistps
push
repz
lret
push
mov
stos
or
aad
repz
mov
outsb
push
cltd
out
pop
push
pop
push
push
pusha
jmp
test
sbb
push
push
sbb
inc
mov
aaa
or
jb
push
cwtl
enter
lock
add
gs
xchg
xor
and
iret
bnd
stos
test
lds
adc
push
into
push
lret
jbe
lods
pop
mov
sbb
aaa
mov
iret
or
lahf
and
push
fs
addr16
xchg
pusha
cmp
icebp
mov
cmc
sbb
cmpsb
dec
outsl
pop
and
fadd
in
cmpsb
dec
or
aad
cwtl
and
popf
push
je
inc
jnp
mov
push
dec
loopne
mov
dec
insl
push
pop
xor
dec
push
push
mov
ja
jle,pt
mov
or
adc
jle
cwtl
mov
add
out
jnp
imull
inc
jle
sbbb
xchg
outsb
sbb
test
imul
push
lcall
mov
jp
inc
inc
jl
loop
in
lds
sub
cmc
mov
mov
adc
dec
add
in
pop
iret
shr
scas
sbb
jmp
dec
in
jge
movups
mov
in
mov
push
push
outsl
sbb
xchg
jbe
data16
mov
sub
pop
js
mov
lahf
mov
mov
sbb
xlat
inc
sbb
push
ret
jl
orb
fiaddl
in
adc
sbb
dec
mov
in
mov
addb
in
dec
xchg
cwtl
out
inc
sarl
outsl
mov
sub
inc
bound
mov
sbb
jle
sbb
inc
xor
xchg
cwtl
ss
add
xor
mov
ret
push
add
comiss
or
adc
daa
dec
xchg
inc
push
imul
pop
mov
dec
mov
test
out
aas
vpsubd
nop
lea
push
into
pop
or
pop
int3
fimull
xor
lods
add
xchg
mov
scas
mov
es
adcl
jb
aam
stos
pop
jne
mov
ror
and
sub
loopne
add
pop
scas
stos
cmpsb
fldenv
jne
dec
aas
jmp
pop
lret
outsb
ret
push
or
jne
and
push
push
sub
adc
or
cmp
push
xchg
xorb
dec
fs
scas
mov
mov
sti
jo
jns
xchg
mov
sbb
movl
std
and
add
fiaddl
push
std
arpl
mov
mov
xchg
out
or
insl
dec
xchg
dec
cmc
push
sbb
mov
sti
mov
add
ja
fstpt
inc
fstpl
cmpsl
daa
or
sub
mov
cmp
fildl
sub
cmpsb
cmpb
adc
aam
lds
jo
add
sbb
leave
daa
dec
jmp
jge
leave
pop
mov
popf
mov
mov
dec
stos
push
aaa
movsb
mov
arpl
mov
xor
dec
arpl
repz
jbe
inc
pushf
je
mov
jle
scas
mov
push
push
xor
fs
aaa
xchg
pusha
iret
pop
stos
dec
inc
jb
sarb
push
mov
inc
scas
aad
xor
sub
jns
inc
mov
xchg
push
out
lcall
aam
leave
lret
test
mov
sbb
xchg
and
data16
pop
pop
xor
aam
mov
ds
arpl
xor
fcmovu
bound
cmpsl
insl
std
in
rcll
in
push
aas
test
ss
outsl
hlt
push
xchg
or
in
xchg
in
inc
mov
sbb
in
aas
daa
push
enter
and
lods
lcall
lahf
and
std
mov
jle
inc
xchg
pop
xchg
movsb
inc
cmp
push
push
incb
adc
push
pop
aam
dec
popf
sub
or
addr16
aad
and
mov
clc
mov
fisttpl
icebp
addr16
mov
add
xchg
mov
out
es
out
push
or
sbb
xchg
and
insl
and
inc
shrl
push
rolb
push
dec
mov
outsb
int3
call
mov
xor
jnp
test
inc
es
mov
xchg
lods
and
aas
lret
cld
test
pop
cwtl
je
cli
sbb
add
rcr
and
xchg
and
cs
pop
mov
add
gs
sahf
testl
imul
adc
or
aaa
lds
xchg
out
pop
sub
dec
das
xor
stc
loopne
push
mov
xchg
mov
jne
push
cmpb
push
xchg
add
icebp
lds
es
dec
sbb
sbb
push
push
dec
gs
xchg
push
lahf
incl
fcmovnbe
mov
mov
jmp
iret
imul
int3
push
or
sbb
mov
daa
pop
mov
fsubr
add
clc
scas
loope
addl
pushf
out
outsl
inc
or
in
mov
xchg
xor
sti
or
lods
and
inc
adc
lock
xchg
stos
ja
xlat
pop
lods
mov
dec
mov
mov
xchg
jne
sbb
mov
cmp
xor
lds
loope
lret
arpl
mov
cwtl
inc
dec
out
imul
jl
loope
test
and
jle
fdivl
mov
lock
dec
lret
ja
pop
std
fcompl
int
cmp
testb
sub
sbb
cmp
idiv
push
jg
mov
or
push
sub
push
fistpl
lahf
jp
sahf
push
les
inc
sbb
hlt
fcmovnu
dec
testl
imul
jnp
insb
push
inc
shrb
aad
xor
mov
cmp
or
jl
sbb
add
cmpl
dec
pop
cltd
inc
inc
lods
into
inc
jbe
pop
inc
adc
inc
jbe
sub
jge
fnstsw
sbb
out
cmp
ljmp
mov
dec
xchg
js
dec
addb
enter
inc
in
sbb
push
sbb
mov
clc
je
xor
xor
cli
mov
jns
cltd
dec
xchg
in
fimuls
cmp
test
sbb
shlw
cmp
mov
in
pushl
insl
fcmovnbe
cmp
jne
enter
push
mov
mov
ror
das
pusha
push
pop
mov
mov
jmp
sti
imul
cmp
movsl
xchg
int3
inc
push
ja
fwait
int
pop
add
ja
sahf
sub
add
jecxz
cmp
cwtl
sarl
scas
leave
lret
mov
xchg
scas
xchg
mov
jno
in
push
mov
xchg
test
push
jmp
xchg
out
or
aas
pop
pop
jns
xchg
cpuid
cmp
sbb
inc
cmp
aad
dec
push
mov
and
jne
push
sbb
add
xchg
stc
das
mov
popa
pop
mov
push
xor
nop
rclb
inc
sub
or
aaa
or
vmread
xchg
inc
jae
jno
mov
outsb
lahf
sbb
movsb
jg
scas
addr16
or
dec
mov
data16
inc
adc
setge
paddd
sub
pop
imul
insl
in
insl
xlat
or
inc
shl
pop
jg
vphaddbq
cmc
add
imul
scas
adc
or
inc
mov
jno
iret
mov
nop
lret
lret
les
mov
jmp
push
pop
mov
stc
add
shl
out
cltd
incb
lcall
setno
cmc
xor
mov
cltd
jle
mov
aaa
and
push
lret
add
inc
mov
jl
pusha
out
stos
in
jne
out
loopne
mov
outsl
jnp
fisubrs
push
inc
push
or
movsb
dec
mov
cmp
popf
add
mov
cld
or
cltd
cmp
movsb
das
or
movsb
js
mov
lock
mov
dec
jecxz
or
std
fdivr
lret
mov
ret
adc
mov
movsl
xchg
dec
xchg
jp
jne
adc
mov
push
into
insl
rorl
outsb
inc
daa
or
lods
dec
pop
cmp
fmuls
nop
sbb
in
ljmp
repz
push
jae
sbb
stos
test
dec
xor
in
sub
mov
addr16
loope
jecxz
rclb
sbb
pushf
mov
and
inc
cld
jmp
inc
arpl
mov
lahf
dec
sub
adc
jl
adc
scas
cli
ss
jb
mov
dec
fldl
leave
push
cmc
and
in
pop
lods
push
xchg
test
mov
sbb
or
adc
bound
das
cmp
iret
xchg
and
jae
sub
mov
test
jge
jge
push
test
movsl
inc
mov
mov
xchg
adc
ss
mov
adc
out
fadd
jle
test
add
ficoms
cmp
or
sub
out
pop
add
mov
adc
das
mov
xlat
xchg
xor
sarl
dec
ror
inc
test
jp
jne
fisttps
dec
out
iret
inc
icebp
mov
insl
fisubl
test
xor
push
inc
dec
repnz
inc
sub
jmp
faddp
loopne
sbb
pop
push
in
ss
popf
pushf
sbb
mov
ja
hlt
test
rorb
push
add
jno
xchg
dec
lods
repz
les
inc
call
pusha
add
movsb
ljmp
xchg
outsb
ror
fnstsw
inc
repnz
pop
mov
je
inc
add
fsubrl
push
shrl
cli
xchg
ficomps
les
sahf
inc
mov
xor
subb
fwait
mov
xchg
jle
sti
sbb
sub
and
or
in
hlt
push
popa
dec
imulb
addb
inc
movsb
orb
mov
mov
xchg
jmp
loopne
push
insl
imul
jmp
das
inc
pusha
adc
and
incb
pop
mov
icebp
xor
aaa
test
inc
sahf
pop
shlb
pop
mov
testl
push
cmpl
push
jl
xor
and
push
fcmovb
cmp
hlt
xchg
adc
cmp
lds
xor
test
stos
loopne
inc
add
add
lret
mov
mov
cmp
adc
cmpsl
adc
jbe
sbb
xchg
gs
js
dec
jb
sbb
mov
pop
ljmp
mov
add
push
in
popf
mov
dec
jo
shrl
imul
pop
lret
or
jb
sahf
push
sbb
in
cmp
icebp
adc
adc
out
mov
sbb
andl
mov
cmpsb
sbb
cld
sub
mov
lea
ret
loope
shl
in
rcll
outsl
inc
push
fwait
sbb
mov
pop
push
push
lods
dec
sub
clc
ds
arpl
or
movsb
dec
xchg
or
out
sbb
xor
push
jmp
add
in
movsb
pop
dec
shrb
jge
cltd
mov
insb
out
je
xor
adc
int
out
insl
jmp
shlb
mov
cli
arpl
loopne
insl
pusha
xor
push
mov
ret
in
loope
ljmp
daa
dec
data16
or
mov
xchg
jbe
loope
inc
sbb
inc
test
rol
pop
lock
icebp
in
gs
stos
ficoms
loopne
fmuls
ss
mov
mov
push
sbb
inc
mov
ja
and
iret
push
or
xorl
push
jmp
ret
jb
or
pop
cmp
pusha
in
sbb
inc
imul
jmp
adc
ret
dec
icebp
mov
cwtl
sub
ja
dec
lods
jge
loopne
mov
clc
inc
pop
test
jp
test
mov
jg
pop
add
jecxz
ja
sbb
inc
jnp
and
cli
stc
or
jbe
jp
xor
in
cmp
inc
in
jle
pop
int
and
lret
dec
out
xor
filds
sub
mov
dec
aas
and
xlat
dec
imul
or
jne
es
jbe
loopne,pn
lock
jl
in
jge
call
scas
pop
fs
sar
ret
loop
lds
xchg
push
daa
lock
cld
xor
decl
cld
leave
xor
sbb
inc
ret
xor
scas
jb
cmp
dec
fcoms
loop
repz
adc
sub
mov
dec
addl
arpl
sub
cmp
out
cltd
icebp
cwtl
ljmp
mov
jne
testl
add
xchg
in
jg
and
popa
sbb
es
push
roll
imul
jne
jae
xlat
jb
fadd
dec
inc
fiaddl
clc
je
js
jo
int3
cld
and
leave
std
cmpsl
fldenv
cs
jae
enter
out
divb
push
fcmovu
inc
ljmp
and
push
jle
cld
jge
test
pop
mov
mov
ljmp
push
cmpsb
jae
pop
fs
jmp
icebp
jns
xor
adc
and
addl
in
pop
clc
sbb
mov
int
push
pop
test
les
lods
xlat
and
dec
xchg
popl
xchg
pop
lcall
cmpsl
movsl
jp
scas
mov
lods
or
inc
and
in
pop
shrl
add
scas
dec
adc
mov
mov
sbb
cmp
mov
jg
adc
cmc
lret
adc
fldenv
in
loop
push
jbe
mov
or
push
push
xor
sbb
pop
sarb
in
cmp
xchg
add
cmp
pop
mov
fcmove
sbb
repnz
flds
in
mov
jle
push
and
jl
mov
loope
fldenv
enter
lret
in
mov
imul
mov
pop
push
pop
xchg
jge
pop
int3
dec
out
and
int
dec
cmp
adc
scas
in
sti
aam
pop
lds
add
imul
cmp
sbb
or
ljmp
mov
xchg
loope
xchg
pop
dec
adc
cmp
aad
xchg
mov
sbb
aad
shrb
push
and
xor
mov
xlat
movsb
fistpll
pushf
cmp
out
sbb
je
ds
stos
scas
fisttpll
fnsave
add
mov
fsubl
and
dec
push
cs
sbb
shrb
adc
pop
and
fwait
xor
inc
xchg
pop
cmp
mov
stos
xchg
out
loop
sub
ret
jnp
inc
lea
aam
or
sub
sahf
mov
dec
xchg
push
add
fcmove
and
bound
out
testb
add
cmpsb
repnz
cwtl
push
mov
aad
lret
rclb
std
cmp
push
cmp
sub
pop
notb
jl
cmpsl
fimuls
ret
xchg
cs
call
fldl
das
test
outsb
xor
icebp
cmpsl
jno
xchg
xchg
xchg
stc
mov
data16
es
ss
ja
xchg
jns
push
repz
roll
push
sti
cmp
mov
stos
jo
mov
lahf
fs
outsb
push
xlat
jl
mov
push
adc
out
rep
leave
int3
movsl
cmp
and
pop
fisubs
out
sub
daa
nop
les
fs
lds
inc
or
lods
rcrb
mov
in
jbe
mov
outsl
jmp
mov
and
cmp
fisubrl
popa
pop
jbe
scas
xlat
aas
xor
jne
xor
mov
cltd
divl
adc
test
shll
shrb
fildll
imul
stos
push
jno
sub
clc
xor
push
cmp
loop
mov
mov
pop
mov
or
std
inc
mov
testb
icebp
jb
enter
inc
push
out
cmp
scas
flds
xor
xor
pop
cltd
mov
mov
xchg
insl
mov
xor
clc
xchg
sub
es
sbb
adc
dec
sbb
in
mov
repz
push
mov
or
aaa
or
daa
rclb
orl
mov
dec
pop
push
adc
mov
andb
add
aaa
xor
cmp
jae
and
pop
pop
push
mov
push
lds
fisubrs
lcall
mov
test
mov
test
les
iret
lcall
aad
pop
and
jmp
pop
cmp
mov
or
or
jnp
inc
mov
pop
jmp
mov
repz
dec
sub
xchg
push
dec
xor
mov
pusha
cmp
sub
sub
icebp
repnz
popa
inc
add
mov
push
add
cmpsb
aad
xchg
sbb
push
test
sub
aaa
mov
pusha
pop
in
bnd
pop
pusha
test
mov
xlat
jae
fucomp
or
nop
test
pop
dec
mov
iret
idivb
popa
fcomps
rcr
lret
scas
mov
mov
sbb
sarb
and
push
and
mov
aam
mov
aaa
int3
adc
call
nop
movsb
mov
dec
mov
fisubs
enter
aam
js
gs
sahf
xchg
and
ss
mov
lea
jb
jg
inc
adc
leave
inc
popa
icebp
lcall
stc
or
add
push
or
add
in
push
jl
lods
inc
push
pop
dec
fisttpl
mov
scas
pcmpgtb
outsb
ja
xchg
test
insb
stc
and
pop
test
popf
adcb
pop
leave
pusha
xchg
xchg
sbb
cmp
sbb
fisubs
xchg
cmovle
ss
xor
hlt
fiadds
cmp
mov
xlat
andb
dec
pop
adc
push
push
xor
adc
xchg
in
jne
pop
leave
mov
adc
test
lea
out
sti
int
orl
xchg
or
in
or
in
loope
sbb
or
iret
lods
es
lock
or
pop
adc
out
adc
loopne
cmpsb
pop
push
loop
lret
mov
stos
idivb
xor
retw
testb
cmpsl
incl
pop
leave
ljmp
mov
mov
mov
cmpsb
xchg
out
pop
cmc
insl
test
sub
jl
int
jecxz
push
lds
mov
mov
push
loop
adc
xor
movsl
das
sahf
sbb
push
je
push
mov
mov
aad
adc
aaa
xchg
or
mov
cmp
xor
lret
adc
nop
jb
shl
mov
dec
mov
push
jbe
ret
dec
test
or
add
les
scas
push
faddp
and
dec
mov
jnp
jmp
daa
js
jp
xor
xchg
or
sub
or
mov
dec
jnp
cmpsb
jns
mov
dec
mov
mov
push
sub
cmp
mov
push
repz
aaa
imul
test
add
mov
pop
loop
xor
push
inc
mov
sub
dec
xchg
mov
xlat
and
inc
sbb
sub
mov
adc
loop
mov
mov
push
sbb
jnp
fdivr
imulb
iret
pop
mov
roll
pop
dec
sti
sub
xor
pop
orl
std
loope
ret
in
test
aad
pop
rclb
lock
sbb
lods
inc
imul
pop
ljmp
out
sbb
cmp
add
xor
sub
cltd
or
xor
fsubr
pushf
cli
mov
push
pop
in
leave
mov
xorb
dec
mov
out
mov
mov
mov
jb
jecxz
inc
mov
aad
std
roll
mov
idivl
sbb
sub
mov
xchg
imul
sub
inc
ret
xorb
insl
into
cmp
scas
int
lcall
adc
pusha
je
repz
and
xchg
adc
cmp
push
lock
movsl
lcall
cltd
ret
xchg
mov
sbb
push
mov
mov
xor
push
pushf
test
adc
pop
pop
pop
mov
xchg
sti
ficompl
adc
mov
lods
mov
cld
nop
into
ds
out
insl
add
dec
push
inc
rorb
loopne
into
dec
sti
stos
outsb
pop
dec
ja
xor
push
sbb
cmp
lock
in
daa
push
sub
out
popf
enter
jge
dec
stos
movsb
movsb
cs
dec
std
lret
sbb
xchg
sbb
pop
xchg
pop
pop
in
mov
fs
inc
push
jmp
andps
mov
sti
sbb
pop
jp
daa
fstpt
imul
adcb
loop
es
out
cmp
js
xor
and
mov
std
push
stos
mov
sti
sahf
adc
sbb
push
or
stc
inc
mov
pop
das
mov
out
roll
pop
stc
pop
add
xchg
cltd
cmp
inc
inc
or
sub
pop
les
dec
fdivrs
jbe
testl
or
movsl
mov
or
loope
fistpl
out
mov
int
nop
lcall
jb
mov
or
pop
rcl
jge
inc
xchg
int
or
inc
repz
mul
and
cmp
mov
push
mov
lahf
pop
shlb
pushf
cmpsb
jmp
call
push
add
jmp
jg
inc
das
jp
cli
test
jb
fldcw
cs
xchg
inc
movsb
cmp
or
outsl
sbb
jns
pop
pop
dec
xchg
and
loopne
jl
cmp
add
or
add
jns
into
jmp
mov
dec
push
add
xor
pop
cld
les
sub
movsb
arpl
nop
jo
add
cmpsl
lock
jl
fcomps
out
add
jle
inc
push
loope
aad
pop
xor
mov
xchg
call
sbb
ss
in
and
lock
cld
xor
lcall
adc
daa
xor
js
mov
add
push
and
jle
lea
push
push
xor
insl
aam
ret
dec
int3
or
adc
sub
or
jg
cmpsb
lret
test
ja
movsl
repnz
jb
cmpsl
mov
xor
xor
sarl
nop
stc
out
dec
add
in
iret
push
push
and
enter
test
sub
jle
push
inc
or
movsl
repnz
popl
dec
sub
xchg
sbb
xchg
out
lcall
out
fstpt
inc
inc
mov
mov
mov
cmp
push
outsb
and
mov
loope
push
xchg
dec
data16
nop
cs
nop
dec
dec
adc
xor
push
testb
adc
sub
push
adc
lock
iret
xchg
adc
mov
inc
push
scas
mov
jns
loop
icebp
ljmp
xorl
dec
pop
jo
and
movsl
lret
loop
sbb
add
aad
sete
xchg
shlb
pop
xchg
pop
pop
ljmp
push
cmp
mov
lret
clc
inc
stos
xchg
stos
xchg
or
popf
mov
jp
and
js
lods
add
xor
fldenv
push
je
fcompl
cli
popf
adc
insl
jns,pn
sub
ss
lods
jnp
jge
loop
daa
cmpsb
xor
sbb
sub
shl
lock
mov
ljmp
fistl
jl
dec
adc
xchg
outsb
mov
incl
and
push
lret
push
jmp
dec
fistpll
add
jo
mov
xor
pop
add
das
lea
jno
sub
pop
testl
pop
xor
push
les
repz
sbb
imul
std
jne
cmp
push
std
xor
ret
sub
jmp
int
add
xchg
mov
or
inc
cli
lods
mov
imul
push
repz
lret
push
xchg
jl
dec
imul
sbbl
mov
loop
push
pop
xchg
aaa
insb
or
das
scas
sahf
sub
jmp
push
icebp
lods
stos
jo
inc
enter
push
inc
fldt
add
fwait
hlt
add
xchg
push
nop
sub
adc
sbb
inc
lcall
inc
addl
cs
jbe
lea
mov
mov
fdivs
cwtl
loopne
push
push
add
jo
xchg
int
lods
movsb
je
das
sub
sub
xchg
push
and
and
jmp
mov
and
inc
inc
jle
xchg
sub
jle
add
sub
pop
ds
inc
movsl
xchg
insb
ss
jecxz
loopne
out
insl
push
or
ja
mov
jbe
jl
pop
pop
xor
in
mov
jnp
mov
mov
or
dec
sub
xchg
pop
mov
push
mov
cmpb
dec
sbb
pop
in
std
jo
xchg
xchg
stos
cmc
mov
pushf
or
sbb
movsl
push
fimull
xor
sub
andnps
popf
or
dec
lods
into
push
insl
lods
add
inc
jg
insl
mov
ret
pushf
cmp
fstpl
sti
jp
daa
ficompl
lods
and
ljmp
scas
aas
jl
push
inc
mov
or
xor
lock
jecxz
out
jg
pop
movsl
or
enter
stc
les
inc
fistps
ss
std
add
sbb
test
aam
add
inc
scas
mov
rcl
sbb
cmpsb
inc
imul
in
xchg
pushf
nop
movsl
push
mov
mov
leave
pop
or
subb
ljmp
push
pusha
lods
xchg
xchg
int3
hlt
jg
mov
loope
pushl
loopne
call
int
fcmovnbe
arpl
cwtl
xchg
cmp
lea
adc
leave
sbb
bound
cmp
xor
scas
mov
pop
int3
pop
sub
dec
in
pop
adc
cmp
sbbb
mov
jo
insl
std
out
adc
scas
pushf
int3
js
js
and
mov
cs
and
rol
pop
and
xchg
arpl
jge
loope
and
mov
lret
ret
push
in
fsts
dec
fidivs
and
adc
fisttpl
fstpl
sbb
cs
add
fnop
fcoms
testb
mov
jnp
adc
int3
pop
dec
jne
int3
pop
jmp
dec
rcrb
pop
scas
aaa
push
cli
test
subl
or
in
mov
push
xor
sar
xor
je
xchg
mov
cmp
popa
adc
stos
cmc
mov
insl
add
dec
iret
fs
add
rcr
xchg
out
or
pop
nop
mov
mov
lret
mov
and
es
out
jo
int
jo
cltd
push
cmc
stos
arpl
cmpsb
xchg
dec
loope
divb
enter
mov
outsb
cmpsl
loope
int
fdivl
mov
dec
sub
fsts
mov
daa
dec
jo
mov
scas
add
or
cmp
shll
push
stc
jnp
pop
outsl
push
lcall
mov
lea
sarb
sbb
add
mov
lret
js
mov
sbb
stos
fsubl
jg
or
rcrb
mov
jae
mov
je
clc
sbb
lcall
fnstcw
mov
aas
mov
add
xor
mov
lods
mov
and
cmp
pop
popf
cld
mov
cmp
les
dec
sarl
fbstp
sbb
sub
mov
dec
lret
ljmp
adc
mov
out
scas
and
mov
and
inc
mov
popf
nop
xchg
xchg
lahf
push
push
mov
dec
arpl
xor
and
mov
sbb
daa
jmp
popf
cli
sub
aas
inc
mov
ret
fsin
push
clc
in
dec
outsl
cmpb
cmc
out
xor
call
xchg
xor
out
fldl
lds
cs
std
and
enter
shll
ss
and
push
ret
adc
ss
mov
dec
and
jnp
adc
xchg
ss
clc
mov
std
mov
mov
mov
sahf
orb
cwtl
subl
dec
jbe
lds
lods
fadds
mov
xchg
dec
popa
lea
ffreep
inc
cmp
xorl
icebp
mull
es
jmp
iret
push
adc
inc
push
add
sub
sahf
xor
or
and
popa
js
inc
pushf
js
xchg
ljmp
pushf
mov
mov
fnstenv
mov
jp
mov
cmpsb
and
dec
nop
loope
jo
jecxz
or
out
gs
cs
outsl
add
sbb
lock
pop
test
and
sub
or
lock
sbb
les
jl
icebp
or
ja
push
in
int3
and
mov
push
inc
sbb
sahf
sub
sahf
inc
sahf
push
das
xchg
in
pop
add
mov
mov
shll
aaa
scas
popa
sub
dec
push
cmp
mov
ret
test
fsts
lcall
test
rcl
dec
sub
std
push
xlat
mov
es
icebp
pop
pop
fiaddl
cli
push
dec
xor
imulb
mov
mov
push
or
insl
pop
jg
and
sbb
js
or
lea
mov
xlat
jp
add
cmpsb
dec
inc
cli
xor
jmp
jne
cld
orl
inc
xchg
leave
inc
aaa
adc
mov
gs
and
bound
hlt
jmp
or
call
mov
fwait
xor
xchg
andb
xor
xchg
pop
xchg
sbb
lods
mov
add
lahf
mov
xchg
push
loope
cmpsb
popa
mov
aaa
iret
ljmp
out
cmpsb
xchg
cmp
fldl
push
dec
cmpsb
loope
sub
add
insb
test
add
xchg
push
xlat
jp
cmp
inc
repnz
repnz
test
stos
or
cmp
sub
push
sbbb
add
ja
jno
in
scas
push
and
xchg
sahf
xchg
dec
aam
rcrb
int
stos
insl
xchg
inc
sub
addr16
cmpb
out
inc
cmp
mov
sbb
sub
jp
add
pushl
pop
int3
xor
sbb
dec
les
xchg
mov
fisubl
inc
or
adc
push
test
stc
scas
dec
jl
push
mov
insb
pop
dec
xor
addr16
or
test
mov
xchg
add
in
and
or
mov
sti
jp
xchg
add
movsb
and
mov
mov
add
xor
xor
les
mov
fldcw
cmp
mov
mov
cli
xchg
dec
adc
inc
fs
jo
loope
sbb
fsubrs
pop
dec
push
stos
lea
add
testl
mov
or
sbbb
rorb
popw
shlb
push
mov
mov
int
jg
xchg
js
cmp
inc
in
and
les
xorb
adc
mov
prefetch
dec
sub
ds
mov
je
xor
push
push
cli
jge
repnz
fistpl
in
pop
dec
iret
stos
scas
in
inc
cmpsb
mov
adc
mov
lds
or
scas
dec
aaa
mov
add
call
test
jbe
movsb
dec
jle
sbb
mov
sub
push
adcl
cld
in
mov
cmp
push
mov
adc
sub
jbe
sti
xchg
cmp
addr16
mov
xchg
aad
sbb
fcoml
sub
or
cmpb
xchg
iret
repz
ret
cmpsl
pop
mov
mov
dec
in
call
mov
dec
movsl
cs
push
adcl
outsb
in
mov
clc
popa
je
aas
outsl
and
push
xor
add
xchg
pusha
mov
insb
out
fs
inc
jl
fildll
ffreep
insl
inc
lock
adc
in
inc
mov
dec
outsb
mov
mov
repnz
loop
in
test
je
cmp
cld
loop
xor
repnz
in
push
daa
cld
mov
int
mov
jle
jp
adc
mov
pop
jmp
insb
insb
scas
cmp
push
iret
rcll
jbe
inc
ret
in
xchg
divl
mov
aas
xchg
or
je
add
cltd
push
out
xor
mov
add
jae
xchg
jnp
pop
icebp
adc
pop
xor
cwtl
out
pop
mov
scas
nop
cmp
jae
xchg
movl
add
call
mov
enter
add
fisubrs
xor
mov
popf
push
cs
inc
ret
sub
aas
stos
in
pop
dec
or
call
lock
adc
imul
iret
xor
pop
daa
lock
sbb
pop
mov
out
jno
leave
or
mov
xor
test
idiv
cli
inc
or
pop
jns
pop
or
sub
aas
mov
inc
repnz
mov
mov
jo
call
and
inc
adc
sbb
dec
cmp
int3
inc
cmp
xor
arpl
divl
xchg
mov
dec
leave
imul
lods
xchg
cmc
and
mov
xchg
dec
dec
jo
jle
ficoml
shlb
fsubr
sbb
sahf
out
out
ret
jo
pop
inc
push
stos
lahf
add
add
dec
add
inc
pop
xchg
xchg
xchg
xor
cmc
inc
jge
mov
xchg
sub
scas
stos
pop
movsl
jnp
mov
movsb
and
push
ret
imul
faddl
push
scas
aas
imul
insl
jmp
arpl
push
aas
stc
inc
cmp
dec
loop
cmc
sbb
cmp
jl
fisubrl
jmp
inc
shr
out
push
cwtl
repz
sti
xchg
xchg
fcompp
ret
fists
popa
pusha
pop
xchg
dec
test
insb
dec
in
inc
in
adc
mov
das
push
cmp
push
ret
lahf
cmpsl
jp
sbb
sub
and
inc
inc
adc
jb
pop
hlt
mov
xor
mov
scas
sub
fs
cmp
lea
in
je
lock
jno
pop
jmp
cmp
adc
outsl
mov
xor
ljmp
sub
fidivl
js
jp
mov
faddl
cmc
mov
in
nop
and
xchg
push
lock
rcrb
vcmppd
pushf
jnp
xor
or
adc
movsl
enter
stos
pop
and
into
jg
cmpsb
mov
add
adc
pushf
pusha
cmpsb
sub
in
dec
mov
scas
xchg
outsl
cmpb
push
arpl
aad
aad
xchg
cmp
push
lods
scas
rcrb
jg
dec
leave
dec
add
sub
mov
jmp
cld
pop
leave
and
dec
mov
addb
xchg
and
push
add
cmpsl
pop
sbb
sbb
scas
mov
repz
scas
ss
lea
mov
adc
int3
adc
push
inc
clc
dec
jbe
stos
std
xchg
or
arpl
push
xor
jne,pn
stos
in
cmpl
int3
adc
pop
or
xor
mov
imul
mov
jecxz
lods
cld
xor
data16
and
aam
popf
int3
xorl
icebp
ss
in
push
dec
movsl
sbb
inc
out
pop
inc
push
jne
rorb
clc
cmpb
shrb
cltd
or
or
and
sbb
sub
mov
pop
adc
mov
sub
sub
out
sbbb
inc
shrb
pop
es
mov
jp
in
loope
and
icebp
cld
and
jo
push
gs
popa
aam
sbb
push
lock
and
push
cs
jg
xor
pop
adc
pop
pop
lock
jo
insl
lock
jl
cmp
push
cmp
mov
lret
movsl
ret
add
pop
add
data16
sti
xor
mov
pop
jno
push
mov
or
imul
add
push
into
sahf
push
cmpsl
aas
cs
mov
aas
ret
sbb
repz
jmp
enter
aaa
outsl
int
int3
pop
dec
lahf
dec
and
sbb
cmp
mov
mov
or
mov
adc
cmp
cli
cmp
lahf
das
fnsave
sbb
sub
insb
mov
or
sbb
mov
push
fcomip
add
add
es
xor
xor
scas
xchg
out
movsl
inc
clc
int
push
fnstcw
inc
pop
out
icebp
test
xchg
rclb
jl
adc
test
xlat
fmuls
sbb
outsb
add
aaa
out
xchg
std
movsl
cmpl
mov
inc
mov
xchg
setae
sbb
enter
add
inc
leave
push
and
das
cmp
scas
sub
add
ja
clc
or
repnz
scas
pop
push
mov
ret
inc
mov
rcl
mov
into
cmp
push
cld
insb
or
jl
ret
rcr
push
in
out
ds
jg
sarb
test
sahf
cmp
aas
ret
ret
mov
mov
sub
lea
shrl
cmp
sub
inc
add
in
jge
mov
pop
fstp
int3
pop
jne
adc
mov
and
jmp
cld
xchg
xchg
ret
in
jo
sbb
or
sbb
mov
fistl
push
or
jne
icebp
or
mov
call
xor
andb
jo
rcrl
popa
test
rorl
and
mov
into
js
inc
dec
aam
and
mov
je
hlt
pop
jnp
pop
in
ret
sbb
sbb
insl
cmp
and
mov
jne
in
xchg
stc
popf
std
mov
xor
pop
mov
pop
aam
loopne
push
cltd
rorb
sbb
lahf
enter
lock
insl
and
test
add
sub
rolb
push
rcll
mov
in
jl
cmc
or
lock
pop
ljmp
sbb
test
push
sbb
xchg
lds
mov
outsb
imul
cmpsb
lcall
mov
inc
push
aaa
mov
sbb
int3
into
int3
pop
mov
movsb
inc
adc
cmp
repnz
sub
ret
push
out
sbb
in
test
stos
adc
and
out
jo
out
fscale
ss
jbe
imul
jle
push
daa
ret
mov
jle
aad
lret
push
aaa
pop
mov
cmp
mov
dec
fs
lret
fdivrp
dec
adc
das
shlb
or
pop
lods
sbb
in
scas
jae
ds
mov
mov
xor
lahf
leave
sti
adc
inc
js
xor
call
sarb
aad
xchg
mul
fs
stos
in
jge
nop
jp
out
mov
jo
fistl
add
inc
cmp
lret
inc
stos
lret
adc
cmp
adc
cmp
push
arpl
mov
dec
mov
pop
repz
xchg
sbb
js
sti
ficompl
dec
pusha
sti
xor
lds
incb
sbb
call
sub
insb
arpl
inc
bound
std
out
out
enter
je
pop
movsl
test
jno
sbb
push
pop
xor
divb
sbbb
jl
mov
jle
inc
out
testb
ret
repnz
ret
push
popf
nop
repnz
lds
inc
xlat
add
xchg
addr16
aas
sub
push
xor
jbe
rorl
out
loop
pop
adc
jne
xchg
push
or
daa
xor
dec
sub
inc
cmp
scas
jle
cmp
cmp
js
lcall
aad
mov
jo
outsl
dec
lcall
test
vmulss
push
fcoml
or
into
fcomip
in
and
fs
add
mov
cltd
and
cli
pop
mov
mov
inc
mov
inc
jbe
mov
ss
sbb
pop
lods
lea
jmp
fildll
mov
ds
sub
or
sbb
cmp
add
fcomip
popf
jmp
daa
jge
add
arpl
cs
lea
out
jb
cmpsl
xor
jl
int3
inc
in
mov
je
pop
dec
in
dec
aam
frstor
sbb
sub
mov
push
andl
adc
mov
xor
pusha
xor
mov
dec
cs
in
mov
ss
test
inc
js
dec
cmp
lcall
cli
sub
jg
addr16
cltd
push
js
mov
popf
push
lods
adc
fsubl
and
sbb
insl
add
pop
or
mov
outsl
push
stc
aad
xchg
dec
xchg
or
jne
push
push
pop
jl
sbb
push
jno
addr16
xchg
sti
adc
pop
sub
movsb
dec
out
jmp
mov
in
xchg
push
jbe
mov
orb
cs
jg
add
mov
ret
add
shr
sub
insl
xchg
and
lock
adc
jbe
jecxz
jae
xor
adc
lahf
push
scas
loope
mov
rol
mov
adc
into
pop
jmp
xor
out
xor
lret
test
inc
or
push
les
lahf
jne
ffreep
jne
adc
inc
xchg
jmp
add
jns
test
ja
cmpsl
pop
gs
pop
xchg
imulb
iret
cmp
push
add
shrl
test
cmp
ret
orl
fistpll
popf
mov
cmpl
cld
rcr
cmp
cmp
dec
out
loop
rcrl
fcomp
imul
test
aaa
dec
in
enter
jge
cmp
sub
out
jmp
jl
into
add
mov
fisttpll
fdivr
fs
test
jmp
dec
xchg
jno
cmp
pusha
clc
lods
inc
pop
stc
imul
fidivl
add
mov
cli
sub
mov
dec
mov
int3
fs
pop
xchg
xor
sbb
xchg
inc
inc
sbb
push
imul
mov
sub
push
sbb
adc
into
test
nop
lret
mov
and
mov
lds
jp
mov
push
push
clc
test
gs
jb
out
lds
dec
cld
cmp
sub
fs
fstl
imul
cmp
push
push
add
mov
adc
and
dec
dec
mov
fs
cmp
and
add
mov
imull
push
je
movsb
push
adc
leave
shll
mov
test
inc
lahf
insb
sub
sub
and
mov
push
scas
jge
jge
mov
sbb
cmpsl
cli
andb
out
pop
ja
das
lret
icebp
outsb
aaa
xchg
std
mov
icebp
jl
pop
jmp
xor
mov
lcall
repz
cwtl
add
mov
jmp
lods
insb
dec
pop
rcrl
adc
mov
pop
push
mov
adc
ret
imul
push
pop
jecxz
fwait
in
xchg
and
fimuls
scas
in
ljmp
jnp
sbb
ds
aad
inc
sti
sarb
dec
xchg
insl
mov
xchg
and
addr16
inc
xchg
ljmp
loopne
pop
filds
out
jmp
jp
daa
sub
stos
cld
cs
enter
push
mov
adc
movsb
inc
flds
scas
sbb
dec
mov
ret
push
lods
mov
mov
daa
inc
push
inc
push
sarb
lock
inc
daa
scas
mov
jp
push
cmpsl
out
test
pushf
mov
pusha
fldl
mov
shrb
mov
pushf
push
dec
cmp
ss
mov
popl
scas
xor
jb
xor
ss
cmp
mov
fsubl
pop
pop
inc
adc
mov
addr16
out
fcoml
sbb
lods
jb
cmp
leave
aad
ljmp
mov
js
lret
pop
out
adc
sub
fs
adc
cwtl
rep
xlat
nop
in
xlat
das
xchg
andb
pop
ss
pop
sbb
lcall
repnz
aad
testb
mov
ret
dec
nop
jbe
push
inc
xor
mov
xorb
pusha
pusha
push
pop
push
mov
subb
out
popa
lock
out
mov
sub
cld
push
scas
mov
rep
imul
aas
bound
mov
data16
cld
or
outsb
push
je
mov
arpl
pop
mov
pop
and
dec
inc
xchg
ja
inc
sarb
jbe
mov
mov
inc
scas
mov
push
mov
movsb
movsl
jae
shrl
mov
sub
orl
and
repz
inc
adc
jl
xchg
mov
imul
adc
mov
sub
loope
out
jecxz
xchg
adc
jns
jecxz
ja
xchg
xor
push
adc
push
adc
leave
loopne
cmp
mov
adc
shrb
jns
leave
test
out
out
sbb
inc
imul
dec
dec
lds
jo
dec
lods
or
sbb
inc
sub
adcl
mov
repnz
mov
cli
dec
sub
out
push
mov
xor
sub
cmp
jge
les
push
jbe
and
out
inc
pop
xor
push
dec
lock
cmpsl
neg
add
or
push
jl
lret
aam
push
add
inc
pop
in
addr16
aas
add
addr16
cmc
xchg
decb
xor
dec
mov
js
add
fsts
or
sub
int
pop
into
fcompl
ds
rclb
jl
testb
lods
lea
testl
dec
icebp
jg
push
imul
jbe
adc
push
in
ror
sub
dec
inc
sub
cmp
adc
pop
xchg
jmp
subb
cmpsb
int3
popa
mov
jae
stos
jns
sbb
dec
sbb
imul
cltd
loope
lods
stos
adc
mov
mov
mov
icebp
scas
push
mov
jle
push
mov
gs
mov
jae
dec
lret
aad
les
mov
nop
add
xor
jb
inc
cwtl
nop
pushf
inc
mov
pop
les
outsb
shlb
dec
mov
xchg
adc
shll
xchg
inc
inc
test
adc
xchg
mov
sbb
sbb
cmp
insb
pop
out
imul
iret
je
cwtl
push
imul
sub
ror
push
add
adc
lea
mov
fwait
insb
inc
cmpsl
cmp
dec
mov
aaa
or
ds
lret
mov
xor
rolb
cmp
loope
popf
mov
jecxz
jmp
sahf
imul
in
push
lods
mov
mov
lcall
and
dec
mov
cmp
icebp
sbb
push
push
mov
add
int3
andl
cmp
and
mov
loopne
sbb
sbb
add
jb
lods
push
js
add
daa
add
sbb
mov
sub
push
add
and
sbb
std
imul
and
mov
je
les
and
jg
mov
bound
mov
call
or
jo
xchg
push
in
lret
add
dec
sarl
lods
sub
and
cmp
mov
fisubl
mov
in
outsb
mov
xor
cmpb
mov
int
push
mov
stos
adc
and
xchg
xchg
loope
pop
mov
addl
arpl
push
mov
mulb
pop
xchg
dec
in
mov
fmull
and
mov
out
mov
sub
lods
adc
push
pop
xor
pop
lods
pop
jge
pop
sub
xlat
cs
dec
jmp
pop
mov
or
mov
into
xchg
jmp
dec
jbe
out
jnp
pop
push
nop
jmp
out
mov
test
lds
mov
cmpsl
out
rorl
rclb
outsb
push
and
jae
cld
mov
cmp
inc
xor
js
push
lock
int
lahf
xor
rolb
or
js
popf
and
popa
dec
adc
mov
dec
pop
mov
fnstsw
mov
call
fwait
loope
mov
je
and
jg
test
es
into
xor
jl
inc
dec
fistps
aas
pop
adc
icebp
sbb
scas
mov
and
lea
cmp
mov
mull
mov
lock
sti
jbe
inc
lods
ror
jno
lret
xchg
jmp
inc
sub
loopne
out
sbb
call
sub
pop
sub
sbb
pop
push
mov
addr16
dec
add
push
xor
sub
fldcw
test
mov
jb
adc
inc
mov
sub
add
jmp
lret
pop
je
mov
pop
fistpll
loopne
push
mov
dec
inc
sbb
arpl
pop
mov
movl
cli
popa
inc
divb
into
movsl
out
xor
mov
sbb
push
cmp
push
pop
adc
faddl
dec
jmp
sbb
enter
or
xor
insb
inc
inc
int
mov
ret
push
mov
or
mov
xchg
loopne
jae
add
sbb
sbb
arpl
outsb
xchg
pop
shlb
cmp
inc
push
lahf
mov
ds
xchg
or
loopne
push
mov
cmp
push
je
ret
add
mov
jb
mov
in
bound
xor
inc
dec
mov
paddw
jne
cwtl
and
js
andb
mov
call
fdivs
jo
dec
or
lcall
sarl
xor
lea
mov
rcrb
xor
outsl
add
sub
sbb
mov
xchg
icebp
lret
arpl
cmp
inc
mov
xlat
ja
loop
fcoml
jbe
jbe
popl
sbb
jo
mov
jecxz
cli
pop
cmp
or
mov
testb
lahf
xchg
mov
enter
adc
jl
cmp
pop
cli
fs
movsl
jb
js
xorl
inc
pop
jns
loope
jp
adc
jne
outsb
les
ja
inc
sub
sub
jecxz
pop
pop
stos
mov
int3
jmp
jbe
lock
adc
stc
in
xor
xchg
jb
sbb
inc
popf
les
xor
adc
loopne
mov
jecxz
push
shl
outsb
pop
dec
ljmp
cmp
in
push
mov
inc
inc
iret
lret
xchg
pop
sbb
xchg
movsb
adc
mov
xchg
repnz
mov
arpl
stc
aaa
out
push
pushf
sub
push
aas
adc
daa
xchg
ret
adc
mov
ret
insl
mov
orb
jnp
jns
push
mov
lods
sub
fistpll
enter
dec
xchg
adc
xchg
ret
dec
cmp
inc
cmp
adc
pop
cld
gs
scas
mov
sahf
push
imul
pop
lcall
jg
icebp
test
fldcw
ficompl
and
and
stos
rcll
lods
sti
or
std
shrl
push
pop
je
arpl
subb
ljmp
dec
das
gs
jne
push
mov
pop
lock
out
pusha
inc
mov
fidivrl
or
in
std
xor
mov
or
push
jno
lods
and
xchg
stos
push
clc
inc
push
test
jae
popf
es
scas
adc
call
dec
fstl
lahf
add
test
jne
out
mov
jmp
pop
clc
mov
cmpsb
ljmp
jmp
and
cmp
and
shrb
mov
xor
jle
jb
jbe
sbb
inc
cmp
sar
mov
push
pop
jne
and
xor
adc
iret
push
sbb
lahf
scas
pop
fdivrs
ja
or
mov
pop
mov
mov
xlat
idivl
inc
add
mov
sbb
out
dec
pop
jl
xor
iret
push
or
xchg
push
jg
mov
and
test
cmc
pop
scas
cmpsl
sbb
loop
add
sbb
xchg
push
pop
movsl
fs
cmc
data16
cmc
fwait
lcall
mov
cmp
pop
pop
loop
lcall
mov
out
xchg
push
iret
daa
and
fdivrp
sbb
adc
push
lea
xor
push
and
mov
ds
je
push
xor
jl
aad
mov
xchg
cli
mov
leave
ljmp
jb
fildll
subl
orl
and
cmp
add
cmp
jns
mov
cld
pop
bound
mov
repz
sub
arpl
inc
out
push
clc
add
cmp
mov
fdivrs
pop
cwtl
jae
cmp
and
mov
inc
orb
bound
lcall
push
jbe
inc
xor
mov
mov
dec
sbb
push
dec
shlb
sbbl
loopne
hlt
sarb
or
lods
mov
popa
push
adc
in
jns
jo
insb
cli
stos
push
aad
sbb
ljmp
xor
dec
or
stos
mov
rorl
not
mov
mov
fdivs
jnp
lods
cld
push
cld
daa
outsb
xchg
lock
sarb
pusha
adc
cmpsb
dec
add
dec
or
scas
daa
cmovs
rcrb
adc
into
cmp
xchg
cmp
out
push
incl
insb
sub
stos
mov
mov
repz
push
mov
jp
inc
jmp
loopne
mov
xchg
call
xor
nop
ror
aam
push
je
sbb
lahf
test
cmp
cs
es
in
mov
pusha
cmpsb
pushf
push
mov
mov
push
ljmp
dec
and
xchg
scas
add
xor
mov
jno
inc
andb
movsb
xor
sahf
fsubrs
loop
sub
mov
push
sub
sub
inc
imul
scas
aaa
test
cmc
fcoml
jle
jmp
loop
scas
mov
loopne
xor
mov
jo
pop
push
jecxz
jo
cmp
sbb
vmovss
sti
or
xchg
js
xor
cltd
or
jb
lods
mov
push
mov
lods
dec
sbb
push
fs
xchg
mov
add
add
aad
sub
pop
jl
adc
ljmp
mov
or
pop
imul
push
shll
ffree
iret
mov
int3
fwait
rcrl
clc
inc
mov
add
iret
test
stos
jb
or
sbb
popa
mov
out
shll
xchg
dec
leave
sub
test
ret
mov
jns
sbb
sub
jb
jb
dec
cmp
add
mov
in
inc
fcmove
or
xchg
testb
popa
dec
push
dec
shlb
push
ficoms
ret
mov
mov
add
mov
pop
xor
stc
sti
jge
scas
push
rcrb
lods
sbb
popa
mov
push
and
out
mov
xor
pop
add
std
out
add
testb
js
pop
cltd
mov
hlt
lods
pop
mov
cltd
sub
and
or
adc
jp
mov
insb
jge
mov
pop
repnz
add
mull
dec
lods
cmp
sbb
mov
mov
or
mov
in
jle
out
sahf
stos
scas
and
push
pop
fadd
int3
xor
sub
movsl
aad
xor
loop
popf
xor
pop
cli
jmp
outsb
push
and
pop
inc
mov
aaa
aam
fucomi
rorb
push
loope
cmpl
icebp
mull
pop
in
xchg
mov
xlat
fcom
cwtl
ja
test
loopne
jl
repz
sbb
mov
sti
xchg
mov
rcrb
nop
subb
xor
shrl
imul
mov
push
jnp
addr16
nop
sahf
push
into
xor
mov
mov
xor
push
data16
mov
adc
push
out
fs
lea
test
dec
push
movsb
lods
jbe
movlps
sbb
mov
data16
pushf
popf
mov
mov
push
dec
lcall
mov
cltd
sub
pop
sarl
mov
cwtl
dec
and
in
jno
adc
sarb
dec
bound
icebp
jg
iret
add
push
nop
push
mov
or
push
sub
or
shr
pop
xor
dec
jp
push
and
mov
mov
cwtl
xor
or
or
iret
xchg
ja
cld
jle
mov
push
repnz
push
mov
or
jmp
or
ficoml
inc
inc
cmpb
scas
scas
and
mov
inc
xchg
xchg
repz
js
cltd
in
in
les
push
leave
loope
push
adc
sahf
xor
fisubrs
ret
cmp
stos
daa
xor
nop
cwtl
mov
push
popa
cli
dec
pop
pushf
jp
fdiv
fisttpl
jns
jbe
pop
enter
mov
xor
dec
out
sbb
pop
xchg
push
mov
sub
push
ret
in
pop
mov
jecxz
popf
sub
dec
mov
or
sub
out
fisubs
and
add
or
ficompl
dec
jae
inc
cld
jp
test
fsubs
ret
int3
push
add
push
sarb
cld
subl
test
pop
mov
insl
rorl
and
xlat
test
adc
xor
cwtl
pop
sub
iret
fiaddl
test
in
add
push
outsl
mov
stos
xor
mov
ja
dec
xchg
add
push
dec
sbb
fucomp
lcall
pop
lods
push
pop
cmp
pop
mov
and
outsl
movsl
fadds
arpl
rolb
xor
mov
lahf
pop
inc
fidivrs
hlt
pop
cs
add
stos
cli
jp
sbb
lret
cmpl
cs
and
vmovhpd
inc
add
add
mov
adcl
mov
mov
out
ds
rolb
test
push
repnz
lcall
lds
test
xor
pushf
mov
or
cmovs
xor
dec
cmp
and
add
mov
adc
sbb
negl
stos
or
push
add
lods
cmc
js
mov
stos
in
sub
cmpsl
xor
mov
stos
push
out
xchg
mov
pop
pop
outsb
out
mov
xor
stos
adc
push
out
push
dec
pop
xor
sub
xchg
repnz
jb
jecxz
int
pop
mov
jns
ret
fsubrl
sbb
inc
inc
popf
mulb
push
out
or
fstps
mov
push
dec
pop
inc
mov
fisubrs
jl
out
jle
lock
jae
dec
repnz
movsb
push
sub
inc
fildll
mov
pop
scas
shrl
sbb
popf
mov
adc
nop
jg
fidivl
add
int3
sbb
and
aad
and
pop
dec
fstpl
dec
in
aas
inc
out
es
movsl
adc
adc
sbbl
xchg
sub
push
mov
call
daa
rcl
cli
lcall
cmpsl
gs
pop
ljmp
pushl
xor
or
cltd
mov
mov
dec
mov
iret
mov
out
pop
mov
aam
pushf
mov
loope
hlt
rcrl
insl
lret
aas
test
push
push
sub
mov
xor
xor
and
shll
jl
and
sbb
aas
fiadds
mov
cmpsl
pop
fdiv
inc
ljmp
jno
xor
push
xchg
lock
sub
pop
jbe
mov
mov
lret
mov
xchg
adc
dec
jae
pop
mov
cwtl
test
ret
sub
add
add
repnz
push
inc
fs
mov
sub
out
stos
jmp
or
sbb
pop
jns
ss
sbb
inc
aas
sbb
jae
jge
mov
fs
sub
mov
mov
or
insb
cmc
mov
cli
add
mov
or
lret
mov
mov
shl
insl
faddl
jnp
ss
add
je
push
sbb
cltd
xor
scas
je
aam
push
push
lcall
jp
mov
decl
lcall
and
into
dec
ror
incl
cmp
mov
xor
cmp
std
mov
mul
cwtl
or
pop
cmpsb
out
daa
shll
jecxz
xchg
pusha
call
sub
fcomps
sub
push
push
dec
iret
xor
popa
mov
mov
mov
pop
push
aam
mov
and
xchg
inc
push
fstpl
inc
mov
hlt
in
out
mov
fcoms
adc
movsl
imul
popa
fcomps
mov
push
jge
ror
mov
out
mov
popf
jmp
push
jnp
cltd
push
mov
xchg
fdivs
add
mov
pop
push
lret
xlat
dec
rcrl
ja
adc
cmpsb
mov
call
outsl
xor
divb
mov
push
cli
outsb
call
fs
insl
je
loopne
dec
cmpsl
push
lds
cmc
sbb
xlat
ror
ret
dec
push
lret
data16
jo
imul
mov
jo
pop
fdivr
filds
in
in
mov
int
divb
and
mov
pop
movsl
adc
sub
xchg
stos
incl
push
sub
mov
inc
outsb
call
sbb
push
fldpi
popf
jne
jmp
insb
movsl
jbe
adc
rcl
mov
mov
insb
xor
jge
mov
aaa
push
fnstsw
test
sahf
subb
xchg
imul
ret
movsb
jne
loope
pop
push
les
cs
testb
push
sbb
push
sbb
dec
in
jbe
ficoms
pop
imul
inc
jmp
movsb
xchg
fld
inc
aad
icebp
fs
dec
int3
cmpsb
jnp
hlt
test
aaa
cmp
hlt
outsl
mul
ljmp
imul
mov
jecxz
sub
lret
adc
pop
xor
sahf
jle
mov
mov
mov
or
xchg
adc
or
and
adc
pop
sub
mov
pop
lret
std
adc
dec
jg
stc
inc
add
cmp
loopne
push
jmp
mov
stos
mov
arpl
popf
add
jnp
rorl
int3
pushf
flds
pop
out
jmp
fsubr
mov
cmc
int
jb
add
mov
int3
push
loopne
push
insb
adc
pusha
mov
push
pop
lcall
ljmp
addr16
add
rol
xor
loope
add
push
movsl
ja
mull
sub
add
push
popf
mov
ja
ss
fcom
pop
xor
push
jmp
and
mulb
push
aam
and
fidivs
cmpsb
inc
mov
fidivrs
pop
xchg
pop
nop
jns
test
addr16
inc
and
mov
repnz
jno
mov
inc
xchg
lret
cmp
add
cmp
push
loope
mov
push
pop
cld
pop
rclb
inc
std
shlb
cmp
pop
jmp
and
xor
sahf
movb
inc
cld
sbb
xor
fwait
mov
mov
xlat
sub
fcoml
cmpl
out
int3
rcll
pop
cmc
push
movsl
movsl
and
cli
dec
sub
loop
cltd
int3
mov
lret
jnp
xor
call
lcall
add
pop
aaa
lods
inc
or
jns
xchg
pop
insb
sub
mov
adc
push
push
mov
insb
js
cmp
fistps
cmp
ret
push
adc
sub
xchg
pop
lret
in
or
out
pop
ja
lds
fimuls
or
xchg
jo
lahf
pop
cmp
adc
andb
lock
mov
inc
repnz
xor
repnz
cs
fs
test
inc
adc
sub
jo
adc
pop
rorb
xor
aad
dec
aas
sbb
sar
inc
and
cmp
add
inc
int
int3
cmp
movsl
add
mov
popf
pushf
rorb
rcrb
and
sbb
int
ljmp
mov
jns
mov
imul
cwtl
movl
sbb
mov
test
jecxz
mov
mov
stos
inc
xchg
mov
icebp
mov
in
mov
mov
scas
sub
mov
push
jp
mov
pop
mov
bound
fcomps
xchg
mov
aam
es
lret
dec
add
jb
push
jns
cld
push
and
rorl
xchg
jbe
out
push
sbb
mov
mov
aaa
dec
push
movsb
pushf
cmp
inc
dec
es
aaa
mov
daa
shrl
std
xor
xor
shl
fcoml
or
fcomp
dec
divl
cmp
ss
lcall
mov
idivb
mov
and
adc
ret
icebp
pop
xor
ret
dec
roll
andl
and
sahf
repz
mov
test
ret
push
pop
in
mov
inc
add
cmpsb
int3
das
sbb
mov
mov
jg
loop
orb
stos
leave
pop
sub
pop
into
adc
push
xor
psubsb
push
shll
lock
xchg
movsb
mov
cmp
ret
mov
pop
xchg
pop
or
mov
nop
out
repz
xchg
pop
adc
sub
in
or
in
data16
xchg
jle
xchg
dec
xchg
nop
inc
mov
jle
push
or
add
cmc
push
dec
push
shll
mov
subb
sub
sbb
pop
iret
push
lahf
stc
xchg
call
jne
push
mov
aaa
repnz
ljmp
addr16
sub
mov
movsb
and
mov
movb
mov
mov
push
mov
ljmp
mov
fwait
dec
mov
fnsave
inc
sbb
sarb
fistl
adc
push
fs
mov
jb
jae
ret
cmp
pop
or
cmp
lock
neg
xlat
jo
rcrb
dec
pop
pop
sub
es
pop
rol
push
lret
xchg
faddp
shlb
xchg
and
dec
hlt
and
sbb
sub
mov
adc
add
int3
shll
mov
leave
shlb
jae
or
leave
sar
ss
push
cltd
pop
and
adc
jg
cwtl
das
mov
cs
dec
loope
addr16
mov
call
cbtw
adc
mov
ljmp
cmp
inc
xchg
cmpsb
dec
aas
jecxz
fwait
insb
sub
xor
roll
mov
lret
add
imul
data16
mov
dec
pop
jecxz
mov
stos
push
xchg
in
es
jecxz
xchg
mov
cmp
push
dec
mov
aas
daa
or
sub
mov
imul
mov
lock
add
arpl
aas
sti
addr16
add
jns
mov
or
leave
cmpsb
loope
lds
mov
cmpsl
sbb
jno
jo
stos
call
lock
adc
xchg
mov
xchg
fcomps
jnp
clc
stos
push
jmpw
es
test
int3
lret
add
daa
add
aaa
inc
fidivs
fisttpl
or
xor
int
movsl
bound
push
clc
mov
mov
jae
leave
pop
sub
sbb
ds
leave
xchg
int3
imul
addl
jge
nop
test
outsl
lret
mov
ret
mov
push
push
lret
mov
repz
inc
or
stos
scas
inc
or
aad
mov
mov
mov
cmc
in
jecxz
mov
push
stc
dec
mov
and
cmc
mov
mov
aad
les
into
dec
sub
stc
out
shll
cwtl
adc
jp
bound
and
loop
push
ret
adc
dec
dec
stos
mov
mov
fsubp
mov
fs
dec
adc
ss
sbb
lock
pushf
lods
and
shrl
or
inc
cs
or
call
outsb
cmc
je
incb
fsubrs
sub
mov
or
sub
out
hlt
imul
sbb
mov
lock
call
cwtl
das
and
test
aad
mov
adc
cmpsl
mov
xchg
bound
out
sti
mov
mov
cmp
repz
dec
call
in
push
loopne
pop
mull
pusha
pop
rcrb
outsb
mov
shrb
adc
out
movsl
fwait
leave
xor
dec
sbb
es
jge
and
roll
stc
sbb
cwtl
push
or
xchg
jne
pop
mulb
xlat
and
cmp
out
cmp
pop
icebp
loopne
iret
dec
decl
fldenv
xchg
sub
mov
dec
xchg
in
nop
mov
sbb
adc
mov
outsl
push
push
lret
jne
roll
push
push
sbb
fsubs
fistl
iret
or
or
jo
ljmp
jno
xchg
lods
fstl
sub
inc
sub
adc
lods
push
xchg
push
cwtl
psubd
push
sbb
lret
dec
dec
mov
addr16
xchg
mov
into
mov
inc
mov
sti
pop
xor
jno
adc
jmp
ss
js
ficompl
shrl
push
mov
aaa
mov
imul
aam
mov
mov
add
mov
push
lds
xor
xchg
cli
and
ljmp
decb
ja
enter
ja
adcl
rol
adc
dec
ds
ljmp
shlb
pop
or
xor
push
sbb
or
jnp
loopne
or
aas
push
cltd
inc
mov
mov
push
lea
pop
jg
test
adc
jno
xchg
sbb
mov
addr16
rcr
imul
clc
mov
inc
test
dec
xor
dec
cmc
rclb
lock
scas
or
xlat
lahf
nop
lcall
xchg
rcrl
lock
jge
clc
dec
and
sar
not
cmpl
rclb
nop
in
push
mov
jbe
xor
push
stc
mov
dec
inc
sbb
test
jmp
gs
mov
dec
and
pop
mov
push
pushf
out
push
xor
nop
cli
or
ja
pop
dec
adc
dec
imul
pop
jns
cmp
stc
mov
ljmp
xchg
jg
in
loopne
enter
movlps
test
push
das
cwtl
pop
sub
ljmp
inc
pop
inc
mov
mov
test
or
pop
stc
pop
lock
pop
pop
or
push
rcll
inc
and
fisubl
pop
cmp
cmp
xor
stc
fs
pop
decb
lods
cli
aam
mov
inc
adc
js
pop
cmp
jno
int3
jo
pop
push
mov
leave
imul
adc
cli
xchg
pop
jmp
lods
fmuls
dec
push
pop
mov
mov
push
arpl
movsb
xor
lret
jl
xor
into
clc
inc
sub
movsl
adc
test
mov
cmc
ja
cmp
push
and
or
lahf
dec
push
mov
xchg
dec
inc
mov
adc
ret
or
jmp
pop
shl
push
fisubrs
lret
cmpsl
add
cmpsl
or
adc
js
aaa
fsubl
mov
repz
cmp
dec
sbb
fnsave
jb
stos
pop
fwait
push
jo
subl
into
cmpsl
sti
pop
cs
or
sbb
enter
mov
shrl
dec
icebp
ret
out
lods
xor
orb
insb
out
fwait
iret
popa
xchg
cli
fstps
jmp
cmp
pushf
js
sub
push
inc
test
sub
mov
jne
mov
in
add
push
and
jl
lret
inc
push
in
jnp
rorl
sbb
outsl
clc
inc
jp
lea
mov
nop
inc
fs
or
outsl
movsl
adc
in
hlt
jmp
fiadds
sbbl
push
dec
fadd
sbb
mov
movb
adc
sbb
jl
loop
arpl
js
push
out
mov
adc
in
das
fcoml
pop
xlat
mov
enter
adc
inc
jecxz
rcrb
add
mov
scas
inc
xor
and
push
jecxz
cmp
jge
sahf
pop
dec
dec
jno
dec
dec
in
gs
imul
sbb
dec
or
pop
stc
test
xchg
mulb
rep
sbb
lret
xor
out
ret
leave
loope
test
mov
push
mov
iret
stc
arpl
jg
pop
pop
add
addb
push
mov
jle
out
mov
adc
stc
jge
insl
pop
gs
jns
cmc
nop
pop
jnp
or
out
scas
push
std
mov
mov
out
jns
enter
aad
in
aas
adc
jbe
dec
sahf
cwtl
adc
mov
fwait
lret
jb
sbb
cli
inc
and
adc
inc
gs
or
sbb
out
mov
xchg
push
add
xchg
test
negl
mov
pop
dec
cmp
lds
es
jns
std
jle
mov
mov
enter
gs
negb
pop
leave
sar
in
jp
mov
mov
scas
imul
adc
push
test
inc
scas
fisttpll
stos
nop
xchg
addr16
outsb
xchg
xchg
or
insb
jo
lods
rcl
xchg
mov
cld
aad
frstor
xor
add
adc
jmp
outsb
add
les
lds
rol
cmp
stos
enter
out
enter
cmp
out
imul
inc
or
imul
dec
js
push
mov
mov
loopne
mov
add
xor
hlt
nop
push
outsb
inc
mov
rclb
aaa
rcrl
or
jnp
unpckhps
sbb
pop
bound
into
repz
push
les
lahf
cmpsb
pop
sbb
sbb
cmp
push
aam
jge
adc
jl
movsl
jnp
and
dec
cwtl
xor
orl
jg
mov
jecxz
jle
and
jmp
loop
in
movsl
dec
lea
push
ss
sbb
rclb
and
add
xchg
xor
sub
pop
pop
outsl
daa
inc
test
cmp
ja
mov
or
dec
sbb
push
mov
movsl
ret
pop
cmp
push
aam
mov
add
mov
lock
loop
jbe
push
inc
xchg
sub
cmp
add
or
test
std
aam
js
test
mulb
lods
out
out
add
cld
xor
mov
sahf
mov
cltd
adc
sti
jb
sahf
call
cwtl
pusha
in
adc
stc
loopne
pop
leave
inc
test
fstpt
mov
inc
push
addr16
nop
das
shlb
sarb
mov
int3
mov
mov
loope
and
inc
sub
mov
test
add
mov
push
test
in
xchg
scas
mov
cmp
loop
mov
sub
pop
pop
lock
jno
mov
mov
inc
mov
mov
xor
mov
shl
test
into
roll
nop
shlb
push
xchg
cwtl
push
fbstp
cmpsl
sub
add
add
mov
aas
sbb
xchg
push
inc
add
enter
mov
cmp
lcall
lock
cwtl
inc
adc
ror
repnz
mov
sbb
shlb
push
test
aam
notb
int
mov
fcompl
ljmp
pop
xor
add
leave
sti
mov
cltd
inc
je
insl
mov
ret
aas
out
jbe
jno
mov
fdivp
mov
cmp
sbb
ror
std
arpl
sbb
xchg
push
jb
jp
push
fbld
dec
loope
jno
xchg
inc
arpl
add
ffree
aas
mov
inc
and
push
popa
xorb
insl
lods
pop
push
leave
fstpl
popa
mov
mov
sub
es
stos
aas
and
shrl
fnsave
xor
ljmp
mov
loope
xchg
mov
cwtl
inc
mov
and
inc
mov
ud0
and
mov
sub
fisubrl
push
addr16
or
jae
andl
mov
arpl
pop
jge
paddusw
stos
inc
insb
lcall
mov
call
imul
pushf
push
ds
outsb
out
mov
or
pop
je
aam
repnz
pop
push
idiv
aam
jbe
into
scas
mov
sub
cld
inc
lock
fiaddl
ret
xor
adc
cmp
push
or
push
sbb
pop
mov
lret
lods
aam
insb
push
mov
outsb
jecxz
ret
or
mov
enter
xchg
push
test
lea
mov
fdiv
inc
sti
or
mov
sbb
mov
and
loope
mov
fwait
vcvtss2sd
mov
xor
xchg
repnz
icebp
ds
ja
xchg
movsl
jge
pushf
inc
fistpll
add
sarb
jl
bound
push
repz
dec
inc
jge
adc
add
mov
add
in
imull
sub
cmp
leave
pop
clc
cltd
in
xor
lock
pop
sahf
addr16
and
dec
arpl
enter
or
push
xor
notl
sti
fmuls
nop
mov
inc
inc
and
aam
adc
push
cmpsl
cmc
xchg
test
xchg
jo
jp
dec
push
push
hlt
daa
mov
call
and
shl
and
lods
fdivr
stos
pop
loopne
cmp
jb
mov
xchg
into
imull
bound
inc
sti
imul
enter
cld
fidivs
add
pop
popf
lods
add
mov
sub
enter
js
push
ret
pushf
and
shll
mov
add
jae
mov
ret
push
xor
cmp
imul
or
mov
xor
push
jge
mov
xchg
jnp
dec
inc
adc
in
shll
sbb
xchg
or
loope
outsl
fsubrs
outsl
xor
gs
mov
sub
push
and
pop
and
fiaddl
lock
adc
mov
and
dec
xlat
inc
fneni(8087
xchg
push
std
call
and
loope
in
inc
fs
insb
enter
xor
fucomip
push
inc
fldenv
popa
movsb
andb
jae
pop
jns
cld
and
imul
lods
outsl
dec
lea
ret
mov
aad
mull
lds
pop
cmpb
push
or
lcall
scas
clc
pop
inc
popf
or
jecxz
clc
negb
cmp
gs
rcl
push
into
push
dec
xchg
and
mov
jae
push
repz
faddp
mov
adc
mov
cmp
cmpl
inc
xchg
push
fildl
adcb
cmpsb
inc
mov
fcompl
in
pop
push
cltd
flds
nop
or
aaa
push
or
scas
icebp
add
or
stos
cmp
ljmp
adcl
inc
mov
aaa
rcpps
leave
pushf
pushf
bound
jo
inc
mov
push
mov
mov
push
add
xor
pusha
cmp
movsl
sbb
test
mov
bound
scas
pop
mov
mull
rolb
dec
mov
jecxz
mov
arpl
lcall
sbb
xchg
mov
enter
jnp
and
out
push
fs
push
inc
xor
xchg
outsb
adc
jnp
xor
std
aad
rcr
adc
lods
jge
movsl
int
enter
sub
sbb
roll
mul
cmpsb
frstor
cs
movl
push
jge
mov
inc
popf
shlb
push
bound
pop
aas
ss
jp
movb
or
jg
pusha
adc
stc
lods
pop
cmp
push
icebp
sub
fcoml
arpl
xchg
scas
xor
stc
mov
mov
xor
cmp
mov
pop
push
mov
daa
fistl
xchg
mov
mov
into
fidivl
jecxz
sbb
xorb
push
add
add
jnp
push
scas
mov
mov
das
aad
dec
mov
push
sub
xchg
std
sahf
cmp
ss
js
jo
hlt
sbb
daa
out
push
pop
xor
repnz
bound
into
hlt
icebp
jge
loope
sub
aaa
ja
fstp
jp
xor
cmpl
pop
jl
push
xor
pop
mov
aas
dec
outsl
and
loope
push
adc
aaa
ret
mov
fcmovnu
mov
or
and
cmp
sub
xorb
je
adc
inc
rcr
xor
sbb
jmp
daa
fidivl
movsb
sbb
scas
pop
ljmp
mov
scas
mov
daa
xlat
repnz
cmp
enter
sbb
mov
in
out
loopnew
mov
imul
xchg
daa
das
mov
aad
mov
lea
scas
pop
leave
inc
sub
pop
and
mov
pusha
cmpsb
lock
push
addr16
cmp
imul
xchg
popa
ja
dec
and
sub
cld
mov
push
xor
push
cld
mov
push
push
xchg
out
xor
fidivs
stc
cmp
aaa
mov
sti
lret
loop
aas
ds
jp
jl
pop
enter
jnp
xor
stos
sbb
lret
jno
fdivs
push
push
sub
xchg
sub
jp
push
cmp
lret
out
sbb
mul
stos
jmp
jmp
lret
or
fs
inc
test
scas
je
jne
addr16
rcl
stc
jns
fsubl
adc
ds
cmp
push
inc
sbb
or
aad
mov
clc
xchg
enter
jo
test
jb
add
aad
xor
pop
inc
fsubrl
int
inc
aad
lods
das
xor
xor
inc
cmp
pop
jg
lods
enter
loope
jecxz
adc
cmpb
int
or
jno
or
dec
fwait
mov
push
pop
xor
ds
mov
jl
sbb
dec
lcall
push
push
push
popa
mov
cmpsb
fstpt
xchg
les
push
jge
das
movsl
inc
leave
jmp
cmc
cwtl
and
push
dec
inc
mov
pop
cmpsb
jne
test
iret
mov
es
adcl
pop
scas
ret
mov
push
pop
jl
lahf
out
out
xorl
mov
sbb
je
clc
xchg
inc
imul
shll
loope
lret
mov
push
icebp
popf
test
and
cmc
add
nopl
leave
mov
and
inc
mov
and
mov
inc
fbstp
ds
sbb
sub
rcrl
cmp
or
xchg
pop
cmp
icebp
movsb
pop
jb
push
push
push
out
sti
sahf
mov
jle
mov
xchg
push
mov
pop
mov
divl
and
mov
xchg
xor
cmp
pushf
sbb
out
adc
add
dec
out
mov
inc
ficompl
loop
cs
sbbb
in
mov
cltd
lret
lret
retw
popa
gs
cmp
sub
xchg
mov
sub
aaa
daa
add
lahf
mov
mov
mov
outsl
xor
xchg
pop
push
xor
jb
lahf
pop
mov
dec
pushf
cmp
fwait
ljmp
ds
mov
pop
xor
cld
cmpsb
inc
xor
pop
mov
lods
fs
sub
es
and
loopne
jo
cmp
push
push
cltd
scas
pushf
xchg
mov
rclb
adc
xor
in
sbb
popf
pusha
dec
inc
in
mov
pop
adc
mov
xchg
inc
in
dec
mov
aas
push
xor
sub
hlt
icebp
sbb
sbb
pop
aam
loope
scas
imul
mov
into
jl
test
sub
das
sub
aam
cltd
clc
mov
lahf
add
inc
aam
cmp
and
xchg
pop
mov
and
mov
lods
or
rcll
jmp
int3
mov
push
insl
int
scas
sbbl
mov
xchg
rorb
push
jae
jae
stos
subb
das
cwtl
lahf
sub
push
dec
cmp
sub
enter
out
dec
loopne
iret
mov
les
jg
and
xlat
hlt
sarb
cmpsl
pop
repnz
icebp
push
out
inc
xor
loope
xchg
or
rolb
mov
inc
int
sub
stos
dec
sti
fisubrl
and
mov
ret
je
jge
sbb
orl
mov
xchg
sub
repz
xchg
jb
rcr
push
xor
addr16
test
inc
cmp
cmp
fists
hlt
std
ds
outsl
add
sbb
xchg
jmp
add
rcl
sbb
popa
adc
fdivl
xor
mov
popf
jp
and
inc
repnz
jg
repz
rorb
inc
dec
mov
add
jg
push
repnz
notl
sub
andb
andl
add
cmp
sarl
ss
das
iret
add
pop
mov
mov
push
xchg
outsb
or
push
cltd
loop
pmullw
cmpsb
repnz
xchg
push
movsb
int3
ds
add
out
ljmp
mov
fiaddl
popl
or
xchg
or
les
scas
aaa
popf
mov
or
jmp
out
and
xchg
ljmp
mov
inc
aas
xlat
dec
push
faddl
hlt
test
and
loope
push
mov
or
cmp
stc
in
xor
notl
adc
mov
hlt
jo
out
test
inc
pushf
mov
mov
outsl
or
mov
adc
outsb
xchg
imul
dec
mov
xchg
xchg
mov
scas
and
and
mov
lahf
push
shlb
repz
pop
push
aad
imull
mov
mov
cwtl
loope
or
mov
jcxz
repnz
dec
mov
add
pop
cmpsl
adc
cld
mov
popa
push
dec
push
push
cmp
shlb
sub
cmpsb
scas
fbstp
ficompl
rcll
fcomps
adcl
and
fwait
jne
outsl
inc
out
mov
jo
inc
cwtl
mov
sbb
jp
test
mov
mov
lret
sub
fnstsw
imul
push
mov
inc
adc
int
sbb
int3
mov
jge
jle
adc
fxtract
jg
cwtl
sbb
fdivs
xchg
bswap
push
pop
addb
mov
sub
std
pushf
outsb
or
sub
xchg
push
jle
not
addr16
das
sub
stc
inc
js
jge
jg
add
mov
push
xor
cmpl
loopne
lahf
jp
xchg
push
mov
mov
cmp
in
test
dec
dec
jmp
ficompl
incb
push
inc
gs
or
push
lret
xchg
xor
daa
xchg
popa
pop
mov
stos
jmp
int3
sahf
lods
dec
cmc
mov
mov
jb
std
xor
decb
sbb
adc
pop
mov
cld
mov
rcrl
subl
jp
shr
pop
xor
mov
jne
outsb
out
sti
ret
sarl
xchg
or
and
and
dec
cmpsl
fbld
cmp
in
fs
daa
jno
add
arpl
js
subb
push
lahf
mov
stos
mov
dec
push
popf
sbb
sbbl
push
sbb
mov
xor
outsb
jo
sub
dec
mov
pop
std
subb
in
ret
or
inc
xchg
push
jecxz
add
sbb
leave
loope
mov
jns
in
add
mov
hlt
out
inc
cmp
mov
movsb
or
ds
lock
call
pushf
into
push
ret
lcall
inc
push
jns
xchg
shrl
rcll
or
jmp
mov
xchg
inc
cmp
mov
xchg
or
push
cmc
xor
xor
sub
aam
fdivl
mov
shl
xchg
out
mov
lea
xchg
ds
aad
jmp
test
es
mov
pop
mov
rorb
enter
lahf
movsl
xor
jne
jmp
and
mov
mov
push
test
stos
mov
or
add
lret
sub
std
xchg
aam
xchg
pop
in
iret
fnstenv
ss
inc
lock
push
add
sti
outsl
sti
pop
stos
mov
mov
fdivrs
jle
das
inc
xor
cmpsb
rcl
mov
mov
cmc
pop
adc
xchg
jnp
in
movsb
mov
loop
enter
jb
cmp
dec
fs
ret
in
sub
divl
stos
or
add
pusha
loope
out
inc
mov
cmp
enter
ret
pop
loopne
fwait
inc
mov
and
jg
add
js
and
pop
or
lea
add
add
mov
jno
scas
ds
movsb
loopne
shl
shll
push
pop
lret
fs
test
std
enter
dec
cmp
fwait
int3
mov
dec
sub
adc
ficompl
push
xor
sbbl
push
movsl
pop
movsl
pop
and
jo
fbld
popf
or
aaa
add
or
adc
je
enter
inc
dec
inc
cmpsb
push
enter
mov
push
jecxz
in
ljmp
cmp
enter
mov
sub
movl
adc
mov
pushf
cmpsb
dec
das
mov
xchg
xor
rcrl
sbb
repz
mov
mov
outsl
push
push
push
dec
mov
ror
dec
test
insb
jne
mov
add
jle
test
inc
loopne
and
ds
dec
mov
repnz
jle
mov
mov
out
fwait
push
xchg
cmp
out
enter
pop
nop
xor
dec
jbe
push
rcl
xchg
insb
mov
or
daa
and
or
orb
and
aam
adc
adc
dec
fucomip
in
xor
ljmp
stc
adc
xchg
push
dec
inc
push
jbe
jbe,pt
push
cmp
sbb
dec
into
cltd
mov
shl
xchg
push
xchg
popa
push
loopne
cld
xchg
dec
daa
sbb
out
rcrb
cli
in
dec
les
cmp
sbb
cmp
xchg
out
scas
popf
mul
fsts
mov
sarb
sti
jmp
int
sub
mov
xor
mov
mov
inc
test
sahf
sub
add
icebp
xchg
test
jge
dec
add
popf
ffreep
aaa
adc
hlt
movsl
mov
sub
add
mov
ret
insl
cmc
ja
movsb
imul
dec
fidivrs
sti
push
popa
das
jb
sti
stos
loopne
std
fnstcw
cmp
cmp
aam
lcall
push
fs
in
mov
dec
insl
mov
lods
xchg
mov
test
cmp
xor
cli
inc
push
orl
jo
xlat
bound
and
addb
out
sbb
jnp
or
jno
fisubrl
lds
rorl
stos
pop
pop
insl
adc
fcmovnb
movsb
jns
inc
cmc
dec
nop
ss
inc
scas
sub
push
dec
test
xchg
shlb
jnp
jp
jp
mov
push
mov
aaa
mov
stos
loope
lcall
mov
outsl
and
faddp
adc
xchg
fiadds
adc
push
leave
imul
cli
inc
adc
jnp
lods
addl
add
mov
push
mov
mov
sbb
negl
orl
cmp
and
mov
pop
test
dec
add
mov
add
stos
dec
hlt
test
jnp
pop
jns
cli
hlt
ss
in
sbb
sbb
push
mov
jg
and
push
cli
or
xor
cmp
xlat
imul
and
orb
mov
pop
fistpl
add
test
or
mov
lcall
hlt
jo,pt
inc
or
repnz
push
andl
out
inc
push
mov
jp
xorl
mov
push
mov
fs
dec
or
cwtl
or
xchg
test
xor
dec
pop
jmp
pop
pop
mov
xchg
daa
cltd
mov
or
es
in
sar
jmp
mov
xor
out
das
jmp
pop
cmp
fdivrl
dec
fists
and
into
cmpsl
fisubs
mull
mov
xchg
std
push
push
in
jp
sub
out
arpl
pop
bound
mov
ficoms
dec
jno
push
sbb
imul
push
loopne
mov
mov
inc
mov
xchg
int3
aam
sub
sub
sub
out
or
cmpl
or
hlt
test
pusha
stos
push
xor
out
sub
imul
cmp
jecxz
jg
mov
dec
lods
xorl
rcll
or
xor
lds
push
cmp
daa
or
mov
inc
in
fistps
add
push
inc
jo
int
out
test
adc
jge
mov
pop
enter
clc
sub
xorb
mov
lea
mov
push
enter
or
pop
and
jb
and
pop
hlt
xchg
or
xor
test
bound
dec
push
adc
cmp
dec
mov
std
jns
lahf
mov
imul
sub
ljmp
lcall
jg
cmp
jne
or
pop
cld
jp
add
pop
scas
aad
push
sub
xor
push
mov
enter
andb
dec
rcl
je
ret
pop
push
rcr
js
lea
push
pop
inc
adc
cmp
sub
mov
das
loope
stos
dec
lret
aam
mov
mov
out
es
add
jno
or
mov
xchg
lods
pusha
movsb
xchg
repnz
es
hlt
out
rorl
sbb
in
add
sub
or
mov
dec
ret
lods
sbb
hlt
outsl
loope
mov
sarb
jge
fsubrs
add
inc
lods
pop
cmp
mov
dec
ror
sub
jns
add
mov
mov
in
xor
push
cmp
mov
xor
sub
add
and
adc
jmp
movsb
xlat
mov
jge
and
and
loope
out
movsb
xlat
inc
and
push
mov
addr16
andl
pop
out
into
or
aad
and
sub
sub
add
add
fiaddl
adc
sbb
adc
pop
cmp
pop
pop
cmc
push
sub
jle
inc
mov
xor
mov
je
shrb
stc
aam
xor
int
pop
icebp
pmaxsw
test
pcmpgtd
and
lahf
xchg
out
insb
lea
mov
sbb
dec
mov
jnp
xor
jae
call
pop
or
jno
sahf
rclb
xor
test
in
test
cmp
add
pop
andl
sbb
cs
ds
test
nop
inc
mov
add
sub
test
xor
je
push
sbb
movsl
adc
sbb
loopne
testb
loope
push
adc
push
lea
pop
neg
xchg
and
jo
ret
mov
lcall
xchg
mov
cmp
push
lcall
sub
pop
int3
cmc
xchg
adc
sbb
mov
add
repnz
jmp
sbb
sahf
push
cld
stc
ljmp
jg
stos
adc
loop
pop
sarl
jge
les
push
fwait
adc
loopne
and
in
sbb
outsb
aad
ffreep
or
scas
rolb
fsub
and
or
mov
mov
pop
jmp
cltd
adc
sahf
mov
cmp
lret
jle
dec
call
cmp
rcrl
adc
pop
inc
pusha
es
push
sahf
or
test
popf
imul
jl
addr16
dec
xchg
and
loop
mov
adc
or
mov
pop
test
out
jbe
inc
inc
fisubl
in
lods
inc
and
mov
sbb
scas
inc
sbb
sub
mov
sbb
leave
outsb
and
and
adc
dec
and
scas
xchg
notb
jmp
push
add
flds
push
lret
lret
std
sbb
dec
icebp
icebp
fsubs
mov
in
clc
push
jno
mov
xlat
fs
mov
cmc
or
pop
sbb
stos
sahf
jp
xor
lahf
cmp
xchg
sub
sub
jp
inc
lcall
push
int3
scas
pusha
lcall
daa
push
pop
mov
add
outsb
mov
add
pushf
inc
icebp
mov
gs
mov
fsubrs
dec
cmpsb
add
cmc
or
fwait
inc
sub
mov
add
sbb
xor
mov
pop
scas
adc
mov
ja
insl
inc
loopne
xchg
rcrb
js
dec
sub
mov
cmpl
ljmp
jle
lret
hlt
xchg
mov
sub
jp
mov
addr16
loopne
out
scas
cmpsl
mov
jmp
push
mov
cwtl
fcoms
and
pop
aaa
sub
inc
mov
fs
fisubrs
sbb
daa
push
aam
dec
sub
jb
push
mov
lock
cmpsl
xchg
cli
mov
dec
lds
loopne
mov
push
insb
push
lods
and
sbb
xchg
push
sbb
cli
lods
mov
mov
xacquire
ss
mov
les
jno
je
dec
rclb
lea
mov
add
sub
add
ret
pop
aaa
xchg
lea
lcall
mov
cmp
cli
std
xchg
sub
dec
xor
mov
je
push
adc
ret
ret
mov
pop
test
dec
mov
mov
pop
push
pop
lret
sahf
mov
jae
push
jno
jb
xor
pop
rorl
aam
lds
dec
xor
add
adc
ds
pop
leave
arpl
push
pop
sub
cmp
add
jae
out
notl
lret
cwtl
sbb
sarl
sub
fdivs
in
movsb
fisttpll
mov
test
jle
add
push
xor
cmp
jns
andb
inc
jno
pop
sbb
xchg
mov
imul
push
mov
jle
cwtl
bound
popa
or
stos
or
push
mov
test
mov
out
mull
dec
loop
push
push
adc
bound
ret
jmp
call
pop
cmp
xor
std
or
sbb
cmp
xor
scas
js
fistpl
push
pop
ljmp
in
xor
dec
adc
pop
adc
jo
scas
xor
arpl
xchg
xlat
ret
adc
outsb
sub
xchg
push
add
push
cwtl
in
ss
testb
dec
stc
push
enter
aad
frstor
cmpsl
cmp
xchg
xchg
std
xchg
insl
lea
out
cwtl
adc
test
stc
fs
ljmp
sbb
cmp
mov
adc
jmp
aas
sub
test
mov
or
pop
movsl
pop
test
ret
loope
cmpsl
clc
xor
scas
inc
mov
or
rclb
out
mov
jmp
repnz
ret
pop
sbb
cmp
jl
sbb
cmp
jns
inc
testb
mov
aaa
pop
push
mov
pop
xchg
iret
cs
sub
cs
mov
mov
mov
sbb
stc
xchg
int
push
pop
shlb
ja
jns
lcall
push
andl
or
mov
pushf
testb
adc
clc
jo
mov
test
mov
mov
jnp
aas
push
mov
fwait
jg
adc
je
rcll
mov
push
dec
dec
sbb
std
call
add
xchg
into
xlat
mov
into
mov
fmul
jecxz
lahf
xchg
lea
xor
data16
xchg
and
jne
jecxz
sbb
notb
mov
sbb
loopne
fimuls
adc
xor
lahf
cmp
push
dec
sarb
jg
add
and
inc
and
or
sub
fucomi
aaa
aas
jp
sahf
jbe
xor
out
je
sub
fdivrs
repz
cmp
in
in
shll
or
into
fdivrl
lret
mov
out
loope
fiaddl
mov
sti
hlt
add
xor
mov
inc
push
push
jmp
loop
imul
stos
mov
and
insl
push
mov
dec
push
or
pop
dec
lea
sub
mov
dec
shlb
lcall
fwait
inc
scas
xor
inc
sub
rol
shll
adc
mov
ret
xchg
sub
xchg
test
test
xlat
repz
dec
mov
lahf
xlat
sub
mov
lods
jo
xorb
loopne
fidivrs
dec
jmp
pop
and
push
pop
cmpsb
cmpsl
mov
jns
cmp
fwait
dec
pop
adc
xchg
xor
mov
sub
adc
inc
rcrb
ljmp
xor
add
stos
xchg
pop
push
mov
inc
testb
rol
int3
xlat
stos
or
js
int3
sbb
insb
test
pop
mov
adc
shlb
mov
cmc
popf
jno
xchg
pop
sub
inc
std
or
lcall
sub
xorb
mov
add
stos
mov
es
jle
add
popa
fwait
shrb
xor
fs
adc
or
aas
das
insl
out
sub
cmp
in
push
aam
scas
aas
fldenv
xor
cs
mov
notb
cmp
sbb
jmp
dec
pop
repz
and
xchg
xchg
dec
cmpsb
mov
mov
inc
inc
roll
icebp
inc
adc
stc
jno
out
jge
movsl
ss
xchg
outsl
aas
stos
shrl
test
push
and
push
shll
xchg
imul
lea
cmp
push
outsl
movb
fsubs
int
mov
mov
int3
sarb
sbb
lock
push
dec
adc
les
das
js
loope
dec
popa
xor
dec
in
pop
add
jmp
inc
add
cmp
mov
jl
sub
or
mov
daa
mov
and
lea
sarb
std
dec
cmp
adc
pop
sbb
fbld
mov
mov
fidivl
jge
xchg
mov
pop
icebp
into
dec
imul
push
mov
or
insb
hlt
and
inc
shl
or
lods
xor
repz
rcll
je
jl
xchg
cmp
ss
mov
mov
cwtl
pushf
ja
rcrl
and
lahf
sub
push
cmpsl
add
dec
mov
and
sarl
jno
mov
xchg
cld
dec
mov
jae
xor
cmpsb
clc
aaa
nop
loope
dec
inc
adc
pop
sub
ficompl
imul
stc
gs
and
xchg
add
andb
mov
xor
mov
call
frstor
imul
addr16
nop
dec
xor
divb
mov
out
orb
les
mov
lcall
bswap
lock
lds
int
les
push
xchg
clc
xchg
cmp
jo
or
jmp
les
jl
fldt
ds
addl
scas
mov
ret
out
pop
push
jle
dec
dec
sub
scas
xor
add
ja
pop
inc
in
mov
mov
mov
jecxz
sub
cmpsb
push
or
shlb
stos
sub
add
mov
pop
mov
and
mov
add
or
imul
test
fwait
mull
dec
ja
pop
das
clc
fldt
sub
lret
mov
fsubs
cmp
imul
std
or
je
aad
je
xchg
push
sbb
test
mov
fwait
outsl
into
sbb
jge
add
fisttpl
push
sbb
adc
std
pop
leave
ret
lret
jbe
inc
sahf
adc
pop
push
inc
sahf
push
in
jle
xor
mov
fistpll
mov
mov
stc
adcl
dec
pop
and
push
shr
sbb
dec
fiadds
enter
fnstsw
aam
jbe
test
cltd
mov
mov
int3
clc
fldcw
mov
sbb
addl
pop
mov
jmp
and
lahf
or
mov
xchg
push
jno
gs
mov
mov
pop
addl
xor
jnp
rcll
divb
inc
dec
add
call
jb
popw
sar
shr
shll
xchg
xor
push
sub
cmp
test
addr16
fistpl
jge
fsubrp
adc
jb
pop
inc
xchg
ret
test
int3
jno
mov
and
pop
jmp
dec
jns
stos
pushf
in
cmc
les
sbb
sub
fcom
cli
jmp
xchg
xchg
mov
xlat
xchg
jg
cs
cmpsl
movsl
sbb
out
cltd
cmc
scas
dec
sbb
movsb
je
repnz
xorb
in
scas
and
pop
fsubrl
fidivl
sbbb
test
push
fistps
cmpsb
xor
inc
and
mov
shlb
cmpsl
push
inc
lods
ffreep
jle
inc
add
lcall
leave
cmpsb
das
add
push
sbb
shlb
inc
clc
in
into
mov
dec
sbb
pop
pop
aaa
test
out
repz
addb
cmpsl
pop
clc
mov
xchg
xchg
pop
jle
xchg
in
inc
stc
je
sbb
loope
je
xchg
sub
lret
cli
orb
mov
mov
cmp
sahf
xor
enter
cmp
pop
pop
mov
aas
aaa
mov
pop
cltd
data16
mov
mov
and
arpl
xchg
imul
test
unpcklps
inc
jbe
mov
arpl
push
dec
loope
inc
out
cld
push
call
repnz
cwtl
stos
xor
fistl
les
outsb
and
xor
adc
push
insl
pop
adc
in
cmc
and
mov
push
mov
pop
adc
daa
pop
cs
sub
pushf
xor
mov
push
cli
pop
dec
mov
loop
cmpsb
and
lods
add
jo
or
cmpsl
xchg
aad
mov
into
out
dec
out
out
rol
fcomp
jae
call
stos
rclb
pop
mov
fs
push
out
out
xchg
andb
cmp
jbe
hlt
orl
dec
gs
pop
repnz
sbb
in
jp
aam
or
scas
xchg
ss
jb
inc
repnz
mov
clc
push
jmp
push
in
dec
pop
mov
fiaddl
cmp
fnstsw
cmp
std
movsl
rcl
dec
sub
repz
test
into
xor
add
lods
jmp
or
ffree
dec
xchg
mov
adc
daa
out
in
add
mov
int
nop
pop
rcr
in
pusha
gs
xchg
or
dec
lret
mov
push
js
icebp
pop
lods
jb
lahf
jae
and
adc
aaa
jmp
mov
int3
xchg
push
mov
pop
jno
push
push
rorb
adc
test
fbstp
push
jnp
jecxz
lods
inc
jge
fidivrs
fsubrs
testl
jbe
test
fs
fcompl
les
push
ret
push
mov
mov
dec
mov
push
xchg
xchg
mov
jle
inc
push
add
xor
push
xchg
push
lea
xor
testb
mov
jg
cmc
inc
sbb
add
mov
xchg
xorb
mov
shrb
lret
or
popf
fldt
outsl
mov
pop
inc
xchg
sbb
push
loopne
fsts
les
xchg
sbbl
ret
mov
inc
insb
inc
icebp
out
add
jae
or
fwait
xchg
clc
loopne
lcall
adc
dec
imul
shlb
xchg
rorl
jns
xchg
or
mov
fiaddl
sub
or
stos
push
dec
es
xorl
adcb
xchg
add
clc
xchg
pop
sti
insl
sub
lock
lea
mov
add
shlw
cs
mov
xchg
pop
inc
outsl
adc
cmpb
insl
pushf
call
mov
int3
xor
movsb
jmp
lock
mov
jb
lods
and
add
xchg
push
and
xchg
aaa
mov
xchg
outsl
movl
xchg
inc
mov
and
sub
inc
sbb
or
push
mov
test
in
dec
mov
lods
mov
mov
sti
mov
imul
xor
repz
nop
xchg
jo
movsb
int
into
lods
repz
mov
in
js
pop
or
nop
push
push
std
fs
push
mov
jle
mov
sub
lahf
inc
cmpsb
subl
mov
iret
mov
mov
cmp
jae
mov
add
and
push
mov
cmp
movsb
push
ret
arpl
leave
decb
xor
sbb
xorb
aad
jne
sbb
das
push
sbb
insl
sarl
sysenter
sub
shl
loop
sbb
sbb
fsubr
andl
mov
dec
and
jne
fiadds
inc
mov
iret
push
scas
xor
inc
das
imul
push
adc
ret
jle
cltd
mov
lea
arpl
and
std
cltd
es
add
dec
pop
or
pop
jae
cmc
pop
xchg
nop
clc
and
pop
sti
aam
into
sbb
sub
xlat
xor
mov
mov
movsl
iret
fistpll
ret
int3
jb
lahf
jmp
stos
xlat
jmp
cmp
xchg
mov
mov
nop
sarl
cmp
arpl
or
call
sbb
loope
mov
cs
icebp
xchg
dec
inc
pusha
sahf
adc
movsl
ja
out
insb
sub
out
jge
jl
pop
shl
out
xchg
jecxz
pop
xchg
fisubrs
test
aam
jmp
add
fstpl
mov
int3
inc
push
les
push
aad
data16
sahf
or
cltd
stos
jge
loope
loopne
xchg
xor
int3
ja
jp
je,pn
adc
mov
inc
rcrb
xor
dec
jp
jmp
int3
insb
outsl
dec
and
test
jle
mov
out
into
insb
mov
sbb
inc
in
dec
sbb
loopne
xor
aaa
mov
push
insl
dec
and
lret
loop
filds
push
jg
addr16
into
icebp
fwait
cmp
mov
loopne
arpl
mov
cwtl
sbb
jnp
xchg
cmpb
dec
cmp
xchg
xchg
pop
adc
sbb
inc
push
or
or
negb
adc
testl
xor
xchg
mov
push
in
xchg
push
inc
and
mov
inc
lret
mov
loope
lods
addl
jno
jp
or
fstpt
repz
stc
pop
dec
push
arpl
psrld
imul
inc
adc
pop
pop
adc
lahf
or
adc
jnp
jnp
loope
mov
mov
loope
packssdw
in
inc
repnz
daa
lods
sbb
cmp
push
dec
and
rclb
lcall
gs
test
and
sub
inc
mov
push
int
out
mov
cmp
das
movsl
inc
pop
sahf
push
stos
cmp
testb
pusha
subb
mov
xchg
adcl
pop
fidivrl
pop
jle
fmuls
outsb
xor
sub
and
les
mov
je
dec
push
clc
push
cmpsl
es
push
lcall
xchg
pusha
test
jp
xor
mov
jns
mov
xor
in
adc
cmpsl
jg
xor
jmp
add
mov
hlt
cmp
mov
cmpsb
adc
test
test
sbb
mov
or
int3
lahf
ja
dec
mov
push
rcl
std
jge
es
add
or
stos
jbe
lahf
stos
cmpb
dec
xor
dec
push
sub
ds
xlat
pop
out
sub
imul
out
mov
xchg
clc
int
int3
addr16
xor
or
cltd
xor
add
mov
mov
shlb
lret
sub
test
cmp
jnp
or
fcoms
in
push
imul
or
mov
mov
rcll
push
adcl
dec
push
jne
movsb
test
cmp
mov
in
inc
cmp
fidivrs
mov
xlat
xor
outsl
out
bound
or
push
in
dec
xchg
cmp
pop
fisttpll
mov
or
sbb
cs
adc
lock
xchg
mov
and
decl
das
dec
lods
and
push
adc
xchg
out
insl
in
ret
lret
jns
addr16
sbb
inc
inc
fistpl
jae
dec
add
dec
xor
sub
cld
mov
xlat
fdivrp
xor
clc
adc
shll
outsl
cmp
arpl
std
insb
jmp
bound
fucom
mov
or
les
nop
jns
mov
lock
jmp
push
mov
jmp
push
xchg
mov
lcall
enter
jne
and
popa
and
addr16
pop
lods
push
sub
das
outsl
sbb
xchg
xchg
sbb
jnp
push
or
enter
es
xor
sbb
hlt
popf
movsb
lahf
fdivrs
incl
mov
push
adc
test
dec
out
xorps
jnp
and
cmc
mov
dec
shrl
scas
sub
mov
hlt
adc
fisttps
imul
sti
pop
out
xor
addl
inc
cmc
les
decb
popf
outsl
sti
add
pop
shrb
icebp
sub
addr16
sahf
std
aaa
xor
lds
push
mov
inc
cmp
rol
mov
cmc
cmp
jl
or
adc
xchg
rol
aad
xor
pcmpgtw
test
ret
aad
mov
mov
xlat
jp
mov
push
push
and
xor
or
sub
add
xchg
je
int
jecxz
xchg
mov
cmc
rcr
dec
sub
in
push
sub
lock
mov
mov
push
sub
sahf
push
outsl
and
scas
cli
cli
jb
push
lahf
popa
fisubrs
daa
cmc
add
data16
sbb
inc
xor
push
sahf
xchg
andb
pushf
out
dec
mov
mov
shlb
or
dec
data16
sbb
rol
clc
in
sarb
mov
pop
cmp
sub
add
mov
mov
cltd
push
test
pusha
push
aas
les
movsl
cltd
mov
or
sub
pop
call
add
inc
push
fimull
inc
addr16
adc
sarb
lret
das
out
cltd
jnp
inc
xor
out
cmp
lods
hlt
addr16
push
cmp
pop
xor
mull
js
adc
or
or
mov
daa
sbb
ret
dec
fldl
add
scas
jns
jbe
jnp
cmp
addr16
dec
pop
dec
xlat
cmpsl
pop
fcomip
mov
cmp
int
add
jmp
call
rolb
pop
adc
scas
pop
scas
test
fldl
and
testb
and
push
popf
sti
out
add
dec
imul
lods
mov
fmull
push
push
movsl
daa
push
pop
loope
call
std
int
test
rorl
clc
leave
shlb
mov
popa
es
addr16
loop
pushf
mov
fstl
mov
test
xchg
aaa
xlat
jp
cmp
push
mov
cwtl
pushf
dec
mov
leave
jge
call
int
icebp
pop
sub
nop
imul
aam
test
mov
pop
or
fstpt
jge
xchg
popa
and
movsl
pop
jmp
data16
outsb
jecxz
cmc
and
jne
lret
mov
mov
lock
jle
rol
imul
inc
jmp
iret
xchg
addb
jns
orl
outsl
lods
add
sbb
pop
pop
sbb
pop
ja
insl
mov
movb
jecxz
push
repnz
loopne
cld
aam
adc
add
pop
cmp
jmp
hlt
in
or
inc
push
xchg
and
cmpsb
ljmp
xchg
and
lds
pop
jecxz
in
lds
arpl
shll
pusha
jmp
inc
mov
adc
icebp
pusha
lds
cmpsb
dec
movsb
adc
sbb
dec
xor
or
pusha
aaa
sub
inc
out
dec
adc
or
cmp
xlat
aam
sbb
mov
fbstp
inc
and
sbb
and
jb
out
xor
inc
mov
clc
adc
and
mov
insl
lahf
pop
add
mov
test
test
push
xchg
mov
ja
lret
push
out
inc
push
or
pop
jnp
rclb
test
jge
mov
jmp
push
lahf
imul
jno
sahf
lods
cli
aaa
mov
mov
or
sahf
cmp
add
fmuls
pop
cmpsl
push
mov
aad
cmp
sub
mov
repz
push
mov
xchg
push
addb
sbb
push
divl
inc
loop
inc
cmpsb
out
cmc
out
js
shlb
push
pop
xchg
sbb
jno
pop
imul
sahf
cmp
cwtl
mov
shrl
xorb
std
dec
aas
jmp
and
lods
fistpll
jb
jp
hlt
fnstsw
lds
cld
inc
jge,pn
xorb
sbb
jle
cmpsl
pop
jbe
arpl
push
mov
out
xor
imul
addr16
hlt
loope
pop
mov
mov
mov
lret
or
jp
fcomi
sahf
rorb
into
cmpsl
and
inc
sub
push
cmp
mov
outsb
imul
stc
in
fiadds
in
shrb
rcrb
fdivrs
push
fmul
test
rclb
mov
cwtl
sub
jbe
icebp
lret
dec
dec
inc
int3
sub
push
scas
fcmovu
xadd
sbb
rolb
loop
inc
nop
leave
fistpll
icebp
stos
es
ss
mov
popf
cmp
std
sbb
mov
jecxz
in
lock
adc
mov
mov
test
idivl
xchg
mov
subl
sbb
div
mov
jl
inc
mov
mov
xor
addl
pop
jl
xchg
test
mov
out
jge
inc
in
adc
xchg
inc
mov
daa
adc
and
repnz
xchg
fs
lcall
dec
pop
cltd
addr16
cmp
dec
leave
fdivr
push
icebp
or
lahf
add
pop
pmulhuw
fadds
push
or
ja
dec
rolb
imul
sub
ja
enter
cmpsb
ja
cmp
xchg
cmp
orl
push
xchg
inc
roll
movl
jne
iret
and
mov
push
mov
cld
mov
sub
push
mov
loopne
leave
sub
cmp
dec
shrb
sub
jo
jnp
mov
ret
jne
in
test
das
cwtl
jl
js
cmp
ss
rolb
cwtl
outsb
aaa
in
mov
or
xor
outsb
setp
cli
sub
cmpsl
ljmp
mov
cli
cmpsb
out
call
inc
mov
fiadds
daa
out
xchg
jmp
jno
mov
roll
fwait
aad
ss
jae
mov
xchg
movsl
movsl
mov
ds
mov
push
pop
sbb
aaa
cmpsb
jbe
ficoml
mov
jecxz
dec
jecxz
cld
stc
inc
xchg
push
cmpl
hlt
cmpl
sahf
xor
sbb
negl
sahf
arpl
repz
jmp
mov
xor
cmp
or
xchg
sbb
jge
out
jle
dec
cmc
pop
mov
and
adc
sbb
push
sub
sar
mov
sub
sub
test
addr16
add
xchg
push
cld
rol
int
pop
and
or
loope
jg
aam
xchg
dec
or
push
push
negb
push
icebp
add
test
stc
cmp
jle
pop
lea
ds
jecxz
mov
jno
jno
mov
dec
xchg
fwait
popa
add
imul
aad
cld
shrb
dec
push
lock
sub
push
test
dec
dec
add
ljmp
and
test
inc
add
inc
fsubrs
sbb
inc
sahf
xchg
clc
repz
stc
or
dec
mov
mov
inc
push
mov
sti
xchg
jne
add
sub
and
insb
hlt
sbb
adc
pop
and
mov
add
leave
mov
mov
hlt
shl
icebp
fwait
ret
pop
jo
test
pushf
test
pop
or
stos
xchg
in
push
scas
xor
xorb
loopne
inc
push
mov
movsl
sub
arpl
inc
shlb
cld
xchg
in
iret
xchg
dec
arpl
mov
adc
jae
inc
movsb
mov
out
mov
imul
cmp
dec
pop
jmp
aam
jae
adc
dec
jb
adc
lcall
fmull
sbb
adcl
sub
int
cs
lea
cmc
repz
mov
cmp
lahf
jbe
push
cld
pushf
scas
into
adc
adc
ret
push
push
push
xlat
jns
mov
jns
mov
ja
lret
hlt
mov
out
sub
shrb
mov
mov
call
mov
and
xor
sub
xchg
das
fs
jp
mov
push
mov
cs
xor
jge
push
decl
insl
sub
inc
in
mov
push
xchg
shl
cwtl
aas
sahf
sub
pusha
lea
pop
push
clc
xor
cmc
dec
sbb
jne
dec
pop
cs
xchg
cmpsl
inc
dec
add
lds
ljmp
xchg
mov
fcoms
dec
cwtl
imul
icebp
movsb
jmp
repnz
icebp
mov
push
ds
lcall
inc
push
inc
sahf
sbb
rorl
mov
fs
das
sbb
lock
sub
les
adcl
mov
imul
fnstsw
jg
incl
lret
clc
in
inc
pop
adc
fs
jge
test
sti
aad
cmpsb
stc
push
repnz
lea
adc
pop
adc
pop
pop
movsl
pop
add
fisubl
leave
inc
icebp
or
cmp
mov
xchg
out
cmpsl
fs
jbe
push
xchg
push
repz
cmp
lahf
push
popa
and
dec
out
test
jno
lahf
into
inc
pushf
test
fldcw
dec
push
push
or
xlat
add
into
and
fnsave
push
xor
mov
scas
in
outsl
cld
jle
push
and
cmp
shlb
or
jae
adcl
adc
add
jo
mov
out
scas
adc
rcl
adc
push
fnstenv
iret
pop
inc
push
add
fsts
in
dec
xchg
insb
push
jg
fsub
xchg
mov
cwtl
push
add
xchg
pop
xlat
dec
rcrb
mov
xchg
push
push
xlat
sub
jae
jmp
nop
out
mov
xor
xchg
orb
xor
add
cli
int3
cli
fdivs
push
mov
das
sahf
test
cmp
lret
xor
aad
out
dec
pop
ret
nop
hlt
push
dec
mov
ror
lock
int
jo
mov
add
stos
add
pop
mov
jbe
popa
popa
inc
push
pop
sbb
cmpsb
sub
add
pop
iret
stc
lock
push
inc
xor
inc
mov
pop
jno
pop
addr16
jp
mov
dec
push
in
pop
in
inc
and
insb
xchg
pop
fidivrs
mov
shll
fidivl
inc
imul
popf
pop
cmpsb
sub
dec
out
aas
inc
adc
mov
call
cmp
repnz
jne
imul
push
dec
icebp
inc
insb
and
mov
inc
cld
pop
mov
sahf
push
loopne
cltd
mov
fsubr
cs
cmp
movsl
outsl
rcrl
fisubrl
push
movsl
mov
add
std
lcall
fimull
mov
lcall
ljmp
out
hlt
insl
sar
insb
cli
push
jg
xchg
enter
fnstenv
xchg
andl
or
mov
movsb
mov
push
add
mov
cmp
jbe
xchg
sub
xchg
mov
dec
mov
adc
in
faddp
sar
push
add
fcmovb
inc
loope
loope
int3
push
rorl
and
mov
xchg
scas
jp
xchg
aad
adc
mov
cmp
xchg
push
xchg
or
icebp
jbe
xchg
stos
xchg
repnz
stos
inc
lods
jns
loope
xorb
adc
fisttpll
xchg
adc
movsl
shlb
outsl
pop
mov
mov
ret
shlb
mov
xchg
jle
xchg
ja
mov
xchg
ret
inc
inc
test
mov
add
ljmp
push
out
test
push
fwait
leave
rol
movsl
daa
inc
jno
mov
test
clc
ja
test
push
shll
popa
jge
mov
or
int3
sti
adcl
aad
jno
lods
movsl
xchg
and
adc
xchg
pop
inc
push
daa
inc
mov
mov
push
xchg
jno
push
ds
fmul
mov
nop
ja
xor
and
pop
popf
push
sar
mov
nop
xlat
mov
or
mov
lcall
pop
inc
mov
mov
xchg
push
push
xor
rcll
inc
sar
mov
outsl
notl
popf
mov
daa
pop
in
jno
push
cmp
hlt
or
lahf
roll
pop
icebp
add
mov
repz
sarl
std
inc
mov
fstps
fs
fidivl
xor
dec
scas
sahf
fistl
lea
dec
mov
mov
adc
xor
popf
dec
insb
or
mov
lret
add
leave
xchg
ret
int3
aad
arpl
andl
loop
xchg
mov
dec
mov
incb
test
inc
push
add
call
fsubrl
pushf
out
pop
push
xchg
mov
cmp
pop
cld
repnz
je
lea
sbb
sar
fs
xor
aad
addr16
jae
mov
fdivr
push
push
sub
xor
inc
pop
sub
sbb
or
adc
ss
pop
mov
jle
jle
insb
gs
testb
sub
mov
xchg
mov
add
sbb
push
mov
out
daa
in
daa
popf
adc
fs
mov
inc
test
inc
out
es
loop
push
push
mov
mov
int
mov
aaa
dec
mov
ja
xchg
xlat
jmp
cmpl
xor
imulb
adc
pop
cmp
lds
cmp
mov
out
mov
or
push
hlt
cmp
cmp
repnz
fisubl
testb
xchg
test
mov
jb
xchg
mov
or
ja
xchg
xor
add
sub
mov
ss
inc
mov
daa
incb
js
popf
xchg
ret
test
sub
mov
cmc
adc
mov
adc
adc
and
pop
subb
lret
pop
jle
das
es
sub
pop
jno
lock
adc
dec
addr16
push
fldt
adcl
out
sub
test
and
xlat
mov
or
loope
xor
imul
stc
mov
sub
mov
movsb
fisttpll
or
faddp
lahf
adc
sbb
out
xchg
xchg
nop
dec
push
add
cmp
adcl
in
incb
dec
loopne
repz
addr16
mov
insb
hlt
fldl2e
in
cmpsl
into
hlt
jle
dec
jno,pn
inc
popa
call
jae
jo
cwtl
cmc
ds
fstl
pop
sub
pop
repnz
xchg
sbb
fucomp
negl
lcall
shr
mov
mov
hlt
xor
cmpsb
mov
out
cmp
in
js
jp
pop
js
pop
mov
push
cld
pop
jns
dec
or
arpl
lods
fwait
and
cli
sbb
std
push
sarl
popa
mov
dec
mov
inc
mov
dec
daa
inc
dec
insb
and
inc
and
loop,pn
xor
jno
lods
xor
test
fwait
inc
aam
jecxz
popa
xchg
test
add
mov
lahf
es
pop
adc
mov
into
mov
jbe
sbb
ja
test
pop
jb
mov
sub
test
push
cs
inc
dec
mov
daa
int
cmp
outsl
push
mov
mov
or
aas
inc
jns
call
mov
jnp
xor
sub
adc
daa
cmpsl
cltd
insb
call
sbb
hlt
loop
mov
lret
sub
mov
mov
outsb
dec
sbb
hlt
outsl
pop
mov
loope
loopne
movb
lcall
in
mov
jle
jo
pop
jnp
push
imul
or
sti
outsl
adc
idivb
mov
in
insb
xor
xchg
xor
xor
jns
dec
xor
mov
push
xor
imul
test
cwtl
push
and
dec
int
iret
stc
cmpb
dec
daa
and
das
popl
cmp
cmp
loopne
sub
jle
syscall
insl
adc
mov
outsb
cmp
inc
push
add
cmpsb
stos
aad
sahf
fstpl
xchg
dec
icebp
push
jmp
mov
dec
xchg
out
or
enter
in
dec
dec
adc
xchg
mov
das
mov
xor
lock
dec
dec
mov
cwtl
fcmovb
mov
lods
lea
and
lret
mov
push
pop
xchg
sub
mov
hlt
sub
mov
aad
cmc
inc
or
int3
leave
sub
mov
adc
rcr
or
rcrb
adc
sbb
pop
loopne
mov
jno
scas
nop
lock
mov
push
insb
dec
push
cli
scas
pop
ds
lret
sti
push
lret
or
push
icebp
in
mov
or
pop
out
mov
sbb
and
xchg
in
cmp
aad
cli
gs
scas
ja
or
outsb
fdivrl
or
xor
push
mov
icebp
xor
fldl
sbb
dec
and
push
add
loop
add
out
push
gs
jmp
mov
push
jo
in
dec
repz
pop
inc
inc
sarb
outsb
and
addr16
sbb
push
jns
sbb
lret
sbb
arpl
ss
insb
or
pushf
xchg
rolb
sub
xchg
jp
lret
stc
xchg
out
int
fadds
js
outsb
lahf
ret
jnp
nop
scas
mov
cmp
fnsave
adcl
and
sbb
fwait
clc
shl
jb
cmpsl
push
cmp
mov
push
cmp
inc
loope
mov
sub
cld
mov
jmp
dec
mov
nop
xchg
push
rep
add
add
and
mov
mov
movsl
push
divb
sbb
cli
lea
adc
jle
cmpsb
stc
lods
inc
lods
jecxz
push
pop
pop
fldt
or
xchg
mov
cmp
and
jbe
cltd
stos
mov
movsb
pop
rorl
je
sbb
cmp
pop
ds
imul
nop
sub
mov
push
cmp
test
fwait
adc
fisttpll
rorb
xchg
add
scas
rcrb
or
lods
fldcw
or
mov
jmp
arpl
int3
jl
into
push
mov
bound
lret
and
jle
mov
xlat
imul
clc
push
jle
ret
cmp
fmuls
fcompl
stc
cmc
leave
and
pop
imul
lret
ret
mov
jo
cmp
movsb
mov
imul
in
inc
imul
popa
pop
je
ficoms
mov
jecxz
or
inc
lret
xor
xor
lea
sbb
movsl
pop
adc
cmc
cmp
imul
adc
jno
jno
pushf
pop
popl
aas
aam
adc
inc
mov
xchg
pop
aad
aam
cmp
xchg
std
lds
testl
cwtl
shlb
push
addr16
or
push
loopne
scas
orb
lods
daa
xor
ret
arpl
stos
bnd
dec
jp
xchg
jno
dec
mov
add
mov
lods
jo
push
add
and
fisttpll
loop
sbb
imul
mov
cmc
inc
mov
inc
leave
lea
jp
std
mov
add
xchg
mov
pop
inc
hlt
pop
xchg
fisubrs
mov
aas
mov
std
pop
and
push
push
imul
dec
ficoms
dec
fwait
jnp
and
loopne
aad
push
out
bound
subl
adc
arpl
pop
xchg
in
lds
or
sub
sub
testl
mov
mov
mov
pop
mov
inc
gs
add
stos
mov
jle
and
xlat
fisubs
loop
lret
xchg
stos
jecxz
cmp
loop
jge
loopne
sbb
mov
shlb
inc
cld
or
mov
xchg
test
int
sbb
mov
addr16
xchg
repz
and
xor
fimull
test
fstps
sub
cmp
repnz
ret
or
push
jo
xchg
ret
or
testl
das
mov
js
cmp
int
rcl
fcmovu
sbbb
stos
xchg
andl
xchg
andb
rcrb
jle
std
sbb
and
in
sub
dec
fst
adc
sbb
xlat
rorb
mov
and
add
shll
divl
add
xchg
les
xchg
andl
mov
sbb
out
jle
push
inc
imul
loope
jo
fwait
lea
jp
cwtl
out
cmp
or
cwtl
push
cld
stos
or
dec
xor
enter
fmull
stc
scas
iret
sbb
cld
adc
sub
or
enter
clc
jns
sbb
xchg
push
mull
adc
test
mov
fcmovbe
rorb
aaa
inc
push
cmp
mov
pop
or
das
call
pop
dec
lods
idivb
inc
sbb
adc
mov
pop
cmp
aaa
or
mov
lahf
insl
rorl
mov
imul
add
jae
or
mov
imul
cwtl
jno
das
sub
rclb
pop
cmp
pop
push
imul
loop
mov
cmc
fistps
lds
pop
mov
rorb
repnz
add
jno
sub
xor
fsts
push
push
pop
and
rorb
cmc
push
xor
lea
inc
imul
push
inc
xor
lock
arpl
mov
loope
sub
xorb
xchg
xchg
mov
jo
mov
dec
xchg
mov
cmp
push
daa
dec
mov
dec
dec
rolb
sub
mov
lods
sbb
ret
or
shll
into
xor
shrl
sbb
dec
ss
test
push
idiv
cmp
push
cmp
mov
mov
or
scas
ror
outsl
gs
das
sub
add
dec
dec
push
mov
adc
mov
inc
mov
jbe
xchg
push
pop
jae
ds
imul
push
mov
js
and
cwtl
mov
xchg
fisubrl
mov
pop
add
ret
bswap
mov
clc
rolb
push
jg
jmp
out
fs
and
aas
xor
jge
out
ret
jmp
xor
adc
test
nop
or
and
xchg
xor
mov
inc
mov
pop
popf
repnz
mov
push
push
fbstp
adc
push
xlat
aam
mov
jns
xchg
cs
mov
aas
jmp
test
cmc
jecxz
sbb
test
cltd
mov
loopne
aad
mov
xchg
rorl
add
mov
add
dec
iret
pop
mov
out
neg
and
loope
imul
mov
mov
inc
orb
sub
push
xor
lds
js
movsl
inc
orl
orb
inc
push
insb
popa
inc
sub
xor
sahf
cmp
mov
jns
cmp
push
lea
sahf
loop
mov
mov
insl
push
cmp
pop
dec
jmp
jb
outsb
stos
std
push
push
lret
xlat
rolb
adc
xchg
pop
xchg
xlat
and
sub
test
mov
daa
jns
push
shlb
sub
adc
xor
jmp
sarb
out
sbb
mov
repnz
es
jecxz
xchg
notl
inc
and
test
call
xor
inc
sub
push
ss
ret
dec
stos
sbb
push
and
sti
xor
adc
sub
arpl
xor
popf
mov
xchg
mov
je
ds
sub
jge
cmpsl
lcall
dec
rolb
inc
xchg
jp
pop
mov
cli
popf
hlt
test
push
lock
insb
ds
popl
inc
add
and
adc
fs
ljmp
shll
cli
cmpsb
xchg
fcomps
inc
xor
das
lret
mov
fmuls
les
popa
orb
mov
xchg
pop
and
xchg
pop
xchg
out
sbb
pop
in
hlt
pop
in
inc
adc
mov
loopne
cwtl
push
cmpsl
pop
adc
cmp
and
loope
jns
bound
loop
fwait
loopne
in
mov
iret
fsubs
hlt
shll
sbb
movsl
xchg
ficomps
push
mov
mov
repnz
mov
inc
mov
and
mov
shlb
iret
rcrb
movsb
iret
pop
push
pop
push
lds
arpl
jne
les
push
push
imul
rorb
ja
inc
pop
sbb
adcb
jnp
les
sbb
fistpl
call
jae
and
pop
mov
mov
cmp
in
fucomip
int
mov
sub
pop
scas
jl
and
imul
or
das
xor
ret
and
inc
subl
lret
pop
inc
pop
mov
dec
sub
xor
pop
xchg
outsl
sub
ljmp
sub
cmpsl
dec
xor
rep
adc
mov
out
dec
ss
jge
jne
mov
mov
data16
push
insb
xchg
mov
cmp
fwait
jne
mov
pop
or
xor
pop
test
xchg
mov
mov
lods
jecxz
dec
mov
les
pop
push
push
frstor
dec
xor
jg
dec
test
lods
sbb
mov
push
outsl
inc
test
lock
aas
cli
xchg
and
mov
xchg
jg
das
xor
xchg
dec
inc
fimull
and
add
pop
ret
fisubs
ja
int
imul
stos
repz
xchg
push
cld
subb
adc
inc
push
or
int
je
cmp
sub
fnstenv
movsb
add
fwait
loop
jecxz
add
popa
lods
xchg
fnstenv
ja
jmp
pop
mov
sub
and
dec
lea
ss
mov
cmp
loope
xchg
lods
xchg
mov
sbb
jmp
jb
aaa
push
xor
popa
cmpsb
das
sbb
cld
sbb
mov
push
out
mov
into
jg
les
xor
cmp
mov
je
pop
repz
jp
scas
cmp
jl
push
rorl
and
sub
cmp
and
insl
shlb
xlat
pop
fcoml
cli
xchg
data16
pop
scas
push
movsl
mov
add
jge
cmc
and
in
cltd
cltd
rcl
clc
dec
loop
bound
jg
ud0
imul
jno
nop
data16
pop
bound
ss
lods
outsb
pop
adc
push
jmp
in
or
fstpt
mov
pop
push
and
lods
pushf
fiaddl
cltd
push
out
int3
cltd
sete
insb
scas
cmp
shrl
sti
enter
fcoml
cmp
loopne
jmp
scas
test
cmp
mov
and
stos
lret
cmc
xor
fsubp
adc
and
fisubl
jae
stc
addl
xchg
movsb
push
mov
inc
sub
test
popf
sub
inc
hlt
nop
movsl
mov
fidivl
mov
nop
insl
and
sti
insb
mov
je
pop
mov
fildll
clc
dec
mov
fwait
xchg
or
sub
clc
mov
jg
mov
je
sbb
xchg
into
mov
pop
scas
loope
push
xchg
jno
sub
or
fistpl
test
verw
xor
mov
jne
sbb
imul
xlat
mov
mov
pushf
dec
add
insl
nop
add
addb
daa
jecxz
stc
pop
test
int3
iret
sahf
fsubrp
mov
es
sub
sbb
into
dec
add
rolb
cmp
popf
lods
add
pop
test
and
push
cmp
push
and
repnz
shrb
add
pop
mov
mov
cmp
hlt
sahf
fbstp
rcl
add
ret
mov
daa
inc
adc
and
addr16
insl
add
sub
jb
call
jo
shrl
mov
sbb
xchg
popa
mov
inc
mov
jl
pop
out
outsl
imul
lea
dec
repnz
dec
mov
xor
sbb
push
push
shll
push
mov
dec
push
xchg
xchg
cmp
call
jnp
mov
movsb
push
mov
out
mov
pop
xor
cmp
xchg
xor
cld
loopne
mov
xchg
xchg
sbb
fldenv
mov
or
fsubr
jb
and
sub
sarb
rcrl
icebp
std
lea
mov
jecxz
fisubs
stos
jl
fwait
test
mov
mov
mov
shr
data16
mov
ret
ljmp
xor
xor
push
mov
xchg
push
push
stos
fists
bsr
fimuls
xorl
mov
adc
andb
addr16
je
jmp
pop
xchg
mov
stos
out
test
insb
imul
or
pushf
mov
pop
cmp
sub
fwait
leave
daa
push
mov
mov
in
ss
testb
xor
push
fiaddl
shrb
dec
mov
outsl
mov
enter
in
gs
or
ds
jg
jp
loopne
outsb
lret
adc
cwtl
sub
mov
cs
dec
imul
test
fwait
jo
jb
dec
clc
jmp
pop
and
sti
xchg
dec
pop
fmull
push
inc
stos
xchg
hlt
or
jbe
xor
mov
fisubrl
xchg
adc
add
fcompl
cld
shl
dec
in
mov
lret
xor
lcall
push
fildl
in
jmp
adc
movsl
cwtl
int3
aas
dec
addr16
mov
mov
out
iret
call
cmpsl
mov
scas
inc
pop
sbb
xchg
shll
pop
es
jge
cwtl
add
cs
push
test
outsl
dec
movsl
imul
xchg
ss
imul
jns
out
popf
loopne
or
cmc
std
jnp
aaa
pop
push
mov
mov
sbb
xchg
lds
sub
sahf
jne
xor
mov
adc
sahf
jmp
xchg
imul
mov
adc
pop
lods
add
mov
mov
fisubl
jp
loop
scas
cs
arpl
dec
xchg
mov
xchg
jae
mov
adc
sub
out
fwait
pushf
pop
std
inc
cmp
repnz
arpl
ret
ffreep
jle
push
xor
xchg
sahf
inc
inc
mov
sub
push
sbb
test
dec
mov
stc
mov
add
push
or
popa
insb
fsubp
pop
or
fistl
daa
mov
cmp
sbb
orl
sahf
and
popf
xor
jp
pop
loope
test
dec
icebp
enter
enter
add
push
xchg
and
jmp
stos
mov
ljmp
xchg
lock
aad
push
dec
mov
faddl
scas
pop
push
sti
inc
pop
fdivrs
or
andl
ljmp
xchg
scas
movsl
hlt
jns
test
sbb
mov
dec
jl
repnz
mov
int
jl
loopne
popa
or
gs
mov
mov
mov
cmpsl
inc
lods
mov
xor
fs
lret
xcrypt-cfb
cmpsl
bound
push
int
sahf
mov
xor
pop
and
or
sbb
inc
fistps
and
rcl
int
lret
add
lahf
pop
rcll
jmp
aaa
nop
es
push
push
imul
cmp
and
and
aad
lret
out
addb
pop
adc
scas
mov
test
sbb
inc
inc
fs
lret
xor
adc
mov
cmpl
or
out
inc
xlat
ss
aad
std
push
sbb
pushf
call
adc
sti
and
xchg
addr16
mov
sub
repz
jecxz
cld
jne
loopne
xchg
ja
pop
mul
xor
cltd
outsb
inc
push
push
fs
mov
lock
das
imul
imul
xor
jp
and
and
cmp
jnp
pusha
dec
adc
test
sar
pop
xchg
rclb
and
mov
pop
lret
test
adcb
mov
aaa
add
add
icebp
push
pusha
les
jno
mov
arpl
in
test
cwtl
inc
xor
adc
mov
divl
jmp
repnz
std
in
jae
jecxz
push
push
jo
test
dec
nop
xchg
in
jle
lahf
push
mov
arpl
jg
pop
dec
nop
int3
inc
and
mov
and
pop
and
call
addr16
push
sti
pop
cli
add
imul
enter
mov
cmp
lea
xor
xchg
les
shrb
inc
pcmpgtd
les
test
lods
imulb
int3
test
pop
push
negb
adc
or
call
mov
cmp
loope
cmpsl
mov
jmp
xor
xchg
jmp
xchg
push
xlat
repnz
pop
pop
jo
mov
sub
jno
sti
icebp
xchg
add
inc
test
aas
into
pop
in
in
adc
cmc
xchg
and
cmp
xlat
inc
cmovae
mov
push
jmp
dec
adc
sbb
loopne
fcmovnb
adc
or
pop
fcoms
xor
dec
daa
mov
jl
pop
dec
or
iret
scas
loop
adc
nop
dec
sub
ja
jne
push
mov
cltd
or
mov
mov
pop
nop
fs
add
gs
je
push
and
cld
cmp
and
std
aas
inc
test
adc
xlat
mov
int3
dec
loope
loopne
cwtl
sub
ret
test
ss
les
pop
cwtl
stos
mov
cli
out
xchg
or
daa
mov
adcl
dec
push
in
inc
adc
sub
lcall
dec
dec
dec
or
push
outsb
add
sub
adc
cmp
mov
and
sub
lahf
mov
inc
jbe
addb
jne
jbe
pusha
mov
sub
repz
cmp
inc
in
mov
fwait
in
push
icebp
mov
mov
jl
push
pop
popf
ret
and
jne
data16
hlt
bound
sti
subl
inc
dec
mov
out
xlat
and
xchg
mov
push
fwait
push
ss
daa
push
popa
adc
es
aaa
rcr
sub
inc
dec
pop
int3
repnz
adc
in
lret
or
and
and
incl
addr16
inc
jnp
fcoml
xchg
repnz
insb
fcomps
pop
loope
sti
popf
ja
fwait
ss
mov
mov
jb
lds
test
mov
aas
shll
cmpsb
sbb
and
sub
neg
cmpb
push
or
into
lods
lahf
or
sub
and
jp
cld
lds
dec
mov
pop
pop
int3
test
fadd
rorb
lcall
pop
push
shrb
sub
pop
dec
mov
mov
pop
adc
inc
mov
in
cmpsb
leave
lret
decb
into
sbb
mov
call
std
lods
imul
dec
xchg
sub
and
enter
mov
je
ljmp
sbb
push
mulb
out
inc
pop
loopne
push
adc
pop
and
dec
jne
lods
inc
call
sub
cli
scas
add
jle
inc
push
mov
cmp
adc
scas
sbb
or
ss
dec
out
out
out
js
fbld
mov
push
fs
arpl
push
and
into
lea
inc
pop
or
xchg
ja
rep
push
fidivrl
dec
jl
sub
adc
or
xchg
bound
dec
gs
or
in
or
leave
add
ja
scas
or
and
and
push
ja
mov
cmp
fisttps
shrb
in
aaa
ficoml
jbe
dec
push
lahf
int3
or
arpl
enter
fs
sahf
mov
arpl
cmp
mov
cmp
scas
icebp
pop
push
cmpsb
into
mov
adc
mov
and
insl
lahf
sub
mov
cmp
and
fstpl
xchg
or
ret
dec
orb
cmp
xor
push
std
pop
push
xor
push
xlat
sub
mov
pop
pop
jne
jns
dec
xor
loope
in
fwait
cmp
mov
neg
mov
ret
nop
cmp
and
mov
sar
das
lcall
sub
jle
mov
mov
leave
lds
sub
xor
xchg
sbb
pusha
push
xor
popf
or
sbb
and
pop
out
stos
ds
mov
sbbl
cmc
cli
std
mov
xorw
fsubrs
cmpsl
ret
sbb
stc
push
ficompl
shlb
or
pop
and
lahf
jno
daa
adc
mov
pop
fisttpl
xchg
mov
mov
sbb
ret
add
xor
cmovno
lret
lods
add
fsubrp
cltd
jno
ja
cs
jle
dec
mov
pop
inc
cs
outsb
cmp
jne
mov
test
cmp
mov
lods
call
push
mov
mov
out
mov
lret
jns
inc
lea
sub
adcl
es
xchg
in
adc
push
loop
dec
or
movsl
mov
sbb
jb
popa
cmp
cmc
lods
jmp
rcr
imul
inc
testb
xor
pop
mov
pop
xchg
cmc
ret
xor
pop
adc
jecxz
sbb
cmp
cmpsl
inc
out
sub
orl
jmp
out
jns
cld
js
addr16
repz
dec
jns
loope
and
inc
div
test
xchg
movsl
test
pop
xchg
pusha
dec
xor
fwait
mov
mov
sbb
aaa
int3
je
xchg
into
push
lock
lret
push
dec
loop
into
jbe
xor
outsb
sbb
lret
push
or
cmpsb
pusha
xchg
pop
xor
sub
pmulhuw
xor
pop
fldcw
shrl
pop
or
dec
ja
in
mov
jl
cld
mov
jo
inc
std
push
dec
flds
dec
cmp
rcrb
fsts
int3
mov
jnp
inc
dec
sbb
or
insb
jecxz
inc
xchg
je
dec
cmpl
lock
mov
mov
popf
test
push
xor
jnp
sbb
mov
and
mov
xchg
loop
xchg
inc
adc
pop
push
adc
sbb
xchg
jl
repz
lods
jl
mov
push
mov
sti
frstor
cli
jno
cmp
cwtl
sub
push
and
rol
andl
popf
out
out
lea
xchg
fimuls
xlat
jbe
xchg
jmp
mov
nop
inc
pop
jae
rcr
pop
cmp
fs
add
roll
xchg
jo
sub
popf
sbb
xchg
cld
daa
mov
pop
xchg
push
push
xchg
sbb
add
fstl
pop
sub
mov
pop
or
lods
dec
cwtl
mov
cld
outsl
mov
jp
inc
sub
push
mov
and
int
adc
imul
fidivl
femms
xchg
rcl
nop
dec
mov
jno
inc
nop
nop
cmp
jae
push
in
sbb
hlt
or
xlat
xor
fcomip
pminub
jecxz
pop
or
lods
shll
and
dec
and
xchg
test
filds
out
dec
hlt
xor
pop
lret
sti
xchg
adc
sub
in
cmpsl
scas
push
mov
lods
mov
loopne
cmp
into
cwtl
xchg
xchg
mov
xor
pop
in
adc
jne
add
push
mov
into
daa
adc
imul
jge
pop
xchg
out
popa
mov
xchg
dec
jb
mov
pop
or
scas
mov
hlt
out
gs
cmpsb
dec
or
loop
jb
dec
frstor
and
push
scas
adc
and
jnp
std
cltd
addb
movsb
adc
and
gs
pop
jns
and
adc
pop
inc
loopne
mov
dec
xor
pushw
jnp
mov
xchg
test
addl
aaa
ret
push
inc
cld
and
insb
add
repz
popa
push
xor
pushf
pop
mov
fiaddl
cmpsb
mov
push
and
adc
in
push
lea
mov
lcall
shrl
add
sbb
inc
cltd
xlat
xor
fmull
mov
mov
popa
repz
mov
enter
sbb
mov
pop
jno
ret
push
xor
jmp
rcll
sbb
les
sub
cmp
jmp
cmp
or
addr16
gs
iret
sub
sahf
gs
rclb
fnstenv
xchg
dec
sti
push
fwait
cld
dec
mov
sub
insl
and
mov
ljmp
adc
addl
sti
dec
push
sub
clc
enter
cld
inc
fdivrl
cmp
inc
cwtl
add
clc
dec
adc
lahf
inc
bound
mov
or
fiaddl
sub
mov
dec
sub
pop
adc
xchg
arpl
into
jl
xchg
test
int3
ret
mov
imul
sub
xlat
sarl
push
jge
in
push
xor
fnstcw
movsb
lea
mov
or
cli
jno
test
jl
insb
bound
xor
test
leave
pop
push
xchg
xchg
imul
mov
lock
movsl
pushf
push
inc
mov
out
and
sbb
test
push
jle
lea
inc
icebp
subl
push
fs
cmp
fcmovu
mov
xchg
pusha
jle
xor
xlat
push
popa
insl
xor
pop
fwait
jnp
or
or
jbe
mov
inc
cli
loope
xchg
fs
sti
shll
pop
addr16
mov
out
fxsave
jno
xchg
in
ret
dec
pop
push
jle
fistl
ljmp
nop
sbbl
clc
hlt
cld
push
jg
std
fnstsw
lahf
xor
add
jne
int3
mov
repz
div
jge
xor
xchg
pushf
mov
and
jbe
cmpsb
cmc
dec
xor
mov
and
mov
cmpsb
add
jno
jle
push
mov
and
mov
loopne
adc
inc
cmpsl
push
loope
pop
dec
sbb
packuswb
test
loop
mov
sub
sub
ret
or
push
pop
add
pop
outsb
loopne
lods
xor
add
push
in
gs
std
in
stos
jmp
in
mov
pop
fisubrs
push
and
repnz
out
push
frstor
push
test
mov
daa
mov
lods
cmp
jle
leave
mov
pusha
cmp
mov
pop
mov
and
push
dec
xchg
and
mov
adc
paddusw
adc
xchg
shll
stos
clc
jecxz
and
repnz
push
addr16
cmp
sub
movsl
cmp
or
mov
mov
enter
mov
mov
scas
iret
sub
imul
xor
or
sub
or
popf
fs
loop
pop
pop
sub
xchg
lods
mov
mov
mov
movzbl
stos
mov
cmp
inc
cmc
outsb
sub
psrlq
dec
xchg
mov
inc
fisubrl
xchg
cmpsl
pop
int3
and
outsb
leave
sub
jne
jae
sub
jno
stos
loop
js
push
fs
arpl
jmp
cmp
sub
gs
ja
aad
cwtl
xor
notb
jmp
test
ja
jo
and
push
add
and
cmp
pop
xor
pop
adc
movsl
clc
ret
mov
xor
push
aam
outsl
cltd
mov
int
xchg
enter
mov
inc
popa
lret
lods
or
xor
hlt
jb
adc
testb
aas
xchg
loop
js
jmp
rolb
idivl
out
imulb
mov
in
mov
subl
mov
bswap
dec
ss
out
cmp
shl
push
ror
mov
into
lock
sub
jo
mov
leave
mov
add
push
in
test
sti
cmpsl
mov
ret
push
cmp
pushl
int3
sub
and
adc
or
or
ds
sbb
sub
out
sbb
lret
mov
add
or
dec
int
add
inc
lods
movsl
pop
sub
mov
jbe
stos
ljmp
adcl
mov
std
cmp
repz
dec
stc
push
push
shrl
pop
cltd
cmp
jbe
fidivl
lret
xchg
pop
fnstcw
dec
ljmp
mov
jp
xchg
cmpb
ds
ss
dec
icebp
or
lret
mov
clc
push
pop
dec
or
pop
push
pop
clc
sub
les
xchg
adc
pushf
aas
imul
mov
mov
jmp
cmp
mov
jge
push
pop
fcmove
mov
jno
inc
in
xor
xlat
test
inc
xor
and
insb
popa
test
jae
xchg
cmp
jecxz
sbb
sbb
addr16
fsubrs
mov
add
mov
icebp
add
lea
rorl
xorl
movsb
insb
sahf
xchg
mov
arpl
mov
add
mov
andl
cmp
or
ret
mov
sbb
pop
std
push
mov
jnp
stc
sbb
mov
lret
ja
pushf
cmpsb
aas
ljmp
jmp
fnstenv
cmp
push
test
icebp
out
cmovno
mov
sahf
jl
cli
leave
test
dec
in
lret
ret
sub
pusha
lcall
subl
ficompl
lret
pop
stc
mov
fstpl
mov
pop
cmpl
mov
popa
add
fbstp
pop
xor
mov
in
in
inc
mul
in
jo
dec
mov
popa
cmp
lods
scas
call
mov
adc
pop
xchg
mov
lods
test
mov
xchg
dec
daa
out
cmp
or
mov
pop
in
pushf
mov
out
add
pop
nop
adc
pop
stos
imul
stc
fucomip
push
out
adc
pop
lahf
mov
push
es
test
mov
orb
lock
movsl
mov
pop
push
jp
push
or
jmp
and
cmc
scas
xchg
pop
jns
or
add
fadd
mov
jno
xor
xchg
repnz
sub
jle
xor
or
push
rorb
testl
sub
fdivp
in
cmpsb
fwait
add
jecxz
adc
inc
pop
cli
adc
push
dec
add
push
adc
divl
movsl
jbe
fisttpl
xor
in
jb
pop
les
pop
movsb
mov
push
add
lahf
pushf
scas
or
movsb
xor
push
dec
lcall
es
jo
psubd
mov
push
lds
mov
cmp
push
outsl
xchg
or
rcrb
in
aas
cmp
inc
lds
pushf
sbb
add
mov
aaa
ss
jb
stos
cmp
negl
daa
cmp
gs
jne
stos
cmp
jmp
and
cmp
and
sahf
xchg
ret
pop
add
das
jmp
inc
sub
cs
mov
aam
jle
int3
pop
push
jnp
jg
into
sub
loop
mov
int3
mov
mov
xor
inc
xchg
add
inc
sti
lcall
xchg
adc
clc
add
mov
mov
icebp
push
or
adc
mov
push
jmp
dec
leave
cmpsl
xchg
out
push
jge
dec
mov
xchg
test
mov
stc
pop
xchg
inc
mov
jns
mov
aaa
add
out
push
iret
xor
sub
sbb
das
movsl
lahf
mov
iret
push
add
and
and
pop
sbb
lahf
dec
lret
jnp
cmp
mov
adc
xor
mov
outsl
xlat
fucomi
fs
xchg
xchg
adc
jle
and
ret
pop
outsb
out
lods
mov
dec
inc
or
push
test
mov
test
add
fbstp
lcall
fstpt
xor
push
sbb
out
jnp
and
pop
fiaddl
push
sub
jnp
xchg
add
dec
sti
mov
xorl
call
insb
out
mov
cmpsl
icebp
push
push
add
clc
mov
pshufw
fidivrs
hlt
shrb
inc
inc
ljmp
fbld
mov
call
mov
fwait
mov
xchg
pop
xorl
fwait
xlat
lods
push
sti
rclb
pop
popa
xor
clc
test
xor
mov
hlt
mov
mov
add
in
lods
adc
inc
test
xlat
popf
sub
pop
fdivl
aam
dec
enter
outsb
sub
aaa
roll
cli
sbb
pop
jle
xor
xor
icebp
loop
mov
movsl
adc
sbb
sti
mov
lock
stos
data16
xchg
jge
pop
sbb
pop
cmp
outsl
jns
aas
mov
insl
popa
in
dec
rcl
xor
mov
out
je
adc
pop
jg
icebp
out
cwtl
cmp
orl
mov
add
mov
ljmp
mov
push
xor
in
xor
test
outsb
push
and
popa
pop
dec
add
push
lea
push
sbb
pop
cmp
in
ja
filds
dec
push
and
das
movsl
fwait
test
jp
fistpl
jne
sbb
xchg
stos
inc
insl
cwtl
ss
fwait
cmp
js
xchg
and
sbb
inc
pushf
int
ljmp
rcr
jge
mov
popa
sbbl
mov
sbb
dec
jo
mov
mov
add
push
push
out
cltd
cmpl
xchg
ja
jnp
sahf
fisubrs
cmp
icebp
es
push
inc
jmp
mov
pop
popf
fwait
and
cli
out
popf
sub
cmc
mov
sbb
popa
mov
ds
lods
adc
cmp
inc
fmull
stos
xchg
and
push
push
outsl
xchg
es
test
pop
out
cmpsl
dec
mov
movsl
or
mov
pop
inc
test
jmp
mov
aad
sbb
sahf
jl
mov
mov
cmp
cld
sbb
test
and
push
div
pop
cmp
test
xchg
inc
outsl
ret
sbb
inc
icebp
add
fsts
icebp
xor
add
fisubl
mov
pop
aas
jnp
mov
sbb
sub
pop
mov
jmp
sbb
and
ret
cmp
mov
and
xor
cmp
jnp
xchg
orb
jl
mov
scas
dec
movsb
popa
shlb
scas
xchg
aaa
stc
repnz
xchg
add
sti
pop
int
xor
cld
ja
mov
mov
xchg
aam
sbb
gs
xorb
movsb
mov
xchg
xor
xchg
sarl
xchg
xchg
fs
ficomps
enter
aas
sub
fisttps
push
aaa
test
jecxz
movsl
in
je
fnclex
push
pop
push
cmp
jge
fnstcw
cmp
loop
or
adc
aaa
sub
and
in
pop
lcall
cwtl
addr16
inc
int3
mov
sub
fisubs
dec
sbb
adcl
arpl
aam
or
dec
fwait
cltd
xchg
sbb
xchg
mov
int3
ljmp
bound
cli
dec
fisttpll
jnp
mov
inc
fistpll
lret
sbb
ret
pop
adc
xchg
or
insb
rorl
enter
imul
fsts
xor
pop
adcl
sub
mov
sbb
xchg
es
repnz
insl
sbb
sbb
lds
ds
negl
mov
pop
push
movsl
les
scas
fsubl
xor
mov
mov
push
push
fadds
inc
cmp
jmp
xchg
dec
xlat
ret
cwtl
loope
pop
mov
dec
aas
ljmp
arpl
mov
test
mov
lods
xchg
popa
cmp
add
daa
xchg
dec
ds
xchg
pushw
push
jg
sub
mov
xor
imul
daa
fs
pop
xor
mov
daa
jo
xor
outsb
scas
test
mov
pop
aam
cli
ss
lods
xor
xchg
aam
xchg
movsb
roll
subb
stc
repz
push
out
shlb
mov
repnz
xchg
pop
lods
adc
testl
mov
mov
xchg
imul
in
lret
jno
lock
adc
inc
adc
add
jne
jb
pushf
jnp
lahf
sbb
or
push
add
adc
sti
mov
int
jmp
jns
cmp
negb
les
xchg
shlb
fstl
iret
bound
push
mov
jge
mov
jb
or
add
push
adc
jle
les
lahf
inc
mov
and
cwtl
clc
pop
adc
rol
sahf
jmp
test
mov
mov
imul
insb
repnz
push
pop
push
mov
sbb
jnp
les
jno
cld
push
ret
sub
lret
imul
pop
cld
popa
xor
pop
mov
xchg
cmp
arpl
pop
push
js
flds
rcrl
pop
push
in
lock
imul
cwtl
jl
sub
pop
clc
cwtl
mov
ljmp
das
fmuls
sbb
mov
mov
data16
cmp
jno
inc
stc
lds
add
mov
in
daa
out
dec
daa
mov
push
sub
jg
sbb
insb
adc
mov
std
xor
cmpsb
xor
out
add
dec
xchg
bound
shll
pop
out
mov
hlt
xor
repz
sbb
lods
mov
dec
jne
in
scas
pushf
and
leave
xor
fst
sar
jmp
addr16
mov
adc
xchg
pop
sar
sbb
inc
jg
push
sub
cld
push
pop
cltd
xchg
js
cmpl
adc
jmp
inc
fwait
jo
out
std
imul
pop
jle
call
jle
faddl
fwait
out
sbb
imul
in
mov
xor
das
dec
gs
or
mov
dec
push
shl
xor
mov
imull
jne
fcmovnu
daa
lahf
mov
cltd
lea
mov
cmp
sbb
mulb
cmp
ds
cmc
add
inc
fiaddl
inc
movsl
push
movsl
xor
aad
lahf
aam
sarl
push
sti
push
or
mov
cmpsl
int3
bound
pop
mov
fwait
push
add
stos
jns
in
cmp
loop
jle
push
mov
les
jbe
dec
adc
sub
sbb
xchg
int3
xor
and
pop
test
cli
and
pop
cmp
sbb
xor
xchg
push
out
dec
jnp
ret
pop
add
jno
xorl
fwait
xchg
dec
lods
scas
repnz
or
das
push
dec
repnz
cld
test
fcmove
adc
mov
push
outsb
lcall
jne
rol
push
pop
adc
jbe
mov
inc
fstl
and
mov
mov
push
out
lret
out
enter
ds
sub
jo
in
xor
out
sub
test
stos
mul
xchg
jge
pop
enter
mov
cld
pop
add
pop
dec
xchg
push
dec
inc
add
pop
iret
fadds
les
test
mov
gs
sbb
inc
add
test
cmp
daa
mov
shl
lcall
notb
push
loopne
adc
mov
mov
addl
clc
into
cmpsl
jno
adc
out
jo
sub
inc
adc
mov
pusha
push
shlb
sti
lds
push
push
push
pop
or
pop
mov
in
sbb
lods
xchg
adc
mov
aam
push
dec
fnstsw
mov
cmp
add
aad
stos
sbb
lea
test
dec
lret
mov
cmp
xchg
iret
fs
add
out
add
sahf
int
into
add
and
mov
test
mov
mov
push
pop
xor
ficoms
into
add
pop
push
xor
push
lock
adc
jbe
xchg
popa
out
inc
cwtl
aad
out
pop
fisttps
jo
add
insl
fmuls
jno
mov
lret
das
push
sbb
xchg
and
mov
xchg
mov
into
xchg
jl
sbb
jb
loope
test
dec
mov
stos
out
cld
mov
push
mov
or
jmp
and
and
xchg
add
mov
lea
xchg
mov
add
popa
out
add
in
outsb
and
fsubrs
pop
aas
jge
shl
aaa
fcmovne
mov
xchg
jp
aaa
jmp
gs
repnz
cmpsb
pop
lods
push
je
jl
int3
sahf
fs
jmp
lea
cmp
adc
mov
cmpsb
sub
xor
adc
lahf
xchg
push
push
add
jno
into
mov
enter
and
loope
fisubl
js
or
movsl
mov
dec
std
add
pop
lahf
or
in
das
fwait
xchg
and
pop
xchg
jae
push
sbb
sub
add
jp
xchg
stos
pop
fwait
insb
xchg
mov
pop
dec
push
adc
dec
aaa
add
push
test
decl
jle
cmpsb
lods
lods
fwait
lods
int
and
je
push
push
push
stos
lahf
jle
pop
repz
jno
fmull
cmpsl
adc
shrl
cmp
and
fucomip
xor
mov
push
dec
ficomps
pop
cmp
jnp
ret
imul
mov
dec
mov
jp
leave
mov
pop
pop
rcl
add
pop
sbb
push
mov
pop
jb
movsl
mov
in
push
inc
sar
lods
jl
xor
xchg
fidivl
sub
imul
cmp
push
and
mov
imull
or
lock
inc
stos
pop
xor
adc
iret
inc
dec
stos
add
jo
outsl
fwait
inc
adc
stc
jl
and
aaa
dec
xorb
push
dec
pop
lcall
sti
sbb
sub
pop
fwait
scas
inc
jns
mov
js
xchg
mov
nop
mov
insl
mov
arpl
adc
stc
fbstp
xor
lods
hlt
pop
cld
push
or
stos
inc
pop
shlb
mov
and
add
loopne
ret
pusha
sub
shlb
sti
std
push
push
mov
in
test
mov
xor
and
add
addr16
xchg
test
mov
jae
leave
jmp
add
addr16
mov
mov
fldt
adc
xor
mov
adc
jge
inc
ret
xchg
pop
mov
andl
push
popa
jge
gs
rcrb
inc
repnz
push
pop
sbb
mov
daa
gs
and
lret
push
call
dec
jle
mov
mov
sub
xchg
pop
test
rclb
and
push
lock
ret
std
mov
repz
push
loope
jp
dec
or
test
aaa
cmp
mov
push
pusha
test
shlb
lahf
test
shll
xchg
inc
fisttpll
mov
test
stc
dec
addr16
outsl
fistl
out
and
out
xchg
out
mov
xor
insb
mov
sub
cs
xchg
xor
shlb
cwtl
mov
xchg
lcall
cmp
dec
cmp
mov
mov
xor
inc
cmp
xchg
scas
mov
dec
sub
aad
imul
xchg
fwait
mov
sub
ror
mov
lret
idivl
popf
rcll
fidivs
pop
sub
notl
and
jno
push
lods
ret
xor
pop
negl
pop
aaa
sbb
jnp
xor
adc
sarl
sbb
fldenv
pop
xlat
cmp
mov
sbb
loope
lds
in
cli
aam
popa
xchg
dec
clc
and
popf
add
dec
test
mov
ljmp
xchg
push
pop
push
jo
cmpsb
out
sbb
sub
je
push
dec
sbb
pop
mov
pop
or
movsb
jle
mov
adc
pop
add
movsb
mov
in
jecxz
inc
lods
mov
popa
test
into
rorb
add
cmpsb
xchg
cwtl
sbb
sti
das
push
mov
je
sti
shlb
or
push
mov
dec
inc
test
lahf
mov
push
xchg
sbb
jne
cmpsb
dec
pushf
and
inc
pop
inc
jns
mov
scas
popa
lret
mov
mov
push
lret
ljmp
in
adcb
mov
mov
test
pop
dec
fimuls
mov
repnz
shlb
hlt
das
or
outsl
push
repnz
lods
mov
addl
cmp
rcrb
push
push
aas
mov
xchg
pop
mov
dec
xlat
std
pop
push
loopne
mov
mov
and
rorl
test
push
out
ret
dec
hlt
ret
push
mov
push
push
iret
icebp
or
stc
pop
lock
pop
clc
jnp
add
sti
adc
mov
sti
aam
jg
insl
pushf
push
leave
mov
mov
xor
rol
mov
ja
rcrb
jmp
xor
cwtl
ja
ficompl
pop
stc
sbb
fcomip
jg
out
pop
mov
sub
cs
rcrl
pop
cmpb
loop
adc
mov
insl
cmp
cmp
subb
mov
add
add
jno
add
rclb
cmp
push
cld
add
add
cmpsb
mov
addr16
sahf
xchg
callw
or
push
or
adc
mov
cmp
aam
das
lods
rcrb
adc
mov
pushf
loop
loop
xchg
mov
lret
aam
mov
mov
mov
loope
insb
jo,pn
dec
jnp
hlt
mov
icebp
imul
jg
mov
xor
mov
lock
insb
xor
orb
xchg
minps
lahf
jge
cmp
or
dec
dec
mov
dec
es
in
jbe
or
nop
test
add
adc
test
iret
adc
mov
adc
mov
fs
push
jns
test
ja
popa
push
fucomi
jl
mov
fnstenv
push
mov
fistpl
and
aad
xchg
adc
popf
cmp
orb
push
xor
push
or
test
nop
pop
add
arpl
jns
sbb
lds
fsubrs
iret
jae
cmc
js
adc
pop
cs
ret
xchg
cmpsl
sub
or
and
adc
loopne
sbb
bound
cmp
stos
xchg
daa
imul
dec
sti
roll
fcoms
cwtl
jns
inc
lret
shrb
add
inc
das
mov
in
div
jne
fnstsw
enter
loopne
lret
cli
mov
out
pop
xor
or
xchg
inc
cmp
ds
or
dec
mov
mov
call
jge
fwait
js
add
sub
negl
out
jge
xorb
stos
loopne
jns
scas
jl
out
call
xor
mov
testb
jg
pop
leave
lods
pop
sahf
jecxz
enter
ffree
cli
mov
cmpsb
xchg
cmp
mov
dec
pusha
add
lock
xor
fmull
in
xchg
mov
sahf
cmp
mov
mov
ficomps
and
jecxz
push
adc
shr
mov
inc
into
cmp
push
addr16
inc
std
sar
cwtl
inc
mov
adc
imull
cmp
fsubrs
cwtl
push
mov
xor
push
mov
lods
dec
inc
out
pop
xchg
inc
lret
rorl
scas
out
lahf
cmp
inc
test
arpl
cwtl
fnstcw
pop
arpl
mov
gs
sbb
testb
inc
xor
jbe
outsl
push
rclb
xchg
mov
add
scas
jo
shll
dec
fidivrl
pop
loopne
xchg
add
incl
cmp
cmc
in
or
and
jecxz
cmp
and
pop
xor
adc
xor
lcall
push
mov
icebp
imul
mov
mov
pop
adc
dec
dec
cs
sti
dec
clc
sbb
ljmp
push
sub
imul
dec
stos
daa
push
popw
enter
push
inc
ret
jnp
add
jge
das
or
sbb
insb
jne
arpl
cmp
cmpl
add
icebp
ret
xor
add
popf
lret
mov
out
fbstp
push
fildll
pop
arpl
dec
cld
cmp
insl
pop
adc
push
mov
outsb
icebp
nop
or
neg
mov
push
flds
mov
sub
pop
sub
cld
and
inc
adc
add
pop
mov
pop
sbb
rorb
mov
lret
jae
mov
xor
and
jb,pn
xchg
jge
fsubrs
pop
cmpsb
add
sbb
leave
and
aas
cmp
test
mov
mov
cmp
cltd
add
add
push
aas
aaa
pop
lods
adc
insl
mov
fistpl
sub
mov
shl
xabort
sti
inc
pusha
arpl
xor
sbb
into
sbb
mov
sbb
mov
xchg
addl
inc
xor
rcrb
dec
or
cmp
iret
enter
jbe
out
movsb
gs
js
add
mov
rclb
cltd
mov
imul
gs
ss
adc
pushf
test
cmp
in
nop
sbb
rcl
and
mov
daa
rol
orb
fistpl
adc
les
notb
aas
mov
cmc
mov
sbb
lock
jg
add
addr16
pop
push
fs
psubd
xchg
cmpsb
inc
loopne
arpl
in
ja
adc
repnz
mov
jno
cs
dec
enter
cmpsb
repnz
jnp
dec
mov
and
cmp
repz
dec
test
and
xchg
int3
loopne
pop
pop
mov
test
mov
jg
shlb
jp
inc
xor
pop
and
jp
jbe
mov
push
outsb
jnp
jae
dec
adc
mov
adc
dec
adcb
int
push
movsb
testb
inc
or
mov
dec
aam
nop
ja,pt
fldt
std
out
xchg
pop
sahf
movsl
in
xor
mov
add
inc
aas
leave
iret
in
inc
fidivrs
cli
dec
repz
les
aaa
inc
and
sbb
mov
pushf
xchg
pop
and
jl
ds
pushl
rcll
out
push
cmpsl
adc
out
in
mov
cltd
lods
mov
sbb
sub
mov
xor
mov
xchg
inc
add
or
push
cmpb
push
hlt
pop
jo
sub
cmp
stc
mov
xchg
sbb
dec
clc
js
orl
dec
add
jmp
aas
add
adc
mov
sub
inc
ror
stos
add
pop
data16
xchg
pop
push
adc
subl
mov
call
xchg
add
fs
mov
clc
jp
or
adc
and
mov
push
xor
std
shll
mov
jp
int3
in
pop
rcll
aam
aaa
cmpsl
xor
fsub
lods
pop
add
mov
rorb
mov
xchg
ljmp
iret
or
insb
ja
jnp
xchg
cmp
popa
aam
dec
sbb
mov
adc
and
xchg
cld
inc
hlt
push
pushf
jecxz
shlb
sub
or
xor
add
arpl
add
nop
add
repnz
inc
sub
sbb
andl
xor
pop
mov
nop
or
outsl
jl
inc
mov
xchg
mov
inc
jge
dec
adcl
stc
jbe
jp
enter
push
inc
cmpl
jne
aas
popa
mov
loop
xor
mov
xchg
jg
mov
push
divl
fcomip
xchg
pop
push
scas
cmc
dec
rcrl
mov
mov
pop
pop
in
into
lea
sub
enter
lret
lahf
ss
loopne
mov
fnsave
int3
jle
cmc
pop
adc
cmp
out
adc
inc
sub
dec
mov
in
out
leave
inc
xchg
push
sbb
popa
pop
push
lods
test
pop
stos
or
icebp
push
js
mov
jge
int
adc
xor
push
orl
sbb
or
fsubs
xchg
cmp
and
mov
mov
mov
pop
inc
push
dec
fisubrs
inc
inc
dec
xchg
xor
adc
sbb
push
xlat
arpl
icebp
pcmpeqb
and
out
pop
shl
jle
cmp
repz
inc
jle
rcll
cmp
lret
pop
fisubrs
outsl
sbbb
xchg
out
mov
in
xchg
inc
jg
ret
and
jl
and
in
icebp
pop
lods
test
cmp
idivb
add
test
js
ret
push
fistpll
pop
adc
sahf
cmp
mov
repnz
xchg
std
imul
mov
lcall
daa
and
sarl
subl
je
loop
lods
push
inc
jmp
pop
arpl
loop
rorl
cmp
xor
push
add
push
or
lret
mov
inc
inc
push
xchg
mov
mov
daa
sbb
bound
xchg
push
push
inc
test
popa
outsb
inc
mov
ss
incb
inc
cmp
mov
jecxz
aas
add
add
push
jl
aaa
mov
movsb
nop
jp
roll
les
int
fcompl
mov
xor
xchg
sub
ficomps
insl
jae
or
comiss
pop
cli
popa
and
int
or
xchg
int3
xchg
jb
adc
jbe
add
dec
popa
movsl
inc
lods
fwait
jne
or
push
pop
js
ficoms
repnz
stos
xchg
sbb
cs
xor
sbb
daa
stc
jae
in
inc
addr16
pop
scas
scas
hlt
sbb
icebp
andl
inc
push
push
leave
mov
fnstsw
mov
in
and
and
enter
xchg
outsl
cli
jmp
stos
loop
pusha
fstpl
int
ljmp
stc
jle
inc
jnp
cmp
mov
daa
lahf
aas
fists
fisubrl
xor
ds
andl
xor
sub
insb
sbb
iret
xchg
lcall
adc
push
or
fidivl
or
pop
inc
fsubrs
push
jne
dec
sbbb
subl
xchg
rcrl
jne
sahf
je
add
lds
jne
roll
pushf
xlat
push
sub
cltd
fisubrl
inc
push
mov
push
xchg
add
or
cmp
dec
pop
mov
sub
enter
dec
scas
mov
mov
push
adc
inc
mov
lods
adc
inc
jge
ret
mov
cmpsl
lock
sbbb
dec
popf
bound
iret
ret
xchg
stos
fdivl
push
inc
bound
addb
sub
add
inc
ss
pop
sti
mov
jb
push
lcall
popf
sbb
fdivrl
repz
pushf
popf
push
pop
pop
fs
pop
push
in
hlt
jge
cmp
dec
call
adc
push
in
mov
mov
test
leave
pop
aas
dec
ret
iret
es
push
pushf
stos
daa
and
lret
xor
leave
inc
loope
into
inc
push
pop
push
cpuid
stos
mov
sti
jg
out
jne
mov
pop
add
icebp
or
sarb
test
jbe
shlb
push
push
sub
inc
xor
shll
loopne
xor
fwait
pop
xor
xchg
aaa
jmp
cltd
fsubrl
pop
push
sub
xor
fwait
mov
jecxz
scas
insb
or
jl
xchg
fcoms
mov
adc
mov
add
mov
pusha
cmp
xor
adc
shll
pshufw
loope
xchg
out
cltd
dec
and
xchg
adc
cmp
sbb
xchg
mov
aad
cmp
ret
dec
sub
in
cli
inc
jle
leave
inc
jne
mov
lods
dec
jp
sbb
add
add
or
out
push
mov
fisttpl
mov
out
mov
int
xchg
scas
push
sahf
pop
add
push
loope
mov
clc
nop
sub
mov
mov
jge
aas
test
inc
inc
xchg
mov
enter
inc
jle
lret
pop
bswap
fmuls
stos
jae
repnz
jg
arpl
push
dec
outsb
sub
in
rorl
out
xchg
cmp
es
cli
out
das
adc
pop
popf
push
fwait
push
repnz
jno
js
ss
or
mov
aas
jle
gs
dec
jns
jnp
fidivl
xor
imul
inc
aad
xor
lods
and
fnsave
cmp
ss
leave
les
push
sub
sub
mov
pop
xor
and
lea
lock
je
lock
sti
repnz
cmpsl
mov
clc
hlt
fs
sbb
in
aam
ljmp
and
xchg
imul
xchg
mov
mov
cli
outsl
test
mov
test
inc
fwait
in
or
mov
cmp
xchg
loop
subl
pop
or
dec
leave
mov
pusha
bound
push
scas
sub
test
je
and
add
pusha
iret
sbb
imul
add
and
xchg
test
pop
loopne
fwait
outsl
stos
mov
dec
decb
inc
mov
mov
jle
push
icebp
push
cmpsb
std
sub
add
mov
ret
mov
dec
mov
inc
insb
or
out
repnz
sub
in
out
jge
je
jp
cmp
inc
jmp
xor
call
xchg
mov
dec
es
jmp
ljmp
jnp
lret
mov
into
jg
lcall
fnstsw
mov
adc
ljmp
xor
fdivrl
rcr
loopne
and
mov
and
push
inc
mov
test
mov
or
je
xchg
mov
mov
ljmp
roll
jo
loope
cli
adc
xchg
pop
add
mov
notb
insl
mov
inc
dec
dec
add
lock
data16
idivb
add
aaa
mov
movsb
sti
xchg
cmp
and
frstor
cmpsb
notl
ret
sbb
push
xor
xchg
pop
push
sub
sbb
add
sbb
int3
lea
jne
loopne
cmpsl
pushf
xchg
inc
xor
test
cmp
aaa
loop
sbb
inc
sub
call
xchg
bsr
jmp
les
lcall
xchg
jl
mov
scas
dec
rcrb
insb
scas
adc
add
add
jge
inc
popa
je
push
stos
push
and
aas
and
out
pop
pop
adc
jno
add
cmp
inc
pop
lods
mov
inc
mov
xor
push
fsubrl
cmp
nop
add
pusha
xchg
jge
in
and
pop
aas
lds
and
xor
push
call
cmc
mov
push
repnz
jb
sbb
xlat
pop
pushf
mov
mov
mov
lret
xchg
fwait
rcrl
pop
push
inc
addr16
adc
fs
je
jle
sub
imul
xor
mov
inc
sub
dec
fisubs
sub
cmp
adc
push
mov
inc
sbb
cmpsb
mov
or
sbb
jp
xchg
test
bound
insl
adcb
fsubrl
sub
mov
cs
xor
decl
or
rclb
jge
div
xchg
fwait
jg
sbb
and
or
push
scas
push
cmp
push
nop
pop
dec
and
dec
lea
jb
or
clc
out
push
mov
push
jb
adc
cli
jecxz
orb
push
leave
mov
clc
pop
insl
loop
xchg
jp
fsubs
daa
frstor
enter
insb
scas
std
or
rcrb
push
movsb
ret
sbb
rcr
or
dec
push
jne
inc
mov
popf
push
test
and
add
loope
dec
mov
dec
mov
mov
movb
adc
dec
loope
and
int
clc
jecxz
dec
loop
fistpll
dec
add
sub
and
mov
btr
rcrb
cmc
mov
dec
cmp
rorb
sti
jbe
adc
mov
cmp
leave
popa
and
or
push
test
jecxz
mov
out
ljmp
hlt
jo
movsb
sbb
out
and
les
mov
sbb
ret
jp
adc
push
jnp
push
add
testb
mov
lcall
pop
ret
bound
mov
adc
sbb
and
iret
shlb
loop
js
and
mov
in
into
mov
inc
enter
mov
fmulp
call
js
xchg
pusha
arpl
cmp
lret
ret
jmp
lret
cwtl
push
push
push
movsl
push
push
xchg
fwait
push
inc
movsl
pop
pop
pop
mov
pop
aad
sbb
jge
adc
sbb
xchg
sub
outsb
xlat
mov
test
aam
push
iret
pop
mov
stos
loopne
sbb
xchg
das
and
inc
movl
cli
and
mov
call
xor
push
leave
and
jo
cmp
aam
xchg
ret
fcmove
icebp
sti
fs
mov
inc
jg
sbb
add
je
push
mov
les
mov
jmp
std
push
jle
aas
movsb
mov
mov
push
shlb
cs
fistpll
leave
adc
out
jnp
sbb
pop
cmc
cmovg
out
test
addr16
jb
mov
inc
mov
cmpl
push
loop
cld
pop
mov
hlt
jmp
rorl
adc
scas
add
lods
out
out
jle
cli
rclb
jno
repnz
jge
les
xlat
cmp
fwait
call
inc
out
pop
mov
clc
adc
push
adc
adc
orl
jb
xor
inc
adc
add
jmp
push
fs
jmp
aaa
cmp
mov
aam
in
stos
sub
daa
cmp
out
inc
out
push
ret
out
insl
cmp
in
cld
movsl
lods
adc
scas
pop
lock
ss
mov
stc
rorl
adc
jae
insb
xor
dec
push
sar
xchg
adc
inc
popa
ret
hlt
xor
test
clc
add
cmp
test
ficompl
repnz
rol
fidivs
negb
enter
cmp
jnp
js
jno
mov
aaa
pop
into
lds
popf
sahf
mov
nop
stos
repz
adcl
push
frstor
test
test
test
fs
or
lea
sub
inc
xchg
push
sub
gs
inc
hlt
sti
out
or
dec
rolb
jmp
sarl
lock
sub
cmpsb
pop
imul
push
sub
jno
add
in
push
mov
push
cmc
pusha
cli
icebp
push
pop
adc
clc
mov
mov
ds
ds
and
mov
cmp
inc
jmp
mov
shrl
in
jecxz
fldln2
xchg
aad
pushf
jnp
cwtl
jo
add
ljmp
cld
fisubs
push
cmp
and
or
insb
movsb
cmpsl
and
ror
out
clc
and
mov
jns
pop
mov
in
aam
pop
mov
stos
or
add
mov
sarb
and
cmpsb
adcb
xchg
xchg
pop
mov
cmp
std
cmp
ds
push
test
push
mov
flds
cmp
mov
dec
push
mov
dec
xchg
shrb
lret
and
adc
jns
mov
adc
jmp
clc
and
sbb
arpl
fiadds
aaa
into
out
popa
pop
pop
arpl
add
xchg
adc
jb
jge
mov
in
ss
mov
je
test
addr16
cmp
imul
mov
pop
fisttpl
fdivs
push
xchg
mov
and
aas
outsb
dec
mov
push
mov
mov
mov
sub
push
in
inc
pop
icebp
pop
das
andb
test
cmc
fbstp
jmp
scas
sbb
push
xor
adc
and
cmp
icebp
rcrb
cs
stos
mov
mov
dec
test
dec
out
sbb
mov
xor
iret
mov
lcall
test
mov
gs
movsb
test
sbb
mov
orb
dec
sbb
sbb
test
das
pop
adc
cmp
shl
mov
pushf
and
jb
scas
es
push
rorl
cmc
popa
mov
and
movb
add
pop
in
out
das
cs
jecxz
sbb
xlat
pop
xlat
cmp
or
scas
pop
push
jp
jle
jp
mov
mov
cmp
ljmp
add
push
incl
movsb
sbb
in
add
lret
jns
cmp
pop
push
lcall
lret
in
add
adc
add
lea
into
loop
aad
mov
xor
addr16
pop
fcomi
push
sub
repz
adc
rcll
in
repnz
xor
sbb
or
lods
xchg
insb
jmp
shlb
xchg
pop
mov
pop
push
ljmp
xchg
insb
clc
lret
xor
mov
dec
in
in
pop
movsb
insb
testb
repnz
mov
lahf
xchg
loopne
pushf
icebp
cmp
pop
mov
shl
sti
out
pushf
out
sub
push
or
mov
jne
mov
push
and
add
or
jle
fisttps
xor
scas
adc
test
cmp
inc
cmpsl
test
xchg
xchg
push
pop
sbb
mov
call
adc
cmp
in
test
leave
mov
aad
cwtl
les
xor
push
out
sub
movsl
cmp
xchg
imul
mov
push
mov
and
std
cmpsl
test
add
or
in
mov
cmp
inc
jle
imul
data16
cmp
mov
loope
sbb
jecxz
popf
scas
xchg
mov
arpl
adc
cltd
jl
sub
mov
sbb
aas
es
add
hlt
or
lret
or
xor
cwtl
push
xchg
stos
jg
test
es
fldt
xor
enter
testb
dec
push
fs
out
movb
jl
lcall
ftst
dec
and
stos
xlat
dec
sub
xchg
mov
cmp
sbb
ja
int3
xor
inc
mov
fsubrs
mov
hlt
lcall
sbb
cmc
sbb
dec
lods
lea
nop
subl
push
and
dec
xchg
fbld
scas
mov
xlat
adc
pop
jne
add
adc
pop
shr
mov
rcrb
adc
das
into
mov
sbb
jle
repnz
mov
add
outsb
add
jb
in
mov
push
ss
test
mov
pop
dec
adc
mov
scas
ret
mov
scas
xor
popf
lcall
iret
insb
icebp
icebp
repnz
insb
mov
lods
ds
mov
push
clc
cmc
fadds
cmp
dec
sbb
pop
in
ret
addr16
aaa
mov
xchg
dec
sub
xor
lea
jae
mov
mov
jb
jbe
movsb
mov
inc
jno
in
imul
add
out
repnz
test
inc
or
clc
push
adc
lret
pop
and
mov
xor
orl
xchg
out
push
mov
mov
imul
jbe
cs
sub
or
leave
sbb
inc
aas
loop
mov
jno
cmpsb
adc
fsubs
push
pop
in
jae
icebp
loopne
sbb
dec
push
divb
jl
sub
and
cmp
xor
push
fstpt
sbb
rolb
xor
aaa
call
inc
loope
inc
jle
scas
jp
push
aad
lret
mov
outsb
dec
mov
dec
pop
add
lcall
imul
inc
xchg
test
or
jbe
jle
jne
shufps
mov
xlat
xor
mov
adcb
cwtl
sub
push
sbb
xor
cmp
mov
push
and
mov
movsl
cmp
jae
out
imul
inc
jg
sahf
push
pop
aaa
sub
push
mov
sbb
xchg
mov
adc
sbb
mov
rorl
and
dec
scas
dec
adc
out
or
les
mov
movsl
int3
loope
mull
mov
test
mov
jp
and
mov
mov
mov
sti
sub
cmpsl
push
cmp
and
or
lret
lea
sub
xchg
aaa
testb
dec
test
cltd
popa
inc
pop
push
arpl
inc
arpl
cmc
dec
rclb
or
ds
stos
bound
pop
shrb
inc
loop
mov
jecxz
pop
data16
jmp
sahf
and
adc
lods
out
dec
pop
aas
iret
push
inc
pop
adc
int3
inc
push
gs
jp
xchg
shl
fnstcw
repnz
data16
mov
mov
fsubrs
mov
andl
push
lcall
loopne
pushf
addr16
scas
push
or
xor
push
xchg
mov
push
mov
dec
enter
loopne
mov
mov
movsb
xchg
jecxz
iret
daa
lea
decb
mull
mov
fidivs
dec
xlat
cmpsb
repnz
inc
stos
iret
out
sub
and
jle
in
das
push
call
lea
mov
sbb
cltd
addb
mov
inc
call
mov
fnstsw
lcall
addr16
clc
or
and
stos
dec
sub
push
lret
sti
dec
out
mov
in
adc
scas
fiaddl
or
rorl
jmp
cmpsb
push
arpl
push
daa
ja
jno
movsb
mov
data16
ss
aas
rorb
adc
fwait
test
pop
sub
mov
scas
call
std
mov
mov
adc
lods
sbb
mov
jmp
sub
mov
xchg
stc
fs
dec
push
pop
add
in
sarb
push
in
gs
test
rcll
cmpsl
cwtl
mov
clc
lcall
sub
jb
mov
inc
aam
xchg
jb
ds
ljmp
je
nop
pop
xchg
scas
and
fmulp
js
adc
cmpsb
imul
clc
test
aam
lahf
imul
mov
inc
loopne
arpl
inc
out
xchg
scas
mov
xchg
mov
incb
jl
loop
mov
push
push
jl
push
idivb
inc
fmull
sahf
ss
dec
inc
cmc
movsl
rorb
ss
dec
movl
call
xchg
push
mov
mov
cmp
ja
loop
inc
stc
jmp
inc
sub
jae
push
out
dec
jg
cwtl
std
mov
fcmovu
jmp
xorl
fisttpll
insb
mov
push
sub
mov
mov
jne
xchg
pop
divb
arpl
int
mov
lods
xchg
ja
ror
aaa
btr
int
push
mov
sbbl
enter
call
mov
cmp
dec
iret
ret
cwtl
xor
adc
fistl
insb
sub
mov
cld
push
xchg
insb
test
idivl
mov
sbb
shlb
fsub
imul
das
imul
movsb
das
mov
andl
daa
lds
cmp
ja
jle
push
mov
aam
xchg
test
jg
mov
ret
subl
and
mov
push
pop
and
jmp
scas
xor
shl
andl
jmp
or
jecxz
enter
inc
mov
bound
or
cmc
dec
ja
push
cmpb
test
or
mov
enter
and
data16
push
jp
rcll
ja
fdecstp
fcoms
ret
sbb
pop
cmp
stos
mov
cmp
test
jb
jl
fs
xor
shrb
cmpsl
inc
adc
lcall
test
sahf
popf
das
insb
inc
or
inc
mov
stos
cmp
mov
dec
cltd
icebp
loop
shl
cmpsb
jp
mov
sub
jmp
adc
push
std
mov
in
outsl
sbb
rorl
mov
xchg
dec
sub
shrd
fsubrs
pop
push
cmp
sub
xchg
push
push
cmc
cmp
cmp
out
cwtl
cmp
lahf
sahf
call
pushf
mov
imul
insl
push
adcl
imul
sti
rorb
insb
cmpsl
in
imul
test
mov
mov
aad
push
and
nop
scas
movsb
pop
mov
push
mov
popa
pop
aam
aas
sbb
xor
xchg
shll
xchg
out
fincstp
push
mov
add
mov
lods
subl
push
push
cmpsl
jg
xor
jbe
dec
cmpsb
xchg
or
adc
arpl
mov
pusha
xchg
xor
cltd
pop
std
inc
fdivs
bound
cmp
inc
fsubrs
pop
cmp
frstor
jb
dec
push
cmpsb
fldenv
or
pop
jle
mov
cmc
pop
shrl
lahf
ja
sbb
ret
mov
mov
sbb
pop
fwait
test
call
ss
add
rcll
stos
bound
popa
xchg
ljmp
or
add
lods
jno
nop
mov
mov
ljmp
mov
int
mov
mul
xlat
loopne
out
push
push
pop
test
dec
into
xor
ret
out
inc
cmpl
loop
sbb
cli
cmp
sub
cwtl
xor
orl
xor
pop
jno
jbe
dec
or
fsubl
sarb
adc
movsl
loopne
jae
pushf
dec
cmpsl
addr16
aas
and
cmpsb
mov
loopne
pop
mov
fistps
movb
loopne
xorl
popf
mov
push
rorl
fisubl
fidivl
mov
cmp
cmc
dec
push
lods
sub
call
aad
in
and
lock
mov
or
push
incl
sarl
stc
cli
stc
cltd
loopne
mov
scas
and
sbb
jne
fdivrl
adc
testl
xchg
lcall
rcll
cmp
or
outsb
sti
les
insb
test
fwait
mov
incl
pop
sbb
fidivrs
mov
push
mov
mov
es
jp
sbb
nop
cld
stos
or
sub
scas
movsl
sbb
fnstcw
test
adc
bnd
or
mov
xchg
in
insb
gs
sub
mov
test
out
cmp
stc
sbb
aas
popf
sbb
mov
cmpsb
aaa
dec
jno
adc
xchg
fistl
xor
sbb
lahf
xchg
aaa
and
pop
ja
xchg
mov
imul
mov
dec
add
inc
fcmove
fiaddl
adcb
in
aad
es
aad
push
push
in
js
repz
pop
cs
stos
sbbl
or
loopne
js
ss
jno
adc
test
aas
xchg
es
fs
idivb
add
fistpl
fimuls
lea
cmpsl
mov
sub
jnp
push
call
lahf
bound
xchg
jmp
push
idivb
lds
dec
aam
adc
mov
sub
in
push
int3
dec
stos
adc
cmp
and
inc
lds
push
sbb
mov
movsb
imul
std
pusha
out
pop
push
cmp
cltd
or
iret
or
dec
mov
sub
bound
cmpsb
ret
leave
scas
mov
dec
mov
insl
xor
testl
sub
lret
mov
push
sub
int3
add
mov
cwtl
mov
addr16
stc
out
cmp
imul
or
fs
xchg
js
hlt
sub
in
notl
repz
xor
inc
sti
pop
push
mov
cmpsl
call
push
mov
inc
lret
iret
mov
fwait
sbb
xchg
rorl
out
mov
add
test
fs
gs
add
sub
mov
or
sub
xor
adc
mov
hlt
subl
lock
xchg
cmp
lods
aam
mov
jo
mov
hlt
jno
jns
addr16
inc
out
das
mov
dec
insl
repnz
stos
xchg
pop
mov
cmp
aad
lods
or
mov
dec
addr16
jle
pop
or
jno
xor
stos
fcompl
fistps
sbb
aas
push
dec
jmp
or
jge
xlat
ljmp
sub
clc
push
mov
jo
xor
dec
cmpsb
dec
xor
or
ds
cmp
pusha
and
mov
into
subb
xlat
jmp
aaa
xor
ljmp
les
inc
adc
xor
fsubrl
push
ss
jl
sahf
and
mov
push
jle
jns
push
popf
lcall
lock
outsl
idivb
jnp
mov
xchg
lea
pushf
or
imul
pop
loope
sub
popa
out
cmpsl
lods
sub
aam
add
cmp
dec
adc
dec
xchg
outsl
cmp
in
cmc
movsb
mov
xlat
cli
int
xchg
push
jge
out
or
fistpl
shrl
mov
cmp
and
ss
lds
ret
adc
cltd
cmc
add
iret
test
add
and
shll
dec
imul
pop
sbb
add
pop
mov
xor
clc
ror
testl
mov
rolb
out
dec
test
inc
aad
push
daa
cmp
add
mov
dec
fidivl
aas
xchg
jne
adc
sbb
mov
xor
jo
inc
push
insl
adc
out
pop
cli
lcall
sbb
sbb
or
mov
sub
leave
lret
in
add
les
stos
sbb
dec
xlat
jne
xchg
push
js
out
pop
loopne
repnz
mov
lds
scas
ja
inc
push
repz
rcll
pop
repz
mov
push
push
mov
lret
jno
xor
push
sub
mov
int
and
and
mov
inc
dec
fs
inc
fcomi
scas
repnz
dec
stc
jbe
scas
xchg
sbb
add
lods
int3
in
xchg
sahf
sarb
mov
mov
pop
cmp
out
mov
cwtl
btrl
pop
sub
sbb
inc
scas
dec
jns
push
roll
inc
cmpsb
test
push
xchg
cmpsb
ds
xlat
repz
lds
inc
mov
xor
shlb
xor
ds
mov
std
cmpsb
adc
xchg
sub
shlb
roll
jl
int3
test
xchg
jo
mov
jne
dec
insb
popf
rep
jno
fidivs
cmp
mov
addb
push
or
sbb
xchg
shlb
testb
or
push
mov
test
scas
xchg
bound
ds
cmp
adc
outsb
sbb
push
inc
scas
in
inc
mov
pop
jmp
dec
jno
fdivs
das
push
mov
pop
mov
or
jge
inc
in
mulb
inc
out
aad
ret
jmp
movsl
mov
popf
lret
in
pop
movsl
cmp
adc
cli
xchg
out
sarl
icebp
addb
jecxz
fwait
cmc
pop
mov
bound
orb
cli
or
dec
les
push
add
sar
mov
cmp
andl
int
faddl
jb
fbstp
sub
add
pop
fdiv
jno
fld
lods
push
test
cmpsl
shrb
lret
rcrl
xor
xlat
add
or
in
mov
fstpt
jo
xlat
jle
add
push
add
cmp
pushf
xor
jne
sarb
lea
fcoms
imul
lret
jl
movb
imul
sti
or
aam
mov
faddl
cs
lods
mov
xor
in
mov
sbb
adc
xor
lods
ja
je
dec
loopne
jle
dec
insl
notb
stos
pop
mov
xchg
shll
mov
cmp
xlat
jnp
ss
stos
inc
jmp
icebp
xchg
notl
loope
mov
mov
mov
popa
ret
or
outsl
inc
jp
inc
mov
clc
test
leave
cmpsl
sahf
daa
les
inc
mov
lods
xor
clc
adc
stc
inc
sub
xchg
xchg
imul
sub
or
pop
jp
scas
xchg
mov
into
loope
add
jo
negb
push
mov
xor
data16
roll
js
iret
ret
nopl
dec
cmp
lret
mov
cmp
bnd
sti
mov
data16
outsl
test
movl
cmp
add
sti
lea
pushf
sub
push
xchg
orl
je
add
test
repnz
pop
stos
fisttpll
jl
pop
xor
push
dec
push
fs
in
jecxz
sahf
jns
test
ss
add
int
xchg
adc
dec
jle
mov
jb
icebp
dec
sbb
test
rorl
and
cmp
mov
popa
call
popf
ljmp
xlat
add
dec
sbb
insb
enter
jno
dec
xchg
mov
mov
cmpsl
add
push
sbb
dec
dec
push
cltd
dec
in
jmp
lods
push
push
out
daa
hlt
sub
push
add
xchg
cld
popf
sbb
cmp
mov
lcall
cli
pop
out
xchg
jl
mov
fnsave
gs
es
mov
xlat
inc
mov
jbe
xchg
lcall
scas
pushf
mov
cmp
out
add
mov
rcrl
sbb
hlt
sub
dec
push
stos
xchg
push
repnz
in
shlb
mov
mov
out
inc
cmp
test
stc
jae
loope
xchg
pop
test
push
jg
and
stc
aad
jp
mov
or
inc
xchg
cmc
mov
pop
mov
shll
mov
cld
out
leave
add
hlt
sub
inc
addr16
popa
xor
daa
xchg
aaa
lret
das
imul
inc
dec
or
and
cmpsl
push
nop
inc
dec
ja
pop
mov
mov
mov
add
xchg
or
fcmovb
cmp
xor
or
jnp
popf
add
jle
push
jbe
jns
lret
testl
mov
fwait
rcrb
jne
fsts
pop
ja
cmc
fistps
dec
sub
ss
push
mov
pop
fldt
push
jb
or
and
ret
mov
adc
pop
jnp
ds
icebp
sti
daa
or
sub
xor
mov
icebp
jb
std
pusha
