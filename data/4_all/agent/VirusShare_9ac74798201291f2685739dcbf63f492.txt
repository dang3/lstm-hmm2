mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
ljmp
add
jb
gs
push
jns
je
insl
add
xor
or
jae
jge
inc
push
push
xor
push
or
out
shrb
add
push
outsl
jb
dec
fisubrl
outsb
je
xorb
jg
test
insl
insb
jg
fdecstp
add
aaa
mov
gs
out
fidivrl
mov
lcall
das
push
int3
fs
call
adc
push
outsl
imul
ss
add
adc
add
ss
icebp
add
cmp
sub
pop
push
push
inc
jns
pop
rclb
incl
or
je
jbe
dec
jae
je
rcrb
pause
ss
push
adc
and
add
mov
or
push
fs
mov
inc
outsl
jne
testl
out
insl
jo
aas
ds
addr16
jne
jb
arpl
daa
call
fstpl
call
jb
fdivr
es
push
xchg
in
idivl
or
sbb
adc
das
push
imul
das
dec
sub
or
shl
js
daa
jg
adc
cmp
pop
add
pop
xchg
cmp
test
pop
add
mov
adc
jae
mov
insl
xor
loopne
or
daa
lock
es
push
popa
push
popa
fstp
cwtl
loope
push
adc
or
and
cld
jg
push
push
inc
insb
popa
jae
mov
sub
pop
jg
push
inc
push
push
dec
push
inc
cs
add
rolb
cmp
scas
std
aad
inc
xor
sbb
push
stc
into
mov
or
xor
xlat
cwtl
fucomp
aaa
cli
adc
push
icebp
jb
popa
arpl
adc
mov
add
fisttps
push
aaa
sbb
inc
repnz
xchg
adc
dec
es
adc
dec
jnp
push
push
push
popa
push
insb
or
data16
and
adc
daa
cmp
mov
dec
nop
insb
inc
and
pop
and
repnz
xchg
pop
inc
adc
sbb
adc
les
leave
xchg
or
jne
imulb
pop
imul
fsts
cld
push
fs
push
mov
mov
cli
and
xchg
popa
jge
adc
imul
sbb
das
sbb
push
movsl
cmp
xlat
push
dec
pop
push
push
push
push
ds
repz
jbe
inc
testl
dec
cmp
repz
inc
outsb
push
inc
lods
fldt
jb
sbb
pop
cmp
jno
sbb
jb
icebp
sub
cmp
lahf
and
minps
outsl
and
sbb
movlps
inc
stc
mov
aas
dec
add
js
dec
maskmovq
xchg
das
push
jle
pushl
sbb
jmp
call
lret
dec
cld
decl
sbb
dec
add
pushl
sbb
decb
sub
bound
arpl
mov
push
inc
movsb
fsubs
clc
test
mov
or
data16
out
mov
and
dec
add
inc
orl
rcrl
lret
fisubs
inc
or
push
lds
cs
inc
clc
add
jnp
jp
inc
push
jne
xor
mov
xor
sub
mov
lea
push
adc
push
rol
push
xor
push
dec
popa
insl
and
jmp
in
adc
add
add
in
loopne
iret
add
adc
into
lea
dec
jno
adc
push
loopne
pop
jno
popa
dec
je
or
pusha
mov
sbbb
aad
fisubl
add
push
sub
negb
push
lods
and
jp
push
pushf
mov
xchg
pop
push
push
push
or
outsl
insl
jae
ffree
jbe
jle
inc
add
jp
and
adc
push
or
jp
in
in
xchg
cmp
adc
adc
not
adc
arpl
aam
jo
adc
or
add
sub
sbb
xor
adc
subl
imul
and
xchg
bound
inc
jae
addb
cs
sahf
inc
push
cs
add
inc
xlat
dec
adc
add
cli
add
cltd
imul
push
mov
jmp
xchg
adc
jnp
add
sti
add
inc
and
add
push
sbb
sbb
movsl
push
push
push
loope
jno
push
ret
stos
sub
add
add
push
test
or
insl
lds
les
or
adc
gs
fs
pop
in
mov
js
jo
imul
fs
lods
aaa
or
jmp
lahf
or
sub
sbb
xor
cwtl
insb
test
lock
jb
arpl
movsl
pusha
test
sub
gs
neg
or
adc
inc
imul
mov
push
sbb
pop
dec
pop
and
js
popa
fnstsw
jnp
pusha
adc
insb
scas
outsb
fs
jb
or
dec
gs
sub
sub
adc
xor
mov
dec
push
fadds
mov
jmp
or
xchg
popa
inc
xchg
or
shlb
mov
inc
pop
call
xor
insl
push
lds
imul
dec
or
fcoms
int
mov
pop
push
addl
jmp
adc
xor
dec
cmpsb
push
push
popa
adc
mov
addr16
insb
sbb
mov
push
add
push
daa
lods
pop
loop
adc
sub
inc
insb
das
inc
cmpsl
int3
scas
push
fsubrs
cmp
scas
imul
test
mov
or
cmp
repnz
ss
aas
push
popa
jo
mov
mov
dec
test
int3
push
stos
popf
dec
subl
popa
popa
add
pusha
sub
xchg
pop
inc
fdivs
testb
pop
mov
or
mov
or
jl
add
aas
or
mov
pop
jl
adc
push
outsl
insl
inc
je
in
es
bound
mov
xor
outsl
and
xor
or
jp
fmull
add
das
or
fcoml
mov
pop
es
push
inc
cmp
std
cli
loopne
add
and
or
fs
jb
xlat
lock
add
std
mov
cmp
or
pop
fcmove
push
sub
push
inc
mov
mov
inc
addr16
daa
push
push
dec
adc
pop
mov
sub
pop
test
jno
sub
jbe
das
movsb
xlat
cmp
mov
mov
hlt
gs
imul
dec
int3
push
push
push
adcl
xchg
xchg
adc
or
add
filds
pop
xchg
insl
sbb
dec
enter
sahf
or
rcr
dec
enter
dec
and
push
stc
inc
jo
and
xchg
or
inc
nop
or
push
int3
scas
fildll
es
add
loopne
addr16
or
cmpsb
xor
mov
or
arpl
or
sbb
out
push
push
fadd
ja
daa
hlt
or
adc
jecxz
push
pop
pop
or
lods
dec
mov
xchg
cmp
sub
pusha
movsl
push
sub
mov
ja
push
mov
mov
xchg
movsb
sbb
and
mov
ret
push
xlat
and
popf
dec
push
or
sub
or
test
loope
insb
sbb
jno
add
fisubl
jge
sub
pop
sub
xor
push
outsb
imul
fs
imul
adc
test
int
and
or
xor
and
dec
or
dec
lock
push
lock
push
mov
push
ret
inc
and
and
sbb
jae
sub
xchg
sub
pop
inc
pop
push
sub
push
mov
mov
xchg
sub
push
popa
ja
mov
and
dec
sbb
stc
adc
out
sub
jmp
daa
fucomip
test
cli
and
mov
xchg
and
add
or
add
add
daa
push
fwait
or
jno
fistpl
mov
int
in
lret
mov
or
arpl
jmp
push
sarl
sub
mov
and
jg
mov
or
imul
push
push
xor
imul
pop
andb
add
sti
insb
iret
add
or
cld
js
mov
stos
mov
xchg
scas
xchg
cmpsb
icebp
sub
or
es
adc
adc
push
add
dec
pop
cmp
adc
int
inc
sub
or
or
cmp
fldl
or
loope
push
mov
fcoms
or
push
loope
or
fcomps
imul
es
in
lock
push
add
pop
push
cltd
out
js
roll
gs
mov
add
mov
sub
das
adc
cmpsb
sub
adcb
lds
daa
popa
cltd
sahf
push
fdivl
daa
push
or
mov
and
shlb
or
and
pop
push
filds
lods
mov
mov
aad
pushf
imul
pop
mov
clc
and
xchg
sub
or
ffree
popa
in
xchg
or
scas
lea
xor
lds
cmpxchg
arpl
xor
dec
jne
bound
or
mov
outsb
adc
xchg
mov
popa
adc
lock
cmpsl
sub
decl
lea
mov
mov
lock
jne
ret
nop
push
insb
pop
mov
sbb
mov
es
roll
sarb
dec
xor
push
mov
repnz
ja
xchg
imul
cmp
in
xor
sub
in
in
and
sbb
in
in
adc
or
xor
in
add
cld
stos
pusha
daa
daa
pop
jb
hlt
lock
daa
daa
daa
daa
pop
call
daa
daa
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
mov
test
daa
daa
daa
daa
dec
dec
movsb
mov
inc
cmp
pushf
daa
daa
daa
daa
cwtl
xchg
nop
mov
das
daa
daa
mov
or
scas
clc
jle
movl
mov
insb
testb
je
movzwl
jecxz
and
mov
inc
inc
pop
ret
data16
jl
jne
fmull
js
add
call
pop
fsubs
dec
dec
and
mov
dec
and
imul
xor
mov
jne
xor
sub
inc
out
and
dec
mov
push
imul
outsl
data16
insb
and
fdiv
fstl
je
popa
inc
inc
bound
inc
sbb
inc
mov
mov
gs
lcall
popa
imul
ljmp
push
int
test
jnp
jl
jae
and
scas
arpl
jl
mov
jae
jle
popa
push
or
pop
dec
leave
sbbb
mov
pop
outsb
and
test
and
pop
xchg
add
orl
decl
push
loopne
cmpxchg
iret
mov
mov
mov
mov
push
dec
add
inc
or
and
sub
xorl
iret
outsb
cmp
inc
adc
sbb
push
lcall
or
sbb
lods
fstps
cs
jp
add
jp
cmp
rcrl
and
imul
cmpsb
pop
mov
pop
xor
cmp
pop
sbbb
inc
imul
pop
into
sub
add
add
neg
jns
fistpll
add
fnstcw
push
cmp
add
js
and
mov
inc
sti
jnp
cltd
pop
add
dec
or
mov
fbld
nop
call
cmp
mov
mov
mov
push
sub
lret
add
mov
mov
sti
rol
and
pop
mov
and
icebp
push
cs
ljmp
ja
sbb
and
add
xchg
mov
cmp
mov
push
add
divl
loopne
sbb
mov
jnp
push
ret
cmpl
cmp
idivb
cld
add
orl
adc
dec
add
cld
mov
cmp
dec
pop
mov
sti
push
and
sub
cmp
xor
in
ret
cmp
mov
inc
fdivr
mov
push
add
and
push
test
out
mov
das
mov
push
mov
rorl
push
mov
sub
std
sbb
int
loopne
sub
mov
lret
mov
mov
jmp
rolb
sbb
xor
mov
int
adc
cmpb
jmp
fisttpll
mov
frstor
out
pusha
mov
add
pop
psubusb
mov
sbb
xor
jle
adc
in
push
push
mov
adc
lahf
mov
movb
pop
push
jo
xor
pushf
push
xchg
pop
lock
movb
outsl
or
pushf
fucomi
sti
stc
pop
shlb
mov
sbb
lds
jne
add
ret
pop
pop
pop
pop
fsubrp
clc
std
mov
mov
sub
jae
jle
adc
mov
push
and
or
test
jne
push
shl
push
jns
add
jmp
or
cmp
sti
mov
and
push
push
lea
out
leave
in
adc
pop
push
jne
push
push
mov
cmp
jbe
popf
call
add
jmp
test
jne
lods
fimull
and
fisubrs
adc
sub
dec
nop
inc
loopne
repnz
sub
pusha
cmp
and
jmp
fidivrs
fsubp
add
bound
add
cmp
jbe
ljmp
out
mov
adc
xchg
xor
jo,pt
or
cmp
jle
push
fs
mov
mov
ds
cmp
jae
mov
out
dec
and
cmp
cmp
jae
fdiv
pusha
outsb
cmp
lods
iret
lea
xchg
adc
push
mov
cltd
sbb
test
add
dec
pusha
or
xchg
pop
push
std
sub
add
jbe
ret
push
out
add
fsubl
lcall
mov
or
loopne
shr
cmp
jb
addb
push
ja
jmp
dec
and
jle
mov
sbbb
ret
jl
cwtl
and
cmp
hlt
bound
dec
les
cld
mov
lds
gs
mov
inc
add
mov
mov
test
push
push
sub
idiv
je
and
mov
dec
adc
mov
add
sarl
or
jbe
mov
cmp
jbe
mov
adc
add
mov
shl
lods
pusha
and
and
and
sbb
nop
lock
xor
aas
je
imul
jecxz
imul
mov
inc
and
xchg
loopne
or
xchg
movsbl
jg
mov
bsf
lea
adcb
sbb
lea
add
push
test
add
cmp
jne
mov
movsl
ret
push
jne
btr
mov
push
jle
pusha
or
jb
mov
inc
or
aaa
dec
jnp
sub
lea
mov
mov
sbb
mov
mov
sbb
add
iret
sub
sub
cmp
and
inc
sbb
hlt
pop
dec
mov
rclb
mov
cmp
cld
testl
mov
mov
movl
sbb
lea
push
ret
rcll
decl
add
sub
mov
addr16
fisttps
dec
sub
jge
sub
mov
movsb
or
fsubr
test
loop
jecxz
mov
lea
shl
loopne
or
pushl
fwait
jle
loopne
push
je
loope
rol
mov
jmp
mov
cmp
int
rorb
rol
loopne
push
xor
add
adc
fdivr
sub
pop
xor
cld
jmp
mov
arpl
dec
mov
or
pop
test
inc
inc
cmp
nop
mov
add
xchg
adc
test
push
pop
xorb
push
mov
xchg
or
mov
mov
fisttps
cmp
sub
nop
and
mov
push
add
sub
add
sbb
mov
jne
subl
mov
ljmp
inc
inc
fdivs
mov
xchg
dec
pop
leave
xchg
out
mov
dec
in
lret
cmpsl
ficoms
push
stos
mov
inc
adc
cmp
jne
and
mov
push
cld
iret
sub
loope
dec
lds
xchg
scas
ljmp
jmp
xor
mov
aam
inc
push
push
adc
out
pop
pop
lock
fmull
scas
testl
sub
xor
testb
jne
cmp
loopne
adc
push
lea
and
xchg
pusha
ret
ret
mov
xlat
mov
pop
pop
clc
mov
lret
cmp
xchg
ret
pop
dec
clc
sub
sub
cmpsl
xor
test
xchg
mov
sub
or
push
lahf
mov
mov
cmp
sbb
add
fmull
movsl
movl
add
sub
loopne
add
sub
roll
in
or
in
or
xchg
jbe
lcall
fs
jb
jns
add
cmpl
lds
push
mov
mov
mov
jg
or
push
jg
test
lea
push
mov
loop
roll
add
add
sub
jbe
clc
iret
mov
call
xchg
fistpll
adc
testb
mov
add
jecxz
cmp
push
xchg
mov
cld
dec
cvttps2pi
cmp
jb
sbb
adc
jae
push
int3
push
aad
faddl
mov
lea
add
lds
add
sub
cmp
mov
pop
inc
in
mov
or
cmp
pop
cld
or
mov
push
mov
add
or
stos
jg
insb
adc
pop
data16
mov
roll
xlat
sub
add
addl
jl
or
lea
or
xorl
mov
call
imul
add
scas
loope
cmp
cmp
dec
fistps
iret
fs
pusha
pusha
lcall
psubq
iret
ja
cmp
orb
pop
mov
call
mov
loopne
ljmp
rolb
add
pop
add
xor
andl
push
add
push
ret
push
add
jb
lea
jg
mov
lds
add
adc
fisttpll
ret
pop
inc
push
push
fcoms
loop
pop
shlw
imul
xor
jecxz
dec
shll
aad
jp
push
jecxz
lea
or
lcall
cltd
jae
neg
fldz
fstl
add
js
or
rcr
pop
insb
outsb
mov
cmp
rorl
ret
test
jne
xor
dec
jnp
incl
adc
adc
pop
arpl
jae
rclb
fdivrs
je
je
mov
jg
pop
and
jle
mov
inc
adc
mov
cmp
bound
sub
aam
add
fdivs
inc
add
fmuls
dec
mov
ffreep
xchg
push
scas
add
mul
fs
mov
popa
rcll
loop
shr
mov
add
cmpsb
sbb
enter
fadds
inc
sbb
push
hlt
aas
wbinvd
shrl
xchg
dec
aaa
mov
pop
sbb
pop
enter
add
push
cmp
add
jg
nop
lret
aas
adc
pop
xor
inc
add
cld
xchg
push
mov
mov
inc
cmp
inc
cmp
add
movaps
jle
scas
mov
ds
xor
sbb
imul
fistpl
xor
mov
cld
mov
push
push
dec
push
in
or
shll
pop
or
push
lock
aaa
mov
jae
ss
mov
push
adc
scas
icebp
sti
testb
jb
adc
adc
or
jg
testb
je
adc
icebp
shr
mov
pop
rorb
notl
mov
jecxz
mov
sbb
jge
push
popa
adc
test
sub
and
sarb
sbb
sbb
test
fnsave
mov
adc
lea
mov
and
cmp
sbb
jle
pop
pop
incb
and
mov
mov
pop
mov
dec
cs
sub
pop
loopne
movsb
outsb
roll
fsubrl
sbb
xchg
push
ficoml
in
movsb
stos
aaa
inc
setne
jnp
mull
aas
inc
sbb
and
jns
jp
push
dec
pushf
sub
out
ds
rorl
lock
push
jp
mov
push
dec
sarb
mov
cmp
mov
lods
add
push
mov
or
and
or
frstor
sbb
sarb
jo
cld
mov
call
pop
inc
add
lea
lea
lea
inc
lock
mov
xor
sub
testb
jne
sub
mov
jbe
mov
or
cmp
outsb
pop
aaa
cs
orl
incb
scas
add
pushf
xchg
jge
jge
adc
push
add
call
mov
fiaddl
fs
lock
imull
rorb
and
js
lock
loop
push
or
xor
mov
sub
inc
filds
jg
dec
sahf
xchg
jl
jle
adc
cmpb
xor
and
cmp
jae
add
pusha
jmp
decl
jne
cmp
test
adc
jmp
xchg
loopne
ja
mov
loopne
adcl
and
cltd
filds
xchg
xor
xchg
add
mov
pop
clc
je
cmpl
notb
inc
cmp
jg
lock
idivb
clc
mov
inc
filds
add
xor
fdivrs
jne
jbe
loope
inc
cmpsl
mov
daa
lret
popa
mov
xor
mulb
loopne
sahf
stos
mov
mov
mov
das
sbb
or
faddl
les
clc
hlt
and
clc
data16
aam
cli
aad
mov
daa
in
arpl
dec
mov
xor
dec
cmp
test
jmp
push
fldcw
pop
pop
jmp
mov
lea
jge
and
push
mov
hlt
enter
movl
loope
xchg
cmp
ret
arpl
jne
mov
mov
sbb
jns
aaa
flds
cmc
pop
adc
push
in
sbb
ds
add
jl
cmpb
mov
std
xor
rcrl
lea
pop
sbb
and
movl
adc
jp
mov
dec
out
cmp
in
loope
jb
push
mov
int
inc
popa
push
push
fdiv
lret
hlt
xchg
sbbb
cmpl
xchg
adc
dec
sbb
lock
mov
in
adc
push
test
inc
push
or
lock
mov
mov
loopne
sti
xor
and
push
divb
xor
aam
mov
jb
or
cld
jg
add
je
dec
je
jmp
or
jo
inc
mov
mov
inc
insb
or
inc
cld
addr16
xor
enter
push
xchg
dec
mov
test
test
stos
push
push
cmpsb
dec
xchg
push
sbbl
insb
cmp
ja
fnstsw
test
sub
push
pop
pop
sub
pop
mov
inc
inc
xor
xchg
call
dec
xchg
cltd
add
sbb
jg
ja
inc
xorl
dec
jne
mov
fldt
je
push
shlb
xchg
sbb
dec
mov
xor
mov
data16
sub
jne
mov
cmp
out
add
cmp
jbe
mov
pop
mov
ja
bound
ret
aaa
jne
nop
cmp
pop
mov
bound
call
sub
mov
or
repnz
lock
shll
add
add
int
in
add
fildll
call
jbe
pop
scas
enter
loop
push
imul
push
in
loopne
add
mov
hlt
pop
xor
loope
lea
add
shll
pushf
jmp
and
mov
sub
ja
or
shl
xlat
mov
xor
sbb
sti
div
imul
mov
or
xchg
dec
xor
cmc
xor
pop
adc
mov
mov
add
fdivrs
ret
repz
adc
movsb
adc
fsubl
push
push
mov
jne
mov
jmp
mov
or
shl
scas
mov
cmp
jne
mov
sub
pop
mov
dec
adc
add
or
jo
inc
mov
or
and
stos
sbb
repnz
or
sbb
mov
ficoms
out
lea
mov
inc
cmpl
and
dec
sbb
outsl
stc
jno
push
fmull
xor
push
fdiv
jp
mov
cmpsl
pop
ja
loopne
sbb
ss
mov
adc
adc
repz
mov
fidivrl
in
push
adc
ret
cmp
fwait
adc
xlat
pop
cmp
data16
pop
mov
shl
lahf
pop
jne
aas
push
add
xor
mov
inc
pusha
frstor
icebp
pop
or
xor
mov
jne
test
cld
pusha
jo
arpl
outsb
subb
cmp
ret
sbb
loope
adc
aas
add
cld
pusha
lods
push
and
or
mov
repz
jmp
out
ret
mov
cmpsl
imul
add
mov
jg
or
mov
jge
decl
sub
cwtl
inc
jmp
cmp
ja
movzbl
jo
adc
cmp
xchg
inc
decl
push
incl
in
adc
dec
jp
cwtl
pop
call
xchg
faddl
pop
pop
jne
out
inc
sbb
leave
aaa
fnstsw
stc
adc
lret
cmpsl
cmp
je
cmp
ja
sub
in
sbb
lea
sub
or
adc
push
adc
int3
inc
push
fidivl
mov
sarl
dec
push
adc
sub
cmp
push
jbe
out
mov
mov
push
neg
and
or
fldenv
pushf
sbb
ret
jle
rol
pop
or
shrl
lret
adc
jbe
adc
add
add
and
sub
pop
inc
cmc
pop
call
push
fildl
adc
testb
idiv
fnsave
mov
into
and
add
cltd
mov
pop
add
pop
cmp
push
add
add
mov
jmp
ja
insb
push
inc
add
cli
and
imul
jne
js
or
cmp
lods
lods
ret
dec
jmp
and
and
pop
jmp
inc
cmpsb
les
push
xchg
mov
xlat
dec
fcmovnbe
in
mov
and
xor
jmp
sbb
cmp
dec
adc
ljmp
cmp
insb
lcall
add
inc
mov
xor
inc
test
jne
push
arpl
cmpb
jmp
push
lret
gs
xor
clc
push
xor
cmp
test
adc
dec
jmp
mov
clc
aaa
das
add
jge
push
adc
sbb
sbb
pcmpgtd
fstps
jp
mov
fnstcw
pop
pop
xchg
std
fcomip
fldt
jl
add
call
fldcw
cld
fldcw
movb
or
cmp
dec
mov
mov
dec
scas
imul
add
pop
inc
fdivl
fcomps
mov
sti
lds
ss
jb
cmp
mov
in
xlat
jb
or
popw
sub
je
test
aas
mov
jae
cmpl
push
and
sbb
sbb
fimuls
js
push
sbb
push
cmp
jo
sub
mov
cmp
cmpsl
jnp
call
or
lea
push
mov
push
sbb
add
adc
inc
mov
push
out
clc
sbb
insl
jne
mov
mov
xor
andb
aaa
push
outsb
je
push
push
xor
pop
sbb
pop
jl
push
or
aas
notb
dec
push
loopne
adcb
add
outsb
cmp
sbb
xchg
add
push
mov
add
divb
mov
push
pop
js
xchg
outsb
ds
pop
xorb
cmp
inc
sbb
dec
dec
jmp
das
movsb
imul
shlb
and
jo
and
xor
dec
mov
test
push
push
push
lea
pop
ret
orl
sbb
cmp
mov
cmpl
dec
decw
dec
sti
xor
outsb
pushl
inc
pushf
inc
inc
out
orl
jae
js
xchg
push
aaa
int3
lret
pop
jg
mov
scas
rorl
mov
out
mov
test
scas
jae
cmpb
push
lret
out
push
xchg
sub
jp
sar
out
dec
jne
jmp
lea
popa
shlb
adc
mov
pop
push
divb
jmp
cmp
cmpsl
inc
fistl
hlt
jmp
cmc
movsl
movsb
je
popf
push
dec
pop
mov
add
dec
and
ret
jne
push
int3
xor
imul
mov
mov
inc
sbb
adcl
adc
movzbl
dec
call
icebp
scas
scas
push
jge
imul
sub
dec
cmp
jae
ss
loope
hlt
xchg
jmp
pop
cmovns
adc
pushl
call
sbb
fucomi
pop
cmp
cmp
aad
add
jg
sub
push
pop
and
inc
testb
xchg
mov
ja
and
push
lea
dec
cld
stos
xor
and
mov
adc
mov
mov
and
inc
mov
jl
out
cmp
add
and
jns
add
mov
add
push
add
or
cld
or
push
addb
mov
sub
hlt
pop
les
sarb
mov
and
inc
lea
addr16
sbb
sbb
iret
repz
push
adc
adc
or
xchg
out
cmp
incl
push
or
lods
test
das
ror
mov
std
xor
mov
repz
std
in
push
add
cmp
je
mov
push
sub
je
div
repz
je
je
pop
je
xor
arpl
das
push
push
data16
or
ljmp
or
sub
ja
cmp
ja
lea
add
add
or
fs
int
or
cmp
fucomip
or
jmp
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
mov
popa
jb
mov
aas
out
mov
mov
add
mov
sar
mov
lret
mov
and
shr
mov
pop
aaa
jbe
arpl
in
or
jnp
push
shrb
cmp
pushf
jnp
pop
mov
test
test
pop
mov
loop
lar
add
out
inc
lods
cmpsb
in
mov
js
add
push
or
push
or
lret
add
rcll
mov
mov
movsb
call
pusha
add
pop
jmp
xchg
jnp
sub
xor
nop
inc
pop
cmp
js
aam
inc
jle
cmp
mov
addr16
aad
je
mov
ret
and
test
jg
sbb
pop
jp
xor
rolb
sbb
inc
inc
pop
mov
fs
or
ret
jbe
jnp
or
push
push
clc
lahf
jle
pushl
mov
cmp
mov
sub
xchg
test
xor
mov
sarb
pop
insb
adc
sti
test
fs
loopne
mov
adc
pop
mov
inc
sbbb
dec
flds
enter
insb
lds
lock
out
or
rol
lock
add
or
or
fs
mov
sub
or
add
aaa
jne
ds
mov
lret
mov
incl
loop
hlt
stos
sub
inc
mov
rol
fdivrs
fnstenv
or
pop
loopne
std
sbb
and
jecxz
movsl
push
adc
push
cmp
cmp
jne
dec
jne
loop
mov
mov
mov
cmp
repz
sbb
mov
inc
mov
icebp
push
dec
jne
xchg
inc
jl
stos
sbb
jl
movsb
lcall
jge
pop
lock
inc
pop
lods
push
xor
fmulp
jb
mov
push
jns
pcmpeqb
imul
je
dec
and
jmp
movsb
xor
mov
xor
xchg
push
cmpsb
stc
sbb
jmp
fstp
fldt
sti
push
out
in
dec
cmp
jg
aas
mov
ds
in
cli
or
or
ret
psadbw
xchg
dec
and
xchg
xchg
jl
mov
out
sbb
add
incb
inc
mov
push
test
es
test
sub
sub
pop
jecxz
add
lahf
pop
stc
mov
lds
mov
jbe
imul
cmp
mov
mov
bound
cmpb
xlat
rep
dec
fadds
outsb
xor
xchg
push
or
push
push
jg
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
incl
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
call
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
popf
imul
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
dec
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
ljmp
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
push
pushf
pushl
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
ljmp
inc
pop
or
addl
cmp
xor
in
cmp
dec
decl
lock
mov
popa
mov
and
addr16
repz
mov
subb
and
and
outsb
bound
xor
fninit
fwait
jg
shll
movsl
mov
jne
xchg
dec
jg
mov
out
dec
pop
cmc
xor
lret
movsb
pusha
push
jns
jge
outsl
push
pop
filds
inc
test
jg
jge
and
and
and
mov
test
mov
fs
pop
enter
adc
shl
add
push
adc
pusha
addr16
rorb
aaa
mov
aaa
cli
std
aad
jo
movsb
xchg
rorb
add
mov
std
bound
fs
in
cs
dec
pusha
incl
add
add
lock
test
fimuls
mov
cmpb
adc
add
stos
pop
and
add
aad
es
mov
sub
push
pusha
pop
shl
inc
jmp
cmp
je
mov
mov
xchg
jae
fiadds
mov
mov
jl
mov
push
sbb
cmp
and
mov
mov
mov
sub
les
fcomps
push
jecxz
fdivrs
mov
xchg
cmp
add
jb
fxsave
xor
jmp
pop
inc
aaa
xor
or
adc
adc
pusha
push
cmp
cmpsb
and
pop
idiv
enter
xor
mov
mov
mov
sbb
or
mov
enter
pop
clc
dec
inc
xor
clc
mov
mov
pop
push
mov
push
add
push
lea
mov
sti
dec
or
clc
aad
loop
mov
jmp
mov
push
fisttpll
mov
lods
jne
cmp
test
dec
les
jbe
adc
add
lar
pop
xor
dec
lea
fsub
push
mov
cmp
cmp
pop
lock
insb
mov
cmp
jne
jb
cmp
adc
es
jne
or
jle
mov
adc
lds
or
lods
cld
repnz
dec
sub
out
mov
sti
lods
adc
movsb
xchg
std
inc
movzbl
add
adc
add
pop
gs
sbb
and
sahf
in
pop
or
dec
lods
pop
or
xor
mov
or
shll
dec
test
repz
push
loopne
iret
int
push
xchg
jmp
loop
les
or
add
repnz
je
pop
add
andl
jmp
je
cld
pop
mov
mov
mov
pop
ret
es
add
mov
pop
sub
out
mov
adc
mov
fcom
movsl
fimuls
pop
out
dec
cli
mov
dec
subb
mov
ja
emms
insb
cmp
addr16
push
data16
orw
jp
aad
add
inc
mov
popa
lock
add
jo
aam
add
fcoms
adc
xor
in
inc
es
sbb
test
inc
add
mov
test
inc
fcoms
push
xchg
sub
nop
dec
in
rorb
sub
push
jg
cmpsl
pop
add
xor
xor
mov
xchg
out
add
ds
pop
mov
orb
and
add
dec
jne
jnp
icebp
cmp
jmp
pop
jmp
push
lea
mov
mov
ljmp
xor
test
mov
std
xorb
sbb
psubusw
nop
out
pop
cmpsl
inc
mov
pop
and
adc
cmp
pop
add
iret
xor
mov
jg
xor
adc
cmp
je
jle
mov
enter
repz
lea
ficoml
mov
ficompl
dec
lock
cmpsb
and
push
lds
adc
lea
lock
ret
pop
jmp
pop
xor
call
lret
out
sbb
jecxz
pop
adcb
push
pop
add
aas
std
xchg
mov
push
push
push
test
jl
clc
incl
rorb
sbb
movl
ds
mov
lods
or
cltd
push
popf
or
inc
or
sbb
xorb
or
jmp
mov
push
clc
or
xchg
lock
xor
pusha
inc
pop
fdiv
push
xor
cltd
inc
in
andl
movsb
mov
data16
xor
jg
sbb
addl
ja
jle
jg
cmpl
sbb
pop
adc
inc
or
sarl
cltd
idiv
cmp
jne
xor
pop
mov
test
stc
add
sbb
enter
sbb
enter
outsl
lret
shl
test
incl
push
loope
push
push
jge
add
xor
adc
push
and
stos
mov
in
inc
xchg
cmp
fcmovb
push
dec
jo
fnstsw
mov
sub
xor
ret
pop
or
cmpl
jle
pause
decl
push
push
into
cmp
sbb
mov
cmp
movsb
sbb
sbb
pop
mov
push
mov
dec
jg
pop
sub
loop
cmp
adc
or
mov
ret
adc
imul
or
pushf
lock
fiaddl
xor
xchg
shr
clc
call
jno
pop
loope
out
pop
cmp
daa
imul
sbb
sbb
call
or
fs
xor
inc
adc
or
adc
dec
adc
nop
jne
xor
pop
pop
mov
cmp
xor
add
int3
lock
mov
inc
or
arpl
imul
mov
xchg
pop
hlt
push
cld
call
outsb
adc
cmpb
pop
je
dec
and
outsl
add
jle
test
mov
jle
dec
push
or
and
sbb
dec
jp
or
sti
jno
pop
sbb
enter
inc
ret
cmp
das
push
sub
xor
add
add
lods
jg
and
add
push
add
jnp
inc
inc
or
loope
lea
mov
out
sub
push
insb
dec
sbb
ljmp
je
mov
and
or
jbe
pop
les
lcall
jne
cmp
ljmp
cmp
add
inc
cmp
js
jl
push
cwtd
sidtl
pop
add
movzbl
les
push
mov
out
and
push
popf
popf
ss
pop
cmpl
xor
dec
lock
out
test
xor
iret
lret
inc
pop
mov
push
dec
or
mov
decl
jbe
sub
inc
dec
ja
adc
test
sbb
jne
pop
outsb
push
mov
mov
jge
addb
push
in
push
fists
or
pop
mov
jmp
incl
jb
int
add
mov
add
mov
lock
imull
cmp
inc
sahf
in
ljmp
fsubrp
scas
push
xchg
push
popa
call
or
lods
fdivrl
popa
cwtl
pushf
or
push
and
ss
outsb
mov
ja
mov
pop
in
xor
cmp
nop
xchg
pop
pop
shlb
jns
test
fs
or
outsb
pop
mov
push
ret
in
stos
add
adc
subb
and
scas
mov
jnp
lahf
fs
xchg
and
push
jmp
cmp
jne
push
xchg
lock
fcmovbe
das
cmp
jne
jo
icebp
fisttpll
sbb
adc
or
jmp
and
aaa
sbb
and
call
push
add
xor
ret
cmpsl
add
ja
inc
mov
xlat
pop
daa
call
mov
ficoml
mov
and
cmp
push
inc
pop
outsl
push
in
gs
es
lea
pop
add
adc
push
movsb
mov
or
divb
push
push
lock
push
inc
sti
cmp
xor
add
jno
inc
mov
jbe
xchg
ret
cwtl
ljmp
jl,pn
adc
mov
shrl
into
xchg
fwait
call
pop
inc
push
push
iret
pop
push
add
cmpb
test
push
in
push
call
sbb
push
push
push
push
cmp
xor
test
lret
cs
rcrb
add
scas
or
cmp
sub
and
stos
jno
ds
inc
sub
jmp
jne
movsbl
inc
inc
inc
roll
sarl
enter
push
jecxz
pop
dec
jo
in
xor
adc
loop
mov
xchg
jecxz
inc
std
add
pop
movb
inc
add
fnsave
aam
cmpl
pop
and
test
fcoml
pop
jo
jg
test
je
enter
mov
or
addb
je
dec
add
daa
xor
sub
test
lea
in
aad
sbb
cmp
pop
jbe
mov
daa
fsubr
xor
push
shlb
adc
lods
mov
jo
dec
add
pop
xchg
rorb
mov
push
cmp
sub
push
add
enter
add
sub
sar
mov
mov
mov
outsl
cmp
mov
add
push
add
pop
push
jmp
and
idiv
jnp
jg
dec
adc
xor
or
xchg
cmp
xchg
push
add
stos
inc
cwtl
enterw
or
rorb
cmp
add
lds
out
ret
shlb
push
int3
cmp
fisttps
inc
enter
xor
mov
cmp
jne
inc
inc
mov
pushl
pushw
add
dec
jne
mov
and
shll
outsl
inc
jmp
xor
fsubp
sbb
mov
in
cs
adc
xor
daa
adc
sub
add
push
push
imul
or
inc
inc
jmp
cmp
add
sbb
and
xor
sub
aaa
add
movsl
jecxz
pushf
dec
add
push
aad
mov
rorl
add
sub
jecxz
and
push
mov
addr16
not
cmp
movl
out
imul
iret
outsb
push
pushf
arpl
je
cltd
pusha
xchg
sub
je
jg
adc
dec
jbe
aas
out
and
movsl
out
xchg
push
imul
jg
or
mov
call
ljmp
call
xor
pop
pop
inc
loopne
cld
lea
pop
jmp
xchg
ror
pop
cld
xchg
fsubs
pop
push
push
push
push
adc
loopne
movsl
test
push
imul
adc
or
cld
or
xor
pusha
push
orb
aam
add
nop
pushf
push
stos
xor
or
xor
add
test
mov
add
jecxz,pn
std
pop
or
cwtl
pop
xchg
rcrb
mov
flds
or
ss
pop
out
sub
repz
pop
test
hlt
ret
xor
sbb
aas
sbb
mov
ret
push
pop
and
fs
je
cmp
mov
adc
push
sub
std
pop
gs
je
jmp
add
add
je
jmp
cmp
push
adc
sub
adc
jmp
sub
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
sbb
jmp
mov
or
fsubr
push
mov
jmp
mov
sub
mov
mov
push
or
jnp
pop
pop
ret
fisttps
sbb
cmpsl
add
or
cmp
cmp
adc
or
sub
sbb
sbb
cmp
ret
loop
mov
call
mov
or
adcl
adc
rol
bound
lock
or
or
cmpsb
fmulp
hlt
mov
fs
xchg
add
and
imul
inc
sbb
cmp
ljmp
loop
cmp
cmp
jne
in
mov
mov
inc
cld
pop
push
mov
mov
xchg
outsb
test
jle
dec
mov
je
add
fmuls
int3
inc
pop
dec
inc
xor
sub
test
adc
ret
arpl
pop
fdivs
push
sarl
cmp
fildl
rclb
cmp
jle
push
xor
inc
fists
mov
jg
xlat
cmp
in
mov
movl
or
mov
adc
sbb
call
andl
push
pop
inc
dec
dec
rcrb
inc
outsl
mov
mov
stc
in
add
outsl
adc
inc
shll
mov
add
ret
ja
aas
mov
sub
sbb
add
and
fimull
je
xchg
mov
int3
leave
hlt
jmp
or
dec
jmp
cwtl
pop
in
inc
incl
iret
pop
pop
iret
xchg
js
jl
mov
inc
or
sahf
mov
mov
add
adc
ja
icebp
inc
repz
mov
jbe
lock
and
dec
test
mov
push
cld
jbe
xchg
add
loopne
inc
xorb
pop
mov
mov
push
cmc
testb
jl
adc
ja
add
mov
mov
out
movsl
xor
xchg
subb
test
push
adc
fildll
push
cmpw
enter
cmp
add
mov
scas
sub
or
push
push
add
in
xor
inc
pop
ret
push
sub
scas
adc
jne
data16
mov
cmp
or
test
aaa
mov
fdivrs
add
adc
mov
movsb
push
xor
insl
pop
jo
test
jae
inc
sbb
sbb
sti
popa
adc
mov
pusha
js
jle
xor
call
pop
mov
cmp
call
sbb
icebp
pop
jmp
jne
xchg
add
and
call
test
div
mov
jne
dec
push
sbb
data16
rolb
xchg
and
popf
test
scas
js
xchg
jbe
adc
cmp
or
push
push
loopne
outsl
aam
sub
jbe
jne
call
pop
sbb
movb
outsb
pop
popa
jo
cli
cmp
cmp
mov
mov
test
mov
mov
popa
mov
loop
inc
inc
popa
xor
popl
or
mov
mov
add
pusha
sub
add
or
movsl
flds
sbbb
sub
int3
xchg
dec
ljmp
sub
or
mov
cmpl
inc
dec
xchg
push
push
xor
push
pop
mov
push
xor
ss
push
push
fwait
pop
pop
call
xor
in
or
dec
jg
daa
cmp
adc
addr16
mov
scas
push
out
add
fcompl
outsb
adc
mov
mov
mov
test
add
bound
mov
clc
adc
ret
cld
add
jae
andb
mov
inc
stos
sahf
aam
or
fcompl
or
push
cmp
shlb
push
or
fidivs
jmp
pop
movl
pop
fisubl
xchg
mov
and
add
aam
imul
jle
inc
jo
stos
mov
push
push
and
dec
add
fildll
mov
or
xor
xchg
inc
dec
or
shlb
test
dec
cmc
aam
in
jg
sbb
gs
xchg
lret
dec
jl
sub
lock
hlt
out
sbb
push
adc
mov
mov
lret
sbb
sbb
add
or
rorb
sbb
dec
jne
es
fistps
or
push
stc
mov
add
jle
pushw
mov
insb
pop
ret
sub
mov
shr
flds
mov
adc
shl
adc
pop
sbb
xor
cld
inc
adc
ret
ret
call
add
and
pop
pop
push
js
jnp
jae
insl
movsl
sbb
or
push
mov
mov
aam
jg
arpl
or
or
loope
mov
inc
cmp
lock
popa
pop
pop
and
cmp
pop
mov
add
push
dec
mov
or
call
pop
iret
les
mov
icebp
pop
loope
or
inc
add
mov
xchg
pop
mov
test
lea
sti
xor
lea
sbb
repz
jle
mov
insb
and
or
adc
es
shl
mov
push
enter
clc
jb
pop
add
dec
inc
inc
clc
setne
data16
clc
add
add
xor
lea
pop
jmp
push
pop
xor
lret
and
adc
pop
shlb
add
push
xor
outsb
fcoms
or
push
dec
imul
aaa
adc
dec
pop
sub
sbb
pop
scas
je
rolb
inc
mov
fstpt
jle
loop
jg
ljmp
dec
cld
cmp
sbb
inc
clc
xchg
adc
cmp
mov
jl
scas
pop
jle
cmp
je
xchg
call
pop
repnz
jo
pop
xor
dec
push
xchg
ret
inc
sub
mov
xor
aam
cmc
adc
push
add
cmp
call
dec
and
leave
cmp
je
cmp
je
or
or
mov
mov
add
inc
add
enter
imul
dec
cmp
or
or
push
gs
push
push
or
in
add
bound
sub
sub
xchg
push
pop
and
add
outsl
sub
adc
rcrb
xchg
push
sbb
mov
imul
xor
mov
and
incl
mov
inc
inc
sub
ja
add
push
pop
mov
mov
cmp
jne
dec
movsb
dec
add
scas
ss
ljmp
loop
push
in
outsl
js
adc
add
and
sbb
push
cmp
jne
push
adc
cmpsb
imul
dec
add
adc
add
jne
add
jmp
pop
cmpb
cmp
cmp
jne
shr
shr
sbb
stc
fdivr
or
shr
or
push
xchg
out
pop
cmp
inc
loopne
les
out
dec
repz
xor
dec
dec
and
dec
dec
dec
sbb
pop
pop
jecxz
movzbl
cmp
jbe
lock
add
mov
inc
inc
sbb
xchg
jge
es
outsl
push
mov
push
shll
pop
ret
jo
int
pop
addr16
pushl
mov
repnz
or
push
add
sahf
dec
movsl
dec
dec
ret
mov
pop
sub
push
int3
cltd
or
or
dec
dec
ret
mov
jnp
jmp
inc
out
mov
inc
mov
jno
scas
scas
divl
call
pop
pop
pop
cmp
xor
add
bound
in
mov
adc
mov
jl
flds
inc
inc
pop
stos
scas
into
push
aaa
push
or
sysret
test
push
jb
cmp
mov
insl
outsl
scas
jns
and
cli
jo
push
je
or
addr16
add
lock
adc
lea
clc
xor
mov
lods
fldt
sbb
push
std
incl
cld
jne
push
lea
lea
neg
scas
sub
or
and
incb
cmp
je
mov
or
push
dec
int3
cmp
ret
cmp
pop
dec
mov
push
mov
sar
aas
dec
xor
jl
cmp
jge
sub
jl
dec
mov
jl
sarb
push
mov
mov
rolb
pop
imul
loopne
jmp
mov
dec
push
test
call
adc
je
jl
jge
test
sarl
jle
sub
cmp
jle
stc
add
lea
filds
fimull
mov
cmp
mov
cli
jmp
sbb
mov
xchg
cmpl
sub
sub
jo
mov
loopne
mov
lods
mov
mov
jmp
addr16
push
add
iret
jge
mov
sbb
cmp
outsb
icebp
lea
mov
add
sub
roll
xchg
call
mov
mov
or
das
and
inc
out
adc
shll
jg
cmp
add
ja
xchg
lock
xor
mov
out
or
inc
out
xchg
and
adc
rclb
mov
mov
add
add
cmp
cs
movb
sub
jle
xor
aas
cmp
sbbb
adc
inc
jl
jnp
and
pop
xor
mov
cwtl
push
dec
and
clc
adc
cmp
stc
sbb
pop
push
out
push
shl
loope
in
pop
loope
or
mov
mov
push
push
mov
mov
cmp
inc
cld
dec
jne
lret
mov
mov
ljmp
jmp
sub
pop
lea
jmp
ret
push
sbb
jb
push
mov
add
cld
clts
lods
in
inc
xor
add
or
pop
inc
and
push
cmpsb
or
pop
das
or
mov
mov
lods
dec
call
push
sub
adc
cmp
jge
pop
pop
dec
cmp
popf
push
test
mov
xchg
repz
mov
and
mov
add
add
mov
xchg
arpl
mov
out
aaa
mov
das
add
adc
out
imul
fs
jl
mov
sub
sub
or
fadds
and
pop
or
xor
jmp
ret
inc
lcall
mov
push
xchg
aad
pop
sub
pop
push
jo
iret
jb
or
mov
add
lds
fstps
das
sbbb
sub
mov
pop
jne
shll
push
sti
fistpll
outsl
xor
adc
stos
cmc
cs
rcrb
mov
add
and
ficompl
mov
sbb
aad
sbb
shl
push
sbb
fcmovnb
pop
adc
cs
sub
cmpsb
js
or
mov
outsb
lods
sbbl
lahf
pop
loopne
cld
fcmovu
data16
dec
in
add
pop
mov
push
mov
test
mov
cmp
mov
call
lea
add
nop
adc
scas
add
sbb
pop
push
iret
enter
cmp
lods
das
scas
xor
dec
add
enter
sbb
or
cmpsl
xor
fbstp
ret
mov
xlat
inc
xor
mov
test
or
sub
add
enter
or
dec
xor
pop
aaa
scas
cmpsb
push
jmp
aaa
adc
incl
shlb
add
jo
push
adc
sti
sub
mov
cmp
dec
cmp
lds
xchg
xchg
mov
xchg
adc
and
mov
repnz
test
xchg
mov
test
mov
fwait
aas
outsb
stos
mov
mov
je
cs
addr16
call
pop
pop
dec
jne
xlat
rorl
loopne
cld
add
test
fcmovnu
les
push
mov
fmuls
inc
cli
add
dec
iret
insl
add
adc
pusha
mov
push
cmpsb
jmp
lcall
rcl
or
mov
jmp
sbbl
sahf
or
pop
dec
jne
enter
loopne
lds
iret
jl
pop
scas
cmp
out
aaa
dec
jmp
arpl
sub
mov
or
addb
dec
pusha
scas
imul
pop
fisttpl
xor
add
and
leave
pop
push
mov
daa
sbb
cmp
jne
push
js
sti
add
addb
jb
pop
xchg
add
rclb
xchg
adc
push
loopne
nop
or
ss
jl
mov
dec
sbb
sub
sub
mov
sub
in
push
push
loope
loopne
add
insb
adc
ja
insl
adc
pop
mov
data16
mov
sbb
cmp
add
ss
pop
ss
imul
pop
dec
cmp
repz
test
push
sbb
jge
call
cltd
cmpsb
xchg
or
mov
jle
inc
xor
mov
ficoms
push
cmpl
mov
int3
add
jg
adc
mov
sub
adc
sub
inc
mov
fs
pop
mov
ss
mov
push
scas
es
pop
dec
js
pop
sub
sarl
xchg
fldl
dec
adc
cmpsw
push
shlb
outsb
pusha
addr16
add
mov
sub
rcll
sahf
dec
cmp
shll
lahf
mov
add
les
pop
add
or
mov
or
nop
pop
aas
jmp
pop
movzwl
imul
lock
pop
cld
mov
sti
cmpsb
mov
dec
jge
jnp
mov
test
inc
add
lcall
mov
add
lock
or
and
sub
nop
rorb
cmpb
in
or
or
xchg
data16
xchg
push
aas
int3
lock
js
push
cmp
insl
shll
movb
jno
mov
pop
mov
mov
push
sub
adc
data16
jae
sbb
and
add
hlt
enter
jnp
push
and
cmpsl
cmp
pop
addr16
xchg
xchg
pop
mov
ret
mov
roll
jb
sbbl
inc
daa
xor
push
mov
pushf
inc
xlat
pop
in
lea
mov
loope
mov
ja
push
fdivrs
in
dec
jg
inc
ret
ja
or
xchg
test
aas
push
add
fcomip
je
cmp
jp
or
sub
je
cmp
je
cmp
sub
mov
cmp
je
mov
pusha
mov
icebp
xchg
mov
clc
jmp
adc
lcall
and
outsb
cli
fwait
jle
jmp
push
mov
je
or
enter
fnstcw
cmp
pop
jmp
cmp
shlb
popf
add
sub
xlat
pop
jmp
enter
mov
mov
call
jl
pusha
loopne
adc
push
jmp
sub
mov
out
inc
jb
pop
cmpsb
rolb
mov
push
mov
subb
jg
sub
and
mov
pop
rcl
add
scas
cmp
enter
ja
xchg
outsb
es
cmp
pop
jo
sarb
pop
stc
and
sarb
sbb
lret
mov
sub
sbb
sbb
cmp
mov
jmp
dec
pop
adc
xlat
lods
xlat
popa
sbb
nop
inc
sbb
adc
test
mov
jns
push
jp
xor
push
mov
inc
push
cmp
stos
repnz
gs
sbb
push
xor
and
inc
ds
push
dec
xor
in
jb
hlt
sbb
sahf
mov
loopne
mov
mov
sbb
cmp
inc
push
rol
mov
lea
shrb
dec
outsl
cld
repnz
clc
loopne
fsubrl
test
sarl
fiadds
fisubrl
inc
add
imul
inc
mov
cmp
cmp
add
push
imul
or
cmpsb
popf
packssdw
outsb
or
test
psubusb
xchg
xchg
aam
sub
push
adc
sbb
in
iret
lret
jg
and
cmp
jmp
and
jae
dec
and
int3
mov
add
pop
dec
sarb
in
aam
inc
jg
pop
jmp
aas
add
imul
jns
xor
mov
pusha
jo
int3
inc
adc
and
mov
dec
aam
dec
jne
jbe
sbb
or
or
push
and
mov
and
cmp
jl
and
cmp
bound
mov
dec
pop
jle
dec
jne
sub
gs
and
jl
xor
roll
adc
push
add
cmp
cmp
mov
cmp
pop
add
inc
call
jl
mov
xor
add
cmp
lcall
cmp
jmp
iret
dec
iret
sbb
outsb
adc
popa
push
sub
push
test
sbb
stos
aad
ret
jl
adc
pop
shr
push
rolb
xchg
fldl
repnz
rcr
or
push
shr
xchg
adcb
shl
shrb
outsb
pop
add
test
addr16
adc
and
inc
aas
gs
mov
adc
push
mov
mull
pop
rcr
ret
dec
fs
roll
or
adc
pop
pop
rolb
or
test
in
jnp
sar
xor
xor
sub
sbb
sar
xor
xor
sub
sbb
ja
or
jne
cmp
jb
mov
into
push
push
outsl
add
lret
inc
cmp
jecxz
sarb
ljmp
rorl
fisttpl
mov
rcl
and
push
or
clc
pusha
mov
imul
xor
cli
sub
pop
adc
roll
push
popa
es
icebp
or
lahf
or
sub
or
jne
or
das
or
mov
pop
icebp
jg
mov
call
loopne
rcl
rcl
cmp
jb
push
push
clc
fisttps
fidivs
sub
sbb
inc
loop
mov
add
lret
repz
pusha
shlb
push
jns
neg
imul
mov
int3
iret
add
jns
neg
neg
sbb
int
add
pop
test
add
notl
clc
repnz
xor
push
lcall
aas
popf
pop
sbbb
shl
rorb
pop
mov
ret
das
cmp
call
psllw
pop
in
cltd
mov
aad
mov
or
outsl
jl
or
aas
pop
push
mov
sub
cmpl
je
sub
inc
sbb
mov
jb
add
pop
sbb
jne
inc
mov
aaa
and
add
add
sbb
out
xchg
ss
lahf
jle
jae
sbb
loop
cltd
mov
pop
sete
cwtl
mov
mov
xor
cmp
setg
out
inc
and
xchg
or
mov
and
xlat
mov
cmp
or
loopne
repz
jb
adc
push
jb
out
stc
sti
in
adc
imul
out
xor
push
getsec
jmp
push
xchg
rolb
inc
popf
movsl
mov
mov
inc
andl
lahf
sub
jbe
jmp
jg
mov
cltd
iret
mov
shld
mov
jb
pop
adc
rolb
lock
fstpt
adc
adc
pop
cmpsl
sbb
shlb
cmp
ficoml
jp
fmuls
push
jne
jae
sbb
push
sahf
add
and
dec
inc
setle
pop
insb
jne
adc
int3
sub
jg
or
daa
add
shl
or
dec
sub
jmp
daa
je
pop
jmp
add
setb
jmp
setl
cmp
je
dec
das
or
add
xchg
push
pop
jmp
add
in
push
adc
ret
cli
inc
cld
loopne
mov
dec
pop
incl
push
pop
mov
loope
and
add
ret
mov
mov
add
je
pop
and
test
jg
cld
pop
mov
loope
rclb
cmp
lods
and
add
mov
mov
jmp
div
movzbl
add
pop
lods
movb
add
getsec
hlt
faddl
jp
dec
jmp
add
xchg
cltd
idiv
cmp
je
dec
mov
stos
andl
in
int
inc
popf
xor
cmp
adc
cmp
jge
aam
mov
nop
scas
add
mov
sub
adc
enter
in
inc
divl
pop
jmp
decl
les
dec
imul
jge
mov
or
mov
in
test
adc
test
and
dec
push
dec
sarl
lock
ret
movl
mov
fadd
push
sub
mov
es
sahf
or
add
cmpsl
xor
jo
testb
cs
add
test
outsl
shr
test
movl
shr
hlt
lea
test
lcall
dec
jne
inc
test
pop
pusha
sbb
jle,pn
scas
bound
add
xlat
adc
fistpll
or
push
lret
xchg
pop
dec
shr
lock
sbb
stc
pop
or
imul
mov
sbb
adc
add
dec
pop
xchg
fcom
cmp
adc
sub
push
xor
outsl
mov
push
js
push
add
jbe,pt
std
jmp
wrmsr
xchg
push
mov
fcoml
sbb
mov
ss
add
dec
dec
adc
push
xor
fcmovb
stos
push
pop
push
mov
out
xor
inc
shl
cmp
dec
jmp
sti
adc
xor
lret
mov
push
scas
xor
pop
lock
jne
mov
pop
push
adc
adc
inc
or
pop
adc
xchg
pop
call
fld1
sbb
test
mov
loop
jl
push
sbb
jle
lret
clc
stos
pop
pop
mov
test
addb
stos
add
push
jecxz
push
sbb
inc
sbb
lret
add
mov
push
sbb
mov
test
jne
push
sub
mov
push
sub
jle
call
cmpsb
inc
addb
ss
loop
xor
data16
jae
xlat
andl
or
ret
fisttps
cmovne
dec
sbb
out
out
aad
rol
sub
jp
sub
out
jo
adc
je
pop
gs
inc
shr
ja
push
pop
je
popa
outsb
insb
pop
outsb
bound
add
idivb
sub
push
sub
sub
fstpl
or
dec
sub
push
insb
fldz
push
xchg
sbb
mov
inc
push
push
mov
jno
es
fmull
outsb
pop
popa
sub
popa
addr16
dec
mov
pop
outsb
outsb
cmpl
popl
pop
fistl
imul
pusha
inc
inc
sub
sub
push
ss
adc
aaa
dec
in
sub
mov
jg
je
insl
sbb
leave
loopne
pop
sub
jb
dec
push
mov
cmpsl
testl
inc
jae
push
or
gs
in
test
in
inc
pop
mov
xchg
in
inc
mov
insl
fnstenv
outsl
aaa
or
fisubl
cmpsb
jae
bound
fstl
aaa
outsb
outsb
cmpsl
aaa
dec
in
rcr
dec
dec
inc
das
pop
push
call
sbb
add
hlt
and
cmp
setae
xor
gs
push
pop
jne
sbb
dec
pop
fwait
mov
add
push
dec
adc
push
mov
data16
push
dec
push
cwtl
jne
movsl
pushw
inc
dec
add
sahf
jecxz
scas
pusha
outsb
or
xor
adc
insb
mov
mov
enter
sub
and
jne
xlat
inc
inc
popf
sub
ret
push
jle
outsb
and
stos
scas
ss
sub
jmp
dec
orb
jne
xor
imul
add
fstpl
sub
push
add
add
nop
sahf
das
jae
mov
aad
add
adc
ljmp
xchg
mov
notb
sub
fs
dec
jne
mov
ret
mov
xchg
std
inc
pushl
pushl
add
mov
mul
jbe
sbb
push
inc
imul
xchg
mov
jge
cmp
lock
orl
jo
lahf
aam
movl
pop
daa
jecxz
es
and
sub
dec
jb
jbe
cwtl
adc
jo
mov
mov
lock
lahf
iret
cmp
ljmp
add
jle
inc
lock
cmp
in
mov
add
shr
cmp
fstl
sbb
dec
jmp
add
test
sbb
lock
out
ret
loopne
stos
lea
add
test
sahf
adc
les
cld
add
jbe
sarl
js
nop
and
mov
pop
fidivs
inc
daa
movsb
pop
and
mov
rcrb
xchg
push
mov
fst
push
mov
sahf
inc
pushf
push
cs
addl
cwtl
adcl
pop
outsb
sub
add
inc
adc
xchg
add
add
out
test
or
mov
mov
sbb
pop
push
adc
add
mov
dec
pop
push
inc
adc
push
lock
adc
lds
inc
add
gs
cmp
es
pop
xlat
fs
xchg
lea
jmp
fdivs
je
pop
inc
clc
iret
rol
mov
mov
aaa
cwtl
ljmp
lods
xchg
shll
mov
mov
shr
imul
mov
pop
in
pop
int
sarl
cli
in
adc
scas
clc
jne
fwait
mov
mov
inc
aam
inc
pop
push
in
mov
movl
out
xor
adc
sar
test
test
xchg
or
dec
mov
mov
je
dec
pushf
rcll
aam
adc
into
popa
push
push
push
pushf
cmp
mov
xor
in
mov
adc
mov
fstps
dec
inc
test
sbb
inc
xorl
sub
pop
orl
jmp
sub
mov
je
sub
loopne
fimull
js
xor
xor
dec
push
sub
lock
inc
mov
mov
inc
lock
jae
sub
lahf
data16
inc
fsubr
push
aas
add
fwait
sbb
cmpsb
xor
add
pop
jne
daa
cmp
repnz
mov
sti
stc
push
push
cld
or
push
add
mov
push
mov
jno
add
sub
pop
test
xchg
sbb
hlt
fldl
inc
xchg
push
sbb
cmp
adc
pop
insb
cmp
pop
add
xchg
sub
shrl
loop,pt
scas
inc
add
lds
popf
adc
jbe
ljmp
sti
jns
adc
call
insb
fcmovu
cmp
ret
sar
pop
rolb
add
inc
cmp
jge
inc
and
inc
push
push
addl
bound
cmp
xor
int3
mov
mov
pop
lea
add
in
dec
lcall
lea
jle
out
ss
lret
jg
xor
pop
jns
add
push
fistpl
insl
push
fldt
mov
lcall
test
mov
lods
sbb
test
mov
ret
out
push
popa
je
push
mov
daa
out
shl
push
loope
gs
cmp
jne
lret
out
test
js
sub
sbb
or
cmp
bound
out
cmpsl
add
lea
neg
xchg
and
mov
rorl
sub
xchg
add
leave
add
add
or
and
cmp
inc
orl
nop
insb
and
movsb
pushf
sarl
jp
pushf
scas
add
popl
pop
addr16
cwtl
xor
loope
add
nop
sub
push
push
jbe,pt
insb
pop
data16
mov
mov
push
das
push
cltd
inc
or
jl
insl
sub
or
jno
jns
mov
cmpsb
fstpt
rcll
add
popa
jne
inc
mov
cmpsb
inc
mulb
fisubs
fs
outsl
cs
or
sbb
pushf
insb
jb
inc
and
inc
push
imul
mov
inc
adc
jbe
orl
jo
push
pop
and
imul
test
cmp
cld
cmpb
mov
add
cmp
inc
dec
push
loopne
test
pop
xor
or
dec
xchg
stos
in
inc
mov
add
mov
and
fildl
xor
push
pushl
imul
stc
test
mov
xlat
mov
lods
mov
push
test
and
lock
add
ret
test
je
dec
js
nop
imul
jmp
add
sbb
int
inc
pushf
std
dec
mov
jmp
inc
push
imul
ljmp
jne
cmp
je
in
lret
sub
lea
mov
lret
mov
mov
enter
mov
test
pusha
xchg
xchg
mov
jmp
in
push
inc
add
push
dec
in
add
sarl
stos
aaa
or
push
dec
dec
mov
mov
pop
inc
enter
add
jo
test
ret
dec
add
les
xor
in
adc
enter
subl
inc
xchg
mov
lds
adc
sbb
es
xor
shrl
adc
lods
call
or
faddl
jne,pn
push
cmp
jmp
dec
sbb
mov
shrb
les
andb
cltd
sub
push
jne
push
xchg
pop
push
cmp
and
and
sbb
push
dec
call
cs
add
roll
shlb
aaa
call
mov
or
adc
es
lods
daa
pushl
addr16
mov
call
sbb
adc
sub
pop
test
pushf
ret
adc
jno
in
mov
loopne
pop
xor
data16
cmpsl
cli
push
adc
xor
push
ljmp
addr16
sub
cmp
adc
loop
and
mov
mov
mov
out
dec
mov
inc
xchg
sbb
insb
mov
stos
aad
adc
push
mov
cwtl
pusha
mov
dec
daa
fstps
lahf
fdivs
fnstcw
cmp
call
add
cmp
or
jno
push
sub
jne
scas
movsb
xor
xor
pop
mov
or
scas
add
rorb
cmp
add
mov
or
mov
pop
mov
mov
sub
mov
loop
test
jne
push
ret
jecxz
dec
jle
add
adc
outsl
sub
cwtl
add
xchg
sahf
shlb
loop
mov
sub
sbbl
push
loopne
add
push
push
mov
and
sub
dec
imul
ret
sbb
add
push
sbb
dec
push
pushf
daa
add
je
cmp
push
dec
and
xor
and
inc
add
adc
or
arpl
jle
add
imul
inc
xchg
aaa
je
xor
fdecstp
js
inc
or
add
add
outsl
jno
daa
cmp
hlt
push
shr
pop
jae
sub
aas
adc
cmp
sti
sub
adc
inc
pop
add
inc
adc
push
mov
lock
jno
loop
testb
cs
fcoml
fstps
jmp
push
pop
shll
add
ja
pop
sahf
jbe
orb
testb
ficomps
imull
movzbl
rolb
mov
push
aam
mov
jmp
aad
pop
data16
mov
add
jbe
cmpl
inc
pushf
movsl
sbb
xor
sub
cmpl
out
fdivl
adc
fbstp
dec
jmp
out
adcb
mov
xlat
test
adc
xor
push
stc
subb
sbb
mov
jno
gs
jo
js
xor
xor
pop
adc
jnp
mov
js
orl
add
push
outsb
popa
ljmp
movsl
sub
movsb
jae
imul
repz
adc
rorb
mov
xor
mov
pop
add
aaa
dec
mov
push
pusha
adc
add
push
inc
mov
and
or
inc
push
mov
js
mov
jle
lret
test
push
xchg
out
pop
shlb
test
push
push
daa
xor
orl
inc
sbb
add
mov
push
mov
fadd
lahf
or
mov
inc
fisubl
and
push
cmpsl
inc
jb
jno
mov
and
mov
pop
movsl
push
mov
pop
dec
mov
add
loop
das
push
inc
add
adc
call
mov
adc
jecxz
jg
push
mov
scas
push
or
inc
or
sbb
add
dec
add
sbb
pop
mov
dec
xor
daa
icebp
cmp
add
test
pop
or
shlb
push
add
cmp
or
jge
inc
js
shrb
mov
push
cs
lea
data16
mov
ja
out
shlb
incl
or
or
sbb
les
bound
out
adc
aas
fdivrs
sahf
movsb
or
fcoml
shufps
adc
and
adcb
rcrl
xor
inc
jg
loopne
test
add
addb
or
add
fdivrs
adc
jl
data16
jo
push
push
or
mov
fistps
dec
or
sub
pop
or
or
push
lret
add
movsl
mov
push
add
loope
jno
add
xor
lods
inc
inc
mov
fs
fsubrl
sbb
sbb
mov
add
adc
mov
add
or
xchg
dec
pop
sub
loopne
sub
adc
add
clc
add
inc
popa
sub
fiadds
ret
jbe
testl
mov
cmpsb
push
pop
shl
push
fsubrs
inc
in
sbb
data16
pop
into
pop
out
rcrl
xor
pop
imul
shr
push
add
push
xchg
shrb
and
pop
aam
mov
fsub
mov
mov
call
loopne
ds
aas
lock
mov
adc
inc
insb
inc
push
or
and
pop
loopne
sub
jmp
mov
sar
push
add
pushf
dec
in
incl
shlb
filds
daa
or
test
test
dec
push
lea
push
repnz
pop
addl
push
pushf
sbb
sub
dec
repz
outsb
nop
insl
popa
mov
pusha
in
and
add
icebp
mov
test
lock
sub
out
push
mov
or
mov
pop
mov
ljmp
test
sub
mov
imul
test
inc
or
hlt
mulb
cmpl
push
lock
divl
lcall
pop
cmpsl
dec
aas
icebp
out
shrb
mov
pop
cmp
and
push
xchg
in
lods
ds
pop
frstor
sbb
hlt
hlt
popa
popl
jg
or
mov
push
push
lock
or
or
dec
rclb
add
jecxz
cmp
sarb
shl
xlat
xor
js
outsb
sub
push
nop
add
sbb
cmp
and
arpl
xchg
mov
and
imul
jne
sbb
rol
movsb
dec
icebp
call
fwait
test
pop
adc
loopne
sbb
shlb
sub
out
mov
xchg
mov
je
push
test
in
rorb
cld
cmc
incl
mov
or
xor
mov
inc
sub
mov
jmp
xor
lahf
mov
add
sbb
and
mov
mov
out
dec
cmove
fs
insl
std
mov
mov
sti
pop
push
and
push
xor
sahf
hlt
incl
sti
mov
sub
or
jmp
push
mov
scas
push
aaa
cmp
mov
mov
sbbb
cwtl
divb
push
xor
add
mov
jnp
ret
and
ret
in
aaa
in
loopne
enter
mov
stos
and
add
dec
xchg
xchg
sub
lea
mov
ja
push
fdivrs
cmp
fdivl
inc
cmp
roll
add
and
xlat
add
ja
insl
loope
mov
adcb
fstpt
test
xchg
push
adc
gs
add
adc
push
imul
bound
je
and
mov
pop
bound
inc
imul
ja
mov
jbe
popa
addr16
dec
pop
inc
test
add
bndldx
inc
outsl
or
dec
adc
and
out
xchg
je
add
mov
jae
sbb
outsl
xchg
push
cmp
ljmp
lret
hlt
fbstp
and
sub
jmp
and
adc
mov
sub
sub
mov
ja
shlb
push
and
lods
pop
scas
es
loopne
lahf
inc
pop
jmp
mov
sarb
mov
cld
cmp
add
jmp
aaa
cltd
pop
add
push
cld
sub
jmp
jae
lods
rolb
je
sbb
pop
jne
push
inc
mov
xchg
or
icebp
faddp
imul
ja
lcall
sub
std
sahf
aad
mov
daa
shlb
add
ret
or
mov
sar
xor
lock
cmpsb
arpl
lds
rorl
mov
aaa
aam
adc
or
or
push
loop
fmuls
or
add
cmp
cmp
cmp
add
xor
cmp
push
fadds
add
dec
push
insb
fcompl
je
pop
jnp
insb
ret
stos
push
add
xor
es
cmp
sbb
or
add
jle
cmp
jl
cmp
lret
lods
mov
jb
shll
test
ret
movsl
jp
popa
mov
jle
lret
into
int3
add
adc
inc
adc
xchg
lods
loopne
rol
dec
repz
push
push
andl
add
js
pop
cmp
jle
pop
out
lcall
add
add
add
ja
sub
or
xor
testl
out
add
and
outsl
and
xor
cmpsl
push
dec
dec
dec
inc
clc
mov
dec
es
push
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
or
xchg
faddl
add
adc
adc
pusha
popf
lods
push
push
in
dec
or
adc
adc
push
jne
fs
jno
lahf
jae
icebp
mov
int3
out
rorb
push
push
pop
inc
in
push
pop
or
mov
outsl
aad
fwait
imul
add
or
stc
sub
stos
jbe
pop
out
inc
sbb
arpl
adc
std
push
sarb
sbb
jne
inc
rorb
pusha
outsb
jmp
push
sbb
inc
push
dec
push
dec
inc
inc
adc
inc
repnz
filds
inc
inc
inc
push
inc
and
pop
int3
adc
sbbb
pop
xor
jnp
cwtl
push
rcll
insb
daa
mov
push
jb
or
lea
fs
jne
subl
mov
inc
cmp
adc
pusha
jae
xorl
pop
aaa
mov
sub
mov
adc
andb
xor
jo
pushf
add
je
sub
mov
andb
shlb
mov
add
jge
lock
and
jne
jae
xchg
inc
sbb
dec
ja
adc
jo
jo
xchg
or
jo
cmp
mov
xor
jno
les
cmp
add
push
dec
inc
in
cmpb
dec
inc
mov
push
xor
or
cs
push
push
push
dec
arpl
add
inc
sub
daa
add
data16
pusha
mov
das
rorl
push
das
cmpsb
or
push
pushf
inc
push
push
dec
pushf
aaa
add
das
mov
pop
dec
dec
enter
jl
xchg
ja
imul
push
or
adc
cltd
jge
gs
jl
pop
inc
fimull
sub
mov
push
sub
fcom
popa
loop
je
iret
adc
jo
pop
xor
inc
scas
arpl
jo
mov
push
bound
jmp
pusha
ret
out
or
dec
jge
dec
js
dec
dec
stos
mov
xchg
sarb
xor
out
or
ret
out
pop
inc
dec
stos
add
xchg
and
cmpsb
mov
jb
push
ja
or
int3
or
jns
push
gs
mov
sub
add
inc
adcb
popw
xchg
test
or
pop
cmp
fs
push
or
insb
lret
jae
jo
add
jl
pop
imul
push
mov
mov
mov
sbbb
imul
dec
or
je
jnp
dec
inc
push
das
mov
sbb
pop
mov
xor
pop
enter
fwait
ss
cwtl
das
fldenv
xchg
cmp
pop
pop
add
cltd
or
jmp
shlb
or
and
mov
mov
imul
or
xor
push
adc
cmpb
pop
daa
adc
jg
test
push
imul
add
push
sub
sbb
push
adc
dec
inc
inc
inc
inc
push
sub
and
imul
mov
cmp
daa
or
add
adc
sub
jb
mov
testl
dec
add
cmpsb
addps
enter
or
xor
pop
inc
lret
and
insb
jb
insl
test
sub
shlb
cmp
jle
ret
or
outsb
push
loope
xchg
fisttpll
push
gs
sbb
and
or
fs
fsubl
jae
pop
test
pop
fs
ja
int3
xor
insl
push
jle
fwait
pop
pusha
push
shll
popa
psubsw
pop
push
jbe
xor
es
stc
mov
inc
js
dec
mov
xor
mov
mov
mov
rcr
dec
cmpsb
in
cmpsb
repnz
push
popa
jo
add
sub
fbstp
push
or
xor
xor
das
push
aas
pop
cld
xchg
stos
pop
jo
sets
xor
push
cmpsl
xor
mov
push
push
adc
lea
insb
pushf
cltd
mov
nop
insb
cs
add
xchg
pop
inc
jne
fdivrl
pusha
fwait
andb
pop
push
jne
bound
movsl
fwait
mulb
jo
fs
or
outsb
fst
insb
mov
shrb
hlt
or
dec
outsl
addr16
sahf
scas
cli
adc
sti
fs
ss
ret
lods
pop
repz
outsb
addl
sub
cmp
mov
js
adc
fcoms
and
jne
sarb
popa
int
dec
inc
dec
xchg
int3
push
dec
std
sub
int3
adc
adc
add
enter
or
mov
insb
ret
mov
clc
je
adc
cmp
in
in
aam
sbb
inc
sbbl
mov
jmp
stc
icebp
repz
or
pop
sbbl
cmp
repnz
inc
jb
push
sbb
movsl
push
imul
and
in
push
dec
jae
jecxz
mov
sub
jae
movlhps
rorl
push
add
adc
push
inc
sbb
fadd
add
add
cmp
ja
icebp
insl
ret
xor
jno
jecxz
add
xorb
mov
cmp
jo
stos
add
xor
add
add
xor
jne
and
and
or
ss
mov
lret
or
nop
jns
es
lcall
inc
push
cmp
arpl
adc
push
dec
outsl
je
xlat
adc
out
mov
dec
outsl
inc
arpl
or
mulb
mov
mov
outsl
insl
bound
outsl
js
push
lds
outsl
ja
arpl
jle
and
xor
push
sbb
popa
inc
inc
inc
cmp
mov
data16
jno
inc
int3
inc
dec
inc
pop
icebp
mov
and
filds
push
push
push
push
inc
xchg
mov
sbb
inc
rcr
inc
mov
bnd
inc
push
push
push
popa
fwait
or
and
inc
xchg
push
imul
mov
in
in
adc
or
xor
in
add
cld
mov
jb
jb
hlt
lock
call
in
pop
jb
ror
push
sti
ja
movsl
aam
pop
xchg
ret
ds
xchg
xchg
xchg
sarb
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
nop
xchg
xchg
xchg
push
dec
dec
inc
bound
cmp
add
and
pop
or
into
mov
insb
mov
and
test
push
mov
jns
adc
into
rcll
add
push
xchg
xchg
fisttpl
xor
sub
or
and
push
mov
nop
mov
shr
sbb
nop
mov
sbb
unpcklps
xchg
xchg
xchg
xchg
or
add
xchg
fcmovne
enter
hlt
pop
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
pop
push
push
dec
fcmovne
enter
lods
inc
cmp
xchg
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
cld
scas
leave
leave
leave
leave
clc
hlt
lock
leave
leave
leave
leave
call
leave
leave
leave
fcom
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
lret
leave
leave
pop
push
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
lock
rolb
dec
inc
in
call
fsubrl
in
loopne
pushf
pop
enter
int3
xchg
xchg
fildl
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
jb
nop
xchg
mov
jb
jb
js
jo
daa
pop
jb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
lods
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
daa
mov
ror
mov
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
cmovle
in
mov
dec
cmpb
in
je
insb
pop
fs
pushf
pushf
pushf
push
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
xchg
fildl
or
xchg
xchg
xchg
or
cld
stos
leave
leave
leave
leave
clc
hlt
lock
in
adc
call
bound
dec
loopne
fcompl
leave
leave
leave
in
fmuls
aam
int3
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
leave
leave
leave
test
mov
enter
mov
cmpb
pushf
js
jo
jb
jb
push
jb
pop
pop
push
push
push
les
testl
test
fcoms
iret
repz
sbb
test
mov
fs
cwtl
mov
andl
je
loope
insb
fidivl
stc
scas
outsb
nop
or
lds
mov
movsl
xor
add
sbb
pop
inc
test
jbe
mov
push
push
fs
add
jmp
inc
inc
cmpl
adc
sbb
or
add
cmp
mov
xchg
addr16
cmp
and
push
add
lods
je
lcall
jne
lcall
inc
pop
mov
jnp
cmp
dec
das
inc
aas
cmp
push
test
cld
add
push
mov
push
or
pop
sbb
jb
push
mov
test
mov
movsb
das
movsb
mov
mov
fld
lret
cs
mov
shlb
push
stc
adc
sbb
mov
sti
out
lret
push
jl
mov
das
cwtl
adcb
add
and
out
cvttps2pi
push
lock
outsb
rcrb
adc
or
pmaddwd
dec
jae
stos
add
inc
repnz
dec
iret
dec
shlb
data16
fwait
or
daa
push
pop
jb
mov
dec
or
cltd
insl
imul
ret
or
xchg
pop
sbb
daa
dec
mov
out
sub
push
dec
dec
gs
add
inc
scas
pusha
add
push
inc
push
push
jecxz
loopne
outsb
mov
pop
pushf
lea
frstor
out
xor
fucomp
or
jae
stc
dec
add
sub
cmp
mov
fs
out
das
and
out
ret
cmpsb
mov
jo
incl
psllw
repz
daa
daa
daa
hlt
cmc
div
daa
daa
daa
daa
clc
stc
cli
sti
daa
daa
daa
daa
cld
std
jmp
daa
daa
daa
loopne
loop
daa
daa
daa
daa
in
out
daa
daa
daa
daa
call
daa
daa
daa
in
in
out
out
daa
daa
daa
daa
rcl
rcl
daa
daa
daa
daa
aam
xlat
daa
daa
daa
daa
fcomp
fcmovu
daa
daa
daa
daa
daa
daa
daa
daa
rol
ret
daa
daa
daa
daa
daa
daa
daa
daa
enter
daa
daa
daa
daa
int3
int
iret
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
movsb
movsl
cmpsb
cmpsl
daa
daa
daa
daa
test
stos
stos
daa
daa
daa
daa
lods
lods
scas
scas
daa
daa
daa
daa
nop
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
cwtl
cltd
lcall
popf
sahf
lahf
cmp
daa
daa
addb
jle
das
addl
xchg
dec
mov
dec
dec
lea
dec
dec
jno
jae
dec
dec
dec
dec
jne
ja
dec
dec
dec
dec
jns
jnp
dec
dec
dec
dec
jge
jg
dec
dec
dec
dec
popa
bound
dec
dec
dec
dec
gs
dec
dec
imul
dec
insl
outsb
outsl
push
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
push
push
push
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
les
dec
add
sub
jae
push
push
inc
jb
sub
jne
cmp
in
sahf
push
daa
mov
scas
dec
cmpl
inc
and
add
jo
rclb
mov
mov
inc
push
jo
add
loope
daa
insl
add
es
and
shlb
sub
cli
in
or
repnz
aam
xlat
andb
jg
inc
aaa
jmp
or
dec
sub
or
arpl
pop
je
jo
and
in
sbb
clc
jg
mov
out
mov
push
mov
xchg
imul
mov
inc
jo
pushf
inc
xor
les
and
shlb
rcrb
je
call
loop
xchg
cmp
mov
aas
out
mov
add
adc
add
dec
movl
sub
scas
mov
es
iret
fisttpl
shrl
and
daa
inc
jecxz
pop
dec
adc
dec
add
stos
xor
pusha
orb
xor
add
adc
insl
test
dec
and
lods
fiadds
sub
faddl
mov
movsl
icebp
pop
nop
lret
loop
add
add
xchg
pop
inc
iret
mov
scas
sbb
push
cwtl
cs
push
jo
or
xor
clc
es
addb
add
sahf
rclb
add
test
cld
jg
cld
add
add
add
add
jo
addb
add
ja
rolb
add
hlt
sti
lcall
xor
inc
add
pusha
add
sbbb
add
add
rolb
add
add
mov
int3
jp
add
xchg
movsb
bound
add
cld
sbb
dec
inc
push
push
add
add
testb
add
pop
pop
mov
loopne
lock
sti
lcall
add
add
add
add
add
add
add
add
add
fidivrl
rolb
loopne
lock
add
incb
sub
add
add
pusha
add
sbb
nop
add
rolb
imul
cmpsl
and
push
xor
xchg
add
orl
xchg
push
and
sbb
or
loop
push
xor
lcall
mov
sahf
inc
cmpsl
lock
push
push
adc
lock
rolb
mov
push
xor
aas
inc
ss
add
adc
pusha
adc
push
mov
inc
arpl
fcmovne
fisubs
add
add
sub
outsb
rorb
push
add
ja
add
clc
sti
jecxz
adc
and
fists
xor
inc
add
test
adc
adc
or
fisubl
bound
aaa
or
adc
lock
das
add
inc
sarl
mov
xor
dec
jo
ljmp
mov
push
push
mov
pushf
lock
mov
rolb
push
add
fidivrs
inc
push
push
push
pusha
push
pop
jo
addb
push
mov
in
dec
jne
pop
loopne
lock
mov
aas
aas
and
xor
inc
push
pop
pusha
pop
jo
push
addb
pop
mov
mov
mov
idivl
loopne
mov
lock
or
or
or
or
push
or
jo
jl
repz
or
or
or
fistpll
or
or
or
or
or
push
or
dec
shrb
orb
nop
or
push
nop
or
dec
xchg
rorb
adc
lock
add
adc
ret
std
pop
or
push
xor
inc
arpl
mov
sahf
loop
or
push
mov
cld
testb
or
es
or
or
adc
or
jnp
mov
out
mov
pusha
or
mov
push
sub
sahf
or
add
jae
dec
rcl
or
fwait
cmpsb
or
loope
decb
or
or
or
inc
or
or
cld
push
popa
in
mov
jecxz
or
or
or
push
stos
mov
es
loopne
pop
jae
cltd
pop
add
or
or
ficompl
dec
add
and
wrmsr
or
push
pusha
or
jg
orb
rorb
or
mov
and
xor
inc
push
push
push
pusha
push
jo
orb
nop
push
mov
push
rorb
loopne
inc
sub
push
lock
push
push
lar
push
xor
inc
pmaxsw
pusha
or
orb
add
mov
sub
jbe
sar
bswap
xchg
lock
ret
cmpsb
jb
hlt
pop
adc
sbb
mov
inc
cmovge
jg
jnp
and
mov
fstp
mov
mov
je
push
mov
inc
shll
adc
xchg
call
push
adc
dec
and
outsb
aas
cmp
cmpsl
add
negl
scas
adc
aaa
push
adc
xor
enter
addl
add
push
mov
adc
adc
fists
mov
loopne
lock
adc
adc
adc
adc
cmpsl
and
fildl
scas
cmp
mull
pop
mov
add
push
cs
jo
pop
aaa
cmp
add
sub
gs
adcb
dec
out
xchg
sbb
loope
jle
mov
rclb
lahf
js
decb
lock
adc
ljmp
inc
adc
adc
ljmp
adc
sub
pop
sar
sub
es
rclb
sti
fnstsw
adc
incb
lock
adc
adc
adc
adc
adc
push
inc
mov
mov
mov
mov
dec
ficompl
dec
mov
add
pop
xor
in
push
add
pop
orl
rolb
lock
adc
mov
fstpl
cmp
xchg
xor
adc
ret
jg
push
adc
adcb
sti
fsubr
ja
push
adc
in
scas
adc
cld
adc
mov
in
cmp
es
push
daa
jmp
and
xor
inc
push
cmpsb
adc
sbb
pop
xchg
add
mov
xor
push
aad
push
aas
add
lret
dec
outsl
or
dec
fiaddl
mov
imulb
rclb
iret
ss
lahf
sti
icebp
and
pop
jp
adcb
pop
es
xor
jg
imul
sub
push
add
or
ret
mov
or
and
sub
mov
sti
jbe
add
sub
outsl
jmp
rolb
mov
jecxz
pop
nop
pop
mov
out
pop
or
pop
jg
pop
mov
or
pop
push
sub
das
xor
adc
and
xor
inc
ds
sbb
and
xor
jo
or
sbb
movsl
cmp
xor
idiv
outsl
rcrb
sbb
sbb
sbb
inc
add
ss
sbb
sbb
pop
adc
cmp
sub
sbb
sbb
add
or
jb
lock
lret
pusha
sbb
sbb
jle
fsubs
sbb
sub
iret
xchg
and
inc
iret
dec
sarb
shr
loopne
add
sarb
mov
bound
adc
jnp,pt
sbb
add
adc
adc
or
mov
sbb
or
add
adc
pop
fs
sbb
mov
sbb
sbb
pcmpgtd
adc
adc
mov
sbb
adc
adc
insb
roll
or
sbb
cld
rcl
pop
dec
inc
add
neg
testb
add
leave
jbe
add
add
cltd
push
sbb
shrb
imul
mov
out
push
add
push
fcmovu
jne
out
adc
scas
add
cmp
mov
addr16
xor
sub
xlat
adc
jle
aaa
sbb
or
xchg
sub
add
ja
loopne
push
pop
adc
dec
mov
sbb
add
mov
xchg
or
pop
add
enter
call
xor
dec
mov
pop
pop
push
jg
in
pop
xchg
outsb
add
adc
sahf
sub
ret
ss
ror
push
cld
push
add
imul
xlat
jns
add
in
rcl
jg
insl
fstp
pop
ret
rcr
aas
sub
sub
loop
adc
mov
int
popa
push
or
test
scas
jo
add
mov
mov
sub
popa
jg
cs
push
pop
sbb
and
negl
mov
mov
sar
push
mov
fildl
in
into
loope
icebp
or
push
daa
inc
mov
mov
imul
lods
bound
sbb
loopne
decl
sub
mov
sub
add
ja
jmp
das
inc
nop
sub
push
pop
or
add
sbb
mov
mov
outsl
mov
pop
dec
mov
xchg
add
jnp
mov
test
pop
lahf
xchg
mov
add
add
xor
jno
mov
inc
movups
imul
test
das
inc
not
aas
mov
push
stos
jb
or
push
fld
sbb
push
mov
xorl
and
mov
add
inc
push
sbb
sub
jae
mov
popa
pop
mov
push
in
pop
cwtl
popf
lea
add
add
adc
add
mov
sub
adc
fstps
fwait
lea
mov
pop
fadd
xorb
or
fs
pop
push
dec
pop
or
add
in
cmp
nop
mov
and
and
lea
das
add
data16
pop
adc
inc
dec
mov
adc
adc
divb
jno
mov
lahf
add
mov
popa
pop
xor
dec
lahf
pop
mov
add
imul
cmp
push
mov
aas
add
add
mov
jb
mov
mov
pop
fcomi
cmp
sub
out
xorb
out
or
sub
cmp
mov
lahf
sbbl
pop
pusha
sbb
out
aaa
ret
adc
scas
or
or
adc
or
and
push
mov
pop
roll
and
mov
cmp
mov
adc
sahf
xchg
aaa
dec
adc
pop
cmp
rorb
sub
sbbl
push
ret
add
mov
lods
fbld
add
mov
mov
aas
or
sub
cmp
sbb
pop
jnp
imul
xchg
imul
mov
push
adc
cmp
addr16
sbb
adc
imul
sub
test
push
add
push
cmpsl
psrlq
data16
push
adc
mov
pusha
out
dec
dec
add
or
xor
push
push
lahf
mov
mov
inc
jno
test
gs
ret
dec
add
dec
sbb
and
dec
in
sbb
add
or
popa
mov
pop
stos
or
mov
push
cmp
sub
xor
push
inc
pop
and
sub
int3
xchg
mov
addr16
pop
bound
push
aas
sbb
mov
mov
daa
add
popl
or
mov
jb
or
out
pop
mov
adc
scas
ret
dec
pop
pusha
or
push
fcmovnbe
xchg
sbb
mov
out
and
jb
gs
fisubl
nop
mov
daa
aam
mov
add
add
mov
xor
jnp
xor
push
adc
mov
lods
fistps
sub
sbb
push
xor
dec
dec
push
fwait
adc
and
cmp
fsubrl
adc
push
jno
pop
push
xchg
pop
push
sbb
lcall
xchg
add
jmp
adc
pop
cmp
mul
xor
push
mov
int
or
mov
push
pop
icebp
sahf
mov
sbb
lea
fldl
movsb
add
pop
out
and
or
mov
mov
pop
mov
popa
and
cmp
push
and
imul
iret
sbb
mov
xchg
xor
fwait
ret
lds
ss
and
or
movsl
adc
lods
pop
pop
add
pop
jnp
orb
jnp
ret
imul
jle
adc
adc
rcrb
adc
cmp
add
adc
add
mov
sub
shlb
cmpb
adc
aad
pop
sbb
sbb
or
lret
adc
cmp
mov
mov
roll
sbb
lahf
push
aaa
test
xor
and
xchg
push
mov
daa
and
adc
mov
push
jecxz
aas
shlb
push
mov
mov
jo
mov
lahf
xchg
pop
aad
test
mov
add
out
sgdtl
popf
and
and
das
lea
add
std
leave
adc
bound
inc
sub
add
je
test
sub
imul
stc
dec
scas
sub
mov
push
jae
inc
decl
jb
les
mov
sbb
sbb
je
mov
sbb
lret
mov
mov
mov
and
bound
test
mov
jae
dec
ret
bound
add
pusha
and
mulb
adc
or
or
or
fisubs
movsb
and
insl
fcomip
repnz
jo
adc
or
add
inc
or
ror
add
and
lock
dec
and
or
mov
mov
loopne
jecxz
jb
dec
inc
lret
mov
xor
pusha
push
imul
sub
and
and
mov
pusha
lret
xor
in
lcall
in
and
push
adc
push
arpl
pop
pop
push
push
or
sbb
pusha
fsubrp
mov
add
cs
adc
pop
cmpsb
rolb
adc
or
mov
loopne
add
loope
repnz
sub
inc
inc
aam
push
push
pop
inc
xchg
mov
into
xor
rcrl
imul
loopne
pop
sbb
shl
add
adc
or
cmp
shlb
xchg
test
in
pop
mov
add
icebp
add
pop
shl
add
or
add
or
add
mov
mov
fwait
jo
mov
add
pop
xchg
mov
flds
fadds
shlb
mov
adc
aas
adc
in
in
or
adc
inc
lock
sbb
and
mov
lahf
mov
dec
mov
das
shl
xorps
in
ss
dec
pop
fbstp
outsl
rorb
lahf
shrb
xor
arpl
enter
and
inc
mov
inc
outsl
dec
push
jmp
repnz
clc
inc
or
jb
jb
push
sbb
push
aad
jb
loopne
add
lahf
jg
in
jbe
pop
xor
inc
jb
in
dec
dec
adcb
in
je
lahf
mov
or
das
xor
xor
aas
mov
mov
adc
inc
jno
dec
out
lcall
cltd
sbbb
ret
sarl
aas
lds
aas
lcall
imul
push
mov
aas
pop
push
dec
stos
in
leave
ud0
idivb
aas
xor
jecxz
jmp
and
lds
mov
ss
test
pmulhuw
xchg
in
aas
aas
out
and
aaa
sbb
inc
outsb
aaa
pusha
mov
jbe
je
mov
sbb
add
clc
inc
popl
cmp
sub
inc
push
stos
xor
addb
aas
jg
xchg
adc
adc
add
and
and
and
sbb
loop
aas
pop
xchg
mov
fildll
add
bswap
mov
pop
pop
pop
aam
adc
pand
or
mov
xchg
xchg
aaa
cmp
cmp
in
xchg
cmp
cmp
fcompl
inc
addb
jns
mov
nopl
cmp
cmp
inc
inc
cmp
cmp
inc
inc
inc
inc
outsb
cmp
cmp
dec
lahf
dec
add
test
pop
or
push
jle
sub
xchg
out
sbb
sub
cmp
enter
out
and
enter
jns
subb
repnz
loopne
mov
mov
dec
jo
scas
pop
inc
jle
jo
pop
mov
jb
inc
mov
pop
dec
fucom
xchg
mov
sbb
out
in
aas
pop
icebp
adc
stc
cmc
xchg
adc
daa
imul
mov
and
jg
ficoml
outsl
ret
out
pop
pop
ffreep
adc
mov
xor
jne
and
dec
pop
lcall
push
mov
outsl
je
outsl
and
aas
loopne
cmp
das
pop
pop
jg,pn
pop
cs
push
jo
and
pandn
sbb
add
cmp
push
and
add
cs
lods
addb
jg
push
test
pop
mov
xor
and
sub
shrb
nop
test
daa
lock
out
inc
sub
jg
push
xchg
mov
xor
lahf
pusha
add
test
mov
dec
scas
add
adcl
pop
adc
fistps
aas
out
inc
sub
adc
sbb
and
lahf
mov
insb
stos
sbb
nopl
xor
fildll
xor
iret
cmpsb
or
aas
lea
xor
add
das
or
stos
call
inc
jno
invd
dec
sub
push
mov
call
bound
dec
mov
adc
ja
jbe
add
add
mov
add
push
movsb
cmp
or
or
lahf
out
pop
add
mov
in
sub
add
inc
and
mov
ret
ss
lcall
je
imul
outsl
or
push
cmp
push
mov
pop
or
popf
dec
jbe
data16
outsl
ja
out
scas
xor
sbb
fs
jo
pop
paddsb
sbb
gs
push
outsb
fs
or
inc
or
sbb
icebp
jae
imul
outsl
push
push
jb
insb
test
push
dec
mov
rcll
imul
xchg
daa
inc
popa
not
xchg
jge
adc
push
outsb
aam
sbb
pop
and
jae
fldl
jo
icebp
imul
mov
or
imul
sub
push
jne
push
mov
mov
add
jo
testb
sbb
mov
xor
or
int
cmp
add
fldl
pop
push
fistpl
sub
and
inc
xchg
pop
out
movsb
add
mov
fs
mov
mov
cmp
and
sub
repz
or
mov
gs
mov
std
xor
pushf
cmp
sbb
mov
and
cmp
addr16
bnd
or
cmp
clc
fcmovne
xor
mov
ja
push
mov
loopnew
aaa
fcoms
lahf
shlb
iret
leave
xor
inc
test
jns
xchg
xchg
aas
test
pop
mov
cmp
sub
mov
jns
xor
adcb
leave
les
jo
stos
lret
push
jns
insb
cltd
gs
iret
enter
xchg
pusha
pop
xchg
inc
and
sbb
inc
xchg
push
or
dec
iret
enter
dec
je
inc
sarb
and
mov
repnz
int3
mov
xchg
iret
enter
pushf
mov
mov
mov
and
and
mov
mov
add
out
addb
adc
add
sbb
add
decb
ficoml
loope
jbe
add
invd
or
mov
clc
add
dec
popa
or
cwtl
dec
insl
add
cmpsb
add
inc
or
jle
stc
mov
add
dec
jl
js
xlat
push
ds
pop
das
jg
or
js
push
aam
inc
insl
xchg
scas
sbb
jae
lcall
and
inc
adc
jle
or
sbb
repz
or
push
movsb
xlat
push
inc
xchg
in
or
mov
add
lret
dec
jo
add
push
jg
add
fwait
dec
or
mov
xor
dec
jbe
add
jge
data16
dec
inc
dec
cmp
stos
or
mov
or
in
xchg
out
push
cmp
or
adc
pmaxsw
fs
xchg
mov
jl
scas
pop
pop
lock
add
push
xor
xchg
jge
jge
jle
int
in
cmp
inc
inc
sub
fildl
sub
int
mov
and
inc
mov
aaa
insb
or
or
dec
jo
mov
orl
or
sbb
outsl
icebp
or
clc
jg
icebp
sbb
jno
imul
outsl
stos
daa
jle
daa
daa
daa
mov
punpckhdq
xchg
daa
pop
jg
push
mov
sbb
ret
fwait
sbb
dec
or
ds
cmp
jnp
wbinvd
das
sahf
fsubl
inc
loopne
inc
cmp
aaa
or
in
and
roll
sbb
or
je
int3
roll
or
popa
aad
add
add
xchg
sub
daa
or
fstpl
cmp
ss
jl
adc
mov
adc
je
and
lds
orb
cmp
inc
add
mov
push
ret
mov
out
add
pop
add
mov
aaa
mov
add
sub
inc
sub
adc
lods
and
jle
adc
push
faddl
jae
ljmp
xor
jmp
sub
mov
adc
imul
sub
and
add
fwait
fs
pop
push
dec
roll
pop
pop
daa
inc
fidivs
jle
mov
int3
or
cmp
clc
cmp
mov
dec
std
incl
add
jns
pop
push
mov
lret
add
jns
ret
pushf
add
mov
xchg
cmp
or
cmp
fiaddl
ret
fisttps
in
or
add
pop
adc
orb
incb
adc
jb
jne
mov
movl
push
icebp
add
pusha
orl
insb
and
mov
push
add
pusha
sbbb
sbb
aam
xchg
mov
xor
inc
aam
jnp
fwait
or
sbb
push
cmp
and
je
xchg
lods
sbb
movl
or
leave
les
and
push
insl
lahf
inc
or
pop
sbb
in
push
test
and
negl
pop
push
jns
test
and
stc
test
scas
xchg
mov
jb
and
inc
insb
insb
push
ds
jge
xchg
shl
inc
add
stos
mov
sub
xchg
or
rolb
addr16
jg
fadds
fs
or
out
test
cmp
and
inc
jne
pusha
mov
pop
mov
scas
addb
imul
or
adc
loope
and
aaa
sbb
and
or
pusha
mov
pop
daa
cmp
pushf
xchg
movsb
daa
and
or
add
dec
add
inc
fisubrl
sar
pop
and
inc
add
js
ss
pop
and
inc
mov
sti
adc
js
xor
mov
push
dec
es
dec
enter
mov
dec
sti
push
sub
icebp
mov
and
cltd
or
adc
add
xchg
or
xor
or
mov
and
xor
notl
mov
mov
pop
xor
dec
and
mov
and
xor
das
mov
enter
xlat
les
mov
pop
sub
cmp
mov
mov
je
mov
inc
mov
and
out
and
andb
das
or
adc
jns
cld
add
sbb
test
mov
and
or
inc
mov
mov
mov
xchg
mov
mov
and
and
lea
pop
sub
das
mov
shll
and
sub
daa
rol
pop
es
mov
stos
mov
push
pop
and
xchg
pop
pop
insb
inc
insb
pop
pop
mov
add
jno
setne
pop
xchg
xchg
sbb
dec
jo
or
push
enter
clc
mov
add
or
mov
loope
adc
or
sub
or
adc
mov
mov
shll
cmp
nop
add
dec
pop
xor
inc
adc
add
mov
mov
orb
inc
in
shll
imul
mov
and
jbe
xchg
fbld
pop
loopne
or
push
inc
sub
add
sub
and
push
aas
add
aas
push
mov
fisttpl
shll
mov
lcall
mov
add
or
pop
lds
orl
sbb
push
cld
jo
mov
pop
imul
mov
xor
add
rclb
and
in
fcoms
jecxz
push
push
and
mov
ja
mov
inc
push
jno
jo
nop
pop
pop
mov
pop
js
ja
mov
mov
xor
add
adc
or
adc
add
movsl
mov
test
cmp
mov
sbb
push
xchg
sarb
mov
push
add
call
mov
pop
xchg
aas
scas
or
push
std
pusha
leave
jne
ja
pop
sub
roll
cmp
scas
xor
adc
adcb
or
push
xchg
fsubr
sbb
fwait
pop
mov
scas
pop
pop
push
add
in
dec
arpl
sub
push
lcall
inc
mov
adc
mov
dec
push
sbbb
gs
mov
and
sub
das
orb
daa
add
in
xchg
adc
sub
xchg
cmp
fcompl
cwtl
mov
push
mov
cltd
pop
loop
dec
sbb
xlat
and
lods
fadds
inc
imul
lcall
lcall
and
mov
ret
xor
fsubl
cmp
xchg
adc
scas
jmp
add
lock
jecxz
jp
jbe
adc
push
inc
push
dec
xchg
push
rcll
adc
jbe
js
xor
les
or
sbb
shl
push
xor
cmp
sbb
sub
inc
loope
lahf
js
andnps
dec
jb
fwait
nop
or
adc
imul
outsl
test
sbb
push
clc
enter
aam
push
dec
pushf
jns
add
sysret
push
xor
and
sbb
pop
xor
bound
xor
add
int3
add
push
or
pusha
xchg
push
jl
or
lods
add
inc
sub
out
stos
lahf
add
aaa
push
xor
rorb
dec
fwait
das
mov
cmp
sbb
leave
mov
pop
mov
adc
xchg
rorb
mov
xor
pushf
or
jns
pop
fs
fisttpll
popa
adc
pop
or
inc
insb
imul
divl
int3
push
shrl
jp
inc
addr16
add
xor
inc
loopne
mov
xchg
mov
imul
pop
sub
sahf
add
ss
inc
mov
dec
jmp
sbb
cltd
dec
aaa
addr16
cmp
push
dec
es
int3
adc
stos
mov
mov
adc
sbb
push
loopne
sbb
dec
shlb
and
add
cwtl
mov
add
xchg
push
das
or
je,pn
cmp
popa
inc
lret
int
insl
pop
inc
arpl
shlb
lahf
fsubrp
sti
pusha
push
pushf
mov
mov
loop
lahf
xor
lock
or
adc
push
sbb
and
rcrb
ret
fldcw
or
mov
test
add
and
nop
jmp
jo
loopne
and
inc
add
xchg
shrl
mov
addr16
push
mov
cmpsb
and
add
je
imul
push
inc
insb
outsl
jae
movl
mov
loopne
xchg
add
jmp
and
je
and
fwait
pop
dec
ds
lahf
sbb
in
jnp
xor
in
out
push
add
shrl
out
push
frstor
in
pop
or
mov
js
sub
push
movsb
push
jb
dec
mov
daa
data16
lcall
cmp
sub
mov
adc
push
insb
push
cmpsl
ret
jmp
inc
rcll
popa
sub
adc
out
jecxz
sbb
sbb
jns
xor
out
fistpl
adc
xchg
add
sbb
pop
and
jb
mov
repz
sub
jbe
jnp
push
mov
dec
mov
ss
mov
subps
clc
in
and
dec
or
xchg
flds
test
xchg
jge
sbb
sbb
jp
add
adc
and
mov
mov
sub
inc
gs
sub
scas
cwtl
lahf
adcb
rorb
cmp
push
xchg
or
inc
push
testb
push
dec
mov
cmpsl
pop
xor
repz
push
add
adcb
pop
or
cmp
add
stc
mov
gs
adc
movsb
dec
es
movsb
movsb
or
sub
push
mov
movsb
sub
pop
movsb
movsl
scas
in
test
add
leave
popf
mov
fsubrs
imul
add
daa
ret
cli
inc
or
dec
cmp
add
xor
loope
and
dec
popa
js
cmp
push
mov
sarl
enter
pmulhuw
inc
dec
pusha
js
leave
leave
repz
mov
in
test
push
pop
in
in
outsb
jge
mov
mov
shrb
imul
xor
lret
fisubs
pop
mov
or
or
popa
sub
push
sbb
call
arpl
lcall
inc
es
mov
mov
testb
mov
mov
mov
pop
adc
mov
sub
jne
jns
ja
dec
loope
cwtl
xor
add
and
data16
sbb
adc
pop
cs
push
pop
sub
leave
and
inc
push
and
xchg
or
adc
inc
sahf
add
jle
and
pop
insl
pushf
ret
in
or
mull
aaa
outsl
outsl
and
in
movsb
jns
add
pusha
or
movsb
sbb
add
inc
popa
lods
cld
mov
addb
mov
mov
fs
leave
pushf
sbb
movsb
loop
push
lods
dec
sub
push
test
das
inc
add
nop
pop
rorb
cmp
daa
mov
pop
cwtl
stos
sahf
fs
daa
sub
xchg
mov
add
in
sbb
roll
adc
test
push
repnz
sti
xor
dec
pop
fcmovb
or
xor
cmp
and
mov
cmpsl
hlt
imulb
mov
lods
rorb
in
inc
outsl
lds
xor
push
dec
cltd
adc
push
ret
push
adc
decl
or
adc
adc
or
imul
es
das
lret
push
sbb
adc
push
cld
movsb
inc
aam
jns
out
pop
in
push
adc
dec
int
cmp
nop
push
xchg
cwtl
push
xchg
cmp
or
or
sub
inc
push
outsl
push
mov
jl
out
xor
rol
xchg
ss
fists
ud2
and
mov
add
les
dec
push
lods
push
ret
push
sub
dec
wbinvd
rclb
fisttpl
sbb
push
xor
fisubl
cmp
dec
or
push
add
pop
outsl
mov
push
and
mov
sbb
and
adc
cmc
push
push
and
mov
aad
mov
test
and
adc
inc
andl
pop
sub
mov
dec
test
loopne
ja
pop
adc
add
xchg
adc
jb
mov
lock
add
insl
mov
mov
mov
or
add
jb
scas
rorl
or
jno
call
jle
mov
aam
sbb
sbb
test
rclb
jo
mov
mov
mov
xchg
ja
cmp
xchg
add
cmpsl
js
scas
ja
lods
loop
cmp
push
insl
push
pusha
push
mov
mov
xor
push
mov
mov
wbinvd
test
cmp
enter
xchg
and
mov
pusha
pop
es
test
mov
xor
pop
and
and
pop
jmp
jne
cmpsl
mov
mov
mov
das
dec
lds
iret
xor
repz
push
push
push
pusha
orb
enter
insl
jb
enter
mov
mov
mov
jmp
test
or
inc
push
or
cmp
pusha
mov
popf
dec
xor
fmuls
insb
pop
xor
sub
popf
sub
daa
pop
icebp
jb
push
call
jecxz
mov
outsb
mov
test
cmpsl
sbb
xchg
outsl
movsb
push
loopne
call
push
dec
dec
inc
jo
sahf
mov
orb
ret
mov
sbb
testb
mov
or
mov
mov
or
cmpsl
mov
mov
add
dec
inc
pop
dec
add
pop
pop
lock
adc
and
add
mov
add
sti
pop
dec
loopne
jae
call
mov
add
sbb
cmp
int3
addb
jns
in
pushl
dec
bound
aas
push
lahf
stos
jmp
cmc
es
sub
xchg
out
mov
and
dec
out
stc
out
push
xchg
jg
jmp
lahf
int
mov
divb
fwait
jecxz
enter
out
notl
repnz
push
fldt
std
std
js
and
andl
cmpsb
ficoms
cmp
test
lret
sbb
leave
sbb
arpl
xchg
xchg
ss
idiv
enter
or
pop
cli
lcall
jbe
jmp
jge,pt
repnz
pop
jg
sahf
cmpsl
push
pop
out
push
into
mov
pop
xchg
sahf
imul
mov
cs
dec
sub
into
cld
push
mov
cs
out
out
fcomip
es
scas
inc
push
push
scas
push
scas
jl
negb
or
dec
clc
in
out
sti
xlat
outsb
cs
arpl
push
xchg
cmp
mov
push
push
fmuls
imul
out
push
xor
insl
pusha
stos
add
cmp
movsl
in
in
pop
inc
cmp
sar
dec
lds
cmp
push
push
pop
fimull
adc
mov
call
jno
jmp
dec
fs
mov
xor
sti
jmp
push
push
mov
push
and
or
adc
push
fldl
scas
sbb
repz
sbb
push
sbb
or
mov
push
sbbl
cmp
jecxz
ret
cwtl
and
add
arpl
inc
dec
sti
sbb
jle
pop
mov
rcl
pushf
js
mov
or
testl
je
jns
fsubr
push
xor
pop
int
or
outsl
sbb
daa
lods
add
pusha
int
lods
mov
add
fwait
int
pop
and
inc
and
pop
loopne
in
pusha
clc
sti
decl
and
cwtl
loope
lret
push
sar
lret
test
cmp
dec
sbb
jg
pop
push
mov
jle
dec
add
sub
repz
shr
cs
xor
inc
pop
ds
jnp
les
mov
jns
xlat
push
loopne
loopne
bound
rcll
mov
fimuls
push
and
pusha
sub
cmp
jns
shll
cmp
sahf
out
jmp
sbbw
loop
iret
jnp
repz
lcall
and
out
sarb
idivl
xchg
adc
fcmovbe
decl
push
mov
sbb
lds
scas
mov
bound
mov
ja
mov
cmp
inc
mov
shlb
aaa
sar
pushl
cld
cmpl
addr16
jb
sub
int3
jo
adc
mov
jmp
call
call
je
and
jne
fnstcw
lret
shlb
mov
or
push
loopne
pop
push
lahf
dec
add
push
nop
pop
cld
sub
sub
outsl
cmp
cmp
repz
push
pop
gs
repz
jo
add
lods
iret
repz
repz
add
repz
cmp
push
add
cmp
aas
iret
cmp
add
iret
aas
iret
repz
mov
cmp
rcr
out
iret
repz
repz
or
mov
sbb
div
cmp
dec
pop
add
jns
out
xchg
outsl
mov
enter
clc
add
int
add
sbb
xor
repz
repz
add
repz
aas
xchg
add
lcall
mov
add
out
sahf
jg
add
outsl
sub
out
push
add
add
js
xchg
add
jns
xchg
cwtl
movsb
stos
add
add
in
add
add
add
pop
or
jmp
icebp
sub
ds
cld
aas
dec
add
loop
pop
bound
add
mov
add
sahf
add
add
out
mov
rcr
add
add
out
jg
push
adcb
enter
sub
push
lahf
jg
push
inc
push
sub
dec
push
push
xor
bound
xor
jp
fmul
xchg
push
cmc
jns
xchg
push
mov
lret
in
jns
mov
enter
push
cwtl
loope
mov
iret
push
mov
cli
push
loope
or
pop
add
pop
cmp
aas
push
pop
push
add
ss
iret
push
cmp
pop
bound
push
add
push
add
repz
cmp
addb
add
or
pushf
pop
pop
add
scas
mov
iret
repz
pop
pop
mov
fsub
aas
iret
repz
pop
add
jmp
add
or
sbb
or
push
sub
lahf
out
xor
popa
add
cmp
add
sahf
jg
push
pop
or
insl
jno
sahf
out
out
test
push
lea
out
mov
ret
or
lcall
or
daa
stc
std
pop
or
adc
adc
call
daa
and
pop
daa
sub
or
daa
inc
or
daa
push
or
push
or
sti
outsl
cmc
bound
jle
fbld
arpl
add
sub
mov
sub
jne
xor
and
sti
std
aaa
imull
cmp
or
cmp
cmp
imul
imul
sub
adc
xor
mov
adc
and
leave
mov
mov
sub
adc
and
xor
jb
aaa
ficompl
lea
xor
mov
fisubrl
lea
arpl
push
cltd
testb
arpl
fwait
divb
pop
adc
mov
cmp
jae
cltd
jbe
mov
aaa
xor
insl
popa
inc
xor
mov
aaa
sub
adc
or
mov
or
mov
adc
xlat
mov
adc
enter
sahf
push
aas
cmp
fidivl
adc
or
inc
sti
xchg
sub
xchg
cmp
mov
xor
stc
push
mov
pop
xchg
cmp
mov
jno
jbe
scas
xor
aaa
cmp
adc
mov
lcall
cmp
pop
adc
pop
imul
add
rclb
test
pop
pop
jge
mov
enter
sub
aaa
cld
push
sti
xor
xor
imul
cmp
pop
fnstsw
pop
or
jnp
test
pop
bound
xor
pop
iret
adc
jecxz
xorb
or
pop
xor
in
fcoms
pop
adc
ja
cmc
push
sbb
mov
addr16
or
std
cmp
sbb
sub
add
or
xchg
push
pop
sbb
or
or
outsb
jo
mov
sbb
xor
xor
xor
add
sbb
sbb
aaa
sbb
cmp
and
jg
imul
sub
or
lock
pop
jne
or
sbb
mull
inc
aam
mov
lret
inc
sbb
das
imul
sbb
icebp
out
popf
xor
jo
fs
insl
fistpl
popa
adc
dec
pop
out
xchg
in
fldl
ja
jne
or
push
pop
push
xor
dec
xor
jecxz
fistl
jo
cmp
addr16
cmp
aaa
or
xor
bound
mov
orl
or
cmp
insl
mov
xchg
lret
mov
dec
dec
xor
xor
mov
popa
sub
ds
or
mov
adc
aaa
aaa
aaa
sub
cmp
ss
jp
negb
jae
push
mov
out
aas
xor
sti
sbb
fimuls
and
push
xchg
ss
ficompl
jnp
xor
sbbl
in
xor
pop
push
outsb
sarl
ss
mov
ss
mov
jge
aas
jne
push
mov
adc
js
and
xor
ss
or
xchg
pop
cmp
ficompl
xor
aaa
sbb
inc
out
jmp
xor
push
push
popa
arpl
mov
outsl
hlt
adc
or
loope
pop
and
adc
cmp
imul
jne
push
imul
sub
jne
inc
jnp
and
push
jnp
inc
sub
in
mov
mov
cmpsl
add
imul
adc
mov
push
sbb
push
or
and
dec
ret
xchg
mov
decl
fwait
jp
ljmp
pop
add
add
mov
jbe
adc
ror
xor
or
ret
sub
push
aas
fcoml
mov
les
outsb
enter
adc
call
cmpsb
inc
pusha
dec
sbb
outsb
sahf
cmpsl
push
adc
inc
or
test
or
and
repnz
out
sub
xor
push
sahf
cmpsl
or
cmp
inc
push
jns
lret
dec
dec
cmovs
iret
push
push
mov
or
dec
add
jl
add
outsb
pop
cmpb
pop
leave
ja
sub
add
jbe
in
mov
sub
cmp
jge
pop
xchg
push
inc
dec
notl
cmc
inc
dec
jmp
mov
add
xchg
lcall
cmc
adc
sbbb
mov
xchg
movsb
call
pop
fucomi
mov
mov
mov
mov
fsubs
mov
and
add
shlb
inc
or
mov
aaa
pop
arpl
adc
daa
sub
pushf
fiaddl
jbe
mov
sbb
and
add
fidivl
scas
out
sbb
icebp
icebp
sbb
lock
dec
mov
lea
push
enter
enter
mov
push
test
push
cli
or
add
outsb
pop
push
ljmp
fdivr
jmp
cld
pop
cld
xor
sub
push
adc
and
sub
fistl
cs
add
mov
pop
orb
fcmovnb
jmp
add
add
jns
cmpsb
cmc
mov
adc
sub
pop
pop
jmp
xor
mov
cmpsb
out
aaa
movsb
push
sub
pop
add
mov
mov
add
or
inc
mov
jb
push
movsb
and
sub
jg
sub
pop
add
in
push
mov
pop
adc
pop
sub
jae
jle
cmp
jg
aaa
sub
mov
and
sbb
stc
pop
jg
xchg
fcom
pop
push
pop
roll
mov
mov
pop
add
xor
imull
rcr
pop
add
push
push
mov
rorb
sub
fldl
pop
mov
push
je
mov
dec
fimull
fdivs
or
and
jp
jecxz
cmp
jl
or
mov
jmp
sti
sbb
jmp
sub
jne
outsl
and
mov
xchg
lcall
push
pop
cmpb
pop
pop
pop
cmp
jne
sub
faddl
mov
lods
cmpsl
lods
or
pop
or
out
mov
addr16
mov
xchg
adc
pop
cmpsl
test
iret
in
pop
ja
mov
add
int
push
mov
cmp
add
fcoml
ljmp
cmc
lea
shlb
call
push
xchg
adc
in
mov
sub
fndisi(8087
mov
add
adc
dec
xor
cmp
mov
clc
or
cmc
loope
or
push
xchg
mov
aas
in
mov
or
call
push
lock
or
pop
push
pop
adc
lahf
sbb
pop
xchg
add
add
and
ror
mov
add
inc
loope
push
pop
mov
fcomps
mov
iret
sti
pop
and
push
ja
sahf
push
sar
into
xor
jmp
inc
les
push
cmpsb
insb
mov
or
cmp
lock
sbb
notl
sub
inc
das
inc
hlt
pushf
and
pop
aaa
fxch
movsb
pop
add
cld
xor
xorps
ficoml
add
or
push
jne
dec
sbb
cs
sub
imul
test
addr16
pop
sbb
popf
sbb
mov
jle
shll
shlb
sbb
push
ja
cmpsb
aaa
pop
ret
and
loopne
insb
pusha
ja
add
stc
mov
or
mov
fmuls
idivb
movzwl
scas
insb
jge
sub
sbb
xor
and
sahf
adcb
bound
xchg
inc
pushl
add
and
push
push
and
in
xlat
imul
inc
jae
fwait
sub
mov
js
cli
cmp
movl
xchg
adc
push
or
subl
sarl
das
xchg
mov
test
sbb
int
ljmp
xorb
push
nop
xor
push
lock
and
mov
lahf
xchg
repz
inc
mov
mov
xor
icebp
idivl
jne
add
fbstp
sbb
jne
imull
xor
xchg
rolb
push
fcomps
and
push
mov
xchg
inc
adc
mov
inc
pop
mov
dec
aad
push
out
mov
call
call
jo
sub
xlat
dec
roll
icebp
jbe
add
cmp
sbb
call
fs
pop
imul
aad
loopne
call
popf
mov
orl
popf
pop
pop
push
mov
add
shll
adc
dec
sub
sbb
aam
push
mov
ds
jne
jbe
stos
xchg
add
fwait
pop
mov
clc
sub
jl
inc
mov
cmc
jl
aam
adc
je
add
jg
jne,pn
rcr
xchg
lods
in
ja
addr16
mov
mov
pop
aam
cld
mov
sbb
neg
loopne
and
mov
shlb
inc
incb
insl
test
dec
icebp
jle
xor
es
cmp
sbb
dec
push
insb
jne
add
sti
jg
icebp
shr
sub
jbe
add
sub
jp
add
jmp
jae
mov
jne
nop
push
ret
push
mov
sub
push
add
lds
or
les
aad
in
mov
push
pop
add
notl
xor
mov
mov
movsl
aam
les
mov
and
or
arpl
pusha
mov
cmp
ja
xor
testl
je
lods
cmp
loopne
sbb
sbb
pop
or
sbb
mov
cmp
push
sub
fadds
subl
scas
js
xchg
fnstenv
orl
fldcw
mov
push
push
add
xchg
daa
cmp
add
andl
insb
andb
fadd
faddp
nop
adc
lock
xor
shrl
popa
xor
add
mov
jbe
les
fcom
fstsw
sahf
jae
fnstcw
sbb
loope
add
ret
ffree
ffree
ffree
pop
in
or
js
cmc
or
inc
sbb
add
sub
mov
push
shll
movsl
add
jo
push
add
mov
dec
add
push
lock
test
ds
cmp
outsb
pushf
or
inc
test
lea
ret
lcall
xchg
mov
push
sub
testb
jg
mov
jo
imul
addr16
in
lret
or
cmpsl
jle
scas
pop
outsl
gs
sahf
mov
in
cmp
or
xor
dec
popf
pop
int3
fcomip
mov
push
sahf
or
or
mov
aam
lods
les
pop
jne
sbb
addl
ja
sbb
mov
test
mov
aaa
test
and
cmc
inc
push
movsb
lods
fsts
mov
test
push
mov
out
outsl
mov
add
xchg
dec
mov
pop
in
adc
mov
adc
loopne
inc
arpl
lahf
imul
gs
mov
xor
inc
jg
xchg
lcall
aaa
movsb
pop
scas
xor
mov
shll
sbb
sbb
sub
sti
andb
stos
jae
jle
sbb
movzbl
xchg
nop
sbb
or
out
shl
adc
fbstp
adc
insl
lock
setne
jmp
cmp
dec
cmp
pop
sub
pop
imul
inc
mov
mov
jmp
xor
push
xor
cmp
xlat
js
add
call
ss
xchg
out
and
and
rorl
daa
sbb
add
or
xor
push
xchg
std
out
mov
add
mov
xchg
nop
scas
ja
test
mov
push
push
cmc
arpl
add
hlt
inc
ljmp
fnstsw
cmpl
pop
fcoml
xchg
sarl
xchg
loope
imul
adc
mov
pop
outsb
sbb
xor
test
mov
aam
mov
add
push
int
mov
loopne
or
mov
mov
ficoml
addb
lock
outsl
test
mov
and
ja
xlat
in
les
push
adc
sub
shll
test
movsb
push
push
mov
xor
push
push
sub
fwait
xor
imul
out
ss
push
sahf
jbe
loopne
scas
add
sub
pop
adc
push
int
cmpsl
push
cltd
push
pop
sub
pop
push
shrb
dec
jp
pop
xchg
pop
push
in
add
dec
aaa
xchg
fwait
jb
adc
cmp
jae
jns
jne
pop
iret
insb
cmp
or
psubsw
jg
out
dec
mov
test
mov
popf
mov
xor
adc
jp
cmp
outsl
lods
js
inc
inc
imul
loope
imul
je
arpl
test
xor
adc
rol
xchg
push
popa
or
jmp
push
leave
push
out
cmp
addr16
and
int
arpl
cs
daa
sub
je
or
je
jnp
mov
jns
pushf
mov
jbe
or
frstor
sbb
sbb
push
decb
and
dec
push
mov
xor
or
jne
out
mov
or
incb
fdivs
ud0
ja
add
push
fwait
insl
daa
enter
dec
dec
sbb
loop
movzwl
lahf
add
sub
rcll
data16
xchg
test
xchg
inc
movsl
add
adc
cmpsl
xchg
and
aaa
mov
sbb
pop
mov
mov
ljmp
wbinvd
pop
mov
into
jne
push
mov
adcl
test
cmp
movl
adc
mov
xorl
int3
or
adc
ret
aaa
testb
sarl
cltd
dec
sbb
leave
xchg
fadd
jg
ds
and
sbb
adc
jo
add
je
out
call
xchg
inc
push
cltd
push
jb
push
fsts
in
into
adc
sub
sbb
inc
incb
ljmp
dec
popa
pop
imul
test
add
jle
fstps
jle
outsl
cmc
loopne
xor
inc
call
arpl
ret
ljmp
push
mov
push
add
imul
sub
mov
sbb
xor
scas
mov
mov
xchg
cmpsb
xor
ljmp
cmp
fld
adc
nop
or
and
mov
neg
orb
mov
aas
dec
lock
mov
in
jne
xor
inc
or
fs
sbb
pusha
push
push
iret
pop
mov
cmc
cmp
xor
pop
mov
ret
mov
push
ljmp
add
push
orb
add
mov
sbb
dec
jae
jp
adc
xchg
cmp
ret
inc
pop
outsb
jae
mov
add
dec
jno
sbb
out
in
adc
call
inc
or
mov
rorb
mov
lret
mov
add
cli
mov
mul
addb
rep
or
movsb
pop
lods
sub
clc
pop
pop
pop
pop
push
mov
out
dec
aas
mov
cli
int
or
jmp
mov
addr16
fcoms
jo
cmp
fidivrl
push
or
jne
aaa
fcompl
mov
mov
add
into
mov
add
test
jp
sub
outsl
aas
jl
jne
mov
ja
divb
or
jb
push
dec
add
lret
add
jne
sbb
push
sahf
fwait
add
jne
push
add
popw
push
jne
and
jno
pop
sahf
inc
sahf
pop
jno
sub
pop
push
mov
mov
jnp
cmp
and
xor
adc
dec
testb
push
cmp
jne
lcallw
mov
ret
hlt
xchg
sub
mov
es
fldt
push
rcrl
shr
push
push
cmpsb
je
mov
cmp
cmp
ja
aaa
imul
cmp
or
sbb
sub
sub
je
ja
xchg
movsl
aas
cmp
xor
arpl
mov
adc
clc
push
pop
aam
shr
dec
rolb
ret
adc
or
push
jb
les
mov
cltd
adc
sub
hlt
stos
mov
mov
sbb
push
and
mov
cmp
or
mov
call
or
sub
xchg
imul
jge
outsb
jae
pop
outsl
pop
cs
icebp
adc
mov
aam
or
adc
inc
xchg
xchg
adcl
push
lahf
pushf
imul
cli
mov
imulb
icebp
jbe
push
lea
ljmp
enter
add
in
sbb
inc
push
mov
js
mov
mov
mov
add
cmc
bound
and
push
ss
xor
cmc
push
imul
divb
je
or
add
pop
cli
or
rolb
dec
jne
mulb
inc
sub
jmp
jbe
int
mov
fildll
imul
add
adc
add
shrb
scas
jae
pop
push
adcb
aad
cmp
mov
mov
add
jg
or
aam
sbb
cmpsl
scas
mov
sub
mov
jo
dec
xor
pop
sbb
fisttpl
cld
inc
loop
cwtl
mov
dec
lods
mov
enter
sarb
or
cld
sbbl
inc
rcrl
jl
aad
adc
outsl
xlat
test
out
xor
cmc
test
push
inc
shrb
push
ret
sub
mov
cld
mov
xchg
fmuls
mov
rcrl
imul
outsb
or
loopne
sub
imul
adc
push
or
into
mov
xor
cmovne
imul
pop
sbb
inc
sahf
add
mov
and
push
ds
jge
and
std
dec
cld
lea
lldt
add
mov
adc
add
ret
dec
cmp
jg
jmp
and
in
mov
ss
push
mov
lahf
push
dec
mov
jle
push
fstpt
fimull
das
jl
dec
hlt
test
or
push
inc
push
movsb
in
call
je
lret
xor
mov
inc
adc
lahf
movb
and
dec
mov
and
xlat
or
or
cmpl
sbb
ret
or
out
movzbl
add
pop
add
jecxz
push
call
push
cs
or
mov
sbb
sub
pop
push
cld
mov
push
pushf
or
out
stos
dec
jne
mov
sub
jns
adc
add
lock
lods
insl
add
data16
ljmp
insb
ss
std
mov
call
fimull
fstpt
mov
jl
testl
fs
fidivl
fisubrl
push
cvtpi2ps
dec
in
jmp
fildll
ja
xor
mov
push
push
sbb
dec
dec
or
fistpl
dec
sub
orb
sub
jae
add
dec
movsw
xchg
sbb
mov
cmp
mov
adc
and
into
or
fs
cmp
ja
imul
data16
add
push
add
pop
pop
xor
mov
decl
mov
aaa
mov
ficomps
je
dec
xor
loope
fadd
and
mov
arpl
lds
sub
pusha
jne
xor
mov
push
jns
dec
jg
add
and
ja
test
push
mov
dec
repz
jmp
pop
cmp
jae
pop
push
add
stos
outsl
push
pushf
out
fimuls
fmul
inc
clc
or
cmpsb
dec
fdiv
push
add
in
cld
adc
lea
jg
mov
sub
xchg
mov
sub
je
mov
sahf
xchg
cmp
sbb
or
lock
push
clc
ljmp
jo
stc
sub
bound
jecxz
clc
ret
or
sbb
mov
cmc
in
loopne
insb
jl
lock
inc
and
stc
mov
out
and
das
push
add
mov
push
pop
or
pop
xor
ret
inc
es
xor
inc
mov
add
ja
aas
push
jne
cld
call
pop
jns
push
lahf
pop
pop
xor
inc
or
mov
in
sub
jmp
daa
fsubs
inc
cmp
ja
or
xor
xlat
mov
jecxz
add
test
in
add
mov
stos
pop
lods
popa
popf
out
push
xchg
movsl
mov
dec
pushf
sbb
mov
cs
fistpll
je
mov
or
je
mov
inc
je
mov
dec
je
maskmovq
mull
mov
mov
sarb
dec
loopne
jbe
inc
ss
and
aaa
push
cmp
push
add
sub
sub
push
push
scas
push
lea
mov
dec
add
sub
and
les
enter
or
cmp
mov
push
mov
push
sbb
pop
scas
sbb
test
popa
add
mov
dec
adc
xor
or
mov
pusha
mov
imul
pop
mov
jb
pop
pop
xchg
add
lea
mov
xchg
jl
xchg
or
clc
mov
xor
stos
fidivs
shrb
jo
jmp
or
jge
mov
neg
cli
arpl
push
data16
into
mov
inc
xchg
push
push
mov
fmull
push
and
mov
adc
dec
mov
in
jg
or
jg
pop
pop
dec
mov
pop
std
cmp
jo
push
loopne
pop
push
addr16
stos
push
aam
inc
cld
lods
sbb
mov
jmp
fwait
push
mov
movsb
sbb
mov
add
mov
adc
sar
cmp
push
out
mov
pop
sub
push
inc
mov
jb
sarl
cmc
jle
dec
mov
clc
cmp
sub
daa
dec
jge
add
in
add
cmp
out
add
mov
je
inc
clc
jg
sbb
shl
lea
inc
ja
jne
mov
in
scas
adc
adc
adc
je
or
fwait
mov
ja
movswl
mov
sbb
sahf
pop
inc
mov
sbb
call
stos
notl
les
mov
dec
fiaddl
push
cmp
test
mov
lods
or
dec
arpl
push
jge
pushf
push
addr16
mov
pusha
stos
ret
sbb
fcoml
lods
rcrl
jg
cmp
jl
repnz
xor
ret
and
dec
inc
push
adc
add
shlb
and
movsb
je
jne
frstor
and
cmc
adc
push
stos
popa
ret
xor
xchg
pop
xchg
fstl
shr
fisttps
mov
fildll
divl
push
out
mov
pop
flds
aaa
push
jecxz
dec
repz
pusha
inc
cli
adc
addl
cmc
sub
fisttpl
je
mov
dec
test
repz
inc
add
mov
dec
jne
loop
mov
ljmp
and
mov
jecxz
lea
inc
or
adc
test
adc
add
cs
ja
sbb
mov
sub
cmp
dec
mov
add
lea
xchg
xchg
add
je
push
push
cmp
popa
ret
andb
sub
outsb
push
pop
push
fimuls
add
pop
inc
loop
ret
inc
bound
push
jl
jbe
scas
and
inc
add
and
and
adc
and
sub
inc
sub
sub
cltd
cmp
push
sbb
and
sub
mov
orl
dec
or
sub
xor
mov
xchg
mov
andb
std
sti
adc
inc
add
mov
push
dec
add
jmp
inc
or
and
mov
or
divps
je
or
add
mov
push
lret
and
mov
pop
push
loope
test
push
cmp
push
inc
fwait
lods
sbb
cli
aam
cmp
je
dec
jl
jge
jne
adc
jle
jno
jl
sbb
punpckhdq
jmp
jbe
inc
xlat
push
cmp
shlb
jmp
je
sti
or
dec
or
sub
push
sbb
push
je
or
sub
inc
xorb
adc
out
in
out
repnz
and
loop
movsl
in
jbe
push
xor
fbld
mov
xchg
ds
inc
pop
sti
adc
mov
add
and
or
xor
cmp
imul
cmp
inc
dec
loopne
mov
je
mov
jmp
inc
jmp
addb
sar
insw
das
jle
mov
jge
jne
cs
movb
jmp
fstl
adcb
fmuls
icebp
xor
jmp
out
jns
adc
cmp
push
repz
clc
mul
push
jle
xchg
xor
add
in
sub
xchg
push
test
xchg
pop
fdivrs
pop
ret
roll
push
adc
aam
adc
add
data16
push
repnz
jb
dec
push
mov
inc
rcrb
or
mov
jne
icebp
cmp
xchg
lret
in
in
out
and
sahf
cmp
insb
lret
xor
add
loope
jmp
lds
in
mov
es
out
sub
mov
jmp
push
adc
cmp
jne
in
pusha
push
addr16
std
gs
xlat
jno
pop
jmp
mov
mov
and
decl
mov
mov
add
les
jmp
mov
inc
lcall
daa
bound
daa
insb
shlb
cli
and
jne
subl
iret
sbb
adc
mov
repnz
ss
adc
lcall
sbb
rcrb
xchg
loopne
jmp
lods
inc
push
jecxz
je
lret
testl
mov
hlt
and
shll
or
push
push
xchg
lock
jle
clc
dec
pop
icebp
add
movb
jecxz
fldt
sub
aam
rclb
jp
cltd
test
jbe
jmp
add
loope
roll
fcmovnu
test
xchg
fldt
fstsw
fwait
mov
idiv
mov
cld
add
or
mov
lcall
loopne
jnp
mov
cld
lcall
mov
shr
and
fdivs
add
adc
mov
or
in
jns
mov
xchg
cmp
sti
idiv
fwait
cli
or
cmpb
jb
movb
js
decb
mov
cmp
push
pusha
xor
jmp
test
aaa
cmpl
icebp
shrl
sub
push
or
add
fwait
mov
out
mov
xchg
rorl
sbbb
mov
insl
adc
xor
or
pushl
call
jl
mov
mov
mov
loopne
jae
dec
add
test
fldt
fildll
cli
mov
cwtl
loope
cmp
mov
jnp
inc
add
fwait
dec
add
js
mov
mov
mov
and
jne
dec
jne
cmp
aas
into
pop
and
inc
ljmp
mov
pop
into
cmpb
jbe
or
or
sbb
ret
iret
pop
pop
sub
push
add
mov
xchg
mov
dec
push
sti
icebp
loop
out
fs
js
cmp
pop
mov
mov
mov
icebp
xor
ret
cmp
mov
and
jnp
icebp
je
sub
movsb
xor
push
fnstcw
add
lahf
fnstenv
mov
mov
incl
pushf
rolb
ret
add
loope
leave
mov
aas
jmp
fstpt
add
jmp
or
rorl
aas
insl
dec
mov
jo
lret
and
sarl
orl
repz
and
pminub
inc
jmp
lcall
stc
stc
lock
mov
adc
imul
clc
pop
sbbb
cli
in
jecxz
add
xchg
mov
pop
mov
push
push
jmp
inc
addb
mov
addr16
aad
addb
adc
xor
add
add
movsb
cmp
adc
adc
push
test
sub
ficoms
lods
xor
es
lods
jae
out
loope
pushf
outsb
pusha
inc
cmp
mov
mov
sbb
or
fmulp
xchg
sbb
sar
add
ss
fs
loopne
xor
in
dec
aaa
xor
sub
push
add
add
add
pop
jnp
xchg
adcb
lock
and
lock
sbb
stos
call
lret
mov
outsl
push
or
cltd
mov
xchg
sub
or
insl
mull
adc
pop
fldt
add
in
stos
ja
and
and
fildll
push
sub
pop
fwait
mov
test
jae
fstpt
loopne
dec
add
or
fsub
fnstcw
data16
pop
shrb
data16
leave
jle
pop
inc
out
adc
imul
or
adc
xor
xor
mov
frstor
shlb
push
inc
jb
gs
push
pusha
adc
sahf
adc
mov
sub
jbe
adc
push
adc
add
rorl
rcrl
dec
sahf
jl
movsl
inc
cli
xchg
jg
mov
add
mov
mov
push
sub
sbb
aam
jecxz
dec
dec
shrb
dec
push
push
jmp
pop
cltd
cmp
or
add
add
mov
aaa
je
mov
les
orb
mov
push
cmp
pop
sub
add
lcall
decb
dec
repz
lcall
jae
stc
dec
mov
and
mov
add
lods
pop
andb
rolb
cmp
shlb
and
add
sbb
adc
jo
lods
inc
outsl
push
les
popf
lcall
sbb
cmp
or
clc
adc
mov
sub
sub
iret
pop
ljmp
fdivs
fst
xchg
ret
jg
push
add
or
sbb
dec
mov
sbb
ret
sbb
push
cmp
cs
and
sbb
and
lock
pop
enter
add
and
fld
mov
loopne
div
imul
nop
add
rorl
pusha
lods
lahf
scas
rcll
hlt
rorb
add
jmp
enter
pusha
jo
sub
test
in
cld
pusha
outsl
lcall
orl
fistps
js
or
jb
sti
insb
je
cmp
movsb
add
adc
jle
in
add
addl
jne
sub
dec
lock
imul
out
mov
bound
in
add
cli
add
repnz
ds
arpl
popa
ds
add
ret
or
jae
clc
stos
inc
or
std
in
int3
jo
rcll
jno
sbb
in
add
add
xchg
call
mov
jp
std
dec
in
test
jg
ljmp
pmuludq
add
xchg
shll
arpl
dec
data16
stc
mov
mov
mov
addl
adc
and
jo
lods
mov
xchg
cltd
mov
mov
or
push
cmp
imul
mov
push
sub
pop
mov
fiaddl
aam
pop
sbb
and
xchg
xchg
sub
inc
subl
pop
pop
mov
cmpsl
adc
mov
stos
jbe
dec
cmp
pop
rorl
insb
dec
cmp
jb
adc
lcall
filds
sbb
clc
loopne
cmp
pop
roll
hlt
mov
sub
je
cmpsb
mov
jbe
fdivr
push
jbe,pt
imul
in
xchg
pop
iret
fwait
loope
ret
cmp
addr16
xchg
push
push
dec
loopne
addl
aam
sub
jae
add
jl
subb
cmp
mov
and
sbb
add
adc
rcr
sub
jl
lret
or
lock
xchg
and
ds
pop
outsl
idivb
and
add
and
adc
jae
lock
and
pop
add
sahf
cmc
and
lret
std
repnz
sub
mov
sub
rorb
pop
lods
ljmp
aam
fmuls
inc
sbb
mov
sub
adc
xchg
in
inc
psrld
mov
mov
adcb
push
roll
adc
inc
mov
xchg
or
sub
xchg
cmp
je
mov
push
sub
in
mov
pop
aaa
cmpb
jne
mov
imull
pop
push
lea
or
cmpsl
leave
in
loopne
movb
outsl
cmp
loop
push
int3
xchg
iret
in
jge
idiv
jmp
loop
xchg
cmp
fisttps
add
fmuls
mov
aas
push
xor
xchg
inc
in
inc
in
adc
jns
cli
mulb
out
push
fsubrl
mov
add
push
pop
dec
out
rcl
add
inc
in
mov
rorb
fbstp
xchg
in
insb
add
mov
sub
or
and
repnz
jg
fisttpl
add
cmp
subl
fistpll
push
mov
repz
sbb
sub
adc
inc
mov
negb
add
adc
roll
outsb
sbb
insb
xor
inc
dec
push
repnz
icebp
in
inc
sub
inc
xchg
addr16
add
call
jns
add
pop
cmp
bound
or
sub
je
and
sbb
xor
mov
xor
dec
sbb
es
ja
aaa
data16
les
add
jg
daa
das
fisubl
mov
and
mov
dec
in
or
push
jo
loopne
clc
std
mov
std
pop
pop
incl
xchg
loopne
add
pop
jp
mov
ljmp
movsb
cmp
xchg
lds
les
in
jecxz
pop
stos
ja
rcl
cli
insb
rclb
in
xorl
sub
add
sub
ljmp
call
adc
cld
dec
mov
dec
jne
mov
xchg
rcrb
fs
fidivs
ja
or
mov
lods
mov
out
and
rorb
or
or
add
add
pop
or
or
or
pop
out
jl
mov
pop
int
jns
ss
pop
out
cmp
push
loopne
cmp
insb
add
in
and
mov
or
in
mov
out
mov
pop
adc
inc
add
popf
dec
push
inc
mov
and
fcomps
push
lods
sbb
pop
in
ja
inc
sahf
jb
sbb
sbb
push
shll
dec
mov
rorl
mov
popa
test
sub
je
dec
add
mov
fildll
cli
mov
imul
mov
mov
xchg
fistpl
and
dec
or
xchg
jmp
mov
inc
fsubp
jne
xor
stos
cs
lcall
xor
add
call
dec
jg
je
or
je
or
xlat
inc
sti
je
jmp
or
mov
cmpb
push
outsl
xchg
jne
mov
scas
rcrb
shlb
sub
push
dec
in
adc
sbb
addl
sub
cmp
ficoms
dec
inc
sbb
dec
in
out
jp
rolb
sbb
rcr
fmull
jmp
sbb
xor
lea
jle
or
cmp
or
popa
notb
push
enter
jne
push
inc
enter
and
cltd
in
out
add
stos
adc
push
mov
lock
dec
clc
mov
mov
loop
lods
mov
rorb
std
xchg
arpl
test
add
add
mov
jns
sbb
mov
adc
mov
jns
sbb
push
add
push
test
jmp
ljmp
or
cmp
clc
adc
add
mov
xchg
xor
mov
dec
stos
arpl
test
leave
push
in
fcmovu
xchg
or
dec
cmpsb
or
js
jmp
scas
in
jmp
pop
adc
xchg
test
add
add
insb
es
mov
mov
in
sub
in
aaa
insb
movl
test
cmpsl
or
sbb
mov
mov
bound
in
addb
fnstcw
add
push
adc
xor
fidivrs
pop
add
pop
sbb
lahf
and
hlt
fdivl
mov
push
dec
add
sbb
pusha
mov
pusha
jno
sbb
outsb
scas
rolb
lea
push
movsb
lods
pop
ja
inc
sti
cmp
push
add
mov
and
xor
mov
test
in
mov
mov
lret
mov
outsb
mov
andb
scas
pop
and
iret
and
in
mov
out
cmp
mov
ret
jnp
mov
mov
adc
xchg
lcall
pop
xchg
ljmp
test
dec
pop
add
jb
cmp
jle
mov
aam
ret
int3
mov
loop
push
add
sbb
addr16
push
jmp
or
inc
insb
sti
add
inc
mov
xchg
add
bound
jge
js
into
rcrl
xor
pop
jp
jne
ja
adcb
add
mov
push
inc
sahf
inc
mov
xor
dec
es
es
and
xchg
and
pop
jl
rcrb
cli
pop
lock
jne
incl
je
mov
jae
jg
add
dec
jle
subl
enter
jg
push
adc
je
or
push
jmp
mov
sbb
push
push
mov
jmp
inc
mov
jle
or
ret
cmpsl
lret
xor
jl
dec
jmp
sub
jbe
jbe
jne
xor
sbb
cli
lock
data16
jns
sub
adc
xchg
adc
inc
mov
rcl
out
push
mov
inc
xchg
cmp
and
push
mov
pop
jmp
add
pop
mov
and
mov
add
je
jne
add
cli
jg
or
adc
jne
cmp
jg
fisttps
mov
js
out
cld
cltd
xor
sub
adc
ret
push
dec
stc
imul
add
add
push
xchg
pusha
push
add
stos
ds
adc
or
push
dec
cld
gs
cmpsb
rcrb
aam
add
push
lods
fsub
hlt
adcl
jg
adc
cmp
adc
or
out
mov
pop
mov
pusha
std
test
jl
jnp
push
pop
addr16
mov
xor
fsubr
or
pop
or
outsb
lock
inc
xchg
jp
or
xor
cmp
cmp
adc
xorl
cmpsl
jl
cld
sbb
jle
ret
pop
mov
dec
push
rorl
enter
pop
in
or
in
jecxz
icebp
mov
repnz
jb
pop
out
fmul
daa
loopne
jmp
cmpsb
sahf
push
lock
jecxz,pn
loop
lock
push
out
out
inc
inc
out
lock
dec
mov
pop
adc
outsl
js
lcall
ljmp
pop
push
jmp
cmpb
ja
in
kandnb
add
rcr
push
out
fmuls
or
add
mov
cmp
addl
fisttpll
fs
jnp
cwtl
repnz
and
add
inc
push
adc
dec
pop
cwtl
es
adc
or
js
xchg
inc
sbb
arpl
add
cmpsb
dec
mov
jl
mov
push
and
mov
pop
pop
fcoms
adc
mov
jge
aaa
sbb
fsubrs
xor
fwait
xchg
cmpsl
dec
aam
aam
lock
es
adc
js
push
call
repz
xchg
pop
adc
add
jecxz
repz
inc
xlat
or
gs
mov
mov
cli
adc
clc
or
mov
adc
cld
mov
sbb
xor
and
sub
inc
add
push
ret
dec
mov
inc
xchg
mov
cmp
pop
testb
bnd
ss
rclb
push
pop
je
pusha
addb
nop
add
cmp
iret
enter
mov
inc
or
sbb
jnp
push
sub
insl
je
or
mov
sahf
xchg
add
add
addr16
pop
outsl
push
dec
inc
mov
inc
cmovl
xchg
dec
mov
sti
lock
mov
ss
nop
data16
push
scas
push
out
and
movsb
aas
add
dec
push
repnz
add
xchg
inc
mov
jmp
push
mov
sub
and
inc
setl
out
test
xor
dec
dec
or
testl
js
xor
or
push
push
inc
or
add
scas
and
std
pop
and
xlat
sub
cmp
fidivrs
cmp
sub
shrl
push
outsb
mov
mov
dec
push
or
rorb
mov
jle
sub
dec
jge
call
sbb
mov
sahf
or
fidivl
mov
sub
sbb
gs
sbb
mov
sti
jecxz
aaa
add
fsubr
add
sub
or
outsl
and
jecxz
out
pop
push
cmpl
addb
and
sub
roll
je
gs
dec
push
jl
xchg
push
or
add
sbb
or
or
and
orl
iret
sbbb
xchg
mov
jb
pop
fcompl
in
or
dec
mov
xor
fs
push
cmp
stos
sbb
shlb
jmp
mov
rorl
test
xchg
dec
popa
or
dec
dec
popf
sub
mov
push
ret
lods
push
pop
sbb
add
push
stos
push
fnstenv
mov
mov
and
mov
xor
push
inc
or
sub
sub
cld
out
xlat
nop
addl
xor
pop
or
lea
push
adc
test
adc
outsb
mov
inc
or
mov
shl
xlat
xor
push
inc
push
andl
sub
mov
mov
daa
daa
dec
jne
je
leave
fwait
cmpb
push
push
les
aad
mov
mov
mov
addl
sbb
dec
xchg
mov
enter
xor
rcrb
cmp
xor
mov
sahf
mov
daa
in
cmp
add
call
xor
add
mov
movsb
jl,pt
mov
fs
dec
fidivl
sbb
shlb
sbb
outsb
xor
push
jo
movsb
pop
jne
xchg
jno
sub
lea
fwait
push
imul
fadd
and
xor
fcoml
sub
dec
rorl
dec
push
inc
or
call
sub
data16
aam
or
movsl
ds
sub
sbb
push
jge
mov
enter
rolb
mov
mov
xchg
adc
add
imul
daa
insl
xchg
int3
aas
ret
adc
nop
pmulhuw
hlt
mov
lret
inc
pushf
rorb
dec
push
mov
mov
inc
xor
sbb
int
jne
hlt
sbb
or
andl
xlat
jle
pop
or
sub
adc
popl
sbb
fs
sarb
insl
add
inc
sub
mov
fbld
daa
mov
and
imull
xor
push
pop
sbb
sub
inc
jo
jno
cmp
mov
or
mov
cmpsl
adc
cmc
push
or
or
js
push
sbb
or
add
xor
mov
clc
sub
dec
pushf
pop
or
add
lea
xor
mov
imul
clc
imul
seto
shl
mov
adc
nop
cli
pop
sbb
rolb
popa
sbb
sbb
bound
pop
add
filds
insb
xor
nopl
imul
inc
add
psubd
sbb
gs
or
into
dec
lea
lock
shl
and
lock
add
inc
popa
fstl
cld
push
decb
jne
fsts
cli
rolb
lds
imul
mov
push
mov
cld
mov
push
in
push
pop
push
inc
dec
out
dec
clc
dec
xor
fs
hlt
cmp
jb
xchg
adc
xor
lods
and
hlt
nop
xchg
and
test
rcrb
push
addb
adc
jle
inc
cmp
add
dec
pop
mov
stos
movsb
mov
jle
mov
xchg
fisttps
xor
fsts
mov
call
js
nopl
cmc
cmpsl
daa
jnp
add
xchg
mov
add
pop
pop
cwtl
mov
xor
aad
and
adc
loope
push
loopne
imul
jb
fwait
cmp
repz
pop
loope
pop
jne
cmp
sub
ja
dec
imul
sbb
mov
je
push
adc
nop
inc
add
daa
sbb
jmp
mov
cmp
pop
sub
fstpt
adc
gs
xchg
cmp
mov
mov
adc
dec
xchg
in
loop
inc
daa
mov
cs
push
lea
nop
loop
mov
adc
sub
pop
shlb
add
inc
sahf
dec
adc
pop
add
push
rorb
in
insb
les
cmp
push
pop
je
pop
imul
sbb
out
add
dec
push
pop
adc
sub
xlat
mov
insl
popa
jne
subb
adc
push
inc
sub
xor
xorb
addr16
lods
or
gs
push
add
fimull
or
daa
xor
cli
pop
enter
pop
je
inc
cmpl
loopne
lods
add
adcb
sub
ss
push
push
mov
sub
data16
push
sbb
jl
mov
mov
movsb
and
or
jmp
out
in
push
jo
repnz
and
jmp
or
sub
popf
jae
push
push
ret
sub
push
mov
inc
repnz
dec
jne
push
push
cmp
push
jb
test
dec
and
cmpsl
addb
add
mov
or
popf
adc
sbb
push
and
enter
jg
popa
mov
mov
and
sub
inc
in
addr16
dec
inc
add
in
les
aaa
mov
xor
std
mov
popf
cmp
mov
outsl
test
out
es
adc
jb
sbb
mov
fists
roll
dec
movsb
inc
add
pop
call
shlb
fdivs
test
xor
subb
xor
inc
mov
sbb
jb
push
or
sub
insb
lea
imul
mov
repnz
sahf
movsb
adc
and
lods
cs
inc
add
push
mov
ja
imul
mov
rcrb
inc
mov
push
lea
or
pop
sarl
sub
push
pop
mov
loopne
lea
test
lods
push
and
cs
inc
or
push
push
xor
add
pop
lcall
add
js
popa
inc
jle
jb
es
lcall
aas
outsb
insl
xor
cmpb
les
pop
mov
aas
pushf
daa
mov
jecxz
dec
sbb
cmp
xor
cmp
ret
xor
aas
push
mov
push
int3
adc
push
sbb
aaa
push
leave
xor
in
js
addl
lcall
cltd
xor
test
xor
adc
mov
sbb
test
cmovb
and
add
pop
orb
filds
lret
fcmovb
ljmp
mov
in
ja
pop
sahf
test
pop
mov
inc
add
sub
add
push
rolb
mov
divl
pop
ds
xlat
or
les
and
push
sti
xlat
iret
xchg
dec
xor
jmp
icebp
push
and
enter
mov
or
imul
mov
enter
cmpl
and
pop
lea
add
shlb
mov
sub
mov
or
push
inc
sbb
into
movsl
movsb
cltd
adc
jo
repnz
sub
sub
setge
push
mov
movsb
xor
and
sub
test
mov
push
je
xchg
cltd
sbb
sbb
and
into
aaa
and
inc
xchg
inc
pusha
rcl
jg
xchg
in
cmp
shlb
push
cli
fisttpl
test
mov
and
add
mov
clc
sub
dec
or
into
or
inc
int3
testl
or
rolb
sbb
js
mov
js,pt
dec
inc
ljmp
je
outsb
daa
jo
aaa
xchg
mov
add
xchg
mov
cmpsb
adc
loop
in
mov
jnp
cmp
cmp
inc
ja
jecxz
daa
dec
sub
testb
mov
inc
dec
cs
add
mov
decb
adc
rol
sub
call
or
adc
and
or
or
int3
xor
cmp
jg
or
test
frstor
movsb
jne
sbb
mov
mov
mov
push
dec
test
pop
push
insb
cmp
sbb
mov
pop
pop
out
jp
add
sbb
dec
sub
ds
push
or
cmp
lcall
push
mov
jnp
adc
cmp
sbb
mov
xchg
mov
jecxz
mov
jb
jo
ret
fcoml
icebp
in
stc
fstps
das
inc
pop
cmp
xor
in
adc
jge
mulb
push
mov
call
cmp
div
loopne
mov
xchg
pop
adc
sbb
fsubr
jmp
orb
and
insl
or
inc
mov
xor
addl
scas
fsubl
or
sarb
add
in
sbb
pop
push
repnz
push
cmp
je
jmp
xor
inc
add
jb
sub
push
add
jl
sbb
add
xor
jae
add
push
pop
or
xor
or
or
push
push
mov
add
fs
das
insb
popa
adc
pop
adc
lret
pop
inc
mov
lcall
es
jno
xor
pop
cld
xor
or
xchg
cld
mov
sbb
dec
cmp
inc
stos
inc
pop
lcall
pusha
xchg
out
push
mov
movb
xchg
pop
mov
pop
arpl
lods
mov
or
sub
or
sub
lret
shlb
filds
adc
in
jb
push
enter
lods
rolb
and
xchg
and
cmp
sub
repnz
sub
cs
mov
pushf
mov
mov
jo
and
mov
into
cs
int3
jb
test
adc
xchg
pushl
shlb
xchg
sub
and
gs
js
xor
adc
or
sub
or
ret
rcrb
inc
hlt
rolb
and
pop
es
push
out
add
sahf
clc
hlt
add
mov
inc
xchg
pop
mov
xchg
jbe
push
stos
push
insl
inc
sbb
and
cmpb
push
dec
add
shlb
mov
sub
mov
loopne
xor
lahf
ss
push
cmp
lock
mov
cmpb
insb
ja
push
or
inc
adc
xor
xor
es
inc
mov
repnz
inc
call
pop
lods
mov
mov
mov
mov
add
gs
xor
stos
hlt
sbb
inc
sbb
adc
push
or
or
xorl
mov
divl
mov
adc
push
out
dec
adc
aas
xor
inc
cmp
adc
mov
js
lock
push
cmpsb
push
sub
inc
sbb
outsb
jg
test
add
add
mov
dec
add
nop
idivl
mov
mov
sarb
test
add
jno
add
jg
iret
push
inc
pop
adc
fdivs
add
jo
lea
pop
mov
lcall
stos
movsl
lret
mov
sbb
jne
xor
inc
pusha
pushf
add
sub
pop
nop
dec
jne
add
jmp
pushf
in
scas
ror
or
xor
mov
mov
lea
xor
dec
xor
dec
aaa
cmp
and
icebp
pop
mov
jecxz
testl
sahf
jge
sbb
xchg
sub
enter
push
ret
dec
add
xorl
xchg
mov
into
ret
or
fldt
mov
mov
jp
sbb
push
push
rorl
cli
add
loope
lock
add
gs
add
push
lret
shl
mov
sbb
pop
mov
or
pop
mov
fists
mov
and
test
out
dec
pop
out
inc
xchg
jbe
fbstp
adc
or
add
lock
jle
push
push
cwtl
pop
push
dec
fmull
cmp
adc
mov
mov
mov
out
push
and
or
adc
fwait
add
mov
jae
fidivrs
add
jne
add
push
cmpsl
inc
gs
in
add
cld
ret
psrld
insb
add
push
ret
inc
mov
cmp
jmp
xchg
mov
cmp
ss
pop
rorb
lock
push
push
in
dec
xor
mov
adc
ss
cmp
push
test
aaa
js
rcr
or
pop
xchg
inc
xchg
loopne
sub
fwait
test
lret
rcll
push
sub
fdivs
or
pop
and
xor
mov
cmp
adc
in
pop
xchg
xchg
sarl
dec
popf
mov
cmp
xor
or
add
testl
or
lds
rcrb
cmp
jl
hlt
pop
adc
inc
repnz
bound
dec
jge
jae
sbb
pusha
pop
lock
mov
int
clc
sar
inc
and
cmp
lret
cli
test
std
in
jle
ret
jge
dec
dec
mov
jne
jl
or
sbb
shl
sbb
cmp
testb
lea
jo
sbb
xchg
out
icebp
fildl
pop
jge
ret
cmp
sti
dec
sbb
int3
cmp
jle
dec
out
sbb
or
sahf
pop
je
mov
jmp
dec
cwtl
adc
pop
push
pop
sub
mov
into
test
repz
jge
mov
mov
std
ret
repz
sarb
adc
mov
aam
xchg
jo
xchg
sbb
dec
push
or
fdivl
push
and
rorl
push
add
xchg
arpl
push
roll
sub
or
jo
lock
in
test
pop
jp
mov
add
loopne
leave
adcl
mov
adc
sbb
out
insb
or
add
pop
sbb
push
mov
add
jge
inc
jecxz
pop
pop
sbbb
cmp
lods
addl
std
sbb
or
out
jnp
sub
push
sub
xor
xlat
and
popa
push
aas
push
and
adc
push
pop
inc
add
dec
outsl
add
das
pop
add
addr16
xlat
lea
xchg
addl
pusha
cmp
in
and
and
into
and
pop
add
in
or
add
in
add
or
xlat
mov
and
sbb
in
sub
aas
test
call
xchg
test
push
je
mov
ds
pop
xor
loope
and
and
and
and
loope
repnz
mov
cmpl
daa
das
cli
and
or
rorl
test
push
fidivrs
adc
sub
daa
or
cmp
aam
pop
jle
sub
pop
sbb
in
test
js
push
push
call
fidivs
aaa
push
or
sub
int3
add
pop
or
mov
je
sbb
lret
jne
dec
inc
loopne
sti
decb
pop
jne
pop
add
mov
ds
add
hlt
pop
cmpsb
dec
lea
add
and
dec
std
cwtl
mov
cmpsb
push
add
rol
lods
incl
sbb
lea
call
mov
mov
pop
rep
movb
mov
adc
xchg
std
cld
sub
or
add
sub
and
adc
adc
inc
sub
dec
out
jnp
add
adc
clc
push
fcomps
mul
test
mov
mov
ds
adc
repnz
xor
cmp
and
test
xor
add
gs
xchg
cmp
mov
mov
xchg
inc
cs
nop
push
enter
xchg
push
cwtl
pop
pop
sbb
jb
pop
mov
jle
popf
pusha
push
mov
sahf
sarb
out
dec
mov
ret
and
addl
mov
sti
popf
movsl
sahf
pop
fldcw
add
mov
sbb
xor
xor
add
xor
cld
cmp
lds
loop
stos
push
inc
and
mov
out
push
dec
and
in
rclb
add
inc
sub
inc
or
mov
add
imul
int
xchg
clc
adc
adc
daa
nop
pop
fcomi
sub
imul
inc
loope
add
stos
hlt
mov
mov
add
xchg
jmp
jmp
outsb
in
in
adc
add
xchg
xchg
and
jmp
jnp
arpl
js
sub
data16
cli
in
xchg
dec
xor
fucomip
ret
loopne
stos
call
dec
add
adc
loope
and
add
in
inc
mov
sbb
sub
push
push
adc
push
jno
push
or
mov
add
xor
sbb
sub
aaa
sub
push
inc
add
inc
fs
jmp
push
add
xor
aam
push
mov
adc
pop
movsb
adc
adc
test
adc
jno
inc
and
inc
or
imul
inc
je
loopne
inc
insb
pop
into
cs
mov
push
mov
cltd
rcrl
xlat
es
and
push
mov
or
mov
and
adc
push
add
nop
daa
sbb
push
test
inc
xchg
divl
pop
in
and
push
mov
push
imul
add
jbe
jl
popa
push
add
or
ss
push
adcb
add
movb
inc
ss
shr
or
mov
sbb
push
adc
mov
cmp
push
jo
dec
jne
ret
or
add
das
and
test
push
rol
mov
push
sbb
adc
inc
jl
pop
jg
or
adc
fcos
xor
inc
jmp
pop
pop
pop
ret
pop
push
mov
loopne
push
adc
or
push
dec
mov
add
cmc
mov
pop
test
jmp
sbb
fmuls
roll
and
dec
enter
jbe
jmp
adc
add
mov
inc
test
testb
clc
add
adc
cmp
dec
fcomps
push
shrl
mov
cmp
lea
push
sub
pop
mov
ret
lock
xor
and
fstpt
inc
cmp
ret
popf
cmp
xor
pop
mov
mov
adc
inc
in
push
add
clc
adc
mov
mov
add
les
sbb
cltd
sub
out
or
js
sti
push
push
mov
add
cmpl
sarl
movsb
inc
clc
jecxz
jo
out
add
or
cmp
mov
xchg
les
add
or
dec
les
inc
pop
sbb
ret
dec
lahf
or
daa
loopne
stos
add
lahf
js
adc
and
mov
adc
sbb
xor
mov
cld
and
rcrb
mov
test
and
adc
lods
sub
je
les
sbb
sbb
xor
inc
sub
adc
lock
incl
cmp
jne
cmp
jne
and
insl
sar
lock
addb
loopne
push
mov
into
sub
pushf
sbb
xor
pusha
sub
mov
addl
out
add
dec
in
inc
and
xchg
lock
xchg
pop
mov
arpl
xchg
imul
mov
lcall
insb
rcll
jae
dec
gs
dec
xchg
hlt
shlb
pop
inc
loop
add
sarb
inc
call
cmp
dec
jnp
cld
mov
or
mov
adc
in
jne
pushf
loopne
es
push
pop
loopne
test
add
jne
jp,pt
idiv
rcrl
adc
out
imul
enter
lcall
std
xchg
ficoms
or
or
orb
in
js
jmp
inc
mov
fisttpll
lea
sbb
je
push
dec
rolb
sarl
lahf
mov
xor
enter
cmp
add
dec
jne
mov
xor
in
scas
mov
cmpsb
pop
jmp
pop
xchg
test
xchg
testl
push
jmp
std
mov
movl
les
add
mov
bound
vmovntpd
xor
cmp
mov
inc
pop
push
xor
mov
cmp
out
cs
ficoml
data16
rorl
push
ljmp
test
sbb
in
jo
mov
clc
pop
pusha
mov
pop
push
xor
addw
push
je
mov
popw
xchg
adc
movsb
mov
xchg
shl
roll
mov
dec
mov
rorb
mov
and
xchg
adc
jnp
inc
sbb
pop
sti
add
dec
ret
loopne
or
imul
adc
leave
aad
vmwrite
mov
stos
pusha
sub
sub
mov
arpl
or
fsubs
mov
jno
or
cmp
bound
add
sbb
dec
jae
adc
inc
mov
inc
call
repz
inc
mov
push
pop
and
insb
add
ret
out
clc
push
mov
aas
int3
cmp
sub
mov
pop
dec
push
jo
movsl
mov
insb
jg
sbb
sub
mov
sbb
hlt
add
push
sarb
call
push
daa
push
sbb
jmp
icebp
adc
rolb
dec
in
rclb
clc
xchg
pop
cmp
xchg
push
or
pop
adc
push
leave
mov
and
das
jns
cmp
fistps
cmp
in
mov
shr
pop
mov
adc
lds
xchg
int
cmp
ret
pop
and
adc
setbe
dec
mov
adc
jne
cmpsl
addl
pop
sub
popa
leave
cmpsb
cmp
fsubr
add
pop
dec
and
mov
sbb
test
xchg
add
add
cmpl
call
or
push
xchg
loop
mov
and
jp
xchg
in
in
adc
jl
rorl
mov
lock
cmp
mov
xlat
xor
loopne
mov
cmp
xchg
xchg
adc
and
or
xor
mov
mov
std
fidivrl
push
inc
sub
pop
add
dec
xor
or
push
xor
call
stos
ss
xor
push
mov
mov
mov
add
push
xchg
add
or
rorb
push
ror
in
call
or
nop
jle
xor
jl
mov
hlt
xchg
shlb
das
dec
cmp
in
jl
push
inc
test
jo
mov
sbb
std
rorb
inc
scas
sbb
mov
adc
mov
outsb
add
arpl
data16
sbb
inc
sbb
inc
clc
pop
dec
cmp
test
push
add
push
jo,pt
cmpsl
mov
call
xor
pop
and
clc
adc
add
cmp
jne
cmp
je
cmp
mov
lods
mov
cs
adc
or
dec
clc
icebp
add
sub
xorb
mov
ljmp
mov
fisubrl
inc
das
loope
mov
fnstsw
or
cmp
inc
add
in
xor
lods
icebp
inc
or
stos
push
test
fcompl
xchg
hlt
scas
adc
decb
push
mov
out
sbb
mov
or
jo
sbb
and
push
sub
inc
loopne
xorb
dec
inc
sbb
push
test
add
push
or
or
mov
enter
mov
or
add
in
jmp
add
inc
cmp
jne
movzbl
inc
mov
pop
sbb
loopne
push
lret
lods
clc
adc
xor
call
xcrypt-cfb
cmpsl
out
aas
sbb
jno
test
shlb
lock
jo
insb
xchg
add
pusha
bound
mov
inc
hlt
adc
push
inc
shr
sbb
mov
mov
inc
or
mov
inc
mov
roll
xor
sub
mov
xor
lods
dec
mov
scas
rcrl
ljmp
sbb
add
xor
jbe
sahf
jmp
mov
sbb
and
push
push
and
fisttpll
sbb
and
pop
xor
add
xor
mov
inc
ret
inc
adc
sbb
dec
cmp
mov
mov
call
push
out
adc
xor
pop
add
bound
in
sbb
pop
sti
pop
or
xor
push
fdivs
sbb
aam
lea
xor
adc
adc
shr
xchg
es
push
and
lds
push
sub
shlb
sub
shrl
cmpsl
push
ret
xlat
fs
and
or
push
sbb
ds
mov
ret
xor
fildl
sarb
jge
sub
cmp
cmp
inc
mov
mov
movsl
fimuls
decl
and
adc
inc
dec
negb
in
push
dec
inc
decl
popa
negb
jnp
into
and
es
int3
mov
dec
or
xchg
pop
cmp
lods
stos
call
xchg
inc
or
add
je
inc
inc
and
int
push
jmp
inc
sub
into
pop
adc
pop
xor
push
xor
int
mov
xchg
or
dec
mov
xor
add
xchg
cmp
add
sub
adc
adc
xor
stos
adc
addb
push
push
into
jo
sbb
into
cmc
pop
xchg
cmp
bound
push
cmp
pop
lock
sahf
dec
enter
or
jno
mov
mov
or
test
jne
cmp
ret
jl
test
sub
orl
push
outsb
imul
mov
cmp
fbld
ret
dec
dec
mov
sub
mov
loope
dec
push
pusha
dec
xorl
sbb
jno
mov
cmpsl
hlt
test
push
or
pusha
xor
pop
mov
jo,pt
inc
xchg
xor
mov
inc
fcomps
xchg
subl
enter
cmp
lods
inc
icebp
test
test
adcb
scas
or
cmp
inc
inc
int
lock
mov
call
inc
fisttpl
and
aam
pop
mov
inc
mov
pop
mov
lcall
imul
or
stos
nop
xchg
and
iret
and
dec
add
adc
sub
pop
scas
or
or
and
cmpsl
cmp
daa
mov
sbb
mov
seto
and
rcll
es
jne
lahf
popl
pop
add
inc
mov
fwait
push
cli
rolb
loopne
sub
je
lret
add
outsb
sbb
fcoml
rol
ss
mov
pusha
filds
test
jl
inc
xor
fidivrl
cmp
push
push
pushf
mov
out
mov
or
jg
push
push
cmp
sqrtps
pop
mov
jp
mov
daa
pop
daa
in
xchg
cli
inc
push
mov
dec
xor
xor
adc
arpl
add
inc
scas
incb
arpl
cmp
or
mov
cmc
xchg
cmpb
subl
push
add
sbb
dec
ret
popa
test
push
pop
dec
xor
or
outsl
or
xchg
scas
je
aaa
loope
cmp
addb
aad
mov
push
lea
stos
cmpsb
mov
or
roll
jnp
push
pop
ret
dec
das
adc
adc
sub
adc
mov
jle
fisttpl
cld
pop
clc
xchg
movsl
sub
or
outsb
or
fs
std
cmp
mov
add
mov
nop
mov
fdivr
iret
pop
jne
mov
cmp
xchg
xor
add
pop
sub
sarb
mov
lods
out
push
iret
shrb
xor
sbb
jne
or
shrb
sub
add
popa
lods
mov
ret
mov
mov
sbb
in
sbb
cmc
aad
insl
dec
mov
mov
jecxz
into
mov
nop
cmp
pop
lds
lods
int3
add
jg
movsb
leave
push
sub
or
fldl
cmp
sub
sbb
inc
and
mov
adc
dec
add
sbb
push
dec
fsub
mov
insb
mov
xor
aas
or
add
or
dec
adc
and
add
dec
add
sbbl
mov
push
jge
push
fnsave
mov
xchg
mov
mov
in
nop
xchg
movsb
movsb
pushf
pushf
sub
cmp
daa
push
mov
pop
push
push
dec
lods
adc
xlat
loope
sbb
and
jle
pop
and
xor
add
jo
pop
orb
rclb
fcoms
lret
in
mov
lock
xor
push
dec
orb
mov
xchg
std
dec
in
xlat
or
adc
cmpl
jl
inc
add
and
adc
pop
cmp
lahf
add
inc
or
xor
nop
fucomip
call
clc
mov
pop
mov
cmpl
dec
loopne
and
pop
sbb
cmpsb
js
push
mov
sub
inc
mov
mov
movsb
stc
inc
pop
test
lock
inc
sub
xor
in
in
loope
lock
cmp
push
and
dec
jl
or
sahf
shl
jmp
sub
adc
push
dec
fimull
inc
cld
stos
sti
pop
jl
inc
cmpsb
imul
popa
cmp
xchg
or
mov
shrb
xor
adc
ret
or
and
jne
and
test
sub
dec
addb
and
dec
cmp
sub
add
and
xchg
lock
lret
rcrb
call
stc
popf
ret
cmpsl
xchg
insb
jmp
push
inc
add
or
js
push
loop
or
add
mov
cmp
cmpsl
mull
lret
lret
icebp
jle
jle
shrb
push
dec
decb
popa
xor
das
push
mov
jo
test
subl
xor
add
push
fdivs
ss
addr16
inc
outsb
rcrb
test
xchg
outsb
mov
xchg
inc
xchg
rol
push
add
in
dec
or
jno
sub
mov
fisubl
pop
lock
xor
inc
or
dec
leave
inc
cld
xor
jmp
cs
cmp
pop
or
clc
add
sbb
arpl
cmp
push
xchg
sarl
push
pop
dec
adc
faddl
dec
and
jp
cmp
jle
sub
insb
icebp
dec
add
push
dec
or
mov
inc
mov
jbe
push
add
sub
into
pop
enter
adc
addr16
adc
xchg
fisubrs
clc
scas
outsl
or
add
sub
inc
xor
inc
cmp
in
lock
js
pushf
pusha
shrb
adc
xor
xchg
ret
lds
pop
xchg
pushf
shlb
ret
jo
push
and
or
daa
addl
mov
faddl
in
push
inc
mov
test
xchg
cld
adc
outsl
lock
js
add
outsb
lock
pop
sub
add
inc
add
adc
aaa
jo,pn
and
inc
das
push
ret
aas
xlat
or
cltd
add
push
enter
dec
sbb
push
or
or
pusha
sbb
pmuludq
dec
or
push
push
fsubrs
imul
xlat
fs
add
js
add
jl
xor
inc
add
mov
js
cbtw
xor
push
loopne
enter
or
xor
and
out
jno
je
fwait
jno
insb
adc
stc
pop
sub
xor
sbb
ret
sub
mov
repnz
lods
inc
scas
or
std
pop
sbb
sbb
jmp
push
mov
push
mov
adc
fnstenv
xchg
or
xchg
or
inc
fiadds
ret
xor
test
mov
pop
cmp
pop
and
or
push
add
jecxz
maxps
mov
nop
pop
mov
rcrb
and
pushf
inc
shlb
xlat
push
sbb
inc
fisubrs
mov
dec
imul
movsb
rcrl
iret
sbb
sbb
sub
and
push
jns
dec
les
loopne
insl
push
test
or
push
inc
cmpsl
sbb
cmc
iret
pop
mov
call
or
or
out
and
int3
cmpsl
mov
outsb
out
subb
inc
xor
push
cmpsb
mov
rolb
inc
shll
cmpsl
and
pop
popf
adc
or
and
jge
lock
andb
cmp
mov
aad
push
push
or
lock
or
and
cmpb
rorb
cmp
mov
inc
mov
out
push
rorb
push
lret
stc
adc
loope
addb
push
mov
cmp
push
jb
adc
fdivs
mul
movl
lock
test
mov
or
mov
and
xchg
scas
push
dec
xchg
sub
or
add
push
and
dec
adc
sbb
in
xchg
mov
sub
add
movb
nop
out
mov
fcmovb
mov
jb
mov
xor
iret
xchg
das
xchg
jmp
add
pop
push
call
dec
cmp
push
xchg
call
movb
or
mov
aam
addr16
out
mov
out
mov
roll
pop
add
xor
cmp
or
roll
fld
mov
and
cmp
inc
sub
cmp
lahf
fiadds
jmp
push
mov
push
ds
sbb
sbb
rdmsr
add
add
add
fwait
arpl
mulb
inc
mov
cwtl
push
fimuls
loop
nop
pop
ret
shl
push
outsl
add
mov
xor
nop
cmp
outsl
adc
push
dec
mov
dec
mov
sbb
shr
mov
xchg
or
and
adc
cmpsb
shl
jne
rcrl
ja
or
mov
sbb
out
jg
pop
xor
shl
or
mov
push
add
dec
jne
mov
fdivrl
add
nop
sbb
and
fiadds
adc
fs
outsb
in
pusha
psllq
mov
sub
lcall
add
shlb
adc
add
push
adc
pop
sbb
or
sbb
insb
pusha
and
jo
and
shrb
mov
enter
clc
fstl
sub
lock
cmp
lahf
xchg
iret
call
das
fmuls
cmp
xchg
scas
cmp
xchg
enter
push
test
inc
and
in
das
mov
fdivl
mov
repnz
outsl
lods
pop
lods
cmpsb
or
aaa
gs
test
cmp
jl
aam
pushf
movsb
cmp
mov
xor
mov
popf
cmp
enter
js
mov
out
jl
dec
js
aaa
mov
in
jo
add
enter
push
pushf
and
cmp
xor
popf
cmp
push
mov
push
jl
gs
xor
out
mov
mov
inc
mov
jns
out
cmp
dec
cmp
enter
add
fcoml
pop
add
and
js
add
sub
or
or
pop
lock
test
ds
idivb
inc
fs
divb
xchg
adc
push
nop
xchg
cwtl
cli
insl
or
pushf
sub
jp
mov
fdivrs
pop
add
sbbb
es
into
mov
adc
pop
sub
mov
adc
inc
sub
cmpsl
cmp
jnp
adc
inc
mov
inc
cmp
dec
xchg
lcall
push
sub
adc
jecxz
enter
lock
pop
dec
out
push
pop
push
push
or
decb
inc
inc
push
push
inc
pop
mov
sbb
add
aad
jae
sub
loopne
gs
test
or
xchg
or
call
jae
arpl
in
jo
mov
or
ja
xchg
add
popf
jb
sub
add
rorb
adc
scas
push
inc
push
push
inc
dec
popf
test
ja
or
lods
and
and
and
sub
mov
pop
ret
lcall
and
arpl
lea
in
lods
sub
addr16
adcl
or
and
flds
inc
adc
fs
inc
or
dec
adc
ret
inc
imul
inc
mov
ror
pop
mov
push
sbb
cwtl
push
ss
add
lock
movsl
xor
jae
sbb
into
adc
ja
pop
xlat
popa
test
pop
shlb
ja
or
insb
pop
dec
arpl
icebp
xor
or
daa
out
mov
push
sbb
jmp
cmp
adc
inc
inc
push
lcall
pop
or
add
pop
and
dec
dec
testb
cmc
adc
inc
pop
inc
inc
or
and
add
cmp
or
or
mov
ja
mov
fistpl
das
test
cmp
mov
sub
jne
fistl
rcl
xor
dec
mov
adc
es
pop
pop
xor
xor
xor
cmp
cmp
sbb
mov
bswap
sbb
lock
cmp
ds
js
jg
lcall
js
inc
jg
cmp
sbb
mov
test
add
sbb
fisttpl
mov
pmulhuw
in
js
jo
in
in
push
in
in
push
dec
dec
in
in
inc
inc
cmp
and
hlt
in
cwtl
jns
pop
inc
jbe
in
jp
mov
push
push
dec
and
mov
sbb
inc
push
dec
subb
cmovs
inc
addb
push
add
jecxz
test
jecxz
or
in
mov
push
sub
nop
push
cmpl
roll
adc
or
sbb
incl
inc
nop
mov
add
add
pop
add
jp
inc
fmull
adc
add
stc
iret
pop
cmp
js
dec
and
rcll
jnp
mov
mov
jns
jnp
mov
or
mov
push
andb
push
pop
xchg
xchg
fisttpl
mov
mov
ljmp
cmpl
mov
mov
jmp
push
dec
adc
mov
pop
filds
imul
add
lods
xorb
sub
or
dec
sub
mov
and
adc
mov
pop
or
ss
fcompl
into
jl
dec
add
arpl
push
sar
adc
push
out
nop
mov
aad
add
test
nop
fildll
roll
inc
jge
icebp
inc
cs
xchg
pushf
jecxz
js
jge
add
mov
fbstp
pop
mov
jle
mov
js
jle
dec
test
add
xor
inc
jb
pop
nop
sub
or
cs
xlat
cmp
faddp
cmp
pop
jl
cmc
sbb
mov
mov
sbb
adc
jg
sahf
test
jl
and
test
xchg
cmc
insb
pusha
fldz
fsubl
add
jbe
loopne
inc
repz
fucomi
mov
orb
add
or
rolb
cltd
push
adc
sbb
aaa
addl
inc
scas
mov
shl
push
sbb
add
mov
daa
add
setl
dec
dec
cwtl
xchg
nop
mov
pop
dec
dec
mov
dec
pop
jo
aas
pop
inc
lods
mov
sbb
add
sub
mov
inc
add
dec
dec
les
xchg
mov
mov
cmp
lods
add
cmp
orb
mov
xor
lock
inc
adc
sbb
movsb
sub
mov
mov
add
push
adc
add
aad
push
xchg
orl
aad
fimuls
add
loopne
addr16
jg
fmuls
sub
cmc
sbb
loopne
pop
and
jmp
shll
cmpl
adc
mov
fisttpl
arpl
cmp
push
mov
insl
lcall
dec
cmpsb
mov
and
mov
inc
pusha
sub
shl
leave
and
les
xor
enter
xor
and
sarb
aam
fmul
and
dec
enter
xchg
dec
xor
fsub
dec
in
leave
loopne
push
xor
je
lock
fs
add
jb
in
clc
shlb
in
cltd
cld
xor
add
mov
push
mov
xchg
pusha
dec
repnz
jo
or
outsl
jnp
shrb
push
mov
movsl
mov
and
adc
js
add
repnz
movq
stc
push
dec
rcpps
jle
dec
iret
sub
push
cmovns
xchg
adc
repnz
outsb
dec
xchg
fists
mov
pop
jbe
inc
insl
jo
xor
mov
add
push
pop
cmp
fstpt
aas
pusha
inc
orl
push
add
shlb
pop
outsl
testl
mov
adc
outsl
sbb
xor
icebp
ja
hlt
adc
or
dec
or
push
stos
push
push
pop
pop
adc
push
inc
shll
nop
and
mov
nop
pop
ud0
sbb
mov
in
and
adc
int3
int3
fldenv
and
lock
mov
cs
test
push
push
add
mov
shlb
xchg
hlt
dec
xchg
mov
repz
testb
xor
inc
xor
int3
call
hlt
cs
mov
xchg
mov
andb
and
aas
sub
pop
and
mov
add
orl
jp
and
dec
mov
pop
out
clts
add
mov
stc
jnp
push
rorb
sub
mov
or
jge
das
jnp
lahf
mov
add
mov
cmp
add
add
faddl
or
enter
jnp
cmp
dec
add
adc
jae
mov
pop
push
add
clc
ret
mov
mov
inc
jp
dec
mov
je,pt
add
push
arpl
add
ret
sahf
xchg
insl
outsb
adc
jns
push
mov
shll
add
push
adcl
mov
cmc
add
icebp
std
mov
inc
pop
or
cwtl
stos
dec
lcall
mov
shr
sbb
inc
roll
fidivl
xchg
or
imul
push
popf
or
fcmove
xor
jns
jo
mov
xor
mulb
or
pushf
jp
mov
hlt
mov
pop
push
stos
test
push
jns
add
push
loopne
pop
lret
or
xchg
dec
or
adc
cmp
pop
jae
scas
jmp
xchg
push
jo
sbb
mov
xlat
cmp
bound
pop
sbb
loope
push
lgs
dec
or
adc
xor
testl
clc
jbe
or
mov
adc
sub
out
movsb
fldcw
je
decb
push
push
or
jbe
imul
mov
pop
mov
lret
mov
jg
push
mov
mov
sahf
rolb
inc
and
xor
inc
dec
cs
hlt
hlt
mov
fstpl
ljmp
test
or
rorb
mov
mov
out
push
arpl
cwtl
push
sbb
add
or
mov
scas
lea
add
imul
or
pop
jbe
cmp
movsb
orb
push
dec
inc
mov
movups
ficoms
add
mov
add
push
mov
fs
or
jne
add
adc
inc
add
jns
stc
mov
cmp
jne
movsl
inc
ja
aad
inc
inc
out
adc
pop
pusha
loop
fxch
dec
mov
add
cmp
push
pushl
scas
mov
jns
ja
and
mov
push
push
jecxz
push
in
xor
lret
arpl
lock
stc
mov
fldt
rorb
adc
jge
adc
mov
and
adc
push
cmc
or
xchg
orl
popf
rol
push
outsl
js
nop
into
lds
pop
out
inc
dec
fildl
xchg
xchg
push
inc
loope
lods
xor
pop
cmp
mov
das
adc
nop
aas
sub
or
lods
loope
add
pusha
fistpll
and
andb
pop
mov
mov
mov
jno
add
sbb
aam
mov
pop
fwait
nop
inc
pop
xchg
sbbb
mov
xchg
jmp
push
inc
and
pop
cmp
adc
add
pop
adc
pop
mov
inc
lods
cmp
shll
or
or
pop
mov
loopne
adc
jae
inc
xor
mov
pop
pop
insb
and
push
jo
inc
nop
mov
mov
and
push
adc
inc
add
sbb
xor
sbb
inc
add
mov
pop
and
addr16
xlat
pop
add
les
or
shl
push
xchg
mov
rorl
pop
iret
pop
cmp
adc
push
jl
add
pop
insb
movsb
pop
test
rorb
push
and
sti
xlat
pop
inc
xor
and
or
xchg
push
pop
bound
pop
das
cmp
or
iret
pop
scas
roll
sub
das
andb
pop
add
mov
xor
or
add
es
pop
cmp
pop
mov
mov
xchg
sbb
and
push
cld
mov
or
dec
sbb
dec
fdivs
xlat
pop
inc
add
inc
insb
aaa
je
pop
dec
pop
sbb
das
and
cwtl
or
outsb
ljmp
pop
mov
test
jo
xor
and
in
pop
mov
mov
mov
loopne
push
pop
push
sub
call
adc
in
aam
in
sub
adc
leave
movsl
shl
cmp
loopne
fbld
cltd
int3
aaa
pop
add
sub
inc
cmpsl
jp
jns
pushf
sbb
dec
xchg
sbb
adc
repnz
pop
nop
sbb
push
filds
pinsrw
xchg
fimuls
fdivrs
dec
dec
mov
cmp
add
loopne
jp
es
xchg
cs
sub
inc
in
popl
sub
je
sbb
into
xor
fs
push
nop
pop
xchg
in
shlb
loopne
jbe
add
cmp
or
mov
cmp
mov
fdivr
mov
xor
clc
pop
mov
xor
int
adc
xchg
lock
dec
lock
mov
js
call
pop
xor
and
sbbl
in
add
mov
loope
jae
loopne
xchg
loopne
push
add
jmp
mov
aaa
push
or
adc
mov
pusha
sbb
inc
fld
mov
sbb
push
sarl
inc
lea
movsl
ror
mov
mov
sbb
sbb
add
iret
inc
loopne
jmp
insl
mov
adc
flds
nop
push
push
call
addr16
dec
mov
repnz
dec
int3
mov
xchg
in
test
xor
popl
push
popa
sarb
dec
gs
mov
popf
and
in
mov
xor
outsl
popa
xor
add
addr16
scas
xor
cmp
push
gs
jp
les
pop
push
movsb
sub
mov
adc
ret
inc
popa
std
adc
testb
push
ret
fcoml
pop
sbbb
add
mov
jo
je
ss
jno
test
pusha
mov
mov
inc
mov
and
jg
mov
mov
sub
add
dec
jg
jne
push
rorl
xchg
add
pop
imul
call
fsubp
xor
ret
pop
inc
arpl
mov
adc
lock
rol
inc
in
idivb
ret
cmp
jae
push
aas
icebp
mov
pushf
jmp
repnz
add
adc
cwtl
pop
repnz
mov
xor
inc
add
push
xchg
shrb
xor
and
and
pop
mov
aam
rorl
fidivrl
cs
mov
and
or
mov
jbe
mov
push
mov
push
push
inc
cwtl
lods
pop
xchg
pop
xchg
inc
add
push
cli
out
or
jne
push
iret
mov
xor
sti
push
pushf
inc
adc
push
js
jne
pop
push
or
push
xor
adc
fmull
xchg
mov
add
or
int3
call
add
and
sub
fmul
mov
dec
fmul
add
mov
lahf
adc
lods
ljmp
jl
or
pop
inc
push
lret
fsub
adcb
into
add
inc
push
fwait
or
adc
xchg
in
push
les
sbb
xorb
or
or
roll
sarl
ja
xchg
xchg
or
test
dec
fimull
inc
pop
jne
call
out
xor
incl
jge
dec
popf
insb
jnp
movb
xchg
jne
mov
xchg
inc
idivb
loope
jmp
lods
add
mov
cmc
rcll
nop
rcrb
pop
mov
inc
or
rorb
adcb
adc
cmpsb
dec
lock
testb
add
ret
xchg
jne
in
ds
sbb
add
jmp
sbb
mov
push
adc
inc
mov
mov
push
loopne
int
sbb
aam
add
push
stos
shr
push
jg
hlt
and
mov
xchg
inc
jbe
or
inc
fstp
cmp
ret
sahf
je
insb
stc
push
push
jno
sbb
push
sbb
mov
orl
and
adc
mov
cmp
lea
push
or
test
push
dec
push
nop
mov
sbb
out
pop
call
mov
cmpsb
pop
cmp
cmp
aas
and
outsl
cmp
xchg
clc
mov
shlb
jmp
repnz
adc
adc
pop
clc
enter
cltd
sub
add
push
dec
push
scas
fbstp
ja
fs
cmp
xchg
sbb
mov
mov
push
sbb
or
pop
add
jmp
lahf
jge
pusha
lods
xchg
add
or
inc
add
mov
filds
dec
jmp
and
push
jmp
adc
gs
mov
add
pop
or
ret
sub
arpl
loopne
pop
inc
scas
cmp
je
or
lret
movsl
call
inc
push
push
out
loope
jp
test
mov
in
out
mov
add
cltd
jge
push
cmp
push
shl
in
jge
inc
xchg
adc
pushf
dec
mov
adc
mov
jl
add
pop
lds
nop
add
xchg
xor
iret
cmpsl
data16
cmpsb
outsl
add
lods
sbb
dec
mov
xchg
stos
int
inc
inc
cmpsb
pop
and
iret
repz
pop
outsb
jg
mov
inc
test
ret
cmp
push
out
or
sbb
mov
or
mov
add
and
popa
daa
mov
flds
enter
out
fstp
push
dec
and
add
xchg
or
or
sbb
push
arpl
jo
cmp
mov
mov
out
add
jle
and
add
xor
add
pop
sub
mov
jmp
in
push
cld
jmp
rcrb
adc
push
lods
mov
sub
push
mov
push
push
sub
mov
pusha
repz
mov
inc
add
inc
xchg
ljmp
outsl
es
popa
loope
cmpl
adc
test
sbb
pop
in
shll
mov
xor
shrb
jg
sbb
cmpsl
lock
push
xor
xor
dec
imul
push
xor
nop
sahf
adc
adc
cltd
and
imul
cmp
ret
inc
mov
andb
pop
arpl
pop
lods
or
inc
sub
xchg
into
and
jns
lret
cmp
mov
aad
sbb
das
fsubrl
inc
scas
nop
fisttpl
inc
and
mov
mov
dec
mov
cwtl
push
enter
mov
ret
xchg
push
adc
sub
call
push
push
mov
je
pop
call
pusha
adc
arpl
pop
push
push
and
add
mov
adc
push
add
mov
add
pop
add
xchg
aam
inc
inc
push
lock
inc
lds
push
call
loop
jmp
dec
push
aaa
push
or
arpl
xor
jmp
mov
mov
sbb
ss
loopne
sub
cmp
jmp
in
fwait
clc
mov
insl
ret
dec
pop
inc
icebp
test
je
iret
repz
xchg
stos
les
ficoms
adc
iret
repz
mov
xor
ret
xchg
pop
mov
cmpb
shlb
ret
sarb
cld
mov
divb
mov
pop
imul
sub
adc
cld
flds
pop
xchg
xor
idivb
leave
mov
addr16
cmp
daa
mov
or
ds
jns,pn
out
sub
sbb
and
in
movsb
cwtl
mov
movsl
je
jmp
and
xor
and
or
add
inc
adc
mov
or
sbb
jnp
mov
and
jmp
adc
repnz
ret
subl
mov
push
or
cli
cltd
dec
mov
fistpll
jmp
sti
std
jg
sub
xor
pop
iret
hlt
xchg
mov
mov
adc
add
mov
mov
cmpsl
or
data16
add
sbb
adc
std
dec
or
mov
cs
aad
jo
lahf
push
pop
mov
and
xchg
arpl
or
dec
movsl
je
xchg
and
addl
mov
and
and
mov
pusha
das
pop
ret
nop
ss
mov
xchg
mov
in
pop
loopne
xor
xchg
mov
pop
inc
sbb
mov
mov
test
sbb
xlat
add
mov
lret
iret
repz
push
and
push
iret
repz
lods
shl
test
outsb
imul
out
and
inc
push
jbe
cmp
mov
push
or
shrl
or
das
int3
fldenv
pop
cmp
pop
mov
inc
insb
inc
fnstsw
faddl
outsb
fdivs
lock
push
jo
cld
insl
adc
and
mov
or
sbb
popf
adc
je
jl
pop
jmp
std
push
and
or
dec
je
push
adc
or
jmp
mov
mov
in
sub
test
xor
mov
mov
shlb
clc
mov
test
mov
mov
sahf
out
outsl
jg
nop
push
mov
in
sti
xor
pop
iret
repz
push
fs
pushf
mov
jge
add
mov
add
test
sub
sbb
xchg
mov
test
mov
or
jmp
inc
rcrl
jmp
sub
repz
cmp
test
add
js
daa
jg
inc
adcl
xor
push
add
lret
dec
fcmovnbe
lea
push
push
ret
insl
popa
daa
sub
sbb
fs
mov
dec
je
adc
push
sub
sahf
adc
add
jne
push
jg
adc
gs
pop
rcrb
jmp
adc
test
das
fadds
and
out
or
jmp
and
sbb
jae
cmp
or
push
addr16
roll
jbe
push
xchg
xchg
and
dec
xorl
or
adc
mov
test
loopne
lret
shlb
sub
fisttpll
add
add
push
ds
stc
xor
push
sbb
and
and
repz
or
movsb
nop
mov
jp
cmpsl
lds
push
gs
pop
push
jns
sbb
lret
add
out
loopne
nop
or
adc
or
repnz
mov
mov
adc
lahf
and
add
and
neg
out
push
or
adc
sbb
push
or
jb
enter
push
jb
push
mov
adc
push
mov
push
cmpsb
adc
lahf
mov
adc
mov
stos
adc
iret
ss
push
lock
add
or
stos
cmpsb
push
iret
adc
mov
pop
outsl
dec
adc
mov
pusha
mov
fdivrl
dec
xlat
adc
xchg
pop
call
loop
sbb
js
and
cltd
mov
sub
push
ret
cmp
push
adc
sub
push
daa
push
inc
xor
rclb
ret
aaa
sbb
adc
sub
xchg
pop
adc
dec
mov
sbb
iret
push
faddl
sub
bound
mov
rcr
or
pop
fs
jecxz
jae
pop
mov
gs
outsb
es
cltd
or
loopne
notb
fnsave
mov
push
xor
or
xor
add
jns
or
aas
call
packuswb
pop
mov
es
bound
pop
mov
outsb
call
add
scas
enter
dec
sub
lahf
and
pushf
inc
add
rcrb
ret
pop
nop
pop
lock
mov
jecxz
cmp
push
iret
repz
data16
mov
cmpsl
stc
cmp
adc
cmpsl
pop
jnp
pop
pop
cmp
push
pushf
out
jae
lcall
lods
adc
adc
xchg
into
sbb
adc
addr16
push
arpl
insl
inc
xor
and
cmpsb
sub
daa
mov
pop
insl
dec
mov
add
cltd
push
xchg
das
mov
and
pusha
leave
loopne
bound
mov
and
int3
dec
ret
lahf
dec
mov
jb
pop
cmpsl
push
mov
jnp
xchg
out
pop
es
push
ss
cmp
xchg
aam
pop
jae
dec
xor
iret
pushf
scas
sarl
mov
pop
mov
or
inc
imul
and
sub
sbb
fiaddl
js
and
jecxz
data16
and
dec
inc
dec
jmp
inc
mov
adcl
adc
mov
mov
daa
mov
mov
in
pop
pop
adc
adcl
repnz
fdivp
pop
mov
lret
push
push
sbb
mov
mov
outsb
push
lods
ss
fwait
and
fs
jne
mov
mov
push
jne
jo
jmp
pop
loope
cld
jbe
mov
les
into
clc
lcall
dec
sbbb
adc
ja
mov
enter
movsb
clc
in
xchg
cmp
dec
ret
dec
mov
push
or
loope
pop
aad
add
xchg
or
mov
and
enter
and
mov
es
sub
mov
shr
out
add
pop
add
or
mov
mov
dec
decl
push
push
or
popa
les
test
push
std
add
iret
jnp
loop
jmp
rcrl
repz
out
push
addr16
ret
jns
sbb
cmp
repz
shl
xchg
dec
sub
push
xor
jnp
cmp
sbb
sbb
and
flds
fcomps
movsb
pusha
seto
fildll
add
dec
xchg
scas
mov
pop
jb
pop
sbbb
and
push
addb
jge
xchg
sub
nop
test
jg
dec
add
cmp
mov
popf
adc
add
or
xor
jge
ficomps
pop
aad
in
hlt
or
repnz
jge
and
cmp
ret
inc
arpl
into
jns
cmpsl
pop
pop
jne
lea
cmpsb
mov
js
pop
push
sbb
pop
adc
mov
add
or
pop
sub
mov
pop
jno
sbb
daa
lea
pop
or
xchg
ja
cmpb
es
xor
dec
lds
mov
outsl
xor
aam
and
inc
fcmovu
xor
test
jnp
ljmp
mov
mov
and
lock
pop
mov
cmpl
dec
aam
shr
dec
rcrl
fdivs
les
cld
aas
or
fldt
fstpl
fwait
jmp
call
add
sbb
test
mov
or
or
data16
or
mov
fnstsw
jl
mov
sub
dec
push
adcl
clc
fwait
cmp
ffree
das
or
mov
jecxz
cld
dec
repz
push
movb
xchg
repz
into
loopne
mov
fnsetpm(287
jnp
push
xchg
movl
out
das
inc
pop
push
jb
movsb
popf
imul
push
xchg
fs
mov
dec
or
fistl
outsb
mov
fnstenv
and
xor
jnp
mov
inc
movswl
mov
sub
mov
jmp
arpl
xchg
sub
sbbl
loop
and
mov
dec
test
pop
faddl
sbb
fwait
and
rcrb
in
int
jns
inc
pop
mov
jg
dec
or
sbb
xchg
leave
pop
jo
jle
mov
scas
ret
out
mov
repz
pop
daa
std
adc
push
aas
roll
jns
arpl
pop
fistpl
fldcw
pop
dec
xor
addb
push
out
std
lods
mov
es
or
mov
inc
jnp
fbld
push
stc
jp
adc
or
sub
adc
jmp
jmp
test
jns
mov
xor
sbb
adc
fidivs
and
sbb
roll
push
pop
add
daa
push
jmp
repz
test
sbb
jo
lahf
aad
nop
iret
scas
pop
lret
mov
es
sub
aaa
lret
jb
sbb
cmpsb
dec
pop
fs
jle
mov
cwtl
add
mov
push
outsl
hlt
fistpl
insl
int
inc
sub
xorb
and
xor
jb
aad
notl
aaa
test
push
cmpsl
push
push
mov
xchg
jl
inc
push
jg
daa
enter
aaa
lret
add
jecxz
pop
test
test
loopne
add
and
int3
mov
dec
arpl
insl
mov
in
dec
pop
orl
loopne
aaa
popa
sub
inc
add
les
lock
dec
enter
int3
mov
lret
mov
test
imul
or
mov
ret
scas
inc
push
mov
push
ficoml
stc
pop
pop
dec
cmp
test
and
xor
test
repnz
int
scas
or
and
xchg
out
pop
js
xchg
sub
rclb
in
push
hlt
push
mov
sahf
out
dec
pop
or
xor
mov
iret
inc
rcl
outsb
and
pusha
dec
mov
pop
fcmovnbe
mov
imul
mov
sub
mov
rcll
pop
pop
xor
pop
jo
lret
bsf
and
roll
orb
jae
loop
mov
aas
or
rcl
pop
mov
das
aas
mov
xchg
mull
shlb
sahf
push
lods
pop
fidivs
loopne
movsl
daa
jns
repz
testl
jo
mov
and
shl
stos
or
add
lods
sub
lods
incl
mov
ret
cs
in
aaa
out
or
xchg
xlat
test
mov
shrb
outsl
leave
loope
add
imul
jmp
jb
adc
lret
mov
push
pushf
nop
and
push
push
mov
repnz
fildll
pop
add
pushf
pop
push
add
xchg
addl
mov
push
push
dec
push
and
fildll
mov
jge
shll
or
push
push
loopne
xor
aam
push
jae
cmp
mov
xor
iret
hlt
add
add
adc
sahf
idivl
das
push
dec
push
cmpb
jns
mov
add
xchg
push
inc
stc
xchg
test
fdivs
fildl
dec
and
ret
or
enter
pop
inc
pop
shl
mov
pusha
aas
mov
cltd
inc
mov
bound
mov
loop
jnp
test
push
in
cmp
subb
jo
and
xor
pop
rolb
inc
push
ret
push
jnp
data16
cs
mov
pop
into
ds
notl
loop
testb
sbb
xlat
xor
roll
push
sbb
jns
je
xchg
scas
shr
xlat
ljmp
add
jno
nop
xchg
dec
inc
sbb
mov
add
inc
repnz
pop
and
inc
movsb
pop
pop
push
out
stc
adc
push
out
popa
ds
arpl
out
pop
out
dec
dec
pop
ds
out
ret
mov
xor
daa
sbbl
lock
add
xor
push
lock
nop
push
test
inc
pop
pop
cmp
mov
mov
cmp
push
mov
sub
add
ds
sbb
dec
je
and
inc
adc
push
setle
adc
mov
pushf
es
lock
or
inc
aaa
mov
fs
pop
test
and
sbb
cmpsl
sub
push
imul
push
test
mov
push
jno
dec
sub
arpl
xchg
sbb
jmp
adc
int
sbb
dec
push
cmp
sbb
and
lret
add
in
mov
cwtl
fs
jle
or
leave
add
fs
add
adcb
and
fstpt
mov
or
or
imul
add
sub
xor
xchg
in
loop
stos
pushf
es
stos
movl
jl
rolb
fimuls
fsubrl
dec
jge
iret
repz
shl
push
fidivrs
iret
insl
mov
push
fstpl
add
jo
out
push
jle
shl
es
inc
cmpsb
rolb
adc
and
cmpsl
push
dec
mov
xchg
xor
pop
adc
into
push
aas
test
cmp
test
into
jge
and
addl
lret
popa
iret
fisttpll
cmp
rcr
aam
clc
or
test
jae
add
daa
orl
sub
cmp
insb
and
mov
imul
jo
push
pushf
and
cwtl
jbe
sarb
cwtl
and
and
push
jb
jno
pop
aas
nop
mov
aas
mov
adc
mov
fsubl
test
and
test
add
push
mov
stc
das
xchg
jl
adc
sbb
pop
aaa
nop
aas
sub
out
leave
or
push
or
push
mov
lret
xchg
mov
ja
add
jg
ljmp
xor
std
test
cmp
imul
int
cmpsb
cmp
push
xchg
adc
sub
dec
mov
adc
fcmovu
ror
leave
ljmp
rcll
sub
add
cmpsl
pusha
mov
pop
add
adc
add
lods
bound
dec
jo
lcall
and
shl
imul
mov
mov
dec
leave
test
lock
nop
sbb
lea
mov
dec
xchg
xchg
adc
cmp
adc
cmc
imul
test
ret
push
xchg
pusha
mov
pusha
pop
dec
mov
mov
fs
pop
out
dec
shrb
and
add
popa
imul
push
inc
xor
mov
push
push
push
rorb
dec
in
push
dec
cmp
jl
jne
jmp
add
push
cmp
sub
movsb
cmp
lret
inc
adc
mov
mov
cmp
xlat
push
gs
movsb
repnz
lret
gs
add
xor
pop
mov
and
inc
test
push
lret
push
mov
xchg
cmc
push
jecxz
sub
xorb
or
dec
inc
pop
mov
sub
inc
jl
sti
sub
mov
mov
aaa
lds
ss
add
and
lea
cmp
test
pushf
mov
and
push
pop
loopne
and
outsb
xor
fisttpl
xor
popf
adcl
cltd
adc
fsubl
xchg
xor
in
ja
in
arpl
faddl
add
sbb
sub
jmp
fldcw
sahf
cmpsl
push
cmp
cmpsl
stc
xor
notb
out
sbb
dec
mov
daa
arpl
cltd
aaa
loop
cmp
shr
out
mov
sbb
ficompl
push
inc
adc
xchg
sbb
movsb
lods
sbb
stos
inc
xchg
pop
sbb
push
cwtl
xchg
cmp
orl
pushf
gs
mov
adc
fdivs
xchg
aas
xchg
xor
nop
das
xor
mov
jo
mov
test
scas
int
push
mov
arpl
cld
adc
mov
movsl
aaa
cmp
imull
sbb
and
dec
ss
in
loop
movsl
out
in
shl
stos
mov
push
ljmp
iret
repz
jns
fsin
and
inc
mov
pop
jmp
in
jb
jnp
mov
push
mov
sbb
pop
or
inc
xchg
pop
and
sub
dec
test
je
adcb
inc
fstps
add
xchg
iret
pop
xchg
lds
jmp
mov
sets
xchg
adc
mov
cmpsl
push
push
in
mov
leave
fs
xchg
pusha
in
and
roll
mov
xor
mov
push
aad
leave
inc
mov
ss
push
imul
ret
imul
data16
and
cwtl
push
jmp
jns
dec
fucom
or
cmp
jmp
dec
outsb
or
lock
adc
jmp
repnz
nop
cmpsl
adc
insb
inc
es
je
jg
mov
inc
pushf
jb
cmp
push
arpl
inc
lcall
leave
inc
mov
scas
sub
pusha
in
fs
in
inc
in
movsb
shrl
xor
push
js
in
stos
addr16
test
test
xor
push
js
pop
adc
mov
mov
push
push
ss
out
cmp
imul
in
imul
jl
out
inc
push
pop
push
ja
mov
out
inc
leave
out
mov
mov
sub
ret
mov
mov
pop
mov
pop
mov
insl
stos
or
imul
prefetchw
adc
sti
xor
icebp
xor
insl
cmp
cmp
sub
dec
shrl
inc
loop
and
or
scas
out
mov
xchg
sbb
inc
sbb
push
mov
inc
cmp
cwtl
pop
cmp
pop
iret
repz
push
pop
lea
ds
icebp
inc
icebp
mov
aaa
inc
mov
mov
adc
stos
or
movsb
and
or
pop
push
xchg
and
lea
orl
test
outsl
inc
test
addr16
aam
inc
pop
inc
movsl
sub
push
imul
inc
dec
or
xor
jae
cwtl
push
add
push
stos
or
addr16
movl
test
inc
sbb
push
sahf
repz
dec
sbb
xor
sub
adc
pop
mov
push
xchg
mov
mov
or
xor
stc
sbb
mov
out
repz
sub
sbb
clc
or
cmpsb
push
mov
or
bound
or
jl
mov
ss
mov
sub
jmp
aaa
or
mov
adc
aad
pop
cmc
sbb
cmp
insb
add
sbb
mov
pop
hlt
inc
push
sahf
mov
lret
ret
inc
ljmp
lcall
loopne
lahf
xor
add
inc
insl
mov
dec
inc
xchg
inc
add
pop
add
add
std
push
sbb
add
adc
and
fldcw
add
testl
mov
inc
test
inc
nop
sbb
push
add
lret
test
shrl
mov
mov
dec
mov
lods
ret
insb
dec
jg
or
mov
or
fadd
call
cmp
push
cmp
aas
adc
pop
fdiv
xor
adc
sub
inc
add
adc
add
and
mov
mov
bound
dec
or
enter
push
add
imul
roll
lock
ret
addr16
andb
or
or
or
fistpll
scas
add
fisttpl
mov
shlb
sbb
mov
clc
mov
lock
enter
pop
push
cmp
inc
or
push
push
lock
jnp
jle
xor
out
add
xlat
mov
push
mov
sub
test
into
push
or
mov
dec
pop
lods
lahf
test
aaa
stc
scas
rcr
pusha
cmpl
adc
lahf
xchg
sub
fucomip
stc
subb
inc
enter
stc
es
mov
clc
clc
jge
cwtl
mov
call
imul
mov
cld
cmp
cmp
mov
int
shl
divl
add
jb
je
dec
je
gs
dec
push
dec
xor
rorl
fwait
pop
imul
jl
testb
je
xor
push
inc
sub
mov
ja
jmp
jg
and
add
sti
sub
pop
and
adc
cmp
in
jl
iret
adc
jmp
mov
pop
lock
sub
add
addr16
cmp
add
sub
stc
sbb
push
and
add
movsl
cmc
lmsw
jne
and
jne
pop
loop
pop
adc
sbb
pusha
adc
bound
out
mov
fldl
adc
and
daa
jo
nop
adc
fmull
jmp
sbb
pop
les
out
fs
out
fidivrl
fs
ljmp
jmp
pop
in
fnstcw
sbb
xchg
out
cmp
outsl
or
mov
bound
inc
sub
xchg
outsl
pop
xor
fcom
dec
xchg
movsb
push
dec
js
pop
xchg
xchg
aad
sbbl
cmp
adc
and
js
iret
jne
mov
xor
jmp
adc
test
add
cmp
je
push
fadds
fcompl
push
test
stos
ja
xchg
sub
xchg
or
jb
shrl
sti
push
cmp
movsb
cmp
mov
dec
xor
cmpsb
sbb
mov
dec
add
add
push
sbb
xor
xor
dec
out
shrb
or
clc
lock
adc
fwait
lock
pop
aaa
or
insb
xlat
lea
mov
aas
dec
xor
or
in
inc
orb
sar
cmpl
mov
sbb
ljmp
test
outsb
or
addb
dec
push
adc
ret
inc
mov
icebp
add
shll
sbbb
in
in
pushl
xchg
mov
daa
dec
add
or
jecxz
test
or
adc
cli
pop
or
dec
insb
decl
push
mov
pop
push
insb
mov
cmpb
dec
lret
sbb
sub
and
jns
mov
roll
pop
mov
jge
dec
xorl
xlat
push
add
inc
pop
adc
stos
or
fwait
add
out
add
je
dec
je
dec
push
je
inc
dec
cmp
xchg
fs
cmp
je
jno
pusha
neg
ds
mov
fildl
ljmp
add
push
lock
jmp
sbb
fs
xchg
xchg
pop
pop
popl
pop
inc
dec
push
ret
insl
ret
jne
adc
clc
or
xchg
out
sahf
xlat
enter
push
fs
out
sahf
js
mov
push
rorb
nop
mov
xchg
inc
and
pusha
imul
cmp
jmp
lock
cmp
sbb
dec
sti
xor
shll
and
negl
push
or
lds
cmpb
adc
pop
aaa
jle
shr
pop
cld
or
sbb
lret
inc
mov
std
fldt
push
clc
xchg
or
sbb
out
jo
sub
push
pop
in
repz
out
ds
sub
insb
xor
sarb
fs
push
mov
jmp
incb
into
adc
jmp
daa
sub
nop
jp
push
pop
mov
mov
inc
xor
fimuls
pushf
lock
sbb
mov
loop
fisttpll
mov
pop
sahf
mov
and
push
mov
shrb
jns
pop
inc
lret
sub
das
addl
orb
pop
sbb
and
sub
int
and
xor
add
adc
int3
sub
rolb
or
cs
adc
mov
movsl
jbe
sub
mov
ds
stos
js
dec
lods
push
sbb
lahf
out
repz
pop
push
ds
repz
cmp
js
jns
enter
add
mov
aad
out
xor
push
and
out
call
aaa
out
mov
pop
test
xchg
or
je
pop
add
shufps
inc
and
movsl
add
fdivrs
fsubr
jae
fstpt
xor
pop
pop
jne
dec
enter
int3
mov
xchg
and
adc
test
xchg
dec
popf
or
fisttps
jbe
or
jb
jmp
mov
enter
aas
lock
lods
cmp
add
xchg
cmc
rorl
ja
adcb
jnp
sub
inc
mov
stc
push
jge
scas
adc
lock
or
dec
xor
nop
loope
jge
add
adc
add
cmp
jne
popa
leave
fdivs
repnz
or
arpl
sbb
pop
popa
fmull
push
daa
pop
loop
jmp
jno
fstpl
jmp
ret
mov
dec
dec
mov
shlb
out
mov
jmp
adc
clc
cld
in
push
inc
arpl
xchg
cld
push
or
jle
outsb
mov
imul
xchg
subb
rcr
add
lcall
or
or
cmp
roll
inc
xor
imul
or
push
or
js
dec
sub
or
jo,pt
int
not
testl
adc
sar
sub
jl
sub
xchg
adc
adc
repnz
sbb
jnp
les
in
or
out
sub
or
xor
push
scas
add
mov
aam
shlb
nop
xlat
and
lods
int
add
pop
xchg
cmp
sbb
jmp
fwait
sbb
inc
push
icebp
push
push
cmp
jne
loope
push
stos
or
push
push
js
scas
mov
pop
xor
cmp
xor
or
pop
hlt
mov
xor
xor
sub
adc
jns
les
xor
scas
cli
or
subb
push
stos
mov
mov
test
jmp
pop
cmp
inc
fadds
cs
sbb
fcom
scas
dec
stos
or
in
mov
pop
fdivl
cmp
rcrl
or
inc
popa
mov
mov
fs
fildll
xor
js
push
jp
or
push
popf
or
mov
push
mov
or
add
cmp
add
push
add
or
add
push
je
dec
je
dec
adc
adcb
cmpsl
adcb
jle
or
sub
adc
sbb
rolb
fmuls
jecxz
add
into
cmp
xchg
sti
mov
xchg
adc
insb
xchg
jmp
mov
pop
test
aaa
nop
lret
aaa
inc
jle
mov
jmp
and
mov
push
lcall
or
push
cmp
cmp
or
sub
out
sar
outsl
rcll
push
or
pop
cmp
jae
xor
sbb
mov
cmp
jmp
imul
push
fcompl
test
jge
pop
pop
adc
push
mov
fstpl
or
fsts
lods
push
xor
or
subb
sbbb
mov
rolb
clc
icebp
in
or
xor
pop
and
jb
loopne
xchg
and
adc
mov
mov
push
lret
jge
insb
bound
add
ss
adc
cmp
sahf
neg
inc
out
and
push
mov
jns
adc
movsl
jns
repz
imulb
adc
or
and
add
xchg
popa
mov
mov
pop
rol
push
in
cmc
pop
fnsave
sbb
adc
in
fnsave
enter
jmp
xor
incl
cmp
jbe
sbb
mov
sub
pop
inc
cld
lods
pop
adc
sbb
jmp
jb
bound
mov
dec
lock
jl
loopne
sub
aam
pop
cmp
pop
lret
fs
xchg
inc
cmp
lahf
les
pusha
mov
mov
mov
fld
add
add
cmp
mov
jb
jmp
imul
loopne
pop
loopne
fwait
bswap
fnsave
push
adc
cmp
sub
outsl
add
rcrl
ds
xor
int3
adc
sub
fcompl
cld
mov
add
inc
cltd
notb
xchg
test
dec
ja
rclb
dec
add
loope
or
add
stc
lds
pusha
mov
pop
lret
mov
cmp
dec
mov
add
sbb
adc
pushf
scas
js
jns,pn
pop
push
sub
pop
pop
jno
rcll
incl
pushl
pop
ss
adc
mov
add
sbb
daa
mov
mov
pmulhuw
adc
mov
cmpb
push
push
cmp
cmp
lea
stos
les
ljmp
test
push
jmp
and
int
lcall
incl
sub
push
dec
adc
or
fbstp
inc
adc
mov
mov
leave
pop
xor
and
daa
add
data16
dec
add
fisubl
or
cmpsb
icebp
sahf
push
popa
xor
je
cmp
fisubrs
jb
push
data16
pop
repnz
inc
imul
aaa
out
xor
gs
stos
xor
arpl
jbe
mov
dec
in
out
dec
fwait
push
ss
jmp
jo
arpl
or
inc
jecxz
jb
test
xlat
jge
jbe,pn
aaa
push
es
imul
mov
push
imul
ja
add
loope
inc
lcall
inc
daa
and
inc
popa
ret
andl
push
push
pop
ja
jl
das
push
imul
inc
jno
push
cs
add
pop
ret
add
push
xor
sbb
adc
sti
outsl
cmp
ja
or
lods
xchg
call
cmp
iret
inc
imul
mov
fcompp
mov
inc
das
jmp
sub
inc
sahf
inc
inc
xor
pop
and
fldl
lock
and
stos
cmp
mov
sbb
clc
dec
bound
popa
xchg
loopne
add
pop
or
xorb
adc
push
adc
mov
and
insb
and
push
xor
cmp
fadds
lcall
xor
out
cmp
push
daa
xor
inc
pop
lds
inc
ja
arpl
aaa
push
fwait
scas
xlat
jmp
call
call
lea
xchg
cmp
pop
pop
push
mov
xor
cmp
aad
lods
loope
jo
inc
mov
mov
push
or
push
cmp
jne
fadds
adcb
in
inc
loopne
add
sub
mov
cmp
mov
or
or
or
outsl
dec
loope
and
sbb
dec
andl
inc
scas
fstl
or
cmp
push
dec
dec
pop
outsl
jl
and
cmc
xchg
or
mov
je
xor
and
in
or
insl
jmp
xorps
fld
pop
mov
mov
xlat
daa
add
xor
mov
loopne
clc
dec
int
mov
push
movb
dec
cmpsl
jmp
adc
dec
les
and
push
mov
stos
lahf
into
sub
jno
popf
or
int
pop
sub
pop
and
xor
aam
xchg
sbb
inc
test
js
dec
test
imul
int
loop
dec
push
lods
pop
ret
pop
shlb
mov
testb
adc
xchg
fnsetpm(287
and
sbb
or
daa
ljmp
pop
stc
add
cmp
gs
out
ja
nop
and
or
xor
subb
mov
jmp
jne
sub
sbb
push
fdivl
lahf
or
ret
xor
add
ljmp
push
dec
add
adc
and
push
adc
or
adc
out
fcmovb
or
or
or
aad
sbb
jmp
rorb
out
enter
pop
cmp
inc
adc
std
xchg
sub
movsb
jg
jg
jbe
inc
lea
xor
jbe
mov
jo
sub
inc
mov
mov
and
jae
lea
or
mov
or
test
ja
cmp
movsb
mov
call
inc
or
inc
loop
stos
push
cmpsb
push
pop
cmp
mov
or
or
sbb
xchg
icebp
jge
push
push
push
push
adc
leave
and
xor
scas
xor
int3
popa
jo
dec
jg
aam
mov
sub
pop
push
dec
popa
lods
subl
shlb
outsl
pop
sbb
push
push
dec
cmovl
or
bound
mov
inc
aas
nop
mov
insb
xor
cmp
sahf
mov
pop
and
pop
dec
pop
or
in
add
xor
and
ljmp
aas
or
push
jae
sbb
adc
or
adc
sbb
xchg
push
inc
repz
ret
xchg
push
adc
dec
sub
decb
adc
mov
out
dec
cld
sbb
mov
dec
mov
inc
out
push
sub
insb
and
push
js
and
fisttpl
bnd
mov
xchg
lock
in
sbb
test
aam
mov
inc
pop
xchg
or
jae
pop
or
ficoml
test
mov
inc
jle
pushl
dec
jns
push
xchg
push
push
clc
ret
aam
lea
or
fsubl
out
xchg
lods
adc
out
out
inc
ret
or
shl
xchg
xor
or
or
loopne
mov
jge
mov
dec
cmp
or
inc
jg
jns
mov
jne
mov
pusha
addb
call
ss
jp
out
cmp
mov
insl
int
int3
mov
daa
and
cmpsb
dec
mov
adcl
or
jne
sti
jbe
in
push
lea
mov
test
fdivl
sub
jmp
sbb
inc
repz
jge
inc
xlat
pop
js
cltd
dec
sbb
sbb
into
cmpsb
std
or
mov
mov
scas
jge
lds
jge
adc
insl
add
in
insb
jl
mull
jg
insl
or
add
add
inc
cmp
jle
in
mov
out
xchg
mov
cwtl
mov
pop
enter
mov
rorl
adc
push
jge
inc
fsts
test
mov
mov
cmpb
je
push
mov
push
push
pop
dec
ja
xchg
mov
ret
jmp
push
je
inc
lcall
jg
add
call
mov
sbb
cmp
daa
cmp
je
addb
push
ljmp
jne
dec
jmp
lods
push
xchg
mov
sub
xchg
sub
dec
add
jns
inc
dec
push
sbb
add
cld
adc
adc
mov
call
sub
push
popf
adc
or
addl
jno
xchg
lods
mov
jmp
push
mov
and
insb
or
xchg
inc
jl
loopne
cmpsb
fimull
push
decl
insb
and
scas
sbb
imul
push
test
push
data16
cmp
pushf
dec
nop
pushl
sub
inc
sub
inc
mov
mov
pop
lock
lds
rorb
add
sahf
pop
pop
scas
cwtl
inc
mov
mov
and
cld
lcall
jo
cwtl
inc
mov
add
inc
mov
push
cmpb
jne
cmp
mov
cmpsl
lods
mov
dec
jne
mov
lcall
or
je
shld
xlat
mov
jle
sbb
outsb
xchg
mov
inc
leave
ret
push
popa
sub
push
dec
cld
and
sub
rcl
dec
clc
mov
jmp
adc
jmp
adc
cmp
push
aam
dec
shrb
aam
je
pop
lahf
imul
inc
mov
pushf
inc
into
mov
daa
adc
add
push
scas
int3
fsubr
mov
adc
and
pop
movsl
outsb
aam
add
sbb
mov
add
push
in
push
mov
addr16
push
sub
in
sbb
in
nop
mov
scas
hlt
enter
inc
mov
xor
in
push
mov
jb
jmp
add
or
stos
daa
test
pop
xor
inc
push
repz
repz
xchg
mov
mov
xchg
adc
cmp
push
mov
jmp
adc
add
cld
add
out
dec
out
add
and
sbb
sub
and
std
sub
push
cs
xchg
jo
mov
mov
outsl
call
cld
flds
popf
nop
lret
ja
sbb
fs
sub
sub
shll
inc
sbb
xchg
xor
mov
rcll
test
jge
mov
xchg
jmp
sbb
and
pop
lahf
dec
push
cmpsb
xor
push
push
add
lods
mov
xor
pusha
insb
sub
xor
idivb
pop
jmp
inc
mov
add
loopne
ljmp
clc
mov
pop
test
popf
arpl
xchg
mov
lahf
adc
out
cmp
pop
xchg
push
movsl
mov
int
outsl
aad
add
push
or
dec
jle
dec
add
and
inc
insl
sub
fsub
or
divl
es
add
mov
inc
sbb
sub
push
jl
fistl
rclb
pop
sub
mov
das
add
jne
leave
in
cmp
orb
pop
pop
iret
aaa
mov
notb
cld
cmp
ds
adc
push
lds
cld
jbe
lret
pop
push
or
stc
adc
xorl
push
aaa
xor
jmp
and
pop
out
sahf
out
sub
outsb
jle
xlat
out
sahf
sahf
scas
mov
enter
and
in
in
xlat
fptan
or
popa
add
or
adc
push
add
xlat
testb
dec
hlt
pop
sbb
fwait
pop
cmp
dec
push
fnstsw
push
andb
aas
clc
cmp
sbb
les
and
mov
call
push
test
jecxz
jmp
adc
mov
pop
dec
xchg
mov
inc
mov
xor
in
xchg
pop
jmp
sbb
mov
scas
test
out
push
mov
mov
push
dec
lret
fldl
jns
sub
jb
ljmp
or
rcll
or
pop
mov
xor
add
adc
jp
ret
mov
or
jl
pop
addb
xor
fmuls
sti
add
mov
cmp
test
aas
mov
mov
sub
pushl
in
xchg
or
sub
jecxz
mov
fs
push
dec
mov
adc
ds
push
xchg
into
js
bound
mov
or
mov
gs
push
jnp
je
push
mov
adc
into
inc
dec
in
ret
pop
xchg
jo
pop
and
inc
jmp
push
ljmp
add
xchg
dec
mov
lea
sub
push
or
adc
rcrl
ret
pushl
pop
sub
mov
enter
add
xor
xor
add
inc
es
dec
sub
mov
les
adc
sti
ljmp
xor
adc
shrb
leave
inc
pop
and
push
clc
sub
test
in
mov
and
sarl
cs
inc
adc
adc
sub
jae
xor
mov
clc
lock
dec
fnsave
enter
jnp
movsb
xor
out
sub
in
mov
cmc
jle
xchg
loopne
test
loopne
negl
mov
aad
dec
sub
jge
mov
int
pop
sub
jl
mov
mov
push
icebp
aas
xchg
loopne
testl
inc
and
cld
test
fsubl
lcall
enter
test
add
ss
ret
pop
addb
sarb
xchg
mov
cwtl
xor
mov
and
loope
lds
es
and
cmp
dec
dec
xchg
fimuls
and
mov
jmp
stos
push
adc
cmovae
daa
scas
sbb
jge
xor
adc
js
in
fcoml
sub
leave
xor
jnp
mov
sbbb
or
or
ret
add
std
movsl
sub
movl
ret
aaa
pop
in
scas
add
addr16
or
pop
es
add
jg
xchg
test
sbb
or
movb
jno
jbe
out
cmp
scas
insb
inc
sbb
call
dec
int3
mov
incl
mov
or
enter
adc
lcall
mov
jle
mov
sbb
flds
xchg
and
or
pop
dec
mov
push
gs
or
xchg
rclb
movsl
aaa
add
sbb
adc
cmp
fcom
aas
jl
test
ss
jne
sbbb
fsubl
xor
add
out
adc
xchg
daa
ja
mov
xor
hlt
cmp
adc
rcrl
cmp
outsl
test
test
pop
mov
mov
outsb
leave
es
cmp
or
mov
mov
jmp
sahf
clc
fwait
clc
shll
xor
fidivs
aaa
clc
popf
je
lock
mov
cmp
inc
hlt
adcl
test
mov
xchg
sarb
lea
jmp
loopne
push
enter
pop
insb
shrl
into
add
xor
sbb
adc
enter
sbb
js
int3
pop
xchg
xor
cs
cmpb
or
jmp
dec
lock
and
outsl
shrl
add
cmp
pusha
mov
cld
xor
jns
orl
cmp
sbb
or
add
les
nop
add
dec
je
mov
lock
sub
mov
daa
and
and
flds
cmpsb
loope
jmp
in
insb
daa
add
lods
nop
dec
lock
inc
shrb
mov
outsl
stos
pop
mov
jne
cmp
cmp
jno
sub
shlb
fadds
fcompl
add
add
cmp
es
enter
xor
push
enter
xor
xchg
pushf
pop
dec
cwtl
sbb
clc
sbb
xor
fdiv
adc
push
lods
pop
repz
push
fcomps
je
movsl
sbb
sbb
insb
jne
and
sbb
lahf
ljmp
nop
test
pavgb
nop
cmp
mov
pusha
mov
push
jge
pop
fildl
aad
cmpsb
fucomp
js
cwtl
in
fs
cmpsl
test
int3
inc
in
xor
in
lods
or
cmp
mov
push
sbbl
sbb
imul
push
sub
xor
add
shlb
dec
push
adc
imul
jecxz
scas
and
dec
push
sub
imul
push
dec
jne
push
negl
xchg
add
xor
adc
movsb
sbb
les
enter
clc
or
mov
rorb
movsb
outsl
mov
dec
mov
pop
or
hlt
sbb
push
clc
inc
pushf
inc
or
jb
pop
jbe
arpl
or
and
push
pop
cmp
pop
pusha
xchg
inc
mov
mov
sub
andb
push
lahf
jno
test
jno
fldl
xor
or
ret
test
mov
sarb
inc
bndstx
cs
lock
pushf
or
cmp
mov
lds
dec
adc
mov
hlt
sub
sbb
nop
push
dec
ror
sbb
shlb
push
push
add
dec
les
nop
sbb
outsl
sbb
add
popa
push
adc
les
ret
pusha
cmpps
add
jb
pop
cmp
pop
adc
ret
adc
add
outsb
movsb
mov
jne
movsb
divl
jl
push
js
js
sbb
int
push
filds
loopne
push
jecxz
and
push
mov
out
mov
add
flds
popa
xor
dec
test
enter
in
add
cmp
jb
fistl
fcomps
push
add
add
mov
cld
mov
or
xchg
addl
push
and
or
pusha
xor
adc
or
test
pop
sbb
fdivl
xorl
je
inc
pushf
pop
or
fidivs
pushf
dec
push
mov
push
jge
rol
xchg
aaa
insb
pop
mov
sti
in
pop
mov
push
inc
jns
imul
jnp
xchg
loope
data16
movsl
xor
xchg
push
pop
into
lcall
xchg
dec
dec
jp
push
lock
xlat
jo
adc
int3
pop
ds
addr16
jno
mov
addr16
cs
scas
jne
aas
push
mov
add
pop
pop
cmp
mov
pshufw
inc
mov
nop
push
les
mov
sar
out
rol
fimull
adc
pop
push
push
inc
or
add
cmc
push
add
movsl
mov
add
push
or
movsl
mov
mov
and
ss
adc
pop
icebp
addr16
sub
insb
add
push
dec
scas
mov
and
je
dec
faddp
add
push
push
push
push
inc
loopne
inc
inc
pop
rcpps
insl
iret
popf
push
pop
movzwl
mov
push
push
mov
xor
or
jge
shlb
adc
jle
lea
adc
shll
or
mov
sbb
adc
inc
ret
mov
fidivs
test
ds
lret
add
or
cmpsb
call
and
xor
fadds
arpl
inc
sub
adc
mov
ja
into
cmp
insb
cmpsb
scas
or
loope
mov
mov
xor
adc
mov
dec
cmp
adc
pop
fidivl
adcl
adc
mov
mov
scas
andl
lods
test
dec
inc
pop
lahf
mov
cmpl
jo
inc
pop
or
inc
jecxz
fisttpll
mov
das
mov
sub
jno
ret
repnz
inc
clc
lods
push
or
loopne
jae
mov
arpl
adc
cmc
pop
rolb
dec
inc
jne
cwtl
or
jecxz
xor
aam
jge
insl
out
adc
or
inc
sbb
imul
inc
sbb
lds
add
imul
arpl
push
loop
push
or
cmpl
arpl
adc
lahf
call
jbe
push
jmp
nop
push
das
xchg
dec
xor
push
or
ret
push
xchg
es
add
cmp
add
or
pop
and
outsl
xchg
pop
jle
mov
push
ss
lds
imul
inc
jl
cmp
push
sbb
or
aaa
shll
stc
scas
xor
aaa
cmp
add
aaa
or
lahf
add
aaa
lds
push
mov
fsubl
sahf
xchg
xchg
xchg
add
adc
or
loopne
andl
je
or
mov
push
add
or
cmp
pop
xor
xchg
and
cmp
and
loopne
enter
notb
pop
fimuls
inc
pop
cmp
push
sarl
mov
subl
nop
dec
test
sub
cltd
mov
push
aaa
fistps
in
or
leave
lds
out
adc
push
inc
mov
fcomps
mull
ds
sub
repnz
adc
add
pop
fwait
dec
popa
inc
xor
add
sti
and
cmp
mov
lods
xchg
sbb
mov
movsb
rcr
jb
dec
adc
sub
out
inc
pop
enter
push
push
inc
add
loop
pop
aaa
adc
aas
add
dec
andb
push
imul
mov
add
inc
fists
fwait
inc
and
gs
pop
insb
mov
mov
arpl
mov
into
mov
out
sbb
adc
push
cmp
add
dec
aaa
and
cmpsl
adc
mov
mov
in
call
clc
dec
lds
inc
xchg
lea
add
lahf
pop
push
cmpsb
dec
dec
mov
fdivs
dec
cmpsl
fs
aaa
and
and
xlat
mov
aaa
adc
push
decb
mov
push
rcr
add
fists
das
sbb
sahf
dec
xchg
ja
cmp
nop
lret
in
and
arpl
cmp
or
push
inc
push
arpl
adc
lea
aas
stos
sbb
adc
jne
fistps
lahf
mov
or
sbb
daa
das
pop
gs
mov
cld
rcl
in
xor
adc
dec
xchg
out
mov
push
push
inc
das
push
inc
pop
ja
bound
pop
sub
arpl
xor
aaa
adc
cs
es
adc
movsl
iret
pop
rolb
or
inc
xlat
pop
test
and
outsl
and
mov
nop
push
imul
push
adc
adc
mov
mov
rorb
addr16
jns
or
sbb
dec
leave
push
out
rorb
pop
adc
push
popl
inc
xlat
and
sub
sub
cli
fs
sbb
add
fisttpl
adc
adc
push
or
sarl
cmp
push
adc
push
fadds
filds
loope
fisubrl
fimull
popa
gs
mov
add
out
loopne
inc
fcoml
ja
dec
add
repz
dec
pop
sbb
int
mov
out
push
cmp
xor
xchg
dec
pop
and
push
push
xchg
mov
mov
mov
jmp
je
dec
pop
fstpl
pop
add
or
xchg
rcr
jne
lahf
mov
mov
leave
rcll
hlt
jns
loopne
negb
aad
add
movsb
jge
inc
mov
lock
pop
xor
call
mov
push
and
push
adc
outsl
aas
imul
sub
adc
pop
jo
daa
pop
inc
mov
lods
pushf
adc
fadds
pop
jmp
inc
fdivrs
jg
jbe
movb
xchg
push
inc
pop
ss
and
cmp
test
mov
push
in
push
rorb
rcr
notb
sub
enter
push
sbb
rclb
or
das
inc
cld
mov
fbstp
es
cmpsl
insb
je
roll
cmp
pop
mov
xchg
mov
jb
fcoms
xor
add
lods
lret
inc
mov
jbe
outsl
dec
ret
cwtl
add
push
mov
fistl
xor
dec
mov
dec
cs
mov
dec
push
mov
jne
lods
mov
adc
rcrb
mov
mov
lcall
testb
jmp
jmp
cltd
nop
add
clc
clc
clc
push
xchg
or
push
or
mov
or
lock
enter
push
jne
orb
das
jl
popa
sub
loopne
xchg
lock
push
jo
adc
dec
push
stos
lcall
lcall
out
jnp
lods
push
aaa
pop
ss
and
mov
push
pop
daa
pop
imul
cltd
cwtl
or
in
aas
js
mov
adc
insb
inc
fnstenv
sbb
shll
push
and
fdivrs
dec
xorl
movsb
add
pusha
shlb
dec
jl
sbb
cmp
inc
or
inc
xchg
dec
cmpb
notl
ja
jne
inc
mov
test
sub
mov
jne
or
and
lock
dec
push
or
add
loop
daa
outsl
inc
jno,pn
insb
in
inc
outsb
ret
addb
call
push
insb
call
cmp
dec
es
xor
aas
mov
pop
fs
or
or
sbb
cwtl
jmp
jmp
int3
pop
clc
sbb
xor
add
inc
repnz
sbb
push
enter
sub
jge
jnp
roll
arpl
bound
notl
add
clc
adc
lds
shrb
inc
orl
mov
stos
dec
cli
dec
sbb
xchg
ds
xor
sbbl
fsubrl
je
adc
inc
mov
rclb
shrb
add
inc
leave
test
mov
cmp
sbb
test
ret
mov
mov
loope
cmpsl
push
and
add
mov
sbb
pop
mov
adc
subl
add
dec
ret
adc
rcl
cmc
cmp
and
push
popf
adc
push
mov
js
nop
xor
mov
fcmovb
xchg
add
or
adc
js
inc
pushl
mov
mov
inc
dec
add
adc
add
add
orl
leave
stos
nop
sahf
dec
xor
or
fdiv
sbb
lea
jl
aaa
add
push
sub
ljmp
jmp
negl
adc
lock
std
fcoms
xor
movups
fbstp
dec
es
adc
and
xchg
lods
mov
shlb
addb
or
clc
jle
scas
pop
es
sbb
pop
mov
push
dec
sbb
fdivrs
push
int
jecxz
addr16
cmp
scas
into
add
pop
pop
daa
fwait
push
or
ret
mov
test
lods
dec
dec
mov
aaa
sub
mov
popa
add
jmp
mov
jo
push
cltd
aas
mov
adc
movsl
ficoms
and
mov
dec
ja
insl
add
outsb
jns
jo
data16
jbe
mov
mov
sub
or
mov
cwtl
pop
and
sbb
mov
js
or
mov
push
or
mov
test
test
dec
js
fistps
mov
sub
je
mov
dec
push
sbb
jne
fsts
mov
scas
movsb
and
cmpsb
sbb
loop
mov
imul
dec
push
out
insb
sbb
adc
vminpd
sbb
mov
jl
lds
and
pop
je
in
and
sub
and
sub
pop
ret
and
mov
mov
cs
clc
mov
stos
repnz
lea
sbb
cmp
ja
into
mov
add
fadds
mov
les
xor
xchg
xor
fisttpl
filds
jecxz
sub
sub
add
push
or
stos
mov
lcall
push
sarb
push
movsb
pop
sbb
lcall
or
bndstx
ss
xchg
insb
jbe
test
jg
jg
xchg
lds
add
jp
decb
push
adc
ja
daa
adc
call
ret
pop
call
sub
pop
sahf
xor
call
cmp
aas
pop
je
iret
repnz
mov
mov
add
ja
sbb
jl
sbb
mov
cmp
bound
add
mov
and
jae
es
or
sbb
test
imul
mov
out
cmp
ss
mul
sbb
in
push
push
adc
lcall
mov
cmpb
ja
jb
add
add
decl
out
mov
mov
lcall
sub
cmc
mov
push
dec
jmp
in
or
adc
mov
and
mov
lea
mov
sub
cmpsl
cmp
cs
stos
xchg
dec
cmp
adc
daa
cli
and
inc
adcl
add
dec
adc
fs
sbb
add
sbb
fisubs
sbb
lea
or
test
inc
in
and
dec
push
pusha
xor
test
call
push
loop
sub
out
mov
pushfw
adc
iret
xchg
adc
clc
mov
xor
mov
aam
xor
cmp
xor
aad
inc
add
mov
adc
movsl
add
lret
inc
cld
fistpll
push
pop
insb
dec
ds
decb
dec
and
xor
fldenv
addr16
ret
and
std
or
jecxz
cmp
es
push
movb
jae
jecxz
xchg
lea
frstor
bound
sub
popf
mov
sbb
push
jne
cmpsb
mov
or
ja
jmp
or
cwtl
test
sub
mov
pop
pop
pop
call
add
dec
je
pop
dec
pop
dec
jle
mov
mov
sbb
xchg
adc
mov
adc
xor
xchg
cmp
lods
pop
mov
in
je
push
add
pop
pop
pop
jo
xchg
jnp
pop
inc
and
testb
xor
xchg
adc
cmp
xchg
mov
add
pusha
jle
cmp
cmp
jge
sbb
mov
and
rcrl
leave
sbb
add
push
movsl
lock
stos
ficoms
int
out
adc
dec
pop
aas
cmp
push
mov
pop
dec
adc
cmp
cmp
dec
add
push
sub
add
mov
mov
xchg
mov
push
inc
loopne
xor
mov
lods
jle
fwait
add
adc
add
call
push
jl
inc
hlt
call
or
add
mov
and
out
mov
lods
cmp
mov
mov
stos
mov
test
cmpsl
cmc
fldcw
jnp
push
jp
xorb
mov
adc
fbld
out
sbb
mov
and
jne
mov
jo
xor
outsl
inc
add
shl
adc
mov
lds
cmp
out
clc
push
adc
popl
int3
cli
or
ret
or
jl
add
or
dec
popa
fisubrs
leave
aam
mov
xchg
pop
lret
mov
inc
enter
addr16
dec
push
cmc
ds
in
push
outsb
sbb
inc
and
jb
dec
bound
shl
sub
mov
xchg
and
mov
pop
fstpl
push
fldcw
mov
sub
je
or
out
mov
inc
adc
xor
mov
adc
out
and
push
movsb
ret
fdivr
and
out
mov
xchg
sbb
cmpsl
or
dec
je
adc
cmp
pop
pop
fsubrp
or
push
dec
push
xchg
les
xchg
dec
dec
lods
adc
and
fs
js
dec
push
sub
adc
or
aas
ss
push
loope
mov
sub
cmc
aaa
or
call
inc
sbb
jmp
adc
add
stos
data16
add
out
add
mov
pop
test
fisttps
jne
mov
ficomps
pop
xor
add
lea
jnp
xchg
push
add
sbb
push
ss
push
adc
inc
or
filds
push
mov
call
and
lock
xor
lock
adc
sub
out
hlt
movsb
nop
test
xor
lock
in
bound
cltd
loope
nop
adc
cmp
sbb
push
mov
adc
arpl
cld
xchg
cmp
or
lahf
pop
and
sbbb
mov
cmpsb
nop
or
cmp
ss
push
icebp
lea
les
xor
clc
and
in
mov
adc
and
je
movsl
pop
hlt
sbb
clc
fsubs
int
clc
hlt
sbb
out
pop
inc
and
or
rolb
dec
push
sub
adc
jcxz
mov
fsub
add
in
aam
add
lahf
sbb
jbe
sub
pop
rol
xor
pop
or
mov
jg
push
push
inc
and
cmp
or
inc
cmc
push
jmp
ret
push
insl
cltd
cmp
sub
pop
sub
gs
cwtl
call
lcall
push
inc
xor
pop
pop
sub
push
je
cmp
lea
and
test
pop
push
and
xlat
xlat
and
scas
pop
lea
test
add
pop
and
subb
sbbb
in
hlt
lock
mov
jp
mov
loope
jne
adc
adc
xlat
add
or
cwtl
mov
lods
push
mov
fsub
flds
movsb
std
mov
jo
pop
pop
fstl
push
inc
ljmp
ficoms
dec
mov
cs
push
fdivs
test
jle
jo
push
inc
fdivs
pusha
das
pushf
jnp
aam
add
mov
sub
xor
cmpsl
add
fidivs
sbb
pop
cltd
inc
cld
adc
or
movsb
jecxz
push
shlb
clc
and
or
jge
pop
xchg
xchg
std
jnp
dec
xlat
cmpps
cmp
ja
out
mov
jecxz
push
push
je
fsubrl
sbb
pop
push
shlb
add
pop
jle
dec
inc
add
or
xorb
mov
pop
fmuls
sub
or
lret
add
into
fmuls
aam
lret
cld
in
adcb
xchg
aaa
or
push
push
imul
leave
dec
lock
fwait
add
fisttpll
or
or
mov
fistpll
outsl
cmp
inc
push
sub
shl
out
push
push
and
xor
and
jmp
pop
jmp
sbb
sbb
push
jmp
adc
push
or
iret
out
sbb
pusha
cmp
push
xor
mov
pop
fdivrl
jle
cmpsb
hlt
push
fildl
pop
ret
call
add
add
insb
add
pop
add
out
cli
dec
jne
or
pushl
pushl
in
xor
insl
imul
pusha
cmp
dec
es
out
xchg
push
dec
cld
or
or
cmp
enter
cmp
out
push
or
ret
or
int
mov
or
andb
add
sbb
pop
hlt
ss
scas
fisubrl
or
or
scas
xorb
add
shl
lcall
or
sbb
sbb
jne
movsl
dec
outsb
fistl
sbb
sti
fstps
divl
dec
scas
cmp
imul
mov
into
cld
fldz
add
pop
pop
out
pop
and
das
in
and
xchg
adc
enter
movhps
sub
js
mov
jmp
out
add
jp
mov
or
fadds
mov
es
ds
outsb
dec
jp
in
adc
add
pop
enter
xchg
mov
or
test
mov
add
and
adc
js
pop
sub
sub
xor
mov
pop
adc
jo
mov
and
mov
cmpsl
adc
in
adc
or
test
jmp
and
add
sbb
insb
or
ljmp
paddusb
inc
stos
adc
ret
iret
and
ss
outsw
pop
pop
fcoml
mov
sub
loope
inc
mov
jb
subb
je
data16
outsl
xor
popa
insl
imul
fwait
js
inc
in
ret
jecxz
test
pushf
and
ret
addr16
roll
xchg
jo
lret
movsb
xor
jae
dec
mov
loopne
xlat
ss
push
dec
je
adc
pop
iret
fstpt
xchg
push
inc
insb
jle
insl
nop
les
jbe
test
or
push
ss
sbb
data16
sbb
inc
fcmovbe
fcompl
jb
sarb
sbb
jo
inc
imul
popf
add
jo
fs
out
lods
push
outsl
lea
nopl
adc
in
roll
sub
push
pop
sbb
inc
inc
in
scas
out
sub
xorl
mov
adc
push
sub
push
mov
out
and
push
enter
or
or
push
dec
imul
pop
xor
jne
push
rcll
adc
and
enter
mov
add
cmp
xor
add
add
jo
push
pop
dec
jno
adc
inc
or
cmp
shrl
ja
adc
mov
mov
out
inc
add
xor
je
push
push
repz
mov
sbb
jbe
push
or
push
jp
inc
push
imull
icebp
or
dec
add
out
aam
cmpsb
mov
icebp
inc
inc
add
push
enter
jno
rcrb
jns
cmp
jo
out
pop
cmpl
es
rorb
pusha
pop
mov
mov
in
adc
pop
test
adc
pop
and
loopne
jae
sbb
inc
jnp
xchg
sbb
outsl
pop
adc
sub
dec
add
pop
dec
js
and
enter
dec
mov
addl
cmp
mov
mov
mull
mov
je
mov
addb
adc
shlb
outsl
mov
add
rcr
movsb
aaa
mov
lods
or
roll
pop
or
pusha
and
fs
push
pop
inc
jne
mov
jge
or
mov
and
xchg
pop
jb
comiss
in
fadd
or
inc
fstp
ja
xchg
or
dec
add
xorb
jbe
andb
rorl
outsb
xchg
mov
and
pop
add
ja
js
mov
sbb
or
dec
or
jecxz
inc
andb
sub
inc
orb
aaa
mov
movsb
or
sub
dec
insb
pop
sub
idivb
js
inc
js
mov
movsb
inc
rcr
das
mov
xor
aam
pop
xchg
pop
enter
fiadds
lods
subb
and
sub
pop
jo
and
add
negb
pop
and
jns
pop
add
cld
sbb
loope
leave
or
adc
mov
sbb
pop
movl
rcll
mov
and
mov
cmovne
outsb
data16
and
aas
sub
sub
test
cmp
repnz
jnp
pop
dec
and
or
lock
shrb
pmaxsw
xlat
std
jae
pop
sub
pusha
xchg
jnp
add
in
call
test
mov
xchg
mov
pop
xor
xchg
xor
or
jl
loope
fldcw
imul
fdivrl
cs
outsb
cmp
or
jo
or
xor
outsb
loopne
ja
pop
sbb
add
xchg
mov
mov
or
add
pop
jg
adc
movsb
cmc
rcl
insb
sbb
pop
sbb
xor
dec
mov
and
out
fsubs
sbb
jg
unpcklps
arpl
mov
xor
push
in
mov
out
imul
add
sbb
je
xor
mov
jnp
push
pop
dec
add
and
or
adc
rorb
leave
or
rorl
push
or
cmp
add
fisubl
lods
and
fs
stc
lahf
cmp
xor
addb
daa
and
inc
push
pop
xor
adc
leave
faddl
inc
jge
mov
add
je
inc
test
ror
por
inc
cli
andb
pop
aaa
int
enter
roll
inc
add
mov
add
dec
pop
mov
or
sub
repnz
or
xchg
dec
outsl
jbe
mov
int3
nop
dec
pop
cmp
inc
je
jo
xchg
add
or
push
fidivs
stos
out
and
add
rolb
repnz
fs
lds
cmp
mov
add
imul
in
jnp
loopne
int3
es
das
enter
mov
adc
or
je
fnstenv
cs
xor
push
in
push
dec
sub
pop
das
je
mov
pop
jmp
push
inc
xchg
inc
popa
cli
arpl
adcl
into
cmp
inc
dec
ds
and
cmpl
orb
daa
mov
out
inc
add
mov
out
adc
inc
leave
enter
ret
sub
leave
leave
leave
jno
lock
clc
loop
fs
addb
test
add
and
mov
and
xor
mov
add
add
pop
nop
push
cmp
pop
or
xor
stos
push
test
mov
sub
mov
mov
mov
in
mov
inc
arpl
dec
mov
and
add
add
mov
out
jle
xor
inc
pop
and
jg
sub
jl
add
and
test
lea
push
xor
lods
imul
roll
jp
xchg
pop
pop
sbb
stc
mov
mov
dec
fisubrl
and
jno
aaa
subl
aad
or
and
dec
cs
dec
sub
add
ds
pop
loope
or
movsl
nop
pop
and
sub
lahf
add
push
mov
mov
or
pushf
sbb
xchg
sub
mov
push
xchg
mov
in
mov
jl
add
add
popa
sub
jl
adc
mov
imul
or
or
lock
xor
pop
push
repnz
pop
xchg
jmp
loopne
data16
mov
add
sub
cmp
inc
push
das
lea
add
and
or
fcoms
jno
hlt
push
add
int3
nop
mov
test
sbb
jle
inc
pop
call
inc
rorb
inc
lods
xor
add
iret
pop
xor
out
mov
adc
add
mov
xchg
xor
dec
push
addl
cmpsl
lret
pop
inc
or
cmp
sbb
push
add
adc
xchg
mov
adc
mov
pop
sbb
or
pop
pop
std
js
inc
inc
int
mov
or
imul
icebp
popa
xchg
xchg
sbb
mov
xor
cmp
push
repz
inc
in
push
mov
js
ftst
and
leave
andl
inc
mov
lret
pusha
dec
or
jne
dec
add
nop
push
je
inc
add
push
mov
je
inc
jno
and
pushf
add
mov
popf
cs
push
outsb
insb
push
mov
lahf
pop
sbb
or
fdivr
pop
popa
or
idivb
pop
add
mov
mov
sbb
aas
dec
mov
mov
mov
jo,pn
pop
pop
and
jnp
sub
mov
xrelease
aaa
mov
inc
jo
sbb
sbb
xlat
and
push
mov
dec
addl
mov
mov
jnp
lcall
sbb
inc
dec
add
add
aaa
cmp
pop
ljmp
mov
int3
cs
or
mov
jnp
andl
mov
js
movsl
mov
sub
outsl
pop
push
push
or
or
pop
movsb
xchg
sbb
into
mov
cwtl
mov
fiadds
sub
dec
enter
add
xlat
add
and
pop
loop
push
ret
xchg
jne
outsb
dec
adc
mov
add
xchg
jnp
adc
inc
mov
punpcklbw
faddp
sahf
std
add
mov
lods
int3
loope
out
push
stc
enter
mov
push
out
or
dec
push
js
push
xor
es
aas
mov
fs
sbb
inc
inc
xchg
fisubrs
dec
mov
cmpsl
lods
rcll
fbld
cmovbe
mov
push
data16
inc
shlb
ja
stc
call
sbb
leave
push
jne
jns
sahf
lods
add
js
je
xchg
sbb
cmp
in
xor
pop
xchg
xchg
sbb
add
pop
pop
daa
mov
jne
sub
lret
mov
jns
cmp
es
push
push
add
movsb
or
bound
xor
out
push
fs
push
xchg
mov
cld
inc
lahf
mov
dec
mov
inc
fwait
jno
lcall
xor
mov
dec
mov
les
mov
jmp
test
pusha
scas
mov
andps
sub
ficoml
xchg
popl
xchg
push
or
ja
mov
adc
adc
mov
lods
lret
adc
sub
mov
dec
imulb
push
or
fs
jg
dec
movsb
and
call
add
cmp
push
sbb
or
cmp
repz
sub
sar
adc
and
insb
nop
xlat
pusha
xchg
inc
daa
popf
or
nop
pop
les
pushf
iret
nop
shr
mov
xor
adc
pop
dec
cmp
les
xchg
mov
mov
sbb
or
leave
arpl
adc
add
inc
pop
dec
outsl
pop
dec
scas
es
pushf
lahf
xchg
and
jnp
bound
movb
push
ficoms
xchg
inc
cmp
lods
cmpsb
dec
jno
int
push
mov
sbb
mov
xchg
pop
jl
call
in
cmp
mov
adc
sub
scas
repz
js
jno
or
mov
push
sub
bound
push
jo
xor
adc
inc
mov
mov
pop
cmp
dec
leave
lea
mov
xlat
lods
xchg
cmp
pmuludq
mov
push
cld
push
xchg
das
jp
sbb
bnd
das
or
fmuls
xchg
cmp
addr16
pushf
std
cld
sti
out
pop
pop
jle
testb
pop
sbb
cmp
xor
test
shl
fsubrl
cmp
mov
xor
lods
add
ret
add
aaa
jle
dec
and
enter
pop
dec
in
lea
mov
dec
dec
xchg
sub
or
popa
sbb
js
push
movsb
dec
jmp
dec
leave
iret
pop
pop
movsb
dec
dec
clc
xor
lods
pop
sub
or
add
mov
aad
bound
add
ret
in
sbb
add
lods
lds
push
pop
mov
mov
push
or
mov
pop
sub
mov
pop
flds
ret
pop
mov
out
or
xchg
sub
cmp
pop
mov
dec
push
mov
push
test
stos
xor
xchg
into
xchg
out
repz
ljmp
and
mov
dec
inc
std
jge,pt
aaa
sbb
pop
add
seta
xchg
push
dec
adc
push
cmp
sbb
inc
adc
push
pop
xchg
xor
movsb
mov
movsl
or
xchg
sbb
pop
mov
test
cmovns
jp
cmp
incl
pushf
jae
push
rclb
sahf
cmpsb
jo
mov
jnp
cmp
les
and
ljmp
add
xor
icebp
and
sti
jmp
imul
outsl
adc
adc
push
jbe
andb
test
mulb
inc
dec
call
adc
add
pop
jge
push
mov
inc
push
inc
insl
frstor
mov
push
add
fcomi
shrb
add
das
lret
mov
addr16
das
jg
rorl
and
cwtl
xor
cs
adc
lds
push
dec
popa
xchg
cltd
fldt
or
jnp
insl
push
loop
cwtl
dec
push
icebp
ja
lods
stos
icebp
push
dec
rorl
pop
pop
scas
cs
sahf
imul
pop
jno
imul
dec
addr16
fcoms
call
fwait
das
adc
push
xor
dec
mov
sub
push
push
push
inc
mul
push
ss
jae
pop
mov
pusha
lock
push
xor
es
imul
fmuls
addr16
push
mov
sbb
and
sarl
push
movsb
add
adc
jnp
mov
xor
shlb
cmp
dec
and
push
mov
test
test
test
cwtl
lods
flds
mov
xlat
and
lods
adc
dec
les
mov
sub
lea
sub
jnp
test
jg
sbb
xor
push
aad
andl
push
or
mov
dec
xchg
pop
sarl
popf
test
addr16
cmp
jne
mov
ficompl
cmpsl
sahf
push
aam
sahf
pop
outsl
mov
fildl
add
dec
lock
adc
das
sti
inc
rcr
psubsb
xchg
mov
dec
pop
test
adc
maskmovq
add
pop
add
mov
imulb
rorb
sbb
mov
adc
nop
nopl
loopne
mov
nopl
cmovp
in
push
sub
cmp
mov
jno
pop
psrlq
invd
out
es
cmp
sbb
mov
mov
dec
dec
rclb
mov
or
test
or
sbb
leave
add
jmp
gs
sub
mov
pop
jmp
or
or
add
test
pop
sbb
add
nop
push
add
or
pop
sbb
dec
out
out
dec
push
xor
lods
and
cli
adc
jecxz
ss
mov
mov
je
jne
mov
mov
cmpsl
inc
dec
xor
sub
mov
mov
pop
leave
cmpl
add
xlat
jo
add
dec
stos
or
push
test
mov
and
pusha
sbb
cmp
pop
push
jecxz
rcl
es
xor
add
pusha
and
cmp
jg
addb
iret
dec
pop
ds
or
and
jne
add
push
inc
or
inc
push
xor
test
stc
inc
mov
shl
pop
andl
lods
dec
js
sub
push
mov
neg
rorl
add
ret
add
xor
or
loope
and
stos
and
in
ss
lahf
stos
sbb
mov
dec
sbb
and
dec
lock
inc
sub
loope
insl
mov
mov
popa
cmp
or
mov
ret
data16
fs
or
int
pop
xor
loop
xchg
xor
popf
mov
test
add
push
push
shl
std
inc
add
mov
sub
and
imul
lods
or
add
xchg
sbb
scas
mov
add
push
insb
movsl
xor
xor
mov
xor
jb
and
cmp
xor
pop
sub
push
mov
mov
push
test
in
push
bound
inc
push
loopne
sbb
xchg
out
push
adc
dec
pop
pushl
xchg
jg
jle
hlt
test
dec
jl
or
or
int
test
clc
gs
pusha
nop
and
stos
add
aas
pop
xchg
popa
inc
dec
pop
fsub
dec
mov
mov
adc
cmp
jmp
imul
jns
sbb
test
xor
mov
pop
shll
xchg
mov
sub
sub
mov
push
imul
or
incl
adc
mov
cmp
mov
push
lock
mov
push
adc
shrb
push
in
and
int
lahf
lods
and
inc
test
cs
lahf
aaa
sub
or
mov
push
gs
jmp
rolb
aad
scas
dec
out
loopne
popa
pop
das
and
jb
push
jmp
aas
stos
das
mov
cltd
in
and
insl
push
xor
hlt
jns
jo
push
push
insb
mov
push
jae
jp
jnp
insb
push
hlt
push
aam
outsb
insb
pslld
movsb
outsb
outsl
pinsrw
hlt
sbb
paddusw
mov
fs
lods
mov
cwtl
add
dec
into
sub
nop
pop
xchg
push
xor
cmp
xchg
cmp
sahf
lods
mov
mov
xor
gs
ljmp
cmp
dec
outsb
in
or
dec
mov
mov
mov
ja
lds
xchg
ja
sldt
stos
in
movaps
xchg
dec
stos
jge
dec
ret
clc
in
xchg
jg
adc
sbb
adc
lcall
lods
adc
lods
sbb
std
lcall
stos
lds
sub
xchg
lahf
test
dec
lret
adc
bound
adc
xor
push
loopne
cmp
dec
adc
iret
ret
lods
inc
pop
pop
cs
iret
hlt
or
mov
mov
iret
iretw
xchg
or
ss
jmp
inc
jmp
insb
adc
in
outsb
dec
xchg
mov
jno
dec
outsb
shrl
mov
sarl
pop
add
sbb
addb
or
push
mov
cmpsb
sbb
cs
jecxz
mov
cmpb
dec
mov
and
sbb
movsl
or
push
push
and
cwtl
push
mov
sti
out
pop
xchg
adc
adc
lcall
xchg
js
les
in
scas
add
or
cmp
es
jge
dec
jo
push
daa
sbb
add
rolb
lcall
add
shrb
and
mov
dec
push
adc
add
add
mov
int3
xor
ret
dec
or
imull
pushf
or
jne
mov
add
mov
lds
and
sti
cmovo
mov
sahf
fcompl
jge
psrld
mov
and
dec
lcall
daa
daa
call
inc
clc
movb
pop
pop
mov
add
mov
test
push
xor
movsb
test
and
inc
popf
arpl
sbb
push
rolb
push
jb
cmp
imul
roll
mov
fldenv
adc
inc
push
or
sub
xchg
or
xchg
add
fists
mov
repz
mov
or
xchg
xor
inc
add
xchg
or
xorl
shlb
dec
or
cmpsb
popa
adcb
mov
insl
xchg
insb
pop
fists
test
add
movsb
or
adc
orb
outsb
add
add
jns
or
adc
test
push
add
cltd
inc
mov
xor
jns
add
inc
leave
adc
movsl
enter
jp
inc
movsl
inc
pushf
jae
imul
loopne
add
mov
sbb
or
cmp
shll
or
loop
cmp
pop
push
ja
push
push
imul
aas
lods
inc
lret
daa
lods
mov
mov
jbe
sub
jg
add
jne
out
and
or
adc
sub
sub
inc
or
mov
mov
call
fwait
or
daa
lret
nop
cmp
test
les
jne
push
mov
mov
dec
ja
mov
jp
aam
mov
dec
pusha
mov
jbe
mov
add
push
add
cmp
push
add
fisubs
push
or
xor
xchg
mov
adc
dec
push
sub
sbb
out
outsb
add
popa
mov
push
insb
jge
mov
insb
mov
scas
fs
jge
ucomiss
clts
out
pop
cmp
add
jge
cmp
shll
int
pop
loop
roll
push
ja
inc
sbb
shlb
ja
push
add
pop
subl
inc
sbb
lods
push
push
dec
mov
mov
cmp
inc
push
mov
in
imul
mov
mov
pop
adc
das
mov
je,pn
xor
add
inc
xor
or
fadds
lods
mov
push
pop
hlt
jbe
dec
rcll
pmaddwd
fisttps
push
mov
mov
xor
aam
sbb
jecxz
imul
mov
filds
imul
ss
lea
cmp
or
mov
lods
rorb
push
sbb
icebp
mov
add
inc
push
mov
fstl
dec
dec
pop
popa
les
lcall
dec
mov
mov
das
dec
push
adc
in
push
ja
movsb
mov
aad
daa
in
int3
gs
xchg
or
jecxz
xchg
xor
inc
pop
mov
push
mov
rcll
movlps
mov
inc
enter
loope
mov
mov
test
movsl
subl
test
fcoms
pop
jbe
andl
mov
or
xchg
mov
movsl
mov
movsl
jo
mov
orl
sbb
mov
rorb
leave
arpl
mov
adc
jno
clts
add
das
fstpt
sbb
push
add
xor
xor
mov
jp
orl
mov
pop
enter
icebp
test
andl
cmp
dec
inc
loopne
xor
jno
inc
xor
pop
pop
cmp
test
cmp
outsl
loope
jle
and
in
sbb
push
icebp
pop
mov
out
idivb
mov
sbb
mov
mov
jg
ret
fbld
push
inc
mov
jae
mov
lahf
loopne
stos
or
add
pop
inc
mov
cmpsb
sar
mov
push
add
jp
xlat
pushf
and
xchg
es
das
out
sbb
movsl
das
iret
in
test
pop
xchg
lahf
iret
sbb
add
pop
shrl
or
out
sbb
cmp
dec
inc
insb
outsl
clc
add
lock
mov
cmp
rorb
shlb
push
lret
andps
xor
das
leave
aad
test
lods
inc
add
pusha
mov
popf
and
stos
cmp
or
dec
aaa
pop
inc
mov
mov
pop
add
mov
scas
sub
lahf
mov
inc
rorl
js
xlat
pop
jae
sub
push
xchg
xchg
or
pop
sahf
inc
out
dec
cmp
push
and
pop
pop
sbb
or
dec
rcr
push
imul
dec
pop
inc
pop
in
or
enter
or
adc
enter
sbb
sbbb
and
mov
xor
cld
ss
lahf
sbb
sub
mov
xor
nopl
repz
mov
cmp
repz
sbb
cs
movsb
out
push
roll
addb
lea
es
ret
mov
faddp
push
sbb
lcall
push
cmp
movsb
sahf
out
jl
adc
ljmp
inc
daa
cmp
mov
push
or
push
push
jl
pop
mov
jmp
cmp
les
push
dec
xor
push
aas
mov
jge
pop
testl
sbb
repnz
roll
invd
xchg
wbinvd
add
dec
and
mov
add
push
push
jl
sub
imul
sbb
cmpsl
adc
fistpl
dec
pop
dec
fistl
mov
nop
ds
sbb
inc
or
or
jo
mov
mov
pop
lcall
cltd
push
adc
or
sahf
or
les
shl
xchg
or
fs
out
data16
sub
adc
ja
cmpl
push
inc
daa
pusha
xor
stc
or
ja
or
add
jge
imul
push
push
push
outsl
jae
imul
add
add
lea
addb
mov
stc
xchg
lock
mov
mov
adc
or
dec
dec
dec
ret
or
es
loopne
jnp
add
add
or
or
idivb
sub
and
push
pop
or
mov
and
or
ret
or
xchg
loope
add
test
or
mov
dec
roll
shll
repz
mov
mov
jae
push
addr16
lahf
rol
push
pop
loope
insl
or
push
rolb
shrl
xchg
add
pop
ja
int3
in
push
lods
push
popf
mov
or
xor
inc
or
pop
and
and
mov
sbb
inc
or
mov
outsb
rclb
cmpsl
pop
mov
pop
pop
xorb
jp
movsl
enter
inc
daa
ret
das
out
movsl
je
push
div
and
jb
incb
lret
psubusb
jne
jmp
dec
leave
dec
mov
and
insb
lret
jp
pop
inc
cwtl
adc
mov
cmp
scas
add
mov
dec
outsb
jo
lret
inc
push
mov
add
xchg
push
test
sbb
add
dec
add
cmp
add
jno
mov
push
push
enter
xchg
dec
add
pop
loopne
push
addl
cltd
push
cmp
pushf
adc
dec
fcoml
add
cltd
adc
std
xor
jbe
aam
filds
jmp
cmp
or
mov
rdpmc
xor
lds
testl
lea
shlb
in
or
mov
or
mov
or
or
xchg
xor
mov
adc
sub
iret
xchg
jb
mov
and
inc
pop
icebp
sar
iret
pop
adc
add
lret
or
push
xchg
push
inc
push
jne
in
sub
lret
imul
mov
push
or
cmp
mov
jns
or
adc
dec
add
sub
movsb
loope
push
add
jne,pn
subl
fisubrs
sub
jae
and
in
enter
xchg
test
in
mov
lcall
xor
xchg
inc
pusha
dec
out
ljmp
fstpl
mov
xchg
pop
inc
int
dec
addb
pusha
aaa
xor
outsl
les
je
iret
cmp
xchg
int
rorb
sbb
xor
jl
mov
into
movsb
push
scas
sub
jns
or
or
and
sub
and
or
dec
xor
adc
cmp
into
sbb
mov
jnp
outsl
outsl
je
sbb
dec
and
push
fcomps
cli
and
pop
or
push
and
xor
loope
lcall
mov
xor
cmovbe
pop
ret
pop
push
cmc
inc
add
in
iret
inc
or
push
sub
adc
xchg
push
in
sbb
dec
lock
js
pop
pop
pop
adc
pop
add
in
sub
pop
adc
les
pushf
lret
icebp
arpl
mov
and
add
dec
js
loop
dec
les
addr16
loopne
add
xchg
loopne
and
movsb
mov
push
sub
es
pop
and
ret
and
mov
inc
fs
or
nop
pop
popa
stos
add
push
xchg
mov
or
aad
jo
movsb
sbb
div
adc
xchg
mov
jle
and
cmp
andps
ret
or
clc
imul
int3
shlb
pop
xlat
outsl
add
pusha
push
sbb
push
leave
shrb
jae
add
cmp
cmp
fwait
xchg
push
cld
inc
jb
add
adc
jbe
lds
jle
mov
mov
pushf
or
outsb
or
rcll
xchg
add
or
or
ret
rorl
add
dec
push
test
push
pop
inc
add
popf
and
xchg
pop
pushf
adc
or
ret
sub
and
inc
add
clc
push
sub
add
into
push
push
aaa
adc
dec
add
sbb
arpl
push
adc
insl
or
inc
mov
push
sbb
xchg
lahf
stc
inc
sbb
inc
divl
ret
xchg
call
cltd
xor
xor
dec
call
cmp
ds
lea
inc
pop
cwtl
add
sbb
mov
sbb
sti
push
fsubs
out
sbb
sbb
inc
lea
or
addl
test
inc
rcl
mov
push
jae
push
popa
mov
fcoms
push
adc
aas
popa
out
mov
cmpl
fwait
jbe
and
test
inc
scas
xor
aad
mov
inc
orb
mov
enter
mov
add
faddl
imul
nop
nop
push
lock
sbb
mov
mov
inc
cwtl
sub
pop
inc
cmp
or
sbb
adc
sti
sahf
cmp
or
je
push
mov
das
sub
pushf
cmp
flds
insb
int3
mulb
push
sub
push
cmpsl
fldcw
call
mov
imul
sub
pop
cmpb
sub
nop
daa
adc
in
sub
adc
and
push
jecxz
push
sarb
mov
in
mov
aad
adc
dec
or
sub
adc
or
cwtl
push
in
xor
rclb
add
mov
cmp
shll
inc
inc
aad
faddp
es
stos
repz
inc
jo
jne
sub
repz
aad
sbb
sub
andb
xchg
jl
jns
shlb
pop
mov
or
iret
ror
test
jge
sahf
fldcw
pminub
add
fidivl
data16
fldt
mov
mov
fstpt
adc
pop
cmp
jp
cmp
cmp
inc
sahf
pushf
mov
add
sub
dec
dec
push
subl
pop
mov
das
sbb
aad
adc
cmovno
dec
dec
jae
loope
loope
es
and
xchg
push
lea
dec
mov
das
rcrb
mov
cmp
mov
cmp
cmp
nop
or
or
xchg
gs
add
movsl
jnp
out
loop
aad
xor
sbb
fldl
je
sub
fcoms
jmp
imul
push
or
push
dec
mov
xlat
pop
add
decl
or
lods
sbb
mov
stos
push
clc
xchg
push
pop
pusha
pop
mov
cwtl
mov
mov
jle
stc
popf
add
xor
sub
dec
dec
cmpsb
mov
dec
fimull
xchg
xor
push
cmpsl
ret
pop
adc
push
shl
add
dec
fmull
mov
inc
xorl
mov
addl
inc
add
shr
mov
lahf
loopne
inc
imul
adc
inc
mov
cmpl
inc
or
push
mov
nop
mov
push
mov
adc
inc
icebp
lods
rclb
cmpsb
mov
mov
imul
mov
movsl
and
jle
les
sbb
sbb
and
subl
dec
mov
pop
popf
push
cltd
pop
add
pop
or
adc
cwtl
push
arpl
les
xchg
xchg
addb
or
dec
imul
adc
sub
leave
fs
jb
lds
rcrl
mov
fs
pop
je
sub
mov
sub
xchg
shl
imul
mov
enter
cmp
enter
mov
ss
mov
push
movsl
leavew
add
popa
or
test
add
add
mov
popf
pusha
das
pop
mov
push
imul
popf
jno
roll
pop
push
dec
popf
mov
pop
repnz
fisubl
lods
mov
sbb
and
mov
and
sbb
lods
and
mov
xor
rclb
push
arpl
sbb
xor
jbe
and
xor
inc
cmp
stos
fstpt
test
icebp
mov
mov
mov
sub
ret
mov
daa
punpckhwd
dec
int3
push
pop
mov
mov
adc
int
xchg
testb
add
push
inc
add
pop
js
daa
inc
imul
pop
rorb
push
sbb
mov
dec
scas
test
or
inc
or
shrb
xor
jl
pop
pop
push
pop
xchg
aam
and
cwtl
movsl
mov
jbe
fistpl
repz
hlt
in
adcb
adc
fildl
inc
xchg
adc
rol
sub
in
lcall
add
mov
aas
out
sbb
in
push
aam
push
in
into
mov
push
loopne
das
int3
out
fst
mov
ret
push
sbb
push
pushf
push
and
mov
shl
or
dec
push
or
mov
push
jnp
xor
stc
pop
push
sbb
cmpsb
inc
xchg
xor
or
lock
xchg
cmp
dec
push
add
por
cmp
lock
adc
xchg
push
dec
xor
push
mov
xchg
dec
xchg
mov
sti
out
pop
jp
aaa
insl
call
jmp
push
jl
xchg
xchg
xchg
inc
jg
or
leave
leave
leave
leave
inc
jl
lock
fs
in
fs
int
xor
in
cmp
jp
cmp
jns
fistps
out
push
xchg
sub
ljmp
sub
cmp
push
sub
fs
pop
add
sub
and
out
pop
add
in
std
lret
ret
sub
movb
ret
add
mov
push
rolb
scas
dec
inc
or
add
sbb
daa
pop
pop
mov
sub
test
call
or
and
sbb
jb
je
or
and
cmp
dec
sub
xor
ss
adcb
and
mov
imul
icebp
sbb
dec
roll
or
mov
addl
sbb
lret
dec
mov
or
ss
loope
and
jae
pop
ss
xorl
xor
ja
pop
fsubs
push
push
loope
imul
xchg
inc
fwait
outsl
inc
cld
push
sub
push
daa
jp
add
jb
icebp
mov
sub
push
je
int3
pop
jle
cvtps2pd
test
imul
xor
inc
out
mov
fists
mov
roll
or
imul
movsl
jle
mov
shl
pop
mov
jmp
inc
inc
ss
in
enter
pop
aaa
ficomps
inc
repnz
je
add
adc
and
xor
inc
mov
pusha
sbb
jae
push
xor
jnp
mov
loopne
mov
adc
add
pop
adc
push
add
and
and
mov
mov
popl
jae
and
test
adc
lods
das
push
xor
jno
iret
leave
mov
push
andl
adc
adc
mov
or
loopne
adc
inc
lock
add
aam
pop
inc
int
ret
scas
pop
sbb
mov
adcb
push
pop
and
out
out
pop
inc
sub
sbb
inc
xlat
pop
inc
xor
push
imul
aas
outsl
adc
repnz
fdivrs
scas
inc
movups
push
ret
cmpsl
andb
add
ja
mov
push
cmp
push
ret
mov
mov
xchg
pop
adc
dec
sarl
adc
insl
imul
and
adc
push
stc
cmpsb
mov
imul
xchg
sub
sub
sbb
fimull
loopne
adc
jg
jno
ret
push
sub
and
cwtl
sbb
or
aas
adc
lea
adc
mov
push
push
push
stc
cmpl
decb
es
das
repnz
inc
loopne
jo
aas
mov
scas
pop
push
pusha
cmp
aas
dec
fisubl
rcr
clc
icebp
shlb
push
and
ljmp
fcmovnb
xor
and
jbe
gs
loop
hlt
adc
jo
push
test
aaa
or
pop
rorb
cmp
rclb
setno
jp
mov
gs
mov
lock
ljmp
xchg
inc
push
xlat
xchg
pop
subb
sbb
or
lds
fucom
int
pusha
or
fstl
push
cmc
out
cmp
xchg
pop
push
test
lret
cli
sbb
cli
test
cmc
maxps
stos
in
cli
mov
cmc
lcall
leave
in
sbb
fs
leave
enter
imulb
idivl
add
clc
inc
repnz
in
sti
xor
je
jb
subb
pop
jmp
cmp
aas
add
dec
rorl
add
and
pop
out
fnstcw
mov
dec
fmull
mov
jbe
inc
outsb
sbb
outsl
mov
pop
dec
xchg
lahf
push
mov
test
hlt
sti
les
fcom
out
and
push
mov
lret
out
pop
fs
pop
test
ret
dec
push
mov
dec
pop
jecxz
hlt
jl
jecxz
add
cmp
mov
lahf
insb
push
pop
mov
inc
lods
add
push
and
in
test
dec
pop
inc
insb
and
sbb
mov
xchg
add
pop
data16
jo
push
sbb
shll
inc
pop
pop
pop
test
xchg
xor
mov
and
mov
and
aam
dec
push
addr16
inc
or
lret
jmp
mov
xchg
cli
cli
or
mov
dec
or
or
pop
and
lock
or
es
stc
cmpsb
bound
adc
sub
cmpsb
cli
adc
add
mov
push
stc
push
jno
in
add
std
push
rol
cmp
xor
addr16
pushf
sub
addb
pop
or
clc
inc
lahf
fs
cld
or
push
jo
in
sbb
ljmp
cli
or
lds
sub
jo
xor
mov
mov
and
jno
push
cmp
pop
add
xor
dec
push
cli
pop
xchg
xchg
xchg
pop
jge
cmpsb
shl
xchg
xchg
xchg
lret
adc
aaa
pop
jle
adc
sbb
mov
xor
and
sete
mov
jge
imul
cmc
adc
repnz
push
xchg
pusha
push
fs
inc
or
dec
jmp
dec
pop
and
jns
or
call
popf
sbb
cld
push
daa
sub
or
cld
inc
sbb
dec
mov
fsubp
imul
pop
cld
xchg
push
inc
mov
cmp
adc
es
mov
sar
jns
mov
in
cld
test
jg
adc
adc
jnp
xchg
iret
add
aaa
test
push
mov
mov
std
add
push
js
scas
cwtl
mov
std
lahf
aam
sbb
jmp
dec
xor
outsl
jo
adc
inc
or
std
iret
stos
insb
inc
xchg
or
mov
outsb
lods
adc
jns
test
mov
or
movsl
in
test
or
mov
push
adc
jns
sub
das
adc
fwait
ret
bound
and
lods
adc
mov
popa
int
sbb
test
push
cld
lock
inc
dec
jg
sbb
pop
inc
iret
inc
and
cmp
dec
mov
mov
jbe
push
mov
bound
and
cmp
jns
add
imul
js
mov
add
push
test
or
into
sarb
and
inc
nop
rorl
jne
xadd
call
and
jb
rcll
stos
mov
outsl
mov
cld
sub
aam
mov
add
sti
in
adc
sarb
ror
add
jns
inc
pop
push
imul
push
jg
popa
jo
lea
jo
movsb
cs
pushf
mov
xor
aad
dec
sahf
popf
pop
mov
loope
add
push
nop
add
cmp
aam
loopne
cwtl
cmp
xor
jp
orb
push
push
shlb
stc
repnz
mov
mov
push
jnp
stc
pop
pop
push
les
js
test
aam
int3
push
cwtl
or
fidivs
or
add
xchg
or
and
xchg
inc
sbbl
addr16
mov
aaa
cltd
sbb
mov
pop
adc
jge
dec
pop
fnstsw
pop
shlb
lea
sbb
fidivrl
xchg
push
inc
dec
cmp
test
mov
and
std
adc
adc
je
push
aaa
fldenv
xor
push
ret
nop
lcall
iret
in
add
bound
mov
notb
fcmove
pop
add
mul
in
shr
pop
repnz
add
mov
jle
or
mov
lock
loop
sbb
in
rclb
verr
mov
push
ss
decl
push
push
ljmp
and
repz
pop
mov
push
fs
repz
rclb
inc
jne
add
cmp
ljmp
sbb
sbb
mov
xchg
pop
pop
or
adcb
ds
mov
inc
scas
ds
lret
lds
sub
lods
inc
insb
adc
or
cmp
or
xorb
psrad
les
pop
ret
mov
js
cmp
jns
dec
push
add
inc
imul
mov
pop
lcall
test
shlb
jo
mov
inc
mov
sbb
xchg
sub
xor
mov
xorb
cmp
mov
push
or
negb
sub
xor
adc
jo
mov
push
arpl
and
mov
push
dec
sbb
dec
insl
inc
es
mov
into
add
cmp
xor
sub
add
test
add
inc
test
imul
hlt
rorb
or
cli
jo
xor
jmp
cmp
pusha
adc
or
jae
sbb
scas
or
add
dec
mov
adc
or
cmp
adc
rclb
lahf
scas
pop
mov
lret
rorb
xchg
fisttps
jno
movsl
and
mov
push
push
fldl
leave
sub
pop
adc
sbb
or
addl
mov
push
mov
mov
add
enter
test
and
pop
or
aad
addb
divl
push
inc
cwtl
push
push
dec
mov
adc
roll
out
mov
popf
rorl
sub
in
or
mov
push
stos
ret
or
xchg
divb
in
movb
es
das
adc
dec
out
sbb
sbb
movsb
int
mov
cmp
or
mov
push
lock
inc
push
add
sub
lahf
or
pop
push
movsb
pop
push
xchg
pop
inc
sub
sub
movb
ljmp
pop
insb
rorl
arpl
outsl
mov
cmp
in
adc
mov
ds
test
mov
push
popa
jo
orb
addl
dec
cmp
xchg
cmc
mov
pop
pop
push
es
push
aaa
jae
sub
pop
pop
test
bound
popa
movsb
sti
and
inc
or
adc
inc
lcall
aaa
mov
rclb
push
test
mov
jns
fcomps
data16
pusha
xchg
out
mov
pop
mov
les
push
cld
push
sub
add
dec
jl
jecxz,pt
add
add
fbld
pop
dec
cmp
jecxz
jb
xchg
cmp
clc
add
dec
xchg
xchg
aas
out
add
or
or
jo
push
pop
jecxz
mov
or
push
pop
push
sahf
jne
setge
aas
adc
push
xor
sub
ss
ja
mov
rorb
mov
lahf
inc
xchg
mov
loope
xchg
enter
push
dec
imul
ja
adc
add
ja
jno
adcb
jns
dec
rcll
lcall
cmc
inc
btc
jb
or
inc
call
dec
pop
jp,pn
stos
mov
jg
sub
addb
loope
pop
cmp
cmp
mov
loope
mov
jmp
cmp
paddw
adc
and
xchg
cmp
out
sbb
or
xor
lahf
sub
add
cmp
lcall
xor
sbb
ret
push
jbe
pop
or
popf
dec
popa
jo
ret
inc
jnp
mov
sbb
sub
adc
sbb
rcl
pop
ja
jge
cmp
ja
cmp
outsl
iret
pop
fwait
add
test
or
push
push
add
adc
add
lret
es
mov
push
jmp
dec
xchg
scas
mov
mov
adc
lds
xor
ss
insl
add
dec
cmpl
jne
pop
add
and
cmp
das
iret
mov
ret
sti
jge
loopne
adc
je
inc
daa
sbb
das
and
mov
jl
sbb
and
fsubrs
sbb
inc
fcmovnbe
icebp
mov
jg
imul
ja
or
jmp
rorl
xchg
fimuls
mov
daa
jecxz
inc
xchg
out
adc
leave
leave
enter
adc
lods
loopne
in
out
adc
sub
lds
and
push
and
push
repnz
aam
insl
dec
pop
sub
or
push
inc
or
adcl
daa
mov
pop
add
decl
pushf
shrb
or
sbb
cmpsb
pop
xor
and
mov
or
outsl
or
push
daa
or
adc
jne
or
add
pop
add
adc
add
or
pusha
iret
push
add
js
xor
add
addb
roll
and
fs
adc
jge
aas
add
push
outsb
jb
add
pop
inc
add
jl
mov
add
adc
push
push
jg
movsl
call
adc
mov
dec
lcall
xor
jne
push
jbe
mov
outsb
and
pop
das
fmuls
sub
in
and
and
or
and
xchg
mov
push
pop
outsb
xlat
jge
and
pop
jg
verr
push
or
in
ss
pop
imull
lods
call
and
jno
sarb
cmp
jns
sbb
mov
cld
or
in
or
dec
nop
js
dec
inc
sbb
pop
scas
sub
iret
sbb
popf
add
mov
stos
dec
lret
add
dec
lds
sbb
lret
lods
in
nop
and
call
cmp
aam
or
gs
pop
test
or
je
jno
adc
add
add
rorb
xlat
lahf
inc
or
out
and
popa
mov
mov
xor
xor
and
shll
leave
stos
jmp
and
jb
adc
into
mov
mov
mov
rorb
and
or
mov
add
and
stos
imul
out
loope
ja
sar
jae
pop
jne
ficompl
or
xor
mov
jno
ret
idiv
std
fsts
add
in
mov
cmp
jo
dec
outsl
jbe
and
cmp
xlat
bound
adc
adc
dec
out
dec
je
insb
add
pop
loop
mov
cltd
and
mov
ret
fwait
or
mov
add
jno
xchg
fimull
lcall
adc
je
xor
cs
ja
mov
cli
jne
xchg
fcomp
fdiv
jmp
xor
sbb
outsb
jmp
push
fldt
add
jg
test
insl
fists
stc
adc
adc
mov
pop
dec
sub
add
js
hlt
je
dec
and
inc
test
arpl
ret
adc
push
pushl
je
inc
jl
xchg
xor
pop
lret
cwtl
push
aas
inc
sbb
and
push
push
dec
mov
sub
sbb
and
or
and
or
and
sbb
rolb
bound
outsl
adc
loope
cmpb
mov
mov
adc
imul
xor
call
dec
inc
cvtps2pi
xchg
xlat
adc
and
or
sub
je
push
push
inc
push
xchg
pushf
fs
notb
outsl
push
cmp
dec
shrb
loop
lcall
or
mov
movsl
adcb
hlt
jg
add
enter
popf
jecxz
dec
push
inc
sub
in
lock
jne
inc
outsb
in
enter
rol
inc
sbb
fcomip
repnz
jne
ret
and
or
mov
nop
add
xchg
xchg
xchg
and
cmp
je
cmp
ret
sub
test
int3
and
add
xor
and
sbb
cli
lea
sub
and
lods
cmc
adc
inc
iret
sarl
or
dec
or
sub
jne
pop
pop
xlat
lods
or
outsl
pop
lea
popf
shrb
mov
outsl
pop
js
sbb
cmp
pop
jp
dec
dec
or
int3
and
sub
push
jne
sbb
mov
je
jmp
ljmp
ret
mov
std
mov
add
add
mov
xor
xor
sbb
push
cmp
jecxz
cmpsb
sarl
mov
or
addb
xlat
cwtl
bound
aas
pop
js
jno
shlb
or
xor
pop
or
das
daa
push
fnstcw
xor
scas
xor
scas
add
pop
pop
andl
push
or
addr16
or
and
jne
lahf
add
add
push
nop
and
rcl
inc
and
scas
je
rcrb
insb
rclb
shll
inc
fildl
lret
pop
xor
movsl
jmp
mov
inc
dec
jne
pop
movsb
pop
int3
sahf
repz
xlat
outsb
cwtl
adc
or
aaa
or
dec
push
xor
lock
cld
add
push
adc
inc
bound
mov
xor
add
pusha
push
or
js
sbb
sub
inc
adc
sbbb
jmp
out
mov
push
sub
pop
in
and
xlat
push
in
and
lahf
sub
or
jne
jg
xor
fsubs
ljmp
lock
pop
fiadds
jne
decl
aad
js
mov
jl
sbb
in
sub
mov
inc
xchg
pop
xor
mov
or
inc
xchg
dec
sbb
shrb
xor
punpckhdq
dec
push
stos
or
push
pop
and
ds
nop
jno
add
mov
pusha
xchg
jge
jo
jecxz
enter
outsl
sbb
jne
push
sbb
mov
jnp
cmp
scas
or
dec
lods
mov
adc
pop
call
cmpl
pop
aaa
jecxz
rcl
call
and
mov
ja
xor
dec
xor
or
mov
call
jne
push
add
js
fwait
rolb
fdivr
mov
icebp
xor
or
sbb
sbb
ret
xchg
push
xlat
add
out
dec
inc
decl
push
shl
lcall
push
inc
and
pop
dec
andl
sbb
in
int
dec
hlt
je
shlb
das
scas
mov
xorb
pop
pop
pop
xchg
shll
aad
daa
sub
push
enter
mov
test
pop
js
orb
sub
jnp
jb
push
cld
lret
jecxz
mov
push
rcrb
mov
mov
push
test
and
hlt
or
xlat
in
aam
and
adc
fmuls
add
syscall
js
cld
cmp
gs
sub
andb
sbb
enter
adcb
push
push
or
iret
lret
sbb
add
sub
adc
jne,pt
jbe
popf
js
aaa
pop
xlat
mov
push
inc
push
aad
sub
stc
push
inc
xchg
out
or
hlt
mov
addr16
stos
es
cmp
ret
inc
xchg
inc
inc
xor
adc
clc
popf
sub
mov
inc
stos
push
iret
clc
jecxz
sbb
mov
in
xor
xor
shll
les
xor
sub
xor
out
jbe
stos
clc
in
xor
xchg
hlt
mov
pusha
or
mov
test
add
dec
or
or
faddl
mov
hlt
test
mov
pop
mov
imul
sti
sbb
popa
hlt
jp
roll
mov
pop
inc
lahf
mov
aad
jle
lods
repnz
pop
sbb
inc
movsl
hlt
pop
cmpsl
pusha
mov
les
jmp
lea
push
cmp
enter
cmpb
and
inc
icebp
movsb
shll
lret
sub
movaps
xchg
dec
or
xor
push
adc
sbb
adc
cwtl
dec
jb
into
mov
cmp
adc
adc
ljmp
add
cld
add
cmpsl
jecxz
or
fcomps
movsb
sub
push
bound
popa
ds
das
aaa
pusha
andl
inc
outsl
out
nop
inc
repz
adc
push
adc
rorl
insb
or
inc
in
inc
mov
add
sub
add
int
enter
lcall
mov
inc
testl
xor
add
sub
add
pop
jmp
or
xor
bound
dec
add
dec
xor
sbb
or
or
push
test
and
mov
das
mov
addl
inc
or
sub
subb
pop
shll
mov
or
fisttpll
sti
js
sub
int
and
notl
sub
or
sub
add
mov
filds
pop
jb
add
add
sbb
dec
cld
repnz
mov
and
sbbl
cwtl
inc
adc
and
xchg
sub
fistpll
out
movsb
mov
pop
or
dec
mov
jl
push
inc
jo
mov
jbe
mov
movsb
fstl
je
rclb
lea
daa
sub
insb
xor
sub
sbb
jg
insb
mov
xlat
mov
xchg
and
add
mov
popa
sub
sbb
push
sbb
ja
imul
add
mov
inc
or
xchg
xchg
mov
out
je
push
xor
enter
xor
and
pusha
je
fsubrs
push
fcoml
mov
fistpll
ss
dec
std
mov
pop
inc
dec
jae
nop
pop
loopne
roll
sbb
js
xchg
outsl
fdivrs
mov
or
jl
aas
adc
mov
shr
adc
lock
in
or
out
inc
add
adcb
dec
lods
outsl
loope
fs
mov
push
and
aam
dec
sti
and
pop
insb
mov
dec
xor
cmp
xchg
pop
cmp
sub
cmp
roll
fidivs
mov
dec
lods
cmp
mov
xor
mov
cld
push
push
pusha
or
dec
ret
loopne
jae
push
xchg
movsb
jecxz
movsl
stc
inc
rolb
cmp
xor
sti
add
and
sbb
ja
insb
pusha
push
testb
in
out
and
rclb
add
mov
cmp
nop
mov
in
das
insb
cmp
or
sub
xor
push
inc
pop
neg
inc
mov
push
sbb
mov
es
jbe
cmp
inc
mov
rcrl
inc
jns
mov
nop
push
repnz
xor
or
ja
gs
call
xor
mov
test
cmp
mov
push
cwtl
cmp
fstpl
sarl
mov
push
rorb
xchg
sbbb
xchg
lret
dec
or
fdiv
jnp
bound
adc
and
mov
add
push
cmp
dec
ficompl
sbb
push
add
lcall
shlb
adc
mov
cmp
clc
jecxz
loope
sbb
dec
or
pop
adc
movsb
call
fdivrp
nop
int
mov
ret
push
push
push
pushf
push
pusha
dec
stos
cmp
ret
std
mov
incl
in
xor
adc
sbb
lods
dec
adc
push
sub
or
mov
inc
fs
lds
cmp
test
add
mov
daa
ss
icebp
test
shrl
shll
cmp
into
sub
xlat
lock
mov
test
or
sub
mov
cltd
add
lea
or
push
add
add
push
xchg
add
in
jb
popf
dec
adc
xchg
aad
dec
aam
pop
mov
jmp
ja
call
arpl
loopne
push
dec
sub
pop
or
int
add
xor
shll
cmp
jnp
push
je
lds
or
mov
aaa
mov
push
scas
lahf
dec
pop
inc
inc
push
cmpsl
cmp
cld
in
and
xchg
jge
sub
out
inc
adc
and
sbb
roll
stc
add
adc
or
shll
test
jmp
lea
mov
inc
rcll
jl
inc
mov
inc
mov
adc
je
sbb
and
ljmp
test
mov
mov
push
shr
sbb
bound
dec
mov
scas
or
je
mov
cmc
ljmp
jle
jmp
jo
test
les
inc
hlt
push
test
mov
xchg
std
xchg
inc
nop
cld
ret
jmp
aas
mov
cmp
je
inc
and
ret
out
call
aam
mov
and
sub
iret
xor
lock
aaa
pop
cmp
je
inc
sbb
popa
test
fs
ret
add
lcall
and
pop
inc
lret
repz
or
fsubrs
aam
pusha
xor
cmpsb
testb
jge
inc
and
fsubr
fidivrl
sub
sbb
mov
cs
cmp
xchg
push
dec
or
inc
lods
sbb
mov
in
mov
add
inc
adc
cwtl
cmpb
sub
stos
mov
insl
arpl
cwtl
out
insb
and
in
cmpsl
movsl
add
adc
add
add
enter
pop
enter
jge
or
sbb
popaw
jle
or
fsts
mov
imul
test
xchg
add
lock
in
cmp
sarb
dec
mov
adc
pop
adc
pop
rorb
mov
test
out
scas
add
fmull
or
pop
jmp
ja
mov
cs
test
mov
out
ret
xor
dec
add
ret
adc
jo
nop
dec
jnp
iret
or
ljmp
cmp
ljmp
imul
mov
std
pop
adc
mov
cmp
cmp
jle
add
inc
sti
pop
test
test
cmp
jl
jno
addb
push
dec
test
sbb
adc
xlat
xor
aaa
ss
or
adc
out
lock
nop
or
lahf
sbb
jns
sti
xor
aad
filds
jmp
adc
mov
mov
cmpb
add
mov
sahf
dec
fwait
sbb
push
inc
movsl
inc
dec
add
cmp
cmp
dec
dec
testl
sbb
xchg
mov
mov
add
sahf
cmp
sub
sub
adc
imul
jle
cmpl
dec
push
sub
sub
pop
or
insl
cmp
push
mov
or
dec
xchg
je
cmpl
push
dec
sbb
mov
push
sub
scas
mov
dec
cli
push
mov
xlat
in
sub
jo
lcall
push
popa
testl
adcl
xchg
sahf
loope
lea
cmp
notb
or
in
arpl
insb
add
das
cmp
stc
cmp
mov
add
int3
es
mov
icebp
pop
add
inc
inc
dec
jbe
dec
js
ds
popf
mov
sbb
inc
decl
imul
lret
movsl
add
sbb
cs
sti
insb
mov
or
sbb
fsubr
enter
add
mov
repz
mov
jnp
dec
push
in
mov
insb
leave
adc
imul
in
mov
je
aaa
rolb
pop
bswap
mov
int3
add
and
lods
out
mov
xor
add
dec
addb
adc
adc
mov
clc
jg
or
das
and
pop
pusha
dec
jmp
rorl
inc
or
add
inc
dec
xor
adc
pop
and
stos
rclb
aas
outsb
dec
pop
xchg
push
cmp
fstl
and
jge
jns
pop
aaa
movsl
and
lods
sbb
and
xorb
push
adc
stc
cmp
jno
push
dec
add
push
test
push
lret
dec
repnz
and
ret
psllq
or
inc
jecxz
and
xchg
pop
nop
add
push
inc
lahf
inc
cmc
push
in
or
ss
mov
cwtl
mov
ret
xlat
jmp
adc
and
inc
lods
in
add
xlat
or
adc
push
iret
mov
and
sahf
dec
add
cmp
xchg
xchg
jo
cmpsb
or
cmpsb
push
in
jns
enter
test
xor
fisttps
or
mov
idivb
ret
mov
and
cwtl
or
mov
sub
call
out
je
sub
inc
test
loop
popf
cmp
inc
or
cld
and
es
add
roll
cmp
and
sub
jb
mov
aad
aaa
movsb
daa
inc
cli
adc
mov
enter
loopne
movups
leave
je
stos
adc
btr
cmp
daa
adc
push
inc
ja
add
adc
addl
push
cmc
ja
pop
bt
sbb
add
sbb
push
fdivrs
and
rclb
inc
sbb
clc
out
mov
cmp
je
sbb
dec
add
es
cli
pop
ja
out
lcall
add
inc
sub
je
ret
adc
push
inc
cmp
jne
inc
xchg
outsb
and
push
jl
mov
arpl
push
push
sub
ret
ret
adc
pop
xchg
add
roll
je
sqrtps
stos
orb
sar
and
dec
jae
sbb
imul
nop
lock
inc
and
sbb
inc
adcl
jnp
dec
and
shr
dec
sub
xchg
outsl
bound
push
xchg
mov
and
xlat
das
ret
movnti
addb
pushf
xor
adc
adc
out
xchg
cmp
inc
xchg
es
and
or
pop
xor
je
jl
and
xchg
lods
outsl
fstps
or
pop
sbb
inc
push
nop
push
sub
adc
aaa
aas
adc
and
rorb
ljmp
push
add
out
and
adc
and
nop
xchg
push
xchg
mov
adc
push
push
mov
dec
pop
and
jmp
pop
push
and
gs
adc
push
sub
test
or
inc
xchg
cmp
pop
scas
or
or
adc
or
add
pop
mov
xor
inc
imul
push
popa
xor
jne
loopne
cwtl
xchg
push
mov
rclb
cmpl
out
ffreep
sbb
jne
xor
test
inc
clc
mov
mov
movsb
inc
outsl
ret
jmp
xor
xchg
jnp
cmp
add
in
cmpsb
out
stc
adc
mov
cmc
repz
inc
sbb
cmpsb
push
xor
scas
icebp
push
adcb
sbb
jmp
scas
dec
cmp
xor
xchg
mov
add
bound
push
jo
test
sbb
push
loop
mov
imul
in
ss
pop
dec
enter
sbb
pop
mov
into
mov
mov
loop
pop
addb
aas
cmp
pop
leave
dec
cmp
xchg
addb
sub
call
rorl
add
jo
mov
or
stos
xor
xchg
inc
push
cmp
cmp
mov
gs
adc
xchg
dec
mov
push
aam
dec
std
ss
lds
mov
ljmp
cwtl
cwtl
mov
dec
ja
push
rclb
fmuls
add
into
jg
fcompl
and
out
xchg
mov
cmp
pop
cmc
out
cmp
orl
shll
popa
xor
daa
fadd
push
add
stc
or
idivl
xor
dec
jle
pop
andl
mov
dec
jae
jae
adc
dec
sti
test
sbb
hlt
icebp
out
mov
adc
or
movsb
or
push
and
stos
cmpsb
iret
adc
add
pop
stos
in
add
adc
aaa
ss
push
or
push
add
fmul
bound
enter
mull
dec
or
adc
jmp
cmp
and
aas
dec
adc
sub
push
cs
sbb
dec
xor
clc
xor
inc
lods
inc
add
add
inc
lock
adcb
jae
sub
cmc
push
scas
adc
add
mov
pop
jo
xor
pusha
ljmp
inc
cmpsl
shlb
sub
iret
and
pop
xchg
mov
xchg
add
rorb
test
hlt
sti
js
and
dec
jge
orb
push
inc
dec
inc
rclb
inc
sub
or
out
and
pop
jne
sub
sbb
les
out
cmp
cmp
xchg
sarb
add
jo
test
popa
inc
and
fldt
inc
daa
lret
push
adc
add
sub
flds
ja
push
add
add
pop
and
mov
push
jbe
mov
xor
adc
or
add
ljmp
jnp
mov
lret
push
mov
add
lods
sarb
jp
mov
cmp
imul
cmpsl
or
or
addb
rcrl
cmpsl
loopew
add
pop
movsl
insl
jmp
jecxz
push
jg
arpl
sbbl
sub
sub
rorb
xor
push
pop
aam
pop
mov
loopne
inc
scas
pop
iret
mov
outsb
xor
cmp
lock
bound
mov
xchg
test
or
adc
or
xchg
or
repnz
or
sub
dec
push
mov
pop
push
sarl
loop
adc
je
mov
loop
orb
nop
cltd
add
aaa
nop
imul
dec
and
jno
movl
mov
iret
jne
out
sti
mov
cmp
adcb
xor
in
cmpsb
xor
inc
push
aas
pop
test
inc
mov
push
popf
sbb
jo
bound
or
inc
cmp
movsl
sub
jne
mov
cmp
push
and
cmp
test
mov
xchg
add
out
mov
adc
mov
in
push
icebp
or
or
cmp
lret
inc
sbb
clc
fsts
push
cmp
shlb
or
nop
dec
stos
es
pop
add
push
fs
andb
jo
gs
pop
dec
xchg
push
adc
test
cltd
shll
mov
add
cmpsl
mov
adc
sti
pop
push
cmpsl
dec
inc
sbb
push
orb
inc
sbb
scas
mov
sub
sbb
sbb
adc
pop
xor
in
or
out
inc
movsl
insb
push
mov
xlat
mov
ffreep
data16
add
mov
and
notl
jo
sub
add
lcall
insl
inc
frstor
or
rorl
xchg
insl
std
jmp
and
add
js
lahf
ret
and
jno
sub
adc
lock
xchg
add
sub
mov
sub
jge
bound
dec
add
das
push
js
mov
and
xlat
sbb
in
mov
int
rcll
jb
jmp
dec
cmpsl
cs
repz
xor
cld
clc
xchg
stos
daa
lock
push
in
push
in
pop
ffree
inc
dec
pop
or
cwtl
and
cli
dec
test
insl
and
test
nop
xchg
and
nop
adc
sbb
or
push
push
mov
or
sub
cld
pop
and
and
pop
xor
dec
pop
mov
sub
and
int3
mov
out
popa
sbb
pop
in
sub
add
bound
and
or
xlat
ret
cmp
inc
mov
xchg
scas
or
aam
mov
mov
aas
and
mov
aam
dec
inc
pop
adc
and
push
enter
add
mov
rcrb
inc
or
xor
adc
xchg
pop
js
pusha
cmp
push
and
mov
push
inc
add
or
data16
sub
adc
jnp
in
sti
mov
cmp
es
js
jl
mov
addb
int3
jmp
mov
adc
jg
dec
lea
das
push
fsubr
cmpl
aaa
cltd
mov
cld
enter
les
mov
pop
ret
sub
dec
insb
sbb
push
mov
movsb
push
in
sti
ficompl
test
and
outsb
mov
test
movsb
mov
imul
movsb
jl
pop
fnsave
xor
mov
mov
inc
subb
sub
hlt
push
inc
inc
lea
dec
dec
inc
stc
dec
inc
mov
movsl
add
fists
pop
les
movsb
loopne
mov
xchg
inc
sti
xor
subb
sbb
pushl
dec
movsb
test
push
pushl
adc
fs
mov
insl
xor
adc
push
or
loopne
and
stos
loop
test
mov
sbb
rcll
push
pop
adc
or
add
dec
cwtl
jp
and
push
pop
cmp
mov
and
or
nop
cmc
sbb
pushf
xorb
push
shrb
pop
pop
dec
xor
ljmp
sbb
int
push
rcrb
scas
mov
mov
dec
stc
mov
fcomp
dec
arpl
sub
vcvtpd2psx
hlt
push
scas
mov
xchg
dec
pop
ljmp
ret
inc
aam
dec
xchg
mov
cmp
faddl
adc
mov
pop
dec
push
leave
add
add
sbb
mov
leave
inc
dec
call
jae
outsb
loopne
insb
movsl
sbb
stos
adc
dec
push
popa
nop
fiadds
add
jge
pop
mov
dec
clc
loopne
push
add
pushf
insl
clc
xchg
adc
nop
cli
xchg
faddl
dec
push
imul
push
pop
pop
and
pop
mov
sbb
xor
lea
lea
adc
inc
or
aas
jl
add
cld
aad
xchg
xchg
inc
mov
adcl
push
add
jns
push
aaa
sub
clc
movsb
das
and
hlt
inc
xor
sbb
or
sub
popf
cmp
mov
pop
ja
inc
repnz
cmpb
sub
mov
pop
ret
test
subb
mov
sub
js
and
in
test
mov
fnstenv
les
loop
dec
subb
push
inc
sub
out
in
enter
push
adc
test
push
mov
xor
out
das
pop
pop
cmp
ds
push
or
mov
and
lret
and
or
mov
xor
lods
mov
cwtl
pop
test
cmp
cmp
lods
push
pop
push
movsb
and
aaa
je
mov
arpl
mov
push
bound
fsts
add
pop
add
push
ret
sbb
lock
and
dec
sub
sub
push
cmpsl
inc
test
ret
sub
or
out
adc
dec
or
mov
inc
sub
ret
push
repz
pop
sbb
fs
adc
inc
push
and
ficomps
adc
rorb
nop
arpl
xlat
dec
stc
add
cmp
xor
cmp
je
or
popf
xchg
ljmp
xor
and
jns
fwait
data16
fs
inc
mov
stos
pop
enter
xchg
cmpsb
sub
jmp
and
adc
pop
xlat
pop
dec
faddl
daa
push
push
popf
sub
pusha
loope
inc
in
movsl
test
jmp
xchg
or
push
daa
and
loope
fimuls
pusha
int
repnz
dec
inc
scas
pusha
pop
xor
push
loop
xchg
adcb
rolb
aas
push
stos
inc
pop
popa
push
rorl
push
popa
xor
mov
jg
sbbl
ret
fbld
add
cmp
std
push
add
cmpb
sub
push
and
stos
nop
mov
test
pop
aaa
stc
hlt
add
ds
push
addr16
test
scas
out
hlt
les
cmp
xor
aaa
jb
pop
femms
repnz
pop
jle
push
hlt
test
imul
shlb
cmp
dec
das
rclb
jo
mov
xor
xlat
add
movsl
dec
jno
mov
adc
arpl
xor
and
inc
pop
cwtl
add
fs
or
add
fnstenv
shlb
leave
or
push
add
lea
xchg
loop
fs
add
and
ret
jmp
or
icebp
hlt
sub
aaa
lahf
cmp
or
add
or
add
dec
ljmp
jl
ds
jge
pop
repnz
in
cli
and
jne
insl
mov
clc
jmp
das
push
lock
sti
jne
sbb
pop
pop
rolb
mov
inc
andb
pop
push
lods
sub
fistpl
xor
ret
sbb
repnz
fcmovnu
lock
movsb
dec
pop
movb
mov
test
cmp
add
xchg
dec
add
and
dec
inc
in
sahf
add
ds
and
or
adc
pop
xchg
outsb
ljmp
in
sarb
cmc
inc
mov
test
sbbb
push
loopne
mov
aad
gs
xchg
push
xor
lea
lcall
sub
push
cmpsb
ret
mov
popa
sbb
ljmp
push
adc
add
dec
inc
call
mov
inc
clc
jne
sbb
pop
je
in
add
outsb
lods
add
cmpl
lret
fisttpl
adc
je
cmp
xor
mov
or
xor
add
mov
andl
sbb
sub
jnp
fnstenv
popl
jo
cmpsb
or
loope
shrl
movb
or
addr16
mov
insl
dec
mov
fwait
movsl
cs
rolb
cmp
mov
mov
or
xor
mov
iret
xchg
lret
add
pop
or
loopne
cld
sub
call
sub
pushf
sbb
lahf
movsl
inc
or
shlb
dec
pop
loop
adc
hlt
push
push
sbb
sbb
in
pop
in
jne
cmp
push
mov
xchg
popa
pop
push
add
dec
cmpsb
in
add
int3
subb
jl,pt
addr16
push
push
fimull
lea
lret
sub
inc
out
sbb
or
sbb
jle
pop
cmp
cmp
ss
orb
sbb
push
adc
dec
aad
scas
add
out
and
jo
out
sbb
xchg
inc
cmp
add
sbb
inc
movsl
xor
and
push
mov
mov
daa
jmp
xchg
clc
clc
jle
push
pop
pusha
enter
adc
sbb
dec
cltd
out
sub
xchg
enter
sub
and
sub
mov
or
je
mov
push
jecxz
adc
rorb
adc
fsubrs
pop
test
imul
nop
lock
data16
or
and
mov
or
add
or
inc
or
xchg
jno
pop
and
lods
cmc
lods
and
mov
push
scas
adc
lcall
sar
ja
test
lds
add
cmovs
push
push
loopne
push
push
xor
mov
add
adc
lea
inc
lock
inc
mov
add
dec
jne
out
aas
adc
cmp
dec
adc
js
shll
clc
add
loopne
imul
and
aad
mov
icebp
sub
push
add
mov
xor
xchg
enter
inc
test
leave
dec
cmp
cmp
fwait
cmpsl
or
pop
dec
mov
add
jmp
das
jae
pushf
hlt
and
add
sbb
nop
aam
es
add
pop
pop
add
or
add
inc
inc
hlt
scas
jb
lret
ja
pop
out
dec
xchg
mov
inc
xchg
sti
xchg
js
pop
and
or
aaa
add
cmp
clc
cmp
shl
add
adc
inc
ret
push
or
cmp
dec
dec
dec
inc
les
inc
aas
incl
movsl
jo
xchg
outsb
xor
movsl
push
lds
aas
xchg
xchg
adc
or
xor
and
xor
test
lods
aas
inc
mov
xor
pop
or
and
xor
jae
and
loopne
call
sbb
mov
adc
or
or
inc
mov
adcl
or
outsb
and
dec
iret
and
inc
and
fcomps
mov
or
mov
and
sbb
sub
in
gs
loope
inc
in
adc
and
dec
mov
inc
pop
xor
mov
or
mov
jmp
adc
jmp
cmp
mov
stos
or
adc
lea
jnp
cmpb
add
inc
add
add
xchg
jle
loop
adc
sarb
xorb
inc
jb
xchg
sbb
lods
daa
xchg
xchg
ljmp
ds
lret
xor
imul
imul
sbb
add
mov
dec
xchg
cmpsl
pop
daa
push
mov
stos
aaa
sbb
mov
mov
sbb
ret
cmpsb
mov
mov
fistpll
mov
out
mov
test
popa
imul
mov
shlb
cwtl
call
mov
repnz
sub
mov
ret
mov
jp
in
add
mov
fdivr
sbbb
sahf
adc
fnstcw
mov
push
mov
jns
or
push
inc
andl
cmp
and
push
lods
inc
sub
mov
sub
movsl
jle
push
in
into
jnp
cmc
hlt
dec
lahf
loopne
add
test
xchg
sbb
pop
dec
dec
dec
mov
jo
sbb
jg
xchg
xchg
in
jp
subb
sub
je
mov
lea
xchg
dec
mov
cld
jo
aam
rorb
dec
sub
shll
nop
in
ss
or
or
inc
jecxz
adc
xor
mov
enter
movsb
pop
out
loop
dec
in
sub
add
ja
xor
outsl
shl
rorb
cmp
pop
or
outsl
imul
xchg
ds
sub
in
or
popf
fnstcw
add
or
outsl
ret
pop
iret
fdivrs
push
cmp
das
js
dec
pop
adc
dec
mov
adc
sar
sub
lds
jmp
pop
mov
mov
sbb
fsubrs
loop
adc
daa
sahf
fwait
cld
pop
add
pop
jbe
das
mov
jmp
or
cmpl
daa
add
jge
mov
add
add
jbe
and
pop
popa
xchg
mov
push
rol
add
push
hlt
or
sub
jbe
stos
fisubrl
add
enter
pop
sbb
xor
push
mov
push
cmpsb
ljmp
in
adc
pop
loopne
push
mov
push
in
or
adc
add
cmpsl
data16
jmp
insb
jne
sbb
gs
pop
lods
mov
sub
xor
push
bound
push
scas
adc
fs
out
roll
jmp
aaa
clc
mov
push
shl
cltd
adc
rclb
or
jmp
xchg
sub
jle
push
sub
das
add
loope
xor
mov
jg
mov
push
sarb
jne
and
int3
add
insb
jg
jge
pop
jb
or
adc
pop
or
xor
mov
sbb
sbb
mov
loope
rcrb
adc
sbb
push
lea
add
push
jae
lahf
loope
call
loopne
js
xor
or
or
add
dec
jmp
or
dec
addr16
mov
add
sub
test
in
push
mov
cmp
mov
data16
clc
fdivs
inc
xorb
test
clc
sarb
jns
push
pop
mov
pushf
pop
adc
and
fs
ds
aaa
mov
and
rorl
adc
dec
xchg
shll
sbb
loopne
sbb
jnp
inc
cwtl
dec
and
insb
icebp
add
lods
stos
cmpsl
pop
pop
les
sub
ret
push
in
incb
xchg
out
popf
adc
lock
or
aaa
out
or
fcoml
sbb
mov
or
add
xor
sti
je
add
shlb
mov
jl
xor
xchg
in
pop
test
and
int
aas
adc
add
cli
jle
inc
add
jo
cltd
mov
rcl
icebp
mov
lret
jno
addr16
filds
pusha
testl
cmpsl
mov
in
addr16
pop
mov
push
cld
test
or
push
or
or
lock
faddl
test
cmp
push
add
cli
or
cld
add
jge
jns
dec
add
jne
lock
and
lret
decl
pop
inc
push
or
jnp
sti
add
inc
add
add
add
mov
pop
idiv
das
or
lea
adc
mov
xor
push
mov
daa
enter
push
loopne
mov
test
movsl
or
fcmovu
clc
outsl
inc
ljmp
sub
inc
dec
mov
pop
sbb
shlb
sarb
ja
mov
sbb
inc
outsb
jbe
mov
popf
mulb
fs
cmp
div
pusha
cmpsl
bound
dec
jmp
out
sub
lea
in
pop
mov
loopne
cmp
in
push
ss
pmaxub
jne
popf
js
lods
pop
insb
jne
adc
movsl
add
inc
aam
jge
popa
imul
sbb
loope
incl
jle
roll
sub
cmpsb
loope
pop
push
push
adc
smsw
pop
push
ja
mov
adc
data16
add
loope
sbb
xor
pop
loopne
sbb
mov
add
push
push
subb
push
mov
mov
pushf
pop
push
orl
int3
aam
add
in
icebp
mov
mov
pop
pop
adc
in
and
loopne
dec
fistl
dec
pop
xlat
test
inc
mov
jle
jge
jge
and
mov
out
rolb
push
cmp
push
and
xor
outsb
lock
add
pop
call
jno
icebp
stc
popa
push
fld
or
aas
andb
clc
and
add
and
inc
mov
inc
adc
adc
rorb
enter
xor
add
repnz
test
add
nop
enter
loope
in
mov
dec
mov
mov
pop
enter
cmp
enter
test
inc
inc
pop
pop
shrb
dec
je
mov
sub
add
push
fsubrl
add
and
rorl
or
cli
add
fildl
dec
or
inc
test
call
sbb
clc
or
and
and
and
enter
loopne
gs
jae
cmpsb
inc
arpl
insl
insb
movsl
add
sub
data16
or
adc
push
or
mov
call
ret
movb
and
mov
xchg
push
sbb
pop
and
inc
cmpsl
jno
sbb
loopne
pop
jb
pop
adc
call
adc
sub
dec
outsl
js
push
add
lods
adc
stc
cmp
cmp
aaa
xor
mov
xchg
pop
or
insl
mov
aam
rclb
cwtl
push
stos
xorb
adc
mov
movsl
mov
idivl
sub
stos
add
jno
sub
fidivrl
lds
dec
adc
push
test
xchg
mov
push
or
loopne
adc
mov
push
jmp
lret
rorb
sub
add
loope
inc
imul
movsl
rorb
les
add
cmpsl
ss
or
clc
enter
ljmp
cmp
xor
or
sbb
roll
cmpsb
jle
or
jle
xchg
subb
dec
lds
mov
or
sbb
inc
bound
inc
mov
int3
sub
push
adc
lods
inc
pop
xchg
inc
pusha
inc
adc
push
push
jle
xchg
lods
mov
add
clc
inc
roll
call
je
enter
outsb
lea
xor
pop
xchg
loop
mov
movsl
mov
mov
add
jl
in
xchg
and
adc
add
pop
lock
sbb
test
mov
and
imul
pop
inc
push
xchg
add
jg
jb
or
mov
jecxz,pn
jns
xor
xlat
mov
repz
rorb
pop
and
adc
pop
je
pop
push
push
stc
or
mov
sub
daa
loopne
sbb
mov
fdivs
cmp
pop
adc
or
sti
and
mov
jg
les
or
fstps
adc
fists
mov
pop
in
or
test
dec
add
jbe
fidivl
xchg
inc
xlat
add
mov
push
push
bound
das
stos
xchg
je
sub
cmpsl
dec
push
or
add
push
add
dec
or
dec
mov
dec
pop
or
fsubrl
outsl
sub
mov
xchg
roll
mov
mov
add
imul
mov
mov
outsb
fwait
sbb
lods
push
dec
test
pop
sub
mov
pop
cs
and
cmp
cs
mov
and
add
pop
fwait
xor
rclb
or
dec
or
call
aad
xor
mov
jno
gs
mov
pop
xor
dec
test
pop
or
add
fcmovnb
push
add
or
mov
xchg
mov
cli
dec
mov
push
adc
lods
lods
cmp
ret
sub
xchg
nop
mov
sbb
pop
mov
cmp
aam
sub
pop
leave
add
xchg
adc
or
lea
shlb
lea
or
xchg
bound
jmp
aaa
inc
fcoms
mov
mov
lds
movsl
adc
into
pop
mov
mov
jge
and
daa
cmp
dec
in
inc
loop
mov
mov
ja
add
and
nop
mov
push
addr16
pop
sbb
and
add
mov
das
sti
mov
push
mov
adc
xchg
mov
add
jne
mov
add
sahf
mov
sub
mov
pop
pop
push
sbb
mov
sub
out
daa
shll
xchg
jb
mov
leave
aad
inc
clc
mov
inc
fwait
xchg
out
adc
loopne
mov
rorl
roll
push
inc
insb
and
hlt
adc
sub
imul
or
mov
hlt
mov
xchg
inc
neg
es
sbb
mov
cld
addl
and
xchg
cmp
mov
pop
mov
dec
adc
add
inc
call
jmp
sarl
and
sbb
inc
and
lods
loope,pt
stos
outsl
test
outsl
xchg
and
cmp
stos
mov
loopne
sbbl
aas
mov
and
adcl
mov
lcall
ljmp
xor
popa
adc
push
stos
jge
pop
and
adc
lds
xor
cs
inc
mov
adc
loopne
ret
ret
add
adc
pusha
add
cmp
xor
inc
jmp
sbb
pop
shr
or
xchg
jae
or
and
jo
add
cmp
lea
push
lea
mov
rcrb
roll
mov
andw
ss
inc
jb
xchg
add
sarl
jne
inc
data16
inc
mov
loopne
xor
fwait
sbb
dec
mov
xchg
gs
pop
jp
lea
xor
imul
xor
sbb
add
enter
push
roll
testl
or
movsl
pusha
cmp
adcl
mov
push
jg
in
test
jg
push
loop
jne
dec
imul
pop
dec
mov
pop
or
cmp
xchg
sub
xchg
cmpsl
add
mov
mov
js
dec
inc
sub
push
xchg
in
xor
mov
fildll
inc
inc
add
hlt
loopne
and
sbb
push
ret
xor
out
dec
dec
movsb
sbbl
movsl
push
xchg
lods
xchg
xchg
or
test
dec
and
sbb
adc
dec
js
and
add
loopne
push
or
cmpl
ja
xchg
cmpl
mov
ret
inc
mov
adc
xchg
movsb
pushf
sbb
hlt
dec
inc
sbb
orb
xchg
or
cmp
mov
imul
push
sbb
aaa
jne
adc
scas
push
lea
push
nop
sbb
xchg
add
ret
jno
rcrb
push
inc
decl
daa
test
xor
add
mov
xor
push
mov
mov
push
push
and
fs
sbb
ss
outsl
sbb
xchg
sbbb
into
cs
xchg
cmp
dec
enter
pop
push
dec
inc
notl
push
push
xchg
and
mov
push
xor
adc
in
imul
sbb
push
sbb
cmp
sbb
pop
cltd
in
cli
cmp
add
adc
inc
mov
ret
pop
inc
shlb
adc
push
repz
lret
sub
clc
leave
lock
add
lret
pop
xchg
push
sub
cmp
push
add
push
push
or
addl
ret
jne
insl
arpl
test
rcl
xchg
xchg
shlb
dec
sbb
enter
mov
xor
pusha
loope
movsb
xchg
push
push
insb
negb
clc
lcall
loope
test
xlat
cmp
and
mov
lahf
sbb
ss
js
pushf
mov
mov
inc
jl
js
sahf
clc
mov
xor
sub
push
ret
icebp
rcrb
add
add
xor
add
inc
adc
inc
call
xchg
inc
cmp
sbb
or
xor
dec
push
outsb
xor
les
or
jbe
xlat
neg
fs
or
in
loop
mov
inc
shrb
or
xor
mov
rcrb
sbb
and
daa
popa
je
ja
inc
cmp
inc
push
or
and
mov
sahf
and
sub
mov
xchg
mov
in
negl
es
jae
cmp
jo
jb
jp
nop
cmp
inc
jne
addb
addr16
inc
movsl
push
shll
jo
sbb
push
jecxz
shll
sub
iret
xchg
ret
aaa
sub
fisubs
mov
push
pushf
push
test
mov
dec
jbe
adc
mov
inc
js
lods
scas
pusha
sbb
fldenv
fsts
lret
pushw
or
add
cmp
js
push
sbb
cld
xchg
cli
xchg
sub
pop
or
jne
pop
sbb
lock
loopne
aam
nop
mov
mov
clc
pop
pop
pop
or
ja
outsl
cld
ja
pop
dec
nop
ret
ljmp
movsb
or
cwtl
xor
xchg
add
push
mov
jle
rcrb
insb
sbb
jno
mov
xchg
mov
push
xchg
ret
jge
add
mov
or
movsl
stos
and
add
int
jne
adc
testb
inc
popf
lock
sub
jae
ja
jg
xchg
xchg
std
mov
jmp
xchg
adcb
in
cmp
or
jo
inc
sub
xor
adc
cmp
jne
push
or
adc
jmp
push
push
std
cmpsl
fisubs
sbb
sub
dec
add
adc
and
xor
aad
outsl
test
mov
or
inc
in
je
mov
inc
push
sti
or
xor
add
cmp
movsl
push
cwtl
cmpsl
lahf
imul
mov
sbb
mov
add
inc
cmpb
cs
sbb
or
int
push
pushf
fs
xor
not
push
pushf
mov
and
aaa
int3
ret
sub
lock
or
dec
shl
xor
cmpl
pop
cmp
fdivrs
sbb
xchg
adc
popf
pop
js
pop
xchg
stos
lock
adc
cmc
sub
int
add
or
es
rcll
imul
daa
enter
test
sub
sbb
clc
stos
das
jnp
xchg
jo
imul
daa
mov
jo
jne
into
fcoms
add
xor
stos
dec
rcr
clc
iret
push
pop
add
mov
add
jge
movsb
mov
dec
sub
and
add
dec
mov
mov
in
fidivrl
mov
int3
adc
clc
addr16
les
pop
fisttpl
push
sub
mov
fstpl
push
sbb
jg
roll
xor
je
pop
hlt
cltd
or
shl
cmp
in
or
adc
push
dec
repnz
enter
add
xor
pushf
mov
pop
sbb
nop/reserved
xor
inc
sbb
test
fsub
and
rclb
mov
cmpsb
mov
inc
imul
xorb
hlt
test
inc
sub
fcoml
sbb
fadds
and
adc
testb
or
fisttpll
clc
mov
clc
pop
and
jmp
jno
sbb
jno
mov
outsb
ja
pop
push
mov
push
add
pop
lahf
ret
xor
repnz
push
sbb
insb
mov
aam
add
inc
sbb
sbb
add
adc
pusha
sbb
inc
jnp
mov
xchg
adc
and
push
stc
jge
push
inc
sbb
fldt
xor
or
inc
mov
lahf
pop
pop
aaa
adc
adc
jne
cmpsb
aas
and
or
dec
sarb
dec
dec
pop
aad
sub
xchg
sarb
fdivrs
cmp
add
sbb
push
inc
add
ret
les
dec
out
xor
fstl
push
dec
mov
mov
xor
and
cld
sub
pop
cmp
out
test
jmp
cmp
cmp
ljmp
dec
or
adc
shlb
aaa
sub
lahf
cmp
push
sub
push
mov
sbb
adc
fbld
xchg
stos
sub
sub
hlt
cli
add
nop
sub
ljmp
ss
adc
je
or
mov
test
cmp
xchg
mov
or
jno
sbb
or
mov
ffreep
sahf
or
out
sbb
add
add
sbb
add
flds
adc
cmp
sbb
pusha
and
push
sbb
scas
adc
xor
fistpll
mov
cmp
xchg
shll
jo
add
mov
add
jo
sub
add
std
in
hlt
dec
jo
mull
push
dec
idivl
daa
ljmp
cmp
or
fmull
lahf
sbb
addr16
adc
mov
out
out
pusha
and
jecxz
nop
mov
mov
cltd
mov
shr
daa
inc
add
test
mov
lods
xchg
sub
jnp
push
les
inc
stc
push
filds
bnd
mov
mov
add
and
aaa
out
enter
sahf
cmp
sub
sbb
jecxz
cmc
bswap
cltd
ds
popa
jno
scas
add
ret
orb
pop
mov
xchg
mov
mov
mov
ret
sbb
testb
add
pop
out
adcl
clc
test
sbb
addl
adc
cmpsl
sub
inc
ret
popa
mov
pop
cld
add
add
out
mov
sti
imul
adc
sub
add
cmp
mov
movsl
outsb
out
popa
sbb
pop
ret
inc
shlb
js
jno
divl
int
sbb
push
push
xchg
cmpsb
addl
mov
cmp
cwtl
pop
sarl
mov
mov
inc
or
jbe
mov
orl
sub
imul
mov
add
sbb
loope
loopne
inc
adc
add
rcrb
in
add
out
cmpl
inc
pop
cwtl
mov
mov
mov
pop
xchg
and
add
shlb
inc
in
js
add
fs
addl
ja
xor
outsb
addl
jmp
jnp
sbb
aas
sbb
or
xchg
pop
mov
dec
cmp
sbbl
outsl
insl
dec
aam
xchg
adc
in
aam
clc
ljmp
aaa
mov
push
jmp
jmp
add
mov
lret
inc
xor
mov
xorl
push
or
adc
bound
jnp
bound
sarb
xor
sarb
movl
lock
test
scas
xor
jno
enter
pop
mov
pop
outsl
jbe
lods
js
aas
rcrb
pop
pop
and
aad
or
jb
dec
pop
mov
adc
clc
jge
nop
pop
pop
call
out
aam
test
sub
jns
rolb
push
inc
cmp
incl
sub
stos
xchg
add
outsl
or
adc
movsl
or
sub
sbb
adc
adc
dec
jbe
mov
ds
cmp
add
insb
int
sbb
jnp
movsl
adc
jp
ficompl
sarl
push
adc
outsl
idivb
daa
push
push
subb
mov
lret
add
push
push
or
mov
xor
fwait
orb
xor
xor
xorb
and
in
fld
test
jns
ret
cltd
mov
add
jmp
lcall
mov
lods
loopne
pop
xchg
outsl
sub
mov
jle
nop
aaa
dec
fadds
shr
mov
adc
aam
insb
arpl
aam
lea
mov
lock
or
aas
sbb
jecxz
dec
vxorps
xor
add
jmp
push
cmp
int3
xchg
and
ret
cmp
rcrl
mov
movsl
scas
pop
leave
and
enter
add
sbb
loopne
dec
je
mov
es
daa
push
iret
pusha
pop
gs
imul
aas
cwtl
xchg
xchg
mov
pop
test
xchg
mov
scas
shrb
movsl
fcmovnu
pop
loopne
popa
or
mov
jmp
dec
inc
shll
inc
cld
jge
jne
push
or
aas
push
lods
pop
cmpsl
mov
mov
cmpsl
and
mov
aam
arpl
pop
loopne
jle
cmp
subb
and
and
xchg
pop
scas
push
bswap
lock
sub
add
das
insl
add
ja
int3
cwtl
push
mov
sarb
pop
sub
cmp
jne
xchg
or
mov
sbbl
pusha
rcl
sbb
mov
hlt
ja
xorb
sbb
or
inc
add
negb
pop
fldcw
push
enter
orb
add
cmp
insl
sbb
fdivrl
xor
adc
jbe
push
pop
or
adc
nop
lods
dec
das
and
daa
pop
test
fwait
jbe
adc
push
inc
mov
das
and
scas
add
and
andb
sbb
mov
mov
xor
test
sbb
or
in
mov
outsl
fistps
adc
xchg
push
adc
jmp
add
shrl
adc
aam
cld
mov
mov
dec
nop
or
adc
jle
das
nop
inc
jge
inc
hlt
gs
arpl
nop
cld
sbb
scas
sarb
lods
push
xchg
arpl
je
leave
sub
jo
icebp
and
fldl
add
repnz
push
push
jmp
lcall
ret
test
out
inc
fistl
lcall
rorl
push
lds
and
and
fwait
call
popa
scas
ljmp
mov
mov
sbb
test
or
addb
lcall
or
std
sbb
adc
cmpb
bts
jmp
xchg
movsl
cmp
xor
xor
pop
push
ja
inc
cmp
js
push
xchg
add
sbb
and
dec
and
push
cmc
out
imul
sar
popf
in
push
dec
jo
jns
sti
lret
or
push
lcall
fwait
cmp
shrb
out
pop
and
ljmp
leave
int
scas
adc
add
push
add
lret
adc
inc
dec
pusha
push
jae
pusha
mov
je
push
adc
cs
adcl
cmp
or
sbb
mov
lods
push
aam
xchg
hlt
mov
or
addr16
dec
rcll
mov
add
sbb
subb
add
and
push
pop
daa
fidivl
jb
cmpsl
dec
clc
or
lock
and
and
popa
mov
stos
dec
test
mov
roll
notb
push
inc
mov
lods
mov
lock
or
fisubs
mov
mov
jne
and
adc
adc
add
inc
add
add
imul
rclb
test
lds
sbb
imul
subl
aas
sarl
les
std
stos
test
mov
pop
push
in
leave
and
mov
adc
fidivrs
in
pop
mov
out
in
push
clc
push
or
daa
iret
jnp
push
cs
out
cmp
in
push
popa
imul
xchg
repz
repz
add
out
mov
jmp
pop
pop
and
orl
and
jb
or
xchg
sub
leave
in
or
popf
rol
xor
jmp
push
adc
gs
jmp
mov
sbb
mov
xchg
sbb
cmp
rorl
pop
add
cmp
pusha
sub
add
fld
lock
lret
and
xchg
shl
call
hlt
loopne
aam
sbb
loopne
lods
mov
getsec
adc
mov
mov
incl
mull
shl
stos
mov
imul
insl
adc
dec
mov
and
add
nop
push
xchg
lock
add
shlb
and
imul
mov
sub
inc
loope
bnd
fcomps
in
mov
jne
outsb
scas
test
stos
jg
inc
push
xchg
clc
movsl
cwtl
test
sbb
imul
sbb
arpl
mov
xor
gs
jecxz
pop
repnz
push
jo
xchg
divl
scas
lret
in
mov
in
movb
aas
or
popf
mov
push
in
mov
sbb
jg
cmpsl
mov
mov
xchg
fiadds
inc
mov
inc
movsl
add
mov
add
stc
push
cmp
ss
sub
xor
es
add
daa
add
jbe
sahf
insl
mov
nop
dec
sub
mov
mov
dec
add
mov
pop
mov
xor
daa
add
pop
inc
leave
loope
movsl
mov
push
jmp
and
jb
mov
arpl
rorl
movsb
sub
pop
dec
cmp
hlt
dec
pop
es
adc
cs
push
jmp
ret
jmp
leave
aaa
and
cmp
and
jecxz
mov
dec
dec
pop
test
je
pop
loop
push
or
lret
add
les
push
lea
out
xchg
push
pop
cmp
loopne
and
pop
sub
or
data16
fidivrl
or
mov
pop
rcl
push
push
jg
and
pop
lahf
or
mov
xor
adc
addr16
dec
loop
out
add
push
inc
repz
add
test
jnp
jmp
sbb
ljmp
and
push
push
sub
pop
scas
cmp
insb
push
aam
cmp
outsb
push
mov
push
pop
mov
sbb
rol
jae
mov
adc
loop
and
or
jmp
push
fisubrl
adcl
pop
sbb
imul
adc
in
xor
sub
pop
cmp
call
lret
mov
loope
andl
inc
addl
rcl
inc
in
jge
inc
jbe
mov
es
xor
enter
into
leave
mov
lock
aam
aaa
sub
add
push
jbe
mov
sahf
mov
outsb
inc
filds
push
adc
push
mov
mov
add
cmp
xor
dec
fmul
call
pusha
adc
adc
scas
mov
sub
aas
sbb
movsl
rorb
andl
mov
movsl
cld
mov
pop
pop
loop
push
icebp
rcl
in
fcmovne
jo
or
push
adc
mov
mov
pop
cs
pop
push
jo
into
leave
repz
insl
add
sub
adc
cmp
mov
pop
out
test
movsbl
push
cs
sub
and
subb
int3
mov
out
daa
nop
dec
add
nop
xchg
sub
sbb
jo
or
mov
adc
imull
shr
notl
lea
imul
jmp
push
lret
lods
push
pop
sbb
subb
add
movsl
mov
add
xor
sbb
int
popa
icebp
stos
xchg
into
loopne
mov
add
je
add
aaa
lahf
sub
loope
fsubrs
out
lcall
adc
out
pop
dec
sbb
stos
mov
add
loopne
ljmp
sub
or
add
cmp
push
or
shl
rolb
mov
inc
sbb
adc
push
ljmp
lods
xlat
lds
jg
jp
lods
or
cmp
pop
cmp
ret
dec
shrb
sub
rclb
mov
sbb
negl
dec
or
dec
clc
xchg
sbb
movsb
jg
sub
push
testb
dec
faddl
pop
adcb
pop
and
mov
ret
mov
loopne
lds
shlb
inc
daa
clc
sti
insl
adc
cld
leave
clc
pop
mov
ret
sub
sbb
mov
adc
or
adc
and
jnp
dec
mov
in
mov
jbe
mov
les
enter
ret
lahf
jns
sub
pinsrw
push
les
sbb
pop
orb
sbb
jmp
stos
mov
mov
cmpsb
xor
mov
test
sbb
jecxz
add
or
xor
mov
or
call
fadd
or
daa
add
or
mov
xchg
and
inc
in
sub
jno
xor
mov
push
aad
add
rcrb
sbb
daa
aas
nopl
icebp
popa
add
mov
je
ds
xchg
adc
mov
pop
stc
cmp
add
roll
push
aam
xchg
and
mov
jnp
shrb
jecxz
push
pop
mov
xchg
mov
and
ja
out
jo
push
ja
pop
push
mov
hlt
and
jbe
mov
xlat
rol
sbb
or
loopne
icebp
cli
leave
add
inc
add
fisubl
inc
inc
dec
rclb
bound
sti
test
fcoms
mov
dec
or
sub
mov
push
push
add
orb
les
mov
add
lret
dec
loop
lea
mov
outsb
or
sbb
inc
pop
push
orb
jmp
dec
add
add
loopne
loope
pop
xor
dec
xchg
es
sbb
sarl
pop
xor
push
ficoml
js
xchg
cmp
dec
cmp
mov
ret
mov
aaa
lock
inc
inc
insl
ret
push
push
mov
pushl
push
or
mov
xor
pop
cwtl
jmp
xorb
xor
xor
lock
cmpsb
loopne
and
jl
pusha
nop
adc
cmp
pop
test
loopne
jns
dec
shll
cmp
dec
mov
sbb
fdivrl
imul
xor
push
push
add
sbb
leave
mov
gs
add
pop
ss
xor
rolb
xchg
js
push
jno
inc
aas
dec
mov
push
test
dec
mov
std
cmpsl
in
xlat
push
out
pop
or
sbb
cwtl
pop
pop
or
push
lods
sbb
and
lcall
clc
inc
imul
sti
loopne
ret
and
sbb
in
jae
dec
push
sahf
sub
int
jne
mov
add
mov
aam
push
or
mov
xchg
in
add
rorb
dec
imul
jbe
loopne
fiadds
jae
jbe
push
js
or
popf
mov
daa
mov
clc
add
dec
xchg
or
insl
and
inc
pop
jb
addl
or
leave
adc
push
insb
dec
daa
xchg
or
mov
shll
mov
jmp
mov
popa
mov
fsubrs
rorb
pop
adc
add
mov
mov
push
push
imul
sub
ja
push
cmpb
jg
mov
pop
dec
insb
dec
add
adc
cmpl
dec
sti
and
mov
push
add
xor
xchg
jmp
mov
mov
mov
adc
nop
out
adc
cmp
push
jecxz
sti
adc
mov
pop
sarb
push
jge
sbb
inc
icebp
mov
and
leave
mov
lock
add
sbb
ret
divb
mov
fstl
add
and
lock
dec
sbb
inc
dec
lds
pop
adc
js
testb
int
push
mov
ror
and
xchg
sub
dec
add
sub
and
and
xchg
mov
xor
xlat
icebp
dec
add
ret
adc
jmp
popf
add
movsb
adc
leave
pushf
or
xchg
cs
adc
xor
lahf
test
ss
cld
add
mov
sbb
idivl
lret
lock
outsb
mov
and
fsubl
sub
fsubrs
and
pop
push
fistl
mov
sbb
insl
lock
pop
nop
icebp
jmp
dec
xchg
into
enter
and
mov
int3
jbe
das
pop
jo
mov
test
inc
popf
or
add
cmc
add
or
pop
mov
sbb
push
jo
iret
fcompl
jbe
aad
add
and
mov
cmp
jo
and
or
lcall
lahf
and
xchg
sub
out
pop
fwait
in
push
xchg
sbb
adcl
lock
adc
adc
daa
push
sub
push
pop
cmp
and
pop
fdivp
jg
loopne
push
xchg
or
sbb
push
sbbl
popa
fimuls
cmp
dec
call
insl
or
mov
jg
pop
sbbl
pushf
sbb
aaa
and
adc
ja
inc
popf
stc
icebp
or
lds
shll
adc
jecxz
jnp
adcb
pop
aam
or
xchg
inc
bound
inc
les
xor
mov
push
inc
je
cmp
and
rep
stos
and
mov
mov
ficompl
pop
adc
sbbl
add
out
mov
inc
push
shl
xor
jne
int3
jbe
inc
xor
gs
push
lock
lock
and
gs
fs
xchg
pop
add
or
rcrl
sub
fdivp
out
mov
loopne
dec
out
shrb
mov
lock
shlb
inc
xchg
aam
cmpl
mov
lea
pushf
mov
call
push
add
adcb
jae
popa
mov
scas
cmp
cmp
xchg
shrl
movsb
push
sub
xlat
pop
cli
mov
mov
cmp
je
mov
xor
pop
push
adc
add
cmp
push
and
push
sub
loope
roll
or
scas
mov
inc
lock
mov
xchg
and
js
mov
sbbl
add
mov
scas
loopne
hlt
sbb
jb
xor
pop
dec
inc
ss
fisttps
movsl
mov
lahf
movsl
xchg
lahf
dec
adc
aam
add
insl
mov
cmp
shlb
mov
mov
add
ljmp
jno
cmp
outsb
add
and
mov
or
sub
outsl
imul
jae
aam
or
push
nop
rolb
pop
add
add
bound
pop
add
sub
je
out
divl
push
jmp
cs
push
and
mov
mov
sub
xor
gs
sub
xchg
pop
ret
xor
mov
xchg
adc
or
mov
cmpl
jnp
xor
inc
punpckhbw
xchg
fst
ss
scas
xchg
mov
and
cmp
sbb
ss
or
adc
or
and
pushf
out
push
jp
andb
popf
aam
rorb
aam
adcl
sbb
cmpsl
fs
ds
adc
icebp
mov
push
add
or
jae
adc
and
sub
fucom
lods
in
fildl
dec
ja
xlat
sti
dec
mov
pop
mov
mov
loope
add
pop
shrb
fstl
add
add
dec
insl
dec
loope
mov
jns
add
fsubrs
lcall
or
jmp
mov
push
mov
fcoms
leave
jo
and
pop
arpl
dec
add
mov
mov
mov
jmp
fbstp
ret
dec
jo
or
push
dec
jbe
hlt
ds
adc
inc
repnz
and
mov
sub
xlat
rcl
mov
adc
ficoms
cmpsb
jne
fcomip
mov
test
ret
rclb
or
push
fnstenv
cld
sub
fisttpll
nop
dec
pop
in
adc
xor
mov
add
cmp
inc
pop
fimull
cmc
outsb
hlt
push
pusha
push
dec
shll
fimull
movsb
inc
add
and
add
or
ret
ja
pop
mov
fisubl
cmp
jnp
mov
je
cmpl
push
sbb
push
rolb
pop
leave
into
sub
sbb
andb
push
or
invd
out
cmp
push
mov
or
mov
sub
fiaddl
lds
popa
pusha
lret
mov
push
push
add
in
xor
xchg
imul
jmp
lahf
hlt
inc
mov
int3
dec
cld
rorb
cmc
in
mov
sub
inc
and
outsb
xchg
push
xchg
push
int
mov
inc
jbe
iret
and
jmp
in
fildl
cmpsb
push
sbb
xor
or
push
sub
push
xchg
inc
sbb
mov
test
lock
push
repz
sbb
push
decl
xor
push
sub
movsl
push
daa
into
lock
sbb
and
pop
fistps
sbb
rol
pop
adc
sub
daa
int
fisttpll
movsb
ret
sbb
sbb
test
insb
fisttpll
mov
cmp
adc
jge
mov
lods
or
fmull
add
hlt
imul
fldl
jnp
sub
sub
xchg
jo
movsb
inc
xchg
adc
dec
lahf
fbstp
dec
out
mov
cmp
and
mov
adc
arpl
outsb
lahf
mov
adc
fs
in
fidivrs
popa
push
ja
jns
sbb
lods
jno
ficomps
into
push
hlt
movb
cld
dec
popa
or
sbb
inc
pop
fs
inc
jnp
pusha
xor
push
int
sub
dec
xor
fildll
inc
repnz
lock
add
sbb
xchg
xor
aas
js
sbb
lock
and
iret
iret
dec
xor
cld
cld
push
adc
sbb
aam
dec
xchg
fwait
mov
sti
add
dec
out
add
lret
call
js
add
lret
push
mov
ret
int3
js
mov
sbbl
mov
sub
jns
sbb
add
loopne
sub
push
dec
out
sahf
out
pop
fs
jbe
fnstsw
jg
fld
sub
jmp
adc
and
dec
mov
pop
mov
jmp
inc
sbb
inc
adc
inc
push
xchg
cmp
les
jmp
jp
arpl
sub
dec
in
add
sbb
xchg
rcrb
dec
add
add
ret
mov
pop
jg
movsb
loopne
xchg
or
push
jne
cmp
repz
push
push
arpl
out
repnz
adc
je
addl
mov
jbe
push
shrb
arpl
cwtl
mov
adc
cmp
mov
add
add
sbb
inc
mov
repnz
rcl
in
push
pop
pop
aas
sub
pushf
in
push
mov
mov
mov
fld
in
mov
mov
clc
fst
add
mov
mov
lahf
movb
push
and
sbb
pushl
fsubrs
pop
inc
ret
jecxz
imul
or
popa
popa
sbb
or
lock
in
lcall
dec
and
shl
mov
pop
int3
inc
dec
insb
cmp
das
lock
cmp
or
les
xor
mov
sbbb
lock
loope
stos
push
outsb
outsb
sbb
pop
push
jb
cltd
dec
cwtl
rcr
call
adc
nop
jecxz
mov
jns
lock
cmp
clc
or
gs
ljmp
lock
adc
or
or
in
int3
dec
adc
inc
rcl
imul
nop
add
or
sbb
lea
movsb
inc
rcrl
adc
in
arpl
inc
push
mov
bound
xor
jg
inc
cmp
aaa
add
inc
jle
mov
or
mov
push
fadds
lea
mov
mov
lcall
xchg
orl
cmc
or
sub
in
pop
or
and
rcr
jo
add
inc
not
sub
roll
rcll
mov
lea
jl
lcall
mov
adcb
pop
xor
mov
push
out
sarb
test
push
or
and
xor
in
add
fildl
mov
dec
hlt
adc
xchg
push
mov
add
outsl
and
and
add
mov
xlat
inc
adc
cld
cmp
arpl
sub
pop
inc
out
out
sbb
nop
and
pop
sbb
push
sbb
mov
push
mov
outsb
and
rcrb
add
or
subb
inc
mov
ja
mov
negb
jp
jo
and
adc
fldt
pop
insb
xor
add
add
dec
jne
addr16
add
dec
xchg
or
outsl
pop
push
sbb
push
inc
filds
jb
add
loopne
in
xor
inc
push
sub
dec
sbb
mov
cmpsl
fldl
xor
aaa
jae
sbb
mov
push
fs
insl
push
sbb
dec
add
dec
lods
dec
and
add
mov
inc
mov
jg
mov
xsaveopt
fadds
dec
pop
xchg
push
pushf
mov
test
inc
pop
mov
inc
lahf
add
or
mov
xchg
mov
jp
ljmp
fsts
fwait
in
pop
jns
sub
stc
and
xchg
mov
jo
repnz
sbbb
shll
cmpsl
dec
cmpsl
lods
ljmp
add
and
add
cs
jmp
add
aaa
dec
rcll
fimull
mov
add
fwait
nop
pusha
adc
sbbb
inc
cmp
jbe
dec
pushf
add
popl
mov
mov
jg
jl
movb
lea
xor
movsb
xchg
jg
loope
aam
inc
jnp
jl
shrb
adc
cmp
orb
insb
sub
sbb
mov
and
push
xchg
bound
loopne
inc
add
cs
push
and
or
imul
mov
pop
cmpb
add
adc
lea
loopne
xlat
sbb
xor
lret
cwtl
jbe
push
pop
aam
and
mov
das
push
arpl
cmpsb
xchg
neg
jecxz
js
fstp
lods
imul
pusha
test
sbb
sahf
xor
add
xchg
jmp
insl
js
add
sbb
inc
and
imul
loop
jne
xchg
aas
mov
lea
sub
push
jg
mov
addr16
test
mov
ret
hlt
test
outsb
dec
ja
adcl
nop
or
int
jle
sub
adc
adc
and
pushf
adc
fwait
add
sub
xor
jne
jg
call
stc
sub
ja
aam
lret
add
fisubs
or
dec
fwait
mov
mov
mov
xchg
das
aaa
test
cmp
dec
and
sbb
xchg
mov
adc
ret
nop
into
sub
pop
push
jmp
rolb
dec
mov
fcomp
cwtl
jb
jo
out
pop
psrlw
xor
rorl
lock
popa
mov
or
lods
and
fdivr
arpl
lds
push
sbb
mov
les
mov
push
jle
dec
dec
and
cmpb
dec
in
loope
mov
and
push
push
clc
or
push
mov
or
jge
push
mov
shrb
lock
push
ficompl
cltd
in
lock
push
fdivrs
imul
prefetcht2
mov
xor
or
adc
dec
sbb
nop
mov
pop
mov
xor
sbbb
and
push
popf
in
inc
sbb
lret
lret
in
in
sbb
push
nop
loopne
stc
jns
fnsave
pop
cmp
popf
incl
inc
es
mov
pop
push
dec
add
xor
imul
lods
test
iret
loop
imulb
mov
call
fildl
daa
mov
imul
dec
cmp
roll
jl
xchg
icebp
xchg
cmp
mov
push
cmp
aaa
lds
xchg
frndint
testl
in
pusha
shlb
or
loopne
and
adc
movb
sbb
sub
test
icebp
inc
out
shlb
adc
push
pop
loopne
pusha
or
dec
sbb
mov
add
cs
add
mov
and
loop
inc
dec
add
push
or
mov
cwtl
adc
mov
lahf
adc
scas
shll
or
jo
inc
aas
add
ret
cmp
inc
push
add
push
or
repnz
adc
je
mov
movq
and
xchg
add
clc
clc
test
adc
cli
fwait
push
inc
les
sbb
in
daa
std
mov
and
mov
inc
cld
fmuls
mov
sbb
xchg
test
mov
inc
jecxz
jne
pminub
mov
addr16
inc
push
mov
je
rolb
xchg
sub
mov
es
gs
repz
sub
xchg
es
xor
add
int
out
je
pop
jae,pn
pop
iret
jle
mov
inc
test
inc
inc
push
add
clc
sbbb
jecxz
hlt
es
cmp
dec
clc
inc
hlt
clc
fld
fwait
push
clc
movq
ret
pop
dec
sbb
repnz
std
popa
clc
dec
rolb
hlt
clc
pusha
and
xchg
shrl
add
inc
jle
das
adc
in
jo
das
sbb
add
jnp
popa
shll
shll
rcr
or
in
push
lock
xor
shrl
and
std
xchg
subb
add
pop
mov
adcl
movsl
cmp
dec
cmp
bound
add
ret
sub
cmp
lcall
xor
push
adc
xchg
pop
xor
cmp
sub
insb
mov
rclb
sub
repnz
in
sarb
push
adc
jp
shlb
push
out
dec
adc
loopne
les
cmp
jno
add
pop
call
sbbl
jle
stos
je
in
out
inc
or
inc
into
and
popf
pop
and
jno
mov
xor
xchg
jbe
dec
mov
lds
jae
inc
les
loop
xchg
adc
data16
jb
adc
mov
pop
movsl
inc
add
into
dec
mov
popa
sub
loopne
ss
pop
push
mov
jno
idivl
mov
icebp
stos
sub
adc
ds
loope
add
iret
fmuls
dec
in
xor
jp
mov
sub
icebp
in
aad
push
ss
int3
cmp
xorl
test
jnp
mov
je
loopne
test
iret
in
push
ror
jp
pop
stc
clc
popf
mov
lcall
or
popa
push
push
sub
lcall
add
lods
inc
jo
loopne
sbb
jl
jo
push
clc
xorb
movsb
add
icebp
jge
pushf
mov
scas
lret
out
and
pusha
test
loopne
in
xor
loopne
cli
ret
inc
jl
iret
call
hlt
sub
or
or
dec
inc
hlt
loopne
pushf
leave
mov
aaa
loop
add
call
jns
inc
sti
push
jo
sub
dec
das
sub
sub
loope
dec
sti
js
addb
call
push
push
je
push
pop
movsl
mov
es
jmp
in
scas
mov
push
test
or
xchg
push
mov
rorl
lods
push
sbb
push
jae
and
and
mov
ret
dec
rclb
pop
sbb
loopne
add
addl
cmp
inc
mov
dec
jne
pusha
lea
cmp
dec
jb
pop
xor
xor
mov
rolb
lock
cltd
push
pop
cmp
push
pop
xchg
test
aam
fucomi
cmp
test
fcomps
adc
lea
cmpsl
fs
sbb
movsb
push
push
shrb
add
mov
ds
push
pop
xor
jle
dec
mov
or
decl
rorb
mov
add
inc
cmp
negl
mov
arpl
sar
sbb
dec
mov
adc
insl
lret
pop
ja
mov
popa
mov
push
jo
mov
insl
inc
jnp
adc
stos
lret
mov
in
std
leave
inc
dec
add
pop
stc
pop
lea
xlat
mov
xchg
sub
push
inc
and
fiaddl
mov
mov
mov
mov
repnz
out
fcomps
cmp
dec
loopne
stc
or
add
and
sbb
mov
or
es
pop
fnstsw
xor
adc
inc
mov
and
cmp
je
push
lret
les
adc
dec
dec
pusha
nop
pop
inc
movsl
xor
stos
or
je
mov
push
adc
inc
sbb
or
clc
cmp
push
inc
ja
jecxz
movsl
addb
insl
and
pop
cmpsl
push
dec
ss
lods
xchg
es
inc
mov
sub
sbb
xchg
xorb
out
bound
push
adc
and
sbb
lods
in
aaa
sbb
fistps
jns
repz
negl
xor
dec
jns
outsb
sarl
mov
jo
andb
das
cmpsl
dec
dec
mov
iret
adc
inc
adc
sub
sbb
xchg
out
dec
dec
inc
push
in
sbb
adc
cmp
mov
or
outsb
push
clc
push
mov
lahf
adc
insl
jecxz
hlt
imul
jle
bound
dec
xchg
lds
or
inc
xor
int3
mov
and
scas
cmpsl
jo
and
xor
sahf
and
jecxz
pop
sbb
cwtl
shrl
add
mov
cltd
inc
ds
mov
lods
xchg
roll
xlat
sub
in
sbb
daa
or
cmp
and
outsl
and
call
pusha
movsb
jg
xchg
test
jl
popa
ss
and
xor
xchg
xorb
div
sub
push
dec
adc
jmp
and
lds
xchg
clc
lock
push
shrb
dec
and
adc
mov
lods
cmp
movsl
fsts
dec
enter
adc
int
add
sub
stos
ret
jle
sub
dec
or
clc
push
movsb
push
push
adc
push
fcomps
push
lahf
aas
dec
jo
dec
outsb
je
mov
jne
call
adc
adc
adc
sub
pop
insl
cmp
cmp
daa
fldl
lock
ret
or
add
rep
jge
adc
ja
push
xor
sub
dec
insb
iret
outsb
jnp
cmp
pop
push
push
jge
pop
test
and
call
or
push
push
divb
cmpsb
mov
or
push
cmpsl
add
out
rolb
inc
je
pusha
arpl
inc
dec
jmp
scas
test
cmc
and
xlat
push
dec
jo
or
out
scas
pop
push
test
imul
dec
inc
pop
xor
out
push
push
and
popa
iret
movhps
mov
decb
mov
cltd
mov
ror
pop
shlb
inc
ret
push
mov
arpl
xor
push
jp
xchg
push
mov
or
dec
not
je
adc
testb
fmuls
push
js
adc
pop
add
mov
push
bnd
push
xor
movsb
xchg
pop
cmpsb
add
sbb
lea
ficompl
and
cmp
add
addr16
hlt
mul
hlt
adc
inc
xor
int
xlat
push
loope
imulb
cs
fdivs
push
cld
push
add
clc
outsb
movsb
push
add
adc
or
out
std
cmpb
xlat
filds
pop
push
dec
arpl
adc
add
mov
std
sahf
inc
popa
aad
adc
pop
inc
sarl
xchg
sbb
jns
add
jle
pop
jp
jnp
je
push
jne
push
pop
aam
push
mov
in
jno
hlt
test
data16
inc
es
aas
ds
or
mov
sbb
mov
cmp
outsl
popa
add
sub
fsubrl
sbb
in
push
push
call
and
jb
xor
and
jp
dec
sbb
jae
clc
mov
lea
dec
sbb
icebp
pusha
addr16
ljmp
jl
mov
ss
jne
dec
mov
jmp
jge
pop
shlb
test
sub
inc
pusha
int
int3
call
dec
jo
lahf
and
adc
or
xchg
cmp
das
push
test
loopne
inc
rorl
push
cmp
loopne
push
loope
push
outsl
jmp
sbb
fs
jl
stc
add
pop
pop
pop
or
add
jl
push
adc
mov
sub
shll
ljmp
cmpl
xchg
bound
jp
arpl
mov
xlat
adc
inc
mov
add
jp
mov
add
bound
stos
xor
pop
or
xchg
pop
push
pop
xor
fimuls
arpl
fdivrs
jg
push
push
and
call
xlat
repz
mov
insb
gs
loope
test
rcrb
sub
dec
mov
add
or
sbb
jns
or
mov
jl
inc
jnp
test
mov
inc
dec
and
or
jne
pop
subl
or
inc
mov
fs
mov
ror
lods
inc
or
inc
jg
andl
dec
mov
xor
andb
rcrb
xor
mov
filds
inc
push
dec
push
loope
clc
pop
cwtl
fistl
add
push
add
sbb
out
loope
xor
and
cltd
mov
test
sub
test
shrb
jmp
or
test
sti
xchg
add
mov
push
pop
or
or
addl
jge
hlt
ljmp
out
js
or
adc
or
enter
cmp
sarl
add
insb
jle
mov
inc
in
shll
or
dec
lea
xchg
or
rol
inc
outsb
leave
jo
xor
sub
lock
pushf
or
jno
outsl
inc
cwtl
out
mov
or
cmp
inc
sbb
mov
mov
dec
xor
loopne
mov
add
or
fcompl
adcl
inc
or
dec
cwtl
sub
dec
dec
scas
adc
aas
jmp
or
push
or
add
or
pop
mov
shlb
push
mov
jne
js
outsl
cmp
sbb
aam
int
mov
cmpl
push
call
push
jle
movsb
add
and
dec
push
fldenv
add
cmp
push
push
push
dec
push
jno
imul
es
cmp
sub
es
sbb
std
sarb
in
hlt
sub
mov
cmp
lcall
inc
int
and
dec
std
mov
pop
adcb
ja
inc
insb
addr16
fucomp
pusha
push
and
movsb
jae
pusha
inc
lahf
aaa
dec
lea
btr
outsl
cmpsb
xchg
cmpb
cmp
xchg
adc
pop
push
jg
sbbb
addb
mov
je
sub
xor
adc
mov
nop
xor
loop
sbb
test
push
pop
stos
pop
xlat
dec
in
sbb
call
adcb
and
mov
loope
ljmp
xor
int
xor
adc
insl
push
aaa
add
add
or
popf
aad
push
dec
inc
out
push
sbb
fs
pop
adc
xlat
jg
andb
stos
and
inc
icebp
sbb
mov
je
add
dec
in
imul
jge
imul
add
add
fiadds
lgs
push
pop
or
dec
leave
add
ror
mov
push
push
pop
add
cmp
push
jo
dec
pop
adc
aad
add
leave
push
adc
jle
jo
movsb
scas
add
lret
and
xor
jmp
movsb
out
xchg
cld
push
or
add
add
inc
add
mov
add
jno
or
sbb
pop
xor
sub
push
adc
or
push
jo
pop
add
mov
lret
or
int3
lea
int
ss
fsubs
mov
add
cmpsl
or
je
dec
loopne
pop
pop
pop
cli
mov
js
aaa
les
test
xor
pop
pusha
addr16
jmp
insb
add
jg
or
xor
mov
mov
repz
xorl
mov
and
icebp
jne
or
or
pop
mov
add
in
test
or
dec
fcomp
test
lds
dec
insb
add
mov
loopne
testl
dec
mov
mov
xchg
mov
sub
lock
pop
push
adc
test
test
sbb
adc
adc
mov
or
push
lcall
jo
addl
int
ds
popa
ret
test
insb
and
sbb
idivl
dec
and
pop
leave
dec
data16
and
ror
notb
daa
adc
add
ja
inc
jno
jno
cmp
push
jmp
sbb
pop
lret
bound
inc
dec
mov
cmpsl
push
adc
loopne
lock
aaa
mov
jmp
or
jo
mov
xchg
mov
dec
mov
imul
dec
sbb
iret
xor
cmpsb
push
push
dec
push
adc
movsl
push
mov
call
mov
sbb
adc
ja
sub
ret
aas
mov
push
insb
js
mov
xchg
pop
bound
mov
loope
decb
loop
out
cmp
pop
or
arpl
inc
push
add
incb
pop
or
add
dec
loopne
push
or
testb
pop
or
notb
insl
xchg
cmp
fisttpl
mov
xor
pop
mov
pop
orb
and
rorl
or
popf
mov
fdivs
or
lods
add
movsb
and
js
sbb
shlb
jns
jmp
dec
push
inc
test
cmp
scas
pop
jae
mov
adc
lods
lret
jne
pop
das
decl
mov
or
cmp
push
add
inc
repnz
cmp
data16
ss
add
adc
loopne
les
jbe
mov
xchg
scas
push
fmull
nop
jne
sub
mov
pavgw
mov
push
lret
lea
push
cmp
mov
lock
lahf
dec
push
pop
jo
push
push
jo
xchg
rcrb
and
pop
xor
in
jne
and
icebp
push
popf
lds
stos
loopne
dec
fdivrl
icebp
mov
mov
je
sbb
inc
pop
push
leave
dec
push
adc
aam
lret
or
add
ja
mov
addr16
add
push
dec
pop
sbb
test
sub
mov
repz
cmp
pushf
sbb
sti
xor
cwtl
orl
inc
loop
dec
xchg
add
push
xchg
push
fidivrl
sbb
push
xlat
dec
adc
push
call
add
or
movsb
inc
push
adc
add
loop
inc
jo
and
jne
sbb
dec
dec
dec
add
or
out
mov
inc
outsb
scas
dec
lea
imul
mov
loopne
xchg
fcoml
lods
jl
inc
lcall
mov
clc
dec
pusha
movsb
loope
lahf
dec
sbb
sbb
mov
xchg
mov
loopne
inc
push
pop
push
je
inc
add
sbb
aam
inc
xor
jecxz
xchg
jp
addl
fld
jo
and
xor
daa
sbb
iret
add
mov
mov
jl
icebp
pop
jle
mov
pop
add
push
xor
add
pop
inc
popa
ljmp
mov
or
lahf
and
inc
icebp
into
mov
cmp
mov
inc
aad
jl
mov
repnz
push
xchg
ss
add
outsl
push
adc
in
sti
incl
adc
hlt
fxch
fistpl
fld1
fchs
push
fscale
incl
fstp
pop
sub
cmp
ret
daa
pop
cmp
or
xor
jg
cli
or
sub
inc
jb
cmp
xorl
push
test
das
inc
clc
add
sbb
xchg
and
test
test
faddl
adc
nop
cltd
sub
mov
pop
and
add
push
mov
mov
cmp
xchg
or
sbb
pushf
adc
or
pop
mov
mov
lahf
aas
cmp
ds
ret
and
jg
dec
enter
sub
leave
ret
sbb
push
add
fcoml
fiadds
sub
jmp
dec
sti
cmp
inc
jmp
adc
call
add
sbb
pop
pop
mov
icebp
aas
dec
pop
xor
inc
test
adc
push
sarb
pop
cmp
cwtl
add
add
shlb
test
adc
fisttpl
lods
insb
shrl
mov
out
mov
sbb
nop
fadds
xor
jmp
sbb
ja
cmp
fcoml
inc
jbe
and
in
mov
popa
in
arpl
mov
mov
inc
mov
jo
dec
mov
cmpsb
add
hlt
jecxz
push
sbb
add
addr16
xlat
mov
mov
scas
dec
or
sbb
leave
adc
lock
rclb
xchg
mov
scas
jge
ss
aam
and
fwait
loope
cmc
inc
dec
adc
or
adc
xchg
cmpsb
push
das
jne
cli
mov
mov
fwait
xchg
mov
lods
rcll
jne
mov
arpl
fs
pop
sbb
rol
or
shll
push
mov
mov
cmp
mov
xor
xor
mov
mov
xor
xchg
adc
fsubs
dec
jbe
gs
push
cmp
out
lds
add
test
sub
xor
dec
mov
push
sbb
es
cwtl
sbb
cmpsl
sub
xchg
push
aaa
cmp
fsubl
jo
push
cmpsb
sbb
push
add
ss
repz
or
movsl
and
addb
xor
adc
dec
outsl
rcl
add
ja
xchg
shl
push
push
dec
dec
notb
and
adc
mov
jae
xchg
xor
and
jbe
inc
leave
out
xor
outsb
sahf
xlat
loopne
inc
push
inc
xor
mov
nop
orl
sub
or
cmp
xlat
xchg
orl
jg
dec
jmp
mov
movl
ljmp
in
jl
add
movsb
sahf
jmp
add
in
outsl
ret
and
xlat
loop
test
iret
push
pop
sub
adc
dec
addl
std
dec
cmp
cmc
and
jae
out
or
outsb
add
shlb
popa
mov
sub
ja
popa
xchg
push
pop
push
jo
jg
push
scas
or
jnp
mov
orb
ret
mov
or
in
rorl
inc
dec
dec
repz
sbb
push
jmp
push
push
fwait
and
rol
mov
add
pop
test
negb
cmp
shrl
adc
clc
xor
jecxz
xor
xor
xor
inc
sub
outsb
jns
mov
call
and
mov
andl
adc
inc
or
sbb
add
pop
pop
test
jle
push
sub
xlat
loope
cs
stos
incl
mov
mov
in
mov
mov
or
xchg
inc
add
stc
mov
push
add
mov
inc
and
push
das
je
inc
mov
and
jnp
pop
cmovno
jl
push
dec
push
push
iret
mov
in
inc
test
xchg
dec
aam
push
xchg
mov
ret
adc
or
or
test
cld
in
dec
adc
cltd
les
add
inc
repnz
xlat
push
xchg
pusha
push
cltd
sub
cwtl
push
das
cmc
incb
out
mov
mov
or
and
push
push
push
das
pop
add
loopew
xlat
pushf
sub
daa
lahf
pushf
sub
es
mov
das
js
and
cmovs
outsb
xor
mov
add
mov
flds
mov
idivb
enter
daa
xchg
std
movd
in
lds
out
adc
inc
add
add
test
sub
push
dec
xchg
and
inc
mov
lret
pop
sub
or
and
dec
out
mov
add
xchg
ss
dec
dec
loop
mov
xor
pop
dec
loop
mov
pop
pop
sbb
sahf
sub
int
ret
sbb
js
mov
decl
ljmp
adc
sub
lods
pop
push
add
inc
jo
enter
mov
mov
popf
adc
test
rol
les
lods
mov
scas
aaa
notl
and
mov
push
xor
dec
cmp
fwait
xchg
out
xor
mov
adc
jno
dec
pop
pop
sbb
and
dec
cmpsl
insl
cld
push
gs
pop
mov
push
mov
pop
and
not
movsb
fcmove
sbb
cmp
les
xchg
xchg
pop
hlt
neg
sbb
ss
out
out
and
mov
ror
mov
pop
dec
cmpsl
xchg
mov
sbb
movsb
sub
sub
pop
add
push
clc
fidivs
sub
mov
shrb
dec
cmpsb
push
inc
or
xchg
int3
push
xchg
xor
pusha
xchg
lods
test
mov
or
add
jmp
mov
push
adc
inc
push
jb
imul
xchg
shlb
mov
cmp
fsubrs
aad
movsl
pop
inc
lods
sbb
pusha
lods
sbb
call
push
pop
lret
lods
adc
xor
push
in
xlat
pushf
add
sbb
es
xchg
dec
das
loopne
dec
cld
or
cld
outsl
jmp
das
adc
adc
cmp
push
test
cmp
sbb
mov
sbb
outsl
sub
push
or
or
add
adc
dec
lods
outsb
outsl
call
inc
lea
rcrb
ret
loope
ret
repz
sub
decl
cvtps2pi
jg
or
inc
or
push
mov
jmp
pusha
dec
mov
mov
push
inc
in
dec
in
adc
push
mov
inc
data16
fadds
cmp
adc
jmp
or
orb
xor
mov
add
adc
jno
jp
or
adc
cmp
inc
cmp
adc
mov
lea
mov
repnz
into
cs
xchg
orb
sub
loope
inc
stos
jle
ljmp
adc
loopne
and
push
and
test
in
adc
mov
dec
mov
loopne
pusha
movsb
fs
js
inc
xor
outsl
xchg
pop
mov
xor
xchg
cmc
test
push
adc
enter
xor
or
xor
or
movsl
movsl
mov
das
adc
out
push
adc
xor
or
addb
xlat
sbb
lds
fists
fisttpl
jge
sub
xor
inc
jb
mov
inc
add
adc
je
or
mov
xor
sbb
mov
push
adcb
sbb
inc
add
push
adc
outsl
dec
pop
addl
adc
pop
aas
sbb
sbb
adc
shl
and
mov
int
adc
adc
push
jl
loopne
pop
mov
pop
xor
inc
xchg
hlt
adc
mov
xchg
shlb
add
adcb
inc
loopne
testl
call
push
ja
ja
iret
pop
mov
adc
fildl
inc
xor
or
nop
sbb
or
and
movsl
outsl
ss
pop
hlt
int
and
lret
test
inc
dec
imul
and
arpl
aaa
push
add
movsl
shlb
loopne
clc
sub
add
and
rclb
push
or
adc
adc
lock
cmp
setg
mov
xor
lods
push
adc
loope
inc
enter
push
sar
test
inc
pop
in
pop
cmc
pop
cmp
arpl
xor
enter
ljmp
cmpl
mov
xor
pop
xor
jb
and
popf
lods
leave
mov
out
imul
loopne
inc
push
sbb
into
inc
cli
jg
mov
jb
out
xor
in
inc
cmp
and
inc
inc
sub
lods
outsb
jmp
outsb
dec
add
inc
mov
sbb
dec
mov
xor
pop
or
cmc
jl
xor
sub
jge
test
cmpsb
push
adc
shr
mov
push
outsb
rorb
or
push
cmp
xchg
push
cmpsl
insb
inc
sub
sub
and
inc
rorb
xchg
fmul
xor
or
shll
mov
loope
push
adc
push
add
mulb
popf
or
dec
dec
neg
add
rclb
hlt
add
imul
sub
xchg
ret
sbb
andb
lock
mov
add
pop
xor
fs
and
push
mov
and
js
pop
mov
cmpsb
mov
hlt
imul
mov
je
cltd
pop
inc
push
outsb
xchg
or
lods
sbb
and
clc
xorl
and
ss
dec
jge
jne
rorl
or
inc
dec
mov
inc
sbb
xor
ret
rorb
mov
clc
xor
xor
pop
dec
sbb
mov
mov
mov
cmp
mov
mov
mov
mov
test
int3
pop
mov
jecxz
push
push
and
mov
sbb
push
mov
and
sbb
popa
add
jecxz
push
mov
jbe
add
inc
movsb
push
pop
jmp
filds
fcmovne
out
dec
test
dec
sahf
or
ds
dec
sbb
inc
mov
xor
popa
lsl
repz
mov
ret
ret
or
aaa
jbe
mov
xor
xchg
test
add
test
xor
or
out
rolb
xchg
sub
test
or
lods
das
pop
adc
mov
jbe
pop
sbb
shrl
ret
lret
xchg
in
pop
xchg
push
lock
push
cmp
mov
cmp
push
mov
ds
in
popa
insb
cmp
add
push
jge
testb
scas
cmp
sbb
mov
movzwl
sbbl
mov
sub
out
roll
cmp
iret
repz
sbb
es
mov
sub
in
and
jb
push
mov
adc
xchg
and
mov
sub
push
stc
fisttpll
or
jns
jecxz
test
jns
jecxz
loope
inc
push
nop
addl
decb
pop
xor
dec
in
rcrb
sbb
subb
mov
sbb
and
fidivl
dec
sbb
ret
push
sbb
mov
jae
jmp
or
push
sarb
xchg
adc
flds
fsub
sbbb
in
adc
nop
mov
cmp
push
add
or
xchg
lock
ffreep
into
xchg
or
lahf
adc
fabs
ds
pusha
pop
nop
or
or
std
adc
push
lahf
aas
mov
sbb
and
pop
jb
pushf
pop
aas
adc
test
or
or
cwtl
dec
das
inc
pop
and
jae
sbb
nop
out
pusha
dec
xor
mov
jb
cmp
lcall
rclb
and
xchg
pop
add
jg
add
pop
add
cmp
push
jmp
jns
push
pop
bound
nop
jecxz
dec
jne
imul
pop
dec
mov
test
mov
mov
cmp
aam
in
pop
sti
adc
adc
add
sub
inc
inc
stos
arpl
fisubl
in
sbb
loope
xchg
cwtl
sub
pop
outsl
bswap
shlb
cs
or
pop
inc
push
jmp
out
repnz
cmp
pop
out
fiadds
and
push
mov
xor
insb
push
rcrb
sahf
xchg
adc
pop
aam
mov
cmp
dec
sub
mov
popa
movsl
je
sbb
aam
rcr
jecxz
repz
addr16
add
and
xchg
xchg
mov
jl
mov
fucomi
cmp
repz
and
xchg
mov
mov
mull
rorb
and
iret
leave
lret
pop
add
push
incl
mov
sub
mov
nop
mov
test
adc
cmp
and
out
ss
jb
mov
mov
inc
inc
rep
rol
rorl
xchg
xchg
xchg
mov
sbb
pop
lret
daa
inc
data16
insb
mov
sahf
add
sub
and
pop
mov
dec
mov
inc
jnp
mov
inc
xchg
daa
push
mov
and
push
cltd
shl
and
imul
pop
dec
mov
nop
aaa
dec
inc
push
popl
aaa
mov
and
jecxz
sbb
into
ficoms
sub
push
out
mov
pop
jg
lea
adc
mov
add
sub
add
dec
sti
mov
enter
mov
jb
jbe
or
pop
fxch
push
and
cmp
dec
xor
and
mov
cmp
insb
mov
arpl
cmpl
shrl
aaa
push
in
and
lock
jbe
pop
xchg
xor
cmc
lcall
dec
int
or
dec
add
add
and
fnstenv
push
adc
jecxz
adc
pop
adc
inc
fdivrs
xlat
xor
shll
and
rcll
rol
pop
ror
leave
pop
mov
clc
mov
xchg
fiadds
mov
fucom
lods
inc
sbb
inc
popa
adc
and
xor
outsl
sbb
into
ret
xchg
pop
push
inc
xor
add
push
push
mov
mov
push
pop
inc
fs
andb
call
sub
sbb
inc
push
movsb
inc
dec
jmp
and
nop
popa
clc
lea
test
adc
repnz
scas
add
xor
push
rorb
pop
out
adc
sbb
xor
nop
fstpt
insl
xlat
call
sbb
je
rolb
xor
jnp
daa
mov
cmpsl
and
push
push
mov
inc
maxps
sub
cli
xchg
dec
in
in
xchg
or
in
push
shl
add
add
fiadds
jne
xor
adc
jbe
aam
mov
shll
test
mull
pop
test
add
or
jbe
and
or
pop
xor
xor
loopne
fs
loopne
out
or
sbb
divl
int
and
add
xor
inc
mov
dec
shll
fcomps
jns
jae
repnz
xor
add
shll
or
sbb
int3
xor
imul
dec
dec
rol
shlb
test
mov
pop
mov
push
sbb
sub
cmp
icebp
popl
js
add
out
adc
inc
jns
iret
stos
scas
out
push
clc
or
cs
sahf
out
push
outsb
mov
loopne
dec
in
cmp
jge
push
jmp
sti
shlb
cmp
nop
sub
call
add
and
adc
ss
cmpsb
nop
jmp
mov
or
inc
or
call
mov
mov
jmp
add
or
mulb
nop
data16
add
pop
add
add
xchg
sbb
ss
add
push
pop
xor
or
or
int
sub
lcall
test
rcrb
movsb
cmp
pushf
jae
imul
in
dec
dec
xchg
nop
nop
nop
movsl
cltd
nop
out
mov
leave
mov
cmp
ja
rcrb
dec
cmp
repz
xor
push
adc
repz
push
std
inc
icebp
push
in
dec
sub
or
loop
xchg
movsb
sbb
or
cmp
adc
pop
adc
outsl
jbe
pop
add
add
inc
sub
add
add
data16
pop
stos
adc
mov
mov
cld
push
shr
or
testb
or
pop
xor
adc
jg
insb
or
or
xor
xchg
dec
imul
adc
xchg
pop
je
sbb
push
mov
or
int
shlb
insb
adc
push
adc
adc
fs
sbb
sbbl
or
mov
adc
mov
filds
push
sbb
mov
push
adc
dec
inc
sub
inc
insb
sahf
inc
aas
add
les
inc
outsl
dec
das
xor
add
jnp
cld
mov
dec
mov
cmovge
jb
pop
imul
sar
std
or
xchg
dec
inc
shlb
sub
pop
dec
push
push
or
and
mov
leave
cli
bound
adc
xor
jae
arpl
subb
movsl
std
rorb
push
xor
xchg
add
mov
js
push
arpl
xor
imul
add
loopne
je
lcall
xor
sub
or
ret
jae
jae
les
enter
jae
ret
push
ds
add
daa
adc
add
xchg
mov
adc
rorl
popa
fptan
ret
push
loope
and
push
or
sub
adc
aad
pusha
ja
sbb
call
pushf
ss
aaa
movl
xor
lret
or
enter
cmpsl
add
push
outsl
mov
cmp
mov
je
mov
lret
or
inc
insl
fistl
inc
or
fildl
adc
decl
jmp
pop
and
je
das
pop
pushf
adc
outsl
dec
add
mov
xchg
daa
daa
and
cmp
xchg
sbb
push
pop
xor
pop
push
popa
xchg
push
xor
adc
fldt
or
ss
loopne
xchg
mov
xchg
pop
aaa
inc
mov
xor
enter
pop
scas
test
push
jg
mov
add
adcl
shrl
jbe
adc
pop
and
mov
mov
or
cltd
add
mov
out
push
push
or
xor
rep
or
add
cmpb
bound
imul
movl
adc
bound
adc
mov
push
sbb
fstl
insl
push
jl
scas
or
insb
lods
inc
push
cmp
pop
dec
call
or
xorl
xor
dec
iret
pop
mov
pop
add
dec
add
in
or
push
cmp
xlat
xorb
aam
push
nop
mov
or
add
lods
popa
dec
dec
or
or
rolb
push
jmp
data16
jmp
adc
aad
addb
cwtl
bound
call
cmp
xor
test
mov
add
rol
lret
mov
sub
jecxz
mov
call
and
cli
add
dec
push
inc
or
mov
jmp
int
inc
and
sbb
mov
mov
fs
pminsw
fistpll
fwait
and
xor
stos
add
faddp
pop
call
lret
or
cltd
dec
pop
xchg
lds
nop
push
inc
jnp
sub
jmp
and
push
pop
adc
xchg
mov
adc
jmp
nop
cmc
cmc
hlt
push
pop
jno
and
inc
lahf
mov
xor
daa
xchg
sbb
or
or
sbb
or
hlt
cmp
inc
cmp
dec
or
pop
xorl
insl
hlt
fcompp
xchg
sbb
adc
gs
andb
mov
js
jmp
push
addr16
mov
hlt
scas
mov
push
loop
fs
xor
lea
xchg
add
sub
push
xor
fsubl
lock
push
push
mov
mov
sub
js
xorb
popa
jae
and
xchg
popf
fs
mov
andl
daa
cmp
bound
xchg
dec
sbb
jns
mov
pop
pop
dec
push
mov
movd
sbb
push
sub
jae
xchg
mov
testl
mov
mov
pusha
jp
push
mov
cwtl
push
adc
adc
es
shrb
dec
ret
jnp
mov
add
sub
ds
push
lock
les
add
pop
add
pop
adc
insl
mov
push
sub
fs
arpl
dec
jnp
pop
cmp
popa
mov
ret
rorl
cmp
cmp
rcr
add
imul
push
sub
cs
xchg
jo
push
cmp
sub
mov
dec
and
or
ficoms
dec
add
leave
add
xor
adc
sbb
popf
mov
mov
das
dec
pop
loopne
inc
leave
iret
push
cmp
pop
rol
test
mov
xlat
push
push
add
add
movsl
xchg
and
sub
fcompl
sbb
pop
add
andl
add
pop
pop
lret
push
push
sahf
ret
jecxz
in
jno
daa
fcompl
mov
sahf
mov
clc
pop
pop
mov
mov
ja
das
mov
bound
add
xchg
sub
add
xchg
push
movsb
or
xor
outsb
inc
sub
dec
test
inc
sub
add
cmpsl
das
pop
and
cld
push
cli
cmp
lds
xor
dec
enter
or
xor
or
add
adc
addr16
mov
push
adc
or
mov
mov
mov
xor
push
dec
inc
jno
aam
dec
sbb
sbb
mov
inc
lds
cmpsl
and
and
adc
sub
jge
add
fadds
sbb
push
mov
cmpsl
add
adc
sub
jns
xor
mov
fnsave
lods
inc
push
scas
sbb
cmp
inc
mov
add
adc
pop
mov
push
mov
mov
pusha
inc
jl
aad
xlat
out
add
cmp
jge
mov
test
lret
mov
cmpsl
int
loopne
rcll
xchg
inc
inc
push
jo
clc
pusha
aas
add
xchg
lcall
popa
pop
in
jo
lds
push
loopne
les
fsubs
and
icebp
popa
push
bound
sub
push
xorb
das
loopne
inc
dec
push
mov
pop
sub
inc
sub
add
stc
adc
in
mov
stc
in
sub
es
or
bound
lahf
cmp
hlt
sbb
fs
xchg
push
mov
in
adc
push
inc
sbb
mov
or
arpl
arpl
notl
add
mov
sub
fstl
pop
inc
push
push
ss
push
in
mov
adc
pop
popl
outsl
in
rol
pop
jp
insl
movsl
sbb
cwtl
push
push
sbb
lds
inc
cltd
cmc
negl
lock
das
fsubrp
pcmpgtw
push
or
fs
nop
inc
lcall
lds
mov
jnp
shll
movsl
jecxz
jae
lods
dec
inc
aaa
loop
xchg
xchg
push
test
sub
addb
lods
stos
rorl
mov
push
push
xor
call
push
je
cltd
in
sub
xchg
ds
ret
outsl
push
shlb
push
inc
test
imul
sub
aaa
pop
jo
cs
addr16
mov
xor
and
jg
pop
add
fdivrs
xchg
std
addr16
inc
mov
popa
cltd
sub
mov
mov
and
jo
das
fsubrs
jns
jns
test
adc
jb
mov
sub
cmpsb
lods
jl
test
mov
imul
fnstsw
lods
xor
xor
pop
xor
push
push
loop
imul
pop
das
inc
enter
push
adc
xor
enter
outsl
ret
inc
and
push
leave
imul
cmpb
add
sbb
jns
xchg
pop
ja
ret
and
pushf
in
stos
imul
push
sub
int3
test
das
imul
adc
dec
pushf
xchg
jg
jp
add
and
and
dec
leave
imul
mov
addb
or
aad
test
and
sbb
ret
rolb
xchg
push
outsb
push
scas
mov
pop
outsl
pop
lea
mov
adc
pop
adcb
inc
repnz
sub
dec
xchg
nop
pop
cmpb
sbb
orl
shll
pop
ja
outsb
popf
mov
mov
enter
xchg
pop
push
jo
icebp
rorb
out
push
call
aaa
sti
push
inc
jno
int
xor
test
jne
adc
mov
mov
and
jbe
sub
aaa
pop
ret
dec
add
jmp
jb
inc
fidivl
cmp
rclb
imul
inc
jecxz
adc
sahf
bound
ja
jae
loopne
xchg
fs
mov
rorb
psubusb
arpl
xchg
mov
and
xor
push
shrl
pop
imul
arpl
stos
pusha
jb
daa
mov
addr16
jo
jno
jp
mov
in
insl
mov
push
xor
in
jle
push
jne
dec
mov
js
jne
mov
inc
push
push
push
push
cmp
mov
mov
mov
adc
lock
add
pushf
or
sub
dec
add
or
inc
lods
movb
xchg
or
and
add
sub
mov
sarl
jae
cmp
or
sbb
mov
xor
sub
inc
or
pop
or
adc
cwtl
xchg
xchg
bound
test
mov
pop
insb
xchg
sub
dec
repz
rorl
stos
and
lret
jne
cmp
aad
nop
nop
lods
add
cmp
sahf
fcomps
push
inc
add
or
loopne
mov
mov
mov
fisttpl
sbb
xchg
xchg
or
test
add
nop
or
ret
dec
cmp
pop
mov
sbb
push
add
outsb
or
in
xchg
add
push
add
add
imul
xchg
jo
popa
test
lds
add
aaa
jbe
adc
ficompl
cltd
cmc
shlb
xchg
or
imul
or
outsl
in
add
add
adc
cmp
push
imul
pusha
xor
out
je
or
and
sbb
or
in
adc
mov
cmpsl
das
andb
push
cmp
cld
outsl
imul
dec
cwtl
scas
jo
jecxz
mov
jbe
pop
das
or
shld
loopne,pn
xchg
dec
or
js
pop
add
or
dec
cmp
rcrb
cwtl
les
or
nop
mov
dec
nop
cltd
inc
aad
nop
or
xor
add
mov
arpl
mov
add
bound
ja
shrl
testb
mov
pushf
and
je
xchg
jmp
ret
dec
xchg
lea
movsb
add
sub
loope
dec
xchg
jbe
psubusb
lea
insb
jecxz
cltd
xor
adc
jns
cli
das
sub
push
ss
mov
notl
xchg
mov
enter
fadds
jecxz
push
push
sbb
push
add
inc
mov
repz
sysret
aas
lea
lods
xchg
mov
jno
push
and
mull
mov
mov
jo
and
inc
and
outsl
mov
mov
inc
mov
sbb
sub
push
dec
add
data16
fidivrl
enter
inc
sbb
clc
push
push
insl
mov
pop
or
push
std
sub
int3
mov
xor
mov
int3
imul
xchg
adcb
loopew
test
mov
outsl
test
or
or
or
mov
push
mov
dec
cmpl
and
imul
test
sub
aaa
cmp
in
pop
push
sbbb
or
dec
bound
frstor
in
xor
cmp
aas
test
jbe
or
loop
lahf
fmuls
mov
dec
leave
sub
pop
dec
xor
xor
fwait
addb
mov
pop
les
push
in
fs
or
mov
cmp
jae
and
or
sub
rcrb
xchg
add
shlb
fcomps
mov
xor
dec
xchg
ret
jmp
jl
das
scas
out
or
mov
in
pop
fiadds
lret
mov
aam
imul
push
push
add
fcomp
fsubrl
loop
push
mov
into
call
faddl
std
ret
xor
imul
mov
imul
hlt
out
add
jbe
ja
and
mov
cwtl
repz
and
cmc
mov
cltd
xlat
push
push
minps
and
jbe
dec
sbb
cmp
dec
sbb
lret
or
cs
sti
inc
iret
dec
inc
stos
insb
push
fstpl
and
sahf
js
das
imul
mov
rolb
inc
pushf
lcall
cmp
add
imul
cltd
mov
mov
xchg
or
or
and
dec
push
sub
mov
pop
mov
xchg
adc
push
dec
and
dec
or
dec
mov
mov
gs
sbb
xor
iret
pushf
pushf
xchg
cmpl
inc
out
push
inc
push
sbb
add
push
or
jno
mov
outsl
add
ja
ret
out
outsb
sarb
push
and
pop
jno
cmp
das
cmp
sub
xchg
xchg
loope
jb
push
add
ja
mov
aad
jnp
mov
sbb
inc
add
insl
stos
mov
je
jae
sub
es
adc
stc
je
jmp
jle
jne
arpl
dec
add
rcrb
dec
out
cs
fmul
out
pop
lea
xchg
add
sbb
add
or
pusha
mov
push
and
add
and
mov
call
popf
lret
rcl
test
add
adc
les
lods
addb
sbb
jecxz
add
add
dec
pop
lods
pop
fsubr
sub
ret
xchg
jae
aas
mov
dec
aam
call
jns
ret
lcall
jb
inc
sub
push
fcomp
adc
dec
and
subl
out
sbb
gs
fistl
loopne
jne
sbb
fs
sti
subb
pop
dec
xchg
movsb
dec
adc
add
jecxz
mov
adcb
jae
enter
aaa
and
xor
pop
mov
and
mov
loop
cli
jne
les
inc
sbb
ss
cs
insb
loope
push
lods
shrl
mov
and
shrb
push
xor
fmul
sub
pushw
mov
ss
pop
mov
jmp
cmp
mov
sub
and
into
mov
pop
xor
cli
mov
ds
mov
cld
mov
test
les
add
les
lods
sbb
xchg
ja
fs
daa
pusha
sti
add
pop
jb
pop
inc
jae
dec
or
idivl
daa
push
inc
sbb
push
jb
movl
cmp
inc
pop
sub
push
inc
dec
js
test
push
sbb
lock
fistpll
fcom
sbb
aam
and
mov
or
dec
test
adc
mov
pop
and
jmp
iret
in
leave
and
flds
jne
jmp
ljmp
mov
call
xor
xchg
jmp
sub
test
inc
enter
add
cltd
sbb
mov
add
dec
aam
scas
rclb
pop
insl
adc
mov
fildll
rol
pop
fisttps
hlt
jp
push
or
add
and
cmp
add
and
add
inc
inc
loopne
test
and
adc
movsl
add
std
add
popf
lret
mov
notb
inc
ret
xor
pusha
fcoml
jp
or
into
sbb
jne
cld
in
test
add
out
movsl
test
dec
mov
mov
jmp
in
das
ds
test
push
sub
sbb
and
filds
movb
in
in
je
movsl
sbb
and
fadds
ss
cmp
lock
and
push
or
sbb
adc
jnp
les
add
or
mov
sub
or
mov
sahf
xchg
je
xor
push
int3
push
movsl
pop
lock
xor
add
push
jae
dec
pop
scas
push
pop
push
mov
mov
shrl
cld
mov
push
xor
sbb
add
dec
orl
mov
push
orl
cwtl
dec
pop
roll
add
fucom
sahf
pop
cld
repz
push
scas
jecxz
inc
les
adc
mov
add
jne
popa
pop
jecxz
std
pop
pop
mov
shl
rorb
push
fcomps
call
mov
cmp
sbb
or
push
xchg
inc
or
push
popa
and
xor
roll
jl
jo
js
push
cmp
or
add
or
mov
aas
cld
jo
insl
test
popa
xor
sub
testl
sub
fcmovnu
mov
inc
adc
jne
push
je
loopne
add
xchg
mov
sbb
add
bound
push
dec
repz
loopne
xchg
adc
push
pop
xchg
inc
subb
adc
inc
movsl
push
cmpsb
ja
push
seta
loope
mov
mov
mov
mov
in
loopne
std
test
push
jo
ja
or
xchg
popa
daa
or
adcl
out
jbe
pop
or
or
mov
jae
jo
push
in
dec
and
sub
push
aas
push
or
gs
cltd
push
jbe
inc
cmp
jg
or
jnp
fidivrl
fucomi
add
mov
mov
gs
popl
inc
cmc
jmp
sbb
adc
adc
loopne
loopne
inc
dec
or
pop
push
out
loope
dec
sbb
and
pop
add
ljmp
or
rclb
nop
das
lret
push
movsb
and
push
pop
or
push
add
jl
outsl
outsl
xchg
push
scas
pop
or
inc
adc
xchg
adc
add
mov
bound
jg
fildll
cld
xchg
rcl
bound
add
ss
js
je
inc
subl
loope
dec
add
mov
cmp
fldenv
test
inc
add
cmp
xor
cld
cmpsl
adc
hlt
add
movsl
mov
sub
mov
popa
orl
sbb
mov
add
pushf
add
pop
nop
dec
adc
int
xor
mov
roll
adc
in
std
push
sub
push
add
cltd
dec
stc
repnz
push
adc
mov
pop
mov
sbb
mov
call
js
shl
jmp
fmul
not
les
insl
ficompl
je
enter
test
mov
push
int3
ffreep
pop
fsts
jmp
push
cmp
decl
dec
cwtl
cld
test
nop
aas
inc
daa
rorb
push
push
adc
testb
mov
inc
imull
inc
dec
dec
daa
pop
sub
loopne
mov
nop
xchg
or
or
aaa
popa
or
clc
jne
cltd
mov
outsl
out
aas
test
cmovo
or
inc
push
movsl
aas
cmpl
or
call
flds
mov
orl
loop
push
xchg
inc
adc
mov
mov
sbb
addl
adc
inc
pop
adc
sbb
xor
inc
cmp
fs
int3
test
pop
adc
or
or
xor
pop
sbb
lret
push
jmp
push
orl
dec
push
sub
sub
popa
gs
cld
nop
fs
enter
sub
aas
sub
imul
cmpsb
jns
dec
sub
xor
jle
pop
cld
insl
sub
push
sbb
mov
sbb
add
or
mov
call
and
ror
loope
xchg
out
adc
icebp
xchg
cmpsl
hlt
dec
mov
enter
xchg
pop
sub
mov
mov
sbb
jno
sub
arpl
loope
add
mov
sahf
scas
aam
ljmp
adc
xor
js
mov
fwait
jo
daa
cmp
add
mov
data16
inc
nop
packsswb
adc
movl
add
mov
inc
jnp
xor
xchg
push
cmc
ret
adc
push
fisttpl
add
inc
jg
push
orl
enterw
test
xchg
adc
cmp
dec
les
sbb
jne
nop
dec
sahf
mov
in
sub
sub
popl
movl
movsb
mov
dec
sbbl
int3
imul
les
mov
push
arpl
inc
sub
lcall
pop
dec
mov
push
lea
mov
daa
imul
cmpsl
mov
push
push
inc
test
orb
push
pop
xor
cmpsl
inc
cld
psadbw
mov
cld
fstl
pop
and
pop
dec
add
rcll
mov
imul
pusha
daa
add
mov
or
xchg
add
xchg
cmpl
or
or
push
and
mov
dec
sbb
out
jns
mov
lods
push
push
lock
mov
rcrb
inc
sub
or
jecxz
or
inc
push
cld
ret
add
push
add
xchg
test
mov
dec
loop
enter
nop
pop
jg
add
add
xchg
jl
loopne
rorb
xchg
test
in
add
subb
aam
aad
fisttpl
andb
pop
decb
imul
dec
push
dec
mov
jne
ret
iret
push
mov
xor
inc
add
lock
lock
dec
cmp
push
es
mov
decl
ds
sub
cld
je
sbb
outsb
aaa
sub
arpl
xchg
shlb
addb
adc
loopne
and
xchg
lea
push
data16
inc
push
adc
mov
dec
mov
and
leave
dec
or
movsb
push
jmp
lods
pop
sub
push
jb
icebp
mov
jmp
push
out
addr16
movsb
nop
sbb
pushf
xor
dec
mov
cwtl
das
sbb
test
lea
daa
jle
xchg
sbb
sbb
push
popf
outsb
or
addb
inc
enter
mov
add
lea
xchg
xor
pop
pop
cld
inc
dec
test
ljmp
inc
movsl
add
popf
lret
nop
push
rolb
push
sbb
idivb
imull
fdivs
pop
outsl
sbb
sbb
insl
cmp
mov
adc
push
add
adc
adc
popa
adc
mov
push
dec
lock
lods
and
jno
das
arpl
push
pop
mov
jl
push
mov
rcrl
mov
cwtl
add
push
aas
xor
add
sub
mulb
rcll
or
sub
aam
cmp
xchg
push
pop
pop
fcomps
mov
aaa
std
popa
jecxz
test
daa
inc
shrb
cmp
cmpb
mov
mov
js
inc
ret
jl
cmp
or
pop
adc
inc
add
roll
hlt
in
sub
sub
add
in
aad
les
cmovl
add
xchg
inc
pop
mov
xchg
mov
hlt
adcl
insl
das
adc
mov
xchg
fstl
fsubl
push
mov
test
nop
iret
pushf
ljmp
jnp
sbb
arpl
in
dec
or
mov
inc
jmp
and
xchg
and
nop
push
push
nop
push
aam
cmp
pop
sbb
push
xchg
xor
jb
outsb
and
push
andb
and
dec
push
push
mov
movntps
mov
inc
add
into
lahf
xor
xchg
xor
ficoml
mov
cmp
xchg
fisubrl
push
push
ds
sahf
sahf
mov
push
mov
testb
ret
mov
lcall
push
pop
mulb
mov
mov
jmp
mov
jnp
dec
packsswb
icebp
lret
or
add
mov
leave
cmpl
push
mov
inc
add
imul
ss
mov
xor
data16
and
sbb
push
add
fxtract
mov
jl
not
adc
or
call
es
andb
out
lcall
clc
push
push
mov
jbe
insl
add
push
inc
lea
inc
clc
incl
sbb
iret
icebp
jmp
sbb
decb
add
outsl
lock
mov
fsubrs
pop
pop
cmp
out
add
lea
pop
dec
sub
adc
mov
ja
xor
movsl
add
out
or
jp
bound
inc
dec
mov
jo
lods
fmuls
xchg
jno
decb
pop
lcall
dec
pop
lret
pshufw
jbe
push
iret
insl
or
pop
adc
jo
pop
mov
xor
adc
js
icebp
mov
xor
call
push
rolb
jg
inc
sub
or
and
in
dec
lock
movsb
dec
ja
mov
push
push
jnp
and
outsl
fimuls
addb
jge
jno
add
mov
jne
jae
movsb
addb
and
or
xor
hlt
std
jp
out
push
and
sub
arpl
or
sub
xchg
mov
pop
sub
lea
xchg
insb
push
scas
mov
repnz
cmpsl
xchg
cmp
test
std
lcall
in
pop
fcompl
and
inc
or
sub
push
push
inc
mov
sbb
adc
cmp
xlat
xor
dec
sbb
ds
push
sub
cmp
mov
and
leave
add
aad
enter
mov
cmpsl
and
cmpsl
xchg
shlb
pop
fstps
addb
push
or
out
mov
test
faddl
aaa
dec
ret
add
loopne
push
add
add
rclb
and
mov
movsb
adc
subl
and
pop
jns
out
lods
mov
or
daa
test
test
sbb
or
ja
jns
enter
test
das
ja
fsubs
test
sbb
cld
mov
sub
lods
inc
stos
in
and
mov
pusha
pop
pop
stos
mov
in
lea
jo
sbb
outsl
test
inc
aaa
inc
push
pop
cmp
xlat
dec
inc
jo
cld
push
lea
mov
xlat
push
sub
push
aaa
in
cmp
push
push
push
pop
mov
pop
sub
enter
mov
mov
jno
pop
push
and
mov
jge
jg
adc
insb
cmp
adc
outsb
inc
add
pop
nop
jecxz
mov
push
push
jmp
cwtl
mov
addr16
int3
stos
out
in
cmp
push
or
mov
inc
adc
cltd
hlt
add
nop
pop
stos
test
sbb
or
and
mov
add
and
nop
inc
scas
dec
lods
jge
nop
lea
sahf
rcrb
xchg
sub
inc
test
lock
js
aaa
xor
mov
enter
inc
jo
cwtl
daa
adc
pop
sbb
jo
add
or
pop
lret
jo
ret
shlb
popf
pop
push
int3
js
lods
movb
mov
pop
pop
ss
loop
clc
fimull
dec
aam
sub
sbb
enter
daa
icebp
mov
inc
cmp
ret
or
mov
movsl
mov
fdiv
int
out
sub
mov
push
xchg
movsl
mov
sub
arpl
test
jae
jb
dec
add
xchg
pushf
ret
ret
inc
jge
push
sub
or
notl
sbb
aad
push
das
push
pop
add
ret
jae
inc
push
adc
test
xchg
test
pop
arpl
insb
adc
jae
mov
dec
mov
inc
push
mov
add
inc
inc
mov
fimuls
pop
scas
add
or
xchg
jb
add
pop
cmp
lods
push
outsl
sbb
sub
inc
sbb
ss
mov
jle
dec
add
cmp
subl
fs
call
outsb
into
pushf
inc
nop
cld
mov
and
in
xor
inc
mov
pushf
inc
fisubs
leave
mov
push
and
xor
adc
out
out
adc
call
or
sbb
sub
lret
inc
nop
add
leave
sub
lods
mov
mov
jb
xchg
add
push
xlat
mov
or
aam
inc
fidivs
data16
in
cmpsl
inc
cmpsb
cld
insl
mov
or
stos
add
xor
inc
pop
mov
inc
and
data16
inc
movsl
cwtl
stos
cwtl
jno
cmpsb
test
cld
inc
repnz
add
add
mov
data16
orl
pop
add
inc
sub
in
fwait
inc
cmp
xor
dec
cwtl
sbb
rorb
mov
push
into
rorl
out
inc
jl
dec
push
in
push
int
adc
push
and
inc
movsl
sbb
mov
sub
lds
xor
inc
jno
daa
cmp
xchg
mov
and
mov
inc
jo
mov
dec
cmp
xchg
outsl
dec
orb
sbb
orb
ja
push
xchg
pop
dec
ja
mov
add
popa
mov
and
add
mov
jl
decb
xor
xor
cli
or
xor
hlt
mov
dec
adc
add
xor
or
inc
scas
dec
leave
xor
xchg
data16
mov
push
les
add
xchg
popf
mov
xlat
push
mov
jno
push
pop
adc
mov
xor
cs
cwtl
adc
and
mov
insb
outsl
iret
scas
jae
or
dec
push
sti
jo
xorl
push
inc
ret
push
and
scas
int3
jb
xchg
xor
sub
mov
nop
mov
cli
mov
or
add
cmp
pusha
cmp
and
stos
hlt
xor
add
lods
cmp
pop
aam
inc
mov
test
orps
loopne
mov
mov
stc
dec
dec
add
roll
mov
mov
add
adc
jno
lahf
in
fnstcw
push
jl
test
jns
bound
cmp
add
dec
lock
fst
push
imul
rol
push
dec
in
add
insl
int
add
imul
jne
mov
dec
scas
xchg
mov
lock
mov
mov
push
jg
mov
sub
aaa
mov
ret
pop
dec
sbb
es
test
cs
sbb
outsl
out
push
dec
popa
sbb
push
scas
dec
jge
jle
lods
sbb
inc
mov
xchg
bndldx
xlat
aam
in
and
mov
mov
xchg
and
push
jnp
in
push
lret
cmp
ret
nop
mov
pop
notl
loopne
sub
rorb
ret
rolb
and
aam
add
pop
mov
xchg
in
add
dec
ss
mov
mov
fldenv
call
mov
out
dec
in
jle
inc
daa
mov
stos
stos
adc
and
sub
jbe
imul
fidivs
pop
add
xor
mov
fidivs
popa
mov
mov
push
mov
mov
repnz
xor
mov
mov
or
xchg
or
mov
pop
and
adc
mov
pusha
mov
or
xchg
xor
outsl
orl
push
push
enter
lods
or
sbb
gs
enter
dec
repnz
loope
insl
call
mov
fwait
adc
scas
adc
inc
je,pt
sbb
cmp
xchg
aam
pop
add
test
nop
aas
inc
enter
scas
cwtl
pop
mov
push
inc
ljmp
and
adc
clc
sub
call
push
aaa
or
cmp
add
add
add
xor
and
pusha
mov
mov
mov
ljmp
sub
push
or
or
pop
inc
adc
mov
inc
je
sbb
mov
adc
movsb
call
add
sub
loopne
nop
cvtpi2ps
adc
cmp
inc
sub
ss
dec
loopne
cmp
popa
in
push
and
iret
dec
sbb
pop
movl
add
aas
push
or
push
movsl
outsb
push
xor
ret
addr16
je
or
dec
mov
fwait
and
dec
xchg
pushf
xchg
pop
xor
mov
push
or
scas
fmuls
add
mov
insl
adc
jl
add
add
js
jge
cmp
mov
clc
push
testl
cmp
push
push
je
daa
js
sbb
dec
inc
or
adc
pop
hlt
jo
push
int3
movsb
js
fiaddl
cs
aas
cld
ret
mov
or
inc
test
pop
xor
in
push
or
push
adc
push
xchg
add
jns
add
lret
and
fsubrl
das
jg
pop
lret
test
mov
lds
inc
sahf
add
cmp
dec
dec
loope
int
cltd
xchg
xchg
daa
daa
in
into
insl
leave
enter
in
iret
cmp
leave
leave
leave
jo
loopne
shl
in
sub
pop
sarl
xor
arpl
dec
subl
push
cmpsl
pop
cmp
in
cmp
pushf
dec
add
xchg
add
rolb
add
js
add
adc
fcoml
inc
xor
add
push
xchg
imul
ltr
in
mov
lods
sbb
mov
or
mov
stos
ja
les
test
dec
gs
pop
xchg
imulb
sahf
xchg
jge
out
test
sahf
and
mov
imul
xor
jmp
pushf
push
sbbb
add
inc
mov
iret
je
dec
push
or
cmp
mov
outsl
pop
inc
nop
pop
fsubs
lods
add
and
jmp
mov
sbb
movsl
outsb
pop
dec
push
sbb
and
adc
inc
dec
or
pop
les
dec
or
lahf
fnsave
add
jg
das
add
out
dec
add
adc
clc
out
inc
push
leave
imul
mov
dec
jae
push
mov
insb
cs
test
cmp
and
xorl
or
test
and
lock
jae
sbb
inc
or
adc
movsb
adc
mov
pop
add
popa
and
pusha
rcll
add
add
shlb
mov
dec
pop
insl
mov
mov
mov
inc
lods
subb
mov
add
sbb
pop
ds
pop
jge
cltd
push
rolb
pop
fnsave
ljmp
sbb
sbb
push
mov
sub
lods
lret
inc
mov
popf
cld
cs
fsubl
sub
and
or
rcrl
dec
mov
lea
add
mov
push
push
das
add
lahf
sub
push
les
adcb
frstor
aam
xor
lds
cmp
push
subl
sbb
es
mov
add
push
or
addb
jle
nop
inc
pop
mov
adc
xorl
nop
js
push
enter
and
add
sbb
je
test
mov
sub
das
scas
cmpsl
test
fcom
xor
mov
cmpsl
mov
pop
add
cltd
js
cmpsl
lahf
xlat
leave
enter
pavgb
pop
in
leave
leave
pushf
scas
cld
dec
fptan
in
fs
pushl
xor
ljmp
xor
ficompl
and
aaa
sahf
add
cmpsl
sub
pop
pop
sbb
es
cmpsl
pop
aaa
inc
test
push
adc
test
add
adc
push
aaa
xor
jno
pop
xor
bound
jg
cwtl
test
xor
xor
rcr
sbb
shlb
in
ja
cmpsl
outsb
sbb
xor
xor
ljmp
xor
and
mov
ss
mov
aaa
push
inc
mov
inc
push
cwtl
pop
push
dec
fnsave
mov
or
sub
xor
jecxz
jo
int3
dec
add
lods
outsb
movsb
sub
pop
pop
and
leave
cmp
mov
nop
scas
sbb
aam
xchg
inc
in
or
movsb
scas
in
lods
lea
mov
dec
imul
aam
repz
mov
fcoms
jae
sbb
repz
scas
stos
or
lods
inc
cmp
aad
repz
mov
add
mov
repnz
pusha
dec
repz
mov
push
add
inc
adc
xor
mov
pop
in
mov
sub
mov
bound
subl
add
mov
and
cmpsb
push
and
test
cmp
dec
fimuls
inc
lds
or
mov
xorb
sub
out
add
xor
or
or
xchg
push
into
xor
lea
xchg
jbe
ja
daa
shlb
leave
pop
adc
push
pop
loopne
in
add
mov
test
xchg
xor
shrb
scas
das
adcb
cmp
cmp
pop
clc
mov
setbe
pop
sarb
mov
mov
ret
mov
in
add
sbb
fdivrl
cwtl
push
add
imul
mov
sbb
dec
les
rcr
lea
pusha
je
mov
sbb
xchg
nop
xchg
xlat
xchg
inc
fidivs
sbb
and
insl
loopne
cmp
loopne
xchg
pop
in
xchg
pop
cs
cmovs
add
push
fs
leave
mov
sbb
addr16
in
popf
in
out
jns
jb
jbe
rorb
call
inc
imul
setae
xchg
lds
add
call
mov
int3
add
in
iret
push
aaa
push
fwait
xchg
dec
iret
cld
repnz
sbb
jno
add
insb
imul
jl
aas
iret
mov
mov
push
enter
mov
mov
fimuls
sbb
pop
rcll
pop
dec
pop
sbb
jae
mov
adcl
mov
in
and
push
mov
stos
bound
push
repnz
js
pop
leave
outsb
sub
adc
cwtl
mov
jno
dec
imul
mov
jae
iret
rcll
movb
subb
mov
in
into
add
inc
inc
cmp
je,pn
xchg
inc
sbb
adc
dec
mov
iret
xchg
xchg
mov
sbb
dec
les
and
iret
sarb
xchg
ror
call
lea
imul
and
cmp
mov
imul
mov
dec
aaa
iret
movsb
mov
jbe
jecxz
inc
sti
jmp
cmp
cld
mov
jns
sub
xor
and
repnz
jno
mov
je
mov
adc
add
sbb
fisttpl
and
aam
into
int3
mov
je
fisubrl
iret
inc
inc
cmp
roll
jp
into
insb
imul
xchg
ljmp
push
adc
pop
je
aaa
xchg
cmp
xor
fimull
push
push
jecxz
jae
push
sub
xorb
sub
cmp
inc
rol
and
add
and
adcb
dec
push
adc
mov
jmp
jge
dec
push
js
and
je
ret
scas
push
mov
add
pop
or
sbb
in
loop
sbb
iret
xorb
fbstp
pmaxsw
xor
ret
movsb
inc
push
sub
push
fadds
inc
mov
loopne
lea
and
add
and
bound
mov
nop
add
enter
aam
popa
sbb
shrl
and
in
add
fistps
adc
jo
filds
ja
and
incl
cmp
or
mov
mov
mov
xchg
outsl
xor
in
inc
out
out
sbb
sbb
mov
jg
lahf
testl
lods
out
jg
push
xchg
adc
in
dec
ss
out
dec
lock
out
sbb
push
jb
out
jnp
lods
movups
addr16
out
jg
push
or
or
mov
lcall
aad
or
or
shll
cmp
lock
or
sbb
pop
dec
cltd
leave
inc
aad
enter
lock
leave
inc
adc
xor
adc
movsb
add
xor
mov
ds
inc
lcall
icebp
test
mov
icebp
inc
dec
shl
mov
push
jl
addr16
cld
enter
daa
sbb
addr16
repnz
cmp
fstpt
xor
leave
mov
push
je
call
inc
pop
inc
xchg
nop
mov
in
pop
dec
push
lahf
or
inc
mov
or
sbb
rcrl
stos
xlat
je
push
jmp
cmp
ja
xlat
add
dec
push
push
jle
or
jns
sbb
push
inc
xchg
sarb
adc
add
or
xchg
out
cmpl
fwait
ds
orl
loopnew
inc
adc
test
cmpl
shlb
fcoml
scas
xor
mov
dec
mov
aad
jo
dec
adc
xchg
pop
mov
cs
xchg
mov
dec
lds
out
push
adc
cmpsb
test
jb
out
out
icebp
inc
inc
dec
add
enter
push
out
out
testb
sbb
lret
loopne
push
lods
arpl
adc
sub
mov
jne
mov
xor
jne
test
add
inc
sub
inc
rcll
sub
cmpsb
mov
push
push
dec
icebp
negb
das
div
pop
mov
inc
and
xor
pop
and
cltd
mov
xor
push
cmp
mov
ret
stos
add
push
mov
jbe
sbb
add
dec
add
orl
xor
adc
add
ja
cmp
orb
and
pop
add
push
das
xchg
icebp
and
dec
dec
rcrb
imul
pop
xorb
clc
jne
mov
adc
jb
in
pop
lds
movsb
test
loopne
push
jecxz
adc
or
cwtl
inc
inc
std
sbb
js
add
push
test
inc
add
rclb
testb
sti
das
jmp
jle
adc
inc
mov
fiaddl
adc
clc
push
push
adc
dec
mov
dec
in
adcb
adc
sbb
insb
imulb
fwait
sbb
push
jg
insl
mov
les
rcrb
jl
sbb
or
or
add
sti
pop
negl
jecxz
cld
cmc
push
lret
psadbw
std
mov
pop
add
decb
push
add
pop
les
adc
wbinvd
add
or
push
or
pop
js
mov
or
insb
jno
setp
add
into
pop
daa
mov
movsl
dec
inc
out
rcrl
sysenter
mov
das
adc
in
pusha
enter
sbb
adc
cmpsb
in
add
mov
movsb
cmp
add
js
add
outsb
or
and
addb
cmp
enter
push
cld
inc
push
mov
jne
nop
sub
dec
sub
or
clc
test
add
mov
mov
adc
je
ret
pop
movsl
pop
adcb
dec
js
sub
add
lock
mov
mov
ljmp
mov
ja
mov
add
pop
mov
popa
andl
dec
or
out
pusha
inc
push
repnz
loope
jmp
and
push
xor
scas
add
pop
pop
loopne
mov
adc
test
or
push
rcrb
adc
imul
mov
xchg
sub
push
push
add
sub
mov
pop
lds
mov
add
jae
add
or
gs
add
push
inc
adc
sbb
pop
or
rorl
add
int3
inc
jns
enter
inc
add
jns,pn
cmp
jae
ljmp
pop
popa
dec
les
jle
jo
bound
fwait
jne
inc
or
mov
mov
dec
rol
sbbl
push
imul
inc
jb
les
dec
or
jmp
dec
add
or
add
mov
mov
or
ret
lea
push
xor
jo
cmp
js
inc
mov
dec
test
out
jnp
and
push
mov
pop
addb
push
mov
mov
adc
pusha
inc
outsb
mov
inc
fdivr
adc
bound
das
or
add
mov
or
aaa
push
inc
loop
in
test
jno
test
mov
pop
test
sbb
sbb
inc
call
and
sbb
es
push
imul
sbb
pop
push
mov
add
out
lods
mov
sub
das
pop
mov
jecxz
push
mov
fdivs
aam
add
mov
mov
cmp
in
add
cwtl
sbb
jae
and
add
push
mov
or
test
and
loopne
inc
rcrl
xchg
inc
inc
lea
mov
test
jl
add
sub
add
mov
push
xchg
cmp
inc
lock
data16
mov
ret
push
mov
add
nop
push
pop
imull
xor
pop
jbe
call
je
push
dec
or
mov
das
int3
push
insb
inc
add
js
or
inc
or
push
and
add
nop
mov
mov
in
loope
adcl
fnstsw
push
pop
xlat
repnz
mull
pusha
push
bswap
mov
popa
pop
push
rorl
or
jmp
and
push
aaa
movhps
xor
xchg
ss
mov
and
jo
loope
or
dec
gs
inc
cmp
inc
jae
addl
add
das
pop
push
fwait
cmp
dec
jge
inc
mov
cltd
sarl
cmovbe
push
xchg
mov
add
inc
and
insl
das
jge
mov
inc
lcall
sub
jo
xchg
shrb
inc
inc
es
daa
inc
sahf
testb
and
xchg
adc
and
loope
add
mov
add
add
inc
addl
hlt
sbb
push
setl
clc
add
call
xor
outsb
or
add
getsec
inc
xchg
add
push
inc
orl
mov
push
dec
xor
punpckhwd
fisubs
idivb
lea
aas
and
imul
pop
outsl
aam
push
inc
mov
sub
movsl
mov
jnp
mov
mov
dec
sub
push
sbb
bound
les
xchg
bound
and
push
xor
jae
cmp
mov
lea
inc
popf
es
jg
test
sbb
insb
adc
sub
arpl
scas
adc
aaa
and
dec
add
sub
outsb
dec
pop
mov
add
popf
fadd
movsl
subl
dec
sub
int
or
sbb
push
pop
sub
stos
sbb
and
jg
int
mov
repz
sahf
pop
das
pop
sub
or
adc
in
les
sub
push
mov
push
dec
dec
das
xchg
es
mov
maxps
inc
imul
mov
adc
subb
adc
xchg
mov
testl
mov
inc
add
nop
aad
outsb
add
mov
add
cmp
jle
arpl
or
add
jae
cmp
jecxz
movl
push
mov
xorl
popf
inc
roll
data16
cld
mov
add
xchg
xor
cmpsb
add
hlt
mov
mov
pop
int3
cmp
inc
and
mov
adc
iret
mov
adc
push
pop
frstor
shlb
test
pop
xchg
push
xchg
nop
ss
daa
and
cmp
and
dec
push
cmc
ret
je
pop
cmp
sar
add
xor
insl
adc
lret
js
and
ss
loopne
pop
sub
push
fstpt
adc
add
or
jo
xchg
add
add
sbbb
add
mov
push
dec
ljmp
or
xchg
xchg
adcl
add
push
pop
sub
jecxz
mov
add
stos
adc
shlb
scas
cmp
mov
nop
inc
pop
adc
jge,pn
stos
adc
add
or
add
icebp
and
pop
push
or
mov
lods
sbb
nop
int3
jae
or
iret
in
roll
sbb
pop
pop
test
sub
roll
or
cmpsl
cmpsl
or
pop
and
mov
test
sbb
popf
xor
nop
iret
hlt
ficoml
hlt
adc
inc
push
push
inc
mov
sti
loope
hlt
sti
dec
stos
shlb
pop
sbb
mov
cmp
cli
add
por
xchg
jbe
shl
movsb
aaa
adc
add
xor
and
movl
rorl
popa
ja
rcr
shr
fadds
jns
push
cmp
mov
push
pop
inc
inc
xor
sub
adc
pop
int
and
clc
cmc
xlat
lods
pop
ja
xor
mov
mov
iret
daa
xchg
or
or
lock
icebp
push
les
sub
outsb
subl
inc
xchg
test
add
or
or
mov
push
sbb
adc
lock
mov
adc
or
add
sti
or
call
loope
aaa
push
ror
je
fisttpll
fiaddl
dec
or
xchg
in
in
out
movsb
and
mov
xor
dec
je
neg
adc
iret
push
xchg
in
push
sub
adc
pop
mov
sub
cmp
inc
icebp
sub
imul
xchg
pop
insb
fldcw
add
ljmp
dec
leave
ficompl
mov
dec
xchg
xchg
fcomps
push
add
sbb
in
sahf
add
xchg
xor
mov
cmp
push
push
mov
das
repz
jo
imul
shlb
or
arpl
inc
pop
mov
lock
sub
es
jge
xchg
sbb
ljmp
data16
lods
sub
jne
jg
fadds
daa
cltd
fdivs
or
add
in
in
inc
adcb
addb
xchg
push
cmp
call
pushf
fnstenv
pop
or
stos
add
pcmpgtw
dec
mov
decl
jne
aaa
mov
aam
inc
xlat
lea
in
xor
sbbb
movsb
or
pop
mov
sbb
movsl
pop
mov
mov
sub
loop
and
mov
rol
mov
add
test
or
xor
cmp
mov
xor
inc
jp
mov
cli
mov
aad
mov
pop
adc
nop
icebp
and
sbb
cmp
xor
sar
jb
add
mov
mov
icebp
addb
lahf
inc
cli
rcrl
push
lea
add
add
jbe
dec
popa
dec
inc
push
push
out
or
stos
cmp
enter
ret
push
adc
roll
xlat
gs
fiadds
not
add
jne
outsb
or
inc
push
cwtl
pusha
loope
call
sbb
dec
or
shr
or
cmp
xor
add
and
dec
jne
mov
dec
push
jle
xor
pop
or
mov
cmpsb
push
cli
divb
push
or
popa
loopne
mov
mov
cwtl
inc
movsl
sub
jae
mov
cmpsl
pop
pop
cmp
add
popa
add
dec
xchg
test
pop
pop
insb
cmp
icebp
pop
les
xor
lcall
loope
add
dec
cmpb
xchg
push
adc
test
adc
aaa
rorb
mov
jb
mov
nop
fists
sbb
add
sbb
fwait
cld
shlb
popa
cli
jne
mov
shrb
add
movsb
and
fcoms
ret
movsb
mov
add
lcall
clc
push
fs
lock
aad
add
lds
pop
mov
mov
in
pop
dec
add
jo
test
aaa
or
adc
hlt
lret
pop
data16
aaa
inc
and
adc
xchg
adc
pop
sahf
imul
sbbl
jb
pop
jl
inc
add
neg
lea
xor
pop
imul
daa
xchg
call
dec
lock
inc
xor
pusha
xchg
sbbb
cld
jne
mov
pop
pop
xor
sarb
mov
ret
and
adc
xor
xchg
adc
lds
add
inc
or
add
inc
mov
push
sub
push
insb
xchg
imul
addb
inc
xchg
es
test
jl
or
mov
aam
add
adc
dec
mov
aam
inc
adc
add
jb
and
sar
adc
imul
enter
test
fistpl
mov
jo
and
sbb
xchg
mov
stos
lea
daa
or
inc
dec
dec
das
leave
les
jge
in
adc
dec
out
insb
sub
inc
cmp
out
test
loopne
fwait
call
push
xor
fnsave
leave
xchg
in
popf
inc
aam
out
push
or
mov
hlt
in
pop
and
or
mov
loopne
rol
jns
popf
sbb
and
loopne
mov
cmc
mov
in
cmpl
sbb
and
xor
movsb
int
inc
cmpsl
xor
ss
xchg
es
nop
nop
or
call
lcall
ljmp
sahf
dec
add
mov
xor
mov
and
lret
ja
pop
mov
pusha
pop
jns
insb
je
dec
inc
add
or
adc
jo
xchg
or
test
dec
movsb
xchg
sbb
mov
xchg
inc
push
xchg
adcl
imul
dec
cmp
cltd
pop
andb
rorb
cld
gs
dec
xchg
xchg
test
push
cmp
fildl
mov
sbb
mov
gs
lods
inc
movsb
sti
xorb
in
lret
inc
dec
add
cmp
inc
nop
xor
stos
or
mov
xchg
or
cmp
jo
lods
popa
jb
xlat
xchg
xchg
inc
lock
popf
cmpsl
dec
adc
lea
fwait
cwtl
pop
mov
push
lock
loope
fsubrs
dec
and
add
loopne
lods
cs
sbb
or
mov
mov
mov
sub
sbb
push
scas
mov
add
seta
mov
inc
push
leave
or
cs
mov
je
stos
mov
sub
clc
das
in
rorb
dec
ret
popa
pop
fs
inc
jp
pop
cs
sbb
scas
lods
add
jno
addb
iret
das
or
stos
cmpsl
mov
jp
mov
outsl
rolw
cld
add
dec
jns
and
jg
imul
pop
jne
mov
lods
inc
jns
and
lea
inc
aas
insb
push
and
xor
pusha
xchg
push
rorb
push
mov
out
outsl
adc
add
ljmp
and
addl
xchg
jle
cmpsb
dec
pushf
divb
fsubs
pop
lods
sub
arpl
ror
sub
push
pushf
xor
dec
rcl
aam
sub
clc
shlb
in
and
xor
ljmp
adc
clc
sub
push
gs
pop
add
jle
aam
cld
outsl
sub
sub
add
cmpsb
add
sbb
lcall
cwtl
test
lods
lahf
stc
pop
inc
fsubp
inc
mov
sub
jecxz
aad
mov
mov
adc
insb
push
xchg
xor
dec
or
xlat
add
inc
stos
outsb
jl
add
lock
fisubrs
push
sbb
lods
xchg
inc
arpl
jae
jno
in
pop
mov
push
in
out
xor
pushf
arpl
andl
sbb
cld
pop
aam
push
out
inc
loope
dec
dec
ja
jns
fnstsw
dec
mov
fadds
adc
cmp
xor
or
add
arpl
dec
jne
sub
cmp
mov
in
bound
cmpsl
repnz
or
cmp
or
testl
outsl
and
sub
adc
cmp
rcrl
push
jle
andl
xor
jb
and
lret
xor
or
xchg
test
fisttpl
adc
jb
xchg
sbb
xor
popa
dec
mov
or
notl
fcmovnb
pop
pop
inc
stos
or
add
pop
and
rorb
push
loop
test
das
mov
push
cmp
xor
and
mov
inc
fistps
adc
adc
inc
out
mov
jnp
sub
or
or
mov
jae
mov
lods
test
add
movsb
test
pop
xchg
inc
jge
popf
sbb
clc
lods
sbb
and
push
lods
cmp
aad
punpcklbw
push
xchg
daa
aaa
add
in
xor
enter
mov
xor
leave
leave
leave
jle
repz
in
fs
xchg
xlat
xor
ja
in
dec
ss
cmp
xorb
pushf
mov
fstps
cmp
dec
dec
inc
data16
adc
push
xchg
daa
daa
daa
mov
xchg
xchg
xchg
insl
mov
inc
cmp
leave
mov
sbb
test
inc
hlt
or
clc
aas
inc
add
xchg
push
sbb
pop
clc
dec
add
pusha
sub
fldl
icebp
pop
and
inc
xchg
sub
insb
dec
or
push
dec
ss
or
jno
nop
adc
daa
xorl
std
adc
cmp
mov
adc
movsl
xor
inc
mov
push
push
adc
inc
cmc
sub
pop
fsub
inc
jae
pop
js
insb
mov
sarl
sub
or
xchg
push
dec
rorb
push
retw
mov
adc
lret
sbb
ss
xchg
outsb
aam
ja
cltd
jnp
xor
push
sar
or
mov
add
mov
pop
pop
xor
shlb
imul
lods
mov
imul
adcl
loope
dec
inc
pop
les
xchg
sbb
push
push
adc
gs
jge
ja
jo
inc
add
adc
push
enter
mov
hlt
mov
orl
arpl
mov
popf
inc
mov
mov
pop
dec
insb
outsl
xchg
xor
pop
out
fwait
lods
outsl
add
in
loopne
adc
scas
push
sub
outsb
insl
dec
dec
fisubrl
jg
inc
mov
mov
sub
sub
int3
dec
inc
mov
xor
dec
xor
push
lea
xor
test
test
bound
xchg
or
sbb
push
push
inc
fildl
push
dec
adc
stos
and
mov
es
jae
xor
call
jae
inc
stos
add
dec
in
insb
pop
xor
dec
or
mov
add
inc
inc
sarl
and
push
mov
xor
push
or
dec
inc
call
cmp
pop
mov
mov
push
push
add
arpl
dec
inc
xchg
arpl
scas
jle
add
push
cmp
jo
stos
sbb
rcll
ret
out
gs
jno
xchg
adc
test
aam
fimuls
add
sbb
push
outsb
lea
xorb
in
data16
gs
sub
pop
orl
lcall
pop
aad
sarb
mov
pop
pop
pop
roll
jg
and
jp
dec
icebp
shll
flds
adc
xor
xchg
inc
add
dec
lods
adc
mov
movsb
inc
mov
sub
sbbl
add
dec
add
inc
lahf
fsubs
dec
add
sbb
fwait
sbbl
xlat
shrb
ja
sub
hlt
je
and
or
cmp
mov
in
mov
dec
jecxz
push
leave
imul
or
add
xor
adc
or
xchg
sbb
in
ret
les
jecxz
push
mov
lcall
adc
and
mov
or
clc
push
xor
add
lods
lods
stos
enter
adc
ljmp
and
sbb
add
jne
xorb
dec
sarb
iret
adc
adc
sbb
jbe
or
push
xchg
loop
xor
aaa
loopne
imul
add
or
adc
pop
add
mov
adc
loope
or
aam
icebp
xor
into
and
add
les
add
mov
inc
out
pop
or
push
mov
xor
and
sub
pop
and
pusha
sbb
das
les
out
push
sbb
xchg
mov
jecxz
inc
ja
ja
mov
adc
sbb
lods
movb
aaa
sub
dec
cmp
mov
rolb
out
rolb
sub
cwtl
mov
test
xor
xchg
call
mov
pushf
addb
insb
add
in
push
jp
rcl
cld
lret
add
and
out
mov
adc
rolb
out
xor
into
pop
pop
rcrb
sub
push
movb
rcll
xor
sub
das
sub
xchg
mov
and
add
pop
adc
ds
sbb
xorb
jno
mov
dec
add
or
dec
les
pop
sbb
popf
inc
push
adc
adc
pop
xchg
sub
dec
call
imul
sbb
pusha
dec
lahf
cs
insb
xor
fildl
inc
and
pop
lock
inc
ret
mov
dec
cmpl
jecxz
push
loope
test
pop
jb
shl
push
inc
cli
jo
faddp
jmp
mov
push
mov
sarb
out
xor
fs
out
xchg
cmp
enter
inc
popa
and
jo
cld
arpl
ds
in
inc
add
pop
lods
add
jne
push
push
fildl
or
das
mov
and
jo
or
lds
pop
fnstcw
or
push
add
xor
rcrb
jmp
cmp
insb
sub
inc
jmp
in
pop
mov
inc
int
or
movl
push
xchg
pop
add
push
jecxz
xor
xchg
mov
aad
and
std
mov
add
jmp
adc
inc
lock
xor
pop
or
pop
mov
nop
sub
cwtl
lods
xchg
adc
xlat
mov
int3
inc
mov
adc
pop
enter
int3
inc
in
bound
popf
mov
ljmp
hlt
out
shrb
imul
les
xchg
jo
xor
call
sbb
xchg
push
out
dec
call
mov
sbbb
adc
sbb
enter
das
enter
fimuls
out
cwtl
or
jns
or
negb
or
jp
mov
inc
xchg
clc
xlat
adc
ret
jp
pop
push
xlat
sarb
xchg
add
or
aam
add
sbb
cmp
sbb
add
sbb
xchg
cld
cmpsl
ret
ja
jp
je
push
xchg
hlt
das
filds
xorb
leave
adc
mov
out
adc
sub
stc
mov
jnp
movsb
pushf
dec
mov
xor
add
dec
dec
jp
nop
aam
inc
test
imul
cli
push
sbbb
dec
dec
pop
divb
push
sbb
push
push
jae
pop
out
mov
lcall
movsb
fnstsw
inc
ss
jbe
add
enter
cmpsl
push
inc
adc
push
inc
inc
mov
mov
inc
push
push
push
jg
cmp
nop
push
dec
adc
inc
addr16
pop
or
sbb
add
or
push
ja
mov
adc
hlt
out
mov
pusha
push
pop
decl
dec
in
xor
and
enter
push
pop
addl
dec
or
pop
stos
and
cmp
int
or
mov
add
movsb
push
outsl
pop
int3
sbb
push
sar
inc
or
cmp
shlb
push
xchg
dec
dec
add
pop
sub
ret
ss
ljmp
int3
enter
shll
cwtl
insl
push
push
imul
or
xor
sub
pop
pop
rorl
jbe
mov
nop
or
mov
jmp
pop
mov
popa
xor
and
adc
cmp
sbb
test
filds
xchg
mov
les
or
jmp
fwait
jne
std
dec
clc
and
add
sub
ret
dec
add
cltd
inc
pop
lock
xchg
insb
loope
sub
dec
add
xchg
xor
pop
xchg
mov
add
lods
add
adc
sub
jg
dec
loope
cmp
mov
push
sbb
dec
add
fcomps
adc
in
and
imul
cmp
push
imull
mov
mov
sahf
and
jmp
xor
sub
jmp
and
aad
ffree
mov
add
pusha
ss
add
jo
sti
cmp
xchg
push
dec
insb
das
pusha
aas
xchg
aam
add
jnp
ret
dec
fisubrl
loope
test
lahf
pop
shrb
data16
or
cmp
jg
les
pop
imul
movsb
dec
lret
addr16
hlt
or
add
cmp
call
movlps
lods
and
enter
popa
jns
insl
incl
ds
jl
rol
inc
sbbb
in
sbb
push
push
dec
jns
pop
subl
and
jo
outsl
je
outsb
stos
xlat
add
pop
imul
rorl
sbb
es
ret
dec
stos
sti
sbb
add
mov
fnstsw
hlt
add
je
sbb
fmuls
stc
sub
in
addb
push
mov
inc
orl
imul
fdivs
and
jne
aas
jmp
fsubrs
lcall
inc
aam
mul
and
stc
pop
and
mov
pushf
push
or
sub
xor
movsl
inc
xchg
mov
add
or
or
dec
push
das
gs
dec
aam
cmp
mov
mov
add
pop
sbbl
jge
push
sbbl
js
sub
or
mov
mov
out
inc
sub
or
nop
pop
mov
push
xor
push
icebp
icebp
sub
nop
sbb
dec
inc
push
inc
ds
push
push
inc
jecxz
jne
sub
popf
inc
leave
pushf
push
sub
out
mov
and
push
add
sub
jno
adc
jmp
sbb
inc
mov
aaa
and
add
loopne
dec
push
arpl
rorb
mov
push
adc
aad
and
or
mov
sbb
fadds
mov
icebp
adc
daa
leave
mov
icebp
lret
pusha
leave
xchg
adc
add
bound
jne
and
cwtl
push
xor
andl
aaa
jae
ret
push
mov
or
pop
cs
ss
push
fidivrs
ret
test
inc
xor
adc
mov
jns
dec
and
add
clc
xchg
adc
stos
and
xor
mov
jae
jle
movsb
imul
je
loopne
insb
inc
addr16
sbb
fwait
ja
and
nop
jbe
xchg
imul
jge
sub
insl
mov
mov
add
imul
inc
jge
in
adc
add
inc
xchg
pop
add
and
push
xchg
enter
cmpsl
dec
mov
sbb
addr16
mov
lea
xor
test
inc
sbbb
lahf
faddl
pop
loopne
pop
inc
xchg
pop
xor
inc
insl
sub
ret
sti
and
dec
mov
xchg
mov
mov
cmp
lock
sbb
out
rolb
cmp
mov
mov
or
sub
xacquire
call
loopne
test
jbe
test
rclb
inc
mov
xor
test
mov
cmpsl
sub
les
fiaddl
push
pop
mov
dec
repnz
push
rcll
pop
in
cmpsb
sub
lds
xor
dec
mov
icebp
nop
in
xlat
inc
sbb
loopne
inc
mov
add
inc
fcomps
xchg
pop
fcoml
mov
dec
and
and
cmp
loop
negb
cltd
call
xor
rclb
or
xchg
inc
dec
repnz
mov
inc
insb
enter
test
inc
add
in
push
in
lahf
sbb
xor
pop
fistl
shlb
lea
xchg
push
jmp
jmp
xlat
ret
repnz
and
rcll
jnp
inc
add
xlat
aam
nop
dec
cs
pop
lock
in
adc
xchg
pushf
bound
inc
movsb
pop
addr16
add
leave
dec
dec
xor
xor
leave
leave
leave
xor
leave
aaa
cmp
cmp
leave
leave
leave
cmp
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
leave
das
adc
adc
leave
leave
leave
adc
leave
pop
sbb
sbb
sbb
pushf
pop
add
add
add
pushf
pop
or
or
or
pushf
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
add
and
push
pusha
or
outsl
in
fadd
into
push
add
push
imul
inc
jb
jo
imul
and
cmp
add
sbb
jmp
pop
sub
dec
pop
sub
sbb
shll
xlat
pop
inc
xor
pop
filds
xor
add
pop
int
and
and
add
and
pop
fwait
pop
mov
adc
push
imul
lods
or
inc
xorl
cmp
or
data16
fsubs
push
gs
mov
testl
add
or
je
shll
add
add
sti
mov
sub
pop
adc
mov
paddsb
adc
int3
xchg
nop
pop
dec
push
int3
xor
and
or
shll
lods
ror
sbb
jno
sbbl
cltd
lods
xor
data16
stos
mov
or
je
arpl
insl
adc
push
je
rcr
rcrb
popa
insb
or
mov
add
mov
xor
inc
xchg
loope
or
cmpsl
nop
jl
imul
adc
shrb
or
bound
sarl
sub
and
in
cld
push
jecxz
movsl
sub
packsswb
mov
dec
sub
fwait
push
imul
add
add
popf
push
ret
ja
pop
cld
jle
jo
outsl
lcall
cmp
add
sbb
or
pop
ja
add
outsl
or
dec
inc
add
sbb
mov
inc
insb
add
adc
or
or
cmpb
inc
pop
imul
int3
scas
ret
lcall
or
out
push
and
or
adc
adc
dec
mov
or
cmp
fnstenv
xchg
sbb
mov
jnp
pop
xor
aas
mov
inc
sbb
adc
jbe
pop
sub
jg
dec
sahf
inc
pop
in
add
pop
push
sbb
adc
pop
test
pop
mov
pop
int3
or
cld
mov
xchg
jne
xchg
dec
movsb
iret
push
sbb
inc
jb
fimull
mov
arpl
add
dec
inc
stos
sbb
imul
mov
jge
adc
in
inc
int3
popa
addr16
inc
outsl
adc
dec
jae
es
decb
or
and
iret
add
push
adc
test
add
test
add
popa
fildll
mov
pushl
mov
sahf
add
movsb
daa
scas
or
sti
jns
mov
mov
add
or
fadds
stos
outsl
or
jl
or
pop
fs
push
cmp
add
sbb
fdivp
lock
jg
out
gs
mov
adc
jo
push
fsubs
and
push
fildl
adc
inc
ja
add
dec
mov
add
ret
or
adc
mov
cwtl
es
insb
loope
mov
test
call
xor
ja
dec
rorb
mov
lret
arpl
imul
xlat
pop
mov
pop
lret
sbb
mov
test
or
cmp
into
xchg
pop
push
mov
sbb
and
sub
andl
dec
sub
dec
ss
dec
out
and
mov
xchg
xor
daa
nop
jbe
mov
push
dec
push
adc
test
mov
inc
push
or
jl
pusha
mov
cwtl
mov
loop
mov
mov
mov
mov
xor
push
xor
inc
loope
jns
inc
leave
test
pop
mov
adc
xchg
mov
push
dec
inc
or
push
jbe
fwait
lcall
or
jno
mov
rorl
mov
add
mov
scas
pop
sbb
in
or
imul
rolb
das
outsl
fadds
mov
mov
or
ss
mov
mov
mov
add
movsl
inc
and
or
and
mov
jmp
loopne
mov
cmp
pop
push
add
arpl
xlat
leave
push
mov
pusha
jl
pop
lock
addb
mov
or
loopne
ds
adc
jbe
je
out
xchg
inc
push
or
mov
shrb
imul
mov
gs
movl
insb
xchg
or
and
mov
mov
dec
ficoms
mov
xchg
or
fcompl
sbb
cmpsb
ja
push
xor
dec
push
and
arpl
dec
repnz
pop
push
jg
mov
mov
adc
in
cltd
xchg
push
imul
mov
add
insb
fadd
jmp
imul
loopne
stos
insl
dec
and
mov
das
in
loope
pop
pop
bound
and
lcall
ret
cld
xor
xor
sub
imul
or
push
cwtl
xor
cmp
jno
fwait
sarb
fadds
jg
psllw
add
imull
xor
ss
inc
ss
push
ret
les
fsubrl
sbb
aam
sub
inc
dec
pop
icebp
sbb
fadd
in
mov
adc
in
dec
insl
jno
sub
xor
insl
push
cmp
or
shrb
adc
dec
ss
push
mov
leave
mov
addb
repz
push
cmpsb
pop
dec
mov
dec
repz
es
mov
enter
cld
mov
cmp
insl
adc
test
xor
loopne
mov
addr16
mov
cmp
test
xor
insb
in
xchg
xor
lods
or
or
push
call
arpl
inc
ja
ja
push
mov
call
jnp
dec
shlb
or
mov
lahf
or
dec
pop
or
pop
adc
int
fdivrs
or
ds
sbb
lods
aaa
push
add
addl
idivl
outsl
add
cmp
mov
aad
xchg
test
lock
es
mov
dec
add
test
mov
loop
adc
insb
arpl
es
push
or
sbb
faddl
sbb
inc
xchg
fdivs
jae
sbb
sbb
fsubl
jbe
adc
lahf
push
icebp
mov
fists
xorl
push
movb
dec
outsl
inc
orb
ja
das
and
pop
adc
mov
push
je
push
jge
xchg
enter
dec
sbb
lret
or
cwtl
or
sub
xchg
and
loopne
into
test
add
in
xchg
jno
or
mov
mulb
das
xor
xor
aam
and
and
push
ss
movsb
adc
or
jecxz
scas
adc
xchg
sbb
xor
je
dec
mov
xor
inc
scas
inc
iret
seto
add
lret
btc
repnz
add
lock
fisubrs
add
push
into
xchg
sub
add
adc
shl
push
add
and
lcall
push
bndldx
jns
iret
ds
sbb
nopl
sbb
jl
push
and
pop
add
sub
stc
and
sti
and
insb
jp
jp
mov
loopne
bnd
mov
mov
das
pop
and
lret
xor
add
or
faddl
pand
bswap
addl
jle
je
jle
jb
out
or
add
mov
pop
xor
add
leave
sbb
fdivrs
jns
pop
adc
xor
pop
mov
daa
outsl
or
xor
push
add
les
mov
inc
flds
xchg
sbb
es
ret
add
add
sbb
int
push
data16
push
dec
xchg
push
mov
loop
cmp
and
ljmp
cmp
add
in
adc
sbb
inc
or
cmp
xor
inc
or
roll
rorl
sbb
add
add
or
gs
addl
pusha
xchg
fwait
pop
mov
xchg
pusha
xchg
jge
dec
mov
inc
and
sub
out
xor
xchg
mov
dec
adc
jnp
mov
lock
mov
je
xor
add
cvtps2pi
xor
repz
pop
inc
jo
leave
lods
pop
adc
shll
andl
fsubrl
sbb
mov
in
or
insb
les
roll
mov
lods
lock
cmp
les
or
nop
jbe
out
add
or
jo
adc
push
pop
jae
int3
cmpsl
bound
fdivrs
cld
adc
push
imul
add
icebp
push
lock
std
add
in
or
in
mov
or
jp
adc
hlt
and
mov
xchg
movsb
pop
add
sub
add
insb
ja
movsb
insb
sub
cwtl
leave
mov
add
push
or
xor
mov
loopne
insl
or
shll
mov
and
sbb
xchg
pop
pop
jb
adc
xor
dec
add
add
dec
jnp
pop
popf
inc
pop
adcl
and
or
pop
in
mov
and
sbb
cmpsl
ljmp
testb
je
or
jns
nop
push
inc
dec
hlt
test
leave
test
adc
ret
in
dec
hlt
pop
cmp
and
mov
or
lret
add
mov
and
xchg
call
cwtl
jo
jmp
and
xor
imul
adc
fs
loopne
sub
sub
sbb
addr16
sub
inc
mov
push
mov
mov
pop
scas
xchg
loopne
int3
sub
xor
jnp
pop
popa
push
push
or
cmp
cmc
sbb
cwtl
insl
dec
insl
xchg
ja
push
and
jl
xor
xchg
fadds
fisttps
in
sbb
mov
pop
ret
or
fdivrl
or
dec
movsb
mov
int
adc
push
xor
outsl
sbb
sub
mov
mov
xor
push
mov
orb
jmp
lret
inc
push
test
aad
fadds
dec
out
sahf
adc
cmp
mov
add
sbb
push
je
int
repz
or
sarb
repz
cmp
js
or
cmpsl
stc
cmp
jbe
jo
add
inc
jge
jnp
jl
add
or
pop
movsb
xlat
sarl
push
pop
inc
ficomps
movsl
xchg
dec
jp
imul
incl
inc
ret
mov
shlb
outsb
aam
add
add
push
sbb
lea
and
lods
inc
xor
push
into
test
sub
orl
addl
insb
orl
add
bsr
add
test
test
mov
jb
add
pop
mov
cmp
add
in
repnz
sbb
jns
les
rcrb
nop
repnz
and
sbb
nopl
sub
pop
cld
repnz
lock
and
mov
cmpsl
test
push
mov
add
cmp
es
push
mov
push
jmp
mov
jmp
nop
mov
dec
adcl
inc
cltd
push
rcll
and
push
andl
adc
push
xchg
cltd
in
cltd
mov
adc
adc
lret
push
or
ret
or
push
inc
sub
shll
insb
out
rclb
dec
inc
mov
xor
inc
gs
pop
dec
or
sbb
adc
inc
dec
inc
es
popa
roll
test
sub
xchg
push
push
dec
inc
or
fistpl
mov
subl
sbb
jo
fistpl
test
pop
fisttpl
or
pop
rcrl
adc
jmp
daa
sbb
mov
test
std
ret
lock
mov
icebp
push
mov
inc
mov
and
mov
hlt
ret
adc
and
push
xorl
xchg
ja
dec
pop
shll
inc
orl
hlt
mov
in
in
rclb
xorl
nop
in
add
mulps
je
mov
mov
jne
mov
and
jne
mov
fs
ss
pop
or
mov
popa
mov
loope
scas
decl
fdivs
mov
movsl
incl
dec
mov
int3
push
or
mov
test
ja
in
xlat
xor
in
cmp
test
and
add
orl
fwait
sub
sbb
or
push
add
dec
cmp
sbb
push
add
out
or
jb
jl
push
test
outsb
adc
out
leave
mov
hlt
xchg
or
inc
and
aaa
add
cwtl
js
or
inc
jb
in
adc
mull
es
dec
outsl
ja
adc
push
add
add
pop
dec
adc
mov
inc
dec
or
add
lret
add
pop
pmullw
lods
popf
pop
and
out
jmp
aaa
movsl
push
fs
dec
mov
imul
or
adc
icebp
cmp
adc
push
out
mov
cs
lds
ds
mov
rol
or
push
xchg
dec
imul
mov
popf
jmp
sti
and
fcoml
icebp
inc
and
les
inc
fs
inc
or
add
hlt
out
pop
mov
data16
aaa
cmp
inc
icebp
pop
int3
wrmsr
repnz
imul
pop
je
cs
jle
push
fadds
dec
inc
pop
enter
adc
loope
or
push
dec
pushf
ficoms
xchg
sbbb
and
pop
test
jo
pop
mov
jno
and
cwtl
lret
cmp
xor
add
push
dec
cli
push
shlb
repnz
call
adc
mov
mov
or
jb
sbb
movlps
xchg
outsb
xor
sub
jmp
dec
movsb
push
or
mov
or
orl
cmovae
mov
mov
jae
add
inc
pushf
int3
pop
adc
loope
repnz
inc
jecxz
adc
not
dec
les
add
jp
ja
enter
xor
pop
mov
push
jb
mov
add
pusha
int3
dec
sub
or
cld
jecxz
xchg
dec
inc
jl
sti
orl
mov
pop
pop
dec
dec
es
xchg
adc
es
dec
mov
jg
mov
les
jg
adc
movb
cmp
pop
jnp
arpl
out
je
into
fidivs
int
pop
in
or
mov
jge
pop
mov
scas
outsb
insl
out
dec
add
mov
inc
and
cmp
mov
pushl
and
pop
sub
xchg
xlat
pop
sub
adc
mov
ret
jne
scas
pop
push
sub
inc
or
dec
xor
lock
cltd
or
sti
pop
popf
adc
dec
or
jno
dec
and
adc
push
or
mov
jb
lods
inc
add
jns
push
dec
shl
cs
ret
imul
or
ret
negl
sub
add
lods
xor
xchg
xor
loopne
bound
mov
jle
and
pop
ja
adcb
pushf
lahf
mov
xchg
iret
pushf
xchg
test
push
flds
cmp
push
pop
bound
fs
xchg
cmp
scas
or
xchg
push
pop
in
pop
out
dec
add
mov
pop
sub
cmp
in
push
in
std
movl
sbb
fs
mov
iret
inc
mov
test
inc
je
jno
fdiv
xchg
imul
icebp
outsl
xchg
aaa
jl
inc
shl
fadd
inc
push
and
sbb
es
out
enter
test
pinsrw
bound
jbe
insl
mov
inc
inc
and
rcrb
or
add
add
push
xor
insb
jnp
push
adc
rorb
inc
mov
fiadds
sub
xor
rcrb
cmp
jecxz
mov
popa
out
cmp
xor
popa
pcmpgtb
inc
adc
movlps
insl
xchg
mov
mov
xchg
cmp
xor
add
roll
pop
or
les
xchg
outsl
inc
popf
push
es
rclb
lret
loop
lea
fadds
inc
jnp
cmp
adc
inc
push
add
pushf
mov
or
or
xor
jo
insb
fisttpl
sub
push
fcoml
add
movsb
ja
jnp
push
pop
and
insb
push
or
mov
push
mov
push
les
and
sahf
inc
enter
sbb
test
jnp
bndldx
imulb
lret
js
pop
xchg
mov
jb
xchg
shll
xor
enter
mov
jae
fcomi
scas
inc
xor
or
or
shrl
adc
aad
bound
cmp
das
mov
mov
add
cltd
mov
outsl
scas
sbbb
outsl
jg
sbbb
sbb
cmovs
fwait
adc
pop
imul
jmp
pushf
aas
out
pop
lds
enter
adc
cmp
mov
cmc
dec
push
aad
inc
xor
shrl
loop
sarl
in
mov
sub
lds
test
sti
push
and
das
add
imul
out
fisttpll
or
fnstsw
jno
bound
mov
addb
pusha
inc
aas
addr16
pushw
dec
movsb
mov
nop
flds
sahf
mov
cmp
bswap
xor
mov
pop
adc
popa
aaa
dec
sahf
ljmp
pop
dec
in
sbb
pop
gs
pusha
mov
adc
es
push
jmp
jb
jmp
jmp
orb
inc
xor
ds
pop
push
push
adc
ss
inc
cmp
andl
adc
lea
negb
add
dec
adc
dec
inc
test
aaa
add
dec
pop
fidivrs
pop
sub
xor
leave
or
and
sahf
aaa
pop
andl
sar
sub
stos
add
adc
add
lock
add
gs
or
add
js
pop
inc
xchg
add
push
sbb
adc
js
rolb
mov
negl
push
loop
dec
outsl
cwtl
out
or
test
sub
sub
adc
dec
in
inc
loopne
dec
lock
or
test
mov
sub
adc
ret
pop
mov
push
mov
pop
and
mov
rorb
sbb
sub
push
es
mov
push
fwait
ret
sbb
mov
inc
or
pop
jne
test
sbb
dec
incb
jo
add
fistpl
jl
mov
or
es
add
lahf
pop
jno
or
push
mov
xlat
pushf
nop
mov
sub
das
jno
inc
mov
push
or
push
cmp
hlt
push
scas
cmp
inc
pop
jmp
push
scas
movsb
push
scas
cmp
inc
mov
push
js
scas
adc
mov
inc
sub
nop
mov
mov
push
add
mov
aas
jecxz
in
or
sub
cmc
lret
xchg
and
les
jmp
and
pop
xchg
test
sub
mov
mov
lcall
sbb
xchg
pop
push
pop
pop
dec
ss
push
dec
adc
pop
or
or
outsl
outsl
cld
inc
or
push
sahf
sub
imul
lahf
insb
lahf
les
test
outsb
mov
fldenv
insb
sub
cmpsl
inc
push
js
gs
mov
push
shrl
mov
fwait
dec
inc
mov
jo
gs
xchg
pop
push
gs
and
mov
sub
dec
test
sbbb
xchg
das
adc
push
mov
movsl
scas
push
mov
xor
out
add
ret
or
xlat
test
adc
sahf
shlb
out
das
xor
inc
pop
dec
test
mov
mov
adc
inc
or
pop
daa
add
or
mov
jl
inc
cmpsb
andb
outsl
cmp
mov
and
daa
shl
adc
xor
and
mov
test
push
jne
ja
pop
add
xchg
and
mov
xchg
test
sti
pop
movsb
jbe
rorb
ror
movsl
mov
add
sarl
stos
mov
dec
je
jns
sub
push
fs
push
xchg
jg
sub
push
mov
sub
in
add
add
lock
mov
mov
addl
mov
gs
test
lahf
ss
dec
jg
jecxz
fcompl
lret
sahf
mov
addl
pop
lods
sub
or
push
movsl
inc
mov
adc
lods
adc
pop
movl
or
test
mov
mov
xor
aaa
adc
shlb
add
jne
orl
mov
adc
stos
mov
lds
sub
jbe
popa
mov
push
aas
push
dec
ret
pop
adc
adc
inc
or
pop
cmp
sbb
roll
pop
gs
aas
je
sbb
js
jne
push
inc
push
clc
cmp
jne
ret
dec
and
sub
or
outsl
jne
cmp
xor
add
cmp
adc
mov
or
xchg
mov
mov
rcll
jae
clc
dec
push
adc
and
pusha
cmp
test
mov
movsb
fcoms
lret
ret
adc
leave
mov
xchg
inc
mov
decl
lds
std
enter
shrl
cmp
dec
or
adc
pop
xor
shlb
iret
rcrb
stos
call
inc
test
adc
sahf
inc
pusha
xor
or
iret
add
movsl
rorb
mov
xchg
jnp
ret
cltd
orb
add
daa
xor
xchg
shlb
outsb
dec
iret
adc
nop
lods
pop
hlt
repz
mov
inc
xchg
jl
adc
push
dec
and
fwait
daa
push
inc
sub
andb
or
adc
incl
adc
lcall
adc
flds
mov
pop
inc
jle
add
push
xor
xchg
lods
xchg
inc
cmp
lods
cld
and
push
nop
subl
or
lods
jmp
ret
push
or
fldcw
insb
jmp
leave
and
pop
ss
xorb
mov
cwtl
mov
push
pop
cmp
pop
cld
push
dec
or
cmpsl
dec
mov
add
or
push
call
out
adc
mov
popa
adc
adcb
inc
cmc
fldt
mov
jae
aam
or
fimull
jbe
gs
fisubrl
in
dec
xor
sub
ret
jbe
jnp
add
jp,pn
aaa
roll
push
sbb
pop
jb
add
in
xor
outsb
insl
pop
cmpsl
cmp
add
pop
push
popa
mov
adc
ja
dec
cs
mov
ja
inc
xor
iret
add
ja
add
inc
sbb
sub
outsb
mov
lds
loop
addr16
xor
loopne
push
pop
lcall
imul
scas
mov
movl
fdiv
jo
push
sub
nop
push
or
push
ret
mov
out
xorps
js
inc
sahf
jo
jecxz
jo
add
jnp
push
mov
stos
popa
add
inc
stos
addr16
ret
repz
dec
je
sbbl
inc
xchg
out
dec
es
mov
xchg
push
or
icebp
adc
cs
mov
and
adc
in
pop
dec
mov
xor
cmp
pop
mov
inc
popl
je
sbb
push
mov
dec
or
jnp
cmp
mov
xor
outsl
cs
lds
popl
stos
mov
add
adc
lods
scas
jmp
adc
mov
mov
add
mov
push
jne
daa
jb
bound
iret
aas
daa
sbb
pop
in
or
dec
mov
out
push
or
outsb
pop
ja
cmpsb
ss
xchg
xchg
jecxz
inc
orl
ja
pop
leave
repz
or
mov
add
and
das
cld
scas
cmpsb
lods
fs
push
mov
inc
mov
xchg
pop
and
dec
cs
push
or
mov
lea
pop
add
adc
add
inc
aas
sbb
push
inc
push
dec
or
push
sti
push
xlat
push
out
or
push
bound
js
shr
pop
into
pusha
adc
cmp
scas
cmpsb
xchg
sub
sub
push
push
cs
push
push
push
or
stos
inc
xchg
pop
lock
mov
ja
cmpsl
inc
inc
xor
or
sbb
into
inc
adc
mov
dec
jp
movhps
idivb
push
inc
roll
cmovs
sub
fimuls
scas
push
addr16
ja
push
jl
inc
push
inc
push
inc
push
fisubs
push
or
stos
push
adc
ret
es
push
je
or
pop
adc
clc
lock
push
cs
pop
dec
fidivrl
ljmp
dec
mov
cmpsb
mov
ljmp
out
mov
or
add
in
mov
faddl
test
xchg
cmpsb
mov
cmc
dec
je
cmp
es
mov
jge
mov
xchg
dec
or
dec
xor
je
add
xchg
test
push
bound
add
push
shrb
jge
xchg
and
mov
cmpxchg
push
imul
and
cmp
xor
aam
sub
dec
add
or
or
mov
push
mov
or
mov
inc
inc
pop
cmpsl
test
mov
mov
add
test
aaa
add
mov
test
shl
and
cli
inc
push
aam
notl
xchg
or
push
mov
or
nop
cs
jmp
sbb
jle
cmp
daa
lahf
inc
mov
push
jns
pop
mov
movsl
shlb
inc
ret
das
sbb
push
xor
or
stos
mov
cmpl
sub
adc
iret
movb
loop
insb
push
repnz
cld
dec
mov
fadd
dec
dec
xchg
mov
xlat
dec
add
lds
scas
pusha
movsl
lods
lret
jae
and
mov
rcrb
push
lods
loope
push
sbb
pop
jl
pop
out
add
mov
daa
or
push
vmwrite
mov
xchg
mov
and
daa
mov
loopne
inc
cld
mov
loopne
inc
or
sbb
cmp
lods
jne
adc
mov
pop
push
sbb
nop
jb
sbb
add
push
mov
and
fimuls
aam
jmp
adc
inc
rolb
cwtl
push
sbb
or
push
and
adc
in
rcrb
cmpsl
jmp
or
xor
pushf
sbb
and
mov
lock
shll
jo
addl
mov
mov
inc
iret
cmp
and
xchg
lret
xchg
mov
inc
clc
clc
jl
enter
sbb
pop
push
inc
cmp
push
popl
xlat
les
or
add
push
stos
cmpl
es
fstps
cmp
xor
xchg
or
or
stos
lock
add
cmp
xorl
loopne
pop
inc
mov
adc
pop
pop
or
add
and
mov
pop
in
es
test
movsb
add
fs
mov
in
mov
in
push
pop
or
jo
push
pop
dec
or
jecxz
inc
xlat
sarl
mov
adc
outsb
ficompl
xchg
jo
sbb
inc
inc
pop
xadd
and
jge
and
loopne
or
test
or
pop
push
add
jo
addr16
push
or
adc
jp
or
or
fcoms
mov
push
xor
neg
test
loopne
test
and
mov
push
insb
xchg
movsb
xchg
inc
xor
cmp
je
jo
popa
mov
pop
jle
das
repnz
push
sbb
and
xor
jo
mov
movsl
jmp
lahf
mov
insb
popa
mov
mov
outsl
enter
out
dec
pushf
and
push
jne
dec
push
in
add
and
divl
fs
ja
fs
mov
lock
imul
mov
mov
roll
in
push
ret
insl
fisttpl
pop
fmuls
adc
shlb
cmpsb
mov
jbe
lods
add
add
div
push
jmp
and
jl
jle
and
loopne
pop
cli
sbb
idiv
push
push
mov
aas
and
lods
mov
push
push
mov
popa
push
mov
cmpsb
add
sbb
sar
cmp
pop
sub
push
cs
das
inc
loopne
dec
aam
dec
push
mov
je
xor
xor
dec
cmp
ljmp
stos
movsb
or
testb
mov
test
seto
cld
ret
pop
test
sub
mov
pushf
inc
push
adc
ret
test
xchg
nop
xchg
xor
cmpl
js
push
or
ret
push
cmp
adc
mov
and
xor
aam
cmp
sub
dec
add
adc
push
les
cmp
inc
ret
notb
imul
mov
and
or
or
fbld
pop
push
mov
adcb
jmp
adc
and
jno
ja
mov
scas
mov
sarb
xchg
add
leave
test
or
jge
jg
pop
or
cwtl
mov
fs
push
push
std
cs
and
or
mov
pop
jmp
sbb
aaa
jge
mov
adc
and
and
sbb
xor
adc
or
add
mov
push
cmc
adc
add
shrb
mov
adc
dec
addr16
push
cmp
je
pop
pop
jb
cmp
test
and
movb
jns
jle
or
add
dec
jns
adc
dec
and
inc
pop
or
js
icebp
mov
xor
rclb
mov
rorb
xlat
adc
mov
sbb
adc
mov
test
or
add
xor
pop
sub
dec
std
dec
mov
xor
mov
push
jecxz
or
or
js
imul
mov
push
lcall
jbe
mov
clc
or
adc
sbb
inc
push
adc
rcrb
sub
in
call
inc
mov
sbb
mov
das
outsl
xor
loope
inc
cmp
call
ret
ds
cmpl
xchg
and
push
insl
jns
cwtl
mov
cmp
or
pop
aad
insb
shll
movsb
adc
sub
cmpsl
dec
or
or
daa
mov
in
push
out
push
clc
repz
sbb
cmpsb
negb
jg
rcll
out
mov
adcb
push
cmp
adc
dec
xchg
dec
xchg
ret
adc
dec
pop
cmp
push
mov
aas
mov
xchg
aam
bound
insb
out
pop
je
push
jns
push
test
pop
pop
jecxz
je
adc
outsl
dec
jb
pop
dec
dec
pop
out
sbb
cmp
dec
adc
sets
aam
clc
xchg
or
jae
test
inc
jbe
lret
xchg
or
loope
add
sbb
dec
in
hlt
inc
mov
inc
inc
test
inc
mov
dec
mov
movl
push
into
pusha
inc
mov
push
inc
or
das
mov
push
add
mov
mov
sbb
popa
repnz
leave
adc
fstpl
cmovs
adc
mov
or
mov
adc
push
lcall
jnp
and
sbb
pop
dec
cmc
cmp
ja
out
inc
fsubrs
cmpsb
inc
mov
fcmovb
sahf
xchg
adc
add
aas
test
sub
sbb
fimull
gs
mov
js
sbb
and
ds
andb
js
mov
push
mov
adc
and
imulb
rcrb
loopne
lcall
fadd
cmp
and
rcll
shrl
loopne
push
dec
ret
push
outsb
pop
clc
insb
fsubr
dec
inc
imul
inc
loopne
fdivl
shl
ret
add
pop
and
push
daa
dec
subl
push
orb
jbe
imul
fdivrl
cmpb
or
add
push
out
xchg
push
push
rolb
add
push
hlt
ja
push
fistpl
bound
jge
mov
into
jo
mov
jnp
mov
push
inc
add
xor
push
ja
test
sbb
cmpsb
in
pop
ljmp
add
pop
loop
loopne
pusha
sub
pop
pop
adcb
call
mov
inc
fcoml
lahf
sbb
shr
push
fmuls
cmp
int3
subl
mov
mov
lods
and
insb
mov
or
leave
and
movb
iret
sub
nop
rcrl
scas
jge
mov
in
or
push
push
mov
fstl
enter
or
cmpsl
imul
push
pop
icebp
mov
push
sub
push
push
inc
or
lds
sbb
push
ret
dec
and
sbb
or
sub
arpl
jns
sbb
or
inc
pop
test
push
adc
pop
cltd
int
xor
and
ljmp
inc
cmp
jns
adc
gs
daa
mov
js
add
mov
mov
and
jb
xchg
daa
lock
inc
les
or
cmp
mov
xchg
jmp
div
inc
mov
inc
mov
push
adc
xchg
inc
or
sub
sbb
and
les
sbb
sbb
scas
nop
push
rorl
add
inc
add
js
sbb
and
movsl
pop
inc
inc
mov
movq
test
xor
gs
push
fists
rol
lods
jo
stos
add
dec
mov
push
jns
ja
jb
jb
int3
js
add
add
mov
jb
aam
in
mulps
cmp
dec
sbb
scas
push
aad
hlt
sbb
and
daa
mov
ror
ret
es
popa
loope
das
out
testb
sahf
clc
sbb
enter
jno
add
mov
lods
dec
fistpll
mov
aas
mov
adcl
lods
mov
add
xchg
add
movsb
push
add
adc
andl
pop
call
lea
arpl
add
fadd
clc
stos
dec
sbb
jo
inc
push
je
add
testb
data16
add
test
add
idivl
adc
xor
mov
push
faddp
inc
push
adc
or
jmp
cmp
jne
mov
ret
xchg
sbbb
mov
jne
mov
push
or
mov
rolb
or
dec
jb
in
sbb
add
and
cmpsb
nop
or
rcrl
punpcklbw
mov
inc
sbb
fucomp
xchg
sbb
inc
gs
cwtl
cmp
add
dec
inc
lds
inc
sbb
dec
xchg
sbb
cmp
or
rcrb
add
add
dec
add
xchg
pushf
mov
add
push
xchg
test
xchg
push
mov
dec
dec
bswap
arpl
icebp
pusha
dec
or
dec
pop
jb
push
ja
adc
adc
or
inc
mov
jl
cmovs
lcall
add
not
and
ljmp
add
jnp
mov
or
iret
or
or
mov
xchg
addb
add
xchg
pop
pop
enter
sub
add
add
adc
dec
rcr
mov
push
loopne
andb
sub
pop
push
cmc
adc
lea
push
sbb
mov
in
pop
cmp
lock
not
and
decb
ret
je
clc
inc
adc
daa
jmp
lret
inc
adc
jle
sub
mov
add
push
add
fimull
rorb
or
xor
nop
inc
push
mov
add
ds
add
mov
sub
sbbb
fs
popa
jno
pop
dec
push
cltd
jmp
xchg
sbb
jo
push
dec
mov
and
pop
push
adc
imul
push
sbb
std
mov
aas
add
push
xchg
stos
in
aas
or
dec
ja
lods
aad
xlat
enter
enter
sub
sbb
insl
lret
xchg
mov
xor
test
adc
js
fsubl
add
sbb
add
movsl
and
mov
sarl
notb
movsb
or
pop
xlat
cwtl
push
add
dec
mov
das
lea
and
push
lock
mov
mov
sbb
ret
cmc
cmpsl
xor
fstpt
mov
sbbl
add
out
hlt
xor
pushf
dec
loope
push
adc
orl
int3
push
push
dec
inc
movsl
jle
cmp
sbb
test
fdivs
cmp
cmc
testl
test
repz
fwait
xchg
push
xchg
mov
jo
dec
mov
pop
mov
bound
ret
loopne
hlt
mov
je
jnp
mov
sbb
in
add
insl
into
out
and
push
out
pop
push
xor
add
xchg
xchg
sbb
jb
push
adc
adc
hlt
cmp
outsb
out
iret
and
dec
push
add
add
je
or
shl
ret
cmp
fiaddl
fincstp
shll
fstps
nop
push
pop
lea
pusha
call
pop
jb
inc
fdivl
push
mov
es
or
inc
jne
das
pop
sub
popf
jne
nop
popa
mov
pop
loop
call
leave
or
popf
mov
ffreep
push
loop
scas
add
cmpsb
push
dec
mov
ds
and
xchg
lock
sbb
pusha
shlb
inc
xor
pop
mov
std
jmp
pop
adc
sub
nop
sub
or
fstl
inc
dec
and
push
imul
fwait
sub
dec
jmp
jns
xor
pop
outsl
pop
ret
add
mov
dec
sbb
pop
test
add
or
das
inc
xchg
lahf
push
add
push
popa
mov
mov
dec
pusha
push
inc
stos
dec
test
rcll
loopne
movsb
mov
pop
add
ds
dec
cmp
hlt
cmp
xchg
xchg
cs
imull
sti
popf
inc
stos
sub
push
add
xor
pop
push
dec
pop
add
add
mov
add
add
addr16
or
movb
sub
aam
cmp
ja
push
sub
cltd
int
mov
mov
sarl
pop
push
inc
dec
jne
adcb
cmp
sub
pop
push
repz
loop
and
add
andl
sbb
daa
and
cmpsb
loope
sbb
sbb
dec
js
mov
fldl
jle
push
bswap
shr
mov
dec
jns
cli
push
adc
jmp
jb
mov
mov
ljmp
mov
mov
jmp
scas
jg
data16
mov
jns
test
add
adc
adc
xchg
cld
push
add
sarb
sub
cld
push
or
adcl
xor
loopne
cld
hlt
adc
mov
or
cmpl
ds
mov
sub
inc
jmp
mov
lea
sub
pop
push
cmp
insb
fisubl
cs
jmp
addr16
push
add
adc
popl
icebp
and
add
mov
mov
es
add
stos
jecxz
adc
sbb
adc
icebp
rcll
inc
das
inc
inc
inc
loopne
jmp
das
or
mov
clc
mov
es
subl
pusha
roll
andb
test
add
xor
pop
push
push
pop
clc
popa
add
add
and
imul
movsl
lods
mov
mov
ret
and
or
adc
adc
ret
rorl
testl
and
mov
xchg
or
sub
sub
aam
mov
cltd
dec
pop
je
jbe
ljmp
and
ds
rolb
inc
out
pop
lock
inc
cwtl
cmpsb
sarl
fwait
pop
xor
out
lahf
in
ficompl
cli
inc
shrl
adc
loop
aad
push
into
push
sub
mov
jmp
pop
and
push
mov
das
xor
xor
push
xor
push
adc
sbb
popa
out
js
pop
xchg
dec
test
push
js
movsb
mov
pop
clc
mov
insb
hlt
push
sub
rolb
scas
sub
outsb
fdivl
jge
jo
sub
out
ja
add
and
mov
dec
inc
inc
gs
jl
push
shrl
jle
scas
adc
rol
insb
push
and
insb
pop
cld
push
jns
add
push
inc
out
add
jae
fmuls
dec
out
push
lock
pop
inc
rorl
dec
ss
or
adc
sti
sahf
mov
pop
sub
jmp
xor
fwait
jp
pop
sub
sub
pop
sbb
adc
mov
fs
les
add
mov
xchg
dec
mov
adc
rorb
mov
mov
dec
mov
jge
daa
popa
cwtl
js
and
xchg
pop
pusha
mov
pop
adc
clc
jg
jp
cmp
es
cmp
sarb
jg
mov
imul
xchg
scas
aaa
lahf
nop
nop
or
add
mov
ret
jl
ret
fstps
das
fs
or
cmpsl
roll
or
movsb
mov
or
pop
jle
cmpsb
or
outsl
adc
loop
pop
movsb
cmp
inc
call
cmp
fsts
push
test
cs
fdivs
in
inc
add
or
mov
sti
xchg
insb
mov
pop
test
ds
adc
stc
test
sub
hlt
and
mov
roll
ret
outsl
pop
xchg
push
cmp
jg
or
jl
push
inc
lea
ss
or
pushf
adc
add
mov
jo
popa
or
push
mov
push
mov
dec
out
cmp
push
add
adc
jl
and
or
out
notl
shlb
add
or
leave
ja
sbb
or
negb
aam
pop
ljmp
insb
inc
xchg
and
inc
add
je
cmpb
xor
pop
aam
aam
mov
pop
rolb
ds
jl
dec
mov
mov
mov
test
jbe
push
pop
mov
ljmp
js
inc
mov
insl
mov
push
mov
sbb
add
movsb
jb
xchg
xor
cmp
imul
jge
add
add
push
jo
fistl
adc
inc
mov
mov
mov
jmp
aad
add
in
push
inc
ljmp
ret
cmp
sub
ss
or
test
aas
test
push
adc
outsb
lods
int
and
outsb
hlt
xchg
loope
push
pop
pop
pop
mov
pop
test
and
sub
les
je
sbb
or
rcrb
sub
add
lds
insb
cmovs
push
jle
lock
adc
mov
mov
jae
jmp
adc
and
jbe
js
pop
add
or
adc
adc
and
and
imul
and
push
sub
pop
add
adc
mov
mov
pop
ret
add
lret
in
and
sub
mov
pop
jge
out
adc
hlt
lret
mov
incl
je
addl
jmp
sub
fcomps
aad
and
xchg
add
adc
loopne
adc
pop
ret
push
push
inc
push
hlt
cmp
shl
fwait
fs
loop
mov
dec
xor
in
outsb
out
movb
push
stos
clc
sbb
mov
or
inc
ret
push
sub
inc
dec
inc
ljmp
mov
sbb
outsb
adc
das
hlt
jmp
jg
loopne
insb
leave
pop
ror
fldl
lods
ds
xchg
mov
in
inc
testb
lods
adc
fst
lcall
xchg
sub
repnz
out
add
mov
push
in
hlt
mov
in
fisttpll
adc
faddl
and
lock
xor
push
adc
push
out
into
loop
fsubp
insb
gs
fsubl
xchg
out
push
sbb
add
lock
xchg
push
lock
shrb
in
adc
or
inc
push
xchg
fwait
xor
mov
fidivrs
jmp
or
lods
pop
push
mov
push
orb
jbe
stos
mov
mov
fwait
xchg
pop
jnp
fs
cs
add
shll
sbb
in
out
add
push
adc
mov
hlt
loopne
imul
call
jmp
mov
mov
add
pusha
mov
add
and
and
out
cmp
jge
aaa
pop
lret
or
les
or
fadds
push
adc
adc
inc
mov
pop
nop
cmp
add
push
pop
and
xchg
dec
push
add
fisttps
xchg
and
sub
rcrb
pinsrw
dec
cltd
cwtl
rcrb
xlat
mov
xchg
xor
push
xchg
xchg
push
xchg
xor
cmpsl
je
sub
mov
in
cld
pop
sbb
icebp
xor
loope
jbe
add
inc
pop
dec
dec
out
xchg
lret
fdiv
rclb
sbb
loope
xlat
les
aaa
jecxz
inc
pop
push
or
add
and
leave
pop
incl
push
push
mov
lock
jp
cs
dec
push
mov
mov
and
and
leave
mov
mov
sbb
and
aas
push
add
paddusw
lods
sub
popf
or
pop
outsl
adc
imull
mov
scas
fistps
shll
cmpl
sbb
pusha
sub
adc
and
pusha
or
mov
xchg
add
inc
rcll
mov
ror
adc
pusha
fdivs
add
js
push
shl
enter
aam
insb
xchg
in
aam
movsb
testb
push
pop
xchg
pop
xchg
add
stos
pop
popf
and
call
cmp
arpl
insb
sub
or
push
mov
nop
mov
hlt
or
clc
add
mov
add
push
popa
cmp
insl
ss
pusha
mov
jb
mov
or
mov
stos
xor
pop
pop
and
push
mov
movsl
pop
or
aas
sbb
test
push
jmp
mov
xchg
dec
aam
xchg
xchg
pop
dec
mov
leave
lcall
and
clc
xor
int
xor
nop
push
loop
stc
pop
ja
mov
adc
sbb
dec
add
das
push
mov
imul
mov
adc
dec
jb
pop
and
sub
xchg
dec
cli
ficoml
addb
pushf
mov
in
and
idivb
mov
or
xchg
pop
and
dec
je
add
xchg
testb
dec
add
jl
inc
mov
pusha
sub
push
xor
data16
fcoml
cmpsb
xor
test
adc
pop
shl
mov
and
sub
pushl
jmp
adc
add
mov
jo
push
addr16
adc
mov
jmp
dec
lock
fstpl
pop
aam
sbb
lods
lret
or
pop
aam
pusha
in
sub
push
jmp
mov
mov
loope
scas
push
decl
sub
imul
cmpsl
popa
cmpsb
faddp
add
xor
inc
xchg
or
push
push
or
push
out
inc
or
es
xchg
or
adc
mov
mov
sub
sbb
hlt
div
adc
sbb
shl
lock
pop
adc
sahf
pop
jns
or
xchg
cmp
aam
call
jp
mov
xchg
sub
shlb
stc
test
ds
xor
mov
and
add
rclb
rcrl
imulb
je
xor
push
cmp
es
adc
mov
inc
push
mov
inc
loopne
lret
push
dec
sub
cmp
jne
or
popf
or
or
stos
cmp
and
popf
jne
or
sbb
dec
lahf
or
adc
sub
fwait
cmp
ficompl
and
inc
jne
mov
add
jae
pop
call
mov
adc
cmpsl
mov
push
cmc
sahf
stos
xchg
lods
jb
jnp
in
xchg
mov
mov
incl
sub
adc
movsb
jg
js
or
pop
frstor
xor
es
or
in
cmp
or
cmp
mov
lret
aas
fbstp
inc
mov
and
call
ds
inc
notb
mov
xor
add
sub
and
call
stc
push
sbb
or
mov
or
in
cmpsl
dec
loopne
movsl
cmp
or
push
push
and
aam
mov
leave
pop
sti
push
adc
sub
sbb
rclb
sbb
sub
inc
add
roll
add
adc
inc
xor
sub
insb
pop
cmpsl
hlt
cmp
sar
in
pop
jns
mov
je
scas
lock
mov
ret
cmp
push
or
ficoms
imul
mov
mov
outsl
cmp
je
mov
pop
daa
sub
push
adc
in
adc
jmp
inc
mov
pushf
and
out
lds
jne
xchg
cmp
aam
inc
push
mov
mov
jne
dec
fdivl
jle
inc
xorb
jbe
xchg
test
in
adc
fsub
or
jl
adc
or
xor
xchg
and
xchg
lcall
adcl
jg
add
aam
pop
pop
sahf
mov
mov
mov
sub
ss
rclb
mov
ret
adc
pop
lcall
jmp
pop
das
inc
xor
adc
popa
and
dec
lods
outsb
pop
mov
jge
push
test
push
clc
jecxz
xor
and
ds
addr16
push
movsb
dec
repz
cmp
cmpsl
pop
ret
adc
loopne
mov
xor
fldenv
enter
xchg
jnp
xor
loopne
and
push
xor
add
dec
and
sub
sbb
xchg
test
push
sti
push
or
and
inc
xchg
cmp
out
lds
out
cmp
stos
test
xor
cmp
xchg
arpl
movsl
lds
lcall
push
lock
cmp
cmp
or
pop
loope
sub
add
pop
pop
pusha
jo
xchg
lock
iret
and
test
adc
aam
lods
addl
xor
outsw
inc
inc
je
add
push
add
jae
push
or
sub
rolb
xor
nop
dec
rolb
or
push
sub
push
jmp
lock
sub
int
add
test
or
mov
push
cwtl
xchg
imul
push
frstor
jp
in
add
sub
or
lods
imul
push
leave
hlt
and
or
flds
mov
pop
test
subb
scas
insb
cmp
xchg
movsb
dec
add
push
or
call
sbb
or
sub
add
lock
imul
stos
les
push
negl
inc
loope
ja
adc
popf
stos
js
jecxz
dec
ret
in
popa
pop
jl
mov
xchg
test
inc
aaa
mov
test
add
inc
roll
fidivrs
dec
clc
and
inc
cmp
xchg
dec
xchg
inc
push
ja
mov
test
mov
push
pusha
ljmp
scas
cmp
sbb
push
jmp
push
dec
movsl
mov
test
jp
add
sbb
dec
cmpsb
jne
scas
push
sahf
cs
out
add
xor
repz
loopne
cmpb
mov
push
out
inc
and
push
xor
pop
pop
sahf
xor
cmp
orb
push
je
cmp
and
addl
push
jmp
idivb
or
mov
pop
add
test
inc
or
or
add
or
or
les
movsb
ret
lea
mov
cmp
aad
sub
push
mov
push
mov
xchg
push
xor
xor
mov
into
aam
mov
lock
cli
lcall
push
pop
mov
imul
push
mov
and
lods
movsb
dec
push
cli
sbb
repnz
and
cld
and
test
dec
sti
add
shl
sbb
add
or
xor
ret
pop
mov
dec
lods
xor
js
cld
mov
gs
push
ret
addl
js
inc
xchg
xchg
jo
aas
adc
and
cwtl
loopne
fcmovu
push
iret
pushf
inc
orb
push
xchg
cltd
sbb
inc
or
dec
loop
dec
fwait
in
push
movsl
cmp
and
stos
into
mov
arpl
and
push
sbb
imul
imul
mov
sub
dec
in
and
popa
pusha
scas
rcll
pop
cmp
push
cmp
gs
add
xorb
das
mov
loop
xor
or
add
imul
add
sub
leave
cmp
orb
dec
repz
sbb
in
call
pop
call
nop
push
call
clc
sub
and
sub
pusha
xor
lret
fs
add
pop
dec
xchg
inc
test
pop
sbb
or
es
pusha
sbb
pop
adc
sbb
loop
mov
add
loope
fstl
ss
or
pusha
rorl
lock
inc
lock
pop
adc
and
adcl
cmp
adc
roll
mov
add
push
add
sbb
and
xchg
add
push
sbb
or
adc
or
rorl
push
dec
push
inc
and
push
push
adc
cltd
fimull
add
and
push
sbb
xchg
ja,pn
sub
mov
jle
pop
mov
jnp
mov
add
sbb
xchg
push
and
mov
pop
das
xor
and
add
adc
dec
dec
and
stc
sub
hlt
rcrl
mov
mov
mov
push
or
jne
shlb
xor
add
push
push
xor
dec
mov
sub
or
aas
loop
sbb
in
sub
pop
push
negb
es
jnp
or
adc
add
ret
ret
lahf
mov
js
insb
cmpsl
mov
hlt
in
or
inc
jp
fildll
aaa
mov
scas
cmp
jne
iret
xchg
imul
push
jmp
add
sub
mov
adc
aas
adc
shl
or
rcrb
push
test
popw
into
add
pop
cwtl
rorb
and
mov
cld
and
sbb
sub
fimuls
sbb
es
sbb
adc
leave
push
sub
dec
je
sub
or
inc
or
je
or
clc
add
mov
xor
adc
sub
push
jo
movsb
fucomp
cs
clc
int3
push
jmp
outsb
sbb
pop
or
mov
jmp
mov
or
sbb
mov
inc
push
pop
mov
arpl
cmp
xchg
xchg
inc
push
gs
xorb
add
or
adc
cwtl
jmp
lea
adc
lock
adc
inc
sub
pop
mov
xchg
cmp
lods
cmp
fistps
push
pop
pushf
out
push
push
add
add
push
xchg
daa
jae
mov
mov
pushl
sub
sub
inc
inc
cmp
pop
push
pop
inc
pushf
addr16
movsl
jnp
fdivrs
clc
mov
movb
add
dec
or
push
and
outsb
push
sub
inc
rcr
jg
rcrl
sub
inc
jg
and
jb
loopne
je
mov
dec
repz
push
cmpb
or
jmp
sbb
and
or
les
or
les
dec
das
inc
xor
jne
lods
mov
push
cwtl
add
jmp
mov
movsl
pop
add
xor
pop
add
loope
xor
pop
xchg
sbb
pop
pop
in
test
push
cmp
pop
lahf
adc
daa
cmp
cld
cmp
dec
fists
sbb
popl
movl
or
or
sbb
adc
dec
faddl
jnp
push
ja
jae
mov
mov
sub
ret
rorb
push
daa
shl
xor
outsl
imul
insb
inc
push
insb
and
insb
inc
adc
cmp
int3
out
adc
sbb
insb
adc
inc
adc
rol
pop
ret
mov
fcoml
or
setp
scas
pusha
add
mov
ret
jmp
mov
adc
jp
or
ffreep
pop
xchg
sub
push
or
or
movsb
lea
or
cmp
movl
jno
adc
fdivs
test
mov
xor
or
hlt
dec
outsb
mov
inc
and
mov
adc
loopne
sbb
fisttpl
xlat
dec
movb
push
xor
in
rorl
filds
sub
mov
movsb
mov
add
xchg
dec
jmp
xchg
clc
add
mov
push
adc
add
add
mov
push
jge
add
pop
add
dec
inc
imulb
adc
push
shrb
imul
js
enter
mov
rorb
sub
sarl
pushf
fidivrl
movb
aad
add
xor
xor
ds
or
mov
sub
mov
dec
dec
lods
sub
mov
aad
shlb
and
shrb
inc
and
push
cmpsl
dec
lods
loope
xor
mov
notl
into
arpl
test
sti
push
pop
inc
or
jmp
add
es
mov
add
pop
and
mov
and
mulps
lock
or
pop
or
iret
dec
jmp
pop
mov
popf
add
or
hlt
add
add
jp
lea
add
scas
fimuls
push
jno
sub
and
scas
add
dec
add
mov
daa
insb
xor
lcall
dec
jno
adc
dec
mov
cmp
leave
adc
sub
cs
loop
ret
outsl
push
inc
fwait
dec
loope
cmp
cmp
adc
test
xchg
xlat
ja
rol
in
or
jno
jns
loopne
cli
pop
adc
call
rolb
and
shl
add
pusha
cmp
xchg
nop
pop
sbb
sbb
xlat
push
push
or
mov
xchg
sub
into
out
lahf
out
mov
or
inc
insb
xor
sub
stos
push
sahf
popf
lcall
cmp
adc
dec
xlat
inc
xor
add
mov
popf
enter
adc
pop
push
mov
cld
push
data16
and
dec
outsb
shrl
dec
pop
out
dec
push
inc
test
pop
pop
mov
mov
pop
pop
daa
daa
and
inc
and
inc
cld
and
cld
neg
popa
je
mov
inc
adc
dec
insb
imul
mov
mov
jnp
add
add
aas
push
lea
sub
inc
ficompl
add
inc
adc
mov
fwait
subb
push
insl
add
je
inc
pop
jg
xlat
gs
or
adc
push
xchg
push
push
jb
ret
dec
push
adc
cs
imul
subb
add
pop
ja
stos
lods
cmp
jbe
lock
cwtl
add
sub
sar
jmp
hlt
sbb
adcb
sbb
add
psraw
fs
mov
jno
sbb
imul
outsb
sub
test
stc
jmp
jbe
out
test
add
sarb
int3
std
mov
jl
inc
testl
lea
sbb
adc
push
xorl
popa
or
mov
jo
ror
jnp
pop
and
and
shlb
pop
sbb
mov
mov
and
jo
orb
cmp
inc
in
add
sbb
outsb
or
sub
jl
cmp
jecxz
addr16
push
add
pop
push
or
mov
mov
sarb
dec
and
push
sbb
jmp
enter
and
jnp
jo
fsubrs
adc
cwtl
and
mov
mov
xchg
cs
pop
inc
sbb
call
push
pop
push
cs
mov
jmp
jno
addr16
pusha
movsl
cmpb
cmp
out
xorb
out
adc
jo
mov
or
push
add
inc
ja
adcb
and
movl
fsubs
or
addb
or
lcall
jle
mov
stc
fbld
pop
test
add
aaa
adc
mov
sbb
jecxz
in
or
sub
lahf
sbb
and
lcall
inc
cld
sbb
mov
and
daa
jns
xchg
cmp
mov
jle
ret
jle
mov
and
cmp
mov
add
xchg
push
pop
or
push
mov
pop
mov
inc
sarb
pop
or
inc
add
in
mov
sbb
xchg
mov
push
loop
push
jo
icebp
outsl
adc
adc
push
jno
or
int
xchg
jbe
sub
mov
jg
jmp
rolb
add
xchg
add
dec
rorb
mov
xchg
jmp
pop
jbe
addr16
nop
inc
adc
fsubrp
push
jecxz
and
sub
jmp
push
pop
sbb
int3
testl
dec
sbb
lret
ret
insb
and
or
or
ss
add
or
sub
push
add
add
mov
ss
and
icebp
out
mov
out
inc
js
mov
xchg
and
adc
and
xchg
dec
adc
jnp
or
vmovsd
inc
int
adc
inc
js
xor
adcl
jecxz
adc
cmovns
sbb
cwtl
add
jge
mov
jmp
mov
repnz
cmp
mov
or
rolb
dec
pop
out
mov
inc
lea
adc
mov
call
add
and
and
mov
dec
addb
rcl
ljmp
jno
mov
inc
js
psrld
sub
mov
jo
add
mov
and
shlb
rcr
xchg
dec
push
cmpsl
sbb
mov
fcompl
shrb
cs
or
jbe
clc
andb
minps
adc
jmp
lea
rolb
or
push
shr
scas
lret
gs
popf
fs
pop
inc
out
leave
push
addr16
jmp
les
mov
or
jo
add
xchg
or
push
mov
or
clc
and
hlt
fwait
inc
lock
je
cmp
incl
movb
sub
mov
xchg
bt
adc
xchg
cmp
ret
sbb
enter
jbe
sub
fsubr
adc
cmp
stos
shlb
xchg
lea
sbb
shll
xor
lret
mov
shrb
adc
mov
xor
add
inc
mov
insb
adc
jmp
pop
adc
inc
sahf
jle
push
xchg
or
mov
repz
insl
in
icebp
or
sub
push
push
ss
insl
mov
push
shrb
or
add
scas
or
dec
add
rclb
insb
jge
outsb
pop
shlb
xor
xor
add
inc
sub
and
mov
lods
mov
ret
shr
ds
shll
dec
push
hlt
push
mov
cmp
and
mov
xorl
pop
dec
mov
jne
push
lcall
sub
adc
popf
jmp
dec
jbe
adc
fadd
loopne
sahf
mov
fiadds
leave
adc
adc
andl
dec
out
daa
and
mov
push
jle
push
psubsw
leave
xchg
pop
dec
mov
xor
jne
adcb
ds
inc
in
or
dec
adc
jle
fldenv
pop
jecxz
push
jecxz
jmp
inc
testb
push
xor
testb
je
ss
and
push
mov
and
inc
mov
out
dec
inc
sbb
add
dec
stc
sub
ja
addr16
or
sbb
mov
loopne
sbb
jle
xchg
bound
mov
ret
xor
sahf
aas
mov
mov
addl
repz
testl
mov
xchg
sti
dec
iret
jno
jl
in
fists
add
lods
and
push
jno
sahf
xlat
mov
lahf
add
scas
push
push
and
add
adc
and
test
jo
jle
cmp
sbb
push
mov
cmp
adc
aas
xchg
and
or
pusha
faddl
and
adc
mov
pop
test
mov
out
push
or
dec
add
pusha
cmp
and
adc
push
mov
inc
and
xor
push
inc
lock
rcrl
or
fbld
mov
sbb
jne
inc
sub
xor
pop
test
insb
mov
adc
mov
inc
jbe
icebp
incb
and
js
jg
inc
sbb
jp
xchg
jns
or
out
addr16
subl
frstor
mov
dec
xchg
ds
pop
pop
les
loope
loope
inc
mov
cmp
ja
mov
ret
pop
mov
and
imull
xchg
push
mov
push
cmp
daa
ss
mov
push
pop
pop
add
push
and
test
cmp
xchg
movsb
arpl
pop
lods
pop
adc
imul
addr16
inc
gs
push
sahf
rolb
inc
ret
mov
cmp
inc
push
aam
push
ss
mov
mov
daa
cmp
lret
rolb
push
cli
add
roll
cmp
inc
xor
fisubl
ret
cmp
dec
cmp
lret
xchg
arpl
and
fldl
inc
sbb
or
aas
imul
add
xchg
cmpsl
xchg
loopne
xchg
enter
fidivrs
dec
and
xor
jb
mul
pop
stos
pop
aaa
mov
cmpsl
pop
mov
xor
and
data16
fisubrs
sub
xlat
lock
or
rcrb
hlt
and
dec
push
in
inc
mov
sub
mov
add
push
loopne
cs
jg
mov
jb
xchg
or
popa
int3
out
pop
movsl
lods
add
inc
inc
adc
fdivs
movq
pop
rcrl
or
mov
add
adc
pop
out
popf
fsubl
ret
dec
pop
stos
daa
fstpl
sbb
inc
lea
push
call
lahf
sub
cli
rol
and
inc
sub
rcr
scas
xchg
adc
movsb
pop
and
lret
sub
pop
shlb
pop
out
xchg
or
adcl
dec
movsb
rorl
cmp
or
imulb
mov
mov
mov
pop
push
push
jp
xlat
fdivrl
pop
loop
mov
lea
adc
mov
movsb
xchg
add
sub
adc
ret
into
sub
jno
and
mov
pop
sub
or
in
mov
loop
xor
push
or
pop
test
push
add
push
add
ret
icebp
test
sub
ja
js
mov
sub
mov
jo
or
dec
pop
add
pop
daa
or
add
dec
mov
dec
jo
les
xchg
mov
and
xor
mov
shrb
daa
arpl
push
push
mov
leave
add
aam
xor
xor
push
add
inc
js
adc
push
aam
dec
xor
jbe
fdivs
sbb
ljmp
mov
or
test
jns
divb
ret
orb
xchg
das
jl
pop
mov
dec
xor
mov
ja
aam
or
jnp
sbb
and
xor
pop
aaa
fs
mov
jne
xor
daa
push
push
xor
leave
pop
and
ljmp
xchg
sbb
sbb
sbb
mov
sub
add
push
add
inc
xchg
or
aad
clc
xor
adc
pusha
xchg
popa
sub
js
aam
jne
call
testl
xchg
int3
xchg
add
dec
push
ret
mov
dec
add
push
or
insb
xor
xlat
test
andl
clc
inc
negl
jge
cwtl
mov
dec
sbb
adc
mov
or
xchg
daa
cmp
aad
jbe
inc
dec
popa
xor
mov
pusha
pusha
hlt
mov
mov
push
sbb
test
push
mov
push
add
insl
inc
or
xchg
push
cmp
adc
inc
dec
jmp
inc
dec
add
testb
pushl
ret
aas
pop
push
call
mov
mov
dec
push
push
jb
testl
outsl
das
push
or
mov
je
je
je
jae
testl
repz
xor
xchg
sete
push
out
sbb
out
dec
mov
or
insb
fs
jbe
ja
xor
test
jl
test
sub
inc
imul
xchg
inc
addr16
insb
xchg
add
xor
xchg
in
mulb
gs
cltd
push
xlat
dec
xor
push
and
cmpsl
add
mov
sbb
inc
dec
test
enter
push
pushf
fsubl
daa
xor
jo
xchg
mov
test
aaa
xchg
aaa
or
in
add
add
sbb
mov
pop
and
xchg
sub
and
push
pop
rcrb
pop
int3
mov
dec
sub
sub
inc
mov
jo
and
movsb
mov
inc
cmp
inc
sbb
dec
adc
mov
lea
push
les
pop
mov
movsb
mov
in
and
cmp
dec
and
dec
loope,pt
dec
or
lahf
add
adc
pushf
out
sub
outsl
fsubrs
adc
and
adc
inc
pop
cwtl
inc
sub
inc
and
xor
sub
add
out
addps
pop
in
add
push
repz
inc
nop
xor
add
subl
cmpl
pop
movsb
xchg
mov
adc
mov
push
sub
adc
dec
mov
xchg
and
or
inc
cld
in
dec
inc
dec
sbb
inc
lock
xor
adc
test
sub
add
jne
inc
cmp
shll
mov
aas
dec
dec
mov
into
out
gs
ret
jp
xor
sbb
movsb
loopne
ret
xlat
sbb
enter
mov
pop
movsl
pop
push
pop
imul
xor
orb
pusha
in
inc
xlat
std
inc
shlb
mov
test
sub
cld
sahf
test
mov
test
xor
in
mov
pop
inc
adc
loope
das
or
jno
ret
push
dec
ret
js
sub
mov
adc
jb
sub
cmove
adc
mov
cmp
inc
sub
scas
fstpl
mov
inc
das
mov
fldenv
push
sbb
fs
dec
xor
rolb
fstl
add
fisttpl
insb
sub
mov
cmp
lea
xchg
pushf
pushf
mov
cmp
loope
jb
sahf
inc
cmp
lods
or
cvttps2pi
jmp
fcoml
push
rcll
dec
add
pop
inc
dec
or
scas
insl
fldl
jmp
fidivrs
inc
mov
insl
aad
outsl
ret
adc
or
movl
ret
add
aaa
adc
nop
js
outsl
frstor
je
dec
add
sub
cmp
sbb
or
out
ljmp
rcr
adc
or
sarl
btr
cmp
pusha
add
add
pusha
aam
mov
sbb
push
and
test
popa
stos
mov
sbb
imul
mov
add
scas
add
pop
fnsave
scas
and
and
mov
dec
mov
in
cwtl
jp
pop
dec
dec
xor
and
pop
dec
jecxz
jb
add
inc
in
outsb
dec
adc
pop
and
fldln2
cmp
movsl
das
loope
les
inc
mov
push
dec
cmp
mov
jg
xor
out
cmp
cmp
cmp
pushf
fsubrl
pusha
seta
in
lea
and
or
and
arpl
aas
in
bound
xor
dec
mov
add
pushf
stos
push
sbb
jmp
std
dec
sub
xchg
aad
in
fcmovb
lret
push
jne
in
sbb
in
inc
test
add
add
jo
sbb
bound
or
adc
bound
pop
adc
mov
pop
cwtl
sbb
ss
jnp
mov
movsb
cmp
fldcw
orb
loope
push
sti
insb
push
das
push
push
fstpt
outsl
adc
pop
sbb
sub
sbb
test
negl
pop
ret
xchg
xor
jp
adc
mov
in
jg
lea
push
adc
iret
roll
xchg
sub
push
or
xchg
push
add
ja
dec
sub
jl
inc
jg
orb
sbb
stos
sbb
mov
mov
add
adc
ljmp
lea
dec
mov
push
cmp
sub
arpl
mov
lahf
xchg
cmp
mov
add
sub
lret
es
mov
add
mov
lock
pop
gs
or
add
and
insl
sbb
sahf
rorb
push
jbe
movb
inc
add
mov
es
leave
icebp
in
and
dec
das
dec
ret
push
dec
or
or
jl
cmp
sub
jo
imul
or
rcl
and
jb
mov
mov
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
jb
jb
add
cld
mov
cmp
sbb
hlt
lock
cmp
cmp
call
cmp
cmp
aam
int3
or
cmp
shlb
inc
xchg
sub
add
les
xor
nop
nop
das
rol
xchg
mov
jb
data16
pop
jns
shlb
movsl
mov
adc
jl
sub
test
aaa
sbb
mull
jb
pop
mov
pop
pusha
xor
xor
fs
xor
je
jl
xor
xor
test
xor
xchg
cwtl
pushf
mov
movsb
test
mov
xor
xor
xor
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
add
or
push
sub
shl
mov
inc
movb
daa
or
inc
gs
mov
jnp
pop
movl
sub
pushf
inc
lcall
and
pop
fsubs
movsb
jb
test
fs
test
insb
mov
and
xlat
in
aaa
mov
js
dec
and
or
xor
movsb
xor
xchg
test
push
push
mov
nop
push
movsb
jb
adc
sub
nop
lret
dec
pushf
insb
sub
push
sbb
pusha
outsl
inc
test
and
mov
dec
mov
gs
sub
mov
or
pusha
rclb
mov
nop
lret
aam
clc
push
cs
sbb
and
aam
sbb
faddl
add
loopne
test
enter
and
add
hlt
push
movsb
xor
xchg
clc
mov
mov
and
adc
loopne
add
or
and
xchg
inc
incl
jns
ja
inc
add
sub
andb
jl
mov
jno
sbb
push
aaa
add
jbe
faddl
lret
add
in
mov
ja
insb
popa
mov
arpl
cs
addl
ficoms
enter
jbe
inc
iret
add
stos
int
add
push
jb
outsb
enter
inc
mov
pop
add
jb
fimuls
stos
imul
stos
addr16
add
lock
jae
lret
bound
outsl
jo
sahf
call
xor
lcall
arpl
dec
loopne
cmpsb
mov
dec
dec
ja
popa
js
mov
out
outsb
jb
aaa
pop
push
or
mov
fidivl
xchg
aaa
inc
xchg
sub
cmp
xor
or
inc
jne,pn
push
xchg
loope
jne
jne
outsl
xor
sbb
mov
ret
aaa
mov
push
shl
sbb
sbb
dec
ds
lods
cs
xorl
pop
sub
push
dec
inc
lahf
fildll
push
xchg
push
addr16
rcll
add
push
insb
jnp
inc
cmp
pusha
mov
jne
mov
jnp
sub
aad
aas
add
mov
jg
inc
adc
aaa
mov
adc
cmpsl
xlat
mov
adc
xlat
adc
mov
sti
add
xorps
sub
fdivs
jns
pop
imul
or
pop
lret
dec
imul
lea
hlt
out
arpl
addr16
fwait
or
xchg
push
xorb
mov
lea
sbb
adc
test
dec
out
call
or
adc
rolb
push
push
ljmp
sbb
in
jg
pop
fucomip
dec
add
dec
dec
dec
dec
dec
push
dec
push
test
push
push
dec
outsb
push
negl
push
push
negb
mov
push
mov
sbb
sarl
push
dec
fs
xchg
sbb
inc
xchg
or
mov
loopne
inc
lcall
adc
and
push
lods
daa
xchg
addr16
ficoml
fcoml
pop
sbb
push
movsb
aam
loope
scas
push
pop
ss
mov
pushf
push
pop
stc
in
loop
pslld
cmc
icebp
lcall
push
clc
jmp
mull
add
cmp
mov
mov
insb
bound
jl
push
adc
nop
add
mov
pop
and
setb
lds
inc
dec
xor
pop
mov
push
cmp
orl
push
dec
enter
add
and
das
shl
pop
les
xchg
sbb
lea
arpl
fidivrl
adc
scas
outsb
or
cmp
decl
scas
loop
insb
loop
bound
cld
fstpt
test
mov
push
or
mov
arpl
decl
jp
and
push
in
mov
daa
add
fs
das
inc
lods
in
adc
or
jle
push
shr
push
das
sub
inc
add
adc
lock
stc
xor
sarb
add
push
mov
aam
mov
je
add
add
dec
enter
sub
sbb
push
cltd
dec
dec
adc
pop
dec
dec
lds
jo
loope
xorl
insl
mov
je
sbb
rolb
pop
loopne
loope
mov
add
insl
fs
xorb
shrb
packssdw
test
mov
sub
pop
mov
sbb
push
push
sahf
add
jnp
adc
push
je
cmp
call
pop
or
ret
fidivl
add
pop
add
fisttpll
outsb
popa
bound
stc
mov
add
ds
push
repz
push
bound
inc
push
xchg
daa
or
inc
inc
iret
or
inc
add
inc
mov
push
sub
add
inc
movb
or
jae
insl
bound
scas
dec
xor
ror
sarl
aam
pop
jae
pop
push
xchg
adc
inc
and
sub
and
fisubrl
push
xor
mov
repz
push
daa
lods
fwait
ds
mov
push
out
add
int
out
xchg
out
paddw
ss
mov
sahf
insb
roll
shrb
sbbb
ds
call
adc
fwait
mov
and
lods
scas
fildll
sub
jne
insl
dec
cmp
cwtl
dec
pop
inc
and
push
add
inc
or
mov
jle
incb
aaa
xchg
es
hlt
mov
stos
lds
mov
lods
out
pusha
or
mov
pop
adc
popa
add
clc
out
aad
xor
sub
cmp
cmpsl
popf
stc
mov
fs
sub
or
inc
inc
in
gs
pop
add
or
movsl
push
sbb
shll
inc
cmp
mov
push
rcl
add
or
sbb
pop
mov
ja
push
pop
fildll
mov
xchg
mov
adc
inc
fisubrl
or
mov
jno
xor
push
or
push
scas
add
pop
mov
dec
js
paddsw
and
or
push
mov
pop
pop
adc
sbb
jl
cmpsb
dec
imul
or
cwtl
sub
xchg
pushf
addl
inc
xor
icebp
sub
ret
add
jne
jne
mov
pop
dec
nop
pop
out
pop
jae
pop
mov
pop
push
test
movsb
out
sub
inc
push
lea
sbb
jo
cmovge
jo
out
les
mov
fsubrs
push
outsb
and
or
add
imul
adc
jge
inc
pop
mov
sbb
adc
jbe
jg
aaa
scas
mov
push
or
lret
push
popa
jns
js
cltd
es
cmpsb
adc
dec
insb
test
push
dec
dec
out
arpl
push
jo
add
iret
fildl
sub
imul
adc
cltd
or
das
jl
jmp
xor
xchg
and
xchg
sbb
sahf
popa
pop
jno
addb
xchg
adc
jecxz
imul
pop
rolb
movsl
test
nop
pop
mov
mov
xchg
mov
dec
adc
pop
loope
out
xchg
adc
mov
inc
cwtl
mov
sbb
pushf
incb
add
mov
pop
pop
std
pop
out
pushl
shl
divl
jb
js
adc
stos
popa
ss
dec
dec
dec
xchg
pop
pop
popa
sub
insl
or
push
inc
outsl
inc
xor
mov
sub
mov
or
sub
mov
add
pcmpgtb
sti
scas
icebp
push
adc
aaa
pop
fs
in
sbb
pop
addb
mov
fldenv
nop
divl
or
ss
xchg
mov
dec
inc
repnz
pop
mov
cmc
or
adc
mov
mov
pop
pop
inc
repnz
shrb
loope
push
sbb
mov
nop
or
lea
sbb
sub
mov
outsb
or
dec
jl
outsl
dec
ficoms
cmp
fists
mov
mov
jo
and
xchg
push
jns
jno
mov
int
and
push
test
jo
fnsave
pop
rclb
into
popa
cmp
cmp
adc
das
sarb
mov
int3
jns
jns
loopne
hlt
or
push
xor
jns
out
pop
insb
adcb
mov
sahf
out
mov
mov
push
call
fwait
adc
and
outsb
xchg
adc
ret
inc
mov
test
xor
pop
mov
jae
nop
in
push
xor
outsb
push
fs
add
mov
out
hlt
nop
js
je
dec
test
xor
cwtl
loope
rorb
loop
movsb
idivw
push
xor
outsl
adcb
decl
cmp
xor
les
add
xor
adc
or
pop
mov
push
lea
mov
fstps
push
sub
lods
sbb
sub
faddl
orb
aad
mov
das
sbb
xorb
mov
xor
jnp
adc
and
andb
incl
sub
mov
and
cmc
jbe
ljmp
adc
iret
inc
mov
adc
sbb
mov
pop
or
cmp
movsb
xor
and
aas
arpl
test
add
movsl
pop
pop
push
aam
mov
ds
push
call
mov
inc
mov
ja
jbe
rorb
pop
adc
cmp
xchg
add
orl
add
rolb
inc
cmp
clc
cmp
jnp
les
jne
xor
jmp
adc
inc
sbb
dec
das
xchg
or
or
cltd
addr16
xchg
or
adc
std
imul
adc
arpl
or
inc
popf
ds
out
xlat
or
pop
and
rorl
inc
pop
popf
xor
out
push
sub
cmp
cli
push
clc
or
leave
push
dec
aam
and
fdivrl
xorb
jne
mov
cltd
add
mov
in
xor
jle
or
and
xor
addr16
jge
aad
addr16
xchg
mov
pop
sub
mov
lods
idivl
push
test
sahf
xor
repz
sub
sbbb
push
inc
or
lock
sub
adc
int3
idivl
lock
out
pop
adc
dec
jl
add
adc
mov
pop
xchg
arpl
movsl
or
xchg
dec
pop
aaa
and
jle
add
or
push
mov
sbbl
popf
sub
cmpsb
call
add
pop
sbb
pop
push
sbb
adc
adc
xor
stos
test
cmpl
icebp
jge
test
jle
bound
mov
imul
lds
ja
sbb
add
mov
int3
fnsave
sbb
mov
xchg
push
push
push
and
leave
dec
xchg
pop
cmp
jae
inc
mov
fadds
inc
mov
mull
in
cmp
inc
andb
aas
les
xor
mov
mov
jno
pop
pop
inc
sbb
jmp
inc
sbb
adc
dec
in
inc
inc
push
xchg
dec
inc
mov
mov
inc
cmpsb
test
jle
xchg
xor
mov
daa
ret
add
push
pop
xchg
rdtsc
out
dec
movb
movl
addr16
mov
mov
xor
add
fs
adc
sbb
adc
xchg
imul
sbb
pop
add
cwtl
loope
mov
mov
xchg
xchg
rcrl
sahf
fisttps
out
imul
push
insb
adc
gs
adc
push
jo
pop
daa
pusha
cld
lcall
cmc
sbb
rcrb
popa
lods
xchg
test
call
dec
adc
or
inc
inc
pop
fnstsw
mov
rorb
push
dec
xor
cltd
dec
or
or
cmp
popf
fs
xchg
cs
pop
call
push
sbb
je
push
mov
enter
xor
xlat
aaa
inc
or
popa
jp
pop
fwait
adc
sub
mov
xor
mov
push
xchg
pop
mov
pop
mov
or
test
add
push
sbb
add
leave
enter
loop,pt
mov
sbb
ret
lods
popa
add
shrl
or
cmpb
add
cmp
pop
push
sub
shrb
inc
ljmp
movlps
rcrb
clc
sub
out
push
jnp
shlb
pop
mov
daa
insl
mov
mov
sbb
cld
je
lods
movsb
xor
inc
insb
push
insb
cmp
mov
leave
ret
xor
cmp
add
pusha
mov
pop
mov
mov
clc
cmp
je
arpl
push
push
pop
sbbb
mov
dec
xorb
mov
push
or
outsb
or
push
fisttpl
add
aas
push
mov
cmp
mov
pop
jo
inc
xor
in
subb
rcll
pextrw
and
cltd
mov
dec
out
inc
mov
pusha
ss
xchg
pop
xor
xchg
sbb
sub
je
and
and
cmpsl
jl
jl
and
and
addb
call
sbb
jnp
mov
mov
movsl
mov
sub
jg
test
mov
xchg
inc
outsl
enter
je
mov
sbb
shrb
add
insb
push
mov
inc
pop
aad
shlb
mov
adc
je
push
inc
sub
adc
test
aad
daa
rorl
cmp
adc
xchg
in
test
mov
sub
pop
mov
xchg
mov
daa
mov
insb
sub
lods
jge
and
or
cmpl
adc
repnz
repz
push
test
sub
pop
mov
adc
pop
stos
pop
mov
stc
cmp
mov
ficoml
pop
xchg
cmp
pop
int
mov
faddl
imul
push
mov
loopne
movsl
jecxz
ret
subps
mov
or
inc
push
inc
and
fld
or
pop
xchg
mov
xor
gs
call
cmp
cmc
jmp
pop
insb
push
sub
push
xchg
push
push
insb
nop
lret
int3
enter
dec
pop
mov
adc
or
push
ss
pop
rolb
xchg
imul
or
push
mov
popa
insb
jno
and
cmp
addb
jb
push
xor
jmp
add
jbe
inc
das
addr16
idivl
push
hlt
sbb
addr16
mov
dec
or
pop
aam
mov
add
xchg
dec
test
lcall
push
sbb
xchg
dec
movsb
out
sub
pop
dec
adc
add
mov
inc
sti
pop
outsl
outsl
insl
add
inc
mov
pusha
push
outsl
insb
push
adc
out
das
ficoml
hlt
popa
jo
cmp
add
or
push
sbb
push
jnp
sbb
push
mov
sub
add
cmp
sub
and
outsl
push
cmc
ficoml
pop
lret
sbb
enter
and
outsb
imul
jne
adc
xor
mov
out
push
in
push
sbb
out
xor
inc
dec
hlt
xor
lock
rcrb
mov
cmp
jne
push
sub
cwtl
clc
sub
xchg
mov
push
or
cmp
jo
cmpsl
insl
outsb
in
or
je
lds
pusha
add
and
add
mov
adc
lret
loopne
js
sarb
insb
cmp
inc
outsl
popa
fldpi
mov
push
sub
inc
xchg
arpl
xchg
mov
ss
fmuls
imul
xchg
ss
xchg
cmp
dec
dec
jmp
xchg
hlt
icebp
dec
jbe
push
mov
inc
insl
dec
imull
push
sub
push
cmpsb
dec
pop
add
sub
or
sub
inc
dec
inc
or
add
packsswb
adc
push
scas
imul
sar
divl
das
push
push
daa
add
sub
lock
imul
ss
push
dec
out
cmpsl
jge
shlb
and
mov
stc
add
adc
ss
ja
sub
addr16
xor
jmp
mov
sub
insb
scas
push
fadds
mov
xlat
pop
ficoms
sub
dec
inc
arpl
push
idivb
push
popa
in
mov
inc
ret
mov
mov
xchg
gs
pop
das
dec
or
enter
cmp
jno
adc
imul
bound
ja
cwtl
cmpps
mov
in
pop
jns
dec
psubw
jge
adcl
mov
mov
fisttpll
sbbl
cmp
add
xor
inc
or
inc
je
add
xor
mov
sub
mov
fistpl
inc
enter
xchg
mov
test
test
loope
xor
adc
mov
cltd
psubw
adc
inc
outsl
inc
fwait
jbe
insl
out
xchg
pop
arpl
and
dec
or
xchg
cltd
mov
xchg
xchg
xchg
sub
cmc
sbb
movsl
out
add
dec
pop
pusha
pop
pop
add
je
xor
lcall
and
imul
out
mov
imul
andl
mov
lcall
adc
pop
fisubl
adc
incb
jl
iret
addr16
incb
inc
pop
pop
dec
push
les
adc
movsb
sub
repnz
dec
sub
adc
ret
or
movsl
aaa
leave
rclb
mov
fildl
imull
out
jno
out
cmpsl
jl
push
aaa
shll
mov
cltd
xchg
sbb
test
add
lds
jae
push
xlat
les
sub
mov
rcrb
jne
pop
lret
lahf
aaa
sbb
aad
inc
test
js
sbb
jle
les
fdivrs
push
and
in
mov
jle
aaa
cld
sub
sub
pop
js
push
jmp
xor
jle
cmp
mov
sub
les
jle
ret
adcb
pop
out
movsb
jo
in
pop
jmp
movsb
xor
cmp
in
pop
jg
jg
cmp
inc
sub
push
and
and
push
lock
jge
js
int3
add
mov
xor
mov
popl
cltd
jecxz
loope
jo
sbb
jg
jecxz
mov
je
and
lret
insb
xor
jo
xor
loopne
dec
sub
mov
or
push
inc
cmp
push
dec
lods
sub
clc
push
pop
lods
test
dec
or
adc
or
add
int
mov
sub
mov
add
mov
addb
test
push
in
fiaddl
cmp
sbbl
loope
aad
ret
mov
aad
jo
daa
add
xchg
lcall
push
and
dec
and
sub
dec
in
imul
lcall
cmpb
lea
inc
pop
jb
lds
xor
jne
movsb
leave
shlb
rorb
bound
sub
sub
shlb
jmp
and
push
jno
cmovg
icebp
and
jbe
jo
in
cmp
inc
ficomps
pop
jns
scas
push
sub
mov
cwtl
shld
nop
jg
sub
cs
adc
push
pop
sbb
sub
mov
mov
jnp
scas
pop
xchg
std
or
add
insb
mov
dec
adc
test
jnp
repnz
xchg
push
das
cwtl
aas
dec
pop
mov
add
sub
or
pop
and
fs
pop
push
sbb
pop
mov
int
rorb
mov
xchg
mov
mov
out
inc
pop
pop
pop
ds
or
in
insb
xor
or
leave
or
mov
or
ret
js
vmwrite
pop
movl
sub
cltd
loopne
les
push
imul
fimuls
int3
aam
mov
roll
test
jp
pop
imul
popa
in
bound
xor
dec
lret
jb
inc
dec
inc
dec
dec
inc
dec
fdivrl
lahf
push
out
fldl
pusha
push
xchg
push
mov
lret
repz
dec
fdivrs
add
lahf
sbb
mov
lock
divl
inc
push
shl
push
sbb
add
aaa
dec
rcrb
adc
stc
pop
pop
pusha
les
stos
xor
popa
outsl
sub
test
mov
test
mov
dec
dec
dec
int
inc
pop
pop
inc
jo
loop
mov
xchg
and
pop
push
and
stos
adc
fabs
add
or
or
xchg
and
jb
jae
or
cwtl
cmpb
jmp
lods
or
fidivrl
call
rol
in
xor
arpl
push
xchg
negl
jb
f2xm1
pusha
add
mov
or
xchg
add
xor
ds
xor
and
aam
jnp
dec
and
enter
cmp
jns
pop
cmpl
sub
cmp
insl
cmp
ret
cvtpi2ps
mov
or
gs
movsb
lods
pop
cmp
leave
or
adc
push
dec
outsl
pop
or
das
or
and
inc
stos
addps
out
in
jne
lea
or
push
inc
mov
jb
imul
pushf
jne
xorl
inc
sub
lds
jb
or
fwait
ret
repz
subb
mov
cmp
sbb
push
pop
pushf
shrb
dec
outsb
arpl
push
mov
jns
add
mov
loope
es
push
jno
insl
jge
mov
or
push
pop
adcb
dec
ja
xchg
js
add
cwtl
insl
es
movlps
and
insl
adc
fcmovnu
xor
sbb
jb
repz
out
mov
ja
aaa
jo
mov
or
popa
das
or
lcall
ja
pusha
adcb
fwait
inc
xlat
data16
inc
out
adc
jmp
das
or
aam
movsl
loopne
stc
mov
lret
daa
jae
lods
cs
fs
je
or
add
movsl
hlt
mov
mov
insb
mov
or
mov
mov
add
or
jp
syscall
or
cs
cmp
or
mov
mov
jo
roll
sub
mov
stos
incl
test
subb
out
andb
out
pop
and
or
push
xchg
addr16
gs
int3
or
ja
call
add
push
sbb
jnp
negl
pop
lea
push
out
negb
es
decl
and
jns
outsb
lahf
dec
inc
dec
and
ja
pop
inc
adc
push
add
jmp
or
fdivs
int3
popf
js
sub
orb
push
adc
push
adc
jp
fldt
push
lods
sbb
push
into
dec
int3
dec
push
adc
or
aaa
push
rclb
mov
popa
mov
imul
rcl
mov
sbb
xchg
rolb
stc
insl
dec
aaa
orb
inc
or
xchg
mov
mov
and
lea
shld
mov
popl
mov
or
nop
xor
enter
push
and
push
mov
xchg
ret
js
cmp
iret
rorb
xchg
xchg
es
nop
nop
daa
dec
into
iret
ja
push
dec
dec
cmp
mov
pushf
push
je
push
mov
adc
fisttps
loopne
dec
clc
inc
cmp
and
lods
je
pop
adc
jmp
jge
fisubl
repz
out
mov
sbbb
mov
mov
aam
js
dec
ficoms
orl
sub
add
or
sub
mov
outsl
push
xorb
aad
xchg
movsb
dec
inc
add
inc
mov
xchg
dec
enter
outsb
and
mov
enter
roll
push
sub
mov
jns
fadds
mov
xchg
bound
add
adc
or
push
shlb
xor
and
out
pop
sti
mov
aas
xor
rolb
add
xor
xor
jg
or
cs
cmp
add
or
dec
jo
xchg
adc
pop
push
dec
or
lock
out
xchg
or
sbb
mov
scas
sbb
xchg
add
xchg
xor
pop
xchg
lea
fldcw
mov
bound
or
xchg
inc
xchg
dec
add
jb
rolb
aam
add
or
arpl
push
add
rorl
js
imul
dec
or
add
fiaddl
jmp
in
pop
dec
push
cmp
movsb
incb
stc
inc
das
rcrb
rclb
add
or
shll
jge
movsb
filds
and
or
or
xchg
add
mov
add
out
inc
jge
enter
or
mov
add
push
out
pop
loop
cld
pop
ss
adc
push
adc
addl
or
daa
or
or
arpl
sub
jae
jne
movups
and
inc
mov
xchg
ret
push
jecxz
or
xchg
in
jle
daa
or
nop
cmpsl
push
xor
mov
or
lds
cmp
inc
in
xlat
sub
cmp
stos
mov
mov
inc
or
les
outsb
loopne
movb
and
xchg
into
clc
add
outsl
mov
or
and
and
mov
adc
add
lock
lods
dec
adc
inc
mov
insb
daa
dec
pop
fmuls
pop
lods
inc
sub
and
or
and
cmp
sbb
xchg
shrd
insl
push
cs
in
sbb
xor
and
loopne
jl
jle
push
push
jae
pop
call
push
pop
and
cld
test
enter
addr16
nop
adc
subl
dec
adc
sbb
or
push
mov
mov
push
cmp
test
nop
push
push
xchg
in
add
insb
xchg
andl
pusha
jo
mov
subl
js
dec
mov
in
push
add
xor
mov
xchg
sbb
fsubl
push
in
jno
add
sbb
cltd
dec
adc
mov
cmpl
out
adc
sbb
fstps
xchg
dec
inc
dec
addl
xchg
push
inc
ja
cmp
xor
or
shl
fwait
xor
xor
dec
insl
add
or
push
pop
shlb
inc
sub
rclb
add
xchg
sub
loope
dec
addb
add
mov
cwtl
xchg
mov
or
xor
cmp
daa
jmp
push
jae
clc
andb
movsl
cli
pop
nop
rolb
cmc
shll
lea
sbb
pop
and
sub
mov
pushf
bsf
adcl
xlat
cmpl
lahf
movsb
into
add
inc
adc
movups
push
adc
xchg
adc
mov
movsb
xor
unpckhps
jne
add
pop
add
sbb
cmpsb
mov
cs
sbb
jmp
inc
dec
add
xor
and
gs
add
mov
scas
and
and
fidivrs
cmp
jge
jge
push
hlt
push
test
cmp
repz
or
mov
lds
or
std
in
popa
leave
add
mov
add
dec
push
test
cmp
mov
js
inc
jl
prefetch
or
test
add
and
aad
adc
loope
mov
sub
and
pop
xchg
cmp
or
lcall
movsl
movl
les
shl
inc
sarb
lret
add
pop
jne
push
adc
fwait
iret
inc
or
and
cmp
aam
jl
fadds
daa
inc
jae
rcrb
sbb
ja
aam
js
pop
pop
gs
iret
adc
jg
or
add
stos
cmp
push
sub
adc
divl
mov
inc
fsubrs
mov
push
push
and
cmpsl
push
repz
inc
jl
arpl
adc
int3
push
dec
sar
xor
jbe
push
dec
test
and
jo
jge
add
inc
xchg
xchg
cmp
insl
mov
mov
adc
outsb
or
mov
adc
push
or
faddl
adc
jnp
pop
jno
and
mov
xchg
adc
or
or
cmp
add
push
ja
adc
movsl
je
add
cmpsl
push
lods
movsb
js
repnz
stc
movsb
add
scas
xor
fs
xchg
or
sbb
mov
pusha
das
and
push
push
sbb
jecxz
sbb
bnd
adc
sahf
out
sub
ds
jp
dec
pop
jb
mov
ds
lods
mov
ret
rorb
aaa
movsl
dec
mov
js
bound
pop
sbb
popf
insl
add
pop
filds
stos
insb
movsl
mov
inc
sahf
fmull
out
sub
dec
dec
lock
or
inc
sub
je
xor
pop
or
jno
lock
xchg
add
adc
lock
rcll
mov
ret
xchg
add
xor
push
and
jns
cmp
in
jge
inc
add
dec
add
lock
inc
and
fcmovnb
lcall
jo
sub
pop
push
or
adc
jg
cwtl
mov
mov
dec
sahf
pusha
clc
or
inc
adc
loopne
inc
inc
shlb
or
fidivs
and
loope
les
mull
das
sbb
cmp
cmp
outsb
pop
subb
fstl
pop
insb
pop
sbb
sbb
lea
adc
xchg
ret
xlat
imul
pop
xor
pop
inc
inc
addr16
jge
pop
jnp
ja
xor
test
or
lock
test
and
inc
mov
loopw
xchg
inc
bound
insl
adc
adc
test
push
adc
dec
sbb
sub
stc
mov
and
xchg
lret
xchg
xchg
jbe
add
ret
dec
add
or
and
add
and
popa
leave
dec
test
adc
pop
std
and
or
inc
cltd
outsb
jge
and
jl
add
push
jecxz
push
lea
adc
xchg
sbbl
inc
dec
es
xchg
xchg
push
addr16
adc
cld
ret
pusha
adc
aaa
adc
xor
cmp
xchg
cmp
add
push
xchg
and
pop
mov
rolb
add
add
clc
lock
lret
and
adc
add
lods
mov
pop
icebp
in
pusha
xchg
fcoml
adc
inc
xchg
inc
test
mov
pextrw
or
idivb
fsub
dec
aas
or
mov
xchg
mov
xchg
rcrb
add
adc
inc
pop
mov
jg
push
lds
lock
pop
mov
add
fidivs
loop
pop
sbb
add
or
movsb
loopne
push
mov
lahf
loopne
and
add
rcll
arpl
jmp
dec
add
scas
das
inc
popa
loopne
mov
mov
lea
jp
or
clc
xor
push
jecxz
mov
fistps
aas
jg
lock
jbe
or
xor
inc
and
sbb
bound
mov
lds
mov
js
adc
inc
imul
call
mov
add
aas
cmpsb
inc
add
sub
mov
xor
pop
adc
pop
push
outsb
sarl
and
or
add
ja
or
adc
lods
add
imul
push
enter
add
movsb
in
out
int
lods
jmp
add
xchg
push
mov
sbb
push
dec
adc
adc
mov
mov
push
pop
xor
mov
mov
ret
xor
or
push
dec
fdivrs
pop
or
and
or
mov
add
and
cs
imul
stc
mov
xchg
ret
test
sbb
and
mov
sarl
push
mov
enter
and
repnz
lret
cmp
fcmovnb
faddl
inc
leave
pop
lds
shrl
inc
xchg
cmp
xor
jno
das
jg
and
shll
pop
push
nop
fsubrs
push
push
adc
pop
xchg
dec
xchg
outsl
dec
fcmovnb
sti
pop
mull
repz
pop
imul
adc
push
gs
inc
out
sub
loope
or
mov
pop
je
push
and
sbb
mov
add
in
pop
mov
mov
jo
xor
aam
xor
or
or
jb
lahf
mov
push
arpl
rorl
adc
orb
loopne
ret
xorb
gs
ret
inc
fs
mov
and
dec
outsl
cmp
mov
mov
in
push
es
das
test
add
xchg
sarl
dec
mov
mov
test
fsubrs
ret
add
clc
jb
sbb
inc
incb
jmp
dec
scas
adcb
dec
xchg
push
push
dec
scas
imul
ss
mov
addb
andb
push
push
inc
dec
insb
fldt
push
jl
test
xchg
and
pop
push
mov
insb
cld
pop
push
push
add
xchg
pusha
pusha
insb
dec
push
pusha
in
adc
andb
inc
pop
add
jp
or
imul
or
shll
xchg
inc
mov
aaa
and
mov
inc
cmc
scas
imul
test
push
daa
sbb
mov
push
lcall
or
push
xchg
je
lods
or
or
pop
sbb
xchg
jl
pop
daa
pop
ret
in
pop
fwait
jge
lods
sub
jns
pop
mov
fmuls
dec
lret
add
ficoms
lea
push
mov
movsb
movsl
sub
mov
push
xor
bound
xor
mov
inc
das
cltd
sbb
addb
testl
cld
insb
pusha
sbb
sbb
iret
mov
or
test
dec
in
jnp
js
jbe
pop
pop
aad
jp
popl
sbb
xor
pop
pop
shrl
and
add
cmp
test
or
dec
push
mov
insb
aaa
or
mov
mov
xor
es
inc
mov
fstl
rep
sbb
dec
add
loopne
push
xchg
notl
mov
add
fmull
add
cmp
mov
ret
pushf
fwait
das
nop
das
mov
shll
push
inc
or
jne
movsb
push
fs
lock
aaa
push
add
push
mov
push
lods
push
lods
insb
sbb
pop
cwtl
sub
movsl
adc
loopne
mov
shrl
stos
adc
dec
sub
stos
enter
pop
aaa
pop
shl
das
push
jmp
dec
pushf
fcomp
sub
sub
lods
loopne
push
sbb
inc
xor
xor
in
adc
shlb
out
loopne
scas
clc
imul
fnstcw
je
pop
fisttps
jbe
pop
or
sub
adc
push
sarb
or
popa
scas
add
dec
sub
push
and
imul
mov
fwait
xor
or
pop
xor
lods
imul
or
xor
lds
cmp
lcall
xchg
pop
or
and
and
add
xor
xchg
jl
push
scas
ljmp
out
pusha
test
adc
je
sub
cmp
xchg
add
js
mov
mov
sub
iret
dec
js
test
mov
inc
and
je
popl
test
xor
sub
pushf
push
jns
mov
mov
bound
in
shrb
jp
fnstsw
sub
test
jb
mov
lds
iret
mov
sbb
lds
mov
sbb
in
lret
ljmp
jb
mov
fdivrl
lret
pslld
dec
icebp
pushl
ja
jmp
aas
lcall
fldenv
aas
leave
pushl
popa
bswap
jne
inc
sahf
or
pop
xorl
mov
cs
xchg
lods
jae
iret
stc
fdivs
lret
mov
clc
jle
aas
add
pop
in
int3
daa
add
int3
out
int3
xchg
mov
int
cld
decl
mov
aad
into
push
in
mov
sbb
add
add
add
add
add
add
add
mov
decl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
out
out
in
in
jmp
ljmp
pushl
mov
jmp
jmp
jmp
jmp
jle
fdivrp
fdivr
pop
lock
fcos
fdivr
xlat
call
sbb
aam
sar
sar
sar
shrb
dec
jp
bound
and
js
cmpsl
mov
xchg
addb
jp
jns
and
jnp
mov
sub
out
insb
mov
or
push
dec
movsb
repz
out
loopne
jle
les
rorb
into
out
mov
push
je
jnp
ja
mov
addl
ds
jns
push
push
in
inc
fdivl
fidivrs
roll
xchg
test
xchg
ja
js
addr16
shlb
orb
stos
shl
inc
sub
sarl
arpl
insb
in
addr16
jnp
fwait
in
mov
mov
jp
outsb
dec
mov
ficompl
js
jnp
adc
fadd
iret
data16
cmp
and
jo
insl
push
negl
pop
popa
ds
nop
push
pushf
jbe
xchg
into
mov
cs
imul
je
js
lods
fisubrl
adc
adc
insl
add
xchg
iret
loopne
mov
push
inc
cmp
or
lret
add
rorl
lock
jp
or
mov
mov
push
push
insl
mov
sbbl
sbb
xor
mov
push
aad
insl
movsb
pusha
dec
adc
jmp
add
mov
push
outsl
sub
dec
rorb
mov
cmp
insl
mov
pop
mov
pusha
cmp
dec
add
sub
jg
or
imul
mov
or
adc
and
or
cmpb
test
sub
push
jge
lock
test
movsb
xchg
data16
xchg
mov
add
push
mov
das
pop
or
inc
sub
and
xchg
push
rcll
push
ljmp
mov
add
imul
add
inc
and
add
sahf
scas
out
shll
rol
add
bound
je
push
in
and
pusha
or
adc
iret
push
lods
xor
xchg
sti
add
jmp
or
xchg
nop
pop
test
inc
adc
pop
sub
mov
sub
xchg
push
popa
adc
lock
inc
pop
sub
add
and
dec
aad
mov
sub
nop
push
xor
lods
mov
sub
in
push
pop
dec
add
popa
xchg
fiadds
dec
sti
push
aam
leave
adc
or
and
out
cmp
push
outsb
stos
pop
and
ret
xchg
or
stc
inc
dec
shlb
xchg
lcall
dec
mov
cmpsb
dec
stos
daa
lret
sbb
clc
mov
test
mov
inc
or
mov
mov
fs
sbb
jb
enter
or
push
and
or
add
push
fs
cmp
mov
fwait
adc
cmpb
into
cmp
lods
rclb
or
addr16
mov
loope
jne
test
adc
or
incl
xchg
sahf
push
in
adcb
popa
je
pop
sbb
andl
nop
adc
addb
sbb
dec
aaa
adcl
xor
mov
adc
sub
insb
adc
iret
imul
push
out
xor
or
lcall
test
sub
push
push
ret
loop
inc
and
jne
or
adc
and
adc
add
mov
xchg
jp
popf
pop
xchg
in
or
sbb
stc
xor
xor
cmp
xchg
pop
xor
mov
mov
aas
mov
mov
cmc
test
sub
and
push
dec
add
push
mov
mov
jbe
loop
dec
add
jns
dec
test
xor
das
add
in
xor
add
xor
dec
push
lods
sbb
xchg
dec
add
outsl
jmp
pop
push
pop
inc
fcomp
aam
arpl
incl
add
add
push
sub
sub
pop
fisubl
jno
xlat
mov
push
dec
orl
imul
or
movsl
or
scas
movsb
mov
fdiv
call
scas
add
mov
pop
stos
dec
in
inc
pop
inc
es
dec
mov
push
mov
adc
xor
sub
mov
sub
or
cs
push
shlb
push
jge
inc
inc
inc
movsb
leave
out
adc
cs
lea
add
sub
inc
inc
inc
jle
lret
out
inc
inc
cs
adc
pop
inc
inc
inc
movsb
leave
ljmp
cs
out
bswap
inc
inc
inc
xor
xchg
cs
inc
inc
mov
hlt
fiadds
add
je
loopne
cmp
mov
addb
and
jnp
outsl
in
cltd
lahf
incl
testb
insb
dec
lds
std
jmp
clc
pop
dec
lret
pop
stos
mov
xor
mov
mov
pop
sbb
xchg
inc
xlat
push
xor
or
xchg
push
dec
or
pusha
xor
xchg
cltd
xor
lods
sti
aam
dec
stc
in
dec
fwait
ret
and
or
enter
loopne
xor
mov
inc
js
jnp
cmp
inc
adc
mov
adc
arpl
dec
push
adcb
and
andb
dec
dec
dec
mov
mov
xchg
cwtl
imul
add
stos
dec
add
and
add
xchg
mov
shrl
in
out
mov
inc
test
addb
jo
flds
inc
mov
or
addl
lods
or
mov
dec
and
jns
pop
or
xchg
adc
movsb
mov
add
jl
mov
lea
and
pusha
cmp
add
jl
insl
pop
in
pop
adc
mov
mov
pop
or
mov
insl
xchg
xor
rolb
adc
inc
rol
and
push
mov
pusha
push
and
mov
xor
push
cld
daa
pop
push
sub
or
push
xchg
lea
test
inc
mov
ja
push
sub
push
xchg
xor
gs
nop
pusha
cmp
xchg
add
push
gs
pusha
jb
insl
gs
sub
int
loope
imul
pop
nop
sti
push
push
push
out
sub
xor
push
call
inc
cmove
cmp
scas
cwtl
jb
push
dec
cmpsb
sbb
cs
add
fisttpll
insb
sub
daa
add
or
clc
adc
movsl
cltd
mov
mov
sub
pop
aaa
popf
cmpsl
mov
inc
shlb
mov
stos
aas
clc
rcrb
loope,pn
cwtl
bound
mov
rclb
enter
hlt
fadds
xchg
inc
ljmp
mov
and
and
cs
bound
and
xchg
loop
or
jae
xor
push
adc
push
add
adc
push
jo
jns
xor
rcll
ds
fs
loopne
xchg
mov
mov
fistpll
in
fstps
or
push
add
fcmovu
mov
stc
sub
imul
cwtl
mov
mov
add
movsb
ss
dec
pop
imul
aaa
cmpxchg
sbb
sub
pop
pusha
mov
jo
fwait
or
fmull
pop
add
pop
cmpsl
aaa
xor
ds
jmp
and
add
dec
lods
push
xchg
fildll
pop
loop
xchg
xor
pop
insb
andl
movsb
enter
push
je
adc
daa
sub
and
add
bound
push
push
xchg
push
fwait
and
adc
fwait
xor
imul
les
adc
xchg
or
xchg
add
aad
push
ret
xor
or
jge
add
shll
test
stos
push
movsl
rolb
sub
push
sub
addr16
push
fisubl
fstl
mov
sub
data16
push
xchg
push
mov
sub
hlt
xor
testl
mov
cmc
and
stos
not
movsb
mov
pop
int3
inc
xchg
mull
mov
push
sbb
push
fs
test
ljmp
sub
in
int3
call
ret
not
mov
outsb
in
out
inc
loope
int
imul
pushf
adc
ss
test
push
int3
push
pusha
lods
inc
shlb
in
push
mov
cmpsl
fnstcw
push
mov
insb
add
or
rclb
push
or
mov
das
pop
or
add
test
std
lret
mov
xor
xchg
xlat
loope
cmp
cmpsb
jmp
mov
sub
and
sub
dec
sub
insl
mov
fidivrs
test
adc
and
movsb
lods
test
mov
fs
add
sbb
les
mov
xor
popa
sub
lock
popa
mov
add
xchg
dec
clc
or
rorl
ja
inc
movsb
lcall
ss
fdivrl
adc
loopne
imul
lahf
in
fwait
pop
mov
rorl
push
mov
cmpsb
and
inc
je
dec
ljmp
jmp
bound
or
fisubrs
in
sarl
pop
dec
jb
in
add
in
adc
cmp
js
out
sbb
add
or
lret
mov
add
dec
sub
mov
lea
sub
test
in
or
pop
jns
js
mov
push
jl
and
xchg
mov
sbb
in
fwait
push
js
sub
fcmovnu
outsb
mov
sub
or
xor
popl
jbe
cmp
lahf
fdivrs
add
sub
repz
jo
inc
adc
nop
push
aas
dec
dec
push
mov
data16
push
fistl
jns
cmp
and
dec
mov
jb
xor
loopne
lods
push
push
push
xchg
xor
imulb
or
mov
pop
sub
xor
popa
add
pop
repnz
pusha
gs
mov
stc
push
mov
rclb
ret
and
mov
jb
mov
inc
shl
mov
jns
push
inc
push
cmpsb
push
dec
dec
pop
push
outsl
xchg
scas
test
fisttpl
out
mov
ja
mov
inc
call
das
mov
repnz
mov
sbb
std
jmp
jmp
mov
fucomp
pop
or
ljmp
pop
ljmp
insl
jnp
pushl
iret
pand
fildl
in
aas
ja
out
in
sub
add
in
dec
js
push
mov
pushf
xor
sbb
adc
adc
push
sub
or
jge
pop
and
cwtl
js
add
mov
add
lods
add
movsb
cs
addl
inc
call
dec
add
add
add
mov
ds
loopne
sbb
int3
add
mov
mov
ret
add
or
ljmp
mov
mov
mov
mov
mov
mov
mov
mov
or
and
mov
mov
mov
outsl
mov
mov
xor
dec
adc
pushl
push
mov
mov
mov
mov
mov
in
mov
std
inc
inc
inc
inc
inc
inc
inc
fimull
jge
jo
mov
mov
mov
or
inc
sbb
pusha
xor
adc
imul
jle
insb
fwait
rclb
or
call
loopne
repz
mov
and
xchg
mov
out
jl
fdivr
cs
push
adc
int3
mov
lret
call
stc
cmp
es
push
inc
call
fcomi
cmp
test
testl
sti
xor
jo
push
push
add
ss
push
loopne
idivl
fs
push
clc
fs
adc
std
incb
dec
sub
add
push
insb
lcall
and
dec
cmp
out
enter
dec
mov
mov
into
xchg
push
sbb
mov
lahf
out
in
js
push
mov
sub
fnstcw
out
insb
notb
loopne
mov
loope
in
lods
ret
mov
out
cmp
mov
cld
pop
int3
jl
push
mov
cmp
out
roll
mov
loop
idivl
in
scas
rolb
hlt
mov
ds
movb
push
mov
into
push
lahf
nop
mov
fidivrl
out
dec
in
or
pop
inc
aad
mov
ds
ds
sbb
out
call
out
imul
lods
in
push
call
mov
bound
push
fucomp
adc
insl
sbbl
or
cli
mov
jnp
lods
or
mov
or
or
adc
xchg
mov
leave
aaa
xchg
add
dec
lods
and
das
paddsw
cld
add
inc
popa
stos
loopne
les
popa
clc
jo
add
sub
xchg
out
es
cs
xchg
and
mov
ret
cmp
aam
add
mov
popf
nop
pop
and
loope
rorb
insl
push
push
mov
sbb
sub
mov
or
add
or
inc
push
into
mov
or
cmp
pushf
mov
fldcw
pop
or
addl
inc
insl
jo
push
xlat
sub
test
push
test
or
icebp
test
push
pushf
mov
adc
imul
aas
mov
push
iret
pop
scas
cs
daa
xor
xchg
scas
xchg
dec
push
inc
ja
push
pushf
push
push
push
pop
or
std
adc
fstl
jecxz
add
pop
or
roll
jl
loopne
jbe
lods
jns
nop
mov
dec
or
inc
jecxz
loopne
pop
or
cmp
add
adc
lods
js
push
test
movsl
pop
pop
push
sub
push
shr
sbb
inc
mov
add
in
ret
inc
ja
mov
dec
mov
xchg
xor
mov
sbb
cltd
adc
rolb
jo
pop
aad
in
lret
sbb
jns
mov
xchg
jns
mov
popa
popa
leave
daa
sub
or
dec
scas
dec
pop
in
pop
ret
dec
cmp
shrb
addl
inc
jae
test
cmp
cmp
nop
xorb
scas
xor
mov
and
stos
push
pop
cwtl
sbb
andl
fisubl
or
jne
lock
jns
mov
or
mov
jmp
adc
jmp
arpl
imul
dec
ret
hlt
pop
xchg
pop
outsl
pusha
push
out
scas
jnp
sahf
xchg
lret
xchg
xchg
in
adc
xchg
xchg
outsb
mov
xchg
clc
daa
lock
jo
pop
xchg
xchg
xchg
mov
and
xchg
and
xchg
pop
push
pop
pop
pushf
call
sub
imul
pop
dec
mov
mov
frstor
cmp
loopne
add
pop
in
je
jne
dec
dec
xorb
std
xlat
mov
and
jno
mov
inc
add
or
mov
mov
and
add
leave
call
stos
inc
loopne
dec
test
fsubr
pop
nop
dec
pop
jmp
rclb
push
outsl
dec
mov
popf
or
push
sbb
adc
xchg
mov
ffree
test
pushf
loope
mov
push
sub
jo
movsl
push
shrl
push
push
das
pop
mov
adcl
adc
push
pop
cmp
je
and
not
negl
repnz
fsubl
testl
mov
daa
sbb
stc
or
rorb
fs
jo
or
pop
mov
adc
scas
adc
add
insl
add
jecxz
add
and
loope
cmp
jmp
add
xchg
arpl
adcb
mov
daa
push
add
pop
jecxz
push
addb
gs
cmp
test
lahf
mov
mov
daa
push
das
jl
or
or
les
dec
orb
fs
dec
push
adc
dec
rclb
imul
shll
hlt
hlt
in
xchg
xor
xor
sbb
pusha
stos
jecxz
xor
push
fwait
mov
jecxz
ss
pop
sbb
repz
loope
clc
push
testb
sahf
mov
ss
and
jb
or
or
sbb
loopne
adc
push
or
imull
or
mov
cmpsb
push
add
add
das
js
out
adc
sub
loop
popa
sub
xor
ffree
idiv
push
dec
lods
pop
out
jbe
inc
testl
add
jnp
aam
mov
clc
cmovno
sarl
jnp
mov
add
push
je
xchg
dec
or
js
dec
xchg
push
roll
ljmp
or
or
and
out
ja
test
and
mov
sub
pop
arpl
and
mov
mov
xchg
outsb
pop
cs
pop
lock
jne
adc
jne
xchg
fstpt
lock
pop
pop
arpl
mov
mov
lock
add
add
push
loopne
adc
adc
scas
xor
ds
pop
sbb
mov
mov
dec
shrb
ja
aad
sub
mov
xor
bound
stc
or
mov
add
xor
add
int3
sbb
fucom
add
test
or
push
in
incl
rcrb
dec
adc
mov
xchg
inc
stos
negl
cwtl
fdivrs
add
push
adc
jle
stc
cmp
cli
push
mov
pop
pop
sti
xchg
push
enter
and
in
in
dec
dec
dec
xor
into
push
pop
punpckhwd
shlb
add
int
loopne
push
inc
div
insb
adc
push
js
imul
pop
jl
sti
enter
or
je
jo
imul
or
jmp
add
leave
leave
insl
scas
sti
jno
ud1
or
addr16
cld
dec
add
in
jbe
jge
stos
wbinvd
std
test
sbb
mov
mov
orl
insb
cmp
adc
pop
pop
inc
sub
mov
pop
test
mov
pop
xorb
enter
sbbl
jecxz
jl
bound
mov
adc
aad
push
dec
xor
loopne
push
add
jbe
sub
push
push
push
sub
or
inc
adc
ret
pop
insl
movsl
xchg
add
sbb
add
xor
push
sbb
xchg
sub
dec
loopne
ret
dec
aaa
pop
imul
lock
add
inc
sbb
jp
and
or
pop
push
xor
stos
es
sub
mov
add
pop
pop
fwait
icebp
cmc
mov
xchg
mov
pop
nop
int
sahf
mov
pop
and
pop
arpl
sub
inc
or
or
and
cld
test
xlat
xchg
ret
or
daa
dec
push
xchg
shl
fdivrs
cmp
dec
pop
adc
cmp
add
addr16
inc
popa
inc
jns
lods
jge
push
fisubl
pusha
jge
or
or
fidivrs
rorl
dec
xchg
push
lahf
dec
lea
lock
xor
rcr
arpl
nop
nop
mov
adc
xor
inc
adc
xchg
push
sbb
inc
inc
push
test
icebp
adc
push
out
outsb
push
ljmp
rorb
push
adc
lret
pop
bnd
sbb
aad
jae
cmp
lea
jns
or
popl
outsb
pop
add
and
lahf
push
or
and
and
mov
negl
nop
daa
int3
shrb
jecxz
xchg
das
mov
jbe
mov
cli
cmp
push
inc
sub
shlb
inc
jnp
imul
cmp
test
or
jae
sub
jne
sbb
adc
movsl
test
cmc
adc
in
pop
adc
int
mov
sub
dec
pop
sub
test
dec
addr16
dec
and
jg
push
addr16
jae
jo
jo
xor
and
or
or
dec
cmp
daa
daa
daa
iret
inc
jge
flds
xchg
xchg
xchg
add
pusha
or
pop
in
stc
shrl
add
xchg
xor
xchg
inc
or
aam
clc
mov
xchg
pop
cmpl
jns
nop
cmpb
add
xchg
clc
lcall
xor
jmp
testl
fadds
test
js
or
pop
push
jl
test
sub
push
sub
pop
mov
ret
mov
adc
and
pop
sub
sbb
dec
dec
shrb
adc
pop
sbb
push
cltd
or
dec
pusha
and
mov
scas
pop
mov
loop,pt
mov
in
mov
adc
popa
sub
subl
add
mov
outsl
les
pusha
mov
lds
dec
clc
or
sub
pushf
xor
adc
xchg
push
add
pop
lods
push
inc
adc
sbb
aaa
jmp
cmpsl
popf
cwtl
inc
mov
fadd
push
pop
ja
nop
and
cmp
ja
or
push
inc
or
add
and
sbb
dec
and
add
and
push
test
xor
sub
ds
cmp
lahf
sbb
int3
int3
ds
add
xor
adc
add
lea
jns
out
rcr
jmp
ja
sbb
fisttpl
xchg
inc
sbb
push
pop
push
xchg
ret
add
pop
xchg
icebp
data16
or
test
or
shlb
repz
in
inc
in
hlt
or
push
sub
imul
inc
dec
cs
int
pop
xor
and
pushf
cmp
es
mov
movsb
enter
adc
and
inc
sub
adc
pusha
aas
jge
add
bound
sahf
mov
mov
sbb
lock
or
jae
outsb
sbb
por
in
pop
adc
jne
lcall
int3
and
insl
icebp
mov
or
ret
add
lods
and
add
cmp
inc
xorl
insb
pop
and
imul
rcrl
test
je
sub
jns
or
aas
pusha
sub
fildl
outsl
lcall
and
fldenv
pop
pop
decl
push
mov
dec
mov
xor
pop
popa
or
push
adc
mov
adc
add
push
jp
lcall
adc
add
push
imulb
adc
adc
push
lods
or
mov
mov
fwait
aaa
pop
dec
je
imul
adc
push
aad
fst
insl
fsts
xchg
dec
or
add
sub
inc
or
add
pusha
push
xor
mov
iret
sbb
mov
sub
sub
shr
sbb
and
rolb
movb
adc
add
or
aam
mov
xchg
sub
mov
shll
or
push
add
jne
and
adc
push
shrl
add
jp
or
pop
cmp
mov
sbb
aaa
xlat
clc
mov
mov
sub
cmovs
pop
push
push
push
pop
cwtl
dec
add
dec
inc
dec
mov
and
inc
push
or
and
jmp
sbb
xchg
or
xchg
lock
bound
movswl
sbb
dec
lods
mov
adc
das
add
pop
inc
std
test
xchg
pop
ja
mov
or
nop
in
and
arpl
add
sbb
sub
mov
stos
sub
mov
mov
push
adc
lea
lock
push
scas
mov
push
mov
rolb
je
push
mov
mov
pushf
out
xchg
rolb
xchg
dec
mov
or
test
test
pop
pop
add
pop
pop
cmp
adc
add
jecxz
pop
cltd
ficoml
rorl
dec
or
test
inc
fmuls
inc
inc
cs
mov
xlat
add
cs
js
add
dec
inc
and
mov
jns
push
cltd
inc
je
xor
cpuid
push
ret
in
or
or
lea
in
add
cwtl
push
aaa
cmp
xlat
mov
outsb
mov
dec
mov
add
inc
and
mov
andl
dec
imul
sub
arpl
mov
frstor
xlat
aad
mov
iret
dec
adc
imul
pop
test
popa
fsubrs
decb
bound
in
or
jae
cs
adc
push
pop
arpl
adcl
repz
push
adc
push
iret
jmp
xchg
mull
push
loope
cvtpi2ps
sub
divl
push
dec
xchg
add
ds
xchg
outsb
psraw
xchg
jb
add
pop
add
rcrl
sarl
add
jp
pusha
or
bound
int
mov
push
mov
or
repnz
pop
popa
icebp
inc
loopne
jl
cmp
popf
pop
setb
add
xorl
cmp
ret
cmp
sbb
push
imul
pusha
xorl
sar
xchg
insl
or
fsts
es
mov
or
aas
outsl
add
cmp
ss
push
ljmp
lods
leave
mov
add
and
sub
xlat
mov
ds
add
aaa
loopne
sbb
xchg
shll
mov
push
dec
pop
jo
or
and
incl
and
cmp
mov
pop
insl
lods
push
bound
push
ljmp
stos
in
pop
movsl
lahf
dec
les
pop
push
in
sub
pusha
sub
cs
das
pusha
sbb
and
stos
add
dec
inc
out
pop
dec
or
mov
je
dec
inc
inc
sub
inc
add
std
pop
add
or
pop
icebp
lret
inc
add
roll
sbb
adc
pop
nop
mov
jno
or
popa
imul
iret
push
mov
push
add
outsb
cvtps2pd
pop
sbb
mov
repz
jg
mov
and
jmp
mov
or
sub
inc
arpl
xor
mov
jo
dec
outsl
mov
jmp
imul
push
and
je
bound
mov
xchg
clc
pop
pop
mov
cmp
cmp
cmpsl
hlt
sar
push
sbb
js
dec
sahf
sbb
pushw
fs
adcb
lock
outsl
xor
sub
push
int3
push
push
mov
pop
add
xor
lret
js
shlb
inc
add
in
pop
lea
ficoms
jbe
xchg
rorl
inc
outsb
adc
mov
mov
add
dec
roll
or
inc
das
icebp
add
and
test
push
je
repnz
sbb
test
push
out
jb
int
sbb
iret
and
ret
ucomiss
fs
daa
daa
daa
popf
lds
or
inc
bswap
mov
xchg
cpuid
jns
es
jno
sbb
dec
mov
dec
insl
inc
lods
es
cmpsl
pushf
es
jl
inc
fisttps
add
inc
test
stos
mov
enter
adcb
adc
fs
sub
insl
xor
dec
shll
cmc
xor
pop
int
cmp
jg
add
imul
xchg
mov
in
aad
add
cmp
fimull
mov
push
or
xor
sbb
filds
out
stos
push
orl
stos
stos
inc
push
aaa
je
repz
adc
push
mov
ljmp
lods
pop
ds
or
in
push
add
sbb
sbb
insb
push
inc
or
add
testl
mov
mov
xorl
push
negb
loopne
mov
sbb
mov
lahf
cmpsl
sti
mov
cmp
jmp
jmp
dec
jns
jl
add
aas
add
je
push
sahf
and
inc
xor
movl
inc
cmp
nop
pop
add
add
test
xchg
mov
xor
aam
filds
enter
adc
insl
in
pop
push
je
push
and
pop
sbb
insb
mov
pop
jmp
xchg
int3
enter
pushf
push
pushf
movups
int3
lea
inc
inc
push
sbb
sub
rol
and
ror
jo
test
mov
inc
xchg
cmc
pop
filds
negb
loopne
push
jne
lea
hlt
xorl
and
fwait
dec
mov
arpl
insb
adc
clc
loopne
cmp
adc
shl
lock
push
jno
test
mov
test
xchg
daa
aam
imul
movsb
pop
fdivrs
xor
cltd
sub
jnp
mov
sbb
mov
jb
call
push
mov
add
xchg
jne
inc
pop
aas
inc
sarl
inc
xor
or
lods
inc
add
or
or
rorb
jae
push
or
inc
push
and
fidivrl
xchg
add
add
push
add
test
daa
pop
or
jne
xor
iret
push
out
cmpb
jle
call
jo
mov
pop
in
add
aas
push
adc
aas
sti
insl
adc
adcb
xchg
cwtl
imul
or
mov
aas
jp
jb
and
push
shl
fs
sahf
fwait
aaa
dec
pop
ja
adc
mov
arpl
aas
insl
test
aas
bound
xor
mov
dec
inc
rcrb
sub
mov
mov
add
lret
adc
sub
les
dec
and
mov
in
adc
cmpsl
mov
dec
cmpsl
fmulp
cmpb
push
add
push
mov
inc
add
insb
push
pop
in
jmp
dec
or
dec
mov
push
adc
push
ss
mov
mov
shll
adc
sub
adc
in
sub
xchg
addb
sub
pop
mov
xor
mov
mov
flds
pop
xchg
imul
jne
inc
or
pop
sbb
hlt
outsb
mov
pop
sbb
inc
push
adc
dec
and
mov
repnz
dec
or
mov
or
outsb
shufps
arpl
mov
js
movsb
push
ret
mov
es
push
mov
inc
aam
jge
lret
push
leave
or
inc
pop
push
iret
dec
fistl
pop
daa
xchg
nop
ja
outsl
jo
rclb
test
jo
push
cmpsl
pop
mov
in
test
sbb
sbb
test
aas
add
sub
push
add
sub
or
xor
push
jmp
mov
push
psubusb
or
xor
repnz
ret
fiaddl
mov
mov
push
push
je
mov
lea
adc
and
ss
adc
inc
stos
cmp
mov
bswap
cld
pop
arpl
or
ss
push
and
xchg
lods
adcb
fstps
mov
sbb
inc
mov
pop
dec
stos
or
pop
dec
dec
jne
cmp
pop
jne
cmp
cmp
test
or
test
fs
adc
jae
inc
call
or
push
dec
sub
loopne
inc
out
jne
add
sub
adc
dec
adc
xor
sti
movsl
or
adc
dec
shll
sub
xor
shll
sub
xor
pop
jg
xor
push
push
pop
dec
jmp
mov
and
enter
stos
push
mov
xor
adc
insb
or
mov
inc
test
jg
mov
add
je
sub
add
cs
or
cmpsb
sub
jmp
mov
or
imul
xchg
mov
mov
in
nop
cmc
inc
dec
cmc
cli
pop
xorb
imul
sbb
and
outsb
popa
mov
addr16
adc
jmp
mov
pop
jnp
adc
orl
cmpl
jne
mov
cmpsb
mov
subl
xor
movsb
je
inc
lcall
sbb
or
xchg
sub
inc
imul
add
push
pop
aam
movsl
daa
es
inc
in
enter
outsl
scas
inc
mov
pushf
inc
scas
inc
or
decl
inc
bound
lahf
movsb
inc
rol
and
and
mov
sbb
lahf
in
test
dec
orb
dec
mov
pop
jl
push
aaa
or
push
push
inc
sbb
fmuls
push
or
aas
push
inc
and
dec
mov
add
mov
xchg
mov
inc
pop
cmpsb
pop
xlat
lret
enter
xor
mov
mov
and
or
xchg
mov
mov
inc
inc
pop
jp
rcl
movsl
mov
xor
negl
dec
sbb
pop
mov
ret
sahf
add
mov
adc
add
jae
mov
xchg
pop
and
or
add
push
or
xchg
and
sub
sbb
jg
aaa
rcr
inc
inc
pop
mov
pusha
mov
xchg
push
push
pusha
sbb
dec
lea
xor
orb
fbstp
inc
push
jmp
xchg
add
outsl
das
mov
inc
inc
dec
sbb
inc
out
xchg
enter
insl
mov
jne
mov
or
pop
lahf
lock
or
daa
and
pop
imul
push
sub
cwtl
sbb
xor
movsb
mov
out
dec
rorb
or
adc
rorb
mov
enter
movsb
cmc
add
mov
in
loope
jns
push
incb
fnsave
daa
fmull
xchg
stos
mov
cmpsb
push
dec
add
inc
pop
pop
faddl
and
loopne
or
and
into
inc
or
adc
shr
sti
pop
fbld
addr16
fs
inc
adc
jmp
cmp
rorl
or
and
mov
mov
js
jb
push
push
icebp
and
in
mov
mov
fsts
cmp
add
xor
out
cmpsl
and
inc
and
inc
and
gs
movsb
testb
cmp
mov
fsubrs
push
rolb
movsl
pop
and
sub
xor
sub
dec
aam
mov
push
hlt
sti
daa
movsb
int
fcoml
sbb
sub
mov
sbb
push
jnp
push
mov
shll
adc
add
xchg
or
pop
jbe
lea
es
sub
rolb
xchg
sbb
mov
aas
adc
mov
outsb
fisubs
lods
roll
jo
add
cmp
aas
xlat
ret
lret
and
and
jmp
mov
push
mov
push
pop
in
adc
cmpl
sbb
mov
notb
scas
xlat
xor
dec
or
std
xchg
xchg
mov
scas
loop
add
xor
xlat
sub
push
imul
cmp
xchg
mov
in
cmpb
mov
inc
jo
imul
pop
in
inc
rclb
xchg
pop
push
in
or
rcl
mov
mov
sbb
inc
cwtl
lods
imul
or
xchg
lock
mov
nop
sahf
add
mov
sbb
pop
pop
add
pushf
or
cld
adc
cmpsb
decl
loope
push
scas
fists
dec
adc
popa
jecxz
lods
outsl
dec
arpl
xor
adc
notb
inc
jne
and
pop
and
shlb
adc
inc
ljmp
sbb
cld
pop
add
sbb
out
int
push
cmp
lock
cltd
mov
adc
push
and
push
js
xor
mov
loopw
push
push
dec
push
in
cmp
std
scas
jne
shrl
jne
jecxz
ret
ja
pop
mov
push
adc
out
icebp
inc
leave
fs
jge
jno
push
and
data16
call
cli
cmp
leave
sub
mov
push
fisttpll
ljmp
daa
xor
sbb
xlat
jecxz
cmp
and
mov
push
ret
xchg
ljmp
jb
clc
inc
pop
and
and
jb
or
add
inc
iret
call
jo
cmpb
les
fdivrs
clc
adc
test
adc
xchg
adc
and
std
int
cmp
ds
sub
push
inc
lahf
push
xor
lods
and
xchg
xor
jmp
push
les
and
jne
iret
fistps
pop
inc
outsb
fcomp
shrb
add
cmpsl
ret
inc
insb
jge
test
imul
pop
mov
jp
jne
movsb
orb
and
mov
je
cmp
cmc
mov
jno
xchg
mov
add
mov
mov
pusha
mov
xchg
insb
ds
into
push
sbb
add
movsb
imul
fs
push
adc
cmp
mov
popa
lret
push
add
rcll
lods
pop
fidivrl
pop
movntps
or
inc
mov
adc
inc
mov
or
in
loopne
in
mov
mov
or
popa
xor
and
jne
inc
neg
mov
inc
push
and
fidivs
sub
ret
push
adc
or
shrb
or
sahf
pop
or
imul
jmp
dec
movsb
adc
add
pop
pop
add
movswl
or
add
pop
fs
cmp
add
lock
push
imul
bnd
jmp
movsl
mov
push
call
pop
push
movsb
test
daa
pop
ficoml
sub
imul
cmp
dec
loop
scas
dec
add
push
fs
rcll
popf
cltd
inc
push
inc
or
rorb
sbb
jbe
adc
add
sbb
or
dec
iret
jge
and
dec
adcb
movsl
push
insb
aam
jl
add
pop
or
je
push
fstl
cmp
and
dec
andb
pop
mov
mov
adc
xchg
jp
adc
adc
or
cwtl
fdivrp
fstpl
fwait
jmp
mov
nop
add
cmp
ds
mov
ret
dec
or
adc
cli
imul
or
push
insl
pop
xor
lret
pusha
xor
add
jmp
cmpsb
in
sbb
jmp
pop
js
cmp
icebp
sbb
sub
mov
outsl
inc
or
mov
test
and
lods
sub
adc
dec
xchg
cmpsl
fdivrs
sub
sbb
inc
sub
aaa
cmp
lods
xchg
stos
push
sbb
in
mov
xor
mov
andb
cmp
orl
sbb
jle
pop
ja
mov
sbb
addr16
xchg
in
sbb
xchg
in
inc
pushf
jo
add
sbb
dec
push
cs
mov
roll
jecxz
pop
push
jne
imul
xor
cmp
jmp
jo
test
inc
in
in
lret
imull
push
mov
aam
fcomp
sbb
sub
dec
dec
stos
loopne
push
adc
inc
loopne
in
pop
imul
or
xchg
orl
insb
mov
or
call
xorl
push
jne
imull
arpl
push
sbb
rorl
or
pop
sub
push
sbb
dec
outsl
scas
or
stos
clc
mov
pop
xor
jne
sbb
loop
dec
inc
sub
sbb
fldenv
add
movsl
pop
fnstenv
dec
cmp
das
nop
jp
nop
imul
add
push
push
cli
decl
sbbl
pusha
adc
pusha
jmp
jno
xchg
or
xchg
sbb
es
mov
adc
cs
js
push
sbb
jmp
and
aas
jno
sub
cmp
enter
xchg
or
push
add
adc
in
xchg
popf
inc
or
test
jb
jo
inc
mov
or
fstl
inc
and
mov
aam
add
mov
cmp
push
cmp
jmp
fisttps
jecxz
push
clc
jmp
mov
pop
mov
or
cmp
out
lahf
cmpb
mov
mov
jne
mov
and
daa
push
imul
jmp
decb
lock
clc
pop
addr16
fsts
adc
fmuls
daa
lods
adc
stos
in
jbe
and
add
add
jb
add
jecxz
testl
xorb
movl
push
and
iret
popa
lret
or
mov
and
mov
fidivrs
in
push
inc
imul
clc
fldenv
ret
xchg
jnp
outsb
sub
daa
dec
cmp
imul
scas
xor
je
imul
fiadds
add
andb
and
sub
adc
mov
sub
imul
push
inc
clc
clc
pop
gs
sbb
jmp
sub
pusha
inc
inc
imul
or
mov
sub
jle
out
dec
mov
mov
sbb
or
nop
push
mov
add
fbstp
add
mov
mov
and
mov
pop
daa
dec
mov
lods
or
push
das
xchg
rol
pop
pop
mov
test
xor
or
pop
mov
movsb
jne
mov
and
lea
add
aas
pushf
mov
js
mov
xor
mov
inc
jge
test
movsb
jne
mov
cmp
mov
or
aas
dec
lcall
loopne
bound
jno
jne
mov
punpckhwd
lods
or
aas
pop
dec
pop
xchg
or
xchg
push
popa
add
sub
js
outsb
mov
pop
jbe
and
xor
xchg
rcr
push
push
loope
inc
jne
xchg
add
insb
aas
fistpll
sub
and
and
inc
dec
jmp
and
pop
inc
inc
rcr
divps
push
inc
push
push
fdivrs
jecxz
subb
ds
adc
push
lods
ret
pusha
and
dec
ret
gs
mov
insb
adc
mov
dec
inc
xor
outsl
sub
cli
or
ljmp
decl
jg
adc
daa
icebp
dec
jb
lea
and
imul
jnp
cmp
sbb
cmp
pusha
jmp
popl
dec
dec
fisttps
pop
jmp
cmp
rolb
jbe
push
data16
adcb
or
and
insl
ret
cmp
push
or
adc
movsb
insb
dec
pop
je
pop
xchg
out
iret
shlb
sarl
xor
cmp
or
test
test
mov
jnp
pop
xchg
add
sbb
jo
or
xchg
mov
and
or
pop
push
or
cmp
dec
jbe
rolb
adc
dec
lea
ss
adc
cmp
jl
adc
dec
hlt
inc
sub
pop
outsb
cmovnp
adc
sbb
add
and
pop
fadds
gs
or
lock
add
loopne
cmp
movsl
add
and
sub
rorb
xor
mov
xor
pop
enter
xorb
push
xchg
adc
xlat
jno
mov
rorb
mov
lods
addb
adc
push
iret
and
rcrl
push
shl
lret
sub
clc
les
inc
push
ja
sub
sbbl
fisubl
jl
xchg
sti
lret
clc
test
inc
jl
xchg
pop
mov
andl
out
adc
outsb
addb
xor
movsl
xchg
xchg
adc
add
sbb
jle
negl
hlt
sub
pop
imul
push
lret
sbb
mov
je
cmp
mov
jmp
movsb
icebp
or
call
testl
adc
cwtl
push
arpl
and
sub
cmp
sub
loope
mov
jne
in
popf
pop
andb
jo
sub
xor
sbb
shll
mov
mov
out
rorl
mov
pop
cwtl
ret
xchg
sub
pop
push
or
adc
xlat
aad
mov
and
jge
mov
push
pop
in
rorb
ffreep
add
dec
dec
mov
xorb
arpl
mov
xor
jae
je
jo
sbb
inc
sub
aas
je
mov
inc
insb
repz
pop
sub
inc
pop
add
pop
pop
jnp
or
pop
subl
loopne
pusha
add
jp
call
pop
dec
and
test
or
mov
divl
je
sub
out
adc
insb
add
sub
out
mov
jl
adc
mov
xor
adc
jne
adc
pop
jmp
xchg
xlat
add
dec
std
out
mov
xchg
jp
sub
cmpsb
inc
flds
imul
xabort
sub
mov
dec
xchg
push
mov
mov
push
sahf
imul
push
mov
add
push
jo
pusha
add
pop
aaa
nop
out
rolb
enter
aas
cmp
push
xor
jg
das
sub
pop
out
cmpl
inc
xchg
dec
inc
test
xor
roll
jmp
jge
dec
inc
push
mov
pop
inc
ret
inc
and
repnz
inc
sub
pusha
mov
neg
and
add
push
sarl
call
sti
gs
mov
sqrtps
or
jbe
mov
cmp
pop
fnstenv
lcall
sub
sbb
std
ret
cmp
fidivl
inc
sbb
and
je
sbb
or
jae
dec
dec
pop
adc
xchg
dec
sti
inc
test
inc
inc
jne
adc
inc
jne
aaa
cs
pushf
dec
jne
mov
idivl
sub
or
pop
mov
je
add
add
test
test
sub
shrb
adc
arpl
or
push
orl
pop
sarb
or
push
in
fucomi
call
push
mov
das
loope
push
add
lods
dec
loopne
xchg
testb
and
sub
cmp
mov
filds
cmpsl
jns
movsb
call
xor
lret
das
sub
add
fnsave
cmp
inc
fchs
dec
orl
cmpsl
rclb
push
cmpsb
sbb
fistpl
cmp
or
dec
lret
cmp
rolb
push
push
add
push
push
mov
enter
pop
jns
rclb
pop
lcall
lock
push
scas
pop
aas
ds
or
sub
cltd
sahf
subb
inc
in
or
add
lea
dec
mov
pusha
or
addl
icebp
pop
mov
mov
xor
in
and
cmp
push
dec
xchg
inc
pop
cmp
icebp
jmp
not
pcmpgtw
cmp
jmp
cmp
xlat
sahf
sbbb
or
xchg
and
and
jmp
push
push
dec
push
xor
cmp
bound
add
push
jmp
aam
pop
inc
pop
add
sbb
pop
pop
push
ret
pop
nop
test
dec
leave
test
jnp
adc
xchg
push
mov
adc
push
adc
popf
in
sub
out
lahf
arpl
adc
cmp
jne
xor
or
pop
or
sub
hlt
adc
mov
into
push
movb
push
dec
dec
cmp
mov
notb
mov
movsb
dec
and
push
and
xchg
xchg
dec
push
xchg
adc
sub
mov
dec
imul
or
inc
sbb
jns
pop
ljmp
mov
aas
or
push
push
pop
out
sub
sub
dec
mov
mov
dec
lds
jecxz
mov
pop
cs
jno
add
xor
lret
push
push
imul
inc
dec
adc
or
jb
push
pop
adc
xlat
xchg
into
out
aaa
and
mov
add
cs
je
add
inc
and
push
dec
bound
dec
cmpsb
push
xchg
repnz
cmp
fstps
test
pushf
or
mov
hlt
xor
mov
nop
sbb
shlb
aas
movsb
pop
sub
roll
adc
mov
cmp
sub
mov
das
push
cmp
inc
aaa
adc
fdivs
jb
or
pop
push
xor
lock
adc
xor
fs
lods
test
lret
adc
pusha
dec
inc
filds
adc
sbb
mov
loope
fbld
fs
inc
dec
xor
les
inc
cwtl
popa
push
fstpt
add
adc
dec
pushf
push
or
and
lock
cmpsl
icebp
lea
ljmp
cwtl
xchg
lock
shrb
mov
fstpt
sbb
push
xor
stos
in
push
nop
sbb
pop
xchg
sbb
pusha
mov
inc
dec
adcl
and
orl
mov
mov
adc
and
out
shrb
dec
xor
mov
das
arpl
xor
sub
or
jne
cmc
xor
nop
gs
jne
mov
sbb
lods
adc
pusha
push
lret
ror
xchg
mov
lret
pop
fsubrs
xor
push
push
pop
and
mov
addl
adc
inc
or
test
or
lea
pop
testb
loope
mov
add
jecxz
inc
push
adcl
movsb
inc
dec
jge
mov
cld
mov
or
sti
fstpt
lods
push
or
dec
add
push
dec
dec
adc
sbb
dec
loopne
push
nop
fidivl
popa
in
movaps
mov
sub
adc
rclb
or
test
mov
frstor
cmpl
inc
jecxz
insl
push
add
or
testl
movsl
aam
clc
and
jg
sbb
imul
pop
cmp
inc
dec
push
or
shll
mov
pop
inc
lods
je
es
xor
xchg
hlt
mov
jo
mov
and
inc
add
or
cmpsl
jo
ret
mov
sbb
pop
stos
mov
add
xchg
cmp
js
inc
fists
add
cld
lcall
mov
test
jbe
push
push
push
imul
xlat
xor
nop
or
adc
or
add
mov
repz
fwait
je
aam
mov
push
add
cmp
orb
cmp
shlb
in
dec
ljmp
pop
xchg
xchg
mov
jnp
jne
push
sub
inc
stos
test
add
jne
mov
push
cmp
fcoms
fisttpl
mov
addb
jnp
test
bound
inc
mov
xchg
test
test
out
sub
push
mov
inc
sub
cmp
outsb
fidivs
dec
adc
cmpsb
es
call
cmp
ljmp
lret
inc
jne
xchg
ret
sbb
cmp
xor
outsl
push
aas
pop
sub
xchg
sbb
dec
jo
insl
sub
xchg
pushf
cmp
out
xchg
jne
fstl
xchg
enter
or
daa
or
out
mov
mov
add
test
nop
in
mov
or
sub
sbb
loop
cwtl
repz
xchg
mov
pop
mov
fcmovnb
pop
push
cwtl
nop
or
out
xchg
pop
cmpb
and
xchg
push
pop
fs
imul
xchg
movsb
pop
pushf
pop
or
push
cmp
push
xchg
push
pop
je
mov
or
xchg
fldcw
add
fisttpl
or
push
and
jne
cmpsl
mov
adc
mov
or
jmp
sbb
add
or
fnstsw
insb
cwtl
mov
xchg
sbb
xor
xor
call
pop
rorl
das
jle
inc
dec
test
add
lds
icebp
loop
add
cmp
enter
jnp
add
pop
jp
pop
cmp
in
push
inc
cmp
stc
or
or
into
mov
pop
xchg
je
cmp
int3
cmp
jl
inc
mov
push
push
cmpsb
inc
push
xchg
or
insl
das
or
je
mov
push
or
enter
pop
push
add
or
jno
nop
pushf
mov
ret
dec
mov
nop
cwtl
dec
movsb
test
mov
mov
scas
fisttps
or
mov
rcrl
cmp
pop
dec
mov
frstor
shrb
inc
dec
aas
xchg
insb
test
pop
adc
clc
mov
jne
xchg
popa
jnp
mov
add
sbb
add
adc
outsl
or
inc
bound
cmp
and
inc
adc
jb
rcll
cmp
orb
xchg
xor
das
push
test
sbb
popa
lret
in
push
or
lock
adc
nop
cs
je
mov
out
mov
and
fisubl
push
aas
or
nop
mov
sbb
out
mov
dec
and
sbb
ja
and
insl
popa
je
nop
xor
mov
stos
add
insb
je
mov
push
add
or
mov
leave
xor
inc
push
sbb
or
test
bound
jo
xchg
cmp
loopne
rclb
maxps
or
inc
pop
mov
sysexit
or
daa
loope
andl
aam
cli
mov
loop
jle
iret
dec
jo
add
push
test
js
mov
ja
jns
andb
dec
push
std
test
out
cmp
xor
mov
test
dec
xor
dec
xor
int
add
adc
test
or
add
push
add
pusha
mov
dec
xor
xchg
ficoms
sbb
adc
adcl
jp
jbe
xchg
cmp
sbb
mov
test
cmp
adc
int3
call
mov
stc
mov
pop
jle
pop
test
xor
xchg
nop
shl
xchg
daa
pop
or
xor
lcall
ljmp
or
stos
pop
jmp
xchg
inc
mov
pop
jl
mov
mov
jnp
dec
fwait
je
add
cmpb
inc
push
inc
hlt
sbb
push
int3
jecxz
add
push
movb
daa
cmpsl
sbb
sbb
mov
mov
jns
fwait
imul
push
sbb
pop
jb
push
or
je
adc
xor
push
sbb
pop
lock
ds
dec
pop
aad
cmpb
negb
pop
aas
push
mov
and
and
adc
inc
js
roll
daa
insl
mov
insb
pop
rclb
loopne
das
fs
je
pop
and
sub
test
sub
xchg
pusha
mov
std
test
mov
test
sub
adc
push
xchg
add
xchg
hlt
sbb
adc
pop
push
inc
or
ret
cltd
cmp
mov
sub
je
push
cwtl
xchg
js
leave
sti
push
cli
nop
shlb
mov
clc
roll
add
pop
xchg
dec
call
lret
clc
or
scas
loopne
inc
push
dec
push
inc
xchg
cmp
jbe
inc
in
xor
mov
xchg
pop
faddl
sub
lds
adc
pop
vorps
xor
pop
test
das
cmc
and
cmp
push
adc
inc
mov
dec
push
popa
xchg
and
sahf
sbb
and
cwtl
mov
scas
inc
xor
out
push
cwtl
dec
fldcw
outsb
cwtl
daa
jecxz
loope
sub
or
out
add
aad
or
lods
pop
dec
js
add
add
jns
add
jb
inc
popa
sub
popf
in
je
or
dec
lret
jo
inc
inc
mov
ret
xchg
cmp
aaa
inc
mov
mov
adc
in
dec
pop
fs
cmpl
add
xchg
fcomps
xorb
imul
mov
lods
sub
xchg
ret
inc
xor
add
stos
or
into
mov
xor
lcall
pop
push
daa
out
hlt
subb
out
mov
out
or
jns
cmpsl
shlb
mov
lea
movb
scas
fisubl
add
push
pop
sbb
popa
sbb
lret
and
add
adc
pop
pop
popa
sbb
push
fcoml
xlat
dec
adc
push
add
pop
mov
add
fbld
popa
cmp
inc
loopne
sbbl
xchg
loopne
mov
outsl
xlat
or
or
nop
sarb
or
xlat
scas
mov
inc
adc
rorb
jne
xchg
adc
adc
fldcw
fistl
scas
push
fmull
inc
or
loope
data16
in
insb
daa
xor
adc
push
add
jae
das
adc
dec
push
fstl
jle
add
les
add
outsb
or
sub
inc
push
adc
push
push
clc
leave
mov
je
cwtl
enter
mov
outsb
push
mov
fistl
add
out
mov
dec
mov
mov
clc
mov
pop
repnz
aad
rorb
int3
sbbb
pop
fstps
hlt
xchg
lock
fwait
and
dec
scas
vmread
add
mov
jmp
mov
push
mov
or
mov
lret
pop
xchg
loopne
mov
inc
or
xlat
cmpsb
add
add
repnz
rorl
sbb
lds
cmp
repz
xor
mov
add
mov
jge
lahf
sti
jno
add
and
cmp
test
jle
insl
enter
and
fcmove
xor
and
adc
rolb
pop
cmp
insl
add
pop
lahf
cmovbe
lock
lcall
pop
mov
cmp
ljmp
push
popf
push
dec
pop
addr16
nop
lret
adc
xchg
sahf
adc
sbb
lds
fs
add
sbb
jmp
sbb
loopne
sbb
add
test
loopne
adc
mov
add
enter
addr16
jmp
fwait
push
add
push
scas
cmp
sub
cmp
push
testb
mov
jp
dec
ret
in
sub
cmp
test
imul
sub
sub
lods
cmp
push
addl
mov
cmp
jo
jecxz
loop
sub
inc
xchg
int
jo
shl
ljmp
add
outsl
arpl
xchg
and
outsl
or
add
jo
das
iret
mov
add
inc
jge
jo
lds
add
add
add
je
push
pop
lock
push
and
dec
xchg
cmp
dec
mov
ret
dec
and
pop
addb
loopne
xchg
adc
sbb
mov
mov
xor
lret
movsb
mov
sub
daa
les
push
add
cmp
nop
stc
scas
in
add
cmp
xor
sub
inc
jmp
add
adc
add
mov
dec
jl
sub
add
jo
sub
add
or
aam
aas
scas
das
sub
add
fs
mov
les
push
mov
aad
mov
pop
or
xchg
jle
inc
sti
rcrb
or
rcrl
movsb
jo
pop
jecxz
dec
push
sbb
imul
dec
add
hlt
push
cli
push
rol
xor
or
sbb
hlt
rol
push
out
mov
or
or
stos
jg
cltd
jns
hlt
push
lea
cmp
test
jmp
jmp
arpl
xchg
or
cmp
mov
cmp
call
sub
imul
jecxz
or
adc
btr
sub
add
push
dec
lahf
cmp
adc
pop
iret
cli
pushf
mov
pusha
lahf
dec
test
xor
push
jno
jb
sbb
lret
xchg
sbb
les
mov
jmp
and
pop
push
adc
dec
and
push
or
pop
hlt
xchg
push
out
mov
loope
cmpsb
jmp
mov
and
test
adc
cltd
xor
adcb
xor
push
insb
sub
mov
cmp
jg
inc
fsub
push
push
jge
loop
xor
stos
cmpl
pusha
es
push
dec
push
push
or
mov
int
int3
andb
mov
das
push
xchg
or
fimuls
das
movsb
mov
lods
and
mov
mov
mov
adc
and
xchg
lock
add
sub
add
or
or
mov
add
mov
pop
cmpsb
cli
or
mov
jae
mov
mov
sub
jae
jnp
movsb
push
out
mov
add
xchg
clc
mov
xor
add
jno
mov
mov
pusha
xchg
ja
imul
mov
xchg
push
outsl
push
or
int3
add
shlb
mov
mov
xor
incb
push
add
imul
mov
sbb
jo
shl
popf
sahf
test
jbe
insb
dec
shrb
pop
iret
ja
daa
adc
in
mov
push
sub
xchg
leave
in
or
xchg
jo
mov
dec
nop
rolb
xchg
push
xor
mov
sbb
jmp
push
push
pushf
cmpsb
js
or
jge
shll
repnz
or
push
mov
out
add
jmp
sub
sub
push
push
mov
mov
adc
jp
into
xchg
into
fidivrl
xor
sub
cmp
xor
add
cmc
lods
and
pop
ljmp
es
xlat
pop
xor
pop
stos
ret
gs
shr
xchg
add
fs
in
mov
push
adc
add
cwtl
sbb
inc
and
jge
or
cmc
ficompl
or
jnp
xor
inc
jmp
add
inc
add
inc
add
mov
das
insb
inc
es
cmpsb
sub
dec
or
and
or
jle
jl
dec
lahf
lods
in
or
int
cmp
pop
or
add
add
jle
mov
and
push
jo
xorb
aas
ror
adc
jb
cmp
jge
ja
jne
fstpl
push
xchg
inc
adcb
je
jb
sbb
scas
fidivl
push
push
sbbb
push
adc
std
subb
xorb
add
insb
add
sti
xchg
add
bound
sbb
push
imul
sub
lret
jmp
inc
or
and
dec
pop
imul
mov
add
or
sti
lret
mov
lcall
and
mov
dec
mov
mov
lods
shrl
jmp
mov
je
add
mov
sbb
sub
push
popa
lods
in
decb
test
into
push
jno
inc
xor
pop
mov
cmp
pop
out
sub
rorl
push
roll
pop
fs
xchg
dec
jae
sub
xor
sub
jle
add
jg
sub
orl
cmp
mov
mov
jg
inc
ja
aaa
cmp
jne
lea
arpl
fdivl
push
inc
clc
dec
sub
data16
into
xchg
push
push
testb
dec
setp
push
cmpsb
test
scas
or
lods
xchg
sbb
mov
or
sub
cmp
pop
mov
xchg
daa
bound
mov
jbe
inc
cmp
inc
mov
pop
ds
xlat
cwtl
clc
les
jecxz,pn
cmp
loopne
add
cs
dec
je
addl
and
iret
dec
ss
and
mov
cmp
pusha
sti
dec
mov
imul
xor
inc
adc
sarb
iret
std
xchg
pusha
or
mov
sti
and
rol
inc
adc
incl
xor
inc
pusha
mov
sti
das
pop
test
hlt
sbb
pinsrw
dec
push
add
jo
mov
push
shlb
std
mov
lahf
stos
cmp
pop
jne
sub
push
xchg
ret
int3
pop
push
sbb
arpl
add
jmp
dec
lock
shlb
xor
sub
inc
inc
pop
jmp
push
push
repz
or
or
cwtl
hlt
xchg
mov
pushf
enter
pushf
dec
clc
daa
pop
pop
enter
dec
dec
enter
jle
mov
adc
cld
cltd
mov
dec
jne
test
adc
fwait
add
sub
aas
addr16
jmp
add
mov
push
jb
sub
test
and
mov
dec
cmp
lea
aas
dec
test
push
aam
fsubrl
leave
mov
mov
enter
nop
dec
outsl
in
inc
mov
das
in
push
add
and
mov
and
ljmp
push
push
cltd
mov
loopne
aas
add
xor
jge
arpl
je
mov
ficoms
or
sub
push
dec
add
or
addr16
mov
fwait
sub
dec
jbe
adc
add
sbb
and
jo
cmp
mov
and
jne
and
sahf
ret
sar
sbb
sbb
push
add
cmp
inc
lea
cmpl
cmpsl
xor
push
les
rcrb
sbb
and
pusha
cmp
movsl
cmp
cmpl
dec
fiaddl
push
bound
mov
pop
lods
hlt
pop
mov
daa
mov
or
sti
or
xor
inc
pop
adc
scas
cmpsb
lods
enter
add
mov
add
addr16
orl
xor
lock
ja
mov
add
dec
sbb
push
or
add
xchg
xchg
mov
push
xchg
test
push
cld
cmp
sbb
rcl
pop
mov
jmp
jl
dec
in
jp
cld
inc
pop
test
decl
and
popf
pop
push
lea
aam
mov
movsl
dec
inc
sbb
jbe
jle
cmpb
dec
pop
loopne
inc
sbb
shrb
hlt
dec
fwait
jne
cmp
adcl
repz
push
lea
lods
data16
movsl
push
cmovno
dec
rcll
cmpsb
mov
push
cld
and
sub
gs
pop
and
pop
sub
mov
mov
mov
and
cwtl
pop
enter
jo
std
testb
jne
xor
lods
call
pop
shr
leave
xor
add
aam
lods
jbe
daa
mov
push
push
into
mov
stc
aaa
in
test
aam
stos
test
dec
stos
jmp
mov
shl
lcall
sahf
shrb
push
stos
push
sbb
and
inc
shrb
push
or
daa
xchg
jp
rcl
or
es
ds
cmpsb
iret
sbb
adc
insb
dec
loop
jg
jb
mov
pop
inc
test
add
push
xor
movb
push
fidivrl
popa
stos
test
inc
and
sbb
movsb
xchg
jae
and
xor
shl
pop
sysret
sbb
movb
add
inc
int3
push
push
popa
clc
and
test
cwtl
mov
lods
sub
mov
outsb
mov
rorb
cli
dec
jo
push
orb
or
es
xchg
xchg
jbe
jle
adc
or
sbb
es
incb
pop
mov
jp
out
add
sbb
inc
jne
sub
int3
xchg
xchg
add
or
pop
or
fwait
push
jbe
shl
pusha
pop
pop
push
inc
dec
adc
inc
mov
mov
mov
mov
mov
test
daa
adc
mov
pop
mov
sub
mov
xchg
and
inc
testl
orb
inc
and
cltd
addb
jle
fsts
sbb
jne
mov
pop
ret
fidivrl
xor
or
arpl
cld
push
push
and
inc
add
lea
sub
mov
dec
push
push
push
add
push
push
or
shlb
xchg
lock
test
lea
add
or
cmc
adc
push
push
jb
daa
dec
xchg
jo
add
ja
mov
adc
inc
sahf
loop
and
sbb
adc
pop
adc
pop
jp
repz
loop
sbb
adc
or
push
aam
sub
or
nop
inc
mov
out
mov
insl
mov
testb
sbb
in
mov
and
test
mov
push
sub
ret
jmp
xchg
rclb
push
fs
mov
pop
gs
test
adc
test
push
jno
push
sub
adc
lods
jl
movsb
fdivrl
cmp
cmp
push
iret
dec
sbb
icebp
lret
sti
adc
in
xchg
adc
jns
jb
xor
inc
sarb
inc
stos
daa
rolb
add
jo
push
dec
stos
xchg
and
sbb
push
sub
inc
jle
push
add
xchg
jbe
sbb
test
mov
pop
shrb
and
rorb
pop
fs
out
aas
in
or
adc
sbb
scas
test
lock
adc
xor
lcall
add
adc
push
shlb
pop
dec
xchg
pushf
pop
les
iret
dec
aas
cmp
pusha
roll
cmp
pop
dec
fwait
clc
cs
pop
pop
jb
je
mov
inc
dec
xor
mov
loopne
sub
add
push
dec
or
add
icebp
sarb
add
mov
or
mov
inc
jp
mov
movsl
lods
adc
or
jb
xor
add
xor
std
sbb
mov
add
lret
mov
insl
add
inc
and
test
jne
rorb
mov
dec
sbb
pop
inc
aaa
imul
adc
repz
sub
cmp
xchg
xor
push
std
jb
lcall
lea
gs
jl
mov
cmc
add
outsl
rcrl
and
ret
mov
in
or
clc
adc
add
xor
xchg
push
ret
jae
xchg
sbb
rorb
inc
addl
lsl
add
push
mov
add
imul
push
add
and
leave
sarl
sub
inc
jb
pop
xor
pop
leave
or
mov
loop
sub
push
rolb
mov
xchg
icebp
sub
pop
push
xchg
dec
or
mov
cmp
subb
and
sub
xor
fistps
inc
daa
push
icebp
pushl
push
jne
icebp
lods
cmp
push
nop
loop
mov
jg
and
dec
fiaddl
xor
sbb
add
pop
push
xchg
mov
inc
es
rolb
add
daa
enter
sub
js
push
xchg
roll
int
xchg
adc
inc
jg
enter
add
ret
jmp
cmp
push
add
sub
ljmp
mov
or
lock
enter
out
jns
jl
xor
and
loopne
cmpsl
icebp
jbe
ss
imul
aas
add
xchg
or
jnp
push
aam
int3
jg
loope
test
in
sbb
fs
and
cmp
imul
sub
icebp
call
xor
pop
add
inc
or
ret
mov
push
jmp
loopne
pop
sar
inc
sbb
and
jmp
sbb
lret
add
cmp
sub
sub
or
ljmp
and
sub
jg
sbb
fucompp
sbb
arpl
xchg
orl
add
je
addl
mov
fs
mov
mov
pop
inc
aaa
adc
or
sbb
test
adc
sbb
mov
push
adc
les
add
adc
aaa
or
jmp
xor
jecxz
int
or
and
mov
jmp
jo
cmc
jbe
jne
lea
xchg
push
sbb
push
dec
xlat
ljmp
fmuls
aas
sbbl
xor
or
insb
cmp
loopne
ret
or
push
xor
xchg
enter
test
ret
lods
sub
pop
dec
mov
fisubs
stc
adc
shr
andl
addl
mov
pop
orb
xchg
cli
adc
pop
sbb
sub
rorb
jo,pn
adc
cmpsl
inc
jb
adc
in
in
push
rolb
add
cmp
bound
and
addr16
inc
add
xor
adc
or
mov
cmp
sub
stos
shlb
mov
nop
ss
in
mov
jge
loope
and
aad
pop
adc
xchg
sub
cmp
sub
sub
pop
dec
add
in
jg
jmp
sbb
jle
fwait
into
and
fistpll
pop
ret
test
inc
cmp
inc
jbe
sbb
xor
mov
inc
jge
xor
dec
loop
xchg
push
xchg
add
push
arpl
push
inc
jne
loope
pop
lock
adc
inc
xor
pushf
dec
or
or
jb
pop
push
pop
mov
push
divl
dec
pushf
pop
or
nop
cwtl
das
mov
mov
loopne
lahf
xor
test
hlt
and
cmpsb
push
movsl
adc
lea
jmp
inc
popf
push
inc
push
sub
mov
cmp
and
cmp
cwtl
add
cld
es
popf
cmp
jle
call
mov
mov
or
ds
mov
jns
and
add
sub
in
clc
sub
adc
pop
sbb
push
scas
push
inc
push
and
cmp
cmp
mov
mov
add
int
iret
scas
add
lea
push
aam
cwtl
pop
mov
out
or
dec
dec
in
sbb
jecxz
lcall
pop
out
adc
cmp
or
mov
mov
rolb
mov
fiaddl
xchg
jp
mov
and
inc
sahf
jge
push
and
or
in
lahf
push
out
movb
xchg
inc
xchg
cwtl
test
rolb
jne
xor
push
jp
pop
add
es
or
mov
sbb
sbb
xchg
jo
sub
sub
pusha
push
popf
or
cmp
xchg
sub
jne
or
add
sub
into
xchg
add
inc
mov
lea
aaa
subb
sub
andl
push
mov
and
rolb
sub
dec
adc
and
and
pop
mov
xor
js
and
nop
in
lods
mov
cmp
es
add
shrl
inc
cmpsb
xchg
cltd
xor
push
xchg
add
or
cmp
pop
xchg
pop
call
push
popa
add
or
frstor
stc
or
mov
lahf
addr16
push
into
pop
orb
fwait
into
push
jp
adc
cld
setg
testb
sbbb
decl
add
adc
or
dec
add
adc
fiaddl
pop
inc
adc
ficoml
fmull
call
or
dec
nop
mov
adc
mov
adc
mov
and
lea
or
das
pop
hlt
js
ja
in
mov
dec
pop
in
idivb
pop
jnp
test
jge
xchg
iret
sub
cmpb
jl
ret
inc
das
clc
jmp
imul
xchg
and
in
dec
or
out
in
or
pop
or
adcb
stos
fsubs
xchg
ss
movsb
nop
sub
dec
xor
imul
nop
dec
test
jns
sub
icebp
sub
notb
les
jbe
adc
sub
js
test
sbb
test
outsl
adcl
ret
shrb
pop
inc
pop
and
filds
xor
sub
adc
xchg
subb
sub
or
adc
add
ss
pop
hlt
dec
xchg
mov
push
pop
cmp
jl
mov
mov
dec
push
sub
loopne
testl
or
or
loop
lds
cli
mov
daa
roll
icebp
push
mov
or
daa
and
ret
add
mov
jns
push
sbb
aam
test
mov
adc
out
cmp
jge
mov
pop
or
sub
sub
outsb
sub
add
jmp
add
push
shrb
loopne
pop
or
sub
mov
xlat
and
mov
lret
and
adc
add
dec
andl
ret
sub
call
lcall
insl
loopne
es
dec
andl
or
mov
mov
stos
dec
call
jbe
inc
lret
mov
cmp
or
xchg
jle
adcb
push
ret
push
or
xchg
daa
outsl
push
jnp
insb
jo
cmpb
sub
jle
popf
shr
pushf
xchg
xchg
inc
add
pop
add
outsl
rcr
or
repz
orb
jbe
dec
shlb
dec
imul
lret
add
loopne
sbb
xchg
clc
and
inc
sbb
add
leave
or
mov
sbb
adc
xchg
mov
andl
out
xchg
cli
add
adc
jge
dec
and
lock
sbb
inc
pop
inc
and
sub
and
pop
cmp
jne
xchg
loope
push
das
cltd
imul
xchg
sub
fwait
aad
ret
rorb
lret
cmp
in
outsb
xor
testl
rolb
mov
adc
or
gs
fcomps
rcrb
push
cmp
push
xorb
pushf
fpatan
adc
or
push
sbb
xor
je
push
inc
nop
xchg
iret
in
or
aaa
packssdw
punpcklbw
add
or
inc
mov
testb
add
cli
mov
int
push
addr16
into
pop
sub
jg
xchg
pop
lods
push
inc
push
push
das
shrl
test
pop
add
dec
push
inc
sub
cmp
xchg
mov
sub
sbb
jne
push
xchg
fstps
jne
lods
arpl
ficoml
rcrl
popl
repnz
inc
mov
dec
bound
mov
inc
subb
movsb
lahf
and
fwait
dec
loopne
shlb
ficomps
sub
rorb
imul
popa
cld
lcall
push
cmp
mov
shl
or
lea
idivl
nop
int
mov
cmp
and
cmp
loopne
ret
jo
mov
dec
inc
lock
nop
adc
call
pop
or
or
insb
sahf
pop
push
dec
je
daa
sub
pop
inc
pop
imul
lods
in
jnp
push
loopne
rcl
dec
test
and
and
cmpsb
lods
inc
mov
mov
in
inc
add
and
and
xor
xor
test
stos
jg
aam
mov
and
and
mov
pop
mov
adc
scas
sbb
adc
push
daa
push
es
ret
cmp
add
repz
xor
test
xor
lock
dec
dec
dec
js
xchg
imul
sarb
ret
mov
dec
sarb
shr
cmp
aam
outsl
icebp
mov
push
pop
push
imul
aad
in
or
push
rolb
xorl
xchg
mov
ss
pop
sarl
jae
pop
jmp
xchg
inc
arpl
sar
sub
mov
dec
cmp
fsub
xchg
in
in
push
test
xorb
adc
push
and
push
jmp
in
dec
inc
dec
xchg
mov
sbb
cmp
mov
add
enter
add
mov
fwait
or
mov
in
insb
xor
jge
sahf
mov
addr16
push
dec
ja
mov
cli
popa
fnstcw
popf
arpl
mov
cs
movups
xor
mov
adc
rorl
aas
ffree
daa
movsb
bound
mov
sub
jne
sar
inc
mov
jne
adc
hlt
jg
imul
push
mov
push
lahf
add
cmpl
mov
movsb
pop
pop
lea
jge
inc
mov
incw
ffree
push
mov
jne
and
add
fistpl
lahf
lret
adc
movsl
add
bnd
inc
das
mov
lock
pop
push
ss
pop
push
mov
sub
sub
arpl
push
dec
sub
pop
outsb
mov
jns
xor
xchg
mov
and
push
mov
pusha
mov
xor
mov
sbb
xchg
cmpsl
or
pop
mov
lret
clc
and
lea
xor
or
lds
aam
mov
lods
loopne
ss
movsb
popl
cmp
add
and
jge
push
test
sbb
jo
shr
ficoms
inc
arpl
insl
inc
insl
xor
sub
xor
inc
xor
xchg
xor
lods
add
add
cmc
push
inc
and
mov
out
mov
push
push
adc
lret
mov
repnz
fstpl
jnp
mov
or
dec
fmul
outsl
mov
add
jne
fadd
cs
test
adc
add
xchg
adc
lods
inc
xor
add
ljmp
cmp
repz
sub
adc
sub
xchg
loopne
add
xor
xor
movsl
xchg
xchg
lret
ret
sbbl
or
arpl
cwtl
add
adcb
push
testl
es
pop
jecxz
xor
mov
cli
add
mov
pop
xchg
jmp
iret
or
xchg
add
mov
and
mov
push
andl
pusha
lds
adc
pop
pop
stos
mov
notb
sahf
nop
xor
test
lahf
xchg
call
out
or
lret
and
inc
or
cwtl
mov
push
or
imul
inc
test
sub
fiadds
dec
jo
and
inc
subl
cmp
ljmp
lea
pop
mov
jne
mov
loopne
sbb
xlat
into
cs
inc
and
jge
mov
xlat
nop
and
cmp
ret
push
orl
xchg
xchg
movsb
inc
push
mov
mov
inc
adc
sbb
add
push
scas
fisubl
xchg
das
negl
jmp
add
inc
call
inc
lea
xchg
sub
lods
sti
push
cmp
je
orl
sub
pop
ss
flds
fisttpll
xchg
imul
dec
dec
or
dec
shll
dec
sbb
inc
and
add
sbb
xchg
sbb
les
fisubrl
or
cmp
add
lods
aad
in
divb
sub
push
cmp
adc
xor
das
sbb
insl
pop
loope
sub
clc
pop
mov
inc
xchg
xor
pop
out
adc
mov
testb
outsb
add
pop
push
ret
xlat
es
je
xchg
daa
mov
add
insl
jmp
mov
test
test
or
lea
dec
xor
push
sti
pop
lea
push
rcrl
test
in
inc
ret
rcl
jbe
mov
rcll
mov
push
sub
fbld
jge
or
xchg
adc
cmp
pop
dec
arpl
adc
pop
dec
and
jl
pop
enter
xchg
aam
mov
or
cmp
xchg
pop
mov
push
dec
popa
repz
mov
and
sub
add
pop
xor
pop
movsb
dec
rolb
sbb
fmull
test
pop
add
dec
cmp
popf
cmpb
add
sbb
filds
imul
pop
stos
insb
fisttpl
test
fs
jns
inc
lret
push
or
cmpsl
sub
sbb
adc
push
mov
push
or
push
push
mov
xchg
jg
jge
mov
inc
sbb
orl
adc
xchg
push
scas
xor
int
mov
insl
outsl
bound
sbb
negb
test
test
inc
scas
pop
dec
lods
fs
sbb
push
or
call
mov
data16
loopne
ljmp
adc
mov
jbe
pop
shrl
jmp
loop
lods
popf
cmp
jbe
test
fisubs
jne
lods
aad
push
xchg
andl
inc
pusha
or
or
outsb
add
sysret
shr
jno
push
test
iret
cltd
xchg
int3
stos
cmp
or
sbb
outsb
scas
test
aaa
mov
je
add
cmp
add
mov
pop
or
outsb
and
clc
mov
outsl
sbb
sbb
sahf
shrl
cs
adc
sub
sbb
outsl
cs
jo
mov
rcll
mov
pop
pop
out
les
sbb
addl
sub
pop
insb
sub
outsb
sub
outsl
lds
sbb
pop
jmp
add
dec
in
scas
xchg
clc
jb
pop
mov
test
ret
xchg
out
adc
arpl
pushf
sub
lock
xlat
and
mov
les
fisubrl
in
sub
and
and
and
pop
shlb
sub
ja
add
and
add
or
ljmp
mov
inc
xchg
insb
mov
lock
adc
adc
add
nop
mov
xchg
inc
daa
inc
adc
stc
push
adc
iret
adc
loope
push
mov
rcrl
push
dec
cmp
jne
add
inc
add
dec
int3
leave
dec
ret
addr16
xor
pusha
scas
movsl
je
rorb
pop
insb
mov
push
out
jmp
inc
xchg
push
or
test
cmp
push
lods
dec
jmp
dec
and
adc
mov
xor
nop
sub
xor
cmp
adc
aaa
push
fs
scas
add
cmp
sub
mov
lods
sub
add
out
sub
pop
rcll
pop
bsr
je
popa
lea
dec
jg
scas
mov
xor
and
sub
xchg
and
pop
push
and
mov
movsb
leave
rorl
or
sub
loopne
xchg
test
fadds
mov
mov
je
xor
and
idivb
aam
hlt
sbb
and
nop
sub
inc
loope
sbb
das
mov
add
cs
lea
inc
imul
sub
add
adc
inc
mov
inc
jae
inc
push
sbb
jge
fiadds
test
adc
fwait
mov
pop
rol
mov
or
pop
mov
cmp
push
outsl
jae
mov
ljmp
add
dec
lods
mov
adc
aam
cmp
pusha
and
add
out
add
add
and
mov
mov
sarl
pop
pop
icebp
dec
mov
repnz
loop
mov
mov
pop
push
add
mov
cs
xchg
mov
in
hlt
jmp
cmpsl
movsl
mov
in
mov
mov
loope
movhps
sub
imul
ret
sub
mov
xor
test
jae
adc
inc
adc
imul
inc
repnz
adcb
mov
jbe
aas
xchg
icebp
push
fcomps
ret
and
push
adc
xchg
xchg
fiadds
mov
test
fwait
inc
xlat
popa
dec
push
dec
fcoml
lcall
dec
add
and
test
or
push
sbb
arpl
sub
push
sbb
in
aaa
xor
outsl
sub
dec
mov
and
or
pusha
cmpl
jmp
cmp
jl
mov
add
xchg
mov
add
or
and
and
or
jge
push
mov
jne
xor
sub
pop
daa
rcrl
fmull
and
push
or
and
pusha
gs
or
ss
add
mov
add
mov
sbb
xchg
or
cmpsl
rclb
or
adc
sub
shrl
mov
pusha
sahf
or
in
adc
repnz
ja
cmp
and
jge
ret
jge
pop
and
fildl
and
iret
fdivr
cmp
mov
adc
adc
fsub
mov
sub
ret
pop
adc
adc
sbb
shll
jne
inc
sbb
mov
lret
xor
notb
outsl
loopne
je
and
cmp
add
sbb
xor
cmpsl
sub
dec
mov
and
sbb
or
sbbb
sbb
adc
jmp
aam
cmp
sbbb
hlt
or
and
pop
stos
mov
add
add
dec
jge
sbb
cmp
imul
mov
cmp
jg
xchg
mov
inc
mov
adc
dec
add
xchg
adc
pop
push
daa
stos
xor
fdivs
inc
jp
roll
or
sbbb
rcrl
dec
jmp
movd
pop
les
mov
ret
fwait
xor
add
push
xchg
test
and
mov
das
or
dec
or
mov
xchg
push
call
push
add
add
stos
lods
add
sub
jae
or
aas
clc
daa
xchg
shrl
dec
add
inc
or
imul
inc
jnp
std
add
scas
adc
add
xor
or
testl
and
sub
js
scas
fiaddl
lcall
push
or
ret
js
out
aam
out
mov
in
ficoml
imul
enter
pushf
jnp
mov
push
adc
bound
icebp
dec
add
dec
scas
add
fwait
mov
cld
and
adc
in
pop
cs
pop
jl
call
or
sbb
or
orb
or
loope
sbb
test
popf
or
dec
enter
popa
test
pop
mov
loopne
pop
sbb
inc
aam
insl
rcll
out
jb
or
arpl
testl
cmp
fsubl
testl
adc
cmp
pusha
je
jmp
insb
lods
out
out
pushf
xor
push
add
xor
and
in
and
or
mov
sub
xor
aas
mov
pop
cmpb
movl
ja
aam
xor
or
adc
call
pop
xor
mov
js
sti
test
test
aam
add
add
pop
les
jge
lods
lds
nop
add
add
mov
shlb
add
in
fdivs
mov
push
lea
mov
ret
pop
inc
adcb
xchg
mov
or
pusha
push
xchg
nop
dec
enter
es
add
add
mov
add
mov
adc
loop
jae
cmpl
jnp
and
pop
push
imul
sub
mov
and
xlat
xor
sbb
push
mov
add
push
iret
pop
jb
add
jmp
xor
pop
dec
push
push
push
add
jbe
std
lea
nop
fs
or
xor
in
inc
adc
add
jg
cmp
lods
xor
push
add
sbb
and
fbld
xchg
push
call
or
push
adc
subl
loopne
sub
add
jnp
jp
add
pusha
pop
dec
enter
gs
aaa
mov
sub
mov
sub
subl
xor
jp
jns
mov
and
test
outsb
jg
pop
inc
add
aas
lods
lds
movsl
jo
ret
imul
pop
jnp
inc
push
xor
ja
dec
sbb
imul
xor
and
je
fildl
mov
daa
test
jl
push
push
add
in
fisubs
add
je
mov
int
inc
or
mov
mov
jg
xchg
mov
adc
inc
sbb
movsl
xor
les
stos
das
dec
add
add
movsb
push
sbb
dec
in
or
push
inc
inc
sub
push
mov
push
push
xchg
dec
scas
test
daa
popf
hlt
cld
clc
pop
scas
add
popa
rorb
pop
mov
add
mov
jge
adc
and
xchg
cs
ret
fisttpll
dec
sub
ret
cmp
shlb
bound
and
mov
push
xchg
sub
sub
sbb
mov
sbb
scas
rolb
sbb
and
pop
sahf
lret
push
movsb
push
mov
xor
jl
ret
and
mov
or
mov
lret
mov
call
arpl
in
sahf
dec
clc
sbb
out
cmp
shlb
jecxz
movsl
add
sub
enter
clc
push
aas
cmp
stos
jg
cltd
jnp
ret
mov
cs
jge
aas
cmp
dec
cmp
movsl
popa
lds
mov
sub
adc
das
push
push
lret
mov
sub
xchg
adc
cli
mov
insb
xor
imul
push
adc
dec
inc
jb
inc
dec
sub
push
or
inc
fiaddl
adc
inc
mov
inc
in
out
inc
mov
ss
xor
incl
push
icebp
cmp
js
popa
or
or
or
out
sbb
hlt
mov
adc
cwtl
shlb
add
sbb
cld
xor
jmp
or
push
adc
lcall
adc
or
addr16
fwait
dec
mov
or
sahf
cmp
and
push
xlat
fwait
xor
and
cld
insb
js
popf
push
add
stos
lods
and
aad
leave
pop
add
outsb
les
mov
and
xchg
cld
cld
incl
xchg
or
test
je
mov
ret
sahf
jmp
push
dec
jbe
lods
inc
cmp
pop
mov
sti
or
std
push
into
mov
test
cmpsb
mov
test
sub
test
sub
clc
dec
and
enter
or
and
mov
jmp
push
push
or
popa
enter
cmp
pop
imull
and
mov
jmp
adcb
sbb
lock
test
xorl
jnp
shl
push
and
adc
fadd
movsb
mov
ds
test
sti
and
and
xor
movsb
cmpb
xchg
setl
sub
imul
mov
mov
xchg
test
xor
mov
cmp
push
pop
inc
or
ret
sub
ud2
scas
xchg
push
mov
sbb
shrl
jno
xor
mov
xor
lds
mov
pop
sub
fadd
mov
outsl
push
nop
mov
xchg
add
sbb
insl
adc
popa
inc
lock
dec
jo
xchg
and
mov
xchg
cmpsb
push
das
fsubl
inc
xor
and
push
outsl
out
and
cmpsb
mov
sub
rorl
add
loop
push
aas
jnp
jmp
cmp
mov
insb
cmc
es
cmp
xchg
push
jge
add
bound
or
orb
cs
sub
mov
push
lock
or
pop
shrl
pop
xor
stos
cld
sub
or
sub
imul
inc
push
and
mov
push
into
add
and
call
mov
popa
loopne
dec
rorl
mov
pop
daa
addr16
rcll
push
jb
mov
mov
pop
lret
pusha
rolb
sub
fadd
mov
adc
cmp
gs
push
jo
cmp
roll
stos
cmp
inc
push
add
inc
xor
pop
ljmp
jmp
in
outsl
pop
add
rolb
xor
in
cmpb
adc
mov
inc
scas
push
xor
popa
es
add
arpl
adc
imul
inc
push
adc
add
fimuls
loope
rol
sbb
dec
push
add
loopne
les
inc
adc
shlb
das
cmp
add
pop
orb
adc
sub
push
dec
or
dec
or
sti
int3
fcmovu
add
push
cmpsb
sbb
mov
push
xor
pusha
nop
pop
jne
shlb
bound
out
aas
in
stos
sbb
sbb
and
jl
lock
inc
pop
lea
ret
or
cmp
dec
sub
mov
daa
sbb
push
jl
dec
xor
add
mov
cwtl
mov
arpl
cmp
xor
aaa
sbb
insb
adc
push
es
xchg
sub
inc
mov
test
or
add
lcall
test
sbbl
sub
inc
call
mov
dec
or
out
inc
mov
jmp
dec
das
nop
mov
ret
scas
adc
test
sti
cmpb
les
jl
pop
sbb
je
cltd
or
cmp
jae
cmpw
cmp
add
pop
mov
adc
or
cmpsb
outsl
jae
cmp
sbb
pop
push
pop
inc
mov
aaa
mov
mov
movsb
aaa
movb
inc
xchg
out
and
and
dec
xchg
lock
cmp
ds
mov
rorl
xlat
push
mov
stos
repz
push
xlat
add
sub
mov
sub
mov
jae
js
cmpl
out
leave
dec
push
add
int3
sub
inc
cmp
fs
adc
stc
xor
push
adc
xchg
icebp
xchg
in
movsb
inc
or
loopne
cmp
int
xor
xchg
aam
test
and
add
fs
insb
xor
pop
cmpsl
mov
cmp
add
out
push
jl
sub
inc
add
dec
int3
repz
dec
ret
test
xchg
sbb
adc
pop
inc
push
jno
or
pop
pushf
stc
sbb
xchg
in
adc
out
pushf
pusha
add
jp
adc
push
shll
loopne
adc
push
movsl
inc
inc
push
cmp
mov
push
cmp
sbb
dec
and
mov
add
cs
add
roll
aas
mov
push
in
or
push
pop
les
mov
mov
xchg
sbb
pop
or
aas
inc
loopne
sub
cmp
jl
in
imul
repnz
or
lock
cmp
pop
and
stos
or
lea
or
les
pop
cmpsl
jnp
pusha
arpl
push
jle
repnz
adcb
test
jg
pop
jl
out
xor
push
push
out
xchg
or
std
xor
pop
pop
pop
push
adc
cmp
inc
and
jecxz
jo
push
pop
imul
movsl
pop
inc
dec
mov
inc
fcoms
xor
sbb
or
xchg
leave
adc
nop
or
pop
jle
clc
nop
and
cmpsl
fcmovnu
add
das
pop
push
push
push
lods
mov
sbb
cltd
inc
add
add
pop
adc
cmpsb
cltd
pop
lock
push
fcomp
inc
inc
imul
xorb
jg
jne
dec
ret
into
out
out
hlt
test
lcall
lret
push
dec
push
daa
adc
inc
loop
xor
mov
push
inc
and
into
push
jne
ds
loope
add
jbe
add
mov
dec
fcomip
sub
in
imul
es
cmp
mov
lahf
push
je
mov
loope
sbb
aam
fistl
adc
std
lods
mul
xchg
jle
lea
mov
sub
hlt
push
ret
cmp
sbb
inc
adc
and
rcr
cmp
test
movb
inc
pop
dec
call
lahf
ror
adc
hlt
or
pop
andl
shr
xor
xor
or
xor
or
jg
xor
push
mov
pusha
push
push
add
pop
addr16
aad
push
jp
rolb
pusha
and
test
clc
mov
insl
or
inc
dec
lea
outsl
fcomps
ss
xchg
call
stc
push
sbb
or
outsb
lret
pop
cmc
dec
test
insl
jno
xlat
xor
or
sbb
mov
jmp
cmp
movsb
pusha
cmpsb
loope
add
shl
pop
mov
push
test
fs
pop
push
push
jb
lret
stos
or
sbb
stos
and
jo
or
test
pop
rorb
push
mov
decb
push
cmp
je
cmpb
mov
gs
cmpl
data16
inc
jmp
cmp
xor
cwtl
add
dec
imul
mov
lds
insb
mov
cwtl
pushf
test
das
xchg
data16
int
mov
in
sub
repz
ret
pop
xchg
popf
pop
mov
mov
jae
inc
sub
in
jl
sbb
mov
jb
xchg
sub
or
and
lds
outsl
mov
mov
fs
outsl
aas
sbb
sysenter
and
sub
arpl
and
jecxz
xchg
sbb
mov
jl
adc
in
ret
mov
sbb
jg
add
adc
adc
mov
dec
sub
dec
adcl
pop
add
pop
imul
je
nop
push
or
dec
cld
pushf
sub
adc
adc
xor
aaa
ret
or
hlt
aas
xor
aam
mov
sbbb
pop
cmpsl
cmpsl
push
and
sbb
nop
sub
add
mov
incb
or
je
adc
data16
clc
test
cmp
je
ret
je
clc
jp
add
test
js
sub
or
xor
mov
adc
jbe
pop
ret
inc
jae
outsb
push
or
sub
imul
cmpsl
jb
ret
in
inc
ftst
movsb
repnz
aad
jle
push
inc
pop
divb
insl
pop
mov
int
xchg
and
add
test
jge
mov
cmp
shlb
adc
mov
call
insb
loopne
rolb
js
jne
and
cmpsb
push
sbb
pop
test
jno
pop
or
dec
adc
sub
push
add
push
insb
mov
inc
push
nop
pusha
or
sbb
or
sbb
push
cmpl
dec
sarl
popf
shrb
ret
inc
add
push
push
ret
pop
adc
ja
xor
mov
cs
insb
ja
dec
das
add
jle
cmp
sub
xchg
fs
pop
add
nop
out
pop
inc
and
adc
push
out
ja
jbe
adc
iret
popl
or
fldl2t
pop
ret
scas
daa
lds
push
adc
rcll
clc
dec
fwait
push
cmp
push
lahf
aam
ljmp
adc
lods
ss
sbb
gs
add
mov
cmp
mov
push
loope
mov
in
outsb
int3
push
or
push
fisubs
push
subb
mov
sbb
stc
js
push
or
sub
dec
dec
loop
cmp
mov
push
lcall
test
pop
pop
maskmovq
imull
push
cmpl
cmpb
sbb
mov
in
dec
adc
mov
and
jno
shrb
jg
add
adcb
xor
adc
lock
and
fsubr
adc
cmp
and
dec
jg
out
loope
sbb
push
pop
mov
adcb
pop
mov
imul
addr16
xorb
inc
add
add
wbinvd
mov
adc
cmp
je
adc
gs
pop
pop
inc
push
mov
xchg
in
mov
cmpsb
and
pop
insb
adc
jg
adc
inc
rclb
xchg
and
push
or
sub
add
cli
test
clc
adcl
or
mov
jb
pushf
aad
sbb
add
in
inc
inc
mov
sbbl
sbb
std
add
push
in
daa
mov
or
aam
aam
dec
xor
imul
adc
or
xchg
mov
stos
hlt
notb
push
dec
dec
add
sbb
inc
ret
pushl
or
lock
adc
jg
lods
std
dec
fmull
je
ds
jmp
jle
icebp
xor
push
push
adc
adc
test
push
pop
jmp
adc
sub
iret
add
cmp
add
mov
xchg
mov
shlb
sbb
inc
test
cmp
movsl
movl
inc
push
jle
xchg
dec
gs
push
sbb
jae
int3
leave
jmp
add
add
adc
or
inc
test
lea
imul
aas
xchg
idivl
ret
xor
jne
add
jle
inc
dec
and
add
out
das
and
mov
enter
inc
jne
cmp
es
or
xor
jmp
mov
rclb
sub
add
mov
dec
jmp
imul
mov
dec
or
fld
dec
cmp
inc
aam
and
rorl
lods
push
gs
jne
and
adc
enter
pop
xchg
pop
push
sbb
jnp
sbb
dec
stc
pop
movsb
sub
sub
in
insb
sbb
ljmp
mov
sbb
cmpsb
scas
lea
cwtl
jecxz
dec
call
sbb
dec
cmp
or
andb
push
lahf
xor
aas
add
out
test
sbb
int
sbb
mov
jecxz
scas
xchg
loopne
xchg
jmp
cmpsb
lahf
adc
jmp
pop
or
sbb
xchg
roll
pop
mov
jp
mov
movsb
int
outsl
rorb
adc
mov
push
in
outsl
inc
mov
sbb
movsl
xor
push
adc
addr16
shl
popa
sbb
push
mov
pop
add
aaa
inc
loope
xchg
sbb
popa
or
out
sub
rep
gs
add
into
icebp
subb
jge
iret
sbb
shlb
adc
inc
inc
rcl
mov
ret
adc
inc
rol
inc
add
mov
push
inc
jge
mov
int3
xchg
pop
in
movsb
mov
xor
push
aas
cmp
enter
sbb
xchg
stos
fidivrl
test
loop
lahf
fstl
inc
sub
clc
inc
or
and
sbb
movsb
lock
cltd
loopne
pusha
ja
popf
pop
push
adc
mulb
or
lock
daa
mov
xchg
push
xor
les
pusha
jnp
jge
jmp
sub
and
idivl
ja
pop
arpl
xchg
lds
test
repz
divb
xor
cmpsl
les
aad
sbb
hlt
sahf
arpl
push
ret
xchg
aaa
fistl
push
mov
notb
sbb
cmp
pushf
cmp
jp
push
push
pusha
repnz
jo
pop
xor
pop
pop
and
xchg
or
dec
cmp
andl
push
mov
xor
fisttps
mov
lea
pop
outsb
mov
adc
lcall
je
daa
pop
or
pushf
loope
add
and
in
push
je
movsl
adc
out
mov
addr16
add
int3
rcrb
adc
push
pop
mov
mov
push
arpl
mov
mov
push
pop
rclb
jmp
lea
mov
push
mov
xor
fisttpl
xor
aas
push
mov
imul
or
test
push
andl
jne
xchg
insl
fbld
or
aas
jae
inc
dec
inc
jno
insb
clc
xor
sub
xchg
or
or
ja
test
ret
prefetch
pushf
push
clc
mov
and
shr
push
pop
add
fincstp
test
add
mov
pop
movsb
sbb
push
mov
faddl
lea
icebp
repnz
push
nop
dec
push
mov
sarb
aaa
cltd
inc
cs
adc
mov
lahf
cmp
jge
sbb
fsubs
enter
add
mov
mov
fstpt
pop
sti
inc
pop
call
push
aas
sahf
inc
into
int3
mov
pusha
push
sti
or
and
xchg
sub
bswap
js
mov
sbb
pop
add
les
subl
push
sub
cmpl
push
pop
dec
inc
stos
sarb
outsb
orb
je
mov
mov
cmp
shufps
dec
adc
sub
das
push
out
adc
cltd
xorl
mov
mov
stos
shr
inc
push
inc
ds
arpl
scas
xor
cmp
pop
aaa
and
dec
adc
cmp
rcl
imul
pop
dec
sbb
lret
mov
push
mov
in
js
cmc
ret
cmp
cmp
xor
jne
cmp
jle
call
aam
or
aam
jo
cmp
int3
adc
mov
clc
idivl
enter
in
xchg
jmp
mov
add
mov
je
sbb
ret
cmpl
or
xchg
stc
and
mov
mov
xor
aaa
je
mov
sbb
sbb
push
leave
lahf
dec
or
jmp
or
mov
cmp
inc
inc
jge
clc
xor
push
push
dec
inc
sbb
inc
das
ljmp
pusha
sbb
and
ja
pop
enter
xchg
mov
xchg
and
adc
inc
lock
sub
dec
insl
sub
js
lods
nop
inc
and
lds
xchg
lea
xor
mov
aad
aaa
popl
test
in
cmp
rorb
xor
fwait
outsb
xchg
push
movsb
test
mov
mov
sbbl
repz
lret
test
mov
and
lret
inc
xchg
shlb
daa
sub
ds
mov
lods
popa
jle
cmp
push
sbb
xchg
pop
insl
sbb
xchg
enter
icebp
cmp
or
out
pop
lock
push
adc
xchg
or
adcb
int3
mov
lock
push
mov
pop
ss
sbb
aam
ljmp
aam
andb
ret
push
inc
out
in
mov
dec
sbb
push
ds
dec
mov
inc
in
ficoms
cltd
sub
xchg
push
inc
or
push
pop
sbb
enter
cwtl
orb
add
xchg
jg
ret
sbb
sbb
icebp
popf
dec
push
pop
mov
adc
sbb
lds
dec
jbe
pop
and
adc
jmp
or
adc
int3
sbb
sbb
sub
stos
mov
cmpsl
sub
or
mov
xor
pushf
add
jno
insb
stc
negb
sti
xor
data16
xor
insb
cmpl
jle
mov
add
add
or
add
adc
in
sub
mov
outsb
jge
std
dec
outsl
inc
pop
pop
pop
mov
jns
aam
add
dec
sbb
mov
jge
adc
mov
push
and
push
movsl
adc
xchg
ja
das
add
lock
in
icebp
mov
loope
arpl
sbb
sub
int
movsl
mov
or
xchg
imul
add
mov
cmc
push
xchg
dec
movsl
sbb
or
int3
fmul
and
push
sub
les
xchg
dec
xorb
inc
mov
pop
das
pop
dec
mov
mov
or
sbb
mov
mov
mov
add
push
lcall
push
dec
mov
jmp
cmp
push
or
dec
inc
mov
jle
ror
add
xor
rorb
pop
add
mov
daa
add
inc
inc
mov
dec
hlt
mov
sub
add
add
pop
sbb
scas
or
xchg
mov
out
push
sub
or
mov
mov
jae
push
mov
mov
or
lcall
jbe
lcall
jge
adc
adc
loopne
add
mov
cs
jle
out
push
shl
std
and
jle
adc
jo
lds
ficomps
int3
add
mov
clc
mov
xor
push
sub
mov
sub
and
add
dec
inc
add
pop
jmp
cmp
mov
roll
loopne
mov
mov
mov
sbb
or
insl
xchg
cmpsb
int3
or
dec
fadds
fdivrs
enter
aam
rorl
or
dec
les
cmpsb
enter
mov
sub
rclb
and
push
and
add
mov
lcall
push
aam
pop
jl
sub
imul
sbbb
push
movsl
jle
push
je
pop
test
push
cmpsl
jne
pop
mov
xchg
jge
dec
ret
dec
cmpsl
int3
push
xchg
adcl
sub
arpl
pop
add
nop
push
rolb
mov
psubb
cmpsb
sarb
add
fldcw
mov
inc
notl
test
mov
or
mov
dec
or
es
dec
pop
out
push
or
jg
mov
jge
xchg
ret
dec
add
loopne
and
pop
dec
push
push
jbe
sub
sbb
xlat
in
add
shrl
test
negl
loop
inc
add
ret
sub
sub
jo
xor
cli
mov
cld
aam
dec
int3
sub
jp
cmp
dec
sbb
out
push
xchg
push
mov
jg
int
dec
call
sub
push
test
shrb
sub
adc
inc
rdmsr
ret
fcomps
negl
repz
push
lret
cmpb
jecxz
adc
int
mov
ret
repnz
test
fldcw
mov
push
adc
lods
dec
sub
mov
or
lock
adc
add
dec
pusha
divl
xchg
jbe
pop
xchg
andb
test
sti
adc
xchg
mov
pop
jno
imul
aam
aaa
lea
testb
pop
fisubrs
ret
scas
cltd
in
push
rcrb
add
les
push
cmp
repz
in
adc
aam
mov
and
clc
je
das
push
adc
adc
jl
pop
or
add
dec
out
push
adc
adc
shrb
mov
push
imulb
sbb
lret
loop
sub
or
out
cld
pop
xor
cmp
icebp
adc
cmp
dec
mov
push
push
mov
decb
mov
mov
fwait
adc
insb
xchg
and
and
in
leave
jnp
add
push
mov
mov
test
les
dec
add
stc
hlt
dec
scas
sbb
xchg
idivb
pop
add
movsb
mov
and
jmp
es
imul
shl
push
mov
movsl
lcall
dec
movsl
mov
les
push
nop
dec
and
lds
or
adc
sti
rcll
mull
mov
scas
sbb
and
setae
aaa
ret
aad
in
cmpsl
ret
popa
cmp
pop
xlat
lcall
mov
aad
aaa
fadds
adc
inc
or
jnp
das
mov
jo
dec
sub
mov
lcall
test
inc
fldl
or
push
push
in
adc
fistl
test
push
subl
test
lods
jnp
xchg
xor
or
xchg
scas
lds
push
sub
cmp
out
lahf
loope
jmp
orb
add
adc
xor
add
cld
mov
or
mov
mov
or
jo
cmc
mov
cwtl
sti
inc
mov
adc
adc
dec
adc
nop
movsl
outsl
int
ja
fwait
cmp
std
jno
gs
jmp
sbb
inc
pop
xchg
andl
add
inc
inc
add
cmp
dec
pop
push
bound
mov
lds
jp
cmp
xor
mov
dec
inc
xor
hlt
insl
iret
pop
sub
sub
and
pop
xchg
pop
and
dec
cmpb
sub
sbb
mov
add
mov
aas
or
cmpb
sub
cmpsl
adc
insl
mov
arpl
sbb
xchg
aam
inc
adc
je
mov
jg
mov
jmp
imul
sub
add
cmp
mov
cwtl
movsl
lcall
imul
and
and
mov
push
insb
out
sbb
push
fs
add
je
push
cmp
or
orb
pop
xorb
add
pusha
sub
add
add
push
das
popa
ljmp
push
jne
add
cmpsb
bound
inc
lods
rol
adc
adc
shr
pusha
and
lds
xor
dec
adc
decl
or
cmp
add
loop
adc
test
add
or
hlt
adc
jo
sbb
dec
movsl
xor
adc
shl
lea
insl
shlb
mov
aam
cs
jmp
push
fisttps
pop
cs
fdivs
dec
or
sub
dec
fmulp
push
pop
jmp
push
sub
xchg
push
mov
in
pop
push
shll
cltd
test
fcomp
and
push
xchg
sub
inc
pop
lret
push
int
inc
mov
inc
iret
jmp
push
pop
shl
test
aaa
dec
add
xorl
sub
leave
push
ds
jg
push
inc
test
leave
cmp
pop
add
mov
or
in
adc
push
int3
sbb
add
rorb
enter
punpcklwd
xor
ljmp
sub
loope
xorb
fsubr
popa
mov
enter
or
loopne
dec
xchg
dec
add
movl
mov
pop
sbb
xor
sbb
sbbl
aaa
push
int3
mov
jne
sahf
lock
mov
pop
inc
push
pusha
in
out
adc
xor
or
push
pop
subb
icebp
mov
mov
subl
mov
pop
push
inc
sarl
mov
jne
sub
inc
jne
jb
or
ss
rol
mov
push
xchg
sbb
aas
and
imul
lock
arpl
data16
ret
add
sbb
xchg
or
into
and
add
sbb
in
ret
fnstenv
push
es
jbe
lds
lret
daa
rcll
pop
pushf
mov
xchg
add
push
cld
in
inc
adc
adc
adc
sbb
and
inc
jle
xor
jae
push
or
mov
nop
adc
sub
inc
inc
jle
xor
adc
shll
xor
xchg
adc
push
jecxz
mov
sbb
shlb
adc
hlt
pusha
bound
mov
inc
mov
mov
xchg
mov
stos
xorl
lods
roll
dec
sbb
pushf
imul
xor
inc
or
sbbl
adc
sbb
xchg
sti
emms
or
mov
test
and
inc
cmp
js
dec
cmp
jne
repz
dec
or
out
add
inc
jmp
push
push
dec
mov
add
loop
mov
sbb
xchg
es
and
dec
xor
inc
loopne
and
loop
inc
mov
out
loope
push
add
cmp
xor
or
dec
mov
push
dec
ficoms
es
or
xor
jne
add
dec
std
and
notl
adc
test
dec
idivl
ret
pop
gs
fists
pop
inc
cmpsb
add
and
test
push
xchg
lret
mov
xlat
dec
rolb
fadds
xor
loopne
push
add
add
add
push
jns
lcall
inc
addl
sbbl
mov
lods
add
pop
add
adc
sbb
shl
dec
pop
jecxz
mov
cmp
call
pop
aaa
and
shlb
sbb
mov
push
cli
push
test
jg
enter
adc
daa
jmp
iret
cmp
aaa
roll
inc
outsl
add
xchg
or
scas
add
fwait
or
mov
ljmp
mov
lock
sbb
cmp
push
test
mov
mov
addr16
sub
jo
push
pop
ljmp
or
fs
adcb
lret
pop
inc
push
jl
jo
cltd
call
subl
inc
daa
ja
outsl
shl
push
jo
nop
aad
addb
xchg
mov
fwait
roll
xor
orl
addb
jns
mov
lea
stos
or
push
and
pop
xchg
jo
sar
rorb
shlb
push
in
lock
and
sub
flds
clc
and
mov
jl
mov
shr
mov
or
xchg
xor
mov
popa
arpl
push
sub
xchg
cmp
into
jae
add
test
andb
inc
loop
ja
dec
aam
add
cmpsl
mov
aam
aam
in
pop
fwait
xchg
push
loopne
subl
pop
add
hlt
add
push
sbb
pop
cmp
imul
jle
ror
push
jge
ja
or
divl
dec
push
mov
cmp
test
and
cld
out
rolb
rorb
push
shlb
jbe
fisubl
pop
stos
addb
add
cmpl
sub
outsb
or
jb
rcll
pop
mov
or
xchg
mov
aas
fcompp
sbb
decl
scas
push
cmpb
lods
dec
xor
ret
stc
add
push
imul
dec
and
push
enter
or
lds
xchg
fisttpl
xor
movsb
push
and
sub
dec
add
mov
js
sbb
add
test
lods
mov
ffree
sarb
or
movsb
and
adc
insb
lock
jo
cmp
jo
xor
pop
xorb
lahf
add
ds
outsl
loopne
clc
jge
cmp
in
daa
or
pop
movsb
dec
loopne
out
mov
jb
loopne
mov
add
pop
mov
int
in
mov
pusha
insb
bound
test
push
popf
or
call
add
jne
mov
adc
nop
mov
cwtl
inc
push
stos
std
push
dec
setl
or
cs
addr16
mov
push
adc
cmp
outsl
pop
das
sbb
inc
popa
xor
mov
pop
subb
mov
or
mov
or
cwtl
dec
call
out
and
bound
fists
jecxz
xchg
inc
bound
jne
repnz
xchg
aam
or
jo
call
jne
pop
or
mov
fiaddl
or
pop
jp
xlat
cmp
inc
or
push
or
rolb
xor
daa
imul
movsl
out
arpl
jmp
dec
mov
sub
push
dec
xlat
dec
imul
data16
sbb
sub
adc
nop
push
loop
pushf
adcl
dec
xchg
pop
dec
xlat
push
bound
jecxz
or
xor
or
test
mov
add
clc
inc
xor
in
mov
arpl
or
test
inc
xchg
adc
inc
pop
fildll
dec
loopne
inc
pop
das
mov
cmpsl
mov
adc
push
inc
and
xor
movsl
lea
xor
push
inc
jp
adc
shlb
lret
movsl
and
js
aad
shr
hlt
out
adc
outsb
inc
or
test
js
sti
or
cld
in
push
cmpb
add
fists
test
or
lds
data16
orps
push
xchg
insl
jbe
xchg
jle
add
popf
pop
add
test
and
and
dec
aam
push
clc
inc
xchg
push
js
aas
jo
or
testl
cmp
je
pop
add
fimuls
adc
sub
pop
pusha
ret
pushf
xor
jl
and
clc
or
add
inc
xlat
push
cmc
xor
xchg
xchg
pop
dec
clc
inc
popa
bound
dec
in
push
ret
and
pop
push
mov
and
cmp
jne
or
or
das
xor
nop
add
cmp
rorl
xor
cld
sbb
cs
shl
mov
push
or
or
pop
mov
mov
jmp
jg
pcmpeqb
jg
mov
or
sbb
sbb
or
stc
mov
mov
ss
testl
xchg
in
mov
fistl
adc
arpl
xchg
popa
loopne
out
jmp
test
je
push
or
inc
xchg
filds
or
adc
sbb
inc
fs
shlb
in
out
jo
pop
xchg
add
adc
pop
inc
dec
push
push
ret
sub
decl
or
or
inc
movsl
mov
xor
mov
jmp
mov
mov
dec
lcall
push
imul
out
popl
lret
or
dec
adc
jle
js
or
push
pop
inc
mov
push
jmp
dec
jbe
shlb
leave
and
mov
pop
shlb
adc
sbb
daa
sbb
sbb
add
sarb
inc
adc
aaa
or
inc
sbb
xchg
dec
mov
mov
imul
addb
sbb
pop
and
xor
adc
xor
and
xor
dec
loopne
jnp
shll
jo
xchg
jns
cmpsl
es
movsb
push
mov
mov
repz
xchg
push
add
sub
push
adc
sub
mov
rorb
dec
mov
fldl
sahf
jge
mov
lods
lods
sub
jb
mov
sti
ljmp
stos
push
cmp
add
pushf
xor
popa
lds
adc
movsl
ja
and
or
sub
add
jbe
mov
inc
iret
or
dec
adc
and
and
dec
adc
mov
mov
jo
popa
sub
addl
cltd
in
adc
daa
rorl
pop
pop
leave
scas
imul
leave
xchg
loope
or
aaa
dec
pop
stos
movsb
lds
ret
jg
mov
inc
aaa
iret
sub
dec
sbb
jp
jmp
pop
jmp
cmpsl
inc
xchg
xchg
fs
cmp
inc
lahf
jnp
push
dec
ja
cwtl
daa
loopne
pop
popa
int
sbb
xchg
push
or
push
loopne
lcall
jo
mov
lds
xor
mov
ljmp
test
mov
faddp
adc
adc
adc
sub
push
nop
lods
sub
ds
adc
push
adc
ret
mov
push
push
dec
lods
push
clc
cs
and
adc
cwtl
sahf
cwtl
cmp
pop
or
adc
push
jne
push
cmc
sbb
push
mull
ljmp
adc
in
xchg
imul
sahf
mov
daa
sub
mov
jo
sub
dec
push
dec
pop
and
adc
lret
pop
test
adc
mov
lds
cmp
jo
ret
mov
test
aas
lods
add
cmpsb
dec
mov
or
lret
add
cmp
jge
lcall
and
test
sbb
cmp
push
inc
aad
cmp
sbb
jno
out
fmuls
pop
mull
pop
insl
dec
push
and
fistl
adc
adc
hlt
jle
adc
pop
js
jle
push
push
js
lea
push
or
mov
loope
or
pop
sbb
sbb
push
rorb
mov
hlt
test
subb
cmpsb
dec
and
outsl
enter
hlt
inc
mov
push
shl
cmp
loope
cmpsb
push
adc
dec
nop
mov
add
sbb
fs
add
icebp
in
adc
or
pop
clc
fisttpll
hlt
jmp
nop
add
or
add
outsl
or
cmp
mov
movsb
xor
in
add
in
out
dec
cmp
cmp
leave
pop
test
cmp
pop
mov
popf
mov
add
inc
adc
xor
shll
sbb
clc
inc
adc
imul
popa
mov
add
mov
scas
incl
or
cwtl
jg
ljmp
loopne
mov
sbb
rolb
and
mov
mov
or
jnp
jecxz
inc
mov
imul
mov
lcall
adcl
fs
out
rolb
mov
pop
jmp
jne
rol
pop
addr16
bound
adc
mov
push
pop
adc
sub
cmp
adc
xor
je
rolb
call
or
or
scas
inc
stos
jb
jmp
mov
pop
cmp
loope
pop
lret
dec
hlt
add
push
ret
or
rolb
xchg
pop
xor
fsubrs
and
mov
out
test
fadds
or
adc
or
in
es
inc
test
ret
adc
sub
cltd
clc
mov
push
xorb
sbb
add
lret
int
or
sbb
and
jno
repnz
jl
aam
insb
jge
sbb
push
popa
dec
loope
mov
scas
add
fnsave
mov
inc
or
push
push
and
push
pop
loop
pop
ja
call
add
jecxz
jle
mov
xchg
pushw
ret
sub
inc
dec
test
fimuls
jbe
shl
dec
jne
adc
push
imull
add
adc
or
push
loop
sub
push
sub
jno
inc
push
leave
in
xchg
inc
push
nop
or
dec
pop
push
inc
insl
dec
mov
adc
add
dec
cmp
sbbb
push
xchg
jae
mov
mov
test
sbb
dec
sub
push
mov
pop
dec
or
pop
leave
fmuls
and
shlb
loopne
out
push
push
js
fisttps
inc
movl
clc
mov
or
cltd
push
or
inc
cmpsb
lock
imul
mov
xchg
sbb
adc
jmp
xor
sbb
inc
cs
mov
dec
push
sub
inc
fdivrl
and
jae
mov
icebp
ja
ret
mov
gs
pop
sub
adc
sbb
cli
or
or
lcall
cmp
divps
adc
aaa
pop
adc
push
mov
add
sub
jmp
mov
sub
xor
sbbl
inc
sub
add
into
jae
filds
mov
sbb
sbb
add
sub
sbbl
inc
jle
push
cmp
int3
mov
mov
sub
ss
cmp
sbb
and
sbb
movlps
arpl
push
adc
fcoml
cmp
flds
inc
lret
sbb
nop
test
cld
insl
or
jg
pusha
adc
add
lods
xor
jl
mov
scas
jge
lea
add
add
lcall
call
dec
sub
cmp
jge
and
popa
adc
sub
or
jl
cmp
sbb
push
xchg
jg
idivb
pop
inc
xor
add
and
sub
bound
scas
ret
inc
sbb
adc
pushw
loopne
adc
out
mov
xchg
outsb
push
mov
jmp
sub
mov
lock
pusha
out
popa
dec
xor
adc
or
sbb
and
pushf
xchg
adc
and
cmp
inc
out
fisubrs
and
popa
cmpsl
add
sub
stos
loopne
lahf
fcoml
fistpl
adc
in
lock
xchg
add
add
cmp
movsb
and
xchg
sbb
addr16
dec
call
cmp
lods
lock
xor
cmpb
in
mov
or
pop
dec
xchg
xor
cmpsl
inc
sbb
pop
sbb
xchg
inc
pop
push
and
sub
daa
mov
cmp
or
pop
inc
sub
dec
add
movl
ret
gs
pop
jnp
push
or
push
daa
push
pop
pushf
ss
or
es
cmpb
sub
addr16
jle
sub
push
vpcmpgtw
popa
std
hlt
aam
lret
dec
repz
sar
push
daa
dec
hlt
xor
xchg
test
mov
rolb
adc
jecxz
daa
mov
call
and
and
pop
ret
sbb
or
pop
jb
or
jo
outsb
enter
or
sbb
mov
jne
adc
push
je
add
xchg
pop
jmp
pop
and
pop
inc
leave
sub
es
rolb
xchg
shlb
rol
cmp
dec
sti
xchg
movsl
popf
lahf
lock
cld
pop
inc
test
lock
pop
sbb
decl
push
pop
pop
sbb
mov
jg
clc
push
sub
sbb
lock
stos
in
xor
mov
mull
test
shll
je
sti
or
sbb
enter
popf
loope
xchg
xor
push
sti
nop
loopne
jge
cmp
push
mov
lock
add
push
adc
pop
in
les
push
orl
xor
loopne
push
cwtl
or
clc
fucom
lcall
test
pop
repz
pop
ljmp
cmp
jne
jle
xchg
push
mov
adc
push
fiadds
jp
out
pop
arpl
mov
sbb
jae
inc
mov
mov
fucomip
dec
pop
jge
and
jae
aas
jle
pop
lds
push
lods
sbb
xchg
xor
js
pop
loope
xor
movsl
out
and
or
sbb
dec
insb
mov
and
sbb
mov
cmp
adc
enter
jp
shl
fdivs
test
xor
imul
push
test
mov
lcall
jae
dec
mov
arpl
adc
mov
jmp
add
out
sbb
xor
movsl
stos
and
mov
pop
nop
enter
add
pop
addr16
dec
nop
mov
or
fstpt
or
mov
imul
mov
imul
dec
faddp
push
pusha
dec
or
test
fmul
fiadds
inc
lret
dec
and
pop
pusha
movsb
xchg
inc
sub
sbb
jne
or
sbb
pop
mov
sbb
mov
mov
in
orl
push
inc
mov
inc
jbe
inc
pop
out
sub
xchg
push
add
lcall
call
sbb
inc
mov
dec
sbb
sbb
dec
inc
cwtl
and
dec
jge
shlb
xchg
xor
lock
mov
push
xchg
inc
test
repz
xor
sub
add
cmp
pusha
inc
enter
sbbb
add
aaa
out
js
add
and
mov
imul
in
add
lcall
mov
pop
inc
es
pop
and
jo
and
cmpsb
fwait
rolb
das
pop
test
push
rolb
addb
das
add
cs
adc
mov
inc
leave
jle
cmp
pop
in
xor
ss
cmp
rol
imul
in
jecxz
adc
ret
or
add
adc
mov
dec
popa
popa
jb
cmp
test
movsb
addr16
add
fs
adc
adc
out
dec
xchg
popf
scas
aas
sub
xor
xor
jle
movb
arpl
or
cmp
imul
push
push
or
cmpsb
pop
mov
pusha
mov
sti
sbb
xor
sbbl
jb
pop
or
subl
sarb
and
cmp
aas
clc
rclb
sub
add
loopne
ss
sbb
lods
adc
dec
fdivr
dec
xchg
xchg
jae
mov
add
mov
add
hlt
jecxz
and
iret
pusha
xor
dec
scas
mov
adcl
add
imul
pop
sbb
cmc
aam
inc
pop
les
fcoms
mov
dec
xor
stos
test
lcall
sbb
push
or
lret
das
sbb
scas
cmp
and
divb
call
cmp
jne
lret
pop
jmp
ret
movb
shlb
xor
mov
in
ja
xor
test
push
xor
sub
rcrb
xor
insl
cmp
lock
push
cmp
xchg
inc
mov
cmp
inc
dec
adc
lods
inc
or
loope
adc
andb
packsswb
and
lea
jbe
add
or
clc
es
js
leave
adcl
outsb
cmpsl
pusha
mov
inc
add
dec
out
or
sbb
das
aam
jb
xchg
dec
les
xchg
push
add
mov
mov
enter
add
fs
test
loopne
push
test
inc
adc
mov
mov
cli
or
test
inc
xchg
data16
fisubrs
sub
push
fmuls
andb
out
xchg
int3
icebp
cmp
inc
jp
push
lock
add
mov
sbb
sbb
add
jmp
mov
insb
sbb
push
sub
push
and
fistl
or
rclb
andps
push
test
ja
or
adc
aam
aad
lahf
popf
cs
adc
lea
test
sar
add
mov
and
or
adc
mov
sbb
popf
jne
subl
fistl
addl
lea
fsubs
mov
mov
and
gs
call
push
adc
jmp
mov
push
jb
push
mov
and
sbb
xor
js
sub
or
and
arpl
or
adc
xor
sub
es
cmp
xchg
ss
hlt
sti
lods
insb
cmc
xchg
lea
add
dec
inc
or
inc
lods
xchg
xchg
xor
dec
mov
sbb
adc
sbb
pop
aam
inc
out
or
xor
cmpsb
pop
cs
ret
add
adc
adc
mov
cmp
lods
push
sub
cmp
aaa
pop
pop
inc
clc
inc
nop
xlat
lock
jmp
xchg
lods
pusha
jmp
sub
or
pop
nop
fistl
xor
inc
pop
and
adc
and
adc
addl
and
add
fists
and
push
into
enter
push
inc
sub
out
or
movsl
rcrl
ret
rorb
mov
in
push
inc
jecxz
sbb
cmp
push
jo
in
mov
xor
lret
outsb
add
add
inc
addr16
jge
fwait
cmp
rolb
sbb
mov
aaa
rorl
xor
mov
mov
xor
pop
rclb
push
call
cmp
xchg
popa
xchg
jne
sbb
in
jmp
jmp
in
scas
es
fadds
arpl
jl
pop
jmp
stc
xchg
loop
test
movsl
sarl
pop
inc
xor
stc
daa
jecxz
negl
mov
decl
scas
pop
orl
lock
mov
mov
and
sbb
jmp
sub
data16
sub
jo
push
mov
jne
repz
cmp
test
adc
add
cmpsl
je
cs
repz
jge
stos
pop
std
and
adc
adc
insb
add
cmp
lahf
shl
mov
or
ret
adc
sub
inc
cmp
mov
xchg
dec
je
rcrb
add
push
jo
jo
sub
adc
adc
sbb
imul
daa
sbb
push
imul
mov
and
or
ret
sub
rcrb
add
inc
push
out
pop
xorb
sbb
adc
inc
mov
mov
cmp
jmp
add
cltd
adc
push
pop
in
or
mov
xor
push
xchg
insl
fistps
add
minps
ret
push
push
out
jne
rorb
pop
rolb
push
and
xlat
sbb
imul
mov
rcll
cmc
inc
or
int3
xor
fadds
jl
sub
jmp
sbb
imul
lahf
inc
addr16
dec
shlb
and
inc
sub
inc
jecxz
xchg
inc
adc
stos
dec
add
insb
arpl
test
adc
or
dec
ret
arpl
or
pop
cld
je
jg
push
pusha
pop
jp
inc
ret
xor
addr16
jle
decl
stc
pop
loope
test
test
movsb
pop
mov
push
or
jecxz
insl
sub
xorb
in
push
pusha
mov
pop
adc
dec
loope
das
mov
pop
fwait
ljmp
cmp
es
dec
sbb
shrb
popa
pusha
lret
xchg
or
std
dec
or
jg
inc
adc
sub
outsb
xor
lock
fidivrs
inc
ss
add
sub
in
push
scas
movsl
sbb
lods
arpl
movsl
nop
imul
adc
loop
mov
and
adc
dec
loope
and
sbb
rcll
jl
js
adc
jle
sub
sub
pop
call
lods
add
nop
les
jbe
int
iret
jo
imul
inc
cld
pop
adc
sbb
and
add
push
mov
outsb
cs
mov
sbb
xor
inc
push
outsb
or
add
pop
adc
mov
test
xchg
cmp
xlat
shlb
insl
cmpsl
jb
and
pop
scas
leave
or
sbb
xor
subl
test
dec
jg
add
add
jb
imul
pop
sub
and
addr16
pusha
push
push
jmp
adc
daa
or
aas
inc
cmp
dec
js
push
test
loope
xchg
pop
cltd
xor
add
ljmp
inc
xchg
lock
adc
rorb
push
cmp
pop
jg
jp
cmpsb
sti
cmp
and
and
dec
je
sbb
mov
sub
jb
push
sahf
jno
add
mov
jb
sub
adc
test
imul
in
sbb
out
xchg
push
dec
movsb
mov
or
dec
jl
mov
gs
inc
dec
inc
mov
xor
adc
mov
mov
adc
pop
jecxz
enter
push
inc
xor
cmp
mov
lods
xchg
mov
or
subb
jb
jo
adc
xor
stos
mov
dec
mov
or
push
movb
aaa
xchg
sbb
or
jne
pop
push
loopne
sbb
add
mov
adc
inc
xorb
leave
and
cmp
movb
push
xor
subb
outsb
lret
xor
cmpb
dec
jg
or
pop
add
les
and
cmpl
jle
fdivs
icebp
lods
insl
cmp
popa
dec
cmpsl
mov
movsb
dec
pop
cwtl
out
mov
pop
js
mov
mov
fmuls
xchg
icebp
lods
outsl
jecxz
jl
mov
pop
sbb
jae
and
fldcw
incb
sub
add
sub
inc
add
inc
push
cmpsb
push
loopne
adc
sub
pop
dec
sub
and
jo
mov
push
dec
sub
mov
aas
rcl
inc
xor
and
add
mov
push
inc
adc
icebp
ret
lock
stos
mov
lock
push
adc
jge
sbb
mov
call
add
icebp
push
call
nop
call
push
lahf
cmp
xchg
loopne
pop
or
fsubrs
jne
and
inc
or
sbb
les
frstor
je
daa
and
dec
insl
inc
inc
je
hlt
and
mov
push
popa
push
push
sub
mov
or
dec
ss
lods
pop
cmp
jl
enter
or
dec
push
pop
xor
test
inc
fimuls
nop
xor
xor
add
xor
xchg
inc
push
add
xor
frstor
jns
push
mov
std
pop
inc
xchg
das
rcl
ret
push
insb
xor
enter
dec
rcrl
cmp
jne
mov
insb
add
sub
and
or
adc
adc
sub
popf
dec
push
mov
ret
inc
jle
loop
xor
add
lcall
add
mov
jge
dec
mov
mov
call
push
and
or
adc
loopne
adc
jge
nop
sbb
inc
adc
inc
or
sarl
jo
push
lds
dec
inc
aas
mov
xor
inc
push
or
out
dec
inc
cld
pop
and
cli
shlb
fmull
test
or
add
mov
jne
adcb
ljmp
push
inc
sbb
and
add
decb
inc
or
or
xor
jge
lods
daa
aam
pop
jbe
sbb
dec
jo
or
ficoms
add
xchg
sub
add
je
adcb
adcb
ret
adcb
jbe
push
inc
sub
pop
xchg
cmc
mov
sub
and
dec
and
pushf
sub
scas
neg
push
mov
rcrl
inc
xchg
adc
and
popf
divl
add
pusha
movsl
das
std
sub
pop
pop
imul
scas
sub
loopne
and
dec
xor
inc
mov
or
cmp
mov
add
mov
dec
adc
adc
aaa
int3
shlb
pusha
repnz
add
js
or
dec
add
mov
push
pop
ds
clc
inc
push
scas
mov
add
dec
test
ljmp
outsl
or
sub
loop
adc
mov
mov
fistpll
sub
addr16
jmp
jno
sub
fsubrl
jle
and
cmp
hlt
pop
pop
sub
ret
add
stos
inc
jmp
test
xchg
sub
test
aaa
imul
or
pop
add
or
mov
ds
sbb
stc
jbe
cmpl
sbb
es
xchg
push
dec
push
dec
mov
mov
neg
cwtl
test
add
aaa
pop
divl
aaa
enter
jnp
movsb
cltd
nop
sub
xchg
or
dec
gs
cwtl
cmp
mov
jb
mov
lret
and
mov
mov
add
dec
les
xchg
ret
xchg
pop
mov
sbbb
nop
jo
cmp
dec
cs
arpl
push
add
adc
daa
and
xchg
daa
js
push
mov
lcall
add
jbe
jb
mov
and
pop
push
mov
or
cmpsl
mov
inc
xchg
push
pop
dec
dec
push
inc
lret
push
or
jbe
addr16
pop
lock
and
or
fmull
sti
daa
dec
bound
jns
pop
fwait
aaa
and
jp
sbb
push
pop
and
mov
and
mov
ret
or
jne
dec
xor
sub
cmp
sbb
leave
mov
jge
inc
sub
inc
or
or
add
cmp
mov
xchg
xor
xor
adc
push
scas
loopne
scas
mov
xor
loope
ret
shrb
dec
mov
sbb
or
fcomps
mov
xor
movsb
add
mov
and
pop
sbb
cs
lahf
jnp
pop
sub
loope
sub
mov
cmp
dec
sub
adc
inc
xor
sub
mov
pop
dec
sub
cltd
and
or
or
test
xor
mov
push
xor
mov
test
je
mov
adcb
mov
jnp
shll
lock
data16
sub
inc
frstor
in
dec
push
add
ret
mov
test
lods
mov
mov
clc
jge
std
mov
or
shlb
mov
jge
jp
sub
and
insb
test
inc
xor
dec
call
inc
push
inc
mov
mov
dec
leave
mov
pop
or
rcl
mov
inc
subl
xchg
push
mov
push
inc
add
adc
dec
and
call
pop
iret
stos
orl
pop
dec
adc
xorb
aad
pop
faddl
xchg
lds
xor
test
cmpsb
or
pop
adc
ret
rorb
push
xchg
add
adc
daa
inc
mov
loopne
pminub
inc
or
or
pop
push
inc
inc
or
sub
jo,pt
sbb
daa
add
jmp
pop
adc
jbe,pt
out
je
mov
or
sub
sub
ljmp
adc
add
mov
inc
and
add
test
push
pop
aas
lods
outsl
call
add
jbe
push
pop
jo
out
mov
test
push
out
mov
aas
push
rorb
mov
or
dec
dec
repz
adc
dec
scas
or
dec
fcoml
and
jmp
adc
cs
xor
and
xor
push
aas
adc
dec
sbb
adc
fidivrs
lahf
fidivs
repz
push
cvtps2pd
push
push
mov
pandn
mov
enter
lret
int3
add
push
scas
hlt
cmp
dec
jl
scas
jne
lods
jne
dec
mov
fdiv
add
mov
and
add
dec
sbb
adc
jge
mov
push
je
ja
sbb
xchg
push
mov
fiaddl
push
cmp
repz
pop
subl
test
sub
or
or
sti
adc
lcall
inc
imul
push
sahf
dec
add
push
xor
inc
jb
dec
or
mov
mov
push
sbb
jl
fcomp
xchg
or
jmp
movsl
testb
pushf
push
jmp
sbb
cs
sub
jb
lret
add
shl
lahf
cli
xor
add
shll
or
xor
adc
sub
inc
sbb
push
add
lret
cmc
in
sar
aam
inc
test
cmp
adc
ds
pop
hlt
lcall
or
fcoms
enter
or
push
data16
mull
daa
sbb
nop
and
xor
outsl
hlt
and
pop
cmp
inc
cld
mov
insl
sub
xchg
pop
add
jo
pop
jp
in
sub
andb
scas
pop
dec
xchg
pusha
mov
dec
mov
in
ret
test
repnz
or
lret
adc
bound
insl
dec
mov
in
pusha
pop
loopne
dec
inc
movsb
adc
iret
fs
pop
orl
push
in
je
into
jo
inc
dec
cmp
mov
mov
lcall
dec
pop
shlb
shll
scas
xchg
stc
shll
cmpsb
pop
inc
sbb
add
popa
and
mov
adc
push
adc
xchg
movsb
mov
xor
cmp
xor
add
mov
lock
cmp
xchg
not
and
push
and
cmp
adc
adc
clc
or
add
xchg
inc
fnstcw
jns
sub
shl
mov
add
dec
repz
mov
sbb
mov
call
cmp
pop
ljmp
dec
jecxz
inc
mov
gs
in
add
push
dec
hlt
xchg
push
push
add
inc
fcompl
sti
into
test
jp
push
push
test
xchg
mov
test
js
cmc
push
fnsave
test
push
pop
jbe
jne
adc
jp
cmpsb
inc
push
movsl
and
iret
add
cmpsb
cmpsb
dec
and
movsb
add
adc
movsb
ja
sbb
imul
dec
mov
call
lods
js
inc
lods
jge
cmp
add
mov
inc
and
ss
mov
rcrl
enter
sub
pop
and
insb
or
jge
imul
sub
andb
ds
xchg
push
adc
aam
mov
cmpsl
shr
in
xchg
orb
push
addb
push
les
sub
mov
jl
insb
push
mov
fcompl
mov
popl
je
movsb
mov
sbb
aam
test
les
cmp
push
adc
push
fcoml
sbb
xchg
std
ss
inc
xchg
test
push
or
dec
xchg
sub
call
js
sub
inc
mov
inc
adc
inc
sbb
imul
jecxz
pop
sar
mov
ret
popa
repnz
xor
int
in
and
cmp
lods
call
cmp
or
stos
mov
popf
push
in
push
xchg
adcb
sub
in
fmuls
les
dec
insb
aaa
in
and
xor
add
sbb
xor
in
daa
jmp
mov
movsb
dec
add
sbb
pop
fldt
adc
pop
jl
push
dec
cmpsb
ja
inc
call
test
adc
cmpb
and
mov
movsl
gs
dec
sbb
fiaddl
dec
sbb
pop
call
jge
sub
push
aaa
add
fistpl
mov
jmp
mov
js
and
sbb
or
mov
sub
mov
test
cmp
fadds
ds
and
pop
dec
or
pop
sub
subl
inc
inc
adc
pop
jb
pushf
push
mov
sbb
dec
add
shll
adc
pusha
sub
insl
jl
mov
cmpsl
shll
pop
sub
pop
mov
les
xchg
ljmp
adcl
inc
rorl
out
in
sbb
dec
es
stos
inc
adc
push
outsl
pop
clc
adc
push
cmp
add
sti
xchg
xor
adc
inc
and
and
stos
xchg
test
mov
jecxz
sbb
xor
push
fdivrs
and
mov
out
loope
gs
inc
cld
ja
sbb
nop
aas
into
sarb
jp
push
movb
push
mov
and
push
pop
xchg
add
sbb
or
arpl
mov
fcompl
mov
jg
arpl
xchg
and
push
mov
cmp
cmpsb
jb
out
imul
mov
ret
or
and
lock
out
xchg
jns
pushf
lcall
fldt
fdivs
dec
neg
or
in
xor
pop
arpl
enter
jecxz
xor
push
inc
push
jle
pop
rolb
xchg
scas
add
xor
rorb
ss
js
push
clc
ud0
or
test
dec
and
pop
adc
add
sbb
sub
push
add
mov
add
push
jnp
xchg
fsubs
dec
push
enter
popa
add
sub
dec
xchg
cmpl
je
jno
push
fidivl
sub
xchg
sub
mov
jbe
dec
inc
std
pop
sbb
xor
dec
push
je
mov
mov
bound
and
daa
test
dec
jmp
cmp
popf
and
or
and
add
cmc
je
das
mov
add
insb
shrl
das
icebp
pop
inc
pop
sbb
or
lret
and
repz
arpl
mov
pop
add
push
xchg
test
mov
or
xchg
sbbl
adc
loop
dec
nop
mov
xchg
sbb
and
inc
movb
push
pop
jbe
inc
das
mov
mov
andb
icebp
mov
push
pusha
pushf
sub
leave
repnz
push
or
arpl
outsl
lock
and
lea
pop
xor
xchg
incl
cmp
dec
scas
inc
mov
jmp
and
push
xlat
sub
sub
sarl
inc
pop
sbb
leave
sub
cmpsb
sub
sbb
insl
adc
sbb
mov
les
jae
sub
aaa
imul
popf
mov
scas
sub
jbe
xchg
pop
mov
xchg
aas
push
cmp
rorb
nop
mov
frstor
shll
mov
ret
jns
push
mov
icebp
lret
cmp
jo
add
rolb
xchg
pop
popl
daa
movsb
xchg
pmaxsw
mov
sbb
daa
movsl
xchg
pop
leave
mov
add
add
daa
dec
inc
les
mov
imul
mov
jb
fs
push
add
cmp
push
and
lcall
inc
cmp
or
ret
popa
push
dec
sbb
jl
iret
cmp
ljmp
or
push
jp
jp
fsts
popa
adc
xchg
rolb
rcrl
push
in
pop
push
inc
dec
std
adc
test
sahf
and
or
cmpl
bound
nop
or
sbb
push
cld
adc
add
mov
test
inc
mov
sbb
add
fwait
and
lahf
mov
inc
pop
inc
cmp
sti
mov
sbb
inc
sbb
popf
or
mov
or
sub
inc
add
insb
xlat
inc
iret
and
in
incl
cmp
inc
pop
mov
mov
add
and
pop
sub
rorl
lock
push
lcall
or
sbb
mov
dec
fs
add
xor
cmp
pop
pop
rorb
dec
adcl
mov
push
pop
nop
popa
jae
push
adc
or
daa
ss
and
imul
pusha
imul
loopne
push
pop
push
imul
or
or
test
bound
subb
movsl
mull
dec
add
or
dec
and
popa
adcl
flds
xchg
fwait
add
or
jmp
outsl
test
push
imul
call
lock
shl
das
gs
mov
xchg
mov
push
or
in
xchg
push
jle
adc
cmp
in
dec
or
sub
or
sarl
and
adc
mov
and
dec
inc
adc
pop
jae
push
bswap
adc
xor
popf
adc
adc
adc
sub
sahf
cmp
push
outsb
arpl
xlat
sbb
sbb
in
ljmp
orl
jecxz
lods
ss
xor
mov
outsb
fistpl
xlat
test
inc
lock
ret
xor
insl
mov
rcrb
sub
and
mov
pop
mov
adc
sbb
ret
jb
lods
pusha
pop
adc
dec
imul
insb
mov
bound
pop
push
ret
iret
inc
popa
imul
and
ret
xchg
xor
mov
mov
imul
lahf
mov
in
ss
scas
push
arpl
mov
pop
mov
add
lcall
insb
imul
aaa
lods
add
das
xor
fidivl
push
inc
or
adc
push
adc
test
pop
sbb
pop
cwtl
push
push
adcb
lock
or
in
inc
ss
mov
xor
subl
and
adc
sub
and
adc
and
jecxz
icebp
xor
inc
lods
orb
inc
lock
and
insl
mov
movsb
add
or
fidivrl
inc
push
jb
aaa
lods
shlb
sbb
outsb
inc
mov
push
frstpm(287
xor
sub
xchg
xor
cltd
push
lea
sub
nop
pop
jns
push
imul
jnp
insl
add
mov
lods
ss
scas
pusha
or
ss
xor
pop
pop
gs
insl
sbb
movsb
nop
fdivs
sbb
pusha
ret
rorb
cmp
sub
clts
nop
nop
sbb
mov
mov
out
out
push
or
push
dec
or
xor
or
cmp
mov
pop
mov
daa
sbb
add
xor
inc
and
cmp
imul
mov
clc
jo
dec
inc
in
std
or
fadds
lods
sbb
xlat
and
sbb
mov
mov
dec
pop
add
daa
rclb
pusha
pusha
loopne
sub
fldenv
test
andb
or
fimull
mov
sub
in
mov
push
js
int
add
outsl
ja
cs
jo
xor
idivl
jb
bound
or
cmp
insb
das
pop
mov
inc
fidivl
sbb
inc
xchg
jbe
sbb
rolb
inc
dec
cwtl
pushf
mov
xor
gs
pop
aaa
add
jo
mov
and
cmp
push
clc
lret
sbb
addr16
sbb
js
subb
insl
daa
addr16
scas
adc
fidivl
add
and
xchg
or
int3
mov
adc
aas
or
push
pusha
pop
jbe
outsb
or
add
adc
iret
xorl
ja
aam
addr16
loopne
ja
ja
sarb
pop
adc
add
pop
xlat
mov
int
adc
sbb
adc
sbb
addr16
test
mov
or
adc
lea
popa
pop
call
sub
scas
mov
je
push
push
adc
fisttpll
xchg
dec
xchg
xchg
push
sub
outsb
imul
daa
out
inc
test
add
xor
jb
pop
xor
aad
jb
imul
mov
sbb
js
insb
popa
js
or
insl
insb
bound
imul
sbb
inc
adc
sbb
jbe
mov
and
xor
inc
xchg
daa
or
sbb
mov
xchg
adc
push
imul
adc
jne
xor
mov
or
adc
add
xorl
sub
fmuls
and
insl
and
daa
or
sub
mov
mov
stos
and
mov
les
cmpsl
and
sub
push
fwait
adc
sub
add
pusha
cmc
sub
mov
jne
bound
xor
mov
push
and
aad
dec
sub
fwait
adc
cmpsl
and
mov
pop
xor
popf
adc
adc
mov
shrl
mov
lea
lods
push
mov
mov
test
outsl
and
test
mov
inc
pop
sbb
outsl
mov
fisubl
cs
mov
mov
dec
and
adc
or
sub
lahf
imul
add
mov
dec
movsbl
pushf
cmp
daa
jae
or
jnp
testl
adc
cwtl
jo
cmpsl
sbb
in
jae
jae
in
dec
jae
jae
cmp
es
jae
jae
inc
cs
jae
cmp
inc
xchg
jl
adc
popa
aam
push
adc
xor
xor
fcoms
sub
and
xchg
mov
push
dec
out
popa
insl
jae
sbb
xor
aad
mov
xor
faddl
adc
or
or
and
inc
or
pop
or
sysexit
push
jbe
adc
sub
add
leave
sti
into
lock
sub
add
cmp
ret
add
add
mov
mov
ljmp
aas
mov
or
sub
or
add
and
aaa
in
fidivrl
and
or
mov
icebp
adc
or
lea
daa
and
test
adc
and
mov
aas
test
inc
pop
mov
sub
test
mov
mov
xor
xor
xchg
fidivl
push
test
sbb
add
in
inc
mov
fldt
fadds
icebp
xor
pop
add
inc
pusha
pop
lds
push
or
jmp
pop
sbb
out
rcrl
mov
bound
push
out
das
icebp
cmp
push
mov
sbb
shll
lret
sbb
adc
repnz
adc
pusha
mov
sbb
pop
adc
popa
sub
or
mov
mov
cmp
lods
dec
and
sbb
fs
incb
das
sti
cmp
in
loop
fsubl
adc
daa
dec
or
jo
jne
push
sbb
shrb
add
pop
sbb
dec
push
inc
jo
adc
rolb
in
xchg
push
sbb
sbb
add
sbb
mov
sbb
cmp
outsb
das
xor
and
hlt
cmp
fwait
inc
imul
inc
mov
addl
pop
sbb
sbb
pop
xor
xor
sbb
or
in
repnz
mov
shl
adc
dec
adc
jnp
in
mov
or
pop
fstps
sub
mov
mov
shl
insb
insl
push
adc
sbb
cmpb
jns
push
in
subb
cmp
fildl
shll
inc
adc
addl
push
mov
daa
cmpsb
sub
add
insl
aaa
inc
add
and
push
mov
pushf
xchg
lahf
push
or
pop
push
cwtl
xchg
fisubrl
je
pop
and
pop
call
andl
pop
push
sub
jmp
inc
outsl
movsl
or
sarb
adc
adc
popa
orl
push
sbbl
ret
xor
adc
add
daa
aam
das
mov
ds
mov
xor
inc
push
or
jne
pop
outsl
adcl
and
sbb
out
fcomps
adc
dec
pusha
sbb
mov
dec
insl
mov
insl
and
xchg
fcoms
sub
test
enter
negl
shll
fidivl
mov
and
insl
insl
add
adc
pop
push
mov
cmpl
push
shll
fdivs
sub
popa
inc
sbb
adc
inc
test
adc
mov
nop
mov
adc
jg
jnp
imul
outsb
xor
jg
mov
or
aas
cmp
movsl
sbb
mov
fisubrl
sub
adc
outsb
stc
add
das
lahf
andl
cltd
popa
push
or
lcall
or
jbe
insb
jns
push
scas
in
insl
sub
xor
inc
scas
inc
sub
jo
movsb
imul
ss
sbb
call
js
insl
and
ds
inc
cltd
adc
fadd
pop
dec
outsb
popa
and
shrl
fcmovnu
push
sub
mov
cwtl
sub
push
dec
adcl
insl
push
das
mov
mov
popa
js
push
sbb
fcmovb
inc
sbbl
ret
push
adc
dec
ret
inc
mov
and
mov
pop
jg
daa
and
pop
pop
and
fwait
cmp
inc
mov
cs
stc
sbb
and
mov
mov
adc
xchg
and
jmp
sub
lods
and
pusha
pushf
and
les
testb
xchg
adc
cwtl
dec
adc
push
sub
push
shll
and
inc
xor
xor
loopne
sub
cltd
roll
pop
dec
xor
adc
and
inc
xor
lea
cmc
xchg
adc
mov
daa
cmp
rcrb
and
push
mov
mov
pop
lds
shll
test
sub
shrl
sub
sti
add
mov
pop
sub
xor
pop
sub
xchg
adcl
and
lods
inc
mov
or
adc
mov
test
push
or
add
nop
or
fstpl
scas
cmp
mov
inc
inc
and
cmc
sub
sbb
adc
andb
and
cs
and
pop
or
and
fmuls
int3
or
pop
and
lea
adc
push
popa
aaa
cmp
or
gs
jo
mov
stos
sbb
cmp
add
xchg
push
xorl
cmc
lods
add
cmp
xchg
mov
aas
sbb
adc
sbb
ja
loopne
les
mov
push
mov
sbb
cmp
mov
dec
dec
les
adc
sbb
fdivl
xor
inc
push
adc
add
movsl
jns
or
add
add
out
add
sub
fsubrs
push
pop
mov
push
movsb
es
das
mov
push
je
adc
scas
popf
cmp
mov
test
add
sub
das
sbb
nop
add
sbb
push
sbb
std
adc
addl
pop
mov
xor
arpl
rcll
xor
inc
out
push
sub
dec
out
sbb
scas
ds
fimuls
fs
sbb
xor
in
sbb
cmp
jns
lcall
sahf
pushf
in
jge
or
daa
daa
jmp
leave
enter
lahf
gs
fs
std
dec
mov
xor
sub
mov
pop
test
sahf
pushf
mov
and
mov
inc
xor
xchg
add
aas
movsb
jae
in
or
lds
adc
inc
mov
dec
xor
stos
pop
inc
rcll
mov
adc
xchg
pop
sub
lea
inc
inc
inc
mov
sub
add
out
bound
imul
cmp
add
mov
jae
aad
fs
adc
sub
and
add
jno
cmpb
xor
and
xor
adc
dec
loope
jo
or
adc
idivl
loopne
xchg
push
insb
add
sbb
push
push
lret
jb
in
add
stos
fmuls
and
bound
or
inc
add
push
lea
or
cmp
in
loope
dec
adc
dec
orb
insb
sub
idivl
cmp
test
push
pop
rcll
add
inc
inc
movsl
push
adc
cmp
jb
sub
and
pop
add
mov
icebp
add
in
stos
addb
popl
add
pusha
xor
adc
lea
cmpsb
mov
das
int3
call
das
sub
add
adc
les
mov
inc
ret
jl
fcoml
adc
fistl
stos
xor
sub
dec
rcrw
orl
cmp
shlb
jo
pop
fdivrl
adc
clc
adcl
or
imul
push
je
iret
push
wrmsr
and
dec
jo
pop
and
add
in
in
and
xchg
imul
push
inc
push
xchg
insb
inc
in
or
dec
jl
insl
sbb
cmp
sbb
cmp
jns
xor
adc
push
mov
in
enter
je
inc
enter
insb
jne
adcl
adcl
add
dec
jl
adcl
add
and
test
cmp
clc
mov
and
or
mov
or
cmpb
cmp
jns
xor
add
adc
mov
movl
inc
add
push
outsl
push
mov
pop
jecxz
cmc
sbb
xor
push
jb
repnz
add
ja
mov
sub
testb
or
add
push
inc
js
call
sub
mov
or
jecxz
pop
or
dec
mov
or
jnp
add
push
push
imul
adc
add
push
jne
pop
push
movsb
push
fs
or
push
add
pop
sub
mov
and
mull
xor
dec
add
aam
jb
test
adc
adc
es
mov
pop
imul
fnstsw
arpl
jne
mov
ss
push
arpl
test
jnp
push
adc
outsl
pop
js
gs
gs
pop
es
jb
fdivs
push
add
aaa
inc
nop
icebp
inc
popa
push
insb
jmp
pop
fidivl
ja
int
dec
mov
jo
pop
jb
sub
out
sahf
addr16
ret
cmp
mov
out
fldl
imul
sub
fistps
add
das
scas
sbb
sbb
xchg
popf
ret
pop
pop
mov
mov
push
mov
popa
dec
pop
jb
arpl
jns
fdivl
gs
xchg
xor
ja
mov
cmp
xor
cmp
and
push
inc
test
mov
sarl
sbb
mov
inc
loop
cmp
push
inc
in
scas
je
imul
mov
adc
xchg
in
add
and
adc
mov
insl
or
xor
fcmovu
rorb
clc
cmp
test
xchg
cmpsb
inc
xchg
and
xlat
or
lods
add
outsl
test
inc
cld
lods
cltd
int3
add
adc
cmpb
es
jl
or
mov
fidivrs
and
push
xchg
stc
jne
inc
mov
fisubl
sbb
or
push
adc
pop
xchg
sbb
in
push
gs
and
ret
mov
inc
sub
inc
cmp
jne
adc
imul
and
int
jne
imul
rcl
xor
decl
sahf
lods
sbb
sbb
pop
enter
out
mov
cmp
out
in
and
scas
cmp
out
fwait
roll
xchg
fbstp
xor
jg
lahf
daa
dec
or
mov
loope
in
pop
xchg
js
or
es
inc
xchg
adc
adc
dec
adc
das
pop
imul
push
loopne
xchg
or
mov
test
lahf
or
mov
nop
add
push
xchg
aas
std
dec
je
jno
fldt
fsubs
mov
fsubs
mov
mov
xchg
jg
adc
mov
inc
sbb
pop
dec
mov
gs
adc
mov
maskmovq
divl
mul
push
addr16
out
loopne
pop
test
rol
adc
lock
sbb
js
imul
push
mov
jnp
push
inc
rcll
pop
es
mov
mov
mov
imul
decl
jge
add
sub
jb
or
jb
jmp
sbb
or
or
pop
movsb
and
adcb
inc
movl
xchg
mov
xor
mov
sbb
add
sbb
push
or
or
mov
push
or
sbbb
ret
ret
xor
mov
add
push
cmpsl
add
xchg
mov
and
sbbl
out
pop
xchg
and
xchg
push
sbbb
outsb
mov
and
add
cwtl
fwait
add
or
or
jp
push
lahf
cmp
pop
push
cmp
repz
push
and
das
cmp
iret
repz
xchg
and
lods
cmp
ret
xchg
lret
and
or
dec
aaa
dec
in
ja
sbb
movsl
repnz
sub
pop
pop
adc
dec
mov
sbb
sbb
or
xor
jns
sbb
push
sbb
jo
pop
or
repz
xchg
cmp
dec
add
das
cmpsb
nop
lret
push
das
or
rol
ja
sbb
fcompl
cmp
pusha
outsb
jl
cmp
or
and
add
mov
pusha
sub
pushf
jge
dec
xorl
ds
ljmp
push
es
and
cmp
aas
mov
sbb
push
jns
in
roll
movsl
jns
dec
lds
add
nop
sub
add
or
movsl
arpl
push
movsb
sbbl
inc
in
ret
add
inc
sbb
add
repnz
aas
mov
iret
jnp
sbb
add
gs
loop
cmp
mov
add
add
add
or
xor
lds
add
into
add
add
or
jmp
or
out
sahf
out
pop
push
jge
xchg
mov
mov
adc
add
xor
xor
push
gs
dec
ret
sti
push
inc
and
sbb
or
test
xor
decl
lea
dec
xchg
cs
out
in
mov
lahf
push
mov
int3
dec
bnd
testb
and
aad
insb
and
push
imul
movl
or
nop
lret
or
xorps
or
push
pop
je
insb
pop
ds
jmp
xchg
sbb
inc
mull
adc
mov
fs
lods
mov
or
test
mov
xor
dec
xchg
pop
add
push
push
and
inc
dec
shl
jns
pop
push
xchg
loope
xchg
jmp
nop
add
push
nop
add
nop
sbb
and
sub
adc
loop
sbb
adc
scas
fcoml
adc
outsl
adc
adc
jb
pop
movsl
pop
jmp
push
aas
jb
subl
or
xor
add
adc
or
push
adc
sbb
pop
push
movsl
into
in
fs
insb
mov
dec
sahf
out
xor
push
pop
sahf
xchg
orl
cmp
pusha
inc
aas
movsb
add
loop
mov
and
sub
fists
in
popf
mov
mov
push
jns
neg
incb
or
sbb
sub
inc
push
inc
lahf
out
pusha
outsb
mov
pop
shrl
sbbl
enter
sbb
andl
or
lahf
mov
push
testl
pop
pop
mov
pop
aaa
push
imul
mov
pop
jmp
jns
jecxz
cmp
or
add
setle
jns
adc
adc
adc
jns
out
push
pop
sbb
sbb
lcall
push
pop
and
and
and
xchg
cmp
rcll
cmp
jle
cmp
repz
mov
imul
mov
jns
cmp
insb
jge
jns
out
lahf
mov
shl
cmpsb
imul
mov
imul
and
lods
xchg
movsl
sbb
data16
and
and
lods
repz
cs
and
or
push
mov
or
cs
and
and
sub
xchg
lret
sub
mov
adc
cs
cmp
dec
sub
xchg
lret
pop
dec
sbb
dec
in
push
sbb
push
mov
lret
cs
dec
gs
popa
pop
bound
or
sbb
push
push
test
and
push
mov
inc
orb
test
mov
ret
mov
enter
nop
xchg
mov
je
nop
sbb
adc
stos
dec
sub
pop
cwtl
in
adc
mov
jo
test
fcmovnbe
nop
push
inc
push
gs
sbb
dec
rcrb
sbb
mov
mov
fdivr
roll
imul
imul
daa
or
adc
sbb
test
hlt
sub
add
jo
cld
mov
jmp
dec
inc
lock
lock
js
mov
insb
push
call
hlt
clc
in
arpl
add
clc
aam
into
inc
inc
dec
int3
jmp
sahf
cmp
push
shrb
xchg
mov
mov
jle
ja
das
add
ds
mov
dec
xchg
mov
xor
push
adc
lods
orl
or
xor
sub
xor
out
jae
fistpll
sarb
mov
or
xchg
xchg
adc
add
add
and
cmp
mov
dec
rcrl
int3
push
loopne
adc
or
xchg
or
test
cmpsl
pop
and
mov
insb
arpl
mov
mov
hlt
sarb
rorl
es
cmp
or
fsubl
test
stos
aad
jne
xchg
call
dec
and
shll
dec
insl
xchg
ja
mov
dec
or
nop
push
lea
ret
cmpsb
es
pop
icebp
sti
push
enter
adc
xchg
add
test
pop
shrb
pop
fs
popa
movsl
or
int
adc
or
xor
pop
push
dec
ret
cmp
pop
imul
cmp
nop
push
push
outsl
icebp
rorl
dec
or
cwtl
rcl
sti
jb
and
das
push
adc
jg
add
xor
sbb
popa
jns
js
mov
ret
adc
dec
rol
pop
enter
test
push
insb
jb
adc
or
imul
scas
loope
or
inc
dec
jae
add
sahf
mov
mov
xor
push
enter
testb
jae
jmp
sahf
inc
add
sbb
pusha
ret
fdivl
loopne
addr16
outsl
sbb
pop
xor
sub
fs
adc
repnz
push
and
or
into
ss
cmp
xor
rdmsr
xor
xor
and
pop
cmpsl
fnstcw
xlat
lds
and
sub
cmpl
lods
xlat
dec
or
verw
adc
and
fwait
add
filds
xchg
dec
inc
or
shr
shl
mov
call
in
addl
inc
add
inc
ja
movb
cmpsl
inc
adc
bound
dec
fs
sub
jbe
shrb
or
stos
adc
lock
adc
aaa
pop
jnp
sub
mov
jnp
fs
xchg
dec
fldenv
push
xchg
jo
iret
addl
mov
add
inc
mov
dec
jbe
enter
daa
mov
seto
push
leave
xchg
xchg
xchg
xchg
pop
test
enter
fs
push
int3
jae
xor
cltd
loopne
adc
daa
mov
adc
clc
and
into
movsb
xor
in
hlt
inc
rorb
repnz
jg
sbb
mov
sbb
or
cwtl
pushf
iret
push
and
sti
movsb
dec
lock
sub
sub
subl
xchg
mov
pusha
add
xor
push
cmp
popa
sub
push
xchg
mov
xlat
adc
adc
sbb
sub
shl
add
dec
jg
push
lods
cltd
push
fistpl
pop
sbb
in
sub
jle
into
xchg
mov
pop
lock
xchg
add
push
or
out
and
push
or
scas
adc
lcall
adc
lea
fsts
aaa
fcomp
outsl
outsl
repz
push
scas
add
stos
popa
xor
sub
stos
stos
inc
pusha
push
aas
es
je
bound
sub
or
addb
push
push
out
mov
pop
cmpb
inc
xorb
gs
stos
xor
adc
mov
ret
sbb
fwait
nop
mov
add
leave
and
xor
sbb
sub
and
push
or
cs
push
or
ds
add
fldcw
and
adc
xchg
adcl
fsts
mov
and
adc
mov
aam
and
and
or
xchg
dec
sbb
roll
jno
add
mov
cmpsb
sbb
add
loop
aad
lock
mov
or
sub
and
cmp
dec
add
xor
mov
and
test
inc
je
add
hlt
jb
inc
gs
in
jmp
lahf
test
loopne
xor
pusha
pop
das
insb
pushf
out
inc
in
testb
and
ret
xchg
repz
ljmp
mov
cmpl
mov
movsb
fisttpl
sub
xor
jno
cmp
sub
pop
mov
fiaddl
adc
pop
or
sbb
and
ret
js
cmp
mov
sub
inc
xchg
push
gs
add
mov
adc
xchg
inc
or
push
jb
gs
inc
and
les
das
pusha
dec
mov
adc
cs
je
dec
inc
dec
stos
inc
gs
sub
imul
mov
sub
push
jo
enter
adc
ljmp
or
jno
sti
dec
add
out
nop
sub
aad
pop
add
sub
jle
gs
ds
mov
cmpsl
cmc
jne
rclb
jge
adc
sub
outsl
add
lods
adc
jmp
mov
pop
sub
mov
fildll
sub
and
or
popa
add
nop
or
xor
sbb
mov
adc
dec
sbb
test
les
fistpll
pushf
dec
or
sahf
adc
mov
outsl
pop
sarl
nop
add
and
or
mov
mov
and
mov
mov
mov
cmp
clc
xchg
mov
and
pop
inc
add
clc
ds
adc
add
cld
fsubrs
add
and
add
enter
iret
mov
or
inc
inc
inc
mov
sbb
inc
dec
pusha
mov
inc
inc
inc
call
mov
adc
nop
jne
lods
sub
roll
arpl
pop
test
or
mov
cmpl
ljmp
test
into
or
fst
xor
je
cmp
sub
push
aas
xchg
xor
or
sbb
push
xor
push
ficoml
mov
das
outsl
mov
leave
cmpsb
mov
aam
and
xor
popf
orl
inc
test
inc
orl
and
pop
mov
adc
out
mov
lret
push
xchg
into
xchg
add
adc
add
shrb
movsl
ret
xchg
pop
loopne
push
loop
insb
popa
nop
orb
sbb
cmp
jge
jl
dec
xchg
sub
mov
inc
cmp
movb
mov
in
adc
enter
mov
dec
and
icebp
sbb
push
enter
xchg
cs
lods
dec
lds
sub
sub
cmp
insl
cmp
cld
pop
mov
push
enter
imul
dec
orl
repz
es
xor
and
int3
dec
call
dec
sub
enter
and
in
aad
movsl
icebp
inc
or
xor
dec
xabort
inc
sarb
fdiv
xchg
pop
inc
inc
sbb
push
push
cmp
andl
mov
xor
cmp
icebp
xchg
adc
je
mov
cmp
mov
outsb
ss
mov
inc
inc
rorb
jnp
sub
push
push
push
xchg
adc
shll
repnz
cmpsb
ja
xor
lods
fidivl
js
push
ja
sbb
pop
and
stos
jnp
cmp
add
or
fildll
add
xor
popf
jo
ja
sub
in
push
aaa
sbb
jle
pop
aas
adc
pop
popa
iret
cld
orb
xorb
gs
inc
mov
cld
sub
mov
insl
jnp
movsl
pop
mov
push
nop
jo
or
and
aad
ror
push
test
mov
or
inc
and
test
imul
imul
dec
mov
fs
repz
push
les
xchg
adc
inc
out
dec
addb
adc
push
sbb
mov
inc
mov
jle
cmp
js
fs
xchg
jo
dec
cmp
movsl
cmp
loopw
adc
loopne
iret
push
and
jbe
push
fs
xor
scas
dec
jge
xchg
or
mov
sbb
cwtl
roll
cmp
sbb
pop
popa
rcr
xchg
mov
mov
fldl2e
lock
sahf
fdivl
arpl
inc
test
push
ret
loope
addb
mov
adc
and
fmull
mov
xchg
aas
xchg
xlat
ffree
inc
push
push
pop
adcb
decl
cltd
gs
push
shl
aaa
add
loope
xor
push
and
and
insl
pushf
sbb
inc
mov
fstpl
add
aaa
fsub
jmp
mov
stos
pop
inc
jle
add
rol
mov
dec
shll
push
call
pushf
and
xor
icebp
test
mov
jg
sbb
and
lahf
sbb
pcmpgtd
fsubrs
cmp
xor
jb
dec
adc
inc
loopne
push
or
or
rcrb
inc
jmp
xor
mov
or
dec
mov
cmc
jmp
sub
xor
cs
pop
cwtl
inc
or
in
push
or
and
scas
push
inc
fcoml
shlb
sti
jge
dec
test
cmpsb
pop
xchg
mov
dec
dec
loopne
cmp
hlt
or
lods
inc
dec
out
push
std
jecxz
scas
dec
pop
mov
movsl
push
fiadds
stos
sbbl
clc
xor
xor
je
xchg
xchg
loopne
sub
and
rcll
inc
add
hlt
lock
popa
adc
loop
push
mov
and
or
aam
sti
pusha
adc
pop
and
xchg
loop
mov
jecxz
push
imul
pop
xor
push
mov
and
lock
xchg
dec
mov
ret
test
and
xor
ss
dec
and
in
out
loope
out
mov
adc
loop
dec
cmp
clc
shrl
pmuludq
sbb
add
jnp
or
inc
enter
repnz
adc
stc
push
push
jne
add
xlat
mov
push
rsm
add
push
subb
pushf
cld
and
pop
mov
repnz
shl
addb
cmpsb
popf
icebp
dec
sbb
cmp
jl
push
insl
cmp
and
cmp
lret
and
cs
inc
lods
incl
je
pop
or
pop
pop
add
jmp
dec
mov
adc
inc
cmp
sub
or
mov
adc
dec
or
pop
cmp
cmp
movsb
aaa
pusha
adc
and
ret
sbb
add
sub
fldenv
orb
adc
mov
push
sbb
hlt
xchg
pop
cltd
pusha
sbb
jmp
push
or
push
add
xchg
push
pop
add
push
mov
cmc
aad
mov
pop
inc
dec
sub
cmp
fcompl
mov
test
xchg
jnp
mov
decl
add
add
add
or
lcall
sbb
xor
xor
test
pop
sub
cmp
icebp
popf
inc
arpl
stc
push
inc
jne
mov
inc
dec
inc
movsl
dec
outsb
cltd
fistpl
int
cltd
mov
mov
dec
sbb
or
push
mov
add
cmp
mov
test
xor
mov
xlat
adc
cmp
xchg
pop
adc
roll
or
adc
mov
xor
and
sbb
push
sbb
shlb
dec
or
test
pop
lret
js
ret
mov
fdivl
std
pop
sbb
fmull
mov
adc
test
push
enter
jmp
outsl
dec
das
pop
mov
cmp
cmp
scas
xor
and
dec
ret
add
out
lret
in
inc
add
rol
add
jnp
inc
and
xor
in
or
jne
mov
push
fcompl
mov
or
push
popa
jmp
cltd
adc
add
test
xor
mov
addb
mov
or
ret
cmpsb
or
stc
mov
push
ljmp
jmp
jle
adc
dec
cs
out
jecxz
js
enter
or
and
fstps
push
repz
jg
dec
xorl
lock
test
inc
jne
sub
sbb
lock
add
es
call
fsts
testb
in
push
inc
sub
in
mov
push
cmp
lods
and
daa
mov
movl
outsb
aas
push
and
add
insb
inc
ja
lret
mov
push
xor
push
mov
paddd
sbb
jecxz
sbb
mov
int
cld
sbb
jge
jne
mov
fisttpll
dec
push
inc
mov
ss
pusha
pop
sub
pop
and
sarb
iret
cli
or
fistpll
int
sub
sbb
cmp
fisttpll
fistpll
add
push
dec
mov
in
adc
mov
jmp
pop
jle
lea
jg
dec
and
inc
aaa
test
inc
add
and
push
insl
stos
xor
and
daa
xlat
pop
dec
jnp
push
std
outsl
addr16
jbe
push
xor
mov
rorb
mov
fisttpll
or
jp
adc
lret
insl
xlat
in
dec
pop
pop
xor
sbb
les
iret
lea
cmp
mov
dec
push
out
pusha
add
les
enter
add
cmp
pop
push
add
hlt
xor
arpl
mov
add
inc
xor
or
xor
jb
xchg
stos
jge
jecxz
jne
mov
cmp
fimull
or
and
add
inc
adc
inc
push
filds
shrb
mov
test
inc
mov
cmp
and
sub
fsubr
jo
push
sub
mov
and
test
adc
xor
sub
adc
test
add
pop
int
xor
sti
inc
pop
icebp
push
cmp
in
inc
dec
nop
inc
es
pop
inc
push
xchg
sub
pop
or
or
pop
push
daa
sub
or
pop
push
or
fidivrs
mov
popa
jl
or
cmp
push
xor
mov
add
mov
mov
cmp
das
lock
js
xchg
xchg
add
ja
pop
adcl
mov
pop
cli
and
pop
xor
mov
mov
jns
push
adc
test
xchg
xor
dec
jle
movsb
or
add
iret
jne
jo
mov
mov
dec
lock
pop
dec
pop
call
fcomp
adcl
insb
fidivrl
push
push
and
xchg
push
and
sub
call
or
aad
pop
addr16
mov
cs
es
or
ja
mov
pusha
insl
and
mov
dec
jl
in
cmp
add
and
pusha
cwtl
jecxz
movsb
xchg
push
mov
mov
xchg
add
hlt
push
push
push
push
mov
fdivs
insl
pop
adc
loop
cmp
dec
push
sub
adc
add
pop
in
iret
clc
adc
clc
dec
fldenv
daa
hlt
div
hlt
mov
daa
pusha
out
dec
adc
push
mov
icebp
jecxz
sbb
dec
sbb
or
ficoms
lcall
loope
insl
dec
xor
push
mov
mov
xor
mov
imull
adc
push
jbe
and
and
gs
and
stos
add
dec
sbb
jo
mov
lea
out
add
stos
push
mov
and
jo
cmc
iret
push
shl
into
lea
insl
ljmp
fwait
xor
mov
lock
stos
xchg
test
ja
mov
ja
adc
xor
inc
sub
rcrl
mov
push
rclb
xor
in
push
cltd
sbb
xor
aaa
into
cmp
push
mov
shl
es
movsl
add
pusha
inc
imul
sbb
adc
add
nop
shlb
dec
push
xchg
and
mov
fcompl
mov
fistps
in
mov
test
dec
push
pop
inc
xor
adc
push
sbb
mov
xchg
loopne
push
lock
imul
jae
cmpsl
cmpsb
gs
xchg
push
xchg
adc
movsb
ret
dec
sbb
push
das
push
bound
bound
rcrb
ror
aaa
add
jns
cmc
mov
addb
cmp
fsubrs
sar
int
mov
jno
sub
or
mov
aaa
xchg
xor
jne
and
push
faddl
jne
dec
cmp
daa
or
inc
sbb
or
in
loopne
pusha
mov
pop
dec
xchg
mov
scas
cli
div
pop
mull
xchg
jne
and
inc
addr16
adc
imul
jmp
stos
jge
pusha
adc
pop
push
inc
jecxz
popa
sbb
outsb
scas
xchg
sub
pop
or
inc
add
imull
mov
cmp
jne
js
rcr
mov
js
or
or
adc
lds
sbb
jg
fisttpll
lds
mov
and
das
push
jb
push
xchg
jecxz
shrb
push
jno
cmp
dec
cmp
in
es
cmp
clc
xchg
push
dec
add
push
adc
mov
cmp
dec
push
mov
leave
xor
jg
sub
mov
pop
imul
add
xor
sub
dec
xor
sub
filds
jb
push
test
arpl
add
jne
bound
add
dec
add
test
push
lea
hlt
add
out
int
mov
inc
jl
daa
cltd
cmpb
jbe
cmovo
xor
inc
or
pushf
add
add
pop
sti
mov
and
adc
loopne
roll
or
push
or
dec
int
xor
iret
jle
cmp
pop
or
or
popa
jb
stc
pop
notb
or
mov
xchg
add
push
js
or
or
and
movsb
repnz
dec
pop
fcoms
popf
cmpsl
xchg
sub
popf
mov
or
xor
dec
dec
js
pop
pop
inc
notl
movups
and
mov
sbb
xor
jno
mov
adc
mov
ja
mov
pop
in
sbb
fs
push
adc
mov
xor
and
jle
and
ja
fisubrs
lret
adc
mov
and
add
push
push
adc
adcl
and
scas
mov
arpl
pop
adc
sbb
sar
adc
sahf
push
xor
push
pop
or
pop
mov
jecxz
or
mov
std
cmp
push
imul
push
and
xlat
rcrb
adc
mov
push
scas
cmp
enter
sub
sub
pop
cmp
sbb
push
inc
push
insb
in
and
out
outsb
mov
mov
push
mov
sbb
jnp
imull
outsl
push
push
js
cwtl
mov
orb
and
and
and
add
decl
fnstsw
jg
fwait
push
addl
xchg
sub
pop
inc
and
or
lea
and
rorl
adc
inc
mov
sub
mov
fs
rolb
lahf
adcb
or
jno
jnp
test
es
add
xor
jnp
int3
mov
dec
addr16
dec
xlat
jo
or
loopne
xor
push
in
dec
adc
dec
sti
fsubp
cmp
xchg
push
sbb
out
sbb
and
hlt
pop
and
clc
loop
addr16
xor
inc
or
dec
fcmovnu
aaa
les
pop
mov
es
push
xor
push
test
loopne
nop
pusha
aam
dec
push
cltd
loopne
xchg
push
add
ret
adc
cmp
daa
inc
push
sub
dec
add
sub
jnp
cmp
jae
cmp
out
push
xchg
jecxz
mov
stc
in
and
and
ds
popa
and
mov
or
or
adc
and
pop
dec
dec
push
cmovnp
push
xchg
xor
test
pop
shll
pop
push
dec
setb
pusha
and
fisttpl
push
shll
or
mov
adc
jmp
jg
je
in
and
xchg
push
sbb
in
dec
sarl
xchg
fstpt
xchg
out
push
test
xor
adcl
pop
cmp
or
adc
call
dec
jnp
cmp
cmp
xchg
inc
lcall
and
imul
push
add
movsb
jae
push
je
add
inc
repnz
push
dec
jb
cmp
cmpsl
paddusb
pop
dec
xlat
dec
pop
pop
scas
leave
fildll
cpuid
das
bnd
fsubs
mov
ja
icebp
ljmp
or
ret
xchg
xchg
xchg
daa
add
xor
xchg
jae
int
lahf
clc
ret
jl
or
stc
std
pop
inc
cmp
push
sbb
mov
repz
fs
mov
lock
ss
mov
loope
jbe
stos
inc
jp
out
js
inc
imul
bound
or
pop
xor
cmp
pop
cs
push
and
fnstenv
jp
xchg
cmp
cld
and
nop
or
inc
cmp
xor
dec
sbb
dec
adcb
loope
stc
orl
imul
pop
sbb
add
xchg
jae
mov
and
jno
or
push
repnz
jl
dec
pusha
mov
inc
out
cmp
sub
or
aad
xchg
add
xor
or
ret
mov
add
or
inc
add
push
sub
addr16
dec
sar
adc
push
push
push
mov
cmp
nop
push
or
mov
adc
fs
and
lret
add
adc
repnz
fcoms
int3
leave
xorl
dec
dec
out
mov
mov
popa
xor
and
popf
rcll
pusha
jnp
inc
jo
push
xchg
je
dec
in
cwtl
mov
and
pop
or
rclb
push
inc
jno
orl
push
sbb
pop
add
pop
cmc
adc
add
cmpsb
inc
sbb
xlat
xor
pop
test
dec
pop
adc
jge
mov
incl
mov
dec
dec
jnp
xchg
ljmp
mov
outsl
or
or
pop
je
add
sarl
sbb
and
andb
das
and
pop
jno
pusha
mov
mov
in
inc
jbe
inc
cwtl
fcomps
test
outsl
jns
dec
adc
cmp
and
lods
inc
cltd
and
cmpsl
ret
push
push
je
or
enter
pusha
or
cmpsl
or
pop
movsb
test
es
or
dec
loop
dec
pop
inc
mov
and
enter
lods
shl
mov
scas
loopne
push
jns
cmc
xor
dec
adc
flds
dec
add
cmp
push
adc
push
dec
je
xor
push
or
leave
shrl
adc
dec
and
dec
mov
cltd
orb
inc
pop
inc
addr16
adc
and
push
inc
incl
and
cmp
inc
loope
les
pop
or
or
adc
roll
dec
cwtl
rclb
jnp
push
or
fidivrl
test
push
lret
xor
enter
xor
push
enter
jbe
enter
enter
sub
in
enter
fiadds
enter
and
loopne
enter
clc
and
jecxz
xor
aaa
test
sbb
push
xor
inc
mov
mov
mov
xchg
cmp
es
aas
or
add
mov
inc
sbb
add
sub
mov
cmc
and
or
arpl
adc
or
int
cmp
pop
cwtl
push
sbb
mov
or
push
jge
push
jmp
adc
and
cwtl
jne
les
push
sub
jns
je
dec
lock
push
inc
pop
push
leave
in
leave
xor
cmp
pop
subl
sub
pop
dec
cmp
inc
or
adc
dec
nop
pop
pop
leave
inc
roll
cmpsb
dec
std
sub
push
mov
or
lahf
dec
loop
lds
push
sbb
dec
or
sbb
xchg
push
insl
mov
adc
test
lahf
pop
lea
adc
call
mov
cmp
iret
jnp
mov
cld
les
sbb
jl
or
inc
movsb
push
push
mov
mov
cs
push
imul
xor
jnp
jne
icebp
and
mov
ja
xsaveopt
jmp
jno
or
addr16
and
xchg
mov
stos
addb
mov
stos
mov
cmp
push
push
cli
les
mov
add
adc
sub
loope
push
adc
push
stos
push
aam
and
das
dec
adc
pop
and
jns
sub
xor
scas
mov
jne
cmp
jno
push
js
jno
and
divb
adc
add
data16
lods
push
adc
imul
int3
mov
sub
test
mov
jl
or
hlt
or
ja
adcb
in
pop
sub
add
ss
pop
scas
adc
or
inc
cs
or
adc
inc
inc
outsl
cwtl
adc
les
add
dec
mov
ret
push
jg
jmp
je
push
mov
jge
mov
jl
fsubrs
jge
icebp
shll
pushf
push
push
sbb
and
sahf
repz
pop
push
or
ljmp
gs
dec
inc
in
test
push
push
dec
ret
add
push
mov
sbb
popf
push
push
fstpl
insl
pop
add
das
mov
adc
ret
nop
jg
mov
js
in
or
jbe
daa
mov
cmp
xor
fs
cmc
int
sbb
shl
fs
pop
inc
pop
ja
xor
inc
pusha
fwait
xor
adc
mov
adc
add
sbb
stc
cmp
fs
push
outsb
and
mov
imul
xchg
loope
dec
cltd
push
add
fsubrl
rcrb
and
sub
shr
notl
push
mov
aam
push
scas
inc
and
rcll
sbb
mov
lahf
pop
fcmovne
push
mov
fnstsw
pop
test
xor
pop
les
add
pop
test
push
mov
xor
cmp
pop
stos
and
mov
cmpsb
leave
and
add
movsl
lcall
ret
jmp
out
test
in
xlat
rcll
out
adc
aaa
lret
enter
jnp
enter
adc
sbb
adc
inc
xchg
testb
push
jo
lcall
lea
out
cmp
rcl
xchg
rol
or
ror
and
mov
insb
sbb
je
dec
fcmovne
xor
pushf
sbb
adc
pop
addr16
and
pusha
jmp
lea
rcrl
aam
or
sbb
cmp
sbb
and
push
fld
push
sbbb
aad
and
fnsave
mov
push
add
cmp
addl
test
das
icebp
and
out
lock
leave
sbbl
dec
in
add
xchg
pusha
popa
lods
mov
lahf
divl
add
ficoms
popa
push
in
loope
add
adc
mov
stos
mov
adc
add
mov
and
js
ja
sbb
jmp
cmp
or
and
push
lock
dec
and
testl
sbb
cmp
adc
push
ret
push
sahf
loope
int3
push
add
xchg
sub
stc
lock
inc
push
pop
mov
pop
adc
rolb
sbb
icebp
add
push
jo
add
cmp
and
push
ljmp
pop
cmp
cmp
lods
push
mov
xchg
or
cmp
and
push
jno
mov
lea
sbb
lahf
lods
enter
jo
pushf
rcl
or
int
loop
fiadds
repnz
out
jbe
insl
adc
out
mov
xchg
sbb
mov
xor
lcall
nopl
xchg
ret
test
insb
cmpsl
lods
inc
dec
fcomps
add
mov
add
jnp
and
es
or
inc
negl
test
cmpsl
aam
pop
inc
movsb
mov
jmp
ficomps
push
fs
or
adc
test
and
and
and
aad
popa
add
pop
bound
and
pop
repz
jne
push
movsl
push
mov
mov
or
push
and
pop
xor
ss
das
or
mov
inc
cmp
sub
or
sarb
mov
or
dec
pop
adc
fadds
pop
cltd
push
sub
mov
lods
cmp
test
and
xor
xor
aaa
aam
sub
cmp
xor
inc
adc
add
inc
pop
and
ret
dec
testl
enter
push
add
mov
adc
or
add
lret
jne
cmp
jecxz
and
loopne
xchg
cmpsl
dec
sbb
or
add
sbb
in
fcom
stc
dec
mov
pop
adc
arpl
jb
mov
dec
rol
jmp
shl
push
adc
xchg
pushf
je
data16
test
addr16
add
add
cmp
test
nop
mov
mov
or
je
loopne
mov
popa
xchg
test
push
movb
fadds
ret
inc
daa
aas
xchg
jno
cmp
lea
add
jge
add
mov
push
push
js
add
sub
or
orb
or
push
inc
jge
rcll
mov
or
sarb
mov
mov
push
sbb
hlt
imul
push
and
fs
jg
in
jbe
enter
sub
int
jg
sub
add
and
inc
jmp
inc
inc
rclb
rorb
sbb
cmp
inc
lcall
mov
inc
ljmp
fs
jp
inc
dec
in
mov
movsb
subl
jne
daa
inc
pushf
mov
mov
insl
cmp
adc
pusha
repnz
jb
add
lods
push
fcomps
cmp
rcll
add
cmp
jg
fistl
inc
cmc
clc
lock
mov
adc
mov
fwait
cmpsb
pop
sahf
cmp
xor
nop
sbb
rolb
pop
out
dec
loopne
inc
sbb
fisttps
mov
sbb
ret
sbb
outsl
shlb
jge
jmp
and
out
xor
das
inc
jmp
gs
in
loope
test
bswap
mov
sub
xor
movsb
dec
mov
andb
jp
imul
outsl
push
sti
push
add
pop
push
andl
xchg
cs
les
icebp
add
adc
jle
adc
mov
and
push
xorb
push
bound
imul
ljmp
movsb
jne
dec
and
adc
lcall
cmp
jbe
mov
mov
lahf
sub
rcll
paddd
xlat
nop
cmpsl
mov
movsb
jno
mov
mov
or
sbb
push
or
fcoms
xor
ljmp
imul
push
jmp
lret
imulb
lock
das
inc
or
fwait
add
jne
jle
cmp
sub
ja
push
repz
hlt
jmp
xchg
ja
notb
push
pop
xor
jmp
cmp
je
in
push
or
in
mov
aaa
add
pop
rcrl
sub
pushl
cmp
fists
mov
sarb
in
pop
jne
jbe
cmpsl
fisttpll
adc
andl
or
push
imul
nop
push
adc
lock
add
adc
mov
add
xchg
outsl
xor
mov
stos
cmovo
add
pop
nop
lret
and
dec
lock
sub
mov
into
imulb
push
dec
inc
mov
adc
subl
sbb
cmp
insb
cmp
bound
inc
mov
adc
mov
push
nop
jnp
lret
adc
push
push
inc
and
int3
pop
push
leave
xor
cmp
out
inc
pop
mov
lods
idivl
adc
subl
dec
or
inc
js
pop
mov
leave
aaa
mov
mov
cmp
cmp
scas
sbb
push
mov
cmp
rol
out
add
fiaddl
cltd
or
cmp
push
cmp
inc
aas
inc
sub
loope
dec
pop
aaa
andl
insb
nop
test
jg
xor
mov
cmpsl
rorl
push
inc
cmpsl
movb
push
cmp
aam
pop
fwait
add
ja
data16
movsb
mov
mov
pushf
and
jg
or
bnd
inc
shlb
mov
push
insl
or
mov
or
jmp
stos
fildll
lock
adc
cmpl
roll
movsb
dec
dec
pop
and
js
lea
jno
inc
test
jb
js
xchg
mov
cli
movups
or
inc
dec
aaa
imul
add
sahf
cld
or
cmpb
push
and
dec
cmp
mov
cltd
cli
xor
or
and
or
pusha
enter
or
subb
inc
aam
add
leave
popf
pop
rclb
jmp
cmp
pusha
in
es
and
mov
mov
jbe
ja
push
push
adc
shlb
fidivrl
cmc
adc
les
push
push
or
sub
test
xchg
mov
cmpsl
movsl
adcb
dec
jnp
push
inc
mov
aam
repnz
push
int
xlat
lret
cmpsl
fimull
jne
or
mov
mov
mov
mov
into
push
aas
push
cmp
mov
or
notl
das
rcll
add
in
lea
cmp
xor
adc
cmp
loope
and
mov
adc
outsb
aam
xchg
dec
vcvtdq2ps
xchg
mov
xor
adc
add
in
pop
outsb
jae
loopne
push
add
adc
adc
mov
std
cmp
add
icebp
and
xchg
push
or
push
in
ret
fsubr
sbb
mov
adc
aaa
cmc
push
add
mov
out
xor
jecxz
pop
sub
or
int3
int
xchg
or
or
test
popa
je
pushf
jo
and
out
sbb
pop
test
arpl
mov
jno
sbbl
jge
push
push
adc
dec
mov
dec
mov
add
mov
sub
add
mov
adc
cmpl
inc
aad
mov
or
jns
subl
insl
loopne
mov
or
jle
sti
mov
sbb
out
or
push
push
adc
or
ret
adc
aaa
or
call
xchg
ficoms
jno
add
cmp
xchg
insb
out
pop
and
enter
and
fidivrl
outsb
bound
decb
inc
add
jnp
or
add
adc
les
pop
dec
mov
and
cmp
jo
pusha
mov
gs
iret
add
cmc
dec
arpl
test
dec
sbb
dec
pop
fsubrl
dec
daa
mov
pop
popa
test
cwtl
inc
sbb
daa
inc
xchg
jae
mov
jbe
inc
adc
xor
sbb
sbb
pusha
pusha
dec
imul
cs
add
jne
popa
cmp
jae
jnp
orl
or
cmp
mov
pop
gs
xor
or
jp
aas
ds
and
push
ror
xor
in
adc
inc
add
ja
enter
das
or
mov
lret
pop
addb
sub
scas
movsb
std
xor
js
inc
adc
test
stos
adc
not
jne
pop
aad
xchg
incb
jmp
scas
cmpsb
or
std
add
xchg
push
pop
popa
hlt
and
movl
sti
and
adc
es
xorb
sbb
dec
gs
inc
pop
sbb
mov
inc
stos
aaa
lahf
int3
adc
mov
pusha
cld
push
and
shll
add
jge
orb
jle
ljmp
js
outsl
xor
mov
xor
push
rcll
dec
scas
cmpb
or
out
shrb
dec
scas
clc
stos
inc
fmuls
mov
xchg
arpl
adc
insl
int
push
push
add
rcrb
push
and
pop
lods
add
stc
jbe
rcll
cmc
adc
and
xor
daa
fists
add
push
xchg
mov
lock
push
sbb
or
mov
sbb
mov
fucom
inc
xchg
push
xor
adc
arpl
int
push
add
or
jp
mov
add
and
push
loopne
xchg
dec
inc
add
inc
lds
pop
imul
mov
ffree
roll
fldl
aaa
sub
arpl
in
pushl
xchg
cmp
xchg
xchg
hlt
ret
push
xor
jno
inc
cmp
adc
sarl
push
loop
add
ljmp
pusha
cwtl
dec
aas
fdivrs
dec
add
inc
lahf
push
xor
movsb
js
testb
incb
je
inc
sub
mov
push
jg
dec
or
push
mov
pop
sub
testl
fwait
jp
movsl
stos
iret
push
aam
les
lea
in
cmpsb
mov
lods
orl
sbb
sub
andl
insl
iret
push
push
gs
sbb
push
sbb
jmp
stc
mov
push
nop
xlat
xor
scas
sub
or
inc
push
mov
jge
mov
or
mov
nop
or
test
add
dec
rclb
or
xor
or
or
mov
inc
aam
push
out
js
iret
add
add
int3
mov
das
add
shr
insl
nop
aam
inc
dec
clc
push
inc
gs
sbb
push
mov
xor
xchg
sub
lea
lcall
jbe
imul
and
ret
dec
inc
jbe
sub
incb
inc
in
sar
imul
xorl
jmp
loopne
popa
sub
or
sub
inc
outsl
mov
jmp
mov
addl
push
pop
clc
adc
sub
jo
mov
subl
add
sbb
in
popa
cmc
adc
nop
add
fcomip
or
jmp
and
sub
outsl
push
and
or
cmc
jne
push
dec
mov
or
test
inc
iret
add
shlb
sbb
push
push
insb
mov
sbbb
jle
cmpsb
mov
jno
inc
push
and
xor
push
and
das
popa
ud2
orb
js
pop
call
test
add
js
pushf
ror
mov
jle
and
xor
sbb
dec
adc
dec
mov
sbb
lock
int
int
xchg
dec
test
sbb
lods
rol
push
pop
jne
in
outsb
ss
jns
sbb
adc
push
mov
in
jge
call
aam
dec
xor
add
aad
mov
cmp
lds
dec
call
ret
sub
jno
dec
cmp
add
rolb
lds
sub
mov
and
std
adc
cmc
inc
push
xchg
stos
mov
pusha
adc
mov
mov
mov
inc
fs
sub
pop
add
rolb
mov
rcrb
dec
inc
arpl
movsb
sub
mov
push
mov
mov
add
aaa
sahf
fs
add
mov
xchg
xor
and
pushf
lahf
cmpsb
movsl
pop
pushf
aaa
je
movsb
dec
dec
inc
adc
loopne
and
add
adc
stos
push
cltd
aas
jp
adcb
fistl
fcom
push
mov
sub
sub
loope
jne
outsb
scas
test
sti
adc
mov
ja
loope
cmpsl
lock
adc
in
jns
aaa
lret
add
push
aam
inc
sub
jne
in
add
sub
sub
mulb
sub
push
push
push
rcr
mov
sbb
xchg
mov
nop
std
call
inc
or
push
stos
adc
or
dec
adc
rol
arpl
insb
xlat
add
sahf
clc
add
into
out
enter
adcl
ja
mov
adc
xchg
pop
or
and
int
and
pop
les
aas
sub
ret
cld
hlt
push
cmp
mov
cmpsb
sbb
std
imul
pop
mov
movups
jo
out
into
pop
push
add
or
shll
roll
sub
inc
lods
fstpl
faddl
inc
inc
fsubrp
pushf
sub
test
mov
inc
in
vmovd
cld
jmp
rolb
test
ret
jmp
mov
sbb
psubusw
in
leave
xor
mov
lcall
out
inc
sbb
mov
and
push
mov
and
mov
insl
mov
das
jns
or
jecxz
sarl
dec
sbb
jmp
sub
test
je
ljmp
call
stc
fwait
mov
lock
loopne
mov
gs
in
xor
adc
mov
mov
lcall
mov
mov
xor
xorl
push
lock
inc
mov
loope
pop
fdivrs
jl
mov
jo
test
shlb
mov
mov
fnstcw
inc
test
and
invd
mov
jbe
nop
out
shl
adcl
call
shlb
jbe
dec
sub
push
pop
adc
in
jno
mov
mov
iret
cmp
adc
xorb
push
fmuls
xor
ret
icebp
jnp
mov
cmp
mov
or
lret
dec
adc
loopne
out
movsl
jecxz
xchg
push
femms
imulb
mov
push
inc
loopne
sbb
or
jns
outsl
data16
dec
jge
sbb
test
push
inc
adc
xchg
loopne
insl
and
dec
jmp
push
dec
fldcw
inc
inc
pop
lods
dec
or
or
clc
push
dec
cmpsb
add
aaa
or
adc
insb
push
pop
push
or
adc
jno
sub
mov
push
add
inc
push
xor
pusha
testb
loopne
rcl
inc
aad
faddp
lock
ret
cmpsl
inc
out
push
pushw
add
inc
test
mov
arpl
jo
popa
xchg
jne
jp
push
loopne
dec
cmp
sub
inc
sub
inc
pop
push
pop
add
xor
iret
in
xor
pop
adc
xor
add
xchg
add
or
stc
mov
cmp
imul
or
pop
test
push
popf
add
cmp
test
mov
shll
or
addb
mov
lret
pop
mov
pshufw
sbb
sbb
stos
loopne
fmul
mov
dec
adc
and
stos
rorb
aad
aad
test
outsb
mov
pop
add
adc
dec
leave
rorl
inc
lock
test
dec
add
add
inc
dec
dec
dec
cs
in
ret
or
icebp
popa
ret
mov
add
clc
mov
es
rcll
mov
or
arpl
mov
mov
or
test
lea
or
push
bound
sub
or
loope
bound
pop
mov
ret
cs
pop
sub
mov
dec
mov
adc
imul
xor
jo
adc
cmp
push
push
inc
and
mov
push
js
mov
xchg
lock
idiv
add
test
mov
out
repnz
bound
pop
adc
add
pop
clc
dec
call
int3
push
xor
sub
fnstenv
sub
xor
pop
enter
mov
mov
inc
cs
dec
and
push
int3
call
in
pop
dec
loopne
call
inc
fimuls
add
push
push
or
sub
and
call
aad
test
packuswb
add
call
nop
sbb
and
xchg
push
mov
xor
cvtps2pd
inc
push
rclb
add
and
and
sub
jns
sub
jns
pop
aad
les
lea
test
push
push
ret
mov
and
adc
addb
shrb
add
adc
dec
inc
mov
ror
outsl
mov
fcoms
xchg
or
dec
jmp
and
aas
mov
sbb
add
mov
add
mov
mov
jge
xor
test
xchg
inc
pop
shlb
imul
push
sbb
pop
add
lcall
loope
fiaddl
cvtps2pd
dec
les
xchg
je
push
pop
pushf
andb
js
pop
adc
push
pop
mov
int
add
pushf
pop
les
push
subl
adc
cmpsb
pusha
test
dec
inc
mov
and
push
cmp
shlb
sbb
adc
and
adc
push
or
mov
cmp
pop
or
psubb
shlb
xor
add
lret
cmp
mov
repz
jne
into
cmpsb
subl
or
lret
cwtl
mov
xchg
movsb
lar
add
mov
cmpsl
lahf
jecxz
xchg
loopne
pushf
sbb
lds
mov
in
pop
and
repnz
in
leave
pop
jo
mov
cli
jge
adc
imul
fs
rolb
arpl
loopne
sbb
or
sbb
inc
cmp
cmp
sbb
lret
mov
add
test
out
push
clc
cmpsb
lods
or
or
cbtw
cld
mov
les
hlt
inc
es
xchg
loopne
icebp
or
add
lret
or
add
cwtl
dec
rcrl
loopne
in
inc
adc
clc
adc
insl
sbb
mov
or
loopne
and
mov
push
jo
xor
scas
loopne
in
fs
adc
inc
adc
js
cld
mov
sbb
or
add
xchg
xchg
xchg
inc
jecxz
xlat
fdivs
push
pop
adc
jle
mov
pusha
data16
ds
mov
add
shlb
xor
push
or
adc
lahf
jl
out
pop
inc
push
and
mov
add
int3
js
push
test
int3
mov
lds
lret
mov
pop
out
xchg
aad
movsb
movsb
fsubl
dec
xor
xor
mov
orb
inc
pop
in
inc
bound
or
repnz
push
mov
xchg
jecxz
aaa
loopne
mov
push
dec
or
call
lds
lahf
sbb
rorb
sub
in
imul
in
add
push
ja
or
das
pop
iret
add
xchg
test
nop
cmp
dec
add
pop
mov
inc
mov
cmp
xchg
je
repz
dec
sti
sbb
pop
gs
cltd
dec
sbb
std
mov
push
sub
push
pop
or
lea
or
js
popf
fsubs
std
sbb
mov
jg
ret
add
inc
loop
ret
push
mull
ret
les
les
mov
popa
add
mov
outsb
pop
test
sahf
mov
bnd
in
mov
dec
sbb
test
mov
in
pushf
mov
pop
or
dec
enter
inc
cmp
dec
pop
loope
lcall
or
dec
sub
test
dec
inc
dec
add
int
xor
lods
lcall
push
xchg
orl
cmp
cmpsl
pop
icebp
sbb
lock
fs
xorb
sahf
xchg
sbb
stos
fidivrl
cwtl
cli
aas
cmp
shrb
dec
or
mov
jo
dec
inc
inc
mov
mov
pushl
insb
cmp
and
xor
pushf
add
addb
mov
mov
push
adc
shr
pushf
cmpsl
rolb
je
cmp
and
and
rorb
lahf
rcll
loopne
or
rcr
mov
adc
lods
fisubrs
mov
ss
aas
je
popl
aas
xor
mov
inc
add
and
mov
push
add
ja
pushf
push
cmp
mov
xchg
js
leave
xor
xlat
inc
pop
enter
cmp
or
inc
mov
loop
fadds
or
outsb
sub
out
ds
inc
push
inc
hlt
sbb
inc
push
dec
fs
pusha
jmp
ret
clc
mov
arpl
das
push
shlb
js
insl
pop
pop
inc
jnp
jb
push
push
or
es
sbb
xchg
ljmp
rolb
pop
clc
loop
mov
rolb
enter
lret
pop
inc
shrb
lret
cmpsl
cmc
and
aas
sbb
pop
movb
sbb
dec
fimuls
sbb
and
add
lds
das
cmpl
pop
aas
push
andnps
addb
add
jb
xor
push
or
cmp
inc
aas
jbe
and
and
adc
aas
mov
adc
inc
fcoml
es
aam
sahf
cwtl
fs
or
mov
dec
push
test
pop
dec
dec
sbb
push
movl
roll
pop
add
pop
cmp
mov
data16
jo
pusha
out
fisttpll
mov
or
inc
insb
add
inc
repz
cmp
hlt
inc
mov
loope
sub
imulb
enter
jne
xor
je
cmp
addw
sbb
imul
insl
mov
rorl
scas
shll
gs
xchg
add
mov
popf
push
arpl
rcrb
inc
jo
jbe
push
push
push
cltd
add
ss
int
xor
sub
sti
out
data16
mov
xor
pop
or
and
dec
xchg
movsb
shrb
push
cwtl
addl
cmpb
pop
adc
mov
push
cwtl
mov
pop
jno
jmp
mov
js
mov
pop
or
or
cmp
aad
sbb
mov
add
mov
xchg
dec
xchg
add
jo
pop
cmpsl
push
fbstp
test
xchg
outsl
jns
test
mov
push
out
inc
inc
inc
sbb
xchg
das
inc
dec
ja
cmp
inc
dec
push
sub
loopne
xor
xchg
dec
mov
inc
sub
xchg
push
int3
out
iret
sbb
add
jp
add
jo
out
jno
fwait
add
pop
lret
sbb
enter
cmp
cwtl
jmp
in
sub
ss
mov
jle
jne
fs
in
jae
cmp
inc
test
rdtsc
jnp
pushf
or
dec
ret
repz
pop
add
mov
or
mov
cmp
orb
hlt
xor
test
mov
pop
inc
inc
sbb
int
sub
test
cwtl
cmp
jnp
lret
jle
xchg
pop
pop
jb
inc
pop
lea
test
inc
insb
jg
or
mov
xor
movsl
and
sub
mov
lea
scas
push
or
push
mov
mov
fimull
sub
js
and
je
push
in
and
dec
cs
mov
cmp
cmp
dec
cs
inc
inc
or
and
and
movsl
and
push
push
cmp
inc
xor
push
push
lds
xchg
push
adc
inc
mov
lcall
add
mov
inc
stos
adc
jg
jno
gs
xor
or
push
inc
ret
push
movsb
jmp
mov
pop
pop
push
jmp
push
inc
mov
jb
lahf
jl
and
sub
add
fdivrl
jl
das
shll
sbb
imul
sbb
mov
mov
ficomps
sahf
int
add
and
mov
mov
imul
inc
pop
pop
clc
popa
pop
xor
inc
xchg
adc
mov
adc
jmp
xor
xor
mov
insb
ret
adc
add
inc
frstor
mov
mov
or
orl
adcl
sub
fcoms
shlb
cmpsb
dec
cmp
in
shlb
or
sub
sbb
pop
mov
xchg
call
rorb
or
es
adc
pop
call
add
loope
inc
adc
push
sub
and
add
inc
jo
xchg
aam
pop
jb
push
and
lcall
sbb
mov
gs
lock
jmp
mov
inc
cmp
cmp
andl
imul
ja
lret
mov
cmp
cmpsb
adcl
je
je
sbb
mov
sbb
push
pop
push
and
cld
rclb
sbb
ret
ret
and
sub
and
sub
inc
scas
inc
mov
pop
jb
addl
pop
es
push
lahf
ss
push
jmp
jo
inc
ficompl
aaa
add
adc
call
mov
sbb
dec
ss
lret
add
hlt
mov
js
dec
fldt
mov
xchg
and
inc
es
push
arpl
call
push
shl
add
popa
mov
ds
push
push
and
and
jmp
pop
in
mov
cmp
aam
adc
push
mov
cmp
pop
dec
pop
pop
rorb
mov
movsl
add
push
push
loopne
jle
lea
pop
pop
in
imul
or
hlt
dec
les
xchg
inc
int
xlat
adc
mov
add
iret
pop
aam
xchg
cmpsb
dec
ds
xlat
scas
imul
aaa
xor
cmc
out
inc
push
gs
and
and
xor
add
mov
dec
shlb
jl
hlt
mov
fbstp
inc
jmp
out
adc
rclb
fwait
in
jnp
loopne
inc
loopne
dec
std
movd
pop
add
js
fsubr
and
hlt
rcrl
pop
cmp
xor
ret
sub
sub
nop
push
pop
loopne,pt
dec
ret
xchg
sbb
add
adc
dec
push
or
sbb
stos
dec
sub
dec
xor
loope
test
rclb
adc
cmpsl
push
dec
shlw
call
add
dec
aaa
lds
test
sti
ficompl
pop
stos
add
clc
pop
pop
xor
jne
add
inc
outsb
inc
cmpsb
loope
call
mov
mov
leave
lods
push
insb
jo
sub
jecxz
lret
rcr
sbb
insb
or
dec
or
pop
xor
jno
fxch
addl
sbb
dec
mov
mov
xor
add
sbb
lods
mov
or
pop
subl
or
xor
pop
cmp
cmp
or
push
push
adcb
jg
sbb
dec
sub
daa
clc
rcrl
dec
popf
cmpsb
rolb
mov
shlb
jae
stos
lds
das
sub
inc
xor
in
shr
add
clc
xchg
dec
je
jnp
pop
rorb
stos
bound
or
jecxz
lea
iret
scas
cmp
je
sub
jno
rol
test
push
inc
adc
pop
and
jmp
lods
popa
sbb
ret
imul
insb
dec
adc
inc
or
lods
popa
lahf
sub
inc
fsubs
repnz
out
inc
es
movl
inc
and
mov
int
nop
cwtl
repz
fidivrs
push
sbb
mov
adc
dec
jmp
xor
icebp
push
jbe
fmull
aas
jle
mov
mov
ja
xor
xor
ljmp
sbb
inc
int3
and
in
mov
xor
sti
jl
inc
sub
std
out
mov
mov
jno
xchg
mov
std
mov
pop
inc
sbbl
in
sbb
jle
cmpb
movb
orb
andb
sbb
push
sub
pop
jne
outsb
loope
xor
pop
leave
test
jle
aaa
dec
and
clc
xchg
sbb
dec
inc
jne
push
stos
shlb
fidivrs
add
arpl
cld
and
aas
cmp
fildl
or
pushf
cltd
or
push
and
jnp
pop
cmp
sbb
pop
outsl
mov
fcomp
mov
sbb
cli
mov
in
xchg
mov
mov
mov
add
inc
loopne
jo
inc
inc
pushf
iret
push
inc
push
sbb
cmp
or
clc
aas
je
addr16
pop
shrl
add
cmp
and
and
add
and
xor
daa
rorb
dec
push
test
out
inc
stc
or
pop
xchg
cmpsl
mov
dec
test
and
xchg
int3
dec
jecxz
loopne
outsl
pop
mov
sub
lahf
adc
jae
push
push
xor
lods
fistpl
sub
mov
insl
je
sub
mov
out
inc
stc
add
hlt
xor
incl
xchg
insl
ret
jmp
cltd
dec
sbb
fistpll
mov
mov
inc
or
add
mov
mov
push
rolb
das
fadds
ss
ljmp
add
movsl
sbbl
outsb
insl
push
and
add
movsl
cmp
cmpsl
jg
inc
pop
or
dec
aad
data16
and
test
sub
sbb
lahf
mov
test
clc
pop
mov
dec
mov
adc
pop
repnz
mov
cltd
jl
cmp
decl
add
jo
loop
dec
or
dec
dec
imul
or
dec
add
and
and
dec
ljmp
mov
cmp
cmp
nop
mov
adc
cmpl
fsubl
sbb
fiaddl
pop
int3
mov
jp
sbb
mov
push
push
dec
das
ret
pop
or
insb
xor
dec
cmp
fdivs
add
push
out
xchg
jns
sbb
roll
dec
pusha
xchg
mov
jns
imul
cli
imul
xchg
inc
nop
or
fcoms
adcb
idivb
popf
jno
jp
daa
cmp
inc
mov
xchg
pop
filds
or
clc
rorl
cmp
clc
lds
call
js
cmp
add
sete
add
jbe
jns
mov
jo
jb
out
inc
or
pushf
cmp
and
lret
rolb
jnp
jecxz
or
dec
pusha
es
test
xor
sbb
jns,pn
popa
es
mov
and
into
mov
cmp
pop
out
cmp
jbe
and
cs
xchg
adc
imul
jo
or
push
movsl
push
hlt
fnsave
jno
jge
push
les
ds
mov
sbb
cwtl
push
mov
enter
mov
lock
adc
bound
push
sbb
popf
lret
push
fistpll
mov
and
inc
and
and
pop
mov
pop
ljmp
mov
cltd
aas
add
mov
xchg
pop
inc
lea
dec
mov
pop
or
enter
leave
ss
add
mov
jbe
jno
je
out
cld
insb
fwait
xchg
add
cmp
sbb
push
cli
dec
movsl
cli
push
pushl
sahf
adc
cld
imul
jl
inc
mov
popa
loopne
ss
add
setle
cmp
mov
arpl
mov
popa
mov
jl
scas
mov
shl
inc
xchg
add
add
add
push
addb
pop
inc
adc
test
mov
ret
sub
mov
mov
pop
xchg
pop
inc
stos
adc
sbb
inc
mov
pushf
and
sbb
enter
or
das
test
daa
jge
popf
inc
and
jo
cmpsl
dec
bound
inc
ficoml
and
sub
pop
ja
je
arpl
jecxz
scas
addr16
push
xchg
add
aaa
or
rcll
mov
push
cs
or
or
ret
add
inc
xor
push
add
xchg
xor
adc
cmp
adc
into
fidivl
lods
and
push
jb
cs
xor
dec
shrb
test
pop
fimuls
test
sbb
call
mov
popa
insl
dec
add
mov
pusha
cli
cli
add
dec
sbb
add
push
inc
inc
in
mov
push
lcall
out
pop
xor
enter
cmp
shll
cmp
add
pusha
movsl
rolb
jno
lods
lea
cmpsb
imul
add
mov
push
cmp
inc
mov
ljmp
icebp
add
out
sub
sub
cmp
in
push
mov
or
lock
add
movl
pop
aam
add
ds
inc
rclb
sbb
pusha
sarl
jge
cmp
subb
movb
pop
push
shlb
cli
pop
test
dec
and
outsb
cmpsb
dec
pop
mov
mov
cmp
jl
sar
xchg
jg
iret
sbb
mov
cmp
push
rcrb
push
pushf
xor
add
pop
cmp
mov
movl
iret
je
add
inc
movsl
xor
in
ficoml
cmp
add
add
fwait
andb
sti
pop
mov
arpl
xor
xor
jg
inc
or
cmp
outsl
and
add
add
shll
push
les
cli
std
jle
inc
xor
lret
add
push
xchg
jge
sahf
dec
jae
jno
sub
sbb
int3
fdivs
fcoml
jno
jbe
cmp
clc
or
ret
pop
mov
pop
ret
dec
pop
cmp
inc
pusha
xchg
sbb
xor
inc
dec
inc
dec
add
add
jno
inc
cmp
inc
cmp
push
xchg
xchg
clc
push
xchg
mov
out
loope
das
push
addr16
ret
push
cmp
push
insl
pop
sti
pop
shl
push
cld
mov
xchg
pop
lock
xor
lock
adc
xor
cmp
daa
sub
bound
xchg
xor
sbb
jne
add
mov
xor
lahf
addb
push
leave
dec
out
push
mov
mov
jo
jo
jge
gs
add
xor
pop
cmp
dec
adc
jae
js
mov
test
and
and
pop
movsl
ret
mov
loopne
xor
ss
faddl
popa
repnz
sub
cmpsb
pop
or
sub
test
cmpsl
mov
push
cmc
lea
mov
fimull
out
jbe
adc
data16
xor
jae
sbb
cmc
aas
jae
jecxz
and
xchg
push
out
jbe
jno
inc
mov
pop
fnsave
movb
add
mov
add
or
jge
pop
pop
subb
xchg
stc
or
jl
adc
call
call
dec
or
sbb
mov
and
ds
push
add
popf
jmp
and
mov
or
inc
pop
add
xchg
sbb
pop
lock
add
cmp
push
in
aaa
in
lods
and
lds
add
dec
data16
lret
scas
cmpsb
sbb
add
rcll
and
sahf
shlb
imul
xchg
add
adc
mov
inc
xchg
popf
dec
or
lahf
cmp
bswap
enter
adc
dec
inc
jno
adc
pop
sbb
fbstp
or
push
les
fisttpll
movb
insl
dec
pop
mov
lock
and
pop
clc
cmpsl
inc
sbb
xadd
mov
loope
sbb
push
sbb
sub
testl
cmp
push
int3
inc
sbb
push
fstps
add
xor
cmpsb
inc
jl
xchg
pop
adc
push
mov
inc
mov
push
and
xchg
adc
sub
sub
push
cmp
mov
and
adc
inc
mov
sbb
inc
and
shrb
movsl
mul
or
aaa
inc
add
test
movsb
adc
js
adc
dec
cmp
xor
ja
lock
movsl
and
or
comiss
mov
outsl
pusha
movsl
jp
or
in
aaa
mov
pusha
data16
dec
mov
not
cmp
adc
or
adc
mov
mov
dec
mov
add
and
aaa
and
mov
adc
sbb
jmp
or
jmp
jecxz
je
adc
pop
leave
jbe
fiaddl
xchg
call
ret
add
test
pop
js
jle
aas
cmp
lods
xchg
mov
push
arpl
push
addl
shrb
faddl
data16
cld
cmp
pop
push
ss
and
xchg
ljmp
cmp
sahf
xchg
cmc
cs
rcrb
mov
dec
adc
clc
jmp
pop
add
ficoml
pop
or
push
adc
mov
adc
idiv
icebp
sub
xchg
and
cmp
xchg
in
cltd
incl
popf
test
imul
pop
sbb
sbb
lahf
and
xchg
sbbb
rolb
jo
push
imul
adc
call
jae
mov
mov
adc
pop
mov
pop
mov
dec
rorb
inc
adc
xor
clc
repnz
loopne
push
cmp
or
jo
xchg
mov
inc
add
aas
lock
inc
dec
mov
daa
adc
dec
jge
sub
sub
push
das
sub
mov
adc
or
push
sub
lods
cmp
xchg
imul
add
inc
push
adc
push
test
add
dec
test
add
add
lods
lret
out
push
mov
dec
adc
jmp
nop
jbe
pop
cli
and
push
cmp
sbbb
xchg
jle
inc
or
pop
sti
ss
test
inc
enter
insl
pop
movlps
and
sub
add
cld
pop
mov
sbb
jns
add
mov
cmp
cs
clc
hlt
jmp
and
mov
sub
sub
cmp
lock
lock
mov
and
push
jnp
pop
or
fdivl
sbbb
js
pop
pusha
enter
test
xor
les
enter
aam
add
aam
mov
adc
and
cmp
sbb
call
js
push
sbb
inc
dec
or
sub
imul
inc
add
push
lea
push
add
outsb
lods
xorl
xor
aaa
sub
je
pop
adc
adc
xchg
xchg
xchg
add
and
sbbb
fsubs
xor
dec
ja
imul
nop
dec
pop
xor
into
adc
roll
test
adc
cld
fneni(8087
pop
mov
test
adc
aam
mov
jge
and
ret
in
loope
lea
insb
xor
fdivl
hlt
shr
xchg
dec
addb
push
sti
cmpsl
lds
rolb
das
int3
dec
add
popf
or
sub
and
popf
mov
lods
jmp
xchg
or
scas
mov
dec
xchg
rcr
pop
jecxz
outsb
inc
or
xchg
cmp
and
sub
push
push
or
aad
loopne
test
push
add
aaa
pop
lods
jb
adc
movl
mov
fs
dec
mov
lods
add
or
mov
and
jne
add
inc
imul
xor
cmp
daa
xchg
mov
pop
mov
gs
mov
xchg
xchg
pusha
add
adc
call
js
into
popa
mov
xor
sahf
cmp
or
push
insl
sbb
into
adc
daa
gs
xchg
cmp
jmp
or
inc
cmp
sub
popf
adc
sbb
sbb
adc
pop
repnz
ret
stc
test
idivl
aam
adcb
cmp
sti
cmpsl
cmp
in
add
mov
and
push
lea
sbb
shlb
inc
jp
sbb
pop
sbb
or
cli
mov
in
sbb
shl
or
and
push
loope
rclb
ror
mov
call
jmp
xor
push
add
sbbl
adc
jo
mov
subb
adc
mov
leave
aad
imul
fdivrs
je
mov
adc
and
pop
stos
add
fstl
mov
cmp
inc
fisubrs
testl
cmp
sbb
jbe
aam
rolb
pop
dec
shr
mov
je
add
add
and
sbb
pop
mov
ss
cmc
cmc
mov
jns
sbb
sbb
pop
pop
mov
popa
bsr
mov
or
add
xchg
test
inc
dec
adc
cltd
dec
or
bound
ret
jnp
std
add
xchg
sub
inc
jmp
cmp
out
pop
adc
pop
js
add
popf
ret
add
outsl
dec
add
dec
je
aas
btr
sub
xchg
sub
or
lea
or
mov
dec
add
and
jge
jo
or
pop
inc
add
pop
test
or
xor
and
or
dec
jle
add
mov
push
call
inc
pop
or
add
fsubs
jp
sub
dec
mov
cmp
xor
cli
xchg
pusha
push
popa
inc
and
js
jle
rorb
test
mov
xchg
dec
outsl
lods
int3
enter
lcall
inc
cmpsb
lock
lret
push
push
rclb
cmpsb
mov
mov
cmpsl
adc
push
rol
lret
and
mov
xchg
xor
popf
cmp
nop
pop
jo
mov
and
leave
sub
adc
cmpsb
mov
sbb
jl
and
adc
inc
cmp
cmp
insb
jbe
aas
push
push
jl
mov
insb
lcall
cmpl
dec
aam
mov
inc
pop
int3
adc
mov
stos
fadds
je
dec
mov
cmp
sbb
punpckhbw
prefetch
or
add
outsl
mov
xchg
cld
mov
pop
rcll
mov
or
pop
imul
aam
int
mov
repnz
fwait
mov
outsl
or
pushf
and
xor
xchg
cld
inc
dec
loop
push
inc
mov
movsl
leave
aam
adc
outsl
xor
push
pop
lcall
orb
add
dec
adc
cmp
adcl
gs
or
shrb
test
or
add
ret
dec
inc
cltd
icebp
sbb
ret
sbb
addl
xor
sbb
push
orl
dec
push
imul
and
inc
sti
pop
sub
das
xchg
pushl
unpcklps
incl
adc
dec
and
xor
mov
xor
insl
add
xchg
fwait
pop
pop
les
fcoml
mov
jnp
lahf
daa
lahf
xor
lahf
insb
push
in
fsts
mov
cmp
fs
xchg
mov
lock
test
fstpl
push
sti
fdivs
adc
xor
xchg
jl
out
sahf
divl
movl
iret
repz
cmp
sbb
sub
add
fdivp
cmp
push
jecxz
jmp
sti
popa
imul
repz
jne
inc
cmp
shlb
roll
or
addl
adc
addb
pushf
out
out
push
mov
sarl
lcall
es
add
lcall
lds
mov
ja
rorb
and
xor
inc
add
push
dec
mov
push
pop
inc
dec
imul
icebp
outsl
outsl
imul
jne
mov
jecxz
and
sbb
loopne
lock
out
xchg
lock
push
fwait
adc
xchg
xchg
mov
nopl
xchg
stc
cmp
in
in
sahf
pushf
xor
imul
stos
arpl
add
ret
mov
neg
dec
pop
test
sub
stos
push
pop
ja
ficompl
or
or
sub
and
push
xchg
mov
movsl
dec
xchg
ficompl
and
pop
out
adc
jnp
and
rorb
scas
pop
test
jno
mov
fiadds
push
ret
ds
dec
inc
scas
shrb
scas
adc
addl
jae
push
mov
imul
add
dec
or
cwtl
lods
mov
adc
icebp
and
call
and
cmp
cs
xchg
gs
imul
fisubrl
mov
or
sbb
jecxz
or
idivl
inc
or
and
push
cltd
dec
inc
jae
in
jle
add
scas
or
pop
push
repz
movsl
jge
dec
dec
add
mov
or
subb
popf
lea
xor
mov
xor
rcll
pop
lods
or
inc
xchg
dec
dec
xor
dec
push
and
ror
sub
dec
pop
fs
test
and
push
pop
test
xchg
gs
dec
mov
mov
or
mov
rcr
ss
and
cmp
or
adc
push
pop
pop
push
pop
add
test
sarb
lret
pop
and
ret
repnz
lods
adc
pop
inc
adc
xor
imul
push
mov
or
push
cmpb
mov
lcall
push
push
mov
fsubrs
push
pop
push
xor
xchg
dec
test
movl
ret
or
sbb
jnp
ret
cmp
add
dec
cmp
dec
push
insb
sbb
fdivl
xor
leave
add
pop
xchg
jmp
and
scas
lods
pop
or
imul
lds
sub
mov
pop
insl
pusha
mov
mov
iret
fdivrl
fcmovb
jmp
pop
les
mov
stc
inc
mov
push
mov
inc
daa
jmp
dec
adc
add
lea
add
mov
adc
adc
fnsave
pop
ljmp
push
shrb
adc
dec
out
and
inc
add
ja,pt
enter
xchg
ret
jmp
mov
adcl
movsl
jbe
xor
arpl
add
fisubrs
arpl
roll
and
xchg
dec
test
out
rolb
rorb
sbb
adc
xor
cmpsb
or
aaa
addl
sub
rcr
push
pop
icebp
clc
mov
push
imul
sub
lds
scas
imul
bound
adc
stos
push
add
pusha
adc
sti
mov
cmc
sub
sbb
mov
inc
jns
int
push
ja
dec
mov
ljmp
sub
xchg
clc
ret
pop
lret
rep
mov
pop
mov
lea
xchg
cltd
out
dec
push
out
orb
mov
or
shlb
sub
inc
addl
dec
push
push
ret
fwait
movsl
out
call
add
scas
push
adc
cmp
clc
divl
xchg
push
pushf
cmp
rcl
xchg
mov
sub
ret
test
pop
sbb
shll
sbb
add
sub
daa
shll
add
insb
repnz
mov
pop
push
data16
cmp
inc
nop
mov
adc
sub
mov
in
scas
push
cmp
sub
jne
push
mov
jecxz
add
sbb
jae
daa
or
push
clc
add
dec
mov
mov
lods
mov
je
addr16
add
in
fcmovnbe
and
push
subb
imul
shll
jne
fsubl
cmp
dec
loopne
add
arpl
jae
inc
sub
inc
pusha
or
push
mov
dec
addb
test
movsb
xchg
outsl
fistpll
xor
and
push
xchg
inc
divl
jg
stos
aaa
jns
test
into
or
add
loope
adc
lea
and
cld
jbe
mov
dec
sahf
inc
or
sub
in
inc
xor
loopne
mov
pop
xchg
and
cmp
sbb
mov
or
add
aas
push
inc
dec
adc
mov
mov
cmp
test
shll
ja
les
int3
outsb
pop
inc
fdivrs
dec
pop
nop
sub
stos
adc
add
lahf
sahf
xor
jns
sbb
adc
mov
outsb
cmpsl
xchg
divb
pop
fstpl
repnz
hlt
fdiv
mov
push
push
add
sahf
outsb
add
cmp
inc
sbb
insb
mov
xor
dec
push
or
call
pop
mov
push
xchg
fst
jmp
add
clc
adc
jecxz
pushf
add
mov
rcr
and
and
stos
sub
addb
shll
add
xor
pop
jb
int3
sbb
enter
out
sbb
cltd
dec
lods
loopne
mov
out
lock
sub
dec
dec
hlt
or
xchg
or
add
les
jmp
pop
fbstp
stos
push
jno
mov
or
in
shr
movsb
cmp
dec
loope
add
enter
aas
xor
idivb
lret
stos
sarb
ret
sbb
es
mov
stos
lods
xorl
dec
addr16
inc
inc
xchg
rclb
push
push
push
cmp
dec
or
pusha
xchg
lock
and
aad
mov
or
in
lods
lcall
arpl
fxtract
test
pop
dec
in
xor
mov
add
push
stos
xchg
push
roll
cmc
mov
lods
or
pusha
and
inc
adcl
xor
mov
dec
jg
jb
xor
lods
stc
cmp
or
dec
and
addb
divl
xchg
mov
je
or
psubq
mov
and
xchg
out
dec
dec
adc
sub
jmp
out
into
mov
gs
sbb
xchg
jg
and
xchg
mov
jmp
mov
xor
in
mov
cltd
and
or
fcomi
negb
icebp
mov
aad
scas
sub
cld
ret
sti
hlt
hlt
and
push
mov
push
scas
test
shl
or
imul
rolb
jo
mov
inc
cmpsb
mov
mov
inc
mov
les
or
fcoml
xor
xor
mov
xchg
sub
jno
xor
movsl
nop
inc
test
clc
lcall
ja
popl
dec
pop
cltd
dec
sahf
adc
inc
pop
sbb
pmulhuw
or
bound
jae
mov
sub
push
mov
add
sbb
in
in
xchg
dec
xor
je
jne
cltd
movsb
aad
call
dec
jae
mov
push
mov
cmpsb
sub
cmc
adc
movl
inc
mov
loopne
mov
or
jns
inc
fstpl
in
lods
cmpsl
xor
adc
leave
adcl
mov
jo
lret
mov
sbb
out
or
arpl
sbb
inc
inc
popf
popf
sbb
mov
ror
stos
or
out
sub
movsb
push
or
adc
or
rolb
sub
push
push
xor
cmp
or
leave
push
jnp
mov
push
jo
hlt
jae
or
cmpl
in
dec
rol
shlb
rcl
push
jg
mov
pop
cltd
aas
cs
dec
xchg
test
xchg
xchg
test
sar
out
mov
nop
inc
xchg
les
and
ret
movsb
xchg
xorl
out
mov
dec
push
sbb
imul
inc
mov
sub
lods
sbb
jne
sbb
repnz
gs
divb
fistps
sub
shrb
mov
and
push
dec
test
mov
mov
inc
xor
jp
sub
stos
xorb
push
xor
cmpb
xchg
mov
and
adc
and
dec
sub
nop
lret
push
cs
in
in
negb
clc
fldcw
sbb
mov
call
pop
cmp
in
gs
add
cmp
push
nop
add
cmp
clc
hlt
cld
subb
pop
cmp
in
xchg
rcrb
add
pop
pop
sbb
sub
inc
adc
lret
xchg
push
dec
rolb
mov
pop
rcrb
adc
push
adc
push
push
ret
add
push
mov
lods
mov
aam
push
dec
outsl
sub
xchg
outsb
mov
mov
daa
add
add
sub
cmovg
shlb
push
and
inc
dec
xchg
pop
je
xchg
mov
outsl
jo
insb
push
push
loop
in
pop
fdivrl
xchg
mov
xor
call
jne
and
daa
xor
int
les
and
adc
push
add
jnp
in
adc
dec
inc
adc
cmpsb
movsl
and
xchg
adc
adc
push
pop
mov
mov
je
adc
push
mov
popa
jo
dec
cwtl
iret
add
movsb
or
arpl
jo
or
scas
aad
sub
add
cmpsb
mov
in
adc
add
pop
clc
mov
mov
ss
push
negl
push
cld
mov
jns
dec
orl
add
inc
add
int
mov
mov
mov
lods
xlat
dec
jno
inc
jb
iret
push
mov
sub
push
and
sub
insl
cmc
ret
arpl
adc
add
sbb
adc
clc
mov
cmpsl
outsl
add
stos
popa
imul
dec
pop
and
or
je
decl
pop
add
addr16
dec
push
sbb
test
or
insl
xor
jbe
stc
push
cmp
jne
repnz
in
ret
ljmp
orl
mov
rol
mov
je
dec
cmp
sbb
pop
es
rorl
adcb
push
mov
rcll
and
sahf
xor
or
dec
mov
mov
inc
xlat
dec
cld
bound
add
inc
sbb
fs
cmp
jae
out
loop
iret
pop
inc
aas
and
fmull
or
push
mov
push
mov
mov
push
and
pop
lea
std
mov
xor
push
push
jge
xor
rcrb
or
shl
xor
or
sub
cmp
xor
xchg
mov
sub
jb
dec
mov
fstp
and
dec
push
in
add
dec
inc
jne
push
pop
test
jbe
xor
push
pop
das
pop
test
jl
dec
adc
out
filds
xchg
cld
inc
push
push
push
lea
jns
idivb
dec
adc
sbb
les
or
mov
cmp
push
cmp
xor
in
mov
push
or
cmp
and
mov
sbb
orl
ret
ret
aaa
sub
mov
sbb
and
and
mov
stc
sub
out
xor
mov
mov
xor
dec
xchg
sub
jl
mov
movsl
icebp
mov
mov
xorb
sub
jo
inc
ret
ret
push
nop
sbb
bound
sahf
das
mov
adc
es
mov
pop
ret
outsb
stos
mov
inc
fisubrs
xchg
shrb
cli
imul
in
mov
push
imul
sub
shlb
xor
jns
push
fbstp
ds
add
loopne
andb
xchg
scas
scas
add
and
adc
pop
test
add
pop
adcb
test
sahf
inc
lret
adc
sub
mov
cmp
nop
aas
icebp
sub
sbb
jbe
aad
inc
jae
aam
add
sbb
les
and
xor
dec
jp
dec
and
mov
mov
push
jl
mov
aaa
jmp
lds
cld
push
add
inc
xchg
jl
pop
dec
xor
add
sarb
pop
es
pop
into
adc
scas
and
jge
mov
dec
and
ljmp
js
test
cmp
fs
cmpsb
sahf
ret
fs
stos
lock
push
jne
or
popf
bound
xchg
push
inc
jl
mov
mov
mov
adc
jg
loopne
dec
inc
cmp
xchg
popa
jnp
decl
mov
jne
sub
push
addr16
mov
scas
mov
pop
mov
addr16
or
sbb
sahf
cmp
outsb
add
roll
movsb
sub
in
push
mov
push
insl
inc
and
aas
mov
inc
sbb
es
int3
dec
cmp
inc
mov
pop
aam
sbb
cmp
add
add
rorb
loopne
testl
rolb
and
xchg
or
int3
and
or
jle
sub
add
dec
loopne
js
scas
sbb
ret
push
mov
adc
push
ffree
adc
xchg
push
xchg
push
or
popa
sub
mov
pusha
dec
ss
push
in
cld
lahf
notb
and
das
cmp
jle
mov
xchg
push
jmp
pop
mov
popf
add
mov
scas
shll
lahf
mov
ret
or
cmp
sbb
sub
and
and
call
repnz
xchg
cli
adc
cmpsl
andl
push
aas
test
and
mov
adc
or
or
xor
add
aas
fiaddl
push
pusha
pop
pop
sbb
ds
xlat
cld
jmp
dec
cmp
mov
lret
adc
insb
jg
cmp
adc
mov
push
cmp
fcompl
into
dec
inc
fldenv
mov
jbe
lock
insl
sbb
jp
add
les
push
push
ficoml
and
sbb
push
cwtl
insb
and
ret
adc
adc
nop
test
daa
ja
ret
mov
cmp
int3
cmpb
or
sub
dec
sbbl
add
insb
mov
inc
xchg
aad
nop
or
add
ret
inc
push
enter
out
dec
and
and
or
push
sub
pop
and
pop
rcrb
cltd
loopne
push
and
pop
mov
inc
je
mov
xchg
add
add
sbbb
xorb
out
lods
adc
dec
dec
or
int
subb
mov
push
adc
and
or
push
sub
cld
cmc
sub
movsb
push
or
mov
movsb
movsl
addr16
mov
ds
push
fwait
or
push
mov
test
or
and
xor
and
jmp
mov
das
scas
dec
jne
loopne
inc
out
sarb
mov
push
ret
lods
or
call
and
fwait
dec
call
fidivl
cmp
cmp
pop
adc
cmp
fwait
dec
add
arpl
mov
les
aaa
hlt
into
rcl
add
aad
cmpsb
jmp
jo
jge
sub
pop
negl
inc
adc
push
dec
sbb
or
push
push
push
pop
pop
xor
cli
ret
js
out
bound
rorb
imul
in
test
dec
imul
add
les
mov
repnz
nop
test
sbb
insl
into
in
sbb
dec
add
shl
add
popa
sti
out
fadd
add
push
je
mov
mov
add
dec
sbb
sbb
jo
fst
xchg
lock
cmp
pop
stc
shlb
pop
xor
loope
add
and
push
shll
lods
fsubrl
push
les
xor
or
xlat
pop
mov
sub
xor
mov
xlat
dec
inc
or
adcb
jge
mov
inc
push
jno
jle
aaa
and
add
out
int
movsl
push
pop
stos
fists
sub
mov
push
add
in
iret
mov
rcr
sub
push
rorl
outsl
lds
lcall
mov
cmpsl
les
pop
cmpb
mov
test
rcll
dec
in
sub
jne
das
test
ret
fiaddl
pop
aaa
or
add
rclb
pop
aas
shll
or
fldenv
push
rolb
or
jg
nop
cmp
xchg
imul
cmp
test
mov
ds
inc
negl
sub
imul
push
mov
mov
imul
lea
pusha
push
aaa
scas
insl
xlat
adc
xchg
adc
adc
mov
into
mov
or
or
insl
jmp
orb
xchg
lcall
in
aam
push
add
xor
xor
cwtl
cld
and
in
aam
shlb
mov
fcomps
push
mov
lret
outsl
inc
mov
add
sarb
adc
pop
les
or
movsb
lods
nop
mov
or
ror
cmp
aaa
rorl
dec
movsl
les
or
inc
add
ss
adc
push
xor
fadd
add
mov
push
xchg
add
push
cmp
daa
push
pop
pop
sbb
jl
adc
mov
mov
xor
or
or
test
fcomps
pop
pusha
fstpt
mov
cli
adc
aas
add
xchg
inc
xor
addb
xor
adc
lods
lds
lcall
aam
inc
cwtl
xor
xchg
jl
mov
notl
cmp
loopne
mov
pop
adc
lock
add
mov
cmp
je
adc
sbb
jne
and
xor
dec
mov
leave
push
inc
inc
test
in
add
dec
lods
fistpl
aam
and
jmp
cmp
js
rclb
push
jle
les
mov
xchg
sbb
xchg
mov
icebp
mov
movsb
or
xor
add
arpl
xchg
and
add
pop
ja
fsubs
test
jecxz
movsl
scas
or
sub
loop
bound
pop
inc
cltd
shr
daa
stos
ds
dec
jne
sub
mov
cmp
faddl
es
aam
imul
cmp
outsb
lea
xor
shrl
ret
adc
pusha
stos
xor
sbb
adc
add
push
push
sbb
in
lea
mov
lahf
and
xchg
cmp
lcall
jb
mov
add
dec
xor
pop
pop
add
xchg
mov
xchg
mov
pushf
cwtl
xchg
nop
test
loopne
mov
and
dec
popa
jns
jne
add
mov
cwtl
xor
enter
adc
adc
jbe
push
xchg
insb
sub
loopne
adc
mov
int
xchg
add
faddl
gs
sub
xorb
insb
dec
sbb
or
sub
inc
fmuls
inc
dec
push
inc
sub
testl
add
jb
nop
and
test
or
test
adc
rorl
jp
fiadds
add
imul
notl
cmp
mov
mov
cmp
dec
lcall
ja
es
push
push
or
aam
andl
lock
ljmp
push
repnz
dec
and
push
test
jmp
fs
mov
xor
sti
daa
fnstenv
inc
add
add
dec
push
mov
mov
jecxz
les
inc
fcoml
popa
xor
pop
pop
repz
lret
sub
test
push
mov
mov
push
mov
movsl
out
mov
push
fucomp
xchg
addr16
gs
jg
mov
lds
sbb
jae
push
add
mov
int3
dec
mov
test
loopne
repz
je
inc
and
push
clc
ss
lcall
push
mov
xchg
hlt
nop
xor
call
add
jno
pusha
mov
ficoms
mov
roll
adc
push
mov
mov
test
adc
cwtl
and
ret
js
scas
dec
enter
es
faddl
pop
clc
fsubl
in
loopne
add
daa
push
push
cmp
pop
sbb
ret
cmp
dec
sbb
loope
test
jne
xor
in
sbb
push
das
cwtl
sub
icebp
adc
out
xor
sbb
inc
lcall
add
xor
nop
add
fs
aad
pop
adc
gs
push
add
les
add
sahf
pop
add
inc
or
incl
xor
pop
or
ja
andl
pusha
sbb
loop
inc
sbb
mov
test
jmp
add
mov
sbbb
imul
inc
push
sbb
dec
mov
js
in
jl
mov
pop
fbld
cwtl
sub
fdivs
data16
dec
pop
add
ret
test
fimuls
icebp
cs
dec
mov
out
and
mov
mov
and
and
rol
sbb
inc
in
je
dec
out
test
mov
add
pop
mov
js
enter
aas
shld
daa
add
xchg
add
xchg
adc
sub
push
cs
sub
mov
sub
fdivl
jae
and
movsb
test
sub
jne
mov
xchg
pop
pusha
add
mov
mov
push
mov
je
push
push
xchg
pop
enter
sbb
sub
popw
sbb
mov
xchg
sbb
or
mov
lret
push
nop
das
sahf
mov
incl
test
xor
inc
or
inc
xor
dec
imul
repnz
inc
mov
sub
add
add
dec
aam
icebp
or
push
push
xor
inc
sbb
adc
dec
enter
popf
scas
or
rolb
xor
fdivr
lock
jmp
sbb
mov
xor
sub
nop
addb
pop
lock
in
data16
jbe
xchg
sbb
scas
add
inc
inc
pop
pop
aam
or
xchg
inc
inc
stos
int
pmaxub
inc
cs
inc
inc
inc
lret
in
adc
xor
inc
inc
push
jg
lret
inc
inc
repz
loopne
bound
inc
inc
subb
inc
push
loope
pop
jle
inc
inc
inc
mov
inc
inc
inc
cs
test
into
cmc
sbb
inc
cmp
add
inc
adc
clc
cmp
arpl
adc
or
xchg
faddl
mov
pop
cmp
push
in
xchg
jg
or
cmp
or
sbb
fisubs
mov
or
push
pop
push
std
ja
add
pop
xchg
or
and
inc
add
push
addb
mov
adc
test
ret
adc
insl
or
inc
pop
push
sbb
cmc
mov
mov
mov
and
sub
xor
and
dec
sub
mov
ret
pop
test
sti
test
fmull
daa
in
push
mov
inc
inc
jg,pt
jmp
fwait
test
mov
cmpb
sbb
inc
or
inc
inc
repz
sub
in
lock
jne
sbb
mov
mov
mov
dec
add
cmp
sbb
fdivrl
push
jp
scas
lea
adcl
test
shrb
out
xor
lret
aad
rcrl
push
into
cmpsl
movsl
pop
mov
cmc
mov
mov
enter
dec
jne
xor
hlt
mov
sahf
outsl
mov
mov
jmp
and
add
cmp
in
adc
adc
js
or
loopne
mov
push
mov
scas
sub
data16
sbb
push
arpl
xor
in
adc
nop
xchg
dec
add
sbb
mov
mov
mov
and
lcall
pop
test
leave
pushf
dec
mov
push
fnstenv
push
push
inc
scas
adc
and
pusha
inc
test
xchg
sbb
mov
jge
adc
or
adc
cli
push
add
jbe
xchg
imul
roll
mov
push
cmp
sub
dec
fsubl
fisubl
jo
fdivrl
mov
mov
push
adc
movsl
movsl
lock
add
inc
js
xchg
scas
inc
in
xlat
push
adc
mov
or
or
xor
mov
push
xlat
cli
test
mov
pop
cmp
scas
xor
mov
daa
iret
inc
and
or
xor
pushf
les
or
sbb
jno
incb
or
ljmp
add
inc
sbb
cs
insl
xor
sbb
add
fwait
rcrb
sub
sbb
not
sbb
daa
lea
cmp
addr16
jbe
ret
popa
loope
mov
xor
mov
in
mov
jo
sbb
xchg
bound
pop
jmp
adc
mov
pop
stos
orb
loop
leave
fwait
pushf
xorb
push
sub
mov
jo
dec
adc
pop
inc
mov
rcrb
or
jmp
add
or
push
loopne
jl
mov
shlb
sub
imul
loopne
mov
adc
and
outsl
movsl
lea
enter
movb
cmp
xchg
mov
movb
xchg
nop
mov
jmp
inc
pop
mov
xchg
int
pop
lods
mov
sar
sar
sub
pop
das
mov
ficompl
movsl
testb
or
in
or
test
sbb
ds
xchg
xchg
mov
mov
xchg
lds
jge
imul
pushl
clc
fwait
rorb
shrl
adc
pop
pop
mov
scas
popa
mov
sub
es
mov
rcrb
movsl
shrl
test
adcl
add
test
push
sbb
push
test
test
push
xor
jno
adc
addb
nop
adc
pusha
out
push
movb
adcl
loopne
push
adc
push
lret
mov
call
loop
movsl
nop
aaa
push
shll
push
mov
mov
aaa
adc
inc
mov
out
popa
stos
cmp
push
jbe
mov
nop
lret
or
in
fistpll
dec
adc
mov
enter
dec
mov
jns
mov
sbb
outsb
and
xchg
inc
sbbl
jo
fldl
push
jno
gs
pop
pop
mov
cmpsl
cmp
or
inc
gs
cmpsl
push
xor
inc
or
pop
testl
into
inc
fidivs
mov
ret
or
dec
xchg
inc
jae
mov
imul
rolb
push
push
stos
jo
jns
xlat
push
mov
jo
dec
push
push
push
dec
push
pushf
sbb
test
mull
outsb
repnz
jo
mov
xchg
lods
cmp
jae
jns
add
out
push
push
jp
out
lahf
dec
sub
je
sarl
imul
ja
scas
dec
clc
ficoms
or
inc
and
jge
xchg
out
fistl
mov
adc
sti
js
xchg
arpl
addr16
lret
jae
ffree
adc
call
stos
push
stos
imul
loopne
push
push
add
fucomip
mov
mov
addr16
sbb
shll
xchg
dec
das
sbb
dec
orl
dec
adc
dec
pop
mov
sbb
lahf
push
sti
push
sbb
pop
inc
mov
testl
mov
or
xlat
outsl
pop
inc
lret
push
sbb
shlb
pop
xor
pop
inc
jp
dec
adc
outsl
jo
adc
fwait
outsl
push
mov
dec
sti
arpl
iret
adc
mov
arpl
mov
mov
inc
insb
orb
cmp
inc
divb
scas
mov
sahf
insb
xchg
scas
push
mov
add
inc
sbb
jecxz
mov
xor
jne
nopl
cmpsb
test
or
push
clc
push
and
lahf
gs
dec
imul
mov
mov
pop
daa
adc
mov
aaa
daa
sbb
sbb
inc
mov
inc
dec
xchg
pop
adc
popa
sub
cmpsl
icebp
mov
outsl
sub
gs
imul
bsf
imul
push
test
lahf
and
sub
push
notl
fldl
repnz
fsubs
inc
bound
mul
inc
and
fcomps
lahf
pop
xor
lea
push
aas
push
push
mov
mov
insl
sub
adc
adc
sub
pop
aaa
push
insb
andb
inc
adc
sub
push
dec
pusha
add
mov
addr16
push
sbb
jp
or
push
or
pop
jo
test
fsubs
push
filds
loope
ja
das
dec
mov
pusha
add
arpl
push
dec
daa
push
adc
js
outsl
mov
lahf
ja
lea
in
dec
outsb
push
dec
subl
add
xor
lods
pop
dec
pinsrw
movsb
cmpsl
dec
or
push
push
outsl
mov
push
mov
jg
insl
dec
inc
mov
ret
addb
add
divl
inc
lods
stos
test
xor
cmpsl
jmp
push
dec
push
mov
incl
pop
in
adc
outsb
lret
les
ljmp
push
or
sbb
pop
movl
push
popa
ret
popa
icebp
imul
je
push
inc
ja
movsb
push
sbb
aas
push
inc
lea
jns
push
ljmp
outsl
loop
sbb
pop
pop
xchg
roll
movsl
or
es
pop
cmpsl
adc
pop
shll
es
stos
mov
movzwl
xor
adc
add
jno
aas
pop
scas
adc
loopne
pusha
and
iret
push
sbbl
aas
or
sub
adc
inc
sbb
mov
push
imul
or
movsl
push
ljmp
popa
mov
filds
lock
adcl
add
or
push
cmp
lahf
xlat
int3
mov
imul
lds
dec
or
pop
inc
insl
dec
sub
pushf
or
mov
pop
adc
push
or
out
stos
imul
add
mov
push
out
call
repz
rclb
mov
out
addr16
adc
addr16
daa
inc
mov
jae
mov
jne
mov
aaa
mov
add
and
nop
cld
sub
dec
and
mov
xor
fsubr
andl
pop
jno
out
jp
jmp
nop
mov
cwtl
iret
pop
cmp
movsb
pop
push
shlb
inc
push
sahf
testl
xchg
adcl
pusha
fadds
pop
inc
pop
pop
xchg
andl
jb
xchg
pop
cmp
inc
add
enter
dec
push
ljmp
ja
fldt
pop
dec
ficomps
or
push
push
ffree
adc
adc
dec
enter
pop
mov
daa
jne
push
ret
jbe
shrl
pop
aad
icebp
sub
xchg
add
mov
nop
dec
enter
or
xchg
divl
call
rolb
push
sbb
fwait
pop
adc
sbb
adc
or
push
cmpsb
xor
ljmp
add
fstl
fsubs
jo
rolb
mull
inc
dec
or
dec
mov
je
loop
je
cmp
xor
xor
adcl
or
mov
adc
and
xor
sbb
test
add
push
imul
inc
imul
lret
mov
movl
cmpb
cmp
xor
push
movsb
lds
aas
ror
sti
fwait
les
fcmovnu
or
pop
imul
pop
push
push
inc
sub
add
or
shr
dec
test
scas
test
fldcw
mov
nop
das
lods
push
aaa
inc
and
ja
mov
imul
push
je
mov
fisubs
movntps
ret
and
jae
push
fs
push
sbb
and
scas
adc
fidivrl
xlat
adc
push
fsubl
fwait
push
xor
rcl
cmp
adc
ja
push
adc
xchg
scas
frstor
sti
sub
pop
ss
adc
adc
cltd
mov
cmp
pop
psubsw
mov
xlat
xor
jbe
adc
daa
dec
xchg
sbb
aas
pop
icebp
or
mov
clc
mov
and
push
dec
adc
sbb
and
push
mov
push
pop
leave
add
mov
adc
stos
push
jb
out
cmp
jg
jecxz
aas
sub
mov
enter
sbb
movups
add
sbb
push
jae
movb
pop
sbb
lcall
loope
cmp
mov
ret
mov
loope
xor
cmpl
pushf
mov
inc
inc
sar
int3
adc
xor
mov
out
or
stos
into
xchg
rorl
push
xchg
imul
testl
cmp
inc
mov
lods
inc
lods
xchg
xor
les
pop
mov
daa
loopne
sahf
cmp
fbstp
sarb
icebp
ja
dec
aam
or
xor
dec
movzwl
and
add
leave
ja
arpl
cli
pushf
aam
sahf
jmp
imul
sbb
sbb
push
addb
push
sub
mov
jmp
insb
inc
out
lret
and
rcrl
or
and
adc
xor
roll
sbbl
inc
out
je
pusha
sbb
and
aaa
jo
push
push
sbb
rol
cmp
adc
dec
mov
loope
cli
aas
push
xchg
sub
loop
sub
xchg
add
stc
sbb
xchg
mov
cmp
call
imul
pop
mov
rcrl
push
push
and
mov
ret
je
jne
or
shll
pop
cwtl
or
cmp
mov
sub
mov
push
flds
mov
and
or
fld
inc
mov
xor
or
test
xor
xchg
xchg
test
mov
pop
mov
cmp
clc
add
and
xor
mov
mov
add
or
adc
pop
mov
fnstenv
ficoml
jecxz
dec
push
and
adc
mov
inc
fwait
ret
mov
adc
js
jg
add
cmpsl
add
outsl
or
mov
push
mov
inc
loop
mov
test
test
add
fwait
ret
jmp
scas
fwait
xchg
or
or
add
shl
movsb
inc
das
in
dec
or
out
gs
xor
ret
rorl
xor
sbb
test
push
pop
mov
mov
or
or
dec
aas
ljmp
add
or
push
xor
jle
aaa
mov
cmc
xor
test
add
xlat
push
xor
push
hlt
fsts
add
fs
xor
push
pop
cmpsb
jnp
repnz
push
inc
nopl
xchg
inc
popf
add
and
dec
dec
sbb
dec
dec
cltd
mov
sub
test
movsl
xlat
inc
xchg
add
pop
in
test
movsl
push
pop
movsb
dec
pop
jmp
mov
bound
pop
add
add
pusha
out
jl
aas
and
xor
and
push
mov
and
icebp
pop
cld
call
ds
mov
adc
cmpb
dec
adc
or
add
adc
push
push
add
cmp
pushf
sub
hlt
adc
mov
jecxz
push
stos
shlb
xchg
mov
xchg
fstps
dec
dec
loopne
test
ret
cmp
ds
dec
or
subl
out
ror
lret
adcb
mov
in
sti
or
lret
pop
and
pop
nop
icebp
js
sti
movsb
popl
add
dec
and
xorl
inc
test
test
xchg
pop
in
mov
pop
popa
push
push
or
ja
mov
and
das
mov
sbb
shll
or
fadd
inc
mov
push
clc
sub
pop
hlt
ret
dec
loop
lcall
push
les
fildl
inc
pop
add
push
pop
enter
repz
rorb
adc
pushf
lea
es
sbb
or
dec
dec
push
xchg
movsl
and
in
pop
mov
orb
sub
add
shrb
into
insb
ss
ret
enter
mov
test
sbb
adc
inc
pop
dec
loope
popa
adc
ret
or
adc
dec
cmp
push
inc
cwtl
dec
call
shlb
dec
test
or
and
inc
xchg
test
lret
or
push
das
xor
xchg
push
add
pop
xor
push
or
xchg
dec
push
cmp
cmp
mov
cmp
ret
leave
xor
push
call
mov
mov
lds
xlat
xor
scas
lret
test
adc
mov
xchg
jne
call
lods
mov
push
or
xor
hlt
xorb
xor
add
jbe
fists
jns
or
es
frstor
mov
mov
les
cmp
and
testl
dec
test
inc
xlat
andb
es
insb
inc
ss
sbb
je
push
add
xchg
dec
or
push
nop
xor
pop
xchg
and
inc
repnz
or
fimull
cmpsl
cmp
xchg
mov
sbb
mov
mov
dec
jl
in
xchg
adc
dec
push
sub
cld
inc
repz
xchg
scas
sbb
mov
push
and
mov
dec
mov
add
sbb
push
sub
jno
insl
ss
pop
andb
inc
adc
ss
add
add
sub
js
filds
or
pusha
hlt
inc
mov
ja
push
jl
pop
xor
lea
push
inc
hlt
das
push
lahf
xchg
addr16
cmp
cmp
and
inc
mov
mov
cmp
pop
and
ds
xor
cmp
sub
mov
movsl
in
aaa
pop
xor
inc
sub
cmp
aaa
or
jns,pn
hlt
mov
fisubrl
sbb
mov
iret
fcmovnb
sub
push
pop
lahf
xor
or
loopne
in
mov
adc
push
push
dec
jecxz
dec
fstl
mov
xchg
mov
add
mov
fs
xchg
and
add
es
mov
mov
mov
add
and
jbe
mov
pop
push
incl
pop
rol
pusha
add
loopne
xchg
or
push
imul
jae
and
dec
adc
movsl
add
lcall
xchg
or
push
add
nop
in
jg
add
and
mov
add
inc
or
mov
insb
ss
adc
insb
inc
repnz
int
shl
popf
shl
pop
pop
jae
outsl
test
in
es
das
rcll
scas
call
xchg
mov
sbbb
and
clc
movsb
and
ljmp
or
push
and
lods
sub
lret
sbb
dec
sub
sub
and
fs
mov
subb
dec
or
cmp
sub
inc
pop
jmp
sbb
jmp
addb
add
fs
and
and
call
and
mov
pop
jb
inc
scas
sub
and
jg
andl
mov
mov
lock
lahf
or
push
push
test
add
daa
outsl
inc
jmp
dec
aaa
add
adc
daa
cmp
jecxz
sub
push
lds
adc
sub
sbbb
add
andb
mov
pop
push
dec
or
pop
pop
inc
mov
sbb
dec
jae
jno
pop
lods
jbe
arpl
pop
addr16
ss
sbb
nop
lds
or
cs
loope
mov
ja
or
cmp
mov
inc
hlt
ljmp
mov
dec
orl
aaa
sbb
in
data16
pop
add
js
stc
je
xchg
inc
adc
fs
inc
push
dec
push
mov
pop
pop
lods
cmpsb
es
xor
or
out
call
insb
aaa
push
xor
dec
cmp
xor
mov
pop
lret
imul
mov
pop
test
sub
mov
or
mov
and
icebp
or
and
and
pop
and
and
jl
mov
and
and
dec
in
mov
push
xorl
xchg
arpl
sti
cmp
sbb
dec
insl
or
sbb
ja
insb
insl
mov
imul
fsts
popa
js
mov
add
shl
es
push
daa
jle
cmpsb
icebp
cmp
xchg
pop
aaa
adc
inc
movsb
mov
push
dec
sbb
cwtl
mov
add
dec
daa
and
test
in
fidivl
scas
lock
add
xchg
mov
fdivs
pusha
mov
mov
addb
aam
bound
jmp
loop
pop
xor
or
ret
js
xchg
mov
scas
fnstsw
dec
leave
subb
cmpsl
fildl
test
stc
test
jbe
shlb
fwait
mov
push
push
lock
in
add
dec
lock
pop
push
mov
roll
xlat
incl
xchg
pushf
in
imul
stos
pop
push
andb
inc
cs
adc
push
jmp
mov
adc
sub
test
insl
add
fnstcw
mov
ljmp
int
das
imulb
es
aas
pop
cmovne
ds
test
sbb
or
dec
outsb
inc
and
and
aam
xchg
pop
sub
jmp
adc
ficompl
push
insl
dec
les
and
add
and
adc
imul
fisubrs
adc
or
lret
dec
mov
xor
sahf
call
pop
push
sub
or
es
push
stos
jno
addb
loope
call
cmp
bound
add
sub
or
cmp
sub
adc
or
push
mov
inc
and
sub
dec
sbb
int3
lcall
movsl
sbb
out
mov
das
mov
arpl
addr16
sub
dec
dec
sub
push
add
shl
int
cli
xor
and
push
or
jle
outsl
push
xlat
adc
add
inc
add
repnz
or
xchg
adc
cs
ds
pop
xchg
sub
dec
add
sub
fmuls
adc
xor
fisubs
jp
adc
sahf
xchg
mov
or
dec
sub
pop
add
mov
mov
aam
push
pop
outsb
pop
in
scas
or
pop
adc
or
adc
mov
repnz
push
or
add
stos
lods
sbbl
cs
xor
cmp
adc
ret
adc
arpl
jo
sub
and
and
jo
out
mov
push
fwait
jge
cld
pop
cmpb
and
shlb
addr16
sub
dec
insb
sbb
mov
or
adc
addl
adc
in
ret
xchg
mov
adc
jg
jno
mov
add
imull
and
nop
inc
scas
push
out
pop
mov
sbb
and
cmp
sbb
xchg
mov
lcall
cltd
inc
rclb
adc
or
imul
ljmp
ret
and
lret
lds
test
xchg
dec
je
ja
mov
sbb
fadds
push
mov
xchg
add
jnp
or
sbb
mov
int3
mov
or
loopne
push
push
rcr
fistps
mov
inc
insl
lds
test
fildl
cs
adc
sub
cmc
push
pusha
dec
mov
scas
fcomi
cmpsl
sbb
jae
test
add
or
and
cmp
xor
adc
mov
adc
cltd
jmp
shll
mov
or
es
fcmovnb
xor
add
or
xchg
mov
adc
mov
arpl
inc
sub
add
sub
mov
push
add
and
inc
sahf
push
ds
add
add
imul
cmp
jno
mov
lods
jp
add
cmpsl
repnz
xor
jo
add
or
dec
ret
outsb
push
lahf
mov
int
repz
je
arpl
das
xchg
push
adc
push
xor
push
jno
es
cmpl
imul
or
pop
repnz
or
outsl
test
xor
in
and
sub
sbb
and
xchg
sub
push
lea
je
inc
cmp
xchg
fmull
pop
mov
xor
xchg
jo
subl
xor
adc
lret
push
mov
sub
sub
out
mov
pop
fimuls
imul
pop
adc
pop
cmc
and
jae
rol
lea
pusha
or
or
sysret
fildl
jmp
push
dec
enter
shlb
dec
mov
mov
mov
sub
fiaddl
mov
mov
inc
mov
inc
test
xchg
outsl
mov
cs
mov
shl
cli
mov
or
fists
xor
xor
and
repnz
mov
in
or
aam
dec
and
xor
sub
idivb
xor
push
cmp
push
pop
cmp
xor
inc
mov
or
mov
mov
dec
lock
imul
fbstp
and
lock
pop
shlb
stos
cmpsl
sarb
iret
int3
mov
in
push
dec
enter
dec
add
cmpsl
sarb
lahf
fadd
test
dec
loope
fisttps
or
loop
xor
mov
or
fidivl
insb
push
clc
ret
mov
call
adc
push
push
in
xchg
push
out
or
les
push
pop
jne
bound
ljmp
sahf
out
push
int3
les
xor
add
add
arpl
test
add
ja
les
cmpsl
xor
mov
jne
std
sub
cltd
push
out
push
mov
cmp
and
pop
mov
inc
pushf
sub
jb
pop
jb
shll
mov
add
mov
lahf
add
and
stos
mov
dec
in
add
mov
cmp
mov
mov
mov
push
dec
call
adc
xchg
add
aaa
jae
cmp
mov
mov
push
cmc
mov
addl
adc
imul
mov
mov
and
and
es
in
sar
xchg
sub
push
cmp
test
movsl
adc
or
lret
and
rcrb
iret
sub
aam
sbb
nop
test
sub
xor
jns
inc
push
loop
mov
lods
pop
loopne
adc
notb
xchg
and
rorb
pop
ret
bound
jb
pop
mov
in
lock
xor
testb
insl
xchg
xor
loop
js
test
add
fistpl
fcmovne
leave
push
adc
add
sbb
xlat
xorl
add
and
add
imul
fistl
xchg
add
sub
or
sbb
rclb
test
or
adc
test
clc
and
inc
add
mov
in
fisttpl
mov
mov
pop
push
add
mov
gs
sbb
xchg
cli
jae
adc
mov
out
out
dec
mov
mov
loope
xchg
fisttpll
sti
xor
sub
inc
pop
push
and
or
cmp
push
mov
jo
test
test
sbb
cmpsb
je
dec
clc
fadd
imul
rcll
mov
or
int3
push
mov
ja
mov
add
call
xor
lock
fisttpl
cmpsb
test
sbb
sbb
ret
sbb
leave
cmp
xlat
cli
inc
add
loope
ds
push
cli
notb
loopne
mov
das
dec
aas
dec
lret
insb
arpl
and
jbe
ss
lcall
inc
inc
punpckhwd
mov
insl
sti
in
leave
ljmp
inc
setae
clc
inc
fistpll
adc
js
mov
repnz
xchg
inc
add
stos
cs
das
cmp
ljmp
cli
call
mov
addb
push
sbb
loop
adc
pop
loopne
jle
jae
add
adc
add
add
add
adc
push
mov
adc
sbb
xor
add
add
movsb
or
mov
mov
clc
sub
out
test
dec
mov
mov
mov
mov
mov
ljmp
dec
lods
ljmp
test
jmp
addb
adc
inc
push
out
sbb
shlb
fisubrl
push
fistpll
out
out
or
mov
es
or
sahf
cmpsl
stc
xor
sub
pop
je
lcall
fmuls
clc
xor
jge
negb
push
add
int3
sub
imul
push
test
push
cld
mov
cld
data16
cwtl
lds
aam
hlt
ds
fiadds
clc
sbb
out
cld
jmp
repz
repz
xor
mov
rcrb
adc
mov
jmp
dec
repz
outsb
jmp
jmp
andb
mov
imul
xchg
lods
inc
nop
enter
int
dec
lock
push
pop
mov
mov
dec
lea
ss
add
or
pop
dec
imul
adcb
inc
pusha
shlb
add
cli
inc
jne
insl
jns
scas
dec
sbb
mov
and
sub
dec
push
je
adc
stc
or
aad
xor
and
test
nop
xchg
push
loopne
jge
dec
xchg
cmp
inc
xchg
and
add
push
push
test
and
mov
cmp
rcll
leave
push
sub
pusha
xor
inc
repz
add
lahf
sub
call
xchg
jne
sbb
paddd
movsb
lcall
outsl
xor
push
cmpsb
sub
push
cltd
inc
lock
mov
sub
jns
clc
mov
lods
leave
lods
pop
dec
call
or
and
test
or
out
sbb
xorl
pop
test
cmovg
adc
movsb
cmp
lods
sbb
cmp
sbb
xchg
or
pop
out
jmp
push
jl
rcrb
push
test
xlat
adc
jp
or
mov
add
lods
orl
dec
sbb
mov
shr
cmp
add
cmp
lret
sub
or
iret
and
mov
loopne
adc
mov
movsl
add
xchg
rcrl
je
mov
sbbl
jmp
xchg
imul
xchg
popa
out
lods
xchg
push
addr16
scas
pop
add
lods
add
lock
mov
mov
adc
hlt
mov
cmp
adc
adc
sbb
mov
in
lods
xchg
out
xlat
or
enter
jno
mov
in
enter
inc
cmp
enter
test
enter
xor
enter
movsb
leave
out
pop
movsb
lret
in
mov
sbb
mov
fdivrs
sub
dec
inc
sbb
rorb
xor
sub
rcll
pop
test
out
lret
imul
adc
jge
push
adc
mov
test
push
data16
or
jne
es
add
daa
mov
fistpl
popa
push
xchg
sbb
or
adc
jmp
push
sbb
test
dec
fdivr
push
dec
out
sbb
inc
outsl
incl
sub
mov
xchg
call
xchg
shl
movsl
and
mov
mov
push
sarl
int
ficoml
dec
mov
xchg
push
jmp
cmpsb
pop
cmpsl
ror
pushl
sub
pushf
pop
out
inc
adc
int
pop
inc
or
outsb
push
out
jmp
aam
adc
adc
xchg
sub
xor
sti
sbb
movsl
xor
push
xorb
pop
pop
cmp
stos
jle
dec
mov
mov
inc
enter
dec
mov
or
add
mov
enter
adc
pop
sub
mov
push
sub
xor
dec
adc
loop
out
fwait
ret
xchg
test
jo
dec
push
adc
pusha
mov
push
dec
cmp
pop
cmc
sahf
sahf
jecxz
inc
sub
or
jne
xor
movsb
xchg
rclb
jo
mov
and
dec
mov
adc
sub
add
enter
and
adc
pop
push
sbb
xchg
adc
lds
sub
cltd
pop
pop
or
loope
push
add
add
add
nop
or
out
je
jae
cmp
movsb
or
sbb
cmp
dec
xor
nop
mov
xchg
or
inc
enter
pusha
pop
dec
or
test
sbb
sub
es
dec
add
inc
xor
pop
popf
adc
adc
jmp
inc
and
cmpsl
add
mov
fsubl
scas
and
repnz
mov
push
imul
in
jl
adc
add
loope
xchg
and
adc
es
es
push
adc
dec
jo
adc
push
adc
push
sub
or
or
dec
adcb
sub
mov
add
xchg
sub
nop
or
inc
sub
rorl
cs
mov
cmp
das
jno
sbb
fs
into
adc
pop
or
push
xchg
add
call
ds
lcall
cmp
or
testb
and
dec
xor
xor
std
xor
in
xchg
add
xor
les
ror
cmp
imul
sarl
inc
fisubl
xor
add
cmp
sub
adc
cmp
mov
cmp
mov
dec
cmp
adcl
mov
ja
cmp
and
mov
mov
fimuls
cmp
pop
push
shll
or
inc
xchg
lds
imul
add
in
push
cmp
dec
adc
sbb
orb
xor
inc
push
dec
sbb
or
mov
inc
xor
adc
mov
jecxz
pop
stos
je
and
jnp
or
test
fistpl
sub
enter
addr16
jo
sbb
pop
mov
jmp
sbb
pop
dec
lock
les
cmp
sbb
mov
das
inc
push
sbb
push
stc
push
or
mov
dec
dec
mov
jne
push
inc
iret
inc
or
or
clc
or
and
cli
mov
dec
add
mov
fucom
dec
cs
xor
sti
dec
add
in
inc
push
cmp
mov
cwtl
add
test
jmp
inc
add
rcll
dec
aaa
jo
mov
jbe
push
filds
jb
in
add
clc
push
sbb
sbb
xorb
mov
pop
loope
push
push
mov
pop
dec
push
andl
leave
add
cmp
and
mov
call
sbb
adc
add
pop
mov
cwtd
incl
xchg
pop
inc
mov
or
push
loope
or
pop
sbb
pop
sbb
pushf
inc
and
cmc
push
or
pop
pop
jae
inc
fstl
sbb
andb
jns
pop
push
push
push
call
sbb
fdivrl
sbbl
pop
add
add
adc
popa
fs
cmc
loopne
adcb
adc
movsb
sbb
mov
xor
scas
popf
or
push
push
mov
scas
dec
sbb
or
rclb
push
aaa
js
xchg
imul
fsubl
add
pop
push
xchg
sub
sbb
insb
std
test
push
inc
pop
aad
and
shrl
push
imul
pop
stc
lret
pop
lahf
or
in
enter
dec
ret
dec
enter
das
pop
jnp
enter
ret
out
dec
xor
enter
jp
enter
out
dec
inc
push
mov
enter
dec
insb
mov
enter
shl
sbb
enter
pop
xchg
lret
in
or
xor
pop
xchg
enter
inc
gs
xchg
enter
cmp
in
enter
in
sbb
enter
imul
add
sub
enter
in
enter
push
das
push
js
enter
in
push
enter
sub
fwait
enter
shr
push
xor
pop
subb
negb
pop
ds
outsb
push
sbb
test
dec
enter
xchg
int3
push
addr16
and
push
pop
pop
dec
mov
inc
add
add
fadds
mov
fbstp
adc
test
pop
cmpb
dec
adcl
add
jmp
adc
pop
scas
push
lock
test
inc
jne
pop
sbb
add
add
mov
imul
movsl
lock
sub
adc
les
mov
push
in
imul
sbb
cmp
jb
out
movsb
push
setge
insl
mov
mov
push
iret
cmp
pop
lret
and
sub
pop
scas
adc
push
pop
mov
cltd
into
or
add
pop
mov
leave
push
or
add
aas
add
out
inc
mov
xchg
add
shlb
push
aas
and
dec
inc
dec
jb
loop
and
lret
mov
sbb
pop
sbb
sbb
xor
pop
xor
xor
rcll
cmp
clc
pop
popa
iret
sub
mov
dec
pop
mov
adc
or
pop
lock
or
inc
mov
nop
add
xor
sti
inc
stos
cmpb
mov
dec
lock
inc
sbb
or
popa
rcrb
out
push
dec
mov
dec
sbb
add
jne
xor
or
pop
movsb
mov
pusha
fdivl
data16
das
fsts
dec
or
data16
jmp
add
dec
cmpsl
mov
aam
movl
cmp
mov
insl
cmpsb
sbbb
bound
shll
push
bound
test
les
xchg
push
bound
scas
inc
xor
orb
fs
sbb
and
push
pop
adc
repnz
and
call
dec
insl
cmp
xchg
addr16
push
repnz
cs
ret
dec
bound
and
imulb
or
xchg
or
das
mov
popa
shll
xor
or
sbb
sbbb
push
pop
lods
in
add
insl
aam
leave
cmp
push
jb
insb
adc
jns
jo
adc
loope
je
sti
das
mov
js
add
mov
cmp
stos
and
add
sub
and
dec
sub
mov
das
mov
nop
add
cmp
xchg
sbb
dec
loopne
cwtl
lods
imul
mov
and
popa
repnz
mov
test
pop
in
add
jno
pop
lods
outsl
sub
in
gs
frstpm(287
dec
cmp
push
leave
enter
outsl
xchg
nop
dec
jg
pop
push
sbb
inc
repnz
shlb
sub
pop
leave
aas
and
inc
sub
call
push
inc
jl
sub
push
push
add
inc
aad
in
and
xchg
shll
or
subb
sahf
mov
sysexit
insl
test
outsb
stos
xor
adc
pop
dec
lcall
and
lret
mov
sub
popa
xchg
add
add
cmp
dec
icebp
push
and
sbb
sub
test
and
repnz
test
pop
imul
enter
jb
sbb
imul
sub
xor
xor
mov
xor
adc
xor
xor
jge
ret
out
xor
push
insl
sub
cmp
xor
sahf
out
outsb
lods
inc
cmp
fwait
pop
lret
add
movzwl
mov
push
adc
roll
pop
imul
setae
jb
add
jmp
dec
mov
dec
push
loope
daa
lock
or
jne
ficoml
add
bound
in
jmp
in
dec
stos
pusha
aad
adc
iret
add
lods
jb
sub
fisttpl
fwait
sbb
cmp
shll
pushf
cwtl
popf
enter
sbb
dec
stos
js
popa
int3
or
fwait
andb
push
andl
sbb
add
mov
enter
push
popa
dec
jbe
xor
or
movsb
in
inc
addb
xchg
cmp
inc
test
xchg
cmpsl
pop
xchg
inc
mov
xchg
cmp
push
lods
dec
mov
es
test
xor
and
xlat
adc
lret
xchg
mov
mov
sub
push
test
mov
sete
mov
rolb
jo
xor
mov
lds
and
call
les
cmp
sub
je
loopne
push
inc
add
push
mov
add
outsl
mov
xor
mov
es
mov
faddl
xor
test
sub
sub
ret
call
adc
rorl
adc
outsl
cmpsb
or
pop
xchg
dec
lret
in
lret
pop
nop
inc
sub
add
xchg
mov
insb
adc
pusha
pop
imul
mov
dec
inc
pop
or
lret
inc
negb
inc
inc
pushf
test
movl
setae
jmp
adc
lahf
cmp
jne
jo
ficompl
dec
pop
dec
jge
adc
outsb
notb
leave
push
mov
rorb
ja
inc
leave
push
testl
insl
xchg
pop
push
push
push
sbb
sub
dec
addl
xchg
xor
add
adc
dec
sub
lds
adc
inc
sub
leave
dec
mov
mov
fldenv
lods
adc
and
sbb
add
sub
add
mov
insb
or
sbb
cltd
or
adc
movsl
aas
mov
pop
mov
add
pushl
adc
push
xchg
rolb
faddl
popf
addr16
add
mov
test
adc
jp
lcall
xlat
adcl
frstor
leave
and
in
jge
jmp
push
mov
add
out
or
ja
fcomps
sub
sub
xchg
imulb
mov
xor
add
dec
cmp
imul
movsl
inc
mov
out
adc
inc
ret
jp
xor
or
push
movsb
bound
int
sbb
pusha
and
add
or
add
aad
scas
adc
adc
push
inc
pop
pop
in
dec
mov
push
arpl
mov
sahf
mov
push
movsb
lea
jbe
sbb
comiss
dec
insl
xchg
xchg
arpl
popa
xor
js
xchg
xchg
fcmovnbe
lods
or
pop
or
jo
inc
popa
imul
test
mov
aaa
mov
mov
test
scas
mov
cmpsl
nop
push
add
adc
ret
xor
xchg
xchg
das
fst
or
jns
pusha
movsl
int
pushf
or
movsb
cmp
cwtl
movsb
aas
movsb
popa
ret
inc
stc
movsl
sbb
outsb
add
push
mov
pop
jae
fwait
sub
loope
orb
inc
insl
or
xlat
jp
dec
push
sti
xor
ret
mov
dec
arpl
sti
imul
sbb
xorl
lds
mov
push
lret
mov
ret
popa
gs
scas
add
les
ror
pop
sub
test
xchg
icebp
xchg
adc
mov
mov
push
and
xchg
cmp
roll
cmp
xchg
jo
push
les
jae
rol
scas
pop
rorl
or
cltd
xor
dec
mov
xor
call
dec
fs
jne
in
push
add
xchg
rcll
jo
gs
dec
fwait
adc
not
loopne
sbb
mov
call
xchg
sahf
pop
inc
test
popf
cs
clc
pushf
adc
mov
dec
xchg
sti
inc
mov
xchg
inc
jbe
inc
rcrb
add
adc
neg
xchg
jmp
ret
nop
xor
add
cld
fistl
add
and
loope
jo
xor
dec
leave
or
lcall
dec
mov
mov
addr16
sub
jae
add
movsb
sub
sub
fbld
lds
pop
pop
ret
xor
int
fisttps
leave
jo
je
pop
js
leave
cli
js
popa
mov
insl
adc
js
clc
outsb
and
xchg
add
lret
pop
shlb
jl
daa
daa
mov
jae
xchg
xchg
xchg
jge
lcall
jle
je
daa
mov
leave
cli
xor
shld
xchg
xchg
xchg
daa
pop
sbbb
enter
out
cmpl
push
in
in
andb
jb
repnz
sbb
jns
lret
ss
shlb
cmp
cmp
loope
test
add
loope
adc
pop
imul
lds
scas
sbbb
add
call
jg
inc
arpl
push
rorl
mov
enter
inc
cmp
inc
mov
and
and
and
mov
xchg
rclb
rcl
push
fcmovnb
xorl
in
push
mov
sarb
and
rcrl
adcl
and
dec
in
cmp
and
add
push
rorb
or
aaa
xchg
xor
insl
dec
pop
mov
and
fadds
call
mov
sarl
mov
cs
cltd
fisttps
sbb
or
pop
pusha
add
mov
sbb
mov
adc
movsb
jge
jnp
add
dec
pusha
inc
pusha
dec
loope
dec
fsubs
adc
jecxz
adc
dec
jne
jo
outsb
xchg
mov
mov
rcrb
fnsave
roll
jne
dec
ja
lds
pop
pop
sti
rcll
pop
popa
sub
pusha
push
cmovg
push
mov
inc
dec
pop
xor
adc
add
call
ret
adc
je
sbb
movl
sbb
outsb
mov
lods
xchg
cmpsb
mov
mov
test
je
sbb
enter
popa
add
push
push
mov
in
dec
subl
add
push
inc
pusha
cmp
aaa
inc
lock
jge
adc
jecxz
pop
xor
pop
adc
and
into
in
jno
popf
jae
mov
mov
lods
pop
movaps
mov
mov
and
mov
jne
out
inc
pop
inc
ja
dec
inc
nop
adc
ret
push
loopne
data16
push
push
xor
adc
add
mov
push
xor
mov
scas
mov
inc
dec
bound
or
add
pop
cli
repz
mov
add
push
outsb
push
not
sbb
mov
lcall
fldl
rcr
in
inc
dec
adcb
iret
sbb
push
sub
bound
sub
push
xor
cmp
insb
push
xor
inc
inc
bound
push
cs
add
aad
adc
pusha
les
gs
xorl
cmp
xor
push
arpl
in
fildl
xchg
fs
enter
in
and
fs
sar
and
fs
data16
mov
loopne
mov
fs
in
fs
or
cmp
in
fs
fs
lea
fs
cmp
fs
in
sbb
bound
pushf
imul
sub
arpl
insb
jno
sub
adc
out
cmpsb
pop
ret
adc
xor
and
mov
loop
aad
lods
push
repz
in
add
sbb
setae
mov
lock
push
jmp
push
mov
sahf
pop
addb
and
lods
pop
rcr
pusha
lds
pop
loopne
orb
push
leave
push
mov
ret
cmp
push
mov
jbe
in
inc
pop
loope
bound
add
lods
or
sub
mov
fistl
subb
cmc
xchg
jo
sbbb
cmp
jae
movsb
movsb
add
cmp
mov
push
mov
mov
sub
bnd
inc
ret
xchg
outsl
pop
mov
and
sub
sbb
pop
sub
push
mov
scas
xchg
enter
cmpsb
mov
add
sub
test
adc
addr16
addb
pop
or
jne
test
mov
sbb
adcb
aad
and
faddl
pop
xor
adc
adc
outsb
pop
pop
pop
xorl
dec
int3
dec
leave
loopne
sub
call
rorl
ljmp
addb
sub
imul
dec
cmp
clc
leave
mov
stos
mov
movsl
push
adc
cmp
xor
add
jns
outsl
inc
and
in
lret
xchg
mov
dec
sahf
mov
sahf
jg
or
jo
or
repnz
dec
mov
stos
popa
xchg
fwait
lods
add
or
xchg
and
sub
adc
sahf
mov
nop
pusha
inc
sahf
mov
pop
orl
mov
mov
jno
push
or
dec
inc
adc
lcall
lea
movsl
jae
fisttpl
pop
xchg
inc
inc
add
dec
xchg
in
sub
jne
adc
inc
cmc
sbb
ret
leave
xor
js
mov
mov
mov
mov
cmp
mov
sub
pusha
adc
das
scas
jmp
push
out
lcall
enter
mov
daa
mov
adc
cmc
cltd
notb
shr
clc
pushf
or
lods
je
push
scas
imul
jne
cmp
imul
mov
test
xor
and
decl
or
popf
fnstenv
cwtl
in
or
adc
mov
jmp
xor
jmp
sahf
inc
lea
pop
and
dec
mov
insl
imulb
xchg
lcall
imul
fnsave
insl
fldt
mov
pop
inc
or
je
dec
call
sbb
cmp
xchg
xor
mov
adc
and
sub
js
aaa
mov
out
jo
hlt
adc
pop
dec
add
out
adc
lods
adc
jae
hlt
mov
mov
push
sbb
or
nop
lret
out
movb
int
out
dec
add
mov
jo
or
sub
jecxz
icebp
fimuls
jbe
mov
stc
scas
xchg
je
push
clc
pop
pop
mov
inc
sub
mov
xor
mov
or
in
add
lcall
mov
flds
push
jne
je
jl
xor
dec
sub
cmp
push
loopne
pusha
pop
test
cmp
fidivrs
jne
mov
push
popa
sbb
addr16
push
orl
lods
xor
dec
scas
sarb
je
mov
cmpsl
shll
negl
daa
test
or
jns
daa
aam
movsb
push
daa
andb
cld
fadds
mov
cmp
push
xchg
movsb
mov
ljmp
add
sub
xchg
test
lret
iret
jmp
mov
adc
icebp
les
push
imul
cwtl
push
or
outsl
dec
inc
add
dec
sub
subb
rol
xchg
jp
sbb
and
adc
enter
je
gs
mov
lods
popa
insb
es
nop
and
adc
push
ds
jne
dec
lds
ja
mov
in
fidivl
push
and
cmp
aas
pop
xor
loopne
fistl
addl
adc
notb
pop
mov
and
inc
outsl
pop
fsts
jl
xor
dec
pop
insb
or
adc
out
pop
lcall
mov
adc
xchg
add
in
mov
cmpsb
lock
lret
add
dec
jl
adc
add
cmp
ret
daa
sub
xor
adc
inc
adc
xor
int
adc
add
add
rorb
push
add
xchg
pop
mov
ret
std
add
pop
dec
mov
sub
cmp
fnstcw
pop
xchg
js
xchg
pop
jno
scas
and
mov
lret
push
dec
jl
pop
in
xchg
test
je
inc
jecxz
push
pop
int3
lahf
push
add
or
out
gs
mov
adc
cwtl
push
cmp
insb
mov
movsl
gs
andl
sbb
push
mov
roll
jno
mov
sub
or
mov
inc
and
or
add
or
dec
push
mov
mov
inc
add
into
inc
pop
xor
in
imul
xchg
sub
jo
dec
jmp
movsl
stc
push
ret
or
insb
xchg
sub
lock
jne
push
sbb
dec
mov
and
add
lods
jge
push
outsl
jbe
adc
push
adc
push
mov
pop
inc
cwtl
pop
and
or
enter
inc
jmp
xor
aaa
dec
je
xchg
xchg
dec
cld
add
rolb
sub
push
inc
add
cmp
jl
inc
sub
movsb
fisttpl
push
hlt
push
pop
scas
and
push
pop
addr16
dec
roll
fs
jae
inc
inc
pop
roll
pop
dec
dec
dec
lods
jo
cmp
lcall
mov
add
out
scas
in
push
outsl
add
ret
inc
gs
xor
adc
test
in
ret
mov
cmpb
push
cmp
add
sub
pop
sahf
add
orl
jno
inc
and
rclb
fwait
cwtl
cwtl
nop
jge
or
aaa
push
mov
lock
dec
push
test
xchg
shrb
pop
xchg
or
rorb
outsb
mov
test
insb
xor
addr16
xlat
adc
adc
push
mov
pop
adc
mov
cli
fisubs
aad
dec
pusha
adc
mov
xor
and
sub
neg
jmp
pop
jne
je
lret
and
addr16
jno
sbb
inc
test
adc
jmp
cmpsl
adc
push
fmull
push
inc
loopne
sbbb
xchg
pusha
fsubrs
scas
add
out
mov
push
in
inc
inc
les
xor
rorb
aas
adc
shr
jno
hlt
cmp
xor
cmpsl
outsl
adc
and
sbbl
mov
inc
and
adc
enter
or
mov
push
jecxz
sahf
add
jne
pop
pushf
adc
pop
dec
cmp
xchg
pop
js
add
inc
testb
inc
call
inc
or
and
sub
and
add
inc
out
pusha
add
ret
out
dec
inc
pop
stc
jmp
inc
inc
or
roll
dec
adc
jbe
cs
jmp
or
jge
pop
adc
fsubs
sarb
in
cmpb
and
and
xor
xchg
insl
inc
ss
dec
or
mov
sub
push
mov
faddl
and
and
mov
gs
xorl
cmovo
and
mov
fdivs
inc
jmp
lock
mov
es
jl
mov
fwait
aam
adc
dec
jo
fnstenv
icebp
cmp
rolb
outsb
stos
std
aaa
add
and
mov
aas
pop
sub
add
cmpl
adc
pop
mov
int3
lock
out
sbbl
push
sub
pop
jno
std
mov
inc
addr16
gs
adc
inc
push
pop
std
pop
cmp
sbb
adc
repnz
xchg
push
adcl
and
adc
mov
xchg
mov
rol
iret
sub
fimull
into
or
inc
sub
inc
dec
inc
fnstcw
sub
inc
xchg
test
sub
or
or
add
sahf
or
nop
adc
pop
mov
rorb
rorb
das
mov
ja
in
pop
aam
lock
cmpsb
add
je
pop
das
adc
ret
dec
xor
fnstcw
enter
insb
pop
mov
loop
loopne
js
mov
inc
dec
cmpb
fstpt
je
cld
or
xor
setbe
je
pop
nop
add
cmpsl
add
push
xor
js
or
cmp
mov
adc
sbb
movsb
icebp
test
jge
mov
dec
clc
sub
jle
xorl
push
add
cmp
sub
cmpsl
inc
mov
xchg
adc
and
pop
das
jmp
in
lock
lea
and
dec
add
push
jne
sbb
mov
sub
xor
int3
sbbl
and
shlb
xor
sub
sbb
push
sub
pop
fadds
add
add
lea
push
cmp
fistl
fwait
loopne
and
push
pushf
pop
sbb
push
mov
push
mov
push
mov
clc
sbb
sub
movl
cmc
loop
or
fwait
pusha
xchg
ljmp
jmp
cmpsb
imul
or
inc
and
inc
or
stos
fwait
mov
add
mov
mov
dec
adc
lea
adc
insb
push
stos
push
cltd
dec
adc
pop
loope
cli
rorb
xor
fadds
mov
cld
mov
adc
jge
shrb
cmp
ja
mov
outsb
sbb
xchg
sub
aam
adc
xadd
and
fdivl
fisubrl
sub
aaa
inc
add
test
sti
or
adc
xor
in
pushf
sbb
pop
or
mov
out
mov
inc
test
mov
cmc
nop
es
pop
xchg
andl
dec
cmpsl
xorb
dec
sbb
and
mov
test
ror
mov
or
es
xor
addr16
dec
ss
adc
mov
sub
bnd
dec
xlat
lock
add
fnstenv
pop
inc
sub
setb
aaa
out
sub
fldcw
sbb
outsb
xchg
aaa
inc
and
pop
dec
add
lcall
xchg
int3
ss
fldt
sbb
mov
push
pop
adcb
or
mov
xchg
ret
aaa
and
add
popa
mov
negb
popf
mov
add
pop
cmpsb
adc
push
mov
mov
dec
add
mov
sub
imul
add
pop
sub
push
mov
add
or
push
mov
mov
outsb
adc
cmp
dec
add
sub
xor
adc
das
sarl
testb
inc
cmp
pmaxub
push
ficoml
pop
push
outsl
scas
daa
dec
add
sbb
push
xchg
jl
mov
lahf
out
inc
push
adc
add
push
inc
notl
movb
fndisi(8087
mov
push
mov
jg
call
out
and
pop
dec
outsl
mov
and
dec
pusha
jo
and
pusha
sub
or
sbb
dec
lret
cmp
idiv
and
xchg
pop
ret
incl
and
idivl
decl
icebp
movsb
imul
or
je
pop
aam
jno
out
addb
es
add
xchg
pop
cmpsb
dec
in
in
adc
sub
dec
sub
cmpsb
jno
or
mov
xor
pop
mov
push
sbb
pop
add
negl
mov
push
and
push
icebp
in
xor
adc
lea
add
sub
push
dec
push
push
lea
push
adc
loopne
xchg
out
daa
push
push
adc
inc
inc
pop
mov
out
cmp
jge
pop
mul
mov
or
pop
mov
fstpl
jle
jle
scas
ja
xor
mov
mov
inc
inc
add
imulb
or
sbb
insl
scas
addl
mov
out
mov
inc
cmpsl
dec
jge
adc
ficoms
or
lods
leave
mov
mov
inc
daa
pusha
in
push
stos
adc
jge
mov
aad
fcmovb
adc
add
ds
add
xchg
push
or
ss
xor
dec
adc
or
test
and
dec
cmpsb
popf
or
add
jne
je
insb
fsts
push
daa
dec
mov
and
hlt
xrelease
cmpsb
leave
pop
jecxz
xchg
jp
dec
adc
inc
cmp
sbb
xor
test
xor
fs
fnstsw
bound
or
add
xlat
sti
mov
test
popa
jns
or
leave
mov
dec
clc
aaa
mov
ret
inc
mov
push
pop
jb
nop
mov
add
pop
add
xor
out
mov
sub
sub
xor
jle
cli
push
mov
push
neg
and
icebp
xor
into
add
adc
pop
inc
sbb
adc
in
jo
sub
test
subb
xchg
dec
or
sbb
or
mov
and
or
fsubrl
xchg
xorb
mov
mov
loopne
mov
andl
cmp
adc
cmp
idivb
clc
das
fs
and
inc
mov
cmp
fidivl
inc
imul
xchg
mov
hlt
xor
aaa
cmp
jo
add
mov
fidivs
fldln2
stos
xchg
inc
mov
push
push
push
test
mov
pop
push
inc
sbb
add
sub
sbb
mov
pop
sbbl
and
xor
jno
xchg
sub
sub
outsl
in
popa
faddl
xchg
les
loope
pusha
lods
adc
nop
and
inc
mov
jecxz
xchg
xchg
mov
loopne
ret
daa
testb
aaa
repnz
scas
mov
sub
inc
sub
fldt
int
add
adc
xor
cltd
sub
cmp
dec
aaa
movsb
imul
lods
nop
xor
push
sbb
sti
xor
mov
cmp
cmpl
inc
int3
mov
cwtl
mov
int3
lahf
pop
xchg
and
add
mov
aas
loope
xor
jo
scas
push
cmp
out
sbbl
xor
mov
daa
jp
or
jg
xchg
lahf
pop
lret
stos
pop
xor
pusha
cld
pusha
xchg
insb
cmp
and
dec
and
test
mov
adc
xchg
les
mov
fstpt
in
stos
adc
or
dec
cld
ret
dec
xchg
add
push
add
insl
and
popa
out
jl
sbbl
fildll
aam
popl
dec
jbe
mov
subl
xchg
stc
nop
dec
xor
mov
add
or
dec
push
mov
jle
cmpl
add
cmpb
sbb
sub
pop
stc
sub
movsl
mov
pop
mov
dec
subb
nop
ja
mov
sub
sbb
inc
or
or
jns
lahf
fidivrl
in
mov
arpl
andl
imul
jns
lods
inc
add
nop
or
je
ljmp
lds
mov
inc
dec
and
adc
js
shll
ja
sti
dec
inc
xor
sbb
mov
mov
dec
xor
sbb
mov
xor
xor
fs
xor
cmpsb
push
sbb
cmpb
and
sub
xchg
and
cmp
inc
pop
dec
adc
jg
push
sbb
dec
sbb
outsl
and
mov
sub
jo
popf
jno
sbb
daa
fs
bound
insb
or
aas
aad
sti
sub
xor
cli
bound
aas
push
mov
rolb
int3
dec
cmp
sahf
jbe
inc
inc
jmp
jge
mov
out
leave
out
jle
sbb
xor
add
pop
rclb
mov
jne
sub
rcrb
dec
dec
add
xor
and
adc
mov
push
sub
sub
sub
insb
and
pop
fs
sub
push
loopne
adc
cmp
push
in
xchg
repnz
sbb
test
fistl
pusha
mov
dec
jns
adc
mov
mov
rorl
mov
movsl
ss
and
add
push
fcomi
mov
jle
les
in
pop
pop
pop
fmuls
je
arpl
push
sub
or
or
cs
push
loope
and
jo
lods
adc
or
or
push
inc
fiadds
jl
cmpsb
int3
xchg
adc
rcr
icebp
cmp
aas
mov
jns
enter
cmp
loopne
push
shll
and
mov
pop
add
and
and
nop
or
fiaddl
and
or
adc
stos
xchg
shrb
fsubrl
test
adc
cli
sbb
rolb
test
sub
rolb
push
pop
xchg
ss
pop
and
je
adc
pop
push
pusha
add
les
add
cmp
rcrb
inc
adc
adc
sbb
psllq
arpl
lret
dec
lahf
dec
inc
and
cmovbe
dec
enter
adc
aam
cmpb
arpl
sbb
or
cmpsl
xlat
mov
filds
add
test
mov
and
addr16
ret
adc
mov
xor
sahf
dec
and
xlat
jmp
inc
ret
nop
aas
adc
xor
mov
inc
lcall
cmp
mov
xchg
test
push
inc
pop
xor
and
pop
aas
or
cmpsl
lock
aad
dec
mov
ja
mov
sbb
test
push
and
push
loopne
mov
daa
enter
sbb
mov
test
lods
xor
sbb
std
mov
mov
add
sub
movsl
fldt
in
xor
add
data16
inc
ss
loopne
or
lds
test
daa
adc
je
sbb
push
pmulhw
push
outsl
mov
mov
xchg
or
das
push
mov
ret
add
jns
sbb
repnz
jle
hlt
add
add
lods
xor
adc
adc
adc
in
sub
jno
jmp
frstor
adc
daa
add
push
cmpl
in
lock
mov
ret
movb
dec
adc
and
dec
dec
or
push
push
mov
xchg
js
push
pop
sti
inc
inc
filds
das
sar
iret
adc
out
ss
arpl
cmp
jl
xor
jae
mov
inc
sub
decl
add
add
mov
or
testl
or
xor
inc
push
jg
movsl
mov
aaa
call
imul
inc
jg
ja
jmp
sub
cmp
out
add
popa
and
sbb
aaa
inc
ljmp
ja
mov
rcl
dec
pusha
sub
arpl
add
inc
bound
shll
xor
sub
push
js
aaa
sub
mov
or
cmc
rcl
push
mov
popa
addr16
mov
inc
sbb
lcall
inc
sbb
pop
mov
push
pop
aaa
les
cli
sbb
push
cmp
je
lds
pop
roll
inc
aaa
push
enter
mov
int3
push
jne
push
call
push
add
dec
adc
inc
xor
or
popf
cld
mov
mov
pop
mov
add
outsl
add
push
out
adc
loop
clc
mov
js
xchg
cmp
adc
add
jg
or
shlb
xor
xchg
lret
cmpsb
mov
aaa
in
mov
sub
push
test
pop
dec
mov
rcrb
fcoms
das
addl
pusha
add
ljmp
adc
sub
pop
add
clc
push
fs
mov
and
in
dec
pushfw
cmpsb
fisttpl
add
sbb
inc
rorl
mov
retw
pop
add
adc
inc
scas
jb
ljmp
into
push
pop
scas
add
pop
loopne
test
sub
and
jno
js
inc
and
test
outsl
xchg
lret
mov
sbb
adc
xlat
andb
or
ret
pop
sbb
leave
stos
cmp
lahf
lahf
out
aas
clc
lods
pop
xor
pop
cmpb
cmpl
dec
mov
pop
int3
jo
add
enter
push
add
sub
int
mov
les
cmpsl
fistpll
or
ja
insb
mov
xchg
cs
pop
je
mov
fs
adc
daa
and
inc
adc
mov
add
sbb
xor
mov
cmp
js
inc
sarb
jne
xor
scas
shll
cmp
ss
mov
inc
mov
pop
daa
dec
test
cmpl
rcll
adc
adc
jecxz
dec
or
push
cs
clc
sbb
mov
xchg
movsl
aam
adc
push
cmpb
push
js
mov
inc
dec
mov
dec
xchg
cltd
add
dec
push
dec
sbb
neg
mov
cmp
xor
mov
jae
cwtl
pop
mov
ja
cmp
or
push
fwait
pop
and
mov
jae
mov
xchg
rorb
xorl
lret
mov
hlt
add
mov
call
adc
pop
jge
inc
add
sub
mov
test
xor
add
pop
push
out
addb
ret
outsl
xchg
and
xchg
rol
lcall
daa
jge
push
lock
test
or
test
shll
sbb
lock
lds
or
ret
or
dec
lahf
jmp
xchg
xor
add
ja
and
and
and
cmp
push
push
lea
adc
fwait
adc
enter
daa
push
adc
adc
mov
les
addl
pushf
addr16
imul
sub
add
sbb
int3
loop
or
aam
mov
inc
stos
loope
jl
xchg
dec
jnp
push
add
jo
inc
add
sub
push
cmc
mov
pop
push
sub
add
bound
ret
fs
cmovl
orl
jbe
xchg
loope
xor
sbb
cmp
jl
loope
shrl
dec
movsb
adc
mov
fisubrl
lea
or
xor
out
les
movsb
mov
mov
xor
ds
and
je
sbbl
or
es
and
add
mov
les
addl
mov
repz
xor
hlt
inc
or
and
movsb
neg
in
mov
push
cmp
mov
sbb
ret
xchg
and
sti
fwait
cmp
rorb
loopne
ss
arpl
into
jno
cmp
sbb
pop
filds
inc
cmp
pop
jle
dec
fisubrs
add
push
push
pusha
jmp
es
pop
icebp
fisubs
push
popa
or
je
mov
daa
in
test
mov
dec
pop
int
adc
xchg
fadds
push
sub
stc
or
insb
das
dec
lock
xchg
aam
stc
or
fidivrs
pop
test
lcall
rclb
lcall
push
or
mov
sbb
pop
mov
xor
push
arpl
inc
lods
sub
add
push
das
or
inc
popa
adc
pop
fistps
push
mov
pusha
xchg
iret
ljmp
cmp
mov
pushf
cmp
xor
add
dec
mov
test
and
aam
popa
loope
cmp
mov
push
sbb
outsl
xchg
mov
lcall
or
inc
out
addl
lea
mov
sub
pop
vmovntps
in
insl
icebp
push
sub
adc
mov
ffreep
add
fwait
das
insb
movl
adc
out
inc
push
mov
dec
mov
cmpsl
andl
bound
pop
push
cmpb
mov
cmpsb
xchg
pop
sub
or
adc
sahf
cld
mov
or
adc
insl
mov
jmp
and
cmp
loopne
sbb
adc
ret
pusha
sbb
sbb
add
add
sub
and
adc
shlb
repnz
add
or
jb
pop
inc
mov
ja
out
jo
sub
cmp
and
push
pushf
pop
icebp
test
add
dec
sbb
fs
cmc
xor
and
jge
adc
mov
fucomip
and
inc
push
mov
in
mov
shlb
mov
fdivrs
mov
inc
push
popa
lea
push
mov
dec
bound
jg
cmp
xor
popl
sbb
loopne
lds
push
add
sarl
cmp
stos
cmpsb
lock
idiv
and
jp
xchg
push
inc
sub
iret
lods
mov
mov
imul
mov
lea
jmp
xadd
pinsrw
pop
mov
or
out
or
fimuls
or
fwait
cmc
aam
sbb
cmpsl
cmp
push
mov
mov
dec
in
adc
or
decb
add
cld
mov
test
cmp
out
adc
aas
mov
clc
cmp
insl
js
lods
push
lfs
inc
push
loope
xchg
pusha
or
sub
inc
inc
cmp
jno
mov
jg
mov
sbb
lods
xchg
sub
pop
scas
or
sub
mov
push
xor
test
testl
int3
addb
sbb
mov
gs
aad
scas
dec
push
cmp
rclb
xor
das
cmp
cmp
mov
ret
addl
aaa
push
sbb
inc
call
and
nop
cltd
cmpsl
icebp
sarb
xor
int3
sbb
pop
adc
cmp
je
adc
ret
xchg
cmp
adc
fwait
daa
pop
lret
sbb
outsb
and
or
fisubl
jmp
cmp
in
or
mov
outsl
ret
xor
aad
cmpl
sbb
sub
or
dec
mov
xor
test
lea
gs
jmp
fisubrs
add
sbb
daa
or
ret
aas
xchg
cmp
pushf
jo
or
add
dec
test
xchg
push
movsb
sbb
add
inc
sub
push
or
lock
add
aaa
movsb
pop
iret
add
push
cwtl
adc
mov
lret
loopne
sub
pusha
and
das
fadds
push
and
test
mov
push
add
lds
andb
stc
or
pusha
xor
adc
mov
addl
test
cld
cmc
push
inc
mov
cwtl
sahf
inc
push
add
les
adc
add
sti
dec
adc
jne
and
and
test
pop
lcall
popf
push
dec
adc
xorl
pushf
adc
or
sbb
fstpl
in
ret
push
inc
adc
sbb
iret
pop
roll
mov
outsl
push
andb
dec
lcall
pop
push
jb
adc
les
dec
adcb
inc
pop
xchg
pop
movsb
inc
jb
iret
ja
cmp
test
test
inc
ja
testl
rolb
shlb
lods
pushf
mov
push
cmpsb
adc
and
push
xor
mov
lcall
adc
out
bound
popa
add
inc
or
xchg
ljmp
cwtl
lods
mov
add
push
ljmp
add
hlt
clc
add
push
lods
popa
inc
int3
lea
jmp
pusha
daa
fdivs
push
roll
mov
sbb
xchg
or
mov
push
shll
sub
mov
jl
inc
add
or
sbbl
mov
shll
inc
or
dec
bound
andb
adc
xor
cmpsb
pop
mov
dec
ret
jno
pop
dec
adc
cmp
sub
xchg
mov
outsl
punpcklbw
aas
int
cmpsl
sub
and
test
sbb
punpckhdq
test
fldl
sub
ret
dec
sbb
push
push
inc
jge
inc
mov
mov
sbb
sar
test
movups
inc
xchg
fbstp
sarl
test
insl
insb
dec
incl
mov
movl
push
or
add
dec
shlb
push
andl
adc
jb
dec
les
repnz
xlat
dec
pop
nop
stos
cld
cmp
add
or
xchg
dec
add
stmxcsr
dec
dec
ret
adc
adc
orl
and
or
mov
inc
push
push
sub
dec
cmp
xor
adc
addl
leave
stos
imul
or
sbb
mov
testl
fwait
push
pop
int3
and
or
imul
insb
jecxz
adc
imul
idivb
add
ret
scas
inc
mov
mov
aam
xchg
cli
jne
ljmp
dec
addb
fadds
dec
mov
nop
xchg
fs
push
mov
xchg
movsl
add
mov
cmp
sahf
lcall
adc
and
push
xor
cld
add
sbb
jno
sbb
pop
aam
xchg
pop
add
jle
jno
loope
inc
cmpl
push
mov
jb
fs
sub
xchg
outsw
popf
pop
inc
jns
add
jo
cmp
xchg
repnz
pusha
fs
nop
or
fsubrl
jno
mov
inc
jbe
js
mov
jnp
mov
adc
or
mov
pop
jo
lds
push
pop
sbb
enter
mov
dec
sbb
jno
pop
mov
pusha
out
test
jne
sarl
push
or
xlat
and
push
dec
push
lret
adc
sbb
mov
jno
dec
les
push
dec
test
push
dec
rol
int
enter
test
cmp
jne
xchg
imul
xchg
and
lds
mov
add
cmp
enter
call
fisubl
or
clc
pop
sti
sbbl
mov
das
mov
sub
jecxz
lock
xor
jge
inc
adcl
shrb
imul
mov
iret
adc
imul
dec
mov
and
popa
pop
dec
mov
cltd
outsb
leave
aad
jecxz
movsb
jno
lock
insl
mov
rolb
jns
jmp
push
or
jmp
xlat
inc
dec
fsubrs
iret
inc
push
mov
std
enter
and
xchg
and
mov
adc
adc
je
adc
popf
push
cmp
inc
and
push
or
and
cmpsl
push
and
pop
fbld
sub
xchg
in
adc
enter
add
cmc
dec
mov
shll
sahf
inc
add
push
or
or
insb
adcl
mov
sub
repz
pop
fiaddl
mov
test
ret
sbb
jle
int
inc
dec
sbb
jo
cltd
pop
iret
mov
cmp
sbb
mov
les
pop
mov
fs
or
outsw
sbb
mov
pusha
and
insb
add
and
in
cmp
das
and
imul
cmc
fiadds
dec
and
jne
ret
push
jg
pop
and
cmpsl
lock
sbb
or
jg
cmpsl
pusha
sub
test
mov
jne
push
pop
add
fidivs
add
ja
cmp
or
addl
sbb
pop
vcvtuqq2ps
sbbb
pop
jo
dec
push
jp
jb
dec
inc
lds
and
push
and
add
mov
mov
jecxz
lahf
xor
sbb
test
or
lcall
lcall
loopne
xor
jne
push
or
pop
rolb
add
sub
xor
jns
and
inc
lahf
rcrb
pop
xchg
xor
push
adc
pushf
mov
andl
inc
jge
loopew
rcll
sub
dec
lret
mov
add
jb
push
setae
test
out
movsl
pop
mov
insb
or
or
lea
add
dec
or
int
or
test
ljmp
sbb
outsl
xchg
rcrb
cmp
pop
mov
adc
scas
test
out
inc
dec
push
dec
mov
shr
lods
je
int
loopne
fs
push
sbb
test
push
sbb
inc
adc
mov
aas
jmp
adc
cld
or
sub
loope
jbe
sbb
sbb
sbb
add
add
mov
into
add
sti
jne
in
ss
dec
scas
adc
xor
leave
inc
or
mov
push
les
imul
adc
adc
adc
dec
sbb
arpl
test
adc
push
subl
cmp
orl
sti
or
scas
stos
sub
outsl
mov
mov
fs
imul
dec
dec
jmp
cmp
pusha
and
mov
push
aad
pop
mov
mov
mov
es
adc
ja
cmpsl
mov
sub
adcl
mov
int
push
sbbl
xor
or
inc
sub
mov
sbbl
sbb
lea
daa
sbb
lock
cmp
sbb
add
sub
sbb
adc
pop
xor
cmpsb
xchg
dec
adc
inc
xchg
inc
lock
add
les
or
jns
push
inc
imul
lret
dec
ljmp
push
dec
inc
daa
dec
or
mov
aaa
movsb
xor
lcall
lret
cmpsb
jbe
mov
ss
xor
inc
in
add
daa
lea
and
icebp
mov
push
scas
sub
mov
into
add
loopne
lcall
or
adc
adc
lcall
clc
or
test
in
xor
mov
fsubs
xchg
orb
shlb
mov
das
xchg
movsl
sbb
add
das
mov
lahf
cwtl
lods
fwait
out
adc
inc
andnps
fcomps
mov
jb
imul
sub
mov
add
roll
dec
outsl
lods
pop
stos
ss
ret
lods
xchg
fisubrs
jmp
or
hlt
mov
es
lret
mov
sbb
xchg
in
inc
cmpsl
fstpl
and
mov
popa
and
loop
dec
pop
stos
arpl
xor
mov
fnsave
fmuls
xor
or
ss
push
enter
addl
cmpsb
mov
mov
int
pop
mov
fdivrs
and
push
sub
rclb
jl
mov
cmpl
jne
add
add
and
inc
push
xor
stos
pusha
cmpsb
orl
cli
fwait
insb
insl
or
mov
cmp
push
inc
sub
sub
and
jno
xor
push
popf
xor
ficoms
and
mov
or
ja
dec
std
or
or
and
xchg
sub
out
nop
test
loopne
sbb
sub
bound
pop
or
or
add
xchg
nop
out
adc
xchg
xor
xchg
aam
cli
iret
loopne
xor
popf
pop
lcall
xorb
das
cmp
andb
je
mov
sti
xorb
je
mov
out
dec
mov
popa
adc
xor
adc
mov
mov
add
sbb
jne
cmp
xchg
jbe
rcrb
nop
sub
mov
adcl
push
mov
inc
pop
xchg
aam
and
xchg
inc
or
jge
enter
jns
push
jne
sbb
jnp
or
inc
gs
into
sub
mov
call
call
xchg
je
push
pop
or
mov
popa
sbb
aam
mov
or
mov
lahf
dec
add
add
pop
dec
loop
lcall
mov
and
sbb
sbb
cmp
mov
sbb
pop
lret
rolb
mov
add
jmp
imul
incb
cmp
push
dec
dec
hlt
or
enter
mov
fldl
jns
and
in
xchg
mov
jbe
xchg
add
fistl
sbb
pop
ret
faddl
adcb
mov
rorb
sub
ret
sbb
adc
jbe
dec
ret
inc
out
push
or
pop
rorb
pop
xor
lea
push
inc
nop
dec
and
lret
or
dec
mov
mov
xor
xchg
jmp
inc
inc
hlt
mov
gs
cmp
sbb
rolb
jp
adc
sub
add
mov
pop
rolb
or
push
or
inc
aaa
or
xor
push
jecxz
or
push
sbb
push
add
add
mov
xchg
xor
sbb
adc
add
or
shr
sub
fidivrl
pop
addr16
push
adc
jo
lret
and
imul
aas
notb
or
dec
inc
addl
fistpll
je
cmp
je
xchg
dec
cmpb
pop
adc
popa
cmp
outsl
sbbl
lock
lcall
sub
jge
sub
pop
inc
inc
or
inc
ss
das
add
adc
out
push
cmp
sub
xor
adc
push
mov
fmuls
xchg
call
mov
enter
ljmp
mov
xchg
xchg
add
ficomps
sbb
pop
andl
rcr
or
cmp
mov
mov
in
movsb
hlt
test
pop
shrb
nop
xchg
dec
rorb
or
je
iret
push
lret
lcall
inc
mov
sbb
pusha
shrb
sub
push
inc
sub
jp
push
lock
cwtl
pop
ss
in
or
xchg
or
cmp
push
scas
jmp
xor
mov
loope
ret
jne
push
xor
cmpsl
sub
kmovw
into
dec
sbb
pop
sub
lret
mov
mov
mov
cmpsl
mulb
insb
adcl
push
nop
xor
pop
dec
and
dec
xorb
outsb
mov
sub
adc
ds
leave
sbb
mov
dec
or
adc
xlat
mov
cwtl
flds
ret
pop
mov
or
cmp
push
sbb
shrl
shr
dec
lods
jecxz
icebp
sub
cmp
arpl
inc
inc
ds
sbb
shll
mov
mov
push
dec
jne
xor
gs
addr16
subb
sbb
shrl
mov
popa
scas
xor
or
mov
dec
das
les
insb
jg
jmp
push
addr16
scas
xorb
sub
les
lds
inc
test
mov
popa
push
or
xchg
or
cmp
cs
xor
push
das
jmp
push
roll
pop
stc
fdivrl
movl
sbb
and
adc
lock
nop
pop
lahf
fwait
test
fildll
testb
xor
sbbb
jnp
and
push
mov
mov
sbb
ret
xor
outsb
scas
fs
fs
cmp
pop
sbb
adc
pop
shll
fwait
jmp
dec
in
cwtl
push
sbb
in
aaa
and
mov
add
in
pop
pop
add
ret
loopne
inc
seto
adc
or
mov
inc
arpl
pop
and
cwtl
cmc
addr16
pop
mov
inc
add
je
mov
dec
jecxz
jmp
popa
and
or
push
push
stos
mov
push
fwait
lock
mov
sbb
out
call
jnp
xchg
lods
xchg
adcl
pslld
stc
mov
jnp
sbb
cmc
sub
add
or
pop
in
push
xor
inc
dec
fisubrl
insl
out
sbb
jmp
jecxz
imul
jle
or
jmp
repnz
inc
push
mov
jne
movsb
cmpsl
in
sbb
pop
fldl
adc
push
push
mov
or
es
sbb
pop
and
and
mov
push
or
insl
cld
sbb
inc
cwtl
in
dec
push
jno
rcll
movsl
mov
mov
test
ja
add
xchg
aaa
test
cmp
aam
adc
pop
int3
or
adc
xor
jp
subl
mov
cmpsb
xor
inc
xlat
mov
sbb
roll
and
push
push
test
mov
lods
mov
pop
adc
push
inc
xor
fdivs
mov
cmpl
lds
pop
sub
outsl
or
dec
mov
fisubrl
inc
push
clc
movsb
dec
imul
dec
cmpsl
add
clc
fnsave
jae
imul
push
mov
push
enter
hlt
mov
insl
and
add
jmp
in
ret
and
sbb
mov
addr16
mov
mov
or
imul
addl
mov
xchg
test
cmp
sbb
sbb
jecxz
xchg
xor
or
sbbb
or
jecxz
inc
arpl
pop
sbb
cmp
mov
mov
loope
inc
mov
popa
xor
test
xor
js
sbb
dec
adc
jae
ljmp
add
popa
mov
adc
sub
or
mov
xchg
in
xor
outsb
fsub
adc
fwait
or
and
or
or
push
adc
or
ss
cmp
or
leave
or
add
adc
mov
xor
test
xlat
daa
add
mov
cmp
push
jge
dec
arpl
add
push
pop
test
or
inc
mov
sbb
inc
daa
aad
push
lock
or
inc
fcmovb
out
add
stc
add
leave
ljmp
fists
mov
movsl
pop
xchg
into
addb
add
cmpsl
or
and
imul
adc
cmp
loopne
or
pusha
add
cmpl
inc
dec
adc
or
dec
jnp
sub
cltd
lret
lahf
outsl
out
fisubrl
add
pop
cmpsl
mov
jne
outsb
adc
xor
imul
shl
leave
inc
push
mov
inc
cmp
xchg
push
adc
mov
out
sub
or
scas
sub
ds
out
sbb
pop
xlat
mov
repz
lret
mov
in
call
popf
inc
aam
notl
xor
mov
sbb
xchg
movsl
jne
je
fcomp
fdivs
or
cmp
xchg
sbb
pop
add
cli
add
sub
imul
test
or
jmp
lea
cs
sbb
sbb
clc
jo
mov
dec
movsl
or
inc
and
pop
push
or
mov
pop
mov
in
stos
jo
push
or
mov
add
mov
adc
add
pop
sbb
inc
lret
sub
and
inc
xchg
mov
jl
fndisi(8087
cmp
xor
sub
mov
adc
subl
lcall
sbbb
rorb
and
push
fs
add
movsl
lods
mov
and
imul
push
push
popl
ret
jecxz
add
popa
adc
repz
mov
js
dec
in
push
rclb
out
inc
call
pop
sbb
rolb
movsb
dec
dec
inc
and
dec
pop
xor
in
dec
and
and
enter
sbbb
adc
cmpb
mov
in
or
inc
sub
or
loop
fists
sub
mov
push
and
sub
xor
in
push
dec
inc
sbb
mov
sub
dec
xchg
js
xor
movsb
adc
or
jg
dec
sub
jmp
cmp
push
and
enter
and
test
jnp
cmp
add
inc
cmp
inc
sub
lret
sbb
call
in
negb
and
data16
je
and
add
pop
hlt
pop
jge
lea
and
pop
cmp
cs
add
inc
pop
rorb
pop
pop
push
fadds
and
sbb
lret
jl
mulb
and
xchg
icebp
xchg
mov
movsl
adc
lret
jge
orl
push
push
jmp
movb
add
call
add
xchg
jl
in
out
scas
inc
add
or
pop
add
std
jb
jmp
push
inc
pop
dec
jp
pushf
sbb
popf
rorl
test
gs
movl
jo
movsb
push
cli
daa
je
or
je
nop
inc
subb
inc
push
dec
lret
sub
inc
pushf
push
mov
jl
inc
shlb
mov
sti
sub
dec
and
and
stos
and
bound
jecxz
inc
jae
add
cmp
nop
pop
adc
add
bound
push
dec
and
push
gs
aaa
nop
pop
in
jne
shlb
mov
push
sbb
mov
pop
dec
stc
ja
rcrb
xor
jo
shrl
dec
jns
adc
jmp
pop
ja
je
push
insb
rorl
jnp
jne
jne
pop
rcl
imul
aaa
add
mov
xchg
xor
ret
clc
jecxz
push
into
push
stos
push
insb
xor
adc
lds
ret
xchg
mov
lock
or
ret
orl
inc
pop
jne
dec
sbb
hlt
mov
mov
test
pop
loopne
arpl
test
or
fdivs
lea
dec
mov
adc
xchg
xchg
inc
ret
movsb
mov
jecxz
sbb
or
cmp
inc
in
movsb
and
popa
pop
mov
mov
mov
sbb
adc
fdivrs
xor
mov
pop
add
sbb
dec
lock
pop
dec
pop
cmp
mov
rcrl
pop
or
and
mov
gs
jmp
into
addr16
negl
addl
fidivl
rcl
cmp
push
inc
or
inc
in
lds
in
inc
out
cmc
dec
mov
rol
rolb
push
xchg
adc
sbb
add
adc
lds
jmp
mov
fldt
mov
mov
sbb
gs
lret
mov
push
in
andl
mov
adc
inc
das
inc
jo,pn
sub
movd
sbb
adc
add
mov
jmp
rcrb
add
or
xchg
dec
dec
cmp
adc
push
call
sub
pop
jg
pop
fsubrl
iret
cmp
sub
ret
and
sbb
movsl
inc
mov
adc
je
adc
mov
and
or
and
je
shlb
rorb
dec
loop
cmc
cmp
pop
add
push
xchg
sub
add
je
fisubrs
loope
xchg
jb
mov
or
adc
inc
shll
and
sahf
or
mov
adc
cmp
sub
fsubs
ss
imul
ja
stc
sub
sbb
dec
adc
sbb
fstp
adc
or
jo
mov
sbb
add
sbb
sub
and
lea
add
cli
mov
and
clc
sbb
push
pop
pusha
inc
int
xorb
mov
ret
adc
int
cmc
or
xor
adc
rcrl
dec
or
and
adc
pop
xor
fcmovnu
add
cld
push
fisubrs
pop
sub
or
sbb
ja
jecxz
rclb
and
inc
adc
popa
out
pop
and
or
xlat
inc
add
pmullw
sbb
sbb
mov
ja
lahf
aam
dec
sub
sub
dec
inc
inc
push
mov
ja
icebp
or
jl
mov
das
imul
xchg
jp
pop
add
jp
mov
cmp
jo
popf
pop
push
pusha
add
fcmovnu
cmpsb
popf
cmp
or
lock
mov
xor
icebp
cmp
fcoml
adc
adc
aam
dec
insb
and
icebp
fdivr
pusha
pop
adc
aaa
sbb
mov
jge
adc
in
sub
mov
rorl
dec
push
xchg
shr
and
and
add
or
push
mov
das
inc
push
adc
push
or
sbb
cwtl
mov
or
push
push
inc
jae
arpl
cmp
aad
push
mov
dec
add
mov
cmc
fnstsw
cmp
lods
bound
sarl
dec
jne
push
jo
daa
jecxz
jecxz
push
es
ficomps
lds
mov
stos
adc
sbb
popf
mov
je
iret
or
push
inc
mov
pushl
or
call
sub
or
int
into
adc
mov
jo
lahf
enter
das
pop
mov
movb
or
xorl
inc
or
out
xchg
push
or
mov
mov
leave
jmp
xor
andl
inc
mov
loopne
cmp
je
sbb
mov
pop
sbb
cmp
add
xor
adc
cmp
mov
or
insb
call
fld
pop
iret
sub
pop
psubusb
addb
fcomps
rorb
je
and
dec
inc
xor
or
test
lcall
hlt
jns
mov
pop
popf
inc
stc
xor
push
or
push
inc
mov
shll
in
sbb
shrl
les
test
adcb
pushf
xchg
lock
aaa
sbb
sub
aam
or
filds
mov
cmpsb
pop
mov
inc
pop
subb
mov
jge
jae
sub
sbb
imul
dec
jnp
sbb
push
sbb
mov
jp
and
mov
sub
mov
or
adc
bound
imul
inc
fs
mov
leave
or
ss
mov
cld
fs
out
cmpl
pop
pop
cmp
popa
and
mov
mov
insb
xchg
inc
or
mov
movsl
fstpt
adc
inc
das
cmc
xor
push
andb
lock
test
pop
and
lret
add
sub
mov
xorl
popl
test
pop
and
dec
mov
adc
test
xor
sub
mov
push
loope
out
lcall
cmp
rclb
sub
fisttpll
daa
jecxz
xor
fsubl
or
adc
test
cwtl
cmp
inc
sbb
xchg
aaa
jo
jp
xchg
push
fadd
inc
add
xchg
pop
sbb
mov
das
jne
add
imul
push
dec
mov
xchg
repz
sub
xor
pop
push
xchg
pop
adc
in
lods
sub
xchg
or
pop
pop
adc
sub
ljmp
sub
inc
scas
fadds
jae
xlat
push
jnp
xor
push
jmp
mov
stos
nop
dec
ds
inc
cmpsl
push
adc
push
xor
add
or
ret
dec
push
in
pusha
adc
and
add
push
xor
or
pop
mov
insl
enter
pop
scas
and
out
mov
ret
push
jbe
cmpsb
xchg
dec
fdiv
movsb
push
sbb
pop
push
inc
movsl
outsl
shll
ljmp
mov
mov
xor
or
fcoms
mov
aaa
shlb
adc
roll
or
mov
mov
adc
and
out
sarl
loop
sub
popa
movups
xchg
xorl
sub
xorl
sub
pop
in
or
pop
push
push
lock
sub
mov
or
push
adc
pop
inc
dec
and
cwtl
sub
lcall
mov
xchg
lret
daa
cmc
add
push
mov
xor
scas
movsl
imul
adc
inc
inc
gs
inc
pusha
bnd
or
nop
sub
xor
pop
stos
pop
adc
dec
dec
jecxz
add
insb
sbb
sub
sub
out
cmc
rolb
add
jno
pop
and
xlat
cmp
sub
mov
scas
ret
es
out
repnz
inc
cmp
jmp
push
rcrl
or
mov
in
rcrb
gs
ss
pop
and
xchg
pusha
lock
popa
adc
mov
dec
popa
pop
loope
pop
dec
pop
shrb
or
xor
add
inc
icebp
push
jnp
fldcw
rorb
fcoml
add
sub
inc
insl
pop
push
or
jo
dec
jbe
or
jle
inc
xchg
xchg
xchg
out
int
stos
movsl
xor
sti
or
pop
cmc
sub
and
sbb
mov
in
add
inc
add
or
mov
xchg
sub
cmpl
gs
pop
dec
jg
cmp
shlb
daa
mov
mov
mov
lea
push
daa
adc
adc
push
loope
rcll
or
sbb
pop
out
outsb
or
xchg
invd
mov
inc
sub
insl
pop
sbbb
jmp
sbb
push
jle
stos
sbb
inc
lods
pop
inc
adc
in
rcl
mov
ds
pop
mov
dec
stos
jb
jae
and
add
outsl
jg
test
das
xlat
test
movmskps
pop
movsl
mov
inc
inc
les
movsb
imul
xchg
or
adc
mov
jns
inc
push
loop
sarl
sarb
hlt
inc
push
cmp
sbb
cs
outsb
and
pop
sbb
jl
stos
sbb
dec
jg
sbb
pusha
push
sub
push
out
insl
and
and
mov
mov
sub
push
push
clc
dec
pop
mov
out
add
sbb
fisttpll
lcall
gs
fdivrs
insl
and
jge
lret
mov
push
inc
jmp
into
outsl
push
pusha
mov
daa
push
dec
sub
sub
and
add
inc
and
xchg
or
loop
pop
shrb
mov
adc
lahf
sub
nop
mov
gs
pop
aam
sarl
adc
or
sbb
fimull
sbb
xchg
add
enter
or
nop
and
xchg
add
cmpsb
pop
dec
mov
lock
mov
in
fdivp
icebp
insl
adc
push
adc
cli
or
cmp
js
or
pop
test
inc
mov
mov
pop
mov
lret
sbb
cmp
fstpt
mov
sbb
dec
scas
cltd
adc
jae
mov
add
rolb
mov
movsl
cmpsl
dec
sar
dec
dec
dec
or
push
dec
imul
rcrl
daa
loop
dec
push
fisttpll
dec
fidivrl
xchg
fmuls
lahf
jmp
dec
aaa
aaa
ud2
loopne
dec
roll
icebp
adc
ror
into
pop
pop
xchg
and
and
insl
dec
cmp
and
jle
loop
dec
push
cmc
pop
cmp
dec
out
push
out
xchg
and
or
add
mov
into
dec
loope
dec
insl
inc
dec
test
jno
sub
cmc
jo
lahf
nop
push
fistl
push
push
mov
sahf
xor
pop
rorl
mov
sbb
enter
jge
or
pop
sub
xor
ja
jecxz
push
mov
or
es
imul
into
sbb
in
orl
sub
cmp
sbb
add
xor
sbb
ret
pop
fidivs
xchg
lret
xorb
mov
aad
adc
in
test
sti
lret
rcl
ljmp
dec
push
lret
and
cmp
and
sub
outsl
ss
sub
sub
inc
xchg
sbb
leave
call
add
adc
rorb
lock
inc
call
mov
mov
popf
rcrl
adc
or
inc
shrl
shl
and
pop
orl
lea
fsqrt
mov
or
enter
in
pop
movaps
mov
mov
loopne
or
push
and
add
clc
mov
pop
jo
pop
mov
sbb
nop
pop
pop
js
popa
xor
push
sbb
inc
lldt
mov
dec
out
or
pushf
adc
movsb
push
fwait
and
dec
test
gs
imulb
sbb
jg
shrb
es
pusha
mov
lahf
pop
lcall
pop
mov
xor
inc
and
cmpsb
out
test
inc
jl
popf
push
fwait
xchg
mov
inc
cs
pop
push
push
loopne
cs
cmp
ret
lds
xchg
push
pop
push
inc
lds
xchg
push
push
repnz
shl
in
xor
popa
mov
xchg
gs
dec
jb
jb
cmovge
add
test
stc
mov
pop
pop
pop
lret
jne
push
dec
mov
ret
push
push
inc
push
and
es
adc
xchg
lock
jo
xchg
add
stos
or
xor
pusha
nop
in
xor
insb
lcall
iret
and
mov
xor
pop
jecxz
and
xor
test
jns
xor
push
pop
movsb
xlat
fcmovnbe
cmp
out
adc
push
rcrb
cld
fs
popf
ret
mov
cwtl
sbb
aaa
mov
lds
loope
push
cmp
stos
fdivrs
jl
or
jg
cmp
movsb
adc
mov
sbb
pop
call
adc
inc
jbe
push
cs
iret
scas
mov
xchg
aas
faddl
nop
add
jmp
inc
rclb
adc
ret
xor
les
movups
cmpsb
or
int
sub
mov
orb
add
nop
loope
or
or
or
xor
push
adc
test
dec
jmp
daa
or
sub
pop
push
shl
imul
in
add
jg
subl
inc
xchg
loope
out
or
ss
cmp
dec
and
fxch
adc
dec
cmpsl
lods
xlat
cmp
pop
cmp
push
rcrb
into
imul
adc
dec
sub
add
jg
adc
test
jmp
out
orl
mov
movb
xlat
cmp
sbb
adc
xorb
sbb
and
mull
mov
shlb
inc
ljmp
insl
pusha
cmp
lea
xor
mov
imul
roll
sub
push
xor
adc
mov
cmc
addl
test
std
insl
pop
push
arpl
loopne
xchg
addl
pop
add
outsb
gs
rolb
jp
adc
mov
add
add
or
xchg
sbb
xchg
neg
mov
mov
inc
inc
loopne
add
mov
fs
jne
cmpl
call
or
ficoms
xchg
pop
add
pop
pop
dec
pop
pop
test
mov
jmp
mov
or
cmp
sbb
xchg
sub
xor
out
pusha
push
sbb
dec
mov
mov
divb
imul
and
call
xor
in
call
addl
push
mov
sub
add
xor
mov
shll
mov
incl
dec
pop
sbb
iret
jl
insl
test
xchg
and
in
mov
test
nop
xor
push
mov
insl
sti
jns
xor
xor
or
mov
or
xchg
shlb
pop
stc
sbb
and
adc
shr
int
add
mov
push
sarl
lock
fdivs
and
xchg
scas
adcl
xchg
testb
jns
cltd
xor
mov
or
mov
mov
sahf
push
or
xchg
xor
insb
add
lret
push
xchg
xchg
pop
out
into
ss
mov
xchg
push
insl
pop
shll
int3
rorl
lds
dec
and
mov
test
bound
push
lcall
adc
mov
testb
mov
ret
dec
imul
adc
iret
and
dec
jmp
mov
lcall
mov
sbb
pop
dec
inc
push
cltd
int
cmp
movsb
movsb
mov
fildl
sbb
inc
dec
pop
sbb
mov
cmc
sub
sahf
lea
lock
mov
jmp
xor
pop
imul
inc
or
sub
call
pusha
mov
lock
les
fstl
sub
mov
mov
adc
adc
push
pop
scas
add
and
lods
sbb
sub
inc
ret
cs
rclb
inc
inc
mov
cmp
mov
add
sub
cmp
add
xor
jo
xor
sub
roll
sub
hlt
sub
insb
bound
push
nop
cmp
je
adc
mov
pop
cmp
ja
cmp
cmpsl
push
popf
out
sahf
push
arpl
insl
pushw
dec
dec
sub
inc
scas
lea
sub
add
sub
pop
add
popa
mov
sbb
imul
add
and
jp
lahf
xchg
hlt
pop
inc
sbb
cmpsb
roll
cmp
inc
leave
enter
pop
ds
mov
mov
mov
xor
mov
sbb
add
fcomip
mov
orb
pop
pop
cmp
jmp
push
arpl
inc
call
aas
add
je
add
gs
clc
push
adc
or
outsb
int
bndldx
cmp
ficoml
test
sbb
sub
lock
sub
mov
enter
xchg
hlt
pop
outsl
or
fadd
ficoms
mov
movl
ret
rcl
mov
ds
mov
xchg
or
dec
dec
sbb
int3
inc
rorb
push
loope
push
and
je
and
mov
in
xchg
cld
shrb
dec
or
lods
pop
adc
mov
enter
or
outsb
rcll
jle
adcb
push
or
mov
add
jo
mov
xbegin
imul
pop
add
or
in
adc
out
cmp
pop
dec
rclb
mov
mov
iret
pushf
xor
add
xchg
add
outsb
pop
push
xor
or
mov
movsb
sbb
addl
and
dec
sub
insb
push
inc
cmp
push
inc
ss
xchg
aam
movsl
fnstsw
xorl
pop
pop
sbb
shlb
lcall
jle
ja
mov
sub
push
loop
or
test
call
cmp
mov
mov
imul
inc
pop
and
and
mov
movsb
aad
push
and
imul
sub
or
inc
filds
pop
mov
adc
sub
add
mov
pop
add
sub
rolb
jle
add
shrb
mov
movsb
push
cmp
xchg
mov
mov
mov
push
sbb
in
dec
mov
test
jg
jo
sub
loopne
sbb
and
push
add
jge
arpl
adc
push
adc
jp
add
mov
mov
xchg
out
inc
and
mov
pusha
add
push
je,pn
mov
dec
jo
cmp
je
sahf
add
adc
mov
dec
pop
enter
sub
add
mov
add
or
jno
call
fisttpll
fucom
popf
cmp
or
icebp
ja
mov
mov
lea
les
js
test
jg
ss
pop
pop
call
sub
fstpt
dec
jne
addl
cmp
sbb
pop
pop
out
and
mov
push
gs
push
adc
push
shrd
lahf
and
ss
xor
push
add
inc
dec
jg
pop
push
mov
into
pand
jl
ss
pusha
cmpsb
adc
push
push
sub
add
add
push
inc
or
mov
pop
inc
outsl
cmp
jecxz
inc
test
push
cs
add
push
dec
mov
or
push
aad
in
mov
dec
dec
push
and
push
fwait
test
adcb
and
or
pop
adc
xor
outsl
adc
mov
mov
ljmp
fimuls
leave
push
pop
leave
jbe
icebp
fcmovu
xor
cs
xor
bound
movsb
add
sbb
add
fs
cmp
mov
sub
xor
pusha
orl
inc
pop
sbb
js
and
xor
sbb
dec
repz
movsl
add
scas
push
aaa
js
test
rcrl
inc
aaa
adc
dec
cmp
jns
xor
sub
stos
incb
mov
sti
fwait
cli
add
sub
lea
sub
inc
mov
or
cltd
mov
or
lea
dec
sbb
cs
adc
aam
repz
dec
dec
jo
sub
je
fiadds
ja
pop
xchg
and
lds
call
imul
or
jno
sbb
push
loope
push
je
pop
movsb
int
not
or
push
sub
ret
adc
push
mov
mov
movsl
mov
adc
rcrb
pusha
add
movsb
ds
js
sbb
test
outsl
add
fnstsw
inc
sbb
sbb
or
iret
xchg
clc
faddl
movsl
out
push
and
rol
rcl
fs
rorl
inc
push
push
inc
inc
ss
andb
mov
pop
cmp
pop
pusha
inc
outsl
aaa
jge
add
ss
movsb
dec
lcall
je
sti
xor
adc
dec
lock
xor
outsb
test
or
aad
xlat
add
imul
inc
xchg
cmp
out
pop
inc
mov
test
mov
pop
or
jb
or
enter
sbb
lods
cmc
xlat
inc
dec
sub
int3
cmc
enter
fdivrl
sbb
or
mov
inc
sub
inc
add
mov
mov
icebp
push
dec
insb
mov
sbb
cmp
or
gs
push
xchg
sbb
mov
fdivs
add
add
sub
jne
ja
jo
xlat
jbe
aad
xor
dec
push
mov
sub
mov
push
or
leave
test
nop
ja
sub
mov
in
pushf
cmp
bound
inc
mov
or
mov
inc
adc
add
jle
cmp
je
hlt
mov
pusha
sbb
fs
or
lahf
or
mov
pop
add
aas
iret
inc
add
sbb
lock
add
fwait
pusha
notl
push
or
sub
je
popl
test
cmp
je
cltd
add
add
push
adc
jl
popf
pop
push
sbb
aaa
add
inc
iret
insl
inc
xchg
xchg
ljmp
loop
mov
pop
dec
cmp
int3
add
dec
xor
lds
and
push
jo
inc
sbb
outsl
or
push
sub
pop
fcmove
push
mov
pop
or
add
mov
aad
lea
mov
inc
in
xchg
and
or
incl
or
in
lret
push
xchg
pop
xchg
xchg
movsb
lods
imul
or
add
mov
jle
shlb
cmp
lret
jae
inc
ret
inc
mov
mov
add
pop
add
mov
pop
loopne
int3
adc
dec
nop
sub
sbbl
push
sub
inc
inc
sub
mov
xchg
aas
fsubrs
movsl
sub
adc
add
test
mov
xchg
int3
xor
cld
or
sub
sbb
sbb
xchg
imul
mov
shrl
or
pop
push
mov
dec
jge
mov
add
and
or
repnz
push
mov
or
mov
mov
movsl
rcll
or
xchg
xchg
inc
jnp
mov
pushf
loope
hlt
xchg
test
aad
xchg
cmp
push
je
test
ss
clc
cmc
inc
push
pop
dec
daa
mov
mov
inc
pop
add
jmp
or
and
scas
loop
sbb
pop
loopne
xchg
sub
or
out
fldenv
fwait
sti
test
and
subb
mov
push
adc
xchg
xor
inc
and
xor
add
and
dec
cs
adc
sbbb
pusha
mov
je
insl
cmpsb
sub
shrb
loopne
pop
jbe
pop
sbb
rclb
divb
daa
and
mov
and
imul
sbb
mov
xbegin
push
mov
push
cmp
test
mov
and
xchg
add
test
push
enter
push
mov
out
lcall
push
ret
scas
and
and
or
inc
mov
rclb
pop
sbb
lods
pop
pop
imul
and
jo
pop
lds
scas
mov
loope
dec
clc
cld
incb
fiaddl
fsubl
add
jl
call
imul
out
insb
add
sbb
lock
jmp
sbb
add
cmpsl
xchg
or
adc
mov
sbb
shlb
cs
lods
in
pop
aam
js
sbb
push
inc
jbe
mov
fiadds
popa
inc
adc
xor
cmpsb
notl
sbb
movsl
mov
pusha
mov
adc
add
add
mov
lret
pop
inc
sub
rolb
pop
pop
daa
cmp
lock
sub
cmp
sub
dec
je
ljmp
push
loope
addb
cmpsb
popf
sub
fwait
lret
adc
in
mov
push
add
add
fs
pop
mov
add
ss
movsl
add
sahf
and
repz
or
out
fstpt
sbb
nop
xorb
pop
xor
movb
push
add
repz
jae
inc
mov
jae
imul
xchg
popf
sbbb
shrl
adc
mov
and
and
pop
mov
sarb
cmpsl
insl
pop
and
add
movsb
push
or
out
rol
mov
ficomps
out
or
testb
adc
stos
add
sub
mov
mov
add
enter
enter
adcb
mov
cmp
insl
or
mov
adc
add
mov
and
jge
and
pop
negl
add
inc
inc
pop
lea
xchg
sbb
mov
xchg
push
mov
mov
pop
mov
mov
lods
je
dec
push
mov
sbb
mov
sbb
lods
cmpb
dec
cmp
sub
mov
sbb
pop
mov
pop
pop
jno
pusha
imul
in
test
add
cmp
cmp
cmp
add
and
clc
push
movsb
mov
push
pop
sbb
das
mov
add
mov
inc
inc
sub
add
mov
adc
cmp
daa
inc
and
push
sbb
inc
add
pop
mov
gs
mov
or
pop
jo
add
adc
adc
andb
pshufw
dec
xchg
xchg
and
pop
xor
inc
jg
rcr
rol
or
cltd
mov
pusha
adc
dec
mov
add
dec
sbb
test
fidivl
dec
imul
das
adc
add
adc
fadd
loope
aad
cmp
push
andl
or
add
insl
sub
jns
xor
fadds
xor
cmp
movsl
mov
mov
or
adc
cmp
mov
mov
adc
jmp
cmc
add
jl
adc
je
outsl
cmp
sbb
clc
mov
andl
outsb
cmpb
fs
dec
movb
mov
je,pn
inc
or
inc
lods
repz
adc
jbe
add
cmovno
or
cltd
pop
adc
je
push
sub
push
rcrb
cmp
adc
pop
sbb
sbb
ds
push
adc
insl
pop
mov
adc
shl
rorb
mov
inc
push
addl
shlb
icebp
movsl
or
xchg
stc
in
test
push
stc
loopne
cmpb
sbb
add
popa
icebp
or
add
sbb
sbb
push
push
je
outsb
std
adc
mov
stc
mov
pusha
test
cmpsb
push
test
pusha
pop
xchg
cmp
push
xchg
pusha
push
and
sbb
or
pop
cmp
jmp
dec
je
inc
cmp
mov
sbb
and
loope
push
sub
adc
pop
jl
xlat
jp
jo
sub
mov
adc
popf
jp
bsf
dec
movsb
adc
mov
je
add
and
mov
or
xor
fdivrs
je
mov
dec
or
or
dec
adcl
imul
push
out
add
add
adc
mov
sub
add
icebp
sub
outsl
mov
jne
add
rorb
push
push
mov
sub
lods
mov
sbb
lahf
push
inc
ret
adc
or
sub
jo
add
sbb
jae
mov
shlb
and
cmpb
ret
adc
xor
out
lret
or
push
jg
jb
xchg
inc
adc
jne
out
dec
fists
jg
mov
sbb
test
jne
rolb
test
call
cmp
push
add
lods
and
jmp
pop
or
add
adc
enter
xor
lcall
loope
mov
xchg
sub
dec
or
call
das
ds
mov
call
imul
sti
clc
push
sbb
pusha
popa
mov
test
xor
push
fnop
dec
aad
stos
or
and
push
adc
adc
dec
push
scas
xlat
enter
stc
cmp
add
iret
jp
insb
pop
pop
xchg
sbbb
mov
lea
mov
and
dec
sbb
inc
imul
adc
xor
push
dec
xchg
fadd
sub
orl
inc
sub
loopne
push
or
lods
xchg
add
pop
cmp
fwait
cmc
and
or
pop
sbb
cmpsl
das
adc
movsl
add
ret
jbe
mov
push
add
xor
mov
push
lods
inc
xchg
push
mov
cmp
xchg
and
mov
or
jo
rcrl
cmp
mulb
sbb
imul
and
cmp
cmp
xor
or
leave
cmp
or
xchg
shl
les
xchg
inc
ret
aas
push
sub
pop
xlat
mov
inc
xchg
repz
das
or
dec
pusha
inc
rolb
loope
add
and
or
sub
push
mov
sub
cwtl
pop
adc
mov
sbb
js
mov
jg
pop
add
or
mov
xchg
cmp
sarb
xchg
shl
jne
cmp
adc
mov
ret
dec
rol
movsb
int
mov
js
sahf
out
sbb
and
xchg
inc
mov
and
imul
ret
rolb
inc
jecxz
lret
fcoml
and
or
and
dec
dec
adc
arpl
and
xor
or
add
mov
packssdw
addb
cmpl
out
nop
and
test
mov
mov
js
outsl
ljmp
and
rcll
pop
pop
daa
movsb
mov
sbb
and
dec
push
nop
push
ss
push
pop
das
dec
push
fs
mov
push
mov
and
xchg
add
aaa
adc
stos
mov
or
or
xor
daa
push
sbb
adc
pop
pop
mov
inc
stos
mov
cmp
lret
outsl
dec
mov
inc
daa
adc
jno
mov
jmp
mov
push
or
sbb
cltd
mov
add
pop
pop
mov
add
jp
mov
push
sbb
xlat
xchg
jo
dec
stc
or
and
and
dec
and
xchg
in
dec
xor
punpckhdq
push
sub
pusha
les
lods
cmp
lret
jns
mov
cmp
insb
test
sbb
xchg
sub
and
jp
imul
inc
adc
push
ret
sub
test
mov
pop
outsl
rclb
and
inc
aaa
popa
mov
mov
xor
mov
cmp
sbb
push
lahf
daa
call
sub
aaa
and
and
movsl
cmp
pushf
lods
xchg
and
insb
mov
push
sbb
pop
xor
sbb
sub
adc
loopne
xchg
es
in
das
clc
cmc
scas
test
mov
movsl
es
inc
pop
or
test
loopne
jno
and
mov
loopne
pop
adc
mull
push
lcall
adc
mov
and
push
lods
push
add
stos
mov
or
fmulp
fiadds
mov
aas
jmp
xchg
mov
mov
adcb
sbb
shrb
jl
or
into
clc
imul
pop
xor
push
push
test
and
pop
lds
rorb
pop
lahf
fwait
test
inc
pop
ret
add
roll
lock
clc
mov
js
xchg
xchg
inc
pop
inc
leave
and
and
mov
dec
push
cmpl
dec
ja
adc
ja
pop
mov
mov
dec
daa
aas
dec
test
mov
and
pusha
clc
cmp
push
je
fwait
repnz
jnp
push
pop
dec
and
call
or
or
jle
jbe
inc
push
mov
lock
mov
cmp
push
xchg
dec
mov
add
retw
lds
pop
dec
cmpsl
dec
and
mov
fucomip
test
popa
aaa
hlt
adc
dec
xor
insb
loopne
adc
xchg
pop
lahf
xor
jne
cvtdq2ps
sbb
mov
pusha
and
cmp
add
test
pusha
sti
lds
je
lods
sbbl
es
sarb
and
int
lret
xor
rorb
pushf
push
mov
pop
stos
repnz
scas
ds
mov
add
inc
enter
and
adc
sarb
sub
add
sbb
add
lock
xchg
ret
inc
or
inc
inc
mov
jmp
dec
enter
iret
dec
inc
and
adc
or
shrb
pop
aas
sub
push
sbb
xchg
inc
adc
sub
xor
cld
sub
inc
insl
adc
xchg
xorb
mov
xor
outsl
push
idiv
inc
jge
cmp
inc
cmp
ret
dec
adc
lock
mov
pop
add
fdivrl
mov
insb
push
pop
xchg
jmp
nop
mov
add
shlb
enter
pop
ret
xor
push
nop
daa
sbb
imul
fisttpl
mov
cs
cmpsb
jno
inc
adc
dec
add
sbb
orl
aaa
dec
icebp
push
loop
inc
push
xlat
movsb
and
xchg
xor
and
cmpsb
add
sbb
data16
and
inc
pop
dec
in
int3
jl
nop
aaa
sbb
or
sub
jns
xlat
loop
int
dec
nop
mov
out
or
xor
adc
xor
or
dec
es
add
ja
xchg
hlt
cld
mov
bound
add
adc
and
sahf
popa
inc
sarb
or
pop
sbb
out
adc
orb
add
push
push
mov
loope
pop
sub
and
adc
or
pusha
andl
ds
loopne
cmpsb
inc
add
test
inc
inc
orl
nop
sub
adc
ds
popa
lods
cmp
cli
mov
push
sub
mov
adc
push
cld
lods
loope
sbb
data16
xchg
add
adc
xor
pop
pop
fwait
inc
lods
out
cwtl
ficomps
sbb
pop
mov
mov
les
lea
push
dec
rorb
int3
sub
fdivr
ljmp
sbb
inc
ret
jg
and
inc
popa
adc
test
xor
push
cltd
int
sbb
mov
sarb
jne
cmp
or
cmpb
ror
xorl
xchg
xor
out
shlb
jnp
flds
cmc
enter
inc
cmpsl
lea
jg
in
mov
insb
xlat
push
or
test
dec
sub
inc
movsb
sbb
ret
add
pop
jne
xchg
push
dec
lea
rolb
mov
mov
sbb
inc
jno
pop
adc
nop
cmp
mov
push
mov
cwtl
mov
xchg
xor
and
push
lea
xorl
add
lahf
mov
fcompl
loop
push
mov
les
mov
stos
jbe
inc
sub
add
jl
inc
jnp
pop
imul
add
subl
adc
pop
jmp
pusha
push
mov
mov
sahf
lret
and
dec
sarl
pop
or
out
pop
les
je
cmp
icebp
adc
push
adc
jge
push
ficomps
mov
sbb
mov
imul
movsl
xor
sbb
inc
in
pop
test
jno
and
cmp
or
insb
xchg
dec
sub
popa
xor
mov
pop
jmp
lods
lret
xor
stos
sbb
mov
popa
adc
mov
xchg
sub
fsts
mov
add
dec
cli
push
je
test
push
adc
xor
sub
pusha
scas
mov
andl
mov
pop
sarl
cli
mov
pop
repz
mov
mov
pop
fiadds
mov
movsb
pusha
filds
lods
sahf
pusha
repnz
pop
mov
push
data16
ljmp
rclb
clc
add
lock
or
add
mov
xor
pop
adc
arpl
xchg
sub
dec
les
lahf
jne
clc
fbld
pushf
rcr
push
imul
add
and
and
dec
nop
or
sar
fistpl
inc
jmp
jge,pn
mov
sub
popa
adc
adc
cld
add
or
sbb
scas
and
inc
push
push
jl
popa
pop
cmpsb
xlat
inc
mov
loop
adc
xor
push
subl
dec
into
sbb
rcrb
out
addb
xchg
ss
jmp
in
into
cltd
add
fisubs
jno
dec
pop
repz
sbb
inc
pop
inc
jne
sub
push
daa
ret
faddp
jmp
cmp
add
and
cmp
push
xchg
mov
rolb
push
push
sti
pminsw
sbb
fnsave
and
mov
add
fdivrs
test
add
push
xor
fucomi
and
xor
cmpsb
jo
and
xchg
dec
jns
cmp
sbb
addl
xlat
loopne
sbb
inc
jo
or
xchg
add
adc
mov
dec
clc
sbb
mov
jp
lea
cmp
imul
inc
imulb
and
dec
adc
jns
enter
popf
push
out
movsb
aas
jne
js
mov
orb
je
fldenv
mov
adc
inc
pusha
gs
sub
fldenv
lods
dec
mov
and
mov
enter
add
aas
mov
int3
push
cld
and
fisubrl
movsb
orb
xor
lods
sbb
shr
movsb
inc
dec
cmp
or
out
out
outsl
movsb
pushf
aas
jmp
jo,pn
dec
inc
call
push
loope
cld
pop
xchg
inc
adc
sbb
popf
dec
loope
in
dec
mov
lods
push
fbld
xor
and
xlat
test
pop
mov
lret
adc
insb
xchg
in
or
xchg
and
jmp
xchg
aaa
pop
out
xchg
push
je
cmpsl
js
xor
out
clc
push
push
add
movsb
inc
cmp
fidivs
mov
pusha
bound
or
or
add
inc
mov
xor
pusha
push
or
sub
inc
jae
mov
mov
inc
dec
cmp
dec
addr16
daa
cli
push
pusha
pop
repz
sub
push
add
xchg
or
mov
mov
xor
les
scas
mov
hlt
rcrb
inc
xchg
add
cmpsl
aam
mov
mov
push
adc
or
orb
jo
cmp
adc
push
shlb
adc
xchg
add
xchg
mov
xor
dec
cmp
sub
aaa
sbb
test
sbb
stos
xchg
sarb
add
fbld
xchg
adc
add
fistps
jmp
mov
or
insb
mov
loop
es
push
hlt
fldcw
and
cmpl
dec
inc
sbb
inc
roll
sbb
ss
or
call
cmp
sbb
lcall
outsb
fstps
cmp
add
or
mov
pop
test
xor
add
mov
fcmovnb
mov
sub
jo
jg
xchg
sub
jmp
or
mov
push
xchg
imul
xlat
dec
pop
inc
cmp
sbb
and
xor
or
test
inc
adc
sarl
rcrb
mov
inc
inc
jb
cmpsb
push
imul
sub
rorl
mov
cmp
stc
sbb
xchg
sub
mov
shl
add
pop
fwait
je
mov
jg
mov
pop
mul
je
add
mov
push
add
jno
sahf
mov
dec
xchg
imul
cmp
je
test
aaa
adc
imul
xor
xor
or
test
fnstcw
pop
jne
inc
enter
xor
lods
inc
movsb
dec
or
loop
ret
xchg
je
daa
loopne
ljmp
sbb
adc
inc
outsb
dec
xor
or
pop
push
cmp
push
fnstenv
jb
sub
aas
gs
es
inc
cmp
jb
dec
xchg
or
or
icebp
pusha
cmpsb
inc
push
mov
movl
sbb
and
out
add
mov
das
mov
xchg
lock
or
add
xor
dec
iret
lds
sbb
cmp
fnsave
jge
push
and
push
add
ret
push
rcll
xchg
inc
mov
shl
sub
ret
outsl
jnp
xor
push
push
popf
jmp
pop
mov
dec
and
push
arpl
int
xchg
sbb
mov
and
test
xchg
cmp
jno
jg
inc
push
dec
pop
or
jmp
das
xchg
and
xchg
icebp
insb
mov
nop
pop
jp
xor
push
push
mov
xchg
jl
adc
sbbl
test
push
and
inc
and
inc
or
sbb
xor
addr16
rclb
push
pop
shlb
js
mov
dec
sub
or
movb
inc
mov
nopl
xchg
inc
imul
push
or
adc
or
pusha
lcall
jmp
mov
sub
xorb
mov
iret
es
insl
jnp
xor
sub
insb
and
adc
add
inc
or
stos
add
push
dec
in
dec
enter
mov
shlb
sub
mov
adc
cmp
sub
and
push
adc
push
inc
sub
sbbb
cmpb
mov
push
popf
mov
dec
pop
sub
adc
cltd
stos
lock
shlb
and
sbb
and
rolb
inc
xchg
inc
or
sub
mov
or
sbb
fcoml
inc
repz
xchg
shrb
xchg
xchg
or
or
sub
adc
pusha
adc
adc
mov
cmp
or
or
cmp
inc
push
rcrb
inc
out
or
xor
lds
mov
jge
lea
mov
sub
jne
clc
jmp
shlb
adc
pop
lcall
adc
rsqrtps
and
add
inc
add
aam
inc
repz
cmp
arpl
cmpsb
mov
or
sbb
imul
iret
inc
pop
ret
mov
int3
hlt
add
mov
jmp
jge
lahf
out
jg
ja
pop
dec
outsb
lock
dec
pop
add
in
je
fucomi
pusha
adc
mov
push
fistpll
jae
enter
add
cs
aas
inc
or
fs
mov
sbb
xor
inc
and
or
push
or
cmc
and
movsb
fidivl
xor
jae
lea
add
inc
push
orl
mov
icebp
sti
pop
sti
or
pop
or
sbb
push
clc
mov
adc
addr16
mov
adc
jae
addl
sub
pop
es
push
imul
pop
xor
addr16
push
add
nop
pop
je
push
in
cltd
and
fs
inc
loopne
add
mov
pushf
pop
add
addb
xlat
pop
cmp
fsubrl
nop
pop
or
ja
pop
gs
xchg
sub
adc
and
int
and
or
pop
and
rcll
jb
add
sub
xchg
daa
enter
adc
loope
fsubr
sub
inc
imul
push
and
inc
ja
js
or
lods
pop
xchg
js
rol
xor
push
dec
cwtl
adc
xchg
push
stos
jge
jbe
pop
xor
dec
add
or
jns
pop
xor
rorl
mov
inc
das
js
or
insb
mov
xlat
pop
cmp
sbb
mov
addr16
leave
test
inc
lret
sub
pop
inc
add
aaa
filds
inc
call
mov
movsb
enter
aad
mov
fists
push
push
mov
add
add
iret
pop
xor
pop
and
push
ds
jnp
pop
ret
push
add
and
outsb
outsl
insb
dec
push
xchg
pop
dec
test
leave
cmp
out
pop
push
pop
popf
add
pop
imul
lahf
addl
ds
popf
std
xchg
mov
push
paddb
daa
daa
daa
daa
jmp
loope
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
ljmp
daa
out
out
rcl
daa
daa
daa
daa
rcl
aam
daa
daa
daa
daa
xlat
fcomp
daa
daa
daa
daa
fcmovu
daa
daa
daa
daa
rol
daa
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
lret
int
daa
daa
daa
into
iret
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
add
popf
and
das
xchg
push
push
or
out
in
and
mov
ret
mov
push
dec
dec
sar
movsl
movsb
bound
dec
adc
push
lock
sub
cmc
or
dec
mov
inc
push
pop
xor
orl
divb
and
fmull
fwait
inc
mov
jnp
mov
mov
add
rorl
xorb
pop
sbb
test
or
sub
adc
or
inc
test
cmp
cmp
mov
or
jne
add
mov
mov
push
and
push
dec
adc
xor
test
mov
sbb
and
rcl
outsb
shlb
xchg
ret
push
pop
dec
push
add
jl
adc
mov
xchg
xchg
shlb
aas
dec
sarb
imul
lahf
pop
push
out
pop
daa
sbbb
push
push
sbb
mov
mov
inc
mov
pmaddwd
cs
pop
popf
stc
lods
adc
xchg
aam
sbb
nop
addl
leave
inc
inc
mov
or
nop
enter
pushf
adc
adc
inc
movsb
shll
adc
dec
add
mov
outsb
flds
push
addl
loope
rcll
xor
lcall
push
subps
dec
push
cmp
mov
loopne
and
jae
scas
inc
mov
arpl
daa
inc
test
xor
pop
out
leave
lods
addb
xor
pop
test
dec
test
inc
and
inc
addl
dec
fs
sbb
adc
push
and
iret
pop
xor
add
inc
push
in
adcl
test
sbbl
sub
gs
jne
pop
sub
pop
sbb
jnp
nop
test
pushf
test
adc
movsl
dec
push
jbe
mov
push
ja
pop
cmp
xor
gs
movsb
incb
ret
les
sub
addr16
outsl
inc
test
dec
mov
roll
jne
aam
pop
dec
push
cmp
and
push
xchg
dec
sbb
adc
into
ja
add
dec
add
cmp
adc
out
and
loope
mov
hlt
xorl
push
aaa
fistpll
jnp
xlat
sbb
xchg
addr16
pop
in
dec
sbb
xor
xor
movsb
stos
lret
pop
push
dec
mov
jmp
bound
mov
xchg
fcomps
sbb
or
fidivs
add
test
xchg
mov
adc
fldenv
cmovo
out
push
xor
add
jle
push
pushf
lods
lahf
insb
or
and
dec
cmp
push
dec
into
or
pop
fimuls
xchg
add
aad
xchg
dec
dec
lret
mov
fiadds
loope
pusha
inc
xor
cmp
mov
pusha
and
and
lea
adc
push
mov
mov
sbbb
xlat
pop
rcrl
cmp
shlb
sub
pop
jbe
push
unpcklps
sbb
addb
lahf
out
loopne
pop
sbb
push
call
pop
ret
fmull
cwtl
fildl
and
testl
cld
push
cmp
cmp
jo
sub
push
js
xor
js
xchg
mov
movhps
clc
or
paddb
js
inc
add
inc
jae
les
pop
enter
add
push
outsb
rcr
icebp
mov
or
sbb
sbb
in
adc
pop
addr16
pop
sub
mov
mov
test
shll
mov
xor
xchg
push
mov
aaa
loop
and
inc
sbb
cmp
add
movb
sti
sbb
jmp
movzbl
mov
sub
jne
cmp
lds
jae
push
es
jg
data16
add
or
dec
repz
ret
push
and
add
shlb
xor
jge
xchg
ss
jmp
add
and
les
xor
xor
mov
or
lock
and
mov
je
stc
dec
and
sub
or
sets
mov
mov
inc
or
sbb
jne
or
add
punpckhdq
outsb
lods
inc
dec
dec
and
rcrl
xor
dec
pop
adc
mov
add
ret
inc
fcmovnbe
retw
lds
js
mov
sti
je
push
add
lock
or
loopne
cmp
shrl
push
add
sbb
das
xchg
andl
push
ficoml
stos
add
popf
sub
call
cmp
shlb
xchg
ret
jno
add
jg
add
shlb
shlb
inc
pop
add
into
les
pop
mulps
mov
sub
mov
adc
lea
add
loopne
dec
add
add
loope
inc
rclb
sarl
sbb
sub
mov
add
and
mov
je
cmpsb
pop
call
xchg
andl
aas
shlb
pop
and
mov
lea
mov
leave
sub
inc
data16
inc
in
rorb
lret
or
nop
shll
cltd
or
dec
and
rolb
pop
test
mov
add
movsb
ret
add
add
or
test
aas
mov
sbb
test
inc
loop
ds
adc
ljmp
sbb
adc
push
push
push
push
and
movsl
dec
lahf
ss
push
mov
inc
or
dec
into
jge,pt
adc
int
jmp
and
add
repz
clc
or
cmp
push
movsl
scas
xchg
les
scas
js
ret
inc
mov
mov
xchg
orl
test
roll
sbb
pop
mov
inc
mov
or
into
sbb
and
rcll
movsl
or
adc
sub
lods
adc
clc
test
adc
ja
or
push
inc
mov
enter
rolb
dec
subb
pop
jecxz
sub
xchg
hlt
pop
test
inc
aaa
lret
push
dec
sub
mov
shl
js
inc
pusha
xor
ret
mov
sbb
out
add
sub
sub
clc
fisubrl
mov
lea
test
ret
and
fsub
scas
cmpsb
add
inc
inc
rcl
rorl
jmp
sbbb
xchg
push
or
jbe
rcrl
movsb
pop
test
adc
mov
inc
jle
xorl
push
xchg
lock
pushf
mov
sub
mov
mov
clc
mov
mov
adc
sub
push
xor
inc
mov
cli
hlt
adc
mov
or
inc
and
inc
loope
out
or
inc
adc
insb
and
adc
aaa
sbb
xchg
push
ja
and
gs
jmp
dec
addb
push
or
cwtl
or
xor
add
inc
sub
mov
push
or
inc
and
out
in
callw
sub
xlat
subb
lds
jmp
mov
nop
xchg
inc
add
mov
inc
jne
sub
jg
jb
and
inc
jbe
test
popa
jb
adc
movsb
movsb
data16
inc
sub
sbb
add
pop
mov
add
jo
add
in
cmp
dec
ljmp
jmp
and
movlps
add
push
adc
test
lock
sbb
subb
loope
dec
je
adc
das
dec
xor
xchg
mov
ret
push
sbb
pop
push
xlat
je
sub
mov
ja
inc
dec
jne
xor
cli
or
inc
lea
rol
in
sbb
rol
ret
inc
push
shr
or
nop
mov
cmp
mov
jo
or
inc
mov
push
popa
push
lods
mov
sub
pop
test
dec
dec
das
or
mov
sub
ja
add
add
xchg
mov
loopne
cmp
lea
inc
sub
sub
arpl
adc
or
sub
and
and
mov
and
adc
sub
cli
mov
xchg
and
fyl2xp1
mov
or
jle
add
adc
repnz
cmp
mov
inc
mov
ret
popa
or
cmp
hlt
es
jne
mov
fbld
js
leave
ss
cmp
sub
es
or
push
fimull
xchg
mov
sbb
out
xlat
das
pusha
jecxz
pop
add
lea
fwait
imulb
sub
inc
xchg
mov
hlt
or
cli
mov
jmp
lahf
jg
jp
inc
clc
in
jne
clc
ja
imul
test
sbb
jbe
or
jnp
lcall
cmp
jmp
dec
and
pop
add
int3
jo
inc
add
mov
insb
dec
cmp
int3
cltd
adc
and
jge
add
mov
add
test
movsl
jbe
movsl
mov
mov
ror
and
push
dec
mov
cmp
jne
jp
sub
or
xor
pop
xlat
adcl
add
mov
push
sar
mov
mov
jmp
dec
dec
add
xor
mov
not
inc
lea
mov
or
jle
pushl
cwtl
test
inc
aas
push
cwtl
test
cmp
mov
or
pop
iret
jae
fsts
sysenter
inc
aaa
or
movsb
movsb
pushf
jp
fs
pushf
and
into
clc
cwtl
pop
xchg
xor
lret
or
adc
add
push
or
in
ss
cmp
je
mov
stos
and
scas
roll
mov
mov
mov
pop
les
test
push
adc
sub
cmp
or
dec
bound
imulb
and
dec
js
outsl
mov
adcb
not
dec
fwait
and
sti
push
fbstp
test
xor
sub
stos
out
cmp
pop
test
inc
and
sbb
inc
push
xor
pop
mov
lea
mov
mov
sbb
lret
and
scas
in
cmp
xchg
das
je
aas
rol
or
or
roll
inc
pop
xchg
add
and
add
insl
add
sub
shlb
test
or
sbb
mov
push
jg
and
add
aas
inc
cmc
outsl
andl
pushf
aas
in
lock
pushf
dec
outsl
mov
xchg
fcomi
loopne
or
out
mov
leave
sbb
and
cmp
add
ficompl
xchg
push
jge
lahf
cwtl
add
add
lds
mov
stos
mov
ds
sbb
adc
shrb
sar
jg
sub
jb
inc
xchg
cmp
je
cmpsl
lea
adc
jle
ja
pushl
imul
jb
inc
xchg
mov
pop
push
decb
sbb
jne
add
test
jne
incl
jmp
rorb
icebp
std
les
adc
sbbl
pop
aad
es
data16
das
cmp
cli
ja
in
mov
movsl
repnz
inc
dec
adc
int3
push
daa
icebp
add
int3
inc
add
adc
sub
or
clc
mov
in
lods
mov
test
jmp
inc
jmp
pop
in
xor
or
sub
mov
popf
adcl
outsb
add
sarl
in
sub
and
call
orb
ja
push
or
iret
add
adc
inc
or
sub
pop
adc
inc
lahf
mov
xchg
dec
and
lock
fs
cmpsb
add
lock
scas
orb
cmpsb
jne
call
inc
jg
cmpl
jbe
xor
outsb
addl
sub
sarb
adc
ss
test
in
clc
or
rcrl
icebp
cmp
add
mov
xchg
scas
adc
jg
or
pop
les
lods
mov
fwait
sub
sti
loopne
loopne
mov
mov
ficoms
xor
inc
sub
jne
sub
ret
pop
arpl
test
adc
mov
sub
xchg
roll
sbb
push
add
loop
fbld
inc
test
xchg
out
xlat
addr16
out
inc
aad
mov
andb
fnstcw
daa
or
gs
rol
mov
nop
push
xchg
fs
pop
icebp
adc
jge
push
jo
sarl
call
or
xchg
outsb
or
adc
test
test
add
fcomp
pop
fcomp
jl
test
cmpsb
inc
pop
mov
mov
add
inc
cmp
in
pop
add
gs
push
or
mov
dec
lea
inc
test
push
mov
sub
daa
pop
jl
mov
bound
popa
add
xchg
stos
or
fisubs
pop
add
mov
lahf
es
push
dec
or
bnd
lds
dec
jbe
sub
cmp
inc
arpl
je
adc
xor
and
and
or
mov
pop
and
test
or
ja
push
cmp
mov
jl
adc
mov
pop
sub
adc
jle,pn
das
sub
mov
mov
xchg
out
inc
push
cmpb
add
xchg
out
nop
test
pop
sbb
sub
push
pushf
jb
mov
mov
lret
leave
in
or
xchg
xchg
adc
pushf
pop
dec
mov
jb
cmp
and
sub
insl
int3
je
cltd
movsb
fwait
rcrb
nop
aam
push
es
loopne
dec
sub
xor
nop
test
push
cltd
movsb
inc
lock
hlt
xchg
push
es
jnp
pop
addr16
and
and
add
or
mov
adc
dec
cs
pop
sbb
dec
aaa
leave
rcrl
or
sbb
fcomps
movsb
xor
hlt
and
stos
sub
sub
mov
insb
mov
cmp
lea
xor
sbb
inc
cmpsb
lds
aam
cmpsb
rcll
xor
mov
sarb
add
scas
rorb
mov
pop
inc
bound
adc
add
and
and
xchg
sbb
mov
pop
xor
xlat
dec
xchg
or
fstl
and
pop
pop
out
mov
jns
divl
inc
xchg
mov
add
pop
nop
mov
pop
loop
pop
add
fcom
outsb
gs
insb
out
or
das
push
mov
cmp
xor
lret
bound
adc
or
mov
outsl
aaa
or
shlb
aas
jg
pop
insb
ret
mov
test
lahf
aaa
or
test
scas
jae
jo
push
mov
or
push
cwtl
xlat
jb
out
mov
push
jnp
aaa
or
jnp
andb
fadds
inc
xchg
push
add
xor
shlb
add
cld
std
out
or
xor
fcoms
add
xor
mov
cs
inc
mov
cli
adc
cmp
mov
inc
dec
pop
jmp
loope
nop
mov
hlt
movsl
cmp
fsubs
push
mov
push
stos
cmp
dec
cmpsl
ja
hlt
add
cs
outsb
add
mov
dec
movsb
orl
and
in
sub
xor
add
das
sbb
repnz
xchg
sbb
lods
cmpsl
lods
sub
sub
push
add
insb
fcompl
movsl
jno
int3
lcall
inc
fwait
rcr
addl
adc
jns
rorl
dec
loop
scas
test
rolb
inc
ficoml
lcall
outsl
xor
inc
lea
pop
imul
pop
xchg
mov
cmp
mov
dec
daa
sbb
inc
inc
push
sub
imul
push
daa
and
stc
xor
pop
xlat
push
sbb
pop
mov
xchg
cwtl
fsubl
xor
andl
cmpsb
jae
and
add
ja
cmp
add
ja
xor
add
sbb
dec
push
lods
scas
loope
adc
daa
inc
add
pop
mov
or
push
pop
adc
add
scas
mov
push
aad
mov
scas
push
xorb
xchg
in
or
dec
inc
xlat
scas
cmpsl
mov
or
cs
jb
and
add
mov
jo
ljmp
dec
sbb
xchg
sub
mov
shlb
mov
loope
in
filds
push
aad
mov
adc
test
inc
xlat
cmp
adc
cmp
arpl
ret
xchg
shrb
leave
ret
call
mov
dec
jmp
cmc
or
and
mov
inc
push
test
pop
mov
push
add
dec
stos
sbb
inc
mov
test
or
sub
nop
lcall
jae
jo
mov
cmp
mov
and
lock
xchg
or
push
fcompl
or
imull
dec
add
roll
mov
ss
lahf
mov
sbbb
inc
js
enter
xchg
cmpsl
add
ss
scas
loopne,pt
or
push
push
mov
and
bound
inc
ret
mov
jmp
xor
mov
addr16
clc
xor
sub
jl
out
inc
add
bound
dec
mov
jno
cld
jecxz
sub
dec
insl
inc
and
pop
add
repnz
mov
adc
and
pop
adc
lods
push
mov
bound
pop
inc
movsl
repnz
jne
add
adc
dec
mov
mov
cs
stos
and
pop
jb
or
mov
mov
mov
and
sbbl
shrd
add
mov
sub
repnz
movzwl
lret
andb
pusha
mov
andl
inc
mov
and
bound
push
pop
mov
mov
adc
pop
adc
lods
lahf
js
icebp
xchg
stos
mov
pop
jmp
sbb
adc
mov
cmp
push
loop
lock
push
mov
pop
in
pop
cmp
inc
loopne
and
adc
daa
push
pop
sbb
xor
sbb
adc
push
inc
hlt
lcall
test
pop
pop
dec
jle
clc
and
sub
lret
shlb
dec
fwait
and
inc
push
pop
sbb
in
xor
lahf
clc
push
pop
mov
push
xchg
insb
lds
xchg
lea
jl
jo
out
add
andl
xchg
cmpsl
hlt
faddp
inc
adc
add
mov
mov
jo
loopne
hlt
scas
rcrl
dec
sub
roll
test
dec
xor
sub
mov
sub
pop
mov
adc
xchg
sub
clc
mov
xchg
mov
sbb
daa
sbb
xorb
push
jne
inc
pop
les
lods
and
test
imul
addr16
sar
xor
push
mov
lds
loopne
inc
push
ret
movsb
adc
adc
dec
jecxz
xlat
into
and
lods
lea
pop
fldenv
dec
ror
fwait
inc
push
push
xchg
xor
lea
leave
sahf
lea
sbb
lods
test
das
hlt
stos
pop
sbb
in
ss
rolb
ret
add
test
pop
push
rcll
mov
xchg
xchg
fimull
mov
add
mov
mov
ja
pop
dec
inc
lahf
aaa
ret
and
repz
test
push
lret
pop
dec
mov
add
test
out
sbbb
pop
fdivrs
jmp
xor
lds
mov
rorb
sbb
pop
pop
add
dec
ds
js
sub
in
dec
adc
stc
jl
inc
push
test
or
test
adc
repnz
les
or
xchg
add
cmpsb
adc
inc
nop
adc
and
mov
pop
sub
jl
inc
lea
mov
fcoml
leave
fmull
or
ret
lcall
popa
add
and
sbb
dec
aas
and
and
int3
in
push
push
adc
dec
or
mov
mov
ss
cmp
inc
bound
xchg
push
xor
push
into
sbb
xchg
adc
cmpsl
mov
movl
ud2
pop
inc
loopne
js
les
je
jecxz
lock
cld
daa
cmp
jl
mov
jge
cmp
loop
jle
mull
push
push
filds
inc
dec
jne
mov
and
push
pop
ret
inc
jbe
js
xor
push
sub
xchg
pop
fwait
and
or
sbb
adcb
xor
rorb
es
xlat
push
vshufps
hlt
movsb
jo
inc
cmp
scas
clc
dec
repz
add
xchg
cmp
sub
and
or
movl
xor
push
js
push
cmp
mov
inc
or
ret
test
mov
push
mov
mov
pop
enter
pop
loopne
or
inc
inc
or
or
hlt
into
add
mov
add
dec
sbbb
popf
push
inc
pop
add
cmp
adc
enter
stos
and
pop
xchg
pusha
shll
xchg
sub
inc
ret
mov
loopne
jmp
rorb
enter
fwait
hlt
lock
sbb
je
cwtl
adc
xor
jmp
adc
cld
fsubrl
cwtl
call
jb
dec
mov
push
xchg
pushf
sub
xorb
jbe
push
inc
outsb
push
lcall
jne
inc
sti
xchg
imul
setle
stc
adc
scas
xchg
jg
mov
cmp
push
pop
or
int3
lret
fldcw
and
lret
pop
int3
adc
xchg
xor
test
mov
rcrb
loope
and
add
mov
cmpsl
and
cmp
pusha
adc
mov
jl
into
rorb
lahf
push
daa
mov
sarl
sub
mov
pop
jbe
add
sbb
je
inc
rcr
outsb
push
gs
xchg
pop
ffree
push
call
pop
sbb
sbb
rclb
jp
sub
xchg
add
jnp
loopne
in
adc
add
cs
jle
sbb
fdivrs
int
add
popa
sub
push
push
jns,pt
add
mov
ss
rorb
stos
loope
popf
jne
mov
inc
inc
and
hlt
lea
or
sbb
in
lock
lock
push
je
xchg
sub
out
and
aam
push
mov
ret
add
mov
add
shll
sahf
lret
mov
dec
and
pop
or
ret
clc
std
int3
fimuls
xchg
jo
mov
sbbb
add
inc
loopne
and
and
push
mov
nop
scas
mov
cmpsl
add
dec
in
inc
sbb
into
inc
shll
push
out
xor
sbb
in
xchg
cmpsb
jle
lock
pop
int
jge
ljmp
sub
jb
adc
xchg
addr16
push
push
cmp
and
fwait
in
add
push
cmpsl
test
pop
icebp
punpckhdq
adc
cmovns
mov
je
imul
das
lock
scas
or
cmp
adc
push
test
imul
rcrl
or
iret
cmpsl
pop
cltd
pop
or
xor
cmp
mov
push
add
adc
int3
icebp
nop
pop
and
test
lcall
aaa
jnp
nop
ss
addl
lock
ret
mov
inc
xchg
mull
loope
mov
xor
sti
mov
mov
pop
clc
xchg
roll
adc
das
lcall
pop
inc
adc
mov
mov
add
xor
lods
or
adc
xor
sub
sbb
mov
jae
js
dec
cld
je
bound
xor
sub
rcrb
cwtl
pop
xlat
pop
dec
jecxz
outsl
lret
or
xor
add
sar
or
inc
imul
push
pop
nop
subb
adc
add
adc
push
push
push
inc
inc
fs
inc
add
add
xor
and
pop
arpl
mov
enter
mov
sub
xchg
xchg
mov
mov
pop
pop
and
push
je
pop
pop
andl
fidivs
add
clc
dec
jb
lret
jg
cmp
sbb
xchg
decb
loopne
insb
adc
ret
shll
pop
xchg
xchg
mov
mov
sahf
add
xor
test
push
cwtl
mov
and
pop
clc
adc
fldt
js
or
or
lock
inc
lea
loopne
les
push
ret
mov
out
xor
or
lea
rcll
fimuls
xor
push
add
sahf
es
pop
add
inc
pop
das
add
in
leave
insb
jg
les
and
or
add
lret
sbb
in
or
lds
daa
and
aaa
mov
out
testb
js
mov
dec
lods
jo
cld
push
jns
mov
idivl
shrb
inc
mov
xor
aaa
jecxz
inc
mov
and
mov
and
cmp
sub
aaa
xchg
push
clc
or
movsl
sbb
ja
push
sbb
mov
or
jne
sub
test
push
push
xchg
fbld
mov
push
shlb
mov
xor
ljmp
aaa
sbb
push
mov
or
mov
xchg
mov
jo
pop
push
add
cld
adc
fcmove
xor
popf
xor
nop
push
aaa
pusha
in
cmp
hlt
push
mov
adc
jno
dec
mull
enter
loop
aad
push
rcrb
je
loopne
call
negl
fmull
cld
cld
loope,pn
inc
jmp
js
inc
imul
cmp
mov
and
rorb
cmpsb
fwait
lock
xor
or
mov
mov
dec
mov
mov
mov
jge,pn
inc
push
mov
incl
sbb
insl
inc
jne
jb
fcoms
das
int
or
add
call
pusha
mov
lcall
sbb
aam
mov
mov
leave
and
nop
add
scas
in
add
or
pusha
or
lcall
inc
jle
mov
stos
push
jb
fcoms
and
arpl
popl
and
sbb
stc
fstps
shlb
fimull
add
or
inc
mov
add
add
cmpsb
bound
pop
add
and
pusha
or
add
or
dec
xchg
lock
mov
mov
movsb
arpl
pop
inc
dec
xor
sbb
rcll
dec
daa
leave
add
push
lcall
hlt
and
sbb
popa
pop
aaa
movb
jl
arpl
xor
rcll
pop
push
fisttpll
or
andb
daa
in
sbb
clc
clc
cmp
pop
mov
pop
jb
push
movl
xorb
fimuls
pop
add
aaa
lcall
cld
push
frstor
ja
or
arpl
repnz
aaa
imul
mov
dec
aaa
daa
pusha
mov
lcall
and
aaa
jo
push
aaa
inc
push
sbbb
andl
or
aaa
add
mov
fxch
inc
add
jb
pushf
xchg
loopne
or
or
cmp
nop
push
leave
sub
shlb
inc
lcall
testl
test
int3
mov
test
in
ret
insb
rsm
loop
sub
jb
loop
cmovl
pusha
add
push
jecxz
or
mov
nop
xor
enter
mov
xor
in
jecxz
setns
adc
jb
push
adc
xor
ljmp
pop
daa
sbb
shl
nop
add
fsub
add
add
fsub
fsub
imul
adc
push
leave
or
in
pusha
clc
jno
outsb
cmp
inc
push
sbbb
andl
or
aaa
sbb
sbb
add
inc
out
push
sbbb
add
jb
add
ja
sub
orl
dec
in
push
and
and
and
inc
push
enter
nop
adc
xor
jae
call
sbb
sbb
xor
jb
sbb
and
mov
ljmp
imul
xor
jbe
enter
adc
add
daa
icebp
xor
sbbl
sbb
sub
sub
sbb
and
or
rcr
aam
das
insl
inc
sbbb
xor
add
dec
dec
inc
lcall
sbb
insl
rclb
sub
inc
dec
xor
add
pop
enter
in
xor
nop
or
and
pop
jno
cmpsl
imul
add
add
mov
xor
dec
enter
in
push
cmp
es
aaa
adc
and
movsb
shlb
out
dec
aas
sbb
and
lcall
cmp
jae
out
inc
xchg
add
add
or
lcall
cmp
aam
in
out
push
jae
mov
sub
daa
jb
in
mov
aam
add
sub
dec
daa
xchg
add
gs
and
shrb
cmp
repnz
icebp
call
add
icebp
call
inc
inc
inc
push
adc
daa
shl
or
ja
bound
jns
ret
orl
loope
aas
or
add
add
dec
aas
add
mov
lcall
dec
call
subl
sbb
loope
std
repz
sbb
add
dec
orb
adc
lcall
dec
add
push
xor
xchg
aaa
das
adc
inc
xor
xor
enter
xor
in
sbb
push
push
sbb
push
dec
inc
and
or
push
out
addr16
cmp
jo
aaa
xor
inc
dec
sbbb
push
mulb
adc
pop
push
notb
adc
cmp
and
inc
outsl
dec
divl
push
dec
sbbb
dec
aaa
adc
add
enter
jae
dec
iret
adc
out
pop
loop
shll
inc
mov
add
add
jb
in
clc
mov
in
sbb
pop
pop
jo
pop
and
jae
nop
inc
or
cmp
mov
enter
aaa
xor
addl
sbbl
xor
xchg
outsl
punpcklbw
test
xchg
sub
cmpb
add
adc
sbb
das
sbbb
scas
xchg
imul
daa
add
adcl
sti
enter
add
enter
nop
sub
sbb
call
push
shll
pop
pop
sbbb
mov
add
dec
dec
pop
lcall
insb
sbb
add
push
rcl
xchg
add
imul
sbbb
dec
das
std
add
in
fs
jo
nop
or
jo
dec
xor
adc
loopne
add
sbb
add
daa
inc
sbb
sbb
xchg
or
adc
cmp
pushl
add
xchg
jl
add
add
adc
pop
dec
xlat
jne
inc
loop
xlat
lcall
js
add
inc
inc
test
popa
lcall
loope
or
das
push
js
xor
inc
dec
jne
adc
pop
pusha
ja
add
add
ja
ja
pop
leave
add
jl
push
or
jl
push
fistps
loope
lods
add
add
push
dec
orb
adc
pop
lcall
dec
and
add
xor
inc
adc
popa
jno
les
jmp
add
xorb
or
or
add
inc
es
mov
ja
inc
enter
lock
enter
pop
pusha
cmp
add
add
dec
jg
inc
enter
mov
xor
fisttps
add
pushf
sub
imul
or
add
or
adc
and
mov
in
cmp
sbb
add
inc
pop
and
pusha
js
pop
jg
pop
push
add
dec
jg
mov
nop
pop
sbb
cwtl
pop
dec
push
and
push
daa
inc
shlb
out
jno
pop
jo
mov
lds
dec
and
or
sub
orl
dec
push
mov
xchg
jb
pushf
test
int3
or
test
add
push
aas
sbb
loope
in
dec
add
add
dec
orb
adc
pop
lcall
addr16
aas
in
or
or
ret
cmp
inc
push
xor
inc
jae
aaa
or
inc
sub
add
add
aaa
lcall
pushf
and
and
adc
or
cmp
enter
cmp
addb
nop
inc
and
lods
lods
pop
dec
test
or
sbb
or
insb
or
dec
das
lcall
mov
adcl
lea
imul
rclb
js
add
dec
orb
adc
pop
lcall
mov
pop
fs
add
bound
inc
or
inc
push
cmpb
andl
or
daa
mov
sbb
sbb
bound
sbb
and
inc
push
sbbb
add
xchg
or
sub
push
mov
mov
add
push
aad
sbb
jb
adc
dec
shlb
push
rorb
xchg
rcr
in
enter
and
add
pop
add
and
les
nop
les
adc
roll
xchg
dec
add
ja
imul
add
pop
xor
nop
add
push
adc
or
pusha
dec
pop
lcall
enter
jb
adc
fwait
inc
popa
mov
and
nop
adc
pop
js
js
leave
add
add
int3
or
test
pusha
adc
push
adcl
mov
pusha
mov
lcall
rorb
adc
and
and
pop
xor
and
loopne
push
and
pop
lahf
adc
mov
sbb
sbb
hlt
sbb
test
in
pop
or
mov
arpl
jo
cli
push
jne
jns
jo
ja
sbb
dec
sbbb
dec
ja
jo
add
jb
call
or
add
push
cmpsl
sub
addb
dec
xor
push
inc
lcall
clc
and
dec
test
xchg
das
add
add
inc
sbb
sbb
add
pop
dec
das
lcall
movzwl
or
dec
enter
or
add
add
sbb
sbbb
pop
es
pop
mov
push
xchg
and
imul
in
ret
pop
mov
jb
push
dec
pop
dec
shlb
pop
sbb
fs
loope
sbb
push
enter
and
rcl
nop
jne
mov
xor
fwait
pop
mov
pop
fcompl
dec
addb
sbbb
pushf
nop
and
or
add
add
and
and
sbbb
dec
es
inc
frstor
sbb
and
jae
add
and
and
add
pop
add
repnz
lcall
inc
inc
pop
add
shlb
pop
and
push
nop
adc
fildl
and
add
add
sub
xor
jb
sub
dec
xor
sbb
loope
in
and
pop
aad
sbb
nop
push
inc
js
and
insb
and
push
leave
add
and
and
sbb
cmp
and
jg
ret
daa
je
jnp
add
in
and
sbb
addr16
cmpsl
adc
push
jecxz
add
mov
daa
add
add
es
xchg
dec
sbbb
pop
and
es
push
mov
jb
in
daa
shlb
sbb
cmp
daa
shlb
enter
pop
test
add
test
daa
pop
pusha
cmp
sub
inc
cltd
addb
lcall
pusha
call
inc
or
xor
pop
icebp
sub
and
inc
adc
add
add
pop
lcall
fs
and
jb
sub
pop
and
push
pop
sbb
daa
pop
add
add
sub
ret
daa
lcall
clc
cmp
and
push
add
mov
adc
repnz
sub
xchg
add
pusha
sub
dec
es
mov
lcall
js
sub
adc
add
sub
mov
sbb
mov
nop
jl
sub
lea
lods
add
add
cmp
cwtl
mov
inc
mov
leave
add
mov
xchg
cs
test
add
int
and
das
push
add
dec
jg
and
adc
out
mov
xor
das
and
and
add
add
inc
sbb
cmp
add
and
pop
inc
dec
andb
and
sbb
adc
movsb
movsb
cltd
and
test
xor
add
xor
or
add
inc
es
mov
addr16
leave
or
test
xor
add
imul
add
mov
mov
loopne
cltd
add
push
pushl
addr16
push
push
stos
adc
push
inc
pop
inc
dec
xor
xor
xor
rcll
dec
addr16
lcall
test
push
shll
lock
sub
lcall
mov
xor
std
ss
push
cmpb
cmpb
enter
cmp
insl
lahf
dec
or
and
or
cmc
roll
push
addr16
add
test
xor
add
in
cmp
and
and
test
pop
inc
push
and
test
add
and
leave
add
push
lcall
sub
add
cmp
cmp
cmp
add
cmp
xchg
add
clc
lahf
xchg
movb
scas
rclb
inc
adc
cwtl
inc
sarl
daa
inc
push
xor
lock
nop
add
lock
push
nop
xor
fdivrs
cmp
cmp
and
dec
xor
push
addr16
cmp
mov
or
sub
enter
dec
ds
dec
ds
nop
pop
xor
ds
stos
stos
adc
inc
addr16
or
insl
aas
inc
mov
add
pop
add
in
inc
rcrl
add
pop
dec
cli
push
add
scas
mov
enter
mov
in
inc
adc
ret
or
and
pop
outsb
je
adc
ret
xor
jb
in
inc
int3
inc
sbbb
int3
inc
int3
inc
cmp
xchg
mov
pushf
inc
or
inc
and
inc
sbb
orl
push
daa
in
or
sbb
inc
add
add
add
inc
and
xchg
and
push
nop
mov
or
or
dec
pop
inc
insl
outsb
push
out
push
leave
add
inc
pop
inc
nop
push
leave
add
pop
inc
ret
add
sub
inc
enter
inc
pop
adc
int3
pop
pop
add
fstl
inc
outsl
add
in
inc
nop
inc
pusha
add
sub
outsl
lcall
lock
push
in
enter
enter
jb
enter
in
cltd
add
hlt
jmp
inc
enter
clc
dec
add
stos
in
dec
clc
dec
sbb
outsl
add
dec
sbb
sub
lods
adc
jae
pop
mov
mov
pop
adc
dec
add
outsl
pop
xor
sbbl
cmp
sbb
push
sbbb
dec
push
inc
dec
outsl
nop
or
sub
outsl
fcoml
or
fcoml
sbbb
test
pop
add
dec
dec
outsl
lcall
or
mov
stos
add
cmp
xchg
subl
add
test
int
popl
jb
in
dec
in
dec
and
cld
inc
xchg
pushf
nop
cld
aam
push
pop
inc
push
and
rcll
dec
popl
push
add
lcall
and
and
pop
push
xor
in
push
dec
cltd
add
lcall
and
push
push
xor
dec
push
inc
inc
add
push
add
add
mov
xor
jb
push
insb
insb
push
add
and
sbb
movsl
push
les
andl
sbb
inc
jo
leave
or
jo
push
sbbb
leave
push
call
dec
dec
inc
lcall
nop
dec
mov
sub
inc
and
jnp
pushw
addr16
push
ffreep
mov
and
sbb
lds
xchg
jo
sub
lret
push
push
cmp
mov
xchg
sbb
jbe
movb
xlat
xlat
sub
mov
jbe
and
cwtl
pop
sub
and
bound
movsb
push
jecxz
xchg
fs
push
adc
les
xchg
ret
jne
cmpsl
test
sub
adc
fsubrl
cmp
mov
sti
push
xchg
test
mov
les
jb
mov
xorb
inc
in
fwait
in
add
add
ja
mov
dec
shrl
push
sub
jo
ja
ds
mov
and
imul
sub
mov
bound
cmpsl
lds
subb
xchg
test
mov
notb
mov
sub
lods
and
mov
cmpl
mov
bound
and
push
mov
add
sbb
enter
xlat
shlb
mov
addr16
or
mov
or
call
mov
xchg
dec
or
pop
outsl
jbe
cmpsl
movl
cmpsb
adc
in
stc
je
lock
hlt
cmp
push
ds
dec
clc
dec
fdivr
push
repnz
mov
lahf
lret
or
loope
aam
lret
test
lock
jl
lahf
sbb
out
or
and
lret
adc
sub
sub
ljmp
fs
js
push
ds
dec
cmp
inc
lahf
scas
push
stc
shr
inc
lock
add
repnz
repz
xor
sub
cmc
pop
insb
negb
test
or
clc
sbb
lahf
lret
movsb
fcoms
cmp
sub
xchg
sbb
jnp
cmp
or
nop
mov
test
je
mov
addb
test
add
stc
pop
movsl
inc
jmp
jl
faddl
xchg
dec
in
mov
xor
xor
je
outsl
in
dec
xchg
repnz
xor
aas
dec
xlat
push
mov
mov
adc
xchg
push
mov
adc
clc
inc
fdivs
dec
fsubl
dec
les
sub
je
rcrb
loopne
aas
fs
jl
fbld
pop
call
lret
push
inc
lock
inc
dec
push
stc
je
clc
mov
xchg
dec
testl
dec
sbb
push
stc
push
ds
sbb
movsb
aas
adc
xchg
dec
in
inc
sbb
inc
or
sbb
pop
push
push
push
test
test
adc
ss
aaa
sub
cmp
cmp
mov
cmp
shl
sbb
jae
je
cmp
mov
lock
negl
int3
pop
dec
out
in
inc
or
repnz
and
pop
movsl
dec
and
lods
pushf
push
push
dec
in
stc
sub
test
in
jl
and
mov
fiadds
lret
jo
std
dec
cmp
mov
adc
es
mov
insb
push
arpl
orl
sub
jl
jle
je
sub
shll
xchg
cwtl
jl
adc
sub
push
sti
adc
jecxz
mov
loop
lahf
push
out
cmp
arpl
outsl
dec
cld
outsl
sub
push
inc
mov
dec
add
not
and
mov
andb
cld
xchg
or
add
push
jmp
insb
push
aam
add
mov
adc
inc
adc
adc
jge
arpl
cmp
decl
or
lcall
mov
cli
or
xchg
pop
pop
out
sahf
push
xor
push
mov
jns
movsb
stos
mov
rol
add
jns
mov
stos
fdivr
mov
es
or
mov
aas
cs
sub
mov
aaa
sbb
pop
mov
mov
icebp
xchg
or
cmpb
push
push
jne
imul
stc
adcb
rcrb
and
push
pop
ret
cli
enter
iret
or
shr
in
cmp
hlt
clc
ret
add
mov
popf
insb
jge
dec
loop
fdiv
into
jle
xlat
adc
or
mov
popa
dec
push
adc
sub
aas
es
cmp
xor
push
jae
cmpsl
mov
pop
mov
mov
xchg
int3
or
cwtl
shll
rcl
negl
mov
add
push
aam
enter
push
mov
es
loopne
in
inc
dec
jo
dec
bound
mov
push
push
test
pushf
sub
fcomps
or
hlt
lahf
cs
push
cmp
or
shlb
ret
lahf
outsl
jno
loop
fwait
push
add
lret
les
ss
add
pop
adc
add
mov
push
mov
daa
dec
jo
mov
adc
mov
push
and
inc
mov
jnp
push
ja
jne
or
scas
or
cmpsl
arpl
mov
push
cmpsl
xchg
mov
xchg
outsl
mov
jne
adc
gs
add
outsl
xchg
jo
xor
ds
popa
mov
push
xlat
pusha
mov
mov
jns
jnp
xor
dec
inc
mov
movsb
into
scas
xchg
mov
aam
mov
into
jg
in
mov
clc
insb
dec
add
into
pop
lods
punpcklbw
lock
cmp
cmp
dec
jns
fdivs
aaa
xorb
or
inc
out
int
fcmovb
fidivrl
cmp
cwtl
dec
mov
fstpt
jae
jae
cmp
mov
fidivrs
lcall
push
pop
xor
adc
or
cmp
mov
ja
xchg
push
lret
push
loope
xchg
or
nop
add
lahf
xchg
sbb
ja
push
add
dec
sub
shll
sti
stos
add
insl
lret
comiss
divb
add
mov
add
std
jae
loopne
xor
adc
mov
xchg
mov
xchg
and
repz
sub
adcb
and
mov
push
inc
pop
dec
pop
jl
es
push
add
dec
daa
add
lods
add
mov
add
xchg
imul
pop
xchg
push
rcrb
jo
ss
push
sbb
push
pusha
outsb
adc
xchg
test
or
ret
push
add
add
xor
or
dec
shlb
jo
dec
add
cmc
addl
jne
cmp
pop
or
mov
shrb
lcall
dec
jmp
and
inc
or
push
dec
push
pop
ja
outsl
jo
call
pop
mov
insb
ret
xchg
or
mov
xor
sbb
sbb
pop
sbb
or
shrb
je
iret
mov
int
mov
outsb
mov
and
fsubr
add
sbb
jbe
ret
add
stos
push
push
inc
scas
sub
inc
andb
out
int3
mov
rorl
mov
dec
jno
mov
xchg
xchg
jo
movsl
mov
or
cs
fldt
xchg
jbe
inc
subb
mov
scas
int
jns
ret
sbb
fisubrs
xchg
jg
inc
inc
sbb
dec
adc
mov
push
sbb
push
jae
and
push
adc
push
mov
or
sti
xor
nop
add
cmp
add
orb
out
pop
mov
inc
and
fcomip
add
mov
insb
imul
inc
push
push
and
adc
je
outsl
or
mov
mov
inc
sub
or
add
or
sbb
or
xchg
or
add
fs
add
add
dec
push
sbb
mov
mov
lea
mov
pop
cwtl
enter
add
push
and
mov
addl
xchg
cwtl
inc
and
sbb
mov
pop
inc
sbb
jg
sbb
in
add
xchg
stos
pop
or
roll
jo
mov
dec
and
mov
dec
inc
xor
add
mov
sub
jo
add
int3
sbb
outsl
mov
add
sub
pushf
mov
cwtl
adc
xlat
sbb
mov
mov
or
fildl
jnp
xorb
or
cs
ret
and
xor
inc
test
mov
jnp
xor
orl
xchg
clc
mov
faddl
inc
xor
je
lea
mov
pop
cmp
mov
or
lds
mov
pop
xchg
outsb
insb
mov
dec
sbb
mull
arpl
in
pop
daa
dec
out
dec
pop
and
cltd
outsb
push
adcb
nop
outsl
js
pop
outsl
sbb
fs
pop
mov
and
mov
cmp
jne
mov
clc
and
and
lods
test
jmp
or
mov
arpl
orb
dec
sub
sub
pushf
xor
pushf
lock
in
xchg
cwtl
xor
add
movl
adc
xchg
jno
pushl
sub
je
call
pop
nop
adc
sti
in
add
add
adcl
add
cmp
outsl
loopne
add
cmpl
inc
push
xor
push
add
cltd
insl
add
aaa
sub
int3
add
dec
movsb
dec
es
or
sbb
sbb
test
xor
sbb
jo
xor
gs
fsubr
mov
push
sahf
cmp
fsts
and
sahf
fmuls
mov
add
loopne
dec
in
loopne
push
and
lahf
add
sub
xchg
pop
ret
mov
sbb
imul
mov
andl
es
faddl
test
xor
push
insb
flds
push
mov
fdivl
xchg
enter
ret
clc
js
pop
push
adc
mov
xchg
adc
pop
ret
addb
inc
mov
movsl
movsb
rcr
mov
lcall
and
sub
cltd
adc
rcr
pop
cmp
out
ja
nop
imull
add
shrb
adc
rcll
and
pop
sti
and
rol
lods
push
fwait
and
test
lods
mov
imul
aaa
lret
or
out
adc
pop
add
mov
addb
sbb
jg
push
dec
in
or
and
addb
jo
test
or
std
xchg
or
adc
idivw
nop
sub
mov
push
inc
add
pop
pop
mov
mov
or
cmp
and
or
loopne
sbb
in
sarl
fdivrs
push
gs
or
mov
ja
nop
clc
sub
popa
and
mov
xchg
rcrl
push
mov
mov
jmp
mov
movsb
mov
add
sti
in
jg
adc
mov
imul
mov
mov
jbe
inc
pop
push
aad
pop
sub
lahf
adc
call
outsb
popa
push
stos
jge
test
ret
adc
pop
xchg
das
subb
sbb
data16
push
dec
es
ja
jb
adc
cli
or
lods
stos
divl
ret
jbe
push
nop
ret
test
xchg
es
or
inc
in
cltd
cwtl
js
jnp
dec
add
rolb
roll
pop
xchg
dec
push
pop
hlt
mov
repnz
pop
js
push
mov
cmp
add
add
divb
dec
lods
orb
cmpsb
mull
mov
xchg
add
popa
pop
mov
jp
add
dec
add
insl
push
lock
mov
and
popa
fildll
push
mov
in
or
mov
dec
dec
aas
in
adcl
sbb
leave
ss
mov
scas
repnz
int
addl
push
inc
dec
test
imul
jle
push
ret
pop
test
mov
ret
int
jl
test
rcrb
imul
iret
xchg
sub
add
pop
or
dec
cmp
or
cmpsl
xor
ja
push
xor
mov
ja
jg
movsl
jecxz
adc
outsl
or
rcll
mov
dec
mov
nop
stos
add
jmp
pop
cmpsl
cmpb
jl
mov
xchg
push
les
out
shrl
xor
mov
out
lahf
push
xchg
ss
pop
xchg
push
je
sub
push
add
xchg
cltd
cmpsl
push
add
push
fsubl
cmpsl
mov
movsb
ss
fidivl
add
out
shl
in
jnp
into
orb
mov
lahf
test
ss
push
push
sub
push
push
xchg
push
pushf
inc
popf
daa
and
jl
imul
sbb
mov
dec
xchg
rdpmc
xchg
jbe
or
jle
pcmpeqd
movhps
je
sub
sysexit
jg
mov
in
xchg
pop
das
add
xor
ficomps
add
je
pop
xor
orb
lret
pop
rcll
pmuludq
hlt
dec
subb
out
adc
xor
pop
lock
adc
pop
test
xchg
mov
repnz
cltd
shrb
loope
mov
sbb
sysret
add
xchg
add
add
add
jne
or
arpl
cld
xchg
inc
xchg
rclb
adc
cmp
xor
outsl
dec
xchg
adc
test
int
scas
in
mov
je
mov
sub
clc
mov
inc
mov
or
stos
inc
add
push
imul
adc
ja
jmp
adc
ds
inc
or
call
sbb
pop
cmpb
inc
xor
fdivrl
dec
ret
jb
cmp
pop
or
lods
add
sub
loopne
add
movsb
pop
pop
dec
dec
pop
sbb
lea
pop
dec
insb
test
jnp
fildl
out
or
adc
add
cltd
loop
push
or
cltd
pop
jne
xchg
mov
mov
aad
cltd
push
les
dec
adc
lret
mov
xor
add
cmp
addl
inc
lods
adc
mov
sbb
push
add
cmp
fisubrl
imul
dec
dec
cwtl
mov
fisttpl
test
inc
int3
sub
jno
lea
pop
mov
sbb
push
iret
jmp
xor
xor
cwtl
test
dec
xor
and
icebp
jp
test
pop
dec
rorb
in
aam
fildl
popa
test
or
mov
insb
int
push
fsubr
mov
test
dec
push
sub
mov
movsl
xlat
sbb
adc
lcall
or
inc
leave
outsb
adc
sbb
or
ret
dec
jae
pand
mov
cltd
dec
or
aad
and
cmp
jae
in
nop
push
mov
and
test
les
pop
inc
jns
push
rol
mov
pop
ficompl
mov
pop
add
add
xchg
insl
fs
add
call
decl
test
xchg
adc
add
xchg
orb
aam
inc
adc
or
adc
jae
insl
dec
fsts
pop
jo
pop
dec
leave
pop
push
roll
test
pop
stos
xchg
lea
bound
jo
or
testl
jl
cmp
js
jne
data16
sub
inc
mov
dec
pop
shlb
and
sub
push
mov
mov
xor
mov
movb
sbb
xor
mov
add
arpl
shlb
add
dec
sbb
adc
or
lret
xchg
nop
and
or
push
mov
mov
dec
or
sub
or
data16
fstl
mov
sarb
lods
inc
nop
dec
and
pop
xor
loop
or
push
insb
aam
xchg
arpl
test
fsubrp
mov
add
test
addr16
or
mov
xor
inc
xchg
xchg
push
and
loopne
add
insb
mov
pop
add
fs
fdivrs
pushf
movw
cmp
or
in
dec
add
xchg
out
add
or
xchg
mov
add
add
cmp
pop
popa
call
adc
mov
imul
stos
add
mov
ja
stc
negb
add
stos
es
sub
pop
pop
dec
cmp
xchg
loop
std
adcb
pop
jmp
popa
or
and
test
xor
ss
dec
add
push
and
add
fdivrl
pushf
gs
jae
inc
in
add
xor
push
movsl
and
sbb
int3
test
int3
enter
dec
imul
ret
mov
and
shlb
insl
ljmp
adc
pushf
ds
mov
inc
xor
cmp
jo
add
adc
sarl
sahf
cmpsl
aas
fldenv
add
sahf
push
push
mov
xchg
fldcw
ret
or
sbb
ja
or
call
jbe
jle
add
push
jecxz
inc
inc
inc
add
int3
ss
lea
in
daa
lea
push
insl
movsb
push
adc
arpl
cs
mov
inc
cwtl
mov
jle
push
call
cmp
xor
xchg
fcoms
mov
push
inc
mov
add
imull
cmpsl
xor
sbb
sbb
jl
inc
leave
adc
adc
shlb
mov
out
push
cmp
mov
pusha
addr16
scas
movsb
sub
sbb
clc
pop
adc
fmull
and
lea
das
xchg
add
add
mov
aaa
fcoml
loope
add
fidivrs
mov
jmp
xor
jne
push
jae
popf
cmp
add
and
add
ja
adc
aaa
cs
pop
jmp
dec
mov
add
xchg
add
cmpb
decl
adc
push
mov
pop
adc
sbb
in
xor
je
aaa
sub
js,pn
xor
push
filds
int3
das
jmp
xor
sti
and
lods
xchg
mov
xor
addr16
xchg
xor
pop
fistl
jo
inc
xor
add
fs
ret
neg
jmp
popl
push
outsb
or
dec
push
mov
jecxz
push
push
sbb
adc
mov
adc
or
out
dec
jo
ds
popw
adc
xchg
dec
sbb
or
test
popa
mov
jae
in
mov
adc
push
mov
inc
lods
js
mov
and
lea
pop
push
je
push
jne
iret
cmp
and
jbe
jmp
and
aaa
hlt
inc
mov
imul
xor
sarl
and
and
pop
rorb
push
test
jg
push
enter
mov
sub
lock
cmp
fsubrs
mov
and
addb
pusha
cmp
sti
test
outsb
pop
push
nop
cmp
dec
push
test
pop
push
push
lcall
mov
ss
pop
lret
pop
jl
adc
js
push
fiadds
or
ret
daa
add
sbb
inc
enter
mov
adc
jmp
xor
add
mov
mov
cwtl
nop
iret
aaa
test
aam
ja
rolb
cld
dec
orl
add
fidivs
pop
mov
pop
mov
sbb
pop
sub
addb
sub
pop
add
in
scas
imul
ja
mov
fisttpl
test
psubusb
inc
cltd
gs
repnz
xchg
cld
add
cltd
mov
xor
insb
loopne
jmp
sbb
mov
add
nop
mov
imul
aaa
cs
leave
xor
push
add
xor
fmuls
lahf
push
or
push
dec
adc
xor
popa
and
sbb
adc
mov
mov
sbb
jg
and
jmp
jo
inc
sahf
rclb
negl
cs
ja
orb
into
adc
test
imul
test
scas
or
push
arpl
jp
les
fcom
pop
xchg
pop
insb
mov
ficompl
and
gs
rclb
stos
mov
mov
popf
pop
scas
xor
jb
test
or
fwait
inc
pop
sbb
notb
in
sub
test
sbb
add
pop
out
out
ret
jbe
adc
pop
jmp
hlt
repnz
hlt
inc
xchg
cwtl
mov
cmp
and
nop
outsl
or
mov
add
xchg
dec
in
or
inc
and
cmp
aas
subb
orl
imul
xor
int
push
xchg
or
mov
movsl
or
aad
or
and
adc
mov
push
cmpsl
lea
icebp
xor
push
xchg
mov
xchg
in
jne
es
mov
sub
adc
insl
jl
mov
fadds
cmp
mov
and
loop
dec
push
adc
push
cmpl
test
fs
xchg
pop
inc
test
and
mov
sub
mov
cmpsb
or
jecxz
pop
add
mul
push
imul
imul
add
call
loopne
ja
mov
cld
cltd
mov
dec
or
movsl
lret
test
lret
leave
inc
jo
dec
push
xor
into
fdivrs
loope
mov
push
jns
sub
push
test
lea
dec
mov
mov
mov
xor
push
aas
mov
jmp
pop
push
mov
xor
and
repz
ror
pushf
cmp
in
push
mov
enter
xor
int
mov
mov
mov
fcoms
adc
jp
lea
jge
jle
cmc
repz
mov
movsb
in
jno
fwait
inc
add
xor
sbb
dec
pushf
lcall
mov
loop
pushl
add
push
mov
push
mov
mov
xor
jbe
mov
push
dec
mov
pushf
xchg
and
pop
gs
out
in
mov
and
and
cmpnltps
xchg
push
xchg
cmpsb
movsl
push
xor
adc
addl
sbb
ja
jne
lahf
out
gs
icebp
enter
push
in
or
cld
or
popa
sbb
mov
push
add
add
lret
adc
or
shrb
xchg
rcr
dec
scas
pop
or
dec
repnz
pop
and
or
popa
rclb
xor
fadds
dec
pop
cmp
aam
lds
inc
rorb
add
inc
filds
mov
and
shl
mov
lret
jmp
sbb
mov
das
or
out
hlt
or
and
inc
or
xor
pop
add
adcb
cmp
js
loopne
pop
sbb
jecxz
push
adc
les
loop
aaa
das
and
call
push
mov
lcall
movsl
lods
pop
jl
shll
bound
add
cmp
jg
pop
mov
dec
add
and
jbe
sub
stos
pusha
mov
ret
xor
jle
and
cmp
fldcw
cmp
inc
jne
mov
imul
inc
mov
insb
jecxz
mov
mov
clc
lahf
sub
nop
sarb
dec
pop
jne
icebp
shlb
or
cmpsb
call
mov
push
aaa
cmc
push
addl
shlb
call
imul
adc
lahf
push
inc
push
testl
ret
jne
push
enter
test
lea
xor
mov
fildll
pushf
enter
pop
enter
inc
or
imul
test
sub
pop
mov
lcall
movb
dec
adc
dec
jecxz
mov
jmp
dec
int
test
into
lds
push
xchg
nop
adc
sbb
arpl
movsb
rcl
ret
daa
aam
mov
push
stc
fistl
dec
and
mov
mov
lock
fwait
mov
sbb
dec
add
xchg
push
mov
shlb
divl
lock
mov
dec
add
pop
push
es
mov
inc
std
cmp
movb
xchg
mov
push
pop
rorb
aam
add
xchg
mov
mov
addr16
inc
push
lcall
jl
and
cwtl
add
addl
lcall
add
cmpsl
jae
test
dec
jg
pop
test
frstor
or
add
mov
sbb
add
or
sub
int
aam
adc
in
test
pop
sbb
sub
jge
mov
mov
dec
ljmp
je
add
jl
rorb
jp
mov
movsl
cmpsb
std
cmp
imul
mov
dec
push
movsb
addb
in
clc
pop
es
or
inc
loopne
inc
jb
push
test
addr16
dec
dec
inc
movl
pop
ret
add
test
cmp
adc
incb
emms
jmp
pop
and
mov
xor
sbb
jp
xchg
xlat
addr16
sbbb
mov
loopne
imul
ret
sbbl
es
mov
jmp
notl
and
inc
push
sbb
mov
jmp
jo
push
les
lret
mov
pop
ljmp
jmp
rclb
cmpsl
cwtl
andb
sti
cs
push
insl
ret
mov
or
fists
mov
mov
loope
or
loope
daa
or
mov
xchg
imul
fnstenv
jge
mov
jo
mov
imul
je
lret
cmp
xlat
hlt
pop
popa
add
push
sbb
test
sbb
sub
shrb
push
xor
mov
nop
cmp
inc
cmovnp
mov
push
cmc
popl
sbb
add
xor
xchg
jo
jge
add
lock
cmpb
adc
fs
lock
aam
mov
mov
fucomi
test
pusha
push
fsubl
cli
das
mov
and
mov
into
and
sbb
adc
dec
mov
lock
add
add
adc
cwtl
or
pop
test
pop
add
or
fnstenv
imull
pop
and
push
gs
and
es
sbb
dec
aam
stos
mov
sbb
xlat
or
cmp
dec
shrl
or
push
add
pop
mov
xor
js
outsb
jae
xlat
xor
and
movsb
xorb
arpl
stos
hlt
pop
insb
inc
test
jo
mov
je
test
or
adc
lret
cmp
mov
mov
es
das
mov
push
pop
add
and
ljmp
sbb
aaa
cmpsl
pusha
adc
stos
mov
orl
add
add
icebp
lods
jbe
xor
sbb
xor
jno
push
push
cld
sti
mov
add
add
scas
cs
inc
scas
pop
add
test
ja
das
or
xor
mov
mov
mov
nop
nop
push
mov
in
mov
call
scas
and
sub
and
in
fimull
std
pusha
pop
sbb
in
scas
dec
xor
xchg
adc
test
imul
add
shrl
stc
add
shlb
add
outsb
sahf
arpl
les
jns
or
xor
adc
xor
inc
jle
ret
sbb
or
insb
push
adc
inc
out
out
je
dec
mov
xor
popa
mov
je
fisttps
in
aaa
mov
mov
xchg
pop
add
hlt
ret
adc
jne
xchg
cwtl
rcl
xchg
pop
add
mov
les
loopne
xor
in
inc
dec
adcb
aaa
mov
sahf
mov
mov
mov
cmp
mov
mov
enter
mov
repz
mov
into
fidivrs
or
xchg
mov
jmp
push
sub
pop
scas
mov
sbb
mov
ud2
add
jg
inc
dec
xor
outsl
stos
mov
movlps
adc
and
jns
jge
int
mov
mov
inc
mov
mov
pushf
pop
out
unpckhps
cmp
dec
lock
in
mov
sbb
mov
jnp
add
mov
sbb
nop
gs
push
sbb
jbe
add
pop
add
mov
das
and
mov
mov
xlat
xor
mov
add
rolb
daa
orb
add
les
cmpb
mov
pop
adc
dec
push
or
roll
sbb
lret
sub
sarl
mov
dec
sarl
stos
inc
jo
enter
mov
sbb
or
dec
test
and
push
shrl
pop
shll
popa
jb
sub
lret
test
dec
jo
push
inc
dec
or
scas
dec
adc
add
stc
insb
aas
stos
sub
add
scas
push
push
pop
cmp
dec
add
repnz
ret
mov
test
dec
adc
add
subl
aas
cmp
mov
mov
push
enter
mov
js
pop
jmp
jns
les
idivb
sub
push
pop
dec
xor
dec
movb
lcall
lds
jns
mov
shl
mov
add
adc
mov
aas
mov
push
int
or
inc
jmp
inc
adc
push
adc
pusha
add
or
and
xchg
dec
or
push
or
add
adc
mov
adc
inc
repnz
mov
add
mov
js
add
xor
adc
leave
in
or
shrl
jns
or
add
mov
adc
push
inc
inc
or
adc
test
and
in
jl
addb
add
test
xor
add
push
mov
sub
push
scas
or
shll
in
call
mov
rcll
roll
sbb
dec
sub
ret
inc
mov
pop
adc
mov
dec
sub
xor
or
adc
popf
or
repnz
mov
fs
ret
mov
in
int3
inc
adc
pusha
mov
mov
inc
push
pop
and
inc
xchg
bound
cmp
ret
add
push
mov
xchg
pop
scas
lds
insl
adc
sub
stos
in
or
test
adc
mov
arpl
inc
xchg
mov
rorl
dec
add
or
xor
push
lods
push
subl
adc
dec
stos
rorb
fiadds
pop
push
add
sbb
or
mov
cltd
pop
adc
dec
mov
fs
adc
pusha
and
inc
sbb
mov
pop
adc
sbb
leave
aaa
outsb
inc
adc
sbb
pop
cli
mov
add
inc
bound
or
mov
orb
and
add
pop
ja
shlb
xchg
mov
cmp
iret
xchg
jno
outsb
daa
stos
pop
and
jns
mov
and
pop
sub
std
and
addl
stc
dec
shl
fisttpll
cmp
xchg
inc
and
push
adc
dec
js
sbbb
add
sbb
and
stos
mov
xchg
test
arpl
ffreep
movsl
clc
in
enter
xor
sub
or
movsl
nop
or
push
out
dec
arpl
cmp
jo
lock
lock
push
pop
or
sbbb
sbb
dec
das
add
es
flds
or
xor
adcb
popf
lahf
pop
cmp
ret
or
pushf
aas
mov
lahf
xchg
inc
jecxz
and
push
rorb
adcb
inc
jb
ret
adc
test
adc
cmp
lods
mov
mov
or
sbb
in
sub
cmc
jle
orl
push
jl
jne
dec
cmpsb
movsb
call
sub
cmp
cltd
in
add
adc
loopne
cmpsb
decl
and
xor
push
loop
xchg
mov
dec
xor
mov
imul
iret
and
xchg
mov
mov
enter
outsb
inc
inc
scas
pusha
fnstsw
xlat
int3
out
cmp
cmp
aaa
inc
aaa
insl
xor
jnp
adc
ss
xor
shrb
mov
jne
dec
pop
dec
adc
sub
cltd
test
sub
fbstp
xor
xor
sub
insl
pop
dec
and
aaa
cli
xor
test
notl
pop
adc
mov
fmull
or
js
das
movsl
mov
imul
lods
les
mov
test
mov
movsb
mov
inc
ss
shlb
cltd
nop
leave
std
out
imul
adc
cmp
sbb
pop
dec
rcll
dec
sbb
shlb
mov
cmp
test
xchg
decl
push
and
adc
and
cmp
test
int
addb
pop
push
mov
dec
inc
sbb
in
cmp
mov
fwait
sbb
dec
xor
inc
ret
in
fiadds
cltd
js
into
adc
inc
add
jecxz
lret
cs
inc
or
nop
sub
daa
cmpsl
and
xchg
daa
mov
sarl
add
lock
sarb
mov
adc
jo
in
js
clc
cmp
in
mov
cmp
mov
insb
jmp
dec
iret
out
imul
fs
inc
in
sbbb
xlat
scas
adcl
dec
mov
xlat
sub
ret
int
sub
xor
nop
ss
sar
test
or
or
imul
dec
lock
je
aad
nop
xchg
lret
lock
adcb
in
lock
shll
mov
fs
sub
add
ja
pop
into
push
in
shl
faddp
es
sbbb
daa
pop
add
sub
cmpsl
stc
mov
push
out
add
adc
ss
pop
insb
jle
sahf
out
nop
mov
negl
fisubs
push
xor
out
push
push
jns
out
mov
shl
adc
mov
in
in
push
enter
js
mov
and
and
adc
or
fs
mov
inc
inc
jb
push
add
sbb
insb
leave
and
sub
fdivs
push
in
xchg
or
je
xlat
cmp
fs
fsubrl
imul
subb
push
pop
xor
fisubl
sbb
imul
nop
sbb
cmp
jo
mov
enter
jmp
sbb
lods
or
dec
cmp
xor
enter
clc
aaa
cmp
movsb
sub
test
add
sub
mov
xchg
mov
movsb
cs
dec
fsubl
pop
cmp
nop
pop
js
and
loopne
or
pusha
cmp
mov
outsl
xchg
cwtl
add
sub
dec
and
push
fstpl
xlat
or
jg
adc
xchg
add
dec
loop
loope
and
push
jae
or
mov
cs
imul
sbb
out
add
mov
jge
sub
repz
jl
adc
jle
mov
outsb
jp
xor
xchg
pop
xor
sub
jno
lods
dec
lods
ror
in
mov
adc
fwait
sbb
nop
mov
leave
vmovss
adc
cli
push
fdivl
add
test
jns
sbbl
lcall
xor
cmpsl
dec
mov
insl
in
add
jg
or
or
insb
mov
shl
inc
inc
into
js
sti
sahf
ret
insl
mov
ss
imull
sti
xchg
cwtl
notb
xchg
sbb
mov
pop
and
scas
mov
lods
or
cmp
adc
mov
nop
push
cltd
or
xor
mov
aaa
push
pop
daa
pop
enter
mov
cltd
andb
and
cmp
push
int3
jns
adc
or
add
aam
or
test
rolb
inc
mov
and
nop
notb
imul
mov
jo
mov
test
mov
stos
cli
dec
cmpsl
cld
add
add
lahf
outsl
call
cmp
adc
outsl
and
cmp
insl
mov
xor
lods
pop
or
stos
pop
pop
aad
verr
add
lahf
mov
imul
or
and
outsl
nop
pop
push
movsl
xor
adc
mov
mov
bound
inc
fisubrl
in
inc
enter
adc
es
add
insl
xchg
pop
rorl
out
bound
or
dec
pop
pop
pop
inc
pop
sbb
mov
les
and
ret
das
sbb
inc
leave
mov
rcr
pusha
into
pop
and
ffreep
mulb
test
outsb
pushf
fimull
mov
mov
push
testb
fwait
imul
jo
add
mov
repz
or
iret
repz
les
xchg
jnp
sub
sub
jns
fst
loopne
and
sub
inc
sbb
sub
pop
jae
test
lcall
ljmp
dec
xchg
or
xchg
add
cs
cmpsl
rorb
or
imul
and
xlat
add
imul
push
ret
xchg
fldl
add
sbb
popa
mov
pop
or
das
jno
ret
jo
jg
adc
sahf
xchg
cmp
and
pop
out
xor
leave
cmp
fdivs
jg
or
dec
add
sbb
mov
xor
pop
cmpsl
inc
push
mov
cmp
sbb
daa
sub
stos
mov
add
sbb
xor
fadd
adc
add
lds
pop
or
pop
loop
dec
dec
imul
add
clc
add
push
hlt
js
pcmpgtw
leave
sbb
inc
inc
cmp
mov
es
dec
decb
or
inc
adc
nop
fiaddl
mov
jnp
notb
in
outsb
add
dec
fmul
mov
sub
lea
movsb
push
jne
cmpsl
std
dec
pop
mov
or
repnz
fs
xor
add
pop
add
push
lret
mov
lret
icebp
fiadds
rolb
xor
fcompl
cltd
inc
mov
adc
xchg
or
jecxz
jmp
rclb
icebp
push
ja
or
inc
icebp
pop
adc
mov
fists
je
push
pop
clc
shrl
in
inc
inc
mov
int
sub
xchg
stos
inc
jmp
cmp
mov
js
xchg
adc
imul
jg
addr16
sbb
mov
imul
fs
mov
add
mov
or
pop
jo,pn
xor
push
out
pusha
mov
pop
jae
and
dec
iret
enter
aaa
dec
in
inc
push
or
inc
mov
and
mov
enter
mov
fdivl
aas
push
sbb
jb
jne
les
iret
pop
xor
mov
sbb
adc
cmp
lds
in
aaa
jl
pushf
pop
rcrb
emms
sub
in
test
adc
sub
push
lock
repnz
dec
pop
xor
les
dec
push
push
movsb
mul
push
jo
imul
sub
push
shlb
add
faddl
daa
push
push
dec
outsb
push
and
jo
mov
dec
rcr
inc
jo
cwtl
outsl
int3
pop
add
xor
and
and
inc
inc
roll
jo
adc
out
jne
inc
in
pop
push
pop
subl
loopne
pop
je
pop
and
inc
xlat
nop
sbb
adc
cmpsb
cmp
jmp
pop
sub
fsubs
jp
xlat
adc
mov
test
mov
mov
movl
add
push
shlb
push
pop
pop
int3
rcl
push
push
movsb
push
inc
push
rcll
or
call
cwtl
cmp
jae
loop
pop
pop
inc
lahf
pop
test
pop
sbb
push
rdmsr
mov
xor
fistpll
inc
cmp
inc
adc
cmp
xlat
push
add
jecxz
sub
mov
and
bound
scas
xlat
pop
cmp
mov
hlt
sub
pop
jle
inc
xor
movsl
xchg
mov
ja
mov
adc
in
inc
cs
mov
pop
sub
scas
dec
in
scas
pop
fwait
insb
pop
pop
in
mov
int
pop
aam
pop
repnz
outsl
daa
in
jo
push
and
add
pop
inc
push
and
mov
int
and
imul
cmp
jns
filds
inc
adc
mov
out
fdivl
jb
les
imulb
iret
pop
xor
jecxz
out
mov
add
pop
je
mov
add
aas
sub
add
jno
and
inc
sbb
fcoms
push
shlb
sub
popf
test
scas
pop
mov
clc
js
inc
sbb
sarb
fidivs
cmp
adc
xchg
es
push
xlat
add
out
cmpsb
xchg
scas
dec
or
pusha
mov
xchg
cmp
sub
fnstcw
mov
pop
xchg
jmp
sbb
adc
mov
icebp
mov
pop
cmp
or
ficompl
scas
inc
ljmp
dec
ljmp
mov
cmpl
xor
inc
sbb
mov
xor
push
xor
adc
xchg
mov
cwtl
add
pop
inc
cmpl
pop
enter
jg
rclb
sbbb
mov
int
xlat
pop
cmpl
adc
in
test
mov
out
daa
inc
mov
inc
xchg
scas
fs
and
inc
loopne
repnz
fstl
cmp
sub
mov
pop
dec
in
jg
adc
pop
loopne
adc
pushw
or
cmp
inc
jo
jl
fst
clc
ja
and
add
adc
and
popa
iret
pop
xor
das
cwtl
clc
arpl
subb
pop
aam
dec
pop
sbb
adc
lea
aas
filds
inc
nop
clts
sub
sbb
daa
push
inc
xor
je
fistps
les
jae
and
out
dec
dec
adc
or
lock
or
pop
cmp
add
dec
mov
dec
mov
adcl
adc
add
pop
or
lahf
push
dec
enter
add
or
mov
icebp
mov
and
jg
repnz
fcoml
test
cmc
bound
add
jp
add
mov
testl
nop
das
dec
loop
test
or
mov
jg
add
mov
mov
push
mov
pop
or
dec
xchg
jecxz
pop
mov
out
adc
and
add
lret
aas
filds
pusha
adc
jo
stc
and
mov
cmp
jg
cltd
lea
cmp
filds
inc
loope
repnz
lret
lock
mov
cmc
cld
hlt
mov
lods
sub
fwait
mov
fildl
mov
inc
xchg
cmp
xchg
into
je
jg
bsr
mov
xchg
xchg
mov
xchg
xchg
xchg
cmpsb
cmpsl
test
xchg
xchg
xchg
xchg
stos
stos
lods
lods
xchg
xchg
xchg
xchg
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
or
testl
or
mov
daa
filds
inc
imul
adc
inc
pop
addr16
xor
pop
ljmp
mov
push
in
outsl
dec
jne
sub
xchg
or
pop
cmp
mov
sbb
arpl
dec
and
or
into
das
cld
movsb
sbb
shll
sub
ret
xor
cmp
out
inc
jno
fadds
lock
sti
outsl
pop
dec
add
ljmp
dec
push
mov
adc
int3
add
and
or
and
mov
pop
fisubl
or
ret
pop
adc
je
inc
popa
xor
xor
dec
gs
sub
mov
sarb
mov
es
push
sbb
xchg
push
push
inc
rcll
sti
dec
das
test
cltd
sti
push
rorb
outsl
pop
sbb
dec
std
daa
daa
daa
and
fistpl
xchg
xchg
xchg
pop
test
les
bound
stc
adc
dec
jb
mov
sbb
aam
add
or
cmp
clc
or
or
dec
xchg
add
adc
push
js
and
bound
mov
aas
add
add
lea
sub
fs
jge
shlb
jmp
inc
mov
add
push
adc
or
or
popf
add
adc
dec
inc
mov
dec
mov
adc
dec
fstpl
sub
fcoms
dec
fisttpl
dec
sbb
cmp
and
mov
jns
adc
mov
add
lock
popa
mov
inc
fs
leave
sub
and
xchg
adcl
xchg
mov
dec
dec
enter
subb
pop
movb
lret
push
outsb
or
sbb
cltd
lret
or
js
adc
push
shlb
mov
sbb
sub
in
adc
enter
outsl
add
pusha
or
mov
jns
mov
add
andb
dec
cmpb
setg
xchg
sub
xor
enter
dec
add
push
roll
les
aam
adc
push
xchg
incb
arpl
push
mov
mov
movl
xchg
push
or
rorl
or
lods
mov
call
imul
inc
arpl
xchg
or
or
roll
inc
testl
push
mov
lods
cmpsl
mov
or
and
loop
xor
mov
jno
into
popa
add
add
mov
mov
or
push
sbb
cmp
add
dec
push
dec
pop
add
dec
test
xchg
adc
imul
nop
les
and
adcl
pushf
leave
add
push
mov
push
mov
inc
jp
push
mov
pop
cltd
daa
xchg
pop
bound
add
lock
aad
sbb
dec
scas
or
add
lret
dec
xor
and
shrb
js
ret
sbb
adc
or
daa
mov
add
push
xchg
push
pop
sub
inc
sbb
call
mov
iret
xchg
add
xchg
pusha
xchg
test
mov
fiaddl
dec
and
fnstcw
mov
add
aam
loope
sbb
rol
sbb
insl
or
outsb
filds
inc
icebp
lea
data16
test
dec
and
cmpsb
xor
cmp
jle
and
mov
pop
pop
rolb
adc
push
pop
divl
nop
repnz
or
and
xorl
xor
xchg
insl
pusha
push
lea
xchg
fcmovbe
dec
mov
das
pop
sub
xor
ret
push
adc
xor
adc
mov
mov
or
sbb
movsl
mov
jbe
sbb
xchg
dec
xor
adc
popf
xchg
cmp
cmc
mov
mov
or
sub
cltd
jmp
push
jmp
es
insb
jle
cs
add
cli
or
jge
mov
jne
mov
arpl
push
push
fadd
pop
test
iret
xchg
push
and
dec
mov
es
push
lock
pop
or
xor
adc
mov
sbb
jne
and
add
adc
or
xchg
ja
or
and
mov
inc
mov
std
jge
add
sub
add
inc
jmp
ljmp
repz
das
add
inc
imul
adc
dec
aaa
push
fnstenv
push
cmp
pop
pusha
mov
pop
mov
mov
and
xchg
cwtl
test
or
dec
pop
popa
cmp
or
mov
lock
orb
leave
mov
lods
xchg
dec
lock
js
add
jp
stc
nop
mov
enter
pop
or
mov
xchg
nop
xchg
rclb
mov
xor
jo
pusha
inc
iret
cmpsl
pop
loopne
movsl
xchg
sahf
imul
sbb
sub
sbb
rcll
xor
test
cmp
cmpsb
orl
dec
jmp
add
sub
or
loope
push
jle
cmpsl
cmpsb
dec
and
aam
adc
mov
sub
ret
pusha
or
out
lods
dec
shrb
jl
push
and
shlb
xlat
xchg
or
js
stos
in
xor
inc
and
inc
and
sbb
insl
roll
repz
and
xchg
aad
push
pop
enter
sbb
push
add
pop
inc
push
lds
dec
daa
add
or
or
test
pop
cmpsl
cs
jmp
xchg
xchg
and
mov
inc
and
sbb
adc
pop
pushf
and
mov
mov
repz
andb
into
movb
and
push
and
add
inc
lds
push
stos
leave
xchg
xchg
out
inc
test
sbb
int3
add
or
cmpsb
aad
push
mov
or
and
add
outsb
inc
shr
outsb
and
mov
out
mov
sti
or
push
and
sbb
cmp
loopne
pop
cmp
xchg
and
enter
mov
movsl
or
pop
add
push
enter
mov
sub
jl
inc
add
in
dec
inc
adc
or
jge
aas
push
sbb
outsb
clc
sbb
js
push
je
push
add
call
or
xor
cmp
jmp
inc
push
arpl
stos
and
inc
lcall
inc
sbb
dec
cmp
or
dec
push
xor
inc
sarl
clc
mov
je
fnstsw
sbb
xlat
jl
inc
mov
shlb
je
pop
pop
aas
shrb
push
dec
cld
jge
dec
dec
xchg
mov
test
mov
jnp
push
sbb
and
add
prefetch
out
mov
and
or
dec
dec
xchg
sub
mov
fdivl
outsb
push
fbld
mov
and
roll
sbbb
adc
lret
jae
negl
push
shlb
mov
xchg
pushf
inc
cs
dec
or
pusha
pop
sub
orb
pop
push
xlat
add
cmp
pop
rclb
mov
jae
add
test
rclb
imul
scas
push
imul
bound
xor
loop
pop
adc
ret
andl
mov
imul
jae
push
stos
add
out
or
daa
mov
enter
sub
clc
js
xor
mov
mov
cmp
pusha
mov
adc
fs
and
inc
inc
jno
mov
pop
mov
cmpsl
test
cmpsb
pusha
fidivrs
inc
adc
fdivrs
and
insb
scas
or
or
sub
pop
mov
test
test
fimull
aad
call
jb
and
cmpsl
dec
push
add
jp
lret
pop
mov
repz
or
dec
xlat
mov
and
loopne
lea
dec
or
and
stc
xlat
add
and
into
movsl
mov
push
aam
inc
xchg
add
stc
scas
ja
add
xchg
sub
cmp
sahf
or
in
inc
mov
dec
rorb
or
adc
int3
fcmovb
pusha
dec
inc
pusha
pusha
inc
das
dec
cmp
adc
inc
sbbb
and
outsb
jg
add
insb
add
loop
pop
push
adc
pop
mov
call
dec
pop
gs
mov
insb
movsl
f2xm1
jo
rcrl
xchg
push
add
sbb
dec
jmp
jle
pop
incl
lock
lock
sbb
fnstenv
lea
lret
pop
ret
xor
stos
orb
mov
or
enter
inc
or
test
aam
mov
stc
in
or
mov
add
xchg
xorb
xchg
fdivrs
repz
loopne
fiadds
mov
cli
xchg
ret
push
add
sub
pop
insb
decb
rolb
push
sub
xchg
push
jmp
push
inc
add
mov
out
int3
lock
movsb
add
mov
add
lds
push
jmp
push
sub
jnp
notl
outsl
jo
clc
sbb
mov
loopne
jne
add
adc
mov
sbb
clc
and
add
stc
sbb
cmp
inc
les
dec
cmpsb
filds
inc
push
mov
pusha
cmp
inc
mov
pop
push
adc
out
outsb
pusha
adc
imul
dec
pop
dec
aaa
jo
bound
xorl
sub
add
lods
stc
fiadds
adc
movsb
aaa
sti
outsl
push
das
xchg
push
insb
xchg
sub
add
mov
sarl
cmp
loopne
push
mov
mov
movsb
loope
pop
or
mov
popf
stc
xor
cmp
add
jae
ds
bound
cwtl
xorl
push
into
sub
jl
lock
aaa
pop
mov
and
outsb
or
clc
and
out
stos
insb
ja
filds
push
pop
movups
push
pop
pop
sbb
adc
xor
add
xchg
dec
mov
nop
inc
add
outsl
inc
bound
pop
add
add
cmp
inc
into
mov
jo
cmp
xsha1
cmpsb
cvtpi2ps
sub
nop
out
lcall
or
and
or
push
fwait
add
inc
sbb
stos
mov
repnz
pop
cs
sub
add
push
repnz
pusha
in
loope
test
add
cwtl
add
test
iret
repz
in
inc
adc
imul
cmp
daa
mov
pop
sbb
mov
adc
or
cmp
or
cmp
xor
or
xchg
aaa
and
inc
dec
mov
xor
jns
add
pop
push
dec
mov
add
jae
inc
pop
push
dec
mov
bound
add
inc
jno
and
das
adc
cld
mov
cli
xchg
push
inc
cmp
sbb
add
movsb
pop
add
jb
xor
or
pop
cmp
loopne
fdivrl
or
push
add
xchg
xor
push
or
nop
jae
cltd
bound
dec
xchg
jne
scas
push
fs
and
push
add
add
add
data16
rcrb
das
jnp
inc
divl
inc
repnz
test
xlat
dec
add
push
dec
scas
xor
jmp
pop
inc
insl
sub
insb
dec
adc
and
cmp
push
cld
pusha
leave
dec
jne
outsb
and
jns
aas
xor
sbb
int3
loopne
fisubs
mov
jnp
mov
adc
scas
dec
mov
les
add
adc
fsub
mov
test
add
les
dec
add
sti
test
outsl
push
add
and
in
adc
inc
and
or
mov
fs
xchg
xor
and
xor
mov
out
mov
mov
mov
push
pop
jnp
inc
push
movsl
lods
push
fidivrs
sub
xor
leave
bnd
scas
push
movl
push
xor
jecxz
mov
cli
jg
cmpsl
pop
lds
ljmp
push
mov
or
push
jb
add
fisttpll
dec
test
add
ret
xchg
outsl
data16
sub
daa
push
push
add
xlat
xchg
and
adc
mov
add
fmuls
inc
sub
pop
arpl
xor
xchg
push
inc
pop
stos
and
sub
movsl
ss
int3
insl
jl
dec
xor
cld
mov
mov
push
xor
cmp
adcb
outsl
pop
or
adc
cmpb
lea
iret
lret
pop
sub
jmp
ret
lea
mov
and
sub
js
lcall
mov
cmp
jg
popf
inc
aaa
add
daa
xchg
pcmpgtd
adc
inc
inc
and
pusha
mov
pop
sub
sbb
lahf
push
jne
inc
pop
add
sub
add
mov
ret
xor
aam
adc
pusha
pop
sbb
cmp
dec
hlt
mov
pop
add
and
dec
push
jo
lea
stos
lock
stos
xchg
or
push
lock
dec
adc
outsl
sbb
ja
out
dec
dec
lcall
dec
daa
dec
fcmove
das
in
mov
movsb
ds
fists
and
xchg
push
xchg
and
es
fcompl
dec
xchg
inc
repnz
aas
dec
and
insb
bound
test
push
divl
pop
pop
push
je
mov
scas
dec
add
in
out
cmpsb
fldcw
pop
dec
push
inc
push
mov
repz
mov
inc
filds
shl
fdivrp
lcall
bound
rclb
xor
mov
hlt
dec
push
pop
add
or
inc
xchg
movsl
lods
repz
adc
pop
cwtl
pushf
ffreep
and
mov
sub
call
adc
or
xchg
or
stc
xor
sahf
enter
mov
icebp
ljmp
mov
dec
data16
sbb
pop
jecxz
sbb
test
mov
pop
and
mov
mov
testl
xchg
xor
sbb
cmp
push
and
xchg
sti
fs
xchg
lock
xor
les
jbe
out
cwtl
dec
enter
aaa
xor
inc
int3
sub
gs
inc
inc
cs
jg
aam
push
test
or
xchg
jno
imul
lcall
movsl
loop
or
mov
dec
addb
and
sub
dec
outsb
pop
push
xor
mov
paddsb
and
xor
fwait
xchg
pop
pop
add
mov
jle
and
pusha
and
in
mov
add
add
sub
sub
lods
hlt
jne
inc
sahf
cmp
sub
fisubrs
dec
dec
out
movntps
cmp
out
add
das
aas
sub
leave
das
push
xor
xchg
cmp
xor
ja
out
fiadds
outsl
sub
cvttps2pi
das
add
and
xor
xor
adc
jnp
xor
xor
ss
fs
insl
psrlw
inc
mov
adc
test
icebp
pop
pop
addr16
xchg
sarb
xor
fucomip
pop
lds
bound
rdpmc
add
aas
sbbl
leave
add
hlt
xor
add
popf
cmc
or
or
add
or
stos
or
bound
inc
push
pop
sub
movsl
pop
iret
or
sbb
push
cmp
loopne
bound
cmp
sbb
filds
push
push
aad
cmc
sbb
push
jnp
push
mov
jmp
sub
mov
rcl
and
adc
push
sub
rclb
inc
loop
sbb
sbb
and
dec
sub
cmp
pop
jecxz
adc
mov
subw
bound
push
das
and
movsl
sbb
xchg
push
xchg
gs
xor
dec
outsb
cmovs
pusha
inc
pop
es
cmpsl
pusha
push
sbb
add
test
xchg
xchg
mov
pop
mov
inc
addr16
clc
inc
inc
test
inc
daa
jno
xchg
mov
adc
add
lds
xor
loopne
outsb
shl
and
xlat
adc
pop
xchg
or
and
xchg
mov
sub
hlt
insl
push
or
sbb
mov
mov
ds
mov
jp
or
mov
add
insb
dec
inc
andb
repz
and
das
loopne
adc
xor
pop
dec
int3
jecxz
mov
jnp
jae
fcmovnu
or
jae
and
sub
dec
jecxz
xchg
cmp
notb
inc
popf
data16
add
pop
and
sbb
out
pop
adc
leave
bound
out
add
adc
popa
jno
mov
push
icebp
push
inc
jae
imul
add
push
jo
nop
int
xor
sbb
lock
enter
inc
leave
add
xchg
and
fs
iret
add
dec
adc
test
add
jl
mov
lea
jge
lea
mov
sub
lods
jle
mov
ja
arpl
inc
fwait
inc
cmp
push
and
or
jno
popf
or
pop
andl
pop
jns
mov
add
rcll
push
add
sar
xorl
xchg
add
mov
inc
adc
int3
xor
outsl
xor
xchg
leave
pop
aaa
movsb
sub
add
mov
aaa
sbb
xchg
cld
ror
adc
push
push
push
fcompl
sub
inc
rcr
dec
push
or
mov
shrb
stc
popa
sbb
ja
add
push
pop
jnp
imul
xchg
and
fisubs
adc
pop
or
popa
inc
js
mov
mov
adc
cmc
shll
jecxz
jmp
xchg
xor
sbb
insb
lods
mov
push
jb
aam
xchg
inc
shlb
lods
js
pop
inc
andl
add
inc
lahf
ljmp
notb
pop
add
cmp
outsl
inc
test
cwtl
sbb
stos
ss
xor
and
roll
add
ja
int
subl
dec
jae
add
test
js
shll
dec
pusha
cmc
shlb
or
add
test
push
sbb
mov
movsb
cld
lods
nop
inc
sbb
enter
sbb
sub
js
or
mov
lret
adc
and
rcll
add
dec
pop
mov
dec
add
dec
jge
in
or
pop
mov
mov
lret
andb
xchg
imul
mov
cs
jmp
mov
adc
dec
aas
xor
fnstsw
push
jns
loop
inc
cmp
adc
jo
push
icebp
sub
shll
jmp
add
lcall
subb
bound
or
xchg
stc
xchg
leave
cmp
in
add
lcall
mov
mov
pushf
scas
por
sbb
pop
data16
mov
jmp
aaa
sub
je
pop
sub
xor
rcl
mov
sbb
inc
xor
sti
nop
jmp
inc
fsts
sbb
adc
insb
adc
in
push
in
adc
push
mov
xchg
xchg
mov
in
shl
setne
jbe
push
inc
cli
pop
adc
adcl
cwtl
cmc
and
ret
xchg
xchg
jae
test
repz
mov
mov
sbb
cmp
mov
bound
mov
rolb
pop
adc
and
pop
or
rorb
or
movsl
inc
xchg
inc
inc
imul
or
sbb
add
mov
pusha
or
cmp
and
ret
mov
arpl
ret
incl
inc
and
aaa
push
xor
push
out
add
incl
xchg
pop
and
or
call
or
add
arpl
dec
outsb
inc
pop
enter
mov
enter
rcrb
int3
cmp
sub
pop
pusha
or
mov
mov
int
push
mov
cmp
filds
cmp
adc
inc
dec
ja
dec
xchg
xor
les
and
and
jae
and
or
or
sub
dec
push
insl
dec
roll
or
add
incl
adc
mov
push
mov
pusha
loop
cmp
inc
mov
mov
push
or
daa
cmp
push
ds
dec
loopne
xchg
adc
sahf
or
imul
and
es
les
cmp
and
inc
sub
arpl
sub
cmp
andb
sub
inc
les
test
add
jl
adc
sub
sub
out
push
jg
aas
sti
push
mov
arpl
pusha
test
and
repnz
mov
push
movb
and
jno
addr16
popa
inc
add
push
fistpl
xchg
shll
adc
or
mov
fiadds
dec
pop
push
sub
arpl
mov
add
push
data16
xor
cli
daa
in
add
jno
mov
aas
neg
push
cli
lret
xor
sub
stc
lcall
mov
or
xor
dec
and
push
fsubl
inc
and
cmpb
pusha
pop
lea
dec
mov
mov
out
gs
rolb
arpl
and
push
mov
loop
in
xchg
mov
add
xor
or
adc
test
out
pushf
inc
shll
adc
lea
or
or
push
dec
jno
ja
dec
and
and
movsb
mov
push
mov
roll
or
pop
xchg
lea
pop
jmp
and
mov
push
and
xor
jle
test
xchg
icebp
test
or
pusha
cmc
jecxz
das
test
cmc
repnz
mov
stos
aad
out
movsl
imul
daa
push
cmp
xor
dec
aaa
xor
mov
xor
cmpb
or
std
pop
test
add
and
std
dec
int3
push
mov
stc
in
js
stc
xchg
cli
mov
in
add
cwtl
mov
inc
js
shrb
mov
mov
and
dec
push
and
or
inc
outsb
pop
fcomps
xor
rolb
mov
in
jmp
nop
xchg
push
inc
add
adc
pop
inc
jae
lea
sbb
rol
mov
inc
inc
pop
or
xor
mov
mov
add
pop
xor
in
lret
xchg
leave
fadds
iret
sub
dec
xor
xor
jmp
pop
sbb
sub
sub
cs
in
daa
les
push
fmuls
cmp
fsubl
pop
dec
jne
iret
or
add
and
add
in
push
jmp
addr16
push
mov
out
pop
inc
and
jb
sub
shrl
push
popa
inc
into
out
jb
or
aad
lcall
psubw
dec
jle
ror
pop
loope
outsl
out
mov
sbb
sub
xor
jmp
push
dec
pop
jb
das
and
mov
int3
or
cmp
popf
sbb
adc
clc
std
push
push
or
cmp
mov
testb
nop
inc
aas
pop
es
xchg
scas
andb
mov
loop
sub
inc
push
mov
mov
xor
test
xlat
out
test
or
les
sbb
push
jecxz
pop
hlt
ja
cwtl
dec
lock
push
out
or
add
scas
or
das
push
jno
fs
mov
pop
fdivr
shlb
mov
lods
mov
ret
call
idivl
inc
jmp
cwtl
mov
xchg
mov
xor
mov
and
jmp
mov
jle
add
sbb
and
add
mov
mov
dec
popa
loopne
sub
aam
mov
and
dec
add
and
orl
jo
cmp
dec
ret
fs
into
xor
push
dec
add
jb
scas
movsl
nop
pop
pop
dec
xor
dec
repz
add
cmp
cli
sbb
and
and
movsb
nop
fisubs
xchg
pop
stos
dec
xlat
decl
or
cmpsl
test
push
xchg
call
mov
pushaw
movsb
xor
or
or
pop
popa
adc
sbb
popf
push
or
xor
jmp
out
in
add
mov
fnstsw
push
add
testb
in
sbb
pop
sbb
push
add
inc
in
adc
push
cmp
mov
hlt
mov
incl
jo
and
fwait
sbb
gs
mov
and
push
dec
sbbb
xchg
dec
or
pusha
icebp
or
sub
aaa
cmp
mov
mov
popf
xor
adc
xchg
cmpsb
mov
mov
fimuls
adc
or
in
xor
push
add
xchg
aas
xlat
push
inc
cmp
push
push
dec
xor
es
fidivs
inc
mov
jo
pop
xchg
loop
and
sbb
fucomp
adc
add
out
push
push
fistps
jmp
aam
mov
pop
or
inc
test
ret
and
and
outsb
sub
mov
dec
sub
cmpsl
inc
push
sbb
es
add
mov
dec
adc
mov
icebp
xchg
or
cltd
lcall
adc
push
jnp
push
in
mov
je
icebp
inc
dec
and
pop
mov
pusha
shll
cld
xchg
out
add
xor
lahf
fldl
and
mov
fmul
arpl
fmull
add
and
mov
add
test
fiaddl
roll
pop
sti
nop
rcll
nop
push
mov
loope
sbb
pop
add
xor
inc
dec
fisttps
pushf
push
pusha
adc
js
cwtl
and
cmpw
jbe
mov
mov
es
push
mov
or
push
push
mov
sub
inc
repnz
xchg
push
jno
mov
shrl
adc
mov
push
inc
insl
imul
and
rcrl
jg
cmpb
and
pop
mov
sarl
out
ret
pop
in
sbb
cwtl
jbe
push
sub
roll
add
movsb
sub
push
add
add
sub
pop
inc
add
ret
aaa
shlb
imul
xor
addl
lds
leave
pop
jne
js
js
mov
push
push
xor
xchg
xor
and
iret
sbb
jbe
jne
pop
andb
inc
sbbb
and
mov
pop
xchg
in
ja
mov
adcl
inc
ds
ljmp
sub
mov
inc
push
pop
inc
mov
popf
cmp
test
mov
and
cld
jmp
inc
inc
in
sbb
jno
add
cltd
push
daa
jg
iret
clc
dec
cmpsb
aas
pop
test
mov
pop
pop
insb
fucomp
adc
jne
jno
dec
inc
adc
adc
addl
loopne
sbb
adc
sub
cmp
test
sarb
bnd
mov
fdivl
adc
xor
call
and
adc
xor
loope
xchg
inc
bound
daa
cmp
mov
pop
int
xorb
add
jecxz
pusha
mov
outsl
nop
in
mov
push
shlb
es
cmpb
and
pop
cmp
leave
mov
push
sbb
mov
shr
and
dec
pop
mov
dec
lret
dec
in
and
jae
jle
outsl
ret
add
stos
inc
mov
sbb
sub
dec
in
fcom
ret
ret
xor
mov
cld
push
clc
inc
sbbl
or
dec
mov
test
test
xor
cltd
xchg
push
cmp
or
cmc
fwait
and
in
movsl
xor
pushf
jecxz
pop
adc
xlat
ret
and
adc
aas
mov
adc
lcall
add
pop
xchg
test
jae
and
cmpsl
loopne
lds
adc
mov
inc
dec
pop
pop
dec
push
loopne
cmp
mov
mov
pushf
pop
or
inc
add
or
lock
dec
mov
sbb
icebp
cmp
pop
sbb
pop
push
or
jg
and
xor
xor
lock
jbe
fadd
dec
or
in
shlb
jae
push
push
call
inc
xlat
pop
nop
xor
pop
test
mov
pop
pop
orl
call
or
iret
outsl
xchg
push
dec
es
mov
mov
jg
adc
ja
pop
and
ret
cmc
mov
push
mov
iret
sub
rcrb
sbb
and
add
jns
sbb
or
nop
and
mov
aas
jmp
cmp
imul
dec
lock
mov
cmp
push
movsl
add
add
cs
mov
xor
sub
je
jno
mov
mov
je
cld
ds
dec
shlb
or
sub
xchg
mov
inc
rcrl
or
aaa
add
jp
mov
push
add
cmp
mov
imul
jmp
and
push
test
xchg
nop
in
or
pushl
movsl
add
hlt
mov
mov
push
jo
fdivl
loopne
push
push
mov
inc
sbb
daa
sub
jge
and
add
jge
mov
or
into
roll
pop
addl
movsb
jge
xor
test
inc
cmp
pop
clc
ss
xchg
test
sbb
or
das
negl
adc
sbb
jae
cld
xorb
jp
cld
fwait
popf
inc
jl
mov
adc
adc
xlat
add
shlb
cs
sub
push
aaa
xor
add
iret
sbb
cmp
loopne
ret
imul
fchs
or
imul
lods
cmpsl
roll
ss
mov
and
je
add
shlb
out
je
inc
sub
and
imulb
sub
repz
or
add
hlt
ja
add
stos
mov
push
sub
dec
push
jne
mov
mov
test
or
dec
movsb
sub
stos
lds
or
fcom
lods
or
pop
jge
int
iret
xor
add
pop
dec
pusha
mov
and
xchg
or
out
mov
psubsw
xchg
adc
xchg
test
xchg
push
aas
mov
gs
jns
divl
sbb
loope
filds
pop
pop
mov
shrl
sbb
scas
js
jae
jb
sub
std
or
jge
add
mov
dec
jp
push
adc
out
and
shll
jns
pop
lds
ret
nop
into
inc
or
pop
and
cmp
pop
jmp
inc
mov
xor
inc
xor
jno
fsubr
inc
xchg
das
pop
or
sbb
cs
or
popa
leave
xchg
adc
enter
xchg
push
fldl
sub
or
dec
loop
add
and
cmp
inc
mov
cs
notl
xchg
mov
sbb
mov
iret
hlt
mov
or
mov
js
arpl
andb
je
or
sub
shlb
mov
xchg
adc
decb
and
icebp
and
imul
add
int
arpl
sbb
or
mov
gs
pop
jecxz
in
mov
es
mov
mov
ficoml
push
push
xor
xor
and
jmp
bound
sbb
loop
cld
shlb
fs
test
mov
and
push
push
mov
or
push
jge
in
mov
fwait
inc
in
cwtl
hlt
daa
ss
add
int
cmpsl
dec
dec
ret
push
inc
cwtl
or
jno
jp
or
ficoms
xor
ja
hlt
idivb
add
mov
inc
icebp
test
fs
xor
clc
pop
in
shrb
cmp
in
fs
push
cmp
cmpsb
inc
mov
js
insl
lahf
addr16
es
adc
add
cs
popa
inc
xor
push
sub
in
lock
mov
and
cmc
cmpsb
jg
add
inc
pop
mov
inc
and
lds
loop
es
jbe
mov
jl
add
mov
and
in
pop
adc
dec
gs
mov
loope
mov
mov
lock
add
flds
adc
aam
inc
rclb
movsb
and
jle
dec
mov
jns
pop
mov
dec
jg
adc
xchg
jp
add
mov
daa
add
ja
frstor
and
je
pusha
cmp
imul
push
pop
in
and
jns
mov
jne
jge
add
add
xchg
repnz
push
fucomip
rcr
pop
pop
lock
cmp
pop
mov
and
pop
je
adc
sub
insl
pusha
xor
sub
arpl
adc
push
lcall
xchg
aas
test
adc
mov
cmpl
pop
dec
loopne
xlat
push
push
fmul
pop
mov
and
mov
rolb
push
je
mov
push
cmp
and
jp
xchg
add
dec
and
jmp
mov
sub
dec
repz
fisubl
clc
lock
ss
nop
pop
cmp
mov
loopne
push
insl
push
pop
add
xor
scas
add
fmuls
cli
push
jmp
es
inc
mov
push
cltd
xchg
adc
add
mov
pop
test
xchg
push
or
fists
add
sbb
imul
popa
mov
and
inc
mov
testl
mov
js
add
or
adcb
push
leave
popa
shrb
aaa
lock
orl
fimuls
cmp
and
rolb
jmp
adc
mov
les
dec
clc
sbb
pop
push
dec
push
push
mov
pop
ret
push
cltd
mull
rclb
and
ja
ret
sbb
adc
lret
and
jge
popl
add
xor
xchg
dec
imul
les
js
adc
or
xor
in
imul
sub
xchg
xchg
subl
pop
popa
shl
lock
fs
push
outsl
fcmovb
cmp
cs
repnz
xor
shlb
dec
in
mov
pop
test
mov
inc
cmc
push
mov
orb
cmp
add
cmc
rolb
les
dec
ret
and
sarl
imul
mov
and
or
push
aas
mov
mov
jo
sbb
ret
lock
pop
or
and
xchg
inc
pop
adc
mov
mov
inc
mov
adc
rclb
orb
in
mov
adcb
add
fistpll
or
pop
xor
rcrb
or
loopne
outsb
adc
pusha
pop
movb
jp
repnz
rcll
xchg
add
nop
inc
mov
sti
sub
fs
fldt
sbb
pop
mov
mov
movsl
add
push
dec
insb
dec
outsl
in
dec
daa
in
or
loopne
fcmovnu
sub
lods
lock
addb
jae
adc
push
addl
cmc
lret
repnz
mov
test
or
add
inc
add
mov
push
add
roll
rclb
jo
push
sti
jb
vmwrite
jbe
add
outsl
outsb
js
cmp
mov
das
jno
fimuls
les
sbb
or
dec
jmp
fisubs
push
andb
push
mov
jl
imul
imul
mov
lods
test
cmp
loopne
push
xor
cmp
adc
push
jge
cmpsl
mov
fsubs
imull
inc
pop
add
jp
and
lods
fwait
or
and
dec
jge
fsubrs
push
fadds
test
push
lods
subl
imul
call
fldl
divl
andl
daa
ficoms
mov
xor
shll
std
cmp
pop
sub
addr16
std
and
lahf
jno
jno
dec
outsb
mov
bound
xchg
icebp
add
stc
adc
fs
add
aaa
cmc
adc
mov
mov
dec
in
in
lock
je
inc
repnz
in
enter
jns
jb
pop
imul
cmp
ja
or
ds
sahf
pushf
pushf
outsl
mov
js
or
dec
jp
andps
or
dec
fmull
cmp
out
pop
mov
push
add
mov
xor
test
dec
je
roll
ss
sbb
fwait
lds
movsb
jle
xchg
xchg
mov
add
test
jnp
imul
jg
push
push
out
loop
mov
jp
add
repnz
or
fildl
mov
sub
sub
pop
add
mov
push
js
mov
add
mov
test
and
rcll
xor
xor
or
adc
and
cmc
mov
js
nop
or
jl
mov
movsb
jecxz
inc
jne
cmp
test
xchg
or
pop
sbb
in
loop
dec
cltd
fs
daa
cmp
jge
inc
lds
and
test
or
insb
xchg
push
es
jl
mov
insl
faddl
fwait
loopne
adc
push
sub
ss
or
sbb
test
js
dec
pop
test
movsl
gs
cmp
jo
iret
push
pop
lods
or
stos
cmp
or
sub
mov
rcl
sub
addr16
mov
xchg
jge
sbb
rclb
cmpsb
cmp
shll
lcall
mov
cmp
adc
mov
cmpl
cmpsb
mov
dec
add
aam
ja
mov
nop
jo
xchg
test
push
xchg
xchg
xchg
nop
xchg
cmpsb
fwait
or
inc
aas
push
ret
or
cmpsb
push
sbb
pop
sub
push
sub
imul
pop
jnp
jbe
nop
sub
stc
es
pop
lret
jne
arpl
and
aaa
orb
lods
sbb
lret
movsl
inc
loop
mov
les
or
scas
test
jp
add
cmp
or
jmp
sbb
sti
or
insl
mov
dec
pop
dec
push
add
movsl
mov
and
loop
cmp
xor
imul
or
xor
jb
add
jns
jae
xor
xor
inc
data16
adc
jge
adc
push
and
dec
sub
inc
or
or
adc
rcrl
or
jg
or
xchg
and
mov
lret
dec
jg
add
hlt
in
ds
sub
or
or
cmp
dec
je
jne
mov
loopne
xchg
or
sub
arpl
std
adc
push
mov
jl
inc
inc
inc
inc
fsubrs
dec
fdivl
xor
jge
in
or
cmpsb
out
rcrl
and
outsb
inc
shrb
mov
or
mov
and
inc
adc
xchg
shrl
adc
xor
inc
and
pop
or
pop
lcall
xchg
popf
and
adc
xor
adc
adc
inc
or
js
jge
jns
mov
inc
movsl
rolb
fisubrs
insl
push
aad
pop
xor
sub
and
iret
or
add
sbb
push
jle
pop
or
sub
xchg
cmp
sbb
outsb
and
jle
push
orb
out
adc
test
fiadds
lock
or
mov
pop
loope
adc
fisubl
or
pop
adc
lahf
add
dec
sub
insl
or
in
ffree
jg
mov
pop
jae,pt
lretw
adc
int
scas
sahf
std
fstpt
adc
or
cmp
jbe
das
xchg
adc
push
push
popa
xorl
and
sub
in
dec
jp
js
repnz
lods
in
insl
xchg
call
add
sbb
nop
jns
pop
inc
scas
cmc
mov
je
add
mov
sbb
jp
movsb
das
sub
or
aaa
popf
dec
push
mov
loop
jo
xor
aaa
lret
jl
rclb
loope
stos
xor
shrb
push
mov
mov
push
dec
sub
pop
mov
pop
push
inc
cmpsl
add
sbb
jl
sti
mov
dec
push
or
fsts
movsb
jo
test
add
rdmsr
xor
cmpxchg
xor
das
adc
jne
out
stos
mov
mov
dec
dec
enter
and
fsubs
decb
mov
sbb
rolb
cmpsl
and
enter
mov
out
adc
leave
rclb
xchg
jl
xchg
xchg
or
lret
mov
inc
subb
push
movsl
add
pop
cli
pop
xor
call
or
add
pop
adc
jo
xchg
or
adc
les
outsl
xchg
mov
ds
xor
inc
pop
mov
jne
and
xchg
mov
lea
rorl
out
cmpl
jae
leave
mov
imul
xor
pop
adc
inc
loope
sub
xchg
cld
dec
push
clc
dec
dec
adc
inc
movsb
sub
xor
loope
jo
mov
int3
scas
inc
add
push
dec
cs
jne
push
mov
push
int
xor
pop
rorb
dec
sbb
sub
push
sub
adc
jg
fcmovb
dec
js
rorb
stos
notl
les
imulb
mov
and
popf
inc
lcall
dec
pushf
xchg
jo
or
push
and
sub
leave
lods
xlat
and
and
cwtl
and
inc
enter
push
lea
xchg
sbb
sbb
jo
mov
les
add
lahf
jo
mov
jle
fiaddl
inc
push
pop
add
mov
or
cmc
push
or
mov
or
bound
lds
sub
outsl
fistpl
or
sub
ja
dec
adc
jnp
xor
pop
dec
dec
push
and
inc
jne
pop
fs
enter
inc
or
fs
mov
ret
test
mov
or
jp
adc
inc
pop
ret
shrl
inc
rol
adc
mov
inc
ret
cmp
data16
mov
mov
cmp
jbe
nop
repnz
dec
push
adc
jle
xlat
push
add
and
mov
das
push
sub
xor
inc
cmp
or
lock
je
mov
jb
jle
enter
mov
cmp
adcb
xchg
sub
das
sbb
push
loope
cltd
leave
aad
sbb
push
dec
lret
fcmovne
mov
mov
mov
test
ret
arpl
rclb
push
push
inc
sbb
test
push
cs
dec
inc
fcmove
sub
dec
sub
fimull
mov
mov
sub
adc
inc
loopne
push
mov
inc
sbb
outsl
pop
popf
jne
ss
out
mov
mulb
sbb
mov
lcall
xchg
pusha
mov
mov
mov
and
inc
mov
fucomip
pop
push
pop
outsl
or
xorb
push
sbb
outsl
divb
dec
mov
xchg
push
lods
roll
das
mov
subl
cmpsl
mov
cmp
es
outsb
setl
out
lcall
fmuls
cmp
nop
and
dec
add
xchg
pop
repnz
push
nop
push
inc
add
cmp
daa
jo
sbb
mov
and
lcall
jb
push
in
dec
pop
push
js
rol
push
jle
imul
and
out
or
push
adc
fwait
pop
repnz
inc
loopne
stos
mov
sbb
inc
inc
in
xor
sbb
push
pop
aaa
inc
sub
fadds
addl
mov
sahf
mov
outsl
test
adcl
mov
xorl
inc
aad
add
push
add
in
or
jbe
or
jge
insl
adc
cld
mov
mov
inc
sub
fisttpl
pop
sti
imul
mov
sub
nop
pop
adc
cmpsl
adc
dec
push
mov
fstps
daa
cmp
xor
add
xchg
and
inc
pop
shld
add
pop
xchg
xchg
mov
and
xchg
and
cmp
and
inc
mov
dec
iret
sahf
push
ljmp
jne
xor
xchg
add
jmp
and
adc
pushf
adc
pop
pop
outsb
sbb
scas
mov
inc
dec
mov
nop
and
fimull
push
mov
xchg
nop
cmpsl
and
xchg
dec
or
and
lea
add
xor
add
pushf
pushf
adc
fs
inc
and
adc
leave
adc
ret
mov
dec
cmp
dec
int3
nop
push
rcrb
pop
imul
xor
sub
push
cli
ret
or
push
les
push
dec
inc
sbb
pop
mov
lret
jl
imul
mov
rolb
rorb
test
mov
mov
inc
xor
and
bound
mov
xor
pop
stc
gs
fwait
aas
cmp
nop
mov
fisttpl
dec
adc
or
nop
xchg
dec
xor
nop
clc
lds
mov
les
push
arpl
nop
mov
xchg
xchg
sbb
and
xchg
xchg
popa
je
or
lea
mov
fstpl
push
in
out
out
xchg
xchg
adc
xchg
inc
xchg
scas
mov
out
mov
pusha
and
adc
add
xchg
mov
es
das
outsb
push
and
in
push
aam
pop
js
scas
jp
push
mov
cmp
nop
inc
lret
and
repz
lock
subl
loop
ss
aas
or
cli
int3
mov
push
or
xor
dec
mov
cmp
add
aaa
stc
rorb
xor
adc
cltd
orb
mov
push
int
inc
inc
cltd
addr16
sbb
push
fdivrl
adc
sbbb
repnz
xchg
and
or
lea
cmpb
xchg
adc
addr16
push
repz
jp
pop
mov
or
js
mov
pop
inc
push
push
mov
jmp
out
rol
fisubrl
lcall
mov
or
xchg
adc
bound
lahf
into
add
movsl
add
xchg
in
add
scas
or
daa
adc
dec
xchg
cwtl
arpl
roll
test
push
adc
add
pop
sub
mov
adc
mov
or
xchg
mov
in
in
das
clc
cmp
dec
inc
jne
js
test
mov
rolb
or
test
xor
or
mov
inc
or
push
inc
or
push
stc
adc
push
xor
sub
lret
lret
push
out
stc
push
mov
gs
insl
push
sub
add
aaa
dec
pusha
xchg
inc
mov
adcl
rolb
push
cwtl
or
rcrl
add
cmp
loope
std
mov
test
sbb
mov
insb
push
fildl
add
cli
adc
mov
loopne
and
push
jecxz
ja
imul
xor
jecxz
xchg
pop
mov
outsl
jne
lods
aam
fsub
arpl
shr
inc
adc
cli
or
cld
mov
pop
repnz
lods
pushl
dec
adc
nop
and
mov
dec
jb
insl
popf
jns
or
jb
inc
jb
push
stc
lock
adc
lock
ret
cwtl
arpl
pop
or
ret
cmpl
cltd
or
add
push
imul
or
cmp
xor
push
dec
imul
mov
jne
dec
jp
inc
nopl
repz
imul
test
lds
je
hlt
rcrl
aaa
or
les
lret
xlat
sbb
inc
lock
pop
mov
sti
inc
subl
xchg
add
cmpsb
add
addr16
loopne
nop
imul
sbb
andb
xchg
cmp
jb
add
mov
fwait
in
imul
ljmp
fimull
jg
das
and
inc
mov
nop
cmp
fcoml
dec
sbb
dec
mov
movsb
aam
dec
fcmovnbe
cmp
pusha
jg
js,pt
push
in
jnp
mov
push
pop
pop
mov
mov
sahf
data16
fisubrs
push
test
sub
mov
outsb
fsubrl
add
fsubrl
push
cmpsl
pop
add
mov
in
arpl
arpl
lea
inc
loope
mov
lea
or
repnz
inc
js
imul
and
int3
and
pop
clc
rclb
sahf
sub
fdivrs
xchg
mov
push
and
in
call
sub
movsl
add
lock
nop
or
dec
js
das
clc
repz
adc
adc
outsb
popaw
testl
adc
jecxz
mov
jg
clc
or
sahf
imul
das
pop
sahf
adc
xchg
mov
rcrb
adc
in
stos
dec
add
add
and
imul
add
push
pop
xchg
sbb
inc
xchg
and
xor
inc
out
xchg
lcall
sub
mov
jmp
popa
imul
adc
dec
clc
or
insb
dec
or
or
ja
mov
lahf
das
fs
inc
inc
or
dec
inc
cs
and
xchg
mov
add
sahf
pop
cmpsb
inc
test
popa
fists
rcr
inc
pusha
in
je
popf
inc
mov
mov
dec
rcrb
sub
shlb
and
push
scas
shrl
add
add
lods
jmp
pop
push
dec
sbb
lahf
xchg
popf
jp
jns
sbb
pop
cmpsb
rclb
dec
push
shrl
dec
or
sbb
das
jbe
test
mov
mov
jg
lcall
popf
incl
sub
aam
popa
inc
sub
mov
or
or
or
and
and
nop
out
int3
xchg
or
pop
cmp
push
jno
outsl
and
in
cwtl
pmulhuw
shll
out
out
add
add
adc
adc
jns
repnz
add
lea
testb
adc
mov
fs
mov
repz
sbb
push
mov
scas
add
lss
movl
adc
mov
movb
mov
or
loop
push
cwtl
hlt
test
ljmp
out
mov
fwait
negb
and
mov
add
in
loopne
cwtl
aaa
mov
mov
xor
xchg
in
lahf
mov
or
inc
fbstp
sbb
sbb
sub
in
inc
mulb
add
out
nop
pop
mov
mov
jp
or
add
or
xchg
les
mov
and
mov
rolb
fld
fmull
and
sub
xchg
mov
pop
data16
xor
and
cmp
loop
xchg
jb
testb
nop
push
add
lock
icebp
mov
sbb
mov
mov
cld
lcall
sbb
push
add
pop
xchg
xor
mov
jo
cmp
aam
imul
sub
cmp
insl
push
add
mov
pop
sbb
cmp
aaa
cmp
ss
dec
call
adc
outsl
mov
aam
ret
dec
outsb
xchg
adc
xor
outsl
inc
aaa
stc
lahf
xlat
mov
lret
sti
lret
lock
inc
mov
mov
inc
jle
push
fsts
or
jno
pop
lret
ds
and
vpmacsdd
mov
cs
mov
lock
mov
xchg
subb
lods
pop
mov
jnp
push
dec
out
and
test
mov
add
fsubrl
pop
mov
xchg
sbb
push
ss
fs
inc
cmp
enter
call
push
call
dec
dec
ret
out
je
push
ret
push
shlb
addr16
clc
cld
dec
nop
ret
dec
mov
shlb
subb
sbb
xor
push
cmpsl
outsl
in
outsl
out
or
mov
lock
and
enter
or
leave
cld
popl
push
xchg
clc
xchg
jmp
loope
lcall
xchg
iret
mov
leave
mov
ret
jne
jp
xchg
je
jmp
mov
stos
movsb
xchg
xlat
movsl
jmp
sbb
int3
lea
push
lret
movsl
push
cld
in
cwtl
push
lock
pop
lret
in
hlt
adcl
rolb
xor
xchg
mov
icebp
aaa
jle
xlat
push
or
fs
pop
sahf
sahf
push
imul
call
dec
add
sbb
mov
fists
bound
aaa
icebp
fsubrl
js
addr16
int3
lods
psubsb
adc
mov
mov
repnz
cmpl
jnp
negl
push
mov
in
aas
scas
push
leave
dec
or
mov
xchg
in
add
test
mov
in
lock
sbb
mov
lock
xchg
mov
loope
cli
push
out
push
push
cmpsb
lock
add
rcrb
add
push
inc
push
int3
lods
sbb
aaa
xlat
loope
pop
pop
int
mov
inc
dec
add
outsl
pop
shrl
testb
ljmp
or
jle
adc
lsl
sbb
mov
or
jno
sti
add
faddp
push
scas
cmpsb
push
sti
das
pop
push
push
or
push
shlb
out
call
mov
sub
ja
dec
cs
dec
sahf
mov
xchg
fisttpl
cmp
gs
inc
mov
imul
push
or
jne
add
cmp
push
mov
popa
pop
mov
sub
pop
pop
and
push
dec
adc
sbb
pop
std
mov
loop
inc
jb
or
dec
sahf
ret
or
fnsave
loope
dec
mov
pop
pop
adc
fwait
and
inc
mov
aad
outsb
fsubp
dec
sbb
xchg
out
cmp
or
fdivrl
idivl
jmp
mov
mov
and
jge
loopne
fdivrs
loop
xor
adc
push
mov
popa
fdivs
int3
adc
and
cmp
je
popf
es
xchg
or
pop
ror
iret
mov
rcrb
dec
mov
add
mov
pop
std
out
push
call
inc
adc
inc
loop
cwtl
jnp
cmp
add
add
xor
lea
mulb
das
int3
mov
or
ret
adc
push
push
loope
mov
mov
mov
xor
jge
or
fwait
jmp
dec
xchg
pushf
rcrb
test
cwtl
mov
pop
inc
cwtl
sbb
and
sub
clc
inc
adc
cmp
test
push
aas
rcrl
scas
sbb
mov
pop
xchg
outsb
or
xlat
pop
iret
mov
clc
roll
pusha
les
insb
add
add
cmp
aaa
lret
stos
or
daa
rolb
add
push
or
add
mov
inc
sbb
orb
data16
fnstsw
mov
jne
out
push
mov
lahf
push
rol
test
jmp
mov
mov
das
arpl
sub
cmp
cmp
adcb
jo
cmpsb
ljmp
in
push
jp
cmp
add
push
add
cmpsl
fcmovu
fwait
lea
push
push
mov
mov
orb
jns
push
mov
inc
or
xchg
jmp
and
aam
fcom
add
lock
mov
or
mov
scas
cmpb
iret
and
mov
mov
dec
adc
or
rolb
cmpsl
sub
sbb
mov
or
or
test
pop
mov
push
rcl
push
aaa
sub
popa
inc
add
adcl
dec
aaa
cmp
sahf
add
or
cs
js
add
cmp
mov
push
imul
add
mov
mov
xchg
mov
xchg
cmpsb
rclb
std
inc
add
addb
inc
sbb
adc
addr16
nop
jle
testb
aam
les
pop
and
pop
push
push
mull
sbb
inc
jns
dec
inc
dec
push
and
mov
jae
pop
pop
fdivs
pop
sbb
nop
movsb
fwait
lret
xor
add
mov
fldenv
clc
dec
aam
or
add
or
ret
sti
sysenter
or
inc
and
jecxz
mov
push
adc
in
xlat
lods
mov
and
adc
lods
aas
xor
iret
pop
add
insl
insb
lods
push
fsts
mov
mov
icebp
adc
in
out
fsub
dec
popl
xchg
das
cmp
enter
addl
push
add
mov
test
sbb
adc
jecxz
or
dec
sti
mov
sub
xor
test
std
mov
inc
mov
fildll
adc
mov
stos
ss
loopne
pop
imul
aad
and
nop
movsb
out
xchg
push
lods
nopl
ret
bound
out
je
pop
pop
unpckhps
adc
sub
mov
aaa
xchg
push
xchg
jno
imul
or
xor
push
outsl
mov
push
xchg
push
inc
jno
or
daa
dec
ljmp
gs
or
push
or
aam
cwtl
and
cmp
adc
push
sbb
push
mov
mov
xor
xchg
addr16
fistpl
hlt
or
pop
cmp
rorl
arpl
add
add
jno
add
mov
sbb
enter
mov
mov
or
enter
and
enter
add
mov
enter
mov
ret
mov
jnp
push
ror
sbb
sbb
lea
add
addb
shr
fisttpl
movsb
mov
and
pop
sbb
call
add
add
enter
dec
cmp
adc
in
in
cmp
push
push
or
clc
dec
sar
and
pop
je
pop
dec
or
add
or
aad
and
mov
nop
mov
pop
and
rcl
or
outsl
fsub
in
dec
fcomp
fdivrl
cltd
xchg
add
rcl
cmpsb
add
aam
enter
dec
int3
mov
dec
les
xor
mov
stc
rcrb
dec
je
or
cmp
mov
pop
mov
mov
jb
jae
clc
or
push
xchg
in
movsl
xchg
xor
mov
test
sbb
sbb
mov
aas
orb
add
bound
or
lea
mov
sbb
cmpl
sbb
fwait
addl
hlt
dec
jmp
add
and
and
popa
inc
sahf
arpl
call
and
inc
pop
enter
add
insb
jmp
cmp
add
inc
in
in
inc
or
xchg
out
dec
jmp
flds
mov
insb
movb
mov
mov
push
add
xchg
ds
mov
mov
or
lret
cmp
add
arpl
jno
xchg
shr
adc
or
cmp
jne
xor
adc
add
mov
outsb
and
push
fwait
dec
daa
ror
mov
orb
adc
push
mov
mov
mov
or
or
int
add
call
push
ret
loopne
xor
shlb
adcl
inc
add
aaa
in
sbb
sub
jmp
lcall
cmp
and
add
or
add
roll
add
sub
insb
loopne
sbb
iret
sbb
add
iret
push
xchg
dec
rcrl
sti
rcrl
xor
add
mov
dec
lcall
movsb
shll
fsubrl
hlt
jno
test
sub
sub
rcl
test
sbb
mov
pcmpgtb
xor
pop
sbb
jbe
notl
push
sub
mov
push
xchg
push
mov
sub
sahf
push
jbe
bound
flds
inc
xor
cmp
jne
mov
out
and
push
push
push
cmp
or
mov
inc
dec
ds
dec
loopne
lock
movsb
sarl
js
dec
xor
push
and
repnz
pushf
xor
mov
repz
nop
int
fdiv
int3
int3
sub
inc
dec
lsl
int
imul
pop
push
xchg
andb
inc
cmpsb
push
adc
cmp
rorb
in
arpl
and
xchg
inc
push
enter
sbb
mov
or
adc
out
mov
nop
push
enter
inc
dec
jl
dec
pop
rorb
inc
dec
shll
and
xchg
fisttpll
mov
sub
add
test
jae
imul
sub
test
xchg
popa
push
scas
rorb
add
dec
iret
cmc
hlt
xchg
or
xchg
hlt
lock
inc
xor
call
nop
mov
push
sbb
daa
loopne
add
loopne
sub
faddl
xchg
xchg
xchg
xchg
add
cs
aam
pop
mov
adc
aaa
in
lock
add
fbld
enter
inc
mov
cmpsb
add
push
pushf
arpl
lret
loope
imul
cmpsb
mov
adc
push
push
cmp
fwait
xchg
and
jne
insb
pop
add
push
shl
aaa
ficoml
pop
push
jp
gs
stos
dec
sub
adc
sbb
push
mov
movb
movsl
sbb
cmp
lcall
stos
mov
jecxz
out
add
nop
sub
int
adc
stos
jae
xor
push
mov
dec
rcr
xor
add
loope
ja
lcall
adc
add
cwtl
adc
adc
mov
loope
adc
jmp
adc
cmp
cmp
nop
xor
imul
cmc
mov
cltd
pushf
cli
and
mov
test
push
stc
add
cmpsb
and
mov
call
add
xchg
sub
inc
sub
insb
sbb
and
sub
in
cld
sbb
outsb
test
inc
add
inc
jb
lock
lcall
jns
and
call
loope
sub
filds
movsb
jb
int
in
movl
mov
mov
push
lret
mov
or
call
and
inc
enter
push
loopne
and
cmp
cli
rorb
mov
mov
push
lock
xchg
lcall
jne
adc
jne
sbb
cmc
mov
mov
loop
dec
ljmp
mov
iret
cmp
add
aam
sti
xchg
lret
push
jnp
mov
push
in
adc
push
pop
jg
or
lret
sarb
lret
rorb
inc
fmull
lret
int3
dec
or
add
nop
cmp
dec
les
stos
lret
les
inc
mov
stos
lret
rorb
push
nop
stos
lret
mov
nop
mov
dec
push
mov
pop
and
out
fxtract
loopne
jae
hlt
hlt
insb
rorb
inc
insl
stc
hlt
das
mov
adc
pushw
push
out
scas
ret
test
ds
push
in
xchg
add
sub
in
add
push
je
sahf
lods
shrl
roll
bndstx
or
mov
push
sub
sub
arpl
xchg
das
loope
or
jb
mov
ficomps
xchg
inc
mov
cwtl
jle
adc
sbb
mov
ret
shl
movb
sbb
lock
and
mov
inc
mov
das
sbb
add
dec
andl
icebp
pusha
xor
test
mov
dec
pop
enter
ret
xorb
sbb
mov
xlat
and
and
popa
fisubrl
pop
pop
rcrb
test
nop
cmpsl
cmpsl
and
aam
fsubp
add
rorb
pop
push
jg
out
iret
movsl
lret
icebp
ss
aad
add
outsl
lds
loopne
and
mov
fsubrl
sbb
lock
dec
fsubrs
dec
addl
outsl
and
mov
aam
shrb
lock
rorb
outsl
push
in
sbb
enter
cmp
les
fs
push
rol
cli
jns
div
push
or
sbb
jno
adc
mov
jge
cmp
adcl
dec
inc
outsb
adc
adc
dec
lods
cmp
mov
sub
aaa
test
clc
orb
movsb
test
int
sbb
mov
pop
and
fldcw
xlat
mov
sub
lahf
push
and
push
xchg
flds
or
pop
adc
dec
nop
or
jne
in
inc
aaa
daa
in
in
inc
fstps
mov
sub
cmp
cmp
mov
xchg
push
lds
repz
fsubs
or
and
xchg
stos
adcb
mov
pop
or
push
sbb
mov
ficoml
pop
mov
mov
sbb
lcall
xchg
jae
jae
in
add
jae
aam
add
cmp
mov
adc
jmp
inc
or
orb
inc
dec
lock
or
xor
adc
nop
xchg
es
push
xor
imul
in
pop
fstpt
mov
pop
faddl
xor
push
push
jl
and
enter
xor
stc
xor
push
je
stc
call
dec
in
in
je
push
dec
inc
cmp
adc
fcomp
dec
fdivr
fcompl
xchg
dec
fdivr
fcomps
xchg
dec
aam
aam
pop
xor
pop
xor
int3
enter
pop
enter
lea
xchg
adc
and
push
mov
xchg
enter
or
arpl
push
sub
xchg
inc
add
enter
push
test
mov
cmc
imul
mov
add
pop
nop
and
sahf
pop
repnz
mov
ffree
sub
out
mov
lods
xor
jns
fimuls
cwtl
orb
jmp
cld
dec
xchg
imul
add
dec
jmp
addb
sbb
jge
jb
enter
fimuls
push
xorl
inc
ss
add
ret
loopne
imul
stos
stc
add
inc
push
inc
nop
or
xchg
rolb
xchg
inc
test
sbb
leave
jae
repnz
add
leave
fcom
pop
mov
or
iret
jo
imul
lea
cmp
and
nop
test
aaa
push
mov
xchg
mov
rcr
mov
lds
jge
adc
mov
test
cltd
xor
mov
sbb
adc
push
add
andb
cli
xor
out
jle
test
das
int3
icebp
lret
cmp
add
ds
mov
insb
push
ds
ret
jo
jo
call
adc
add
inc
inc
rolb
add
cmp
loope
mov
add
cmpsl
jg
cmpb
inc
lock
insb
add
rsm
adc
xor
and
in
or
add
and
imul
xchg
stc
sbb
ret
lock
test
push
lock
adc
xchg
fsubrs
test
and
and
shll
jl
mov
add
lahf
xchg
dec
lcall
or
dec
mov
dec
mov
cmp
popa
or
ret
daa
mov
add
out
and
stos
push
pop
js
addb
add
les
aas
xor
dec
cmp
or
sub
jecxz
dec
mov
cli
fsubr
or
subb
adc
and
lods
pop
add
and
xorl
add
sbb
ret
cmp
xor
sbb
cmp
dec
rcrb
daa
shrb
shr
stos
add
movl
mov
iret
ret
pop
scas
into
in
stos
lock
in
stos
clc
ret
sub
sub
push
test
bound
mov
idivl
xchg
cmp
xor
xchg
popa
rcrl
push
rorl
in
dec
adc
int
clc
fmuls
pop
subl
push
outsb
fldenv
or
adc
sbb
pop
out
push
push
shl
loopne
test
fucomp
pop
rcrb
add
dec
and
and
in
dec
das
inc
pop
vmovhps
adc
add
mov
aad
dec
dec
inc
loopne
add
or
test
xor
push
nop
arpl
xchg
xchg
call
lock
add
repz
add
adc
cmp
xchg
add
faddp
dec
ds
add
test
daa
jecxz
xor
sbb
jmp
inc
inc
jmp
mov
xchg
and
mov
pop
xor
mov
mov
test
adc
adc
fsubrs
movsl
pop
and
roll
sub
add
push
out
mov
inc
mov
ret
mov
push
aas
lods
xchg
add
pop
outsl
sub
add
das
mov
mov
aaa
pop
incl
add
pop
inc
or
or
in
rorl
arpl
adc
push
mov
add
lret
mov
pop
jns
inc
add
mov
adc
adc
push
sbb
sbb
test
mov
or
and
xchg
das
add
push
and
cld
daa
mov
aad
dec
mov
ret
mov
jns
aaa
mov
in
in
add
push
mov
or
insl
int3
xchg
add
test
push
xchg
add
icebp
sbb
out
cwtl
les
das
inc
cmp
fadds
lock
mov
add
shl
xchg
sbb
mov
pop
fs
cmpl
or
xor
push
push
and
adc
lock
mov
adc
sbb
insb
adc
cld
pop
loope
das
pop
nop
or
push
sbb
fildl
ja
stos
adc
mov
push
inc
cmpsl
or
xor
and
push
push
testl
adc
test
jle
sub
or
pop
sub
xchg
repnz
gs
hlt
lock
pop
and
fucomi
push
dec
xchg
outsl
shr
jo
lds
mov
adc
scas
mov
add
pushl
aas
push
mov
dec
cld
das
adc
push
fldz
ja
jo
xchg
das
in
lds
mov
je
jb
mov
dec
je
repnz
xchg
push
or
loop
in
shlb
push
movsb
pushf
adc
mov
test
aad
xchg
xorb
popf
or
std
out
and
sbb
push
add
mov
lea
inc
sub
sti
adc
mov
pop
les
dec
push
jg
xchg
cwtl
std
add
cmpsl
shrb
leave
in
add
add
add
cmp
cmp
inc
leave
cmove
and
lds
ret
in
xor
xor
push
or
cli
fstps
outsl
je
loop
dec
xor
cmp
push
inc
movb
test
mov
jno
jne
xchg
call
iret
push
mov
jl
mov
femms
pop
push
sub
pop
push
dec
push
bound
xor
dec
dec
in
inc
sub
jae
mov
adc
movsb
or
hlt
jbe
xchg
xor
cwtl
mov
insl
inc
sbb
clc
je
addl
xchg
adc
popf
test
lret
arpl
or
pop
jno
lcall
xchg
jmp
dec
mov
jmp
push
enter
sub
pop
testl
out
jne
or
dec
push
shr
cmp
inc
xor
xchg
xchg
das
push
fcoms
add
add
sbb
js
hlt
sbb
pop
push
mov
inc
addl
inc
add
call
add
das
fildll
add
push
adc
adc
sub
dec
and
sbb
shll
xlat
xor
push
push
das
sub
sub
jg
lods
push
dec
cmp
pop
cli
dec
sarb
sarl
sbb
push
or
dec
dec
loopne
jg
mov
or
out
ficomps
sub
cmpsb
push
in
std
dec
lret
ret
ja
lods
mov
pop
cmp
jl
add
sub
rcll
ljmp
and
jbe
les
sbb
jmp
dec
mov
hlt
stc
sti
sub
xchg
prefetch
icebp
mov
cmc
push
dec
cs
push
jg
jge
dec
orl
adc
repnz
jp
das
adc
cmp
fsts
shl
pop
cmp
and
mov
fsubrs
push
inc
jg
pop
mov
and
andb
push
cmpsb
xchg
or
mov
inc
ljmp
ret
sarl
or
addb
dec
into
imul
inc
test
add
repz
add
shufps
push
ret
shrl
dec
or
mov
cwtl
jmp
add
fwait
stos
pop
cs
ret
movsl
add
pop
xor
mov
in
mov
mov
lfs
or
sarl
jecxz
add
pop
jge
mov
pop
and
add
gs
pop
add
mov
mov
rolb
add
in
insb
xchg
in
data16
mov
je
movsl
sub
jge
inc
bound
mov
sub
bound
cwtl
dec
mov
imul
gs
ficoml
or
scas
aaa
fs
mov
add
add
and
call
ds
and
cmp
mov
push
ja
adc
outsl
notb
or
lods
imul
aam
jmp
mov
pop
push
inc
sub
adc
mov
sbb
xchg
add
inc
nop
dec
rol
or
xchg
jno
sbb
inc
or
cmp
maxps
or
pop
add
inc
rclb
push
pop
add
push
add
add
jp
mov
adc
xor
and
mov
stos
pop
outsl
mov
or
mov
pop
sub
shlb
or
cmp
cmpsl
xor
jmp
inc
sub
push
or
in
cmp
add
cld
mov
sub
inc
dec
inc
mov
sbb
loopne
xchg
mov
push
fmuls
and
addb
insl
lds
mov
push
pop
test
sahf
dec
sbbb
adc
add
das
popf
mov
adc
adc
sbb
scas
cld
test
decl
pop
pop
pushl
push
pushf
xchg
stc
xor
xor
mov
or
mov
popa
mov
fs
inc
push
jbe
or
and
dec
shrb
xor
int
nop
arpl
jo
add
inc
sbb
mov
int
pop
loope
push
mov
in
mov
dec
ret
nop
push
inc
test
aaa
lret
fdivr
push
or
dec
bound
mov
dec
or
jne
sbb
dec
lahf
push
and
hlt
roll
pusha
paddw
sbb
negl
sbb
sub
jo
or
lea
jecxz
cmp
sbb
sahf
daa
dec
loopne
aad
ss
xor
pop
mov
movsb
and
push
fidivrl
loopne
pushf
sub
add
dec
mov
daa
mov
xor
and
lret
inc
mov
xor
cmpsb
es
gs
scas
sbb
lods
xor
xor
gs
addr16
adc
inc
sbbl
clc
shrb
js
je
js
imul
mov
cld
sbb
das
test
sbb
or
push
cwtl
inc
push
inc
scas
inc
dec
pop
je
or
cmpsl
push
dec
jp
mov
xchg
movsl
cmpsl
push
add
fwait
sbb
das
mov
xlat
sub
rolb
pusha
push
pop
cmp
add
push
addb
push
loopne
push
cld
push
pop
addl
adcl
push
lahf
test
inc
cmp
push
dec
and
dec
cmp
cmp
cmpsb
test
or
inc
push
lea
cmp
inc
push
lahf
pop
sti
add
aas
or
cmpsb
mov
jne
jl
jl
push
xchg
add
pop
push
and
mov
add
aaa
jno
xchg
shl
dec
roll
inc
inc
inc
push
add
adc
mov
inc
and
shll
dec
dec
pusha
sbb
adc
frstor
xor
insb
lods
rorl
push
sbb
mov
pop
jle
sbb
sti
xor
cmpb
ljmp
or
mov
insb
pop
mov
jo
data16
call
and
insb
push
movsl
or
or
mov
xlat
lock
add
push
xchg
ds
jge
push
or
mov
xlat
repnz
add
mov
fidivs
je
add
int3
int3
mov
je
sub
dec
push
and
mov
dec
aaa
xor
in
inc
outsb
cltd
sti
clc
data16
gs
scas
test
mov
xchg
in
cmpsb
mov
push
jle
cli
je
and
rcrb
add
add
aaa
inc
mov
imul
cmp
jl
cs
and
mov
cmp
popa
xor
arpl
daa
sbb
sbb
push
cmp
call
insb
sbbl
int
jnp
sub
adc
pop
inc
mov
pop
sub
std
pusha
push
sub
dec
jge
repnz
inc
ret
in
mov
and
cmp
or
add
push
lock
pop
cmp
sbbb
outsl
mov
pop
sbb
mov
sub
xchg
ds
jne
fildl
xchg
inc
gs
push
cltd
mov
pop
dec
cmc
adc
mov
outsl
addl
ja
push
and
mov
jle
popa
or
add
add
and
add
dec
adc
dec
mov
push
loopne
jle
adc
fwait
adc
cld
jb
and
adc
xchg
mov
cwtl
sub
xchg
inc
add
pushf
inc
push
inc
inc
call
sbb
dec
push
jb
mov
mov
call
bound
lret
inc
xchg
xor
rolb
out
sbb
push
mov
push
dec
mov
add
push
stc
sbb
xor
sbb
cmp
lods
das
sbb
jmp
sbb
pop
or
scas
sbb
mov
nopl
or
jo
and
ret
sbb
ja
and
sub
rcll
adc
pop
orb
push
es
or
xor
popa
mov
sbb
lret
jno
jp
lret
cltd
and
mov
pop
push
scas
or
sbb
sbb
lahf
add
ret
dec
and
dec
fbstp
xor
dec
shrl
stos
push
xor
xchg
mov
cmp
mov
aad
rcll
imul
sbb
rcl
sarb
or
or
fiadds
sub
je
adc
bound
cmp
pop
sbb
js
mov
xchg
and
sub
rorl
lcall
addb
punpckhwd
sub
add
scas
add
lcall
clc
roll
add
call
xchg
push
mov
lea
push
arpl
sti
mov
mov
push
add
jnp
mov
jne
lea
pop
mov
pop
lcall
fldl
sbb
push
int
mov
or
sub
rcr
mov
ds
out
sub
roll
xor
scas
or
cmp
mov
adc
rorb
xchg
roll
inc
dec
push
adcb
or
mov
jg
xor
mov
pop
push
ret
pop
fimull
rol
in
fmull
mov
sub
ret
pop
push
mov
sub
fdivr
push
inc
add
dec
cmp
arpl
push
sti
lret
inc
lret
adc
push
jb
lret
pop
add
insb
sbb
sbb
or
push
outsl
icebp
mov
xchg
xchg
lret
inc
push
data16
aam
add
andb
mov
dec
push
shr
adc
mov
mov
adc
test
adc
push
push
insl
nop
mov
movsb
xchg
mov
jb
xor
sub
ret
xchg
cmp
adc
cltd
add
inc
mov
cld
add
test
push
inc
inc
mov
shrb
sub
push
sbb
sub
loopne
jb
xor
out
cwtl
inc
imulb
fsts
out
jae
mov
or
or
add
push
mov
xchg
push
xchg
and
cmp
mov
push
dec
pushf
or
loope
pop
xchg
aaa
fsts
lret
add
cltd
xor
jo
jo
or
jo
rcll
sub
adc
out
je,pt
mov
xlat
sarb
jae
or
push
mov
inc
cmp
xor
stos
sbb
rcrb
and
rolb
or
orl
mov
pop
repnz
ja
nop
cmp
dec
cld
ja
xchg
push
cwtl
iret
jle
daa
sbb
divl
dec
ret
mov
pop
add
fdivl
adcl
or
jno
mov
fdivl
adc
js
or
sub
or
adc
ss
pxor
test
mov
adc
cwtl
adc
popa
je
adc
mov
ja
ret
adc
adc
mov
push
sbb
jnp
jo
mov
jnp,pn
hlt
add
lock
adc
lods
push
push
and
xor
dec
das
inc
mov
sbb
adc
or
rorb
loop
xor
test
xchg
xor
addl
and
add
cmpsl
mov
movsb
imul
push
sbb
and
pop
lock
ja
cmp
pop
add
adc
dec
sub
inc
pop
mov
mov
movsl
dec
bound
xor
sub
cmpb
cmp
mov
or
pop
sbb
lea
mov
xchg
sub
sti
stos
mov
sarb
sahf
test
insb
pushf
rclb
insl
mov
rorl
push
inc
cmp
or
aas
insb
mov
rorb
add
lret
xor
dec
xchg
sarb
cltd
adc
inc
pop
push
adc
shlb
add
sub
fs
xor
scas
enter
xor
push
enter
xlat
push
xor
adc
sbb
add
add
inc
jmp
pop
adc
cmpsl
dec
cld
cld
and
or
push
cwtl
iret
and
fwait
and
aaa
lret
jle
jle
add
inc
xlat
cmp
add
push
out
icebp
and
inc
adc
xor
pop
jne
or
insb
sbb
jmp
inc
pop
dec
jecxz
lret
into
mov
rcrb
movsl
dec
adcl
jnp
call
pop
lret
add
lods
leave
arpl
xor
aas
jae
inc
insl
adc
xor
lea
loop
in
or
lret
scas
push
pusha
loop
cld
jge
push
arpl
icebp
nop
push
push
adc
xchg
adc
inc
es
jo
adc
add
pusha
or
push
lcall
lds
mov
fs
pop
push
add
in
jl
cmp
repz
or
pop
sbbl
xor
inc
mov
sbb
cmp
xchg
and
lods
inc
es
sub
adc
sbb
fnstsw
cmp
pop
xchg
adc
sbb
mov
inc
nop
sbb
cs
outsb
or
scas
pop
push
jno
sbb
ss
push
insb
push
adc
push
mov
imul
dec
add
test
jge
dec
out
mov
dec
clc
pop
xor
cmp
cmp
pop
daa
sbb
jb
in
or
or
xchg
cmp
mov
orb
xor
cmpsl
jbe
testb
sub
add
fsts
sub
mov
pop
cmpsb
pop
sbb
addr16
inc
in
mov
bound
iret
arpl
jo
add
jae
scas
mov
xor
push
fwait
pop
cmp
pop
push
xchg
ficompl
xor
mov
dec
xlat
lcall
push
in
enter
out
xchg
or
out
inc
sub
ss
lahf
or
push
pushf
leave
mov
outsb
mov
scas
inc
scas
loopne
aas
scas
adc
mov
insb
push
inc
ret
out
pop
add
sbb
xor
adc
push
xor
sbb
inc
xchg
cmp
or
in
pop
imul
popa
and
dec
or
cs
dec
dec
fs
testl
scas
lahf
push
inc
bound
or
jno
cmp
inc
out
enter
mov
or
addl
pop
insl
mov
xchg
fists
mov
lahf
dec
mov
mov
jb
mov
inc
mov
or
mov
addl
cmp
sti
mov
push
xor
inc
mov
scas
inc
xor
ds
arpl
pop
push
pop
push
sbb
es
adc
jg
xor
push
or
ja
imul
mov
xor
nop
sub
pop
test
push
xor
arpl
enter
cs
xor
std
cmp
inc
push
xor
inc
mov
aaa
aaa
pusha
jbe
pop
or
lahf
imul
test
ja
ljmp
test
or
jnp
xchg
jecxz
add
fisubrs
or
pop
or
push
push
jnp
fisubl
das
aas
outsb
lcall
xor
inc
out
add
or
add
xchg
or
idivb
sub
das
inc
dec
inc
push
sbb
iret
cvtps2pi
pop
dec
out
sub
cmp
push
dec
mov
outsb
xor
adc
mov
pop
push
outsl
dec
mov
imul
dec
and
imul
pop
sbb
cmp
mov
das
or
mov
cmp
sub
shll
addb
pop
or
xor
sub
jo
lahf
push
add
mov
jo
lock
add
add
pop
cmpb
add
fdivl
xchg
je
push
call
mov
mov
mov
or
xchg
test
xchg
filds
add
push
pop
sbb
pop
aaa
addb
jo
scas
aaa
push
jo
inc
aaa
sub
xor
jmp
pop
cmp
pop
cmp
adc
shrl
dec
lahf
or
popa
in
adc
insb
xchg
sub
mov
dec
into
mov
lahf
inc
sub
pop
loope
pop
ss
xor
push
mov
rclb
dec
dec
inc
pop
ret
mov
lahf
inc
or
out
rol
adc
pop
cmp
push
icebp
xor
mov
inc
lds
adc
daa
push
inc
push
push
mov
xor
xor
push
add
aaa
mov
adc
cmp
xor
or
mov
sub
or
jp
mov
arpl
push
mov
jp
lds
mov
xor
pop
ss
add
enter
sarl
jo
and
negb
pusha
out
mov
mov
mov
adc
imul
xor
sub
or
addr16
xchg
and
arpl
outsl
cmpsb
xor
lds
or
aas
sti
xor
dec
adc
in
inc
cmpsl
leave
and
insl
idivl
xor
add
xor
lods
add
cmp
fcmovnu
jo
mov
aas
add
dec
and
xchg
out
or
mov
or
subb
cmpb
pop
adc
cmp
push
and
xlat
jo
test
adc
clc
jecxz
pop
lods
dec
addl
add
lahf
inc
repz
lea
addr16
pusha
push
dec
adc
xor
adc
mov
pop
je
jg
push
sub
add
dec
test
or
and
mov
dec
push
xchg
push
pop
and
cmp
cs
sahf
mov
inc
aaa
outsl
xor
sub
cmpsb
inc
ret
pop
adc
jbe
cs
out
aaa
push
mov
scas
xor
xor
xor
add
orl
jno
sub
jle
mov
test
adc
xor
ja
or
ja
pop
xor
aaa
add
pop
sbb
loop
jmp
addr16
pop
inc
adcl
dec
inc
loop
ret
les
xchg
scas
or
pop
add
cmp
pop
aas
insl
add
sub
outsb
movsb
outsl
testl
scas
into
mov
loop
adc
out
xor
aaa
or
xor
loop
push
cs
fisubs
ss
repnz
or
incl
scas
aaa
adc
xchg
cmp
sbb
inc
scas
pop
aaa
adc
mov
addl
sub
mov
out
jge
arpl
jle
outsb
insb
and
jbe
cmp
outsb
lea
mov
xor
or
mov
push
inc
cmpsl
bound
cmp
test
mov
mull
test
mov
scas
pop
or
sub
pop
mov
xchg
inc
add
adc
orb
in
xor
xchg
jae
add
adc
mov
ja
mov
fimull
xchg
sbb
xor
outsb
or
pop
aad
das
pop
ss
unpcklps
pop
add
push
sbb
inc
stos
xor
aaa
ret
sub
dec
mov
xor
mov
lahf
inc
lcall
jbe
loop
sub
dec
push
push
ret
push
jg
push
mov
add
decl
inc
pop
inc
loopne
or
roll
jle
or
push
cwtl
test
lds
add
negl
es
lahf
add
push
xor
dec
fldt
cmp
aas
xor
xor
dec
scas
nop
xor
es
int3
pop
adc
dec
add
push
adc
dec
les
mov
mov
aas
add
sub
xor
adc
xor
cmp
xor
pop
leave
xor
xor
sbb
xlat
xor
sbb
jne
xor
xor
xchg
pop
adc
xor
xchg
test
or
pop
es
mov
ljmp
adc
jp
xchg
dec
jnp
decl
fidivl
dec
jb
iret
adc
xor
add
inc
dec
cs
shlb
rcll
inc
push
push
xor
pop
scas
pop
mov
ss
scas
fistpll
inc
dec
test
fs
cmp
and
xor
inc
push
xor
xor
xor
das
adc
daa
adc
into
sbb
mov
mov
mov
xchg
ss
adc
out
imul
mov
mov
xchg
cmp
sbb
sbb
aas
inc
pop
test
mov
or
or
or
lahf
dec
pop
mov
or
inc
out
pop
and
dec
dec
and
pop
aaa
xchg
pop
sbbl
aaa
dec
push
push
sub
cmpsb
push
mov
add
ret
iret
out
inc
orl
cmp
inc
xor
cmp
aad
mov
add
imul
sbb
into
jbe
shrl
inc
scas
lcall
inc
cmp
out
out
shlb
out
pop
sub
push
into
cmp
jne
cmpsl
jg
cmp
aas
scas
stos
mov
or
data16
ljmp
push
pop
scas
xor
pop
mov
push
jae
pop
jo
in
add
inc
dec
rorl
sbb
cmp
push
scas
pusha
test
and
inc
movsb
xor
inc
inc
xchg
mov
or
adc
hlt
mov
je
cmpsl
mov
push
xor
mov
and
stos
fbstp
adc
xchg
sub
ja
jno
subb
test
mov
iret
iret
and
jae
xorb
push
push
push
enter
mov
push
sub
sbb
push
das
lea
pop
aaa
aas
dec
leave
aam
push
cmp
and
cmp
cmp
add
lcall
mov
mov
test
lahf
lods
fs
sahf
mov
cs
inc
add
push
popf
push
stos
xor
or
adc
data16
cmp
mov
es
test
push
mov
test
addr16
xlat
inc
test
jo
lahf
jnp
mov
outsb
out
adc
sbb
jnp
inc
stos
movb
aaa
fldenv
sbb
cmp
into
push
pop
xor
mov
jo
inc
xchg
ds
test
push
add
mov
xchg
aaa
adc
pop
dec
adc
xor
and
das
add
imul
dec
sbb
out
add
mov
or
push
push
or
bound
sar
out
xor
adc
out
pop
stos
mov
mov
aas
add
xor
outsl
aas
dec
or
push
loope
xchg
adc
notb
test
jae
dec
sbb
mov
out
xchg
xchg
xlat
push
sti
xchg
fdivs
xor
dec
outsl
imul
cmp
mov
pop
sbb
mov
push
inc
jbe
addr16
sub
mov
pop
outsb
push
mov
cmpsl
sarl
aad
mov
rol
pop
dec
pop
inc
sub
repz
push
xor
andl
fidivs
sub
popa
add
addr16
lds
ret
xor
test
or
and
jb
pop
push
fimull
or
dec
je
sub
push
dec
outsl
inc
add
dec
xor
push
imul
sub
mov
int3
push
dec
ja
je
adc
sub
sub
fwait
inc
ss
bound
sbb
das
cmp
loopne
or
cmp
xor
mov
xchg
xor
outsl
cmpsl
testl
nop
and
xor
fisubrs
dec
push
ja
mov
xor
add
sub
push
dec
mov
loopne
pop
aaa
stos
cmpsb
and
cmp
pop
or
or
mov
mov
pop
stos
mov
inc
pcmpeqd
mov
sub
push
or
inc
inc
push
add
in
jnp
xor
xor
xchg
sbb
xor
or
das
div
xor
leave
adc
xor
push
divl
sbb
and
xchg
pop
and
xor
push
jbe
xchg
or
inc
decl
test
into
inc
add
inc
inc
mov
pop
inc
adc
and
jno
adc
or
divl
xor
mov
mov
push
or
or
xor
mov
ret
sub
daa
femms
cwtl
rol
push
cmp
mov
sbbl
das
dec
insb
out
repnz
faddl
test
mov
sbb
or
aaa
xchg
sbb
rcrl
pop
btc
jae
arpl
add
ss
lock
daa
adc
jmp
jae
adc
movsl
insb
xchg
mov
divl
xor
xchg
leave
adc
iret
xor
adcl
adc
iret
xor
pop
outsl
xchg
iret
dec
mov
js
in
xchg
aaa
lods
in
mov
lods
fsubs
iret
xchg
iret
xor
es
push
fidivl
xor
or
xor
aas
adc
lods
and
shlb
mov
mov
mov
xorl
xor
cmpsl
xor
scas
nop
xor
enter
fbld
iret
xor
ss
and
leave
ss
testb
pop
xor
nop
addl
cmp
jb
sbb
cmp
cmp
adc
out
xor
push
mov
cvtpi2ps
mov
daa
adc
adcl
xor
outsb
sbb
out
mul
mov
pop
xor
cmp
lea
adcb
xchg
and
aad
cmp
mov
fmuls
cmpsl
outsl
cmpsl
lods
jbe
lods
or
xor
or
pop
sbb
daa
or
fwait
iret
outsb
shlb
add
or
aaa
add
js
xor
or
mov
mov
inc
jb
xor
ja
insb
mov
hlt
push
repnz
pop
mov
pop
mov
pop
insb
xor
inc
push
xor
test
dec
or
mov
out
lahf
push
dec
push
andb
lahf
out
sub
cmpsb
outsb
push
loopne
and
push
test
rorl
lahf
das
in
fcoms
cmpsl
inc
or
or
inc
or
mov
adc
into
xchg
mov
mov
push
lds
push
sahf
ltr
in
ljmp
inc
push
push
sub
xor
push
shlb
inc
xchg
lea
and
test
push
or
inc
mov
pop
lcall
push
sbb
outsl
inc
dec
mov
dec
fisubrl
add
das
idivl
outsb
mov
sbb
imul
iret
mov
push
fimull
xchg
xchg
fcmovbe
insl
add
push
fbstp
cmpsb
push
inc
adc
ss
out
push
outsl
out
add
push
dec
xchg
xor
push
or
inc
sbb
ds
inc
and
cmp
mov
inc
popa
cs
pop
adc
outsl
aas
cmp
push
add
cltd
mov
aas
cmp
and
inc
and
or
sub
xor
adc
cmp
jmp
sbb
adc
and
sub
xor
pop
xor
adc
ljmp
push
lds
outsl
daa
xor
xchg
stos
xor
mov
xor
pusha
repz
sub
xor
pusha
or
xor
xor
cltd
cmp
and
mov
xor
cmp
xor
push
or
cmp
daa
xor
xor
and
daa
xor
xchg
stos
in
ss
cmp
cs
and
aaa
jb
push
and
xchg
sbb
push
cmp
sbb
jg
sub
loopne
clc
addl
push
inc
adc
out
cmp
arpl
mov
clc
jnp
or
dec
dec
add
out
fimull
dec
push
ss
aas
sub
push
xor
adc
sbb
scas
mov
add
xor
mov
push
leave
jb
inc
shlb
pop
outsl
aaa
push
addl
movsb
or
inc
or
xchg
iret
leave
push
adc
adc
mov
xor
xor
push
adc
mov
adc
jg
pop
or
mov
or
aaa
inc
pop
push
ret
inc
gs
cmpsl
mov
cli
daa
sub
and
add
cmpsl
mov
mov
xchg
mov
pop
daa
ja
test
daa
sbb
cmp
add
negb
mov
xchg
sahf
fimull
adc
add
dec
ja
mov
fcmovu
mov
cmpsl
addr16
push
sub
sub
mov
out
pop
or
dec
fwait
push
imul
xchg
xchg
aaa
fcoms
outsl
mov
scas
push
pop
cmp
mov
pop
and
subb
insl
add
sub
jnp
data16
sbb
mov
imul
mov
inc
adc
or
idivb
inc
js
sub
and
mov
pop
mov
pushl
inc
psraw
xchg
jge
sbb
jnp
push
fiadds
jne
inc
add
mov
cmp
bound
dec
les
js
push
and
inc
shrl
adc
imul
jge
shll
fiaddl
aad
xor
dec
lds
dec
inc
mov
mov
mov
pop
jae
mov
in
cmp
imul
sub
sti
imul
or
inc
adc
scas
cmp
inc
fildll
movsl
jmp
pop
movl
xchg
imul
addl
aad
fbld
mov
testb
out
mov
in
mov
aas
xor
fs
and
outsl
enter
push
inc
das
or
mov
push
add
pop
pop
test
ja
rorb
adc
add
aas
cmp
shrl
adc
sbb
cmp
aas
xor
add
lcall
pop
inc
mov
push
or
xlat
xor
inc
aaa
out
pop
dec
mov
jb
xchg
inc
shrb
bound
je
xchg
jl
popa
add
leave
push
roll
insl
test
mov
inc
mov
push
sbb
lds
mov
imul
imul
or
fbld
jg
rorl
inc
repnz
pop
enter
push
inc
push
pop
sub
mov
ds
xor
jns
sub
ss
xchg
ja
sbb
mov
leave
shrl
xchg
cmp
insb
decl
pop
mov
and
and
adc
push
push
enter
adc
add
adc
addr16
xchg
les
mov
iret
pop
dec
pop
push
data16
jb
outsl
pop
pop
adc
cmpsb
lods
sti
scas
adc
and
push
inc
notl
push
lods
sub
fs
iret
shrb
and
adc
mov
mov
stos
cli
mov
arpl
or
ja
or
imul
inc
subb
stos
jo
add
sbb
pop
arpl
push
nop
imul
dec
push
xchg
xchg
bound
jae
add
loopne
pop
or
push
or
or
imul
mov
push
roll
mov
shlb
mov
inc
mov
pop
xor
cmp
pop
pop
push
inc
scas
inc
sbb
sbb
adc
xor
push
iret
int3
rolb
in
lahf
addl
adc
pop
insl
inc
pop
lods
push
mov
pop
sbb
xor
inc
or
dec
xor
inc
and
pop
ja
cmp
push
inc
cmp
inc
lods
or
cmpsb
inc
lahf
or
dec
sbb
movsl
add
iret
or
aad
fists
inc
into
add
nop
cmp
lsl
and
xor
scas
push
and
adc
inc
sub
sbb
pop
paddsb
mov
ja
fwait
push
test
sbb
xor
testl
pop
pop
or
cs
dec
and
ds
pop
jp
addr16
in
arpl
inc
push
push
sub
sub
pop
shrb
inc
xor
xor
fistps
ret
push
iret
dec
inc
insb
jne
aas
push
add
dec
adc
jmp
add
push
and
jg
push
ss
adcb
divl
jb
xor
leave
add
add
and
pop
out
xchg
mov
aaa
mov
xor
jge
inc
mov
das
push
scas
pop
rcr
or
jb
iret
insl
daa
adcb
test
or
cmp
pop
push
lahf
xor
push
test
sbb
dec
aad
and
adc
rorb
mov
stos
adc
and
push
cli
imul
add
aad
ja
loop
ficoml
fisttps
pop
mov
lods
shlb
xchg
push
insl
outsb
mov
push
sti
fistl
aad
mov
lcall
sbb
jle
lahf
fimull
insb
inc
inc
into
cmp
or
inc
mov
mov
je
bound
push
jmp
inc
inc
cmovge
mov
cmovae
adc
xchg
jg
lods
add
mov
mov
adc
insb
outsb
xor
dec
pop
roll
sub
dec
or
or
das
or
dec
sbb
popa
xchg
lcall
mov
cmpsb
add
nop
pusha
jae
jecxz
xor
push
outsl
mov
dec
pop
lcall
test
mov
add
push
pop
xchg
inc
divl
push
sbb
xchg
sub
das
push
add
lret
cmp
outsl
ja
les
icebp
ja
lods
mov
jbe
ja
pop
mov
andb
adc
add
jae
inc
lahf
clc
shlb
insl
and
fidivl
ss
lahf
pop
inc
cmp
test
or
fdivs
lea
in
ss
ja
add
add
lahf
das
inc
ljmp
mov
xchg
or
mov
mov
xor
mov
xor
add
add
inc
adc
push
mov
xorb
scas
push
mov
aaa
ja
testb
inc
mov
sbb
daa
imul
xor
mov
add
mov
filds
out
jmp
sbb
pop
and
cmp
jne
mov
iret
jnp
jo
rcr
mov
pop
nop
mov
dec
enter
outsb
mov
xchg
and
lahf
sti
sbb
mov
incb
pmulhuw
in
xchg
in
mov
in
mov
in
jb
je
in
in
jbe
js
in
in
jp
jl
in
in
jle
pusha
popa
in
in
bound
gs
in
addr16
in
in
imul
in
outsb
outsl
push
push
in
in
push
push
push
push
in
in
push
push
pop
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
dec
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
out
in
ds
and
inc
inc
and
jnp
cmpb
push
cmp
dec
es
das
repnz
sar
sub
das
cmp
sarb
push
test
pop
add
add
sub
ljmp
xchg
sbb
dec
push
jecxz
sub
adc
xor
xor
dec
sub
lock
daa
out
loopne
and
sbb
lcall
into
sub
in
and
xlat
dec
out
in
mov
les
mov
movsb
mov
pop
dec
imul
sub
popl
jno
movsb
popa
sub
xor
push
or
jns
dec
aaa
outsb
push
pop
push
and
or
popa
or
pusha
mov
lods
addr16
ret
add
or
in
add
and
adc
frstor
and
lods
ss
inc
insl
add
ja
jno
cmpsl
mov
ss
jae
popf
test
pop
fs
loopne
adc
scas
push
or
dec
jge
rcl
lcall
dec
inc
ds
or
subb
cmc
lahf
setp
pop
and
pop
xor
stc
outsb
push
sbb
or
ret
or
scas
sub
adc
push
sbb
rcrl
out
push
dec
xchg
jbe
or
je
dec
dec
stos
bswap
addb
dec
inc
or
add
add
cmp
cmp
and
clc
mov
enter
gs
insb
popa
mull
adc
cmp
xor
pop
test
adc
push
push
xchg
add
int
divl
inc
push
push
enter
pop
andl
scas
push
and
sarb
gs
loop
add
in
cmpsl
add
add
ret
mov
mov
std
push
data16
and
xchg
dec
ret
pop
xlat
xchg
and
in
je
push
jg
pop
call
add
cmp
mov
popa
arpl
nop
and
pusha
shlb
push
in
fucomp
adc
jge
and
aaa
or
dec
push
sbb
adc
jmp
pop
fcoms
loopne
pop
adc
std
and
aas
stos
je
scas
jne
push
es
and
cmp
aam
or
mov
dec
mov
push
sbb
push
jne
mov
mov
or
jmp
xchg
pop
mov
shlb
loop
rcrb
adcl
mov
addb
mov
idivb
jne
adc
dec
mov
cmp
ror
xorb
enter
in
jne
jmp
inc
mov
xor
jnp
jbe
cmp
or
cmp
sbb
iret
das
adc
push
adc
fs
inc
mov
mov
mov
jnp
mov
gs
shlb
rorb
mov
or
and
addr16
enter
pop
or
testb
sbb
xchg
xchg
sub
jb
inc
xchg
dec
cld
or
cmp
scas
inc
dec
jne
outsl
sbbl
push
adc
addr16
adc
jmp
mov
or
mov
mov
roll
lea
mov
add
ja
insl
sbb
or
mov
pop
orb
or
mov
push
pop
mov
call
mov
scas
dec
call
and
in
xchg
add
out
loopne
sti
sub
cmp
inc
adc
lods
inc
mov
insl
sbb
mov
xchg
add
xchg
out
mov
sub
add
mov
mov
rol
stos
lods
aam
mov
sub
sub
pop
ja
jne
pusha
xor
lock
cmpsb
adc
dec
jle
sub
je
sub
loope
cmp
call
cli
aad
jbe
push
mov
dec
imul
pop
loope
lods
int3
fcoms
push
adc
mov
negl
xchg
pop
jmp
adc
movsb
lock
fisttpl
cs
les
jne
push
aad
adc
ja
test
sbb
mov
xchg
movsb
loop
mov
shll
jno
sahf
fsubrs
mov
ja
repnz
xor
pop
jmp
sbb
jb
and
ja
insb
adc
pop
add
sub
push
or
jl
push
in
fs
icebp
xor
cmp
in
pop
jo
mov
adc
shr
jnp
in
rorb
in
test
fwait
mov
ja
enter
cwtl
test
imul
jle
insb
out
sub
push
fdivrs
dec
xor
idivl
or
mov
fists
test
inc
mov
cwtl
add
mov
stos
lods
sbb
mov
mov
or
adc
movsb
lea
in
aad
shlb
or
sbb
pushf
mov
out
ljmp
faddl
pop
mov
sub
outsl
scas
jno
push
add
push
or
sub
xlat
cmp
mov
loopne
push
shlb
xor
mov
push
rorb
mov
pop
dec
dec
inc
sbb
adc
scas
bound
xlat
sub
in
sub
pop
xchg
add
push
fcmovnb
adc
xchg
cmp
fistl
nop
fdivs
add
mov
gs
lds
adc
sbb
int
imul
fbstp
jecxz
out
lods
sub
add
scas
sahf
das
fcmovnb
xlat
inc
jmp
cmp
divl
xorb
xor
adc
andl
lock
sbb
adc
xchg
loopne
sbb
xchg
pop
mov
enter
mov
mov
and
adc
fcompl
mov
mov
es
jnp
inc
sub
inc
xor
pop
dec
in
mov
pop
repnz
push
inc
push
and
sbb
test
cs
dec
out
mov
daa
dec
out
sahf
mov
pop
inc
dec
dec
push
in
or
inc
push
push
dec
aad
mov
daa
xorb
dec
lahf
es
pop
push
sbb
or
mov
pop
push
sub
loopne
rcrb
inc
add
pop
jo
fisubrs
call
scas
addb
dec
push
and
or
fsubs
dec
imull
pop
dec
negl
rol
push
mov
ja
lods
adc
inc
testb
inc
das
add
leave
xor
pop
dec
sbb
testl
inc
cmp
inc
push
push
mov
jecxz
xchg
dec
lahf
das
xchg
je
jbe
xchg
shll
sbb
leave
das
fistl
mov
outsl
rclb
xor
inc
fiaddl
movb
pop
rolb
mov
sub
push
mov
and
mov
cmp
jne
xorl
jne
xchg
xor
rcr
mov
push
pop
adc
or
sub
popa
mov
lock
sbb
adc
dec
sub
mov
insl
ret
xlat
mov
xchg
dec
mov
pop
aaa
orb
pop
xor
xor
push
ja
jbe
loope
ja
push
sub
mov
inc
sbb
pop
mov
pop
push
ja
es
leave
add
cmp
pusha
rcrl
jb
pop
leave
xor
aam
enter
adc
sbb
push
shlb
incl
addr16
mov
inc
inc
mov
mov
sub
cltd
lods
mov
jo
mov
ss
dec
cmpsb
xchg
push
aaa
leave
xchg
pop
in
inc
dec
xor
add
stos
pop
xor
jb
pop
inc
inc
pop
rcrl
push
ja
adc
and
or
ja
and
xor
or
dec
push
fisubrl
push
push
mov
xlat
push
push
subb
pop
ret
insl
xchg
push
push
pop
daa
xchg
test
inc
mov
push
push
and
xor
mov
pop
outsl
dec
jg
mov
mov
scas
test
xor
sti
ret
dec
cmpsb
dec
out
insl
call
sub
addr16
test
add
dec
ja
ja
xchg
aas
push
pop
leave
mov
dec
cwtl
lcall
scas
in
pop
push
push
mov
push
pop
push
push
sbb
test
stos
mov
outsl
add
pop
push
notl
or
dec
push
push
and
pop
push
test
mov
dec
pop
pop
loopne
cmpsb
cmc
idivl
pop
xchg
test
inc
pop
pushf
adc
lods
adc
sub
lds
xchg
sbb
add
mov
push
icebp
insl
lahf
out
call
ss
add
repz
push
aas
push
pop
movb
gs
jae
push
cld
rorb
pop
or
pop
pusha
xbegin
sub
in
sub
xsaveopt
call
xchg
test
lret
xchg
rclb
inc
nop
mov
add
add
ficompl
push
push
cmp
add
add
mov
sub
rorl
lock
or
and
sub
pop
mov
or
dec
and
addl
ja
les
inc
jno
add
clc
xchg
pavgw
inc
fsubrl
mov
call
sbb
jle
fabs
fmul
imul
call
sub
outsl
data16
sbb
faddp
fs
add
adc
inc
xor
sbb
add
repnz
sbb
data16
in
or
mov
and
mov
and
mov
dec
cs
in
xlat
inc
insb
xchg
mov
add
xor
and
fs
xchg
add
cmp
repnz
dec
cs
and
mov
xchg
mov
fistl
lods
es
and
mov
call
and
das
cltd
es
sbb
sub
jb
mov
pop
pushf
in
xchg
dec
pop
sub
pusha
nop
leave
and
mov
xchg
xchg
pop
jb
enter
cs
xchg
dec
repnz
call
pop
jb
and
mov
xchg
aam
leave
and
add
sub
xchg
pop
xorb
in
pusha
cwtl
dec
pop
jb
enter
cs
mov
dec
adc
cmp
and
in
dec
pop
sub
push
mov
dec
cs
and
cmpb
ljmp
clc
sub
pop
jb
and
xchg
call
sub
insb
mov
clc
dec
in
cwtl
fs
xchg
pop
call
and
mov
xchg
xchg
pop
jb
loopne
lock
cs
xchg
pop
xor
xor
mov
sbb
mov
cwtl
in
xor
dec
xor
test
mov
hlt
push
cs
xchg
xchg
pop
rolb
cmp
dec
cs
xchg
dec
repnz
notl
in
clc
je
xchg
pop
xor
add
inc
jl
cs
in
or
push
mov
dec
fcompl
pop
jnp
and
cld
cmpsl
xchg
xchg
pop
pop
pop
int3
or
dec
cs
mov
pop
pop
mov
jb
and
sbb
insb
mov
popa
add
push
pop
pop
and
mov
add
jb
pushf
call
in
push
pop
jb
and
movsb
loopne
mov
xchg
sbb
mov
inc
jns
add
dec
fcomps
pusha
in
xchg
pop
pushf
in
pop
xchg
dec
cs
je
call
pop
or
sub
xlat
cs
in
pop
add
js
repnz
dec
or
add
in
and
jl
pop
cs
pop
mov
dec
push
sete
leave
mov
xchg
cmp
inc
pop
fcoms
adc
and
and
insb
dec
pop
jb
mov
inc
adc
aam
adc
pop
jb
and
mov
aam
push
jns
and
pop
repnz
dec
es
or
fsubs
hlt
inc
and
sub
sbb
pop
jb
dec
lods
sbb
jns
and
and
xchg
dec
es
xchg
mov
xchg
dec
pop
jb
sub
jo
xchg
mov
js
es
faddl
xchg
dec
repnz
clc
cmp
mov
jb
in
and
enter
pop
and
jo
leave
and
mov
fcompl
and
in
add
pusha
dec
es
mov
daa
dec
xchg
mov
adc
fs
jb
and
mov
rclb
jb
and
and
sub
cltd
in
sub
test
dec
repnz
call
es
and
dec
repnz
dec
int3
sbb
pusha
jns
and
xor
xchg
dec
es
call
call
das
xchg
dec
pop
mov
andb
xor
pop
jb
push
cltd
in
sub
pusha
nop
mov
lock
jb
and
fs
xchg
pop
loopne
ss
popf
dec
cs
dec
scas
push
jg
aaa
das
pop
data16
sub
sarb
add
popl
xchg
lcall
adc
call
push
into
add
lock
out
je,pn
sbb
cltd
pop
aas
lea
es
add
lock
jl
pop
and
ret
push
popa
call
or
mov
add
in
fnop
mov
dec
mov
fnstcw
pop
mov
shll
nop
imul
sbb
hlt
cltd
push
mov
mov
adc
sbb
or
push
mov
xor
jbe
shlb
xchg
push
add
mov
rclb
and
data16
cmp
or
cmp
int3
jge
sub
outsb
and
dec
adc
flds
and
push
movsl
loopne
add
shlb
loopne
jae
out
pop
mov
and
les
aad
lock
cmp
int3
mov
add
mov
ja,pn
add
xor
out
push
ljmp
jbe
cmc
fincstp
pop
jle
add
jne
jae
lcall
adc
xchg
fadd
push
push
mov
das
pop
adc
add
roll
data16
jbe,pn
pcmpeqw
stos
mov
push
cs
mov
das
mov
jb,pt
add
ja
sub
xchg
mov
fistl
sub
addr16
pop
xorb
negl
les
insb
mov
pop
test
add
fadds
in
fs
xor
xchg
push
xor
pop
adc
adc
inc
pop
bts
jae
testb
add
jno
addr16
xchg
es
aaa
shll
enter
jb
imul
push
rcll
bound
jg
jnp
and
aaa
mov
sbb
mov
aad
and
fwait
xorb
adc
daa
xchg
lods
das
pop
adc
outsb
pop
sbb
jae
js
call
cmp
add
comiss
inc
sbb
mov
inc
das
sub
cmpsl
outsl
xor
jmp
jp
jne
inc
adc
sub
call
aaa
add
addr16
xlat
xchg
imul
mov
or
rorl
scas
pop
imul
pop
insb
aas
xor
push
test
enter
or
mov
inc
jb
sbb
jo
push
repz
and
mov
aaa
jne
inc
ret
test
das
imul
mov
fmuls
mov
push
inc
pop
pop
daa
mov
xchg
fwait
xor
push
ret
pop
das
outsb
aas
outsb
mov
jne
or
inc
repnz
pop
mov
pop
in
add
cs
inc
leave
add
gs
mov
ret
dec
ljmp
bound
js,pn
daa
iret
inc
push
mov
mov
adc
aad
xorb
jb
insl
sbb
imul
daa
stos
pause
mov
fbstp
and
das
out
pop
lock
ret
pusha
fucomp
push
je
sbb
addb
sub
add
js
adc
adc
inc
scas
or
jg
je
inc
mov
dec
arpl
push
adc
xchg
or
adcb
ja
jae
xlat
mov
aas
sub
or
pop
daa
data16
jb
sub
xchg
dec
insb
mov
jb
jmp
divb
ljmp
out
popa
add
test
jo
repnz
in
ret
fbstp
je
push
enter
sbb
lds
subl
fisubrl
jp
aas
dec
push
pop
or
lds
fidivl
repz
mov
das
data16
inc
inc
or
jb
ja
scas
mov
js
nop
lret
xchg
lods
daa
push
adc
loop
lods
add
outsl
adc
add
jo
test
outsl
ja
js
or
sbb
or
xor
cmp
outsl
jp
daa
xlat
or
mov
cmpsl
insb
xlat
scas
xor
dec
imul
scas
je
push
out
dec
mov
pop
xor
push
push
jb
push
cmp
addr16
jmp
add
adc
sub
fbld
pop
insl
inc
mov
out
bound
fisubs
bound
aas
and
aad
outsl
outsl
push
or
ljmp
push
outsw
shll
push
sbb
das
pop
add
lcall
add
js
ret
insl
shll
outsb
mov
sub
insb
imul
inc
jb
dec
jbe
fisubs
pop
push
arpl
js
pusha
rcll
rorb
and
mov
enter
into
or
aad
cld
ret
fists
rorb
pop
xlat
push
xor
and
push
mov
inc
fildll
inc
or
inc
popa
ja
xchg
pop
shrl
ja
adc
or
jmp
imul
mov
outsl
push
js
sbb
inc
andb
adc
insb
push
sbb
adc
xor
inc
inc
push
add
pop
or
stos
imul
push
pop
or
cs
pop
add
scas
jo
jo
cmp
xchg
jbe
js
scas
in
js
outsb
jb
aaa
cmp
and
inc
adc
jne
arpl
sbb
and
xlat
sub
add
mov
xor
inc
jg
or
popa
imul
inc
cmp
pop
or
repz
inc
shll
fnsave
adc
and
fldl
out
jne
push
in
push
xlat
outsb
lahf
insl
pop
sub
jae
pop
sbb
jae
xor
mov
outsb
ja
mov
fsubs
mov
inc
lds
imul
sbb
pop
daa
insb
stos
fcoms
aaa
inc
scas
lahf
les
adc
outsb
inc
stos
add
or
mov
mov
loopne
aaa
movb
xchg
pop
push
and
out
or
cmpsb
mov
push
rolb
sarl
ljmp
movsl
sub
roll
sub
jp
dec
test
xor
lods
divl
notl
imull
mov
sub
sbbb
and
mov
sbb
dec
subl
mov
call
arpl
test
push
jbe
inc
fiaddl
lock
popa
pop
notw
rorb
push
lods
jb
push
xor
or
addr16
xor
loope
push
insl
scas
add
sub
aam
jb
imul
adc
push
push
lahf
inc
mov
ljmp
push
pop
jns
push
cmp
arpl
push
mov
or
pop
mov
outsl
add
add
daa
jo
inc
roll
pop
add
jmp
pop
add
dec
arpl
xorl
cmp
call
jno
jmp
outsl
xor
insb
xchg
pusha
pop
fbld
mov
ja
lods
cli
or
push
inc
push
and
push
sahf
xchg
ss
pusha
out
fs
cmc
inc
push
inc
inc
mov
sbb
bound
inc
ret
mulb
xchg
js
pop
jb
nop
test
mov
pop
inc
pop
ja
adc
sub
stos
loopne
daa
imul
adc
push
jmp
adc
sub
lds
ss
jp
orb
call
lea
fadds
and
pusha
or
sub
mov
pop
pop
pop
arpl
jae
xor
push
daa
xchg
jbe
xchg
sbb
mov
mov
pusha
hlt
test
xorb
cs
bound
mov
mov
pop
sub
sbb
gs
loopne
add
jbe
jns
adc
and
dec
lods
add
out
out
rcrl
jg
jg
push
leave
leave
sbb
ljmp
pop
add
sbbb
and
sbb
and
lea
or
popf
dec
daa
pop
ret
add
lds
stos
sub
addr16
gs
push
jne
mov
jo
pop
je
sub
xor
push
inc
xchg
push
push
inc
imull
or
mov
dec
es
cmp
ja
jo
pop
bnd
lahf
jno
jo
cmpsb
or
cmp
bound
iret
xor
mov
add
push
scas
mov
lock
aas
das
add
cs
pop
mov
xor
pop
adc
clc
aam
ljmp
stos
jg
imul
sbb
mov
push
ret
inc
cmp
and
push
and
push
jnp
and
ret
push
pop
bound
sbb
imul
lea
imul
mov
xchg
push
push
jne
ja
adc
mov
mov
ljmp
outsb
shlb
add
mov
cmp
mov
sbb
cmpsl
push
and
test
dec
adc
fsubrs
xchg
aas
inc
in
pop
insl
xchg
iret
imul
mov
mov
or
js
stos
mov
lcall
push
jmp
jg
xchg
jg
cmp
aad
insb
aas
inc
adc
xor
test
or
cs
jae
popa
pop
xchg
pop
jg
sbb
cmova
stos
jecxz
adc
push
test
push
out
dec
inc
sbb
xchg
dec
mov
xor
sub
adc
push
das
sbb
lcall
movl
inc
inc
xlat
es
sahf
push
popa
cmpsl
mov
inc
insl
xchg
adc
ljmp
or
xchg
das
push
test
pop
inc
push
test
les
pop
or
cmp
notl
jns
into
int3
test
es
insl
shll
xchg
dec
sbb
push
rcrl
pusha
ljmp
ja
xchg
aas
add
add
outsl
xor
push
sbb
outsl
mov
addr16
adc
and
dec
pop
sub
repz
leave
mov
push
aas
sub
inc
push
mov
iret
das
and
dec
inc
iret
nop
imul
pop
or
xchg
sbb
jae
imul
or
mov
dec
rolb
and
xor
add
addb
out
shlb
stos
pusha
xlat
push
fwait
pop
add
out
loop
popa
stos
mov
in
push
in
js
aas
push
sub
add
adc
das
pop
xor
inc
iret
cmp
test
sub
push
les
inc
sub
fistpll
push
out
cmp
mov
mov
dec
scas
arpl
xor
stos
decl
inc
loopne
ret
add
add
cmpl
cmpsb
test
and
aaa
jg
or
dec
aaa
mov
dec
jbe
inc
push
bndstx
insl
cmpsl
cmpsl
insl
add
add
push
mov
lock
pop
mov
jae
dec
ffree
pusha
into
cmpsl
stos
or
sbb
jmp
outsl
or
adc
data16
xchg
dec
sub
fdivrs
fs
pop
inc
adcl
xchg
call
add
rcrl
lahf
icebp
es
inc
xchg
imul
lds
adc
mov
mov
push
jg
stos
adc
inc
ja
xchg
das
pusha
dec
mov
mov
inc
leave
adc
add
addl
jne
pop
js
add
fisttps
ret
jb
jno
xlat
jb
or
or
or
les
adcb
int
fistpll
xchg
je
mov
jb
xor
ss
mov
jo
fnstcw
push
push
sub
inc
mov
shrb
xchg
adc
sbb
dec
test
jb
jg
mov
and
pop
out
adc
mov
cmp
es
mov
adc
sub
outsb
out
test
push
or
xchg
push
test
mov
aam
fbstp
add
and
and
or
pop
or
stos
sub
out
inc
or
rorb
outsl
pop
inc
push
push
xchg
inc
loopne
daa
gs
sbb
rcll
aas
les
mov
push
mov
jg
cmp
xchg
push
jmp
ficoml
iret
mov
xor
add
cmpsb
add
mov
sub
mov
imul
iret
mov
sti
inc
out
int3
jp
in
je
sarl
mov
push
dec
sub
add
pop
push
ja
jnp
jbe
outsl
aad
dec
sti
scas
orl
add
jae
and
push
xlat
outsl
xchg
dec
xor
push
mov
cmp
pop
addb
cmp
ljmp
adc
adc
push
pop
add
sbbb
ja
sub
ja
lds
cmpsl
ja
xchg
fisubrl
stos
add
xchg
push
adc
and
mov
aas
or
pop
stos
xlat
das
jae
add
mov
mov
push
push
mov
das
out
xchg
sbb
inc
cmp
dec
arpl
fisubrs
movsl
bound
jbe
or
pop
xchg
je
adc
sbb
push
outsb
xchg
or
cs
and
or
shll
sub
jg
bound
sub
mov
inc
mov
xlat
imul
in
sub
jl
das
dec
ja
xlat
mov
mov
ret
xchg
push
add
xor
sub
xorl
or
aam
mov
push
jg
sub
mov
das
mov
sarb
subb
adc
cmpsl
xor
and
mov
and
call
add
sbb
xor
jnp
jne
sub
add
inc
push
enter
test
rorb
sbb
ja
mov
pusha
inc
inc
cmpsl
adc
ja
or
fisttps
sbb
iret
xor
pop
sbb
cmp
xchg
lahf
xchg
addb
je
and
add
sub
sub
xor
mov
sbbb
jnp
decl
pop
push
test
mov
lret
lea
pop
aas
xor
dec
add
inc
jg
push
test
pop
ret
xchg
jne
adcl
or
inc
dec
jns
pop
int
das
push
mov
mov
mov
inc
xor
pusha
add
xchg
pop
cs
dec
mov
or
sub
dec
jne
sub
sti
fildll
lcall
push
js
jg
mov
fbstp
js
mov
imul
dec
outsl
jbe
movsl
push
iret
adc
push
xchg
pop
sub
and
dec
push
imull
aaa
les
ficoml
daa
arpl
stos
mov
inc
pop
pop
ret
mov
stos
pop
add
andl
aam
xlat
or
mov
and
shrb
test
imul
add
add
adc
fidivl
sub
mov
push
jg
push
jg
mov
xor
ja
pop
dec
movsb
sbb
jae
add
sbb
cmc
or
xor
fs
adc
pop
mov
jo
jb
or
inc
dec
xor
js
sub
mov
mov
lods
imul
push
out
inc
sbbb
add
scas
xchg
push
dec
aaa
inc
stos
sarb
aaa
mov
push
pop
daa
iret
push
stos
mull
test
lahf
and
add
arpl
popa
outsl
jecxz
adc
or
adc
jno
push
outsl
xchg
push
lret
dec
push
inc
add
imul
ja
adc
and
xor
lods
dec
daa
sub
push
rol
add
adc
and
in
cmpb
sub
arpl
sbb
mov
mov
cmc
xchg
lahf
sbb
fisubrs
cmp
scas
notb
pop
sbb
pop
pop
pop
ss
push
pop
out
push
adc
add
addr16
dec
test
scas
js
inc
xor
pop
leave
inc
mov
push
out
jb
push
addr16
cmp
out
iret
adc
arpl
inc
pop
sub
addr16
jno
test
ss
sub
scas
adc
xor
pop
mov
ja
pop
pop
push
inc
enter
insb
sahf
movsl
mov
or
lret
cmp
pop
mov
rcrl
xor
scas
push
jg
mov
mov
sbb
xor
cmp
and
test
mov
dec
sub
jge
repz
insb
lds
pop
mov
inc
pop
pop
rcrb
push
adc
adc
mov
mov
xchg
push
cmp
icebp
jne
lahf
popa
in
mov
xor
push
lahf
lock
jb
adc
clc
and
movl
jnp
jmp
test
call
add
and
cmp
iret
imul
sbb
adc
lock
mov
add
aaa
mov
sub
stos
mov
pop
pusha
dec
adc
mov
adc
or
mov
mov
adc
push
adc
inc
or
mov
and
sub
push
push
das
xchg
test
insl
cmpxchg
mov
adc
cmpl
pop
push
roll
loope
aad
cltd
cmp
adc
cwtl
cwtl
popa
js
adc
inc
addl
jge
and
subl
xchg
lods
inc
pushl
inc
xchg
addb
xchg
shrl
pmaxsw
add
lock
xor
pop
xor
mov
jle
sarl
adc
clc
ja
aam
ljmp
cmpsl
and
cmp
out
dec
inc
aas
int3
cmp
or
cmp
adc
sbb
mov
add
or
sbb
test
mov
dec
mov
and
sub
roll
in
mov
cmp
shlb
lock
loopne
sbb
mov
inc
add
stc
push
jmp
adc
push
add
jl
sbb
inc
lcall
lock
cltd
out
mov
js
mov
xchg
or
loopne
add
or
cs
mov
or
or
pop
add
cmpsl
cmp
jg
cltd
xorb
das
xor
stos
movsb
pop
jo
inc
mov
pop
jb
push
inc
adc
mov
sbb
aad
lock
or
cld
push
pop
test
aas
add
pop
pusha
fwait
ja
popa
pop
inc
jae
popa
pop
lret
les
shll
in
inc
xor
adc
cld
mov
mov
pslld
inc
mov
scas
pop
sub
jg
or
inc
inc
add
or
enter
ret
dec
and
ljmp
incl
add
jle
add
sarb
adc
inc
or
shl
xor
push
fsubl
or
mov
or
xchg
lahf
cs
imul
or
dec
movsl
add
mov
mov
cs
xor
push
mov
xor
sbb
popf
andb
imul
sub
sbb
mov
adc
adc
sbb
pop
pushf
leave
push
mov
xor
pop
rcl
sbb
loopne
imul
dec
sbbl
jmp
imul
jle
cld
adc
cmp
pop
add
lods
in
and
jge
mov
fdivrs
push
or
xlat
pop
aaa
fdivrs
sbb
or
and
stos
movsl
pop
sbb
xchg
xorb
and
push
in
sub
sub
movsl
jge
xor
pop
in
lock
in
push
or
cmp
push
lock
jmp
cmpsb
aam
mov
pop
aam
sbb
rorb
ror
rolb
outsl
inc
push
push
and
xchg
xchg
je
ret
pusha
add
and
mov
push
mov
pop
lds
mov
adc
into
inc
sbb
adc
add
mov
movsb
xor
adc
divl
dec
outsl
dec
sub
push
pusha
in
lea
mov
push
adc
inc
xor
push
notb
inc
dec
sbb
clc
inc
dec
xchg
jbe
test
jne
lahf
test
inc
ret
jo
inc
and
ficompl
sub
out
mov
lods
int3
shlb
mov
push
cmp
jl
cmp
push
cmp
jmp
nop
sarb
jne
mov
and
sbb
xor
add
jmp
repnz
mov
aad
xor
fsubl
and
mov
jle
sbb
cmp
jle
or
clc
adc
mov
cmpsb
push
scas
pop
fistl
mov
cmp
sbb
xor
ss
sarl
xchg
lock
add
insb
mov
test
mov
jne
dec
in
cmp
fisubs
add
jne,pt
imul
inc
dec
sti
jnp
push
jge
in
aad
xchg
add
out
cwtl
push
cld
insl
ja
inc
fnstsw
xchg
movzbl
loopne
mov
je
loopne
inc
push
and
xor
mov
loop
and
jmp
xor
pop
std
clc
mov
xchg
mov
or
cli
mov
sbb
ja
mov
or
in
int
push
or
out
scas
adc
outsl
addb
add
sub
add
fs
add
leave
inc
movl
nop
nop
imul
mov
sbb
std
fs
xlat
cmp
sub
dec
xchg
fadds
loopne
movsl
jecxz
pop
mov
cmc
in
push
xchg
aam
lods
and
lahf
scas
add
int
test
dec
xchg
mov
xor
sbb
hlt
rcll
mov
push
mov
and
adcb
xchg
dec
and
mov
xor
loop
sbb
push
aad
pusha
packuswb
das
push
fdivrl
movsb
js
test
jns
or
mov
shrb
lock
jecxz
mov
nop
mov
in
xchg
xor
lods
push
and
xor
cmp
sbb
and
mov
data16
mov
enter
dec
or
adc
fsubr
push
dec
sub
xor
shlb
cmpl
outsb
push
sub
movsb
imul
cmp
pop
push
imul
or
insb
orl
add
mov
add
ret
iret
push
stc
mov
jb
push
out
les
loope
lret
js
mov
xchg
or
and
cs
and
jo
repnz
dec
clc
cmp
and
div
mov
cmp
dec
bound
adc
sbb
rorl
or
popa
dec
adc
mov
adc
fildl
fsubrp
adc
add
sub
lret
inc
inc
aas
dec
xchg
scas
or
scas
outsb
addr16
or
and
rep
lea
add
movq
js
cltd
adc
jp,pt
stos
lcall
test
sbb
rcrb
push
push
mov
iret
mov
xchg
add
repnz
and
push
inc
mov
cs
inc
cmp
mov
adc
adc
orl
dec
lods
and
push
and
inc
mov
xor
adc
fdivrs
jno
pop
cmp
mov
dec
ss
daa
pusha
push
mov
push
sahf
sub
sub
lock
xor
stos
dec
adc
add
pop
xchg
pusha
mov
add
mov
push
mov
and
cmp
adc
enter
movsb
fsubl
adc
cmp
mov
in
ss
pop
jne
xor
jne
shl
xchg
cmp
jle
mov
ja
jno
jge
xor
push
sbb
maxps
test
aam
inc
sti
or
dec
jecxz
pop
jge
sub
lea
mov
push
adc
pusha
adcb
pop
seto
and
mov
ret
pop
push
pop
mov
xor
fsubs
movsb
sub
inc
ret
sub
xchg
js
inc
je
xor
nop
les
adc
mov
inc
out
mov
or
mov
test
inc
add
sub
push
push
hlt
add
movsb
sub
fcomps
sub
sbb
cltd
sbb
outsl
pusha
or
aas
ret
adc
pop
lock
jmp
dec
outsl
jns
orl
nop
leave
cmp
push
add
xchg
mov
fnstcw
loopne
dec
cmp
call
mov
adc
adc
shll
sub
xchg
movsb
sbb
xor
and
pop
sbb
push
add
sbb
add
popa
or
pop
push
pusha
pop
or
push
cmpsl
scas
pop
jg
xchg
les
outsb
pop
aas
scas
push
or
push
add
cmp
inc
push
pop
sti
sbb
inc
add
test
push
mov
ja
jnp
and
inc
inc
add
movsb
cmpsb
in
in
xchg
push
jns
scas
and
std
xchg
mov
imul
fcomps
push
aad
dec
push
mov
push
pop
fstpt
cmp
fildl
push
cmpsb
ret
add
inc
fisubl
jle
insl
jmp
inc
cld
movsb
push
daa
gs
xchg
ja
rol
in
lcall
je
adc
mov
or
and
test
movsl
rolb
pop
xlat
pop
adc
psubsb
or
lock
mov
push
push
dec
sbb
lahf
adc
outsl
inc
notl
mov
and
pop
adc
push
xor
pusha
sbb
loop
adc
adc
insb
sbb
or
cmp
popf
mov
adc
pusha
bnd
adc
push
inc
push
cmc
add
dec
mov
and
scas
mov
popf
mov
xchg
xor
cmp
push
lea
outsb
lods
cld
lock
sub
jmp
sub
imul
insl
dec
mov
ds
sbb
dec
and
sub
cmpsl
mov
es
push
sub
dec
cmp
pop
nop
mov
andb
std
xchg
inc
mov
bound
inc
dec
or
data16
nop
inc
inc
cmp
ja
inc
aad
filds
aas
inc
inc
movsb
and
mov
sarl
pop
lret
imull
je
and
sarb
xor
dec
jmp
lods
adc
or
xchg
bound
sub
push
aad
fcmovbe
adc
lret
sbb
adc
sub
nop
mov
rcrl
out
adc
inc
les
shl
xchg
nop
mov
sub
ficoms
and
rcl
repz
aaa
adc
adc
je
insb
imul
or
je
or
push
mov
add
jle
adc
jmp
or
ret
jbe
lret
aas
add
jo
test
xor
orb
inc
nop
ret
leave
xor
dec
test
shrl
sahf
pop
pop
or
or
dec
push
outsb
lahf
sbbl
inc
fcompl
add
push
xchg
es
rolb
mov
xchg
clc
mov
test
mov
mov
into
icebp
movsl
call
jae
xchg
maxps
or
ljmp
adc
outsl
jne
add
pop
pop
add
push
and
mov
cmp
or
and
adc
jne
sub
movsb
and
arpl
adc
or
call
outsl
jge
sahf
or
nop
ss
dec
and
adc
pop
adc
cmpl
addb
bound
adc
inc
xchg
shrb
das
mov
xchg
push
fs
incl
icebp
xchg
nop
outsb
stos
and
call
dec
mov
movsl
dec
jo
stc
inc
rcrb
pusha
fcoms
cmp
shl
pushf
adc
pop
inc
adc
rcrb
mov
add
sub
popa
and
loop
xor
sbb
push
lret
inc
clc
or
pop
cltd
outsb
xchg
add
jbe
or
adc
lods
roll
mov
pushf
pop
push
cmp
push
scas
push
xor
pop
das
jno
fldenv
sub
inc
int3
popa
push
pushf
jle
add
es
flds
adcb
and
cmpsl
dec
popa
add
push
mov
mov
mov
adc
mov
pushf
pusha
adc
cltd
pop
push
or
mov
and
and
mov
jbe
sahf
xchg
pop
jl
push
mov
wrmsr
inc
or
or
xlat
int3
cmp
out
ficompl
dec
push
lea
je
cld
inc
sti
mov
jns
inc
push
jb
xor
mov
or
pop
xor
add
test
or
ss
xor
bound
push
outsl
sbb
mov
xor
push
sub
imul
mov
nop
das
ljmp
icebp
shr
or
imul
adc
mov
xchg
add
clc
sub
inc
in
sub
mov
jb
or
add
add
add
lahf
push
je
outsl
pop
pop
pop
or
mov
pop
or
in
in
inc
pusha
or
mov
jno
or
fmuls
mov
xor
dec
push
jo
mov
dec
pop
mov
adc
mov
push
ret
int
inc
or
fildll
sbb
sarb
push
dec
sub
xor
lea
sub
sbb
pusha
or
cmp
shll
push
pushl
push
xor
aas
inc
add
push
aam
pop
inc
or
mov
xchg
inc
mov
call
push
cmpl
aas
dec
mov
sbb
xor
out
loopne
mov
mov
adc
adc
xor
mov
test
rcl
hlt
mov
sub
lock
ficoml
sbb
mov
push
pushf
push
stos
fldl
clc
inc
and
pop
sub
mov
arpl
mov
cmp
jg
cmp
fwait
xlat
cmp
inc
inc
push
in
xchg
inc
inc
dec
and
mov
stos
sbb
out
mov
sbb
pop
add
inc
pusha
dec
jp
addl
les
pop
pop
ret
jno
add
push
lret
fsubrs
inc
repz
ret
mov
ss
dec
sub
stos
mov
pop
cmp
jbe
xor
ret
or
cmp
shll
xchg
xchg
orb
imul
imul
pop
lret
test
adc
aas
mov
jno
aas
std
xchg
rcrb
cmp
sbb
pop
or
cmp
or
jg
out
or
in
sarb
dec
xor
and
hlt
or
daa
mov
fdivr
xchg
rcll
push
mov
xor
mov
xchg
xchg
push
pusha
or
cltd
daa
hlt
sbb
push
js
push
fidivrl
fs
fidivrl
ds
in
pusha
dec
mov
jns
mov
cmpl
std
movsl
inc
sbb
addr16
rcr
lea
jb
mov
xchg
mov
mov
or
loopne
jmp
inc
in
call
and
loope
inc
mov
cmp
and
jne
add
shll
adc
mov
inc
cmp
xchg
add
mov
sub
jbe
arpl
and
lahf
mov
and
push
xchg
xor
inc
push
shrl
xchg
icebp
jo
popf
adc
adc
test
and
or
pop
movsb
sbb
push
add
xchg
add
push
inc
cmp
cmovbe
xchg
push
inc
cmc
in
push
jmp
dec
cltd
add
pusha
pop
rolb
jl
jmp
cmp
xlat
push
nop
bound
test
sbb
and
aas
xchg
out
add
mov
addb
xchg
jo
push
sarl
pop
inc
out
and
cmovo
test
sbb
rolb
popa
and
adc
dec
xchg
js
dec
xchg
inc
add
push
mov
mov
jno
mov
add
and
cmp
xchg
mov
inc
dec
jle
andl
or
push
or
mov
daa
mov
inc
push
scas
dec
inc
push
clc
mov
push
fs
push
mov
lret
sub
or
aas
xchg
inc
dec
jl
sbb
jecxz
push
mov
sbb
imul
shlb
bound
and
xchg
fs
or
jbe
and
push
call
mov
ds
roll
mov
mov
repnz
adc
dec
adc
mov
sbb
mov
inc
in
shl
add
inc
add
sub
sub
dec
clc
insl
subb
insb
cmp
mov
popa
pop
add
mov
xor
ficomps
jmp
dec
jne
add
dec
fcomps
lea
incb
pusha
pop
mov
insb
or
pop
cmp
in
in
and
xor
mov
sub
adcb
xor
and
in
add
jo
lods
sarl
insl
cmp
adc
pushf
push
in
dec
scas
popl
add
jl
repnz
outsb
mov
outsl
push
jns
scas
movsl
jno
push
inc
push
lret
jo
push
xor
xchg
inc
stos
rorb
mov
push
sahf
dec
es
fcoms
in
push
pop
cwtl
sbb
sbb
std
add
mov
js
test
add
loop
push
xor
scas
pop
sub
mov
jnp
ret
sarb
es
ja
adc
jne
xor
mov
jnp
jae
push
fs
js
in
leave
ret
xor
in
nop
daa
shlb
sbb
mov
xor
jl
and
pop
mov
mov
push
push
sbb
dec
mov
cmp
add
push
notb
jae
jns
adcl
enter
cli
cmc
ja
pop
loope
inc
rcr
xor
xchg
loope
mov
dec
jae
push
and
xor
jae
loopne
pop
je
das
ret
push
cmp
fs
adc
andb
out
xor
add
jno
loopne
cmpsl
cld
dec
push
jb
aaa
jb
push
push
xor
mov
or
push
xor
into
mov
or
or
xor
das
mov
add
push
xor
pop
inc
or
sub
xor
lods
push
jns
push
aam
mov
xchg
dec
add
mov
fs
fcoml
or
xor
jo
lret
mov
popa
dec
or
add
mov
insb
out
add
lods
rolb
into
jae
add
sub
adc
pop
mulb
iret
push
inc
or
push
inc
dec
aad
push
dec
pop
add
push
pop
inc
ljmp
leave
iret
je
arpl
dec
add
aaa
mov
pop
and
jns
pop
je
arpl
mov
icebp
cmp
sub
in
pop
xchg
hlt
es
pop
jo
fstpl
jno
cmpb
xlat
mov
or
cmp
lea
pop
inc
pusha
mov
mov
and
scas
jne
mov
jbe
sbb
inc
xor
add
jns
lods
xor
jne
jne
addb
inc
test
or
or
or
iret
sbb
inc
or
aam
xchg
fldl
jns
and
fs
or
loopne
test
add
xchg
dec
sub
clc
neg
sarb
adc
scas
xor
xchg
cmp
popf
icebp
sub
jbe
add
orl
pop
xchg
adc
ja
dec
inc
add
imull
inc
inc
lds
scas
shrl
enter
pop
sub
push
lret
inc
sbb
xchg
jmp
xlat
scas
adc
or
or
cltd
add
pusha
xchg
aad
daa
and
out
js
xchg
xchg
inc
and
fsubl
js
fs
xor
inc
dec
and
dec
jns
pop
enter
add
dec
and
data16
mov
dec
ret
xor
adc
insb
leave
xchg
mov
sar
fwait
test
aad
shrl
inc
inc
inc
sbb
test
stos
jp
sti
mov
fbstp
push
lahf
int
cld
add
dec
add
hlt
dec
add
repz
clc
push
inc
ja
adcl
sbb
insb
push
jge
mov
inc
or
fdivrl
test
lret
popa
add
mov
xorb
scas
xor
xchg
adcb
mov
xchg
jnp
inc
testl
xor
into
bound
leave
test
sbb
pop
jmp
cmp
addl
push
add
or
or
ret
sahf
cmp
out
and
inc
fwait
xchg
mov
sbb
jle
stc
in
xor
daa
mov
aad
inc
repnz
nop
mov
cmp
hlt
push
scas
cmp
das
ss
sub
mov
lcall
push
xor
or
inc
or
adc
and
ret
cmp
adcb
add
adc
or
sub
cmpl
jle
or
outsl
pop
jnp
cmp
lahf
pop
enter
push
mov
sbb
jle
hlt
mov
mov
movb
xchg
es
xchg
stc
aas
mov
sbb
pop
add
lea
inc
clc
aas
dec
dec
pop
mov
inc
dec
jne
dec
int
test
jecxz
cmp
jmp
mov
jo
repz
pushf
adc
or
imul
out
and
push
xor
or
test
jmp
aam
or
mov
dec
add
out
jno
push
and
inc
out
adc
sbb
negb
rolb
xchg
mov
shlb
jno
rorl
add
clc
push
sbb
clc
in
jne
jge
mov
mov
std
push
and
mov
or
sub
sub
clc
xorb
add
jg
add
and
add
and
push
insl
pusha
push
adc
mov
pop
bound
pop
or
movsb
adc
or
add
cmp
jae
sti
xadd
add
add
shld
jge
or
popa
add
push
mov
aas
insl
cmp
add
jbe
push
icebp
push
add
dec
aam
push
jmp
adc
movsl
sub
adc
mov
imul
sub
arpl
inc
add
and
xchg
cs
cwtl
scas
clc
push
addb
hlt
jb
push
sbb
fstpl
mov
int
xor
pop
out
sbb
and
mov
sub
enter
movsb
inc
outsl
sbb
cmp
or
fcmovne
mov
hlt
fnstenv
adc
push
mov
lock
sub
mul
and
fildl
push
movsb
pop
mov
int3
outsb
hlt
int3
mov
or
fdivrl
xchg
sub
dec
jg
push
incl
jle
outsl
add
jmp
cmp
adc
adc
add
repnz
pop
add
mul
fiaddl
dec
add
sbb
inc
and
inc
push
or
xor
xchg
xor
out
loopne
and
dec
and
mov
push
out
mov
or
loopne
mov
lods
add
mov
shrb
cmp
add
or
push
cmpsl
adc
add
jns
xor
push
add
cmp
inc
nop
movsb
lds
adc
push
dec
test
cmp
mov
or
mov
mov
daa
jl
icebp
pop
jo
pop
lock
push
jl
lret
push
and
push
mov
push
inc
add
mov
mov
shlb
es
xchg
or
es
mov
pushf
xor
orl
loope
and
and
mov
push
push
jbe
ss
sub
adc
addr16
and
jbe
es
bound
or
wrpkru
push
push
inc
stos
test
cmp
roll
fimuls
ja
dec
sub
adc
push
add
outsl
aaa
cmp
and
jnp
mov
das
lock
shll
sbb
push
or
jno
imul
xchg
sti
push
cmp
mov
pop
push
mov
ds
pushf
jp
mov
pop
rorb
mov
pop
in
pop
sub
call
push
xor
js
mulb
xchg
xor
cmp
cmp
jl
rorb
arpl
das
int
ret
pusha
mov
aaa
pop
sub
push
mov
fbld
mov
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
call
dec
dec
or
push
push
push
pop
pop
pop
popa
bound
lods
ljmp
addr16
imul
jo
jb
cli
out
and
js
jp
xor
xor
sub
xchg
and
or
sbb
lea
mov
pop
push
movsw
movsb
lea
mov
add
sub
cmp
movsb
inc
xor
cmp
inc
push
dec
mov
shlb
nop
mov
dec
outsl
dec
mov
ljmp
push
push
xchg
xor
les
pop
push
outsl
cmp
ja
inc
jae
push
push
and
push
inc
outsl
mov
push
ja
adc
push
mov
cmp
rorb
adc
jmp
subl
jo
or
adc
inc
xor
xchg
clts
movsl
jnp
mov
jg
add
add
inc
add
sbb
sub
filds
loopne
idivb
push
ss
or
les
and
push
ds
cmp
in
add
add
outsl
pop
or
push
pop
inc
ret
and
aaa
sub
adc
add
inc
mov
andl
cli
adc
add
lea
or
mov
ret
push
push
adc
or
insb
push
fidivrl
insl
pop
ret
and
nop
push
mov
push
or
aad
testl
cmp
or
fsubs
test
add
je
and
and
stos
lret
adc
aam
adc
fcmovnu
push
or
and
orl
fcomps
xor
sub
inc
mov
push
sbb
sub
and
xchg
or
leave
xchg
or
cld
lea
push
pop
or
sbb
in
fwait
in
add
je
mov
mov
test
push
int3
das
fmuls
sbb
fs
cmp
insb
xchg
dec
dec
pop
lret
je
push
inc
push
add
cmp
cmpsb
lahf
cmc
insb
insl
test
cmp
scas
mov
and
popl
pop
test
dec
xor
cld
addb
iret
jo
shrl
adcl
and
cmp
sbb
popa
addr16
mov
es
mov
push
or
sahf
xchg
and
imul
push
shlb
fcmovnu
sub
cltd
je
xor
or
imul
dec
push
pop
pop
fisubrl
jle
shll
add
aas
mov
sub
inc
xor
and
mov
and
add
lea
or
or
popf
sub
or
or
push
dec
inc
jecxz
and
xor
mov
pop
cmp
mov
pop
adc
shll
xor
pusha
jnp
hlt
cmp
or
lret
xor
sub
xchg
inc
call
lock
jge
inc
into
mov
adcl
mov
inc
lcall
push
xlat
imull
fstl
cld
push
inc
addl
adc
ds
xchg
fldcw
pop
sbb
mov
mov
xchg
roll
inc
sub
insl
pop
inc
ret
cmp
fs
xlat
adc
inc
xchg
adc
in
fsubr
subb
nop
sbbl
in
fmuls
sbb
fs
in
cmp
sahf
mov
sub
aas
push
mov
mov
rorb
clc
lods
sbb
add
sub
inc
ljmp
xchg
out
inc
test
and
in
icebp
pop
inc
nop
aam
dec
pop
mov
popa
mov
push
mov
pop
sub
jg
into
clc
mov
sub
push
call
xor
jge
mov
inc
adc
ds
rcrl
inc
pop
ja
push
fcmovb
xor
loopne
pop
ret
dec
mov
mov
mov
add
clc
jbe
cmp
and
inc
ja
imul
push
sub
dec
dec
xchg
sub
add
push
les
hlt
sbb
ljmp
adcb
push
sub
push
push
xchg
inc
cwtl
loopne
repz
outsb
test
lock
shrb
push
adc
mov
mov
ds
pop
scas
testl
sub
cmp
dec
pusha
xor
dec
cmp
js
push
push
nop
ret
adc
lods
xor
movsl
jle
popa
ja
test
mov
shlb
jl
mov
adc
lea
sub
insl
stos
gs
xorl
sbb
xchg
push
sbb
outsb
daa
int
push
inc
arpl
push
aaa
jne
cmp
jmp
sub
les
fldt
mov
cmp
insl
and
or
insl
subb
insl
cmp
cmp
jl
push
jns
dec
movnti
adc
frstor
add
fsubrl
and
add
icebp
lods
jecxz
aaa
ret
outsl
pusha
dec
inc
push
cmp
dec
test
in
or
jmp
jo
jb
call
add
fs
adc
dec
cmp
mov
mov
mov
jl
setbe
push
cmpsb
push
add
cwtl
pop
jb
xchg
out
mov
adcb
add
add
inc
fdivs
dec
sub
sahf
mov
andl
push
adcl
push
daa
adc
lds
and
jge
fcomip
or
ficoml
dec
jnp
outsb
xor
mov
xor
push
pop
loopne
cltd
mov
sub
adc
test
stos
pusha
shll
je
add
sbb
rclb
es
insb
pop
mov
pop
or
mov
dec
push
xor
adc
scas
and
push
or
add
lea
pop
sub
or
or
test
cmp
mov
mov
sti
mov
xchg
add
negl
sbb
das
mov
cmp
mov
or
inc
scas
pop
jae
inc
push
adc
insl
addr16
jo
lret
push
jb
aaa
adc
imul
and
sub
ja
add
and
xchg
cltd
test
xchg
and
lcall
and
add
and
jnp
ret
and
dec
sbbb
xorb
pusha
push
push
sarb
dec
insl
int3
push
setg
aam
pop
test
movsl
lret
or
sahf
dec
div
fidivl
push
or
das
push
lahf
push
add
inc
mov
dec
sub
cmp
je
dec
xchg
xchg
addl
or
inc
js
xchg
adc
add
js
push
xor
imul
daa
dec
mov
push
dec
ret
insl
movsl
xlat
popa
mov
jns
imul
dec
pop
popa
and
sub
testb
mov
add
mov
aad
xchg
test
jo
inc
add
sti
lock
dec
xchg
fsubrs
dec
daa
cld
shlb
inc
dec
and
xor
adc
or
mov
dec
mov
clc
loope
inc
pop
cmc
jmp
mov
jne
xor
dec
lea
lret
lods
aaa
and
icebp
rorl
dec
rclb
shll
jb
adc
fildl
jg
scas
jbe
sub
mov
imul
inc
xchg
mov
add
jns
mov
cmpsb
add
stc
in
mov
push
aam
sbb
sbb
das
stos
sub
jmp
outsl
les
icebp
lods
dec
sub
int
cmpsl
sbb
bound
imul
sarl
mov
test
imull
adc
mov
jecxz
pop
jbe
insb
xchg
pop
lahf
push
and
into
add
or
movsl
inc
sti
out
inc
and
add
xor
inc
aaa
and
inc
jmp
je
push
ret
cmp
enter
aaa
pop
mov
mov
mov
push
andb
adc
xchg
shlb
cmp
sbbb
and
inc
sbb
pop
jle
and
rcrb
jae
add
jl
imul
and
xor
and
mov
stc
aaa
pop
cmp
shl
sbbl
add
les
mulb
add
cmp
jbe
es
repnz
scas
movsb
int
pop
movsl
je
pop
sti
push
add
push
out
pop
cmpsl
das
jbe
les
stos
scas
sub
fidivl
sahf
adc
lret
push
mov
cltd
loop
inc
or
mov
fisttps
outsb
adc
nop
cmp
test
pop
mov
adc
mov
add
push
and
xchg
mov
rsqrtps
xor
or
xor
and
xchg
stos
test
sub
sub
cwtl
test
movsb
addr16
sub
push
xlat
mov
inc
out
push
add
cmc
test
adcb
push
sbb
sbb
cltd
or
repnz
loop
scas
imul
mov
cmpxchg
fsubs
dec
and
mov
test
pop
insb
and
sbb
dec
pop
cmp
sbb
daa
push
and
movhps
and
or
test
out
int
mov
push
inc
sahf
jno,pn
push
mov
add
or
sbb
push
daa
or
sbb
push
pusha
loope
cmp
shlb
inc
push
cwtl
push
test
adc
pop
fs
int
je
addb
dec
mov
inc
loopne
pop
push
add
test
fdivrs
mov
push
loopne
clc
push
push
icebp
hlt
in
and
cmp
ror
and
inc
pop
mov
adc
stos
xor
repnz
loope
test
pop
subb
add
xor
popa
andl
hlt
adc
xor
xchg
out
mov
scas
jge
divl
cld
lods
push
lcall
inc
adc
push
movsb
neg
rcr
insb
cmpsl
push
shlb
dec
and
add
in
pop
addr16
or
and
data16
shl
popa
mov
loopne
mov
xlat
adc
fistps
adc
gs
sti
outsb
cmp
mov
push
popa
inc
inc
subb
add
stos
lods
add
pop
add
lods
adc
and
lahf
and
add
lods
cmpsl
adc
add
push
loop
add
cmp
mov
pop
sbb
loopne
icebp
sbb
js
xor
icebp
or
and
cmp
or
add
jecxz
mov
xchg
add
imul
sbb
cltd
sub
inc
sahf
xchg
dec
sbb
xor
xor
xor
xor
fldenv
out
scas
scas
pop
rorb
push
test
inc
mov
mov
lea
or
and
add
imul
adc
xor
addr16
andb
inc
add
xor
fisttpl
cmp
push
shll
popa
les
jp
inc
test
fwait
xor
push
test
dec
out
es
test
or
ret
nop
and
imul
cmp
aam
faddl
insb
enter
dec
inc
in
and
ret
movsb
cmp
adc
or
adc
lcall
inc
mov
dec
xor
sti
and
inc
or
sub
xor
shrl
sub
xor
dec
shll
cmp
xor
movsb
imul
xor
pusha
pusha
pop
pop
cmpsb
imul
pop
fwait
lods
insb
xchg
adc
aas
dec
dec
ficoml
dec
dec
dec
dec
dec
adc
sbb
ficompl
adc
fimull
inc
inc
inc
inc
xor
sub
push
inc
inc
cmp
inc
adc
or
orb
rolb
push
dec
cs
pop
inc
enter
or
in
shlb
or
es
shll
cmp
std
fs
mov
sbb
in
bound
mov
lahf
pop
adc
mov
cld
in
aam
or
xchg
adc
mov
jb
lahf
int3
mov
popf
add
enter
and
cmpb
les
insb
cmp
sub
bound
mov
xchg
js
push
adc
movb
and
inc
mov
lock
pop
and
sub
jno
dec
inc
inc
xor
inc
in
dec
insb
lock
fs
mov
dec
scas
sbb
dec
pop
in
clc
sub
sahf
cmpsl
xor
leave
mov
push
pusha
inc
and
sub
xor
xor
push
sub
sub
inc
xor
hlt
cmp
test
je
xor
jle
fstpl
fwait
out
sub
mov
sub
mov
jnp
jae
inc
pop
lahf
loopne
dec
das
bound
sbb
and
leave
fildll
fdivs
sti
pop
shr
pop
mov
add
jmp
mov
mov
pop
sti
pop
mov
popf
add
testl
mov
jb
nop
pop
cmp
test
cmpl
dec
pop
and
loope
mov
int
loopne
je
add
push
insb
mov
call
or
adc
ljmp
pop
or
dec
xchg
fimull
les
jne
push
test
xor
push
scas
outsl
pusha
and
adc
and
sub
pop
xor
das
ja
adc
and
jae
dec
xor
cmp
xor
out
mov
inc
mov
mov
inc
cs
loope
inc
xlat
mov
ljmp
jp
insl
xor
xor
push
inc
and
pop
fisubrs
add
aas
push
push
mov
aad
mov
mov
mov
adc
add
dec
pop
xor
pop
dec
mov
test
mov
hlt
dec
jle
add
mov
sbb
push
add
imul
push
sub
orl
dec
mov
and
sbb
and
add
sub
leave
pop
sbb
add
fldl
fcomps
loopne
out
outsb
outsb
or
popf
and
mov
inc
pusha
pusha
mov
adc
pop
pop
hlt
or
mov
pusha
adc
js
or
sbb
dec
pop
icebp
sub
sbb
mov
sbb
sbb
mov
sbb
and
adc
loopne
outsl
adcb
mov
cmpsl
test
inc
sbb
add
stos
dec
cmpsl
mov
scas
push
das
fildll
dec
and
pop
dec
dec
fdivl
or
cmpl
fsubrs
ret
js
inc
das
add
sbb
rclb
jl
test
je
or
into
dec
mov
dec
sub
mov
out
sub
inc
fmul
ret
dec
dec
ja
es
cmp
lea
outsb
fsubr
adc
mov
pop
mov
lods
cvtpi2ps
enter
xor
xchg
test
mov
sub
dec
ret
daa
cmp
addl
push
popa
sbb
sbb
cmp
pop
scas
aam
add
inc
and
push
rcrb
push
jno
enter
add
mov
imul
inc
mov
sbb
xor
sub
jg
nop
out
nop
daa
clc
jo
xor
mov
movsb
xor
and
pusha
bound
add
loopne
pop
jo
pop
ficoml
jp
je,pt
sbbb
adc
sub
mov
lret
pusha
cld
dec
adc
adc
dec
pop
or
add
mov
add
ret
test
adc
bound
arpl
or
sub
mov
imull
rcrl
shlb
jmp
mov
adc
aaa
roll
jne
cmp
mov
pop
push
rol
inc
enter
push
lret
or
sbb
enter
and
sbb
add
xchg
dec
mov
jnp
leave
mov
imul
push
jl
mov
xor
jne
test
add
or
rorb
lods
and
add
std
mov
addb
push
imul
insb
int
jge
inc
jmp
and
and
sarl
and
lock
or
lock
stc
cwtl
mov
mov
stc
cmpsl
mov
das
ret
adc
test
in
ret
mov
jle
movsb
out
les
in
mov
mov
pop
fld
jbe
sub
dec
in
shrl
add
outsl
adc
inc
inc
inc
les
lock
jmp
mov
inc
add
push
and
xlat
adc
ja
adcb
pop
int3
add
lods
jno
mov
inc
mov
adc
outsl
mov
mov
lret
aas
push
add
xchg
or
cmp
inc
push
fsubp
mov
loop
mov
and
sbb
fldenv
out
mov
jne
add
inc
adc
leave
cmp
jb
jo
push
add
adcb
andb
sub
and
push
xchg
add
push
add
test
or
cmp
insl
hlt
lds
lock
in
xchg
adc
test
mov
or
hlt
and
xchg
push
adc
addr16
sub
or
fldl
aaa
xchg
scas
jmp
fiaddl
and
faddp
add
mov
mov
sub
adc
stos
inc
popa
out
ret
inc
bound
sbb
aam
stc
push
push
mov
xchg
sub
or
iret
adc
adc
mov
adc
or
orb
mov
imul
mov
jns
testb
cmpsb
enter
les
loopne
out
mov
ljmp
mov
call
xchg
data16
test
mov
lcall
lock
dec
rorb
cmpb
call
xor
repnz
mov
out
xchg
inc
cmp
sbb
mov
or
inc
rorl
int3
jae
ds
push
dec
sbb
int3
push
xchg
and
jmp
xchg
adc
mov
aaa
sti
sbb
mov
mov
shrd
pop
push
xchg
push
push
addr16
mov
dec
xlat
lds
lcall
mov
dec
aam
daa
sbb
outsb
scas
pop
pop
mov
bound
xlat
jl
outsb
or
pop
push
ret
sub
sub
in
mov
dec
xchg
mov
pop
lds
popf
and
mov
jb
xchg
xchg
movsb
movsb
cs
pop
es
cwtl
pushf
pushf
rorb
push
das
inc
ror
xchg
mov
mov
sbb
rcrb
inc
fadd
xor
xchg
mov
inc
ficomps
gs
jecxz
cs
mov
mov
add
js
shrb
inc
sub
sub
xor
dec
sbb
das
add
call
and
xor
mov
adc
mov
add
push
sub
dec
xchg
lock
fcoms
mov
mov
imul
fnstcw
into
test
test
push
adc
test
out
mov
test
leave
lret
or
andb
andb
adcb
mov
insb
mov
cwtl
xchg
dec
push
movsb
xor
gs
fsubl
mov
push
lods
aas
add
repnz
push
jae
cmp
mov
cmp
mov
or
sub
loop
fstl
insb
and
cltd
or
xlat
and
mov
fistpll
arpl
bound
pminub
and
mov
or
mov
rorb
adc
or
negl
pop
push
and
inc
iret
je
cs
lahf
ljmp
inc
add
push
pop
xor
notl
daa
push
xor
or
and
xchg
negb
xor
and
inc
mov
adc
inc
adc
rcrb
xchg
sbb
jg
data16
add
sysenter
jecxz
push
cwtl
xchg
xor
nop
rclb
xchg
add
sbb
xchg
shl
and
test
mov
push
mov
inc
lcall
push
arpl
push
push
clc
movsb
repnz
add
cmp
xchg
into
sub
jge
and
rcll
ret
addb
mov
scas
add
mov
aaa
mov
pop
push
add
xor
jae
or
adc
pop
rclb
bound
pop
rolb
mov
xchg
dec
fldcw
mov
fmuls
rolb
jbe
xor
lret
xor
mov
loope
movsl
or
dec
roll
or
xchg
push
xor
sub
sub
daa
fsubl
fsubs
sahf
fstpt
sbb
mov
hlt
fdivrl
std
jb
in
add
insl
fsubr
scas
mov
rclb
dec
movsl
test
push
imul
shrl
sub
test
inc
dec
popa
call
pop
out
sbb
fmull
dec
mov
pop
pop
pop
pusha
pusha
and
and
rorb
push
sub
and
inc
not
mov
dec
xchg
addr16
ja
lea
in
int
or
or
popa
inc
ficoml
mov
or
or
sbbl
and
add
and
push
xchg
xor
ret
mov
cwtl
outsl
mov
cmpb
inc
bound
jb
lahf
xor
pop
pop
pop
sbb
jno
decl
pushf
fcomp
out
es
add
enter
fdivrs
adc
ficoml
movsb
jno
push
xchg
fcmovbe
adc
add
test
scas
pop
push
jne
cmp
adc
xlat
or
insb
pop
lret
loopne
jmp
ffreep
shlb
dec
addb
dec
loop
adc
sbb
add
cs
inc
dec
adc
shl
xchg
pop
rcr
inc
cmpsl
ficoml
notl
add
call
xor
notl
push
jne
push
sbb
push
cwtl
ja
popa
adc
or
ja
rclb
push
and
loope
add
lahf
add
mov
add
add
xlat
push
pushf
push
sbb
and
inc
and
test
pop
dec
mov
dec
and
and
push
mov
jbe
add
push
jno
or
loop
pusha
or
push
pop
xor
lea
sub
xchg
adcl
inc
and
or
adc
jo
jo
outsb
aas
push
shlb
inc
pop
or
inc
pushf
outsb
xor
invd
mov
cwtl
pop
push
cs
xchg
sbb
mov
cmp
xchg
jno
sub
call
sarl
push
mov
inc
movsl
les
js
fnclex
dec
sti
fdivl
das
sbb
xchg
lea
out
push
xchg
jno
push
es
jl
imul
dec
fwait
and
push
mov
pop
inc
loopne
inc
xchg
cwtl
nop
dec
ja
push
mov
pop
pop
mov
mov
sub
jnp
shll
and
inc
push
inc
and
fildl
xor
sbb
pop
mov
in
shl
pop
leave
leave
insl
xchg
mov
bsr
xorl
shlb
and
add
cltd
jb
pop
push
shll
lcall
push
sbbb
aad
insb
ret
faddp
adcb
mov
mov
sbb
xchg
loop
push
ja
mov
cli
cs
adc
mov
fisubs
imulb
sub
cmpsl
add
add
jg
lods
andb
call
hlt
or
inc
fisttps
adcl
pop
test
cmp
sbb
xor
mov
fdivrs
inc
push
clc
fists
es
pop
test
data16
jo
sbb
nop
xchg
dec
subb
add
loopne
sbb
aas
loope
bt
in
adc
push
ret
or
mov
push
movsb
and
cmp
loop
mov
rolb
add
ret
data16
imul
push
fistps
dec
jle
aam
pop
dec
aas
add
in
add
add
cmp
pop
xorb
adc
les
or
adc
sub
xchg
pop
dec
and
and
push
cs
jl
fiaddl
test
add
add
sbb
inc
sub
push
rolb
inc
outsb
push
mov
pop
or
insl
data16
pop
inc
stc
jnp
rcrb
add
push
sub
mov
loopne
add
js
xchg
jnp
inc
and
pop
and
not
sbb
les
int3
pushl
adc
jg
mov
or
or
xchg
lods
dec
repnz
mov
test
push
in
and
inc
out
jo
stos
nop
xchg
sbb
ja
in
sbb
lods
add
into
in
cmp
in
mov
sbb
lret
add
adc
xlat
fdivl
or
rolb
adc
adc
sbb
cmpsb
pop
xor
fldcw
in
stos
jle
and
dec
and
ret
add
ret
push
jl
dec
movsl
sbb
test
jo
and
fildll
les
cmpsl
mov
mov
shl
pop
frstor
add
and
push
cmpsb
or
movsl
mov
or
lea
sbb
dec
cmpsb
xor
lods
jns
rcll
cmovge
sbbl
jg
cmp
sbb
push
out
push
sub
std
ret
inc
pop
cs
push
add
sub
or
lahf
out
mov
push
repz
out
and
adc
and
mov
add
adc
test
call
call
stc
call
push
ljmp
push
push
dec
mov
xchg
pop
dec
inc
inc
inc
enter
mov
call
das
or
inc
add
or
xor
or
adc
je
dec
inc
mov
xchg
push
gs
cmp
aas
pushf
or
sub
cmpsb
xor
xor
inc
je
sbb
aam
ja
pop
cmp
jno
dec
push
pop
sub
adc
push
sbb
add
sbb
inc
cwtl
add
inc
push
out
dec
adc
push
fcmovb
add
test
mov
add
aaa
push
adcb
or
cmpsl
cmp
jbe
push
addr16
pushf
packsswb
xchg
imul
imul
or
or
cmpsb
push
pop
or
push
sub
cwtl
or
test
aaa
into
mov
xlat
push
jmp
add
adc
outsl
and
mov
pop
movsb
sahf
add
cmp
mov
and
cwtl
outsl
inc
cld
rclb
test
outsb
push
daa
or
fiaddl
xchg
jne
adc
sbb
aas
pop
sbb
es
jl
adc
mov
aas
push
rcrl
push
mov
add
cmp
push
sahf
push
cmc
push
and
push
push
and
iret
repz
loopne
mov
adc
xchg
enter
testb
xchg
sbb
icebp
outsl
add
cmp
or
inc
pop
add
leave
inc
daa
dec
and
and
xchg
mov
push
arpl
lock
and
insl
sbb
sti
adc
adc
adc
adc
pop
leave
rcrl
inc
add
iret
cmc
pop
addb
add
out
jb
cs
jmp
or
pop
pop
jno
lsl
testl
out
and
or
shr
not
rorb
or
call
loope
sub
orl
dec
es
xlat
cmpl
or
fs
imul
xchg
mov
lods
movsl
mov
nop
or
cld
cmp
lea
roll
sbb
nop
mov
jecxz
popf
fisubl
xor
adc
test
cmp
adc
or
xchg
xchg
out
mov
lock
xchg
xchg
mov
xchg
xchg
lret
add
xor
jns
push
fs
xchg
imull
cmp
cmpsl
push
cmp
pushf
xor
or
movsl
adc
adc
mov
mov
shll
xchg
test
cmp
and
add
stos
mov
ljmp
dec
leave
ret
and
inc
add
mov
push
or
lahf
and
xor
pushf
lcall
xchg
mov
mov
int
xor
mov
xchg
mov
mov
setl
push
rcrb
pop
inc
adc
push
dec
pop
shr
push
rorb
arpl
cmp
dec
divl
loop
mov
dec
hlt
call
fadds
hlt
or
adc
les
dec
dec
pop
mov
out
inc
test
fstpl
pusha
sub
add
mov
sarb
mov
outsl
dec
ja
sub
mov
and
push
into
jmp
pop
sub
nop
mov
push
loope
lea
dec
and
gs
adcb
lea
xor
inc
cmp
sbb
mov
pop
cmp
int3
add
push
inc
nop
inc
sbb
popf
and
push
or
pop
push
or
inc
inc
pop
hlt
and
and
sub
sub
pop
push
das
mov
andb
das
call
mov
xor
adc
xchg
adc
dec
or
into
scas
mov
sub
xor
jecxz
add
daa
lahf
cli
orb
addr16
cmp
insl
outsl
xor
sarb
lret
dec
shlb
mov
sub
sub
ret
xor
push
stos
inc
mov
inc
pop
rcll
sub
mov
nop
loope
sub
xor
cmp
push
and
mov
daa
xchg
popf
jp
inc
pop
adc
xchg
pop
dec
add
inc
mov
jmp
sbb
sub
mov
lock
lods
and
pusha
sbb
repz
add
mov
or
push
incb
and
and
jg
jns
mov
testl
add
or
sbb
sti
aad
imull
jmp
xlat
setbe
mov
jne
fadds
push
mov
test
xlat
xchg
gs
enter
inc
and
xlat
add
or
add
pop
fnstcw
inc
in
add
leave
imul
clc
fwait
push
inc
or
and
clc
add
cs
lods
sub
pop
fbld
push
ret
std
lea
dec
dec
dec
jae
nop
inc
push
xchg
mov
cmpsl
or
scas
dec
pop
out
addl
fistl
add
sti
shlb
clc
das
mov
sbb
push
testl
push
push
push
and
mov
pop
pop
cmp
sub
xor
cmp
inc
ss
jae
jbe
std
movb
push
cli
xchg
lock
pop
mov
adc
icebp
das
adc
jmp
pusha
movhlps
push
test
xchg
cs
pop
add
jo
xor
jecxz
mov
fadd
mov
or
hlt
loopne
push
and
add
jo
scas
popf
cmp
or
lret
or
inc
popf
push
leave
xchg
ret
xlat
add
sbb
inc
jl
or
outsl
dec
popa
test
cmpl
lret
call
lret
sub
mov
adc
orb
fisttpl
icebp
adc
or
lea
ja
ret
fstpl
div
push
mov
fdivl
mov
and
addr16
pushf
mov
push
add
roll
aas
xor
dec
pushf
mov
pop
sbb
xor
movsb
std
xor
add
add
lret
fisubrl
loope
mov
aaa
adc
push
rol
mov
pop
aaa
push
add
out
andb
or
push
rcl
dec
pushf
sub
xchg
or
cmpsl
addr16
popf
es
dec
addr16
das
or
out
testb
js
xchg
das
ret
pop
dec
push
add
mov
dec
xchg
pop
dec
test
inc
push
push
inc
inc
xor
mov
push
aad
mov
lahf
scas
scas
add
aad
cli
dec
xor
loopne
stc
jne
cli
jbe
lcall
mov
mov
push
add
mov
adc
adc
sub
inc
mov
lods
mov
jg
mov
mov
mov
or
lea
icebp
and
dec
and
sbb
xlat
or
js
and
lds
jmp
or
jne
xchg
add
outsb
dec
inc
lahf
sbb
xchg
test
and
or
pop
cmp
add
push
loope
sbb
leave
adc
sbb
or
adc
shlb
enter
nop
nop
rcrl
and
adc
push
fbstp
iret
imul
add
push
js,pn
sub
test
mov
test
dec
or
fs
addl
mov
xchg
push
pop
jo
enter
cmp
and
iret
in
jb
push
push
add
or
popa
lahf
and
dec
jae
add
daa
pop
rorb
inc
cli
mov
cmp
jnp
ds
mov
lret
cmovno
sbb
mov
hlt
lods
add
les
hlt
pop
adc
popa
jmp
dec
and
dec
dec
pop
fstps
add
and
adc
loopne
cmp
mov
les
inc
or
or
adc
xchg
incl
dec
push
cmp
mov
or
out
in
insl
push
adc
add
nop
add
fstpt
pushf
push
pushf
dec
enter
inc
and
xchg
pop
and
lock
insl
pop
pop
mov
jle
pop
mov
push
mov
add
movhps
pop
sbb
in
add
inc
inc
add
inc
mov
push
les
leave
lea
int3
fs
inc
bound
push
jbe
pop
bound
jbe
xchg
and
jg
jmp
fstpl
push
lret
xchg
or
add
mov
add
jge
inc
pop
mov
fldl
aas
fistpll
sub
or
add
or
mov
daa
addr16
jg
and
cld
inc
mov
push
fbld
add
push
or
mov
or
or
cmpsb
mov
and
sub
outsl
lea
mov
or
push
xchg
pushf
or
sbb
push
xor
push
inc
xchg
dec
and
jae
cld
jmp
popa
jns
test
adcb
leave
cmpsl
xchg
pop
sub
or
xchg
lret
in
mov
sub
pop
aam
pop
stc
or
sbb
ds
fwait
adc
xor
sub
add
inc
test
push
inc
adc
and
jns
mov
arpl
ret
rcrb
or
sbb
addb
xor
mov
mov
xchg
mov
pusha
inc
and
pop
add
pushf
fistl
fs
sub
imul
inc
loopne
cmpsb
cltd
push
add
test
popa
cmpb
mov
sub
dec
test
pusha
mov
stos
inc
mov
mov
inc
dec
rorb
dec
pop
outsl
sub
lods
cmc
mov
mov
fsubrs
mov
and
pop
fiaddl
adc
xlat
add
or
subl
loope
jp
mov
movsb
lods
dec
or
ret
aas
or
mov
dec
ret
rcll
nop
aas
insb
mov
push
ret
fcomip
pop
stos
sub
jno
jns
sarl
popf
or
popa
push
popa
insb
or
pop
adc
sbb
push
fistps
dec
pop
sbb
add
add
inc
dec
jno
lock
sar
stos
xchg
or
inc
jl
cmp
adc
das
push
or
lcall
fldl
pop
xchg
adc
sbb
push
out
push
mov
jo
or
mov
cs
push
mov
jg
jge
ja
ucomiss
rorl
adc
jns
das
mov
push
adc
outsl
push
inc
jo
loope
insb
pop
dec
imul
inc
jl
outsb
adc
stos
insb
out
lret
pop
test
or
dec
adc
fmuls
or
jo
sbb
or
xor
jno
jb
insb
adc
add
shll
test
dec
cld
jno
inc
push
fcmovb
movsl
pop
push
outsb
sbb
outsl
aas
sbb
or
addl
or
add
push
movsb
xor
outsl
add
mov
xlat
dec
push
shlb
and
lock
or
mov
fistl
add
add
cmovno
sbb
mov
add
and
add
inc
les
push
fcompp
xchg
mov
jmp
or
pop
dec
jo
ror
jae
mov
push
fbstp
mov
adc
rcll
and
mov
mov
scas
clc
shl
pop
add
adc
pop
imul
pop
pop
xor
addb
insb
lret
pop
jno
cmp
inc
pop
adc
and
int3
das
push
dec
and
add
add
add
add
pop
or
lcall
or
adcb
adc
mov
mov
repnz
push
mov
pop
dec
enter
pop
and
and
and
push
or
clc
scas
or
mov
pop
in
add
cmp
jne
add
add
mov
sbb
jnp
lret
cmp
add
mov
adc
repz
pop
cmp
sbb
mov
xchg
pop
sbbb
in
icebp
cmp
pop
bound
aas
leave
adc
sbb
in
adc
test
push
mov
add
add
test
decb
sbb
and
add
inc
add
jno,pn
mov
cmp
lods
pop
adc
jbe
xor
push
sub
adc
or
clc
xor
or
lahf
and
xlat
outsb
loop
xor
outsl
adc
cmpsb
mov
jbe
ljmp
dec
dec
iret
sbb
xlat
push
lret
subl
adc
or
outsb
fcoms
xor
jecxz
ljmp
int
bound
aas
daa
cmp
mov
loop
scas
loopne
add
jle
push
jb
jne
pop
jae
popa
and
add
repnz
popf
add
mov
push
outsb
adc
add
push
mov
btsl
sub
test
out
xor
dec
sbb
and
adc
inc
das
push
leave
arpl
loope
pop
ret
xor
mov
addr16
dec
and
imul
mull
mov
scas
push
cmp
aad
and
adc
iret
dec
mov
sbb
inc
or
into
adc
sub
jne
push
mov
or
ss
daa
hlt
xor
xchg
mov
insb
and
lret
xchg
arpl
sbb
or
inc
aaa
and
in
jo
scas
pop
adc
jp
insl
loopne
insl
add
movaps
mov
pop
jbe
jne
call
inc
add
push
mov
decb
fistpl
das
pop
sbb
push
lret
or
cltd
pop
ret
xor
mov
or
and
xor
ja
sub
addr16
bound
imul
jle
xchg
push
adc
popa
cmpsl
inc
dec
mov
xchg
inc
arpl
jo
stos
lock
sbb
leave
les
ret
and
dec
sub
jo
test
call
jmp
inc
test
dec
inc
ds
jecxz
pop
sbb
lds
dec
sub
push
call
leave
add
dec
icebp
clc
or
outsb
pop
add
adc
mov
out
sub
int3
rol
outsl
and
add
push
adc
jnp
popa
mov
dec
pusha
es
stos
loopne
cmpsl
rcll
rcll
sbb
shlb
leave
jo
add
xorl
ja
inc
ja
add
dec
lcall
pop
sbbb
insl
add
and
xchg
sub
add
loopne
pop
add
es
sub
inc
mov
pop
pop
sub
cmp
pop
pop
fistl
or
inc
add
sbb
and
pop
add
and
and
sahf
mov
and
test
adc
add
insl
and
std
or
adc
mov
test
ret
add
cmp
add
mov
mov
and
push
mov
daa
pop
mov
xabort
xchg
rolb
dec
sbb
dec
jg
add
sub
mov
and
pop
sbb
inc
push
lock
pop
int3
sbb
add
xchg
cmovne
ret
pop
sub
or
adc
mov
ss
icebp
and
mov
paddb
mov
cmp
mov
fwait
and
sub
mov
cmpsl
mov
mov
or
sub
fidivl
das
pop
sub
sti
push
xchg
and
es
push
cmc
repz
jne
aad
or
mulb
inc
cmp
add
mov
out
adc
sbb
inc
inc
testl
xor
cmpsb
add
adc
cmc
pop
mov
mov
mov
xor
or
adc
daa
daa
daa
daa
adc
and
sbb
daa
sub
inc
xchg
orl
add
aam
jle
or
push
push
mov
inc
adc
nop
cmpl
pop
cmp
aad
inc
clc
lahf
sbb
xor
cld
mov
subb
cld
mov
es
and
or
inc
jl
pop
push
repnz
dec
jecxz
sahf
fcoms
inc
xchg
push
pop
ret
pusha
popa
mov
in
orb
clc
pop
sub
mov
sub
xchg
data16
sbb
sbb
call
imul
push
in
sahf
in
arpl
add
addr16
mov
push
aaa
rcl
ret
into
xlat
lods
or
int
pusha
mov
loop
jne
push
lds
inc
mov
js
or
andb
and
aaa
jo
inc
adc
xchg
outsb
and
or
jge
sub
and
shll
pop
imul
sub
aas
add
mov
mov
pop
bound
pop
xor
cmp
xchg
cmp
insl
adc
xor
adc
sbb
cld
or
and
sbb
xor
shlb
sbb
or
daa
subb
xchg
adc
push
jne
mov
int
mov
dec
cmp
sbb
in
mov
xor
ja
movl
push
stos
add
add
adc
into
xor
and
cmpb
and
add
mov
mov
xchg
mov
cli
das
cmc
dec
inc
jbe
push
add
and
add
mov
push
adc
ror
xor
pop
cmpsb
fstpl
jae
into
iret
into
leave
add
adc
xlat
sbb
and
loopne
or
lock
inc
fsubrl
adc
data16
ljmp
inc
xchg
insl
test
push
push
adc
cmp
lea
arpl
lock
push
adc
pop
xchg
sub
and
xchg
jno
add
inc
mov
push
imul
aad
aaa
inc
sub
and
jl
pop
pop
inc
sub
sbb
in
sbb
fdiv
js
push
dec
sub
test
rorl
repz
jmp
xchg
hlt
push
mov
mov
sbb
ja
jle
dec
xlat
mov
test
test
pop
mov
pop
and
popf
in
cmpl
dec
inc
pop
mov
cwtl
sarb
push
test
cmp
out
int3
jecxz
adc
cmp
mov
in
mov
in
ret
add
loopne
mov
stos
add
int
call
xlat
mov
mov
test
sub
lea
or
and
out
and
add
call
jo
mov
or
jg
adc
and
mov
sub
xcrypt-ecb
cmpsl
mov
lds
add
cli
nop
sub
add
lret
dec
jmp
add
pop
or
int
sub
add
dec
cltd
ds
ss
xor
and
sub
pushf
fs
add
sub
call
lock
iret
xor
bound
adc
or
add
mov
rcrl
or
push
ret
cltd
sub
nop
arpl
fsubs
les
xchg
inc
jle
dec
sbb
mov
fsubl
xor
inc
mov
dec
lods
mov
ss
cmp
or
sub
or
push
xor
sbbb
out
pop
dec
test
sbb
push
imul
insb
int
mov
js
or
test
push
rcrb
in
int
push
fnstsw
jmp
adc
nop
scas
or
adc
push
shlb
push
inc
in
in
or
xor
xor
nop
and
sbb
jo
xor
sbb
push
add
bound
xchg
clc
sbb
jno
xchg
sbb
sub
sub
mov
pop
cmp
mov
adc
cmpsl
add
popf
adc
add
ret
daa
or
push
inc
pop
dec
xchg
dec
add
cwtl
je
push
dec
add
adc
push
or
fdivr
cmp
imul
xor
xlat
aas
frstor
scas
shrl
jno
dec
pusha
loopne
lret
jo
jmp
jno
pop
js
dec
outsb
mov
mov
das
pop
jl
mov
call
mov
or
js
or
lret
cld
add
adc
sub
das
xor
push
dec
adc
xor
popl
mov
aad
fildll
icebp
pop
xor
cwtl
push
xor
ret
aaa
sti
push
dec
xor
mov
xor
bound
adc
jbe
xchg
sbb
lods
dec
push
sarb
push
inc
imulb
rclb
mov
dec
push
add
test
sub
sbb
and
pop
inc
dec
add
insl
shlb
xor
and
inc
mov
jo
imul
mov
sbb
and
ret
mov
mov
adc
lods
inc
out
xor
fwait
pusha
dec
push
mov
std
push
dec
xor
scas
pusha
stc
cmp
jle
or
psubusw
mov
and
inc
xor
add
jmp
fimuls
push
sub
mov
ja
ss
cmc
dec
mov
dec
pop
or
and
das
adc
adc
add
orl
inc
jmp
cmp
or
jp
out
add
pop
inc
cmp
sbb
pop
mov
jno
aas
xchg
mov
fwait
enter
push
cmp
imul
inc
fisubrl
push
je
pop
push
lea
fnstcw
cmpsb
pop
in
int
xchg
xchg
lret
xchg
repnz
xor
pop
xchg
xchg
xchg
xchg
jge
mov
add
enter
mov
fsts
adc
insl
stc
je
and
mov
sub
jmp
mov
add
cmp
lods
add
sub
leave
je
mov
sti
add
inc
add
push
lea
or
mov
mov
sbb
xor
aaa
imul
mov
ss
inc
xor
add
pop
sti
mov
fs
je
data16
in
pop
lock
lods
cmp
insl
add
push
dec
popa
push
inc
and
adc
xchg
jno
jp
sbb
dec
pop
pusha
pop
aaa
inc
fldt
and
push
xchg
pushl
ss
insl
ss
adc
add
mov
mov
ror
aaa
adc
xor
push
add
cmp
push
aaa
outsb
and
je
push
push
mov
push
subl
dec
jno
xchg
leave
cs
dec
xor
cwtl
push
add
outsl
jne
shlb
inc
out
mov
call
jmp
cmp
lcall
pop
cmpsb
cmp
enter
push
pop
add
in
mov
or
add
cmp
ss
xchg
mov
cmp
das
push
sbb
push
repnz
arpl
das
xchg
push
push
xchg
adc
popa
fs
fwait
pop
es
outsb
adc
addr16
mov
insb
push
je
and
mov
xchg
or
xchg
inc
cwtl
xor
cmpsl
inc
pop
std
es
ret
ja
enter
xchg
xchg
cmovl
xchg
fwait
pop
dec
mov
jnp
push
inc
pushw
ds
repnz
into
hlt
pushf
test
fninit
cmp
sbb
and
cmp
pushf
cmp
cmp
cmp
jmp
xchg
enter
jmp
push
test
lret
sub
stos
ret
jo
or
ljmp
xchg
test
stos
xorl
jno
push
popl
add
push
in
fldt
add
ja
out
or
mov
stos
cmp
div
stos
inc
sub
adc
mov
cmp
lea
shr
mov
dec
and
inc
or
push
sbb
add
rcl
fs
adc
lock
out
jbe
arpl
loop
inc
add
fsubrp
imul
or
mov
fsubrl
aas
shrb
or
inc
fsubl
mov
lods
and
mov
mov
push
add
cmp
call
cmp
insl
inc
sahf
pushf
pushf
cmpsl
out
aas
push
dec
dec
dec
lods
out
xor
xchg
xchg
daa
daa
iret
pop
inc
outsl
divb
xlat
stos
inc
cmp
xorps
or
pop
sub
subb
dec
push
cmpb
push
lods
outsb
xor
pop
push
lcall
insb
cmp
inc
and
push
mov
inc
cmp
sub
sbb
sbb
or
jae
sbb
mov
cmp
into
pandn
jg
les
sub
test
push
fistl
insl
xorl
or
jns
mov
mov
fisttpl
andb
or
and
mov
clc
mov
adc
add
sub
xlat
inc
dec
dec
push
push
adc
popf
inc
mov
pop
push
add
and
push
sbbl
cmp
arpl
sbbl
sbb
push
test
cmpsl
add
push
inc
push
mov
gs
test
push
dec
sbb
imul
inc
lret
jmp
xorb
dec
jae
push
dec
lds
rorb
push
lahf
es
mov
fadds
pop
mov
and
mov
loopne
adc
ret
mov
mov
pop
or
sbb
les
lock
sti
inc
push
jg
mov
sarb
jge
ret
inc
add
roll
es
cmp
jle
movsb
faddl
mov
imull
sub
jmp
ret
les
addr16
add
mov
shlb
pop
or
jge
cmp
jne
sub
mov
outsb
shrl
sbb
inc
cmpsl
in
cmp
jle
inc
lahf
loopne
pusha
dec
mov
repnz
add
shrb
cmp
xchg
es
sbb
fcomp
sub
fidivl
sub
scas
sar
or
xor
or
test
push
cmp
and
cmp
jns
inc
cmp
outsl
xlat
lods
mov
push
nop
inc
push
mov
push
aad
jl
mov
push
adcb
mov
pop
cmp
aam
scas
or
idiv
and
push
sbb
jmp
cli
xor
je
sub
push
inc
scas
push
push
movsl
sbb
inc
addr16
cmpb
andl
lret
sub
xchg
mov
stc
and
jae
in
inc
int3
push
idiv
cmp
fsubl
sub
divl
popa
mov
mov
mov
ds
inc
pop
jb
fisubl
movsl
add
push
out
adc
mov
push
test
jne
mov
cbtw
push
add
xchg
fidivl
mov
pop
jmp
xchg
push
jbe
cmp
or
mov
or
xchg
or
xor
push
or
loop
ds
jae
jle
int
dec
movsl
stc
mov
mov
fsub
mov
pop
or
cmpsb
pop
jns
imul
mov
jmp
fs
shlb
and
imul
push
sbb
jbe
inc
adc
adc
pop
add
andb
and
pop
and
push
sbb
test
icebp
inc
ss
mov
adc
mov
movl
inc
ret
inc
jp
subl
adc
inc
lea
scas
dec
cmp
insb
dec
sub
ss
sub
aas
inc
mov
cmp
sbb
into
mov
pop
push
es
rorb
fidivs
dec
xchg
aaa
sbbl
adc
es
in
sbb
js
sbb
dec
mov
jae
dec
jo
mov
or
pop
clc
cmpb
dec
and
lods
cmpl
leave
pop
lock
cmp
shlb
in
daa
insl
mov
ret
cld
inc
call
int
fwait
les
dec
repz
cmp
push
loope
imul
add
xchg
movsb
mov
outsl
mov
sub
sarb
cmpsb
test
fbld
cmp
in
nop
add
mov
xchg
imul
mov
push
cmp
adc
je
insb
xor
test
and
orb
xchg
das
jg
dec
paddsb
hlt
mov
in
mov
push
pop
test
adc
lcall
mul
inc
shrb
cwtl
mov
or
dec
jb
add
movsl
push
or
and
daa
fwait
mov
lods
fistps
mov
xor
shll
lods
adc
xor
pop
js
push
pop
shlb
or
nop
sbb
lock
gs
jno
popf
out
mov
gs
push
sbb
or
adc
xchg
add
pop
pushl
out
std
ret
sbb
push
and
mov
sub
test
out
or
and
inc
aaa
ret
dec
stos
or
pop
inc
adc
sub
mov
xor
adc
das
mov
popa
jg
addl
test
dec
xor
rclb
adc
push
adc
movsl
adc
inc
inc
decb
push
les
shlb
fadds
jo
adc
cmp
rclb
mov
push
mov
sub
inc
fwait
jo
mov
jmp
push
add
mov
and
nop
loopne
jbe
dec
cmp
outsl
mov
inc
sbb
sbb
out
sbb
and
xor
mov
and
sub
jbe
add
sub
adc
outsb
and
xlat
cs
cmp
cmp
push
xchg
sbb
adc
pop
push
ret
and
jne
push
add
mov
je
rolb
mov
adc
mov
or
and
xchg
fsts
leave
in
jne
loope
orb
les
inc
jle
mov
add
or
jnp
xor
inc
repnz
loopne
xor
out
and
orl
inc
dec
inc
lcall
or
adc
les
push
mov
daa
cmp
sbbl
and
or
pop
in
push
adc
aaa
push
push
adc
mov
jae
push
ljmp
mov
cmp
or
and
pop
ret
sbb
pop
push
add
add
jge
mov
cmpsb
or
xchg
mov
clc
and
and
out
adc
and
test
cmpsb
sbb
adc
outsb
push
adc
jo
in
add
or
outsl
sbbb
xor
xor
loop
or
fidivl
outsb
sub
imul
cmp
std
rcll
bound
sub
xor
clc
xor
arpl
jbe
add
mov
sbb
push
fs
es
cwtl
dec
dec
je
fiaddl
sti
sbb
mov
loop,pn
es
insl
dec
shlb
movsl
mov
clc
in
movsb
inc
clc
mov
test
mov
movsl
ja
dec
adc
or
mov
cmp
mov
adc
hlt
inc
adc
outsb
and
pop
and
lret
insb
insb
addb
xor
sub
addb
push
cmpsb
inc
inc
cli
pop
or
lahf
pop
fwait
mov
push
adc
dec
out
and
les
fisubrl
adc
lret
jb
mov
xchg
sbb
leave
pusha
push
hlt
hlt
inc
xchg
inc
sub
xor
and
jns
addb
and
fs
dec
push
hlt
hlt
scas
inc
jle
sbb
hlt
in
dec
push
sub
jecxz
mov
movsl
pop
mov
popf
adc
dec
scas
enter
push
xchg
adc
lock
xorb
sub
cmp
pop
inc
mov
scas
adc
lcall
and
and
popf
mov
inc
xor
aam
pop
pop
mov
inc
and
sbb
or
scas
arpl
mov
cld
mov
pop
rclb
test
inc
or
adc
xchg
fildll
fdivs
xor
pop
fcomps
roll
push
int
ss
jmp
lds
pop
or
add
jb
aam
pop
sti
aam
jp
xor
pop
pop
add
and
jecxz
adc
arpl
push
jmp
push
dec
and
fnsave
pop
pop
push
sub
xchg
push
or
dec
scas
imul
push
push
xchg
gs
push
inc
aas
add
lcall
fadds
adc
and
cmp
inc
xor
or
cmp
add
pop
clc
inc
xor
xor
xor
cmp
aas
mov
or
push
cmp
test
dec
adc
cmp
jl
or
lcall
lods
adc
test
pop
pop
pop
xchg
hlt
push
pop
cwtl
out
adc
roll
push
sbb
sbb
fdivrp
call
adc
rol
add
cmp
js
inc
fucom
fcomps
leave
fsubl
jbe
imul
fdivr
loopne
adc
jg
add
cmpsl
paddw
test
pop
dec
nop
mov
jp
decl
xchg
dec
cs
imul
push
push
in
pop
test
push
xchg
and
push
rorb
movaps
nop
push
cmp
mov
and
sbb
jp
add
inc
cmpsl
dec
fdivs
mov
inc
popl
and
inc
dec
jno
xchg
inc
repnz
clc
xchg
dec
pop
das
inc
sub
or
addr16
inc
pop
lock
pop
add
in
dec
pusha
pop
cmp
add
or
and
pop
pushf
pop
popa
pop
repnz
pop
aam
push
inc
jns
xchg
jbe
or
pop
mov
andl
arpl
and
call
sub
arpl
enter
xchg
pop
orl
pop
xor
push
enter
inc
push
sbb
adc
mov
cmpsb
mov
fcmovnb
js
sub
inc
out
or
inc
xchg
add
push
clc
pop
pop
dec
out
test
xor
push
enter
push
imul
das
cltd
pop
pusha
xor
les
test
sbb
in
mov
xor
enter
outsb
or
xchg
pop
xor
sbb
xchg
jl
cmpsb
or
jg
repz
testl
sub
gs
or
clc
jmp
xor
or
jno
imul
push
sbb
jne
mov
jmp
or
lcall
xchg
ss
pop
adc
sub
add
icebp
loopne
or
fiadds
xchg
loop
pusha
add
lock
ret
ret
aas
and
jecxz
and
in
mov
cmp
mov
loopne
sbb
inc
popa
jne
sub
or
aaa
xor
pop
nop
rolb
mov
xor
daa
xchg
addl
xor
mov
pop
lock
test
push
pop
aas
inc
add
cli
ret
dec
add
xorl
hlt
or
mov
out
pop
pop
xor
test
or
and
xchg
pop
or
btr
or
cmp
call
fisubrl
inc
mov
es
and
mov
out
repz
ds
dec
cmp
pop
ss
push
sbb
clc
cmp
bound
fsubl
loopne
jnp
cmc
ret
dec
call
imul
cmp
xchg
mov
cmp
add
mov
jno
arpl
xlat
pop
add
push
jo
insl
mov
inc
outsb
rcrb
adc
scas
push
fistpl
sbb
ss
adc
loopne
mov
inc
or
push
adc
dec
and
inc
mov
sub
jb
xor
outsl
jmp
jle
loope
inc
or
jo
subb
cmp
mov
int
pusha
andb
push
sbb
adc
jo
or
nop
inc
cmpsl
sahf
push
dec
out
push
and
pop
das
dec
sbb
jb
jle
fneni(8087
jno
js
outsl
push
adc
inc
cmp
dec
or
or
sub
sub
je
xchg
test
inc
inc
push
and
push
sbb
push
std
sub
or
adc
sbb
loopne
shlb
pop
sbb
and
push
enter
ja
jle
movsb
test
xchg
aaa
ret
xor
movsb
ret
inc
adc
adc
adc
adc
pop
rorb
inc
cwtl
dec
lret
dec
add
xchg
rolb
pop
cld
or
or
cmpsl
bound
pop
arpl
mov
xor
iret
jmp
clc
xor
addr16
or
jo
adc
inc
xchg
mov
ret
jno
addr16
add
imul
inc
fsubrs
cmpsl
push
adc
in
icebp
push
inc
inc
cmp
icebp
add
dec
call
sbb
es
adc
xor
mov
dec
rolb
rclb
mov
xchg
sub
orb
sbb
or
push
jns
cs
insl
cmp
mov
in
aam
cmp
jns
int
push
inc
inc
sub
pushl
inc
fs
inc
add
jge
test
or
and
cmp
ret
inc
xchg
dec
xor
les
sub
jg
pop
cmp
sub
dec
sbb
add
jg
push
mov
cmpsl
sub
mov
call
xor
sub
cltd
add
adc
adc
jg
dec
mov
dec
xlat
dec
cmp
or
dec
and
inc
inc
push
inc
mov
add
cmp
xor
sarl
lods
inc
sbb
mov
xor
adc
dec
mov
cli
add
push
xor
inc
cld
jl
push
sbb
and
fs
data16
sbb
inc
cmp
inc
mov
and
sbb
sub
mov
push
ret
lret
xor
and
adc
add
xchg
inc
fadds
xchg
je
js
lods
int
and
push
test
gs
mov
fstp
aad
xor
xchg
cmp
nop
or
dec
and
sbb
add
bound
nop
insb
push
cs
mov
push
or
fisubs
enter
adc
xchg
jmp
mov
pop
pop
adc
fisubrs
add
mov
test
cld
inc
mov
les
jns
addb
pop
and
nop
xchg
push
outsl
cld
test
push
sbbb
leave
xchg
mov
sub
addl
hlt
inc
sub
outsb
push
addl
aas
add
and
jle
jl
popa
cmpsl
clc
insl
jae
sub
pusha
or
mov
arpl
mov
mov
insl
sbb
mov
mulb
inc
jb
add
push
fdiv
mov
aas
or
jg
je
add
pop
dec
jge
imul
addb
dec
lret
jae
jno
pusha
jo
and
dec
in
ss
les
xor
daa
out
mov
mov
adc
push
dec
adc
nop
pop
dec
pop
adc
cmc
orb
jb
jns
adc
shlb
in
mov
sub
repnz
aam
in
enter
jo
test
cmpsb
jo
clc
movsb
inc
repnz
lods
jo
push
xlat
and
jnp
jno
adc
inc
inc
dec
mov
mull
or
jge
jo
mov
push
jb
test
mov
arpl
ja
pusha
mov
mov
test
imul
mov
push
test
sbbb
ret
and
popa
test
add
and
or
testl
adc
lock
cmp
cmpsb
jae
pop
mov
icebp
xchg
fadds
orb
cmp
arpl
adc
add
and
jo
leave
inc
and
inc
adc
adc
xchg
mov
xchg
xchg
lret
out
dec
push
mov
lods
lret
xor
mov
rolb
sbb
adcl
jmp
jl
inc
pop
pop
xor
pop
push
sub
cmp
mov
jmp
hlt
int
cmp
movsl
and
mov
out
gs
ret
push
sub
jl
in
frstor
movsl
inc
xchg
cltd
xor
and
popa
aas
pop
cltd
rclb
cltd
cwtl
adc
sbb
adc
in
push
mov
fs
call
inc
adc
push
adc
xchg
in
cs
pop
adc
insb
xchg
adc
add
adc
xchg
xchg
xchg
push
outsb
inc
and
xchg
and
mov
add
push
test
or
lock
sbb
sub
popf
pop
popa
mov
cltd
adc
xor
sbb
aaa
adc
insb
xor
add
fistpl
inc
mov
add
add
lea
jbe
scas
cmp
push
shlb
ja
dec
js
pop
push
pop
out
add
adc
push
push
addb
jo
cltd
shlb
cwtl
jne
test
fstps
ror
adc
mov
lods
cmc
add
xor
or
or
xchg
aas
mov
mov
add
daa
daa
mov
sqrtps
xchg
xchg
jns
into
or
pop
xchg
mov
mov
push
or
je
cltd
lods
fs
add
add
rolb
dec
and
jl
popf
xchg
pop
dec
dec
insb
popf
jae
lods
sub
push
push
or
add
sub
lahf
fcompl
and
inc
mov
push
and
sbbb
and
add
sbb
in
push
fnstenv
sbbb
arpl
sub
sub
xchg
movsb
cmpsb
addr16
notb
adc
test
dec
inc
out
mov
or
pop
stc
lret
xchg
mov
or
mov
adc
xor
rorb
cmpsb
mov
mov
or
sbb
gs
xor
add
cmp
xor
adc
popf
inc
adc
cmp
xor
cwtl
andb
and
dec
jge
test
jl
mov
xorb
add
xlat
outsb
dec
ss
mov
call
xchg
or
jg
xor
and
loope
roll
sbb
call
dec
jne
sbb
cmpl
std
pop
popa
mov
mov
imul
add
fisttpll
shlb
push
hlt
xchg
jl
sti
mov
jmp
ds
mov
and
movsl
sbb
or
sub
mov
loope
mov
xor
fsts
xchg
jg
inc
add
xor
xor
xor
inc
sub
add
push
dec
leave
or
xor
push
dec
mov
dec
int3
add
clc
pop
inc
jle
mov
sbb
adc
xchg
in
adc
mov
xchg
out
sbb
rorb
jmp
inc
sub
jle
push
pop
lds
mov
inc
rolb
xor
rolb
insl
mov
push
sbb
dec
dec
inc
adc
adc
shll
dec
inc
add
and
and
mov
pop
stos
xchg
jnp
nop
pop
leave
and
jg
push
nop
inc
and
xor
jg
push
enter
stos
jg
in
xor
push
addb
nop
js
adcb
outsl
mov
orb
insb
mov
daa
orl
popa
cmp
daa
add
je
pop
sarb
push
test
out
push
ja
pop
add
or
scas
shrb
xchg
movsb
jmp
xchg
xor
push
add
lea
popf
push
or
mov
inc
test
imul
jg
in
je
out
lock
cmp
test
andb
xor
icebp
int
lock
sbb
neg
sbb
jnp
outsl
or
cmp
aaa
push
pop
mov
in
popf
inc
adcb
orb
movsl
dec
mov
inc
sbbb
pop
sub
fdivrs
int3
xchg
add
pusha
sbb
pop
push
pop
adc
iret
xor
out
inc
repnz
lods
sbb
mov
out
outsb
adc
push
adc
std
mov
xor
test
cmp
stos
cmpl
arpl
push
sarb
andl
imul
xchg
aam
dec
add
or
imul
pop
push
adc
aas
lret
mov
xor
push
or
fcomps
in
mov
fwait
cmp
jbe
adc
test
popw
test
push
test
xor
adc
test
inc
test
adc
and
pop
xchg
movsb
xchg
fidivl
mov
pop
enter
xchg
dec
cs
xor
testl
stc
pop
pop
xchg
inc
adc
test
scas
xor
jnp
and
subb
push
stos
je
add
push
mov
cmp
or
lahf
adc
lods
xchg
xor
mov
aam
inc
push
sbb
sbb
sub
cs
and
xchg
dec
enter
popa
add
add
mov
lahf
adc
and
push
adc
lods
push
lret
mov
xor
mov
or
testl
fbld
stos
nop
pop
jns
xor
int3
inc
mov
je
xor
adc
pop
adc
xchg
rcll
rcl
or
or
pop
and
mov
or
push
mov
test
sub
mov
xchg
sub
add
and
fistpl
lahf
mov
or
rol
mov
xchg
mov
aad
incb
mov
sbb
scas
and
inc
or
adc
adc
add
xlat
add
adc
mov
cmp
ja
nop
push
or
pop
sbb
les
mov
inc
jno
push
add
and
scas
push
and
sub
push
and
push
adc
imul
inc
xor
outsb
pusha
or
lcall
imul
inc
jg
mov
out
pop
mov
mov
mov
or
idivb
sbb
mov
adc
jae
pop
push
aam
add
sahf
mov
popl
push
mov
jno
xchg
setge
sub
add
push
mov
xchg
or
mov
repz
mov
orl
fimull
or
cmp
in
jne
shlb
or
outsb
adc
xchg
nop
nop
adc
fidivrs
cmpb
test
cmp
lea
inc
orl
test
or
outsl
xlat
pop
cmp
js
xor
cwtl
mov
mov
mov
and
dec
andps
aam
adcb
add
inc
adc
mov
lock
lea
or
inc
jns
adc
or
mov
push
addr16
test
mov
sti
sahf
push
sbb
das
xorl
adc
xor
out
and
and
xchg
pop
loope
aad
mov
pusha
mov
xor
pop
xor
push
es
ds
rcrb
adc
jg
ret
outsl
jg
repnz
popa
rolb
rclb
into
adc
mov
cmc
nop
lds
dec
sbb
callw
push
fs
add
aam
movsb
or
add
arpl
nop
add
inc
inc
call
sbb
push
add
mov
gs
push
ret
gs
shlb
mov
nop
fstpt
enter
sbb
cmpsb
es
out
mov
imul
add
and
sbb
fistpl
enter
and
sbb
test
popa
add
incl
nop
addr16
insl
in
hlt
mov
testl
loopne
xchg
fbld
pop
and
aas
pop
sbb
sbb
xchg
ficoms
pop
pop
std
xchg
or
pop
jmp
jnp
add
jmp
cs
nop
mov
loope
cmp
rcll
xchg
inc
and
scas
or
xor
mov
popa
inc
shrl
push
xorl
xchg
pop
sub
mov
jo
add
add
pop
xchg
cmc
out
fidivrl
pop
imul
mov
pop
jb
mov
inc
push
sub
rcrb
or
enter
push
xchg
inc
pop
dec
inc
pop
xor
or
jmp
dec
rol
rcrb
dec
bound
push
sbb
or
and
aaa
mov
scas
jl
xor
lea
and
enter
test
aaa
inc
shrl
xchg
sahf
sbb
jb
sub
rcll
test
cmp
xchg
xchg
movsl
call
push
add
pusha
mov
loope
je
mov
mov
loop
lea
lods
inc
xchg
pop
dec
lds
dec
lea
fwait
cli
aas
hlt
cmp
jle
sbb
inc
push
fiaddl
sbb
clc
and
stos
mov
xchg
movsl
push
xor
adc
repnz
pop
jle
inc
jne
adc
cmpps
dec
add
xchg
ret
xchg
int3
mov
imul
jnp
outsl
in
dec
shr
adc
push
cli
pop
jae
adcb
jmp
or
sbbb
ss
ss
xchg
pusha
stc
pop
jmp
or
inc
stc
jle
mov
push
clc
ss
sahf
ss
stc
lock
or
fwait
stos
sbb
sbb
lret
cmpsb
inc
in
adc
in
gs
jne
inc
decb
push
dec
inc
int3
js
fsts
adc
push
scas
mov
sbb
dec
insl
sbb
sbbl
add
andb
add
push
mov
sbb
adc
inc
cwtl
fs
js
mov
sbb
cwtl
cs
adcb
pop
push
frstor
jl
je
xchg
jne
push
dec
jns
aad
loope
leave
test
scas
and
scas
and
adc
mov
jle
push
pop
and
fsubrp
pop
push
imul
cmpw
jnp
add
and
aaa
imul
sbb
xor
jb
jnp
mov
ja
inc
inc
inc
adc
mov
test
shr
mov
sbb
test
pusha
daa
push
adc
xor
movl
jns
mov
cmp
jne
inc
and
jno
ss
outsb
xchg
gs
adc
add
enter
add
int3
cltd
push
mov
fsubrs
hlt
cltd
popl
mov
adcb
in
repnz
lcall
add
andnps
add
mov
sbb
mov
pop
scas
pop
fscale
cs
add
movsb
mov
pop
jne
xchg
aas
sub
ds
insb
sub
add
mov
aam
push
cmp
push
mov
mov
movsb
lock
outsl
dec
cmp
icebp
xchg
aad
cmp
jb
or
add
xor
pop
aam
mull
leave
mov
lahf
jecxz
pushf
pusha
pop
enter
pushf
jo
add
loopne
rorl
sub
inc
or
lret
inc
sub
stc
push
and
cs
mov
dec
movsb
and
add
or
mov
sub
jp
ret
aam
or
test
pop
dec
aas
fistps
jb
sub
test
popf
jbe
inc
adc
pop
pop
seta
hlt
je
lcall
sahf
push
in
cltd
pop
mov
popf
xchg
popf
and
sub
popf
xchg
stos
into
aam
ss
js
test
push
pop
mov
pushf
add
pop
fsin
or
ficoml
adc
jg
sbb
xchg
sbb
push
lahf
movb
add
imul
sub
jb
fs
cmp
dec
sub
ret
xchg
sub
popl
insb
sbb
sbb
aad
add
lds
aam
push
push
clc
test
jb
mov
push
call
rorb
and
add
dec
sbb
jae
ret
fldt
jb
mov
aas
pop
mov
add
adc
add
dec
cs
sbb
adc
out
inc
and
sub
add
xor
andb
movsl
push
jns
data16
push
test
dec
mov
push
movsl
dec
adc
fisttpl
repnz
mov
pushf
pop
adc
aaa
pop
or
adc
cmp
dec
add
fs
inc
jbe
dec
mov
js
adc
sbb
fists
cmp
jne
filds
lock
jno
mov
sub
or
icebp
sub
sbb
mov
adc
xchg
mov
jmp
pop
dec
sahf
test
dec
xor
out
sahf
popa
and
jg
inc
sub
aam
and
mov
sbb
xor
jae
and
push
leave
cmpb
add
sub
jb
and
int3
fwait
mov
dec
dec
daa
adc
or
fsts
and
push
push
cmpsl
aas
dec
scas
sub
cmp
inc
daa
fdivrs
pop
jl
push
fistpl
or
es
cwtl
dec
inc
xchg
mov
test
loopne
mov
insb
inc
xor
popa
adc
je
movsl
test
les
test
inc
test
xchg
stc
mov
fwait
pop
dec
pop
pop
mov
test
jne
in
call
inc
add
push
sahf
inc
inc
sbb
xchg
push
lret
aas
ljmp
dec
aam
shrb
add
add
and
fidivrl
jmp
aam
inc
jnp
and
rclb
dec
andb
fimuls
add
sti
add
mov
mov
dec
inc
mov
hlt
xor
jo
push
sub
pop
add
idivb
add
jle
xchg
test
sbb
movsb
jb
add
push
push
orb
xor
xor
push
vpcomub
daa
test
ret
insl
and
dec
and
movsb
add
call
sbb
xadd
cmpsl
adc
jmp
push
push
shrl
dec
adc
dec
add
and
data16
shlb
cmp
jmp
int
mov
leave
test
cmp
add
xor
in
andl
adc
push
test
not
test
pop
cmp
fcmove
pop
xchg
sub
mov
jb
add
add
mov
xchg
mov
cltd
std
or
xchg
cltd
js
fildl
repnz
cltd
jo
dec
sub
mov
in
adc
xorb
pop
sub
pop
mov
adc
adc
lock
in
clc
jne
mov
repnz
jo
xchg
jbe
or
inc
pop
xchg
fadds
addb
cmpsb
cltd
pusha
or
imulb
rcll
mov
cmp
fistpl
inc
add
movsb
push
inc
inc
mov
lods
mov
mov
adc
cld
aam
imul
pusha
mov
xchg
pop
cs
mov
leave
mov
rcl
mov
lcall
loopne
jp
cmc
inc
add
cwtl
mov
packsswb
and
cli
add
pop
sbb
cmpb
add
xchg
dec
jb
dec
repnz
add
gs
int
mov
imul
movsb
es
mov
in
lods
lods
xchg
test
add
or
js
jle
adc
lock
push
add
ret
or
sbb
mov
jo
out
scas
xor
mov
mov
movsl
and
xor
aam
mov
mov
sti
outsl
std
orb
push
xchg
pop
push
mov
xlat
test
mov
push
insb
notl
imul
mov
fisubrl
mov
or
xlat
sub
outsb
xchg
jbe
fsubrl
jecxz
out
adc
sbb
test
das
push
jne
clc
sti
pop
rcrb
xor
push
mov
jo
or
jl
sti
fsubrl
xchg
push
clc
mov
and
add
and
mov
fcmove
mov
adc
add
cmp
pop
int
jne
sbb
mov
ja
sub
sbb
mov
add
xor
mov
fcomps
push
mov
test
je
add
add
or
add
adc
int
int3
ss
mov
cmp
pusha
dec
divl
sti
push
inc
sbb
cmc
aam
les
or
shl
mov
ds
aam
add
push
shlb
xchg
mov
xchg
pop
loopne
mov
or
mov
mov
mov
int
mov
rolb
xor
lods
sarb
and
xchg
push
jnp
adc
mov
pop
fdivrl
nop
lahf
add
lods
push
lods
mov
or
pop
dec
dec
mov
cmp
push
ja
cmp
scas
aas
sub
cmp
inc
rcll
les
push
adc
adcb
and
jg
add
mov
and
inc
add
add
nop
clc
or
jecxz
sbb
sbb
jns
mov
hlt
push
adc
or
push
jg
or
cmp
jnp
aaa
outsl
loopne
jge
enter
and
in
sahf
adc
in
cmp
and
hlt
dec
jb
xchg
shlb
or
dec
jb
pop
xor
mov
std
loopne
pusha
je
in
push
pusha
or
inc
cmp
jno
inc
cmp
jo
mov
sub
dec
aad
xchg
test
shll
xchg
clc
and
and
mov
cli
pop
or
cmpsb
enter
in
inc
sbb
subl
xchg
add
into
inc
jmp
cli
dec
ljmp
jp
div
mov
dec
mov
sub
je
mov
lods
inc
dec
mov
and
lahf
leave
adc
loopne
out
lar
roll
inc
loop
call
adc
dec
les
cmp
fists
push
ja
in
mov
insl
lods
pop
imul
lods
jne
xchg
popa
insl
movb
data16
mov
add
loope
mov
bound
xor
jmp
or
mov
adc
js
in
mov
push
pop
inc
push
enter
mov
mov
cmp
andps
and
lcall
cmc
adc
outsb
mov
sbb
pop
mov
sub
adcl
addb
orb
sbb
or
sub
pop
add
pusha
cmp
mov
add
dec
lods
jg
mov
or
inc
xchg
or
xchg
adc
inc
js
jmp
xchg
scas
or
sub
ja
ss
push
and
mov
push
adc
setae
mov
xor
clc
subb
adc
testl
or
daa
testb
mov
and
rcr
cmp
setl
loopne
fistpll
out
jo
add
jmp
dec
jl
push
push
push
xor
ss
mov
inc
jl
or
push
adc
popa
imul
xchg
iret
fwait
rcrl
mov
test
jns
or
xchg
in
test
aas
inc
add
mov
scas
jne
lret
fstp
inc
andb
xchg
rorb
cmp
push
mov
add
xor
loop
sub
sub
iret
lock
dec
adc
aas
add
add
sti
pop
add
add
aad
and
jecxz
es
lcall
xchg
ljmp
divb
mov
mov
pushf
push
adc
xor
ds
adc
adc
xor
pop
dec
push
pop
test
aam
add
lea
adc
mov
lea
fisubs
mov
ret
sub
xchg
shlb
add
push
out
popa
outsb
pushf
cmp
shrl
mov
push
mov
mov
imul
sub
push
mov
aam
pop
adc
sbb
mov
dec
adc
jmp
movsl
ss
mov
filds
popa
pop
clc
ss
sub
push
adc
xor
shll
jb
xchg
or
fs
ret
call
in
push
mov
clc
shrl
lods
cmp
pop
fildll
xchg
roll
insb
aad
lret
xchg
hlt
xchg
les
mov
loopne
mov
inc
and
pop
dec
movsb
dec
cld
sub
dec
pop
xchg
or
pop
pop
xchg
mov
call
mov
rolb
xor
or
mov
sbb
jle
clc
shlb
inc
add
sub
pop
roll
pop
scas
mov
push
nop
rorl
clc
sbbb
add
add
mov
jge
std
insl
pop
sarl
cmp
dec
adc
jo,pt
cmp
dec
xor
xchg
mov
lret
sbb
fsubrs
test
daa
pop
out
adc
push
jne
xchg
roll
jb
mov
icebp
pop
jno
add
cmpsl
sub
dec
push
ds
inc
and
rolb
xchg
scas
and
rcll
add
test
add
push
mov
mov
pop
mov
bound
or
mov
or
in
add
rcl
pop
add
push
les
adc
stos
rorb
adc
iret
sbb
and
add
adc
push
cvtdq2ps
and
ss
add
insb
inc
adc
sub
add
lret
add
outsl
xchg
loop
loope
and
add
and
inc
mov
bswap
xor
xchg
mov
rolb
sub
xchg
dec
shrl
xchg
dec
addr16
ret
lcall
arpl
push
and
fisttpll
daa
sahf
fnsave
popf
and
mov
in
sbb
mov
xchg
lret
dec
loope
add
test
adc
or
nop
shlb
adc
arpl
rol
loop
or
fstps
shll
outsb
xor
lods
push
adc
inc
pop
aad
adc
or
fidivrs
int
cwtl
push
mov
insl
addr16
adc
addl
jo
dec
fadds
jl
shlb
aas
sbb
pop
cmp
movsl
sbb
sub
and
in
rcrl
jno
sub
inc
cmp
adc
es
enter
dec
enter
add
or
test
adc
sub
sub
dec
shll
sub
addr16
push
ret
das
test
sub
mov
mov
jge
jns
mov
xor
pop
test
cmpsl
sub
xchg
add
pop
push
sbb
cmpb
cwtl
xor
sar
push
pop
xor
push
cmp
sub
insb
pop
pop
xor
cmp
push
xrelease
inc
xchg
push
ret
hlt
dec
or
lea
pop
adc
ret
adc
lock
imul
ret
dec
add
into
pop
pusha
jb
imul
add
add
add
jns
aas
lods
clc
orl
and
out
mov
mov
push
cmp
or
adc
dec
add
xor
mov
push
hlt
inc
or
inc
sub
imul
sti
adc
lds
mov
out
push
les
scas
ds
mov
pusha
pushf
and
test
sbb
sbb
or
sbb
lock
data16
lcall
adc
in
or
add
push
inc
lods
inc
push
sub
push
dec
sbb
notl
pop
lcall
addr16
inc
je
pushf
mov
inc
test
sti
xor
mov
fldl
push
and
mov
stos
push
fisttps
add
iret
repz
outsb
jae
mov
or
aaa
sub
imul
xor
nop
push
push
xchg
aam
xchg
pop
cltd
and
mov
shl
adc
mov
mov
sub
adcb
sbb
faddl
jl
mov
rolb
and
insl
mov
push
add
push
lcall
bound
jg
xlat
enter
sub
imul
mov
ret
mov
and
push
add
or
or
ja
lahf
pusha
mov
shll
dec
int
add
mov
ja
rorl
or
sbb
dec
mov
test
inc
or
call
or
add
sti
sub
mov
pop
adc
in
xor
enter
dec
mov
in
pop
cmpsb
mov
fsubrl
out
add
mov
adc
bound
aam
xor
nop
push
inc
jns
dec
sub
and
mov
mov
or
mov
test
dec
mov
or
nop
mov
cmp
inc
cmp
inc
mov
mov
ja
hlt
or
xchg
js
pop
push
or
hlt
rcrb
jae
clc
sub
or
sti
sarl
add
sbb
lret
or
jecxz
jnp
xor
xchg
add
jge
cmp
push
and
push
cld
sbb
les
mov
mov
sbb
pop
lock
fcomp
subl
aam
fucomi
push
lahf
push
inc
fnstcw
or
inc
test
leave
jmp
dec
and
shrl
pop
shll
js
dec
cmp
negb
jne
stos
or
fcmovnu
push
or
push
pop
jl
jnp
sbb
int
jge
jae
push
fxch
mov
sbb
jl
stc
cmp
sbb
xchg
add
add
mov
and
sub
pop
or
adcb
mov
inc
dec
jmp
orl
push
sub
loopne
xorl
xchg
and
push
out
pop
sbb
or
mov
pop
pop
push
or
stos
push
lret
rorb
fs
lret
les
jecxz
xchg
ss
dec
and
cmp
int3
sub
sbb
arpl
lods
push
add
mov
dec
mov
adc
call
and
sub
xor
sbb
sbbb
inc
and
add
shll
sbb
xchg
ss
inc
sbb
pop
les
pusha
repnz
mov
addl
negb
iret
repnz
adc
add
addb
movsb
aam
int3
addr16
fisttpl
ffreep
outsl
mov
fisttps
push
add
sbb
js
adc
pop
xchg
shlb
inc
call
lock
xor
push
lea
sbb
sub
sahf
bound
lea
call
dec
push
adc
loope
out
mov
enter
nop
sbb
test
mov
xor
push
pop
adc
or
frstor
test
ror
dec
xor
das
insb
adc
enter
jb
inc
enter
dec
fistl
dec
filds
mov
pusha
pop
xor
sbbb
cmpsl
inc
sub
jo
and
es
fdivrl
shll
in
xchg
xlat
sbb
addb
mov
xchg
or
push
and
jmp
push
cmpsl
and
cmp
loope
inc
push
push
sbb
push
mov
aaa
fcoms
and
add
mov
insb
imul
lock
pop
sub
mov
imul
movsb
nopl
add
sub
nop
sub
adc
cmpsl
cmpsl
in
in
mov
pusha
rorb
mov
call
pop
or
je
iret
xor
xor
mov
push
xchg
les
scas
and
hlt
and
test
pop
inc
rcrl
add
jbe
js
xor
test
daa
xchg
sahf
sub
outsl
pop
mov
les
or
sbb
hlt
mov
popf
jmp
daa
mov
add
sbb
shl
xchg
call
outsl
push
xor
mov
aad
pop
xor
in
loope
sbb
cmc
shlb
pop
rorl
sti
and
inc
rcll
repnz
jno
xor
aad
addb
sub
mov
popf
mov
or
push
adc
or
and
sub
or
out
mov
push
push
rcll
pusha
and
repz
inc
sbb
ljmp
and
fildl
bound
mov
inc
adc
xchg
aam
mov
mov
or
jne
mov
adc
leave
push
mov
sbb
test
jmp
pop
xor
or
aam
test
sub
add
jno
sbb
iret
add
addb
push
push
lods
lahf
mov
and
loope
mov
cmp
or
mov
aas
int
xor
in
lret
fbld
sbb
add
adc
pop
push
xlat
out
pop
nop
inc
in
daa
or
inc
adc
insb
stos
adc
push
push
mov
pop
inc
mov
adc
sti
push
inc
mov
or
or
inc
cmp
mov
loope
adc
cld
ret
aas
scas
sbb
clc
push
inc
sbb
scas
push
les
push
add
sbb
mov
les
clc
sub
add
adc
jbe
nop
mov
lock
sbb
and
cmpl
testl
pinsrw
push
incl
mov
push
add
dec
out
mov
inc
and
and
adc
popf
add
sbb
lahf
lret
add
or
stos
add
dec
add
inc
arpl
jne
mov
push
push
loope
testb
push
daa
add
xor
push
test
inc
dec
fistps
or
dec
pop
movsl
add
jp
les
push
lock
faddl
inc
dec
push
dec
pop
xorb
add
mov
add
pop
mov
push
jb
popa
js
inc
mov
xorb
adc
fmulp
mov
rcrl
or
dec
and
push
pop
dec
pop
push
xlat
cltd
push
gs
outsl
mulb
push
push
sbb
dec
sbb
dec
lock
dec
clc
insb
inc
outsb
xor
test
nop
or
icebp
fbld
test
push
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
orl
pop
daa
add
sub
and
mov
setle
aaa
mov
mov
add
fsubl
sbb
or
cwtl
idiv
incb
dec
dec
inc
sub
dec
xor
or
popa
sub
pop
mov
icebp
push
lea
lods
fidivs
lea
call
inc
gs
int3
lcall
addr16
enter
test
sbb
lods
or
arpl
bound
inc
and
inc
ss
pop
jnp
add
xchg
sahf
add
movntq
out
mov
push
insl
cmp
dec
or
jmp
mov
jns
jb
loope
sahf
add
and
hlt
or
cmc
adc
push
mov
test
or
nop
rclb
jns
jne
sub
dec
jle
cmp
add
and
mov
je
bound
hlt
pop
mov
mov
mov
xchg
add
or
jb
push
push
flds
jnp
sti
adc
stos
inc
inc
ud1
inc
cmp
test
fldl
push
dec
xor
inc
dec
inc
push
sbb
xor
outsb
adc
insb
lods
or
mov
insb
jmp
adc
shlb
push
mov
addb
and
pop
fstpt
cs
pop
aas
xor
add
mov
pop
inc
xchg
cmpsl
adc
xchg
hlt
push
fcoms
fs
inc
outsb
xor
xchg
xchg
push
or
pcmpeqb
xchg
add
xor
pop
rcll
sub
fidivrs
inc
xor
mov
mov
or
aad
add
aaa
adc
pushf
xor
inc
inc
cmp
sub
push
cmpsl
or
xchg
out
pop
mov
adc
cmp
mov
ds
dec
inc
inc
rcrl
mov
dec
andps
xor
roll
fisubrl
dec
inc
xor
dec
rorb
push
clc
dec
push
mov
mov
dec
pushf
dec
dec
pop
mov
pop
out
or
roll
ja
out
cld
mov
pop
lods
std
push
dec
dec
push
inc
push
inc
outsb
and
rcrl
enter
push
cmp
mov
loope
push
dec
and
mov
cmp
xor
push
or
push
inc
add
adc
jno
pop
lret
fwait
pop
bound
aaa
or
cwtl
xchg
adc
push
fwait
xchg
cmp
mov
push
pop
imul
and
or
sub
or
mov
sahf
and
sub
in
je
add
or
lcall
and
jo
xor
dec
or
orl
imul
movsb
cmp
loopne
xor
inc
bound
in
jne
lods
mov
xor
inc
pop
jne
inc
push
les
ss
pop
mov
enter
xor
mov
pop
ret
xor
xor
or
sub
or
add
add
lahf
jo
mov
das
push
je
loop
mov
jle
loope
loop
mov
jecxz
jo
mov
jg
icebp
mov
sub
push
pop
xor
ficompl
jne
pop
fsubrl
pop
fs
mov
cmpsb
adc
das
pop
ss
sti
fcoms
js
mov
adc
sbb
add
data16
addl
xor
adc
inc
inc
lock
lods
add
imull
daa
out
nop
push
outsb
cltd
loope
daa
mov
xchg
pop
sub
gs
andl
sub
sahf
xchg
dec
insb
loop
int3
jecxz
add
add
mov
jo
ja
mov
pop
pop
jbe
mov
inc
pop
loope
pop
shlb
popa
std
testb
add
mov
adc
sbb
fs
jb
mov
xchg
xchg
sub
adc
mov
and
mov
cmp
add
jmp
mov
mov
inc
outsl
xchg
inc
mov
sbb
jo
jno
adcb
dec
and
xchg
mov
jbe
jmp
dec
jns
push
push
insl
mov
sub
inc
dec
insb
in
fdivrs
push
add
add
and
xor
inc
xor
inc
pushf
xchg
pop
enter
add
add
adcb
and
pop
adc
inc
and
jb
inc
xor
stos
cli
sbb
outsl
test
clc
xorb
jne
dec
insb
add
jbe
popa
jecxz
xchg
cmp
add
adc
and
xchg
or
inc
movsl
mov
or
movsl
xlat
xlat
pop
xor
sti
sub
jne
enter
testl
dec
call
inc
xchg
adc
xlat
add
sbb
add
pop
xor
fs
or
jp
mov
daa
data16
inc
or
cmp
jbe
xor
and
pop
jb
cmp
mov
fldcw
or
add
add
add
es
dec
mov
and
push
out
inc
push
push
pop
push
dec
inc
pop
pusha
ljmp
cmp
mov
add
pop
xor
or
pop
jbe
in
adc
aaa
insb
sbb
push
imul
pop
xor
sbb
aaa
pop
push
sarl
pop
pop
inc
jle
sbb
inc
testl
fs
or
dec
arpl
rcll
cmp
mov
dec
sbb
popa
lret
nop
fisubl
fistpl
jmp
xor
adcl
cmp
insl
popa
test
xor
imul
pop
leave
jnp
jg
dec
inc
test
jmp
or
jne
movsl
in
sbb
and
pop
sub
jnp
ljmp
addr16
add
xchg
jl
clc
mov
add
pop
mov
aad
js
push
pusha
inc
pop
xchg
push
dec
mov
adc
icebp
pop
mov
hlt
sbb
jmp
mov
adc
mov
popa
decl
cs
arpl
cs
mov
mov
loope
xor
adc
pop
jne
inc
gs
icebp
xor
orl
push
xchg
aam
xchg
cmovae
mov
inc
push
lahf
sub
lock
or
es
mov
in
sub
xor
add
add
mov
xchg
lock
or
xchg
adc
loope
adc
rolb
imul
mov
imul
stos
cmpl
pop
xor
jl
add
sub
xor
pop
subb
aaa
push
sbb
paddsb
sub
push
pop
movsl
push
xchg
jb
dec
mov
dec
push
pop
mov
xor
sbb
ljmp
nop
push
mov
push
ja
pop
andl
xchg
aaa
pop
pusha
jns
lds
loope
out
js
into
or
dec
insl
sub
push
movsl
sbb
insb
es
out
push
data16
pusha
add
push
daa
jl
add
in
mov
inc
push
divl
xchg
cs
sbb
mov
lods
movsl
aas
fistpl
aam
sbb
and
in
adc
adc
push
pusha
in
add
lock
adc
cmpsl
mov
clc
mov
dec
inc
push
dec
cmpsb
lods
aam
cs
inc
inc
test
cmpsb
jo
xor
jp
push
mov
ljmp
adc
sub
pop
imul
cmp
movl
pop
fcomps
push
cmp
inc
dec
das
push
jnp
lea
pop
jo
mov
jo
test
push
adc
das
adc
lods
pop
in
movsl
ja
ja
add
pop
ds
pop
inc
push
add
pop
dec
sbb
data16
ja
xor
rolb
jo
inc
sub
pop
bswap
sbb
sub
push
popa
add
and
fiaddl
push
add
and
movsl
mov
mov
sub
aaa
inc
mov
movsl
sub
sub
push
scas
add
sub
push
outsb
sub
adcb
inc
outsb
addr16
dec
push
sbb
xor
imul
outsl
xor
jno
push
cltd
shrb
jb
cltd
pop
mov
dec
fs
enter
dec
je
mov
push
mov
mov
mov
das
push
adc
imul
or
leave
mov
int
js
test
imul
rorl
add
fwait
mov
pop
sbb
add
clc
scas
jge
add
or
push
inc
push
dec
and
mov
lret
lock
or
insb
lcall
insl
xor
pop
mov
sub
test
outsl
js
xor
movsl
or
cmpl
sub
rcll
arpl
or
xor
lahf
sar
push
adc
add
enter
in
cmpsl
push
push
jns
hlt
shr
imul
insb
sbb
loope
sbb
leave
stc
jo
aam
add
hlt
fists
add
jne
mov
adc
addb
cmc
xlat
mov
call
push
loopne
js
pop
xchg
push
mov
pop
jns
addr16
xor
mov
push
in
dec
inc
cld
das
rorl
xor
or
lods
xorb
inc
loop
add
adc
outsl
cltd
ror
aaa
pop
and
cs
adc
fstl
adc
mov
and
test
push
sbb
inc
mov
sub
shll
sub
jns
negb
js
ds
xchg
cmpb
mov
xor
leave
mov
lock
inc
add
add
jecxz
adc
test
sbb
js
pop
test
xchg
cmp
mov
or
ja
in
cs
or
mov
rorb
shr
fisttpl
dec
hlt
addl
add
fsubs
pushf
imul
in
lds
ja
pop
push
repnz
dec
dec
dec
ja
testl
mov
mov
xchg
dec
clc
notl
cld
inc
inc
dec
dec
inc
pop
clc
clc
lods
inc
enter
pop
adc
jo
aaa
adc
testl
pop
dec
or
dec
cmp
aaa
jo
rorb
dec
xlat
outsb
pop
pop
shlb
dec
adc
inc
sub
pop
movsb
add
push
and
sbb
cltd
push
mov
and
pop
shl
dec
sub
and
rorb
rclb
enter
dec
stc
into
or
mov
gs
push
lds
xlat
add
or
pop
mov
mov
std
out
popa
lods
addb
mov
loopne
jmp
out
adc
push
icebp
shlb
sbb
rcr
add
jl
test
clc
arpl
orb
js
rol
pop
nop
shrl
xchg
push
inc
dec
ret
aaa
adc
test
xchg
popa
and
sahf
sbb
and
inc
inc
inc
dec
gs
les
sub
das
sub
lds
or
lcall
shrd
sub
pusha
icebp
mov
pop
cs
mov
cmc
push
cmp
in
sbb
jl
or
outsl
push
jns
sbb
inc
xchg
mov
mov
or
xor
cmpsb
mov
dec
pop
popa
jne
aas
pop
sti
out
in
repnz
dec
dec
dec
dec
push
push
cwtl
sti
call
pop
sti
out
inc
adc
loopne
add
pop
or
push
loope
adc
sti
das
dec
stos
adc
dec
push
inc
mov
stos
pushf
cmc
inc
xchg
sbbl
mov
shll
sbb
in
sti
jg
push
jmp
and
sbbb
cmpsl
insb
sub
push
das
fs
das
or
test
dec
xlat
pop
cmp
pop
imulb
sub
pop
sub
adcb
push
xor
popa
adc
mov
xor
inc
test
cmpsb
mov
cs
adc
and
sbb
cs
imul
frstor
test
pop
cmc
scas
pop
push
add
jb
jae
adc
test
add
mov
out
rorl
push
cmp
or
push
add
dec
inc
push
push
pop
mov
call
push
inc
jns
out
dec
aaa
add
call
adc
or
and
add
popf
cld
sbb
pop
push
jb
lods
xor
sbb
jns
outsb
mov
add
shl
insb
jbe
sbb
push
das
ror
mov
lock
push
sbb
scas
or
test
andl
lods
adc
aam
subl
push
stos
push
cmp
sub
iret
imul
or
mov
rolb
clc
int
jmp
and
out
iret
je
mov
subl
pop
shrl
push
call
clc
dec
pop
add
or
insb
and
or
push
and
sub
push
mov
and
cmp
rcrl
mov
or
sub
pop
adc
mov
lcall
fwait
mov
pop
daa
imul
xor
or
xor
jmp
addr16
jbe
popf
add
mov
pop
xor
mov
add
rclb
movsb
sbb
mov
sub
sbb
lods
push
dec
pop
inc
and
data16
imul
inc
mov
or
imul
lods
jecxz
outsb
fs
imul
ffree
cmp
pop
insb
xor
pop
jp
or
mov
adc
or
sbb
jns
insb
jae
sbb
ds
test
pop
rcrb
rcrb
dec
aaa
test
rcll
push
imul
test
push
push
push
add
mov
imul
or
or
push
arpl
daa
jl
inc
lods
nop
add
xchg
add
movsl
sbb
add
pop
lods
ja
outsb
gs
or
int3
jb
or
mov
test
test
inc
popa
repz
jg
xorl
sbb
les
imul
ret
test
mov
mov
ret
insl
pop
ret
push
xchg
lret
bound
jae
test
pop
pop
ja
pop
sbb
xor
arpl
ret
jl
sbb
imul
cmp
adc
fs
orl
sbb
aad
sbb
push
pusha
jno
stos
add
ss
das
dec
xchg
sub
lret
dec
jmp
jo
push
movsl
or
xchg
adc
lret
pop
mov
sub
pop
push
adc
cmpsl
add
mov
fs
mov
adc
popa
addr16
pop
adc
and
mov
inc
inc
es
je
inc
sbb
add
mov
and
enter
cmp
sub
or
pop
dec
pop
sbb
or
das
adc
mov
or
or
in
push
cmp
imul
decl
adc
pop
outsb
fdivl
adc
rcll
ret
xor
jp
add
bound
sbb
mov
mov
xor
mov
lock
inc
movsl
sbb
adc
xchg
add
adc
popa
xor
and
fcomi
mov
push
movsl
fwait
pop
in
xchg
shrb
in
xchg
and
notl
jo
push
sti
movsl
jo
adc
xchg
cmp
and
bound
in
push
lods
or
jae
jmp
orb
scas
adcb
sbb
or
or
sarb
or
mov
shrb
sub
sub
adc
adc
lods
dec
rolb
mov
fwait
comiss
jl
movsb
aaa
fs
pusha
jmp
loope
js
decb
xchg
lahf
movb
inc
or
js
adc
add
fists
add
insb
mov
out
outsl
sub
sub
jnp
xor
sub
fbstp
movsb
ret
arpl
notl
insb
push
or
in
loopne
jmp
sbb
cmp
xchg
jl
call
pop
add
push
cmp
gs
test
ret
adc
mov
bound
adc
xor
inc
inc
cmp
shr
sbb
xor
dec
inc
pop
test
inc
add
pop
pop
mov
pop
fwait
xor
inc
cmp
mov
mov
mov
and
sbb
cltd
sub
shll
xor
subb
lds
adc
ret
int3
mov
int
aas
jl
push
repnz
mov
mov
add
mov
fisubs
mov
sarb
enter
xchg
js
clc
jne
jo
popa
xor
inc
or
or
mov
mov
xchg
or
or
xor
mov
xchg
or
pop
movsb
sbb
movsb
cmp
test
insl
mov
aad
sti
sbb
jo
mov
lds
popa
arpl
mov
loop
jae
cmp
andl
test
rcll
vcvtps2dq
enter
inc
adc
in
sbb
fists
rcll
adc
shlb
test
mov
xchg
push
sbb
pop
and
ret
mov
nop
xchg
ss
adc
mov
inc
adc
cmp
inc
aas
adc
insl
add
aas
and
loope
insl
andb
gs
cmp
xor
adc
es
inc
xchg
aaa
adc
js
or
pandn
mov
cs
das
inc
mov
push
test
xor
movntps
sbb
xor
lock
cmovno
movsl
or
adc
sub
inc
cli
add
repz
test
std
or
pop
popf
sbb
pop
add
es
sti
sub
push
push
negb
inc
dec
xchg
dec
rcr
pop
and
scas
movb
xchg
jb
in
enter
ja
bound
test
ja
gs
es
call
inc
inc
or
push
rorb
mov
dec
lock
add
adc
dec
leave
add
xor
xor
scas
xchg
push
test
and
clc
cmp
add
cli
pop
shll
negb
enter
data16
stos
sub
sub
fsts
arpl
hlt
jno
push
push
pop
xor
add
mov
xor
pop
das
xor
push
enter
push
daa
add
jge
add
dec
sub
js
jl
add
bound
orl
loope
adc
sub
jge
jl
push
cmpsb
pop
jecxz
mov
sub
nop
test
xchg
adc
and
cwtl
icebp
push
leave
pushf
pop
mov
fmul
jmp
or
push
pusha
jnp
test
sar
insb
test
push
mov
aaa
mov
aad
imul
scas
mov
loopne
cmc
and
pushf
mov
test
in
lcall
repz
cld
pushf
je
jecxz
push
or
push
pop
push
mov
lea
push
mov
dec
dec
and
jno
xor
adc
leave
adc
shll
xor
sbb
adc
jmp
push
cmp
or
and
or
lods
mov
test
shll
xchg
xor
pop
orb
inc
sbb
lret
xor
push
js
pusha
and
dec
fsubl
orl
lea
jb
cs
dec
sub
sub
pop
adc
fcmovnbe
or
lods
xchg
pop
add
out
loope
jb
je
lds
and
lret
push
in
pop
jge
jbe
pushf
shl
jbe
add
mov
sub
andb
sub
add
xchg
and
pusha
mov
cli
and
sub
dec
ja
movsb
daa
xor
add
xor
xchg
mov
or
pop
push
adc
jecxz
adc
pop
sbb
adc
pop
dec
ja
ss
cmpsb
in
adc
gs
xchg
imul
sub
pop
jns
test
add
xchg
sub
out
lods
cmp
jns
data16
popa
aaa
popa
mov
mov
mov
xor
adc
test
jmp
mov
imul
adc
jne
bound
bound
repnz
sbb
cmp
xor
sbb
xchg
dec
gs
int3
and
dec
inc
dec
in
mov
rolb
das
mov
test
and
jmp
inc
adc
imul
sti
outsb
daa
js
xor
sbb
lcall
mov
sub
ds
mov
and
pusha
push
or
add
inc
inc
or
lret
cmp
and
ja
xchg
cwtl
mov
mov
addb
std
jo
mov
mov
aaa
xchg
lret
adc
mov
fidivl
inc
push
sbb
jg
sbb
fwait
adc
pusha
xchg
mov
mov
or
mov
mov
js
cmc
test
cmp
or
rcll
lock
stos
pop
inc
movd
mov
mov
rdtsc
cmp
lods
mov
xor
cmp
push
adc
rcrl
dec
fidivl
jmp
repz
fldcw
mov
add
xor
lcall
dec
in
imul
imul
jg
inc
movsb
popf
inc
sbb
jmp
imul
int
outsb
mov
sub
sbb
add
jecxz
popf
ja
nop
movsl
test
jg
adc
je
jns
adc
je
test
pop
cmp
ret
icebp
mov
sub
push
dec
sbb
or
push
je
das
repnz
sub
das
sub
movsl
xor
sbb
shrb
sub
out
data16
insb
sub
add
scas
arpl
pop
scas
sbb
push
lea
sti
movsb
mov
outsl
mov
cmp
arpl
pop
in
mov
cmp
cmp
loope
ret
adc
mov
pushf
inc
fwait
mov
in
outsb
ret
dec
xor
and
je
sub
cmpsl
dec
mov
jne
cmp
adc
inc
adc
je
mov
addr16
xor
call
fbstp
push
data16
jmp
xor
adc
lock
out
dec
scas
lret
mov
jg
jmp
repnz
jo
fstpl
fcomi
cmp
or
adc
dec
insl
inc
das
testl
addl
sti
xor
mov
lea
and
dec
js
movsl
pop
jns
add
gs
mov
or
pop
iret
add
scas
adc
aas
or
add
dec
fdivrs
push
xor
or
sbb
push
adc
pusha
adc
add
add
loopne
jnp
loopne
push
cmp
out
sub
inc
sbb
arpl
ret
xchg
mov
inc
movsb
and
jo
dec
pop
add
shlb
pop
sbb
notb
xor
adc
push
add
sbbb
cli
fadds
rcl
push
and
cmp
fs
pop
add
fisubrs
cmpsb
push
pop
cmc
jns
fnsave
mov
jg
add
xor
mov
imul
leave
into
add
filds
sub
push
in
mov
push
and
jns
dec
pop
andb
cmp
adc
jmp
xor
movsl
adc
add
lods
bound
subl
or
inc
and
pop
arpl
aam
pop
adc
int3
sbb
mov
inc
or
xchg
xchg
push
and
xchg
push
cltd
mov
inc
das
adc
sbbb
lock
bound
xchg
sbb
fs
inc
and
mov
xchg
stos
add
aas
mov
jae
imul
adc
pop
imul
jae
nop
arpl
xchg
or
pusha
adc
mov
jg
lods
and
shlb
outsl
xor
dec
imul
arpl
push
fs
add
and
jmp
pop
dec
sub
jb
xor
or
sarb
add
lret
mov
xor
and
cmpl
imul
cmp
rorl
mov
mov
cmp
add
cmp
addb
sbbl
mov
push
iret
bound
pop
pusha
test
fdivrl
pop
lahf
out
je
pop
test
mov
mov
jo
lea
jmp
jne
nop
jbe
shl
js
or
fs
mov
leave
gs
inc
into
lock
xchg
mov
mov
inc
cld
or
int3
es
fbld
loopne
or
xor
cmp
add
stos
fiadds
sbb
sbb
dec
xchg
push
outsb
xor
adc
loope
mov
or
add
and
inc
and
or
fidivl
pop
sub
add
dec
insb
aaa
sub
jnp
enter
ds
cmp
jp
out
pop
es
das
pop
push
and
xchg
sub
inc
pushf
xlat
and
mov
push
daa
dec
idivl
repnz
adc
roll
int
add
xor
inc
orl
es
mov
xchg
test
jmp
cwtl
dec
enter
fdivs
xor
mov
inc
shlb
add
pop
mov
loop
and
xor
pop
mov
inc
inc
or
mov
dec
pop
adc
negb
or
sub
dec
das
push
push
and
lods
mov
inc
xchg
sbb
pop
pushl
leave
prefetcht0
out
inc
cmp
outsl
adc
adc
cmp
sub
cmp
cmp
cmp
adc
mov
jecxz
pop
pop
jno
jno
mov
sbb
push
sub
jbe
pop
bound
sub
daa
fsubrl
enter
shlb
dec
push
pusha
shrb
push
movsl
scas
shll
or
mov
inc
add
pushf
sub
nop
mov
andl
shll
pop
lock
rorl
insb
pop
push
or
sub
daa
jmp
pop
push
ret
push
mov
mov
cld
addr16
or
push
xchg
xchg
or
sub
cmp
push
in
push
ss
push
cmp
mov
js
or
in
push
xor
imul
mov
xor
xchg
cmp
popa
popa
or
daa
mov
dec
out
push
and
call
sbb
fcoms
lock
dec
adc
loopne
sub
or
pushf
mov
outsb
jl
js
lcall
pop
and
test
in
lahf
pop
rcl
xor
cmp
sbb
cmpsb
add
or
inc
adc
xor
sbbl
nop
push
and
or
xor
in
or
xchg
das
and
xor
mov
inc
in
push
mov
addr16
xor
add
and
xchg
sub
loope
xchg
lods
jl
cld
in
fs
sub
mov
push
call
push
pop
test
xlat
insb
mov
push
fidivl
cld
jne
and
sbb
and
in
add
or
or
ret
adc
adc
or
push
inc
pop
nop
push
outsb
rcr
pop
in
add
orb
pop
push
push
sbb
cmp
jmp
sbb
popf
or
or
adc
sub
sub
sub
sub
scas
add
nop
jns
shl
and
cmp
je
mov
sbb
or
adc
xchg
inc
in
fbstp
mov
add
add
or
cmpsb
push
adc
push
push
outsb
sbb
sub
cmp
mov
inc
xor
addr16
mov
lock
adc
test
or
cs
add
hlt
push
sub
daa
xorl
sbb
hlt
dec
shr
shll
sbb
shll
lods
adc
stc
cmpl
fmuls
dec
lea
dec
inc
dec
mov
ret
and
imull
xchg
adc
push
dec
out
dec
xchg
pushl
outsb
fildll
mov
mov
daa
pop
jl
inc
rorb
add
mov
subl
or
cmp
mov
inc
add
lds
push
cmp
adc
cmp
arpl
sub
xchg
xor
jg
cmp
jbe
or
inc
inc
es
mov
sbb
push
sbb
mov
adc
arpl
insl
adc
sub
loope
or
test
and
lea
mov
pop
es
loopne
subb
outsl
inc
lea
and
shll
sbb
or
stc
jbe
outsl
nop
pushl
gs
cltd
movsb
pop
and
cmp
jecxz
fwait
xchg
pop
stc
js
dec
jecxz
lds
add
xor
ret
jno
xchg
cmp
fwait
jl
and
sti
or
ret
cli
mov
mov
mov
arpl
test
inc
fs
adcb
into
ljmp
movaps
shrb
fbstp
pop
pop
sbb
sub
xor
mov
pop
pop
in
mov
nop
popf
cwtl
cmp
pusha
inc
xor
ret
out
les
or
inc
xchg
push
addb
mov
into
xchg
or
add
sub
out
push
add
push
mov
addb
in
dec
shlb
mov
mov
or
mov
call
sub
mov
cmp
mov
sub
mov
xchg
jg
sub
add
push
sbb
in
add
or
or
mov
in
or
adc
enter
sbb
enter
add
and
mov
and
mov
inc
mov
and
add
enter
cmp
cmp
inc
and
fs
push
inc
fs
xchg
jb
and
and
xchg
in
pop
or
sub
xchg
xchg
inc
dec
pusha
insb
in
xchg
arpl
push
cmp
in
enter
sbb
je
fs
jbe
lret
and
push
sbb
adc
cld
xor
xchg
inc
mov
pop
mov
nop
mov
cwtl
test
xchg
pushf
and
mov
sbb
and
mov
in
mov
mov
test
mov
test
shr
xor
loopne
xchg
inc
enter
push
sbb
seto
sar
and
mov
xchg
pop
lock
xchg
sbb
sub
sbb
aam
and
cmp
mov
loopne
and
sbbl
in
xor
enter
shlb
pop
push
add
in
adc
fs
pop
sub
xor
push
sbb
xor
enter
pop
cmp
and
inc
fcomps
in
and
sbb
pusha
clc
inc
inc
push
sbb
andb
push
mov
fmull
lret
adc
shlb
xchg
inc
inc
mov
aam
fdivrs
fs
xchg
fmul
loopne
and
cmp
js
enter
sbb
mov
mov
lret
adc
and
nop
xchg
push
cmp
push
mov
outsl
sub
push
mov
dec
cltd
sub
into
push
test
imul
and
cmp
cld
test
nop
xchg
inc
inc
cwtl
mov
mov
in
adc
inc
enter
cwtl
sbbb
lds
and
dec
and
ret
into
inc
or
dec
dec
xor
enter
pushf
and
mov
sbb
enter
push
sbb
mov
shrb
les
imul
push
int3
lods
rcrb
ret
push
jno
fsubl
aam
cmp
aad
adc
sbb
ss
fdivrl
pop
cmp
fs
and
imul
nop
xchg
inc
and
push
sbb
fs
js
lods
xchg
inc
inc
push
and
and
in
mov
lret
cmp
cmp
sbb
and
jl
mov
inc
nop
dec
in
and
enter
dec
clc
inc
push
cmp
sbb
cmp
nop
xchg
inc
pop
pop
fs
cmp
in
and
mov
aam
hlt
jo
fs
and
je
enter
mov
jb
nop
cmpb
call
cmp
sub
dec
mov
inc
push
and
xor
inc
mov
and
popa
mov
cmp
jo
inc
enter
cmp
dec
sbb
jb
cwtl
dec
enter
pop
loopne
sub
hlt
xor
fldenv
jo
sbb
je
mov
inc
push
and
xchg
js
lret
cmp
inc
fadds
jb
and
ret
and
gs
enter
xchg
test
xchg
test
fs
and
jae
push
inc
push
sbb
pushf
jl
shl
xchg
inc
mov
mov
mov
sbb
mov
and
add
and
jb
in
push
fsub
in
jne
inc
and
in
test
in
sub
sbb
xchg
xchg
inc
push
sbb
cwtl
call
enter
push
movsb
xchg
lods
mov
and
sbb
and
xchg
mov
in
rolb
push
sbb
enter
xor
xchg
inc
rolb
aam
adc
movsb
and
loopne
xchg
fsub
loopne
jnp
mov
popa
xchg
dec
and
sbb
jb
insb
or
mov
sbb
adc
sbb
jo
enter
lock
xchg
arpl
shll
mov
cmp
mov
inc
push
hlt
and
add
cmp
cmp
and
inc
je
add
inc
inc
push
mov
outsb
ret
add
clc
push
xlat
aaa
mov
adc
push
sbb
sbb
push
jnp
inc
fidivs
sbb
jb
push
or
testl
in
repnz
jbe
ljmp
push
cltd
pop
or
cwtl
adc
enter
xchg
sbb
sbbl
clc
xor
jo
enter
xchg
in
xchg
arpl
adc
lock
sbbb
and
inc
lock
orb
int3
in
and
push
sbb
in
addl
and
leave
out
sbb
push
in
cmpl
aam
xorb
xchg
clc
loopne
mov
or
cmp
nop
xchg
inc
inc
push
adc
sbb
fs
xchg
sbb
xchg
inc
psubsb
int3
in
xchg
mov
sbb
inc
xor
mov
test
jae
xchg
ret
lods
mov
pop
rorl
adc
jg
xchg
mov
dec
mov
sbb
daa
mov
insb
test
loope
pop
pop
push
inc
pop
adc
pop
inc
sub
push
aam
aas
or
aad
bound
enter
sahf
outsl
cmp
insl
dec
decl
inc
sbb
jne
push
push
and
test
push
jbe
mov
pop
pop
or
adc
mov
test
mov
or
adcb
shlb
cld
sbb
jp
mov
mov
mov
adc
adc
insb
stos
outsb
aaa
pop
mov
mov
imul
arpl
pop
mov
add
inc
addr16
push
adc
push
add
mov
jnp
jns
xor
push
sbb
jo
push
dec
inc
jg
mov
pop
mov
loopne
bound
js
fs
mov
rorb
inc
iret
jb
divb
shll
stos
cmp
pop
cmp
xchg
imul
or
stos
scas
and
mov
and
dec
or
cmpsb
mov
iret
outsb
adc
fwait
arpl
aas
out
aam
jno
arpl
sub
push
inc
inc
sub
cmp
pusha
pop
add
aas
popa
mov
xchg
dec
lret
arpl
xchg
push
mov
mov
stos
pop
adc
pop
sar
push
xor
sub
fidivl
add
inc
pop
mov
mov
les
dec
andl
stos
nop
or
or
or
jb
dec
adc
push
inc
mov
xchg
push
dec
xor
xchg
add
inc
addb
and
fisttpl
outsl
nop
pusha
or
iret
dec
stos
xchg
add
iret
mov
pop
insl
push
lods
or
jg
insl
mov
pusha
xlat
imul
push
xor
aas
pop
or
xlat
push
rolb
insb
jns
xor
lsl
je
pushl
add
cmpsb
mov
pop
add
or
in
dec
mov
push
xlat
data16
inc
push
push
mov
xchg
dec
push
inc
inc
add
iret
shll
pop
in
insb
call
inc
push
dec
addl
inc
dec
insl
sahf
aas
adc
insb
rclb
outsl
pop
dec
sbb
dec
adc
ja
shll
imul
repz
jbe
xor
outsl
addr16
add
mov
jecxz
loopw
mov
add
adc
dec
jmp
push
adc
cmpsl
xchg
or
ret
push
lods
xchg
imul
mov
sub
test
js
aaa
push
popa
add
nop
test
jae
arpl
dec
cmp
push
sub
jecxz
adc
insb
cmpsl
rorb
xchg
outsl
sbb
aaa
adc
fsubrs
sarb
pop
in
divb
imul
stos
mov
mov
jg
outsb
xorb
inc
xor
ret
in
jg
shll
push
jae
inc
ss
push
lahf
jo,pt
loope
fwait
data16
pop
mov
xlat
addr16
jp
hlt
xor
arpl
inc
pop
fiadds
inc
xchg
pop
pop
adc
aam
or
shll
adc
pop
xor
mov
in
mov
out
push
js
leave
and
inc
dec
arpl
inc
dec
inc
lahf
inc
inc
fistl
jmp
mov
jns
addr16
in
mov
scas
je
pop
stos
bound
outsb
pop
loop
or
inc
mov
out
adc
fs
pop
adc
add
sbb
mov
jo
fbstp
push
and
sub
push
adc
sbb
add
cmp
lods
mov
cmp
outsb
jecxz
lahf
push
aad
push
daa
aas
xchg
je
xchg
sahf
inc
popa
xchg
dec
or
push
pop
imul
add
leave
push
arpl
inc
out
inc
nop
adc
ja
inc
adc
addr16
push
mov
inc
jae
pusha
mov
jb
and
in
xchg
and
push
bound
inc
sbb
cmp
mov
push
push
pop
mov
inc
jne
dec
pop
sbb
shrb
mov
inc
in
mov
insb
and
and
push
add
adc
push
or
pop
mov
pusha
mov
addr16
pop
rcrb
adc
jl
jae
insl
jmp
ljmp
addb
call
add
or
sbb
inc
pop
outsl
repz
push
lods
test
pop
inc
mov
mov
jb
add
jae
ja
push
xchg
jbe
daa
xlat
xor
movsl
mov
pop
sbb
rorl
jo
mov
rorl
stos
pop
inc
sub
adc
inc
jae
loope
add
inc
cmp
roll
imul
inc
sbb
outsb
aad
add
scas
shll
pop
inc
ret
stos
dec
pop
jg
scas
push
pop
mov
fisubl
sbb
aaa
jp
and
sbbl
mov
faddl
daa
push
data16
jg
fistps
mov
mov
outsb
aas
mov
mov
add
adc
aaa
push
sub
ja
ljmp
inc
scas
test
push
jae
aas
or
add
inc
add
sbb
xchg
or
push
jae
int
dec
jo
dec
or
cs
inc
lock
outsl
pop
sub
xor
scas
or
xchg
addb
adc
pop
in
pop
xchg
mov
mov
pusha
addl
pop
iret
cwtl
cmp
mov
pop
and
aaa
aas
out
aas
or
stos
pop
or
outsl
or
addr16
mov
dec
push
mov
dec
lahf
enter
dec
outsl
push
push
mov
pop
adc
mov
add
xor
inc
shlb
adc
scas
jae
inc
pop
or
mov
push
cmp
mov
pop
test
setns
mov
fistl
fsubp
jecxz
cs
sub
sub
inc
int3
pop
mov
scas
pushf
dec
xor
mov
push
xchg
add
xchg
or
pop
sbb
push
outsl
push
pop
test
iret
xor
pop
test
lahf
daa
insb
sbb
and
aaa
test
aaa
mov
jns
inc
and
inc
push
dec
pop
je
fbstp
xchg
inc
lods
adc
xchg
mov
adc
push
mov
add
mov
and
outsl
mov
adc
mov
daa
pusha
or
movsb
adc
inc
cmp
xchg
inc
pop
lock
fcoms
adc
bound
insl
push
pop
pop
mov
das
vmread
aaa
dec
jne
and
pop
stos
mov
enter
sti
imul
filds
or
sbb
rolb
and
mov
push
inc
pop
mov
inc
pop
iret
adc
or
lea
mov
xor
ja
inc
or
adc
mov
mov
rolb
ja
cmp
mov
sbb
mov
sbb
iret
sbb
fstpt
bound
sub
out
inc
xor
loopne
out
and
pop
xor
and
xor
push
push
pop
cmp
inc
shrl
ret
adc
test
fwait
adc
pop
fcompl
adc
out
pop
fcoms
lahf
mov
xor
cmp
inc
pop
cmp
xor
or
or
ss
xor
sub
aaa
sub
fisubs
jle
out
cmpsb
push
sub
add
push
leave
adc
scas
adc
lds
jg
addr16
and
and
dec
sub
inc
lahf
pusha
inc
xor
setg
filds
push
push
or
mov
push
mov
dec
sbbl
dec
or
jo
sub
adcl
in
or
push
xor
inc
push
rol
add
outsl
dec
test
add
pop
jnp
in
mov
sbb
aaa
xor
pop
leave
mov
or
pop
insl
dec
inc
jae
add
xor
les
sahf
push
mov
or
pop
addr16
sbb
inc
and
cmp
lret
inc
xor
adc
arpl
outsl
or
cmp
add
repz
sbbb
and
jno
or
test
shl
push
adc
xchg
pop
mov
or
pop
adc
push
iret
shll
out
jbe
add
inc
or
adc
iret
push
in
popa
aas
inc
aas
fs
push
fcmovnb
xchg
xlat
out
call
mov
push
cmp
notl
xchg
rorb
lahf
lods
pop
and
outsl
xchg
push
and
ja
aaa
mov
pop
xchg
rolb
repz
outsl
xor
push
xor
pop
dec
stos
aaa
or
push
dec
inc
js
pop
xor
mov
lods
mov
xor
cmp
cmpsl
cmpsb
fs
push
aaa
lret
push
or
inc
outsl
inc
dec
sub
lods
in
stos
fwait
dec
or
and
xchg
cmc
cmp
pop
sbb
add
and
inc
fdivr
in
dec
push
leave
adc
or
push
mov
or
adc
aam
mov
jle
pushf
mov
test
fstpl
mov
sbb
sbb
sbb
xor
xor
adc
and
xor
sbb
sub
and
and
xor
cmp
and
and
dec
dec
and
and
push
push
pop
pop
and
push
inc
inc
fs
js
inc
inc
inc
jl
test
mov
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
shl
pop
fs
and
loopne
xchg
xchg
xchg
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
cmp
inc
xchg
xchg
xchg
lret
hlt
sbb
rcl
xchg
xchg
xchg
xchg
fcomp
loopne
fists
lock
and
pop
pusha
inc
inc
inc
inc
fs
inc
inc
addb
nop
xchg
cwtl
pushf
inc
inc
inc
inc
dec
dec
movsb
test
inc
inc
inc
lods
mov
mov
mov
inc
inc
inc
enter
inc
inc
inc
inc
fcomp
loopne
inc
inc
cs
and
xor
inc
inc
inc
inc
sub
cmp
mov
inc
dec
outsl
push
push
pop
mov
mov
je
pushf
mov
xor
xor
push
push
xor
xor
mov
xor
enter
pushf
test
enter
xor
sub
enter
je
insb
js
enter
inc
sbb
and
and
test
and
and
mov
mov
and
enter
mov
mov
test
xor
fwait
or
xor
xor
xor
xor
xor
xor
enter
xor
rcl
fcomp
jb
xor
loopne
add
or
xor
xor
adc
enter
sbb
outsl
in
call
in
hlt
and
roll
insl
mov
or
pushf
sti
add
or
xor
adc
sbb
add
pop
jle
clc
cld
add
adc
sbb
and
clc
cld
stos
leave
dec
and
cmp
mov
fs
push
fmuls
and
and
and
sbb
mov
es
sub
lods
popa
rcr
xchg
or
or
push
mov
mov
add
lar
push
jp
inc
lods
inc
rcrl
ds
mov
lahf
jecxz
adc
and
jge
arpl
push
push
inc
movb
add
add
xor
rcrl
in
add
mov
call
add
faddl
sbbl
pop
add
pop
fsubs
jns
daa
sbb
int3
int3
xchg
xchg
dec
inc
or
adc
and
xchg
cmp
les
xor
leave
enter
cmp
pop
xor
fs
or
xchg
sarb
ret
or
cltd
dec
mov
imul
popa
out
popa
dec
div
mov
je
rcll
pop
mov
mov
xor
add
or
cld
mov
and
push
lods
xchg
mov
mov
imul
xor
adc
pop
test
dec
lcall
sub
inc
popa
imull
out
int3
js
push
addb
fs
clc
pop
mov
or
movsl
lret
clc
insb
sbb
add
je
sub
cmp
add
clc
dec
adc
mov
lcall
popf
add
adc
xchg
sub
sub
and
push
negl
or
aaa
xor
ss
fdivs
xor
adc
sub
sub
bound
dec
jbe
or
sbb
icebp
add
faddl
jae
mov
jmp
jmp
outsb
loope
push
insl
jge
adc
inc
jae
aam
add
jmp
leave
adc
sbb
adc
add
mov
nop
adc
aaa
out
pusha
mov
cmp
sub
and
mov
aaa
xor
lret
add
adc
cwtl
gs
test
roll
xchg
push
adc
pop
add
jmp
lock
inc
je
or
mov
adc
or
lds
mov
xchg
in
aam
add
or
in
nop
out
mov
xor
sbb
fs
xor
outsb
out
mov
xor
outsl
push
xor
push
push
jae
cmp
outsb
pushf
aaa
dec
clc
sbb
inc
sbb
add
das
roll
outsl
or
cmp
dec
mov
xor
push
incl
movd
mov
shll
cltd
dec
cmp
xor
into
or
dec
push
cwtl
mov
adc
mov
xchg
xchg
pop
xor
or
or
add
and
ds
add
gs
sbb
sbb
ss
daa
push
loopne
adc
lret
push
dec
ds
nop
push
popa
add
jo
pop
sbb
push
js
fdivl
pushl
fists
ret
or
js
mov
sub
and
and
push
adc
and
mov
xchg
add
push
movl
jp
adc
aaa
repz
into
and
sbb
movsl
cmp
insb
cmp
aaa
inc
mov
mov
shlb
out
push
or
adc
inc
dec
imul
ss
outsb
sub
fwait
das
ret
ret
push
int3
or
add
ss
xor
fcoms
add
dec
aaa
lahf
and
inc
imul
jno
mov
movsb
sub
jo
xor
xchg
fidivl
add
cwtl
push
hlt
xchg
push
lret
aaa
sti
push
mov
das
mov
es
adc
les
pop
into
cld
fcoml
dec
adc
add
call
decl
mov
fsubs
data16
incl
jmp
mov
test
xor
mov
shlb
jns
movsb
lret
popa
sbb
gs
loopne
into
mov
or
testl
int3
adc
cmp
cmp
js
nop
sbb
or
neg
rcll
and
mov
inc
cmp
jno
lret
sbb
add
or
sub
add
fistl
call
inc
bound
jno
add
rclb
ret
or
inc
pusha
pop
mov
sbbl
popf
push
pop
in
idivb
sub
inc
dec
xchg
xorl
leave
jnp
inc
jl
inc
or
pop
or
fildl
and
mov
nop
mov
and
pop
pop
rcrb
repnz
sbb
lea
pop
xacquire
or
rolb
sbb
mov
xchg
xchg
xchg
xchg
inc
data16
iret
out
adc
xchg
pop
pop
sub
imul
lcall
adcl
dec
shrb
pop
pop
adc
sub
pop
fsts
cmp
pop
pop
ret
mov
jmp
xor
adc
sbb
aam
out
leave
aad
cmpsl
mov
outsb
xor
aam
mov
and
pop
imul
inc
nop
scas
xor
sub
adc
rorb
bound
out
sbb
sbb
push
sub
and
dec
push
aad
in
cmp
sahf
stc
add
mov
pop
push
ljmp
mov
and
push
in
inc
or
jg
add
icebp
push
dec
mov
pop
in
cmp
pop
dec
sub
xchg
cmp
fs
sbb
xchg
dec
pop
dec
add
imul
pop
pop
add
dec
cmp
call
lea
mov
notl
popf
mov
cmpsl
pusha
adc
mov
je
and
push
inc
dec
sub
sbb
repnz
pop
xor
inc
add
cmpsl
in
add
lcall
mov
sbb
outsl
push
adc
or
mov
pop
inc
int
pusha
add
push
add
daa
dec
sbb
daa
sub
mov
loope
sbb
dec
push
add
insb
repnz
xchg
inc
xchg
fwait
or
xor
cmp
push
call
or
pop
xchg
add
add
and
or
stc
sub
mov
xchg
adc
add
insl
in
xchg
sahf
and
dec
lahf
orb
leave
leave
leave
mov
dec
shlb
lds
add
movsb
xchg
add
mov
nop
imul
imul
and
daa
jns
repz
jmp
rcrb
mov
loop
repz
scas
pusha
xchg
add
insl
mov
push
cli
lret
add
xorb
mov
inc
cltd
inc
adc
enter
sub
pop
inc
cmpl
mov
lds
and
or
inc
scas
cld
sbb
lods
stos
ret
add
cmp
orl
adc
sahf
pop
lds
call
imul
adc
xchg
pusha
sub
add
inc
push
adc
or
jbe
mov
push
add
das
mov
add
xchg
jecxz
mov
outsb
lahf
sub
and
push
unpcklps
pmulhuw
push
or
repnz
in
cld
scas
bound
sbb
or
push
mov
xor
xchg
ss
jmp
into
ja
int3
push
jl
push
call
mov
jae
pop
or
sbb
add
add
and
imul
xchg
scas
sbb
movsl
cld
ret
jnp
and
clc
dec
outsb
jl
aaa
push
mov
inc
jns
out
addb
dec
xchg
xor
sub
sti
and
adc
xchg
rolb
movsb
dec
inc
adc
mov
iret
shll
dec
popa
jns
mov
aam
push
lahf
mov
rol
icebp
jge
orb
fsubl
dec
popa
cmp
mov
dec
aas
add
pushf
mov
add
sub
outsl
lods
adc
popf
imul
pop
inc
mov
push
sub
mov
pop
or
sbb
or
inc
inc
and
xchg
notb
pop
orps
ret
dec
fidivs
adc
or
popa
pop
repnz
test
sub
push
adc
cmp
in
xor
xchg
leave
jno
out
arpl
dec
cmp
pop
inc
mov
mov
adc
mov
jae
sbb
fdivl
cmpsb
gs
or
jle
jmp
xchg
xchg
je
movb
adc
out
xchg
ja
stos
or
movl
psubsw
push
adc
jmp
or
shlw
test
mov
pushw
int3
add
add
and
adc
push
loopne
mov
das
xchg
fists
scas
mov
pop
loopne
pusha
loop
xchg
jne
pop
ss
push
mov
sub
out
jns
sub
push
cwtl
mov
rolb
cwtl
add
cmp
pushf
stos
mov
subl
add
add
subl
push
hlt
paddd
movups
cs
in
test
mov
inc
mov
test
or
mov
les
in
std
stos
xchg
add
mov
bound
and
pop
sub
dec
add
aam
jl
add
mov
inc
mov
scas
fsubl
lock
arpl
pop
mov
insb
les
push
je
pop
add
adc
or
loopne
xchg
test
add
and
adc
or
add
push
aas
adcb
imul
and
subb
and
outsb
cmpl
add
fstpl
stos
or
inc
imul
add
and
sbb
xchg
scas
add
outsb
filds
xor
push
daa
jmp
dec
pop
es
aam
inc
daa
rolb
sub
add
mov
stos
cmpl
or
xor
add
jmp
lea
lods
dec
mov
xor
add
xchg
mov
xor
add
inc
out
pop
insb
xchg
or
shll
popa
add
push
daa
pop
cli
std
std
sub
or
sub
dec
pop
cld
pop
movsb
xor
dec
sub
mov
daa
dec
das
pop
lods
out
xchg
daa
pop
fs
dec
enter
xor
in
pushf
lods
fs
xlat
pop
pop
xor
xlat
mov
insb
and
scas
fistpll
ds
sub
cmp
mov
pop
ret
pop
xorb
jae
pop
xor
fnstenv
adc
add
scas
fs
jbe
or
fs
xchg
mov
inc
fs
add
rclb
fcompl
dec
inc
xor
dec
cmp
sbb
lock
gs
cmp
xor
lahf
add
xor
xor
popl
push
inc
push
xchg
xchg
inc
enter
push
xor
cmp
push
xchg
je
pusha
femms
and
cmp
mov
cmp
xchg
mov
jb
sub
xor
push
insb
and
sub
int3
mov
loopne
andb
ds
push
pop
in
jae
push
imul
repnz
cmp
ror
inc
or
add
cltd
rolb
or
push
inc
aam
add
xor
add
push
inc
push
xchg
add
cmp
jge
add
mov
lea
das
mov
rcll
call
aad
cmp
cmp
stos
mov
sub
inc
imul
fisubl
or
lea
pop
cwtl
dec
add
and
shlb
adc
pop
ret
loope
push
pop
xor
dec
jmp
loope
pop
mov
lea
aas
sub
enter
dec
jl
adc
mov
mov
dec
or
stos
sbb
xchg
add
pop
pushl
testl
int3
ficoms
mov
xlat
and
mov
mov
faddl
mov
cltd
and
push
enter
lds
inc
incl
adc
inc
or
rcr
add
xchg
aad
dec
ja
and
adc
and
fstpl
daa
inc
pop
push
inc
xor
enter
loopne
or
enter
inc
jo
or
or
in
dec
insl
popa
mov
lock
dec
pop
roll
mov
daa
mov
lock
lahf
jl
icebp
lds
cmc
cmc
mov
popa
cmpsl
and
ret
mov
stc
add
mov
add
mov
and
pop
push
repz
or
fadds
pop
fnstsw
adc
pop
push
rclb
mov
je
rolb
aad
xor
dec
sub
frstor
cmp
sbb
enter
fistps
push
aaa
test
pop
sbb
add
lods
imul
sub
sbb
jb
out
cltd
ret
dec
dec
fdivrl
loop
fistl
mov
dec
pop
sbb
xchg
shlb
nop
fimull
iret
pop
xor
mov
push
mov
inc
enter
movsl
shr
rorl
fsubrs
pop
cmp
jo
pushf
pop
jl
or
sbb
inc
mov
pop
inc
inc
nop
add
xor
pop
pop
cmp
daa
dec
mov
pop
ja
xlat
cmp
inc
add
inc
or
lock
cld
sub
addb
inc
xor
lock
pop
push
xor
mov
and
cmp
addb
xor
mov
push
mov
push
push
sub
ja
push
xor
pop
cmp
and
cs
dec
and
inc
pop
sub
add
pop
push
mov
adc
iret
pop
xor
loopne
pop
int3
push
hlt
inc
mov
mov
mov
mov
xorl
pop
cmp
pop
push
test
pop
nop
mov
dec
adc
sub
pop
xor
pop
and
mov
mov
inc
mov
inc
pusha
mov
pusha
adc
and
xor
push
scas
pop
adc
and
jne
add
shrb
rolb
or
pusha
fmulp
and
xchg
shlb
sub
lea
call
jnp
sbb
push
push
push
inc
fs
es
pop
sbb
lahf
rcrl
inc
pop
or
jnp
leave
shr
and
xor
cmpsb
and
insl
or
xor
adc
jl
adc
leave
add
iret
mov
sub
movb
or
lods
sub
imul
mov
mov
jae
in
inc
inc
jmp
sub
insl
dec
pop
xchg
xor
rcl
out
mov
xchg
inc
pop
and
je
pop
sub
movsb
test
repnz
and
xor
rorb
or
adc
outsb
test
mov
cmp
int3
mov
adc
xchg
inc
add
in
adc
rolb
sub
add
mov
dec
fcmovne
cmp
cmp
dec
jg
sbb
and
mov
jmp
add
inc
push
mov
lahf
add
insb
notl
sub
add
pop
fisttpll
xchg
and
pusha
mov
test
fs
test
jo
jnp
cld
cmp
scas
push
xchg
fcoms
dec
in
mov
xlat
xchg
and
mov
in
dec
fdivl
aas
xchg
inc
ds
fsubs
or
fdivrl
xor
test
push
fwait
icebp
mov
and
jmp
sub
xor
and
or
out
sub
mov
xor
sbb
ds
jmp
fs
flds
xor
push
sub
cmpl
inc
add
push
xchg
pop
fwait
movsb
mov
push
fs
stos
add
nop
adc
mov
dec
push
xor
adc
xor
mov
shll
int3
add
sub
sub
mov
add
lahf
jae
jo
roll
mov
mov
inc
cmc
call
xchg
test
cmpsl
or
xor
mov
xchg
cmp
and
sarb
inc
jg
outsb
mov
sub
sahf
mov
adc
js
dec
loope
pop
xchg
mov
dec
fcomps
cltd
mul
cmp
mov
insl
xor
push
or
and
insb
xor
inc
push
push
fmull
xchg
inc
adc
sbb
mov
jne
or
sub
or
lahf
sub
jb
dec
jmp
push
inc
sar
push
scas
adc
push
dec
adc
push
lret
or
fadds
pop
aaa
inc
lods
xchg
add
test
xor
leave
subb
inc
arpl
pushf
and
mov
push
and
xchg
sub
leave
push
mov
push
test
push
aas
or
jne
dec
xchg
mov
sbb
mov
addr16
daa
dec
inc
adc
push
inc
lea
xchg
sbb
adc
out
adc
pop
cmpsb
std
jg
sub
cmp
loopne
mov
sbb
inc
push
push
inc
fs
filds
les
test
cmp
mov
and
adc
mov
addb
dec
cmp
rclb
daa
mov
jns
or
push
dec
or
pop
mov
jmp
push
icebp
push
or
hlt
xchg
jno
nop
pop
sub
fnstenv
fldl
push
jge
test
out
lds
out
int3
dec
leave
dec
add
mov
add
shlb
shrl
shll
lods
adcb
xchg
cmp
je
test
out
xchg
arpl
xor
adc
fcoms
cwtl
movsb
cmp
jne
xor
xchg
insl
xchg
push
or
insb
dec
and
add
cmp
jo
inc
pushf
sarb
push
mov
xlat
or
pusha
aas
test
jnp
jmp
roll
aaa
dec
and
jnp
mov
jecxz
sti
aam
mov
xchg
fldl
add
sbb
or
inc
add
adc
add
movsl
call
fidivrl
jnp
pop
int
sbb
popf
and
es
notb
adc
andl
ret
mov
and
add
add
inc
or
in
xchg
mov
push
jecxz
fsts
out
lock
out
movsl
pop
push
push
push
imul
jecxz
es
pop
sti
cwtl
adc
and
and
mov
clc
sbb
scas
xchg
mulb
and
and
in
fwait
jge
leave
dec
or
or
push
mov
outsl
in
js
xor
jnp
mov
faddl
stos
dec
das
je
loope
in
mov
pop
movsb
xor
clc
clc
dec
gs
cmp
dec
clc
ffree
dec
pushf
dec
repnz
std
sar
clc
aam
test
sub
ret
and
pop
lcall
add
iret
inc
or
mov
pop
fists
and
inc
inc
jg
sub
sub
cmp
mov
sbb
xor
or
iret
in
insb
sub
push
in
pop
mov
and
lahf
push
mov
mov
setl
jne
adc
xchg
mov
sub
call
push
push
in
cmp
jmp
inc
or
and
shl
or
push
pop
popa
mov
in
cmp
jg
mov
jnp
loop
mov
push
jae
adc
cmp
jp
sbb
mov
gs
mov
adc
hlt
movsl
cwtl
xchg
cmp
sub
xor
mov
les
or
cmpl
mov
pop
ret
mov
jne
mov
dec
je
add
jmp
mov
fisubs
jo
push
insb
into
inc
add
push
loope
aaa
push
jmp
mov
mov
fs
xor
in
jl
sub
push
adc
push
mov
push
jmp
loop
shll
movsl
call
inc
push
xchg
adc
push
sub
popa
xor
inc
lds
enter
adc
fmuls
mov
clc
and
out
aad
dec
jne
jge
lds
stc
pusha
dec
xchg
int3
xor
adc
and
ret
lods
bound
push
nop
xor
ret
cmc
aad
loop
mov
inc
ds
dec
loopne
jo
cmp
cmp
dec
push
or
imul
int
adc
inc
cmp
dec
rcll
movb
dec
xor
lahf
sbb
insl
add
iret
xor
sub
add
and
out
hlt
mov
or
dec
jl
mov
push
push
imull
mov
mov
sub
lea
adc
ss
or
loope
popa
das
andl
outsb
leave
cmp
xlat
dec
pop
fldenv
pop
dec
loopne
outsl
dec
pop
jb
mov
jmp
sub
movb
pop
sub
lea
adc
jo
cmp
lock
call
adc
and
inc
cmpl
sbb
add
push
add
sub
andnps
out
fdivs
rolb
scas
mov
and
mov
fldcw
fcomp
aaa
or
and
inc
fisubl
das
shll
push
fsubrs
movb
lret
std
mov
and
mov
call
mov
and
sub
mov
sbb
sub
jmp
mov
loopne
inc
or
jne
dec
aas
inc
push
adc
dec
mov
sbbb
dec
aad
faddl
leave
xor
bound
xor
and
inc
and
mov
push
lock
je
sub
add
je
or
pop
popf
mov
daa
xchg
int3
or
sub
xor
hlt
scas
and
jnp
addb
fistl
mov
lods
sub
mov
xor
and
xchg
jecxz
pop
loope
imul
test
inc
adc
mov
and
push
adc
out
lret
sbb
jmp
js
insb
push
adc
adc
bound
leave
and
js
test
ret
jl
add
push
push
mov
fs
negb
call
nop
pop
adc
shlb
jge
sti
cmp
add
ss
add
and
inc
fcmovb
or
arpl
std
ficomps
or
clc
mov
add
mov
imul
gs
inc
dec
lcall
orb
sub
pop
adc
int3
sub
inc
cwtl
test
inc
adc
dec
shl
mov
adc
ret
or
les
and
jo
mov
out
sbb
lret
loopne
cmp
aaa
or
inc
add
inc
xchg
inc
jl
jnp
mov
fidivs
enter
rcrb
loope
or
push
mov
jo
or
iret
push
cltd
and
adc
in
adc
mov
push
sbb
pop
pop
mov
adc
push
lcall
and
push
rorl
inc
ret
push
sbb
pop
sub
mov
mov
imul
adc
add
and
push
imul
loopne
ss
adc
test
add
insb
das
adc
push
sub
add
cmp
pop
popa
sub
push
or
jb
cmp
mov
push
jno
push
sub
mov
mov
adc
sub
lret
cvtps2pd
dec
popa
stc
push
inc
sbbb
pushf
push
sbb
das
sub
cmp
fwait
push
mov
xchg
adc
and
movsl
cmp
add
int
test
call
mov
mov
loop
inc
cs
mov
inc
sbb
dec
cmc
ss
mov
dec
ret
and
gs
pop
mov
addr16
adc
and
call
jb
scas
jmp
xor
mov
cmp
addl
ja
adc
insb
mov
or
pop
jmp
inc
sbb
js
sub
push
lock
subl
das
push
adc
daa
js
sbb
clc
push
ja
loop
jns
xchg
sysret
add
or
mov
sbb
cmpb
push
dec
push
push
and
or
stc
add
mov
pusha
xchg
and
mov
popa
pop
add
fucom
xor
dec
in
mov
in
push
xor
mov
sub
loope
loope
insl
sbb
js
mov
xorb
sbb
test
and
xchg
dec
add
in
or
sbb
inc
cmpsb
xchg
lea
mov
in
aas
push
fcoml
push
sbb
in
mov
incl
shl
sti
in
sahf
add
mov
into
jne
dec
cmp
imul
rorl
adc
xor
push
repnz
enter
adc
popa
sbbb
mov
dec
sbb
insl
nop
sub
mov
and
mov
pop
add
push
add
inc
cld
jmp
mov
daa
ljmp
outsl
popa
out
das
call
pop
inc
push
sub
mov
les
popa
imul
push
shll
daa
and
sbb
inc
mov
aaa
daa
and
daa
inc
add
push
repnz
add
add
daa
sbb
mov
inc
inc
lock
pop
mov
test
inc
ljmp
mov
mov
gs
add
lahf
jns
cmp
add
dec
pusha
ja
loopne
sbb
adc
ficoml
adc
sub
test
stos
orl
cmp
mov
pop
adc
or
inc
xchg
movsl
movsb
js
aas
adc
mov
cli
out
adc
cmp
stos
push
or
jb
sti
xorl
inc
imulb
daa
add
xorl
loopne
jecxz
out
movb
sub
mov
push
adc
push
push
adc
push
into
out
xor
or
and
fsub
das
sbb
out
mov
xor
dec
fwait
jo
mov
and
mov
pusha
sbb
mov
fcmovnb
xor
hlt
add
and
mov
adc
mov
lcall
xlat
adc
or
inc
jne
mov
mov
outsb
daa
ljmp
adc
ja
or
outsl
jae
push
add
or
xor
xlat
jne
push
pop
fcomps
sub
rcl
daa
sub
or
dec
push
iret
or
sbbl
les
repnz
aaa
or
dec
or
xchg
add
cld
or
out
ret
mov
dec
popf
cmp
add
add
cmc
mov
or
cmp
lcall
popf
sub
xchg
fdivr
and
cs
mov
sbb
fdivrs
sbb
rorl
inc
jns
and
ljmp
inc
push
add
add
sbb
dec
mov
inc
mov
mov
test
sbb
test
and
add
fsubrl
mov
cmp
imul
mov
sub
push
or
sub
lret
mov
jb
or
pop
mov
insl
lods
in
nop
cmp
adc
clc
sub
and
sbb
xor
sbb
clc
mov
xchg
add
sbb
mov
aad
jmp
adc
push
cmp
mov
push
and
call
subb
push
test
movsb
push
dec
sub
sbb
push
aam
inc
sub
fs
or
sub
mov
add
lahf
repnz
cmp
bnd
aas
inc
jno
inc
inc
push
cmp
dec
cmp
popa
dec
push
xchg
movsl
jg
or
xor
inc
out
xor
jp
dec
inc
push
gs
xor
mov
pop
and
pop
mov
sub
add
xchg
add
add
and
add
push
push
mov
xor
mov
cs
loopne
icebp
and
jno
cmpb
in
dec
xor
and
lret
scas
sub
lret
mov
test
sbbb
or
popa
xlat
jne
mov
daa
imulb
sub
js
pop
pop
cmp
push
insb
ja
xor
cmp
nop
adc
fmuls
stos
scas
xor
jmp
mov
mov
pusha
xchg
popf
jmp
sbb
arpl
mov
enter
cmp
and
scas
inc
stos
push
mov
adc
push
daa
push
push
or
or
inc
xchg
test
out
daa
loop
daa
addr16
or
lret
xchg
sub
les
ret
bound
or
add
cltd
mov
std
pop
xchg
add
jns
cmpsl
jns
sub
add
add
add
push
sahf
lds
push
mov
fs
sbb
pop
add
js
xchg
mov
nop
pop
inc
sysexit
push
lcall
and
in
imul
jae
or
adc
or
es
mov
dec
daa
xor
in
push
decl
imul
xchg
negl
lret
out
push
push
xor
and
es
shl
add
lret
push
add
insb
addr16
cmpsl
xor
mov
cmovl
cmp
ficoml
je
dec
sub
movsb
aad
cmp
or
lock
lret
movsl
add
nop
das
sbb
jmp
adc
mov
rcl
inc
mov
lds
push
mov
mov
shrb
popa
arpl
insl
lock
or
mov
dec
mov
addr16
inc
addr16
sub
mov
push
dec
push
cld
outsl
mov
xor
imul
sub
cmp
aaa
in
jmp
and
cli
cltd
insl
add
sarb
fmull
mov
or
mov
inc
and
add
pop
xchg
test
mov
out
push
add
sbb
scas
inc
movsb
adc
scas
cmp
xchg
scas
push
adc
xorl
push
push
mov
add
jg
nop
push
dec
cltd
clc
pop
insb
adc
pop
mov
xor
pop
xor
cli
in
push
dec
loopne
fdiv
jns
cmp
stc
mov
mov
add
int3
stc
cmpsb
sbb
std
inc
call
mov
lods
arpl
enter
clc
mov
and
or
iret
dec
jmp
les
and
sub
sub
out
jae
popa
sbb
enter
push
push
clts
dec
rolb
hlt
negl
out
or
int3
dec
enter
retw
cmp
dec
mov
andb
and
rcl
insl
mov
pop
xchg
bound
mov
addl
stc
imul
adc
into
pop
inc
cld
jp
push
inc
or
dec
jne
push
arpl
xchg
adc
mov
cmp
jecxz
inc
dec
pop
or
add
shll
lods
mov
movsb
xor
lahf
cmp
push
and
sbb
push
xchg
add
lods
xor
push
inc
add
and
jns
cld
push
je
dec
or
addb
sbb
pop
mov
stc
add
xor
aas
cmp
pusha
ljmp
jge
insl
dec
out
hlt
decl
shll
adc
xchg
push
push
or
das
xor
into
mov
fwait
push
add
les
or
or
fadds
movsl
xchg
jnp
mov
cmpxchg
xor
stos
lea
in
mov
fisubl
mov
fidivs
insl
adc
fisttps
sbb
jo
cltd
movsb
inc
rcrb
inc
pop
xor
pop
add
jge
pop
add
cld
jmp
push
mov
dec
adc
ret
pop
out
out
in
mov
das
push
adc
cs
rcrb
addr16
enter
push
sbb
inc
xchg
fistpll
cld
rclb
push
mov
stos
or
mov
sbb
sbb
xor
xchg
filds
test
lods
push
mov
arpl
pop
cmp
xchg
adc
aam
xchg
lods
inc
adc
fisubrl
xchg
or
xchg
pop
sbb
es
sahf
cmpsb
xor
mov
inc
push
aam
lock
mov
shlb
or
bound
aaa
sbb
nop
pushf
ret
out
in
sub
lock
pusha
adc
lret
sahf
add
and
and
fsub
add
jb
outsl
insb
and
dec
call
dec
ret
daa
xchg
ret
jo
arpl
clc
sbb
test
cmpsb
nop
push
sub
jnp
push
rol
or
adc
sbb
dec
add
add
xor
inc
ret
ja
xor
push
enter
push
add
add
enter
ja
xchg
shll
jo
pop
and
xchg
add
jle
loopne
dec
add
add
xor
inc
ret
ja
lods
xchg
push
enter
loopne
and
enter
pop
mov
lock
add
mov
mov
cmp
inc
mov
nop
inc
shrl
xlat
out
cmp
enter
pop
add
push
lds
rclb
cmp
push
mov
enter
add
fcmovb
sbb
adc
inc
push
inc
add
add
test
les
dec
movsl
rorb
pop
pop
mov
or
es
jbe
pop
or
adc
int3
lods
sbb
push
in
pushf
ss
je
or
add
and
sub
or
or
push
sbb
add
mov
mov
xchg
xchg
push
xchg
sbbb
add
push
shlb
shr
sbb
pop
mov
sbb
jp
cld
cmc
sbb
push
cmp
aam
hlt
call
pop
mov
or
mov
insb
jl
dec
sbb
inc
xchg
push
adc
ja
xchg
pop
aaa
and
pop
pusha
inc
jo
sbb
dec
push
outsl
cmpsl
jmp
sub
mov
cmpsl
in
push
and
mov
sbb
or
pop
and
outsl
mov
aaa
push
sub
push
cmp
lock
push
push
cmp
jae
nop
je
pop
data16
or
push
leave
sub
or
xlat
or
jo
subb
mov
sbb
mov
sub
sub
xor
movsb
xor
push
or
xchg
add
insl
ja
sbb
xor
sbb
inc
cmp
adc
dec
pop
test
add
nop
sub
test
or
fildll
ret
and
or
xchg
push
sbb
cld
insb
ds
jns
or
or
xchg
sahf
sbb
and
inc
mov
or
and
mov
xor
dec
fisttpl
int
sub
sub
jle
in
cs
adc
adc
fwait
insb
mov
popf
cmp
push
sbb
inc
cmp
fstpt
xor
sub
xor
div
fsubrl
fwait
adc
push
mov
cmp
cwtl
sahf
es
dec
lods
adc
cmp
mov
inc
or
in
jo
mov
cli
adc
sub
and
cmp
add
sub
cmpsl
xchg
mov
or
or
inc
iret
sti
sti
lods
enter
push
pop
and
sbb
std
movsb
ss
ss
out
dec
push
mov
nop
dec
dec
mov
sti
inc
jo
fs
xchg
pop
sbb
jmp
out
sbb
jmp
add
shrb
cwtl
xor
scas
mov
imull
test
enter
adc
dec
sbb
cmpsl
xor
rcrb
lock
divb
pop
pusha
lret
and
and
mov
clc
cmp
shrb
adc
push
gs
adc
jle
sbb
or
jge
inc
push
ss
dec
push
mov
fsts
decb
adc
add
imul
add
or
sub
xchg
dec
add
shrl
ud2
dec
pop
lea
ficoml
adc
push
push
or
push
pop
add
and
inc
jae
gs
movb
aam
mov
and
push
push
int3
inc
popl
test
stos
inc
into
pop
mov
xchg
cld
push
push
mov
pop
lock
pusha
sbb
leave
imul
add
mov
and
mov
add
sbb
sbb
sbb
add
arpl
xchg
mov
adc
jge
mov
arpl
pop
xchg
sbb
and
mov
inc
in
pop
insb
and
mov
pop
jl
outsb
pop
loop
sbb
pop
push
sbb
jnp
into
mov
jo
xchg
jo
adc
out
adc
mov
add
sub
sbb
pop
iret
icebp
pop
rclb
data16
push
sbb
inc
ret
shll
loop
push
adc
daa
add
adc
adc
ja
sbb
or
mov
or
int
testl
pop
and
pop
iret
jns
test
push
pop
pop
mov
add
repnz
push
adc
and
bound
pusha
xchg
and
pop
or
cmp
lahf
nop
jae
int3
mov
inc
ret
movsb
lret
adc
push
xchg
fs
daa
pop
pusha
xchg
lea
fldenv
push
add
sub
pop
leave
ret
mov
mov
lret
xor
in
ret
arpl
pop
inc
or
leave
hlt
pop
ret
pop
push
jb
rcll
sbb
in
pop
sbb
cmpsb
dec
push
aaa
mov
adc
incl
lea
or
ret
insb
andb
inc
aas
lahf
or
push
repnz
mov
dec
push
mov
push
mov
sub
add
mov
or
mov
dec
fldl2t
push
push
push
adc
add
and
subl
mov
xor
inc
cmpsb
stos
filds
gs
pop
cwtl
adc
inc
inc
xor
xchg
dec
dec
inc
dec
xor
bound
jae
pop
insb
pop
xor
jae
lcall
adc
nop
cmp
add
rclb
push
mov
les
pop
or
call
sub
das
xchg
outsb
add
or
rorl
and
xorl
cltd
adc
add
inc
mov
iret
loopne
and
add
sub
notl
xor
adc
inc
sub
jb
mov
and
lods
xor
ljmp
aas
sbb
mov
lahf
jae
push
loop
or
mov
aas
adc
insb
pop
in
js
adc
mov
adc
loopne
or
fwait
inc
or
fldenv
inc
loopne
jp
je
fdivrl
sbb
push
push
and
or
push
adc
sbb
lods
movsb
xor
sbb
mov
xlat
xchg
inc
pop
das
sti
and
mov
xchg
sbb
or
clc
xchg
in
test
and
jp
or
xchg
cmp
sub
add
lcall
or
inc
bound
xor
pusha
sub
leave
adc
and
sbb
sub
rclb
push
cs
push
mulb
adc
or
ja
add
shlb
push
xor
inc
pop
pop
add
push
dec
adcb
pop
or
loope
inc
test
or
sbbl
mov
movsb
add
les
push
pop
push
in
xorl
das
adc
sbb
push
push
cmp
in
and
pop
and
clc
push
int3
and
cmp
push
popa
mov
pminub
sub
jnp
pop
call
adc
mov
sbbb
neg
xchg
sub
or
push
mov
mov
scas
xchg
pop
cmp
dec
and
and
nop
sbb
dec
sahf
mov
imul
scas
xor
rcrl
pop
cltd
aad
mov
ficomps
sahf
or
xchg
insb
gs
dec
add
ss
jnp
jmp
mov
int3
push
or
cltd
sub
test
add
andnps
mov
or
cmp
lret
push
xor
lods
and
xchg
push
add
cmpsl
cmp
mov
dec
fisubl
inc
rclb
add
das
lcall
sbb
xor
mov
pop
adc
adc
mov
jmp
xor
and
pop
fdivr
mov
add
pop
or
add
fbstp
bound
and
push
add
xor
mov
xor
xchg
ret
and
push
add
xor
mov
outsb
fistl
ret
and
or
adc
adc
dec
adc
lds
xlat
or
and
or
scas
loopne
lock
add
fbstp
or
and
inc
or
ret
outsl
inc
jo
pop
and
rorl
aad
dec
jbe
xchg
mov
or
and
dec
xor
outsb
fcmovbe
and
dec
or
xor
push
push
popa
push
xchg
loope
or
xchg
ds
aaa
in
cmp
mov
movsb
popa
in
cmp
pop
inc
in
cmp
fcmovne
jnp
xor
in
iret
cmp
nop
sbb
sub
adc
cmp
xor
mov
cmp
or
inc
sub
jb
xor
lret
add
inc
push
out
push
push
mov
out
sub
lods
add
cmp
push
mov
add
push
sahf
or
sti
pop
icebp
jge
dec
sbb
push
cwtl
les
xchg
xor
inc
push
pop
out
movsl
lock
dec
orl
push
dec
lods
cs
sbb
mov
test
jno
pop
inc
push
cmpsl
cmp
jle
sti
ficoms
mov
sbb
in
popf
imul
dec
cmp
mov
cmp
cli
daa
mov
jmp
xchg
push
mov
sub
push
and
ret
or
lock
jle
shrd
push
icebp
in
push
aad
push
adc
pop
int3
ja
lret
add
jp
xchg
loope
inc
sub
sbb
xor
mov
adc
or
lods
xlat
dec
sbb
cmp
mov
dec
push
insl
leave
cwtl
cmp
aas
mov
mov
roll
lods
and
sub
arpl
hlt
add
outsl
or
adc
sbb
adc
sbb
negl
test
jl
adc
negl
rcrb
and
adc
int
rclb
rcrb
cmp
mov
inc
movsb
inc
test
and
adc
push
imul
lcall
movsb
sarb
ret
idivl
mov
mov
mov
and
rcl
and
xor
dec
enter
adc
int
rcl
inc
aam
adc
sub
adc
loopne
pop
and
adc
sub
cs
cmp
inc
mov
add
arpl
xchg
jbe
out
hlt
or
nop
dec
mov
adc
push
imul
adc
sbb
xor
and
adc
int
or
sbb
int
rcrb
and
int
rcrb
and
adc
sbb
dec
sub
vaddsubps
inc
outsb
xchg
out
or
jmp
cmp
xchg
out
out
sub
je
je
cmp
ret
cmp
sysenter
xchg
jbe
ret
cmp
lds
cmp
data16
or
sbb
imul
sub
dec
push
scas
nop
out
and
inc
nop
out
imul
cmp
imul
xchg
dec
push
adc
sub
push
dec
push
dec
dec
push
push
int
adc
sbb
insl
fbld
pop
and
push
push
add
lret
or
xchg
add
loop
and
inc
add
pop
fcmovu
lea
or
mov
push
add
sub
jl
or
sarb
rorb
sbb
sbb
out
jg
add
ret
xor
out
push
push
push
sub
jge
and
fildl
pop
xor
rclb
call
scas
fcoms
add
pop
sub
xchg
xchg
shlb
adc
orl
pop
arpl
mov
mov
pop
insl
push
sets
push
or
pop
add
in
add
lds
push
push
shlb
cli
dec
mov
hlt
adc
add
adc
roll
or
roll
aaa
movsl
push
mov
add
jle
add
sarb
add
cmpsl
cmp
jge
fnsave
cli
push
jg
pop
adc
inc
sbb
jne
rorb
iret
shrl
icebp
or
push
push
rorl
popa
push
fs
dec
mov
out
call
lock
cmp
and
jne
in
in
dec
push
pop
mov
cmp
xlat
adc
sbb
addr16
shr
add
and
push
mov
andl
sarb
addr16
or
cmc
in
xor
or
push
mov
addb
jmp
ret
clc
fildl
ret
repz
inc
dec
sub
idiv
mov
aam
enter
popa
jge
cld
dec
repnz
adc
pop
ror
lcall
nop
out
andl
or
or
inc
es
enter
jmp
loopne
imul
inc
push
loopne
neg
sarb
jo
inc
or
push
outsb
iret
out
push
icebp
push
adc
insb
nop
clc
sbb
add
sbb
mov
jp
mov
sub
pop
addl
and
xor
push
adc
es
cld
cmp
sbb
andb
movsb
sbb
xchg
ret
pop
sub
add
push
and
cmp
clc
sub
and
call
adc
add
and
sbb
addb
pop
nop
mov
dec
psrlq
lock
fdivrl
pop
xchg
mov
jns
loopne
aaa
xlat
lcall
hlt
and
mov
dec
pop
push
andb
cmp
mov
mov
mov
add
pop
dec
sbb
pop
test
lcall
pop
pusha
and
aam
enter
ret
or
and
inc
hlt
addr16
iret
xchg
imul
xor
xor
and
and
shlb
sub
mov
and
xor
icebp
ja
sbb
push
push
sub
ret
ror
sbb
cmp
or
je
mov
lcall
cmp
jns
lcall
out
movsb
jns
and
repz
cmp
and
sub
sub
xchg
out
sub
xor
xor
imul
sub
arpl
sbb
outsl
sbb
cltd
lock
cs
cld
mov
mov
testl
roll
and
add
jecxz
mov
xor
mov
dec
clc
dec
shr
orb
pop
ja
push
mov
cld
das
push
dec
adc
sbb
and
dec
lods
add
mov
cs
and
cmpsb
adc
xchg
mov
and
push
and
xor
test
loope
sahf
enter
xchg
fnstcw
sub
call
or
notb
fbld
dec
outsb
lea
or
dec
ret
mov
mov
lahf
jno
bound
mov
pop
cmp
dec
loop
and
add
xchg
dec
xor
adc
mov
addr16
push
xchg
mov
bound
mulpd
pop
cli
in
cmp
psubusw
inc
add
add
xor
pop
and
jecxz
mov
mov
and
dec
jno
push
push
rolb
cld
xchg
sbb
idiv
sbb
dec
or
pop
adc
iret
loope
jne
adc
add
mov
mov
mov
inc
sti
xor
fcomps
add
mov
in
subb
xor
mov
inc
adc
dec
mov
mov
mov
fistpl
pop
sbb
adc
adc
into
xlat
lock
adc
mov
fimuls
xor
mov
xchg
out
fdivl
mov
and
mov
and
emms
or
shlb
and
xchg
mov
addb
cld
pop
dec
jl
mov
jbe
fs
stos
icebp
xchg
sbb
cmp
mov
add
or
hlt
jle
or
cmpsl
xor
inc
push
sahf
aad
fiadds
pushf
test
pop
ret
out
imul
sbb
and
ret
movsb
lods
push
xchg
rorb
add
movsb
sbb
mov
mov
cmp
sbb
dec
add
or
das
lea
shll
jl
mov
adc
push
js,pt
sbbb
loope
out
sub
cwtl
ret
adc
xchg
mov
push
jnp
cmpb
sbb
lock
insb
xchg
fldl
ljmp
jbe
adc
adc
cmp
iret
inc
jmp
mov
jl
dec
inc
mov
sbbl
mov
pop
popf
test
jo
test
pop
mov
mov
scas
inc
iret
ret
outsb
push
push
dec
dec
inc
add
les
push
mov
ja
push
cmpsl
push
push
pushf
cmp
aaa
or
and
mov
ja
loope
push
addr16
push
or
das
pop
lahf
je
sub
push
jo
push
mov
cmp
xchg
mov
xchg
insl
jo
mov
fsubr
das
or
adc
movsl
mov
or
test
fidivl
or
or
fdivrl
pop
and
adc
lds
sbb
nop
stos
ja
push
inc
dec
xchg
lock
out
pop
cs
outsl
imul
jnp
push
roll
xchg
adc
sub
dec
jle
inc
gs
xor
aaa
xor
jg
inc
sub
fdivrl
orl
adc
or
jbe
daa
test
pusha
xchg
fldt
in
fiaddl
and
or
mov
cmc
daa
imul
xchg
mov
mov
adcb
jae
clc
sbb
dec
cli
rcll
add
pop
or
lret
mov
or
or
pop
repnz
add
adc
push
std
out
out
and
je
pop
inc
inc
push
push
dec
push
inc
pop
inc
add
stos
push
inc
cs
out
pop
mov
hlt
fimull
dec
inc
in
ficoml
fistl
jmp
jae
fldenv
or
push
data16
inc
fcomp
dec
les
mov
xchg
lods
and
loop
sub
mov
gs
push
and
xchg
sub
testb
adc
loopne
in
ss
mov
test
ret
js
aas
je
nopl
inc
mov
or
mov
push
in
add
inc
inc
enter
test
and
push
or
pop
push
inc
addb
rcrl
jns
pop
hlt
cltd
xchg
loopne
inc
inc
dec
mov
xchg
and
daa
or
adc
into
mov
or
xor
dec
push
fwait
pop
add
and
outsl
and
pop
cmc
xor
sub
inc
mov
pop
addr16
negb
and
cmpsb
lock
jo
push
xor
ficoml
popa
inc
das
insb
inc
out
sbb
inc
push
push
pop
adc
add
pusha
xor
sbb
inc
cmpsb
push
fldcw
adc
and
pop
push
dec
outsb
dec
sahf
and
inc
push
roll
sbb
pop
dec
mov
scas
add
push
and
pop
daa
dec
fst
push
add
push
pop
insl
aam
xchg
pop
adc
sub
sarb
sub
add
test
inc
aad
sbb
pop
xchg
add
push
inc
push
mov
lock
push
dec
dec
mov
and
sbb
add
pop
sub
mov
inc
push
shlb
stc
mov
pop
jne
dec
inc
and
cwtl
arpl
sub
or
sarb
mov
push
aaa
out
xchg
cmovns
jo
xchg
pop
hlt
adc
pop
out
jg
dec
inc
dec
sub
fcom
sbbl
es
aas
add
push
dec
push
jne
jo
dec
dec
mov
aaa
or
push
out
dec
cmpsb
cmc
xor
sbb
dec
adc
pop
jnp
rcrl
mov
in
jo
les
push
pusha
call
imul
push
inc
inc
mov
add
iret
mov
and
shll
dec
add
cmpsl
lods
imul
push
enter
add
mov
pop
jae
aam
sar
push
or
mov
push
scas
popa
xor
mov
xchg
fidivrs
push
dec
out
push
dec
loope
inc
stos
pop
leave
push
pop
bound
add
xchg
jmp
sbbb
or
fbld
push
inc
rcll
roll
push
test
dec
mov
mov
fisttps
jge
jbe
fists
cmp
or
push
and
arpl
loop
xor
push
lds
xor
dec
arpl
mov
inc
inc
lods
and
adc
dec
and
pop
dec
push
pop
inc
mov
xlat
sbb
mov
sar
push
add
icebp
dec
push
out
adc
movsl
aam
sti
movsl
loopne
and
inc
dec
sbb
mov
aad
sub
mov
arpl
lds
sub
inc
mov
mov
bound
mov
movsl
mov
and
out
push
inc
sub
popa
add
int3
cmpsl
jnp
sub
pop
mov
aas
test
xor
fcmovb
adc
lret
push
nop
push
fmulp
dec
xor
xchg
mov
sbb
or
inc
movsl
fld
xor
ja
xor
roll
dec
je
cmp
cmp
dec
xor
lcall
dec
dec
push
pop
add
cmpl
add
xchg
out
xchg
pop
inc
cs
testb
dec
dec
mov
cmp
add
push
cmp
ret
and
mov
dec
dec
mov
dec
xor
xor
in
repnz
movl
mov
popf
rorb
dec
adc
pop
in
xor
adc
push
dec
add
mov
and
test
mov
push
adc
mov
push
or
je
or
movsb
dec
push
jo
mov
mov
insl
dec
js
mov
shlb
or
outsl
adc
lahf
movb
jo
inc
aaa
pop
and
out
pop
xor
jns
imul
jbe
ja
add
loope
push
iret
rorb
sbb
rolb
pop
push
scas
mov
push
jo
sbb
int3
sub
and
push
pop
mov
das
adc
inc
fcomp
push
daa
dec
pop
pusha
cmp
cmpsl
ja
mov
hlt
push
imul
add
arpl
xor
cltd
pcmpgtd
adc
mov
inc
dec
dec
pop
leave
in
push
pop
sub
inc
add
orl
jns
stos
pop
push
or
imul
dec
data16
test
popa
fiadds
mov
sub
or
sub
enter
mov
add
and
jns
stos
mov
mov
push
subl
push
inc
pop
mov
int3
repz
outsb
jg
jno
orb
pusha
dec
test
ffree
dec
hlt
push
daa
cwtl
das
movsb
push
inc
push
and
add
fmul
icebp
cmp
imul
sub
push
lcall
aaa
push
mov
lock
jge
movsb
jns
in
popa
add
sbb
pop
mov
shrl
xor
loop
lods
adc
shl
pop
push
mov
jecxz
and
push
fcoms
xchg
in
std
push
adc
push
mov
jp
and
xlat
dec
adc
cmp
mov
xchg
xor
push
jbe
cmp
sbb
jo
jecxz
xchg
jo
loop
leave
and
popa
mov
fisttpll
aad
dec
insb
jno
pop
out
test
or
fwait
sbb
push
outsl
push
pop
das
lds
outsl
or
xor
and
push
sub
jb
outsb
addl
push
mov
shlb
pop
jns
or
xchg
outsl
test
mov
adc
mov
aaa
inc
add
jae
jne
mov
inc
fisttpll
adc
mov
pop
push
mov
addr16
mov
les
ljmp
xchg
lahf
in
jno
sbb
sbb
das
jns
aaa
cmp
mov
mov
imul
add
mov
adc
or
mov
or
xchg
jmp
cwtl
sbb
in
enter
aam
lret
sti
push
mov
pop
or
inc
ret
adc
lods
xor
call
pop
pop
leave
mov
outsl
dec
or
test
aad
aad
sbb
cmp
shll
jb
in
in
xchg
or
shrl
adc
dec
rcrl
push
adc
call
dec
fimull
sub
rorl
add
mov
fs
pop
xchg
das
test
and
in
pop
in
dec
andl
repz
lea
fidivl
sub
mov
or
xchg
icebp
arpl
pusha
pop
out
loop
mov
and
push
xor
sbb
add
or
inc
mov
arpl
cmp
and
das
xchg
loopne
jns
adc
mov
xor
pop
ja
and
fwait
pop
or
pop
sbbb
mov
je
push
bound
test
jo
pop
push
xchg
ja
inc
and
or
inc
mov
dec
jns
pop
sub
mov
lock
adc
and
je
repnz
sbb
fdivs
test
push
or
cli
jns
jl
insb
cmp
push
xchg
bound
outsl
imul
enter
or
add
dec
cwtl
les
fnstenv
jne
dec
xchg
cwtl
pop
jae
mov
popa
sahf
bswap
xchg
xor
je
js
push
pop
mov
pop
fisubs
scas
fsubrp
lds
dec
xchg
push
mov
jne
jbe
mov
push
loop
lds
aaa
ret
cmp
add
jl
mov
push
mov
xor
sub
int3
icebp
repnz
rcrl
es
cs
xchg
sub
mov
xchg
adcb
test
pop
inc
sbb
add
or
imul
jo
or
ficompl
rorb
imul
sahf
cmpsl
mov
jge
fisubrl
pop
mov
test
push
add
loop
and
fbstp
or
out
add
dec
movsb
push
jns
xor
inc
sub
mov
pop
inc
lcall
mov
roll
inc
dec
pop
add
ss
int3
or
sbb
mov
xor
stos
jmp
pop
or
pop
xchg
aad
add
adc
mov
xchg
hlt
cltd
bound
in
sbb
daa
mov
mov
add
push
cmp
pop
cmpsl
inc
add
or
push
adc
outsb
xor
sub
cmc
xchg
bswap
stc
add
jmp
bound
xor
sbb
push
sbb
jmp
mov
inc
hlt
fsubs
or
sahf
mov
in
popa
and
lods
pop
pop
notl
xor
cmp
lock
nop
sbb
lds
jecxz
jecxz
sbb
cld
je
push
sub
enter
stos
cmpb
aam
push
and
jo
xchg
imul
mov
lret
daa
add
and
loop
pusha
mov
jnp
popf
jp
leave
hlt
mov
cmp
arpl
add
push
data16
sahf
iret
push
daa
mov
loopne
andl
clc
push
adc
jp
jge
add
sbb
dec
sti
cwtl
aas
pop
jnp
nop
sbb
add
gs
push
or
icebp
movsl
shlb
pop
movsb
arpl
icebp
daa
ror
arpl
icebp
arpl
pop
jecxz
and
stos
xchg
mov
jmp
addl
mov
pop
pop
adc
les
xor
lds
push
cmp
mov
push
ret
dec
pop
popf
sbb
mov
xor
xchg
dec
lahf
test
imul
addr16
in
mov
inc
cvttps2pi
lcall
add
cmpb
test
std
idivb
cli
pop
ja
mov
pushw
das
iret
repz
cmp
cmpl
cmp
lahf
lods
mov
repz
in
add
cmpb
push
push
push
test
pusha
loopne
cld
adc
sahf
divb
dec
jg
mov
rorl
loope
out
mov
or
cltd
out
add
pop
daa
push
or
xchg
xor
jl
ljmp
jge
ljmp
pop
or
inc
inc
in
out
cmpsb
pop
dec
cs
inc
popf
adc
push
mov
adc
inc
push
enter
sbb
hlt
xor
and
jbe
das
push
xor
pusha
cmp
or
add
pusha
cmpl
cmpsl
sti
in
sbbl
cmp
push
in
or
loopne
test
push
testb
outsl
in
cmp
pop
testb
ss
add
ds
nop
cmpl
enter
cmp
adc
call
sbb
mov
loopne
hlt
cmp
cwtl
xor
jb
push
or
fdivl
xor
sbb
fs
xchg
add
ds
mov
sbb
or
add
pop
add
push
or
ret
ret
cltd
call
dec
mov
mov
dec
push
mov
and
mov
addr16
dec
fadds
mov
fcomps
and
mov
pop
sbb
fisubl
xchg
add
ds
push
xchg
sbb
cwtl
orl
rorl
pop
leave
add
push
push
lahf
imul
cmpsb
mov
pop
or
push
cmp
sbb
inc
out
les
jle
pop
and
sub
rcll
or
popa
popa
sbb
sbb
inc
mov
mov
adc
mov
mov
sub
push
lahf
or
mov
mov
push
fidivrs
js
push
push
or
pop
dec
nop
or
xchg
adc
imul
cmpsb
imul
nop
test
or
sbb
sub
cmp
add
xchg
or
mov
sub
cs
fsubrp
adcb
mov
cmp
and
inc
xor
and
or
inc
add
push
inc
push
pop
movsl
and
push
mov
popa
push
push
push
add
bound
jge
dec
shlb
push
pop
inc
dec
sbb
add
outsl
xor
mov
add
push
push
adc
call
or
dec
fs
jbe
cs
adc
mov
push
mov
xchg
jo
loopne
test
cmp
mov
mov
pop
filds
insl
sub
mov
orl
pop
sbb
xlat
and
aaa
js
cwtl
cmpsb
scas
sbb
pop
or
sbb
adc
push
or
dec
inc
push
inc
outsl
xchg
andb
call
xchg
mov
add
aam
dec
subl
and
lock
testl
pop
int3
test
pop
sbbl
mov
mov
add
jecxz
mov
insb
jo
shll
in
sub
rorb
adcl
push
push
adc
add
shll
and
add
out
push
xor
arpl
pop
mov
cmpsl
mov
pop
push
cmpsl
scas
sti
add
add
rorl
add
jmp
mov
mov
add
sub
jb
sbb
mov
mov
je
or
mov
push
or
mov
stc
or
inc
test
les
popa
test
adc
pop
cmpsb
mov
adc
repz
mov
out
and
clc
ss
and
add
and
dec
mov
xor
mov
je
or
push
add
xorb
xchg
mov
xchg
jno
inc
adc
call
fs
call
out
jp
or
add
push
xchg
jnp
xorb
cmp
adc
adc
andb
or
in
inc
xlat
inc
cmpsl
adc
outsb
add
loopne
rol
out
or
lock
loope
mov
sub
mov
insl
fsubr
jne
adc
das
mov
call
sub
cmc
sbb
add
cli
dec
bound
mul
les
pop
cmp
les
and
pop
mov
sbb
adc
xlat
xchg
in
call
xchg
sbb
xor
movsl
or
add
cltd
and
shll
adc
xchg
sub
cmpsb
enter
xchg
in
mov
mov
arpl
inc
pop
mov
pop
js
pop
sub
sar
dec
xor
or
sbb
push
inc
out
sbb
add
imul
or
mov
adc
iret
andb
dec
mov
adc
xor
scas
sub
inc
adc
mov
test
add
sbb
lods
iret
shll
mov
andb
mov
arpl
adc
stos
enter
push
or
inc
add
and
dec
xchg
sub
je
adc
xchg
test
pushf
inc
out
adc
pop
jb
adc
inc
push
cmp
adc
dec
mov
mov
adc
cmpb
je
push
mov
add
jbe
gs
enter
pop
fldt
aas
pop
cs
sbb
add
ret
mov
lahf
xchg
xor
movsb
js
or
lock
iret
ja
sbb
xchg
adc
mov
push
int3
add
jl
cmp
in
inc
imul
icebp
sub
mov
pop
nop
sbb
ja
call
and
push
xor
mov
and
incl
sahf
mov
cmpl
adc
sbbb
sbbb
inc
ficoml
daa
ja,pn
cmpsb
push
push
in
andb
adc
ja
cmp
fidivl
adc
dec
push
mov
mov
dec
and
add
add
lds
loopne
mov
push
add
movsb
outsl
shrb
mov
ret
loopne
movsl
out
mov
cmpsb
lds
arpl
and
imul
jg
int3
push
ret
push
adc
push
cmp
in
push
dec
lcall
es
mov
or
add
test
pop
push
push
dec
inc
and
sbb
in
lods
loop
aaa
push
xor
mov
pop
pop
add
mov
push
jno
in
dec
pop
adc
mov
sbb
jmp
lds
xor
mov
out
pop
lods
pop
mov
and
pop
pop
add
movhps
or
push
aam
js
push
mov
push
jmp
or
sub
outsl
inc
mov
add
mov
lret
lret
addb
adc
inc
or
push
rcrb
lock
lahf
or
shlb
jp
xchg
test
sub
pusha
imul
mov
lahf
insl
pushf
sub
sbb
pop
dec
jnp
add
fs
and
jbe
dec
sbb
sub
sbb
dec
adc
and
add
inc
pop
and
cld
es
sub
adc
jb
mov
clc
push
adc
jmp
jno
or
repnz
inc
mov
push
insl
leave
adcb
shlb
inc
cli
add
cmp
insb
in
xor
movsb
xor
aas
or
in
jmp
inc
pushf
mov
sub
outsl
cmc
rcll
enter
add
sub
jge
fcmove
push
cltd
dec
in
or
mov
xor
popf
loopne
in
pusha
and
dec
bound
cmp
xchg
dec
add
sbb
pop
rclb
popl
mov
xor
push
adc
sbbb
mov
dec
push
rcl
add
push
fs
xchg
pop
adc
dec
inc
and
dec
pop
cmpsl
loopne
or
cli
mov
lods
pop
pop
push
lea
addr16
pop
mov
mov
xchg
sub
ret
es
pop
adc
mov
push
or
or
push
add
icebp
fdivrs
sbb
pop
fidivl
mov
mov
mov
repnz
push
and
testl
sahf
fnstenv
add
cmpb
mov
push
fdivl
xchg
push
cmpsl
out
cmp
push
and
das
cmpb
dec
inc
add
mov
loopne
sbb
psubsb
pop
mov
dec
gs
jp
add
mov
cmpsb
add
mov
notrack
mov
pop
and
iret
pop
xor
add
or
wbinvd
pop
aam
push
inc
negb
xor
push
lods
addb
and
in
andl
and
aas
enter
pusha
cmp
lods
sbb
fs
xchg
push
test
mov
push
inc
xchg
xchg
xchg
adc
cvttps2pi
and
xor
dec
lret
dec
inc
orl
and
icebp
dec
scas
mov
shll
outsb
push
arpl
loopne
dec
dec
and
push
roll
or
mov
sub
push
lea
inc
pop
push
das
mov
xor
je
add
ja
inc
jns
cmp
push
outsl
jo
cmp
cmp
dec
lcall
orb
xorb
mov
mov
loop
bnd
mov
and
testl
insb
notl
or
inc
add
mov
dec
adc
call
add
inc
testb
cwtl
and
inc
sub
xchg
mov
add
lds
xor
inc
cmpsb
outsb
fwait
or
lock
or
and
cmp
dec
loopne
call
pop
shrb
leave
lcall
mov
sbb
stos
pop
push
push
adc
cmp
pop
push
xor
cltd
test
aaa
enter
rcrb
cmp
js
dec
jl
rol
add
sbb
mov
add
aaa
mov
cmp
or
cltd
test
or
mov
push
add
inc
ja
xor
popf
dec
fadds
movsl
push
leave
rcr
fwait
add
test
in
adc
xor
lahf
inc
jp
les
push
cmpsl
fs
add
sbb
mov
test
pop
xor
fdivl
test
jmp
jae
in
mov
ss
and
mov
add
int3
int3
rcl
or
or
dec
fdivrl
pop
fadd
cmp
mov
dec
cs
xor
mov
imul
rol
les
add
enter
jmp
test
dec
or
adc
popa
dec
and
push
and
xchg
push
mov
and
lahf
jne
nop
add
and
jmp
sbb
insb
sti
adc
imul
pop
push
mov
sub
push
xor
jg
dec
and
sub
xchg
sub
pop
adc
bound
lock
mov
jo
movsb
nop
cld
push
inc
lods
enter
lods
push
mov
jnp
add
outsb
inc
xor
scas
bound
dec
push
pop
sbb
jae
dec
loop
andl
lods
jecxz
cmp
insb
jge
dec
ljmp
adc
lret
mov
add
sub
dec
lds
popa
imull
mov
pusha
sub
or
add
insb
das
adc
and
ss
leave
inc
pop
pop
jg
in
mov
outsl
pop
pop
ds
test
aaa
aaa
arpl
cmp
sbb
lcall
add
xor
inc
sarl
das
repz
test
or
add
clts
mov
sub
jbe
arpl
xchg
mov
cmpsb
mov
push
push
out
or
pop
cmp
or
mov
fs
xorb
and
push
sbb
lcall
jne
push
push
cmp
push
xor
mov
pusha
lea
mov
adc
scas
push
stos
push
xor
cwtl
adc
lock
movsb
jae
adc
xchg
inc
dec
pop
fstps
fsubr
sbb
fbstp
cmp
rcrb
loope
push
lahf
addb
mov
pop
aam
push
rorl
sub
je
insb
jecxz
in
mov
stc
lcall
and
sub
add
sub
mov
cmp
and
mov
das
pop
sub
hlt
aad
in
scas
gs
ret
adcb
or
and
shlb
cmp
add
outsb
push
mov
xchg
push
scas
outsl
jmp
sbb
pop
outsb
inc
inc
xchg
mull
shr
or
dec
scas
hlt
lea
or
in
sub
pop
shll
enter
sti
in
and
sub
mov
adc
test
rcll
adc
mov
dec
movsb
mov
adc
cmovo
pop
adc
jne
push
aam
frstor
push
sbb
sbb
cld
inc
popa
add
add
cmp
movsl
stos
pop
cmpxchg
insb
enter
xor
add
add
and
mov
mov
xchg
inc
es
pop
sub
mov
add
push
or
ja
add
or
bound
xchg
aas
or
iret
add
cmp
and
movntq
decl
scas
mov
add
das
jecxz
mov
adc
shll
call
arpl
add
iret
ss
adc
or
xchg
add
push
inc
sar
push
or
or
adc
or
mov
test
and
cmpsb
test
inc
jmp
repnz
mov
cmp
cmp
testb
jecxz
jge
pop
orb
jbe
pop
xor
xor
jle
or
sbb
pusha
loopne
mov
adc
and
movsl
sub
sbb
push
movnti
sub
les
out
sahf
xchg
push
test
sbb
jmp
test
mov
xchg
add
es
test
dec
xchg
adc
jne
mov
les
and
outsl
sub
lods
loopw
clc
movsl
popf
imul
dec
lret
sub
adc
add
mov
sub
and
mov
aas
movsl
sub
lea
xchg
inc
cmpb
or
xchg
mov
addl
adc
and
sbb
cmp
push
loopne
inc
bound
mov
push
push
xchg
pushl
push
xchg
popa
mov
jmp
and
stos
mov
loopne
test
iret
push
inc
mov
movsb
push
xor
push
leave
inc
add
or
adc
addl
lods
insl
jne
xchg
loope
sub
inc
or
sbb
add
or
cmp
dec
lea
xchg
loope
sbb
jmp
add
xor
popf
xchg
add
sarb
movl
sti
and
sbb
imulb
mov
lock
jb
xchg
adc
loope
sbb
pop
adc
movb
sbb
fdivs
dec
sub
insl
jecxz
dec
cmp
sbb
cmovs
ret
bound
push
mov
call
add
pop
sti
push
lods
xchg
push
push
push
xchg
das
bound
fcoml
adc
sbb
xchg
jecxz
add
pop
js
sbb
xchg
sub
pusha
or
popa
sbb
xchg
mov
popa
test
rolb
addl
rcll
and
inc
lock
icebp
mov
add
xor
jns
out
test
push
and
dec
cmp
out
test
and
xor
xchg
cwtl
or
inc
fs
add
inc
stos
and
and
pop
and
enter
ss
leave
int3
gs
or
push
xorl
dec
mov
and
and
in
ja
push
daa
push
cltd
das
jg
push
xchg
jg
in
jns
push
dec
arpl
pop
add
or
outsb
ret
mov
jmp
pop
sub
pop
push
or
cltd
popf
lret
in
push
mov
push
inc
punpckhdq
leave
dec
psllq
dec
leave
stos
mov
lcall
fmuls
cs
and
add
popf
das
call
loopne
adc
xor
leave
and
xchg
sar
push
dec
add
out
push
mov
or
inc
pop
jne
mov
or
push
inc
ret
mov
mov
adc
loope
xor
rcll
or
je
test
lods
or
aad
icebp
mov
aaa
cmpsb
sbbb
fdecstp
bound
loopne
push
pushf
push
jecxz
das
loop
lods
roll
lods
daa
or
push
das
add
jns
xlat
push
mov
push
mov
sub
mov
test
imul
cs
xchg
lcall
arpl
or
lret
adc
sub
shrb
add
ret
push
fs
adc
mov
pop
lret
dec
mov
mov
daa
subl
push
rolb
sub
pop
dec
adc
ffree
cmpsl
loopne
test
xor
inc
test
push
cmpb
xor
xchg
jecxz
mov
xor
xor
or
adc
and
cmp
lods
shlb
inc
add
sbb
xor
lods
inc
add
cmpsb
adc
dec
add
sub
js
sbb
dec
add
cmpsb
dec
outsl
add
pop
pop
out
push
push
fildll
mov
mov
ret
add
rolb
push
inc
mov
dec
sub
sub
inc
jo
negl
adc
xorb
adc
sbb
xchg
lahf
bsf
lock
mov
xchg
xchg
mov
or
leave
leave
jge
sbb
repnz
sbb
sbb
movsb
jle
call
and
adc
mov
pop
adc
sbb
outsl
dec
pop
sbb
repz
adc
loope
mov
mov
imul
push
jae
inc
and
mov
dec
pop
xchg
or
outsb
sub
enter
sahf
mov
adc
test
mov
add
add
adc
movsb
mov
shlb
js
xchg
pop
shlb
adc
push
xor
hlt
mov
subb
and
mov
mov
fstl
cmp
and
mov
lock
and
push
rcr
adc
mov
fwait
popa
rcrb
shlb
ja
ja
cmpl
mov
or
sbb
and
sbb
ds
sbb
loopne
mov
cmp
cmp
pop
mov
or
inc
enter
mov
sbb
pop
shll
enter
push
pop
into
jp
mov
or
mov
cwtl
mov
jmp
mov
or
cs
jbe
pop
mov
push
inc
mov
sbb
and
sbb
jl
mov
jo
lods
lds
dec
testl
sbb
mov
outsl
or
inc
pop
dec
push
pop
popf
push
dec
jge
push
nop
cs
xchg
dec
adc
fsubr
push
daa
mov
insl
dec
xchg
rcll
adc
push
fnstsw
adc
adc
dec
mov
setb
mov
push
xor
loop
in
dec
cmp
pusha
clc
inc
jne
pop
sarb
adc
cmp
xor
popf
mov
int
jb
sub
and
out
divl
sub
sbb
mov
cld
mov
sbb
das
mov
xchg
sub
sti
fwait
mov
pop
adc
mov
jns
add
add
mov
dec
push
jns
pop
jo
sbb
or
fimull
mov
push
adcb
in
adc
sub
sub
or
mov
add
or
ljmp
sbb
cmp
rorb
inc
fwait
push
jmp
push
popa
sbb
sbb
adc
adc
jg
add
sbb
pop
or
or
inc
and
inc
or
or
add
push
and
cmpb
jb
add
add
jns
mov
inc
pop
test
pop
and
and
test
lahf
sbb
dec
push
loope
sbb
sbb
enter
xchg
mov
repnz
push
cs
and
or
fs
outsl
subb
pop
mov
push
les
shll
test
xor
fnstenv
jne
gs
add
scas
ficomps
es
or
das
jnp
dec
xchg
jp
xlat
xchg
or
nop
dec
xor
or
add
mov
add
sbb
addb
pop
aam
loopne
outsb
add
mov
inc
xchg
orl
pop
sub
rolb
and
sub
mov
ret
and
pop
sbb
aad
pop
les
mov
mov
mov
and
cmp
or
add
xor
or
xor
and
mov
lea
movb
mov
xchg
pusha
pop
mov
out
dec
leave
aam
push
mov
and
or
add
add
mov
and
aad
fidivl
add
add
cmp
inc
and
cmpsb
enter
push
cmpb
add
add
add
push
mov
mov
push
inc
leave
pop
mov
pop
add
push
das
push
sbb
std
cmc
arpl
jno
sub
in
cmp
scas
or
lods
push
stos
push
in
add
mov
mov
jmp
lret
push
cmp
push
mov
cmpl
xor
add
and
lds
dec
and
je
xor
imul
orb
repz
push
testb
add
jae
mov
test
movsb
test
add
mov
or
out
jno
inc
lods
addb
lret
cltd
push
push
adc
mov
xchg
aam
xor
adc
fldcw
push
mov
add
mov
xchg
pusha
mov
mov
add
cs
sbb
cmp
rcrl
pusha
mov
cmp
xchg
xchg
mov
inc
pop
add
and
cmp
add
pop
cwtl
and
adc
movsl
lock
or
arpl
and
movsb
push
adc
mov
leave
mov
jo
add
dec
and
mov
xchg
dec
sub
push
imul
add
loop
or
adc
mov
push
xor
hlt
push
sbb
mov
mov
ljmp
repnz
std
push
add
adc
dec
inc
or
mov
ss
add
scas
es
jmp
addb
je
clc
add
jo
add
mov
jge
and
nop
mov
jne
push
repnz
mov
push
mov
mov
pop
xchg
cmp
fwait
adc
or
dec
pop
js
or
pop
aaa
popf
mov
popa
adc
nop
inc
or
mov
push
dec
shll
in
test
mov
inc
mov
pop
dec
or
pop
add
push
imul
sub
adc
out
xchg
adc
dec
jecxz
add
pop
mov
lds
mov
sbb
jle
cmp
sub
icebp
adc
xor
fildl
mov
dec
call
in
mov
mov
leave
sub
push
outsl
mov
mov
mov
jbe
cmp
mov
jns
jo
addr16
mov
push
and
mov
test
jl
sbb
push
xchg
mov
mov
xchg
sbb
jecxz
sub
push
cmc
fimuls
push
ficompl
or
scas
test
mov
mov
mov
sbb
int
aam
cmp
push
addr16
aas
sbb
lock
loope
mov
lea
call
cmp
mov
pop
adcb
bt
or
fistl
jo
jl
cmp
mov
add
and
mov
xlat
or
mov
or
loop
rolb
inc
adc
adc
xor
adc
mov
mov
adc
jmp
bound
lods
sub
pop
adc
xchg
jge
adc
xor
xchg
jp
insl
jle
loop
rcll
dec
cwtl
add
inc
adc
cld
push
add
and
xchg
repz
adc
or
sub
movsl
or
nop
sbb
or
jae
enter
sub
fcmovnbe
mov
rcll
mov
lds
sbb
push
imul
lock
shlb
add
dec
sub
xchg
adc
fmuls
lock
outsl
aam
loope
roll
jmp
sub
xor
cmp
add
stc
jp
adc
mov
lea
mov
pop
mov
mov
xorb
in
imul
rorb
xor
fadd
fistl
adc
or
cmp
daa
cmp
mov
sub
hlt
popa
xchg
daa
leave
das
push
push
or
mov
xor
add
xor
adc
rclb
decl
cltd
enter
int
dec
xchg
fs
dec
mov
dec
mov
ds
and
cmp
dec
adc
add
dec
pusha
add
out
cmp
pushf
fcompl
or
xor
sysret
adc
or
inc
js
cmp
scas
dec
bound
jmp
mov
sbb
ret
imul
mov
add
or
inc
aaa
cmp
inc
jle
repnz
ds
mov
add
cmp
les
rcrb
add
mov
pop
mov
cmp
xor
jp
jnp
adc
mov
push
or
je
mov
in
nop
push
dec
sbb
hlt
loopne
in
jne
cs
jmp
popf
or
ret
sub
call
rorb
dec
leave
lds
and
repz
js
hlt
js
jp
in
movsl
xor
sarl
add
sub
xlat
adc
sti
dec
or
daa
jl
mov
addl
repz
pushl
add
pop
pop
adc
push
inc
add
or
jmp
jg
or
adc
adc
adc
xor
mov
xor
inc
outsb
nop
test
not
data16
adc
ds
jns
add
push
fsubr
xor
push
jmp
rcrb
pushf
add
jmp
jb
stos
lods
mov
testl
pop
adc
dec
and
inc
mov
stos
dec
in
sbb
nop
push
loop
mov
lods
pop
cmpsl
inc
or
arpl
mov
movb
jne
sti
fadds
sti
or
jae
jbe
sub
setno
sub
lea
dec
and
mov
xchg
dec
sahf
fmuls
stos
out
pop
jne
arpl
dec
movsl
push
push
or
inc
dec
cmpsl
sbb
dec
mov
inc
inc
xor
or
inc
int3
mov
rol
lcall
and
fbld
cmp
xor
cs
lods
fisubs
and
and
pop
jae
rclb
push
xchg
cwtl
xor
and
mov
cmp
adc
pusha
hlt
loop
sar
push
jbe
jmp
roll
jo
sub
mov
jns
sbb
xchg
sbb
push
fwait
adcb
or
aas
sub
jo
adc
mov
push
adc
mov
lret
and
xor
sbb
fcmovnu
or
push
ja
jno,pn
push
cltd
cmpsb
pop
hlt
jns
nop
dec
enter
jo
mov
cs
aaa
pop
sub
fsubr
mov
ret
pop
mov
scas
inc
jae
cwtl
inc
and
call
lea
mov
cmp
sbb
mov
xchg
pop
pop
add
mov
call
mov
sub
xchg
das
xchg
sub
in
inc
sub
int3
insb
in
fbld
mov
and
ret
ud1
and
mov
lea
outsl
mov
jle
cmpb
or
fs
mov
xchg
add
popa
add
bound
jmp
rclb
cmp
pop
ss
sbb
inc
int3
insl
jne
test
mov
out
and
pop
pushl
int
push
adc
cmp
sbb
pop
je
dec
int3
sbb
or
bnd
push
sbbb
push
add
mov
or
and
stos
adc
out
pop
xor
pop
sbb
mov
lock
movsb
int3
add
int
cmc
hlt
add
add
xchg
add
stos
xchg
or
addr16
jns,pn
pop
jne
add
int
mov
lock
dec
lods
and
icebp
jmp
or
leave
xchg
mov
mov
movsl
inc
and
dec
cs
cmp
jg
inc
pop
ljmp
adc
roll
push
subb
mov
clc
add
push
in
pop
test
and
xor
outsl
or
add
cltd
sub
insl
fs
loopne
dec
shr
and
jnp
adc
sbb
pop
nop
jg
xchg
push
cmp
test
rcrl
ret
aam
xchg
cwtl
lret
mov
mov
repz
adc
jbe
cs
adc
jo
fwait
sub
pushf
dec
cmpsb
nop
lods
loopne
aam
test
xchg
fs
sub
inc
in
std
mov
inc
addr16
shrb
cmp
bound
insl
dec
sbb
inc
icebp
mov
add
sub
or
jns
jg
cmp
fistpl
popa
aad
jnp
sub
pop
movsb
push
sbb
adcb
jnp
jbe
mov
les
mov
sbb
sbb
sbbb
pop
adc
testb
dec
jo
jae
and
jmp
nop
loop
cmp
pusha
ja
call
or
je
adc
adc
jg
lea
popa
sub
adc
adc
cltd
rolb
shll
xchg
pusha
and
stos
movsb
sbb
push
inc
pop
outsl
outsl
sub
popa
sub
dec
dec
movsl
dec
dec
imul
dec
mov
ss
or
sbb
sbb
imul
adc
inc
in
sbb
xchg
add
sahf
or
xchg
jo
pop
add
inc
outsb
cmp
adc
daa
xchg
lea
push
outsl
mov
outsl
mov
xlat
rclb
cmova
sub
push
shlb
xor
loopne
adc
dec
dec
ret
lcall
aam
or
scas
test
sbb
pop
arpl
or
and
mov
or
pop
jg
add
mov
or
adc
fs
dec
hlt
addr16
mov
std
push
fildl
add
push
mov
and
xchg
xchg
sbb
insb
sbb
mov
add
dec
and
mov
bound
mov
add
in
add
mov
pop
xor
and
cwtl
jae
mov
add
daa
cmpb
stos
mov
sbb
sbb
movb
add
sub
xchg
and
fs
ss
popa
ss
lods
pop
and
adc
ss
in
mov
mov
push
das
pop
sub
push
add
ss
add
xchg
cmc
cs
mov
call
rcll
xchg
ss
pop
imul
jne
mov
lcall
scas
shll
mov
addr16
jge
cmp
adc
mov
leave
in
fdivrl
or
and
adc
and
ljmp
adc
cmp
bound
jg
ja
jae
xchg
inc
xor
andnps
out
lsl
pop
push
xor
inc
outsl
cmpsb
jb
fistl
jmp
and
xor
add
sub
add
insb
addb
call
mov
inc
mov
sbb
push
mov
xor
jg
lods
push
push
sub
pop
dec
popa
add
cmpsb
pusha
movsb
and
add
js
pop
ja
imul
jb
sbb
inc
push
outsl
or
imul
sbb
outsl
or
aam
add
cmpb
fdivs
sarb
push
lret
popl
test
test
lret
adc
mov
addr16
cmpb
loopne
sbb
nop
popf
sub
popa
int3
repz
cmp
dec
aad
enter
sub
test
shlb
adc
sbb
sti
mov
or
inc
jl
sbb
aaa
sbb
xchg
xchg
sub
push
sub
aad
outsl
jp
pop
adc
push
xchg
stos
loope
mov
mov
je
jmp
sub
rclb
mov
add
xchg
adc
je
mov
mov
lret
ss
xchg
xor
movsl
jnp
dec
rolb
add
and
daa
icebp
aam
add
imull
and
xor
pop
test
cmp
pop
sbb
arpl
fsts
in
mov
nop
and
dec
add
dec
cs
call
sbb
call
mov
rclb
nop
rorl
leave
inc
add
jo
es
adc
mov
add
cmc
adc
in
add
push
add
push
dec
in
dec
or
nop
pop
or
add
mov
sahf
je
lahf
adc
xchg
sub
mov
inc
imulb
dec
add
test
add
dec
pop
mov
loopne
push
pop
mov
xchg
cmp
fs
clc
arpl
loope
cmp
inc
daa
mov
lret
outsl
mov
rclb
jno
xor
subl
push
pop
or
inc
cmp
cmpsl
xgetbv
sub
jmp
mov
push
daa
xor
inc
shl
mov
xor
sbb
mov
xchg
sbb
add
ja
imul
outsl
sbb
and
flds
sbb
and
sarl
inc
add
pop
fsubs
cmp
fistpll
fs
pop
lds
cmp
lods
fisttps
enter
push
adc
jo
and
add
ffreep
test
mov
xchg
enter
aas
inc
loopne
stc
lods
sbb
pop
loopne
loopne
dec
and
adc
aas
adc
mov
adc
cld
mov
xchg
pop
incl
xchg
and
loop
jecxz
les
mov
mov
cmp
jle
xor
pop
xor
fbld
lahf
pusha
xchg
adc
or
loopne
imul
sub
lcall
and
ds
and
js
or
jle
insl
xchg
pusha
xchg
aas
test
pop
jne
jp
hlt
gs
shlb
in
mov
pushf
cmpsl
jbe
inc
lock
inc
je
ds
mov
loop
jmp
mov
insb
dec
lcall
cmpsl
inc
sbb
sbb
negl
add
outsb
xor
aas
dec
cmp
inc
and
mov
dec
and
sbb
push
mov
xor
pop
jg
inc
pop
lds
and
enter
and
in
adc
push
lock
test
cmp
imul
mov
ficoms
outsb
fsubl
sub
inc
xorb
or
inc
push
mov
test
push
jg
movb
stos
fwait
or
neg
cwtl
rolb
enter
or
int
mov
sbb
cs
rorb
xchg
testl
push
jmp
push
mov
jnp
enter
inc
xchg
xor
test
xor
xor
adc
enter
dec
or
adc
aam
add
adc
pop
sbb
in
ds
add
cmpsb
push
in
sub
fdivl
js
and
xor
leave
and
dec
out
or
mov
inc
adc
xchg
nop
dec
mov
mov
aaa
ljmp
pushf
xor
idivb
push
in
pop
or
push
fldt
xchg
xchg
fsubs
push
add
mov
add
lret
in
sub
jno
aam
mov
xor
lea
xor
test
or
push
dec
mov
cmp
out
push
nop
mov
lret
and
repz
mov
dec
sub
or
popa
inc
sbb
add
subl
cmp
jg
sbb
in
mov
mov
add
insl
jmp
iret
mov
push
pop
lret
out
test
and
inc
mov
inc
pop
pop
dec
inc
test
or
dec
xor
dec
push
jns
mov
inc
pop
xchg
jbe
out
jmp
jecxz
xor
pop
xchg
js
inc
in
push
mov
sub
dec
negl
popa
outsl
loope
or
test
xchg
incl
lcall
cmp
jne
xchg
mov
fnstenv
pusha
es
fcoms
and
pop
in
lock
mov
sbb
or
push
stc
rcr
dec
push
mov
stc
shrb
and
xchg
jno
or
aaa
add
inc
mov
push
push
mov
jecxz
call
and
loop
fstpl
mov
and
xor
mov
lret
insb
int
add
mov
xchg
jns
and
or
rcrl
outsl
push
adc
pop
add
pop
xor
test
adc
adc
adc
dec
or
ficompl
arpl
lahf
call
imul
adc
mov
addl
pop
dec
inc
add
mov
sub
aam
push
adc
xchg
aas
inc
mov
cmp
jne
sahf
xor
ret
push
mov
sti
clc
or
pop
std
and
cmpb
pop
sub
jl
dec
ret
daa
or
movsb
or
enter
imul
inc
push
add
cmc
bound
outsl
cmp
dec
test
lods
inc
cli
lock
add
mov
or
push
cmpl
xchg
dec
adc
or
sub
xchg
jns
adc
inc
repnz
adc
adc
jo
mov
pop
pop
push
add
sub
or
or
or
js
fadd
leave
adc
add
inc
xchg
daa
hlt
cld
adc
sub
rolb
and
testl
test
inc
xor
xor
jbe
std
adc
sbb
or
adc
and
push
jo
adc
sbb
jl
push
or
xchg
mov
xor
out
test
test
and
mov
out
jne
mov
loopne
jmp
push
adc
sub
and
hlt
jo
adc
fidivl
xlat
out
push
xchg
xor
mov
sub
xchg
clts
loopne
mov
inc
in
les
out
cld
mov
outsl
or
xchg
sub
push
and
sbb
sub
xchg
inc
sub
cs
int
push
adc
xchg
out
scas
aam
dec
scas
lahf
pop
pop
dec
mov
push
cmp
icebp
add
sub
rcll
das
icebp
out
pop
pop
xchg
cs
mov
push
adc
mov
mov
xor
add
add
cld
adc
add
sbb
push
das
pop
or
and
enter
out
scas
out
sub
adc
xor
and
mov
fiaddl
xor
mov
loopne
das
adcb
enter
shr
dec
push
xchg
inc
adcl
rcrb
jl
les
add
cmp
add
icebp
popa
jns
or
mov
mov
push
fcomip
push
or
pop
jne
pop
adc
test
xor
fsubrl
mov
jb
pop
jo
hlt
leave
mov
inc
jae
rcr
pop
sub
cmp
imul
and
xorl
mov
rclb
mov
mov
cmp
xchg
push
mov
nop
xchg
clc
cmp
mov
paddb
push
movsl
pop
adc
das
and
mov
mov
pop
imul
clc
and
sahf
test
mov
fs
mov
jnp
mov
and
adc
scas
loopne
lods
and
push
repnz
xor
or
push
imul
or
icebp
mov
inc
fisubrs
andb
sbb
xor
fwait
jno
jl
xor
pop
ds
dec
jae
call
xchg
loope
aas
jp
jbe
or
sbb
repz
nop
adc
sub
jp
add
icebp
jge
jne
inc
xchg
pop
or
and
insl
adc
adc
pop
mov
in
adc
push
inc
or
pop
notl
inc
adc
test
ds
push
cmp
push
push
popa
sbb
or
mov
das
jge
and
adc
mov
fldcw
outsl
je
mov
fadd
cmpsl
add
jle
cld
pop
push
xlat
dec
inc
jne
add
add
cli
adc
xor
jno
add
add
test
sbb
ret
pop
or
clc
add
popl
xchg
loopne
fldt
jl
pop
adc
int
jmp
and
pop
sbb
cmp
je
imul
pop
jmp
jne
das
je
or
jne
add
repz
jmp
and
aam
add
ds
mov
and
push
cmp
mov
jmp
xor
mov
add
dec
add
xor
idivb
and
movl
loop
outsl
and
andb
or
xor
jne
std
push
icebp
scas
ficoms
std
orb
cld
cmp
push
xor
mov
ds
or
std
xor
adc
jne
movsl
adc
fcmovnb
jecxz
data16
jp
adc
sarb
clc
adc
adc
mov
or
push
pop
xor
cwtl
xchg
mov
and
xchg
or
mov
negl
mov
mov
jnp
aad
jecxz
and
js
iret
fsubl
pop
call
sub
xor
arpl
icebp
add
jge
push
xor
loopne
mov
fchs
outsb
push
iret
pusha
addl
mov
mov
mov
cmpb
fcoms
ds
insb
icebp
lock
lcall
inc
in
sbb
or
jge
bound
rolb
xchg
mov
and
insb
inc
addr16
sub
jnp
dec
addl
or
sub
dec
sbb
pop
leave
shlb
push
and
ret
shrl
pop
rolb
int3
enter
outsb
mov
jo
enter
orl
and
jge
testb
movsb
loopne
les
add
mov
hlt
in
inc
and
adc
fwait
inc
add
adc
add
sub
xchg
cmp
jle
sti
push
push
or
cmp
add
pop
sbb
cmova
ret
push
cli
or
mov
adc
dec
mov
inc
pushf
jo
or
push
inc
xorb
sub
cmp
add
jl
test
push
cmc
insl
cmp
jle
and
loopne
in
mov
repnz
nop
pop
adc
rcl
or
jb
enter
cli
test
cmp
roll
sub
je
xchg
inc
cltd
aam
sbb
lret
xor
aad
sub
push
in
inc
jg
bound
mov
test
inc
vmwrite
jge
xchg
lea
sbb
pop
pusha
test
or
sbb
push
cmpl
sahf
shr
and
bound
cs
xor
add
sub
mov
pop
or
test
or
fildl
mov
push
movsl
aad
test
or
subb
cmova
push
inc
ret
pop
rolb
cmpsl
outsl
mov
and
lds
adc
fistl
sub
adc
lea
push
sub
xor
into
add
into
dec
sbb
movsl
cmpsb
and
mov
inc
movsb
adc
les
mov
push
mov
es
fmull
sub
adc
imul
into
test
popf
mov
fsubr
mov
mov
mov
stos
sbb
cld
insl
loope
sub
mov
aam
sub
jo
and
fisttpl
scas
mov
dec
mov
add
sub
rol
xlat
int
xchg
add
sbb
clc
xchg
dec
aaa
pop
adc
add
push
je
mov
ret
dec
add
mov
jmp
add
loopne
mov
stos
in
pop
inc
bound
popf
outsl
pop
inc
mov
xor
pop
sub
pop
sub
rol
in
pusha
add
or
sub
jl
inc
mov
ret
lock
and
inc
inc
jp
jne
je
dec
movsl
and
fcoms
cmp
jmp
or
add
inc
in
mul
dec
mov
xchg
iret
xabort
push
pop
gs
jmp
pusha
getsec
in
inc
or
movsb
pop
adc
xor
mov
ret
je
sub
mov
cmovo
lds
add
clc
inc
xor
es
pop
ror
adc
stc
jne
mov
daa
es
ficoml
subl
inc
mov
mov
cmp
sub
lea
incl
push
or
jne
popf
call
jle
push
cwtl
aad
fsubr
push
pop
pop
add
jmp
je
pushf
pushf
je
paddd
pushf
pushf
pushf
es
sub
pushf
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
pushf
cs
adc
pushf
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
pushf
push
pop
sbb
pushf
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
pushf
push
pop
add
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
push
pop
or
pushf
pushf
pushf
pushf
or
or
inc
sahf
pushf
pushf
push
std
icebp
dec
dec
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
ror
add
ret
xchg
inc
push
push
dec
sub
mov
add
jmp
nop
dec
dec
sbb
add
das
add
test
push
pop
call
add
mov
out
sub
and
cs
or
xchg
adc
mov
push
aas
mov
inc
add
adc
mov
adcb
addl
ffreep
sub
in
adc
imul
add
add
pop
in
sbb
add
pop
xor
mov
scas
or
xor
mov
nop
push
int3
pop
push
clc
and
mov
notl
push
dec
leave
ficoms
sbb
push
jae
inc
adc
movsl
test
xor
into
popa
xchg
imulb
outsb
mov
testl
jne
or
push
jbe
cmpsb
pop
cmpsb
xor
xor
outsl
int
sub
int
or
cmp
xchg
lds
ret
xchg
sub
outsl
inc
sbb
xor
cmpsl
push
cltd
and
das
bound
nop
inc
xor
ljmp
fistps
pop
mov
pop
stos
lea
lea
sbb
fxch
mov
or
insb
inc
inc
in
cmp
push
incl
or
push
mov
inc
das
dec
or
test
mov
mov
push
ss
js
pushl
add
cmp
movsb
push
aaa
pop
inc
mov
addr16
mov
or
xchg
and
sbb
or
or
adc
add
pusha
or
mov
sub
cmpsl
push
adc
jp
or
push
or
or
or
cmpsb
shll
push
xchg
lods
cmpsb
or
sub
loope
dec
and
mov
or
sbb
das
insl
push
sbb
adc
int3
dec
ud1
mov
push
push
popa
pushf
xor
cmp
mov
imul
inc
pop
or
js
dec
cs
add
jg
cmp
jo
mov
jmp
cmp
jns
or
loopne
leave
sarl
or
dec
test
xor
ret
adc
es
jl
push
xor
xchg
jne
sub
push
or
dec
cmpsb
pushf
int3
xlat
adc
mov
lock
sub
inc
add
mov
test
and
imul
push
pusha
xor
sub
adc
pusha
shll
sbb
pop
adc
inc
jnp
xor
sbb
jle
adc
pop
inc
add
sbb
sub
sbb
inc
outsl
lods
push
cwtl
add
addr16
sub
add
mov
sbbl
filds
mov
cwtl
pop
pop
xchg
stos
mov
mov
push
mov
adc
adcl
adc
mov
xor
and
and
sbb
cwtl
dec
enter
pop
cmp
sbb
scas
xor
or
inc
in
aam
and
les
jl
inc
push
fs
es
je
movsl
aas
push
or
enter
pop
add
add
or
add
ja
push
das
add
or
adc
enter
cltd
mov
add
test
or
fmuls
adc
in
setno
mov
das
pop
push
loope
adc
jl
add
adc
aam
in
and
adc
jb
dec
xchg
aam
adc
inc
pop
mov
out
xor
xchg
imul
xchg
mov
out
test
inc
and
inc
subb
sbb
add
in
xor
inc
adc
push
adc
loopne
jge
insl
rolb
mov
inc
cmp
xchg
shrl
or
xlat
pop
pop
xor
lret
and
mov
push
xor
dec
add
cs
aaa
js
nop
aaa
mov
mov
add
push
mov
int3
icebp
xchg
rcr
dec
dec
outsl
mov
dec
sub
or
popf
sub
bound
cmp
cltd
pop
adc
mov
or
ljmp
add
adc
flds
aas
rcrb
lcall
add
push
adc
lea
and
xchg
xchg
or
aaa
xor
and
and
and
adc
imul
pop
adc
nop
pop
insb
add
inc
dec
lea
cmp
movsb
cmp
rcl
jecxz
popa
nop
fdivs
lret
xor
inc
jmp
ss
xor
inc
popf
mov
sbb
and
lret
jmp
mov
xor
pop
jle
cmp
test
int3
movsl
in
mov
arpl
pop
pusha
imul
movsl
pop
pop
sub
fbstp
aas
popf
addb
pop
pop
or
add
jge
or
xchg
adc
add
push
cli
pop
lcall
fwait
push
ljmp
jmp
jmp
insb
jecxz
mov
or
sbb
add
mov
test
cmp
faddl
pop
loopne
enter
fdivrs
fadds
shl
and
jmp
in
in
leave
add
push
nop
adc
inc
out
imul
pop
hlt
fwait
push
dec
add
cs
or
aaa
mov
hlt
pop
pop
sub
mov
add
sbb
and
fs
adc
imul
hlt
or
lea
outsb
adc
ret
rolb
pop
sub
test
lret
and
lock
insl
push
push
inc
test
imul
inc
imul
shr
clc
pop
mov
mov
dec
xchg
imul
push
jmp
mov
sub
div
and
push
or
mov
scas
xor
rclb
int3
push
push
xchg
stc
add
shlb
jg
or
rcrl
cmpsb
movsb
clc
add
adc
lret
inc
pop
call
dec
fwait
add
inc
push
into
push
ja
mov
or
incb
or
push
movsb
popa
loop
imul
lock
fcomps
insb
stos
scas
cmp
incb
jmp
in
mov
fldcw
outsl
movsb
aam
pushf
fmuls
sarl
leave
test
repz
or
xor
nop
xchg
lret
in
sbb
addr16
sbb
movb
addr16
or
movsb
jbe
popa
push
add
sbb
or
push
insb
xchg
in
insb
adc
test
push
adc
dec
push
sub
push
push
or
or
or
push
or
push
lret
imul
inc
lea
and
lret
jp
jbe
lea
add
inc
repz
push
push
or
or
sarb
leave
or
or
xor
shll
push
lahf
mov
out
enter
sub
iret
pop
cwtl
mov
iret
and
and
or
or
pop
and
push
out
push
jecxz
push
push
inc
sub
adc
push
inc
stos
arpl
dec
mov
and
jne
into
lea
hlt
push
xchg
movsb
xchg
mov
add
hlt
sub
xor
hlt
lea
push
lahf
lret
sbb
xchg
mov
les
stos
icebp
xchg
sub
fadd
add
cwtl
inc
stos
in
fsubrs
ja
sbb
xor
adc
xchg
pop
sbb
dec
add
push
lea
pop
pop
and
adc
mov
xor
pop
push
popa
loop
adc
push
add
pushf
or
sbb
and
and
xchg
inc
jecxz
dec
lea
in
scas
js
xchg
cmpsl
or
pop
xchg
dec
sbb
mov
cmp
jbe
push
add
xchg
push
mov
mov
sar
and
not
add
sbb
bound
jno
sbb
mov
je
stos
or
or
outsl
pop
dec
test
mov
and
inc
movsl
repnz
aas
cmp
fs
push
or
scas
test
push
or
nop
leave
inc
sub
push
xchg
andl
xchg
inc
push
leave
and
pop
mov
push
loop
test
data16
add
pop
push
daa
in
pop
and
nop
and
and
nop
xchg
or
and
and
js
test
enter
push
and
inc
and
and
and
dec
pop
and
adc
nop
test
and
nop
outsb
rorl
sbb
adc
adc
sub
or
and
in
and
loopne
ja
dec
or
pop
adc
push
xchg
cli
or
cmp
jge
enter
nop
sarb
jmp
sbb
out
and
int3
jmp
sbb
jmp
sub
xchg
inc
or
xchg
adc
push
scas
mov
add
mov
inc
div
adc
fmull
adc
ret
nop
push
mov
ljmp
or
insl
xor
ss
cltd
icebp
pop
loop
sahf
mov
and
jo
xor
fists
xchg
les
jmp
loop
xor
daa
lods
punpckhbw
pop
jp
dec
inc
je
or
push
roll
or
in
jl
gs
jg
jno
add
or
cmp
int
cmp
adc
rcll
movsl
jmp
popa
sub
push
mov
mov
and
adc
test
jb
fistpll
pop
leave
sbb
popa
fistps
nop
push
enter
and
xor
fists
cmp
test
push
cmp
cmpsl
xchg
unpcklps
jmp
sbb
cmp
mov
and
jecxz
sub
pop
enter
loope
popf
pop
shrl
pusha
push
adc
push
sub
sub
add
push
jmp
sub
in
dec
insb
xor
sti
inc
mov
repz
shl
dec
decb
and
adc
inc
add
adc
ja
or
cmp
xchg
movsl
lahf
pop
or
jbe
rcl
jbe
fidivrl
pop
add
pop
pop
push
leave
jno
mov
inc
adc
add
or
push
and
sub
and
sbbl
inc
popf
rcll
adc
out
shll
pop
pop
and
cmpl
push
dec
leave
add
xchg
jbe
inc
pop
xchg
fnstsw
adc
cs
js
sub
and
aas
dec
push
or
insl
cmp
les
int
daa
xchg
cwtl
sub
adc
and
push
cs
and
jp
mov
outsl
push
out
dec
dec
pop
je
cwtl
cltd
sbb
push
sahf
push
mov
pop
movb
sbb
pop
push
jmp
dec
push
ret
inc
cmp
push
test
fsubr
sbb
pusha
std
fisubrl
mov
rorl
pop
and
mov
pop
fildll
cmp
js
push
lock
lods
and
lods
push
and
clc
cmp
filds
int3
cmp
es
enter
rorb
es
or
aam
dec
mov
lods
push
rcrb
inc
mov
aam
jl
jns
ja
adc
inc
xor
xchg
sbb
aam
repnz
repz
and
cmp
clc
or
or
adc
add
das
jnp
movl
test
mov
rol
pop
movsl
je
push
mov
aam
movsb
in
sbb
inc
mov
inc
or
mov
lea
pop
xor
rclb
pop
pop
adc
and
sub
xchg
icebp
fsts
test
pushw
jge
pushl
sbb
inc
cld
ret
cmp
xchg
mov
add
xchg
mov
sbb
cmp
pop
push
sub
add
enter
sub
out
cwtl
ja
or
call
sub
out
hlt
jl
cmp
mov
and
add
addl
andl
cmp
xchg
jecxz
test
insb
inc
sbb
adc
add
pusha
dec
stos
jecxz
dec
jge
loop
xlat
cmpsb
mov
imul
sbb
enter
push
enter
or
cmp
push
int3
insl
je
dec
sub
and
mov
cld
js
rorl
jne
inc
pop
jg
es
stos
push
loop
inc
sbb
pop
leave
fdiv
and
sbb
mov
mov
or
pusha
or
adc
in
negl
adc
or
mov
loopne
ljmp
fldt
xchg
inc
adc
inc
mov
jl
outsl
or
lret
add
xor
call
das
push
test
das
cmp
inc
sbb
sbb
or
xor
cmp
jge
jle
ret
test
or
adc
or
shlb
xchg
or
test
jbe
or
jbe
lret
xor
pop
or
xchg
sbb
sbb
insb
mov
pop
cld
ds
cmp
test
cld
or
les
ret
cltd
lret
pop
mov
jns
out
xchg
clc
clc
insl
pusha
jo
repz
iret
pop
jl
push
clc
nop
xor
or
xor
cs
shll
or
xor
push
adc
movsb
ret
mov
fdivrs
leave
add
push
push
and
enter
jle
pop
cmp
cmp
xchg
cmp
jg
sbb
insb
xorl
popa
sub
xorl
mov
mov
mov
and
jg
push
push
daa
pop
imulb
popa
inc
xor
cmc
push
aas
sub
and
sub
dec
andb
adc
lods
mov
gs
movsl
or
adc
jno
pop
outsb
push
sub
xchg
and
fcmovb
dec
jge
inc
das
mov
sub
rorl
lock
add
data16
bound
inc
stos
daa
daa
sub
sbbl
aas
dec
adcl
dec
dec
and
idivl
andb
in
stc
adc
dec
inc
mov
cld
movsl
stc
push
jb
test
mov
sbb
mov
add
push
add
xchg
jge
clc
inc
add
std
adc
mov
gs
sahf
cmpsl
fmuls
loop
in
cmp
mov
or
add
push
cli
inc
adc
ret
sarb
or
loopne
adc
nop
pop
xchg
dec
enter
adc
xor
push
and
das
or
add
jns
pop
fadds
push
add
push
sbbb
or
or
outsb
dec
sar
adc
and
dec
jg
dec
xchg
push
push
lret
jo
mov
test
clc
or
sub
sarb
jp
insb
sti
mov
or
push
pop
dec
test
jge
dec
and
push
aam
call
jle
les
add
cmp
gs
scas
insl
add
adc
or
out
fisttpl
push
jp
add
lock
add
sub
and
sbbl
or
rol
sbb
shll
cmp
cmpsl
sbb
xchg
xchg
sbb
or
iret
in
addr16
adc
mov
popa
xor
pop
adc
lea
icebp
add
or
adc
jbe
mov
sub
xchg
inc
cld
inc
xor
pop
push
and
adc
xor
xor
xor
sub
je
add
adc
adc
push
xor
or
sbb
push
dec
ret
or
mov
and
inc
or
or
mov
mov
repz
bound
out
and
les
movsl
test
jl
loop
enter
hlt
mov
inc
arpl
push
push
xor
inc
push
popa
test
and
shlb
pop
mov
adc
pop
inc
push
mov
adc
pop
in
dec
or
lahf
xor
push
mov
sbbl
push
inc
dec
rcll
adc
cmp
pushf
pop
cmpb
sub
add
test
add
xchg
dec
inc
iret
pop
cmp
hlt
fcoml
add
push
pop
inc
addb
cli
int3
outsl
mov
pop
lret
cmpsb
or
sub
sqrtps
leave
incb
adc
jbe
int3
adc
sqrtps
hlt
ret
pop
push
dec
sahf
sbb
dec
cmp
push
fildll
leave
je
cmp
or
push
cmp
adc
pop
ds
and
ret
andl
adc
insl
fisttpl
rorb
cld
dec
push
rorb
seto
add
fs
pusha
dec
and
and
cmp
cmp
push
cmc
and
cmp
add
inc
mov
ds
adcl
call
and
adc
adc
jmp
hlt
ljmp
cs
add
cmp
mov
lods
mov
sub
add
scas
out
mov
xor
jecxz
cmp
inc
adc
mov
das
sbb
cwtl
fisttps
and
add
test
leave
in
xchg
icebp
sub
rcrl
mov
fs
in
inc
inc
ja
daa
and
inc
in
inc
dec
xchg
decb
and
imul
cmp
add
adc
imul
xchg
xor
mov
add
and
sub
inc
jb
shlb
pop
mov
dec
imul
sbb
add
leave
or
cmpsb
xor
adc
push
fs
inc
xchg
xor
mov
or
outsl
mov
inc
cld
inc
sub
aas
addr16
fiaddl
add
ds
xchg
inc
ds
sarl
or
pop
insl
add
add
out
add
xchg
sarl
add
add
test
add
mov
mov
out
adc
or
sbb
scas
dec
push
pop
adc
int3
inc
movsl
inc
mov
rep
add
mov
or
xor
or
mov
or
in
orb
and
rcl
sub
lret
movb
loopne
inc
or
add
sub
inc
mov
pop
inc
or
inc
inc
enter
cmp
flds
add
rclb
or
push
dec
ret
sbb
sahf
bound
inc
mov
lret
ja
enter
das
and
push
and
fsubl
roll
inc
add
imul
cwtl
rolb
outsl
xlat
out
ret
clc
xlat
ja
lods
pop
or
xor
inc
cmp
push
fsubrs
jge
addr16
and
test
sbb
data16
inc
adc
ja
sub
pushf
bound
add
and
and
into
and
and
ret
insb
or
mov
push
add
test
cld
sbb
or
sbb
xchg
int
cld
dec
insb
movsb
insb
das
mov
adc
push
xor
and
lahf
or
and
scas
mov
push
shr
insl
xchg
sub
push
adc
fadds
add
stos
ja
xchg
lea
xchg
fimull
repnz
inc
inc
xlat
xor
jb
jl
jg
fsub
mov
rorl
shlb
and
adc
insb
leave
rol
push
pop
mov
adc
insb
pop
push
leave
dec
movsl
cmp
xor
fmull
or
or
cmc
adc
adc
jp
imul
pop
cld
mov
rorb
negl
insb
nop
pop
test
mov
stos
mov
sti
inc
ja
cmp
jae
clc
mov
pop
sbb
test
sub
or
int
fstpt
add
mov
fsub
sbb
jp
fisubl
push
push
mov
sbb
sbb
outsl
add
movsb
lods
push
shll
mov
sub
inc
add
sub
ss
stos
xor
cmc
movl
scas
pusha
push
pop
adc
fisubrs
push
faddp
dec
dec
xor
mov
sub
xchg
dec
ficoms
and
dec
test
fstl
cli
out
or
mov
mov
adc
stos
dec
mov
mov
adc
les
push
fbstp
leave
or
inc
ds
and
adc
push
sub
push
daa
xor
nop
xchg
xchg
cmp
hlt
dec
cmpsb
insb
and
dec
pushf
mov
xchg
aaa
test
inc
jb
in
dec
sub
les
in
dec
mov
cmpsl
dec
scas
in
scas
dec
loope
cmp
js
fsubrl
dec
cwtl
cmpsl
pop
or
les
xchg
pushf
in
dec
fs
inc
push
inc
inc
lods
dec
dec
sbbl
mov
jmp
and
jg
inc
or
je
add
jmp
dec
sahf
mul
cmp
jmp
sbb
pop
jb
mov
xor
push
dec
rclb
inc
inc
inc
ss
pusha
cli
leave
or
into
popa
test
dec
insl
aad
pop
outsl
arpl
adc
pop
fcmovb
cmp
movl
lods
bound
jmp
outsb
scas
or
mov
jo
shlb
adc
ret
test
nop
dec
or
dec
lea
adc
add
mov
mov
pop
test
cmp
dec
in
inc
scas
inc
inc
fcoml
add
mov
xchg
test
sub
aas
dec
cmpsl
xchg
les
cmpsl
jno
test
jmp
loope
in
in
adc
jmp
sbb
and
ret
jg
or
inc
aad
inc
js
pop
adc
adc
jae
xchg
insl
test
add
push
dec
aaa
movsl
mov
and
and
or
ret
jge
daa
inc
enter
dec
inc
popa
test
adc
test
ds
int3
movzbl
xchg
jmp
lea
lds
sub
push
call
fsubrs
push
xchg
xchg
sub
ret
cs
cld
mov
mov
leave
adc
movsl
xchg
and
mov
ficomps
jbe
adc
xor
es
cmp
pop
sub
scas
test
xor
push
jmp
pop
sub
lret
sub
sbb
mov
incb
push
add
pop
dec
mov
lods
add
or
test
or
dec
ret
sbb
cwtl
bswap
popa
pop
dec
in
inc
lret
cmp
movsb
push
or
aas
and
popa
adc
dec
mov
ja
je
adc
xchg
in
dec
rcrb
xchg
cmp
rcll
xor
inc
data16
adc
call
sub
sbb
or
mov
clc
jl
pop
fiadds
add
test
das
js
cmp
xor
sub
rol
inc
cltd
mov
lret
add
adc
adcl
dec
mov
loopne
and
inc
popf
sbb
in
lea
sarb
dec
and
jno
xchg
or
dec
adcb
add
jb
jne
dec
dec
cmp
nop
orb
inc
or
das
dec
pop
adc
repz
xor
clc
negb
lock
jmp
push
repz
dec
dec
ret
insl
pop
xlat
mov
add
ds
scas
iret
or
mov
imul
movl
shlb
add
fmuls
cmp
xchg
xor
cwtl
rcr
orb
add
xor
inc
pop
push
movsb
add
aaa
jge
leave
in
cmp
je
lds
test
je
nop
xchg
dec
adc
ljmp
dec
adc
aaa
pop
call
hlt
flds
xchg
dec
add
mov
movsb
adc
mov
add
rcl
test
xchg
je
jmp
jge
test
pusha
push
dec
add
rol
and
shrb
bound
sub
add
inc
add
repnz
loopne
push
fwait
nop
push
cmp
iret
sbb
je
adc
sub
mov
xchg
inc
sbb
sub
or
or
mov
das
pop
popf
pop
aad
push
das
lcall
icebp
sub
push
add
jmp
sub
rcll
je
xor
in
insb
mov
or
outsb
cmp
decl
addr16
pop
dec
iret
mov
pop
nop
dec
or
dec
add
xchg
fnsave
or
push
dec
cmpsl
into
mov
movzbl
add
add
add
subb
out
xor
cli
movsl
add
insl
pop
or
add
lcall
sbb
fcmovnbe
xchg
in
mov
mov
rcrb
sbb
mov
or
movl
cmp
mov
les
adc
xor
mov
scas
push
adc
dec
xchg
cmp
dec
sub
dec
imul
adc
rcrl
ret
std
inc
lea
jg
loopne
mov
out
jle
sub
jno
je
jp
insb
jo
push
xor
or
add
jmp
js
es
adc
jmp
lcall
pop
xor
and
cmp
pop
mov
inc
clc
test
decb
add
or
mov
add
cmp
sbb
push
js
shrl
xchg
lea
pop
jnp
fcmovb
xlat
pop
aas
lret
es
xchg
adc
jbe
cmp
pop
dec
or
xchg
imul
mov
jnp
rclb
dec
daa
rcll
xchg
xor
or
lret
adc
out
mov
add
std
and
pushf
push
shl
ljmp
inc
add
rorb
jecxz
sbb
aad
in
jmp
fistps
cs
out
clc
js
ljmp
dec
js
push
dec
fldenv
or
stos
jg
mov
loopne
and
insb
fnstenv
movsl
fistl
xor
adc
mov
clc
packsswb
pop
dec
cs
and
iret
hlt
ds
lret
movsb
mov
clc
push
idivl
iret
roll
in
call
mov
mov
inc
and
sub
sbb
ljmp
lea
mov
mov
mov
idivl
leave
out
jge
dec
je
ja
sub
jno
ljmp
loop
pop
lock
xor
adc
push
sar
and
pop
xchg
dec
mov
xchg
lds
dec
int3
cmp
scas
mov
mov
movsb
lods
mov
loope
subb
pop
and
mov
mov
cmp
enter
inc
neg
mov
dec
lcall
and
xchg
adcl
inc
daa
adc
add
lods
cmp
inc
pop
sub
or
repz
incb
adc
push
pop
push
push
cld
jle
or
lahf
adc
and
sbb
dec
roll
jae
in
adc
jo
jbe
jnp
jne
xor
inc
and
and
dec
xchg
or
rorl
repnz
in
push
push
loopne
sbb
iret
fsub
push
int
leave
adc
insl
add
sbb
outsl
clc
push
adc
xor
fdivrl
mov
jl
add
dec
in
mov
test
dec
push
es
or
movd
ss
sub
and
dec
adc
pop
sub
shr
sub
lock
int3
rcl
push
aas
xor
pop
jae
or
imul
inc
movsb
imul
ret
jge
in
push
and
add
pushl
mov
sti
dec
mov
dec
jno
data16
sarb
push
push
mov
mov
and
mov
xchg
mov
fadds
je
push
mov
pop
or
int3
jo
rcll
fwait
push
xor
loop
fs
xchg
repz
pusha
pusha
inc
add
sub
and
add
cmp
sahf
inc
repnz
movsb
and
cmp
fs
push
jbe
pop
rorb
fsubs
mov
icebp
fisttpll
adc
insb
pop
movsbl
and
sarb
sub
icebp
cmp
jge
pop
mov
dec
xor
clc
int
loopne
fbld
js
push
sbbb
scas
es
push
dec
push
in
aaa
sbbl
xor
push
std
xor
add
cmc
repz
dec
dec
rcll
cltd
add
pop
xchg
adc
insb
jns
mov
mov
sbb
jg
pop
inc
pop
daa
mov
stc
adc
jecxz
outsl
xchg
and
sbb
sbb
sub
jmp
xor
xor
adc
shll
loopne
je
mov
and
movsl
push
repnz
adc
fisubs
sahf
jge
movsl
mov
xchg
inc
mov
pop
fdivrs
loop
mov
sbb
push
dec
inc
xor
or
enter
mov
jnp
fidivl
push
aaa
sbb
ret
jmp
push
push
push
jle
lock
aad
enter
mov
ja
xchg
fiadds
push
movsb
fcmovne
jle
adc
neg
cmp
jg
xor
mov
mov
push
xor
arpl
cs
jle
jle
xor
sub
mov
push
std
dec
loopne
ss
push
adc
push
jecxz
inc
loop
clc
leave
popa
rorb
xchg
movlps
adc
ja
inc
and
lea
and
data16
aam
sbb
pop
cltd
mov
mov
and
jmp
fs
and
das
dec
sub
inc
and
jmp
outsb
xor
rclb
int3
pop
dec
cmp
jl
pushl
dec
in
cmp
adc
loop
out
mov
pop
das
or
js
bound
sbb
pop
nop
orl
xor
jbe
adc
xchg
mov
adc
sbb
xchg
fwait
mov
sahf
dec
fwait
popa
and
fstps
movsb
js
dec
cwtl
aam
std
lea
in
push
in
push
sbb
icebp
push
push
fistpll
dec
test
jo
xchg
push
adc
jo
xor
xchg
or
addb
cmp
fidivrs
or
imul
mov
or
movsl
add
add
cmp
jl
lock
fcoms
insl
and
jb
insb
push
sarb
ret
cmpsl
sbb
xchg
int3
add
push
and
mov
push
fildll
iret
adc
jecxz
cmpsl
sub
ss
or
xor
ret
lret
xchg
je
inc
jne
clc
clc
push
pop
stos
and
xor
sbb
and
push
cmp
stos
mov
or
adc
clc
push
insl
push
pushf
xchg
test
lock
push
pop
sub
leave
jmp
cmp
call
sbb
loopne
in
in
js
sbb
fnstsw
fidivrl
outsb
jb
bound
loopne
loopne
sbb
fcoml
push
jg
push
lahf
cmp
cmp
ret
xchg
mov
xor
lea
lahf
sub
dec
and
pop
sbb
sub
push
rolb
dec
mov
push
out
xchg
imul
loope
jmp
popf
adcl
xor
shrb
repnz
or
add
pop
mov
adcb
fwait
rclb
push
adc
dec
fwait
cmp
sbb
out
cltd
mov
aas
and
push
mov
xchg
movsl
push
into
inc
mov
or
in
loopne
popf
xor
pop
test
jl
xor
aaa
adc
jb
sbb
mov
imul
sbb
icebp
xchg
mov
outsb
and
fwait
add
imul
lods
xor
testl
imul
stc
cld
jg
bt
setb
test
jne
cmp
jl
cmp
add
ret
fsubl
cmp
and
idivl
in
and
ficoms
iret
movzbl
inc
ljmp
xor
enter
out
and
mov
or
push
sarl
jl
sbb
inc
mov
sbb
push
pop
sub
or
popf
and
add
xchg
pop
push
mov
push
cmp
push
pop
outsl
fdivrl
dec
ret
sbbl
repz
adc
or
xor
pop
sub
bound
outsl
iret
mov
cmp
pop
xchg
mov
add
int3
xchg
jecxz
shl
or
out
loope
or
and
push
push
mov
add
mov
mov
push
pop
mov
incw
outsb
lock
jb
mov
add
cmpsb
pop
in
sarl
mov
test
iret
add
rclb
dec
fldenv
add
and
mov
xchg
out
xor
lcall
out
out
add
ljmp
sti
fisttps
rorl
jl
adc
push
test
movsl
data16
sbb
popf
jmp
fldl
ret
sbb
or
push
lock
or
lret
ret
fcoml
dec
dec
getsec
mov
jg
xlat
or
jne
mov
in
mov
sti
adc
sbb
je
aad
imul
fnsave
or
pop
and
mov
inc
and
andb
notl
pop
mov
int3
inc
push
jl
sub
rol
sahf
jae
data16
mov
fmuls
in
inc
push
pop
arpl
cmpsl
inc
pop
mov
jbe
pop
test
add
fcomp
mov
and
or
or
push
outsl
sbb
daa
mov
inc
fs
inc
mov
rorb
cli
add
subl
jbe
rolb
decl
mov
sbb
add
notl
je
inc
jmp
dec
adc
xor
jmp
sub
mov
adc
addl
add
sub
jno
mov
out
dec
or
ds
ret
push
fucomp
adc
cmp
loope
adc
mov
testl
sti
mov
decl
add
mov
addb
jmp
nop
pop
xor
cmc
add
mov
mov
or
fldl
mov
test
lcall
repz
repz
jle
repz
push
or
add
xchg
lea
jo
mov
jnp
jl
or
lods
roll
mov
jo
pop
or
or
loope
out
movswl
cmp
jg
mov
inc
cmc
subb
mov
ljmp
call
flds
inc
and
rclb
add
out
jbe
sub
shr
push
int3
sub
add
rclb
inc
add
add
cmp
addr16
jmp
inc
inc
mov
sub
or
fwait
leave
stos
movsb
ds
sbb
or
push
fbstp
test
pop
in
sub
jl
inc
dec
rcrl
hlt
repnz
cmp
cmc
and
mov
inc
stc
clc
jl
and
lcall
add
or
cmp
adc
add
cs
mov
push
sbb
lea
je
xor
movb
testb
xchg
mov
dec
sbbb
mov
mov
or
lea
inc
and
sub
sbb
test
hlt
outsl
addr16
ds
or
jmp
add
sub
std
add
mov
adc
jl
add
push
shl
add
mov
cmovge
in
jne
and
lods
dec
loopne
jb
dec
inc
adc
mov
pop
cli
and
jle
mov
sbb
pop
cmp
cmp
jl
add
sub
mov
sbb
pop
or
fisubrs
xorb
cmpb
jb
mov
xchg
lret
add
add
lods
incb
sbb
notl
add
xchg
imul
popf
sbb
push
sub
mov
pusha
xorb
add
test
pushf
push
dec
mov
mov
mov
cmpsb
adc
inc
push
mov
or
mov
xchg
neg
adc
dec
fidivrl
sbb
mov
ret
insl
cld
jmp
adc
lods
dec
and
popa
movsl
adc
cmpb
push
or
push
enter
inc
add
jg
dec
scas
mov
adc
mov
shll
popa
or
jle
flds
push
andb
outsl
sub
push
clc
je
ljmp
popf
or
imul
mov
jb
add
std
loope
andb
cmp
jge
popa
or
out
adc
xor
mov
pop
and
and
inc
xchg
imul
add
insb
mov
add
push
sub
in
lcall
mov
sbb
sti
lea
fcmovu
lcall
ret
dec
orb
mov
ret
and
mov
jne
cmpsl
xchg
imul
jnp
dec
adc
mov
push
or
xchg
push
js
and
adc
ret
jmp
stc
out
cmp
ficompl
fdivs
adc
add
in
adc
pop
mov
outsb
movsl
mov
pushf
cmpsl
inc
aas
mov
cmp
fimuls
and
xchg
or
fs
mov
das
sub
dec
lret
push
sbb
rcrl
sbb
jae
push
rclb
dec
ficompl
cs
into
sub
nop
fstps
push
aam
inc
mov
mov
sahf
mov
sbb
sbb
push
int
pop
xor
jge
inc
into
xor
and
sbb
ret
or
pushf
adc
int3
addr16
push
jnp
jmp
inc
add
test
dec
jecxz
fdivs
insb
popa
jg
jl
inc
mov
std
push
imul
je
push
fsubl
jmp
mov
push
push
fucomip
and
and
lods
add
call
aas
pusha
pop
jno
jb
call
add
push
adc
cmpsb
lods
dec
arpl
les
lahf
cmp
xor
mov
lea
mov
adc
popa
insl
ss
pop
jl
xor
jg
loopne
push
xcrypt-ofb
cmpsl
test
lret
les
inc
out
dec
sub
test
or
pusha
sub
mov
jl
adc
shr
pop
jecxz
xchg
and
incb
adc
dec
aam
or
test
inc
loop
ja
stc
dec
jns
pop
insl
pop
or
sbb
sbb
iret
pop
mov
call
movsb
xor
scas
les
adc
les
pushf
push
or
xorb
in
mov
mov
or
pop
push
add
inc
xor
lods
rclb
fs
pop
push
iret
call
push
dec
fdivl
repz
in
xor
sti
ja
icebp
and
pop
and
inc
sbb
inc
inc
movsb
jp
sbb
dec
push
adc
sbb
and
jnp
or
push
mov
imul
sub
jne
jle
and
or
imul
testl
in
pop
push
mov
imul
dec
push
sub
aas
jb
mov
mov
or
shll
push
cmp
kmovb
mov
mov
sub
mov
jb
pop
sbb
sub
ror
inc
imul
inc
mov
sub
xchg
sub
daa
jbe
adc
mov
lea
sub
lods
pop
push
add
add
popf
cltd
push
xchg
mov
jl
push
add
jecxz
sub
pshufw
push
movq
aas
nop/reserved
inc
pop
shlb
xchg
imul
ret
jnp
ret
lods
dec
add
xor
pop
test
fcoml
popf
cs
test
sbb
add
std
pop
sub
movsbl
cmp
cmc
jnp
pop
or
out
mov
iret
sub
dec
or
stos
cmp
cmp
std
mov
add
mov
sub
loop
stos
and
mov
fimull
loop
rcll
pop
xor
std
jl
dec
xor
enter
inc
xchg
test
xor
mov
cmp
pop
mov
jno
mov
xchg
push
orl
fnsave
je
xchg
test
sub
or
int
push
pop
cmp
jne
dec
shll
or
shll
sahf
add
mov
dec
or
adc
push
jg
ljmp
push
mov
das
shl
sbb
inc
or
mov
jbe
adc
out
adc
push
add
or
xchg
test
arpl
adc
and
add
mov
filds
sub
add
call
and
cltd
outsb
sbb
and
push
add
test
pop
cld
inc
add
inc
or
aaa
adc
cmpsb
inc
test
xor
sbb
inc
cmp
jl
movsb
sub
lock
testb
mov
xor
out
jne
incl
pop
sbb
pusha
data16
in
rolb
xor
es
daa
push
aas
hlt
push
sahf
and
in
popf
out
daa
mov
push
cltd
and
mov
mov
pop
inc
adc
xor
call
aam
add
jmp
jne
fildll
fcomps
std
pop
ss
adc
les
sub
fbstp
sbb
loopne
or
sub
and
in
cs
sbb
and
popa
dec
inc
push
ja
jne
mov
ljmp
cmc
js
xchg
xor
push
adc
and
adc
jg
clc
jmp
add
sbb
test
cmp
sbb
jecxz
xor
fdivrs
outsl
out
and
mov
dec
xchg
xchg
or
rolb
jmp
int
sub
inc
or
shlb
mov
test
jmp
xor
push
xor
ret
ss
pop
dec
in
push
xor
mov
les
jne
addb
jl
lds
inc
xchg
xchg
and
or
movl
add
inc
int
fisttpll
xlat
jle
push
sub
outsl
jbe
ret
mov
push
or
cmpl
add
cmp
lock
cmp
jp
movl
and
fisubs
faddl
xchg
sub
xor
add
out
cwtl
adc
sbb
pop
mov
push
subl
unpckhps
in
imul
sub
mov
add
loopne
in
mov
in
out
call
cmc
js
push
mov
imul
mov
sbb
lds
fidivl
xor
test
mov
clc
mov
imul
dec
pop
sarl
pusha
jge
cmp
inc
dec
adc
or
pop
sbbl
add
mov
and
sti
jg
pop
sbb
shlb
adc
or
jle
xor
add
arpl
dec
dec
xorl
imul
mov
pushl
test
jmp
in
push
sub
jne
dec
and
rolb
push
xor
shll
das
add
test
mov
pop
pop
rcll
sbb
adc
push
inc
flds
sbb
or
push
xchg
mov
xchg
add
mov
addr16
into
or
cmp
and
push
sbbb
cmp
push
dec
pusha
orl
ja
std
je
dec
je
push
ja
mov
dec
adc
lcall
xchg
in
mov
jl
in
jo
pop
jne
nop
sub
dec
xchg
aam
cmpsl
lea
dec
pop
das
push
dec
xchg
dec
or
iret
adc
fisttps
inc
rcr
mov
cmp
ja
imul
push
push
iret
sarl
xor
sahf
out
flds
mov
push
ja
push
add
popf
sbbl
hlt
dec
cs
push
or
and
add
pusha
mov
push
andb
fwait
or
inc
roll
mov
pop
push
and
pusha
jp
mov
nop
add
adc
sbb
aas
sub
xor
or
pop
sub
sbb
aas
frstor
enter
xchg
and
aas
cmp
enter
int
test
imul
mov
out
mov
testb
je
add
or
mov
and
sbb
and
ret
xchg
insb
inc
cmp
jbe
jmp
call
cmp
dec
jecxz
cmc
mov
dec
mov
push
mov
mov
subb
cmpsl
pop
jge
rclb
add
shrl
enter
xor
ja
cld
clc
dec
dec
sbb
jg
xor
dec
cmp
jmp
push
fisttpll
cmp
test
into
xchg
jp
js
or
sbb
jp
sbbl
movsb
add
sahf
lock
and
aas
repz
sub
mov
jl
sub
adc
bsr
cmpl
jle
int3
push
cld
and
fucomip
punpcklbw
pusha
fdivs
or
mov
cmp
push
fnstenv
andb
xor
and
xchg
add
repz
or
hlt
add
leave
add
imul
add
dec
scas
dec
test
out
arpl
mov
shll
js
in
rcl
mov
mov
insb
cmp
or
sub
push
sub
sbb
xor
lock
ret
cmp
add
mov
mov
sub
outsb
popf
imul
xchg
sahf
rol
push
xor
or
out
inc
lock
repnz
movsl
mov
mov
push
xor
dec
xchg
push
xor
les
push
clc
jne
imul
mov
jmp
dec
sub
sbb
cmpsb
adc
lds
mov
bound
lret
pop
push
andl
cmpsb
push
xchg
pcmpgtw
cmp
sub
xor
or
xor
iret
xchg
dec
xchg
jp
cmp
mov
loop
rol
test
fcmovb
mov
mov
push
xchg
push
ret
das
std
push
inc
push
xchg
cmpsl
sbb
add
inc
out
sbb
movsl
sbb
xor
or
dec
ret
mov
sub
movsl
enter
shrb
sub
inc
mov
add
pop
mov
or
divl
adcl
mov
int
adc
inc
mov
insb
out
xlat
popa
and
push
push
xchg
push
lcall
and
add
xor
mov
dec
and
or
mov
sbb
cmpsb
sarl
mov
pop
or
push
inc
adc
rclb
clc
shlb
adc
jge
adc
push
sub
jmp
xchg
adc
add
loopne
cltd
dec
or
jecxz
mulb
add
mov
cmp
xor
addb
cmp
ret
add
mov
pop
fildl
sbb
cwtl
mov
ss
flds
mov
dec
hlt
es
aam
neg
pop
sub
aam
inc
cmp
nop
push
adc
jne
les
jnp
mov
movsb
sbb
inc
cmp
adc
leave
xor
jle
lock
andl
or
jmp
or
fcompl
push
loope
test
addl
xchg
cmp
test
dec
ja
loopne
mov
xchg
or
xchg
cltd
inc
sub
ret
fs
ret
xchg
xor
dec
ret
lret
inc
fisubrl
pop
jne
and
mov
xlat
test
mov
mov
sbb
dec
add
mov
add
cmp
ljmp
pusha
fisubrs
fistl
pushl
mov
dec
mov
cmp
add
in
dec
add
add
adc
or
movsb
cmp
adc
lret
and
xchg
in
outsb
cmp
scas
loopne
fbld
mov
xor
push
in
js
test
movsl
jne
cwtl
cmpsl
cs
les
cwtl
arpl
or
or
test
sahf
mov
lahf
pop
jle
aaa
aam
pop
dec
les
sbb
addr16
and
aam
jp
es
sub
push
sbb
xchg
int3
imul
mov
ret
add
jge
cmp
stc
fcomi
inc
mov
dec
out
or
out
push
inc
adc
push
nop
xchg
adc
push
dec
popf
popa
fs
push
insb
jecxz
push
or
xchg
lods
mov
stos
mov
cmp
cmpsl
adc
hlt
add
jmp
pop
or
outsl
test
fs
mov
and
jge
jge
outsb
cmpsb
or
or
sarl
jb
mov
outsl
xchg
cmp
xor
push
les
movl
push
and
add
clc
dec
cld
inc
fstpt
dec
push
pop
push
cmp
movsb
mov
movsb
and
out
shr
arpl
test
push
adc
out
xchg
push
inc
sbb
rolb
stos
movsl
in
xchg
xchg
adc
sub
xor
xor
lock
add
push
cs
xchg
and
push
cmp
sbb
adc
add
fcomp
outsl
ret
lea
mov
jne
jns
or
pminsw
and
in
inc
add
and
in
jge
mov
dec
push
inc
push
pop
rorl
cmp
imul
cmp
or
cmp
insb
mov
pop
call
inc
and
daa
dec
ret
inc
loop
mov
mov
push
jmp
sub
xor
repnz
testl
pop
repnz
jp
out
push
fwait
xor
or
adcb
push
test
adc
dec
sbb
push
outsl
mov
jl
test
jmp
adc
mov
jb
mov
aam
xchg
or
xchg
xor
adc
and
or
incl
clc
ja
mov
loope
dec
jbe
or
push
fiaddl
inc
sub
xchg
mov
rclb
fnsave
pop
pop
aas
aas
iret
insb
fcmovnu
fwait
pop
cltd
imul
push
add
inc
dec
inc
push
arpl
call
mov
insb
fs
dec
inc
dec
inc
inc
dec
push
or
dec
push
sbb
push
dec
dec
cmp
addb
dec
or
cld
lods
and
cmpsl
xor
xchg
stos
add
ja
cs
jb
inc
inc
inc
push
fcmovnu
cvtdq2ps
inc
or
dec
dec
dec
pop
or
movsb
dec
inc
mov
jb
mov
inc
inc
push
pop
xor
icebp
mov
mov
or
push
add
lahf
std
mov
or
inc
inc
dec
pop
sub
es
push
push
dec
pop
mov
inc
push
add
mov
add
jnp
mov
pop
and
push
je
push
add
adc
sub
dec
enter
sub
cmp
and
in
ljmp
cli
addr16
movd
mov
das
out
popf
mov
mov
mov
pop
mov
push
cmp
sbbl
inc
jb
xchg
push
sahf
push
push
imul
mov
aaa
push
aaa
pushf
push
aam
sbb
dec
shrd
and
push
sbb
ja
faddl
push
mov
or
pop
gs
xor
mov
mov
xorl
jmp
lea
fists
lahf
addr16
push
mov
add
daa
mov
mov
xchg
loopne
xorb
movsb
sbb
mov
vmread
push
int
push
push
pushf
enter
mov
cmpsl
fldcw
xor
or
ficompl
push
test
shll
push
loopne
and
mov
js
mov
push
inc
dec
neg
mov
pop
cmp
je
dec
rorb
pop
pop
lcall
imul
gs
cmp
and
mov
dec
dec
adc
sub
adc
sub
add
pop
ja
jae
xor
dec
out
mov
loopne
outsl
cmpsb
mov
rorb
adc
adc
inc
mov
jl
and
lret
pop
divl
movaps
popf
mov
movsb
movhps
notb
add
movsl
lock
sbb
lods
pop
sbb
cmpsb
bndstx
sbb
xchg
sbb
add
jle
cmpsl
nopl
repnz
icebp
movsb
mov
repnz
rcll
and
or
xchg
cmp
repnz
mov
mov
jno
mov
leave
imul
cmp
fs
sbb
inc
addr16
inc
pop
or
or
dec
aaa
pop
mov
movsl
cmpsl
sub
jmp
add
push
das
imul
outsb
jne
lds
nop
jne
pop
das
xor
mov
lods
mov
add
je
push
roll
inc
push
ret
cmc
and
sub
pusha
pop
test
je
lods
dec
dec
jno
xchg
jg
pusha
add
mov
aaa
add
push
dec
bound
add
add
rcl
dec
adc
or
sub
and
push
hlt
push
daa
in
mov
xchg
addb
xor
push
and
or
xchg
add
mov
mov
inc
mov
sbbb
pop
or
dec
jg
mov
push
and
xchg
movsl
or
add
movsl
adc
lds
jg
mov
inc
inc
popa
fstl
jb
push
dec
idivb
fcoml
mov
ficoml
aam
mov
jg
jnp
rolb
and
lcall
sbb
sub
in
cmp
mov
pop
loope
xchg
dec
xchg
das
sbb
mov
mov
and
cmp
dec
xchg
ja
inc
sbb
mov
sub
nop
mov
sbbb
add
pop
repz
pushf
pop
pusha
mov
sbb
inc
cmp
das
test
xchg
cs
inc
inc
mov
fs
inc
inc
push
andl
call
lret
push
dec
test
xor
lods
lret
cmp
pop
mov
jmp
aad
dec
inc
xchg
int3
pop
xor
jmp
cwtl
and
jmp
pop
xor
testl
cwtl
sbb
lcall
xor
decl
int
movsl
jmp
mov
mov
imul
add
xchg
fsubs
cmp
adc
idivb
xor
scas
leavew
sarb
push
sub
out
mov
sbb
push
mov
movsb
adc
push
xor
sti
fiadds
xor
loopne
cmpsl
lods
das
sbb
pop
dec
adc
imul
shlb
insl
mov
hlt
xor
mov
roll
or
cmpl
aad
mov
frstor
push
iret
mov
rorb
out
nop
movzwl
sarb
sbb
call
roll
fisubrs
imul
into
enter
cs
and
sub
jb
sub
and
sub
cmp
mov
cmp
sub
test
xlat
mov
xchg
jg
scas
loope
verr
scas
adc
dec
rcll
mov
pop
unpcklps
push
push
nop
pcmpgtb
repnz
iret
mov
cvtpi2ps
and
aad
cwtl
fs
xchg
and
hlt
dec
add
or
cs
or
cs
and
pop
cmpl
adc
jg
jno
add
jg
push
mov
xor
push
dec
outsl
mov
xor
cmp
mov
scas
ds
dec
rorl
lods
pop
xchg
push
testl
sub
pop
jecxz
or
mov
push
inc
xchg
and
adc
pop
dec
addl
and
pop
pop
pop
icebp
test
xor
xchg
inc
sbb
lcall
or
push
mov
mov
mov
mov
repz
mov
outsl
sub
xor
dec
sub
clc
mov
cwtl
and
sbb
cmp
push
xor
mov
cmp
rolb
addb
adc
movl
addl
inc
dec
shlb
add
sub
outsb
jmp
and
cmp
add
mov
inc
dec
lock
sub
sub
test
push
add
shll
or
test
or
hlt
loopne
sbb
jbe
call
adcb
jo
sarl
or
fisubrs
mov
test
jb
orl
loope
adc
inc
push
cld
xchg
mov
adc
jne
lock
jg
push
cli
push
stos
push
and
enter
adc
or
push
adc
dec
sbb
or
cmp
mov
pop
mov
mov
xchg
test
cmp
int
movsb
leave
das
adcb
or
cmp
cli
push
ret
rolb
test
add
dec
cs
inc
sub
shll
jns
push
xor
pop
stos
outsl
mov
jecxz
mov
repnz
je
out
loopne
pusha
xlat
jmp
push
mov
ret
inc
jo
sub
jmp
lock
bsf
rolb
dec
inc
push
stc
pop
mov
shll
adc
lock
in
jnp
add
push
adc
sub
cmp
popf
xchg
into
clc
call
push
imul
inc
mov
imul
insl
les
bound
xchg
cmpsb
mov
stc
xchg
push
aam
lods
push
mov
hlt
fnsave
xor
adcl
pop
sub
dec
pop
or
pop
cmpsb
xchg
ret
ret
mov
ret
xor
adc
or
adcb
mov
xchg
incb
jns
or
jno
push
dec
aaa
and
into
adc
or
add
or
cli
jp
and
add
mov
push
jecxz
mov
push
adc
jl
push
lds
dec
ja
cmp
movsl
scas
xchg
xchg
mov
add
pop
xchg
ret
jmp
outsb
add
ffreep
jo
mov
aaa
jns
pop
jb
adc
sub
dec
ja
sahf
pop
fs
or
jge
cmp
test
and
bnd
sbb
push
add
lods
lods
or
push
cmp
adcb
or
xor
dec
jne
flds
nop
mov
cwtl
pop
and
sub
rcr
add
pop
and
xchg
xor
adc
jmp
add
xchg
adc
pop
cli
mov
push
mov
pop
inc
add
sbb
es
and
call
push
sub
ds
xor
outsl
lods
mov
sbb
lea
fs
nop
pusha
mov
pop
or
insb
popa
xor
push
mov
or
ljmp
in
inc
jge
mov
mov
in
and
add
pushf
add
push
pop
lea
dec
rolb
pusha
mov
jmp
lods
pop
push
insb
xchg
jp
pop
inc
or
xlat
push
add
stos
and
jle
call
test
test
push
ljmp
lret
dec
popf
mov
jno
imul
daa
adc
sbb
mov
or
mov
jbe
sbb
outsb
ret
std
aam
scas
push
add
in
daa
leave
test
mov
daa
in
inc
imul
adc
and
push
adc
pop
shr
das
fs
cs
clc
jo
sarb
mov
jns
push
xor
mov
nop
je
popa
adc
xor
sarb
jecxz
push
inc
push
pop
pop
and
sub
xchg
jle
inc
push
mov
jne
rcll
adc
popa
lock
mov
fmuls
mov
mov
loope
pop
add
pop
mov
mov
or
xor
adc
pop
rorl
cmp
lea
push
orl
outsl
ret
addr16
xchg
xor
add
in
mov
push
or
ret
iret
dec
push
jb
ret
xor
push
inc
pushw
iret
mov
xchg
dec
push
mov
mov
mov
push
mov
ret
pop
and
pop
shll
popa
push
xchg
gs
jmp
or
jns
les
loopne
and
test
dec
pusha
cmpsl
ja
add
or
ret
lea
stos
cmpsb
pop
or
cmp
or
mov
les
sub
adc
test
inc
out
inc
add
xchg
vpunpcklwd
rorb
pop
js
sbb
lods
mov
ret
in
mov
mov
test
lds
mov
aad
jp
pop
aas
pushl
out
ja
or
ds
mov
cmp
xor
pop
jg
sbb
ja
mov
sbb
ljmp
pushf
push
sub
xchg
lret
cmovo
cmpsb
mov
mov
in
inc
and
xor
scas
and
inc
das
lods
out
in
int
adc
push
mov
out
enter
jl
push
or
sub
in
sbb
push
mov
mov
push
xchg
mov
mov
shrb
mov
je
and
imul
pop
mov
test
mov
enter
sub
cmp
push
pop
or
and
add
xor
jae
inc
sub
popf
stos
fstpl
lds
mov
mov
test
leave
aad
adc
adc
add
aad
lret
sub
sub
jb
mov
fwait
nop
mov
jns
mov
hlt
cwtl
dec
js
mov
sahf
je
add
push
mov
or
mov
nop
or
sbb
adc
push
sub
mov
imul
ds
mov
stos
hlt
dec
push
mov
fisubl
loope
add
lock
loope
fwait
dec
imul
les
movsl
and
incl
jae
mov
incb
add
dec
lahf
shll
enter
mov
movsb
xor
add
hlt
xor
inc
out
or
xor
adc
or
ret
sub
mov
pop
push
or
add
jnp
dec
push
imul
mov
in
or
or
mov
imul
nop
or
add
adc
xchg
push
add
cmp
mov
hlt
pusha
loop
add
mov
stos
inc
xchg
push
inc
adc
push
inc
fcmovbe
sbb
or
xchg
adc
pop
lock
inc
test
inc
mov
cmp
adc
push
enter
hlt
cwtl
icebp
mov
iret
lods
int
icebp
sub
and
push
enter
xchg
int
inc
sub
xchg
int
jmp
sbb
insb
cmp
sub
xchg
push
push
pop
rorb
ret
push
push
insb
push
orb
mov
mov
in
xchg
movsl
mov
test
xchg
into
arpl
cmp
insl
lea
stc
xchg
sub
cltd
fisubl
jge
xchg
push
cmc
xchg
rcrb
cmp
jnp
lods
shlb
adc
sub
sbb
jge
push
jo
leave
adc
sahf
and
sbb
adc
xchg
lods
xchg
enter
lahf
adc
out
push
mov
pop
into
test
jl
test
adc
push
adc
xchg
aaa
push
or
adc
push
adc
push
jg
pop
insb
les
xor
rclb
jns
push
sbb
jbe
std
adc
fimuls
cli
loopne
mov
adc
pop
add
jb
aas
add
adc
movhps
or
xchg
sbb
adc
iret
sub
dec
lds
test
sbb
add
or
sub
mov
icebp
and
and
ret
adc
sbb
sbb
and
jmp
mov
push
leave
inc
movsl
inc
xchg
push
sub
push
sbb
jle
inc
into
inc
xchg
pushf
ret
mov
hlt
sbb
xor
and
das
xchg
sbb
sbb
push
cmp
stc
lds
pusha
nop
cltd
cmpsl
lcall
nop
sub
inc
jmp
rcrl
add
cmpsl
adc
sahf
xchg
or
mov
les
inc
inc
test
sbb
dec
pop
sbb
pop
das
jns
push
push
sub
sub
jb
sbb
daa
dec
in
aad
test
and
push
imul
scas
mov
movsl
inc
push
sub
and
jecxz
ret
notl
push
mov
xchg
daa
xchg
stos
sub
and
xchg
jb
or
scas
or
enter
cs
out
rorb
rcl
enter
sbb
rcl
push
ds
xlat
or
dec
sti
push
adc
pop
and
dec
imul
add
cmp
dec
subb
push
inc
mov
les
jo
enter
xchg
mov
pop
stos
add
out
push
jns
cmp
pop
adc
inc
jb
xlat
pop
cmpl
add
int
mov
in
fsubl
sub
or
mov
adc
xchg
test
dec
rclb
flds
xchg
pxor
push
cli
das
push
push
sub
or
outsl
gs
sub
pop
sub
xor
adc
or
dec
roll
insl
inc
xor
test
adc
adc
adc
add
adc
xor
outsl
pop
sub
mov
push
or
push
inc
mov
loope
sbb
xchg
dec
roll
in
shl
pop
fistl
add
push
push
loop
iret
ret
xor
mov
test
sub
cmpsb
or
cmp
popa
scas
or
add
adc
adc
dec
sbb
push
push
sbb
add
lret
xor
xor
pusha
add
loopne
sub
aas
pusha
and
call
or
pusha
jae
inc
or
jmp
and
jge
push
push
sub
fildll
dec
jle
xchg
jmp
gs
pop
mov
inc
sub
push
push
add
jbe
inc
push
shlb
jbe
roll
sbb
sub
test
loop
pop
mov
mov
or
xor
leave
shll
inc
add
hlt
push
icebp
imul
adc
mov
lock
adc
daa
and
xor
bound
cwtl
sub
add
sbb
xchg
call
subb
ja
mov
jne
and
pop
inc
je
jecxz
outsl
add
and
and
inc
and
adc
movsl
or
and
sbb
jle
mov
shlb
sbb
add
pop
mov
hlt
imul
add
adc
xlat
mov
or
repnz
stc
inc
or
sub
mov
aam
sbbl
sbb
inc
popa
and
cmp
xor
andl
fiadds
push
xchg
dec
lock
pop
loopne
inc
push
or
lret
cwtl
icebp
xor
adc
push
and
add
mov
push
or
add
adc
dec
cmp
jg
inc
shr
xchg
pop
lret
push
rol
sub
or
daa
push
outsl
jl
adcb
jge
test
aam
and
stos
psubw
rcr
push
inc
inc
jp
and
adc
repz
dec
add
or
mov
mov
mov
cld
adc
pop
xchg
push
aam
mov
rorl
inc
sbb
push
iret
nop
mov
mov
inc
push
les
inc
sub
mov
fsubs
add
push
push
jno
sbb
andb
push
or
mov
popf
decb
lret
imul
movsb
jb
sbb
sbb
and
ljmp
or
sbb
pop
push
outsb
addl
dec
pop
pop
add
push
aas
imul
fisubl
mov
sub
dec
and
mov
dec
pop
pop
jae
and
pop
jmp
dec
add
inc
mov
jae
cltd
adc
pop
adc
dec
mov
xchg
mov
shll
movl
sbb
fldenv
hlt
adc
inc
adc
lock
stos
cmp
aam
jno
daa
inc
jge
fildl
jo
mov
aas
push
cmp
iret
and
clc
adc
loopne
lock
cltd
cmp
fcoml
adc
mov
and
scas
icebp
test
inc
or
sub
dec
movsl
inc
inc
inc
rorl
mov
shll
and
mov
xchg
lret
repnz
sbb
jb
xlat
insb
ja
add
test
sbb
or
in
and
rolb
mov
pusha
xor
sub
cmpsl
add
add
notl
lea
or
fildl
movsb
enter
mov
aam
cmpb
repz
in
inc
movups
add
or
je
xchg
aad
std
nop
cmp
ret
lahf
mov
push
add
and
add
out
lret
and
inc
add
or
enter
cmpb
pop
les
dec
sarb
add
js
adc
pop
call
cli
or
subb
cltd
add
in
rorb
xchg
add
or
popf
out
mov
test
out
addl
rcrb
or
xor
shlb
pop
xor
jmp
popa
negb
adc
push
push
add
pop
shlb
or
popa
and
testb
or
xchg
jl
push
add
insb
fdivl
xor
loopne
out
push
cwtl
test
test
push
gs
jge
inc
add
or
test
sub
and
sub
cmp
mov
jne
mov
or
adc
mov
jmp
xor
ss
jne
testb
loop
mov
dec
add
aad
sub
in
mov
dec
imul
push
push
ljmp
outsl
rolb
rcl
sbb
lea
jne
jle
inc
nop
jne
jae
jns
ss
shll
out
pop
adc
test
shrb
mov
dec
mov
movnti
and
cli
push
call
sbb
or
push
test
add
insb
jg
or
gs
inc
shl
into
jmp
sub
hlt
mov
addl
push
and
adc
and
push
add
loopne
popa
in
std
or
jbe
ss
gs
mov
scas
dec
in
jmp
lods
and
pop
or
adc
cmp
fwait
cmp
clc
jne
or
pop
add
push
mov
stos
xchg
in
push
or
or
adc
data16
xorb
cld
cmp
ja
popf
and
cmpb
jbe
arpl
jle
dec
add
jge
sbb
sbb
ss
adc
addl
push
clc
addl
jp
push
add
dec
adc
xlat
int
inc
imul
push
lea
push
jae
aam
add
push
and
push
movsl
call
pop
rcll
cmpsb
push
mov
add
or
xchg
dec
xor
adc
cmpsb
rcl
lock
gs
sub
jmp
push
adc
lods
dec
push
push
cmp
push
pop
mov
lods
call
adc
inc
fdivrl
inc
outsl
xor
cmp
xor
push
dec
pop
leave
xchg
push
cld
jne
test
incb
or
cmp
jb
cmp
ja
inc
cli
cmp
addr16
push
add
jmp
xorl
push
push
and
xlat
push
inc
data16
mov
dec
jne
mov
lock
push
stos
fisubl
cmp
dec
cmp
in
pop
inc
test
out
xlat
sti
add
je
or
cmc
add
push
mov
test
sbb
lock
push
xchg
out
sbb
rcll
adc
xlat
mov
sbb
sti
and
cmpsl
xor
push
add
in
sub
push
pushl
push
fstp
orb
xchg
jb
in
xchg
flds
pop
xchg
push
das
out
fidivl
xor
pop
adc
fldenv
push
test
out
pop
fisttpll
push
fildll
xor
mov
push
xlat
fistps
insb
push
popa
cmp
xchg
daa
daa
mov
stos
inc
sbb
xchg
inc
ret
jo
xor
mov
xchg
jmp
mov
les
cwtl
outsb
pop
xchg
rorl
sub
xor
adc
out
scas
and
cmp
mov
mov
ss
push
testb
mov
adc
sub
ret
inc
push
cmpl
sub
push
dec
movb
push
push
or
enter
int3
cmp
ja
int3
cmp
add
sub
pop
add
mov
mov
push
loopne
jmp
add
dec
cmp
jns
jmp
inc
mov
cmp
or
sti
mov
lcall
lar
xlat
mov
push
xchg
daa
in
das
adc
sub
adc
push
mov
int3
notl
or
pop
pushf
add
sbbb
push
lcallw
mov
mov
or
sub
inc
lods
adc
jle
shrl
shlb
or
daa
inc
fstpl
cld
cmp
sub
fldl
push
in
sub
and
adc
cmp
in
dec
lods
loopne
adc
ds
sbb
imul
sbb
imul
bound
mov
cld
pop
cmp
fwait
mov
add
aas
daa
or
or
xor
xchg
mov
or
loop
dec
adc
movsb
inc
add
adc
cwtl
mov
std
pop
cmp
or
mov
adc
or
inc
pop
pop
xchg
ficoml
cmp
subb
adc
mov
and
or
mov
pop
pop
mov
add
aaa
mov
push
push
test
or
adc
rep
and
adc
pushf
jl
arpl
insb
inc
xlat
pushf
bound
pop
add
cs
adc
incl
daa
or
outsl
js
insb
sbb
cmp
inc
loopne
or
sub
rcrl
enter
cmp
cli
out
je
or
cmp
mov
mov
cs
imul
data16
aaa
push
in
cmpsl
ds
sbb
adc
outsb
adc
test
pop
adc
pusha
xchg
mov
and
addb
xor
add
inc
mov
gs
and
dec
mov
loop
dec
adc
adc
ret
addl
mov
ljmp
fistl
daa
pop
rcrb
lea
push
test
push
ftst
mov
mov
or
lcall
nop
fdivs
mov
jbe
add
or
sub
inc
xchg
mov
xchg
push
adc
xor
push
inc
roll
sbb
mov
lret
pusha
add
test
inc
cwtl
cmp
xor
xchg
imul
insl
fucomp
pop
test
pop
add
pop
and
add
pop
or
addl
mov
xor
sub
mov
sbb
or
pop
inc
cmpl
jnp
xchg
and
test
dec
rolb
push
dec
lret
adc
out
mov
push
sbb
adcl
push
mov
mov
imul
adc
flds
dec
sub
mov
popl
jb
movb
fcmove
nop
loope
ja
sbb
imul
or
fs
in
mov
out
repz
adc
int
xor
subl
mov
mov
gs
inc
cld
add
dec
pusha
jle
or
popa
jns
out
popa
ja
add
movsb
dec
adc
adc
inc
and
adc
cmp
push
aas
pop
pop
jle
ja
jo
imull
negb
les
vcomisd
push
mov
mov
std
push
clc
push
mov
xor
hlt
mov
push
and
sub
stos
mov
pusha
push
rclb
incb
add
scas
dec
adc
dec
rcrb
ss
sub
cmp
cli
mov
sub
add
idivb
or
add
jae
inc
popf
inc
inc
mov
inc
out
outsb
pop
inc
xor
mov
cltd
inc
adc
rcrb
imul
xchg
aaa
pusha
xor
insl
dec
fwait
pop
mov
and
lds
test
testb
add
movnti
pusha
mov
lea
rolb
and
les
xchg
or
ret
mov
mov
jns
pop
fisubrl
and
fcmovb
add
push
jo
testl
push
add
mov
xor
push
ja
mov
and
lock
mov
add
add
mov
int
dec
xorb
in
pop
add
add
dec
push
mov
mov
jecxz
mov
orl
inc
ljmp
cmp
shl
pop
adc
mov
es
adc
mov
jge
rcll
outsl
xchg
pop
cmp
dec
cwtl
clc
mov
test
std
test
adc
xchg
and
les
jl
push
add
push
rcll
add
xchg
xchg
negl
or
push
imul
scas
jmp
sub
jb
mov
or
icebp
pop
fucom
adc
add
sbbb
imul
adc
mov
push
aam
cmp
das
addb
fisubs
cmp
xor
and
sub
push
es
sbb
loop
add
rorb
pusha
test
sub
outsl
adc
adc
sub
jecxz
jecxz
inc
mov
sbb
je
sbb
mov
cmp
jae
popa
cmpl
push
jo
or
movsl
lcall
mov
lods
sti
icebp
add
inc
jae
and
imul
push
pop
or
push
adc
and
xchg
sbb
push
sbb
cmp
push
adc
ret
adc
jne
and
add
xor
ss
jb
pop
xor
push
arpl
fdivl
jl
rcl
cmp
mov
add
pop
movl
aad
and
jo
out
sbb
adc
psraw
ds
add
push
cmc
ret
mov
inc
pusha
fs
or
les
in
mov
push
sbb
push
andl
add
or
outsb
dec
mov
adc
pop
xchg
jnp
repz
jae
mov
repnz
fdivr
sub
out
test
xchg
aas
inc
clc
iret
mov
lock
pop
push
pop
adc
push
clc
or
testb
xor
nop
hlt
xor
rolb
mov
mov
push
das
push
jae
xchg
push
fstpl
mov
aaa
scas
rolb
insl
sbb
inc
mov
and
shlb
add
inc
mov
or
sub
jg
repnz
mov
xchg
push
push
incb
add
repnz
cli
incb
xor
sbb
mov
jecxz
xchg
popa
sbb
adc
clc
shlb
sbb
push
adc
dec
sbbl
add
or
sbb
cmp
pop
inc
ljmp
jle
mov
mov
dec
push
add
push
aam
cs
fnstcw
stos
insb
insl
es
in
loopne
je
xchg
add
xchg
pop
cmp
andl
mull
adc
mov
jecxz
roll
inc
add
loopne
sbb
push
mov
stos
mov
pop
orl
push
dec
add
inc
pushf
mov
pop
mov
mov
lods
push
hlt
lea
xor
add
cs
add
mov
push
jne
inc
add
cmp
les
inc
bound
es
mov
out
add
add
fstpl
mov
in
sbb
gs
aas
bound
pop
lock
adc
movsb
add
mov
ss
insl
dec
sbb
xor
add
bound
lock
js
and
or
mov
xor
inc
inc
and
inc
add
es
pop
js
imul
push
inc
into
push
stc
repnz
sub
mov
adcb
pop
rcrl
roll
mov
mov
mov
cmp
out
push
arpl
sbb
add
sysexit
std
mov
lds
shrb
adc
out
cmp
sub
test
or
xchg
adc
test
insl
inc
mov
shrl
je
adc
pop
test
test
test
fisubrl
lods
inc
leave
orb
or
xor
pop
pop
inc
mov
pop
icebp
inc
xor
add
incl
inc
xchg
mov
outsl
mov
movsb
add
push
roll
xchg
pop
icebp
inc
and
imul
or
jmp
dec
rclb
add
into
adc
push
jecxz
add
out
push
cmp
js
mov
add
pop
into
lods
xor
push
enter
push
or
scas
jge
jl
and
dec
push
enter
push
or
cmp
xor
ret
inc
mov
mov
popa
push
int3
subps
push
sub
pop
out
push
pusha
insb
adc
ret
sbb
adc
pusha
movsb
sbb
push
test
inc
mov
test
jnp
pop
cltd
stos
sub
or
imul
inc
lods
ds
les
mov
fs
leave
or
and
les
fs
cmpsb
add
adc
push
cmp
add
mov
dec
mov
add
pop
pop
adc
loopne
or
pop
inc
sub
in
dec
aaa
sbb
arpl
hlt
cmp
pop
in
fisttpll
inc
fs
add
movsl
pop
dec
pushf
rolb
mov
pushl
aam
fnstsw
sbb
and
lcall
test
pop
pushf
inc
arpl
fisttpl
pop
push
or
add
fs
or
das
push
jne
andl
pusha
adc
and
or
or
rclb
mov
push
cmp
push
in
inc
movsb
out
rclb
mov
sbb
dec
or
sbb
jb
rclb
outsb
push
fsub
cmp
test
cwtl
jmp
push
inc
xchg
test
xchg
js
leave
or
sub
cmp
mov
shr
shrb
xchg
cwtl
int
movsb
add
push
and
xor
sbbl
adcb
orl
or
push
lea
mov
lret
shrb
and
inc
popl
pop
jno
fisttpll
ss
iret
pop
jae
mov
push
pop
and
mov
aaa
or
adc
add
sbb
or
push
pop
dec
jae,pn
clc
adc
add
dec
sbb
sub
pushf
cli
mull
cmp
pop
push
or
add
xchg
int
push
sub
shrb
fmuls
add
mov
das
rcr
mov
ljmp
fwait
popf
cmp
pop
or
adc
jo
out
and
aaa
in
aaa
jbe
inc
inc
push
pop
push
lds
jb
sbb
xor
mov
imul
mov
js
add
adc
mov
out
mov
inc
into
or
or
pop
add
stos
ds
and
adc
das
in
pop
movsl
mov
sbb
testl
and
or
mov
mov
fwait
bound
fwait
arpl
pop
stc
ficoms
pop
push
and
roll
enter
or
jo
andb
ficomps
cmpsb
cmp
cmpsb
jb
add
dec
sahf
inc
pushf
adc
call
nop
sbb
imul
enter
out
inc
test
insb
mov
repz
fdivl
cmp
lcall
nop
or
jl
lock
cmpsb
add
cmc
push
pusha
fistpll
pusha
or
sbb
push
sub
insl
testb
push
imul
leave
ds
lret
or
mov
push
adc
and
pop
or
addr16
addr16
cmpsl
lcall
mov
add
outsb
call
sbb
insb
mulb
pop
adc
rorl
sbb
dec
sbb
in
aad
jns
add
add
or
add
mov
sub
sbb
inc
or
inc
imul
xor
and
insb
push
rol
cmpsl
adc
out
in
ss
cmp
insb
shrd
jb
xor
adc
cmp
jns
cli
xor
or
cmp
aas
cmp
ret
or
add
add
push
loop
adc
sbb
inc
int3
add
jle
sbb
add
sub
in
and
add
and
movmskps
inc
fwait
jae
or
or
fistpl
cs
mov
movsb
sbb
jno
xchg
leave
sbbb
add
push
mov
and
or
aas
jg
dec
cmp
inc
add
nop
ds
pop
leave
xor
ficoms
xchg
add
push
xor
je
sbb
stc
js
icebp
push
xchg
xor
push
cli
adc
sbb
sbb
or
pop
push
lock
adc
xchg
and
mov
dec
ds
or
mov
dec
or
jmp
mov
or
dec
mov
add
adc
lock
bound
push
decl
jns
cmpl
ss
or
clc
xchg
or
outsl
xor
add
add
mov
mov
xchg
add
adc
mov
sub
daa
iret
adc
mov
fsubrs
in
inc
fwait
subb
scas
cltd
and
add
mov
add
inc
cmc
add
loope
dec
add
sbb
and
xor
and
xchg
push
mov
mov
scas
lea
pop
ljmp
adc
ja
dec
add
outsb
mov
rcrb
mov
add
push
ficomps
sbb
in
xchg
dec
adc
cmp
cs
invd
js
add
cmp
les
cs
mov
daa
cmp
ds
les
adc
pop
mov
push
add
call
xlat
mov
sahf
lock
imul
xchg
push
nop
fsts
lock
mov
inc
and
lock
pushl
push
adc
push
mov
and
int
cvtdq2ps
xchg
sub
arpl
inc
inc
daa
fs
sbb
mulb
shrl
std
push
or
push
sbb
ja
add
push
push
sbb
pop
push
jb
ds
adc
mov
sbb
mov
dec
pop
sahf
cmovbe
cltd
or
into
outsl
inc
ret
sbb
orl
rol
dec
inc
gs
xor
xchg
mov
ficoms
cltd
leave
mov
inc
xchg
dec
pop
pop
add
jne
aaa
mov
mov
push
pop
shrl
and
dec
in
das
loope
mov
int3
pop
fisttps
add
sub
cmpsb
and
and
pop
out
xor
pushf
xor
insb
pop
mov
dec
pop
ss
and
cmp
test
outsb
push
daa
push
push
push
cmpsl
fnstcw
faddl
sub
inc
jmp
push
pushf
aam
push
cwtl
push
iret
mov
sub
inc
push
push
mov
movsb
sub
sti
fiadds
mov
sub
pop
mov
xor
sbb
push
mov
iret
rorl
clc
xor
push
mov
ss
cmp
dec
pushf
aam
xor
fcompp
insb
lahf
inc
hlt
cmp
cmp
mov
ss
testl
inc
and
fisttps
cmp
lods
enter
ljmp
insb
pshufw
and
adc
shlb
xor
leave
shlb
adc
sbb
in
orb
xchg
xor
out
testl
mov
adc
jge
inc
movsl
les
inc
sub
push
inc
ja
shlb
daa
jp
test
xchg
dec
js
mov
inc
adc
jecxz
pop
xor
jae
mov
nop
or
lcall
xor
mov
add
dec
sbb
adc
adc
fs
push
ss
and
xor
ret
imul
inc
aaa
je
or
xchg
mov
or
push
rclb
sub
cltd
sbbb
das
test
lcall
daa
cmp
in
inc
and
mov
inc
sub
stos
mov
jne
xchg
int
dec
add
pop
sbbb
sub
xor
or
movl
test
xchg
push
mov
adc
mov
adc
sub
push
sub
sub
lret
mov
mov
fsubrs
push
fisttpll
inc
inc
adc
mov
test
orl
and
jmp
and
and
ss
je
push
inc
and
jae
sar
inc
adc
repnz
lcall
and
dec
jbe
push
dec
pop
jg
dec
ja
fisubrs
paddw
bound
es
clc
jnp
fildl
pushf
cmpsl
lods
rclb
xor
mov
or
bound
ss
xorl
jle
insl
xor
orl
cmp
cmpl
and
xor
dec
outsl
cmpsb
and
cmp
or
adc
sub
adc
push
push
add
and
addb
sub
add
ret
arpl
push
push
dec
lock
mov
or
push
jnp
scas
mov
pop
dec
add
es
dec
nop
and
xor
or
es
mov
xor
pop
pop
or
std
sub
or
push
sbb
ret
and
pop
and
cmpsl
ds
xorb
mov
xchg
dec
or
dec
test
and
add
pop
mov
mov
jns
cmp
xlat
or
jns
popf
or
test
ss
mov
and
inc
fists
call
push
or
mov
or
repz
shrl
aad
mov
dec
ret
sbb
mov
or
and
cmp
stos
jo
adc
popl
adc
adc
sbbb
xor
add
push
mov
xchg
push
mov
ljmp
daa
lods
or
or
cli
dec
jns,pn
sub
dec
in
or
inc
sub
outsb
filds
or
outsl
roll
xor
push
or
sub
xchg
adc
mov
mov
and
dec
cwtl
and
mov
movsl
shll
imul
xor
call
push
push
mov
or
add
dec
mov
str
sbb
mov
adc
xor
push
insb
hlt
adc
popa
int3
cs
ja
and
jmp
xor
mov
lods
mov
add
push
adc
inc
cwtl
dec
adc
inc
sahf
outsl
push
ja
inc
aam
in
test
adc
cmp
push
lahf
je
fisttpll
pop
or
xor
rclb
nop
xor
pushf
rorb
and
or
sbb
jae
pmullw
jl
pop
add
pop
imul
mov
mov
sub
mov
shl
mov
cs
js
mov
das
mov
lcall
push
xor
mov
inc
mov
inc
inc
inc
inc
imul
hlt
adc
cmp
iret
es
cs
cs
daa
dec
jnp
inc
inc
inc
cmpsl
into
cmc
sbb
inc
inc
inc
cs
cs
inc
fildl
inc
inc
inc
jnp
out
inc
cs
or
sub
jae
adc
xchg
lods
inc
xchg
push
addb
inc
jae
push
ds
or
rclb
and
xchg
cmpsl
inc
push
rolb
fucompp
stc
mov
dec
push
repnz
sbb
dec
fcoml
xor
imul
add
loopne
mov
mov
pop
enter
xchg
or
out
pop
int3
pop
sbbb
sbbl
push
sub
and
nop
aam
adc
add
fsubs
push
fs
pop
add
adc
sbb
call
iret
cmp
dec
jl
adc
bound
mov
in
push
push
or
dec
add
or
orb
cmc
mov
out
add
and
push
orl
jne
mov
pop
fwait
rcl
mov
enter
movsb
hlt
movsl
sbb
sbb
add
repnz
xchg
jne
inc
and
mov
and
jo
push
sbb
and
xchg
push
hlt
mov
fnsave
xchg
sbb
xchg
pushf
jo
xor
mov
and
add
pop
js
stc
js
inc
or
test
ret
stos
xchg
pop
movsb
jmp
dec
xchg
mov
cs
loope
mov
mov
or
in
adc
aaa
sbb
cmp
push
and
mov
dec
and
inc
xchg
fistl
shrl
sbb
inc
adc
in
xchg
add
fucomip
mov
add
pusha
and
inc
inc
mov
add
xor
xor
jl
sbb
inc
xor
push
repnz
mov
push
and
je
les
testb
inc
pop
inc
push
inc
inc
rolb
push
cwtl
call
js
inc
clc
push
add
inc
dec
pop
push
repnz
inc
orb
loopne
dec
inc
int3
inc
test
dec
push
lock
push
call
sahf
dec
pushf
push
push
dec
inc
movsb
dec
add
cld
dec
dec
jge
es
imul
lcall
adc
sub
aam
jle
or
or
pushf
cmpsl
pusha
xor
push
jnp
out
pop
xchg
xor
rolb
add
sbb
test
call
ret
in
test
pop
sbb
or
mov
xor
mov
add
aam
or
mov
pop
xor
enter
ss
ss
xor
cmp
dec
cmp
mov
sub
loopne
dec
incl
je
int3
dec
hlt
hlt
mov
cmpsb
clc
push
mov
or
push
call
mov
popa
fs
adc
mov
mov
mov
and
and
pop
rorl
and
xor
mov
insl
push
xchg
dec
aam
aas
cld
cmp
push
push
dec
cmp
cmp
shlb
or
jle
int3
and
xchg
in
sub
push
imul
outsb
repz
or
xchg
aas
ss
jbe
xchg
add
jne
aam
mov
inc
daa
pop
xchg
insl
add
pop
jo
jo
nop
add
inc
jo
or
loopne
jns
sbb
mov
mov
sbb
fbstp
shrb
add
out
stc
lods
push
sub
pop
cmp
jl
lahf
dec
sbbl
scas
push
das
mov
ret
das
add
dec
push
jb
das
xor
push
loopne
repnz
push
loope
and
push
das
in
push
inc
push
push
cmpl
push
cwtl
lods
cmp
cmpsb
jae
popa
add
lock
aad
or
hlt
sub
popa
add
js
push
mov
push
cld
sub
inc
cmp
mov
out
mov
jmp
aas
pop
xchg
test
pop
pushf
and
add
incl
and
lcall
clc
pop
pop
in
shll
popf
add
or
sarl
lea
cmp
ss
aas
lods
or
adc
jae
in
pushf
push
fs
fwait
mov
mov
or
cmpsl
nop
push
push
ret
rcrb
cmpsl
mov
and
pop
cmpsl
fs
dec
ss
ss
pop
sbb
adc
in
enter
pop
and
mov
or
mov
add
orb
xchg
pop
enter
push
push
mov
mov
and
pop
aas
push
pop
mov
lahf
sar
jb
cmp
pop
clc
fs
lret
in
jb
fidivrs
jg
mov
mov
add
mov
faddl
test
nop
inc
cmp
in
addr16
cmp
test
pop
insb
add
inc
ljmp
negl
push
jb
inc
popl
cltd
and
pusha
mov
and
jb
adc
inc
dec
adc
or
nop
test
or
stos
cmp
pop
jnp
inc
pop
cltd
incl
dec
enter
inc
inc
nop
test
das
or
stos
hlt
fwait
inc
push
mov
imull
dec
push
and
inc
push
repnz
pop
xchg
out
inc
push
ss
nop
inc
add
dec
push
stos
inc
sbb
repnz
mov
push
out
insb
pusha
push
int3
pop
hlt
nop
inc
mov
sbb
cmp
scas
xchg
pusha
xchg
xchg
xchg
pusha
cld
pusha
add
dec
jnp
cmp
popa
test
ds
adc
jnp
xor
dec
bound
cmc
or
or
lock
sub
sub
lds
out
fadds
bound
pop
xchg
rorl
pop
cs
adc
clc
aas
test
out
pusha
addl
jle
add
xorl
push
add
inc
xorb
aas
jb
nop
push
mov
nop
adc
push
imul
pop
test
testb
mov
js
add
movaps
test
xchg
push
imul
fistps
and
fprem1
lds
cmp
insb
dec
xchg
dec
lods
pop
xchg
int3
cmc
leave
lcall
dec
push
iret
addr16
lods
push
mov
xchg
or
sub
mov
stos
rclb
pop
gs
push
xchg
out
sub
cmp
push
pop
pushaw
testw
push
push
adc
and
or
inc
push
nop
imul
pushf
jne
icebp
push
mov
xor
adc
sub
push
test
cwtl
mov
dec
aam
popf
ror
aam
lds
add
pusha
cmp
test
mov
in
pusha
dec
ss
arpl
dec
mov
dec
inc
and
pop
movsb
and
inc
inc
jnp
adc
and
das
inc
dec
xchg
jne
paddb
lret
and
lods
dec
clc
dec
add
sbb
or
mov
sbb
push
adc
adc
sahf
push
push
cmpsl
int3
push
in
imul
clc
push
push
cmp
lods
push
shrb
imul
leave
xchg
imul
int3
imul
out
inc
insl
in
add
and
add
dec
outsl
lods
insl
call
test
outsl
fsts
lds
adc
and
cmpsb
jno
push
dec
push
xor
pop
xchg
stos
jno
xor
je
dec
jns
test
outsb
mov
mov
mov
loop
push
add
sub
sub
inc
int
jo
jno
notl
push
mov
xchg
dec
andb
outsl
pusha
xorl
mov
fstl
xchg
inc
fcoml
loopne
mov
cltd
iret
js
sbb
or
enter
call
push
pop
stos
orb
out
push
and
repz
cs
pop
xor
testb
mov
sbb
jns
cmp
nop
jo
repnz
pop
repnz
pusha
jno
jno
and
adc
jb
shl
fcoms
jae
sub
adc
mov
adc
inc
je
sbb
inc
cmpsl
aas
push
aaa
test
aaa
nop
js
arpl
cltd
push
fsubrs
mov
inc
shll
inc
nop
je
in
adc
leave
call
push
or
inc
loope
aaa
add
or
adc
adc
dec
out
stos
test
push
aas
adc
jge
add
sbb
push
add
ds
fs
outsl
daa
jnp
mov
jne
push
xor
mov
mov
push
add
sbb
pop
leave
lret
inc
push
jbe
jbe
ret
jbe
jbe
lods
nop
dec
adc
adc
xchg
jo
aas
mov
xor
xchg
push
in
pop
adc
adc
movsl
mov
cmp
xchg
rcrb
inc
and
pop
xchg
pop
loopne
lock
ds
sub
push
js
movsl
fstps
push
pop
cmpsb
mov
int
xlat
insb
dec
rcll
pop
into
push
push
enter
pop
jg
pop
adc
push
jns
je
mov
jns
out
dec
jb
jns
push
inc
push
hlt
jns
cmpb
or
jp
push
add
jp
aas
and
add
jge
add
dec
lret
and
pop
adcl
push
lds
jns
xchg
inc
pop
out
mov
pop
lods
pop
cltd
ss
leave
stos
add
jnp
pusha
and
sbb
cwtl
lret
pop
addr16
popl
cltd
cmp
shl
pop
pop
insb
pop
pushf
call
jle
pop
pop
lods
pop
or
and
in
test
jl
loopne
or
pushf
nop
jge
jge
push
push
call
jge
inc
dec
enter
jle
jle
jle
nop
push
and
jle
in
enter
pop
adc
mov
mov
addr16
pop
inc
push
stos
mov
pop
mov
inc
pop
xchg
jle
pusha
or
or
lea
jp
cmp
pop
test
xor
adc
daa
outsl
in
pop
push
jg
adc
add
out
cmpsl
clc
jg
addb
daa
nop
adc
and
dec
inc
hlt
dec
or
push
subl
es
dec
bound
mov
adc
leave
test
bound
sub
out
xchg
mov
xor
imul
sbb
lods
fs
pcmpgtb
repnz
adcl
andb
sbb
fs
dec
sub
adc
test
jg
xchg
add
pop
mov
loop
jno
gs
dec
adc
pop
out
andb
test
cmpb
jno
out
adc
push
jg
xchg
mov
push
sbb
push
mov
pop
inc
repnz
ffree
pop
js
xorb
sbbl
cmovp
in
cmovs
and
push
test
add
inc
xchg
lret
sub
inc
or
subb
leave
add
mov
pop
nop
push
jg
xchg
ret
push
mov
xchg
out
sbb
mov
ss
clc
xchg
xor
aaa
mov
pop
movaps
icebp
push
add
push
enter
mov
push
mov
xor
xchg
pushf
lods
push
pop
xchg
mov
mov
inc
jno
imul
insb
push
rcpps
fsubrl
or
mov
xchg
mov
xorl
sbb
xor
imul
pop
cltd
or
sbb
ljmp
adc
lock
outsb
push
adc
mov
mov
push
xchg
xchg
mov
aaa
lcall
push
les
aaa
and
dec
or
pushf
mov
push
cmp
orl
mov
dec
mov
fildll
or
xor
in
fcoml
rolb
push
repnz
pop
ret
cmp
outsb
or
jne
jbe
push
aad
outsl
and
mov
sub
popf
sbb
add
inc
nop
insl
cmp
test
nop
test
and
rcrb
sbb
out
and
mov
push
leave
sub
dec
jo
mov
mov
sbb
push
xchg
jl
add
push
push
movsb
jno
jb
mov
and
scas
jb,pt
and
jmp
xchg
push
xchg
lea
adcb
pushf
nop
shl
push
lock
scas
pop
xchg
mov
mov
les
fcoms
rolb
cwtl
jo
cwtl
cwtl
leave
and
and
cmp
add
fisttps
push
jns
cmp
jecxz
add
jb
pop
jmp
dec
mov
arpl
jns
jns
cmc
sbb
jg
xor
out
hlt
mov
loopne
loopne
or
div
inc
jg
movsl
jb
enter
enter
xor
add
mov
mull
es
dec
cmp
daa
ss
add
daa
sbb
clc
ja
jne
shrb
scas
ss
add
fwait
push
pop
rcrb
test
out
sub
movsb
sahf
adc
js
out
xchg
pop
hlt
sub
and
pop
shlb
movsl
push
inc
cmpsb
push
push
aas
sbb
fs
ds
data16
out
sub
shll
ret
in
andb
and
push
pop
ss
subl
and
inc
out
or
jbe
inc
jbe
ja
arpl
jbe
ret
xor
jp,pt
icebp
fdivrs
ja
or
jg
jg
ja
pop
popl
and
inc
cmpsl
jne
test
mov
lret
insl
fcoml
dec
jnp
or
and
mov
inc
das
fstpt
je
cwtl
gs
mov
xor
jbe
bound
out
stos
mov
cs
jno
xchg
shll
mov
mov
cmpsl
scas
lret
xchg
pushf
pop
sbb
cmpsb
sbb
and
daa
movsb
in
sbb
enter
add
loopne
popw
mov
mov
and
ss
aaa
push
push
or
push
pusha
cmp
test
xor
movsb
adc
push
stc
incl
aas
mov
shrl
pop
jl
les
clc
jp
nop
inc
enter
ja
enter
mov
ja
enter
test
push
add
pop
loopne
pop
cmp
inc
pop
jnp
outsl
bswap
test
roll
decl
cmp
sbb
jo
xorb
out
andb
or
pop
jl
xchg
inc
rcrb
fldt
push
jne
ret
push
or
xor
aaa
bound
aam
sbb
enter
push
lock
jo
dec
push
ret
scas
push
sbb
and
adc
jo
aaa
push
jnp
shrb
sysret
leave
dec
xor
and
push
adc
push
cmc
ja
add
pusha
mov
jle
dec
adc
jle
pop
stos
pop
push
add
pop
lock
pushf
stos
enter
add
test
movsl
nop
inc
leave
stos
mov
dec
push
jae
jg
jns
jecxz
cmp
jle
lods
lds
popl
cltd
xchg
pop
sti
fidivrl
cmp
and
jg
js
cmp
addb
push
test
push
lds
and
jbe
jns
ss
lods
lds
cmp
addb
dec
int3
inc
add
jb
push
addl
or
push
mov
sbb
xor
cmpsb
aas
nop
scas
add
dec
lods
lret
arpl
add
addr16
mov
ljmp
cmpsl
jns
or
mov
cmp
imul
and
or
inc
mov
les
lods
iret
dec
fdivs
lock
adc
and
sub
dec
sbb
or
sub
push
adc
loop
cmp
clc
push
sub
stc
inc
xorl
ja
push
sub
wbinvd
xchg
data16
lods
mov
push
ret
dec
push
add
and
sbb
fmull
lods
test
pop
ja
push
daa
jecxz
leave
adc
push
aam
mov
push
ds
push
inc
mov
jno
lds
add
adc
lahf
sbb
add
dec
test
jle
cld
sbb
or
cwtl
mov
push
push
int3
mov
sub
or
cmp
lods
mov
add
out
xchg
and
jb
xchg
orb
sub
cmp
add
mov
inc
mov
mov
add
stos
add
sub
or
sub
mov
inc
cmovl
loopne
mov
mov
jns
mov
ret
in
mov
sti
inc
sti
mov
push
or
pop
xchg
fsubr
cs
add
mov
stos
dec
mov
fabs
mov
mov
jmp
mov
push
ret
fimuls
adc
xchg
cmp
mov
mov
add
hlt
mov
mov
mov
jns
and
mov
inc
loop
out
or
jge
xor
xchg
push
push
xchg
dec
sub
flds
sbb
adc
jns
or
mov
mov
mov
loop
js
mov
add
mov
add
sbb
orb
push
insl
mov
sbb
mov
push
lea
roll
insb
jecxz
shrl
push
sbb
adc
add
loope
add
xchg
pop
hlt
je
sbb
sub
mov
cmc
cmp
push
push
cwtl
lea
cmp
in
pop
fmull
add
aaa
inc
enter
push
mulb
sub
dec
pop
inc
mov
dec
and
cmp
fwait
adc
and
sbb
jecxz
in
mov
sub
fcomps
or
repnz
popa
int3
jecxz
mov
mov
push
popl
pop
pop
sbb
and
and
inc
rorl
adc
aaa
push
mov
add
push
lret
mov
or
sub
mov
sub
loop
nop
dec
jl
out
nop
inc
and
sarb
cmp
sarb
ss
mov
mov
mov
dec
mov
mov
js
mov
imul
xchg
mov
xchg
lock
xchg
mov
xor
into
adcb
sbb
sbb
push
jg
xchg
lds
dec
sbb
sbb
cmp
cmp
xchg
out
add
leave
test
dec
repnz
xlat
add
icebp
or
shr
add
cmp
ret
mov
xor
and
xchg
dec
xchg
adc
pop
cltd
sar
or
jge
dec
jecxz
add
out
bound
shll
pop
xchg
pop
cmp
pop
in
xchg
seto
cmpsl
or
and
mov
mov
in
xchg
inc
mov
sarl
pop
pop
xchg
sbb
adc
inc
adcb
mov
lfs
push
in
rcrl
add
pop
mov
mov
xor
or
inc
xchg
add
pop
xchg
mov
adc
xchg
xor
loopne
or
add
adc
insl
push
xchg
ficoms
int3
cwtl
cmp
push
testb
cltd
das
jmp
adc
adc
add
das
pop
ret
je
jo
js
mov
enter
xchg
pop
mov
lods
loopne
mov
divb
xchg
push
lahf
outsb
xor
nop
cld
pop
xor
jmp
jmp
mov
rorl
lods
outsb
iret
in
inc
mov
mov
and
clc
inc
cmp
adc
pop
mov
mov
dec
add
test
dec
bswap
fsts
gs
dec
fiadds
mov
cltd
mov
movnti
xor
mov
pop
fwait
or
and
jmp
pushl
imul
jmp
cmpsb
leave
sbb
in
push
daa
inc
mov
and
pop
mov
call
lock
lds
ss
and
sbb
and
add
mov
mov
ret
cmc
mov
mov
mov
xchg
fstps
ret
add
leave
or
and
add
bnd
pop
sbb
pop
lcall
ret
fwait
gs
pop
jg
or
call
or
ret
push
inc
in
jmp
push
pushf
xchg
cmpsl
insl
adc
imull
sahf
cmp
dec
xor
nop
rolb
inc
xor
mov
push
cmp
push
inc
push
dec
push
js
mov
mov
inc
enter
jns
jl
loopne
aam
push
mov
mov
xlat
push
xor
in
inc
lahf
jbe
xchg
sbb
xor
aam
inc
mov
add
rolb
push
rolb
mov
nop
push
pop
push
enter
inc
xor
pop
fildl
push
repnz
stos
xlat
push
adc
sbb
sub
test
rolb
add
imul
fnstcw
icebp
paddb
sub
inc
mov
dec
mov
or
cld
push
test
add
loope
cmp
test
fs
roll
dec
jl
adc
pop
in
adc
and
and
inc
or
jp
jle
jnp
ja
add
inc
and
xorb
dec
or
movsl
pop
cmp
or
inc
push
in
or
mov
ljmp
sub
inc
repnz
adc
shl
dec
in
and
adc
mov
inc
dec
mov
xchg
cld
lcall
mov
mov
into
sahf
dec
jne
and
and
subl
movsl
sub
loope
xor
mov
lods
xor
sbb
cmp
sbb
or
adc
mov
inc
cmp
and
sub
cmp
mov
inc
and
push
fs
fbstp
ds
push
adcl
dec
pop
push
pop
dec
adc
sub
int
inc
mov
cmp
or
loope
les
sbb
movsb
bswap
scas
push
cs
stos
push
daa
mov
enter
dec
aad
lret
and
lock
dec
or
sbb
push
aad
loop
das
add
mov
or
test
dec
xlat
and
add
and
fbstp
or
outsb
mov
pop
add
dec
cmp
stc
add
movsb
dec
dec
push
push
ficoml
out
aad
dec
xor
cmp
shrl
pop
jmp
mov
mov
push
fisttpll
bound
push
insl
mov
mov
ret
jae
dec
fcoms
loop
mov
stos
xchg
cmp
rorl
sub
clc
sub
inc
or
lea
popa
addl
jecxz
ljmp
int
aas
imul
adc
movsl
inc
mov
cmpsb
push
mov
rolb
sbbb
xlat
push
inc
pop
xor
cltd
call
or
inc
adc
fisttpl
sbb
cmp
and
in
pop
sarb
ret
adc
ds
xchg
cmp
movsl
loop
dec
xor
push
cmp
out
in
cmpsb
mov
cmpsl
add
inc
test
pop
les
repz
shll
rorl
and
push
insl
jae
xlat
lea
inc
insb
inc
jo
loopne
xor
les
dec
insl
sbb
push
imul
loope
or
inc
pop
lahf
mov
xor
lret
test
push
pop
inc
lcall
clc
mov
ljmp
jg
out
and
inc
in
mov
ret
add
pop
aad
loop
adc
add
cs
popf
mov
and
mov
ja
dec
fldt
nop
rolb
test
cmpsl
or
out
adc
xor
jo
add
mov
push
push
pop
test
negb
test
out
lods
add
clc
inc
data16
mov
outsb
lret
rol
test
cmc
xchg
shr
inc
dec
hlt
orl
stos
add
or
xchg
lahf
pop
stos
add
mov
dec
sbb
enter
push
sbb
sub
enter
and
or
test
mov
push
sbb
mov
inc
adc
dec
mov
push
mov
xor
lods
adc
bound
mov
add
sbb
ss
insb
divb
lods
push
mov
lods
das
inc
push
inc
jno
add
inc
jp
and
xor
push
jne
insb
loop
mov
daa
push
les
mov
sub
xchg
ret
cltd
pop
mov
add
xchg
and
orl
add
cmp
dec
push
mov
push
sarl
lgs
mov
jb
adc
lods
outsb
adc
cmp
add
inc
inc
mov
das
pop
or
jp
ret
add
cmp
adcb
pop
enter
push
roll
jmp
lahf
or
pop
add
add
add
or
subb
sahf
notl
push
cmp
push
push
inc
push
sbb
call
fcoms
or
push
test
xor
icebp
out
push
push
jae
lcall
popa
mov
inc
and
popa
insb
cwtl
nop
add
das
pop
fnsave
dec
push
jge
sbb
mov
movsb
adc
or
iret
pop
or
rcll
or
pop
mov
add
or
pusha
cmpsb
adc
movlps
fmuls
mov
ds
push
adc
push
push
mov
das
lcall
and
push
push
testl
dec
es
addr16
inc
sbb
sub
adc
adc
jne
or
mov
mov
mov
int
std
out
ret
xor
sub
pop
push
nop
or
scas
jmp
jg
popa
leave
push
xor
push
and
xor
fwait
pop
mov
pop
dec
inc
aaa
jg
test
inc
stos
add
je
cld
mov
out
pop
mov
cmp
dec
lahf
xchg
pmulhuw
mov
inc
sahf
pushf
pushf
imul
dec
dec
cmpsl
push
mov
shll
jno
cmp
pop
lods
xor
adc
cli
mov
mov
push
mov
jae
sarb
or
jnp
jbe
adc
xchg
movsl
inc
xchg
or
in
stc
icebp
jne
lds
and
dec
pop
daa
into
clc
jb
adcl
and
and
sbbl
mov
and
add
pop
je
sbb
inc
jmp
and
fsubl
sbb
push
push
xor
sub
push
add
lahf
js
dec
adc
mov
jne
dec
sbb
pop
aam
icebp
push
sub
lods
inc
and
add
add
cmp
inc
repnz
push
sub
scas
xor
nop
xchg
adc
or
mov
jl
jmp
cmc
ss
xor
xchg
ljmp
pusha
psllq
sti
icebp
or
mov
and
or
dec
cmpsl
sub
dec
inc
pop
mov
sbb
mov
push
nop
dec
fs
push
mov
dec
ja
pop
mov
jns
popa
test
std
xchg
mov
sbb
movb
mov
jbe
ss
sbb
mov
jb
adc
mov
stos
aam
pusha
iret
pop
popa
inc
xchg
lds
insl
mov
lcall
mov
insb
inc
or
ja
add
jecxz
cmp
dec
push
nop
mov
inc
or
push
cmp
mov
mov
push
mov
dec
popa
scas
insl
daa
push
mov
jge
outsl
nop
cmp
xor
mov
cli
pop
mov
inc
mov
shl
sbb
xor
mov
xor
jb
add
xor
xor
xor
sbb
jb
add
mov
outsb
xchg
mov
xor
mov
divl
dec
or
out
mov
mov
insb
nop
ds
std
or
in
cwtl
add
repnz
sti
sub
pusha
or
cmp
cld
push
sub
push
push
push
mov
or
mov
push
jnp
sub
sub
aam
sub
sarl
push
inc
dec
popa
repnz
clc
inc
mov
inc
adc
call
xchg
lcall
mov
xchg
mov
adc
icebp
idivl
test
push
mov
pop
adc
mov
les
jo
adc
je
mov
movsb
push
sbb
aad
addl
or
test
test
int
hlt
inc
inc
add
add
pushf
inc
js
fiadds
enter
xchg
sub
inc
sub
mov
push
or
addr16
shll
das
es
in
mov
jp
arpl
and
xchg
mov
add
cmp
and
and
and
push
dec
ret
cwtl
add
push
sub
out
popf
xor
sub
sbbb
adc
inc
adc
lea
adc
add
adc
mov
jo
mov
mov
mov
iret
enter
adc
push
ficoms
or
ss
fsubl
add
or
scas
mov
aaa
jecxz
inc
movsbl
das
and
mov
pop
cmpsl
psraw
xchg
rclb
rclb
test
pop
sub
in
dec
xor
push
sub
test
ret
mov
add
ficoms
inc
clc
push
dec
push
jb
jbe
int
push
es
aaa
rol
adc
aaa
add
sbb
mov
cmp
cmp
sbb
mov
add
and
jae
jae
adc
stos
add
push
pop
inc
and
pop
jecxz
arpl
cmp
adc
loope
and
mov
sub
jbe
lds
mov
les
pop
test
pop
xor
push
add
in
mov
pop
push
or
andb
pusha
daa
outsb
test
inc
cmpsl
adc
sub
clc
aaa
push
lods
sbb
xchg
cmp
vphsubwd
xchg
call
call
outsl
mov
test
clc
dec
mov
sub
ds
dec
pop
and
ljmp
lock
mul
sbb
xchg
inc
mov
or
andb
adc
sub
int3
cmc
mov
incl
or
push
fucom
push
in
fildl
fsts
and
test
sub
pop
mov
cmpsl
dec
ret
testb
push
inc
and
push
fdivr
add
out
xchg
xchg
sbb
aam
rorl
aaa
adc
ds
cmp
outsl
lcall
mov
scas
loope
mov
loope
mov
cmp
test
iret
add
or
push
xchg
or
daa
add
jecxz
sbb
jg
xor
mov
and
adc
dec
pop
adc
sbb
out
inc
out
imul
rcr
sbb
in
add
loopne
adc
jmp
pop
sub
jb
xor
loopne
out
and
jns
idivl
and
add
adc
and
push
ret
xchg
xchg
enter
jge
mov
pop
les
push
push
iret
mov
mov
and
sbbl
add
adc
mov
jae
jnp
xor
adc
push
pop
xor
cs
cmpsl
mov
out
test
push
add
and
testl
jns
test
lea
or
or
add
jbe
sbb
sbb
bound
adc
insb
out
sbb
mov
adc
add
pop
addr16
or
push
cmovo
add
push
adc
outsl
xchg
loopne
adc
dec
movups
xor
seto
jp
push
mov
mov
lods
mov
ds
adc
or
fwait
xor
dec
lods
adc
loop
js
outsl
imul
int
cwtl
sbbb
stos
js
and
adc
cmp
add
xor
add
inc
call
or
and
cwtl
imul
scas
push
push
jns
insb
inc
and
cmp
fiadds
fs
push
fadds
inc
sbb
pop
or
repz
add
sub
jns
dec
mov
adc
test
outsl
xor
je
dec
jg
outsb
das
mov
sbb
and
push
or
cmpsl
or
or
popa
mov
ss
add
pusha
fst
rorl
xchg
jns
aaa
lock
or
inc
fstl
mov
das
sub
adc
mov
and
add
mov
mov
popf
add
add
and
xor
mov
loope
in
xchg
add
add
or
add
lret
push
fwait
xchg
xchg
cmp
xchg
inc
xchg
push
sbb
nop
adc
dec
mov
dec
mov
aad
and
xchg
or
xchg
xchg
mov
cmp
mull
cmp
mov
std
testl
adc
xor
inc
inc
or
mov
lods
fimuls
xchg
push
lahf
cmp
pusha
add
and
ficoml
sub
mov
stos
cmp
test
sbb
sub
or
sar
mov
cmpsb
sbb
mov
andb
lret
fists
sbb
bound
mov
dec
xchg
pop
jae
and
fistps
push
or
shl
jns
adc
loope
or
fucomp
xchg
movb
inc
fs
fs
cmp
fs
es
inc
inc
es
js
call
jl
jb
adc
and
mov
and
pop
gs
lret
jb
xorl
and
sbb
or
loopne
stc
mov
push
decb
jns
stos
mov
out
fidivrs
inc
adc
and
inc
sahf
out
sahf
push
gs
fwait
lods
add
out
mov
fimull
jo
xor
jbe
sub
call
pushf
into
loop
mov
cmp
out
hlt
jl
adc
inc
cmpsl
sub
push
pslld
inc
das
add
push
mov
cmp
and
push
pusha
push
push
mov
jns
push
and
cmp
imul
repz
mov
or
out
out
mov
push
je
jl,pt
iret
repz
andb
fwait
iret
repz
sbb
dec
shlb
sti
mov
insb
insb
cmp
push
pop
push
dec
add
imull
int3
insb
sub
call
sarl
pop
xor
push
jl
push
pushf
mov
fdivr
sbb
xchg
insb
stc
cmp
repz
repz
insb
mov
in
sbb
or
add
imul
rorb
push
add
cmpsl
mov
test
test
push
cs
push
push
push
cmp
fs
push
jo
es
dec
dec
push
cld
int
addr16
scas
rcrb
pop
mov
ss
pop
adc
inc
xor
ss
cmpsl
mov
jl
mov
sahf
out
mov
xchg
pushf
dec
mov
push
out
mov
in
push
xor
pop
es
jnp
jns
cmp
push
mov
xor
mov
es
idivl
jnp
fdivrs
lock
push
fdivp
loopne
mov
or
lock
out
sub
cmp
lods
sbb
rorl
enter
and
and
sub
push
fmuls
jnp
dec
in
ds
sub
cmp
mov
pushf
js
pushf
sbb
xor
jl
cmp
jb
popa
dec
sbb
fimull
mov
xor
or
int3
pop
adc
sarl
or
cwtl
rcrl
sbb
mov
push
push
xor
out
mov
and
xor
pop
or
inc
xor
clc
test
jbe
lds
sub
fs
ljmp
mov
lret
insb
pop
nopl
into
jo
or
xchg
enter
jg
add
xchg
mov
lds
imul
adcb
lcall
add
movsl
push
stc
imul
pop
xlat
mov
dec
jae
adc
nop
xor
dec
pop
add
xchg
xor
nop
inc
dec
test
fldt
mov
cmp
mov
insl
pushf
fldcw
data16
imul
imul
inc
adc
repz
fwait
and
mov
mov
mov
lret
in
dec
inc
pop
movsl
inc
cmpsb
rol
aad
mov
mov
jno
or
imul
mov
pop
mov
inc
add
mov
pusha
push
stos
lret
rorb
lods
and
sub
pop
push
sbb
lfence
pusha
cwtl
daa
xchg
or
xor
push
adc
push
jns
or
movl
int
mov
rcrb
push
andb
mov
leave
sbb
pop
pop
sub
in
mov
xorl
pop
mov
call
ret
pushf
pop
bound
or
test
xchg
or
cmp
fcmovb
das
adc
popa
jns
dec
jb
das
and
mov
xchg
sub
bound
xor
xchg
in
sub
cmp
inc
and
inc
add
popa
lret
insb
add
es
roll
sbb
das
pop
inc
and
pusha
mov
mov
xor
xchg
cmp
inc
les
xchg
or
cmp
aas
jmp
add
xor
daa
pop
xlat
lcall
lods
mov
shll
mov
das
xchg
add
das
sub
rcpps
jge
daa
test
mov
insl
push
pop
fldcw
cmp
bound
mov
and
pop
in
in
xchg
ja
and
iret
lcall
in
call
popf
enter
daa
fmull
lock
jb
add
mov
cmpsb
lret
cpuid
jle
lahf
test
mov
js
push
sti
das
push
fimuls
xor
dec
dec
dec
inc
outsb
lods
dec
push
pop
outsb
pop
inc
xlat
pop
sti
cmpsb
data16
sub
push
out
xlat
xor
dec
clc
imul
mov
mov
jmp
pushf
daa
xor
add
cmc
outsb
psraw
cli
je
shrb
icebp
stc
decl
mov
xor
inc
popa
mov
aam
xor
pop
loop
mov
jae
xor
and
hlt
cmp
pop
loope
add
add
andb
inc
push
aas
mov
adc
sbb
dec
insl
bound
or
inc
aas
and
cmp
and
cltd
das
nop
mov
paddusw
mov
sub
loop
or
insl
mov
xor
lds
rorb
frstor
or
xchg
ja
pop
push
inc
inc
cmc
ret
adc
jae
cmp
cmp
add
mov
lods
adc
jno
push
add
add
outsb
icebp
daa
add
cmp
pop
dec
lret
imul
jo
lds
sarl
and
loope
and
add
or
cltd
sub
cmp
add
pop
dec
adc
andb
lea
mov
pop
xor
out
add
jp
fdivrs
pop
ja
xor
ja
mov
sub
push
or
in
sbb
and
and
push
in
xchg
adc
mov
fs
out
stos
inc
xor
icebp
adc
popa
sub
leave
in
and
jns
inc
and
loope
aad
call
aas
pop
adc
jbe
inc
imul
xchg
add
adc
aad
arpl
dec
add
or
pusha
orl
mov
sbb
dec
std
mov
scas
inc
dec
scas
cmpsb
xorl
jo
adc
push
decl
xchg
mov
and
icebp
cltd
test
pop
popa
mov
and
xchg
xor
or
mov
dec
shrl
xchg
iret
out
or
sub
inc
push
xor
and
inc
adc
push
stos
push
cmpsb
pusha
lock
inc
mov
mov
inc
push
stos
jp,pn
mov
adc
int
add
sbb
jo
inc
mov
adc
pop
lds
cmp
lods
or
nop
xchg
cmpsl
adc
jge
pop
bound
jp
hlt
adc
push
pop
pop
and
cmp
push
adc
lods
pop
sbb
inc
das
stc
push
push
cmp
mov
mov
and
inc
cs
xor
or
fcmovu
xor
addl
add
add
or
push
lock
mov
jl
xchg
pushf
jecxz
mov
jp
xchg
xlat
inc
test
and
pop
fsubrl
jbe
dec
lcall
je
add
bound
js
mov
add
xlat
adc
mov
xor
or
push
pop
push
shl
hlt
lds
adc
pop
adc
test
in
push
and
fiadds
sbb
lods
push
inc
or
pushf
cmp
pop
xor
insb
jmp
pop
ss
push
stos
add
inc
inc
jo
inc
js
cmovno
test
xor
imul
inc
xchg
xchg
or
add
push
ret
xor
or
es
sbb
xor
xchg
mov
or
jecxz
or
cmp
in
push
jns
xor
xor
xor
xor
push
jp
sub
xor
mov
or
push
js
mov
in
out
dec
enter
jo
mov
movsl
pop
shll
sub
adc
add
and
jl
shl
je
add
mov
jmp
add
and
cwtl
call
lret
inc
cmpsb
call
mov
out
xchg
xchg
fincstp
mov
cmp
arpl
mov
add
daa
push
adcb
mov
pop
lds
aas
bound
add
data16
dec
pop
into
lock
loopne
dec
adc
fldl
les
repz
mov
pusha
aad
js
xchg
add
inc
mov
stos
push
loopne
sbbb
xchg
sti
decl
imul
movsl
inc
mov
push
lock
shrl
pop
dec
sbbl
inc
lcall
decl
or
test
rclb
mov
shll
repnz
mov
pop
adc
add
cmp
mov
inc
add
mov
jnp
mov
inc
lods
fs
mov
jno
dec
ds
jl
sub
and
and
shrb
enter
outsl
int3
mov
or
jns
pop
gs
scas
cmp
lods
or
or
sbb
ljmp
addb
push
mov
cmpsl
add
xchg
jbe
inc
les
adc
xor
pusha
lea
stos
pop
and
sbb
add
insl
cmp
arpl
pop
adc
and
sbb
rorb
in
movsl
in
enter
push
test
add
fcomp
cmp
loopne
loopne
jo
or
call
call
cmpsl
sbb
test
clc
dec
test
cmp
adc
lods
sbb
mov
cwtl
adc
sarl
scas
cltd
sbb
or
push
dec
xor
inc
negl
mov
dec
jo
pop
or
or
cs
xchg
cmp
dec
dec
dec
jns
shrb
addr16
dec
rolb
and
add
xchg
int3
push
icebp
lods
in
add
pushf
inc
repz
cmp
dec
mov
pop
leave
pop
repz
imul
or
cltd
nop
or
cltd
nop
or
or
cltd
nop
push
pop
xchg
xchg
fs
mov
mov
pusha
pop
leave
push
or
leave
test
out
sub
push
ret
pusha
outsl
jns
out
jle
pushf
stos
mov
leave
fsub
testb
jns
sub
dec
pop
jno
pop
pushf
out
xchg
stc
lea
fiadds
shrb
js
lods
ret
dec
fucomi
lods
in
push
xor
je
add
test
lret
sub
imul
sub
cmp
lahf
out
fsubrl
lock
pop
sub
dec
pushf
test
pop
rcrl
add
outsb
pop
dec
cmp
pop
sub
inc
cmp
sbb
sub
push
test
lods
mov
and
loopne
dec
push
dec
inc
shlb
xchg
sbb
into
push
rolb
cmpsb
pop
stos
je
or
std
and
add
das
push
or
bound
mov
aas
in
jmp
outsl
push
jb
or
mov
mov
aas
cmpsl
arpl
push
bound
or
inc
sti
addr16
inc
fidivrl
inc
bound
aaa
adc
or
arpl
sbb
mov
or
push
mov
cmp
aaa
jne
mov
pop
pushf
add
xchg
mov
add
mov
inc
mov
inc
push
sub
cmp
push
sub
test
push
popl
shlb
or
rclb
mov
enter
popa
or
push
xor
pop
dec
or
aas
inc
push
aaa
pusha
push
push
dec
adc
subb
add
jne
xchg
push
or
jle
and
js
push
mov
loop
mov
addr16
dec
dec
inc
repnz
sub
addr16
xchg
lds
cmpsl
aam
and
nop
add
aas
or
add
pop
dec
xchg
adc
bound
mov
lcall
mov
daa
push
subb
adc
dec
orb
pop
daa
lahf
adc
pop
aaa
in
gs
bound
inc
add
mov
arpl
and
xlat
dec
jo
or
out
xor
or
or
inc
adc
fcoml
sub
or
movb
cmpsl
push
sbb
cmpsb
wbinvd
dec
scas
or
mov
inc
mov
dec
push
mov
pop
xchg
push
scas
add
dec
aaa
clc
pop
push
cld
mov
fbld
dec
xchg
push
sub
or
dec
or
stos
mov
adc
cmpsb
notl
or
popa
jnp
adc
cmp
rcr
push
cmpsb
inc
or
mov
adc
inc
imul
adc
lahf
addl
insb
or
add
mov
ja
inc
mov
push
sub
push
sbbb
sub
mov
dec
add
movsb
bound
sbb
or
ficoml
adc
mov
push
dec
stos
adc
outsl
ret
and
loope
add
lcall
push
adc
mov
jmp
sub
xchg
push
or
add
dec
add
jecxz
sbb
cld
repz
jne
inc
pop
pop
push
xor
arpl
cmp
mov
adc
fs
lock
push
and
sub
adc
sub
mov
mov
adc
dec
fcoml
sarl
xor
pop
les
out
dec
jb
test
push
cmpsl
cli
pop
inc
dec
in
cmp
bound
pop
iret
shrl
jp
mov
into
repz
lcall
ret
push
enter
pop
add
add
jecxz
mov
or
cmc
and
adc
or
push
cmpsb
xor
pop
adc
es
test
rcr
xor
dec
cmp
adc
or
fdivs
test
pop
test
repnz
and
lcall
les
sub
adc
gs
outsb
std
ds
clc
pop
add
fnstcw
and
flds
and
jbe
scas
mov
adc
xlat
outsl
push
xor
pop
in
pop
adc
lahf
imul
daa
push
jg
xor
push
dec
sbb
pop
aaa
push
xor
adc
sbb
or
xor
sbb
dec
mov
fisubs
dec
sbb
pusha
cmp
xchg
mov
cmp
add
fucomi
pop
cmp
cmpl
add
jmp
int3
sbb
je
push
inc
jp
add
out
xchg
mov
cmpsb
aam
jns
adc
test
inc
pusha
or
scas
or
mov
addr16
sbb
fisubs
pop
or
sbb
xor
and
test
adc
and
sub
imul
adc
adc
pop
jl
dec
xchg
hlt
mov
xor
adc
sarb
cmpsl
dec
rol
push
xor
adc
pop
leave
pop
add
repnz
imul
sub
xor
pop
and
pop
sbb
add
out
int3
lahf
mov
pop
and
cmc
aas
xchg
push
movb
jmp
mov
fcmove
jns
and
fs
dec
ljmp
mov
pop
and
int3
rcll
mov
dec
imul
adc
pop
bound
ret
mov
jno
cmp
push
addr16
imulb
pop
hlt
lcall
mov
jno
sbb
cmp
imul
sbb
clc
sbb
pushf
and
lods
sbb
cs
test
sbb
sbb
pop
fwait
pop
leave
mov
ds
imul
aam
xchg
inc
inc
sbbl
adc
dec
aaa
mov
lods
or
pop
or
mov
dec
loopne
or
push
daa
xor
inc
xor
mov
leave
adc
leave
rorl
cmp
push
lds
dec
enter
jo
and
or
adc
ss
add
pop
jo
imul
push
lcall
mov
adc
mov
nop
adc
push
sub
push
enter
mov
mov
mov
push
dec
mov
pushf
jle
dec
outsl
mov
movsl
sbb
insb
push
aaa
sbb
sub
or
rcll
mov
inc
pop
pop
pop
add
insl
fwait
add
pop
dec
jb
lea
add
dec
pop
lock
or
call
aas
push
repz
outsb
mov
jno
mov
lods
out
outsl
or
jbe
roll
pop
or
mov
or
repnz
shll
into
push
movl
jmp
or
xchg
std
and
jo
mov
andb
mov
cmp
jb
fsub
or
lret
add
cmpsl
add
or
mov
pusha
imul
mov
or
add
jle
lea
ljmp
adc
pop
lcall
cmp
sub
test
iret
add
push
xor
cmp
cltd
xchg
adc
xchg
lods
push
les
enter
cld
std
sub
push
add
mov
dec
sub
jmp
insb
or
sub
inc
sub
add
test
ss
into
lea
aaa
dec
ret
or
cwtl
dec
sti
jmp
push
aad
mov
jecxz
adc
jo
sbb
pop
shl
add
ret
fcoml
inc
jno
aam
dec
test
icebp
or
mov
leave
fidivrs
mov
sub
lock
jo
lea
adc
push
jmp
add
sub
and
adc
inc
hlt
xchg
loope
lea
fdivl
ret
add
add
xor
xor
test
add
pop
es
in
outsb
push
and
dec
xor
xchg
jp
daa
rolb
aad
jmp
inc
daa
xchg
or
mov
fwait
jbe
mov
add
cmpsl
movb
push
stos
inc
adc
pop
and
aad
add
add
adc
xchg
push
stos
fcomip
in
add
adc
jge
push
mov
cltd
daa
cmc
aam
push
iret
mov
ljmp
jmp
leave
dec
push
outsl
add
das
cmp
add
je
mov
sbb
jno
lea
mov
inc
jmp
mov
mov
adcb
adc
pop
or
pop
jb
and
inc
push
sub
push
inc
dec
popf
andb
or
loopne
inc
mov
push
sbb
cmp
inc
adc
mov
lock
adc
sti
and
cmp
sbb
xchg
adc
sub
mov
lcall
je
push
cmp
adc
rolb
daa
push
ss
mov
dec
movsl
sub
sub
jno
adc
clc
in
jle
mov
push
add
or
and
push
or
mov
imul
addr16
scas
inc
jle
mov
jne
or
rcll
xor
sarb
adc
test
pop
sub
push
sarl
cmp
jp
sbb
sub
adc
data16
cmp
nop
ja
sbb
nop
testb
pop
imul
cmpsb
pusha
adc
or
mov
ret
shlb
sub
jbe
and
stc
pop
push
outsl
dec
pop
pop
ss
push
ss
or
jns
popa
std
sub
and
jae
int
sbb
or
mov
mov
fcmovu
adc
imul
repz
or
xchg
sub
pop
cmp
mov
sbb
aas
push
push
mov
xchg
inc
scas
fildl
lahf
pop
jecxz
or
jmp
cmp
and
add
cli
cld
or
mov
and
cmp
popa
mov
add
dec
test
pop
xchg
jle
cmp
mov
and
cmp
imul
aaa
rorb
pop
pushf
inc
and
sbb
insl
scas
outsb
jnp
mov
mov
and
subb
cmc
xor
xchg
xchg
lahf
sub
les
cld
push
add
or
mov
jp
cmp
int
ret
add
and
xor
int3
or
stos
pop
inc
or
scas
xor
jecxz
jne
add
cmpsb
sub
cld
inc
xchg
mov
adc
test
fcmovbe
mov
xchg
cs
lahf
mov
rol
orl
sbbl
cltd
push
sub
jmp
sbb
inc
or
movsb
clc
dec
sbb
ja
sbb
and
inc
add
int3
insb
push
jnp
pop
aam
sahf
addb
xor
and
or
mov
bswap
popf
add
or
push
sbb
push
and
pop
jne
fwait
pop
xor
or
xchg
adc
inc
and
mov
jne
adc
dec
into
imul
pop
add
movsb
fs
cmp
stc
or
jno
lahf
repnz
pop
test
cli
bound
push
and
and
aam
insl
inc
xlat
jne
sbb
rcrb
idivl
mov
leave
mov
and
jp
inc
inc
xchg
inc
cmp
inc
and
jge,pt
push
outsb
xorl
add
pop
shlb
xchg
inc
stos
inc
fists
add
adc
jge
cmp
add
mov
aaa
orb
test
jno
pop
mov
stc
xchg
inc
mov
mov
iret
dec
or
andb
inc
fstpl
jmp
and
xchg
fucomip
dec
and
jmp
sbb
clc
push
sbb
dec
and
repz
ljmp
pop
sub
push
adc
mov
mov
adcl
inc
sbb
icebp
scas
lret
hlt
and
pop
mov
inc
dec
cmpb
jnp
mov
inc
outsl
mov
stos
movsb
adc
add
in
or
fcoms
imul
push
sbb
add
sbb
xchg
roll
pop
das
lock
clc
iret
push
cmc
outsb
imul
arpl
sub
add
mov
inc
sub
sub
jo
sub
out
and
xlat
inc
push
xchg
sub
mov
mov
jl
push
pusha
shlb
jge
shlb
adc
incb
cmp
ret
push
dec
inc
movb
add
add
iret
loopne
push
rdmsr
rclb
jle
dec
cmp
jns
or
push
add
mov
pop
xor
test
add
jne
push
pop
jbe
or
mov
mov
movsb
divl
into
dec
roll
cmp
add
aad
push
idivl
ss
mov
lcall
inc
xchg
shl
xor
jae
or
pop
jl
setp
add
adc
add
push
enter
sbbb
or
push
push
pop
and
stos
xchg
dec
or
adc
pusha
pop
mov
std
add
movsl
loop
dec
movl
and
cmc
add
push
and
lock
aam
aas
sbb
xchg
adc
cli
adc
lock
add
dec
push
dec
test
and
mov
fstpl
repnz
inc
pop
clc
add
adc
fistpl
leave
mov
pop
push
subb
push
ds
pusha
fs
out
push
inc
ss
pop
adc
shll
sbb
inc
cmp
ret
pusha
xchg
push
nop
dec
and
adc
add
dec
push
pop
in
scas
mov
mov
addr16
sub
add
frstor
add
aaa
xchg
add
pop
jne
cmpsl
pop
pop
cmc
and
mov
adc
adc
loop
and
lea
and
das
data16
shrb
add
inc
or
ds
addl
or
leave
dec
sub
xchg
adc
push
xrelease
outsb
loop
je
lcall
or
sub
stc
and
rcll
add
xlat
fbstp
add
fildl
arpl
push
sbb
mov
stc
into
lsl
jle
sbb
mov
fcmovnbe
add
or
adc
push
stos
in
push
cmpsl
sub
pop
ljmp
ret
dec
xchg
pop
addr16
shrb
inc
jmp
sub
gs
push
fs
sbb
inc
xchg
int
pusha
adc
sbb
or
mov
add
inc
add
mov
cmp
icebp
pushf
dec
sbb
xchg
sub
sbb
push
xchg
adc
push
mov
xor
or
and
sub
push
xor
or
push
sbb
gs
int
leave
into
mov
or
insb
sub
sub
mov
cmp
out
push
mov
add
jo
popl
aaa
orl
dec
and
mov
arpl
mov
pop
inc
xor
pop
push
test
sub
or
xor
push
pop
sbb
pop
pop
popa
roll
and
testb
adc
push
xor
adc
xchg
dec
les
mov
data16
xchg
loopne
mov
pop
xchg
mov
enter
daa
icebp
pop
or
push
jg
mov
bt
add
push
jo
adc
iret
pop
fistpl
push
inc
xor
or
scas
and
xorb
lods
mov
add
add
addb
push
xchg
mov
cmpsb
mov
xlat
adc
imul
and
jnp
adc
aas
mov
int
sub
fidivrl
popa
dec
fisubrs
adc
pop
enter
add
or
andb
push
push
clc
int
jo
pop
jle
mov
push
or
addl
fstps
sbb
add
dec
dec
sahf
jns
jne
add
cld
or
xor
xchg
and
sbb
adc
repz
dec
pop
popf
repz
loope
icebp
arpl
push
or
and
and
imul
stc
adc
push
leave
sbb
or
xor
sbb
jmp
push
dec
mov
test
and
jge
jmp
sub
inc
lahf
or
mov
jl
jl
test
mov
roll
sbb
das
push
cmp
xor
sbb
adc
push
fdivrl
add
jbe
mov
add
dec
daa
adc
and
fsubl
das
mov
mov
fidivrl
add
notb
jne
inc
or
mov
subl
mov
add
rorb
ret
push
inc
and
add
add
negl
sbb
or
and
inc
mov
mov
je
and
xorb
adc
jne
stos
inc
aam
out
loope
jg
push
mov
out
push
call
cmp
sbb
or
and
xor
iret
mov
mov
inc
outsb
mov
loopne
inc
push
pop
outsl
jmp
rclb
push
lea
ss
sub
mov
dec
pop
loop
xchg
and
adc
adc
jle
adc
push
inc
mov
inc
sbb
pop
gs
xchg
jle
aas
cltd
xchg
ret
push
sbb
shlb
inc
pop
add
dec
adc
sbb
and
test
and
cwtl
in
pop
or
cmc
lods
xlat
xchg
sbb
ss
xchg
add
or
or
add
ret
hlt
adc
xchg
ss
inc
sub
mov
dec
mov
inc
xor
inc
test
mov
push
xorb
mov
popf
arpl
in
mov
adc
xchg
sbb
mov
add
out
fadds
jp
or
cmp
sti
pop
jge
mov
ss
cmp
repz
mov
mov
mov
inc
push
push
and
jae
mov
scas
mov
sbb
or
push
adc
fisubl
add
sub
mov
add
inc
in
sahf
outsb
adc
inc
push
hlt
cmp
cld
add
push
or
in
add
push
movsl
shlb
sub
jae
jno
add
fcmovu
inc
jno
push
push
hlt
adc
inc
sarb
in
xor
xchg
aaa
rcl
push
insl
push
mov
dec
adc
inc
pusha
xlat
aas
in
xchg
fs
fldcw
jne
lret
fisubl
bound
push
mov
in
in
call
aaa
push
loope
pop
add
inc
aam
andb
jne,pn
stc
in
sbb
cmp
das
mov
sbb
je
rorl
enter
and
add
gs
sbb
fs
js
lcall
dec
jo
das
and
pop
and
add
insb
xor
insb
sbb
lods
jmp
lret
cmp
pop
push
dec
and
fimull
xor
je
dec
fiaddl
sbb
push
lahf
shrl
pushf
add
push
or
fidivl
rolb
push
adc
ds
ret
push
mov
sub
dec
mov
bound
cmp
aaa
cltd
push
daa
jge
mov
sub
jno
jb
or
enter
push
xchg
aaa
add
pop
xor
addb
je
xchg
shll
nop
sub
xchg
sbb
cmp
and
in
and
sbb
push
and
imul
fmuls
dec
push
mov
pop
mov
xchg
or
inc
and
iret
iret
xchg
das
sbb
push
pusha
inc
push
push
adc
das
enter
insb
jo
inc
push
sbb
xor
jl
push
adc
xor
enter
sbb
shrl
jmp
rcrb
lea
lret
stos
or
mov
lcall
ret
adc
cmp
adc
cmp
mov
push
sub
sarl
mov
push
mov
arpl
sbb
or
mov
inc
iret
xor
sbbl
mov
xor
loopne
add
xorb
push
aaa
jbe
and
pop
pusha
or
or
xchg
jo
daa
leave
sbbl
in
and
adc
insb
roll
iret
xchg
mov
sbb
hlt
mov
pop
sub
xchg
nop
xchg
inc
pop
or
mov
lods
adc
in
push
repnz
out
inc
jecxz
xor
fnstenv
mov
mov
jge
and
lret
fs
xorb
or
inc
push
orl
mov
xrelease
pusha
cmp
dec
or
mov
movsl
mov
add
adc
and
fdivrl
jno
les
jg
adc
dec
and
adc
inc
gs
sub
in
mov
push
cld
mov
cmp
ret
cmpsb
call
pop
push
xchg
or
cltd
add
scas
and
cmpb
inc
xor
loopne
mov
and
sbb
test
daa
call
jb
cmpsl
jl
sub
xchg
popa
shll
mov
or
mov
push
or
mov
add
sbb
in
popa
cmp
pop
out
pop
push
ljmp
sub
lret
xchg
je
pop
loope
sub
dec
lret
fwait
in
add
gs
mov
fsubrs
stc
xchg
movsb
xchg
add
lods
testl
jne
xchg
stos
jo
leave
pop
sbb
lock
xor
xchg
or
add
dec
xchg
je
rcl
sub
push
loope
adc
je
or
pushf
mov
cmp
add
fs
inc
test
sbb
lret
inc
or
inc
cmp
icebp
adc
call
pop
mov
inc
ret
and
push
idivb
adc
cs
or
lcall
sbb
rcrb
adc
mov
sub
mov
push
add
pop
xchg
or
cmpsl
add
bound
mov
pop
inc
push
jo
shll
inc
call
inc
add
dec
dec
aaa
push
mov
lock
ret
fwait
dec
xchg
adc
insl
hlt
jle
shrl
div
imul
in
push
sbb
aaa
mov
sbb
lret
push
enter
pusha
lock
popa
rcrb
adcb
or
dec
or
adc
sub
sub
loopne
inc
lods
xor
loop
ret
adc
xor
std
or
cmpsb
pop
cmpl
mov
dec
rorb
lock
ljmp
jl
add
adc
ret
jl
lods
push
jl
jl
sub
xor
xor
pop
out
jg
lret
ret
mov
jno
or
mov
roll
addb
jne
push
sub
xchg
pop
and
mov
push
adcb
cmp
pop
or
insb
loopne
xlat
sbb
enter
dec
inc
aad
adc
pop
aaa
xor
add
cmpsl
mov
push
mov
add
xor
daa
jno
subb
movsb
sub
jno
xchg
mov
negl
js
adc
dec
push
dec
push
gs
ja
and
test
pop
sbb
xchg
mov
adc
ja
xchg
xchg
or
xor
rorl
xor
pop
fcoml
addr16
orl
inc
sti
das
add
xor
and
mov
mov
push
push
cmp
mov
cmpsl
push
dec
push
dec
add
and
lods
test
and
dec
cmp
xor
insl
sbb
dec
mov
inc
ret
sub
sti
test
push
je
push
call
shll
fdivs
fdivs
loop
adc
jl
lock
lret
loopne
mov
and
inc
add
jmp
pop
xchg
xchg
jns
xor
orb
cmp
repnz
xchg
fst
mov
fcmovnb
out
sbb
cltd
mov
inc
or
ja
mov
mov
add
sub
pop
insb
pop
push
int
add
push
int
xchg
xor
addr16
fisttpl
or
add
mov
mov
push
inc
pop
enter
add
repnz
je
push
mov
imul
add
test
push
add
push
mov
jns
fcoms
lea
aaa
sub
rolb
das
sahf
jb
push
mov
push
jb
inc
cmpsl
aas
cmpsl
sbb
dec
testb
jg
adc
movl
xchg
and
in
insb
or
sbb
mov
dec
mov
mov
mov
xchg
dec
cmp
shrl
adc
mov
nop
sub
inc
lods
loopne
movsl
add
adc
adc
mov
ja
lods
ret
dec
adc
dec
add
arpl
and
dec
pop
xor
pusha
cmp
or
ljmp
push
inc
imul
or
stos
jne
loopne
mov
add
add
sbb
int3
cmp
lahf
add
ret
sub
cmp
xor
test
movb
and
fs
ret
push
mov
inc
add
incl
daa
fs
or
push
in
cmp
lea
push
les
std
out
test
xor
xchg
add
lds
sub
ss
cmpb
fs
cmp
cmp
push
sbb
cmp
pop
mov
add
or
fsubrs
aad
cmp
and
insl
lock
stos
inc
jmp
push
xor
adc
es
mov
push
in
adc
push
rclb
mov
mov
xchg
cmp
or
inc
leave
test
dec
mov
inc
add
mov
pusha
xchg
and
int
mov
push
bound
pop
or
adc
push
sahf
std
test
inc
mov
jne
inc
sbb
hlt
inc
jmp
fdivrs
test
jbe
sbb
pop
mov
enter
mov
cmpsl
dec
fsubrl
xor
cmp
push
or
inc
cmp
inc
ss
xchg
dec
adc
mov
adc
lods
test
popl
arpl
or
pop
push
inc
sub
dec
push
xchg
push
pop
stc
adc
mov
shr
mov
aaa
jo
mov
pop
sub
sbb
dec
and
lret
inc
lods
sub
or
enter
popa
call
shl
mov
pusha
push
shll
bound
dec
mov
and
mov
lret
in
add
inc
xor
out
cmp
push
adc
outsb
pop
jae
jne
xchg
cmp
aam
xchg
rorl
cmp
test
insb
push
aaa
je
push
jb
insb
lret
and
push
cwtl
inc
cli
push
jno
loop
aam
nop
or
push
inc
push
das
mov
inc
and
mov
sbb
dec
and
sub
xchg
roll
add
shlb
ss
dec
and
push
test
dec
shl
add
mov
aas
or
cs
imul
push
adc
add
daa
sub
aas
shrl
sbb
sbb
icebp
test
mov
out
aam
std
push
inc
adc
imul
loope
mov
test
push
insb
jle
or
mov
push
push
jbe
push
push
cmp
loopne
into
fimull
je
sbb
pop
dec
xor
and
adc
cmc
sbb
xchg
sub
shl
insl
dec
ret
mov
xchg
cmp
pop
xor
or
fs
pop
mov
lcall
in
push
cmovs
mov
dec
adc
push
call
sub
rol
add
insb
xchg
or
pop
lret
push
xchg
jge
outsl
pop
push
and
lahf
or
mov
sub
sbb
mov
jb
sahf
cltd
and
jl
sahf
test
pop
push
mov
adc
es
dec
inc
fldt
adc
and
pusha
add
sbb
fs
mov
and
push
in
adc
dec
ret
or
test
adc
mov
xchg
rorl
out
adc
test
adc
push
mov
add
add
xchg
sub
mov
jns
lea
insl
lock
fadds
dec
pop
sbb
jecxz
fisttps
mov
test
add
cltd
divb
inc
stos
hlt
and
fildl
cmp
je
pop
fists
inc
sub
jo
fstps
fwait
aad
mov
repnz
addr16
test
repnz
push
cmp
inc
push
adc
inc
inc
sub
daa
das
ss
mov
and
mov
xor
inc
shr
enter
stc
mov
adc
pop
adc
xor
pop
inc
mov
add
dec
sub
gs
xchg
lret
fs
movl
out
adc
jmp
add
hlt
jno
pusha
add
test
inc
cmpsl
inc
imul
adc
pop
cli
rclb
push
and
or
lret
xor
xchg
push
lea
dec
jecxz
push
pop
mov
sub
push
xor
inc
sub
int
popa
stos
mov
fists
jno
adc
xor
lahf
mov
leave
dec
add
lea
cmpsb
scas
jl
adc
insl
inc
sbbl
sub
test
sub
pop
dec
xlat
add
inc
sbb
push
fistl
add
shr
insb
iret
xchg
je
enter
add
mov
sub
adc
fidivrs
sub
cs
fists
pop
mov
movsl
and
sub
inc
orb
jo
cmp
outsb
test
cmpsl
mov
xor
push
and
or
and
sub
push
ljmp
inc
dec
fldcw
push
inc
inc
insb
cmpsb
add
ror
cwtl
push
mov
dec
insl
scas
lahf
insl
add
scas
out
cmpsl
stos
addb
inc
imul
and
add
add
scas
xchg
xlat
test
mov
inc
roll
lahf
xor
adc
notl
sub
cli
packsswb
mov
aam
js
ds
in
cmpsb
push
in
push
lock
in
fmull
sbb
rolb
cli
xchg
and
xor
inc
ds
andl
xchg
xor
sbb
shll
add
and
jg
dec
les
and
dec
pop
js
fiaddl
mov
cwtl
mov
xchg
lods
leave
add
aam
jns
pop
aaa
call
mov
mov
add
jno
cmp
add
test
decl
cli
or
and
cld
bound
gs
dec
stos
and
mov
xor
mov
cmpsb
mov
pop
bnd
cltd
orb
and
imul
test
adc
dec
pop
add
out
adcb
into
dec
dec
aad
and
inc
jg
mov
imul
push
enter
pop
popa
push
add
mov
jg
jmp
adc
lock
add
pop
cmp
lret
fdivs
push
cli
or
das
and
xor
fmull
adc
mov
sbb
inc
or
adc
inc
popa
hlt
sbb
popf
fdivrs
xchg
pop
cmp
mov
and
inc
mov
add
ds
sbb
push
push
pop
in
pop
insl
sub
xchg
pop
or
inc
fs
cmpl
leave
jne
adc
jno
lea
jecxz
push
inc
test
movb
inc
cmc
cmp
jg
cmp
jge
push
cs
push
sbb
jge
hlt
int
and
call
xchg
pusha
pop
and
les
fldl
jmp
xchg
xlat
sub
xchg
movsl
add
stos
dec
push
ja
sub
aas
xor
popf
outsl
movl
pop
mov
fsubl
popa
imul
orb
ja
push
enter
mov
dec
inc
cs
arpl
push
cmp
adc
lea
add
test
push
push
push
shlb
outsl
pop
push
rolb
stos
cmpl
aas
xchg
fistl
loopne
daa
jae
pop
aaa
mov
pop
daa
hlt
mov
mov
test
push
and
add
test
pop
jmp
push
jmp
in
pop
gs
cmp
jg
incl
dec
sub
sub
je
shr
sahf
sub
jmp
or
sbb
inc
mov
movsbl
lods
test
inc
jecxz
push
paddusb
dec
or
jo
outsl
mov
ret
loopne
or
add
pop
jno
clc
sbb
mov
pop
cmp
xor
inc
inc
sub
xor
push
hlt
and
lods
xor
lods
aas
sub
inc
jo
add
pop
addr16
sub
fistpll
je
in
push
mov
arpl
pop
xchg
add
dec
aam
jp
cmp
inc
sub
insl
inc
sub
clc
test
rclb
loope
and
sub
adc
test
sub
sbb
das
mov
sub
xorb
dec
push
adc
sarb
rolb
jmp
push
addb
push
out
or
ja
cmp
std
mov
stc
push
push
sarb
addr16
jge
in
add
sbb
call
mov
addb
lds
adc
and
das
pusha
out
aaa
cmpl
adc
arpl
rcrb
jge
mov
imul
mov
mov
push
lea
pop
add
sub
addb
mov
sub
xchg
mov
adc
mov
sbb
add
xchg
addl
aad
mov
dec
xor
repz
sbb
add
xor
or
pop
add
out
push
pop
aaa
sbb
mov
ja
repnz
xor
cwtl
pusha
addb
arpl
loop
dec
sub
fldt
movsl
in
mov
adc
pushf
mov
pop
xor
mov
pop
cmc
inc
scas
call
inc
xchg
rcll
push
inc
mov
int
pop
adc
xchg
rclb
xchg
xchg
adc
in
sbb
cmpsb
sbb
je
test
adc
mov
out
mov
in
push
pop
inc
inc
add
adc
aam
hlt
cmc
rorb
fcmovbe
lea
cmc
pusha
mov
xorb
ds
pop
iret
dec
cmp
das
xchg
inc
sub
xorl
or
pop
sbb
cmp
add
faddl
dec
pop
arpl
add
test
dec
pop
mov
pop
jo
inc
mov
sub
jg
add
dec
xor
jbe
mov
jg
lea
hlt
ret
xchg
sub
push
add
inc
dec
xchg
aam
daa
push
int
add
dec
add
pop
dec
xor
sbb
fisubs
mov
daa
push
insl
aaa
enter
jle
mov
fwait
adc
sub
ljmp
inc
and
dec
imul
into
dec
in
or
push
add
adc
ja
xor
inc
sqrtps
test
pop
scas
aas
jne
aaa
pusha
and
mov
fs
dec
outsb
out
hlt
int
mov
add
dec
dec
insb
cmc
adc
sub
xor
icebp
fistpl
movsb
push
test
mov
push
addr16
cmpsl
xchg
data16
mov
mov
mov
xchg
or
jb
sbb
cmpsb
jo
inc
mov
jns
adc
or
loopne
inc
or
add
sub
inc
and
inc
add
addr16
fldt
sbb
subb
and
hlt
out
pop
pop
sbb
lock
pop
add
jno
pop
lcall
cld
inc
push
xchg
insb
add
dec
jo
pop
and
lahf
je
xchg
test
fsubs
adc
sbb
push
insl
cmpsb
lods
xor
push
sub
aam
adc
movsl
fdivs
or
dec
mov
nop
out
arpl
out
shlb
enter
add
inc
or
push
cmpsb
loopne
push
cmpsl
mov
mov
sub
push
push
mov
add
jge
xchg
pop
dec
aam
xor
ret
in
in
push
xchg
push
call
and
pop
add
test
movsb
adc
or
mov
les
lock
out
push
pusha
sbbl
xchg
add
movl
rcrl
xor
mov
mov
cld
push
adc
outsb
and
add
inc
nop
inc
loope
pusha
fs
or
arpl
ljmp
xchg
ja
scas
jmp
sbb
fistpll
and
clc
jmp
sbb
add
pop
dec
sbb
out
sub
enter
ret
popf
pop
adc
call
xlat
mov
cmp
xchg
hlt
add
sbb
rcrb
cs
dec
hlt
hlt
sub
and
stc
mov
icebp
add
adc
sub
fwait
push
mov
sbb
adc
add
adc
sbbl
inc
in
xchg
push
mov
inc
insb
sbb
xchg
sahf
imul
enter
sbb
rcll
mov
pop
cmp
enter
out
cld
push
imul
sub
or
enter
xchg
pop
pop
loopne
inc
or
mov
add
nop
in
xor
cmp
push
and
or
mov
cmp
xlat
not
push
xchg
dec
aas
cmp
jge
out
xchg
and
adc
jle
sbb
hlt
xlat
mov
xlat
pop
test
sub
mov
arpl
rcr
adc
sbb
push
and
and
add
sub
add
out
pop
sbb
push
pop
add
sub
mov
adc
or
pop
pop
lods
adc
adc
add
xchg
hlt
and
xor
clc
xlat
mov
lods
add
inc
jb
rcr
pop
adcb
cwtl
popl
insb
xchg
and
iret
in
sub
iret
pop
adc
insb
lcall
adcb
lds
stc
das
enter
rolb
fadds
sbb
sbb
sbb
orl
iret
js
inc
jb
outsb
pop
push
repnz
bswap
enter
xorb
jge
or
das
jae
pop
enter
sub
adc
jns
jb
push
scas
flds
and
test
xor
inc
aaa
push
je
movb
aad
inc
xchg
jl
inc
sub
mov
pusha
pop
hlt
cwtl
sub
push
in
lret
push
xor
addr16
pusha
and
jno
add
dec
and
test
sbbb
push
lcall
hlt
inc
addl
add
cmp
add
loopne
test
sub
or
jns
popa
inc
xor
xor
mov
xchg
sub
rcrb
stos
test
and
add
aad
xchg
dec
adc
inc
fimuls
das
adc
push
sbb
shlb
cmpsl
xchg
push
pop
mov
cmpsl
shlb
stc
mov
cmp
shlb
xlat
add
adc
imul
or
xor
in
je
xlat
int3
xor
inc
pop
mov
and
sub
lea
or
add
imul
or
in
fldt
and
and
push
jg
addr16
lock
push
dec
lods
or
mov
adc
test
nop
cmp
push
stos
xchg
rclb
add
add
xchg
pusha
addl
cmpsb
mov
mov
aaa
test
add
mov
test
fisttpll
xchg
sub
jge
dec
cmp
in
mov
mov
pop
cmp
xchg
nop
and
push
data16
pop
mov
lret
dec
subl
mov
into
lahf
jl
mov
adc
mov
js
subb
inc
add
dec
aad
roll
pusha
jbe
push
xchg
nop
mov
sub
mov
jnp
ret
scas
orl
jb
hlt
lock
or
jmp
push
sbb
andl
xchg
inc
fisubs
fsubl
xor
pop
push
or
adc
sub
mov
dec
or
fmull
nop
xchg
mov
mov
mov
adc
sub
test
xchg
add
dec
add
and
mov
xchg
xor
cmpsl
mov
addl
pop
or
adc
fistps
mov
inc
add
inc
add
out
dec
not
aam
push
nop
inc
shlb
lret
and
add
cmpsb
inc
xchg
iret
jo
aad
insb
jno
aam
jmp
adc
or
and
nop
daa
ret
adcb
push
adc
add
pop
enter
mov
aaa
jmp
ret
mov
inc
jmp
repz
sub
fcompl
jmp
cmp
divb
adc
ret
enter
fsubl
inc
repnz
add
and
inc
movl
cmpsl
mov
ss
shl
mov
lods
fisttps
js
jbe
push
cmp
pop
sub
inc
and
pop
add
pop
jmp
adc
shlb
out
sub
sbb
inc
int
push
xor
clc
xchg
mov
add
iret
lahf
addl
jecxz
push
or
adc
shlb
xlat
push
pop
sub
insl
or
mov
or
or
or
test
insl
lret
push
add
or
or
xchg
mov
lock
lcall
push
lcall
imul
mov
fbstp
in
sarl
mov
dec
and
pushf
imul
push
shrl
fdivs
add
push
inc
call
jg
ret
add
push
lods
add
mov
loope
pusha
cmpsl
popl
les
sub
add
pop
mov
push
jo
adc
jg
nop
insb
sub
ss
sub
adc
ret
cmp
mov
nop
scas
cltd
in
mov
insb
and
in
inc
mov
push
jb
or
movsb
sbb
and
insl
push
mov
pop
shl
imul
push
aam
push
nop
push
movsb
xchg
dec
adc
daa
in
push
enter
movl
jb,pt
leave
jo
in
xchg
sbb
repnz
into
and
popa
movl
sub
iret
loopne
inc
sbb
xchg
popa
in
mov
inc
enter
call
ret
lret
call
pop
or
jns
add
push
push
outsb
loope
mov
mov
mov
pop
mov
pop
mov
xor
pop
sbb
add
mov
add
xchg
outsb
add
and
stos
adc
cmpsb
push
shlb
mov
add
xor
pmulhuw
mov
loopne
insb
adc
xchg
jge
xchg
push
sub
lcall
add
mov
inc
inc
push
adc
daa
xchg
pop
fs
dec
test
lods
and
movsb
sub
push
jo
jge
test
or
jno
ja
test
dec
adc
pusha
pop
jmp
xchg
and
mov
mov
adc
sub
test
cmp
add
in
xchg
cmp
pcmpeqb
adc
jl
jle
adc
mov
sbb
adc
dec
or
adc
mov
mov
shr
xor
movb
add
sub
mov
and
and
cmpsl
nop
xchg
cmp
sbb
cld
sub
dec
add
out
or
inc
dec
pop
mov
dec
dec
add
xchg
xchg
js
push
daa
ja
cmp
popa
dec
inc
dec
vmaxss
mov
sbb
xlat
xchg
mov
xchg
addb
andl
jb
pop
aam
pop
or
adc
je
push
int
repz
vmread
mov
pop
pop
test
rcrb
sub
pop
push
lret
dec
or
lock
iret
or
mov
lret
cmp
movsb
inc
push
rclb
cmp
pop
jno
icebp
mov
adc
shlb
add
bound
lahf
sbb
mov
add
movsb
negl
cmc
and
and
sbb
int
xor
cmpsl
mov
jecxz
test
mov
pop
movsl
sbb
std
push
and
push
nop
dec
mov
pop
and
mov
movsb
sub
push
into
mov
dec
inc
sarb
cmp
mov
pusha
jae
ss
ficoml
and
mov
pop
adc
sub
loop
jns
jecxz
adcl
or
jb
mov
rorb
add
and
inc
mov
xchg
ret
mov
aam
sbb
mov
jg
lea
in
xchg
fcmovnb
sub
in
xchg
xchg
adc
pop
ds
cmpb
add
dec
and
cs
aad
or
pop
movq
and
inc
rcrb
dec
add
cs
add
add
hlt
mov
inc
dec
adc
adc
sub
inc
inc
mov
jno
or
rclb
mov
hlt
add
cmp
mov
enter
popa
push
mov
pop
cmp
repz
inc
stos
rclb
jae
add
pop
xor
inc
imul
dec
sub
outsl
or
jbe
push
xchg
aaa
fisubl
js
mov
and
sbb
in
scas
loopne
adc
cmpl
outsl
xor
fadds
sub
roll
loopne
loopne
imul
shlb
and
add
shlb
fstpt
inc
inc
inc
test
push
clc
inc
cmp
mov
mov
in
mov
mov
and
sbb
test
xchg
and
add
fsub
xor
and
aam
out
add
mov
pop
in
lea
shrb
clc
imul
inc
add
cmpsl
jg
xchg
and
xchg
lcall
sbb
adc
dec
aas
pop
sub
adc
xchg
stos
pop
test
enter
daa
dec
jb
sbb
fadds
xchg
out
sbb
incl
or
int3
fcmovb
cmc
imul
sub
pop
pop
inc
cwtl
push
cmp
mov
jo
js
movsb
xchg
mov
repnz
xor
fisttps
xchg
xchg
xchg
sub
push
push
leave
mov
lahf
add
outsl
adc
sarl
push
and
jle
mov
and
out
xor
out
xlat
xchg
clc
adc
add
pusha
popf
inc
sub
out
mov
stos
add
fs
adc
add
jo
leave
mov
adc
cmp
inc
or
xor
or
and
adc
imul
push
les
xor
adc
in
jns
test
add
aad
adc
nop
push
and
jecxz
dec
sub
xor
clc
push
cmp
shr
imul
addb
dec
and
hlt
xor
mov
jl
sbb
cmpb
mov
mulb
enter
cltd
pop
dec
adc
and
test
out
jb
pop
int3
test
inc
cmpsl
add
pop
xchg
popf
inc
into
pusha
add
dec
pop
jecxz
mov
daa
dec
mov
sbb
lods
mov
push
cmp
sbb
pushf
pushf
popa
imul
sbb
push
cwtl
push
jo
xchg
push
imul
repnz
insl
adc
outsl
lock
cmpsb
inc
push
jne
mov
sarb
mov
inc
lods
rclb
iret
push
repnz
insb
cwtl
xchg
cwtl
inc
enter
cwtl
loopne
jb
mov
or
icebp
add
mov
adc
jnp
hlt
xor
cltd
jns
fistpll
dec
pmulhw
dec
mov
scas
shll
fimull
mov
popl
mov
mov
push
xacquire
test
or
adc
pop
sbb
das
movsb
push
push
clc
xchg
ret
pop
shufps
jg
test
cmpsb
pop
js
add
or
inc
or
rol
xchg
adc
pop
or
inc
lret
mov
inc
mov
push
xor
outsb
and
cmpsb
sbb
add
xor
or
push
and
or
add
xor
pop
and
or
push
shrb
cli
or
outsl
pop
inc
xchg
movsb
pop
and
and
pop
pushf
mov
xchg
rclb
adc
or
in
mov
add
or
lret
sbbb
cmp
loope
adc
das
inc
lods
cmp
aaa
out
lods
add
push
out
pushf
jle
movsl
sub
push
fistl
imul
mov
pop
popf
dec
pop
xchg
sbb
push
and
fnstenv
nop
fidivrl
lret
sbb
nop
lods
jnp
gs
mov
inc
dec
nop
xchg
in
or
add
sar
data16
nop
mov
and
leave
dec
cli
xchg
sahf
out
js
xlat
pop
cmpsl
pop
in
add
outsb
addl
dec
fidivl
jo
loope
test
stos
pusha
shlb
sbbl
dec
mov
popf
pop
sub
test
xor
pop
sub
sbb
inc
dec
outsl
insl
sbb
mov
fdivl
test
push
scas
mov
dec
or
push
mov
mov
xchg
push
inc
aad
lock
mov
mov
test
xor
lods
fld
add
sub
add
popa
inc
out
ljmp
push
mov
and
test
inc
cltd
outsb
add
xchg
mov
lods
mov
popa
enter
mov
pop
jg
mov
cmp
ss
add
or
add
adc
cltd
push
add
outsl
add
xchg
adc
add
scas
bound
rcl
mov
jns
mov
sbb
in
mov
js
dec
pop
mov
inc
and
mov
scas
repnz
rclb
dec
xchg
lods
roll
push
push
pop
mov
and
nop
lret
mov
aas
adc
mov
roll
out
aas
xchg
andb
xchg
dec
push
clc
mov
adc
adc
adcb
xchg
sub
or
xor
add
adc
je
push
sbb
mov
mov
in
rcl
and
dec
or
adc
loope
movsl
or
cmp
pop
adc
pop
adc
push
into
fiadds
sbb
insb
xchg
cmp
mov
movsb
scas
dec
inc
cmp
mov
or
dec
cmp
sub
jo
push
enter
movsl
cmpsl
add
shlb
ficompl
loope
movsl
sbb
je
jo
or
data16
orl
adc
sbb
push
fcmovb
dec
jbe
or
and
dec
or
adcl
scas
sbb
xchg
cmpsb
sub
cmpsb
test
mov
enter
xchg
andb
sub
sub
je
daa
inc
sbb
clc
pop
rcrl
pop
loope
fimuls
sub
push
repnz
dec
out
pop
pushl
cmp
sub
jae
mov
add
mov
and
nop
repnz
sub
pop
test
mov
pop
sbb
mov
dec
bswap
cwtl
cmp
dec
or
bound
lock
cs
push
mov
pop
nop
ret
mov
cmp
cmp
inc
or
fsub
dec
movsl
mov
inc
or
dec
xchg
mov
add
add
leave
jmp
xor
fsubrl
xor
and
sbb
cmp
into
adc
loope
pop
fistps
shlb
iret
mov
adc
sub
test
cmp
test
test
lahf
dec
test
gs
lahf
nop
add
push
fwait
test
aad
repz
adc
dec
stos
push
stos
xor
inc
or
daa
xchg
mov
and
orl
js
xor
js
stos
pop
js
scas
inc
or
inc
stos
and
loopne
lock
add
lcall
jg
movsl
insl
adc
enter
pop
inc
stos
and
sub
add
addr16
movsb
xchg
adc
mov
add
cltd
mov
ss
and
sub
inc
mov
mov
sbbb
enter
adc
mov
pop
add
lcall
pop
rolb
pop
mov
sbb
fcompl
dec
or
pop
xchg
lods
adc
lret
andl
adc
adc
cmp
lock
lods
pushf
lods
inc
orl
roll
xchg
sub
roll
fadd
fisubs
xchg
loope
aam
and
jne
andb
cmpsl
sub
imul
js
enter
or
pop
sbb
imul
xchg
pusha
nop
and
lock
mov
inc
adc
dec
push
sub
or
cwtl
test
in
lds
lds
mov
xchg
pop
adc
mov
cmc
xor
xchg
mov
into
cs
sub
mov
add
fs
or
and
ret
mov
inc
cmp
insb
loopne
inc
movsl
inc
rolb
push
jae
clc
addl
fcoms
scas
mov
push
orl
repnz
xlat
push
les
mov
dec
mov
movsb
shr
mov
sub
lds
pusha
sub
in
xchg
jno
push
and
cmc
push
leave
jae
xor
cmpl
cmpsb
mov
aad
pop
add
adc
mov
mov
xchg
xchg
in
sbb
sub
mov
pop
push
xchg
add
push
inc
push
popa
pushf
test
or
sbb
adc
bnd
in
mov
in
fbstp
xchg
neg
push
push
pop
adc
sbb
mov
and
push
push
aas
mov
rcrl
fcmovnb
xchg
cmp
test
enter
cltd
and
and
pop
jmp
sbb
or
mov
andl
je
and
pop
mov
cli
mov
xor
movsb
outsb
inc
xchg
sti
mov
mov
push
inc
loope
cmpsb
push
jl
pop
out
or
add
add
inc
or
adc
push
xchg
xchg
jno
pop
and
movsl
mov
cmp
jne
loop
mov
out
add
push
push
mov
dec
cmp
mov
xchg
push
push
cmp
in
push
add
push
mov
pop
mov
in
cmpsb
mov
fstpt
out
lcall
or
lods
and
mov
mov
add
jmp
push
mov
clc
inc
mov
popa
push
or
add
inc
jae
push
lret
lock
repz
xchg
inc
clc
imull
rcrl
jae
stc
xor
mov
loopne
test
les
adc
es
pop
mov
popa
insl
sbb
push
shrl
jo
adc
inc
jo
jo
pusha
ficomps
mov
inc
daa
pushf
ja
pushf
dec
testl
pushf
mov
rorb
out
jp
pop
call
xchg
imul
add
aas
arpl
push
daa
cmpb
sub
sbb
mov
int3
pop
loop
sub
fndisi(8087
mov
adc
xchg
adc
pop
rorl
enter
out
sbb
inc
and
clc
lret
mov
test
or
or
cmp
or
push
pop
sahf
sbb
scas
dec
inc
fwait
xchg
add
push
adc
jecxz
lods
xor
push
call
and
add
pusha
in
xchg
xor
dec
test
pusha
dec
jecxz
sbb
and
jmp
or
enter
mov
imul
call
inc
sbb
rcrb
aaa
or
cmc
pop
jp
out
sub
sbb
test
or
xchg
add
add
adc
sub
pop
insl
fstpt
and
negl
or
mov
or
scas
sbb
push
fwait
mov
mov
nop
cmpb
mov
mov
and
lock
lret
pop
fld
sub
sub
pop
enter
xor
jno
jne
add
xchg
inc
repz
jl
jp
sbb
enter
lock
dec
loop
insl
inc
inc
sbb
test
test
mov
sbb
sbb
add
dec
jne
aaa
lds
test
lods
add
xor
jl
ret
jbe
or
pop
pop
xlat
sbb
xchg
sbb
sub
inc
pop
push
dec
mov
push
outsl
cmpsl
adc
mov
pop
pop
add
mov
adc
sbb
test
jg
ja
mov
push
addr16
test
xchg
punpckhdq
dec
push
fs
sbb
mov
ds
and
and
ja
and
call
std
cmp
sbb
rol
lret
add
jno
ret
push
scas
mov
mov
and
add
mov
inc
add
jbe
popa
subb
enter
jge
pop
iret
mov
mov
jns
mov
pop
and
inc
test
adc
jmp
xlat
int3
or
loop
data16
adc
sbb
jmp
adcl
pop
mov
xor
lods
xchg
dec
stos
push
xchg
popa
mov
aas
mov
test
sbb
cmp
ret
scas
mov
ja
mov
scas
stos
js
cltd
ss
jb
mov
jg
pusha
flds
nop
inc
fs
push
ret
sbb
mov
sbb
push
out
adc
mov
or
pop
mov
sbb
insb
mov
inc
daa
or
arpl
or
push
mov
dec
lock
jno
push
rclb
outsl
and
adc
rcrl
sbb
js
jb
push
fnstcw
scas
sub
mov
imul
aad
or
adc
clc
adc
ds
lret
lock
sbb
push
add
mov
daa
pcmpeqb
pop
or
cmp
xor
jecxz
mov
sbb
dec
inc
sbb
adc
xor
and
add
or
push
aad
outsb
sbb
pop
aaa
out
into
out
xor
addr16
sbb
ret
les
and
je
imul
ret
push
mov
jae
inc
into
js
or
popf
lret
hlt
leave
mov
xor
pop
dec
repz
nop
ret
into
aam
xor
jns
in
ret
addl
and
cld
jmp
cmovs
mov
insb
and
pop
push
or
adc
movsb
add
andb
jne
mov
cld
and
push
les
push
add
sbb
lahf
lcall
inc
cmp
push
pop
ret
ljmp
aas
outsl
pop
fisubrs
cmp
inc
adc
fisttpll
sbb
and
movb
sub
call
and
rcrb
mov
test
sbb
sub
add
add
adc
adc
sti
mov
vcvtsd2ss
dec
pushf
pusha
inc
jp
in
xor
mov
push
mov
pop
dec
aam
sbb
gs
lds
clc
or
mov
hlt
inc
xchg
test
hlt
mov
hlt
hlt
inc
mov
leave
add
push
sbb
arpl
push
movsl
mov
mov
lcall
popf
sahf
jne
pop
dec
bound
adc
or
push
movsb
sub
and
push
xor
lock
sti
mov
je
inc
lea
imul
or
mov
mov
cmp
iret
add
adc
pushf
mull
inc
jmp
mov
pop
add
jae
pop
sbb
movsb
loopne
jbe
movsl
and
repnz
inc
or
test
stc
pop
adc
loop
push
pop
pop
sar
fdivrs
or
push
inc
mov
inc
adc
outsl
mov
mov
push
loop
lea
mov
inc
inc
outsl
movsl
xorb
in
outsb
out
lock
jmp
xchg
adc
mov
push
inc
sbbb
fabs
enter
adc
adc
adc
jecxz
or
sbb
inc
inc
loope
mov
out
sti
pushf
jp
in
add
add
ja
leave
pop
mov
push
orl
lods
mov
sub
mov
enter
sbb
and
lcall
hlt
mov
inc
adc
addr16
push
cltd
dec
and
out
lret
test
push
xchg
and
int3
pop
pop
bound
out
imul
push
fdivrl
sbb
push
push
scas
testb
mov
roll
xchg
dec
dec
xchg
sbb
test
sbb
addr16
orb
mov
fwait
sub
popf
lret
aam
mov
pop
scas
arpl
repz
xchg
pop
sbb
sbb
test
add
sbb
inc
inc
mov
push
lods
leave
je
pop
push
daa
inc
add
loopne
adc
add
add
mov
int3
cmp
cmpsl
sub
pop
xor
ds
inc
adcb
and
addr16
nop
and
mov
cmp
pop
mov
pop
ja
nop
dec
push
aaa
jg
cmp
mov
mov
xor
mov
lods
cmpsl
ret
xchg
xchg
int
enter
adc
jns
iret
push
into
sub
sahf
jae
sarl
dec
and
inc
or
test
add
loop
imul
js
rol
xor
mov
testb
or
stos
or
xor
arpl
cmp
pushf
xchg
inc
or
adc
pop
add
push
inc
or
jbe
stos
stc
mov
mulb
cwtl
loopne
adc
mov
test
outsl
push
mov
icebp
dec
fadds
xchg
push
mov
xchg
push
imul
push
aam
xor
fists
mov
outsl
adc
sahf
add
imul
shrb
push
cmp
xchg
ss
pushl
or
popa
or
das
mov
pusha
xor
in
xchg
iret
sarb
add
sbb
adc
enter
xchg
xor
shrb
xor
mov
add
fcoms
mov
mov
add
dec
sti
movb
push
pop
sbb
shll
mulb
cmp
js
sub
inc
pop
daa
fiadds
push
jo
sub
dec
cmp
jle
cmp
ret
fiaddl
divb
jge
or
fldl
inc
adc
cmp
xchg
mov
mov
xchg
dec
addl
inc
mov
sbb
sub
sbb
leave
movsb
cmp
and
sahf
sub
outsb
aam
cmp
sbb
inc
test
adc
mov
adc
jle
push
mov
mov
fmul
inc
loop
sub
outsb
xchg
pop
dec
outsb
pop
pop
aas
pop
mov
notl
or
mov
fwait
xor
or
lret
int3
mov
ret
cmpsb
lods
xor
adc
and
pusha
push
xchg
rclb
enter
cwtl
rcrb
cs
and
mov
jne
dec
or
mov
scas
mov
pop
add
jp
insl
rclb
or
xor
sub
add
push
adc
dec
cs
adc
sbb
xor
lds
repnz
cmp
and
adc
shll
and
rorb
cmp
cmp
add
sti
sarl
mov
and
cld
lock
jne
jmp
les
in
sub
jg
insl
lea
xchg
lods
add
dec
or
mov
jns
mov
aam
sbb
push
es
pop
and
sbb
cwtl
es
arpl
rol
jmp
dec
dec
mov
ljmp
imul
jle
add
dec
cmp
jge
mov
sub
xchg
mov
add
rorl
mov
lret
les
push
jmp
fistps
jmp
js
sub
jmp
daa
cmp
sbb
push
jmp
and
insl
sbb
stc
and
pop
inc
call
ret
cltd
cwtl
mov
xchg
scas
mov
fadd
and
inc
insl
xchg
out
and
enter
dec
test
pop
insl
add
daa
movsl
ds
push
addr16
dec
es
mov
das
adc
arpl
jo
sub
adc
jmp
femms
add
and
mov
dec
aam
xchg
popf
addr16
aad
jge
gs
pop
aas
int3
fcoms
and
xchg
les
lret
sbb
and
adcb
and
cmp
sbb
sub
or
sub
movsb
cltd
std
xchg
push
das
xor
outsl
add
imulb
or
aas
jecxz
scas
mov
xor
sahf
mov
sub
es
xor
mov
sub
and
mov
mov
inc
sub
ljmp
mov
and
push
adc
aaa
sbb
push
inc
pop
enter
mov
insb
sbb
push
dec
ss
add
shll
dec
adc
sub
ret
rclb
jl
cmpb
loop
ds
inc
mov
ds
push
rol
cwtl
inc
mov
and
xchg
inc
jo
or
rorb
add
sti
bound
bound
push
xor
cmp
bound
js
inc
testb
or
or
and
mov
push
pop
dec
and
cmp
sub
out
add
sbb
pop
dec
cmp
dec
shlb
sub
pop
xor
fcom
jns
popa
xor
je
dec
xor
pop
jo
dec
and
fsubr
push
inc
aas
mov
iret
dec
stos
sub
cmp
add
cwtl
mov
adc
xchg
fcmovnbe
or
arpl
inc
insl
sbb
xor
aaa
add
pop
inc
int
push
js
jne
fistpll
mov
cmp
js
rclb
pop
push
sti
sbb
lret
fadds
xor
cmp
jecxz
push
sbb
fbstp
dec
cmp
dec
pop
mov
pop
fsubr
push
cmpb
pop
ficoml
or
add
xchg
xchg
nop
mov
xor
aaa
cs
cltd
addr16
into
sub
pop
adc
inc
and
imul
adc
rclb
dec
add
clc
mov
icebp
push
xlat
xchg
lock
nop
int
pushf
ffreep
mov
sub
daa
pop
in
xchg
dec
sbb
in
mov
ljmp
daa
add
mov
dec
sahf
pop
adc
xchg
inc
sbb
test
rcrb
mov
imul
push
loop
cmpsl
push
int3
push
add
mov
ja
or
pushf
pop
fistps
mov
loop
shl
mov
ret
dec
push
mov
jg
ljmp
sbb
cs
inc
mov
std
and
imulb
movsb
pushf
mov
fiadds
cmp
pop
mov
inc
xor
mov
add
cmp
cmpsl
push
or
insl
pop
mov
xchg
sub
push
inc
data16
cltd
fsubrs
xlat
dec
sti
sub
add
sub
imul
and
mov
addb
sub
mov
jns
adc
xor
dec
cld
fists
lahf
fimuls
sub
jo
add
imul
ficoml
pop
or
pop
mov
addb
leave
inc
push
clc
fsubrp
fisubs
xchg
jno
nop
push
bnd
xor
movsb
fcoms
add
jb
call
jns
loope
xchg
test
les
jp
xor
adc
add
jae
popa
xor
pop
test
addr16
or
xor
cmp
les
add
jmp
popa
lods
mov
fbstp
adc
out
mov
test
xchg
movsb
test
hlt
and
add
and
inc
cwtl
add
shl
inc
fidivl
lea
jne
and
sub
or
cmp
dec
ret
sbb
fisttps
insl
test
pop
push
add
fisubs
adc
loope
jmp
and
mov
in
cmpb
push
xchg
or
bndstx
and
dec
mov
mov
insb
ja
cmp
adc
jne
das
enter
jb
cltd
loope
cmp
or
das
dec
cmp
aam
mov
xlat
adc
hlt
or
je
sbb
or
je
add
pop
in
sahf
or
and
in
nop
or
pop
movsl
mov
jecxz
fldl
or
add
dec
rcll
iret
lret
add
jmp
or
je
imul
fisttpl
cmp
jl
je
jb
jmp
test
push
sub
mov
pop
pop
les
push
and
jb
mov
jne
adc
mov
nop
cmp
orb
xor
inc
fisubrl
inc
jbe
or
pusha
or
push
call
movl
loopne
in
icebp
loope
dec
sbb
and
or
push
adc
stos
adc
and
and
ret
add
fimull
adc
fnstsw
inc
aas
mov
push
cs
je
test
dec
add
sbbb
inc
in
shlb
nop
faddl
mov
inc
jb
je
fcomps
idivl
mov
and
cmc
test
test
bound
daa
adc
rorb
outsl
push
adc
cld
cmp
inc
sbb
sub
js
pop
in
imul
sub
mov
mov
shlb
in
dec
add
xchg
xchg
sub
or
sbbb
jg
nop
mov
dec
mov
adc
jecxz
or
and
xchg
imul
xor
pushf
fnsave
sub
idiv
push
inc
sti
pop
cmp
cmp
lock
cmp
lods
cmp
inc
cmp
sbb
cmp
rorb
pop
cmp
add
or
inc
arpl
cmp
jne
clc
movb
pop
hlt
push
jb
xor
cmp
sbb
rcrl
adc
mov
nop
or
lahf
out
sub
test
and
ret
add
push
sbb
pop
adc
push
test
jae
mov
in
push
xor
or
mov
push
out
sbb
sbb
shrl
sub
inc
lods
and
mov
out
and
out
mov
mov
cmp
push
inc
adc
and
pop
cmp
push
and
fistpl
rol
fcoml
cwtl
ret
adc
inc
inc
repz
sub
push
mov
add
or
imul
and
loop
gs
hlt
mov
out
or
cmpb
cmp
mov
ljmp
jg
jg
outsb
dec
inc
fbld
sbb
dec
and
repnz
pop
out
push
push
push
mov
mov
add
pop
mov
mov
jp
sbb
sbb
jmp
imul
cmpsl
adc
push
jmp
cvttps2pi
mov
jmp
cmp
sbb
dec
stos
subl
lahf
xchg
cmp
xchg
cmp
out
add
mov
xchg
add
xchg
dec
js,pn
cmp
add
or
add
add
mov
add
add
add
adc
adc
and
fisttps
jle
or
adc
fldpi
outsb
cld
jns
cmpsl
jge
das
ljmp
jns
out
mov
out
sahf
lret
aad
jmp
fdivrl
mov
push
dec
scas
add
add
cld
adc
mov
jl
add
xor
fsubr
mov
jo
dec
call
pop
rorb
inc
cltd
cmp
mov
and
push
adc
adc
notb
or
lahf
add
aad
add
and
adc
lds
inc
nop
dec
clc
and
stos
or
add
hlt
lock
cli
in
div
mov
and
in
sbb
jle
pop
sbb
sub
inc
loopne
xchg
dec
rcrb
push
lcall
jmp
xor
mov
and
add
inc
mov
mov
add
jg
adc
inc
mov
lock
daa
inc
xor
lret
jp
cmpsl
in
fucomi
add
push
adc
push
push
or
adc
push
add
pop
or
pop
add
pop
adc
pop
add
mov
adc
mov
shl
out
decl
out
sahf
out
sahf
sbb
cmpsl
xor
out
int3
ljmp
iret
repz
jb
and
and
jns
scas
imul
loopne
fisubl
pop
cmc
jae
mov
xor
insl
sbb
mov
xchg
clc
cwtl
sbb
scas
pop
add
and
pop
out
mov
rcrb
dec
repnz
mov
cmp
test
cmp
pusha
inc
pop
stc
xor
add
enter
leave
push
fwait
jge
inc
call
pminsw
fstpl
fwait
dec
in
dec
int3
add
fldl
rorb
jne
push
in
imul
test
je
movsl
jmp
mov
enter
mov
jo
jae
mov
mov
pushf
movsl
add
pop
and
leave
inc
push
aam
jmp
mov
xchg
sub
mov
call
movsl
repz
mov
std
sarl
sbb
xchg
mov
jno
or
jp
lods
fxtract
sbb
add
jp
xchg
pop
inc
hlt
cmc
jp
or
jne
scas
iret
push
fistpl
mov
cwtl
add
pop
sbb
pop
clc
lret
xor
das
inc
nop
push
and
adc
ret
scas
cmp
cltd
mov
cmpsl
sub
add
jmp
sarl
sub
jno
mov
mov
lds
sbb
pop
push
xor
jae
out
addr16
mov
sub
aaa
in
bound
repz
jns
sbb
mov
cltd
lcall
repnz
or
or
push
sbb
sbb
add
mov
inc
add
adc
pop
sahf
push
push
jl
jns
jns
adc
hlt
xchg
jbe
push
lock
iret
repz
and
inc
dec
pop
outsl
cmp
movsb
leave
decl
jbe
push
dec
pop
je
xchg
cmp
repz
rcl
add
sbb
js
inc
test
in
xchg
mov
mov
or
push
mov
stc
fs
mov
gs
rorb
lahf
rolb
inc
outsb
sbb
xchg
cld
mov
sub
mov
icebp
adc
mov
xor
pop
pop
insb
dec
push
pusha
xchg
out
rcrb
push
inc
enter
leave
add
test
out
in
adc
or
js
pop
pop
hlt
dec
divl
orb
adc
mov
cld
es
pusha
add
sbb
shlb
xchg
loope
sbb
push
xor
repnz
inc
ds
lods
std
pop
call
xor
fmuls
rcrl
push
and
loope
mov
jmp
inc
jmp
cmpw
cwtl
arpl
or
push
inc
ret
repnz
mov
and
ds
shll
js
xchg
pop
xor
push
push
adc
jns
mov
cltd
rcrl
mov
shlb
das
aam
sbb
popf
mov
fs
rolb
jge
notb
je
mov
scas
addb
cld
sbb
add
mov
dec
sar
inc
adc
adc
mov
arpl
js
xor
mov
xor
call
mov
dec
push
in
pop
pusha
mov
lcall
and
add
push
xchg
xchg
ret
enter
outsl
out
xchg
testb
les
rcrl
or
popf
add
clc
mulb
jge
or
and
mov
mov
je
mul
outsl
jecxz
out
dec
divl
mov
xchg
test
fs
orb
add
push
adcl
sub
call
loopne
mov
jmp
mov
ret
push
push
mov
hlt
jmp
pop
aaa
int
test
cmp
inc
mov
dec
stos
xchg
test
mov
sub
out
dec
push
or
mov
dec
adc
ret
lea
iret
les
adc
inc
cmp
movsl
inc
xchg
jne
or
and
imul
rorb
lea
or
scas
xchg
sub
inc
push
xor
sub
andl
scas
sub
hlt
add
dec
pop
cwtl
lret
ja
push
inc
add
cmpb
xchg
fmuls
fdivl
adc
push
shlb
cmp
iret
xchg
aaa
dec
add
sbb
sub
or
iret
and
adc
jne
cmp
adc
test
sub
lods
xchg
orl
sbb
lock
add
nop
push
mov
orb
xor
cli
je
aas
dec
sub
aaa
dec
jge
rcl
jns
mov
out
push
cli
es
rorb
lcall
or
leave
movb
filds
dec
mov
xchg
mov
sbb
rol
jg
sub
cwtl
xor
mov
add
inc
mov
hlt
adc
inc
cmp
mov
add
stc
rclb
cmpsb
movsl
pop
pop
inc
cmp
inc
imul
bound
adc
jmp
xchg
or
mov
xor
jmp
push
add
add
dec
and
inc
add
nop
bswap
and
jno
pop
fildll
add
dec
pop
js
les
or
adc
sbb
add
sub
inc
or
cmp
inc
sarl
inc
popa
and
sub
in
dec
pop
inc
sbb
inc
push
rcrl
mov
jmp
movsl
xchg
stos
push
pop
incb
addr16
push
nop
cmp
jns
outsb
decb
mov
push
dec
and
or
adc
and
dec
xchg
mov
rorb
sub
enter
mov
mov
add
cmp
setge
test
mov
push
xchg
adc
mov
xorps
leave
and
or
add
les
push
pop
push
test
mov
mov
leave
and
or
nop
adcl
in
push
nop
mov
in
mov
mov
pop
test
daa
sbb
test
push
mov
mov
or
movl
add
xlat
pop
iret
imul
pusha
sbb
bound
push
mov
dec
test
movsl
leave
in
jg
add
inc
dec
in
dec
mov
push
inc
jb
inc
xor
or
mov
pop
int3
jp
or
jmp
and
mov
sbb
inc
mov
dec
push
test
out
sbb
incb
inc
adc
lds
pusha
inc
mov
adc
cmp
jbe
and
insl
pop
loop
mov
xor
push
pop
cmp
nop
dec
insb
les
lahf
out
push
pop
clc
mov
jmp
sbb
jp
pop
nop
xor
faddl
aas
pusha
lea
or
rcrb
popa
popa
cmp
add
loopne
or
mov
outsb
add
xchg
jbe
fs
mov
sbb
push
lods
xor
mov
cmpsb
push
aad
cmp
sub
mov
repnz
cmpsb
ja
mov
js
dec
or
or
subl
push
mov
cmp
stc
clc
xchg
sbb
popa
insb
test
shrb
and
inc
jge
dec
lret
decl
mov
in
mov
jp
inc
jbe
xchg
in
out
or
and
scas
aam
mov
and
push
sbb
push
hlt
cmp
lods
jbe
sbb
loopne
add
gs
xor
fs
add
cs
addr16
sarl
mov
sub
je
and
daa
sbb
popf
cmp
mov
sete
xlat
pusha
shlb
stos
movsb
cs
pop
or
jne
dec
pop
out
or
dec
cmp
push
or
add
nop
dec
es
or
sub
jne
mov
cmp
sbb
or
jg
or
and
or
enter
into
jge
popf
cwtl
ret
xor
push
jmp
mov
jmp
stos
inc
xor
sub
cs
xlat
cmp
jg
cmp
adc
std
xchg
jmp
cmp
or
inc
pop
outsb
ja
inc
mov
cmp
xchg
adc
negb
arpl
dec
je
add
cli
mov
push
adc
ja
ljmp
pop
dec
pusha
jmp
or
adc
sbb
sub
fs
inc
push
or
push
mov
jmp
or
je
sub
insb
cmp
ret
ret
mov
pop
pop
jp
lret
jo
pushf
jmp
lods
and
cmp
addl
jmp
pop
lret
fisttpl
enter
movsb
das
adc
jmp
add
mov
dec
inc
push
pop
push
push
ljmp
push
adcl
push
dec
fadds
test
push
xchg
xlat
rorb
lret
or
inc
or
pushf
nop
or
adc
sbb
and
test
adc
dec
cmp
sub
fadd
pop
lods
xchg
pop
enter
mov
dec
pop
mov
xor
test
and
aam
xchg
xorb
imul
loopew
cmp
jno
and
in
lods
or
das
adc
push
rcll
dec
cmp
loopne
mov
popa
mov
push
and
or
in
sbb
inc
ja
int3
pop
lods
stos
sub
insb
or
push
cmp
cmp
popw
imul
dec
sbb
inc
inc
adc
xor
inc
inc
mov
stos
add
sbb
xchg
or
and
sub
xchg
pop
dec
rorl
lea
ds
push
movl
roll
andl
aam
dec
aas
mov
adc
push
mov
mov
xchg
mov
mov
dec
inc
dec
fwait
cwtl
push
pop
jb
pop
cmp
adc
cmp
mov
jae
nop
add
jne
test
roll
adc
jp
add
and
jl
stos
test
scas
cmp
loopne
mov
lcall
test
or
scas
pop
mov
sub
add
and
xor
lea
popf
rol
add
jle
xchg
rol
mov
and
mov
or
xchg
and
test
nop
xor
adc
mov
pusha
push
xchg
xchg
cwtl
sbb
in
ret
call
and
in
mov
add
or
xchg
inc
test
fwait
mov
jne
lods
jns
enter
daa
cmp
nop
xchg
mov
add
mov
mov
je
sub
fildll
sub
inc
sbb
xor
and
daa
shll
out
inc
mov
adc
iret
or
add
sbb
mov
imul
sub
mov
inc
xor
movsl
or
xchg
and
sbb
inc
adc
je
stos
gs
cmpsl
fisttps
test
inc
and
lahf
sub
nop
mov
movb
mov
dec
movsl
lcall
sahf
jae
loopne
add
and
lods
add
pop
inc
and
push
adc
and
mov
push
cmp
pop
cmp
pop
or
sbbb
int3
xchg
add
call
or
push
movsb
cs
call
cmpsb
in
lods
cmp
mov
lock
imul
ss
pop
cmp
in
jnp
sbb
pop
in
out
add
insl
fsubs
ret
sbb
adc
jge
nop
xchg
and
sub
adc
das
stos
pusha
jl
mov
or
fdivs
scas
cmp
bound
xchg
sahf
mov
mov
cmp
inc
je
hlt
cmp
sub
cmp
and
push
push
pop
xor
xchg
dec
addr16
push
jl
mov
inc
orl
arpl
and
scas
mov
push
aaa
repnz
jecxz
sti
and
int3
or
sub
ja
je
jg
repz
ds
sub
jb
enter
pop
mov
jne
cmp
pop
inc
jo
add
xchg
jle
or
xor
or
adc
mov
mov
xchg
or
cmp
movsl
ja
aas
je
lds
rcll
gs
xchg
pushf
xchg
add
push
jecxz
or
and
dec
lret
les
adc
inc
pop
dec
aad
mov
movsl
mov
jg
adc
popa
les
stos
dec
mov
mov
xor
hlt
jmp
sbb
in
mov
push
cmp
in
in
fwait
mov
and
push
push
pop
or
jp
adc
xchg
test
dec
pop
out
imul
ret
cmpb
lods
jmp
mov
inc
mov
mov
xchg
popa
jmp
adc
add
dec
clc
inc
fnsave
push
sub
leave
cmp
inc
pop
clc
dec
xor
add
das
shlb
xchg
mov
clc
loope
sub
outsb
xchg
xor
scas
out
dec
or
ja
lret
add
cmp
dec
xorl
notl
inc
dec
xchg
mov
ret
inc
sub
movsb
in
popf
push
sbb
mov
mov
xor
mov
sbb
push
mov
xchg
rolb
scas
mov
enter
xchg
push
sbb
xchg
jl
addr16
adc
jp
or
adc
inc
inc
mov
jno
rcll
sub
mov
adc
cmp
outsl
pop
sbb
cltd
adc
aad
test
xor
test
sub
cld
pop
cmp
mov
xor
iret
out
adc
aad
mov
jbe
andb
dec
lcall
pushf
es
adc
sti
jns
or
sub
xchg
or
and
roll
gs
stc
dec
and
in
and
jno
cmp
movsl
imul
sub
in
shll
pop
xchg
add
mov
les
leave
or
mov
incb
pusha
cmp
xor
adc
cmpsb
je
jnp
sbb
mov
jnp
pop
push
cmp
shll
cmp
push
fldenv
adc
mov
jp
inc
push
pop
les
push
and
nop
and
in
or
jbe
dec
sbb
adc
dec
test
je
cmp
xchg
mov
test
aam
lods
push
dec
shll
test
inc
or
lret
out
addl
adc
mov
imul
push
jbe
jnp
and
jmp
sbb
jecxz
insl
sbb
inc
rcrb
rolb
js
adc
leave
lcall
shlb
xchg
pop
jbe
or
pop
mov
test
inc
outsb
fwait
lock
jnp
xchg
add
fs
insl
daa
pop
push
sbb
mov
mov
pop
push
lods
jns
mov
xor
nop
rcr
xchg
shrb
das
sub
add
dec
addr16
sub
je
dec
inc
cmp
sbb
leave
jmp
jno
ret
cmpsb
add
pusha
fwait
inc
mov
fdivrl
cmpsb
and
cmp
mov
shll
xchg
ficoml
fcmovnb
fs
pop
out
dec
bnd
jo
rclb
add
sbb
pusha
movsb
add
mov
es
fmuls
mov
and
rol
sbb
sti
and
cmp
mov
jne
or
sbb
or
sbb
out
leave
lock
loopne
scas
loope
push
popa
ficoms
daa
scas
or
pop
xorb
push
jne
outsl
xor
arpl
sbb
push
cmc
cltd
insl
mov
push
incl
arpl
add
and
fsubs
cs
clc
repnz
inc
or
xchg
xchg
inc
bound
inc
adc
fs
rorl
push
or
mov
ret
xchg
mov
loopne
mov
aam
push
mov
push
ret
xchg
xor
stos
cmp
popa
jo
adc
dec
jecxz
inc
imul
outsl
xchg
icebp
outsl
fcompl
inc
cmp
ja
sarb
add
loope
sub
add
add
bt
aaa
dec
bound
pop
push
inc
sti
arpl
inc
out
cmpsb
inc
push
xor
mov
xchg
in
add
gs
insb
imul
or
inc
aaa
add
ss
inc
cmp
pop
hlt
xchg
lock
pop
loopne
or
sti
movsb
test
lea
mov
and
adc
enter
pop
mov
daa
fcomps
push
inc
cmovbe
jne
push
sub
adc
adcb
push
rclb
xlat
test
cmc
mov
ljmp
xor
subb
add
int3
dec
sbb
push
lcall
aaa
rclb
imul
das
cmpb
dec
pop
adc
inc
sbb
fld
sbb
std
mov
pop
les
mov
push
push
cmp
inc
xchg
add
sub
inc
adc
js
or
cmp
xchg
jp
mov
xchg
inc
push
jp
push
sbb
in
addr16
movsl
xchg
mov
mov
outsl
sbb
dec
loope
ret
leave
adc
test
and
call
aas
push
lret
lahf
loopne
ljmp
dec
inc
push
aad
cld
adc
call
aaa
xchg
dec
adc
or
add
or
sbb
pop
jo
fcomip
imul
mov
pop
or
jbe
popa
popf
je
jp
mov
push
adc
es
mov
mov
fs
add
inc
repz
nop
pusha
and
fs
cmpsb
mov
fsubrs
nop
pusha
loopne
inc
mov
adc
iret
add
xor
ret
shl
daa
pop
adc
xor
lea
std
sbb
data16
sbb
iret
push
inc
popa
daa
and
jae
adc
adc
subl
mov
cmpsl
mov
iret
add
insb
test
sub
lret
and
xchg
add
inc
ss
sub
mov
adc
push
sahf
xchg
ss
sub
push
pop
lods
fsubs
mov
pusha
sbb
test
cmpsl
inc
dec
mov
sub
xlat
cwtl
inc
jb
inc
and
add
mov
sarl
or
loopne
mov
mov
vsqrtpd
iret
and
dec
bound
ja
int3
mov
add
and
aas
push
test
shrb
inc
lahf
fisttpll
adcl
cmpb
fidivs
pop
push
xorb
lds
lcall
mov
dec
das
xor
sub
sarb
addr16
and
xchg
inc
sub
mov
fnstenv
xor
cmc
xlat
cli
xor
leave
push
jmp
test
aam
stc
cmp
xor
bound
sub
dec
fcomip
cmpb
in
or
pop
sub
shl
sbbl
adc
inc
or
xor
imul
lahf
mov
add
sub
aam
cmp
outsb
cwtl
add
and
jo
jns
jmp
ljmp
sub
sub
pop
jmp
sub
lcall
lea
inc
ljmp
negl
inc
cmpsl
test
and
mov
jg
lock
adc
add
cld
push
mov
loope
pop
ret
cmp
rolb
cltd
arpl
imulb
add
and
pushf
std
xchg
jp
mov
shll
jecxz
mov
adc
sub
add
or
dec
push
shrl
lea
mov
arpl
aaa
test
nop
lea
movsb
cs
ja
sub
ret
sub
shr
mov
movb
dec
sbb
pop
fstl
sbb
out
notl
sub
push
je
sahf
negl
push
inc
jno
inc
pop
mov
pop
add
dec
sub
pop
sbb
xchg
pusha
pop
push
fucomip
lcall
aaa
jo
lea
sti
fstpl
fwait
daa
dec
rolb
sbb
sub
xchg
sbb
out
sub
enter
mov
or
fldl
in
jne
xor
dec
orl
jo
mov
int3
mov
pop
sub
xchg
mov
or
lea
rcr
nop
sbb
pop
jmp
pop
dec
mov
enterw
sti
fnsave
inc
jmp
arpl
mov
test
push
pop
lret
jl
pop
adc
jmp
lds
lahf
repnz
or
sub
cs
and
inc
sub
cmc
mov
cwtl
xchg
mov
int
xlat
add
aaa
loopne
add
xor
jbe
vmwrite
add
fcomip
lea
je
fisubrl
test
add
and
sti
push
cmc
adc
je
loope
adc
mov
add
enter
xor
add
dec
scas
mov
cs
daa
xor
pop
outsb
dec
cltd
ds
lahf
andl
and
xchg
je
sbb
jp
sbb
sbb
adc
add
fdivrs
xchg
mov
pop
cmp
nop
dec
cs
xchg
ret
repz
mov
scas
or
mov
fstpl
fwait
orl
sub
adcb
push
ret
jmp
or
out
gs
or
cs
pushl
adcl
test
sub
sub
test
xchg
testl
xchg
fadds
push
loopne
pcmpgtd
sub
popa
outsb
add
sbb
cmp
adc
aas
mov
shl
aad
pop
or
add
sbb
mov
arpl
pop
jnp
cmp
test
subb
int3
jl
xor
push
pusha
xor
rdmsr
pop
xor
cmp
cmp
in
filds
pop
orb
pop
cwtl
jnp
stos
jecxz
mov
cmp
test
inc
and
push
cmpsl
and
and
push
pop
je
scas
imul
movsl
mov
and
or
sbb
testl
ret
push
clc
pushf
popa
bound
test
sub
xor
push
rcr
xor
xor
pop
adc
scas
sub
rol
pcmpeqw
nop
or
int3
jl
mov
mov
jmp
daa
inc
je
decl
adc
or
cmp
xchg
ficomps
sub
push
testl
dec
pop
es
rcrb
mov
test
das
cmp
mov
add
add
xor
rcl
add
push
fidivrl
sbb
aas
and
jle
test
xchg
sbb
jle
push
and
add
push
push
push
and
nop
data16
ret
xchg
sbb
imull
aad
dec
sub
sarl
mov
rclb
nop
or
dec
int
adc
mov
mov
adc
mov
or
xorl
sub
xchg
mov
arpl
jp
xchg
add
movsb
ss
add
lret
ss
jle
mov
movsl
jo
jg
notl
add
or
cmp
xchg
adc
les
lods
dec
and
arpl
dec
xchg
je
ret
sub
add
inc
adc
push
lahf
mov
clc
inc
test
sub
jbe
pop
lea
dec
in
dec
adc
pop
or
pop
mov
adc
jl
pusha
imul
and
movl
test
push
repnz
mov
sub
pop
pushl
pop
xchg
sub
mov
pushf
add
stos
outsb
neg
sub
push
mov
and
cmp
into
in
lea
pop
je
or
aam
push
adc
shll
mov
or
inc
dec
xorl
sbbb
mov
push
mov
and
shrl
push
add
jne
or
mov
mov
out
ficomps
movsb
jbe
xlat
adc
or
call
sbb
jb
mov
adc
inc
jns
jo
cmpb
inc
inc
adc
inc
inc
sbb
add
push
push
and
push
jne
xor
les
sbb
push
xor
pop
jno
add
lock
rcr
frstor
or
adc
and
cmp
fisttpl
popf
add
cmp
add
jne
cmp
pusha
dec
sbb
das
inc
xchg
add
xchg
outsl
push
push
jnp
fs
ret
and
adc
repnz
cmp
or
jge
jmp
outsb
out
test
dec
adc
rcll
test
pop
add
push
ret
pusha
xchg
orb
add
movsb
xor
jmp
jbe
pop
mov
add
or
nop
cmp
loopne
and
lock
andl
sub
imul
cmpsb
loopne
adc
mulb
dec
test
nop
movsb
mov
xor
loope
sub
lock
repnz
in
inc
je
inc
mov
imul
xor
cmpl
rclb
cmpsl
loope
addr16
daa
sar
push
dec
sar
jns
adc
popf
cs
rcll
push
rol
popa
or
cmpsl
push
push
stos
lcall
loopne
dec
arpl
jl
or
and
mov
test
sbb
aas
fmuls
sub
jle
cmp
je
adc
jbe
mov
pop
add
sbb
fnsetpm(287
sub
mov
sub
add
xchg
iret
xor
push
jae
pusha
clc
mov
xorb
cmc
ja
or
inc
pop
js
subb
sbb
fadds
inc
or
mov
cltd
jmp
cmp
inc
push
pusha
mov
mov
inc
je
ret
add
push
fcomps
arpl
pop
pop
jb
and
sbb
xchg
xor
xchg
pop
and
mov
rolb
or
adc
fistps
enter
nop
stos
sbb
sbb
ret
outsl
lahf
push
sti
and
add
das
test
gs
inc
sub
pop
jg
push
mov
daa
dec
adc
cmp
ss
loope
in
or
leave
sbb
and
xlat
dec
xlat
add
and
mov
mov
mov
cmp
push
sbb
xor
stc
add
push
mov
dec
add
out
lret
sbb
pop
les
ficomps
test
dec
push
or
outsl
sub
and
pop
mov
cmp
shr
pusha
push
or
push
pop
sub
pop
clc
or
insb
cs
push
out
mov
movsl
aam
xorb
scas
add
add
pop
daa
test
adc
add
rolb
inc
add
cmpsl
sub
adc
xor
cmp
mov
clc
rcrl
lea
orb
pop
inc
adc
sbb
nop
inc
sbb
popf
insl
inc
scas
imul
rcl
pop
jp
push
mov
pop
data16
jmp
ljmp
add
and
cmp
mov
movsb
cmp
sub
jnp
push
ja
or
insl
mov
dec
or
jg
push
jge
out
xchg
xchg
aaa
jle
dec
pop
dec
fildl
js
fistps
adc
jae
dec
jno
enter
or
sbb
je
sub
push
jne
icebp
lock
mov
dec
or
out
aad
or
add
dec
movsb
or
fwait
push
mov
negl
adc
mov
add
and
or
add
andb
or
add
test
aaa
or
aaa
mov
nop
push
bound
jnp
mov
jnp
popf
daa
inc
or
cli
mov
bound
push
mov
popl
mov
jb
adc
les
adc
jns
adc
in
jmp
scas
or
push
shll
xor
and
sbb
ret
push
or
cmp
insb
push
loopne
sbb
xchg
insl
dec
add
add
add
movsb
movsl
xchg
scas
fs
push
enter
mov
jns
cmpsb
das
push
insb
dec
mov
push
push
xor
rcl
xor
or
jo
das
lds
adc
fildll
adc
add
push
adc
fs
xor
adc
adc
mov
sbb
ficompl
mov
xor
xor
adc
xchg
adc
loop
fwait
in
inc
inc
mov
js
mov
arpl
and
jb
or
pop
ret
mov
sarl
push
push
lods
inc
push
inc
or
xchg
test
mov
mov
dec
xchg
sub
sahf
push
out
std
pop
out
addl
dec
inc
aad
lods
pop
int
or
add
or
adc
adc
test
fimull
xchg
adc
mov
jns
inc
cmp
cmpsb
loopne
std
psllq
cmpsb
lea
adcb
add
jb
add
pop
sbb
adc
shrl
adc
jg
sbb
dec
xor
dec
cmp
pusha
adc
cmp
imul
sub
xlat
jge
test
lods
and
cs
push
mov
scas
hlt
aas
nop
mov
lret
fistps
mov
mov
daa
in
sbb
push
std
inc
xchg
dec
shll
cmpsl
xchg
inc
sbb
pop
xor
mov
adc
inc
sub
sub
outsl
leave
cmp
add
scas
popf
or
xchg
flds
pop
lds
nop
lret
shl
stos
push
pop
cmpb
adcb
movsl
in
stos
xor
inc
add
jbe
add
stos
fiaddl
mov
add
mov
pusha
adc
and
adc
push
orb
popa
sbb
out
adc
cmp
add
sbb
jmp
pop
inc
xchg
and
pop
sub
mov
pop
or
sbb
daa
sub
or
and
adc
mov
fwait
adc
jns
adc
xorb
loope
je
jae
es
jo
paddw
add
cmc
inc
jne
adc
adcb
pop
shlb
xlat
loope
add
push
mov
pop
mov
test
sbb
add
cmp
pop
mov
adc
outsb
jnp
int
pop
cmpsb
cmp
test
jne
adc
xorb
mov
sbb
mov
clc
jl
fcomip
inc
imul
mov
jbe
push
pop
ror
cmp
mov
ja
jl
pop
subb
mov
add
in
jne
shll
movsb
fmul
add
adc
xlat
cmpsb
and
or
xchg
stos
dec
outsl
sub
cmp
mov
mov
mov
test
inc
push
push
dec
inc
rorb
jmp
hlt
rcl
jne
sbb
ret
xchg
pushf
loopne
or
sbb
add
daa
jo
xchg
adc
add
adc
inc
push
cmpb
addr16
pop
ljmp
jle
push
adc
andb
mov
cmp
lods
inc
xor
cmp
mov
and
aas
mov
cmp
bound
push
imul
pop
in
and
sbb
and
jecxz
dec
sub
add
mov
mov
orb
stos
sub
aad
mov
pop
mov
cwtl
in
or
xchg
dec
inc
test
or
movsb
or
cld
test
xchg
push
fisubs
bound
dec
test
pop
scas
pusha
lcall
push
sbb
sub
jno
dec
add
or
in
pop
push
dec
adc
imul
mov
jl
xor
mov
lcall
adc
mov
sub
sub
sahf
lods
iret
sete
or
sub
inc
dec
pushl
inc
jl
inc
push
adc
divl
out
aam
rorl
or
mov
pop
filds
xor
lret
inc
ljmp
adc
push
scas
ja
inc
dec
in
jno
pop
mov
or
je
ret
sbb
adc
mov
add
popw
pop
std
xor
dec
add
fisubrl
sub
or
adc
cmp
outsb
pop
adc
verw
push
push
sbb
add
mov
das
imul
lret
xor
and
mov
lret
jle
xchg
daa
adc
and
loopne
mov
pop
wrmsr
mov
mov
leave
into
movsl
rorb
fldt
jg
test
pusha
adc
lds
mov
xchg
jae
clc
or
call
add
push
add
jge
xlat
addl
pop
fisttps
or
sbbl
aas
cmp
mov
add
or
push
pop
xor
inc
outsb
pop
loop
in
outsb
insl
aas
rolb
aas
mov
jb
add
push
adc
aas
mov
aas
xor
and
fs
add
sets
inc
cmpsl
pop
add
push
sbb
cmp
pop
push
inc
orw
cmpsb
jne
nop
fnsave
mulb
mov
mov
scas
nop
mov
push
xor
popa
dec
pextrw
pusha
or
xor
or
adc
leave
adc
lret
out
pop
test
sbb
xchg
mov
leave
dec
push
cmp
cs
std
cmpb
mov
adc
inc
bound
add
and
inc
cs
ficoml
mov
dec
mov
in
mov
push
inc
inc
and
ljmp
nop
cs
cltd
fs
and
ret
imul
xchg
pop
inc
dec
iret
xor
aam
enter
mov
sub
mov
ljmp
je
dec
rcrb
pop
inc
xchg
and
cmp
inc
adc
imul
xchg
push
aas
mov
les
adc
inc
popf
cwtl
nop
xchg
dec
aaa
sbb
popaw
sbb
sbb
xchg
xor
fiadds
adc
pusha
xorl
mov
adc
mov
cmp
inc
push
mov
jbe
ja
les
dec
add
and
add
jp
je
and
bound
or
aas
pop
sarb
mov
lea
adc
stos
lods
cmp
sbb
sbb
in
loopne
outsb
pop
mov
pop
mov
enter
pop
lret
imul
mov
es
cmp
and
xlat
pop
jge
js
rcrb
pop
xor
mov
sbb
sbb
popw
pop
sub
imul
rol
xchg
in
outsl
and
jnp
sbb
cmpsl
pop
xor
push
jb
fists
pop
push
xor
xchg
mov
mov
jb
mov
pusha
mov
incl
xchg
aas
pop
dec
call
paddb
aaa
dec
adc
dec
sahf
sbb
pop
add
sbb
daa
add
call
or
or
push
sub
std
pop
add
or
xor
push
out
dec
mov
fs
fiadds
add
addb
hlt
scas
les
sub
stc
fnsave
add
mov
ds
pushf
xchg
pop
xchg
mov
adc
add
push
pop
and
out
adc
jo
or
insb
sbbl
inc
sub
cmpsb
adc
mov
adc
pushf
pushf
ja
adc
sub
pusha
test
push
sub
in
or
and
push
mov
cli
add
cmp
leave
cmp
add
push
push
add
adc
push
add
push
dec
repz
inc
xchg
in
ret
fcmovnb
xorl
outsl
jno
inc
push
rorl
enter
sub
push
aam
add
loope
add
bound
cmpl
add
xor
add
inc
mov
add
ss
je
mov
lcall
push
xchg
xchg
mov
adc
jae
out
inc
push
and
inc
dec
inc
rolb
xchg
xor
std
add
inc
inc
dec
dec
inc
inc
or
dec
push
inc
dec
fldcw
mov
dec
or
or
mov
inc
push
dec
inc
sbb
scas
fimull
push
inc
and
or
xor
adc
gs
inc
dec
inc
adc
fcmovnu
xor
adc
push
push
pop
inc
inc
or
inc
push
dec
mov
dec
inc
dec
push
dec
das
push
inc
dec
cmp
out
jbe
jbe
push
dec
mov
jnp
inc
push
addr16
std
sti
test
inc
xor
sbb
int
dec
dec
dec
cmp
pop
repz
adcb
xadd
fiaddl
inc
outsb
aas
dec
loopne
gs
inc
dec
or
sub
pop
rcrl
cmp
pop
jle
dec
inc
mov
rclb
mov
cmp
imul
jae
sbb
dec
mov
inc
mov
pop
push
fcomps
and
adc
nop
xor
jo
test
xchg
inc
mov
pop
or
fildll
imul
js
and
jb
aaa
jno
jno
fimuls
jo
pop
or
jns
js
iret
xor
orb
rcr
sbb
push
imull
jmp
je
imul
orb
clc
incb
push
cmp
faddl
jae
icebp
ss
aaa
rorl
xchg
fstps
test
movsl
adc
pop
xchg
rolb
out
stos
push
sub
push
popa
dec
aaa
inc
addl
shll
push
adc
jo
ja
mov
add
cmpl
test
adc
push
mov
sbb
rclb
xor
xchg
adcb
xorl
frstor
repnz
or
or
pop
subl
clc
testb
add
add
add
cmp
jae
add
mov
and
lcall
pop
mov
and
sub
sbb
movsl
fldt
sub
call
xorb
or
neg
int3
cmp
add
insb
pushw
es
inc
or
int
jno
fs
jne
rorb
and
inc
pop
push
inc
or
imul
ja
pop
lret
cwtl
roll
inc
jmp
cmp
es
cmp
sbb
mov
cmc
add
shll
push
dec
dec
dec
add
into
xchg
and
push
push
fdivrs
dec
repz
sub
jns
dec
xchg
or
popa
inc
sbb
mov
nop
mov
aas
add
aam
push
pop
aad
insl
add
sbb
add
fs
cmc
jne
inc
add
gs
popa
xchg
test
mov
add
fimuls
and
pusha
add
addr16
push
out
mov
lcall
or
mov
lret
adc
scas
push
or
jae
add
cmpsl
or
jb
mov
sub
or
jae
adc
or
adc
push
out
pop
push
pop
mov
xchg
fidivl
inc
add
pop
sbb
or
pop
sti
add
lret
or
jmp
jno
mov
pop
inc
lret
leave
lods
sub
stos
adc
out
movsl
or
xchg
loop
or
stos
sub
add
jno
frstor
lcall
mov
inc
inc
add
inc
pop
mul
sbb
push
jo
mov
xorl
cmp
add
incl
daa
test
inc
shlb
and
mov
out
add
mov
in
mov
mov
outsl
insb
push
push
add
cmp
xor
adc
bound
cmpb
inc
out
test
sahf
cmp
cmp
cmp
adc
pop
or
sarb
dec
push
decb
adc
pop
orb
addr16
add
or
imul
push
addb
mov
dec
add
cmpsl
movl
insb
adc
dec
ss
inc
ss
loop
fisubrs
jb
cs
decl
add
xchg
cmpsb
pop
and
inc
or
outsb
cmpsb
push
mov
dec
ja
sub
sub
andb
lahf
sub
and
jb
faddl
jne
or
mov
add
pop
addb
xor
and
xchg
rolb
leave
pop
mov
lock
dec
add
nop
add
sub
imul
shrl
inc
xorb
sub
call
add
loop
jmp
rolb
leave
sub
mov
out
leave
and
mov
pop
xchg
cmp
leave
lds
cmp
in
or
xor
shrb
out
or
rolb
add
movsb
inc
inc
xor
je
fmuls
shlb
test
nop
and
nop
add
or
or
or
addr16
aad
in
dec
add
or
cs
or
arpl
mov
cmpsb
test
std
rcrb
iret
xlat
pusha
or
pop
div
daa
repz
mov
bound
pop
inc
sbb
pop
sub
sbb
xor
mov
add
fcmovnb
mov
xor
xchg
dec
push
js
sub
and
cmp
pop
bound
and
mov
inc
cmp
mov
dec
addr16
mov
insl
sbb
insb
fcomip
mov
inc
clc
and
inc
cmp
sbb
adc
add
push
pop
mov
xchg
shlb
insb
pop
push
jo
stos
mov
in
and
xchg
stc
adc
mov
or
xlat
pushf
and
dec
pop
data16
mov
lods
cltd
xor
popa
les
push
pusha
dec
xchg
mov
lahf
push
test
enter
add
dec
fildl
test
pop
sbb
pushf
je
rclb
dec
add
sbbl
rolb
sbbb
sub
pop
xor
adc
adc
sbb
sub
sti
adc
js
mov
and
cltd
mov
push
adc
add
cmp
or
mov
lds
adc
and
cmp
inc
push
sub
leave
and
cmpb
popa
adc
test
or
or
add
or
jne
rcrb
fstl
nop
int3
push
or
daa
and
mov
ror
popa
inc
xchg
sbb
insl
jo
loopne
pusha
pop
sub
mov
mov
sbb
rclb
inc
filds
xchg
inc
fldt
out
jnp
inc
dec
inc
jbe
inc
dec
push
pop
sub
mov
shrb
out
shlb
pop
shrb
fisttpl
adc
jl
dec
add
bound
dec
xchg
push
aaa
cs
push
dec
mov
push
xchg
and
jle
scas
inc
xor
ret
sbb
sbb
or
outsb
inc
out
mov
fsub
out
testw
dec
pop
jp
or
sarb
inc
dec
loop
sub
jb
jecxz
rol
jl
sub
movsb
xor
lret
cmpsb
and
pop
mov
out
rol
fsubrp
sub
fldenv
es
insb
arpl
pop
adcl
or
mov
xorl
rclb
jne
and
or
jbe
xchg
dec
cwtl
mov
in
xorb
adc
dec
pushf
dec
adc
mov
add
pop
ficoml
inc
mov
data16
sbb
xor
pusha
mov
movsb
pop
mov
testl
jge
jno
imul
lods
xor
das
out
inc
rol
idiv
je
xchg
lods
add
jle
fs
pop
addl
call
pop
add
ljmp
mov
or
inc
xchg
sbb
inc
fnsave
mov
push
les
pop
popa
ljmp
adc
gs
mov
sbb
or
inc
cmp
idivb
mov
jne
add
push
and
pop
push
add
push
outsb
push
fnsave
adc
aad
lock
popf
sbb
hlt
pop
mov
or
or
cs
fsts
push
mov
outsl
sbb
gs
ljmp
jne
inc
adc
andb
jne
jmp
jg
or
or
je
popa
mov
sarl
mov
inc
push
fs
push
xchg
pop
icebp
sub
inc
pop
notb
fisubrs
fdiv
lock
movsl
lods
sub
add
mov
add
pushf
and
lods
addr16
dec
sub
invd
in
adcl
sti
push
jmp
mov
add
ds
mov
dec
dec
or
jmp
pop
cmpsl
mov
jbe
andl
xchg
mov
aam
add
push
andl
mov
inc
cmpsb
xor
in
push
inc
stc
inc
mov
xor
fsub
sub
sahf
jns
adc
adc
das
in
cmpb
or
mov
jnp
push
xchg
sub
or
jns
insb
push
xor
pop
icebp
in
dec
mov
mov
add
jp
sub
pop
mov
jmp
lea
push
insb
and
mov
pop
jnp
inc
call
fldenv
cltd
adc
enter
mov
or
pusha
push
xchg
xlat
or
fmuls
out
jmp
add
in
ret
pop
jmp
fcoms
cmp
shlb
fucomip
imul
icebp
leave
fadds
lfs
les
les
lahf
mov
adcb
enter
push
pop
inc
push
cmp
cmp
xchg
push
fsub
daa
leave
dec
pop
add
insl
inc
mov
lods
outsl
push
cmp
add
dec
dec
inc
test
iret
and
and
and
fistpll
and
pop
ja
ja
and
xchg
mov
mov
add
pusha
or
je
addr16
out
test
sub
sbb
mov
pushf
cmp
mov
popa
negl
inc
fisubrs
pop
mov
imul
fs
push
subb
bound
aaa
xor
push
xchg
scas
dec
arpl
loop
aam
test
dec
jnp
call
mov
test
push
sbb
or
movsl
icebp
mov
lock
je
push
push
jp
hlt
pop
xchg
push
or
movsl
je
dec
xchg
hlt
add
shlb
xadd
push
lcall
xlat
cmpb
or
add
pop
or
push
xchg
enter
ret
xor
mov
insb
adcl
stos
aam
repz
mov
rclb
testb
pop
repz
sbb
push
adc
dec
pop
cltd
xchg
test
add
movsb
jne
jmp
jbe
xor
or
int
rcrl
in
in
mov
push
fcoml
xor
push
cmp
push
dec
arpl
push
dec
arpl
icebp
mov
mov
push
in
push
inc
push
fs
push
mov
imul
xor
pop
in
jge
pop
pop
loop
hlt
or
lods
leave
or
mov
push
sbb
lea
dec
or
out
jle
roll
das
mov
and
fisttps
mov
xchg
sub
xor
ret
movsb
push
xchg
leave
xchg
lret
jo
push
jne
cli
popf
testl
in
jmp
xlat
sbb
aam
and
into
or
out
icebp
test
ret
ret
cmpb
das
subl
pop
sub
in
gs
les
sub
mov
sub
js
or
mov
pop
xor
aas
add
mov
mov
push
add
out
cmc
mov
add
pop
inc
pop
sub
pop
stos
pop
std
mov
out
and
jmp
out
aaa
popa
pusha
mov
shlb
lahf
or
lret
fadds
xchg
insb
mov
push
push
lea
rcl
add
cld
fcmovnbe
cmp
out
je
inc
xor
lret
push
mov
sbb
or
jns
sbbl
inc
pop
mov
add
movsl
and
in
out
and
mov
test
arpl
std
jo
inc
adc
rorl
or
test
xchg
lods
sbb
stc
sub
add
and
cmp
pop
push
xor
imul
adc
add
mov
lds
bound
push
pop
dec
bound
aaa
jne
leave
outsl
fs
jo
xchg
xorl
fcmovnb
repz
lods
rolb
mov
sbb
adc
inc
into
or
jmp
ror
sub
or
xchg
scas
imul
push
and
or
shll
mov
or
dec
and
fldl
mov
xchg
mov
std
je,pt
ret
adc
jg
adc
imul
mov
jne
xor
imull
shlb
and
lock
jl
out
roll
imul
push
faddl
outsl
mov
pop
lods
hlt
mov
mov
lods
push
sbb
enter
xor
hlt
int3
rolb
fcmovne
shl
insl
les
les
sub
clc
dec
mov
jg
js
rorb
lret
jmp
sub
jl
inc
cmp
jg
inc
cmp
sub
push
adc
xchg
addb
lcall
mov
dec
mov
pop
xorb
push
push
lahf
xchg
push
movsb
sub
jge
xchg
loope
push
nop
sti
mov
dec
fsubrs
sbb
jne
mov
mov
or
xor
addr16
mov
xor
in
add
lock
imul
mov
aaa
mov
aaa
mov
sahf
out
cld
dec
lea
add
sub
mov
cs
rol
das
stc
xchg
imul
add
jne
pop
and
test
mov
or
xor
hlt
mov
add
cmp
mov
bound
shrl
xlat
or
dec
push
sahf
rcrl
adc
mov
push
cwtl
add
mov
xlat
shll
adcb
gs
sub
insl
adc
inc
and
jne
shlb
icebp
push
decl
mov
arpl
push
add
popf
xlat
pop
les
adc
mov
adc
mov
xchg
or
ret
dec
pop
stos
mov
adc
pop
mov
add
pusha
pop
sub
gs
out
or
mov
sbbl
push
mov
mov
inc
or
cmp
add
sbb
jnp
xor
xor
pop
sbb
addl
jo
ret
add
fsts
mov
inc
orb
cmp
add
mov
or
je
sub
sbb
out
add
mov
mov
int3
push
mov
add
imul
or
cmc
and
sbb
inc
js
push
add
outsl
inc
arpl
jecxz
pop
inc
pop
adc
inc
flds
sbb
es
lock
mov
mov
in
std
and
popa
add
mov
mov
mov
testl
std
adc
insl
inc
jne,pn
dec
out
insl
pop
push
xor
inc
addr16
mov
pop
dec
and
inc
add
dec
add
inc
add
mov
shlb
dec
add
imul
add
lock
add
out
call
dec
dec
sub
push
adc
add
sbb
inc
sbb
neg
mov
hlt
mov
push
xchg
test
pop
xchg
inc
push
addr16
push
stc
push
dec
dec
idivl
add
add
int
cmp
bnd
sarb
add
lds
lods
loope
mov
xchg
push
add
dec
out
xor
aam
mov
add
roll
adc
fcomps
lret
jnp
int
and
sub
mov
outsl
cmpsb
test
push
push
ret
popf
and
fmuls
xchg
rolb
repz
andl
mov
or
ja
rcll
inc
sarb
sbb
mov
mov
enter
adc
inc
push
add
adc
test
adc
xchg
or
or
add
dec
sub
push
push
dec
add
pusha
add
sub
dec
and
das
inc
or
jb
pop
ja
cmp
sbb
pop
sbb
and
ror
jle
push
xor
sub
xchg
inc
movsb
mov
push
jge
imul
or
or
pop
push
jbe
iret
pop
jo
or
push
into
mov
add
push
jl
subb
test
mov
enter
sbb
push
xchg
out
sbb
xor
sbb
xorb
aas
pop
fimuls
dec
cmp
insl
sar
push
pop
test
add
jbe
push
adc
xchg
pop
ja
xor
jb
dec
lret
in
sbb
xchg
in
stos
cmp
xchg
clc
sbb
fstpt
sbb
add
xor
or
jb
push
les
nop
pop
jp
add
push
jb
push
pop
lock
orl
dec
inc
inc
div
pop
lock
dec
mov
add
jmp
popl
sbb
rorl
call
dec
in
dec
in
adc
sbb
cmpsb
sub
and
nop
es
inc
int3
mov
aas
jo
add
jge
mov
pop
sub
aam
adc
xchg
xchg
fsubl
push
pop
inc
outsb
add
sbb
adc
push
pushf
faddl
mov
sbb
xchg
hlt
add
rolb
fsubl
sub
mov
out
stos
and
push
hlt
iret
nop
add
jno
add
cmpsb
jge
xchg
movsb
mov
stos
add
mov
mov
std
mov
jmp
push
cmpb
jno
in
cmpb
pop
nop
or
je
or
add
call
dec
repz
lcall
in
loop
test
pushf
xchg
repnz
xchg
dec
sbb
ss
popf
push
cs
inc
push
inc
aam
dec
xor
lods
decl
test
sbbb
add
mov
aam
test
push
push
popa
xchg
adc
push
pop
push
test
xor
dec
and
cmc
inc
xchg
push
ss
cmp
sub
adc
cmpsb
imul
jp
cmp
cmp
dec
xor
mov
imul
or
cmp
push
cmp
xor
dec
add
negl
adc
cmp
adcl
int
inc
sbb
and
mov
mov
sub
push
jmp
mov
xor
cmp
xchg
pop
dec
sub
cltd
jae
mov
loope
mov
dec
sbb
cwtl
adc
inc
dec
and
push
mov
popl
xor
lret
add
jns
scas
mov
add
in
add
dec
xor
add
mov
insl
jne
push
dec
rcll
mov
lds
mov
sar
mov
ret
push
add
pop
shrb
xchg
dec
xchg
inc
loope
stos
adc
sarl
cmp
add
aad
inc
xchg
rcrl
xchg
jnp
xlat
or
js
or
pop
sub
leave
pop
cmp
dec
cmp
mov
mov
fucomi
iret
repz
push
xor
iret
repz
adcl
sub
or
lock
enter
sbb
lcall
cld
aaa
sbbb
inc
xchg
addl
and
sbb
jle
jbe
jg
mov
mov
pop
dec
and
shl
out
loopne
jl
cmp
xchg
xor
dec
cmp
xor
fadds
xchg
pushf
sbb
je
pushl
mov
lea
lea
add
cmp
pop
lahf
dec
inc
add
hlt
pop
xor
xchg
in
lods
mov
mov
mov
das
pop
in
add
js
inc
and
bound
mov
and
sbb
cmp
add
pop
lods
jl
es
and
dec
mov
sbb
push
das
cmp
sub
add
jae
mov
mov
push
and
fsubp
and
into
call
adc
jne
or
imul
push
push
pushf
sbb
dec
add
dec
xchg
xor
push
pop
pop
xchg
jno
lea
mov
subb
inc
push
les
xor
jne
or
mov
cmp
dec
jbe
lret
repz
fsubr
mov
jne
in
jecxz
fsub
push
shrl
and
dec
or
loopne
dec
pop
jo
fimull
dec
les
lock
addl
js
push
inc
sbb
or
call
je,pn
jae
mov
fwait
in
ret
dec
jae
cli
fdivs
rcrb
dec
push
orb
inc
negl
orb
lcall
call
dec
and
ds
dec
cmpsl
std
cmp
je
cmp
es
faddl
popa
inc
and
sub
sbb
mov
jmp
or
jmp
lock
inc
sbb
adc
add
shrb
nop
fimuls
and
push
inc
mov
sub
sub
stc
popa
add
push
jmp
ret
xchg
inc
xchg
xchg
mov
test
push
pop
xor
cmpb
out
jle
enter
xor
jne
push
test
test
cmpb
jne
jnp
sub
testl
cmp
dec
jmp
or
int3
mov
stos
push
movsl
add
lret
sub
sub
sbb
add
add
pop
inc
cwtl
jnp
es
out
sbb
push
cld
mov
jnp
push
ret
mov
xor
or
cmp
lea
dec
ds
clc
ja
push
lret
push
xor
fwait
pop
enter
adc
pop
adc
repnz
or
lds
shl
add
adc
imul
call
jnp
mov
push
cwtl
adc
and
movsl
push
adcl
fcoml
add
out
xor
and
adc
xor
mov
mov
pop
jnp
pop
or
xchg
jne
and
test
or
inc
push
dec
pop
sbb
hlt
movsb
or
rolb
outsb
jp
xor
pushf
mov
inc
pop
dec
fldl
repz
cmpl
ficoms
push
add
mov
push
mov
or
iret
popa
xchg
pushf
mov
das
push
test
mov
dec
sub
icebp
in
or
adc
ret
mov
in
inc
add
aas
icebp
addl
repz
mov
pop
mov
cmp
mov
add
inc
add
roll
and
outsl
adc
es
lea
notb
sbb
cmp
cs
in
clc
or
jo
call
pop
fadd
add
push
jno
push
jmp
inc
inc
or
jno
icebp
ret
dec
jmp
inc
stc
jae
out
rcl
sarb
adc
add
mov
fdivrs
cmpsb
add
movsb
aam
into
lcall
lahf
add
lock
and
dec
add
out
or
add
cmpsb
sub
das
sub
mov
pop
sbb
push
cltd
clc
xchg
scas
adc
mov
dec
cmp
inc
nop
xchg
aas
test
rclb
hlt
mov
jmp
or
push
add
mov
enter
ret
xchg
in
push
push
ret
adc
loopne
pop
jbe
js
lea
xorb
mov
lods
fists
in
xchg
insl
jp
rolb
in
add
cmc
adc
ret
xchg
bound
cmp
and
pop
repnz
dec
test
cmp
adc
jnp
rclb
and
sbb
bnd
jg
insb
cld
dec
mov
add
fmull
mov
das
inc
popf
jnp
enter
push
mov
and
addr16
sub
dec
adc
or
fmulp
mov
inc
sbb
lret
jo
popa
push
inc
push
add
adc
iret
pop
inc
push
out
cs
je
subl
push
rol
add
bound
cmp
rorb
mov
add
pop
add
lret
sbb
mov
iret
ja
in
jl
mov
andl
or
xchg
dec
jo
adc
mov
push
lret
leave
xchg
inc
push
out
pop
orb
pop
icebp
mov
movsb
cmpsl
cmp
addr16
push
jb
mov
push
setge
in
dec
jo
rorb
cmp
push
or
out
add
insb
adc
cwtl
cmp
inc
test
mov
xor
sbb
cmpb
mov
jne
mov
and
push
fbstp
add
cmp
adc
cs
subb
mov
and
mov
and
or
xchg
jg
add
rcrb
pop
pop
jge
gs
data16
or
mov
xor
and
pusha
or
daa
and
out
shll
ljmp
adc
mov
push
pop
xchg
outsb
leave
lock
in
fisttps
jo
enter
enter
sbb
les
pop
gs
movsb
add
incb
xor
fidivrl
stc
inc
add
push
inc
pop
mov
mov
add
sarb
sub
cmpsl
outsb
add
cmpsl
test
dec
and
daa
xor
out
add
dec
sbb
nop
xchg
xchg
inc
sbb
cwtl
jo
or
adc
sbb
mov
adc
test
addr16
push
adc
sub
cmpsl
in
sbb
out
sbb
and
outsb
icebp
mov
je
add
scas
mov
arpl
pop
es
jb
adc
and
gs
jge
setb
xor
or
add
icebp
mov
sbb
lds
insb
pop
lahf
mov
or
insl
inc
mov
enter
inc
pop
pop
dec
cmpsl
mov
inc
dec
ja
mov
ret
sub
sar
cld
sbb
in
pop
jge
jne
divb
adc
jne
push
add
mov
pop
insl
or
ret
roll
arpl
popf
jo
hlt
mov
lahf
jb
gs
mov
sub
sub
xor
xor
or
jge
loopne
dec
add
call
adc
push
mov
mov
xor
fistl
popf
ret
adc
sub
or
adc
dec
clc
pop
jg
push
sti
xchg
push
insl
add
xor
mov
add
movsl
dec
mov
inc
movsl
std
add
sub
cmpsb
push
lcall
jle
or
sub
outsl
xchg
cmpl
xor
daa
mov
in
dec
iret
push
add
add
cmp
pusha
loop
xchg
sbb
dec
pop
call
or
jmp
in
mov
js
loopne
cmpsl
push
and
test
dec
push
adc
dec
xchg
jns,pn
xchg
clc
mov
dec
shll
aam
adc
pop
adc
sbb
cmp
xor
aam
dec
cmpsb
pop
fnop
adc
in
int3
pop
dec
pusha
adc
ds
pop
push
cmp
xor
or
cmpb
add
xor
push
mov
das
test
sbb
xchg
inc
add
pusha
mov
test
repnz
and
mov
pop
jge
mov
js
cld
jmp
popa
test
or
jb
or
dec
pusha
add
clc
insl
cmp
adc
popa
push
pop
jo
scas
push
adc
imul
mov
loopne
sbb
je
adc
adc
cli
cwtl
or
inc
or
cld
mov
jne
sub
mov
popa
jmp
sbb
das
enter
add
or
je
jmp
pop
nop
std
mov
jl
or
jbe
int3
jno
or
insl
jmp
sub
or
pop
or
jmp
sbb
xchg
adc
cmp
jmp
or
rolb
dec
dec
sub
pop
and
adc
xchg
ret
subl
fsubs
mov
jns
sub
adc
sub
arpl
loope
pop
aas
or
out
push
fwait
or
fisttps
push
xor
fsubl
mov
add
dec
xor
movsb
sub
aas
mov
xchg
sub
sarl
scas
pop
lahf
imul
ja
ds
inc
adc
les
or
xchg
mov
add
cmp
mov
xchg
add
mov
xor
xor
rorl
daa
pop
repnz
xor
xchg
dec
cmp
or
nop
inc
dec
mov
mov
mov
dec
sarb
mov
pop
add
ficompl
and
lea
xchg
mov
sti
movb
or
inc
loopne
inc
enter
add
xchg
push
loop
stos
movsb
leave
push
xchg
addl
mov
pushf
test
aaa
dec
sar
jb
cmp
je
cmp
adcb
jne
jle
jp
in
xchg
xor
pop
js
mov
dec
mov
add
cmp
cmp
xchg
xchg
fwait
mov
cmpsl
ljmp
fucomi
sbb
or
jmp
or
jmp
dec
add
ret
pop
lcall
faddl
pop
add
enter
fadds
mov
adc
or
enter
enter
jns
push
hlt
pop
scas
dec
ret
pop
add
xchg
mov
jge
adc
jb
inc
push
mov
add
dec
add
and
or
lds
cli
sahf
jp
inc
sub
int3
nop
daa
lds
je
enter
test
les
push
dec
sbb
and
shlb
in
sub
mov
xchg
pop
inc
arpl
movsl
mov
cmp
add
test
mov
xor
mov
aaa
mov
pop
or
je
or
je
arpl
loopne
or
inc
ret
stos
push
xor
popa
sub
mulps
sub
xchg
out
dec
or
xor
mov
add
negb
adcl
or
jg
icebp
pop
jb
push
jl
mov
add
push
jne
mov
sub
addr16
jne
pop
jmp
or
pop
jge
dec
test
push
fiadds
and
push
pop
je
push
das
ss
call
or
and
xor
js
push
and
jecxz
push
sub
sbb
mov
xchg
and
and
inc
jns
mov
popf
les
inc
aam
jb
int3
lret
mov
xlat
xorb
movsb
mov
cld
ja
mov
lea
fcomi
push
fucomi
mov
aad
gs
mov
add
out
sbb
out
mov
cmp
btr
addl
arpl
add
xor
xor
invd
mov
add
add
call
repnz
and
lds
add
out
mov
movsb
insb
pop
inc
adc
xchg
dec
mov
stos
and
add
sub
sbb
xchg
cmpsl
imul
inc
in
mov
sbb
or
inc
outsb
add
or
in
in
fisttps
loopne
or
jg
out
inc
mov
adc
xor
inc
in
pop
push
sbb
adc
add
test
in
scas
or
fsubrs
test
aam
aam
test
or
jne
mov
mov
push
xlat
inc
daa
pop
mov
sbb
rcrl
sahf
and
insl
les
xor
sbb
loop
inc
mov
push
arpl
dec
jno
push
add
movsb
mov
xchg
outsb
and
sub
andl
add
pop
sbb
loopne
fwait
pop
sbb
pop
mov
and
test
add
push
data16
ret
jne
test
jg
cmpsb
or
pop
fs
mov
jg
push
fs
cmpsl
mov
xor
in
pop
add
push
xchg
repz
dec
in
inc
push
ret
adc
movsl
outsb
imul
nop
fbld
outsb
jg
pop
push
push
dec
verr
cmc
mov
sub
sub
rcrl
lea
lcall
sti
mov
test
mov
mov
jmp
or
xchg
loopne
mov
xlat
or
or
dec
ss
inc
sbb
inc
add
outsb
mov
jnp
hlt
jle
jmp
cmp
fidivs
lds
adc
and
movsb
call
xchg
bound
inc
or
jae
stc
xchg
jmp
enter
push
cmp
add
jg
cwtl
not
je
aaa
clc
adc
and
jae
leave
and
hlt
je
lods
int3
inc
push
jle
aaa
mov
sbb
gs
inc
sub
shrb
jns
lock
ret
loopne
dec
in
mov
sub
mov
xor
int3
mov
call
mov
jl
and
sbb
sbb
mov
loopne
mov
sbb
sub
xchg
fcoms
mov
add
leave
aam
shl
fisubl
mov
mov
or
push
andb
jno
mov
and
sbb
cmp
sahf
or
test
mov
pop
xor
mov
stc
xor
and
or
add
pop
repnz
fldt
cmp
insl
shrl
test
movsb
movsb
mov
xchg
cmp
mov
stos
roll
pop
cmp
int3
or
push
pop
mov
or
push
mov
sbb
lret
repnz
aas
lret
add
iret
dec
pop
mov
stos
sub
dec
popf
inc
dec
dec
xchg
sbb
mov
dec
loop
push
aam
imul
outsb
mov
imull
dec
pop
dec
mov
pop
imul
xchg
add
push
aaa
xor
inc
loopne
xlat
insl
or
ljmp
pop
mov
test
cs
jne
mov
inc
sbb
mov
iret
das
push
iret
or
test
inc
popl
insl
aas
or
xchg
mov
mov
mov
cmp
jne
sub
and
in
add
dec
mov
cmpsb
lret
sti
add
pushl
or
jo
dec
adc
cmp
or
daa
iret
push
outsl
inc
or
les
mov
iret
jne
fiaddl
testb
add
lret
pop
cmp
push
cltd
and
adc
add
aam
push
movsb
xor
loopne
lock
lret
add
test
testb
sbb
sub
fs
xchg
push
pop
pmulhuw
stc
inc
mov
and
rolb
nop
jo
mov
inc
xor
or
adc
add
pop
adc
pop
xlat
add
pop
aad
pop
push
testl
pop
push
xlat
or
push
ljmp
or
push
pop
cmpsl
or
iret
push
aaa
lret
xor
xlat
decl
push
fidivl
push
ret
sti
sbb
adc
movb
je
outsl
mov
push
addb
mov
pusha
sbb
push
and
dec
xlat
and
jne
add
in
sbb
jne
sbb
xchg
sbb
pop
pop
or
adc
xlat
test
imul
dec
sub
or
mov
mov
test
push
mov
mov
arpl
lods
sarl
adc
xor
ja
adc
std
mov
cmp
push
and
lods
sub
or
xchg
sbb
cmpsl
sbb
cld
cmp
dec
add
mov
daa
mov
inc
out
pmovmskb
daa
daa
daa
daa
fcmovnu
daa
daa
daa
daa
fstp
ffreep
daa
daa
daa
daa
rol
les
daa
daa
daa
enter
daa
leave
lret
daa
daa
daa
daa
int
iret
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
movsl
cmpsb
cmpsl
test
daa
daa
daa
test
daa
daa
daa
lods
scas
scas
nop
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
cwtl
daa
daa
daa
daa
cltd
lcall
popf
sahf
lahf
andb
daa
daa
addl
xchg
mov
daa
daa
lea
daa
daa
jno
jae
daa
daa
daa
daa
jne
ja
pop
aas
daa
daa
jns
or
push
push
mov
out
bound
cs
jae
or
and
xor
mov
inc
outsl
cs
pop
xchg
push
outsl
add
push
sbb
inc
xor
push
inc
dec
xchg
popa
jae
sub
or
jno
pushf
int3
push
dec
xchg
fstpl
das
ss
test
mov
cmpsl
add
jnp
cld
sub
inc
int3
jnp
cmp
movsl
mov
inc
or
jns
xor
out
fstl
call
pop
adc
sbb
sbb
dec
or
jae
push
inc
rorl
daa
pop
xor
dec
daa
lods
mov
pop
aaa
xlat
lods
pop
int
pop
mov
shlb
xchg
das
jecxz
pusha
call
or
and
dec
add
nop
pop
mov
push
flds
or
int
sbb
xchg
out
cltd
andnps
enter
iret
lcall
pop
adc
loop
pop
add
faddp
xchg
or
rclb
dec
add
mov
or
add
sbbl
adc
fists
imul
clc
pushf
adc
in
xchg
jno
xchg
mov
rolb
sbb
movsb
ret
mov
pop
and
sub
xor
ret
adc
push
or
push
orb
js
leave
add
cmp
adc
sbb
cmp
add
inc
ror
and
dec
fs
imul
rcl
pop
pop
imul
sub
or
xchg
insb
push
mov
in
xlat
mov
lock
loope
sbb
jmp
ja
cmp
sarb
inc
sub
in
jb
push
sarl
popf
psrlw
repnz
cmp
and
rclb
out
dec
je
push
add
addl
loop
cmp
push
dec
xor
dec
mov
inc
add
mov
sub
pop
aas
pop
ret
data16
je
mov
push
nopl
into
imul
xchg
ret
imul
stos
pusha
inc
out
mov
loop
and
mov
jno
sub
aas
cmp
cmp
mov
rcrl
clc
fsubrs
mov
dec
push
push
das
add
dec
sbb
xlat
in
in
fs
aad
insl
movsl
jb
repnz
sbb
sbb
std
xlat
outsb
mov
mov
clc
xor
fwait
adc
dec
dec
dec
inc
mov
repnz
dec
mov
fidivrl
jb
repnz
ucomiss
dec
pop
jb
jb
imul
jb
rcr
fcmovne
xor
cmp
fsubl
nop
fsubrl
int3
jnp
xor
fisttpll
xor
fisttpll
imul
cmp
pop
adc
push
add
sub
shrl
je
outsb
mov
push
cmp
pop
and
jl
sub
sub
sub
mov
and
add
ret
cmc
scas
add
adc
jae
push
pop
adcb
fcomp
or
mov
pusha
lret
adc
fadd
or
adc
outsb
adc
aad
jns
or
lea
loope
out
clc
pop
addb
dec
jbe
leave
nop
push
fsubrs
add
and
addr16
mov
add
call
insb
xchg
addl
pop
add
adc
inc
arpl
in
outsl
dec
sub
sbb
int
adc
jne
dec
icebp
cmp
add
pop
mov
xchg
into
outsb
pop
xchg
sbb
lds
inc
xchg
inc
adc
inc
or
test
fldl
sbbl
mov
mov
lds
mov
xor
add
and
and
add
mov
add
int3
movsl
xor
enter
and
or
xor
mov
ret
dec
xor
nop
out
out
scas
adc
out
inc
daa
out
jbe
lds
push
fisubrl
in
or
add
add
roll
adc
ljmp
xor
cmp
sub
xchg
adc
add
dec
ficoml
and
push
add
aaa
dec
popa
icebp
push
int
push
js
add
inc
adc
adc
popf
jmp
sub
dec
adc
lcall
test
fnstsw
imul
jle
mov
add
xchg
xchg
cmp
mov
mov
xor
negb
or
push
xchg
xor
jmp
adc
push
mov
push
repz
jle
insl
dec
or
cmp
xor
adc
sub
push
and
dec
mov
add
or
cmp
ljmp
hlt
push
adc
sbb
sbb
shlb
push
dec
mov
mov
push
pop
pop
arpl
sub
push
lock
aaa
sub
inc
add
add
mov
aas
repz
add
movsb
nop
adc
test
or
sub
xchg
jo
jp
mov
xor
add
add
mov
sarb
xchg
push
or
lret
add
cmpb
add
dec
jae
push
icebp
loopne
out
addr16
mov
cmpsb
cmp
fsubrl
das
add
or
push
fsubp
insl
insl
pop
test
outsl
movsb
jns
mov
sub
arpl
fcmovb
push
pop
add
push
xchg
cmc
dec
jae
push
lods
call
cmp
sub
out
and
xor
icebp
xorb
and
test
addb
pusha
mov
push
rclb
xchg
in
sub
push
add
adc
pop
iret
dec
pop
dec
adc
or
push
and
lea
out
xchg
add
imul
clc
in
push
outsb
or
out
inc
add
fcoms
jl
mov
jnp
cld
mov
sub
lock
push
insl
xor
negl
pop
repnz
jge
add
lods
movsl
sarb
cmp
lea
xor
iret
jge
popa
push
out
or
add
pop
cmp
inc
cmp
cmp
cmpsb
dec
cwtl
cmp
jne
shrb
add
pop
add
adc
and
pop
stos
inc
rolb
dec
and
lahf
inc
scas
jbe
sub
lahf
xchg
lds
xor
or
inc
pop
add
fidivrs
xchg
icebp
or
jo
and
xor
popa
sub
das
and
lret
clc
lods
add
mov
push
inc
sub
dec
test
inc
dec
add
fdivl
jo
mov
cmp
cld
call
xchg
add
and
fistpl
test
pop
rclb
add
xchg
loope
xor
sbb
dec
mov
push
inc
sqrtps
enter
mov
enter
sub
or
lahf
leave
xor
adcl
das
int
bound
dec
fstpt
ret
xchg
into
cmp
or
mov
adc
jbe
pop
push
aas
sbb
jo
fsubs
pop
or
stos
dec
call
sbb
inc
or
pop
fisubl
push
pop
insl
or
inc
sbb
cmp
imul
lahf
xchg
add
adc
xchg
scas
popf
add
or
add
mov
mov
loopne
int3
rolb
sbb
add
mov
fdivrs
mov
iret
test
ret
es
enter
rolb
int
imul
inc
adc
mov
add
loopne
ret
sbb
out
pop
outsb
shl
cmp
mov
mov
add
or
add
hlt
add
xor
jae
fdivp
fiadds
dec
jae
int
lock
lock
and
cmp
push
or
cmp
test
or
fidivrl
mov
sbb
or
repnz
shr
or
fsubs
fmuls
scas
xchg
and
jno
pop
jmp
mov
adc
jnp
daa
add
andps
mov
imul
or
and
in
es
fiaddl
nop
and
fsub
or
mov
aam
es
aam
cltd
nop
add
rcl
rorb
or
rclb
and
int3
mov
data16
rcll
pop
xlat
cs
pop
lds
sbb
add
adc
lret
sub
shl
lret
lret
sbb
fcoml
ret
int3
sbb
fmull
repnz
out
or
push
fsubrl
in
outsl
add
mov
sbb
sub
inc
leave
add
pop
lea
push
stos
or
adc
mov
pop
addb
dec
inc
pop
cmpsl
dec
jmp
hlt
ret
push
jno
jae
dec
cmp
push
push
fs
add
dec
fcomi
scas
jg
push
aaa
out
aaa
popf
sub
mov
movsl
icebp
nop
out
push
movsb
and
imul
sarb
and
lock
fsubrl
inc
inc
mov
push
imul
and
fldl
xchg
add
cmpsl
adc
test
sub
test
add
dec
mov
add
push
pusha
lea
ljmp
scas
fcoms
and
xchg
inc
or
lcall
add
arpl
add
fidivs
pop
js
fidivrs
cmpsl
push
sbb
cmpsb
insb
mov
mov
and
aaa
dec
lcall
pop
xor
cwtl
ljmp
mov
pusha
clc
mov
test
dec
add
ret
icebp
test
out
pop
enter
es
pop
lahf
jmp
jmp
mov
into
adc
jae
adc
adc
loope
arpl
adc
xor
ljmp
pusha
sub
inc
pop
or
bound
cmp
add
dec
pop
inc
adc
add
scas
sbb
add
inc
jb
xchg
jl
aaa
dec
call
adc
inc
in
dec
jne
and
and
dec
and
inc
push
add
aad
subb
sbb
inc
or
xchg
dec
sbb
aas
sub
popa
lcall
inc
into
or
pop
inc
fldln2
movsb
mov
out
add
movsl
cmp
jl
mov
push
test
adc
sbb
jg
fildl
aas
push
sbb
scas
pop
sbb
and
push
and
and
icebp
xchg
lods
addb
adc
lahf
rolb
xor
test
xchg
je
add
out
push
inc
sbb
sahf
pop
dec
nop
mov
inc
mov
jae
sub
add
xchg
popa
popa
jl
mov
iret
nop
icebp
cmpsl
and
out
sarl
inc
mov
cmp
fists
or
aaa
aas
mov
aas
and
dec
lock
mov
push
pusha
pop
pop
xlat
or
sar
mov
dec
and
add
cmp
dec
test
rorb
rcl
nop
addb
cwtl
add
loopne
dec
lret
sub
adc
xor
pop
sarb
adcb
xor
sbb
push
mov
pop
icebp
unpcklps
cmp
or
pop
fstpl
jno
jae
inc
out
mov
dec
test
push
nop
outsb
lahf
pop
in
push
test
or
mov
dec
adc
cmp
adc
sarb
icebp
inc
fsubl
scas
popa
fcomi
push
push
stc
xor
ret
sbb
and
and
inc
push
add
add
hlt
sbb
aas
test
push
push
fs
sti
push
mov
mov
sbb
mov
and
cmp
mov
inc
pop
jae
mov
jl
hlt
push
and
sub
jae
xchg
mov
xchg
enter
push
insb
xor
push
pop
add
mov
cmp
push
fisubrs
dec
sbb
pop
inc
and
fsubl
loope
in
repz
aam
aas
or
popa
mov
push
aas
mov
fsubl
inc
mov
les
dec
mov
push
adc
outsb
pop
fs
add
jb
bound
adc
fidivrl
sub
push
inc
loope
aaa
outsl
lods
shrb
mov
insb
hlt
outsl
mov
pop
test
pop
std
adc
mov
add
push
outsb
xchg
add
push
stos
test
shlb
daa
pop
cmpl
or
fsubr
in
adc
push
sub
add
push
cmc
je
pop
add
daa
and
inc
pusha
adc
movl
shll
push
adc
fld
lea
jb
jmp
mov
xchg
mov
inc
adc
adc
add
aad
mov
popa
xor
es
jbe
in
insl
pop
sub
push
mov
fldcw
in
or
inc
push
dec
xor
and
pop
loopne
test
les
adc
pop
dec
and
test
ja
shl
push
das
icebp
lcall
mov
add
ret
fs
add
cmp
std
xchg
nop
out
pop
xor
notl
or
shlb
push
idiv
shlb
cmp
bound
inc
dec
iret
add
jecxz
call
xchg
mov
or
or
arpl
adc
stos
xor
scas
pop
xor
out
loopne
add
into
jle
pop
cld
push
daa
cmp
das
stc
aas
mov
push
sbb
mov
dec
add
pop
scas
jae
lods
adc
and
daa
mov
jb
or
or
adc
mov
stc
and
scas
ret
stc
imul
rorl
inc
jne
xor
fs
adc
push
test
mov
outsl
pop
cld
dec
enter
push
cld
jo
push
xor
test
imul
cli
pop
aas
push
add
ja
dec
scas
inc
sbb
add
pop
adc
mov
imul
jns
stos
adc
inc
mov
stos
les
sti
addr16
add
mov
adc
sub
add
popf
push
test
and
stos
xchg
add
mov
nop
test
je
andb
cmovno
and
mov
cmp
cwtl
jne
push
cmp
pop
rorl
popf
mov
cmp
cwtl
jne
jne
push
jo
inc
fdivr
call
and
push
ja
lods
test
mov
push
fs
sbb
les
addl
cmp
lcall
or
push
pop
pop
and
push
mov
sub
test
add
dec
pop
dec
enter
mov
xchg
sti
fnop
and
dec
xchg
lds
jne
mov
sbb
nop
mov
cmp
cltd
fmuls
mov
movsb
in
mov
xor
std
pop
arpl
and
mov
sub
adc
inc
and
mov
test
adc
jne
stc
or
pop
jl
out
dec
add
and
test
inc
inc
xchg
je
push
shrb
jnp
loope
push
mov
icebp
inc
shr
sar
and
stc
iret
adc
movsl
xchg
idiv
fadd
sbb
push
pop
rolb
and
test
addb
and
add
add
and
rclb
mov
jecxz
sbb
mov
pusha
jmp
fcomip
add
xchg
or
cli
mov
loopne
cmpl
mov
jo
test
pop
mov
adc
or
ficoms
inc
add
rorb
sbb
iret
movsl
dec
lea
icebp
int
dec
call
xchg
jecxz
xchg
jmp
ds
add
aad
add
mov
dec
mov
sbb
icebp
xor
les
push
pushf
mov
mov
sbb
out
cmpsl
and
in
aaa
clc
sbb
popf
pop
lret
clc
mov
and
andb
cmpsb
mov
push
dec
xor
in
xor
in
mov
mov
mov
out
aam
cltd
pop
mov
inc
xlat
shlb
push
or
and
and
and
insl
xorb
mov
inc
arpl
mov
xchg
sbb
adc
out
fmull
fsub
push
add
or
jne
xor
aaa
mov
mov
xchg
pop
mov
addr16
or
nop
out
pop
cmp
fs
push
lds
xchg
jno
inc
imul
incl
and
mov
sti
inc
cmp
pop
stos
or
push
lahf
ret
cmp
es
iret
popf
cltd
push
nop
push
test
push
xchg
test
loope
and
or
add
hlt
mov
loopne
fadds
leave
rcr
fsub
shlb
je
mov
jae
fwait
jg
idivb
imull
xor
cmp
sbb
add
movsb
cltd
sub
lock
add
inc
and
jge
iret
adc
shrl
adc
insl
jmp
out
cmp
sub
sub
and
inc
xchg
mov
xchg
addl
cmpsb
stos
adc
sub
jge
push
add
or
mov
ret
add
adc
sti
sub
xor
lock
push
rcll
mov
sub
test
fiaddl
jno
push
inc
pop
push
and
or
add
xchg
popf
pop
testb
movsl
add
and
movl
lds
ret
push
mov
cmp
scas
clc
dec
cmpsb
add
dec
sbb
xchg
movsb
push
addb
call
add
add
adc
jne
or
pop
dec
pop
and
mov
cmp
mov
mov
mov
mov
iret
or
or
inc
ljmp
dec
out
add
xchg
call
or
nop
lret
mov
pop
mov
ret
je
pop
add
ja
movsb
adc
inc
popl
insb
or
outsb
out
push
subb
push
or
add
xchg
jns
xlat
ficoms
sub
push
inc
dec
dec
cmp
out
or
push
add
adc
rsqrtps
xor
testl
adc
xor
or
stos
or
pop
movb
push
push
lcall
mov
popf
addr16
loopne
dec
fsubl
mov
pop
cli
pop
in
lock
mov
std
in
mov
es
enter
xlat
pop
lea
add
cmc
jle
pop
sub
and
scas
push
pusha
fimull
fistl
inc
sbb
mov
adc
add
or
sbb
push
inc
sbb
dec
fimull
outsb
sbb
ss
dec
mov
loope
sbb
push
dec
mov
lds
or
jge
cmp
das
pop
push
mov
in
clc
xor
fs
je
jo
not
lods
push
mov
add
push
sub
repz
cmp
lock
in
nop
test
arpl
packsswb
xchg
ret
adc
mov
mov
push
loopne
aad
adc
lock
fidivl
daa
jmp
dec
dec
smsw
fadds
test
push
inc
aaa
adc
push
in
lret
mov
andl
shll
cmp
jp
out
mov
pusha
jo
xchg
in
clc
xor
xor
adc
or
es
push
xlat
or
mov
in
filds
nop
push
jl
mov
andl
sub
in
cmp
pusha
push
push
dec
fiadds
outsl
mov
inc
rorl
out
xor
xchg
insb
imul
fisubl
lahf
and
lods
rcll
mov
sbb
dec
fcmovbe
imul
imul
inc
ret
pop
jo
fbstp
xor
fcoml
dec
call
add
add
gs
cmp
sub
bound
dec
addb
dec
pop
in
xchg
inc
fidivrs
push
or
xorb
mov
leave
pop
pop
lret
aad
add
and
push
mov
adc
pop
es
mov
and
daa
cmpsl
stc
push
js
mov
ss
cmpsl
popa
popf
sbb
add
push
or
scas
pop
test
jno
sub
insb
or
orl
pop
add
leave
je
shrb
fidivrl
fs
sbb
or
mov
sub
dec
je
adc
adc
mov
lock
imul
nop
lret
jecxz
in
cmpxchg
xchg
jecxz
jg
js
sbb
sub
inc
ret
push
mov
xor
xchg
enter
mov
sub
ret
jbe
dec
and
xor
rcrb
jne
hlt
nop
popa
add
adc
push
shrb
pop
mov
pop
sbb
dec
pop
mov
mov
push
jae
dec
add
fcompl
orb
and
add
adc
jge
sbb
ret
inc
cmp
adc
jecxz
test
pop
bound
test
dec
pop
mov
add
sbb
loopne
adc
mov
push
js
mov
std
push
adc
pop
or
mov
pop
test
pop
getsec
adc
mov
and
pop
push
or
sar
mov
push
sbb
rol
push
shrb
test
or
or
and
push
sub
sub
mov
adc
ficompl
dec
pcmpeqd
idiv
mov
sbb
mov
ss
xor
mov
bound
mov
mov
dec
or
dec
sub
pusha
or
dec
ficomps
mov
sub
cmpsl
orl
fiadds
sbb
daa
cmp
flds
jbe
pop
loope
bound
shrl
xor
jge
ret
test
and
sub
loope
push
ja
pop
aas
std
mov
ja
dec
or
push
movl
dec
pop
xchg
test
mov
call
add
ss
sbb
xor
and
in
out
pop
xorl
cltd
jno
push
cmp
and
lcall
jl
push
xor
test
push
mov
push
or
mov
cmp
inc
into
mov
xchg
std
mov
lds
clc
cmp
adc
pop
enter
and
lock
arpl
push
xor
jno
xlat
mov
loopne
vmaxsd
push
imull
cmp
jae
faddp
mov
call
das
sbb
sbb
adc
jnp,pt
adc
aas
out
aam
popf
loope
loope
aas
iret
mov
dec
cmp
mov
xor
test
adc
sbb
cli
stos
popw
lock
push
inc
mov
sbb
mov
sbb
arpl
sbb
lea
add
cmp
add
xchg
add
test
add
rcrl
sub
cmp
es
test
mov
jo
fwait
mov
inc
xchg
push
pop
cwtl
orb
cmpb
pop
pop
insb
push
sub
push
dec
pop
inc
pop
sub
mov
inc
pop
pop
ffree
add
sbb
and
mov
mov
pop
mov
sbb
sbb
iret
das
rcrb
vpcomuq
mov
push
pop
push
test
jl
sbb
xchg
aaa
insb
sbb
inc
mov
popf
sbb
sbb
sbb
sbb
jno
jns
cmp
in
aas
xor
cwtl
dec
pop
enter
dec
xor
mov
imul
or
and
jno
xor
mov
xor
jno
jecxz
mov
and
mov
lds
shl
daa
pop
shrl
mov
pminsw
imul
push
dec
lret
mov
xchg
mov
fst
or
add
in
inc
add
push
or
sub
xor
in
cmp
es
das
adc
iret
xchg
pop
lds
push
push
insb
inc
cwtl
ja
clc
mov
push
loopne
dec
lahf
mov
js
orl
subl
cmp
jb
rep
jg
pop
jae
jb
jb
iret
call
fsubl
mov
jg
pop
loopne
lods
loop
push
or
pop
ds
sahf
pushf
fmull
jg
add
cmp
dec
pop
outsb
and
mov
aas
lods
ud1
and
lods
popa
cmp
push
rolb
inc
adcb
aam
adc
je
push
pop
sub
mov
cmp
lods
shrl
lret
test
add
andl
call
scas
add
xor
dec
or
push
mov
sub
and
daa
add
mov
add
ss
test
ret
scas
mov
jne
or
jne
movsl
aad
dec
jmp
orl
mov
mov
jno
call
adc
dec
cmp
push
dec
add
mov
add
add
jbe
rolb
in
pusha
xchg
stos
sbbl
cmp
test
in
jmp
push
orl
shlb
push
lods
xlat
push
mov
pop
add
gs
int3
dec
ret
push
cmp
and
or
push
in
or
xchg
or
loopne
jmp
xor
adc
insl
insl
xchg
popa
add
adc
dec
jo
lods
mov
mov
pop
int3
das
lock
add
push
fcoms
ja
inc
push
xchg
push
rclb
lret
lret
jecxz
cli
and
and
and
add
insb
and
js
repnz
and
push
lods
or
xchg
or
imul
lret
pop
pop
daa
sbb
sub
rcll
iret
add
xor
pop
and
iret
nop
push
dec
or
push
mov
iret
inc
mov
arpl
aad
inc
xchg
and
and
cwtl
sar
and
repnz
push
mov
lret
pop
pop
push
ja
jo
sahf
sarl
mov
add
sub
mov
loope
daa
out
pop
jl,pn
repnz
dec
pop
push
xor
out
cmp
inc
pop
push
adc
daa
imul
movswl
pop
sub
pop
imul
pushf
mov
lods
loope
adc
sahf
adc
jp
sbbb
mov
stc
ret
sub
push
sub
push
inc
sub
test
add
cmp
dec
add
add
icebp
or
or
sub
push
data16
fisubrl
jno
sarl
inc
imul
push
sbb
push
and
daa
les
shrl
dec
or
or
test
inc
xor
push
inc
or
in
and
mov
pop
inc
fwait
sub
pop
test
add
loopne
mov
cmp
xor
testl
inc
jb
addr16
inc
dec
push
in
addr16
and
jnp
out
mov
add
or
cmp
add
xor
stos
cmp
xchg
or
add
fsubrl
dec
jge
js
jns
pop
aas
imul
xorb
lods
push
iret
pop
xchg
push
push
stos
add
pop
rolb
and
int3
mov
or
push
mov
dec
adc
cmp
and
sbb
pop
aas
ffreep
inc
enter
js
movsl
ffreep
mov
push
add
ret
add
andb
jge
mov
pop
cmpsl
inc
adc
mull
add
or
das
or
loopne
or
imull
popa
fwait
imul
movsl
add
and
sbb
xor
sbb
sbb
test
inc
fimull
push
inc
or
or
aaa
push
insl
sbb
push
lods
push
cmp
sub
inc
jnp
dec
and
js
ds
rcl
push
mov
lock
xchg
fistps
movsb
inc
adc
popa
ret
inc
pop
testl
jge
addr16
sti
scas
xchg
add
cmpb
jne
push
cmpb
jne
adc
mov
jne
nop
andl
lcall
jo
sbb
push
or
adc
pop
pop
push
nop
fsubrs
movsl
or
mov
and
push
hlt
xor
rclb
insl
pop
dec
sbb
adc
jl
rcrb
iret
es
imul
add
adc
adcb
sbb
sub
adc
and
cmp
adc
or
jne
jl
pop
pop
jmp
jl
xchg
xchg
dec
mov
lret
int
dec
or
lock
xchg
jo
xchg
cmp
cmp
leave
pop
sbb
ret
insl
mov
sbb
cmp
inc
push
xor
adc
and
cmp
je
das
push
inc
and
iret
daa
mul
inc
out
movb
push
fs
push
jle
mov
xchg
pop
shr
push
sbb
cmp
loope
and
cmp
or
inc
add
ret
setg
outsb
sub
and
sarl
mov
xor
or
jae
and
xor
push
cltd
jae
adc
xchg
in
mov
or
cmpsl
ffree
xor
punpckhbw
das
or
inc
mov
dec
or
adc
xor
loopne
adc
sbb
dec
xor
pop
enter
rorb
les
jbe
add
rol
nop
xor
sub
push
sub
or
sbbb
mov
icebp
dec
les
push
dec
add
je
inc
xor
sub
int
pop
leave
add
clc
lock
pushf
push
ss
add
mov
push
and
add
and
add
nop
xor
sbb
add
cwtl
cwtl
iret
cmp
ret
or
xor
movsl
sub
mov
and
cmpsl
mov
or
or
inc
outsb
sub
hlt
sub
pop
cwtl
mov
or
add
rorb
rorb
push
sti
outsl
add
fdivl
and
and
or
dec
or
or
and
stos
lcall
cltd
movsb
or
push
sub
xchg
pop
rorl
stos
push
mov
aaa
and
sub
or
mov
leave
roll
out
nop
mov
cmp
bound
jae
lea
xor
and
sahf
fadds
jno
and
dec
jge
jl
iret
adc
iret
pop
dec
pushf
lret
or
fidivrl
sub
inc
cmp
idivl
add
das
add
sbb
cmp
movsl
sub
mov
and
pop
pop
xchg
push
lcall
xchg
mov
xorb
mov
mov
mov
mov
call
lea
cmp
push
ja
sub
nop
add
bound
cmpsb
sbb
mov
loope
enter
test
sub
sbb
and
dec
and
inc
f2xm1
inc
adc
mov
xor
add
or
dec
aam
mov
rclb
shrl
add
cmp
imull
divl
daa
imul
aad
add
stc
sbb
push
fmul
nop
jmp
inc
dec
popa
cs
jge
sbb
add
lea
sbb
fsubr
es
xor
mov
cmp
xlat
in
pop
lock
lcall
enter
push
fadds
fmuls
mov
je
push
push
cmp
jb
gs
xchg
xchg
repnz
ffree
mov
arpl
and
push
psubw
xor
lahf
push
or
push
xchg
xchg
xchg
xchg
ss
aaa
or
or
or
or
inc
or
push
xchg
inc
cmovne
inc
jo
arpl
xchg
inc
ss
and
add
je
filds
jmp
or
lods
add
dec
dec
adc
nop
cmp
sbb
arpl
mov
cmp
ljmp
nop
subb
pop
aam
sub
popf
xchg
pop
nop
aam
xchg
sbb
gs
sbb
insb
mov
in
inc
jle
int3
sbb
adc
jge
xchg
cmp
jge
insb
sbb
aas
aad
rcrl
fs
sub
xchg
out
and
mov
sbb
mov
loope
invd
or
sahf
stos
sub
or
adc
and
lahf
ror
adc
push
cs
xchg
fldenv
sbb
sbb
and
xlat
push
and
and
enter
das
sub
jb
xor
sub
bound
repnz
xor
and
cmp
and
xchg
cmp
inc
inc
enter
inc
inc
jb
lret
xor
leave
dec
dec
dec
je
jnp
inc
js
or
jg
and
movsl
add
jno
push
test
enter
das
test
xor
sub
mov
add
inc
pop
xchg
inc
mov
pusha
sbb
lods
adc
pusha
idivb
jmp
inc
je
in
sub
mov
mov
push
adc
inc
add
insb
out
inc
push
pop
mov
pop
and
mov
test
mov
inc
inc
insl
inc
and
push
xor
mov
fnstcw
enter
fistps
sub
mov
movsl
je
adc
push
inc
pop
lcall
das
mov
cmp
out
push
adc
inc
mov
jno
scas
jns
pop
insb
lock
add
pop
loopne
inc
mov
sbb
push
and
mov
arpl
pop
or
sub
sub
pop
adc
pusha
and
xor
add
and
ret
jg
test
dec
divl
ffreep
cmp
mov
sar
add
jg
jl
push
sti
call
cmp
aam
add
sub
mov
add
push
xor
sahf
es
sbb
mov
test
push
aad
rorb
sbb
jg
int
mov
push
adc
adc
repnz
xchg
push
fnsave
or
jmp
nop
std
in
hlt
inc
mov
xchg
push
sub
inc
mov
cmpsb
inc
enter
inc
out
outsb
adc
mov
sbb
inc
lea
outsb
shlb
cld
sub
mov
jl
inc
xor
aam
fsubs
sbb
xor
sarb
mov
push
cmp
sbb
iret
ss
mov
pop
inc
iret
or
push
cmp
inc
lds
xor
cmp
adc
test
test
push
dec
movsb
dec
jne
adc
dec
xor
xorb
or
mov
pop
out
stos
lret
out
dec
xchg
cmovs
fs
sbb
dec
mov
and
inc
push
fiaddl
sarb
push
aad
inc
mov
mov
and
movntps
icebp
loopne
loop
mov
push
mov
pop
xchg
aas
sbb
mov
xor
and
iret
aam
mov
jp
movsl
or
inc
push
and
sbb
mov
jge
xor
shl
adc
sub
jno
dec
nop
xlat
pop
inc
push
inc
jp
pop
cld
and
dec
xor
shr
jl
negb
jbe
shl
jmp
inc
stc
and
or
aaa
fsubrs
inc
ret
cmp
inc
add
push
sbb
div
fwait
orb
add
rorb
and
pop
shll
in
ret
ret
popa
inc
inc
into
jg
adc
imul
xchg
lea
sbb
mov
icebp
xchg
inc
fwait
or
pop
lock
test
inc
daa
inc
mov
dec
pop
sub
xor
in
inc
sbb
aam
push
sbb
fadds
ljmp
sub
fcoms
sub
push
add
rcpps
lahf
push
sub
cmpb
xor
mov
push
xorb
or
jle
mov
sub
lcall
xlat
push
ficomps
pop
add
inc
aaa
xchg
shlb
dec
jmp
pop
or
xor
fiadds
push
movsb
or
pop
std
xchg
mov
and
dec
xor
or
insl
enter
and
daa
daa
pop
pop
lret
inc
ret
icebp
jl
pop
les
aad
dec
push
push
jp
sub
adc
add
cmp
dec
clc
cmp
adcl
add
pop
mov
mov
outsl
or
push
push
fisttpll
neg
jmp
pusha
pop
shl
clc
jnp
adc
cmp
add
pop
mov
loope
test
out
test
add
inc
rolb
psadbw
sub
sub
mov
cmp
jmp
mov
andl
insb
jmp
inc
and
and
add
outsb
mov
or
jne
xor
aam
inc
shl
mov
es
pop
arpl
movsb
out
lea
xor
inc
nop
ds
inc
push
sbbb
mov
shlb
adc
add
cmp
aas
js
or
adc
outsb
mov
cli
jbe
sub
sbb
add
and
push
lock
movsb
and
cmpsb
pusha
fadd
xchg
fdivs
or
inc
mov
scas
jmp
data16
stc
cmp
or
je
add
jb
cmp
xorb
inc
popa
mov
xchg
aas
sub
je
cs
je
and
adc
lods
sbb
dec
inc
lret
add
cmp
cmp
jle
push
lods
or
jne
jnp
in
adc
in
jb
push
sbb
enter
stos
mov
push
push
lret
aaa
pop
or
popa
jne
leave
test
or
das
nop
pop
mov
ss
pop
jmp
inc
es
insb
je
and
push
loopne,pn
nop
and
pop
test
add
adc
adc
adc
push
mov
sahf
xor
insb
cmpsl
adc
movsl
jmp
jne
mov
dec
and
jecxz
call
dec
shlb
mov
xor
or
pusha
das
add
or
xor
aas
cmpsb
and
out
mov
add
shrb
jae
lods
ss
mov
sub
mov
lods
adc
mov
out
add
jne,pn
loopne,pn
xchg
mov
pop
sub
mov
and
nop
xorl
or
push
xchg
jecxz
outsl
dec
cli
sbb
and
nop
cmp
and
xor
fs
mov
sbb
xor
jae
or
inc
and
adc
push
adc
add
sub
inc
addl
test
jo
enter
ret
or
push
lock
pop
cmp
mov
nop
xchg
add
inc
test
aam
inc
lret
stos
xor
lds
mov
sub
mov
xor
out
sbb
sub
cmp
jge
sub
je
mov
sub
faddl
add
dec
je
sub
cmp
das
or
sbb
or
or
ret
pop
imul
shl
push
in
test
and
or
mov
and
mov
and
pop
mov
ret
imul
in
sbb
jae
or
push
and
divb
andb
es
add
jno
repnz
xchg
push
aaa
push
arpl
subl
mov
xor
outsb
or
addb
mov
inc
dec
inc
xor
mov
xchg
mov
mov
lock
mov
int3
pop
aas
dec
movl
cmp
jle
bound
sbb
subb
xlat
pop
orl
outsb
or
in
or
xor
and
ret
push
outsl
pop
mov
dec
out
mov
jb
jnp
jo
mov
adc
gs
inc
pusha
and
push
mov
lahf
inc
notl
mov
dec
push
xchg
sub
ja
add
mov
push
or
out
ret
or
scas
sub
das
fisttps
negl
cltd
push
mov
popa
or
and
inc
rcl
add
dec
jl
int
dec
push
filds
cmp
imul
cmp
ljmp
decl
arpl
sbb
clc
inc
or
and
icebp
aam
xlat
and
or
and
jno
call
adc
add
mov
mov
insb
or
push
xorl
inc
test
sub
dec
aad
dec
sub
sti
aam
or
jg
cmp
xchg
loope
testl
cmc
pop
push
nop
sbb
rcrl
pop
and
scas
inc
xor
dec
sbbl
xlat
clc
lods
cmpsl
mov
fucomp
vmwrite
dec
int3
inc
adc
xor
mov
rclb
fcmovne
movsl
test
jnp
setae
jg
xchg
xchg
xchg
xchg
popa
bound
xchg
xchg
xchg
xchg
gs
xchg
xchg
imul
xchg
insl
outsb
outsl
push
xchg
xchg
xchg
xchg
push
push
push
push
inc
lahf
xchg
xchg
push
push
push
insb
pop
pop
inc
loopne
pop
or
inc
inc
push
cs
addb
mov
inc
adc
testb
pop
jno
and
jl
cs
or
adc
push
add
jns
inc
scas
adc
aas
inc
dec
dec
dec
inc
mov
or
nop
push
xchg
mov
fimull
movsb
mov
push
jae
stos
mov
xor
add
repnz
adc
and
shlb
push
sub
mov
enter
pop
xor
mov
and
xor
and
sbb
and
lret
push
imul
lret
popfw
sub
pop
daa
addl
popa
add
inc
popa
mov
cltd
bound
add
fbld
cmpsb
faddl
and
lods
push
xor
pop
dec
push
jmp
in
pop
pop
out
and
les
or
mov
push
fs
addl
and
inc
mov
or
or
int3
sub
push
jl
push
data16
sysret
bound
decl
mov
pop
rclb
mov
push
cmp
xor
and
pusha
sub
pop
or
arpl
pushaw
push
ret
int3
cmpsb
push
movsl
lods
push
fisttpl
out
ret
icebp
push
call
mov
pusha
and
cmp
push
xchg
or
jmp
out
mull
es
aaa
and
adc
add
dec
pop
add
add
adc
xor
adcb
stos
jmp
sbb
jl
and
lea
or
add
push
inc
inc
aaa
mov
imul
testl
int3
mov
sub
and
sti
in
mov
xchg
sub
lea
xorl
inc
lret
push
scas
pop
scas
pop
mov
pop
push
outsb
add
inc
aaa
add
scas
push
pop
xor
push
ja
outsl
inc
dec
call
inc
mov
push
add
sbb
lcall
test
or
push
mov
lock
sbb
sbb
push
call
andb
jmp
inc
arpl
scas
cmp
xchg
sub
dec
je
movsb
arpl
adc
adc
data16
xor
or
jnp
mov
lea
adc
cs
xorb
ret
ss
clc
dec
cmp
mov
fistpl
and
jns
addr16
push
push
xor
xchg
add
mov
adcb
xchg
push
js
nop
int3
adc
sbb
rorb
add
adc
inc
jb
pusha
les
cmovnp
mov
nop
xor
jno
xor
push
cmp
loopne
dec
les
inc
rclb
push
adcb
icebp
sbb
jmp
lods
jae
test
mov
pop
lds
xlat
sub
aaa
rcrl
repnz
xchg
dec
iret
sub
adc
mov
jne
and
ficompl
pop
and
fcomps
fwait
pusha
and
add
push
leave
dec
push
add
gs
out
cmp
adc
orl
incl
push
xlat
jae
and
cmpl
adc
or
daa
add
aas
fisubl
and
out
sbb
rclb
cwtl
mov
fwait
jmp
pop
insl
add
push
popa
jae
sub
jmp
fiaddl
pop
sbb
jmp
and
scas
cmp
faddl
or
popa
jecxz
xchg
or
popa
mov
stos
insl
andl
pop
icebp
adc
adc
adc
mov
dec
dec
repz
test
and
insl
xor
or
mov
adc
push
and
and
inc
mov
inc
addb
pop
lods
jae
jne
loop
inc
and
sub
mov
bound
adc
push
add
and
into
push
das
jo
push
xchg
mov
add
mov
adc
mov
add
add
pop
arpl
sub
inc
sub
mov
or
sarb
test
inc
fnstsw
xchg
push
imul
outsb
scas
push
enter
repnz
and
addb
bound
jmp
push
cli
invd
cli
or
inc
cmp
inc
subl
dec
rep
roll
xor
sub
sbb
or
in
test
or
cmc
ja
dec
int3
sbb
pop
and
je
dec
sti
fsubrl
inc
insb
das
push
push
sbb
push
mov
fdiv
inc
and
jg
cltd
and
sbb
or
mov
mov
pusha
insb
cmovne
jbe
lods
movl
pop
and
aad
jge
xchg
icebp
xchg
push
pop
or
sbb
roll
mov
adc
pop
or
add
sbb
and
unpckhps
adc
cmpsb
inc
sub
inc
pop
xchg
or
imul
ss
or
cmp
push
cmpsl
adc
outsb
addr16
mov
nop
push
clc
outsl
push
mov
push
mov
mov
hlt
push
cmpb
mov
out
xlat
push
sub
pop
push
xor
lock
lock
mov
sub
pop
xor
rolb
mov
adc
sbb
push
cli
jne
or
mov
sbb
rcrb
mov
xorl
cli
scas
cmpsl
add
mov
movsl
subl
sub
sbb
mov
sub
cmpsb
jne
dec
sub
imul
movsl
push
mov
shlb
sub
dec
clc
jo
push
adc
push
adc
sbb
push
sbb
jno
pop
add
or
cmc
jns
imulb
inc
pop
dec
add
or
mov
add
jns
dec
lods
jno
push
push
jno
gs
xchg
jge
xchg
loop
je
dec
insb
pop
in
mov
and
pop
mov
push
ja
mov
add
mov
pop
pusha
push
mov
jecxz
mov
mov
mov
jno
stos
enter
jno
jg
add
leave
inc
leave
popa
mov
dec
in
dec
adc
mov
shll
fdivr
pop
pop
dec
ret
sbb
or
xchg
push
mov
in
cltd
cmpb
incl
mov
movl
or
xor
leave
mov
push
add
data16
add
adc
seta
orb
sbbb
push
pop
mov
insl
repnz
bound
adc
or
mov
shlb
and
add
push
or
out
add
and
or
sbb
or
pop
out
jnp
mov
dec
and
insb
push
xor
data16
inc
push
xchg
push
repnz
test
addr16
and
push
insb
push
enter
sub
pop
jp
mov
add
add
int
or
add
loope
add
movsb
loop
push
dec
arpl
fmuls
sub
movb
adc
and
and
arpl
pop
pop
stos
cmp
mov
in
push
in
mov
jle
in
rolb
jl
les
mov
lds
xor
xchg
or
jnp
xchg
stos
add
xchg
hlt
xchg
inc
aas
mov
mov
shlb
xchg
mov
dec
jbe
cwtl
jbe
jbe
push
out
xchg
xlat
cmc
paddq
ja
xlat
cmp
or
rorb
scas
test
jae
and
mov
xchg
cmp
les
dec
fsts
dec
movsb
mov
mov
aaa
loop
jp
push
sbb
and
sbbl
sti
add
pop
inc
imulb
mov
scas
jmp
mov
mov
add
mov
or
or
fs
sub
inc
imul
andl
arpl
and
jg
and
xchg
out
xchg
or
mov
rolb
js
jns
sbb
stc
or
test
sbb
mov
js
imul
aas
popa
cltd
and
stos
sub
pop
fisttpl
popa
outsl
cmp
loopne
mov
adc
stos
lods
decl
cmp
je
enter
lahf
push
pop
dec
or
and
push
insb
cltd
push
outsl
mov
bound
push
inc
bound
repnz
or
arpl
les
cltd
dec
data16
cmpsb
mov
aad
push
lods
sbb
push
and
popf
mov
insl
lea
inc
orl
cmpsb
pop
rolb
sub
inc
ss
jne
adc
or
adc
mov
sub
mov
add
cmp
pop
pop
cli
push
adc
xchg
push
dec
mov
mov
sbb
aam
jne
cs
ja
loopne
loope
push
xchg
rorb
fwait
mov
in
push
cmp
xchg
cwtl
lea
movsl
inc
or
je
je
popa
shld
inc
dec
inc
in
add
fldt
pop
xor
sahf
lock
add
fs
xchg
jo
ljmp
test
sar
or
adc
inc
sarb
dec
or
ss
test
outsb
mov
adc
outsb
push
pop
cs
test
icebp
sbb
pop
jb
je
xor
add
inc
sbb
cmp
sub
adc
and
ret
dec
and
push
sarb
or
dec
dec
add
outsl
mov
mov
xlat
add
mov
incl
jne
daa
add
xor
inc
sbbl
push
add
call
into
movsl
xor
es
shlb
leave
push
cmpsl
or
inc
orb
cmc
fiadds
or
jae
aaa
shlb
jnp
adc
dec
sahf
push
fbld
adc
and
in
add
mov
and
sub
imul
mov
rcl
unpckhps
xor
jae
leave
cmp
pmaxsw
mov
inc
dec
or
dec
inc
movsl
fdivs
outsw
jnp
adc
mov
adc
pushf
andb
ret
out
sahf
sub
pop
subb
mov
xchg
xchg
ss
orb
adcl
mov
dec
mov
inc
imul
outsb
and
insb
mov
pop
push
mov
in
push
dec
inc
movsb
and
stos
push
dec
pusha
pop
fs
mov
push
in
test
push
fs
pop
dec
ret
inc
cli
push
jo
scas
push
sub
pop
pusha
push
mov
adc
es
add
pop
push
in
add
movsb
adc
xor
sbb
pop
fwait
push
call
fwait
mov
adc
push
loopne
pop
or
add
jo
mov
pandn
out
and
xlat
scas
push
add
pop
imul
in
cmp
jnp
jge
add
fcomps
push
adc
jae
push
adc
push
cmp
dec
mov
into
neg
jnp
cld
push
es
sbb
cmp
sub
mov
lods
mov
pop
push
mov
mov
cmpb
push
cmp
or
push
nop
shrb
push
or
idivb
adc
xchg
mov
cmpb
cld
add
es
loopne
or
pop
push
scas
imul
inc
pop
into
ds
mov
mov
add
push
push
cld
xchg
ds
xchg
enter
push
lahf
cmpsl
jge
es
cmp
pusha
push
push
andb
xor
mov
das
push
int3
fmulp
data16
js
jbe
fsubrl
jmp
insb
push
pop
inc
dec
adc
movl
out
out
shl
ja
push
subb
or
lcall
jp
sub
mov
aas
pop
cmp
int3
movsl
dec
jbe
mov
data16
rol
in
push
add
push
and
mov
xchg
xor
add
jecxz
out
xchg
mov
cmp
enter
data16
xor
xchg
add
mov
xor
adc
xchg
in
xor
and
xchg
cwtl
sub
ret
mov
pushf
adc
add
insl
aaa
mov
dec
add
insl
clc
sub
pop
inc
mov
faddl
jge
out
mov
or
pusha
lds
xor
pop
imul
mov
dec
add
das
dec
popa
ret
jg
fcmovnb
mov
arpl
testb
es
cmp
mov
push
xor
subb
orl
adc
sub
cs
imul
push
add
sub
aam
sub
jecxz
lret
pop
dec
and
test
lahf
push
loopne
popa
dec
cmp
adc
mov
dec
xor
ja
je
out
inc
and
cmp
aam
xchg
ja
mov
mov
jae
mov
sub
nop
rorl
xchg
push
dec
add
lret
rcll
mov
push
mov
mov
push
mov
andb
pop
ret
push
fisubrl
or
sub
push
test
popa
push
loop
das
jne
pusha
dec
shlb
test
fs
int
sub
test
xchg
testl
adc
xor
out
cmp
js
fwait
push
fs
je
cmp
ret
inc
je
or
call
or
test
ret
in
inc
test
pop
or
inc
cmpsb
sub
adc
stc
mov
fildl
aaa
lea
push
mov
leave
push
outsb
sub
outsb
fwait
and
nop
xor
pop
in
or
fs
mov
cmc
das
xchg
add
mov
cmova
sbb
fs
or
dec
sub
das
or
dec
loope
cmp
or
inc
or
add
push
push
and
sub
pop
rol
loopne
test
sub
test
pop
int
mov
cmp
test
jno
xchg
fstpt
mov
jo
sbb
push
jns
imul
xor
insb
add
popf
dec
ljmp
shlb
lock
loop
push
mov
sub
js
adc
add
adc
mov
mov
mov
mov
setg
cmp
leave
dec
sub
movd
sbb
mov
insl
setp
push
fdivrp
das
cltd
add
pop
adc
leave
fmuls
and
std
cwtl
add
leave
insl
push
mov
insl
sahf
out
out
leave
leave
xchg
outsl
lret
add
leave
leave
insl
test
jb
das
pushf
bswap
cmc
aad
imul
and
xchg
pop
inc
pushf
outsb
ss
ds
xchg
aas
mov
jb
in
into
xchg
aas
into
add
dec
xchg
jns
lods
xlat
test
xor
xcrypt-cfb
cmpsl
mov
dec
sbb
sbb
cmp
test
sbb
xchg
insl
ljmp
iret
add
push
lret
es
sahf
pushf
clc
cmp
pop
lods
add
ss
std
mov
cmp
shrl
mov
insl
dec
cltd
out
xchg
fwait
and
sub
xor
adc
addb
or
pusha
sub
in
sbb
or
or
and
xor
lret
outsl
push
dec
imul
in
pop
pop
and
loope
aas
adc
aas
sub
bound
icebp
cmp
addl
dec
mov
imul
xchg
icebp
sub
das
dec
testl
enter
fs
dec
pop
dec
adc
mov
or
xor
pop
repnz
aam
jp
mov
inc
repz
mov
daa
aad
add
mov
aam
jmp
jg
pop
xor
aad
mov
mov
sub
xchg
xor
mov
adc
dec
movsb
fldcw
mov
mov
or
jg
pop
les
lds
or
jle
hlt
test
lea
push
sub
cmp
pop
roll
cmp
xor
cmp
inc
outsb
popa
pop
aas
jne
or
cld
pop
push
dec
gs
sub
das
dec
or
insb
pop
and
push
cs
repnz
test
push
xchg
pop
jne
shrb
insl
adc
adc
movsl
movsb
js
xor
int3
push
xchg
adc
push
or
mov
add
scas
mov
test
dec
daa
gs
testb
or
push
ljmp
jecxz
add
pop
test
or
jp
adc
movsl
sub
cwtl
in
dec
pop
cs
loop
push
pusha
and
ret
and
mov
or
push
mov
push
sub
aaa
mov
shrb
push
lahf
xorb
sbb
dec
loopne
adc
cwtl
movsl
mov
add
sbb
jne
sbb
arpl
add
push
cmp
rcr
inc
clc
repz
xlat
xchg
push
sbb
lea
es
sbb
inc
xor
mov
lcall
imul
cmp
ja
popa
push
dec
cs
sbb
mov
pop
rol
or
push
mov
xorb
push
rolb
insb
dec
adc
in
adc
xchg
jp
jle
and
lea
push
out
lea
mov
xor
adc
adc
bound
or
add
in
subb
xor
or
les
lock
adc
sub
and
mov
or
cld
pop
popa
lret
sbb
xor
mov
addb
inc
inc
push
xchg
sbb
push
push
sahf
adc
inc
insb
xchg
and
nop
lret
mov
push
mov
mov
je
push
fcompl
rolb
mov
push
lcall
push
ja
clc
xor
sub
jae
or
adc
mov
aam
movsl
lahf
out
add
adc
dec
sbb
stos
lods
jo
cwtl
or
adc
stos
sub
or
push
and
cmp
jo
sbb
adcl
or
jo
sub
call
push
mov
repnz
add
ret
sti
ss
cmc
add
or
mov
cmp
xchg
xchg
neg
sbb
lcall
xchg
xchg
shl
fwait
cmp
xchg
xchg
sti
and
xchg
xchg
xchg
lret
sbb
xchg
xchg
xchg
mov
cld
add
adc
rorl
sbb
jg
in
insl
sub
or
popa
lcall
aam
push
xor
test
fidivrl
push
xchg
pop
inc
adc
iret
or
xchg
enter
add
cvtps2pi
adc
fldlg2
push
mov
lods
shlb
jmp
push
add
add
mov
sub
add
sbb
popf
dec
or
xchg
pop
cmp
pop
add
shll
lea
push
andb
aad
test
mov
push
push
daa
movsl
outsb
adc
xchg
xor
fidivrl
fiaddl
mov
add
inc
cmp
mov
or
inc
or
push
sub
xacquire
lock
inc
dec
stos
and
inc
fwait
out
mov
data16
dec
add
xchg
pusha
and
push
int3
sub
in
lret
test
into
sbb
adc
sbb
sbb
inc
pop
or
loope
mov
push
push
shll
outsb
mov
jae
clc
adc
push
test
xor
jmp
add
nop
add
or
jne
and
insl
sbb
pushf
fadds
pop
mov
and
cmp
xchg
add
or
mov
pop
cs
mov
sub
inc
and
sbb
mov
aas
jge
cmp
dec
adc
js
add
out
push
imul
push
cmp
adc
lds
jno
add
add
lock
lcall
cmpb
cmpsl
dec
cmp
push
pop
sub
inc
xor
add
dec
and
in
add
call
and
mov
shlb
adc
sub
movsl
das
mov
add
dec
and
add
add
xchg
mov
xchg
sbb
in
xchg
push
add
cmp
jns
or
adc
fadd
test
jo
fmull
rolb
das
adc
mov
pusha
jp
roll
ja
fisubs
dec
dec
sbb
enter
in
push
xchg
test
push
add
adc
xchg
xor
xor
jo
sbb
das
mov
or
dec
xor
sbb
jo
inc
sbb
cltd
xor
test
cmp
and
add
add
add
nop
push
leave
and
and
cmpsl
xchg
push
leave
and
and
and
pushf
dec
push
and
sbb
jns
daa
add
add
jns
sub
sub
sbb
jns
sub
sub
cmp
jns
sub
inc
push
subb
xor
scas
xchg
pop
and
add
add
add
mov
incl
ret
add
adc
push
pop
test
push
test
sub
add
inc
test
jns
pop
mov
aaa
xor
push
xor
jb
mov
mov
rolb
mov
push
sbb
mov
cmp
test
ja
ss
fadds
int
push
cwtl
sbb
jmp
xchg
and
loopne
int
int3
test
mov
adc
sbb
incl
aaa
aas
mov
sbb
pop
enter
adc
enter
mov
add
enter
mov
in
movsb
sub
enter
jp
leave
lock
adc
in
enter
repz
cmp
xchg
aam
sbb
enter
mov
mov
dec
jne
mov
test
cmp
mov
pop
mov
mov
add
sub
adc
test
out
das
xchg
pop
outsb
mov
inc
dec
pop
int3
popa
pop
cmpsl
in
shll
add
enter
cmpsl
adc
fs
sbb
call
filds
and
lea
and
es
xchg
loopew
scas
test
shrb
sub
in
push
pusha
scas
inc
andl
imul
mov
sbb
add
cmp
mov
lahf
xchg
pop
sub
gs
dec
inc
jo
mov
sub
add
adc
xchg
pop
outsb
push
mov
adc
xlat
mov
add
orb
pop
lcall
cmp
adc
mov
pop
add
sbb
or
adc
mov
inc
test
inc
sub
and
pop
aaa
prefetcht2
adc
insb
std
adc
inc
and
adc
arpl
mov
dec
cmp
or
loopne
push
xorb
sub
lock
out
cmp
dec
sbb
fildl
jle
mov
or
adc
insb
mov
dec
cmc
shl
enter
rorb
inc
or
push
and
rcl
sbbl
push
add
in
sbbl
mov
mov
inc
popf
je
inc
dec
inc
mov
dec
mov
sti
add
mov
outsl
mov
lea
lcall
arpl
mov
nop
lret
mov
sbb
rcl
xor
xchg
add
and
pop
dec
aad
sbb
pop
adc
cmp
in
fcoms
cmp
cld
inc
in
leave
in
js
sub
jbe
and
sub
pop
outsl
ds
cmp
gs
mov
lods
cmp
add
dec
hlt
xchg
nop
ret
lock
push
jae
pop
or
test
inc
sbb
nop
sub
es
fs
mov
push
push
inc
xchg
inc
xor
ja
ja
lea
inc
clts
imul
lods
and
jnp
ds
fimull
mov
popl
out
fucomi
test
test
test
es
and
rclb
repnz
test
jmp
and
sub
sbb
push
cmp
push
inc
sbb
inc
movsb
add
or
lea
stos
or
divb
pop
mov
jnp
pop
and
fstl
add
xor
addb
js
add
push
dec
adc
test
fsubrl
ret
jle
ss
insl
nop
push
push
inc
add
mov
sbb
jle
lcall
pop
sbbl
inc
push
stc
out
dec
add
push
push
out
rcrb
sub
lea
inc
cmp
add
sbb
inc
cmpsl
cmp
inc
es
push
adc
and
push
fs
and
jnp
mov
cmp
sbb
cmpl
sbb
inc
fldl
sbb
in
iret
add
mov
mov
mov
inc
adc
loop
dec
clc
mov
ja
sub
pop
fimull
rclb
stos
fildll
dec
stc
pusha
adc
fs
add
ret
cmovns
adc
sub
in
xchg
pop
pop
mov
pop
scas
sbb
jg
add
sub
lahf
pop
jmp
arpl
movsb
pop
fcoms
addb
push
pop
or
lods
and
xchg
adc
pop
pop
pop
jg
push
dec
adc
sbb
sub
sbb
lret
mov
sub
les
jnp
xor
or
aad
pop
cmp
add
inc
mov
pop
lea
push
mov
or
insl
dec
jo
test
nop
sbb
inc
fwait
push
fs
xchg
sub
dec
xor
mov
nop
xchg
test
aam
mov
sbb
cmp
mov
insb
mov
insb
dec
fwait
xor
jmp
mov
movl
xor
inc
jp
adc
subl
je
or
cmp
adc
xchg
jo
mov
sbb
xchg
mov
add
fstps
addb
sub
das
jge
pusha
out
inc
or
sub
xchg
cmp
add
xor
xor
dec
fsubrl
jne
mov
adc
sbb
loop
xchg
dec
imul
mov
nop
xchg
jge
enter
add
inc
pusha
push
mov
pop
ret
cmpb
fcomip
sbb
mov
or
hlt
push
mov
xor
push
pop
int3
add
sbb
pop
ja
out
pop
sub
das
push
adc
ds
stos
push
sub
adc
jno
mov
jbe
loopne
or
and
jno
stc
mov
add
or
dec
movsb
addl
inc
mov
adc
push
sub
lret
lcall
dec
dec
inc
test
iret
test
jmp
mov
enter
xchg
hlt
inc
jg
sbb
mov
mov
xchg
adc
imul
sbb
sbb
push
mov
shrl
jmp
mov
fdivs
mov
dec
cmpsl
push
or
stos
dec
cmpsl
into
adc
popa
adc
pop
or
shrl
inc
xlat
movsb
xchg
push
sub
xor
mov
mov
call
xchg
sbb
and
lea
shlb
loopne
add
imul
add
and
leave
test
fsubs
pop
incl
add
movb
inc
outsb
add
lods
rcrb
test
add
decb
pop
movd
add
test
and
cli
or
loopne
lret
scas
adc
popf
es
add
or
insl
jg
dec
dec
push
imul
pop
fidivrl
cwtl
mov
rol
sarb
shll
inc
fcoml
or
pusha
mov
lods
xchg
jp
or
xchg
inc
in
pop
xchg
inc
lahf
adc
dec
jne
dec
aam
xchg
xchg
and
xchg
xor
pop
imul
jmp
mov
xchg
outsl
popf
bound
push
cmpsl
ja
inc
daa
and
ret
orb
stos
pcmpeqb
adc
and
sarb
jbe
dec
fadds
cwtl
add
mov
out
dec
add
mov
pop
adc
jp
cmp
or
jmp
push
or
ret
sbb
xor
movsl
neg
cmc
and
lds
xorl
jp
in
mov
xor
adcl
push
aam
aam
aaa
jecxz
xlat
test
out
sbb
adc
push
xor
lock
mov
and
dec
sub
fcoml
push
sbb
inc
add
dec
xchg
je
int3
mov
loopne
dec
je
fldenv
lock
movsb
mov
imul
shll
shrl
xor
or
stos
or
jmp
pop
mov
push
xlat
add
mov
or
adc
sbb
dec
les
mov
out
push
sbb
adc
sbb
xchg
clc
adc
jecxz
in
es
sub
or
xchg
mov
add
add
push
or
rorb
shlb
sub
ficomps
add
je
and
add
xchg
xor
inc
inc
or
mov
pop
push
jbe
ret
jmp
sub
and
lea
adc
aas
or
add
push
clc
and
xchg
push
push
dec
or
add
mov
add
or
out
movsb
pop
daa
ret
push
inc
push
gs
out
sahf
ja
cmpsb
rcr
xor
push
sub
mov
add
inc
es
add
push
push
daa
jl
mov
decb
or
std
push
jns
mov
and
jbe
dec
fildll
mov
sub
mov
mov
mov
jmp
movsl
sub
sub
adc
mov
cs
imul
and
inc
hlt
out
das
inc
jmp
pop
lea
pusha
add
push
mov
adc
sub
push
and
jg
mov
insb
add
rolb
fstps
add
sbb
mov
arpl
or
or
test
jb
inc
xchg
nop
xor
add
push
inc
lahf
les
rclb
ss
pop
mov
push
mov
xchg
inc
push
shrb
cmp
xor
pop
daa
cmp
push
mov
pop
neg
xorb
gs
outsl
sbb
push
sub
clc
pop
enter
add
cmp
dec
mov
xor
ds
jmp
and
int
sbbl
jg
pop
xchg
and
push
sub
test
or
jno
insl
sbb
leave
es
mov
add
test
mov
sbb
or
sbb
xor
mov
or
and
addl
and
test
sub
cmpb
mov
mov
xchg
ds
jmp
xor
pop
mov
xor
jo
sbb
in
mov
ret
aad
popf
insl
mov
rcl
sbb
inc
adc
lock
hlt
nop
and
iret
push
je
cmp
sub
jnp
sub
xchg
ret
or
and
loope
cmpb
cmp
cs
mov
lea
rcl
xchg
imul
adc
sbb
push
mov
xchg
dec
inc
mov
sti
or
dec
cmp
shrb
mov
and
cld
loopne
push
add
push
cmp
or
or
and
and
iret
push
cs
mov
mov
cmpl
sbb
sub
mov
aad
ljmp
test
xchg
jmp
les
pop
xchg
xchg
shll
inc
gs
js
nop
dec
push
ficompl
sub
rcr
xchg
adc
push
popw
outsb
leave
fsubs
insl
jmp
insl
and
push
push
and
mov
testl
lea
adc
add
mov
sbb
dec
lock
ds
xchg
lea
fcmovu
or
xchg
adc
add
push
pop
xchg
rolb
out
or
bound
add
lret
and
iret
jbe
cld
xor
lret
movl
xchg
cmpl
cmpsb
push
les
mov
cwtl
sub
es
add
sub
jae
jle
cmc
adcl
fsubp
sbb
cmp
orb
jle
addb
lret
push
sarb
inc
mov
mov
pop
add
xor
add
testb
or
xchg
mov
fisttpll
mov
dec
shlb
push
imul
outsb
adc
xchg
inc
out
xchg
lock
mov
andl
sbb
fsubl
adc
inc
sbb
leave
mov
cmp
cmovge
lahf
xchg
push
dec
xlat
ja
shlb
clc
ljmp
mov
xchg
dec
and
pop
rclb
adc
push
sub
int3
sarl
repz
es
pop
jb
lahf
jnp
pop
mov
pop
add
jmp
jo
popl
jmp
loope
mov
or
hlt
in
insl
pop
cmpsb
cmp
jl
jno
int3
stos
add
mov
or
inc
int
jl
add
sbb
repnz
xor
incl
and
loope
pop
dec
sbb
pop
and
jbe
insl
insl
ret
mov
add
cmp
jg
sbb
add
sub
in
addb
lret
xchg
jno
dec
cmp
inc
and
les
cmpsl
or
imul
lock
movb
mov
call
into
jo
pop
or
push
lcall
lea
mov
and
jecxz
sub
jp
lret
sbb
mov
in
rcrl
mov
roll
add
xor
test
mov
add
leave
push
add
adc
push
sub
or
or
push
mov
xor
sub
jns
std
cwtl
nop
mov
nop
pop
mov
jae
in
or
aam
pop
pop
sbbl
mov
sbb
add
inc
into
fcmovb
push
or
xor
push
cli
or
ret
in
test
push
les
in
into
rcrb
push
mov
adc
cmpsb
loopne
jb
push
mov
jp
dec
adcl
call
inc
mov
jmp
xchg
jmp
or
ss
cmpsl
sub
loopne
repz
cmpb
test
dec
test
call
je
std
cmpsb
jo
popa
add
adc
popa
call
pop
cvttps2pi
rcl
sub
or
push
mov
inc
push
sbb
inc
push
or
mov
push
inc
add
adc
scas
sub
test
stos
sub
sub
or
clc
subl
cmp
add
cmp
pusha
sub
xlat
lcall
test
test
lods
mov
pop
cld
pushf
lock
ds
add
out
inc
jb
lea
add
fcomp
addr16
mov
add
out
jmp
fs
jp
lahf
arpl
or
and
rcr
inc
mov
add
push
jmp
mov
dec
movsl
jge
pop
lret
mov
push
movsl
mov
push
sbbb
js
push
fidivl
es
add
dec
jbe
psllw
pop
push
lea
pop
mov
inc
adc
add
test
dec
jae
add
xor
or
xlat
lea
sarb
jmp
fbld
adc
les
call
mov
fistl
fdivrs
mov
orb
or
sbb
fsubr
dec
std
mov
xlat
mov
pusha
lock
and
mov
dec
xor
cmp
dec
xchg
daa
mov
and
js
pushf
pop
das
xchg
add
loope
test
movsb
popa
cs
rolb
and
lods
add
in
push
cmpb
pop
xchg
cs
cmp
xchg
dec
pop
cmp
jnp
lea
sbb
rorl
jmp
push
movsb
cltd
inc
or
or
pop
nop
fldl
mov
mov
ret
jbe
add
in
in
or
inc
das
fisubl
es
adc
mov
orl
orb
inc
dec
jg
cli
mov
sbb
sub
lods
rolb
push
aaa
xchg
scas
ss
mov
adc
push
pop
cmovg
pop
add
in
sub
imul
pop
mov
push
xor
push
ds
dec
add
popa
ret
or
or
scas
add
sub
mov
and
jb
inc
cld
inc
dec
mov
aaa
sbb
lods
mov
mov
jo
add
aam
insl
dec
inc
fimull
mov
addl
xchg
xchg
jg
inc
inc
cmp
push
fldcw
and
repz
les
mov
push
ret
loopne
adcl
mov
pop
lahf
cmp
andb
insb
add
inc
insb
sbb
and
add
loop
sub
test
loope
sub
push
mov
pop
rcrb
cmp
dec
mov
mov
sbb
jmp
cmpb
cmc
adc
sbb
push
mov
mov
es
shrb
sub
pop
jnp
dec
add
or
arpl
mov
outsl
push
xor
mov
fldenv
inc
repnz
xor
xchg
xchg
mov
and
arpl
cmc
sbb
or
out
dec
stos
xor
pop
xchg
push
xchg
sbb
mov
xchg
push
sbb
sbb
adc
mov
mov
lock
push
fcompl
inc
mov
test
jne
mov
sbb
and
arpl
xchg
fsubrp
or
sbb
sbbl
ficompl
and
inc
fcoms
ret
mov
sbb
push
inc
ss
add
cmp
pusha
jge
mov
test
cs
cmp
psubsb
add
scas
loopne
movsl
loopne
adc
xchg
fstpt
jmp
subl
mov
lods
pusha
sbb
rclb
xchg
or
jne
or
jo
test
or
imul
push
stos
mov
sbb
mov
addl
arpl
inc
loope
mov
inc
xlat
fildl
xor
dec
cmp
jbe
mov
add
das
sub
push
adc
adc
add
or
in
jnp
mov
jo
jmp
sub
insl
xor
push
add
aas
dec
xor
xor
adc
cld
cmp
push
mov
jmp
push
lahf
outsb
xchg
int3
mov
lods
xor
test
xor
mov
xchg
shll
je
fldlg2
pop
push
ljmp
mov
in
scas
sub
aam
cmp
push
nop
adc
pop
repnz
add
xlat
xor
cmp
mov
xor
or
cmp
pop
movsb
sbb
pop
inc
xchg
es
icebp
fcoml
cmp
ret
adcb
scas
movsl
sti
xchg
add
dec
xor
aam
ret
pop
mov
xchg
push
fcompl
dec
add
sahf
add
movsb
ficoml
ss
inc
test
leave
sub
int
daa
pushf
je
pop
outsl
dec
int3
sub
and
notb
or
pavgb
enter
daa
dec
and
outsl
and
jmp
adc
cmp
cld
mov
cmpsl
add
fsubl
test
pop
pop
addr16
jae
xlat
or
push
jecxz
fimuls
lret
out
in
loopne
mov
imul
mov
or
loopne
adc
imul
fists
xchg
push
xchg
test
loopne
dec
inc
scas
ret
or
pusha
pop
add
pop
or
je
daa
sbbl
stos
jp
mov
popa
daa
push
stos
mov
das
or
xchg
cmp
adcl
in
and
imul
push
lods
xchg
and
inc
cmc
test
or
je
testl
cmp
into
inc
test
or
sahf
and
stc
cwtl
enter
js
mov
sbb
test
mov
imul
and
sub
adc
shrl
sbb
adc
jecxz
cli
mov
dec
andl
jg
int
or
and
sbb
cmc
lods
pop
pushl
pusha
shrb
jmp
dec
clc
insb
clc
or
jmp
xor
jmp
bound
inc
jle
sbb
sub
jns
lcall
ret
pop
les
add
leave
push
xlat
hlt
iret
fwait
inc
aaa
xorb
lds
xlat
lock
pop
sbb
cmp
add
mov
dec
sbb
cmpl
or
in
jb
push
rorl
push
adc
cmpsb
mov
adc
xchg
mov
orl
or
sbb
pop
or
lahf
pop
sbb
or
mov
add
lds
cmp
std
imul
add
aaa
mov
daa
or
adc
adc
pop
cmpsb
mov
or
enter
or
aaa
jmp
and
mov
mov
xchg
out
or
mov
ss
sar
out
add
lahf
sbb
or
and
cmp
rorb
shrb
jmp
movb
jmp
adc
aad
cmp
leave
pop
and
aad
sbb
cmc
in
stos
inc
sub
jbe
sbb
sub
adcl
sbb
mov
cmp
loope
pop
sub
mov
lods
and
das
push
push
out
andl
fs
adc
add
push
or
sbbl
xorl
addr16
imul
adc
out
jb
mov
mov
jne
add
and
xchg
call
xchg
lret
call
bound
mul
insb
jno
sub
scas
subl
mov
adc
inc
pusha
jno
or
sub
jo
inc
xor
cmp
push
adc
xchg
clc
and
push
mov
sbb
frstor
mov
and
bound
movl
or
out
lret
or
fiaddl
cld
xlat
mov
push
push
adcl
jns
jns
push
adcb
call
das
loope
orb
incb
push
cs
incb
jmp
cmp
adc
inc
jne
cmp
xchg
lods
mov
dec
add
incl
icebp
fs
cmp
roll
and
outsb
insl
sub
sbb
or
xor
mov
imul
repz
jo
jne
push
jle
std
push
test
mov
movl
mov
jne
push
fisttpl
repnz
xchg
data16
and
ret
inc
add
ljmp
ljmp
inc
mov
add
adc
pop
pushf
sub
push
cmp
pop
jbe
nop
pop
movb
push
cwtl
pop
mov
add
mov
mov
jmp
test
incl
and
xor
dec
cmpb
ljmp
lahf
push
fmuls
cmpsb
fildl
gs
jl
lahf
jge
xor
movups
in
mov
insl
iret
outsl
ret
dec
push
cmp
jns
lcall
mov
or
or
mov
dec
push
and
push
add
cmp
mov
lret
mov
or
cs
dec
out
sbb
push
xor
add
aas
arpl
movsl
es
mov
rorb
sbb
mov
dec
push
frstor
inc
adc
mov
in
mov
add
jecxz
call
adc
imul
and
inc
mov
dec
pop
add
mov
mov
cmp
xchg
ss
jns
xor
xorb
sarb
je
cli
xor
addb
ds
mov
jne
cmpb
push
int
ds
or
cld
push
pushf
ljmp
sbb
and
fs
pop
xor
shrl
xchg
dec
mov
filds
adc
dec
les
sbb
sbb
dec
jge
enter
out
roll
dec
sbb
pusha
and
jg
bound
stos
sbb
push
aas
ret
jae
cmp
cmp
adc
ss
jno
fsub
cmpsb
popf
nop
pop
cmp
rorb
fldcw
out
push
movsl
mov
or
pusha
loopne
fs
or
dec
sti
cmpb
push
jns
and
and
nop
lea
mov
iret
pushf
and
sar
push
leave
daa
and
icebp
sub
lea
jl
test
xchg
jge
mov
sub
das
mov
insb
inc
dec
sbb
test
pop
pop
out
dec
loopne
pop
out
sahf
mov
adc
in
shr
mov
mov
mov
or
fucomi
or
imul
insb
or
in
loopne
adc
or
sbb
cmp
sub
pop
adc
sbb
xor
cs
mov
hlt
adc
fimull
jae
adc
lock
lock
cwtl
or
les
jnp
dec
push
xchg
mov
dec
in
and
add
fadd
pop
jecxz
shrl
imul
out
out
adcl
add
mov
mov
adc
xchg
aas
adc
xor
xchg
iret
inc
and
sbb
or
daa
fiadds
in
or
push
jo
mov
lea
add
sbb
xchg
repnz
and
push
cmpb
jg
mov
inc
pop
shll
das
sbb
mov
hlt
pop
push
lret
sarb
lea
and
mov
adc
or
xor
cmpl
adc
stos
cmp
in
popf
add
add
add
repz
lret
add
jnp
mov
pop
icebp
sub
sub
push
add
adc
rclb
and
adc
xor
sub
sub
inc
adc
popf
jle
ret
xor
adc
add
push
test
sbb
xor
mov
sub
adc
jl
sub
pusha
fs
pop
push
pop
nop
mov
shl
xor
iret
sub
or
fsubrl
xchg
bound
mov
adc
push
sahf
and
cmc
iret
pop
lods
and
push
imul
aam
cmp
xor
fwait
dec
or
sbb
js
push
mov
scas
sbb
fsubrs
arpl
push
pop
sbb
adc
into
testl
add
jbe
xor
scas
scas
div
sub
or
out
dec
enter
mov
pop
cmp
or
shll
push
inc
xor
push
jmp
mov
pop
dec
adc
rorl
and
jecxz
adc
or
inc
inc
jmp
xor
ljmp
mov
push
add
mov
lds
mov
movsb
je
dec
andl
mov
cs
or
add
enter
add
rcll
lock
rcr
cmp
mov
adc
sbb
xchg
mov
popa
or
mov
sbb
or
pop
outsb
jb
sbb
sbb
add
fcomps
adc
push
popa
mov
inc
fmuls
mov
xorb
fdivrs
mov
ja
mov
or
sarb
adc
shlb
and
negl
add
push
aas
xor
or
ja
leave
xchg
mov
pop
popf
add
jmp
xchg
clc
mov
add
push
lock
shl
movlps
arpl
xchg
aas
dec
xchg
mov
fadds
aad
xchg
push
push
mov
jbe
cld
pop
or
inc
and
dec
loopne
sbb
jo
inc
sbb
movups
fbld
fnstcw
sbb
rclb
inc
cmpsb
push
xchg
je
jo
or
add
add
lret
and
movsb
add
adc
or
push
xor
test
mov
mov
sbb
jecxz
and
test
push
push
js
insl
add
or
mov
pop
imul
das
fimuls
sbb
cmp
push
outsl
insl
arpl
lcall
movsb
stc
pop
sbb
cmp
pop
or
mov
insl
adc
sbb
addl
adc
push
push
sub
test
adc
dec
popa
pop
inc
popa
or
jne
ret
rorb
pusha
jmp
sbb
add
adc
mov
imul
mov
pop
add
mov
cli
and
and
jno
inc
mov
popf
xor
lret
les
icebp
fs
adc
inc
rcrl
xchg
fcmovnb
push
add
nop
dec
push
ljmp
mov
sub
dec
jecxz
dec
test
sub
or
sahf
inc
sbb
adc
xchg
sub
icebp
jno
sti
fdivl
jbe
aaa
or
ret
dec
and
test
lods
es
jne
and
jl
pushf
shlb
inc
sub
ljmp
cs
stos
pop
insl
test
stos
cmpb
adcb
lret
sub
mov
in
cld
xchg
pop
cli
or
leave
cld
clc
ja
cmp
dec
inc
fsubr
add
loope
jb
xchg
daa
and
push
pop
mov
test
std
loope
dec
arpl
or
pop
or
mov
shll
inc
fldenv
punpcklbw
rorb
xchg
shll
push
jo
loope
cld
in
daa
mov
sub
xlat
pop
movsl
rcrb
xchg
std
jno
mov
xchg
fcoms
cmp
push
std
xor
inc
dec
pop
inc
cmp
leave
xor
push
dec
cs
or
sub
das
xchg
or
push
decl
scas
mov
dec
or
inc
mov
loop
js
mov
xchg
mov
dec
fwait
or
cmc
into
ds
mov
repz
cmp
jle
outsl
lcall
ss
sbb
incl
sub
pop
pusha
mov
jo
and
jge
pop
mov
rolb
cwtl
loope,pn
lods
inc
push
mov
sub
mov
or
push
lea
sbb
or
ss
std
or
inc
insb
sbb
test
fstl
adc
xchg
jbe
jnp
add
or
test
dec
and
daa
xchg
mov
aaa
push
pop
add
movsb
loop
push
subb
scas
dec
xor
std
roll
mov
loopne
insb
xchg
lods
addr16
ss
test
add
divb
adc
push
not
adc
jg
in
aam
add
out
ds
push
sbb
push
jmp
sub
and
mov
add
jne
icebp
pop
sbb
in
aaa
push
dec
pop
fiaddl
jmp
dec
inc
dec
xlat
ret
add
push
and
rorl
jae
add
hlt
je
js
xchg
fistl
loop
pop
je
ret
sbb
mov
push
cmc
divl
sbb
mov
xchg
sub
inc
add
or
dec
add
arpl
sub
inc
push
mov
or
cmc
xchg
or
jmp
add
fcom
test
pop
add
in
jl
xor
add
mov
mov
cmp
jge
mov
mov
mov
cwtl
test
bound
sub
int3
adc
rorb
cmpsl
scas
imul
loopne
cmp
aas
adc
cmp
mov
test
movb
or
cmp
or
add
add
dec
scas
aas
jecxz
push
enter
pop
movsl
inc
nop
or
insb
xor
pop
call
imul
rol
test
shr
xor
inc
and
mov
data16
shll
cmp
add
and
mov
cmp
iret
inc
push
push
add
push
xor
mov
iret
cmp
xchg
mov
mov
lds
mov
fwait
push
repz
sbb
ja
pop
shlb
int
ss
cmp
bnd
scas
sbb
sub
xor
add
and
repnz
push
pop
imul
add
mov
dec
in
sbbb
add
xchg
sbb
push
pop
das
add
outsb
sarb
mov
movb
cmp
rclb
push
and
add
leave
enter
test
lods
mov
dec
adc
aam
pop
xor
cmp
or
pop
mov
mov
divb
or
mov
testb
movsb
xchg
cmc
loope
incl
hlt
idivl
xchg
aad
insb
lock
dec
xor
loop
repz
cli
daa
dec
insl
clc
pop
jne
dec
lock
std
push
mov
mov
lds
pop
ffree
js
aas
or
enter
int3
jmp
decl
push
insb
movsb
cmp
call
loopne
xor
xchg
cmc
test
fs
mov
add
mov
xor
ljmp
sbb
scas
jge
mov
stc
sbb
mov
aam
jno
call
imul
push
xor
adc
xor
and
sbb
sub
jb
xchg
push
pop
pop
les
imul
addr16
add
repnz
in
push
dec
push
cmpxchg
jge
xrelease
dec
fdivrs
xchg
fbld
push
push
sti
sub
pushf
jb
imul
cmpsb
xor
xor
pop
sub
clc
imul
pushf
hlt
cmpl
adc
or
sbb
xor
mov
jmp
inc
movsb
pop
shrl
jbe
jmp
pop
nop
push
push
jmp
mov
lahf
fs
mov
pop
push
mov
pop
lock
ror
sbb
and
mov
mov
notb
jl
or
xadd
push
ja
iret
and
adc
mov
mov
cmp
int3
mov
ljmp
mov
fsubs
sbb
imul
xor
dec
sbb
lea
sarb
pushf
sub
inc
scas
cli
adc
movsb
outsb
xchg
mov
adc
rorl
xchg
push
mov
sbb
jmp
jo
add
pop
mov
dec
pop
push
lea
jns
adc
dec
sbb
jmp
cmp
test
or
inc
dec
dec
add
rcrl
sbb
xchg
clc
inc
dec
mov
cwtl
mov
lds
and
sub
lahf
mov
and
ret
xchg
or
xchg
adc
push
loopne
adcl
in
mov
mov
mov
sbb
or
inc
sbb
jmp
or
xchg
inc
clc
or
inc
push
add
dec
or
inc
cwtl
ss
and
stos
add
mov
mov
push
cwtl
shlb
dec
xor
pop
movsb
push
je
push
test
fistpl
lea
inc
inc
aad
insb
addb
xchg
add
pop
stc
mov
in
adc
mov
mov
xor
stos
jne
ja
jp
adc
xor
sbb
mov
add
xor
negl
push
imul
push
idivl
bound
sub
inc
add
mov
adc
xchg
or
cld
sub
shr
icebp
mov
mov
pop
cmp
xor
cmp
push
pop
stc
dec
inc
nop
dec
pop
sbbl
jo
jne
cltd
ja
in
jne
dec
repnz
jge
das
enter
cs
out
cmp
push
mov
test
mov
dec
jo
jnp
or
loop
out
or
add
pop
adcb
aaa
push
jb
push
or
clc
dec
add
xchg
ja
push
mov
mov
cmpl
ss
dec
pop
je
test
pushf
addl
movsb
mov
add
mov
inc
or
inc
pushf
popa
out
sahf
cmpb
adc
sub
sub
es
add
shl
jle
xchg
loopne
mov
nop
loopne
das
shrl
sub
and
xchg
and
sbb
mov
and
pusha
rolb
mov
jo
adc
sahf
stos
jmp
jge
je
sbb
cmpl
jne
jne
mov
jge
movb
jne
mov
cmc
jge
imul
adc
inc
push
lock
pop
dec
inc
mov
push
inc
dec
cmp
xor
incl
jo
or
mov
hlt
and
loope
xchg
mov
adc
test
insl
into
test
cltd
imul
enter
push
xchg
sbb
adc
stc
das
lods
insb
mov
xchg
ss
scas
xorl
add
cmp
sbb
aas
inc
ljmp
nop
cltd
or
push
in
loop
or
loopne
push
lock
lock
mov
jne
sbb
orl
mov
sbb
and
add
xchg
ss
add
and
and
mov
xchg
jmp
and
jp
shlb
sub
add
in
add
data16
fimull
push
push
cmc
aad
or
sbb
jne
inc
insl
jns
fnstcw
add
push
xchg
pop
pop
fs
cmp
sbb
fwait
pop
cmp
sti
add
fs
xchg
inc
shlb
push
push
faddl
fcoms
and
sub
adc
iret
sbb
nop
inc
cmpl
dec
inc
aad
adc
or
dec
fwait
out
aas
adc
sti
je
xchg
xor
mull
je
loopne
push
cltd
lods
or
cwtl
nop
adcl
lahf
mov
scas
xchg
arpl
xor
adc
mov
adc
iret
adc
mov
or
popa
and
mov
mov
mov
adc
mov
dec
xchg
lea
das
lret
addb
aam
lds
inc
jns
lods
loope
or
push
pop
cmpl
mov
xchg
xchg
cmp
add
sbb
lods
addr16
xor
sub
push
pop
dec
xor
adc
xchg
xor
btr
jl
and
iret
dec
add
xor
pop
cmpsl
xchg
and
dec
add
xchg
and
fstpl
mov
dec
movsb
or
inc
xchg
inc
dec
inc
and
nop
mov
enter
inc
aad
pop
shl
adc
iret
adc
scas
lahf
add
mov
cmp
cmp
push
clc
mov
inc
push
shll
inc
and
dec
je
adc
mov
lcall
filds
popa
mov
jno
imul
xchg
sub
aaa
add
leave
mov
mov
scas
iret
mov
push
adc
test
sub
lods
into
lret
xor
repnz
int3
sbb
pop
or
adc
in
in
push
jbe
push
out
push
and
sbb
cmpsl
push
fwait
lods
dec
into
pop
adcb
movsl
or
push
fcoml
pop
pop
dec
adc
pusha
imul
iret
mov
lods
sahf
hlt
orb
pop
jns
sub
mov
pusha
mov
mov
adc
jo
insb
adc
push
outsb
or
adc
jl
adc
cmp
cmpsl
adc
scas
cmp
in
add
xchg
mov
adc
add
sarb
cmpsb
xorl
leave
rcpps
pop
and
xchg
xchg
adc
add
add
mov
arpl
xorb
push
mov
add
lea
lcall
or
fnstcw
dec
popf
xchg
dec
push
mov
cltd
sub
fdivs
movsl
iret
sub
pop
push
popl
or
stc
xor
sub
imul
mov
mov
or
pushf
or
xchg
xchg
xchg
push
out
lock
or
in
shrb
and
ljmp
ret
xor
movsl
push
lds
insb
or
sub
mov
sbb
divl
mov
sbb
cmpsb
add
cmp
and
rclb
dec
pop
pushf
adc
cld
mov
inc
jo
xorb
cmp
adc
lahf
incl
pop
test
stos
push
stos
mov
adc
pop
ja
pop
and
adc
add
ret
add
sar
fimull
stos
sbb
add
mov
sbb
inc
sbb
or
jg
mov
dec
sub
push
and
xor
inc
cmp
mov
sub
cwtl
jp
fs
mov
adc
sarl
loopne
adc
fisubs
loope
pop
cmp
clc
mov
roll
add
add
sti
icebp
notb
adc
jo
lods
push
mov
cmp
push
adcb
int
call
xor
jmp
jno
les
jge
or
dec
arpl
jne
jbe
addl
fsts
push
mov
or
pop
in
loopne
mov
std
sbb
cmp
ljmp
and
es
mov
or
mov
jae
addb
xchg
push
mov
mov
pop
fcomps
or
mov
repnz
cwtl
sub
loop
in
les
scas
aas
ret
movsl
shlb
xor
mov
imulb
enter
js
push
pop
sbb
mov
shll
push
outsb
xchg
or
pop
movsb
inc
pop
xchg
lock
sub
sbb
pop
inc
cwtl
sub
push
test
mov
xor
mov
ss
in
insb
add
or
adc
movzwl
add
sub
add
imulb
call
fldt
stos
fadds
inc
push
inc
sub
loopne
fiadds
xlat
adc
dec
adc
pop
sub
out
das
xchg
mulb
jp
add
cld
sbb
bound
and
adc
dec
scas
dec
lea
test
adc
and
add
adc
movl
or
push
add
sub
repnz
add
inc
and
clc
inc
mov
add
fstpl
adc
or
adc
and
pushaw
jmp
movl
xor
adc
pusha
or
movsb
push
cmpsl
push
scas
push
inc
xchg
xchg
push
pop
inc
addr16
cwtl
clc
adc
dec
ret
push
jmp
adc
movsb
mov
and
cwtl
mov
jbe
movsb
and
sbb
cmp
mov
imul
dec
adc
dec
cwtl
inc
sub
mov
push
sbb
inc
ret
xor
xchg
sub
mov
xchg
jo
movsb
sahf
sub
movsl
push
stos
cwtl
pcmpgtw
add
xchg
ds
dec
xchg
add
out
mov
and
mov
push
xor
inc
push
pop
and
pushf
sbbl
push
test
and
mov
sbb
mov
adc
cmpsl
push
aaa
pop
pop
sahf
dec
insb
sbb
and
pop
cmc
loope
xor
or
lea
cmpsb
gs
push
xchg
mov
jle
push
out
lea
add
inc
xor
clc
push
lret
mov
and
xor
xor
dec
add
xchg
inc
and
xchg
test
mov
popa
push
andl
add
and
and
add
sub
xor
mov
pop
sbb
sbb
loope
mov
xchg
xorb
and
cmp
push
fimull
and
push
pop
enter
ret
adc
or
adc
pusha
adc
mov
and
mov
xchg
push
adc
push
aad
mov
es
testb
sub
cmp
subb
scas
pop
in
mov
inc
inc
dec
cli
or
imul
and
pop
xchg
sub
sarb
aam
aam
add
sti
pcmpgtb
movl
sbb
movl
int3
int3
nop
out
pusha
test
mov
add
jno
das
or
mov
lods
mov
and
and
and
mov
or
stc
xor
xchg
ja
cmp
addr16
xor
fsubrl
jne
xor
cmc
xchg
mov
dec
popw
or
or
pusha
pushf
inc
pop
sub
mov
inc
push
or
push
or
push
std
pop
mov
lock
and
test
outsb
pushf
test
adc
pop
and
roll
adc
ret
push
imul
cmp
and
cmc
outsb
ret
xor
adc
sub
add
adcb
adc
mov
inc
gs
push
mov
jmp
rolb
gs
jae
and
jno
cmpb
jp
ss
mov
mov
pop
popf
mov
lea
repnz
push
arpl
ret
push
cmp
andb
push
les
add
incl
mov
add
lods
cltd
xor
inc
jae
or
mulb
xchg
lods
lahf
cmp
inc
mov
sub
inc
daa
aaa
cmp
cltd
jne
mov
and
es
cwtl
pop
out
popa
add
inc
cmp
adcl
and
aas
mov
or
pusha
mov
lret
and
xchg
adc
mull
sbb
mov
out
sbb
add
or
pop
sbbb
lock
add
inc
mov
dec
int3
ret
and
je
je
xor
movsl
movsl
adc
daa
mov
add
inc
cmp
and
outsl
mov
aam
inc
cmp
and
mov
daa
es
sbb
popa
sbb
roll
pop
fldenv
dec
add
inc
js
and
in
pop
push
cmp
and
xor
or
fwait
and
dec
imul
lods
push
or
inc
addr16
dec
lea
sub
add
in
push
add
and
and
outsl
jl
shrb
xchg
lcall
lock
add
fsts
pop
xchg
cwtl
cmp
insl
jbe
in
pop
dec
nop
mov
mov
or
mov
jnp
xchg
mov
lock
lea
shlb
shl
daa
cmp
inc
gs
stc
adc
inc
loop
push
insl
push
or
inc
inc
test
inc
and
inc
push
and
sub
pop
sbb
out
insb
cmc
mov
add
daa
mov
cmp
jne
rol
mov
inc
test
ficomps
test
ret
mov
loopne
xchg
aas
sbb
leave
adc
add
push
inc
aam
cmp
adc
lds
test
mov
dec
xor
push
add
mov
aam
xchg
popa
movsl
sbb
cmpb
rclb
je
or
nop
pop
add
adc
in
pop
sbb
dec
xchg
add
setl
inc
int
sti
out
sub
and
mov
movb
ja
and
addb
jp
push
mov
je
jp
sub
outsb
xchg
outsl
mov
rcl
and
daa
arpl
test
roll
sub
mov
mov
test
sbb
fmuls
jno
or
sbb
cmpsl
jne
inc
clc
rcrl
das
and
mov
outsl
jnp
sbb
add
loope
mov
mov
aad
ja
jae
sub
stc
fcmovne
or
roll
mov
inc
leave
rcrb
push
insb
pop
mov
xlat
mov
push
addr16
pop
or
adc
xor
mov
mov
sub
jno,pt
ds
jne
pop
cld
xor
jns
jge
pop
cmp
mov
dec
sub
mov
mov
in
add
and
jae
adc
mov
sarb
addr16
push
cwtl
movl
rorl
inc
gs
cmp
jno
inc
aaa
pop
arpl
aas
sbb
lcall
mov
int3
dec
dec
js
push
push
dec
pop
xchg
int3
cwtl
add
add
sub
or
or
add
fisubl
adcb
dec
ja
mov
sbb
dec
cs
mov
nop
inc
mov
lea
les
xchg
mov
jb
dec
fsub
stc
ret
out
test
lds
cmpb
adc
adc
add
jns
adc
daa
dec
enter
rolb
sub
adc
sbb
clc
pop
cmp
adc
test
sub
jg
or
out
sbb
add
dec
and
jno
in
mov
lds
shlb
and
mov
loopne
dec
mov
iret
jle
insl
jnp
jns
push
push
add
adc
aas
aam
sub
push
adc
stos
jo
pop
xor
push
xchg
cli
xor
xor
mov
or
mov
cmc
or
fmul
and
mov
xchg
leave
and
push
ret
adc
mov
pop
jg
push
inc
loopne
dec
das
xor
cmp
adc
rolb
dec
cltd
fadds
push
xor
adc
mov
das
test
add
or
test
fsubs
loope
push
andb
nop
or
pushf
out
fwait
jo
pop
inc
lcall
inc
mov
xchg
inc
add
inc
add
cwtl
mov
nop
sbb
and
dec
xor
mov
push
dec
outsb
push
arpl
hlt
push
pop
dec
in
xlat
sarl
xchg
sub
out
jns
pop
roll
dec
mov
popl
or
lods
adc
pop
mov
testl
mov
and
or
sub
jbe
in
add
and
in
mov
pop
xor
loopne
pop
and
and
sahf
sbb
pop
data16
test
xchg
mov
mov
mov
fs
shl
add
addl
roll
shr
insl
xchg
mov
fistl
mov
pop
mov
test
pop
enter
jae
mov
and
dec
mov
pop
test
imul
xor
aam
or
dec
clc
dec
push
js
hlt
xchg
out
rorb
mov
and
and
pop
adc
daa
pop
and
fs
or
dec
dec
mov
movsb
or
jne
mov
pushl
xchg
add
adc
mov
adc
fs
subl
adc
or
xchg
arpl
pop
mov
mov
hlt
inc
add
jne
sbb
and
push
in
xor
cmpsb
or
push
and
xor
cmpb
call
lahf
adc
fwait
pusha
orl
cmp
insb
cmp
add
icebp
nopl
pop
ret
mov
pusha
add
inc
daa
pop
int3
push
push
or
fnclex
aaa
xor
sbb
int3
or
out
sub
dec
dec
or
ss
pop
das
pop
jmp
cmp
and
adc
call
sbb
sbb
xchg
sub
repnz
outsb
inc
fsubs
das
shll
popa
aad
mov
jle
mov
rolb
add
in
aaa
mov
dec
sbb
aaa
inc
shlb
pop
aam
sub
mov
hlt
and
add
cmp
fs
jge
out
mov
pop
ror
adc
xchg
shrb
cmp
mov
cmp
add
push
out
xlat
lret
mov
jmp
sub
jno
adc
xchg
cmc
mov
cs
les
mov
stos
adc
enter
push
pop
nop
push
sbb
mov
push
pop
adc
fbld
and
mov
inc
inc
sbb
mov
or
cmpsl
pop
loopne
fisubrl
push
mov
mov
push
nop
cmp
add
stos
and
orb
sbb
mov
cmpl
inc
sub
mov
ffreep
sbb
xchg
jecxz
push
fists
and
mov
mov
lods
sub
pop
mov
or
jl
pop
pop
lods
cltd
adc
leave
and
sbb
les
inc
or
ret
sbb
ljmp
xor
es
or
sub
ret
jmp
sti
repz
xchg
push
pop
jns
or
movsb
dec
push
pop
pop
xor
pushf
outsl
cmp
mov
and
xchg
test
nop
push
or
ljmp
adcb
fldenv
and
dec
add
test
cmp
stos
add
add
cmp
pop
mov
loop
rol
test
or
mov
pop
pop
mov
movsb
jg
dec
jo
push
dec
das
xor
jmp
in
gs
mov
or
or
cmp
push
xchg
out
xchg
pusha
jg
mov
shlb
adc
ja
add
pop
dec
mov
inc
pop
sbb
xchg
in
out
or
xchg
xlat
daa
cmpsl
roll
mov
jp
xchg
popl
jo
ret
out
ret
frstor
test
sub
and
daa
sub
and
sbb
gs
cmp
aaa
cmp
sub
push
lock
pop
insb
dec
mov
addr16
aaa
shr
loopne
mov
outsl
dec
add
out
xchg
fwait
jmp
adc
ret
and
call
adc
xchg
leave
les
inc
jmp
dec
cmp
xchg
or
mov
pop
xor
subl
mov
push
daa
icebp
and
and
ds
dec
sbb
pop
push
push
dec
adc
xchg
das
insl
adc
sbb
push
sbb
xor
sbb
add
test
fucom
sbb
cmp
mov
or
cmp
push
or
inc
pop
or
test
sub
int3
decl
fdivp
push
jno
add
and
arpl
insl
mov
outsb
and
xchg
xchg
push
dec
push
dec
cmpb
in
pusha
or
fiaddl
jo
or
movsl
or
add
nop
add
data16
inc
outsl
lahf
and
pop
add
imul
add
inc
outsb
mov
movsb
mov
xor
int3
sub
shlb
cs
or
push
or
jmp
xor
sbb
dec
imul
mov
dec
shlb
movsb
add
xor
les
mov
adc
and
cmc
lahf
pop
aas
jo
push
fs
dec
or
or
in
addr16
mov
add
xor
or
pop
or
pushf
xor
stos
lods
sub
movsl
or
pushf
or
dec
and
xor
mov
shrb
dec
mov
or
xor
sahf
insl
lea
movsb
sbb
add
fidivl
enter
push
loop
sub
xchg
push
pop
xor
fsubr
lret
adc
sub
adc
or
cmp
add
push
mov
jb
pop
shlb
dec
xchg
or
cmpb
cmp
bound
xor
and
push
sbb
jmp
push
pop
push
mov
roll
inc
push
sub
aas
scas
daa
mov
daa
inc
ret
push
dec
add
or
cmpl
shlb
dec
bound
add
lea
xorb
jp
inc
mov
cmpb
add
pop
mov
jbe
pop
mov
jl
xchg
cmc
rolb
mov
dec
mov
and
arpl
xor
imul
out
cmp
and
and
fldt
mov
shrl
enter
int3
stos
push
add
shr
rorl
mov
and
aaa
inc
xor
std
scas
imul
cmpsb
mov
loope
fisubrs
cmp
push
enter
adc
addr16
fs
inc
sbb
jno
push
push
jle
mov
add
test
push
or
testb
adc
mov
adc
add
jns
negl
daa
mov
jbe
inc
push
adc
jns
out
dec
pop
sbbb
mov
pop
add
loope
add
ret
and
nopl
sub
and
rcrb
jae
mov
pop
mov
adc
jb
dec
jmp
mov
fisttpll
xor
xchg
push
sub
add
sub
clc
outsl
dec
adc
fildl
fdivs
ss
jmp
fsubs
in
pop
jge
or
mov
dec
adc
and
shrl
adc
sub
and
dec
decb
shr
push
lret
and
lea
and
call
push
cwtl
add
push
cmp
outsl
pop
or
xchg
cwtl
jo
cmp
cmp
rolb
shrl
mov
cmp
js
sbb
fcoms
xchg
sub
adc
pop
or
pop
mov
inc
or
pop
sub
rolb
dec
stc
je
aaa
mov
adc
sub
aas
movsl
cmp
shll
addb
dec
mov
out
inc
daa
lret
aas
test
mov
sub
inc
fiaddl
sbb
mov
cld
jb
and
mov
loope
in
jg
add
inc
jno
jbe
jmp
add
lea
outsl
aaa
mov
lock
cmp
mov
add
pop
dec
fidivs
aaa
jl
dec
pop
sbbb
add
add
jo
xor
sbb
mov
nop
loopne
ja
inc
adc
jle
mov
test
lock
loopne
shlb
xchg
pop
mov
sti
add
popf
or
jo
stos
add
and
and
ds
cli
xor
rcl
addr16
sbbl
add
adc
nop
xor
je
bound
sub
outsb
cwtl
dec
pop
push
push
or
adc
push
out
sbb
mov
das
jecxz
pusha
xchg
rcrl
movsb
xor
les
jne
mov
mov
push
mov
jecxz
jmp
fucom
movsl
push
xchg
jmp
addl
mov
stos
sbb
pusha
jle
add
cmp
add
push
jmp
mov
pop
jnp
adc
mov
ret
aad
scas
jle
mov
insb
sbb
or
pushf
adc
pop
dec
mov
dec
pop
dec
mov
dec
shll
mov
cmp
mov
adc
sbb
rolb
sub
inc
lahf
add
mov
mov
stos
push
or
jne
mov
cmp
hlt
jae
add
mov
and
adcb
call
sbb
gs
in
adc
outsb
adc
test
test
sbb
adc
int
das
dec
movsl
inc
rol
insl
icebp
jo
clc
inc
js
jg
subb
out
or
xor
arpl
nop
jne
add
dec
xor
mov
mov
add
or
idivb
xchg
jo
and
sahf
dec
divb
xor
xor
movsl
jnp
std
add
push
or
inc
xchg
adc
aas
or
addb
cmp
add
dec
filds
lret
sub
bound
and
sub
rolb
mov
push
lock
test
inc
push
or
mov
jge
lods
and
movsb
lock
inc
pop
jns
cmpl
xor
jecxz
faddp
pop
sbb
outsl
imul
adc
rol
and
cmp
movsb
negl
scas
bound
push
jne
or
enter
lahf
and
add
inc
je
out
or
inc
std
mov
pusha
into
xor
je
add
int
add
jmp
les
imulb
push
mov
xchg
movsb
push
test
lods
loope
xor
movsl
add
pop
cmpsl
add
shlb
cmp
aaa
cmp
lock
xchg
cmpb
push
or
negb
cmp
xchg
or
push
jnp
add
xchg
mov
pop
fcoml
push
and
and
pushf
and
ja
iret
nop
push
cmp
xor
adc
sbb
push
ljmp
pop
adc
xlat
call
mov
mov
xchg
jmp
xlat
dec
and
adc
int3
idivl
cmpb
lds
or
faddl
push
sbb
movsl
shlb
inc
lret
out
sbb
mov
movsb
in
aas
rolb
xchg
cmpsb
fmull
push
inc
dec
and
push
sarb
dec
xchg
cmp
ss
cmp
hlt
xor
xor
inc
and
push
rolb
or
mov
cmp
adc
rcrb
add
js
test
and
xor
and
xchg
jmp
pop
jmp
sub
cmpsb
icebp
andb
cmpb
adc
cmpb
or
cwtl
fs
push
fadds
arpl
push
das
inc
insl
sbb
aaa
iret
je
ret
push
inc
xor
rcl
mov
mov
pop
pop
mov
stos
cmp
adc
lds
icebp
sub
repnz
ret
mov
data16
mov
aas
stos
add
push
or
lahf
jae
or
or
push
pop
inc
or
dec
addr16
mov
stos
es
mov
and
inc
shlb
dec
or
cltd
nop
push
aas
mov
test
rorb
jne
aas
adc
add
ret
xchg
push
int3
inc
or
iret
mov
test
adc
jno
add
je
loope
popf
jo
mov
sub
scas
cwtl
ret
ret
fmuls
and
push
in
cmpb
shl
aam
sub
mov
rcl
xchg
or
enter
and
push
fmul
add
in
dec
aam
push
add
pusha
popa
add
loop
enter
loopne
faddl
add
mov
test
roll
jno
mov
jne
jb
sbb
das
mov
add
popa
outsl
or
sbb
inc
dec
sbb
outsl
std
dec
inc
dec
dec
pop
inc
add
sti
xchg
testb
push
dec
push
and
or
lcall
test
shlb
lcall
xchg
nop
pop
cmpb
sbb
mov
inc
popa
roll
lock
inc
and
dec
ds
out
lea
or
adcb
pushl
shl
pinsrw
dec
int
mov
add
rol
push
sbb
imul
or
lods
pop
cltd
scas
dec
sbb
or
dec
enter
lcall
mov
inc
fwait
push
shrb
cltd
adc
movsb
fucomi
mov
lock
add
add
push
test
pop
sub
mov
clc
jne
sub
cs
dec
out
add
add
repz
popf
add
pop
adc
xchg
test
shll
mov
incb
lea
adc
dec
inc
xchg
fs
jmp
loopne
jg
js
add
add
and
dec
or
lds
add
pop
test
push
loope
dec
dec
out
insl
imul
push
mov
or
int3
pop
sbb
add
add
and
mov
ret
and
test
cmp
dec
arpl
add
pusha
mov
fs
imul
mov
sbb
or
movsb
xlat
data16
push
sysexit
insb
jb
push
xchg
pop
xor
das
inc
loopne
sbb
bsr
fidivs
add
xchg
rcll
or
pop
mov
push
xor
pop
fsubs
call
clc
push
fcmovne
jg
movsb
pop
and
adc
or
les
adc
xor
mov
les
xchg
push
pusha
push
push
mov
scas
add
cmp
push
loopne
pop
dec
shrb
push
leave
or
sub
stc
sub
or
inc
inc
add
xor
daa
add
insl
pop
test
scas
sbb
and
push
push
les
hlt
mov
data16
adc
push
add
cmp
push
fsubrl
pop
movsl
jno
add
popa
lea
in
push
lock
lock
nop
bswap
mov
enter
dec
jmp
xor
or
jmp
push
mov
mov
repnz
lods
push
test
mov
add
inc
mov
out
xchg
and
xchg
test
bound
inc
js
xor
xchg
pop
mov
sub
mov
push
and
and
inc
cmc
je
pushf
mov
dec
xor
inc
jle
cwtl
mov
pop
and
dec
int
xchg
stos
sbb
and
inc
cmp
push
xor
jo
xchg
movsb
bound
pop
adc
xchg
inc
adc
adc
les
fmull
pop
pop
ss
into
add
fistps
mov
popa
sub
or
inc
xchg
bound
pop
scas
imul
and
xchg
mov
sahf
mov
adc
xchg
sbb
jbe
add
xchg
push
pop
pop
pop
push
imul
or
jne
call
jle
pop
mov
cmpl
scas
pop
pop
int3
andb
adc
pop
insl
dec
push
mov
jl
mov
movsl
pop
xchg
nop
leave
adc
jmp
pop
xorb
xor
mov
mov
xchg
rorb
push
mov
push
sbb
xchg
shlb
add
pop
call
fsubr
push
sbb
adc
pop
ret
adc
jae
push
insb
adc
push
test
mov
push
sub
mov
push
das
inc
pop
stos
andb
push
test
bound
sbb
nop
pop
adc
repnz
and
xor
pop
sbb
addr16
inc
inc
adc
fimuls
sub
dec
adc
and
add
or
mov
mov
add
stos
sbbb
push
ds
sbb
and
fs
adc
cmc
mov
and
push
enter
sub
cmp
mov
or
sbb
test
nop
clc
jae
jp
cwtl
inc
or
jno
das
or
sub
adc
add
mov
sbb
clc
int
sub
js
fcmovu
or
inc
cmp
push
or
adc
sbb
mov
mov
cmpsl
push
sbb
push
adc
daa
inc
push
cmpl
fidivrl
pop
push
mov
add
outsl
lcall
jge
xchg
inc
dec
nop
mov
add
daa
push
cltd
sub
push
stos
xchg
mov
rclb
add
inc
aad
shlb
les
sub
ljmp
sbb
xor
gs
and
and
mov
shlb
adc
adc
add
add
cmp
jmp
add
subl
sub
rcll
jno
mov
popa
sub
sbbl
adc
fimull
jl
sbb
lret
shl
push
xchg
je
mov
cld
punpcklbw
jl
out
dec
push
cld
movsb
or
arpl
movsb
loopne
or
mov
push
push
inc
adc
sarb
add
xor
mov
sbb
sub
mov
jmp
xchg
push
shlb
addr16
sbb
movl
ret
mov
cmpb
add
push
js
aaa
adc
pop
push
popf
ja
pop
leave
popa
mov
pushf
cmp
xchg
sbb
xor
mov
cmp
sahf
xor
rolb
jge
xchg
jo
pop
or
xchg
not
adc
es
daa
mov
jmp
fildl
cwtl
push
mov
inc
sti
and
mov
mov
mov
adcl
rcll
dec
shll
pop
inc
adcb
fbld
nop
mov
in
mov
push
adc
fldt
xchg
push
xchg
cli
inc
cmp
or
pusha
pop
out
notl
and
cmp
pop
test
addr16
imul
mov
or
inc
push
push
inc
dec
mov
xor
imul
fs
push
les
jg
inc
or
sahf
imul
adc
cmp
and
shll
inc
push
or
cmp
subb
dec
bound
lods
mov
adcb
and
and
xor
clc
lea
add
pop
adc
stos
ror
popf
sarb
addl
push
mov
push
loopne
dec
pusha
xchg
fs
xchg
ret
das
cld
inc
pop
jmp
shlb
outsb
dec
scas
cmpsl
sub
add
aas
fs
cmpsb
cmp
addl
adc
mov
cltd
and
sub
stos
fnstcw
out
imul
in
inc
ss
jp
arpl
sub
shrb
push
jecxz
adc
and
push
mov
push
pop
push
aaa
adc
mov
pop
fildl
push
das
pop
mov
shr
hlt
cmc
add
or
cwtl
pushf
add
call
add
dec
xchg
sub
fld1
dec
inc
and
dec
adc
insl
in
add
or
adc
nop
ret
mov
cld
insb
aaa
inc
adcb
xchg
adc
arpl
fidivs
sbb
addr16
loope
orb
push
pusha
push
jo
and
add
outsl
adc
leave
out
or
insl
pop
dec
lock
add
aaa
mov
inc
mov
push
xchg
jo
negl
out
or
and
fcompl
pop
push
jp
or
outsb
das
xchg
or
add
ja
jmp
ret
mov
daa
dec
inc
add
dec
mov
push
and
ja
daa
push
cwtl
pusha
or
cmovno
add
pop
lods
aam
mov
add
jno
ljmp
inc
adc
push
or
mov
pop
add
push
xlat
and
sub
subb
fcomp
mov
sbb
arpl
lcall
or
fiaddl
add
or
inc
mov
mov
clc
loopne
bound
test
push
out
sbb
cmp
push
xchg
jecxz
add
mov
stos
add
test
fs
stos
jnp
mov
mov
pop
lret
imul
je
fwait
sti
or
push
cmp
scas
arpl
cmp
addr16
popa
or
jmp
enter
push
mov
or
pop
mov
push
adc
sti
out
nop
jae
cwtl
out
or
subb
and
xor
adc
mov
inc
mov
pop
sbb
inc
pop
pop
jbe
adc
lar
adcb
adc
mov
jo
aaa
mov
push
sub
pshufw
or
mov
call
jbe
popf
and
dec
ret
cmpsb
lret
or
movsl
sbb
mov
outsl
push
dec
push
punpckhdq
push
jo
mov
push
aas
int
jo
ljmp
sub
and
inc
aaa
stos
jg
jmp
dec
xchg
lea
insb
sbb
outsb
xchg
mov
stc
sarl
push
adc
sub
push
cmp
ds
or
aas
mov
xor
or
mov
arpl
hlt
dec
add
push
xor
fcomi
fidivrs
push
and
mov
add
sub
cmp
push
shlb
inc
out
and
dec
repz
xor
pop
insl
or
ret
jmp
orl
gs
test
aaa
lock
sbb
movsl
add
add
push
inc
jecxz
add
sti
push
or
adcb
imul
fcoml
loopne
add
je
movsb
jns
inc
pop
inc
and
les
scas
inc
rcll
call
fucom
cmpsb
test
or
inc
lods
mov
push
stc
xor
sub
push
adc
aad
stos
inc
and
jmp
jne
insb
push
dec
jbe
loope
scas
jle
std
das
sbb
xor
or
or
scas
data16
push
test
push
mov
pusha
mov
fwait
int
aad
fdivrl
movsb
out
dec
shlb
add
je
jg
xlat
pop
cmp
dec
push
or
mov
mov
xchg
pusha
aam
push
add
xor
mov
inc
sbb
mov
sub
push
push
dec
je
jl
mov
ljmp
scas
or
sub
cmc
push
inc
imul
leave
inc
fs
aaa
pop
int
mov
xor
dec
shlb
aas
loopne
pop
pop
and
and
call
push
std
ss
cmp
sbb
pop
inc
or
popa
adc
cltd
divl
dec
lds
adc
fimuls
pop
inc
push
mov
xchg
mov
cmp
jno
js
or
push
or
into
mov
push
out
jnp
xor
adc
inc
das
mov
cmovno
ljmp
jmp
and
and
int3
inc
inc
mov
and
js
dec
or
negl
pop
ss
insl
dec
and
aam
gs
lret
in
mov
add
add
in
push
sub
pusha
scas
frstor
test
mov
adc
or
addb
push
inc
jp
push
adc
scas
scas
ret
decl
add
pop
push
rcll
psubb
jge
mov
push
scas
push
sbb
mov
inc
mov
xchg
mov
in
loopne
xchg
leave
insb
outsl
adcl
jge
inc
mov
push
add
sbb
int
add
daa
add
call
dec
inc
add
dec
add
sbb
sub
xor
adc
mov
and
pop
jg
je
out
adc
push
sub
mov
popa
inc
dec
dec
out
dec
add
mov
movsb
push
dec
cmp
add
xlat
cs
out
mov
add
add
addl
lcall
popa
and
dec
push
push
or
cmp
lods
sbb
push
push
ss
pop
fstps
pop
xor
or
pop
incl
push
fs
xor
sub
and
mov
mov
mov
mov
add
push
lahf
dec
cmp
repnz
pop
xor
mov
repz
js
pop
aas
clc
int
jns
push
push
mov
bnd
shrl
notb
test
jnp
hlt
lods
insb
mov
lods
cmp
inc
lods
adc
or
stc
ja
and
mov
test
repz
mov
mov
add
sub
movsb
sbb
and
xor
pop
daa
xor
hlt
pushf
push
cmpsl
sub
dec
xchg
dec
xor
or
lahf
dec
pusha
add
or
test
adc
jmp
repnz
add
in
add
or
cmp
xor
testb
mov
or
jb
js
test
push
add
pop
add
mov
mov
add
cmpsl
or
and
push
and
mov
lea
inc
mov
or
push
mov
stos
or
rolb
and
aas
push
mov
xchg
cs
lock
fldcw
adc
mov
push
pop
pushl
popa
cli
add
dec
add
adc
and
les
and
insb
andl
add
mov
lret
sbb
je
sbb
push
or
repz
push
xchg
cmpsb
or
add
or
adc
mov
pop
mov
pop
inc
int
or
pop
cmpsl
add
jne
sbb
or
inc
jne
dec
mov
roll
xor
add
inc
cli
adc
xchg
adc
movsl
lds
pop
scas
inc
or
push
adc
pusha
movsb
pop
or
lcall
adc
pushf
xor
in
inc
pop
xor
xchg
xchg
scas
sbb
xchg
push
add
xor
and
pop
jp
pop
pop
out
inc
lea
fsubrs
push
js
cmp
hlt
mov
inc
inc
adc
andl
xor
xchg
sbb
cli
fcoms
sub
push
pop
test
push
sbb
add
sbb
inc
xor
add
cli
addl
add
sub
shl
addb
mov
mov
inc
sub
mov
xor
sub
sbb
push
test
ret
mov
loope
and
cmc
add
or
add
dec
shlb
push
dec
or
jge
xchg
or
and
cmp
or
and
mov
shl
loop
dec
test
je
lcall
cmpsb
dec
xchg
repz
iret
mov
or
lds
cmp
or
add
mov
push
pop
mov
jg
lahf
xor
clc
jne
repz
inc
insl
jmp
sti
lods
mov
dec
insl
testl
mov
xchg
sahf
push
mov
pushf
outsl
nop
pop
and
push
in
cmp
sti
outsl
cmp
cld
push
lods
add
sahf
movsb
jl
out
mov
push
dec
into
push
push
pop
cli
pop
mov
nop
sbb
xor
shl
xor
pushf
icebp
jp
jmp
and
out
stos
mov
inc
rcr
sbb
roll
add
adcl
fs
fsubs
inc
add
loopne
mov
mov
call
adc
lea
inc
mov
aam
lods
mov
push
mov
movsl
inc
xchg
test
push
rorl
push
shrl
xchg
insl
add
pop
in
push
xor
int3
inc
cltd
mov
ja
push
or
sbb
or
sbb
jl
ja
pop
fstl
test
push
imul
pop
jo
push
das
nop
adc
jbe
or
add
dec
xchg
xor
popl
xchg
mov
mov
inc
cwtl
loopne
mov
inc
loopne
test
adc
lds
sti
dec
sbb
pop
popa
adc
leave
loopne
add
subb
mov
inc
popf
and
dec
push
sub
cmpsb
or
lods
and
enter
test
outsb
adc
popl
or
sub
or
gs
add
jecxz
pop
sub
mov
loopne
nop
pop
int3
xchg
push
dec
ja
push
xchg
push
inc
push
pop
pop
repnz
pop
insb
mov
mov
inc
int3
adc
fwait
int
cmp
push
push
mov
mov
lock
shrb
jnp
test
add
xchg
adc
incl
andb
pop
loopne
push
in
adc
popf
inc
xor
push
ficoms
cld
es
cli
push
or
xor
cs
nop
xchg
adcl
cmp
movsl
inc
je
pop
push
push
jge
pop
xor
push
sbb
add
jp
outsl
xchg
in
test
fsts
das
ficomps
or
sbb
lock
jp
loopne
inc
push
fsubrs
push
ja
xchg
mov
push
mov
js
xchg
inc
enter
pop
dec
adc
pop
shrb
in
into
sbb
mov
jnp
dec
sbb
imul
pop
add
or
push
int3
psubd
icebp
mov
pusha
push
or
test
and
add
and
and
fisttpll
add
inc
push
or
adc
adc
adc
orl
xor
sub
and
and
pop
push
adc
cltd
rolb
push
push
xchg
adc
cwtl
or
das
adc
test
inc
sub
dec
call
aad
out
stos
inc
aam
outsl
rcll
adc
push
xor
add
inc
xor
push
nop
sub
xor
push
mov
or
mov
push
sbb
in
jns
or
scas
in
add
xadd
mov
mul
or
pop
scas
add
xchg
adc
mov
mov
imul
jmp
mov
mov
mov
add
jno
movsl
add
and
adc
in
pop
clc
shrb
sbb
popa
mov
jge
mov
push
scas
push
fs
das
mov
sbb
dec
test
adc
adc
push
adc
adc
int
push
sbb
mov
mov
xchg
or
mov
add
daa
pusha
mov
daa
sub
orb
cmpb
jl
adc
push
sub
xchg
adc
or
push
and
imul
pop
or
mov
jge
push
lcall
paddd
sub
jnp
dec
lsl
in
mov
es
syscall
add
add
dec
rolb
testb
add
dec
sbb
or
test
or
dec
push
pusha
inc
enter
movsl
es
xchg
jnp
gs
sti
pop
in
or
lds
sub
scas
jbe
test
push
cmp
inc
jp
mov
ffree
and
stos
inc
sbb
movsb
fsubrs
jae
push
out
dec
imul
mov
push
jno
daa
push
inc
jl
pavgw
sbb
pop
ljmp
mov
mov
repz
sbb
cs
shll
pop
or
mov
xor
adc
xor
xor
test
jb
or
fwait
movsb
nop
jecxz
sbb
jns
add
cmp
shl
stos
xchg
sub
stos
or
mov
or
xchg
add
inc
push
nop
mov
inc
lock
cli
xchg
add
xor
sub
lcall
dec
out
jge
xchg
sub
push
dec
mov
mov
subl
xor
mov
lahf
xchg
daa
loop
sub
and
rcrw
adc
pop
push
sub
xor
xor
gs
cmp
mov
ss
and
inc
push
dec
push
dec
xor
cld
push
push
mov
dec
jmp
or
or
arpl
inc
jnp
add
inc
pop
das
aas
and
stos
push
lahf
dec
lahf
push
or
mov
cld
or
decl
pop
add
sbb
mov
sbb
in
out
mov
cmpsb
sbb
inc
sub
mov
cld
sub
stos
int
add
inc
add
pop
and
adc
jae
mov
xorl
push
cs
addb
jns
ret
addb
rcll
incl
mov
dec
in
or
jne
and
or
dec
cmp
xchg
or
rorb
pusha
lds
push
out
mov
out
mov
adc
push
and
test
push
xchg
rolb
imul
addl
pxor
jne
pop
mov
adc
ja
pop
or
fstpl
insl
insl
add
pop
mov
pop
int3
push
mov
push
fimuls
push
mov
add
push
push
add
out
add
mov
push
sub
push
clc
and
mov
xor
pop
push
xchg
inc
add
mov
pop
jb
or
sub
in
mov
push
xor
jmp
mov
repnz
dec
adc
mov
pop
movsb
test
push
xchg
mov
xor
pop
aas
pop
and
popa
punpckhwd
cmp
cmpsb
mov
add
mov
jns
and
xlat
jl
push
mov
cmp
xlat
aaa
mov
cmp
out
rolb
dec
nop
push
cmp
dec
mov
insb
xor
aas
jo
clc
pop
sbb
jle
test
pop
repz
pop
movsb
repz
int
js
dec
sub
xchg
aas
shlb
movsl
xchg
insl
movsl
xchg
dec
sar
andl
push
jp
push
xor
pop
push
xchg
cmp
pusha
aaa
push
sbb
inc
push
cmp
packuswb
jae
push
inc
das
pop
lret
jb
sub
pop
inc
xor
push
ret
push
sti
mov
adc
daa
pop
sbb
in
or
js
aam
fdivs
nop
adc
mov
out
pusha
test
aas
dec
push
push
xor
lret
aad
mov
iret
mov
pop
addr16
cmp
repz
cltd
gs
add
xor
cs
sub
cld
sbb
push
jbe
insb
popa
shlb
test
cld
daa
or
jl
inc
les
hlt
addr16
sbb
sub
push
pop
sbb
gs
or
push
cmp
scas
test
aad
clc
repnz
in
cltd
and
adc
jns
test
push
inc
cmp
jno
jb
and
xchg
movb
add
push
popa
or
dec
pop
movaps
mov
insb
ljmp
xor
lahf
and
mov
xchg
mov
out
and
xor
dec
push
leave
clc
xchg
cmpsl
pop
add
pop
adc
je
pop
mov
mov
iret
outsb
mov
rolb
jle
mov
cmc
add
add
clc
sbb
add
stos
sub
iret
imul
lret
jb
xchg
mov
mov
add
xchg
xlat
push
and
and
aaa
lods
mov
adc
xchg
push
cmp
mov
dec
add
ja
sub
popa
repnz
mov
lods
cmpb
xchg
call
add
xor
or
jae
dec
push
das
mov
mov
nopl
js
stos
jae
movsb
test
adc
or
sbb
and
cmp
lock
adc
jecxz
and
mov
or
or
mov
jmp
dec
cs
dec
and
fldenv
mov
in
jne
inc
dec
mov
out
push
loopne
aam
xchg
out
cmp
dec
or
dec
outsl
xchg
add
insb
push
loopne
push
nop
mov
mov
and
and
mov
dec
and
fs
iret
sbb
loopne
lahf
testb
inc
sbb
dec
es
and
sarb
ljmp
push
or
loopne
fcomps
loopne
enter
and
jbe
adc
or
xchg
mov
adc
pop
nop
mov
push
insl
imul
mov
enter
aam
arpl
dec
frstor
leave
shlb
rolb
xchg
dec
adc
dec
adc
or
inc
adc
clc
mov
jmp
sbb
rorl
imul
shl
cmc
pmulhuw
jmp
pop
jo
lock
fidivrl
add
sub
push
pusha
sub
es
push
adc
push
dec
or
mov
or
shlb
add
xchg
movsb
or
or
push
lea
cmpsl
dec
adc
out
loop
and
dec
xor
cwtl
cwtl
sub
les
inc
popf
fs
and
jns
lret
push
dec
pop
scas
jp
xlat
push
iret
aaa
push
adc
mov
stos
and
fdivrl
sbb
shlb
mov
xlat
add
das
fimull
and
and
xor
mov
jnp
sub
and
jl
sahf
shll
scas
adc
xorb
inc
fwait
push
shrl
push
rclb
pop
dec
nop
mov
loop
or
pop
or
xchg
mov
es
jle
imul
inc
xchg
jg
inc
push
mov
push
mov
das
dec
test
add
and
dec
or
add
cmp
mov
cmpsb
insb
jno
xor
or
imul
out
adc
inc
sbb
jns
in
pop
inc
mov
addb
or
bnd
hlt
inc
inc
imull
jae
sbb
cmp
or
xor
movups
inc
iret
and
aas
stos
dec
jo
mov
lds
adc
flds
pushf
or
ret
adc
test
xor
sbb
mov
loope
push
sbb
push
mov
orl
inc
xchg
push
sete
add
adc
mov
sub
adc
adc
push
or
movsl
push
lds
adc
inc
rcll
adc
or
ljmp
fwait
lea
add
sub
or
cmp
loope
add
push
sbb
xchg
sbb
popa
inc
dec
gs
fnstcw
mov
pushf
ret
sub
ljmp
adc
adc
add
pusha
leave
adc
xor
enter
mov
imul
pop
sbb
pop
mov
sbb
and
bound
popa
test
filds
jle
inc
and
cmp
arpl
push
mov
pop
xorb
push
and
adc
roll
out
push
out
mov
adc
fwait
push
lods
lahf
push
jb
aad
mov
test
xor
add
rorb
mov
outsb
inc
add
sti
sub
outsb
sbb
add
dec
inc
inc
add
outsb
lods
push
pop
outsl
mov
cmpl
xorl
or
xor
out
mov
mov
inc
bound
mov
int
cmpsl
sub
adc
jnp
pop
mov
mov
fwait
cmpb
or
jmp
neg
xchg
inc
mov
inc
mov
rorb
push
push
lock
cmp
decl
pop
mov
xor
mov
push
enter
push
xorl
and
ret
or
mov
sbb
orb
in
rorb
adc
jmp
in
ja
dec
push
jmp
cmpsb
mov
and
add
cld
mov
mov
cmp
push
adc
inc
push
and
mov
mov
mov
out
sbb
pop
lea
adc
call
and
xchg
jne
adc
xor
adc
clc
test
xchg
push
iret
push
jne
aaa
jl
xlat
rol
or
mov
dec
or
jo
test
pop
xlat
dec
jg
and
and
xor
sub
jne
inc
add
pop
or
inc
lea
sbb
shl
mov
pop
notb
inc
add
jnp
shrl
fistl
sub
adc
and
mov
or
jo
mov
pop
cltd
mov
fwait
cmpl
lcall
ret
sbb
jne
cs
mulb
orb
sub
fcmovnb
cmp
and
lahf
add
pop
in
xor
and
cmp
loop
rorb
inc
add
inc
sub
add
jne
out
inc
out
dec
inc
xchg
outsb
lock
sbb
add
adc
mov
xor
xchg
gs
mov
jecxz
mov
fldcw
lret
movsl
dec
sbb
lods
ret
jb
rcrl
mov
inc
mov
shl
mov
mov
fisubrs
test
mov
sbb
dec
jne
add
dec
or
pop
cmp
jbe
cmp
bound
andb
pop
rclb
push
fstpl
insb
and
incb
inc
push
push
push
or
xchg
xchg
inc
movsb
aaa
lods
mov
cmp
shrl
adc
mov
push
dec
ret
fsubs
shrb
or
and
lret
aam
and
cs
jp
jne
jge
es
add
and
fldl
and
add
sub
dec
shl
aas
sub
adc
xlat
and
roll
jl
lods
xor
and
loop
insl
fstps
lods
js
add
sub
or
mov
sahf
xchg
pop
jbe
xor
pop
or
inc
pop
adc
dec
insl
adc
sbb
add
jb
push
add
insl
scas
call
loop
adc
in
mov
lret
cmpl
dec
add
mov
xchg
mov
add
inc
ja
dec
imulb
mov
xchg
gs
loopne
in
xchg
dec
insb
sbb
adc
flds
mov
imul
lock
inc
fstpt
or
outsb
or
lods
dec
push
cmc
adc
dec
rol
dec
insb
sbb
frstor
add
icebp
ja
jb
repnz
mov
mov
scas
ret
pop
stos
add
mov
fbstp
filds
pop
sub
jne
add
hlt
dec
movsb
jno
dec
ret
mov
cmp
xchg
dec
sub
sbb
ja
adc
cltd
in
clc
inc
push
test
orl
xchg
cmp
inc
push
pop
call
add
inc
inc
or
roll
add
fisttpl
test
inc
aaa
and
aas
add
cmp
mov
test
inc
xor
ds
je
dec
pop
jne
dec
or
jo
jl
testb
insl
add
sbb
sub
or
or
hlt
pop
enter
fisubl
lea
push
dec
ret
hlt
outsb
lock
or
add
xchg
loope
xchg
lea
lret
je
mov
xor
lock
ss
out
xor
xchg
push
ds
ret
pusha
rcll
gs
adc
into
ficoms
push
or
pop
add
neg
mov
roll
out
push
es
jns
dec
push
insb
add
adc
xlat
mov
lret
adc
xchg
adc
data16
dec
add
sbb
pop
and
inc
mov
jecxz
ret
sub
adc
cmp
dec
pop
xchg
xor
mov
mov
or
pop
ficompl
pop
dec
sbb
and
or
arpl
adc
sub
cltd
imul
mov
add
sub
mov
iret
xchg
add
or
cwtl
outsb
pop
inc
jb
and
add
jae
and
cmp
and
mov
push
cmp
shll
out
shl
jno
adc
popa
cmp
xor
adc
enter
xchg
xor
sbb
cmp
imul
dec
enter
and
xchg
pop
mov
test
xchg
sbb
xorb
adc
or
ret
sub
sbb
mov
sbb
add
je
lea
mov
les
jmp
std
inc
inc
push
jbe
xchg
xor
mov
fiaddl
popf
sbb
pop
dec
lods
add
roll
addr16
mov
add
or
or
xor
mov
inc
dec
push
or
adc
add
lds
daa
cmp
out
dec
pop
outsl
adcl
or
inc
or
out
push
js
xchg
sub
sti
mov
movsb
sti
adc
xor
in
or
sub
and
dec
pop
jl
push
jb
pushf
stc
adcb
daa
adc
les
inc
sub
into
pop
xchg
test
in
or
mov
lock
je
pop
add
js
or
jmp
cmp
imul
aas
xor
nop
out
es
hlt
mov
and
pop
xchg
push
mov
lret
cmp
repz
pushf
jbe
nop
mov
push
pop
xchg
outsl
xchg
fs
ja
and
xor
xchg
xor
lods
push
hlt
push
xor
lea
sub
pop
dec
daa
mov
fsubs
popf
mov
bound
push
dec
jmp
xor
fmull
pop
xchg
inc
sbb
xchg
gs
inc
cmp
dec
test
add
xchg
lea
xor
js
dec
rcrb
lods
flds
pop
or
dec
dec
aaa
inc
inc
shrl
daa
xor
sub
add
push
xchg
dec
mov
inc
ss
jmp
outsl
push
or
fistps
adc
das
or
mov
subl
sbb
pop
xlat
nop
inc
subb
inc
aas
je
add
xor
nop
cmpsl
fistps
and
movsb
jae
inc
andb
jb
addr16
shl
popa
push
bts
and
subb
lahf
addb
into
addr16
inc
adcb
inc
fwait
stos
add
sbb
add
xlat
pop
or
inc
aaa
movsb
pop
pop
or
pop
push
insl
pusha
stos
negl
lea
sbb
lods
mov
add
pop
ss
leave
nop
sbbl
add
jle
popf
pusha
pop
add
sub
pop
mov
jo
mov
jle
enter
imul
rolb
enter
mov
int
mov
lcall
mov
and
jo
stos
test
or
push
sbb
adc
jns
gs
pause
out
in
repz
inc
lods
out
lods
lcall
test
clc
call
push
xor
adc
jne
clc
cmp
in
loopne
cmp
sbb
xchg
xchg
dec
insl
pusha
or
push
cltd
or
test
and
and
mov
int
xchg
imul
lods
gs
fsubs
les
test
adc
add
add
rcrl
fcmovb
jnp
push
cmovne
lock
mov
adc
or
in
pop
dec
or
ds
sub
loope
xchg
cmp
and
and
add
and
shlb
xchg
int
mov
push
add
fs
xchg
hlt
hlt
push
insl
and
adc
aam
push
aam
pop
mov
xchg
ss
lea
and
test
mov
cmp
or
mov
push
sbb
xchg
call
dec
ret
or
or
nop
test
sub
arpl
adc
enter
and
dec
je
pop
call
or
sbb
cwtl
shrb
js
xchg
cmp
adc
test
jmp
push
mov
aad
xchg
adc
push
es
add
mov
or
xchg
rcrl
cwtl
jnp
push
ja
mov
leave
call
bound
pop
test
cmp
test
and
add
dec
ret
mov
adc
cmpsl
test
addb
jb
add
mov
lock
roll
sbb
or
jae
sbb
clc
inc
inc
jle
mov
aad
and
shl
adc
xchg
jne
hlt
adc
insb
inc
cmp
and
clc
sbb
leave
pop
jb
subb
addr16
cmp
add
es
fs
in
xchg
mov
in
inc
outsb
andb
xor
lock
inc
in
push
rcrb
inc
adc
mov
sbb
hlt
push
and
pusha
push
sbbl
sbb
add
or
cwtl
xorb
call
fcom
nop
dec
push
scas
push
inc
outsl
mov
xadd
jmp
or
sub
cwtl
xchg
adc
nop
dec
es
flds
adc
iret
test
fdivrs
hlt
xlat
mov
testb
and
xchg
dec
es
adc
sarb
jb
movsb
and
or
andb
arpl
js
mov
loopne
add
mov
out
dec
out
in
hlt
rcrb
fimull
subb
pusha
push
cmp
mov
in
dec
mov
out
inc
lods
mov
adc
and
movsl
aam
mov
imul
cwtl
fwait
gs
push
push
popa
cmpsl
inc
push
stos
enter
jo
or
orb
mov
ret
mov
inc
and
loopne
push
dec
push
orl
mov
jae
pop
mov
loope
rcrl
jns
movsb
jmp
test
xchg
lret
and
loopne
xor
add
jns
dec
push
popf
jge
cltd
aam
xchg
hlt
jl
mov
cmpsl
sbb
cmp
add
xchg
popa
in
mov
xchg
cmp
and
pop
push
rcrb
mov
sbb
xchg
mov
jae
jo
mov
rcr
xor
hlt
sti
nop
lret
clc
sbb
cld
push
and
pushf
inc
jne
cmp
xchg
xor
setl
mov
sbb
dec
xor
ja
popa
rclb
in
adc
popa
bound
or
imul
pop
dec
pop
movsl
sub
das
or
negl
mov
push
pop
push
orb
cs
ficoml
cmp
fists
inc
inc
test
add
fldt
fs
in
pop
fsub
cmp
or
xchg
rolb
fcoml
arpl
faddl
imul
add
pop
mov
lods
mov
push
rcll
fstpl
sti
jle
cmp
popl
ret
lock
and
mov
push
dec
cmpsb
cmp
xor
adc
arpl
dec
je
xchg
les
pop
pop
jecxz
in
addr16
shll
sbb
test
movsl
mov
cltd
imulb
mov
pop
sbb
in
ret
add
inc
mov
xor
shll
pushf
cmpsl
mov
or
mov
lods
mov
fsubrl
ja
dec
xchg
gs
add
cmp
mov
mov
cmp
push
pop
mov
mov
jns
add
xchg
mov
rclb
add
addr16
rorb
xchg
or
add
das
adcb
ficomps
inc
stos
push
mov
ret
mov
mov
daa
mov
hlt
or
je
and
int3
fimuls
jge
and
add
sub
adc
and
or
xchg
inc
mov
inc
push
cmp
pop
mov
and
shll
fcmovnb
cltd
fisubrl
sbb
adc
divb
jge
test
jns
xchg
push
sub
add
adc
cli
stc
test
mov
mov
and
inc
je
add
das
ret
add
sub
mov
mov
jmp
jmp
cwtl
or
rcll
inc
inc
dec
sub
negl
or
mov
xor
add
dec
inc
inc
bound
jl
mov
adc
fs
mov
dec
fiaddl
push
mov
movsl
movsl
bound
dec
or
push
dec
add
mov
lea
das
sar
and
iret
lods
pop
std
add
and
push
daa
adc
aaa
popf
xchg
push
mov
xor
push
and
test
fwait
mov
sub
adc
push
mov
push
mov
or
sub
pop
adc
ret
xor
pop
and
or
ja
fucomip
loopne
push
add
xor
add
xor
repnz
cmp
mov
sbb
sub
push
mov
jns
add
cmp
push
pop
add
nop
lahf
pop
push
mov
inc
shlb
sbb
test
sahf
xor
jne
jge
sub
push
adc
dec
enter
outsl
inc
aaa
leave
xchg
xchg
arpl
xchg
cmp
sbb
xchg
nop
aam
cmpb
or
out
shr
sub
ret
cmpsl
std
ja,pt
xchg
adc
xchg
inc
or
add
add
pop
jmp
pop
aam
mov
add
inc
sbb
or
add
imul
jecxz,pt
mov
ss
push
pop
xor
fmull
or
or
cmpsl
push
test
fstpt
inc
inc
push
mov
jae
aaa
subl
xor
mov
and
jbe
sub
out
cmp
popa
sub
test
cmp
inc
mov
jne
ljmp
or
dec
xor
outsb
icebp
lea
sti
and
clc
shll
data16
int3
pop
or
inc
push
insl
sub
roll
adc
je
popa
and
lods
lock
loope
sbb
mov
movsb
inc
adc
jge
filds
xor
adc
rcrl
insb
jae
cmp
dec
adc
mov
cmp
push
test
xor
lahf
call
pop
sub
dec
shrl
adc
into
shrb
push
mov
inc
adc
mov
sub
rclb
xchg
lods
pushf
lock
lock
and
inc
adc
imulb
lret
das
roll
mov
and
sbb
mov
cmp
or
xchg
mov
dec
push
ljmp
lock
test
or
xchg
add
add
or
enter
push
lock
insb
xchg
xchg
pop
mov
adc
mov
insl
sbb
testb
or
or
shlb
cmp
mov
ja
fdivrp
push
push
nop
call
and
icebp
add
mov
movlps
je
call
mov
add
mov
out
sbb
nop
dec
push
push
and
add
dec
adc
push
sbb
in
loop
loope
and
daa
mov
push
push
adc
ret
push
sub
push
mov
loope
enter
call
sub
ljmp
add
mov
add
mov
sbb
or
aad
pop
jecxz
and
rcrl
mov
aas
mov
and
mov
inc
jg
sbb
rcrb
shr
loop
push
cmpb
adc
ror
sbb
out
jge
mov
and
movb
jo
das
and
dec
jmp
mov
insl
adc
add
adc
fwait
and
xchg
sub
es
aad
fistpll
in
jmp
sbb
adcb
pop
fdivl
mov
and
jmp
jne
and
mov
sbb
out
and
fcoms
sbb
push
cli
push
hlt
xor
ljmp
negl
ret
cmp
cmp
pop
sub
add
push
loope
inc
addb
sub
outsl
out
shrl
pop
cmpsl
movsl
hlt
lea
adc
add
scas
notl
xchg
rorl
and
addb
test
lock
and
fcmove
xchg
rolb
mov
cli
adc
or
or
pop
xchg
mov
movsl
mov
fs
scas
pop
push
xchg
inc
int3
and
push
xchg
in
xor
outsb
xorl
inc
ret
cmp
imul
popf
inc
inc
or
xchg
aam
mov
movsb
cs
sub
mov
enter
xchg
add
push
fiaddl
mov
or
xchg
test
pop
mov
mov
add
xchg
rolb
sbb
push
push
mov
add
insl
xchg
mov
dec
insb
and
aaa
or
daa
inc
adc
cmp
rcll
cmc
aad
repnz
mov
or
adc
push
lahf
insl
cwtl
add
mov
cmp
ret
das
ljmp
xchg
or
movsl
mov
or
fcmovbe
mov
and
or
add
pop
sbb
fldt
inc
aaa
mov
dec
pop
push
shlb
and
in
cmp
jg
jae
sbb
or
push
pop
mov
test
les
popf
and
pop
xchg
sarb
inc
dec
lock
mov
inc
enter
sbb
das
or
jb
inc
inc
pop
imul
add
and
cmpsl
push
orb
dec
in
popa
fstps
mov
rcll
xchg
inc
movsb
mov
mov
jns
or
movsl
mov
add
aad
adc
push
mov
push
stos
pop
fsubp
xor
gs
xor
sti
push
add
sahf
and
jb
xorb
xchg
int3
pop
mov
andl
push
push
lock
movsb
push
xchg
dec
push
push
mov
lods
add
movsl
loop
mov
pop
pushf
jmp
jne
pop
mov
inc
vpextrw
lds
popa
xor
ret
sub
addr16
jno
dec
pop
inc
jb
out
push
xchg
add
out
push
cmp
sub
xor
fisubrl
mov
inc
lods
fdivrs
nop
ds
or
and
shlb
shlb
fsubl
les
sub
loopne
adc
inc
cmp
push
jmp
loopne
fldt
adc
push
inc
fs
jbe
sbb
mov
jne
xchg
lock
sub
mov
inc
js
mov
push
dec
cli
orb
movsb
sbb
inc
cmpsl
or
adc
nop
pop
in
outsb
adc
xor
decl
les
aaa
fwait
bound
jmp
cwtl
and
push
mov
ss
dec
push
or
xor
movsb
adc
cld
mov
out
das
jne
adc
inc
jo
mov
loopne
pop
mov
bnd
gs
in
xor
and
popf
dec
aaa
inc
lcall
adc
push
pusha
xchg
inc
mov
push
push
repnz
test
inc
lods
sub
nop
add
hlt
insl
call
rclb
les
js
push
sbb
enter
jno
out
addr16
clc
jb
pop
rcrb
bound
cmp
or
movsb
popa
ficomps
mov
lods
std
roll
push
movsb
in
mov
in
arpl
cmc
leave
pop
movsl
or
mov
cmpsl
shrb
xor
imul
cs
cwtl
or
lret
repz
lret
xchg
call
hlt
cmpb
pop
call
or
rcl
push
xor
and
cmp
pop
in
repz
faddp
adc
into
dec
add
pop
add
dec
dec
inc
outsl
mov
jle
cmp
sbb
fldenv
adc
pop
or
or
xchg
jo
test
insb
inc
fcoms
imul
and
and
fisttpll
rorb
jecxz
loopne
ljmp
jl
int
push
shll
je
lds
ret
insb
dec
adc
xor
xchg
fsts
and
mov
aaa
inc
jmp
inc
mov
in
cmpsl
das
push
leave
xor
mov
and
ja
sub
testb
sub
or
dec
mov
mov
mov
and
in
push
xor
js
lea
ds
shll
ret
sbb
add
shrb
xchg
xchg
rorb
and
mov
cmp
push
popa
aaa
pop
not
ror
pop
adc
jmp
add
and
or
adc
adcb
inc
xor
inc
dec
mov
mov
icebp
inc
xor
int
lcall
inc
xchg
adc
pop
movsl
or
mov
outsb
rorl
aaa
cmpb
imul
pop
mov
dec
ret
add
notl
mov
in
push
add
stos
lods
and
xchg
pop
test
add
adc
addl
iret
sub
mov
int3
cmp
popa
dec
xor
mov
mov
pop
inc
push
mov
stos
add
dec
push
dec
mov
and
mov
push
scas
movsl
fisubrl
cmpsl
or
add
daa
stc
cs
cmp
add
or
aaa
mov
adc
mov
push
push
push
or
fidivs
clc
pop
and
sbb
mov
aaa
adc
xchg
xchg
test
sbb
jl
mov
adc
shrb
mov
loope
inc
jg
push
sub
adc
xchg
sbb
jg
and
sbb
or
test
shrb
jbe
sbb
sbbb
mov
testl
sti
cmpsl
lea
adc
loope
clc
adc
pop
mov
aaa
test
mov
pop
adc
adc
fidivs
popf
sbb
xchg
xor
jo
mov
mov
stos
dec
xor
or
lahf
or
adc
mov
add
and
mov
adc
pop
pop
shlb
movsb
xor
add
mov
outsl
cld
popf
adc
push
xchg
leave
arpl
rcrl
lret
out
mov
push
js
dec
les
push
fs
mull
cmp
iret
cmp
nop
inc
lret
sbb
push
mov
sub
stos
sbb
leave
pop
adc
push
inc
scas
dec
xchg
iret
jbe
addl
aad
sbbb
push
inc
mov
dec
add
mov
popa
test
inc
testb
xor
pop
inc
and
adc
inc
ljmp
jecxz
and
sub
add
int3
adcl
std
in
iret
fwait
hlt
jno
push
ficompl
je
xchg
jg
pop
or
stos
sub
or
push
or
xchg
xor
push
mov
sub
xor
outsb
test
push
cltd
test
gs
loopne
mov
jbe
push
inc
adc
lods
xchg
outsl
leave
adc
adc
orb
call
movb
movsb
mov
xchg
bound
add
xor
rolb
mov
xor
inc
jecxz
inc
mov
inc
cmpb
pop
mov
pop
out
pop
mov
push
movb
lret
push
inc
add
ret
cmpb
mov
inc
adcb
xchg
xchg
inc
sub
out
pop
dec
mov
fwait
roll
pop
xchg
nop
out
mov
call
pop
pop
js
jns
cmpb
inc
test
dec
jp
jns
mov
test
les
sub
jp
push
xchg
testb
mov
inc
shlb
cmp
je
ss
inc
cmp
in
push
pop
in
pop
outsl
inc
cmpsb
and
pop
cs
insb
lcall
and
mov
push
cmp
aaa
mov
fsubl
push
or
pop
adc
in
out
or
sub
cmp
lahf
jmp
mov
or
cmpsl
jns
sbb
imul
insb
push
add
fcoms
and
out
or
add
js
sbb
lock
test
jo
add
orl
add
push
cmp
push
or
and
bound
push
aaa
pusha
xor
mov
sub
jecxz
jg
jne
insb
daa
fdivs
lock
gs
mov
dec
mov
inc
dec
nop
dec
test
push
dec
mov
or
mov
pop
or
or
leave
nop
mov
imul
cs
sbb
das
xchg
and
and
adc
jnp
ss
add
adc
mov
inc
sbb
inc
outsl
pop
and
xor
loope
nop
and
je
lahf
test
scas
sbb
call
or
add
shll
fsubrl
fcoml
nop
fucomp
popa
filds
mov
andb
adc
movsb
stos
je
sysenter
scas
inc
ds
sub
jns
push
fwait
cmpsb
leave
les
movl
jo
cltd
adc
cmp
adc
xor
adc
dec
sbb
add
mov
mov
mov
cmp
orl
xor
dec
xor
fists
xchg
scas
fsubrs
out
sbb
push
xorl
movsl
out
fs
pop
mov
xchg
jge
cmp
ss
push
push
and
popa
jo
cmp
testb
sbb
xor
leave
push
inc
nop
mov
ss
rolb
mov
pop
fldl
scas
ret
out
mov
subl
cs
xchg
adc
lods
mov
lret
mov
cmp
popl
pop
stos
imul
test
sbb
or
or
sbb
xor
sbb
add
xchg
push
std
lods
push
mov
adc
js
scas
std
cmc
aad
ljmp
mov
mov
les
inc
andl
xor
mov
mov
or
movb
inc
popa
outsl
xor
in
inc
mov
mov
or
and
hlt
test
xor
sbb
stos
or
test
flds
or
mov
adc
mov
push
cltd
xchg
pop
mov
and
dec
sbb
add
es
xchg
jg
pop
jmp
adc
or
inc
lock
inc
jns
jae
xchg
inc
dec
or
loopne
in
sub
jnp
or
mov
out
xorl
test
jecxz
pusha
sbb
sub
fsubr
call
pusha
rcl
imul
nop
fildll
push
cwtl
cmp
cmp
or
cmc
mov
ljmp
xor
push
add
call
insb
into
orl
or
mov
movsb
mov
pop
xchg
rcll
clc
xor
dec
shr
imul
fisttpl
shrl
rcrl
inc
cltd
insl
test
cmpsb
ja
daa
loopne
divl
ret
in
inc
and
jmp
ja
lret
inc
and
aad
lret
sbb
sti
adc
divl
addb
jecxz
testl
lds
or
daa
or
stc
xchg
in
mov
fstpt
or
imul
pop
pop
inc
rcr
das
ljmp
sub
push
push
lock
cmc
decl
dec
xor
out
pop
mov
aam
xor
sub
fsts
jno
cmp
jge
inc
add
sub
mov
sbb
inc
andl
in
or
popf
inc
jp,pn
add
add
stos
or
out
lret
fstpl
dec
rcl
push
pop
sub
fdivl
mov
in
js
das
and
add
gs
pop
dec
push
incb
mov
dec
inc
sbb
pop
inc
inc
ds
or
in
dec
sbb
enter
cmpl
xchg
rol
or
adc
or
or
test
das
push
out
pop
adc
sub
push
pop
mov
adc
mov
sbb
shrb
lods
hlt
xchg
nop
sbb
mov
imul
jae
pop
pop
adc
scas
lea
or
mov
mov
jne
add
jmp
xchg
mov
xorb
xor
lods
rorl
nop
inc
je
stos
cmc
xsave
xchg
sbb
lods
sub
mov
add
sub
ss
div
pop
xor
xor
mov
adc
sbb
pop
lods
xchg
pop
inc
adc
icebp
xor
repnz
cmp
pop
fwait
jne
sub
mov
xor
mov
mov
pop
inc
dec
inc
sub
pop
or
sub
jl
ss
pusha
and
cmp
rol
mov
pop
movsl
inc
xchg
dec
dec
aam
std
sub
and
or
cmp
xor
jmp
clc
je
ret
in
adc
sbb
add
mov
inc
push
nop
enter
push
stc
xorb
stos
push
sub
fnstsw
lods
cmp
movl
add
push
and
sbbb
mov
push
mov
mov
jns
or
and
push
push
data16
mov
ffreep
gs
adc
in
je
pop
addr16
mov
push
cmp
jo
inc
pop
sbb
push
adc
pop
xor
std
cwtl
inc
cmp
cmp
fisttps
sub
fistpl
and
xchg
mov
sbb
cmpsb
shrb
mov
lcall
or
dec
popa
dec
inc
leave
test
filds
pop
pusha
jmp
mov
sbb
cmp
imul
add
stos
out
aad
dec
and
dec
subl
push
and
add
addb
imul
and
xor
xor
and
or
adc
and
out
bound
frstpm(287
or
aas
rolb
pusha
and
sbb
popa
mov
test
add
ds
inc
nop
pop
dec
gs
arpl
sub
dec
dec
sbb
add
and
cmp
inc
aaa
lea
xor
sub
or
cwtl
add
add
inc
add
and
in
mov
cmp
fildll
and
les
sub
and
sbb
xchg
inc
pop
dec
mov
inc
push
into
push
xor
mov
rcrb
push
add
fsubr
xchg
pop
and
pop
adc
jl
mov
dec
inc
lods
or
pop
push
and
sti
jg
call
push
or
rcrb
add
dec
jb
pop
xor
mov
es
adc
pop
mov
sbb
scas
adc
jg
xchg
xor
mov
lea
or
cmp
xchg
pop
shrl
jne
js
inc
xor
jb
in
in
inc
in
ja
add
subl
add
or
xchg
add
movsl
pop
lods
jbe
or
inc
add
popa
jl
fdivrs
sbb
fimuls
inc
movsb
lods
add
dec
xchg
mov
les
pop
add
fcmovu
mov
mov
and
rcrl
movsb
jecxz
fdivl
inc
adc
push
cs
dec
outsb
shlb
inc
jb
out
cmp
inc
and
cmp
sub
test
mov
enter
scas
arpl
pushf
dec
dec
and
fcoml
or
les
inc
leave
jge
cltd
inc
pop
and
xchg
test
push
inc
dec
cmpsb
leave
test
sbb
test
add
fsub
or
add
sbb
andb
jns
mov
cmp
cwtl
adc
adc
xchg
aaa
cmc
mov
add
fnop
dec
pop
pop
xor
mov
xchg
inc
push
rolb
pop
pop
xchg
sarb
mov
loopne
inc
int
rclb
enter
int3
cmp
pop
int3
and
inc
fidivs
enter
int3
fnstcw
mov
adc
xchg
in
les
and
sub
and
jno
and
dec
mov
aas
push
leave
es
sti
sub
mov
add
ss
cmpsb
imul
lods
push
rol
orl
pop
ss
repz
ljmp
lcall
push
shlb
dec
rcrb
mov
mov
pusha
leave
adc
dec
add
enter
in
pusha
int
sbb
pop
xorb
addb
fs
pop
push
or
push
int
pop
or
faddl
or
adc
or
gs
daa
sub
les
sbb
orl
cmp
ds
out
push
cmp
fldenv
dec
shll
cmp
mov
jmp
rclb
jmp
and
cmp
push
arpl
inc
rorl
mov
or
sbb
and
in
fmull
add
or
push
je
mov
xor
stos
fsubrs
mov
daa
shlb
mov
xchg
sbb
sti
add
inc
jp
imul
int
dec
and
add
call
ljmp
mov
xor
insl
rolb
andl
cmp
pop
adc
into
shr
inc
and
ss
and
jne
or
xor
leave
sbb
and
mov
push
or
enter
xchg
imul
pusha
repnz
rolb
push
mov
dec
enter
sbbl
sub
cmp
xor
dec
sbb
sbb
xchg
lret
sub
jae
ret
out
jo
fdivrl
xor
jmp
lea
dec
daa
bound
rolb
and
lret
jge
xor
push
mov
sti
jo
mov
rolb
push
and
fdivrl
sbb
push
add
push
adc
lea
jne
pcmpeqw
mov
and
mov
or
adc
pusha
faddl
sub
push
jg
inc
cmp
je
jne
sbb
nop
les
pop
sub
movsl
sub
mov
lock
imul
add
xor
dec
aas
sbb
fdiv
inc
cmp
jns
adc
scas
sub
xchg
cmp
jge
pushf
movsl
cmc
adc
adc
mov
mov
mov
add
jmp
rolb
mov
jge
imul
push
fsubs
mov
xor
in
sbb
push
pop
mov
cmp
or
inc
sbb
popa
scas
sub
push
scas
xor
dec
add
or
inc
inc
xor
mov
xchg
push
sbb
push
dec
repnz
andb
subl
push
sub
sub
imul
addl
dec
das
insb
nop
cmpsl
inc
cmpl
sub
push
cmp
add
push
or
hlt
jge
and
bound
mov
sub
dec
or
dec
xorb
lahf
mov
adc
lret
daa
add
test
test
mov
add
mov
out
dec
jbe
xor
push
orb
test
add
cmp
imul
jne
push
fistps
daa
cmpl
in
xor
gs
test
fisttpll
inc
pop
mov
and
in
repnz
jmp
sub
inc
dec
in
inc
dec
push
sub
and
or
jmp
movsb
outsl
lret
dec
or
adc
mov
jp
adc
add
push
cmp
out
and
jno
lods
and
dec
mov
fs
lock
or
push
inc
and
add
lods
cmc
and
shlb
cltd
insb
jmp
push
xlat
sbb
dec
pop
jne
push
dec
mov
sbb
lret
in
rclb
pop
daa
cli
nop
and
add
rolb
cmp
ss
es
shl
mov
roll
adc
or
cmp
add
andb
cmp
setle
dec
push
sub
sbb
in
test
sub
ds
mov
mov
xor
xor
mov
sub
dec
sub
nop
or
stos
pushl
scas
and
xor
add
hlt
push
ss
adc
xor
xor
adc
and
sbb
repz
cmp
xchg
xchg
xor
push
pop
pop
xor
inc
lret
and
add
add
cld
mov
repnz
add
sub
lret
aaa
xor
cmp
sbb
mov
rclb
int
dec
inc
xchg
jg
cmp
jne
mov
fidivrs
pop
and
mov
jp
shlb
mov
icebp
add
ret
add
mov
aaa
ja
dec
add
mov
xchg
push
xor
push
lock
push
mov
roll
nop
inc
dec
mov
int
cld
ljmp
pop
sub
loopne
or
xchg
adc
pusha
jge
stos
jmp
mov
dec
imul
popf
leave
movsl
mov
and
jb
sub
repnz
add
push
sti
dec
add
push
pop
pusha
mov
adc
inc
cli
incl
rclb
cmpsb
add
lds
sub
mov
pop
adc
sti
repz
repnz
or
cmp
int3
and
adcb
stc
cmpsl
jecxz
sbb
xor
fists
sub
sbb
inc
rolb
insl
popa
xor
push
dec
and
pop
inc
stos
ret
xor
mov
adc
in
xchg
xor
push
or
cmp
aaa
mov
xor
sar
xlat
inc
and
xchg
sub
dec
or
repz
mov
dec
push
add
loopne
add
cmpsl
add
mov
inc
dec
add
dec
push
sbb
in
sub
out
dec
and
cmp
dec
xchg
fmuls
sub
and
mov
rclb
negb
sub
imul
dec
mov
mul
movb
push
add
adc
mov
fstl
ficoms
add
imul
add
js
cmp
sub
fsubl
negl
xchg
fwait
mov
add
fs
js
adc
push
push
jns
xchg
test
gs
sub
xchg
inc
and
addl
cltd
cmp
and
dec
jno,pn
push
push
push
popa
lock
mov
test
mov
mov
push
and
jbe
xor
or
cmp
push
popf
and
push
xor
inc
add
sub
jnp
lods
jno
push
inc
bound
data16
xor
jmp
pop
or
xor
mov
or
push
out
and
adcl
popa
xor
cmp
imul
mov
imul
lods
je
push
and
xchg
xchg
test
pop
jne
cmp
movsb
xor
les
dec
inc
push
cld
test
adc
cmp
dec
stos
les
sub
add
jge
mov
mov
popa
test
mov
adc
int
xor
xor
fistpll
or
add
adc
sbb
movsl
adc
addr16
or
adcl
mov
jg
and
inc
pusha
xor
jp
nop
add
mov
pop
inc
mov
movzwl
ret
push
fistl
and
and
daa
sub
sbb
jl
sub
lahf
mov
sub
pop
mov
pop
inc
jecxz
and
test
lods
or
push
negl
sub
cmp
cmp
mov
dec
add
sbb
mov
sbb
pop
jle
inc
jnp
push
rorb
cvtdq2ps
push
adc
push
sub
dec
mov
int3
test
out
test
and
add
sbbb
and
xchg
inc
jno
ss
imul
shrb
mov
test
mov
mov
sub
popa
dec
enter
movsl
sub
inc
cmp
decb
ficoml
data16
gs
cwtl
in
and
test
or
jo
xor
fs
add
adc
mov
cltd
mov
add
inc
pop
movsl
aam
jo
push
inc
inc
es
cld
mov
mov
push
int3
movsl
adcl
dec
enter
dec
mov
test
hlt
jp
or
sahf
xor
addr16
leave
jmp
or
mov
inc
shlb
or
pop
shlb
sub
pop
aaa
cmpl
or
add
lret
adc
shrb
dec
cmpsl
in
sbb
and
push
inc
test
test
stos
pop
popl
mov
jecxz
xchg
inc
daa
fwait
adc
dec
inc
inc
push
sub
clc
loope
sbb
pop
lods
inc
sbb
xor
fwait
aas
mov
punpckhwd
sbb
sarb
adc
dec
pop
pop
xchg
mov
fsubs
sahf
mov
aam
pushf
sub
lea
pop
mov
loop
add
addb
add
dec
ret
xor
dec
jge
call
pop
mov
mov
adc
dec
mov
arpl
popa
aam
adc
jg
jp
mov
jp
mov
jl
jo
xchg
hlt
popf
mov
ret
pop
add
jo
cmp
cmp
ss
dec
xor
cmpsl
insb
pcmpgtw
mov
add
insl
fistpll
mov
and
pop
xchg
or
add
ss
mov
lret
les
xor
inc
aaa
lock
scas
cmp
fldt
sarb
mov
shlb
push
pop
cmp
push
addb
mov
inc
or
mov
add
pop
pop
movsb
jle
mov
xchg
addr16
dec
mov
sbb
xchg
push
xchg
dec
add
in
cmp
bound
enter
inc
pop
pop
out
test
lea
add
enter
xor
andl
dec
rorb
movsb
rcr
adc
outsl
mov
imul
jns
scas
or
and
int
jg
mov
lods
ror
movsb
push
jb
adc
add
sub
xlat
xchg
lcall
mov
jnp
outsl
inc
xchg
loop
ss
mov
mov
xor
cmp
sub
fisttpl
jmp
or
mov
ja
cmp
mov
clc
mov
adc
insl
jecxz
movsl
dec
fnstsw
xor
lea
test
icebp
pop
dec
jno
cwtl
push
push
add
fnstcw
cmp
pop
popa
mov
jge
dec
dec
mov
js
daa
dec
jno
xorl
loop
xchg
add
mov
movsl
dec
ds
pop
sbbb
ds
jns
daa
dec
add
and
ss
adc
xchg
movsl
pop
popf
add
icebp
sub
cld
lock
xchg
pushf
inc
mov
inc
pop
loopne
lret
push
icebp
fisttpll
dec
lock
sub
mov
popf
dec
inc
sub
test
xor
mov
jl
pop
push
cmpb
dec
rcrb
adc
adc
es
inc
mov
aad
dec
lods
or
jae
repnz
movsb
outsb
fmul
rorb
mov
push
mov
imul
call
arpl
adc
mov
add
loop
inc
mov
jmp
cmp
data16
adc
sbb
and
les
push
jmp
scas
push
gs
or
les
test
pop
cmpsb
or
cmpsl
jno
adc
adc
dec
fisubl
push
dec
out
sub
or
out
mov
add
push
xchg
fisubrl
inc
xchg
inc
dec
or
imul
aaa
push
mov
aaa
add
xor
add
mov
and
jp
jne
daa
or
call
sbbb
mov
mov
cmp
js
inc
inc
sub
and
and
sub
jne
adc
rolb
xor
jle
in
push
stc
push
notrack
ds
xchg
xchg
hlt
jmp
testb
push
cmp
je
sbb
cmp
and
and
cmp
lcall
or
cmpsb
jo
cmp
jecxz
cmpsl
lods
movsl
xor
inc
mov
xor
fwait
lods
mov
push
push
aas
mov
xor
inc
add
pusha
in
push
and
lods
xor
aaa
push
mov
aaa
je
rorb
out
mov
stos
movsb
pop
mov
mov
dec
dec
pop
bound
sub
test
push
jae
lock
fidivrs
dec
aam
rcll
js
cs
setle
cld
inc
jae
ret
pushf
xor
pop
mov
rorb
mov
in
xor
test
and
jbe
int
lret
rcrl
andl
adc
jb
cwtl
cwtl
mov
inc
sarb
movsb
std
pushf
outsl
add
pop
jne
push
test
fwait
dec
enter
adc
and
pop
sbb
sub
aad
mov
sub
ret
out
test
shl
nop
inc
insb
adc
push
xor
jo
lret
sub
xor
js
xchg
and
jmp
jl
nop
andl
jo
jo
test
insl
add
mov
xor
ret
stos
sbb
testl
mov
add
inc
movsb
sbb
fs
sbb
adc
int3
arpl
sub
pop
mov
aas
or
mov
imul
sub
aaa
pop
lods
push
bound
aas
push
pop
movsl
pop
mov
out
roll
jecxz
loop
inc
aas
inc
adc
mov
sbb
or
mov
movsl
add
out
and
jno
fisubrl
pavgb
adc
adc
inc
ret
and
adc
in
es
push
pop
call
mov
and
loopne
sbb
sahf
xor
mov
xchg
add
xor
enter
inc
push
and
scas
or
mov
jno
adc
sub
sahf
test
fists
dec
dec
pusha
add
cmovl
xchg
sbb
cmpsl
dec
mov
mov
bound
and
pop
iret
test
cmp
push
jns
add
dec
fcoml
imul
sti
mov
and
jno
lds
push
test
adc
jb
jg
lret
rorb
sub
into
movsb
dec
push
ficompl
aaa
ss
push
mov
test
add
cli
lcall
ret
cmpl
mov
add
aas
lahf
orb
or
xor
xorl
cwtl
push
lds
fwait
inc
imul
push
cmpsb
imul
lahf
xchg
movb
es
addl
push
leave
pusha
es
push
jne
cmpb
ljmp
test
loop
ss
xor
in
and
sub
rorb
fnsave
or
lea
adcb
jo
xor
scas
add
add
add
pusha
outsb
or
mov
cwtl
pushf
nop
mov
dec
jno
mov
mov
loope
pop
adcb
dec
shl
addb
imul
or
push
subl
das
inc
arpl
mov
mov
stc
fsubl
adc
xorb
dec
push
xchg
iret
push
popa
fs
xchg
xor
shlb
inc
es
cmpsl
sub
sbb
cmp
cmp
push
push
pop
add
pop
add
dec
or
or
inc
push
dec
adc
aaa
dec
aas
pop
pop
mov
js
test
push
push
aam
test
jecxz
cmpsl
in
add
pop
sbb
popf
int3
mov
es
push
jno
shlb
negl
repz
add
pop
push
and
dec
mov
inc
add
push
lea
sub
aam
mov
mov
xor
dec
lahf
push
jbe
dec
mov
test
xor
push
fs
pop
aam
fcmovb
inc
inc
mov
dec
jo
movsb
test
jmp
inc
inc
into
or
inc
mov
lock
adc
dec
sub
inc
test
jno
test
adcl
or
add
imul
mov
adc
hlt
insl
push
lock
xchg
xchg
clc
fadds
pushf
add
jle
mov
and
cwtl
mov
mov
adc
mov
xor
daa
mov
nop
lcall
jne
cmp
adc
jl
and
inc
or
cmp
adcb
and
mov
fs
pop
xor
push
cmpb
pusha
push
test
daa
mov
cs
mov
pop
mov
sbb
das
add
add
dec
loope
pop
fbld
pop
rcl
call
js
or
sub
ror
sub
push
sbb
pop
xorb
and
sbb
mull
shlb
push
ret
mov
lret
and
mov
aas
adc
js
push
sub
xadd
mov
das
pop
insl
adc
je
or
and
mull
ljmp
sub
jae
push
pop
les
ret
dec
shll
ret
and
and
iret
push
pop
jb
aaa
ss
push
sbb
nop
push
jecxz
clc
and
addl
xorl
lock
pop
shrl
icebp
rorl
lods
add
leave
test
ficoml
add
adc
push
shlb
push
xor
lret
in
lock
enter
push
hlt
sahf
sbb
mov
dec
loop
call
pop
test
int3
icebp
loopne
jne
lret
push
call
push
xchg
xchg
jmp
sbb
cmp
inc
or
or
jge
outsb
leave
adcl
push
lds
sub
dec
xchg
push
push
sti
fldcw
dec
sub
and
mov
pop
aaa
inc
cmpsb
orl
roll
aad
sub
adc
mov
and
push
sbb
mov
dec
mov
push
push
push
pop
fwait
inc
sbb
dec
loop
aam
out
and
push
mov
movsb
pop
xchg
jl
lds
cwtl
jne
xor
les
sahf
faddl
jnp
pusha
mov
inc
and
mov
mov
enter
fistl
xor
mov
inc
add
subb
fs
mov
xchg
mov
stos
sbb
fimuls
movsl
decb
cmp
mov
sbb
pop
and
pop
mov
push
mov
xor
mov
arpl
cmpb
jmp
mov
inc
and
andb
pop
leave
add
test
mov
movsb
movsb
aaa
sbb
jge
test
test
and
enter
ret
xchg
xor
push
add
pop
pop
pop
cmpsb
jns
mov
mov
xchg
push
pop
jo
sbb
and
add
jbe
jo
cmp
lea
aam
adc
mov
in
sbb
js
adc
mov
cmpb
int
dec
add
and
insb
xor
or
nop
xchg
pushf
xor
icebp
or
pushf
inc
or
addl
mov
rorl
inc
push
xor
test
xchg
faddl
push
fs
lcall
cmpsb
xchg
jmp
jge
fs
lret
adcb
xchg
pop
push
fs
dec
pop
pop
loopne
xor
dec
sbb
and
push
mov
shrl
jno
inc
shrl
dec
mov
inc
inc
int3
mov
dec
inc
pop
mov
mov
mov
and
xchg
pop
xor
sub
mov
xor
add
nop
and
test
mov
jnp
shlb
gs
sbb
pop
int
es
xlat
setae
xor
inc
aas
fistl
mov
add
sub
pusha
or
fldl
and
xchg
dec
cmpsb
mov
inc
es
push
push
pop
popa
push
and
xor
in
mov
inc
push
pushf
cwtl
pushf
push
mov
movsb
dec
lods
mov
movsl
mov
loopne
inc
or
dec
adc
ret
mov
push
mov
xchg
mov
mov
imul
adc
inc
mov
pop
mov
push
orl
mov
inc
xchg
cmp
mov
add
xchg
incl
adc
push
mov
inc
scas
push
aas
add
xchg
and
cld
inc
int
and
adcb
fs
mov
test
popa
or
xor
xchg
fs
test
inc
push
push
adc
nop
lods
test
xchg
dec
mov
das
sub
ljmp
inc
mov
je
fcoms
push
lods
inc
pop
or
dec
cmp
sub
push
mov
test
add
orl
jp
outsb
sbb
jns
roll
cmp
sbb
or
pop
push
sahf
hlt
lds
adcl
xchg
xchg
xchg
push
pop
mov
sbb
nop
push
in
or
rcr
pop
and
jne
dec
popf
mov
xchg
icebp
jo
lds
adc
gs
scas
add
or
mov
out
sbb
xor
or
mov
and
scas
pop
pop
and
or
pop
lcall
nop
js
push
jne
shlb
sub
push
dec
push
add
add
popa
xchg
or
push
mov
rcll
push
pop
xchg
mov
add
add
dec
les
mov
shll
add
call
call
test
outsl
lock
xchg
mov
pop
mov
in
mov
inc
mov
sub
std
xorb
push
mov
push
mov
sbb
inc
cmp
mov
in
cmpsl
js
dec
add
leave
push
push
add
mov
stc
lock
sbb
les
lahf
add
int
adc
mov
jp
xchg
movsb
subb
add
popa
mov
mov
or
cmp
adc
je
pop
aaa
sub
adc
test
add
popf
in
adc
dec
gs
or
adc
test
rcll
add
pop
pop
ret
das
adc
adcb
test
fstpl
out
pop
xor
fdivs
std
inc
push
add
lcall
xchg
xchg
pop
fwait
adc
sbb
sub
or
xchg
ficompl
mov
dec
inc
push
adc
imul
push
mov
sbb
in
pop
xor
add
push
fldt
out
mov
add
sub
xchg
dec
mov
cld
dec
out
out
inc
xlat
and
sub
or
cmp
clc
gs
jo
or
dec
bound
mov
add
mov
loopne
or
popa
pop
pop
test
nop
xor
adc
push
enter
movl
jno
mov
imul
inc
mov
pop
loop
scas
bound
mov
clc
xchg
inc
cltd
jl
insl
addb
inc
loopne
ret
lods
ret
nop
sub
sbb
das
dec
pop
idiv
mov
lret
out
mov
cmp
inc
addr16
nop
out
nop
pop
xchg
sub
sub
dec
pop
add
xor
add
inc
push
and
add
sub
jbe
inc
jns
and
cmp
push
sub
and
add
add
or
add
pop
sub
insl
cltd
loopne
adc
test
divb
leave
pusha
and
pop
xor
inc
outsl
adc
cmp
in
insl
inc
outsb
das
nop
adc
push
scas
imulb
xlat
mov
movd
lock
add
push
lock
sub
add
push
ljmp
sbb
dec
rorl
mov
jge
push
add
dec
and
ja
inc
pop
movb
push
lret
adc
ret
shlb
ret
fadd
popa
xor
xchg
adc
add
sub
ja
sub
adc
nop
popa
add
jmp
adc
sti
fbstp
frstor
popf
int3
icebp
and
adc
inc
inc
int3
and
fwait
adc
lea
jo
lcall
es
mov
in
adc
leave
aad
mov
call
mov
sbb
jmp
in
test
pop
and
outsl
fistl
xor
pop
adc
pushf
or
sbb
mov
mov
dec
imul
push
lock
or
inc
in
add
fsubs
inc
mov
mov
xchg
add
sbb
inc
or
or
ret
or
fmull
add
dec
pusha
xor
cmp
imul
in
inc
add
xchg
sbb
les
xor
sub
ror
and
cltd
or
mov
aam
bound
adc
adc
push
xchg
or
jo
clc
sub
xchg
test
incl
adc
int3
cmp
jle
pop
int3
pushl
popa
sbb
cmp
jle
and
sub
sbb
dec
xchg
cwtl
mov
xor
pop
pop
pop
lds
mov
pusha
mov
lods
movsb
loopne
mov
nop
fsubrp
ss
imul
cmpsl
int3
mov
jmp
sub
dec
mov
sti
cli
jae
insb
insb
jg
or
mov
sbb
mov
and
or
mov
jge
pop
pop
add
jmp
push
add
fwait
ret
arpl
testb
xorl
jnp
mov
into
int3
push
rcrb
inc
pop
jb
add
es
mov
add
sub
sarl
and
push
and
jns
adc
outsl
cltd
les
fsubrs
jae
or
jbe
and
jb
dec
fistpl
leave
inc
pop
rolb
and
pop
rclb
cmpps
mov
or
je
gs
mov
lods
dec
clc
sub
shlb
push
test
push
hlt
test
lea
pusha
mov
push
fs
cmp
vmwrite
adc
add
loopne
push
popa
pop
pop
lock
movsl
or
fdiv
loopne
and
or
jmp
add
jge
sub
cmp
pop
mov
inc
cmp
jmp
fdivs
sbb
daa
pop
pcmpeqb
mov
xor
dec
out
in
adc
pop
in
cvttps2pi
mov
outsl
and
sub
pop
sarl
xor
out
mov
and
call
ficompl
dec
shlb
add
xor
mov
mov
or
sbb
enter
dec
or
cld
mov
sti
in
sub
scas
mov
sub
adc
cmpsl
sbb
add
push
jbe
inc
sbb
push
shlb
popf
and
rcrl
nop
nop
out
push
jle
fcoml
in
ja
xorb
inc
adc
in
sub
ss
aad
inc
pop
mov
cli
sub
add
mov
add
test
rclb
mov
adc
add
xchg
inc
imul
or
mov
push
call
dec
ret
jl
mov
lret
call
pop
jo
lret
out
xchg
pusha
js
bound
inc
cmpl
dec
cs
in
hlt
roll
add
sbb
nop
das
add
sub
cmpsb
jle
mov
testb
imul
aas
inc
adc
fs
imul
xor
dec
add
xchg
mov
and
repz
sti
and
jns
xchg
fwait
push
repnz
push
fsubrl
clc
sub
sahf
rcrl
mov
cmpl
rcrb
pop
mov
scas
add
hlt
lods
insl
dec
cmp
imull
add
or
or
pcmpeqd
and
jle
clc
and
push
push
js
and
rcr
cmp
aam
shlb
addb
push
fldl
test
sbb
sbb
jecxz
sbb
lea
mov
push
inc
sub
and
sbbl
sub
scas
lock
pusha
mov
pop
pop
add
xchg
mov
add
push
sbb
dec
rorb
nopl
imul
sbb
sbb
ja
pop
repnz
in
jp
push
pusha
rcll
or
sbb
jae
addb
adc
lds
mov
jl
int3
cmp
mov
add
sub
ret
dec
mov
cmc
loopne
in
or
jnp
lret
test
xor
repnz
adc
jne
js
arpl
pop
pop
bound
dec
dec
or
push
loopne
rorb
mov
push
and
shl
or
js
adc
add
or
jae
push
sub
cmp
cwtl
mov
sbb
icebp
andl
mov
je
pop
mov
lret
mov
leave
mov
and
jns
sbb
add
cmp
insb
leave
pop
aas
push
xor
cmp
mov
adc
test
xor
imul
cltd
neg
push
jle
lods
mov
in
cli
mov
or
add
sbb
push
xchg
psubq
or
and
vpmaxub
sub
sub
pop
ss
test
imul
mov
push
hlt
jle
or
gs
add
jp
xor
sbb
or
or
push
cmp
icebp
sbb
push
and
xchg
fidivl
cmp
push
and
ficompl
test
xor
add
xchg
int
xchg
lcall
jl
test
adc
inc
or
dec
sar
pop
cs
pop
mov
icebp
loopne
fdivs
or
or
aaa
adc
les
adc
imul
ret
or
or
scas
jae
mov
jno
outsl
push
cmpsl
push
dec
or
push
pop
adc
push
mov
jp
jbe
ret
dec
subb
sub
mov
sub
movsl
adc
lods
push
rcr
sub
andl
sbb
xor
mov
syscall
addb
pop
test
add
pop
movsl
in
mov
push
or
bound
repnz
addr16
nop
dec
shr
mov
les
loope
dec
pop
xchg
pop
sbb
lret
add
int3
adc
push
test
adcb
dec
pop
pop
pusha
inc
mov
setbe
sub
xchg
and
push
jg
sbb
jns
mov
adc
mov
int3
or
and
es
sub
sub
xor
mov
push
mov
inc
push
or
andl
ror
arpl
xchg
outsb
xchg
or
or
cmpsb
jge
inc
outsl
movsl
sysenter
mov
mov
test
fimull
lods
cmpl
mov
mov
nop
or
movsl
sarl
jbe
xlat
xorb
and
pop
jnp
pop
pusha
test
js
adc
push
pushf
movsb
pop
in
sub
pop
sbb
adc
jl
dec
es
test
push
and
shrb
and
jno
mov
sbb
or
xor
cmp
add
sbb
dec
adc
clc
fbstp
syscall
add
xchg
in
adc
lahf
jae
int3
fldcw
cltd
mov
pop
push
sbbl
fmull
idivl
mov
and
inc
divb
js
fmull
push
in
push
psrlq
loope
mov
ret
pop
ret
in
sbb
hlt
jae
adcb
add
fs
xchg
push
push
inc
dec
js
nop
jae
xor
outsb
fsubs
leave
xchg
inc
outsl
add
outsb
adc
pop
mov
add
jmp
jp
push
daa
add
and
adc
repnz
add
inc
addr16
and
out
lods
fists
add
sarb
fsubrl
insl
pop
sbb
rcr
mov
pop
ja
sub
or
leave
outsl
xchg
and
xorl
add
pop
jmp
mov
xchg
push
movsb
popl
cmp
dec
lds
mov
mov
lret
out
movsb
adcb
leave
mov
xor
bound
and
popa
push
movsb
pop
adc
inc
or
rcrl
jae
add
cs
imul
int
sbb
xchg
stos
pop
mov
jmp
push
pop
sub
sub
mov
mov
push
sbb
cmp
icebp
int3
add
dec
lods
sbb
adc
or
add
popa
or
scas
sbb
mov
pusha
subl
fsubs
dec
mov
pop
test
das
fmuls
iret
imul
push
repz
add
push
xchg
sti
cmp
repz
mov
enter
mov
cmp
nop
movsb
hlt
out
ljmp
mov
dec
mov
mov
test
sub
push
mov
jmp
or
mov
or
dec
in
shlb
xor
loopne
aaa
cmp
ficomps
fistps
or
test
dec
dec
dec
inc
dec
sahf
in
xor
xchg
daa
daa
and
add
insb
mov
clc
adc
aad
pop
push
xchg
loope
es
xchg
add
mov
fstl
dec
fwait
movsb
push
cs
push
pop
inc
in
xor
sbb
dec
pop
clc
dec
sub
sti
dec
adc
popa
and
arpl
jo
jb
pop
add
dec
sti
shlb
mov
xor
and
int3
mov
dec
xorb
cwtl
push
insl
sub
test
dec
js
jno
mov
xchg
adc
xchg
pop
add
sbb
in
jo
popf
sbb
xor
inc
in
mov
xor
ss
pop
fsubl
cmp
enter
pusha
add
rorb
sbb
in
ss
adc
ret
rcl
xchg
xor
add
loope
inc
pop
jmp
pop
addl
mov
sbb
aad
subb
inc
or
addr16
aaa
sub
jne
push
call
push
shlb
clc
adc
fcmove
xor
cmpb
inc
jmp
out
outsb
jo
dec
jg
lods
mov
sbbb
and
data16
xchg
or
inc
fiaddl
enter
or
rcl
inc
out
add
roll
add
push
adc
mov
iret
jae
pusha
jo
inc
xor
mov
xchg
mov
mov
push
cmpsb
push
loop
xchg
gs
sub
push
loopne
or
or
push
xor
inc
fsubrs
addr16
dec
add
push
xor
xor
xchg
xor
pop
push
push
test
das
jo
xchg
aas
lock
inc
xchg
push
and
add
mov
dec
enter
xchg
aam
mov
cmp
stos
and
push
and
call
mov
daa
pop
xor
sbb
cmp
add
xchg
pop
adc
sub
adc
xor
mov
mov
repz
ja
sbb
xchg
pop
int3
das
loopne
test
and
pop
out
lds
shll
xchg
insl
enter
gs
in
icebp
mov
xchg
push
lds
push
roll
add
out
pop
loope
push
mov
jbe
dec
loopne
or
push
loope
or
xor
inc
bound
or
cs
mov
rol
push
dec
or
dec
loop
fcmovnu
mov
xchg
insl
pop
push
cmp
push
push
stos
pop
or
out
lods
ljmp
stc
ja
outsb
mov
dec
in
and
stc
popa
xor
pop
pusha
xchg
adc
pop
add
mov
and
cmp
aaa
push
mov
dec
or
aam
push
dec
mov
adc
or
xorl
mov
je
call
mov
das
movsl
push
inc
aas
mov
sbb
push
add
adc
add
pop
mov
or
cs
seto
and
adc
inc
sbb
gs
sbb
jbe
adc
test
jno
add
mov
pop
mov
dec
enter
mov
imul
or
sbb
loopne
dec
fdivrs
sbbb
or
or
mov
and
frstor
xorl
sbb
jmp
dec
rclb
test
sbbl
mov
dec
cmp
xchg
stos
or
sbb
xchg
or
mov
jno
dec
inc
int3
mov
inc
jns
xchg
jl
mov
xor
pop
rcl
in
aad
and
mov
mov
cmp
cltd
pop
dec
push
pusha
mov
jae
shrb
dec
and
sbb
pop
xchg
fisubrs
adc
add
les
adc
jae
arpl
adc
daa
fstl
das
adc
cs
sub
mov
cmpsl
or
cld
cltd
add
divb
les
les
pop
jne
inc
mov
xor
imul
sub
push
xor
dec
fdivp
sahf
out
inc
je
adc
xor
fsubr
repz
test
xor
xchg
jnp
sti
pop
in
mov
pop
cmp
inc
mov
push
sbb
aaa
cs
inc
sbb
xchg
mov
mov
and
jg
mov
jecxz
dec
lea
mov
shlb
stc
adc
adc
pop
and
repnz
sbb
push
sbb
and
push
lods
mov
mov
xchg
sbb
int
bnd
rolb
pop
or
and
xchg
add
dec
rol
dec
leave
scas
pop
add
sub
inc
cmc
mov
sbb
ds
pushf
gs
sbb
mov
sbb
into
sbb
jl
pop
lock
nopl
mov
add
mov
push
and
xorb
daa
daa
rcrb
lahf
dec
cwtl
rolb
lret
jp
popl
and
and
push
js
adc
lds
fildl
pop
push
sbb
mov
aas
je
in
rcl
mov
fcmovb
sbb
inc
in
in
movsl
fwait
or
sbb
lahf
xchg
sub
push
popa
lea
mov
mov
leave
or
aad
or
pop
and
mov
incl
or
lahf
adcl
sub
sti
les
add
or
rcl
jae
adc
inc
add
pop
adc
sbb
inc
adc
rclb
inc
pusha
adc
xor
cltd
lahf
popw
and
cwtl
jns
pslld
mov
out
aad
cld
add
or
xor
popf
mov
in
mov
dec
aas
mov
popa
ja
push
pop
or
sbb
dec
xor
ficoms
or
adcb
pop
and
cmp
je
xchg
xor
pop
movsb
pop
pop
push
mov
sub
mov
jne
int3
fnstsw
sub
xlat
das
jecxz
xor
push
scas
aad
dec
out
jmp
add
test
push
pop
test
mov
or
repz
mov
add
ljmp
pop
jnp
jo
lods
mov
pop
outsl
aam
sarl
push
add
in
mov
rcr
add
aam
jp
daa
mov
cmp
lock
xchg
mov
lds
fisttps
popa
dec
pop
mov
ja
adc
add
or
scas
popa
add
push
sbb
faddl
sbb
dec
mov
sbb
adc
pushf
xchg
cmpsb
cmp
jb
ss
gs
jb
pop
das
sbb
out
sub
popf
and
jbe
out
and
fld
push
push
or
and
les
adc
test
inc
test
ret
sub
pop
push
pop
sbb
dec
fs
add
aas
push
hlt
sbb
inc
xchg
int
pop
movsl
orl
inc
adc
cmp
cs
inc
inc
mov
and
inc
jp
mov
mov
test
insl
adc
xchg
dec
sbb
pop
movsl
mov
nop
or
add
or
jl
cmp
inc
sub
dec
mov
and
jno
sbb
push
mov
add
sbb
add
lds
mov
jge
setg
and
negl
sbb
add
int
dec
mov
xchg
push
cltd
test
fs
xor
pop
stos
shlb
push
cmp
cwtl
scas
cmp
mov
in
fs
dec
push
repnz
dec
and
js
hlt
mov
insb
inc
push
lods
dec
push
inc
pop
loopne
roll
aam
push
or
add
xor
and
cs
mov
loope
jge
movsb
out
sti
xchg
mov
adc
xchg
lea
add
bswap
ret
in
or
data16
std
outsl
mov
adc
sbb
and
xor
add
les
or
or
es
scas
adcl
or
adc
xor
lret
lret
pop
pop
inc
les
stos
ret
add
daa
add
and
inc
stos
jmp
clc
cwtl
jl
cmp
sub
xchg
add
dec
jp
insl
nop
lds
adc
pop
rorl
arpl
lds
add
shll
sub
mov
jnp
insb
add
je
jbe
mov
push
in
push
in
dec
imul
addb
pop
out
push
test
or
mov
push
push
and
dec
jno
mov
loop
outsl
rclb
or
jae
data16
popa
or
pop
lods
nop
inc
dec
cmpb
mov
or
dec
sbb
movsl
jbe
ss
add
add
push
orl
dec
rorl
sub
dec
rorb
and
mov
rorb
jecxz
inc
and
sti
les
scas
cs
das
push
inc
and
cmpsl
shlb
lods
inc
out
dec
push
dec
dec
mov
dec
repz
lock
inc
mov
sub
xor
mov
and
test
pushf
out
fidivs
idivl
push
mov
pop
clc
or
push
sbb
or
testl
insb
sub
xor
adc
and
or
sub
sub
cmp
pushf
add
add
scas
dec
repnz
sbb
jb
sub
scas
inc
scas
jb
rorl
lea
sub
or
inc
pop
mov
and
or
xchg
fdivrs
stos
add
popf
dec
xchg
dec
sub
push
add
lods
add
inc
add
cld
add
or
xchg
pop
pop
pop
jne
sbb
push
mov
je
push
push
mov
adc
testb
das
repnz
mov
inc
jno
push
dec
dec
pop
push
cmp
cmp
out
jl
mov
enter
cli
adc
cmpsb
pop
lahf
inc
xorb
dec
mov
add
insl
push
rcl
dec
and
sub
mov
movsb
movsb
adc
fistpll
rclb
cmp
add
dec
push
pop
sub
ret
sbb
mov
bound
fnsave
push
pushf
or
loop
es
fwait
and
and
outsl
pop
pop
push
or
xchg
decl
sbb
insb
pop
pop
sbb
outsb
inc
sbbb
jae
xchg
flds
add
mov
sbb
mov
das
aam
sbb
ja
adc
out
push
lea
add
ljmp
mov
adcl
mov
pop
test
in
lea
add
es
das
bound
mov
outsb
push
sub
nop
dec
jne
adc
pop
adc
jp
ja
xor
sbb
xor
data16
pop
fisttps
sub
or
or
dec
sbb
sahf
dec
es
push
and
arpl
mov
mov
mov
nop
mov
mov
lar
mov
adc
cwtl
mov
xchg
mov
shrb
jae
jno,pt
mov
sarb
lods
add
enter
xchg
in
loopne
mov
dec
dec
das
inc
push
add
push
add
filds
in
pop
add
push
mov
enter
or
push
xor
sub
pop
rorl
mov
sub
sub
and
adc
xchg
inc
mov
testb
js
mov
mov
mov
mov
das
mov
dec
punpckhwd
mov
add
jno
fdivrs
repz
sbb
repz
int3
push
adc
hlt
push
xor
jmp
push
ds
ja
push
in
clc
fdivp
fdivp
mov
pop
add
sbb
push
mov
cli
mov
mov
pop
and
inc
aas
pop
rclb
xchg
in
or
pop
lods
and
dec
sbb
add
daa
cmc
cmp
and
dec
add
sub
mov
push
and
movsl
adc
lock
movsl
dec
push
and
xor
das
daa
das
and
adc
dec
fwait
sbb
popa
int3
test
cmp
movsb
test
or
xorl
and
outsb
inc
lods
lea
cmp
lret
cld
mov
inc
cmpsb
add
imul
mov
sbb
dec
inc
fildl
or
and
cmp
push
or
mov
iret
or
push
adc
adc
dec
xor
loope
ret
inc
in
loopne
add
push
js
inc
imul
mov
addr16
jne
xchg
sbb
lods
mov
adc
push
data16
or
lret
btc
push
ja
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
sub
lcall
adc
sbb
add
test
or
cmc
add
or
sub
inc
dec
pop
leave
stos
xchg
cmp
inc
push
sbb
imul
adc
sbb
sub
in
pusha
or
and
xor
sbb
sub
out
adc
and
add
xor
stos
inc
jl
cmp
push
rolb
sbb
nopl
dec
pop
jb
loopne
mov
cmpsb
insb
mov
and
add
push
aad
sqrtps
minps
rclb
jmp
push
cmp
push
je
add
jmp
xchg
sub
add
mov
inc
sbb
push
ja
daa
stos
and
cmp
fsubrl
push
jno
clc
insb
mov
imul
jno
xor
pushf
push
push
jne
movb
xor
popf
dec
push
rolb
jbe
xchg
cmpl
aas
pop
xchg
mov
call
and
push
ljmp
and
ja
mov
cwtl
imul
test
or
mov
in
jb
sbb
movsb
lods
outsl
pop
or
adc
scas
imul
push
mov
or
dec
mov
in
mov
stos
pop
sub
insl
mov
inc
sbb
sahf
push
test
out
push
shrb
cld
mov
or
or
ret
subb
cmpsl
inc
dec
mov
repnz
mov
lcall
fmull
push
cmpb
pop
rcll
pop
stos
xchg
add
pop
es
inc
rcr
jmp
inc
ret
cmpsl
xor
js
or
push
sahf
negl
push
int3
cmp
je
dec
adc
or
imull
fs
inc
pop
xor
call
xchg
jae
mov
or
nop
dec
xchg
or
mov
mov
sbb
push
faddl
ret
push
pop
aad
imul
inc
syscall
add
pop
ds
or
xchg
or
ficoml
or
scas
adc
stos
mov
xor
and
mov
les
push
sahf
rcrl
pop
shll
mov
mov
or
sbb
inc
mov
pop
ja
aas
xor
cmp
mov
push
popf
or
push
aad
jbe
stos
or
jge
repz
pop
or
push
inc
sbb
add
insb
call
pop
test
movsl
int
movsl
pusha
dec
es
jg
sbb
aad
mov
jo
inc
leave
or
sbb
adc
jp
push
cmp
pop
mov
push
pop
test
and
sub
and
xor
imul
lods
lods
jae
cmpsl
and
movsb
inc
mov
pop
enter
push
xchg
mov
push
nop
push
pop
fs
sahf
ja
sub
into
pop
cs
fs
negl
js
push
dec
push
rorb
out
sahf
out
mov
ljmp
pop
mov
test
mov
push
mov
sbb
mov
push
push
inc
inc
pop
push
js
push
out
mov
pop
rclb
push
loopne
cmp
clc
inc
mov
jns
jns
dec
push
inc
xchg
out
ds
xor
jo
arpl
hlt
add
andl
jns
fs
rorb
xchg
jle
cwtl
mov
cmc
and
xor
adc
sub
pop
mov
psadbw
sbb
es
cli
repnz
dec
leave
js
mov
xlat
leave
shl
repnz
sub
sbb
pusha
sbb
aas
nopl
mov
sub
scas
xor
and
or
add
add
xchg
in
mov
movaps
pop
sub
mov
sub
sub
into
mov
cvttps2pi
int
or
ja
sub
packuswb
add
pushl
bswap
lahf
loop
xor
bound
hlt
sysenter
add
lret
lahf
test
iret
ss
in
jge
fdiv
mov
insb
jae
repnz
stos
pop
mov
sbb
aad
mov
xchg
mov
or
cmp
jp
cmpsl
mov
pop
xchg
and
add
lret
and
xchg
xchg
inc
cmp
aaa
or
dec
ret
fsubrs
pop
stos
lret
sbb
or
xchg
cmp
add
mov
add
jbe
xchg
sti
lock
cmp
or
adc
pop
pop
lods
stos
sbb
stc
and
jg
pop
aad
push
mov
push
daa
aad
clc
lcall
sbb
insl
mov
gs
imul
xchg
sub
dec
jmp
loopne
repz
jne
xor
sbb
jne
fs
cmp
popf
xor
add
int3
push
mov
mov
pushf
or
fldt
mov
and
add
inc
aam
test
mov
add
mov
sub
shlb
aaa
sbb
roll
cmp
dec
lret
mov
inc
je
sbb
sbb
ja
popa
lods
and
mov
xchg
scas
js
add
rorb
add
fadds
pusha
and
sub
cmp
inc
outsb
dec
enter
subl
test
mov
xor
adc
lods
adc
pop
dec
dec
and
sub
cmp
adc
sub
addl
cwtl
loope
and
push
xor
pop
popa
xor
adc
enter
out
or
or
rorb
orl
pop
or
bound
inc
add
or
pop
inc
dec
inc
mov
fidivs
fs
and
xor
sbb
inc
dec
add
inc
fwait
inc
xchg
xor
push
add
add
mov
adc
xorb
lea
sbb
jnp
dec
test
push
insl
rclb
pop
adc
push
cmp
or
lds
pop
or
sbb
inc
push
mov
insb
mov
arpl
mov
fstpl
das
adc
lret
lret
fnstenv
xor
push
js
mov
filds
shll
xchg
xchg
xchg
xchg
mov
xchg
lret
xchg
hlt
sbb
cmp
push
aaa
mov
aad
mov
or
adc
inc
or
int3
add
mov
mov
adc
add
and
adc
daa
fs
cmp
outsl
mov
inc
xchg
bound
sub
inc
inc
xchg
and
or
test
aam
and
or
xor
sbb
xor
mov
add
adc
xchg
lock
cmp
and
adc
es
fadds
or
fisubrl
or
and
test
add
mov
mov
cmp
push
push
and
push
and
dec
test
call
les
adc
fnstenv
cmpsl
das
xchg
xlat
fucomip
adc
lds
push
dec
jnp
xor
cwtl
inc
mov
jnp
push
pop
les
and
jns
repz
push
cwtl
call
sahf
pusha
mov
add
negl
push
sub
aam
push
and
movsl
stc
sahf
insb
test
push
mov
jns
shll
push
loopne
clc
mov
ss
fidivrs
jnp
mov
jl
pushf
push
pushf
out
jns
jnp
push
test
and
jae
push
int3
outsb
outsl
pushf
xchg
sbbb
mov
dec
sbb
and
cs
push
stc
xlat
sbb
xchg
fmuls
stc
mov
imul
add
or
or
inc
sub
pop
mov
mov
add
pop
add
fisubl
aas
shll
punpcklwd
bound
lret
arpl
pcmpgtb
cmp
sub
xor
shl
lock
push
in
repnz
fmull
push
packssdw
scas
insb
fmulp
xchg
sub
add
outsb
add
xchg
jo
adc
daa
add
and
lds
inc
or
sbb
add
inc
cmp
cmpsb
je
jno
dec
cmp
je
movb
pusha
cltd
cli
jne
xchg
xchg
outsb
cmp
push
xorl
xorl
call
cmp
add
dec
mov
ja
dec
sbb
pop
pop
rorb
push
jno
test
cmp
sub
testb
or
mov
inc
pop
imul
pushfw
cs
adc
mov
mov
jns
clc
jbe
outsl
ret
movsb
sbb
sub
mov
inc
lock
mov
testb
clc
mov
dec
insl
cwtl
sbb
inc
adc
mov
pushf
xchg
out
sbb
adc
push
xor
cmp
push
mov
dec
outsw
or
pusha
stos
je
xchg
outsb
cmc
fucomip
orb
mov
sti
push
jmp
into
add
sbb
addl
sub
xchg
inc
js
sbb
xor
hlt
sbb
and
lods
fstl
mov
inc
push
repz
add
mov
and
or
rorl
les
pusha
dec
pop
pop
and
xchg
push
push
dec
pop
and
test
add
push
pop
adc
test
int3
insl
loopne
loop
dec
mov
pop
mov
insb
push
mov
jmp
stc
or
xchg
fildll
dec
outsl
xchg
and
and
mov
clc
sbb
and
xchg
loopne
pop
jge
xchg
and
and
in
adc
xor
mov
and
cmpsl
je
add
or
or
sub
sbb
inc
inc
aaa
push
mov
sub
cmpsl
mov
inc
cmpsl
sub
je
add
pop
adc
xor
mov
cmpsl
cmp
inc
aaa
push
cmpsl
cmp
cmpsl
in
adc
rclb
dec
dec
mov
daa
sub
dec
icebp
mov
fldl
inc
icebp
movsl
inc
add
push
inc
icebp
cld
insl
jbe
and
in
jecxz
js
inc
and
call
aam
add
mov
pusha
adc
add
adcl
shl
movsb
sbb
push
sbb
ljmp
lret
cs
or
lea
insb
xor
std
dec
testl
jecxz
and
in
push
hlt
and
pop
inc
out
inc
push
jnp
mov
out
mov
dec
enter
mov
call
imul
cld
es
cli
fidivrs
dec
lods
outsb
mov
dec
lea
lea
mov
push
rolb
in
in
fiadds
test
fadds
or
cs
in
nop
adcb
lock
cmp
push
fadds
insb
xorb
push
adc
mov
leave
das
sub
and
lahf
dec
push
mov
mov
fcmovne
hlt
addl
lret
shl
inc
lock
repnz
hlt
push
call
out
repnz
pop
add
xchg
mov
or
ret
in
push
mov
mov
mov
prefetch
dec
nop
je
mov
add
adc
dec
inc
add
repnz
test
stc
adc
add
in
inc
add
xlat
xchg
das
dec
add
add
push
dec
add
dec
mov
dec
mov
dec
ret
dec
add
in
out
out
fidivl
and
push
xor
data16
adc
adc
inc
cmp
inc
out
ret
ficomps
or
jmp
outsb
jo
lds
roll
jae
or
lcall
or
sbb
xlat
sub
sti
xor
or
roll
nop
sub
and
inc
outsb
fildl
jb
push
adcb
or
mov
lods
adcl
test
jl
push
pop
xchg
mov
pushf
push
xor
loopne
push
xor
or
popa
pop
test
add
add
mov
or
xchg
push
jmp
jo
fisttpll
push
push
and
test
add
cmp
jmp
inc
cmp
movl
add
push
or
pop
insl
dec
shll
cmovl
jno
xor
shrb
cmp
xchg
adc
jb
push
push
lock
ficomps
inc
dec
push
jno
js
mov
lods
push
dec
mov
popa
dec
mov
cmp
xchg
gs
dec
sbb
mov
lods
imul
jle
jo
imul
pop
lods
push
popl
outsl
mov
aad
outsl
mov
outsl
adc
pop
mov
push
add
test
xchg
inc
adc
add
push
daa
cmpsb
sub
add
les
adc
dec
jnp
hlt
cmpsl
add
repz
mov
call
cmp
nop
mov
pop
je
pop
repnz
insb
xchg
cmp
test
inc
xchg
pop
hlt
add
dec
loopne
pop
cmp
add
cwtl
pop
xor
lods
xchg
shl
cmp
xchg
mov
and
les
push
add
xchg
cltd
xor
addr16
pop
and
inc
mov
mov
add
sbb
xchg
mov
or
insl
push
add
ds
cmovns
repz
lret
filds
dec
add
add
mov
sub
ljmp
fwait
nop
dec
aam
in
repz
add
push
cmp
mov
bound
rol
pop
pop
call
adc
push
mov
test
stos
adc
dec
pop
xchg
movsl
sub
inc
sub
mov
xchg
mov
push
test
icebp
imul
rorb
xor
pop
jns
cmp
add
or
test
insb
or
push
addb
pop
add
les
je
lcall
mov
xor
cmp
inc
notb
xchg
xor
mov
nop
fnstsw
jp
mov
or
inc
push
test
adc
shl
sbb
jl
lahf
pop
jns
inc
inc
negl
pop
fdivs
daa
or
enter
clc
pop
in
in
leave
cwtl
stc
cwtl
xchg
clc
xchg
push
in
cmp
repz
in
mov
enter
xchg
add
sub
scas
nop
mov
pusha
xchg
pop
int3
xchg
sahf
cmpsl
jge
sbb
push
mov
mov
adc
lock
cwtl
out
jg
adc
add
loopne
adc
mov
mov
or
outsl
mov
test
lret
lahf
cli
in
add
pop
add
cli
shrl
lret
lret
lret
xchg
cli
mov
sti
push
hlt
adc
data16
sar
xchg
xchg
xchg
aas
popa
lret
cld
ds
jbe
xchg
xchg
xchg
cld
mov
jmp
pop
sub
jg
jo
xchg
cmp
std
mov
cmpsb
add
adc
pop
movsl
push
add
insl
enter
adc
sub
adc
push
sub
push
adc
fwait
push
jo
cmpsl
mov
xor
sub
fwait
stos
push
stos
test
push
ljmp
movsl
push
stos
popa
test
fwait
push
scas
aad
push
xor
push
jle
je
push
fwait
push
cmp
push
test
adc
ljmp
push
pop
cmp
jae
or
push
push
test
test
jae
sub
imul
mov
mov
jae
jae
test
rclb
test
decb
pop
test
adc
push
mov
or
push
xchg
mov
adc
push
or
stos
sub
imul
loope
jp
ja
adc
leave
mov
imul
inc
push
das
enter
xchg
inc
dec
lods
cltd
les
leave
mov
jl
das
inc
cwtl
pop
add
mov
add
xor
cmovs
push
push
add
add
cltd
das
push
nop
dec
push
dec
cltd
lock
das
jecxz
or
add
sbb
xor
out
or
push
or
into
mov
adc
sub
les
cs
decb
dec
add
mov
add
js
shr
add
imul
test
and
fsubrs
cmovge
addr16
jo
inc
lods
push
les
addr16
andb
sub
mov
cmpsl
test
sub
test
lret
cmp
sbb
ljmp
inc
gs
test
pop
inc
lods
jae
ret
add
mov
xor
cmp
movsl
dec
call
rclb
leave
orl
pop
addr16
push
cmp
les
or
push
jp
add
add
add
mov
sbb
das
das
pop
pop
aaa
data16
xchg
push
mov
shrl
int
movsb
xchg
mov
jo
jge
mov
es
test
or
das
and
xchg
cmpsl
pop
andb
mov
fwait
mov
mov
push
mov
xchg
pushf
push
call
cmp
inc
sahf
push
in
push
enter
push
xchg
icebp
cmp
popl
stos
adc
adc
outsb
ja
add
jo
add
ds
xchg
aas
shl
nop
nop
add
mov
sub
je
xchg
aas
ret
imull
push
cmp
pop
add
xchg
sub
lcall
or
add
sub
adc
prefetch
scas
mov
or
or
jbe
dec
inc
movntps
or
pop
mov
pop
inc
add
pop
ficoms
aas
cmovnp
jns
jge
shrl
cmovge
jg
and
push
push
or
inc
sub
dec
stos
adc
jge
js
push
adc
shrb
ret
push
je
fsubrs
pop
mov
or
push
in
add
ss
imul
sub
sub
sub
sub
jne
push
sub
mov
lods
mov
sub
add
push
inc
sub
mov
xor
sub
stos
inc
add
push
pop
faddp
and
mov
push
sub
xor
jp
mov
and
dec
adc
push
fadds
pop
and
push
cmp
ja
or
test
jp
movsl
imul
movsb
add
push
je
mov
adc
xor
jmp
push
push
xchg
push
pop
lcall
push
add
jae
stos
dec
outsb
push
pop
push
inc
jp
push
fsubs
mov
push
sub
or
inc
push
mov
adc
jno
mov
jae
and
and
adc
stos
dec
jae
jo
mov
es
insb
pop
xchg
rorb
dec
outsb
sub
test
dec
xchg
jo
adc
test
lea
rorb
pop
pop
pop
and
insb
pop
sbb
add
add
call
rclb
or
fwait
and
adc
or
mov
cmp
push
push
adc
insl
adc
xchg
cld
pop
cmp
mov
loopne
cmp
rcrl
hlt
push
movsb
sbb
cmp
jl
xrelease
repz
hlt
hlt
hlt
mov
dec
repz
jnp
xchg
and
movsb
push
rcrb
shl
fdivp
push
in
jo
xor
jl
cmp
pop
jp
xchg
xchg
mov
in
add
cwtl
or
in
movsb
push
aas
push
inc
xor
outsb
pslld
jle
push
add
repz
out
repnz
adc
hlt
jb
adc
wbinvd
jp
add
js
stc
adc
xchg
lret
lret
lret
lahf
xor
adc
lret
xchg
mov
cmpsb
dec
add
dec
inc
jno
sti
mov
add
aam
adc
and
adc
pop
or
jae
inc
mov
dec
dec
mov
dec
xor
sub
lea
sbb
jmp
dec
push
pop
push
sub
jmp
stos
aad
push
xor
push
stos
jmp
sub
mov
insl
jne
stos
scas
aad
sub
and
fildl
mov
scas
xchg
js
xchg
scas
les
push
pop
push
xor
stos
adc
stos
scas
dec
scas
inc
jno
stos
cmp
cmp
or
or
fstpt
test
sbb
cmp
jo
cmp
in
jne
sub
addl
mov
fisubrs
pop
dec
jae
sbb
adc
les
pusha
rorb
pop
lea
daa
jae
sub
push
les
ljmp
add
fucomp
pop
push
nop
or
or
pop
mov
pop
mov
cmpsl
add
push
sbbb
lcall
xchg
sbb
int3
negl
clc
push
nop
add
and
aam
out
jns
loopne
mov
push
pop
xor
loopne
pop
mov
dec
cmp
push
clc
cli
out
mov
inc
faddl
mov
out
jns
hlt
test
push
push
push
cmp
dec
out
or
dec
pop
push
inc
sti
push
mov
inc
push
push
jne
das
cld
repnz
pop
in
in
and
dec
sbb
mov
in
sbb
sbb
sbb
in
in
test
mov
out
sbb
sbb
in
in
sbb
sbb
sbb
sbb
dec
sbb
hlt
sbb
sub
icebp
push
sub
test
popa
xchg
mov
adc
pop
insb
je
dec
cld
shrb
dec
mov
sub
cs
mov
or
out
test
push
pop
push
cmp
mov
pop
push
sub
pop
lods
mov
pop
stos
ficomps
pop
pop
pop
push
sub
pop
pop
push
pop
lods
cs
ret
imul
pop
push
mov
pop
sbb
push
dec
pop
push
mov
mov
pop
data16
xlat
mov
subl
jae
lods
mov
jo
pop
fimuls
stc
jno
mov
pop
pusha
rolb
lods
cs
pop
jo
sbb
call
je
lods
jae
lock
pop
push
int3
pop
jae
or
pop
cmp
pop
js
pop
jae
mov
pop
insb
test
add
repnz
aam
insb
pop
mov
pop
push
adc
pop
mov
es
dec
adc
iret
daa
dec
inc
mov
mov
push
lret
cmpsb
and
insb
das
adc
mov
jnp
jnp
push
in
dec
push
and
push
jne
fbld
mov
or
fbld
das
bswap
scas
dec
scas
pushf
push
call
ja
push
shr
push
clc
push
adc
cwtl
loop
mov
push
pusha
scas
dec
loop
and
and
and
sbb
repz
pop
sbb
mov
and
frstor
add
jg
lahf
jmp
add
lea
cs
das
das
mov
and
stc
xor
or
bound
sub
or
ret
or
scas
push
out
prefetchwt1
or
das
jl
pop
and
xchg
and
and
in
in
and
mov
in
in
in
and
xchg
es
es
jg
inc
add
mov
daa
mov
pop
jg
jg
pop
mov
mov
scas
ljmp
dec
and
push
inc
pop
push
sub
rcll
mov
pop
insl
and
mov
rcll
sub
stos
push
imul
rcll
or
rcrb
mov
add
xor
push
imul
mov
rcll
lahf
sbbl
loopne
cmp
js
xchg
daa
mov
jecxz
and
mov
es
call
inc
adc
cmp
or
inc
loop
pop
adc
pop
xchg
xchg
daa
test
pusha
nop
faddl
and
pop
jno
mov
inc
jae
add
and
xchg
int
cltd
mov
daa
and
int
mov
adc
mov
jae
and
ret
fdivrp
pop
pop
and
mov
add
push
or
pop
stc
adc
lods
das
sub
imul
inc
sub
push
and
pop
push
repz
mov
mov
enter
add
add
addb
inc
inc
fsts
push
scas
mov
dec
mov
enter
les
cmp
xor
push
mov
nop
js
cmp
sarb
push
cmp
call
pop
fcoms
lahf
adc
jns
pop
inc
push
jg
add
xor
orb
add
bound
fisubrs
inc
or
xor
pop
pop
pop
pop
pop
sub
sub
pop
pop
push
sub
sub
sub
sub
pop
pop
pop
lds
sub
sub
pop
pop
test
cs
cs
pop
pop
pop
nop
cs
das
cmp
fstpt
jb
add
sarl
add
push
test
inc
cmp
imul
loop
es
andl
mov
inc
ret
sub
aad
push
and
sub
inc
push
sub
test
lods
inc
lods
mov
push
mov
mov
insl
adc
push
add
or
lods
inc
insb
push
inc
or
push
adc
pop
inc
push
movsl
inc
sbb
xor
mov
inc
pop
mov
push
xlat
movb
add
test
add
and
inc
and
fwait
inc
les
lea
les
addl
addl
inc
and
sub
sahf
inc
jne
adc
inc
addl
outsl
adc
or
inc
and
mov
inc
les
js
inc
jae
cmp
sub
inc
adc
les
inc
sub
inc
insb
inc
mov
sub
inc
nop
and
lea
and
add
test
inc
mov
xor
push
push
nop
cmp
hlt
xor
push
xor
inc
and
mov
mov
test
and
in
hlt
push
add
pop
stos
mov
rcrb
mov
xchg
pop
and
pop
cmc
loopne
insb
cs
loopne
sahf
notb
and
push
sbb
fs
jo
mov
mov
mov
leave
sbbl
xor
pop
xor
stc
repnz
xor
dec
add
or
mov
adc
mov
clts
add
ljmp
mov
test
inc
sysexit
cmp
icebp
pop
aad
xor
mov
ss
lea
ss
loop
mov
aaa
inc
jb
pop
adc
das
lods
aaa
jecxz
test
cmp
lods
push
das
push
cmp
imul
lock
loopne
fsubrs
or
ret
cltd
sahf
cmpsb
sub
inc
ss
and
push
adc
jae
stos
or
pop
pop
add
movsl
push
push
pop
push
sub
push
push
sub
loop
fisubrl
sti
ss
pop
insl
xor
lods
mov
adc
shrb
test
xor
dec
push
push
push
add
push
pop
lea
loopne
scas
xchg
dec
lock
bound
xor
sub
js
loope
push
sbb
mov
jno
adc
jo
stos
adc
or
cmp
or
jno
cmp
xchg
jp
adc
jae
testb
or
fs
xor
cmp
and
ret
loop
outsl
adc
jae
inc
mov
mov
dec
test
lcall
xchg
mov
andl
or
pop
or
adc
lds
bound
add
xchg
sub
inc
pop
cmp
dec
unpcklps
xor
pop
push
push
repnz
into
cmp
popf
shrb
pop
sbb
push
fdivrl
dec
jge
out
pop
mov
adc
mov
aas
cwtl
mov
in
mov
xchg
mov
int3
push
jns
jnp
dec
test
mov
out
aam
lahf
cmp
adc
mov
jno
out
mov
cmp
cmp
ficompl
mov
sub
mov
cwtl
cmp
cmp
cmp
mov
inc
cmp
mov
cmp
dec
ds
ds
aas
mov
aas
mov
inc
mov
inc
mov
inc
testb
mov
mov
mov
inc
and
in
sub
push
push
addb
xor
push
mov
inc
cmp
ss
mov
and
jae
mov
xor
inc
pop
dec
insl
adc
push
inc
pop
test
push
adc
push
mov
les
push
pop
add
sub
sub
pusha
mov
mov
sbb
push
xor
sub
add
and
and
or
mov
push
test
mov
test
stos
mov
mov
pop
jno
les
outsb
inc
sbb
sub
loop
jae
loop
and
jl
jo
push
sbb
out
sbb
lds
pushf
mov
subl
je
mov
mov
loop
inc
push
mov
mov
adc
insb
or
mov
adc
xchg
insb
mov
push
inc
rclb
pop
or
push
aas
mov
add
les
js
push
xchg
inc
aas
outsl
inc
adc
vprotw
ret
shrl
ret
adc
les
fadds
pop
fistpll
in
inc
push
sub
lods
push
push
xor
ret
das
jp
aam
out
in
and
mov
les
and
nop
je
adc
clc
inc
lods
mov
in
shlb
cmp
adc
xchg
hlt
dec
popa
inc
jg
add
xchg
mov
into
addr16
das
pop
inc
out
cmp
push
das
das
das
mov
inc
cmp
das
das
das
fs
popl
inc
in
inc
das
das
das
das
daa
inc
bound
inc
roll
das
das
das
or
dec
mov
das
repnz
sub
arpl
dec
inc
xorb
push
test
inc
call
cmp
adc
pop
test
push
lods
pop
lea
decb
mov
push
and
push
inc
jae
or
dec
cli
inc
xor
dec
inc
push
push
shrb
pop
ret
sub
aad
push
sub
inc
adc
cs
or
pop
insl
push
jp
test
mov
movb
sub
or
lods
mov
inc
push
pop
loopne
stos
adc
xor
inc
dec
sub
imul
scas
inc
and
imul
mov
inc
sub
add
add
jno
shlb
mov
jno
sbb
sbb
push
push
int3
add
adc
shlb
mov
cmp
inc
jo
pop
pusha
push
inc
pop
inc
add
mov
pop
test
mov
sub
inc
es
and
mov
js
inc
loopne
sub
push
inc
call
or
inc
out
or
inc
push
mov
subb
pop
lret
and
bound
dec
pop
dec
inc
adc
mov
js
push
sbb
push
aaa
dec
inc
cmp
dec
xchg
mov
xchg
mov
jl
iret
repz
push
or
je
and
mov
or
cmp
mov
icebp
inc
mov
add
cmpsl
jge
test
and
mov
adc
mov
daa
xor
jo
add
ja
adc
dec
unpcklps
repnz
jb
dec
in
in
inc
loopne
or
ss
in
in
pop
dec
mov
dec
fimuls
in
in
dec
xor
dec
xchg
dec
in
in
lret
dec
push
push
aas
push
ja
in
in
mov
ljmp
in
in
push
rclb
push
ds
push
or
roll
xchg
nop
inc
and
push
fisubrl
push
xor
mov
add
ljmp
cmpsl
ss
inc
jae
es
inc
ret
mov
xor
dec
push
stos
pusha
adc
rcll
inc
push
sub
dec
insl
inc
mov
mov
inc
push
jnp
push
adc
lods
adcb
push
push
adc
or
mov
xor
pop
inc
push
push
mov
scas
xor
mov
loop
inc
inc
imul
lock
inc
jne
xor
les
adc
push
and
inc
push
and
sbb
loop
inc
sbb
icebp
push
and
inc
stos
adc
add
inc
pop
or
jno
inc
out
or
adc
inc
stos
adc
or
inc
or
or
inc
mov
aad
cmp
xor
lods
inc
inc
out
test
inc
push
mov
add
test
inc
rclb
movb
or
les
inc
cld
cltd
mov
negb
rclb
adc
stc
pop
mov
inc
inc
cmp
cmpsl
mov
push
rolb
dec
mov
mov
clc
push
sbb
cwtl
push
insb
lods
pop
rcll
aam
and
icebp
or
rolb
push
repnz
adc
into
push
movsb
mov
iret
push
jl
push
push
js
fs
mov
push
int3
into
outsl
cmp
in
enter
add
xchg
les
mov
mov
push
setb
ds
push
inc
adcl
fsts
pop
pop
pop
add
push
push
push
adcl
push
push
add
pop
pop
pop
pop
pop
outsb
pop
test
pop
pop
pop
pop
pop
push
pop
lea
pop
lcall
pop
pop
pop
cmp
pop
stos
pop
loope
and
loopne
or
cmp
sbb
sbb
repnz
pop
stos
movsb
sbb
test
test
imul
mov
inc
pusha
mov
adc
loop
inc
jae
mov
inc
clc
inc
inc
lods
scas
orb
test
loop
push
fcomip
pop
insl
adc
lods
mov
inc
push
js
push
pop
test
les
lods
inc
inc
push
push
pop
test
or
push
pop
dec
mov
jo
loop
movsl
inc
aaa
add
sub
add
or
push
and
inc
push
or
or
inc
add
test
mov
inc
push
mov
push
push
inc
add
inc
fsubrl
les
les
sub
add
inc
fsubrl
les
jo
sub
add
mov
outsl
adc
push
icebp
inc
mov
inc
sub
les
lea
xor
inc
mov
inc
movl
rorl
fcmovnu
cmp
inc
pushf
xchg
add
push
add
adc
lods
imul
divps
cmp
inc
and
inc
xchg
iret
insb
les
push
or
lret
les
jo
cmp
cwtl
lock
scas
lods
leave
xor
sub
les
jmp
push
js
push
cmovbe
or
nop
pop
jb
sbb
mov
sbb
and
sub
sub
and
or
or
js
pusha
mov
lock
push
adc
dec
pop
mov
jb
cwtl
add
es
push
and
inc
push
stos
or
adc
icebp
dec
enter
popa
push
push
das
ss
str
add
les
fisubrl
jne
push
sub
in
push
adc
push
pop
cltd
inc
push
shrb
pushl
popf
neg
add
pushf
das
rorb
sub
sarb
pop
cmpsb
add
ror
fmull
je
sahf
adc
and
add
or
mov
or
js
add
xchg
add
adc
inc
outsl
jae
and
dec
rcl
loopne
pop
lahf
inc
lea
xchg
mov
pop
sbb
xor
cmp
xchg
lahf
insb
jnp
enter
bound
jl
das
cwtl
daa
insb
fdivrl
and
pop
addb
in
jecxz
mov
repnz
mov
xor
adc
mov
cli
inc
push
push
outsl
xlat
or
xor
addb
or
xor
aaa
push
popa
out
stc
push
mov
push
mov
push
pmaxub
push
mov
cld
shll
jae
dec
sbb
shl
pop
push
add
into
or
or
adc
inc
inc
loope
push
xor
or
mov
icebp
std
and
mov
and
lds
xor
or
gs
sbb
cmc
ret
imul
mov
adc
repnz
ret
mov
idivb
arpl
subl
or
pop
sti
xchg
mov
cmp
fimull
ds
inc
hlt
data16
jb
sbb
mov
int
cmp
lock
imul
add
lcall
imul
imul
sbb
jb
xorb
movsb
xchg
fs
mov
dec
add
jmp
pusha
fadds
add
push
cmp
add
inc
pop
inc
xorl
or
push
loope
mov
loope
bound
push
scas
and
adc
pop
lock
shlb
pushf
or
sub
jns
aaa
jg
pop
sahf
inc
pop
or
dec
pushf
je
inc
mov
cmp
in
nop
fucomip
cmpl
daa
add
loop
sub
inc
add
js
cmp
fildll
leave
xor
lcall
xchg
and
adc
xchg
inc
ljmp
loope
test
or
mov
movsl
cwtl
or
daa
push
xchg
xlat
add
arpl
lea
or
dec
add
push
xor
push
add
adc
aad
imul
lret
xchg
mov
stos
pop
add
imul
cli
imul
push
packsswb
mov
fiadds
push
stos
je
add
inc
add
and
jg
mov
daa
mov
push
mov
or
out
mov
sub
pop
adc
add
sub
icebp
cwtl
fisubrl
push
push
out
cmp
mov
push
add
or
pop
jl
nop
add
inc
add
lea
inc
nop
lcall
adc
scas
push
insl
insb
shlb
iret
insb
paddsb
mov
inc
add
adcl
adc
insb
stos
nop
stos
add
or
cmp
in
cld
stos
cmp
sbb
ret
xchg
je
sub
adc
jg,pn
sbb
mov
fisubs
clc
insl
dec
mov
push
jbe
add
adc
add
lds
push
stos
dec
cmp
mov
pop
and
lods
pop
mov
ret
outsb
cwtl
sub
ja
push
pop
fcmovnb
or
outsb
or
out
push
bound
xor
data16
fimuls
sub
inc
push
and
int3
addl
push
or
dec
int3
push
xchg
cmp
pop
adc
in
int
inc
push
push
out
lret
add
lret
mov
or
repz
movsb
push
loopne
int
or
ja
lret
aam
mov
sub
ret
pop
stos
xlat
and
ss
jo
lret
pop
xchg
jb
jno
dec
xorps
mov
and
or
mov
adc
mov
adc
ja
add
dec
pop
jmp
cmp
in
add
dec
in
or
pop
int3
and
inc
cmpsl
or
addb
cmpsb
add
cmp
rcrb
pop
insl
pusha
hlt
mov
ss
gs
data16
inc
shrb
adc
mov
push
pop
sbb
push
cmp
mov
notl
seta
call
add
test
sub
pop
cld
call
outsb
add
inc
loopne
add
je
mov
adc
add
cmp
gs
loope
inc
icebp
mov
xchg
loopne
and
pop
addl
inc
or
push
pusha
xor
pop
out
addb
out
sete
add
js
pop
jbe
jbe
inc
pop
fidivs
icebp
mov
icebp
pop
add
subps
das
push
inc
and
dec
push
cmpb
repnz
and
clc
add
inc
pop
add
adc
sub
or
jbe
mov
add
out
movsbl
jbe
addps
insl
or
mov
fcoms
xchg
inc
add
scas
adc
test
js
js
mov
cmp
mov
movsl
jb
sbb
mov
xchg
mov
dec
icebp
jb
mov
aaa
fcoms
js
push
imul
pop
mov
xor
sarl
mov
ljmp
loop
fdivrl
sub
xlat
inc
js
fistps
sub
jo
lock
fs
enter
hlt
out
add
push
imul
mov
push
lock
push
nop
pop
xorl
cs
fisubrs
out
out
adc
nop
pop
adc
xchg
xchg
sbb
xchg
lea
xchg
pushf
jns
and
and
insb
jl
pop
sub
mov
lahf
cmp
aas
inc
fs
movntps
mov
add
push
jl
jl
fwait
stos
add
jmp
sbb
cmp
inc
dec
sbb
jno
push
xorb
icebp
ja
push
jae
mov
or
ss
les
and
mov
add
in
jmp
fstps
mov
pop
add
movsl
push
or
data16
lds
mov
push
addb
jne
addb
loope
add
pushf
enter
fdivrs
jne
add
outsb
jg
or
fstps
jg
sbb
mov
sub
rcrb
and
adc
add
sbb
sbb
in
sbb
mov
push
jno
cmpsb
adc
add
scas
jg
aad
sti
xrstor
orb
cld
sub
jbe
jbe
push
jns
push
push
or
loope
sub
das
xchg
mov
mov
push
int3
add
pop
loopne
add
mull
divl
push
mov
push
inc
in
in
xchg
sbb
mov
sbb
xorl
das
push
push
mov
adc
jns
pusha
mov
jbe
and
jg
andl
inc
inc
xchg
adc
xor
and
and
nop
je
or
add
lcall
dec
scas
pop
and
and
add
test
adcl
mulb
fistps
dec
cmp
cmp
mov
mov
pusha
cmpb
lock
pslld
fs
subl
test
jb
xchg
dec
sbb
jns
xor
movsb
es
sub
scas
dec
mov
mov
aaa
bound
mov
adc
scas
xor
orb
sub
mov
gs
add
inc
popa
scas
adc
sbb
add
pusha
jl
mov
mov
ret
sbb
movl
pop
xchg
mov
dec
insl
or
mov
pop
bound
or
or
ret
add
or
xor
addr16
ret
popa
les
mov
dec
shlb
sbb
mov
push
mov
push
rorb
sub
or
cwtl
imul
push
sbb
push
data16
aad
ret
adc
dec
scas
call
add
add
aas
sub
dec
ficoms
inc
and
mov
and
out
dec
mov
dec
sbb
movsb
insl
sbb
addr16
inc
or
nop
push
das
cmp
cld
xchg
rolb
int3
aam
push
enter
and
das
push
es
scas
sub
in
add
add
xchg
aaa
das
das
das
scas
sub
add
xchg
xchg
xchg
sbb
jbe
syscall
add
stos
pop
cmp
dec
sysret
add
push
stc
or
js
add
stc
sti
sub
or
add
ud1
mov
adc
adc
jl
or
xchg
adc
adc
xchg
sbb
lea
imul
sbb
dec
cmp
ss
mov
lods
push
les
fdivrs
and
add
mov
fistpl
add
and
sub
push
inc
in
pop
clc
add
pop
add
mov
dec
add
lret
lcall
push
mov
or
jno
and
fs
call
adc
popl
adc
xor
add
add
dec
add
mov
adc
mov
mov
xor
push
in
mov
fdivs
mov
mov
in
das
adc
sub
stc
push
daa
je
add
shlb
push
popa
xor
scas
add
sarb
or
int3
or
in
or
and
leave
adc
inc
fsubl
in
ficompl
les
ret
nop
adc
ficompl
add
nop
push
das
pusha
inc
aaa
icebp
push
mov
pusha
call
testl
push
lea
in
repz
stos
inc
icebp
sub
mov
and
jns
jb
imul
sbb
mov
fcompl
fadds
or
mov
sahf
insl
lods
fnstsw
xor
jno
and
add
nop
adc
sbb
arpl
and
cmp
adc
add
pop
lods
cmpb
add
mov
xchg
add
pop
sub
stos
les
push
mov
xchg
popa
imul
add
ljmp
daa
aaa
or
add
cmpsb
pop
inc
insb
mov
loopne
mov
add
fdivl
dec
push
xchg
pop
adc
js
aad
add
icebp
mov
lods
lods
mov
xchg
inc
fmull
lea
mov
push
test
adc
xor
ret
sub
lea
push
jp
or
pusha
or
inc
imul
push
fbld
jne
pop
pop
or
lods
fnstenv
popf
add
xchg
sahf
xchg
roll
and
dec
inc
addl
jno
test
or
or
and
push
gs
cmpsl
mov
jmp
pop
insl
popf
add
mov
mov
fidivrs
or
in
push
js
mov
xchg
xchg
pop
add
push
sbb
pop
adc
stos
or
nop
jle
div
popa
xchg
xor
and
and
fcomp
xor
sbb
pop
or
sub
out
or
scas
pop
lahf
sti
test
mov
adc
add
xchg
pop
daa
aam
inc
sub
xchg
pop
outsl
lcall
cmp
iret
inc
xor
xchg
and
and
or
jp
inc
scas
adc
imul
xchg
cmp
je
adc
in
clc
and
mov
xchg
pushf
pop
orb
sub
pop
inc
leave
fsubrl
mov
jne
add
pop
fadds
popf
or
call
lcall
lahf
add
cmp
add
into
nop
push
add
idivl
pop
cwtl
push
stos
imul
imul
add
call
nop
int
fisubs
push
sub
lock
dec
imul
jl
xor
xor
and
iret
jnp
sub
shlb
mov
popa
cmp
cmp
fdivl
adc
cs
cmp
inc
or
jo
loope
and
lds
or
pop
test
outsl
jno
pop
roll
jge
add
test
push
loopne
jb
insl
bound
jo
xchg
push
cs
pop
cmp
xchg
push
or
pop
mov
pop
pop
mov
push
in
mov
jnp
add
sub
das
mov
push
incl
dec
xor
jo
pop
addr16
testl
clc
aas
add
or
jae
cld
or
adc
mov
cs
stc
ljmp
mov
pop
adc
add
or
cmp
in
daa
xchg
pop
test
push
hlt
fildl
dec
and
lret
adc
les
dec
pop
xchg
adc
cwtl
out
xchg
imul
inc
dec
jmp
xchg
add
hlt
jne
pop
jno
push
sbb
idivl
jg
jle
sbb
cwtl
lcall
pop
lcall
cmovne
fcomps
nop
test
sbb
jecxz
addb
cmpsl
or
lea
imul
or
arpl
xor
adc
mov
les
mov
sbb
je
push
cmp
inc
xor
aaa
pop
push
inc
mov
gs
push
sbb
fsts
xchg
rcr
sbb
xor
sub
sbb
mov
mov
sti
into
add
data16
fwait
or
push
mov
jb
pushf
movsl
sbb
ss
push
dec
pusha
roll
minps
mov
dec
mov
push
sbb
pop
mov
orl
adc
jno
mov
test
popa
dec
orl
add
jle
push
sahf
pushf
popf
dec
test
rcrb
pop
inc
outsb
xchg
pop
push
mov
cmp
out
jo
aad
push
iret
inc
push
push
pop
loopne
ds
aam
mov
xor
inc
xchg
adc
out
push
mov
mov
xor
out
enter
and
jbe
cmp
mov
push
js
pop
sahf
out
fisubs
cwtl
inc
sub
idivl
jns
clc
dec
add
sahf
fidivrs
inc
push
fsubrl
out
push
xchg
push
in
mov
clc
add
adc
lods
les
aam
jns
repz
dec
rclb
add
jnp
in
loopne
mov
lar
icebp
cmc
pop
cmc
and
sbb
dec
xchg
pop
push
xor
scas
test
push
jo
cmp
xor
jl
pop
addl
pop
in
mov
inc
test
lahf
pop
adc
fcmovnbe
das
loopne
xchg
mov
inc
mov
jmp
insl
cmp
das
xchg
in
mov
pusha
lahf
dec
popf
xchg
sahf
sbb
add
cmp
add
je
add
add
das
lret
add
and
mov
sbb
jo
pop
rorb
and
lret
lret
xchg
lret
mov
lret
lret
lret
lret
mov
loope
xchg
mov
cvtdq2ps
add
out
pop
inc
mov
mov
mov
inc
outsl
test
sbb
lea
out
push
push
pop
cltd
lea
cltd
lds
cmc
ret
add
sub
add
mov
or
inc
adc
into
inc
pop
inc
cmp
jmp
add
and
je
inc
adc
sub
adc
pop
popa
add
pop
aaa
mov
pop
push
lods
xlat
outsl
sbb
add
push
rclb
lds
cmp
js
jno
push
andb
pop
lds
lods
dec
push
xchg
or
push
out
add
and
add
test
movsb
xchg
sub
inc
lea
mov
inc
ret
adc
out
mov
add
test
int3
adc
dec
daa
in
push
cmpsb
enter
and
mov
mov
movsb
dec
les
adcb
cmp
sbb
dec
pop
mov
repnz
adc
orb
das
cmp
fisubl
pop
add
prefetchnta
pop
mov
jg
push
or
rorl
test
fnstcw
imul
filds
xchg
adc
nop
inc
test
dec
sub
mov
icebp
mov
sbb
pop
insl
inc
dec
xor
pusha
insl
sub
and
outsb
insl
pop
pop
pop
pop
jae
sub
pop
pop
int3
shlb
aad
imul
les
inc
insb
pop
add
pop
or
sub
aam
pushf
nop
pop
or
shrb
inc
mov
xchg
pop
lods
test
push
test
test
inc
test
add
movaps
pop
and
cmc
mov
cmp
dec
cmpsl
loop
or
cld
nopl
addr16
add
xlat
pop
pop
jb
lods
rorb
aad
pop
cmovl
cmovnp
test
mov
pop
pop
inc
mov
in
sbb
pmovmskb
xchg
and
int3
pmovmskb
inc
insb
fbstp
or
sbb
dec
sub
xchg
add
jno
cmpsl
add
aas
adc
mov
scas
push
loopne
inc
pop
scas
pop
mov
mov
mov
ds
rorb
inc
jo
cli
push
call
test
or
sbb
std
push
xor
or
mov
dec
pop
add
add
dec
pushw
sub
sbbb
or
push
xchg
cmc
mov
stos
out
or
cmc
psllw
jg
mov
testb
push
mov
jo
das
add
es
enter
pop
mov
or
insl
add
arpl
fistpl
mov
push
push
cmp
mov
sti
xchg
dec
jb
pop
mov
sub
dec
addb
fidivl
sub
loope
insl
jno
pop
push
xor
push
adc
jno
popa
push
jno
push
and
xor
nop
sub
rorl
mov
pop
push
inc
mov
push
outsl
lret
mov
roll
adcb
mov
jecxz
pop
xor
les
out
mov
movb
adc
fcmovne
xor
outsb
les
test
mov
cld
push
add
dec
pushf
or
shrb
or
mov
pop
or
pop
and
dec
popa
cmp
or
mov
mov
nop
pop
mov
sub
and
jl
lods
jl
xor
sub
fimuls
std
cmp
roll
test
mov
or
pop
hlt
add
add
or
or
add
jl
cmpsl
cmp
sti
pop
loopne
mov
rorb
and
xor
mov
std
shrb
pop
push
jb
mov
es
mov
push
mov
and
lahf
test
or
sub
mov
lods
lods
jae
mov
lahf
dec
aas
pop
mov
pop
push
cmpsl
mov
mov
push
push
test
frstor
out
lds
adc
fsubrl
roll
rorb
fs
mov
inc
fwait
or
les
clc
jno
add
inc
mov
movsl
cmpsl
sub
cltd
or
sub
add
adc
sbb
pop
mov
pop
push
sbb
cmp
sub
and
out
lea
pop
or
addb
vmxoff
add
aaa
cwtl
sarb
add
push
lock
push
rcpps
cs
popa
push
add
mov
pop
pop
shll
mov
add
xchg
mov
xlat
daa
cld
pop
addl
pop
lods
push
mov
push
inc
and
inc
add
arpl
test
arpl
adc
cmp
jbe
mov
sbb
ret
push
addr16
dec
mov
addl
xchg
pop
fwait
mov
das
add
inc
andb
xor
pop
fwait
xchg
pop
push
pop
daa
adc
lds
mov
inc
add
adc
add
pop
jne
test
arpl
sbb
pusha
orb
jo
sbb
test
out
ret
sbb
lock
inc
das
cld
adc
cmp
iret
add
mov
pop
xchg
mov
jecxz
add
add
aad
mov
out
or
or
dec
xchg
enter
adc
mov
inc
clc
insb
or
or
mov
imul
xor
jb
add
movsl
push
lea
pop
dec
cmpsb
shl
pop
inc
inc
add
dec
mov
add
mov
jno
xor
aas
fs
sbb
insl
test
push
add
cmpsl
xor
mov
rcll
subb
adc
ret
mov
movl
cmp
mov
mov
xor
lahf
cmp
push
inc
adc
mov
or
xor
pop
jo
push
inc
jo
or
or
cs
pop
mov
inc
jo
paddb
loopne
add
adc
xor
negb
sbb
mov
mov
cmp
fiaddl
mov
or
mov
add
sub
inc
inc
das
pop
cmpl
mov
in
mov
loopne
mov
pusha
inc
or
sub
mov
and
loope
mov
test
movsl
mov
loopnew
jp
mov
add
mov
add
cmp
adc
xchg
sub
pop
sub
inc
and
aas
test
xchg
fs
stos
pop
mov
mov
xor
pop
mov
dec
iret
das
in
rclb
loop
stc
sarb
or
psrld
xchg
and
mov
icebp
add
enter
rol
add
and
pushf
shrl
hlt
fadd
stos
arpl
icebp
jno
dec
dec
or
loopne
push
ja
add
fidivl
push
add
and
push
pop
imul
into
icebp
ss
lds
ret
shlb
pop
ja
push
mov
push
icebp
out
jle
push
mov
push
ret
pop
pop
pop
pop
mov
mov
les
pop
pop
dec
les
les
pop
sub
pop
scas
mov
pop
lds
mov
mov
dec
jo
fsubrs
rcll
adc
mov
pop
mov
inc
cwtl
lds
push
xor
fnsave
fs
cmp
dec
fs
add
sbb
jae
push
js
fiaddl
sub
test
jb
xor
push
repnz
push
or
sahf
inc
and
push
adc
jle
mov
mov
lds
add
adc
sbb
pop
addr16
mov
add
rep
rorb
stos
cmp
jne
insl
push
test
adc
es
sub
mov
or
push
in
pop
or
test
push
in
lcall
add
push
jecxz
mov
jo
add
dec
adc
out
ja
movl
lahf
icebp
adc
xor
mov
add
pop
push
mov
dec
inc
adc
ja
leave
or
fwait
and
outsb
addr16
das
mov
or
test
enter
xor
fdivl
push
jo
das
pusha
enter
push
dec
and
inc
movsl
pusha
mov
rcrb
mov
cmpsl
dec
adc
faddl
jecxz
sub
mov
or
clc
mov
mov
lods
mov
mov
xchg
dec
push
insb
leave
xor
inc
mov
add
cwtl
adc
mov
into
or
adc
mov
add
add
push
xor
and
pop
adc
mov
popa
pop
or
and
add
mov
mov
mov
fildll
or
adc
fsubrp
es
das
scas
push
adc
pop
and
add
sbb
mov
add
add
push
pop
ljmp
insl
add
adc
cmp
xor
mov
or
pushf
dec
int3
sub
dec
push
nop
xchg
pushf
sbb
insl
add
push
lock
in
add
sbb
xor
cmp
jno
int
cmp
nop
scas
push
push
sub
fldt
cmpsl
insl
fldt
in
adc
xor
push
loopne
push
cmp
add
clc
enter
lea
dec
cli
or
xor
sub
or
add
rclb
add
das
dec
out
loopne
and
iret
jns
in
stc
push
ret
mov
jb
xor
sbb
cmp
jns
std
dec
roll
cmp
shlb
jle
dec
inc
sahf
pushf
jmp
shll
and
dec
mov
test
daa
daa
pop
cmpsb
add
les
dec
sub
pop
pop
das
add
ljmp
int3
push
enter
adc
add
dec
push
push
xor
test
mov
shrb
pushf
jge
lahf
mov
out
sbb
pop
push
mov
rcr
sub
sbb
adc
jo
push
bound
rcr
xor
xchg
push
or
mov
mov
jo
push
sbb
xchg
push
and
jmp
aam
add
dec
cld
xchg
dec
in
inc
xor
adc
mov
push
lds
pop
lcall
mov
daa
lcall
push
jo
std
xor
or
dec
dec
or
mov
or
xor
pop
add
or
sbb
push
test
or
addb
xchg
push
outsb
orb
idivb
and
je
or
sti
fldenv
dec
add
popa
inc
nop
xor
movsb
movsl
xchg
dec
add
sub
call
insb
and
add
ret
dec
mov
add
outsb
jb
mov
add
mov
inc
sahf
gs
adc
adc
inc
cmp
mov
pop
and
ja
insb
add
in
mov
or
add
nop
xchg
dec
or
rorl
fcoml
aam
sbb
hlt
inc
adcl
mov
xchg
je
sbb
je
mov
or
addb
rclb
xor
test
shrb
sbb
dec
movsb
push
test
inc
rorl
test
or
mov
mov
notb
push
or
pop
xlat
das
lds
push
icebp
and
cmp
sti
xor
movsl
cs
mov
push
jge
jns
in
push
cld
mov
or
adcb
leave
in
loop
bswap
mov
sbb
sub
cmp
sub
push
imul
into
pop
pop
xor
std
xchg
jp
push
fcomp
sub
out
mov
mov
je
arpl
aas
add
push
fldenv
in
in
scas
flds
fisubl
pop
in
fisttpl
or
es
xor
fcomp
stc
mov
push
adc
cmpb
jmp
xor
ja
adc
ficoml
dec
push
mov
int
add
push
iret
push
push
inc
andb
fisubrs
cltd
jns
test
iret
shrb
orb
pusha
mov
adc
jo
iret
cltd
nop
push
or
iret
insl
les
aad
or
iret
es
stos
mov
sub
iret
in
movsb
stos
mov
or
mov
sub
into
add
and
iret
inc
adc
jb
iret
jmp
or
push
jmp
pop
das
sbb
cmpsl
and
pop
fcoml
xor
iret
fildll
mov
push
sub
sbb
nop
xchg
inc
and
inc
jle
in
sub
jg
dec
femms
cld
out
jle
inc
test
mov
and
clc
sub
sub
inc
loop
aam
mov
frstpm(287
sub
in
fidivrs
fildll
rcrb
add
inc
dec
insl
dec
cmp
fists
pop
leave
or
dec
cmp
mov
pop
je
push
inc
pop
xchg
mov
inc
xor
pop
pop
pop
lds
adc
dec
sahf
dec
loopne
not
fwait
adc
loope
loope
out
push
pushf
mov
ret
clc
lods
nop
inc
cmpl
scas
add
adc
lods
fnsave
adc
stos
add
enter
loop
loop
cmovge
shl
sbb
mov
ja
in
hlt
pop
pop
dec
loop
push
sub
decl
dec
adc
call
pop
bound
dec
xor
pop
lds
inc
cmp
sbb
mulb
and
test
cmpsl
test
mov
mov
shrb
fs
mov
mov
mov
pop
xor
or
sarb
insb
das
clc
push
or
inc
or
loop
iret
or
push
push
inc
push
lock
int3
idivl
jnp
push
in
shlb
repz
and
adc
push
test
subb
mov
das
das
das
pop
cmc
and
xor
in
das
das
das
in
in
in
in
adc
das
lahf
in
in
jg
lret
pop
ud2
add
lret
or
xlat
cs
mov
adc
and
pcmpgtw
add
aam
inc
push
adc
pop
addl
adc
insb
out
mov
insl
push
pop
sbb
insb
insl
and
push
add
add
imul
mov
loopne
or
js
insl
fldt
and
and
insl
sbb
push
imul
xchg
inc
or
insl
je
or
push
mov
insl
xor
mov
or
push
insl
orl
sbb
cmp
outsl
in
xchg
out
or
sbb
mov
push
sbb
repnz
das
inc
test
lret
sbb
mov
dec
aam
clc
movsb
daa
and
test
movsb
cmp
lods
mov
push
xor
ret
sahf
xchg
cmpsb
add
or
stos
sub
pop
mov
repnz
imul
jno
jge
mov
push
and
inc
xor
push
enter
aaa
push
sbbb
adc
dec
inc
lcall
add
xchg
fsubrs
mov
daa
lret
inc
ficompl
adc
sub
mov
and
sbb
or
sub
inc
inc
dec
int
ret
fs
addr16
adc
cmc
data16
lret
clc
stos
enter
sub
nop
iret
test
in
jno
shll
sub
dec
movsb
imull
or
aam
mov
stos
xchg
movsb
cwtl
jbe
push
pop
leave
sbb
xchg
dec
and
jne
add
or
roll
hlt
or
cmpb
pop
push
nop
pop
xor
mov
or
xchg
in
js
in
mov
adc
ret
fdivrl
adc
xor
adc
shlb
push
movsb
das
inc
pop
rolb
in
loopne
pop
jle
push
xchg
data16
jp
adc
add
cmpsl
ja
push
xor
push
or
mov
pop
mov
cs
add
mov
dec
xor
sub
mov
in
xor
in
jle
and
rorb
sbbl
movsl
vunpcklps
sub
sbb
dec
adc
cmp
xchg
sbb
shlb
repnz
enter
push
sub
mov
cmpl
cli
call
jnp
out
das
or
jo
add
adc
loopne
sbb
mov
out
fildl
cmp
mov
push
mov
dec
hlt
inc
lcall
push
cwtl
dec
mov
mul
ret
les
shll
push
sbb
rorb
mov
mov
rorl
aad
adcb
daa
lock
sarl
in
pop
nop
add
ja
imul
xchg
and
ja
sbb
xorb
mov
nop
ror
fcoms
inc
pop
into
std
sub
push
test
push
sbb
pop
xchg
jp
lock
or
jmp
xchg
push
pop
aam
inc
in
fdivr
mov
insl
push
cld
pop
rcrb
shrb
and
xor
pop
push
jo
ret
sbb
inc
inc
adc
push
jno
sub
mov
adc
in
insb
movsl
sbb
fs
jbe
mov
sbb
inc
out
cmp
xchg
add
mov
inc
mov
or
or
roll
dec
xor
inc
add
add
aaa
cwtl
sub
dec
xchg
rclb
jge
xor
fidivrl
movsl
push
pop
hlt
lcall
rolb
iret
pop
push
adcl
test
loopne
cmp
notl
ret
loope
mov
add
ret
xchg
into
cmc
test
xchg
pop
push
xor
stos
sub
cmpxchg
sub
fdivl
pop
or
and
adcb
sti
jae
loopne
and
adc
js
add
sub
lock
roll
or
lock
in
lock
pop
shr
sub
repnz
lock
fsubl
add
test
jg
outsl
or
imul
sbb
push
sbb
or
pop
loope
push
movsb
mov
adc
outsl
bound
add
dec
andl
lds
xlat
jmp
add
aaa
and
je
jge
push
mov
std
test
push
xorl
add
adc
jg
mov
pop
movsb
arpl
sub
and
mov
cld
cmp
xchg
sub
scas
enter
xor
imul
inc
test
outsl
les
nop
ret
dec
mov
fdivl
nop
bnd
shrb
icebp
inc
jmp
add
mov
xchg
mov
daa
into
pop
rcr
push
xor
sbb
or
or
enter
lahf
test
fadds
cmp
in
push
inc
test
mov
ret
mov
or
lea
mov
pop
add
inc
adc
or
xchg
and
push
ficoms
bnd
pop
pop
cmp
aad
or
sbb
pop
pushf
or
clc
inc
push
and
mov
rcr
cmp
popa
dec
cwtl
stos
sbb
sbb
xor
cs
loopne
inc
adc
fiaddl
mov
mov
add
rcll
add
pop
add
xor
push
and
movsb
dec
dec
rcr
fcoml
inc
mov
cmp
or
adc
lcall
mov
out
popa
pop
outsl
push
add
fidivs
adc
or
push
inc
fnstsw
insb
add
daa
inc
cmp
inc
pop
aaa
ret
insl
adc
adc
adc
mov
sub
jecxz
xor
xor
test
outsl
mov
pop
mov
pop
or
sub
stc
or
mov
out
jne
sbb
je
cmpsb
add
les
cs
repnz
aad
dec
subb
jae
inc
sub
subb
dec
lret
mov
cwtl
dec
fistpl
add
es
cltd
dec
pusha
xchg
ret
in
inc
inc
or
xor
movsb
push
and
sbb
adc
outsb
mov
push
gs
xor
sub
hlt
pop
inc
cmp
cmp
sub
ljmp
hlt
mov
add
aas
mov
out
push
push
and
pop
loope
sub
push
inc
leave
pop
sub
add
insl
adc
sbb
push
sub
xchg
aam
mov
xchg
push
adc
and
mov
xor
push
ja
add
lods
or
push
jns
test
mov
sbb
pop
adc
stc
les
xchg
cmp
sbbl
hlt
aaa
xchg
inc
sub
and
or
pop
aas
aam
mov
test
das
xchg
and
inc
xor
stos
add
xlat
mov
imul
gs
pop
fcoms
mov
add
sti
pop
leave
add
lods
sbb
test
mov
add
cmc
popa
xor
xchg
and
adc
clc
lahf
mov
jge
and
xor
sbb
pop
shrb
adc
add
add
pop
cmpsl
aaa
mov
loopne
pusha
mov
bnd
lret
fldl
sbb
nop
mov
xchg
das
xor
sub
mov
in
mov
and
pavgb
pop
loope
mov
add
lahf
sub
or
adc
sbb
mov
sahf
inc
fwait
sbb
sub
call
sbb
fsubrl
adc
sbb
cs
add
subl
mov
cld
out
dec
or
test
lahf
or
andb
mov
xchg
loope
imul
inc
and
flds
leave
sar
daa
in
push
sbb
in
fcmovnu
bound
ss
mov
lds
cld
rcrb
sbb
das
mov
inc
imul
add
push
ja
dec
dec
lcall
aaa
or
or
cmp
add
mov
insl
lds
sbb
adc
aaa
call
or
mov
push
sarb
insb
add
pop
bound
cmc
es
imul
aam
test
pop
sbb
push
fmuls
stc
aam
out
add
ffree
and
iret
sbb
das
sbb
jl
lock
loope
sbb
mov
pop
mov
inc
mov
jg
rcl
inc
dec
cmp
pop
orps
mov
adc
mov
adc
in
mov
int3
mov
test
hlt
out
decl
adc
mov
pop
adc
fmuls
repnz
add
or
add
clc
in
adc
cmp
add
mov
xchg
xchg
lret
mov
inc
cmp
or
jne
addr16
addl
in
clc
sbb
imul
shl
push
fists
ret
dec
and
pop
rcl
scas
add
add
sbb
or
or
push
add
inc
inc
hlt
xchg
dec
mov
cmp
xor
jno
cwtl
aam
inc
push
in
addr16
and
push
sub
jp
shll
pop
mov
sub
mov
xor
cmp
dec
rcrl
or
fadd
jge
aaa
cwtl
dec
adc
or
je
adc
pop
sbb
cltd
mov
jbe
fwait
jecxz
pop
shlb
bound
in
adc
adc
add
and
cmpl
fwait
pop
and
fmuls
in
push
sbb
lds
or
xchg
inc
sub
lock
in
adc
hlt
push
push
dec
mov
popa
lock
inc
loopne
flds
jg
add
adc
std
into
add
imul
cmpsl
xor
pop
pusha
shr
lock
pop
call
pop
pop
inc
mov
cmp
or
nop
mov
mov
xchg
aad
clc
jge
mov
add
mov
mov
dec
pop
enter
adc
mov
xor
xchg
js
and
push
mov
dec
mov
xorb
out
mov
mov
xor
negl
cmp
push
nop
es
lea
jg
hlt
pop
loopne
and
pop
aam
ds
repnz
mov
in
lea
mov
addl
stos
or
movb
xchg
rcl
cmp
add
mov
push
xlat
imul
les
sbb
and
inc
ds
cwtl
cmp
or
cli
add
rorb
inc
ss
fs
pop
sbb
cmp
js
lods
lret
sbb
push
inc
and
and
xor
imul
int
dec
roll
push
inc
inc
xchg
push
inc
and
sbb
cmp
mov
or
rcrb
xchg
gs
gs
pop
cmpsb
movsl
xlat
gs
sbb
add
fisubl
or
mov
xchg
jno
lock
mov
mov
fsub
push
jne
ret
je
loopne
mov
nop
adc
fsubrs
je
ret
jmp
sbb
stc
insl
int3
test
bound
adc
inc
inc
out
sbb
pop
lock
call
push
adc
and
dec
or
xorb
lods
cmp
fstpt
lock
jge
or
clc
cmp
adcb
out
or
dec
sbb
clc
mov
loope
mov
movsb
and
dec
adcl
sub
stos
orb
pextrw
inc
add
or
jmp
mov
imul
iret
mov
push
aaa
pop
cmpb
ret
push
mov
addr16
dec
mov
clc
js
nop
xchg
loopne
inc
add
add
mov
orb
adcb
loop
loopne
or
or
pop
leave
xor
outsl
rcl
sub
pop
jmp
mov
loopne
cmp
push
pop
sub
pop
ret
loop
adc
sbb
addr16
clc
or
push
scas
loopne
pop
inc
and
pop
and
push
addl
adc
cmp
sbb
fsubrs
mov
mulb
lock
and
in
add
loope
sbb
push
mov
dec
mov
and
jae
rclb
rorl
jae
ljmp
ret
inc
and
fcoml
push
outsb
fdivrl
jmp
in
minps
xor
cmp
xor
and
inc
frstor
jmp
push
pop
push
or
fwait
test
inc
inc
cs
add
scas
ret
inc
mov
pop
xor
push
call
rol
push
lods
daa
cli
lahf
and
movsl
mov
add
or
pop
shlb
ret
daa
and
push
or
ficompl
and
and
cmp
movsb
inc
clc
rcrl
or
xchg
add
dec
adc
jp
pop
ror
push
iret
mov
sbb
push
xchg
xchg
sub
sub
shll
sbb
mov
arpl
mov
mov
mov
adc
mov
push
arpl
andl
dec
add
inc
mov
fists
fisttps
xchg
mov
add
sub
rol
int
jne
adc
mov
cmp
loope
mov
xor
movsb
call
mov
dec
push
cmc
mov
rorb
fstl
cltd
push
xchg
mov
in
int
rcrb
and
sub
test
test
xchg
adc
stc
cmpsl
and
xor
mov
out
sub
sbb
mov
ja
mov
dec
pop
aas
mov
add
dec
add
adc
xchg
pop
sbb
call
mov
push
popf
in
mov
pop
ret
idivl
push
pop
shl
jle
inc
pop
inc
cs
push
or
sbb
push
fidivl
aas
sbb
out
ja
inc
pop
xor
mov
xchg
rolb
insl
dec
bound
pop
movsb
mov
or
xorl
xchg
push
push
popa
pop
mov
add
adc
and
mov
imul
jo
lcall
or
mov
jb
jo
add
ja
inc
sub
mov
aaa
or
mov
test
cmpl
bound
adc
inc
dec
dec
and
mov
xchg
add
cmpsl
or
popa
adc
loope
cmp
adc
xlat
lods
arpl
fldt
pop
add
call
xor
adc
mov
xchg
out
add
cwtl
xchg
sbb
leave
and
sub
adc
adc
or
cmp
fcomps
lahf
frstor
push
fsubs
pusha
inc
inc
shll
mov
mov
outsb
adc
add
xor
push
add
and
add
jp
mov
scas
out
push
add
adc
xor
das
fwait
js
mov
adc
adc
lret
call
sbb
sbb
push
xor
aam
inc
movsb
es
or
inc
pop
and
stc
mov
jecxz
hlt
add
jns
daa
cmp
imul
jns
sahf
scas
rcl
xor
out
repz
adc
iret
aaa
dec
pop
push
mov
repz
scas
mov
iret
repz
std
or
sbb
push
push
je
in
cwtl
or
dec
cmp
xor
repnz
cmp
repnz
xor
cmp
adcb
cmp
xor
inc
sub
enter
xor
inc
rcll
leave
test
or
mov
cmp
in
sbb
mov
push
pushf
cmp
clc
cmp
call
jp
je
iret
and
pop
mov
ss
or
inc
or
enter
fcoms
or
sbb
cmp
inc
or
mov
mov
xchg
cmp
pop
and
cmpl
add
adc
mov
adc
xchg
imul
push
sbb
xor
retw
inc
or
pop
pop
mov
iret
shlb
daa
push
cmp
or
pop
dec
cmp
adc
test
into
rorb
adc
push
mov
adc
inc
pusha
data16
out
fadd
iret
mov
andl
xor
inc
aas
cmp
mov
sbb
dec
pop
inc
pop
cmp
sbb
sbb
mov
xor
je
adc
ja
cmp
add
sbb
aas
sub
ds
jp
xor
fs
insb
ljmp
imull
test
nop
and
cs
test
data16
xchg
and
outsb
sub
sbb
or
xchg
adc
filds
mov
or
pop
leave
xchg
add
and
enter
in
jmp
dec
or
cmp
je
mov
movb
pop
pop
sbb
aaa
adc
jns
sub
pop
mov
rorb
dec
xor
push
mov
pop
dec
or
or
mov
jne
das
or
sbb
nop
xchg
push
or
loop
push
sbb
daa
push
cmpsb
mov
xchg
pop
sub
addr16
xlat
sub
sbb
cld
and
push
push
sub
push
sub
pop
mov
or
dec
xchg
mov
decl
inc
cmpsl
xchg
mov
lret
out
adc
lock
cld
jo
and
test
out
and
and
mov
je
sbb
xor
push
cmp
repz
lcall
repz
add
adc
xor
jnp
out
sbb
pushw
ja
cmp
repz
stos
mov
fdivp
xlat
mov
push
outsl
pop
add
inc
add
clts
sbb
or
movsb
adc
nop
mov
int3
nop
or
nop
in
fs
cs
and
xchg
pop
js
dec
xchg
shlb
fs
adc
inc
xor
xor
and
xor
mov
mov
in
jns
stc
push
jmp
sbb
imul
dec
dec
push
aas
test
mov
push
mov
push
mov
xchg
call
rcrb
fs
leave
addl
imul
pop
out
pop
inc
test
pop
aam
and
out
push
adc
or
inc
nop
mov
out
subl
mov
fisubs
sub
enter
das
xor
xor
stos
inc
adc
sub
pop
adc
loopne
and
inc
aaa
cmc
pop
pop
cmpsb
pop
add
pop
add
push
sbbl
lods
inc
pop
call
sbb
and
aaa
mov
push
lock
sbb
orl
jg
sub
fidivs
adc
add
pop
add
inc
pop
sbb
outsl
push
push
pop
in
es
lcall
aaa
inc
push
sub
jnp
adc
test
xchg
cltd
add
xlat
xor
ud0
add
mov
push
dec
mov
inc
mov
das
xchg
and
lcall
popa
jmp
sbb
or
sbb
sub
pop
aas
mov
cmpsl
sub
int
call
dec
or
repz
add
out
mov
pop
xchg
addr16
pop
out
and
mov
pop
mov
adc
sbb
adc
sbb
add
and
pop
out
and
sti
inc
and
push
std
enter
out
inc
repnz
cmpsb
xor
pop
add
xchg
in
pop
inc
and
adc
outsl
cltd
es
test
mov
or
les
popf
mov
movsb
xor
scas
fistpl
jl
push
nop
push
cmp
adcb
hlt
sti
ret
and
push
fmull
add
inc
fisttpll
adc
add
add
inc
or
mov
inc
cltd
pop
sub
aaa
dec
jl
xor
sbb
adc
aam
lahf
pop
adc
or
push
mov
xor
popa
xor
lods
pop
pop
or
orl
ret
aam
leave
adc
or
jmp
lahf
imul
lock
sbb
subb
xor
pop
movsb
sbb
mov
and
xor
orl
mov
xor
xchg
les
hlt
sbb
or
ret
sbb
adc
adc
das
inc
sbb
mov
out
mov
xor
mov
mov
add
loope
sub
shrl
leave
in
sub
addr16
dec
fmulp
inc
mov
std
sub
push
daa
add
cwtl
outsb
iret
sbb
ja
ret
sarb
mov
adc
outsl
add
mull
xchg
inc
mov
and
ret
pop
mov
mov
push
adc
arpl
and
sbb
push
push
sub
add
pop
ss
mov
daa
subl
nop
pop
or
sub
or
rcrb
bound
adc
lret
mov
cmp
jb
or
incl
call
inc
jmp
push
or
popa
push
sub
or
add
lods
pop
into
in
xor
sub
dec
and
mov
stc
or
ss
xchg
dec
fildll
in
lcall
push
jmp
cltd
sbb
arpl
or
fs
out
sbb
adc
mov
dec
adc
psrlq
sbb
lds
faddl
insb
mov
fs
dec
cli
mov
mov
test
sub
mov
jnp
popf
xor
add
or
or
icebp
pop
cmp
ss
or
adc
movsb
inc
mov
inc
lock
int3
push
add
lret
popa
cmp
dec
mov
jl
add
mov
pop
addl
outsb
shl
in
rcrb
xchg
pop
cmp
push
pop
shll
notl
roll
scas
je
in
outsl
jnp
nop
pop
mov
or
push
or
or
scas
push
lds
adc
and
fisubl
inc
jmp
sbb
aam
ja
cmpsl
xchg
mov
data16
cs
inc
xor
daa
or
pop
insb
lds
div
leave
add
inc
or
sti
jecxz
mov
outsl
sbb
test
int3
and
and
subb
das
clc
das
lcall
cli
mov
std
stc
fldt
or
inc
xor
add
xor
ret
sahf
mov
inc
sub
adc
outsb
repz
roll
add
loopne
testl
pop
daa
mov
sub
pusha
add
aam
or
mov
pop
cmp
jg
mov
xor
adc
insb
xor
adc
inc
lcall
dec
push
scas
xor
inc
loope
add
aas
daa
adc
dec
dec
scas
insl
bound
mov
stc
daa
movsl
or
pop
pop
jle
lds
xor
std
add
sub
push
jmp
xor
fildl
push
call
push
adc
sbb
rcll
loop
add
andb
dec
pop
ret
jmp
or
leave
and
aad
sub
sbb
xlat
std
cwtl
cmp
cs
inc
xor
push
fistl
mov
lea
jmp
inc
jo
movb
ss
mov
pop
xchg
dec
popf
aad
xchg
outsl
dec
xor
dec
sub
or
xor
mov
jl
adc
fs
imul
pusha
ret
add
dec
adc
inc
push
and
sub
rcll
fmul
aaa
clc
xor
popf
inc
pop
adc
dec
inc
cmpsb
mov
scas
pusha
loopne
fwait
adc
sub
adc
or
stc
fstpt
ret
adc
in
or
adc
sbb
pushf
add
xor
insb
and
push
ja
fwait
mov
addl
mov
pusha
or
insl
fld
dec
or
sbb
sbb
xor
mov
xor
frstor
mov
mov
mov
pop
das
js
out
call
jae
lret
nop
jnp
or
xchg
push
add
iret
dec
inc
dec
adc
cld
push
cmpsl
mov
mov
mov
mov
and
aam
sbb
sub
pop
push
addb
xchg
fwait
xchg
adc
inc
dec
subps
xchg
cmp
add
or
push
cmp
mov
gs
pop
jmp
mov
pop
js
push
lock
xor
sbb
mov
sub
ret
xchg
cmp
sub
pusha
adc
or
cmp
ja
stc
inc
pop
pop
and
je
add
aam
push
daa
push
and
and
rclb
ja
mov
leave
cld
xchg
daa
xor
jg
dec
xor
or
insl
jmp
jno
imull
xchg
dec
cmp
fldt
xchg
insb
scas
sbb
aaa
insl
nop
pop
fildl
dec
in
and
adc
aas
push
mov
or
sub
push
aaa
movsl
test
aad
push
pop
sbbl
lret
or
xor
sbb
and
pop
pusha
sbb
popf
lock
adc
mov
pop
xchg
leave
dec
cs
and
test
shl
adc
mov
fs
mov
clc
sub
add
icebp
add
data16
xchg
addb
dec
ja
push
mov
jae
sub
sahf
or
dec
lods
imulb
xchg
or
pop
xchg
pop
pop
pop
stos
xlat
or
jne
jg
dec
push
mov
pusha
test
mov
lea
ds
paddq
nop
or
cmp
inc
ret
or
and
fwait
and
ret
test
ja
orb
mov
and
push
ficompl
push
insl
iret
push
inc
mov
stos
dec
sahf
jns
or
test
and
mov
push
pop
dec
pop
and
inc
arpl
xchg
outsl
cli
lds
adc
insb
ja
scas
push
sti
pop
adcl
add
pushf
mov
sbb
push
inc
ja
adc
cmp
xchg
add
push
push
mov
fldl
sbb
scas
sbb
insb
or
pop
push
sub
jo
pushl
sub
pop
imul
push
adc
aas
inc
rcll
popa
outsb
pop
add
push
pop
inc
jns
sub
sarb
xchg
or
lret
mov
mov
addb
xchg
rol
out
cltd
inc
imul
loop
das
mov
inc
and
xor
clc
das
xchg
enter
sub
daa
aas
pop
xor
cmp
mov
addr16
xorb
stos
cltd
daa
sbb
sub
scas
dec
xor
or
inc
das
add
add
cld
mov
mov
and
leave
push
fsin
mov
addl
add
or
xor
test
add
cmp
test
aaa
ret
adc
mov
lock
xchg
mov
mov
les
sbb
ja
out
sbb
push
xor
test
and
mov
stos
mov
pop
mov
pop
push
mov
xchg
push
lretw
xchg
adc
push
roll
dec
xor
dec
ret
js
and
push
inc
bound
les
cmpsb
xlat
xor
inc
jecxz
fnstsw
xchg
dec
repnz
ss
and
sbb
adc
dec
push
and
pop
sbb
xor
int3
inc
xchg
dec
dec
cmp
push
or
loopne
in
inc
inc
ret
inc
int
push
mov
inc
outsl
leave
jae
fst
mov
and
jecxz
cmpsb
popa
add
push
push
xor
fwait
ret
xchg
rclb
rcl
subl
jle
in
dec
xor
jp
push
mov
cli
inc
mov
pop
mov
adc
es
pop
adc
call
add
push
or
or
mov
inc
mov
ret
sbb
test
jg
ja
test
mov
sub
cmp
rorl
mov
push
mov
ljmp
jo
dec
cmp
fwait
inc
aaa
inc
push
dec
adc
popaw
adc
test
pushl
sub
loop
pop
jle
js
dec
xor
lret
nop
sub
insl
in
pop
push
scas
out
sub
and
in
xor
sbb
clc
scas
dec
push
dec
enter
jmp
pusha
pop
je
mov
jp
inc
pop
pop
cmp
cmc
mov
add
push
dec
xor
dec
mov
add
gs
pop
movsl
sub
or
and
setno
cmpsb
xor
shlb
test
out
dec
sbb
dec
ds
add
jl
inc
lret
dec
cld
dec
jbe
xor
es
test
inc
mov
imul
prefetcht1
dec
outsb
mov
shr
add
push
pusha
pop
mov
cwtl
or
add
cmpb
push
sub
lock
add
dec
or
or
inc
xchg
pop
mov
pop
adc
xor
xchg
sbb
add
daa
fs
ret
xor
adc
lods
pop
push
negl
bound
xor
scas
fisttpll
mov
pop
lahf
aas
dec
pop
push
test
daa
mov
into
sbb
sub
cmp
aam
dec
inc
cmp
arpl
test
enter
dec
push
and
jg
icebp
cmp
or
fisubl
cmp
adc
lds
pop
cmpsb
dec
pop
mov
pop
push
ret
pop
sbb
mov
xor
loope
nop
inc
push
lods
dec
pop
and
xchg
xor
adc
stos
adc
push
sub
imul
icebp
sub
push
inc
add
stos
daa
stos
bound
jle
or
jbe
lods
int
sub
or
dec
xlat
fs
inc
push
je
inc
xchg
cmp
inc
addb
rorl
dec
pop
cmovnp
idivl
mov
sbb
mov
sbb
push
sbb
jns
add
add
sarl
cmp
aas
lods
adc
sub
jp
pop
mov
and
inc
sbb
adc
popa
inc
mov
add
pop
inc
sbb
dec
insl
or
add
popa
fstl
mov
jmp
ds
inc
popa
shll
pop
daa
sub
shll
scas
in
sbb
mov
mov
dec
or
xor
movl
xor
adc
in
or
inc
mov
xor
mov
sub
add
cmpsb
and
xchg
mov
or
scas
mov
adc
test
fs
loopne
test
dec
loope
insl
fistpl
aas
jge
xchg
inc
icebp
adc
jne
jnp
or
sub
negl
rorl
ljmp
add
dec
ret
scas
cmp
push
add
fsubl
push
inc
push
cwtl
mov
adc
mov
sub
xchg
jecxz
push
jmp
popa
sub
and
adc
addb
in
add
leave
lahf
sbb
out
jecxz
add
push
cmpb
ret
jne
mov
inc
pop
add
mov
push
add
mov
movsl
add
cmpsl
adc
clc
add
add
pop
xor
or
inc
and
cmpsl
mov
push
dec
add
sbb
push
mov
aaa
adc
add
and
mov
xor
adc
aaa
lods
addr16
shlb
ret
or
add
push
push
ret
xlat
iret
cmp
andb
int3
xor
sub
stc
enter
push
mov
mov
cmpb
push
and
dec
aam
xlat
test
fwait
rorl
push
cmp
ja
cmpsl
jge
in
push
push
push
das
push
inc
push
push
push
pop
fsubrp
repz
inc
push
das
outsb
push
test
out
jge
push
addr16
psrld
fstp
mov
push
daa
das
or
in
adc
cmp
cwtl
lods
xchg
mov
mov
sbb
ds
and
sub
jo
enter
lret
sub
outsl
adc
and
setl
pop
inc
add
xor
mov
cmpsl
popf
xor
in
push
cmp
pop
fs
sub
xor
fsubrs
and
cmp
enter
dec
movsb
push
scas
add
pop
addr16
mov
mov
dec
sub
movsb
addb
inc
jle
cwtl
mov
fbld
inc
sbb
jmp
and
das
inc
jb
outsb
pop
push
dec
js
leave
lret
and
xor
mov
je
mov
and
or
xlat
jmp
aad
cmpsb
ds
ja
adc
pop
ljmp
cmp
sbb
clc
push
jno
dec
and
inc
pop
push
test
xor
jg
daa
mov
inc
leave
andl
xlat
inc
push
scas
add
nop
imul
sbb
jbe
aas
mov
jb
or
cmp
outsl
add
fadds
and
es
outsb
or
and
sbb
add
sub
sbb
and
inc
faddp
xchg
mov
adc
mov
les
push
cs
push
adc
sub
mov
or
mov
jmp
jmp
addr16
ret
sub
and
in
pop
movntq
out
xchg
or
ja
jae
enter
push
push
insb
arpl
add
add
dec
mov
or
dec
ret
fcoml
or
or
xor
mov
js
mov
mov
sbb
adc
sbb
push
lret
push
cltd
add
mov
les
xchg
shl
lods
pop
test
cwtl
inc
sbb
sahf
out
shrd
cs
xchg
outsl
mov
cmpb
fistpll
sbb
mov
incl
das
sbb
pop
and
enter
arpl
and
nop
cmpl
xor
inc
or
or
imul
xchg
cmpsl
pop
push
sbb
rolb
xchg
dec
and
sbb
sbbl
mov
cmpsl
aaa
and
in
pop
dec
add
add
test
mov
scas
push
sbb
add
inc
out
sbb
jge
mov
add
mov
xchg
and
pop
adc
or
or
mov
repz
rep
fs
gs
lock
std
cs
iret
jno
mov
inc
pop
add
outsb
xchg
fwait
jmp
test
mov
inc
pop
lcall
and
outsl
inc
pop
mul
xchg
sub
xor
inc
push
arpl
insl
inc
xchg
pop
mov
dec
sbb
add
ret
inc
sbb
sarl
insb
add
add
sbb
dec
inc
mov
adc
jo
test
mov
or
daa
mov
lahf
js
dec
xchg
popa
mov
ror
pusha
pop
test
inc
aaa
inc
mov
out
push
inc
aas
lods
xchg
sub
test
xor
or
xor
pop
mov
cwtl
inc
jb
dec
sbb
nop
xchg
or
lret
pop
cmpsl
dec
inc
sub
andl
ret
daa
lock
inc
sbb
and
js
dec
or
push
and
pop
dec
lcall
dec
xor
jne
in
loopne
inc
inc
lcall
inc
loopne
push
xor
add
pop
addb
and
lcall
push
cs
dec
inc
dec
scas
or
mov
jl
cld
dec
mov
pop
pop
and
movsl
addr16
jae
xchg
or
cmp
ret
jecxz
xchg
rcl
add
cltd
ja
popa
mov
dec
sub
mov
add
xor
pop
add
mov
or
jecxz
pop
pop
sbbl
in
lods
mov
and
adc
cwtl
lods
unpckhps
and
pop
mov
shlb
or
aam
inc
inc
xchg
popa
sub
add
sub
xor
or
pop
bound
dec
sub
mov
test
fldenv
int
mov
je
jns
dec
aas
bound
addb
mov
jae
add
add
inc
add
add
inc
inc
add
sbbl
mov
ret
mov
in
sub
iret
loop
or
push
adcl
aam
loope
and
xchg
jle
jbe
popl
lods
push
adc
mov
cmpsb
loope
push
cltd
sbb
dec
add
out
jge
pushw
mov
adc
dec
xchg
je
in
push
lds
adc
jo
push
fdivp
add
mov
dec
test
dec
mov
jl
add
lahf
dec
adc
xor
mov
fsubs
and
pusha
pop
fs
bound
mov
ljmp
inc
insb
push
sub
stos
pop
cmp
sbb
inc
js
clc
jmp
adc
jl
and
mov
pop
pusha
jmp
jmp
adc
mov
fucomi
adc
cmpb
dec
push
adc
insb
lods
lahf
push
ss
and
inc
and
push
andl
test
or
mov
and
fwait
mov
daa
xchg
arpl
data16
add
out
mov
cmp
inc
sub
dec
xor
adc
dec
sub
mov
push
xor
xor
jl
push
add
or
aas
jbe
lea
mov
js
push
filds
sbb
push
sub
add
mov
jbe
fwait
and
inc
pop
mov
inc
push
mov
pop
mov
adcl
mov
adc
jmp
or
and
jmp
adc
rcrl
adc
inc
cmp
jo
mov
das
or
js
and
or
xchg
cmp
lea
dec
inc
lcall
in
mov
mov
inc
imul
add
dec
leave
mov
push
xor
push
in
mov
mov
imul
int3
aas
imul
sbb
fsts
hlt
in
cmp
sahf
xchg
cmpsl
in
mov
sub
adc
dec
cld
push
sbb
les
xchg
lock
mov
push
adc
adc
inc
push
cmpsl
ret
pop
mov
adc
and
push
sbbl
dec
or
aaa
and
sub
test
inc
mov
jno
js
testl
push
dec
mov
inc
test
mov
push
shrl
pop
mov
adc
ret
and
test
add
iret
adc
idivb
dec
push
xor
js
scas
andb
pop
dec
push
add
inc
push
nop
ret
dec
and
or
subl
mov
aaa
cs
pop
add
push
add
push
shll
outsl
adc
sub
sbb
mov
pusha
jecxz
xchg
inc
inc
xor
test
decl
xchg
sbb
dec
leave
leave
sub
xor
push
or
adc
or
js
push
sbb
mov
pop
mov
outsl
insl
sub
cmp
inc
push
test
aam
faddl
push
cltd
daa
push
add
sbb
or
xchg
push
add
rclb
pop
and
sub
mov
enter
movsb
push
sub
push
dec
sbb
insl
sub
inc
ds
aad
pop
add
adc
xor
sub
sbb
andb
cmp
scas
ret
fmul
inc
adc
adcb
pop
adcb
or
jne
push
jno
punpckhbw
pop
cmp
and
cs
and
dec
pop
ss
in
dec
mov
test
xchg
mov
inc
outsb
jle
jo
sti
mov
notl
arpl
outsl
push
xchg
leave
insl
jbe
cmp
das
sub
lods
cmovb
fdivp
das
pop
in
arpl
jns
in
mov
pop
js
cltd
rcrb
add
mov
fdivrs
subb
push
xor
push
cltd
insb
je
fistl
imul
push
cltd
jl
xor
aam
jb
popf
aaa
enter
mov
dec
mov
pushf
mov
push
inc
lret
test
push
lds
xchg
cmp
xor
clc
fstpl
add
ret
sbb
xor
sbb
dec
rcl
jmp
lcall
ficompl
mov
xlat
adc
call
inc
pushf
mov
dec
daa
xchg
xchg
test
test
insl
sub
or
shll
fs
add
imul
pop
cmovg
lds
xchg
arpl
push
mov
aaa
jo
jns
shll
xor
cmp
sbb
jo
push
inc
inc
mov
loop
movsl
cmpsb
sub
test
xor
mov
pop
int
test
daa
js
mov
and
and
dec
movsb
push
xor
outsl
push
dec
cmp
xchg
hlt
add
add
outsl
xor
xor
pop
push
push
lds
add
jb
jae
add
jmp
ljmp
sti
jp
push
mov
ds
or
aam
mov
in
mov
jae
das
in
jns
in
les
push
lret
xchg
movsb
inc
hlt
push
xchg
adc
adc
ret
sbb
and
and
imul
sarl
and
or
arpl
pop
lods
divb
dec
enter
fistpll
jbe
add
sbbl
daa
in
scas
std
daa
pop
fsubrs
mov
and
pop
cltd
stos
and
or
jl
pop
dec
dec
dec
int
movsb
or
out
xchg
fstpl
stos
or
adc
mov
jae
test
jbe
lea
xor
or
and
je
fwait
nop
and
shlb
push
test
xor
test
pop
in
xchg
jae
dec
mov
mov
jo
mov
pop
repz
faddp
mov
aaa
jmp
ss
btc
bound
mov
pushf
insb
ss
dec
inc
daa
mov
cmp
inc
leave
mov
mov
adc
adc
pusha
cmp
push
mov
push
dec
ret
fbld
mov
and
sbb
sub
jp
fs
cmp
inc
or
cltd
adc
push
std
lods
adc
fsubl
popa
add
push
or
add
xchg
js
xlat
mov
fcompl
inc
mov
aad
sub
mov
mov
sub
pop
jl
mov
add
loop
mov
push
je
mov
inc
repnz
imul
outsl
mov
or
outsl
addr16
jno
sbb
je
add
jg
add
mull
inc
jle
les
pusha
pusha
rcr
inc
or
int
push
and
pop
push
xchg
mov
cmpl
adc
iret
inc
xor
cmp
orb
or
cmpsl
adc
adc
inc
pusha
lcall
sub
mov
lcall
or
dec
dec
and
jl
add
mov
cmp
jecxz
jp
and
or
out
and
push
mov
lahf
fistps
jp
jae
and
and
bound
nop
cmpsl
addb
je
pusha
into
dec
lock
ret
inc
jbe
cs
mov
jg
and
cmpl
test
mov
add
mov
outsl
decb
jnp
add
or
shlb
lahf
out
and
xchg
addl
arpl
aaa
add
mov
mov
nop
loopne
gs
lret
adc
sub
and
xor
inc
or
adc
add
or
inc
mov
popf
dec
or
icebp
jnp
add
add
sub
sub
popa
xor
in
popa
jo
sub
pusha
adc
adc
clc
adc
sbb
clc
xchg
rcll
inc
addl
push
lds
and
fisttpll
mov
pop
jae
xorl
push
jl
call
scas
mov
fwait
jg
mov
dec
andl
xor
push
shll
jge
mov
push
xchg
sub
arpl
jecxz
jecxz
mov
inc
sbb
add
xor
and
mov
xor
mov
ret
push
inc
sbb
mov
mov
outsb
shll
jmp
rcr
test
les
mov
pop
add
add
aaa
inc
add
pop
test
jle
test
jle
mov
mov
sub
sub
bound
jl
adc
inc
in
jl
dec
pushf
push
pop
out
sbb
add
insl
addr16
and
add
aad
or
mov
inc
add
iret
fiadds
cmpb
dec
aam
ret
sub
sbb
mov
dec
push
mull
pop
xchg
sbb
outsl
cmpb
daa
arpl
inc
or
fcoms
push
pop
dec
and
adc
push
sbb
jmp
ret
mov
nop
imul
in
bound
and
inc
sub
shll
adc
lret
ret
cmp
or
jno
hlt
pop
js
jne
push
push
mov
jmp
push
arpl
test
and
push
lods
dec
push
push
add
fbld
inc
or
jae
leave
dec
xchg
mov
jns
js
mov
jns
fcmovnb
adc
fistpll
loopne
add
mov
inc
mov
pop
xor
push
pusha
inc
imul
sbb
mov
push
adc
inc
imul
inc
xor
push
ja
mov
jmp
addb
testl
jo
inc
leave
stos
sbb
or
pop
cli
inc
subl
xchg
adc
add
lret
call
inc
sub
mov
push
insb
mov
aad
lds
mov
or
inc
leave
inc
insb
mov
imul
scas
dec
test
add
out
in
enter
push
test
mov
scas
mov
xchg
add
add
outsl
xor
fnstcw
test
add
insl
mov
aaa
and
mov
addl
inc
mov
sub
push
outsl
je
scas
inc
cmpsb
or
xchg
sbb
push
aas
lret
and
aas
pop
add
adc
and
mov
or
adc
and
fbstp
insl
mov
mov
repnz
mov
inc
fs
sbb
cltd
mov
or
sbb
js
cmc
mov
push
sub
ret
push
inc
and
test
test
mov
inc
sub
or
push
xchg
cmp
stos
pusha
sar
add
push
jmp
aad
xor
movsb
add
inc
cltd
jecxz
shrb
mov
testl
popa
adc
adc
sub
xor
les
addr16
mov
test
mov
or
enter
pop
fadds
inc
mov
mov
mov
cmp
fcomp
fdivl
pop
push
jb
lods
xchg
les
stos
mov
mov
call
clc
push
fildl
es
sarb
add
mov
nop
imul
and
dec
rol
add
add
in
mov
cmp
or
lock
test
hlt
or
add
adc
jb
int3
lcall
in
dec
jae
xchg
call
or
in
and
rcll
dec
pop
mov
call
aas
lea
or
movsl
ret
mov
inc
push
das
or
sub
push
fimull
das
jno
and
pushf
push
and
addr16
mov
mov
cmp
inc
pop
pusha
adc
int3
aad
in
dec
pop
pop
fisubrs
xchg
ret
in
ret
jecxz
and
or
adc
sbb
push
dec
arpl
out
nop
add
movsl
or
sti
xor
xchg
ret
dec
add
xchg
in
inc
add
and
fs
sub
inc
push
or
inc
aas
orb
orb
movsl
sysret
and
adc
sbb
add
cmpsb
rcll
data16
mov
outsb
fldenv
adc
add
bound
mov
dec
mov
scas
push
xchg
fldt
or
inc
dec
xchg
imul
jne
adc
add
cmpsb
dec
adc
daa
cmp
push
dec
mov
xchg
int
adcb
hlt
lret
add
ds
pop
sti
jge
push
cmpb
and
lds
pop
or
pop
cmp
cmpsl
inc
outsl
outsb
cmp
mov
jne
or
cld
push
test
clc
or
lods
aaa
gs
mov
inc
nop
xchg
and
adcb
mov
insb
movsb
push
lret
ret
add
sub
sbb
test
and
enter
sbb
adc
cmp
xchg
test
jne
out
pop
shlb
inc
lret
or
add
aam
jmp
add
cmc
mov
push
rolb
lock
adc
xor
arpl
test
and
xor
sbb
inc
add
xor
or
ss
sub
lret
addb
push
mov
lahf
pop
and
popf
mov
or
pop
jae
and
cmpsb
jg
movsl
xor
movswl
lea
push
loop
xchg
ret
les
inc
or
add
sarl
mov
ja
mov
mov
insb
dec
mov
dec
push
fimull
mov
lea
cmpsl
inc
or
push
or
push
shrb
mov
jb
lret
xor
push
cmp
dec
dec
rcr
es
xor
rolb
push
js
xlat
in
xchg
jecxz
sub
sub
aas
test
add
andl
adcb
mov
xchg
cmp
loopne
aaa
pop
sbb
shrb
daa
and
mov
push
inc
fcmovb
iret
fbstp
mov
pop
inc
out
sbb
xlat
movsb
sbb
or
pop
xor
cmp
pop
jb
or
and
daa
cmp
je
pop
leave
test
daa
inc
pop
adc
shl
xor
cwtl
or
insb
add
fildl
xor
jnp
jg
js
cmp
jg
xor
insb
movsl
jb
add
sbb
bound
nop
pop
je
dec
mov
xcrypt-cbc
cmpsl
xchg
and
mov
xor
and
add
subl
inc
enter
js
mov
mov
mov
push
jns
inc
mov
out
pop
dec
cmp
add
in
aaa
mov
addl
push
roll
push
push
mov
push
push
add
and
mov
mov
nop
inc
adc
pushf
cld
lods
and
dec
loop
xor
inc
aas
cs
dec
movsl
mov
fadds
push
mov
mov
cmp
add
aas
std
mov
ja
dec
loopne
or
jne
add
fisubs
push
xor
pop
out
cmp
mov
aam
out
pop
inc
jmp
dec
int
xor
jae
or
sahf
pop
add
lahf
dec
xchg
push
leave
jo
adc
sbb
lahf
mov
push
jb
mov
push
push
and
repnz
xchg
pop
shlb
xchg
xor
nop
add
adc
sub
jg
in
enter
mov
mov
ja
mov
mov
mov
pop
sub
or
adc
leave
mov
inc
loopne
mov
add
add
mov
fdivrl
mov
pop
mov
orl
pop
cmp
and
fcoml
adc
push
push
and
mov
dec
test
cmpl
mulb
push
mov
push
pop
xor
movsb
adc
dec
movsb
add
xchg
add
movsb
and
push
push
ss
add
pop
orl
pusha
xchg
or
cltd
xchg
mov
in
ja
pop
xor
data16
or
rolb
inc
mov
jae
xchg
cmpsb
sbb
test
sub
mov
mov
jg
cmpsb
mov
frstor
aam
jns
cmpsl
addl
pusha
push
fistl
scas
dec
cltd
cmpsl
movsl
mov
sbb
cmp
xchg
inc
adcb
ret
xor
roll
orb
test
je
rcl
test
jne
test
popf
add
add
mov
or
pusha
cmpsl
pop
add
push
cmpsl
xchg
mov
insl
movsl
inc
pop
fbstp
xor
push
aad
scas
iret
or
xchg
imul
lcall
jg
dec
inc
xor
sbb
add
pusha
and
ljmp
nop
sub
add
and
adc
stos
mov
in
cmp
adc
jecxz
mov
push
shrb
cmpsl
nop
in
and
mov
inc
loop
cmp
lea
lea
or
rorl
test
lahf
test
mov
or
sub
pop
inc
adc
jecxz
xor
inc
scas
and
fwait
lods
mov
and
arpl
add
pushf
or
lock
dec
leave
add
pop
inc
lret
mov
cmpsb
pcmpeqb
push
cmp
ds
ss
or
jbe
jecxz
addr16
jae
inc
test
inc
ja
xor
mov
sub
mov
and
je
mov
add
inc
cmp
sub
lods
adc
sub
movl
xor
add
push
xchg
xor
out
sbb
pushf
movsb
jo
xchg
stos
and
or
push
cltd
xor
mov
adc
test
add
ss
jge
pop
and
inc
mov
xorb
dec
pop
aaa
sub
adc
outsl
inc
loopne
xchg
call
call
jmp
dec
in
push
aas
xchg
inc
pop
lock
in
and
push
cmp
adc
daa
pop
test
inc
or
adc
jecxz
cmc
mov
push
adc
loop
shlb
pop
mov
fsts
pop
sbb
mov
fwait
rcrl
loopne
andb
in
sbb
mov
mov
inc
or
adcl
daa
pusha
mov
sbb
daa
push
jb
and
lods
push
hlt
jg
pop
add
or
hlt
xor
push
fistpll
xchg
imul
xlat
xchg
and
bound
add
dec
and
sub
mov
mov
sub
add
mov
adc
and
push
pop
movl
nop
add
daa
mov
mov
shll
mov
nop
jne
sbb
xor
imul
roll
adc
inc
xchg
sahf
mov
mov
add
sub
rol
mov
inc
loope
dec
ja
pop
in
pusha
test
mov
add
dec
push
and
dec
push
or
mov
addr16
inc
and
aad
call
and
jns
pop
andb
xor
stos
pop
dec
inc
das
xor
lods
imul
sub
lea
aad
sahf
filds
sub
loope
mov
iret
addl
or
inc
mov
lock
jno
and
jb
loop
pop
cltd
and
xlat
nop
jno
mov
jae
fcom
daa
push
ficompl
xor
add
addl
cmpsb
hlt
rorb
imul
pop
push
js
stos
cmc
lods
inc
pop
push
push
add
push
iret
pusha
ret
lret
rolb
shrl
das
aaa
leave
mov
pop
sub
pop
push
pop
jne
shl
pushl
rorl
mov
popf
inc
jmp
xor
add
sbb
popa
push
xor
ror
nop
mov
inc
jno
cltd
pop
or
xchg
cmp
sahf
gs
lahf
std
or
pushl
orb
xchg
add
sub
mov
insb
cwtl
and
cmp
sbb
mov
xor
sub
sub
add
pop
fisubrl
sub
add
cmp
filds
sub
pop
add
mov
or
xor
xchg
or
mov
push
jo
push
sub
add
fcom
jno
out
jg
cmp
js
pop
negl
pop
xor
add
mov
cwtl
push
mov
out
cmp
pop
pop
fldl
das
push
cmpb
aaa
mov
xchg
dec
adc
call
or
jl
push
xchg
fcmovnb
sub
adc
arpl
adc
pop
mov
mov
mov
ret
ss
decl
pop
jb
int
mov
roll
mov
andb
dec
ja
sub
leave
daa
mov
sub
mov
inc
push
jo
aam
insl
mov
mov
outsb
jne
test
pop
push
lcall
mov
adc
pop
or
pusha
and
adcb
mov
ljmp
pop
push
scas
icebp
scas
pushf
sbbl
fisubrl
arpl
or
cmpsl
cltd
xor
or
flds
movsl
aas
push
inc
inc
stos
mov
ret
push
mov
ret
dec
sbb
add
sbb
pop
inc
jmp
xor
sti
add
fdivrl
dec
lahf
ljmp
mov
sub
nop
pushf
pop
pushf
and
add
and
pusha
xchg
outsl
xchg
test
add
xor
xchg
rclb
xchg
ja
push
adc
push
jae
cmpsl
push
lods
aas
outsl
movsl
ret
sub
jb
lods
ret
inc
mov
shll
test
aaa
push
mov
or
jo
mov
hlt
xchg
sbbb
cmp
add
enter
loope
and
addr16
mov
into
jmp
in
cltd
jl
jno
adc
sbb
ss
arpl
sti
and
or
pushl
add
mov
adc
fcoms
mov
pop
dec
inc
pop
adc
xchg
or
push
lcall
or
xor
pop
mov
orb
data16
dec
add
mov
cmp
xor
and
into
testb
mov
inc
and
aam
addb
dec
inc
or
int3
xorb
out
insb
mov
jp
push
mov
push
mov
aas
add
adc
pop
xor
lret
sub
js
repz
data16
inc
sub
xor
dec
or
jno
hlt
push
inc
cs
or
push
xor
shrb
adc
lea
pop
pop
pop
add
into
jmp
cmpsb
mov
mov
jmp
xchg
cltd
or
push
and
cltd
pusha
sub
pop
adc
test
aas
sbb
sub
mov
jl
les
enter
xor
or
pop
xor
sbb
ss
daa
gs
rcrb
gs
cmp
lods
aas
rol
cmp
and
sbb
je
xor
jg
sarb
mov
pop
jl
mov
icebp
popa
sbb
imul
add
mov
sbb
add
sub
add
mov
pop
jge
stos
arpl
and
les
or
movsb
ret
cmp
lods
add
shll
or
jo
imul
xor
dec
push
push
mov
imul
mov
xchg
or
daa
cmp
mov
sub
and
add
push
aas
inc
pop
dec
mov
push
inc
cmp
push
and
call
outsb
nop
out
sbb
xor
add
inc
lea
outsl
push
push
and
mov
lret
movsb
sbb
push
dec
scas
sbb
ret
xor
pop
inc
flds
inc
xchg
fbld
xlat
lods
or
adc
sub
lret
pop
sub
xor
adc
lahf
shrl
out
daa
and
sbb
out
add
andb
shll
sbb
fs
pop
sbb
movsl
lahf
mov
add
push
addr16
cwtl
cs
cmpsb
mov
inc
cmp
xlat
xchg
push
arpl
mov
pop
mov
or
pop
enter
xor
insl
scas
add
dec
mov
adc
and
and
dec
mov
adc
sbb
and
dec
mov
xchg
mov
sub
pop
mov
dec
mov
lods
testb
mov
scas
adc
pop
pop
stos
and
imul
icebp
add
xor
adc
inc
out
sub
shrb
pop
add
pop
into
lea
divb
push
leave
fsubl
and
das
sbb
stos
add
mov
mov
nop
jg
rolb
push
pop
and
test
cld
roll
in
rcrl
sub
lods
sar
xchg
xchg
pushf
sub
fisubrs
mov
xchg
shrl
or
mov
ja
xchg
add
loope
test
subb
and
subl
ficoml
cmpsl
fdivs
pop
adc
and
sub
out
adc
sbbl
xor
scas
iret
sbb
clc
push
leave
push
adc
or
pop
sbb
ljmp
dec
add
or
movsl
aam
orb
sbb
in
sub
aam
adc
and
xchg
bound
aas
pop
and
les
jo
data16
mov
mov
iret
push
and
lahf
out
xchg
dec
adc
or
add
inc
pop
cmpsl
test
xlat
inc
repnz
mov
scas
xlat
push
pop
or
packuswb
into
push
cmp
dec
xchg
cmpsl
adc
mov
pop
push
xor
push
loope
iret
das
js
add
and
mov
pop
fistpll
adc
cmp
inc
dec
sbb
movsb
add
add
xchg
adc
or
adc
xchg
or
and
sub
xchg
cmp
xlat
mov
lea
inc
adc
sbb
testl
enter
inc
inc
pop
sub
lcall
fidivl
inc
popa
nop
pop
or
inc
unpcklps
jno
test
xor
adc
pusha
xor
daa
xor
lock
jmp
adc
mov
dec
cmp
ljmp
call
into
gs
clc
lcall
sub
add
mov
lds
jae
rcr
dec
cmp
iret
xchg
mov
jge
mov
add
and
cmp
test
fldt
sbb
push
nop
mov
add
mov
imul
mov
popf
or
sbb
mov
cli
or
loopne
dec
dec
sar
std
cmp
mov
cltd
dec
push
les
push
sbb
xor
pop
or
dec
loopne
pushl
push
push
mov
add
cmpsl
mov
sub
dec
cmp
daa
push
adc
push
movhps
inc
or
lods
or
outsb
adc
loope
enter
hlt
push
nop
pop
jecxz
adc
icebp
pop
test
jmp
sbb
cmp
mov
in
fwait
sub
sub
xor
notl
mov
push
mov
mov
mov
pop
or
or
mov
add
mov
in
push
int
sub
push
into
adc
lea
sbb
ret
cmpsl
xchg
dec
lret
xor
imul
sbb
add
aaa
mov
pusha
mov
and
mov
mov
adc
outsl
dec
enter
mov
sbb
mov
int
xlat
push
adcl
or
xchg
cli
into
mov
add
push
sub
pop
xchg
adc
loopne
adc
xor
adc
push
jne
jb
add
add
push
dec
dec
jmp
add
shl
or
push
mov
pop
outsl
mov
or
pop
subb
push
dec
sbb
sbb
mov
mov
mov
pop
and
jmp
sbb
add
daa
test
fxrstor
gs
add
inc
andb
sub
cmpsb
sbb
jmp
xchg
add
and
flds
in
in
fucom
into
ret
xlat
push
jo
or
bound
sti
aaa
and
xor
jmp
imul
scas
mov
fcom
xchg
aad
or
es
andl
test
data16
repnz
loope
ret
in
cmpb
pop
jne
pop
cmp
pop
sub
movb
push
js
sbb
cmp
inc
add
xor
push
andb
roll
inc
cmp
pop
lcall
xor
mov
fs
xor
and
jnp
and
fimull
or
mov
push
cmpsl
in
rorb
xchg
das
mov
inc
inc
sbb
and
jne
out
pop
cwtl
mov
inc
inc
lea
movb
or
and
inc
lea
pop
add
add
shlb
les
adc
ror
and
dec
add
add
xchg
adc
movl
ret
add
sub
sbb
or
sti
mov
mov
loope
or
adc
jl
mov
push
or
cmpsb
xchg
and
push
stos
test
xor
push
shl
jle
or
test
les
into
pop
add
mulb
lods
adc
loopne
adc
decb
jb
xlat
xor
aaa
inc
sub
cmc
jo
xor
or
pop
rcll
jne
outsl
dec
sbb
push
and
cld
mov
imul
inc
xchg
dec
inc
cld
push
mov
or
xchg
and
cmp
into
dec
cmpsl
xor
adc
push
outsw
das
adc
sub
cmp
jle
loopne
sub
push
add
stos
loope
cltd
shl
pop
or
jb
int3
and
pusha
into
xor
ret
add
andl
fs
pop
lock
or
adc
push
ret
aaa
dec
lods
and
dec
dec
cmp
inc
addr16
filds
pop
or
adc
sub
sub
add
mov
pushf
mov
mov
sbb
movsl
movsb
dec
adc
mov
mov
test
adc
add
push
test
mov
pop
jbe
inc
repnz
mov
push
lret
adc
push
loop
mov
adc
fildl
inc
enter
sbb
push
imul
dec
les
push
rorl
add
das
jecxz
add
call
jb
aaa
test
and
xlat
push
mov
inc
add
mov
iret
out
adc
jbe
xor
fmuls
sub
xor
call
adc
lock
insl
aas
dec
mov
push
call
push
xchg
into
xchg
xchg
sbbl
mov
xchg
add
loopne
outsl
pop
fistpl
sub
pop
add
dec
add
inc
lahf
or
and
and
pop
dec
rcrb
xchg
pop
mov
fs
xor
leave
pop
sbb
mov
adc
test
arpl
add
mov
adc
push
inc
mov
dec
push
jo
push
roll
xchg
out
mov
xchg
xchg
or
xchg
xchg
fisubrl
call
ds
mov
mov
or
mov
pop
aaa
nop
mov
xchg
and
pop
sub
pop
daa
lret
add
cmpsl
sbb
in
add
push
sbb
add
xchg
push
sbb
cltd
out
mov
jb
in
out
int
xor
add
shr
xor
push
xor
add
xor
mov
add
cmp
and
in
or
rcll
jmp
inc
push
jb
in
mov
add
popa
loopne
push
loopne
pop
xor
cmp
leave
or
in
call
pop
in
mov
imul
ret
pop
mov
mov
mov
xor
mov
arpl
push
aam
or
pop
xor
loopne
xchg
cltd
loop
push
add
in
add
pushl
pushf
mov
fidivl
push
push
fsubrl
fadds
subl
outsb
mov
add
dec
leave
dec
push
xor
mov
outsb
aaa
fmull
sbb
sbb
pushw
cmpsb
pop
sbb
aaa
xor
in
jno
push
int
fwait
les
shlb
and
dec
fmull
cmp
push
adc
push
sbb
pop
add
ret
out
inc
add
insl
movsb
testl
mov
inc
push
ljmp
sahf
and
adc
mov
clc
jmp
or
push
jmp
mov
mov
out
sbb
incl
push
adc
mov
mov
push
paddq
add
daa
icebp
ljmp
loopne
pop
and
mov
adc
pop
sahf
mov
dec
jbe
xchg
mov
push
jo
insl
cmp
or
push
shl
in
mov
rorl
jg
sbb
loop
jo
pop
iret
inc
mov
test
emms
xlat
inc
sub
sbb
mov
mov
and
dec
loope
push
out
in
fadds
xor
js
xlat
adc
inc
pop
xor
jge
and
in
push
sbb
jl
pop
out
dec
dec
and
dec
test
jp
push
jmp
outsl
mov
or
dec
outsl
call
push
pop
mov
movsb
xchg
inc
pop
xor
sbb
sbb
and
in
xchg
ficoms
add
xcrypt-cbc
cmpsl
push
mov
test
mov
incb
jae
cmp
mov
push
addr16
push
push
inc
lds
mov
sbb
ja
test
nop
sub
insb
divb
idivl
add
dec
pop
xchg
xchg
mov
cmp
add
mov
aas
stos
nop
add
bound
mov
lods
dec
fidivs
sub
adc
inc
jb
push
xlat
adc
jb
aad
xor
js
jo
dec
cmpb
andb
mov
xlat
rcl
inc
cmc
push
aad
rcr
aaa
xlat
cmc
push
xchg
pop
lahf
xlat
rcrl
inc
xlat
adc
add
or
test
push
xor
enter
stc
jbe
cmc
mov
or
jg
sarb
dec
out
loopne
add
in
lret
adcb
dec
add
daa
and
movsb
xchg
into
les
mov
mov
mov
movsb
adc
nop
cli
adcb
pop
xlat
outsl
add
enter
nop
jbe,pt
mov
cmc
imul
add
pop
lahf
loop
lea
cmpsl
xchg
dec
nop
push
dec
rolb
shll
cmpb
sbbb
inc
leave
add
sbb
sub
rorb
lret
scas
push
rorb
sbb
andb
push
mov
mov
xor
ret
sub
push
out
test
jno
pop
shlb
xchg
push
out
add
push
cmpsl
icebp
iret
mov
std
stc
jmp
int3
or
into
les
cmpsb
push
int
mov
or
lret
andb
adc
sbb
std
clc
mov
out
adc
movb
adc
or
jge
or
outsb
nop
push
mov
lds
sub
mov
mov
sbb
sbb
and
rolb
adc
jmp
movsl
push
push
jns
adc
mov
adc
inc
or
adc
cmp
lea
jmp
pop
jp
push
xlat
iret
sbb
or
push
sbb
dec
or
xor
jecxz
sub
xor
or
rorb
mov
xlat
inc
sbb
fs
jne
or
outsl
xchg
jmp
adc
and
push
sbb
pop
inc
sbb
inc
enter
lods
les
or
and
fldl
pop
imul
mov
out
bound
or
mov
pop
adc
aaa
push
fwait
rcr
pop
or
out
add
imul
imul
pop
adc
flds
sub
pop
adc
or
dec
pusha
out
mov
sub
faddp
fstpl
fwait
mov
push
cmp
cmpl
sahf
push
fnstcw
cmpl
cwtl
jge
testl
or
je
aam
add
fbstp
cmp
inc
sbb
cmc
jo
outsl
dec
cmp
sub
fstl
sbb
sarb
test
insl
pop
and
pusha
pop
das
sbb
aas
adcb
jno
popf
add
into
mov
mov
xlat
movsb
or
das
nop
lahf
insl
cmp
pop
insb
add
es
pop
or
dec
aaa
jmp
and
and
jle
jne
sub
lret
mov
sbb
push
push
add
push
jo
adc
or
jae
cld
push
mov
mov
push
push
push
lock
sbb
pop
stc
mov
xor
sbb
mov
out
push
cltd
dec
and
sub
add
fnsave
add
ret
xchg
inc
mov
je
daa
int3
sbb
or
iret
cli
test
ret
bnd
arpl
popf
sub
bound
cmp
mov
dec
sbb
adcb
mov
mov
adc
or
sbb
inc
pop
loope
out
pop
stos
test
fidivrl
jo
jns
mov
push
adc
mov
jmp
adc
mov
jb
adc
mov
sub
jle
mov
mov
inc
mov
or
cmp
push
roll
insb
fisttpll
inc
sub
jmp
add
push
or
sub
or
test
fisttpl
jmp
mov
imul
push
xchg
xor
jo
add
outsl
push
ja
dec
pusha
ja
cmp
shlb
push
mov
adc
xchg
movsb
xlat
faddl
cmp
adc
mov
orb
adc
mov
call
sbb
enter
pushf
ror
xor
inc
sarl
mov
xchg
clc
jle
xchg
fsubrl
fldt
mov
ret
xor
dec
dec
push
dec
jae
inc
das
pop
test
push
jo
mov
nop
enter
sbb
push
movb
xorb
mov
lret
lods
adc
dec
mov
mov
inc
movsb
sbb
fisttpll
aaa
sbb
cltd
mov
mov
sbb
xchg
jecxz
xchg
in
out
and
in
and
cmp
lods
push
cmc
xor
mov
imul
fs
add
pop
inc
pop
popa
movhps
notb
and
jecxz
jo
sarl
in
mov
adcl
dec
add
sbb
nop
out
inc
sbb
jae
mov
mov
mov
repnz
mov
add
outsl
sbb
outsb
mov
pusha
mov
push
push
sub
push
or
dec
adc
mov
mov
sbb
repnz
xchg
xchg
sbb
ret
lock
movb
mov
sbb
push
cs
stos
xchg
sbb
cmpsl
xchg
jp
cmp
or
sbb
pop
mov
jg
jl
mov
and
call
sbb
daa
mov
pushf
dec
test
mov
aaa
jne
or
lds
mov
inc
push
into
jo
sbb
sub
push
test
or
das
adc
loopne
shlb
sbb
shll
xchg
sbb
sbb
enter
fs
nop
les
cs
nop
sahf
push
or
out
int
and
dec
test
cmpb
cmp
xor
in
mov
arpl
scas
test
dec
dec
test
test
std
shlb
pusha
push
imul
ljmp
decb
data16
inc
les
pop
add
adc
and
add
sub
loope
or
mov
cmpsb
and
sub
add
cmp
push
sbb
xor
adc
sub
add
mov
movsb
adc
sbb
pop
cwtl
mov
inc
xor
stos
push
add
add
jg
pop
and
daa
push
addl
mov
popa
xchg
mov
mov
push
jb
testl
pop
sbb
adc
inc
shrb
or
dec
sarl
add
addl
mov
push
and
sbb
sub
add
cmpb
nop
scas
and
mov
sbbb
add
and
and
pop
add
pusha
js
or
adc
rcrb
fcmovnu
jecxz
das
pusha
adc
mov
aam
pop
insb
orb
jns
inc
cmpb
adc
rcrb
pop
push
cs
inc
sub
cltd
imul
add
push
mov
add
lods
mov
pop
add
add
mov
add
pop
adc
ret
and
or
sbb
lock
push
pop
adc
add
fs
xor
mov
and
cmpb
shlb
and
inc
mov
ror
or
in
mov
daa
loopne
push
andb
add
cli
sub
bound
inc
pop
stos
or
bound
add
sbb
add
subl
ja
pop
pop
add
cmp
sbb
mov
sysexit
adc
mov
mov
andb
es
shll
int3
sbb
cmp
ret
scas
add
pop
pop
cs
mov
mov
mov
outsl
mov
or
mov
mov
jns
lret
adc
xor
mov
push
imul
shrw
jo
dec
rcr
and
add
cmp
fwait
pop
xor
shrl
xorb
and
je
xchg
ficoms
or
sbb
js
add
xor
pop
pusha
pop
lea
add
int
jecxz
cwtl
pop
ja
push
push
and
fsubrp
xor
fimuls
sbb
add
add
dec
leave
inc
add
adc
sbb
mov
and
testl
iret
sbb
sbb
inc
sbb
push
into
cmp
test
mov
imul
outsb
cwtl
mov
and
js
nop
add
jo
pop
or
clc
popl
jge
push
movsb
add
rorl
xor
push
cmpsl
sbb
adc
dec
and
adc
mov
or
fwait
mov
jmp
fadds
or
cmpsl
mov
xchg
dec
movsl
add
add
lcall
leave
insl
fs
xchg
cvtps2pd
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
xor
xor
leave
leave
leave
xor
leave
aaa
cmp
cmp
leave
leave
leave
cmp
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
scas
iret
sub
push
into
mov
fwait
jge
or
xchg
addl
mov
aad
inc
les
fsubrp
test
add
xchg
cpuid
sub
loopne
fidivl
fwait
mov
or
xchg
xchg
xchg
dec
push
mov
xchg
inc
fwait
pusha
rorb
xchg
sub
aaa
push
sbb
arpl
dec
cmp
mov
or
lret
fs
aam
lds
mov
mov
imul
pop
inc
cmp
mov
sti
shll
mov
int3
push
xor
and
sbbb
in
pusha
daa
imul
imul
mov
and
pop
add
pop
pop
push
push
mov
orl
add
jne
sub
sub
leave
inc
repz
push
decb
es
daa
add
cmp
jge
mov
jecxz
stos
and
or
dec
dec
iret
arpl
fildll
push
into
dec
or
or
xor
xlat
lods
push
xchg
daa
add
adc
adcl
add
or
pop
insb
mov
jbe
in
fnstenv
orl
cmp
aad
daa
cltd
sbb
mov
movl
fs
mov
xchg
push
je
sbb
lods
and
out
bound
lea
pop
pop
xlat
rcl
nop
pushf
sub
pop
and
hlt
inc
repnz
pop
pop
out
sub
lods
icebp
in
imul
cs
inc
imul
jns
sub
ss
pop
es
add
add
push
push
adc
aam
push
lock
inc
xchg
pop
fwait
add
adc
pop
sbb
cs
dec
fcmovnbe
add
adc
daa
inc
cmp
fs
orb
jnp
add
cmp
inc
inc
lock
gs
daa
das
adc
cmc
daa
pop
sub
rorb
add
sbb
adc
pop
push
jmp
fs
push
andb
mov
leavew
pushf
daa
leave
adc
fdivrs
jp
pop
add
rorl
dec
sub
cmc
mov
shlb
add
xor
jns
in
sub
imull
mov
mov
sub
in
add
jae
cs
pusha
adc
mov
into
push
inc
push
in
add
mov
imul
or
xor
cmp
or
add
testb
das
int
xlat
sbb
mov
or
pop
push
push
pushf
push
loopne
or
mov
cmp
xor
inc
mov
sub
or
adc
fisubrl
pop
sbb
and
xor
sbb
push
push
icebp
push
daa
add
xor
dec
in
adc
mov
stos
or
scas
sbb
pop
add
setnp
scas
pop
fildll
shll
lock
jnp
dec
jp
pop
fwait
or
add
lret
mov
sbb
aad
cmp
insl
mov
mov
or
nop
cs
test
insb
addb
sbb
outsl
arpl
and
xchg
shrl
addr16
pop
xor
faddl
outsb
xor
outsl
add
add
add
test
xorl
dec
xor
daa
cmp
fldt
les
xchg
or
je
iret
stos
or
pop
enter
int
sti
lcall
je
pop
xor
ds
ss
sub
mov
mov
sahf
or
push
xor
or
into
cmp
add
push
bound
sub
cld
clts
add
add
pop
scas
cld
or
push
xor
add
punpcklbw
sub
femms
push
mov
lock
xor
pop
dec
push
and
sbb
in
test
popf
mov
clc
cmp
sub
out
nop
outsl
test
data16
jmp
cmp
lcall
shlb
pop
jo
or
sub
inc
inc
data16
dec
sub
subl
or
pop
pop
lods
out
aaa
xchg
or
pop
or
jl
sbb
cmp
push
xchg
xchg
cltd
cmp
jle
shlb
adc
pop
inc
jno
or
jl
sub
sbb
jle
adc
fisubl
mov
movl
mov
stos
orl
enter
push
xor
mov
enter
shl
sbb
enter
inc
xchg
lret
push
xchg
mov
add
add
popa
gs
xbegin
addl
cmp
cltd
mov
adc
aad
push
pop
mov
inc
nop
flds
mov
and
jae
lea
and
sti
int3
dec
inc
insb
add
push
insb
mov
add
xlat
sub
dec
and
and
dec
dec
push
xchg
sbbb
lret
sbb
inc
ficompl
pusha
push
imul
cmpb
or
cmpb
dec
mov
add
shlb
inc
mov
add
pop
mov
xorl
loop
xor
pop
or
sub
mov
rorl
xor
es
push
mov
sub
mov
adc
inc
cltd
or
inc
add
or
and
dec
inc
repnz
adc
pop
jne
inc
xorb
andb
popl
mov
aaa
sbb
pop
sub
dec
aaa
xchg
cmp
sub
repz
cmp
nop
mov
aaa
and
aaa
loop
div
jge
loopne
rcrb
push
popa
sub
adc
loopne
js
fcoml
repz
xorb
test
xchg
add
mov
test
push
mov
add
sbb
pop
rorl
mov
pusha
xor
outsl
mov
aaa
or
mov
xchg
push
cli
test
sysret
and
lock
jbe
adcb
adc
dec
insl
pop
xor
cmp
out
das
scas
push
cmp
mov
add
adc
iret
sbb
pop
mov
pop
sbb
xor
mov
fdivl
jge
xchg
xchg
stc
mov
lds
jne
pop
pop
and
adc
pushf
pop
pusha
ljmp
out
adc
pop
or
sbb
test
push
fldl
push
clc
ficoms
call
pop
sbb
shll
cmp
xlat
fldl
cmp
test
cwtl
push
cmpsl
add
jne
aaa
mov
mov
mov
prefetchw
or
adc
add
pop
aaa
adc
cmp
mov
mov
aas
pop
dec
test
and
jne
bound
sarl
cltd
adc
hlt
pop
add
dec
sbb
adc
mov
test
je
adcb
or
je
out
lret
pop
orb
push
lods
insb
mov
hlt
popa
add
push
pop
js
add
xchg
cmp
xchg
adc
pushf
sub
mull
cmp
cmpsl
pop
mov
sbb
pop
loop,pt
enter
data16
push
lods
sub
adc
popa
sbbb
sub
adc
mov
rcll
jbe
sub
or
iret
nop
pop
cmp
cs
icebp
dec
aas
hlt
mov
and
push
aas
mov
adc
ja
test
mov
sahf
xchg
ja
daa
pop
ret
es
fwait
pop
jo
add
test
das
int
dec
aad
aad
inc
sahf
add
add
or
or
sti
hlt
push
fwait
adc
or
ret
shl
mov
xor
or
std
push
sbb
push
adc
cmpsl
or
push
shll
mov
pop
addl
push
and
lods
xchg
pop
cs
lea
xchg
mov
sbbb
xchg
pop
add
add
cs
push
ret
push
or
ss
xchg
fwait
jge
xchg
pop
mov
xchg
dec
inc
das
jb
xchg
and
out
ficompl
xor
xor
mov
sbb
cmp
cld
add
jo
scas
imul
movl
loopne
push
loopne
push
jmp
inc
jne
inc
pop
push
in
and
push
icebp
test
adc
and
cmp
or
push
and
popf
mov
addb
lods
ret
repz
sub
and
inc
adc
rcrb
pop
pop
xchg
inc
popa
flds
cmp
mov
and
pop
jl
dec
inc
jp
rcl
imul
in
pop
icebp
add
inc
jecxz
and
inc
std
lods
movsl
or
aam
mov
adc
xor
adc
mov
push
add
sub
cmp
xchg
mov
loope
xchg
jno
fsubl
mov
inc
sti
stos
loope
stos
in
scas
pop
sub
add
sbb
cmp
loop
mov
test
pop
lock
or
sub
push
or
sbb
pop
mov
mov
inc
mov
or
shrl
jmp
fwait
sub
or
mov
push
pop
xor
push
dec
pcmpgtb
mov
imulb
inc
push
push
xor
cmp
xchg
or
xchg
pop
pop
and
jmp
mov
sub
xchg
imull
sub
and
push
add
pop
inc
mov
inc
inc
push
push
les
fmuls
xchg
ss
adc
adc
or
lahf
stos
mov
cmp
jne
dec
dec
cmp
mov
dec
sbb
inc
or
xchg
inc
mov
add
shrb
adc
addr16
pop
xchg
add
addl
sbb
inc
pop
dec
pop
in
dec
call
pop
rcll
jae
icebp
inc
in
adc
sub
and
inc
daa
aaa
fistl
out
xor
dec
inc
das
mov
and
movsl
and
xor
in
pop
sbb
mov
push
fdivrl
mov
cmp
aaa
mov
jns
sbb
xchg
inc
add
mov
fsub
test
pop
daa
aas
pushf
lret
dec
orl
cmc
test
daa
push
xor
cmpsl
mov
dec
jo
push
faddl
mov
push
sbb
test
cltd
movsb
and
inc
or
and
pop
sub
cmp
fadd
popf
rorb
cwtl
jae
add
push
and
aaa
jg
push
aas
mov
xor
fs
incl
loopne
and
dec
inc
jecxz
stos
adc
or
xlat
xor
xor
inc
inc
mov
cmpsl
dec
or
sbb
mov
scas
dec
and
and
and
inc
jo
adc
loop
add
out
fcoml
or
xchg
mov
mov
lods
cmp
mov
dec
add
pop
or
adc
or
dec
add
push
inc
dec
or
inc
adcb
mov
pusha
mov
mov
adc
sub
shrl
in
add
adc
add
dec
filds
fstpt
sub
movsb
das
enter
inc
xor
cmpsb
push
repz
pop
jl
fcompl
int3
push
pop
xchg
pusha
movsb
shlb
xor
cmp
sbb
dec
add
lcall
stos
fimull
std
push
mov
push
jno
xchg
adc
xchg
je
inc
sub
pop
shl
jns
dec
cmp
lds
test
popa
jne
sbb
aam
loop
sarb
cmp
lods
push
push
adc
mov
or
add
shl
xchg
loopne
divb
pusha
adc
sub
dec
pusha
insb
sub
test
cld
gs
imull
aam
shll
out
sbb
push
sub
push
xchg
jo
in
dec
cld
lret
setb
sub
jo
pop
mov
and
xor
mov
and
int3
dec
inc
fsubs
lret
sbb
adc
rclb
xor
inc
sub
cli
lea
pop
sbb
cmp
test
or
cmpsb
jmp
xchg
dec
sub
dec
outsl
add
push
in
xor
testl
addb
addl
mov
or
jge
lret
add
dec
push
enter
push
push
cmp
or
dec
push
push
in
imul
nop
sbb
sarl
push
mov
mov
std
inc
xchg
adc
popf
add
dec
and
movsl
sahf
jge
inc
nop
xor
stc
or
cmp
fwait
sbb
test
jo
xchg
mov
cmp
pop
push
cmpsl
aas
in
imul
inc
dec
fwait
daa
pop
sub
xor
outsb
xchg
pop
repnz
push
jmp
sub
inc
inc
fdivr
mov
cmp
inc
es
js
cmp
das
mov
sbb
push
sub
rolb
ds
nop
inc
sbb
cmpsb
push
add
rcrb
sub
pop
cltd
clc
out
push
push
push
popa
test
loope
test
test
movl
in
push
jo
or
inc
xor
cmc
int
mov
xor
inc
jbe
cmp
push
or
inc
lcall
xchg
jl
xor
in
adcb
sub
mov
insb
cmp
in
adc
insl
push
xchg
adc
and
or
addl
nop
jge
pop
cmp
dec
push
mov
lods
rol
add
push
insl
sub
jo
aaa
inc
clc
push
pop
add
add
push
xor
sbb
cmp
nop
xor
or
push
jo
push
subl
add
xchg
dec
shll
std
push
cmp
add
roll
add
inc
cmc
or
cmp
ss
cmp
movsl
add
insl
rclb
sbb
and
das
pop
insb
bound
push
xchg
movsb
pop
nop
push
cmp
or
mov
mov
nop
or
add
pop
sub
add
sub
rcll
shlb
aas
xchg
notb
daa
js
test
mov
cld
push
add
adc
push
push
icebp
sub
rorb
pop
xor
outsb
bound
aad
es
mov
adcb
pop
push
pop
fbld
pop
mov
mov
or
and
pusha
mov
daa
pop
sub
lea
inc
int3
pop
test
js
inc
mov
or
and
cwtl
pop
test
and
leave
or
enter
adc
test
push
daa
pop
sub
sub
decb
push
pop
adc
mov
add
cmp
or
mov
add
roll
mov
test
add
mov
pop
xchg
and
mov
rcrb
addl
pop
cmp
jge
pop
movsl
or
xchg
mov
add
or
cmpb
inc
jo
mov
dec
nopl
mov
push
inc
pop
adc
in
fcompl
orb
pop
cmpsl
lret
and
pop
inc
dec
jecxz
jne
cmp
test
test
mov
inc
or
push
cmp
das
or
mov
xchg
out
mov
daa
dec
bound
jne
add
cmpsl
das
aam
mov
adc
xor
out
enter
int3
and
mov
or
xchg
and
and
lods
pop
mov
test
mov
clc
shlb
das
adc
and
jb
dec
test
pushf
and
or
rolb
mov
mov
and
add
out
notl
js
pusha
dec
inc
push
lret
jecxz
mov
lea
sub
ja
add
pop
rolb
pop
test
pop
mov
imull
adc
inc
sub
sbb
mov
notl
sub
push
roll
jg
pop
pop
loope
mov
mov
dec
ret
js
sub
cwtl
xor
insl
imul
movsb
mov
daa
push
lret
insb
mov
mov
or
inc
stos
add
shl
roll
addl
pusha
aad
pop
lcall
lods
lahf
movsb
cvtps2pi
test
imul
cld
aaa
sbb
dec
push
lret
cs
sub
and
rorb
adc
aaa
in
push
ret
cmp
dec
mov
sbb
jge
cmp
dec
test
push
enter
popf
xchg
add
clc
adc
loop
push
in
jle,pt
out
ja
jnp
adc
xor
sub
bound
pop
jae
pop
sarl
adc
xor
aam
mov
fsubrl
push
mov
fsubr
push
lock
sub
fnstenv
andb
and
ja
or
repz
push
inc
fs
outsl
pop
adc
movsb
mov
leave
bound
adc
in
xor
inc
sbbb
push
mov
add
cmp
jb
lahf
lahf
xlat
in
add
push
bound
scas
add
ljmp
test
aam
mov
lock
mov
pop
in
pop
fcoms
xor
and
xor
xor
xor
mov
sahf
push
inc
outsl
inc
and
ret
or
xor
cmp
lock
comiss
add
inc
inc
inc
shll
or
cmp
inc
rolb
mov
bound
lahf
push
movsl
or
mov
shlb
adc
push
lods
adc
cmp
push
fdivl
add
push
rolb
aaa
ja
push
imul
mov
push
jl
fsts
cmc
aam
push
add
inc
loop
loope
or
inc
imul
or
aas
int3
clc
push
xchg
sbb
shrl
or
aas
dec
movlps
imulb
inc
xchg
inc
mov
push
cmp
adcb
cwtl
addl
das
add
push
enter
pop
cmpsb
jb
das
int3
imul
shlb
fs
in
in
ljmp
jmp
or
adc
imul
push
mov
adc
inc
add
push
cmp
stos
aaa
clc
imul
insb
xorps
mov
mov
jb
repnz
xor
sbb
adc
mov
int
outsl
pop
mov
jmp
and
dec
movsb
ficoml
cmp
daa
daa
pop
xchg
fistpll
in
adc
jb
pop
xchg
pop
and
shrl
icebp
add
jmp
adcb
mov
mov
lds
push
and
jno
xor
ret
xchg
out
xor
dec
das
or
insl
inc
xor
das
sub
pop
inc
sbb
mov
push
stos
movsb
test
mov
ja
pop
jbe
mov
push
das
jmp
cmp
loope
inc
loopne
push
das
clc
xchg
cmp
and
mov
movaps
and
xor
mov
mov
sub
pop
inc
mov
mov
cmp
add
sbb
das
or
add
pop
pop
leave
and
add
sbb
subb
cmp
and
inc
sbb
pop
and
addl
inc
xor
push
insb
adc
lahf
xlat
out
les
das
ds
popa
or
fmuls
mov
dec
push
pop
jno
or
imul
xorl
xor
out
jo
add
and
and
mov
or
xor
adc
inc
hlt
pop
jecxz
sbb
fidivl
jge
sbb
insb
sub
mov
dec
xor
shrl
fs
mov
adc
dec
jno
push
add
test
pop
sub
mov
mov
cmc
dec
mov
mov
cmpsb
mov
jle
stc
mov
xor
add
push
flds
or
push
cmp
loopne
inc
push
arpl
xor
inc
mov
addr16
cmpsl
sbb
jae
dec
mov
push
test
mov
adc
out
fmull
es
add
cvttps2pi
xchg
jb
pop
in
adcl
add
add
js
je
xor
inc
dec
mov
shll
jae
sbb
add
pop
push
aad
mov
das
clc
je
xor
xchg
imul
inc
lea
loope
add
jg
rcll
or
sbb
mov
cmpb
jbe
clc
pop
dec
lcall
add
xchg
jbe
ret
aad
xchg
cli
cmp
hlt
jbe
jne
inc
mov
sahf
les
mov
cmp
dec
xor
ja
inc
or
xor
xor
jo
aaa
aas
add
pop
xor
or
notb
aaa
dec
mov
add
push
pop
nop
inc
add
jo
test
and
ffreep
or
adc
xchg
js
es
push
loopne
adc
add
lret
lahf
lret
inc
enter
lret
nop
xor
mov
inc
jns
xor
aaa
mov
scas
xchg
cmp
or
imul
test
add
test
inc
imul
ret
push
cmpl
pop
pop
lods
in
inc
xchg
lock
push
jp
or
pushf
jp
pushf
in
test
jp
and
or
add
push
add
jp
pop
xchg
sbb
or
add
inc
jae
loop
dec
aad
test
xchg
pop
es
das
les
in
push
push
xor
into
loopne
adc
enter
sbb
sub
dec
mov
inc
jl
movsb
cmp
add
pop
sbb
sub
add
and
sub
jge
pop
lahf
push
xor
sbb
sub
jns
jp
loopne
enter
push
add
out
add
sbb
call
cmpsl
add
pusha
adc
pusha
mov
or
pop
jb
jge
adc
add
orb
sbb
addr16
inc
cmpsb
xchg
or
imul
cmpl
pusha
sub
sub
iret
mov
cmpsl
aam
mov
fldt
testl
push
imul
adc
xor
xor
bound
gs
jg
leave
mov
setb
add
dec
pop
sarb
cmp
adc
push
sub
lods
sbb
sbb
sbb
movl
mov
pop
sbb
in
dec
push
add
push
inc
ljmp
inc
and
fldt
adc
ss
test
sbbl
xchg
lret
mov
sbb
dec
add
roll
addl
mov
lahf
mov
test
and
inc
push
jecxz
and
cmp
lret
lret
push
addb
xor
into
mov
repnz
pop
iret
mov
call
dec
add
adcl
pop
or
repz
adc
test
rcr
movsb
es
das
movsl
sub
addb
push
inc
fcomps
add
out
jecxz
push
test
dec
sbb
add
cmpb
aaa
sbb
outsl
pop
dec
pop
dec
jnp
add
les
jbe
xor
xchg
pop
and
lds
mov
addl
lods
add
in
das
lock
xchg
adc
add
xchg
push
xchg
pushf
add
in
add
int3
xor
xor
mov
andl
add
jns
mov
xchg
adc
les
sub
mov
or
aad
xchg
mov
xchg
xchg
inc
inc
cmp
pop
test
orl
shll
sub
add
dec
mov
bound
test
and
mov
jp
jno
mov
push
nop
dec
fidivrl
push
std
das
mov
jmp
nop
jne
pop
ds
xchg
lock
incb
repnz
push
pop
sti
mov
ja
js
xor
outsb
push
and
push
ja
pop
scas
inc
push
add
adc
les
adc
adcb
mov
xchg
xchg
mov
pop
out
movaps
xchg
scas
sti
mov
daa
mov
sete
cld
es
xchg
xchg
xchg
lea
out
nop
cltd
jle
sub
sub
or
adcl
and
dec
lods
and
or
jne
add
in
daa
test
inc
jecxz
or
adc
cld
jnp
dec
rolb
pop
test
push
dec
dec
std
or
sbb
xor
rorl
ret
cmp
dec
insb
xor
inc
in
test
mov
ja
std
mov
add
dec
fs
add
rcrl
adc
repz
lea
add
jns
mov
jl
aam
push
inc
add
sub
inc
ret
pop
sub
mov
dec
xor
loopne
mov
dec
mov
jo
mov
bound
xor
xor
push
adc
iret
imul
pop
or
sbb
cmc
fiadds
push
mov
or
cmpsl
cltd
push
push
pop
int3
push
es
sbb
loopne
subl
inc
or
cmp
dec
xchg
testl
and
aas
or
push
sahf
daa
sub
or
daa
mov
daa
and
ucomiss
andl
hlt
ja
xchg
mov
nop
mov
pop
mov
mov
dec
sbb
arpl
int
xchg
push
sub
lret
sbb
mov
std
and
imull
sub
aas
add
cltd
adc
sti
jb
xchg
movl
inc
adc
in
aas
loopne
adc
mov
push
inc
dec
sub
lds
xor
nop
or
xchg
add
sbb
es
fstl
inc
in
xchg
andl
push
add
stos
and
or
adc
mov
xchg
pop
mov
xchg
pusha
push
dec
xor
loopne
rorl
or
setbe
inc
cmp
xchg
or
lret
or
add
inc
rcll
dec
xor
inc
jb
test
jmp
popa
sub
lahf
movb
cmp
add
or
dec
jmp
adc
adc
push
sub
jl
dec
popf
imul
add
jg
int3
mov
mull
orl
push
ret
adc
data16
popa
test
xchg
lahf
cwtl
lea
push
int3
lahf
push
xorl
xchg
les
and
sub
adc
lds
sarb
insl
push
mull
and
sbb
add
das
mov
and
pop
loopne
mov
rorb
scas
jp
push
out
mov
push
xor
dec
decb
xor
orps
sbb
mov
jmp
daa
nop
cli
pop
adc
add
push
inc
adc
mov
in
insl
stos
mov
lods
mov
inc
or
mov
test
gs
pop
lcall
push
add
or
sub
int3
fwait
shlb
iret
popa
in
add
xor
adc
nop
lock
adc
and
fisubrl
add
push
enter
adc
sbb
inc
scas
dec
push
add
xchg
das
popf
neg
fisubs
pop
or
push
je
sti
mov
add
test
push
add
xchg
daa
inc
push
mov
mov
cwtl
lods
cmove
add
popl
and
adc
xchg
mov
je
add
sbb
popa
les
xor
pop
movsb
push
lods
scas
sbb
int3
and
lret
and
sbb
pop
int
in
add
and
sbb
or
dec
aad
mov
and
add
inc
mov
dec
test
cmp
incl
jo
das
subl
notb
inc
cmp
or
jg
lock
cmc
mov
pop
add
adc
or
jp
push
dec
xchg
add
mov
lock
cltd
push
add
mov
cld
cwtl
cmpsl
push
jecxz
sbb
or
xchg
xchg
or
cs
sub
xor
mov
sub
xchg
push
rorb
out
push
add
xchg
popa
xlat
or
xchg
popa
loop
imulb
cli
addb
enter
add
cmp
cmp
sbb
push
and
pusha
xor
mov
jl
pop
sahf
mov
and
loope
mov
notb
cmp
pxor
adc
xchg
les
cli
and
push
outsb
daa
iret
leave
in
rcl
in
sbb
mov
negl
push
add
sti
jno
adc
add
popf
add
lret
int3
sub
test
mov
sahf
mov
mov
fcomp
shll
sbb
mov
mov
into
ret
fadds
neg
inc
push
cltd
sub
sub
lock
xchg
aaa
push
sti
or
pop
out
dec
enter
and
outsb
mov
sub
xchg
fwait
xchg
mov
inc
add
push
int3
or
jmp
js
inc
fsubs
dec
or
add
pop
lods
mov
pop
inc
pop
rcll
pop
sub
adc
push
xchg
mov
flds
cmc
jae,pt
stos
inc
pop
roll
cmp
testb
sbb
shr
outsb
scas
inc
fists
loope
pop
dec
mov
dec
pushf
iret
repz
or
popa
sub
jns
sbbl
push
mov
add
repnz
mov
push
inc
popf
daa
mov
or
jb
jns
aaa
subb
dec
push
fsubrs
jmp
and
popf
and
frstpm(287
bswap
jne
pop
lret
sahf
testb
ror
xor
std
or
fdivl
xchg
cmp
mov
test
dec
pop
in
cwtl
xor
mov
sub
add
andl
or
pop
mov
mov
adc
push
andl
add
adc
in
mov
orb
inc
adc
loop
add
ret
mov
sbb
xchg
dec
or
add
dec
outsl
icebp
mov
inc
push
xor
and
mov
in
out
pushf
push
movl
adcl
or
sbb
adc
icebp
nop
push
jecxz
orl
pop
lea
ss
inc
inc
xlat
xchg
sbbb
or
mov
pop
pop
add
lcall
adc
inc
mov
adc
sub
push
add
inc
pusha
andb
mov
add
inc
or
dec
arpl
nop
sbb
push
sbb
pop
push
test
xor
xor
adc
ret
mov
xchg
adc
xchg
stos
fs
add
pop
mov
cmp
ret
sbb
xchg
adc
add
cmp
roll
pop
orl
push
fimull
test
jmp
cmp
jmp
mov
cltd
mov
das
mov
jmp
adc
or
nop
adc
fcoml
xchg
mov
xchg
mov
mov
lsl
stos
dec
jge
aad
mov
and
or
cmp
ficoms
pop
cmc
or
push
mov
xchg
push
cli
mov
std
adc
add
add
push
inc
xor
push
add
repz
add
repz
dec
push
push
push
pop
adc
test
gs
mov
add
adc
pop
loope
add
mov
out
or
push
and
jbe
out
or
lods
movsl
mov
mov
fisttpl
sub
aas
mov
ret
daa
jmp
cmp
add
jo
ret
iret
out
or
xchg
js
ficompl
pop
daa
pushf
shlb
dec
mov
test
sbb
rolb
mov
or
fiadds
gs
xor
bnd
xor
shlb
mov
xor
xchg
mov
dec
mov
cmp
inc
dec
fnstenv
in
jle
js
and
jno
out
jne
adc
add
mov
inc
xchg
mov
cwtl
sub
xor
and
mov
rclb
sub
push
mov
or
mov
adc
lret
leave
lahf
xor
jp
fidivl
cmpsb
pop
ss
add
xchg
xchg
adc
fcomps
and
pop
inc
in
mov
addl
rcr
add
mov
fcmovu
movd
add
jmp
lret
push
mov
inc
add
mov
lret
push
xlat
add
pop
add
add
sub
xor
mov
jecxz
lea
push
fwait
movsb
sub
xor
outsb
call
inc
test
cltd
pop
cmpsl
xchg
ss
fsubrs
cmpsl
push
xor
adc
and
cmp
push
clc
dec
insl
cmp
cltd
pop
add
push
sarb
cmp
inc
or
sub
adc
clc
mov
cltd
idiv
inc
inc
data16
pop
xor
dec
arpl
in
sarb
je
stos
repz
lock
arpl
cmp
cmc
in
jae
add
leave
jae
inc
and
pop
imul
fbld
jecxz
push
push
or
imul
adc
pop
fbld
lea
push
ret
cmc
xor
pop
add
jne
push
scas
sub
push
cmp
iret
sti
jle
jmp
cmp
xchg
cmp
and
fsubrl
cmc
cmp
sbb
rclb
or
cwtl
cmpsl
cli
xor
stc
push
push
xorb
imul
dec
addr16
mov
mov
pop
adc
or
mov
sub
loope
aaa
mov
jnp
pop
daa
movsb
or
sbb
pop
xchg
cwtl
sub
adc
pop
jne
xor
adc
jne
pop
sub
cmp
adc
and
add
cmp
push
adc
scas
jmp
jl
lcall
dec
xchg
das
pop
and
adc
cltd
mov
and
push
rcr
and
clc
mov
mov
push
movsb
clc
sub
push
lahf
scas
or
pop
scas
mov
mov
or
inc
inc
dec
lods
jae
test
mov
mov
sbb
pop
mov
add
dec
push
pop
ret
fsubrp
xchg
add
cmp
repz
adc
popa
out
or
add
shll
add
das
lods
or
xor
add
inc
ja
xor
movl
and
test
and
and
push
push
cwtl
fsubp
dec
xchg
adc
cmpsl
push
fistpl
mov
jmp
neg
push
pop
xor
mov
pop
dec
inc
and
ret
adc
sahf
sbb
xor
pop
add
pop
out
xchg
jle
add
add
mov
rorb
shl
xchg
xchg
mov
mov
push
sub
and
adc
add
sbb
shlb
push
push
testb
cltd
idivl
mov
dec
imul
add
jmp
jge
push
add
dec
xchg
into
inc
mov
add
push
xorl
dec
push
or
sbbb
add
add
setns
xchg
mov
jmp
or
das
pop
push
sbb
mov
push
es
adc
in
sub
and
daa
adc
adc
pop
or
inc
iret
push
xor
enter
and
and
sbb
pop
outsb
fs
or
rcrb
test
xchg
xor
rolb
mov
idivl
add
push
fildll
faddl
push
sti
mov
sbb
push
loop
jl
es
sub
lcall
sbb
test
jae
int
dec
test
fmuls
sub
inc
nop
lahf
mov
nop
sub
jge
insl
loope
cld
adc
push
push
and
pop
sbb
pop
mov
mov
arpl
out
fsubs
int
and
mov
lods
and
and
push
fldt
mov
push
insl
and
or
mov
push
and
pop
movsb
pop
leave
jo
mov
or
sbb
jmp
fbstp
lock
push
pop
je
fdivrl
divl
xor
loop
dec
data16
mov
data16
sbb
loope
push
and
or
add
push
mov
cmp
roll
jno
data16
enter
imul
lods
xchg
out
push
xchg
push
dec
sub
xor
decb
divl
shl
and
xacquire
dec
pusha
sub
pusha
jmp
leave
sbb
das
inc
icebp
or
sub
in
enter
mov
mov
out
mov
xor
push
cmpsl
movb
notl
adc
pushl
and
dec
mov
add
or
cmpb
sub
enter
stos
jecxz
ss
adc
sub
jns
pushf
lods
out
in
jl
outsb
pop
lods
mov
adc
and
aam
cmp
and
sbb
loope
dec
cli
jnp
dec
mov
std
adc
fs
fidivl
mov
add
push
cmpsl
insl
xchg
dec
rcrb
or
sbb
xor
or
mov
or
xor
mov
jmp
scas
xor
mov
andl
sub
adc
mov
or
inc
stos
movsb
and
dec
inc
imull
ja
mov
popf
xor
imul
ret
adc
mov
gs
sbb
or
jmp
sbb
and
jno
into
jne,pn
and
lods
add
pop
cmp
insb
cmp
push
add
insl
je
mov
jmp
mov
int
je
pop
jl
cmpsl
xchg
outsb
mov
push
ja
lret
stos
push
and
xchg
inc
pushf
mov
mov
stc
and
pushl
or
xchg
in
xlat
flds
test
sbb
int3
int3
dec
ret
int3
mov
lahf
xorl
dec
pushf
lea
fmuls
test
stos
pop
jmp
lahf
out
shlb
pop
mov
or
fnsave
ficomps
xchg
adc
orl
xor
mov
popa
jmp
pop
cmp
mov
xor
inc
in
and
pop
xor
or
adc
dec
cmp
cmpsl
add
push
jmp
fldt
sbb
sub
adc
mov
das
pop
fdivrl
fsubl
or
push
push
xchg
xor
les
fadds
and
cmp
dec
xor
pop
add
test
push
add
xor
filds
jl
bound
fs
mov
dec
xor
imul
xor
cltd
in
sbb
sbb
lock
cmp
or
testl
push
test
ret
xor
adc
add
inc
and
insb
enter
addr16
xchg
sbb
jbe
leave
cmc
mov
dec
in
mov
std
cmp
popa
or
pop
popa
sbb
sbb
lock
dec
xchg
mov
pop
addb
in
mov
paddusw
sbb
and
enter
cltd
movsb
jmp
and
shlb
and
mov
and
xchg
addr16
mov
add
mov
std
pop
divl
out
ficompl
push
cmpsl
loop
cs
and
test
xchg
mov
sub
mov
xorl
push
clc
xor
adc
in
test
or
stos
adcl
mov
stos
or
into
push
jns
xchg
movsb
jg
pop
push
hlt
adc
cmp
jnp
jmp
aad
xor
xor
jp
mov
inc
xor
fs
xchg
mov
int
pop
mov
ffree
push
xchg
imul
imul
mov
mov
pop
or
rcll
add
push
test
ret
loop
call
lahf
inc
call
xor
inc
inc
lods
inc
lea
addr16
mov
dec
xlat
pop
mov
adc
or
movsl
mov
lcall
jne
gs
sbb
xor
sbbb
add
mov
fbstp
lea
shrb
push
pop
add
fdivs
sub
push
mov
jnp
ljmp
imul
mov
cmp
or
sbb
out
fwait
adc
and
mov
sub
mov
sbb
and
nop
mov
js
popf
or
lea
lret
or
or
mov
push
xor
mov
cmp
push
xor
push
icebp
push
adc
arpl
lds
lret
xchg
mov
dec
mov
repnz
inc
mov
insl
mov
and
sti
clc
cld
out
loopne
cs
lret
mov
into
push
sub
repz
push
out
inc
or
rcll
sti
clc
add
jo
xor
fwait
sbb
cmp
mov
sbb
lods
sbb
pop
ja
cmp
add
inc
cmp
push
mov
jg
call
push
push
add
sub
shlb
das
mov
popa
mov
rcrb
inc
mov
ja
mov
add
and
jbe,pn
cltd
mov
inc
mov
adc
outsb
testl
das
cltd
adc
inc
jno
das
and
nop
stc
xchg
aaa
in
cmp
ja
mov
leave
push
or
dec
mov
test
decl
add
int3
fildll
faddl
je
stc
shrb
pop
adc
test
jae
mov
jg
insb
fs
iret
cwtl
cwtl
call
sbb
mov
xchg
fmuls
push
push
lods
out
xchg
inc
mov
cmp
jl
out
movsb
push
jge
add
jae
push
add
into
push
mov
loope
dec
jae
pop
cmp
xchg
pop
and
test
cltd
fimull
push
das
aas
lock
lea
in
adc
out
imul
push
add
rorb
sub
jp
pop
mov
aaa
repnz
pusha
dec
xchg
xchg
daa
inc
inc
xor
repnz
fdivs
mov
mov
xorb
add
inc
add
jle
push
xor
cmp
mov
ja
cmp
pop
jmp
jg
and
jae
jge
testl
or
mov
cltd
arpl
je
int
push
insb
or
leave
jo
int
jg
sbb
cmp
addb
push
jle
test
lea
cmp
and
inc
push
inc
add
pusha
xchg
addl
sub
ss
loopne
loopne
js
jae
xor
jmp
ret
adc
insb
es
je
mov
or
sbb
lock
or
add
testl
adc
notl
ffreep
mov
daa
adc
cltd
movsb
loop
or
sarb
inc
insb
or
xchg
repnz
ja
pop
fstpl
es
push
xorb
sbb
aas
insl
jae
xchg
dec
mov
call
fwait
add
mov
out
pop
fimull
dec
add
dec
pusha
movsb
mov
ss
mov
mov
adc
movsl
inc
add
aam
stos
or
push
shr
push
push
es
xlat
adc
cmp
jbe
lea
aam
xchg
mov
push
inc
sub
in
mov
mov
inc
push
inc
sbb
jno
mov
flds
cmc
pop
xchg
or
push
add
push
ja
and
xor
mov
lcall
push
clc
movsb
adc
es
inc
mov
xor
int
pop
cld
inc
lods
adc
ja
xor
mov
les
enter
mov
inc
in
push
stc
sub
dec
cwtl
bound
dec
adc
push
sbb
subb
mov
shlb
add
hlt
adc
mov
push
push
test
mov
or
fildll
xchg
cmp
aam
jmp
cmp
cs
hlt
adc
push
pop
xor
sbb
data16
std
lods
pop
xor
ret
sbb
mov
aaa
and
es
push
das
stc
es
adc
fwait
sbb
scas
or
push
add
shll
out
pop
add
add
pop
les
push
rolb
push
adc
add
pop
lret
into
fimuls
add
sub
adc
iret
sub
xor
xor
out
push
cs
jnp
stos
pusha
adc
pop
pusha
fldenv
test
ljmp
hlt
adc
jmp
push
shlb
cmp
int3
mov
xchg
adc
or
imul
lods
sub
cltd
dec
xchg
out
add
add
ds
sbb
nop
mov
call
add
adc
ss
rol
mov
mov
sbb
mov
adc
cmp
and
jecxz
push
loope
dec
push
sbb
push
std
sub
xchg
xchg
push
test
push
mov
aad
xor
bound
in
rcr
sub
test
sub
push
fisttpll
add
or
mov
add
neg
int
leave
cwtl
dec
push
cs
mov
jb
sub
cli
dec
mov
cmp
xchg
popa
fmull
inc
test
xor
daa
mov
cmp
mov
lea
orb
lock
xlat
stos
dec
sbb
and
dec
mov
fldcw
lock
into
pop
shll
outsb
xchg
push
in
fcmovbe
js
aaa
daa
add
jne
and
nop
daa
add
add
test
rolb
lock
nop
outsl
mov
clc
cmc
rcr
add
decl
pop
xchg
add
pop
jo
adc
iret
mov
add
inc
mov
bound
ret
lret
jae
jb
jle
loop
and
xchg
test
sub
xlat
es
push
clc
es
shrl
add
insl
mov
pop
add
pop
into
cmp
jo
push
mov
mov
push
cmp
push
push
add
ret
or
cs
lock
push
outsl
mov
add
sub
std
insl
mov
scas
bound
jge
xchg
rcll
pop
invd
jb
add
push
xor
popf
or
lcall
add
push
push
cmpsb
popf
fs
add
inc
lock
pop
and
insb
lahf
ss
les
test
mov
and
das
in
push
and
sub
add
andps
push
cwtl
push
push
push
addr16
out
cmpsb
mov
xchg
push
aad
xchg
push
push
dec
jb
add
es
dec
mov
aad
ret
pop
aam
adc
push
lret
dec
lods
mov
aad
jg
adcl
add
push
push
mov
sub
dec
pop
pop
jp
in
push
mov
icebp
mov
je
lods
fadd
loopne
mov
add
and
inc
mov
mov
jno
mov
xor
aad
add
push
jno
fwait
jmp
repz
push
jb
xor
xor
jns
fmuls
daa
outsl
les
mov
push
fs
push
jne
sbb
push
imul
cmp
cmovge
dec
stos
push
and
xchg
aad
leave
xorb
push
pop
lret
add
ljmp
sbb
adc
mov
or
in
adc
push
imul
in
lock
xor
jo
pop
int3
cmp
push
dec
rorl
sub
pop
or
add
cmp
mov
lock
out
popa
fcoml
push
sbb
movsb
sub
in
xlat
sbb
movsb
das
mov
push
push
push
inc
outsl
jmp
adc
push
aam
xlat
adc
mov
add
pop
rcrl
mov
fadd
fsubrs
pop
clc
push
add
sub
lock
outsl
push
push
inc
xchg
xchg
xchg
pop
dec
fstpt
aad
les
sbb
and
cs
fisttpl
lahf
sub
and
in
fmuls
inc
sub
xor
cmp
inc
rclb
push
or
add
fwait
mov
pop
mov
inc
pop
test
enter
jg
push
adc
push
add
add
xor
loopne
xor
fnstsw
adc
mov
adc
pop
fst
adc
sub
lea
inc
adc
cmp
loopne
nop
test
or
pop
inc
xchg
or
movsl
xorb
ss
popa
das
mov
cmp
add
fdivrp
ficomps
iret
fidivs
dec
inc
push
and
lret
clc
fimuls
push
in
roll
scas
sbb
test
xchg
fistps
dec
adc
loopne
jb
add
sbb
fildll
push
and
bound
sbb
shlb
arpl
in
add
lret
dec
add
sub
add
sbb
outsb
inc
ret
add
ficomps
cmp
inc
enter
fimuls
jmp
sbb
adc
inc
in
adc
add
pushf
sub
pushf
pop
sbb
lock
add
cmp
push
inc
pop
mov
inc
add
or
sub
sbb
dec
fcoms
cmp
call
repnz
das
sbb
or
insb
fisttps
cmp
repnz
rolb
xchg
jecxz
adc
dec
repnz
push
movsb
setb
sbb
jecxz
leave
stos
push
and
sbb
cmp
mov
stc
jecxz
pop
push
or
dec
and
movb
lret
mov
mov
les
cmp
dec
fsub
pop
shl
cmp
stos
scas
in
adc
cld
shlb
insb
push
test
sbb
addr16
in
push
xchg
add
pop
mov
mov
in
sbb
jns
outsl
mov
dec
adc
pusha
cmp
mov
out
mov
push
cmc
dec
sbb
out
negb
fildll
sti
push
or
mov
loopne
mov
xor
cmp
push
je
mov
push
add
loopne
enter
sbb
or
adc
fs
in
sbb
lods
pop
push
adcl
btc
shll
cmovae
int
push
fcomps
das
test
add
cmp
das
sub
jmp
pop
cmc
cmp
mov
and
inc
mov
sub
stos
xchg
shrb
push
enter
stc
mov
outsl
pop
dec
adc
stos
xor
pop
sbb
sbb
outsb
mov
mov
js
add
sub
pop
or
stos
shlb
push
adc
or
push
mov
push
pop
xchg
faddl
sub
das
cld
fdivl
sub
inc
xchg
pop
push
pop
push
fisttpll
nop
inc
call
pop
pop
mov
cmp
jae
lods
jl
cmp
clc
xor
xlat
jg
outsl
mov
xchg
out
daa
daa
daa
and
stos
icebp
rclb
scas
out
add
mov
sub
add
xchg
dec
call
dec
pop
adc
lock
shl
jno
pop
xchg
mov
test
push
sbbb
jecxz
pop
push
mov
jnp
stos
push
rclb
adc
push
jae
test
add
mov
mov
dec
mov
sub
add
add
pop
pop
mov
and
pop
jl
pop
adc
pop
in
and
push
inc
push
or
pop
jle
pusha
insl
jns
nop
sbb
fimull
inc
add
pop
xorb
leave
and
mov
and
pop
test
cmp
push
sbb
add
push
mov
add
adc
and
xchg
cmp
rol
cs
rclb
lods
out
adc
and
call
or
push
rcr
mov
enter
or
leave
ljmp
pop
adc
sbb
push
or
add
sbb
sub
mov
pop
cmp
push
add
pop
add
mov
dec
test
add
adc
pop
mov
adc
loope
jne
fnstsw
js
push
pop
pop
repnz
pop
dec
repnz
outsb
pop
push
punpcklbw
iret
inc
add
push
cltd
repnz
adc
push
je
bnd
bound
push
push
lret
sbb
repz
jo
pop
test
mov
rolb
les
test
iret
rcrb
pop
or
sub
sub
xchg
and
cmp
pop
adc
inc
push
rcll
hlt
test
negl
mov
mulb
jo
fnsave
xchg
sub
mov
sbb
add
shrb
inc
jo
dec
cmc
pop
shrb
push
add
mov
rolb
ljmp
push
cmp
mov
xor
call
sbb
jns
incl
bound
in
add
add
notb
cmp
jns
sub
add
add
or
mov
enter
mov
shrb
das
sbb
aas
and
mov
fs
sbb
clc
clc
push
sub
push
lds
sub
cmpsb
sub
sub
idiv
push
lea
enter
ret
popa
xor
dec
add
push
cmp
shlb
addr16
stc
cli
es
xchg
adc
jns
mov
or
cli
dec
test
inc
mov
pushl
cmpb
push
ss
outsl
pop
dec
or
inc
mov
and
lcall
cld
fisttps
sub
das
sti
sti
mov
cli
lock
cmp
xor
and
cld
cld
push
xchg
sbb
add
nop
sub
jo
in
cld
int3
sub
and
and
cld
pusha
dec
test
int3
ret
dec
call
setb
sub
mov
popl
subb
shlb
add
pushf
ljmp
or
mov
dec
test
faddl
cmp
dec
jmp
mov
lods
sub
xchg
pusha
add
outsl
pop
xor
orl
adc
sbb
xchg
sub
call
add
mov
popl
pop
add
repz
insl
loop
and
in
sub
test
incl
dec
or
jmp
lea
orb
jg
incl
pushf
mov
incl
leave
adc
clc
cld
in
add
decl
lods
xorb
in
xor
jg
add
or
push
decl
sbb
pop
subb
cmp
scas
les
lcall
sub
lods
inc
cltd
or
orl
pop
sbb
mov
sbb
test
jecxz
add
test
fsubl
push
add
enter
inc
adc
or
add
loopne
mov
leave
push
sar
daa
inc
aad
inc
shlb
add
lods
add
pop
sub
push
insb
and
sub
js
and
jb
cmpb
ss
push
jns
mov
add
fimull
incb
and
pop
and
cmp
mov
mov
or
sub
inc
or
sub
dec
adc
call
xchg
call
sbb
sub
sub
lcall
lds
pop
push
jno
and
sbb
mov
rolb
or
leave
ljmp
pop
and
loopne
mov
add
decl
pop
xchg
push
and
sbb
xchg
nop
inc
pop
aam
push
ret
rol
lock
xchg
and
ret
pop
push
add
pushf
mov
popa
pop
subl
mov
unpcklps
and
xor
loopne
and
jne
or
mov
pop
jbe
mov
sbb
add
aam
inc
arpl
lahf
push
cltd
insb
imul
mov
xor
into
repz
mov
pop
int
mov
cs
jbe
mov
add
or
in
add
pop
inc
data16
or
orb
push
outsb
mov
ret
movsl
lock
movhps
enter
fdivrl
or
bound
mov
sub
pop
xor
test
add
push
bound
loope
and
cwtl
pop
inc
xchg
shr
sub
es
xchg
adc
loope
xchg
mov
sar
mov
inc
xor
sbb
pushf
inc
cs
testb
or
dec
xchg
enter
loopne
lds
push
add
testl
mov
mov
jo
rclb
jg
or
xor
and
add
jmp
add
add
sbb
xchg
cmp
das
sbb
mov
mov
cmp
jmp
in
dec
pop
xor
mov
lds
and
xorb
pop
and
or
sbb
ret
sbb
andl
ret
mov
adc
je
xchg
adc
or
ljmp
xchg
or
adcb
adc
sub
clc
jnp
xor
insb
fcmovnb
sbb
pop
adc
add
outsl
out
jmp
push
xor
test
or
sub
hlt
lods
dec
movsb
adc
sub
cmp
in
mov
enter
mov
sbb
add
call
xor
mov
and
outsl
inc
push
sahf
fwait
sbbb
jbe
rcrb
dec
aaa
pop
and
adc
sub
int3
lods
and
cmp
inc
add
sub
dec
and
sbb
dec
pop
xchg
daa
mov
mov
mov
test
sbb
or
insb
fsubrl
das
adc
sub
push
mov
and
das
packssdw
sbb
imul
mov
hlt
mov
push
cwtl
in
adc
or
jae
xorb
or
nop
iret
dec
pop
lahf
mov
mov
mov
adc
xchg
pop
ljmp
in
hlt
add
adc
mov
orb
xchg
xchg
push
sub
movb
lds
in
pop
outsb
or
sbb
and
loopne
jnp
fdivrs
cmp
push
or
call
jg
divps
shlb
sar
sbb
mov
aaa
adc
pop
dec
pop
mov
and
stos
inc
push
adc
fistpl
ror
out
jg
gs
or
adc
fwait
push
push
jns
dec
inc
paddb
pop
mov
icebp
fs
push
icebp
cmpb
stc
in
imul
add
pushf
push
jno
push
notb
dec
cmp
sub
or
repnz
lahf
ljmp
ror
add
sub
cli
mov
or
sbb
pusha
or
adc
xor
lcall
dec
popf
adc
and
int
jecxz
add
cmp
dec
in
int3
out
xchg
mov
mov
or
inc
cli
sub
imul
inc
iret
pop
nop
rorb
or
adc
mov
imul
sbb
into
js
dec
inc
addr16
and
jmp
mov
push
and
adc
lcall
xchg
dec
xor
sub
push
sbb
test
pop
lahf
sbb
cmp
insl
out
imul
lea
rorl
ds
cmp
aaa
aad
xor
lods
inc
pop
sub
imul
loop
add
jb
and
test
out
xchg
jo
or
add
fdivrs
adc
das
movsb
push
adc
rolb
scas
adc
aad
inc
xchg
js
dec
je
fwait
dec
mov
xchg
add
aad
xchg
stos
or
fadd
dec
add
ja
pop
int
xor
fs
sub
cwtl
xchg
mov
dec
inc
repz
gs
aad
xor
daa
movl
call
mov
adc
dec
pop
pmulhuw
dec
clc
sub
adc
movsl
rcrb
adc
sbb
shlb
daa
adc
or
sub
pop
in
xorb
push
mov
clc
sub
add
aam
adc
and
and
inc
cmc
pop
inc
dec
aaa
jo
das
mov
add
inc
add
mov
pop
pop
push
loop
inc
je
subl
or
cmp
or
mov
push
xor
lock
xchg
cltd
data16
add
or
enter
clc
pop
or
mov
jne
pop
sbb
xchg
mov
sti
cmp
and
sbb
pop
cld
adc
sub
add
inc
sbb
je
mov
mov
popa
leave
sbbl
mov
das
rclb
pushf
cwtl
nop
aas
cmc
add
push
pop
sub
xchg
inc
sub
pop
and
xchg
sar
xor
rcll
sub
daa
ljmp
add
sbb
std
push
jge
loopne
out
jnp
es
nop
nop
sub
pusha
cmpsb
hlt
add
add
jo
aam
fldl
inc
ja
pop
ljmp
shlb
sub
sub
push
je
aad
and
sub
das
gs
out
out
int3
insl
lea
movsb
subl
add
shll
jne
movsb
insl
cld
rcr
adc
adc
pop
ret
or
ret
push
mov
cltd
sbb
mov
cld
lock
les
insb
test
ret
cmpsb
sarb
push
add
enter
dec
lcall
pusha
mov
mov
ja
pop
mov
shlb
adc
xor
mov
lahf
push
dec
cltd
push
add
dec
add
cltd
loop
movsb
adc
sub
push
inc
add
xchg
or
sub
inc
cld
push
sub
mov
scas
xchg
pop
js
mov
sarl
lods
cmp
cltd
iret
lret
adc
sarb
add
cmp
fldenv
cwtl
or
out
and
jb
jne
sbb
add
test
push
and
mov
sub
clc
inc
cmp
mov
fisubs
push
push
jle
clc
popa
mov
cmpb
mov
cmpsl
popf
jl
sbb
and
mov
cmp
adc
sbb
or
loop
mov
sbb
fidivl
or
or
mov
movzwl
rolb
add
arpl
pop
push
push
sub
js
fmuls
fldl2t
cmp
dec
adc
mov
mov
add
notb
and
sbb
jbe
xchg
add
std
pop
sbb
rcrb
add
lea
imul
fs
mov
push
scas
xchg
mov
push
jmp
fnstenv
stc
aam
adc
cwtl
jae
or
andl
and
pop
test
cmp
inc
shrb
sarb
mov
jmp
aam
or
xchg
fdivs
dec
jp
and
test
inc
jbe
push
nop
rorb
pusha
rclb
testl
testl
mov
in
jp
or
mov
mov
rcrb
cmpsl
pop
add
jecxz
inc
in
sarb
jae
jb
aaa
aaa
and
push
int3
js
add
sbb
xchg
clc
and
dec
xor
and
mov
lds
xor
push
xor
pusha
push
rcll
push
mov
test
cmp
jl
out
pop
xor
ret
fldt
addr16
cmp
dec
pop
addr16
lcall
pop
push
jno
inc
lea
inc
push
ja
xchg
jo
mov
mov
xchg
das
popa
dec
orps
add
call
and
adc
cmp
add
or
push
mov
dec
sub
sti
loope
aaa
xorb
loop
and
insl
adc
roll
pop
xchg
and
add
push
add
and
ds
ret
stos
pop
jp
sbb
sbb
cmpsb
inc
xchg
pop
cmp
xchg
ficomps
push
inc
imul
and
or
jmp
xor
and
push
push
cmp
stos
and
fisttps
test
cmp
sub
arpl
and
and
cmp
cmpb
insl
add
pop
sbb
push
call
push
loopne
pop
icebp
cmp
inc
in
xor
push
and
cmpsl
cmp
sbb
push
test
out
xor
mov
adc
pop
push
and
sub
jl
daa
xor
inc
xchg
xor
push
aam
jb
loop
daa
jg
loope
pmaxub
xchg
jp
es
adc
repnz
in
mov
jb
xor
ljmp
push
lahf
aad
sub
scas
rorl
inc
sahf
or
inc
jp
dec
sahf
fmull
aas
cld
inc
sub
lret
sub
std
pop
push
shrl
sbb
dec
enter
dec
add
cmp
pop
sub
xor
jno
jecxz
push
cwtl
test
jp
sbb
or
inc
lock
mov
sub
sbb
mov
cmp
ret
or
pop
stos
mov
cmpsb
push
jbe
pop
pop
xor
ret
or
dec
sbb
push
or
mov
xchg
lcall
add
sbb
int3
or
dec
or
ret
push
or
mov
pushf
popa
add
dec
jo
movsb
sub
testl
notl
add
div
sbb
mov
je
adc
xchg
and
clc
jl
xchg
in
movsb
add
dec
aaa
add
xor
scas
popa
add
xor
or
jno
lret
mov
inc
aam
lret
dec
sbb
push
sub
fmuls
mov
and
add
inc
cmp
sbb
lret
xor
and
mov
adc
xchg
or
xchg
inc
and
mov
mov
inc
pop
lea
mov
pop
xor
pop
cli
aad
sbb
xor
mov
xor
add
pop
mov
mov
mov
mov
inc
mov
lods
mov
insb
lods
js
ja
add
sbb
xor
pop
xor
mov
mov
pop
lods
int3
ret
sub
sub
mov
pop
sbb
sbb
mov
movsb
push
sub
arpl
xor
push
pop
cld
cmpsb
push
lds
dec
and
hlt
mov
pushf
jbe
adc
mov
mov
dec
add
xor
pop
ror
adc
fldt
or
bound
mov
ds
mov
sti
add
pop
cmp
imul
inc
mov
leave
lock
xor
or
stos
jle
cmp
outsl
mov
pop
add
push
fistpl
xor
and
dec
ss
sbb
inc
loopne
push
inc
xor
data16
xor
nop
sbb
movsl
and
dec
test
mov
adc
shrb
lea
or
lea
dec
or
jb
pop
xorb
inc
jmp
in
cmpsb
in
or
dec
pop
imul
adc
jge
cmp
xor
test
add
xchg
jae
andl
call
call
in
xor
mov
bound
mov
push
sbb
add
fsubl
rorb
sub
fdivs
pop
xor
and
adc
sbb
xor
inc
mov
fwait
sar
movzwl
add
cmp
xor
lds
jns
jo
mov
dec
jbe
mov
fidivrl
or
mov
das
rolb
push
add
pop
pop
mov
scas
ret
es
cmpsb
push
das
dec
rolb
aaa
lcall
and
pslld
sbb
jle
sti
push
andb
adc
sbb
test
out
stos
pop
cmpsb
ss
roll
add
cld
push
arpl
dec
cmp
ret
push
pusha
sbb
pop
adc
xchg
movsl
add
add
icebp
add
jne
aam
dec
test
jmp
orb
xchg
int3
ret
das
insb
inc
dec
js
das
cmp
imul
outsb
or
sbb
sbb
lret
lds
clc
jl
cmp
inc
inc
popa
adc
rcrl
add
push
orl
repnz
xor
jo
sub
or
out
mov
fistpll
xor
mov
xchg
lret
repz
xchg
test
sbb
push
and
inc
xor
addr16
sti
test
rol
and
jne
adc
and
and
add
ja
adc
into
in
xor
add
popa
mov
ret
mov
xchg
pushf
xchg
pop
daa
pushf
dec
mov
add
in
push
lahf
lret
daa
adc
xor
pop
roll
clc
dec
cmpsb
xlat
xor
sbb
aad
jo
mov
bound
pusha
sub
data16
fs
in
nop
sbb
fbstp
ds
xchg
and
adc
cmp
or
movb
mov
inc
aam
or
xchg
push
mov
cmp
jns
jmp
andb
xchg
loope
xchg
loope
mov
bnd
movb
pop
jg
test
adc
aaa
pop
cmpsl
pop
leave
xchg
pop
movsb
movsb
movsb
xchg
and
sbbl
add
jnp
aaa
add
mov
ficoml
mov
cmpb
jmp
push
mov
xchg
fsts
mov
xor
inc
jl
add
shr
or
sub
cmpb
insb
cmp
imul
jno
and
sbb
insl
stc
sub
adc
and
roll
pop
sub
cld
sub
add
bound
xor
movsl
aaa
nop
sbb
sbb
cmp
xor
aaa
mov
inc
push
sub
cmp
jnp
movsb
nop
fwait
aaa
mov
shll
xchg
add
and
gs
adc
pusha
mov
nop
sbb
pushf
pop
cmp
push
sbbl
insl
repnz
cmp
addl
pop
test
stc
cmp
xchg
and
dec
mov
out
mov
xchg
dec
aas
outsb
daa
lds
fildl
mov
and
and
dec
cmp
or
push
subl
inc
adc
dec
or
add
mov
add
cmp
mov
xchg
pop
or
fstpt
cs
inc
iret
push
add
add
jecxz
and
or
inc
dec
xchg
pop
push
dec
loop
and
add
je
and
mov
sbb
jge
decl
xchg
je
daa
xor
lcall
cltd
cmp
push
mov
fwait
mov
xor
xchg
mov
xchg
ds
out
push
xor
push
sub
pushf
inc
and
push
and
mov
cmp
dec
nop
xchg
inc
nop
push
fs
pushf
inc
pop
adc
incb
shlb
push
ds
cld
nop
or
aam
push
or
mov
imul
sbb
fmull
imul
add
nop
popa
rolb
xorb
push
sub
outsl
pop
scas
iret
xchg
mov
shll
hlt
or
mov
test
cmpb
adc
and
mov
dec
iret
mov
or
lcall
cs
sarb
xor
popa
jecxz
in
add
push
adc
add
add
dec
pop
pop
out
loopne
lods
pop
adc
and
add
push
arpl
lods
or
pusha
adc
mov
cmp
mov
adc
test
fld
addb
jmp
addr16
and
call
negb
add
jb
aaa
test
mov
add
pop
sbbb
add
xchg
mov
in
ds
dec
test
mov
and
inc
jo
mov
mov
enter
mov
xchg
je
xor
loop
add
dec
and
or
dec
xor
test
in
sbb
insb
or
adc
cmp
or
sub
sbb
pop
call
sbb
xchg
adcl
dec
jne
adcl
popa
pop
inc
inc
sub
and
imulb
dec
sbb
inc
lock
inc
fcomps
cmpb
cmpb
testl
push
add
push
sti
cmp
iret
jmp
push
push
and
mov
lods
jnp
bound
call
xchg
pop
adc
loopne
rep
pop
cmp
scas
sbb
in
pop
cmp
inc
inc
ss
inc
mov
popa
xchg
mov
sbb
clc
je
adc
int3
lret
sbb
inc
stos
sbb
orb
test
imul
fnstenv
mov
inc
mov
cwtl
hlt
dec
sbb
add
aam
xchg
sbb
cwtl
or
movsb
enter
scas
dec
loope
jmp
jg
test
mov
mov
imul
or
popa
dec
mov
inc
dec
and
inc
lods
rcrb
and
add
pop
cs
mov
fwait
lock
jns
and
loopne
movsb
or
mov
sarb
push
mov
mov
xchg
pop
and
pusha
adc
js
shlb
lock
adc
jnp
movsb
inc
mov
mov
jb
pop
pop
nop
mov
inc
add
dec
shlb
test
jae
push
fwait
sub
imul
adc
fstl
clc
pushf
dec
pop
jg
and
mov
sbb
pop
and
in
rcr
adc
jb
adc
lds
call
push
cmpsb
mov
shld
data16
dec
and
mov
sbb
mov
pop
pop
push
xchg
or
add
dec
ret
dec
imull
dec
push
cld
push
lcall
push
xor
sbb
xor
aaa
movntps
pusha
cmpsl
cmp
pop
sahf
inc
jmp
or
or
pop
cmpb
add
push
andb
mov
pop
addr16
mov
and
mov
popl
xchg
dec
pop
ds
pushf
dec
inc
scas
or
scas
dec
adc
mov
mov
cs
das
orl
add
fmuls
in
cmp
jns
mov
lods
aam
jge
jnp
les
pop
hlt
push
sbb
push
inc
dec
jl
out
or
xchg
icebp
mov
rorl
pop
mov
inc
adc
movsb
loopne
jns
orl
sarb
mov
xchg
jne
nop
and
fsubr
fcmovu
mov
movsb
inc
dec
jno
sbbl
inc
pop
adc
jno
pop
jmp
je
je
push
adc
pop
js
mov
jmp
nop
sbb
test
pop
or
dec
in
sbb
imul
leave
push
icebp
clc
sbb
mov
testb
das
sbb
push
rclb
cmp
nop
clc
lahf
inc
jo
jmp
mov
jmp
fcmovbe
jle
xchg
mov
jmp
ja
je
sbb
xchg
push
arpl
mov
jmp
mov
jmp
daa
ret
pusha
mov
shrl
imul
fadds
sbb
aas
inc
mov
xchg
sbb
mov
push
push
filds
push
fistl
push
pop
xor
js
ret
and
gs
inc
cmpsb
fs
pop
rclb
or
daa
and
xchg
sbb
ds
push
mov
daa
mov
or
push
repnz
in
shrb
stc
cld
cmp
and
sarb
xorl
clc
cmc
add
mov
lea
mov
std
adc
test
mov
adc
jmp
fists
daa
pop
adc
cwtl
jo
pop
and
ret
rolb
insb
cmp
xlat
push
je
push
ds
sbbw
push
ret
int3
loope
popa
loope
loope
sub
sbb
mov
xor
push
lock
dec
sbb
in
xor
lods
xor
sti
or
loop
sub
pop
jle
les
mov
push
enter
adc
dec
push
push
push
push
push
push
cmp
and
enter
xchg
dec
push
je
or
inc
add
xchg
pop
je
test
dec
gs
and
cmp
pop
rcl
and
add
push
das
test
mov
xchg
add
or
test
inc
adc
test
nop
mov
xchg
aad
ret
loopne
push
sbb
inc
push
je
fdivr
inc
nop
cmp
or
add
mov
inc
lret
and
mov
inc
or
or
pop
xor
cmp
push
jne
jbe
ljmp
inc
push
test
sahf
call
dec
addb
push
sub
insl
in
sbb
int3
cmp
mov
mov
ljmp
mov
imull
push
pop
dec
pop
xor
cmp
add
fwait
and
pop
int
js
push
and
daa
pop
cmp
cmp
push
mov
push
pop
pop
mov
pop
cmp
mov
jg
cmovb
testl
lds
mov
push
rcrl
adcl
inc
add
cmp
dec
lock
push
icebp
pushf
inc
fadd
mov
imul
dec
xor
push
pshufw
addb
call
jns
int3
pop
movb
sub
das
mov
incl
cmp
addl
sbb
call
sbb
mov
lods
or
aaa
mov
add
cwtl
add
jo
es
and
addb
pop
xor
outsb
push
pop
and
rolb
xchg
jo
movsl
int
mov
xchg
addl
adc
sbb
cmpsb
xor
loopne
jo
and
push
inc
push
fwait
inc
pusha
pop
insl
push
fs
jnp
shrb
cmp
jmp
loope
dec
adc
andl
movsl
mov
cmp
aaa
add
inc
pop
adc
adcb
cmp
pop
mov
ds
jns
add
push
pop
and
add
cmp
aaa
xlat
cli
das
lods
sub
pusha
cmp
or
pop
movsb
inc
and
push
sbb
mov
xor
jae
nop
cmpsl
in
pop
sub
xor
push
jl
xor
lret
and
mov
insl
adc
xor
pop
fidivs
and
cld
in
dec
and
lea
push
mov
pop
pop
inc
hlt
mov
pusha
and
add
clc
cmp
pop
and
jo
sbb
sbb
popa
or
ljmpw
mov
divl
mov
push
sbb
jbe
xor
inc
lcall
iret
hlt
jbe
sub
ret
aas
jno
dec
push
sbb
loop
loopne
ret
subb
adc
mov
or
xor
and
inc
inc
movaps
movsl
rorl
mov
rcr
pushf
sub
das
and
mov
shrb
dec
notl
test
inc
outsl
in
pushf
movsl
sub
push
sub
inc
sub
add
stos
inc
test
sahf
fsubrs
cmpl
lods
adc
add
ljmp
leave
inc
adc
jb
push
nop
cmp
cwtl
cmc
les
inc
stos
and
jb
sub
ja
jns
and
pop
push
cmpb
jns
cmp
pop
les
enter
nop
ds
push
insl
or
xor
in
pop
rcrl
sub
add
jne
sbb
and
mov
repz
ret
fiaddl
dec
inc
cmp
xchg
scas
arpl
push
xor
call
push
rcl
in
in
push
hlt
adc
incb
popf
or
cmp
call
xor
aaa
adc
xor
test
fcoml
mov
test
xor
rcrb
pushf
or
jg
pop
data16
test
adc
dec
push
enter
les
cmpsl
nop
inc
jb
mov
xlat
pop
lcall
and
pushf
pusha
mov
cmpsb
pop
dec
mov
roll
sub
pop
jmp
in
mov
mov
xor
ret
testl
fs
movsl
or
rcrb
out
jno
leave
lahf
in
adc
xchg
push
fadd
pop
mov
adc
xchg
ret
cwtl
push
rcrl
rolb
fwait
and
iret
and
pop
sbb
cld
faddl
iret
jmp
sub
arpl
dec
adc
mov
mov
inc
lock
xor
test
bound
ret
add
xlat
xchg
fsubrs
adc
das
mov
movsb
adc
xor
or
dec
adc
scas
jge
fs
push
das
push
adc
ljmp
add
dec
cmp
stos
add
mov
mov
sbb
clc
sti
scas
aad
pop
movswl
add
mov
cmp
jne
push
ret
sub
lea
addb
adc
repnz
and
enter
dec
or
cmp
mov
jmp
mov
lea
add
bound
sbb
lret
loop
fdivl
or
arpl
or
and
xor
add
or
add
dec
ret
add
out
rclb
stos
test
imul
mov
and
xchg
aaa
push
in
mov
pop
aam
repz
mov
lds
mov
mov
dec
push
xchg
sbb
and
adc
pop
sub
push
xor
test
movb
inc
xor
repz
and
mov
sub
dec
int3
sub
jae
inc
out
mov
jo
xchg
or
mov
mov
out
inc
loopne
fnstcw
push
xor
mov
popf
bound
adc
aas
push
inc
mov
or
jg
adc
add
addr16
repnz
outsl
add
or
add
fsts
ja
mov
or
and
xchg
lret
push
dec
sahf
add
and
rclb
xchg
inc
add
pop
sbb
pop
pop
adc
pop
jg
stos
sbb
scas
push
xor
inc
repnz
imul
push
mov
sub
lods
or
movsb
xchg
orl
push
jbe
dec
adc
dec
or
pop
jge
xchg
cmp
mov
push
adc
lcall
cmp
and
pop
sti
fcoms
add
iret
pop
stos
push
or
adcl
arpl
nop
xchg
mov
pop
fiaddl
outsl
xchg
pop
cmp
dec
sbb
push
or
pop
fisttpl
icebp
lahf
lods
xchg
inc
xchg
fisubrl
dec
pop
and
cmc
push
cmp
test
in
ljmp
add
adc
push
sbb
mov
or
jb
sub
jle
push
mov
sbb
es
and
jecxz
add
and
xor
pmullw
aad
mov
pop
cmp
dec
flds
cmovo
sbb
pop
push
addl
adc
or
jo
push
mov
xorb
scas
inc
or
mov
cs
add
fldt
sbb
ljmp
sbb
lret
cli
xor
sub
aam
add
outsb
inc
pop
cltd
inc
push
xchg
and
xor
cmp
insl
bound
sub
dec
int3
pop
xor
in
push
dec
outsl
mull
ds
in
outsl
xchg
outsl
pop
sub
or
cmpb
pop
xor
stos
ds
xchg
lods
and
mov
pop
movl
or
mov
jo
adcb
mov
fisttpll
sub
add
and
xor
fadds
and
or
out
imul
mov
add
add
jns
pop
pop
sti
mov
jno
pusha
shlb
xchg
ljmp
fiadds
push
sbb
inc
das
push
jb
adc
xchg
scas
lods
insl
mov
push
gs
lock
dec
scas
clc
jnp
cs
scas
jge
mov
and
adc
pushf
dec
fdivl
sbbb
aaa
sbb
insl
add
pop
adc
sub
dec
repnz
dec
sbb
push
out
mov
add
cld
mov
push
sub
aas
xor
push
and
inc
call
addr16
clc
jl
lahf
or
adc
push
push
xchg
lahf
push
lahf
mov
dec
add
pop
jecxz
push
xchg
pop
sub
pop
cmovnp
enter
ret
pop
ja
in
leave
leave
addr16
pop
js
in
fs
call
jb
push
jns
aad
cmp
jns
jp
insb
nop
lock
aas
adc
xchg
jnp
mov
mov
inc
sub
xchg
xchg
inc
jl
mov
mov
adc
or
pop
inc
insl
stos
xchg
mov
stos
lods
xchg
jo
lods
movsl
sub
jl
pusha
inc
sub
lock
xchg
inc
jp
mov
test
mov
or
mov
jb
mov
mov
sub
push
ljmp
xchg
inc
inc
shlb
pop
sub
mov
push
xor
pop
lcall
inc
popa
xchg
push
xchg
sbb
pop
movsb
sub
push
imul
push
xchg
or
js
es
arpl
dec
mov
xchg
pop
and
push
gs
les
mov
pusha
inc
mov
push
xchg
xchg
push
mov
xchg
je
dec
mov
xchg
mov
ss
xor
movsb
inc
and
mov
aad
and
xchg
jae
scas
inc
ret
xchg
xchg
cmc
push
dec
or
mov
jecxz
inc
mov
xchg
push
add
mov
mov
pop
adcl
jns
xchg
sbb
or
push
aaa
fimuls
in
mov
and
mov
pop
add
pop
cltd
mov
inc
mov
stos
sbb
lea
je
xchg
pop
or
sub
fdivrl
ds
push
push
lea
aas
mov
xchg
and
dec
jp
and
jge
mov
xchg
xor
and
dec
dec
enter
insb
jge
inc
mov
lods
outsl
dec
ja
adc
push
leave
lods
dec
cmp
fmuls
inc
andps
gs
repnz
dec
jb
out
mov
rorb
aaa
lds
sub
dec
dec
loop
and
sub
shrl
gs
and
loopne
aad
movl
inc
sub
and
adc
dec
push
xor
or
dec
jp
ljmp
add
cmpl
add
fs
mov
decl
inc
roll
xchg
and
pop
dec
mov
sub
inc
loope
aas
or
xor
dec
pop
push
sbb
inc
das
cmovb
pop
addl
xchg
shll
lock
das
scas
jg
mov
and
pusha
shrb
mov
rclb
mov
add
push
inc
dec
adc
insl
add
pop
or
add
xor
mov
sti
lods
push
add
push
hlt
jle
push
sub
repnz
loopne
fs
in
and
test
push
pop
hlt
mov
negl
inc
mov
mov
jns
jmp
jg
in
repnz
bt
cs
jmp
test
cmovne
pushf
pushf
cmpl
scas
in
xchg
daa
daa
and
sub
dec
jae
leave
leave
enter
mov
data16
fcmovne
mov
aas
or
jnp
mov
sub
repz
and
insb
repz
dec
dec
add
shlb
or
rep
pop
inc
insl
aam
and
insb
repz
dec
imul
xchg
dec
and
sub
imul
enter
mov
je
repz
stos
mov
leave
hlt
dec
ljmp
repz
shlb
pop
pusha
push
mov
mov
mov
stos
and
and
int3
repnz
push
pop
xor
and
jo
repz
mov
bnd
repz
xchg
push
or
mov
lods
push
add
sub
test
repz
leave
andl
test
rep
cmpsb
or
push
xchg
repnz
push
inc
imul
dec
push
inc
and
repz
dec
sbb
aam
push
repz
adc
cmp
sub
repz
inc
ret
sub
dec
push
repz
movsb
push
stos
jecxz
inc
xchg
push
add
repz
enter
repz
xor
rcll
dec
adcl
push
pop
ret
stos
sbb
loope
and
repnz
push
movsb
mov
pop
pop
xchg
sub
imul
stos
sbb
mov
mov
hlt
insl
push
or
dec
in
jb
jmp
dec
sarb
bt
sub
fldt
mov
dec
cs
cmp
push
in
cmp
push
mov
cltd
push
adc
mov
xor
lea
jmp
xor
dec
out
mov
lea
lea
push
sbb
sbb
mov
inc
adcb
je
stc
add
movb
mov
sub
sbb
pop
add
icebp
xchg
add
rclb
mov
xor
fnsave
shrb
add
fstl
decl
ficomps
sbb
add
hlt
inc
mov
rorb
add
adc
and
fwait
loop
push
pop
inc
mov
push
jle
push
add
mov
push
xor
inc
nop
xlat
add
and
mov
hlt
popa
sub
inc
stos
mulb
fcompl
push
lahf
nop
and
aad
bound
shrb
aad
mov
jb
bound
rcrl
int3
pop
pop
or
dec
lock
subl
ret
loopne
rcrl
push
add
adc
and
pop
or
sbb
inc
cwtl
pop
scas
pop
cs
push
movsb
dec
mov
pop
xlat
or
pusha
test
xchg
nop
mov
xlat
and
mov
cmp
xchg
push
jle
in
xlat
out
xchg
and
leave
insb
test
repnz
in
xchg
lcall
xor
int
xchg
cmp
cmp
cmp
mov
lock
popf
pushf
lods
cmc
aas
cltd
popl
shr
bnd
lods
pop
push
mov
aam
pop
insb
jb
pop
xchg
aad
pop
dec
add
push
adc
sbb
or
jno
aad
and
in
lods
out
enter
mov
fmuls
enter
pop
mov
aad
ja
inc
cmp
aad
pop
and
pop
dec
ljmp
aad
pop
add
mov
mov
mov
pop
movsb
push
xor
mov
aam
lcall
push
cmp
dec
aam
push
aad
aad
mov
xchg
dec
or
aad
adc
push
pop
aad
pop
inc
and
dec
not
xor
pop
xchg
aam
pop
inc
imul
movsb
aam
pop
dec
sub
stc
dec
aad
pop
inc
fidivl
xorb
or
aad
test
cmp
dec
pusha
scas
inc
sub
aad
ret
sub
andb
mov
and
pusha
jecxz
inc
xchg
push
add
aad
test
enter
aad
popa
xor
rcll
dec
adcl
push
pop
rcl
stos
sbb
shll
fsubs
mov
add
pop
xchg
adc
xor
adc
push
push
xor
movsb
adc
push
push
aad
repnz
adcb
sarl
test
xor
ret
or
pop
inc
pop
sub
inc
nop
fwait
jl
push
xor
andb
adc
jmp
pop
push
push
adc
inc
xchg
fs
cmp
xchg
inc
push
pushf
pop
xor
sub
pop
cmpsl
mov
dec
add
inc
sub
and
dec
into
add
and
rcll
mov
stos
test
das
or
lret
stos
mov
cmpsl
adc
adc
dec
das
mov
mov
jo
adcl
dec
push
sbbb
xor
cs
or
fistpll
and
adc
sbb
push
and
or
clc
mov
arpl
aam
and
stos
adc
cli
mov
mov
xchg
jecxz
xchg
cmp
pushf
in
add
repz
inc
and
cltd
lods
das
dec
push
stos
shrl
dec
mov
jne
outsl
adc
leave
int
push
sbbl
mov
sub
push
enter
hlt
mov
inc
cmpsl
rclb
mov
hlt
addr16
rcr
cmc
dec
xchg
inc
xor
push
imul
mov
pop
mov
add
and
pop
push
daa
movsb
lahf
and
or
ja
xlat
inc
or
addb
rolb
push
inc
mov
mov
push
das
pop
mov
cmp
push
mov
pusha
xchg
in
sbb
daa
jg
inc
or
incl
adc
and
outsb
sti
mov
sub
xchg
push
and
mov
xchg
mov
test
out
or
adc
pop
add
test
pop
dec
rcll
ljmp
mov
adc
fildl
mov
inc
sbb
inc
ror
or
scas
or
sub
or
pushf
or
jmp
pop
push
add
cmp
ss
jl
mov
add
ds
lds
cmp
dec
imul
daa
and
push
repz
movsl
scas
mov
xchg
dec
xor
jbe
inc
push
mov
add
popw
aam
loopne
xchg
push
adc
xchg
xor
andb
arpl
fadds
dec
pop
mov
rorb
cmpsb
add
cld
cmpsb
lock
pop
mov
cmpsl
jp
inc
and
cmpsl
sbb
cmpsl
and
outsl
lods
mov
mov
ficompl
aam
mov
mov
mov
add
push
iret
pop
adc
pop
mov
sub
adcb
roll
push
or
test
mov
test
and
or
mov
dec
and
into
mov
frstor
push
jmp
push
sbb
or
pop
test
and
add
xchg
add
and
fadds
das
stos
idivl
repnz
stos
je
sub
push
dec
sub
xor
mov
lret
les
fdivl
stos
or
ret
jmp
jns
adc
cmp
or
int3
stos
mov
loope
add
jl
insl
add
movsb
and
xchg
pop
add
stos
fldl
sbb
out
pop
ja
xchg
mov
hlt
xchg
lret
lods
sub
aam
daa
lods
aaa
movsb
cmpsb
dec
fsubrs
int3
callw
push
shrb
and
scas
adc
in
cmpsl
inc
test
ljmp
jns
add
cwtl
test
leave
in
repnz
lods
push
xchg
frstpm(287
dec
pop
add
xchg
xchg
xchg
jg
call
scas
in
leave
leave
pop
lods
loop
mov
in
bound
jb
xor
xchg
int
cmp
jns
mov
fs
ss
mov
mov
pop
rcrb
rcll
gs
and
test
add
push
dec
pusha
sub
or
mov
js
mov
adc
cmp
mov
and
mov
pop
test
and
mov
mov
test
push
mov
in
push
or
pop
lcall
mov
test
and
and
mov
pushf
rcrb
je
stos
and
push
dec
add
dec
push
in
sbb
and
dec
sti
pusha
imul
inc
mov
cld
pop
dec
pop
xchg
imul
and
insb
inc
subl
insb
mov
mov
insb
sbb
aam
insb
push
or
mov
pusha
jl
and
pop
push
insb
and
sub
in
adc
inc
popl
lds
sti
cmp
pop
add
repnz
and
push
mov
dec
or
pop
mov
dec
xorb
and
push
mov
or
xor
push
test
add
pop
mov
mov
xor
dec
mov
or
dec
sti
js
test
add
xor
add
jmp
push
push
mov
cli
pop
or
int3
nop
jmp
mov
mov
frstor
into
jno
in
test
fists
or
iret
adc
cld
pop
xchg
adc
mov
and
sbb
or
jmp
fstps
shl
or
fldl
fistpl
inc
or
cmc
fisttps
add
arpl
pop
pop
ss
jp
divb
dec
and
or
lret
mov
pop
pop
movsl
shl
or
inc
push
and
mov
test
cmp
push
push
mov
ja
orb
out
mov
sbb
jmp
inc
inc
pushf
movsl
dec
add
fwait
sbb
jp
xor
mov
jl
iret
outsb
lahf
mov
sub
cmp
mov
xchg
lock
jle
sbb
je
jmp
lea
pop
popf
or
cmp
cmpl
rcrb
mov
mov
rorb
cld
mov
pop
lret
sbbl
pop
vmovddup
sub
int3
int3
jg
mov
imul
or
sbbb
pop
push
cmp
mov
add
mov
cmp
mov
or
mov
ret
stc
adcl
mov
mov
push
imul
jb
enter
cmpsb
into
nop
add
out
inc
leave
fwait
jmp
pop
cltd
sub
sub
outsb
jbe
jnp
shll
std
sarl
mov
xor
jmp
popa
lcall
lods
sub
pushl
jmp
mov
cmc
gs
dec
stos
inc
mov
out
xor
mov
incl
shlb
and
mov
or
std
push
xor
dec
xor
imul
add
dec
sub
into
xor
daa
out
cmpb
ret
push
imul
jmp
add
movsl
orl
pop
adcb
je
and
adc
movsl
shrl
or
pop
xchg
adc
mov
shr
jo
je
sbb
outsl
imul
sbb
sbb
inc
hlt
sarb
sbb
fnstcw
popf
xor
push
adc
push
mov
jmp
inc
std
lret
outsb
or
scas
or
xor
adcb
popl
mov
mov
sbb
xor
imul
and
jb
add
dec
inc
lods
jmp
push
xor
mov
inc
js
or
sbb
lock
adc
mov
outsl
fldt
imul
adc
adcb
mov
insl
jmp
push
adc
bswap
int3
adc
dec
lea
negl
pop
in
push
and
cmpsl
fs
xor
and
or
sub
push
cmp
notl
xchg
add
testl
ja
or
pop
insb
adc
add
mov
addb
str
sti
in
test
shlb
repz
iret
inc
pop
adc
out
sub
in
mov
pushf
inc
mov
mov
test
mov
movsb
jo
jle
inc
aam
aas
cwtl
insl
pop
aas
jae
gs
cmp
addl
pusha
bound
adc
mov
push
rolb
adc
subl
add
or
xchg
movsb
mov
and
add
and
pusha
fucomi
xchg
xorb
sbb
ficompl
scas
aad
push
out
in
jae
cmp
cs
and
dec
adc
cs
lock
bound
xchg
flds
xor
loopne
out
and
inc
es
pushl
call
inc
cmp
and
xor
cltd
sti
and
cmpsl
cmp
das
inc
enter
les
aam
addr16
ret
lds
adc
mov
sbb
loopne
loopne
mov
cs
or
pop
shlb
push
xchg
ret
and
daa
es
push
xchg
mov
test
aam
push
shlb
dec
or
sbbb
or
add
xor
dec
adc
cmp
shlb
add
sub
xchg
pop
xor
hlt
sub
add
rcrl
adc
xchg
adc
mov
test
and
add
and
pop
xchg
out
orl
lods
mov
mov
addr16
js
xor
daa
ja
add
addb
adc
adc
in
mov
iret
popa
dec
cmp
sbb
clc
lock
adc
push
jge
faddp
stos
pusha
popa
int3
pop
aaa
adc
add
icebp
dec
or
xchg
adc
mov
cmp
push
xchg
adcb
or
loope
daa
mov
sub
das
mov
jmp
fadds
adc
sbb
lds
subl
xchg
in
in
nop
adc
sbb
jecxz
sub
cmpsb
dec
add
in
push
adc
in
mov
add
in
sarb
xchg
or
inc
inc
sbb
xor
cmp
jg
les
mov
ss
add
jmp
xchg
jo
movsb
insb
hlt
hlt
push
mov
xchg
lock
pop
inc
shll
in
add
ret
add
or
inc
add
mov
orl
mov
inc
mov
xchg
sbb
adc
iret
les
stos
test
cwtl
les
pop
and
loope
fistl
adc
inc
je
inc
xchg
xchg
mov
das
push
and
pop
mov
push
adc
pusha
daa
mov
inc
dec
mov
test
xchg
mov
loope
and
lcall
fldenv
and
outsl
pop
push
add
aaa
aas
xorb
cmp
fmuls
pusha
push
mov
cmp
iret
mov
cmpsb
push
mov
testb
daa
pop
push
sub
push
pop
adc
mov
pop
adc
in
pop
int
jo
int
and
js
fiadds
sub
in
rorl
inc
cmpsl
mov
out
ds
sbbl
leave
and
aaa
jns
or
mov
pop
fmul
jle
push
iret
lock
cmpsl
inc
dec
fs
pop
iret
lock
push
int3
rolb
loope
cmpsb
pop
and
cwtl
sub
test
movsl
dec
pop
inc
rcrb
inc
test
in
repnz
leave
ret
loope
subl
mov
mov
jo
in
ret
add
outsb
push
or
lret
andl
cltd
ret
or
into
mov
inc
mov
mov
or
mov
and
mov
repz
test
jge
xor
pop
add
sbb
jecxz
xor
shl
jo
mov
sbb
fadds
adc
aaa
enter
pusha
insb
xchg
lods
aad
enter
pusha
outsl
fs
sbbb
sbb
sub
mov
push
mov
seta
jns
or
and
gs
call
mov
imul
sub
dec
xor
xchg
adc
mov
and
insb
xor
mov
out
bound
mov
pop
add
inc
mov
int3
adc
dec
int3
mov
and
cmpsb
lods
xchg
in
dec
mov
incb
xchg
add
movsb
lahf
cs
mov
shrl
pusha
les
sub
mov
mov
arpl
js
stc
out
nop
pop
int
cmp
cwtl
mov
jg
adc
inc
add
xor
mov
shrl
in
into
mov
loope
and
jnp
addl
add
push
repnz
je
push
dec
push
cmpsb
adc
jbe
sub
outsl
mov
push
cmpsb
adc
add
mov
imul
mov
add
fsubrs
dec
or
xlat
dec
mov
sbb
and
jmp
push
push
stos
into
jbe
mov
mov
iret
add
adc
iret
or
xor
push
rolb
adc
adc
or
cmp
outsb
iret
mov
and
xor
cmpsb
std
sbb
xchg
mov
xlat
xor
inc
sub
dec
loope
stc
jae
cmp
cmpsl
test
xlat
lcall
add
cltd
jl
aam
call
idivb
jno
dec
xchg
rcrb
jne
int3
pop
fsubs
daa
lods
sub
mov
sub
xchg
mov
shll
mov
push
push
dec
rcrb
outsb
push
out
pushf
cmc
pushf
loope
mov
pop
test
dec
dec
sub
je
test
or
aaa
push
sbb
push
ret
mov
pusha
mov
aas
or
adc
dec
or
inc
mov
jne
inc
push
dec
popa
cmp
sub
sbb
and
sbb
aaa
jge
cmp
int3
lds
inc
xor
dec
jns
test
iret
cmp
add
cmp
and
inc
cwtl
mov
push
inc
cli
movl
sub
cmpb
fmull
in
xchg
clc
push
or
lret
fmull
je
cmp
adc
jo
dec
fdivl
mov
js
notl
mov
aam
sub
xor
mov
cmp
inc
dec
xor
cmc
icebp
and
push
bound
sbb
and
mov
test
repz
inc
sbb
arpl
lea
jo
shrl
das
sub
xchg
and
bswap
js
jmp
rcrl
loop
inc
orl
in
sub
inc
aad
push
icebp
mov
push
iret
ret
js
rol
fadds
loop
filds
inc
sub
and
aad
movsl
rorl
and
sub
sbb
xchg
imul
aad
pusha
in
mov
test
arpl
or
and
pop
and
movsl
cwtl
lret
lock
mov
mov
fwait
mov
sbb
test
sbb
mov
push
jl
sbb
les
push
rorb
test
push
push
and
mov
lds
adc
pop
daa
adc
add
out
lods
pop
xchg
ret
pop
mov
cwtl
mov
lock
cmpsl
mov
dec
xlat
jnp
or
lods
sub
fiaddl
lea
out
popf
js
popa
xchg
call
mov
jno
adc
dec
push
out
mov
push
jecxz
inc
stc
fadds
adc
sub
or
push
icebp
or
int3
pusha
cld
ret
sbb
mov
mov
hlt
fwait
and
sbb
sub
das
add
push
add
mov
dec
add
inc
push
loop
nop
lods
or
add
xchg
fs
cmc
mov
iret
jl
inc
cmp
addr16
mov
nop
push
and
xchg
std
dec
clc
and
lods
sub
sbb
pop
sti
cmp
mov
sub
pushf
dec
pop
mov
daa
mov
sub
hlt
push
pop
rcrb
mov
orl
sub
fdivs
or
lds
adc
cli
test
or
or
fimuls
add
adc
or
inc
incl
add
mov
inc
inc
xor
aaa
jo
dec
imul
mov
and
popa
inc
or
add
jns
and
jg
hlt
imul
fadds
addl
sbb
insl
dec
or
test
test
fistpl
jecxz
int3
cld
sti
hlt
dec
loopne
xchg
cmp
xchg
aaa
test
mov
add
shrb
ret
push
sbb
and
mov
arpl
and
xchg
pop
out
enter
lock
add
jle
sub
sbb
cmp
ret
andb
in
les
sub
push
sbb
je
push
pop
push
sbb
push
sub
adc
sbb
inc
or
add
mov
or
push
mov
push
or
push
fsubl
pop
into
or
dec
orb
jne
xchg
ja
sbb
dec
inc
mov
dec
aam
jmp
mov
ror
push
frstor
push
jb
daa
outsl
xchg
frstor
add
pop
pop
dec
sub
sti
pop
cmpsb
dec
sti
or
aaa
pop
and
out
stos
inc
mov
xchg
gs
out
loop
popf
gs
test
lcall
lret
addr16
jns
cmp
imul
shrl
cld
and
daa
and
or
and
add
mov
and
std
add
fiadds
adc
pop
xchg
inc
push
das
lea
sub
or
gs
mov
push
int3
hlt
and
mov
inc
push
inc
imulb
dec
movb
mov
xor
fs
sbb
jnp
pop
clc
add
cmpsl
sub
pop
jno
test
pop
pop
push
inc
lods
or
fcoms
faddl
and
jo
and
jo
jecxz
add
cmp
add
js
inc
insb
fldenv
sbb
or
or
mov
out
pop
das
or
and
into
clc
pop
jmp
pop
pusha
jbe
lock
or
fistpll
inc
cmpl
and
test
movsl
xor
iret
push
sti
in
add
pop
xchg
rcrl
add
dec
xor
lret
mov
shll
pop
mov
adc
pop
mov
sub
jle
shl
rcll
ficoms
xor
add
push
adc
push
insl
and
push
sbbl
jns
and
nop
adc
cmp
mov
cwtl
inc
xor
add
jmp
cmpb
and
movb
roll
fs
inc
icebp
test
xor
jecxz
js
and
sbb
aaa
sbb
xchg
and
aaa
dec
ret
dec
jns
les
lock
lcall
test
jnp
add
xchg
sbb
shrl
jmp
sub
mov
and
aam
call
inc
mov
mov
xchg
fcomps
cmp
jmp
push
cmc
test
xchg
icebp
insb
aam
inc
xor
dec
dec
pop
flds
dec
je
rolb
or
jae
adc
or
shrb
sar
lods
subl
mov
xchg
cmp
outsl
jp
inc
jecxz
mov
pushf
adc
adc
rol
subb
shrb
sub
insl
xor
push
push
sbb
mov
dec
jecxz
push
scas
clc
mov
mov
or
add
mov
pop
add
pop
das
insb
jge
inc
add
mov
icebp
movsbl
call
loopne
add
fildll
lret
push
fldl
xor
cmp
add
sub
push
adc
popa
and
inc
jl
inc
pop
pop
sbb
dec
xchg
jecxz
mov
mov
loopne
int
add
add
pop
add
or
mov
lock
mov
push
inc
push
add
ret
inc
or
enter
pop
movsl
cmp
outsl
loopne
xor
sar
mov
ret
dec
cmpsb
push
pushf
jae
sbb
or
xorl
sbb
aad
out
mov
pop
add
fwait
adc
adc
popl
xchg
adc
sbb
cvtdq2ps
fldenv
mov
pop
hlt
push
pop
aaa
movsb
mov
ss
push
xchg
and
adc
into
fstl
jae
xor
aam
icebp
ja
dec
std
outsb
jnp
push
mov
mov
cmp
outsb
call
sub
dec
jnp
ja
pop
aaa
hlt
or
pop
test
add
in
or
es
das
push
push
cmp
inc
mov
out
mov
add
sbb
and
pop
popa
dec
aaa
nop
xchg
add
iretw
mov
or
jb
push
xor
sub
aam
outsl
cmpsl
andb
testl
jo
sub
xchg
cltd
mov
inc
dec
adc
sub
mov
jg
arpl
adc
cmp
xorl
sahf
fcoms
jge
lret
enter
xchg
add
popf
or
es
and
aam
jno
dec
scas
cmp
and
testl
fwait
pop
jmp
add
les
lea
adc
ret
and
shrb
loope
adc
and
or
inc
mov
repnz
decb
and
and
mov
xchg
sub
and
add
push
loopne
lea
dec
daa
fildl
int
nop
pop
adc
cmp
mov
out
bound
or
das
bound
mov
das
add
xor
movsb
pop
mov
jne
add
movsl
rolb
pop
mov
mov
or
cld
mov
inc
mov
imul
je
xor
or
adc
dec
popf
lea
inc
dec
adc
push
fsts
pusha
ds
or
rclb
or
cmovb
mov
test
insl
jmp
outsb
pop
xor
cmc
pop
pop
popa
xor
insb
sbb
lret
add
and
push
adc
sbbb
popl
ret
daa
add
in
pop
mov
movsb
sub
das
or
mov
push
fistpll
add
in
add
sub
push
adc
in
insl
add
pop
adcb
cs
addb
jl
add
adc
mov
shrb
pop
and
lea
push
stos
or
unpcklps
push
jbe
xor
cmovg
xchg
insl
add
dec
add
and
repz
add
or
fadds
mov
sarb
push
ret
mov
pop
push
pop
jb
rorb
push
imul
or
out
insl
pop
dec
jl
add
or
pop
rorb
or
hlt
push
leave
fcoms
add
ds
push
ja
insb
out
pop
ret
adc
dec
movsl
push
push
ja
gs
ja
xchg
inc
xchg
insl
add
test
mov
cld
in
fadds
add
jmp
out
adc
out
dec
or
fstp
ljmp
add
push
enter
dec
test
repnz
lods
inc
in
inc
das
pop
icebp
pop
nop
pcmpgtb
xlat
add
sbb
inc
rcll
push
dec
sbb
jno
sti
inc
dec
dec
dec
mov
adc
sbb
or
xchg
data16
inc
shr
or
fdivl
jge
mov
andb
cmp
adcl
call
enter
ret
aad
xchg
xchg
sub
add
outsb
add
jmp
stc
inc
repz
cmp
mov
mov
jle
or
or
cs
mov
clc
dec
fs
and
shrb
sub
inc
adc
js
sub
mov
mov
mov
mov
push
or
ficompl
inc
push
das
pop
and
nop
popf
mov
jns
bound
or
mov
insb
iret
or
fs
or
ljmp
mov
fcmovnu
push
cs
stos
mov
push
or
ss
int3
lea
inc
test
add
lea
js
jb
sub
vmread
mov
or
scas
addb
xor
js
mov
adc
xor
pusha
js
dec
das
jne
sub
push
sbb
push
adc
fildll
pop
and
fildll
add
and
or
pop
xor
fwait
inc
push
mov
sbb
dec
lods
shl
push
fistps
sbb
pop
inc
mov
rolb
inc
push
push
mov
or
adc
dec
or
outsb
mov
push
jmp
sbb
sbb
jg
test
pop
popa
jl
rolb
je
jg
loopne
add
cmpb
sub
inc
jg
xorb
push
mov
subl
mov
cmpsl
xor
ret
jns
adc
shr
xchg
or
leave
sbb
dec
lcall
sbb
lret
xor
in
aaa
mov
sub
xchg
add
xor
out
out
xor
xor
ja
dec
ret
stos
xor
das
leave
add
nop
cmpsl
inc
sahf
aaa
shl
push
out
leave
add
sbb
jp
arpl
fs
rcll
in
das
dec
push
or
inc
pop
inc
xor
or
jne
popa
push
call
idiv
lcall
adc
or
addb
repnz
aaa
mov
pop
mov
cmp
inc
pusha
movsb
aaa
dec
push
or
es
leave
add
in
aaa
xor
xchg
add
xorl
push
cli
icebp
add
or
nop
add
sub
aaa
adc
and
add
and
dec
push
xor
dec
xor
jl
jne
push
orb
lods
mov
imul
or
outsl
sub
cld
addb
push
call
nop
adc
add
mov
leave
and
inc
daa
and
lea
sbb
sbb
rorb
dec
push
and
leave
leave
add
push
mov
jle
in
es
push
icebp
mov
or
loopne
pop
shlb
jae
pop
or
inc
and
cmp
xchg
out
cld
cwtl
or
cmp
pop
pop
add
and
fs
pop
pop
push
lock
xchg
iret
push
lock
sbb
fisubrs
insb
cmp
sub
nop
sbb
arpl
fsubl
adc
sbb
mov
pop
stos
inc
and
add
mov
aas
jmp
fiaddl
movups
cwtl
pop
je
add
xchg
jl
add
push
ljmp
jge
lods
sbb
addb
bound
inc
loopne
pop
rolb
daa
mov
mov
and
inc
xchg
add
pop
add
rcll
add
pop
push
int3
in
xlat
dec
sbb
arpl
pop
sbb
repnz
cmpl
pop
add
orl
jmp
mov
js
and
xor
push
add
fsubs
cwtl
or
pop
add
sub
lods
xor
jecxz
fs
pop
jle
repnz
add
add
pop
fs
faddl
out
rcrl
xchg
inc
pusha
push
hlt
jns
add
add
repnz
add
and
add
loopne
push
add
push
and
xor
nop
repz
pop
pusha
loopne
enter
stc
fcoms
sub
das
mov
cmp
jl
loope
add
and
push
fistps
xchg
das
pusha
pop
push
repz
mov
pop
repz
icebp
cwtl
mov
lcall
mov
inc
pop
repnz
jno
add
mov
and
in
cmc
inc
test
xchg
xchg
inc
sub
jnp
cmp
test
xchg
pusha
sub
adc
sub
add
inc
sub
in
sbb
xor
mov
movl
cmc
in
cld
loopne
xchg
and
cmc
shl
mov
inc
pop
or
clc
and
cmpsl
add
sbb
dec
push
pushf
pop
mulb
call
pop
add
mov
or
xchg
rcrb
add
add
imul
sub
jmp
insb
movsb
sbb
sub
les
push
push
and
xchg
mov
aaa
push
adc
or
mov
push
xorb
fs
pop
loopne
enter
adc
dec
cs
test
in
inc
pop
mov
add
sbb
shlb
mov
push
xchg
popf
inc
mov
jne
push
test
movsb
mov
sarl
outsb
in
adc
dec
fistl
sbb
lock
adcb
add
sub
nop
filds
lcall
xor
inc
enter
stos
in
xor
mov
inc
push
or
mov
and
push
das
mov
xchg
mov
or
shlb
and
lock
in
mov
fmul
adc
pop
xorb
adc
mov
and
pop
sub
imul
mov
outsl
les
sarb
rorl
xor
cmpsb
hlt
in
fdivr
dec
mov
movb
sbb
fistpll
fsubs
or
adc
or
scas
rcrl
mov
pop
cmp
loope
in
push
cmp
cmp
add
andb
loopne
ljmp
leave
cmp
loopne
cmp
cli
das
clc
or
dec
adc
jle
lods
and
fbld
das
sbb
hlt
xlat
add
adc
insb
pop
or
stos
dec
add
inc
inc
addl
push
nop
ja
stos
or
ja
adc
inc
repnz
sub
ja
test
add
jne
push
push
add
inc
add
pop
push
rclb
add
test
inc
movb
clc
and
mov
inc
imul
and
or
sti
push
inc
pop
xor
orb
movsl
out
loope
test
dec
adc
xchg
arpl
outsl
outsb
push
mov
xchg
mov
push
sti
enter
addl
mov
adc
cltd
mov
and
adc
pop
cmpsb
pop
inc
cmc
shlb
orl
loopne
gs
dec
add
mov
jb
pusha
sub
fsubl
js
cld
pusha
imul
test
xlat
shlb
and
dec
clc
cld
aas
adc
test
jne
iret
jo
rsqrtps
or
outsb
inc
repnz
pop
add
jo
das
call
pop
inc
push
leave
mov
lcall
jno
inc
and
loope
xor
pop
adc
mov
adcl
hlt
and
and
fmull
add
stos
adc
lods
cli
das
push
cmp
push
hlt
pop
xlat
imul
push
add
mov
outsl
push
xchg
push
leave
or
cltd
push
cmp
add
ja
pop
mov
adc
loopne
xchg
pop
scas
pop
add
inc
add
or
je
pop
or
sub
ja
add
dec
insl
and
cmpsl
ja
push
orb
stc
mov
sbb
lods
inc
loopne
ja
and
and
ja
scas
push
adc
addb
push
xchg
addb
call
addb
dec
adc
add
add
or
sbb
push
adc
inc
nop
incl
cmp
adc
or
lods
scas
push
scas
and
enter
push
notl
or
inc
add
std
insb
daa
nop
lahf
push
and
or
pusha
out
and
aas
or
scas
fs
loopne
push
out
fiadds
cld
repnz
rolb
sub
mov
cmpb
in
add
sub
mov
pushf
cmpl
adcl
adc
ljmp
jne
push
sbb
loopne
pop
out
inc
mov
add
setl
mov
add
or
test
lods
push
add
add
jmp
sub
aas
das
or
add
adc
aas
int3
push
and
roll
pop
mov
and
xchg
nop
xchg
push
add
sub
push
xchg
cltd
cmp
jnp
pop
xor
icebp
stc
inc
dec
leave
mov
pinsrw
shrl
and
negl
adc
pushf
pop
mov
outsb
mov
jle
push
idivl
lret
mov
xchg
cmp
enter
xor
cmpl
adc
and
jne
popf
and
ss
cmp
testl
or
notl
and
mov
adc
sbb
adc
and
testl
notl
dec
or
shrl
das
jecxz
sub
lea
sub
or
and
push
jg
add
sbbl
add
mov
mov
pusha
aam
shl
dec
shrb
fadds
pop
inc
test
pop
sbb
adc
and
lea
or
push
negl
adc
mov
and
jne
notl
dec
jge
sbb
aam
movsl
je
sbb
cmpsl
dec
int
pop
push
add
testl
leave
stos
in
jb
xchg
daa
in
test
negl
mov
adc
notl
xchg
scas
and
mov
notl
mov
sub
test
repnz
push
int3
xor
or
jns
sub
push
test
adc
and
out
test
pusha
inc
test
in
imull
xchg
les
outsl
orl
lods
sub
mov
mov
inc
xor
jns
pop
cwtl
cmp
lods
call
add
sbb
mov
and
sbb
std
sbb
negl
rsm
or
out
pop
jno
imulb
add
and
les
sbb
or
es
inc
add
pslld
stc
daa
bound
mov
adc
stos
in
mov
pop
push
fs
adc
dec
sbb
push
push
pop
sbb
dec
adc
or
and
fists
add
cmp
push
push
add
or
mov
popa
out
pusha
pop
and
dec
push
mov
inc
popa
rorb
arpl
fadds
inc
jnp
and
mov
and
mov
clc
push
pop
rorb
add
jne
push
stos
adc
andb
gs
enter
mov
jb
pop
sbb
decb
mov
lret
add
push
outsb
mov
inc
ret
push
fiadds
and
cmp
xor
rclb
lds
cmp
add
movsb
xor
add
jb
and
and
inc
leave
adcl
bound
rclb
push
inc
mov
dec
cmpsl
xchg
inc
mov
cmpsl
jo
inc
push
pop
es
enter
cmpsl
pop
and
and
add
mov
pop
lock
dec
aam
pop
sbb
xor
push
rolb
pop
or
leave
xor
adc
xor
daa
lcall
push
enter
xor
test
add
push
or
pop
sbb
aam
push
mov
mov
pop
and
dec
push
cmpsl
add
mov
adc
inc
sub
and
pop
pop
xchg
mov
sub
pusha
nop
cmpsl
loope
loope
pop
sahf
jbe
test
inc
cmpsl
repz
or
fcomps
and
pop
sub
lds
ja
sqrtps
aaa
pop
adc
add
xor
mov
push
push
xchg
mov
movsl
sub
adc
mov
hlt
ret
cmpsl
adc
adc
pusha
pop
int3
sbb
pop
add
mov
lret
push
daa
push
inc
jb
or
roll
daa
sub
mov
mov
movsl
sub
aam
or
jecxz
loopne
mov
sub
in
sub
je
sahf
or
adc
or
mov
pushf
mov
leave
or
push
pop
clc
popa
add
xor
syscall
rolb
in
adc
push
add
or
xchg
sub
mov
xchg
and
shl
xchg
in
mov
ja
nop
sub
add
test
inc
dec
fists
ds
inc
mov
adc
xor
cmpb
push
repnz
ds
adc
jo
xchg
add
fsubrs
in
mov
out
enter
das
mov
insb
call
in
push
ret
or
add
nop
inc
jnp
cmpsl
push
movsl
and
filds
and
inc
cmp
xor
fbstp
dec
adc
pop
adc
shll
add
das
in
and
inc
xor
sub
add
cmp
add
push
add
and
fists
xor
inc
fisttps
inc
hlt
subl
add
cmp
adc
cmp
add
push
add
inc
push
push
nop
and
outsb
inc
push
enter
mov
add
call
inc
aaa
cmp
fs
das
adc
mov
and
in
add
adc
ffreep
mov
mov
ret
sbb
and
jb
mov
sub
push
mov
hlt
inc
xchg
xchg
inc
sbb
mov
xchg
pop
jp
fidivrs
jl
mov
add
push
push
inc
stos
sbb
sbb
mov
cmp
pushf
inc
mov
dec
ds
cmp
and
sbb
add
daa
cmp
dec
sbb
inc
jb
add
or
sbb
fsubs
pop
add
inc
mov
sbb
pop
push
nop
cmpl
sarb
add
scas
dec
and
mov
xor
pop
cmp
addr16
aam
dec
outsb
mov
add
cmp
or
clc
aas
jo
lea
inc
pop
pop
aam
or
adc
addr16
pushf
add
push
ds
or
push
jl
outsl
addr16
push
repz
nop
xlat
lea
push
dec
push
enter
inc
insb
or
fwait
push
xchg
push
adc
pop
mov
add
addr16
aam
outsb
cmp
mov
jne
xchg
cwtl
adc
mov
adc
cmp
je
les
mov
addr16
jl
adc
mov
addr16
xchg
nop
pop
clc
aam
lods
sbb
addr16
xchg
xchg
mov
adc
inc
mov
jne
add
xor
jl
xchg
push
enter
les
dec
push
test
push
aaa
push
and
pop
inc
jl
mov
dec
dec
jb
inc
inc
dec
dec
test
or
leave
stos
add
hlt
push
aam
mov
cld
pop
lds
jb
xchg
push
pop
adc
inc
push
jecxz
daa
or
aam
addr16
pop
das
in
cmpsl
outsb
addr16
or
rorl
xchg
dec
sub
movsb
loop
inc
in
nop
xchg
addr16
mov
sub
dec
cmpb
test
pop
mov
jbe
repz
enter
pop
sbbl
jb
cmp
dec
mov
or
add
pop
push
popa
jne
xor
jecxz
addr16
int3
popa
scas
sbb
adc
jl
fnsave
pop
addr16
xlat
xchg
or
mov
xchg
sub
inc
sub
xor
fcoml
aam
test
inc
xchg
xchg
push
add
or
pusha
xchg
mov
xor
cs
mov
pop
fstpl
addr16
fdivrl
lds
push
mov
dec
and
arpl
push
insb
jns
jb
inc
arpl
xchg
xchg
sbb
push
mov
cmpsl
and
leave
add
push
xorb
push
enter
scas
add
inc
push
sub
repnz
pop
and
gs
enter
cwtl
push
movsb
mov
add
adc
xchg
push
aaa
push
daa
addr16
data16
loopne
cmpsb
daa
das
or
sbb
cmp
add
aaa
sub
pushf
in
enter
fcomps
push
fdivrl
mov
addb
push
adc
add
xor
leave
or
movb
nop
imul
stos
imul
clc
mov
xchg
sbb
inc
pop
cmp
aam
adc
xchg
dec
inc
enter
pop
jne
xor
addr16
jecxz
mov
scas
sbb
cmp
addr16
mov
lds
sbb
inc
loopne
push
shlb
out
push
iret
insb
inc
jb
movl
sub
push
add
sub
fsubl
test
or
into
pop
sbb
add
dec
push
mov
mov
nop
pop
adc
cwtl
jae
add
inc
cmpsl
push
add
lock
jmp
add
push
mov
cmp
adc
nop
or
inc
adcb
mov
xor
mov
push
orb
adc
add
es
add
pop
cld
test
out
pop
enter
and
push
ds
xor
and
xchg
dec
mov
aam
mov
pop
bound
andl
stc
inc
and
iret
pop
arpl
and
or
outsb
adc
je
sub
leave
insb
adc
inc
push
fs
shll
add
pop
jne
and
jne
or
loopne
daa
das
in
dec
dec
cmc
shrl
sub
add
movsb
das
dec
sahf
pop
arpl
shlb
pop
movsb
lahf
add
sbb
iret
pop
ds
adc
and
and
cmpb
pop
pop
data16
mov
inc
sbb
jo
lgdtl
iret
vmwrite
and
push
in
hlt
xlat
inc
add
nop
fstl
outsb
dec
jp
inc
iret
pop
insb
or
inc
enter
cmp
outsl
and
and
and
add
pusha
mov
add
jbe
mov
jnp
add
adc
add
add
iret
adc
and
pop
movsl
sub
lahf
pop
xchg
popa
adc
add
sub
mov
and
inc
adc
xor
add
iret
add
jo
mulb
lock
sub
adc
add
pop
stc
pop
sbb
mov
push
mov
fiadds
daa
adc
add
faddl
in
test
test
in
sahf
mov
adc
pop
outsl
xor
in
push
pop
fadds
repnz
dec
repnz
clc
outsl
add
pusha
stos
add
adc
pop
jns
and
outsl
lods
jns
mov
xorl
lods
lret
sub
addl
in
lea
ja
addl
inc
or
je
and
sbb
addb
add
mov
sbb
pop
je
pop
rcrb
lods
loop
add
add
addb
add
sub
repnz
jb
mov
popa
and
test
clc
and
xor
inc
ja
jne
jo
and
and
mov
push
js
aad
mov
mov
and
or
aad
adc
xor
add
xor
sub
xlat
lret
and
inc
adc
push
enter
hlt
jns
inc
or
add
stc
jns
pop
push
jns
mov
das
jns
and
jns
inc
jp
test
inc
jb
add
jp
andb
nop
test
inc
pop
add
test
sub
shlb
cmp
int3
xor
dec
xor
mov
cmpsl
data16
daa
inc
mov
mov
inc
dec
lea
pop
cmp
push
lea
push
and
repnz
jle
lds
in
or
adc
inc
nop
pushf
add
jle
mov
jns
hlt
mov
stc
mov
inc
in
enter
and
in
pop
cmpb
cmp
stos
xchg
pusha
push
mov
push
or
test
mov
adc
mov
fsub
jp
adc
data16
pop
adc
inc
mov
mov
xchg
sub
and
xor
sub
pusha
xorb
mov
aam
push
dec
push
push
xchg
adc
call
out
xor
stos
add
and
mov
xchg
cmpl
pop
adc
cmp
add
inc
xchg
add
xchg
or
pushf
adc
xchg
sbb
into
add
inc
xchg
popa
or
dec
adc
adc
and
add
jns
dec
and
sbbl
xchg
imul
push
inc
daa
outsb
cwtl
enter
mov
dec
push
jb
jne
xor
inc
fdivrl
aas
push
cltd
push
push
push
jb
loope
jns
add
and
adc
nop
cltd
jb
das
nop
xor
xor
xchg
mov
pop
inc
enter
lcall
sbb
mov
pushf
inc
mov
push
nop
pushf
in
loopne
sbb
movsb
push
push
leave
dec
mov
pushf
or
or
inc
lea
jg
cmpsl
ret
add
pusha
adc
sub
push
aas
mov
popa
xchg
add
jo
or
pushf
mov
lea
adc
and
adc
nop
imul
dec
loop
and
lock
shrb
push
mov
pop
out
movsb
pusha
or
mov
push
out
mov
inc
cwtl
sbb
lret
cmp
rolb
pop
jns
pop
aas
popf
dec
inc
add
lret
popf
daa
addl
pop
rcrb
pop
sahf
das
repnz
test
sahf
push
pop
sbb
les
test
jnp
mov
sub
dec
add
pushf
fs
lahf
lods
nop
xchg
add
and
xchg
mov
inc
mov
push
shlb
mov
lock
and
dec
add
outsl
lock
inc
add
pop
ret
je
rolb
xchg
rorl
mov
or
sub
mov
dec
and
pop
inc
xchg
or
push
push
icebp
mov
add
cmp
sub
test
add
push
mov
filds
ljmp
mov
das
dec
add
dec
in
xor
add
orb
imul
sbb
xchg
rcll
add
mov
cmpsb
and
xor
fldl
inc
push
adc
mov
sbb
decl
mov
and
sbbl
pop
aaa
lahf
xchg
cwtl
inc
enter
or
or
push
or
inc
mov
mov
sub
jge
adc
pop
aam
cmpsb
cmp
adc
or
mov
xchg
movsb
std
xor
clc
push
loopne
das
mov
movsb
inc
es
pop
add
daa
das
movsl
xchg
dec
adc
mov
add
lods
xchg
pushf
xchg
or
sbb
and
push
leave
movsl
fistpll
mov
sub
pop
adc
addr16
pop
mov
scas
mov
jl
jne
dec
cmp
jle
repz
mov
or
cmpsb
cmpsb
inc
dec
jne
pop
rcl
test
dec
rolb
inc
push
dec
ret
das
pop
into
lcall
mov
in
fsubrs
rorb
jmp
mov
mov
xchg
fisubrl
test
jae
bound
sbb
inc
jb
mov
cwtl
movsb
test
add
inc
dec
xlat
cltd
and
add
sub
sub
xchg
pushf
cwtl
lock
dec
pop
adc
ss
cltd
cwtl
inc
repnz
js
jns
jp
stos
ja
insb
shll
in
setnp
stos
sub
sbbb
daa
adc
test
sbb
jns
lods
das
leave
inc
dec
adc
lods
adc
mov
mov
popf
dec
inc
and
cmp
add
inc
and
push
sub
mov
and
inc
cmpsl
scas
pop
or
test
sbb
scas
repz
jns
ret
and
mov
cmp
cmp
jp
mov
pop
sub
or
mov
add
cltd
jo
jmp
dec
adc
cltd
and
sub
cwtl
lock
and
inc
adc
push
enter
or
cmp
aam
sbb
xchg
pop
mov
fmull
mov
incl
mov
push
xor
movsb
inc
pushf
in
leave
adc
movsb
or
stos
or
mov
xchg
sbb
in
jmp
pop
push
inc
and
lods
lock
jb
xchg
addb
mov
mov
adcl
cmp
xor
fwait
adc
test
mov
repnz
pop
and
mov
outsl
enter
rcrb
adc
cmp
pop
mov
push
xor
decl
mov
stos
loopne
xchg
daa
das
or
sbb
stos
cmp
xchg
push
sub
popf
dec
adc
and
ja
movsb
xor
movsl
or
mov
je
mov
imul
or
sbb
test
dec
rorb
adc
shlb
addl
xchg
inc
xchg
mov
push
nop
dec
xchg
cmpsb
cmpsb
in
and
add
lods
inc
add
or
nop
add
add
pop
xchg
add
stc
sub
xor
cmp
mov
or
or
sti
and
push
sub
push
add
inc
jg
cmpsb
xor
xlat
add
add
and
sub
mov
inc
loopne
bound
roll
adc
int
and
push
lods
ja
add
and
movsl
xor
mov
mov
adc
subb
addb
lods
xor
aaa
pop
add
mov
mov
sarl
add
arpl
inc
popa
push
push
scas
adc
daa
mov
push
xchg
daa
xor
aad
arpl
and
xchg
sub
cmp
mov
mov
or
jo
pop
jns
mov
mov
fnstsw
sub
pop
fcompl
jbe
adc
inc
mov
push
and
orb
sbb
xor
cmp
rol
int
push
mov
mov
pop
nop
dec
rorl
push
and
xchg
jb
push
gs
mov
mov
and
adc
xchg
push
xchg
fucom
imul
sub
sub
hlt
ss
mov
cmpsl
mov
adc
cmp
adc
mov
add
and
inc
mov
inc
jb
sbb
adc
and
icebp
push
inc
pop
je
out
in
and
add
out
ret
push
loop
inc
and
jno
mov
out
aam
loop
ret
fucomip
add
push
out
nop
lods
ret
cmp
in
outsl
aam
sar
mov
jb
nop
xorl
and
daa
outsl
roll
inc
into
daa
sbb
push
das
outsl
push
enter
movsb
sbb
mov
add
mov
repnz
inc
es
and
mov
dec
mov
pop
iret
mov
out
mov
xchg
jle
cmp
inc
mov
shll
mov
lods
inc
and
fsubs
push
jno
imul
xchg
cld
inc
out
enter
icebp
inc
hlt
popa
inc
dec
and
pop
enter
inc
pop
and
or
jl
sbb
dec
mov
mov
pushf
mov
leave
add
and
jp
pop
jl
bswap
out
adc
mov
jbe,pn
or
leave
pop
les
movsb
pop
push
dec
inc
sub
test
daa
inc
in
mov
punpckldq
shl
out
inc
mov
mov
and
or
repnz
out
movsb
sbb
sub
sub
mov
adc
xchg
mov
mov
out
push
int
gs
and
repz
sbb
mov
ret
add
add
aam
pop
push
inc
jb
jg,pn
test
inc
xchg
or
cmp
inc
out
into
adc
call
out
out
and
js
into
push
push
aas
sub
int3
loopne
shll
aas
mov
addb
sbb
xor
mov
mov
mov
stos
cmpsl
adc
push
gs
mov
cmp
push
add
sub
shlb
repnz
nop
pop
aad
iret
shr
adc
dec
mov
push
and
je
es
pop
aad
aaa
inc
test
mov
xchg
movsl
add
loope
adc
and
mov
xor
push
add
das
mov
das
lods
hlt
in
mov
lods
dec
adc
lret
mov
leave
sub
jns
or
cmp
xchg
xchg
pop
fdivrs
fcoml
and
cmp
add
das
fs
hlt
and
adc
pop
fidivrl
or
mov
cld
push
dec
pop
popa
popa
jae
or
inc
and
dec
negb
mov
inc
add
add
pop
add
fwait
push
push
add
out
mov
and
out
repz
push
je
outsb
fs
jne
fsub
in
enter
mov
pop
nop
int
mov
push
cmp
fnstenv
inc
push
insl
dec
mov
lea
insb
adc
xchg
inc
xchg
nop
cmpsl
or
jae
add
das
add
and
pop
fistpl
or
pop
dec
in
jge
fmull
test
fcoml
sub
pop
jns
jg
pusha
xchg
inc
mov
addr16
push
enter
xor
adc
bound
popa
and
pusha
fnstsw
ja
insl
adc
push
jnp
or
jg,pt
mov
je
fstl
inc
xor
adc
add
leave
lret
mov
faddl
cmp
faddp
hlt
adcb
fisubs
pop
mov
test
in
loopne
mov
push
inc
repnz
xlat
add
cmp
inc
repnz
sub
loop
or
lods
add
enter
out
adc
pop
push
pop
aad
inc
and
inc
dec
adc
fmuls
sbbb
cmp
cmp
inc
lds
cmpsb
add
xlat
dec
adc
pop
fcoml
and
xor
or
push
jns
lea
or
in
xorb
fmul
rcl
mov
xchg
push
sub
or
ljmp
call
mov
dec
call
dec
mov
mov
sarb
and
bound
and
add
sub
inc
xchg
lock
xchg
xor
in
faddp
ss
imul
adc
sbb
repnz
lods
stos
adc
pop
lahf
add
and
pusha
push
inc
adc
in
in
call
mov
leave
sbbl
sub
jb
mov
sbb
rcll
mov
pop
jae
sub
or
sub
dec
ss
inc
add
leave
cwtl
pop
xchg
push
hlt
sbb
dec
xchg
xchg
test
add
outsl
dec
rclb
inc
call
pop
mov
aas
jne,pn
adc
aas
sub
pop
ss
addl
loop
xor
sbb
jnp
scas
aas
add
rdtsc
mov
or
add
add
cmc
mov
push
mov
shll
dec
adc
pop
jns,pn
popa
xlat
dec
and
push
fsubl
add
andl
vmread
pusha
or
push
test
loop
out
jbe
fimull
and
orl
jno
pusha
or
cs
and
jno
rcpps
sbb
xchg
mov
mov
adc
out
push
pusha
or
mov
xchg
and
stc
dec
test
add
int3
scas
leave
add
pop
das
xor
mov
dec
pop
add
adc
mov
jecxz
ret
adc
dec
inc
les
mov
push
das
bound
or
pop
out
cmp
repnz
pop
inc
and
add
push
push
inc
add
shll
sbb
inc
add
sub
cmp
xchg
daa
cld
mov
adc
inc
pop
xlat
inc
push
imul
cli
mov
push
mov
mov
outsb
push
jle
dec
xor
icebp
add
out
mov
cld
imul
into
subl
pop
jle
jmp
and
xor
pushf
jle
xor
add
inc
imul
cmpl
add
pop
and
xchg
inc
xchg
mov
fidivl
mov
std
push
sbb
mov
and
adc
pop
adc
mov
push
pusha
popf
ja
push
mov
mov
or
aas
push
pmaxub
icebp
stos
mov
xor
xor
sarb
setb
xor
inc
and
sysenter
jns
jb
jo
lock
xor
cmp
push
sahf
ror
leave
leave
push
fisubs
push
xchg
fsub
in
in
add
jb
repnz
adc
bnd
lcall
push
mov
mov
sub
add
lea
loope
cltd
pop
bound
mov
or
adc
test
pop
popl
pushf
cmp
add
loope
mov
nop
scas
loope
jbe
dec
push
mov
outsl
loope
jbe
pusha
insl
inc
xchg
sbb
jecxz
in
fnstcw
pop
mov
ja
insl
sub
push
loope
jbe
jne
mov
pop
jb
mov
cmp
dec
shlb
js
dec
fisubrl
test
imul
adc
jns
sbb
pop
sub
mov
rorl
loope
mov
adc
loope
call
gs
jns
push
adc
mov
push
gs
jp
shll
push
or
stos
insb
cmp
mov
dec
or
cmp
or
pop
and
sub
pop
mov
clc
jnp
fiaddl
push
jae
dec
jl
loopne
pop
and
lret
shlb
and
test
mov
test
xor
inc
jecxz
jge
jge
sub
test
inc
add
test
mov
fs
dec
sub
les
stos
add
and
inc
jmp
inc
jb
add
adc
sbb
and
mov
adc
addl
jb
sbb
add
jge
pushf
jb
test
dec
push
add
sbb
inc
filds
dec
lods
clc
pop
adc
bound
or
add
sub
cmp
adc
in
sub
sahf
nopl
cltd
mov
movl
sub
dec
add
push
xchg
outsl
pusha
add
push
sbb
inc
das
push
push
push
rorb
pop
lods
mov
jmp
mov
jno
jns
insb
scas
push
nop
shl
and
jno
jb
test
fdivrl
mov
dec
insb
and
adc
push
add
mov
pop
jno
adc
dec
stos
pop
sti
push
fidivs
or
and
das
adc
cmp
or
sbb
ds
call
pushf
andb
aaa
dec
fdivr
sub
jo
mov
je
inc
push
and
or
setge
xor
lds
decb
icebp
xor
jns
jb
jnp
sti
or
sbb
ficoms
or
pushf
pushf
mov
fsubl
dec
insl
xchg
leave
daa
and
cmp
pusha
test
mov
daa
mov
mov
add
in
aaa
dec
mov
sub
lea
subb
aaa
adc
push
aaa
push
adc
sbb
push
cmp
push
aaa
adc
lods
movsl
out
addb
call
adc
cmp
mov
push
insl
aam
mov
push
loopne
ljmp
adc
pusha
orl
nop
xorb
fwait
les
sbb
test
outsb
insb
and
test
dec
adc
push
adc
sbb
cwtl
xchg
sbb
jo
push
and
incl
decl
xchg
push
or
xchg
movsb
push
rol
xchg
xchg
xchg
inc
mov
lods
rclb
shrl
imul
inc
jo
inc
ret
aam
insb
shll
stos
sbb
sub
push
or
cmp
inc
push
aad
rorb
sar
mov
pop
and
dec
sarl
mov
or
insl
push
pop
fisttpll
leave
dec
push
shl
jns
mov
mov
les
jl
lret
popf
inc
adc
pop
add
jg
enter
cmp
adc
pop
out
mov
fcoml
and
add
or
and
push
lock
and
enter
push
sahf
scas
insl
push
lea
mov
in
mov
cmp
mov
pop
push
adc
test
pop
xor
test
xchg
fcoms
enter
mov
sub
test
scas
mov
and
xchg
mov
jb
sub
loopne
les
add
pop
sub
adc
xchg
mov
loopne
mov
nop
push
int3
ret
out
jle
daa
adc
add
rorb
push
jecxz
popf
mov
push
xchg
cld
adc
mov
push
enter
adc
stc
sbb
adc
push
jb
xor
sbb
jmp
pop
xchg
cmp
jb
dec
dec
inc
sahf
add
daa
dec
jo
dec
dec
dec
cmpsl
fstl
sbb
popa
daa
daa
daa
bound
jl
sbb
pop
dec
push
and
mov
lea
mov
lds
aam
pop
mov
pushf
sub
aad
insb
mov
xlat
mov
pop
push
sarb
rcr
icebp
mov
in
sbb
aad
test
clc
ja
cmp
mov
lods
bound
fs
test
jo
mov
push
arpl
xor
mov
pusha
nop
pop
push
adcb
adc
push
sbb
mov
mov
movsb
inc
ret
dec
jo
mov
dec
mov
inc
adc
mov
xchg
xchg
xchg
mov
fimull
mov
mov
rclb
or
call
and
inc
ret
mov
adc
jae
pop
xchg
jecxz
mov
mov
scas
or
jecxz
inc
push
aad
cmp
in
mov
sbb
push
push
mov
dec
mov
pop
xchg
pop
push
nop
pop
popa
ret
push
lea
pusha
sbb
and
xchg
adc
orb
mov
pop
xchg
subl
jo
cmpb
sbb
or
xor
mov
pop
mov
xor
data16
loopne
mov
aam
mov
hlt
imul
into
add
scas
add
mov
scas
or
pusha
lret
add
sub
sub
add
mov
aaa
push
or
scas
inc
cmp
adc
andb
shll
aaa
push
in
neg
lock
adc
cmp
dec
push
sub
dec
test
jb
aam
test
pop
sub
inc
fsub
mov
ret
push
scas
add
cmp
test
pop
dec
or
sub
insl
test
cbtw
fmuls
add
push
push
mov
inc
hlt
jne
add
rorb
cld
sti
xor
sbb
push
pop
mov
pop
sub
pop
cmpsl
pop
and
sbbb
cmpsl
pop
pop
cmpl
pushf
cmpsl
mov
sbb
push
pop
inc
xor
push
mov
and
and
cmpsl
dec
and
mov
add
dec
enter
pop
test
sub
pusha
stos
in
xor
repnz
fs
fildl
daa
jb
jb
aaa
insl
cmpsl
into
cmp
jns
repnz
jb
cltd
jmp
cmpsl
sub
adc
or
add
pop
popf
mov
nop
mov
test
sbb
lock
shrb
sub
out
insb
and
fnsave
dec
or
and
hlt
sahf
mov
lahf
mov
add
fstl
dec
dec
or
lahf
push
and
ljmp
fnsave
add
mov
ret
fwait
adcl
mov
fucomp
lcall
push
sub
sbb
les
ret
push
mov
sbb
adc
inc
adcl
repz
or
cwtl
pushf
mov
mov
lahf
jle
hlt
or
and
mov
sub
mov
and
mov
pop
adcl
or
orb
sub
adcb
pop
fwait
push
add
das
pop
mov
jecxz
shrb
inc
jge
xor
add
rcll
adc
xor
dec
pop
andb
aaa
sbb
cmp
or
adc
mov
popl
or
mov
fistl
push
call
in
or
push
test
jp
push
and
add
in
cwtl
xchg
out
add
test
add
daa
adc
adc
sub
notl
cmpsb
adc
mov
fcomps
pop
add
xlat
push
fdivrl
je
xlat
inc
sub
jl
popf
mov
mov
das
mov
loope
cwtl
mov
mov
push
jb
xor
bound
fucom
xchg
sbb
mov
leave
mov
mov
mov
adc
add
pop
mov
sbb
lcall
lcall
mov
pop
outsl
sub
sub
test
push
fdivrl
push
mov
nop
outsb
mov
mov
subb
xor
mov
sub
outsl
nop
inc
and
fnsave
fisubrs
pop
cs
invd
das
outsl
leave
in
repnz
das
imul
fs
out
xor
jb
repnz
adc
dec
jle
jns
jb
incl
cmp
cmp
mov
std
xor
pushf
pushf
pushf
mov
lret
out
dec
dec
inc
sahf
es
lret
cmc
xor
es
sbb
xor
mov
mov
loopne
je
sbb
bound
and
enter
lods
jno
ljmp
mov
cmp
cmp
push
mov
mov
and
mov
add
sbb
stos
sarb
ja
dec
leave
test
ljmp
inc
mov
or
repnz
pop
mov
mov
adc
add
pop
push
dec
scas
cmp
sbb
lea
push
push
aad
sbb
leave
test
inc
ret
dec
jo
and
dec
and
inc
adc
sbb
mov
xchg
les
mov
inc
fimull
arpl
xorb
stc
cwtl
mov
ss
xor
mov
stc
pop
and
into
inc
ret
adc
mov
jae
mov
mov
and
stc
sub
push
mov
jecxz
aad
rolb
add
in
stc
lods
mov
mov
stos
mov
in
or
mov
xchg
dec
pusha
and
mov
pop
popa
push
pop
les
lea
cmpsl
dec
clc
adc
jns
or
jl
adc
mov
sbb
push
pop
xchg
aad
mov
jb
loopne
inc
ficoml
pop
lods
and
out
pusha
cmpl
hlt
test
enter
and
push
xor
cmpsl
xchg
fstpl
ss
sub
xchg
and
or
sbb
pop
mov
enter
jbe
jns
fwait
mov
test
movsl
inc
ja
scas
add
enter
sbb
mov
mov
fisubs
jg
xchg
push
or
add
stos
mov
mov
scas
inc
inc
push
loop,pt
mov
jmp
mov
mov
push
adc
mulb
cld
shrb
push
shll
pop
or
push
xchg
inc
fisubrs
or
test
loopne
or
dec
mov
push
cmp
cmp
mov
dec
push
insb
out
mov
call
mov
mov
xor
loopne
aad
push
cmp
paddq
cmp
xchg
jbe
out
leave
leave
leave
enter
xchg
loopne
in
in
cmp
jb
repnz
ds
lds
sbb
ljmp
cmp
mov
hlt
xor
inc
lahf
adc
pop
lea
and
fs
cwtl
sub
fs
add
sbb
push
push
sub
jno
or
ret
daa
imul
mov
mov
mov
mov
mov
mov
xchg
out
aam
dec
ja
dec
leave
test
jmp
or
rolb
fdivrl
inc
and
mov
xor
sbb
in
xchg
pop
and
or
mov
mov
adc
or
add
in
inc
mov
push
fs
jl
push
lea
lods
add
cmp
mov
mov
mov
add
pop
fdivrs
push
and
mov
mov
add
push
mov
pushf
add
mov
jae
sub
mov
push
fstps
add
mov
push
jge
lods
mov
add
fstps
xchg
dec
fsts
xchg
mov
push
ljmp
xchg
lods
fdivs
mov
dec
mov
inc
add
shrl
cwtl
adc
or
fldt
or
or
mov
sub
sbb
mov
rcll
inc
out
mov
mov
rcll
xchg
sub
inc
pushf
aaa
adc
out
je
or
mov
out
loopne
add
sub
sbb
sbb
icebp
mov
inc
pusha
push
mov
inc
imul
popf
addb
push
mov
and
fadds
popa
cmpb
sub
mov
pop
cmp
xchg
cmp
xor
fmul
xor
in
inc
xor
sbb
insl
add
sub
cwtl
push
pop
inc
mov
aam
loopne
push
loop
sti
movsb
into
out
mov
inc
pop
push
aam
jbe
int3
inc
or
mov
mov
hlt
out
ret
out
testb
movsb
pop
sbb
fbstp
inc
xchg
nop
inc
xor
and
faddl
mov
sub
bound
ffreep
dec
out
setl
jl
dec
inc
sahf
pushf
shlb
dec
outsb
mov
fsubs
dec
lods
xchg
xchg
daa
daa
hlt
and
push
enter
js
in
dec
fmul
leave
leave
inc
push
ljmp
fbstp
mov
push
xor
add
sbb
mov
rorb
lds
inc
in
push
sbb
movl
mov
out
mov
jl
and
inc
adc
cmp
and
push
mov
sbb
push
sbb
movsl
in
mov
mov
mov
int
in
pushf
sub
and
or
push
adc
fisubrl
cmpsb
lahf
fwait
xchg
pop
pop
adc
fmuls
inc
popa
pop
fdivrs
movsb
movsb
int3
enter
frstor
cmp
push
sbb
leave
arpl
sub
bound
inc
test
sbb
sbb
dec
lahf
lret
aam
push
popf
lahf
jg
cwtl
xor
lahf
lret
pop
mov
adc
sahf
lret
mov
sbb
lret
test
sbb
sahf
int3
adc
adcl
dec
xor
sub
and
sbb
scas
push
inc
jge
in
mov
adc
inc
add
sub
jns
push
ret
add
push
outsb
push
rolb
xchg
adcl
mov
adc
hlt
stos
cmp
add
inc
dec
gs
test
roll
pop
enter
pop
rcr
and
pop
add
mov
push
push
xor
inc
push
sbb
inc
pop
cmpsb
mov
pop
iret
push
or
loop
rorb
jne
mov
push
xchg
imul
movsb
push
inc
or
stc
into
and
lret
cmp
fidivl
mov
push
xor
dec
add
mov
call
add
into
fldenv
cmp
ret
mov
cmp
and
push
jo
and
popf
add
jns
push
cmpsl
push
mov
mov
scas
add
mov
pop
cmpsb
fisttpl
es
popa
add
pop
dec
push
punpckhbw
mov
mov
syscall
mov
xor
push
int
adc
rol
pop
shlb
and
shlb
push
add
add
add
aam
cwtl
add
dec
dec
roll
fcoml
and
pop
add
sbb
or
cltd
addl
inc
add
pushl
mov
xchg
dec
test
adc
sub
mov
addr16
jno
push
jg
and
or
xchg
inc
sbb
push
adc
xchg
sbb
or
sub
push
ret
inc
js
rclb
push
sub
adc
jne
jo
xchg
mov
xchg
push
jne
je
jns
jne
sarb
shll
push
push
jne
sbb
add
or
outsb
push
sub
out
sbb
mov
jne
adc
sar
gs
mov
push
enter
push
push
addl
inc
nop
sbb
pop
and
add
adc
stc
push
dec
and
hlt
cmp
push
xor
mov
mov
push
dec
sbb
jb
in
push
push
pop
pop
roll
dec
push
je
in
rorl
dec
enter
dec
hlt
sarl
cs
push
push
in
repnz
pop
mov
or
sbb
mov
and
dec
cld
pop
add
adc
lahf
inc
pop
xchg
mov
inc
sbb
adc
mov
xor
pop
mov
out
pop
test
popf
pop
inc
int
and
enter
push
pop
fcomps
jb
pop
pop
pop
pop
pop
je
fiadds
xchg
pop
rorl
pop
fdivs
inc
push
xchg
adc
int3
aad
add
xchg
mov
int
je
mov
shll
inc
push
pop
in
sbb
pop
pop
sbb
aaa
roll
add
add
notb
mov
jb
xor
pop
inc
add
in
and
sub
or
xor
add
push
or
push
imul
leave
je
inc
test
pop
test
mov
pop
mov
pop
je
mov
xor
push
lods
mov
pushf
pop
gs
pop
shll
sub
pop
cmp
pop
pop
nop
push
je
add
pop
loope
cmp
add
sbb
or
fnstenv
call
iret
xor
pop
decl
push
push
pusha
fidivrl
ss
dec
push
sbb
cmc
pop
mov
inc
dec
pop
cmp
ficomps
and
sbbl
cmp
sub
sub
sbb
adcl
dec
sbb
or
stos
std
jo
mov
jne
xchg
add
push
cltd
jl
bound
pusha
fidivrs
or
inc
inc
xchg
mov
ds
loopne
jecxz,pn
in
int
pop
adc
sbb
test
push
add
fwait
pop
mov
movsb
popa
pop
sbb
jb
bound
ss
inc
add
or
or
movsb
sub
test
enter
sub
flds
xor
or
add
push
xor
add
pushf
bound
std
xor
addb
les
push
add
popaw
or
nop
mov
pop
dec
adc
push
shrb
mov
shl
fildl
in
pushf
and
lds
lock
jl
insb
fs
adc
andb
fs
test
fs
or
inc
sub
dec
jb
fimull
add
fisubl
mov
arpl
and
push
mov
mov
test
fbstp
sbb
adcb
in
xlat
mov
gs
mov
nop
xor
iret
push
xor
rol
iret
lahf
imull
push
andl
aaa
mov
leave
mov
ss
data16
dec
mov
cmp
mov
and
xchg
adc
inc
inc
mov
inc
xchg
mov
dec
cmp
adc
fdivrl
cmp
jne
jns
push
sbb
xchg
push
jb
push
xor
sub
mov
inc
mov
shlb
and
sbbl
mov
hlt
jns
dec
aaa
push
inc
and
ja
and
fcomps
fiadds
rcrl
cld
push
daa
clc
imul
das
push
lods
das
pushf
test
add
lock
mov
icebp
stos
call
mov
mov
push
mov
push
push
cmp
pop
mov
cld
push
sub
jo
or
lods
inc
adc
roll
imul
mov
enter
pop
and
pop
sub
push
cmp
sub
or
xorb
mov
neg
insl
fsubs
inc
dec
push
hlt
hlt
insb
notl
insl
inc
mov
mov
push
adc
pop
sub
dec
push
ret
sub
or
cmp
movsl
in
ret
enter
or
fsubrs
mov
sbb
faddl
mov
fcoml
or
mov
outsb
test
sub
lds
outsb
negb
cmp
mov
testb
push
loope
outsb
inc
in
outsb
mov
dec
out
js
inc
cld
outsb
cmp
and
jo
outsl
cwtl
outsl
mov
outsl
jecxz
sub
sbb
pop
roll
dec
fsub
dec
aas
enter
sub
loop
scas
mov
outsb
add
mov
push
aas
jo
push
movsl
jecxz,pn
jo
aas
add
sub
aas
jl
leave
push
adc
mov
xchg
sbb
dec
and
out
pusha
mov
push
xchg
cmp
add
jne
mull
xchg
inc
data16
mov
sub
jb
push
jae
jb
jb
mov
mov
std
jb
mov
test
movsl
mov
pop
inc
pop
shrl
mov
sub
mov
pop
nop
push
mov
test
sbb
xchg
cmpsl
iret
dec
add
data16
aam
mov
push
jmp
je
xorb
jne
mov
cmpsb
das
mov
push
fistpll
aam
lock
add
fbld
xchg
xchg
push
add
out
push
jne
mov
xchg
rorl
sub
mov
xchg
dec
sbb
push
inc
and
add
adc
xchg
outsl
pop
pop
adc
dec
shl
add
jbe
adc
ja
test
push
jbe
mov
push
jb
dec
in
out
push
das
scas
push
loop
pop
jge
mov
xchg
xor
es
jo
mov
sub
out
mov
stos
pop
mov
subb
cmp
adc
popw
push
jno
sbb
fbld
sub
xchg
push
nop
js
mov
ja
daa
inc
dec
daa
pop
push
add
stos
js
cmp
sbb
jb
js
js
xchg
pop
inc
ret
enter
test
insb
push
or
dec
and
mov
lds
add
dec
shll
inc
xor
xor
sbb
push
enter
inc
push
bound
jbe
pop
cld
pop
and
in
sbb
dec
pop
inc
dec
adc
jns
jns
sbb
and
push
mov
add
call
sub
stos
adc
inc
adc
adcb
cmpsb
sbb
xor
fwait
mov
push
mov
push
rorb
out
das
adc
cmpsl
js
jnp
test
xor
test
ljmp
push
pop
sub
push
adc
ja
sub
jmp
mov
and
stos
and
xchg
ret
pop
adc
pop
addr16
imul
jl
push
pusha
jge
outsb
push
or
das
sahf
jl
sub
sub
jmp
pusha
in
test
jl
jge
push
into
fs
add
pusha
adc
pop
mov
fwait
popa
sbb
jo
jl
addb
mov
mov
call
or
loop
cmp
push
dec
das
bound
and
jb
dec
test
push
loop
and
jle
adc
mov
adc
in
add
pop
and
subb
loopne
adc
mov
stos
dec
iret
jl
lahf
scas
jge
aaa
test
add
push
fisubl
in
outsl
das
out
jg
shlb
add
in
adc
leave
lret
stos
or
adc
add
sbb
or
xchg
nop
xchg
stos
bound
popa
add
pusha
jo
pop
adc
ret
dec
adc
sbb
sbb
pop
mov
push
cmp
or
data16
jp
enter
pop
subb
add
inc
push
mov
and
mov
push
mov
sbb
pop
leave
jl
cmp
lds
lods
stos
dec
jle
or
rclb
nop
sub
loope
xchg
mov
fisubl
test
push
sti
rorb
cmp
xorb
in
push
cmp
dec
push
sub
insb
in
pushf
or
enter
sub
push
xor
pushf
sub
pop
leave
mov
lock
push
stos
bound
add
add
sbb
lds
insl
sbb
jnp
fwait
mov
sahf
push
mov
js
test
and
mov
jo
and
sbb
test
pop
cmp
test
push
xor
imul
dec
insb
adcb
xor
pop
inc
pop
xor
in
nop
sub
push
pop
inc
lds
and
sbb
xchg
xchg
push
inc
das
push
xchg
mov
fdiv
fisubrs
into
or
push
and
xchg
mov
sbb
lods
and
bnd
enter
aad
dec
jle
pop
mov
dec
jo
and
jno
add
add
inc
mov
nop
aam
add
pop
fmul
adc
push
adc
nop
push
cs
xor
xchg
movl
pop
nop
sub
sbb
add
outsb
cmp
testb
mov
mov
repnz
ja
add
add
ja
fsubs
ja
cmpsl
bound
orb
jecxz
rclb
loopne
mov
sbb
xchg
xrelease
adc
sarb
push
sub
mov
stos
sbb
push
pop
lds
mov
sub
addb
les
mov
cwtl
dec
adc
or
sarb
cmp
adc
test
in
adc
insb
fmuls
pop
or
pop
or
cs
pop
loope
cs
mov
fldenv
out
xchg
gs
jg
testb
mov
subps
sbb
or
pop
lds
adc
sub
and
add
inc
add
lea
jb
je
add
jb
adc
leave
sbbb
fcmovu
fs
dec
mov
mov
add
sti
push
loope
das
std
push
xor
decl
mov
mov
adc
mov
mov
sbb
push
and
and
mov
jl
inc
or
jne
cmovbe
add
test
adc
test
int
add
daa
adc
push
pop
adc
add
shrb
sub
add
inc
xchg
movsl
loopne
add
imul
lods
fists
divl
ret
fidivl
pop
adc
aaa
das
insl
dec
in
sbb
add
cmp
cmp
jbe
push
lea
dec
mov
leave
es
popa
sbb
nop
push
adc
xor
enter
push
icebp
imul
popf
xlat
and
adc
movsb
cmovns
outsb
adc
add
or
mov
ljmp
xor
popa
popa
or
cmp
out
xchg
aas
imul
sbb
jmp
lcall
mov
in
rorb
sbb
push
sub
mov
and
xchg
out
sbb
aas
push
enter
pop
jl
xchg
andl
loop
ud0
cmp
inc
mov
adc
bound
mov
mov
sub
inc
pop
push
xor
loop
lds
mov
sbb
xchg
inc
loopne
jmp
pop
aam
xchg
cld
xchg
in
and
inc
sbb
in
nop
mov
mov
pop
mov
mov
mov
testb
or
lret
inc
and
dec
xchg
dec
add
aaa
jne
test
movsl
sbb
aad
out
fildl
paddsw
and
stos
jae
shll
sbb
jbe
xor
xchg
dec
push
outsl
shlb
dec
xor
dec
leave
or
and
pop
roll
dec
dec
xor
add
push
xor
xor
add
mov
mov
enter
push
xchg
ja
mov
enter
push
jns
enter
sar
jo
xor
sub
jmp
lret
ret
stc
cmc
xor
dec
xlat
rcr
add
ret
sub
cmp
pop
pop
mov
add
fdivl
cmp
push
jmp
push
push
dec
dec
and
sub
jae
in
mov
xchg
pop
mov
pushf
aaa
inc
mov
cmovb
cmp
test
push
sbb
das
xchg
push
addb
inc
imul
mov
insb
nop
popa
mov
str
and
inc
push
adc
adc
adcb
test
rorl
push
xchg
mov
scas
sbb
or
int3
sbb
xor
or
mov
popf
add
xchg
pop
push
insl
in
out
mov
sarb
shll
and
fisttps
addl
sub
divl
in
xchg
push
insb
xchg
hlt
mov
cmp
push
and
or
shlb
shrd
jne
rcrb
add
testb
dec
fwait
mov
pop
jnp
ss
xchg
mov
clts
pop
ret
jb
add
popf
pop
add
les
or
and
mov
ud2
sahf
xadd
prefetch
push
lahf
or
pop
scas
push
add
outsb
or
stos
xchg
xor
add
xor
cmc
jecxz
and
sub
mull
lea
sub
pop
inc
jge
gs
jo
cmpsl
pop
jmp
xchg
test
fs
push
loop
dec
xchg
test
addr16
addr16
sub
jb
add
scas
ficompl
mov
cld
sub
or
xchg
add
adc
loop
add
add
or
jno
inc
in
mov
es
mov
push
shrl
aaa
iret
dec
add
add
mov
mov
mov
add
pop
fnsave
dec
mov
jnp
inc
es
fs
andb
dec
jge
js
ret
shll
fisubl
andl
leave
imul
das
mov
adc
daa
sbb
scas
inc
jno
scas
loopne
test
and
rolb
jle
aaa
imul
aas
xchg
jo
pop
pop
or
adc
orb
adc
lcall
jae
or
mov
mov
jno
pop
push
iret
dec
add
xchg
lret
ffree
xchg
nop
push
daa
ss
inc
push
or
pop
and
and
lret
xor
test
push
mov
mov
fldl
jmp
mov
les
pop
int3
xchg
shrb
or
add
popf
push
pusha
fwait
nop
pop
mov
cmp
add
mov
loope
mov
dec
and
dec
les
aaa
sbb
popa
jb
lds
scas
pop
sub
sbb
leave
test
lock
or
add
pushf
ret
cmpsl
pop
and
and
push
je
pop
push
movsb
push
jbe
mulb
cmp
inc
add
sub
mov
add
dec
imul
imul
pop
mulb
pusha
jg
adc
push
push
or
mov
nop
xor
andps
sarb
mov
jo
inc
inc
pop
xor
rolb
inc
or
movsl
inc
movsl
les
mov
shlb
mov
and
lds
xchg
mov
xor
movsb
dec
cmp
ret
sbb
sub
fistpl
cmpsb
push
push
cmpsb
das
adc
stos
aaa
xlat
push
adc
lods
jmp
dec
imul
cmp
cmp
push
pushf
push
xchg
aas
divl
faddl
mov
es
cmp
cmp
push
es
cmp
add
repz
into
mull
loopne
and
add
js
add
inc
stc
and
mov
push
roll
push
dec
push
cmpsl
cld
lea
addps
lahf
cmpsl
call
test
mov
test
test
test
imul
mov
xor
movlps
push
sbb
es
jge
add
stos
shll
loopne
dec
filds
lock
dec
and
cmp
dec
outsb
leave
mov
pop
popa
jge
jno
xor
add
dec
cmp
or
push
xchg
inc
jecxz
xchg
sti
jno
jnp
outsb
lea
imul
mov
or
cmpl
jns
loope
xor
push
push
nop
cmp
sti
sub
xchg
push
int3
push
ss
nop
push
fistpl
leave
ss
push
jbe
pop
ret
imul
loopne
aaa
mov
cwtl
sub
adc
insl
jl
and
mov
fldcw
xchg
add
repz
sub
push
cmp
or
dec
pop
or
dec
pop
pusha
add
je
cltd
flds
shrb
jnp
aam
lock
sub
cli
mov
movsb
push
cmp
loop
push
clc
xchg
cmp
aaa
fwait
xchg
pop
out
int3
repz
scas
std
stos
fwait
add
and
test
xchg
xchg
cmp
xchg
fsubrs
sub
data16
notb
push
or
sub
arpl
mov
popf
or
inc
jmp
or
insl
mov
pop
flds
xchg
shlb
loope
out
lods
in
mov
test
push
js
push
jle
loop
push
dec
add
push
lods
pusha
pop
push
loop
loopne
push
sub
push
pusha
push
popa
scas
cmp
lods
xchg
push
wbinvd
cwtl
cmp
xor
or
xchg
add
pop
inc
adc
shr
xor
fmuls
mov
push
dec
inc
je
lcall
sbb
add
out
lods
adc
xor
mov
repnz
mov
bswap
sub
inc
sahf
aas
mov
fldenv
mov
ret
cltd
and
push
outsb
cmc
les
adc
movsb
insl
mov
push
nop
rcrb
add
lods
cmp
add
pop
dec
pop
sahf
inc
inc
push
adc
push
adc
mov
add
mov
push
xor
movsb
mov
rorb
insl
push
pop
outsl
inc
fwait
lds
mov
subb
mov
movsb
icebp
jnp
call
add
jp
hlt
dec
ret
and
sub
mov
in
inc
push
mov
add
out
inc
xchg
or
mov
add
mov
andl
adc
dec
fiadds
lahf
and
and
cmp
fmuls
fs
int
push
sbb
sbb
scas
pop
inc
je
pop
sub
popa
insl
or
jg
mov
sbb
mov
jb
orb
xor
cmp
aas
test
jb
pmullw
add
popa
imul
ljmp
pop
adc
arpl
jo
push
lahf
popa
mov
jmp
push
cmpsl
mov
movsb
lock
add
repz
adc
pop
cmpsl
pop
xor
and
inc
mov
insb
add
sub
faddl
es
pushf
sbb
inc
movsl
dec
sti
push
sbb
daa
pop
mov
cmp
add
mov
jecxz,pn
faddp
and
inc
cwtl
push
and
adc
push
mov
fcomps
pop
mov
push
imul
xor
or
add
add
mov
pop
inc
loop
stos
loope
loope
xchg
dec
push
add
mov
lea
das
fdivl
xlat
in
mov
aaa
test
in
xchg
bound
jo
sub
push
fldl
int3
lret
scas
mov
pusha
push
mov
pop
mov
inc
sub
pop
dec
test
mov
mov
pop
dec
inc
xchg
sbbb
xor
xor
mov
enter
shlb
call
cmpb
cmpsl
into
and
sbb
mov
fnstcw
in
mov
sub
pop
inc
test
pushf
mov
paddq
pushw
icebp
mov
fwait
test
enter
inc
rcrb
sbb
jbe
vmread
mov
jns
add
push
mov
adc
or
sbb
lock
das
xchg
push
adc
mov
xchg
insb
fmul
mov
cmp
addb
add
mov
les
rorb
inc
sub
mov
add
mov
dec
lods
mov
or
adc
out
or
mov
mov
aaa
add
mov
pusha
inc
call
adc
adc
mov
aam
lods
aad
mov
xor
orl
popa
xchg
mov
dec
repnz
mov
sbb
cmpsb
nop
mov
mov
shll
adc
loop
or
sub
or
enter
stos
mov
mov
dec
pop
in
test
xchg
xchg
push
push
dec
lods
lea
mov
push
mov
dec
pop
and
leave
inc
vminss
mov
add
mov
jl
or
lds
fnstcw
int
scas
movsb
scas
adc
in
sarb
cmp
lods
scas
mov
js
lock
adc
add
inc
dec
push
sub
or
leave
dec
mov
inc
aas
ret
xchg
cmc
dec
push
cmc
mov
jo
and
inc
lahf
ffreep
sbb
inc
stos
push
or
ret
add
pop
and
jl
sbb
mov
adc
stc
ret
cmp
stos
insl
dec
mov
je
mov
sub
scas
mov
push
ret
mov
pushf
cmp
push
les
das
mov
adc
ret
scas
cld
mov
scas
sbb
inc
mov
scas
in
ret
daa
les
pop
push
das
or
scas
lods
push
les
and
inc
mov
jns
rorl
addr16
inc
lcall
push
loope
pop
mov
js
sbbb
mov
push
jl
pushf
bound
and
mov
add
push
push
movsl
push
xchg
test
dec
stos
push
pop
jo
xlat
rol
pop
push
fs
push
adc
xor
mov
inc
jno
cmp
adc
inc
les
scas
sub
push
inc
fadd
leave
insb
dec
adc
cmovle
leave
leave
lcall
inc
loopne
enter
leave
leave
enter
leave
dec
xchg
cs
loopne
fcoml
or
sub
adc
pop
sub
cmp
mov
fbld
inc
shlb
push
rol
push
inc
clc
movsl
aaa
push
sbb
xchg
lock
mov
cmpsb
lcall
add
cmpsl
or
stos
and
jae
pop
popf
inc
dec
test
adc
inc
push
dec
fsubs
mov
fcomps
fwait
movsb
xor
xor
jl
and
adcb
sub
and
loope
jo
push
inc
and
xchg
sbb
sti
sub
call
rcl
push
inc
cmp
or
lods
or
and
sub
nop
dec
and
mov
or
or
push
shrb
inc
inc
adc
jo
stos
xchg
jns
sub
movsl
outsb
or
rorb
into
mov
lock
lds
inc
or
mov
lret
inc
inc
cmp
or
adc
popa
cmp
lock
sub
mov
or
test
dec
add
push
mov
dec
pop
rolb
sahf
lret
jbe
mov
cld
add
movsb
xor
dec
sub
jbe
mov
mov
arpl
sbb
icebp
jle
rorb
dec
and
dec
and
push
or
mov
adc
xor
pop
fs
push
and
or
or
mov
add
xor
and
mov
cmpsl
jno
pop
stc
jne
adc
jo
and
add
inc
icebp
inc
add
into
iret
dec
push
xor
iret
vmwrite
or
cltd
inc
push
iret
jge
andb
dec
pop
jns
test
sub
jnp
or
iret
call
sbb
movsb
add
pop
adc
orb
pop
imul
xor
jno
dec
and
xor
icebp
orl
xor
sbb
int
or
push
push
add
adc
call
bound
imul
adc
in
add
push
push
adc
int
aas
into
inc
add
fistl
pop
jge
add
jo
lret
cmp
mov
ss
inc
or
push
xchg
jns
sbb
or
mov
or
xchg
pop
push
and
shll
xchg
rcl
adc
and
add
and
lods
rcrl
pop
xchg
sahf
sbb
sbb
and
loopne
xor
aad
das
nop
aam
repnz
cmp
xchg
das
pop
fcom
mov
mov
xor
dec
mov
aad
push
xchg
ret
push
insl
loope
jmp
add
mov
pop
add
fisubl
or
dec
and
js
out
out
lods
es
stc
aad
pop
je
mov
test
ja
add
mov
add
and
pop
add
push
cmp
inc
aas
jge
sub
nop
add
fdivrs
imul
add
sbb
and
xchg
addr16
and
inc
ja
cmc
nop
inc
and
pushf
mov
scas
pushf
xlat
fsubs
ret
das
fisttps
cmp
bound
in
or
movhps
fsubrs
pushf
jmp
fsubs
xlat
add
cmp
or
add
fmul
scas
pop
cmpsb
in
xor
push
xor
outsl
ret
nop
mov
sub
nop
stos
aaa
rcrl
cmc
fnstcw
cmp
test
push
dec
cmp
getsec
addl
adc
dec
cs
jo
and
outsb
pop
or
sbb
pop
loopne
popl
add
outsl
mov
insb
ficompl
mov
adc
leave
push
aaa
inc
nop
mov
and
punpcklbw
or
inc
fnstsw
xchg
lret
lret
mov
mov
adc
jbe
test
xchg
mov
movsb
jnp
mov
inc
or
fsub
sub
pop
and
adc
pusha
loope
dec
add
pushf
fdivr
pushf
frstor
nop
pop
xorl
sub
pop
shl
enter
sysenter
fldl
dec
cmpsl
and
cmp
and
int
add
ret
roll
add
inc
addr16
xchg
ret
xor
adc
sbb
dec
mov
fiadds
es
rcr
lock
test
fisubrl
pushf
mov
iret
add
fildll
pushf
jmp
fildll
mov
sarb
in
movsl
lock
push
and
addb
stos
sbb
jno
push
cltd
fidivrs
xchg
inc
or
rcrl
test
xor
movsb
rclb
push
and
es
stc
loopne
add
hlt
cwtl
or
das
ret
daa
inc
roll
pop
ret
in
loope
mov
or
sbb
in
ror
dec
ret
pop
sbb
xchg
addr16
dec
add
xor
cmp
leave
jae
loop
cwtl
je
mov
popl
loope
pop
push
sub
push
lret
jecxz
hlt
or
in
in
into
sarb
pop
mov
mov
xor
mov
mov
sbb
xor
test
iret
push
loope
xor
xor
iret
or
sbb
pop
iret
lds
lods
push
cmpsb
iret
fdivl
fidivrl
in
pextrw
or
sahf
adc
dec
cwtl
in
fisubrs
aas
iret
mov
out
and
dec
cltd
ret
or
push
sti
andb
mov
out
stc
pop
cmpsb
pop
shll
cmp
int3
mov
or
lods
add
aam
loope
jnp
cmp
jno
add
in
xor
cmp
xor
xchg
jno
xor
or
repnz
loope
in
mov
xchg
insl
mov
loopne
or
jae
sbbb
fsubs
fwait
adc
cmpsl
inc
in
or
inc
ljmp
xorl
jo
adc
enter
imul
loope
nop
scas
push
inc
in
adc
jns
js
leave
imul
push
pop
and
push
sub
and
pop
sub
or
and
lock
add
lcall
shll
cmp
sub
jo
loope
mov
jae
or
in
dec
mov
imul
and
mov
rorb
cmp
pop
daa
cmp
mov
scas
out
mov
add
or
add
jmp
flds
add
pop
mov
sbb
or
idivb
inc
js
mov
xor
push
pop
mov
jo
fld
imul
xor
pop
enter
das
dec
sbb
fimull
fiaddl
xchg
loop
ret
adcl
xchg
jo
sti
jae
paddusw
or
adc
mov
out
in
add
xchg
and
jns
addl
xchg
lcall
push
pop
inc
xor
or
push
ret
adc
sbb
jmp
fucomi
sbb
mov
in
test
flds
inc
das
shr
add
push
jg
les
sub
ltr
dec
or
roll
and
stc
imul
jno
add
mov
add
sysret
add
pop
sub
wbinvd
add
or
out
seta
cmp
add
lret
add
out
push
outsl
pop
pusha
loope
mov
lcall
aad
lock
ret
dec
inc
or
cmpb
mov
add
xorb
mov
lea
out
aas
add
push
add
fmuls
mov
subl
out
popa
sti
sub
cmp
pop
insb
push
mov
push
xchg
sub
pop
push
mov
push
or
imul
mov
push
mov
out
adcb
insl
push
mov
dec
fisttpl
insb
sub
dec
mov
push
aaa
test
add
and
rcll
xchg
andb
mov
mov
iret
add
lock
loope
stos
push
sbb
movsl
int
sbb
aaa
jns
addps
icebp
mov
in
mov
xchg
icebp
pop
push
aad
divl
adcb
pop
mov
add
testb
mov
aad
repnz
mov
adc
inc
dec
push
repz
das
out
repnz
dec
cs
xlat
sbb
and
in
adc
xchg
les
jns
xchg
push
repz
ja
jno
test
pop
insb
dec
inc
sub
push
add
push
rclb
mov
jecxz
inc
bound
test
fsubs
test
inc
int3
adc
dec
add
movsl
pusha
xor
mov
mov
dec
push
les
cmc
ja
and
dec
adc
mov
das
pusha
cmc
xlat
sub
mov
stos
js
enter
add
dec
es
fiadds
xchg
fiadds
xchg
int
shl
adc
ret
add
inc
andl
and
or
test
adcl
inc
xchg
das
pop
sbb
leave
and
popf
in
imulb
aas
out
loopne
mov
push
dec
nop
fimuls
pop
cmpl
repnz
dec
and
push
ds
dec
inc
idiv
fs
aaa
ljmp
push
or
xchg
inc
adc
hlt
jle
scas
movsl
or
xchg
mul
lret
neg
pushf
sbbb
insl
clc
cmovno
xchg
xchg
dec
insl
xchg
clc
out
sbb
and
dec
sbb
or
jmp
xchg
mov
and
pop
movsl
dec
sbb
fsubl
jne
dec
dec
fsts
cmp
mov
xor
js
add
jmp
add
aad
pop
sub
aaa
stos
adcb
repnz
mov
imul
sub
xchg
fdivrl
cmpsl
cmp
push
insb
stos
add
and
cmpsb
or
mov
stos
xchg
lea
cmp
push
shrb
inc
push
adc
fadds
bound
insl
dec
adc
or
mov
int
notb
in
add
jecxz
mov
adc
xlat
gs
scas
aas
and
in
xor
xchg
jg
inc
enter
pop
xor
ljmp
testb
add
fisttpl
inc
sub
int3
fldenv
add
fs
mov
dec
sahf
or
mov
mov
jae
and
iret
aaa
das
and
push
inc
dec
xor
xor
in
mov
mov
xor
daa
push
xchg
mov
incb
decl
dec
mov
sbb
js
and
adc
push
dec
in
mov
mov
push
push
aaa
sbb
popf
outsb
movl
inc
loopne
leave
cmp
shl
movsb
jo
and
fwait
imul
add
adc
mov
cmp
xor
lock
shlb
dec
dec
adc
loopne
bound
inc
out
push
add
xor
and
cmp
scas
lods
stos
adc
mov
or
iret
mov
and
mov
mov
xorb
and
and
pop
xor
dec
mov
stc
mov
add
push
leave
add
repnz
stos
in
push
cmp
cmp
jo
enter
push
dec
jl
add
dec
sub
bound
mov
lods
in
fs
cwtl
mov
push
ror
fcoms
adc
inc
jo
sahf
pop
adc
icebp
aaa
add
popf
loope
lahf
sbb
mov
push
and
inc
outsl
or
mov
inc
addl
dec
adc
ja
mov
pop
push
xchg
jne
cmp
loope
sbb
adc
hlt
pop
sub
js
out
enter
mov
adc
xchg
les
div
rolb
test
cmp
popa
sbb
pop
lea
in
lcall
add
pushf
add
das
clc
add
adc
cmp
add
out
aas
xor
inc
and
sub
inc
fcoms
lret
cmc
ret
dec
dec
idivl
push
add
pop
dec
dec
jne
xchg
sbb
or
das
filds
shlb
testl
or
outsl
rorb
push
mov
xor
adc
test
xchg
leave
mov
or
sbb
adc
mov
out
hlt
cmpb
push
das
in
fnstenv
lahf
mov
pop
inc
add
add
add
test
xor
dec
sti
add
mov
inc
jp
aad
lea
outsl
xchg
xor
xor
fucomp
sub
xor
je
push
mov
fnstcw
arpl
mov
sbb
mov
popa
push
in
mov
xor
add
or
es
pop
push
lds
sbb
mov
add
add
jnp
or
mov
mov
mov
add
or
addb
add
jns
test
roll
das
mov
divl
xor
inc
or
cmp
out
mov
rclb
or
mov
ret
das
aam
xchg
lock
repnz
mov
push
add
or
push
xchg
fcompl
mov
push
fchs
or
mov
pop
lock
xchg
bound
or
inc
push
mov
pusha
mov
cmp
dec
cmp
dec
scas
call
setbe
pop
sub
add
les
sbb
rcr
fisubs
push
das
gs
adc
cmpsl
loopne
add
push
dec
negb
inc
add
fisttpl
xchg
xlat
lock
stos
in
dec
add
xor
xor
roll
add
hlt
mov
push
inc
pop
xor
daa
jns
adc
cs
adc
fsubrp
imul
adc
das
das
push
or
mov
pop
adc
pusha
mov
dec
addr16
add
movsl
pcmpgtw
lsl
push
sub
push
pop
mov
push
movsb
add
popf
adc
and
stos
sbb
dec
inc
andb
mov
aam
jo
dec
and
and
out
aad
mov
adc
jbe
adc
xor
cmp
ds
add
outsl
adc
sbb
push
aaa
mov
or
push
push
add
popf
aam
ret
roll
add
lods
and
cmp
imul
pop
aas
adc
or
notl
mov
cmp
push
test
adc
cmpsl
xor
add
subb
mov
cli
lret
adc
mov
lret
jo
aaa
xor
add
mov
shlb
mov
or
inc
fildl
aaa
pop
adc
cwtl
bswap
leave
enter
adc
add
cltd
mov
push
andb
push
pop
pop
xchg
xor
add
sbb
sub
cmp
cmp
fists
xor
jo
mov
mov
dec
dec
lods
cli
jecxz
cmp
gs
fs
jnp
gs
mov
xor
push
cld
or
sbb
arpl
xchg
mov
in
std
inc
pop
mov
pop
dec
mov
cmp
std
cmpl
and
xor
mov
inc
pop
sbb
inc
jns
push
call
mov
pop
push
and
pop
faddl
sub
pusha
mov
adc
pop
test
add
call
push
jno
mov
cmp
incl
adcl
pop
xchg
add
sub
aam
fldt
sbb
lods
mov
sbb
scas
lds
jg
inc
or
subl
xchg
and
insl
into
or
ljmp
xor
lods
mov
xchg
popa
divl
push
pusha
push
lods
cmc
rclb
xor
jmp
subl
insl
rcll
repnz
xchg
rorl
or
sbb
das
xchg
rcr
in
and
pop
cwtl
das
movsb
sbb
xrelease
mov
mov
push
add
rclb
inc
mov
stc
outsb
dec
inc
push
jne
pushf
sbb
shrb
push
add
sbb
pop
insb
in
inc
xchg
fisubrs
das
xor
outsl
pop
ja
jns
push
sbbl
mov
dec
pop
pop
movsb
xlat
cli
xor
sbb
in
push
int3
mov
inc
mov
sub
sub
loopne
call
add
das
aaa
ds
ds
or
or
aaa
or
mov
aad
or
push
adc
fdivl
cmc
pusha
sbb
ja
xor
push
xchg
pop
add
push
pop
jne
ret
mov
enter
inc
mov
sbbb
adc
insl
and
mov
mov
push
cmp
lcall
pop
lock
in
and
test
mov
dec
inc
shlb
and
dec
insb
and
add
or
jg
pop
cmp
icebp
and
push
adc
je
arpl
js
push
popf
cwtl
and
es
das
scas
and
or
pop
and
inc
push
add
aas
loopne
mull
xor
cmc
pop
and
add
xor
mov
sub
and
adc
and
add
loopne
sbb
test
dec
insl
fiadds
inc
jne
rcrl
lea
cmp
adc
adc
and
ja
scas
mov
adc
rorb
sahf
cmp
pop
fsubrs
in
jg
in
test
and
subb
mov
add
and
pop
mov
inc
or
out
sub
cmpl
xor
sub
jg
pop
inc
adc
in
sbb
sub
out
shlb
xchg
xchg
adc
test
pop
inc
jle
movsb
mov
and
loop
xor
dec
add
sub
pop
test
lods
and
pop
pop
int
loope
push
jo
add
mov
js
test
or
dec
push
iret
jmp
cmp
sbb
test
mov
adc
enter
shll
adc
jns
xchg
and
ja
pop
dec
jnp
inc
add
adc
mov
mov
pop
sub
mov
sahf
nop
pop
out
mulb
subl
push
or
mov
mov
addr16
jmp
push
sub
and
sbb
sub
jecxz
adc
sub
xchg
push
enter
add
in
xchg
aad
dec
cltd
ficoms
rorl
adc
gs
je
ljmp
mov
inc
jl
js
aaa
jmp
xor
es
lds
repnz
test
add
cmp
dec
push
mov
dec
shlb
cmp
add
je
and
add
sbb
jns
xchg
shlb
inc
pop
mov
out
sub
fwait
mov
js
hlt
inc
xchg
push
in
dec
loopne
sub
sbb
testb
push
loop
or
cwtl
adc
xor
mov
push
lock
xor
arpl
adc
fsubrl
scas
sub
cs
jl
fcoms
das
push
pop
das
cmp
pop
pop
xchg
lds
clc
cmp
sahf
pushf
pushf
mov
rcrl
xor
add
push
mov
jae
xor
inc
test
aas
test
xchg
xor
dec
jne
xor
jno
rcl
xchg
inc
push
or
jne
or
dec
loopne
push
push
scas
je
or
roll
dec
jne
add
nop
sub
sbb
jne
outsl
lods
dec
pusha
jne
and
sub
fsubl
and
push
cmp
ja
and
test
push
add
fimull
mov
adc
push
add
inc
sbb
jne
mov
xchg
xchg
shrb
add
adc
nop
jne
or
into
mov
daa
shlb
inc
add
mov
add
or
add
pop
cmp
shr
cmp
xchg
inc
xchg
add
xchg
or
add
xor
ljmp
add
rclb
xchg
inc
cmp
cmp
xor
fstpl
xchg
es
das
cmovs
loope
cmp
adc
push
push
xchg
xchg
imul
jb
xorl
pusha
adc
push
pusha
out
push
add
sub
cltd
test
cltd
xchg
stos
movsb
push
adc
test
push
or
jns
rclb
fadds
stos
aas
dec
ja
dec
cmpsl
testb
mov
pop
sbb
or
mov
sbb
adc
ss
lods
or
pop
clc
in
push
mov
rolb
sub
cmp
xor
and
divl
insb
loopne
sbb
cmpsb
xor
clc
inc
push
push
and
imul
adc
push
or
pop
cmp
das
imul
aaa
and
and
aaa
adc
xor
and
dec
movsb
cmp
inc
repnz
int3
push
leave
leave
xchg
inc
rcr
popa
mov
adc
xor
mov
popa
repnz
cmpsl
adc
push
xchg
and
sbb
cs
and
ficoms
xchg
add
add
les
adc
leave
ss
test
sbb
lea
iret
push
pushf
cmp
add
pop
and
leave
cmp
nop
iret
push
push
int3
addr16
js
test
nop
rolb
imul
jns
shll
and
inc
leave
add
cmp
sub
xchg
and
dec
jge
mov
push
popa
roll
sbb
and
gs
inc
mov
cmp
or
push
mov
into
mov
or
adc
mov
or
daa
pusha
add
bound
xchg
das
adc
or
cmpsb
aas
loopne
mov
cmpl
cmc
or
in
je
sub
or
shrl
les
addb
and
mov
push
and
mov
xchg
xchg
mov
test
fstpt
loopne
or
mov
inc
loopne
sbb
inc
xchg
inc
ret
xchg
sbbb
test
pop
ja
inc
aad
addps
insb
out
xchg
mov
loopne
repz
or
outsb
aas
ds
mov
mov
dec
mov
lea
jle
adc
dec
aaa
test
stos
xchg
inc
add
cmpsl
mov
insb
rol
aas
mov
test
shll
aaa
and
test
pop
jo
incl
sbbl
mov
bound
lahf
inc
inc
lret
mov
enter
mov
ds
sbb
sub
popa
sub
dec
sbb
js
mov
aas
sub
adc
mov
pop
dec
inc
and
add
aad
into
inc
ljmp
push
mov
mov
sub
movsl
push
push
xchg
loopne
jae
stos
inc
jle
ss
cs
dec
inc
push
xchg
sub
xchg
and
clc
and
pop
lds
sub
and
inc
lods
inc
dec
and
sub
inc
aas
sub
dec
sbb
mov
push
mov
std
jnp
insb
popl
xchg
mov
mov
shrl
lods
push
or
cmp
jb
inc
sahf
add
xchg
adc
inc
xor
pop
add
dec
cltd
pop
stos
enter
xchg
jl
aaa
insb
cmp
add
aas
aaa
jno
dec
dec
ret
out
xor
sub
jnp
in
lods
jmp
call
and
dec
cltd
jne
pop
jb
mov
loopne
inc
test
and
imul
sarb
cmp
or
aaa
loope
repnz
fsubs
outsl
in
mov
adc
test
inc
mov
adc
jns
je
sub
dec
enter
pop
pop
iret
addb
pop
sbb
adc
push
sbb
inc
xor
fisubrl
out
cmp
pop
and
inc
jo
insl
or
mov
cmp
add
and
inc
or
lea
insb
loopne
push
leave
fadds
rcll
lahf
and
and
add
sub
or
inc
jno
sub
pop
and
roll
enter
sub
pusha
inc
inc
inc
pop
inc
shl
lahf
pop
inc
add
fwait
jo
lea
in
or
cmp
dec
adcb
inc
add
and
loop
mov
inc
mov
and
call
add
dec
lahf
add
add
or
dec
andl
and
dec
cmp
in
add
adc
dec
inc
repnz
dec
in
and
out
enter
inc
dec
pop
inc
dec
and
dec
xchg
dec
cmp
or
dec
cmp
or
xor
enter
cmp
mov
in
dec
mov
orb
lahf
add
sbb
and
dec
fildll
cmpsl
shll
and
inc
js
out
rclb
xor
push
sbb
mov
pop
rolb
dec
test
bound
push
inc
xor
inc
mov
and
arpl
push
sarl
imul
xor
or
mov
mov
popa
mov
pop
and
popf
dec
or
inc
push
mov
das
leave
sub
cltd
les
push
mulb
lea
js
push
aam
and
jne
xor
ret
insb
mov
sub
push
pop
and
inc
lock
xor
lock
push
sbb
jne
add
cmp
and
cs
xchg
shlb
sub
xor
aam
mov
push
rolb
leave
pop
ja
inc
rorb
add
pop
jnp
mov
inc
testl
adc
jns
adc
mov
cs
iret
aam
mov
cmp
fidivrs
cmp
lock
push
add
push
ss
inc
pop
sub
xor
fistps
add
and
dec
mov
push
add
inc
or
mov
lea
xor
mov
xor
and
xor
sbb
mov
aas
loop
push
xor
push
scas
inc
push
repnz
and
push
and
leave
daa
fdivrp
push
cwtl
xor
xor
add
adc
ljmp
fistpl
jge
add
push
das
and
mov
lds
ljmp
lea
cltd
push
nop
call
sti
arpl
pop
test
and
test
xor
hlt
push
mov
and
dec
sarb
mov
add
dec
jb
dec
lea
sub
jae
xchg
jne
dec
inc
loop
add
dec
sub
pop
mov
add
pop
add
dec
mov
fcompp
insb
jbe
mov
or
push
fs
xchg
testb
aas
jl
test
mov
in
xchg
dec
fdivrl
dec
push
scas
cmpsb
xor
dec
cmp
loopne
mov
inc
loopne
hlt
inc
in
cs
movsb
clc
add
fmuls
jns
mov
inc
pop
mov
or
insb
sbb
and
adc
mov
fadds
xchg
inc
mov
add
pop
int3
ret
shrb
fbld
frstor
pushf
jbe
lret
pop
mov
sub
sbb
call
push
test
call
andb
mov
rol
adc
shl
seto
cwtl
pop
fstl
push
ljmp
pop
push
mov
pop
xchg
push
or
sub
and
sbb
and
and
add
and
enter
add
popa
or
lods
popa
dec
dec
out
and
popa
fcoms
cmc
mov
sub
xor
adcb
rclb
or
andb
pop
addr16
rorl
jno
pusha
cmpsb
lea
xchg
nop
nop
mov
adc
mov
mov
inc
fidivs
xchg
mov
sbb
jo
repz
jo
shrb
or
fsts
scas
orb
jl
aas
pop
inc
add
xor
push
xor
xchg
out
mov
adc
or
mov
inc
fistpl
pop
add
xchg
inc
popa
pop
pop
lock
mov
pusha
xchg
andb
pop
aad
or
adc
insb
loopne
lret
stos
xor
or
add
push
scas
sahf
sbb
rcl
push
push
jmp
mov
aaa
add
lods
fmull
cmpsl
xchg
cmp
shll
leave
lock
xchg
cld
lcall
pop
sub
pop
nop
cs
jbe
dec
cltd
das
sbb
in
xchg
cld
clc
fs
dec
repnz
dec
cld
dec
sbb
ss
imul
sbb
nop
cld
sub
insl
add
cmp
and
xchg
add
add
loopne
cmp
lock
push
push
sub
inc
cmp
and
mov
insb
or
cmp
add
scas
testl
pusha
incl
inc
repnz
outsb
xchg
clc
dec
ds
fadds
test
mov
int
or
add
ljmp
add
dec
adc
cmpb
sub
ljmp
aad
ret
push
js
dec
push
clc
pop
stos
dec
mov
add
adc
nop
add
stos
imul
sbb
push
bound
nop
xor
or
xchg
pushf
shrb
sbb
sub
pop
movsb
pushf
mov
enter
lods
mov
adc
leave
test
test
test
mov
and
sbb
subl
cmpsl
test
add
mov
loopne
push
fidivl
int
sbb
cmp
pop
and
sbb
loopne
nop
jns
fisttps
or
js
fsubrl
ret
adc
adc
and
or
andl
and
cmp
addl
imul
cltd
in
loopne
hlt
sub
add
xchg
enter
in
loopne
sbb
xchg
pushf
xor
sbb
fdivr
push
cmc
jbe
ret
and
sbb
xchg
aam
enter
mov
in
iret
into
out
out
test
mov
rcl
sbb
or
and
pop
mov
lea
cmp
lea
add
push
add
mov
add
fiaddl
test
mov
dec
dec
pop
insb
sbb
test
fisttps
and
je
fcom
shlb
shlb
push
jmp
mov
into
xor
or
addr16
xor
mov
xor
or
add
sbbl
push
inc
or
inc
jb
or
mov
inc
adc
and
add
mov
cs
or
mov
or
or
nop
xchg
mov
or
cs
repz
or
pop
cmp
sub
pop
add
icebp
addr16
movsl
xor
push
repz
xchg
adc
and
xor
push
add
mov
adc
inc
inc
cmp
add
test
subb
push
fnsave
jecxz
fs
fbld
pop
or
lcall
cmp
or
inc
pop
cmc
addr16
pushf
jbe
cmovae
inc
loopne
int3
mov
es
in
mov
mov
sub
add
pop
or
or
orb
and
lea
adc
lret
cmpsl
lahf
cld
add
lea
lock
pop
pop
or
rclb
notl
and
pusha
push
imul
lods
adc
push
push
int3
lds
cmp
cmp
lea
adc
andb
cmpb
dec
ret
push
aad
pop
pop
stos
cwtl
adc
lods
loop
sub
and
fcoml
and
sbb
dec
nop
mov
jb
add
adc
dec
adc
adc
xchg
out
int
push
mov
incl
nop
fnsave
dec
pushf
insb
aaa
inc
pushf
sbb
xor
sbb
insl
mov
icebp
mov
sbb
or
popf
leave
push
stos
jne
push
dec
sub
repnz
outsl
and
imul
mov
rorl
pop
adc
insb
test
adc
movsb
push
shlb
aas
mov
and
xor
push
mov
test
aam
jo
sub
popa
pop
add
mov
dec
or
xchg
mov
sub
sbb
dec
and
or
jno
rcl
cltd
xchg
dec
leave
cwtl
mov
sub
sbb
clc
add
xor
adc
xchg
leave
push
insl
popa
xchg
push
adc
sub
rorl
pop
mov
and
dec
cmpsl
adc
push
sub
jmp
sbb
mov
add
test
cmp
add
clc
pop
mov
jp
fwait
push
cmp
repz
adc
sbb
les
and
push
push
add
stos
mov
pop
xchg
inc
js
or
int3
mov
ja
loopne
xchg
and
pop
cmp
push
jmp
push
sbbl
aam
mov
push
mov
xchg
mov
int3
pusha
imul
roll
sti
stos
add
shlb
xor
mov
push
xchg
lods
pop
add
push
orl
adc
mov
in
cmp
inc
jl
xorb
or
add
mov
lcall
dec
jnp
push
pop
test
xlat
add
aad
je
add
lret
xchg
or
push
bound
bound
mov
scas
or
xor
loope
rorb
int3
outsl
xlat
cmp
cmp
jae
lcall
mov
push
in
dec
es
fmull
imul
nop
inc
push
fs
mov
nop
add
lods
lods
mov
stos
inc
or
mov
pop
dec
cmpsb
nop
test
jne
mov
pop
mov
mov
test
mov
in
xchg
add
jb
les
push
cmp
inc
push
in
nop
nop
cmp
mov
test
lea
insb
jl
push
sub
mov
insl
mov
sub
mov
dec
loope
cltd
xchg
pop
addr16
in
imul
add
jbe
push
add
xchg
mov
jne
data16
mov
jo
jnp
pop
icebp
and
jmp
dec
insl
leave
dec
add
or
sub
push
loope
jns
sub
mov
addb
mov
xchg
adcb
sbb
xor
pop
pop
pop
and
xor
push
leave
add
cs
cmc
sub
xchg
fs
xchg
push
dec
dec
mov
dec
lcall
adc
pop
popl
enter
inc
cmp
enter
cmp
push
push
mov
fmull
add
xor
daa
xchg
or
mov
xor
fcmove
xor
cmp
mov
adc
cmp
repnz
mov
xor
insl
jne
lds
cmpl
push
insb
jnp
push
js,pn
int
flds
cmp
jns
in
sub
pop
mov
inc
sub
and
leave
xor
sbb
xchg
pop
pop
xchg
inc
sbb
dec
rcrl
sub
nop
or
nop
adc
leave
nop
pop
enter
adc
mov
xchg
or
fs
xchg
add
xchg
or
daa
jo
inc
cld
incb
add
pop
mov
in
hlt
aas
xchg
rolb
lock
xchg
sahf
loope
fnstenv
sub
adc
and
push
push
dec
cwtl
call
in
roll
test
add
add
fdivr
jnp
enter
fsubl
orb
aam
or
test
rcrb
imul
xor
and
xor
enter
xor
les
push
rclb
adc
xor
inc
jb
mov
inc
mov
mov
or
shlb
sub
push
push
roll
dec
add
test
test
mov
leave
mov
jg
addb
shlb
cs
nop
movsb
sbb
mov
cld
mov
mov
add
and
mov
and
adc
aam
add
jne
dec
sbb
inc
adc
je
or
call
js
cwtl
jne
xchg
and
dec
test
cwtl
xchg
in
inc
xchg
nop
ds
pushf
cmp
xor
incl
addr16
out
and
sub
or
loopne
in
xor
movsl
incl
add
dec
push
cltd
in
lock
sub
subl
flds
rolb
ret
jo
cmpsl
cmp
test
dec
pop
adc
adc
jo
push
pusha
mov
sub
push
xchg
dec
xchg
jno
xorl
inc
mov
cmp
out
cmp
cmp
jb
mov
xor
mov
xchg
inc
jb
and
add
cwtl
adcb
mov
arpl
sti
clc
adc
push
loope
pop
jg
sub
push
test
daa
cmp
add
decl
nop
pop
cmp
and
por
fcoms
xor
repz
shrl
xchg
test
out
inc
leave
sub
lcall
xor
mov
sbb
add
add
test
cmp
mov
push
cmp
pop
jb
test
stc
sbb
xchg
inc
or
scas
adc
jg
ret
popa
cmpsl
or
fwait
pop
fiadds
sbb
xchg
adc
int3
push
jno
push
mov
mov
or
adc
mov
les
and
sarl
add
inc
imul
dec
sub
cs
add
sbb
sub
jne
lea
jl
xor
jp
ret
xor
sbb
leave
pop
nop
or
and
les
push
sbb
test
dec
nop
inc
fisubrs
movsb
mov
repz
les
movsb
or
mov
clc
dec
sbb
rclb
pop
inc
dec
shlb
jae
movzbl
mov
inc
nop
inc
test
andb
mov
mov
popa
test
push
scas
add
push
popf
ja
ret
outsb
or
test
je
pop
xchg
and
es
shlb
dec
insb
push
or
sub
mov
push
pop
enter
pop
push
push
dec
fisttps
jno
mov
int
add
test
mov
push
ret
inc
sbb
cmpb
cmpsb
aaa
mov
loope
cmpsb
in
into
inc
in
js
les
out
aas
dec
daa
inc
sub
movsb
pop
sub
mov
mov
and
adc
call
out
cwtl
les
scas
insl
pop
negl
mov
fisttpll
repz
mov
das
pop
pop
lods
mov
pop
cld
daa
aas
lea
addl
cli
push
cld
sbb
mov
push
jge
and
xchg
outsl
fildl
inc
xchg
add
adc
pop
adc
adc
movsl
add
or
fcompl
nop
das
sub
mov
push
push
hlt
push
fisubs
or
ficomps
fwait
rolb
jg
bound
mov
nop
mov
cs
aaa
lcall
dec
inc
cmpsb
movsb
pusha
call
xchg
xchg
push
jmp
iret
mov
sub
arpl
xchg
or
and
or
xchg
rorb
mov
faddp
inc
mov
fadd
mov
stos
sub
dec
dec
rcl
test
sbb
movsb
stc
fwait
xchg
mov
add
xchg
popf
bound
inc
les
push
push
jns
xchg
cmp
dec
dec
add
or
dec
pop
xor
mov
mov
mov
orl
push
lods
add
push
mov
xlat
add
fildl
inc
sti
dec
pop
and
mov
add
xorb
mov
cmc
push
add
aad
add
push
add
aam
mov
dec
dec
daa
pop
loope
aad
fstpt
xor
pop
les
addb
movsl
xchg
push
loop
nop
les
push
jmp
imull
mov
cmp
xchg
jg
outsb
clc
sbb
cmp
cmp
jne
mov
cmpsb
mov
lock
adc
add
cwtl
xor
fs
mov
ret
shlb
das
enter
add
inc
and
push
add
stos
lods
and
push
jl,pt
adc
lea
mov
push
or
ljmp
and
lock
push
adc
ret
sub
cmp
leave
popa
dec
mov
pop
push
loope
xchg
not
test
xchg
int
and
into
mov
sub
outsb
sbb
xchg
addr16
mov
sbbb
push
mov
fcomip
out
cmp
inc
pop
sbb
and
pop
xchg
pusha
xchg
movl
mov
daa
pop
mov
in
test
int3
pop
mov
enter
sub
or
xchg
xchg
xchg
push
or
pop
sub
mov
and
jmp
dec
inc
test
test
inc
loope
jmp
iret
sarl
flds
xchg
adc
jmp
invd
test
out
xchg
out
mov
mov
push
in
dec
sub
jbe
add
xchg
pushl
mov
mov
jecxz
pop
and
fistl
sbb
xchg
cld
testb
ss
subb
int3
and
sbbb
adc
stos
jnp
add
movsl
sub
and
sbb
jns
sbbb
repnz
add
cltd
xchg
adc
add
das
adc
cmpsb
lods
out
pop
push
mov
push
test
adc
mov
xor
add
andps
incl
bswap
test
adc
rclb
cli
ljmp
and
aas
cs
add
or
push
add
shll
pop
mov
lock
sbb
insl
push
ja
add
xchg
popf
cmpsl
mov
pop
mov
les
scas
fnstcw
mov
pop
or
push
add
push
add
pop
inc
xchg
mov
mov
xor
pop
imul
sub
push
aaa
lcall
xchg
mov
lret
sbb
clc
xchg
mov
sbb
mov
push
jns
cmp
push
fwait
jb
jg
fucomi
hlt
push
mov
mov
pop
nop
stos
push
and
inc
sbb
sub
jmp
mov
leave
dec
push
cmpb
jns
cmp
gs
inc
cmc
jns
ja
mov
dec
jb
cmp
xchg
cmp
popf
mov
stos
outsb
in
push
add
out
pop
test
sub
imul
sbb
add
inc
cmp
jbe
mov
dec
push
cmp
cld
pushf
mov
bnd
or
inc
pop
daa
cmp
js
inc
dec
jb
jb
lahf
mov
shll
dec
or
jno
sbb
pusha
aam
loope
test
inc
loop
in
test
mov
mov
sar
pushf
mov
daa
inc
mov
fiadds
and
xchg
test
or
jp
pop
je
lock
pop
pusha
push
pop
xchg
mov
das
inc
in
das
outsb
stc
mov
pushf
push
and
test
xor
popf
pop
and
push
xor
jo
push
mov
or
mov
inc
jl
mov
adc
test
mov
adc
add
xchg
nop
int
rorb
out
cli
icebp
daa
pushf
and
sbb
daa
in
or
xchg
hlt
xchg
sbb
dec
daa
and
xchg
cmpsl
and
xorb
xchg
jl
xchg
inc
push
sub
call
inc
enter
sbb
daa
cld
pop
dec
adc
aaa
cmpsl
popa
daa
inc
cwtl
or
xor
and
insb
daa
inc
jb
and
jmp
lock
mov
stc
xchg
shr
and
or
adc
push
xchg
mov
ficoml
xchg
pop
out
pop
adc
mov
repnz
popa
dec
les
adc
test
xor
divb
loopne
xchg
in
bound
sbb
add
loopne
cmp
push
test
mov
ret
sub
adc
test
mov
mov
mov
inc
pop
mov
stos
cmp
mov
and
add
mov
adc
mov
mov
add
inc
mov
sarl
jo
les
sub
lahf
push
rorb
mov
cmp
lods
popa
pop
hlt
ret
mov
fs
or
dec
daa
xor
andl
in
lods
sub
das
les
stos
mov
mov
xor
insb
and
pop
push
push
mov
daa
sub
dec
push
lea
mov
xchg
ja
mov
repz
push
adc
psubusb
or
inc
daa
jns
add
sahf
pop
xor
sahf
test
cmp
add
sahf
test
mov
and
in
xchg
test
shr
rorl
lods
adc
lea
push
inc
popa
dec
arpl
and
sbb
mov
hlt
xchg
test
fsubrl
mov
roll
sbb
mov
mov
andb
mov
adc
and
daa
rcl
orb
cmp
xchg
cltd
xlat
loopne
in
scas
cmp
shll
dec
xchg
je
cmp
das
adc
daa
les
aaa
mov
das
inc
loop
cmp
mov
lods
in
mov
and
leave
sub
mov
es
shlb
mov
push
popa
pop
shlb
sub
inc
mov
sbb
lcall
push
loope
or
movsl
daa
dec
push
and
xchg
fs
lret
mov
mov
push
das
xchg
sub
xchg
sub
sub
cmp
and
sbb
das
sub
adc
jo
xchg
dec
cltd
push
cmp
daa
and
inc
ret
jo
adc
add
adc
sub
xlat
add
inc
cmp
mov
or
mov
lods
mov
ja
shlb
adc
dec
pop
inc
ja
sbb
push
jns
ja
mov
push
ja
in
sub
adc
push
test
xlat
ja
or
mov
sahf
jb
pushf
mov
addb
sub
test
movsb
ja
adc
mov
push
mov
xor
in
sbb
mov
sbbl
add
repnz
xlat
scas
xor
fisubs
sub
fs
push
loopne
add
cmp
and
fidivl
nop
outsb
mov
pop
mov
mov
jae
popa
mov
in
adc
sub
xchg
jecxz
dec
cmp
int
pusha
jbe
sub
mov
jne
adc
adc
div
push
outsb
cmp
and
adc
pushf
mov
icebp
pop
cmpsb
sbb
cmc
mov
lea
lret
adc
adc
cmp
cmpsl
call
clc
rorb
aam
out
jns
fmull
adcl
mov
push
daa
scas
jo
push
imul
stos
push
aad
aam
sub
cwtl
stos
dec
sbb
mov
fsts
in
scas
mov
mov
fnstcw
xchg
leave
das
push
nop
rorb
jmp
inc
push
stos
xor
sarb
jns
xchg
shlb
pop
and
fs
fdivl
icebp
repnz
mov
mov
add
roll
imul
sub
cwtl
mov
push
or
or
mov
insb
or
xor
cli
or
adc
jo
inc
iret
rcrb
xor
dec
push
add
sbb
sahf
cmp
lock
mov
pushf
mov
jns
jb
aad
je
lds
xlat
push
lds
inc
sub
xchg
pushf
or
pop
lds
arpl
or
add
fwait
js
inc
push
mov
and
mov
and
ja
lret
xorb
lock
decl
push
out
gs
adc
decl
movsb
addr16
mov
adcl
inc
cmp
adc
mov
and
inc
ja
and
xchg
mov
mov
hlt
push
cmovle
pop
fldl
js
mov
dec
push
push
inc
inc
or
shlb
mov
push
subl
sub
dec
test
dec
fstpt
jg
push
jno
es
dec
push
inc
xchg
push
out
insb
lret
mov
lret
arpl
cmp
movsl
adc
sarl
push
mov
pop
jl
mov
inc
push
inc
dec
or
adc
cwtl
add
cmp
jp
lds
shl
xchg
dec
push
rclb
ds
mov
sub
push
incb
pop
and
jb
cltd
inc
add
dec
adc
jp
aas
inc
lret
xlat
testl
iret
xchg
push
bswap
popa
and
jbe
add
add
add
jnp
imul
and
dec
xchg
add
sbb
xlat
adc
in
pop
std
xor
push
xor
movsb
pop
movl
mov
call
mov
xor
mov
mov
jo
ljmp
push
movsb
loopne
jmp
adc
mov
enter
test
add
in
lret
popl
inc
push
ret
dec
sarb
das
add
push
add
insl
pop
push
lods
mov
mov
in
mov
xor
inc
cmp
nop
xchg
fcom
xchg
jl
leave
xchg
addb
and
cltd
ret
insl
xor
fwait
lods
mov
ret
xchg
xchg
and
sub
rcrl
int3
add
cmpb
lock
mov
scas
nop
push
leave
int
and
loope
pop
and
jo
xor
xlat
mov
sub
pop
jo
imul
inc
dec
sbb
icebp
xchg
adc
js
int3
out
xor
xchg
aas
push
cwtl
leave
ljmp
mov
push
mov
pop
popf
ret
js
cwtl
dec
test
xchg
xchg
xor
and
nop
addr16
push
int
push
and
mov
lods
fwait
pop
xor
mov
enter
lret
push
loope
daa
xchg
push
in
shl
lcall
jo
lret
add
xchg
mov
or
mov
in
into
stos
into
push
enter
pop
iret
aaa
iret
push
enter
iret
pop
leave
sub
iret
jmp
push
pusha
dec
cs
and
imul
jns
fistpl
rolb
adc
pop
outsl
pop
loopne
cmp
cmp
lds
fs
filds
mov
sbb
xchg
pusha
and
inc
inc
xchg
sbb
mov
jnp
mov
and
push
lea
data16
sub
mov
ja
lcall
in
mov
loopne
enter
test
mov
imul
mov
xchg
xor
lea
adc
dec
xchg
cmp
fiadds
mov
sub
push
adc
jge
inc
push
andl
and
ret
sub
mov
dec
je
add
xchg
in
mov
lea
aaa
mov
sub
popf
inc
sbb
popa
push
daa
roll
rep
ss
lcall
mov
adc
sbb
pop
aam
mov
xorb
xor
sbb
mov
jno
xchg
sahf
xlat
inc
or
push
xor
dec
mov
loopne
data16
sbb
in
popa
or
mov
mov
rolb
push
xorb
mov
push
fnstcw
mov
lods
lods
les
lock
les
sahf
cs
adc
mov
and
jns
add
subb
aaa
test
shrl
xchg
dec
push
movsb
and
push
jo
jo
mov
scas
fnstenv
lret
in
jg
js
fisubrs
lods
mov
cltd
daa
dec
mov
push
mov
lret
add
push
test
sbb
cmpb
and
or
jecxz
cld
pop
adc
je
mov
add
cwtl
mov
lret
test
pop
xchg
in
xchg
arpl
cmp
pop
adc
movsl
cli
int3
jl
jl
jb
insl
aam
sbb
sub
mov
sbb
fcoms
xor
loopne
adc
and
push
je
lcall
aad
and
ss
mov
mov
fwait
pop
xlat
push
aad
sbb
pop
je
lock
jb
and
or
jo
inc
lea
sbb
insb
xor
adc
movsb
bound
and
inc
daa
xchg
dec
aam
shlb
sbb
mov
sbb
mov
push
stos
dec
mov
shll
adc
or
fs
and
sub
shlb
icebp
ja
xchg
jmp
and
int3
pop
pop
fcoml
adc
inc
push
push
dec
adcb
leave
int3
dec
inc
mov
add
dec
dec
push
nop
sub
sbb
nop
xchg
inc
inc
inc
cmp
xchg
dec
jb
cmp
imulb
xchg
mov
fstps
jg
inc
or
mov
add
orb
cmp
and
ja
dec
clc
clc
mov
int
xchg
and
jo
sbb
and
bound
mov
add
lods
pop
scas
dec
xchg
add
or
adc
or
xor
push
in
xchg
lods
popf
xchg
je
fldcw
jno
jb
shrl
pop
xchg
out
aam
adc
stc
pop
sti
jmp
jp
push
filds
push
int
jns
ljmp
push
idivl
push
out
ds
mov
aaa
push
loopne
nop
lods
push
in
push
movsb
xor
cld
mov
xchg
mov
subb
mov
ret
in
dec
xchg
and
iret
das
outsw
dec
gs
push
addr16
sti
xchg
out
imul
data16
shlb
sub
mov
nop
aam
sub
sub
xor
dec
test
dec
lods
mov
xchg
movsb
movsb
mov
nop
loop
sub
cmp
or
push
add
mov
mov
add
loopne
xor
push
pushf
fs
decl
pushf
or
test
lock
call
xchg
xlat
movsl
pop
bound
lcall
xchg
and
adc
clc
les
test
mov
mov
sbb
dec
or
sub
jmp
or
mov
mov
fcomps
adc
enter
mov
add
fisttpll
cmpsl
fnstcw
adc
or
xchg
mov
shlb
sbb
xchg
es
xchg
hlt
or
xor
lea
push
and
xorl
sar
sub
cmc
adc
inc
addr16
adc
sti
push
ja
and
push
mov
add
out
xchg
test
adc
push
pop
mov
inc
mov
and
in
dec
pop
lret
test
inc
xchg
xchg
or
inc
inc
test
jb
or
inc
cmp
dec
cs
cmp
inc
cs
cmp
adc
cmp
sub
in
cmpsb
push
pop
sub
insb
adc
mov
addl
in
data16
sub
sarb
stos
xor
bound
or
lea
loope
mov
lds
lahf
out
xchg
dec
popa
push
lahf
jg
pop
xchg
push
packssdw
mov
test
stos
ret
nop
fildll
push
or
add
inc
push
inc
or
scas
dec
and
aaa
mov
lahf
add
xchg
or
mov
add
xchg
add
or
xchg
outsb
int3
popa
inc
shll
inc
mov
or
mov
in
leave
sbb
lea
iret
insl
loopne
mov
mov
inc
and
stos
sbb
ds
push
cmp
mov
hlt
pop
arpl
or
adc
pop
sbb
test
fistpl
hlt
add
bound
sbb
mov
aad
test
test
sbb
adc
add
outsl
mov
movsb
movsl
not
mov
xchg
cmp
adc
jmp
loop
and
adc
sarb
ret
rolb
fsubrs
addb
test
xchg
and
sub
mov
int
imul
push
shrl
adc
sbb
pop
lods
pop
jbe
jns
pop
push
out
inc
add
cmp
scas
or
pop
add
mov
xor
std
cwtl
movb
dec
push
fmuls
sbb
xchg
inc
push
sbb
and
mov
mov
xor
adc
inc
xor
out
ret
inc
loope
out
or
nop
andl
mov
sbb
sahf
push
cmp
fmuls
mov
and
dec
cs
clc
mov
fdiv
sbb
fs
out
cld
hlt
cld
hlt
rcr
dec
cs
mov
sub
sub
aam
sub
push
mov
iret
inc
mov
loopne
dec
repz
jmp
and
xchg
stos
dec
repz
call
loope
jmp
or
and
pop
mov
test
scas
add
jb
cmp
sub
sub
fisubl
rcrl
push
jno
lods
fidivl
push
sub
mov
movsb
or
imul
cmp
bound
jmp
enter
pop
jmp
cmp
mov
pop
popa
scas
pop
adc
xor
xchg
cmp
or
pop
les
adc
jb
inc
xchg
aas
in
stos
popa
xchg
lock
pusha
sub
push
icebp
dec
jp
adc
imul
sub
push
sbb
out
adc
or
sbb
imul
mulb
adc
mov
sbb
adc
jecxz
inc
inc
cwtl
rcrl
movl
outsb
xchg
loopne
pusha
xchg
test
or
mov
push
push
jmp
inc
and
adc
xlat
or
mov
push
dec
sbb
testw
roll
and
or
or
add
cmp
iret
sbb
dec
or
sti
sbb
movsb
movsl
adcl
out
movsb
xchg
adc
inc
mov
dec
or
cmp
loopne
cmp
pop
je
ja
ret
inc
clc
push
dec
shll
and
adcb
add
inc
dec
add
xor
pop
stos
addr16
and
xor
xor
movsb
sbb
aas
das
adc
popf
rorb
ss
pop
inc
jmp
sbb
and
or
loopne
sbb
dec
cltd
fcmovbe
inc
mov
inc
xchg
xlat
and
inc
pusha
or
movsl
and
lret
cmp
mov
mov
out
out
pop
and
lahf
in
adc
or
add
and
adc
lock
xchg
xchg
ss
sbbb
inc
lock
lcall
add
icebp
cmp
cs
cmpsl
xchg
or
scas
and
add
out
sbb
in
into
or
pushl
sbb
repnz
xor
add
mov
sbb
pop
nop
int
ss
repz
inc
leave
add
cltd
sub
mov
push
iret
test
push
xchg
popf
pusha
repz
adc
add
push
and
dec
les
pop
pop
or
push
ss
xchg
sbb
in
fxtract
roll
je
push
out
loopne
rolb
and
addb
sar
fmul
js
mov
sbb
ds
cs
fidivrl
xlat
enter
sub
call
mov
mov
test
cmc
add
push
mov
add
pop
add
out
sub
or
aad
negl
rcrb
push
es
pop
mov
in
jo
call
outsb
jmp
enter
and
add
enter
rorl
rolb
mov
dec
jl
repnz
sub
fisttps
fistps
fists
push
fists
enter
mov
pop
cmp
cmp
out
inc
sti
rolb
outsb
jmp
test
push
sbb
add
push
mov
setl
or
das
cld
push
adc
sub
pop
fisubl
xchg
dec
add
dec
push
sbbb
fucomip
inc
shrb
lock
daa
pop
adc
fistpll
mov
jmp
sub
pushf
outsb
adc
filds
push
pop
fbstp
and
out
jb
mov
dec
adc
xchg
filds
add
dec
mov
dec
dec
mov
fucomip
fcoml
mov
inc
mov
nop
xchg
bound
sbb
add
sub
add
mov
or
call
fs
jo
fists
or
add
add
and
pushf
push
add
xchg
jle
icebp
mov
in
shl
dec
pop
icebp
int3
aam
test
adc
xchg
and
lea
push
add
cmp
push
fadds
sub
and
jmp
outsb
call
sub
pop
add
push
add
dec
pop
scas
mov
add
mov
mov
repnz
or
repz
inc
leave
hlt
push
pop
sbb
repnz
pop
sbb
push
bound
inc
jbe
int3
inc
push
leave
and
add
cmc
roll
add
push
pusha
in
daa
dec
cmp
stc
test
sbb
mov
nop
daa
and
bound
add
cmp
push
outsl
leave
in
das
cwtl
push
mov
inc
popa
dec
add
adc
adc
lahf
add
xor
cmp
pop
inc
pop
xchg
divl
in
push
inc
push
or
ljmp
push
add
pusha
sub
jo
pop
or
sbb
rolb
inc
nop
cmpl
cld
clc
addb
inc
lea
lods
lcall
sbb
and
in
sti
int3
add
adc
inc
and
or
or
inc
divl
add
dec
push
cmovl
dec
or
test
nop
mov
test
cmp
stos
add
daa
push
dec
xchg
stc
test
sbb
adc
in
cmp
fistl
push
push
push
sbb
inc
add
fs
pop
daa
jb
dec
es
lods
in
mov
mov
xchg
aaa
lret
cli
xor
xchg
pushf
inc
movsl
inc
cmc
xor
pop
xor
addb
bound
inc
sub
sbb
stos
inc
les
adc
inc
inc
push
inc
mov
inc
aam
and
lods
dec
leave
imul
add
inc
xor
pmulhuw
adc
lock
inc
mov
cmc
push
mov
ljmp
add
out
add
mov
xor
sub
loopne
adc
ljmp
pop
sub
lods
inc
mov
inc
jne
mov
or
xchg
mov
mov
adc
jo
mov
call
or
clc
insl
cmp
adc
test
xor
adc
cmpl
push
test
adc
xchg
sbb
stos
pusha
and
sub
or
inc
mov
addb
inc
addb
cmpsb
mov
call
pop
mov
in
sub
inc
aam
cmpb
push
xchg
enter
scas
sti
int3
xchg
add
push
rclb
mull
or
push
sahf
bound
adc
and
repnz
and
pushf
sub
mov
lahf
xor
pop
mov
nop
jl
and
insb
sub
bound
push
add
inc
adc
push
sbb
jbe
mull
or
das
push
fcoms
pushf
adcb
pop
daa
dec
sbb
sbb
daa
xor
push
jb
sbb
sub
sbb
mov
and
ljmp
xor
in
loop
sbb
and
adc
cmp
out
or
jno
ja
inc
add
fs
push
or
popa
aas
mov
adc
dec
hlt
sbb
mov
xchg
xor
add
addb
adc
in
push
in
hlt
adc
enter
jb
and
and
push
push
xchg
pop
add
and
and
sbb
pop
hlt
sub
nop
push
arpl
pop
andl
mov
test
lret
add
mov
pop
scas
adc
adc
mov
enter
inc
or
pop
adc
mov
dec
sbb
repnz
adcl
pusha
orb
pop
xor
les
and
push
jb
pop
sub
pop
je
or
rolb
mov
xor
add
adc
mov
outsl
xor
push
jl
adc
lahf
dec
and
xchg
daa
movsb
inc
rorl
adc
jg
xor
add
jns
sbb
and
rolb
insb
push
insb
incl
add
jmp
push
scas
sbb
and
aaa
rclb
in
sub
push
fs
add
cmp
add
popa
and
add
enter
das
aaa
sbb
sbb
adc
sub
jbe
icebp
push
and
cwtl
daa
sbb
incl
or
pop
add
adc
xor
inc
adc
jns
bound
call
xchg
adc
jno
jno
sub
int3
inc
int3
lahf
repz
mov
push
cs
daa
jno
clc
add
xchg
and
nop
xchg
or
lcall
adc
xchg
sub
daa
bound
add
sbb
sub
popa
xchg
mov
aad
adc
add
aad
leave
and
adc
daa
push
adc
adc
bound
rorl
dec
rorb
push
fistpll
push
fbld
or
lahf
adc
xchg
mov
inc
sub
int3
lahf
aam
jecxz
xor
xchg
bound
add
xor
jmp
pop
inc
and
leave
sbbl
mov
pop
pop
pop
fs
xchg
or
add
and
sub
and
and
add
pop
or
aaa
or
push
jno
xor
inc
xor
outsl
dec
sub
sub
xchg
add
sub
in
xor
cmp
in
sbb
and
add
nop
xor
cmpsl
push
and
dec
xchg
mov
inc
and
xor
push
arpl
das
dec
and
pop
adc
xchg
and
pop
add
mov
pop
inc
and
pusha
outsl
and
imul
sbb
jg
adc
add
inc
xor
xchg
pusha
inc
add
orb
adc
ja
sbb
rcr
xchg
rcll
les
sub
sub
and
jbe
add
fsubrl
repnz
sbb
mov
add
iret
dec
lods
push
cmp
ss
in
add
addr16
sub
in
es
add
repz
mov
adc
movsb
or
int
loop
and
bound
jno
jg
adc
cmp
or
std
nop
push
popa
enter
jnp
dec
mov
cli
clc
cld
daa
pushf
leave
jecxz
mov
cmp
push
and
add
jno
or
or
addr16
pushf
leave
test
jl
add
pop
in
push
mov
sub
or
lahf
add
nop
jo
addr16
jl
add
push
cmp
pushf
and
ret
and
jg
adc
pop
cmp
addb
and
jg
mov
jp
push
and
jb
les
mov
aaa
test
fs
xor
loop
jg
js
sbb
jg
cmp
sbb
pop
push
fld
and
sub
inc
and
sub
gs
push
xchg
jmp
sub
pusha
push
lds
sub
aam
dec
dec
xchg
sub
and
movsb
addr16
addl
loopne
lds
and
dec
pop
movsb
call
leave
adc
push
call
sbb
cmpl
scas
aas
movsl
and
jb
inc
daa
inc
and
xor
push
ror
das
nop
sub
shll
adc
les
sbb
and
mov
push
mov
xchg
or
adc
add
add
push
les
sbb
movl
xor
sub
pop
inc
scas
fmul
inc
jl
fimuls
repz
mov
repnz
adc
ss
adc
add
clc
cs
sbb
in
inc
lods
pop
add
adc
inc
push
xor
bts
mov
addb
mov
daa
sub
fcompl
movsb
daa
cs
add
xchg
pop
and
xchg
adc
jo
jno
sbb
inc
sub
adc
or
push
enter
and
cmp
and
cmp
mov
xchg
adc
push
int
inc
add
jns
clc
push
sarl
nop
inc
jb
mov
mov
mov
add
push
fs
bswap
dec
shlb
jl
and
rorl
and
jb
dec
daa
inc
and
xor
push
shr
das
enter
inc
test
push
inc
add
mov
test
fimull
cmp
test
push
xor
inc
int3
adc
pop
inc
js
cmp
xchg
and
dec
mov
jecxz
nop
and
dec
repz
inc
ds
mov
stc
dec
cmp
add
test
sbb
aam
add
dec
push
js
and
inc
push
push
ret
xor
push
mov
jecxz
xor
aaa
cmp
dec
adc
ret
push
mov
pop
adc
inc
xor
inc
cs
mov
enter
pop
push
nop
pushf
mov
mov
or
jb
sub
repnz
inc
call
mov
inc
push
aam
adc
inc
jl
push
inc
pusha
and
dec
pop
inc
rolb
dec
push
inc
sbb
xchg
pushf
in
loopne
in
dec
dec
test
rorb
movhps
pop
adc
inc
lods
pop
test
or
lock
outsb
add
and
testl
sbb
dec
push
push
push
pop
je
in
sub
pushf
inc
xchg
nop
add
push
push
and
add
nop
push
push
xchg
sbb
test
test
popf
and
or
or
adc
cmove
pop
and
inc
es
push
and
mov
pusha
adc
push
adc
push
inc
inc
cmovb
inc
inc
je
lgs
stc
orb
pop
dec
pop
les
nop
addr16
shll
push
add
imul
inc
nopl
or
pop
pop
push
out
xchg
sbb
or
pop
and
and
or
setb
xorl
in
jb
adc
repnz
xchg
and
add
pop
sbb
sbb
movaps
pop
mov
cs
wbinvd
bswap
pop
les
movsb
pop
push
dec
inc
sub
test
daa
add
js
imul
xchg
pop
dec
sub
cmpb
js
jb
pop
leave
or
cmove
enter
inc
sbb
in
mov
incl
rol
pop
ljmp
lret
add
ficomps
and
push
jne
syscall
fnstenv
pop
in
in
jge
push
inc
jb
or
dec
cmp
insb
jb
or
cmp
dec
popa
or
lods
xorb
psraw
pop
xlat
andnps
add
jmp
movsb
loope
sub
in
push
adc
loopne
test
mov
pop
add
imul
pushf
in
and
pop
mov
ss
repnz
push
aam
mov
nop
imul
lret
jg
push
push
aaa
fs
inc
and
fs
adc
lret
leave
addl
dec
popf
pusha
das
xchg
mov
gs
push
xor
push
or
cmp
mov
pop
call
push
add
or
sub
scas
and
fsubl
setb
push
add
addr16
enter
nop
push
push
repz
repz
pop
push
pop
call
nop
xchg
push
cmp
adc
mov
aam
or
push
pop
lea
mov
jnp
mov
daa
push
pop
adc
sub
or
daa
cs
jg
add
mov
push
inc
push
and
lods
jb
mov
push
test
mov
xchg
rol
les
sub
jnp
pop
cmp
out
pop
loopne
and
les
addl
jb
andb
pop
inc
and
in
pop
push
fs
inc
and
sbb
add
or
pop
adc
daa
cmp
push
outsl
sbb
jb
sbb
add
lea
xor
push
fsubrs
enter
mov
clc
and
add
fildll
jo
inc
or
daa
dec
adc
jo
daa
test
dec
xchg
sub
enter
jno
and
fadd
pop
dec
xchg
pop
and
bound
mov
shrb
xor
sbb
addb
enter
sbb
les
mov
lret
jae
push
enter
jge
imulb
sbb
pop
je
xchg
add
adc
imull
je
inc
loopne
test
sbb
movsb
pop
push
and
fbstp
inc
enter
jne
add
dec
sub
xor
sbb
or
push
or
in
dec
xor
ret
adc
xchg
add
daa
and
and
mov
in
sbb
ja
test
sbb
ja
jns
repnz
or
lahf
pop
adcb
inc
jb
push
lahf
push
xlat
filds
mov
add
repz
mov
mov
pop
ret
adc
lods
push
jg
and
adcl
or
in
jb
mov
int3
sbb
sbb
call
in
mov
push
enter
imul
xor
xchg
int3
push
push
or
dec
gs
mov
xchg
sahf
inc
loopne
imul
nop
pop
arpl
and
inc
imul
jno
out
repnz
enter
jbe
xchg
jge
xchg
mov
fs
jb
jge
jle
or
and
sbb
jb
ja
jle
inc
andl
das
test
test
mov
aas
add
scas
pusha
add
insb
jo
xor
jo
lods
mov
stos
adcb
add
sub
add
and
add
inc
subl
inc
subl
js
lock
pause
inc
and
dec
xchg
insb
pushf
adc
test
or
and
andb
mov
mov
fnstsw
adc
inc
dec
or
nop
lcall
lea
adcb
or
inc
xchg
jb
add
inc
sub
or
aam
inc
xchg
iret
inc
lods
or
inc
xor
cs
mov
test
dec
and
mov
mov
pop
pop
adc
imul
push
fsubl
mov
outsb
pop
inc
jb
or
pushf
push
xchg
clc
loope
xor
test
or
andb
mov
jns
je
int3
je
test
out
test
xchg
inc
test
jb
call
push
inc
xacquire
xchg
and
add
pop
push
xor
dec
adc
mov
add
orl
js
inc
sbb
lret
add
lods
aaa
mov
push
jb
mov
inc
repnz
lock
mov
sbb
leave
lret
mov
mov
add
and
push
mov
cld
cmp
test
lds
or
jl
lock
movsl
or
jl
rolb
test
jge
iret
in
and
sbb
adc
mov
or
xchg
mov
fsubrl
iret
sub
mov
inc
es
addl
add
test
sbb
cwtl
dec
and
mov
dec
push
and
scas
and
sub
lahf
sbb
pushf
push
loope
cwtl
stos
aaa
add
inc
aad
sub
es
pushf
sbbb
test
sbb
mov
and
and
outsl
pop
sbb
dec
pop
jb
cltd
popf
sbb
nop
sub
sbb
add
dec
sbb
mov
jo
lock
inc
loope
pop
enter
popa
push
add
xchg
adc
addb
pop
xchg
sbb
dec
lahf
into
inc
and
cmpsb
xor
inc
add
mov
out
dec
dec
shrb
cmpsl
adc
push
repnz
mov
xchg
sbb
pop
pop
or
loope
mov
inc
lds
ds
imul
es
inc
mov
fwait
das
scas
push
pop
cmpl
xchg
cmp
iret
stos
neg
or
adc
inc
in
inc
xor
cmp
add
fbstp
dec
lret
xor
and
clc
and
inc
ret
insl
add
add
addr16
push
or
pop
int3
xorb
ficomps
andb
cmp
xchg
dec
mov
ficoms
enter
push
xchg
mov
lcall
popf
jo
data16
idivb
mov
sahf
leave
inc
fmull
xor
rolb
punpckhbw
push
xchg
sub
sub
push
or
movsl
push
cmpl
bound
movsl
xor
jb
xor
rcl
cmp
jns
cmpsl
outsb
mov
cmp
test
lods
hlt
dec
dec
inc
sahf
and
push
js
daa
and
in
stos
inc
push
popa
daa
daa
mov
jo
add
push
adc
xor
or
sbb
inc
inc
add
test
dec
add
adc
inc
adc
loopne
and
repnz
inc
mov
jns
xor
mov
adc
inc
add
icebp
subb
fsubl
rclb
sbb
add
mov
decl
sbb
ljmp
mov
xchg
xchg
add
adc
mov
sbb
or
add
dec
or
pop
push
and
dec
adc
push
sub
mov
dec
and
or
add
bound
adc
movsb
sub
bound
lcall
or
addl
inc
call
and
push
jg
adc
jmp
adc
addl
loopne
sub
or
test
je
add
out
add
insb
and
into
inc
incb
add
push
addb
jae
loopne
adc
or
fwait
sbb
les
and
xor
bound
jecxz
inc
push
and
stos
jge
add
insb
incl
dec
fcoms
les
mov
lock
add
lret
pop
pop
adc
mov
addb
aas
jo
jbe
test
ret
out
push
pop
sbb
jl
lods
and
adc
dec
lods
fildll
cmc
loop
enter
pop
ret
push
xor
mov
loop
add
mov
mov
sbb
sub
dec
mov
and
lea
or
sbb
push
dec
aam
in
stos
mov
pop
xchg
movl
scas
sbb
add
scas
push
cld
es
rcll
int3
addr16
pop
cmp
mov
mov
lock
mov
pop
scas
xchg
push
push
mov
xchg
scas
pushf
xchg
adc
int
cs
xorb
fsubrs
pop
pop
or
cmp
mov
cs
outsb
mov
add
push
aam
mov
or
dec
inc
xor
lea
bound
xchg
nop
xchg
xlat
xchg
outsb
fsubrl
lea
frstpm(287
aad
and
pop
inc
mov
adc
mov
pushf
pushf
pushf
pop
fcomip
dec
dec
inc
sahf
aas
mov
ret
daa
and
mov
rorb
xchg
xchg
xchg
mov
push
jbe
enter
jecxz
mov
arpl
leave
leave
push
adc
jg,pn
outsb
mov
pop
adc
or
and
or
dec
add
sbb
dec
sbb
aaa
push
stos
cmp
and
and
and
in
daa
add
mov
push
nop
xchg
pop
lods
adc
jne
pusha
mov
inc
mov
mov
inc
sbb
xchg
cmp
repnz
mov
mov
sbb
or
fiaddl
sub
fidivrs
rorb
enter
push
push
xor
push
mov
cmp
imul
daa
subl
test
and
and
dec
sub
int3
xchg
testb
adc
mov
and
shrb
sub
cmp
call
xorb
dec
sub
ret
aad
cmp
jbe
bound
sub
sti
sub
inc
push
jecxz
inc
stos
mov
adc
sti
adc
sub
arpl
xor
rorl
xchg
dec
nop
or
push
sti
je
mov
xchg
xchg
pushf
subb
mov
repnz
lods
jbe
mov
and
inc
xchg
insb
sbb
cltd
push
push
push
mov
mov
jl,pn
aad
and
and
add
push
mov
and
mov
pop
nop
mov
mov
and
and
outsb
inc
and
add
ret
and
scas
dec
stc
loopne
xchg
ror
mov
pop
sbb
addl
add
mov
dec
and
mov
mov
push
dec
or
jl
pusha
mov
mov
scas
das
ret
push
out
add
sbbb
and
sbb
mov
adc
ja
cmp
js
pusha
bound
cmp
pop
cmp
popa
add
clc
push
pop
call
inc
xorb
mov
dec
push
call
mov
mov
sbb
mov
mov
mov
adc
xor
xor
inc
clc
xorb
or
mov
ret
fildll
test
jne
sub
inc
inc
dec
outsb
xchg
mov
mov
filds
sarb
inc
xorl
in
add
adc
jb
out
ret
cmp
cmp
sahf
pushf
pushf
pushf
xchg
mov
dec
dec
inc
bound
dec
fidivrs
sub
fistpll
add
jno
add
inc
inc
cmp
adc
pop
adc
dec
add
push
xchg
addb
pop
popf
xorb
movsl
push
cmp
sub
inc
fs
mov
inc
or
push
in
xor
lods
mov
xchg
push
mov
xchg
xchg
xor
stc
jb
rol
xchg
inc
fs
and
dec
xchg
cmp
push
push
xchg
mov
data16
mov
push
xchg
inc
mov
inc
enter
xchg
or
dec
push
je
add
adc
fmuls
fldl
sbb
pop
inc
adc
pusha
jb
dec
test
cmp
test
and
or
pop
call
cmp
mov
push
mov
cmp
cmp
xchg
add
cmp
sub
les
mov
pop
pop
rcrl
sub
je
xor
xchg
or
adc
cmp
dec
mov
ret
dec
pop
sbb
dec
repnz
sbb
aam
jno
and
mov
cmp
call
iret
out
popf
sub
rcrb
dec
pusha
pop
lock
sbb
movsl
xchg
pop
enter
pushf
mov
or
out
aas
inc
add
subl
and
nop
and
je
rcll
jmp
push
test
pop
rolb
and
mov
dec
loope
dec
adc
fsubr
mov
push
leave
pop
es
das
mov
and
in
push
shl
mov
es
test
add
sub
and
leave
dec
dec
add
sbb
cwtl
fsubrs
aas
pop
sub
lcall
enter
cmp
lret
xorl
mov
mov
inc
dec
or
data16
shlb
dec
lock
data16
push
in
cmp
dec
enter
add
jo
xor
outsb
push
and
in
repnz
rcl
lret
pop
ds
cld
sysexit
int3
outsl
int3
xchg
int3
mov
pop
enter
int
sahf
pushf
pushf
pushf
xchg
movsl
repz
into
dec
dec
dec
inc
jbe
imulb
daa
daa
daa
and
add
shrb
popa
xchg
leave
enter
clc
sbb
push
pop
call
and
addr16
rcr
add
inc
loope
es
aas
add
pop
dec
enter
dec
add
aam
add
inc
jno
or
dec
add
out
leave
pop
pop
pop
and
and
test
push
inc
inc
add
add
mov
mov
leave
test
addb
arpl
rcll
stos
or
adc
add
and
in
and
mov
adcl
inc
add
fcompl
mov
pop
dec
int3
repnz
sbbl
lods
sbb
addr16
mov
mov
pop
jb
inc
test
or
inc
mulb
sbb
xchg
scas
sub
inc
sbb
outsb
mov
xor
dec
xchg
enter
dec
inc
movb
inc
sub
stc
fldl
bound
fnsave
push
aaa
jbe
fadds
sub
or
jecxz
sbb
fidivl
cmp
test
frstor
dec
jno
adc
rorl
inc
xchg
dec
lods
in
fstp
inc
or
lods
or
fimuls
dec
bound
pusha
fnstenv
dec
sbb
push
cmp
ss
cmp
add
mov
in
fldt
subl
js
or
scas
and
sbb
push
push
cmp
icebp
sub
xor
push
roll
lea
rorl
and
pop
cmpsb
or
test
add
sbb
lods
xchg
add
testb
das
repz
sbb
dec
adc
jo
jb
roll
push
addr16
fidivrs
loop
push
sbb
push
aad
sub
in
lea
jl
cmp
mov
push
les
popa
bound
insl
add
pop
adc
and
sbb
and
mov
inc
out
loopne
lds
inc
pop
push
pushf
mov
int3
mov
rcl
bound
filds
xchg
data16
repnz
dec
and
scas
sbb
push
shll
xor
push
aas
add
in
xlat
outsl
cmp
mov
xchg
aas
xchg
pop
and
lods
fadds
out
leave
leave
leave
enter
stos
mov
or
pop
ret
xor
or
cmp
jns
clc
sbb
inc
js
cmp
cmp
aaa
sahf
pushf
pushf
push
pmaxub
adc
fisubrs
sbb
inc
sub
lea
dec
test
sbb
jae
pusha
sub
add
sub
push
xor
jno
push
test
movsl
outsb
sub
sub
nop
fstpl
adc
sub
dec
cmp
pop
sbb
mov
outsb
sub
fnstsw
mov
and
ljmp
sub
roll
mov
lea
pop
adc
arpl
inc
popa
pop
push
and
dec
push
sti
sub
push
mov
add
sbb
sbb
add
pop
sub
inc
dec
imulb
inc
push
xchg
sub
push
inc
imul
lea
push
dec
sub
stc
sbb
xor
sub
inc
ret
scas
inc
sub
sub
ljmp
mov
in
pop
inc
aaa
push
add
sub
test
enter
sub
rcll
dec
adcl
push
pop
int3
inc
or
sbb
les
mov
mov
add
cltd
subb
cmp
push
in
or
fbstp
repz
aaa
push
inc
int3
dec
adc
or
movsl
push
push
inc
jl
pusha
fistps
popa
repz
or
adc
or
or
cmp
push
pop
push
loopne
sbb
mov
and
and
push
dec
movsl
pop
jb
cmp
push
mov
inc
pop
addb
loope
leave
push
orl
pop
pop
jbe
and
add
loop
ss
ds
das
pop
inc
mov
test
cwtl
popa
das
scas
xchg
rcrl
mov
cs
xchg
or
dec
pusha
das
mov
and
and
and
in
or
cli
push
insl
mov
add
pop
push
sbb
inc
lea
aas
pop
jecxz
xchg
inc
jb
fcompl
call
push
push
xor
cmp
pop
in
hlt
mov
adc
pusha
ds
adc
repnz
pop
fisttps
pop
push
mov
das
hlt
in
mov
pop
push
dec
dec
outsb
xchg
out
seta
movntq
daa
daa
and
mov
xchg
xchg
xchg
xchg
call
leave
enter
jmp
in
out
ljmp
mov
std
xor
pop
jp
xor
add
pop
jo
xor
xor
bound
cld
cmpsb
xchg
cwtl
dec
inc
dec
add
bound
mov
jno
mov
rcrb
shlb
inc
mov
inc
dec
adc
lods
push
xor
mov
inc
sbb
aad
sub
ja
cmp
mov
lods
add
add
push
in
pop
aam
addl
mov
add
push
mov
lret
or
pop
mov
mov
pop
sub
nop
sub
xor
push
push
sbbl
pop
dec
sbb
jmp
addl
data16
sbb
push
insb
pop
push
jno
orb
jl
or
lahf
sub
nop
pop
lea
xchg
sbbb
inc
imul
adc
xchg
rcrb
pop
push
ss
pop
xchg
mov
in
mov
stos
inc
lea
in
xchg
and
add
push
insb
scas
or
sbb
jge
mov
pusha
sub
pop
and
stos
shlb
xchg
mov
push
pop
dec
fsubr
mov
pop
dec
in
mov
pop
pop
popa
jno
and
xor
sbb
or
out
sub
in
or
inc
pop
in
lock
pop
enter
and
dec
xchg
loopne
in
daa
push
bound
push
repz
dec
rolb
movsb
in
rcrl
xchg
daa
push
mov
lock
daa
adc
movb
fwait
cmp
out
push
or
mov
mov
xor
aam
outsb
fsubrl
leave
sub
fs
icebp
out
sbbb
out
scas
pop
leave
mov
in
addb
mov
sub
fdivl
mov
add
pop
or
lea
gs
dec
je
enter
lock
sbb
addb
das
mov
jo
addr16
inc
mov
arpl
jns
clc
les
inc
in
mov
or
xchg
ret
push
cmp
in
mov
dec
bnd
enter
test
mov
das
repz
leave
leave
jae
shll
hlt
repnz
fs
mov
or
jb
jb
push
pushf
shl
cmp
jns
testb
mov
cmp
cld
xor
jl
aaa
sahf
pushf
fadds
clc
xchg
jbe
orb
fsubl
daa
in
clc
push
fs
outsb
sub
in
or
aas
or
cmpsb
call
sub
aas
imul
stc
ds
inc
sub
gs
add
add
or
mov
aas
or
sbb
push
clc
enter
sarl
mov
mov
addr16
ljmp
outsl
lods
mov
test
pop
and
push
aaa
out
mov
or
shrb
push
lds
dec
movsb
sub
jo
sub
sbb
subl
dec
inc
or
xor
xchg
clc
mov
push
fdivs
adc
in
dec
leave
mov
ret
add
jecxz
arpl
push
inc
or
adc
movsl
std
jae
pusha
imul
pop
aad
sub
add
mov
mov
inc
cmp
push
adcb
call
inc
std
and
sub
xchg
dec
std
sub
pop
mov
pop
ljmp
xchg
lods
cld
mov
in
adc
and
movb
xchg
insb
js
rclb
sbb
arpl
sub
cld
jmp
bound
xor
inc
push
push
mov
bound
push
sub
xorb
dec
or
movsl
sbb
jo
sbb
and
mov
sub
push
sub
dec
stc
mov
add
mov
sub
adc
in
lds
or
add
frstor
inc
sti
xor
or
dec
add
add
sbb
push
cld
pop
push
std
adc
aas
sub
outsb
das
push
push
daa
add
mov
bound
push
arpl
movb
sub
insl
andl
std
pop
pop
leave
mov
dec
jnp
inc
xor
add
sub
pop
aas
movsl
or
aas
push
icebp
or
jp
notl
fstpt
js
movsb
in
push
test
mov
fidivrl
adc
mov
insl
outsl
push
sub
insb
outsl
iret
and
adc
stc
xor
dec
loopne
push
pop
push
and
push
wrmsr
add
pop
call
push
mov
ret
psrld
add
in
in
mov
jb
xor
icebp
xor
cmp
cmp
jp
repnz
pushf
pushf
mov
mov
dec
dec
inc
sahf
adc
cmp
pop
cmp
dec
adc
ds
jo
or
shrb
jne
adc
xor
loopne
cld
dec
add
aam
lds
xorb
push
inc
cmp
mov
xor
out
push
jno
xorl
jno
sbb
push
je
xchg
push
insl
mov
mov
push
shlb
rol
sub
xchg
xor
push
jb
jae
cmp
mov
xor
aam
mov
xor
je
push
xchg
xor
dec
xor
push
xor
je
lock
loop
insb
jmp
daa
je
cmp
push
je
push
sbb
addb
fwait
jo
jns
loopne
popf
dec
cmp
shlb
pusha
lret
pop
and
rcr
call
js
mov
cmp
xchg
xchg
js
cmpl
add
add
js
rolb
sub
jae
mov
pop
pop
shr
fwait
ja
sub
jl
je
xor
push
or
jns
or
adc
ja
jns
sbb
rorb
jp
add
pop
and
test
dec
pop
insl
mov
mov
add
inc
or
sbb
xchg
out
subl
mov
mov
jge
push
push
insl
inc
push
jne
xchg
test
jnp
cmp
cli
add
add
push
and
or
dec
pop
mov
mov
pop
je
ret
pop
adc
inc
pop
mov
dec
adc
in
push
mov
add
cmpsb
add
in
neg
loopne
or
aaa
das
dec
push
dec
sbb
xchg
or
out
or
icebp
adc
jecxz
or
or
inc
cmp
pop
dec
xchg
or
push
cmpsl
dec
insb
and
add
shll
pop
sub
jne
ret
or
sub
and
mov
loopne
les
or
fimuls
xor
das
cmp
cmpsl
and
fwait
insl
cmp
jle
and
rolb
adc
pop
nop
pop
jno
push
pop
push
adc
mov
mov
fs
leave
insl
mov
pop
or
orl
fsubrl
pop
call
or
sahf
pushf
pushf
lcall
dec
dec
jp
std
xor
daa
daa
daa
and
sti
inc
xchg
xchg
xchg
xchg
adc
mov
leave
enter
adc
mov
fcmovne
mov
pop
inc
je
mov
and
movsl
add
pop
test
pop
mov
nop
add
cmp
adc
popf
dec
jle
hlt
pop
add
lfs
or
push
rcll
cmpb
rclb
mov
fwait
or
pusha
ja
movsl
in
mov
mov
mov
leave
nop
add
in
jg
push
mov
mov
sbbl
add
enter
or
call
fldl
pop
mov
sbb
addl
imul
add
inc
and
testb
inc
fisttpll
inc
test
fmuls
adc
adcl
dec
test
add
cmp
ljmp
inc
ljmp
ljmp
hlt
test
jb
jecxz
test
sbb
push
cmp
push
add
dec
test
aad
test
lods
pusha
xchg
dec
aad
pusha
and
inc
inc
pop
popa
fsubrl
dec
aam
and
adc
jns
xchg
adc
mov
pop
test
mov
xchg
mov
insb
push
mov
xchg
jnp
inc
push
adc
push
dec
loop
xchg
add
fimuls
inc
mov
pop
inc
int3
and
dec
iret
imul
dec
add
cwtl
cmp
aas
sbb
adc
jnp
adc
push
test
push
pop
pop
es
in
add
mov
sbbb
outsl
pop
jle
fmulp
pop
or
fldcw
subl
movsb
or
inc
push
cmp
cmp
imul
sub
mov
mov
orb
mov
pop
call
mov
sbb
inc
adc
sub
les
rcrl
mov
cltd
bound
roll
and
inc
xchg
xor
push
fwait
les
arpl
push
enter
jge
cmp
insl
divb
andl
das
mov
or
sbb
and
sbb
lea
sbb
int3
aaa
dec
push
insl
sbb
adc
dec
in
in
mov
mov
in
cs
in
faddl
repnz
sbb
xor
iret
mov
pushf
pushf
movsb
or
add
xchg
leave
sbbb
pusha
xchg
sbb
nop
or
or
cmp
inc
fs
call
dec
inc
lahf
push
inc
sbb
push
pop
cmp
xchg
adc
cs
sub
sbb
sbb
enter
daa
adc
mov
sbb
paddusb
out
ss
je
dec
dec
pop
dec
mov
sub
xchg
mov
loopne
repnz
mov
enter
sbb
dec
mov
and
sbb
sub
mov
xchg
xor
movsb
out
adc
add
daa
xor
daa
rorb
bound
test
popf
shl
pop
push
cmpsl
push
mov
sbb
cmp
xchg
xchg
insb
cmpsb
int3
sbb
ss
in
push
xchg
push
les
inc
add
hlt
or
cmpsl
sub
leave
cmpsb
add
je
jmp
clc
pop
dec
xchg
nop
mov
pop
xor
push
pop
push
pop
mov
sub
pusha
mov
pop
xchg
xchg
and
or
fcoms
cmpsb
dec
rorl
nop
mov
xchg
push
pop
leave
and
inc
adc
les
addl
push
xchg
xchg
pushf
and
jno
mov
cmp
mov
in
xor
sub
dec
and
jp
cmp
fwait
pavgw
mov
push
pop
sbb
mov
xchg
pop
lods
sub
inc
lods
pop
mov
shll
and
movsl
sbb
sub
xor
mov
mov
cmp
flds
mov
popf
jl
inc
xchg
mov
nop
inc
cmp
add
and
inc
adc
mov
adc
cmp
in
shl
push
jno
and
adc
mov
xchg
and
xor
fcmovne
mov
cwtl
pavgb
or
mov
push
clc
mov
mov
rorb
stc
fsubl
add
mov
push
stc
and
mov
sub
jo
add
xchg
adc
jl
adc
gs
cwtl
into
outsl
xchg
dec
orb
es
jno
les
add
aaa
push
dec
jno
pushf
pusha
cli
mov
es
nop
es
daa
mov
dec
and
and
cmp
jp
cmp
daa
mov
shlb
inc
sbb
dec
pop
inc
fiadds
rol
xchg
dec
fildll
and
cmp
adc
push
jno
enter
sub
hlt
mov
das
fistps
sub
ja
fbld
xchg
leave
in
xchg
or
pop
sub
rolb
aaa
xor
sub
dec
pusha
mov
add
iret
sub
popa
inc
and
or
dec
add
push
jl
fildll
daa
sub
cld
daa
sbb
mov
sub
dec
outsl
and
dec
dec
mov
push
test
rcll
scas
jmp
cmp
mov
jb
std
sub
les
or
cmpl
divl
xchg
xor
aam
sbb
push
jno
pushl
and
out
push
lcall
imul
movsb
imul
sub
dec
sub
leave
int3
sub
cs
sub
daa
dec
xchg
sub
add
loop
lahf
sub
mov
push
push
int3
xchg
imul
sub
xchg
leave
push
movsb
dec
cmp
sub
push
movsb
sbb
cmpsl
aam
or
push
push
rorb
sbb
xchg
test
xor
push
adc
cs
xor
das
aas
jo
jl
xor
xlat
push
orb
das
mov
loop
enter
arpl
adc
push
push
and
xchg
and
and
fisubl
lock
or
sub
movb
adc
mov
add
adc
dec
daa
pusha
stos
arpl
clc
jo
add
push
and
lds
xchg
arpl
cmpsl
mov
push
sub
push
push
push
jb
xchg
enter
cmpsl
rclb
xchg
sub
inc
push
adc
and
test
or
inc
jecxz
subl
pop
insb
xchg
sub
inc
pop
inc
rorl
stos
pop
jo
adc
pop
pop
dec
push
mov
nop
iret
sbb
adc
shl
rclb
in
xor
mov
push
loop
das
adc
pop
pushf
sbb
add
adc
xchg
mov
pop
and
enter
push
lods
adc
test
mov
sbb
push
add
jno
mov
inc
shl
movl
sub
shlb
mov
repnz
dec
test
sbb
jb
xor
push
out
xor
test
and
mov
jne
lahf
roll
stos
lahf
jo
adc
jg
insl
adc
pop
push
and
ss
pop
aaa
and
das
mov
push
shlb
test
adc
sbb
sbb
push
mov
adc
push
and
dec
push
and
cmp
pop
nop
pop
adc
add
aaa
and
xor
push
adc
and
cs
or
adc
push
sbb
or
das
dec
cmp
mov
loop
sbbb
lods
das
and
cmp
jb
leave
cmp
mov
jno
push
pop
mov
jmp
xchg
lods
mov
mov
mov
ret
outsl
pop
sub
xchg
pop
into
sbb
adc
fcoml
xchg
push
jl
les
push
out
push
or
cmpsl
push
cmp
xor
push
and
lret
stos
das
inc
cmp
mov
pop
hlt
lcall
imul
stos
bound
push
and
and
pop
pop
dec
into
jb
mov
push
fbld
sub
cmp
cmpb
fldt
jp
xchg
das
stos
cmp
mov
or
push
mov
bound
pop
cs
inc
cmpb
cmp
lods
dec
add
lods
and
aas
fisttpll
pop
adc
jge
mov
xor
inc
xchg
mov
mov
xchg
lahf
in
cmp
inc
push
cmp
push
push
test
push
xchg
lcall
inc
call
sub
cmp
dec
inc
xor
and
sub
sub
sub
xchg
xor
push
movsb
and
ja
gs
pop
and
shrb
inc
push
aas
push
jbe
inc
js
aas
das
ret
adc
add
pop
mov
dec
arpl
cmp
lahf
adc
jnp
jnp
repnz
and
ds
push
jl
cmp
into
pop
mov
cmpb
dec
fs
mov
orb
adc
add
aaa
add
sti
sub
or
leave
dec
dec
repnz
mov
or
push
out
repnz
inc
jp
adc
mov
push
cli
syscall
pushf
inc
and
push
outsb
push
jnp
add
cmp
mov
or
add
inc
dec
inc
bound
mov
outsl
or
inc
mov
outsl
mov
or
and
mov
arpl
pop
fbld
sbb
pop
push
mov
push
daa
xchg
cmp
push
fwait
adc
cmp
push
jns
insl
adc
pop
test
sub
add
shl
or
add
push
fiaddl
sub
or
push
push
and
push
dec
mov
aad
nop
dec
add
pop
mov
push
adc
mov
pop
xor
outsl
adc
outsb
mov
pop
js
mov
xor
in
es
mov
adcb
mov
in
aas
cltd
inc
repz
lret
pushf
in
or
ja
dec
and
inc
sbb
mov
push
cmc
dec
or
xchg
enter
or
mov
ret
push
and
or
mov
push
lret
push
pop
je
inc
loope
int3
or
roll
roll
sbb
lods
cmp
or
pop
mov
and
xchg
or
inc
inc
lea
sbb
adc
push
mov
fcoml
pop
cmpsb
mov
pop
fdivl
push
fdivrp
mov
shrl
mov
in
push
iret
sarl
loopne
push
nop
call
mov
push
mov
jl
push
pushf
mov
inc
inc
cmp
movsb
loopne
loop
or
adc
in
inc
dec
and
xchg
das
ja
adc
pop
adc
mov
pop
add
sbb
nop
in
lahf
mov
sbb
push
sbb
popf
sbb
leave
mov
add
dec
push
push
dec
xchg
dec
pop
adc
sbb
add
pop
adc
adc
inc
and
mov
cmpsb
test
inc
xor
jo
xor
xorb
mov
adc
outsl
sbb
adc
outsl
subb
pop
adc
xor
push
stos
and
jne
ret
mov
in
add
mov
mov
adc
cmpb
dec
cmpsl
sub
shrl
cmp
jmp
bound
orl
pop
test
and
and
aad
xchg
jp
sub
fsubs
and
dec
cmovg
cmpsl
mov
aad
adc
sbb
iret
add
shrl
or
ficoml
or
inc
inc
xor
add
js
mov
popa
xor
dec
pop
push
and
outsl
movsl
les
inc
sbbb
and
addr16
test
add
lahf
mov
nop
out
mov
adc
mov
popf
dec
sar
jo
ja
jae
fs
xchg
pop
inc
lret
add
fistpl
dec
pop
and
jbe
es
fmull
and
int3
inc
cmp
nop
cld
push
arpl
push
push
push
pop
dec
adc
out
xchg
je
andb
mov
mov
sub
xchg
xor
loope
xchg
cmp
mov
pop
dec
dec
or
lcall
push
dec
mov
lds
pop
pop
add
adcb
jp
lea
and
push
leave
out
cmp
or
ret
pusha
add
pop
shlb
or
orb
jae
mov
fmull
test
mov
andb
movsb
sbb
push
mov
add
ret
dec
push
pop
lea
push
lods
add
mov
cmp
mov
arpl
xchg
mov
push
push
imul
arpl
add
dec
xor
cwtl
cmp
mov
push
es
lret
adc
sub
push
ret
ja
out
loope
xlat
stos
xor
or
pushf
jl
and
orb
jg
pop
movb
loope
or
jbe
mov
testl
dec
sbb
fmuls
lea
or
dec
xchg
xchg
sbb
adc
or
inc
pop
inc
or
inc
fidivl
hlt
adc
popa
pusha
loopne
jmp
je
leave
xchg
fldl
arpl
jo
ss
mov
js
andb
and
shl
rorb
fimuls
movsb
nop
ss
mov
cmpsl
or
adc
dec
xchg
stos
nop
outsb
push
test
lock
push
rcl
pop
and
or
jns
inc
ret
jmp
lods
xor
test
das
out
and
or
sub
and
adc
and
gs
mov
mov
sbb
lahf
movsb
inc
imul
mov
push
mov
arpl
xor
lea
stc
jmp
push
pop
mov
sbb
clc
mov
addr16
and
inc
mov
pusha
add
pop
fisubrs
dec
mov
fidivl
repnz
in
sub
add
add
dec
dec
test
inc
jb
mov
nop
pop
leave
push
push
and
leave
test
dec
and
mov
xchg
bound
fstpt
loop
mov
and
cmp
shlb
or
out
adc
ds
in
sub
and
mov
xor
movsb
das
mov
xchg
clc
push
subl
and
nop
add
jle
and
xchg
mov
lods
add
rol
sbb
enter
jo
int
paddsb
leave
lds
rcrl
iret
ss
adc
push
cmp
aas
data16
mov
xor
lock
adc
test
push
adcl
and
aad
and
or
or
xchg
fs
outsl
and
mov
mov
and
dec
mov
lds
mov
mov
xchg
jmp
cmp
dec
pop
stos
pop
fadd
outsb
adc
pop
add
mov
ljmp
pop
dec
fiaddl
xor
mov
into
call
mov
imul
stos
dec
lock
jl
push
enter
out
in
enter
mov
scas
or
and
sahf
cmpsl
cwtl
lock
mov
arpl
xchg
cwtl
mov
insb
lahf
fidivs
push
add
dec
mov
mov
insb
push
faddl
dec
push
cld
out
jnp
notl
push
add
push
mov
push
insb
mov
loope
iret
int
add
jo
iret
out
push
enter
arpl
into
push
es
and
mov
inc
std
rorb
bnd
lods
scas
mov
push
repz
sarb
push
lods
syscall
add
out
and
add
cld
repnz
jno
add
or
sbb
in
jnp
fidivs
cld
loopne
push
add
pop
push
jle
jb
add
add
or
dec
movups
mov
add
popa
xor
jl
xor
add
add
mov
xchg
sub
add
adc
mov
mov
cmp
and
hlt
outsb
fs
je
cmp
ficomps
sub
jo
imul
sub
ljmp
mov
jno
sub
lahf
cmp
xor
and
es
or
adc
push
or
push
imul
push
fldl
jmp
jnp
dec
dec
adc
and
mov
shlb
add
sbb
mov
test
push
add
pop
popf
ss
pop
movsl
bound
pop
leave
test
pop
mov
or
insl
xchg
add
addr16
mov
in
pop
dec
and
std
pop
mov
and
xchg
add
cmpsl
sub
jmp
movsl
or
test
int3
adc
push
adc
mov
daa
and
add
xchg
or
and
jb
ss
sub
inc
sub
and
adc
icebp
and
je
mov
push
sbb
and
lds
mov
dec
test
cs
mov
push
add
push
adc
mov
push
subb
dec
leave
mov
xorb
jb
leave
and
aam
pop
rorb
add
xor
insl
sbb
inc
adc
lds
pop
or
adc
add
decb
mov
adc
mov
push
fisttpl
inc
pop
mov
in
sbb
and
push
inc
ret
pop
push
push
subb
and
xor
enter
dec
cmp
lea
pop
mov
adc
add
mov
xor
insb
inc
ret
sbb
mov
int
cmp
test
insl
test
mov
addr16
sub
add
inc
daa
mov
dec
scas
cs
add
nop
mov
adc
or
inc
gs
inc
sbb
imul
dec
test
xchg
sarl
mov
test
sahf
shlb
cmp
add
add
mov
mov
push
insb
mov
mov
pop
je
out
xchg
faddl
mov
dec
mov
addr16
mov
pusha
sbb
or
push
sbb
es
pop
shlb
add
mov
or
fmuls
add
mov
dec
push
add
xor
fcoml
or
ret
dec
sub
xchg
add
add
jbe
mov
mov
inc
push
push
mov
inc
inc
lea
push
or
push
ret
test
or
push
pop
int
test
inc
adc
sub
adc
or
push
adc
aas
add
add
mov
push
pop
pop
push
push
xor
adc
stc
cmpl
pop
cmpl
inc
and
leave
insl
lahf
dec
outsl
mov
add
push
push
push
lods
adc
ds
test
enter
andl
test
ljmp
test
xlat
movsb
mov
or
push
ret
mov
or
mov
push
pop
popl
and
or
imul
mov
push
xor
pop
addr16
mov
push
and
mov
mov
cmp
fs
fdivrl
cmpsl
add
adc
adc
inc
xchg
imul
aaa
jae
lcall
jnp
lahf
mov
movlps
push
push
pop
mov
sbb
mov
adc
sarb
nop
in
movsl
sbb
mov
dec
xor
popaw
les
iret
or
fldenv
mov
and
pop
add
mov
adc
adc
sbb
sub
loope
inc
pop
movsb
iret
inc
dec
shl
dec
add
mov
push
mov
cltd
out
cmpsl
push
jno
or
mov
mov
repnz
insb
cld
insl
pop
mov
das
fsubrl
ds
add
add
in
dec
sahf
jbe
insb
and
insl
push
inc
jle
insl
and
roll
mov
cmpsb
cld
cwtl
adc
mov
rol
outsl
xchg
mov
aaa
push
cmp
in
mov
out
das
or
jae
and
mov
mov
dec
add
inc
mov
push
enter
shll
add
jno
arpl
daa
add
push
outsl
push
mov
outsb
out
jo
lcall
ficoml
test
in
mov
pushf
and
mov
adc
loopne
dec
cmp
ds
push
je
sub
fdivrl
sub
sahf
lahf
push
loopne
adc
adc
push
jo
in
sub
test
negb
mov
push
mov
testl
cmpsb
push
movsb
call
andb
inc
sbb
cmp
daa
adc
xchg
pop
lods
lret
cmpsl
enter
shlb
jno
pushf
jno
lret
lret
lret
lret
divl
jb
jb
jae
lret
lret
lret
pop
jae
jae
je
je
mov
sub
ltr
jne
mov
jbe
prefetch
repnz
pop
push
ja
lret
lret
lret
lret
mov
js
js
lret
lret
lret
fidivrl
jns
jns
jns
lret
lret
lret
jns
jp
jp
jp
lret
lret
lret
sub
jnp
jnp
jl
lret
xchg
mov
xchg
sub
ljmp
xor
push
gs
adcb
and
sbb
adc
rcll
mov
sbb
adc
pop
adc
adc
dec
inc
lds
adc
add
xchg
int3
xchg
stos
add
sub
pop
pusha
mov
add
shrb
add
cmp
ljmp
pop
mov
shlb
push
mov
rclb
mov
pop
jo
mov
rclb
push
pop
mov
push
shlb
je
mov
xchg
loopne
insb
je
xchg
movb
mov
xchg
sub
or
pop
xor
mov
add
jo
loop
cmp
push
fsubrs
add
xor
cmovle
test
jae
adc
fdivs
mov
stos
add
roll
or
mov
mov
xchg
test
jo
xchg
movsb
push
pusha
push
mov
mov
push
xchg
sbb
ljmp
pop
mov
cmpsb
xchg
cmp
aam
cmp
cs
push
pusha
roll
dec
movsb
mov
pusha
rcrl
inc
xchg
add
sbb
inc
ljmp
inc
xchg
add
roll
movsb
push
xchg
in
je
jne
push
rcrb
add
sbb
xor
cld
ret
add
sbb
call
addb
cmp
cmp
add
push
xchg
iret
add
push
pusha
adc
rclb
xchg
enter
lds
sub
repz
xchg
mov
jne
inc
add
or
test
pop
pop
sarb
cltd
jle
std
push
xor
leave
mov
cmp
mov
cmc
jns
pop
dec
mov
sahf
cmp
dec
mov
xchg
mov
out
pop
es
pop
fildll
mov
fmuls
jl
jo
imull
or
xchg
push
imul
xchg
push
mov
adc
xlat
es
jno
jge
hlt
push
jg
pop
jg
cmpl
fisttps
int
movlps
int3
adc
stc
mov
cmpb
sbb
addr16
iret
jo
es
lret
jno
and
movups
in
push
xchg
inc
addb
push
adc
stos
aam
bound
popf
fnsave
jmp
pop
pop
insl
dec
and
ljmp
mov
or
fcmove
arpl
cwtl
bound
inc
sub
or
sub
loopne
rorl
add
and
pop
sarl
add
xor
pop
cmp
push
out
mov
bound
out
jp
sub
pop
pop
jp
sub
add
pop
dec
inc
sub
push
push
rol
sahf
imul
push
ret
or
add
dec
and
sub
test
addb
subb
push
cmp
nop
pop
xchg
jb
add
xchg
xlat
cmpsl
sbb
lea
sbb
adc
mov
inc
xchg
push
lock
xchg
sub
mov
adc
xchg
cmp
pop
dec
xlat
xchg
in
pop
out
inc
std
aam
xor
addl
aad
js
cmc
cmpsl
lcall
test
insb
cmpxchg
test
push
adc
and
push
ret
fsubr
sub
push
pusha
ret
mov
xor
or
mov
or
lret
inc
lret
leave
shll
mov
pop
dec
dec
fmull
pop
inc
pop
pop
rclb
mov
push
or
inc
nop
dec
imul
psubq
jb
push
dec
testl
test
dec
pop
cmp
and
ss
xchg
test
test
xchg
lar
fadd
mov
das
pop
xchg
inc
push
stos
xchg
pop
cmc
adc
sbbl
cwtl
addl
lcall
adc
cmpsl
rorl
sbb
dec
mov
adcl
fwait
and
mov
es
call
adc
add
shlb
mov
mov
pop
mov
sub
dec
pop
jle
mov
lods
xchg
out
push
loope
les
pop
cwtl
xchg
dec
xchg
in
imul
and
dec
adc
and
cltd
pop
bound
dec
xor
xlat
das
sub
lods
fbld
das
je
mov
push
jae
mov
repnz
mov
adc
js
test
loope
xor
push
inc
mov
inc
dec
cmpsl
decl
pop
pop
jae
stc
jns
mov
jl
lea
xchg
push
mov
or
xchg
pop
dec
mov
sub
adc
inc
pop
dec
push
push
dec
or
push
push
das
pop
les
lds
js
rorb
push
ss
cmp
inc
lcall
fwait
and
sub
mov
add
dec
cmpsb
mov
leave
sub
stc
enter
or
sub
or
or
sub
scas
aaa
and
xor
test
mov
xchg
jno
jg
ret
or
and
mov
movsl
jno
add
mov
pop
xor
pusha
dec
mov
or
xchg
xor
mov
dec
or
movsl
imul
mov
adc
enter
ret
and
jecxz
sbb
mov
cmp
orl
pop
sub
les
dec
inc
sub
aam
xor
cmpsl
mov
or
orb
pop
xor
jg
andl
or
addl
sub
les
in
es
xor
xchg
or
fnstenv
std
imul
add
mov
push
mov
jne
add
test
icebp
push
add
test
and
pop
out
sahf
xlat
and
aaa
xor
lahf
insb
add
mov
push
and
or
movsl
adc
in
jmp
and
das
out
shl
rorl
into
pushf
xorl
hlt
inc
inc
mov
mov
sbb
loop
loopne
add
cmpsl
call
jne
mov
add
loopne
sub
inc
cwtl
inc
adc
pusha
cwtl
popa
push
pushf
lock
sbb
jge
mov
rolb
sbb
or
cmp
or
xchg
les
adc
inc
and
xchg
and
sbb
push
mov
jbe
and
jmp
insl
gs
mov
add
inc
xchg
daa
dec
test
lcall
xor
fcoml
or
xor
lcall
xlat
xor
aad
push
cmpsl
xchg
test
sub
and
xchg
lahf
add
mov
and
dec
loope
bound
xor
lds
lock
pop
adc
xor
es
mov
mov
rorl
mov
or
sbb
fs
mov
mov
and
xor
and
jmp
jge
xchg
sbb
add
pop
adc
cmp
and
push
dec
sbbl
mov
arpl
push
and
mov
bound
mov
pop
rcll
ret
push
and
and
and
into
mov
sbb
pusha
addl
xchg
aam
test
repz
jae
out
mulb
jl
push
sbb
dec
addb
or
dec
fsubr
inc
in
add
dec
inc
or
enter
push
add
mov
inc
add
xor
inc
test
mov
cmp
add
lcall
sbb
sbb
xchg
inc
inc
pop
mov
sbb
or
push
dec
sbb
push
push
sub
add
mov
push
test
popa
or
push
mov
cwtl
xchg
xchg
sub
xchg
sbb
xor
add
push
pusha
and
xchg
cmp
mov
sub
xchg
inc
je
sbbb
mov
push
sub
mov
daa
xchg
inc
mov
daa
jne
xor
inc
and
mov
cmpsb
loope
cltd
cmpsl
lahf
out
orl
sbb
je
inc
or
sbb
bt
sbb
adc
test
xlat
cwtl
jp
addr16
loope
cmp
fisttps
sbb
push
and
inc
rol
jns
xchg
inc
push
das
cmp
inc
inc
gs
aaa
imul
repnz
mov
aaa
xlat
hlt
sbb
lcall
lret
dec
and
lea
cmp
scas
pop
xchg
insb
xchg
adc
mov
cmp
and
ret
mov
or
subl
add
xchg
and
jbe
repnz
and
sub
and
pop
imul
stos
push
cs
mov
adc
dec
ljmp
add
and
and
fisubrl
and
jo
lds
mov
sub
sbb
sbb
movsl
cmp
sbb
pop
movsb
pop
leave
xor
xor
orl
ds
call
add
insb
inc
cli
add
mov
ja
adc
mov
mov
pop
sbb
popa
or
jno
ret
dec
sahf
or
outsl
insb
movsb
or
mov
pop
xor
inc
out
imull
and
sbb
popf
or
popf
xchg
lock
mov
and
add
in
mov
sub
or
stos
nop
adc
xlat
xchg
cwtl
mov
test
test
or
or
push
jno
pop
sub
cmpsl
bound
mov
cltd
cltd
sub
daa
sarl
adc
das
mov
pop
push
fstpl
fwait
das
enter
adc
out
inc
push
jns
push
jge
lcall
jne
lret
dec
pop
add
lea
ret
inc
rcr
jecxz
loop
add
les
ss
inc
mov
add
enter
hlt
mov
push
jns
imul
mov
and
iret
hlt
in
mov
push
call
push
addr16
call
mov
out
mov
xchg
popf
out
sub
das
mov
pop
xchg
pop
addl
sbb
inc
fcoms
pop
inc
add
imul
scas
inc
lahf
lock
scas
data16
leave
sbb
xchg
clc
mov
jmp
jge
arpl
add
add
adc
xchg
or
cltd
add
sub
inc
sbb
or
push
or
out
flds
mov
push
mov
sbb
das
inc
dec
insl
or
ror
test
push
push
int3
mov
int3
add
push
or
rcr
inc
cmpsb
xchg
sbb
adc
adc
sub
adc
inc
mov
mov
add
insb
mov
and
sbb
mov
rcl
push
std
je
test
andl
mov
xorl
and
sbb
rclb
push
frstor
inc
ret
push
and
icebp
adc
lea
cli
mov
and
imul
adc
pop
adc
sbb
lods
adc
out
orl
inc
xchg
inc
and
movswl
xchg
les
add
add
xchg
mov
cld
inc
mov
cmpsb
cwtl
ss
test
and
or
adc
or
mov
adc
pop
nop
and
mov
or
cli
or
aas
out
ljmp
xchg
inc
add
or
adc
add
inc
scas
insb
and
je
insl
daa
jecxz
jnp
push
subl
inc
roll
sbb
adc
bnd
imul
add
push
xchg
xlat
mov
in
movsl
out
movsl
jo
inc
xor
cmc
call
dec
push
loop
push
cmpsb
filds
and
inc
push
cmpsb
rorb
cmpsl
pop
push
into
inc
or
enter
adc
dec
and
sbbl
mov
fidivrs
add
xor
mov
or
add
and
std
sbb
pop
jmp
push
mov
pop
dec
pop
mov
pop
push
iret
sbb
pop
inc
ds
es
xlat
mov
or
cmpb
cmp
add
sbb
cltd
test
pushf
int
xchg
mov
cmpl
cmp
cmp
xchg
sbb
push
jo
add
or
sub
jb
pop
imul
cmpsl
sbb
lock
mov
testb
dec
and
rclb
daa
push
pop
add
aas
fadds
add
dec
popf
mov
mov
xchg
sbb
es
push
in
adc
fwait
sub
imul
inc
dec
xor
out
and
inc
sub
cmp
add
add
xchg
pop
pop
jmp
or
out
mov
jb
sbb
movsl
nop
push
dec
stos
ds
or
sub
rcll
jne
xor
stos
push
lds
lcall
push
and
lods
out
dec
dec
xchg
xchg
jp
push
hlt
mov
xchg
mov
rclb
leave
sbb
stos
gs
inc
lods
movsl
push
lods
push
add
bound
mov
nop
or
adc
icebp
and
add
jp
cwtl
xchg
jb
test
aas
inc
dec
inc
cmpb
scas
push
subl
and
sub
scas
and
sti
xor
mov
scas
fs
sub
xchg
mov
mov
cmp
add
out
jo
addr16
or
sub
adcl
pop
loopne
add
dec
enter
push
rorb
xor
inc
mov
enter
out
pop
and
inc
bound
sub
or
jmp
jno
or
lahf
mov
sbb
sbb
xor
jno
iret
lods
sub
mov
jmp
data16
adc
xor
adc
push
clc
pop
mov
cmpsb
dec
movsb
hlt
subb
test
add
loopne
dec
inc
test
pop
mov
xchg
sub
mov
xchg
aam
andl
xlat
adc
xchg
jae
aam
mov
nop
fistpll
pop
insb
test
jno
push
movsb
mov
ja
push
xorl
jne
fnsave
push
push
ja
mov
sbb
and
pop
push
jo
xchg
push
adc
rolb
lds
dec
xlat
popf
mov
xchg
test
adc
sbbl
push
test
imul
adc
stc
aaa
mov
or
adc
sarb
loop
push
adc
mov
add
jns
insl
pop
or
clc
dec
or
mov
jg
dec
mov
icebp
xor
cwtl
push
sbb
int
sahf
sbb
mov
and
xor
bound
xlat
cmpsb
mov
push
shrb
mov
fisubl
jb
jb
xlat
sbb
add
leave
push
in
pop
push
push
jmp
repz
inc
mov
fbld
inc
dec
sub
inc
push
mov
lods
aam
or
pusha
jmp
xor
push
in
adc
add
or
and
test
ret
outsl
sub
add
mov
jb
mov
and
cld
cmpsl
push
in
push
xor
inc
or
lahf
xchg
or
inc
cmpb
mov
cwtl
push
imul
mov
mov
fwait
aam
jl
adcl
add
dec
and
sbb
and
inc
dec
add
add
sbb
cmp
jg
add
add
xor
insb
and
or
insl
mov
test
inc
cs
mov
add
cmp
mov
or
xchg
shll
pop
mov
adc
xchg
cmp
enter
adc
daa
and
popf
sub
push
sbb
push
sub
or
sbb
and
pop
jns
mov
arpl
rolb
mov
mov
sub
and
add
sub
sbb
add
sbb
and
int
adc
popa
add
dec
or
rol
push
xchg
adc
dec
sti
mov
imull
inc
xor
dec
xorl
aad
adc
push
inc
adc
sahf
and
sti
push
fmuls
pop
xor
dec
mov
xlat
dec
fbld
int
and
adc
fsubs
xor
push
dec
pushf
addr16
add
mov
push
mov
xchg
cmpsl
dec
arpl
lcall
test
stc
cmp
mov
rolb
xor
repz
push
addr16
lods
cmp
std
pop
fmul
out
pop
push
repz
out
scas
inc
scas
lret
push
cltd
dec
push
in
repz
push
pop
rorl
pop
fnsave
mov
aad
jns,pn
fcomi
aas
jnp
pop
insb
es
sbb
cmp
dec
push
mov
mov
sbb
enter
sbb
enter
sbb
enter
sbb
and
out
sbb
jmp
mov
or
and
mov
pop
sbb
push
mov
inc
mov
in
mov
das
mov
stos
or
adc
call
shll
cmpsl
or
adc
mov
daa
ret
movb
sti
push
adc
xor
and
subl
adc
mov
add
adc
daa
decb
rcrb
mov
ret
dec
sub
fmull
jecxz
xchg
enter
add
jne
add
clc
and
jecxz
cli
mov
outsl
sub
inc
cmp
les
clc
stos
mov
sub
loopne
insl
xlat
jne
add
pop
jb
sbb
rorb
sbb
test
stos
push
add
xor
dec
out
pop
and
add
jl
sbb
nop
hlt
hlt
dec
mov
mov
and
inc
inc
les
or
and
mov
rolb
mov
bound
pop
cmp
enter
jmp
cmp
rcrl
aas
mov
aas
mov
adc
iret
push
mov
or
and
adc
popa
nop
dec
push
das
loope
and
mov
and
clc
cs
xchg
js
scas
iret
shr
dec
enter
mov
cmp
push
in
push
stos
arpl
xchg
fldt
loop
cmpsb
sub
test
cmp
add
sub
pop
mov
dec
sub
cld
iret
jle
adc
fchs
push
add
pop
and
or
dec
xor
addr16
test
mov
idivl
sahf
sub
nop
movl
out
mov
dec
push
push
jns
out
movsb
test
mov
cmp
xchg
fmul
pop
mov
mov
xchg
in
sahf
jno
inc
inc
pop
loopne
cmp
lods
ror
test
ja
mov
mov
or
and
and
xor
sbb
cld
jmp
add
jge
or
jns
and
jne
xor
jno
inc
and
daa
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
lcall
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
jmp
mov
jmp
mov
cld
fcomip
sbb
sub
mov
jmp
mov
leave
mov
enter
sub
xchg
add
add
xor
test
leave
js
add
sbb
inc
movsb
mov
fistpll
js
insb
ja
outsl
rol
inc
dec
dec
dec
dec
pop
inc
inc
adc
mov
inc
fsts
inc
xor
or
inc
dec
lods
pop
sbb
inc
push
push
push
lods
adc
pop
push
jno
dec
popa
pop
jne
sub
data16
mov
std
xchg
mov
jp
and
add
dec
inc
mov
inc
push
mov
rcrl
xor
jae
xor
pop
or
outsl
aas
mov
add
xor
loopne
pop
dec
mov
in
nop
lret
daa
sbbb
dec
aam
pop
or
shrl
pop
call
add
popa
inc
and
dec
add
mov
pop
mov
arpl
or
add
dec
lds
test
popf
or
pushf
aaa
sbbb
shll
dec
push
cmc
add
cs
ds
or
sti
jmp
pop
and
sbb
adc
test
ja
cmpsl
adc
sub
nop
lret
cwtl
int3
pop
xchg
icebp
outsb
das
stos
push
sub
sahf
mov
sub
push
push
test
adc
inc
push
adc
jno
insb
insb
add
cs
adc
insb
inc
dec
lret
movsb
shlb
mov
mov
mov
das
sbb
cmp
pusha
int3
fisttpll
test
popa
or
mov
pop
int3
daa
fs
inc
adc
push
sub
mov
xchg
mov
or
cmova
xor
imul
mov
test
pop
jns
add
push
imul
mov
add
scas
sarl
jp
push
add
or
in
or
roll
adc
pop
mov
stos
push
or
adc
sbb
add
test
inc
lahf
xchg
pop
xlat
lea
pop
int
add
pop
es
cmp
push
std
add
iret
push
or
pop
fdivrs
add
sbb
push
jbe
adc
jnp
adc
dec
fiadds
leave
repz
dec
and
adc
adc
xorb
call
loopne
rclb
outsl
in
or
push
outsl
mov
adc
pop
je
daa
gs
je
sub
xchg
in
xor
xchg
push
or
add
fists
or
outsl
cmc
ret
dec
mov
and
pop
push
push
daa
push
lea
fimuls
aad
inc
mov
xchg
stc
add
sahf
in
inc
int3
fnstsw
pusha
lahf
mov
xchg
sub
insb
popa
sti
jg
loop
or
aaa
nop
push
xor
jns
outsl
test
inc
aas
imul
pop
mov
stc
adc
mov
notl
ss
sbb
jo
test
out
fwait
loopne
repnz
pop
das
les
push
or
or
mov
push
jl
push
cmp
cmp
int
mov
cmovge
sub
adc
daa
or
add
cmp
dec
dec
js
sbb
inc
or
in
fcmovb
dec
fcomps
aad
push
sub
sub
adc
dec
test
cmpb
gs
sbb
xor
jbe
cmp
lahf
or
and
push
dec
jae
cwtl
and
mov
leave
ret
lea
jbe
psrld
setp
dec
dec
dec
shll
rcr
maxps
mov
push
cmp
clc
pcmpgtw
add
add
jnp
js
nop
jne
push
inc
mov
xchg
sbb
je
insl
xor
push
add
xor
rcll
dec
add
loope
gs
mov
sub
lods
lods
and
xchg
cltd
or
insb
adc
xor
insl
push
xor
sbb
xor
pop
xor
xchg
cmp
push
adc
movsl
scas
push
mov
pop
out
push
cmp
shl
roll
adc
adc
push
mov
mov
ret
inc
xchg
js
pop
cmp
clc
push
push
shll
adc
and
arpl
cmpsb
or
add
fisttps
out
adc
inc
fimuls
or
jae
sub
jle
aad
scas
aad
jno
push
scas
add
mov
cmpsl
or
mov
push
xor
insl
inc
adc
pop
cmp
mov
add
insl
mov
test
dec
push
cld
dec
fs
sbb
xchg
push
add
cmp
inc
mov
fadds
sti
insl
dec
inc
gs
movsb
fwait
inc
cmpsb
test
ret
popa
jb
stos
sub
inc
bound
andl
movl
es
xor
je
cmpsl
inc
add
or
mov
and
js
sub
sub
mov
popf
adc
dec
addl
ja
xor
add
ret
pop
mov
insl
sub
pop
add
add
xor
mov
imul
or
add
pushf
lcall
xor
add
or
adc
mov
dec
outsb
jne
push
add
xchg
or
adc
xor
sbb
outsb
mov
ja
jg
lret
mov
mov
inc
addr16
mov
out
add
enter
enter
and
int3
inc
iret
out
mov
mov
les
and
cmp
push
or
outsb
inc
insb
insb
add
fdivs
mov
out
push
enter
popa
and
xor
mov
pop
xor
sub
push
add
insl
dec
je
fildl
push
push
jae
dec
push
push
pop
orl
movsl
rorl
add
mov
dec
nop
sub
or
std
push
push
adc
add
push
stos
adc
rcll
cmp
nop
mov
add
andb
or
repnz
int
sbb
inc
jns
jb
je
repnz
fisttpll
xor
xchg
dec
inc
sahf
pushf
jecxz
fists
dec
inc
loopne
ds
loope
sarl
loop
leave
leave
leave
jbe
out
sub
repnz
fs
leave
insl
jnp
lods
sub
iret
psrad
in
in
out
loopne
out
jb
xor
divb
call
insl
shld
sbb
rolb
jmp
add
mov
movsl
sbb
in
insl
int3
insb
inc
xor
out
dec
push
loope,pt
sbb
lock
jecxz
int3
add
push
rcl
or
xchg
ss
sbb
jae
sbb
mov
movsb
sub
sbb
xor
inc
das
push
seta
jo
fistl
popf
popa
mov
xchg
and
xor
je
test
lret
jo
pop
ja
es
rcll
xor
cld
leave
movsl
sub
pop
or
fs
xor
or
fs
test
nop
mov
mov
ja
je
pop
or
mov
in
sub
and
lods
or
out
mov
loopne
add
aaa
inc
and
mov
and
into
push
mov
popf
rorl
mov
leave
lcall
sbb
ret
or
sub
mov
enter
mov
adc
xchg
bound
iret
sbb
fwait
add
imul
mov
insb
and
iret
mov
pusha
xchg
dec
add
sub
fisttpl
in
push
xor
shlb
lds
pop
aas
pop
addr16
ret
adc
addr16
sbb
lret
xchg
loopne
xchg
nop
jge
xor
or
or
das
cwtl
or
mov
sub
adcb
or
xchg
jl
cmc
sbb
rolb
push
shll
fcomi
test
inc
dec
and
popa
push
jmp
into
vmwrite
cmp
lret
add
push
and
jne
ja
insl
inc
mov
mov
shll
adc
or
or
shll
dec
or
push
imul
rolb
jbe
inc
add
jg
inc
inc
cmpsl
adc
sub
bnd
push
arpl
int3
subl
test
ds
xor
stos
movsl
push
jl
and
pop
inc
cmpsb
mov
and
jno
or
sbb
into
mov
lods
aad
enter
and
and
aad
xlat
or
jns
or
add
js
add
dec
push
add
imul
jns
or
jns
mov
mov
ret
mov
outsl
add
dec
leave
or
push
imul
movsb
or
push
imul
dec
cli
jnp
adc
xlat
inc
jb
pushf
cwtl
inc
mull
and
pop
mov
je
add
dec
or
jne
jo
pusha
je
mov
mov
fists
mov
and
or
je
dec
add
or
xor
rolb
fadd
or
pop
push
mov
loop
xor
dec
outsb
popa
sbb
or
add
dec
xor
push
jge
xor
je
test
mov
call
lods
test
in
pop
repz
cltd
fisttpll
push
add
test
pusha
pop
sbb
jae
add
cmp
outsb
pop
pop
or
adc
xor
inc
push
adc
scas
add
cmp
push
add
dec
idiv
xorb
dec
scas
add
mov
sub
xor
xchg
cwtl
in
pop
imul
cmpl
or
add
push
cmpb
inc
xor
icebp
adc
add
fstp
or
or
sbb
or
cwtl
hlt
push
xchg
insb
leave
or
test
xlat
into
add
push
mov
inc
adcb
nop
or
or
push
wrmsr
mov
enter
mov
adc
or
leave
adc
xchg
iret
in
fs
sar
or
jb
fs
mov
fs
imul
add
cmp
xor
lcall
xor
xchg
iret
add
sub
xor
xor
sbb
push
mov
clc
sahf
inc
mov
pop
jne
js
add
inc
push
or
add
sbb
std
call
andb
push
dec
int
pusha
add
mov
scas
push
lods
jge
jmp
push
sbb
or
movzbl
or
pop
je
dec
in
or
insb
adc
or
aaa
add
push
pusha
cltd
int3
push
adc
outsl
or
add
inc
leave
adc
jmp
mov
jmp
aad
add
jne
popf
xor
sbb
lock
inc
jo
adc
or
push
push
sbbb
aam
add
or
or
iret
pop
sbb
push
pop
adc
sbbb
adcb
mov
sbb
fs
fs
add
mov
mov
bnd
mov
mov
cmp
jge
and
insb
dec
add
pusha
insb
cmp
movsb
jp
cmp
rcl
adc
cmp
pop
xchg
arpl
mov
xchg
loopne
add
hlt
icebp
daa
out
and
push
scas
pop
and
and
or
and
xchg
mov
adc
inc
sti
out
mov
inc
mov
fildl
daa
push
mov
roll
mov
mov
adc
adcl
xor
mov
add
inc
addr16
movsl
es
push
mov
and
gs
mov
mov
sbb
push
adc
pop
sbb
dec
lock
fwait
xchg
xchg
xchg
pop
mov
xchg
xchg
lret
adc
gs
xchg
xchg
sahf
ret
or
imul
jae
adc
adc
int3
add
test
pop
leave
repz
xchg
sbb
lods
pop
push
adc
test
adc
xchg
inc
adc
pusha
inc
dec
imul
les
or
shlb
jns
in
dec
and
gs
push
sub
push
adc
xchg
and
jb
pop
xchg
bound
pop
hlt
icebp
and
push
xlat
mov
in
adc
adc
mov
add
enter
insb
adc
push
or
pop
int3
push
sub
or
test
dec
add
bound
xchg
sti
jne
mov
pop
push
or
inc
repz
xorb
mov
in
push
sub
inc
add
xor
pop
jge
int
or
mov
loop
aas
cltd
imul
cmc
es
and
add
out
subb
push
or
jae
popa
leave
add
adc
mov
iret
inc
mov
add
test
lds
stc
jo
ret
std
das
or
adc
imul
inc
pop
inc
dec
scas
sub
fs
lea
dec
loope
test
fs
scas
subb
scas
adc
push
mov
push
push
scas
push
cld
lock
push
in
ljmp
dec
test
mov
clc
imull
movsb
data16
imul
cli
push
xchg
dec
sub
push
rorb
push
push
ficoms
cmp
sbb
push
call
aaa
je
inc
push
pop
xchg
mov
sbb
fs
inc
push
in
adc
fs
mov
cli
bound
dec
inc
ss
aaa
dec
push
adcl
insb
fstpt
push
es
or
cmp
push
sahf
rorb
xchg
aaa
adc
sub
push
xchg
mov
and
xorb
push
lods
push
cld
stos
fcoml
or
add
cwtl
pop
imulb
es
data16
clc
iret
ds
xlat
inc
push
dec
int
xorb
int
filds
aaa
inc
loopne
outsb
pushf
std
shlb
aaa
xor
bnd
mov
sahf
xchg
mov
adc
popf
fldenv
add
xor
sub
or
les
pop
add
outsb
scas
inc
pop
outsl
mov
lret
sbb
pop
jg
xchg
nop
adc
int
lods
ret
iret
mov
add
sbb
jmp
lds
das
lret
or
xor
movzbl
adc
and
pop
lcall
inc
loope
mov
out
bound
xor
or
pop
cmp
xor
fdivs
adc
push
inc
dec
test
dec
dec
mov
lcall
add
outsl
shrb
push
leave
adc
fcmovnb
push
mov
lret
push
cs
adc
inc
sub
cmpsb
add
loope
leave
rclb
xor
test
mov
jo
sbb
sarb
cs
cmp
dec
push
fsubs
fcmovnb
faddl
mov
and
fs
mov
push
stos
in
pushf
jecxz
pusha
or
dec
test
xchg
sub
mov
sub
push
mov
adc
xor
dec
cmpsb
xor
xor
fs
sbb
mov
xor
test
outsl
and
cmp
add
sub
push
les
stc
pop
mov
bound
inc
sbb
add
imul
sub
fdivrl
or
jbe
or
ffreep
dec
lods
adc
std
push
mov
adc
lods
cmp
push
adc
sbb
push
mov
repz
adc
dec
rcrb
ds
pusha
push
lret
in
out
in
rorl
dec
add
mov
sbbl
das
ja
out
mov
orb
add
add
mov
mov
ss
inc
loop
shrl
aaa
pop
pusha
sbb
mov
xor
sbb
xor
or
pusha
mov
and
mov
sub
rolb
mov
cmp
adc
cmp
xor
addb
rclb
pop
pop
fcompl
sub
mov
mov
daa
pop
shrb
sub
outsl
scas
push
pusha
mov
dec
rclb
cltd
and
or
fs
add
mov
imul
sub
and
daa
adcb
out
or
inc
cmp
add
push
sbb
je
stos
subb
and
push
mov
push
aam
pop
cli
xorb
orl
lods
mov
or
cmpl
test
shlb
jge
leave
xor
out
push
popa
sbb
pop
fwait
aad
adc
inc
mov
jecxz
outsb
adc
add
shrb
pop
shrd
sbb
push
ficoms
adc
incl
xchg
test
adc
pop
test
add
push
or
mov
mov
push
sbb
das
idiv
orb
jo
sbb
das
add
test
incl
movsl
adc
xor
dec
rcl
xchg
and
sbb
add
arpl
shll
test
dec
or
pop
or
or
sbb
movups
dec
adcb
faddl
mov
pop
adc
scas
in
cmp
pop
dec
gs
xchg
mov
repnz
add
fs
pusha
xchg
aam
sbb
fs
xchg
loopne
add
sub
adc
add
fadds
addr16
ret
lea
xchg
incl
inc
test
test
mov
inc
enter
jbe
int
or
add
bound
mov
xchg
adc
les
inc
jge
pop
das
dec
cli
loop
adc
insl
jbe
mov
pop
sub
pusha
mov
js
gs
inc
call
pop
push
cmp
shr
or
sbb
nop
cmp
or
add
lock
jecxz
push
xchg
mov
je
add
mov
jne
pop
cmp
sbb
rorl
add
loopne
dec
xchg
mov
dec
mov
adc
movsl
aaa
xchg
mov
cmc
push
add
mov
sub
mov
push
rclb
in
outsl
in
sbb
ljmp
fisttps
sbb
jl
lea
or
sbb
pop
cmp
sbb
fs
subb
push
jae
das
sbb
test
in
sbb
inc
mov
or
sbb
dec
jbe
mov
out
or
imul
mov
daa
insl
push
mov
or
mull
add
adc
mov
movsb
movsl
push
add
or
popa
sub
rolb
int3
adc
or
xor
outsl
mov
xchg
cmp
pop
das
or
and
out
jnp
insl
rorl
call
in
sbb
mov
push
mull
in
adc
lods
sets
movsl
sahf
lea
sbb
and
popa
ret
pop
xchg
sbb
mov
jnp
push
jno
inc
cmpsl
dec
sbb
dec
rolb
inc
mov
push
aaa
je
inc
or
mov
add
pop
lret
dec
or
push
jb
adc
fisubl
pop
cmp
in
stc
insl
pop
pop
lock
nop
lret
pop
mov
jb
pop
cs
add
add
or
pop
adc
insb
dec
stos
mov
cmc
pop
movsb
mov
imul
add
and
xchg
push
add
fiadds
inc
jecxz
sub
add
in
adc
inc
adc
sbb
fs
and
add
dec
mov
insb
fsubl
add
xchg
mov
and
pop
push
add
cmp
ja
or
add
adc
dec
push
xchg
mov
lods
xor
ds
jmp
pushf
fs
mov
clc
push
sub
dec
and
lret
cmp
jo
add
scas
movsl
mov
xchg
pop
mov
push
or
add
and
mov
mov
iret
test
xchg
adc
xchg
test
cmp
mov
rcrb
int3
stos
sub
hlt
add
sbbb
leave
inc
adc
pop
in
daa
imul
inc
cmovbe
add
adc
dec
mov
sar
enter
adc
mov
ret
cltd
fisubrl
movsl
pop
xor
in
xlat
pop
fnstenv
or
dec
mov
jne
jb
movsl
cmp
mov
inc
cmp
je
ss
sub
or
mov
pop
pop
push
js
pop
push
ret
jae
imull
mov
or
ficoml
into
std
imul
or
xchg
ret
adc
mov
cmp
fcomip
out
addb
cmp
mov
push
or
rolb
inc
mov
lods
insb
xchg
mov
dec
dec
jmp
scas
sub
ds
shrb
add
nop
mov
add
pop
add
xor
cmp
push
or
pop
mov
adc
add
inc
or
lgdtl
add
lahf
ret
add
mov
jns
mov
imul
mov
dec
jno
push
andb
loopne
mov
pop
dec
pop
fsubrl
mov
ds
push
adc
pop
pop
push
cmp
add
add
dec
mov
ret
adc
and
or
scas
orb
push
push
adc
in
lds
mov
xorb
test
ror
ss
in
dec
sub
lcall
pop
adc
dec
nop
sahf
imul
jmp
sub
popl
shll
popa
ljmp
jg
push
and
adc
mov
push
movsb
push
rcrb
inc
pushf
xor
hlt
dec
sub
inc
cld
pop
pop
arpl
sub
cmp
dec
jo
fisttps
mov
jae
push
dec
sbb
repnz
fcoml
in
and
stc
les
adc
in
dec
or
add
fs
popa
inc
jg
das
jp
xchg
inc
mov
dec
mov
movl
jno
pop
adc
xorl
push
mov
imull
enter
or
pop
aaa
inc
dec
lock
adc
pop
arpl
xor
dec
mov
sub
adcb
sahf
add
cltd
std
mov
sbb
or
mov
sbb
sub
inc
fnstenv
xchg
adc
mov
jmp
and
adc
dec
js
dec
lcall
js
outsl
adc
dec
cmpb
jne
cmp
rorb
fsts
and
or
mov
add
mov
jecxz
or
dec
cwtl
adc
clc
jo
dec
or
pop
rorb
test
filds
rol
add
lock
adc
xorl
pop
negb
inc
lock
int3
and
addb
orb
jecxz
and
adc
cmp
jg
outsb
daa
inc
jno
scas
nop
mov
cmpl
cld
add
daa
fs
lock
or
xchg
jae
and
fadds
imul
fstps
lcall
mov
dec
mov
jae
push
mov
sbb
fucomip
clc
push
lds
inc
mov
mov
adc
dec
pop
loop
mov
lock
sahf
movsb
cmp
popa
mov
out
in
add
pushf
arpl
jmp
rcl
das
data16
and
dec
loop
and
adc
shl
inc
xor
push
mov
add
lret
mov
and
and
lock
fsubrl
popa
push
sub
xlat
jns
ja
or
inc
adc
test
adc
aad
push
adc
xor
and
add
xor
les
push
in
inc
and
dec
stc
adc
or
adc
aad
pusha
outsl
andb
xor
push
fimull
xchg
dec
pop
or
lahf
push
sub
jle
push
or
shlb
jmp
idivl
sub
or
cmpsb
jge
mov
mov
test
idiv
jmp
cwtl
mov
imul
fwait
sbb
pop
jae
inc
cld
mov
or
mov
adc
add
or
inc
cmp
mov
out
js
cmp
pop
je
adc
sub
or
mov
jne
out
push
push
add
sbb
clc
sbb
xchg
sldt
or
movsl
fisubrl
cltd
add
pop
or
push
add
fistpl
push
push
popf
out
sahf
pop
jo
mov
cmpl
in
mov
lahf
pop
mov
or
fst
add
pop
add
sub
outsl
test
fdivs
xor
mov
lock
xlat
sub
cltd
pop
cmp
loop
dec
xor
sub
jb
jmp
add
jg
cwtl
fistpl
lock
ds
shr
jae
push
adc
mov
mov
mov
pop
aad
mov
mov
ret
mov
push
dec
sub
xorl
cmc
sbb
ja
outsb
sub
iret
inc
ss
jbe
jae
adc
cwtl
insl
mov
and
push
or
add
inc
js
mov
lcall
je
pop
sbb
and
and
lods
push
loop
ret
adc
jbe
mov
gs
or
lcall
sbb
mov
dec
je
adc
mov
inc
fildl
cmp
sbb
fsts
add
inc
ja
or
add
or
or
or
add
fiadds
loope
xchg
jle
add
pop
aad
adc
add
lock
sub
adc
push
lock
sti
jbe
and
ss
je
cmpsl
stc
cmp
mov
sub
jl
js
and
idiv
fisubrs
xor
lahf
push
sub
mov
fdivl
mov
pushf
adc
add
dec
push
sub
js
out
and
push
dec
out
jbe
cltd
dec
es
addb
sub
fwait
bound
xchg
cmp
xor
mov
pop
les
je
enter
inc
add
xlat
ss
in
mov
js
jmp
mov
sub
push
cwtl
leave
jo
and
sbb
pusha
ret
inc
add
hlt
pop
sbb
or
out
jo
imul
mov
push
pusha
ja
mov
cmp
push
push
pop
mov
adc
decb
and
and
xor
xchg
push
out
fnstenv
add
into
push
dec
fimuls
push
cmpsl
xor
pop
enter
adc
mov
add
or
dec
sub
mov
inc
out
pop
add
lock
fdivs
and
mov
sbb
add
xchg
dec
lods
movsb
rol
dec
sbb
test
mov
addb
and
push
or
and
repz
xor
in
adc
repnz
cmp
insb
enter
imul
or
mov
mov
xchg
test
movsb
inc
sub
xchg
test
adc
adc
xchg
dec
cmp
dec
adc
or
in
xor
int
inc
popa
mov
add
mov
mul
shlb
nop
and
es
and
aaa
push
or
sbb
rcll
adc
xor
inc
mov
inc
mov
xor
pop
mov
aad
or
movb
lods
add
adc
mov
sub
pop
sub
add
lcall
aad
cwtl
mov
call
out
cld
push
sbb
ret
or
and
clc
push
inc
xchg
cltd
mov
orl
mov
lret
xor
andb
mov
mov
sub
mov
jne
cmp
dec
jne
push
dec
or
xchg
and
fstpl
adc
insb
sub
arpl
sub
inc
sbb
mov
cld
dec
decb
dec
cmp
push
sti
ficomps
outsb
add
ret
dec
jnp
lea
mov
fiaddl
inc
or
sub
add
insb
xchg
or
and
movb
outsb
cmp
or
test
add
adc
add
cmp
add
filds
je
jne
je
add
pushf
mov
popa
int
push
sbb
nop
out
jecxz
dec
sbb
lods
inc
dec
dec
cwtl
shr
int
add
jbe
add
and
in
fldl
iret
push
jo
dec
adcl
es
mov
sub
clc
es
sub
imul
adc
pushf
mov
sub
scas
adc
fdivrs
insb
sbb
add
fs
dec
rorl
sub
ljmp
and
negl
mov
push
jmp
add
pop
push
fldt
nopl
inc
fcoml
add
sub
sub
in
loopne
movsb
add
or
int
call
cld
xchg
mov
push
cmpl
out
bound
movsb
jae
mov
dec
dec
mov
adc
jge
and
cmp
daa
daa
mov
ret
cwtl
xor
out
cmpsl
dec
std
mov
push
nop
xor
insl
and
cli
mov
adc
inc
js
pop
fwait
and
dec
push
shrb
dec
inc
dec
push
mov
pusha
sbb
or
pop
enter
nop
inc
lods
jae
jns
mov
mov
mov
es
pop
mov
shl
rcl
lods
xor
and
das
ret
mov
add
or
push
push
mov
or
cmp
mov
aas
shl
ffreep
and
adc
and
pop
dec
in
and
sub
roll
sub
stos
out
and
push
xor
jo
cmpsl
inc
imul
and
sbb
mov
push
sub
das
add
shrb
in
push
adc
shll
dec
or
xchg
mov
pop
inc
sub
mov
lret
inc
mov
pushf
loop
add
insb
mov
mov
lahf
sub
fbstp
test
jne
imul
aas
les
mov
je
fiadds
jns
movsb
xchg
mov
jmp
dec
jp
cmc
or
dec
add
add
and
push
add
sub
sbb
sub
fidivl
inc
dec
je
adc
pop
movsb
test
cmp
xor
add
sub
stos
or
enter
push
push
addb
lods
sbb
and
jp
test
push
mov
xchg
hlt
dec
jg
push
adc
push
xor
xchg
pop
enter
sbb
mov
sub
fsubrl
and
jne,pn
test
lods
inc
push
rcl
mov
mov
call
pop
or
pop
xor
and
mov
xor
pop
aam
test
push
adc
xor
push
ret
mov
jecxz
movsb
movsl
or
shll
pop
cmpsb
adc
xor
push
repz
fstl
bound
xor
pop
enter
adc
inc
pop
cmpsb
fildl
es
call
in
jae
lods
addr16
mov
ss
sti
les
loopne
inc
jecxz
adc
xor
inc
inc
faddl
seto
mov
pop
sub
cmp
jne
outsl
and
mov
jle
cmp
jmp
xchg
and
cmp
fadds
or
popw
jmp
mov
dec
daa
in
jl
in
and
xchg
shlb
adc
lcall
inc
nop
adc
and
inc
repnz
add
and
inc
or
repnz
hlt
mov
es
sbb
xchg
cmp
arpl
jo
mov
je
or
xchg
pop
xchg
and
addb
jecxz
add
imul
mov
pop
adc
rcrb
xor
insl
gs
add
pusha
cmp
xor
adc
aaa
cmpsb
or
push
fldenv
int3
ss
mov
dec
pop
or
sbb
push
xchg
or
xchg
dec
push
hlt
mov
call
push
mov
out
add
jo
sarl
adc
mov
or
jnp
pusha
pop
mov
inc
push
test
mov
sub
scas
das
add
lret
push
fldl
adc
xchg
js
loopne
mov
and
adc
hlt
mov
sub
or
aaa
and
rcrl
loopne
lods
sbb
add
movaps
push
inc
pop
enter
sub
push
fstpt
stc
adc
test
addb
jo
adc
jg
push
ja
sbb
jmp
inc
xchg
mov
mov
je
scas
mov
clc
cmp
je
add
pop
add
jl
and
inc
add
popa
divb
adc
int3
and
or
cld
sbb
adcb
mov
imul
pop
adc
mov
or
ss
xor
enter
imul
lods
and
inc
mov
dec
dec
insb
and
or
cmp
mov
adcl
sbb
inc
out
test
or
sub
or
add
dec
cld
fbstp
sub
inc
inc
jge
dec
pop
rolb
sub
cmp
or
test
adc
aas
cmpb
mov
mov
adc
sub
mov
aaa
adc
jno
pop
ror
pop
and
aas
mov
push
push
test
or
inc
dec
movsl
sbb
loopne
daa
clc
popa
or
repz
cmp
imul
mov
pop
pop
jmp
inc
imul
rcrl
leave
sub
sbb
jne
push
nopl
push
test
mov
push
cmp
and
xchg
cmovge
call
cmp
inc
xor
pusha
lock
in
mov
jmp
cmpsl
and
jo
cmp
cmc
jno
addb
dec
adc
mov
pop
xor
push
scas
fs
insb
dec
pop
pop
mov
movsl
and
dec
shl
mov
jl
imull
cmp
sbb
xchg
sbb
xor
push
or
or
jmp
or
xor
mov
int
add
and
add
fstpl
cwtl
test
inc
inc
movl
pop
pop
and
js
or
sbb
pusha
mov
mov
nop
dec
sar
das
add
mov
aaa
push
dec
js
sbb
mov
cmp
sub
sbb
sbb
mov
sub
fidivrs
loopne
nop
loopne
inc
inc
popa
clc
out
xor
add
mov
adc
pop
mov
cmp
fnsave
test
leave
inc
out
push
adc
add
ja
adc
stos
push
adc
ss
test
andb
xchg
add
jl
jecxz
cmp
jmp
pop
addr16
sbb
add
xlat
sbb
loopne
loope
jb
stc
lret
inc
cmp
outsb
xor
xchg
stc
and
leave
dec
sbb
rorb
rcrb
inc
push
jl
fcoms
sub
es
mov
mov
icebp
add
subb
sub
cld
xchg
int3
sub
cs
loope
pop
ffree
sbb
iret
addb
test
or
cmp
add
dec
add
dec
sti
inc
fcoml
mov
sub
clc
mov
stos
aas
shll
aas
cmovo
pop
or
cwtl
cs
push
and
sbb
sub
jge
popa
ljmp
out
sub
add
pop
and
stos
jecxz
in
imul
pop
repnz
movsb
jmp
push
xor
loopne
fildl
inc
ss
sarb
andb
cs
pop
or
andps
sbb
fldt
dec
leave
sbb
insb
or
notl
and
sub
subl
movsb
rorb
dec
fs
or
imul
dec
xchg
dec
bound
pop
adc
mov
or
sbb
cmp
adcb
jge
adc
xlat
sbb
arpl
mov
and
fnsave
or
dec
lock
mov
hlt
outsb
insb
dec
in
movsb
aaa
add
or
mov
add
and
sub
cs
add
dec
or
lods
mov
call
mov
movsb
jge
add
arpl
shl
add
push
cmpsl
adc
loop
mov
lea
push
mov
sbb
pop
xchg
pop
leave
adc
fs
cmp
push
loop
mov
out
or
enter
notl
xor
pop
push
xchg
xchg
or
jno
xor
jnp
inc
cmp
mov
andl
adc
je
cmp
mov
inc
adc
sub
nop
and
pop
je
lock
fwait
xor
sub
fisttps
mov
sub
fwait
insl
pop
push
xor
packuswb
emms
adc
pop
jnp
outsb
push
sub
xchg
dec
rcrb
and
fistl
dec
or
inc
dec
lock
add
adc
fildl
mov
hlt
cmpsb
mov
insl
lock
movsl
add
adc
adc
loope
adc
sub
leave
cmp
sub
std
aaa
inc
xchg
test
pop
dec
push
mov
add
and
inc
inc
hlt
in
aad
jb
shl
hlt
and
push
jo
pusha
sub
jb
popf
bound
pop
in
jb
mov
sub
jns
movb
add
mov
in
pop
movsl
dec
fcmovbe
xor
rol
mov
es
int3
push
fdivl
pop
or
lock
add
sub
fmull
lcall
inc
dec
push
or
arpl
insb
jae
xchg
clc
push
mov
arpl
mov
and
pusha
mov
and
mov
push
sbb
mov
and
adc
or
fnstcw
pop
adc
xorb
inc
orl
sbb
xchg
out
xor
out
adc
popf
xor
mov
sarb
loop
inc
jmp
mov
xchg
sbb
mov
adc
push
add
xor
daa
inc
mov
bound
or
ja
adc
or
cs
mov
cmc
cltd
adc
sub
pop
js
push
pop
idivl
jns
jne
testb
pop
scas
mov
ja
mov
push
jbe
cmp
xchg
mov
jne,pt
adc
push
mov
dec
rorb
adcl
test
add
sbb
in
or
in
in
pop
popa
push
or
jmp
xchg
xlat
lcall
ja
mov
or
adc
add
add
add
adc
pop
mov
sub
adc
sarb
add
ret
pop
push
push
es
sub
fsubl
jmp
add
jnp
and
xchg
popa
adc
sub
jno
push
sbb
push
dec
dec
sbb
xchg
and
mov
fs
sti
adc
ja
inc
add
and
add
pop
test
push
shrl
call
sbb
push
sub
or
or
cmpsl
xor
nop
dec
pop
or
mov
lods
pop
xchg
lahf
or
or
stos
pushf
sbb
repnz
pop
mov
sahf
mov
nop
scas
aas
call
inc
fcoms
aaa
dec
ja
dec
pop
push
arpl
idivl
push
sbb
or
enter
dec
aas
orb
mov
lods
loopne
xchg
cmpsb
and
or
out
ret
hlt
xchg
dec
jl
sub
pusha
addl
sub
xchg
call
orl
cmp
clc
iret
repnz
sbb
ljmp
and
test
inc
jo
mov
add
pusha
lds
cmp
insl
and
add
pop
mov
dec
jno
shlb
arpl
bound
shll
add
cmp
movsl
adc
or
jno
mov
adc
sub
adc
xor
inc
movsl
into
int
adc
fiadds
mov
mov
adc
flds
xor
or
jne
dec
lock
or
or
mov
xlat
xor
rclb
jge
dec
pusha
sbb
mov
pop
jmp
dec
and
mov
push
mov
aaa
jne
int3
cmpsl
ljmp
cs
mov
test
jbe
cmp
ja
push
and
cmpsb
jmp
or
js
roll
outsb
add
nop
push
pop
aam
add
push
mov
rorl
lahf
mov
adc
addr16
sbb
xor
sub
adc
ret
das
mov
jne
incl
out
mov
or
jno
outsb
push
jl
call
pop
xlat
neg
bound
xor
faddl
cltd
fs
aam
je
sub
mov
jns
dec
lea
cltd
adc
imul
pusha
adc
fs
adc
in
iret
outsb
mov
xchg
and
and
ret
pop
addr16
jecxz
sub
leave
mov
pop
in
pop
into
jge
movsb
lcall
sbb
jmp
pop
jae
addb
shrb
add
shrl
push
addb
testb
cmp
inc
notl
mov
iret
clc
stos
jne
inc
mov
lock
mov
fwait
add
inc
imul
or
in
sbb
outsb
jns
xor
mov
sti
aam
ret
dec
sbb
dec
mov
nop
mov
arpl
lock
bound
inc
jne
inc
les
pop
mov
and
sbb
and
or
and
shll
or
test
pop
mov
in
add
into
dec
imul
sbb
shlb
cmpb
inc
mov
jns
or
xor
je
lods
dec
cmpb
add
outsl
loop
loope
movsb
mov
inc
cmp
cli
sub
testl
lea
aas
pop
and
pop
cmp
jbe
rcl
inc
cmp
pop
js
lods
inc
jge
popl
adc
and
or
std
js
ret
ret
push
inc
or
jmp
push
cld
push
fcompl
sbb
fldenv
xor
jbe
xchg
jle
cmp
fistl
push
bound
dec
js
mov
mov
dec
movsb
push
mov
inc
add
imul
aam
add
mov
and
test
movsb
popa
mov
rolb
xchg
insl
and
sbb
sbb
loope
test
cmp
xchg
mov
inc
cwtl
nop
nop
and
xchg
movsb
jns
pop
imul
xchg
arpl
push
subb
or
adc
lods
sub
leave
rol
xor
dec
or
jecxz
mov
xchg
popf
dec
mov
sub
mov
js
cmpsb
mov
shrl
fildll
mov
insb
inc
xor
xor
pop
ljmp
imul
sbb
push
adc
and
sub
mov
repz
adc
daa
jp
shrl
dec
stos
addl
adc
mull
and
test
leave
sbb
cmp
dec
sbb
int3
mov
dec
sarb
cld
or
mov
sbb
scas
lock
fs
mov
xchg
out
imul
xorb
sub
lods
adc
mov
sbb
mov
pop
push
dec
adc
popa
out
add
xchg
sub
lea
mov
mov
js
icebp
sbb
cmp
adc
mov
or
dec
push
adc
add
pop
push
test
and
or
adc
inc
sbb
lret
jb
adc
in
or
nop
adc
mov
push
ret
xchg
stos
lret
mov
loopne
inc
ficoml
dec
aaa
cmp
xchg
pop
mov
adc
add
dec
sub
push
pop
lahf
popa
or
nop
add
sbb
pop
dec
or
push
mov
pop
test
add
or
mov
out
xchg
xchg
outsl
dec
imul
and
dec
sbb
adc
test
movsb
insb
fdivrl
cmp
or
pusha
xor
and
andl
pop
mov
mov
inc
adc
xor
add
leave
aaa
mov
fucomip
mov
lods
pop
pop
xor
inc
inc
ljmp
add
scas
repnz
xor
mov
adcb
subl
leave
leave
ret
imul
pop
push
in
test
xchg
jmp
cli
sub
dec
outsb
and
pop
add
pop
mov
sbb
fdivs
and
or
add
adc
dec
add
sub
add
pop
cmp
xor
add
ret
jmp
jg
popa
or
xor
mov
clc
jno
addr16
push
or
sub
dec
jb
push
jno
pop
pop
insb
pop
test
nop
pop
nop
pop
or
nop
sub
push
jbe
xorb
inc
xor
mov
xor
rclb
inc
push
sahf
pop
cmpsb
pop
es
rcrb
lock
cltd
adc
mov
jmp
mov
and
pop
pop
sbb
xlat
fsts
test
xchg
inc
mov
and
xchg
daa
push
jae
push
adc
adc
dec
and
cmp
punpcklbw
nop
or
je
pop
push
mov
mov
dec
mov
dec
mov
mov
inc
cld
pop
sbbl
xor
xchg
sahf
subb
dec
push
cmp
fs
pop
adc
pushf
pusha
mov
mov
enter
inc
cmp
adc
nop
inc
or
sub
inc
popa
sbb
in
pusha
popa
or
push
push
or
inc
inc
sahf
dec
mov
enter
ret
addb
push
bound
lahf
inc
enter
lahf
xor
inc
and
mov
daa
mov
hlt
fisttps
lcall
mov
or
fistpll
insl
sbb
cmpl
pop
mov
push
and
imul
sbb
rorb
es
insb
pop
cs
and
arpl
sbb
aad
xchg
dec
lcall
or
mov
sbb
mov
inc
aas
push
sbb
dec
ljmp
movsb
cmp
push
in
mov
xchg
sbb
and
mov
movsb
cmp
int3
dec
fs
jmp
jbe
jae
xor
dec
xor
xor
and
pusha
les
rol
imul
lcall
sub
dec
lds
inc
jbe
test
nop
and
lret
stos
aaa
fstpt
xchg
lods
pop
dec
sub
fldcw
dec
xchg
jmp
xlat
fsubrl
andb
sarb
mov
or
push
xor
rcl
or
mov
dec
mov
sub
cmp
jae
arpl
sbb
in
fstpl
pusha
dec
ds
cmpsb
pop
and
add
rol
leave
xlat
push
mov
xchg
les
fsubrs
ret
cmpsl
and
hlt
imul
pop
data16
inc
test
fbld
mov
cld
out
mov
sub
idiv
mov
subl
mov
adc
pop
adc
mov
scas
mov
mov
lock
pop
clc
cmp
cmpsl
sub
insl
fwait
dec
xor
jns
dec
add
lret
or
addr16
stos
adc
cmpl
sbb
cmp
add
add
add
pop
lcall
mov
adc
push
adc
adc
and
int
fsubl
push
ja
test
add
sub
fstpt
pop
jbe
push
jnp
iret
fists
and
push
lods
sub
push
inc
mov
test
cwtl
lahf
pop
imul
in
mov
cltd
leave
push
jb
pop
mov
lret
dec
inc
nop
or
xor
mov
add
scas
dec
add
into
shlb
sbb
xchg
push
pop
add
xchg
loopne
gs
push
sub
stos
loopne
test
push
xchg
stos
fdivp
inc
sbb
pop
or
add
gs
das
imul
scas
test
push
imul
inc
cs
mov
xchg
pop
xor
xchg
enter
iret
fildll
leave
and
insb
and
or
dec
insb
insb
push
pop
cmp
adc
or
cld
add
xchg
mov
add
add
push
testb
or
shlb
add
add
push
dec
out
inc
mov
enter
insl
outsb
in
jns
jnp
jbe
lea
or
adc
sbb
out
sahf
out
xor
xchg
pop
bound
lcall
into
and
adc
loopne
pop
dec
in
cmp
dec
add
dec
in
ss
sahf
lret
and
adc
adc
lcall
xor
or
adc
and
xchg
dec
push
sub
lret
ja
jo
jno
aam
sarl
pop
ret
outsl
pop
add
push
fbstp
in
inc
clc
pop
inc
enter
cmpsl
cmp
and
mov
dec
and
std
imul
inc
loop
loopne
add
imul
jno
add
mov
loopne
popa
ds
mov
push
add
inc
xor
repz
int3
into
arpl
mov
push
ss
es
ja
fdivrs
pop
push
mov
aad
inc
loopne
popa
fldl
rcrl
into
mov
shlb
mov
xor
mov
pop
ss
mov
jmp
andb
movsb
jo
push
push
sbbl
sub
fiadds
push
jae
dec
lods
mov
popa
xor
pop
jmp
pop
int
sbb
jne
es
dec
lods
mov
cmp
imul
sub
imul
andl
adc
das
or
imul
cwtl
or
dec
rolb
inc
mov
push
mov
xchg
xor
xchg
fisttpl
adc
xchg
or
pop
push
push
push
js
dec
leave
dec
and
iret
xor
adc
mov
ja
lods
fsubrl
hlt
push
test
mov
std
add
mov
in
aas
jbe
xchg
into
jmp
and
push
and
and
les
adc
lea
cmp
adc
push
or
lret
xlat
xor
gs
mov
in
xchg
add
and
or
jge
rolb
cli
or
call
dec
ja
push
ds
add
ja
out
mov
jg
lcall
loope
pushl
pop
int3
mov
ret
sbb
int3
push
cmp
adcb
fs
ret
and
movsb
dec
add
and
shrb
dec
jmp
mov
jmp
outsl
mov
out
ficoms
arpl
sub
add
out
pop
and
jl
lds
cmp
clc
hlt
cld
cld
imul
mov
push
jmp
rorl
je
inc
or
addr16
xchg
sub
xchg
stos
cld
aam
arpl
js
jne
sbb
cmp
fists
cld
popf
or
hlt
sbb
xor
sbb
adc
nop
cmp
pop
js
xchg
sbb
mov
out
incl
fwait
clc
loopne
xor
lahf
loopne
les
push
add
fdivl
pop
xchg
or
movsb
or
mov
nop
lcall
loop
adc
push
cmp
and
pop
mov
cmp
adc
mov
sub
test
push
cmp
and
jnp
sub
cmp
pop
inc
xor
sub
or
jne
repnz
nop
sub
add
xchg
push
rolb
outsl
jl
and
lea
mov
cmp
inc
in
and
mov
movl
or
sarl
hlt
pop
ja
cmpxchg
inc
ds
call
inc
add
fbld
rorl
ss
mov
rol
cmp
pushl
loop
sbb
mov
adc
mov
out
or
and
inc
mov
test
sbb
xor
int
aaa
mov
adc
test
andl
adc
jecxz
inc
out
decl
pop
rclb
pop
adc
push
pop
xor
jno
movsl
push
iret
out
jbe
adc
pop
test
ret
pop
push
sub
lods
dec
nop
mov
outsl
xchg
nop/reserved
xchg
and
adcb
push
cs
and
shrb
aas
inc
loop
int3
das
lock
movsb
inc
daa
inc
mov
pop
stos
rol
sub
ret
push
xorb
push
inc
rolb
and
push
movsb
adc
mov
mov
xor
dec
test
xor
xchg
pop
add
or
pop
push
adc
jecxz
mov
arpl
mov
ja
or
mov
dec
mov
mov
dec
cmp
iret
leave
fisubl
sbb
and
push
loope
cmp
mov
stos
cmpsl
inc
pop
test
test
sbb
shll
push
test
sbb
pop
je
stc
xor
sbb
les
clc
leave
mov
daa
imul
movsb
loopne
push
or
test
loope
lahf
xchg
movsb
add
test
inc
push
pop
inc
test
sub
pop
faddl
test
pop
sbb
pop
inc
sbb
add
mov
orl
pop
mov
arpl
adc
lods
fisttpll
out
outsl
xchg
add
sbb
sbb
jp
or
jl
inc
sub
and
ss
stc
cmpsb
sub
out
movsb
fmull
imul
lahf
sahf
jge
add
mov
mov
dec
mov
adc
sbb
adc
rorb
mov
popf
and
and
and
js
and
dec
cmp
cli
inc
push
sbb
ret
les
sbb
insb
arpl
movl
test
rcrl
push
in
in
xor
test
mov
stc
ljmp
xor
clc
pop
add
and
push
adc
pop
dec
jge
insb
addl
xchg
sub
add
addb
or
idiv
stc
and
adc
jecxz
mov
jle
mov
cltd
add
xor
sbb
rcrb
adc
jmp
fisubl
xor
hlt
mov
jle
hlt
adc
xor
fldl
shll
jo
bound
inc
push
cmp
jge
in
pavgw
adc
rolb
xlat
out
push
pop
popa
test
int3
ja
call
into
enter
mov
mov
popa
in
insb
popf
cld
ret
dec
les
sub
xor
pop
and
xchg
pop
sbb
lea
adc
int3
inc
sub
test
inc
daa
and
sbb
jno
adc
or
adcb
and
scas
push
je
orb
sbb
jno
xor
jbe
jle
ret
out
mov
mov
es
test
fcompl
sbbl
sahf
cld
push
sbb
sbbl
inc
ror
push
xchg
dec
ficoml
aam
lcall
mov
mov
push
jl
cmpl
dec
push
and
pushf
and
push
cli
and
xchg
fwait
pop
leave
shll
jecxz
sbb
pop
adc
add
or
nop
lock
mov
mov
dec
stos
daa
sbb
add
or
mov
mov
mov
and
les
orb
stc
sub
push
xchg
mov
nop
xchg
jns
or
jp
and
add
or
inc
pop
xor
pop
ficomps
adc
dec
or
push
ja
jmp
xchg
add
or
arpl
and
shlb
pop
xchg
and
or
cmp
mov
add
cmpsl
daa
sub
push
sub
es
mov
in
xor
int
daa
xchg
cmpl
test
iret
mov
test
mov
and
sbb
rcl
cmpsb
push
les
leave
test
cmp
sbb
inc
xor
addr16
mov
mov
mov
insb
inc
push
dec
shlb
xchg
sbb
sub
jmp
mov
sbb
jmp
inc
adc
or
fucomp
mov
bound
xlat
pop
sbbb
mov
jnp
and
ficomps
fs
out
jp
mov
push
cmp
rorb
aam
popa
ret
xlat
popa
ret
inc
lods
hlt
adc
or
push
adc
popl
mov
scas
push
adc
adc
xchg
push
jne
loopne
jp
adc
test
xchg
cmp
add
adc
mov
data16
mov
nop
mov
push
iret
xchg
dec
adc
inc
repnz
xorb
mov
in
fildl
mov
dec
out
aas
adc
xchg
adc
jbe
shrl
loopne
push
testl
dec
jnp
adc
rcr
jmp
lea
lods
movb
addb
js
cmpsb
js
imul
sub
xor
sbb
push
inc
lock
jae
fwait
adc
and
aaa
inc
mov
es
out
lret
mov
xor
adc
sub
cltd
mov
cmp
add
xchg
movsb
adc
adc
inc
pop
stc
mov
push
push
or
mov
inc
inc
iret
mov
fstps
and
loope
data16
adc
lock
leave
jo
dec
push
adc
mov
dec
es
xor
adc
out
dec
jle
lods
pop
addl
gs
in
sub
jne
or
inc
xchg
jo
dec
dec
aaa
adc
call
mov
movb
add
pop
pop
jbe
mov
adc
arpl
sbb
xor
inc
cmpsl
jl
cwtl
int3
or
or
rcll
pand
shl
push
pop
mov
cwtl
subb
insb
dec
sbb
inc
mov
ret
leave
xchg
add
adc
aaa
add
push
nop
lea
imul
and
imul
nop
and
and
jo
inc
inc
sbb
and
dec
or
pop
mov
push
lea
and
dec
sbb
and
pop
les
pop
push
xor
or
inc
push
pop
lret
push
jno
lods
nop
xor
mov
jb
add
test
lods
sub
cmp
jae
adc
insl
loop
cmp
mov
dec
test
imul
imul
nop
xorb
int
mov
cmp
jle
adc
dec
jp
add
push
jg
adc
or
out
mov
xchg
dec
pop
test
add
jle
xchg
test
in
sbb
pop
pop
push
push
leave
or
popa
adc
jge
cmp
jle
or
adc
and
push
add
mov
ja
loope
les
or
add
adc
xchg
out
xorb
mov
pop
add
hlt
push
push
push
and
jns
out
cs
dec
pusha
insl
rcrl
dec
fnstenv
aad
sbb
clc
jl
xabort
dec
addl
fbstp
jmp
mov
add
pusha
data16
sbb
jne
push
and
dec
adc
shl
pop
jmp
xchg
adc
or
cs
xor
adc
cmp
add
push
jb
popa
lret
sbb
rolb
je
iret
and
sbb
mov
incl
movsl
jmp
repz
xlat
clc
push
lret
les
add
pusha
idivb
mov
and
jne
sbb
jmp
outsl
pop
das
shrb
imul
xchg
cmpsb
mov
aaa
cmp
push
or
fidivrs
mov
adc
inc
lea
sti
mov
je
push
hlt
cmp
jno
pop
shl
shlb
nop
dec
sbbl
les
jae
sbb
jae
clc
mov
add
cmp
xchg
jle
add
pop
sub
aas
es
cmp
dec
inc
add
jmp
push
jle
mov
sub
mov
add
pop
stos
lret
xchg
je
bound
cmp
pushf
hlt
fisubl
xchg
add
pop
pop
add
lcall
sub
inc
pusha
fincstp
mov
inc
das
dec
add
xchg
push
lock
mov
ss
mulb
sub
pop
icebp
jb
cmc
xor
or
push
push
mov
xor
pop
adc
in
loopne
pop
adc
js
leave
push
push
leave
push
cmc
in
xor
dec
je
hlt
imul
movsb
cmp
add
sbb
ja
cmp
loope
mov
adc
mov
adc
in
mov
shr
and
xor
pop
push
mov
mov
mov
and
cmp
mov
inc
loopne
fdivrs
xchg
mov
nop
xor
add
adc
lds
dec
adc
and
in
add
mov
arpl
fmul
sbbb
or
sub
inc
xchg
push
inc
ja
mov
jecxz
cmp
mov
adc
fisubrs
jmp
push
dec
adc
cmp
cmpsb
xchg
shll
jo
fnstsw
loop
and
mov
mov
cmp
sar
dec
or
je
add
fwait
loop
test
sub
push
andl
lock
popa
popa
push
jmp
mov
ja
inc
nop
cld
pop
mov
jecxz
mov
sbb
xchg
dec
jmpw
fucomi
adc
rclb
dec
das
jo
xchg
adc
clc
add
out
nop
addr16
leave
cs
add
add
rorb
shlb
outsl
pushf
cmpb
jne
mov
cmp
aas
or
cmp
out
inc
xchg
push
push
and
mov
and
and
push
push
and
sub
fbstp
push
xchg
ret
dec
push
mov
rclb
in
lods
and
xlat
jmp
or
out
and
sbb
dec
push
pop
sbb
sbbl
sbb
test
mov
mov
dec
adc
and
loopne
sbb
pop
sbb
movsb
inc
xor
mov
sbb
mov
inc
loope
fcomp
jnp
pushf
add
scas
dec
mov
jnp
xchg
or
or
arpl
push
outsl
and
dec
icebp
jle
dec
sti
into
sbb
xchg
mov
daa
or
pop
movsb
movsb
inc
jge
popa
bound
xlat
int
call
xlat
test
mov
fldcw
movsl
cmp
popf
push
lahf
fcmovne
data16
cmpsl
je
std
mov
mov
pop
xchg
insb
mov
mov
fistpl
loope
sub
mov
or
mov
mov
inc
xchg
xor
pop
ret
addl
xor
inc
cltd
xor
sub
test
jnp
xor
adc
loope
xor
movsl
or
sahf
adc
addr16
xor
lahf
inc
call
daa
or
dec
or
inc
mov
or
jecxz
xchg
mov
pop
or
mov
pop
add
or
setle
arpl
adc
inc
add
cmp
pop
add
js
lcall
jnp
sbb
iret
xchg
loope
adc
shll
mov
pop
movsl
cltd
fcomps
sub
lea
addl
or
push
xchg
dec
into
jbe
jle
sub
fsts
mov
ficompl
add
sbb
or
sub
repz
sbb
rolb
add
lds
jecxz
xor
call
adc
in
jb
xchg
add
adc
loopne
cwtl
xchg
pop
lret
jg
scas
push
icebp
mov
jmp
pop
pop
fwait
stos
jge
adc
out
movzbl
aas
mov
xor
adc
dec
gs
fmul
xor
enter
and
es
xchg
push
pop
adc
shlb
push
repnz
adc
pop
scas
xchg
sub
test
int3
int3
and
mov
and
fmuls
add
adc
mov
les
pushf
outsl
jb
sbb
sbb
rol
cmpb
jmp
fwait
sub
ret
mov
xor
sbb
inc
sarl
add
jmp
mov
jmp
xchg
push
mov
mov
inc
sbb
mov
and
push
sbb
xor
push
aas
test
icebp
mov
aam
add
sbb
jnp
adc
inc
or
aaa
adc
xorl
sbb
cmp
dec
sbb
sub
inc
cmpsb
cmp
or
add
adc
sbb
sub
or
xchg
mov
jmp
pop
and
test
cld
nop
in
dec
jp
lods
lods
lods
sub
inc
push
lods
lods
sub
test
ret
cltd
and
fdivs
inc
sbbl
push
add
xchg
dec
adc
adc
sbb
movsb
outsb
pop
mov
jne
add
movl
sbbl
xor
adc
mov
enter
inc
mov
mov
add
sub
push
jns
leave
dec
xchg
and
loopne
dec
cltd
sbb
pushf
dec
cli
mov
push
lea
jecxz
and
sub
push
and
jns
sbb
mov
push
jb
rcl
inc
mov
dec
test
jge
add
dec
jmp
push
cld
add
ds
inc
or
clc
xchg
inc
shll
fistl
enter
xchg
cmp
jo
cmp
push
jb
or
jo
xor
cmp
nop
pop
jb
and
adc
and
pop
dec
mov
xchg
gs
or
mov
mov
pop
sbb
aaa
sbb
enter
add
mov
mov
and
int3
daa
add
dec
xor
pop
lret
popa
push
dec
and
test
xor
jb
andb
add
mov
dec
or
add
stos
or
stos
cwtl
lods
jo
xchg
and
push
lods
pop
insb
cmp
and
cmp
mov
and
ficoml
push
fs
add
sbb
push
xchg
inc
or
pop
dec
mov
sbbl
or
xchg
es
roll
loop
push
dec
adc
push
mov
pushl
shlb
push
jecxz
mov
fwait
sub
jo
xor
cmp
sbb
cs
and
xor
imul
jge
shlb
inc
lock
cmp
imul
push
adc
mov
dec
iret
adc
xchg
and
xor
repnz
mov
insb
popa
xchg
xchg
sub
inc
and
xchg
leave
sub
jmp
add
adc
mov
or
punpcklwd
sbb
test
and
ud1
pop
or
cmp
mov
xlat
jnp
mov
or
pop
push
mov
add
mov
sbb
mov
sbb
movsb
fs
push
jmp
adc
dec
pop
mov
adc
lds
mov
inc
imul
daa
int
adc
inc
xor
adc
cmpsl
mov
pop
fld
add
sbb
xchg
lcall
fs
pushl
cmp
dec
cld
and
xchg
pop
jo
es
or
add
or
or
sbb
pop
out
inc
imul
dec
xchg
in
push
jns
xchg
mov
pushf
push
movsl
xor
fimull
xor
jle
xor
ret
xchg
pop
fimull
fildl
add
adc
cmp
and
adc
outsb
sbb
dec
jge
and
xor
push
lar
adc
push
leavew
add
sbb
mov
mov
jmp
insb
test
jae
gs
xorl
dec
adc
lea
or
xor
test
pop
sbb
push
xor
or
iret
mov
dec
in
or
dec
repz
shll
dec
mov
hlt
add
and
stos
movups
pop
jb
rclb
and
add
or
and
mov
mov
xchg
dec
sti
lods
add
loopne
adc
das
jmp
dec
jno
mov
imul
jmp
scas
mov
jge
icebp
imul
xchg
int
and
jmp
and
std
clc
add
sub
xchg
add
mov
shrl
sub
or
testl
xor
sbb
adc
dec
and
cld
inc
sub
scas
dec
and
rcll
push
jg
push
mov
push
movb
pop
lcall
addl
push
sbb
or
push
gs
sub
outsl
shlb
test
mov
movl
adc
jne
sbb
push
jns
pop
jg
lret
cmp
add
stos
inc
sbb
add
lock
xchg
and
sbb
sub
mov
bound
and
inc
repnz
rcrb
fstl
clc
lds
and
mov
mov
push
enter
lods
and
xchg
pusha
daa
and
adcl
xchg
jno
ss
and
pmaxsw
push
adc
mov
inc
std
adc
call
je
popf
xchg
sbb
adc
and
bound
push
mov
inc
in
aam
or
inc
call
push
aaa
outsb
adcb
adc
ja
add
je
mov
push
movsb
dec
and
je
xchg
test
outsb
pop
mov
mov
fcmovnu
mov
shlb
popa
sub
pusha
arpl
push
add
cmp
bound
lock
inc
imul
pop
add
and
repnz
mov
insl
mov
xchg
xchg
daa
sub
inc
push
pop
cmp
xor
and
mov
or
popa
adc
fnstcw
fcompl
test
push
and
sbb
inc
stos
in
jge
push
jmp
rcl
in
inc
pop
add
ret
test
aaa
addps
mov
or
pushl
movsl
cmc
mov
cmp
in
cmp
inc
and
dec
sbb
xor
mov
push
jnp
jl
clc
sbb
out
fists
das
pop
pop
dec
and
inc
and
sbb
inc
pop
adc
daa
add
sbb
mov
jl
mov
and
addr16
xlat
cmc
inc
cmp
movsl
jno
or
inc
sbb
jecxz
or
fcomip
mov
mov
add
xlat
and
pop
sysenter
loope
or
testl
fstl
and
xchg
lock
mov
ljmp
les
mov
lea
pusha
mov
dec
movb
in
insb
jl
mov
fdivrl
and
jge
and
cs
and
andnps
push
push
cmp
or
int3
rorb
pop
aam
in
inc
push
adc
jo
ljmp
test
test
mov
fcompl
cs
aaa
loopne
dec
sbb
push
ret
jl
adc
in
adc
imul
gs
push
inc
lcall
stos
push
divl
movsl
in
and
pushf
aam
sub
pop
push
rcll
iret
clc
ljmp
mov
sbb
inc
es
es
xor
outsl
test
cs
insb
sub
mov
sbb
push
add
je
or
mov
push
fwait
xor
or
and
inc
mov
adc
push
or
addl
sbb
inc
adc
mov
out
push
xor
push
aad
or
rorl
mov
mov
sti
stos
in
cmp
and
add
pop
sbb
sub
int3
loop
ljmp
out
nop
sti
mov
mov
pop
testl
clc
inc
shrd
mov
es
add
xchg
faddl
pop
arpl
inc
push
aas
fimull
adc
pop
dec
mov
dec
jecxz
lahf
cltd
push
call
sub
testl
dec
mov
sbb
adc
jnp
dec
mov
cmc
lods
sarb
cmpb
hlt
lret
pop
test
outsb
fwait
test
or
insl
icebp
push
jbe
mov
jl
je
mov
and
addr16
pop
sbb
inc
loope
jne
pop
sbb
push
sub
addr16
pop
insb
dec
imul
pop
mov
movsb
std
int
xchg
mov
add
pop
lret
call
insl
jbe
jg
stos
cmp
pop
aaa
adc
add
or
lods
inc
mov
or
pop
xchg
push
sar
in
jp
js
xor
mov
cmp
jmp
push
cmp
pop
icebp
jbe
inc
add
stc
ljmp
push
push
dec
jne
orb
and
xchg
sbb
jno
sbb
popf
jbe
add
andl
aam
adc
sbb
cld
mov
pop
jns
mov
loope
iret
push
dec
sbb
ret
push
sbb
pop
push
push
jno
js
and
push
das
pop
adc
xor
pop
lea
xchg
jecxz
cwtl
push
sub
adc
jmp
icebp
gs
fld1
call
fmul
subb
inc
subl
pop
xchg
push
and
or
addl
out
xchg
es
push
pop
mov
and
dec
mov
daa
push
popa
dec
cmp
test
int3
push
jae
cli
movsl
loopne
popl
dec
pusha
adc
xchg
out
sbb
cmp
pop
sub
fmuls
inc
fcmovb
add
jne
dec
add
lods
dec
cmp
mov
sti
push
fildll
cli
add
movb
cs
rcpps
pop
stos
xchg
or
pop
loopne
sbb
popf
hlt
jge
push
adc
sbb
push
sti
rolb
dec
or
das
jmp
and
movsl
dec
mov
jmp
das
adc
sbb
nop
pop
jmp
adc
inc
cmp
jns
lock
sbb
fcomps
cmpsb
ret
mov
sbb
jo
inc
xor
or
lods
or
or
pop
out
xor
dec
pop
add
or
xor
jno
jp
enter
movsl
sub
in
inc
out
push
xor
mov
jmp
leave
loope
rorb
fsubl
adc
pop
mov
scas
ja
nop
adcl
push
in
in
and
and
push
ret
in
xor
clc
rolb
sbb
sub
adc
adc
pop
scas
imul
fnstenv
pusha
adc
movsb
jo
fidivs
shll
fisttpll
jne
and
push
and
push
xchg
cmpsl
lock
or
ljmp
inc
adc
xchg
sbb
and
fwait
dec
sub
bound
xchg
fnstcw
dec
cmp
or
inc
adc
je
xchg
add
leave
psllq
subl
xlat
clc
or
pop
jp
add
adc
adc
rorb
scas
inc
rep
mov
pop
push
or
and
rcl
in
pop
xlat
pop
mov
mov
xor
adc
xor
push
adc
push
dec
popa
fldenv
push
inc
mov
pushf
or
and
pushf
pop
sbb
mov
push
inc
adc
dec
les
cs
imul
adc
push
mov
out
out
pushf
shlb
jne
sbb
enter
daa
add
pop
mov
add
xchg
sbb
or
add
inc
fistps
adc
push
push
or
or
inc
int
push
adc
sarb
testb
stc
cmp
aad
cld
inc
ret
push
enter
out
sahf
cmpsl
pop
cmp
mov
repz
out
lds
cmpsl
stc
cmp
pop
cmp
jns
cld
arpl
inc
xchg
mov
and
mov
insl
orb
xchg
pop
fistpll
adc
sub
mov
insb
andl
xchg
pusha
mov
adc
repnz
outsl
mov
repnz
mov
ret
out
cld
icebp
inc
sti
lods
xchg
lods
adc
enter
mov
xchg
jbe
loope
pop
mov
je
es
or
or
sbb
inc
dec
dec
inc
lods
fsubrl
dec
fcomip
das
xchg
adc
push
insb
add
ret
mov
or
popa
int
push
imul
roll
mov
push
ret
pusha
flds
out
dec
in
jb
cltd
nop
rolb
fs
push
out
sbb
movsb
sub
sbb
and
shl
cmp
sub
arpl
sbb
outsb
inc
sub
sub
sbb
imul
sbbl
jmp
lahf
xchg
inc
setle
xchg
mov
nop
test
mov
adc
loope
hlt
vfrczps
cmpsl
jo
add
aaa
insb
arpl
inc
bnd
rorb
inc
inc
pop
sti
rorb
stos
push
xchg
adc
pop
jmp
imull
xchg
xor
adc
mov
sti
shrl
lods
jl
cmp
push
aam
insl
movsb
mov
add
in
call
dec
daa
xchg
in
sub
incl
out
div
cmp
or
and
xchg
add
shll
sub
dec
sbb
add
loopne
movsl
push
dec
xor
mov
xor
mov
inc
mov
inc
das
lods
sbb
ret
rorb
or
fwait
lret
add
dec
imul
sub
sub
mov
xchg
jle
jmp
mov
movsl
out
and
cmp
mov
ss
daa
fsubl
or
add
add
in
cltd
jbe
dec
push
adc
leave
leave
and
mov
dec
insb
movsl
dec
punpckhdq
or
je
xchg
fiadds
ret
jecxz
and
push
mov
fwait
loopne
xchg
fistps
push
lret
ja
fstpt
or
sti
add
stos
add
inc
jae
inc
pop
inc
sub
arpl
insl
mov
mov
sti
fs
repnz
sbb
cld
out
aaa
mov
xchg
dec
test
imul
clc
popl
add
add
adc
clc
inc
ret
paddq
adc
mov
aad
sahf
xchg
loope
gs
sbb
je
push
push
enter
add
add
test
adc
in
lock
pop
and
xchg
xchg
int
pop
xchg
mov
pop
loopne
lods
cmpsb
insl
test
add
or
pop
ljmp
pop
lock
cmc
and
adc
mov
or
test
cmp
push
andb
imul
loopne
lods
int3
mov
das
or
cmpsb
fsts
push
lea
packuswb
mov
stc
sub
rcrb
ja
adc
adc
cmp
jo
push
cmpl
jle
jo
xor
xor
mov
xor
mov
mov
ud1
call
dec
pop
dec
mov
sub
lcall
aam
xor
icebp
push
dec
icebp
leave
and
xor
hlt
insb
pusha
add
xor
inc
inc
cs
rorl
in
push
dec
scas
fs
int3
jl
sbb
or
andl
pop
test
mov
mov
push
xchg
mov
and
and
adc
mov
inc
rclb
and
add
cmp
lds
sub
out
iret
out
pop
add
adc
adc
imul
add
add
sti
cltd
rorb
outsb
popa
mov
rcr
jg
popa
popa
inc
test
cld
mov
imul
jo
push
std
enter
ljmp
adc
pop
mov
orb
cwtl
bound
ret
fildll
shrl
push
adcb
jg
shlb
xchg
mov
int
test
inc
mov
mov
fsubr
cwtl
mov
jne
add
rcpps
inc
or
mov
add
adc
lock
jo
push
enter
insb
cltd
mov
add
push
ja
fimull
and
sahf
ficompl
je
inc
or
xchg
inc
push
arpl
enter
pop
or
jno
mov
out
inc
jno
add
ja
sub
dec
mov
add
lock
nop
jl
stos
test
jmp
inc
dec
mov
lock
jmp
aam
xchg
or
and
cmp
or
and
test
or
sub
mov
xlat
push
xchg
add
ret
leave
sbb
sub
out
ret
fildl
adc
and
inc
outsb
add
fildll
pavgb
les
and
pop
ret
jge
adc
mov
mov
ret
dec
push
jo
and
sbb
add
xor
shlb
into
mov
mov
pop
popa
adc
les
addl
aaa
mov
sub
lret
or
int3
adc
sub
jbe
and
int3
lret
lcall
xchg
pop
aaa
or
test
sbb
sub
jecxz
push
sub
dec
cmp
cmp
popf
jle
inc
jmp
push
cmpsl
mov
and
pop
sbb
shlb
xchg
sbb
sbb
add
scas
and
jg
rcll
lods
push
stc
push
dec
enter
je
mov
int
mov
imul
je
xchg
dec
add
sub
add
scas
and
outsl
scas
xchg
jnp
sbbl
mov
ja
xor
nop
or
popf
in
and
fcmovbe
push
jmp
dec
pop
xlat
mov
fsts
aam
aas
sbb
add
ffreep
inc
stos
sub
push
mov
or
sub
test
push
inc
add
adc
mov
icebp
cmp
je
pop
repnz
andl
mov
lahf
es
mov
pusha
push
xor
pop
xor
in
cltd
jo
rclb
cmp
lds
negl
lret
les
fsubr
add
andl
dec
mov
pop
inc
mov
scas
dec
xchg
add
adc
orb
mov
sti
je
xchg
push
loop
test
push
inc
adc
xchg
jo
add
fstpl
push
clc
push
mov
xchg
and
js
cmp
or
or
add
xor
fadd
lahf
inc
push
test
and
pop
or
lret
js
xchg
lea
cmp
mov
cmp
pop
push
and
cld
mov
add
add
pop
icebp
sbb
xor
rcr
dec
lea
pop
cmp
inc
mov
outsb
popa
jmp
leave
pop
inc
pop
lods
pop
pop
call
aaa
adc
xchg
jbe
inc
sub
loopne
sub
jl
inc
fsubl
fdivrl
and
sub
sbb
and
aam
inc
or
aam
sub
mov
fmull
mov
shlb
int3
push
and
and
fldenv
push
or
addr16
enter
aam
lret
ficoml
mov
xor
sub
add
movsb
test
or
gs
jmp
jle
cmpsl
and
push
mov
enter
mov
fs
push
pop
inc
mov
push
pop
aad
mov
unpckhps
dec
int3
pop
sbb
ss
xchg
sub
loop
push
pop
imul
dec
cli
dec
lods
mov
sarb
inc
pop
mov
dec
cmp
dec
icebp
mov
les
add
cmc
xlat
sub
pop
ja
push
enter
cmp
mov
fs
fcmovnb
test
pop
adc
xlat
sbbb
or
leave
sti
aaa
stc
add
xor
ficompl
dec
sub
add
pop
sub
or
dec
or
add
and
add
ret
adcb
gs
mov
xor
icebp
xchg
subl
push
dec
xor
add
jge
xchg
xor
sbb
aaa
subb
adc
lahf
mov
xor
jp
pop
int
cmp
in
mov
sbb
add
cmp
add
mov
out
push
and
inc
lods
inc
sbb
mov
pop
add
je
mov
fbstp
mov
add
xchg
mov
repz
push
push
sbb
cmp
inc
lea
jnp
scas
scas
xor
xchg
inc
outsb
and
and
loopne
or
adc
pushf
xor
pushf
daa
inc
pop
sub
and
scas
mov
and
inc
adc
or
or
loopne
cmp
add
add
adc
push
clc
push
add
xchg
cmpsl
das
mov
or
daa
jmp
adc
cmp
loope
mov
sbb
and
mov
dec
sbbb
loope
loop
inc
ds
roll
loope
xorl
pushf
mov
loop
nop
inc
xor
pop
inc
pop
es
rcll
ss
icebp
scas
icebp
mov
sbb
adc
inc
test
cmp
sub
xor
loopne
or
sub
jge
inc
push
dec
sarb
mov
mov
lret
cld
arpl
pop
mov
sub
in
jno
push
sahf
movsb
pop
jno
jmp
sub
sbb
cmp
and
inc
jmp
rclb
adc
sub
add
dec
add
sbb
adcb
push
cmp
jo
sub
mov
les
shl
out
mov
or
xor
out
mov
adc
jmp
push
aaa
cltd
inc
rcrb
cmp
mov
dec
sbb
sbb
jns
push
jne
sub
cmpxchg
fsubl
insb
jmp
les
popa
push
sbb
mov
loop
add
je
mov
loope
xchg
mov
shlb
adc
fsubrl
pusha
xchg
dec
mov
adc
adc
xchg
or
jo
adc
fsubr
inc
pushf
mov
xchg
scas
sbb
xchg
dec
mov
das
sbb
outsl
aaa
icebp
out
cmpsb
push
hlt
fdivr
fs
leave
movb
fisttpl
decb
mov
add
push
push
test
jb
test
cmp
scas
jge
aam
cwtl
or
cltd
in
pop
cwtl
cwtl
daa
inc
add
daa
popf
and
push
mov
inc
call
dec
icebp
dec
out
jne
push
scas
add
xlat
dec
jmp
test
xchg
test
test
nop
test
test
dec
push
js
cs
or
fcmovnbe
adc
int
fnstenv
daa
rcrl
fsubr
sub
in
sub
add
xchg
cmp
jbe
add
push
and
push
and
xchg
jbe
xor
and
cmp
fistpll
in
push
sbb
aas
sbb
push
test
lret
cmpsb
popa
and
cmp
inc
or
popa
push
addr16
push
mov
lods
jne
ret
adc
outsl
adc
push
and
pop
mov
dec
inc
push
cmp
or
xchg
push
xchg
xchg
dec
add
aad
loope
or
je
arpl
into
ja
cmpsb
jno
inc
xlat
loopnew
jo
add
fidivl
rcrl
fnstcw
test
adc
cltd
in
dec
push
or
imulb
sbb
enter
or
mov
mov
inc
mov
mov
fdivrp
cmp
push
or
adc
add
aaa
or
inc
mov
in
add
or
push
dec
xor
push
mov
lret
xor
cmp
dec
pop
mov
rorb
add
mov
cmp
call
loop
jmp
leave
dec
cltd
inc
adc
sub
repnz
jmp
ds
fnstcw
mov
sbb
add
jae
dec
push
imul
inc
inc
aad
xor
sbb
mov
sub
lahf
push
sbb
adc
rcrl
xor
and
daa
mov
movsb
das
inc
jmp
mov
or
cmp
mov
aam
and
insl
mov
adc
pop
cmp
mov
mov
xchg
adc
and
inc
add
push
xor
in
dec
dec
cmp
cld
inc
sbb
xor
inc
sub
cmpsl
out
lods
push
xchg
add
dec
bound
pop
loop
sahf
sahf
lea
xchg
xchg
sbb
or
or
mov
pop
shl
in
mov
pop
adc
sub
cmp
fwait
dec
adc
insl
push
mov
les
sub
xchg
add
jge
or
mov
addb
add
sbb
inc
stc
mov
and
lret
inc
out
mov
in
dec
loop
pop
xchg
inc
sub
sahf
pop
iret
leave
lds
icebp
dec
pop
add
pop
inc
mov
out
sbb
add
fdivl
data16
cmp
adc
jmp
and
jp
xchg
ss
popa
pop
add
popa
call
ss
icebp
enter
and
ja
sub
xchg
push
pusha
push
or
xor
cmc
push
xor
mov
sbb
xchg
bound
hlt
sbb
sbb
mov
out
or
bound
test
sbb
or
loopne
push
arpl
sub
shl
pop
mov
dec
int
pop
mov
movl
in
adc
or
or
fildll
pop
sarl
pop
fwait
stos
sahf
push
lock
leave
lret
repz
add
sahf
pop
addb
imul
jge
mov
loopne
arpl
repnz
jb
mov
int3
stos
pushl
fsubr
fmuls
pop
mov
aam
aam
inc
sbb
dec
loopne
hlt
add
xor
mov
call
hlt
nop
icebp
faddl
push
neg
in
inc
shll
in
aas
enter
xor
sub
inc
repnz
and
and
roll
adc
mov
adc
and
aaa
xchg
push
lock
imul
jl
jbe
inc
mov
adc
dec
or
dec
pusha
mov
cwtl
in
mov
xor
add
mov
pop
test
and
jl
cld
xchg
movsb
movsb
aaa
loope
push
je
adc
add
mov
clc
mov
push
push
jle
shll
out
test
push
pushf
mov
xor
subb
inc
das
jbe
pop
cwtl
push
data16
addr16
in
repnz
jbe
xchg
mov
cltd
fsubs
sbb
xchg
cmp
test
mov
pop
sbb
xlat
mov
aaa
xchg
mov
leave
outsl
add
test
in
and
inc
test
push
roll
dec
pop
xlat
je
enter
xor
push
mov
scas
pushl
mov
imul
int
jo
enter
incl
in
js
xchg
ret
cmp
sarl
or
sub
sub
or
inc
fistl
test
lods
adc
add
mov
pop
xor
push
pop
sbb
lret
shlb
sub
test
ss
push
pop
jp
imul
or
fs
jg
xor
and
outsl
dec
shll
pop
pop
inc
and
push
pop
xor
push
and
sbb
or
add
or
lods
sbb
cmovb
sbb
enter
pop
and
scas
dec
or
test
xchg
dec
mov
adc
popf
ss
cmpsl
sarb
loop
subl
cmp
xlat
pop
cwtl
dec
sbb
data16
jmp
addb
adc
dec
inc
push
cltd
clc
ret
loop
aad
icebp
push
ret
sub
pop
mov
mov
xchg
and
xchg
add
call
fstl
movsb
or
jl
or
clc
sbb
inc
sbb
jle
ret
adc
or
fmuls
mov
adc
inc
xor
sbb
lock
outsl
call
push
ljmp
xor
pop
pushf
nop
jmp
das
movsl
jne
inc
cmpsb
cli
stos
movsb
inc
loopne
add
imull
push
and
mov
push
mov
adc
fldl
inc
call
movsl
xor
jbe
sub
inc
pop
dec
cmp
push
mov
roll
adc
sbb
data16
lret
dec
and
cmpl
lods
add
or
call
test
and
clc
xchg
mov
jg
int
and
xchg
pop
lret
lods
dec
out
push
jb
and
pusha
pop
sbb
dec
cmpsb
jno
xchg
or
and
cmp
pop
jns
outsb
pop
jmp
shl
divb
push
push
sub
and
pop
cmp
sub
and
adc
adc
sbb
adc
cld
add
enter
fs
and
jno
and
lcall
add
es
ss
xor
or
add
mov
insl
and
dec
ret
ja
or
jne
or
dec
add
andl
cmp
stos
jne
sbb
sbb
mov
insl
add
mov
and
push
push
inc
shr
push
jg
or
push
push
pmuludq
jb
loopne
jnp
xor
xor
outsb
rclb
jge
xchg
push
push
and
mov
and
aaa
and
aas
fildll
push
sub
add
pop
jl
fsubs
mov
xor
xchg
pop
inc
add
mov
or
cmpsl
pop
inc
cwtl
inc
mov
pop
movsb
into
mov
push
mov
adc
nop
xor
mov
mov
cld
stos
jns
movl
jo
fadds
out
icebp
sbb
call
shlb
dec
hlt
inc
sbb
pop
movsb
popa
andb
jl
popa
fstl
xchg
mov
dec
add
xchg
xchg
add
add
sbb
bound
add
push
arpl
inc
or
in
aaa
bound
xchg
mov
pop
sub
stos
push
or
fstl
movsl
imul
xchg
mov
pop
pop
xor
dec
das
jae
mov
in
dec
or
push
cmp
ja
clc
orb
mov
sub
xlat
je
loope
sbb
sbb
idivl
fwait
push
add
xchg
mov
jno
mov
int
xor
mov
fists
fadds
aam
ret
jge
nop
xchg
aam
gs
ret
xor
push
adc
add
iret
arpl
pop
out
dec
sbb
mov
loop,pt
push
sbb
push
sbb
loope
or
sbb
mov
dec
rorb
imul
sub
inc
adc
dec
test
data16
lcall
dec
lods
xlat
dec
xchg
cmp
imul
xchg
loopne
sarb
nop
outsl
jp
in
call
push
or
xchg
imul
mov
scas
mov
in
addb
test
xchg
out
adc
inc
cmp
cmp
adc
fldenv
loopne
inc
negb
adc
inc
inc
mov
inc
test
lock
ljmp
push
jne
orl
int3
dec
aam
and
xor
xchg
shlb
fnstenv
xor
dec
shrl
rclb
aaa
movsb
cltd
cmc
fisttpll
mov
aaa
xchg
push
pop
int
or
and
push
popf
loopne
pop
or
mov
mov
movsb
sbb
sub
jmp
js
push
xchg
push
popa
js
xchg
sub
cmp
movsl
and
rclb
mov
rcrb
in
add
push
loop
bound
mov
rclb
and
js
push
call
add
adc
jo
dec
repnz
cli
gs
jp
jmp
es
sbb
or
lods
xchg
mov
xor
adc
and
add
stc
mov
fs
popf
pop
pop
mov
push
push
push
pop
push
int3
xor
jne
mov
pop
xchg
popf
push
mov
test
mov
imul
add
push
xor
sub
and
cmpsl
mov
or
mov
outsb
rcll
or
add
clc
out
or
adc
mov
inc
in
lock
lods
sbb
and
dec
es
sub
xchg
xor
fmuls
pop
add
mov
dec
sti
mov
dec
pop
ret
ret
movsl
jle
and
fisttpl
push
shll
rcrl
mov
xor
or
cmp
jp
rolb
and
into
loope
mov
test
andb
inc
inc
cmp
pushf
les
popa
jp
imul
cwtl
dec
lcall
sub
cmp
or
and
and
mov
aas
cmpsl
sbb
aas
cs
jl
div
and
sbb
es
sbb
sub
dec
out
scas
sbb
lret
jae
add
daa
je
xchg
loopne
cltd
cltd
adc
push
pusha
fildl
sub
xchg
mull
lcall
push
add
push
push
hlt
push
jle
hlt
and
jg
mov
jns
cs
test
cltd
sub
test
mov
or
nop
sbbb
mov
je
adc
or
push
jo
mov
jmp
popa
subl
movsb
shll
jne
xor
inc
aam
inc
mov
jmp
mov
xor
push
jne
adc
nop
add
xor
rcll
push
das
imul
pop
pop
es
and
fs
lret
das
or
add
test
dec
jmp
cmpsl
mov
inc
rol
and
sub
dec
jmp
dec
add
mov
or
and
lret
sub
inc
cld
ret
imul
lods
repz
add
sbb
mov
adc
xchg
inc
mov
jb
addb
jl
mov
inc
and
insb
sub
mov
mov
test
inc
ljmp
stos
inc
lret
mull
sbb
dec
mov
dec
inc
push
cmpb
sti
jl
inc
ret
call
push
pop
and
fisttpll
mov
mov
jle
push
and
sti
and
sbb
je
jbe
or
test
mov
lods
or
add
push
push
and
in
pmuludq
jecxz
xor
dec
movsl
je
mov
and
pop
lock
or
pop
push
and
sub
les
adc
mov
xchg
cmp
mov
in
or
mov
sub
add
lcall
test
mov
sti
xchg
dec
adc
popa
jb
sub
push
xchg
adc
les
dec
lods
popa
mov
jo
mov
push
jno
pop
repz
scas
xchg
ret
test
mul
xor
or
dec
lods
movsl
rorb
hlt
hlt
jmp
cmp
test
push
aam
pop
mov
mov
xlat
dec
adc
es
cmpsb
rorb
out
inc
push
arpl
lea
push
cmp
loopne
and
add
push
stos
xchg
dec
int3
fidivrl
add
mov
nop
lcall
inc
je
aam
aaa
mov
jo
stos
dec
mull
loopne
loopne
add
in
jmp
je
and
xchg
addr16
and
hlt
or
out
jno
mov
xchg
shll
pusha
add
adc
enter
adc
test
rorl
inc
hlt
xchg
in
aas
jl
test
clc
or
cmpb
adc
cmp
and
push
dec
adc
pusha
cltd
mov
lcall
or
mov
lret
xor
out
cmc
add
inc
sbb
sbb
dec
add
add
loop
mov
cld
or
adc
mov
xchg
adc
adc
dec
sbb
outsl
xor
push
push
sbb
cmp
andl
inc
dec
aaa
dec
les
jmp
xor
mov
daa
and
outsl
push
int3
pop
icebp
pop
and
dec
and
adc
add
lods
insb
in
sub
or
push
xor
rcrb
and
insb
pop
add
movsb
add
mov
gs
inc
lcall
mov
roll
push
outsl
pop
imul
lock
adc
enter
mov
sbb
mov
mov
or
pop
sub
frstor
xor
loope
cld
push
insb
loopne
lods
nop
sub
mov
in
scas
insl
popf
and
inc
push
imul
push
cltd
mov
mov
inc
xor
pop
cmp
rcr
cmp
ja
xchg
sbb
and
cmp
je
enter
repnz
sbb
lcall
enter
ret
cmpsl
pop
or
xchg
cmp
out
dec
cmpb
cmp
stc
and
stos
xorb
shll
or
dec
cmpb
sub
xlat
ficoml
pop
inc
and
sbb
pop
push
test
stos
push
or
add
hlt
adc
pop
adc
or
push
inc
mov
popa
fdivrs
xor
mov
pop
and
adc
inc
dec
sbb
mov
sbb
adc
shrb
pop
push
movsl
jmp
dec
or
jmp
inc
fs
mov
cwtl
mov
hlt
xor
shrb
sub
add
inc
mov
fwait
xchg
add
das
jo
push
push
pop
shlb
mov
add
outsl
mov
in
cmp
ficoml
in
and
and
enter
dec
push
mov
mov
or
sbb
mov
pop
adc
add
jg
jno
inc
leave
mov
call
cmp
xchg
dec
cli
sub
rcll
outsl
mov
push
or
repnz
jo
xlat
xor
roll
mov
inc
and
pop
push
les
test
sub
clc
cmp
or
dec
sbb
mov
out
sub
and
addr16
aam
adc
scas
or
notb
lcall
testl
jo
xchg
mov
mov
dec
sub
fildll
mov
movl
mov
adc
push
shlb
jp
leave
pop
sbb
pop
sub
pop
push
mov
adc
mov
pop
adc
testb
xor
or
xchg
push
xchg
hlt
test
adc
mov
sbb
mov
in
mov
sbb
and
scas
xchg
dec
jmp
fdivrs
mov
enter
add
gs
bnd
scas
lods
bound
aas
inc
mov
xor
push
push
cmp
cwtl
inc
nop
xchg
push
sub
stc
inc
and
shlb
fisttps
mov
inc
xor
int3
xor
mov
je
pushf
jo
cwtl
aaa
repnz
xor
push
ja
out
add
cs
pop
iret
lods
cmp
pop
cmpsl
xor
push
sbb
dec
sahf
xchg
xor
cmp
enter
dec
fadds
xor
outsb
lret
cmp
inc
rcrb
rorb
cmp
pop
fcompl
into
negl
sbb
xchg
push
fldl
ja
popf
aaa
add
int3
bound
sub
add
cmp
fnstsw
mov
inc
shlb
ror
xor
add
inc
cmpsl
sub
mov
test
das
jae
mov
clc
pop
sub
push
or
in
and
dec
mov
inc
lcall
fbld
push
dec
adc
push
push
lea
and
push
mov
mov
nop
add
add
xor
movsl
jbe
xor
mov
xor
and
pop
dec
mov
jg
aad
dec
out
and
stos
push
add
lret
outsb
fcmovnu
ss
and
fst
shrb
and
ja
inc
mov
push
sbb
or
xchg
shlb
or
test
xchg
mov
aam
outsb
jl
or
bound
push
mov
outsl
adc
xor
rcr
fimull
jns
pextrw
cwtl
sahf
jmp
test
xor
push
insb
or
sub
clc
fisttpl
test
sub
ret
push
jo
and
add
and
es
or
adc
mov
and
loopne
pop
pop
filds
dec
andl
xor
test
adc
enter
push
xor
mov
or
dec
fstpl
mov
push
rorb
xchg
ret
cmpsb
outsb
xchg
add
pop
or
mov
push
movb
push
popa
mov
mov
lods
mov
xchg
scas
lods
bound
divb
add
mov
popa
call
xor
mov
xor
popf
mov
out
xor
in
adc
sti
cmc
push
push
add
lods
lock
sahf
insl
push
xor
xchg
jmp
rol
test
insb
lods
adc
mov
mov
idivl
dec
insb
sbb
fs
pop
fnsave
js
outsb
insb
fistpl
repnz
jp
xor
add
xchg
inc
mov
dec
xor
add
or
mov
mov
lahf
dec
sub
push
pop
ffreep
and
mov
sbb
xor
xor
xor
cmp
test
xor
in
out
loop
xchg
sub
dec
inc
and
dec
fcmovu
movsb
addr16
arpl
icebp
cwtl
add
adc
fdivs
out
pcmpgtb
fsubs
in
imul
pushf
cmpsb
lea
cmp
call
addr16
pop
pop
ret
imul
sbb
add
lcall
gs
adc
test
ja
xacquire
mov
and
or
outsl
mov
mov
xchg
push
outsl
hlt
jecxz
add
shlb
jp
mov
mov
imul
les
lock
rolb
and
sbb
imul
xchg
sub
cmpsb
adc
jecxz
lock
out
hlt
dec
fisubrl
mov
fcoms
xchg
dec
clc
add
movsl
dec
xchg
movsl
cmovae
pop
call
pop
or
or
stc
aam
sbb
imul
cmp
insb
repz
push
sub
lods
mov
xor
add
gs
aad
ret
cmp
cmp
lret
lock
fnstcw
nop
fadds
fidivrs
aaa
aaa
adc
in
mov
out
or
push
sbb
and
ss
shll
push
push
xor
lods
das
das
pop
mov
add
sub
cs
mov
xor
iret
pop
faddl
sbb
loopne
pop
lock
ret
jle
shll
jae
pop
adc
pop
lods
mov
fildl
jl
std
sbb
jle
ja
add
push
test
add
inc
pop
mov
inc
push
add
mov
scas
stc
push
test
addb
inc
add
and
pushf
and
jne
insb
push
pusha
lock
push
adc
push
sbb
inc
das
sbb
lds
outsl
pop
aas
insl
repz
dec
cmpb
stc
shlb
std
cmp
xor
inc
push
dec
pop
inc
out
fstps
leave
out
mov
inc
in
cs
sub
mov
in
addr16
addr16
testb
mov
jle
lods
popa
xchg
dec
xchg
dec
mov
or
push
xlat
dec
push
pop
inc
or
jle
mov
fs
rolb
inc
sti
push
and
dec
jae
mov
jl
addr16
sbb
ds
xor
inc
add
jae
add
jle
in
inc
pop
dec
xchg
mov
lcall
test
push
movsb
sar
or
fisttpl
adc
lahf
and
lahf
arpl
push
sub
pushf
dec
fbstp
pop
xlat
insb
nop
push
or
push
xchg
out
test
or
push
das
pop
dec
sub
ds
repnz
nop
cs
or
inc
cs
pop
dec
aas
mov
mov
xchg
push
fcomps
xchg
in
outsb
pusha
cltd
sarl
int
rorb
pushf
adc
mov
mov
js
scas
xor
in
test
loope
leave
inc
mov
push
push
ret
lcall
aas
push
addr16
sti
push
cmpb
movsb
cs
sub
aaa
mov
xchg
fs
cwtl
repz
insb
cs
std
in
hlt
cmp
sub
push
fistpll
pop
add
or
fists
ror
sbb
push
cwtl
dec
mov
mov
das
mov
push
loopne
repnz
pop
fidivrs
js
cld
inc
int3
fidivs
pop
or
inc
icebp
jae
jle
pop
mov
jl
popa
wrmsr
shl
cwtl
pop
rcrb
dec
pusha
mov
push
nop
add
push
dec
ret
add
out
das
mov
xchg
pushf
push
aam
or
testb
xor
jae
pop
lahf
push
sahf
out
sahf
dec
sbbb
in
adc
xor
out
cmp
repz
pushf
mov
in
jae
mov
clc
adc
push
sub
repz
mov
dec
loop
add
push
pop
adc
jns
negb
sub
inc
push
xchg
push
mov
adc
xchg
mov
cmp
adc
clc
inc
rcr
xorl
and
inc
fwait
push
pop
scas
lock
xor
push
aas
dec
fildl
inc
jbe
ss
cmpb
das
enter
negb
sbb
daa
inc
push
pop
daa
lock
or
pop
dec
and
jge
jae
xchg
es
cmp
es
lahf
scas
aam
in
jo
mov
mov
or
test
sub
mov
and
inc
imul
loopne
pop
bswap
pop
filds
and
icebp
xchg
pop
adc
ret
lock
cmpsb
pusha
inc
or
imulb
dec
repz
or
jo
addr16
std
cmp
sub
pop
xchg
addr16
jae
data16
je
jns
pusha
xorb
xlat
mov
xor
scas
sub
movsb
push
mov
mov
add
lldt
push
push
inc
shlb
jge
fsubs
lock
or
daa
and
in
mov
dec
push
fs
pop
cmpsb
fidivrs
inc
daa
into
pop
in
mov
ret
pop
mov
adc
jg
mov
push
scas
cmp
sub
jg
add
add
inc
cmpsl
sbb
andb
and
push
add
pop
fs
adc
lcall
in
and
xor
mov
daa
jo
and
cmp
ret
inc
je
xchg
mov
xor
and
push
addb
lgs
das
xchg
mov
xchg
das
cmp
es
daa
pop
push
andb
dec
outsl
cwtl
mov
dec
jl
xor
imul
push
addl
outsl
fiaddl
test
aam
rolb
out
insb
sbb
mov
mov
jo
or
cmp
dec
push
lahf
idivb
int
nop
loopne
xchg
mov
mov
sti
xor
mov
sarl
push
and
push
cld
sub
aam
lods
cltd
daa
pop
into
je
inc
psadbw
addr16
push
mov
cwtl
mov
leave
mov
int3
movsb
es
sahf
int
sbb
mov
adc
repz
mov
jbe
fs
idivl
or
and
mov
pop
call
std
mov
jno
push
inc
in
stc
mov
loopne
jb
push
and
fistpll
je
push
jne
push
jl
sbb
iret
repz
jg
ja
js
jns
imul
push
sub
je
jne
out
mov
idivl
inc
add
addr16
dec
arpl
mov
into
ds
mov
cwtl
mov
les
and
xchg
xchg
push
pop
xchg
cmp
sub
es
cltd
in
nop
cmpsl
insb
ss
aaa
sahf
push
cld
and
add
mov
sbb
pop
mov
aam
int3
mov
sahf
in
jl
xchg
add
leave
ss
push
inc
lret
in
jge
ja
push
pushf
loopne
int3
push
iret
jbe
out
sarl
or
push
cwtl
add
jbe
int
stc
push
cmp
les
sub
in
rcll
in
lock
out
sti
out
mov
push
sub
mov
fidivl
stc
xchg
ds
std
incb
mov
mov
pop
repnz
call
push
insb
adc
sub
xchg
push
cmp
xor
push
rolb
inc
jo
aaa
mov
inc
inc
ss
rorb
inc
scas
scas
cmp
js
nop
test
call
sbb
pushf
mov
dec
jbe
cmp
mov
dec
repz
movsb
les
and
outsl
out
ret
push
aaa
jo
push
les
dec
mov
push
in
and
rorb
sbb
nop
dec
push
nop
mov
pop
jecxz
mov
lcall
push
test
mov
je
push
and
dec
push
jl
sub
sti
fcmovu
cmpsl
fmull
lock
mov
enter
add
pop
cmp
jp
add
lods
push
inc
pop
sub
pop
or
mov
push
outsl
push
mov
sbb
jbe
adc
dec
push
jno
and
push
cmp
lds
je
filds
movsl
mov
pop
pop
aam
das
fmull
push
adc
test
xchg
test
dec
add
mov
cs
imul
push
cmp
insl
hlt
jo
dec
mov
xor
sbb
clc
je
insb
jne
jbe
sub
jl
mov
insb
mov
adc
cwtl
xchg
xchg
data16
mov
les
repz
movsl
dec
div
idivl
mov
adc
sub
add
push
adc
out
push
enter
out
les
sub
shrl
jbe
mov
mul
jl
cmp
int
dec
jle
jg
sub
mov
addb
mov
insb
out
lcall
in
cmp
push
addb
fwait
int
jns
dec
mov
lock
int3
xchg
neg
inc
ss
xchg
lods
pcmpgtb
pushf
jge
and
cld
xchg
das
push
cwtl
test
xor
clc
cwtl
daa
add
cmovo
lock
cmp
cmpsl
insb
test
pushf
stos
pop
stos
push
sbb
push
push
cld
ss
data16
mov
mov
in
shrl
sarb
sub
int3
mov
lods
mov
mov
fs
sti
fiadds
addr16
hlt
push
add
cmpsb
sahf
out
mov
flds
shl
mov
mov
imulb
xor
jg
clc
outsb
cmp
mov
mov
dec
test
push
rolb
push
or
pand
mov
cs
adc
inc
jo
data16
int3
sbb
imull
or
inc
adc
and
and
and
repnz
and
es
mov
adc
inc
sub
or
pop
inc
push
mov
das
add
aaa
sub
and
push
inc
adcb
and
icebp
mov
lahf
sbb
cs
xor
out
push
add
inc
sub
push
sub
hlt
inc
sub
dec
push
enter
das
push
test
dec
enter
xor
pushf
inc
mov
rclb
mov
mov
jns
popa
push
pop
mov
addr16
outsb
aas
js
sahf
out
push
rolb
add
push
sti
xor
cmpsb
push
add
pop
enter
add
push
sbb
add
add
adc
or
aas
or
mov
nop
inc
push
add
inc
adc
pop
or
fistpll
add
or
scas
inc
scas
sbbb
sub
pop
inc
and
imul
bound
adc
dec
push
es
mov
inc
iret
repz
cwtl
es
pop
push
jl
hlt
or
out
lcall
sub
out
cmp
cld
andb
mov
and
insb
ds
fsubs
push
mov
insl
fists
pop
rorb
xor
dec
cwtl
jo
int
mov
jge
mov
insl
in
les
xchg
pop
pop
xchg
idivl
dec
repz
add
xchg
mov
dec
out
sub
sub
mov
xor
ds
das
movsb
add
mov
push
push
sbb
xchg
jo
and
cmovbe
add
dec
inc
cs
mov
cmp
leave
xchg
and
setb
mov
cmp
pop
xchg
adc
arpl
add
add
faddl
shrb
jp
jle
mov
pop
scas
inc
mov
cmp
mov
call
cmp
sbb
push
test
mov
inc
js
ret
add
jp
int
iret
pop
sub
push
add
xor
pop
aam
std
arpl
out
insb
aas
lahf
in
loope
cmp
inc
jmp
icebp
repz
add
inc
cld
test
int
add
cwtl
add
add
jns
in
or
sti
push
mov
push
push
adc
gs
movsl
dec
clc
pop
sbb
neg
inc
xorb
xchg
fs
push
std
inc
dec
fwait
and
nop
movsl
out
es
cmpsb
sub
or
push
inc
fs
ret
and
cld
mov
imul
jle
and
adc
pop
ja
insb
mov
ds
nop
js
inc
jns
jp
push
insb
ss
int
jge
jg
cmpl
pop
jnp
mov
pop
mov
lahf
outsb
add
add
orb
aas
mov
pop
xchg
mov
mov
mov
push
dec
push
push
push
daa
iret
cmpsl
jo
pop
movb
pop
pop
lock
inc
xchg
cmpsb
push
pop
xlat
cmp
push
insb
lahf
out
push
movsb
xor
call
std
dec
cmp
out
push
int3
decb
fldcw
jle
push
mov
pop
insb
ds
mov
sbb
sbb
clc
sbb
and
push
and
inc
roll
adc
dec
iret
sarl
test
ret
inc
pop
adc
mov
rolb
cwtl
and
jl
pop
faddl
inc
fcoms
add
add
movhps
add
out
addb
xchg
sub
mov
add
mov
sub
mov
xor
mov
shlb
call
jl
ja
cs
int
in
into
dec
ss
int
mov
js
and
pop
lock
add
shrl
pushf
rcrb
rolb
movsb
mov
mov
movsl
sub
inc
mov
test
adc
mov
ror
hlt
cmp
je
int3
int3
push
dec
repnz
jne
adc
jle
xchg
fstl
add
adc
adc
add
mov
add
cmp
hlt
push
cwtl
cmp
mov
or
mov
adc
das
and
push
inc
add
mov
adc
jge
out
sbb
xor
pop
lret
xchg
mov
pop
and
rol
add
iret
push
lock
dec
movsb
popf
sbb
addb
enter
test
mov
and
xchg
mov
dec
sti
xor
in
ja
insb
add
inc
fcom
movsb
mov
dec
xchg
addr16
pushf
mov
jnp
addr16
mov
cld
mov
les
int
push
ror
or
call
push
mov
pop
js
test
adc
or
std
sbb
daa
sub
adc
and
mov
cmp
enter
pop
gs
insl
prefetchw
imul
xchg
and
xor
adc
nop
or
dec
mov
xor
push
enter
mov
sahf
xchg
pop
loope
jg
and
inc
in
and
pusha
lahf
mov
push
mov
pop
mov
mov
mov
cmp
mov
mov
dec
rolb
and
lds
outsb
idivb
jno
jo
push
int
repz
mov
push
lock
je
data16
cmp
aam
or
test
xor
call
xchg
mov
sbb
iret
mov
mov
les
xchg
je
insb
mov
cmpsb
xor
je
into
mov
cli
mov
push
xchg
filds
pop
fisttpl
or
pop
lahf
ds
rcrl
and
push
je
adc
ds
imul
push
leave
js
fnstsw
push
push
xchg
jmp
fbld
loopne
sti
loop
xchg
lock
mov
repnz
hlt
lahf
dec
mov
repz
pusha
repz
mov
stc
mov
sub
push
inc
movsb
cld
daa
fdivr
std
xor
das
add
mov
dec
fldlg2
les
push
daa
or
dec
jnp
popl
push
pop
adc
inc
adc
inc
sub
mov
push
je
push
daa
idivb
adc
cld
nop
sbb
lahf
add
sbb
mov
or
and
sub
cmp
jl
pop
fidivs
inc
inc
xchg
aam
inc
into
dec
cltd
negl
sahf
insb
dec
fmuls
out
push
dec
cmc
and
addr16
sahf
pop
pop
incb
data16
insb
mov
lods
push
insb
or
test
jnp
hlt
ja
jl
push
rolb
call
jle
scas
mov
insb
mov
fcoms
imul
mov
cmp
insb
js
cmpsl
pop
enter
scas
pcmpeqd
sbb
or
mov
neg
lods
mov
fiadds
or
sbb
fs
pop
ds
sti
pop
hlt
or
push
dec
mov
fnstcw
push
cmp
push
sbb
cs
iret
imul
sbb
push
jo
adc
lock
shrl
mulb
hlt
fimull
mov
pushf
sahf
and
daa
repz
es
cmp
push
jg
xor
push
mov
sbb
hlt
sarl
daa
loopne
push
daa
push
fcmovbe
mov
movsb
aas
aaa
testb
aas
or
sti
push
jno
inc
pop
pop
xlat
pop
sub
and
mov
pop
xchg
lea
ss
jno
mov
ja
repz
jnp
mov
lock
pusha
jl
je
dec
test
jge
addr16
iret
imul
push
fsubs
jg
and
pop
test
dec
repz
loop
push
jo
test
shrb
clc
push
cld
push
inc
adc
icebp
sub
notl
int3
in
push
insl
es
or
xchg
out
and
and
and
lods
pop
mov
xchg
mov
fs
out
cmp
in
mov
ds
repz
cmp
cmp
out
nop
rclb
pop
cwtl
xor
lea
ds
andb
outsb
cltd
sub
cmpsl
insl
das
xchg
in
dec
movsb
data16
or
mov
stos
je,pt
das
loope
xorb
call
and
in
push
arpl
pop
mov
push
cs
xor
xor
sub
jae
inc
lods
cmp
int
mov
int3
cmp
fs
repnz
xchg
push
test
data16
notb
and
jbe
inc
dec
outsb
dec
push
rorb
fwait
int
push
cwtl
push
add
es
push
jae
jl
inc
push
push
mov
subb
xchg
pop
push
pop
inc
pop
push
add
mov
shrl
nop
mov
sbb
xorl
mov
aam
sahf
notb
nop
push
fs
push
outsl
inc
cmp
inc
lods
mov
xchg
sahf
int
mov
test
nop
lcall
adc
hlt
data16
and
dec
testb
clc
dec
repnz
mov
sbb
dec
sahf
lods
orb
and
pop
or
imul
test
and
sbb
dec
inc
xor
das
inc
fwait
out
fsubp
push
fmull
test
pop
jns
lock
jnp
pop
test
sub
insl
push
data16
scas
push
mov
daa
pop
inc
jbe
jp
add
jecxz
xchg
pop
cmp
aaa
dec
rclb
nop
push
test
outsb
pop
mov
or
adc
and
hlt
insl
push
mov
je
mov
lock
aas
mov
shll
dec
aam
in
aad
inc
mov
push
les
cmp
outsb
and
and
and
decl
ljmp
aam
and
sarb
icebp
xchg
inc
add
add
into
into
mov
idivb
cmp
push
xchg
stc
pushl
cli
pop
int3
lods
cmp
ss
mov
lea
push
push
jg
dec
cwtl
fstp
ds
inc
fimuls
cld
enter
loopne
fmuls
xor
in
loop
addr16
jecxz
or
insl
adc
push
mov
fdivrs
movsb
std
push
mov
dec
mov
push
lods
jmp
ss
data16
call
sbb
data16
rcl
xchg
out
push
lock
icebp
push
add
addb
lahf
aam
repz
hlt
dec
ja
loope
pop
sbb
out
jo
scas
and
in
arpl
cmpsl
mov
push
mov
pop
xchg
push
jae
dec
xchg
sahf
push
mov
mov
mov
xor
dec
pop
enter
adc
jbe
fmuls
pop
and
daa
je
mov
xchg
pop
mov
push
sbb
adc
fldenv
mov
adc
pushf
adc
xchg
andb
and
ja
push
das
sbbb
pop
lock
scas
push
mov
mov
push
sub
mov
int
push
mov
pusha
push
cli
ss
mov
jg
mov
add
pop
sub
jnp
pop
bound
ds
pop
fmull
hlt
pop
cmp
mov
insb
push
test
test
jnp
inc
push
xor
nop
lods
out
jo
sub
or
sahf
push
xchg
sbb
inc
xchg
inc
pop
inc
setle
pop
push
cmp
push
test
cmp
sarl
pop
cwtl
loopne
out
cltd
std
mov
cmpxchg
push
pop
dec
shl
sarl
nop
pcmpeqb
fiaddl
xchg
push
and
outsb
dec
scas
or
push
pop
daa
cmp
es
inc
ret
hlt
getsec
cs
push
mov
aas
adc
mov
test
movsb
fsubrp
sbb
push
xchg
addb
push
xlat
sub
mov
imul
jb
push
pop
ss
enter
fidivs
ficomps
daa
fisttpl
in
pop
int3
call
enter
dec
fs
leave
leave
leave
sbbb
pop
pop
sbb
adc
shlb
pop
je
inc
loop
mov
ss
mov
push
enter
int
in
fistpll
out
push
sub
push
call
js
ds
push
cld
cmp
push
pusha
push
xor
xor
lock
add
sbb
jnp
jae
jmp
in
in
push
add
out
mov
fs
daa
js
aas
nop
push
hlt
add
xor
outsl
pop
add
push
iret
push
lock
jbe
push
test
adc
dec
adc
push
lahf
inc
push
je
mov
lock
pop
in
push
jo
shrl
or
out
out
call
or
xchg
stos
xchg
pusha
sub
pushf
push
rorb
ds
iret
in
push
pusha
pop
or
cmp
jae
fwait
or
push
daa
mov
mov
inc
ds
push
push
dec
and
fwait
stc
mov
testl
jno
jge
daa
fdivs
std
addr16
std
inc
movsl
adc
das
pop
lahf
and
addb
ret
add
mov
or
daa
aam
jno
out
xchg
push
mov
out
adc
xchg
mov
adc
dec
add
nop
jnp
pusha
dec
push
mov
out
pop
cmp
mov
cmpsl
fnstcw
push
test
or
and
jl
cwtl
mov
adc
out
xor
pop
add
sbb
cld
and
jecxz
int
and
lahf
and
sahf
int3
seto
mov
lock
js
aas
pop
fnstsw
enter
jle
mov
jno
aaa
sbb
push
das
fsubp
push
lea
ss
int3
xchg
int3
sarl
nop
mov
dec
repz
rcrb
xchg
pop
dec
out
jl
xchg
pushf
cmp
insb
mov
inc
mov
xor
scas
fdivl
addr16
mov
js
mov
scas
pop
mov
mov
push
mov
enter
push
mov
xchg
ds
out
push
ja
fisttps
add
push
xadd
pop
test
lods
xchg
mov
psubsb
xchg
imul
rclb
cmpsl
je
push
mov
push
aaa
add
iret
rorl
push
add
pop
push
mov
xor
or
pop
insl
shll
scas
xlat
fwait
int
inc
dec
mov
mov
out
and
mov
pop
fcompl
pop
aas
mov
in
enter
lea
pop
lcall
and
imul
fmul
ss
test
push
scas
pop
and
mov
imulb
sbb
out
je
cwtl
jne
jne
fs
aam
dec
xor
push
cld
pop
rcll
push
pop
sbb
push
mov
jle
push
push
mov
push
push
push
nop
sub
mov
sahf
shrl
scas
xchg
addl
nop
inc
mov
icebp
adc
push
push
dec
jae
pop
imul
dec
sub
push
inc
dec
pop
fidivs
xor
in
add
or
add
popa
je
sbb
fdivrl
mov
or
sbb
fistps
rorb
popa
arpl
add
leave
mov
push
dec
inc
dec
xchg
sbb
and
inc
or
inc
push
pop
or
or
lock
xchg
dec
pop
rorb
sub
or
loop
dec
dec
push
mov
inc
das
and
fidivs
pop
push
js
outsb
arpl
fmuls
jae
fisubs
outsl
jae
arpl
mov
add
insl
insl
mov
pop
outsb
movsl
inc
add
js
fadds
insb
adc
mov
add
sbb
push
jno
sub
rcrb
pop
pop
fs
sbb
test
push
push
adcb
sbb
cwtl
gs
or
xchg
ljmp
add
add
mov
pusha
out
popa
and
jecxz
jmp
sbb
pop
dec
dec
out
gs
cmp
les
sbb
sub
pop
or
mov
test
arpl
dec
push
add
adc
dec
jb
xor
sbb
mov
out
sbb
rol
jae
push
pop
inc
mov
or
xchg
pushf
jo
push
jge
push
cli
jo
jb
push
ds
inc
add
lods
movsb
insl
inc
jo
add
test
or
and
sub
mov
jecxz
loop
mov
adc
es
or
int
addb
xchg
add
mov
sarl
xor
jbe
out
pop
jne
cmpsl
xchg
adcb
test
cmpsl
lods
inc
sarl
mov
mov
dec
cmp
les
adc
fstps
xchg
movsl
xchg
or
ror
add
add
cmp
or
int
jne
les
adc
add
pop
or
pop
or
outsb
inc
fs
cli
test
push
sbb
inc
or
and
es
push
or
movsb
pop
mov
push
mov
push
orb
dec
mov
push
mov
lahf
pop
nop
xorb
pop
and
add
jp
sbb
fwait
dec
fwait
add
or
popa
stc
cwtl
lea
push
adcl
movsb
add
sarb
or
jno
mov
push
and
pop
adc
add
sbb
lahf
pop
adc
adc
xchg
mov
test
mov
jae
xchg
add
pusha
popa
mov
inc
out
add
add
jae
cmp
test
rcl
sbb
jae
pop
imul
lods
xlat
pop
adc
shrb
mov
or
xchg
inc
sub
sub
orl
insl
test
dec
rcll
sbb
xchg
inc
jnp
sub
and
add
add
ss
scas
testb
hlt
mov
lea
testl
mov
xor
mov
cmc
imul
mov
lret
or
popf
pop
insl
fsubrs
data16
cmc
and
jg
xor
jnp
outsw
rorl
pop
jo
iret
add
fimull
sub
popa
leave
es
pop
aaa
or
sub
sub
jae
xchg
sub
les
arpl
or
in
mov
mov
mov
push
insb
mov
lds
fsubrl
mov
dec
pop
pop
call
or
pop
fs
notl
nop
mov
mov
sub
movsl
movsb
enterw
push
imull
mov
movb
mov
inc
inc
mov
inc
add
sbb
fildll
shlb
add
mov
out
cmpsl
xor
or
pushw
mull
inc
add
sbb
dec
cmp
sbb
inc
adc
rorb
aam
mov
enter
sbb
mov
sub
jle
inc
insb
jae
and
das
fistps
das
fs
lret
out
clc
ja
pop
pop
lods
mov
aas
push
ret
push
test
insb
pop
lock
iret
lcall
sub
mov
lods
insl
jo
popf
jl
mov
adc
cmpb
nop
sub
mov
adc
mov
call
add
mov
push
or
ja
cs
nop
mov
mov
and
ss
jb
dec
repnz
fs
mov
inc
jns
sbb
insl
jle
push
sbb
or
mov
cwtl
adc
mov
xor
xor
lahf
adc
inc
cmp
add
fists
inc
sbb
cmp
sbb
notl
lods
mov
enter
ret
xchg
inc
lock
jge
xor
pop
pusha
inc
adc
mov
lock
dec
decb
pop
data16
or
jo
mov
mov
popf
jge
push
lcall
dec
into
rclb
pushf
mov
je
andb
out
adc
cld
xchg
sub
cwtl
dec
xor
fcoml
add
pushf
andb
adc
out
inc
add
loop
lahf
rdmsr
les
add
rorb
mov
jp
in
sbb
data16
enter
sti
das
add
shrb
add
adcl
add
je
sub
cmpsl
call
notl
xchg
jns
shlb
cmp
enter
cmp
pop
in
and
jbe
clc
inc
fstpt
add
jle
daa
dec
into
adc
add
add
add
or
push
pop
adc
adc
daa
dec
sahf
cmp
or
or
or
repnz
xchg
or
and
dec
sahf
cmp
and
and
adc
adc
leave
xchg
daa
sub
sahf
cmp
repnz
xor
xor
ss
xchg
daa
dec
cmp
sbb
shl
pop
push
adc
inc
aad
leave
inc
ds
jl
dec
aam
sbb
pop
xchg
divl
je
rcrb
hlt
hlt
hlt
orl
hlt
hlt
hlt
hlt
or
enter
hlt
xor
and
and
and
hlt
orl
hlt
hlt
hlt
hlt
or
enter
hlt
xor
and
and
in
outsl
xor
adc
inc
das
sahf
cmp
repnz
cmp
dec
ds
aas
in
daa
dec
dec
pop
push
push
hlt
mov
xchg
add
dec
push
lock
adc
inc
jle
sahf
push
aas
or
mov
inc
jmp
arpl
addr16
sets
xlat
call
fistps
mov
outsl
pop
sbb
adc
data16
push
and
pop
mov
inc
loopne
push
or
xor
adc
push
test
nop
imul
movsl
inc
xor
cltd
or
in
or
dec
push
loopne
fbld
in
inc
xchg
and
mov
mov
and
mov
cmp
jg
ljmp
mov
mov
or
adc
out
xor
push
adc
jo
aaa
and
jns
mov
push
inc
sbb
loope
mov
stos
mov
cmp
push
sti
out
in
mov
and
or
mov
dec
and
push
sbb
enter
and
pop
cmp
sub
mov
mov
mov
xchg
add
jne
testb
pop
xor
inc
cmp
fucomp
sbb
cmp
dec
int3
daa
pushf
scas
sbb
and
das
shlb
rcr
add
decl
movsl
enter
in
sbb
stos
cwtl
mov
or
sbb
sbb
add
nop
sub
inc
pushf
add
xor
in
push
jl
sub
aaa
xor
sub
or
pop
pusha
sbb
and
sub
add
fsts
add
fs
xor
lcall
cmp
scas
xchg
fldenv
adc
mov
outsw
inc
ja
mov
sub
or
dec
push
adc
pop
jl
jg
daa
push
xor
cmp
jle
push
add
push
or
cmp
dec
push
or
bound
pusha
sub
add
add
cmp
outsb
fs
mov
pop
sbb
jo
mov
pushf
popa
jns
or
movsb
jl
out
loope
push
test
aas
xchg
mov
mov
movl
out
or
jl
aam
inc
xor
divl
loopne
mov
jne
mov
cmpl
mov
mov
mov
rcl
lods
mov
mov
ret
push
rorb
cmp
dec
adcb
test
add
push
or
orb
mov
fadds
add
ret
addr16
or
addl
dec
push
sti
cs
mov
cmp
xor
idivl
aad
jmp
lret
or
jl
pop
or
cmp
cwtl
jg
cmpsb
rol
mov
push
xor
xchg
sub
mov
lahf
clc
inc
mov
test
fsubs
jno
xorb
push
mov
in
adc
mov
xchg
popa
push
shlb
adc
adcb
add
mov
fists
inc
fabs
dec
or
pop
xchg
pop
fcom
pop
adc
pop
in
push
push
jl
push
adc
pusha
aas
adc
shll
push
mov
fnsave
jnp
imul
lods
fcoml
rorb
test
or
adc
sahf
fwait
rcrb
insb
xor
rorb
push
cli
mov
bound
je
js
mov
lea
rclb
push
jl
fisubs
hlt
pop
or
dec
fisubs
sub
test
es
mov
pushf
mov
and
push
test
push
jae
xchg
out
xchg
mov
pop
sahf
lret
nop
pushf
xchg
test
sbb
enter
mov
mov
mov
enter
xchg
int3
fcom
jae
cs
fcompl
pop
sahf
lret
mov
inc
push
cmp
lock
clc
and
daa
add
xchg
enter
adc
pop
fisubs
sbb
les
lods
xor
das
sub
popf
mov
xchg
test
addl
pop
cmp
push
mov
xchg
outsb
or
push
test
cmp
mov
cwtl
push
push
sub
les
rclb
cltd
push
xor
xor
mov
sub
call
stc
push
push
test
hlt
test
in
lds
scas
push
pop
cmp
in
in
cwtl
xor
xchg
jle
xlat
pop
call
adc
xchg
lret
adc
fs
sqrtps
cwtl
enter
dec
cmp
jmp
inc
adc
mov
mov
aam
push
sbb
cmp
and
lods
push
push
mov
lds
aam
popf
divl
push
jae
inc
adc
rorl
xchg
int
sub
ret
les
sbb
mov
push
mov
push
mov
insb
lds
jnp
gs
pop
or
ret
adc
mov
mov
fbstp
push
ss
inc
or
mov
fsubrl
cs
adc
sub
mov
inc
pop
movsb
dec
inc
mov
in
inc
das
cmp
add
sti
add
outsl
xchg
shll
cs
addr16
adc
fiadds
inc
popa
out
lods
adc
les
inc
jg
and
stos
push
mov
jns
scas
shrb
and
jge
inc
insb
xchg
dec
cmp
inc
sarl
dec
popa
out
jle
or
ja
xchg
mov
ss
sub
fildl
mov
xlat
jnp
addl
out
xchg
dec
or
fwait
jae
ja
dec
ss
cs
aam
test
inc
jb
dec
xchg
mov
xchg
cld
aaa
push
cmpsb
cwtl
push
add
aas
shlb
jbe
outsl
ds
clc
push
push
imul
or
pop
sub
pushf
bound
movsb
mov
pop
sbb
add
adcb
dec
jbe
test
xchg
ja
xorb
push
push
mov
testb
dec
dec
and
add
fstl
xor
and
enter
out
push
dec
adc
cmp
jg
jne
pop
mov
call
mov
pusha
movsl
add
int3
mov
stc
dec
test
das
cmp
mov
pusha
lret
pop
mov
in
in
test
pushf
dec
push
mov
mov
pop
xchg
aam
sbb
repz
data16
clc
mov
pop
cs
out
fildll
mov
in
jae
je
je
xor
xchg
orb
xor
jl
loope
adc
stos
fimull
test
inc
xchg
push
movsb
xor
pop
or
mull
out
pushf
xor
xchg
std
pop
imulb
addb
leave
or
dec
leave
mov
dec
mulb
in
andb
mov
dec
sub
push
leave
mov
xlat
inc
nop
cs
xchg
imul
sti
jb
pop
inc
aam
xor
xor
jecxz
mov
xor
add
xchg
pop
out
xlat
aaa
or
xchg
add
or
mov
icebp
fcmovb
popa
adc
pop
movb
dec
add
xorl
arpl
into
call
mov
daa
pop
test
xchg
popf
out
push
mov
or
pop
adc
das
xor
decl
add
mov
add
and
into
movsb
cmpb
jne
xchg
jl
std
js
es
add
push
cmp
mov
pop
pusha
add
and
and
sub
and
cs
enter
mov
bound
inc
mov
xchg
pusha
and
cs
mov
js
mov
mov
mov
dec
ficompl
mov
and
shlb
mov
pop
leave
inc
repnz
adc
jb
pop
and
inc
and
leave
inc
pusha
addb
pop
mov
leave
loopne
add
and
pop
mov
loopne
and
das
xchg
mov
jb
dec
and
lock
mov
inc
pusha
add
das
jo
adc
inc
repnz
enter
or
or
insb
mov
pusha
xor
in
push
fdivl
hlt
cmp
ds
jg
add
inc
push
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
lret
in
in
in
inc
push
lods
or
ret
fstpt
jns
sbb
add
and
add
mov
popa
ljmp
lods
dec
jl
xor
pop
xchg
mov
xchg
sbb
add
sarb
mov
out
push
aam
in
repz
out
sub
inc
or
push
adc
sub
lahf
out
add
or
repz
adc
sbb
iret
repz
cs
inc
repz
fsubl
mov
sahf
decl
aam
mov
jns
lods
jnp
clc
pop
adc
add
cmp
iret
cmp
sub
cmp
push
dec
je
imul
pop
sbb
jmp
sbbb
nop
jnp
sarl
lods
push
mov
lods
sub
enter
outsb
mov
sub
push
mov
fidivs
mov
mov
or
into
js
js
cmp
js,pn
fistps
shl
push
sub
jl
setns
jl
popa
test
jl
sub
jl
mov
xchg
sbb
jl
test
mov
sbb
in
mov
adc
or
nop
decl
push
adc
add
push
sbb
sbb
pop
add
idiv
mov
sbb
add
sbb
sbb
mov
lods
adc
std
sbb
imull
xor
nop
sub
push
shl
mov
lock
nop
push
int3
add
push
fs
fldcw
cwtl
jo
push
push
mov
je
fcompl
push
add
dec
dec
dec
outsb
lar
add
dec
dec
dec
dec
push
pop
or
inc
dec
dec
dec
or
or
dec
dec
cs
dec
dec
dec
adc
adc
pop
add
push
adc
test
fcomps
sub
shll
cmpsb
push
mov
imul
iret
aaa
mov
daa
rclb
lods
pop
adc
jbe
imul
fs
aas
adc
pop
es
mov
cli
loopne
fnstcw
add
push
lock
and
jns
cmpsl
push
or
sbb
sub
cmp
push
pop
jns
out
pusha
push
jns
out
nop
cwtl
mov
sahf
mov
ror
fsub
jns
data16
loopne
loopne
fistl
popf
loope
fs
xchg
xchg
gs
xor
repz
dec
xor
add
jmp
jg
fwait
stos
out
in
ret
inc
mov
mull
dec
test
aas
iret
add
mov
add
or
pop
pop
add
add
fcoml
or
push
cs
or
jge
pop
add
add
subl
adc
adcl
push
add
or
xchg
sbb
pop
push
mov
or
xchg
bound
inc
lods
movsb
divl
add
add
add
mov
add
push
add
dec
neg
imul
popl
sahf
fcomi
or
or
jbe
add
or
or
or
idiv
push
or
or
add
add
or
add
aaa
mov
jb
push
enter
repz
pop
out
sahf
out
nop
mov
in
iret
rcll
sbb
dec
insb
jmp
iret
repz
aam
mulps
jmp
adc
jl
cs
mov
and
dec
pop
and
pop
add
rcl
adcl
xor
push
or
inc
xchg
push
or
subl
repnz
scas
aas
pop
jmp
adc
iret
rcll
sub
jp
ss
shrb
and
xor
jae
pop
jb
jl
out
sub
and
push
mov
sahf
rcl
xor
ja
or
pop
es
pushf
dec
enter
mov
and
mov
test
imul
push
fimull
jns
test
addb
cs
fidivs
in
or
lods
cmp
shlb
inc
lods
es
enter
clc
cs
pop
cmp
add
mov
movsb
sbb
xor
or
inc
pop
jbe
iret
call
add
mov
adc
jl
js,pt
movsb
out
repz
es
pop
repnz
xchg
loopne
mov
in
pop
shrb
hlt
or
loopne
or
pop
dec
jmp
push
daa
inc
cs
pop
mov
repz
cwtl
inc
mov
jb
pop
movsb
inc
adc
pop
out
cmp
push
fs
je
fdiv
cmp
xchg
movsb
out
je
notb
mov
mov
nop
int
jge
inc
daa
rolb
fidivrs
add
jo
nop
push
int3
repz
div
loopne
hlt
or
sbb
sbb
sbb
pavgb
dec
jb
sbbb
cmp
dec
inc
add
fsubr
scas
mov
bswap
das
mov
mov
negl
sub
inc
outsl
testb
les
cmovg
dec
ds
jl
je
xchg
xchg
jo
inc
fimuls
pop
mov
dec
dec
aas
push
je
subl
loopne
pusha
push
outsl
movb
pop
lahf
add
pop
sbb
stc
ss
inc
pop
lcall
dec
pop
inc
push
adc
inc
xor
out
je
int3
add
cmp
and
out
mov
and
or
mov
sbb
or
popa
fsubrl
loope
push
adc
scas
push
push
xor
fdivl
and
add
mov
loope
divb
push
out
jae
sbb
cld
pop
push
sbb
mull
cmp
call
je
xor
lcall
lods
push
cmpsb
lret
das
lods
add
lods
sti
push
hlt
mov
push
or
cmp
jnp
xor
add
iret
repz
add
cmpsl
stc
cmp
sub
scas
lds
jge
push
sbb
sahf
cmp
mov
jns
out
push
js
movsb
or
add
adc
iret
repz
pop
addb
iret
repz
push
rcrb
out
xorl
push
adc
jo
cwtl
add
sahf
push
fmuls
jno
addr16
out
push
add
add
dec
sahf
out
mov
push
xorl
push
xchg
mov
mov
sub
xlat
repz
mov
mov
out
fimull
fisubrs
push
incl
sarb
or
mov
mov
sub
and
add
jns
frstor
adc
or
or
repnz
push
sub
add
add
adc
sbb
adc
in
fisttpl
lret
or
push
mov
lahf
arpl
add
push
push
dec
test
or
pushf
and
repz
mov
fdivr
hlt
out
lcall
clc
sahf
out
sahf
push
idivl
cwtl
cmc
jns
out
mov
repz
out
sbb
icebp
cmp
iret
repz
pop
out
jl
pushf
in
iret
cmp
decl
jmp
push
ljmp
sbb
lcall
dec
test
fldl
iret
lds
cmp
rcrb
jmp
out
mov
nop
not
mov
add
xor
fiadds
dec
add
lahf
xchg
sbb
dec
mov
xor
xchg
add
cmp
rcrl
dec
cmpsb
push
cwtl
test
enter
repz
cld
adc
out
cmp
pop
push
adcb
fucom
jns
lock
movsl
movsb
addr16
shlb
sbb
clc
add
cmc
fsubl
dec
adc
or
shrb
sbb
and
insl
loopne
or
or
fildl
add
and
add
add
popa
xchg
fildl
pop
add
add
mov
scas
cmp
add
arpl
or
adc
mov
pop
cli
cli
cs
dec
push
push
ljmp
dec
out
push
std
cmc
out
cmp
jns
push
jb
psubb
add
pop
lods
push
cli
jmp
add
fidivs
outsl
push
lock
push
clc
push
out
scas
popf
arpl
pop
jl
push
out
add
pop
and
mov
out
pmaxub
decb
in
add
mov
fisubrl
mov
push
jle,pn
pop
cld
mov
cmp
mov
jbe
shlb
js
les
fidivrl
pop
push
shlb
repz
iret
rcll
inc
add
push
lock
mov
pop
pop
sahf
push
ret
mov
jg
call
xlat
jl
lahf
in
packsswb
push
fcoml
push
push
movsl
sub
adc
push
shrb
es
out
outsl
test
dec
mov
lock
lods
scas
add
clzero
cld
mov
and
add
mov
push
add
pop
sti
or
xchg
incb
xchg
jle
push
mov
orb
cs
cmp
xlat
add
pop
testl
mov
xor
std
push
lods
ljmp
xchg
jg
rclb
loopne
out
pop
aam
clc
mov
lahf
leave
push
push
fisubl
lds
push
imul
popa
jno
push
dec
lcall
addr16
popf
cld
push
cwtl
sti
cwtl
scas
push
data16
movsb
icebp
adc
push
cmp
jno
push
mov
push
or
imul
push
imul
push
ja
jnp
jl
push
xor
adc
fidivrl
sti
push
cli
lcall
fisubl
scas
mov
in
push
std
int3
in
and
dec
lods
fsub
push
xchg
cli
mov
sbbb
pop
push
jle
lods
ret
push
dec
lret
mov
into
lock
inc
loopne
outsb
push
rorl
mov
jle
std
jmp
push
inc
imul
clc
jg
sub
sbb
jo
aas
ror
pop
into
rorl
push
pop
sahf
mov
call
rclb
jmp
scas
jns
mov
pusha
pop
add
lods
xchg
add
jle
cltd
xor
enter
cmpsb
scas
out
cmp
xor
fimuls
adc
jo
fcomi
push
mov
loop
push
mov
push
xchg
jo
sahf
jo
fstpt
je
call
mov
movzbl
add
out
subb
fidivl
clc
cmp
push
add
frstor
mov
cmpsl
sahf
push
ljmp
jl
ror
push
sbbb
mov
fiadds
les
outsb
clc
push
ja
cltd
jle
fdivrs
add
cs
roll
fimuls
std
fidivl
into
mov
inc
cmpb
push
int
scas
arpl
push
jo
outsb
sub
cmc
add
ficoms
into
ds
push
test
imul
decb
mov
cmp
mov
dec
mov
push
out
jae
test
push
pop
jbe
imul
or
aaa
pop
fnstsw
sbb
push
enter
mov
repz
call
idivl
repz
and
clc
ss
repz
lahf
xor
push
push
pop
jo
ds
repz
mov
and
out
sub
je
xchg
popl
or
adc
pop
adc
pop
xchg
sub
xchg
lds
cwtl
fldl
jg
dec
repnz
add
fnstenv
xchg
cmp
repz
mov
iret
repz
std
incb
in
repz
add
addb
je
add
add
iret
fs
push
xor
popa
punpcklbw
cmp
je
iret
repz
mov
pushf
mov
fsubr
sahf
out
add
jns
out
fs
mov
out
fdiv
jge
mov
lret
iret
adc
decl
xchg
mov
frstor
mov
jbe
mov
adc
fidivrl
xchg
mov
inc
cs
rcll
lock
mov
pop
sar
mov
or
push
sbb
fs
xchg
cs
jb
xor
enter
decl
inc
mov
dec
jecxz
ret
and
out
movsb
dec
jne
inc
test
pusha
insl
mov
sub
jnp
repz
test
aam
and
push
push
int
jns
in
sbb
js
ds
repz
jns
out
fs
mov
lahf
clc
or
mov
push
je
sahf
ja
out
in
pop
jbe
push
je
lahf
out
cwtl
shl
and
cmp
repz
push
iret
mov
jbe
push
push
repz
and
inc
pop
repz
out
test
call
cmp
sub
shr
out
ds
dec
push
repz
add
and
pop
sti
cmp
xrelease
cmp
repz
mov
repz
daa
xor
sarl
movsb
hlt
adc
xor
repz
dec
push
repz
mov
js
int3
cmp
mov
pushw
push
out
loopne
sub
dec
insb
repz
out
test
clc
sbb
repz
dec
je
enter
out
lcall
cmp
repz
add
and
sti
cmp
xrelease
fidivrs
repz
shl
sahf
cmpsl
stc
adc
xor
push
out
fcoml
sub
repz
insb
mov
and
repz
cmp
push
jns
iret
clc
sbb
xor
repz
movsb
in
or
sub
ds
repz
xchg
mov
add
and
test
repz
out
adc
dec
test
or
cmp
or
jl
mov
test
fcoms
push
push
pop
je
stc
cmp
xchg
in
cmp
lahf
out
sahf
push
je
call
sahf
ja
push
xor
jo
iret
sarl
in
cmp
cmp
repz
mov
iret
repz
mov
push
js
enter
imul
fs
xor
out
mov
hlt
or
sub
cmp
repz
js
int3
cld
aas
out
fidivrs
inc
push
pop
jo
iret
sarl
hlt
sbb
fs
sahf
out
cmp
clc
sbb
dec
insb
jl
out
nop
mov
in
sbb
repz
roll
mov
out
inc
sub
dec
repz
mov
cmp
ds
repz
lods
sar
and
repz
cmpsb
push
pusha
nop
mov
jns
inc
sub
js
shl
idivl
sbb
push
pop
jo
out
lahf
test
dec
repz
out
pushf
shr
dec
iret
repz
xor
mov
out
jl
and
push
js
shl
jns
iret
hlt
and
test
jns
cwtl
mov
push
pop
repz
out
cwtl
mov
repz
sub
js
enter
add
cld
push
dec
insb
nop
repz
sti
cmp
loopne
push
push
push
iret
repz
je
mov
cmp
mov
je
mov
fcoml
xor
out
sahf
subb
iret
repz
dec
sbbb
clc
or
mov
iret
repz
mov
repz
push
push
jl
int3
sahf
ja
ds
push
push
push
push
inc
fs
out
sbbb
out
out
push
push
dec
push
idivl
in
ds
push
dec
ret
out
sahf
pusha
mov
cmp
repz
pop
push
dec
push
iret
repz
loopne
and
out
sahf
out
je
mov
lahf
lock
cmp
jo
lcall
adc
xor
sahf
out
push
push
cmp
out
or
sub
pusha
out
cmp
je
rcr
pop
sahf
out
sahf
sub
jl
sarb
pop
cmp
repz
repz
out
lcall
pop
sahf
out
sahf
je
mov
jns
jge
popa
fiadds
inc
pop
jo
out
sahf
mov
bound
repz
pop
insb
mov
shl
adc
xchg
push
dec
cmp
repz
jl
mov
jns
iret
repz
sbb
cmp
jns
out
jl
mov
lahf
cld
and
inc
pusha
js
lcall
and
jns
out
pop
je
mov
sahf
out
out
add
into
push
xor
jo
out
test
int
push
sub
andb
hlt
and
jo
stc
cmp
cwtl
shr
push
int
jns
mov
cmp
repz
push
sahf
out
lock
cmp
jl
out
in
insl
xor
repz
pop
js
mov
in
sahf
out
mov
outsb
push
inc
pop
js
sahf
out
xchg
mov
hlt
xor
repz
rcll
enter
sahf
out
jo
pop
js
jns
jge
mov
push
dec
adc
sahf
out
aam
adc
dec
out
repz
jl
rcr
jae
repz
repz
push
jo
call
add
cmp
cwtl
iret
sarl
in
adc
je
repz
repz
aam
jbe
push
dec
iret
repz
insb
mov
jns
ja
push
jl
mov
fsubl
repz
jo
test
lock
out
out
jns
push
test
jns
in
add
sbb
repz
repz
test
out
jnp
xchg
enter
pusha
cmp
repz
mov
repz
push
jo
shr
out
ds
cmp
sarb
jns
add
xor
out
ds
rep
int3
clc
sbb
iret
repz
cwtl
shr
cmpl
mov
out
add
and
repz
mov
lahf
out
sahf
inc
mov
repz
les
test
push
jo
imul
xchg
iret
sarl
aam
xchg
stc
mov
mov
push
int3
sbb
repz
cmpsl
pusha
mov
call
cmp
pop
xorb
jns
dec
jl
lock
cmp
repz
pop
je
sarb
repz
lea
dec
jo
jl
out
mov
out
cmp
insb
mov
jns
push
test
jns
out
mov
cmp
out
push
shl
xchg
fs
sahf
out
fcoms
push
je
sahf
out
out
or
outsb
push
jl
enter
jns
adc
jle
push
je
out
jns
xchg
mov
xchg
repz
out
js
shr
xchg
iret
repz
dec
andb
lcall
ja
out
mov
out
lahf
out
sahf
pop
je
mov
lock
out
fidivrs
lcall
jl
mov
add
sub
jl
into
repz
rcr
lahf
dec
add
aam
push
jmp
add
or
in
lret
sub
jecxz
test
add
push
mov
add
xchg
xor
addl
xchg
jbe
fidivl
outsl
add
rorb
ja
xchg
add
mov
add
mov
add
pushf
or
add
daa
and
xchg
leave
xor
out
in
fnstenv
inc
in
fs
dec
add
in
enter
push
push
xor
pop
add
pushf
pushf
int3
push
push
add
push
pop
pop
mov
xchg
pusha
xchg
cs
bound
add
repnz
popa
add
push
nop
mov
andb
push
add
cmp
out
add
push
adcb
mov
push
pop
add
nop
inc
dec
jbe
js
in
in
jp
jl
aaa
shl
jae
pavgb
loope
pop
xchg
jnp
cmp
mov
lret
cwtl
movsb
add
decl
add
imul
add
add
add
adc
jmp
adc
adc
daa
sbb
sbb
and
sub
daa
bound
and
dec
jmp
dec
and
dec
and
dec
mov
adc
dec
popa
push
enter
and
jno
pushl
loopne
stos
fisubrs
fisubrs
fidivs
fisubrs
je
cmp
testb
mov
mov
sbb
mov
dec
adc
aaa
mov
sti
repz
and
test
stc
sub
inc
mov
jle
es
or
cli
pop
xchg
add
into
clc
lcall
push
loop
jecxz
in
in
out
out
call
sahf
daa
les
mov
je
push
push
pushf
mov
lahf
out
fsubr
add
repz
fs
repz
mov
xor
add
iret
repz
push
cmp
repz
mov
fcomip
ss
and
inc
cmp
mov
mov
js
mov
mov
mov
clc
sub
aas
pop
pop
movsl
fsubrs
aas
sbbb
jns
pop
fmuls
lock
or
jg
mov
xor
es
xorl
pop
cmp
movb
out
sahf
fs
lods
fdivrs
repz
or
cmp
repz
out
ds
fdiv
or
and
fdivp
data16
dec
fs
js
mov
mov
leave
sti
lfs
in
cld
iret
cmp
ficoms
mov
push
cmp
ds
repz
js
mov
jo
dec
push
pop
int3
mov
fistpll
jnp
mov
jnp
out
jns
and
push
dec
mov
push
outsl
xor
mov
mov
fdivrs
dec
iret
repz
sbb
pop
jo
divb
repnz
mov
les
insl
fdivrs
in
add
mov
in
sub
iret
inc
mov
mov
jg
push
or
jnp
mov
scas
pop
push
lock
int
into
lock
outsl
sbb
lahf
out
out
push
push
push
push
test
data16
fiadds
mov
mov
or
outsl
or
mov
lahf
cmp
cmovl
loopne
xchg
mov
jb
xor
mov
bndstx
or
iret
mov
jns
xor
dec
pop
jo
jbe
out
out
push
push
rcr
or
out
xor
add
dec
push
adc
cmp
push
cmpsl
hlt
jl
dec
int3
es
imul
mov
and
push
and
and
and
and
and
gs
cmp
and
sub
sub
and
ret
pushl
and
cmp
and
dec
and
dec
and
ljmp
xor
pop
and
pop
and
bound
push
aad
and
insl
and
and
outsl
cld
ljmp
and
xor
cmp
pop
xor
inc
and
dec
and
and
stos
negb
pop
and
sub
sub
rol
pushl
cmp
cmp
inc
dec
dec
dec
dec
push
push
push
push
pop
ss
lods
mov
add
arpl
imul
jae
ja
jnp
add
add
inc
aad
add
lods
and
add
and
inc
pop
and
and
and
and
and
incl
sub
sub
sub
sub
sub
sub
add
add
add
add
add
xor
incl
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
add
inc
add
add
inc
incl
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
lods
incl
pop
add
pop
add
pop
add
pop
add
mov
ljmp
arpl
add
add
push
out
imul
add
outsb
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jp
loope
jns
jp
jnp
jl
jge
jle
insb
mov
rorb
push
adc
sub
das
or
mov
daa
push
leave
push
addb
inc
mov
out
fdivrl
adc
push
push
mov
call
out
into
mov
cmc
sub
xchg
incl
inc
xor
fcomps
inc
mov
xlat
pop
mov
adc
std
mov
cmpsb
and
mov
bound
inc
rclb
es
mov
pop
adc
push
adc
incl
and
shl
out
loope
pop
aaa
ret
xchg
pop
inc
add
mov
cld
flds
outsl
mov
lea
cli
incl
popa
popf
insl
or
in
inc
ljmp
decl
dec
mov
mov
cli
daa
mov
aam
sbb
aam
in
jmp
clc
jl
pop
gs
lods
les
hlt
xchg
ljmp
inc
cmpsl
and
ret
pop
pop
gs
int3
or
decl
rcrl
test
test
loopne
sub
adc
add
cmpb
xor
mov
xchg
roll
addb
and
push
add
sbb
and
and
je
mov
cmp
push
pusha
rolb
addl
push
adc
jns
call
insl
mov
or
jb
leave
fs
xchg
inc
jno
cmc
add
lret
lcall
dec
pop
movsl
aam
test
sbb
jp
repz
movsb
jle
leave
loopne
jl
outsl
xacquire
mov
inc
arpl
mov
or
in
cmp
repz
and
or
xchg
push
inc
or
mov
push
mov
insb
cmp
dec
hlt
pop
in
dec
fstps
and
xor
push
xchg
pop
fwait
int
mov
imul
je
jns
lods
inc
ss
jg
scas
mov
addr16
insb
xchg
adc
inc
push
movsl
mov
ja
cmp
rclb
push
cmp
push
cmpsb
jl
outsl
sub
pop
sub
fisttps
inc
inc
push
cltd
push
sub
es
push
rcr
dec
repz
sbb
xor
cmp
repz
jns
out
repnz
insb
int
jns
mov
cmp
repz
insb
mov
repz
adc
xor
iret
repz
test
hlt
sbb
jnp
xchg
cmc
aas
cmp
pop
push
jl
lcall
adc
inc
insb
int
jns
add
outsb
std
push
sbb
add
je
aam
mov
cmp
int
push
or
scas
xchg
adc
xchg
jb
ja
shl
je
mov
sub
popf
xor
sbb
push
inc
or
pop
loop
testb
and
pop
push
in
mov
scas
or
or
jns
inc
pop
pop
aaa
or
or
or
xchg
adc
iret
xchg
pop
leave
add
lret
mov
add
or
pop
and
or
add
sub
add
and
jp
movaps
sub
test
jne
cs
and
rolb
je
pushf
cmp
pop
xchg
sbb
mov
in
outsl
sub
or
or
push
add
adc
sbb
mul
insb
popa
cmp
inc
scas
add
add
mov
mov
jl
adc
loopne
push
mov
jno
inc
inc
jg
add
fldl
es
cmp
add
adc
jo
daa
add
add
pop
pop
sbb
test
ret
mov
fiaddl
addb
daa
pop
push
or
xor
movsl
mov
fimull
cmovno
jbe
or
add
cmp
sub
cmpsl
add
xchg
jecxz
mov
jg
dec
add
outsl
or
pop
outsb
push
fs
push
mov
in
jmp
and
fs
mov
testb
fidivrl
adc
lds
movq
add
pop
mov
roll
ud2
pop
dec
or
sub
lods
scas
or
mov
dec
add
xlat
bound
adc
add
shrl
fadds
and
adc
imul
mov
mov
clc
jns
cmpsl
stc
sbb
mov
out
ffreep
outsl
mov
test
test
push
push
shlb
scas
add
or
jecxz
jno
out
add
push
cltd
pop
enter
pop
pusha
adc
data16
scas
push
cmp
inc
test
je
enter
fs
push
in
mov
mov
push
pop
scas
adc
pop
or
mov
inc
enter
nopl
ja
adc
jge
pop
bndldx
subl
fisubrl
mov
inc
pop
int3
mov
xchg
outsl
dec
daa
or
and
insb
les
adc
xchg
leave
push
xchg
mov
jns
pop
daa
push
stos
dec
sbb
outsl
xchg
daa
xchg
inc
jo
in
mov
in
and
mov
test
adc
scas
out
mov
inc
inc
lahf
hlt
mov
sub
push
hlt
dec
in
ss
pop
gs
insb
push
push
clc
push
xor
push
int
mov
ss
faddl
dec
push
test
mov
pop
and
mov
dec
mov
mov
or
pop
add
inc
in
sbb
add
sbb
lahf
out
and
add
and
xor
call
and
daa
sarb
aad
and
jg
or
xor
sub
and
xor
pop
cli
orb
je
aad
out
outsb
adc
or
pop
cmpsb
leave
jne,pn
add
clc
push
and
sub
loopne,pt
bnd
imul
cmp
test
xchg
icebp
inc
and
neg
mov
outsb
inc
inc
data16
shlb
push
cmp
mov
lock
dec
add
mov
outsb
push
xchg
jbe
lret
mov
enter
hlt
not
jnp
imul
xor
or
shl
loop
rcrl
inc
pop
std
xchg
inc
jbe
addb
rcrb
xchg
data16
inc
out
mov
jge
push
inc
push
movsb
int3
data16
push
rorb
cmp
xchg
push
dec
sbb
jnp
cmp
test
dec
push
in
shrb
push
mov
pusha
push
iret
xorl
out
loopne
add
sbb
adc
jbe
push
shrb
push
fdivrp
push
mov
jle
ds
pop
notl
out
movsb
xchg
fnstsw
rcl
clc
cmp
adc
icebp
sbb
pushl
push
cmc
pop
loopne
lahf
inc
cld
pop
pop
inc
loop
mov
loopne
xchg
dec
lods
pop
push
adc
push
negl
fidivrs
cs
adc
adc
rorb
push
lea
mov
shr
shlb
push
pop
cmp
idivb
push
xor
inc
push
addb
rcl
mov
cvtdq2ps
fimull
or
iret
jnp
fdivrp
sbb
stc
pop
mov
jle
push
out
loopne
mov
addb
push
cld
js
adc
pop
pop
clc
sahf
pop
and
faddp
jnp
ss
loopne
test
sbb
loop
pop
mov
lock
push
inc
loopne
mov
sbb
adc
push
push
cwtl
faddp
jnp
out
mov
jle
push
int3
fmulp
pxor
insb
es
out
mov
es
dec
mov
shl
es
mov
nop
cmpsb
loop
fiadds
pop
out
rclb
into
and
loopne
enter
js
mov
jl
or
pop
xchg
loopne
out
loopne
lock
sbb
xor
fs
dec
pop
iret
call
faddp
out
test
fsub
and
or
sbb
sar
push
pop
fsubs
xor
data16
mov
mov
scas
inc
ss
outsb
push
inc
pop
out
or
dec
loope
js
loop
cmovle
push
sub
loopne
enter
cmp
fistpll
nop
mov
scas
pusha
xchg
nop
mov
fcmovnu
jnp
scas
inc
cmp
or
xorb
jbe
dec
mov
adc
in
push
aam
loopne
pop
pop
out
xchg
and
xor
ss
push
mov
out
mov
ds
dec
in
and
xor
je
sub
push
loopne
cmp
jnp
sbb
ds
fsubs
mov
push
negl
mov
mov
ss
push
pop
sbb
sub
icebp
mov
mov
xchg
nop
cmp
ja
addb
xchg
out
aam
ss
shll
push
sub
ret
jae
inc
nop
outsb
mov
xor
repz
dec
cs
es
hlt
out
loop
cmp
jle
xchg
and
add
mov
jp
jge
dec
faddl
loope
cld
push
cmp
js
subb
scas
cs
fidivrs
push
call
outsb
add
push
addr16
mov
daa
into
cwtl
out
jae
mov
push
push
je
sub
cmpsb
or
push
jnp
cmp
push
sahf
or
push
cmp
fdivp
fcomps
inc
pmaxub
push
adc
mov
jle
js
fildll
sbb
pusha
rcl
mov
mov
lock
jg
sbb
xchg
out
hlt
ficoms
jbe
cmp
push
push
neg
xor
sbb
pop
mov
data16
es
add
rorb
es
int
lock
pop
enterw
test
or
ret
jnp
sbb
call
fisubs
addl
push
mov
add
outsb
add
out
ds
push
mov
mov
sti
sahf
lds
push
push
ds
loope
inc
inc
cmp
js
push
push
fsubs
cmp
mov
push
mov
cmc
push
ficoms
push
scas
mov
int3
push
or
mov
jle
push
push
push
push
xchg
dec
pusha
scas
push
xor
push
int3
dec
incb
cmp
cmp
mov
pop
cmp
add
in
cs
faddp
push
lock
shl
mov
loopne
xor
in
pop
nop
push
icebp
fstl
inc
mov
push
sahf
data16
int3
inc
mov
jl
daa
cmpsl
jle
je
stos
cmpsl
cmp
rcl
dec
add
lds
jo,pn
push
sbb
jbe
push
rcrb
cmpsb
aam
push
fcoml
jle
pusha
orb
addl
pop
jle
push
adc
push
xchg
out
pop
out
sbb
pusha
push
enter
dec
push
sahf
xchg
les
dec
in
ja
ds
pop
outsb
pop
notb
pop
cwtl
hlt
gs
mov
jle
pop
jbe
and
pop
movq
push
sbb
test
int3
cs
rol
push
mov
push
pop
shrb
mov
push
add
sahf
js
js
fists
mov
data16
out
mov
andb
mov
fidivs
js
clc
lahf
jbe
adc
mov
xchg
into
adc
scas
pushf
decb
ds
pop
mov
pop
lock
mov
inc
pop
sbb
push
lock
push
cmpsb
push
pop
sub
push
push
addr16
data16
test
add
cmp
data16
mov
out
ds
test
sub
xor
xor
idivl
or
inc
cmp
xor
sahf
cmp
mov
mov
out
mov
add
mov
fiadds
jne
push
fsubr
push
enter
scas
cmpsl
jge
sbb
mov
ret
cmp
enter
push
js
sahf
rcl
pop
out
jbe
push
adc
loopne
or
ds
lock
fsubp
fidivrs
sbb
insb
dec
fs
pop
mov
scas
push
sub
xchg
cmp
pusha
push
mov
divl
mov
faddl
xchg
xlat
addb
cmp
clc
outsl
inc
jo
addl
out
jecxz
adc
jle
pop
into
js
loope
shl
sbb
mov
shll
inc
sbb
pop
pop
inc
out
out
jo
fcom
inc
lock
enter
add
aam
mov
mov
ficoms
mov
xchg
dec
pop
cmp
aas
push
mov
cmp
xchg
mov
into
loope
pusha
out
push
js
clts
and
sub
imulb
scas
dec
and
enter
jns
aam
inc
xchg
nop
mov
call
cs
cmp
mov
push
iret
jnp
pusha
jle
pusha
jnp
pop
sbb
push
add
insb
push
lret
out
jl
push
sub
ret
jnp
mov
inc
sahf
inc
xchg
mov
cmp
aaa
outsb
mov
es
nop
rolb
lea
sub
out
out
out
and
aad
out
mov
pop
mov
mov
ss
push
push
fisubrs
sbbb
test
insb
aad
andl
mov
jp
dec
mov
inc
xchg
and
sbb
mov
xor
fstl
jle
notb
loop
addl
cmp
sub
add
cmp
adcb
mov
fisubs
ss
dec
iret
loopne
pop
push
push
push
enter
push
adc
jmp
jnp
cld
push
cwtl
incb
sbb
cwtl
add
cmp
clc
fiadds
xchg
sbb
js
jbe
xor
leave
fidivrs
push
lcall
mov
testl
mov
scas
add
dec
cmp
push
js
ss
dec
fcomps
pop
into
js
push
dec
push
pop
cmpsb
pop
outsl
cmp
xchg
and
push
pop
ds
push
xchg
roll
incb
cmpsb
push
push
jle
ds
data16
orb
out
jns
je
push
and
or
xchg
mov
cmp
icebp
shl
push
mov
xchg
shll
popa
out
sbb
inc
dec
mov
out
cmpsl
dec
pop
xor
jmp
mul
das
mov
jle
inc
sub
mov
sahf
inc
cmpsb
orl
pop
pop
cmp
stos
pop
mov
shlb
ljmp
loopne
adc
rcr
mov
testl
data16
mov
jbe
cmp
xchg
mov
xor
data16
mov
push
and
and
ja
jnp
dec
into
adc
data16
ret
test
lock
sub
push
cwtl
notb
fsubrp
cs
lods
cmp
sub
lock
sbb
push
or
push
enter
les
xchg
ds
pop
push
xchg
xchg
divb
jle
push
sbb
loopne
js
inc
pop
mov
jecxz
jecxz
inc
les
sbb
ss
jnp
push
cmp
outsb
and
push
pop
xchg
ss
mov
mov
dec
scas
daa
jle
dec
xchg
push
mov
outsb
pushf
push
in
fidivrs
mov
push
sub
push
xchg
mov
mov
push
xchg
mov
out
push
xor
ja
cmp
dec
lods
jo
hlt
pop
pop
push
sub
shlb
shr
pop
push
ss
divb
push
ficoms
test
xchg
les
mov
push
out
aas
xchg
or
jp
sub
cs
loopne
sarl
adc
cmp
rcr
fbld
inc
inc
inc
mov
fwait
ret
sub
subb
test
adc
add
xadd
data16
push
sbbb
es
mov
add
repz
pop
repnz
push
and
enter
cli
cmp
test
mov
mov
dec
fldt
push
sbb
push
iret
cmp
inc
jl
out
mov
mov
mov
inc
loopne
out
and
cli
or
xor
dec
pop
je
daa
out
jns
mov
loop
inc
test
stos
mov
xorb
cs
add
movb
mull
addr16
jmp
imul
sub
xor
je
scas
insb
push
fbld
push
push
outsl
or
adc
enter
iret
xor
mov
and
inc
fwait
push
mov
push
fnstenv
xchg
std
adc
xchg
mov
xor
daa
mov
out
ret
ja
xor
pusha
addb
scas
sbb
int
jno
push
in
sub
mov
inc
js
push
dec
mov
inc
dec
dec
cmp
xchg
inc
leave
adc
inc
xchg
adc
dec
adc
inc
cmpb
add
mov
jmp
sub
xor
add
pop
push
hlt
jbe
add
cwtl
andb
add
xor
test
test
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
push
dec
adc
lods
dec
add
push
or
in
sub
mov
xchg
add
dec
push
mov
ljmp
dec
inc
dec
add
add
es
push
xchg
add
dec
adc
cmpsb
inc
cmp
dec
push
and
ljmp
push
popf
incb
lahf
jge
jns
je
pop
sub
rolb
sbb
aam
nop
notl
push
addb
sbb
fsub
lret
xchg
mov
cld
jg
clc
aas
push
sub
leave
repz
jmp
rol
add
fldenv
imul
je
add
loopne
add
inc
jbe
in
add
test
cmp
pop
rorb
mov
rorb
mov
roll
mov
bsr
mov
jg
add
cmp
data16
out
ficompl
leave
xchg
out
cmp
rolb
add
push
imul
pop
push
aas
mov
ja
pop
cs
pop
xchg
or
mov
push
mov
sbb
std
cmp
push
fnstsw
add
cmp
hlt
insb
jl
rolb
data16
lds
sbbb
add
jnp
sub
jo
iret
rolb
push
and
mov
lock
push
lcall
adc
cltd
movsb
fucom
jl
xor
jg
jnp
inc
push
add
cmp
sub
cmp
aas
push
add
mov
mov
adcb
and
pop
mov
add
add
comiss
dec
pop
outsb
daa
shll
or
insb
ss
clc
lock
aas
rcrb
mov
rcrl
add
push
inc
pop
xor
mov
adc
or
push
lahf
int
fcom
add
xlat
pop
sbb
jae
fwait
test
inc
nopl
loope
xchg
fdivrs
pop
jle
pop
out
mov
pop
in
les
test
xchg
inc
inc
jnp
fdivrl
nopl
aas
addr16
adc
flds
aaa
or
sbb
push
cmp
push
flds
fsubrl
aaa
add
mov
subl
inc
cmpb
inc
ss
insl
jge
cmp
sbb
push
sub
addr16
insb
inc
add
inc
addl
popa
push
pusha
xor
sbb
push
push
sbb
adc
shll
testb
sub
push
fisttpl
xor
jl
sbb
mov
insb
ss
sbb
or
test
add
xchg
push
shl
xchg
pop
les
add
daa
add
pop
add
sub
rorl
inc
pop
push
rcrb
inc
mov
rcr
cmp
int
dec
sti
jns
cmp
sub
xor
and
test
lods
or
add
nop
xchg
ja
dec
data16
imul
and
subl
add
and
adcl
cmp
xchg
imul
adc
test
pusha
aas
sub
mov
jmp
mov
mov
inc
mov
jae
arpl
and
add
jae
jo
or
imul
and
sbb
add
jo
sub
jnp
ret
sbb
inc
cmp
adc
mov
mov
fs
jno
mov
ss
adc
jne
jb
sub
sbb
arpl
xchg
sbbb
lods
rorl
jg
outsl
add
add
push
adc
mov
adcb
push
sbb
addb
push
xlat
and
mov
xchg
sub
xchg
pop
xchg
pop
add
pop
push
jmp
sbb
push
cltd
fbld
pop
aaa
pop
aad
addl
jbe
pop
daa
mov
push
sbb
dec
pop
sarb
addr16
sub
xchg
fiaddl
cmp
mov
es
stos
insb
dec
jmp
arpl
lret
dec
jbe
or
xchg
and
mov
inc
das
daa
push
shrl
mov
push
add
das
and
mov
mov
bound
incl
adc
or
pusha
push
arpl
addb
dec
and
cmc
shrb
mov
fadd
and
mov
fwait
add
dec
mov
xor
push
inc
cwtl
sbb
cmp
add
and
lods
or
aas
gs
lods
jnp
xor
pop
sbb
or
mov
sub
decl
or
lret
pop
nop
mov
pop
inc
mov
scas
lret
mov
test
shlb
pop
ljmp
or
sahf
stos
mov
inc
push
jecxz
xchg
aas
and
cmp
or
fs
or
addr16
popa
ret
xorb
cs
push
add
test
arpl
sti
mov
mov
mov
and
sbb
mov
mov
sbb
adc
xorl
inc
rolb
push
mov
xchg
aaa
pop
mov
adc
inc
pop
cmp
push
and
mov
pop
xor
test
and
push
cmpsb
push
mov
or
inc
testl
shlb
scas
push
cmpsl
mov
shrl
jne
pop
mov
or
cmpsl
and
pusha
adc
mov
add
lcall
adc
subl
sub
jae
mov
sti
cs
imul
dec
xchg
sbb
add
mov
inc
cmp
push
movsl
or
mov
pop
jbe
ja
scas
inc
pop
insb
mov
stos
mov
adc
xor
jl
push
xchg
sub
push
loopne
lret
jae
xlat
pop
pop
xor
inc
pop
lods
cmp
xchg
jecxz
jecxz
inc
jecxz
sub
outsl
jecxz
popf
pop
jno
daa
pop
and
xlat
xor
xlat
adc
pop
fwait
scas
pusha
jno
js
pop
jb,pn
stos
xchg
push
push
mov
pop
sbb
inc
ret
pop
lock
xchg
ja
test
mov
fistl
pop
fildl
in
and
pop
and
or
push
daa
add
and
out
dec
adc
lods
and
jae
dec
and
aas
mov
ja
inc
pop
jmp
jg
data16
movsb
jne
lds
pop
ja
pusha
sbb
add
aad
pop
sti
ja
add
push
jg
int3
push
rorl
or
lock
inc
adc
sbb
stos
out
cmp
test
test
stos
popa
mov
jle
pop
pop
aaa
add
xor
mov
or
in
adc
shll
push
adcb
aaa
aas
addb
test
mov
mov
sbb
mov
fwait
xchg
test
pop
jbe
scas
sbb
xchg
or
mov
ja
pop
or
cmp
sti
arpl
sti
or
iret
adc
dec
pop
push
js
sti
out
push
ret
sub
mov
push
imul
roll
xchg
xor
xchg
sbb
pop
pop
jno
imul
xchg
adc
sbb
lahf
addl
jb
inc
addr16
fwait
out
xor
push
push
bound
push
push
jae
addb
out
push
sub
stos
xchg
mov
xchg
sbb
lods
dec
adc
adc
adc
push
xchg
popa
outsl
arpl
cmpsb
dec
pop
add
dec
das
mov
insb
mov
mov
xor
mov
arpl
or
and
push
dec
xchg
add
push
sub
pop
fs
bound
addl
push
fistpl
ret
push
fidivs
jne
outsb
ja
scas
sarl
sbb
rclb
push
add
and
popa
scas
and
inc
xchg
stos
out
and
jmp
mov
fcomip
and
insl
adc
cmp
rorb
xor
push
pop
add
pop
loopne
ret
imul
les
and
sbb
aaa
imul
jb
shrl
mov
daa
xchg
daa
pop
pop
ljmp
sbb
add
outsl
or
adc
subb
add
mov
test
push
pusha
jae
xor
inc
adc
xor
mov
scas
dec
or
jmp
push
test
out
cmp
scas
subl
mov
xchg
aas
sbb
add
jp
mov
cmp
lods
or
mov
fs
enter
jg
add
mov
dec
adc
shrb
fdivs
stos
out
mov
hlt
sub
shll
scas
sub
inc
xchg
adc
mov
sub
inc
fwait
popa
rorl
rol
repz
push
jo
das
and
mov
inc
mov
inc
xlat
addb
dec
mov
loop
ja
je
sbb
data16
inc
jb
push
add
adc
ret
sub
movsb
adc
out
xchg
outsb
lods
out
pop
push
cmp
cmp
add
shl
aaa
arpl
add
adc
das
inc
enter
repz
xor
or
sbb
pop
lret
rcl
lds
outsl
insb
add
xor
aam
sub
cwtl
cmpsl
insb
pop
fwait
mov
bound
sub
sub
push
inc
inc
cvttps2pi
or
js
xchg
mov
push
add
iret
das
pusha
pop
mov
xlat
jnp
sub
inc
js
xor
push
add
push
bswap
lahf
cwtl
mov
adc
mov
sbb
andl
cmp
scas
dec
aad
testb
pop
sar
or
adc
pop
sub
fildl
outsl
sub
inc
insl
inc
xchg
push
and
push
jo
and
mov
mov
test
test
aaa
adc
pop
andb
push
scas
or
push
mov
ja
and
or
sub
imul
fiaddl
jnp
imul
xor
mov
pop
inc
push
push
sti
or
jbe
push
daa
xor
rdpmc
adc
adc
addr16
rolb
pop
scas
push
or
cmp
sbb
nop
sub
or
xor
inc
xor
sbb
fidivl
pop
cmp
lea
test
aaa
sahf
dec
imul
movsb
add
add
sub
push
xlat
arpl
mov
adcb
push
enter
cmp
sub
in
add
pop
jl
dec
loopne
jg
stos
sub
data16
sbb
pop
shll
les
sbbl
stos
outsl
aaa
or
sub
xlat
jecxz
pop
dec
inc
rorl
sub
xchg
and
das
xlat
sbb
and
bound
pusha
out
push
roll
sub
sub
mov
iret
sbb
dec
add
outsl
push
stos
fcmovu
inc
mov
or
add
jmp
add
daa
inc
push
arpl
addb
dec
shrb
jge
adc
xor
mov
insl
outsl
lahf
pop
test
ret
jecxz
popa
iret
roll
int3
ja
cmpb
inc
xor
daa
dec
call
dec
sbb
data16
mov
shrl
dec
jns
arpl
stos
cli
pop
xchg
sbb
or
dec
sti
sbb
daa
push
ret
and
pop
xor
add
or
nop
push
movsb
inc
mov
mov
inc
scas
pusha
pop
aad
sbb
mov
outsb
stos
pop
lahf
push
aaa
and
push
adc
dec
insl
sub
ret
sbb
and
jo
imul
addb
mov
mov
inc
mov
adc
cmp
and
adc
jg
or
mov
mov
or
xchg
sbb
mov
push
xchg
inc
inc
scas
popa
sub
test
addr16
dec
pop
push
hlt
push
mov
xchg
xlat
push
mov
les
pop
sbb
inc
ret
add
sub
sub
sbb
xchg
mov
jp
fmull
xor
cmpb
sub
sub
stos
mov
test
add
xchg
loopne
xchg
pop
pop
outsl
add
ss
dec
mov
dec
mov
mov
jb
shll
dec
sub
es
or
mov
or
push
pop
sub
mov
mov
mov
mov
xchg
stos
sbb
mov
cmp
dec
add
bound
pop
lret
jg
xor
xorl
push
outsl
push
add
sti
sbb
add
push
adc
or
stos
bound
icebp
mov
mov
push
inc
mov
es
outsl
cmp
mov
ret
mov
lock
pop
xchg
shlb
mov
mov
fiadds
mov
xchg
jo
ret
and
loop
push
jae
mov
add
xchg
adc
jo
mov
sub
inc
xchg
cli
inc
jg
or
pop
outsl
mov
fs
or
mov
jnp
sbb
ss
dec
inc
xchg
jne
adc
dec
adc
push
or
fisubrl
pop
or
mov
or
test
sti
add
lods
adc
push
in
and
mov
ret
pop
xor
or
lods
vprotd
and
inc
les
ja
dec
xor
cmpb
fstpl
xchg
or
mov
scas
mov
data16
mov
iret
push
add
jmp
push
xchg
add
cmpsl
nop
popa
rorl
shufps
adc
adc
sub
pop
pop
mov
adc
sub
add
push
and
adc
fwait
orb
push
imul
popf
ret
push
divl
cmpsb
stos
test
das
fistl
inc
pop
jae
dec
dec
inc
inc
dec
inc
loop
stos
push
or
xchg
sbb
inc
addl
mov
test
xlat
das
add
push
das
scas
outsl
lods
or
adc
pop
mov
aad
push
mov
adc
xor
enter
lahf
jae
fwait
add
xor
add
sbb
and
divl
adc
lret
sbb
push
push
jo
jae
sbb
pusha
imul
imul
adc
dec
sbb
add
and
sub
ss
in
cmp
aaa
add
add
adc
dec
or
push
sbb
or
pop
pop
lock
mov
mov
mov
es
rol
jg
pop
pop
adc
je
mov
pop
test
inc
ljmp
push
add
sbb
andl
lods
imul
andb
arpl
outsl
cmp
hlt
movsb
inc
dec
scas
sub
dec
add
loopne
test
addl
dec
lahf
stos
inc
loope
lods
add
push
data16
jo
adc
jmp
in
adc
inc
adc
push
arpl
aam
cmp
sub
inc
bound
sub
mov
mov
arpl
xlat
sub
fninit
xor
xor
sbb
xchg
out
ja
add
imul
jp
adc
dec
pop
adc
adc
cmpsb
jne
jo
movsb
mov
dec
add
stos
popa
test
jp
or
pop
lea
subb
out
scas
jnp
lcall
fsubp
mov
xchg
adc
mov
xchg
or
pop
dec
add
adc
push
dec
rcll
mov
push
cmpl
shll
push
arpl
or
iret
mov
mov
cmp
xor
ror
jle
adc
adc
mov
or
daa
arpl
sbbl
sbb
je
xchg
out
dec
rclb
shl
insl
lret
insl
inc
lods
cmpsb
or
scas
cs
lahf
js
adc
pop
jo
adc
push
sbb
sbbl
mov
pop
ret
jnp
shrb
pusha
or
mov
or
das
pop
add
lahf
fmuls
inc
mov
rcrl
push
or
mov
pop
shrb
pop
mov
fs
fsubrs
scas
ja
push
push
inc
mov
es
and
frstor
fs
scas
add
mov
add
push
lods
mov
ret
iret
lods
pop
lds
aas
xlat
adc
mov
mov
mov
les
adc
sub
dec
jnp
mov
jbe
sbb
loope
dec
push
jecxz
xor
push
shrl
push
mov
cwtl
and
pop
adcl
pop
stos
mov
push
stos
mov
inc
pop
or
add
dec
adc
outsb
nop
dec
fisubs
sub
and
xchg
add
mov
aaa
xor
mov
xchg
xchg
addr16
mov
rolb
xchg
shrl
adc
mov
inc
pop
sbb
add
les
stos
cs
repz
add
cmc
mov
or
adc
addr16
and
and
sub
pop
dec
pop
stos
mov
add
add
pop
push
jp
jg
push
sub
fildl
loopne
jae
mov
and
or
mov
inc
cmp
push
add
sbbb
push
xlat
pusha
sbb
test
xor
popa
sti
pusha
sbb
sbb
shll
addl
fistpl
cmpsb
push
shrb
adc
xlat
or
mov
mov
jmp
and
adc
dec
push
cmp
push
out
push
addr16
es
imul
sbb
mov
adc
inc
mov
das
dec
add
push
scas
push
xchg
mov
inc
outsl
push
pop
push
adc
push
lds
mov
cli
fwait
adc
pop
mov
mov
fcmovnbe
xlat
je
cmpsl
lock
lods
bound
adc
dec
subl
pop
sbb
pop
adc
or
mov
push
lahf
das
aaa
andl
loope
pop
inc
mov
inc
movsb
push
arpl
aad
lahf
lahf
inc
mov
addr16
cmpsl
je
es
mov
arpl
repz
push
sub
pop
jae
mov
pushf
mov
jecxz
out
pop
sub
push
mov
or
ret
fmuls
dec
or
ret
push
and
aam
jnp
fldt
or
test
aaa
push
add
scas
xor
fwait
das
lods
test
fldt
sbb
or
add
aaa
push
icebp
shll
and
or
inc
jnp
pop
add
adc
or
mov
adc
pop
or
jo
mov
xchg
mov
sbb
iret
or
push
mov
aam
pushw
push
jnp
cmp
shrl
and
push
or
add
jae
adc
mov
and
ret
push
inc
mov
ret
btc
and
dec
imul
xchg
outsl
pop
jns
es
andps
es
jno
sub
jbe
push
es
divl
mov
sti
sub
mov
add
xor
test
cmp
ret
bound
push
jnp
sbb
mov
mov
dec
add
ret
bound
outsl
sbb
fisubrl
bound
xchg
inc
add
and
xor
mov
popa
push
sbb
xchg
and
push
dec
sub
lea
push
shlb
pop
rcl
or
pop
bound
mov
mov
xor
inc
dec
xorl
xchg
sbb
jnp
popa
mov
pop
sub
mov
enter
push
popa
add
mov
testl
and
push
xor
add
inc
decl
ja
or
js
adc
sbb
push
arpl
jno
sbb
outsb
or
pop
add
pop
jns
shl
jne
push
inc
pop
sbb
aaa
out
mov
push
aam
xchg
fnsetpm(287
popa
adc
ret
lods
or
pop
mov
aaa
push
xor
scas
mov
jnp
inc
inc
sub
xchg
sbb
loope
lcall
mov
nop
mov
pop
and
jne
repz
sub
sub
mov
outsl
adc
push
add
scas
dec
fwait
mov
sti
das
xchg
adc
xor
dec
rcll
pop
ret
bound
sub
push
pop
xchg
in
mov
adc
pop
shrd
mov
or
or
sbb
lahf
enter
fcmovnb
lcall
rcl
pop
lret
cmp
jbe
into
addr16
inc
aam
add
push
sbb
push
jae
cmpsb
out
mov
xchg
push
jae
repz
xor
sbbl
shll
test
sub
sub
jmp
ja
rcll
cmp
jae
cmp
iret
and
sub
push
jecxz
adc
shrl
lods
xchg
call
mov
add
icebp
loop
aam
push
push
xchg
movsb
lcall
aam
sbb
test
cmp
ds
nop
pop
cmpsl
and
dec
das
cmpsl
jae
aad
dec
xchg
ret
mov
cs
pmuludq
pop
outsl
pop
dec
ja
cltd
inc
insb
push
jae
scas
inc
or
mov
das
and
mov
scas
xchg
or
sti
sub
imul
movsb
push
or
mov
aas
mov
mov
fistpl
push
inc
sbb
push
cs
lret
pop
jo
mov
cwtl
adcl
sub
sbbb
fldl
pop
aaa
aaa
test
repz
dec
inc
push
pusha
adc
movl
adc
add
sub
popa
cmp
jmp
xor
jmp
xchg
or
cmp
icebp
addr16
adc
inc
or
add
cmpsl
push
xor
addl
sub
push
cmpsl
push
adc
cmc
push
pop
mov
loopne
sub
xor
aad
or
jg
arpl
mov
pop
lea
pop
sub
stos
jecxz
stos
fldt
sbb
adc
outsl
push
and
popa
xlat
fisubs
rcrb
pop
roll
mov
insb
push
sub
daa
inc
ljmp
and
popa
sub
arpl
dec
add
aam
and
xor
xlat
imul
pop
mov
push
inc
xchg
or
pop
jp
lods
pushw
push
sub
xor
push
add
sub
pop
xor
in
mov
shlb
rcrb
mov
mov
jg
imul
xchg
and
mov
addr16
add
push
lret
fildll
ss
pop
ja
inc
xchg
add
sahf
cmp
loope
mov
inc
jae
mov
shll
jp
mov
sarb
cmp
dec
dec
inc
mov
add
mov
arpl
xchg
jp
bound
jae
ja
dec
dec
xlat
aaa
daa
push
pusha
call
loopne
inc
dec
add
inc
xor
ret
jg
pop
lds
cmp
daa
pop
stos
xor
mov
mov
ja
ret
test
mov
push
inc
lock
sub
jmp
xor
inc
push
lods
dec
or
add
je
inc
or
and
inc
test
ss
pusha
fmull
adcb
test
dec
inc
sbb
inc
lret
push
addl
inc
iret
dec
and
ret
sub
scas
mov
call
and
rorl
dec
mov
fistpll
das
mov
scas
sub
mov
filds
cmp
xor
dec
jnp
sub
adc
xchg
pop
add
lods
stos
das
jnp
adc
mov
or
imul
push
data16
or
add
push
data16
inc
or
jle
mov
add
lahf
cmp
push
xor
xchg
jmp
sub
sbb
outsl
dec
push
push
adc
xlat
xchg
sbb
test
adc
xchg
sti
dec
inc
shlb
sbb
and
stos
jae
add
and
dec
fildl
pushl
addb
sbb
mov
outsl
aaa
lods
adc
cmpsb
mov
pop
lahf
sbb
add
out
jae
sbb
mov
sti
add
or
daa
into
mov
jmp
subb
fisubrs
daa
and
mov
movsb
mov
pusha
adc
adc
scas
mov
call
pop
push
and
test
jl
push
push
sub
dec
jmp
incl
mov
ljmp
pop
add
or
xchg
subb
fadds
inc
jnp
xchg
and
xor
dec
and
mov
push
sbb
push
inc
dec
push
sub
mov
iret
cs
pop
shr
dec
sub
xorl
push
jb
jae
pop
js
xlat
out
add
shll
mov
mov
lods
xor
or
mov
jecxz
push
sub
add
jno
js
iret
jnp
add
adc
and
sbbb
inc
nop
add
mov
dec
dec
rcrl
shlb
pusha
insl
and
mov
pop
push
addr16
leave
sub
inc
push
cmc
movsl
addr16
mov
push
add
add
sbb
lds
pop
cmp
inc
add
inc
xorl
mov
aad
ja
out
inc
ja
stos
out
pusha
inc
inc
dec
adc
leave
lds
or
subl
pop
mov
stos
jg
sbb
cmpsb
scas
aad
add
push
jg
mov
mov
pop
xchg
add
rolb
xchg
add
scas
sub
add
lahf
xchg
inc
mov
add
jmp
jbe
sub
xchg
mov
xchg
cmp
cmpsl
push
adc
movsb
mov
insb
cmpsl
jmp
mov
sub
push
xchg
scas
xchg
ret
lods
fists
fistl
add
mov
push
nop
stos
adc
dec
imul
mov
xchg
negb
push
mov
or
sbb
ret
sti
xorb
inc
gs
adc
arpl
movsb
out
jb
lds
dec
inc
adc
adc
sbb
sbb
or
dec
test
ljmp
or
sbb
push
icebp
mov
es
aaa
sbb
addl
rolb
push
mov
das
or
in
xorb
imull
arpl
test
mov
shll
aaa
lods
xchg
sbb
lahf
xchg
pop
or
push
inc
sub
pop
adc
dec
sbb
push
or
inc
mov
push
or
lret
popa
inc
add
adc
xor
xchg
cmpsl
adc
push
mov
cmpsl
iret
jg,pn
leave
adc
push
sbb
add
adc
repz
sbb
adc
inc
add
push
andl
popa
adc
cmp
add
pop
adc
cwtl
das
fwait
popl
xor
push
ss
sbbb
fimull
lock
cmpsb
aas
jae
outsl
adc
ret
and
ret
inc
xchg
adc
xchg
sub
lds
data16
push
or
popa
test
xchg
adc
mov
outsb
dec
push
bound
adc
inc
or
outsl
sarl
cvtps2pi
bound
add
or
ret
sbb
movsl
push
xchg
inc
stos
adc
push
ja
lahf
or
adc
sub
sbb
test
popa
ja
movsb
bound
push
ljmp
bound
shrl
jae
push
loopne
add
and
push
add
cmc
lods
mov
data16
push
fdivl
mov
lods
lret
and
dec
add
or
imul
pop
pop
arpl
cs
jbe
jmp
pop
loop
xchg
or
adcb
shr
and
push
movsl
or
xsave
add
sbb
lds
or
pop
sbb
bndstx
movsl
sbb
adc
icebp
jmp
and
mov
movsl
inc
adc
dec
push
pop
sbb
push
adc
xlat
aad
fistpl
or
push
jmp
bound
push
test
jg
outsl
stos
push
pop
xchg
cmpsl
push
push
jp
dec
cmp
sub
pop
bound
addl
lret
sbb
mov
and
iret
xchg
stos
xor
push
or
mov
rorb
ja
leave
movsb
or
pop
and
aam
daa
pop
mov
aaa
adc
push
pop
bound
dec
adc
pop
inc
fildl
pop
gs
jo
fisttpl
scas
outsl
test
or
pusha
shlb
popa
and
ret
jbe
mov
stos
mov
rcrb
mov
mov
dec
xor
or
lea
daa
push
fildl
lds
jae
dec
cmp
and
inc
shll
sbb
jb
push
mov
rcrl
mov
out
mov
jmp
jg
inc
lods
or
dec
inc
loop
xchg
rorl
lcall
cmp
xchg
fists
loop
test
imul
mov
in
sbb
push
mov
push
imul
pop
push
mov
xor
in
sub
and
cmp
lcall
loopne
add
sub
je
call
jo
xchg
stos
subl
dec
sub
nop
mov
sub
pop
daa
lds
inc
outsl
xchg
or
mov
mov
daa
dec
insb
fldt
xor
aaa
jne
stos
aad
sbb
lahf
sti
xor
inc
lahf
lds
sub
ss
dec
mov
add
fwait
lahf
lahf
insb
inc
sub
mov
adc
jb
push
movl
jp
xchg
dec
arpl
cmpsb
sbb
fcmovnb
push
mov
dec
adc
mov
push
push
or
mov
mov
add
push
xchg
aaa
jbe
push
shrb
cmp
jg
adcb
jae
mov
add
shrb
outsb
es
ret
push
push
scas
xor
pop
aas
add
or
mov
mov
pop
add
push
adc
sti
jg
loopne
and
aam
mov
inc
cs
push
xlat
cmpsb
inc
incl
push
inc
adc
stos
imul
cmp
push
dec
ja
jnp
bound
push
push
adc
stos
sti
js
jbe
dec
aaa
dec
dec
add
in
fistpll
push
adcb
sbb
add
ja
adc
sub
add
dec
orl
sbb
fildl
mov
out
mov
add
pop
mov
es
add
add
dec
sarb
add
mov
in
xor
inc
rcrl
push
mov
jns
es
icebp
lods
repz
es
mov
ss
pop
xchg
cwtl
push
stos
pop
sbb
dec
push
pusha
push
dec
out
mov
inc
repz
or
pop
push
mov
ret
push
iret
test
in
sahf
mov
dec
out
and
mov
inc
jbe
add
dec
sub
cmpsl
sbb
ja
sub
pop
xchg
jae
xor
pop
imul
pop
jae
sbb
sbb
pop
stos
out
inc
jb
push
test
add
mov
add
mov
arpl
and
cs
sbb
ret
xor
imul
bound
cwtl
add
nop
jae
inc
stos
movsl
adc
ljmp
jae
outsl
or
mov
ja
inc
mov
dec
popa
cmpb
xor
xlat
out
insl
dec
sysret
outsl
xor
push
adc
sub
and
jbe
or
or
setbe
push
cmpsl
adc
xchg
mov
add
push
cmpl
js
push
sbb
ret
jne
push
sbb
fists
pop
add
adc
add
test
mov
filds
jae
mov
xlat
pop
and
or
shll
inc
pop
arpl
or
and
push
push
push
sub
cmpsl
and
adc
mov
aaa
jae
add
inc
and
mov
jae
cmpsl
mov
rolb
ja
stos
xchg
je
sbb
and
aad
addl
jno
cmpsl
add
push
sub
xchg
test
jmp
lret
xor
into
mov
jae
cmpsl
adc
daa
adc
mov
outsl
jae
sub
stos
aaa
xchg
push
mov
addb
iret
out
loopne
pop
loopne
sbb
mov
xchg
push
shll
adc
dec
pop
mov
pop
jecxz
push
push
or
mov
and
adc
test
or
js
or
pusha
cwtl
and
das
sub
je
dec
push
add
mov
push
mov
dec
mov
and
iret
add
dec
xchg
and
fwait
inc
push
cmp
pop
push
ja
movsb
scas
push
sub
aam
sub
mov
add
push
or
mov
adc
push
pop
xchg
pusha
jne
pop
xor
pop
adc
push
mov
scas
cmp
push
mov
jg
xchg
clc
xor
stos
jne
inc
sti
jae
mov
iret
xor
sbb
jo
cmpsb
das
dec
pop
add
stos
sub
sub
add
xor
pop
popa
fucomp
dec
cmp
inc
out
jg
sub
add
test
cmp
inc
jecxz
push
ja
or
pop
lret
dec
pop
cmp
adc
bound
inc
loopw
cs
jne
stos
dec
sub
mov
pop
mov
dec
lahf
and
and
push
xlat
and
adc
add
mov
mov
aaa
aaa
lcall
add
add
mov
xor
ds
out
pop
cmp
data16
mov
or
aaa
das
addr16
xchg
adc
out
popa
mov
mov
imul
mov
aam
jae
aas
test
jae
inc
rclb
iret
or
sub
jae
mov
mov
push
lret
xor
scas
shlb
test
shrl
adc
mov
adc
xchg
sbb
inc
sbb
fcoms
jo
jo
add
call
dec
jb
and
movsb
sub
cmp
cmp
imul
and
push
pop
decl
sti
pop
ret
cwtl
push
lock
pop
cwtl
and
mov
pop
add
ret
mov
lods
push
push
jae
pop
sub
and
stos
lods
and
pop
das
loop
mov
pop
ret
mov
jae
and
and
les
out
add
out
mov
and
jae
or
sbb
jnp
cwtl
sub
xchg
and
dec
adc
outsb
add
movsl
addr16
sbb
mov
adc
stos
sub
cmp
pop
mov
lret
lds
adc
fiaddl
imul
pcmpgtd
test
addl
cs
mov
mov
ja
mov
sub
mov
rorl
jno
cmp
stos
add
fadd
or
jmp
or
mov
dec
add
arpl
dec
mov
btc
adc
shrb
push
int3
jmp
stos
xor
or
aam
and
pop
aad
add
sub
jecxz
mov
sbb
imul
ret
and
adcl
test
lcall
aam
xor
outsl
mov
adc
movsl
insb
add
test
fwait
stos
xlat
sbb
push
sub
imul
sub
mov
pop
popl
add
mov
inc
mov
pop
enter
sub
xor
out
sub
pop
sub
dec
jecxz
pop
pop
rorl
sbb
push
insl
jg
push
and
xor
rclb
dec
mov
push
aas
sub
push
ret
test
pop
jge
mov
add
xor
stos
inc
xor
add
test
jnp
or
out
dec
fisubrl
or
addb
pop
dec
jae
lods
or
sub
daa
xchg
pusha
xor
sub
jno
mov
ret
push
xchg
outsb
push
pop
xchg
sbbb
mov
pop
and
inc
aam
imul
hlt
sub
pop
negl
pop
jae
inc
movsb
add
adc
adc
mov
imul
aaa
loopne
push
stos
aas
imull
les
jmp
xor
push
push
add
adc
movsl
pop
insb
inc
and
arpl
mov
imul
sub
call
mov
push
sbb
cs
imul
xlat
adc
dec
add
push
inc
jmp
adc
mov
push
ret
push
dec
or
and
pop
and
or
dec
add
or
aas
adc
les
adc
addb
pop
sbb
mov
test
push
int3
mov
and
xlat
dec
pusha
adc
daa
scas
lds
aaa
cltd
test
jmp
sysret
cltd
test
xor
or
add
mov
shll
orb
imulb
adc
test
aas
or
test
test
test
mov
rep
shrb
cli
js
inc
das
lods
sbbl
cmp
xchg
inc
or
mov
je,pt
loopne
sub
sub
rorb
mov
xor
outsl
xchg
lods
add
add
rclb
push
movsb
aad
mov
adc
push
mov
push
fwait
jle
mov
sysenter
repz
stos
xchg
mov
ja
adc
out
add
add
stos
xlat
shll
cmp
ja
jno
cli
ret
add
addl
iret
pop
mov
stos
mov
ljmp
popl
or
lret
push
rolb
or
add
inc
popa
movsb
inc
xor
xor
ja
cli
xlat
and
lods
mov
sub
pop
push
out
jecxz
jmp
ja
and
ja
insb
adc
mov
add
imul
adc
and
xlat
les
das
dec
bound
adc
add
push
xlat
ljmp
lods
push
push
imul
sbb
mov
jmp
xor
outsb
push
andb
mov
push
or
and
push
test
pusha
add
les
iret
sti
cmp
adc
repz
pusha
adc
push
push
in
add
mov
pop
cmpsl
mov
roll
xchg
lahf
cs
and
stos
out
xchg
test
add
xor
add
sbb
test
lahf
adc
js
lds
ljmp
push
adc
adc
mov
arpl
stos
dec
das
mov
add
mov
sbb
mov
jne
xor
andb
arpl
mov
push
mov
out
lds
inc
loop
adc
mov
or
xchg
cmp
inc
addr16
pop
mov
inc
sarb
inc
and
mov
push
mov
mov
inc
popa
ret
mov
cmp
adc
iret
push
mov
ret
mov
out
imul
mov
and
push
test
sub
xor
fstpt
sub
bound
and
cmpsb
jae
xchg
imul
mov
stos
mov
inc
test
xor
add
inc
dec
and
push
or
sbb
and
push
or
popa
adc
and
sub
mov
mov
test
add
add
dec
add
popl
or
adc
sub
test
jae
inc
and
dec
and
rorb
lcall
std
and
mov
push
inc
rorl
push
push
or
and
jns
out
adc
fwait
pop
or
add
xor
push
xlat
adc
fsubrl
loop
mov
jg
jp
jle
adc
cmp
lods
fistl
dec
xchg
jecxz
dec
pop
pop
sbb
das
mov
aas
push
xor
pop
or
add
arpl
sti
mov
jg
cmp
aaa
mov
pop
fwait
cmp
add
push
xor
mov
add
inc
xor
rolb
push
xchg
mov
add
dec
ficoms
adc
inc
js
popf
push
rclb
std
jp
imul
xchg
push
sarb
imul
pop
xor
xchg
add
push
outsl
sub
sahf
push
and
imul
jns
add
push
add
or
push
movb
push
inc
pop
sbb
xor
imul
pop
pusha
xor
lahf
push
outsl
inc
cmp
or
mov
pop
mov
push
shl
xor
nop
in
jl
add
es
or
cld
cwtl
push
jo
add
xorb
cwtl
push
rorb
adc
or
adc
jge
imul
xor
or
je
xchg
add
inc
adc
andb
aaa
adc
push
push
roll
dec
adc
aaa
lea
cmp
lds
add
xorb
mov
add
mov
mov
loopne
sbb
insl
xor
dec
mov
cmp
and
push
mov
push
pop
fsubl
and
shll
scas
xchg
add
ds
outsl
jns
inc
add
fsts
mov
sub
or
add
fldt
add
sub
xchg
push
dec
add
lahf
adc
xor
jecxz
xor
mov
das
and
push
add
iret
adc
cmp
ret
xlat
push
std
dec
das
xor
add
iret
movsl
inc
add
dec
jmp
add
dec
pop
ljmp
or
mov
sub
ret
xor
jmp
inc
adc
mov
adc
lds
insl
jo
add
es
rcll
imul
push
adc
clc
mov
and
mov
fs
add
dec
fisubrl
test
fwait
cmpsb
adcl
into
insl
pop
xor
lcall
inc
jbe
cmp
sbb
idivb
or
adc
add
arpl
test
aas
and
inc
incl
dec
add
stos
inc
rolb
pop
ja
jo
inc
sbb
mov
push
sbb
dec
dec
xchg
xor
sub
movsb
add
push
xor
fldenv
push
fld
push
rclb
sbb
dec
sti
cmp
mov
ja
subb
xchg
pop
icebp
mov
pusha
mov
jg
push
adc
pop
popa
add
rorb
decl
pop
inc
leave
xchg
pusha
inc
jecxz
ret
push
jo
mov
add
fstl
js
ss
adc
ret
adc
popa
ss
mov
imul
mov
std
adc
sbb
sub
add
or
mov
lock
mov
mov
add
cmc
flds
je
cmp
mov
adc
mov
and
les
in
adc
cmc
adc
dec
jo
cmp
and
flds
cli
or
pop
sub
sbb
rorl
mov
adcb
mov
xchg
cli
mov
push
insb
add
pop
jnp
cmp
jmp
add
lret
push
mov
and
add
movsl
or
lret
push
loope
jbe
or
in
insl
and
or
fbld
insl
add
adc
jo
sbb
mov
xor
mov
push
aaa
adc
cmp
lock
add
outsb
adc
sbb
add
movsl
or
rcll
dec
adc
push
rclb
sub
int3
add
movsl
insl
mov
mov
xchg
push
jae
xor
rolb
xlat
mov
push
insl
enter
mov
insl
adc
push
lock
insl
add
push
add
fiaddl
ss
lock
in
adc
shrl
fcomps
insb
add
mov
sub
cltd
mov
mov
lods
or
shrl
xchg
sub
sub
sbb
add
xchg
adc
mov
iret
stos
call
pop
pop
add
adc
xor
cmp
pushf
jo
or
es
ret
cwtl
sbb
pop
push
bound
push
xchg
push
pop
and
xchg
imul
scas
push
add
add
pop
inc
pusha
add
call
mov
pop
pop
arpl
and
inc
mov
or
ss
movq
inc
push
in
dec
inc
push
push
inc
push
jo
stc
mov
cmp
and
lods
inc
inc
mov
ret
cmc
or
jge
pop
lds
je
push
cld
mov
cld
or
push
dec
insb
fs
dec
pop
and
sbb
push
sysret
inc
loopne
push
or
ret
jle
push
js
add
ret
push
ret
int
mov
pusha
xor
enter
pushl
incb
and
dec
push
loopne
or
push
aam
push
testb
dec
dec
add
pop
sbb
insb
or
and
addr16
imul
add
addb
add
mov
dec
insb
pop
xor
pushf
pop
sbbl
in
bound
fldt
add
shr
push
push
jb
or
or
nop
pop
add
clc
sahf
adc
sub
add
sbb
fwait
imul
add
addb
iret
or
fwait
add
ret
pop
cs
pusha
cmpsl
push
loope
adc
ds
xor
mov
stc
popa
push
pop
call
das
bound
sbb
and
and
cwtl
shl
and
stc
mov
jg
pop
jle
push
push
pop
das
ds
insb
sub
sub
sub
push
or
cmp
or
dec
outsl
into
mov
jp
push
popa
das
xor
xor
sub
push
and
mov
and
and
popa
addr16
sub
daa
add
jae
add
testb
aaa
push
add
data16
inc
lret
add
adc
xchg
loopne
push
or
sbb
inc
mov
bound
dec
fidivl
add
add
scas
in
scas
add
push
pop
and
add
sbbb
jno
and
inc
fstps
sub
sbb
aam
inc
fnstcw
ljmp
dec
outsl
loop
pop
mov
test
sub
sahf
xor
scas
pop
push
jge
fisubs
jo
inc
andl
xchg
fcomps
inc
lahf
push
mov
fistl
dec
arpl
mov
cs
dec
jnp
inc
ja
je
push
add
nopl
push
psubq
ret
cli
sbb
dec
testb
sub
inc
imulb
sbb
jno
fimuls
xchg
mov
jg
sub
push
sbb
cli
inc
int3
in
and
aas
jnp
fwait
and
insb
xchg
push
add
adc
add
push
or
in
pop
jmp
pusha
add
jg
dec
jo
insb
and
test
fsubrs
data16
and
and
sbb
daa
push
rorl
push
not
pop
and
sbb
mov
mov
add
xchg
pop
inc
add
sbb
lods
push
pop
loopne
jo
pop
add
sbb
inc
mov
pop
cmp
adc
mov
mov
stc
ja,pn
adc
aaa
push
inc
cmp
xor
fcmovnu
mov
je
adc
sub
adc
add
out
pop
xchg
lods
fs
imul
adc
add
clts
push
imul
jbe
inc
sbb
sub
xor
cmpsl
add
pop
lahf
or
and
xchg
test
push
repz
in
push
out
iret
sub
shll
lods
or
pop
sbb
push
test
or
mov
and
iret
bound
mov
aad
popfw
mov
test
test
ret
mov
pop
and
push
arpl
jbe
adc
or
loop
insl
mov
sbb
loopne
pop
push
dec
bound
stos
jp
inc
sbb
pop
cmc
adc
rcr
inc
imul
inc
sbb
xor
jmp
mov
jo
mov
fists
notb
fbstp
andl
ss
pop
push
or
dec
pop
mov
pop
test
out
test
push
and
and
push
stos
inc
pop
or
stc
movsb
outsb
xchg
or
cmp
or
jb
and
gs
xor
pusha
add
ret
mov
aaa
dec
or
push
rorb
mov
ss
sbb
lea
inc
xor
test
cmpsb
jbe
add
or
imul
ret
arpl
packuswb
daa
pusha
push
pusha
sub
addb
jb
fcoms
pushf
inc
push
adc
push
adc
mov
cmpsl
lods
subl
cmp
sub
imul
add
and
cmp
in
push
and
push
sbb
test
jge
add
inc
push
dec
mov
rorb
cltd
popf
sub
scas
mov
mov
mov
mov
sbb
adc
ficoms
pop
out
in
dec
cmp
pop
outsb
dec
aaa
pop
add
sbb
pop
pusha
sub
and
jbe
pusha
int3
icebp
fcomps
popa
mov
inc
adc
out
into
shlb
pop
xchg
aas
mov
arpl
and
dec
lods
dec
push
sub
pop
pushf
ret
dec
loope
dec
or
scas
lods
imul
cmp
jae
insb
cs
ret
add
pop
add
or
push
xchg
lcall
enter
jmp
inc
inc
and
les
jl
and
rclb
push
sbb
ficoms
fimull
sub
stos
sub
mov
pushf
outsl
orb
flds
and
sub
xor
push
mov
roll
lods
fs
push
sub
and
das
xchg
and
cwtl
and
push
inc
pusha
pop
loope
push
jmp
pusha
and
insl
cmp
push
bound
dec
adc
lds
int
shl
push
jns
call
repz
popa
sub
dec
loopne
inc
js
ja
test
fisubrl
lods
mov
jge
test
ret
ja
push
aad
es
and
std
lret
stos
aaa
pop
dec
pushf
scas
sbb
mov
inc
insb
xor
inc
push
fcoml
and
xchg
js
dec
test
xchg
or
mov
jbe
test
xor
cmp
loopne
sub
ret
jnp
and
fdiv
mov
pushf
mov
push
mov
inc
jo
sub
jp
fmuls
das
xchg
add
inc
sub
test
icebp
pop
push
cmp
or
arpl
out
cmp
jae
push
out
jns
mov
adc
adc
ror
push
lock
imul
inc
outsl
and
and
and
fs
loope
cwtl
pusha
into
xor
push
or
push
and
sbb
ss
xor
push
jbe
nop
push
push
arpl
pusha
ret
sub
add
fldl
outsb
pop
push
outsb
inc
outsl
mov
adc
mov
dec
mov
jg
mov
jbe
ss
lret
aad
in
and
pop
xchg
mov
test
push
pop
cmp
inc
cmp
dec
jne
xchg
mov
enter
sbb
insl
fsubs
cmp
push
inc
pop
mov
shr
nop
pop
xchg
sti
jnp
dec
hlt
in
mov
js
lods
shlb
inc
sbb
lret
pop
fadds
loope
adc
push
aas
sbb
or
and
mov
dec
inc
push
xor
sbb
and
ret
popa
lds
daa
xor
mov
and
fisubl
daa
xchg
jo
adc
fwait
addr16
push
sub
sbb
inc
jb
cmpsl
out
addr16
or
dec
adc
jne
pop
xchg
in
mov
push
inc
pusha
and
sbb
dec
push
dec
js
orb
sbb
inc
mov
sar
insl
cltd
inc
dec
push
dec
inc
mov
and
and
jnp
out
xor
push
sbb
cmp
fildl
ret
jbe
mov
test
insl
jae
sub
outsl
pusha
mov
dec
data16
sub
and
sub
sub
mov
popa
arpl
insb
sub
inc
sub
inc
adc
mov
or
dec
sbb
sub
pop
inc
pushf
mov
leave
fucomp
and
sbb
sbb
add
adc
inc
sbb
ret
inc
cltd
mov
inc
lods
pusha
leave
mov
push
and
lods
add
jmp
shl
pop
pop
loop
push
add
mov
adc
test
pop
push
sub
sub
ret
push
es
xchg
cmpsl
cmp
and
insb
push
and
push
push
add
js
add
in
fwait
mov
pop
push
jo
sbb
inc
or
dec
push
cs
imul
add
loopne
imull
insl
sub
pop
lea
les
popl
lock
jo
adc
aad
mov
jle
lret
xchg
pop
ret
pop
aad
movb
sbb
js
repz
cmp
fucomi
pop
xor
mov
sbbb
mov
iret
dec
enter
sub
mov
and
sti
arpl
xchg
pop
pusha
sbb
sbb
lea
fcoml
inc
sub
xchg
cmp
push
sbb
jns
jb
nop
sub
int
xor
add
test
mov
xchg
adc
notl
mov
popf
push
cmp
loopne
jno
push
and
shll
mov
or
insb
sbb
sti
inc
push
sub
adc
jecxz
insl
cmpsl
shrl
movsl
xchg
inc
and
fs
pop
sbb
mov
sub
jge
push
or
dec
adc
mov
in
out
inc
aaa
cmc
adc
and
xor
fisttpll
ja
xor
loopne
nop
fwait
out
mov
lods
xlat
imul
sbb
inc
adc
nop
inc
ret
fstps
sub
adc
cmp
sbb
or
rolb
notl
xor
ret
and
pusha
push
or
sub
ja
gs
dec
adc
and
adc
adc
and
loopne
imul
add
push
and
mov
icebp
btc
pop
movsl
and
push
insl
jno
inc
lds
mov
pop
add
je
jecxz
pop
bound
pop
ja
jecxz
fstps
sub
push
sbb
pop
and
push
dec
dec
adc
ret
or
adc
ret
jnp
sub
imul
pop
adc
jbe
sbb
pusha
sbb
pop
stos
movsl
xor
mov
movsl
imulb
fsubrs
and
xchg
or
psubusw
inc
xchg
cmp
imul
push
pop
fs
cmp
in
cmp
adc
mov
pop
sbb
add
xor
lods
ja
mov
cltd
aam
mov
and
sbb
push
imul
mov
or
adc
rolb
lods
mov
bnd
fiaddl
movsl
push
sbb
sbb
sbb
dec
pop
adc
add
and
lahf
cmc
imul
jo
movsl
jno
jecxz
pop
subb
add
xchg
insl
out
sbb
jl
fnstenv
cmpsl
popw
imul
rolb
sbb
add
and
jmp
xor
imul
jbe
insl
js
or
add
or
sbb
loope
pop
cltd
or
xchg
ficoml
pop
dec
icebp
adc
fdivs
pop
pop
popa
mov
pop
mov
mov
ja
push
and
push
jo
rolb
cmp
inc
rcll
mov
repz
pop
mov
jg
cwtl
lods
pusha
inc
inc
pop
push
mov
or
push
rcll
rcll
dec
sbb
in
arpl
push
sahf
mov
enter
shrb
and
inc
jb
sbbl
rcl
xor
sub
adc
sti
mov
nop
not
xor
cmp
and
aas
add
shll
push
sub
mov
fcomps
inc
outsb
sbb
dec
mov
insl
adc
out
dec
xchg
jl
nop
and
lods
clc
pop
jle
popf
add
xor
or
mov
ljmp
loopne
popl
mov
sbb
add
adc
rorb
add
nop
clc
mov
mov
sub
iret
insl
push
cmp
addr16
push
add
sub
cmpsl
bound
imulb
lds
lcall
scas
insb
or
aad
jne,pn
xchg
int
add
outsl
push
and
cmp
enter
sbb
sbb
and
push
cmp
les
hlt
inc
inc
fidivs
mov
mov
lret
and
push
xor
es
jns
mov
dec
imul
lahf
fs
loopne
out
jnp
iret
add
je
out
cmp
xor
mov
out
fs
mov
mov
lahf
inc
dec
gs
and
aaa
inc
fidivs
mov
inc
jae
dec
fsubrs
bound
jle
or
jbe
movsb
mov
mov
sub
incl
add
add
add
add
add
hlt
leave
and
leave
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
mov
imul
fldenv
