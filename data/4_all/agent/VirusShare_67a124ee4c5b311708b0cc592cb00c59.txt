mov
in
mov
mov
mov
rep
leave
ret
adc
add
add
out
fcoml
add
shrb
sbb
dec
push
fnsave
push
or
add
mov
in
sti
mov
add
jg
jecxz
sbb
dec
add
pop
stc
fsubrp
adc
pushl
arpl
fidivrs
push
push
adc
cmpb
sbb
adc
add
push
addr16
sub
inc
pusha
mov
incb
cld
push
add
push
xor
add
add
out
jbe
or
xchg
cmpb
push
adc
add
imulb
sbb
add
inc
add
adc
dec
inc
lcall
fdivl
ret
pcmpgtw
imul
xchg
faddl
hlt
add
push
mov
popf
sub
pop
cld
sub
xor
sbb
sbbb
xchg
and
leave
mov
pop
sbb
out
cmpl
js
outsw
or
add
add
cs
rol
and
nop
cld
jmp
mov
je
mov
push
and
push
les
or
xorl
mov
sbb
les
lock
je
jae
sbb
je
push
mov
in
fsincos
popw
mov
and
sti
cmp
push
nop
pop
les
adc
fistpll
cmp
jne
or
cmpw
jne
inc
inc
mov
mov
cmp
je
jbe
je
cmp
je
mov
inc
inc
sbb
shr
ljmp
mov
sbb
adc
mov
or
jbe
inc
mov
mov
das
neg
clc
inc
les
push
cld
inc
mov
clc
mov
xchg
fdivrs
mov
inc
shlb
pop
mov
mov
fimull
xchg
sbb
mov
cltd
mov
dec
adc
mov
inc
in
sbb
mov
add
test
cmp
and
js
adc
fs
ret
nop
hlt
imul
iret
fsts
jb
add
adc
push
arpl
inc
jmp
mov
mul
push
sbb
pusha
and
jl
pop
and
lock
cmpsl
adc
push
sbb
into
pop
call
push
or
xchg
lods
lods
jo
xchg
xchg
jns
push
and
ret
outsb
push
or
push
imul
and
pop
adc
dec
aaa
in
adc
xor
pop
adc
mov
fwait
test
sbb
outsl
ljmp
call
jo
inc
jne
je
outsb
pop
inc
insb
popa
mov
jae
sub
xor
in
insb
faddl
pop
pop
mov
mov
loope
test
in
jb
rolb
add
jg
cmp
pop
adc
jns
test
pop
xlat
repnz
mov
frstor
jae
push
adc
mov
cmpsl
addr16
mov
pop
sub
fistl
sbb
push
jmp
push
push
inc
push
dec
inc
add
in
mov
cld
push
push
dec
movb
clc
push
and
adc
xchg
fcoms
fisubrs
mov
or
ljmp
int
or
fdiv
or
xchg
and
sbb
sub
inc
sbb
cmpl
add
jne
je
fadds
or
jb
hlt
mov
adc
jbe
mov
add
sbb
pop
jnp
add
ret
fcmovnu
sbb
imul
neg
pop
xchg
push
leave
cld
stos
adc
add
fistpl
out
rol
or
mov
fdivp
aam
lret
imulb
loopne
fcom
faddl
imul
add
add
cmp
jnp
pop
fsub
jge
cmp
das
mov
enter
test
push
jl
lock
lock
int3
jo
subl
leave
xor
shrb
shll
add
inc
xchg
adc
frstor
mov
mov
popl
rolb
xchg
add
data16
or
pop
xor
xchg
pop
dec
or
leave
mov
pop
adc
cltd
in
andl
stos
mov
xor
stc
pop
ret
or
adc
push
fwait
icebp
into
and
sbb
pop
jbe
test
adc
push
int3
rclb
lods
jmp
movsb
lcall
or
cmpsb
adc
fwait
adc
leave
loop
shll
movsb
in
push
push
pop
outsl
mov
mov
or
push
push
fistps
pop
mov
hlt
aaa
push
pop
cs
mov
movb
fcomps
add
out
lock
hlt
mov
push
pop
sub
outsl
and
pop
cld
insl
jnp
jnp
loopne
jl
sbb
add
xlat
push
sbb
int3
in
jmp
rep
loope
inc
in
dec
jmp
icebp
or
loope
shl
rorl
jecxz
popf
jmp
cltd
idivl
pop
pop
mull
sub
sub
pop
clc
and
mov
out
adc
hlt
fadd
clc
sbb
icebp
mov
adc
insl
outsl
in
push
pushl
lock
ret
push
jne
insl
fiadds
and
jge
xlat
or
shl
adc
shr
fwait
loopne
mov
pop
sub
push
push
inc
dec
add
push
jmp
enter
jo
fistps
inc
mov
subl
ja
or
aaa
sbb
xchg
mov
or
fldenv
sbb
add
pop
test
orl
or
cld
pop
fbstp
sbb
xchg
in
adc
jg
xchg
gs
gs
cld
pop
push
clc
lcall
sbb
int
repnz
out
in
call
xor
das
xor
lock
add
jb
xchg
cld
push
clc
xchg
nop
fisttps
cmp
lock
mov
imul
or
hlt
cmpsb
addl
jo
push
sti
fidivs
ja
lock
xor
inc
out
dec
out
loopne
jne
adc
outsb
in
mov
adc
jne
lea
pop
neg
daa
jle
mov
insl
in
inc
adc
incl
push
dec
sbb
xor
lret
repz
jnp
int3
xor
push
pop
sbb
xchg
jnp
add
dec
cmp
mov
repnz
push
or
das
adc
pop
mov
add
icebp
in
dec
shll
push
lock
xchg
or
jnp
dec
cmpsb
fwait
xchg
popf
pop
push
mov
sub
out
jnp
nop
mov
add
out
push
test
add
movsl
fcmove
add
and
and
ja
push
outsl
insl
popa
outsb
cld
jmp
in
sbb
dec
push
push
push
and
lock
ljmp
loop
lcall
and
mov
jb
insb
cs
loopne
repz
ljmp
imul
or
sbb
adc
xor
and
out
out
out
out
out
icebp
aaa
xor
pop
fisttpl
push
sbb
sub
cli
jbe
loop
and
in
scas
iret
out
lock
jbe
cmp
or
xor
repz
sti
xor
in
gs
mov
ja
adc
loope
repz
and
loop
lcall
fcmovnu
out
sbb
dec
call
mov
cs
jmp
lods
cmp
jge
or
dec
out
xor
push
push
cwtl
lock
into
shlb
sti
insl
pushf
or
xor
sub
cmp
dec
push
fst
sbb
push
test
jle
dec
adc
or
push
je
or
pop
loop
aas
loope
sub
popf
mov
orl
xchg
push
sub
movsb
in
pop
mov
and
mov
imul
psadbw
lods
xor
adc
sbb
push
mov
mov
mov
dec
push
stc
outsl
sbb
ss
xor
int3
push
push
dec
repnz
or
push
adc
or
push
push
fmul
test
aaa
push
and
push
push
leave
and
or
mov
push
add
fiadds
bnd
fdivl
push
lret
xor
xchg
mov
insl
inc
mov
xchg
aas
push
imul
adc
jns
nop
and
pop
or
xchg
or
addl
lfence
cmp
popa
imul
sbb
les
shr
and
jne
popa
call
jmp
mov
in
mov
int3
notl
iret
xlat
popa
adc
fs
ret
movsb
movb
push
sbb
mov
ret
and
add
pop
nop
daa
mov
fdivl
or
adc
ficomps
and
or
ret
xor
mov
ljmp
and
dec
xor
xor
push
push
pop
pusha
xor
xor
pop
or
add
xor
xor
xor
adc
xor
xor
inc
xor
xor
xor
cmp
and
xor
xor
sbb
cld
clc
leave
xor
xor
lock
and
enter
add
enter
pushf
mov
enter
jo
enter
mov
enter
rcl
enter
mov
nop
mov
enter
addb
jl
adc
add
leave
xor
mov
inc
cmp
adc
not
hlt
fildll
inc
jmp
sub
lea
add
or
jne
lea
xor
je
pop
cmp
int3
int3
aaa
ja
sbb
jo
data16
movw
adc
jge
cmp
push
lds
cltd
cltd
sbb
incl
fdiv
loope
ret
xchg
add
sub
add
mov
inc
mov
fisubl
loopne
pop
mov
cwtl
sbb
es
cmp
jb
decl
pop
add
xor
popf
adc
scas
les
jne
stc
dec
mov
or
cmp
testb
or
or
ret
add
nop
push
add
iret
jmp
jecxz
in
and
dec
inc
subb
pop
and
out
out
adc
fbld
repz
stc
call
mov
adc
das
xor
lock
and
xor
and
or
sub
push
jns
cmp
or
das
push
add
rcr
fisttps
ds
xor
inc
push
push
dec
push
and
add
or
fbld
push
add
jns
insb
jne
imul
in
in
jmp
mov
adc
jmp
imul
repnz
xchg
ljmp
cs
jb
dec
push
and
icebp
jg
insb
sbb
mov
sti
in
cmp
in
jmp
icebp
cld
adc
insb
push
mov
mov
fisubrl
mov
or
sahf
push
outsl
data16
popa
jb
pop
inc
xor
pushf
outsl
jg
fistpl
pop
pop
jae
jb
add
push
outsl
jb
push
add
mull
pushl
outsl
push
jne
add
inc
outsb
push
add
insl
ret
gs
add
jl
add
incl
pop
decl
data16
dec
add
leave
jle
mov
outsb
add
add
imul
push
push
add
add
incl
movsl
add
sub
or
movsl
pop
addb
xor
push
mov
lea
cmpsl
pop
sbbb
add
sbb
mov
and
fwait
pop
adc
rcrl
jg
add
mov
lods
fisttpl
lcall
jmp
testl
stc
gs
test
movsb
fwait
sub
adc
xorl
cmp
gs
lods
push
add
add
or
add
fidivrs
incl
adc
add
data16
bound
sub
das
sub
sub
gs
subl
mov
fs
das
ss
jecxz
out
jmp
cmp
and
enter
leave
data16
shrl
xchg
and
xor
gs
xor
ret
add
insb
xchg
lret
pop
test
mov
and
dec
adc
andb
mov
je
push
push
js
je
mov
gs
outsl
fs
gs
popa
outsb
fs
arpl
outsl
inc
insb
insb
push
or
or
int
push
in
insl
imul
pop
sub
xor
mov
cmp
mov
push
gs
fcmovnu
jbe
pop
push
cmp
gs
inc
sqrtps
jb
jge
mov
adc
das
imul
mov
or
inc
pop
dec
insl
imul
js
dec
jne
outsl
or
divl
mov
inc
jb
inc
imul
or
insb
ss
bound
or
fsubrp
iret
push
inc
jb
jae
push
adc
jbe
xor
insl
outsl
xchg
xchg
pminub
pusha
mov
push
push
pop
imul
push
es
enter
xor
xor
imul
outsl
ja
fucomip
imul
push
data16
inc
popa
jo
jne
or
mov
insb
addr16
je
lcall
popa
addr16
push
movsl
or
dec
push
call
inc
push
push
or
mov
jmp
sbb
sub
sub
push
in
popa
adc
loopne
imul
ret
popa
ss
popa
insl
inc
adc
movsb
cmp
inc
inc
or
daa
adc
lea
jne
jl
imul
inc
mov
in
int3
inc
je
insb
dec
inc
or
mov
or
testb
mov
lret
gs
insl
mov
sub
add
rcr
xchg
cmp
or
sbb
in
jae
mov
xlat
pusha
sub
mov
aas
mov
sbb
outsb
pop
push
push
inc
push
je
in
xlat
push
dec
in
ja
popa
arpl
popf
jmp
sbb
jbe
add
pop
sbb
or
pop
or
sti
add
decl
push
or
add
or
pushl
or
and
test
adc
adc
push
sub
mov
or
insb
imul
add
pop
ljmp
lcall
add
lock
add
or
sbb
pop
sbb
push
pop
lock
add
fcomi
lret
call
or
adc
push
push
ficompl
push
clts
or
jp
sbb
or
add
push
inc
test
inc
incb
add
inc
loopne
push
and
adc
adc
adc
mov
push
adc
add
idivb
jmp
mov
add
xor
iret
push
jbe
pop
push
pusha
ss
jb
xchg
int
or
js
mov
add
dec
add
or
cs
mov
nop
pop
add
jb
mov
or
inc
pop
jmp
in
mov
es
dec
and
or
dec
jae
jmp
xor
dec
rorl
and
cmp
xlat
push
mov
ret
pusha
mov
daa
pop
or
andl
add
dec
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
