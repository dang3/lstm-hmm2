mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
lds
fldcw
iret
adc
es
push
inc
xor
and
or
xor
cmp
add
sahf
fistpl
stos
mov
jmp
pushf
aas
add
inc
and
jl
inc
gs
bound
pop
jnp
leave
push
sahf
shrl
xorb
daa
xor
addr16
insb
nop
repz
jne
test
push
cmpl
sbb
xchg
lcall
cmovno
fiadds
rclb
iret
int3
pop
dec
ljmp
mov
push
femms
lock
dec
mov
ret
pop
daa
ja
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
.byte
hlt
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
lds
fldcw
iret
adc
es
push
inc
xor
and
or
xor
cmp
add
sahf
fistpl
stos
mov
jmp
pushf
aas
add
inc
and
jl
inc
gs
bound
pop
jnp
leave
push
sahf
shrl
xorb
daa
xor
addr16
insb
nop
repz
jne
test
push
cmpl
sbb
xchg
lcall
cmovno
fiadds
rclb
iret
int3
pop
dec
ljmp
mov
push
femms
lock
dec
mov
ret
pop
daa
ja
adc
sbb
bound
std
xchg
inc
jge
mov
pop
cmpb
mov
add
leave
xor
cli
and
push
jae
hlt
mulb
and
loopne
and
push
push
js
bound
cwtl
xchg
ret
push
push
mov
bound
jo
rcrb
add
lock
inc
pop
aaa
or
xor
fwait
xor
ljmp
out
mov
mov
loope
popa
sarl
sarl
jae
iret
fcompl
scas
in
pop
cld
mov
dec
add
mov
shll
imul
ljmp
lods
xchg
fisubs
mov
adc
and
stos
sub
adc
lret
scas
mov
ss
mov
pop
into
cmp
mov
xchg
pop
inc
or
cmc
incb
jae
pop
fwait
lret
incb
aaa
arpl
adc
arpl
add
aaa
jecxz
dec
fimuls
hlt
out
mov
fisttpl
cltd
xor
outsb
or
push
mov
sahf
and
fcoms
imul
add
cwtl
sbb
je
dec
adc
pop
lock
imulb
or
adc
push
xchg
mov
ds
dec
jle
into
in
cmpsl
popa
add
pushf
bound
movsb
aad
pop
out
pop
out
insl
xchg
iret
mov
stos
pop
jl
xchg
mov
sbb
pop
mov
cmc
xor
xchg
stos
repnz
mov
add
or
imul
xchg
dec
jns
mov
push
jg
add
xorl
xchg
filds
fucomip
sbb
add
xor
pop
pop
xchg
ss
lea
mov
in
dec
loopne
pushf
jl
cmp
xor
in
fstps
add
dec
jnp
shrb
insl
rolb
repz
jmp
test
shrl
loop
rcll
lods
xchg
in
adc
sbb
xchg
out
jmp
test
pop
jbe
push
mov
xchg
jle
dec
xor
dec
xchg
sub
shrl
cltd
inc
icebp
add
cwtl
mov
push
sbb
out
or
fs
lock
insl
std
mov
loop
xlat
or
sbb
adc
mov
aaa
mov
push
rcl
cmp
data16
sbb
inc
pop
mov
xchg
je
and
scas
arpl
inc
or
lods
xchg
pop
xor
or
test
sbb
lcall
aaa
add
mov
xor
fnstsw
inc
cld
popf
mov
cmpsb
xchg
es
enter
ja
mul
fiaddl
lods
jne
inc
push
mov
ret
mov
ss
xchg
ljmp
jnp
aam
or
cmp
fcoms
daa
int3
mov
mov
enter
out
es
xchg
xor
jne
mov
mov
clc
dec
adc
inc
add
sbb
xchg
mov
loopne
outsl
mov
je
cld
pop
mov
xchg
sti
mov
jl
inc
and
aaa
mov
adc
mov
call
popa
inc
addr16
and
xchg
pop
mov
sahf
dec
and
adc
xlat
mov
sub
mov
push
cmp
shl
lods
scas
mov
outsl
and
push
dec
pop
jl
lock
push
cmp
filds
cmpsl
sub
aas
pop
mov
push
rorl
xor
stc
sub
mov
es
dec
popf
dec
les
cmp
ror
jbe
cmp
push
jo
lock
out
out
arpl
sti
cmc
xor
mov
xchg
das
inc
int3
test
jb
xchg
in
add
pop
outsl
dec
sbb
push
sbb
xor
fwait
adc
inc
dec
sbb
dec
out
mov
push
sub
sub
and
fwait
adcl
jmp
mov
mov
mov
pop
cmp
inc
ret
xor
mov
push
dec
push
push
mov
inc
cli
adc
sub
loopne
dec
fnsave
int
ja
or
lea
cli
inc
mov
daa
inc
jge
adc
cwtl
push
mov
lods
call
out
mov
and
mov
cmpsb
dec
scas
pop
mov
inc
push
cmp
jbe
mov
fildl
lods
cmp
jo
jg
cmp
dec
aad
cmp
sub
mov
jle
push
cltd
out
mov
fwait
jnp
add
push
xor
stos
stc
into
mov
cmp
pop
inc
sub
mov
enter
add
loopne
add
aad
push
lahf
xchg
push
pusha
mov
sub
push
adc
popa
into
movsb
ret
jnp
pop
or
mov
iret
out
ret
mov
push
add
push
popl
adc
xchg
inc
iret
xorl
cwtl
push
cmp
iret
mov
mov
mov
js
or
mov
imul
dec
add
mov
cmc
lods
out
stos
rol
movsb
fildl
dec
cmp
xor
xchg
xor
loop
aas
mov
xor
xor
push
mov
mov
ret
popl
sub
mov
adc
icebp
fistpll
inc
scas
dec
xchg
fstpt
push
sbb
sbb
inc
pop
sub
xchg
cmpsb
inc
pop
xor
notb
push
jbe
stos
sub
cmp
test
icebp
sahf
mov
test
in
dec
mov
mov
jo
dec
adcl
mov
jl
jo
repz
mov
xchg
jmp
fsubl
loop
fisttpll
test
clc
xor
mov
aaa
xor
cmp
xchg
test
add
ror
jle
push
loopne
fbstp
sub
mov
xchg
add
xchg
mov
sbb
sbb
rorb
les
rclb
mov
cmp
insb
pop
inc
jg
frndint
pop
divb
sbb
push
das
jo
or
sbb
out
orl
mov
push
cmpsl
jbe
dec
xor
sub
ret
js
cmc
xor
fwait
ds
xchg
xor
ja
loope
adc
sbb
mov
mov
iret
and
faddl
pop
xor
pushf
ror
out
int
dec
not
lock
scas
lret
dec
jle
ja
adc
pop
xorl
add
pop
rolb
test
xchg
pop
jp
fstpl
addr16
pop
add
mov
pop
in
mov
or
mov
mov
jae
mov
andl
add
sub
pop
scas
scas
and
mov
xchg
push
inc
daa
jg
mov
repnz
stc
movsl
hlt
ret
cmpsb
push
repnz
jne
adc
sub
adc
inc
jl
mov
mov
pushf
xor
inc
mov
adc
mov
rorb
sbb
mov
pop
cmpsb
jle
add
lret
aaa
cwtl
das
sub
out
fistps
xor
cmp
mov
adcl
ds
cmpsl
adc
fldt
sahf
nop
call
push
push
imul
xor
and
in
jge
push
fstl
mov
push
loope
shll
sbb
jnp
hlt
in
out
ret
add
dec
in
repnz
rcl
mov
lcall
and
and
or
les
movl
fucomp
or
mov
mov
xor
push
mov
pop
test
cmpsb
repz
inc
movsl
int3
push
pop
pushf
dec
loop
fwait
push
sub
mov
jl
sbb
inc
sbb
push
insl
inc
outsl
inc
shll
push
push
lahf
push
cwtl
sbb
into
cld
sub
cmpsl
fistpl
aaa
add
mov
ja
insb
push
in
inc
fnstenv
iret
repz
xor
mov
xor
addr16
xchg
mov
adc
sbbl
scas
sub
jp
insb
std
sub
lea
into
and
push
push
dec
fisttpll
mov
mov
ret
repnz
dec
int3
cmpl
aam
jno
pop
mov
dec
and
lock
xor
test
mov
psubsb
clc
lcall
jo
cmpsb
mov
xor
jl
and
mov
fsubr
or
mov
leave
rorb
jnp
aam
xchg
jg
dec
les
pop
jge
mov
cmp
jb
mov
push
inc
leave
stos
xor
les
pop
adc
mov
jns
mov
inc
mov
imul
dec
in
and
aas
and
inc
push
xorb
adc
fwait
ss
push
inc
add
inc
ljmp
pop
clc
fwait
cmpsb
lock
test
jmp
adc
lahf
inc
inc
movsl
packsswb
adc
xchg
outsl
fwait
repz
pop
js
xor
rorb
sbb
sahf
mov
pop
xchg
ja
pusha
sbb
stos
cmp
sub
add
or
movsb
arpl
loope
adc
testl
in
scas
es
loop
ljmp
mov
fwait
push
test
mov
stos
clc
fs
inc
dec
cmp
xchg
mov
push
push
mov
nop
mov
fdivrs
pop
pop
fdivp
or
aad
loop
mov
fmul
mov
mov
stos
daa
lcall
push
pushf
xorb
scas
scas
jl
shll
inc
pcmpeqd
in
incl
mov
mull
aad
xor
mov
cs
test
cmp
sub
mov
push
xor
insb
mov
push
mov
sbb
test
dec
pop
cmpsb
pusha
and
movsl
lret
fadd
push
fsubl
dec
add
cld
adc
inc
sbb
mov
test
add
mov
clc
lock
aam
dec
jne
repz
fwait
mov
pusha
pop
insb
mov
xor
imulb
xor
add
fsubrp
lret
jp
pop
aas
mov
jle
add
fidivrl
pop
lock
adc
loop
jae
dec
jecxz
add
mov
stos
push
pop
or
mov
or
shll
fwait
cmc
or
test
push
push
outsl
in
mov
pop
adcb
and
aam
call
jge
je
into
addr16
popf
mov
outsl
xchg
out
xor
push
daa
push
mull
sub
andb
inc
mov
rcr
mov
lret
push
and
cmp
popf
pop
imul
cld
or
jae
lea
mov
outsl
push
pop
pop
out
pop
pop
sbb
push
lods
fcom
aaa
add
or
xlat
jns
xchg
std
in
dec
sub
pop
push
rol
cmp
xchg
test
cmpl
mov
std
mov
dec
sbb
inc
outsl
andb
je
dec
jnp
add
jno
sub
imul
or
cli
push
sahf
shlb
cmc
xchg
xor
xchg
mov
mov
js
mov
cmpsl
repnz
dec
and
loop
into
mov
and
and
push
cmp
and
bnd
jnp
jne
or
daa
inc
xor
xchg
push
sbb
cwtl
jmp
outsb
inc
jnp
out
inc
jl
push
clc
jge
jecxz
push
je
int3
popf
adc
dec
mov
cmpsl
mov
mov
xchg
jns
fwait
or
mov
popa
lock
push
dec
xchg
int
xchg
lods
and
xor
aad
jp
ficoms
movsb
and
loopne
fistps
testb
xchg
jge
shlb
test
sub
int3
daa
and
mul
dec
xchg
lock
pop
js
out
js
imul
iret
push
fsubrl
push
icebp
loope
ror
push
sub
rorb
add
push
cmp
lret
pop
xchg
test
fldl
jmp
imul
or
shlb
mov
lahf
popf
inc
lret
fnsave
mov
negl
mov
cmc
dec
pop
mov
xor
test
test
inc
jge
push
jecxz
arpl
repnz
mov
cld
loope
aas
adc
test
aas
lret
jo
xor
pop
mov
adc
sbb
into
sub
es
enter
xor
mov
fsubs
push
pop
or
inc
lret
fstpt
es
jl
ljmp
or
mov
mov
add
ret
shll
test
imul
and
flds
sub
inc
dec
jmp
push
ja
dec
inc
sub
mov
dec
test
lahf
pop
mov
or
out
fcmovnb
imul
push
int3
dec
and
mov
jmp
push
cltd
mov
cmp
pop
and
xor
mov
push
push
mov
in
mov
mov
adcl
or
fidivl
xchg
mov
jecxz
sbb
into
shlb
mov
sbb
lret
or
inc
pushf
add
jae
cmpsb
fldcw
ja
jns
lods
mov
push
jle
xorl
mov
sub
add
xor
lahf
mov
sub
mov
jmp
lea
sarl
jmp
push
mov
int3
lock
add
xchg
xchg
cmp
dec
js
insb
ss
dec
mov
push
testl
in
or
add
insb
jns
jbe
in
fstl
push
ret
test
dec
mov
and
jnp
in
adc
mov
mov
imul
fwait
jns
lods
decl
xor
mov
rcl
xchg
stc
sbb
loop
pop
aam
in
outsb
jo
adc
in
cld
push
xor
mov
mov
std
adc
movb
mov
pop
mov
pop
and
xor
push
test
pop
icebp
dec
push
imul
push
xor
iret
or
push
jmp
jbe
sub
ljmp
repnz
lods
lret
fndisi(8087
xchg
std
push
popa
add
out
jnp
shl
xchg
movsb
push
push
mov
adc
fdivrs
jne
push
inc
shl
lahf
push
out
dec
mov
adc
arpl
movsb
ja
mov
add
iret
dec
int3
ret
outsb
mov
push
rcrb
cwtl
jge
scas
shlb
mov
and
or
shr
mov
pop
fbld
jo
sub
or
xchg
or
inc
sahf
mov
sub
adc
insb
sbb
ljmpw
mov
adc
cmp
adc
adc
cmc
sub
aad
test
mov
xor
lahf
mov
movl
xor
js
add
insl
and
dec
out
in
movsb
in
enter
lret
in
cli
pop
fs
insl
icebp
je
and
iret
shlb
ror
arpl
or
clc
mov
push
pop
ffreep
inc
aaa
mov
pop
loop
mov
lds
int
fistpl
mov
hlt
ror
popa
lods
xchg
sbb
xchg
xorl
push
test
ret
push
mov
push
dec
nop
xchg
enter
daa
dec
inc
pop
fcomi
aas
pop
pop
push
mov
in
iret
inc
inc
inc
pop
dec
insl
mov
pop
push
fdiv
stos
xlat
lds
leave
mov
rorl
jo
adc
xchg
test
jbe
pop
icebp
rclb
mov
in
sbb
jge
add
das
mov
stc
and
in
push
rolb
in
out
xchg
shll
add
imul
clc
dec
jno
dec
lret
loope
and
adc
mov
leave
dec
out
fdivp
or
out
inc
int
jns
aas
cmp
inc
sub
inc
ret
jnp
insl
mov
jae
inc
scas
test
sbb
loop
xchg
xor
push
jmp
ss
xchg
lret
jno
xchg
xor
mov
ljmp
aam
popl
lahf
lret
dec
out
cmpsb
mov
mov
ret
push
out
adc
xor
add
sbb
sub
pmaxub
pop
mov
lret
ljmp
popf
push
rcll
sti
and
jo
and
ss
xchg
mov
imulb
sbb
loop
xchg
into
push
jge
cld
and
mov
xchg
pop
sarb
test
sbb
push
push
adc
inc
jne
mov
addb
or
fs
mov
mov
adc
sahf
mov
xchg
inc
int3
repnz
lods
mov
inc
inc
scas
cltd
add
gs
mov
xchg
outsl
push
mov
push
out
movsb
call
add
into
mov
loop
push
js
jl
pop
xor
stos
insb
xchg
in
leave
in
insl
push
jmp
mov
daa
scas
ss
mov
dec
jae
nop
cltd
cmp
add
icebp
mov
jg
and
cmc
cltd
mulb
cmp
xor
je
fnstenv
in
sub
not
outsl
mov
js
repz
sbb
imul
clc
je
out
imul
mov
jae
mov
ror
ja
mov
xchg
mov
mov
cmpsb
push
pop
adc
iret
jg
mov
in
stc
lret
andb
mov
cld
out
out
sahf
mov
xchg
xor
xchg
and
bswap
cwtl
clc
pop
pop
mov
lods
shlb
push
xchg
pop
sbb
aas
jecxz
pop
mov
mov
sbb
cmp
dec
mov
jbe
push
std
pop
ljmp
fcoms
aaa
sarl
ret
push
clc
fucom
arpl
inc
mov
lahf
cmc
inc
push
movsb
inc
fsubrl
rcrl
enter
bound
popa
pop
aad
pusha
jne
bound
push
pop
dec
mov
add
sbb
inc
sub
jb
jne
pushaw
jg
repz
repnz
mov
shrl
add
xchg
sbbl
shll
dec
mov
mov
push
mov
movsb
push
lea
aam
mov
fxch
mov
and
xchg
lods
jns
hlt
xchg
lret
ljmp
jae
ror
in
mov
inc
jae
and
mov
mov
mov
mov
lock
cmc
lods
xor
lods
add
jno
xchg
in
dec
inc
aam
popa
enter
sub
outsb
mov
xchg
or
xchg
pop
cmp
inc
filds
add
cmp
jb
mov
jge
scas
xor
sbb
cmp
xchg
dec
pop
push
pop
es
jmp
xor
pop
stos
mov
repz
mov
xlat
fmuls
pop
xchg
decb
cmpsb
mov
out
jle
lret
inc
and
scas
dec
icebp
decb
loop
shlb
add
adc
push
iret
rcr
mov
push
mov
dec
ss
sub
jle
sbb
push
xchg
inc
fbld
or
xor
xchg
ja
pop
mov
movsb
xchg
cmp
or
jg
pop
pop
dec
aaa
fisubrs
mov
push
mov
adc
jo
mov
cltd
and
push
jno
mov
cmp
pop
and
adc
dec
jne
and
mov
jge
xlat
out
pop
mov
adc
cmp
cmc
sbb
fisubl
jno
fcomi
dec
push
jno
push
mov
loopne
pop
cmpsb
mov
subb
mov
mov
or
cmp
mov
mov
leave
mov
push
adc
repnz
js
call
and
dec
xchg
aam
and
dec
jle
clc
pop
in
adc
lcall
mov
pushl
aaa
cli
aam
rol
xchg
push
pop
je
adcb
jecxz
aas
mov
or
cmp
aam
mov
jo
int
movb
dec
scas
push
and
push
mov
mov
mov
mov
repz
sub
sti
aaa
sub
shlb
jmp
cld
mov
adc
push
pop
mov
push
jae
add
mov
and
imul
icebp
out
nop
in
out
nop
ss
fwait
and
lods
jno
scas
add
mov
das
stc
iret
adc
xchg
xor
fdivr
jne
popa
jmp
push
sub
div
adc
imul
fnstenv
inc
mov
out
and
jl
popa
xchg
jmp
xor
call
xchg
jecxz
mov
jl
pop
inc
xor
sub
xor
sub
pushf
mov
adc
cmp
mov
mov
sub
aas
dec
test
sbb
pop
xchg
jne
lcall
addr16
cli
add
sbb
data16
out
jb
xor
mov
xor
dec
dec
mov
dec
mov
xchg
push
jecxz
or
daa
pusha
scas
test
sub
cwtl
push
sub
mov
inc
in
mov
cwtl
sbb
and
loopne
xor
repnz
xchg
sbb
fmuls
pop
iret
out
pop
fists
xor
out
jae
sti
sub
add
shl
mov
and
push
adc
inc
adc
xchg
jns
dec
xor
xor
and
icebp
push
mov
push
xchg
and
mov
test
or
in
sbb
pusha
cld
dec
das
mov
mov
jle
and
rcrl
out
mov
lcall
add
in
fcoms
sub
mov
sti
adc
push
imul
inc
jb
inc
pop
dec
xlat
dec
loope
fmuls
mov
movsl
xchg
inc
les
add
dec
xlat
xchg
aam
mov
cli
out
fiaddl
sbb
ljmp
or
cli
or
xchg
lods
rcrb
aad
mov
lods
iret
mov
dec
jb
arpl
jne
xor
mov
push
cmp
cs
lret
mov
loopne
pop
mov
mov
cmp
xchg
mov
or
jno
xchg
rcrl
dec
js
sahf
cmp
hlt
pop
or
pop
pop
jnp
scas
jo
push
clc
jle
cmpsl
popl
dec
push
adc
sub
push
pop
es
or
mov
pop
push
inc
push
das
jp
mov
fimull
aaa
std
mov
fnstenv
jmp
in
push
pshufw
pushf
jno
fistps
or
sbb
and
cmp
inc
fidivs
fmull
insl
cmp
or
pushf
cld
hlt
dec
mov
mov
imul
or
es
aam
push
add
mov
sahf
addr16
cmp
push
fimuls
fisttps
movl
pushf
jnp
jno
jo
js
and
cmp
xorl
repz
movsb
adc
push
repz
xor
inc
std
ds
jle
sbbb
mov
jmp
cmpsl
dec
dec
cli
in
dec
aad
popa
daa
notb
pushf
ja
fs
in
inc
adc
jne
dec
add
cs
xchg
pop
fcmovnbe
movsb
push
mov
icebp
inc
rclb
add
push
fstpl
mov
adcl
add
add
imul
jmp
shufps
hlt
cmp
push
std
icebp
push
orl
rorl
scas
xor
lret
movsl
sbb
dec
mov
push
and
dec
cmpsl
std
jg
gs
flds
cmpsl
out
jne
repnz
cmp
mov
and
scas
imul
sbb
int
js
mov
cmp
das
or
dec
xchg
daa
cmp
jbe
fwait
push
imul
push
mov
dec
or
arpl
push
xor
mov
lcall
or
in
jg
jl
jle
mov
out
xor
or
push
add
mov
call
pop
es
popf
inc
not
out
or
mov
test
push
or
je
gs
std
test
push
dec
mov
mov
jns
ljmp
adc
test
shl
cltd
add
sbb
mov
frstor
dec
dec
sub
sub
pop
sub
sub
push
cmp
cmp
jg
inc
push
ljmp
jae
sar
mov
push
das
in
inc
arpl
shlb
out
idivl
sbb
shll
aaa
xchg
js
push
sub
call
mov
jno
in
and
mov
xlat
test
jno
clc
hlt
jb
scas
xor
dec
shlb
test
negb
fisubl
xchg
repnz
cmp
xchg
inc
adc
adc
stos
enter
out
cwtl
hlt
pushf
cs
mov
rorb
jge
stc
mov
mov
jle
daa
lcall
xor
dec
popa
adcb
loope
int
push
jno
cs
pushf
adc
into
in
cmp
sbb
cmp
and
stos
cmp
push
sub
pushf
insl
sbb
out
jecxz
test
cmp
ds
enter
cmp
push
dec
sti
pop
loopne
inc
add
pop
rcrl
xchg
xchg
repz
in
xor
xchg
js
push
int
xchg
fistl
fwait
sahf
push
lea
bound
es
mov
push
add
mov
cmpsb
inc
mov
pop
jg
xor
mov
dec
je
mov
mov
xor
mov
pushf
pushf
inc
jecxz
or
roll
jae
jbe
mov
insl
add
adc
mov
std
inc
in
pop
jp
adc
popa
aas
mov
inc
mov
gs
rolb
jecxz
sub
jne
ss
arpl
inc
mov
adc
xor
in
xchg
loopne
ja
js
push
pop
cmp
sub
jne
inc
lea
or
faddp
mov
add
popa
insl
jo
loopne
pop
sub
cmc
fildl
shr
fdivs
and
icebp
jl
sub
cld
and
sbb
fcoml
push
imul
out
int
xor
sbb
add
ret
pop
jl
mov
xbegin
nop
dec
sbb
daa
dec
pop
mov
insb
fsubrs
jmp
xchg
out
lcall
addb
outsb
mov
sub
dec
xchg
pop
cmp
dec
mov
dec
mov
hlt
call
cmp
bswap
cmpsl
sbb
push
bound
inc
xchg
ja
xchg
stos
mov
mov
xchg
icebp
add
push
add
mov
push
sub
mov
shll
cmc
xchg
movl
aaa
inc
mov
stc
xlat
jnp
mov
mov
and
mov
xchg
sar
lods
outsl
jmp
pop
mov
je
inc
mov
test
lea
jb
test
std
movsb
mov
adc
das
push
pushf
inc
sub
ja
or
iret
add
clc
mov
jo
jecxz
lods
pop
inc
sahf
aas
push
sub
es
fisubs
mov
test
pop
jae
jp
pop
clc
dec
jne
dec
pop
lret
mov
addr16
rcll
shll
addr16
test
inc
ljmp
sub
mov
sahf
jns
cmc
pushf
lea
jno
cs
push
stos
out
push
sub
mov
dec
lcall
lods
sbb
mov
lahf
inc
xchg
add
daa
pop
and
mov
jae
imul
xchg
das
inc
jns
or
sarb
gs
xchg
arpl
popf
test
mov
or
and
pop
sbb
dec
pop
mov
dec
xor
jae
cmpsl
aad
ljmp
mov
mov
nop
shrb
xor
nop
loope
outsb
fdivs
add
imul
icebp
test
fwait
in
lock
rorb
push
faddl
mov
scas
ret
xor
dec
mov
xchg
rcl
jmp
loop
shll
xchg
pusha
aas
cli
push
xor
pop
fs
rol
cmpsl
movsl
xchg
xor
jns
leave
mov
and
int3
mov
sbb
xchg
call
into
insl
lret
cwtl
movb
inc
in
mov
xchg
sub
fmul
movsb
out
xor
xor
inc
inc
out
push
rclb
paddsw
scas
and
aas
adc
xorb
xlat
mov
jns
inc
jecxz
inc
jnp
lea
sbb
xchg
xor
aad
push
call
movsl
imul
insl
lcall
cmc
imul
sub
cmc
jno
jnp
jno
sub
aas
sahf
push
mov
aad
cmp
mov
dec
mov
es
mov
cmp
ja
sub
test
stc
inc
lret
mov
sub
mov
ljmp
jecxz
loopne
jno
dec
sub
out
adc
sbb
in
fwait
push
insl
xchg
ja
pop
into
gs
dec
mov
aam
add
dec
xchg
cmp
and
adc
pop
std
pop
xchg
sti
lret
mov
in
sbb
std
cmp
mov
xor
push
xor
jl
xor
imul
test
ss
mov
pop
mov
mov
adc
sbb
insb
push
pop
movsl
mov
push
lock
push
out
in
arpl
mov
repz
or
xor
fxam
cmc
pop
xchg
mov
jbe
pop
ja
mov
dec
inc
push
push
aam
jg
mov
push
mov
mov
lea
ja
leave
xchg
or
into
mov
mov
pop
cmp
inc
push
in
mov
mov
adc
lcall
int
call
jbe
test
addr16
cmpsb
sbbb
push
pushl
cmpsl
lods
aad
lahf
aas
push
sahf
test
comiss
push
inc
shl
xchg
mov
adc
test
inc
pop
sti
jno
xchg
lds
bound
cmp
shrb
pop
pushf
xor
inc
std
inc
jb
sbb
jae
or
and
inc
sbb
fisttpl
leave
int
push
cwtl
push
in
aaa
lods
inc
enter
sub
jl,pn
xchg
lock
call
lcall
inc
inc
cmc
stc
nop
mov
mov
add
jns
stc
sahf
test
dec
js
inc
jae
inc
mov
lock
adc
ljmp
push
xor
popa
ds
xchg
enter
cmpsl
jae
repnz
jmp
sahf
clc
push
cld
inc
jo
or
mov
std
mov
pop
cmp
testl
cmp
mov
scas
adc
adc
pop
mov
jl
xchg
mov
mov
outsl
cmp
sahf
inc
mov
jp
push
dec
push
dec
test
aaa
je
fimuls
mov
pushl
pop
loopne
ror
imul
push
mov
mov
das
lock
xchg
into
mov
xchg
in
idivl
subl
cmpsl
je
push
cmp
dec
cmp
mov
inc
filds
fwait
mov
or
repnz
les
and
cmp
xchg
bound
fdivl
sbb
daa
fs
and
pushf
outsl
and
lcall
mov
arpl
icebp
pop
cmpl
movsl
xor
aad
decb
push
xchg
mov
inc
pop
stos
pop
jg
xchg
sub
push
push
pop
dec
fs
sti
jo
sub
push
sbb
ret
jp
jbe
mov
pop
sub
sar
xchg
mov
xor
insb
jge
and
mov
imulb
pop
xchg
pop
xchg
push
xchg
lret
mov
fwait
jb
cli
xchg
mov
imul
or
jnp
adc
bound
std
in
test
shlb
adc
lods
aam
mov
sub
adc
push
xchg
mov
in
fistps
push
lock
fisubs
dec
push
lods
popa
xchg
xor
mov
aam
xor
sahf
outsl
mull
int
lret
push
inc
sub
dec
mov
outsl
cmc
add
imul
icebp
fsubs
sbb
push
sbbb
mov
adc
adc
test
mov
pop
sahf
int
out
aas
ljmp
insl
and
push
push
cmp
add
outsl
sub
test
lahf
loope
xchg
adc
mov
mov
add
fcompl
daa
fildll
push
push
mov
mov
xlat
mov
clc
rcl
sahf
pop
icebp
jle
inc
xchg
pop
lret
fcompl
fadd
cld
fiaddl
lret
rolb
dec
mov
out
add
rcll
sti
mov
adc
ret
test
out
pop
pop
xchg
jecxz
in
insb
jp
cmpsl
out
mov
mov
pushf
xchg
cmp
movsb
hlt
pop
fadd
jp
rorb
and
mov
icebp
sbb
pop
sub
inc
outsb
and
xchg
arpl
push
mov
sbb
sti
push
xchg
mov
mov
xchg
or
jmp
mov
dec
push
mov
jmp
adc
in
push
xor
test
cltd
push
enter
mov
cmpsb
mov
jmp
shrl
lret
dec
icebp
enter
jp
or
subb
jb
mov
push
mov
xchg
cli
lods
mov
jnp
push
fs
mov
jnp
or
sub
jmp
xchg
add
sahf
dec
mov
pop
mov
dec
shrb
dec
push
cmp
cmp
mov
icebp
out
das
sub
loop
cltd
rcll
adc
jns
jp
pop
out
xchg
mov
xchg
insl
jns
dec
fwait
lret
mov
mov
ss
dec
xor
incb
ss
mov
mov
mov
cli
ljmp
adc
pusha
pop
adcb
sub
mov
in
leave
jno
and
cmp
mov
sub
minps
push
jbe
lret
mov
xchg
and
xor
push
outsb
lret
xchg
push
mov
dec
pop
cmp
mov
jg
jmp
leave
sub
dec
bound
sbb
subl
xlat
sub
scas
cmpsl
inc
mov
xchg
dec
pop
imul
ljmp
inc
fsubs
pop
xor
sbb
mov
add
hlt
xchg
mov
ja
mov
mov
cs
and
push
into
mov
icebp
lret
or
mov
ret
push
sub
inc
cmc
loop
inc
inc
insb
inc
xor
mov
pop
push
orps
push
adc
adc
xlat
xor
stc
insb
push
lcall
in
jp
xchg
push
adc
cmp
cmc
push
gs
enter
and
mov
in
popf
dec
lods
call
xlat
les
cmp
cmp
call
enter
dec
mov
and
popa
aad
cs
jo
cli
dec
sar
mov
mov
pop
jo
add
imul
outsb
mov
and
jmp
iret
enter
push
sbb
sub
mov
cmpsb
enter
sub
cmp
inc
dec
int3
fs
nop
in
or
jo
dec
mov
movsb
jns
mov
cmpsb
sbb
sarl
std
rorb
sbb
into
jl
fdivp
xchg
testb
mov
pushf
cwtl
add
cmp
mov
lods
lods
in
in
mov
outsb
rorl
clc
lret
ja
xchg
jae
jno
stos
mov
jo
adc
push
mov
mov
cmp
cmp
inc
scas
inc
mov
rcll
aad
inc
jp
cwtl
pushf
jecxz
ljmp
sbb
jae
lds
cmp
mov
lock
repz
jecxz
stos
jl
cmp
adc
mov
push
sbb
cmpsb
adc
cmc
mov
or
cmp
int
jnp
inc
lods
pop
movl
scas
xchg
jle
and
pop
adc
sbb
sbb
jge
mov
inc
and
dec
mov
out
lea
mov
mov
das
cmp
pushf
es
sbb
popa
repz
push
sub
shll
gs
pop
dec
out
cmpsl
ficoms
mov
sub
sub
mov
pop
cmp
ja
js
stos
and
scas
sti
xor
pop
leave
mov
cmp
push
out
js
stos
cld
sub
mov
add
int
repnz
xchg
jle
or
aad
in
movsl
sahf
sub
xchg
incl
shlb
popa
cmc
add
ret
and
rcr
lea
adc
adc
imul
cmp
out
stos
mov
scas
mov
xor
movsb
out
xchg
xchg
sbb
shl
mov
or
and
adc
push
mov
mov
dec
outsb
aam
push
jns
bound
xorb
outsl
sti
dec
jnp
arpl
loopne
pop
scas
mov
ja
mov
cmp
mov
xchg
imul
lods
or
mov
push
out
sahf
adc
sbb
jmp
mov
xchg
jmp
mov
sbb
sbb
lret
ja
pop
xlat
jl
or
mov
mov
pop
add
aaa
push
lcall
sbb
mov
inc
push
shl
ss
rcrb
ljmp
nop
loopne
dec
ret
xor
into
xchg
in
loop
sub
cwtl
inc
gs
in
inc
icebp
xlat
shlb
iret
xchg
push
ljmp
cli
mov
cmp
inc
stos
imul
adc
jns
test
sbb
mov
sbb
mov
or
xchg
fs
decb
and
xchg
inc
push
ds
mov
mov
call
rcrb
mov
sub
push
inc
sbb
icebp
cmpsl
cltd
mov
fidivrl
shl
mov
or
stos
fists
in
mov
lods
and
pop
cmp
add
fstpt
js
mov
sub
jb
int
jmp
in
mov
add
int3
push
xchg
sub
lret
fidivrl
imul
outsb
mov
test
cld
xchg
aam
adc
xlat
aas
xor
enter
adc
fs
dec
lcall
pushf
std
test
mov
lcall
test
or
lock
pop
fsub
jg
push
stos
ret
out
dec
push
sti
sbb
loope
fidivl
sbb
out
jns
cwtl
stos
pop
pop
lret
imul
xchg
or
xor
sbb
dec
push
test
push
pop
push
int
mov
pop
std
xchg
mov
push
scas
and
imul
in
push
imul
jno
daa
push
dec
out
cmp
aas
or
push
mov
fistpll
lods
cltd
lock
in
aas
aad
pop
mov
jp
lret
jo
in
xchg
push
add
and
sbb
lmsw
lods
fadd
inc
mov
sarb
mov
shll
or
xchg
sbb
ds
xchg
push
jo
dec
sub
clc
or
add
dec
xchg
pop
nop
xor
mov
pusha
daa
mov
lods
add
mul
mov
sbb
jb
mov
movb
hlt
inc
mov
jae
mov
adc
rcr
inc
push
pop
cmp
inc
out
mov
jbe
orl
fs
imulb
sub
dec
movsb
xor
pop
xor
out
jo
mov
ficoms
or
xchg
dec
sbb
out
push
into
and
test
and
jp
mov
jae
pop
push
cmpl
stos
pop
arpl
insb
mov
jo
add
rorb
xor
cli
lcall
cmp
test
lcall
in
jmp
out
mov
movsb
push
es
jne
cmp
jp
adc
sub
sar
imul
aad
call
pusha
xor
gs
or
dec
xchg
movsl
add
push
popa
jl
dec
and
mov
push
xor
jmp
lock
ret
sub
inc
fmuls
imul
lea
stos
add
mov
adc
testl
and
sbb
jno
shlb
sub
int
mov
mov
hlt
xchg
stos
in
aas
sbb
adc
insb
arpl
cmp
sbb
add
enter
adc
inc
mov
loopne
mov
ret
movsl
cmpsb
push
mov
ret
dec
lods
jmp
mov
pop
test
push
sbb
stos
sti
into
sbbl
xrelease
scas
mov
repz
mov
fiadds
ret
and
mov
mov
adcb
push
ja
mov
imul
jns
pop
sti
mov
mov
arpl
aaa
mov
mov
nop
cli
cmpsl
fstpt
in
orb
jo
push
popa
arpl
sub
clc
fldl
inc
arpl
or
xchg
xchg
shlb
lds
cmp
sub
mov
mov
xor
mov
mov
pop
lock
out
mov
in
addr16
pop
dec
cmp
xor
cmp
ret
das
in
pop
into
insl
adc
push
mov
in
push
sub
scas
inc
sbbb
mov
out
add
cmp
jo
cmp
fstpt
je
leave
dec
in
fdecstp
stc
ret
jp
repz
int3
lods
dec
and
pop
xor
cmp
pop
adc
xor
push
adc
aad
or
test
push
sahf
mov
mov
mov
cltd
jbe
pop
aad
xchg
xchg
lods
inc
pop
stos
int
cmp
pushf
and
shr
push
xchg
or
icebp
notl
or
into
mov
xchg
pop
jl
push
xor
in
ret
xchg
push
loop
mov
xor
call
add
jge
xlat
jp
push
pop
adc
xchg
inc
shll
jns
add
and
cmp
cli
lahf
inc
sbb
adc
mov
lods
mov
je
or
ret
lods
scas
pop
aaa
xchg
add
push
mov
push
movsl
mov
cltd
dec
dec
cwtl
cmpsb
adc
adcl
lods
mov
inc
xchg
mov
dec
fsts
sbb
lret
cmp
sub
sub
pop
push
bound
test
cld
mov
dec
and
imul
loop
xchg
sub
leave
jns
imul
add
mov
and
mov
repnz
ljmp
fs
inc
movl
or
lahf
or
sbb
xchg
movsl
into
and
push
mov
fwait
mov
xor
inc
inc
mov
mov
xchg
pop
addr16
outsb
sub
add
sub
js
arpl
mov
pop
jno
outsb
popl
pop
icebp
je
mov
jp
adc
cmp
loop
popf
test
imul
dec
mov
mov
ja
mov
xchg
xchg
push
roll
dec
or
out
mov
mov
jno
push
mov
push
and
cli
jmp
xchg
push
jmp
mov
sub
or
imul
mov
jge
adc
icebp
mov
jmp
aam
inc
fs
dec
sub
mov
mov
pop
push
stos
xor
iret
cmp
cmc
pop
mov
bound
adc
fadds
mov
jecxz
fisttpll
fadd
push
les
xchg
int3
or
jmp
in
mov
mov
shll
xchg
clc
aas
mov
cs
sub
push
addl
jnp
xor
out
lock
xchg
cmc
mulb
xor
ja
cmp
loop
cmp
push
and
xor
call
loope
add
adc
and
out
jg
dec
mov
mov
push
mov
cltd
rcll
into
loopne
jo
or
mov
add
cs
idivb
sub
pop
data16
mov
movl
mov
jns
cwtl
dec
frstor
jg
clc
das
testl
mov
or
imul
and
jge
cld
std
and
in
inc
mov
mov
push
inc
mov
neg
jecxz
dec
loopne
xchg
sbb
pop
sar
cmp
cld
add
fsubs
insl
mov
imul
sbb
arpl
pop
inc
or
push
rcl
jge
out
jo
pop
mov
mov
adc
cmpsb
push
xchg
popa
je
sub
inc
add
mov
mov
jns
pop
mov
push
jns
ss
in
leave
sbbl
test
sub
rorb
or
ja
xlat
mov
inc
fisttps
dec
adc
insb
mov
jecxz
adc
and
shlb
mov
dec
sub
jl
mov
call
pop
lock
add
ret
fstps
idiv
xor
dec
adcl
inc
adcb
jb
inc
inc
xchg
adc
ja
sbb
push
sbb
ret
rcrb
mov
push
lods
lods
mov
into
lods
imul
mov
fidivrl
test
mov
mov
rcll
test
data16
loop
les
and
sbb
inc
mov
out
ljmp
adc
mov
mov
ljmp
ret
pusha
inc
mov
mov
out
lcall
cld
call
mov
repnz
outsl
jne
sub
sbbl
out
stos
cmp
sbb
fsubs
xchg
out
push
and
cld
mov
jb
int
mov
pop
jp
dec
and
push
sub
jbe
push
add
or
sti
pop
les
sub
jns
fucomip
inc
add
inc
inc
sahf
rclb
adc
cmp
or
or
xlat
xchg
mov
push
xor
nop
clc
or
pop
inc
dec
cltd
mov
mov
jbe
fstpt
sarb
aad
je
sbb
sub
mov
ret
sbb
jno
gs
scas
lret
stc
xor
dec
int
mov
test
pop
push
xchg
sbb
adcl
pop
sub
jp
sbb
xchg
add
lcall
sahf
lods
addl
pop
aad
sub
test
scas
pusha
hlt
subl
das
sub
ret
pop
ja
adc
js
xchg
dec
ret
in
cmp
in
sbb
xchg
xchg
xor
inc
pop
sub
fldl
aas
cli
xchg
mov
sbb
adc
call
and
or
push
pop
pop
ret
or
xor
movsb
xchg
cmp
push
sarl
xchg
and
sub
add
std
test
dec
cwtl
inc
addr16
cmp
lods
lret
jmp
popa
sub
mov
fsqrt
add
sbb
imul
adc
push
mov
scas
dec
imul
in
fsubr
pop
cmp
aas
jns
ja
and
sub
es
popa
dec
mov
mov
clc
or
pop
inc
in
int
or
or
pusha
ret
pop
dec
icebp
call
inc
push
push
cmp
and
jb
adc
or
and
je
inc
rorl
push
das
call
test
push
xor
iret
add
ljmp
add
mov
fsubr
xchg
cmp
xchg
je
int
mov
mov
in
test
sbb
inc
fnstcw
jns
cmpb
inc
sbb
inc
loop
mov
xor
mov
mov
jnp
push
mov
xor
push
fs
aad
and
imul
xor
gs
repnz
inc
add
dec
jecxz
and
add
stc
test
mul
pop
cmc
mov
dec
or
cld
jecxz
pop
and
pop
lret
pushf
xchg
or
push
and
sbb
dec
pushf
push
cli
pop
aam
cli
mov
mov
fwait
mov
test
repz
cmp
lcall
cmc
mov
data16
adc
inc
icebp
pop
jbe
jns
and
mov
xor
in
scas
add
insb
xchg
push
adc
andl
or
cld
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
lds
fldcw
iret
adc
es
push
inc
xor
and
or
xor
cmp
add
sahf
fistpl
stos
mov
jmp
pushf
aas
add
inc
and
jl
inc
gs
bound
pop
jnp
leave
push
sahf
shrl
xorb
daa
xor
addr16
insb
nop
repz
jne
test
push
cmpl
sbb
xchg
lcall
cmovno
fiadds
rclb
iret
int3
pop
dec
ljmp
mov
push
femms
lock
dec
mov
ret
pop
daa
ja
adc
sbb
bound
std
xchg
inc
jge
mov
pop
cmpb
mov
add
leave
xor
cli
and
push
jae
hlt
mulb
and
loopne
and
push
push
js
bound
cwtl
xchg
ret
push
push
mov
bound
jo
rcrb
add
lock
inc
pop
aaa
or
xor
fwait
xor
ljmp
out
mov
mov
loope
popa
sarl
sarl
jae
iret
fcompl
scas
in
pop
cld
mov
dec
add
mov
shll
imul
ljmp
lods
xchg
fisubs
mov
adc
and
stos
sub
adc
lret
scas
mov
ss
mov
pop
into
cmp
mov
xchg
pop
inc
or
cmc
incb
jae
pop
fwait
lret
incb
aaa
arpl
adc
arpl
add
aaa
jecxz
dec
fimuls
hlt
out
mov
fisttpl
cltd
xor
outsb
or
push
mov
sahf
and
fcoms
imul
add
cwtl
sbb
je
dec
adc
pop
lock
imulb
or
adc
push
xchg
mov
ds
dec
jle
into
in
cmpsl
popa
add
pushf
bound
movsb
aad
pop
out
pop
out
insl
xchg
iret
mov
stos
pop
jl
xchg
mov
sbb
pop
mov
cmc
xor
xchg
stos
repnz
mov
add
or
imul
xchg
dec
jns
mov
push
jg
add
xorl
xchg
filds
fucomip
sbb
add
xor
pop
pop
xchg
ss
lea
mov
in
dec
loopne
pushf
jl
cmp
xor
in
fstps
add
dec
jnp
shrb
insl
rolb
repz
jmp
test
shrl
loop
rcll
lods
xchg
in
adc
sbb
xchg
out
jmp
test
pop
jbe
push
mov
xchg
jle
dec
xor
dec
xchg
sub
shrl
cltd
inc
icebp
add
cwtl
mov
push
sbb
out
or
fs
lock
insl
std
mov
loop
xlat
or
sbb
adc
mov
aaa
mov
push
rcl
cmp
data16
sbb
inc
pop
mov
xchg
je
and
scas
arpl
inc
or
lods
xchg
pop
xor
or
test
sbb
lcall
aaa
add
mov
xor
fnstsw
inc
cld
popf
mov
cmpsb
xchg
es
enter
ja
mul
fiaddl
lods
jne
inc
push
mov
ret
mov
ss
xchg
ljmp
jnp
aam
or
cmp
fcoms
daa
int3
mov
mov
enter
out
es
xchg
xor
jne
mov
mov
clc
dec
adc
inc
add
sbb
xchg
mov
loopne
outsl
mov
je
cld
pop
mov
xchg
sti
mov
jl
inc
and
aaa
mov
adc
mov
call
popa
inc
addr16
and
xchg
pop
mov
sahf
dec
and
adc
xlat
mov
sub
mov
push
cmp
shl
lods
scas
mov
outsl
and
push
dec
pop
jl
lock
push
cmp
filds
cmpsl
sub
aas
pop
mov
push
rorl
xor
stc
sub
mov
es
dec
popf
dec
les
cmp
ror
jbe
cmp
push
jo
lock
out
out
arpl
sti
cmc
xor
mov
xchg
das
inc
int3
test
jb
xchg
in
add
pop
outsl
dec
sbb
push
sbb
xor
fwait
adc
inc
dec
sbb
dec
out
mov
push
sub
sub
and
fwait
adcl
jmp
mov
mov
mov
pop
cmp
inc
ret
xor
mov
push
dec
push
push
mov
inc
cli
adc
sub
loopne
dec
fnsave
int
ja
or
lea
cli
inc
mov
daa
inc
jge
adc
cwtl
push
mov
lods
call
out
mov
and
mov
cmpsb
dec
scas
pop
mov
inc
push
cmp
jbe
mov
fildl
lods
cmp
jo
jg
cmp
dec
aad
cmp
sub
mov
jle
push
cltd
out
mov
fwait
jnp
add
push
xor
stos
stc
into
mov
cmp
pop
inc
sub
mov
enter
add
loopne
add
aad
push
lahf
xchg
push
pusha
mov
sub
push
adc
popa
into
movsb
ret
jnp
pop
or
mov
iret
out
ret
mov
push
add
push
popl
adc
xchg
inc
iret
xorl
cwtl
push
cmp
iret
mov
mov
mov
js
or
mov
imul
dec
add
mov
cmc
lods
out
stos
rol
movsb
fildl
dec
cmp
xor
xchg
xor
loop
aas
mov
xor
xor
push
mov
mov
ret
popl
sub
mov
adc
icebp
fistpll
inc
scas
dec
xchg
fstpt
push
sbb
sbb
inc
pop
sub
xchg
cmpsb
inc
pop
xor
notb
push
jbe
stos
sub
cmp
test
icebp
sahf
mov
test
in
dec
mov
mov
jo
dec
adcl
mov
jl
jo
repz
mov
xchg
jmp
fsubl
loop
fisttpll
test
clc
xor
mov
aaa
xor
cmp
xchg
test
add
ror
jle
push
loopne
fbstp
sub
mov
xchg
add
xchg
mov
sbb
sbb
rorb
les
rclb
mov
cmp
insb
pop
inc
jg
frndint
pop
divb
sbb
push
das
jo
or
sbb
out
orl
mov
push
cmpsl
jbe
dec
xor
sub
ret
js
cmc
xor
fwait
ds
xchg
xor
ja
loope
adc
sbb
mov
mov
iret
and
faddl
pop
xor
pushf
ror
out
int
dec
not
lock
scas
lret
dec
jle
ja
adc
pop
xorl
add
pop
rolb
test
xchg
pop
jp
fstpl
addr16
pop
add
mov
pop
in
mov
or
mov
mov
jae
mov
andl
add
sub
pop
scas
scas
and
mov
xchg
push
inc
daa
jg
mov
repnz
stc
movsl
hlt
ret
cmpsb
push
repnz
jne
adc
sub
adc
inc
jl
mov
mov
pushf
xor
inc
mov
adc
mov
rorb
sbb
mov
pop
cmpsb
jle
add
lret
aaa
cwtl
das
sub
out
fistps
xor
cmp
mov
adcl
ds
cmpsl
adc
fldt
sahf
nop
call
push
push
imul
xor
and
in
jge
push
fstl
mov
push
loope
shll
sbb
jnp
hlt
in
out
ret
add
dec
in
repnz
rcl
mov
lcall
and
and
or
les
movl
fucomp
or
mov
mov
xor
push
mov
pop
test
cmpsb
repz
inc
movsl
int3
push
pop
pushf
dec
loop
fwait
push
sub
mov
jl
sbb
inc
sbb
push
insl
inc
outsl
inc
shll
push
push
lahf
push
cwtl
sbb
into
cld
sub
cmpsl
fistpl
aaa
add
mov
ja
insb
push
in
inc
fnstenv
iret
repz
xor
mov
xor
addr16
xchg
mov
adc
sbbl
scas
sub
jp
insb
std
sub
lea
into
and
push
push
dec
fisttpll
mov
mov
ret
repnz
dec
int3
cmpl
aam
jno
pop
mov
dec
and
lock
xor
test
mov
psubsb
clc
lcall
jo
cmpsb
mov
xor
jl
and
mov
fsubr
or
mov
leave
rorb
jnp
aam
xchg
jg
dec
les
pop
jge
mov
cmp
jb
mov
push
inc
leave
stos
xor
les
pop
adc
mov
jns
mov
inc
mov
imul
dec
in
and
aas
and
inc
push
xorb
adc
fwait
ss
push
inc
add
inc
ljmp
pop
clc
fwait
cmpsb
lock
test
jmp
adc
lahf
inc
inc
movsl
packsswb
adc
xchg
outsl
fwait
repz
pop
js
xor
rorb
sbb
sahf
mov
pop
xchg
ja
pusha
sbb
stos
cmp
sub
add
or
movsb
arpl
loope
adc
testl
in
scas
es
loop
ljmp
mov
fwait
push
test
mov
stos
clc
fs
inc
dec
cmp
xchg
mov
push
push
mov
nop
mov
fdivrs
pop
pop
fdivp
or
aad
loop
mov
fmul
mov
mov
stos
daa
lcall
push
pushf
xorb
scas
scas
jl
shll
inc
pcmpeqd
in
incl
mov
mull
aad
xor
mov
cs
test
cmp
sub
mov
push
xor
insb
mov
push
mov
sbb
test
dec
pop
cmpsb
pusha
and
movsl
lret
fadd
push
fsubl
dec
add
cld
adc
inc
sbb
mov
test
add
mov
clc
lock
aam
dec
jne
repz
fwait
mov
pusha
pop
insb
mov
xor
imulb
xor
add
fsubrp
lret
jp
pop
aas
mov
jle
add
fidivrl
pop
lock
adc
loop
jae
dec
jecxz
add
mov
stos
push
pop
or
mov
or
shll
fwait
cmc
or
test
push
push
outsl
in
mov
pop
adcb
and
aam
call
jge
je
into
addr16
popf
mov
outsl
xchg
out
xor
push
daa
push
mull
sub
andb
inc
mov
rcr
mov
lret
push
and
cmp
popf
pop
imul
cld
or
jae
lea
mov
outsl
push
pop
pop
out
pop
pop
sbb
push
lods
fcom
aaa
add
or
xlat
jns
xchg
std
in
dec
sub
pop
push
rol
cmp
xchg
test
cmpl
mov
std
mov
dec
sbb
inc
outsl
andb
je
dec
jnp
add
jno
sub
imul
or
cli
push
sahf
shlb
cmc
xchg
xor
xchg
mov
mov
js
mov
cmpsl
repnz
dec
and
loop
into
mov
and
and
push
cmp
and
bnd
jnp
jne
or
daa
inc
xor
xchg
push
sbb
cwtl
jmp
outsb
inc
jnp
out
inc
jl
push
clc
jge
jecxz
push
je
int3
popf
adc
dec
mov
cmpsl
mov
mov
xchg
jns
fwait
or
mov
popa
lock
push
dec
xchg
int
xchg
lods
and
xor
aad
jp
ficoms
movsb
and
loopne
fistps
testb
xchg
jge
shlb
test
sub
int3
daa
and
mul
dec
xchg
lock
pop
js
out
js
imul
iret
push
fsubrl
push
icebp
loope
ror
push
sub
rorb
add
push
cmp
lret
pop
xchg
test
fldl
jmp
imul
or
shlb
mov
lahf
popf
inc
lret
fnsave
mov
negl
mov
cmc
dec
pop
mov
xor
test
test
inc
jge
push
jecxz
arpl
repnz
mov
cld
loope
aas
adc
test
aas
lret
jo
xor
pop
mov
adc
sbb
into
sub
es
enter
xor
mov
fsubs
push
pop
or
inc
lret
fstpt
es
jl
ljmp
or
mov
mov
add
ret
shll
test
imul
and
flds
sub
inc
dec
jmp
push
ja
dec
inc
sub
mov
dec
test
lahf
pop
mov
or
out
fcmovnb
imul
push
int3
dec
and
mov
jmp
push
cltd
mov
cmp
pop
and
xor
mov
push
push
mov
in
mov
mov
adcl
or
fidivl
xchg
mov
jecxz
sbb
into
shlb
mov
sbb
lret
or
inc
pushf
add
jae
cmpsb
fldcw
ja
jns
lods
mov
push
jle
xorl
mov
sub
add
xor
lahf
mov
sub
mov
jmp
lea
sarl
jmp
push
mov
int3
lock
add
xchg
xchg
cmp
dec
js
insb
ss
dec
mov
push
testl
in
or
add
insb
jns
jbe
in
fstl
push
ret
test
dec
mov
and
jnp
in
adc
mov
mov
imul
fwait
jns
lods
decl
xor
mov
rcl
xchg
stc
sbb
loop
pop
aam
in
outsb
jo
adc
in
cld
push
xor
mov
mov
std
adc
movb
mov
pop
mov
pop
and
xor
push
test
pop
icebp
dec
push
imul
push
xor
iret
or
push
jmp
jbe
sub
ljmp
repnz
lods
lret
fndisi(8087
xchg
std
push
popa
add
out
jnp
shl
xchg
movsb
push
push
mov
adc
fdivrs
jne
push
inc
shl
lahf
push
out
dec
mov
adc
arpl
movsb
ja
mov
add
iret
dec
int3
ret
outsb
mov
push
rcrb
cwtl
jge
scas
shlb
mov
and
or
shr
mov
pop
fbld
jo
sub
or
xchg
or
inc
sahf
mov
sub
adc
insb
sbb
ljmpw
mov
adc
cmp
adc
adc
cmc
sub
aad
test
mov
xor
lahf
mov
movl
xor
js
add
insl
and
dec
out
in
movsb
in
enter
lret
in
cli
pop
fs
insl
icebp
je
and
iret
shlb
ror
arpl
or
clc
mov
push
pop
ffreep
inc
aaa
mov
pop
loop
mov
lds
int
fistpl
mov
hlt
ror
popa
lods
xchg
sbb
xchg
xorl
push
test
ret
push
mov
push
dec
nop
xchg
enter
daa
dec
inc
pop
fcomi
aas
pop
pop
push
mov
in
iret
inc
inc
inc
pop
dec
insl
mov
pop
push
fdiv
stos
xlat
lds
leave
mov
rorl
jo
adc
xchg
test
jbe
pop
icebp
rclb
mov
in
sbb
jge
add
das
mov
stc
and
in
push
rolb
in
out
xchg
shll
add
imul
clc
dec
jno
dec
lret
loope
and
adc
mov
leave
dec
out
fdivp
or
out
inc
int
jns
aas
cmp
inc
sub
inc
ret
jnp
insl
mov
jae
inc
scas
test
sbb
loop
xchg
xor
push
jmp
ss
xchg
lret
jno
xchg
xor
mov
ljmp
aam
popl
lahf
lret
dec
out
cmpsb
mov
mov
ret
push
out
adc
xor
add
sbb
sub
pmaxub
pop
mov
lret
ljmp
popf
push
rcll
sti
and
jo
and
ss
xchg
mov
imulb
sbb
loop
xchg
into
push
jge
cld
and
mov
xchg
pop
sarb
test
sbb
push
push
adc
inc
jne
mov
addb
or
fs
mov
mov
adc
sahf
mov
xchg
inc
int3
repnz
lods
mov
inc
inc
scas
cltd
add
gs
mov
xchg
outsl
push
mov
push
out
movsb
call
add
into
mov
loop
push
js
jl
pop
xor
stos
insb
xchg
in
leave
in
insl
push
jmp
mov
daa
scas
ss
mov
dec
jae
nop
cltd
cmp
add
icebp
mov
jg
and
cmc
cltd
mulb
cmp
xor
je
fnstenv
in
sub
not
outsl
mov
js
repz
sbb
imul
clc
je
out
imul
mov
jae
mov
ror
ja
mov
xchg
mov
mov
cmpsb
push
pop
adc
iret
jg
mov
in
stc
lret
andb
mov
cld
out
out
sahf
mov
xchg
xor
xchg
and
bswap
cwtl
clc
pop
pop
mov
lods
shlb
push
xchg
pop
sbb
aas
jecxz
pop
mov
mov
sbb
cmp
dec
mov
jbe
push
std
pop
ljmp
fcoms
aaa
sarl
ret
push
clc
fucom
arpl
inc
mov
lahf
cmc
inc
push
movsb
inc
fsubrl
rcrl
enter
bound
popa
pop
aad
pusha
jne
bound
push
pop
dec
mov
add
sbb
inc
sub
jb
jne
pushaw
jg
repz
repnz
mov
shrl
add
xchg
sbbl
shll
dec
mov
mov
push
mov
movsb
push
lea
aam
mov
fxch
mov
and
xchg
lods
jns
hlt
xchg
lret
ljmp
jae
ror
in
mov
inc
jae
and
mov
mov
mov
mov
lock
cmc
lods
xor
lods
add
jno
xchg
in
dec
inc
aam
popa
enter
sub
outsb
mov
xchg
or
xchg
pop
cmp
inc
filds
add
cmp
jb
mov
jge
scas
xor
sbb
cmp
xchg
dec
pop
push
pop
es
jmp
xor
pop
stos
mov
repz
mov
xlat
fmuls
pop
xchg
decb
cmpsb
mov
out
jle
lret
inc
and
scas
dec
icebp
decb
loop
shlb
add
adc
push
iret
rcr
mov
push
mov
dec
ss
sub
jle
sbb
push
xchg
inc
fbld
or
xor
xchg
ja
pop
mov
movsb
xchg
cmp
or
jg
pop
pop
dec
aaa
fisubrs
mov
push
mov
adc
jo
mov
cltd
and
push
jno
mov
cmp
pop
and
adc
dec
jne
and
mov
jge
xlat
out
pop
mov
adc
cmp
cmc
sbb
fisubl
jno
fcomi
dec
push
jno
push
mov
loopne
pop
cmpsb
mov
subb
mov
mov
or
cmp
mov
mov
leave
mov
push
adc
repnz
js
call
and
dec
xchg
aam
and
dec
jle
clc
pop
in
adc
lcall
mov
pushl
aaa
cli
aam
rol
xchg
push
pop
je
adcb
jecxz
aas
mov
or
cmp
aam
mov
jo
int
movb
dec
scas
push
and
push
mov
mov
mov
mov
repz
sub
sti
aaa
sub
shlb
jmp
cld
mov
adc
push
pop
mov
push
jae
add
mov
and
imul
icebp
out
nop
in
out
nop
ss
fwait
and
lods
jno
scas
add
mov
das
stc
iret
adc
xchg
xor
fdivr
jne
popa
jmp
push
sub
div
adc
imul
fnstenv
inc
mov
out
and
jl
popa
xchg
jmp
xor
call
xchg
jecxz
mov
jl
pop
inc
xor
sub
xor
sub
pushf
mov
adc
cmp
mov
mov
sub
aas
dec
test
sbb
pop
xchg
jne
lcall
addr16
cli
add
sbb
data16
out
jb
xor
mov
xor
dec
dec
mov
dec
mov
xchg
push
jecxz
or
daa
pusha
scas
test
sub
cwtl
push
sub
mov
inc
in
mov
cwtl
sbb
and
loopne
xor
repnz
xchg
sbb
fmuls
pop
iret
out
pop
fists
xor
out
jae
sti
sub
add
shl
mov
and
push
adc
inc
adc
xchg
jns
dec
xor
xor
and
icebp
push
mov
push
xchg
and
mov
test
or
in
sbb
pusha
cld
dec
das
mov
mov
jle
and
rcrl
out
mov
lcall
add
in
fcoms
sub
mov
sti
adc
push
imul
inc
jb
inc
pop
dec
xlat
dec
loope
fmuls
mov
movsl
xchg
inc
les
add
dec
xlat
xchg
aam
mov
cli
out
fiaddl
sbb
ljmp
or
cli
or
xchg
lods
rcrb
aad
mov
lods
iret
mov
dec
jb
arpl
jne
xor
mov
push
cmp
cs
lret
mov
loopne
pop
mov
mov
cmp
xchg
mov
or
jno
xchg
rcrl
dec
js
sahf
cmp
hlt
pop
or
pop
pop
jnp
scas
jo
push
clc
jle
cmpsl
popl
dec
push
adc
sub
push
pop
es
or
mov
pop
push
inc
push
das
jp
mov
fimull
aaa
std
mov
fnstenv
jmp
in
push
pshufw
pushf
jno
fistps
or
sbb
and
cmp
inc
fidivs
fmull
insl
cmp
or
pushf
cld
hlt
dec
mov
mov
imul
or
es
aam
push
add
mov
sahf
addr16
cmp
push
fimuls
fisttps
movl
pushf
jnp
jno
jo
js
and
cmp
xorl
repz
movsb
adc
push
repz
xor
inc
std
ds
jle
sbbb
mov
jmp
cmpsl
dec
dec
cli
in
dec
aad
popa
daa
notb
pushf
ja
fs
in
inc
adc
jne
dec
add
cs
xchg
pop
fcmovnbe
movsb
push
mov
icebp
inc
rclb
add
push
fstpl
mov
adcl
add
add
imul
jmp
shufps
hlt
cmp
push
std
icebp
push
orl
rorl
scas
xor
lret
movsl
sbb
dec
mov
push
and
dec
cmpsl
std
jg
gs
flds
cmpsl
out
jne
repnz
cmp
mov
and
scas
imul
sbb
int
js
mov
cmp
das
or
dec
xchg
daa
cmp
jbe
fwait
push
imul
push
mov
dec
or
arpl
push
xor
mov
lcall
or
in
jg
jl
jle
mov
out
xor
or
push
add
mov
call
pop
es
popf
inc
not
out
or
mov
test
push
or
je
gs
std
test
push
dec
mov
mov
jns
ljmp
adc
test
shl
cltd
add
sbb
mov
frstor
dec
dec
sub
sub
pop
sub
sub
push
cmp
cmp
jg
inc
push
ljmp
jae
sar
mov
push
das
in
inc
arpl
shlb
out
idivl
sbb
shll
aaa
xchg
js
push
sub
call
mov
jno
in
and
mov
xlat
test
jno
clc
hlt
jb
scas
xor
dec
shlb
test
negb
fisubl
xchg
repnz
cmp
xchg
inc
adc
adc
stos
enter
out
cwtl
hlt
pushf
cs
mov
rorb
jge
stc
mov
mov
jle
daa
lcall
xor
dec
popa
adcb
loope
int
push
jno
cs
pushf
adc
into
in
cmp
sbb
cmp
and
stos
cmp
push
sub
pushf
insl
sbb
out
jecxz
test
cmp
ds
enter
cmp
push
dec
sti
pop
loopne
inc
add
pop
rcrl
xchg
xchg
repz
in
xor
xchg
js
push
int
xchg
fistl
fwait
sahf
push
lea
bound
es
mov
push
add
mov
cmpsb
inc
mov
pop
jg
xor
mov
dec
je
mov
mov
xor
mov
pushf
pushf
inc
jecxz
or
roll
jae
jbe
mov
insl
add
adc
mov
std
inc
in
pop
jp
adc
popa
aas
mov
inc
mov
gs
rolb
jecxz
sub
jne
ss
arpl
inc
mov
adc
xor
in
xchg
loopne
ja
js
push
pop
cmp
sub
jne
inc
lea
or
faddp
mov
add
popa
insl
jo
loopne
pop
sub
cmc
fildl
shr
fdivs
and
icebp
jl
sub
cld
and
sbb
fcoml
push
imul
out
int
xor
sbb
add
ret
pop
jl
mov
xbegin
nop
dec
sbb
daa
dec
pop
mov
insb
fsubrs
jmp
xchg
out
lcall
addb
outsb
mov
sub
dec
xchg
pop
cmp
dec
mov
dec
mov
hlt
call
cmp
bswap
cmpsl
sbb
push
bound
inc
xchg
ja
xchg
stos
mov
mov
xchg
icebp
add
push
add
mov
push
sub
mov
shll
cmc
xchg
movl
aaa
inc
mov
stc
xlat
jnp
mov
mov
and
mov
xchg
sar
lods
outsl
jmp
pop
mov
je
inc
mov
test
lea
jb
test
std
movsb
mov
adc
das
push
pushf
inc
sub
ja
or
iret
add
clc
mov
jo
jecxz
lods
pop
inc
sahf
aas
push
sub
es
fisubs
mov
test
pop
jae
jp
pop
clc
dec
jne
dec
pop
lret
mov
addr16
rcll
shll
addr16
test
inc
ljmp
sub
mov
sahf
jns
cmc
pushf
lea
jno
cs
push
stos
out
push
sub
mov
dec
lcall
lods
sbb
mov
lahf
inc
xchg
add
daa
pop
and
mov
jae
imul
xchg
das
inc
jns
or
sarb
gs
xchg
arpl
popf
test
mov
or
and
pop
sbb
dec
pop
mov
dec
xor
jae
cmpsl
aad
ljmp
mov
mov
nop
shrb
xor
nop
loope
outsb
fdivs
add
imul
icebp
test
fwait
in
lock
rorb
push
faddl
mov
scas
ret
xor
dec
mov
xchg
rcl
jmp
loop
shll
xchg
pusha
aas
cli
push
xor
pop
fs
rol
cmpsl
movsl
xchg
xor
jns
leave
mov
and
int3
mov
sbb
xchg
call
into
insl
lret
cwtl
movb
inc
in
mov
xchg
sub
fmul
movsb
out
xor
xor
inc
inc
out
push
rclb
paddsw
scas
and
aas
adc
xorb
xlat
mov
jns
inc
jecxz
inc
jnp
lea
sbb
xchg
xor
aad
push
call
movsl
imul
insl
lcall
cmc
imul
sub
cmc
jno
jnp
jno
sub
aas
sahf
push
mov
aad
cmp
mov
dec
mov
es
mov
cmp
ja
sub
test
stc
inc
lret
mov
sub
mov
ljmp
jecxz
loopne
jno
dec
sub
out
adc
sbb
in
fwait
push
insl
xchg
ja
pop
into
gs
dec
mov
aam
add
dec
xchg
cmp
and
adc
pop
std
pop
xchg
sti
lret
mov
in
sbb
std
cmp
mov
xor
push
xor
jl
xor
imul
test
ss
mov
pop
mov
mov
adc
sbb
insb
push
pop
movsl
mov
push
lock
push
out
in
arpl
mov
repz
or
xor
fxam
cmc
pop
xchg
mov
jbe
pop
ja
mov
dec
inc
push
push
aam
jg
mov
push
mov
mov
lea
ja
leave
xchg
or
into
mov
mov
pop
cmp
inc
push
in
mov
mov
adc
lcall
int
call
jbe
test
addr16
cmpsb
sbbb
push
pushl
cmpsl
lods
aad
lahf
aas
push
sahf
test
comiss
push
inc
shl
xchg
mov
adc
test
inc
pop
sti
jno
xchg
lds
bound
cmp
shrb
pop
pushf
xor
inc
std
inc
jb
sbb
jae
or
and
inc
sbb
fisttpl
leave
int
push
cwtl
push
in
aaa
lods
inc
enter
sub
jl,pn
xchg
lock
call
lcall
inc
inc
cmc
stc
nop
mov
mov
add
jns
stc
sahf
test
dec
js
inc
jae
inc
mov
lock
adc
ljmp
push
xor
popa
ds
xchg
enter
cmpsl
jae
repnz
jmp
sahf
clc
push
cld
inc
jo
or
mov
std
mov
pop
cmp
testl
cmp
mov
scas
adc
adc
pop
mov
jl
xchg
mov
mov
outsl
cmp
sahf
inc
mov
jp
push
dec
push
dec
test
aaa
je
fimuls
mov
pushl
pop
loopne
ror
imul
push
mov
mov
das
lock
xchg
into
mov
xchg
in
idivl
subl
cmpsl
je
push
cmp
dec
cmp
mov
inc
filds
fwait
mov
or
repnz
les
and
cmp
xchg
bound
fdivl
sbb
daa
fs
and
pushf
outsl
and
lcall
mov
arpl
icebp
pop
cmpl
movsl
xor
aad
decb
push
xchg
mov
inc
pop
stos
pop
jg
xchg
sub
push
push
pop
dec
fs
sti
jo
sub
push
sbb
ret
jp
jbe
mov
pop
sub
sar
xchg
mov
xor
insb
jge
and
mov
imulb
pop
xchg
pop
xchg
push
xchg
lret
mov
fwait
jb
cli
xchg
mov
imul
or
jnp
adc
bound
std
in
test
shlb
adc
lods
aam
mov
sub
adc
push
xchg
mov
in
fistps
push
lock
fisubs
dec
push
lods
popa
xchg
xor
mov
aam
xor
sahf
outsl
mull
int
lret
push
inc
sub
dec
mov
outsl
cmc
add
imul
icebp
fsubs
sbb
push
sbbb
mov
adc
adc
test
mov
pop
sahf
int
out
aas
ljmp
insl
and
push
push
cmp
add
outsl
sub
test
lahf
loope
xchg
adc
mov
mov
add
fcompl
daa
fildll
push
push
mov
mov
xlat
mov
clc
rcl
sahf
pop
icebp
jle
inc
xchg
pop
lret
fcompl
fadd
cld
fiaddl
lret
rolb
dec
mov
out
add
rcll
sti
mov
adc
ret
test
out
pop
pop
xchg
jecxz
in
insb
jp
cmpsl
out
mov
mov
pushf
xchg
cmp
movsb
hlt
pop
fadd
jp
rorb
and
mov
icebp
sbb
pop
sub
inc
outsb
and
xchg
arpl
push
mov
sbb
sti
push
xchg
mov
mov
xchg
or
jmp
mov
dec
push
mov
jmp
adc
in
push
xor
test
cltd
push
enter
mov
cmpsb
mov
jmp
shrl
lret
dec
icebp
enter
jp
or
subb
jb
mov
push
mov
xchg
cli
lods
mov
jnp
push
fs
mov
jnp
or
sub
jmp
xchg
add
sahf
dec
mov
pop
mov
dec
shrb
dec
push
cmp
cmp
mov
icebp
out
das
sub
loop
cltd
rcll
adc
jns
jp
pop
out
xchg
mov
xchg
insl
jns
dec
fwait
lret
mov
mov
ss
dec
xor
incb
ss
mov
mov
mov
cli
ljmp
adc
pusha
pop
adcb
sub
mov
in
leave
jno
and
cmp
mov
sub
minps
push
jbe
lret
mov
xchg
and
xor
push
outsb
lret
xchg
push
mov
dec
pop
cmp
mov
jg
jmp
leave
sub
dec
bound
sbb
subl
xlat
sub
scas
cmpsl
inc
mov
xchg
dec
pop
imul
ljmp
inc
fsubs
pop
xor
sbb
mov
add
hlt
xchg
mov
ja
mov
mov
cs
and
push
into
mov
icebp
lret
or
mov
ret
push
sub
inc
cmc
loop
inc
inc
insb
inc
xor
mov
pop
push
orps
push
adc
adc
xlat
xor
stc
insb
push
lcall
in
jp
xchg
push
adc
cmp
cmc
push
gs
enter
and
mov
in
popf
dec
lods
call
xlat
les
cmp
cmp
call
enter
dec
mov
and
popa
aad
cs
jo
cli
dec
sar
mov
mov
pop
jo
add
imul
outsb
mov
and
jmp
iret
enter
push
sbb
sub
mov
cmpsb
enter
sub
cmp
inc
dec
int3
fs
nop
in
or
jo
dec
mov
movsb
jns
mov
cmpsb
sbb
sarl
std
rorb
sbb
into
jl
fdivp
xchg
testb
mov
pushf
cwtl
add
cmp
mov
lods
lods
in
in
mov
outsb
rorl
clc
lret
ja
xchg
jae
jno
stos
mov
jo
adc
push
mov
mov
cmp
cmp
inc
scas
inc
mov
rcll
aad
inc
jp
cwtl
pushf
jecxz
ljmp
sbb
jae
lds
cmp
mov
lock
repz
jecxz
stos
jl
cmp
adc
mov
push
sbb
cmpsb
adc
cmc
mov
or
cmp
int
jnp
inc
lods
pop
movl
scas
xchg
jle
and
pop
adc
sbb
sbb
jge
mov
inc
and
dec
mov
out
lea
mov
mov
das
cmp
pushf
es
sbb
popa
repz
push
sub
shll
gs
pop
dec
out
cmpsl
ficoms
mov
sub
sub
mov
pop
cmp
ja
js
stos
and
scas
sti
xor
pop
leave
mov
cmp
push
out
js
stos
cld
sub
mov
add
int
repnz
xchg
jle
or
aad
in
movsl
sahf
sub
xchg
incl
shlb
popa
cmc
add
ret
and
rcr
lea
adc
adc
imul
cmp
out
stos
mov
scas
mov
xor
movsb
out
xchg
xchg
sbb
shl
mov
or
and
adc
push
mov
mov
dec
outsb
aam
push
jns
bound
xorb
outsl
sti
dec
jnp
arpl
loopne
pop
scas
mov
ja
mov
cmp
mov
xchg
imul
lods
or
mov
push
out
sahf
adc
sbb
jmp
mov
xchg
jmp
mov
sbb
sbb
lret
ja
pop
xlat
jl
or
mov
mov
pop
add
aaa
push
lcall
sbb
mov
inc
push
shl
ss
rcrb
ljmp
nop
loopne
dec
ret
xor
into
xchg
in
loop
sub
cwtl
inc
gs
in
inc
icebp
xlat
shlb
iret
xchg
push
ljmp
cli
mov
cmp
inc
stos
imul
adc
jns
test
sbb
mov
sbb
mov
or
xchg
fs
decb
and
xchg
inc
push
ds
mov
mov
call
rcrb
mov
sub
push
inc
sbb
icebp
cmpsl
cltd
mov
fidivrl
shl
mov
or
stos
fists
in
mov
lods
and
pop
cmp
add
fstpt
js
mov
sub
jb
int
jmp
in
mov
add
int3
push
xchg
sub
lret
fidivrl
imul
outsb
mov
test
cld
xchg
aam
adc
xlat
aas
xor
enter
adc
fs
dec
lcall
pushf
std
test
mov
lcall
test
or
lock
pop
fsub
jg
push
stos
ret
out
dec
push
sti
sbb
loope
fidivl
sbb
out
jns
cwtl
stos
pop
pop
lret
imul
xchg
or
xor
sbb
dec
push
test
push
pop
push
int
mov
pop
std
xchg
mov
push
scas
and
imul
in
push
imul
jno
daa
push
dec
out
cmp
aas
or
push
mov
fistpll
lods
cltd
lock
in
aas
aad
pop
mov
jp
lret
jo
in
xchg
push
add
and
sbb
lmsw
lods
fadd
inc
mov
sarb
mov
shll
or
xchg
sbb
ds
xchg
push
jo
dec
sub
clc
or
add
dec
xchg
pop
nop
xor
mov
pusha
daa
mov
lods
add
mul
mov
sbb
jb
mov
movb
hlt
inc
mov
jae
mov
adc
rcr
inc
push
pop
cmp
inc
out
mov
jbe
orl
fs
imulb
sub
dec
movsb
xor
pop
xor
out
jo
mov
ficoms
or
xchg
dec
sbb
out
push
into
and
test
and
jp
mov
jae
pop
push
cmpl
stos
pop
arpl
insb
mov
jo
add
rorb
xor
cli
lcall
cmp
test
lcall
in
jmp
out
mov
movsb
push
es
jne
cmp
jp
adc
sub
sar
imul
aad
call
pusha
xor
gs
or
dec
xchg
movsl
add
push
popa
jl
dec
and
mov
push
xor
jmp
lock
ret
sub
inc
fmuls
imul
lea
stos
add
mov
adc
testl
and
sbb
jno
shlb
sub
int
mov
mov
hlt
xchg
stos
in
aas
sbb
adc
insb
arpl
cmp
sbb
add
enter
adc
inc
mov
loopne
mov
ret
movsl
cmpsb
push
mov
ret
dec
lods
jmp
mov
pop
test
push
sbb
stos
sti
into
sbbl
xrelease
scas
mov
repz
mov
fiadds
ret
and
mov
mov
adcb
push
ja
mov
imul
jns
pop
sti
mov
mov
arpl
aaa
mov
mov
nop
cli
cmpsl
fstpt
in
orb
jo
push
popa
arpl
sub
clc
fldl
inc
arpl
or
xchg
xchg
shlb
lds
cmp
sub
mov
mov
xor
mov
mov
pop
lock
out
mov
in
addr16
pop
dec
cmp
xor
cmp
ret
das
in
pop
into
insl
adc
push
mov
in
push
sub
scas
inc
sbbb
mov
out
add
cmp
jo
cmp
fstpt
je
leave
dec
in
fdecstp
stc
ret
jp
repz
int3
lods
dec
and
pop
xor
cmp
pop
adc
xor
push
adc
aad
or
test
push
sahf
mov
mov
mov
cltd
jbe
pop
aad
xchg
xchg
lods
inc
pop
stos
int
cmp
pushf
and
shr
push
xchg
or
icebp
notl
or
into
mov
xchg
pop
jl
push
xor
in
ret
xchg
push
loop
mov
xor
call
add
jge
xlat
jp
push
pop
adc
xchg
inc
shll
jns
add
and
cmp
cli
lahf
inc
sbb
adc
mov
lods
mov
je
or
ret
lods
scas
pop
aaa
xchg
add
push
mov
push
movsl
mov
cltd
dec
dec
cwtl
cmpsb
adc
adcl
lods
mov
inc
xchg
mov
dec
fsts
sbb
lret
cmp
sub
sub
pop
push
bound
test
cld
mov
dec
and
imul
loop
xchg
sub
leave
jns
imul
add
mov
and
mov
repnz
ljmp
fs
inc
movl
or
lahf
or
sbb
xchg
movsl
into
and
push
mov
fwait
mov
xor
inc
inc
mov
mov
xchg
pop
addr16
outsb
sub
add
sub
js
arpl
mov
pop
jno
outsb
popl
pop
icebp
je
mov
jp
adc
cmp
loop
popf
test
imul
dec
mov
mov
ja
mov
xchg
xchg
push
roll
dec
or
out
mov
mov
jno
push
mov
push
and
cli
jmp
xchg
push
jmp
mov
sub
or
imul
mov
jge
adc
icebp
mov
jmp
aam
inc
fs
dec
sub
mov
mov
pop
push
stos
xor
iret
cmp
cmc
pop
mov
bound
adc
fadds
mov
jecxz
fisttpll
fadd
push
les
xchg
int3
or
jmp
in
mov
mov
shll
xchg
clc
aas
mov
cs
sub
push
addl
jnp
xor
out
lock
xchg
cmc
mulb
xor
ja
cmp
loop
cmp
push
and
xor
call
loope
add
adc
and
out
jg
dec
mov
mov
push
mov
cltd
rcll
into
loopne
jo
or
mov
add
cs
idivb
sub
pop
data16
mov
movl
mov
jns
cwtl
dec
frstor
jg
clc
das
testl
mov
or
imul
and
jge
cld
std
and
in
inc
mov
mov
push
inc
mov
neg
jecxz
dec
loopne
xchg
sbb
pop
sar
cmp
cld
add
fsubs
insl
mov
imul
sbb
arpl
pop
inc
or
push
rcl
jge
out
jo
pop
mov
mov
adc
cmpsb
push
xchg
popa
je
sub
inc
add
mov
mov
jns
pop
mov
push
jns
ss
in
leave
sbbl
test
sub
rorb
or
ja
xlat
mov
inc
fisttps
dec
adc
insb
mov
jecxz
adc
and
shlb
mov
dec
sub
jl
mov
call
pop
lock
add
ret
fstps
idiv
xor
dec
adcl
inc
adcb
jb
inc
inc
xchg
adc
ja
sbb
push
sbb
ret
rcrb
mov
push
lods
lods
mov
into
lods
imul
mov
fidivrl
test
mov
mov
rcll
test
data16
loop
les
and
sbb
inc
mov
out
ljmp
adc
mov
mov
ljmp
ret
pusha
inc
mov
mov
out
lcall
cld
call
mov
repnz
outsl
jne
sub
sbbl
out
stos
cmp
sbb
fsubs
xchg
out
push
and
cld
mov
jb
int
mov
pop
jp
dec
and
push
sub
jbe
push
add
or
sti
pop
les
sub
jns
fucomip
inc
add
inc
inc
sahf
rclb
adc
cmp
or
or
xlat
xchg
mov
push
xor
nop
clc
or
pop
inc
dec
cltd
mov
mov
jbe
fstpt
sarb
aad
je
sbb
sub
mov
ret
sbb
jno
gs
scas
lret
stc
xor
dec
int
mov
test
pop
push
xchg
sbb
adcl
pop
sub
jp
sbb
xchg
add
lcall
sahf
lods
addl
pop
aad
sub
test
scas
pusha
hlt
subl
das
sub
ret
pop
ja
adc
js
xchg
dec
ret
in
cmp
in
sbb
xchg
xchg
xor
inc
pop
sub
fldl
aas
cli
xchg
mov
sbb
adc
call
and
or
push
pop
pop
ret
or
xor
movsb
xchg
cmp
push
sarl
xchg
and
sub
add
std
test
dec
cwtl
inc
addr16
cmp
lods
lret
jmp
popa
sub
mov
fsqrt
add
sbb
imul
adc
push
mov
scas
dec
imul
in
fsubr
pop
cmp
aas
jns
ja
and
sub
es
popa
dec
mov
mov
clc
or
pop
inc
in
int
or
or
pusha
ret
pop
dec
icebp
call
inc
push
push
cmp
and
jb
adc
or
and
je
inc
rorl
push
das
call
test
push
xor
iret
add
ljmp
add
mov
fsubr
xchg
cmp
xchg
je
int
mov
mov
in
test
sbb
inc
fnstcw
jns
cmpb
inc
sbb
inc
loop
mov
xor
mov
mov
jnp
push
mov
xor
push
fs
aad
and
imul
xor
gs
repnz
inc
add
dec
jecxz
and
add
stc
test
mul
pop
cmc
mov
dec
or
cld
jecxz
pop
and
pop
lret
pushf
xchg
or
push
and
sbb
dec
pushf
push
cli
pop
aam
cli
mov
mov
fwait
mov
test
repz
cmp
lcall
cmc
mov
data16
adc
inc
icebp
pop
jbe
jns
and
mov
xor
in
scas
add
insb
xchg
push
adc
andl
or
cld
jne
mull
sbb
test
in
gs
incl
sub
cmp
movsb
fdivl
ret
mov
scas
jmp
xor
lds
mov
mov
fcmovb
and
sub
ss
xchg
ffreep
pop
dec
mov
imul
in
adc
inc
addr16
cmp
call
loope
inc
mov
fs
push
xor
xlat
mov
in
cmp
cmpsb
ror
and
ss
ds
pop
jecxz
xchg
lea
and
lock
popa
aaa
xchg
lds
rcrl
aaa
xor
xchg
adc
insb
shrl
das
mov
mov
inc
in
addb
stc
or
lods
out
dec
mov
inc
push
xor
and
movsl
sub
aad
adc
sub
sbb
cmp
sbb
xchg
cmpsb
daa
sarl
fisubrs
pop
inc
sbb
dec
arpl
dec
hlt
xchg
ds
jae
shll
sub
das
loop
repz
movsl
shll
pop
mov
das
cmpsl
pushf
and
loope
outsb
out
hlt
fistps
mov
aam
add
cmp
pushf
fs
mov
cmp
sbb
push
and
pop
push
jecxz
pop
fs
pop
popa
sbb
and
jb
mov
es
adc
and
pop
sbbl
mov
outsb
sbb
mov
aas
push
scas
lock
in
pop
mov
jmp
mov
mull
sub
mov
adc
jle
xlat
dec
pop
fbstp
addr16
cmp
pop
cmp
mov
push
fs
jns
sbb
add
mov
adc
sbb
clc
mov
sbb
stos
lret
pop
xor
fdivrl
test
and
daa
popf
inc
subb
mov
push
or
and
fsubrs
mov
xchg
aas
out
xchg
inc
int3
mov
pop
fucomi
lods
pop
ret
leave
add
cmp
addl
adc
mov
jns
outsl
iret
mov
scas
mov
into
xchg
cmpsb
lcall
andl
push
mov
into
sub
test
or
sbb
stos
inc
lock
and
cmpsl
popa
mov
xchg
xchg
sbb
cmp
cmp
lea
xor
clc
cmp
repnz
or
filds
xchg
sub
nop
cmp
adc
dec
test
icebp
aad
mov
sub
xor
push
std
fisubl
mov
push
mov
repz
fmuls
mov
mov
leave
sub
inc
or
sub
insb
adc
out
stos
and
repz
test
mov
push
repnz
cs
push
mov
js
sub
iret
scas
scas
inc
arpl
dec
sar
or
jg
hlt
mov
fwait
std
cmp
pop
pop
int
xor
mov
cmp
ret
outsl
out
inc
push
xor
das
test
scas
mul
xor
ljmp
imul
push
dec
pop
fdivrs
jno
inc
popa
inc
jae
mov
sub
mov
inc
stc
ficoml
test
and
lock
fxch
int3
jb
xchg
out
andb
mov
cmp
movsl
cmp
dec
es
xor
insb
lds
jno
mov
cltd
aaa
xchg
add
pop
mov
and
cmp
movsl
inc
jmp
add
scas
js
out
jae
jns
xchg
enter
gs
cmc
shll
leave
clc
aaa
nop
mov
out
add
push
jg
ret
xor
cld
aas
fsubl
jns
xchg
jge
pop
xor
out
jp
sahf
mov
mov
stos
ds
test
and
sbb
mov
cmpsl
mov
xchg
sti
ret
faddl
cmpsl
iret
xchg
inc
push
adc
add
jne
popa
adc
mov
out
jmp
and
ds
outsl
push
or
vpunpcklwd
jl
test
pushf
ret
xchg
xchg
in
pushf
jmp
and
pop
add
scas
lds
pop
push
or
stc
call
sub
sbb
push
sub
imul
mov
push
test
ret
aad
ljmp
xchg
jae
sarl
pop
popf
mov
push
lret
sbbb
scas
mov
mov
mov
loope
or
sbb
sbb
or
sub
cs
ror
push
pop
xor
jb
ret
imul
mov
cmpsl
dec
lret
push
jbe
inc
lahf
xchg
out
int3
dec
jno
std
xchg
dec
push
es
and
scas
imul
cmc
bound
mov
inc
cwtl
aas
push
push
xchg
sbb
fildl
mov
mov
fwait
aas
sbb
mov
xor
sbb
push
das
das
out
hlt
mov
dec
or
dec
enter
rorb
jnp
adc
add
sub
cmp
outsl
ljmp
sahf
iret
mov
add
push
ds
testb
push
xchg
lods
dec
inc
mov
lock
sbb
jns
mov
fimull
iret
inc
adc
push
sbb
add
out
pinsrw
test
out
lds
inc
mov
pop
xchg
push
sbb
in
test
jle
shl
pop
scas
jmp
cli
pop
int3
iret
push
sub
sbb
push
sqrtps
sub
addr16
jae
pop
js
loopne
repz
arpl
sbb
fidivs
cmp
mov
sbb
xlat
and
shl
leave
dec
imull
pop
ds
mov
cmpsb
aam
jle
xchg
ja
shl
mov
inc
add
not
add
mov
pop
cmc
test
jp
pusha
mov
xchg
mov
jge
mov
add
xchg
or
aad
cmp
jmp
cmc
pop
pop
test
dec
pushf
mov
mov
mov
inc
push
cli
lret
mov
mov
ds
or
aam
mov
and
js
fldl
mov
jno
js
mull
adc
adc
iret
mov
lret
jno
stos
lea
orb
mov
sub
jg
in
or
rcrl
cld
jbe
push
icebp
sahf
pop
adc
mov
inc
sbb
insb
out
xor
mov
movb
pop
test
hlt
dec
inc
ficompl
mov
mov
inc
insl
lea
xorb
push
sub
iret
lahf
jbe
sti
xlat
je
push
fstps
and
in
mov
movb
in
add
xor
mov
xor
xor
test
mov
xor
mov
xchg
push
xchg
add
sub
push
roll
xor
les
into
ss
jmp
cwtl
mov
push
jbe
enter
shlb
jecxz
and
sbb
push
arpl
mov
movsb
outsl
std
stos
lcall
cmp
push
aam
xchg
aam
jmp
mov
mov
inc
fmull
push
iret
mov
mov
jns
sbb
push
mov
lds
fwait
pop
add
jae
xchg
push
xor
les
test
pop
out
hlt
lods
adc
fisttpl
into
push
xchg
scas
popa
pop
fcompl
data16
sub
xchg
faddp
xor
cs
cld
lret
fwait
jecxz
xchg
adc
cmpsl
adc
mov
in
pop
xchg
mov
mov
repnz
icebp
fwait
xor
jle
int
mov
call
das
mov
cltd
and
mov
test
popa
and
mov
push
pop
cmp
add
jg
lret
dec
icebp
jo
xchg
pop
pop
daa
dec
cmp
inc
insb
sub
aam
add
jnp
jbe
shll
dec
pop
mov
fsubrs
leave
mov
add
xor
dec
cmp
xor
leave
pop
mov
pop
cmp
and
xchg
mov
cltd
sahf
mov
rcrl
lcall
or
pop
or
hlt
cltd
daa
mov
mov
adc
dec
inc
fs
mov
bound
xor
push
cmc
xchg
repz
stos
pop
pusha
test
imul
xchg
cmpsl
and
ficompl
xlat
lret
jge,pt
hlt
push
cmp
and
jb
in
ja
mov
stos
ret
pop
push
lcall
jae
pop
sti
adc
mov
jge
in
in
or
ror
xor
out
arpl
pop
and
mov
cli
call
mov
loop
jecxz
sti
ficoml
sbb
mov
jecxz
jae
ficoms
roll
inc
cwtl
inc
pop
xchg
mov
adc
push
push
mov
mov
fdivs
aad
rclb
loope
lret
mov
shrl
imul
mov
add
out
ror
adc
mov
sarl
in
push
or
adc
sub
cmp
shlb
jno
icebp
jmp
rolb
adc
enter
xlat
test
sub
mov
pop
xchg
jns
fldcw
push
lock
leave
repnz
or
xor
sbb
pop
xchg
das
push
or
pop
and
idivb
in
call
inc
mov
jp
dec
enter
data16
mov
mov
mov
negl
dec
dec
adc
mov
and
pop
sub
xchg
repnz
loop
xor
rcl
int
adc
adc
inc
ficomps
ja
loop
push
or
jno
loop
fistpl
dec
aas
test
lret
loopne
mov
test
mov
pop
jno
mov
in
cltd
mov
mov
into
mov
fisttpll
mov
mov
mov
dec
js
lods
and
iret
je
lock
xchg
xchg
insb
fcoms
xor
fs
js
cltd
dec
cmpsb
pop
xchg
jnp
pop
cmpsl
lahf
in
sbb
adc
adc
int
subb
push
decl
xor
ret
push
add
mov
xchg
aaa
sub
xchg
sbb
adc
or
out
push
sahf
je
mov
dec
xor
das
xchg
xchg
js
sbb
lds
mov
inc
jae
cld
mov
jl
adc
mov
insb
mov
out
flds
inc
stos
test
jmp
fldl
addb
pop
cmp
loope
sbb
aam
mov
or
dec
push
xchg
mov
scas
xchg
jnp
sbb
insl
std
ljmp
scas
jge
iret
xchg
loop
xchg
pop
adc
xchg
int
cmc
lcall
call
sbb
loop
or
sbb
aam
mov
xor
mov
aas
lret
push
cmc
xor
repnz
inc
xor
cmp
adc
or
or
dec
add
jb
or
sbb
mov
stos
xchg
sub
jge
fcmove
xchg
push
lret
xor
popf
cmp
push
sahf
lret
jmp
rcrl
jecxz
mov
and
lret
jmp
jmp
rorb
arpl
popa
inc
gs
ret
sarb
dec
jmp
addr16
mov
inc
daa
push
xchg
xor
mov
loopne
les
mov
jmp
lods
mov
scas
jmp
mov
fsubrl
push
mov
push
mov
addr16
add
xor
and
pop
popa
and
sub
or
in
sub
inc
mov
fmul
cmc
fcomip
xor
jno
rcrb
cli
iret
sbb
jns
adc
add
test
jmp
int3
xor
ljmp
shlb
sbbb
lea
dec
dec
jnp
cmp
sbb
in
out
or
stos
inc
repnz
call
cmpsl
dec
jnp
insb
jg
mov
rorl
jle
std
int
mov
push
sbb
jb
xchg
cmpsb
push
inc
mov
adc
dec
std
inc
rol
ds
arpl
ret
pop
daa
outsb
fmull
xchg
in
jmp
or
sub
jmp
cmc
jle
push
mov
adc
insb
es
xchg
lods
ja
xchg
xor
or
xorb
aaa
xor
lds
ja
decl
or
mov
jmp
mov
inc
imul
repnz
hlt
and
mov
arpl
or
lock
cmpsl
mov
flds
inc
lcall
sub
aam
jl
fwait
xor
fwait
pop
shll
iret
pop
push
jmp
arpl
jno
push
inc
psrad
rcll
test
popl
mov
faddp
add
stos
incl
inc
test
mov
pop
xchg
or
stos
pop
icebp
sbb
rcrb
call
addr16
adc
std
mov
aaa
je
mov
int
stos
push
andb
mov
and
xchg
fimull
pop
mov
gs
call
sbbb
xor
test
aam
xor
aas
pop
imul
scas
adc
sub
into
pusha
mov
mov
xor
sbb
mov
mov
mov
mov
mov
outsl
adc
cmpsb
lds
sub
sub
test
das
inc
push
push
mov
or
xchg
leave
ljmp
push
jle
mov
jne
cld
out
out
xlat
and
cli
lds
and
scas
push
mov
cmp
shll
mov
out
aam
dec
xchg
repz
inc
fwait
in
xor
bound
pop
push
fistpll
iret
sbb
or
add
jo
pop
aam
mov
addr16
std
lds
pop
xor
mov
sbb
pop
je
cmpsl
push
jnp
lahf
mov
mov
xchg
inc
mov
jmp
ss
mov
jl
ss
loope
mov
mov
leave
inc
addr16
mov
dec
jle
or
cmc
cmpsl
je
mov
push
mov
mov
xlat
popf
push
adc
add
sahf
push
mov
test
xchg
lock
mov
xor
fs
push
cmp
xchg
fsub
mov
add
out
mov
jno
lcall
cmp
divb
mov
ja
jp
add
push
jmp
arpl
pop
fwait
mov
aad
shl
and
xlat
clc
mov
adc
xlat
fwait
rorl
cmp
shrb
or
out
mov
inc
pop
jecxz
hlt
out
sbb
mov
xchg
fwait
sub
stc
jg
insl
scas
push
shl
mov
ja
xchg
inc
aas
xor
js
jp
xchg
ljmp
inc
dec
das
in
jns
push
lcall
cwtl
xchg
cwtl
push
pop
jbe
repnz
push
pop
xor
outsl
cmp
lret
popa
mov
repnz
lret
ret
divb
and
push
xchg
mov
mov
dec
mov
mov
jle
cmp
imulb
push
jno
mov
sbb
loop
and
testb
mov
cmp
aad
push
lds
insl
xchg
push
in
mov
mov
imul
clc
pop
vxorps
test
mov
or
mov
ret
xor
sahf
cmp
adc
lds
pop
cmp
jne
enter
cmp
dec
ret
mov
addl
and
cmp
mov
sbb
cs
sub
addr16
or
ret
bound
daa
loopne
sub
inc
test
jne
push
sbb
int3
loop
in
mov
popa
adc
fisttpll
test
dec
repz
dec
push
test
ret
repnz
and
or
sahf
xor
sub
mov
stos
ja
sti
xchg
xor
xchg
lock
ret
loopne
xchg
adc
movl
fmulp
and
loopne
push
sahf
pop
mov
js
mov
test
idivl
xchg
push
div
add
mov
xorb
stos
sar
insl
imul
std
xchg
sub
fcmovnb
push
lea
and
adc
jp
jl
enter
and
sub
adc
insl
aas
orl
jg
jo
in
adc
inc
dec
shlb
in
mov
mov
scas
mov
mov
xor
popf
out
dec
add
adc
jnp
xor
addr16
outsb
sbb
fists
repz
mov
mov
cmp
lea
xor
dec
dec
fdivrp
inc
or
dec
in
xor
and
imul
mov
out
xchg
cld
int3
call
in
jge
je
sub
mov
in
aaa
ds
aaa
mov
add
xchg
jnp
lahf
outsl
pop
cmp
dec
loop
jbe
mov
andl
sub
pop
inc
sahf
fisttpl
roll
cmpsb
or
hlt
jno
push
dec
jo
pop
and
sub
or
jmp
out
lock
cmc
das
mov
sub
xchg
icebp
jb
jns
pushl
push
sub
aam
inc
sbb
imull
ss
fiadds
mov
jns
ror
cli
aas
and
or
rorb
outsb
test
pushf
add
rol
in
inc
ret
pop
shrb
xchg
stos
push
std
mov
popa
adc
dec
mov
dec
in
popa
fwait
cmp
ffree
test
gs
add
inc
test
mov
fcmovne
mov
xchg
xorb
dec
fs
pop
mov
lods
aaa
mov
xlat
add
rcll
popa
mov
push
pmuludq
lret
jne
and
push
les
in
pop
sbb
and
xchg
cmp
enter
ljmp
xlat
je
sbb
call
orb
and
frndint
mov
adc
jbe
ret
mov
outsb
push
inc
sub
xchg
dec
sbb
push
sbb
jnp
cmp
insl
mov
vpavgb
int
aad
or
scas
loopne
in
frstor
mov
or
inc
scas
rcl
xchg
sbb
lret
xor
rorl
sbb
scas
jle
insb
je
inc
test
mov
insl
cwtl
xlat
push
cmpb
shll
pop
lret
aaa
in
fadds
mov
adc
sub
xor
rcrb
xlat
in
call
push
aas
icebp
mov
push
filds
jge
divb
pushf
xchg
mov
mov
cmpb
loopne
pop
inc
and
aad
push
int3
xchg
cmpsb
jb
ret
fnstenv
shl
mov
aam
jecxz
loope
push
inc
divb
jae
stc
nop
sbb
mov
sub
mov
mov
mov
mov
push
pushf
cmp
dec
lds
and
xor
mov
mov
rcrb
ss
icebp
in
ds
outsb
addr16
rorb
cmp
mov
stos
popf
cs
movsb
bound
xor
fwait
pushf
jge
fistps
mov
mov
sti
push
cmp
cmc
sbb
leave
jno
push
sub
mov
in
inc
test
dec
pop
mov
dec
mov
fildl
jno
adc
xchg
hlt
fbstp
inc
mov
into
std
in
sub
adc
mov
sarl
jle
sbb
pop
or
imull
xor
sbb
jmp
out
and
xchg
cmp
inc
icebp
dec
out
pop
rcl
sbb
cwtl
cmpsb
and
cmpsb
or
daa
mov
mov
int3
mov
mov
mov
into
jno
jmp
hlt
lods
lds
push
mov
push
neg
mov
rcrb
repz
cmp
in
cmp
repz
lods
and
xor
inc
jmp
fs
test
pop
clc
cli
cmp
cwtl
ret
xchg
in
xchg
and
and
sti
mov
mov
ss
push
lcall
dec
pop
pop
jmp
sub
icebp
xchg
stos
jne
push
ds
jp
dec
ror
shl
in
sub
mov
icebp
in
mov
pop
and
cli
jns
xchg
mov
xor
add
pop
xor
mov
xchg
mov
xchg
mov
arpl
mov
add
test
roll
scas
or
xchg
ret
leave
mov
jecxz
add
popf
push
mov
sbb
icebp
or
and
loope
lret
push
cmpsl
aam
in
and
sub
rcll
cli
inc
adc
insl
lahf
mov
iret
shll
mov
aad
es
fwait
xchg
icebp
test
lret
mov
mov
xor
cwtl
test
scas
repnz
pop
enter
inc
adc
out
pop
dec
loopne
imul
inc
pop
push
out
in
push
out
or
mov
sub
pop
push
call
mov
fs
jo
and
popl
mov
in
aam
fstps
es
insb
out
test
push
mov
add
mov
lock
rcl
xchg
push
or
lret
jl
data16
loopne
clc
mov
imul
or
cwtl
sbb
mov
mov
imul
jge
movsl
xor
and
mov
xor
mov
mov
xor
dec
lods
and
pop
rcl
icebp
pushf
sbb
jo
push
xor
pop
xchg
test
in
cmp
shrb
loope
fmuls
dec
and
ret
and
outsl
adc
sti
pop
mov
xor
mov
mov
int
xchg
ja
es
pop
ret
dec
jae
testl
nop
xchg
push
push
mov
out
dec
ss
mov
call
jns
or
mov
xchg
jl
xchg
xor
dec
lcall
ficomps
lea
xchg
fsubr
ds
mov
add
push
cs
pop
mov
imul
cmc
sbb
ret
jbe
int3
adc
push
jmp
shll
iret
inc
das
jne
out
jb
mov
sub
sub
push
pushf
test
mov
xorb
lds
jno
mov
cmp
add
les
pop
imul
int
sbb
rorb
inc
test
ljmp
sub
or
cld
pop
sbb
imul
test
mov
or
lahf
and
xlat
mov
jmp
loop
inc
jg
pushf
push
adc
push
loope
or
stc
jnp
pop
into
pop
int
push
aaa
out
pusha
mov
js
xchg
decl
add
xchg
mov
mov
sti
arpl
xlat
push
aas
dec
sbb
shll
cli
xchg
icebp
jo
jmp
push
fwait
rcrb
mov
jmp
cmc
out
push
sbb
xchg
mov
and
mov
popa
into
int3
int
shlb
aam
out
mov
xchg
ret
aaa
cld
or
mov
inc
dec
movb
mov
stos
push
sbb
jne
out
push
in
sbb
call
in
jbe
xchg
sbb
mov
int
fabs
push
gs
push
add
jge
lods
xchg
dec
xchg
daa
lea
sub
inc
movsl
sbb
loopne
call
pop
mov
scas
fcoms
cmp
and
xor
cltd
popl
adc
xchg
adc
pop
cwtl
mov
adc
pop
aaa
mov
cmpsb
lods
inc
mov
aam
out
mov
test
