out
out
call
in
sub
push
push
mov
push
push
call
add
adc
outsl
mov
push
add
push
or
sbb
fildl
xor
pop
lea
rep
sbb
sti
jmp
push
movl
pop
pop
jg
data16
push
push
mov
or
push
cmp
mov
mov
fistpl
pushw
fmull
lea
push
add
add
jne
adc
setne
sti
fildl
cmpb
je
sub
xor
jbe
adc
lock
insl
fdivrp
fdivs
sti
add
jae
or
sbb
jmp
fbstp
aaa
rorl
sbb
jmp
cmp
fcoml
fwait
insb
inc
adc
mov
iret
mov
pop
leave
ret
sub
push
push
push
and
in
mov
mov
fs
xor
inc
and
push
insb
in
fcmovne
test
add
cmp
add
pusha
mov
push
les
push
xor
push
push
xchg
or
shll
xlat
sbb
push
jbe
arpl
movups
adc
out
pop
jmp
je
pop
cmp
push
mov
push
adc
xor
lds
dec
out
push
adc
or
adc
lods
dec
js
fld
sbb
cmp
or
and
aad
sub
inc
jg
popf
and
push
sub
std
incl
les
sub
mov
push
xor
adc
and
xchg
sbb
push
mov
add
xor
mov
sub
add
sub
mov
push
add
jnp
pop
push
xor
dec
inc
mov
sub
ret
add
push
sub
add
add
mov
out
enter
mov
incl
mov
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
pushl
and
outsb
and
inc
dec
push
and
fs
ja
negb
imul
fldcw
pop
call
xor
dec
inc
sti
fidivrs
loop
jecxz
sub
push
imul
mov
dec
add
pop
out
imul
mov
adc
popf
and
add
or
add
pop
loopne
out
pusha
push
jp
jo
pop
xchg
mov
add
add
cmp
push
or
pop
into
jbe
add
cwtl
inc
dec
add
add
push
adc
loopne
or
mov
je
js
pusha
nop
in
fwait
mov
les
cs
je
mov
pop
fnstenv
decl
inc
jb
sub
in
or
cmp
daa
pop
and
or
mov
push
mov
test
push
mov
loopne
icebp
filds
mov
add
xor
call
ret
jg
scas
adc
push
xor
in
inc
lea
xor
stos
cmp
stos
lcall
xchg
pop
or
fisttps
std
jmp
or
pushl
sbb
and
xor
lea
decl
jne
das
mov
pushl
or
push
push
dec
pop
xor
cmp
lret
pop
mov
inc
cld
pop
xor
in
incl
hlt
lock
push
push
push
xor
push
dec
push
push
push
add
xorl
outsl
add
and
clc
cmpl
pop
xor
jmp
incl
pop
push
push
push
and
out
fisubrl
push
jno
push
push
xor
jbe
mov
sbb
mov
push
jo
xlat
push
jns
inc
fildl
cld
cs
call
add
mov
paddb
pushl
and
cmp
jne
or
pop
add
cmp
jne
push
push
push
jg
and
or
das
jne
cmpl
cmp
jg
mov
iret
add
lea
push
push
outsl
lods
jne
lea
adc
jmp
sbb
xchg
xchg
out
xlat
mov
incl
dec
add
pop
mov
pop
pop
pop
leave
dec
and
push
push
mov
push
sarb
fidivrl
jns
push
lar
ss
out
in
ljmp
jne
fs
add
pop
daa
clc
push
mov
push
push
push
and
sub
clc
ds
incl
clc
andb
aas
push
mov
jg
push
lock
hlt
pop
xchg
sub
mov
rorb
mov
or
mov
inc
pushl
sub
mov
ds
mov
jae
pop
sub
pop
lock
clc
call
dec
add
jl
push
push
test
loope
popa
or
push
mov
or
insb
in
jne
jmp
and
push
insb
cmp
mov
dec
inc
and
daa
push
aaa
call
rcll
xor
je
cmp
je
cmp
add
pop
fisttpl
adc
xlat
mov
cmp
sarb
jg
inc
pop
jne
xlat
clc
mov
add
ljmp
cld
inc
cmp
jne
inc
adc
je
in
sbb
ret
or
cmp
incl
nop
mov
adc
cmpsl
pop
lcall
xchg
add
pop
pop
ret
sub
sub
xchg
xor
pushl
mov
insb
sti
inc
push
push
ret
cmp
jo
call
fildll
cld
out
jb
pushf
jo
fdivrp
int
leave
adc
sarb
call
jge
xlat
fmuls
jle
dec
mov
stos
sbb
aam
lods
fsts
jle
pushl
mov
inc
pop
ror
into
fdivr
decb
lock
adc
lcall
inc
rol
fwait
insl
pop
and
mov
sbb
add
movsl
hlt
std
sub
fwait
mov
gs
pcmpgtd
in
cmp
jbe
mov
idiv
cmp
cmp
testb
jno
dec
push
mov
decl
sub
jbe
addr16
pushl
pushaw
daa
mov
cmpl
mov
jecxz
test
mov
mov
xchg
emms
add
or
sar
lcall
test
pop
mov
jb
dec
imul
xor
ret
scas
popf
gs
xor
mov
outsl
jmp
insl
gs
or
andl
std
pop
ja
lea
mov
mov
dec
or
call
aas
sbb
or
clc
pop
pop
lea
lea
insl
sbb
mov
cmp
jg
cmovg
pop
pop
jmp
sbb
add
data16
ret
fistpl
insl
or
jp
jmp
ss
adc
push
and
popf
jne
aaa
cwtl
mov
loop
pop
pop
stos
mov
imul
pop
pop
dec
outsb
andl
das
pop
lea
mov
int3
xchg
and
and
outsl
fnstsw
movsb
sub
add
push
loope
mov
incl
cld
sub
inc
xchg
popa
mov
add
adc
pusha
sti
sbb
call
insl
decl
aam
movsl
dec
sbb
xor
frndint
fwait
mov
incl
xchg
pop
clc
test
pop
and
pop
sti
pop
add
add
add
xor
filds
movsl
jmp
outsl
ds
loop
add
mov
lea
aam
dec
or
lcall
xor
mov
daa
pop
sub
outsl
in
push
shll
shl
or
dec
mov
or
outsl
fwait
sti
call
push
pop
sbb
or
shl
jne
call
or
xchg
add
add
jnp
neg
fdivrp
jo
lret
out
js
mov
mov
popa
hlt
mov
dec
decl
ljmp
sti
aas
add
xor
xchg
rcrb
in
shr
shl
or
scas
insl
sti
pushl
adc
fistpl
jmp
fstp
or
lret
and
push
mov
testb
mov
popf
pop
jecxz
test
or
outsb
aas
jg
cld
dec
mov
mov
mov
and
pop
imul
das
fxch
and
dec
ss
into
insl
or
std
pushl
icebp
adc
lret
jns
push
adc
inc
jmp
jne
popa
jne
jne
pushf
mov
mov
and
jl
out
dec
cltd
and
and
or
insb
xor
xchg
decl
int
iret
hlt
xchg
xlat
and
dec
in
sarl
nop
sbb
cli
lcall
cltd
sti
xchg
insl
icebp
sub
hlt
ja
add
leave
js
cmp
xchg
sbb
inc
in
fiadds
mov
and
xchg
call
icebp
pop
xchg
push
lock
pop
in
sub
adc
cmpb
in
pushf
jl
aad
xorb
rorl
js
je
test
insb
add
adc
pop
leave
fs
add
add
jbe
pop
call
jb
push
add
add
dec
or
inc
imul
leave
cmp
jg
fisttpl
push
or
add
sbb
push
es
test
ljmp
sub
and
aaa
in
leave
xchg
loopne
adc
inc
jae
les
xor
ljmp
lods
cwtl
xor
xor
add
jmp
xorl
add
adc
out
mov
decl
jg
movsl
not
out
leave
fimuls
outsl
shr
mov
xor
fcomip
sub
ljmp
shll
iret
jmp
or
jno
push
fcompl
in
ljmp
punpcklbw
mov
pop
bound
push
fcmovnb
call
add
lds
adc
jg
call
sbb
pop
mov
sub
ret
xor
sub
shll
pop
lcall
imul
pop
add
add
mov
or
lcall
inc
add
xor
fdivr
add
jmp
aad
pop
sub
mov
sbb
and
arpl
imul
xchg
cs
jae
pop
push
push
inc
dec
pop
inc
sbb
outsb
inc
mov
inc
outsl
add
sub
pop
jg
xorb
imul
push
inc
push
inc
pop
dec
negl
jae
push
call
jae
push
jmp
int
das
imul
fs
jbe
aaa
mov
ss
fistpl
jns
adc
sbb
xchg
cli
incl
repnz
sub
jae
cmp
std
mov
cmpsw
adc
adc
mov
outsb
insb
adc
adc
jecxz
fwait
or
adcb
addr16
mov
add
gs
imul
inc
fldln2
fstp
gs
push
mov
insb
push
jb
outsb
inc
or
je
jns
js
mov
lret
mulb
jae
dec
jo
leave
fisubl
fcoms
inc
adc
fisttpl
inc
and
inc
daa
push
push
neg
daa
xlat
inc
imul
jns
lods
fistl
insl
jo
jge
iret
push
dec
or
dec
popa
fcos
adc
in
sti
dec
popa
inc
sbb
imul
jbe
iret
pop
or
dec
ja
fstpt
add
call
cmp
in
pop
loope
inc
stos
jae
dec
repnz
fbstp
arpl
std
je
inc
gs
incl
and
push
orb
fnstsw
dec
jo
dec
gs
or
jne
loop
pushl
sub
sub
cs
mov
sub
inc
das
lcall
or
sarb
cli
or
cld
mov
and
sub
test
pop
mov
sbb
or
or
sub
add
cld
sti
decl
push
pop
adc
adc
or
pop
or
sub
or
adc
adc
inc
std
jg
or
cmp
sub
pop
popa
sbb
or
pop
and
es
add
test
idiv
mov
ljmp
and
sahf
jno
add
push
dec
inc
addr16
mov
dec
cld
or
repz
mov
loopne
call
divb
add
fnstenv
pop
mov
adc
mov
and
inc
js
cmp
add
mov
cmp
idiv
pop
sahf
js
mov
jmp
and
pusha
mov
pop
call
pop
popa
and
xor
es
jmp
mov
inc
rorb
and
movsb
push
push
loopne
in
aaa
inc
adc
xor
cmpsb
push
adc
in
ljmp
push
mov
jne
fidivrl
lea
int
jmp
nop
add
outsl
std
sub
inc
add
xchg
mov
sub
adc
jb
mov
sub
adc
rorb
inc
sub
jae
xor
sub
jb
inc
or
mov
fdivrs
mov
das
leave
or
test
or
inc
sbb
push
jno
mov
repz
mov
cmp
jbe
mov
inc
xchg
sbb
xor
jne
jmp
cmpl
mov
in
jmp
iret
jmp
lods
sti
pop
mov
mov
sub
cmp
ja
andb
push
pushl
mov
mov
data16
or
rclb
les
jg
jmp
sti
jmp
add
cmp
cld
push
xor
or
pusha
stos
clc
shlb
inc
xor
add
jmp
sbb
cmp
xchg
dec
or
fmull
scas
push
adc
cs
mov
add
popf
imul
loope
xor
ret
mov
sbb
jl
imul
out
ja
add
mov
jo
jo
jmp
and
jl
pop
sub
adc
add
jmp
xor
mov
push
adcb
imul
dec
in
int
sbb
mov
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
or
jbe
pop
cmp
dec
outsl
push
dec
imul
mov
push
or
fs
push
add
movd
mov
lret
xchg
les
mov
xchg
sub
xlat
add
mov
add
popa
daa
xor
pop
cmp
ljmp
or
mov
add
or
test
outsl
pop
repz
addl
pop
jns
lcall
jae
ljmp
jg
in
pushw
inc
xchg
les
xorl
inc
and
xchg
push
mov
jmp
roll
add
xor
xor
cmp
cmp
or
fbstp
in
lock
push
fnsetpm(287
ret
jg
pop
lds
incb
arpl
cs
movsb
lds
mov
mov
pop
mov
xchg
in
inc
push
push
pop
pop
inc
xchg
mov
cltd
ljmp
rep
popw
imul
fsubl
mov
xchg
jne
mov
lcall
lahf
dec
loopne
in
xor
sbb
jnp
negb
ljmp
in
mov
or
aam
xor
loope
jmp
xorb
fnstcw
jmp
lahf
or
sbb
decl
std
call
in
sbb
lret
jns
mov
or
push
mov
clc
sarl
mov
or
jo
sbb
jge
lea
in
sarl
mov
mov
ss
or
push
mov
pop
stos
or
dec
in
mov
mov
fldt
cmp
daa
inc
in
inc
fs
mov
ss
ljmp
push
sti
out
or
test
push
cli
mov
add
push
ficoms
ljmp
mov
pop
insl
into
subl
adc
mov
les
dec
adc
ljmp
dec
pop
ss
lods
mov
clc
jmp
movsb
xor
add
decl
das
lds
inc
inc
lcall
int3
dec
repnz
or
pop
loope
cmc
arpl
jb
int3
test
ljmp
andps
fildll
xchg
pop
clc
mov
push
fiaddl
xchg
inc
nop
pop
mov
insl
popf
flds
adc
sbb
xchg
daa
pushf
xchg
ljmp
pushl
mov
repz
daa
jns
mov
loope
mov
out
pop
std
incl
sub
stos
notl
sbb
jmp
imul
jmp
xor
inc
fists
adc
std
sub
cmc
in
movsl
faddl
pop
jge
jb
jle
inc
pop
addr16
mov
hlt
inc
fwait
es
idiv
incl
in
inc
stos
clc
dec
and
mov
mov
cli
scas
add
mov
or
pushl
mov
aam
sub
dec
xlat
jno
sub
push
inc
pop
jo
call
incl
cli
xchg
notb
dec
test
cmp
fldl
out
mov
mov
mov
jle
mov
dec
mov
push
adc
push
jge
adc
es
ror
mov
pop
jb
adc
mov
jae
pop
jno
incb
cmc
decl
add
and
lahf
pop
sub
xchg
pushl
test
lret
je
leave
pop
jp
gs
pop
xor
dec
subl
clc
aaa
cli
ljmp
push
int3
call
out
arpl
pushl
icebp
push
dec
lock
ficoms
pop
add
movsb
push
lret
and
pushl
or
jbe
ffreep
jne
sbb
lds
repz
test
mov
outsl
std
dec
adc
pop
adc
and
adc
and
std
lcall
inc
xchg
adc
fmull
and
arpl
pop
mov
out
lcall
lcall
cltd
jl
xchg
stc
mov
adc
dec
loopne
push
incl
out
or
add
add
mov
icebp
in
jmp
dec
mov
jecxz
xchg
ret
ds
or
and
popa
lcall
mov
inc
mov
xchg
push
xchg
add
xor
xchg
mov
sbb
in
stos
xchg
jae
je
sbb
inc
push
stos
imul
ljmp
sbb
or
int3
sub
sub
mov
mov
call
sti
shrb
or
add
ret
movsb
fsts
enter
call
out
adc
jnp
inc
arpl
insl
mov
in
xchg
sbb
scas
add
xor
xorl
cld
loop
hlt
xchg
dec
mov
mov
jmp
sub
cmp
push
jl
mov
mov
imul
ffree
pusha
orl
cmp
ljmp
cld
pop
jl
lcall
dec
cmp
rcrb
mov
adc
pushf
mov
and
xchg
mov
inc
dec
cs
dec
sub
lret
cmp
test
decl
icebp
add
xor
cmp
dec
or
mov
in
jg
rorl
das
cld
ja
sbb
data16
lods
push
enter
loope
gs
push
mov
inc
movsb
fidivl
scas
dec
jl
es
ja
pushl
je
dec
xorl
stos
lcall
pop
mov
outsb
pop
sbb
aas
push
lahf
enter
or
mov
adc
jmp
leave
add
sar
icebp
std
or
pop
aad
enter
mov
cld
inc
loopne
fwait
movsl
mov
imul
out
sub
push
add
ljmp
mov
aam
add
mov
mov
mov
out
xor
dec
je
jp
jle
adc
sbb
mov
push
popa
xchg
hlt
jl
loopne
lods
mov
cwtl
inc
push
es
push
push
push
xchg
xchg
xchg
jge
lcall
cli
jge
or
mov
pop
ja
inc
push
mov
ljmp
sub
lret
dec
and
xchg
aam
add
je
or
dec
in
dec
jmp
std
incl
cmpsl
scas
sub
jecxz
adc
jns
inc
inc
fisttpl
pushl
mov
aas
mov
adc
lea
ljmp
jns
call
or
jecxz
in
jmp
nop
inc
add
lcall
dec
mov
and
jmp
sub
mov
stos
pop
jp
fnstsw
sarb
lret
rcrl
rsqrtps
adc
hlt
mov
jnp
mov
into
sbb
stos
pop
dec
sbb
mov
test
cld
lock
sub
mov
in
add
sub
out
xchg
xor
mov
scas
mov
jnp
push
cmp
mov
decl
cmp
stos
xchg
rcrl
je
dec
pop
fnstenv
push
je
std
jg
decl
daa
iret
add
sub
inc
fldcw
sub
xlat
add
in
adc
out
xchg
mov
dec
inc
lds
pop
outsl
insb
add
xor
sbb
jg
outsl
mov
cmpsl
sar
xchg
cmp
addr16
jmp
and
inc
lcall
imul
xor
push
pop
cmpsl
outsl
xor
jg
or
add
ds
gs
mov
xchg
out
mov
mov
pop
xchg
mul
mov
jmp
pop
loopne
pushl
xor
push
arpl
insb
shr
lcall
movsl
dec
add
das
aam
lods
add
mov
xor
or
in
mov
icebp
pop
inc
jle
jae
data16
lods
arpl
js
js
adcb
cmpsb
rcrb
jmp
or
add
out
test
stos
adc
sub
int3
lock
repz
test
dec
pushl
inc
in
push
xlat
std
dec
dec
nop
sar
clc
movsb
stos
fcmove
fcompl
mov
cs
fmulp
pushl
sbb
add
and
or
ds
popf
add
mov
lcall
mov
in
pop
pop
cmpsl
lock
inc
inc
lea
cmc
test
bnd
push
rcrb
decl
insl
pop
adc
insl
add
lods
notl
xorb
jmp
and
inc
mov
xchg
cmp
pop
hlt
cmp
rol
cmp
mov
fildl
icebp
incl
stc
clc
int3
sbb
adc
add
cmpsb
imul
loope
or
mov
les
popa
std
lcall
ljmp
les
sub
sub
clc
xlat
mov
int3
xchg
cli
pop
ret
inc
sbb
sub
mov
insb
cwtl
jecxz
rorl
dec
test
sub
dec
xchg
pop
in
pop
jg
dec
dec
out
sub
mov
das
insl
and
and
outsl
mov
popa
popa
sahf
mov
push
xor
push
ret
and
inc
fisttpll
mov
push
imul
idivl
and
in
mov
adc
fnstenv
push
mov
cmpsl
jbe
std
incl
pushl
xor
out
into
xor
cli
loop
mov
fistl
add
jmp
out
je
and
add
inc
movsl
pop
mov
sahf
sbb
sub
and
imul
aas
mov
mov
outsl
push
adc
cmc
jns
out
push
outsb
incl
pushl
testl
ds
add
incl
cmp
jecxz
das
and
decb
clc
mov
cli
fbstp
xor
int
xchg
xchg
dec
push
or
and
cmp
mov
fmulp
leave
and
inc
xchg
jns
sub
dec
aas
cli
test
orl
or
sarb
mov
stos
cmp
ljmp
shlb
jp
fistl
scas
iret
test
call
mov
in
daa
mov
cmpsb
or
idivb
inc
xchg
jb
inc
roll
pop
incl
jb
xor
mov
iret
xchg
adcl
xchg
cs
and
decl
in
cmpsb
js
test
jmp
fisubs
push
mov
in
clc
lock
decl
fidivrs
fisubrs
mov
cmc
pop
sub
mov
std
cmpsl
and
das
or
daa
cmp
in
addr16
das
dec
or
jb
pushl
cmp
pop
cmp
scas
pop
cmp
sbb
cld
jmp
push
and
addr16
mov
push
pop
jge
adc
fistps
cmc
or
jnp
cmp
fs
mov
fistpl
cmp
or
ljmp
shll
jns
mov
test
js
pop
xor
cmpsl
jne
scas
ljmp
pusha
test
cmp
mov
out
sbb
in
push
outsb
sarl
call
dec
inc
dec
daa
cmc
dec
pop
push
dec
test
jo
mov
pusha
or
mov
mov
incl
jl
fdivrs
push
nop
mov
lcall
or
pop
mov
fwait
pop
fildl
cmpsl
or
inc
call
dec
add
mov
sub
idiv
call
sub
and
lret
fdivl
add
mov
mov
pop
pop
call
incl
and
cli
mov
shll
jo
ljmp
dec
push
dec
and
and
pop
call
dec
or
sub
inc
add
mov
aas
out
popf
push
xchg
testb
mov
shlb
or
mov
pusha
xlat
push
xchg
shl
sub
sbb
dec
xchg
bound
pushl
cmp
scas
sbb
lock
mov
xor
inc
pusha
cmc
mov
stc
loop
cmp
outsl
mov
ja
outsb
jae
popa
xor
popaw
xchg
and
inc
cld
je
and
push
shrb
xor
and
mov
jb
jbe
pop
sbb
inc
mov
xor
outsl
addr16
xchg
mov
and
addb
inc
sbb
mov
loope
adc
daa
pusha
add
loopne
push
sti
inc
insb
popa
jae
adc
jb
adc
adc
int
lods
pop
sub
lods
adc
outsl
jae
int
gs
ss
loopne
dec
inc
or
gs
imul
push
push
popa
inc
inc
dec
push
adc
and
push
arpl
inc
bound
xchg
je
sub
test
dec
outsl
jbe
fsubrs
cwtl
sbb
adc
adc
sbb
jge
into
es
xor
xor
mov
cld
mov
dec
in
jae
dec
jae
mov
inc
mov
bound
popa
in
ss
or
in
xchg
fnstsw
jbe
dec
popa
jo
imul
pop
lock
popa
insb
out
and
push
je
fldt
pop
or
stos
fs
insb
addr16
lret
adc
outsl
fstl
lahf
jne
inc
xchg
xchg
push
popa
orb
xchg
leave
ucomiss
inc
vmcall
in
adc
cpuid
or
xor
adc
push
dec
cmp
or
enter
test
cmp
adc
lret
subl
add
sbb
pusha
jecxz
daa
and
mov
add
inc
mov
lret
inc
xor
xor
daa
clc
mov
sbb
and
aam
and
jmp
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
