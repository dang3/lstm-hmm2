mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
pop
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
adc
popa
adc
rcrl
mov
pop
push
fsin
adc
dec
aam
pop
and
sbb
mov
or
out
jle
pop
lods
lock
rclb
cs
add
sarl
mov
out
fisttpl
call
shrb
xor
add
ss
sbb
xchg
mov
pop
adc
loop
in
mov
xchg
pop
mov
sbb
outsb
jmp
sub
xchg
jb
cs
subb
sti
or
dec
mov
repnz
es
pop
lahf
sbb
inc
mov
call
cli
out
jnp
jecxz
add
add
loope
ficomps
scas
add
dec
xchg
jb
ds
or
add
roll
push
inc
and
pop
pop
and
bound
sub
and
out
pop
jb
push
push
inc
movsl
xor
std
add
std
cld
jp
jp
sbb
jge
cs
or
addl
cmp
xchg
mov
xchg
mov
or
mov
pop
in
clc
jbe
sbb
mov
ss
lret
lea
pop
pminsw
sbb
lret
mov
mov
jg
clc
jns
pop
or
cltd
cmc
imul
xchg
mov
cld
mov
in
fmulp
outsl
push
xor
or
lock
xchg
sub
push
add
stos
mov
adc
xor
cmp
clc
stc
pop
sbb
pop
push
rorb
stc
cmp
sub
mov
sahf
sub
xchg
dec
jp
add
test
fisttps
jp
adc
adc
add
std
cli
or
or
sbb
repnz
shlb
mov
mov
sub
jne
jae
test
fldl2e
fimull
dec
or
and
das
int
ja
inc
or
jno
jbe
adcb
dec
cld
cli
mov
mov
inc
sub
cli
mov
arpl
fsubs
inc
xchg
imulb
dec
pop
jns
xor
inc
lcall
out
stos
fmull
xor
lods
mov
mov
xor
jne
and
push
scas
dec
outsb
mov
fsts
adc
test
push
popf
test
push
nop
sbb
mov
insb
pusha
jnp
xor
out
and
cltd
aam
and
pop
sub
outsl
push
pop
pop
aad
imul
adc
std
lret
js
rcrl
inc
pusha
pop
fcmovb
adc
cmp
mov
pushf
mov
insl
faddp
mov
adc
sbb
imul
divl
subb
inc
bound
mov
lock
mov
xchg
sti
xchg
ffree
aam
fisttps
mov
sbb
jno
cmovo
hlt
or
and
mov
cmpsb
leave
popa
mov
mov
sbb
push
rclb
pop
pop
popa
or
xchg
pop
push
cmpb
lret
pop
mov
popf
xor
out
jne
sub
inc
movsl
scas
jl
faddl
jo
add
int3
in
push
ret
push
movsl
xchg
mov
xchg
push
ljmp
sbb
int
inc
sbb
jg
scas
push
imull
leave
cmp
jp
test
iret
insl
adc
push
std
adc
add
mov
out
xor
mov
pop
lods
scas
insb
jne
add
cmc
dec
xchg
mov
pop
pop
mov
push
test
loopne
xchg
popf
iret
nop
addr16
and
lods
aam
iret
mov
sub
sbbb
cmp
push
sbbl
fiadds
shll
leave
shl
das
sbb
stc
fcmovu
pop
fwait
or
sub
push
push
cwtl
dec
jl
dec
adc
dec
mov
lock
cli
insb
in
push
push
rcll
inc
mov
cmp
fsubs
and
inc
mov
sub
push
mov
xchg
pushf
out
cld
ret
test
cwtl
sub
push
pop
dec
push
mov
jns
push
out
scas
mov
sahf
sbbl
jne
xor
mov
stos
mov
std
iret
ret
call
xor
shll
scas
adc
jae
lods
cmpl
adc
mov
ljmp
mov
call
movb
and
mov
xor
jne
arpl
in
pop
iret
cmpsb
fdivrs
std
or
scas
add
or
dec
and
fsubl
dec
clc
pop
dec
mov
sbb
or
xor
test
addb
xor
push
cmc
sub
xor
sub
cmc
dec
sub
sbb
sbb
mul
or
push
cli
cld
pop
cltd
ds
jns
lods
pusha
mov
scas
and
xchg
ret
fwait
mov
push
sbb
jg
div
push
pop
bound
lea
or
mov
xchg
jle
cwtl
push
test
mov
loopne
xchg
lock
mov
cmpl
or
cmpb
sbb
xchg
mov
andb
imul
jns
mov
enter
xchg
pushf
add
push
push
sbb
out
push
pop
pop
mov
fists
sbb
inc
jae
out
scas
sub
jne
or
adc
int
lret
jle
lock
in
lret
cmp
in
decl
rcrb
push
push
mov
fcom
test
jp
push
and
xchg
in
xor
jae
jo
push
fidivl
ficompl
mov
pop
pop
scas
fnstsw
pop
mov
cltd
into
dec
mov
xchg
fcmovnb
data16
jno
jmp
pop
mov
xchg
add
mov
adc
pop
popa
addr16
inc
gs
es
nop
iret
xchg
sbb
cmp
dec
jmp
sub
sbb
ret
jno
fists
xchg
or
loopne
push
add
jno
sub
jl
adc
push
mov
andl
add
ja
pop
stos
xorb
leave
dec
sbb
sub
xchg
pop
mov
mov
inc
pop
pop
push
rcrb
push
cmp
dec
push
xor
pop
hlt
dec
popa
imul
cmp
movsl
movsb
sbb
or
push
mov
adc
jno
push
outsl
popf
mov
jo
cmp
mov
and
sub
cmpsb
inc
xor
pop
fwait
cmp
fistpl
ret
jg
sbb
cmp
mov
mov
ret
push
iret
xchg
into
subl
fisubl
push
lods
loope
mov
push
test
iret
jp
testb
and
in
ss
fadds
inc
or
dec
pop
sbb
add
mov
dec
mov
and
push
pop
sub
les
ljmp
data16
rcr
in
xor
mov
out
cltd
es
mov
mov
gs
in
mov
push
fldcw
and
fisubrs
pop
ret
push
aas
xor
std
mov
sar
jle
loope
pop
sarl
sub
cmp
fstps
add
out
popa
or
mov
out
mov
xchg
sub
sti
stos
push
pop
xchg
popa
or
cmp
xor
test
in
adc
push
jmp
jae
icebp
sbb
sbb
mov
xchg
inc
inc
sbb
adc
cvttps2pi
rolb
push
or
lea
gs
sahf
cmp
mov
cmp
pop
dec
test
sbb
xor
push
xor
out
fcoms
adc
jg
xchg
out
mov
not
cmpb
mov
stos
outsb
pop
and
cmpsl
lods
fidivl
ds
mov
mov
in
adc
filds
mov
lods
imul
lods
insl
xchg
arpl
mov
push
mov
or
fxch
movb
jo
mov
inc
sbb
and
and
mov
jnp
cmp
cltd
fwait
lret
imul
adc
bound
mov
repnz
jae
dec
pop
xlat
cs
mov
out
push
push
roll
mov
inc
jl
imul
jge
pushf
gs
cmpl
orl
filds
ljmp
or
mov
mov
push
arpl
in
jl
mov
jge
push
xchg
movsb
into
lahf
fdivr
sbbb
cltd
inc
and
loope
or
mov
jmp
jns
je
pop
add
mov
mov
addr16
cmpl
or
fsubl
xchg
leave
pop
or
inc
scas
stos
add
lret
in
pop
mov
cli
adc
xor
jle
xor
std
cmpl
mov
mov
test
xor
mov
cli
daa
lahf
cltd
decl
xchg
xchg
xor
into
and
shl
test
xchg
ljmp
fmull
or
cmc
and
mov
or
stos
loope
mov
sub
xchg
adc
dec
and
ror
pushf
das
fst
jl
stos
mov
fstps
mov
jbe
push
xchg
push
cmpsb
rolb
dec
jecxz
mov
iret
jo
bound
push
mov
jmp
push
lea
loope
nop
out
notl
and
addb
mov
adc
mov
xchg
sbb
push
sbb
aad
mov
fwait
mov
mov
fs
addr16
aaa
push
cmp
xchg
add
addb
dec
jmp
cwtl
fmull
rcrb
and
iret
movsl
and
pushf
mov
jecxz
aas
mov
cmp
stc
shll
mov
outsl
and
inc
or
mov
sbbb
adc
pop
xor
lods
fucom
mov
cld
cmp
jbe
sbb
xchg
imul
hlt
pop
repnz
or
jg
lds
mov
jle
test
sbbb
xor
mov
popa
adc
aam
ret
fsubrp
lretw
mul
pop
pop
mov
sub
push
or
mov
push
ja
sbb
enter
xor
pop
cwtl
aas
stos
test
dec
fnsave
fsubl
shrb
inc
xchg
sub
movsl
fisttpll
dec
cmp
pop
lods
or
fnstenv
pop
push
pop
roll
out
sti
pop
jae
and
push
dec
das
sar
das
mov
fdivrs
xchg
stos
mov
lret
popl
fsts
sbb
into
push
jne
mov
ds
arpl
js
sbb
out
pop
pop
fmull
push
cmp
dec
es
lcall
test
fsubs
pop
scas
int
mov
mov
or
add
aad
push
sahf
ret
xchg
nop
outsb
in
pop
sbbb
cmp
es
mov
outsl
dec
push
xchg
repnz
rcrl
jo
jmp
push
mov
cltd
mov
mov
dec
and
rolb
and
push
xor
lods
out
cmp
stc
inc
in
push
call
rep
rcrb
in
cmc
lcall
mov
sbb
pop
js
fisttpll
outsl
push
mov
mov
pop
jb
loopne
xlat
and
lret
adc
pop
loopne
insb
lret
scas
mov
pop
mov
int
jbe
enter
ja
mov
push
rolb
out
cmp
mov
mov
pop
ja
stos
in
lock
dec
fldl
call
js
cmpsb
push
call
push
lret
ret
fidivl
test
int
paddw
jae
cmp
jge
or
dec
dec
out
mov
sub
or
mov
and
mov
aad
lea
leave
data16
sbb
je
xor
pop
cmc
lahf
mov
das
inc
jbe
sbb
hlt
loope
and
or
cld
mov
clc
mov
jno
add
mov
mov
or
cmp
jnp
in
mov
pop
adc
jb
inc
dec
andb
jmp
sub
cmc
xchg
mov
or
or
mov
jb
loope
cmp
clc
mov
dec
ja
push
aam
mov
add
push
mov
fstps
sbb
bound
shlb
jbe
sub
sbb
xchg
xchg
mov
daa
mov
pop
xchg
add
stc
arpl
test
rorl
or
clc
das
mov
fs
js
mov
jmp
in
rolb
mov
push
stos
sub
iret
mov
lods
pop
xor
push
iret
dec
ficompl
into
xor
mov
aam
push
inc
jecxz
pop
pop
mov
lcall
pop
pop
add
cmp
sub
ret
mov
pop
mov
jno
push
roll
bound
push
jae
ds
xchg
pushf
lods
stc
gs
jp
pushf
rcrl
inc
popa
fnsave
fsubrl
mov
cmc
adc
aam
mov
cli
sub
and
cmp
imull
push
mov
pushf
popa
scas
jmp
and
push
sub
fistl
sub
jp
add
mov
fwait
xor
inc
pushw
dec
mov
lods
lahf
mov
push
mov
push
aam
inc
sbb
test
lcall
cs
jmp
fwait
pushf
out
test
mov
pop
dec
push
mov
add
push
call
fwait
iret
fisttps
int
lcall
cmp
test
add
shrb
sbb
inc
push
nop
dec
xchg
dec
mov
pop
insb
mov
add
push
pop
arpl
js
sbb
push
in
mov
mov
mov
js
mov
push
mov
jecxz
xor
aaa
scas
leave
clc
outsl
jb
mov
jbe
lea
ja
in
and
out
and
mov
outsl
mov
out
xchg
pop
xorb
nop
and
or
sub
mov
cmp
dec
sahf
pushf
xchg
pop
adc
popf
dec
mov
daa
and
into
inc
and
lock
mov
sbb
mov
cmp
and
lods
das
in
sbb
rorl
mov
js
jb
loope
xchg
mov
jnp
cmp
test
dec
pop
jg
into
faddl
mov
mov
cmp
es
push
aad
jne
jo
or
adc
mov
in
loope
push
es
out
scas
push
sub
std
sbb
or
sbb
nop
popl
mov
data16
sub
push
cmp
les
cmp
mov
sub
xacquire
subb
or
hlt
ret
int
mov
xor
pusha
les
sub
mov
jp
jl
stc
and
push
pop
mov
add
ret
jbe
aad
and
popa
negl
shld
mov
inc
sub
cmc
push
pop
mov
xor
dec
and
movsb
cmpsb
or
imul
mov
ret
xchg
es
push
clc
push
xor
lret
lahf
cmp
mov
cmc
iret
popf
int3
out
xor
cmp
dec
lock
cmpsl
jp
ljmp
cmpsl
jno
pop
bound
pop
lcall
mov
sub
inc
sub
lret
jg
int3
dec
jg
sbb
pop
outsb
mov
cmpsb
test
and
int3
js
lret
mov
mov
nop
mov
jmp
cmpb
fistpl
ss
add
sbbl
adc
xchg
lea
sbb
clc
dec
jb
out
addb
adc
int
sbb
dec
pop
aaa
bnd
inc
clc
sbb
and
mov
mov
pop
jb
jle
mov
or
push
outsb
divb
es
sbb
aas
in
jb
ficompl
pop
sbb
insb
imul
bound
imull
xor
mov
or
mov
mov
xchg
fisttpll
shr
pushf
fsubr
insb
lods
imul
insb
loope
adc
flds
mov
hlt
jb
cmpsl
cli
out
push
sbb
mov
popa
ja
push
outsl
dec
mov
jae
pop
mov
dec
cmp
aaa
sub
ror
xor
cltd
outsl
sbb
xor
push
push
fsubr
add
push
and
cmp
out
ds
leave
lret
mov
add
outsl
cmpsl
mov
inc
mov
xor
fadds
xor
or
mov
pop
and
je
test
sahf
xchg
sub
mov
mov
dec
cmp
dec
lcall
cld
mov
cld
stc
mov
icebp
sub
xor
mov
fcomi
cmp
add
rorl
out
or
cld
cmpsb
insl
test
cmp
push
out
lods
cltd
outsl
pop
movb
pop
dec
aam
mov
aam
fwait
cmpl
cmp
push
lret
and
mov
inc
sbb
mov
fwait
lock
dec
pop
adc
fstpt
xor
lock
jge
xor
pop
outsb
jae
xchg
std
lahf
out
cs
push
add
cmp
jns
xlat
adc
js
in
shrl
push
mov
inc
fs
enter
xchg
push
push
in
inc
loopne
adc
jbe
xor
fcom
dec
mov
sub
andb
icebp
push
test
mov
jmp
pop
in
out
int
mov
mov
add
lds
add
movb
out
gs
jo
std
cmp
insb
xchg
and
imul
inc
ja
sahf
rclb
pop
sbb
cmp
sarb
sub
jge
sbb
dec
lock
shll
mov
xlat
cs
ror
das
cmpsb
pop
sub
mov
fwait
sub
pop
xor
dec
dec
push
xorl
add
ss
movsl
mov
repz
sub
jne
movsl
and
shlb
push
sbb
shlb
sub
iret
popa
and
mov
and
add
incl
push
or
cli
add
or
sbb
out
push
stos
stc
insl
std
sub
mov
sbb
dec
popf
xchg
shlb
cmp
js
mov
cmp
lods
jo
xchg
in
lret
hlt
stc
into
mov
dec
adc
and
and
push
cmc
add
xchg
test
int
xchg
push
fcoml
jnp
push
xor
mov
fsub
pop
cmp
push
lea
loopne
cwtl
ja
add
inc
out
sbb
or
pop
xchg
test
into
pop
clc
inc
popf
scas
ljmp
in
sahf
cwtl
push
push
xor
push
jbe
xor
mov
or
in
fadd
mov
in
pop
xlat
cld
push
das
jecxz
push
pop
in
bound
mov
jnp
adc
data16
popf
mov
pop
mov
cwtl
jo
add
mov
stos
movsw
adc
xchg
inc
add
xchg
in
repz
stos
in
hlt
mov
mov
sub
inc
in
call
mov
aaa
pop
pop
imul
subw
fwait
mov
mov
pop
sbb
inc
scas
pop
call
cmp
adc
test
test
sub
mov
mov
dec
add
bound
loop
adc
movsb
hlt
and
pop
addr16
dec
ret
sub
mov
dec
adc
fcomp
xlat
sar
mov
stos
mov
push
lret
add
jns
dec
mov
fldcw
or
sti
out
lods
or
jge
mov
or
and
adc
jb
mov
mov
sub
dec
pop
and
dec
lea
dec
rcrb
iret
jmp
jne
or
push
pop
mov
call
pop
and
adc
movsb
call
pop
bound
ret
fidivs
mov
mov
inc
jmp
jne
sbb
push
pusha
lret
sbbb
repz
lret
cmc
in
iret
popf
pop
xchg
leave
sub
and
jecxz
roll
test
ficoms
fildl
fcompl
mov
jae
or
lcall
iret
and
dec
test
call
lahf
ret
inc
push
in
sarb
in
push
and
xorb
shlb
adc
or
mov
fs
mov
jp
jnp
jnp
add
sub
mov
into
cmc
jo
inc
lea
sar
es
cmp
jne
test
or
mov
sub
je
or
cmp
gs
sub
inc
jge
pop
xor
std
jle
pop
insl
inc
ret
pop
xchg
aas
xor
aad
daa
push
fstp
push
push
inc
adc
mov
inc
add
fsubp
mov
stc
std
enter
adc
popf
mov
inc
cld
jnp
pop
mov
in
mov
lock
subl
stos
xchg
push
jecxz
jne
into
out
sbb
and
xchg
popa
sub
les
cmc
lret
push
lahf
mov
jno
dec
loopne
popf
mov
jns
in
orl
imulb
outsb
inc
mov
mov
xchg
shrb
mov
add
pop
test
or
loopne
in
mov
cld
push
bound
mov
in
scas
dec
adc
fidivs
lret
sub
cltd
ds
je
repz
cltd
sbbl
cli
xor
cmp
xchg
add
mov
cs
in
fmul
movsb
jge
add
jb
pop
aaa
stc
out
scas
mov
mov
mov
lods
jp
mov
aas
addr16
push
xchg
cwtl
scas
imul
pop
pop
xchg
inc
sub
pop
mov
lahf
out
or
test
testb
loope
fnstenv
push
ds
fsubr
test
test
dec
sbb
leave
dec
out
dec
mov
mov
jecxz
pusha
xor
test
or
dec
lea
adc
adc
xchg
fldcw
fcmove
xchg
push
sub
pop
mov
lods
push
shlb
push
jns
addr16
xchg
nop
bound
call
jnp
pop
test
pop
sbb
or
dec
incb
xchg
push
xchg
stc
sti
mov
fwait
lds
leave
out
cmp
cmpsl
out
in
sbb
scas
clc
lcall
inc
xchg
inc
xor
ss
adc
jmp
enter
mov
pop
fildll
jecxz
sub
les
jle
rep
jo
jmp
or
pop
mov
lods
je
push
mov
popf
xor
in
xchg
xchg
pop
fbstp
cmpsl
repnz
sbb
pop
mov
in
cli
icebp
jns
push
push
shll
and
sub
xchg
pop
inc
and
out
mov
rcll
pop
das
aam
xchg
ss
xchg
out
ret
popa
leave
or
leave
add
inc
adc
lods
frstor
xlat
mov
xor
xchg
fisttps
shlb
mov
dec
sarb
sbb
lods
jns
in
lods
cmp
ret
or
andl
jne
mov
enter
add
push
mov
scas
jno
into
testl
lret
cmp
mov
and
mov
outsb
mov
pushf
dec
nop
movsb
shll
sub
clc
push
mov
mov
inc
xchg
push
mov
mov
cmp
mov
loop
sbb
jne
inc
les
out
and
cmc
call
fmulp
add
adc
cmp
mov
fistps
incb
push
cmp
adc
mov
test
or
mov
mov
scas
cmp
insb
inc
mov
mov
push
pop
shld
mov
jbe
sahf
dec
andl
stos
in
push
shr
cli
pop
test
test
popa
clc
pop
dec
notl
jbe
out
in
rcll
xchg
sbb
jo
jmp
shl
fst
out
out
and
sbb
fs
test
addr16
aas
mov
enter
mov
outsb
sub
add
cs
mov
incl
pusha
test
jne
iret
call
xchg
and
xchg
dec
mov
jne
jno
dec
jne
cs
sar
mov
jns
sbb
push
cld
in
mov
cmp
jecxz
lds
movb
arpl
push
ljmp
sbb
pop
pop
xchg
andb
cmp
push
shll
test
pop
das
xchg
rclb
test
divb
and
adc
mov
mov
mov
adc
outsl
test
lcall
outsb
pop
hlt
hlt
div
call
fcomps
test
pop
push
xchg
int
pop
sti
loope
add
mov
test
pusha
lea
rolb
push
and
stc
movsl
aas
sbb
xor
mov
xor
mov
mov
out
push
insb
std
sub
loop
push
sub
and
cs
je
dec
nop
stos
jg
insb
loope
and
inc
xchg
jno
int3
test
insb
pop
into
mov
push
mov
mov
pop
push
shrl
lds
ljmp
add
cmp
add
das
jo
scas
adc
dec
lea
adc
sub
inc
add
and
ficoms
inc
lret
xchg
fistl
mov
repnz
jp
jnp
cmpsl
jae
push
adc
jbe
test
call
mov
or
lods
int
sahf
adc
loopne
ficoml
mov
test
clc
loopne
xor
cmp
adc
lret
adc
adc
sub
scas
rol
push
pop
xlat
push
inc
jecxz
mov
inc
int3
add
shrl
stos
mov
pop
mov
sbb
add
adc
stos
ja
push
ljmp
sbb
test
testl
pop
mov
add
xchg
popa
sbbb
push
call
mov
pop
mov
aas
jb
mov
fdivs
push
imul
sub
aad
outsl
dec
shll
lea
add
jb
lock
insb
or
xchg
test
xchg
cs
mov
jb
int3
push
call
inc
and
mov
fisttps
pop
aad
rcll
jb
or
mov
jge
pop
rep
cltd
jmp
movnti
jmp
inc
xlat
xchg
notl
in
into
loop
or
and
loopne
popl
inc
hlt
int3
or
rcr
fsubs
fiaddl
in
cmp
movsb
es
ficomps
and
rorl
nop
xchg
jns
xchg
out
test
movsb
or
mov
loop
push
fwait
add
movsl
pop
and
std
test
stc
orl
gs
jecxz
mov
lcall
std
bound
stos
aad
and
repz
cli
mov
inc
int3
movsl
push
xlat
push
mov
cmp
das
jns
jbe
mov
bound
xlat
push
rorb
popa
outsl
mov
push
and
loopne
stc
lcall
mov
sub
mov
sub
xchg
loop
mov
jge
sbb
sub
xor
mov
out
data16
cmp
mov
test
xchg
call
outsb
movsb
clc
or
jecxz
aad
cmp
pop
fmull
movsb
cmp
jmp
jp
inc
lds
sub
call
mov
in
cmpb
xor
insb
jmp
push
inc
cmp
mov
xchg
jne
cmp
in
push
imul
inc
cld
gs
in
jmp
decb
or
pop
mov
movsl
int
loopne
push
and
or
aam
sub
mov
insl
push
in
loope
mov
and
out
mov
jns
dec
push
fs
push
pop
and
sub
rcll
repz
add
cmp
mov
jns
inc
mov
lds
mov
adc
inc
insl
jb
mov
push
adc
bound
and
sbb
xor
pop
sub
mov
push
es
aad
push
test
cmp
push
cltd
sbb
ficoml
mov
cmpsl
adc
xchg
icebp
hlt
jo
adc
and
mov
daa
inc
xchg
dec
cmpsb
fs
cmpb
sub
mov
loopne
jo
pop
ds
leave
lods
xchg
sub
repnz
xchg
lcall
pop
sbb
fmuls
xor
cld
cmp
push
xlat
push
js
loope
scas
dec
fbld
mov
aam
mov
les
icebp
sbb
sbb
mov
mov
mov
std
leave
ss
or
into
and
aas
pushf
jmp
pop
icebp
cs
jp
loopne
sbb
out
push
stc
or
push
sub
lods
xchg
jb
cmp
dec
fwait
jmp
xchg
hlt
cmp
pop
mov
mov
jecxz
sbb
mov
addr16
subl
xchg
mov
fildll
jns
dec
xchg
adc
dec
adc
inc
js
imul
and
test
es
shl
push
subl
shlb
dec
push
or
icebp
lods
push
mov
sub
or
pop
pop
out
repz
lret
or
scas
dec
sbb
cmpsb
pop
xchg
pop
dec
enter
ret
arpl
xor
sub
ja,pn
and
loopne
adc
fldcw
pop
xor
or
jmp
cmp
clc
daa
inc
call
loope
pop
push
cmp
xchg
fsubp
dec
add
add
movsb
stos
pop
jmp
negb
rclb
andl
xor
xor
jne
scas
mov
inc
jmp
mov
loope
sub
jo
jg
mov
enter
imul
cmp
push
stos
xchg
js
or
cmp
fs
imul
add
adc
pop
dec
arpl
xchg
add
push
pop
hlt
sub
lcall
add
nop
lods
inc
dec
mov
sub
out
add
ror
mov
mov
xchg
add
or
sub
subb
adcl
xchg
sbb
add
scas
mov
ret
int3
dec
iret
mov
pop
mov
enter
adcb
sub
dec
and
ss
xchg
jmp
mov
mov
sub
inc
mov
out
cmp
xor
lock
fs
mov
ss
cltd
ja
lahf
sbb
dec
rclb
cli
pop
loope
in
mov
repz
and
cli
xchg
sub
jns
and
mov
imul
cltd
data16
cmp
xor
xlat
jnp
sbb
jge
push
xor
and
js
loopne
xchg
push
sti
push
jb
mov
sahf
pop
add
xor
jb
or
push
adc
subb
xor
stos
dec
out
xor
ljmp
ret
lock
lds
xchg
test
jmp
sbb
jle
cmp
test
fbld
jnp
ret
loope
loopne
add
cmpsl
or
cwtl
or
or
fsubrp
loope
fs
sbb
jo
jns
adc
mov
repz
rcrl
push
pop
addr16
lahf
inc
imul
cwtl
push
or
cmp
push
mov
fildl
xor
pop
xor
sarl
pusha
add
test
pop
mov
cmp
xchg
jbe
test
out
icebp
xor
jcxz
jo
sbb
pop
es
push
sub
lods
fsubl
sbb
pop
ret
test
cs
push
xchg
pop
call
std
daa
in
jo
pop
cwtl
sub
dec
in
mov
and
imul
out
ja
and
xlat
jb
ficoml
mov
push
fidivl
and
das
pop
sbb
aaa
lods
cld
outsl
clc
icebp
mov
push
lods
push
std
adc
rcrl
movsl
push
push
adc
cmp
mov
dec
test
jmp
loop
inc
stc
cli
dec
and
fdivrs
leave
addr16
cmp
int
pushl
xchg
push
jae
gs
aas
mov
push
stos
lock
mov
adc
sub
icebp
jl
stos
mov
jecxz
add
inc
leave
iret
ljmp
adc
mov
push
cli
outsb
jns
xor
and
push
inc
push
inc
cmp
int3
and
lds
pop
xchg
push
push
outsb
test
loopne
test
jbe
or
push
xchg
push
repz
aad
push
push
and
or
inc
pop
push
jbe
hlt
jno
leave
sbb
xchg
or
mov
cmc
push
jmp
jmp
in
aaa
das
lds
and
add
inc
mov
lret
mov
ja
sbb
cmp
clc
adc
add
jns
cmpsl
lods
xorl
cmc
inc
aaa
mov
in
inc
loop
adc
lahf
cmp
fwait
sbb
cwtl
mov
adc
cmp
pop
por
aam
test
in
jle
or
push
enter
jb
cmp
lods
shrb
pop
das
stc
neg
mov
stos
jl
mov
or
lret
dec
icebp
pop
shlb
pop
clc
pop
insl
lea
xchg
cmp
mov
aaa
cli
sbb
mov
daa
lret
addr16
repnz
aas
es
push
jg
cmc
cld
jae
insl
fstl
bound
idiv
mul
pop
dec
lea
mov
push
push
idiv
mov
fnsave
adc
add
mov
pop
sub
ljmp
jecxz
push
hlt
jmp
fptan
hlt
psubsw
mov
xor
fmull
add
xchg
or
gs
outsb
in
movsl
sti
push
xchg
aad
push
int
andl
gs
xor
pop
test
in
out
pop
or
gs
notb
adc
cmp
xor
roll
imul
xchg
js
mov
mov
push
in
xchg
pop
or
int
pop
sbb
scas
cmp
popa
xor
mov
out
ror
clc
xorb
icebp
mov
jo
jge
imull
out
mov
jbe
fisttps
add
jno
fwait
mov
xchg
popf
mov
and
mov
iret
xchg
mov
ljmp
dec
out
pop
int
push
xor
shr
sti
hlt
mov
fistpl
test
sbb
cs
je
andl
sarl
jge
fiaddl
inc
push
jns
pushf
sbb
cmc
cmp
xor
loop
popa
push
xlat
leave
fists
scas
push
popf
and
and
mov
mov
subb
jp
scas
push
shrl
pushf
mov
push
stos
arpl
pop
rolb
jecxz
addr16
jle
loope
sbb
loopne
mov
inc
inc
movsb
movsb
scas
lods
mov
insb
cltd
repnz
jo
loope
jmp
insl
fninit
stos
push
les
adc
xlat
das
xor
jge
call
xor
fs
loop
rcrl
clc
loop
and
jnp
sbb
je
jns
mov
and
pop
xchg
mov
cmp
mov
lods
push
pop
push
out
scas
addr16
in
add
push
cwtl
inc
fdivl
mov
inc
test
inc
loopne
xchg
cmp
inc
lcall
xor
mov
xor
fs
ja
jae
and
sbb
iret
sbb
addr16
jno
inc
and
in
jbe
test
shr
sbb
daa
in
loopne
fistl
xchg
std
xchg
push
add
test
out
or
lods
stos
cmp
dec
leave
lods
push
imul
mov
ss
cmp
lds
push
add
lods
in
push
repnz
testb
aad
ljmp
xor
mov
xchg
bound
xor
lea
inc
cmp
mov
push
inc
and
add
ss
lods
jne
test
hlt
sub
loop
mov
pushf
lods
cmp
aad
aam
push
mov
scas
stos
inc
cmpsl
les
sbb
pusha
ss
fldt
sbb
test
outsb
loopne
inc
xor
iret
fsubl
ds
dec
addl
hlt
and
mov
jge
dec
mov
cmc
dec
push
dec
cmp
jmp
out
aad
insl
jb
inc
fstpt
lea
sub
jge
sbb
mov
out
jb
sbb
daa
and
jne
sub
pop
mov
mov
mov
icebp
mov
mov
mov
mov
hlt
lock
push
add
or
aad
and
push
repz
jl
push
addr16
jae
movsl
sbb
std
or
jmp
cs
ret
mov
ss
mov
out
inc
movsl
xor
xor
fisttps
pop
push
fninit
mov
lahf
into
cltd
or
call
jb
pusha
adcb
xor
sbb
orl
xor
cmp
stos
das
addr16
inc
in
push
ret
scas
popa
push
cmp
aam
arpl
loope
stos
nop
test
es
sbbb
cld
sarb
push
cmpsb
fstps
outsl
push
loope
lods
clc
dec
mov
ret
mov
mov
icebp
mov
sarl
pop
aam
bound
lock
scas
jg
leave
int
popa
lahf
jbe
jno,pn
arpl
push
xchg
xor
mov
xchg
in
sti
orb
pop
push
mov
test
xor
lds
cmpb
jae
inc
cmp
fs
cmp
dec
or
fcompl
xor
or
push
inc
add
push
aad
enter
jecxz
les
rorb
into
shlb
pop
xchg
in
inc
lcall
inc
sub
add
xchg
adc
inc
mov
and
sbb
pop
ret
pop
add
popa
es
mov
imul
cmp
mov
mov
mov
mov
sbb
pop
pop
mov
je
imul
xor
sahf
test
pop
or
loope
mov
push
scas
sub
lods
jle
mov
jl
out
xor
mov
aam
or
mov
xchg
xchg
iret
lcall
sbb
shr
jg
adc
or
enter
add
cltd
ss
shrb
push
dec
mov
inc
pop
aad
cli
sub
xchg
xor
lods
cs
imul
xchg
lods
es
push
fs
dec
fs
das
lods
mov
loopne
not
stos
repnz
add
xchg
hlt
ja
in
aad
jg
outsb
mov
xor
fists
mov
sahf
cmpb
bound
xchg
sub
mov
call
in
outsl
mov
jb
shrl
sub
das
cmp
popl
cs
add
jns
sub
js
or
sub
push
push
nop
sub
movsb
jno
or
test
xlat
enter
notb
out
mov
jp
push
mov
xchg
add
pop
loope
imul
lahf
mov
stos
push
mov
mov
add
xor
or
jmp
pop
xchg
loop
movsb
aaa
test
inc
lret
mov
cmp
jno
cmp
pushf
cmp
xchg
xchg
mov
lea
add
pop
push
cmc
stc
ret
es
inc
mov
add
add
add
lea
dec
jb
sbb
pop
lret
sbb
fimuls
mov
push
insl
add
mov
sub
or
push
sub
lock
or
sahf
sub
mov
and
std
sub
xor
push
sub
xchg
gs
mov
arpl
push
ljmp
stos
clc
test
and
pop
idivb
outsl
mov
sbb
push
push
xchg
dec
xor
push
xor
call
movb
pop
push
jecxz
addr16
mov
xchg
jge
xchg
xor
jne
pop
ss
add
push
xchg
mov
push
js
hlt
adc
shrl
push
adc
outsb
aaa
lock
sub
clc
nop
ds
pop
mov
cmp
xchg
xor
jl
les
inc
mov
popf
idivb
test
aas
dec
std
cmp
test
sbb
popf
inc
rolb
daa
pop
aas
mov
fadds
popf
mov
das
xor
jecxz
xor
inc
or
push
pop
xor
iret
fs
mov
insb
mov
pop
inc
pusha
mov
jne
stos
rcll
fisubrl
jo
or
stos
clc
push
js
xlat
inc
icebp
pop
cltd
xchg
inc
sahf
xor
cmp
jb
mov
inc
out
add
dec
fistpl
ds
cmp
dec
xchg
fs
xchg
inc
adc
inc
and
mov
insb
push
lock
xor
jge
das
and
in
jne
dec
popl
js
int
sbbl
cmp
xchg
adc
fsubrs
sbb
fbld
js
scas
jmp
push
add
sub
jno
xchg
test
mov
xor
pop
or
jbe
addr16
push
popf
xor
lods
fwait
data16
dec
lret
mov
pop
data16
inc
mov
imul
xchg
lahf
push
rcl
es
insb
mov
popf
or
inc
cld
cmp
mov
dec
xchg
not
push
or
cmp
sbb
inc
loop
xor
dec
inc
xchg
adc
divl
pop
test
adc
cli
hlt
add
xchg
add
loope
adc
jge
cmp
mov
or
jg
sbb
mov
arpl
movsb
fildll
cmpsb
fmuls
dec
mov
jle
xor
pop
mov
or
adc
mov
dec
and
pop
movsl
aam
push
lods
and
sub
insl
xor
hlt
scas
dec
xchg
add
stos
push
mov
cmp
mov
fildll
xchg
sub
ret
arpl
sbb
mov
cli
mov
pop
insl
testb
pop
push
cld
add
adc
or
xchg
mov
inc
jns
je
daa
pop
lods
cmp
or
jecxz
jne
bound
test
sub
enter
and
mov
addr16
inc
xchg
mov
inc
dec
dec
push
ret
mov
mov
inc
dec
out
dec
push
cwtl
out
bound
outsb
push
mov
xchg
push
and
shlb
lahf
push
mov
fwait
arpl
dec
mov
xchg
movsb
jge
xor
mov
mov
xchg
mov
pop
outsl
mov
lea
mov
mov
lock
fs
pop
sbb
shr
or
push
jno
inc
aam
inc
inc
std
sub
dec
lahf
or
jle
xor
adc
test
mov
xor
call
dec
andb
adc
cltd
insl
jmp
or
mov
jecxz
push
dec
sarl
icebp
sahf
sub
fmull
mov
push
sbb
dec
aam
jbe
stc
mov
test
loopne
jmp
adc
in
imul
adc
and
jne
adc
lcall
sub
mov
sbb
sbb
das
jae
pop
lahf
loope
dec
dec
jle
inc
cmp
stos
faddl
mov
mov
daa
mov
mov
push
adc
in
sub
mov
xchg
jo
dec
int
inc
in
in
scas
out
sti
jo
and
sbb
dec
mov
xchg
jns
xor
imul
mov
sahf
push
xor
push
xchg
inc
insb
bound
or
sbb
push
mov
sub
popf
inc
xor
mov
xchg
je
jne
jg
and
aad
and
bound
adc
xor
popf
adc
cwtl
push
bound
xchg
cmpsb
aaa
pop
mov
xor
pushf
mov
test
and
mov
xchg
mov
push
imul
inc
ret
cmp
shll
test
xchg
mov
mov
push
sbb
lea
cmc
cli
jp
jmp
cli
cmpsb
int3
jno
inc
mov
sbb
add
sbb
je
repz
push
imul
and
pusha
leave
je
inc
cmpb
popa
ljmp
rcrl
bt
scas
ss
insl
enter
mov
sbb
ss
or
sbb
dec
cli
jnp
repnz
push
cmpsl
or
pop
and
popa
into
mov
xlat
das
es
scas
push
pop
ds
cmp
inc
sub
andl
subl
dec
pop
pop
jbe
pushf
adc
aad
stc
js
addl
xor
sub
fistl
jno
jle
jg
jl
sahf
xor
mov
fisttpl
pop
int
mov
push
cmp
in
fwait
shlb
inc
jge
lret
jb
icebp
dec
inc
int
jo
push
mov
xor
dec
nop
mov
jo
and
jnp
xchg
jecxz
lods
jmp
cmp
dec
jmp
imul
sar
lret
xchg
mov
or
inc
iret
gs
notl
push
jmp
jae
rcll
insb
inc
xlat
pop
std
insl
jg
pop
pop
adc
mov
mov
rol
mov
lock
sti
and
xor
fsubl
lods
ds
or
adc
sar
push
jecxz
push
leave
mov
test
stc
or
fcomps
fisttps
xchg
test
or
fdivs
pop
cmpsb
mov
decb
test
call
sahf
xlat
mov
je
mov
ret
mov
sub
mov
les
cmp
or
outsb
lock
cwtl
std
xor
dec
das
add
and
jmp
clc
fstpl
xor
repz
lret
stos
cs
cli
enter
mov
mov
repnz
stc
lock
loopne
cmpsl
jge
lcall
cmp
cli
mov
leave
adc
push
mov
stos
sti
popa
out
movsl
lret
das
pop
adc
fwait
lock
test
adc
mov
cmp
repnz
sti
mov
sarl
or
jbe
popa
xor
aas
stos
icebp
and
sbb
loop
outsl
popf
mov
jne
dec
add
sub
mov
daa
imul
mov
shlb
out
pop
xchg
aas
dec
dec
mov
add
roll
sbb
push
jmp
testb
inc
jecxz
out
mov
pop
dec
adc
inc
pop
inc
lret
xchg
mov
xor
sahf
in
adc
insl
or
jmp
insb
jp
imul
dec
mov
or
lret
xlat
sti
inc
pop
fs
mov
xchg
ds
lahf
adc
adc
and
outsb
push
jecxz
pop
jg
inc
popl
div
pop
pop
into
stos
and
ret
xor
inc
and
out
movsb
xchg
inc
and
sub
mov
mov
pop
cld
dec
or
ret
mull
fs
nop
xlat
lock
and
fcmovb
adc
or
pushf
negl
popa
jbe
mov
clc
ljmp
int
jnp
mov
push
push
lds
mov
mov
push
add
sub
cmp
lock
jb
jmp
jne
fdivs
test
je
lcall
jmp
pop
into
shrb
push
sti
idiv
mov
fwait
jbe
xchg
mov
fisttpll
mov
pop
mov
add
clc
mov
fsubrs
mov
cs
dec
sahf
pop
aad
push
clc
les
pop
xor
pop
repz
int
cmp
lods
mov
mov
int3
call
jmp
sbb
fistl
mov
in
int3
xlat
cmp
scas
loope
push
pop
push
mov
dec
xor
ds
icebp
ret
and
and
sub
push
call
outsl
add
lods
pop
out
adc
mov
movsl
and
push
jo
aad
inc
icebp
into
inc
push
mov
lea
inc
add
jo
mov
les
in
mov
push
xor
mov
cwtl
add
testb
mov
mov
push
repnz
rolb
mov
pop
mov
xor
cmp
mov
fldcw
gs
fiadds
mov
mov
push
out
ret
fs
dec
lods
insb
mov
out
in
cmpsb
and
pop
mov
in
ljmp
cwtl
sub
sbb
nop
mov
cmp
or
test
test
or
xchg
jnp
mov
xlat
ljmp
dec
and
xor
popa
leave
and
and
push
data16
das
mov
jmp
cmp
mov
add
push
jae
cmc
callw
adc
xor
insl
mov
lock
scas
jno
inc
movsl
idivb
push
pop
mov
test
adc
pusha
inc
cmc
adc
ret
lock
hlt
popa
scas
gs
push
movsl
add
scas
ds
mov
mov
iret
mov
mov
fsubrs
xor
push
in
xchg
push
scas
inc
mov
fisubrs
adc
mov
inc
mov
mov
sbb
dec
or
sub
pop
inc
test
jns
pop
fcompl
sub
aas
and
pushf
adc
fimuls
ret
je
ds
push
dec
pop
daa
xchg
xchg
push
push
cmp
pop
push
push
mov
and
sub
xchg
shrl
loop
movb
xchg
std
dec
or
cmpsl
jmp
push
cld
mov
mov
mov
jb
test
sub
bound
inc
idivl
enter
push
sbb
sub
pushf
cmc
add
cmpsb
jp
roll
hlt
sub
das
imul
sbb
loopne
in
or
lods
pop
lret
mov
jne
inc
mov
xor
jl
xchg
cmp
push
leave
dec
push
cmp
into
andl
out
fidivl
mull
jns
adc
int3
mov
sub
jno
test
sub
dec
or
mov
imul
pop
sbb
mov
cld
fsubs
sbb
ds
in
stos
xlat
jb
or
bnd
dec
jg
inc
lret
inc
aaa
add
in
leave
cli
mov
pop
sti
push
mov
ljmp
mov
jns
push
push
sub
movl
js
cwtl
inc
es
mov
xchg
push
mov
test
dec
sub
add
int
xchg
push
xlat
xchg
ja
pop
mov
mov
pusha
fcompl
sub
aaa
pusha
mov
cmp
mov
mov
fs
lds
jl
leave
adc
je
pop
adc
loope
not
sbbb
arpl
xchg
shll
and
push
fdivr
sbb
jp
cmp
and
mov
mov
cmpsb
push
test
mov
jb
test
jg
lcall
popa
xlat
stc
pop
out
popa
popa
in
cli
mov
push
push
mov
cmpsl
dec
add
scas
mov
sbb
mov
das
je
pusha
js
jecxz
imul
hlt
imul
mov
inc
out
pop
adc
pop
js
xchg
pop
sub
std
cwtl
pushf
xchg
out
add
lods
jbe,pn
xor
in
or
jg,pt
outsb
or
leave
cmpsl
mov
mov
icebp
movsb
jp
push
rorb
scas
mov
scas
cmpsl
in
fcoml
jae
xor
aam
xchg
xor
sub
pop
in
iret
js
mov
adc
sbb
adc
lahf
mov
rolb
stc
sub
arpl
xchg
push
test
mov
into
jp
jecxz
xor
mov
mov
add
cwtl
cwtl
xchg
dec
jbe
jns
push
fdivp
or
pop
mov
lods
mov
jno
xchg
xchg
pop
cmp
xchg
add
iret
sbb
xchg
xchg
aas
pop
mov
fstps
addr16
lods
xchg
mov
ss
int
rorl
decb
outsb
mov
cli
cmpsb
push
adc
shl
lcall
push
lahf
add
and
cs
xor
push
cld
push
adc
rorl
cmp
mov
mov
push
ret
iret
xchg
sub
mov
add
pop
push
je
test
rclb
nop
mov
in
jae
insb
pop
dec
movsb
mov
dec
ret
mov
cmp
out
and
sahf
mov
jae
pop
and
ds
mov
je
enter
imul
and
rorb
jle
shlb
lods
jns
lock
jb
clc
aaa
imul
test
add
outsl
push
add
fsubl
int
sti
jmp
mov
lret
stos
fxam
sub
or
mov
rcll
imul
and
cmc
jnp
jle
push
pusha
sub
inc
push
int
jae
inc
sbb
or
xchg
xor
fistl
mov
mov
jno
andl
shrb
movb
pop
addr16
cmpsl
test
test
adcl
and
lods
jb
pop
outsb
sbb
aas
lea
jae
mov
add
pop
daa
sbb
es
adc
mov
add
dec
js
jle
mov
jae
jbe
pop
lahf
add
ja
inc
daa
pop
xor
dec
mov
mov
in
fmul
shll
repnz
mov
les
fld1
xor
jl
dec
xor
ret
iret
mov
push
cli
mov
mov
adc
xchg
mov
inc
xchg
imul
push
dec
in
mov
stos
fsubr
xorl
pop
ds
aam
iret
jg
dec
andb
adc
mov
push
or
orl
add
fistps
mov
cmpb
mov
push
aam
stos
sub
xchg
and
xchg
or
popa
in
imull
out
stos
dec
cs
jp
fsubs
mov
test
cltd
jl
and
lret
test
popa
mov
into
cmpl
std
or
pop
lock
xor
call
stos
dec
arpl
out
xor
xchg
test
and
lcall
xchg
push
enter
sbb
testb
sub
inc
mov
je,pn
adc
pop
fisubrl
jb
pushf
dec
mov
mov
sti
lods
and
sbb
pop
cmp
js
ds
push
add
enter
out
jmp
cmp
jmp
les
jbe
test
addr16
and
stos
pop
lock
push
sub
push
imul
sub
in
pusha
pop
cwtl
mov
pushf
push
faddl
mov
int
das
pusha
fisubs
or
lea
add
dec
sysret
jg
negb
adc
sub
test
call
pop
inc
loop
mov
lcall
outsb
xchg
jnp
pop
movsl
dec
mov
inc
lods
in
cmp
sbb
outsl
mov
mov
cmp
mov
push
mov
push
ja
and
cmp
cmp
xchg
iret
popf
int
stos
xchg
mov
sub
movsb
xor
out
adc
jg
pop
inc
mov
jecxz
fs
out
movsb
xor
std
push
pop
lahf
mov
jp
in
pop
andb
mov
sahf
enter
lods
rcll
lods
mov
negb
leave
test
scas
ljmp
lods
fninit
cbtw
dec
popf
psubd
or
mov
dec
js
aad
cld
mov
cmp
jl
pop
sub
addr16
insb
push
outsb
testl
data16
sti
jo
xchg
inc
jecxz
xlat
mov
out
rcrb
pop
inc
cmovs
dec
hlt
xchg
clc
int3
jns
aad
and
mov
sahf
imul
in
out
pop
mov
push
or
mov
ss
adc
mov
jp
les
rcl
push
cld
xor
inc
ret
add
jnp
inc
movb
xchg
fdivrp
sub
adcl
fdiv
in
pop
mov
push
cmpl
shl
xlat
xrelease
or
scas
dec
test
mov
and
xchg
jns
sbb
aas
cmpsl
xchg
xor
hlt
shrb
inc
mov
jl
adc
out
pop
scas
insb
mov
fimuls
mov
enter
sbb
pop
jge
lahf
lcall
fists
and
add
xor
insb
adc
xor
sbb
mov
inc
sar
mull
and
jbe
xchg
cmp
imull
mov
aas
aas
sbb
push
mov
fdivr
ret
stos
pand
sub
das
stos
mov
sub
inc
mov
pop
adc
negl
ss
mov
adcl
les
xchg
cltd
nop
jb
nop
xchg
jp
ljmp
cmpsl
ret
and
jp
js
push
and
addr16
aas
or
je
addr16
nop
jnp
dec
pop
cmp
cwtl
push
lcall
add
clc
jp
sbb
pop
cmp
adc
xor
arpl
pop
push
and
int3
in
mov
jge
adcl
fadds
rcrl
sbb
xor
das
mov
jmp
push
cli
cmc
push
push
insb
loopne
insb
daa
js
mov
sbb
mov
sub
pop
ja
aas
push
fisubrl
xlat
sarb
or
or
push
pop
in
inc
std
mov
jl
mov
mov
into
sbb
lahf
cltd
call
lock
rclb
loopne
dec
dec
xchg
mov
sub
lods
push
hlt
fcomps
xor
push
inc
imul
mov
stos
sub
xor
adc
lcall
or
pushf
mov
pop
fidivrl
mov
addb
mov
repz
mov
rorl
mov
mov
sub
es
push
cmc
inc
mov
daa
cmp
stos
leave
inc
test
fs
push
test
pushf
and
mov
adc
pop
and
fs
add
fistps
test
jmp
test
pop
xlat
jg
sub
pop
loope
xchg
sub
orl
lds
nop
inc
sbb
ret
fwait
jge
and
popa
addr16
lret
push
mov
in
fcoml
mov
sub
jno
and
test
ret
ja
add
sub
dec
test
push
test
add
roll
pop
aas
mov
pop
sub
scas
push
cmp
xor
rcrb
and
loope
fists
push
sbb
pop
fs
add
push
sub
xorl
xchg
jg
dec
and
arpl
aad
fistpl
test
rcrl
xlat
mov
rcll
int3
clc
push
cmp
lret
lock
add
pop
pop
cli
bound
jge
mov
ret
inc
ljmp
jo
pop
jb
pushf
out
dec
mov
mov
jns
loope
in
lcall
xor
xchg
jecxz
xor
out
sti
push
sbb
lods
jle
jns
adc
lds
cwtl
sub
loop
lods
mov
ljmp
stos
es
out
mov
out
mov
mov
sti
outsl
fcomp
add
sbb
mov
push
mov
sub
push
fpatan
aad
pop
mov
xchg
jae
out
loope
in
loop
push
push
mov
decb
arpl
jne
repnz
push
loopne
stc
call
push
sbb
push
and
jecxz
and
adc
pop
xchg
xor
cld
push
add
pop
xchg
shll
inc
xchg
push
shlb
in
push
xchg
mov
add
clc
cmp
insb
out
xchg
sbb
fdivrp
mov
push
insl
xchg
add
aas
cmp
and
or
sbb
lcall
pop
inc
sub
fs
cld
mov
sbb
or
xchg
inc
jle
xchg
lods
jnp
and
pop
mov
idiv
push
mov
mov
cltd
jb
push
inc
cmp
movsb
add
or
rcr
dec
fs
push
xor
inc
fwait
inc
sahf
sub
lret
pop
pop
lret
xchg
bound
xor
cld
add
movsb
cmp
push
sub
sub
xchg
clc
vpmulhuw
or
ret
std
scas
xchg
enter
int3
loope
mov
sub
stos
and
gs
imul
out
cmp
lahf
outsb
mov
dec
mov
push
aam
adc
lret
sbb
cmp
jmp
mov
es
adc
mov
pushf
add
fldcw
lds
cmp
xchg
jns
or
jae
fadd
xlat
or
push
xor
cmpsb
mov
xchg
enter
sbbl
daa
pop
stc
fldl
rorb
scas
stos
mov
mov
pop
adc
out
pmulhuw
sbb
outsl
push
aas
cltd
bound
aad
or
in
popf
je
mov
mov
xor
fs
imul
mov
lret
sbb
mull
inc
sarb
dec
cmp
out
fstps
xor
loop
xchg
icebp
cld
mov
fidivrl
ljmp
push
jmp
xor
push
jno
adc
outsb
push
xor
lds
mov
sub
mov
push
hlt
sbb
and
mov
fimull
jb
insl
jl
cmp
xchg
std
xchg
pop
ret
add
sub
lcall
or
cld
in
xchg
lcall
xor
cmc
in
push
addr16
cmp
cmp
dec
add
rorl
fdivs
xor
loop
pop
fcomps
push
fisttpll
mov
add
sbb
daa
fwait
rcrb
aam
push
sbb
and
or
je
inc
test
xchg
pusha
sahf
mov
out
fsubrp
shrl
iret
xor
pop
inc
add
imul
cmp
leave
push
repnz
cmc
push
loope
imul
movsl
into
or
fwait
dec
lcall
xchg
and
imul
aaa
into
mov
cmp
sub
fmull
jle
dec
xor
mov
xor
cmpsb
lods
dec
ljmp
test
fcomps
and
mov
cmc
ficoms
insb
scas
push
sbb
inc
dec
imul
inc
stos
dec
cmp
hlt
jns
jae
data16
cmp
xchg
test
test
mov
shl
dec
fmul
insl
dec
mov
lods
xchg
sbb
mov
cmpsl
dec
lret
xor
aam
incl
pop
jmp
adcl
xchg
add
and
jge
sbb
and
pop
fstp
jnp
dec
movsl
fbstp
adc
repnz
mov
jge
hlt
add
movsl
outsl
enter
jl
cmp
loope
pop
imul
popf
jbe
push
lds
lahf
jge
sbb
dec
ss
cmpsb
cld
pop
icebp
mov
cmpsl
inc
jne
and
addl
xorl
cmp
sbb
adc
jo
sub
adc
bound
aad
lods
sub
jae
repz
.byte
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
adc
popa
adc
rcrl
mov
pop
push
fsin
adc
dec
aam
pop
and
sbb
mov
or
out
jle
pop
lods
lock
rclb
cs
add
sarl
mov
out
fisttpl
call
shrb
xor
add
ss
sbb
xchg
mov
pop
adc
loop
in
mov
xchg
pop
mov
sbb
outsb
jmp
sub
xchg
jb
cs
subb
sti
or
dec
mov
repnz
es
pop
lahf
sbb
inc
mov
call
cli
out
jnp
jecxz
add
add
loope
ficomps
scas
add
dec
xchg
jb
ds
or
add
roll
push
inc
and
pop
pop
and
bound
sub
and
out
pop
jb
push
push
inc
movsl
xor
std
add
std
cld
jp
jp
sbb
jge
cs
or
addl
cmp
xchg
mov
xchg
mov
or
mov
pop
in
clc
jbe
sbb
mov
ss
lret
lea
pop
pminsw
sbb
lret
mov
mov
jg
clc
jns
pop
or
cltd
cmc
imul
xchg
mov
cld
mov
in
fmulp
outsl
push
xor
or
lock
xchg
sub
push
add
stos
mov
adc
xor
cmp
clc
stc
pop
sbb
pop
push
rorb
stc
cmp
sub
mov
sahf
sub
xchg
dec
jp
add
test
fisttps
jp
adc
adc
add
std
cli
or
or
sbb
repnz
shlb
mov
mov
sub
jne
jae
test
fldl2e
fimull
dec
or
and
das
int
ja
inc
or
jno
jbe
adcb
dec
cld
cli
mov
mov
inc
sub
cli
mov
arpl
fsubs
inc
xchg
imulb
dec
pop
jns
xor
inc
lcall
out
stos
fmull
xor
lods
mov
mov
xor
jne
and
push
scas
dec
outsb
mov
fsts
adc
test
push
popf
test
push
nop
sbb
mov
insb
pusha
jnp
xor
out
and
cltd
aam
and
pop
sub
outsl
push
pop
pop
aad
imul
adc
std
lret
js
rcrl
inc
pusha
pop
fcmovb
adc
cmp
mov
pushf
mov
insl
faddp
mov
adc
sbb
imul
divl
subb
inc
bound
mov
lock
mov
xchg
sti
xchg
ffree
aam
fisttps
mov
sbb
jno
cmovo
hlt
or
and
mov
cmpsb
leave
popa
mov
mov
sbb
push
rclb
pop
pop
popa
or
xchg
pop
push
cmpb
lret
pop
mov
popf
xor
out
jne
sub
inc
movsl
scas
jl
faddl
jo
add
int3
in
push
ret
push
movsl
xchg
mov
xchg
push
ljmp
sbb
int
inc
sbb
jg
scas
push
imull
leave
cmp
jp
test
iret
insl
adc
push
std
adc
add
mov
out
xor
mov
pop
lods
scas
insb
jne
add
cmc
dec
xchg
mov
pop
pop
mov
push
test
loopne
xchg
popf
iret
nop
addr16
and
lods
aam
iret
mov
sub
sbbb
cmp
push
sbbl
fiadds
shll
leave
shl
das
sbb
stc
fcmovu
pop
fwait
or
sub
push
push
cwtl
dec
jl
dec
adc
dec
mov
lock
cli
insb
in
push
push
rcll
inc
mov
cmp
fsubs
and
inc
mov
sub
push
mov
xchg
pushf
out
cld
ret
test
cwtl
sub
push
pop
dec
push
mov
jns
push
out
scas
mov
sahf
sbbl
jne
xor
mov
stos
mov
std
iret
ret
call
xor
shll
scas
adc
jae
lods
cmpl
adc
mov
ljmp
mov
call
movb
and
mov
xor
jne
arpl
in
pop
iret
cmpsb
fdivrs
std
or
scas
add
or
dec
and
fsubl
dec
clc
pop
dec
mov
sbb
or
xor
test
addb
xor
push
cmc
sub
xor
sub
cmc
dec
sub
sbb
sbb
mul
or
push
cli
cld
pop
cltd
ds
jns
lods
pusha
mov
scas
and
xchg
ret
fwait
mov
push
sbb
jg
div
push
pop
bound
lea
or
mov
xchg
jle
cwtl
push
test
mov
loopne
xchg
lock
mov
cmpl
or
cmpb
sbb
xchg
mov
andb
imul
jns
mov
enter
xchg
pushf
add
push
push
sbb
out
push
pop
pop
mov
fists
sbb
inc
jae
out
scas
sub
jne
or
adc
int
lret
jle
lock
in
lret
cmp
in
decl
rcrb
push
push
mov
fcom
test
jp
push
and
xchg
in
xor
jae
jo
push
fidivl
ficompl
mov
pop
pop
scas
fnstsw
pop
mov
cltd
into
dec
mov
xchg
fcmovnb
data16
jno
jmp
pop
mov
xchg
add
mov
adc
pop
popa
addr16
inc
gs
es
nop
iret
xchg
sbb
cmp
dec
jmp
sub
sbb
ret
jno
fists
xchg
or
loopne
push
add
jno
sub
jl
adc
push
mov
andl
add
ja
pop
stos
xorb
leave
dec
sbb
sub
xchg
pop
mov
mov
inc
pop
pop
push
rcrb
push
cmp
dec
push
xor
pop
hlt
dec
popa
imul
cmp
movsl
movsb
sbb
or
push
mov
adc
jno
push
outsl
popf
mov
jo
cmp
mov
and
sub
cmpsb
inc
xor
pop
fwait
cmp
fistpl
ret
jg
sbb
cmp
mov
mov
ret
push
iret
xchg
into
subl
fisubl
push
lods
loope
mov
push
test
iret
jp
testb
and
in
ss
fadds
inc
or
dec
pop
sbb
add
mov
dec
mov
and
push
pop
sub
les
ljmp
data16
rcr
in
xor
mov
out
cltd
es
mov
mov
gs
in
mov
push
fldcw
and
fisubrs
pop
ret
push
aas
xor
std
mov
sar
jle
loope
pop
sarl
sub
cmp
fstps
add
out
popa
or
mov
out
mov
xchg
sub
sti
stos
push
pop
xchg
popa
or
cmp
xor
test
in
adc
push
jmp
jae
icebp
sbb
sbb
mov
xchg
inc
inc
sbb
adc
cvttps2pi
rolb
push
or
lea
gs
sahf
cmp
mov
cmp
pop
dec
test
sbb
xor
push
xor
out
fcoms
adc
jg
xchg
out
mov
not
cmpb
mov
stos
outsb
pop
and
cmpsl
lods
fidivl
ds
mov
mov
in
adc
filds
mov
lods
imul
lods
insl
xchg
arpl
mov
push
mov
or
fxch
movb
jo
mov
inc
sbb
and
and
mov
jnp
cmp
cltd
fwait
lret
imul
adc
bound
mov
repnz
jae
dec
pop
xlat
cs
mov
out
push
push
roll
mov
inc
jl
imul
jge
pushf
gs
cmpl
orl
filds
ljmp
or
mov
mov
push
arpl
in
jl
mov
jge
push
xchg
movsb
into
lahf
fdivr
sbbb
cltd
inc
and
loope
or
mov
jmp
jns
je
pop
add
mov
mov
addr16
cmpl
or
fsubl
xchg
leave
pop
or
inc
scas
stos
add
lret
in
pop
mov
cli
adc
xor
jle
xor
std
cmpl
mov
mov
test
xor
mov
cli
daa
lahf
cltd
decl
xchg
xchg
xor
into
and
shl
test
xchg
ljmp
fmull
or
cmc
and
mov
or
stos
loope
mov
sub
xchg
adc
dec
and
ror
pushf
das
fst
jl
stos
mov
fstps
mov
jbe
push
xchg
push
cmpsb
rolb
dec
jecxz
mov
iret
jo
bound
push
mov
jmp
push
lea
loope
nop
out
notl
and
addb
mov
adc
mov
xchg
sbb
push
sbb
aad
mov
fwait
mov
mov
fs
addr16
aaa
push
cmp
xchg
add
addb
dec
jmp
cwtl
fmull
rcrb
and
iret
movsl
and
pushf
mov
jecxz
aas
mov
cmp
stc
shll
mov
outsl
and
inc
or
mov
sbbb
adc
pop
xor
lods
fucom
mov
cld
cmp
jbe
sbb
xchg
imul
hlt
pop
repnz
or
jg
lds
mov
jle
test
sbbb
xor
mov
popa
adc
aam
ret
fsubrp
lretw
mul
pop
pop
mov
sub
push
or
mov
push
ja
sbb
enter
xor
pop
cwtl
aas
stos
test
dec
fnsave
fsubl
shrb
inc
xchg
sub
movsl
fisttpll
dec
cmp
pop
lods
or
fnstenv
pop
push
pop
roll
out
sti
pop
jae
and
push
dec
das
sar
das
mov
fdivrs
xchg
stos
mov
lret
popl
fsts
sbb
into
push
jne
mov
ds
arpl
js
sbb
out
pop
pop
fmull
push
cmp
dec
es
lcall
test
fsubs
pop
scas
int
mov
mov
or
add
aad
push
sahf
ret
xchg
nop
outsb
in
pop
sbbb
cmp
es
mov
outsl
dec
push
xchg
repnz
rcrl
jo
jmp
push
mov
cltd
mov
mov
dec
and
rolb
and
push
xor
lods
out
cmp
stc
inc
in
push
call
rep
rcrb
in
cmc
lcall
mov
sbb
pop
js
fisttpll
outsl
push
mov
mov
pop
jb
loopne
xlat
and
lret
adc
pop
loopne
insb
lret
scas
mov
pop
mov
int
jbe
enter
ja
mov
push
rolb
out
cmp
mov
mov
pop
ja
stos
in
lock
dec
fldl
call
js
cmpsb
push
call
push
lret
ret
fidivl
test
int
paddw
jae
cmp
jge
or
dec
dec
out
mov
sub
or
mov
and
mov
aad
lea
leave
data16
sbb
je
xor
pop
cmc
lahf
mov
das
inc
jbe
sbb
hlt
loope
and
or
cld
mov
clc
mov
jno
add
mov
mov
or
cmp
jnp
in
mov
pop
adc
jb
inc
dec
andb
jmp
sub
cmc
xchg
mov
or
or
mov
jb
loope
cmp
clc
mov
dec
ja
push
aam
mov
add
push
mov
fstps
sbb
bound
shlb
jbe
sub
sbb
xchg
xchg
mov
daa
mov
pop
xchg
add
stc
arpl
test
rorl
or
clc
das
mov
fs
js
mov
jmp
in
rolb
mov
push
stos
sub
iret
mov
lods
pop
xor
push
iret
dec
ficompl
into
xor
mov
aam
push
inc
jecxz
pop
pop
mov
lcall
pop
pop
add
cmp
sub
ret
mov
pop
mov
jno
push
roll
bound
push
jae
ds
xchg
pushf
lods
stc
gs
jp
pushf
rcrl
inc
popa
fnsave
fsubrl
mov
cmc
adc
aam
mov
cli
sub
and
cmp
imull
push
mov
pushf
popa
scas
jmp
and
push
sub
fistl
sub
jp
add
mov
fwait
xor
inc
pushw
dec
mov
lods
lahf
mov
push
mov
push
aam
inc
sbb
test
lcall
cs
jmp
fwait
pushf
out
test
mov
pop
dec
push
mov
add
push
call
fwait
iret
fisttps
int
lcall
cmp
test
add
shrb
sbb
inc
push
nop
dec
xchg
dec
mov
pop
insb
mov
add
push
pop
arpl
js
sbb
push
in
mov
mov
mov
js
mov
push
mov
jecxz
xor
aaa
scas
leave
clc
outsl
jb
mov
jbe
lea
ja
in
and
out
and
mov
outsl
mov
out
xchg
pop
xorb
nop
and
or
sub
mov
cmp
dec
sahf
pushf
xchg
pop
adc
popf
dec
mov
daa
and
into
inc
and
lock
mov
sbb
mov
cmp
and
lods
das
in
sbb
rorl
mov
js
jb
loope
xchg
mov
jnp
cmp
test
dec
pop
jg
into
faddl
mov
mov
cmp
es
push
aad
jne
jo
or
adc
mov
in
loope
push
es
out
scas
push
sub
std
sbb
or
sbb
nop
popl
mov
data16
sub
push
cmp
les
cmp
mov
sub
xacquire
subb
or
hlt
ret
int
mov
xor
pusha
les
sub
mov
jp
jl
stc
and
push
pop
mov
add
ret
jbe
aad
and
popa
negl
shld
mov
inc
sub
cmc
push
pop
mov
xor
dec
and
movsb
cmpsb
or
imul
mov
ret
xchg
es
push
clc
push
xor
lret
lahf
cmp
mov
cmc
iret
popf
int3
out
xor
cmp
dec
lock
cmpsl
jp
ljmp
cmpsl
jno
pop
bound
pop
lcall
mov
sub
inc
sub
lret
jg
int3
dec
jg
sbb
pop
outsb
mov
cmpsb
test
and
int3
js
lret
mov
mov
nop
mov
jmp
cmpb
fistpl
ss
add
sbbl
adc
xchg
lea
sbb
clc
dec
jb
out
addb
adc
int
sbb
dec
pop
aaa
bnd
inc
clc
sbb
and
mov
mov
pop
jb
jle
mov
or
push
outsb
divb
es
sbb
aas
in
jb
ficompl
pop
sbb
insb
imul
bound
imull
xor
mov
or
mov
mov
xchg
fisttpll
shr
pushf
fsubr
insb
lods
imul
insb
loope
adc
flds
mov
hlt
jb
cmpsl
cli
out
push
sbb
mov
popa
ja
push
outsl
dec
mov
jae
pop
mov
dec
cmp
aaa
sub
ror
xor
cltd
outsl
sbb
xor
push
push
fsubr
add
push
and
cmp
out
ds
leave
lret
mov
add
outsl
cmpsl
mov
inc
mov
xor
fadds
xor
or
mov
pop
and
je
test
sahf
xchg
sub
mov
mov
dec
cmp
dec
lcall
cld
mov
cld
stc
mov
icebp
sub
xor
mov
fcomi
cmp
add
rorl
out
or
cld
cmpsb
insl
test
cmp
push
out
lods
cltd
outsl
pop
movb
pop
dec
aam
mov
aam
fwait
cmpl
cmp
push
lret
and
mov
inc
sbb
mov
fwait
lock
dec
pop
adc
fstpt
xor
lock
jge
xor
pop
outsb
jae
xchg
std
lahf
out
cs
push
add
cmp
jns
xlat
adc
js
in
shrl
push
mov
inc
fs
enter
xchg
push
push
in
inc
loopne
adc
jbe
xor
fcom
dec
mov
sub
andb
icebp
push
test
mov
jmp
pop
in
out
int
mov
mov
add
lds
add
movb
out
gs
jo
std
cmp
insb
xchg
and
imul
inc
ja
sahf
rclb
pop
sbb
cmp
sarb
sub
jge
sbb
dec
lock
shll
mov
xlat
cs
ror
das
cmpsb
pop
sub
mov
fwait
sub
pop
xor
dec
dec
push
xorl
add
ss
movsl
mov
repz
sub
jne
movsl
and
shlb
push
sbb
shlb
sub
iret
popa
and
mov
and
add
incl
push
or
cli
add
or
sbb
out
push
stos
stc
insl
std
sub
mov
sbb
dec
popf
xchg
shlb
cmp
js
mov
cmp
lods
jo
xchg
in
lret
hlt
stc
into
mov
dec
adc
and
and
push
cmc
add
xchg
test
int
xchg
push
fcoml
jnp
push
xor
mov
fsub
pop
cmp
push
lea
loopne
cwtl
ja
add
inc
out
sbb
or
pop
xchg
test
into
pop
clc
inc
popf
scas
ljmp
in
sahf
cwtl
push
push
xor
push
jbe
xor
mov
or
in
fadd
mov
in
pop
xlat
cld
push
das
jecxz
push
pop
in
bound
mov
jnp
adc
data16
popf
mov
pop
mov
cwtl
jo
add
mov
stos
movsw
adc
xchg
inc
add
xchg
in
repz
stos
in
hlt
mov
mov
sub
inc
in
call
mov
aaa
pop
pop
imul
subw
fwait
mov
mov
pop
sbb
inc
scas
pop
call
cmp
adc
test
test
sub
mov
mov
dec
add
bound
loop
adc
movsb
hlt
and
pop
addr16
dec
ret
sub
mov
dec
adc
fcomp
xlat
sar
mov
stos
mov
push
lret
add
jns
dec
mov
fldcw
or
sti
out
lods
or
jge
mov
or
and
adc
jb
mov
mov
sub
dec
pop
and
dec
lea
dec
rcrb
iret
jmp
jne
or
push
pop
mov
call
pop
and
adc
movsb
call
pop
bound
ret
fidivs
mov
mov
inc
jmp
jne
sbb
push
pusha
lret
sbbb
repz
lret
cmc
in
iret
popf
pop
xchg
leave
sub
and
jecxz
roll
test
ficoms
fildl
fcompl
mov
jae
or
lcall
iret
and
dec
test
call
lahf
ret
inc
push
in
sarb
in
push
and
xorb
shlb
adc
or
mov
fs
mov
jp
jnp
jnp
add
sub
mov
into
cmc
jo
inc
lea
sar
es
cmp
jne
test
or
mov
sub
je
or
cmp
gs
sub
inc
jge
pop
xor
std
jle
pop
insl
inc
ret
pop
xchg
aas
xor
aad
daa
push
fstp
push
push
inc
adc
mov
inc
add
fsubp
mov
stc
std
enter
adc
popf
mov
inc
cld
jnp
pop
mov
in
mov
lock
subl
stos
xchg
push
jecxz
jne
into
out
sbb
and
xchg
popa
sub
les
cmc
lret
push
lahf
mov
jno
dec
loopne
popf
mov
jns
in
orl
imulb
outsb
inc
mov
mov
xchg
shrb
mov
add
pop
test
or
loopne
in
mov
cld
push
bound
mov
in
scas
dec
adc
fidivs
lret
sub
cltd
ds
je
repz
cltd
sbbl
cli
xor
cmp
xchg
add
mov
cs
in
fmul
movsb
jge
add
jb
pop
aaa
stc
out
scas
mov
mov
mov
lods
jp
mov
aas
addr16
push
xchg
cwtl
scas
imul
pop
pop
xchg
inc
sub
pop
mov
lahf
out
or
test
testb
loope
fnstenv
push
ds
fsubr
test
test
dec
sbb
leave
dec
out
dec
mov
mov
jecxz
pusha
xor
test
or
dec
lea
adc
adc
xchg
fldcw
fcmove
xchg
push
sub
pop
mov
lods
push
shlb
push
jns
addr16
xchg
nop
bound
call
jnp
pop
test
pop
sbb
or
dec
incb
xchg
push
xchg
stc
sti
mov
fwait
lds
leave
out
cmp
cmpsl
out
in
sbb
scas
clc
lcall
inc
xchg
inc
xor
ss
adc
jmp
enter
mov
pop
fildll
jecxz
sub
les
jle
rep
jo
jmp
or
pop
mov
lods
je
push
mov
popf
xor
in
xchg
xchg
pop
fbstp
cmpsl
repnz
sbb
pop
mov
in
cli
icebp
jns
push
push
shll
and
sub
xchg
pop
inc
and
out
mov
rcll
pop
das
aam
xchg
ss
xchg
out
ret
popa
leave
or
leave
add
inc
adc
lods
frstor
xlat
mov
xor
xchg
fisttps
shlb
mov
dec
sarb
sbb
lods
jns
in
lods
cmp
ret
or
andl
jne
mov
enter
add
push
mov
scas
jno
into
testl
lret
cmp
mov
and
mov
outsb
mov
pushf
dec
nop
movsb
shll
sub
clc
push
mov
mov
inc
xchg
push
mov
mov
cmp
mov
loop
sbb
jne
inc
les
out
and
cmc
call
fmulp
add
adc
cmp
mov
fistps
incb
push
cmp
adc
mov
test
or
mov
mov
scas
cmp
insb
inc
mov
mov
push
pop
shld
mov
jbe
sahf
dec
andl
stos
in
push
shr
cli
pop
test
test
popa
clc
pop
dec
notl
jbe
out
in
rcll
xchg
sbb
jo
jmp
shl
fst
out
out
and
sbb
fs
test
addr16
aas
mov
enter
mov
outsb
sub
add
cs
mov
incl
pusha
test
jne
iret
call
xchg
and
xchg
dec
mov
jne
jno
dec
jne
cs
sar
mov
jns
sbb
push
cld
in
mov
cmp
jecxz
lds
movb
arpl
push
ljmp
sbb
pop
pop
xchg
andb
cmp
push
shll
test
pop
das
xchg
rclb
test
divb
and
adc
mov
mov
mov
adc
outsl
test
lcall
outsb
pop
hlt
hlt
div
call
fcomps
test
pop
push
xchg
int
pop
sti
loope
add
mov
test
pusha
lea
rolb
push
and
stc
movsl
aas
sbb
xor
mov
xor
mov
mov
out
push
insb
std
sub
loop
push
sub
and
cs
je
dec
nop
stos
jg
insb
loope
and
inc
xchg
jno
int3
test
insb
pop
into
mov
push
mov
mov
pop
push
shrl
lds
ljmp
add
cmp
add
das
jo
scas
adc
dec
lea
adc
sub
inc
add
and
ficoms
inc
lret
xchg
fistl
mov
repnz
jp
jnp
cmpsl
jae
push
adc
jbe
test
call
mov
or
lods
int
sahf
adc
loopne
ficoml
mov
test
clc
loopne
xor
cmp
adc
lret
adc
adc
sub
scas
rol
push
pop
xlat
push
inc
jecxz
mov
inc
int3
add
shrl
stos
mov
pop
mov
sbb
add
adc
stos
ja
push
ljmp
sbb
test
testl
pop
mov
add
xchg
popa
sbbb
push
call
mov
pop
mov
aas
jb
mov
fdivs
push
imul
sub
aad
outsl
dec
shll
lea
add
jb
lock
insb
or
xchg
test
xchg
cs
mov
jb
int3
push
call
inc
and
mov
fisttps
pop
aad
rcll
jb
or
mov
jge
pop
rep
cltd
jmp
movnti
jmp
inc
xlat
xchg
notl
in
into
loop
or
and
loopne
popl
inc
hlt
int3
or
rcr
fsubs
fiaddl
in
cmp
movsb
es
ficomps
and
rorl
nop
xchg
jns
xchg
out
test
movsb
or
mov
loop
push
fwait
add
movsl
pop
and
std
test
stc
orl
gs
jecxz
mov
lcall
std
bound
stos
aad
and
repz
cli
mov
inc
int3
movsl
push
xlat
push
mov
cmp
das
jns
jbe
mov
bound
xlat
push
rorb
popa
outsl
mov
push
and
loopne
stc
lcall
mov
sub
mov
sub
xchg
loop
mov
jge
sbb
sub
xor
mov
out
data16
cmp
mov
test
xchg
call
outsb
movsb
clc
or
jecxz
aad
cmp
pop
fmull
movsb
cmp
jmp
jp
inc
lds
sub
call
mov
in
cmpb
xor
insb
jmp
push
inc
cmp
mov
xchg
jne
cmp
in
push
imul
inc
cld
gs
in
jmp
decb
or
pop
mov
movsl
int
loopne
push
and
or
aam
sub
mov
insl
push
in
loope
mov
and
out
mov
jns
dec
push
fs
push
pop
and
sub
rcll
repz
add
cmp
mov
jns
inc
mov
lds
mov
adc
inc
insl
jb
mov
push
adc
bound
and
sbb
xor
pop
sub
mov
push
es
aad
push
test
cmp
push
cltd
sbb
ficoml
mov
cmpsl
adc
xchg
icebp
hlt
jo
adc
and
mov
daa
inc
xchg
dec
cmpsb
fs
cmpb
sub
mov
loopne
jo
pop
ds
leave
lods
xchg
sub
repnz
xchg
lcall
pop
sbb
fmuls
xor
cld
cmp
push
xlat
push
js
loope
scas
dec
fbld
mov
aam
mov
les
icebp
sbb
sbb
mov
mov
mov
std
leave
ss
or
into
and
aas
pushf
jmp
pop
icebp
cs
jp
loopne
sbb
out
push
stc
or
push
sub
lods
xchg
jb
cmp
dec
fwait
jmp
xchg
hlt
cmp
pop
mov
mov
jecxz
sbb
mov
addr16
subl
xchg
mov
fildll
jns
dec
xchg
adc
dec
adc
inc
js
imul
and
test
es
shl
push
subl
shlb
dec
push
or
icebp
lods
push
mov
sub
or
pop
pop
out
repz
lret
or
scas
dec
sbb
cmpsb
pop
xchg
pop
dec
enter
ret
arpl
xor
sub
ja,pn
and
loopne
adc
fldcw
pop
xor
or
jmp
cmp
clc
daa
inc
call
loope
pop
push
cmp
xchg
fsubp
dec
add
add
movsb
stos
pop
jmp
negb
rclb
andl
xor
xor
jne
scas
mov
inc
jmp
mov
loope
sub
jo
jg
mov
enter
imul
cmp
push
stos
xchg
js
or
cmp
fs
imul
add
adc
pop
dec
arpl
xchg
add
push
pop
hlt
sub
lcall
add
nop
lods
inc
dec
mov
sub
out
add
ror
mov
mov
xchg
add
or
sub
subb
adcl
xchg
sbb
add
scas
mov
ret
int3
dec
iret
mov
pop
mov
enter
adcb
sub
dec
and
ss
xchg
jmp
mov
mov
sub
inc
mov
out
cmp
xor
lock
fs
mov
ss
cltd
ja
lahf
sbb
dec
rclb
cli
pop
loope
in
mov
repz
and
cli
xchg
sub
jns
and
mov
imul
cltd
data16
cmp
xor
xlat
jnp
sbb
jge
push
xor
and
js
loopne
xchg
push
sti
push
jb
mov
sahf
pop
add
xor
jb
or
push
adc
subb
xor
stos
dec
out
xor
ljmp
ret
lock
lds
xchg
test
jmp
sbb
jle
cmp
test
fbld
jnp
ret
loope
loopne
add
cmpsl
or
cwtl
or
or
fsubrp
loope
fs
sbb
jo
jns
adc
mov
repz
rcrl
push
pop
addr16
lahf
inc
imul
cwtl
push
or
cmp
push
mov
fildl
xor
pop
xor
sarl
pusha
add
test
pop
mov
cmp
xchg
jbe
test
out
icebp
xor
jcxz
jo
sbb
pop
es
push
sub
lods
fsubl
sbb
pop
ret
test
cs
push
xchg
pop
call
std
daa
in
jo
pop
cwtl
sub
dec
in
mov
and
imul
out
ja
and
xlat
jb
ficoml
mov
push
fidivl
and
das
pop
sbb
aaa
lods
cld
outsl
clc
icebp
mov
push
lods
push
std
adc
rcrl
movsl
push
push
adc
cmp
mov
dec
test
jmp
loop
inc
stc
cli
dec
and
fdivrs
leave
addr16
cmp
int
pushl
xchg
push
jae
gs
aas
mov
push
stos
lock
mov
adc
sub
icebp
jl
stos
mov
jecxz
add
inc
leave
iret
ljmp
adc
mov
push
cli
outsb
jns
xor
and
push
inc
push
inc
cmp
int3
and
lds
pop
xchg
push
push
outsb
test
loopne
test
jbe
or
push
xchg
push
repz
aad
push
push
and
or
inc
pop
push
jbe
hlt
jno
leave
sbb
xchg
or
mov
cmc
push
jmp
jmp
in
aaa
das
lds
and
add
inc
mov
lret
mov
ja
sbb
cmp
clc
adc
add
jns
cmpsl
lods
xorl
cmc
inc
aaa
mov
in
inc
loop
adc
lahf
cmp
fwait
sbb
cwtl
mov
adc
cmp
pop
por
aam
test
in
jle
or
push
enter
jb
cmp
lods
shrb
pop
das
stc
neg
mov
stos
jl
mov
or
lret
dec
icebp
pop
shlb
pop
clc
pop
insl
lea
xchg
cmp
mov
aaa
cli
sbb
mov
daa
lret
addr16
repnz
aas
es
push
jg
cmc
cld
jae
insl
fstl
bound
idiv
mul
pop
dec
lea
mov
push
push
idiv
mov
fnsave
adc
add
mov
pop
sub
ljmp
jecxz
push
hlt
jmp
fptan
hlt
psubsw
mov
xor
fmull
add
xchg
or
gs
outsb
in
movsl
sti
push
xchg
aad
push
int
andl
gs
xor
pop
test
in
out
pop
or
gs
notb
adc
cmp
xor
roll
imul
xchg
js
mov
mov
push
in
xchg
pop
or
int
pop
sbb
scas
cmp
popa
xor
mov
out
ror
clc
xorb
icebp
mov
jo
jge
imull
out
mov
jbe
fisttps
add
jno
fwait
mov
xchg
popf
mov
and
mov
iret
xchg
mov
ljmp
dec
out
pop
int
push
xor
shr
sti
hlt
mov
fistpl
test
sbb
cs
je
andl
sarl
jge
fiaddl
inc
push
jns
pushf
sbb
cmc
cmp
xor
loop
popa
push
xlat
leave
fists
scas
push
popf
and
and
mov
mov
subb
jp
scas
push
shrl
pushf
mov
push
stos
arpl
pop
rolb
jecxz
addr16
jle
loope
sbb
loopne
mov
inc
inc
movsb
movsb
scas
lods
mov
insb
cltd
repnz
jo
loope
jmp
insl
fninit
stos
push
les
adc
xlat
das
xor
jge
call
xor
fs
loop
rcrl
clc
loop
and
jnp
sbb
je
jns
mov
and
pop
xchg
mov
cmp
mov
lods
push
pop
push
out
scas
addr16
in
add
push
cwtl
inc
fdivl
mov
inc
test
inc
loopne
xchg
cmp
inc
lcall
xor
mov
xor
fs
ja
jae
and
sbb
iret
sbb
addr16
jno
inc
and
in
jbe
test
shr
sbb
daa
in
loopne
fistl
xchg
std
xchg
push
add
test
out
or
lods
stos
cmp
dec
leave
lods
push
imul
mov
ss
cmp
lds
push
add
lods
in
push
repnz
testb
aad
ljmp
xor
mov
xchg
bound
xor
lea
inc
cmp
mov
push
inc
and
add
ss
lods
jne
test
hlt
sub
loop
mov
pushf
lods
cmp
aad
aam
push
mov
scas
stos
inc
cmpsl
les
sbb
pusha
ss
fldt
sbb
test
outsb
loopne
inc
xor
iret
fsubl
ds
dec
addl
hlt
and
mov
jge
dec
mov
cmc
dec
push
dec
cmp
jmp
out
aad
insl
jb
inc
fstpt
lea
sub
jge
sbb
mov
out
jb
sbb
daa
and
jne
sub
pop
mov
mov
mov
icebp
mov
mov
mov
mov
hlt
lock
push
add
or
aad
and
push
repz
jl
push
addr16
jae
movsl
sbb
std
or
jmp
cs
ret
mov
ss
mov
out
inc
movsl
xor
xor
fisttps
pop
push
fninit
mov
lahf
into
cltd
or
call
jb
pusha
adcb
xor
sbb
orl
xor
cmp
stos
das
addr16
inc
in
push
ret
scas
popa
push
cmp
aam
arpl
loope
stos
nop
test
es
sbbb
cld
sarb
push
cmpsb
fstps
outsl
push
loope
lods
clc
dec
mov
ret
mov
mov
icebp
mov
sarl
pop
aam
bound
lock
scas
jg
leave
int
popa
lahf
jbe
jno,pn
arpl
push
xchg
xor
mov
xchg
in
sti
orb
pop
push
mov
test
xor
lds
cmpb
jae
inc
cmp
fs
cmp
dec
or
fcompl
xor
or
push
inc
add
push
aad
enter
jecxz
les
rorb
into
shlb
pop
xchg
in
inc
lcall
inc
sub
add
xchg
adc
inc
mov
and
sbb
pop
ret
pop
add
popa
es
mov
imul
cmp
mov
mov
mov
mov
sbb
pop
pop
mov
je
imul
xor
sahf
test
pop
or
loope
mov
push
scas
sub
lods
jle
mov
jl
out
xor
mov
aam
or
mov
xchg
xchg
iret
lcall
sbb
shr
jg
adc
or
enter
add
cltd
ss
shrb
push
dec
mov
inc
pop
aad
cli
sub
xchg
xor
lods
cs
imul
xchg
lods
es
push
fs
dec
fs
das
lods
mov
loopne
not
stos
repnz
add
xchg
hlt
ja
in
aad
jg
outsb
mov
xor
fists
mov
sahf
cmpb
bound
xchg
sub
mov
call
in
outsl
mov
jb
shrl
sub
das
cmp
popl
cs
add
jns
sub
js
or
sub
push
push
nop
sub
movsb
jno
or
test
xlat
enter
notb
out
mov
jp
push
mov
xchg
add
pop
loope
imul
lahf
mov
stos
push
mov
mov
add
xor
or
jmp
pop
xchg
loop
movsb
aaa
test
inc
lret
mov
cmp
jno
cmp
pushf
cmp
xchg
xchg
mov
lea
add
pop
push
cmc
stc
ret
es
inc
mov
add
add
add
lea
dec
jb
sbb
pop
lret
sbb
fimuls
mov
push
insl
add
mov
sub
or
push
sub
lock
or
sahf
sub
mov
and
std
sub
xor
push
sub
xchg
gs
mov
arpl
push
ljmp
stos
clc
test
and
pop
idivb
outsl
mov
sbb
push
push
xchg
dec
xor
push
xor
call
movb
pop
push
jecxz
addr16
mov
xchg
jge
xchg
xor
jne
pop
ss
add
push
xchg
mov
push
js
hlt
adc
shrl
push
adc
outsb
aaa
lock
sub
clc
nop
ds
pop
mov
cmp
xchg
xor
jl
les
inc
mov
popf
idivb
test
aas
dec
std
cmp
test
sbb
popf
inc
rolb
daa
pop
aas
mov
fadds
popf
mov
das
xor
jecxz
xor
inc
or
push
pop
xor
iret
fs
mov
insb
mov
pop
inc
pusha
mov
jne
stos
rcll
fisubrl
jo
or
stos
clc
push
js
xlat
inc
icebp
pop
cltd
xchg
inc
sahf
xor
cmp
jb
mov
inc
out
add
dec
fistpl
ds
cmp
dec
xchg
fs
xchg
inc
adc
inc
and
mov
insb
push
lock
xor
jge
das
and
in
jne
dec
popl
js
int
sbbl
cmp
xchg
adc
fsubrs
sbb
fbld
js
scas
jmp
push
add
sub
jno
xchg
test
mov
xor
pop
or
jbe
addr16
push
popf
xor
lods
fwait
data16
dec
lret
mov
pop
data16
inc
mov
imul
xchg
lahf
push
rcl
es
insb
mov
popf
or
inc
cld
cmp
mov
dec
xchg
not
push
or
cmp
sbb
inc
loop
xor
dec
inc
xchg
adc
divl
pop
test
adc
cli
hlt
add
xchg
add
loope
adc
jge
cmp
mov
or
jg
sbb
mov
arpl
movsb
fildll
cmpsb
fmuls
dec
mov
jle
xor
pop
mov
or
adc
mov
dec
and
pop
movsl
aam
push
lods
and
sub
insl
xor
hlt
scas
dec
xchg
add
stos
push
mov
cmp
mov
fildll
xchg
sub
ret
arpl
sbb
mov
cli
mov
pop
insl
testb
pop
push
cld
add
adc
or
xchg
mov
inc
jns
je
daa
pop
lods
cmp
or
jecxz
jne
bound
test
sub
enter
and
mov
addr16
inc
xchg
mov
inc
dec
dec
push
ret
mov
mov
inc
dec
out
dec
push
cwtl
out
bound
outsb
push
mov
xchg
push
and
shlb
lahf
push
mov
fwait
arpl
dec
mov
xchg
movsb
jge
xor
mov
mov
xchg
mov
pop
outsl
mov
lea
mov
mov
lock
fs
pop
sbb
shr
or
push
jno
inc
aam
inc
inc
std
sub
dec
lahf
or
jle
xor
adc
test
mov
xor
call
dec
andb
adc
cltd
insl
jmp
or
mov
jecxz
push
dec
sarl
icebp
sahf
sub
fmull
mov
push
sbb
dec
aam
jbe
stc
mov
test
loopne
jmp
adc
in
imul
adc
and
jne
adc
lcall
sub
mov
sbb
sbb
das
jae
pop
lahf
loope
dec
dec
jle
inc
cmp
stos
faddl
mov
mov
daa
mov
mov
push
adc
in
sub
mov
xchg
jo
dec
int
inc
in
in
scas
out
sti
jo
and
sbb
dec
mov
xchg
jns
xor
imul
mov
sahf
push
xor
push
xchg
inc
insb
bound
or
sbb
push
mov
sub
popf
inc
xor
mov
xchg
je
jne
jg
and
aad
and
bound
adc
xor
popf
adc
cwtl
push
bound
xchg
cmpsb
aaa
pop
mov
xor
pushf
mov
test
and
mov
xchg
mov
push
imul
inc
ret
cmp
shll
test
xchg
mov
mov
push
sbb
lea
cmc
cli
jp
jmp
cli
cmpsb
int3
jno
inc
mov
sbb
add
sbb
je
repz
push
imul
and
pusha
leave
je
inc
cmpb
popa
ljmp
rcrl
bt
scas
ss
insl
enter
mov
sbb
ss
or
sbb
dec
cli
jnp
repnz
push
cmpsl
or
pop
and
popa
into
mov
xlat
das
es
scas
push
pop
ds
cmp
inc
sub
andl
subl
dec
pop
pop
jbe
pushf
adc
aad
stc
js
addl
xor
sub
fistl
jno
jle
jg
jl
sahf
xor
mov
fisttpl
pop
int
mov
push
cmp
in
fwait
shlb
inc
jge
lret
jb
icebp
dec
inc
int
jo
push
mov
xor
dec
nop
mov
jo
and
jnp
xchg
jecxz
lods
jmp
cmp
dec
jmp
imul
sar
lret
xchg
mov
or
inc
iret
gs
notl
push
jmp
jae
rcll
insb
inc
xlat
pop
std
insl
jg
pop
pop
adc
mov
mov
rol
mov
lock
sti
and
xor
fsubl
lods
ds
or
adc
sar
push
jecxz
push
leave
mov
test
stc
or
fcomps
fisttps
xchg
test
or
fdivs
pop
cmpsb
mov
decb
test
call
sahf
xlat
mov
je
mov
ret
mov
sub
mov
les
cmp
or
outsb
lock
cwtl
std
xor
dec
das
add
and
jmp
clc
fstpl
xor
repz
lret
stos
cs
cli
enter
mov
mov
repnz
stc
lock
loopne
cmpsl
jge
lcall
cmp
cli
mov
leave
adc
push
mov
stos
sti
popa
out
movsl
lret
das
pop
adc
fwait
lock
test
adc
mov
cmp
repnz
sti
mov
sarl
or
jbe
popa
xor
aas
stos
icebp
and
sbb
loop
outsl
popf
mov
jne
dec
add
sub
mov
daa
imul
mov
shlb
out
pop
xchg
aas
dec
dec
mov
add
roll
sbb
push
jmp
testb
inc
jecxz
out
mov
pop
dec
adc
inc
pop
inc
lret
xchg
mov
xor
sahf
in
adc
insl
or
jmp
insb
jp
imul
dec
mov
or
lret
xlat
sti
inc
pop
fs
mov
xchg
ds
lahf
adc
adc
and
outsb
push
jecxz
pop
jg
inc
popl
div
pop
pop
into
stos
and
ret
xor
inc
and
out
movsb
xchg
inc
and
sub
mov
mov
pop
cld
dec
or
ret
mull
fs
nop
xlat
lock
and
fcmovb
adc
or
pushf
negl
popa
jbe
mov
clc
ljmp
int
jnp
mov
push
push
lds
mov
mov
push
add
sub
cmp
lock
jb
jmp
jne
fdivs
test
je
lcall
jmp
pop
into
shrb
push
sti
idiv
mov
fwait
jbe
xchg
mov
fisttpll
mov
pop
mov
add
clc
mov
fsubrs
mov
cs
dec
sahf
pop
aad
push
clc
les
pop
xor
pop
repz
int
cmp
lods
mov
mov
int3
call
jmp
sbb
fistl
mov
in
int3
xlat
cmp
scas
loope
push
pop
push
mov
dec
xor
ds
icebp
ret
and
and
sub
push
call
outsl
add
lods
pop
out
adc
mov
movsl
and
push
jo
aad
inc
icebp
into
inc
push
mov
lea
inc
add
jo
mov
les
in
mov
push
xor
mov
cwtl
add
testb
mov
mov
push
repnz
rolb
mov
pop
mov
xor
cmp
mov
fldcw
gs
fiadds
mov
mov
push
out
ret
fs
dec
lods
insb
mov
out
in
cmpsb
and
pop
mov
in
ljmp
cwtl
sub
sbb
nop
mov
cmp
or
test
test
or
xchg
jnp
mov
xlat
ljmp
dec
and
xor
popa
leave
and
and
push
data16
das
mov
jmp
cmp
mov
add
push
jae
cmc
callw
adc
xor
insl
mov
lock
scas
jno
inc
movsl
idivb
push
pop
mov
test
adc
pusha
inc
cmc
adc
ret
lock
hlt
popa
scas
gs
push
movsl
add
scas
ds
mov
mov
iret
mov
mov
fsubrs
xor
push
in
xchg
push
scas
inc
mov
fisubrs
adc
mov
inc
mov
mov
sbb
dec
or
sub
pop
inc
test
jns
pop
fcompl
sub
aas
and
pushf
adc
fimuls
ret
je
ds
push
dec
pop
daa
xchg
xchg
push
push
cmp
pop
push
push
mov
and
sub
xchg
shrl
loop
movb
xchg
std
dec
or
cmpsl
jmp
push
cld
mov
mov
mov
jb
test
sub
bound
inc
idivl
enter
push
sbb
sub
pushf
cmc
add
cmpsb
jp
roll
hlt
sub
das
imul
sbb
loopne
in
or
lods
pop
lret
mov
jne
inc
mov
xor
jl
xchg
cmp
push
leave
dec
push
cmp
into
andl
out
fidivl
mull
jns
adc
int3
mov
sub
jno
test
sub
dec
or
mov
imul
pop
sbb
mov
cld
fsubs
sbb
ds
in
stos
xlat
jb
or
bnd
dec
jg
inc
lret
inc
aaa
add
in
leave
cli
mov
pop
sti
push
mov
ljmp
mov
jns
push
push
sub
movl
js
cwtl
inc
es
mov
xchg
push
mov
test
dec
sub
add
int
xchg
push
xlat
xchg
ja
pop
mov
mov
pusha
fcompl
sub
aaa
pusha
mov
cmp
mov
mov
fs
lds
jl
leave
adc
je
pop
adc
loope
not
sbbb
arpl
xchg
shll
and
push
fdivr
sbb
jp
cmp
and
mov
mov
cmpsb
push
test
mov
jb
test
jg
lcall
popa
xlat
stc
pop
out
popa
popa
in
cli
mov
push
push
mov
cmpsl
dec
add
scas
mov
sbb
mov
das
je
pusha
js
jecxz
imul
hlt
imul
mov
inc
out
pop
adc
pop
js
xchg
pop
sub
std
cwtl
pushf
xchg
out
add
lods
jbe,pn
xor
in
or
jg,pt
outsb
or
leave
cmpsl
mov
mov
icebp
movsb
jp
push
rorb
scas
mov
scas
cmpsl
in
fcoml
jae
xor
aam
xchg
xor
sub
pop
in
iret
js
mov
adc
sbb
adc
lahf
mov
rolb
stc
sub
arpl
xchg
push
test
mov
into
jp
jecxz
xor
mov
mov
add
cwtl
cwtl
xchg
dec
jbe
jns
push
fdivp
or
pop
mov
lods
mov
jno
xchg
xchg
pop
cmp
xchg
add
iret
sbb
xchg
xchg
aas
pop
mov
fstps
addr16
lods
xchg
mov
ss
int
rorl
decb
outsb
mov
cli
cmpsb
push
adc
shl
lcall
push
lahf
add
and
cs
xor
push
cld
push
adc
rorl
cmp
mov
mov
push
ret
iret
xchg
sub
mov
add
pop
push
je
test
rclb
nop
mov
in
jae
insb
pop
dec
movsb
mov
dec
ret
mov
cmp
out
and
sahf
mov
jae
pop
and
ds
mov
je
enter
imul
and
rorb
jle
shlb
lods
jns
lock
jb
clc
aaa
imul
test
add
outsl
push
add
fsubl
int
sti
jmp
mov
lret
stos
fxam
sub
or
mov
rcll
imul
and
cmc
jnp
jle
push
pusha
sub
inc
push
int
jae
inc
sbb
or
xchg
xor
fistl
mov
mov
jno
andl
shrb
movb
pop
addr16
cmpsl
test
test
adcl
and
lods
jb
pop
outsb
sbb
aas
lea
jae
mov
add
pop
daa
sbb
es
adc
mov
add
dec
js
jle
mov
jae
jbe
pop
lahf
add
ja
inc
daa
pop
xor
dec
mov
mov
in
fmul
shll
repnz
mov
les
fld1
xor
jl
dec
xor
ret
iret
mov
push
cli
mov
mov
adc
xchg
mov
inc
xchg
imul
push
dec
in
mov
stos
fsubr
xorl
pop
ds
aam
iret
jg
dec
andb
adc
mov
push
or
orl
add
fistps
mov
cmpb
mov
push
aam
stos
sub
xchg
and
xchg
or
popa
in
imull
out
stos
dec
cs
jp
fsubs
mov
test
cltd
jl
and
lret
test
popa
mov
into
cmpl
std
or
pop
lock
xor
call
stos
dec
arpl
out
xor
xchg
test
and
lcall
xchg
push
enter
sbb
testb
sub
inc
mov
je,pn
adc
pop
fisubrl
jb
pushf
dec
mov
mov
sti
lods
and
sbb
pop
cmp
js
ds
push
add
enter
out
jmp
cmp
jmp
les
jbe
test
addr16
and
stos
pop
lock
push
sub
push
imul
sub
in
pusha
pop
cwtl
mov
pushf
push
faddl
mov
int
das
pusha
fisubs
or
lea
add
dec
sysret
jg
negb
adc
sub
test
call
pop
inc
loop
mov
lcall
outsb
xchg
jnp
pop
movsl
dec
mov
inc
lods
in
cmp
sbb
outsl
mov
mov
cmp
mov
push
mov
push
ja
and
cmp
cmp
xchg
iret
popf
int
stos
xchg
mov
sub
movsb
xor
out
adc
jg
pop
inc
mov
jecxz
fs
out
movsb
xor
std
push
pop
lahf
mov
jp
in
pop
andb
mov
sahf
enter
lods
rcll
lods
mov
negb
leave
test
scas
ljmp
lods
fninit
cbtw
dec
popf
psubd
or
mov
dec
js
aad
cld
mov
cmp
jl
pop
sub
addr16
insb
push
outsb
testl
data16
sti
jo
xchg
inc
jecxz
xlat
mov
out
rcrb
pop
inc
cmovs
dec
hlt
xchg
clc
int3
jns
aad
and
mov
sahf
imul
in
out
pop
mov
push
or
mov
ss
adc
mov
jp
les
rcl
push
cld
xor
inc
ret
add
jnp
inc
movb
xchg
fdivrp
sub
adcl
fdiv
in
pop
mov
push
cmpl
shl
xlat
xrelease
or
scas
dec
test
mov
and
xchg
jns
sbb
aas
cmpsl
xchg
xor
hlt
shrb
inc
mov
jl
adc
out
pop
scas
insb
mov
fimuls
mov
enter
sbb
pop
jge
lahf
lcall
fists
and
add
xor
insb
adc
xor
sbb
mov
inc
sar
mull
and
jbe
xchg
cmp
imull
mov
aas
aas
sbb
push
mov
fdivr
ret
stos
pand
sub
das
stos
mov
sub
inc
mov
pop
adc
negl
ss
mov
adcl
les
xchg
cltd
nop
jb
nop
xchg
jp
ljmp
cmpsl
ret
and
jp
js
push
and
addr16
aas
or
je
addr16
nop
jnp
dec
pop
cmp
cwtl
push
lcall
add
clc
jp
sbb
pop
cmp
adc
xor
arpl
pop
push
and
int3
in
mov
jge
adcl
fadds
rcrl
sbb
xor
das
mov
jmp
push
cli
cmc
push
push
insb
loopne
insb
daa
js
mov
sbb
mov
sub
pop
ja
aas
push
fisubrl
xlat
sarb
or
or
push
pop
in
inc
std
mov
jl
mov
mov
into
sbb
lahf
cltd
call
lock
rclb
loopne
dec
dec
xchg
mov
sub
lods
push
hlt
fcomps
xor
push
inc
imul
mov
stos
sub
xor
adc
lcall
or
pushf
mov
pop
fidivrl
mov
addb
mov
repz
mov
rorl
mov
mov
sub
es
push
cmc
inc
mov
daa
cmp
stos
leave
inc
test
fs
push
test
pushf
and
mov
adc
pop
and
fs
add
fistps
test
jmp
test
pop
xlat
jg
sub
pop
loope
xchg
sub
orl
lds
nop
inc
sbb
ret
fwait
jge
and
popa
addr16
lret
push
mov
in
fcoml
mov
sub
jno
and
test
ret
ja
add
sub
dec
test
push
test
add
roll
pop
aas
mov
pop
sub
scas
push
cmp
xor
rcrb
and
loope
fists
push
sbb
pop
fs
add
push
sub
xorl
xchg
jg
dec
and
arpl
aad
fistpl
test
rcrl
xlat
mov
rcll
int3
clc
push
cmp
lret
lock
add
pop
pop
cli
bound
jge
mov
ret
inc
ljmp
jo
pop
jb
pushf
out
dec
mov
mov
jns
loope
in
lcall
xor
xchg
jecxz
xor
out
sti
push
sbb
lods
jle
jns
adc
lds
cwtl
sub
loop
lods
mov
ljmp
stos
es
out
mov
out
mov
mov
sti
outsl
fcomp
add
sbb
mov
push
mov
sub
push
fpatan
aad
pop
mov
xchg
jae
out
loope
in
loop
push
push
mov
decb
arpl
jne
repnz
push
loopne
stc
call
push
sbb
push
and
jecxz
and
adc
pop
xchg
xor
cld
push
add
pop
xchg
shll
inc
xchg
push
shlb
in
push
xchg
mov
add
clc
cmp
insb
out
xchg
sbb
fdivrp
mov
push
insl
xchg
add
aas
cmp
and
or
sbb
lcall
pop
inc
sub
fs
cld
mov
sbb
or
xchg
inc
jle
xchg
lods
jnp
and
pop
mov
idiv
push
mov
mov
cltd
jb
push
inc
cmp
movsb
add
or
rcr
dec
fs
push
xor
inc
fwait
inc
sahf
sub
lret
pop
pop
lret
xchg
bound
xor
cld
add
movsb
cmp
push
sub
sub
xchg
clc
vpmulhuw
or
ret
std
scas
xchg
enter
int3
loope
mov
sub
stos
and
gs
imul
out
cmp
lahf
outsb
mov
dec
mov
push
aam
adc
lret
sbb
cmp
jmp
mov
es
adc
mov
pushf
add
fldcw
lds
cmp
xchg
jns
or
jae
fadd
xlat
or
push
xor
cmpsb
mov
xchg
enter
sbbl
daa
pop
stc
fldl
rorb
scas
stos
mov
mov
pop
adc
out
pmulhuw
sbb
outsl
push
aas
cltd
bound
aad
or
in
popf
je
mov
mov
xor
fs
imul
mov
lret
sbb
mull
inc
sarb
dec
cmp
out
fstps
xor
loop
xchg
icebp
cld
mov
fidivrl
ljmp
push
jmp
xor
push
jno
adc
outsb
push
xor
lds
mov
sub
mov
push
hlt
sbb
and
mov
fimull
jb
insl
jl
cmp
xchg
std
xchg
pop
ret
add
sub
lcall
or
cld
in
xchg
lcall
xor
cmc
in
push
addr16
cmp
cmp
dec
add
rorl
fdivs
xor
loop
pop
fcomps
push
fisttpll
mov
add
sbb
daa
fwait
rcrb
aam
push
sbb
and
or
je
inc
test
xchg
pusha
sahf
mov
out
fsubrp
shrl
iret
xor
pop
inc
add
imul
cmp
leave
push
repnz
cmc
push
loope
imul
movsl
into
or
fwait
dec
lcall
xchg
and
imul
aaa
into
mov
cmp
sub
fmull
jle
dec
xor
mov
xor
cmpsb
lods
dec
ljmp
test
fcomps
and
mov
cmc
ficoms
insb
scas
push
sbb
inc
dec
imul
inc
stos
dec
cmp
hlt
jns
jae
data16
cmp
xchg
test
test
mov
shl
dec
fmul
insl
dec
mov
lods
xchg
sbb
mov
cmpsl
dec
lret
xor
aam
incl
pop
jmp
adcl
xchg
add
and
jge
sbb
and
pop
fstp
jnp
dec
movsl
fbstp
adc
repnz
mov
jge
hlt
add
movsl
outsl
enter
jl
cmp
loope
pop
imul
popf
jbe
push
lds
lahf
jge
sbb
dec
ss
cmpsb
cld
pop
icebp
mov
cmpsl
inc
jne
and
addl
xorl
cmp
sbb
adc
jo
sub
adc
bound
aad
lods
sub
jae
repz
mov
cwtl
push
cwtl
adc
cwtl
dec
lods
mov
stc
leave
mov
loop
pop
lcall
sub
cmp
mov
mov
fisttps
pop
jp
mov
lea
enter
div
ss
stos
mov
pop
scas
ljmp
es
push
scas
insb
jne
or
dec
ret
into
aad
loop
lock
mov
frstor
xor
shlb
xlat
or
lahf
add
inc
repz
mov
adc
xor
scas
std
out
popa
imul
adcb
sti
sub
or
add
push
dec
jne
pop
aaa
sbb
scas
shll
nop
pop
into
hlt
shl
and
jnp
orl
sbb
out
push
push
adc
push
divb
xor
cltd
or
jns
xor
mov
cmp
lcall
or
lret
aas
jmp
lds
push
in
push
mov
decb
dec
mov
loopne
push
inc
mov
push
mov
cmp
jmp
ret
imul
scas
in
mov
les
xchg
gs
int3
add
pop
movsb
mov
and
inc
adc
jg
mov
pop
cs
mov
popa
out
int
fldcw
sbb
mov
ljmp
leave
inc
in
loop
sbb
rcll
loopne
loopne
cwtl
jne
aad
sub
fcoml
ret
ror
int3
push
rcl
fwait
pop
into
sub
add
pop
and
call
xlat
push
sbb
inc
pop
pop
push
scas
bound
mov
fisubs
jmp
mov
or
lock
mov
outsl
adc
mov
push
and
inc
mov
dec
shll
xor
pop
in
movsl
push
loop
ljmp
mov
js
xor
ljmp
push
fisttps
js
inc
xor
cmp
in
inc
mov
jp
adc
pushf
jp
dec
fs
out
repz
out
out
cmp
imul
sbb
insb
aas
mov
add
adc
mov
movsl
cltd
and
xor
aad
xlat
or
mov
iret
fsts
test
cmpsb
add
lahf
add
xor
push
popa
sbb
add
jl
pop
mov
lcall
test
pop
aam
add
pop
dec
xchg
inc
mov
sbb
and
mov
mov
aam
xor
das
jno
stc
or
subl
cmp
pop
fstps
inc
cmc
push
iretw
inc
dec
jg
aam
jle
addb
pop
cmp
xchg
or
int3
mov
stos
mov
mov
out
or
jnp
or
jo
insl
mov
and
and
push
cltd
xchg
adc
adc
add
popa
notl
into
or
inc
jo
call
ljmp
ret
sub
pop
and
mov
add
xchg
pop
mov
cmp
addr16
jp
adc
mov
add
mov
cli
nop
or
jo
nop
repz
xorl
xchg
mov
mov
cmp
add
mov
xchg
aam
movsl
cmpsb
ds
jle
sbb
adc
iret
out
dec
jbe
mov
aas
shrb
cmp
sub
inc
cmp
inc
mov
test
repz
pop
mov
mov
push
les
mov
aas
sti
add
add
arpl
shlb
addl
rcrb
shll
inc
mov
hlt
lret
je
leave
sbb
adc
cmp
pop
mov
int
addr16
cltd
mov
push
ljmp
cmp
fildl
lods
fistpll
into
xor
ret
sahf
dec
jle
fstpl
dec
insl
popa
arpl
add
lahf
mov
jmp
cli
mov
mov
adc
outsb
mov
insb
ljmp
int
subl
aaa
leave
int
or
push
add
pop
mov
js
arpl
inc
test
imul
scas
jl
mov
ret
std
jecxz
mov
iret
imul
ret
pop
inc
pop
cmpl
cmp
stos
cmpsb
cmp
cmp
dec
xor
xor
popa
inc
inc
pop
xor
mov
inc
mov
dec
push
cmp
adc
cmp
or
add
push
ja
loope
mov
or
adc
rorb
inc
imul
bswap
mov
sbb
pushf
rcrl
push
and
lock
or
or
cmp
sub
and
pop
hlt
rcrl
sbb
or
and
cmc
aaa
pop
cmp
mov
ss
es
adc
push
mov
out
sbb
mov
ss
push
int3
gs
lea
int
out
div
js
pop
cwtl
jmp
push
or
pop
add
xlat
adc
inc
xchg
xchg
xchg
dec
leave
mov
lds
pop
xchg
and
stos
and
mov
popf
sub
inc
mov
pushf
insb
fdivrl
leave
lcall
dec
fwait
ret
popa
xor
shll
adc
sbb
mov
mov
pop
les
sbb
test
mov
test
pop
lods
jae
sti
dec
in
cmp
rorl
inc
inc
outsb
ja
inc
iret
popa
mov
stc
xchg
cmpsb
xchg
sbb
lds
rorl
mov
dec
insl
aaa
xchg
sbbl
adc
repnz
imul
cltd
and
lret
add
addr16
ret
pushf
sbb
xor
es
stos
mov
inc
xor
shll
cmpsl
lret
cltd
jb
and
fsub
repz
inc
lret
test
push
bound
in
repnz
lahf
xlat
stc
sbb
jp
out
or
dec
out
nop
mov
xor
cwtl
xchg
push
mov
ss
push
sahf
push
in
stos
shl
nop
mov
mov
ret
in
push
nop
dec
xor
mov
lahf
mov
push
gs
inc
fdivrl
sub
notl
mov
push
sti
loope
shl
mov
mov
cmpsl
lahf
push
push
push
or
mull
jns
insl
add
mov
arpl
mov
in
add
pcmpeqw
cmp
and
aaa
or
dec
sbb
daa
inc
add
push
test
or
jl
add
iret
add
dec
ss
nop
fdivrs
add
aad
call
sbb
mov
pop
and
mov
adc
pushf
cwtl
add
inc
test
adc
push
andl
mov
pusha
jle
enter
xlat
lcall
jmp
loope
and
and
xchg
sbb
popf
dec
inc
aam
mov
fldenv
imul
jbe
xor
inc
mov
xor
addr16
jae
pop
in
call
xchg
push
loopne
inc
scas
shll
sbb
insb
or
stos
call
out
adc
xor
je
out
shl
imul
pusha
in
cmp
aas
int3
cs
jns
into
scas
adc
jp
clc
sahf
int3
lds
scas
leave
sahf
je
pop
add
and
in
add
inc
inc
xor
pop
orl
jb
add
dec
ret
mov
jne
arpl
test
mov
filds
ret
ss
push
inc
push
shlb
xchg
js
push
xor
fcomps
bnd
test
and
movl
mov
repz
add
push
add
sbbb
lcall
es
add
mov
push
mov
loopne
sti
sbb
loope
lret
out
fildl
lods
sub
cmp
sbb
jno
subl
mov
push
cmpsl
mov
out
pushf
cmp
push
jecxz
in
mov
adc
adc
mov
pop
cmpl
inc
std
roll
aam
push
mov
add
push
movsb
inc
mov
cmc
dec
jl
fs
or
rcl
inc
call
int
xchg
adc
inc
mov
mov
adc
dec
xchg
pop
hlt
xchg
push
mov
jnp
mov
add
cmpsl
sbb
fisubrl
leavew
iret
cmp
sub
add
adc
dec
sahf
inc
lods
mov
mov
add
mov
les
cld
mov
mov
jp
scas
add
movsb
mov
pusha
stos
pop
jne
mov
into
sub
jecxz
pop
test
inc
xor
xchg
pop
pop
cs
dec
xlat
leave
xchg
add
es
popf
jle
inc
cmc
testl
sbb
sbb
and
bound
popf
jl
bound
fildl
cmp
enter
scas
in
push
and
push
push
in
lods
jecxz
fdivr
scas
sbb
test
and
clc
decl
cwtl
test
jg
adc
loop
lcall
fdiv
inc
and
jl
xor
in
fidivrl
inc
mov
js
data16
bnd
push
addr16
add
cs
fwait
xchg
or
fs
call
aam
insl
mov
or
lods
lret
movsb
mov
xor
fimuls
and
push
sub
xor
fldcw
imul
and
mov
push
fs
cmpsb
mov
adc
cmpsb
icebp
daa
inc
dec
in
int
xor
adc
sub
dec
mov
or
mov
scas
scas
jno
mov
inc
pop
sbb
out
test
cmp
pop
push
dec
adc
jmp
test
push
adc
fildll
mov
mov
je
xchg
adc
js
clc
or
adc
test
jns
adc
cmp
add
xchg
pop
push
and
int
mov
mov
stos
mov
push
inc
mov
mov
mov
mov
adc
je
xor
test
xchg
clc
xlat
lock
pop
insb
cwtl
mov
pop
mov
mov
imul
mov
mov
sub
xlat
pop
out
pop
jo
or
dec
and
ffree
xchg
imul
mov
sbb
jne
add
cmp
data16
sub
cli
adc
dec
jg
sub
rolb
lahf
jle
lahf
xchg
test
je
out
xor
sbb
dec
es
test
sbb
fs
push
std
pop
pop
movd
mov
rcrl
sub
jno
sbb
and
and
fdivrl
mov
rcrl
sbb
mov
adc
cmp
outsl
mov
lds
push
movsb
inc
repnz
popa
ds
xor
rorb
lock
push
mov
loope
sub
or
mov
cmpsw
pop
add
ja
dec
rorl
nop
jo
lods
add
or
test
xchg
bound
sbb
jo
cmpsb
cltd
mov
fldcw
cmc
outsl
push
jge
js
cwtl
jno
in
jmp
in
mov
mov
sub
outsl
leave
pop
lea
leave
in
pop
fldt
xorl
mov
push
fs
movsb
sub
mov
lea
in
cmpsl
xchg
call
dec
sub
xchg
add
pop
imul
jle
xor
ror
mov
mov
xchg
pop
cmp
ds
jmp
test
cld
push
out
inc
or
scas
icebp
jbe
inc
fdivl
loopne
jmp
xor
shll
es
mov
out
jp
inc
sub
mov
adc
fcoml
inc
mov
mov
cmpsl
sbb
shlb
push
ds
add
or
cltd
push
sbb
add
jmp
roll
shll
cltd
lea
adc
jg
mov
mov
rorb
loope
daa
adc
mov
les
fisubrs
roll
xor
loop
fwait
adc
dec
hlt
xchg
dec
jmp
arpl
sbb
loopne
adc
mov
in
sbb
sti
cmp
and
sti
addr16
xor
jle
mov
pusha
jge
cmp
int3
out
cmp
insl
cs
inc
int
sahf
jmp
mov
aam
clc
mov
ds
lret
mov
outsl
mov
rcl
xor
dec
lret
jae
cld
mov
loope
ss
test
mov
test
sub
push
xchg
outsb
jge
ja
loopne
in
fcmovb
push
js
out
or
lcall
sbb
or
push
xchg
cmp
fsub
lret
icebp
clc
mov
clc
and
sbb
pusha
mov
lahf
inc
shll
inc
and
insl
adc
cltd
dec
dec
pop
inc
aas
movsb
adc
push
iret
xor
ja
data16
sub
add
push
lods
movsl
sub
push
mov
push
je
pushf
mov
movsl
add
shrl
or
out
sub
mov
xchg
orl
mov
mov
jge
dec
inc
aam
jecxz
xchg
addr16
les
popf
addl
mov
ljmp
aas
or
xchg
or
mov
sub
fisubrs
xchg
ret
out
into
cmp
mov
adc
sbb
pop
and
cmc
cwtl
xor
inc
dec
imul
bound
sub
cmp
div
pop
pop
jp
test
leave
pusha
add
push
aaa
cltd
repnz
aaa
mov
adc
rcrb
and
push
dec
ss
in
ds
lods
mov
shlb
aam
lods
in
mov
cmpb
imul
in
addr16
pusha
push
mul
fidivrs
andl
sub
aad
adc
xor
fadds
scas
stc
int
push
jl
cmp
movsl
in
dec
or
adc
pop
jo
mov
mov
or
gs
pop
loopne
into
push
push
xorb
dec
jle
jmp
in
fs
in
rolb
jno
insl
adc
popl
std
jp
and
dec
pop
leave
mov
sbb
cwtl
inc
adc
adc
je
sbb
lcall
in
lds
icebp
and
stos
jg
add
imul
xchg
mov
ret
jle
and
lahf
stos
sarb
cmp
mov
mov
and
lret
mov
jb
cmp
mov
sbb
xchg
fnstenv
mov
cmp
sbb
int
je
shrl
ret
dec
scas
mov
arpl
add
add
lods
sub
fsubr
prefetchwt1
or
jo
cmp
mov
pop
iret
bound
rol
mov
shll
cmp
mov
repnz
daa
fstps
aad
and
faddl
cmpsl
cmp
jb
push
inc
pop
xlat
out
or
dec
mov
movsb
sbb
push
mov
ret
and
add
dec
cmp
clc
push
xchg
push
xchg
mov
pop
add
xor
outsl
fmuls
xorl
ret
lret
mov
cmc
in
pop
imul
jnp
add
add
xor
