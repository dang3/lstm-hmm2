insl
movsl
pop
add
add
or
insl
movsl
pop
add
add
add
add
notl
mov
rorb
std
mov
popa
fwait
and
lods
mov
mov
das
insl
iret
iret
sbb
dec
scas
outsl
repnz
adc
jmp
movsl
ja
mov
sti
iret
xchg
mov
sbb
add
add
scas
dec
ret
lea
and
and
inc
es
xlat
daa
das
arpl
pop
pop
popa
xchg
dec
ss
cmc
push
adc
pop
mov
mov
loope
cli
dec
imul
push
ss
adc
push
adc
jo
cwtl
lods
icebp
jp
ficoml
out
mov
inc
sbb
xchg
hlt
fisubrs
fdivl
aad
cld
or
jle
add
inc
xor
das
and
shrb
dec
loop
lret
jne
cmp
scas
jns
mov
aad
push
in
rcr
jb
outsb
add
mov
push
fbld
pop
add
jbe
push
jg
dec
rcrb
xchg
je
mov
out
hlt
fwait
add
push
sub
pop
mov
movsb
pop
xor
mov
or
movntq
pop
push
push
push
out
xor
dec
adc
or
jb
in
push
dec
mov
push
fdivrs
and
rorl
ficomps
out
in
fidivrl
push
fisttps
loopne
push
jl
mov
orl
push
test
push
sbb
icebp
jo
inc
mov
lea
movsb
popa
cmp
pop
xorl
in
dec
pop
jns
in
aad
add
mov
mov
in
repz
pop
inc
frstor
subl
imul
in
inc
mov
mov
inc
out
subl
js
jmp
out
add
jne
call
add
ret
pop
scas
cmp
in
cmpsl
ja
or
popf
movsb
cli
in
and
xchg
xchg
and
daa
sub
push
stos
fstl
sti
push
mov
push
pushf
jmp
lock
cmp
and
jno
mov
xchg
sub
outsl
sub
dec
mov
pop
and
sub
inc
orb
or
add
sti
and
push
dec
sub
mov
cmp
repnz
or
add
cmp
lea
push
imul
xor
out
or
mov
pop
mov
adc
pop
inc
xchg
and
sub
jb
xor
adc
xchg
xchg
movsl
scas
or
dec
xor
icebp
dec
xor
inc
lea
mov
lds
or
add
xor
or
out
cmp
leave
ljmp
sti
fistps
mov
imul
or
add
std
mov
and
out
and
cmp
or
lods
add
push
je
adc
push
xor
and
ret
xchg
cmp
loop
loope
push
ret
dec
addb
popf
mov
or
jb
push
adc
pop
fwait
xchg
lret
lcall
mov
imul
dec
out
leave
inc
out
imul
ds
faddp
fidivrs
adc
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmp
add
mov
mov
in
mov
jne
sahf
push
jecxz
fs
pop
int
xorb
xchg
push
fucomp
push
lods
mov
repz
ss
mov
jp
push
sbb
ficompl
xchg
lods
push
and
and
subb
jnp
out
inc
xchg
xchg
xchg
or
mov
push
push
out
aaa
orl
lret
sahf
jbe
cmp
xor
xchg
int
out
mov
mov
outsl
jmp
push
inc
int
scas
push
dec
pop
in
lea
mov
dec
or
fldcw
pop
adc
push
insb
xchg
mov
insb
icebp
shlb
pop
call
jbe
lret
fcomi
and
inc
cmpsb
xchg
addr16
dec
inc
pop
jecxz
inc
jns
adc
inc
mov
mov
fbstp
shll
bound
lock
rcll
cli
shrl
jle
fldenv
imul
adc
popa
lds
dec
add
lret
fcmovbe
clc
xchg
fsincos
pop
mov
mov
loope
mov
pop
or
add
add
pushf
icebp
loope
jle
jmp
sbb
pop
rorb
adc
sub
fldt
xchg
mulb
adc
pop
ds
xchg
mov
data16
sub
scas
cmp
daa
lea
xchg
push
adc
xchg
js
clc
loop
inc
cmp
mov
xchg
adc
movsl
jne
andl
and
test
ljmp
shrl
sti
xor
mov
sub
add
jo
in
pop
pop
mov
sub
addr16
outsb
mov
cld
adc
sub
mov
lcall
fucomp
aas
das
cmpb
pop
notl
call
pop
daa
dec
bound
xchg
inc
pushf
aad
add
push
and
push
sub
cmp
adc
push
imul
arpl
daa
push
sbb
addr16
add
divl
imul
or
int3
and
daa
fidivl
jl
push
sahf
lret
lock
out
and
int3
jmp
aad
repz
add
int
add
stos
daa
icebp
in
out
pop
push
xor
mov
sub
mov
mov
fdivrs
iret
add
mov
mov
adc
mov
adc
pop
cmc
mov
xchg
xchg
sar
push
jae
jns
aam
bound
mov
into
lcall
leave
xorb
xchg
int3
pop
das
loope
nop
mov
push
dec
hlt
cwtl
in
or
fbstp
xor
add
xacquire
pop
testl
decb
outsl
pop
add
sub
andl
pop
pop
mov
add
cmpsl
pop
loope
imul
lods
cli
imul
inc
sbb
cltd
mov
dec
and
push
push
push
sub
cmp
dec
jmp
cmc
cmpsl
iret
aas
sub
xchg
mov
flds
inc
lock
add
mov
jbe
je
jmp
mov
xor
daa
adc
shl
add
xchg
pop
xchg
popw
mov
push
or
jo
stos
aaa
andb
mov
mov
daa
sbb
ja
fidivs
jne
mull
in
loopne
push
sub
in
pop
adc
jne
insl
ret
ret
call
pop
inc
subl
out
imulb
popf
xchg
push
adc
mov
loop
jo
mov
ficomps
lcall
xchg
mov
push
rcrl
push
shlb
or
hlt
xchg
pop
pop
shll
xor
sub
inc
mov
aam
push
popa
or
fildll
lock
jae
push
pop
rcr
xor
jge
nop
ss
popf
inc
int3
dec
gs
outsb
data16
jae
sti
xor
hlt
mulb
loope
movsl
push
dec
ret
les
cmp
ss
cld
pop
push
cmp
push
jle
sbb
xor
jge
fstl
push
cmp
adc
pop
icebp
cltd
aaa
adc
xor
lcall
fisubrs
out
sbb
cs
dec
aaa
repnz
ret
sbb
stos
xchg
rcrb
repnz
jns
fs
push
outsl
repnz
ss
adc
mov
add
mov
ret
xor
shrl
adc
jo
mov
add
xchg
dec
adc
data16
mov
jo
mov
push
push
mov
fwait
shr
test
inc
or
mov
sub
aas
lock
pop
les
adc
outsb
loopnew
in
clc
in
inc
loopne
icebp
scas
cmp
pop
pop
fs
lret
cmp
xorb
addr16
ds
mov
jge
cmp
cmpsb
adc
xchg
loope
shr
pop
dec
leave
outsb
loop
xchg
into
push
test
xchg
adc
push
jne
and
xor
mov
mov
loope
les
movsb
sbb
loop
cmp
aad
sbb
lock
ret
sahf
sbb
loopne
lds
in
decb
ss
ds
cld
stc
out
aaa
leave
push
pusha
imul
adc
dec
xor
and
pop
jge
dec
jnp
mov
inc
cs
mov
mov
int3
add
xor
sbb
and
mov
xchg
push
inc
or
mov
jle
ljmp
in
gs
js
call
cmp
jge
movsb
xor
pop
dec
pop
pop
in
push
pop
mov
in
rcrl
mov
bound
testl
mov
mov
sahf
add
add
loop
sub
xchg
pusha
shrb
pop
aaa
dec
mov
mov
addr16
xchg
adc
insl
push
es
stos
sbb
or
dec
stc
repnz
mov
test
out
aad
outsl
xchg
cwtl
pop
jbe
sub
adc
notl
push
data16
mov
xchg
mov
fcmovb
xor
outsl
lock
cwtl
jne
dec
xchg
iret
sub
rcrb
pop
mov
mov
jg
insl
pusha
jp
addr16
faddl
mov
sbb
xor
dec
aas
mov
out
sbb
leave
push
fiaddl
mov
dec
fcoms
mov
cmp
loop
popa
mov
push
mov
and
xchg
movsl
insl
xchg
jg
lds
add
test
ljmp
xlat
ret
lock
xchg
pop
xor
sbb
pop
sbb
ds
lahf
push
aad
pop
xchg
and
scas
lods
pop
push
daa
ds
inc
sbb
cmp
cltd
mov
push
lret
nop
xchg
dec
mov
jp
push
out
push
mov
mov
mov
fsub
out
mov
addr16
aad
aas
stos
ss
push
aad
mov
pop
cmp
lods
aas
jp
jb
cmp
mov
jmp
lea
aad
je
cmpsb
mov
push
xchg
sbb
mov
popf
cmp
cli
nopl
adc
cmpsl
ror
sub
and
add
sub
in
jmp
stos
insl
add
aas
and
stos
dec
inc
iret
scas
jmp
out
icebp
daa
loop
sbb
inc
scas
mov
mov
sbb
mov
sti
fs
sub
mov
push
test
ss
xor
lret
inc
arpl
cmp
lock
inc
in
int3
push
or
fs
iret
fisubrs
aas
fwait
sub
pop
in
pop
add
jmp
mov
cmp
out
cmp
mov
bound
imul
inc
mov
loope
orl
aas
mov
mov
sbb
pop
popf
inc
ja
cli
stc
mov
fldenv
inc
mov
ret
push
push
mov
or
mov
cs
int3
shll
dec
adc
in
inc
insl
subb
and
ret
into
sub
aam
or
or
js
adc
les
outsb
lds
leave
lret
testb
pop
jae
adc
in
mov
popa
test
lret
lret
mov
cmp
push
je
or
sub
std
arpl
leave
adc
std
lods
pop
dec
lcall
lret
stc
xor
cmp
mov
pop
clc
inc
jge
mov
rcrl
push
inc
ret
inc
leave
jns
dec
sub
outsl
sbb
pop
cmp
lcall
mov
mov
call
mov
scas
sub
xor
sbb
imulb
bound
xchg
pop
jns
cs
and
jo
ss
pop
into
fisubl
xor
mov
cmp
mov
ret
mov
and
add
mov
or
cmp
inc
ret
pop
int3
test
mov
xor
das
scas
ljmp
xchg
mov
faddp
mov
dec
outsb
addr16
or
dec
dec
std
in
jae
dec
cmp
jnp,pt
inc
sti
push
mov
cmp
imul
jo
and
push
sbb
push
push
orb
xchg
loope
lods
int
xchg
out
dec
scas
jne
sub
lret
push
faddl
pusha
xor
fs
pop
push
push
nop
cmp
sub
xor
leave
stc
subb
in
cmpb
xchg
enter
and
cli
mov
imul
cmp
mov
ret
push
sub
clc
push
cmp
subb
stc
bound
xchg
fwait
dec
in
aad
and
pop
lret
inc
sbbb
and
add
jae
or
mov
pop
int3
cmpsb
jg
shrb
fwait
mov
sub
fildll
or
std
stos
adc
sub
push
fdivrs
dec
inc
xchg
outsb
pop
outsl
mov
adc
or
sbbl
pop
pop
inc
clc
in
in
pop
repnz
cmp
or
jg
cli
test
fidivl
jbe
xchg
fadd
nop
add
nop
jno
sbb
dec
inc
sbb
rorb
and
cld
leave
or
incl
mov
jbe
push
int
fiadds
lock
sbb
lods
push
adc
imulb
inc
out
jmp
jo
shll
mov
pusha
add
int
lcall
mov
mov
rcll
sbb
gs
push
iret
lods
insb
mov
push
fstl
icebp
ret
mov
or
or
push
sbb
xor
push
dec
mov
in
loopne
cmc
mov
jge
sub
outsb
jnp
adc
push
inc
sub
xor
pop
mov
icebp
dec
jle
insb
jecxz
out
dec
xchg
outsl
rolb
sbb
pop
xor
js
rorl
daa
cmc
jmp
mov
pop
adc
pop
in
adc
jge
ret
out
push
aam
mov
in
int
repnz
into
jns
pop
or
lahf
movsl
adc
imul
movsb
xor
xlat
inc
adc
inc
mov
push
push
jno
xchg
out
jo
mov
push
ljmp
in
jnp
pop
jl
lahf
lods
cmp
cmp
repz
pop
bound
push
and
icebp
push
mov
sbb
sarb
rcrl
es
repz
ja
mov
js
lods
mov
xor
les
into
mov
cwtl
add
dec
repz
out
ja
push
mov
xlat
mov
jno
cmc
push
pop
mov
dec
add
xchg
scas
fistl
pop
xlat
sbb
push
in
mov
stc
sub
mov
mov
rolb
fsubl
cwtl
inc
es
xchg
movsl
pop
xor
adc
inc
adc
adc
mov
push
inc
lret
into
xor
add
mov
mov
jnp
pop
stc
cmp
jmp
fstl
repz
or
decl
cs
gs
and
cwtl
mov
mov
daa
xor
cmpsb
cmp
pop
or
jns
nop
shlb
mov
aaa
inc
mov
sbb
mov
shll
mov
sbb
cli
gs
gs
jmp
outsl
push
mov
mov
leave
mov
in
pop
insl
sub
add
int3
xchg
and
mull
sub
shl
mov
test
inc
leave
rcr
push
add
inc
loope
cwtl
std
aaa
addr16
cmp
outsl
test
hlt
dec
or
dec
cmp
push
pop
jo
lret
xchg
inc
xor
call
xor
ss
int3
mov
fsubl
outsb
repnz
jge
aad
sub
cmc
jmp
aaa
and
mov
sub
pop
xor
fbstp
pop
shl
mov
hlt
das
imul
cld
inc
arpl
iret
out
adc
minps
les
mov
add
add
lcall
xchg
cs
pop
mov
aaa
fs
int
adc
xchg
xchg
fwait
enter
or
mov
je
sbb
fwait
sub
test
out
enter
aad
outsl
mov
and
shrb
push
adc
and
rclb
clc
cld
jnp
sub
test
shr
dec
push
or
out
jl
out
mov
clc
and
pushf
jnp
push
iret
daa
enter
cmp
fnstsw
loop
and
vcmppd
dec
jb
mov
push
sbb
push
imulb
aaa
jnp
adc
mov
mov
mov
insb
xchg
das
loop
xchg
push
lcall
inc
dec
mov
stos
mov
rorb
mov
pop
sub
ret
pop
insb
enter
loopne
test
ljmp
cmp
arpl
out
adc
xchg
ja
pop
push
mov
out
pusha
stc
adc
out
lods
lret
daa
insl
mov
xor
fwait
out
mov
and
push
sub
nop
ret
je
pop
adc
ret
jns
pop
push
cs
movsb
sahf
sbb
inc
fsubl
sbb
in
mov
fstpl
pop
loope
push
mov
jmp
ds
jne
and
mov
mov
hlt
inc
or
add
sahf
cmpsb
xchg
dec
incl
arpl
dec
in
subb
out
xchg
inc
paddusw
cmp
mov
add
mov
xor
ss
lea
jge
int3
es
xor
xorl
and
xchg
notb
lock
sbb
lea
and
cltd
movsb
cmpb
xchg
mov
stos
xchg
loope
dec
sub
insb
mov
push
ret
sti
xchg
loop
sbb
add
mov
sbb
jnp
or
clc
xlat
pop
push
out
aad
mov
xchg
mov
push
dec
test
in
inc
cmp
dec
jb
popf
shll
push
out
loop
push
fisttpll
mov
popf
ljmp
add
mov
imul
aad
aaa
sti
mov
gs
cwtl
mov
dec
je
dec
pop
into
and
es
test
les
cmpsb
cmpsl
xchg
fisubs
push
cmpl
jns
scas
adc
mov
jmp
jecxz
arpl
je
into
cmp
scas
push
and
stos
sbb
cmp
xor
iret
mov
test
out
pop
testb
scas
cmp
iret
testl
shrb
jge
push
cmp
das
ret
int3
rcll
and
add
dec
pop
jae
inc
mov
jmp
jnp
pop
jle
jg
cltd
icebp
inc
or
pop
mov
jmp
push
dec
push
stos
in
cltd
mov
mov
push
lahf
leave
in
pop
insl
xchg
inc
mov
mov
xchg
fdivrl
add
sti
fisubrl
push
add
mov
ss
das
mov
in
mov
adc
mov
sti
fldl
fadds
cmp
mov
pop
sbb
ds
ficoms
or
cltd
aad
in
inc
sbb
pop
icebp
xlat
lcall
mov
cs
jmp
test
adc
daa
adc
popa
add
push
pop
cmp
outsl
mov
imul
adc
and
lock
and
stos
add
or
mov
js
xchg
push
aas
inc
out
add
addr16
pushf
sub
sbb
xlat
xor
negb
xor
xchg
or
cmp
dec
sbb
jg
cmc
cmp
int3
push
icebp
mov
mov
dec
xor
pop
xor
lahf
add
add
cld
sbb
sbb
push
sbb
or
inc
lods
jae
inc
arpl
rorb
pop
call
inc
into
mov
mov
push
sbb
lret
sub
xor
inc
mov
les
nop
sbb
call
and
adc
js
mov
adc
mov
fstl
cld
push
mov
loope
je
sbb
or
pop
sbb
aam
stos
mov
pusha
jno
sbb
sahf
cmp
mov
icebp
cmp
jns
cld
jno
jo
xor
arpl
mov
or
sub
sbb
stos
and
fsubr
lds
rclb
popa
in
loopne
mov
dec
dec
imul
imull
ret
xor
inc
inc
bound
jmp
pop
ja
adc
push
mov
pop
add
mov
pop
sub
ret
adc
xchg
sbb
es
cmp
push
mov
repnz
ret
mov
imull
xor
fsubs
jmp
stos
push
sub
data16
shrb
nop
mov
push
push
sub
outsl
lahf
nop
nop
test
stos
into
mov
xchg
popf
push
fistpll
int3
inc
movsb
push
jns
stos
idiv
clc
xchg
movsb
fisubl
movsb
push
ror
mov
std
push
push
arpl
cmp
sarl
push
out
in
fsts
pop
mov
bound
jns
jo
or
cmc
sahf
mov
inc
push
and
xchg
cmp
popa
out
jae
insl
dec
jl
outsb
mov
ds
xorb
into
into
push
dec
int3
clc
addr16
jbe
cmpsb
lods
xchg
dec
test
scas
lea
push
lods
dec
lret
pop
clc
inc
mov
cmp
add
daa
or
sub
mov
cmpb
cmpsb
add
jg
imul
add
sub
push
leave
int
or
add
les
and
push
imull
xchg
xchg
leave
and
aaa
call
js
push
push
adcl
lods
pushf
mov
jmp
lcall
sahf
mov
sub
js
or
push
adc
adc
dec
adc
and
and
stc
sub
decb
ds
stos
je
or
aad
jle
adc
push
das
movsl
xor
mov
fs
inc
pop
pop
out
fcoml
shr
fmulp
xchg
push
adc
pop
test
popa
sbb
mov
pop
jg
xchg
movsl
cmp
iret
mov
popf
dec
sub
jmp
or
cmc
jecxz
mov
in
int3
inc
pop
pop
adcl
fsubrs
andb
nop
cmp
xchg
mov
das
jmp
push
cs
je
sbb
cmp
sub
cmp
sub
outsb
inc
mov
imul
popf
adc
mov
hlt
xchg
cmp
incb
cmp
popa
popa
gs
xchg
int3
or
out
and
mov
lock
jb
mov
adc
add
lahf
sahf
aam
xchg
xchg
jb
sub
dec
jp
jmp
or
jecxz
add
xor
pop
jbe
mov
xchg
pusha
pop
cmp
test
lcall
cmpsl
cmp
or
sbb
jle
outsb
enter
adc
mov
adc
call
jns
fdivp
sub
test
cmp
movsb
repnz
dec
inc
movsl
cmp
jo
sbb
sahf
pop
dec
sbb
dec
adcl
ret
push
sub
push
loopne
push
mov
mov
pop
jo
xor
sarb
add
jge
stc
xlat
nop
fistpll
jo
and
sarl
das
and
push
push
lods
rorl
inc
nop
jmp
adc
dec
fwait
iret
mov
test
in
jnp
repnz
enter
xchg
int
ds
out
hlt
ss
arpl
lret
js
mov
rorb
sbb
xorb
stos
call
aaa
jg
paddusb
push
sti
ds
icebp
aam
sbb
mov
ret
sarb
ljmp
fcmovnb
dec
std
sbb
add
arpl
sbb
dec
jae
ljmp
cwtl
pop
lock
les
mov
xlat
or
adc
dec
cld
fistpll
test
jecxz
dec
pop
cmp
mov
ljmp
and
push
sbb
pusha
jbe
lahf
nop
inc
xchg
lods
ud0
inc
leave
push
add
jb
jecxz
int3
lds
stos
mov
je
mov
push
mov
ds
mov
add
mov
fidivrl
ljmp
jg
mov
stos
repnz
inc
idivb
inc
pop
js
popf
pop
lahf
xchg
pop
inc
dec
les
jecxz
sub
lods
mov
pop
adc
and
xchg
loop
aas
aad
mov
push
mov
rolb
jecxz
in
mov
js
or
and
into
add
cs
enter
adc
out
mov
add
mov
repz
dec
testl
jp
pop
jb
scas
call
in
scas
adc
mov
dec
je
xchg
adc
ds
mov
stc
leave
xchg
shl
mov
sbb
and
pusha
fsubl
cmp
fstl
ss
mov
bound
lods
xchg
repz
bound
into
sub
xchg
cwtl
out
mov
mov
sub
cmpsb
fs
nop
push
popf
es
cwtl
jmp
ret
push
loope
fisubs
push
mov
shlb
jne
nop
ljmp
inc
adc
mov
mov
fimuls
jecxz
sub
in
xor
aas
dec
out
inc
push
test
pop
or
lret
and
or
mov
lret
addr16
add
in
xlat
jle
pop
lret
les
xchg
scas
push
xchg
mov
mov
sub
loop
push
ds
inc
inc
push
cmp
insb
cs
dec
dec
in
sbb
jnp
adc
rclb
addr16
clc
addr16
adc
push
ret
mov
xchg
lods
shll
push
cs
pop
add
movsl
sbb
andb
mov
repnz
inc
jbe
mov
mov
incl
out
inc
ds
fldl
pop
pop
hlt
mov
cltd
xlat
mov
xchg
jmp
pop
lcall
cmp
mov
aad
dec
popf
test
fistpl
int
daa
lret
into
sbb
dec
sub
push
cmp
or
dec
fs
adc
popf
pop
pop
inc
addb
dec
xchg
cmpb
pop
mov
push
and
int3
sbb
pop
icebp
loopne
iret
imul
dec
adcl
mov
lods
jae
pop
inc
scas
movsl
mov
sbb
in
lea
icebp
orl
push
adc
jg
xor
inc
das
inc
fldenv
dec
jl
push
jno
lcall
lock
call
ljmp
in
jecxz
les
vmovddup
or
push
push
das
in
dec
cmp
jge
std
in
das
movzwl
mov
mov
dec
sti
xor
insl
push
sbb
push
cld
xchg
pop
dec
lea
arpl
xchg
lcall
outsl
add
fsubl
fwait
adc
and
and
dec
pop
mov
and
stc
hlt
aam
sub
lahf
sbb
test
outsb
inc
add
jmp
or
std
mov
jge
data16
sahf
sbb
inc
ja
jns
lds
sbb
xor
pop
cmp
mov
stc
mov
fiaddl
push
imul
cld
or
xor
push
jp
loop
pusha
adc
xchg
and
loopne
fcmovb
sbbl
lods
mov
pop
aaa
xchg
inc
aas
mov
pop
aas
or
sub
sbb
push
out
fnstsw
mov
pop
pop
push
xlat
xlat
sbb
push
xor
repnz
jbe
es
imul
ljmp
popf
outsl
inc
bound
fs
shlb
inc
or
mov
lds
pop
mov
push
xor
and
push
dec
mov
add
ss
push
sbb
sbb
decb
lret
leave
add
negl
mov
xor
shrb
add
mov
mov
out
xor
cli
push
repnz
fcompl
stc
cmc
outsl
scas
out
sub
pop
jp
enter
xor
cmp
jecxz
jl
movsb
fistpll
inc
pop
mov
add
int3
js
icebp
imul
test
test
xor
push
mov
lret
bnd
popf
sub
aad
nop
out
js
insl
adcb
push
dec
push
je
mov
fnstsw
push
cmp
sub
popf
mov
fidivrl
clc
out
cwtl
push
js
push
ds
imul
enter
fnstcw
ds
xchg
sarb
movb
add
jae
std
mov
ret
repnz
pushf
sbb
pop
shll
push
insb
xchg
sub
cmp
adc
inc
fs
dec
xlat
test
lods
ret
arpl
push
mov
push
xor
jp
jmp
mov
pop
rorb
insl
pop
add
adc
outsb
push
jecxz
stos
dec
mov
mull
pop
lds
mov
fcomps
cmp
cltd
dec
push
insl
adc
push
dec
ss
mov
outsb
push
sbb
ljmp
dec
push
cmc
shll
sbb
lea
inc
int
pop
mov
jne
fisttpll
lock
and
mov
jns
mov
shll
cltd
dec
loopne
jb
nop
push
xor
ljmp
inc
in
fldt
xor
add
xor
sub
cli
leave
pop
fs
xchg
pop
stc
xor
xchg
movsl
mov
pop
gs
test
or
movsb
mov
sbb
pop
pop
lcall
test
lcall
or
mov
mov
sub
aaa
sub
mov
mov
mov
jns
xchg
ss
ds
mov
xchg
scas
push
or
and
jg
ja
push
out
jo
add
mov
mov
jae
orb
test
pop
dec
mov
std
adc
pop
es
or
in
or
inc
imul
adc
jle
inc
je
or
scas
jge
sbb
fidivl
pop
repnz
inc
inc
js
jnp
sub
jp
in
or
jne
lahf
ljmp
or
ror
ja
enter
pusha
out
xchg
shlb
mov
ror
imul
dec
pop
out
sar
push
pop
push
stos
out
into
test
out
sbb
scas
fsubs
inc
pop
push
xlat
lock
mov
outsl
insl
mov
mov
stos
aas
fdivrs
mov
push
mov
mov
mov
test
inc
and
out
jp
dec
or
je
cmp
inc
arpl
dec
mov
divb
jno
mov
pop
cmp
test
cltd
sub
xor
lea
xchg
sti
movsl
inc
je
jmp
data16
jo
mov
dec
sbb
out
cmp
out
sub
cmpsl
push
test
dec
add
sbb
outsl
add
inc
sub
sbb
cmp
push
mov
mov
cmp
movsl
test
add
mov
fmuls
or
cmp
mov
stos
inc
inc
pop
and
mov
ljmp
insb
inc
aas
or
xor
xor
add
push
and
inc
adc
dec
test
cs
adc
mov
cld
notb
pusha
lahf
mov
stos
dec
imul
in
out
adcb
xor
insb
inc
jo
imul
mov
pop
iret
fadd
mov
test
fsubr
or
jnp
incb
inc
jns
andb
leave
add
mov
xor
sti
mov
fistl
leave
lock
pop
jno
loopne
cmp
push
dec
xor
out
cmp
jo
rcrb
fisttpl
push
add
out
rcrl
xchg
ret
dec
cmc
mov
inc
mov
push
lret
sti
mov
push
cltd
pusha
inc
aad
pop
lods
dec
jns
fcomp
sub
add
movsl
inc
inc
adc
xor
leave
lcall
or
adc
push
mov
and
sbb
stc
out
lods
in
je
inc
inc
mov
icebp
in
jae
mov
cmpsb
loope
cmp
loop
lcall
int3
cmp
pushl
cmc
mul
iret
sbb
dec
addl
outsl
xor
and
test
mov
push
daa
lret
jo
test
imul
inc
aam
mov
cmp
pop
stos
adc
cs
dec
lcall
les
mov
mov
daa
mov
in
push
mov
aaa
cmp
jle
pop
icebp
scas
fildll
in
data16
add
enter
xchg
dec
es
and
cmp
mov
mov
loopne
stos
inc
fpatan
repz
inc
mov
or
xchg
aad
sahf
or
xchg
pop
cld
adc
mov
cmp
stos
push
ret
jmp
add
mov
fwait
xlat
and
jbe
dec
add
fnsave
in
in
push
push
aaa
mov
push
xor
mov
in
inc
inc
xlat
mov
les
or
mov
jns
scas
movsl
jl
mov
cmp
in
xchg
fs
lcall
pop
ret
fldenv
xor
fstps
out
subl
loop
xchg
dec
adcb
stos
jecxz
out
mov
xor
xchg
add
add
add
fstpt
out
or
inc
ds
lock
lcall
fsubs
jl
sub
sbb
pop
clc
test
jle
pop
in
inc
jmp
repnz
add
insl
fisubs
or
movsb
mov
xchg
vaddss
insl
push
adc
jns
and
pop
add
mov
xchg
sub
cs
int
push
pop
pop
xchg
cmpsl
int3
int3
or
fsubrs
sub
addr16
mov
and
aad
pop
xchg
scas
pop
pop
cmpb
clc
adc
shrl
or
ss
jae
fcmovnbe
fisubl
loop
push
ljmp
pop
mov
negb
iret
push
jbe
xorl
mov
or
cmp
jmp
mov
sbb
ror
xchg
sub
jmp
addr16
xchg
add
cmp
repnz
add
or
pop
fstl
pop
insb
outsl
incb
push
fs
inc
fisubrl
int3
push
fnstsw
dec
push
inc
jne
xor
jno
ja
jb
xchg
xor
dec
xchg
imul
or
adc
sub
push
out
push
pop
leave
ret
inc
add
sub
sbbl
sbb
sub
and
mov
ja
divb
inc
pop
mov
lcall
cmp
mov
push
lods
jp
mov
mov
pop
push
sbb
pop
add
add
pop
loope
dec
pop
out
xchg
dec
cmp
xchg
fs
adc
xor
mov
test
in
inc
hlt
or
fldl
mov
or
xor
xchg
add
jae
cmp
mov
push
inc
inc
hlt
or
rcrl
mov
dec
pop
ret
cmp
outsl
dec
scas
shlb
xor
out
notb
in
dec
in
daa
addl
inc
or
fnstenv
xchg
mov
dec
push
cmp
xor
movsl
and
div
insb
fildll
mov
or
pop
scas
or
fistps
daa
fadd
aad
mov
xchg
mov
into
xchg
mov
add
inc
jns
xor
movsl
lock
or
addb
add
xor
into
cmpl
dec
push
mov
jp
lret
jne
xchg
fnsetpm(287
insb
pushf
clc
dec
pop
lret
or
lcall
pop
jnp
jmp
push
repnz
mov
add
mov
mov
and
jno
adc
and
or
mov
fs
in
dec
lods
jnp
fisubl
adc
das
cmp
into
sahf
aas
sub
cmpsb
push
pop
adc
lahf
ds
or
cmp
add
sbb
and
mov
enter
mov
aad
leave
leave
insl
xor
cmp
mov
pop
nop
enter
shrb
inc
xor
xchg
cmpl
pop
sbb
sbb
shlb
sub
popf
dec
out
jg
das
test
fs
das
cmp
pushf
jno
pusha
test
sub
cmp
inc
adc
ja
add
fwait
cmp
pop
dec
jge
mov
inc
in
aas
fwait
stc
ja
mov
fcmovne
cmpsb
stc
ja
ja
xchg
insl
sarl
mov
jg
sub
fsubs
gs
sub
add
jbe
loopne
xchg
inc
dec
and
mov
jo
push
rcr
adc
arpl
add
popa
push
mov
add
mov
loop
pop
inc
cmp
mov
push
adc
xor
inc
dec
pslld
aam
icebp
enter
mov
pushl
cmc
daa
pop
scas
scas
aam
inc
add
mov
pushf
jle
scas
shrb
outsl
test
xor
arpl
inc
and
loop
ss
in
xor
sbb
xchg
cs
movsl
mov
dec
ret
cmpsl
fisubs
pop
dec
aas
push
aam
shll
xlat
mov
lock
sub
data16
xchg
jo
and
fs
dec
pop
fwait
pop
xor
mov
loop
push
aas
and
jl
pop
add
push
testl
test
or
add
ljmp
pop
imul
push
jo
mov
and
fidivrs
sti
mov
fisttpl
into
xchg
sub
dec
sub
mov
xchg
out
mov
nop
push
cs
les
add
pop
testb
push
in
sahf
andl
or
mov
inc
in
mov
and
jbe
inc
xor
test
sbbb
cmpsl
insl
test
xchg
cmp
xchg
pop
or
mov
xor
outsl
xchg
xor
imulb
pop
lret
xchg
dec
ds
jmp
neg
push
lods
xlat
inc
xchg
ljmp
incl
push
and
push
cmp
dec
call
test
add
mov
imul
inc
inc
mov
icebp
jns
push
gs
adc
dec
sbb
fcmovne
pop
mov
cmpsl
pop
ret
fld
out
je
repz
push
dec
cmpb
xor
inc
test
cwtl
and
cld
mov
xchg
xor
loope
fstpt
call
icebp
imul
movsl
dec
popa
dec
push
mov
test
divb
out
lds
out
ret
jnp
mov
sub
and
fnstcw
loopne
ret
popf
aas
and
pop
pop
and
mov
push
push
add
pushl
daa
mov
cld
shlb
push
js
test
js
pop
jg
fwait
jne
and
leave
mov
or
or
addb
fdivrl
pop
mov
rcll
insl
loope
das
pop
cld
stc
xchg
push
xchg
lods
push
cs
je
or
daa
xor
add
jecxz
flds
nop
cmp
xor
pop
pop
cmp
jns
pushf
dec
push
jns
pop
gs
mov
cmp
cld
cmp
adcl
popa
daa
movsb
rorb
jo
jae
sarb
insb
icebp
cmp
std
addr16
add
into
repnz
sbb
mov
xchg
leave
pop
mov
xor
add
adc
out
sub
sub
fldcw
mov
pop
xchg
rcl
xor
add
ds
pop
shrb
push
in
push
adc
scas
sbb
push
bound
mov
add
xchg
sbb
imul
cmp
and
pushf
and
pop
std
push
dec
adc
std
mov
ljmp
int3
mov
lds
mov
xor
pushl
test
cmp
scas
add
aas
divb
loope
clc
jo
jbe
inc
xor
add
shlb
mov
lcall
and
notb
and
or
popa
and
mov
push
sub
sbb
mov
adc
stos
mov
add
push
jmp
mov
ret
push
jmp
mov
pop
jl
mov
mov
adc
push
sub
mov
jecxz
mov
xor
pop
fdivr
cwtl
dec
and
and
xor
jbe
sub
dec
dec
dec
ss
or
hlt
sbb
ror
jb
out
sbb
push
xor
sub
ljmp
ror
lods
pop
dec
xlat
into
test
mov
and
jg
cmp
push
sub
imul
neg
ficompl
pop
imul
test
ret
nop
cltd
push
inc
sahf
pusha
cmp
fsub
shlb
scas
mov
push
cmp
mov
sub
or
xchg
add
jne
add
aad
mov
and
not
addr16
stos
test
in
jge
leave
cmp
xor
ss
stos
ds
push
or
lock
nop
sub
adc
shrb
sub
lds
cmp
hlt
add
inc
cmp
arpl
movsb
xchg
pop
insb
mov
test
dec
je
dec
das
ds
cli
sub
fs
xchg
pushw
xorl
or
sbb
jns
inc
cpuid
push
pusha
imul
jb
pushf
jmp
int
mov
or
add
lods
pop
sarb
dec
xor
divb
cmpsl
cmc
bnd
sub
cmpsl
jbe
push
sub
aam
sub
bound
mov
dec
jae
stc
out
or
orb
lods
dec
jnp
nop
sti
fnstcw
aaa
or
jne
fs
into
divl
cs
xor
subl
scas
push
out
outsb
and
repz
andb
ss
dec
orl
sub
add
jbe
divl
mov
jle
ja
sub
mov
movsl
push
mov
cmp
arpl
or
inc
dec
xchg
and
mov
xchg
and
aam
jle
addr16
jae
sub
sarl
mov
test
aas
xchg
add
fdivl
in
push
jae
adc
lcall
mov
cmp
std
and
cmpsb
push
add
dec
icebp
push
call
out
insb
inc
iret
jns
fistpl
nop
or
push
push
sub
lret
je
push
ds
mov
insl
mov
jae
cld
pop
inc
call
fwait
cmpsb
push
pop
movsl
loop
mov
out
fs
cld
mov
xchg
les
inc
add
jbe
push
cltd
mov
mov
and
dec
in
loopne
insb
cmp
inc
je
stos
sbb
xchg
cmp
testb
push
into
jecxz
cld
dec
xchg
imul
adc
mov
movsl
data16
mov
sub
adc
lods
sbb
icebp
lods
and
popf
push
stos
inc
add
push
rcrb
jbe
lock
sub
mov
dec
fwait
sub
cli
mov
nop
xchg
fistps
bound
mov
mov
lds
loopne
jmp
jl
pushf
cmpsl
mov
mov
inc
inc
fsub
jp
push
cmp
fs
inc
mov
stos
push
add
mov
lods
hlt
dec
shl
lret
jmp
xlat
in
arpl
fsubs
pop
push
inc
mov
push
movsb
mov
pop
movsl
arpl
mov
xor
sbb
imul
mov
mov
sbb
pop
xor
cmp
mov
fisttpll
push
jbe,pt
adc
xor
push
xchg
add
jbe
sbb
flds
pop
mov
sbb
imul
js
rcrb
mov
pop
arpl
jae
sbb
mov
sub
out
sub
loopne
nop
mov
rcrl
xorl
jo
sub
insl
int
pop
jns
mov
stc
test
adc
scas
aas
loope
and
fcmovnu
sbbl
sub
jg
jecxz
loope
sahf
jmp
inc
movsl
sarb
loopne
mov
push
add
addr16
out
adc
push
inc
xchg
inc
pushf
popl
bound
icebp
push
adc
cmpsb
jmp
das
pop
mov
out
outsb
adc
insl
sbb
and
int3
fdivr
xchg
pop
adc
sub
adc
cmp
or
rorb
out
pop
mov
je
jb
or
popf
cltd
xor
cmp
sub
push
push
ja
jp
shrb
shl
and
ret
pushf
lds
popf
jae
rcll
scas
cltd
ret
into
rol
es
in
cmp
je
in
hlt
inc
mov
loop
inc
push
and
xor
mov
sti
add
inc
mov
sub
into
ret
std
out
aaa
push
push
xchg
js
test
in
jo
mov
imull
mov
xchg
data16
sbb
pop
into
pop
pop
add
in
sbb
fisubl
xchg
test
or
add
cltd
stc
xchg
cwtl
add
lahf
lret
push
fsubrl
mov
movsb
lock
push
or
fstpt
xchg
pusha
divl
jl
cld
push
sub
aad
and
mov
mov
push
inc
out
adc
mov
push
pop
xor
sahf
inc
popa
imul
movsb
out
mov
add
stos
cli
int
ss
inc
les
repnz
add
sahf
pop
pusha
mov
xchg
jb
je
adc
adc
dec
and
outsb
sahf
sbb
xor
push
dec
popf
mov
dec
jp
testb
lret
flds
hlt
mov
sub
aad
in
sbb
inc
add
dec
mov
lret
mov
mov
and
dec
int
lahf
fwait
movsl
aad
rorl
adc
out
lods
mov
cmp
sub
test
mov
ljmp
stos
jmp
or
mov
cld
lret
fisubrl
dec
sub
lret
mov
fsubrs
ljmp
sub
add
inc
push
popa
out
mov
lods
repz
inc
mov
and
iret
ret
imul
ret
cltd
pushf
mov
xchg
in
loope
mov
nop
pusha
lahf
mov
hlt
push
fldcw
repnz
adc
jp
pop
pop
sbb
sbb
xchg
push
dec
push
push
stos
mov
arpl
and
sub
cmp
sbb
scas
ret
add
arpl
pop
adc
leave
mov
mov
test
mov
aaa
repnz
or
hlt
jge
and
sbb
shll
in
mov
sbb
inc
cmp
mov
xlat
popf
cmp
out
dec
idivl
adc
insl
cmp
sti
sub
cmp
subl
mov
repz
dec
mov
inc
mov
mov
xlat
mov
shll
cmp
sub
add
lea
call
incb
cmc
ret
push
cwtl
mov
sub
std
jo
sub
cmc
add
or
dec
stc
cld
jns
lret
mov
pop
xorb
sbb
hlt
push
and
xchg
and
data16
dec
popa
out
daa
hlt
adc
shll
pusha
sbb
push
mov
fiaddl
push
inc
push
jo
add
cmp
xor
push
mov
mov
std
leave
xor
mov
xor
and
push
lcall
inc
push
sbb
stos
pop
pop
or
inc
lods
lock
arpl
push
loopne
pop
or
lods
shll
mov
lcall
add
jl
loope
adc
clc
aas
push
xor
mov
xchg
gs
sbb
leave
or
in
cmc
pop
aad
push
pop
dec
pop
cmp
ror
inc
dec
jge
fistpll
mov
xchg
or
mov
push
sub
add
mov
mov
andl
sub
shr
dec
mov
push
or
icebp
mov
push
or
sbb
enter
mov
das
fildl
xor
insb
in
add
xchg
inc
xchg
xor
rclb
es
or
in
repnz
dec
lods
roll
inc
fldl
ret
ud2
cltd
mov
mov
mov
sub
hlt
mov
mov
jno
xchg
lea
push
cli
dec
lods
enter
and
xchg
mov
mov
and
sub
outsl
cs
movsb
outsb
pop
xchg
outsl
inc
xor
rorb
mov
jl
dec
leave
sbb
or
cld
out
movsl
lods
push
mov
ret
mov
in
and
testb
das
aad
ret
mul
xor
stc
pop
lock
adc
daa
xor
mov
outsb
rcll
icebp
mov
dec
jno
shr
jb
ret
fs
icebp
lea
lods
cwtl
fidivs
xchg
incb
lds
repnz
testb
pop
cmp
lcall
cmp
sbb
or
push
mov
sub
adc
cs
idiv
addr16
popf
arpl
inc
xor
out
lods
or
outsl
popa
xchg
and
sbb
push
and
mov
out
pop
push
jge
orb
lea
rorb
mov
out
into
cltd
and
ss
push
sub
adc
jge
aam
mov
xlat
lret
sub
or
inc
and
mov
ret
jg
jl
dec
pop
das
rolb
sub
sub
lahf
scas
xchg
inc
add
stos
xchg
in
jno
mov
push
out
inc
std
xchg
push
xor
sub
shll
inc
jne
sub
or
push
daa
xor
sahf
add
dec
jecxz
jne
pop
mov
push
cld
and
adc
pop
dec
sub
mov
aaa
dec
push
and
mov
xor
lds
popa
in
mov
ds
or
les
xor
or
sbb
cmp
loope
sub
dec
mov
cli
int3
les
std
rcr
imull
mov
xor
cld
and
lcall
sub
push
ficomps
fxch
imul
cli
fistl
das
fnsave
xor
les
aam
mov
pop
fsubl
and
enter
dec
lahf
and
stc
mov
mov
cli
insb
sbb
jo
pop
xor
scas
jbe
xchg
sarb
and
in
or
test
inc
in
dec
mov
ljmp
sbb
aas
mov
add
adc
rorl
sbb
hlt
pop
mov
push
addl
mov
js
je
jge
sbb
out
and
xlat
jne
iret
pop
pop
mov
xchg
clc
outsb
cwtl
sub
add
pop
sahf
mov
xor
shlb
jnp
fldcw
loopne
mov
in
scas
rcll
rcr
xchg
out
jno
adc
pop
lcall
outsl
mov
mov
pop
dec
sub
push
cld
std
and
dec
outsl
pop
add
or
sub
jle
push
xchg
ret
push
les
inc
ljmp
out
daa
mov
gs
ds
xchg
push
pop
loopne
dec
cmp
xchg
aad
decl
mov
cmp
stos
pop
iret
pop
xor
mov
nop
in
ss
lods
rcr
xchg
push
xchg
push
xchg
insl
push
push
mov
shrb
and
push
and
ret
mov
dec
lea
jae
or
jecxz
das
hlt
iret
mov
mov
sahf
push
fwait
loopne
cltd
call
insb
jle
int
sti
sub
dec
sub
push
push
mov
mov
mov
cltd
popf
xchg
outsb
mov
sub
sbb
mov
inc
sbb
insb
sbb
inc
out
xlat
push
movsl
dec
sub
pushf
dec
sub
or
fimuls
inc
mov
das
sub
cld
push
jmp
aaa
enter
dec
fildll
orb
imul
add
mov
test
cvtpi2ps
inc
aam
jae
dec
and
insb
sub
inc
aaa
lcall
addl
inc
xor
vmaskmovdqu
std
jmp
mov
xor
divl
push
adc
mov
ficoml
les
mov
or
jbe
hlt
xchg
popf
jns
fs
arpl
popa
enter
insl
arpl
jl
jmp
lods
xor
push
cltd
mov
xor
mov
dec
sbb
repz
adc
mov
or
add
sub
dec
faddl
or
int3
std
dec
mulb
filds
sbb
jge
jle
push
stc
sar
xchg
subb
sbb
ds
sbb
or
or
scas
dec
ret
lds
pop
fisubrs
push
fdivl
mov
lahf
les
xor
nop
inc
test
dec
ljmp
insb
add
mov
outsb
rorb
sub
mov
cmc
mov
addr16
adc
repz
movl
or
ror
adc
loopne
push
ljmp
push
and
mov
orl
dec
fstpl
jp
cmp
push
mov
and
add
int
mov
push
in
std
test
pop
mov
hlt
mov
pop
sbb
push
mov
jno
clc
call
cmp
add
repnz
adc
push
nop
in
hlt
push
adc
outsl
cmpb
in
arpl
dec
mov
jb
arpl
int
sbb
inc
test
inc
das
or
cwtl
std
testb
jecxz
push
fsubrl
enter
jle
cmc
fisubrs
inc
push
cmp
mov
mov
mov
frstor
cli
cmc
pop
das
dec
push
dec
sbbb
pop
dec
div
stos
mov
sub
inc
loopne
lock
testl
mov
adc
mov
fnstcw
in
sub
lret
rcl
pop
inc
jb
ret
ljmp
cmpsb
add
xchg
loopne
fsub
inc
shrb
jp
mov
jns
fsubs
cli
adc
inc
inc
inc
push
push
sbb
xchg
sbb
pop
jne
mov
stos
dec
mov
shr
inc
cltd
add
js
ret
shl
dec
cli
je
mov
jnp
mov
xchg
dec
adc
inc
divl
ror
dec
push
imul
dec
rcr
movq
inc
sub
sbb
xchg
mov
jl
jns
pop
arpl
mov
mov
stos
dec
cmp
inc
mov
sti
es
test
push
fcmovne
addb
mov
xchg
xchg
push
mov
hlt
sti
nop
pop
pop
setge
push
sbb
xchg
xor
cltd
mov
and
in
call
dec
loope
scas
enter
test
lock
mov
sub
test
push
add
mov
fidivrl
pop
xor
jecxz
test
test
sub
mov
and
sub
imul
js
mov
adc
test
cwtl
sub
outsb
out
negb
sub
cwtl
push
lahf
sbb
xlat
int
mov
inc
leave
sub
cmp
inc
fsubr
daa
jae
push
fisttpl
movsl
cmp
out
jmp
pop
push
push
movsb
cltd
mov
mov
sbb
shrb
mov
out
outsb
int
inc
inc
dec
sub
sbb
fstpl
mov
jae
pop
outsb
cmp
add
adc
mov
sbb
fdiv
cmpxchg
fsubl
sti
mov
mov
or
out
in
pop
mov
or
sbb
cmpsb
xchg
mov
lret
mov
loop
push
sbb
adc
dec
aam
cmp
dec
gs
jp
mov
cmp
dec
push
loop
lock
sub
ret
pop
push
mov
sbb
or
arpl
cwtl
fmuls
dec
dec
cmpsb
pop
lds
adc
cmp
push
mov
push
fistpll
inc
xchg
jge
daa
xorb
jns
cmp
sub
pop
push
mov
out
adc
pop
stc
pop
add
or
mov
jns
and
lods
dec
inc
test
inc
lock
mov
jno
sbb
into
and
cld
dec
dec
push
mov
jmp
sti
cmp
pop
repz
mov
rorl
xor
mov
mov
mov
cmpsb
roll
mov
mov
cmp
sarl
mov
xor
movsl
add
sahf
enter
sbb
xor
lcall
push
add
hlt
xlat
inc
lds
dec
into
dec
mov
inc
xor
xor
pop
dec
jle
arpl
pushf
cmp
rorb
jns
test
sarl
push
lret
adc
test
sub
ja
loop
mov
enter
das
bound
jnp
cmpsb
lock
pop
mov
mov
aaa
jno
fwait
push
dec
cmpsl
sub
sub
jb
push
stc
dec
int3
ret
mov
or
mov
cmp
xchg
cs
adc
mov
in
lods
out
jl
outsb
pop
test
pop
aad
sub
loopne
pop
xchg
fsubrl
fistl
notl
jno
sub
mov
add
lahf
and
xlat
movsb
mov
lock
cmp
mov
inc
inc
aam
jmp
add
pop
orb
mov
sub
in
xchg
adc
lea
dec
mov
inc
inc
ja
adc
mov
add
push
xlat
sahf
test
push
roll
in
std
add
adcb
in
test
mov
enter
inc
push
sub
mov
adc
push
cmp
xchg
xchg
sti
enter
pop
mov
and
xor
mov
jne
jle
stos
sbb
jmp
pop
mov
xchg
ret
pop
arpl
orb
cmpsb
adc
jnp
enter
cltd
sbb
shlb
hlt
pusha
rcl
fcmove
mov
test
gs
pop
xor
mov
shrb
cmp
push
cwtl
jbe
pop
pop
repz
push
stc
push
or
dec
adc
test
pop
push
mov
imul
daa
xor
leave
inc
sahf
jnp
sbb
lcall
inc
sbb
stc
mov
rclb
push
mov
fcmovnb
jg
and
jge
rcrb
nop
push
push
xchg
test
aad
mov
mov
aam
movsl
pushf
cmpsl
imul
and
add
adc
add
xchg
addr16
mov
jg
add
sub
xchg
push
jle
popf
popa
cmp
adc
nop
mov
jne
les
sahf
faddl
ret
arpl
xor
sub
test
or
jmp
js
mov
loopne
pop
mov
inc
cmp
xor
push
dec
push
cwtl
nop
pop
loope
in
movsb
subl
push
fsubrl
iret
test
cli
sub
test
push
fdivl
push
fdivl
pop
push
loope
not
sbb
in
adc
cli
or
cmp
idivl
repnz
mov
pop
inc
movsl
hlt
js
rorb
mov
stos
fwait
mov
fsts
jns
dec
ja
repnz
divl
jb
nop
into
jb
and
in
into
insl
pushf
mov
push
jnp
test
lcall
shr
jmp
or
jne
jmp
aad
jae
or
mov
jge
xorb
sahf
lods
das
xchg
sbb
lcall
inc
in
pop
pusha
stc
push
test
sbb
and
ss
and
mov
aas
test
mov
fistl
pop
stos
xor
data16
and
push
mul
adc
sti
add
xchg
adc
pop
add
dec
xchg
daa
dec
cld
push
fsubl
push
test
xor
or
out
imul
jns
fcmovne
pusha
arpl
add
push
insl
adc
push
ja
xor
adc
shll
iret
lcall
sahf
mov
shrl
push
divb
cmp
imull
pop
mov
xor
bound
pop
inc
adc
mov
sbb
sahf
cmc
js
push
dec
aam
push
jb
je
mov
test
in
adc
xor
or
scas
mov
rcrl
jl
icebp
scas
fidivrs
hlt
add
mov
loop
js
push
stos
cmp
movsl
fildll
xor
daa
or
xorl
xchg
outsb
lahf
pop
push
xchg
sbb
inc
lods
adc
pop
aaa
rorb
sub
testl
push
mov
xchg
lret
mov
pusha
mov
jl
sahf
shll
sub
fidivs
aam
add
jg
repnz
mov
cli
push
jno
pop
adc
mov
or
add
or
xchg
dec
jnp
aam
inc
out
cmp
les
xchg
in
lcall
sub
inc
mov
and
sub
int3
loopne
adc
sub
jb
adc
fisubs
stos
addr16
cmc
xor
push
or
loopne
xchg
rolb
dec
inc
sub
hlt
mov
enter
stos
movsl
das
hlt
sub
xchg
sbb
andb
ss
xchg
aas
std
mov
jl
push
cld
jb
fwait
inc
or
push
fld1
hlt
loopne
das
push
std
inc
cltd
jns
loope
rclb
rcl
sub
add
sub
aad
int
adc
adc
mov
xchg
pusha
xchg
insl
sbb
lea
cmp
mov
inc
mov
fimull
or
jno
loopne
fdivl
movsb
and
xchg
inc
dec
cmp
out
movsl
xor
xor
bnd
out
fs
cmpsl
or
ret
adc
ror
out
xchg
xchg
cmp
jmp
add
pushf
int
push
popf
outsl
inc
push
pop
adc
xchg
sbb
popf
fisubs
mov
movsb
in
jns
adc
ss
jns
rcrl
in
xchg
es
insb
xchg
lods
std
xchg
cmp
or
push
dec
ret
xchg
mov
stos
dec
pop
or
es
data16
shlb
lea
out
cwtl
lods
jb
pop
clc
addr16
adc
jp
outsl
imulb
jmp
icebp
sar
mov
adc
aas
call
mov
xor
or
test
sbb
cmpsl
xchg
leave
add
ficomps
jnp
jp
pop
arpl
push
cli
jo
xchg
xor
xchg
sti
imul
xchg
mov
pop
xlat
pop
sub
test
cmp
mov
xor
sbb
das
sbb
cmp
push
addl
mov
in
jb
push
subb
mov
mov
mov
rcr
movb
insl
mov
mov
xchg
push
int3
jle
push
push
cmp
mov
xor
bound
dec
idivl
and
ss
mov
cmpsl
stos
mov
jae
cmp
mov
cltd
jne
adc
sbb
das
ficoml
cmp
mov
aam
pop
adc
bound
popa
adc
inc
sbb
popa
dec
movsl
dec
pop
int3
mov
dec
inc
lock
leave
inc
adc
jns
fimuls
push
mov
pop
scas
and
fwait
xchg
sti
xlat
xor
xchg
adc
cmc
cwtl
test
xor
jp
ror
sub
xchg
call
gs
mov
mov
xchg
jae
cmpsb
jnp
and
xchg
popaw
mov
call
mov
fistpl
jl
lock
cmpl
or
mov
movsl
fisubrl
xor
inc
or
loopne
sti
cmp
sahf
push
xchg
mov
cmp
mov
push
add
inc
pop
adc
inc
rcrb
sti
mov
xlat
cmp
cmp
xchg
imul
or
inc
sar
jae
mov
jo,pt
bound
icebp
fdiv
inc
push
mov
add
xor
add
sti
mov
jnp
jbe
pusha
jmp
push
push
int3
cmpsb
jmp
or
push
pop
mov
lea
sub
aas
sub
iret
arpl
xor
inc
pop
outsb
incl
push
aad
and
pop
dec
push
cmp
mov
fwait
push
mov
fmulp
xor
xor
call
cmpsl
sub
dec
add
xchg
sub
mov
xor
jnp
add
sbb
push
xor
and
ds
sub
add
ret
in
shrl
sbb
mov
pop
sub
mov
in
call
jne
jle
pop
cmpsb
jae
mov
aas
cmc
sbb
into
xor
xchg
jmp
add
insb
mov
lods
fstpt
cmpsl
jnp
shrb
sbb
in
mov
mov
fwait
mov
shrl
cld
jae
xor
dec
push
pushf
mov
mov
clc
jmp
jae
xchg
and
jnp
shr
fdivrs
call
or
sub
dec
leave
sti
sub
lea
jl
add
lret
push
cmpb
inc
pop
dec
insl
loope
cltd
inc
imul
xchg
mov
pop
sbb
dec
mov
push
outsl
hlt
and
arpl
adc
add
inc
roll
insl
shrl
adc
xor
rcl
sbb
mov
insb
aas
cmp
or
add
insb
jmp
lea
mov
and
fisubl
dec
jbe
test
jb
lahf
outsb
rol
push
iret
leave
jmp
jns
inc
aaa
xchg
fwait
xchg
and
cmp
nop
mov
pop
xchg
lahf
mov
xbegin
jne
andb
cmp
arpl
aas
test
ret
test
jle
call
xor
add
ffree
xor
fldl
cmp
jns
andl
ret
mov
inc
mov
popa
mov
jmp
test
inc
adc
jae
lret
sub
add
jmp
int3
xor
insb
adc
outsb
js
in
push
jp
fmuls
out
xchg
cmpsl
adc
roll
jbe
xchg
or
push
mov
inc
xchg
xor
popa
lods
lcall
adc
fwait
popa
xor
stc
dec
dec
fnsave
sbb
adc
sbb
sbb
mov
daa
jo
pop
mov
sub
insb
pop
push
jns
sbb
daa
scas
enter
mov
xor
and
nop
pop
icebp
clc
addr16
lods
mov
xchg
lock
xchg
xor
cwtl
push
mov
mov
xchg
push
sub
adc
out
inc
lahf
pop
inc
out
aaa
scas
loope
jo
pop
incb
jp
sub
mov
cmpsl
insl
stc
mov
dec
lock
mov
sub
loope
enter
lods
loope
sti
out
mov
iret
adc
adc
mov
dec
lods
jl
pop
sahf
mov
sbb
mov
dec
mov
rcl
repz
jmp
sub
ret
xchg
push
and
cmp
sub
clc
sti
adc
sub
cmp
pop
jae
xor
and
fildll
cmp
fstl
cmpsb
add
pop
add
sbb
adc
xchg
cs
testb
loop
or
rcrl
and
xchg
ja
adc
ja
mov
sbb
movsw
pop
cmpsb
or
addr16
push
xchg
test
inc
push
jl
xchg
jae
shlb
scas
cltd
ret
cmc
inc
addr16
push
mov
sub
jae
les
push
fsubl
inc
sbb
push
icebp
inc
test
jmp
sub
les
cmpsb
push
pop
jo
stos
ljmp
mov
sti
hlt
push
add
inc
orb
or
push
xor
in
or
lcall
adc
aaa
dec
je
sarl
imul
in
jns
xchg
dec
stos
fists
pushf
cmp
dec
mov
inc
out
add
scas
mov
icebp
ret
cmc
jg
inc
addl
out
fiaddl
test
out
fwait
std
or
pop
mov
shl
cmp
jmp
mov
dec
mov
outsb
enter
xor
sti
or
pushf
out
jo
and
add
cltd
cmp
insb
stos
notl
into
add
aaa
or
mov
fdivp
divb
das
mov
mov
lahf
or
sub
dec
insl
stos
jecxz
adc
dec
push
xor
and
xchg
mov
cmp
or
mov
les
and
inc
add
adc
pop
sub
push
xlat
jne
cmp
mov
dec
or
icebp
lahf
mov
push
repnz
xor
mov
lcall
mov
lea
sub
ja
add
lds
les
pop
cmp
and
movsb
sti
mov
xor
push
hlt
jne
push
fildl
push
mov
scas
out
cmp
je
and
out
fs
sahf
fsubr
mov
jmp
mov
cltd
sbb
xchg
in
cltd
and
mov
ret
push
ljmp
xlat
dec
popa
jge
pop
xorb
fnstenv
or
js
jno
filds
stos
aas
or
or
or
in
dec
add
xchg
rcr
xlat
add
lahf
mov
mov
mov
mov
pop
dec
push
jg
jmp
jnp
add
icebp
pop
pop
lods
rcl
add
or
adc
or
inc
pop
stos
scas
nop
in
out
push
test
je
add
add
fisubrs
jne
pop
push
ljmp
pop
add
cmp
push
sbb
lcall
pop
cld
xor
mov
mov
push
adc
or
mov
push
ss
dec
test
cs
clc
lods
test
sub
or
test
daa
je
std
inc
mov
sub
sub
repnz
fcoms
dec
mov
adc
test
leave
adc
mov
adc
mov
or
and
mov
mov
jmp
cmc
addr16
lock
push
bound
pop
mov
mov
les
xchg
and
jne
lahf
incb
subl
stos
pusha
jae
outsb
in
cmp
fistpl
cmp
les
fsubl
ret
xchg
aas
std
test
xchg
adc
sbb
or
les
pushl
sarl
jbe
lods
lds
push
addr16
dec
mov
je
stc
push
xor
dec
je
mov
cmpsl
mov
sahf
pop
inc
push
and
in
pop
repz
pop
cmp
mov
cmpsb
cli
je
test
fsub
loopne
add
mov
stc
sbb
sbb
int
shrb
in
call
das
sbb
rcrb
outsl
pop
scas
data16
test
fiadds
es
cs
lods
dec
and
xchg
sbb
icebp
test
xchg
int3
adc
adc
xor
mov
test
sub
jp
and
dec
mov
mov
add
and
cmp
pusha
aad
mov
dec
cmp
sbb
jnp
dec
mov
shrb
daa
imul
je
xchg
adc
push
lcall
mov
pop
add
mov
push
leave
and
push
test
jmp
jns
push
stos
push
adc
and
xchg
cmp
lods
into
jge
rolb
in
jl
xor
mov
rolb
jl
movsl
mov
and
insb
pop
sahf
add
mov
into
xchg
inc
adc
fistps
push
xchg
jns
or
subl
ret
push
add
mov
enter
jae
lea
ss
jne
add
ror
push
xchg
insl
daa
mov
sbb
cli
arpl
xchg
sbb
sbb
fbstp
dec
out
les
mov
je
into
and
leave
aam
aad
and
out
push
jne
enter
or
cmp
inc
adc
test
adc
sbb
js
pop
sahf
jnp
cmp
dec
das
test
orl
add
xchg
cmp
shrl
cmp
lret
leave
lock
pushl
repz
aas
aam
sbb
mov
xchg
jl
ja
jp
xor
outsb
push
movb
xor
pushf
aas
adc
cltd
out
cld
stos
negb
adc
mov
mov
push
add
lods
ja
sbb
dec
sahf
fsubrp
pop
or
iret
and
into
in
mov
mov
fs
fadds
lds
mov
mov
mov
mov
sti
pop
push
cmp
call
stos
pop
xor
sub
out
insb
adc
or
adc
cmp
jmp
sub
icebp
push
add
ret
mov
inc
jns
xchg
or
cmpsb
into
sbbb
mov
xlat
push
lock
aaa
test
push
pop
andb
shl
adc
pop
rcrl
mov
lret
adc
popw
bound
mov
movsb
sbb
xor
arpl
mov
jmp
test
popa
rolb
repz
scas
and
cmp
insl
sbb
stos
sahf
fisttps
pop
pop
aam
push
dec
sbb
test
xor
jnp
gs
clc
cmc
add
outsb
cmp
or
cmp
and
sub
sub
sbbl
mov
out
ja
jg
mov
orl
mov
fistl
scas
mov
and
and
roll
lds
outsb
mov
dec
popa
popa
jb
inc
fwait
adc
add
filds
jle
xchg
pop
xor
jb
ror
mov
cwtl
dec
mov
movsb
add
add
addb
out
scas
xor
dec
adc
sub
rclb
imul
or
pop
mov
mov
inc
ds
call
pop
int3
imul
arpl
dec
cmpl
pusha
sub
in
add
fistpll
sbb
push
and
repnz
fisubl
add
cs
rol
adc
mov
arpl
pop
inc
loop
inc
movsb
imul
fcoms
sbb
mov
sbb
imul
lahf
sbb
ret
ja
or
cmp
add
movsl
pusha
inc
sub
cmc
jge
pop
clc
fs
adc
xchg
mov
insl
rcrb
adc
push
les
jg
lds
pop
inc
and
jmp
cld
shl
xchg
push
xchg
icebp
mov
testl
mov
dec
in
push
pop
adc
or
dec
mov
jnp
outsl
scas
mov
sbb
and
fs
inc
push
incl
cli
mov
mov
or
xchg
mov
mov
fs
and
sub
loope
bound
aam
jecxz
mov
mov
jae
pop
in
imull
icebp
push
arpl
stc
imul
pop
mov
xchg
hlt
repnz
push
xor
movsl
pop
fbstp
in
into
inc
aad
cwtl
sbb
mov
insb
push
cmp
jnp
lcall
mov
or
fldenv
add
cwtl
dec
push
rolb
scas
xchg
je
cmp
imul
mov
fisubl
inc
xchg
stc
or
inc
jo
jp
daa
rcrl
xor
fadds
mov
jl
add
sub
mov
mov
push
ss
loope
stos
stos
dec
xchg
insb
popa
xchg
scas
xchg
pop
shl
or
xchg
test
sbb
lret
push
mov
jno
cmc
pop
test
push
pop
ja
dec
lods
cmpsb
mov
shrl
test
push
stos
dec
cmpsl
cmp
mov
pop
roll
cmp
dec
in
jp
pop
mov
or
repz
pusha
xchg
add
cld
adc
aam
push
xchg
xlat
add
jmp
orb
out
push
nop
sub
loope
xchg
xor
lret
mov
fisubl
outsl
aad
dec
cltd
inc
sbb
gs
mov
dec
popf
mov
mov
inc
push
leave
mov
mov
rcrl
and
in
push
xchg
or
inc
push
shll
xor
push
cltd
pop
mov
sub
test
cld
sub
ret
sub
cmc
repz
push
fsubl
cmp
imul
add
cmpsl
in
pop
cmp
dec
mov
cmc
mov
inc
out
sbb
ljmp
in
movsl
xchg
dec
xchg
fs
mov
mov
sub
scas
lea
jns
es
mov
dec
cmpsb
push
andl
mov
mov
sti
jg
cs
or
mov
pop
addr16
push
insl
sub
cmpl
sbb
loop
push
call
add
jbe
test
ret
gs
out
mov
mov
aaa
movsl
push
add
ds
inc
outsb
adc
xor
jne
movsb
into
mov
std
loopne
mov
pusha
mov
das
dec
inc
xor
xchg
jae
sbb
add
cmc
outsb
lock
inc
dec
adc
stos
xchg
lods
xchg
push
jmp
dec
and
push
add
aas
mov
int
fcom
lock
lret
test
outsl
ljmp
fwait
subl
add
mov
arpl
xchg
mov
lretw
mov
sti
cli
xor
adc
mul
mov
adc
ret
lret
sbb
mov
out
in
mov
lahf
sbb
adc
xorl
xchg
jnp
mov
xchg
or
sbb
push
loope
mov
mov
sub
int
out
push
xor
push
push
mov
mov
movsl
adc
jns
aad
pop
jg
test
xor
imul
cmp
fisubrs
and
mov
pushf
lret
jbe
sbb
insl
fldt
ret
cmpsb
and
popf
jle
das
cmp
mov
jnp
pusha
filds
test
mov
inc
xor
cld
nop
push
push
xor
inc
pop
aaa
sub
jne
cmp
fstl
push
add
and
inc
mov
sub
ror
or
mov
fs
je
ss
ret
rol
fs
push
inc
cmp
js
stos
shll
gs
jmp
out
lock
jmp
push
sub
xchg
or
pushf
fisttpl
stos
lcall
int3
in
mov
movsb
mov
mov
adc
jno
adc
das
inc
mov
cmp
pop
push
add
xor
fstpl
mov
and
outsl
pop
ret
lret
cmpsl
sub
les
clc
repnz
mov
adc
daa
divb
pop
shr
mov
mov
pop
hlt
cmp
icebp
mov
mov
pop
dec
ret
das
adc
outsb
nop
sbb
test
xlat
push
shll
jbe
fsubrl
imul
xor
xor
sub
sbb
mov
scas
mov
and
lcall
mov
mov
call
push
xchg
xor
ret
pop
jo
sub
outsl
xchg
push
repz
leave
scas
add
loope
std
mov
sbb
xchg
inc
stc
fwait
rclb
jg
es
dec
insl
mov
mov
or
repnz
inc
mov
cmp
imul
jb
mov
ljmp
and
jns
in
test
mov
imul
sub
sub
xchg
sbb
aaa
xchg
mov
sbb
push
xlat
sub
popa
dec
lock
mov
add
scas
jns
dec
bound
fidivl
push
fildll
mov
cmpsb
test
and
out
je
shll
dec
mov
push
out
outsl
dec
dec
mov
mov
imul
les
inc
mov
jns
mov
leave
mov
mov
cltd
xlat
dec
mov
in
fistl
jo
lods
jmp
jae
push
dec
mov
into
shll
das
leave
xchg
into
jno
test
rclb
dec
jno
je
cwtl
adc
xchg
lcall
in
es
pop
sub
sarl
cmpsb
out
leave
mov
hlt
in
cli
jecxz
int
xor
in
jge
pop
push
out
shlb
xchg
mov
cs
cmpsb
subb
jl
jno
ret
add
outsb
mov
lock
jns
cs
pop
mov
jns
and
hlt
jg
fsubrl
repnz
and
in
vcmpge_oqsd
mov
lds
or
push
inc
mov
fisubs
mov
adc
sub
lea
xor
lahf
insl
mov
into
mov
mov
stos
mov
icebp
not
jmp
cs
push
int
hlt
cltd
push
fildll
adc
xchg
pop
jb
outsl
sbb
mov
cltd
jg
sarb
mov
pushf
sub
enter
mov
cltd
fidivs
push
adc
cmp
sahf
mov
imul
add
xor
cli
test
or
ficomps
ror
sbb
fisubs
xchg
stc
and
insl
and
mov
mov
fstpt
xchg
mov
arpl
or
movsb
cmp
fildll
cmpb
sbbb
std
arpl
js
inc
mov
cwtl
mov
mov
cmp
aam
cmp
xor
stos
push
push
in
mov
push
popf
mov
add
loope
mov
in
adc
fstp
rcrl
xor
icebp
cmp
mov
aam
int3
rorl
adc
push
cmc
rcl
push
pop
fwait
ja
rolb
ss
jnp
xchg
mov
lcall
mov
jmp
adc
cmp
rcrb
fisubrs
mov
bswap
mov
clc
xorl
fisubs
pop
filds
test
push
ficoms
pushf
std
inc
adc
jae
mov
pop
cmp
and
adc
sbb
push
pop
ret
adc
insb
adc
pop
xor
or
outsb
jns
cwtl
fstl
pop
xchg
push
jne
aaa
scas
outsl
popa
mov
or
loop
sub
mov
inc
sub
mov
xor
mov
or
sbb
or
daa
jg
and
fsts
les
rorl
ret
lret
pop
sub
lcall
out
add
lcall
or
jo
push
call
xor
ret
js
aaa
movsl
add
mov
loopne
inc
pop
mov
pop
mov
repnz
mov
xlat
adc
out
xor
pop
hlt
decb
lods
cltd
cs
subl
fs
out
das
sbb
test
mov
and
mov
add
test
jp
push
inc
add
adc
cmp
gs
rorl
in
xor
jo
sub
loopne
mov
iret
inc
cmp
out
dec
hlt
inc
repz
cmp
notb
addl
cwtl
sbbl
stos
sub
jp
sbb
aaa
ljmp
xchg
adc
int
push
sti
dec
push
and
ss
add
xchg
lret
insb
insl
inc
inc
repnz
int3
or
sub
cmpl
sti
xchg
nop
push
or
pop
sub
fs
icebp
inc
test
ds
loop
arpl
in
xchg
sbb
aad
xchg
mov
xor
xchg
xor
add
mov
mov
rorb
pop
add
aad
rorl
lcall
jae
sbb
out
cmc
daa
loopne
pop
jg
xchg
and
ljmp
jo
imul
fiaddl
inc
aad
cmp
test
push
jo
cwtl
cmpsl
test
adc
cld
gs
mov
lcall
jle
setnp
adc
dec
or
mov
pop
adc
ret
mov
xchg
lret
insl
mov
mov
or
scas
fsubr
or
mov
dec
adcb
insl
loopne
jae
sbb
es
dec
mov
sbb
mov
dec
imul
push
mov
fsubrs
loopne
arpl
push
dec
das
add
in
inc
pop
outsb
lret
xchg
xor
add
in
test
pop
testb
sbb
add
fsubl
stos
cmc
xor
pop
rclb
je
lret
in
mov
cmp
pushf
fiadds
scas
negb
popa
jp
test
xor
inc
jnp
xchg
mov
xor
push
push
add
sbb
mov
out
pushf
or
stc
inc
sahf
mov
and
adc
sub
ja
insl
mov
addr16
mov
inc
push
cmp
mov
decl
xor
inc
ret
jae
mov
or
adc
mov
xor
sub
lahf
dec
pop
mov
mov
jnp
adc
dec
or
pop
enter
nop
aam
lea
mov
outsb
and
jl
xchg
ficomps
add
scas
movsb
lret
ljmp
pusha
fisubs
push
arpl
out
loopne
data16
cmp
rcrb
pusha
incb
test
mov
imul
jb
lea
push
jo
js
clc
cmpsl
dec
jp
push
loop
movl
xor
jnp
push
out
dec
mov
pusha
push
ficoml
nop
mov
ljmp
pop
lods
adc
pop
std
or
pop
je
sub
inc
and
mov
stos
sti
call
decb
xor
fiaddl
lcall
adc
mov
mov
xchg
sbb
mov
inc
pop
xchg
mov
jmp
xor
jb
jo
push
popf
fcomps
hlt
jne
ss
push
lcall
in
test
loopne
adc
mov
nop
mov
or
xor
loopne
sub
imull
sbb
xor
dec
pop
sub
push
or
sbb
and
shrb
jne
cld
lret
pop
mov
adc
xor
sti
push
cmp
push
cmp
jl
pop
call
cli
lock
add
xchg
mov
imul
mov
lods
mov
jne
dec
add
jl
sbb
inc
mov
mov
cmp
in
pop
mov
xchg
mull
xorb
sbb
sub
into
sub
loop
bound
rclb
jbe
mov
inc
mul
nop
stc
sub
or
repnz
adc
out
and
dec
pop
pop
add
cmp
ret
in
mov
imul
xchg
mov
mov
in
sbb
popa
xor
pusha
inc
repz
call
dec
or
jb
fisttps
push
jmp
pop
dec
xorl
negl
xlat
leave
lahf
leave
jne
test
call
adc
into
rorl
enter
mov
sbb
cmp
fucomp
pop
or
jle
mov
jge
sarb
sbbb
lds
daa
inc
lds
stos
xor
xchg
lret
sbb
lods
leave
in
jmp
pop
lcall
mov
sbb
mov
lods
lods
mov
add
out
inc
repnz
cmpsb
mov
gs
popa
or
pushf
or
pop
std
insb
xor
xor
insb
push
and
dec
roll
lea
loopne
sbb
daa
and
mov
aaa
int
cmp
popa
lods
push
das
push
repz
idivl
pop
int3
sub
sbb
jo
loope
dec
jmp
jne
sub
add
pop
test
fmull
fisttpll
inc
mov
popf
or
repnz
jbe
push
push
mov
mov
push
out
lods
push
jge
jns
sub
arpl
sub
sbb
pop
jb
call
leave
jb
mov
pop
pop
mov
jle
jl
test
mov
fwait
mov
jl
cmp
loopne
mov
push
aam
test
push
xor
int3
mov
loopne
adc
dec
sub
out
int
clc
das
fmul
mov
adc
jp
insb
and
xor
rorl
adc
cmp
jno
pop
pop
shrb
iret
inc
imul
sbbb
sub
push
jmp
rcr
push
jns
xchg
fnsave
mov
adc
pop
adc
test
add
shl
xchg
push
mov
addl
sbb
mov
test
outsl
jo
xor
adc
jbe
xchg
out
cltd
movsb
inc
stos
and
mov
mov
dec
xor
cs
mov
cld
sarl
jmp
jnp
mov
jns
arpl
cmc
in
xor
dec
sbbl
add
cmp
aad
ret
adc
mov
addb
mov
cmp
mov
push
fldl
aas
push
sub
rcll
fsubrs
cmp
test
fwait
xchg
lahf
sbb
cmpsb
shrd
dec
je
jmp
fcompl
repz
fwait
es
and
out
push
sub
push
lahf
or
repnz
dec
sub
popf
nop
mov
out
adc
addr16
cmpsl
jecxz
inc
lock
sub
cmc
pop
clc
aaa
mov
sahf
pushl
or
lret
xchg
fnstsw
aam
popa
loop
call
outsl
inc
cmp
inc
push
mov
cli
push
lods
dec
inc
scas
icebp
sub
lds
ret
push
int
push
scas
mov
ja
push
jl
into
push
rclb
fidivs
clc
and
sub
or
adc
push
into
inc
fildl
bnd
mov
iret
push
jne
out
or
jp
jl
into
mov
ljmp
sbb
loope
dec
movsl
inc
mov
xchg
xchg
mov
ja
push
jno
pop
pop
xor
fcoml
lret
imul
cld
lds
jl
loope
add
jp
fstps
mov
cld
mov
push
mov
and
leave
pop
andl
xchg
mov
sbb
in
adc
pop
daa
lret
pop
inc
aad
add
xchg
das
imull
push
ficoms
cmp
sbb
mov
sub
fldl
imul
daa
xchg
mov
aas
mov
pusha
xchg
fs
inc
xchg
xlat
xchg
imul
push
hlt
pop
push
add
jb
push
les
jnp
fadd
out
addb
adc
pop
scas
fsts
jmp
jmp
sbb
adc
push
cmp
push
push
mov
mov
shll
cmc
push
and
mov
sub
shrl
leave
pushf
call
fwait
push
sti
xor
dec
pushf
or
cmpb
ret
cmpb
mov
int3
dec
setle
push
insb
jmp
pop
jb
adc
jbe
push
dec
ror
rcrl
cmp
xor
ds
or
pop
adc
aad
shr
repz
sahf
inc
adc
cmp
cmc
aaa
aas
cmpsl
dec
sbb
mov
es
test
sbb
or
es
and
sub
sub
inc
adc
mov
xor
iret
mov
sub
sub
dec
push
cmp
sbb
repz
pop
pop
mov
xor
and
pop
outsl
dec
xchg
popa
repz
test
aas
iret
xor
adc
arpl
inc
cmc
imul
inc
lods
stc
sarb
jae
mov
cltd
into
pop
sbb
xor
xor
enter
lds
sbb
mov
pusha
outsb
cmp
xchg
call
scas
in
in
mov
std
cmpsb
and
and
imul
mov
call
push
jno
mov
push
inc
pop
mov
add
and
int3
jb
sarl
pop
mov
repz
sbb
aam
jae
hlt
insl
xor
out
mov
sbb
sahf
scas
push
rcll
aas
jp
loopne
pop
mov
xchg
push
mov
sub
pushf
icebp
cmp
xorl
inc
out
popf
cmp
stc
popf
scas
fstpl
inc
jecxz
push
es
movsl
jnp
or
push
add
cltd
or
mov
test
int3
fwait
repz
jne
js
xor
clc
add
popf
aam
dec
or
xchg
out
xchg
adc
push
lods
lods
adc
xorb
cltd
lcall
popf
jb
jb
mov
f2xm1
sbb
insl
mov
repnz
add
or
adc
pop
dec
and
stos
push
add
sub
insl
or
mov
incl
fistl
and
adc
not
xorl
xchg
pop
in
lds
js
or
sub
sbb
mov
jo
adc
mov
xchg
hlt
fisubl
daa
aaa
inc
sahf
subl
stos
fisubs
je
movsb
in
mov
xchg
test
aam
leave
je
in
jo
aas
sub
and
cmp
or
ret
add
xchg
pop
in
insb
dec
mov
pop
fcmovnbe
decb
or
js
push
xchg
test
adcb
mov
mov
enter
loopne
and
add
jg
xchg
enter
movsl
pop
jne
xchg
cmc
mov
in
shlb
sub
adc
lock
gs
dec
mov
test
cmpsb
ljmp
push
xchg
into
outsb
mov
ja
pop
ja
pop
sbb
popa
out
mov
push
mov
jmp
jo
cmp
dec
shrb
stos
nop
in
dec
jle
xor
sub
xor
sahf
in
sub
addr16
cwtl
push
and
inc
push
sti
jno
mov
inc
je
nop
add
cs
xor
dec
mov
push
or
jmp
call
mov
dec
gs
in
icebp
cs
pop
push
in
sub
lea
les
add
cld
andl
pop
insb
je
aas
sub
and
test
imul
cmp
decl
test
arpl
rorb
fnstcw
cmp
and
leave
mov
movsl
inc
push
xlat
xchg
pushf
mov
push
push
gs
sbb
jbe
lea
mov
add
mov
es
xor
jl
lcallw
jbe
and
adc
aaa
fsubs
mov
lea
or
repz
jns
adc
xchg
into
or
ret
push
call
mov
mov
jge
in
cmc
mov
call
lods
inc
dec
js
push
rcrl
dec
cmp
std
and
mov
call
ss
cld
push
ljmp
out
xlat
push
in
loope
stos
inc
fdiv
insb
mov
mov
dec
xchg
scas
push
insl
inc
or
out
movsb
idivb
push
ljmp
std
lahf
add
adc
ja
inc
divl
xchg
scas
mov
ret
rcll
push
fwait
adcl
leave
mov
push
dec
and
movsl
xchg
lea
test
push
sub
mov
dec
sub
dec
push
cmpsl
and
push
cmp
jne
mov
int
jbe
fsts
mov
imul
ja
js
cld
lret
mov
xor
sub
repz
or
xchg
mov
push
lahf
jge
push
repz
inc
ds
mov
pop
fisubrs
int
loope
in
pop
jg
imull
inc
fsubs
jae
std
movsb
mov
ret
push
pushf
xor
leave
addr16
lea
mov
dec
icebp
fdivrs
insb
push
ss
sti
sbb
fcoml
nop
or
push
and
int
add
cwtl
pop
addr16
mov
scas
mov
ret
nop
xlat
imul
sbb
pop
sar
std
fisubs
shrl
mov
add
mov
shl
mov
or
shrb
pop
ss
ret
inc
mov
cli
out
pop
lret
xchg
add
or
jmp
xor
mov
lret
addl
mov
push
fcoms
pop
aam
dec
mov
fcompl
pop
in
mov
vpcomq
test
cwtl
push
les
push
clc
into
imul
mov
dec
mov
mov
adc
std
test
fldt
dec
shl
enter
dec
stos
outsb
xor
push
pusha
ret
fxtract
daa
jbe
das
adc
rcrb
mov
dec
fimuls
xor
jmp
pop
mov
xchg
cmp
xchg
mov
sbb
rolb
mov
xlat
xor
aaa
pop
in
icebp
outsl
loopne
ds
sbb
pop
popf
rcrb
in
loope
inc
addl
hlt
insb
dec
rcrb
repnz
scas
fcmove
mov
hlt
push
mov
lcall
adc
mov
inc
shll
jb
outsb
ret
push
jno
loop
push
pop
inc
or
mov
int3
out
pop
dec
cmc
mov
sub
jge
push
popa
loope
jge
setnp
push
add
mov
ljmp
sub
ret
or
sub
xor
jmp
fmull
mov
mov
push
sub
sbb
sub
jbe
cmp
adc
pop
adc
cmp
and
and
sbb
pusha
aas
mov
mov
xchg
jp
daa
mov
test
aaa
ja
hlt
stos
pop
decb
mov
daa
pop
mov
cmp
faddl
mov
xchg
orl
and
stos
insl
sar
insb
sub
add
fs
xor
nop
xor
daa
pop
mov
pop
andb
nop
and
jecxz
insb
mov
lahf
push
add
sub
test
xor
adc
adc
daa
jge
or
loop
test
sbb
hlt
out
adc
inc
insl
out
sub
or
int
pop
stos
dec
inc
scas
xorb
cmpsl
sub
mov
in
leave
and
xchg
adc
or
mov
xchg
sbb
adc
fsts
mov
xchg
mov
cs
fcomps
push
and
subl
in
mov
dec
mov
and
test
pop
icebp
push
das
cmp
inc
rol
ret
leave
dec
and
mov
cmp
js
pop
and
stc
mov
xchg
push
push
leave
arpl
or
jne
mov
sbb
or
mov
or
adc
lds
test
insb
das
cld
lea
mov
bound
test
push
cmp
inc
adc
daa
push
push
rorb
hlt
push
fsubrl
fs
leave
lret
mov
mov
sbb
xor
adc
fstpt
test
aad
je
mov
and
push
idivl
push
cmp
mov
je
mov
xlat
and
xchg
pop
pop
pop
xor
add
mov
jnp
imul
iret
add
add
sub
mov
aad
fcmovbe
sti
mov
push
mov
std
data16
aaa
xchg
mov
xor
fwait
push
sbb
sbb
filds
mov
sbb
sbb
pop
cmp
pop
es
adcl
and
xchg
cli
jecxz
xchg
pop
inc
jecxz
push
daa
fwait
out
loopne
insb
mov
pop
mov
push
das
ja
in
jbe
xchg
or
jg
cli
adc
sub
xor
jno
push
sbb
das
lahf
dec
cmp
xchg
rol
les
int3
pop
xchg
lds
pop
cmp
xor
aad
imul
lret
rcrb
pop
icebp
xchg
cmp
ficomps
mov
sub
out
ljmp
add
mov
mov
dec
sub
in
addr16
mov
sbb
bswap
out
call
loop
aad
mov
mov
jns
fcoms
jbe,pn
cli
insl
dec
into
imul
cld
lret
lock
or
sbb
subl
std
enter
lods
stos
dec
inc
mov
dec
sbb
iret
mov
jo
cld
cmc
lea
pop
fdivp
mov
pop
ja
push
movsl
xor
aad
push
test
xor
incb
and
pop
push
ds
int
jns
imul
mov
pushf
mov
cmp
or
jns
jnp
pop
cmp
loopne
lcall
ret
daa
pop
add
in
jmp
stos
not
loope
xchg
pusha
fnstsw
ljmp
fcomp
scas
pop
dec
daa
cmp
pop
adc
imul
jae
out
inc
lods
sbb
ljmp
jmp
enter
mov
stc
dec
add
dec
cmp
fsts
cmpsl
add
unpcklps
lods
hlt
and
cmc
pop
fdivl
push
inc
inc
cmp
xchg
lret
loope
push
out
sbb
and
daa
push
cmp
cmc
or
xchg
aaa
gs
aas
xor
cmp
stc
jp
pusha
cli
fwait
inc
add
mov
int3
loope
int
and
xchg
mov
pop
push
dec
add
rcll
inc
mov
sahf
pop
and
fisubrs
je
pop
popa
dec
jl
arpl
faddl
lcall
xchg
cmpsl
adcl
fwait
leave
mov
shlb
bound
mov
gs
clc
in
xor
dec
dec
cld
and
enter
or
add
neg
or
imul
dec
out
jle
inc
add
jbe
jns
test
daa
pop
fs
mov
data16
mov
iret
popf
aas
xchg
iret
sbb
mov
test
xor
in
hlt
ds
ljmp
xor
imul
loopne
les
pop
lods
popa
mov
cmp
inc
cmpsb
ja
mov
lods
cs
push
inc
loopne
pop
aaa
mov
dec
jecxz
popa
add
mov
sti
out
mov
cli
pop
xor
pop
jecxz
pop
outsl
adc
fs
sub
dec
jnp
mov
pop
lcall
inc
testl
push
std
jecxz
fsubrs
sub
sti
push
out
cmp
std
add
fsub
faddl
loop
nop
enter
mov
ret
cmp
aad
mov
sub
xchg
rcrb
xor
sub
fstpl
imul
jno
and
aam
hlt
fnstenv
inc
sahf
popf
dec
xor
lahf
lret
aas
cld
popa
mov
daa
jnp
mov
pop
push
pop
dec
mov
inc
pop
pop
arpl
inc
out
mov
jg
sub
xor
mov
lahf
xchg
aas
inc
test
sbb
sub
lahf
stos
mov
leave
icebp
and
or
test
xorl
xchg
loope
call
pop
pushf
dec
and
add
mov
push
fistpl
adc
les
stos
add
and
lods
insl
xchg
xor
je
dec
out
movb
xchg
jge
fwait
inc
jp
add
lret
setne
mov
aas
imul
and
jns
pop
movsb
dec
inc
push
dec
jp
jmp
jo
hlt
mov
scas
mov
mov
out
cmp
xor
data16
add
dec
xchg
cmpsb
jp
jle
and
in
jb
lcall
daa
je
xor
aaa
add
mov
sub
sbb
inc
aad
and
fwait
jbe
mov
jg
mov
insb
mov
mov
mov
lock
data16
mov
mov
aad
inc
ss
jle
or
dec
fbld
hlt
cmpsl
inc
aad
out
rclb
mov
jg
mov
test
inc
outsb
js
popa
mov
jmp
sbbl
jecxz
lods
mov
push
movsb
jl
test
add
lods
xchg
arpl
mov
mov
pop
xor
ret
cld
add
out
pop
repz
push
pop
sbb
test
popl
mov
nop
push
add
mov
adc
loop
and
mov
scas
lcall
lea
ret
mov
mov
add
movl
mov
sbb
scas
add
into
or
iret
inc
pop
push
dec
nop
or
rcrb
cmpsb
push
js
testl
xor
add
pusha
mov
addr16
je
movsb
int
dec
mov
mov
xor
aas
iret
and
inc
les
xor
cmc
loope
mov
pop
mov
lret
shrb
lret
cmp
mov
sub
adc
adc
cmp
adc
sub
inc
fsubrs
pushf
xchg
mov
hlt
iret
xor
sub
inc
inc
sbbl
jae
inc
and
xor
cltd
mov
dec
nop
adc
cmp
cmc
mov
mov
out
int
addl
stc
mov
decb
xchg
jb
pop
call
inc
inc
lahf
or
out
mov
push
pusha
jno
mov
push
fs
adc
pop
outsb
popa
fcompl
dec
adc
sub
outsb
add
jnp
sarl
or
clc
lods
dec
ljmp
test
insb
pop
aad
adc
dec
inc
icebp
jge
cs
mov
aam
or
repz
call
mov
mov
dec
xchg
cld
imul
rclb
jecxz
out
aas
push
out
sub
pop
stc
add
ror
cmc
gs
shlb
pop
inc
test
insb
es
add
pop
mov
push
repz
push
jnp
and
out
mov
imulb
sub
jl
out
jge
mov
clc
pop
aad
sub
mov
jle,pt
mov
test
push
pop
mov
cmpsl
jns
lret
loope
das
push
fimuls
out
mov
pmulhuw
mov
sub
xor
pop
outsb
inc
ret
sub
aam
dec
insb
cld
hlt
aam
push
sbb
scas
mov
inc
popf
mov
dec
jns
aaa
loopne
in
xchg
out
adc
nop
out
fwait
out
icebp
mov
fadds
cmp
inc
loop
add
inc
cmp
test
mov
mov
xor
fstpl
sbb
mov
pop
std
or
test
out
jg
xor
or
dec
jecxz
out
or
or
add
mov
jge
jg
loopne
hlt
movsb
bnd
lods
or
out
sbb
std
mov
mov
push
aas
aaa
or
dec
outsl
iret
dec
sub
xchg
xor
mov
mov
leave
mov
mov
scas
sub
addr16
fistl
or
cwtl
push
ss
out
out
xor
shlb
inc
ror
jmp
xchg
jmp
ficomps
push
pop
jno
xchg
mov
out
sarl
mov
aad
rcl
adc
xchg
aaa
je
sti
aaa
adc
idivl
ljmp
lcall
rclb
lds
shll
shl
xor
in
cmp
ss
push
xor
mov
xor
pop
mov
inc
mov
push
ss
lret
movsb
nop
mov
cmp
fnsave
xchg
inc
push
sub
push
test
pop
cltd
lret
xchg
shl
sub
nop
mov
cmp
iret
mov
je
sbb
xchg
mov
ljmp
sahf
aam
das
mov
mov
xor
les
jns
xchg
fwait
aaa
iret
inc
mov
cwtl
sbb
repnz
dec
xlat
sub
dec
cltd
out
insl
daa
adc
lea
mov
ret
icebp
cmpsl
loope
test
call
imul
inc
push
aam
jmp
jp
das
shr
insb
repnz
dec
test
enter
imul
cltd
adc
push
sub
sbb
fisttpll
xlat
stos
pop
mov
lret
jmp
outsl
cmp
xchg
jnp
ja
dec
scas
dec
xor
mov
iret
bound
dec
jo
add
jnp
jnp
xor
fistps
movsb
pop
or
ret
es
in
cs
add
cmc
nop
xor
and
and
cmp
jge
sbb
test
xchg
stc
xlat
sbb
repz
in
jg
lahf
lods
imul
jl
cs
inc
sub
shl
loopne
fmulp
arpl
mov
cmp
in
add
repnz
dec
cmp
ret
xlat
jmp
mov
dec
sub
outsb
mov
fldt
add
roll
shrl
bound
mov
jns
pop
xchg
xor
pop
jg
mov
lret
cwtl
mov
inc
vmwrite
cmpsb
testb
aad
inc
mov
jns
cmp
hlt
cwtl
push
push
shrl
xor
and
mov
push
mov
and
pop
leave
std
inc
inc
aam
cmp
inc
out
jmp
arpl
cld
mov
test
hlt
sbb
xor
scas
test
shrb
push
outsb
dec
mov
adc
cmp
insl
out
pusha
cmpsb
pop
lods
pop
loope
push
sbb
loopne
jp
into
xchg
mov
pop
lahf
pop
mov
fimull
xchg
sahf
mov
xor
outsb
mov
xor
xchg
xlat
cld
js
lret
xchg
mov
imul
mov
ret
mov
jl
adc
popa
and
and
sbb
call
push
pushf
and
inc
jbe
and
and
xlat
jno
push
mov
test
test
fcmovu
das
pop
mov
xchg
aad
mov
stos
out
gs
test
jle
loope
sbb
push
jg
xor
sbb
not
lret
aad
push
push
in
jl
xor
sub
mov
mov
mov
pop
jns
push
daa
in
jns
ret
lret
iret
mov
insb
rep
sub
test
outsb
pop
adc
xor
int
nop
ror
fbld
pop
jno
out
ret
addl
dec
fst
cmp
jecxz
addl
mov
adc
xchg
das
sub
stos
cltd
xor
mov
jne
leave
push
jns
mov
in
out
in
movsl
nop
inc
jno
xchg
rorl
cld
mov
ss
xchg
push
push
jg
jg
sub
or
mov
insl
push
ret
push
cwtl
rclb
in
jg
xchg
pop
jb
movsb
push
mov
leave
in
out
je
iret
loopne
mov
lds
nop
test
inc
imul
cltd
pop
push
jp
ds
lcall
or
mov
shrb
cmp
ds
dec
lods
cli
aam
dec
mov
cmpsl
into
jno
inc
ficoml
xchg
in
inc
loope
and
or
dec
push
push
jmp
push
ret
cmpsb
mov
xor
xchg
in
into
xor
add
hlt
in
cmp
fmuls
bound
cmp
sarl
icebp
pop
out
dec
cmc
pop
pop
xchg
xor
ja
mov
push
sub
and
mov
mov
std
xchg
aad
pop
imul
testl
repz
out
jb
hlt
stos
push
hlt
sbbb
cmpsb
dec
cmc
dec
xlat
ret
xchg
mov
adc
repz
repz
push
outsl
notb
xor
hlt
in
mov
test
pop
add
fldcw
mov
mov
adc
push
jb
mov
mov
or
or
mov
jp
cwtl
int3
jno
jmp
icebp
lds
mov
stc
push
ret
mov
jno
out
add
cmp
outsb
lret
subb
dec
cmc
cmp
inc
and
xchg
icebp
cmp
cld
xor
in
fld
lret
and
lods
xor
enter
cmp
nop
scas
loopne
rclb
xor
inc
pop
test
inc
jae
pop
xchg
push
jle
popf
inc
push
vsqrtpd
push
xchg
fnstenv
fsubl
pop
mov
fs
xor
shl
mov
push
mov
jg
dec
and
fistps
pop
insb
dec
aam
and
and
or
mov
cmpl
test
sub
lods
mov
lcall
xchg
mov
popa
push
mov
int
and
pop
shl
ja
xor
mov
add
sbb
addr16
sbb
cmp
sub
or
sahf
addr16
mov
xor
sbb
lea
pop
subb
loopne
xchg
les
inc
pop
and
fcomps
jmp
mov
ljmp
push
mov
test
xlat
xchg
shll
stc
jae
divl
or
cmp
or
cltd
test
cmp
and
out
adc
stc
lret
lods
jbe
mov
mov
pop
stos
mov
cmp
mov
push
mov
call
in
or
xor
loop
fstps
mov
push
movsl
ror
dec
int3
lcall
pop
pop
imul
sub
push
xchg
punpckhbw
cmpsl
jbe
mov
sbbl
inc
jle
push
inc
rolb
sbb
push
xchg
clc
and
and
lods
fdivl
test
fnstenv
fwait
xchg
rcrb
int
xor
sbb
pop
dec
ret
cmpl
jecxz
adc
push
rcrl
xchg
scas
aam
fwait
push
repz
out
out
sub
sbb
lret
push
movsb
inc
stos
mov
outsl
or
cmp
add
mov
je
mov
in
xor
jle
and
cmp
adc
lret
enter
orb
test
fwait
xlat
popa
loop
outsl
lret
daa
sbb
or
and
imul
push
lahf
cmpl
xchg
push
rolb
push
sbb
and
cld
or
xchg
fcomip
xor
sahf
push
rorl
adc
xchg
int
ljmp
push
mov
nop
xor
xchg
jmp
cmpsl
outsl
add
jb
scas
cwtl
jbe
and
hlt
pop
ljmp
fmuls
shll
test
adc
inc
pushf
mov
aas
sub
inc
fildl
fcoml
sbbl
sbb
popf
cmp
sub
cltd
and
mul
test
add
sub
cmpsl
jo
xchg
ret
ret
cmp
loope
push
icebp
fimull
lock
sbb
fiaddl
dec
aaa
shlb
scas
int
sub
xchg
notb
dec
xchg
mov
pop
cmp
loopne
in
or
add
insl
sub
lods
cmp
dec
addl
sbb
int
mov
sbb
mov
pop
add
test
mov
insl
loope
out
cmp
add
ret
idiv
imul
push
sbbl
repz
fcomp
sar
clc
xor
loope
bound
mov
mov
jmp
and
mov
sbb
dec
jbe
outsl
in
and
add
push
jbe
mov
xchg
cmpsl
sub
movsl
int3
xchg
push
out
mov
psubusw
jmp
fadd
xor
pop
jmp
call
inc
mov
scas
nop
push
cltd
lahf
xchg
mov
dec
add
jmp
sub
mulb
cmp
cwtl
pop
pop
cmp
mov
pop
hlt
dec
mov
push
jne
insb
xchg
dec
loop
lds
out
or
sbb
sahf
arpl
addr16
xor
into
mov
mov
mov
jb
mov
jb
inc
inc
mov
sbb
cmp
mov
lds
adc
arpl
mov
fwait
pop
fbld
dec
jns
dec
xchg
dec
fwait
int3
arpl
xchg
xchg
jne
dec
pop
inc
mov
les
sbb
jns
xchg
pop
stc
stos
out
repz
insb
mov
iret
cmp
test
das
sahf
push
dec
mov
out
xor
lea
popa
pop
mov
dec
push
loope
dec
aam
inc
xor
repz
push
push
push
loopne
imul
notl
ljmp
add
xchg
inc
ljmp
into
sbb
inc
sub
jp
mov
jno
dec
rorl
pop
mov
repz
mov
cmp
sub
adcl
mov
push
cmc
xor
dec
outsb
hlt
and
or
arpl
mov
psrld
xchg
push
push
scas
mov
outsl
in
mov
push
and
into
roll
lret
das
pop
int
filds
sbb
popa
mov
mov
or
inc
xor
nop
jmp
mov
sbb
mov
or
sahf
out
mov
jae
sbb
xor
jge
mul
mov
xchg
fnsave
jg
fs
jne
sahf
pop
pop
les
in
es
andl
fidivrs
inc
or
js
clc
adc
xchg
daa
mov
adcb
inc
sub
test
cltd
push
imul
or
add
push
mov
loope
push
or
fs
cmpsl
jmp
movsb
mov
cmp
fisubrs
pop
adc
movsl
aad
in
cmp
pop
add
ja
cmpsb
xor
bound
js
cmp
int3
pop
into
pop
push
idiv
jne
in
loope
mov
add
fs
jae
dec
popf
dec
outsl
shll
mov
lret
pop
test
shr
loopne
out
movsl
jae
icebp
ja
dec
sub
orb
jbe,pt
out
incl
push
jno
and
jne
jmp
inc
shlb
mov
adc
movsl
push
jl
cwtl
scas
pop
or
fisttpll
push
mov
icebp
adc
mov
sub
mov
scas
fdivrl
push
data16
xchg
shll
inc
jnp
xchg
leave
or
insb
fcomi
or
xor
fs
push
or
fs
pop
dec
sub
dec
push
mov
lcall
push
ss
adcl
pop
push
push
adc
xchg
loopne
in
xchg
insb
pop
add
push
xchg
cmc
out
ja
fldl
add
inc
push
and
inc
jnp
insb
and
pop
adc
xor
pusha
sbb
sbbl
mov
pusha
mov
mov
ljmp
mov
xchg
insl
push
dec
stos
imul
ja
cltd
mov
imul
lcall
fimull
nop
mov
push
in
mov
jb
sub
into
das
mov
fs
jmp
in
imul
mov
jnp
mov
fsubrp
shlb
jnp
dec
xchg
xor
pop
mov
imul
mov
jb
adc
push
ds
clc
lods
xor
popa
mov
call
stos
std
add
add
sbb
jno
mov
or
enter
sub
scas
bound
mov
jo
jno
shrl
in
js
imul
hlt
cmpsb
inc
pmaxsw
xchg
testb
out
dec
add
ds
pop
rcrl
push
pop
adc
imul
push
jmp
or
data16
test
push
mov
inc
mov
dec
sub
insb
jo
or
xchg
mov
in
xchg
popf
dec
pop
ret
mov
cmpl
loope
call
loop
adc
xchg
sbb
xchg
clc
push
bound
out
in
pop
pop
neg
push
xor
sbb
sbb
idivb
loop
mov
push
jmp
pop
mov
mov
ret
mov
cwtl
xchg
cmp
int
inc
sub
ss
lods
and
cmpsl
cmpsb
sti
aad
out
fs
rol
scas
lds
lcall
add
mov
repnz
rcll
mov
enter
out
and
inc
sub
in
insb
pop
lret
lods
pop
in
push
lret
xor
and
mov
add
out
sub
jb
jo
in
popl
icebp
popf
test
pop
andb
lods
sahf
popf
jae
cmp
mov
mov
lds
out
add
cwtl
or
xor
cmp
inc
push
mov
out
lea
mov
pop
sbb
leave
shlb
xchg
test
adc
sub
insb
or
xchg
mov
adc
push
lods
jo
mov
loope
xchg
mov
cltd
loopne
dec
jmp
ss
xor
fwait
loop
inc
leave
stos
jl
xchg
nop
push
or
imul
mov
mov
add
mov
inc
inc
test
mov
jg
sbb
sub
cmp
xor
icebp
xor
cmpsl
inc
mov
mov
shll
mov
aas
fstps
push
cwtl
mov
pop
inc
dec
fiadds
mov
or
fiaddl
dec
cmpsb
sub
subl
dec
insl
push
lea
sub
shrb
jnp
push
inc
enter
cld
mov
or
iret
imul
cmovbe
fsubrl
mov
mov
mov
pop
pop
outsb
jmp
stc
cmpsl
xchg
jb
inc
cmp
stc
lds
jne
popf
sti
or
testb
jp
adc
dec
subb
fisttpll
add
adc
inc
push
sbb
fs
out
cmp
push
imul
inc
xor
icebp
adc
rol
mov
and
loope
sbb
add
jae
inc
adc
sub
lods
push
push
sbb
data16
nop
jo
xchg
or
into
jmp
mov
mov
sbb
add
test
addl
mov
inc
or
cmp
pop
xor
adc
scas
cmc
rcrl
sbb
pop
adc
fidivrl
hlt
xchg
stc
hlt
push
or
push
fcoms
add
shll
icebp
jl
dec
cmp
loop
dec
mov
clc
inc
add
sub
scas
dec
dec
pop
movsb
inc
js
sub
cmp
lods
sub
xor
add
xchg
mov
popa
imul
dec
push
xchg
cmc
or
fldt
adc
shr
push
aas
jg
lahf
ret
xor
cltd
push
and
jle
mov
push
nop
sbb
pop
fsubrs
test
out
jmp
cmpsl
mov
mov
imul
inc
adc
cmp
addr16
in
clc
lods
sbb
pop
testl
or
or
jnp
pop
and
lcall
pop
int3
inc
push
das
mov
scas
nop
in
pop
dec
jne
stos
int3
xor
jno
dec
mov
push
pop
and
push
xor
and
xchg
cmp
jae
inc
shr
les
popa
sbb
xchg
sarl
xchg
cmp
fsubr
cmpsl
rol
lds
inc
aas
push
movsb
pop
xchg
cmp
cmpsl
shlb
jp
push
aas
inc
scas
lods
inc
push
popf
loop
add
aam
adc
aaa
loop
add
sarl
fwait
call
sbb
ja
jne
ficompl
pop
inc
das
or
mov
lcall
pop
ret
adc
push
lds
pop
in
mov
inc
inc
fildl
mov
mov
clc
push
mov
add
push
pusha
pushf
dec
xchg
mov
pop
aas
push
hlt
sbb
and
cwtl
insb
add
pop
pop
adc
dec
scas
pop
lock
cmp
lods
lret
pop
or
fistpll
dec
add
test
mov
inc
cltd
ja
xchg
push
cwtl
incb
ss
idiv
cwtl
mov
lahf
mov
popf
pop
rcrl
rclb
inc
pop
cmp
push
out
mov
pushl
fimuls
lds
repnz
mov
es
stos
adc
dec
sub
ds
push
push
nop
adc
push
mull
cmc
cmp
jo
sbb
mov
or
test
cs
fcmovb
sub
jp
mov
loop
sbb
mov
gs
sbb
xlat
mov
jl
push
gs
cmp
jne
mov
dec
pop
sbb
or
and
or
rorb
xor
add
lea
inc
and
jbe
stc
int3
les
mov
xor
or
test
rclb
sub
sahf
nop
pop
inc
jne
and
stos
inc
shr
and
rcl
xor
cmp
xchg
jecxz
sbb
add
gs
cmp
xor
test
and
push
test
push
cltd
mov
jle
shrl
icebp
ja
sti
cli
pop
mov
sbb
sbb
sahf
mov
push
push
lret
mov
loope
pop
add
xchg
and
or
sub
pushf
test
or
cmpsl
sub
mov
pop
mov
and
mov
fsts
sbb
push
mov
cld
mov
cmp
shr
and
sar
hlt
je
outsb
lods
in
xor
lods
bound
push
inc
je
ficoms
test
cmp
or
cmp
das
inc
adc
addr16
in
push
fxam
int3
dec
jnp
lods
and
fisttpl
add
pop
add
dec
insb
or
mov
enter
mov
outsb
pop
jecxz
sub
insl
pop
sub
fnstenv
sbb
sahf
mov
loope
orl
fs
jmp
mov
add
test
outsl
xchg
std
cmp
sub
mov
test
lcall
fisubrs
xor
xor
testl
jmp
mov
mov
mov
jp
out
pop
cld
adc
push
test
add
sub
mov
push
mov
cmp
xor
xchg
data16
dec
inc
and
sbb
mov
inc
orb
sub
aas
nop
mov
pop
jg
test
shrl
add
movl
or
lods
lret
and
cmp
mov
cwtl
pusha
daa
ficomps
mov
mov
jb
mov
push
ret
imul
sub
rcl
push
pop
lods
ds
xlat
add
sbb
cmp
icebp
xchg
and
scas
dec
xorl
sbb
into
inc
out
in
xchg
repz
and
shl
in
mov
add
fisttps
fnsave
cmp
pushf
dec
and
jb
fcmovnu
sub
mov
lret
or
into
add
stc
imul
dec
jbe
shl
pop
xchg
add
mov
or
jnp
add
cmp
lret
inc
out
lock
inc
or
jne
jecxz
sbb
and
sub
jb
and
movsb
mov
lret
xchg
jno
fsubl
pushw
jb
sub
call
fcoml
fsts
push
imul
aam
out
andb
push
mov
xor
dec
sti
and
in
mov
es
lds
fwait
adc
cmp
fldcw
fwait
xchg
xchg
push
out
inc
sbb
push
jns
imul
loop
call
fldt
lds
ret
xor
jmp
sahf
pusha
jne
sti
es
sub
rolb
push
push
jle
fdivs
dec
imul
test
loopne
adc
pop
hlt
xchg
jmp
xchg
cmp
dec
lret
addr16
dec
je
call
frstor
and
fistl
int3
daa
push
stos
push
int3
pop
push
popf
mov
push
pop
jl
int3
xchg
pop
mov
mov
xchg
and
fisttpll
gs
sbb
pop
sub
daa
inc
jle
pop
xor
addl
dec
andb
adcl
bnd
les
cltd
push
inc
mov
sub
inc
cmp
lods
sub
dec
mov
adc
mov
rcrl
mov
aas
add
lds
mov
pop
sub
sbb
in
lods
decb
pop
lea
sbb
aad
movsb
jns
addl
cmp
ror
push
in
adc
pop
pop
nop
jnp
mov
mulb
sub
cli
addb
cwtl
jle
out
xor
dec
shlb
sbb
testb
in
pop
mov
shrl
adc
out
call
jmp
outsb
sub
arpl
dec
or
jg
fstps
dec
push
decb
aad
push
jb
xor
push
or
popf
test
stos
shrb
pop
je
cli
jbe
cmc
sti
and
popa
mov
outsl
ljmp
cmp
daa
jmp
std
add
aad
popa
jno
ljmp
shr
lods
jmp
cmp
mov
and
les
test
pop
repnz
and
dec
popa
and
mov
xor
jmp
pusha
sbb
inc
cmp
pop
adc
ret
push
push
popf
jmp
sub
sti
mov
ror
cltd
pushf
leave
loopne
aaa
or
inc
mov
pop
scas
adc
mov
jge
sub
ret
pushf
in
nop
and
ror
push
dec
xchg
pop
sub
lock
adc
jns
xchg
fcmovne
pop
nop
lret
popf
cmp
and
or
mov
or
and
or
icebp
jge
xchg
adc
nop
cwtl
xchg
les
push
stos
shll
sub
les
jle
dec
push
jnp
inc
or
aas
mov
enter
mov
popa
sbb
xlat
xlat
pop
xchg
fidivrl
mov
movl
jg
movsb
enter
mov
push
out
out
cmc
lcall
xchg
imul
ret
out
sub
jmp
movsb
es
xor
or
notb
mov
mov
insb
and
ret
inc
and
out
jno
hlt
mov
cmc
mov
int
jle
pop
loope
sbbb
jmp
xchg
xor
pop
dec
rolb
outsb
sub
fnsave
fcmovne
dec
add
dec
test
mov
sar
movl
pop
mov
mov
movsl
mov
push
out
mov
test
xor
les
out
mov
xlat
mov
int3
and
xchg
dec
scas
mov
sbb
movsb
pop
shl
in
test
or
out
add
jns
jns
call
out
pop
and
roll
adc
icebp
mov
pop
push
cmp
cmc
and
cmp
xchg
ret
fldl
fcmovnu
mov
or
push
daa
movsb
xor
int3
adc
jmp
fstpl
inc
xor
das
and
pop
add
sbb
repz
rorl
ret
lret
dec
jle
mov
cmpsb
jmp
ljmp
popf
cld
mov
sub
mov
fs
inc
jge
mov
bound
dec
icebp
sbb
add
cmp
cmp
test
mov
test
sub
loope
adc
dec
jl
jo
jle
mov
sbb
movsl
imul
loope
mov
or
addr16
inc
inc
push
sti
mov
aaa
fucomp
sub
mov
pop
sbb
mov
and
adc
std
pop
loop
lock
arpl
lret
and
push
xchg
shrb
popa
adcl
mov
cmp
ljmp
xor
xor
shll
mov
loopne
cli
lds
das
leave
insl
stos
jae
push
xor
xchg
out
push
jmp
jmp
jmp
inc
loop
pop
mov
popf
xor
jg
cmp
mov
xchg
fcompp
xchg
in
sar
mov
push
sub
insl
cli
jp
or
sar
sti
fbstp
bound
push
inc
pop
cmp
outsl
ljmp
shl
test
or
xorb
mov
dec
jnp
popl
jge
stc
sub
insb
push
push
ret
inc
cltd
shrl
jl
fdivs
mov
fsubrl
mov
aad
scas
sti
sub
add
out
dec
sub
sbb
stc
outsl
push
and
cmp
rcrb
jg
jnp
ret
xor
pop
pop
adc
bnd
lahf
push
test
inc
sub
daa
mov
mov
jg
cmp
add
mov
xchg
adc
cmc
xchg
sub
sub
sbb
or
mov
cmp
leave
out
aas
add
je
push
dec
inc
sub
sub
inc
xor
loope
dec
add
xor
or
insl
mov
lods
xchg
lret
xchg
das
push
in
rolb
fadd
push
pop
jb
xlat
xlat
xchg
cmpsl
jnp
or
je
xchg
mov
lods
or
cs
stos
sub
das
test
aas
or
in
imul
mov
out
cltd
add
jge
andb
in
mov
out
xorb
xchg
call
dec
cmp
mov
aam
test
and
imul
sub
cmp
test
push
rcrb
insb
dec
in
xor
inc
mov
or
lahf
lods
pop
add
in
stos
jae
jnp
push
or
dec
loope
subb
das
push
pop
pop
sbb
xchg
and
mov
movb
fucomi
and
out
inc
aam
mov
cmpsl
mov
shll
inc
mov
dec
cmc
adcb
fstpt
out
add
add
insl
fldcw
pop
sbb
stos
mov
xlat
push
cmp
cmp
adc
pop
adc
jg
subl
xchg
neg
mov
push
fnstsw
sahf
flds
inc
addl
jno
dec
outsl
loop
mov
pop
arpl
prefetch
notl
jae
sbbl
pushf
xchg
push
xor
xchg
and
push
push
sub
fstl
insb
sub
cmp
jl
xor
sbb
pushl
arpl
dec
cltd
movsb
sbb
mov
out
scas
xor
insb
int
in
push
push
xor
xchg
jb
es
lea
lcall
inc
add
insl
mov
outsb
bound
outsb
xchg
cmp
jl
les
mov
fnstsw
in
cli
sub
inc
pop
and
lods
mov
cmp
test
jmp
push
shrl
mov
cmpsl
in
push
push
lea
and
rorl
and
push
xor
add
dec
mov
sbbl
xchg
jl
out
test
xor
inc
sbb
cmp
cmp
call
mov
ret
daa
sbb
test
cltd
popf
sbb
jns
cmp
pop
xchg
dec
and
rcll
mov
mov
fisttps
push
shrb
mov
ret
xchg
sub
imul
mov
mov
jmp
enter
push
aas
pusha
push
cmc
or
sti
in
lds
adc
pushf
xchg
lret
lcall
sub
sub
bound
push
push
mov
jae
inc
enter
cmpsl
adc
push
xchg
cli
and
push
aad
mov
mov
cmp
or
leave
out
in
jno
mov
or
shl
js
cwtl
mov
clc
inc
scas
inc
mov
sbb
cmp
std
fsubs
stc
popf
jbe
aas
inc
or
and
xchg
aas
out
mov
inc
adc
std
test
out
mov
mov
mov
xor
push
inc
in
push
out
push
xchg
test
in
push
jp
bound
mov
xchg
shll
sub
push
lret
pop
cmp
movl
loopne
mov
test
popf
cmp
mov
mov
mov
insl
push
jne
mov
lock
xchg
sbb
xor
hlt
push
mov
insb
shrl
repz
cmpb
dec
cmp
scas
xchg
mov
jnp
outsb
mov
push
repz
push
xchg
mov
insl
xchg
movsl
xor
movsl
into
push
shll
xor
xchg
or
lret
or
jmp
mov
cs
cwtl
jno
dec
xchg
fwait
cmp
jmp
in
push
xchg
pusha
fidivrs
dec
mov
push
je
cli
fcoml
push
movsb
push
adc
cmp
arpl
mov
add
mov
pop
loop
movsl
popa
push
mov
sbb
imull
push
fsubl
cmp
shll
mov
outsl
std
sub
ds
xchg
ja
sti
movl
sub
pop
and
stos
push
andb
insl
ljmp
nop
fisubs
scas
sub
decb
int
nop
test
pop
cld
mov
out
jge
movsl
dec
popa
and
mov
or
pop
mov
mov
mov
sbb
into
pusha
sbb
pop
rcrb
hlt
xor
dec
or
mov
and
push
jno
imul
ret
push
scas
addr16
outsl
xor
push
filds
cmp
fbld
xchg
cmp
push
sti
ret
dec
add
pop
js
lahf
jb
add
mov
jge
sbb
and
enter
test
push
xchg
cmp
push
loop
stos
sbb
xor
shlb
adc
mov
xor
dec
dec
sar
lds
or
nop
movsl
add
ret
inc
jle
xchg
pusha
dec
incl
add
cltd
out
or
sbb
sub
xor
test
mov
iret
fistpl
pop
pushf
adc
cli
insl
xor
pop
inc
fisttpl
faddl
mov
push
idivb
mov
add
pop
mov
mov
aas
or
fwait
cmp
out
test
sub
out
inc
xchg
les
into
lret
test
jno
icebp
jns
ljmp
jo
adc
in
and
add
and
das
lret
mov
mov
mulb
xchg
popa
cmpsl
or
jge
lock
fmull
fidivrs
jae
fs
xchg
jnp
xor
xchg
pop
and
rcrb
jmp
mov
les
push
push
out
loopne
cmp
add
dec
test
and
fadds
fdivr
adc
push
ret
dec
cmpsb
jge,pt
jo
pop
into
mov
push
jecxz
dec
loope
adc
in
hlt
ficompl
orb
jo
je
in
jbe
push
xor
lret
mov
mov
or
inc
sub
fcomps
xor
lret
out
or
shr
movsl
fsubl
adc
or
call
pop
inc
xlat
mov
mov
loope
xchg
das
push
dec
scas
test
xchg
lods
lcall
mov
ss
mov
mov
sub
iret
mov
iret
and
sub
pop
lahf
insl
rorb
jge
xchg
pop
jge
and
popf
adc
mov
pop
and
push
and
mov
cmp
add
rorl
scas
pop
movsl
stc
pop
icebp
lret
xor
in
sar
add
jae
mov
mov
pop
movsb
pop
not
add
cli
sub
sbb
into
pop
test
repz
sub
out
jne
or
or
daa
push
dec
jg
aas
jb
insl
nop
ljmp
scas
push
out
fucomi
fimull
repz
mov
pop
xor
in
xchg
mov
xor
repnz
push
jmp
mov
dec
repz
scas
arpl
or
fidivrs
cli
pop
xor
js
lds
xor
ljmp
test
mov
insl
cmp
push
cmpl
lret
fcoml
mov
in
test
sub
leave
xchg
andb
push
insb
jnp
adc
push
outsl
rorb
fsubrs
mov
push
jge
pop
sub
jns
pop
popa
outsl
or
sbbb
cmp
inc
rcr
push
dec
jmp
push
or
cmpsl
cmp
cmc
imul
out
gs
jecxz
or
xchg
enter
test
sub
dec
push
std
xor
mov
cmc
mov
and
fcmovbe
ss
xor
arpl
sub
sbb
scas
mov
enter
push
jne
push
mov
cmc
jbe
stc
mov
push
mov
mov
sub
imul
sub
jae
mull
fsubr
fiaddl
mov
or
stos
xchg
add
ds
shrl
cltd
test
push
adcb
sub
xor
les
jp
lea
xchg
int3
outsl
jge
mov
xor
and
jmp
mov
std
adc
pop
div
lea
xor
mov
mov
cs
and
test
aas
push
mov
sbb
rcrb
jge
js
inc
in
sahf
fiaddl
sub
dec
push
push
add
clc
inc
mov
imull
dec
insb
inc
out
aad
outsb
mov
and
mov
cmp
dec
into
inc
cwtl
push
inc
mov
xor
adc
roll
mov
ffreep
pusha
cmp
call
mov
loop
inc
sti
adc
push
cmp
inc
jmp
clc
dec
mov
xchg
adc
into
pop
shll
leave
push
inc
int3
mov
sub
addr16
es
in
xchg
dec
sub
and
mov
fcoms
test
inc
test
jp
int3
scas
les
lret
pop
cmc
cmpl
or
sub
xchg
cmpsl
rclb
xlat
push
test
lods
adc
push
mov
imul
push
sbb
arpl
lahf
std
je
gs
xlat
push
cmp
jns
xchg
in
jno
jmp
or
stos
in
and
setbe
cmp
mov
mov
iret
add
adc
sub
je
aaa
jmp
aas
cltd
outsl
xor
jb
xchg
pop
into
xchg
cld
cmpsl
call
in
ljmp
enter
rclw
sub
testb
jne
sbb
fstp
ret
mov
pop
sbb
out
shlb
pop
decb
aas
lret
xchg
nop
stos
daa
fnstsw
push
ljmp
xor
out
ljmp
lret
bound
pop
shrb
mov
imul
andb
mov
mov
ret
imul
cmp
push
mov
pop
mov
xchg
dec
sbb
jns
xchg
cmp
mov
in
sub
or
and
into
popa
cmp
gs
dec
lds
push
enter
outsb
fildll
jl
mov
je
fidivl
call
sub
add
cmpsl
sbb
test
jnp
out
jae
lret
fdivs
pop
loop
out
daa
sbb
fdivr
std
sub
cmp
add
rclb
xor
cmp
in
or
mov
add
cmc
and
imulb
jmp
orb
adc
inc
or
pop
sti
push
mov
xor
mov
xchg
ret
jne
out
pop
stos
inc
scas
pop
out
or
loopne
call
xchg
cltd
xor
xor
iret
add
gs
dec
pop
dec
xchg
xor
mov
xchg
sub
lret
test
int
lds
rclb
ret
and
cmpb
setp
rolb
inc
enter
mov
shld
sub
test
shll
ret
jns
popa
xchg
and
fcom
xchg
dec
sub
or
and
push
dec
jmp
mov
push
pusha
pop
insb
push
lods
fistpll
lahf
dec
shlb
loopne
sbb
xor
add
and
gs
xor
imul
pop
mov
test
add
cmpb
add
inc
sub
dec
jae
movsl
mov
repnz
and
jne
aaa
out
lahf
sbb
xchg
jle
sub
push
test
int3
dec
out
ret
jp
xor
pop
enter
iret
loop
popf
int3
rorb
fisttpll
dec
or
dec
cmp
test
test
mov
xchg
pop
orb
fcomi
push
xchg
or
rclb
pop
cmp
xor
lock
movsb
mov
rorb
pop
aad
push
sbb
dec
mov
gs
sahf
shlb
cmpsb
ja
or
imul
cli
cli
jle
add
sbb
jbe
pusha
or
jg
sahf
mov
outsl
jle
push
insl
push
push
ficomps
mov
jo
jmp
lcall
movsb
sarl
je
leave
cld
sbb
pop
pop
jecxz
inc
xchg
in
add
push
xor
push
push
ds
push
or
cwtl
mov
or
cmc
outsb
mov
popa
repnz
lret
stos
sub
mov
ret
scas
mov
int3
mov
faddl
dec
push
ds
pop
negl
sbb
xchg
add
roll
fsubrl
adc
sub
xor
imul
xchg
into
add
out
mov
or
movsl
fmul
jne
in
repnz
mov
mov
ljmp
inc
jbe
imul
and
xchg
jno
cmpb
out
cs
ffree
and
push
push
push
insb
jnp
stos
sti
sub
out
mov
mov
mov
pushf
push
clc
incl
mov
in
mov
ret
in
adc
add
mov
xor
xor
push
lea
add
or
repz
xlat
jb
push
fidivl
mov
lahf
jbe
add
std
jbe
int3
pop
mov
push
subb
lea
cmpsb
push
jae
iret
xor
mov
dec
les
inc
push
push
cltd
fidivrs
bound
mov
mov
and
mov
or
icebp
outsl
sbb
adc
fucom
dec
pop
xlat
lret
sbb
add
mov
push
pop
and
push
insb
cmp
test
nop
mov
lahf
push
andb
mov
lret
push
imul
hlt
add
mov
pop
cmp
das
xor
xchg
inc
js
aad
xor
push
jnp
add
cmpl
xchg
pop
push
mov
jl
pop
inc
pop
sub
push
into
std
push
and
push
outsl
pushf
ja
dec
pop
stos
mov
mov
add
test
jp
movsb
sub
or
les
pavgw
dec
cmp
aaa
or
cmpsb
jo
jp
out
mov
repz
repz
sub
pminsw
dec
sub
cmp
les
dec
inc
pusha
rclb
xor
mov
mov
or
mov
mov
into
and
mov
rol
add
xchg
outsl
sarl
test
jbe
push
imul
das
repnz
fcoml
xor
adc
mov
sbb
mov
movsb
je
adc
mov
dec
fstl
jae
lea
jl
mov
test
shll
pop
mov
jg
push
inc
cmp
cld
inc
jmp
addr16
xchg
pop
test
or
push
mov
leave
fstpl
push
in
sbb
mov
ljmp
xor
xchg
test
push
cmpl
inc
pop
adc
enter
ss
mov
jo
mov
add
push
daa
loopne
ficomps
fmull
movsb
jo
leave
rcll
loope
add
mov
sbb
pop
xchg
cwtl
or
inc
fidivrs
pmullw
test
ficompl
js
ja
pop
out
cmp
mov
cmpsb
push
jns
cwtl
jbe
call
bound
sbb
inc
dec
test
popa
add
js
jns
psubusb
sbb
push
sub
enter
dec
cmp
mov
addr16
bound
inc
insl
lcall
jecxz
xchg
mov
pop
jmp
cmp
movsl
insb
jmp
repnz
push
cmp
add
iret
repnz
xchg
lret
inc
popf
xor
cmp
leave
fimuls
pop
out
pushf
loopne
fildl
dec
mov
pop
xchg
cld
test
addr16
out
arpl
or
decb
dec
mov
dec
aad
ds
clc
push
repnz
lret
sbb
int
in
js
pop
fidivrs
push
mov
mov
xchg
or
imulb
in
jmp
fdivrs
mov
fucompp
popa
aaa
loope
mov
dec
xor
loop
and
sbb
lea
call
popf
add
out
jl
lcall
sbb
adcl
and
mov
lret
jbe
cmp
cmpsl
addr16
add
pop
leave
cmp
lods
sub
inc
incl
cwtl
lcall
pop
mov
into
xor
ja
inc
les
xchg
push
push
jmp
push
mov
jno
rorb
dec
push
mov
imul
cld
ss
jne
in
out
test
xchg
daa
or
loope
aam
scas
idivb
loopne
inc
lahf
into
loopne
add
push
jecxz
adc
mov
push
xchg
rolb
js
dec
in
rolb
das
mov
cs
adc
out
mov
sub
xchg
lds
push
les
pushf
cmp
pop
outsb
lods
sub
inc
mov
sbb
pop
xor
gs
movsb
inc
gs
adcb
rcll
xchg
xor
andb
sub
sbb
dec
xlat
push
jl
and
pop
push
into
cmpsb
test
je
int3
sbb
mov
mov
jno
dec
lret
jo
imul
adc
dec
nop
cmp
bound
mov
or
xor
mov
aaa
mov
mov
mov
fwait
arpl
and
dec
inc
aaa
outsb
cmpl
sbb
mov
pop
orl
les
push
popl
xchg
or
hlt
dec
je
sahf
xchg
mov
stos
and
lds
push
shll
jmp
sub
int3
fistpl
jle
inc
popa
xlat
add
mov
cmpsl
pop
out
jnp
test
repz
sbb
add
adc
xor
mov
sahf
nop
test
dec
scas
jne
pop
cwtl
fisttpl
cmp
and
fs
mov
cmp
xchg
repnz
out
dec
daa
int
xor
inc
aad
sbb
jp
cld
mov
lret
mov
dec
pop
dec
or
lcall
push
push
jp
sub
jle
hlt
pop
mov
scas
outsl
pop
clc
rcr
movsb
inc
ds
jge
pusha
fwait
out
mov
loop
add
jne
lea
aaa
int
loopne
sub
test
push
or
pop
lods
in
shl
fbld
lea
cmpsb
jne
scas
jne
cld
inc
insb
sbb
sbb
fdivrs
into
mov
int
bound
shll
cmp
jb
in
and
es
cwtl
clc
dec
scas
fsubrl
cmp
and
dec
add
adc
jmp
call
add
cmpsl
rcrb
push
movsl
xchg
and
jp
testb
mov
mov
leave
mov
popa
popf
ljmp
aam
mov
sbb
or
shl
add
bound
repz
out
sbb
xor
daa
mov
cwtl
scas
cmp
cli
cmp
js
out
add
fs
xchg
push
iret
iret
lock
mov
inc
mov
cmc
test
sbb
cwtl
sbb
fbstp
pop
jge
jl
js
btr
in
jbe
add
inc
sub
cld
stc
and
and
lock
aad
xchg
inc
out
mov
mov
cmp
pop
add
arpl
xchg
test
aam
in
stos
das
mov
sbb
hlt
gs
in
xor
push
mov
mov
cmp
add
out
cmp
cld
flds
or
cmpsl
mov
xlat
leave
pop
jg
xchg
sbb
pop
repnz
push
and
std
in
in
out
mov
pop
push
mov
fnsave
int3
movsl
and
sbb
sbb
mov
cmp
cmp
imul
aam
stc
cmp
imul
dec
aas
dec
push
insl
loopne
ficomps
cmp
push
cli
inc
test
testb
and
lods
cld
cwtl
dec
inc
ljmp
jbe
mov
andb
fistpll
aas
rcrb
push
dec
mov
ds
mov
ret
aad
and
sub
aas
cltd
xchg
add
mov
mov
out
mov
out
sti
add
jg
pop
mov
popa
and
xchg
lods
sub
adc
dec
sahf
lods
fidivrs
lret
cmpsl
ret
repz
lods
ja
push
sbb
sub
xlat
sub
xchg
int3
dec
sub
orb
jo
xor
icebp
orl
cmpsb
in
fisttps
or
push
push
aam
xor
sbb
leave
fbld
push
xchg
scas
lea
sbbl
xadd
outsb
aas
sub
sti
mov
adc
sahf
xorl
bound
iret
rcrb
movsl
mov
fsubrl
mov
das
aaa
pushf
leave
and
nop
adc
mov
out
lcall
mov
xchg
ds
cmc
sbb
hlt
inc
push
adc
push
mov
sbb
fdivr
pushf
adcb
rorl
ret
xor
pop
adc
inc
xchg
mov
pop
arpl
rep
aam
insl
js
mov
test
lcall
push
test
addr16
xchg
xor
scas
mov
mov
movsl
rorb
loopne
sbb
pop
imul
sbb
push
stos
pop
jp
fwait
or
cmpsl
outsb
or
push
jle
mov
jle
mov
ja
lods
shlb
jg
fisttps
movb
push
outsl
xchg
loop
or
and
call
lret
mov
jae
mov
cld
push
cwtl
sub
xchg
mov
cmp
out
jns
add
push
xorb
loopne
add
inc
mov
jmp
xchg
test
sub
jae
xor
pop
gs
jge
movsb
xor
clc
push
jle
mov
cwtl
popa
fidivrs
xchg
and
cmc
push
mov
xor
or
test
jmp
add
cltd
fmuls
in
insb
aaa
cmp
nop
dec
inc
add
push
out
and
rorl
xchg
loop
push
add
push
fcomps
in
xchg
pop
xor
sbb
mov
inc
fwait
outsb
push
movsl
mov
mov
inc
cld
dec
mov
daa
mov
out
mov
rcrb
sbb
mov
lea
cmp
arpl
inc
fbld
ja
ljmp
rorb
stos
sub
inc
cmp
in
or
push
ret
imul
fisttpll
and
add
out
sbb
addr16
aad
mov
lcall
adc
ja
inc
and
lock
outsb
adc
sub
es
xchg
jg
loope
jmp
repz
lods
arpl
jle
sbb
sub
psrad
jns
lcall
add
les
fidivl
pop
cmp
xchg
mov
or
rolb
je
push
adc
inc
lock
inc
or
mov
clc
bound
sbb
adc
popf
pop
fsubl
aas
xlat
mov
inc
xor
hlt
jnp
aad
jns
jecxz
pop
rorb
fidivrs
push
pushf
pop
mov
adc
cmp
in
rcrl
outsl
dec
ds
imul
jbe
push
sub
push
cmp
jp
sub
js
mov
cmp
dec
dec
fdivrs
or
jmp
rcrb
aad
lea
fnsave
jecxz
pop
nop
mov
lret
call
popa
jae
sub
add
arpl
clc
cmpsb
gs
mov
and
ret
mov
rcl
lcall
lock
lahf
lret
out
fs
addb
mov
dec
mov
aam
stos
scas
cmpsb
out
cmp
adc
into
test
push
push
xchg
sbb
and
inc
sub
mov
test
orb
jne
inc
and
pop
in
shll
stos
popa
jp
dec
mov
in
or
xchg
test
outsb
ljmp
mov
ja
je
mov
adc
cli
jbe
pop
push
jnp
repz
lea
imul
xor
std
lds
xchg
loope
mov
fcmovu
clc
mov
inc
jbe
push
xchg
dec
pop
stc
mov
out
cmp
xor
add
push
mov
in
movsl
insb
push
in
jnp
adc
pusha
push
mov
cmp
sub
cltd
xor
cmp
ja
test
and
orl
je
push
in
cmp
test
nop
sub
pop
mov
mov
dec
jp
mov
mov
mov
xorl
sbb
outsb
and
inc
ss
andb
cli
push
daa
insl
mov
mov
pop
fstpt
sub
and
xchg
mov
insl
mov
imul
scas
jnp
or
pop
outsb
dec
push
lret
fwait
iret
or
nop
movsl
sub
shrb
and
xor
and
jo
sbb
aaa
push
jg
xchg
in
push
jp
clc
and
jl
data16
mov
add
inc
repz
xchg
and
cmp
int3
nop
iret
xchg
pop
mov
sar
pop
inc
aaa
xchg
pop
fstl
xor
mov
fucomp
pop
fiadds
mov
pop
dec
ljmp
and
test
pop
dec
insl
sbbl
push
shrb
mov
push
jnp
xlat
fsubrs
and
xor
push
mov
mov
sbb
addr16
cmc
dec
and
pop
lds
mov
ds
or
data16
mov
les
mov
out
loopne
testb
addl
mov
dec
in
outsl
dec
lahf
int
popa
jp
daa
xor
dec
insl
mov
cmpsb
inc
ja
jns
jl
enter
xchg
inc
cmp
add
push
mov
fdivrl
mov
cmovge
clc
jne
xchg
cli
pusha
scas
pusha
dec
jns
sbb
int3
cmp
stos
fldl
mov
push
clc
add
out
mov
loope
cmp
js
imulb
sub
fs
ror
rcll
ja
leave
jg
cmp
sbb
call
push
test
ljmp
loopne
mov
jne
add
cmp
mov
xor
aaa
xchg
movsl
pushf
dec
es
and
mov
xchg
jl
outsl
sub
loope
lea
or
movsb
lods
scas
insb
add
shll
and
sub
and
dec
popl
gs
sbb
fidivrl
inc
mov
add
shll
sub
xchg
dec
lcall
push
jbe
fstl
jp
sub
aad
mov
or
push
into
sbb
call
mov
das
fisttpl
sub
out
jge
add
mov
stos
mov
cmp
add
lock
mov
enter
pop
enter
movsb
jne
iret
inc
repnz
insb
fs
or
push
push
popf
xchg
dec
gs
mov
xorl
xchg
ja
adc
adc
fisttps
cs
add
setg
xchg
stos
addl
xchg
rcll
loop
pop
sub
sbb
lea
jl
enter
pushf
dec
cmp
nop
xchg
in
adc
rcll
push
call
arpl
mov
repz
mov
jo
or
jns
lret
add
cmpsb
lret
jp
test
sbb
mov
mov
or
mov
and
adc
into
sbb
pop
mov
iret
mov
sbb
push
out
aaa
stos
jmp
add
push
cwtl
icebp
add
inc
pop
test
mov
jmp
mov
mov
rcl
mov
cmpsb
lahf
clc
aaa
xor
fwait
sub
add
rcrb
push
add
sub
sub
dec
jbe
daa
ror
inc
jg
add
bound
rorl
hlt
and
sbb
push
adc
xchg
add
fnstsw
pop
loope
arpl
icebp
mov
xlat
mov
xor
aad
xchg
jns
xor
pop
add
adcl
dec
les
xor
cld
pop
int3
push
das
or
filds
pop
jmp
mov
movsb
xchg
jle
es
dec
mov
jle
sbb
jns
adc
bound
jecxz
xchg
inc
fdivrs
pop
dec
mov
loopne
popa
push
div
sub
cltd
adc
push
lcall
enter
test
enter
pop
sar
pop
jge
mulb
sub
aam
pop
dec
sahf
movsl
mov
pop
cld
filds
outsl
lcall
add
jae
fidivl
push
stos
cltd
movsb
adc
cmpsb
pusha
adc
jge
push
pop
mov
rclb
mov
ret
adc
test
clc
pop
jg
test
cmpb
mov
scas
out
dec
test
jbe
sti
push
mov
int3
cmp
adc
loopne
xchg
das
cmpsl
dec
jne
jo
pop
imul
ja
mov
sbb
jle
insb
lods
or
outsb
mov
add
or
inc
push
mov
mov
add
xor
test
cmp
ret
dec
adc
inc
cmp
mov
or
push
sub
xchg
xor
icebp
dec
or
dec
int
dec
pop
addl
ret
sub
cld
cmpsb
and
fistps
hlt
pop
test
pop
outsl
fwait
stos
inc
into
mov
jno
sbb
and
jle
scas
lret
xor
inc
xor
or
sarl
push
add
icebp
dec
adcb
add
xorl
insl
lcall
popa
ds
pop
stos
push
lods
loopne
xor
cmpsl
test
adc
ljmp
test
mov
push
lds
dec
mov
scas
pushf
or
add
fwait
arpl
popl
ss
jae
insb
enter
dec
dec
mov
jmp
sub
mov
xor
sub
imul
jecxz
orb
loop
adcb
xchg
out
lcall
add
cmpsb
lea
sub
mov
ret
mov
cltd
cmp
pop
xor
sbb
ficoms
and
cmpb
enter
lcall
jg
test
jnp
lea
and
mov
inc
xchg
mov
xor
lock
adc
lods
test
repnz
and
lret
lods
pop
movsl
ja
andb
addr16
mov
cs
popfw
inc
cld
ret
cld
add
inc
adc
jp
dec
popl
js
adc
fnsave
push
inc
jle
sbb
fwait
scas
test
imul
addb
lahf
mov
inc
jg
stos
jns
xchg
or
hlt
ret
mov
aam
adcb
cld
mov
xchg
or
push
add
popa
aad
sbbb
push
and
fidivs
push
aam
jg
push
scas
stc
mov
cwtl
sub
jo
jge
xchg
xchg
outsb
add
repnz
pop
ret
lcall
cld
xor
cwtl
jmp
sub
in
xchg
xchg
and
movsl
mov
xchg
idiv
mov
into
mov
jne
inc
mov
cmc
push
xor
ret
and
mov
mov
jle
es
jns
pop
test
cmp
fwait
xchg
xchg
mov
sbb
popa
cmp
nop
scas
adc
or
jp
subb
cltd
push
mov
pop
adc
push
jo
mov
jg
stos
and
movsl
in
mov
repz
dec
mov
test
aad
and
pop
mov
jmp
cmp
xchg
into
sub
fs
sub
pop
movsl
inc
push
sub
mov
aaa
or
add
sti
inc
xchg
jge
mov
int
push
negl
roll
std
stc
dec
movsw
inc
pop
aaa
cmp
sbb
xchg
shlb
loope
sbb
dec
test
pop
mov
fld
jle
sbb
jmp
sbb
ror
pop
cmp
lds
ficomps
pop
and
int
lock
aas
xchg
cmpsl
push
rclb
mov
xor
insb
sbb
test
cli
andl
iret
pop
icebp
out
jl
imul
outsb
ror
pop
jbe
scas
mov
or
adc
imul
pop
cmp
call
addr16
jnp
sub
push
and
mov
fucomp
fs
lret
arpl
sbb
push
rcr
fs
push
lods
lcall
mov
jecxz
mov
movsb
fs
push
test
lds
frstor
fildl
loop
lahf
pop
fadds
push
sub
jge
rcrl
loopne
mov
sbb
adc
adc
arpl
fwait
jno
add
adc
subb
jp
aam
or
or
test
add
testl
ret
das
mov
bnd
js
sub
ljmp
and
lods
call
jp
push
scas
sub
pop
mov
mov
cs
outsl
and
push
shr
stos
cmp
aam
sbb
xor
add
fistpll
lods
dec
adc
mov
jo
sub
outsl
mov
sub
test
xor
xor
inc
sub
cmpsl
mov
mov
enter
sub
fimull
mov
imul
cli
sarl
pop
stos
xor
cmp
mov
sbb
adc
gs
and
xchg
push
jmp
cmp
cmp
lea
pop
and
mov
adc
cwtl
mov
addr16
pop
sub
mov
int
dec
jb
daa
add
cmpsb
lods
inc
sbb
mov
cmp
jno
jg
sbb
mov
les
scas
loope
andl
lds
push
lret
jmp
add
push
dec
outsl
push
inc
sbb
add
xchg
imul
xchg
fstps
sarl
and
cmp
push
in
lcall
lret
arpl
cmp
dec
loopne
fsubs
iret
or
and
rolb
xchg
fs
mov
jmp
add
scas
lret
xchg
cmp
aad
test
les
pop
push
outsb
xchg
xor
out
loopne
push
pusha
jb
push
in
dec
inc
pusha
scas
hlt
test
lods
ret
adc
cs
test
fwait
add
push
sbb
mov
dec
lcall
cmp
mov
mov
pop
imul
pusha
jb
xchg
cmpb
mov
fstpt
movsb
mov
adc
int
mov
jmp
cmp
push
cwtl
add
xchg
xor
ret
or
or
icebp
cmp
dec
call
jb
pop
ja,pn
xor
shlb
gs
shrl
orps
loop
nop
mov
mov
lock
daa
mov
sub
daa
int3
cmp
xor
in
movsl
push
push
outsl
push
lret
pop
jmp
clc
fmul
adc
clc
daa
xchg
call
jns
dec
insl
fisubrs
dec
dec
ss
test
lock
xor
fs
gs
mov
call
or
or
loop
std
lret
jmp
fsts
stos
lret
mov
mov
and
hlt
cmc
dec
xor
mov
inc
cmpsl
add
sub
out
ja
rclb
fisttpl
fcom
xchg
xor
cmp
inc
and
inc
ficoms
inc
push
mov
inc
mov
xchg
arpl
xor
in
xchg
out
les
sbb
mov
and
pusha
jne
sub
in
mov
jae
pop
call
mov
dec
gs
sarl
cltd
cwtl
or
and
test
int3
pusha
xor
push
cmpsl
xor
jecxz
cmc
in
jle
das
mov
bound
adc
int3
jge
adc
fisubs
add
xchg
popf
cwtl
jo
dec
xor
mov
sarl
ss
fucomip
imul
jecxz
jecxz
add
cltd
and
fucomp
sbb
rcrl
sub
cmp
add
pop
out
dec
xchg
mov
inc
aas
rcr
jmp
add
repnz
fsubp
or
sbb
inc
sar
call
mov
mov
call
jge
cmp
adc
jge
and
xchg
das
mov
cs
rclb
sti
fildll
scas
mov
adcl
inc
and
xor
cltd
test
add
imul
mov
adc
push
mov
push
test
dec
loop
pop
repnz
cli
mov
dec
sbb
mov
mov
pop
jmp
lods
int3
int
mov
jne
sbb
adc
out
icebp
pop
aas
adc
add
pop
dec
adc
rorl
fmul
stos
sbb
in
jg
out
push
or
adc
arpl
xchg
fnstcw
call
data16
div
inc
js
xor
outsb
mov
idivl
and
sbb
sbb
cltd
pop
pop
iret
pop
or
ffree
xchg
push
popf
xor
hlt
mov
lcall
jne
push
icebp
cmp
out
int3
sbbl
mov
xchg
or
imul
add
shlb
andl
outsb
push
xchg
mov
sub
pop
push
mov
shl
cltd
sub
filds
mov
mov
lret
in
sbb
add
sbb
arpl
jae
jge
cmp
mov
jmp
push
push
pop
fnstcw
xchg
pop
ds
sbb
jbe
scas
cld
mov
jmp
ja
and
jmp
and
xor
iret
xlat
orb
mov
rcrl
in
popf
ret
dec
or
insb
mov
mov
nop
mov
adc
loopne
mov
cltd
in
and
or
int
out
rep
push
nop
rorb
int
dec
xor
jo
pop
gs
jnp
jbe
pop
std
push
sarb
mov
fnstenv
shll
pop
adc
adc
mov
les
rorl
outsb
in
inc
xor
rcl
shrl
cmpb
andl
push
xor
xchg
push
push
cld
dec
jb
sub
je
inc
push
hlt
mov
xor
inc
push
xor
or
mov
xchg
jg
stc
push
push
and
loop
push
rcl
push
fsubp
mov
jg
and
inc
pop
imul
push
pop
pop
cmp
inc
pop
adc
lock
inc
daa
mov
mov
aas
sbb
jb
mov
push
mov
pushf
push
into
insb
jp
and
pushf
shl
test
je
inc
sub
sbb
jge
xchg
scas
shll
xor
insb
cld
sbb
adc
into
dec
mov
mov
inc
mov
stos
jo
adc
scas
stos
and
mov
sub
fisubl
or
test
cmpsl
mov
add
cli
imul
dec
cmp
mov
xor
fwait
sub
adc
jecxz
xchg
shlb
mov
popa
and
in
hlt
js
sbb
mov
clc
aas
sub
icebp
addr16
dec
xchg
push
loop
xlat
scas
jb
sahf
inc
sub
mov
pop
add
es
pop
rorl
cmp
roll
ja
nop
mov
shrb
push
cmp
data16
or
test
push
stos
stos
adc
iret
fistpll
inc
mov
or
add
mov
mov
or
or
xlat
adc
test
adc
jl
sbb
cld
out
push
lea
int3
sub
cmc
xor
jg
push
ss
mov
jmp
insb
dec
movsl
addr16
mov
inc
pushf
pop
xor
fcoms
aam
mov
cmp
and
stos
push
fimull
dec
push
in
pop
repz
push
adc
xchg
insl
arpl
insb
inc
sbb
and
rcr
xlat
add
sbb
push
add
test
mov
or
loope
stos
fmuls
aas
fnstsw
mov
movsb
add
aam
movsb
jl
shlb
xor
out
mov
lret
jl
push
arpl
sahf
add
mov
ja
mov
lods
push
test
pop
call
ret
jl
adc
sbb
cmp
repnz
out
pop
stos
test
lock
lods
mov
pop
hlt
push
in
inc
mov
mov
xchg
sub
lds
cs
xor
adc
pop
sti
shl
add
cmp
add
aaa
push
in
pushf
in
and
loop
rclb
lods
jmp
test
or
xor
push
shl
das
in
stos
decb
dec
lcall
and
fbstp
mov
dec
mov
inc
dec
jb
mov
push
ljmp
cmp
push
add
movsl
xchg
lods
jnp
jno
xor
jno
lods
iret
mov
mov
pop
inc
popf
movsb
sub
clc
jo
fists
sub
out
cld
testl
iret
sbb
mov
sahf
push
jo
dec
test
iret
adc
andl
les
sub
mov
jbe
add
mov
push
or
sbb
loop
xor
cs
daa
imul
das
mov
insl
ja
add
jne
mov
imul
in
aad
ret
lods
call
sahf
lcall
fldl
aaa
dec
add
mov
insl
pop
repnz
test
incb
les
sub
sbb
jmp
sbb
into
stos
lret
push
jmp
in
xchg
mov
lock
mov
pop
cmp
pop
jp
xor
loope
jmp
xlat
aam
aas
jno
push
pop
inc
hlt
jns
aas
cld
push
ficompl
mov
and
xchg
inc
test
fnstenv
pop
xor
insb
xor
cld
or
test
dec
dec
mov
mov
addb
dec
mov
jg
mov
mov
mov
push
mov
shll
xchg
daa
out
inc
push
fisttpl
sub
ret
adc
push
scas
shlb
push
in
stc
outsl
add
mov
popf
and
fisubrs
dec
inc
test
aad
cmp
or
stc
mov
jge
adc
fisubl
sbb
movsb
lahf
loop
imul
sub
sub
xchg
cmp
lock
enter
lret
mov
adc
mov
insb
sbb
mov
out
adc
test
scas
pop
add
aad
pushf
in
je
dec
lock
rorb
xchg
arpl
and
and
push
shl
add
mov
daa
jg
dec
jno
xchg
mov
mov
jl
xor
test
fldt
aaa
pop
pop
cmc
adc
mov
add
or
lods
lods
mov
aam
mov
jg
mov
adc
shlb
add
jmp
and
xchg
xlat
test
cmp
mov
adc
cs
scas
aad
jmp
sti
lret
mov
stos
imul
shll
push
aaa
test
inc
add
mov
fiaddl
mov
insb
pop
test
jecxz
aam
setl
pop
xchg
inc
mov
mov
mov
inc
mov
outsl
popa
cs
ja
lret
or
test
xor
sbb
insl
pop
xor
inc
cmc
fisttps
loop
inc
scas
mov
dec
jge
dec
sub
cld
iret
cmpsb
data16
rclb
sti
outsb
out
pop
addr16
mov
nop
mov
push
sub
out
sahf
ss
xchg
jae
call
jb
ret
xlat
lods
test
lds
rcrb
daa
scas
mov
push
dec
jecxz
lods
mov
xor
test
mov
sub
subl
inc
inc
push
and
sub
sar
push
xchg
lods
pop
in
lods
std
add
push
lea
pop
cmp
push
popa
daa
iret
xor
jecxz
push
mov
pop
xchg
inc
ret
sbb
adc
in
dec
mov
ljmp
cmp
xor
or
jae
daa
or
jg
adc
pop
or
jnp
into
rcrl
sub
les
rcl
lcall
add
test
nop
std
push
xchg
repnz
faddl
adc
dec
mov
popa
sahf
repnz
adc
xchg
jbe
repnz
hlt
pop
push
push
xor
dec
xchg
in
cltd
in
dec
and
ds
repnz
cld
adc
fcomip
add
jo
push
pop
rcrb
and
sahf
jnp
pop
cmp
int3
pop
jns
dec
outsb
pop
pop
push
std
adc
in
in
andb
push
adc
jnp
adc
dec
jne
int3
add
aas
jnp
andb
daa
jb
push
je
inc
mov
stos
cld
rorb
out
ret
data16
test
jp
jb
mov
frstor
and
add
das
or
test
jmp
mov
jge
add
ds
mov
iret
lret
and
sbb
es
push
pop
ja
mov
into
pop
fnstcw
cmpsb
push
cmp
mov
mov
xchg
iret
dec
push
mov
jne
cmp
xor
mov
jae
cmp
adc
or
mov
stos
icebp
movsb
adc
jb
sub
xchg
add
jo
dec
mov
call
outsl
or
lret
mov
repz
cmp
xor
sbb
pop
out
dec
sub
js
push
xchg
out
out
mov
in
push
aad
cmp
jle,pn
shr
das
fdivrs
lcall
std
iret
dec
ret
arpl
xor
mov
nop
fdivs
lret
es
movsl
xchg
loope
faddl
add
pop
sbb
push
sar
inc
push
pop
and
aaa
xor
daa
loope
mov
mov
adc
inc
mov
data16
inc
xor
arpl
addl
jl
fcmovu
jbe
idiv
mov
rorl
cmpsl
sbb
adc
xchg
xchg
imul
cmpl
xchg
inc
fiaddl
lret
je
adc
rcrb
pop
mov
push
rorb
jg
dec
cmc
lea
mov
sarb
shlb
add
scas
adc
mov
pop
hlt
out
push
mov
jb
scas
cmc
fisttps
jecxz
enter
std
jmp
mov
mov
scas
push
cmp
xorb
cs
stos
sub
lock
and
push
jmp
cwtl
cwtl
iret
inc
sub
xlat
dec
jl
jbe
mov
arpl
fisubs
in
das
inc
repnz
and
adcb
ja
dec
mov
mov
jae
pop
jnp
ljmp
and
sbb
lods
repnz
xlat
out
movsl
dec
popf
dec
test
test
cmc
in
outsb
cmpb
fildll
fiaddl
call
push
jecxz
cmp
bound
js
mov
mov
lods
mov
in
or
jmp
inc
aam
enter
xor
and
fmuls
mov
jge
in
call
xor
nop
sub
movsb
or
shlb
popa
pushf
js
scas
push
sub
inc
lods
sub
push
mov
pop
xor
lock
jae
push
xor
inc
test
inc
fnsave
enter
mov
sbb
fs
add
cmp
movsl
movsb
add
or
scas
out
lea
xchg
push
jg
shl
mov
in
test
cmc
imul
pushf
and
mov
arpl
rcll
fnstsw
inc
movsl
loop
cltd
mov
push
xchg
push
dec
and
into
std
mov
mov
pop
ret
rorl
test
rcl
or
mov
mov
mov
add
popa
push
shl
les
les
mov
movsb
mov
lret
aaa
xor
cmpsb
fcmovbe
mov
xor
jne
mov
inc
sbbl
pop
imulb
cld
lds
mov
fistpl
std
testb
adc
mov
scas
and
dec
pop
add
fs
cmp
mov
test
fcomi
xchg
aam
rep
movsl
aas
fimuls
lret
or
ss
mov
ss
xchg
sbb
mov
fstpt
test
or
jmp
in
dec
clc
stos
rclb
out
mov
lods
adc
push
loope
mov
push
xchg
rorl
addl
popf
pop
pop
sti
jl
jge
out
pop
cli
es
mov
mov
mov
push
push
mov
outsl
mov
jecxz
jne
jmp
popf
push
scas
aad
add
je
call
mov
push
sti
shlb
dec
fisubrs
and
popf
call
loope
ds
incb
subl
pusha
int3
pop
addr16
leave
adc
inc
cltd
packsswb
test
inc
popf
inc
mov
icebp
sub
into
and
mov
lcall
jne
inc
jecxz
in
in
xor
in
das
inc
jle
mov
dec
fcoms
and
fdivrs
call
cmpsb
add
and
sub
fisttps
mov
xor
shll
adc
aaa
es
adc
pop
cmpsl
lea
jl
lods
push
jge
loop
iret
imulb
cld
and
ljmp
out
arpl
scas
popf
dec
js
lods
dec
clc
ror
ss
sbb
adc
jmp
cltd
popa
and
and
fwait
xchg
cmp
xlat
pop
das
mov
adc
xchg
mov
or
lcall
fs
jle
mov
aam
push
mov
cli
jae
rcrb
insb
jb
jecxz
jne
fwait
pop
or
sarl
test
inc
cmp
rcr
mov
lds
mov
or
call
mov
jae
jno
push
push
sti
call
je
dec
mov
test
shlb
xchg
sbb
jge
icebp
enter
xrelease
pop
cli
call
std
test
mov
xor
fidivrl
mov
sti
add
inc
push
fcoms
je
lea
mov
mov
jae
pop
push
into
icebp
xchg
and
sbb
daa
xchg
sbb
dec
jg
sub
sub
or
inc
cld
aad
inc
negl
je
cmp
mov
pop
mov
out
int3
mov
fnstsw
or
out
mov
jge
push
inc
inc
in
jae
inc
push
daa
subb
les
loopne
into
push
cmp
call
in
in
jmp
add
fldenv
pusha
adc
call
push
jge
jns
cld
pop
decb
and
or
popa
xchg
popa
xchg
mov
xorl
repz
sub
rcll
jbe
pop
pop
push
test
push
adc
ja
xchg
add
fistpl
mov
clc
into
js
into
xchg
mull
popf
mov
adc
arpl
pop
mov
or
jnp
andb
mov
lods
aad
adc
cmp
xlat
jmp
test
jno
mov
popa
fs
lods
int3
mov
movsb
in
cmp
adc
nop
mov
pop
addb
cmc
mov
push
mov
rcpps
push
sbb
jl
xchg
sbb
imul
mov
xchg
sub
adc
xchg
jno
pushf
dec
mov
xchg
inc
mov
hlt
mov
imul
fstps
jnp
maskmovq
divl
pusha
dec
pop
jmp
pushf
stos
test
or
int3
stos
ss
jmp
mov
xor
xchg
and
gs
scas
dec
rorb
insl
scas
push
push
xchg
xorl
xor
testb
push
jne
push
out
pop
jne
test
scas
or
jnp
sub
and
push
pop
dec
filds
icebp
inc
adc
mov
mov
cmp
cli
pushf
in
sbb
cltd
repnz
enter
popf
mov
inc
cmpsl
loope
xor
mov
das
mov
sub
es
pop
mov
rorb
inc
sbbl
mov
jae
loope
push
mov
aam
push
jo
push
ss
mov
add
addr16
push
in
loopne
in
mov
insl
fwait
insb
mov
jbe
inc
pop
xchg
jbe
mov
jmp
xchg
add
xchg
xchg
sbb
jae
out
str
xor
cmp
jbe
stc
mov
cmp
sub
fistpll
xlat
mov
loopne
push
popa
jns
int
fwait
test
push
jmp
faddl
shrl
pop
cmp
pusha
xlat
orl
aaa
sub
scas
jae
jns
fldt
lods
adc
testb
add
push
cmp
inc
mov
popa
stos
test
jae
lahf
lret
adc
push
hlt
sub
xchg
jecxz
loopne
shr
mov
cli
rep
int3
xor
stos
jp
pop
sub
jp
xchg
and
and
push
sbb
fidivrl
push
sbb
mov
push
pop
or
add
adc
getsec
lahf
ljmp
push
pop
lods
jge
mov
push
orl
push
and
mov
fisttpll
les
push
fdivrl
das
sbbl
sub
fildll
imul
inc
xchg
pop
arpl
mov
cwtl
divb
xchg
sti
or
push
rol
sub
jmp
out
pop
push
add
cmpsb
dec
cmp
push
cli
in
jl
cmpsb
cmp
js
loope
mov
fsub
mov
sub
out
lock
inc
lahf
pop
insb
dec
mov
inc
pop
lock
gs
jbe
sub
push
xchg
mov
cmp
fsts
insb
mov
out
push
divb
lahf
aad
inc
push
call
inc
dec
and
jl
in
jbe
cmp
ret
inc
mov
std
fisttpll
mov
xchg
push
jmp
enter
ffreep
dec
fimull
sub
popa
dec
movl
dec
push
insb
hlt
es
lods
pop
push
fldenv
test
testl
jge
pop
cmp
or
ja
sbb
mov
fisubrs
dec
xor
mov
gs
lea
mov
lea
pusha
sbb
out
push
push
pop
test
sub
rolb
or
imul
push
sub
arpl
rorl
std
pop
ja
mov
jg
aam
notb
test
mov
shl
jp
jl
lcall
jl
inc
in
add
adc
test
ret
jle
cmpsb
test
pop
mov
lcall
push
out
pushl
dec
xor
aas
xor
es
jmp
mov
scas
sbb
loope
sbb
nop
jecxz
ja
int3
mov
lahf
xor
xor
out
aad
adc
hlt
icebp
cmpsl
jmp
testb
mov
cmp
shl
movsb
jb
sub
insb
inc
sbb
sar
mov
sarl
sarb
fnsave
or
int3
mov
out
jge
or
dec
nop
or
cli
stc
dec
or
and
imul
mov
sub
lcall
sbb
outsl
or
dec
lcall
cld
and
ret
and
xchg
jl
dec
mov
outsl
push
xor
mov
jns
addr16
add
movsb
sub
mov
sub
cmpsb
not
xor
repz
adc
lods
js
pop
scas
xchg
sbbl
leave
ds
adcl
sub
xchg
cmc
adc
mov
rcrl
mov
sbb
push
xchg
subl
lea
cli
cli
jno
mov
jns
cs
cmpsb
shlb
sbb
inc
jbe
repz
mov
mov
cmp
adc
jp
xlat
xchg
mov
push
push
enter
jns
movsl
pop
dec
out
sahf
iret
adc
hlt
std
sti
enter
movsl
aad
mov
lcall
inc
mov
cli
ret
xchg
jnp
stc
sub
sbb
push
xchg
jns
testl
jmp
stos
cmpsb
out
ficomps
xor
sbb
push
roll
sub
cmpl
fcoml
mov
icebp
push
iret
xor
push
bound
xor
xchg
fiadds
gs
das
lahf
iret
xchg
hlt
sbb
inc
imul
test
test
mov
outsb
arpl
adcb
das
lcall
mov
mov
frstor
dec
xchg
lret
push
jne
sti
xor
leave
cmp
cmpl
bound
cmp
cli
test
pop
sbb
stos
or
and
dec
dec
js
subl
inc
cmc
and
movsb
push
pop
das
jns
mov
lcall
and
dec
hlt
jecxz
xchg
jne
aam
aad
sbb
sub
adc
mov
es
push
fxch
push
cwtl
jp
and
add
pusha
les
daa
mov
out
fnstcw
sub
sub
mov
mov
push
sar
pushf
es
jmp
mov
add
aad
add
pop
mov
jae
fsubl
mull
fnsave
and
xchg
push
cmp
mov
mov
xchg
sub
adcl
loopne
sbb
jl
xchg
adc
push
fidivs
mov
out
or
jno
jle
loop
xor
push
lea
mov
mov
cli
in
daa
mov
mov
lahf
out
sub
dec
sbbb
popa
fcompl
popa
adc
jle
jge
imul
push
dec
fldt
xor
mov
cmpsb
xchg
lea
cmp
repz
push
shl
leave
test
push
lods
dec
pop
ret
sbb
ss
sub
testb
imul
xchg
xor
sbb
into
pop
and
dec
push
mov
push
or
mov
push
ret
cmpsl
inc
xor
sbb
int
cmp
ret
push
loope
lods
and
add
rorb
movl
cmp
aas
adc
fdecstp
test
xchg
mov
add
push
aam
fs
insl
bound
out
pop
xchg
call
mov
pop
xchg
mov
fdivl
jl
roll
ret
ficompl
ret
mov
enter
push
repnz
jge
sbb
lret
jae
xchg
xor
popa
loop
sahf
mov
add
std
stos
mov
dec
mov
enter
mulb
fistl
in
in
cmp
cmp
xchg
adc
hlt
xor
mov
fscale
jo
inc
seta
mov
pop
in
jge
movsl
out
ret
add
xchg
nop
ljmp
jge
sbb
add
mov
arpl
out
cld
sbb
ret
mov
or
sub
sbb
shrb
mov
daa
sub
ror
push
mov
sbb
pop
sub
xchg
xor
xor
or
and
daa
jnp
push
fildll
xor
clc
adc
lcall
xor
imul
fld
push
mov
jno
xchg
mov
mov
loop
stos
outsb
ljmp
in
dec
inc
daa
ror
hlt
das
ja
call
cmp
lock
xchg
mov
insb
dec
lahf
mov
inc
mov
repz
mov
mov
jne
mov
mov
dec
push
shlb
pop
lahf
inc
notb
subb
and
jg
jmp
jg
scas
xchg
xor
inc
aas
push
into
in
icebp
fisubrs
jns
outsl
pusha
fdivrl
push
mov
lock
daa
cmpsl
aad
cmpsl
dec
fstpl
enter
mov
inc
cli
cmp
jno
imul
fstp
inc
or
push
xorl
repz
push
or
add
push
mov
rcrb
xor
pop
xchg
sub
les
fstl
or
jg
or
iret
cwtl
ja
test
adc
xor
push
pop
push
xlat
cmc
or
xor
mov
pushf
mov
out
and
mov
repz
loop
inc
loope
jg
jge
stc
insb
inc
in
cmp
add
cmpsl
cwtl
jne
addr16
enter
lods
test
push
mov
popa
pop
add
cmp
pop
gs
dec
imul
fimuls
lret
adc
dec
xor
test
out
and
ljmp
call
mov
test
xchg
inc
std
out
inc
xchg
adc
aam
in
mov
shr
enter
sbb
push
cmp
or
add
psubb
adc
and
mov
xor
mov
or
push
out
pop
sub
nop
loope
and
imul
lods
dec
out
mov
jg
add
inc
push
sub
subb
mov
xor
lret
push
mov
xchg
jle
imul
mov
xor
push
pop
shll
mov
jmp
sub
int
out
aaa
xchg
xor
xor
and
push
mov
in
jns
divb
pop
mov
mov
es
insb
call
and
push
decl
inc
icebp
ss
or
fwait
push
icebp
xlat
enter
aas
rcpps
rcrl
mov
flds
daa
and
stos
popf
inc
push
inc
rolb
je
nop
lods
cmp
adc
cmp
movsb
xchg
cmpsl
xchg
mov
xor
test
ja
test
aas
stos
aaa
movsl
lea
shlb
das
pop
dec
movsl
jl
mov
dec
ret
push
fidivrl
xchg
push
mov
loop
mov
repnz
sub
inc
dec
arpl
inc
jl
ds
adc
sub
rclb
xchg
shr
leave
sarb
mov
dec
or
lret
mov
cmp
sub
fmull
xlat
xchg
inc
jbe
movsl
mov
xchg
lods
repnz
mov
aas
mov
negl
xchg
pusha
xchg
sbb
dec
lahf
ljmp
notl
arpl
in
out
jns
movsl
scas
mov
sbb
mov
cmp
test
or
fcmovu
mov
fstpt
xor
std
adc
add
sbbl
stc
cwtl
jns
cltd
aas
mov
xchg
scas
pop
mov
push
iret
pop
xor
cld
ljmp
and
jne
lock
jns
lods
sub
adc
xor
xchg
or
xchg
fs
fstps
scas
mov
js
ret
test
dec
js
xchg
fs
in
mov
shrl
repnz
jmp
pop
scas
lret
movsb
xchg
mov
daa
sub
cmp
pop
fsubs
int3
ret
imul
lret
pop
jg
pop
data16
jl
or
sbb
je
decl
pop
lahf
insl
push
jae
rcrb
lock
sbb
mov
out
daa
into
out
dec
adc
hlt
loope
ja
test
adc
cld
pop
or
push
rorb
mov
subb
xchg
adc
imul
sti
or
and
xchg
xchg
std
cs
data16
cmp
iret
fnstcw
add
clc
leave
push
mov
jns
neg
inc
push
mov
mov
subl
jp
and
mov
lock
jnp
push
imulb
jecxz
sbbl
test
xchg
lock
or
or
std
repz
std
jne
sbb
inc
xchg
mov
sub
gs
movsl
adc
aam
jae
mov
xchg
in
adc
stc
out
inc
push
stc
mov
clc
loope
nop
loopnew
push
clc
cmp
sahf
fwait
cltd
fcomp
jo
jns
xor
test
sbb
hlt
and
add
adc
push
inc
dec
jle
iret
dec
inc
xor
push
test
xlat
sbb
lds
cmp
mov
imul
std
shrl
jno
loopne
call
push
loop
mov
or
cli
outsl
into
cmc
andl
cmp
in
push
push
ja
inc
add
sub
xchg
push
into
mov
xchg
ljmp
xor
mov
popf
inc
and
pop
icebp
popl
pop
and
xor
movsb
leave
lret
enter
adc
pop
inc
xchg
pop
jge
test
ss
mov
adc
add
push
in
or
pop
mov
push
jg
sar
push
cwtl
xchg
ret
repnz
sbb
outsb
imul
xadd
xchg
mov
stos
sub
dec
fwait
int
loop
pop
xor
shlb
fldl
and
notb
xchg
inc
js
das
mov
lcall
test
sbb
lcall
daa
mov
xchg
test
sub
pop
fcoms
loop
dec
xchg
cmpsl
xchg
sbb
add
push
cmc
movsl
or
xor
loopne
lret
jo
or
mov
xchg
push
ss
gs
aam
in
mov
cltd
es
out
or
jmp
out
pusha
pcmpeqd
pop
enter
in
or
push
pop
and
mov
xchg
add
aaa
add
test
nop
data16
arpl
jle
leave
shlb
push
js
adc
adc
cmp
and
xor
lea
dec
aaa
and
ss
iret
fnsave
pusha
cmp
mov
gs
js
pop
andl
mov
pusha
push
cmp
xchg
dec
lods
inc
ret
idivl
pop
fstps
cmp
loope
jecxz
jno
sbb
loope
test
mov
inc
cmc
cmp
fisttps
dec
ja
sub
sub
jmp
fidivrl
fisttps
adc
lods
lods
sub
xor
or
mov
stc
jg
inc
adc
push
in
jnp
add
mov
mov
sub
mov
decb
sub
test
out
rcll
cwtl
cmp
adc
add
inc
cmp
lock
add
call
push
mov
mov
test
into
mov
add
xchg
fs
jmp
ss
shr
fnstcw
loopne
fwait
pop
mov
mov
ret
add
decb
push
or
adc
stos
lahf
xchg
dec
push
fnstenv
or
mov
sti
mov
lret
jbe
imul
hlt
mov
jns
xor
xor
push
lret
inc
arpl
aas
dec
neg
hlt
rcr
mov
and
cwtl
sbb
imulb
lods
jge
scas
ficoms
xor
cmc
inc
ret
lret
add
dec
jl
sub
cmpsb
leave
and
std
lock
sahf
ss
adc
or
pop
inc
mov
bound
gs
jbe
int
sbb
adc
xor
lods
fnstcw
sub
push
xor
adc
jecxz
and
das
aad
js
dec
cld
outsl
es
inc
lret
les
adc
xchg
mov
int3
mov
cmp
sti
ss
idivl
int3
mov
lods
jbe
aas
ja
and
cwtl
xchg
out
dec
in
rcll
sbb
in
sti
sbb
subb
je
jne
add
cmpsl
xorb
cmc
cmp
dec
les
xor
enter
jecxz
insb
popa
or
xchg
aas
mov
cmp
testb
pop
push
and
mov
sbb
cmpsb
jg
xchg
shrb
sbb
cmp
pop
xor
xchg
aaa
sub
xor
dec
jle
xor
test
and
pop
and
xchg
das
mov
cmp
xchg
repz
mov
xchg
sub
test
cmp
pusha
notl
lret
jb
mov
sub
rcrl
jno
rorl
stos
cmpsb
pop
rcr
cmp
pop
jb
lret
call
xorl
pop
js
jecxz
push
pop
in
inc
or
adc
cwtl
lcall
cmpsl
mov
and
jmp
in
js
daa
sbb
scas
rclb
shrl
fmull
mov
sbbb
jmp
or
mov
mov
mov
sub
inc
fistpll
or
lret
xor
mov
shl
pop
cwtl
dec
jg
pushf
or
rcr
mov
jnp
rolb
pop
iret
cwtl
xchg
dec
fildl
js
pop
out
xchg
sbb
push
aaa
xchg
mov
push
push
addl
push
sahf
pop
lahf
xor
mov
jg
xor
inc
stos
jmp
xchg
inc
outsl
xlat
inc
xor
add
mov
xchg
nop
push
movsb
imul
xor
mov
out
sub
push
mov
adc
test
inc
in
and
mov
outsl
ret
outsb
mov
mov
and
push
jo
sub
jbe
js
call
out
cld
fwait
push
mov
push
mov
xchg
xor
outsb
ret
and
inc
xchg
lret
mov
jno
lcall
dec
push
mov
push
clc
stc
dec
ret
jbe
repz
and
jae
lcall
nop
repnz
jns
push
cld
mov
mov
fldl
lcall
mov
sub
or
cld
xor
xchg
popa
dec
push
jl
dec
test
orl
jno
inc
aam
fwait
adc
push
lahf
les
rcrl
add
mov
outsl
or
xchg
sub
outsl
std
cs
mov
sbb
and
push
int3
or
cmc
mov
sbb
add
xor
pop
daa
sub
clc
mov
lds
pop
add
fisubrl
push
stc
push
mov
xlat
sti
add
mov
mov
xchg
stos
mov
and
std
sub
add
push
imul
cmpsb
mov
mov
lods
sbb
jp
lret
lcall
into
and
and
pop
mov
mov
inc
mov
sbbb
or
xchg
pop
mov
push
enter
pop
je
inc
mov
cmp
or
loopne
mov
jmp
xchg
outsb
lcall
pop
movsb
int3
lea
and
mov
test
mov
xchg
shlb
push
cbtw
sbb
fidivrl
std
or
rcr
sar
mov
pop
out
dec
fstpl
call
xlat
sub
out
xchg
sub
je
insb
ja
dec
jnp
nop
push
fimuls
xor
fidivrs
ret
mov
mov
aam
aam
cltd
mov
ss
cmp
lds
fbstp
or
push
xchg
sbb
xor
mov
lcall
add
add
ret
or
sub
mov
jg
cmp
push
push
jle
hlt
jne
fiaddl
leave
sahf
lret
negb
ret
mov
add
ret
insb
and
jle
dec
mov
pop
mov
dec
inc
in
inc
hlt
sub
cmp
push
scas
sub
subl
mov
mov
xchg
and
dec
jns
push
inc
dec
and
ret
lcall
loopne
lcall
mov
sbb
movsl
dec
rcr
lcall
aas
sbb
xchg
xadd
jg
pop
icebp
fwait
pusha
in
movsl
out
mov
cld
inc
filds
mov
add
push
mov
in
or
and
out
push
jo
in
ljmp
test
or
outsl
shrb
jns
mov
adc
sub
xor
cwtl
out
inc
xlat
stos
movsl
dec
and
and
mov
repz
lahf
or
call
sbb
pop
sarb
pop
pop
insl
cmp
jl
jno
insb
mov
push
jecxz
cli
loope
pop
stc
jnp
xor
push
jg
js
popa
data16
cmpl
popf
jmp
sub
jle
mov
lcall
repnz
js
arpl
aam
sub
xor
or
rcll
loopne
cs
sti
or
push
mov
mov
popa
lcall
mov
sub
xchg
mov
lcall
out
sbb
aas
sbb
pop
call
adc
addr16
xchg
clc
fs
daa
filds
into
sbb
cli
jle
popf
ds
mov
dec
inc
mov
mov
add
push
pop
mov
aas
jle
cmp
xchg
lods
movsl
and
jecxz
outsl
push
imul
rolb
sub
pop
shll
mov
outsl
mov
call
mov
sbb
pop
or
imul
mov
pop
fcmovnb
cmp
adc
mov
push
loopne
xor
push
arpl
add
insl
cmpsb
pushf
jae
lock
jo
pop
aaa
adc
fstl
mov
dec
rcl
rclb
jb
xor
fsts
xor
jp
movsl
out
pop
fsincos
xchg
pop
cs
xor
or
sahf
push
arpl
or
scas
push
in
inc
cltd
pop
sub
cmp
mov
or
shlb
push
into
notb
push
dec
fsts
xchg
in
stc
shlb
mov
sbb
repz
and
jbe
lahf
rcr
pop
xor
daa
mov
cltd
in
cli
mov
in
lret
cmp
cli
push
inc
push
sti
pop
add
xor
repz
fldt
inc
gs
push
cld
fs
test
and
loopne
movsl
loop
mov
jmp
or
cmp
xor
inc
decl
ja
inc
popf
ss
jge
int3
cmp
push
jge
fdivrs
repnz
mov
sbb
clc
push
cld
mov
repnz
xor
sbb
inc
mov
push
repnz
out
push
pop
ret
xchg
pop
adc
in
xor
pop
adcb
pusha
adc
mov
aam
dec
scas
ret
add
push
add
jg
pop
hlt
lock
adc
pop
xchg
stos
std
add
inc
adc
mov
mov
adc
cmp
cmpb
dec
cmpsl
leave
jmp
cmp
cmpsl
lods
pop
fistl
sbb
sbb
testb
xchg
add
scas
imulb
mov
xchg
dec
cmpsb
out
adc
ljmp
fdivrs
add
add
jecxz
test
in
inc
movsl
pop
inc
dec
test
jl
push
cmp
ljmp
pusha
xchg
push
pop
ljmp
xchg
push
mov
cld
js
or
insb
mov
faddl
test
sub
fisubs
cmp
fildl
out
cmp
sub
test
rorb
loope
ss
in
dec
cmpsb
in
adc
mov
xor
mov
xor
xor
lea
push
sub
or
fstp
push
xchg
push
fisubrl
rolb
enter
mov
push
fld
and
sti
pop
or
sbb
jecxz
jmp
nop
lcall
xor
push
nopl
lods
out
lods
lds
mov
mov
popa
or
cltd
push
sbb
mov
pushf
dec
mov
into
imul
shlb
xor
mov
rol
pop
pusha
inc
mov
out
jb
mov
sub
pop
pop
inc
jp
out
mov
inc
sbb
ljmp
into
add
fidivrl
daa
mov
jae
cmpsb
insl
and
bound
push
in
cmp
les
stos
call
xchg
es
cmp
aas
shlb
xchg
cmpsl
repnz
inc
push
jns
xchg
cmpsl
xchg
dec
loope
xchg
divl
daa
jecxz
pop
adc
mov
test
arpl
lret
or
and
cmp
addr16
mov
xchg
cmp
enter
out
lods
pop
dec
in
test
fwait
aam
or
imul
sub
add
jae
lds
mov
or
xchg
and
cmp
popa
or
cs
test
pop
sub
notl
dec
cmp
xchg
out
movsl
daa
loope
and
add
push
cltd
cmp
sub
adc
lods
push
imul
test
data16
flds
jae
mov
jp
push
mov
push
scas
cmp
cld
mov
lock
adc
push
and
or
push
outsl
js
push
xchg
xor
testl
xchg
mov
sti
ja
mov
add
cltd
dec
shll
jno
aad
cld
push
dec
dec
shrl
test
jns
call
lods
pop
jo
dec
push
in
loope
mov
xchg
rcrl
pop
stos
sahf
mov
fnstenv
orb
sbb
ret
mov
mov
in
ret
jecxz
out
in
insl
fstl
mov
lahf
pushf
je
daa
sbb
cmp
sub
and
test
mov
add
and
xor
lock
rcll
aas
ret
pop
xchg
mov
or
sub
mov
stos
lods
leave
xor
lret
cmc
push
xchg
stos
jae
mov
or
mov
or
cli
repnz
popa
jno
push
je
inc
test
pop
ds
inc
add
es
or
jecxz
cmp
sbb
or
jb
outsl
insb
inc
adc
jp
hlt
movsb
dec
xchg
stc
jne
mov
push
inc
ret
imul
mov
shll
pop
xor
jbe
xchg
scas
mov
orl
or
inc
pop
fimuls
out
out
inc
loope
stos
loope
in
push
jnp
popf
movntq
jge
push
jnp
push
pusha
loope
jg
fistps
je
sub
lods
stos
fdivs
icebp
rorl
outsl
insb
enter
sub
pop
inc
cmp
mov
ljmp
add
ljmp
and
mov
mov
mov
fstpl
mov
and
mov
xlat
mov
add
push
cwtl
cli
sub
jno
cmc
movsl
ret
adc
icebp
mov
mov
mov
aas
lock
jb
or
push
cmp
xor
mov
mov
push
and
sti
jno
and
or
ret
sub
and
negb
or
mov
xchg
inc
add
arpl
mov
and
and
lods
je
mov
xchg
scas
inc
mov
mov
pop
adc
jmp
stos
dec
lds
xchg
call
pop
jbe
in
xchg
cmp
dec
test
cmpsb
and
aas
imul
sbb
or
out
pop
push
xchg
inc
out
lcall
lea
or
fnstcw
lcall
repz
mov
adc
xchg
adc
pop
push
lods
cli
lods
cmp
mov
dec
xor
loop
and
xchg
mov
push
jl
add
xchg
fldenv
aaa
dec
daa
push
and
pop
mov
sbb
dec
stos
mov
pop
push
push
cltd
jne
jl
cld
mov
cmpsl
inc
lea
lods
sub
fnstcw
add
loopne
cmc
push
and
push
cmp
mov
out
sbb
push
ret
push
and
add
push
es
and
mov
imul
inc
sbb
dec
add
mov
ffree
idivb
add
in
adc
dec
lret
cmpl
ret
xor
sbb
fwait
push
mov
xchg
icebp
adc
xlat
or
mov
cmp
sub
inc
cmp
not
dec
mov
outsb
es
cli
enter
fcoms
mov
add
aam
dec
cltd
push
mov
hlt
bound
mov
aaa
push
inc
lret
subl
push
test
sub
xchg
loopne
sbb
mov
daa
mov
insb
repz
dec
xlat
mov
push
mov
outsb
fimuls
cs
js
stos
push
xchg
inc
lea
fs
dec
push
ret
push
mov
xchg
mov
push
jne
and
ss
mov
cli
jae
ss
pop
movsl
cmp
sub
mov
mov
inc
jns
xchg
add
cmp
aas
and
fs
test
xor
mov
in
cld
bound
test
fisttps
nop
mov
cmpsl
dec
divb
or
das
pop
insl
pushf
cmp
push
les
jnp
ficoms
jp
sbb
mov
mov
jecxz
in
imul
dec
and
mov
addr16
jnp
inc
loope
and
movsl
les
sbb
jmp
fnstenv
sbb
cltd
mov
cmp
dec
frstor
jno
xchg
adcl
adc
outsl
pop
in
or
arpl
test
popa
imul
int
jne
jle
add
cs
xchg
fbstp
pop
repnz
mov
ja
add
mov
xchg
mov
dec
inc
xchg
loop
and
dec
xor
xor
in
xchg
sbb
mov
cli
xchg
mov
xor
cwtl
movsb
add
push
insl
jg
loope
pop
jnp
movsb
addb
frstor
faddp
mov
shlb
imul
ficoml
jns
jno
adc
stos
ds
mov
pop
mov
scas
and
test
xor
ja,pt
pop
nop
xchg
mov
aad
scas
fmull
sub
in
fidivs
repz
jne
sbb
rorb
push
sub
es
lret
and
das
ja
fs
mov
std
cwtl
sti
mov
jns
fcoms
es
inc
rcrl
cmp
sub
pop
leave
lods
cmp
ret
or
scas
cmpsl
pop
fs
mov
cs
pop
xchg
ror
pop
js
sahf
and
adc
mov
push
xchg
inc
jmp
notl
movsb
and
out
fisttpl
cld
out
xchg
mov
imul
jne
xor
pop
int3
xchg
stc
inc
and
sbb
add
xchg
adc
pop
push
mov
dec
and
dec
fldt
flds
out
inc
negl
or
aad
xorb
popf
clc
popa
repnz
push
sbb
loopne
mov
push
mov
mov
out
je
dec
xlat
pushf
loope
bound
aad
pop
ljmp
mov
aaa
jp
adc
scas
inc
push
and
cmp
xchg
sbb
scas
sarb
outsl
ret
enter
xor
pop
add
sahf
adc
mov
mov
xor
pop
bound
jl
ljmp
mov
pop
out
adc
add
xor
jo
aas
inc
jge
push
xchg
leave
shl
neg
mov
int3
cli
push
mov
mov
fwait
inc
sub
lret
cmc
outsl
mov
xor
leave
pop
jge
jb
add
and
adc
cmp
or
add
push
fistpl
aad
adc
imul
jecxz
sbb
lahf
mov
and
ds
sub
xor
gs
add
lds
int
repz
mov
push
pop
sbb
inc
iret
inc
add
aad
pop
in
cmp
add
out
rorb
in
lock
dec
fcomps
sbb
sti
aad
stos
mov
cmp
mov
dec
std
das
push
movsl
mov
jnp
cmpsl
fisttps
iret
push
clc
movsl
sub
and
pop
jb
es
or
cmp
sbb
bound
pushf
in
fmull
add
inc
movsb
rolb
mov
pop
lock
mov
inc
push
or
jmp
sbb
cmp
push
in
xchg
fnstsw
call
inc
arpl
ficoml
or
xchg
fdivrl
or
jecxz
mov
pop
cmpsl
hlt
and
xor
pop
jb
dec
inc
lea
in
add
mov
iret
daa
das
adc
pop
nop
xchg
lea
mov
insl
pop
into
stc
sub
push
cmp
inc
or
hlt
mov
inc
fstps
sahf
inc
push
mov
out
sub
dec
mov
sbb
mov
and
repnz
jecxz
sarl
icebp
fdivs
push
setbe
loope
jno
fsub
push
out
lock
mov
add
sbb
test
fnstcw
dec
inc
fcmove
inc
inc
out
aam
lods
loopne
aaa
sub
adc
mov
lahf
stos
jg
or
aad
in
test
dec
jg
pop
dec
cmc
dec
gs
sbb
xor
xor
or
insb
mov
inc
lcall
mov
repnz
insl
repz
mov
inc
jle
lods
shll
mov
jecxz
shlb
outsb
sub
es
dec
outsl
mov
cli
in
clc
in
or
push
clc
aaa
ret
fnsave
or
out
mov
loopne
out
data16
cmpsb
xor
test
aaa
fisttpl
and
orb
lods
push
cmp
sbb
mov
popf
leave
mov
das
shll
push
neg
nop
add
imul
mov
out
lock
pop
and
ds
outsb
das
push
in
ror
scas
data16
mov
enter
cmp
sub
addl
clc
jp
cmp
jo
mov
xchg
sahf
lods
insb
cmp
mov
sbb
ja
ss
jb
vpmovmskb
xchg
out
xor
push
add
or
dec
jp
addb
sub
jl
sub
mov
subb
test
sbb
scas
mov
mov
push
mov
cmc
leave
jbe
aad
mov
incl
lods
dec
test
inc
imul
mov
pop
call
and
ret
mov
nop
pushf
cmpsl
mov
jbe
sarb
ljmp
dec
jecxz
jne
xor
adc
rcl
mov
dec
loop
sbb
orb
int
fidivrl
or
insl
cmpsb
stos
sbb
lea
pop
jne
mov
mov
jne
inc
es
jge
shll
push
bound
ss
bound
xchg
popf
sub
and
mov
jo
jns
repz
or
mov
leave
cmp
mov
lret
mov
inc
mov
test
jns
and
cs
mov
dec
aaa
les
push
sub
imul
mov
stos
push
mov
out
fwait
xor
sub
cmp
rolb
enter
sbb
lock
jecxz
push
scas
lret
mov
aaa
inc
int3
jns
rolb
cmp
mov
mov
adc
lods
test
jg
scas
cmc
mov
push
das
leave
cmp
iret
adc
jp
sbb
mov
pushf
repz
and
sbb
int3
xor
lret
cmpl
ficoms
ret
sbb
mov
ds
lods
adc
std
add
aad
xor
adc
stos
add
fnstenv
lahf
stos
stos
mov
fnsave
pop
pop
sub
adc
lock
bound
cmp
jg
and
push
add
mov
fprem
mov
sub
cld
movsl
or
repnz
adc
sub
ret
xor
xchg
test
ror
call
cmp
mov
loope
mov
mov
push
rcll
cli
dec
insl
jbe
pop
push
inc
outsl
mov
mov
sub
or
xchg
ret
imul
ret
out
addr16
movsl
cmpsl
jle
push
cmp
inc
pop
fmuls
outsl
sti
pop
and
fdivr
pop
aas
sub
mov
jge
and
push
cltd
mov
xchg
sub
dec
xchg
imul
fidivrs
adc
in
test
adc
shll
or
xorl
mov
pop
xchg
rorb
mov
inc
push
or
cmp
adc
out
das
aad
in
hlt
xchg
fsubp
shll
aaa
or
fisttps
ja
cli
xchg
add
or
addr16
leave
xor
mov
inc
jle
rorl
aam
xchg
pop
jge
push
and
mov
adc
sub
sub
dec
inc
sub
xor
and
arpl
andps
cmpsl
cwtl
mov
xor
adc
or
lods
icebp
lret
dec
jbe
fidivrl
cmp
xor
and
mov
nop
popf
adcb
mov
ret
xchg
fisubrs
sub
jb
pmaddwd
jns
or
jge
fists
or
mov
neg
sub
lods
jb
sub
into
adc
push
xor
add
cwtl
stc
mov
divb
jns
inc
test
inc
ficompl
jmp
cli
hlt
pop
mov
xchg
sbb
movsb
test
pop
aad
xchg
sahf
and
frstor
jno
sub
ret
jo
cld
dec
cmpsl
mov
clc
lret
scas
and
clc
or
sbb
sub
cmpsb
jno
and
jmp
xchg
orb
or
jmp
loopne
or
inc
jne
fldenv
in
mov
sbb
shll
dec
jae
jmp
jbe
cmp
cmpsl
xchg
repz
hlt
or
xchg
sbb
stc
sbb
jnp
and
cmp
sub
xchg
enter
and
xlat
cmc
xchg
out
mov
and
fsub
aas
xor
lods
mov
sub
pop
add
imul
sbbl
sub
jne
pop
mov
roll
ds
mov
mov
mov
inc
add
cmp
scas
emms
sbb
mov
outsl
enter
mov
or
xchg
mov
fwait
mov
dec
cs
push
leave
leave
cwtl
add
mov
push
outsb
push
out
fwait
aaa
jb
and
inc
pushf
cld
dec
sbb
xor
fildl
pop
aad
ffree
adc
push
arpl
cmp
jp
hlt
out
cli
mull
xchg
or
rcrb
xor
sti
hlt
push
psadbw
adc
lret
add
leave
sbb
xor
or
ja
cmp
flds
scas
repz
ds
popf
and
add
fidivrl
test
xchg
add
aad
mov
or
mov
popa
scas
or
xor
mov
cmp
arpl
cmp
add
hlt
add
ret
add
jnp
mov
xor
jle
cmp
test
xchg
and
testl
int
ljmp
js
leave
mov
jbe
mov
mov
clc
jnp
xor
imul
push
dec
gs
fcomp
and
into
jecxz
test
lock
shrb
push
imull
dec
push
sbb
mov
adc
xlat
fidivs
loope
dec
ja
push
mov
out
dec
repnz
fwait
data16
mov
inc
dec
add
cmp
mov
pop
out
fcoml
mov
xor
movsl
aam
sub
mov
mov
lock
aas
mov
in
js
push
popa
fwait
inc
xchg
je
inc
pop
pop
mov
pushf
xor
jp
jmp
mov
pop
adc
jmp
ss
sbb
pop
mov
addl
sub
xchg
ret
fs
jne
lds
jecxz
data16
add
movsb
xlat
or
scas
cli
mov
cmp
or
nop
ret
nop
flds
mov
je
jbe
xor
push
mov
pop
cmpl
or
int
out
mull
sub
orb
and
mov
int3
pop
shrb
sub
mov
rcll
adc
mov
jnp
shr
cltd
and
inc
fs
scas
sub
xchg
xlat
jl
repnz
inc
movl
xor
lret
push
imul
jp
xchg
jno
out
pop
push
pushf
jg
imul
push
lock
xlat
aas
pop
sar
sbb
jle
movsb
sbb
pushf
clc
jbe
xchg
fdivrl
pop
cld
out
or
pushf
bound
cmc
mov
xor
and
dec
gs
jmp
fildll
sub
push
dec
mov
adc
fistl
fldcw
jb
gs
inc
jmp
add
xor
pop
mov
mov
cmp
cmp
insb
pop
sub
int3
cmpsb
dec
inc
or
add
push
xchg
cmp
and
jnp
roll
inc
mov
pop
push
xchg
cmp
pusha
jbe
pop
pop
pop
call
cmpb
jg
inc
sbb
push
addr16
sub
jmp
mov
mov
out
add
dec
cmp
arpl
lcall
sbb
out
inc
mov
test
mov
cmp
dec
xchg
and
rcrb
in
popf
sub
mov
inc
lea
js
push
mov
mov
jae
aas
xchg
in
or
outsl
sub
push
aad
int
jle
clc
push
cltd
xchg
inc
push
repnz
outsb
push
in
xor
outsl
mov
and
call
test
arpl
bswap
out
bound
add
sub
inc
sti
rcll
sub
lock
dec
nop
pop
mov
and
loop
mov
jo,pt
lock
sub
dec
aad
jae
scas
mov
aaa
xchg
loop
pop
adc
adc
xor
dec
out
out
pop
lds
les
add
dec
xchg
data16
xor
inc
mov
xlat
fscale
push
inc
pop
sbb
ds
jp
mov
jns
xchg
and
sub
das
sub
sub
or
cs
sub
xor
js
subl
insb
xchg
xchg
in
out
inc
popf
andl
jmp
mov
movl
lahf
test
inc
js
orl
pop
xor
cs
pop
fs
sub
push
cmp
dec
mov
aas
sub
into
sahf
adc
mov
cmpsb
insb
aad
sbb
cs
sub
adc
xor
test
imul
inc
lea
movsb
ja
mov
aad
and
sub
fisubrl
push
inc
pop
adc
outsb
pop
or
cmp
pusha
lods
xor
hlt
push
jge
aad
mov
cmp
aad
xchg
jo
mov
cmpsb
sbbl
sbb
mov
sbb
push
xor
cs
shr
test
rolb
cmpsb
mov
aad
out
and
pop
pop
jb
cmc
test
xchg
out
or
scas
mov
mov
mov
push
cmp
xor
xchg
add
cmp
cmpsl
cmc
inc
cmc
or
cwtl
jbe
pushf
hlt
outsb
lret
adc
sub
sbb
pop
adc
lds
fadd
iret
mov
out
mov
and
cmpsl
sub
add
mov
in
ja
xchg
in
fdivl
pop
xchg
ds
xor
or
cld
adc
xchg
and
ljmp
int3
fstps
xchg
bound
fs
les
xor
loop
jo
jo
stos
jne
mov
mov
pop
add
cmp
outsl
frstor
out
je
mov
cmpsb
push
xchg
insl
aad
inc
std
iret
adc
movsl
sub
int
pop
out
jae
cmp
cmp
push
bound
and
icebp
icebp
and
jnp
stc
out
cli
xor
mov
rclb
or
sti
push
mov
popf
fstps
fsubrs
jnp
rcll
fdivp
push
mov
and
popf
imul
inc
int
sti
push
or
stc
shll
sti
sti
mov
inc
rcll
stos
cwtl
and
pop
fbld
fsubl
dec
mov
push
xchg
leave
lret
sbb
aas
repz
push
mov
enter
mov
out
push
mov
xchg
nop
inc
inc
loopne
cmovb
adc
xor
mov
data16
dec
sbb
push
test
xorb
enter
stos
jmp
cmpsl
insb
mov
xchg
pop
sbb
cltd
addr16
mov
je
test
jg
stos
fisubrl
ja
push
cmpsb
adc
mov
js
mov
pop
pop
fsubl
inc
aam
pop
mov
fmuls
imul
mov
scas
fcmovnb
rcrb
pop
mov
jae
aad
fisttps
mov
push
inc
pop
je
call
scas
fwait
sarb
or
cmp
out
divb
out
iret
arpl
or
mov
aam
pusha
sbb
jo
inc
jbe
mov
pop
ljmp
jo
adc
push
aam
cli
repnz
rorb
clc
gs
pop
pop
pop
divb
pop
ljmp
repz
mov
rcr
cmp
int
sahf
mov
jae
xor
xchg
xchg
movsb
repnz
add
or
stos
fs
pop
ret
mov
pop
push
leave
xor
lods
jo
cmp
cmp
xchg
inc
push
add
adcb
pop
scas
incl
add
lret
shlb
jb
mov
mov
test
lods
cltd
leave
add
dec
mov
jp
mov
jl
adc
loopne
inc
and
jp
test
int3
adc
pushf
sub
jle
jmp
xor
mov
movsb
xchg
xor
jbe
pop
mov
mov
mov
adc
scas
mov
jne
ljmp
repz
mov
pop
cwtl
add
addr16
fcmovne
sbb
sbb
ss
outsb
int3
sbb
xor
shll
push
popa
test
inc
or
int3
in
push
add
adc
sub
shlb
mov
mov
and
jmp
xchg
sbb
outsb
stos
or
test
and
enter
mov
fsqrt
mov
jl
push
aaa
dec
mov
in
cwtl
cmc
ljmp
pop
xchg
sub
xor
out
push
fimull
loop
in
inc
xlat
sbb
out
filds
movsb
mov
pop
pushf
add
mov
sahf
out
mov
inc
inc
cmp
sarl
mov
adc
xchg
repz
cmc
mov
leave
lcall
cmpsb
pop
data16
fucomp
std
mov
sbb
xlat
in
dec
sbb
ljmp
jb
imul
fucom
fcmovb
aas
sbbl
xchg
push
sbb
leave
or
jge
scas
or
mov
mov
or
loopne
adc
fcmovbe
xchg
arpl
movsl
and
lods
pop
pusha
cwtl
aaa
in
mov
addr16
push
enter
push
cwtl
mov
fnstenv
cmp
dec
lods
stos
fadds
lret
mov
push
fcmovbe
lds
sub
ret
fsub
fmull
adc
add
pop
rorb
push
mov
sub
add
adc
addr16
jg
mov
inc
sbb
xchg
pusha
and
push
lret
addr16
pop
jge
sarb
in
jle
fstp
popf
or
addr16
xchg
cmp
push
inc
mov
push
sarb
xor
lods
lods
push
fimuls
mov
andb
jg
cltd
push
push
imul
lea
sub
sbb
jmp
cmpsb
dec
sbb
inc
add
mov
ret
add
pop
decl
in
adc
repnz
lahf
jecxz
inc
imul
xchg
in
inc
and
mov
and
push
adcl
cmp
fdivrl
push
ret
adc
sub
sahf
iret
dec
ret
add
in
pop
ror
adc
lods
popa
loopne
imul
loopne
data16
andl
pushf
imul
cli
ret
lcall
push
pop
fs
je
shlb
leave
mov
out
std
xor
std
lock
pop
icebp
cmpsb
ret
pop
out
sub
jge
ret
cld
clts
push
lds
out
mov
jbe
mov
rorl
sbb
cmpsl
orb
cmpsl
leave
lods
test
mov
fiadds
mov
xchg
shrl
jge
jns
test
push
andl
dec
iret
dec
ds
movsb
dec
mov
inc
jge
push
ret
data16
pop
icebp
subb
push
xor
adc
xchg
sub
xor
adc
dec
repz
inc
jbe
lods
cli
invd
pop
out
lretw
push
pop
sbb
aas
mov
arpl
xor
popa
outsb
mov
ljmp
jp
pop
das
icebp
loop
push
iret
aam
sbb
fldln2
and
js
insl
in
sbbl
jae
mov
mov
xchg
cmp
pop
and
testl
dec
cltd
push
mov
mov
in
or
push
mov
jae
rclb
testl
sbb
push
loopne
out
jae
mov
and
stos
jne
xor
lock
out
xlat
outsl
lds
subl
es
rcr
fcom
clc
and
push
xor
mov
or
cwtl
inc
jl
jno
add
pushf
aad
mov
add
stos
out
mov
je
mov
adc
adc
mov
enter
pop
push
dec
mov
adc
fs
sbb
mov
xor
jle
push
mov
lods
and
pushl
aaa
fimull
adc
dec
xor
inc
and
lret
adc
inc
mov
ret
popa
xor
or
fwait
and
rorl
jbe
xor
pop
je
test
push
xlat
es
add
xchg
or
pop
mov
pop
lock
pushf
fidivs
jecxz
icebp
cld
xchg
mov
push
cmp
nop
adcl
push
pusha
leave
into
cmpsl
popa
into
sar
xchg
mov
aam
jle
inc
mov
adc
pop
popf
adc
mov
arpl
rcll
jl
sbb
mov
and
jmp
jl
sub
xor
jbe
mov
mov
push
mov
negl
arpl
xchg
jmp
daa
in
xor
pusha
mov
or
mov
ljmp
int
or
sbb
arpl
loope
leave
or
xchg
jae
ja
add
shrl
pushf
jbe
daa
push
dec
arpl
enter
mov
sahf
add
or
mov
cmp
sub
cs
and
clc
sbb
mov
and
or
ret
add
out
outsb
xor
xchg
and
outsb
push
stos
nop
push
ljmp
cmp
pop
mov
fdivrl
mov
adc
mov
cs
dec
mov
adc
add
push
push
lods
lods
lret
adc
dec
es
fisttps
mov
fildll
mov
mov
call
ds
push
dec
xchg
mov
and
push
test
mov
mov
insl
cmp
cmp
xor
and
stos
sub
fwait
or
jp
movsl
ss
daa
dec
add
inc
mov
sbb
pushf
loop
sub
mov
add
sbb
outsb
test
inc
mov
add
xchg
jmp
fwait
daa
jb
rorb
pop
pop
cmp
xchg
je
sub
aad
imul
stc
enter
adc
mov
cmp
adc
mov
cmpsl
shll
es
inc
cli
push
int
stc
sarl
cli
lods
mov
mov
pushf
or
pop
out
cli
arpl
mov
std
lock
sbb
gs
adc
loope
sub
jl
or
cli
hlt
andl
gs
sub
pop
imul
pop
push
clc
and
daa
inc
mov
lcall
xor
lret
lods
mov
or
and
mov
cmpsl
shll
fmul
pop
pushf
out
jbe
adc
or
or
jne
xor
jg
outsb
xor
sub
sbb
dec
repnz
addl
lds
out
loopne
fisubs
or
mov
push
popa
adc
out
je
test
out
jo
scas
mov
subb
test
lods
mov
push
andb
mov
lret
sub
add
fs
mov
ljmp
popf
aad
add
sbb
repnz
das
fiadds
dec
jns
xchg
movsl
cmp
cmc
stc
mov
orl
fidivrs
repz
push
lock
and
jb
jbe
mov
dec
data16
iret
test
adc
jp
ret
xor
push
insb
mov
arpl
into
insb
rcr
pop
scas
push
dec
cld
ja
pusha
jle
mov
test
push
jmp
add
inc
outsl
ljmp
hlt
mov
cs
notb
xor
xchg
scas
clc
loopne
push
jle
mov
out
or
cmpsb
add
jo
mov
cmp
cmp
inc
inc
in
jecxz
push
mov
cmp
and
pop
pop
inc
pop
add
push
adc
leave
and
in
in
push
scas
jnp
ror
aam
es
in
ljmp
fwait
andl
test
mov
sub
imul
les
jbe
not
je
sbb
fwait
xchg
inc
and
aaa
inc
dec
xchg
out
popl
jmp
jae
das
adc
fstps
data16
sub
xor
xor
test
pop
adc
out
mov
push
xor
lods
mov
nop
outsb
adc
test
and
sub
add
fsubrl
push
mov
sub
or
orb
or
fcompp
sahf
push
out
xchg
inc
sbb
adc
sbb
jmp
mov
cmp
cmp
and
sub
rol
pop
out
fnstenv
popf
sbb
mov
sub
fdivrp
sub
fsts
dec
push
enter
sub
inc
mov
inc
xchg
fs
sahf
aad
or
arpl
adc
lcall
xchg
insb
adc
cmp
mov
clc
mov
sahf
pop
sub
cmpsb
inc
sbb
pop
in
adc
inc
loopne
rclb
inc
or
ja
rcl
jmp
or
xchg
dec
mov
ljmp
iret
adc
mov
gs
cmp
fmull
push
pop
push
js
sbb
in
sub
mov
in
lods
jp
fists
lock
in
ja
imul
imul
sarl
add
sbb
mov
rolb
xor
push
insb
ljmp
out
jae
leave
mov
arpl
cmp
jb
sub
adc
scas
mov
lcall
mov
push
jns
addb
sbb
iret
shll
jp
or
arpl
mov
cli
add
add
xchg
add
jne
add
sbb
cli
adc
ja
or
incb
pushf
pop
mov
test
push
ljmp
cmp
imul
cmpl
daa
mov
ljmp
gs
xchg
jne
lret
outsb
scas
scas
or
mov
xchg
out
js
iret
out
sbb
push
add
jno
cwtl
jg
icebp
jl,pt
mov
cmp
xor
xchg
imul
inc
pushf
icebp
test
shrb
pop
pop
and
call
pop
in
mov
push
jmp
mov
into
test
inc
cmp
orl
jp
push
into
daa
adc
out
mov
push
xchg
clc
push
sbb
jmp
stos
and
jge
loopne
lds
sub
hlt
inc
das
mov
push
daa
loope
push
sub
or
cmpsb
and
add
mov
repnz
mov
or
call
ret
dec
leave
xchg
push
push
fstl
bound
lods
or
or
push
shr
rol
sbb
jle
add
lahf
xchg
out
cltd
js
mov
iret
dec
mov
aas
fstpl
mov
xchg
pushl
push
out
add
jb
mov
push
enter
push
or
add
pextrw
adc
dec
pushf
push
push
outsb
shll
imul
inc
jl
repnz
jae
sbb
and
lcall
xor
cmc
fistpll
cmp
decb
push
lret
adc
push
inc
gs
addr16
cmp
inc
daa
jo
hlt
cmp
or
push
sbb
xchg
adc
add
fadd
imul
into
jb
push
xchg
pop
cmp
aaa
inc
je
or
or
js
popa
stos
jb
lea
sarl
xchg
pop
pop
pop
jge
repnz
pusha
imul
sbb
aad
testb
daa
mov
out
jle
mov
xor
popa
inc
inc
cmp
mov
xchg
rorb
push
lea
jle
mov
pusha
xor
sbbl
scas
jp
inc
lods
push
lods
ret
sarb
cmpsb
es
xchg
pop
add
pop
lcall
jae
adc
pop
fcompp
sub
xor
jno
mov
jo
repnz
andb
scas
mov
sbb
fisubrs
mov
dec
dec
nop
adc
adc
cwtl
cmpb
fimull
mov
icebp
cmp
xor
popa
inc
jno
lea
push
ljmp
jae
sbb
das
jge
mov
test
lret
xchg
and
lret
and
es
mov
cmpsl
adc
nop
fs
rcll
lods
cltd
jmp
jmp
xchg
lods
pop
sbb
or
push
movsb
jg
jnp
movsb
clc
add
shlb
arpl
lret
sbb
sub
loopne
push
stos
test
mov
fwait
scas
stos
in
out
mov
addr16
sub
jns
out
pop
or
lea
xor
popf
xor
adc
inc
cmpl
outsl
push
inc
mov
push
push
push
rcrb
lods
dec
out
ficoml
sahf
aam
xchg
cs
or
ljmp
mov
xchg
pushf
js
adc
adc
mov
dec
xchg
cmpsb
sub
cmpb
or
mov
mov
loop
adc
lock
jg
xchg
cwtl
insb
mov
lods
and
adc
test
shrb
shrb
int3
in
jl
mov
lock
ss
scas
cld
lods
aas
mov
popa
mov
adc
fs
pop
enter
mov
adc
jne
pop
or
jb
mov
cmp
push
inc
mov
add
mov
les
mov
xor
pop
dec
mov
loop
notb
and
or
mov
adc
pop
call
jne
and
out
aaa
xor
jns
jl
decl
call
inc
div
fsubrs
and
lea
das
push
xor
in
mov
aam
sti
cmp
push
push
dec
jle
add
mov
push
and
xchg
test
jb
sti
lcall
or
jns
call
loop
push
xor
mov
mov
sbb
and
lret
hlt
push
inc
mov
sub
test
out
pop
sub
sub
pop
lds
out
xchg
pushf
lea
mov
pusha
dec
aas
and
mov
imul
mov
push
and
mov
aam
push
cltd
jge
mov
dec
and
add
sub
stos
xor
or
mov
mov
mov
mov
jecxz
push
adc
sbb
inc
mov
inc
mov
pop
cmpsl
xchg
arpl
loope
cmp
pop
inc
lock
dec
gs
and
jnp
out
cld
jmp
aad
dec
mov
mov
mov
out
sbb
movsl
aam
mov
xchg
mov
or
xor
inc
lods
scas
mov
lea
xor
int
std
std
je
not
iret
mov
enter
lock
mov
sub
sub
arpl
sub
fdivrs
jae
sti
lods
std
pop
cmpsl
push
or
push
jns
insl
push
dec
fs
dec
in
inc
lods
ficoml
push
sahf
adcl
xorl
pop
pop
sbb
mov
shrl
bound
out
add
mov
out
enter
pop
cmc
ficoms
out
jbe
shl
shll
xor
add
fisubs
cmc
push
jg
jno
lahf
loop
repz
sub
arpl
pop
mov
ljmp
pop
inc
ljmp
out
test
out
stc
pop
sbb
cmp
out
mov
sbb
and
adc
xor
mov
loop
nop
stos
cmc
cmp
scas
push
lods
xchg
mov
inc
cmpl
setg
aam
mov
paddusb
mov
push
sub
add
in
into
xchg
clc
cli
fcoml
lret
sub
insl
pop
jg
jb
shlb
push
clc
test
dec
adc
ljmp
lds
or
mov
scas
stos
pop
sti
repnz
sbb
clc
mov
movsb
fs
pop
and
xchg
pop
pop
jne
stos
ljmp
popa
mov
mov
fwait
lods
xchg
push
jo
lcall
popf
cmp
dec
sarl
ret
pop
popa
xor
std
aaa
jns
push
jmp
ret
push
cltd
inc
push
and
jle
mov
xchg
pop
decl
sub
out
les
lods
sub
fsubl
movsb
call
shrb
rolb
fdivp
mov
insb
adc
insb
test
fwait
icebp
nop
movsb
cmp
das
add
frstor
jp
sbb
dec
push
adc
loopne
cmc
add
lods
test
cs
sahf
repnz
mov
int3
dec
rcrl
adc
adc
ljmp
lods
fisttpll
lahf
pop
xchg
into
outsl
out
imul
fwait
mov
adc
xchg
cmpsb
or
jge
les
sub
mov
add
out
gs
sbb
cwtl
mov
jmp
stos
and
sub
rorb
das
out
jb
lahf
ds
dec
lods
addl
mov
enter
sar
mov
inc
inc
out
test
pop
mov
xchg
rorl
pop
sub
pusha
xchg
aam
into
roll
pop
pop
int
pop
add
pop
pop
bound
out
add
sbb
stos
xorl
movsl
imul
or
in
mov
add
icebp
cltd
lock
in
daa
mov
fdivrl
outsl
jmp
or
fiadds
cmc
xor
inc
pushf
jns
loopne
or
or
aaa
dec
iret
mov
mov
cmp
xlat
xor
cmp
push
lods
pop
jp
xchg
inc
push
xchg
loop
push
inc
out
pop
sbb
pushf
imul
adc
cmp
sbb
addr16
xchg
cmp
lret
xchg
cmp
test
push
scas
int3
lods
enter
push
mov
cmpsl
fnstenv
jp
popf
xor
pop
fcmove
rcr
outsl
mov
mov
sti
pop
mov
leave
or
and
sbb
ljmp
sbb
js
inc
mov
push
or
sbb
dec
jo
arpl
rorl
outsb
cli
dec
popf
pop
inc
popf
cmp
cmp
mov
push
leave
lods
lods
repz
movsb
mov
or
lret
jae
aas
bound
dec
imul
mov
fsubrl
add
xor
adc
jp
mov
push
mov
stos
stos
fidivrs
cwtl
push
xchg
sarb
mov
mov
fwait
jbe
sub
dec
cld
pop
adc
iret
sbb
insl
push
in
and
loopne
cli
sub
sub
dec
pop
rol
mov
ret
pop
add
pushf
xor
or
repz
xchg
repnz
mov
mov
ss
cwtl
sub
xchg
ret
and
in
dec
adc
xor
roll
and
into
lahf
sbb
xchg
xor
xchg
dec
cmp
fstp
cld
int
xchg
aas
ss
mov
aam
adc
loope
icebp
mov
sahf
loop
jmp
mov
mov
cli
lahf
and
lret
ficoml
ret
insl
fsubrl
in
jmp
adcb
rcrb
fwait
sub
addr16
insl
cmp
cmovnp
fcompl
dec
stc
out
xchg
and
xlat
out
mov
inc
fnstcw
jbe
mov
sbb
test
inc
movsb
pushf
mov
adc
push
std
je
xor
lods
add
xor
filds
sbb
xrelease
test
movsl
imul
rcrb
in
ret
sub
adc
and
jl
into
inc
fidivl
or
nop
jbe
adc
push
int3
lods
cmp
sub
inc
cmc
mov
daa
fwait
add
mov
xchg
dec
insl
mov
imul
mov
xchg
adc
inc
add
xchg
ret
dec
sbb
je
mov
lods
scas
add
or
pavgw
xor
loop
fcmovbe
in
add
mov
incb
arpl
xor
or
shlb
push
sbb
popf
cmp
inc
in
popf
add
or
mov
jb
push
push
addl
mov
xor
mov
icebp
sbb
and
cmp
ljmp
push
cwtl
loope
inc
add
rcl
mov
mov
daa
aas
lret
mov
mov
lahf
mov
pop
test
sbb
lcall
shrl
leave
mov
repz
adc
sahf
cs
arpl
sub
sbb
je
jmp
cmpsb
enter
aaa
js
imul
jle
mov
dec
jno
dec
sub
mov
cli
in
fstps
scas
leave
mov
push
sbb
stos
out
scas
or
sarl
stos
xor
mov
push
ficompl
ror
aam
xchg
std
in
mov
xchg
cli
jne
pusha
inc
scas
loopne
add
loop
jge
or
mov
lret
in
jne
fwait
imul
inc
mov
pushf
je
fdivs
shll
mov
xchg
jb
sti
and
cs
gs
fadd
popa
xchg
in
fisubrs
or
mov
out
and
or
loope
jle
fwait
nop
sbb
es
pop
cmp
fldz
or
jge
lock
stos
aad
clc
outsl
into
shll
dec
pushf
lock
mov
xchg
enter
addr16
in
outsl
ds
and
and
sahf
and
rcrb
cmc
xchg
push
loop
ficompl
rorb
ret
lds
int3
icebp
rclb
sarl
test
pop
pop
mov
cmp
add
mov
push
pop
lds
sub
lods
dec
push
xchg
add
jl
fsubr
push
mov
adc
xchg
jl
insb
mov
inc
mov
fbld
jns
sahf
xor
es
in
popf
sub
adc
imul
xchg
jnp
arpl
nop
lods
and
scas
mov
inc
push
das
inc
imul
shlb
cmp
inc
and
jg
push
sub
lock
shl
mov
into
mov
loope
xor
xchg
stc
inc
leave
mov
inc
ret
mov
mov
outsl
mov
mov
xchg
dec
dec
cmp
pushf
mov
leave
mov
jmp
ds
xchg
outsl
bound
cltd
pusha
ret
lods
push
xor
gs
dec
and
xchg
push
daa
int
aam
subb
mov
dec
jb
xchg
jae
js
inc
mulb
iret
push
add
aaa
xchg
xchg
lock
mov
xchg
out
fs
push
sbb
mov
fwait
shll
or
sub
cli
lret
shlb
xor
sub
enter
hlt
pop
and
insl
inc
xchg
movsl
jo
dec
in
jbe
pop
out
daa
dec
cmpsl
mov
pop
int
push
sbb
sbb
xorb
sub
jae
adc
jbe
shrb
xor
mov
pushf
inc
cmp
push
loop
or
and
sub
sbb
fistps
jo
xchg
ret
std
adc
pop
inc
lds
mov
fildll
scas
sbb
fldt
lds
xchg
negl
jge
rolb
mov
pusha
sti
lds
es
jbe
fnsave
or
mov
fstp
push
jg
movsb
xchg
or
scas
js
mov
sarb
ss
pop
inc
pop
cmpsb
mov
mov
dec
lock
xchg
dec
in
cwtl
cli
ret
or
addb
lret
ja
leave
rorb
test
and
cwtl
xor
sarb
inc
adc
jp
pop
xchg
or
sub
mov
aam
xchg
movsl
aam
pop
ja
movsl
sbb
mov
xlat
xor
and
sbbb
fisttpl
xchg
sbb
mov
imul
sbb
pop
aas
out
in
pushl
mov
push
push
jae
out
mov
add
fcmovnb
int3
mov
imul
sbb
sbb
jle
fwait
inc
mov
push
outsl
push
mov
mov
mov
xor
icebp
lret
rcl
scas
and
push
mov
movsb
push
sbb
and
sahf
xchg
push
mov
outsl
stos
fistpl
popf
inc
in
inc
jo
push
jp
int
lock
cmp
and
add
dec
lcall
loope
xchg
add
sub
movsb
mov
jbe
fistpl
loopne
push
mov
dec
mov
data16
clc
and
jge
aad
addl
loopne
adc
out
pop
sbb
add
and
push
dec
fistpl
inc
repz
dec
mov
movsl
insl
push
pop
daa
cs
xchg
sbb
mov
mov
xor
cmp
je
stos
sub
shr
pop
shr
xchg
iret
cmp
movsl
xchg
mov
fisttpll
rclb
add
stos
shr
int
loopne
frstor
push
push
add
incb
mov
lcall
cmp
inc
sub
inc
shrb
sbb
xchg
mov
add
ficompl
mov
loopne
cmp
aad
dec
scas
ljmp
loopne
add
sbb
loope
pop
shlb
or
divb
pop
ja
mov
daa
pushf
mov
sub
sub
lahf
xor
and
inc
je
lret
and
xchg
mov
hlt
pop
cmpsl
cmpsb
stc
mov
mov
cmp
inc
fs
data16
aas
inc
fcmovnb
pushf
jle
jae
sbb
add
movsl
sti
pop
push
cltd
ss
inc
pop
mov
mov
inc
mov
femms
pop
insb
insb
cmp
sbb
mov
jle
cmp
scas
xchg
inc
in
pop
out
jb
mov
jle
mov
dec
rcll
pop
test
testl
push
pushf
fwait
ja
roll
xchg
dec
neg
rcr
or
cmp
adc
or
sbb
lahf
lds
mov
cmpsl
push
adc
int
dec
sub
jle
rcll
or
mov
mov
enter
xchg
data16
call
sahf
mov
lret
popf
pushf
push
push
and
add
jecxz
mov
sub
inc
clc
mov
push
sub
cli
jno
enter
lock
push
ret
adc
pop
cmp
fcoml
loop
jne
and
int3
movsb
push
xor
insl
mov
scas
int
pop
in
lods
ja
mov
sbb
in
gs
push
stc
aad
aam
inc
jge
sub
loope
push
lods
mov
imul
arpl
outsb
xchg
mov
jne
hlt
lahf
push
js
fadd
lret
cmpsb
into
jae
cmp
cmp
push
xlat
xchg
dec
pop
pushf
sub
pop
test
xchg
and
xor
sbbb
mov
adc
ret
push
fmuls
ss
sub
push
dec
out
sti
cs
mov
mov
mov
pusha
loope
sbb
pop
mov
pop
sbb
mov
push
mov
pushf
cmp
jg
pop
mov
in
stos
inc
xchg
int
pusha
stos
lret
add
mov
cmp
ds
pop
scas
imul
stc
test
xor
hlt
mov
jge
lods
repnz
and
sub
cmpb
cli
xchg
dec
mov
jo
sub
call
mov
cmc
adc
push
int3
in
cwtl
inc
addl
stos
adcb
push
cltd
movsb
xchg
fisttpl
pusha
jmp
call
je
dec
mov
and
dec
jge
jecxz
and
jbe
mov
or
sub
out
aam
push
cltd
in
sub
push
cltd
xchg
adc
call
pop
add
andl
or
in
xor
jno
lcall
and
pop
out
xlat
inc
adc
test
mov
sbb
bound
mov
add
mov
decl
repz
jl
xorb
add
pop
pop
pop
mov
fs
arpl
push
addr16
jns
subb
jb
sbb
jp
mov
loopne
add
inc
dec
aas
fs
or
mov
pop
lds
test
add
test
stc
fwait
sub
mov
not
int
sar
and
push
xorl
xchg
lret
mov
mov
xchg
sub
mov
data16
test
cmp
pop
xlat
mov
jae
sbb
fistps
popf
cmp
push
hlt
ja
inc
mov
test
jmp
insl
jge
insb
mov
inc
dec
and
xor
ret
or
inc
negb
mov
aas
cs
movsl
add
pop
aas
popf
bound
mov
daa
lea
adc
sub
rorl
sbb
mov
jmp
out
jle
das
xchg
mov
int3
in
call
call
push
mov
scas
mov
xchg
test
jle
adc
mov
movsb
fcomps
popf
jns
shlb
mov
dec
cmp
cmpsb
lods
mull
in
rcll
adc
sbb
adc
pop
pusha
sub
pop
bound
inc
pop
arpl
mov
mov
loope
sarb
mov
add
or
adc
push
and
mov
adc
jb
adc
dec
sub
gs
lds
scas
ficoml
mov
jb
or
lret
faddl
hlt
cmp
lock
ja
push
aad
daa
in
push
shlb
jl
and
shll
scas
in
add
sbb
insl
or
xchg
sub
icebp
imulb
out
aas
lret
js
lret
into
popa
adc
sub
in
push
cmpsl
mov
lock
int
or
cmp
outsb
loopne
xor
mov
pushf
outsb
aas
mov
jb
out
and
imull
or
jecxz
orb
in
shlb
call
mov
adc
push
inc
ljmp
repnz
std
in
outsb
aaa
imul
adc
leave
sbb
lods
jg
ss
dec
xor
xchg
mov
push
ret
xor
cmp
and
jmp
idivb
push
pop
mulb
and
iret
and
or
stos
jg
stos
sbb
mov
mov
xor
sub
nop
les
add
mov
mov
mov
jmp
mov
push
dec
cli
mov
cmp
mov
lret
dec
inc
xchg
or
stc
xor
ljmp
test
scas
scas
repnz
mov
mov
xorl
dec
and
jl
or
and
mov
mov
mov
cmc
lods
cmpsb
jecxz
in
out
sarb
add
imul
fsubrs
je
mov
inc
pop
sub
les
dec
rol
add
push
cmpsl
and
inc
adc
adc
mov
nop
stc
jo
mov
aas
push
mov
movsl
xorb
inc
xchg
inc
dec
inc
test
xor
jne
xchg
adc
insl
adcl
fs
dec
jne
cmp
mov
sbb
in
mov
movsb
cmp
imul
jae
dec
cwtl
mov
test
xorb
fs
stos
out
mov
jp
pop
imull
aad
mov
jp
mov
inc
mov
jo
pop
fdivr
notl
roll
pushf
or
add
cmp
mov
sub
add
pop
xchg
inc
cltd
push
pop
fsubrs
xchg
mov
sbb
mov
pushf
inc
cmp
sub
or
fdiv
jp
pop
mov
jp
jl
mov
je
adc
jne
push
or
lods
cwtl
fwait
push
rcll
lahf
fisttps
push
ret
leave
xchg
pop
sahf
in
xor
sahf
aad
sbb
dec
aad
jnp
inc
push
adc
inc
add
je
aam
xor
imul
sbb
fbld
pop
hlt
hlt
sub
das
cmp
and
decl
mov
aaa
xlat
lcall
pop
out
and
xchg
jb
and
out
aad
mov
lahf
inc
pop
cmp
jecxz
jne
mov
mov
adc
nopl
cmp
add
pop
sbb
xchg
jl
clc
imul
push
sub
push
xor
and
jge
sbb
add
mov
idiv
emms
dec
sbb
mov
iret
daa
xchg
rcr
mov
cmpsl
repnz
stos
sub
add
fmull
jecxz
andl
cltd
stos
mov
fisttpll
lds
insl
aam
xlat
imulb
pop
xchg
mov
sbb
mov
cmc
leave
xlat
aam
das
cwtl
pop
adc
dec
xchg
push
in
jecxz
popf
stos
cld
fld
jle
mov
roll
sbb
rcll
push
and
xchg
bswap
cmpsl
mov
psubusb
dec
sbb
les
mov
dec
stos
adc
xchg
dec
xchg
pop
loopne
xor
inc
mov
lods
jg
inc
sub
sbb
int
pop
int3
pop
cmp
shll
ja
and
xor
xor
shl
and
in
mov
add
sbb
icebp
xchg
fistpll
push
sub
in
lret
orl
lods
jo
hlt
xor
mov
jb
rolb
cmp
out
jb
dec
addr16
fcoms
stos
and
mov
push
push
cmp
arpl
es
mov
jmp
repz
mov
mov
xchg
std
mov
jg
xor
mov
sbb
and
es
xlat
add
mov
fidivrs
scas
pusha
jmp
mov
add
sbb
jbe
mov
mov
bsf
push
out
fld
push
or
mov
cmovb
clc
mov
push
push
out
jb
test
pop
cmp
cs
adc
inc
insl
jge
daa
inc
mov
ret
add
ss
in
les
aaa
psadbw
aaa
pop
in
push
in
sbb
mov
and
cmpb
into
sbbl
or
lret
adc
bound
lock
pop
mov
and
sbb
pop
sub
mov
mov
aad
add
mov
push
adc
jne
inc
mov
sbb
mov
add
inc
popa
xchg
int3
enter
cmp
push
test
or
mov
mov
rcrb
jle
rcr
jno
daa
dec
xchg
js
movsb
out
sbb
dec
repnz
test
jge
insb
mov
fwait
adc
jne
mov
pop
outsb
mov
mov
orb
psrlw
negb
sub
lods
pop
push
repz
repz
pop
adc
mov
cmp
jecxz
popa
jae
ret
push
mov
scas
jmp
xor
in
mov
das
cmpsl
enter
sahf
mov
rolb
outsb
out
mov
mov
sbb
test
adc
sbb
xchg
ja
jg
and
jnp
dec
bound
xchg
sub
add
icebp
inc
lret
mov
dec
cld
outsb
or
shll
mov
loop
add
xchg
pop
test
or
sti
hlt
incl
lods
enter
mov
pop
inc
inc
fmull
mov
inc
int3
mov
xlat
cmp
enter
mov
cmpsl
in
cmp
mov
cmp
xchg
lahf
pop
popa
cmp
xchg
mov
outsl
pushf
mov
cmc
das
cwtl
sbb
sub
push
xchg
jecxz
xchg
mov
jo
dec
sbb
xchg
push
movb
push
das
add
and
sbb
xor
and
cmp
cmp
ljmp
cltd
adc
mov
sbb
xor
lcall
jp
add
push
fs
divl
aad
test
or
testl
jae
repnz
cmp
sbbl
inc
ds
add
imul
jne
cmp
imul
cs
push
imul
fistl
lcall
stos
dec
inc
fidivl
push
xor
test
test
imulb
cld
pushf
outsl
mov
inc
mov
and
cmp
icebp
rcll
out
jne
add
scas
ret
or
adc
xchg
mov
mov
out
mov
xchg
mov
stc
fistl
out
enter
pop
pop
rolb
xchg
cmp
loopne
jecxz
loope
and
dec
cmp
xor
mov
aam
mov
jb
daa
dec
test
in
fucomi
cmp
dec
push
push
shlb
jnp
std
pop
cmp
sub
cmp
cltd
sbb
xor
sub
adc
and
mov
arpl
xor
imul
cmp
movb
jge
fcoml
aad
mov
arpl
lock
cmp
std
cmp
das
mov
pop
cbtw
aaa
inc
rclb
jno
orb
mov
int3
sbb
sub
mov
adc
dec
fs
cmp
jae
mov
dec
sbb
jl
pushf
ds
iret
pop
std
aas
test
push
popf
mov
call
pushf
pop
fs
out
movsl
add
and
inc
mov
jge
mov
xlat
imul
adc
mov
add
stc
das
mov
inc
dec
xchg
push
dec
cld
mov
dec
xchg
mov
pop
mov
xchg
lods
fnstenv
mov
les
sbb
pusha
mov
push
sub
adc
mov
mov
insb
push
adc
ljmp
inc
push
das
scas
mov
or
outsl
lcall
stos
mov
dec
xchg
sti
aas
jle
inc
cli
dec
jae
cltd
xor
add
xchg
dec
add
dec
push
jecxz
andl
mov
pop
sahf
test
mov
xor
dec
pop
push
stc
fwait
out
push
outsb
int3
or
jbe
inc
ja
jp
aaa
xor
push
mov
xchg
sti
dec
adcb
js
into
cmp
mov
les
push
jo
lcall
gs
push
xor
cmc
ret
mov
imul
sbb
icebp
imul
xchg
test
or
in
mov
cmp
push
sbb
sub
sub
in
xchg
xor
inc
sub
and
pop
dec
push
inc
ror
jecxz
imul
mov
insb
testl
imul
insl
js
testl
adc
cmp
and
xchg
lods
fildll
dec
or
and
enter
inc
je
sub
mov
pop
jo
cld
testb
ljmp
sahf
or
pop
xadd
push
xchg
lods
imul
add
adc
add
enter
jl
adcb
xchg
mov
push
sti
push
subl
xchg
sub
sbb
xchg
mov
mov
lods
or
push
mov
jno
stc
in
fwait
lds
push
mov
ja
push
lods
imul
add
rorb
loope
mov
movsb
cmpsb
es
adc
push
sbb
mov
sbb
outsb
xor
jp
jge
shlb
mov
rorl
and
xchg
sbb
mov
push
pop
add
out
dec
push
xor
dec
icebp
int3
out
sbb
gs
loopne
scas
xor
sub
mov
ret
fldt
jle
jmp
repnz
pop
or
inc
out
enter
fmulp
or
inc
sbb
test
add
fs
and
jb
cmc
pop
sbb
mov
push
push
and
sub
mov
pusha
popa
pop
sub
ret
ljmp
jg
dec
mov
add
lods
cwtl
add
xchg
xlat
sub
out
mov
adc
mov
les
dec
sbb
test
movzbl
loop
test
and
leave
push
fadds
push
test
outsb
jmp
mov
cmp
sbb
shl
pop
ds
inc
sub
xchg
mov
xor
push
rorl
push
xchg
jb
icebp
aam
hlt
iret
mov
push
and
xor
out
inc
loopne
out
les
xor
test
xchg
pushf
dec
andl
push
nop
pop
ret
cmp
cmp
int3
add
pop
enter
xchg
scas
xchg
inc
ljmp
push
bound
lea
pop
test
jnp
cmp
push
movsb
je
lods
pop
and
stos
andl
cmp
js
pop
jmp
cmpb
cltd
gs
cwtl
push
mov
pop
mul
sub
jp
sbb
ljmp
sahf
scas
repnz
idivb
outsb
push
je
insl
out
aam
popa
and
pop
adc
sub
loope
test
pop
jne
add
jnp
lret
in
bound
out
mov
pop
cmp
sub
pop
cmp
test
jecxz
sbb
xchg
pop
out
js
repz
xchg
jecxz
pop
push
sub
adc
push
jbe
aad
cli
lcall
sahf
add
dec
pop
aaa
pushf
aaa
sub
dec
insb
dec
mov
push
mov
nop
mov
fadd
arpl
mov
jbe
push
cmp
jae
es
icebp
pop
mov
lahf
cmp
jp
aas
add
sub
add
mov
sbb
fadds
imul
push
ja
xor
jb
mov
sarb
insl
and
cwtl
jno
mov
sub
add
inc
stos
push
fwait
daa
push
mov
test
mov
mov
aam
dec
pushf
sub
es
clc
inc
mov
out
inc
pop
mov
mov
scas
leave
das
out
in
rcll
sub
stos
jmp
mov
jnp
inc
add
pop
in
jnp
jle
adc
imul
in
loop
mov
jnp
xor
sti
add
adc
and
mov
mov
pop
stc
outsl
adc
stos
repz
or
fildl
xor
or
int
push
shl
xor
fmuls
out
es
outsl
pop
and
ret
pop
add
stc
test
mov
movsb
jg
fistps
cmpsb
cld
or
sub
xor
mov
stos
sub
xorb
popa
cmc
cmpsl
dec
mov
gs
push
popa
dec
out
push
ret
mov
icebp
enter
iret
lock
jb
mov
add
data16
fistpll
inc
mov
loop
scas
or
out
ljmp
xorl
sub
fdiv
stc
adc
xchg
mov
call
jecxz
test
pop
mov
jnp
hlt
call
jle
ja
lods
aaa
shll
mov
out
dec
jbe
hlt
out
rol
xchg
adc
les
push
popf
mov
dec
push
gs
outsl
js
imul
movsl
aaa
popa
clc
repnz
jg
jne
push
xchg
lret
mov
out
inc
mov
sbb
mov
clc
leave
dec
mov
fwait
add
inc
mov
pop
sbb
add
out
push
or
or
int
es
insb
xchg
and
fstps
cmp
int3
and
inc
pushf
cmp
push
mov
mov
jmp
daa
dec
movsb
out
push
ja
mov
ds
mov
ficoms
fsubrl
notb
mov
cld
jo
jb
ja
jge
sub
add
inc
fmull
and
aas
faddl
cmp
lret
ds
jbe
std
xor
sbb
add
sbb
lods
jp
es
or
jae
clc
pop
stos
in
fisubs
cmp
lahf
jl
fcmove
je
pusha
in
mov
notl
xchg
mov
jne
adc
push
mov
dec
aas
jge
popa
push
or
in
in
adc
addr16
lock
dec
cmp
icebp
adc
loope
lret
mov
aad
inc
lahf
movsl
icebp
out
add
shlb
es
stos
sub
dec
cmpsl
iret
rcll
loopne
std
mov
stos
cmp
test
adc
andl
pushf
push
or
xchg
lock
daa
lea
pusha
mov
fists
and
fcompl
sub
mov
outsl
sub
popf
lret
test
loop
bnd
leave
out
mov
ja
push
cmp
sbb
and
xchg
pop
mov
push
stos
adcl
cwtl
jmp
cli
xchg
stc
test
jae
out
jb
mov
inc
mov
xchg
mov
jmp
inc
push
mov
jmp
mov
add
insb
fiaddl
jae
mov
shl
mov
dec
add
aad
aam
rcrb
sbb
lcall
fnstenv
cld
xchg
adc
outsl
out
inc
or
jge
addb
in
mov
mov
pop
sbbb
out
xchg
inc
push
cmp
stos
push
popa
popa
jbe
or
cmpsb
dec
jle
movsl
xor
pop
cmp
jne
mov
push
sub
into
cli
xchg
das
bound
xor
mulb
inc
aaa
movsl
cmp
mov
mov
in
jns
clc
jmp
sbb
stos
imul
push
cmpsl
lods
add
cld
mov
hlt
mov
js
mov
mov
test
sti
inc
mov
pop
push
xor
mov
outsl
cmpsl
mov
popa
scas
jg
lret
cmpsb
int
pop
push
out
lahf
xchg
inc
ret
sub
sub
push
sub
pop
adc
sub
jle
jo
cmp
sub
xorl
xor
jle
push
dec
ficomps
es
jl
pmulhuw
inc
jecxz
loop
lret
mov
aas
dec
push
stc
xchg
test
subb
lock
in
movsb
dec
ljmp
lock
jmp
mov
ret
aas
leave
add
jge
out
das
loop
rcr
in
repz
jbe
cmp
push
mov
adc
divb
add
push
adc
pop
pop
and
sub
aas
das
test
sub
and
sbb
loope
mov
fdivrl
adc
out
es
loop
dec
jle
push
clc
push
imul
lcall
xor
xchg
cmp
jge
es
push
jo
not
sti
jl
and
pop
inc
ret
push
mov
mov
inc
push
shl
pop
int3
sub
scas
sbb
icebp
adc
rcl
imul
mov
sti
loopne
inc
cmp
inc
mov
movsl
cwtl
daa
aaa
dec
mov
movsb
call
push
insb
inc
ljmp
cmp
mov
dec
xor
pop
aam
in
jg
es
sub
fwait
rcl
xor
add
ja
outsl
aas
adc
jns
out
mov
lcall
dec
push
adc
sahf
inc
out
out
mov
push
dec
mov
aaa
ret
mov
adc
popa
adc
sbb
arpl
stc
jns
mov
fisttps
enter
adc
cmp
ss
int
mov
cmp
ret
js
or
sub
cli
mov
mov
ds
push
sub
aam
pop
or
adc
adc
rcll
imul
sti
jbe
loopne
fucomp
mov
add
andb
add
jns
mov
pop
dec
sbb
xchg
in
jne
dec
imul
inc
or
int3
enter
xor
stc
inc
cwtl
rorb
sbb
test
mov
sub
or
mov
inc
sub
mov
out
xchg
mov
imul
gs
adc
xor
js
paddd
cmp
mov
xor
lcall
xchg
int3
jecxz
repz
inc
ljmp
fdiv
inc
sahf
pop
cmp
or
add
jb
ja
add
les
pushf
test
mov
aam
or
mov
xor
xchg
push
test
mov
in
xchg
cld
out
aaa
lock
shll
fwait
addr16
inc
clc
ds
arpl
jecxz
and
mov
inc
lods
ds
das
adc
inc
insl
or
mov
hlt
sahf
dec
mov
add
lcall
into
and
aad
aad
iret
push
sub
mov
push
and
js
hlt
ljmp
test
arpl
xor
xor
pop
lret
sub
dec
pop
pusha
daa
test
pop
xor
push
adc
push
sti
fidivl
push
dec
mov
shl
jbe
and
icebp
cmp
adc
ds
xchg
fstps
sub
jo
cli
nop
lret
or
xchg
shrl
pop
pushf
stc
xchg
ret
pop
repnz
test
repz
and
fsub
or
inc
jno
mov
xchg
ljmp
jecxz
call
adc
shlb
mov
dec
es
mov
out
out
push
das
clc
andl
fisubrs
imul
cmpsb
lock
aas
enter
push
inc
push
ffree
arpl
jge
loopne
paddsb
rorl
jl
add
sti
pop
int
repnz
push
js
inc
call
push
repz
daa
fldcw
lret
add
and
mov
popa
mov
ljmp
jecxz
jno
sub
dec
mov
and
aaa
mov
push
xchg
fdivrs
xchg
inc
clc
pushf
and
roll
mov
aad
jecxz
lret
mov
xchg
push
scas
mov
pop
pop
adc
dec
push
dec
out
mov
mov
fildll
cmpb
popf
jl
sub
jo
mov
insb
in
push
pop
push
icebp
sub
adc
repnz
cmp
stc
mov
pop
testl
cmc
or
dec
daa
cmpsb
pop
xchg
aas
outsb
insl
mov
sub
cmp
cmp
lcall
dec
pushf
sub
es
cmp
xchg
dec
pusha
insl
div
mov
sahf
push
or
sub
sub
lret
mov
dec
dec
notb
sub
inc
inc
shr
lret
mov
pop
je
ficoms
mov
jecxz
mov
and
adc
sub
sti
arpl
ficoms
xchg
jg
cld
add
fildll
sub
fisubl
jmp
out
inc
hlt
mov
push
call
mov
shl
ja
sub
dec
rol
in
xchg
xchg
inc
jbe
xor
xchg
xchg
push
xchg
stos
add
cld
inc
sub
adc
cld
xor
repnz
jmp
add
inc
and
mov
popf
insb
es
iret
test
adc
jae
dec
scas
pop
xor
lahf
gs
jmp
int
xor
xor
push
mov
push
or
lods
jl
pop
popf
push
sub
jb
ja
adc
loopne
in
je
jp
mov
mov
ret
xchg
imul
and
aas
mov
and
inc
cmp
sar
inc
outsl
aam
cwtl
orl
and
push
jle
lahf
push
dec
inc
pop
push
aam
mov
aas
push
xchg
inc
int3
int3
aam
lcall
lret
fs
and
aam
inc
xchg
mov
mov
mov
aam
int
cld
inc
adc
push
dec
lock
cli
movsb
stos
pop
outsl
and
jne
xor
xor
jle
fucomip
sbb
loopne
mov
dec
imul
dec
push
mov
loopne
xchg
ds
mov
and
pop
movsb
xchg
pop
stc
test
aam
lock
imul
jne
aas
add
mov
push
mov
mov
dec
out
mov
xchg
les
aas
xchg
enter
push
xchg
repz
in
xor
sbb
adc
lock
xlat
insl
mov
pushf
pop
adc
nop
push
jnp
fucomp
jge
mov
jge
rcl
xchg
sbb
stos
mov
push
cmp
fnstcw
fldenv
cmc
sub
jl
adc
arpl
jae
add
mov
inc
inc
fidivrs
add
pop
das
out
or
int3
or
sbb
or
call
dec
xchg
xor
rcl
popf
dec
and
inc
fildl
mov
std
mov
cli
int3
data16
jl
jo
push
xchg
sub
push
jecxz
aad
push
dec
test
pop
sub
aaa
nop
cmp
jle
adc
dec
data16
sub
fs
jnp
sarl
loopne
xor
rcll
pop
inc
sub
out
aaa
sub
mov
sbb
sub
fisttpl
lret
das
rorl
or
mov
ljmp
incl
mov
scas
mov
pop
add
push
cmpsb
add
negb
out
xchg
hlt
scas
push
sbb
cvttps2pi
cwtl
in
sbb
out
outsl
or
mov
cmpsl
adc
cmpsl
mov
cmp
test
sbb
xchg
scas
sarl
jo
lahf
jae
mov
fcomps
rolb
mov
fistpl
in
int
mov
sub
daa
mov
adc
mov
sbb
test
movsl
cld
jle
in
cmp
sbb
jmp
lahf
lret
cmp
stos
lret
imul
shrb
movsl
mov
div
inc
aaa
jb
and
roll
lret
push
lret
arpl
sub
idiv
testb
or
sbb
mov
aam
sahf
or
and
scas
push
das
fidivrl
cmp
inc
in
inc
push
mov
cwtl
jne
pop
xchg
movsb
int
bound
cmp
jecxz
aaa
sub
insl
cmp
mov
repnz
adc
fwait
pushf
inc
enter
pusha
inc
mov
add
adc
ljmp
sti
xchg
dec
push
dec
jecxz
jno
dec
inc
push
push
sbb
sub
shlb
sub
out
xchg
das
adc
cmp
sbb
ret
jo
jo
sti
ds
dec
add
int3
pop
loop
pop
mov
scas
repnz
ljmp
outsb
cwtl
inc
outsb
pop
mov
or
aam
add
mov
stos
ret
lcall
int3
ljmp
jle
inc
gs
lods
sbb
pop
mov
cmp
les
pop
mov
inc
sub
mov
lods
loop
xchg
lahf
pop
es
adc
pop
mov
dec
sub
call
movsl
int3
adc
insl
jns
or
daa
sub
dec
pop
loopne
add
mov
insl
stos
das
sub
pop
aaa
dec
mov
jmp
data16
ret
arpl
mov
int3
adc
xchg
fucom
add
add
hlt
adc
es
out
fbld
lret
add
nop
mov
push
sub
daa
mov
scas
inc
pop
jl
imul
jg
xor
add
leave
arpl
scas
data16
stc
adc
jmp
pop
nop
lret
les
fsubr
scas
add
loopne
xor
addl
add
jbe
add
cli
aam
lea
scas
in
aaa
loopne
jbe
xchg
iret
sbb
pop
inc
sub
mov
jo
imul
es
das
ret
inc
and
test
xchg
mov
jbe
jp
scas
int3
xor
cmp
cwtl
jmp
adc
mov
inc
mov
negb
std
sbb
dec
mov
aam
sub
out
mov
mov
sub
and
push
pop
aad
mov
loope
adc
insb
inc
jae
mov
pop
push
arpl
enter
dec
mov
loop
sub
pop
jmp
ret
testl
rorb
mov
call
pop
repz
hlt
nop
mov
cltd
in
mov
push
loop
xor
adc
in
out
cmc
mov
cmpsl
mov
push
fwait
movsb
cli
sbb
subl
sbb
cmc
in
fdivl
xor
imul
test
and
fldenv
ret
xchg
mov
mov
outsl
sub
push
mov
clc
filds
pop
jb
mov
call
pop
icebp
push
jae
sbb
and
or
mov
mov
aaa
mov
or
mov
repnz
addr16
lahf
sbb
xchg
xor
mov
inc
and
hlt
pop
xchg
mov
adc
test
cld
sti
jb
pop
inc
jg
jnp
xor
jle
mov
popf
stos
pop
sbb
ficoms
lds
mov
mov
dec
sub
mov
cmc
test
ss
js
push
icebp
mov
fcmovne
bndstx
mov
pop
stc
pop
mov
lds
fisttpll
and
or
insb
xchg
orl
add
lcall
or
adc
mov
in
cmp
cwtl
dec
in
xlat
sub
mov
dec
inc
mov
xchg
rclb
xor
jbe
inc
lds
movsb
int
push
in
sbbb
dec
mov
sub
mov
sahf
out
insb
adc
cld
inc
xor
lcall
adc
inc
pop
dec
mov
adc
jo
imul
xchg
shlb
pop
mov
pushf
jb
xchg
mov
iret
jns
or
daa
cmp
ds
and
f2xm1
xchg
pop
xor
add
xchg
cmpsl
hlt
xchg
mov
std
test
pushf
shlb
mov
or
inc
xchg
push
loopne
push
cmp
cwtl
in
cmp
nop
frndint
imul
movl
adc
repnz
lods
test
sub
fildll
cmp
nop
xchg
inc
pop
or
repnz
fisttpll
lods
xlat
pusha
adc
fimuls
popf
sub
push
xlat
push
pop
pop
sbbb
aas
xlat
mov
loopne
xchg
enter
mov
push
push
xor
dec
add
inc
sbb
adc
adc
cmp
sbb
pop
sti
ret
jecxz
sub
int
mov
std
lods
rcr
mov
pop
sbb
adc
int3
adcl
sbb
adc
add
push
out
movsl
mov
and
mov
repz
mov
mov
int
xlat
xor
adc
pop
inc
dec
mov
add
pop
aam
xorl
fldenv
mov
lods
add
mov
mov
out
or
shrb
xchg
cmpsl
mov
mov
imul
sbb
jg
mov
mov
sbb
jne
loop
js
in
xchg
dec
test
not
lret
loopne
mov
sub
lahf
pop
push
fsts
negl
jnp
push
rep
out
adc
add
js
sbb
sub
loopne
mov
adc
out
sub
push
mov
nop
loop
inc
loopne
imulb
or
jns
in
push
lods
mov
add
fstpt
push
pop
dec
cmpsl
jns
mov
fsubrl
idivb
pop
out
adc
popf
fptan
push
xor
movsl
je
cmpsl
xchg
fdivs
arpl
sbb
mov
adc
mov
pushl
iret
enter
xor
fdivs
push
dec
fwait
scas
insb
mov
adc
lea
dec
dec
repnz
add
ret
in
xchg
test
in
xor
cmp
insl
mov
hlt
push
sub
cmpsl
jbe
mov
xchg
jns
shrl
pop
ljmp
cmp
xor
jl
sub
push
in
lahf
sbb
cmpsb
rorl
sub
and
mov
and
ja
mov
imul
xor
xlat
sahf
lret
addb
test
outsl
xchg
jbe
addb
bound
adc
mov
dec
jns
pop
ja
mov
cmc
xchg
mov
cld
xor
and
or
dec
sbb
pop
fcmovnu
mov
xor
insl
mov
jne
jl
jns
mov
nop
jg
dec
out
lods
jp
pop
sub
testl
sub
mov
cmp
jbe
aad
pop
xorb
bound
pop
out
hlt
push
nop
cwtl
aam
jnp
fs
mov
adcl
mul
mov
xor
mov
sahf
pop
jg
outsb
push
and
cmp
cmp
fisttpl
sarb
xchg
out
popw
aam
xchg
imul
aas
hlt
push
aas
cmpsb
cmpsb
pushf
out
imulb
sub
xchg
cwtl
or
xchg
cmpsl
and
rol
push
mov
and
and
mov
lcall
int
adc
mov
xor
pusha
xchg
mov
clc
shll
jne
out
aam
clc
xchg
lock
sub
cli
xor
cmp
mov
sub
dec
cmpsb
lock
je
xchg
adc
inc
xchg
mov
mov
sbb
scas
mov
hlt
push
sbb
int
mov
jge
inc
lock
push
movsb
sub
jbe
cmc
lods
js
clc
arpl
sahf
sbb
lock
ret
sub
ficoml
jecxz
data16
lods
adc
sub
dec
jle
adc
xchg
mov
inc
frstor
inc
out
scas
jae
test
mov
out
scas
dec
pop
xchg
es
cwtl
mov
push
repz
inc
daa
mov
cmpsb
dec
in
add
cmp
xor
stos
rclb
mov
and
dec
lcall
sub
cmp
add
dec
adc
mov
sti
mov
in
lahf
in
dec
cmp
jmp
shll
inc
fisttpll
fs
and
cld
sub
stos
insl
xor
jp
jne
loop
insb
cmovl
push
adc
scas
iret
addr16
addb
cmpl
cwtl
out
or
aad
push
cmp
js
mov
jmp
dec
enter
faddl
subb
shl
lahf
push
bound
jmp
xor
fnstcw
es
inc
into
stos
out
int
sbb
sbb
insb
insl
pop
iret
jae
or
xor
addr16
lcall
test
mov
xchg
fcomp
outsl
into
xorb
sub
adc
mov
rclb
push
mov
enter
sahf
outsb
fucomi
dec
rclb
dec
cmp
mov
sarb
out
mov
mov
ljmp
outsl
mov
lea
and
icebp
xchg
js
ficomps
pop
pushf
ret
pop
pop
scas
xor
inc
gs
fabs
rcll
jle
sub
data16
les
jge
inc
xchg
imul
inc
ret
add
dec
je
lahf
sub
emms
pop
lock
aas
and
pop
rcrl
inc
jns
fsubl
xlat
mov
pop
xchg
pushf
rorl
xor
inc
sbb
xlat
nop
das
xor
aas
xchg
jno
xchg
negb
mov
rcl
xchg
sti
scas
push
xor
imul
xor
bound
mov
push
push
scas
push
cmc
shll
adc
inc
cld
mov
add
popf
mov
push
movsl
test
ret
shl
popf
fnstcw
test
jg
mov
nop
mov
je
pop
xor
call
loopne
int3
inc
fnstenv
and
loopne
cwtl
loop
cmp
push
jo
call
add
pop
pextrw
sub
xor
repz
or
push
mov
lds
dec
or
push
popa
test
lods
das
gs
mov
adc
hlt
mov
adcb
mov
mov
or
lahf
jne
push
cltd
or
cmp
clc
adc
shrl
pushf
loope
xchg
xor
sub
scas
mov
mov
enter
xchg
jle
fs
inc
ja
pusha
cs
cmp
jg
add
sbb
cmp
call
mov
mull
cli
orl
xchg
iret
popf
push
add
xor
in
leave
cmpsb
add
pop
jp
enter
cmp
fdivrl
lret
lds
daa
ficoml
cmp
out
and
dec
fsubrl
inc
and
cld
fs
cmp
cld
xchg
push
cmpl
icebp
mov
mov
roll
push
fs
das
mov
lds
pop
aas
push
mov
rclb
xor
jg
push
xchg
sub
sarl
sbb
inc
xchg
xchg
daa
push
das
ret
or
lods
ljmp
sti
jle
push
xor
cmp
cmpsb
scas
push
and
aaa
pop
in
push
mov
cmp
ja
pop
inc
jle
js
xor
in
mov
jg
int
mov
popa
xchg
cmp
leave
sti
movsl
lret
sbb
mov
sub
shll
lahf
xlat
fmull
mov
shll
fisttpll
in
mov
sub
sbb
icebp
dec
jns
data16
call
jb
dec
sub
subl
sbbb
cmp
arpl
cs
out
sub
pop
xchg
pop
sub
addr16
mov
les
sahf
test
repz
add
mov
xor
jecxz
push
lods
rolb
sub
jmp
in
jns
mov
nop
add
sub
adc
pop
pushf
sub
and
jne
mov
lds
popf
inc
add
icebp
addb
mov
sub
call
mov
inc
xchg
mov
cltd
lahf
xchg
push
mov
popf
xor
mov
xchg
ds
hlt
dec
mov
push
bound
cmpsb
sti
das
mov
jne
das
arpl
mov
mov
lahf
or
and
je
mov
inc
pop
mov
in
push
pushf
fs
or
out
iret
test
mov
stos
jg
insb
lcall
mov
inc
ret
xorb
popf
les
fsts
imul
xlat
inc
sub
lret
and
add
jbe
test
out
lret
adc
push
dec
jmp
dec
inc
pusha
push
into
js
mov
cwtl
aam
xchg
dec
cmp
push
sub
stc
outsl
pop
and
dec
negl
lods
outsl
pop
inc
lea
cs
cmp
push
rcrl
sahf
sub
out
jg
pop
test
adc
cltd
xchg
in
jmp
jmp
add
push
jg
rcrb
adc
les
popa
movb
add
loop
fwait
das
ret
push
cwtl
lret
cmp
push
lahf
stos
aam
xor
xor
in
sbb
sub
test
push
sbb
mov
pop
out
int3
aaa
imul
sbb
sbb
insl
jp
fistps
push
push
popf
cmpsl
push
xchg
add
pushl
sub
imul
inc
dec
hlt
mov
jge
fidivs
orl
lcall
cmpsl
insb
or
lock
stc
mov
je
insb
cmpsl
fcomps
aas
cli
fcmovnu
scas
dec
jge
pop
xor
mov
inc
mov
fwait
xchg
repnz
lods
push
nop
inc
mov
movb
jge
push
jge
xchg
clc
lods
pushf
mov
mov
lods
mov
push
aam
rorl
dec
mov
push
mov
jne
mov
test
out
mov
mov
push
fisubl
xor
insl
mov
add
cmp
xchg
das
cmovge
mov
or
ljmp
je
rolb
mov
mov
test
dec
jne
rorl
add
cli
push
sti
aam
icebp
sti
lret
sti
mov
mov
cmc
mov
fildl
pop
mov
aam
dec
nop
icebp
mov
xchg
outsl
jb
insb
into
enter
pop
stos
mov
xchg
cmp
inc
jne
jnp
jge
push
cmp
clc
cmp
aaa
sahf
mov
cli
add
bound
lret
and
cmpsl
xlat
pushf
repnz
lret
inc
fmuls
shl
sbb
neg
inc
in
push
jbe
faddl
inc
pop
rcl
js
dec
mov
lods
imul
xchg
fucomp
push
test
mov
imul
xchg
pop
arpl
gs
cli
clts
fstps
sbb
lcall
stc
loop
insb
add
out
daa
cmpsl
loope
or
imul
negb
pop
or
cmp
mov
das
pop
dec
sbb
push
cwtl
aad
sbb
out
das
cmp
test
cli
mov
dec
dec
lea
or
shrl
repz
pop
rcrl
outsl
ficoms
add
mov
cmp
xchg
in
inc
call
pop
jg
xor
push
gs
movsb
and
into
dec
das
pop
fs
sahf
push
mov
lahf
pusha
lea
sub
test
fisttpl
mov
loop
dec
cwtl
sbb
or
shlb
mov
sub
or
and
xor
pop
cmp
ficoml
mov
gs
jns
mov
jg
fldl
inc
mov
sbb
fdivr
and
sub
lds
mov
dec
sub
add
xchg
arpl
aas
adc
xor
push
add
xchg
fcoml
inc
out
jnp
mov
aam
pop
cltd
repnz
popa
jle
xchg
sbb
or
out
lret
sbb
pop
in
inc
dec
add
jo
ja
lcall
sbb
jecxz
mov
mov
imul
stos
cmp
push
dec
adc
rorb
sub
sbb
imul
push
sbb
jge
iret
int
sbb
jmp
inc
jnp
inc
add
movsl
xchg
sub
test
dec
scas
bound
mov
xchg
cli
sub
les
movsl
outsl
in
xor
jne
xchg
ret
mov
repnz
push
or
data16
cmp
repz
pop
adc
xchg
fldt
xchg
repnz
push
sarl
insb
push
mov
fimull
test
std
sarb
jmp
jnp
pop
pusha
aas
jp
xchg
xchg
insb
pop
or
sub
pop
pop
xor
push
xchg
mov
pop
lods
pop
les
test
aaa
or
lahf
inc
jp
mov
rorb
sub
jmp
addr16
fwait
cmp
xor
cmpsl
into
cmp
shlb
pop
dec
inc
xchg
sbb
test
jg
jmp
lods
test
fs
sub
cltd
lret
aad
jb
pop
test
sub
dec
push
jno
jmp
out
sbb
lea
test
ret
sub
ljmp
call
pushf
lret
repz
in
sahf
mov
pushf
mov
aam
or
pop
mov
les
pushf
cmpsb
adc
and
shll
add
lcall
inc
mov
jp
test
and
mov
pop
mov
or
sub
jmp
pop
sbb
stc
iret
mov
mov
pusha
es
adc
rolb
fld
es
jo
xor
pop
std
sbb
pop
cmpsl
pop
bnd
frstor
shr
jg
negb
push
hlt
lods
dec
xor
pushf
icebp
mov
test
int
cwtl
scas
aad
das
mov
inc
repz
fs
dec
and
int
ror
es
dec
or
mov
mov
popa
hlt
test
mov
loope
xchg
xor
and
xchg
or
jge
and
or
sbb
stc
cltd
lret
sub
push
hlt
ss
and
pushf
cmpsb
and
insl
in
push
add
popa
insb
jns
icebp
cmc
sub
sahf
pop
fiaddl
jle
push
shll
out
fucomp
xor
inc
test
xchg
sub
clc
sbb
sbb
or
lds
pop
or
push
pop
pop
mov
jmp
stc
outsb
daa
pop
aad
loop
int3
inc
shlb
movsl
pop
loopne
jb
pop
adc
ss
daa
add
gs
add
cwtl
and
rcl
les
sub
dec
pop
dec
sbb
adc
cltd
mov
xor
outsb
adc
scas
mov
pop
cwtl
sbb
jno
fistl
fildl
mov
sub
and
scas
fdivr
pop
add
xchg
add
lods
jae
cli
and
fisttps
in
sbb
cli
loop
and
hlt
notl
lods
not
dec
into
jg
mov
add
or
cltd
sub
jb
lea
dec
push
dec
cld
outsl
pop
fxch
adc
dec
xor
dec
push
lods
push
es
mov
jae
mov
insb
xor
daa
popa
rolb
pop
in
xor
enter
and
inc
inc
notb
push
cmc
dec
or
or
xchg
in
cmp
jge
gs
pushw
mov
pop
push
mov
xchg
xorl
pop
jg
dec
loope
push
lods
fildl
add
jge
je
inc
mov
sub
loope
cli
hlt
mov
add
pop
add
das
mov
sbb
sub
jns
pop
out
push
dec
insl
inc
test
add
enter
test
test
pop
aad
cld
adc
xor
in
xchg
mov
shrl
lock
mov
jb
mov
cmp
mov
add
arpl
ds
mov
loopne
adc
stc
cmpsb
xor
test
stos
es
cmc
fcoms
inc
jne
add
sub
js
push
arpl
inc
push
pop
out
fbld
adc
out
push
movsl
outsl
shlb
dec
das
mov
or
or
shr
adc
or
cmpsl
or
xchg
sub
pop
rorb
lret
jl
outsl
pop
stc
lret
hlt
mov
inc
jns
mov
adc
mov
dec
dec
lea
push
imul
dec
mov
inc
mov
jp
pop
mov
dec
dec
fdivl
sbb
pop
scas
in
add
dec
and
clc
data16
clc
mov
push
stos
js
dec
cmpsl
ja
sub
dec
adc
sub
sub
mov
aas
mov
pop
insl
push
ret
or
lret
adc
ss
sarb
jb
in
outsl
cmp
cmc
or
call
fistps
sub
hlt
stos
xor
mov
jp
arpl
hlt
jo
push
or
mov
push
push
fs
pop
push
add
sub
and
xchg
pop
push
pop
int
xchg
data16
xchg
push
cmp
dec
mov
inc
sbb
in
ret
xchg
fcomp
lret
xchg
lods
jmp
out
mov
sbb
jecxz
sarl
ret
jnp
shlb
sub
aas
push
push
stc
rcll
dec
in
add
clc
cs
out
loope
push
xor
out
mov
xchg
push
test
sahf
sbb
mov
inc
imul
js
mov
push
mov
dec
aad
xchg
adc
push
cmpsb
jg
pop
or
rclb
jg
pop
pop
jp
loopne
xor
push
push
add
out
xchg
ljmp
jno
inc
lods
push
xchg
xchg
aaa
xchg
xor
dec
data16
sub
cmp
pop
dec
sbb
loope
call
push
addl
jnp
pop
leave
imul
dec
adc
xchg
sti
sbb
aad
xchg
inc
dec
ds
add
addr16
jae
dec
and
xor
ret
inc
cmp
je
scas
adc
sbb
xor
pop
pop
add
mov
movq
fmuls
push
fiaddl
in
mov
int
dec
call
leave
mov
or
in
jne
shrb
movsl
or
shll
out
lret
dec
pop
inc
add
imul
push
insb
mov
xor
ret
js
sarb
adc
inc
mov
leave
lock
xor
gs
xchg
jmp
xor
cmpsl
adc
scas
sbb
jg
enter
sub
adc
push
add
notb
add
sub
loop
inc
stos
jge
bound
or
jmp
mov
out
fwait
and
inc
int3
stos
inc
adc
xor
or
mov
jae
mov
ss
test
in
ja
xchg
adc
aad
rclb
push
xchg
pop
mov
testl
xor
into
mov
cmpsl
xor
adcb
push
shrb
scas
mov
fnstsw
xchg
sbb
dec
cmp
test
pop
ljmp
push
and
or
push
add
loope
pop
ret
pop
mov
arpl
roll
mov
aad
bound
fs
pop
adc
call
dec
psubusw
jecxz
mov
add
std
outsb
outsl
jbe
inc
mov
add
jmp
nop
cmp
cmp
sbb
les
cld
push
pop
mov
sbbb
ja
xchg
jbe
mov
mov
mov
rcrl
inc
fstpl
lea
lea
xchg
mov
mov
rclb
in
mov
int
lock
pop
sbb
cs
data16
sbb
movsb
mov
popa
jmp
mov
push
movsb
adc
and
sub
mov
out
add
xchg
push
sahf
pop
mov
xor
push
add
jns
ja
mov
and
cwtl
decl
lahf
sbb
jb
and
adc
mov
push
out
mov
inc
push
mov
inc
js
mov
lods
das
pop
and
jecxz
inc
jmp
mov
jno
sbb
rorb
push
clc
ja
sbb
test
pop
idivb
adc
sub
pop
or
out
cmpsb
xchg
fwait
add
in
push
mov
jl
gs
ljmp
pop
imul
add
pop
add
mov
or
cmc
sub
mov
mov
jecxz
test
fbstp
enter
bound
jae
jge
lods
push
rclb
popf
idivb
test
jno
or
jno
fsubl
mov
pop
inc
lret
repz
push
push
sahf
das
cmp
xor
pop
and
out
mov
ss
dec
pop
jecxz
mov
and
push
mov
je
test
test
aam
stos
dec
or
push
imul
cld
popa
pop
push
and
testl
adc
cmp
mov
pusha
mov
jmp
out
cmp
jg
mov
les
scas
inc
daa
stos
xor
and
inc
stos
pop
pop
mov
mov
mov
addb
and
loopne
xchg
dec
and
dec
or
mov
lret
inc
mov
inc
mov
lds
insl
iret
movsb
fmull
xchg
jl
xchg
rcr
lock
lock
shll
lds
jge
and
push
jno
xor
sbb
sbb
sbbl
adc
dec
les
and
mov
lods
nop
sbb
fildl
lea
jmp
shll
test
or
imul
pop
or
imul
push
push
sbb
pop
mov
xchg
fiadds
cmp
pop
gs
sbb
outsl
push
sub
shl
push
inc
jl
dec
mov
imul
lcall
in
lcall
cwtl
xchg
mov
stc
adc
pop
je
out
mov
cmp
loop
jmp
jle
and
bound
fidivrs
flds
dec
pop
pop
stos
ret
mov
fs
jmp
rclb
push
mov
or
mov
mov
or
shl
lods
push
arpl
or
xor
mov
adc
and
mov
pop
push
xor
subb
aam
inc
push
dec
cmpsb
fwait
pop
rcl
lock
iret
sahf
xor
push
mov
jge
imul
dec
xorl
mov
or
sbb
cmpsl
or
lds
jle
stos
inc
dec
pop
insl
dec
ud1
inc
repnz
and
add
out
mov
mov
xchg
roll
xor
mov
xchg
cmp
add
cwtl
imull
mov
or
scas
sbb
jg
in
push
movsl
jns
je
sbb
lahf
movsl
cmp
pusha
lds
push
in
pushf
cmp
idivb
das
dec
xchg
cli
sbb
mov
std
xor
jno
cmp
xchg
cmp
mov
sarb
ds
mov
loop
xorb
fldl
jae
mov
test
inc
cmpl
cld
or
fwait
cmp
loopne
jbe
scas
mov
dec
icebp
je
mov
xchg
mov
pop
pushf
dec
popf
idivb
inc
dec
scas
pop
jle
lea
jge
xchg
adc
mov
pop
imul
lods
cli
mov
loope
mov
into
loop
js
ss
call
sbb
cmp
sub
jo
out
hlt
inc
jbe
jnp
add
inc
jmp
int
adc
add
push
pop
iret
icebp
cmpsb
or
pop
fsubs
cmp
mov
inc
cmp
loope
xchg
lods
xchg
and
cltd
add
xor
xchg
push
sbbb
or
fcoml
xor
in
inc
and
fcomip
add
and
andl
cmp
adc
sbbl
test
push
int
sub
notl
inc
push
popa
cwtl
xor
ucomiss
mov
adc
add
or
sarb
loop
xchg
sbb
and
lret
aad
faddl
and
enter
adcb
or
popa
stc
jp
jl
mov
repnz
xchg
xchg
in
popf
sub
insb
inc
push
adc
gs
std
adc
rol
pushf
xchg
pop
add
mov
mov
fiadds
fwait
movsb
add
mov
mov
push
repnz
pop
jnp
loopne
scas
adc
mov
clc
xchg
xor
daa
add
mov
or
mov
enter
je
sub
lahf
xchg
xor
cli
jnp
fadds
cmp
adcb
jne
mov
push
cmp
push
mov
rol
mov
leave
jnp
aad
stos
jb
adc
sbbl
add
dec
sbb
int3
fs
xor
gs
sub
hlt
mov
sarb
int3
jl
fildll
pusha
jge
push
dec
mov
sub
fwait
xor
in
push
in
stc
rclb
adc
outsl
sahf
mov
outsb
sub
add
in
out
mov
push
notb
xlat
push
nop
dec
mov
aad
mov
fwait
sub
inc
jne
scas
inc
mov
outsb
adc
outsl
jbe
addr16
pop
adc
stos
or
leave
mov
inc
cmp
orl
pop
dec
repnz
mov
cmpsb
and
and
xchg
inc
jmp
push
dec
stc
mov
or
mov
mov
dec
mov
jmp
cmp
inc
fsubs
data16
jae
inc
and
lock
cmp
sbb
push
icebp
pop
imul
jg
daa
ss
jecxz
push
xor
pop
pop
ja
out
inc
mov
in
jle
xchg
cmp
enter
xor
stc
mov
xor
cmp
in
pusha
mov
gs
pop
pusha
lea
into
dec
mov
dec
lods
popa
fsts
dec
push
ret
stos
jb
xchg
sub
jecxz
cli
and
pop
add
ja
inc
push
rclb
xchg
into
outsl
aam
or
xchg
add
mov
jp
jg
cld
xchg
push
add
sar
mov
dec
pop
icebp
repnz
testb
mov
cmc
orb
mov
lret
insl
fidivs
inc
cwtl
jo
cmc
xor
aaa
fstl
inc
sub
dec
push
cmp
push
cmc
mov
push
xlat
mov
nop
test
jbe
jmp
push
pop
and
lret
adc
sbb
xchg
push
pop
push
jne
fwait
mov
xor
xchg
xchg
and
inc
push
enter
test
or
xor
jnp
push
dec
pop
xor
inc
sbb
mov
mov
and
loop
ja
mov
movsb
out
xor
daa
mov
fldl
xor
inc
xorb
testl
pop
scas
insb
xchg
popf
rol
cmpsl
test
mov
jl
insl
sub
push
fisttpll
xor
mov
and
mov
arpl
int3
loopne
fnstsw
aam
rcrb
jecxz
pushf
or
insl
sbb
clc
xchg
into
arpl
jae
std
data16
or
mov
sbb
xchg
xchg
popa
outsb
adc
xchg
push
and
xchg
mov
sbbb
jbe
jno
push
loop
ror
xor
mov
and
dec
mov
dec
mov
loope
lds
addr16
stos
and
add
negl
inc
push
call
test
or
repnz
test
xchg
imulb
mov
dec
addr16
push
push
cmp
jle
pop
jbe
test
jl
mov
and
mov
andl
pop
loopne
lret
pop
shrl
sub
inc
scas
push
pop
roll
leave
outsb
push
icebp
jg
cwtl
pop
ljmp
outsb
dec
xor
pop
pop
dec
loop
lods
pop
lcall
stos
xor
and
add
push
ljmp
xchg
ja
adc
mov
icebp
mov
mov
add
arpl
scas
nop
jg
out
cmp
js
inc
lahf
cwtl
pop
or
jp
pop
std
jae
xor
jno
mov
std
pop
sti
subb
adc
ljmp
arpl
push
mov
add
fisubrl
mov
jno
add
cltd
arpl
mov
stc
ss
lock
stos
jg
outsb
stos
xor
cli
movsl
sbb
jne
rcrb
outsl
and
add
stos
adc
mov
cmp
mov
or
dec
push
enter
out
dec
ljmp
ja
jle
mov
mov
jno
hlt
ljmp
jnp
fcmovbe
pop
aam
adc
lds
mov
lods
or
jecxz
jg
cmpsb
or
aam
outsl
ret
lcall
adc
js
daa
sub
mov
roll
pop
mov
or
bnd
cmp
mov
rcrb
add
mov
add
scas
fcomps
das
push
xlat
arpl
sub
test
cmpsb
pop
xchg
xchg
mov
pop
ljmp
rcrl
jbe
scas
test
pop
sub
xchg
cmc
xchg
xor
adc
push
bound
pop
enter
int
or
shl
lods
pop
shll
in
fwait
cmp
cs
inc
push
sub
sub
leave
pop
push
add
rol
xor
xor
fcomp
mov
aad
xchg
mov
and
xchg
xchg
fs
cli
xchg
fsubr
fisubs
je
cs
push
scas
addl
aad
adcl
inc
ljmp
lods
xor
mov
imul
pop
push
xchg
xor
cmp
mov
ljmp
out
lcall
pop
flds
jo
fnstsw
jmp
xchg
mov
add
push
adc
pslld
pop
mov
mov
shll
imul
stos
std
jae
outsl
mov
js,pn
ficompl
xchg
daa
jle
adc
imul
sarb
sbb
xor
popa
xor
inc
or
out
shl
sbb
je
out
cwtl
dec
outsl
or
imul
sub
std
lcall
in
pop
scas
mov
imul
lods
pop
scas
sti
inc
mov
fwait
sub
xchg
or
mov
clc
pop
dec
mov
or
cld
ret
loopne
pop
repnz
xchg
cmp
xlat
pusha
lret
cwtl
in
adc
imul
mov
orb
mov
rclb
stos
pop
test
inc
aas
cmp
mov
movsl
mov
shl
gs
testl
outsl
clc
imul
mov
mov
scas
pushf
mov
je
fwait
in
jg
add
xchg
jbe
push
rolb
lea
ret
out
inc
hlt
pop
cmpsl
push
repnz
cs
roll
and
jle
mov
xor
pop
lcall
and
inc
incb
or
mov
popf
dec
stc
js
fbstp
js
pushf
call
or
scas
pop
in
adc
popa
cld
jb
cld
dec
or
xor
mov
inc
shlb
mov
pop
lcall
pop
or
mov
fstps
or
add
cmovbe
jb
repnz
xlat
jmp
test
push
pop
out
cli
mov
pop
into
inc
jecxz
movsl
xchg
sbb
push
lcall
fwait
mov
nop
sub
and
and
push
dec
loop
push
sahf
fucomip
mov
inc
xchg
or
adc
loopne
int3
push
push
aad
mov
shlb
pop
cmpl
pusha
ffree
dec
cld
sahf
mov
sbb
cmp
or
xor
mov
nop
pop
xchg
aam
push
mov
cmc
jp
ret
imul
lods
popa
inc
xchg
mov
test
cmpsb
adc
push
out
mov
stos
dec
mov
std
outsl
test
push
push
adc
xchg
fisttps
stc
xchg
fcomp
in
pop
cmpl
jp
popa
fdivrs
pop
or
lret
hlt
or
mov
sub
std
adc
fcmovnu
pop
lea
frstor
hlt
les
mov
pusha
insl
lock
fisttpl
stos
mov
mov
insl
subl
cli
pushf
dec
and
mov
pop
mov
lea
loop
mov
mov
pop
fdiv
aas
out
or
jns
call
inc
scas
aas
add
inc
mov
sti
add
lret
xchg
inc
loop
mov
ljmp
fnstsw
xlat
mov
fldenv
xchg
arpl
adc
push
push
pop
dec
aaa
mov
push
push
addr16
stos
sub
fcmovnbe
jbe
adc
in
movsl
cmc
xor
iret
dec
stc
or
lcall
sbb
mov
mov
sbb
and
cmp
loopne
shl
push
dec
sbb
sub
push
bound
xor
lret
mov
or
rcr
stc
aas
addl
mov
andl
inc
mov
pushf
xlat
in
mov
sub
push
mov
xchg
ja
scas
out
ret
jmp
dec
add
mov
loope
dec
jle
roll
mov
cmp
sbb
in
mov
repz
push
push
xor
adc
pushf
cmp
mov
push
add
inc
jp
jbe
cmc
xor
insl
aaa
ret
jno
mov
pop
ror
test
ret
mov
out
test
jbe
jne
test
cmp
loopne
loope
movsb
xor
iret
push
pusha
mov
lahf
add
or
inc
push
test
or
mov
rolb
jp
popf
je
xchg
lds
call
loop
jne
sub
sbb
call
popf
inc
fwait
movb
aam
cmp
cmp
pop
pop
add
pop
lods
xor
inc
xchg
addb
insl
mov
and
inc
xorb
out
dec
lcall
mov
jo
pushf
pop
jno
sub
insl
fwait
setae
mov
out
scas
add
cmp
stos
pop
dec
fs
add
inc
lret
jecxz
jge
popa
ds
outsl
outsb
cmp
add
fs
lock
push
mov
ja
mov
iret
jns
rcrl
data16
fs
add
aad
mov
loop
dec
cmpsb
cmpsb
xchg
sti
movsb
inc
movb
push
jecxz
daa
mov
mov
shll
in
mov
add
in
pushw
cmpsl
stc
loope
jno
aad
mov
ret
pushf
clc
jbe
and
in
popf
insb
movsl
cmp
fwait
cmc
pushf
daa
push
dec
aaa
lret
xchg
jne
add
inc
pop
bound
dec
pop
add
popf
fists
aaa
mov
out
adc
fisubrs
jb
je
jmp
es
fldt
sub
inc
jmp
sub
dec
inc
add
sbb
mov
scas
lahf
pop
mov
lea
fsubl
aas
push
push
leave
movsb
xor
and
or
mov
aas
inc
pop
and
lahf
lods
ljmp
cmp
test
fcoms
dec
cmpsl
dec
pop
loop
enter
xchg
mov
cld
jmp
fsts
pop
int
mov
les
or
xchg
movsb
dec
in
mov
ja
aas
push
sub
cs
push
mov
imul
cmp
inc
aaa
leave
cltd
into
cmc
xor
xchg
dec
push
inc
mov
or
and
insb
mov
push
xor
mov
push
mov
mov
cwtl
mov
and
outsb
add
mov
fldcw
inc
scas
mov
ja
add
adc
gs
insl
jp
cwtl
stos
dec
xor
daa
bound
jle
lea
popf
cmp
mov
push
fs
or
xchg
out
sub
cmp
push
jl
faddp
dec
cmp
fdivr
sbb
cmpb
xchg
mov
addr16
adc
jne
mov
sbb
lods
inc
cmp
fsts
insb
cmpsb
in
rcr
repz
mov
inc
jle
or
test
movsb
adc
push
lea
sahf
int
inc
negb
mov
or
dec
sub
xchg
sbb
cmpsb
sbb
lods
ss
cli
sbb
inc
mov
cld
push
sbb
lds
test
mov
sub
cli
xchg
pop
sub
clc
push
and
stos
push
xorl
sub
mov
mov
pop
jmp
jae
fadds
cmpsl
mov
movl
leave
in
and
and
cmp
xchg
int
cmp
nop
dec
add
push
lds
insl
and
xchg
adc
mov
loope
dec
btr
sub
add
fisttpl
lods
mov
dec
pop
cmpl
icebp
push
pop
sahf
aaa
ret
outsl
pop
mov
xchg
clc
xchg
cmp
mov
gs
push
push
pop
jmp
inc
vmovapd
mov
mov
adcb
stos
jge
std
lahf
int
and
push
jno
movsb
push
mov
xchg
lods
xchg
addb
jg
adc
pop
dec
stos
and
or
cmp
imul
jp
loop
push
bound
js
cmp
adc
pop
xor
roll
mov
xchg
test
cwtl
fisttpll
dec
inc
xchg
mov
mov
mov
adc
lods
inc
jmp
pop
les
rolb
jbe
adc
int3
movb
rcr
mov
and
xlat
inc
mul
inc
mov
pop
shl
mov
dec
iret
popa
mov
sub
add
in
pop
aaa
jmp
mov
push
mov
and
test
ret
xor
adc
movsb
jae
fisubl
test
rcl
push
lods
adc
push
and
adc
call
inc
in
jb
lret
imul
mov
sbb
stc
stos
push
mov
push
cmp
movsl
jbe
push
lea
pop
lcall
fbld
push
cwtl
cmp
xor
mov
hlt
adc
lahf
mov
jl
out
pop
inc
insl
cli
push
scas
or
or
push
popa
aam
adc
test
xchg
mov
test
int3
dec
add
pop
sbb
roll
jnp
mov
or
jno
ds
fsubrl
and
push
sub
pop
xchg
int3
imul
addb
inc
pushf
test
xor
int
cmp
lock
pop
pop
dec
stos
mov
and
pusha
lea
jp
mov
stos
dec
push
and
pop
xor
in
mov
mov
add
int3
jmp
fidivrl
mov
mov
into
xchg
mov
sub
xchg
inc
push
inc
into
hlt
in
pop
mov
fucomi
loope
cmovns
mov
cs
and
mov
aas
mov
int
out
andb
and
addr16
or
insb
int
pop
add
add
pop
jl
in
jno
inc
fdivp
sbb
pop
jmp
xlat
lock
push
jne
push
dec
cwtl
push
xor
scas
pop
out
lock
es
mov
scas
cmp
pusha
push
xchg
xchg
fsubs
ss
sbb
jp
push
xor
pop
add
movl
cmp
sub
and
insl
cs
inc
xchg
jp
cwtl
sbb
mov
shll
push
add
push
push
pop
inc
test
out
int3
lea
lahf
and
mov
mov
pop
and
testl
push
jp
pop
push
xor
xchg
mov
pop
jl
xchg
out
add
aaa
sti
mov
test
push
mov
shlb
ja
pop
mov
add
pop
movsl
cmp
mov
xchg
int3
jbe
pop
out
loop
mov
push
fists
addr16
jge
xchg
cmc
icebp
not
mov
inc
ljmp
mov
lods
mov
mov
imul
xchg
shrb
xchg
adcb
fildll
ja
setl
aas
jmp
mov
sar
cmp
jmp
popf
push
or
and
loop
mov
cmp
lcall
cld
loope
pop
imul
mov
push
pop
repnz
push
test
lods
ss
cli
push
loop
dec
push
jle
insb
scas
pop
clc
lahf
sub
ja
xchg
pop
add
jne
inc
jbe
pop
and
daa
aas
popa
xchg
std
ljmp
push
int3
push
sub
inc
lret
sahf
aaa
aam
fdivs
push
repz
jecxz
pop
and
dec
out
push
or
xor
pop
std
push
ret
add
ljmp
jl
jns
mov
adc
aam
popa
mov
out
neg
in
and
xor
sub
xchg
sub
jmp
loope
mov
push
fs
mov
out
das
iret
sbb
and
jg,pn
jp
adc
rcl
jne
cmc
stc
dec
out
mov
adc
pop
lcall
popf
js
nop
and
cmp
sub
cltd
sbb
ja
not
lcall
pop
mov
inc
jne
pushf
leavew
pop
cmc
mov
stos
xor
sbb
inc
bound
adc
mov
xlat
das
in
out
jnp
lock
xchg
sti
inc
movsb
cmp
les
inc
aad
aaa
pop
adc
cmpsb
mov
push
test
int3
sub
push
add
sub
cmp
jg
sub
add
jmp
rorl
sub
cmc
addr16
add
loop
lret
hlt
nop
aas
int3
call
pusha
aas
dec
mov
pushf
fsubr
fsubs
fistpll
fidivs
and
stos
cmpsl
neg
xchg
dec
ljmp
adc
mov
jmp
les
inc
andb
mov
add
rorb
scas
add
lods
jb
lcall
scas
xchg
add
mov
mov
js
repnz
call
cmpsl
sbb
rcrl
jo
xor
daa
adc
jns
lock
pop
insl
in
mov
test
mov
fcmovnbe
mov
dec
je
daa
stos
add
mov
lods
paddsb
mov
out
in
push
mov
mov
xor
shrb
adc
dec
in
lods
stc
sbb
jo
sub
pusha
pop
xchg
std
lods
mov
jae
jbe
jge
fldcw
movsb
popa
mov
xor
push
shr
dec
int3
push
dec
sbbl
xchg
mov
nop
pop
jl
sahf
call
push
pushf
dec
das
ficompl
test
inc
in
mov
inc
push
xor
pushf
aam
arpl
idiv
les
cmp
lea
iret
test
adc
jge
inc
add
xchg
pushf
jle
rclb
cmp
push
push
ror
mov
jnp
outsl
pop
mov
mov
pop
sub
xor
xchg
in
push
data16
je
outsb
mov
adc
and
cbtw
ret
jecxz
sub
adc
mov
out
movb
mov
aas
dec
shrb
lcall
test
jecxz
sub
push
and
mov
imul
pop
mov
inc
imull
dec
cmpsb
lods
jns
mov
pop
push
jno
mov
popa
jb
mov
scas
in
mov
ret
outsl
arpl
aaa
shl
mov
imulb
lods
inc
jp
or
sub
mov
in
inc
mov
in
mov
mov
cwtl
add
mov
loope
rolb
shlb
lock
or
cli
pushf
jl
dec
hlt
sarl
mov
sarl
mov
cmpsb
popf
mov
gs
stc
adc
mov
jnp
inc
cmp
inc
or
ret
out
out
pop
ret
aam
daa
xorl
mov
aad
imul
orb
std
callw
lea
mov
dec
incl
lds
and
sti
mov
js
fildl
dec
addl
imul
push
xchg
mov
movsl
pop
lods
popf
sbb
mov
jp
adc
push
int3
sti
cmp
jmp
jno
dec
mov
out
pop
mov
fbld
sbb
js
ss
mov
movsl
cmpsl
mov
stc
mov
pop
rcll
rcrb
outsb
sub
dec
inc
jbe
leave
pop
cwtl
data16
mov
push
fs
xorb
ret
or
popa
hlt
dec
add
lea
and
jo
adc
fldt
dec
inc
jp
mov
adc
out
pop
inc
add
xor
mov
lcall
int3
adc
pop
dec
ss
and
mov
sbb
fcoms
in
sub
fcmovb
stos
aas
js
jae,pt
push
xchg
mov
push
or
aaa
adc
movsb
adc
fdivs
ficoml
and
dec
ret
xor
pop
add
cmc
insb
mov
movsl
pop
push
lret
stos
out
sbb
mov
jae
dec
fs
push
pusha
sahf
lock
lds
sub
pusha
stos
popf
mov
icebp
js
ja
mov
stos
outsb
or
inc
adc
andb
dec
ss
ja
sub
mov
test
lahf
xchg
movsb
push
test
lock
inc
les
int
pusha
imul
jns
rclb
mov
es
pop
xchg
andb
fistl
into
jle
jp
nop
mov
xor
je
and
rcll
add
dec
mov
sbb
mov
cmp
stos
sbbl
jno
cmc
hlt
pop
notb
adc
or
xchg
add
pop
push
and
mov
lods
mov
lea
jg
sbb
dec
or
dec
cld
adc
sub
decl
fildl
mov
pop
fstl
repnz
jecxz
scas
test
sbb
fucom
inc
push
xor
push
scas
or
mov
adc
rorb
inc
mov
jecxz
popf
and
push
sbb
mov
out
nop
push
jg
sub
pop
aas
lahf
xchg
pusha
out
inc
dec
add
xlat
imul
xchg
cmp
fstp
fisttpl
dec
xchg
xor
adc
jp
xchg
adc
push
ficompl
outsb
test
mov
xchg
or
sahf
int
dec
lcall
mov
daa
enter
mov
insb
dec
xchg
insb
ret
and
inc
lods
xor
dec
mov
outsl
rolb
lock
lret
out
dec
scas
ds
sbb
fdivr
mov
pop
sub
adc
repz
test
xchg
dec
repz
push
pop
fistl
daa
mov
push
rol
mov
jl
iret
and
adc
popa
xorl
or
mov
pop
inc
orb
add
leave
popa
bswap
pop
test
sar
mov
mov
popf
fsubrl
dec
test
movups
sbb
or
dec
loop
cmpsb
in
in
mov
imul
pusha
fcompl
int
push
add
cli
popl
rcll
fidivl
ret
ret
pop
stos
rorl
mov
pushf
jbe
dec
fildll
sub
jmp
test
sbb
lcall
out
mov
push
mov
and
mov
dec
jne
inc
lret
xchg
dec
shrb
fs
cltd
aas
mov
outsl
mov
adc
stc
inc
jno
push
aaa
mov
clc
cltd
dec
pusha
mov
mov
stos
xchg
jmp
sub
test
and
mov
dec
add
add
cmp
xor
cs
pop
shrb
sbb
or
popa
jp
xchg
cltd
daa
pmaxub
scas
dec
xor
xchg
addl
mov
insl
mov
mov
js
xorb
in
jge
sub
imull
cli
push
xlat
ja
mov
test
scas
lret
scas
daa
cmpsb
mov
jbe
cs
push
push
ja
pop
sub
leave
xchg
sub
push
shrl
call
push
fistpl
xchg
mov
packsswb
jne
sub
ret
in
sbb
mov
xor
push
or
ss
inc
jnp
cltd
xor
js
or
cld
push
adc
xchg
inc
std
sub
sahf
enter
cmpb
ljmp
xchg
popf
hlt
push
adc
xchg
pop
or
subl
pop
and
jns
push
add
popa
out
call
mov
lahf
sbb
xor
lods
pop
adc
mov
test
fisttpll
cmp
pop
test
sub
push
iret
loop
jl
dec
inc
mov
push
in
pop
adc
jg
dec
or
out
out
cmpsb
stc
mov
out
cmp
shrb
lea
mov
loopne
fwait
and
xchg
popf
and
stc
pop
mov
mov
jno
les
jo
test
fildll
add
xor
shll
gs
insl
push
mov
int
movsb
xchg
mov
jge
scas
lds
sahf
jmp
out
clc
outsb
je
fcom
mov
in
fucomip
sbb
lcall
xor
inc
scas
sbbl
lock
sub
mov
pop
fmulp
jae
xchg
insl
cmpsb
inc
sub
xchg
xchg
sbb
scas
ficoms
xchg
push
push
xlat
ss
loop
push
fdivs
les
loope
inc
jge
out
sub
jl
aad
addr16
sbb
or
or
int3
inc
aam
pop
jg
jmp
sub
or
add
imul
sbb
xchg
and
jne
movl
xchg
or
push
jl
pop
in
test
sub
xchg
cltd
push
scas
dec
mov
out
roll
pop
add
xor
addr16
dec
test
cmp
fucomip
push
jp
cmc
inc
jecxz
das
stos
push
inc
mov
lcallw
jno
jmp
or
dec
cmp
mov
imul
pop
stos
add
out
push
bound
testb
xchg
mov
out
sub
jp
lret
das
test
cmp
lahf
iret
fistps
xchg
out
fldcw
pop
push
stos
daa
sub
xor
mov
idivb
push
fdivrl
jno
aad
mov
lock
in
loop
xor
mov
xchg
push
sub
or
xor
cld
ss
daa
js
xchg
dec
jmp
cwtl
bound
inc
scas
sub
lock
add
fadds
pop
jp
mov
rcrb
mov
push
xchg
sub
stc
insb
jb
mov
add
sti
xor
loope
out
push
ljmp
push
cmp
iret
loopne
push
sub
sub
stc
idivb
repz
or
sahf
jbe
pop
xlat
xor
dec
cmp
mov
test
jo
push
das
out
sub
aas
pop
mov
int
xor
adc
loop
or
inc
xchg
mov
push
dec
movsb
pop
cmp
cmp
inc
stc
cmc
push
fsubrp
fnstenv
or
mov
ds
es
fildl
xorb
lods
aad
ds
cmc
cmpsb
imul
out
mov
decl
xchg
pop
dec
mov
inc
shll
and
test
sub
aaa
scas
lds
xor
lret
cmpsb
mov
sbb
xchg
pop
ret
cmp
adc
shl
mov
aaa
hlt
xor
adc
fnstcw
mov
lcall
or
fwait
loop
cli
xor
mov
or
mov
fists
push
mov
lock
cmc
std
outsb
xchg
add
loop
mov
lods
mov
dec
pop
dec
and
inc
out
push
push
mov
scas
popa
repz
dec
adc
mov
scas
iret
testb
sub
outsb
daa
jmp
dec
sti
or
cmp
jle
push
and
fisttps
ljmp
jno
loope
xchg
sahf
mov
rclb
sub
imul
sbb
adc
cld
out
mov
mov
shrb
outsl
or
pop
mov
sbbb
xchg
adc
mov
pop
stos
jg
mov
bswap
repz
ljmp
inc
fidivrs
dec
sub
repnz
roll
jb
test
loop
stos
into
int
push
dec
or
adc
or
arpl
filds
out
xchg
pop
pop
cs
xchg
sarl
pushf
inc
xchg
call
cmc
push
fldt
fnstsw
mov
test
les
xor
sub
pop
mov
xchg
gs
mov
add
mov
sbb
mov
push
cld
jp
mov
lret
popa
and
movsb
cltd
bound
lahf
inc
dec
xor
push
hlt
inc
out
aaa
or
into
shlb
cmc
imull
or
shlb
sbb
pop
dec
cld
frstor
jg
inc
xchg
pop
cmp
mov
mov
daa
adc
cmp
mov
pop
or
sbb
pop
push
jmp
and
pop
jecxz
js
inc
loop
sub
mov
ret
test
add
hlt
lock
data16
mov
out
mov
inc
fcomps
fstpt
pushf
sbb
sarl
repz
and
mov
jmp
arpl
mov
enter
icebp
int3
mov
xchg
negl
mov
lea
fsubrl
bnd
mov
test
in
pop
sbb
and
aad
adc
pushf
sbbl
and
mov
mov
sti
popa
add
mov
ret
sub
test
jns
ss
cmp
test
cmp
push
je
cli
sbb
aad
aaa
adc
leave
jb
adc
aaa
jnp
push
cmpsl
call
adc
jmp
incl
in
fcmovu
xchg
rcl
int3
inc
dec
nop
ret
outsb
cld
inc
mov
cli
xor
in
push
ja
fs
shlb
or
cmp
scas
sub
push
inc
jno
sub
out
fs
xchg
in
sbb
sub
mov
jg
and
pop
cmp
mov
outsb
ret
add
pop
add
lock
and
outsb
rorb
imul
and
jo
out
inc
ret
add
loopne
mov
xchg
inc
mov
mov
and
movsb
imul
subl
adc
adc
cmpsb
xor
into
cmc
mov
mov
pusha
test
xor
imulb
les
cmpsl
lret
mov
imul
pop
hlt
mov
push
inc
shrb
sbb
insl
shrl
out
inc
prefetcht0
cmp
mov
int3
testb
inc
lcall
adc
rolb
fs
in
lock
mov
inc
aas
hlt
xchg
stc
add
xor
lret
jb
rorl
sub
mov
test
adc
push
push
pop
mov
dec
test
bound
lret
push
xchg
xchg
dec
xlat
or
lds
lret
push
xor
shll
in
cmp
shrl
repnz
cmp
mov
test
sub
shlb
fwait
pop
bound
sub
test
sub
jg
jge
sub
adc
cmp
mov
inc
mov
out
orl
or
and
popf
and
fsubrs
scas
inc
ret
push
ds
ss
cmpsl
insl
fcomps
pop
std
xor
mov
stos
insb
ds
imul
cmp
xor
nop
dec
mov
mov
das
dec
xchg
cmp
aaa
leave
sar
int
int
popa
pop
push
push
fcomip
stos
cmp
negl
sarb
shrb
aas
pop
movsl
cld
or
mov
sarb
dec
add
mov
andb
xor
int
inc
repnz
push
lock
mov
push
cs
jbe
aas
mov
xor
fwait
shr
leave
test
add
jo
mulb
xchg
sub
mov
add
adc
add
add
and
mov
push
fs
xor
lock
stos
xor
and
push
push
mov
in
or
or
sub
shlb
jbe
inc
mov
ret
aaa
sub
in
sti
lcall
sbb
cmp
push
nop
cmpsb
dec
sub
inc
sbb
jbe
outsl
mov
pop
inc
pushf
fidivrs
adc
pop
dec
inc
daa
and
add
and
adc
cmp
repnz
cltd
and
inc
js
sbb
xchg
mov
addb
out
mov
sub
stos
ret
mov
cs
inc
add
bound
push
insl
ljmp
sbb
cmp
lret
push
pushf
pop
ss
in
xor
cmp
mov
add
dec
fcom
lea
mov
data16
push
jle
aad
cwtl
pop
xchg
jp
adc
insl
cmp
jns
in
arpl
clc
sub
ss
cmc
aam
into
test
mov
lds
ds
stos
mov
sub
mov
popa
popf
add
cli
push
mov
in
add
rcrl
cmp
clc
rcrb
and
mov
add
push
aam
fnstenv
sub
scas
cmp
and
popf
push
xchg
and
mov
xchg
lcall
mov
es
dec
fwait
pop
mov
mov
aam
and
hlt
mov
pusha
jae
add
or
popf
mov
notl
das
lret
pop
aad
push
jb
jnp
push
frstor
adc
loop
gs
mov
dec
mov
mov
loope
push
movsb
jmp
inc
fwait
shr
inc
lock
call
mov
lahf
sbb
cmp
inc
test
sub
les
sub
dec
cmp
sarb
outsl
sub
dec
or
inc
xchg
jbe
mov
pusha
ficoml
int
test
sbb
add
movsb
or
jl
push
pop
push
adc
or
sbb
in
inc
dec
push
mov
mov
and
imul
fcmovnu
dec
enter
aaa
push
aam
arpl
pop
mov
dec
je
int
and
push
mov
stos
popa
lret
xchg
ja
sbb
aas
clc
sbb
add
jne
mov
mov
adc
aad
rorl
add
addl
mov
insb
xorl
cmp
mov
and
sbb
adc
dec
jno,pt
cltd
loop
repnz
adc
lcall
mov
mov
rolb
insl
xchg
sbb
push
enter
sub
push
fiadds
add
pusha
sub
lods
pop
test
jbe
push
mov
xchg
es
scas
mov
je
sub
jns
push
sub
jb
movq
in
fwait
icebp
or
pop
jge
mov
and
mov
dec
lods
bound
sarl
or
sub
pusha
pop
mov
int
xor
pusha
pusha
sbb
and
nop
daa
ror
dec
sbb
mov
aaa
mov
fistps
addl
cmp
popf
enter
cltd
xlat
dec
sbb
lcall
mov
xor
push
lods
fwait
pop
repz
pusha
pop
sub
xor
sbb
or
popf
loopne
aad
xchg
sbb
enter
pop
in
imul
pop
test
push
or
mov
lods
fidivs
cli
mov
push
and
shrb
insb
cmp
sub
scas
mov
ret
xchg
inc
and
fistl
xor
cli
sub
fsubp
rclb
sbb
mov
stos
inc
lcall
aam
jnp
mov
mov
repnz
out
lcall
mov
or
add
xor
scas
jbe
xchg
fisttps
ss
lret
and
mov
aas
jno
into
xchg
or
aad
pop
mov
xchg
mov
test
aas
sbb
jmp
add
push
icebp
popf
fsubrp
cmc
pop
inc
aam
out
lods
fs
in
xchg
push
mov
jg
sub
sahf
adc
xor
mov
pop
cld
leave
xlat
pop
stos
cld
jle
jno
lds
push
mov
or
and
test
repnz
add
and
rclb
cs
ljmp
inc
je
adc
loop
leave
cmpsl
in
jne
lahf
mov
rcr
mov
mov
mov
adc
mov
scas
push
mov
addr16
repnz
xchg
mov
loop
loopne
test
jns
push
cmp
decb
mov
push
and
ret
mov
pop
push
out
or
stos
bound
or
pushf
mov
mov
pop
jg
into
push
ret
leave
inc
cmpb
in
jp
push
sub
mov
icebp
fists
loope
fwait
add
inc
cmc
pusha
aad
push
js
sbb
sbb
hlt
mov
popa
xchg
inc
mov
stos
andb
cmp
aas
in
in
push
sub
xchg
fsubrs
inc
jae
flds
movsb
or
scas
push
lret
repnz
push
pushf
cli
lret
lret
sahf
repnz
jecxz
sub
push
les
cli
aaa
sub
arpl
idivl
lcall
cmp
jl
pop
repz
sbb
sub
xor
inc
cmp
popf
or
es
test
adc
leave
xorl
pop
inc
lahf
or
pop
lret
or
mov
dec
leave
mov
loop
rcll
pop
mov
mov
rolb
xchg
popf
jns
pushf
adc
xchg
mov
andl
sbb
test
movsl
mov
stos
jl
mov
mov
jo
push
in
fwait
sub
or
rcrb
imul
and
sub
stos
adc
mov
aas
rcll
xchg
cmp
shl
sti
add
out
in
sbb
fsubrs
mov
adc
repnz
pop
pusha
lods
mov
cwtl
cld
fsubrl
push
jae
pause
cltd
hlt
adc
in
sbb
aad
iret
jmp
icebp
out
out
ja
sbb
popa
or
lods
inc
es
cmp
xchg
push
lret
sbb
pop
cmp
mov
and
testl
and
xchg
je
in
nop
mov
andl
aas
comiss
xor
add
adc
arpl
cld
sbb
pop
xor
dec
xor
loope
xor
inc
mov
inc
subb
adc
push
cmpsb
ret
loop
scas
mov
lret
xchg
pop
mov
cmc
int3
shlb
out
mov
js
jae
dec
xor
pop
ljmp
xlat
and
pop
popf
in
sub
push
ffree
inc
xchg
sub
dec
fxsave
jno
sub
ss
lret
cltd
mov
out
mov
mov
push
cmp
xor
popf
std
in
inc
cs
fbld
out
pop
inc
stos
add
outsb
xchg
mov
faddp
dec
jg
arpl
into
mov
xchg
ret
push
les
mov
xchg
lock
mov
scas
mov
aaa
pop
dec
loopne
daa
or
test
popa
or
cmpsb
pop
pop
jo
btr
repnz
pop
push
cmpsl
push
push
mov
xchg
pop
mov
and
push
pop
addb
aaa
add
mov
push
fs
lahf
out
mov
jne
adc
les
ss
add
mov
dec
xchg
and
adc
das
loope
ficoms
xor
xor
pop
dec
adc
ret
scas
jno
sbb
test
or
mov
cmpsb
xchg
push
rolb
lret
dec
adc
rclb
jg
jb
out
and
jno
loop
xchg
inc
lods
ror
es
pushf
jb
les
push
jl
jge
push
xor
pop
dec
push
ja
lock
bound
imul
jmp
mov
rclb
out
mov
imul
aaa
stc
or
and
cld
lret
nop
xlat
test
xorl
test
clc
or
mov
dec
insl
xor
jecxz
and
sarb
out
mov
scas
push
add
jb
out
lods
jge
mov
sub
or
stos
mov
fld
loopne
psllw
push
aas
jnp,pn
pop
xlat
push
push
xor
mov
pop
repz
cwtl
ljmp
add
call
enter
rorb
negb
popf
nop
xchg
ret
stos
lds
lcall
jb
out
std
lock
pop
pusha
fistl
out
mov
cmp
jle
and
lcall
inc
inc
lds
rolb
into
add
call
adc
addr16
idivl
jbe
mov
jns
jmp
add
and
in
in
ror
mov
cmpb
jmp
gs
jbe
outsb
xor
mov
cld
sbb
inc
push
mov
sbb
adc
insl
jae
dec
xor
out
dec
add
cmc
aam
add
mov
mov
add
out
inc
pop
stc
jb
lahf
out
sbb
test
push
outsb
lods
ja
mov
in
mov
and
pushl
sub
xor
and
xchg
xchg
sub
stos
xchg
subl
bound
or
inc
out
out
testl
push
or
out
loop
pop
xchg
adc
adcb
push
lcall
loopne
jae
mov
scas
aaa
add
mov
adc
out
addr16
js
add
adc
sbb
dec
and
mov
outsb
inc
imul
shl
adc
mov
add
inc
mov
pushf
bound
xor
xor
mulb
gs
mov
sbbb
add
test
push
mov
mov
lock
pushf
pop
jl
xorb
aam
sbb
or
ret
lea
cmpsl
dec
arpl
aaa
jnp
sbb
inc
and
dec
sbb
xor
repnz
jle
pop
mov
mov
bound
cli
fdivrs
clc
sti
mov
ja
pop
jo
cli
push
push
jns
jp
je
push
and
add
psraw
or
sub
xchg
lcall
test
arpl
sahf
xor
sbb
sbb
jl
repnz
dec
jl
andb
mov
lods
inc
fwait
mov
mov
jmp
pop
or
adc
adc
cmp
add
rclb
das
stos
cmp
orb
mov
xor
or
cld
jns
add
imul
dec
jo
mov
sub
or
mov
lret
push
add
xor
das
cmp
or
lea
in
inc
mov
cmp
inc
subl
popa
movswl
push
scas
leave
or
rcrb
mov
movsl
sub
out
push
insb
jmp
xor
xchg
push
ret
jg
xchg
shrb
mov
mov
and
pop
jae
icebp
ljmp
inc
sti
or
inc
popf
dec
xor
mov
nop
shll
lods
je
nop
or
repnz
hlt
pop
fsubrl
enter
mov
xchg
sahf
push
fisttps
add
test
mov
sub
inc
dec
push
pusha
sbb
inc
cmp
mov
jnp
cmp
test
and
mov
leave
in
xorb
loop
add
icebp
mov
add
jb
pop
insl
cmpsb
icebp
es
jae
mov
fdivrl
add
mov
aad
jl
push
adc
es
sub
hlt
testb
pop
adc
add
sub
es
sar
xchg
jo
lock
popa
in
inc
aam
mov
add
sbb
cmp
stos
in
imul
mov
push
inc
nop
aad
cwtl
xor
pusha
rolb
jo
or
es
inc
or
call
cmpsl
mov
das
pop
sub
add
cli
sbbl
pop
mov
pop
clc
stos
sub
notl
jb
xor
and
add
stos
sub
fldln2
in
fstpl
push
les
js
ja
adc
mov
arpl
dec
add
push
mov
mov
and
movsb
pop
push
movsb
shl
push
test
popf
aam
push
cwtl
dec
fs
jne
outsb
fdivrs
insb
mov
xor
stos
mov
inc
mov
xor
push
js
shll
jecxz
call
test
insb
adc
and
frstor
mov
popf
movsl
fs
push
cmp
dec
jg
sbb
add
into
pop
xor
xchg
arpl
xchg
jbe
pop
dec
clc
adc
inc
dec
dec
enter
leave
add
mov
rclb
pop
cs
arpl
loope
int3
jl
pop
and
ds
test
icebp
lret
inc
mov
pop
ljmp
in
scas
shll
pop
sub
inc
pop
sub
repnz
imul
popf
cltd
mov
inc
and
jge
inc
jp
pop
push
in
or
cmp
lea
mov
dec
and
jp
mov
push
cmpsb
cli
mov
push
push
jo
xor
sbb
pop
sbbl
fadd
mov
mov
dec
nopl
dec
ret
xchg
xchg
in
pop
mov
push
movsb
aaa
arpl
jmp
jg
and
sbb
insb
xchg
shr
ds
movsl
test
cmp
and
push
xor
sarl
jl
cld
adc
mov
push
inc
jno
sub
xlat
cltd
dec
insb
push
xchg
icebp
pop
ss
loope
cmp
xor
in
int
pop
dec
cmpsb
cltd
mov
adc
jb
dec
daa
int3
mov
adc
sub
mov
flds
sub
mov
fsubr
sbb
shr
insl
dec
popf
or
sbb
fimull
lods
popa
pop
xchg
lock
add
jp
sbb
pop
int3
dec
into
ds
movsb
lret
fsubs
sahf
inc
cmp
ret
sbb
ds
lahf
icebp
scas
addr16
das
dec
cmc
lahf
repnz
lret
mov
or
jecxz
fldenv
insl
fldt
je
addl
mov
test
std
mov
pop
imulb
push
add
xor
adc
into
lds
and
or
sub
jecxz
mov
pop
adc
xor
clc
arpl
cmpsl
mov
adc
mov
ljmp
or
pop
mov
in
dec
dec
push
or
notl
adc
scas
test
sub
lods
xor
jae
inc
je
push
ret
mov
nop
push
inc
incl
es
enter
xchg
gs
cmc
sub
add
sub
push
fisttpll
popa
in
push
popa
lds
pop
je
mov
xchg
dec
icebp
or
std
adc
sbb
jle
dec
ja
shll
in
adc
lods
ljmp
lock
cmc
jae
xchg
push
pop
ret
cltd
jle
cs
sub
addr16
daa
aam
repnz
xor
arpl
sbb
cwtl
mov
mov
jl
jne
pop
lcall
or
mov
and
sti
sti
loopne
push
test
dec
mov
jl
sahf
out
int3
jp
xchg
jge
lock
lock
fld
imul
sub
sahf
add
shll
pop
cld
add
aas
xchg
xchg
icebp
fpatan
add
pop
stc
xchg
imul
pop
jle
ljmp
jnp
mov
insb
jmp
mov
popa
clc
pop
pop
mov
push
mov
mov
les
push
in
push
pusha
iret
pop
dec
inc
pop
mov
insl
imul
shll
and
lea
mov
jns
movl
testl
pop
mov
mov
lret
push
fsub
sub
pop
jmp
inc
dec
aad
call
aaa
mov
mov
mov
mov
pop
xor
hlt
cmc
outsb
push
fmuls
loope
adc
pop
push
imul
je
fistps
sbb
in
mov
lcall
jnp
or
ffree
testb
dec
in
ss
shl
repnz
out
push
orb
or
stos
ret
cmp
mov
jb
push
xor
sub
adc
and
cmp
pop
mov
pop
les
repz
push
pop
mov
inc
push
pop
pushf
daa
adc
ds
hlt
fimuls
jbe
push
adc
xchg
outsb
aaa
aad
in
mov
mov
xor
cwtl
es
dec
rorb
push
xor
sub
mov
jmp
sti
lahf
pop
stc
shlb
fwait
jbe
out
loop
pop
sub
mov
sub
scas
imul
hlt
push
lds
scas
stos
mov
imul
or
cmp
xchg
or
addb
pushf
lret
stos
sar
nop
mov
mov
inc
test
insl
fcmovne
or
insb
push
mov
or
popf
add
enter
mov
cmp
push
lds
aam
ljmp
loop
push
and
stos
cli
ljmp
sub
mov
jp
iret
jg
cmp
nop
daa
cmpsb
mov
inc
sub
scas
ljmp
sahf
xor
cltd
hlt
push
mov
js
ss
jmp
inc
push
push
fsubrl
stos
adc
sahf
push
adc
shlb
pop
aaa
jg
es
push
shr
hlt
or
movsb
xor
mov
jg
arpl
fs
ret
cltd
fs
pop
ljmp
ds
int3
sti
fcomps
movsl
mov
lea
pusha
dec
inc
call
and
scas
mov
cmp
lods
scas
lds
xchg
ret
cmc
xor
out
jne
fwait
jns
ljmp
imul
sbb
aas
cmp
pop
mov
add
repz
imul
lods
dec
lds
inc
int
push
nop
xchg
xchg
call
push
ss
sar
xorb
out
inc
dec
mov
push
inc
je
jle
xchg
decb
push
cmp
mov
mov
cmp
clc
add
jne
movsb
hlt
xchg
pop
test
fistl
enter
pop
xor
loop
push
test
add
cs
xchg
daa
xor
xor
mov
pushf
mov
pop
mov
or
insl
div
popf
mov
pop
outsb
mov
fs
xor
ljmp
jle
scas
xor
in
jb
cmc
cltd
inc
in
cmp
ljmp
daa
imul
pop
mov
sbb
dec
lahf
add
mov
xchg
int
pop
ljmp
dec
pop
push
pushf
loope
popa
add
lret
ljmp
lahf
daa
in
xchg
push
decl
cwtl
sbb
dec
cmpsl
outsl
sub
je
in
cs
ljmp
xchg
out
cmpsb
negb
test
sub
jnp
cmpsl
jns
mov
mov
cmpsb
xor
cmp
pop
mov
sbb
sub
lahf
lret
xchg
fcmovnb
mov
rclb
clc
mov
mov
push
cli
cli
inc
dec
out
push
pusha
mov
xchg
std
cli
pop
jns
add
pop
push
xchg
std
jmp
sbb
pop
pop
leave
mov
xor
push
and
ficompl
xor
inc
out
cmp
loope
pop
aad
pop
call
jge
out
movsb
mov
aas
dec
pop
daa
push
dec
mov
adc
mov
loop
ljmp
out
imull
sarb
push
dec
mov
out
mov
stos
add
add
mov
incl
pop
stc
sub
fld
inc
adc
push
cwtl
push
ja
int3
xlat
jge
cmp
outsb
xor
add
aad
orb
push
mov
loope
dec
cmp
fs
adc
mov
adc
or
shr
xor
fistpl
addr16
ret
sub
pop
jne
and
ja
push
int3
push
xchg
aaa
cld
pop
jae
xchg
std
jne
cmp
sahf
cmp
lods
jmp
sub
sub
aas
cmp
cmp
mov
faddl
mov
ja
mov
movsl
sbb
sarb
push
ret
call
subl
mov
cmpsl
fstps
in
movsb
je
bound
rcrl
lahf
shlb
sub
addr16
fwait
xor
lods
rcll
mov
add
mov
cmpsb
mov
bound
dec
xor
nop
les
dec
inc
sbb
mov
adc
xchg
cmp
inc
jae
lret
lcall
test
sti
mov
insl
lahf
shrl
sahf
push
sbbl
cmc
rcll
stos
and
and
mov
inc
mov
fldcw
cmpsl
jno
xchg
adc
mov
cltd
jp
stc
gs
cmpsb
and
xchg
aam
jge
ljmp
in
cmp
scas
sub
pop
adc
push
cmpsl
aad
xor
das
aas
cs
repz
mov
add
sbb
test
push
shlb
mov
lds
xor
int
xchg
mov
cmp
sti
mov
push
outsl
ss
in
ljmp
cmp
daa
jb
dec
aaa
xor
stos
dec
repnz
xor
rcr
rorl
push
mov
popf
xchg
xor
dec
out
popa
mov
bound
push
push
sbb
and
mov
out
cli
outsb
out
xor
mov
push
imul
cli
fldcw
adc
and
and
sbb
in
test
mov
add
pop
test
mov
std
push
sub
aaa
insb
xchg
push
insl
pop
push
push
ss
pop
std
pop
pop
cltd
mov
in
ss
xlat
lret
hlt
push
jae
out
clc
jle
sbb
fidivs
ljmp
or
imul
adc
lahf
mov
pop
inc
jle
cmp
fisubl
cli
push
jb
in
mov
lcall
lods
sbb
mov
loope
call
imul
ficomps
adc
push
mov
push
mov
cmpb
add
pop
xchg
mov
pop
cwtl
negb
xor
push
mov
dec
xchg
sub
cmp
fnsave
or
popf
je
mov
add
lods
imul
ffree
inc
out
xchg
add
mov
pushf
xchg
jb
xchg
dec
push
xor
mov
adc
mov
cmp
stos
cmpb
test
inc
push
fcompl
adc
pop
push
das
pop
push
or
out
push
jb
pop
and
jp
leave
popa
push
mov
cs
push
xorl
xor
aad
mov
mov
loopne
mov
jbe
push
pop
inc
cmpsb
mov
fwait
sarb
or
call
fwait
cs
loopne
jb
test
inc
pushf
push
mov
adc
pop
push
sub
or
adc
mov
pop
jecxz
call
inc
xor
fidivl
mov
pop
mov
and
xchg
movsb
sbb
idiv
and
insl
test
int3
aaa
add
cld
xchg
lods
mov
mov
lods
pop
or
xchg
or
mov
mov
pop
xchg
ss
mov
push
cwtl
jle
popa
mov
insl
xchg
cmp
mov
push
dec
mov
jae
inc
js
push
inc
pop
sbbl
cld
jecxz
mov
scas
mov
into
mov
and
aaa
and
nop
es
push
and
iret
mov
push
jae
rcll
mov
pop
subb
sub
in
xchg
inc
dec
mov
stos
iret
out
jns
out
mov
movsb
fs
inc
inc
mov
movsb
push
test
out
sarl
cmpsl
add
adc
jle
popf
add
jge
and
add
arpl
popa
adc
lock
fidivrs
scas
mov
movsl
or
jne
sub
sahf
subb
adc
vmaxps
and
push
subl
imul
inc
dec
mov
aam
adc
pop
xor
lds
pop
mov
add
fldcw
push
pushf
adc
popl
sbb
jle
pop
jle
pushf
or
xor
xchg
sub
nop
adc
movsb
pop
or
repz
repnz
or
das
cld
fmul
push
adc
mov
xor
mov
je
push
dec
push
cs
notl
ds
sub
jnp
test
imul
push
xor
movsl
cmpsl
xor
ret
mov
filds
insl
imul
cwtl
bound
movsb
das
ljmp
repz
inc
adc
adc
or
rorb
test
cwtl
aaa
outsl
sbb
mov
fsubrs
pop
mov
push
adc
iret
mov
repz
loope
loop
jl
pushf
fcmovnu
int
inc
movsl
xchg
jns
xor
pop
xchg
jne
loop
pop
jg
xor
push
add
sub
cmp
shlb
clc
addr16
aam
inc
cmp
dec
cmp
pop
pop
icebp
mov
lea
jl
dec
xorl
adc
xor
rolb
sar
pusha
pusha
pop
and
or
mov
jmp
fucom
xchg
arpl
xor
fnstsw
and
jecxz
and
jle
and
adc
sub
push
data16
shr
cli
sub
inc
movsb
cmp
repnz
ja
dec
push
mov
xchg
xchg
mov
xor
ja
mov
push
test
or
loop
or
inc
push
mov
add
xor
iret
push
cmp
jb
sahf
pop
stos
or
rol
les
imul
jle
xor
pushf
adc
iret
pushf
xchg
repz
and
push
dec
inc
adc
xlat
stos
mov
pop
xchg
rorl
arpl
std
mov
mov
jno
les
mov
movsb
push
out
xchg
loopne
jecxz
mov
fs
mov
lret
lret
jp
push
loope
ds
ficoml
mov
movsl
lods
jmp
dec
jp
mov
adc
add
mov
xchg
call
mov
inc
jl
enter
and
xor
test
push
lock
inc
test
sti
push
jl
fnstenv
cwtl
in
push
insl
int
rorl
in
dec
loopne
hlt
daa
mov
in
mov
mov
ja
pop
push
mov
loope
shll
shrl
out
daa
xchg
mov
iret
std
adc
dec
repnz
pusha
push
jmp
outsl
sub
dec
xchg
pop
pop
cmpsl
adc
dec
jnp
loop
mov
push
add
sbb
inc
mov
dec
push
inc
or
xchg
sbbb
ret
fstp
ret
sti
sub
pop
mov
mov
cmpsl
and
ds
cltd
adcb
inc
push
push
lret
icebp
fsub
test
fisubl
call
loope
jae
sbb
jmp
stc
inc
out
mov
mov
cmpsl
movsb
mov
decl
mov
jnp
divl
jg
fdiv
xchg
dec
enter
cmpsb
pop
xchg
mov
sub
hlt
flds
lahf
inc
push
push
cmp
mov
call
or
inc
push
insl
xlat
les
shrl
jbe
xor
outsb
ss
sub
fidivrl
sbb
stos
xorl
adc
ja
push
jnp
dec
push
pop
ds
dec
and
mov
dec
push
lods
out
arpl
sbb
test
push
mov
jbe
mov
aad
call
test
stos
push
push
xor
and
in
mov
fwait
gs
sub
in
and
das
fimull
mov
loop
xor
xor
mov
cmpsb
test
mov
sbb
push
mov
mov
cmp
mov
and
xchg
pop
xor
cli
aaa
dec
sarl
mov
push
inc
fnstenv
pop
inc
mov
sbb
stos
xorb
or
ljmp
inc
xchg
stos
jae
popa
and
or
fcmovnb
call
and
std
popf
pop
test
or
xor
test
mov
ret
jge
imulb
popl
add
pop
test
outsl
dec
dec
xchg
ljmp
fsubs
adc
es
dec
sub
xor
pop
xorb
mov
adc
arpl
jne
xchg
addr16
sti
je
xchg
nop
mov
or
into
shlb
cmpsb
dec
fwait
xchg
xor
pop
pop
pushl
addr16
xchg
push
dec
call
in
loop
or
rcrb
addl
nop
fists
pushf
mov
test
and
sub
lcall
jge
fisubrl
cmp
mov
imul
mov
jo
lock
fcmovnu
mov
ss
int
shll
add
in
jg
xor
in
add
insl
int3
mov
imul
f2xm1
push
push
jbe
pop
sbbl
push
jbe
xlat
push
xor
popf
xchg
cmp
add
stc
sbb
imul
adc
out
or
cmc
sbb
sti
inc
stos
mov
movsb
add
push
out
ljmp
fcompl
outsl
icebp
jbe
data16
cmp
stc
stos
test
lods
pop
xchg
pop
xor
add
repnz
bound
imul
sub
mov
cmp
jb
lret
int
nop
cs
adc
out
sbb
or
ja
and
daa
mov
jmp
add
inc
xchg
lds
cmp
fiadds
cltd
rcrl
dec
outsb
mov
repz
pop
push
mov
aad
push
jg
lods
inc
add
cmp
stos
cmp
jbe
cmp
fsubrs
movsl
jmp
jl
jmp
inc
mov
movsl
fadd
adc
cmp
jno
repnz
je
and
test
in
adcl
xchg
push
sbb
pop
inc
das
xchg
pushf
jmp
ret
imul
sbb
add
enter
and
and
std
aam
push
clc
sbb
inc
sahf
jge
push
and
pop
les
aaa
aam
sub
sbb
stc
mov
popa
clc
jnp
clc
inc
mov
loope
sbb
rorl
cmpsb
xor
xor
out
aas
scas
movsb
les
daa
test
cmp
sbb
stc
dec
xor
es
divb
sub
adc
jge
add
inc
lods
fstpt
pop
fdivl
leave
dec
mov
cwtl
pop
outsb
lods
test
in
je
and
push
imul
fmuls
mov
push
fs
cltd
cmc
not
xlat
lahf
xor
in
mov
mov
sbb
cmp
hlt
xor
cmp
push
dec
pushf
in
rclb
scas
fnstcw
lret
out
jmp
mov
push
sub
pop
pusha
adc
out
cltd
mov
fmul
xchg
lds
leave
sub
fnsave
cli
outsl
repz
mov
dec
je
stos
dec
dec
out
movsl
mov
xchg
arpl
mov
mov
pop
or
and
sub
jns
adc
jp
push
add
iret
int3
push
dec
mov
xlat
or
ljmp
movsb
fs
cmp
pop
xor
jecxz
or
dec
movsb
rorl
cltd
add
sub
outsb
xorl
repnz
fdivp
xchg
sub
rclb
sbb
cld
push
iret
inc
enter
mov
xchg
hlt
cmp
aas
adc
mov
movsb
mov
add
stc
pop
or
fnstenv
jb
and
bound
shrl
adc
adc
xchg
shrl
dec
push
jecxz
mov
inc
ss
aaa
ret
mov
jns
jne
xchg
xor
roll
cmp
rcll
mov
in
adc
rcrb
negl
jno
unpckhps
pusha
jl
enter
push
stos
cmpsl
call
push
cmpsl
lcall
popa
scas
inc
pop
pop
mov
mov
test
nop
leave
mov
and
sbb
sbb
mov
adc
cwtl
mov
inc
pop
loop
inc
mov
cmp
add
pop
je
rorl
sbbl
adc
inc
loope
ficoml
xchg
jo
iret
mov
test
pusha
int
xor
ds
stos
jge
mov
cmp
pop
js
cltd
inc
or
xchg
adcb
and
out
xchg
ja
inc
test
rcrb
pusha
xor
and
push
in
mov
fdivl
cmpsb
pop
mov
ds
mov
mov
mov
lds
repz
dec
cld
in
push
and
mov
test
jmp
mov
inc
mov
aaa
gs
cmp
out
cltd
jae
scas
psllw
jmp
bndstx
cltd
or
mov
pop
adc
fwait
aam
punpckhdq
inc
and
ljmp
dec
mov
sbb
es
and
jg
jmp
inc
scas
jl
loop
pop
or
mov
xor
gs
pop
inc
stos
jns
jae
mov
bound
mov
mov
subb
jae
jl
mov
xchg
mov
jb
sub
mov
call
js
sbb
ret
sbb
sub
scas
dec
cmp
int3
inc
mov
push
fld
jnp
xchg
xor
xor
outsb
add
mov
pop
pop
shlb
xchg
cmpsl
movsb
rcr
or
cmpsb
sbb
shll
mov
daa
mov
aad
insb
xchg
dec
mov
add
fldenv
outsb
mov
mov
xor
jp
pop
rorb
cmp
outsl
dec
sbb
les
and
and
lcall
add
in
jae
xchg
push
and
loop
or
inc
outsb
cmpps
clc
inc
out
xchg
dec
pop
pop
cltd
or
mov
js
sub
stos
mov
sbb
fs
and
in
repz
push
outsb
lcall
lahf
cli
test
ficoml
xlat
ss
xor
dec
test
dec
lret
push
rcl
sub
sbb
popf
mov
inc
adc
add
xchg
cmp
xchg
aam
repnz
cld
fistpl
or
std
mov
pop
mov
mov
pop
popl
dec
pop
jecxz
in
pop
lods
sub
and
test
lods
add
into
stos
lods
mov
jno
cwtl
mov
add
shlb
xor
mov
ror
ja
cmpsl
scas
inc
dec
mov
or
mov
test
stos
in
fs
jle
sbb
cmp
mov
std
out
mov
mov
push
daa
fnstenv
sub
push
jnp
fcmovb
rolb
jae
es
inc
push
sbb
fsubrl
lcall
add
flds
popa
les
pop
dec
gs
insl
scas
shl
sbb
mov
test
rorb
mov
adc
sahf
rcl
mov
int3
sbb
mov
mov
lds
sarl
std
cmp
jnp
push
push
mov
push
rcrl
and
repz
sub
ja
push
loope
inc
daa
cmp
rorb
movsl
inc
jns
push
mov
fldcw
out
jl
or
pop
sbb
adc
sbb
iret
fmull
test
shlb
jno
rcrb
iret
pop
xor
ljmp
mov
test
push
and
adc
lea
fs
arpl
lock
add
pop
clc
arpl
gs
dec
movl
in
sti
rcrb
pop
inc
mov
mov
mov
jb
push
push
repnz
insl
subl
fldt
cmp
mov
das
cmp
mov
pop
imul
mov
push
das
outsb
jbe
or
gs
call
icebp
loopne
pop
ja
lods
jb
inc
xchg
sub
mov
cmp
addr16
sub
stos
mov
out
test
xor
lods
add
pop
sbb
subl
or
sub
notl
fistps
lods
jmp
hlt
push
mov
cmpsb
stos
lcall
arpl
into
lods
out
inc
mov
das
iret
jnp
and
shrb
cmp
out
sub
pop
adc
ja
mov
seta
scas
push
xor
lahf
shrb
rolb
fsubrs
push
push
jl
imul
es
lea
push
dec
pop
das
jno
and
inc
sbb
js
fidivl
dec
xchg
xchg
add
push
data16
scas
mov
popa
mov
push
aam
notl
stos
cmp
sbb
aas
mov
idiv
sbb
inc
fs
jno
leave
test
jnp
mov
xchg
mov
or
lods
mov
loopne
lcall
xor
xchg
mov
iret
fdivr
pusha
cmp
push
shlb
push
scas
mov
mov
mov
jle
push
fdivrl
mov
xchg
lret
push
pusha
push
out
lds
dec
dec
pop
mov
push
cmp
movlps
and
jl
stos
cmp
shll
fsubp
enter
jns
inc
test
sarb
aaa
fadd
xchg
sbb
std
sbb
cli
pushw
incl
cli
mov
bound
xchg
int3
imul
popf
out
mul
enter
adc
add
aas
daa
dec
ds
adc
pushf
andl
insl
in
inc
sbb
and
or
pop
cld
adcb
adc
out
out
gs
int3
in
mov
popf
add
inc
shll
xchg
in
sub
dec
jb
in
out
sub
movb
popa
fnsave
push
loop
push
push
rcrl
fbstp
xchg
cmpsb
fbld
inc
adc
dec
push
fbld
mov
in
loop
testb
xchg
pop
mov
clc
int
cmpsl
jbe,pt
push
mov
add
popf
in
ficoml
test
dec
wbinvd
cmc
lret
leave
ja
inc
cmp
jns
nop
lock
cmpsl
pop
addr16
addr16
pop
adc
mov
cwtl
rcr
sbb
jg
fcompl
addl
flds
inc
add
roll
mov
in
daa
sahf
mov
pushf
sub
push
movsb
cmpb
sub
mov
orl
pushf
ficoms
rcrb
push
inc
cmp
aad
pop
mov
aad
in
mov
sub
push
sub
or
aas
cmc
adc
shrb
xchg
push
rorl
dec
jge
xor
xor
sub
xor
addr16
jbe
pop
out
fs
or
fxch
pop
roll
sti
add
xchg
push
call
sbb
lret
xor
aas
jnp
shrb
sub
mull
push
dec
test
cmp
pop
mov
ret
mov
mov
punpckhwd
pop
push
imul
sub
into
rclb
inc
repnz
outsl
aam
cmc
mov
mov
jmp
scas
lea
int3
jno
push
sub
dec
ss
sahf
pop
mov
pop
out
les
mov
adc
xor
mov
test
imul
push
dec
xor
mov
or
sahf
xorb
not
push
jecxz
jl
hlt
jecxz
mov
jmp
sub
jbe
pop
ret
add
sahf
pushf
jbe
out
fistpll
jmp
adc
xor
xchg
cmp
rorl
mov
nop
lods
push
out
xchg
or
fidivrl
pand
xchg
push
mov
sub
loopne
sbb
push
push
mov
fs
sbb
inc
push
lahf
xchg
stos
mov
aas
dec
push
mull
push
jbe
mov
push
cmpsb
push
cmp
inc
push
lcall
jno
insb
fldl
push
dec
repnz
and
lods
sbb
cmc
jecxz
mov
icebp
xorb
loope
out
outsl
mov
popa
pop
jbe
mov
push
mov
push
mov
nop
stos
or
jge
dec
inc
nop
mov
test
js
out
imul
sub
pop
and
xlat
add
aam
fs
sub
mov
push
inc
jb
aaa
sti
add
dec
pop
dec
mov
and
adc
mov
mov
in
arpl
ljmp
xchg
jl
xor
mov
inc
in
mov
mov
cmc
std
pop
call
ret
or
push
mov
data16
int3
ret
xor
xchg
divb
cmp
movsl
and
xor
lds
das
test
mov
sahf
adc
jmp
cmpb
lcall
cmp
enter
into
mov
ret
xchg
repz
test
sub
mov
repz
int3
cld
xor
dec
and
adc
int
fidivl
sub
ret
dec
pushf
imul
dec
popf
adc
rclb
inc
cmpsl
lock
sbb
push
or
gs
ljmp
movsl
xchg
adc
out
in
mov
adc
mov
jle
fdivrp
ret
and
imul
push
repnz
jo
add
scas
outsb
insb
pop
loope
xchg
shrl
jb
iret
adcb
fcompl
mov
push
movsl
scas
cmp
xchg
jb
pusha
dec
and
repz
xor
ret
dec
idivb
pop
lahf
pushf
sbb
sbb
stos
or
pop
and
pop
adc
into
int3
cmp
cmp
pop
in
dec
lea
mov
insb
mov
xchg
mov
mov
pushl
movsb
sahf
jmp
mov
xchg
popa
andl
xchg
mov
cmp
push
in
sub
xor
stc
loope
mov
push
arpl
jne
sbb
movsb
and
lock
ficoml
adc
fucomi
mov
addr16
fimuls
dec
sbb
sbb
and
xchg
xor
sbb
sbb
pushf
and
clc
sub
pop
mov
test
out
push
push
pushf
cs
push
cmpl
adc
data16
cmp
xchg
sti
aas
or
inc
and
rcll
repnz
pop
enter
inc
cltd
xor
loop
inc
ljmp
or
inc
sbb
mov
pop
lcall
in
or
out
and
rclb
cmp
test
or
shll
xchg
jbe
or
call
fnstenv
aaa
data16
push
gs
sub
lret
or
jb
xor
pushf
stc
scas
mov
sahf
sub
sbb
je
outsl
lock
repnz
outsb
ret
bound
lret
lcall
dec
inc
dec
fdivrp
divb
pushf
insl
add
out
jl
jmp
scas
lret
xor
push
mov
mov
xor
cld
pop
outsl
lret
or
scas
imul
xor
push
outsl
inc
inc
cwtl
out
xlat
test
jae
cwtl
dec
shrl
inc
adc
cmp
daa
jmp
addr16
outsl
or
fidivrl
hlt
jno
sbb
idiv
xchg
inc
mov
xchg
sbb
xor
inc
sbb
cmp
out
cli
out
test
push
in
leave
mov
xor
ficomps
xchg
std
jmp
pop
pop
cmp
jae
pop
jne
rcrb
xchg
in
mov
iret
outsl
mov
adc
in
sbb
xchg
add
sub
dec
sub
xor
movsl
push
pushf
loop
sub
mov
pop
xor
mov
xorl
in
pop
add
xor
js
xor
sub
push
int
sub
mov
roll
push
push
cwtl
movsw
fdiv
push
repz
mov
nop
sti
cmp
cld
pusha
add
jle
push
add
xor
sub
add
je
notl
cmpsl
mov
pop
cli
cltd
add
pushaw
fisubrl
push
mov
nop
mov
sbb
repz
repnz
sub
sub
js
imul
cmpsl
mov
dec
sub
sbb
xor
push
fnstsw
jmp
call
mov
shr
cmp
fldcw
pop
jecxz
movb
in
popf
hlt
jnp
testb
stos
mov
xchg
aad
or
jecxz
hlt
push
fld
adc
pop
aas
jmp
inc
scas
imul
addr16
dec
mov
dec
xor
inc
jns
mov
xchg
pop
insb
xor
inc
out
out
aam
adc
pop
es
sbb
jecxz
outsb
insl
dec
dec
in
stos
xchg
xlat
jb
adc
cld
push
pop
pop
call
inc
mov
pop
cmp
rorl
mulb
shrl
add
loopne
vhaddpd
and
sbb
jne
adc
push
add
std
loope
ficompl
sub
mov
or
les
ret
repz
mov
inc
idiv
push
sbb
ss
insb
inc
pusha
cmp
and
fs
fistps
lock
dec
push
jp
or
xor
mov
mov
stos
dec
roll
mov
frstor
inc
mov
imul
adc
sub
lcall
pop
lret
push
lock
leave
xchg
xor
lret
fnstsw
adcl
dec
adc
cmpsl
cmpsb
or
clc
shlb
subl
in
in
lcall
push
lods
ja
in
ss
mov
pop
jbe
inc
repz
fdivr
cmp
xlat
stos
mov
xchg
clc
or
sub
in
enter
out
sbb
cli
outsl
cli
xor
mov
lea
xchg
pop
gs
stos
and
adcl
sub
imul
add
int
jnp
pinsrw
mov
js
jbe
lea
popa
rclb
in
mov
push
mov
inc
jmp
mov
das
jge
pusha
mov
mov
out
or
adc
mov
push
aad
adc
test
icebp
dec
loope
adc
xchg
lea
movsl
dec
push
jl
sub
imul
xchg
popf
xchg
pop
rcr
mov
and
stc
adc
mov
and
push
dec
jmp
movsb
pusha
push
fcmovnbe
or
movsb
cmp
cmc
ljmp
fisttpl
inc
test
test
or
int3
cmp
jns
fiaddl
jmp
test
push
push
adc
xchg
jge
stc
adc
lret
cwtl
xchg
inc
test
push
fstpl
aaa
jle
lahf
sub
lret
adc
adc
jl
or
ljmp
sar
je
je
and
aad
in
fadd
jecxz
outsb
sub
mov
mov
pop
clc
sbb
dec
xchg
fdiv
enter
pop
xchg
or
lret
or
xchg
sbb
out
add
push
aaa
punpckhdq
out
aaa
jno
jne
mov
lgs
testl
adc
lds
andl
outsl
stos
vmread
push
push
dec
movntps
ss
mov
lock
ret
or
imul
xor
hlt
fs
loope
mov
cmp
dec
fiaddl
dec
fidivl
ret
movsb
adc
lahf
mov
xchg
sub
mov
pop
cmpsl
nop
mov
xor
sub
jg
and
scas
repz
mov
stos
mov
sbb
out
add
fmuls
and
js
out
pop
mov
in
dec
push
jmp
xchg
in
stc
jno
push
and
fstpl
into
mov
int3
fisttps
sahf
loope
mov
mov
out
movsb
sub
cs
and
cmc
or
mov
out
push
dec
mov
adc
roll
rcl
fs
xlat
mov
mulb
jae
ss
pop
mov
inc
cltd
lahf
loopne
or
ljmp
in
xchg
or
jge
orb
push
add
iret
ss
and
push
mov
cs
push
ret
xorb
pop
sbb
push
sbb
sbb
xor
xor
cmp
lcall
push
mov
fwait
xchg
add
xor
and
popa
xchg
inc
imulb
mov
arpl
sbb
inc
imul
mov
inc
clc
leave
sub
imul
adc
add
fwait
je
mov
mov
cmp
cmc
cmp
mov
mov
popf
and
imul
xor
pop
xchg
dec
jbe
mov
jb
mov
ficoms
sbb
xor
inc
add
inc
in
test
dec
sbb
pop
sub
add
and
dec
leave
jmp
mov
dec
mov
mov
adc
cld
jp
fidivrl
je
xor
gs
xor
or
xchg
mov
adc
xchg
popf
mov
add
and
aas
jne
xor
fsubl
mov
shl
das
cld
jae
aas
in
jp
call
mov
iret
cmp
mov
adc
cmp
jge
lods
jo
add
inc
adc
xorb
dec
lds
inc
xchg
add
icebp
jae
push
fwait
xor
or
popa
mov
fmull
ss
mov
sub
rorl
jnp
cmp
dec
outsb
pop
mov
fcoms
add
out
jbe
push
mov
les
xor
or
fsubs
cli
jecxz
xor
hlt
mov
aam
ljmp
xor
jnp
xchg
dec
mov
repnz
lahf
ss
add
cmp
pop
xchg
push
adc
pop
cmpsb
sub
xchg
repnz
bound
dec
xchg
in
rorb
fstps
mov
sub
mov
sub
add
lea
adc
divb
pop
addr16
push
fistpl
mov
inc
mov
jge
cwtl
xchg
in
inc
add
roll
xchg
and
xchg
insl
adc
xor
shrl
fcompl
test
jle
cltd
xor
and
inc
push
sbb
rol
dec
icebp
xchg
repnz
sub
xchg
hlt
pop
int
push
imul
pop
cmc
jg
sub
sarb
xor
xchg
jbe
and
add
xchg
cmp
and
push
fwait
add
lea
fwait
mov
mov
pop
lret
int3
jb
xchg
mov
jae
cs
adc
lods
loope
cmp
sub
or
insb
fwait
int3
add
inc
mov
mov
movsb
mov
xchg
pop
inc
mov
ja
cmp
jmp
xor
push
inc
adc
adc
insl
pushf
bound
orb
int
jle
mov
dec
rolb
sbb
out
cmp
fs
mov
push
push
or
popf
cmpsl
pop
in
loopne
push
ucomiss
cmpsb
int
or
mov
dec
jmp
mov
insl
sbb
and
loop
adc
sub
add
leave
mov
inc
and
rcrl
ss
enter
fisubl
addr16
gs
dec
loop
orl
test
notb
push
and
pop
adc
in
cli
nop
shr
or
enter
notb
lcallw
lcall
cmp
movsl
lret
mov
out
popf
pushf
add
pop
sahf
and
sub
dec
les
push
adcb
ror
or
gs
jmp
or
rcrb
fisubrs
mov
imul
je,pn
sbb
mov
jl
and
mov
dec
sub
loope
mov
pushl
add
push
push
lret
pop
lcall
xchg
jg
adc
xchg
dec
addr16
mov
sbb
push
jb
and
mov
xor
jmp
mov
xchg
pop
in
push
fsubl
iret
cmpsb
mov
or
inc
mov
lcall
shrl
xor
icebp
test
cwtl
movsb
push
adc
pop
cmpsl
inc
or
xchg
xchg
out
xor
test
cmpsb
jae
sub
inc
loope
fadd
cmpsl
out
inc
test
mov
xor
jno
jecxz
nop
and
sbb
mov
icebp
outsl
or
pop
push
repnz
jo
pop
addr16
mov
leave
xor
pusha
loopne
dec
dec
lds
cmc
and
dec
mov
out
xchg
pop
notb
jnp
in
xor
mov
xchg
cwtl
pop
aas
sub
or
adc
rcll
jno
mov
mov
pushf
scas
mov
xchg
jb
inc
pop
test
ret
and
movsb
shl
sbb
pop
out
push
jg
mov
movsb
mov
xchg
jae
mov
cmc
dec
cmp
lahf
dec
movsl
xor
xor
sub
adc
das
and
sub
popa
adc
adc
repz
pop
imul
clc
sti
sub
add
add
pop
push
repnz
mov
imul
cmp
xor
and
sub
shll
xor
or
idivl
add
jg
jmp
ret
mov
pop
cmp
push
push
push
mov
adc
mov
sbb
aaa
imul
mov
lock
pop
aas
mov
sbb
jmp
into
std
stos
fiaddl
xor
xchg
add
pop
dec
popa
fcomps
aam
sbb
rcl
sub
adc
in
in
push
mov
loop
lret
mov
xor
pushf
add
enter
es
jmp
dec
icebp
add
inc
shll
push
dec
add
in
rcrb
inc
popa
mov
ds
sbbb
jae
popa
xchg
jns
dec
dec
pop
mov
leave
jns
add
pop
popf
rcrl
sbb
adc
or
cmp
push
add
or
cwtl
jmp
dec
push
es
cmpsl
arpl
imul
in
xchg
cmpsb
or
mov
push
lds
test
scas
mov
inc
lock
je
mov
add
nop
ficoml
ret
jbe
mov
popf
mov
sar
mov
xchg
aas
in
adc
xchg
pop
aam
cmp
mov
pop
push
mov
mov
mov
jl
sub
add
aaa
xorb
sbbb
outsb
push
je
fs
fwait
in
pop
xchg
xchg
outsl
cvtpi2ps
dec
mov
or
imul
jno
add
bound
pop
jp
add
mov
pop
stos
data16
cmp
jg
sub
aaa
mov
inc
les
outsb
nop
adc
pushf
cmp
fwait
sbb
sbb
inc
xchg
push
call
mov
mov
xlat
cmp
pop
es
je
mov
scas
push
andb
pop
into
pop
enter
fcmovu
add
sbb
test
inc
dec
mov
in
push
sbb
mov
xchg
jl
mov
lret
cmpl
outsl
xchg
insb
mov
mov
fildll
mov
inc
and
fiadds
aas
mov
imull
in
or
inc
enter
jnp
pushf
mov
inc
movl
sub
adc
bound
xchg
inc
pushl
ljmp
sbb
xor
pushf
mov
test
xlat
test
xor
xor
ljmp
out
xor
fwait
jbe
dec
repnz
popa
jno
sbb
inc
lea
fwait
cmc
adc
sub
push
loopne
jbe
add
mov
das
incl
adc
mov
xchg
roll
in
mov
loopne
inc
js
dec
data16
aas
popa
jg
pop
push
repz
imulb
cmpsl
mov
cmpsl
rol
popa
mov
adc
leave
mov
and
icebp
out
cltd
xchg
std
push
mov
cwtl
jnp
inc
in
js
jbe
sbb
push
dec
sarb
pusha
sahf
arpl
push
mov
mov
cwtl
adc
lcall
repz
cwtl
xor
mov
push
xor
stos
imul
mov
push
inc
jmp
lahf
loop
fildll
mov
lea
cmp
jle
push
mov
idivb
fisubrl
mov
jmp
daa
sti
mov
mov
lcall
inc
jb
stos
popf
ror
adc
sbb
ljmp
mov
je
inc
adc
push
iret
mov
and
clc
xchg
add
loop
mov
cwtl
notl
enter
jle
mov
xor
icebp
out
cli
mov
push
gs
test
sbb
dec
lock
xor
andl
pop
imul
xchg
fdivr
cli
test
xor
sub
jbe
fsubrs
push
push
out
fimull
inc
mov
pop
int3
lret
aad
pop
cmpsl
cmp
sub
inc
sbb
jbe
repnz
fs
jb
repz
mov
lods
xlat
movsl
into
inc
ds
inc
test
into
mov
repz
into
test
call
hlt
sbb
xchg
aam
xchg
pushf
outsl
sbb
ficompl
enter
mov
mov
loope
xchg
cwtl
jns
ret
in
dec
xor
test
mov
insl
and
ds
nop
dec
ss
cli
xchg
sarb
sub
and
jp
or
nop
inc
shll
repnz
bound
cmp
and
jp
push
jnp
xchg
push
mov
or
rclb
addr16
ficoml
iret
adc
dec
int
daa
in
movsb
ja
shlb
jge
jl
movsl
mov
aaa
jns
cltd
sub
push
sub
in
push
mov
lods
popf
pop
xlat
mov
rclb
mov
arpl
lret
cmp
xchg
push
in
pop
xor
cmpsb
sbb
aaa
enter
mov
leave
movsb
fnsave
mov
xchg
ret
dec
mov
jnp
xchg
popf
inc
cs
cld
inc
dec
cmp
xchg
xchg
xor
ficompl
sbb
test
pop
adc
daa
incb
sbb
jp
rcrb
push
in
in
adc
je
mov
sbb
sbb
inc
test
add
jns
pavgw
pop
lea
adc
xor
sbb
lock
adc
dec
outsl
insl
mov
out
aam
xor
push
out
dec
xor
adc
daa
sti
aam
insl
mov
aas
shlb
mov
xor
jmp
or
cmp
or
add
scas
nop
or
jle
sbb
push
or
imul
jns
test
xor
inc
xchg
cmpsb
imul
int
or
adc
mov
jmp
pop
add
lds
xor
sbbb
mov
pop
fwait
cli
stos
jle
ret
mov
fiaddl
sbb
pop
les
sub
ljmp
mov
dec
push
or
popf
sbb
shl
sbb
push
lods
mov
sbb
xor
xorl
fdivs
dec
add
ja
pop
jno
cwtl
xchg
xor
xchg
enter
ret
jae
sbb
ret
sub
push
repz
inc
push
rcl
jl
sbb
test
pop
cmp
push
lret
mov
sub
lcall
adc
dec
or
mov
mov
decl
imull
add
out
cmp
push
cmpsl
dec
dec
pop
aam
cmpsb
rorb
lcall
push
push
adc
stos
sbb
mov
mov
sahf
lock
into
jmp
xlat
iret
nop
insl
shl
or
lods
xchg
xor
sbb
adcl
out
xor
cmp
mov
xchg
hlt
xchg
mov
icebp
inc
insb
adc
lds
scas
push
dec
divb
cld
mov
cli
add
inc
and
sarl
mov
push
inc
mov
call
fistps
sti
adc
add
subl
adc
and
mov
mov
and
sbbb
pusha
or
and
pop
pop
sbb
and
dec
imul
test
in
mov
add
mov
out
fwait
xchg
add
sbb
mov
orl
sbb
andb
xor
jo
jecxz
add
repnz
rcll
push
ret
sbb
pop
sbb
aaa
mov
cmpsb
popa
fnstenv
out
jns
insl
add
dec
aad
sbbl
aas
pop
and
rcll
jno
sub
scas
cmp
aas
inc
dec
push
fsub
aad
test
das
pop
xchg
insl
pop
mov
stos
dec
and
aad
cmpsl
cltd
fwait
mov
scas
in
jb
cs
mov
pop
jp
and
in
sub
in
arpl
pop
into
lods
push
ret
push
comiss
jo
popa
adc
adc
inc
cld
rcll
lahf
fs
pop
mov
inc
mov
imul
aad
pop
mov
dec
inc
out
pop
out
je
sub
jmp
push
and
and
repz
into
add
mov
jge
shrb
out
popf
rorb
outsl
shrl
into
ret
cmpsl
push
loopne
scas
jbe
or
fwait
ja
dec
xchg
jne
ret
pop
cmp
mov
or
push
rorb
xchg
xor
add
dec
sbb
aas
jne
mov
xchg
mov
or
mov
inc
push
fisubrl
mov
xlat
movsb
movsl
mov
push
stc
jp
pop
or
sahf
rorb
mov
xlat
mov
jl
scas
dec
dec
jge
push
insl
fstl
bound
les
pop
mov
sbb
rorb
sub
rorl
dec
outsl
mov
sub
jne
ror
push
lods
das
ret
adc
inc
lock
dec
insb
mov
push
push
das
sbb
pop
cmc
xor
stos
enter
xor
mov
or
cmp
call
dec
in
mov
push
stos
loop
push
sub
inc
insl
push
or
and
data16
inc
sub
sub
jge
xor
mov
mov
fsts
jge
andb
cmp
and
xor
ret
pop
loopne
add
sarl
pushf
and
push
clc
adc
call
mov
repnz
xchg
and
jns
xor
pop
adc
cmp
push
jge
sub
loope
sbb
dec
mov
mov
lods
jp
popa
mov
bound
outsb
fistpll
push
lock
or
dec
iret
fstps
mov
lcall
push
cmp
adc
push
std
ss
adc
jno
outsb
cmp
or
cltd
lea
sbb
sbb
dec
mov
arpl
mov
repnz
int3
inc
leave
adc
jmp
adc
cmp
xor
call
and
sub
lahf
inc
xor
jecxz
sahf
jne
xchg
add
or
jmp
mov
jmp
fwait
add
push
dec
aam
push
shll
push
inc
mov
inc
xor
lock
into
dec
cmc
xchg
in
jecxz
sbb
adc
pop
lret
arpl
out
xchg
dec
add
in
mov
sar
lahf
std
lret
imul
cmpsb
sub
das
dec
push
mov
pop
ret
rcr
out
mov
iret
or
repz
jnp
xor
out
subb
push
jns
mov
and
jb
out
addr16
add
fisubs
fsts
stos
and
jns
je
mov
es
add
push
add
aaa
or
sub
mov
js
incb
mov
ret
cmovg
insl
es
out
les
push
pop
mov
rcrb
scas
inc
pop
jnp
negb
jne
pop
lds
arpl
ret
adc
mov
scas
lahf
mov
cmp
sub
test
add
jne
ss
iret
add
gs
cmc
scas
jge
push
lods
jo
out
dec
cmp
mov
mov
pop
mov
fildl
xor
push
sbb
inc
loop
push
xchg
imul
out
fs
test
sarb
dec
push
mov
call
out
or
dec
sub
adc
repnz
add
push
sbb
sub
sbb
aam
jmp
lret
data16
sub
std
adc
xlat
mov
mov
xlat
cmp
xchg
nop
pop
sbb
int
sbb
fisubl
dec
dec
cmc
push
out
add
pop
mov
iret
mov
xor
nop
sub
push
test
mov
lds
shlb
and
mov
hlt
sbb
ss
test
stos
mov
cwtl
jno
aad
je
popf
mov
cmp
mov
jl
cld
mov
pop
pop
mov
sbb
adc
mov
into
sub
dec
mov
jl
inc
sub
mull
mov
out
test
xor
mov
flds
rorl
cmpsb
rorl
lret
pusha
dec
adc
adcl
pop
adc
out
into
xchg
push
jmp
xor
pop
cli
jl
nop
cmp
adc
fstp
jbe
pop
insb
insb
aam
or
rcl
cmp
fbld
cli
xor
mov
mov
add
fsubrs
into
add
pop
sti
stos
adc
xor
pop
inc
push
push
xchg
sbb
pushf
mov
mov
sub
add
pop
fmuls
mov
cmp
outsb
xor
push
xor
push
sub
xchg
sbb
adcb
pop
aas
lock
cltd
mov
fdivl
or
jns
call
pop
dec
shrb
mov
pusha
pop
loopne
cmp
inc
push
sub
xchg
dec
test
pop
push
test
je
inc
mov
jnp
test
push
loop
sbb
shrl
ss
loope
mov
dec
dec
push
pop
scas
pop
ret
cmp
or
jae
mov
adc
insl
fs
cmpsb
sub
into
push
fst
aam
cmp
push
sahf
jle
jge
and
xchg
xor
adc
rcll
add
lret
lcall
sub
pop
pop
xchg
dec
xchg
popf
in
jne
stos
imul
jo
sti
aad
cmpsl
movsb
sbb
sub
lods
inc
jle
iret
in
sub
ret
andl
xchg
cmp
aas
mov
pop
icebp
in
pop
addb
jl
or
leave
test
ret
pop
fsts
daa
fwait
clc
mov
inc
mov
push
ja
les
cwtl
inc
mov
add
lret
ljmp
adc
test
dec
cmp
push
fistl
mov
outsl
cmpsl
xor
xor
cmp
enter
inc
adc
pop
mov
rcrb
int
and
push
pop
inc
sbb
jge
ds
subb
in
jmp
clc
out
mov
mov
sub
xchg
add
mov
popf
adc
push
pushl
gs
lea
adc
inc
sub
cmpsb
stos
daa
xlat
ds
xchg
mov
ja
int
push
sbbl
jne
jp
adc
lods
dec
pop
testb
inc
inc
das
xor
xchg
into
mov
push
mov
inc
nop
mov
movsb
out
rcll
push
shlb
aaa
jns
sarl
jp
jmp
std
sub
out
jge
mov
les
lret
dec
dec
aaa
jbe
ja
sbb
insb
cli
outsl
loop
js
dec
cmpsb
in
mov
add
pop
mov
fucomip
aam
rcrb
rclw
cltd
cmp
push
out
mov
mov
dec
js
pop
je
imul
add
out
pushf
jmp
rcl
scas
jecxz
cwtl
mov
jbe
cmp
scas
in
xchg
out
shll
add
sti
leave
aad
inc
xchg
rorl
pop
ret
push
das
test
dec
add
cwtl
lret
add
lret
adc
sahf
mov
dec
nop
xlat
push
and
pop
popa
xor
jg
jmp
jp
movsb
mov
push
add
into
divb
fisttpl
cmp
or
sbb
das
dec
dec
cmp
nop
dec
popf
ljmp
inc
dec
push
add
xor
cmpsb
frstor
add
ds
in
or
repnz
or
xlat
pushf
push
cmc
ret
sahf
in
ds
rcrl
jae
rclb
jmp
adc
fldenv
push
out
xchg
aaa
mov
fwait
outsb
adc
mov
out
mov
mov
mov
jbe
repz
divl
gs
jmp
sub
pop
mov
movsl
pop
fsubrl
inc
fcoml
push
pop
dec
nop
aam
cli
icebp
push
test
cmp
and
mov
xor
or
out
mov
or
pop
lret
mov
shll
jp
movsb
js
movb
or
aas
insb
movsl
hlt
adc
sub
cmpsl
dec
out
push
inc
stc
enter
div
popf
int
aad
mul
push
rorl
xchg
push
leave
lret
mov
lods
xchg
mov
cmpsb
lahf
mov
push
or
cvtpi2ps
out
xchg
rclb
imul
inc
dec
fwait
sbb
cmpsb
pop
fdivr
adc
insl
gs
mov
jne
insl
lods
sub
sub
insl
outsl
xchg
xchg
call
ud0
mov
shrb
sub
imul
rcrb
ret
imul
fldt
imul
dec
pop
xchg
repz
inc
lock
push
mov
push
sbb
daa
fisttps
clc
push
dec
xchg
pop
mov
or
lods
jmp
or
repz
dec
pop
push
inc
sbb
jo
inc
sbb
popf
inc
addb
pop
mov
sbbb
jbe
pop
mov
mov
dec
mov
xor
sbb
call
cltd
outsb
or
cs
sbb
cmp
ss
inc
std
xor
lds
je
repz
in
lret
adc
js
ljmp
and
shlb
repnz
icebp
push
xchg
test
and
inc
fwait
and
call
xor
out
or
mov
push
sub
cltd
cli
dec
pop
push
xor
push
movsb
mov
mov
or
inc
push
daa
daa
cwtl
imul
loope
aas
mov
sub
pop
lods
push
ror
xchg
shll
imull
pop
mov
sub
pushf
bound
movsb
mov
and
mov
xchg
sbb
cmp
add
ret
fistps
dec
cmc
adc
mov
lcall
fmull
test
nop
or
hlt
call
ds
stos
outsb
das
aam
rorb
pop
xchg
test
jmp
lods
mov
jp
dec
adc
sbb
inc
push
cmp
out
sbb
inc
xchg
sbb
cli
mov
pop
xor
adc
out
mov
cli
and
ficompl
pop
pop
mov
mov
lods
mov
out
mov
in
jg
test
icebp
lods
movsb
arpl
pop
ja
jbe
push
cwtl
fisubrl
notb
iret
mov
sub
jb
pop
mov
loop
mov
enter
push
mov
scas
inc
stos
fidivs
mov
insl
jae
cmp
jecxz
iret
jl
cltd
shrl
call
push
std
pop
xchg
sub
jbe
shlb
rcrb
cmpsl
test
pop
jle
mov
push
outsb
es
sbb
pushf
clc
mov
cmp
aaa
decb
sbb
in
pop
or
xchg
add
movsl
ds
inc
divb
lods
and
jne
push
push
mov
jp
push
xor
aad
cmp
xlat
adc
enter
mov
rcll
sbb
push
loop
or
ss
aam
jae
add
jg
enter
arpl
jge
mov
negb
movsl
mov
dec
shl
pop
xor
in
add
lret
xchg
sub
setge
insb
shlb
xor
shl
push
mov
mov
sub
jmp
arpl
and
dec
dec
scas
stos
add
push
mov
loopne
ficoms
insb
imull
outsb
or
pushf
inc
data16
jp
mov
dec
fnsave
dec
ret
inc
pop
jl
nop
in
sub
dec
fistps
iret
leave
ljmp
mov
int
movsl
or
into
fcoml
or
push
outsl
push
sahf
sbb
outsl
inc
add
add
hlt
or
mov
xchg
movsl
nop
in
pop
jnp
sbb
rcl
mov
push
in
xor
add
add
xchg
in
scas
cs
xor
adc
into
push
out
loopne
add
mov
inc
xor
push
mov
arpl
push
lea
and
adc
push
xchg
cmc
mov
addb
andl
xchg
std
cmpl
loop
inc
or
sbb
arpl
fidivrl
adc
fwait
lds
out
stc
cmp
inc
add
out
jno
adc
add
movsb
inc
dec
pop
pop
add
sbb
hlt
or
stc
pop
sub
cmpsl
andl
in
push
mov
fcmove
dec
or
dec
adc
ljmp
mov
cwtl
test
or
fstl
mov
sahf
jno
mov
cmp
in
shlb
mov
movups
in
push
fisttpll
lcall
or
mov
cmp
arpl
bound
push
into
or
lock
or
xchg
sbb
and
lds
push
cld
sbb
loope
sbb
enter
movsb
in
sub
mov
mov
test
inc
pop
ret
add
sub
mov
mov
and
jns
lods
dec
cli
dec
push
pop
scas
and
mov
mov
fdivrp
mov
jo
xchg
cmc
mov
or
bound
movsl
jge
shlb
mov
xor
sar
pop
fstl
out
xor
lret
inc
ret
ret
add
pop
push
mov
jg
inc
push
push
ss
inc
cld
mov
nop
int
dec
sub
in
mov
and
cmpsb
xchg
enter
xchg
push
jo
xchg
mov
cmc
mov
and
stos
or
fsts
xlat
int3
imul
adc
push
sub
fcmovbe
imul
hlt
lock
jp
jns
mov
dec
inc
loopne
xchg
sbb
add
push
int3
xchg
out
test
inc
daa
jle
rorl
xchg
jae
hlt
xchg
mov
in
outsb
sub
pop
ret
call
and
cmp
mov
lea
stc
push
je
xor
scas
inc
fisubl
sbb
mov
cmp
pop
js
mov
out
data16
jmp
push
jmp
push
mov
call
mov
push
cmpsb
jnp
cmp
jl
stos
je
fists
es
or
sahf
clc
mov
movsb
ja
xchg
adc
das
sub
mov
and
lret
sub
cmp
stc
push
insb
imul
subb
xchg
imul
mov
shlb
aas
pop
pushf
jge
leave
or
xchg
popa
pop
or
xchg
xchg
lea
sbb
pop
xlat
push
mov
lds
fwait
outsl
sbb
push
xlat
cltd
fsubrs
adc
push
push
push
mov
or
jnp
cmpsb
dec
inc
jnp
xchg
roll
cmc
movsl
adc
out
add
call
out
cmp
mov
aad
push
es
movsl
push
mov
loop
js
mov
push
aaa
test
dec
fcmove
rorl
mov
jmp
or
jmp
insb
push
arpl
lcall
gs
rolb
or
inc
repnz
insb
cmpsl
mov
jbe
ljmp
or
pop
adc
pop
insl
adc
testb
cmp
cmp
lea
mov
xor
xor
cmpsb
ja
mov
push
jne
cmp
mov
in
sub
iret
xchg
loop
or
js
into
dec
pop
jbe
xchg
aam
nop
ret
lret
in
push
push
push
dec
inc
xor
mov
jecxz
or
cltd
outsb
movsb
push
mov
xor
add
mov
je
mov
mov
cli
movntps
mov
fwait
stos
sti
mov
xchg
mov
push
mov
xor
or
mov
sbb
loop,pt
decl
xchg
xchg
repnz
cli
or
scas
xor
and
test
jb
leave
imul
sbb
adcl
push
pushf
test
dec
sbb
icebp
arpl
lods
add
sbb
insl
mov
xchg
sahf
outsl
or
and
mov
mov
aaa
iret
nop
mov
mov
cmc
jne
pop
mov
mov
call
clc
in
xor
jp,pt
and
jmp
jp
cwtl
sub
lods
aad
jne
je
mov
or
jns
test
je
push
mov
lret
call
aas
add
es
rcll
leave
jns
add
and
nop
and
insl
sti
push
iret
cmp
cwtl
cmp
fisubl
or
cli
aaa
aad
jle
hlt
xchg
ja
out
mov
out
dec
sub
rclb
jp
jno
test
jp,pn
lcall
fstps
outsl
jp
dec
ljmp
ficompl
jl
mov
jle
icebp
enter
fstpt
imul
jb
and
xchg
dec
add
jb
jno
sub
fwait
push
decb
movsl
xor
sbb
sbb
movsb
or
xchg
and
mov
js
out
cmp
pop
mov
push
lods
divl
ret
scas
imul
lock
pop
out
lds
pop
mov
aas
xchg
into
movsl
cltd
imull
jle
imul
std
adc
mov
push
call
pusha
test
mov
push
inc
incb
xor
in
pop
push
add
cmp
xorl
adc
sbb
shll
dec
stos
ja
enter
subl
jo
jle
cs
or
scas
mov
jmp
xor
sub
es
and
push
pop
jg
mov
leave
aas
cli
xor
data16
movsb
sbb
mov
xchg
adc
test
aaa
push
pop
scas
bound
mov
ja
inc
push
sub
xor
pop
mov
mov
leave
pop
ja
cs
jno
push
std
and
leave
out
popa
movb
add
loope
push
mov
insl
arpl
gs
xor
inc
insl
jb
xor
fnclex
mov
or
jb
jecxz
aas
jmp
xor
test
pop
lea
and
dec
add
daa
sub
rolb
mov
jo
sarb
jecxz
stos
pop
cmpsb
cwtl
clc
jle
popf
mov
lret
xchg
pop
sub
mov
mov
push
lods
or
and
sub
aad
dec
push
jns
xor
fistpl
mov
jle
or
sbb
sti
nop
les
test
mov
mov
push
arpl
and
in
shl
mov
cmpsl
in
sahf
jno
nop
xor
push
cld
out
sbb
dec
fs
cmpsb
xor
and
sub
mov
push
hlt
push
nop
sbb
adc
ret
and
sar
dec
xchg
lea
ljmp
xchg
adc
cmp
cmp
out
xor
ficompl
ds
imul
mov
jnp
ret
or
sahf
into
cmp
stc
mov
mov
pop
ret
cmpl
out
dec
sahf
jbe
and
sub
sbb
xchg
push
out
adc
dec
mov
loope
cld
hlt
leave
negl
ret
jle
rcrb
mov
insb
dec
aaa
jecxz
mov
push
daa
mov
or
xor
xchg
pop
inc
xor
mov
mov
int
lahf
cmpb
lahf
ja
jbe
scas
lods
out
or
arpl
es
mov
aam
mov
dec
arpl
into
ss
mov
jnp
lock
jnp
add
sub
gs
or
imul
lcall
jno
xlat
loop
lock
aaa
xchg
data16
fisttpll
inc
add
scas
loop
jp
mov
sbb
jle
shrb
mov
ljmp
jp
pushl
pop
lods
xor
mov
push
test
popa
mov
mov
dec
push
mov
mov
cmc
adc
cmpsb
dec
jecxz
loope
jne
loop
fnstsw
js
addl
cmp
jnp
outsb
test
aas
movsb
scas
movsl
push
shll
xor
add
mov
ds
mov
test
imulb
or
decb
mov
movsl
aam
and
cmp
jg
int
test
or
lds
rcll
sti
bound
mov
imul
sub
jns
push
adc
popf
stos
sbb
fsubrl
loop
scas
aas
test
xchg
fs
fwait
add
mov
xor
outsb
in
sbb
jg
mov
inc
ss
outsb
insl
adc
in
mov
xchg
inc
add
mov
cmp
sub
adc
add
xor
adc
cs
adc
mov
add
pop
mov
cmp
adc
sub
fwait
push
call
push
inc
mov
pop
pop
adc
mov
sbb
sbbb
mov
mulb
cmp
ret
jne
int
stc
scas
push
push
movsl
sti
cmp
scas
xor
sbb
and
xchg
pop
lods
mov
or
sbb
sbb
fdivrs
mov
repnz
xchg
ret
jecxz
push
or
cmp
fsubl
xor
dec
mov
rorb
adcb
stos
ljmp
cmpsb
push
popf
jb
mov
loop
sub
sti
mov
scas
pop
add
ret
shlb
mov
mov
test
and
adc
cmp
sbb
push
jno
mov
stc
xchg
clc
sub
shll
xchg
pop
dec
bound
mov
dec
jge
dec
cmp
and
pop
cmp
sti
jg
cld
sub
push
mov
inc
jge
jne
xchg
mov
mov
std
mov
or
daa
aas
call
sub
cwtl
mov
jno
pop
test
enter
into
sbb
sbb
and
pop
push
call
loope
xchg
sbb
cmp
xor
add
pop
jo
inc
xchg
movsl
cmp
xor
xor
int3
shll
fisttpll
stos
xor
adc
xchg
repnz
or
pushf
gs
xchg
gs
jnp
ljmp
icebp
or
loopne
lods
cmp
push
pop
and
clc
adc
push
cli
jno
cmpsb
cld
mov
scas
leave
mov
ja
push
imul
lods
cwtl
mov
shlb
xchg
inc
mov
fisubrs
imul
adc
cs
test
jns
mov
or
or
mov
shrl
leave
mov
xchg
in
mov
ficoms
mov
negb
mov
inc
push
fdivr
inc
fdivs
cmp
scas
xchg
popa
rcll
mov
mov
push
inc
clc
js
in
jae
and
push
adc
test
lahf
adcl
mov
pop
dec
mov
daa
xchg
shll
int3
test
jle
sahf
repnz
jb
xchg
cmp
sahf
call
lahf
sbb
out
ds
and
mov
imul
out
es
pop
adc
and
push
pop
mov
sub
lret
or
mov
pop
mov
sbb
subl
push
xchg
lock
imul
jmp
jae
cmp
cmp
pop
js
mov
add
xchg
rcr
inc
mov
fistl
cmp
fists
loopne
pop
mov
into
mov
cmp
sub
out
scas
xchg
fdivrl
dec
push
pop
mov
adc
mov
xchg
popf
pop
push
les
js
mov
pop
jne
jecxz
push
add
mov
sbb
lcall
ljmp
jns
inc
repz
mov
push
in
mov
lret
pop
pop
pop
mov
fxch
and
ss
xchg
inc
pop
mov
aam
mov
push
fcomip
sub
cmc
call
xor
sarb
pop
xchg
loop
sbb
sbb
sub
and
push
sub
movsl
jg
jge
in
sub
shll
incl
lcall
das
pop
insb
mov
push
mov
jle
sub
sahf
cli
push
mov
add
xchg
test
dec
aam
push
cli
test
iret
test
stos
push
and
mov
xor
repz
xor
sub
shrb
ss
sbb
push
nop
mov
dec
lret
shl
mov
call
bnd
cmp
out
in
testl
gs
xlat
mov
adc
lsl
mov
ret
ds
jge
sub
and
sub
stos
pop
ret
subb
adc
cmp
inc
xchg
add
cld
repnz
mov
and
imul
call
mov
mov
out
mov
dec
push
mov
xchg
inc
lods
and
sub
xor
dec
and
arpl
fwait
pop
lods
imul
outsl
inc
xchg
push
aad
push
add
add
xor
or
aam
sbb
outsb
push
pop
out
push
inc
imul
roll
dec
jbe
cltd
dec
lcall
jecxz
loopne
sarl
imul
xchg
push
add
bnd
pop
dec
out
cmp
mov
push
mov
xor
insl
jmp
ror
fdivrs
pop
sbbb
mov
jecxz
mov
sub
and
dec
pop
enter
sarb
ret
or
lahf
sarl
jmp
lods
sarl
je
cwtl
stos
or
stos
sbb
orb
bound
jo
add
bound
ret
test
xor
call
cmp
pop
stos
push
push
pop
jmp
in
push
fwait
mov
aad
jle
add
lret
dec
out
xorb
cmpsl
inc
or
mov
xor
mov
aas
lcall
arpl
hlt
outsl
jo
test
aas
aam
xor
xor
cmp
movsb
push
in
jne
out
push
push
or
inc
mov
jnp
cmp
adc
imul
je
fcomp
jl
hlt
dec
mov
jne
fidivrs
nop
mov
std
cmpsl
test
pop
popl
lock
movl
xor
aas
in
and
outsb
aad
inc
sub
je
xor
or
add
cmc
sbb
cli
popa
xor
cmpsb
mov
hlt
enter
sub
lret
mov
cmp
and
pop
xorl
and
in
lahf
scas
jle
fcmovnu
popa
sbb
xor
jnp
fbstp
xchg
fst
sbb
xor
mov
mov
rclb
pop
aas
lret
sarl
mov
jmp
ljmp
fisttpll
cmpsb
sarl
push
mov
insl
inc
push
sbb
insl
cmp
and
adcb
cmp
clc
dec
aaa
lds
mov
das
sbb
sbb
mov
jp
gs
sub
nop
adc
aad
push
fimuls
sub
lods
mov
push
cmp
xchg
aas
dec
adc
push
stos
push
push
subl
aaa
and
and
test
xchg
rolb
fimuls
fucomip
hlt
rorb
mov
mov
jmp
shl
pop
inc
imul
push
xchg
mov
fidivrs
sar
xor
nop
loop
sbb
sahf
push
roll
push
mov
sub
pop
mov
sub
dec
icebp
movsl
xor
jg
jno
jmp
icebp
test
mov
imul
outsb
cltd
aad
lahf
jmp
jae
repnz
mov
pop
dec
fadds
cltd
pop
aas
xchg
js
xchg
lahf
mov
scas
mov
stc
inc
mov
loope
idivb
daa
decl
pop
icebp
mov
xor
cs
dec
or
popf
push
into
adc
jno
in
or
jns
popa
enter
hlt
movsl
popa
dec
adc
cmc
rorb
iret
pand
jbe
dec
pop
fucomi
test
inc
jg
xor
cwtl
cmp
or
jo
scas
jns
mov
daa
jo
jo
pop
mov
lahf
cs
cwtl
das
pusha
add
jns
rcrl
mov
test
push
int
lods
dec
jmp
push
inc
popa
movsl
out
jne
inc
mov
pop
jo
ret
or
outsb
push
pop
and
sub
repz
fcom
jge
xlat
mov
inc
xor
cmp
insl
cmp
adc
lds
mov
sbb
push
push
xchg
inc
inc
ret
js
scas
cmp
imul
add
xlat
jl
inc
jg
add
sub
dec
mov
pop
jbe
mull
roll
insl
xor
adc
xor
lahf
insl
mov
dec
stos
je
adcl
cmp
daa
xchg
ljmp
xchg
pop
scas
add
fistl
pop
adc
add
inc
movsb
jne
call
cmp
bound
xor
xor
js
push
dec
dec
stos
cmp
sub
call
add
dec
movsb
mov
in
out
pop
inc
mov
mov
and
xor
mov
sarl
stos
xor
mov
sub
mov
stos
leave
pop
std
cwtl
add
pushf
adc
jo
mov
pop
sti
dec
fldt
repnz
inc
fdiv
icebp
push
pop
jne
aaa
mov
push
mov
cmpl
push
mov
ds
add
sub
sbb
sub
dec
jl
mov
push
cmp
pushf
mov
push
push
rcll
jmp
leave
mov
insb
fisttpl
push
testb
xchg
mov
daa
mov
mov
sti
adc
mov
aaa
fstl
aas
xchg
ret
sub
pop
adc
dec
fisttpll
mov
inc
mov
rorl
mov
dec
push
icebp
push
out
sbb
flds
jle
rcl
inc
lock
xor
shr
xor
bound
mov
sbb
js
pushf
xor
dec
sub
mov
lret
imul
stc
cmc
sub
cmc
shlb
js
mov
loopne
mov
lds
jne
inc
mov
dec
mov
pop
cmp
cmp
xor
gs
pushf
inc
mov
jne
shlb
popa
fcoms
stos
mov
or
rolb
push
dec
into
dec
loope
test
mov
jmp
fsts
test
leave
push
enter
xor
push
mov
sub
fidivs
pop
xchg
xor
mov
and
mov
push
lods
fwait
cmp
or
adc
cmpl
adc
push
fisubl
test
repz
in
nop
mov
loope
sbb
push
lret
mov
adcl
in
rcrb
cmpsb
mov
xor
jmp
hlt
xchg
xor
or
pop
xchg
in
rclb
lahf
pushf
push
cmp
cmovp
sbb
in
inc
and
and
xchg
fsubp
xchg
adc
mov
rcrl
iret
sbb
cmp
xchg
push
rol
jle
loope
xchg
les
lock
add
aad
clc
xlat
pushf
adc
scas
xchg
dec
add
mov
mov
pop
inc
jge
test
loop
mov
in
add
add
out
inc
shll
dec
insl
and
icebp
out
mov
push
mov
dec
push
dec
mov
shr
or
movsl
fucomip
pop
dec
imul
pop
adc
xor
or
cmp
test
mov
popf
xor
pop
mov
push
pop
popf
divb
dec
push
popa
or
leave
fs
cmp
inc
scas
mov
sahf
lods
xor
dec
jecxz
loop
lret
or
js
add
out
adc
inc
jns
sbb
push
sub
test
sbb
mov
cmp
inc
hlt
mov
std
testb
push
xchg
adc
sti
pop
iret
mov
xchg
das
stos
add
xchg
aad
insb
test
cmp
mov
jle
mov
cltd
mov
xor
push
pop
add
pop
sub
sub
inc
scas
cmpsl
mov
jl
and
xor
je
int3
ret
mov
dec
pop
shrb
pop
bound
mov
sub
inc
xchg
and
lds
stos
dec
popa
incb
addr16
test
push
mov
lcall
and
mov
xchg
mov
inc
sub
testb
adc
leave
add
or
fadds
and
mov
dec
cmpsb
sbb
scas
bound
outsl
addr16
lret
xchg
or
jnp
divb
lea
sbb
pop
orl
push
enter
dec
popl
or
and
gs
popf
sub
dec
pop
sub
pop
fucomip
das
mov
mov
dec
pop
inc
jl
cmp
or
fsub
fstps
adc
adc
mov
xchg
or
test
mov
sub
sti
pop
aam
mov
sub
cmc
and
sti
inc
mov
mov
fldenv
rcrl
call
mov
aaa
loope
fmull
mov
enter
f2xm1
pop
mov
iret
jno
add
testl
mov
adc
cmc
jb
repnz
sub
adc
pop
mov
cmp
jnp
inc
shrb
add
cmp
pop
and
out
and
nop
nop
inc
or
jge
sbb
or
cltd
xchg
fidivrs
xchg
pop
xchg
add
xor
dec
stos
daa
push
daa
cli
add
mov
sub
jg
xor
dec
test
test
mov
ja
ss
mov
in
xlat
nop
and
arpl
xchg
lock
imul
imul
xchg
subb
sub
add
add
xlat
jne
mov
in
xorl
cwtl
xchg
mov
cmp
outsl
add
clc
out
pop
pop
inc
lods
mov
sub
enter
pop
pop
cli
inc
fcoms
cmpsl
pop
mov
mov
insb
xor
push
scas
ficoml
sbb
dec
je
and
sub
int
sub
loopne
or
jecxz
int
imul
dec
lods
pop
add
mov
jae
movsb
xchg
adc
aaa
aad
test
and
push
inc
cli
xorl
mov
mov
fdiv
pop
xchg
and
push
loop
in
int
jo
stos
pop
dec
add
lcall
add
loopne
jae
dec
mov
mov
add
or
cmp
in
xor
xchg
and
mov
loop
mov
xchg
lds
and
addb
inc
addl
push
pop
inc
imul
icebp
cmp
or
jne
lds
pop
stc
and
mov
aam
addr16
insl
pop
or
pop
aam
mov
fidivrs
cmp
fwait
mov
dec
pop
sbb
mov
iret
rorl
jg
test
das
outsl
clc
dec
push
cli
xor
aad
ja
stc
pop
ret
aam
xchg
sahf
adc
pop
std
push
or
sahf
test
stc
into
inc
mov
rcrl
outsb
xor
or
xor
add
jecxz
cmp
ljmp
sub
sub
lock
int
adc
cs
das
aaa
pusha
mov
fiadds
mov
pop
push
bound
es
int3
insb
outsb
icebp
imul
out
iret
imul
enter
dec
bound
dec
push
outsb
lahf
out
mov
call
xchg
incl
test
lock
pop
hlt
cmp
pop
addr16
xor
or
dec
xor
dec
stos
mov
iret
dec
mov
add
dec
bound
fstps
mov
daa
scas
bound
mov
mov
ljmp
pop
fdivrp
push
sbb
stos
scas
orb
mov
test
mov
xorl
jl
fcmovnu
popf
push
popa
out
mov
stos
add
xchg
jp
inc
imul
dec
mov
adc
stc
pop
xchg
sbb
icebp
xchg
aad
sbb
xor
dec
mov
lahf
leave
lahf
xor
dec
mov
insb
dec
lahf
loop
cmp
push
int3
dec
pop
add
adcl
mov
sbb
mov
pop
cmpsb
add
adcl
lds
movsb
cmpsb
adc
faddl
arpl
scas
inc
test
les
mov
xchg
stos
or
sub
adc
std
scas
pop
fdivp
data16
lret
push
stc
pop
sbb
xchg
mov
fidivrl
out
testb
cs
fistps
add
js
jecxz
cmp
jno
iret
inc
xor
jne
jno
insb
sub
sbbb
lret
mov
dec
repnz
sbb
xor
mov
jmp
imul
daa
repnz
adc
and
leave
or
in
inc
cli
jb
push
sbb
leave
jmp
out
sub
into
data16
sbb
stc
loop
sub
inc
dec
stc
xchg
aad
push
rcrb
sbb
es
leave
lods
push
popa
bound
mov
sbb
aas
cmp
aas
insb
pop
rcr
jbe
cli
xor
mov
cli
inc
in
mov
push
inc
cltd
sub
imul
cmp
sub
imul
ret
xor
incl
xor
xor
ljmp
mov
fcos
inc
mov
inc
push
adcb
dec
push
dec
jb
gs
xor
push
xor
mov
dec
push
inc
xchg
pop
fldt
clc
mov
stos
gs
test
cwtl
and
dec
pop
jmp
imul
jg
sbb
aas
mov
or
mov
jmp
jae
mov
in
adc
insb
mov
out
adcl
decl
cltd
lret
push
mov
dec
in
cmc
ja
adc
mov
ficompl
hlt
xchg
iret
cltd
cmpsb
jne
bound
jecxz
mov
and
lods
push
xchg
out
dec
inc
mov
addr16
ret
incl
xchg
popf
repz
pop
sub
pop
or
jg
sbb
mov
xor
jbe
jno
sbb
xchg
cmp
das
nop
and
les
pusha
popa
push
cli
lret
push
movsl
int
pop
adc
je
pop
ret
or
ret
je
aaa
adc
fnsave
jecxz
xor
mov
pop
ja
push
xchg
xor
cmp
mov
adc
insb
xor
jge
test
cmpsb
jno
and
and
and
in
pop
lods
movsl
lods
fistl
jmp
fidivrl
jl
sub
jnp
cs
ficompl
stos
jno
fsub
adc
or
sahf
jne
xor
std
cli
xor
lods
loope
idivb
inc
ljmp
lret
enter
movsl
mov
repnz
out
inc
or
mov
cs
jl
xor
xchg
push
sub
push
mov
ss
or
mov
adc
ja
loopne
lock
push
mov
or
adc
sbb
movsl
mov
test
jecxz
pop
sub
add
push
cmc
or
mov
cs
clc
ficoml
fimuls
aad
jle
std
lcall
jb
fucom
in
inc
and
push
adc
mov
adc
sbbb
vphaddubq
pushf
lcall
xchg
mov
pop
sahf
mov
inc
icebp
push
mov
stos
inc
pushf
sbb
gs
mov
pop
aad
sub
jle
pop
pop
adc
movl
push
push
push
xchg
jae
out
or
jb
sub
lock
repz
xor
mov
mov
cmpb
testl
addr16
cwtl
jmp
orl
jmp
into
push
adc
mov
xchg
xor
xchg
push
push
cmp
xlat
mov
mov
int3
jp
repnz
in
jecxz
fmulp
out
hlt
xchg
inc
hlt
les
test
mov
xchg
xchg
cwtl
imul
cltd
sti
add
cmp
lock
xor
fsub
and
lea
mov
subl
repnz
mov
sbb
and
and
popa
adc
cld
mov
out
sbb
inc
sbb
je
shll
test
test
add
stc
mov
gs
fildl
aad
inc
test
popf
hlt
push
sbb
out
push
sahf
int
inc
add
insl
mov
out
xor
dec
aam
aad
xlat
xor
and
ja
bound
push
sbb
pop
pop
imul
or
inc
inc
rclb
stos
sbb
inc
fimuls
dec
test
jg
or
sbb
xor
out
adc
sbb
xchg
or
push
test
outsl
and
fmul
call
mov
popa
mov
xchg
jnp
jo
dec
push
pop
mov
or
test
mov
adc
jecxz
out
xchg
jne
mov
sub
xchg
bnd
nop
mov
add
movsb
adc
xchg
cmp
xchg
xor
mov
scas
dec
outsb
mov
adc
jge
dec
push
xor
ljmp
push
repnz
jno
jne
cli
or
xchg
cmc
fnstenv
and
xchg
inc
push
jp
or
push
mov
push
fistps
dec
push
or
loop
jmp
pop
icebp
mov
inc
pop
loopne
sub
int3
outsl
jmp
outsb
lock
push
int
push
cwtl
sub
clc
xor
in
push
in
jnp
in
adcb
pop
mov
push
lods
rcl
sbb
mov
icebp
rorl
pop
data16
mov
stos
shll
orl
adc
or
js
and
mov
insl
dec
decb
ret
addr16
cld
push
inc
adc
das
sbb
pusha
sahf
fisubl
ret
jmp
mov
mov
mov
xchg
outsl
mov
mov
lret
jmp
rol
lods
jg
das
mov
out
cmpsl
ds
push
mov
xchg
mov
fcompl
or
pop
mov
jnp
xchg
ja
push
out
fstl
pop
clc
and
popf
int3
inc
sti
cmp
scas
js
and
aad
sti
mov
dec
icebp
pusha
dec
add
pop
ror
xor
mov
xchg
imull
and
mov
stc
aas
pop
arpl
adc
or
out
repz
fxch
scas
nop
jns
mov
sbb
xor
lret
out
jae
xor
test
xchg
mov
sub
mov
mov
mov
mov
sbb
loop
add
lret
mov
sub
dec
ja
mov
xchg
iret
ret
xor
and
cli
or
sub
loope,pt
lea
add
add
add
outsl
enter
sbb
mov
push
test
clc
outsl
cmpsb
adc
mov
add
pop
mov
fisubs
pop
push
mov
pop
movsb
mov
movsb
lahf
pushf
mov
ret
movsl
sub
and
mov
sbb
mov
sbb
lods
imul
dec
mov
or
and
js
sahf
mov
lret
cmpsl
inc
cmp
adc
push
xchg
aam
lret
outsb
lret
js
adc
and
and
sub
aaa
jb
cltd
loop
add
aam
enter
mov
adc
push
cvttps2pi
aaa
push
stos
aam
orb
lods
imul
test
sarl
jnp
cmp
adc
mov
jae
add
push
and
sbb
push
sbb
sub
cmp
push
sbb
lods
pop
and
sub
jbe
push
std
insb
jns
into
iret
in
push
lock
cmpsb
sbb
sarb
test
jmp
daa
inc
lock
add
mov
std
lods
test
imul
cmp
cld
shrb
and
cld
cmp
lret
inc
inc
scas
add
iret
push
mov
or
mov
inc
into
out
jnp
dec
adc
push
or
ja
dec
lods
xor
push
or
in
ja
imulb
lret
mov
push
mov
arpl
jle
inc
add
xchg
jge
jmp
push
cs
insl
push
fiadds
fucomp
pop
test
insb
gs
xor
loop
xchg
and
stos
and
mov
shrl
xchg
jg
jnp
inc
lret
or
int3
push
fwait
scas
arpl
xor
sub
insb
jo
loopne
mov
add
in
lea
push
cmp
jo
sbb
xchg
cmp
insb
cmp
hlt
clc
xchg
sahf
aad
pop
xchg
and
mov
mov
fwait
or
test
out
xor
mov
mov
add
clc
add
mov
sub
mov
cld
rclb
aaa
lea
dec
xlat
std
testb
lret
jb
mov
pop
cs
ret
mov
sub
dec
or
mov
xchg
loop
xchg
mov
inc
fistl
daa
pusha
pop
add
jns
cmp
mov
out
mov
les
cmpsb
test
fmuls
test
jne
mov
addr16
xchg
jp
fwait
imul
ds
mov
xchg
mov
mov
jge
sahf
or
push
stos
bnd
cmp
mov
jge
push
push
adc
inc
xchg
and
push
xlat
add
hlt
xchg
cmp
lret
and
addr16
adcl
arpl
out
jne
cli
lds
pop
decb
fisubs
push
xchg
cmp
jnp
or
std
xor
lahf
jo
jl
pop
and
pop
jecxz
mov
loop
test
scas
and
stos
jl
fistpll
jge
leave
add
jb
pushf
jns
mov
bound
insl
je
push
sub
inc
xorl
xchg
xchg
fwait
leave
xor
mov
rorl
daa
or
test
aas
inc
js
ja
mov
scas
xlat
add
shll
scas
outsl
inc
push
aam
test
rcll
adc
dec
frstor
aas
aaa
fistpl
jmp
sbb
mov
or
sahf
jl
cmp
les
mov
mov
mov
lock
or
and
nop
xor
mov
pop
aam
push
orb
pop
dec
jo
mov
inc
mov
ljmp
pop
aaa
sub
test
xchg
stos
mov
repz
in
xlat
xchg
mov
mov
cmp
icebp
pop
out
mov
in
jl
pop
cmc
int3
and
sub
cld
bound
faddp
dec
std
cwtl
std
rcll
dec
mov
leave
add
sahf
ficomps
and
aam
push
jne
inc
aas
test
jmp
je
mov
fcoml
stc
xchg
mov
cmp
data16
jae
lods
rcl
lods
ljmp
hlt
mov
das
inc
push
jne
push
iret
adc
sub
lahf
shlb
and
pop
xchg
xchg
sbb
lcall
js
icebp
jno
inc
xor
aam
sbb
add
sbb
popa
pop
inc
stos
xor
cli
es
leave
xor
jmp
inc
cmp
fnstcw
jmp
in
aad
jnp
imul
rolb
sahf
loop
clc
repnz
rcrb
xor
sbbl
fists
fldcw
add
dec
push
pop
add
lds
adcb
icebp
jmp
adc
popf
divl
sub
sbb
stos
dec
loop
mov
in
pop
mov
sub
mov
arpl
std
mov
outsl
nop
data16
sti
xchg
ret
stc
inc
push
dec
dec
sbb
icebp
jl
xchg
lods
enter
mov
xchg
pop
or
jne
mov
lar
orl
jnp
dec
jno
outsl
fldenv
aas
add
mov
sahf
mov
sahf
das
push
sub
and
aas
or
dec
mov
icebp
fwait
popa
mov
jecxz
lods
iret
stc
cmp
and
pop
cmp
call
pop
mov
and
add
subb
movsl
add
fisubrl
cmc
fistpll
inc
repz
or
sbb
inc
sarl
test
in
roll
sub
das
sbb
jbe
xchg
dec
ss
push
fisubl
je
sbb
ret
fs
hlt
cmp
cmc
jne
dec
lds
dec
negl
mov
xorb
dec
sub
daa
fs
test
or
aad
inc
iret
inc
mov
push
push
enter
mov
es
lret
loope
icebp
inc
mov
or
cmpsb
add
inc
andb
jecxz
ds
jns
mov
push
adc
jg
sbb
dec
push
loopne
cmp
push
testb
adc
hlt
xor
pop
arpl
cmp
sbb
adc
sbb
aas
ja
jno
fldcw
lcall
mov
rorb
push
adc
inc
das
ds
inc
mov
test
add
jge
jne
lock
jle
sbb
pop
lock
out
sbb
jae
es
mov
es
cmc
mov
pop
or
and
les
movsb
xchg
dec
and
sbb
jmp
out
cld
mov
mov
aaa
mov
inc
cmc
and
addr16
test
cmp
jb
ljmp
inc
jmp
jne
xchg
jne
jmp
stc
push
inc
cmpsl
outsl
or
addr16
and
lcall
and
stos
dec
pop
fs
jl
pop
adc
xor
xchg
sbb
lods
sar
inc
push
xchg
pop
fs
inc
fistpll
xchg
cmp
adc
dec
jnp
pop
jns
push
jmp
lret
pusha
aad
mov
push
testl
mov
stos
sbb
loop
jns
adc
daa
aaa
gs
loope
inc
lahf
sti
xor
or
push
pop
lahf
inc
push
jne
fsubs
idivb
cmp
fistpll
dec
lock
loope
mov
in
fldl
outsb
inc
sub
xor
lret
loopne
lods
pop
and
movsb
inc
arpl
cli
mov
xor
cld
pushf
sbb
xor
es
iret
repz
loopne
cmpsb
cwtl
dec
jno
sub
lahf
or
adc
dec
das
dec
sbb
mov
pop
into
addr16
mov
shlb
cmp
sbb
sub
jecxz
mov
fdivp
fidivl
xor
sub
insb
jno
xchg
repz
jb
add
movsb
mov
lods
fimull
bnd
inc
outsb
dec
mov
sbb
imul
add
inc
cmp
or
push
stos
push
or
int
mov
cmp
imul
daa
sub
mov
addr16
ljmp
call
mov
push
pop
ljmp
lods
sbb
icebp
call
and
mov
std
dec
enter
jp
insb
in
faddl
fsts
and
daa
mov
call
in
push
dec
mov
adc
or
shlb
and
outsl
dec
dec
mov
dec
cmpsb
test
lods
pop
mov
lret
mov
ret
dec
dec
fs
int
pushf
cmp
gs
cltd
push
xor
cs
es
sub
bound
or
jne
sbb
xor
inc
cmp
mov
fs
sbb
jmp
hlt
xor
cmp
cwtl
in
inc
je
out
jg
je
jno
lods
sbb
sbb
sub
out
jne
mul
xor
mov
std
mov
in
inc
and
and
xor
jae
int
xchg
leave
mov
fsubrs
fadds
cwtl
adc
mov
mov
int3
lahf
outsb
dec
pop
jle
movsb
inc
mov
out
add
jg
sub
into
les
pop
push
ja
pop
push
out
cmp
mov
add
pop
push
cwtl
arpl
lods
stos
rolb
add
fwait
cwtl
lcall
fisubrs
mov
or
lret
mov
pop
dec
imul
popa
daa
jne
hlt
add
fisttpl
sbb
repnz
pop
push
nop
xlat
sbb
xchg
push
or
inc
mov
ds
xor
add
fcmovnbe
cli
arpl
cmpsl
push
jl
ss
iret
stc
es
adc
add
cmc
sub
pand
xchg
aam
pop
roll
addr16
mov
mov
or
mov
sub
and
push
mov
mov
out
std
sub
es
out
and
ljmp
repz
mov
and
pop
cmp
lahf
pop
mov
cmp
mov
jle
sbb
sbb
lock
mov
test
xchg
loope
jle
ljmp
xor
aad
leave
xlat
sub
scas
or
mov
mov
push
fbld
int3
dec
mov
xor
inc
aad
dec
aad
mov
enter
aad
push
or
inc
push
or
push
fwait
in
je
xor
inc
adc
inc
xor
fistl
lcall
stc
sbb
adc
ss
dec
adc
adcl
scas
adc
xchg
clc
push
mov
mov
cmpsl
lret
scas
dec
xlat
icebp
cmc
lret
pop
fildll
adcl
rorb
push
and
mov
xchg
adc
jecxz
pushf
fisubrs
mov
into
sub
jne
std
sbb
lods
push
add
add
mov
outsb
scas
cmpsl
lret
and
std
popf
fimull
test
mov
loopne
push
pop
cmp
mov
nop
mov
aaa
inc
mov
push
jmp
xor
test
add
out
or
inc
int
lock
fsubl
iret
dec
lret
cs
sub
dec
cmp
jns
cmp
push
sbb
ret
dec
adc
jo
cltd
push
lret
popa
insb
je
cmp
inc
add
jne
aam
bnd
adcb
cmp
or
int3
ret
lods
subl
subb
jmp
ficompl
icebp
dec
push
mov
ja
xor
pop
fimuls
mov
push
mov
jmp
fcomi
pop
in
subl
xor
les
cmp
cld
or
xor
scas
bound
lock
and
fdivr
sub
loop
mov
sub
fmull
dec
mov
xor
push
inc
push
xchg
lock
addr16
leave
in
arpl
cmc
sbb
lcall
or
push
into
xchg
mov
fs
aas
cmc
xor
movsb
or
cmp
aas
cwtl
pop
lret
or
out
and
jo
push
insl
rolb
push
inc
cmp
mov
fwait
push
cmpsl
ss
push
cmp
and
aaa
and
push
repz
int3
jbe
xorl
dec
xlat
test
fwait
sub
xchg
and
stos
mov
lahf
xor
push
lock
iret
pusha
mov
clc
sub
mov
cmp
aaa
and
mov
pop
pushf
mov
push
es
insl
sbb
test
xlat
popf
xchg
mov
shl
sbb
cmp
push
mov
ljmp
cmpsb
mov
pushf
push
sub
call
sub
push
in
push
dec
sbb
mov
pop
les
mov
scas
orb
adc
mov
pop
inc
dec
dec
les
fistpl
pushf
arpl
push
mov
sahf
xor
aas
fwait
pop
xor
das
rorb
ret
fsubl
mov
clc
sub
imul
or
mov
xchg
sbbb
xor
insb
jbe
sbb
fstl
and
icebp
in
xchg
xchg
leave
and
dec
mov
xor
fidivrs
xorl
sti
jle
js
in
or
mov
mov
imul
adc
sqrtps
push
add
lcall
jle
xchg
mov
in
mov
test
ret
and
js
inc
outsl
lret
out
xor
outsb
jns
jb
jns
insb
cmp
mov
sahf
cmp
dec
popa
mov
imul
mov
mov
negl
sti
loope
enter
test
jne
xchg
sub
fwait
adc
xchg
sub
jecxz
or
lods
jmp
subb
or
cmp
mov
out
cwtl
das
andb
lock
jge
rorb
xor
cld
push
inc
scas
and
leave
loope
scas
jl
outsl
in
aad
jg
sahf
jecxz
out
inc
ret
and
or
loopne
pop
cld
inc
ret
pop
pop
test
shrl
or
sbb
notl
mov
mov
ficomps
cmp
dec
fisttpl
call
pop
pop
mov
push
push
sahf
ss
push
dec
imul
int3
or
pushf
inc
dec
aad
int
dec
cmpsb
bound
pop
jp
mov
leave
mov
shr
std
and
ficoms
mov
iret
inc
mov
loope
pop
psadbw
sahf
in
aam
repnz
bswap
cmp
test
mov
cmp
cmp
int
ret
mov
dec
add
add
loop
aas
push
pop
js
andb
not
adc
push
loop
and
mov
ss
faddl
jbe
out
test
les
dec
cld
setb
movsl
jnp
lods
daa
mov
mov
pop
pop
xchg
inc
sar
adc
push
inc
test
sahf
pusha
jmp
mov
dec
scas
push
mov
mov
mov
orl
in
insb
clc
push
ljmp
cmpl
sub
or
mov
loope
lea
add
sub
dec
jb
bound
es
in
push
in
xchg
pop
mov
jno
mov
xor
mov
out
jl
arpl
or
and
jge
mov
mov
movl
les
cs
push
jp
fmul
lcall
out
jno
push
sbb
mov
adc
leave
cs
stc
push
sub
nopl
xchg
and
adc
popf
fstl
fistps
jle
add
mov
mov
adc
les
clc
lahf
add
ret
push
inc
xor
iret
mov
push
rcl
pop
dec
cmc
add
dec
mov
push
sbbl
or
or
mov
mov
adc
push
mov
mov
es
in
ffree
fstl
xor
adcb
or
js
in
enter
lea
stos
jae
je
sbb
rolb
inc
std
jmp
std
jge
icebp
lret
cmp
arpl
cs
jp
popa
outsb
mov
pushf
jae,pn
push
mov
aam
iret
arpl
fisubrl
and
out
addr16
aad
dec
pop
sbb
scas
out
mov
stc
sahf
push
pop
ret
jmp
mov
add
aad
sbb
cld
dec
push
arpl
adc
jbe
mov
movsl
decl
sti
aas
loope
in
rcl
add
js
add
adc
cltd
xor
jae
jge
jb
mov
out
or
gs
pop
insl
mov
fsubrl
mov
sub
jnp
xchg
push
fistpl
insb
dec
xor
xor
lret
pop
scas
push
js
pop
add
insl
mov
shrb
leave
adc
add
mov
mov
add
xor
cmp
inc
popf
or
adc
mov
xor
imul
pushf
jle
xor
jne
xor
fistl
out
mov
outsb
mov
mov
arpl
xchg
sbb
test
pushf
cmp
dec
adc
loop
jmp
mov
pop
int3
icebp
nop
outsl
pop
sub
sbb
sub
aad
outsb
or
std
aam
pop
or
push
sub
jae
in
outsb
ret
outsl
popf
pusha
std
dec
pushf
mov
fsubl
popa
cmpl
mov
sub
cltd
jae
popf
add
xchg
dec
loope
xchg
xchg
call
lret
ljmp
jb
sub
mov
inc
sub
jo
out
insb
sbb
pop
push
and
or
mov
pop
nop
stc
mov
xor
dec
push
shl
dec
add
push
xor
out
shrl
mov
scas
clc
pusha
shrl
sbb
jle
ljmp
nop
lock
sub
out
xchg
push
pop
popa
ljmp
and
repz
mov
xchg
and
xchg
pop
lock
cmp
push
push
in
add
jno
mov
les
mov
insb
out
lcall
sub
or
call
in
out
xchg
cmp
fcmovnu
scas
adc
push
xchg
jb
mov
adc
lods
sub
lds
xlat
lret
push
mov
sbb
sarb
xchg
addr16
pop
mov
jle
orl
ret
push
mov
jo
cmp
stc
xlat
or
bnd
xchg
mov
cmpl
lret
fcmove
lret
scas
test
imul
lods
cmp
mov
xor
add
or
push
sub
out
sbb
adc
ret
ds
cmc
pop
xchg
pop
sub
or
subl
outsb
mov
insb
and
mov
push
repnz
jae
popa
pop
out
cwtl
or
sahf
or
cmpsl
pop
sub
fst
testb
testb
adc
pop
and
mov
sub
in
int
std
mov
jo
pop
imul
xor
adcb
movsb
mov
cmp
iret
mov
xor
cmp
stos
mov
enter
jbe
cwtl
sbb
inc
mov
dec
cmc
sub
cmpb
aas
mov
mov
arpl
dec
les
ret
mov
xchg
and
sub
jo
sub
xor
lcall
sub
gs
inc
add
pop
mov
test
mov
sub
dec
popa
mov
int
adc
add
cli
fcoml
cs
mov
aam
iret
je
cmp
push
mov
push
adc
jecxz
jnp
fcom
push
ds
dec
or
hlt
sub
jle
lods
iret
push
jns
add
inc
xchg
mov
lret
jmp
sbb
cmp
sahf
idiv
mov
xchg
pushf
xor
pop
out
movsb
inc
pop
or
push
sbb
push
or
adc
push
jb
rcll
mov
rolb
or
inc
aaa
xor
hlt
lods
repz
idivl
push
movsl
imul
lret
push
std
in
outsl
andl
and
lods
mov
add
mov
pop
mov
int3
mov
inc
sub
stc
das
sarl
cli
icebp
jmp
jmp
shlb
jnp
cmp
negl
mov
push
fwait
lcall
add
cmpsb
sub
leave
lods
cmp
cwtl
cs
je
mov
push
push
sarl
push
cltd
adc
mov
dec
jl
leave
jmp
ret
xchg
add
jle
mov
les
insl
jecxz
cmp
in
iret
adc
add
lods
xchg
push
dec
inc
add
mov
mov
cmpsb
adc
repz
subb
mul
mov
sbb
fcomp
fs
stos
fadds
adcl
inc
sbb
xchg
push
xchg
inc
xchg
nop
adcl
movsl
pop
mov
cmp
nop
push
adc
mov
sub
mov
and
aaa
inc
pop
xor
jb
inc
inc
in
lock
ss
insb
fisubrl
ss
sti
add
mov
outsl
mov
je
and
cmp
cmp
daa
jbe
jge
mov
xchg
dec
sub
add
pop
fsubrs
mov
push
fldcw
push
mov
lcall
mov
out
pop
and
and
mov
push
cmp
ret
shlb
pop
and
jbe
dec
repz
jnp
insl
mov
pop
rcll
rolb
dec
ficoml
mov
mov
xchg
les
mov
mov
sbb
push
or
jbe
xlat
xor
fidivs
sbb
bound
jl
pop
gs
pop
repz
mov
repnz
jnp
xor
int3
jbe
mov
pop
cmp
mov
pusha
gs
orb
jmp
inc
cmpsb
jae
out
add
into
lods
and
lahf
lock
ja
popa
aad
imul
div
xchg
hlt
xchg
mov
push
into
mov
inc
xor
imul
outsl
push
les
movsl
mov
push
ds
fs
jle
test
fsubrs
lods
pop
rcrl
arpl
leave
sahf
push
xchg
dec
dec
ja
incb
push
jmp
leave
cltd
test
jb
arpl
andb
rcll
dec
cmpsl
pop
outsl
inc
inc
dec
repnz
outsb
call
inc
cmp
jl
imul
add
adc
fadds
jp
inc
pop
fcompl
fisubl
xchg
cli
lods
dec
and
rcl
mov
stc
cmp
sub
popa
stos
je
cmc
push
or
mov
leave
out
inc
cmc
mov
jo
push
add
loop
rcrb
stos
sbb
sub
cs
and
fwait
xor
cltd
shrb
dec
aaa
je
shrl
add
xor
and
mov
insb
clc
pop
dec
mov
jg
xorb
jae
jmp
add
cmp
mov
dec
repnz
gs
sub
cmp
rorb
inc
arpl
lock
sbb
adc
iret
mov
mov
cmp
pop
mov
mov
add
add
xchg
gs
cmp
dec
pop
jno
cwtl
ja
cltd
and
test
fwait
pusha
add
add
push
cmpsl
cmc
inc
ss
mov
aas
aaa
in
and
xchg
pop
push
adc
mov
or
stos
pop
sub
mov
mov
sti
sub
mov
adc
jne
rcll
ds
add
mov
dec
sbb
sub
sub
fisttpl
in
sti
mov
pop
popf
jb
adc
mov
es
cli
aam
scas
roll
cmp
je
pusha
scas
imul
leave
mov
outsl
aad
xorl
mov
jb
es
ds
outsl
mulb
xchg
les
dec
inc
xchg
pop
mov
stc
je
adc
push
sub
jo
hlt
fidivs
jbe
or
mov
xchg
lods
call
add
mov
mull
shll
adc
pop
add
ja
lcall
jg
fldenvs
dec
roll
pop
dec
faddl
xor
xchg
mulb
scas
insb
rol
out
cmp
sub
andl
sahf
and
out
adc
or
test
testl
pop
popa
mov
mov
iret
fdivrs
inc
aam
sbb
add
pop
ror
mov
popa
push
imul
lret
lcall
sbb
lcall
jae
addl
lods
or
xor
shlb
xor
mov
sbb
and
cmp
sbb
adc
pop
jle
cwtl
cmpsb
scas
and
or
add
shlb
push
stos
adc
mov
cltd
fst
fsubrl
xchg
adc
bound
mov
lret
push
mov
jbe
addr16
dec
mov
add
stc
add
mov
int
cmp
inc
mov
push
mov
sti
push
push
popa
mov
fsts
xor
mov
xor
cmp
lods
xchg
pusha
inc
inc
out
xlat
add
data16
inc
sub
mov
cld
fnstcw
push
test
sbb
lods
lcall
mov
mov
pop
inc
pushf
mov
jnp
mov
dec
xor
dec
in
mov
dec
fwait
xlat
pop
repnz
shlb
pop
jl
sbb
adc
pop
jns
or
sbb
in
loope
adcl
mov
or
jo
aas
mov
movsl
or
ret
mov
aam
jecxz
mov
leave
es
leave
xchg
xchg
sbb
into
sbb
push
dec
test
data16
mov
add
insl
outsl
mov
mov
push
inc
add
loopne
xchg
nop
sub
mov
jge
fsubs
cmp
cmc
adc
call
in
inc
incl
lods
xlat
sub
sarl
dec
scas
lea
add
sub
inc
xor
add
lcall
pushf
add
into
fwait
mov
sbb
clc
bound
mov
xlat
dec
sbb
sbb
mov
in
mov
mov
mov
mov
sub
push
rcrl
nop
in
icebp
mov
int
daa
mov
mov
mov
imul
pop
ljmp
push
lea
fldcw
rcl
test
scas
fnstenv
push
mov
push
jo
pop
cs
dec
sbb
icebp
inc
pand
stos
fistpll
lcall
pop
dec
inc
faddl
fidivrs
cmp
cmpsb
dec
icebp
mov
std
adc
xor
dec
xor
xchg
lret
es
or
jle
mov
xor
push
xchg
jbe
adc
lods
leave
and
ss
sti
ljmp
pushf
out
icebp
cmp
or
sarl
mov
enter
outsb
jnp
jle
cmp
jae
jno
out
mov
nop
es
add
push
ret
adc
cld
aas
pop
pop
mov
hlt
out
push
movb
mov
lret
inc
xchg
lcall
mov
jo
and
xor
mov
xor
push
push
lods
jle
mov
in
inc
add
not
push
call
push
mov
nop
xor
inc
or
cwtl
pop
loopne
sub
cmp
add
inc
cvtpi2ps
data16
rol
arpl
dec
jl
mov
cmp
std
sub
push
fnsave
adc
cltd
sbb
rorl
repnz
push
arpl
in
loope
xchg
ret
jnp
enter
sub
adc
daa
int3
pop
fmull
stos
iret
sbb
add
pop
mov
cmp
dec
jmp
iret
cmp
jns
pop
movsb
mov
test
sub
sarl
or
icebp
sbb
dec
mov
add
test
mov
int3
fisubl
insl
addr16
push
out
push
stc
mov
cmpl
gs
mov
xchg
hlt
popf
sbbl
xchg
in
mov
data16
fcomps
insl
dec
dec
xor
inc
outsb
arpl
scas
push
lahf
rolb
mov
add
repnz
and
aaa
out
inc
shll
lahf
sub
cmp
outsl
push
mov
and
les
xchg
push
rcr
in
mov
or
out
and
inc
push
leave
fldcw
dec
out
or
jle
scas
cli
mov
xor
nop
or
and
push
mov
das
adc
out
mov
pop
int3
daa
and
inc
leave
mov
and
inc
jmp
dec
mov
jns
mov
lods
dec
mulb
aaa
sbb
sub
pop
xchg
std
bound
sbb
xor
shrb
adc
xor
jl
pusha
sub
je
out
loopne
mov
dec
icebp
add
lods
pop
jbe
push
fsub
lods
ds
or
add
std
cwtl
dec
mov
repz
push
in
int
mov
jne
jle
mov
lods
push
mov
int3
popa
and
and
dec
cs
xor
xorb
sti
sub
cmpsb
push
push
aad
cwtl
push
adc
push
push
cmp
mov
loop
push
leave
xor
jbe,pn
cmp
clc
mov
in
push
add
mov
cli
ja
add
cmp
lds
sti
ret
push
loope
movsb
ja
icebp
lock
in
sub
adc
pop
scas
mov
scas
rolb
imul
sub
cmpb
sub
mov
jle
sarb
enter
adc
orl
xlat
fwait
in
add
cmpsb
or
in
ficoml
inc
sbb
mov
mov
push
das
adc
stos
or
rclb
push
sbb
aam
lcall
push
popw
scas
fwait
dec
testb
inc
popa
xlat
shlb
es
sbb
sbb
mov
push
ds
adc
popf
enter
inc
stos
movsl
xor
outsl
add
sbb
stos
xor
fwait
add
sbb
push
mov
lods
setnp
adc
sbb
push
popf
dec
sub
xor
sub
push
xchg
fadd
mov
lret
xor
ss
or
add
gs
pop
rorb
xor
sti
lods
adc
jno
sub
repnz
in
pushf
inc
data16
lock
xchg
cmp
fistps
nop
popf
mov
loop
subl
insl
fidivrs
cmp
xor
or
pop
sub
adc
shrb
loopne
mov
or
loopne
mov
dec
dec
cwtl
test
cli
pusha
lea
inc
movsb
xchg
xchg
mov
inc
rclb
pop
and
int3
enter
cmp
mov
cmp
mov
call
pop
xor
mov
xchg
inc
jmp
fistpl
cli
jne
andb
sub
dec
stc
outsl
fadds
scas
orb
sbb
js
pop
adc
bound
lcall
outsl
mov
and
inc
mov
cld
jg
push
push
add
fistpll
xchg
out
jb
sub
mov
aad
xlat
movsb
pushf
cmp
mov
push
hlt
imul
and
mov
xor
stc
mov
push
pop
out
outsl
aam
js
add
mov
clc
jb
sbb
call
pop
arpl
mov
pop
out
adc
fs
sub
xchg
fdivrl
pop
ret
xchg
shll
bswap
movsl
or
or
negl
and
lret
leave
stc
adc
ss
jns
pop
mulb
mov
test
cmc
pop
shrl
and
adc
out
lcall
out
mov
xor
sbb
xor
rorl
sub
ja
adc
mov
imul
in
cmp
dec
fmuls
add
xchg
fwait
imul
jg
push
gs
sbb
imul
dec
fisubrs
movsl
sahf
dec
ficompl
lahf
sbb
mov
lcall
cmpl
mov
jg
mov
lret
out
and
add
dec
adc
sbbl
mov
and
cltd
add
neg
jns
mov
loopne
aam
ficoms
sbb
call
jb
mov
pop
test
lret
jmp
jne
lret
outsl
add
fucomi
cmp
sbb
enter
push
outsl
xor
jb
adc
jge
mov
add
or
pop
pop
repnz
rolb
aaa
pushf
je
cmp
sbb
mov
in
mov
dec
push
xor
mov
sub
inc
jecxz
in
dec
mov
arpl
mov
ret
icebp
pop
popf
or
sbbl
shrb
mov
push
lock
fld1
mov
pop
lahf
sub
inc
jbe
hlt
shrb
jo
cmpsb
arpl
jne
dec
mov
scas
dec
test
cmp
gs
or
push
fdivs
cmp
xor
sub
gs
data16
push
dec
cmp
dec
adc
insl
es
xchg
fcomps
jne
sbb
sub
addr16
push
adc
dec
mov
xchg
sub
and
mov
and
pop
inc
adc
test
je
andb
inc
inc
enter
dec
cmc
sub
xor
lcallw
cmp
lahf
adc
stos
testl
ds
shll
out
mov
xlat
adc
cmpsl
cmp
dec
mov
repnz
iret
inc
sub
lds
ficompl
dec
pop
insl
fnstsw
and
cld
inc
stos
fsub
fiaddl
adc
das
idiv
popa
call
dec
pop
stos
movsl
inc
sbb
jae
sub
xchg
rorl
adc
xor
pop
cmp
jp
push
popa
inc
addr16
cld
call
inc
jmp
cmp
jno
cmp
stc
test
jno
sti
icebp
leave
out
cmc
lds
jmp
enter
fstpt
out
pop
imul
dec
insl
mov
mov
pop
jbe
pop
xor
stos
add
mov
pop
jb
and
faddl
imul
and
outsl
scas
test
pushf
js
jg
in
lret
adc
mov
or
in
xchg
inc
xor
out
idivl
jno
jbe
fstp
mov
loopne
out
adcl
mov
xor
aam
cmp
add
insl
sbb
adc
jl
inc
lret
test
movsb
xor
fs
push
push
jb
fsts
outsb
jle
loopne
pop
int3
shlb
js
cmpsl
jg
mov
cwtl
fsubl
pop
subb
xor
scas
jmp
cwtl
xchg
in
xor
jle
dec
inc
dec
dec
adc
mov
mov
inc
mov
mov
aam
pop
cmp
daa
sahf
fdivs
fptan
xor
xchg
sbb
dec
jb
push
aaa
decb
in
leave
ljmp
fcmovne
jecxz
adc
or
jle
mov
jle
push
je
mov
mov
xchg
pushf
ljmp
inc
pop
adc
mov
rcr
loop
ffreep
ret
jp
mov
jo
lods
in
lock
mov
jns
mov
xor
xchg
rorb
inc
in
rolb
mov
xor
aad
xchg
add
mov
dec
push
sub
jge
movsb
jle
inc
or
inc
aad
cmc
mov
popf
gs
cmpsl
jge
xchg
cmp
dec
cmp
jmp
ret
cmp
in
sbb
fimull
inc
or
stc
imul
aam
in
mulb
jne
dec
and
xchg
ds
outsl
mov
push
inc
add
faddl
inc
ja
or
fiaddl
dec
pop
mov
sbbl
sbb
pop
mov
jns
call
dec
int3
hlt
cmpsl
jae
hlt
lcall
gs
xlat
xchg
cmp
leave
mov
nop
cmp
nop
jecxz
and
and
and
loope
inc
dec
fldt
sub
pop
test
xlat
add
sbb
gs
fwait
xchg
and
or
pop
cmp
lds
adc
das
push
push
loop
shlb
imul
cmpsb
int3
cmp
lcall
jnp
roll
push
loop
gs
lds
dec
xchg
fidivl
lcall
jae
push
and
out
mov
mov
jns
bound
or
idiv
sahf
sbb
test
adc
mov
mov
dec
xchg
leave
scas
jl
sbb
dec
std
mov
sbb
sbb
inc
stos
loope
xchg
cmp
cli
mov
sub
iret
int3
hlt
sbb
pop
add
loop
or
popf
push
mov
nop
push
sub
and
mov
jnp
pop
add
pop
xor
add
call
andl
vmovapd
dec
mov
pop
and
iret
out
xlat
aad
and
sub
mov
enter
jb
mov
popf
divb
or
xor
repnz
dec
dec
out
sub
inc
fnsave
sub
js
adc
mov
lret
popa
pop
jnp
cmpb
mov
mov
cmpsl
lock
mov
push
add
movsl
rclb
pop
add
shl
xchg
xchg
xor
popa
mov
sub
dec
ror
fcomi
ds
cvtdq2ps
and
cmpsb
fistl
in
sahf
pop
imul
push
lods
mov
stos
and
mov
popa
sub
jge
mov
mov
sbbb
sbb
adc
mov
in
scas
bound
xchg
into
int
test
leave
adc
outsb
and
in
pop
mov
inc
jnp
cmc
fidivrs
dec
jle
ja
js
enter
in
jo
push
xchg
mov
sbb
addl
sub
scas
push
inc
cld
hlt
mov
dec
sbb
imul
addr16
pop
cli
dec
subl
rcll
js
mov
add
js
xor
and
cltd
pop
cld
mov
mov
fisubs
mov
jmp
and
xchg
call
adc
mov
lods
cmp
xchg
jp
imul
pop
sub
mov
jae
mov
xchg
shr
lcall
testl
dec
loopne
iret
loop
adc
fcmovne
jnp
xchg
jle
mov
inc
jnp
xchg
xchg
and
or
sbb
mov
mov
int
inc
iret
inc
popl
lock
add
int
int3
mov
enter
inc
movsl
add
mov
mov
jns
mov
mov
scas
out
push
adc
test
sub
inc
aas
adc
xchg
sub
mov
jno
xchg
xchg
leave
push
test
inc
iret
in
pop
cmpb
xchg
sub
or
inc
add
cmp
jg
shrb
ret
adc
add
popf
rcrl
mov
push
jl
lods
inc
shl
or
sub
dec
int3
or
ja
mov
arpl
pusha
scas
addl
jbe
leave
mov
add
in
lret
mov
mov
inc
insl
xchg
inc
inc
orb
xor
mov
daa
mov
addr16
pop
xor
add
out
aaa
flds
movsl
mov
jnp
fs
test
mov
sub
xor
sub
push
add
les
mov
inc
jmp
push
adc
nop
std
aad
iret
shlb
mov
jge
nop
imulb
cwtl
add
jge
dec
add
pop
in
inc
ja
pop
and
fisttpl
adcl
fsubl
sbb
mov
mov
mull
sbb
cmpsb
pop
xchg
fistpll
inc
cmp
outsl
loop
repnz
or
mov
mov
jns
jl
jge
xor
cwtl
fidivrs
xor
js
xchg
add
prefetch
out
jp
pop
push
push
push
mov
adc
or
dec
mov
aas
sub
cld
jne
outsb
mov
aad
ss
dec
stc
mov
push
dec
nop
sbb
xor
call
shrb
inc
sbb
sub
push
jno
inc
or
cld
mov
mov
pop
lret
gs
divl
xlat
mov
ret
jle
das
rol
in
fwait
inc
mov
adc
fucomp
flds
mov
ret
pop
xchg
rcrb
lock
and
cmp
mov
or
mov
fcoml
mov
adc
into
jne
jb
mov
rorb
inc
repz
test
and
xchg
add
sbb
movsl
jge
push
cli
dec
fildl
icebp
sbbl
movsl
les
aam
mov
out
sub
xchg
hlt
lock
decl
imul
pop
push
shlb
mov
mov
and
cltd
pop
lods
and
jnp
iret
inc
dec
in
imul
repnz
lods
hlt
ljmp
or
addr16
mov
dec
push
addr16
fildl
out
ret
out
cmpsb
testl
iret
gs
lods
repnz
mov
push
add
test
sbb
shrb
mov
cmpsb
clc
shl
jns
adc
adc
sahf
add
and
out
jmp
push
or
mov
adc
mov
xchg
xchg
mov
stc
sahf
stos
sbb
jge
sub
jg
inc
popa
mov
ficomps
and
repnz
sub
nop
xchg
push
imul
push
or
sahf
movsb
or
idivb
adcb
xor
mov
jno
lahf
push
movsl
push
cmpb
in
into
dec
mov
push
dec
fmuls
cmp
fisubrl
movsb
fnsave
push
pop
lahf
add
cmpsl
fs
lods
xor
inc
cmp
repnz
or
or
push
xchg
fs
lods
sbb
add
inc
je
xor
and
aaa
fdivl
aaa
test
push
push
pop
jb
cwtl
in
push
lahf
movsl
stc
push
and
push
stos
adc
mov
test
out
add
adc
mov
movsb
loop
ljmp
out
push
mov
mov
pop
or
cmpsb
in
sbb
inc
inc
xchg
insb
jnp
or
gs
push
leave
loope
rcll
imul
jmp
popa
icebp
test
mov
aas
jno
sbb
pop
xchg
xchg
pop
ds
shlb
sbb
jno
jp
xchg
lret
pop
xchg
mov
xor
xor
scas
push
popa
jl
cwtl
imul
ficompl
mov
mov
push
add
jge
and
insb
lock
fists
mov
call
in
inc
pop
dec
cmp
stos
loopne
and
cmp
push
ds
repnz
fwait
push
jecxz
movsb
aad
push
leave
mov
mov
push
imul
fiaddl
or
int3
inc
pop
mov
mov
dec
inc
movsl
clc
cpuid
or
push
out
enter
fmuls
lcall
shr
into
jge
mov
shrw
cmpsb
inc
cmp
je
in
fwait
push
fcomi
sti
into
sbbb
push
ss
inc
push
outsb
movsl
mov
lods
arpl
leave
shrb
sbb
insb
out
out
mov
mov
pop
gs
or
xor
dec
lods
or
adc
pop
mov
movsb
xchg
fdivrs
adc
inc
or
in
cmp
add
mov
notl
aaa
dec
or
mov
scas
stos
cmp
int
lcall
push
pop
add
push
push
lcall
cmp
push
dec
push
cmpb
in
das
pop
push
cmp
stos
insl
subb
add
push
inc
lods
jge
sbb
das
mov
push
jns
mov
mov
stc
jmp
inc
outsl
out
inc
or
pop
xlat
fiaddl
jl
lret
lcall
mov
xlat
jo
loope
cmp
test
jbe
mov
cmovne
xchg
push
xor
popf
jb
fwait
pop
data16
jb
fldlg2
mov
and
int3
outsb
scas
cs
outsl
int3
cmc
popa
gs
fmull
shr
fisubl
cltd
jp
shlb
dec
cmp
mov
sarb
cmp
xchg
add
aaa
mov
rcr
mov
or
mov
xchg
nop
sub
inc
xchg
mov
or
popf
jle
xchg
inc
lea
cmp
jmp
aad
dec
in
and
add
fistpll
ss
cwtl
mov
aam
xchg
xor
fwait
add
rolb
add
push
hlt
xlat
mov
cmc
rcl
lret
cli
xchg
mov
std
xchg
pop
iret
jge
inc
xchg
orl
arpl
mov
jmp
push
sub
aas
stc
jp
out
ss
rorb
fidivrs
aam
xchg
cmpsl
or
int3
bound
fistpll
adc
in
pop
pop
and
mov
cltd
xchg
cmpl
popf
jmp
dec
sti
cmp
jbe
dec
out
mov
xchg
add
sbb
lcall
sbb
and
pop
cmp
push
xor
idivw
aaa
xchg
jbe
sahf
jecxz
popf
mov
add
rol
lret
xor
test
pop
sub
into
jg
adcb
mov
pop
dec
add
xchg
adc
lret
mov
repnz
test
jmp
jg
insb
stos
jae
nop
mov
inc
sbb
or
sahf
shl
mov
push
jge
push
adc
adc
dec
push
jg
mov
xchg
jo
cmc
cmpsl
mov
cmp
sub
xor
pop
fidivrl
shll
hlt
adc
mov
xchg
pushf
cmp
leave
add
add
clc
push
in
xor
jg
jecxz
add
aad
test
cmp
sbb
daa
cmc
and
iret
ds
sahf
rcr
cltd
lea
push
test
test
das
inc
ljmp
push
setl
push
jno
mov
ljmp
sub
gs
inc
or
in
addr16
mov
mov
ljmp
cmp
xor
and
std
sbb
push
mov
mov
mov
xchg
test
lahf
sbb
mov
mov
dec
push
lods
xchg
divb
mov
xchg
inc
sahf
add
cmc
and
add
push
leave
fidivrl
roll
cld
lea
mov
or
xchg
adc
pop
in
stc
out
mov
ss
pop
and
mov
lahf
mov
jo
mov
push
inc
push
dec
sub
jmp
movsb
cmp
add
insb
dec
movsb
cmpl
ds
pop
rclb
adc
adc
sarb
sbb
je
testb
add
das
mov
pop
adc
jo
xor
xlat
dec
test
pop
lahf
push
and
xchg
je
iret
mov
cmpsl
adc
movsl
mov
xchg
add
pushf
ss
jb
adcb
daa
pop
inc
stos
das
shrl
lods
and
aad
adc
adc
sbb
test
push
jg
sub
dec
fwait
mov
arpl
push
xchg
sbb
in
xbegin
pop
call
sti
push
jbe
jo
cmc
mov
cmpsb
je
mov
jnp
add
pop
js
mov
cmp
mov
dec
pusha
aam
lods
sub
jl
loope
dec
pop
jle
roll
mov
or
fcomps
dec
jge
cmp
pusha
dec
or
nop
lods
pusha
out
stos
daa
pop
mov
sahf
fsubrl
addr16
jne
cld
and
cs
inc
and
or
xor
xor
mov
into
ljmp
jb
leave
rcr
sbb
imul
and
enter
dec
mov
ja
in
mov
sbb
scas
mov
or
xor
mov
mov
add
inc
mov
xchg
push
push
inc
and
or
xor
xchg
lret
mov
lahf
sbb
out
in
push
lds
pop
mov
jmp
xchg
pminub
repnz
ret
or
xchg
in
aam
mov
mov
inc
add
jne
add
lahf
std
xchg
enter
xchg
or
fdivrl
push
xchg
pop
sbb
jp
das
xchg
outsl
inc
mov
sub
xchg
mov
cmpsl
lock
cmp
outsb
xor
sbb
aad
cmp
mov
jnp
fbstp
repz
xchg
dec
push
aaa
mov
out
inc
and
inc
pop
add
insb
jecxz
dec
adc
inc
pop
mov
xor
leave
push
jno
inc
cmpsb
lret
jo
lods
push
inc
pop
add
andl
add
or
pop
insl
rcll
pop
cmp
gs
adc
js
outsl
stos
and
xor
pop
popa
mov
fs
andb
mov
loope
xchg
in
mov
loope
icebp
add
imul
hlt
inc
cmpsb
test
outsl
nop
imul
testl
and
adc
in
jae
mov
aad
in
clc
xchg
scas
mov
xor
inc
cli
gs
call
cltd
dec
mov
inc
mov
xor
cmp
ja
jg
pop
leave
setbe
xchg
out
adc
xor
and
add
inc
sti
scas
call
adc
nop
or
mov
mov
cmp
movsb
fwait
aad
pop
cld
xchg
cld
imul
leave
in
xor
and
flds
sahf
cltd
sub
scas
dec
in
shr
rcll
push
fistl
mov
jp
cwtl
add
push
in
adc
dec
test
stc
insb
cwtl
out
mov
mov
mov
rcrb
call
cmp
pop
jp
lret
pusha
mov
cmp
jne
addr16
push
mov
mov
fcomp
xor
repnz
dec
xchg
mov
dec
ficompl
inc
mov
ret
xor
pushf
adc
xchg
adc
scas
imul
pop
stos
pop
stc
jp
or
or
fmul
mov
pushl
lods
movsb
or
data16
xchg
adc
add
lcall
and
cli
cmpsb
or
fidivs
mov
out
mov
fistps
lds
loop
and
xor
lds
arpl
dec
stos
jmp
movsl
jecxz
fstl
pop
jns
fstpt
pop
dec
popl
push
faddl
mov
jae
or
into
push
repnz
or
sahf
icebp
movsl
mov
into
sti
inc
ds
jmp
cmp
subb
arpl
push
or
rcr
shll
std
call
imul
sub
adc
rcrl
fiaddl
jmp
imul
mov
in
lcall
pop
fmull
into
xchg
insb
dec
dec
dec
and
sbb
mov
pusha
faddp
push
dec
mov
sbb
mov
push
gs
push
adcl
repz
les
cs
shr
and
add
int
aas
add
sbb
or
adc
outsl
fisubs
mov
cmp
sarb
sub
lcall
loopw
xchg
inc
sarl
scas
into
sbb
enter
add
sub
cli
cmc
inc
shrb
lods
hlt
sub
jl
sbb
std
pop
jbe
das
ss
in
dec
outsl
jg
adc
mov
and
mov
loope
jno
pop
clc
cmp
xchg
push
into
sub
pop
mov
adcb
add
addr16
jno
cltd
int3
icebp
das
cmpsb
in
sbb
or
test
mov
out
cmp
sbb
stos
and
enter
pusha
call
and
push
ja
fisubs
fsubrl
inc
xlat
pop
pop
js
mov
push
sub
sbb
mov
and
pop
xor
mov
pop
inc
or
sti
push
fcompl
xchg
xor
and
cwtl
pop
bound
mov
insl
into
dec
and
mov
and
xchg
scas
mov
dec
out
repz
sbb
sbb
mov
xchg
addr16
jmp
push
or
mov
or
adc
pop
aaa
fstpt
jl
or
lods
mov
int
jo
std
loop
pop
movsb
add
mov
xorl
jp
push
xor
push
sti
ret
sub
xchg
dec
xor
sub
push
daa
mov
xchg
adc
out
cmp
mov
insl
leave
mov
mov
push
daa
das
jb
shr
ja,pn
aad
icebp
adc
adc
fbstp
xor
jno
inc
sbb
mov
mov
push
fmuls
arpl
mov
sub
ljmp
sbb
pop
pop
outsb
sub
mov
std
aam
or
jmp
pop
popa
cmp
pop
aad
bnd
dec
lret
and
iret
js
xchg
xor
cld
mov
outsb
sbb
pop
sbb
sub
popa
decb
mov
shrb
jge
test
rolb
in
xor
data16
add
lods
mov
or
xabort
rorl
inc
dec
pop
js
push
loope
daa
dec
xor
aad
outsb
ret
fs
lock
xchg
hlt
push
mov
sahf
mov
movq
mov
mov
jo
cmp
push
or
pop
xchg
loope
rorl
stc
out
aaa
adc
fstl
sbb
pop
push
sub
inc
and
pop
adc
cmpb
and
pop
push
testl
and
and
mov
sub
stos
imul
or
jmp
xchg
adc
hlt
push
cmp
and
cmp
xchg
xchg
into
sub
mov
xchg
jg
mov
out
pop
xchg
out
push
push
pusha
lcall
ljmp
jecxz
test
ret
popa
mov
xor
ljmp
adc
or
test
inc
sub
icebp
mov
xchg
inc
jo
xchg
loopne
lock
cmpsl
push
clc
int
lcall
push
cmc
gs
jl
aam
mov
or
sbb
pop
aad
xor
xorl
mov
jecxz
cltd
cwtl
sbb
scas
stos
mov
pop
add
andl
iret
inc
sti
orl
or
cmp
loope
cmp
dec
mov
dec
out
cld
aaa
inc
cmp
andb
movsb
aas
test
add
push
jne
stos
jp
pop
aas
call
xor
clc
outsl
dec
mov
out
pusha
push
jo
lods
jae
push
mov
cwtl
outsb
aam
pushf
movl
adc
dec
or
xlat
bound
pop
sub
es
dec
mov
dec
aaa
jb
fsubrl
sub
add
xchg
and
addl
js
and
jo
lea
inc
and
mov
je
push
test
lods
inc
push
aam
sbb
nop
jb
xchg
mov
flds
mov
ret
dec
sar
hlt
enter
mov
sti
in
jecxz
push
sub
mov
out
mov
ljmp
jl
and
jbe
xor
xor
lods
data16
sub
hlt
jle
popa
in
fwait
mov
jge
fmull
xchg
pop
lods
pop
push
sbb
cmp
and
je
in
pop
cmp
dec
jg
pop
jnp
xor
adc
xchg
out
mov
aad
xchg
test
mov
inc
je
inc
xor
or
jp
jp
and
stos
icebp
insl
mov
clc
leave
pop
xor
repnz
ja
test
insb
es
cltd
prefetch
jecxz
aaa
pushf
int
push
aaa
mov
xor
fldt
jmp
mov
and
push
int3
mov
aam
add
fidivrs
mov
dec
mov
mov
mov
xchg
xchg
cmp
out
stos
xchg
insb
push
add
xchg
jnp
dec
push
fsubs
inc
lahf
cmp
push
test
cmp
pop
decl
and
cmpsb
rcrb
sub
mov
frstor
stc
popf
loope
xchg
pop
scas
sub
fldenv
leave
jl
jge
pop
mov
daa
inc
mov
out
iret
mov
push
in
addr16
mov
jecxz
and
lea
push
mov
push
xor
addr16
cmc
in
mov
mov
or
cld
arpl
int
cltd
cli
xor
imul
movsb
imul
rcll
shr
jecxz
jmp
mov
pop
push
dec
jle
dec
xor
push
movsb
ja
inc
adc
dec
shrb
add
into
adc
mov
sub
loope
cmp
lret
icebp
fmul
imul
push
dec
mov
int3
sbb
insb
mov
cmp
xchg
test
xlat
jmp
rcll
cmp
mov
aaa
lock
cmpsb
hlt
push
add
lret
sbb
aas
pop
cmp
ficompl
cmp
pop
or
mov
lcall
mov
aas
push
sbb
cmpsb
push
pop
fiaddl
shlb
mov
repz
loopne
cmpb
cmc
popa
adc
pop
int3
loope
adc
lret
fucomp
mov
imul
movsl
sbb
dec
pushf
and
sbb
out
mov
into
insl
fmul
sub
jae
push
xlat
jge
in
pop
clc
dec
lret
in
mov
lea
pop
xchg
fsubrl
add
pop
xor
mov
mov
les
out
jbe
dec
pop
stos
aas
insb
and
sub
icebp
loop
xor
mov
xchg
shlb
stos
sub
sub
mov
sahf
pop
xchg
jae
out
int
out
out
mov
inc
in
pop
push
jp
xchg
lcall
test
xchg
sub
sbb
push
mov
and
arpl
dec
jmp
pop
cmp
or
push
or
sbb
es
mov
mov
cld
cmp
mov
clc
ret
adcl
hlt
loop
ljmp
icebp
add
fcompl
adc
add
packssdw
ds
cmc
add
jge
inc
lcall
sbb
lahf
xor
test
lds
sub
adc
stc
and
test
pop
sub
adc
sub
jmp
add
dec
inc
ror
call
fcoml
cltd
push
mov
pop
mov
jns
push
xchg
add
idivb
sub
test
dec
fwait
shlb
aam
mov
popa
cwtl
aam
popf
pop
arpl
pop
push
jl
xchg
dec
adc
pop
ret
fnstenv
test
xchg
mov
add
push
jle
sar
adc
xor
push
fbstp
pop
sub
leave
jns
int
jge
movsb
cmp
aas
add
arpl
fcomp
or
push
cld
lds
das
fbld
jge
imul
ror
mulb
sub
adcl
pop
fstpl
sbb
hlt
dec
or
stos
cwtl
into
je
jo
shrb
mov
mov
mov
mov
je
cmpsb
icebp
cltd
jae
dec
dec
popf
dec
mov
stc
lods
lds
in
ljmp
push
sbb
sbb
fcoml
mov
imul
pop
mov
xor
jecxz
outsl
out
fs
and
mov
cwtl
lea
dec
adc
outsl
lock
push
push
mov
inc
sub
and
sub
stc
scas
pop
mov
add
icebp
xchg
or
and
lea
mov
outsl
sar
mov
cmc
cld
xor
inc
xchg
sbb
decb
xchg
or
xchg
cmp
or
cli
xor
dec
xor
fdivrl
sbb
xorl
das
sub
jns
cwtl
sti
loopne
mov
in
sbb
pop
rcrb
mov
inc
data16
js
ret
adc
inc
imul
arpl
sub
cli
out
or
xchg
loop
push
test
test
imul
dec
pusha
icebp
sbb
ja
jnp
push
fwait
inc
pop
xchg
or
jns
fdivrl
gs
xchg
mov
jo
shrl
or
pop
aam
pusha
inc
divps
pop
call
adc
sbb
pop
std
dec
xor
pop
pop
into
cmp
imul
push
add
adc
das
or
aas
lret
pop
dec
add
pop
dec
rorl
push
cmp
push
mov
inc
rol
fisubs
fnstsw
push
lods
or
dec
sbb
and
pusha
nop
or
fimull
or
stc
std
jne
add
cmp
sbb
popa
loop
aad
jb
clc
inc
sbb
cmp
out
outsb
repnz
pop
into
dec
roll
cltd
mov
shll
es
and
fcmovne
inc
mov
aam
adc
leave
inc
dec
insl
mov
mov
inc
add
loopne
out
pcmpeqw
es
push
in
dec
ja
fs
push
es
insb
mov
mov
in
push
repnz
jp
mov
and
cs
lods
mov
mov
enter
sub
add
out
cltd
sbb
jge
cwtl
pop
test
into
mov
cli
inc
insl
sbb
mov
mov
jmp
dec
pushf
and
sahf
aam
subb
xchg
xchg
or
ljmp
mov
std
dec
add
sub
loop
add
sub
out
xor
push
arpl
inc
in
jno
movsl
lcall
xor
loopne
mov
loopne
mov
lcall
jl
cld
mov
popf
lods
test
pop
imul
ljmp
in
lds
inc
jb
jo
mov
loope
sub
xchg
sarl
iret
aad
inc
scas
es
and
mov
in
pusha
pop
stos
inc
cmp
sub
pop
sbb
sti
icebp
cmp
fldenv
clc
mov
cmovns
lret
call
push
push
lret
jb
fs
dec
mov
and
pop
iret
icebp
xchg
and
xchg
xor
movsb
out
negb
mov
cmc
jecxz
idiv
in
les
das
cmp
push
mov
ja
xor
sbb
sub
insl
int
cmp
popf
mov
mov
pusha
fwait
or
add
fstpt
mov
imul
jbe
jb
jp
dec
imul
mov
xor
pusha
daa
inc
cmp
adc
jp
loope
adc
sbb
mov
rol
xchg
daa
mov
jmp
stc
dec
or
cmp
add
hlt
cmp
shll
sar
and
sbb
push
loop
cmp
jg
dec
inc
loope,pn
outsb
jmp
xchg
cmp
pop
mov
xorb
mov
mov
xor
fnstcw
popa
fnstenv
push
fcmovbe
sub
adc
out
call
je
sarb
add
ss
outsb
stc
mov
jo
inc
xchg
imul
sub
push
call
jo
mov
fs
or
ret
inc
jne
sbb
push
pop
dec
rcll
jno
or
movl
outsb
xchg
jmp
push
mov
repnz
mov
inc
testl
push
pop
push
aas
inc
pop
sub
xchg
lock
and
jns
cmp
in
add
cltd
push
les
sbb
dec
movsb
xchg
xchg
test
inc
inc
jae
nop
scas
add
xchg
xor
xor
stc
jl
push
lea
adc
xchg
xchg
cli
pop
iret
lock
push
push
push
push
sub
adc
je
stc
call
into
xchg
mov
les
mov
rcr
sub
pop
sub
loop
sbb
push
mov
call
push
jnp
xchg
cmpsb
pop
add
xchg
jae
je,pn
xchg
dec
hlt
ret
mov
out
aaa
push
int
sarb
and
xchg
andl
es
lea
daa
jnp
dec
insb
call
jbe
push
fcomp
cltd
sbb
pop
lcall
mov
cmpsb
outsl
or
push
xor
call
add
cwtl
cli
cmp
or
xchg
push
or
mov
lds
enter
inc
ficoml
jecxz
rorb
sahf
jmp
mov
inc
nop
sub
cld
push
mov
jge
push
lods
mov
mov
push
inc
shr
push
inc
mov
or
cltd
cmp
out
inc
sbb
xor
add
mov
pop
sub
inc
lock
jp
mov
ss
sub
jae
push
mov
or
add
ds
mov
sahf
scas
xchg
cmpb
adc
fwait
add
push
out
ss
push
sub
aas
call
ficoms
cmp
xchg
daa
and
dec
fst
repz
andl
push
mov
sub
shl
push
pushl
and
push
sbb
mov
dec
loop
xchg
jge
dec
mov
mov
sbb
push
fbld
jo
daa
xor
sub
mov
push
mov
icebp
rcll
fdivp
pop
xchg
pop
ficompl
daa
stos
outsb
sbb
push
push
enter
dec
insb
sahf
lahf
xor
xor
adcb
lods
pop
add
dec
mov
pop
movsb
mov
aam
add
mov
fidivl
into
jmp
loop
adc
int3
andb
pop
push
leave
aaa
daa
call
roll
adc
pusha
adc
mov
pop
lcall
jmp
or
mov
dec
xlat
loop
mov
xchg
push
fnstcw
pop
sbb
imul
ds
and
mov
mov
adc
stos
mov
xor
inc
jmp
jg
pusha
push
and
mov
push
aas
std
xchg
test
mov
icebp
fistpl
int3
pop
sbb
mov
jmp
lock
mov
leave
or
jns
sbb
mov
sti
mov
mov
cmc
xchg
sub
cli
lods
divb
inc
jns
sbb
iret
pop
into
pop
xor
xchg
pop
inc
sarb
mov
adc
add
jp
cmp
stos
sbbl
leave
ficompl
fwait
jb
shl
repz
outsl
inc
jne
in
sbb
push
sbb
lds
jae
xchg
rcrb
pop
das
xchg
ret
jmp
and
leave
icebp
xor
inc
jo
xor
outsb
dec
fwait
mov
inc
sub
mov
mov
sub
fistps
clc
pop
rcrl
dec
sub
pusha
and
loopne
cli
jae
sbb
gs
nop
mov
mov
sub
or
loop
das
pop
cmp
mov
and
mov
aas
mov
dec
cmc
int
xchg
push
mov
mov
lds
adc
out
rep
jp
pusha
fucomip
notl
pop
gs
icebp
cld
dec
in
sub
pushf
xchg
xchg
test
pcmpeqb
xchg
out
pop
mov
inc
sub
lcall
hlt
pop
pop
test
std
je
movsl
je
pop
jle
push
mov
cmpsb
sbb
popf
and
mov
mov
inc
pop
test
inc
xchg
mov
pop
jno,pt
push
into
sub
aas
lods
push
je
lea
push
inc
ss
orl
or
test
and
in
jne
xor
cltd
js
push
fsubrs
into
out
or
outsb
test
and
cmpsl
lret
bound
jo
dec
dec
mov
negl
mov
pop
flds
lock
pop
jecxz
jns
cmp
push
outsl
fs
imul
jbe
fwait
mov
sub
ljmp
push
cmpsl
roll
and
cmc
cmp
adc
mov
bound
sbb
push
pusha
cmpsb
sahf
data16
push
mov
outsb
negl
das
mov
xor
je
adc
pop
in
pop
add
xor
out
les
push
lret
imul
jae
movl
sarb
daa
push
push
aam
push
movsl
pop
inc
cli
mov
nop
xor
xchg
or
sub
sbb
test
pop
xchg
jle
pop
popf
addb
cmp
je
pop
add
and
fdivrs
and
out
cmp
inc
pop
fiaddl
bound
popf
std
rol
aaa
mov
leave
outsb
clc
mov
mov
movsl
fcompl
pushf
out
repz
cwtl
nop
rcl
xlat
aaa
push
pop
aas
lahf
les
addr16
and
cltd
leave
test
mov
scas
movsl
add
cld
cmp
sub
dec
sub
push
jecxz
xor
fsubrl
jl
js
das
push
or
mov
jge
cmp
sahf
mov
add
push
or
xlat
aaa
ljmp
lret
or
imul
in
aam
jae
dec
iret
ds
imul
stc
xor
xor
inc
outsb
fmuls
adc
iret
mov
scas
mov
lret
xchg
sbb
clc
inc
addr16
neg
sbb
add
sahf
lret
loopne
mov
cmpl
fistl
mov
dec
push
mov
mov
dec
xchg
sbb
vdivpd
outsb
scas
cmp
loop
movb
lods
aaa
pop
mov
shlb
test
out
repnz
sti
loope
mov
lea
test
mov
fidivl
push
push
xchg
out
jbe
sti
cld
imul
in
sbb
test
pop
aad
sbb
stc
lea
xchg
rcll
xchg
clc
jb
cmp
mov
or
ret
add
mov
aaa
addb
les
clc
aaa
mov
pusha
scas
inc
sahf
push
rcrb
jne
repnz
mov
jbe
adc
push
lcall
cmp
pop
pop
cmp
test
mov
or
sub
fucom
movsb
aas
xchg
ficomps
fists
roll
out
adc
lods
push
inc
cmp
mov
adc
mov
push
dec
sbb
and
hlt
loope
gs
mov
push
ret
sbb
xchg
pop
scas
push
inc
push
xlat
call
inc
jae
stc
cs
and
xchg
pop
push
ds
leave
je
cmp
ss
push
or
cmpsb
outsb
ds
cmp
xor
mov
imul
mov
push
inc
dec
in
dec
mov
insb
pop
in
fs
xchg
jbe
cs
xor
lea
mov
sub
push
sub
insl
outsl
xlat
mov
pmullw
or
xlat
sbb
cmp
xor
push
xchg
inc
das
mulb
push
add
pop
int
fcmovnbe
add
jecxz
cmpl
inc
loopne
cmpsl
push
fwait
xor
outsb
mov
test
stc
test
mov
mov
jae
jo
nop
sbb
add
cmpsb
mull
push
cmpsl
inc
mov
in
jo
aaa
ljmp
xchg
sarb
icebp
jno
dec
icebp
int3
pop
jle
inc
daa
sbb
mov
outsl
test
sub
loopne
repz
add
or
jmp
ret
in
pause
repz
fs
ret
rcrl
pushf
mov
push
push
add
cmp
cmp
xchg
scas
sbb
cwtl
mov
inc
cmp
iret
stos
add
pop
push
leave
mov
xchg
pop
mov
push
add
and
fsubs
sbb
inc
stos
jecxz
push
mov
mov
add
das
push
imull
shrl
add
jge
dec
dec
or
or
sbb
adcb
or
scas
out
cld
lock
mov
adc
xor
enter
sub
addr16
std
mov
jmp
push
sbb
and
out
imul
mov
and
or
pop
ret
in
adc
outsb
mov
lret
sbb
pop
fs
mov
pop
lret
push
or
sbb
jecxz
out
dec
jecxz
in
fstpl
or
sbb
adc
jmp
cmp
inc
push
add
jnp
cs
in
fbstp
mov
mov
jecxz
sub
xor
add
andb
mov
or
mov
jns
jno
outsl
rorl
nop
mov
mov
jge
imul
imul
xor
enterw
repz
cmp
es
pop
mov
out
enter
push
pop
dec
cwtl
push
push
push
jne
andb
aas
sbb
imul
inc
jb
jo
mov
mov
movl
add
lock
pop
insl
and
in
arpl
mov
enter
push
lds
adc
fisubrs
cltd
lods
jno
insb
bound
push
int3
jno
jmp
ret
lds
xor
imul
arpl
pop
adc
lods
stos
mov
inc
push
nop
popf
test
xor
imul
cwtl
mov
xor
xor
fiadds
pushf
cmpsb
cmp
pop
inc
in
das
dec
sub
filds
popf
push
dec
mov
out
pushf
mov
neg
vpaddusw
and
pop
or
pusha
mov
and
sub
mov
mov
push
pop
push
push
push
add
test
mov
mov
scas
test
add
shll
cld
push
insb
push
stos
xchg
in
sahf
mov
xorb
pop
pop
xor
sbb
sbb
pop
adc
pop
in
mov
insl
jecxz
xlat
mov
lods
ljmp
stos
adc
orb
mov
pop
mov
inc
decb
push
jecxz
jns
and
mov
iret
leave
or
outsb
add
push
mov
cmpsb
xchg
inc
cmpsl
mov
inc
fisubrl
jmp
mov
stos
lods
adc
pop
shl
rsm
in
pop
jecxz
add
mov
adc
shrb
xorb
xchg
inc
jl
add
shlb
pop
nop
mov
sti
add
xchg
mov
push
mov
fwait
pop
imul
cmp
sub
clc
xchg
gs
dec
lcall
bound
rclb
in
out
repz
xchg
mov
ljmp
xchg
xlat
cmp
sub
xor
ret
push
leave
jno
in
cmpsb
xchg
shrw
cmp
mov
ucomiss
xor
cmp
fnsave
xorl
pop
mov
xchg
fimuls
insl
fnstenv
es
jne
stos
pop
test
out
xchg
inc
mov
std
icebp
add
push
aas
or
fcoml
ret
jecxz
jmp
mov
push
sbbl
jns
xchg
xor
out
mov
xchg
xchg
sbb
je
ror
jecxz
bound
dec
push
or
mov
mov
lods
add
lcall
jp
jno
sbb
popf
add
push
lods
call
pop
xchg
int3
rolb
xor
test
mov
ret
jae
sbb
xchg
pushf
jmp
adc
push
jo
add
inc
lret
sub
pushf
jne
or
xlat
jecxz
push
aas
mov
fildll
push
adc
inc
add
mov
into
lahf
cmpsl
aam
cli
add
adc
xor
dec
xor
dec
filds
mov
jae
sahf
add
enter
clc
and
mov
mov
mov
ljmp
int
cmc
mov
scas
cmc
es
mov
pusha
leave
mov
lds
inc
inc
leave
movsb
dec
sub
cs
js
shlb
test
jnp
es
jp
mov
xchg
sbb
stos
mov
js
std
js
pop
fcmovne
je
in
gs
pop
cmp
mov
mov
mov
fxch
fisttps
xor
mov
pusha
jnp
mov
lahf
jmp
pop
jo
add
mov
and
push
mov
cmpsb
cmp
dec
in
test
les
or
xor
sbb
cld
or
mov
imul
mov
aas
cmp
mov
int
mov
dec
sbb
sbb
int3
or
mov
call
sub
cli
data16
inc
dec
sbb
insb
push
lock
xchg
imul
mov
test
mov
outsl
addr16
mov
hlt
dec
mov
cmp
mov
pop
mov
cmpsl
pop
push
pop
mov
and
pusha
imul
movsb
inc
xchg
jg
cmp
cmp
add
mov
gs
jno
mov
fsubl
lods
sarb
xor
loop
jl
je
jo
enter
xor
push
xor
jge
dec
mov
push
add
insb
adc
rcrb
je
xorl
mov
mov
sub
pop
sub
into
add
cmp
and
xchg
mov
rolb
ljmp
mov
push
sarl
dec
mov
xor
pushf
push
cmp
int3
mov
sub
call
js
jmp
out
nop
and
aad
call
les
mov
xchg
adc
lods
xorb
insl
repz
pop
ja
mov
test
scas
xor
cs
pop
or
jb
jo
and
add
mov
dec
push
das
cltd
pusha
fisttps
in
dec
or
cmp
sti
jbe
sub
xor
cli
mov
push
iret
nop
es
pop
jge
ja
sar
fsubp
lods
cmp
sub
add
in
out
shl
jo
mov
fs
mov
ret
lahf
and
mov
ret
mov
adc
push
das
hlt
in
scas
lods
push
stos
mov
dec
and
adcl
jo
xchg
in
inc
test
rolb
std
cld
push
lock
adc
and
nop
mov
in
xor
xchg
pop
cmc
sbb
js
dec
addr16
cmc
lahf
add
hlt
mov
negl
bswap
mov
andl
mov
sub
scas
jo
xor
test
aaa
add
jge
jb
fs
sbb
loopne
data16
fstpt
mov
testl
pop
push
xor
stos
insb
in
push
aas
xchg
sbb
xchg
lds
cmp
rcll
jbe
inc
mov
push
mov
inc
shr
addr16
xchg
aaa
cmpsb
fwait
les
add
cmp
cmp
push
test
js
into
push
pop
adc
cmc
shrb
mov
inc
lret
jbe
inc
xchg
insb
xchg
or
jecxz
cmp
fucom
pop
pop
loopne
addr16
aaa
in
adc
push
rorb
inc
sub
push
add
test
aas
pop
cmp
jp
mov
jmp
add
fnsave
sti
push
daa
add
in
xchg
xchg
sbb
and
inc
pop
cmp
sub
mov
js
sbb
out
sbb
rorl
int3
ds
xor
loopne
and
adc
out
leave
nop
fcoml
sahf
aad
dec
sti
lock
and
les
jns
pop
push
jne
dec
hlt
mov
dec
and
xchg
fldl
pop
loopne
mov
add
mov
bound
fistpll
ret
int3
fwait
and
and
push
shrl
pop
xchg
add
inc
jmp
int
mov
shll
jbe
les
lret
xor
mov
rorl
aad
fmuls
xor
out
cmp
adc
pop
fistl
push
loope
lods
sbb
adc
inc
xchg
inc
aas
idivb
push
ret
mov
call
or
rorl
addr16
mov
and
mov
mov
inc
fisubrl
add
fcom
bound
xor
std
inc
jg
jne
shr
subb
xor
xchg
fldl
jge
aaa
jge
and
jl
rcrb
and
jg
aaa
gs
xor
in
jg
add
jecxz
in
pop
sub
or
jl
aam
sub
add
cld
lock
lea
xor
les
push
fstl
loope
mov
out
push
sub
xchg
popf
lock
push
int3
outsb
mov
add
mov
scas
adc
mov
in
add
mov
pop
cmp
fwait
subl
test
insl
dec
inc
sub
inc
mov
sarl
cmc
cmpl
sbb
mov
test
call
xor
xlat
test
xchg
jns
lock
nop
jne
mov
dec
outsl
pop
xor
pop
das
pop
in
sbb
popa
addr16
pop
and
mov
pop
adcl
lahf
pushf
imul
mov
push
loopne
shrb
stos
pop
rcrl
pushf
ljmp
dec
push
push
adc
out
mov
sbb
rorl
or
test
jnp
cmpsb
orb
in
sbb
mov
into
fcom
or
mov
stc
in
bound
outsb
add
in
cli
int
daa
xchg
xchg
pop
jl
lods
and
pop
mov
loopne
jbe
cmc
cmp
and
and
jmp
jo
xchg
jge
mov
adc
cwtl
xchg
ficoms
mov
fcomps
pushf
or
movsb
lea
xchg
sahf
lods
push
inc
sbb
mov
inc
lcall
mov
mov
out
sbb
mov
testl
std
jl
cmp
pop
or
aam
ljmp
lahf
dec
orl
xlat
ds
inc
outsb
outsb
push
or
in
push
data16
into
das
clc
popa
mov
stos
test
mov
jae
insl
loop
pop
les
adc
xchg
xor
repnz
sbb
bound
int
sbb
fdivrl
out
lea
xor
pop
cwtl
orl
dec
lock
rclb
mov
mov
imul
and
test
ja
xchg
sbb
mov
dec
fs
mov
and
and
fnsave
fs
cmpsl
add
push
pop
sub
cmpsl
mov
cmc
jns
arpl
dec
cmp
dec
cmp
imulb
leave
int
bound
jmp
es
xor
testl
imul
mov
sbb
mov
add
in
push
int
mov
rolb
sbb
scas
lods
in
pushf
push
fdivrl
bound
mov
xchg
icebp
xlat
out
adc
jmp
jne
jns
dec
loope
hlt
movsb
xor
ds
or
jbe
jp
std
leave
daa
stos
sub
rolb
sahf
out
jae
dec
shlb
jnp
les
iret
mov
dec
mov
dec
cmp
ds
or
or
xor
jecxz
add
dec
in
jge
mov
in
xor
cli
mov
jbe
pop
xchg
xlat
out
jge
mov
cmp
fistpll
out
call
dec
sub
mov
push
mov
cld
loop
add
cltd
loopne
adc
inc
fdivrs
mov
jl
dec
push
dec
mov
push
sbb
fucomi
mov
push
jnp
push
ret
mov
movsb
jmp
push
add
pop
aad
cmpsl
push
adc
sbb
dec
jns
lods
ret
mov
rorb
cmpl
sahf
jmp
cli
mov
icebp
jo
or
jmp
push
xor
and
cmpsl
scas
and
jl
lahf
adc
imul
popa
xchg
push
push
inc
fs
sub
cmp
lahf
pop
int3
and
test
mov
rclb
inc
rorb
pop
scas
in
mov
pop
movsb
jbe
aaa
or
xor
in
out
sub
pop
out
pop
mov
ja,pn
cmp
cld
movsb
div
mov
push
test
lahf
out
rcrl
push
xchg
add
scas
aad
shl
popf
cmp
xchg
mov
adc
js
pop
dec
jbe
fidivl
pop
in
test
jne
sub
daa
scas
mov
sub
int3
dec
xchg
mov
popf
out
nop
cs
shll
adc
dec
out
fmulp
xchg
mov
mov
jo
and
jbe
data16
es
dec
jbe
and
jp
repz
push
push
es
inc
ja
negb
xor
push
push
cltd
cs
sbb
inc
xlat
mov
shll
or
inc
mov
push
fcmovnbe
xchg
push
lahf
das
fiaddl
test
lods
and
xor
imulb
rcl
mov
inc
push
pop
xchg
das
pop
mov
add
pop
mov
dec
loopne
pop
ret
jge
pop
daa
sbb
mov
cwtl
pusha
mov
nop
mov
add
inc
mov
mov
repz
push
into
dec
iret
mov
cmp
mov
xlat
rorl
mov
cld
cmp
dec
pop
out
cmc
xor
fidivrs
cmp
divl
lahf
lret
and
stc
in
mov
pop
xchg
lea
movsb
in
cltd
scas
int3
ds
outsl
call
lcall
mov
mov
pop
into
sbb
scas
inc
jp
in
out
lds
negl
sbb
gs
adcl
int3
pusha
push
xchg
mov
or
xchg
aad
and
fdivrs
cli
popa
cmp
imul
mov
fistpl
mov
popf
in
push
pop
jle
outsb
mov
pushf
addr16
ljmp
faddp
cmpsb
stc
mov
repnz
pop
and
mov
push
or
push
mov
add
jbe
xchg
pop
jmp
sbb
outsl
ljmp
push
jl
mov
or
push
add
or
xor
xchg
outsl
or
lea
jb
in
pop
jb
iret
pop
and
inc
jae
and
into
push
add
ljmp
push
push
aaa
stos
lret
and
aad
mov
push
pushf
jp
clc
and
roll
sub
jle
shlb
scas
lods
das
jecxz
movl
pop
sub
and
cltd
rcrb
pushf
outsl
cwtl
inc
sbb
vandnps
daa
inc
add
jg
loopne
xchg
and
cmpsl
cmpsb
lcall
inc
xor
add
mov
scas
les
mov
cmp
lret
cmpsb
cmp
stos
dec
insl
dec
rep
xor
sbb
cmpsl
jb
out
cmc
lds
mov
or
test
int
push
movb
stos
mov
scas
int
lahf
mov
sub
je
push
stos
loop
inc
mov
or
push
inc
in
js
nop
dec
mov
xor
and
or
mov
cmp
mov
add
push
jo
lcall
arpl
pop
ljmp
mov
lds
add
les
add
pop
pop
jp
out
add
add
cmpsb
mov
pop
jl
sbb
mov
rol
or
mov
mov
out
mov
insb
dec
jbe
sbb
enter
mov
mov
out
rclb
jae
jne
shll
xor
test
xchg
xchg
test
mov
sbb
adc
das
or
cmpsl
imul
pop
and
push
cmp
cmp
in
lahf
and
sub
xchg
ss
loope
xor
sbb
fildl
rorl
mov
pop
dec
loope
test
test
mov
mov
dec
loope
iret
push
dec
adc
xor
popa
lcall
jge
popa
inc
cmp
xor
mov
jbe
mov
scas
jle
loopne
cld
jge
ss
dec
adc
push
sub
test
mov
jg
leave
push
pop
mov
cs
les
jg
out
sub
xor
lret
cli
dec
xor
fstps
in
imul
xor
pop
pop
and
ss
pop
xor
jle
ss
fcompl
popa
mov
aad
sbb
fnstcw
lahf
andb
inc
lahf
aas
adc
rorl
sbb
xchg
or
jp
xor
insl
out
repnz
imul
pushf
cmc
mov
push
arpl
faddl
out
andl
dec
xchg
cli
xor
test
aam
fdivrs
in
adcl
arpl
inc
mov
push
lret
cmp
imul
push
mov
insb
hlt
ret
scas
inc
nop
xchg
inc
mov
cmp
xor
mov
adcl
outsl
mov
jbe
clc
pushf
roll
into
pop
int3
out
mov
sub
xor
mov
mov
js
push
push
lahf
push
mov
push
stos
mov
cltd
dec
popa
in
gs
lcall
outsl
jo
mov
add
mov
xchg
inc
lcall
ret
jge
subb
jge
jge
dec
lret
outsl
xor
mov
mov
or
push
mov
in
call
cmpb
cmp
xor
lods
mov
jnp
mov
aam
jmp
add
jle
push
push
ds
shlb
dec
in
fs
mov
or
sbb
ljmp
int3
push
lock
pop
test
cmpsl
fisubl
fdivl
sub
cld
jmp
pop
cltd
fildl
in
mov
push
aad
xchg
mov
cltd
or
sbb
and
cmpsb
add
scas
push
ffree
cwtl
ficompl
test
in
out
pusha
cmp
and
fcmovnbe
mov
mov
xor
dec
xchg
jg
jb
fisttpll
cmp
add
xchg
orb
push
dec
push
imul
orb
mov
mov
in
cmpsl
fisttpl
inc
mov
mov
fstpt
push
jb
cmpsl
std
lcall
push
add
xchg
add
aad
dec
aam
sub
loop
es
mov
stos
fs
and
jle
pop
xor
loopne
xchg
sub
inc
sub
mov
xchg
dec
scas
loope
inc
push
or
dec
cmp
stos
push
insb
pop
adc
cmp
ja
hlt
push
repnz
cmpsb
scas
in
sub
xor
fcomps
in
xchg
pop
adc
ljmp
jno
adc
outsl
shrb
push
imul
out
xchg
fdivrs
add
enter
fwait
icebp
repz
jge
ds
inc
mov
jb
sbb
xor
pop
adcl
mov
sub
mov
inc
fdivs
int
mov
pop
and
or
popf
push
pop
rcrb
scas
lods
out
cmovge
lods
notl
sbb
mov
in
outsl
xchg
je
loopne
sub
push
adc
gs
int
mov
pop
lahf
gs
aam
leave
test
es
or
cmp
pop
inc
fs
shlb
into
dec
popl
es
mov
xchg
and
adcl
movsb
es
cmp
lds
lahf
push
int
cwtl
jae
push
imul
dec
cli
mov
inc
imul
sbb
xchg
pop
pop
push
fiadds
stos
cmp
push
fstl
ja
mov
dec
test
dec
and
push
shl
pop
xor
xor
dec
mov
push
xor
insb
sahf
add
add
push
and
sub
arpl
xchg
lock
cmp
sti
or
pop
cmp
or
rorl
fwait
outsl
cltd
mov
pop
or
adc
sbb
jmp
push
sbb
mov
adc
outsb
rorb
jne
jbe
mov
mov
inc
out
mov
push
cltd
icebp
ja
push
orl
decl
ss
xchg
jbe
repz
ja
nop
in
iret
pop
cltd
in
mov
mov
pop
pop
dec
sub
les
loopne
test
or
fs
sbb
sub
pop
fs
lcall
sub
mov
ret
js
mov
mov
lods
add
sub
daa
loop
push
fcmovbe
js
andl
push
lock
lret
lods
cld
sub
and
and
or
std
es
inc
mov
xchg
fwait
cmpsb
subl
cmp
rcrb
inc
xchg
jmp
pop
adc
sbb
data16
dec
dec
mov
push
orb
xchg
ss
adc
sub
bound
inc
push
movsl
dec
in
jo
lock
fstpl
xchg
loopne
cltd
stc
fldenv
leave
push
push
inc
cmp
sub
or
mov
stos
out
insl
popa
xchg
pusha
insb
jo
leave
mov
pop
xchg
sub
mov
test
sub
sbb
mov
push
xchg
cmpl
shrb
out
pop
xorl
es
push
call
fcompl
xor
imul
cmp
movsl
jle
inc
movzwl
nop
add
mov
dec
pop
sahf
push
sbb
aaa
jno
nop
sti
ljmp
add
xchg
jae
repnz
enter
aas
hlt
stc
sahf
cmp
cli
xlat
push
dec
lds
test
enter
add
jns
iret
aaa
mov
lea
jno
add
sbb
loope
xchg
mov
adc
inc
jmp
aaa
push
mov
jbe
dec
mov
pusha
rclb
mov
dec
test
pop
pop
std
sahf
add
popa
loop
andl
les
push
xor
mov
cltd
test
push
sub
lret
inc
xor
xchg
lcall
aas
arpl
jg
insb
or
pusha
xlat
int
je
sub
push
mov
fwait
lea
cmpb
or
lock
cmp
icebp
cmc
pushf
push
nop
nop
jle
push
imul
inc
jo
imul
and
cli
cld
lea
insl
xchg
sti
outsb
cwtl
lcall
dec
fbstp
or
mov
dec
iret
xchg
test
aad
dec
and
add
inc
movsb
and
dec
push
sti
les
push
lods
xchg
loopne
rol
decb
outsb
scas
cmp
jge
cwtl
or
fcomps
lret
dec
out
mov
mov
cmp
inc
jge
cmp
jp
xor
mov
or
xchg
cli
or
cltd
jno
jecxz
and
and
nop
mov
xchg
je
dec
dec
inc
stos
lahf
push
in
fs
ss
mov
jg
in
shr
in
lret
pop
push
repnz
pop
popl
sub
cltd
sub
test
push
mov
dec
jle
mov
addb
scas
lret
add
mov
leave
ss
dec
or
int
jne
push
xchg
loope
pop
lcall
mov
pop
mov
pop
cmp
popf
sbb
cmp
push
iret
inc
pushf
mov
adc
or
jne
dec
aam
movsb
mov
ds
sti
jge
inc
adc
addr16
fistpll
add
stos
cmpsl
scas
push
cmp
insl
fwait
test
xchg
fidivrs
loop
mov
push
insb
xor
loope
shrb
mov
movsl
cmp
fnstenv
pusha
leave
dec
mov
mov
enter
pop
out
iret
neg
bound
ss
or
mov
scas
mov
mov
lret
jle
repnz
push
jl
mov
push
sti
insl
and
mov
ja
popf
imul
mov
xchg
insb
ljmp
fs
adc
xchg
ja
jnp
or
cmp
call
in
and
or
movsb
cmc
shlb
inc
cmp
add
and
jne
ljmp
mov
mov
fidivrl
lret
pop
enter
mov
outsl
inc
or
dec
negb
and
rclb
mov
in
adc
mov
push
pop
mov
fstps
sbb
int3
and
es
pop
add
or
int3
leave
cmc
jae
mov
out
inc
cmpsb
pop
sbb
call
js
add
pop
mov
mov
in
mov
add
clc
sbb
dec
dec
icebp
lds
inc
sbb
nop
sbb
roll
shrl
xchg
sbb
outsl
pushf
ss
enter
dec
leave
arpl
push
jl
loope
out
sbbl
xchg
and
adcl
fs
and
pop
push
cmp
lock
mov
test
cmc
les
sub
dec
xchg
pop
ficomps
inc
enter
dec
lock
iret
cwtl
in
dec
xchg
popf
out
out
fdivl
sbb
pop
mov
jns
and
inc
xchg
lahf
or
cld
pop
pop
adc
fdivrp
sarl
add
repnz
push
jb
xchg
das
test
sub
xchg
sbb
test
jnp
cmp
mov
or
fidivrl
dec
push
repnz
das
mov
dec
push
ret
adc
or
hlt
adc
push
pop
insb
xchg
push
cmovb
pop
mov
mov
push
sbbl
xadd
enter
and
push
mov
fldenv
or
cmp
data16
and
jmp
pop
inc
aaa
xor
stc
or
mov
xor
shrb
jno
push
dec
adc
jp
imul
rorb
mov
dec
cmp
rol
pop
subb
cmp
rolb
mulb
rcl
scas
jns
dec
xchg
jmp
scas
mov
jb
andl
icebp
shll
pop
push
fstp
push
jmp
push
sbb
sarb
inc
dec
rcr
add
jp
add
or
repnz
or
push
inc
xchg
cmp
dec
push
das
push
mov
sbb
adc
or
shlb
jmp
leave
addr16
int
inc
lahf
cli
jecxz
mov
adc
rclb
xchg
jg
sub
sub
out
je
xchg
sarb
sbb
insl
mov
lds
std
xchg
pop
xchg
bound
cld
mov
xchg
sub
adc
test
lahf
mov
add
scas
testl
jo
fucomi
and
mov
shll
je
mov
mov
jns
scas
stc
or
or
adc
jmp
ss
cli
jecxz
add
stos
in
faddp
out
test
push
aas
mov
jbe
stc
shrl
dec
mov
scas
in
pop
outsb
test
das
push
mov
xorb
negl
or
mov
jae
addl
stos
stc
pop
outsl
imul
pop
fidivl
inc
scas
cmpsb
dec
scas
imul
cli
pop
or
adc
sub
xchg
sub
cwtl
mov
xor
xchg
sbb
popa
daa
adc
or
push
push
sub
xchg
jne
loopne
pusha
or
xor
sbb
fcomip
movl
sub
lret
push
fcmovb
push
pop
insl
push
test
arpl
fmuls
shlb
mov
pop
mov
daa
sbb
push
mov
and
pop
fiaddl
shl
and
pop
pop
add
adc
sar
sbb
xchg
andb
lods
push
loop
test
pop
xor
and
aad
mov
cwtl
inc
jecxz
lahf
mov
mov
outsl
xor
cmp
jbe
icebp
mov
xchg
pop
scas
loop
push
sbb
lret
mov
push
call
icebp
ja
jns
xchg
inc
js,pt
dec
inc
repnz
inc
out
fdivrl
mov
ss
adc
sarb
pop
mov
cltd
sub
inc
cmpsl
pop
cld
xchg
cmp
push
sbb
test
mov
or
push
loope
lcall
aad
les
sbb
stos
mov
xor
cwtl
mov
roll
lret
sub
or
data16
sbb
adc
out
adc
mov
push
fsubrs
xchg
daa
stc
or
popf
jns
mov
test
movl
sub
xlat
mov
xchg
mov
xlat
nop
push
sarb
mov
sti
add
or
mov
rorb
cmpsb
adc
cmp
jo
ja
test
xchg
fisubrs
icebp
jbe
fsubl
scas
aad
aad
rclb
mov
mov
in
shlb
outsl
inc
adc
cmpsb
xchg
and
pop
imul
aas
cmp
dec
xor
xor
or
add
inc
pop
enter
mov
push
int3
leave
ljmp
xor
addr16
or
push
idivb
loop
add
stos
sbb
adcl
dec
dec
mov
xchg
adcb
hlt
loopne
cmp
jmp
inc
jmp
and
dec
or
test
rcrl
sub
jmp
push
xchg
push
mov
ss
mov
add
jnp
add
hlt
sub
scas
sbb
ret
imul
lods
push
nop
outsb
out
jge
movsl
push
or
cmp
jle
jle
jl
push
mov
inc
sub
push
mov
lret
sub
mov
je
flds
test
lock
inc
adc
push
mov
inc
out
jbe
call
inc
das
jmp
and
or
shl
mov
loop
and
mov
ret
imul
inc
xchg
aaa
fs
push
push
shrb
xor
cltd
adc
adc
in
mov
jo
add
jo
xchg
and
fistps
xchg
xchg
imul
mov
imul
sub
call
push
dec
repnz
mov
push
mov
sbb
mov
pop
stos
jo
mov
pop
ss
sub
ret
xchg
sub
sub
mov
sbb
cmp
in
lods
add
cmp
mov
sbb
fbld
mov
sub
push
push
jge
jae
cmp
pop
push
out
mov
mov
and
scas
or
imul
or
lahf
mov
scas
pop
enter
add
movq
rcrb
ret
jb
cwtl
frstor
push
in
scas
dec
cwtl
cmp
pop
cmp
js
cmp
mov
fwait
push
mov
jne
mov
fstl
maskmovq
imull
adc
fst
lock
call
idiv
addr16
cltd
dec
out
in
xor
sbbl
fdivs
xlat
lcall
fs
mov
xor
or
cmc
stos
pop
cmp
and
inc
imul
gs
dec
andl
ret
fucomp
push
nop
subl
xchg
scas
ficoml
inc
dec
mov
lcall
fmull
enter
gs
neg
pop
lret
jp
xlat
aas
rclb
das
mov
test
mov
hlt
stc
cwtl
add
cld
mov
aam
jl
loop
gs
jbe
je
cmpsb
pop
xor
or
xchg
sbb
dec
mov
add
mov
test
popf
sub
stos
movsl
shlb
mov
call
mov
icebp
repz
mov
and
mov
and
out
lods
mov
movsb
mov
shll
daa
ja
shll
das
or
push
sub
insb
call
mov
in
inc
nop
xchg
mov
ds
xchg
add
xchg
add
es
mov
xchg
inc
jbe
orl
jl
mov
int3
scas
push
into
sbb
lret
imul
sarb
hlt
pop
inc
rorl
into
sbb
mov
in
pop
adc
repnz
dec
mov
arpl
xchg
out
mov
pop
incl
jecxz
xchg
mov
dec
arpl
sub
aam
jecxz
in
cltd
pop
sub
les
inc
cmpsb
es
rorb
ds
rcrl
insl
out
loope
dec
jp
pop
or
sub
jl
push
sbb
lea
insl
adc
les
mov
sbb
ret
xchg
dec
inc
ja
imul
shl
xchg
push
inc
dec
cmc
pusha
cld
ja
push
daa
adc
clc
and
bnd
inc
pop
movsl
cmpsl
dec
insb
mov
pop
loope
in
dec
pop
mov
jp
mov
inc
push
loope
add
mov
shrl
shll
jmp
stos
cld
xor
sub
and
adc
call
aas
aas
cmp
insb
sti
hlt
int
lret
jl
lcall
mov
pop
jae
sbb
dec
ljmp
fnstsw
adc
movsb
mov
lock
pop
xchg
xchg
mov
xor
lahf
mov
lret
arpl
mov
call
mov
cli
xor
add
xor
or
popf
mov
test
daa
sbb
in
sub
sub
repz
fwait
pop
xor
stc
sub
xchg
mov
dec
pop
fsubrs
inc
aad
int3
fsubrl
mov
pusha
fistpl
xor
jo
pop
movb
imul
mov
aad
push
push
dec
jne
movsl
subl
hlt
lds
out
dec
fwait
jge
popf
add
sbb
arpl
mov
xchg
pop
movsb
mov
sbb
xor
sub
insl
mov
mov
stc
mov
xchg
aaa
or
or
xchg
mov
test
sbb
xchg
push
cs
daa
movsb
mov
sarl
outsl
outsl
and
jno
bound
dec
rcr
mov
mov
jge
mov
lcall
repz
sti
pusha
push
in
cmp
jmp
and
mov
push
or
mov
push
or
repnz
in
pop
call
dec
popa
mov
lahf
cmpsb
xor
inc
or
push
sahf
rcrb
cmp
lods
cmp
lret
add
fldcw
stc
je
pop
mov
testb
and
mov
scas
dec
mov
xor
mov
push
push
fdivrl
das
decb
cmpsl
adc
mov
cmp
dec
xor
push
repz
push
shl
fmul
icebp
inc
pusha
dec
mov
mov
lea
mov
pop
inc
sbb
cmc
rorl
out
dec
inc
push
or
rolb
dec
and
pop
jbe
push
lret
jecxz
push
xor
nop
cmpsl
cmp
pop
iret
stos
test
je
pop
dec
scas
jmp
cli
loop
push
inc
dec
sti
sbbb
shlb
hlt
outsl
xor
rcll
mov
mov
jo
jecxz
jbe
add
or
adc
daa
clc
into
inc
out
subl
dec
test
xor
push
inc
xlat
outsl
scas
xlat
xchg
out
xor
adc
outsl
pop
ja
popf
xchg
outsl
xchg
pop
inc
in
and
enter
mov
mov
push
adc
mov
xor
add
add
and
ret
fldenv
icebp
sarl
les
movups
jae
shrl
cltd
jmp
lds
sub
or
jbe
scas
ficoml
cmp
divl
sub
movsl
mov
call
insl
mov
imul
inc
mov
in
dec
cmp
fstpt
sbb
mov
hlt
leave
cli
divl
add
jnp
jg
outsb
add
mov
mov
aam
pop
lds
daa
je
js
or
ret
mov
pop
ret
inc
push
cli
mov
ret
and
sub
or
or
xor
xorb
or
jmp
ljmp
rcl
push
mov
scas
orb
inc
sti
in
fwait
add
scas
roll
and
mov
xchg
ja
addb
lcall
repnz
inc
inc
push
test
pop
cs
in
mov
iret
imul
mov
sahf
sbb
fadds
clc
dec
sub
cmp
rep
ss
push
dec
ja
popf
in
push
jo
sbb
fistpll
push
bound
stc
xchg
test
les
mov
and
or
jecxz
ds
daa
xor
lahf
lahf
jb
mov
hlt
andl
jle
cltd
pop
mov
bound
push
adc
jno
outsl
dec
dec
adc
mov
test
adc
cli
loop
ss
cmp
xor
sbb
push
lea
inc
sbb
inc
sahf
lods
sbb
adc
dec
stos
out
std
mov
push
dec
cld
mov
push
inc
sbb
insb
add
jecxz
inc
repnz
mov
push
xchg
or
push
repnz
pop
into
mov
into
ret
mov
add
mov
and
xor
cmp
rclb
sub
push
cld
jns
push
sub
mov
ret
pop
or
pusha
stos
js
fnstcw
sub
inc
or
xchg
mov
mov
sub
out
cmp
and
lcall
negb
aam
out
push
in
dec
mov
cmp
cmp
pushf
test
mov
sub
or
je
fdivrl
pop
mov
pop
imul
jle
pop
sahf
aam
scas
pop
loopne
les
shrb
nop
xchg
loope
adcb
dec
sub
and
pop
cld
ficomps
xchg
inc
pop
mov
push
cmpl
bound
cmp
ret
mov
sbb
lret
jbe
scas
sbb
mov
xor
push
ja
push
fnsave
sub
cmp
hlt
bound
cmpsb
leave
xchg
lahf
dec
xchg
aam
pop
sub
divb
mov
insb
sbb
loope
fstps
fisubrl
repnz
jl
xor
pop
popf
sbb
pop
nop
pop
inc
jns
hlt
cltd
test
arpl
adc
mov
shr
pop
xchg
sbb
sub
mov
mov
fistpl
add
mov
lock
dec
ror
mov
test
push
mov
mov
or
inc
sub
in
xchg
mov
mov
xchg
in
push
mov
inc
pop
pusha
mov
cltd
stos
repnz
das
dec
cltd
sub
push
daa
xchg
cs
testb
push
inc
enter
jg
mov
xor
scas
adc
cmp
insb
pop
inc
icebp
lret
push
dec
lods
bound
and
sub
push
outsl
mov
add
mov
or
stos
jmp
add
gs
fmulp
mov
mov
icebp
lods
pop
cmp
fistpl
daa
push
lcall
xchg
jne
push
nop
xor
fiaddl
dec
cmp
mov
jbe
clc
loope
mov
pushf
imul
pushl
push
and
or
mov
pop
sub
icebp
jg
dec
jle
push
xor
jns
cmp
jo
lods
xchg
pop
jmp
cmp
sahf
push
xor
inc
idivl
pop
mov
std
pop
outsb
dec
fcomi
shll
popf
inc
int3
mov
pop
loopne
cmc
call
ror
sbb
int3
divl
sbb
leave
jo
and
rorb
into
pop
cs
cld
ret
cwtl
nop
add
pop
hlt
push
pop
cmp
popw
mov
mov
stc
mov
dec
push
xor
inc
lret
mov
xchg
out
mov
xchg
js
mov
mov
sub
cld
pop
or
or
mov
xchg
jo
ss
sub
cmp
fsubrl
or
cmp
xchg
xorb
jnp
icebp
popa
movsb
lods
xchg
test
inc
xor
lret
mov
add
pop
dec
mov
mov
push
mov
or
rol
ss
xchg
icebp
push
push
pop
push
imul
pop
test
popa
fidivrl
push
mov
inc
idiv
cltd
ret
xchg
in
inc
dec
jmp
insl
and
jl
das
jmp
ds
cltd
aas
push
ljmp
mov
iret
rcrb
mov
inc
mul
xlat
rclb
aad
push
out
sub
xor
sub
mov
out
jl
ss
sti
daa
fldcw
nop
out
mov
nop
jle
in
stos
jecxz
mov
and
xor
cs
pushf
sbb
fistl
xor
repnz
push
dec
cli
mov
sub
sub
aam
cs
popa
cltd
sti
cmp
icebp
shll
dec
xor
mov
sbb
pop
xor
repnz
and
or
cmp
mov
lods
xchg
sbb
cs
jmp
mov
and
jae
shr
push
jge
cwtl
ss
sbb
sahf
aad
cld
shll
test
cmp
lahf
in
int3
dec
insb
or
and
jns
sbb
inc
jmp
sbb
jo
punpckhdq
ffree
aam
cld
or
adc
fcompl
out
xchg
mov
cmp
inc
movsb
push
adc
popa
test
lea
adc
sub
adc
xor
adc
popa
shll
add
test
cmp
jg
aaa
or
mov
mov
lds
fucomip
movsl
mov
aas
ljmp
std
or
push
icebp
push
nop
sbb
mov
cmpl
jo
add
pop
inc
jmp
lods
pop
rolb
pop
cmp
gs
push
mov
pop
sar
xchg
fdiv
es
enter
in
lds
insl
lret
mov
inc
aad
je
mov
das
mov
mov
push
adc
cmp
lret
jg
lock
test
ret
pushf
fdivl
mov
xchg
rcr
icebp
jl
cmc
or
cld
dec
adc
push
test
xlat
idivl
scas
shlb
xor
imul
test
sahf
daa
xor
or
outsb
pop
stc
sbb
test
std
fstpl
insl
adc
sbb
jge
rcrb
aad
pop
push
es
mov
sarl
xlat
hlt
xchg
faddl
aas
xlat
lds
jno
popa
iret
and
popl
xchg
inc
mov
enter
cmp
in
es
mov
push
mov
push
jbe
and
dec
and
sbbb
shl
les
jp
dec
mov
aad
sbb
loop
pop
or
inc
pop
enter
stos
int3
pop
lea
pop
in
or
test
xchg
je
inc
push
mov
arpl
push
mov
or
pop
push
bound
stos
mov
adc
daa
mov
jmp
cmpsb
pop
rcr
fcoms
das
ja
aas
mov
cld
lea
loop
or
pop
cmp
nop
jmp
and
sub
dec
fsubl
add
push
out
xchg
daa
or
stos
fwait
leave
mov
jp
stc
psrlq
add
clc
sbb
xchg
out
mov
xchg
fildll
jns
cmpl
cmc
or
jne
fmuls
xor
enter
or
xchg
pusha
and
sub
mulps
mov
inc
xchg
xchg
add
adc
shlb
loopne
scas
mov
dec
mov
dec
or
popa
iret
popf
pop
mov
movsb
cmp
or
jb
ret
cmp
add
dec
leave
jle
xor
movl
add
loopne
pop
jmp
pop
mov
cwtl
inc
jns
mov
mov
mov
inc
call
cmp
sbb
jmp
xor
and
xchg
fstpt
into
cltd
and
jne
pop
fwait
loopne
ds
mov
pop
or
loopne
adc
test
in
in
int3
pop
outsb
mov
lds
xchg
fistps
cmp
push
cmp
pop
ja
out
test
xor
fwait
call
insb
and
shrl
adc
andl
jge
les
cmpl
pop
incb
push
xlat
and
and
inc
fcmove
and
in
icebp
insb
fdivl
add
fisttpll
and
out
fs
mov
push
sub
ret
cld
jg
pusha
fisttpll
dec
and
mov
out
adc
subl
loopne
clc
mov
aas
push
stos
dec
xchg
xchg
fdivr
sti
adc
loop
dec
test
jle
and
push
test
add
or
jb
mov
shlb
fstps
int3
mov
leave
jle
inc
mov
test
adcl
jmp
addr16
or
mov
pusha
xor
pushf
sbb
xchg
xor
scas
std
loop
pusha
int
dec
xchg
dec
xchg
xlat
leave
nop
cltd
out
inc
or
stos
mov
and
push
negb
lret
push
imul
or
push
push
lods
test
jnp
shll
ror
sbb
addr16
enterw
das
pop
and
movsl
out
decb
insl
mov
add
out
adc
in
mov
je
mov
je
dec
mov
mov
cli
aas
pusha
std
ficoms
mov
cmpsb
xchg
popa
mov
leave
mov
fnstenv
stc
dec
push
fisubrs
push
inc
xchg
cmpsl
les
call
mov
cmpsl
dec
loop
inc
or
out
xorb
or
or
push
lret
inc
cmp
lds
mov
jle
jne
inc
dec
ds
gs
aas
sub
pop
stos
ja
icebp
aam
pop
jg
mov
int3
sbb
cmp
pop
push
mov
dec
sbb
xchg
imul
xchg
mov
cmpsl
jge
xor
paddq
pop
repnz
fdivp
or
lock
xor
xorl
sub
repnz
or
leave
adc
push
jae
dec
fiaddl
cltd
dec
jbe
cmp
jns
lret
xchg
jb
sub
bound
adc
mov
sub
out
xchg
push
push
mov
jp
sahf
dec
in
daa
scas
fimull
jg
cmp
lods
xor
jo
mov
data16
cli
xor
les
and
lods
popa
inc
ficoml
jns
mov
xor
jnp
daa
inc
inc
dec
je
jle
mov
rclb
movsb
addb
es
push
loopne
ficompl
test
orb
test
ljmp
popa
mov
sti
sti
push
pop
sbb
push
push
je
and
mov
mov
add
xor
push
jns
add
leave
fistpl
ftst
jbe
loop
adc
pop
pop
pop
leave
xchg
mov
aam
sbb
and
jno
loope
adc
pusha
and
sub
out
mov
mov
and
cli
xor
subl
rcrb
fiadds
add
lahf
mov
adc
or
push
xor
in
cmp
aam
mov
ds
push
mov
pop
mov
insb
fimull
jno
dec
cmp
cmc
clc
popf
xchg
and
subb
pop
ss
adc
jb
sbb
push
test
adc
lret
inc
in
addr16
movsl
lock
idivl
lds
rolb
imul
cmpsb
jp
adc
or
mov
or
fiadds
xchg
and
or
mov
ds
push
fildll
gs
adc
inc
cmp
pop
ja
xchg
outsb
dec
es
lods
mov
dec
loop
lods
test
pop
cmp
mov
das
enter
mov
and
push
imul
scas
push
inc
jns
out
roll
sti
pusha
stos
aaa
aas
clc
xor
js
cmc
popa
les
pushf
out
xor
or
or
mov
loopne,pn
cmp
js
sub
std
jge
inc
cmc
mov
and
mov
cmp
cli
adc
leave
shll
loopne
dec
pop
mov
dec
add
mov
out
cli
mov
ret
dec
mov
inc
mov
clc
sub
jg
mov
fs
fsubp
in
jg
nop
add
les
or
insl
rorb
das
loopne
xchg
mov
arpl
xchg
jmp
ljmp
int
inc
test
jmp
push
cmp
pop
pop
and
and
in
lahf
and
notl
ja
stos
aaa
aas
aad
add
inc
shlb
std
mov
cwtl
roll
pop
ret
sbb
test
sbb
xor
dec
out
sub
xor
mov
outsl
outsb
lahf
cmp
jae
mov
mov
insb
adc
idivl
je
cwtl
adc
ljmp
stos
mov
jno
aad
popa
lods
xchg
pusha
or
xor
mov
cmp
jns
out
xchg
das
sbb
xchg
adc
push
movsb
movsb
or
push
and
repz
pop
push
mov
outsl
and
out
push
shrl
cmp
cmp
mov
jg
imul
sub
scas
sub
jnp
das
xchg
iret
mov
in
jne
into
cmp
xor
das
sbb
adc
mov
push
adc
add
jecxz
sub
movsl
int3
push
pop
lret
cmp
add
jmp
ss
xchg
pop
push
push
aas
sub
mov
je
cmpsl
sbb
pop
xor
pop
sbb
mov
inc
mov
nop
add
jae
pop
xlat
adc
cmp
xchg
cmp
imul
add
mov
push
mov
cld
xchg
popa
pop
gs
cmp
subb
je
js
add
mov
js
or
xlat
or
popl
not
es
dec
jb
repnz
xlat
cmp
cli
sub
std
leave
sub
icebp
stos
pop
inc
jmp
repz
add
push
dec
mov
xchg
data16
scas
sbb
jp
mull
xchg
adc
mov
fstpt
jg
loopne
cmp
mov
out
or
mov
je
cltd
dec
pop
inc
dec
mov
jne
stc
jb
aas
mov
pop
and
dec
addr16
jb
or
cli
sub
lret
shr
sbb
mov
arpl
ss
sub
scas
and
xor
lods
xor
test
xor
cwtl
shrb
aad
mov
add
xor
lods
xchg
jne
movsl
imul
test
fadd
xchg
subb
sbb
push
ds
lds
push
sub
pushf
testl
insl
nop
dec
nop
inc
push
call
jmp
pop
ret
popf
rcr
mov
jne
jl
roll
adc
jnp
sti
mov
mov
inc
pop
push
mov
inc
xor
fs
pop
and
push
xor
inc
popf
xor
popa
fld
xchg
add
pop
xchg
xor
inc
mov
or
ret
mov
andl
subb
dec
sub
pop
cld
in
repz
or
negl
divb
pusha
jne
xchg
inc
vsubsd
clc
adc
push
frstpm(287
xchg
ret
jmp
rcl
test
movsb
vorps
pop
pop
jbe
cmp
cld
fists
aam
repz
pop
ret
aam
mov
shlb
out
test
inc
push
test
shlb
push
mov
or
xor
iret
jo
sub
cmp
pop
negl
cmpsl
xorl
sbb
mov
dec
sarb
dec
adc
das
lods
mov
sub
sub
cmp
popa
jae
test
and
or
xor
lcall
adc
inc
loopne
pushl
cmpsb
cs
sub
mov
push
xchg
mov
idivl
fsubrl
lret
jp
cmc
fmul
push
loope
cld
sub
sub
test
push
cmpxchg
push
in
jmp
sbb
inc
lock
fsubs
clc
lahf
cmpsl
cmp
fcmovnbe
mov
sub
sub
shr
xchg
pop
js
push
mov
insb
inc
pushf
mov
mov
or
inc
sahf
pop
dec
mov
clc
inc
push
addb
xorb
push
mov
cmp
int
shr
jecxz
and
jge
rolb
pop
mov
outsb
add
pop
push
mov
mov
ror
insb
mov
or
ret
out
inc
stos
adc
scas
out
cmp
js
in
pop
pop
jle
adc
jo
sarl
shrb
cltd
scas
mov
lds
adc
pop
mov
or
mov
jmp
pop
or
mov
arpl
pop
and
cmp
cmpl
cmp
xor
sahf
lret
mov
jbe
dec
mov
adc
push
insl
cmp
sti
or
jns
sub
push
jne
hlt
mov
rorb
jp
push
push
xlat
jns
push
push
xor
sub
mov
loope
mov
push
cmpb
mov
xor
mov
jg
cmpsl
adc
pmaxub
pop
data16
push
fiaddl
dec
dec
pusha
aas
lods
lock
push
or
or
push
imulb
dec
je
es
mov
xchg
xchg
aam
cwtl
dec
ds
mov
pop
je
dec
in
mov
xchg
sub
push
bound
xor
mov
fsubs
jnp
xchg
dec
dec
inc
inc
jnp
cmp
shr
pop
movsb
inc
cmp
pop
movl
push
and
ret
xchg
sub
or
pop
or
jno
inc
pusha
xchg
aaa
xor
push
aad
push
cmpb
mov
pop
fs
into
jbe
xchg
repnz
fists
daa
jmp
push
cltd
sub
mov
fisubs
movswl
lret
or
in
jnp
stos
stos
movsb
pop
test
sbb
xor
mov
jecxz
mov
aad
bswap
xchg
ja
xchg
or
jnp
jbe
xor
jle
stc
lret
jno
dec
xchg
enter
outsl
imul
jb
sbb
incb
jb
mov
or
cmp
mov
fnstsw
ss
aaa
data16
lcall
dec
addl
negb
and
xlat
jns
xchg
jecxz
mov
pusha
cmp
sub
cmp
adc
xor
or
adc
lcall
mov
dec
scas
adc
inc
dec
mov
mov
pushf
dec
inc
repnz
dec
inc
mov
aam
out
das
cmp
xchg
inc
mov
mov
clc
xor
int3
sarb
popa
fucomip
push
imul
or
test
lret
test
adc
dec
les
push
sbb
adc
pop
fdivrl
in
dec
fdivs
pop
sub
mov
dec
repnz
pop
and
imul
pop
inc
in
pop
cmpsb
pop
xlat
mov
addr16
fdiv
fildll
pushf
fstps
test
and
pop
imul
cmp
aaa
cli
cmc
std
jae
in
dec
jae
jo
bound
test
sbb
cmp
mov
sti
pop
fstpt
ja
fldcw
jo
push
jmp
mov
dec
cmovle
sub
add
or
fsubrs
mov
sub
cld
dec
push
scas
jge
mov
sbb
js
mov
pop
mov
in
mov
test
sub
sbb
mov
lods
aaa
jmp
pusha
lret
adc
fmull
inc
sti
call
jl
push
fdivrs
xor
jns
xchg
cmp
pop
push
test
push
and
mov
mov
divb
fwait
ja
out
adc
and
pop
add
ja
adc
aas
fcoml
xchg
aas
dec
push
adc
fwait
icebp
push
mov
inc
repnz
rorl
sbb
inc
lcall
mov
jno
sbb
dec
xor
pop
lret
add
lahf
sub
mov
filds
cld
or
repz
out
jg
in
lock
enter
loopnew
sbb
and
jle
xchg
stos
xor
lcall
repz
or
orb
mov
mov
and
mov
xor
stos
stc
cs
lret
xor
into
mov
push
or
hlt
mov
jns
cmp
scas
mov
cltd
lcall
add
dec
sbb
outsl
dec
jb
js
push
subl
cli
cltd
sbb
jp
mov
xchg
inc
mov
dec
test
sub
into
fucomi
ret
in
inc
sub
cli
in
int
jecxz
movsb
daa
jns
mov
cwtl
insl
aam
imul
jp
mov
decl
lcall
xor
adc
test
jg
mov
nop
out
movsl
adc
jl
andl
sbb
je
mov
mov
lahf
jg
ror
mov
pop
clc
lock
js
rorl
dec
ret
jecxz
loope
inc
cmp
fdiv
pop
out
mov
xorb
aad
push
cwtl
adcb
sub
or
mov
xor
data16
xchg
inc
pushf
jns
mov
dec
or
cmp
fidivrl
lret
lds
xor
in
ss
push
sub
sub
outsw
xchg
sub
lret
jno
xchg
subl
insb
out
dec
outsb
or
aas
xchg
or
push
int
xor
xchg
inc
test
mov
aas
jmp
mov
jo
adcb
mov
insl
inc
int
cmp
sub
cmpl
xor
testl
pop
aas
xor
jno
mov
and
cmpsb
pop
out
rorl
fwait
jae
pop
icebp
or
idiv
imul
adc
add
xor
pop
bound
inc
les
adc
sub
dec
mov
cmp
enter
pop
xchg
jne
push
ss
hlt
inc
fwait
fwait
pop
outsl
fsubs
mov
pop
jecxz
pop
xorb
mov
pushf
cld
adc
fs
cmpsb
ffree
ja
cmp
scas
cltd
cmp
jle
enter
mov
xor
pop
cs
fcmovnb
data16
loop
fisubrs
sbb
les
dec
xor
sbb
mov
mov
iret
inc
pop
aas
push
mov
in
add
jne
dec
push
mov
enter
andl
out
pusha
mov
out
fcomps
sub
int3
rorl
mov
inc
adc
cmp
pusha
jg
mov
popa
jle
adc
push
adc
fldl
in
or
lock
fcoml
cmp
ds
pop
inc
int
push
lds
mov
dec
gs
inc
or
mov
ss
pushf
mov
test
lods
xchg
imul
xchg
cmpb
sub
jge
inc
xlat
add
addb
adc
pop
leave
mov
ret
andw
xor
scas
out
lcall
sub
fists
xor
lahf
ret
into
and
mov
xor
mov
and
xor
lea
and
or
add
pushf
subb
repz
std
nop
xchg
mov
test
xor
mov
int3
mov
add
or
cmp
xor
frstor
mov
or
xor
xchg
cmp
push
test
or
adc
pushl
cmp
psubsw
jnp
test
in
sub
xchg
push
int3
pusha
test
movsl
push
cmp
cmp
push
pop
ljmp
rep
filds
scas
dec
scas
pop
push
add
push
or
pop
sarb
push
int
jb
jl
mov
or
dec
sub
in
out
aas
gs
sub
movsl
cmc
fmul
mov
add
sub
push
enter
sub
sbb
mov
sarb
ja
stc
scas
sbb
pop
sbb
add
call
mov
xchg
fs
pusha
aam
inc
sti
lods
pop
mov
pusha
sub
mov
aaa
cltd
jnp
and
mov
hlt
sub
fs
add
mov
or
loopne
aaa
js
out
push
out
stos
mov
out
pop
lock
mov
xor
and
xchg
sub
cmpb
push
fcoms
add
sub
sub
addr16
das
pop
aas
in
jmp
or
clc
out
xor
dec
shrl
push
push
sub
dec
xor
loopne
mov
out
aas
rorl
xchg
les
jb
and
cmp
inc
jo
out
jl
jg
gs
xchg
xchg
sub
xor
inc
out
xchg
aaa
rcll
in
ret
sahf
or
aad
mov
lahf
and
cli
aad
cmp
and
insl
call
mov
jge
in
je
out
jg
in
jne
cmp
pop
pushf
sub
mov
xchg
dec
inc
aad
addb
mov
xchg
scas
inc
dec
sub
out
and
jae
int3
cmpb
test
insb
sti
scas
loop
cs
xlat
out
xor
fisttpll
fimull
arpl
das
mov
jb
sbb
cmc
out
pop
push
add
pop
notb
pop
xor
lock
cmp
std
out
dec
pop
ss
mov
xchg
int3
lock
ret
add
inc
pushf
fidivrl
stos
cmp
mov
lret
nop
dec
mov
or
mull
adc
inc
sub
js
add
pop
xor
rolb
popf
addr16
adc
dec
jbe
sbb
mov
xchg
push
push
cs
jns
outsl
pop
repz
xlat
lcall
lods
jo
icebp
pop
cwtl
sbb
mov
mov
adc
xor
and
add
in
inc
jecxz
nop
je
mov
inc
push
cwtl
in
xlat
nop
clc
dec
xacquire
dec
ficompl
lahf
and
mov
loopne
sbb
cld
mov
ss
jg
jb
push
adc
xchg
xchg
and
dec
dec
mov
loop
test
aam
rcrl
test
ja
pop
cmc
mov
jecxz
int3
push
icebp
dec
sbb
mov
jecxz
iret
mov
iret
push
dec
pusha
dec
add
dec
mov
jne
adc
and
sarb
mov
mov
stc
ss
mov
jne
mov
mov
adc
cmc
inc
stc
fidivl
mov
data16
and
xchg
and
rcr
xchg
xor
stos
xorl
sbb
or
mov
cltd
and
addl
or
inc
dec
bound
jae
aam
jge
inc
xchg
xchg
add
push
push
cmp
sbb
jl
mov
in
mov
inc
mov
enter
add
inc
inc
adc
xor
xor
mov
lret
cmp
out
sub
adc
jg
les
mov
out
cmpsb
mov
stc
dec
lahf
shrl
pop
rorl
and
popf
test
sub
mov
popa
mov
hlt
sahf
sub
push
xor
fisttps
shl
and
or
nop
dec
aas
lock
sub
fdivrl
and
inc
jle
and
setp
mov
insb
out
dec
cltd
imul
push
int3
sbb
imul
inc
shrb
cmp
pop
xchg
lret
add
or
addb
cwtl
jo
or
dec
sbb
add
push
jecxz
sti
mov
pop
push
jnp
jae
jmp
inc
out
sarl
test
bound
mov
mov
fistpll
lret
aaa
jo
daa
shrb
mov
mov
aam
add
popa
jns
jg
lretw
leave
shll
mov
pop
inc
push
mov
mov
int
cmc
movb
lret
cmp
pop
and
cs
add
lods
add
mov
jge
dec
sub
cmp
ss
cmp
sbb
das
adc
push
mov
mov
fwait
jp
jnp
cmp
sbb
add
xchg
inc
jmp
lcall
dec
adc
fbld
mov
cmp
pop
sbb
lods
pop
mov
xchg
fcmovb
mov
jbe
mov
fsubs
aas
and
pop
std
push
push
insb
jg
outsb
out
mov
fidivrl
out
pop
scas
decb
js
pop
in
lock
nop
ljmp
inc
adc
mov
repnz
roll
lcall
or
addl
or
dec
mov
pop
inc
test
lret
loop
dec
cmp
ds
mov
sub
cmp
xchg
mov
jnp
xor
inc
sti
push
hlt
mov
and
adc
dec
push
mov
mov
loop
xchg
and
jns
loope
mov
push
fcompl
add
cmpsl
or
and
hlt
mov
ljmp
test
pop
sbb
out
jb
popf
mov
jnp
dec
sbb
mov
notb
sbb
xchg
sarb
scas
mov
pop
adc
or
sbb
cmpsl
js
fwait
sbb
mov
lret
js
xor
mov
pop
out
mov
cld
lods
xchg
pop
popa
mov
xchg
lock
out
ficompl
mov
inc
xchg
sub
popf
ret
fld
fildll
jb
cmpsl
and
mov
jne
xor
inc
fldcw
fnstenv
pushf
dec
sar
jmp
and
xlat
mov
cmp
mov
add
nop
xchg
insl
pop
mov
ja
mov
xor
stc
xchg
popf
pop
and
jno
xchg
andb
push
push
jb
xor
int3
cmp
fwait
orb
in
xchg
sbb
lret
sbb
jl
lahf
cmpb
jne
push
inc
jo
jl
xchg
dec
aam
mov
xchg
les
lahf
movsb
inc
repnz
or
andb
and
imull
push
or
scas
out
arpl
and
int
pop
mov
loope
xor
cmpsl
push
jbe
pop
mov
repnz
jb
pusha
dec
cmp
sbb
pop
xchg
mov
loop
xor
faddl
jns
in
xor
cmc
rorb
lock
push
in
mov
cmp
inc
jecxz
dec
add
inc
xor
and
aaa
mov
nop
mov
ljmp
jbe
test
jnp
hlt
mov
mov
jmp
test
int3
inc
in
mov
repz
gs
lds
sbb
inc
ror
sbb
fwait
lcall
sub
jno
dec
xchg
fs
shl
sbb
fidivrl
jo
das
xor
rcll
clc
repnz
in
test
jae
inc
lahf
orl
lea
cmpb
dec
int3
or
mov
aaa
call
leave
mov
fldl
mov
sbb
mov
sbb
lock
repz
dec
outsl
das
lcall
sub
inc
imulb
clc
dec
insl
pop
adcb
fucomi
xchg
sub
sbb
cmpsb
repnz
and
cmpsb
sbb
xor
inc
jnp
aam
add
lds
out
fsubrs
shl
jb
push
sub
mov
push
adc
adc
cmp
test
lahf
lcall
clc
fxch
imul
jbe
mov
mov
pop
lret
out
enter
sub
movsl
das
fs
xchg
call
ja
lods
leave
or
pop
cmpsb
cmp
arpl
sbb
or
gs
aam
adc
shrb
enter
add
arpl
shll
pop
mov
push
dec
stos
fmull
loopne
mov
movb
out
push
dec
and
or
xor
insb
and
mov
jno
das
leave
cmp
int
jl
xor
sti
popa
out
xchg
ret
insb
movsb
cmp
hlt
sub
pusha
aam
jge
pop
push
push
xlat
repz
lea
repnz
lret
lods
jno
add
dec
sub
add
sbb
push
cmpsb
xchg
outsb
push
ds
les
xor
hlt
cmp
xor
adc
mov
sub
hlt
inc
sbb
int
ret
addb
adc
or
ss
jno
cwtl
push
fldenv
xchg
jge
sub
or
mov
sti
push
or
das
outsl
or
lods
fcoms
cmp
inc
loopne
dec
sahf
fldcw
pop
das
xor
add
cmpsb
sub
into
mov
mov
dec
cli
repnz
cmpsl
jbe
adc
cltd
sub
xchg
cmp
dec
sti
push
mov
sub
mov
push
negl
push
push
stos
shrl
adc
rcll
inc
mov
js
enter
repnz
mov
adc
int3
mov
sbb
lahf
cmp
dec
xor
mov
adc
push
decb
pushf
dec
sbb
test
dec
mov
adc
out
sbb
ficoms
pop
mov
add
test
std
out
into
adc
adc
hlt
jo
mov
pop
mov
int
xor
or
shrl
mov
in
stos
mov
mov
mov
hlt
movsl
or
fstps
mov
ds
and
jae
jne
scas
pop
leave
add
pop
or
cmp
pinsrw
push
int3
lret
cmp
dec
sub
or
notb
pop
stos
dec
mov
sub
mov
repnz
jmp
aam
pop
push
push
dec
pop
sbb
scas
add
insb
testl
fwait
mov
arpl
mov
adc
push
call
xor
push
ja
sbb
xchg
imul
fistpll
fldenv
test
add
lcall
or
lcall
pop
mov
cs
inc
or
ljmp
movsl
je
mov
icebp
or
rcll
push
mov
mov
mov
jns
xor
mov
or
lock
xchg
inc
enter
aas
cmp
sub
xchg
xor
fucomi
pusha
into
push
jle
xor
sbb
mulb
ss
jo
xlat
fcomp
shrb
add
repz
mov
hlt
test
test
inc
fisttpl
xchg
xchg
lods
jle
incb
jae
insb
loop
jp
imul
aas
push
mov
pop
repz
test
leave
shrb
repnz
sbb
insb
or
xchg
mov
xchg
or
push
sbb
jecxz
sub
jne
int3
call
fistpll
or
loopne
xor
addl
xadd
dec
dec
xor
std
mov
pop
jecxz
and
cmc
sbb
rcl
insb
xor
cld
xor
xorl
mov
add
stos
sbb
rcll
in
je
ret
mov
outsl
mov
mov
push
popf
nop
jae
lock
cmpsb
addr16
and
fwait
sbb
lahf
xor
fnsave
fisubl
lods
push
mov
add
or
loope
xchg
jne
mov
and
mov
ss
xlat
aad
lcall
fdiv
rcrl
adc
push
push
mov
or
or
inc
xor
mov
clc
aam
jne
clc
test
mov
push
inc
frstor
push
movsl
or
and
jge
clc
shl
or
dec
in
xchg
outsb
cwtl
psrlw
push
push
scas
inc
outsb
sahf
jns
sub
mov
dec
jmp
lret
out
xor
pop
movsl
jb
int
jmp
sbbl
pop
mov
mov
ret
add
pushf
enter
test
xchg
pop
les
and
mov
dec
mov
aad
adc
popf
lahf
gs
pop
sub
and
push
jnp
int
push
aaa
inc
sub
clc
je
test
pop
push
std
pushf
stos
in
cltd
jp
inc
and
test
ljmp
imull
lea
scas
cmp
push
jnp
jns
sub
cltd
xchg
aas
dec
imul
inc
cmp
dec
xor
xchg
jb
jp
dec
lods
sbb
rcl
push
add
lds
add
repnz
pop
leave
fs
scas
adcb
jp
into
and
mov
and
out
out
subl
shld
xor
stos
and
call
pop
push
insb
test
and
mov
scas
fcoms
jns
enter
lds
sub
loop
add
jae
or
cmpsl
mov
jno
test
in
es
mov
dec
inc
pop
xlat
orb
xor
push
subps
mov
aad
stos
fbld
add
ja
xor
mov
mov
pop
push
mov
and
mov
xchg
sti
popf
lods
movsl
lock
out
mov
lds
iret
add
or
ret
inc
testb
and
pushf
movsb
jae
or
push
xor
enter
lds
aad
leave
dec
test
xchg
movsb
sti
in
or
jge
ret
pusha
jmp
mov
test
mov
pop
mov
fwait
dec
cmp
push
inc
insb
cmp
enter
add
nop
adcb
mov
outsl
not
mov
out
push
mov
fstl
insl
cwtl
sbb
repz
sahf
push
inc
pusha
push
fildll
xor
inc
adcb
movl
xchg
dec
loopne
ror
pop
iret
mov
lcall
pop
pop
dec
mov
fneni(8087
hlt
dec
and
in
fidivs
lcall
call
andb
or
xor
popa
iret
sub
adcl
lret
nop
pop
loop
pop
xbegin
push
les
sbb
xchg
adc
dec
xor
mov
or
sub
and
push
aad
loopne
mov
loope
test
popa
jno
pushf
adc
dec
popa
es
aas
pusha
adc
in
rcrl
xchg
jne
or
dec
outsb
addr16
in
jge
push
cmp
test
repz
test
pop
pop
mov
adc
push
mov
test
lret
das
jl
test
popf
mov
out
data16
out
in
stos
sbb
out
xchg
mov
pop
mov
adc
ret
mov
sbb
arpl
stos
adc
adc
push
scas
stos
pop
repnz
cmp
mov
pop
jl
and
scas
mov
es
pop
pusha
xchg
jle
jecxz
shl
stc
sbb
idivl
aam
cmp
mov
inc
pop
mov
je
sbb
mov
jae
loope
retw
mov
sbb
rcl
stos
push
pop
rolb
aam
sbb
dec
dec
pop
push
fisubl
xor
mov
jne
jbe
xchg
sub
jl
sub
and
xorl
lcall
stos
mov
stc
daa
into
icebp
mov
push
add
dec
addr16
jmp
bswap
mov
enter
dec
cmp
adc
inc
adc
cmc
into
out
or
mov
in
jge
adc
inc
xchg
adc
mov
out
mov
out
je
ljmp
or
out
and
lret
in
outsl
push
jno
jns
cs
rclb
in
sub
fwait
pop
add
lods
push
out
fs
les
xchg
jnp
xchg
ret
cmp
iret
push
aaa
mov
dec
mov
xchg
int3
mov
test
popa
aam
cs
add
test
dec
jns
repz
cld
aam
sbb
mov
bound
pusha
sub
out
loopne
xor
xor
cmp
push
mov
lods
call
sub
push
lds
cmc
jp
cs
sbb
cltd
fidivrl
popf
aam
mov
das
add
add
scas
out
cmp
add
lea
nop
dec
hlt
mov
add
cmp
sahf
lock
xchg
adc
fldt
lods
ja
xor
arpl
fmuls
inc
xchg
es
ret
movsl
inc
lahf
out
mov
mov
adc
sub
push
pop
cmpsb
ja
repnz
adc
scas
sbb
adc
cwtl
inc
lock
es
shll
repnz
sbb
enter
decb
js
pop
sub
xchg
rcrb
push
mov
insb
mov
inc
push
xchg
dec
push
mov
xor
test
pop
xor
pop
pop
add
ss
and
and
je
xor
mov
pop
xchg
and
push
mov
mov
push
mov
sahf
add
js
jge
lret
pop
adc
stos
out
add
xor
adc
dec
inc
sub
jp
push
and
fwait
dec
enter
lcall
cmpb
cmp
cld
jno
aam
inc
push
cmpsl
aaa
rcr
mov
push
sub
jp
push
movntq
push
cmp
mov
sbbb
inc
and
jecxz
mov
mov
inc
sbb
or
mov
aam
fwait
jne
stc
jecxz
xchg
icebp
arpl
aaa
pop
sbb
shlb
and
xchg
test
mov
mov
cltd
sbb
in
jl
push
pop
pop
test
je
fstl
cmp
xor
bound
pop
fsub
call
mov
jmp
stc
ficompl
shrb
out
and
inc
cmpsb
push
mov
in
xor
sti
in
dec
or
ss
or
sub
push
dec
leave
mov
pushf
inc
sahf
movsb
push
mov
pop
ja
cltd
xlat
sti
in
and
insl
push
xchg
repnz
fists
arpl
adc
jmp
adc
mov
jecxz
mov
pop
ret
xorl
jnp
mov
pop
adc
mov
lock
call
mov
lea
scas
dec
push
daa
stc
adc
shlb
mov
dec
sarl
roll
mov
lcall
add
adc
mov
push
jb
and
inc
push
push
cli
adc
leave
jl
mov
out
sub
arpl
mov
lret
test
pop
mov
adc
cmp
push
prefetch
or
cmp
call
mov
cmp
nop
out
add
dec
jae
mov
lock
out
dec
lods
in
and
sbb
dec
aam
add
mov
sub
sbb
leave
or
dec
push
mov
icebp
cmc
ret
aas
les
push
jns
pop
jae
fdivs
adc
pop
int
in
sbb
mov
push
dec
or
xor
xchg
adc
popf
mov
dec
cmovb
pop
bound
and
mov
pop
popa
mov
arpl
push
sbb
lods
sub
mov
lods
addr16
hlt
fwait
sbb
mov
data16
mov
icebp
lock
push
xchg
xchg
mov
jae
jle
in
mov
repnz
rclb
enter
leave
jle
into
cmc
mov
sub
pop
and
add
pop
cmp
dec
mov
adc
out
daa
cmp
sbb
xchg
mov
sbb
orps
fdivrp
pop
into
pop
push
lret
mov
and
cmp
cmp
lcall
push
dec
push
outsl
std
push
ret
cmp
movsb
xchg
js
in
dec
dec
leave
dec
mov
push
scas
aad
or
repnz
cli
dec
ja
addl
popf
mov
cmp
mov
sub
and
dec
jns
add
jmp
aaa
scas
hlt
addr16
mov
jns
push
xchg
hlt
jecxz
shlb
mov
and
mov
inc
test
mov
mov
mov
cli
sbb
xor
pop
pushf
xchg
stos
in
dec
mov
mov
inc
arpl
pop
shr
mov
pop
fnstsw
pop
cmp
jl
jo
dec
cmp
pop
aaa
xor
lods
dec
dec
mov
clc
mov
mov
fistps
jno
jl
dec
inc
jp
dec
lods
fisubrs
scas
imul
lods
divb
xlat
jp
or
sub
push
iret
adc
mov
enter
fisubrl
dec
jl
pop
mov
lahf
xchg
xor
lods
insl
popa
popa
out
scas
daa
imul
xchg
cltd
mov
fcomps
dec
jno
orl
sub
or
jecxz
mov
call
div
lea
lods
testb
cmp
loope
adc
scas
stc
push
call
push
dec
shll
mov
ret
xor
gs
cmp
pop
sub
insl
repnz
xlat
decb
pop
mov
lcall
xchg
cmpsb
xchg
sub
in
pop
push
fsubs
daa
stc
leave
movsl
aaa
loopne
sub
les
lret
inc
push
xchg
pop
xchg
test
inc
jp
adc
cmpsb
scas
pand
fisubrl
mov
shr
sti
mov
aad
xchg
shlb
lret
stos
and
outsb
in
dec
dec
gs
cmp
insb
mov
dec
inc
mov
in
insb
mov
rcrb
xchg
rclb
pop
movsl
jl
addr16
and
je
mov
sub
mov
mov
dec
ljmp
or
add
shlb
stos
mov
jle
mov
xchg
jb
jno
sub
mov
pop
push
mov
loopne
pop
lods
insb
dec
les
and
mov
sub
xor
xchg
or
int3
test
xchg
shl
and
shlb
xor
push
loop
xchg
and
mov
push
sbb
subb
xor
repz
xchg
mov
stos
arpl
das
inc
push
loop
jmp
pop
js
mov
verr
loopne
xor
ret
xchg
or
push
adc
mov
fs
pop
sub
and
clc
mov
fildl
add
pushf
addr16
clc
mov
stc
fmulp
daa
mov
jecxz
mov
dec
jl
mov
xor
xchg
cltd
icebp
hlt
xchg
ja
ljmp
sarb
imul
push
inc
cmp
pop
std
xchg
popf
movsl
push
push
mov
movsl
pop
pop
cs
push
adc
jmp
sbb
and
jmp
push
xlat
jl
mov
pop
dec
sti
das
adc
or
mov
and
sub
mov
popf
loopne
add
pop
mov
cmp
pop
jnp
sub
loope
mov
in
xchg
repnz
xchg
cmc
jecxz
shl
sbb
push
ljmp
pusha
mov
out
aam
pop
push
sbb
std
fiaddl
pop
cwtl
pop
jnp
jle
mov
ss
mov
push
inc
or
out
testl
add
push
adc
xchg
into
jmp
jecxz
push
xor
rcl
sbb
loop
cmpsb
ds
daa
leave
mov
stc
jb
daa
add
sbbb
push
xchg
cmc
jp
xor
inc
inc
lods
mov
push
movsl
xchg
mov
data16
shr
fiadds
pop
mov
clc
insl
outsb
cli
mov
clc
leave
or
push
inc
pop
lods
mov
or
jl
sbb
pop
mov
cs
int
cli
icebp
jne
xor
xchg
stc
cmp
scas
push
inc
aam
gs
aad
and
push
movsb
add
push
mov
cmpsl
mov
ficomps
push
insl
dec
cwtl
mov
mov
outsl
ja
mov
xchg
sbb
lods
push
addl
subl
scas
int3
inc
xor
adc
loopne
pop
outsb
adcl
loopne
add
xor
repz
xchg
pushf
repnz
sbb
cwtl
dec
mov
fistpl
add
jle
cmpsb
add
adc
jno
loope
pop
xchg
xlat
cs
stos
mov
inc
inc
push
adc
inc
dec
mov
test
dec
and
dec
or
jmp
cmp
and
mov
pop
shr
add
mov
lock
jmp
lock
adc
loope
loopne
scas
jbe
lds
add
loope
cmc
dec
fsubrs
jbe
shlb
inc
pusha
cmp
jns
data16
mov
mull
orb
pop
or
fiadds
test
xor
nop
xor
xchg
nop
and
cmp
lret
adc
imul
sbb
loopne
aas
sub
or
mov
xchg
lahf
cwtl
out
movsb
ja
push
out
dec
sub
push
mov
bound
push
movsb
lahf
rep
mov
xlat
sub
daa
pop
or
lods
mov
push
rol
jge
faddp
stos
mov
push
cmpsb
dec
sbb
xchg
push
pop
testl
jmp
mov
xor
mov
ljmp
adc
imul
pop
sub
cld
lds
xorl
movsb
rcr
push
push
mov
lods
test
mov
daa
stos
xchg
push
popa
arpl
lea
sbb
clc
outsl
add
mov
mulb
jnp
bound
dec
ljmp
push
ja
imul
cmc
cld
stos
add
xchg
fs
jge
adc
pop
jb
pop
int3
add
mov
add
push
inc
mov
and
jp
aad
fmuls
pop
sahf
pop
arpl
pop
inc
test
lahf
pop
test
cwtl
call
push
ret
inc
push
fstps
push
pop
daa
repz
mov
jg
jnp
mov
add
fisttpl
sub
js
pop
push
xor
inc
lock
push
ss
and
mov
jbe
cmp
hlt
push
loopne
arpl
repnz
push
mov
pop
andl
and
mov
and
test
and
int3
lock
scas
mov
int3
aas
pop
pop
insb
stc
out
insb
mov
ds
cmpsb
adc
or
in
rcrb
es
xchg
xchg
jmp
aad
enter
popf
xchg
movsb
pop
fiadds
jmp
push
out
add
push
jbe
scas
inc
jns
xchg
mov
mov
cmp
loop
push
jno
arpl
fidivrs
mov
xchg
adc
and
mov
cmp
pop
enter
or
cmp
scas
adc
les
cmc
push
push
cli
icebp
bound
jle
int3
inc
push
roll
push
call
sub
cmp
mov
out
jge
shlb
popf
lahf
xchg
popf
pop
in
popf
cmpsb
mov
jl
dec
mov
jne
inc
sahf
vhsubps
in
and
pusha
aam
dec
xchg
fucomip
movsb
imul
leave
pop
push
xchg
sub
movsl
cld
fwait
inc
loop
dec
rcrl
adc
das
sbb
jne
aaa
dec
push
scas
jcxz
movsb
fmull
sbb
aad
mov
mov
xor
mov
orl
inc
movsl
cmc
fistl
les
mov
xor
xchg
or
inc
fisubrs
stos
div
hlt
or
out
imul
fs
loope
repz
inc
push
pop
stc
and
mov
inc
fsubs
mov
ret
jno
pop
xchg
mov
and
dec
hlt
shr
xchg
mov
mov
or
mov
imul
or
nop
and
roll
stos
outsl
mov
push
aam
fcmovnbe
mov
imul
xchg
sbb
lds
mov
push
ss
imul
pop
cmpsb
test
loop
mov
xor
iret
and
and
pop
pop
dec
js
adc
dec
fsts
pop
in
aam
test
mov
jl
addr16
pop
jge
popa
mov
dec
cmpsb
jg
out
jns
fsubl
sarl
adc
lock
mov
sub
mov
fldt
movsl
popf
out
addr16
or
test
jno
pop
cld
lods
jo
stc
test
dec
rcrb
xor
loopne
or
inc
jmp
and
mov
pop
jb
jnp
and
and
imul
and
pop
movsb
pop
xchg
ds
jmp
das
out
mov
cltd
xchg
jle
jb
outsb
and
sbb
sub
cmp
pop
insb
pop
jge
andb
mov
lahf
into
dec
xchg
nop
push
jbe
jmp
sbb
sbb
push
scas
jp
pop
add
ljmp
push
popa
es
mov
xchg
dec
clc
lods
push
loopne
mov
pushf
add
popa
pop
cld
cmp
inc
adc
sahf
and
xor
scas
into
pop
scas
cmpsl
jo
das
data16
out
js
das
xrelease
stos
push
subb
xor
xor
mov
leave
and
aad
pusha
mov
insl
xchg
cs
ss
push
lods
cmp
pop
jle
mov
or
roll
sbb
or
and
add
xchg
ljmp
es
inc
sbb
and
inc
push
adc
shll
and
adc
cmpl
pop
push
push
aam
push
cli
sbb
mov
sbb
subl
repnz
fmul
jmp
jge
mov
out
cltd
stos
jge
ret
imul
jge
shll
test
jbe
xor
inc
adc
imul
fstpl
sar
add
sti
aaa
in
aas
pushf
pop
stos
or
andl
dec
lcall
mov
daa
mov
shr
ffreep
push
test
pop
ljmp
int3
and
or
into
inc
roll
pop
bound
add
outsb
jg
xor
sbb
jno
in
push
cmp
add
pop
dec
pop
out
mov
lods
pop
mov
or
mov
ja
push
loopne
jp
jmp
lcall
ss
sbb
xor
test
test
stos
fcmovu
cmp
mov
das
xor
mov
sti
jae
add
lcall
fsts
mov
pop
sahf
inc
sub
push
dec
lar
jge
stos
in
loop
call
or
int3
cli
aaa
mov
sbb
jge
push
mov
jo
jmp
mov
fisubs
pop
lds
inc
mov
hlt
mov
lret
inc
xchg
mov
cltd
and
jno
cmc
icebp
cmpsb
xchg
jno
ffree
dec
mov
inc
pop
jbe
aad
push
dec
or
and
mov
ficoml
mov
sbb
adc
shll
cld
and
sub
mov
inc
outsl
xchg
ret
mov
in
sbb
loope
sub
flds
sub
ds
xor
or
or
popa
movsb
fcomps
jge
lods
mov
mov
adc
sbb
and
aad
jge
jp
mov
cmp
xorl
gs
lret
movhps
ret
push
sbb
inc
sub
xchg
loop
int3
sbb
jb
dec
and
ss
loop
sahf
es
int3
push
subb
jl
adc
cwtl
sub
push
dec
daa
popf
repz
lds
pop
dec
mov
clc
sarb
pop
jne
frstor
pop
lea
bound
xchg
push
gs
lods
andl
mov
jl
adc
push
xchg
pop
push
int
jp
call
or
add
pusha
sub
scas
popf
xlat
mov
xchg
enter
outsl
rcrl
imul
inc
add
shr
add
or
adc
mov
cmpsl
push
ss
sub
fmull
imul
sub
jbe
fiaddl
mov
or
test
add
add
adc
outsb
adc
adc
xchg
or
xor
fsubs
mov
jbe
mov
pop
enter
pushf
lock
xor
jg
lahf
and
pop
dec
sbb
pop
js
xor
jp
cmp
push
mov
ja
divw
insb
negb
fmuls
adc
lcall
adc
push
mov
sbb
xchg
das
cli
jl
xor
jg
jp
nop
ret
shlb
in
ljmp
push
jmp
dec
sbb
sbb
lahf
add
movsb
insl
popa
ret
lea
test
xchg
in
jno
scas
add
xor
dec
es
add
or
push
cmc
sar
jle
pop
mov
gs
dec
neg
aas
push
push
and
push
xchg
or
mov
rcrb
cmp
pop
inc
xor
divb
in
jecxz
dec
mov
xor
pop
shr
mov
dec
mov
adc
jle
mov
mov
lock
gs
das
inc
xor
xchg
hlt
jb
mov
mov
mov
add
xor
fcompl
sbb
mov
leave
leave
fidivrs
mov
cmpsb
movb
test
xor
mov
inc
sbb
lock
adc
leave
and
xor
mov
add
ret
lods
mov
xor
insl
shll
and
lods
cs
pop
fs
inc
and
sti
insl
lods
iret
mov
lcall
sub
jg
dec
jbe
in
ficoml
scas
fldl
add
mov
xchg
lods
inc
sahf
test
ret
decl
movsb
and
pop
lock
add
mov
popa
xor
out
je
xlat
stos
and
mov
mulb
int3
and
xchg
stc
pop
push
mov
dec
jns
and
jl
loope
andl
push
in
mov
dec
loop
sub
popf
sbb
ja
cmc
jg
movsb
mov
push
mov
outsb
out
arpl
je
push
or
movsb
movsl
outsb
repnz
xchg
inc
pop
cmp
iret
adc
std
in
mov
int3
addr16
out
mov
push
mov
cmovp
push
mov
ja
scas
rcll
das
jnp
ja
aam
push
ljmp
cwtl
cmp
mov
movsl
mov
sbb
ja
cld
adc
rcr
fwait
cmp
mov
pop
sub
loopne
shlb
cmpl
ljmp
mov
out
mov
mov
jo
jb
ror
mov
mov
insl
cmp
or
mov
xchg
insl
mov
push
sbb
xchg
xchg
lret
repnz
into
cwtl
xor
or
imul
shlb
mov
int
mov
lds
or
packuswb
adc
pop
gs
push
sbb
dec
ss
rcll
scas
mov
cmc
sub
sub
bound
lahf
jbe
out
bound
xchg
fs
xchg
lds
dec
fmull
fcmovb
push
push
mov
add
rol
aad
mov
pop
insl
into
mov
daa
and
sub
mov
mov
mov
jnp
cld
cld
xlat
xchg
lret
sub
movb
pop
ret
fcomp
adcb
ss
push
rorb
repnz
cmp
ficomps
or
pusha
in
sbb
push
popf
fstpl
das
xchg
and
test
pusha
stc
lcall
stc
repz
push
sub
and
out
out
imul
push
mov
add
pop
pop
push
mov
cmp
cmpsl
sbb
arpl
mov
shlb
in
dec
cmp
xlat
mov
stc
jne
mov
sub
lods
cmp
jp
lock
scas
clc
cmp
mov
or
in
mov
cmp
xchg
fisubrl
jb
out
lods
outsl
jnp
pop
repnz
icebp
or
outsl
pop
xchg
jecxz
adc
pushf
pop
shll
push
shl
sub
push
mov
sbb
ffree
sarb
outsl
xor
adc
movq
gs
stos
fldcw
out
push
out
lret
aad
mov
pop
pusha
jp
movsl
or
fbld
bound
push
jb
insb
lahf
scas
lahf
test
ss
xchg
into
xor
stos
ljmp
jl
lods
xor
xchg
insb
jne
decl
push
out
hlt
or
adc
mov
cs
pop
dec
add
sahf
cli
pop
jne
orb
pusha
out
in
mov
cs
jp
fdivs
jle
lea
mov
ds
movsl
fwait
rcll
adc
cwtl
fs
sbb
rcrb
jmp
lretw
mov
loopne
add
sbb
xor
push
inc
xchg
pop
or
and
xchg
jae
or
mov
testb
mov
pop
mov
fiaddl
cmp
test
ret
pop
mov
insb
or
jle
repnz
or
push
or
xchg
lock
mov
sub
fstpt
pop
jmp
xor
leave
dec
popf
outsl
mov
es
loopne
sbb
lock
out
divl
mov
in
lea
repnz
add
add
in
jmp
fisubrs
xor
les
add
or
jo
dec
leave
sbb
dec
sbb
cmp
cld
clc
pop
jp,pt
push
outsb
add
scas
xlat
xor
jnp
out
cwtl
lahf
dec
add
and
nop
push
lcall
call
addb
testl
mov
xchg
std
pop
imul
nop
or
repz
pop
jg
inc
mov
and
das
adc
mov
xor
push
incb
sbb
jbe
stc
rcrl
sarb
and
enter
push
push
xor
push
cmp
rcll
int3
mov
dec
lahf
and
stos
xchg
mov
sbb
int
add
mov
pop
mov
lret
dec
inc
imul
stos
mov
sub
lret
push
loope
cli
flds
cmp
dec
pushf
jge
push
lds
mov
fcmovbe
pop
mov
aaa
pop
adc
xor
cmp
add
stos
sbb
sub
mov
sbb
pop
dec
roll
jl
shrb
adc
cmpsb
je
dec
dec
mov
outsl
adc
insb
adc
aam
push
loop
ljmp
cmpsb
sahf
es
xor
inc
aaa
jno
movsl
pop
fcompl
add
shrl
outsl
xor
xchg
in
mov
insl
outsl
dec
leave
push
jae
adc
divl
cmc
jecxz
cmpsl
lea
inc
sahf
inc
mov
or
inc
cs
mov
andl
push
outsb
scas
xchg
inc
lret
add
lods
dec
ja
mov
mov
pop
xor
sarb
in
rclb
push
jl
cmpsb
mov
jecxz
test
fldt
add
imull
lahf
push
or
ffree
dec
push
inc
fldt
fimull
xchg
out
je
cltd
push
out
xor
xchg
mov
int
sub
out
xchg
sub
stc
fdivl
and
cmp
gs
stos
xchg
add
inc
cmpsb
inc
pop
mov
fisttpl
ljmp
lret
cmp
negl
call
jns
shll
cmp
pop
mov
mov
stos
add
jge
adc
xorl
cmc
push
js
stos
sub
or
pop
jmp
adc
cmovo
lds
push
test
jbe
mov
pop
pop
add
cmpsb
fiaddl
int
jg
xchg
es
mov
xor
cmp
jno
insb
push
or
inc
and
pop
test
pop
fs
enter
xor
and
and
and
jbe
xchg
mov
std
mov
or
mov
adc
test
sti
mov
jnp
and
lods
dec
nop
fsubrl
pop
in
arpl
leave
aad
xor
pop
mov
jbe
out
add
repz
cmp
jbe
out
nop
pop
add
or
and
lea
and
stc
push
insl
inc
pop
movsl
in
cwtl
mov
fdivs
leave
lock
jmp
aam
push
push
sub
test
sbb
ficoms
pop
push
pop
decl
add
aad
xchg
inc
mov
mov
fiaddl
adc
inc
call
lret
inc
das
jmp
fisubl
aam
jno
fmull
dec
jecxz
leave
pop
fwait
jmp
iret
fwait
nop
js
stc
push
pop
pop
out
cmpsb
enter
outsb
xor
adcb
mov
adc
jl
add
jmp
inc
jecxz
and
icebp
hlt
xchg
adc
sub
stos
and
js
pop
scas
int
mov
and
ret
out
cmp
cmpsl
movsl
cwtl
rclb
fld
pop
pusha
cmp
outsb
rolb
cmp
dec
aam
popf
jns
inc
cmp
ljmp
inc
insb
push
dec
test
cmpsb
inc
xor
int
adc
aam
js
mov
push
jl
pushf
dec
vsqrtss
inc
cmp
mov
outsb
xchg
ljmp
cmp
ret
pop
andb
sub
cmp
loopne
adc
dec
sub
push
dec
popa
aaa
mov
popa
mov
fcomps
jno
dec
adc
jecxz
adc
add
xchg
sbb
scas
push
andb
into
insb
popa
pusha
sbb
movsl
add
fs
xor
pop
mov
adc
jne
xor
adc
or
and
pop
cmp
jae
push
push
lret
mov
mov
dec
dec
test
cmpb
je
push
mov
push
fstpl
insl
rcl
shlb
mov
push
in
arpl
xor
lods
sbb
cwtl
jp
dec
inc
fisttpll
rcrl
mov
adcl
mov
data16
sub
fcoms
add
jne
pop
xor
test
xchg
imul
incl
add
jne
imull
iret
mov
push
xor
call
xchg
mov
mov
jno
pop
inc
xchg
pusha
inc
cmc
mov
aas
inc
push
mov
inc
daa
dec
jl
jle
int
mov
cmp
out
inc
arpl
dec
int
jecxz
sar
lahf
cmc
loopne
jmp
pop
xor
inc
xlat
shl
mov
cmp
inc
cmp
test
cmp
adcl
aas
adc
aas
push
into
lods
push
cmpsb
leave
insl
cmp
add
cli
and
push
loopne
xor
or
str
mov
mov
addr16
lret
cwtl
fdivrs
pop
mov
mov
pop
addl
mov
scas
add
scas
insl
push
pop
test
cmp
scas
imul
push
or
leave
mov
xlat
pop
sbb
and
ret
into
pop
hlt
shrb
stos
ja
sbb
jns
testl
je
mov
push
fistl
add
js
jmp
inc
je
scas
ljmp
mov
in
aam
popa
xchg
sbb
sbb
dec
pop
fdivrl
es
in
and
orl
adcb
dec
mov
xchg
test
jmp
cmp
rorl
hlt
cmp
pop
lea
xor
inc
popa
lods
out
sbb
pop
xor
lods
mov
mov
shl
lret
xor
js
add
inc
dec
push
mov
xchg
lea
popf
das
mov
fdivs
xchg
loopne
fdivrl
pop
sarl
loopne
stos
insl
faddl
pop
pop
dec
jae
xor
add
push
mov
mov
sbb
pop
clc
cmp
loop
push
sar
mov
jge
out
xor
test
lcall
movsb
loope
les
scas
fcmovnb
fcompl
sbb
ret
pop
xor
repz
imul
test
inc
int
pushf
subb
mov
ss
pop
ret
out
call
ret
or
mov
push
mov
pusha
int
mov
rcr
sub
add
and
scas
jo
out
repz
cmpsl
shrl
lds
dec
fmuls
shrb
sub
mov
or
inc
js
mov
mov
mov
inc
divb
fildl
inc
icebp
xlat
push
jne
or
xchg
clc
addr16
or
cmp
push
and
sbb
leave
mov
and
int
ffreep
fs
mov
and
arpl
xchg
aam
movl
xchg
push
cli
fimuls
fcmovne
sub
enter
sbbb
jmp
jb
and
sahf
in
lock
and
scas
fdivrp
ljmp
aad
call
xchg
popf
push
stos
sbb
das
xchg
mov
inc
adc
repz
mov
cmp
adc
imul
mov
push
std
push
idivl
mov
ficomps
daa
scas
mov
xor
xchg
mov
mov
sbbl
nop
cmp
arpl
pop
in
lock
adc
orb
dec
sbb
sbb
inc
inc
pop
daa
cmpsb
clc
cltd
cmp
sub
mov
in
stos
sysenter
jo
and
imul
cmpsb
add
mov
scas
push
and
fwait
aam
aaa
addl
fidivs
jle
imul
out
cmp
dec
enter
xor
cmp
inc
fdivr
clc
out
in
icebp
addb
icebp
pop
jg
sbb
in
pop
sub
mov
test
rclb
mov
push
sub
mov
cld
pop
aas
in
movl
lret
jno
jmp
jno
and
sub
ucomiss
jle
das
aaa
insb
fwait
pop
in
outsl
movsb
fstpl
inc
lods
mov
adcb
pop
xorl
ds
scas
jno
cmpsb
popa
out
fmull
pop
cltd
cmpsb
mov
ret
mov
aaa
adc
mov
jnp
dec
enter
and
aaa
cmpsb
shrl
mov
hlt
jle
scas
mov
or
ss
lock
push
or
fiadds
jl
cmpsl
in
cmp
es
sbb
push
push
mov
mov
add
mov
mov
sub
pop
inc
sub
add
gs
pop
inc
or
mov
lret
lcall
imul
or
imulb
inc
dec
push
ror
inc
mov
pop
cld
repz
xchg
mov
push
mov
jl
loope
repnz
jae
call
rorb
cmp
push
je
mov
xchg
int
fstl
push
xlat
scas
bound
lret
xchg
cmp
mov
add
mov
stos
jo
bound
outsb
jecxz
rol
aaa
lock
leave
pushf
rcll
cltd
sarl
push
fadds
sbb
xchg
mov
outsl
lret
cltd
jo
into
sub
adc
fs
xor
icebp
out
lahf
ret
push
push
test
push
cld
mov
mov
pop
mov
or
push
sti
repnz
aaa
sbb
aaa
push
adc
push
aaa
inc
fwait
sub
jns
shrl
fistl
enter
imul
addr16
push
or
fisubrs
mov
in
int3
dec
add
in
mov
imul
and
cld
shl
cmp
fadds
mov
or
das
jne
out
jecxz
pushf
jp
rorb
mov
mov
push
js
rol
fdivs
in
iret
adc
mov
adc
xor
repz
fistpl
dec
imul
lock
bound
mov
and
jmp
repnz
adc
lods
cltd
icebp
xor
xchg
xchg
and
jns
sub
xor
repnz
lods
sbb
pop
test
negb
jle
jbe
sti
sar
adc
mov
lcall
sbb
cld
insl
add
aad
xchg
out
cmp
and
adc
mov
stc
arpl
adc
imul
sti
sahf
imul
cltd
sbb
inc
lods
divb
dec
mov
lahf
in
not
sub
test
orb
push
cmp
insl
add
bound
adc
sti
pushl
inc
rcll
or
pop
sbb
mov
rcrl
dec
and
ja
stos
add
xchg
push
xor
jle
imul
sub
pop
je
lea
cmp
add
mov
sti
scas
pushf
xchg
push
pop
and
loope
inc
iret
mov
xor
mov
repnz
mov
jb
push
jle
pop
cmpb
and
insl
sahf
jne
sahf
or
cmpb
adc
cmpb
add
cmpsb
pop
add
insl
loope
and
popa
not
and
fistpll
xchg
jmp
ret
ret
xor
mov
xchg
inc
scas
sbb
mov
dec
imul
pop
bound
loop
xchg
ret
pop
xlat
stos
jns
lods
aas
adc
rolb
sbb
sti
cli
rorl
and
jmp
lahf
scas
mov
mov
ljmp
sbb
dec
push
out
inc
cld
cmp
jle
mov
aad
sub
pop
push
sub
shll
mov
jg
sub
cmp
push
inc
adc
call
out
jo
sahf
jl
loop
push
mov
mov
mov
or
lock
jge
inc
mov
mov
xor
mov
jmp
shll
mov
jmp
movsb
adc
and
scas
mov
test
dec
cmp
xorl
push
daa
adc
adc
mov
lcall
pushf
mov
or
outsb
mov
push
bound
lret
xchg
fadd
lds
pop
mov
or
ja
push
testb
push
adc
inc
test
mov
test
sub
nop
mov
xchg
pop
xchg
js
lds
mov
pop
adc
mov
addr16
icebp
repz
and
insl
adc
mov
jl
cld
mov
pop
repnz
scas
push
sbb
or
cmp
stos
pop
daa
jge
outsb
mov
cmp
es
mov
sbb
test
inc
subl
das
test
mov
pop
popf
inc
inc
jp
movsb
push
xor
jl
xor
out
lds
outsb
pop
imul
or
in
call
in
repz
and
push
mov
or
int3
leave
sahf
cmp
fisttpll
adc
mov
cmpsb
pop
mov
sub
or
fs
fs
js
mov
add
loopne
shrb
movl
pop
in
outsb
mov
inc
in
out
xor
jle
inc
mov
js
adc
cwtl
hlt
xor
pusha
sbb
jo
test
scas
repz
imul
cmc
jbe
leave
dec
mov
jb
repz
push
lret
push
jmp
sbbb
lret
sbb
pop
dec
adc
fcomps
punpcklbw
xor
xchg
pusha
cmp
push
inc
in
out
sub
gs
sub
out
cmp
mov
ss
push
lret
and
pushf
jg
adc
das
fdivrs
out
mov
dec
sub
cmp
test
mov
lret
pop
fsub
out
scas
push
loop
cmpsb
mov
ljmp
jmp
xor
mov
pop
out
icebp
adc
pop
or
int
push
int3
pop
fisttpll
mov
fdiv
and
stc
jns
pop
jg
popa
jge
or
pushf
fwait
add
and
add
mov
push
lods
ss
pop
imul
loopne
dec
sub
cmp
int
pop
xchg
aam
loope
cwtl
jne
inc
ljmp
dec
and
pop
mov
sbb
and
in
cmp
add
jae
stc
pushf
and
in
dec
pop
test
xchg
lahf
cmp
push
pop
inc
sub
sub
xor
add
add
mov
push
mov
push
hlt
mov
sti
mov
jl
nop
add
rclb
das
mov
int3
mov
fistps
pop
test
xchg
fildl
mov
aam
notl
cmp
add
hlt
test
negl
movsl
int
lret
xchg
es
sbb
jmp
test
pop
inc
mov
pusha
insl
lcall
cmp
and
fucom
inc
xchg
cmpsl
mov
push
mov
inc
jnp
scas
add
subb
faddl
hlt
mov
add
fisttpll
dec
in
inc
push
lds
insb
add
rol
dec
mov
jo
jp
xor
leave
gs
xchg
push
lret
mov
and
adc
jnp
push
sti
test
and
xor
jge
jg
test
cmp
mov
fcomp
lods
frstor
jb
inc
lea
mov
mov
xchg
cmp
cwtl
mov
sbb
mov
cmp
mov
jbe
and
sbb
mov
pop
mov
scas
sbb
or
cmp
sub
add
test
call
out
decb
popa
js
ja
aaa
ljmp
xchg
sbb
jbe
and
push
cwtl
inc
out
jl
mov
mov
loopne
adcb
gs
sbb
stos
xchg
xchg
or
decb
fisubrl
daa
and
xor
push
lahf
pop
stos
xor
fwait
cli
lods
mov
jo
adc
fsubl
dec
cwtl
push
push
loope
push
loopne
pop
outsl
cld
mov
outsb
and
or
inc
ret
xchg
imul
cli
or
loop
push
js
xor
and
add
negb
lds
shlb
cli
xchg
inc
xchg
std
rcrl
inc
jns
push
xor
pop
xchg
std
adc
rorl
push
sbb
je
pop
push
test
js
mov
movl
or
or
pushf
pusha
jmp
cmp
xor
mov
fst
mov
fwait
stos
pusha
addr16
pop
ds
gs
sarb
js
shll
das
pop
fbld
test
xlat
repz
pop
jb
shl
jne
pop
call
inc
mov
into
enter
mov
cmp
lcall
inc
movsb
sub
std
in
or
inc
xchg
aaa
push
faddp
shrl
add
pop
mov
sub
repnz
lea
cmp
adc
pop
push
ret
pop
xchg
inc
jmp
repnz
je
dec
jnp
jo
ljmp
mov
ss
adc
enter
nop
aas
shr
mov
into
icebp
and
xchg
ja
jmp
sub
sbb
aaa
mov
xchg
add
mov
sub
push
push
dec
and
push
cwtl
adc
jp
jae
push
pop
adc
sbb
jp
cmp
ffreep
mov
mov
sbb
pop
mulb
mov
ficompl
xor
arpl
jmp
imul
insl
mov
into
push
mov
std
ljmp
jle
in
fsubl
mov
add
test
cmpsb
sbb
dec
sub
popa
add
pop
lock
andl
xchg
jecxz
popf
call
mov
mov
scas
movsl
jp
pop
ret
pop
in
mov
dec
cs
mov
mov
dec
push
outsl
clc
sub
xchg
mov
in
mov
add
popa
mov
xchg
dec
cpuid
stos
je
fcompl
push
insb
inc
dec
adc
add
sub
pushf
outsl
jo
into
add
and
xchg
or
aam
and
cmp
mov
test
push
jle
jno
ret
push
xchg
pop
out
cmp
adc
sbb
jns
mov
mov
bound
or
xor
jno
dec
adc
fstpt
inc
sub
adc
and
push
rcll
jns
shl
adc
push
cmc
mov
aaa
inc
addb
mov
xchg
dec
jge
or
repnz
ss
lods
insl
call
jmp
sub
test
or
pop
unpckhps
mov
movsl
lcall
or
in
mov
ficompl
nop
xchg
test
xchg
xor
add
es
sbbl
jmp
and
out
xchg
das
cmp
jns
lret
data16
call
mov
mov
dec
mov
xchg
cld
addr16
test
cmp
in
movsl
pop
push
pop
test
pop
xchg
xchg
jns
mov
pop
in
rcrb
pop
insb
test
cmp
or
push
psraw
jno
loope,pt
inc
pop
test
movsb
push
out
lods
pop
pop
jb
and
cmp
inc
ljmp
inc
pop
aam
loope
je
cmpsb
pop
outsl
inc
pop
cmp
xchg
inc
cmp
movsl
rol
insb
ret
lret
out
arpl
mov
and
xor
inc
iret
std
scas
stc
mov
or
or
sbb
xchg
test
dec
jb
cmc
ljmp
xor
loop
mov
cmp
cmp
in
xchg
aaa
cs
adc
int
mov
pushf
xchg
fildll
outsl
inc
jbe
verw
or
mov
push
je
lar
sbb
xor
shll
mov
stos
jl
add
fwait
jp
sub
repz
mov
or
arpl
push
jns
xchg
and
gs
jb
and
dec
pop
shll
sbb
shrl
cmp
lods
mov
xchg
xchg
es
push
jecxz
cmp
mov
and
push
cmpb
sub
imul
push
insl
call
jnp
lcall
cmp
jl
inc
ret
jb
imul
push
sub
dec
imul
lods
ljmp
dec
loope
test
les
shlb
cmp
push
mov
iret
div
daa
inc
pop
pop
adc
ret
mov
ja
mov
lock
cmp
pop
pop
or
cld
xor
or
pop
sub
push
aam
mov
mov
push
mov
fisttpll
pop
push
test
sarb
aad
mov
rcrb
and
jg
xor
out
push
aad
and
cmp
cld
adc
repnz
or
mov
add
ficoml
pop
sbb
push
mov
in
jp
cmp
adc
lcall
lods
les
add
mov
jne
out
dec
loopne
cs
sbb
test
out
jnp
movsl
int
sahf
arpl
pop
shlb
xchg
pop
inc
std
xor
les
mov
shrd
mov
fisttpl
push
cmp
cwtl
mov
pusha
rcrb
xchg
arpl
in
call
push
je
lock
cmc
jge
fsubrl
inc
bound
or
mov
cmpsl
sti
sbb
pop
sti
adc
add
pushf
lret
cld
xor
cld
fldt
add
inc
mov
pop
aad
jns
icebp
pop
jl
loop
add
dec
in
stos
xchg
fcmovnb
test
sbb
push
jne
xor
insb
adc
arpl
popa
push
xchg
inc
sbb
xchg
imul
jno
dec
add
and
fisubrl
into
mov
sbb
ljmp
repz
incb
mov
mov
ds
mov
jmp
push
push
add
sub
fnstsw
lock
sbb
mov
data16
inc
out
in
stc
negb
imul
or
inc
test
xchg
xchg
sub
outsl
jp
aaa
insl
push
or
dec
in
xor
shrb
xlat
fistl
test
data16
negl
adc
xor
add
xchg
fwait
jbe
xor
xlat
int3
enter
adcl
mov
jmp
add
sub
push
mov
lds
insl
dec
sub
adc
pushf
gs
push
fldenv
xchg
mov
leave
xchg
xchg
add
in
adcl
cmp
icebp
sbb
in
repnz
cmp
push
push
cmc
xchg
jno
mov
jle
ja
cltd
xchg
xchg
mov
dec
ljmp
xchg
cmpsl
scas
xchg
xchg
andb
cmpb
arpl
adc
arpl
lcall
cltd
xchg
jl
xor
adcl
xchg
cmp
imulb
fldcw
das
aaa
mov
xlat
andl
pop
cli
mov
add
sti
js
or
jmp
loop
loope
nop
mov
dec
add
adc
lock
push
adc
adc
out
data16
mov
sti
roll
cltd
dec
shld
or
stos
leave
lar
cmp
and
pop
mov
das
loope
lods
mov
xor
xlat
divb
inc
pop
ja
cs
adc
jmp
jle
sub
mov
rorb
int
mov
sub
in
lods
scas
sub
cmp
sbb
mov
jmp
and
or
outsl
bound
stos
pop
sahf
xorb
bound
jb
jge
mov
in
pusha
sti
inc
cmp
dec
jle
dec
test
in
jbe
jns
xchg
insb
in
int
or
jb
cmpsl
aad
test
pop
addr16
shll
sahf
add
aam
aas
push
sahf
imul
xor
int3
sarl
icebp
loope
cli
addl
add
mov
inc
out
jl
cwtl
push
test
shlb
xor
out
ret
ret
rcll
sub
incb
je
je
mov
popf
jg
bound
mov
das
hlt
cmp
xor
sbb
inc
and
adc
and
and
or
cmp
mov
iret
dec
cltd
jl
mov
push
sbb
sub
push
and
push
pop
subb
xchg
scas
rclb
lahf
inc
fwait
mov
xor
daa
cwtl
imul
xor
mov
mov
mov
dec
jb,pn
jnp
xchg
mov
adc
dec
popa
cmp
movsb
test
mov
add
xor
cmp
or
adc
mov
out
imul
cmp
mov
jg
adc
ret
and
das
cltd
enter
pop
std
std
rorb
and
outsb
mov
xchg
je
mov
push
sub
sub
mov
imul
loopne
leave
out
and
testb
or
scas
mov
mov
xchg
out
jnp
lods
fsubrs
inc
mov
mov
pop
sub
mov
mov
aam
fwait
jae
mov
loop
sbb
js
pop
out
pop
jmp
dec
cmpsl
pop
mov
xchg
adc
or
push
pop
ss
inc
scas
sbb
xor
adc
sub
mov
mov
insl
push
push
sbb
sub
inc
lods
shll
lock
hlt
enter
cmp
mov
jmp
inc
dec
pop
inc
sub
jo
clc
pop
rcr
sarl
movsl
orb
or
dec
loop
or
test
call
test
ljmp
dec
dec
cltd
jns
ljmp
fisttpl
sbb
das
sub
clc
repnz
sti
pusha
push
jo
pop
push
roll
stos
scas
nop
sbb
mov
xlat
into
pop
inc
movsb
or
jecxz
push
xor
adc
jp
aad
and
cmp
mov
call
ret
call
das
inc
scas
lds
push
ror
cs
icebp
lods
adc
adc
add
inc
dec
pop
cld
cli
popa
push
sarb
ficompl
jo
pop
int3
addr16
call
mov
push
pop
js
dec
adc
daa
sbb
push
ljmp
inc
and
rcll
fstpl
mov
xlat
shll
mov
xchg
and
xlat
xor
in
imul
in
push
push
xor
fwait
sub
add
test
and
dec
xchg
mov
xor
popa
sub
fmul
les
test
or
lods
xor
mov
push
ljmp
add
mov
lock
out
aaa
ljmp
xchg
or
push
mov
mov
mov
movsb
mov
and
ss
and
jg
inc
push
outsl
shll
mov
pop
sbb
jp
stos
iret
mov
push
and
mov
xchg
pop
jne
push
pop
inc
in
mov
pop
sub
mov
mov
shl
sbbb
jecxz
sbb
aad
pop
jge
xchg
push
mov
mov
addr16
xor
push
data16
push
jmp
push
shll
orb
or
sbb
push
scas
sbb
jb
mov
inc
sbb
cmp
int
ret
push
out
xor
sub
sub
jg
mov
mov
stos
cmpl
lods
cmp
andb
stc
out
sub
movl
enter
dec
mov
adc
testl
pop
and
mov
add
jle
test
mov
mov
ljmp
fildl
sub
movsb
bound
loopne
mov
fstpl
sbb
leave
pop
int
stos
jge
xchg
xor
adc
imul
jg
outsl
push
xor
cld
adc
sarl
inc
pop
movsb
xchg
pop
leave
push
icebp
movsb
dec
push
pop
popa
mov
sub
out
mov
jae
addr16
loope
mov
cmc
mov
daa
pop
movsb
mov
pop
dec
and
sub
and
adc
rol
adc
pop
mov
mov
fisubs
lods
into
cltd
push
dec
stc
sti
int3
in
ljmp
sub
cs
iret
icebp
mov
fnop
mov
aas
sbb
jbe
cmp
mov
mov
mov
jbe
push
arpl
stc
add
sub
pop
and
mulb
pop
pop
add
inc
or
xor
stos
or
stos
icebp
adc
fiadds
fcoms
sub
sbb
addb
test
mov
jmp
mov
lret
adc
cmpsl
idivl
je
dec
leave
shll
cs
inc
add
mov
or
lock
lods
ret
cmpsb
jae
sub
out
je
jecxz
jno
dec
sub
fcoml
pop
add
outsb
dec
cmp
inc
popf
sub
cmpsl
cmp
pop
sbb
int3
or
repz
pop
sbb
test
adc
in
pop
adc
imul
mov
inc
ss
cli
mov
cwtl
jo
scas
and
cs
pop
inc
pop
outsl
or
pop
fcoms
in
jecxz
or
push
pop
dec
mov
mov
ljmp
pop
pop
mov
pop
ret
mov
das
xor
jne
push
addr16
cs
push
sub
mov
lret
add
mov
data16
jp
adc
sbb
add
subb
jne
mov
cmp
cmp
xchg
outsb
imull
inc
cltd
je
dec
pop
dec
std
mov
xchg
xor
pop
movsb
lcall
pop
mov
jo
xor
mov
aas
pop
jl
rolb
pop
loope
add
jg
das
ret
fcmovne
mov
cmp
xchg
bound
sbb
or
cmp
add
pop
push
xlat
mov
sbb
add
lods
xchg
push
insl
add
testb
es
mov
arpl
xor
jne
sbb
incl
mov
sbb
jae
mov
xor
cmpl
inc
jns
cwtl
and
mov
fistl
inc
jno
mov
adc
or
add
push
in
or
pushf
sub
add
jno
inc
xchg
mov
repz
pusha
mov
pop
outsl
inc
sbb
inc
add
ret
std
mov
ret
inc
movsl
fldcw
mov
inc
in
add
pop
inc
cmp
scas
mov
xlat
or
pop
mov
mov
mov
or
and
fsubs
iret
or
pop
decb
movl
es
add
pusha
out
mov
push
movsl
lock
dec
sti
add
inc
ret
lahf
clts
test
and
cmc
jb
adc
lret
sub
xor
xchg
cmpsl
adc
cld
outsb
cli
pop
call
add
stc
push
js
mov
mov
jmp
mov
je
add
mov
sarl
mov
jno
pop
mov
popf
pop
pop
stc
insb
in
sbb
cwtl
xchg
mov
or
xchg
jns
out
cmpsl
push
mov
jo
mov
pop
fwait
sub
icebp
xor
fmull
imul
or
push
pop
or
repz
mov
incb
xor
sbb
ss
add
in
xchg
ss
xchg
and
loop
adc
jns
sub
mov
sbb
cmp
das
adc
mov
cld
adc
lds
push
lret
jne
add
shlb
loop
jns
inc
cmpsb
sub
cld
xor
pop
cmp
push
and
rcrl
dec
pop
mov
mov
insl
out
xor
cmp
cli
mov
je
mov
loop
scas
test
outsb
jecxz
bound
sub
push
outsb
fs
cmp
fildll
jge
jge
mov
pop
inc
leave
mov
lret
push
mov
pop
in
fdivr
in
int3
stos
lods
push
mov
sub
in
je
lods
push
rcrb
imul
test
mov
dec
loopne
pop
sbb
ficoms
cltd
jae
mov
xor
cmpsb
popa
jb
dec
cvtdq2ps
test
fcompl
negl
jecxz
or
push
icebp
loopne
cs
pop
mov
mov
fnsave
cmp
and
xor
push
push
jle
jp
fnstenv
sbb
push
cmpsl
mov
testl
fs
xor
das
mov
push
pop
cmp
jmp
movsb
push
popf
jp
mov
popf
int
out
loopne
addr16
pop
loopne
pushf
aam
dec
mov
outsb
mov
xchg
loope
loop
sbb
daa
mov
test
or
imul
out
jbe
popa
or
addr16
sub
popa
push
jge
ja
enter
mov
outsl
jae
ja
xchg
cmpsb
cmpsl
mov
add
cmp
sub
xor
mov
push
inc
or
fistpl
or
adc
xchg
out
es
sub
mov
cmp
push
adc
pop
mov
aam
xlat
imul
std
push
push
cmp
rorl
loopne
cmp
mov
lret
dec
adc
fwait
ljmp
shr
add
sarb
xor
fdivs
inc
xchg
rcll
push
xor
mov
icebp
outsl
or
push
cmp
adc
test
pop
xchg
outsb
cmp
mov
test
in
pushf
out
orl
cmp
xor
ds
fxch
stos
fsubs
xchg
and
or
xorb
je
xchg
cmc
adc
inc
dec
movsb
adc
or
mov
fsubl
pushf
cmp
push
inc
cmpsl
mov
jb
dec
push
jnp
insb
add
inc
sub
pusha
pop
out
ja
sbbb
test
gs
mov
jne
mov
fildll
mov
dec
fisubrl
pop
xchg
ret
mov
dec
loop
lahf
aas
flds
std
pop
imul
mov
push
xor
add
sbb
jo
stc
fcompl
adc
in
icebp
inc
ljmp
mov
test
test
leave
popa
pop
insl
fsubs
dec
stos
push
lds
inc
dec
jmp
add
xchg
push
int3
mov
nop
pop
arpl
inc
insl
inc
scas
xlat
inc
adc
mov
out
push
jecxz
das
add
xchg
data16
mov
imul
adc
xlat
inc
in
mov
scas
adc
jmp
cmp
sub
fimull
xchg
arpl
xchg
loop
nop
add
iret
loop
loope
jo
ss
sub
mov
out
cmp
rorb
lcall
in
out
dec
popf
pop
add
pop
std
or
xchg
and
iret
pop
cmp
jmp
dec
stc
inc
xchg
imul
jg
pop
in
lock
std
push
jne
fs
popa
out
inc
sar
xchg
mov
push
xor
mov
es
lock
in
xor
movsl
fcoms
aad
outsb
sub
cmp
mov
iret
fisubl
daa
rcrl
jg
push
outsl
ja
rsm
and
xchg
call
arpl
sub
lea
in
cmpsb
lds
add
push
mov
jle
xchg
push
lock
and
aaa
data16
orl
mov
jmp
stc
stc
dec
push
scas
mov
mov
mov
arpl
fnstsw
fimull
sub
mov
mov
ficoml
icebp
ret
and
out
mov
sbb
pop
test
icebp
and
cmpsb
movsl
insl
jae
jo
lods
cmp
inc
push
popf
xor
pop
int
shrl
jb
out
addb
mov
stos
fcomip
cmp
rcr
jecxz
sub
lcall
jp
xchg
dec
fdivrl
xchg
lcall
arpl
fcmove
jne
xchg
fstpl
jo
sub
mov
pop
ds
and
stc
sbb
xor
sbb
mov
mov
loop
outsb
add
cmp
test
scas
imul
subb
std
push
jl
lea
stc
mov
scas
pop
int3
cmp
cmc
xor
in
mov
jle
sahf
dec
inc
xor
push
fsts
xchg
cwtl
inc
xchg
or
mov
jb
test
mov
icebp
clc
push
pop
xchg
mov
mov
cwtl
xor
inc
mov
push
add
movsl
add
cmp
in
lahf
int
and
xor
sbb
mov
lahf
push
push
fsts
idivb
sbb
or
xchg
fimuls
cld
xor
sub
sbb
mov
mov
cltd
clc
sub
lods
mov
in
out
fistpl
idivl
aad
addr16
jp
inc
ja
roll
or
imul
sub
int3
dec
mov
push
pop
jo
xlat
lods
arpl
sbb
mov
pop
push
mov
fsubs
std
jp
adc
rcl
out
xlat
icebp
fildll
ds
aas
inc
test
sbb
cli
lods
sti
xor
popa
int3
aas
xor
rcr
fists
sti
clc
sbb
aas
scas
jns
lods
mov
mov
out
adc
cmp
xchg
lcall
loope
cs
inc
jo
cltd
sbb
mov
loope
and
xor
sbb
movsb
cld
xor
mov
pop
mov
mov
sbb
xor
movsb
insl
fucomip
inc
out
mov
addl
lds
mov
cmp
fwait
daa
mov
sbb
xor
ret
mov
pop
imul
cld
adc
jne
push
dec
out
xor
dec
js
les
fnstenv
cmp
ljmp
popf
cmpsb
mul
sub
sbb
inc
mov
out
test
xorl
inc
xchg
lock
push
mov
pop
sub
mov
daa
insb
adc
push
adc
mov
dec
sbb
mov
das
sub
mov
mov
insl
xchg
clc
and
inc
subb
xor
popa
cltd
rolb
mov
cmp
push
es
popa
nop
addr16
and
movl
inc
pop
imulb
rcl
enter
imull
loope
repz
pop
push
sub
inc
pop
imul
jae
ds
adcb
popf
sbb
leave
sbb
mov
pop
icebp
push
mov
jg
add
and
add
rclb
aaa
js
shrl
das
cmc
jmp
ja
ds
mov
push
xchg
lret
adc
add
fstpl
addr16
out
call
cmp
lcall
xor
fdivrp
cmpps
cld
in
out
fstl
jecxz
and
adc
lahf
outsl
lahf
lret
jmp
xchg
xor
add
sbb
test
jl
leave
cmpsb
orl
xor
cmp
imul
xor
jecxz
call
push
cmc
xor
mov
dec
adc
mov
mov
int
pop
ret
scas
jnp
es
or
addr16
dec
imull
xchg
ja
aad
lock
js
cltd
jbe
loope
push
popa
push
sub
push
orl
sub
pop
filds
lods
rol
jno
pop
push
cmp
aaa
and
add
lds
pop
jb
imul
inc
dec
adc
cmpsb
das
hlt
stos
loop
jle
aas
repz
add
jno
movsl
jne
pop
mov
pop
ret
int3
lods
push
imul
into
mov
xor
mov
cmp
dec
pop
sbb
mov
jns
popf
mov
ror
and
mov
iret
cli
xor
push
out
ja
int3
or
stc
or
add
movsb
das
cs
xor
test
test
push
xchg
mov
lret
pop
les
lahf
mov
fcomps
cmc
fstl
pop
mov
push
and
jmp
sub
push
xor
adc
addl
rcl
jae
in
jle
cmpb
das
aas
lock
jnp
rorl
int3
ds
loopne
sbb
add
pop
int
add
push
dec
dec
bound
cmpsl
inc
leave
sbb
stos
pusha
stos
jnp
or
xor
and
sub
add
or
mov
insb
lret
mov
test
pop
adc
jae
mov
pop
jle
mov
loope
aad
movsl
xor
push
test
pop
xchg
sbb
in
inc
lods
push
in
pusha
sub
mov
inc
pop
mov
and
add
fisubrl
adc
xor
pop
and
repnz
loop
push
sbb
and
in
dec
mov
shrl
std
lds
pop
adc
xor
xlat
std
mov
out
outsb
xchg
or
lret
push
jbe
loop
ja
xchg
push
in
notb
movsb
adc
xchg
call
test
add
sub
cltd
pcmpgtw
xchg
mov
mov
jbe
push
jbe
aas
sub
cs
jp
push
pop
sahf
fstps
xchg
sbb
or
inc
cmp
mov
movsl
outsl
mov
fidivrs
movsb
adc
movl
pop
out
gs
pop
mov
iret
push
loope
pop
in
mov
add
in
adc
pop
ret
mov
jl
or
sub
in
test
jns
dec
bound
jp
adc
and
mov
sbb
xchg
out
filds
mov
enter
adc
lcall
lds
jle
and
dec
sahf
dec
nop
cmc
pop
xchg
xor
fildll
jmp
push
xlat
jo
inc
push
das
xchg
cmp
push
insl
cmp
push
jnp
push
leave
ljmp
sbb
fnstenv
or
ja
movl
push
dec
ja
js
mov
and
lds
rorb
loop
aas
mov
or
add
jne
xor
and
ljmp
dec
into
inc
pushf
inc
adc
sbb
popf
jl
lret
jg
and
pop
mov
and
aaa
pop
pop
mov
mov
xor
imul
in
jl
mov
imul
nop
push
mov
xor
ss
ror
inc
int
cli
repnz
push
dec
jne
or
out
shll
aad
xchg
insb
rcll
or
into
repz
mov
insb
loopne
push
cmp
xchg
or
mov
pop
fstps
push
and
cmp
pop
cmpl
mov
jle
sahf
sbb
test
push
outsb
icebp
and
sbb
sti
stc
fbld
not
cli
mov
push
popa
xchg
and
movsl
xor
inc
cmp
add
popf
xor
adc
dec
loopne
filds
or
jo
pop
int3
mov
inc
dec
aad
push
mov
fisttps
repz
sbb
setle
push
xor
pop
cmp
mov
fldl
shl
mov
xchg
push
test
xor
cmp
in
in
imul
fcmovu
shlb
out
and
adc
dec
mov
sti
mov
shlb
js
jecxz
and
jno
jnp
add
or
lods
xor
out
jns
pop
imul
xchg
pop
inc
xchg
insl
dec
sub
push
cmp
pop
pop
mov
pop
or
sbb
fldz
mov
pop
xorl
push
or
xor
in
cmp
mov
fchs
jmp
pop
mov
xchg
mov
repnz
mov
pop
push
sub
mov
loop
dec
ret
inc
es
jp
sahf
lods
aad
cwtl
mov
jge
inc
jns
sbb
int
mov
push
fsub
stc
fwait
dec
pushf
cwtl
imul
js
cmpb
loop
fildll
dec
dec
test
insb
lock
call
mov
cmc
sub
sub
jge
loopne
ja
mov
adc
mov
pop
lahf
pop
sti
aaa
mov
jmp
or
ret
jae
mov
push
mov
inc
and
jno
jg
in
test
lock
fisttps
std
mov
add
out
push
imul
les
imul
xchg
in
test
and
mov
xchg
sahf
jno
dec
fiadds
mov
xchg
orl
pop
and
sbb
jge
adc
jno
mov
or
jne
cmp
mov
cmp
pop
icebp
mov
nop
hlt
mov
enter
xchg
lret
push
adc
xchg
pop
inc
sahf
jl
icebp
jb
add
daa
fstpt
push
ret
pop
add
mov
pop
push
xor
dec
push
or
mov
clc
cltd
sub
xor
xor
jp
xor
ljmp
aas
sub
cmp
decl
push
dec
sub
es
outsb
pop
scas
xlat
sbb
dec
xchg
and
cmp
cmp
xchg
out
into
xchg
insl
sbb
lret
aaa
outsb
xlat
jge
repz
les
mov
das
mov
mov
adc
in
mov
fldenv
dec
push
jle
iret
or
in
outsl
lret
in
cmp
pop
icebp
rorb
stc
mov
mov
in
pop
xlat
add
jb,pt
mov
or
xchg
outsl
mov
outsb
fnstenv
inc
dec
xor
push
jge
dec
sub
in
jle
and
fwait
sub
add
mov
jnp
out
mov
lock
mov
imull
push
and
and
and
dec
bnd
pop
insl
push
loop
lods
push
inc
sub
inc
je
loopne
and
ret
popa
es
push
mov
sub
stc
movsl
or
movsb
outsb
fcmovnbe
xor
scas
pop
and
mov
pop
xorb
inc
rcll
fucom
pop
mov
jne
add
jmp
adc
jnp
xor
mov
sbb
mov
out
subb
add
ret
or
mov
or
inc
push
loop
fs
sub
sub
push
pop
pop
shl
mov
mov
xchg
push
jecxz
or
lock
mov
loope
xor
pop
sbb
fs
sbb
je
push
dec
adc
in
outsl
xor
fdivrs
push
cwtl
ret
jl,pt
stos
clc
push
mov
fwait
mov
loop
dec
mov
push
aad
sbb
push
push
inc
push
pusha
btr
jle
mov
adc
sbb
lcall
jbe
and
jno
hlt
out
lds
stos
or
loopne
inc
or
out
ds
xlat
dec
inc
insl
stc
lcall
mov
add
fldenv
mov
cmp
adc
sub
mov
and
lds
add
xor
popf
outsb
inc
xlat
push
repnz
gs
lret
enter
xchg
js
inc
push
rcll
and
movsb
push
mov
jg
stc
outsb
leave
and
lcall
in
mov
les
notl
lds
pusha
dec
rclb
mov
enter
inc
xor
lods
ja
fsubs
inc
inc
ljmp
int3
das
fcompl
mov
xlat
mov
dec
lahf
addl
cltd
jp
mov
or
push
fisttps
add
jno
or
and
pop
sub
jo
xchg
mov
jmp
and
sbb
out
jecxz
in
lods
loop
jmp
insb
dec
shl
push
sub
ljmp
push
or
ja
movsb
cmp
shll
mov
lret
mov
cmpsl
pop
es
inc
push
adc
xor
jno
xchg
sbb
xchg
mov
inc
in
jae
into
shlb
xor
jnp
dec
das
in
pop
fadds
hlt
inc
pop
ret
jo
dec
leave
xchg
mov
sbb
mov
into
ret
mov
popa
aad
xor
aam
push
pop
inc
sub
mov
xor
arpl
fisubrs
mov
push
pop
mov
mull
scas
fstpl
xchg
sti
jl
adcb
dec
jle
xchg
jl
pusha
mov
les
dec
popf
sub
std
ljmp
dec
xorl
les
push
ljmp
fdivrl
in
jge
cmpsb
adc
jno
and
or
pop
and
and
push
es
fists
mov
popcnt
mov
cmpsb
movsl
xor
cmp
and
loope
adc
ljmp
movsb
and
mov
jle
push
sub
imul
fistps
inc
xchg
push
dec
orb
lcall
push
push
mov
ja
fldl
std
aad
nop
and
or
mov
adc
push
icebp
jo
addl
pop
add
xchg
ret
mov
ret
sbb
push
sub
push
jmp
jge
fsubl
imul
and
cmpsb
ror
stos
repz
push
jbe
jns
fisubrs
lods
test
adc
popa
xchg
jl
test
lcall
push
or
cs
mov
jns
int3
les
jmp
out
add
pop
int3
xor
pop
aad
daa
xor
rorb
or
enter
and
push
mov
pop
fsub
lods
int
bswap
test
mov
mov
mov
xor
xorl
in
jge
lea
push
out
stos
or
ror
iretw
iret
or
pop
in
jns,pt
iret
mov
int3
dec
cmp
aam
pop
data16
or
sahf
inc
pop
data16
cmpsb
inc
inc
push
cltd
sahf
sbbw
sahf
mov
pop
or
scas
je
and
add
loopne
neg
xchg
xchg
pop
jle
mov
hlt
ja
dec
popa
mov
mov
lahf
ret
clc
inc
mov
and
nop
pop
fcomp
jl
xchg
xlat
adc
sub
loope
movsl
mov
adc
arpl
hlt
jno
and
cmp
fildll
ror
jbe
mov
adc
mov
mov
in
popf
pop
call
dec
or
add
in
mov
stos
pop
sbb
int
iret
ret
dec
ficomps
jns
inc
movsl
addr16
adc
fstpt
mov
jne
mov
out
outsl
push
mov
sub
lret
mov
dec
repz
outsb
incl
outsb
jecxz
xchg
in
cli
lret
cs
jecxz
jge
aad
adc
fistpll
inc
push
push
aad
xor
mov
xchg
imul
lock
jp
pop
es
fwait
pop
fidivrl
loop
cmp
xor
mov
outsl
cmc
push
packssdw
jbe
cs
movsl
add
jo
cmp
sahf
arpl
add
push
cli
popf
jnp
pop
xorb
xor
imul
cmp
jbe
out
or
push
lahf
rep
test
cld
std
bnd
call
shlb
clc
popf
mov
decl
sahf
xor
sub
daa
inc
adc
nop
adc
stc
jne
stos
pop
sub
dec
repz
sub
mov
xchg
shl
mov
les
iret
inc
adc
xor
in
cmpsl
bound
popf
sbb
call
mov
jecxz
jmp
movsb
push
outsl
push
icebp
sub
loop,pn
cs
mov
ja
aaa
mov
or
in
jp
mov
mov
xlat
add
rolb
cmp
and
mov
fldt
popf
jg
pop
push
hlt
xchg
rcll
push
iret
sub
xchg
cli
rol
mov
roll
lods
or
mov
repz
ds
cmp
dec
stos
mov
xchg
sub
or
xchg
jno
jge
lcall
dec
jge
jge
adc
push
push
jae
push
pop
pop
push
or
add
data16
mov
outsl
roll
sbb
push
or
rorl
addl
push
aas
jle
cmp
hlt
add
adc
jmp
mov
inc
inc
cmp
jg
pop
or
mov
ret
push
sbb
and
je
mov
xor
inc
inc
xchg
xchg
jb
stos
pushf
mov
cmp
mov
call
jne
mov
popf
lahf
push
sbb
sbb
lret
lock
in
ret
bound
stc
outsl
adc
sub
lds
inc
lahf
inc
arpl
and
push
mov
jne
add
fldt
lods
and
xor
and
sbb
mov
push
pop
push
mov
test
and
inc
fisttpl
shlb
ljmp
jmp
cmpsb
rclb
pusha
jbe
push
js
adc
movsb
scas
mov
fbld
dec
lret
dec
cs
add
test
aad
adc
add
fildll
pop
arpl
inc
inc
push
mov
adc
or
lret
iret
jns
push
xor
pop
mov
inc
lods
sbb
fisttpll
ret
xchg
pop
or
cmp
popa
sahf
pop
push
aas
add
aam
movsl
rcrl
cmpsl
cmp
scas
cmp
les
add
lret
mov
xchg
sbb
inc
imul
in
mov
jle
scas
out
add
mov
push
enter
jne
and
sub
aad
pop
cmp
in
push
outsb
icebp
nop
pop
sub
sbb
adc
clc
ficoms
mov
and
xchg
inc
cmc
or
cmp
xchg
dec
push
shll
jmp
pop
repnz
inc
aaa
jo
dec
sbb
test
ret
aas
dec
xchg
pop
mov
sahf
cs
push
mov
hlt
push
clc
adc
add
push
leave
mov
pop
jb
sub
mov
xlat
dec
pusha
sbb
arpl
js
add
mov
pop
imul
iret
adc
xchg
or
adc
iret
lcall
mov
dec
sbb
loope
mov
mov
jmp
sbb
loope
or
jmp
pop
and
sbb
inc
and
xchg
nop
js
push
sbb
adc
and
cmp
jecxz
nop
jns
cvtps2pd
push
sub
add
sahf
xor
cmpsl
add
scas
pop
lahf
jp
sub
inc
push
mov
das
cmpsb
lods
mov
pop
pop
cmp
mov
cmp
pop
inc
outsl
call
pusha
rorl
fwait
push
daa
sbb
add
mov
ror
jp
mov
add
mov
cmp
inc
inc
out
jae
icebp
stos
jge
test
icebp
dec
scas
jg
jbe
jmp
adc
orb
sub
dec
and
scas
inc
adc
jnp
push
fcompl
push
cmp
data16
fincstp
add
jnp
adc
jb
adc
icebp
or
jne
popf
jecxz
add
mov
push
cwtl
pop
aam
push
movsb
mov
pop
fsubrp
out
cmp
cmp
dec
dec
pop
xlat
rcll
outsl
sbbl
fcmovu
ja
jns
shrb
fdivrl
jmp
jl
inc
xor
dec
cmp
in
outsb
xchg
ficomps
jge
mov
mov
sbb
jge
mov
fwait
outsb
xchg
lods
adc
pop
push
cs
cli
xchg
in
cmp
push
xchg
int
lahf
add
arpl
jmp
add
fisttpl
jno
push
mov
subb
andb
loope
mov
shrb
nop
and
adc
or
scas
mov
sbb
inc
clc
cmp
mov
in
push
rcll
cmpsb
mov
andb
jbe
test
fidivs
nop
sub
je
test
push
popa
insl
mov
and
and
pusha
dec
enter
or
mov
and
pop
push
cmp
int
sti
mov
or
xchg
addr16
jl
push
sbb
clc
cld
mulb
call
hlt
xchg
fidivrs
pop
mov
daa
pushf
iret
sub
mov
pop
lods
jp
lcall
push
xchg
or
inc
fisubrl
test
iret
pop
sub
pop
push
adc
outsb
cld
outsb
lods
and
inc
std
xlat
dec
lcall
push
sub
mov
pop
ret
testl
push
lods
dec
xchg
emms
mov
out
mov
sub
xchg
dec
subl
jge
and
cmp
aaa
sub
fnstcw
pop
lock
xor
loop
sbb
movsb
out
sbb
mov
ror
xor
mov
sti
xchg
xchg
addl
dec
js
fstpt
and
add
xchg
movsl
pop
push
jge
mov
scas
xor
lcall
cmpl
pop
fisubrs
sbb
clc
ret
pusha
ds
ljmp
pop
in
push
dec
lret
call
sub
xor
daa
and
or
pop
dec
cmp
movsl
call
cs
gs
pop
outsb
nop
mov
xor
cmc
insl
into
lret
jl
lods
mov
xorl
mov
or
mov
test
and
lds
push
add
aad
inc
adc
es
push
mov
push
inc
jg
pop
out
or
test
notb
inc
push
sbb
leave
cmp
std
or
pushf
cmp
ret
lock
mov
pop
mov
outsb
xlat
push
int3
mov
cmc
mov
dec
aaa
mov
add
popf
mov
pop
in
sub
add
push
jl
xor
inc
stc
loop
mov
in
jle
and
pop
ljmp
aas
aam
jno
or
cld
mov
adc
pop
mov
push
and
ja
test
lods
push
cmpsb
imul
xchg
and
stos
sub
sub
std
imul
cmp
out
sub
js
fucomip
xor
pop
inc
fstpl
xchg
das
loope
jle
in
mov
ss
push
aaa
mov
push
xlat
sbb
push
daa
pusha
sbbb
sub
inc
pop
cmpl
add
inc
ljmp
call
sbb
les
popf
fs
pop
inc
jg
ljmp
adc
push
lods
pushf
adc
js
rcr
sbb
xor
cli
rcrl
lret
test
xchg
or
push
pop
nop
mov
inc
pop
mov
imul
stos
jl
in
inc
inc
pop
jecxz
xchg
adc
mov
xor
push
xor
lds
les
movsl
int3
cmpl
pop
adcl
inc
fadds
mov
jecxz
lds
mov
and
lock
sub
push
mov
pop
xor
pop
xor
jge
fistl
add
mov
fbld
or
jns
or
add
push
movsl
jmp
cs
js
push
bnd
pop
add
xor
shll
jp
mov
imul
push
fs
lcall
mov
inc
mov
adc
pop
imul
xchg
inc
adc
in
jae
nop
inc
test
fisttps
in
or
push
jno
adc
jmp
xchg
jae
xchg
push
xchg
outsl
sub
mov
sbb
pop
inc
pop
pop
push
push
out
sbb
dec
lret
fwait
ljmp
outsl
in
test
jle
fidivrl
gs
mov
sarb
xchg
out
fs
lods
jecxz
cmp
or
add
sub
or
pop
jl
push
cli
and
not
mov
mov
sbb
pop
or
adc
adc
mov
pop
jnp
lret
mov
mov
xchg
add
insb
fbstp
repz
popf
ss
sbb
fdivrp
pop
movsl
in
inc
dec
lods
mov
jbe
lahf
bsf
cmp
add
push
mul
sub
cmp
fsubs
test
push
push
roll
jne
das
pusha
cmpsb
dec
shlb
or
roll
and
in
pop
data16
pop
xchg
mov
jle
fists
push
ret
call
jbe
popf
dec
push
in
test
adc
pop
sub
sbb
jno
jge
loop
ret
push
sti
clc
push
jmp
out
enter
leave
std
arpl
out
in
dec
mov
lds
aad
jb
mov
sub
out
and
mulb
mov
scas
push
mov
mov
add
pop
xchg
rol
adc
mov
dec
shlb
testl
add
cltd
mov
mov
xchg
cmp
test
mov
adc
outsb
add
mov
dec
loop
mov
lret
outsb
inc
outsl
lret
or
xchg
sahf
fidivs
rcr
insb
sub
xchg
test
cmp
fbstp
pop
fidivrl
inc
jne
inc
and
ret
cltd
or
in
cmp
xor
dec
sahf
lcall
loope
add
xor
add
insl
test
aaa
fcmovnbe
adc
sbb
inc
iret
fs
sbb
xor
stos
jl
aam
sahf
mov
add
push
jmp
pmuludq
jmp
test
push
add
mov
data16
js
call
add
mov
pusha
jno
jo
xor
xchg
stos
mov
push
inc
das
xchg
and
sub
out
arpl
fwait
inc
mov
testb
push
xchg
cltd
pop
out
loop
fiadds
test
gs
pushf
jmp
rcr
jl
mov
pop
dec
sbb
stos
adc
mov
pop
and
icebp
inc
test
push
xchg
aam
pop
push
fs
push
xchg
orb
lret
mov
xlat
scas
subl
mov
insl
adcl
xchg
int
sti
pop
xchg
and
imul
rclb
inc
cli
gs
push
inc
ret
jp
sbb
mov
insb
inc
push
out
xchg
rorb
adc
movsl
ja
aad
sub
mov
shrl
push
and
jg
cmp
and
push
out
jb
pop
in
test
jno
mov
les
cmp
cmp
adc
xchg
push
push
ja
ret
sbb
adc
jns
ficoml
sbb
movsl
test
shlb
repnz
insl
scas
push
pusha
movsl
ds
sbbl
fcoml
adc
test
aaa
pop
sar
gs
adc
xchg
pop
xchg
lock
jb
pop
mov
inc
std
xchg
idiv
xor
push
rorb
inc
adc
jb
mov
repnz
aas
adc
nop
outsb
fldl
cli
fldenv
scas
mull
out
mov
shrl
or
aaa
pop
clc
test
push
pop
sbb
out
ds
pop
imul
xchg
or
sarl
push
mov
aad
jne
movsl
ljmp
jp
loop,pt
mov
into
dec
mov
outsb
je
push
hlt
mov
ljmp
dec
xor
movsl
dec
mov
dec
add
push
mov
or
cmp
push
adc
daa
iret
mov
mov
out
repnz
xor
dec
movb
pusha
xchg
push
ret
mov
test
push
mov
jl
dec
fimuls
scas
test
ja
add
imul
xchg
xchg
inc
jo
dec
sarl
mov
or
xlat
or
and
fs
sbbb
lods
mov
inc
mov
lea
test
push
ss
jp
ja
cmp
cmc
pusha
and
aas
aaa
xor
inc
sbb
int3
inc
cld
ss
cmc
push
js
sbb
aad
sbb
rorl
adc
leave
dec
jecxz
pop
jp
lret
lock
in
mov
int
and
pop
jle
loopne
and
jle
mov
mov
jle
push
bound
pop
xor
inc
cs
movsl
pop
sarb
cmp
lods
cmp
and
scas
fabs
stos
xor
aam
stos
repnz
xchg
jge
cli
leave
push
dec
jbe
jnp
lds
xchg
lock
adc
jle
push
sahf
mov
ret
dec
add
aad
and
or
lock
test
or
inc
xchg
or
dec
or
cmp
out
lret
push
xor
jbe
fisubrl
push
push
mov
ss
movsl
and
lods
aas
aam
and
xchg
push
scas
js
jge
inc
loopne
sbb
es
imul
pop
jp
push
xor
mov
cmp
adc
xor
mov
mov
scas
repnz
aad
add
inc
jl
psubusw
add
sub
pop
sti
xlat
pop
pop
or
ss
dec
fcmovnu
jle
aaa
enter
dec
dec
shrb
pop
and
push
jp
dec
add
or
repz
jns
rcll
shrb
dec
jnp
sub
mov
je
into
mov
cmp
test
jmp
adc
int3
adc
ja
mov
add
test
lods
aam
jne
dec
lahf
cmp
test
aaa
dec
pop
dec
aaa
cmc
xchg
mov
cmp
xchg
mov
xlat
addb
test
jg
adc
xchg
out
fs
mov
fs
pop
pop
cmp
lock
sub
scas
mov
je
mov
lds
cmc
xor
fidivl
sub
dec
adc
xchg
jo
adc
jg
repz
xor
xlat
in
pop
inc
es
out
test
pop
movsb
js
negb
insb
push
push
add
fisttps
call
hlt
mov
mov
ljmp
cli
out
mov
pop
aam
lret
push
and
cmp
jae
movsb
xor
mov
test
mov
mov
xchg
lods
jnp
stos
jg
push
insl
inc
ds
mov
jns
adc
jmp
pop
imul
jp
mov
pop
lods
out
flds
ret
stc
or
std
inc
aad
xchg
xor
ficomps
movups
adcb
xchg
or
rorb
insb
into
add
testb
add
pop
mov
fdivrp
adc
cmp
sub
mov
lahf
aam
pop
arpl
jno
pop
inc
sub
sub
dec
mov
es
adc
xor
aas
xlat
sub
cli
jge
fistl
push
mov
jg
aad
xchg
ds
ret
mov
xchg
fsubs
cmp
dec
adc
out
dec
fbld
adc
test
mov
rclb
xlat
test
incl
pop
adc
mov
lds
aas
roll
jecxz
lock
pop
dec
insl
fadds
cmp
mov
add
mov
dec
xor
pop
cwtl
das
je
push
dec
push
and
jne
aam
cwtl
lcall
xchg
adc
ret
orb
aas
aas
leave
subb
pop
inc
lea
aam
stc
pop
addr16
sbb
push
sub
lods
push
cli
nop
bound
mov
repnz
daa
push
mov
sbb
adc
out
loope
push
dec
call
and
icebp
popa
mov
xor
mov
adc
enter
std
xchg
sub
or
pusha
daa
push
jae
dec
cltd
xlat
jp
arpl
out
int3
imul
test
div
jmp
lds
addr16
pop
mov
pop
mov
pop
stos
sar
or
sub
das
sub
testb
fcmovnb
mov
dec
add
dec
inc
dec
xchg
loope
mov
pushl
mov
cmp
stos
cwtl
inc
and
push
pusha
aaa
push
gs
ljmp
and
or
or
dec
jl
jnp
in
xor
pushf
sti
popf
mov
jl,pn
dec
mov
sahf
pop
and
lret
inc
cs
mov
ss
and
scas
pop
int3
arpl
rcrb
pop
insb
xchg
mov
xchg
cli
add
inc
jle
je
fsubl
push
or
out
cmc
aaa
xor
and
pop
mov
cmp
pop
mov
sub
sub
push
pushf
push
mov
or
ficoms
push
xor
jns
mov
into
mov
out
enter
mov
mov
es
push
add
pop
pop
jb
dec
mov
ja
jl
sub
fisubs
into
test
inc
dec
enter
fs
into
call
mov
and
push
aaa
pop
ror
xchg
dec
or
lret
clc
xor
dec
fcmovne
inc
out
push
pop
or
in
lds
mov
addr16
xchg
out
mov
outsb
lea
push
inc
jnp
adc
fwait
in
arpl
add
xchg
sbb
xchg
mov
xchg
sub
movsb
je
adc
adc
mov
dec
sbb
sbb
jae
pusha
rclb
inc
nop
push
cmp
mov
enter
fnstsw
imul
sbb
loop
adc
jecxz
lahf
mov
mov
sub
xor
nop
lea
arpl
loope
stos
cld
jnp
sub
or
cmp
cmp
xchg
data16
popa
lods
cli
es
jo
leave
mov
inc
js
repnz
inc
lods
pop
inc
movsl
sub
dec
mov
push
inc
std
nop
and
add
fists
xchg
pop
jb
lret
mov
repz
daa
mov
fmul
add
clc
mov
push
clc
sbb
into
loope
push
das
ret
jnp
aam
pop
xor
shrb
xor
aad
xor
notl
sub
or
adc
xor
arpl
cmpsl
lea
push
pusha
call
dec
loop
mov
cmp
cmp
mov
clc
dec
add
dec
adc
ret
mov
int
fistpl
dec
imul
iret
xchg
cld
aad
xchg
xlat
mov
jge
mov
and
mov
mov
lahf
in
xchg
ret
mov
mov
mov
xchg
sarl
xor
xchg
jb
test
insb
push
mov
add
jo
push
leave
enter
sub
fidivrs
xchg
cmp
das
rclb
add
ret
mov
xor
push
add
and
js
or
xchg
sbb
or
xchg
mov
sbb
sub
adc
test
xchg
add
and
mov
inc
pop
nop
lcall
outsb
shll
or
mov
add
loope
js
iret
sbb
mov
fadd
in
outsl
ficompl
in
jae
xchg
mov
ss
hlt
mov
fisttpll
lcall
push
in
inc
sbb
mov
and
cli
pop
mov
mov
dec
cmc
gs
adc
or
sahf
inc
test
mov
int
loopne
mov
xor
xor
sahf
add
xchg
pop
icebp
out
sub
outsb
mov
aad
repnz
insl
ret
imul
pop
ret
repnz
dec
dec
pop
fistl
ss
pop
xchg
stc
mov
xor
arpl
enter
add
inc
enter
cmpsl
xchg
cmp
sarb
push
or
jp
xchg
incl
xor
lret
xchg
xchg
inc
sub
and
cwtl
mov
mov
push
fildll
adc
bound
mov
or
in
cli
popf
int3
sbb
imul
pushf
mov
pop
sub
fisubl
cld
pushf
mov
mov
xor
fwait
cwtl
loop
ret
stos
ret
scas
inc
add
xchg
push
pop
lret
fs
pop
push
push
pushf
sbb
mov
outsb
shll
mov
cmp
fstp
jns
icebp
std
mov
jb
aad
cmp
adc
mov
imul
jno
test
add
sbb
inc
dec
in
outsl
mov
into
mov
frstor
sbb
fcoms
mov
mov
xlat
fsubs
fmull
dec
arpl
sbbl
mov
loop
mov
xor
push
dec
ds
popf
ljmp
dec
sbb
sahf
cmp
pop
push
push
pushf
xchg
jb
aaa
mov
or
cmp
adc
mov
cli
push
outsl
fildll
into
sub
xor
aam
mov
dec
push
pop
enter
and
dec
inc
lock
lods
imul
vmovapd
imul
in
push
or
movsl
adc
inc
addr16
das
jg
sub
pushf
or
filds
sti
out
inc
mov
jge
call
in
test
imul
add
movsl
xor
out
sti
mov
in
dec
inc
jo
jb
repz
in
lods
aas
xor
cmp
aaa
xchg
fsubl
xor
inc
sub
mov
adc
test
pusha
roll
fidivrl
pop
jg
mov
loop
fimull
notl
addb
scas
dec
lret
and
addr16
xchg
in
jp
loop
push
in
push
aaa
leave
inc
lock
call
or
fidivs
mov
mov
pop
pop
pop
add
xlat
pop
mov
adc
out
push
mov
push
pop
addr16
jo
call
in
pushf
in
pop
shll
test
cwtl
ss
add
cmp
fs
fadd
push
or
xor
in
pop
jns
leave
leave
mov
and
lret
js
scas
rdtsc
ss
sub
in
mov
cmp
ja
shll
fsubr
mov
xor
sub
jl
xchg
icebp
sub
ljmp
rorb
fdivs
loop
push
popa
sbb
sbb
xor
sahf
xchg
stc
adc
sahf
es
cmpsb
xchg
fucomp
stos
int3
inc
mov
mov
je
sarb
ja
pusha
in
push
sbb
aam
js
enter
add
test
imul
cltd
test
dec
xchg
cmpsl
add
mov
and
mov
xor
push
in
outsl
adc
cmpsl
dec
jb
lcall
mov
cld
mov
mov
cltd
test
jbe
adc
pop
bnd
push
aaa
cmp
add
pop
mov
mov
lods
jno
daa
dec
test
add
sti
mov
xor
cwtl
test
aaa
push
lods
sub
and
fldcw
mov
pop
repz
and
push
mov
cld
cmc
push
mov
into
adc
js
mov
xchg
and
mov
shrl
or
lods
push
and
out
sbb
dec
fldenv
mov
pop
test
jb
sahf
xor
cwtl
add
pop
xor
subl
sub
movsb
pushf
mov
fs
jae
pop
cli
or
adcl
sub
data16
pop
pop
clc
shlb
es
pushf
and
xchg
pop
dec
int
xchg
popf
mov
adc
loopne
cmc
xor
pop
lcall
in
jne
add
fsubs
hlt
cmp
js
add
sbb
add
push
loopne
inc
inc
js
cli
jp
sbb
cmp
inc
jmp
ret
push
jmp
adc
sti
sub
mov
mov
xor
push
xor
mov
mov
jge
ja
fsubrs
hlt
dec
cmpsl
and
and
pop
sbb
cltd
imul
daa
sbb
adc
adc
mov
xor
iret
mov
subb
sub
das
xor
les
and
mov
pop
inc
std
and
pop
adc
outsl
mov
or
sahf
aad
mov
aaa
iret
mov
xor
fwait
sub
xor
push
imul
les
std
xchg
inc
lea
nop
jb
mov
dec
cmp
mov
cmpsb
into
jo
xor
lret
sbb
cld
pusha
mov
loopne
jl
mov
jmp
push
sub
roll
nop
push
dec
xchg
cmp
lret
in
xchg
dec
cmp
es
std
dec
shll
add
xchg
and
xchg
outsb
cwtl
sbb
mov
jns
fwait
js
jg
test
repz
fbstp
cmp
push
xchg
cmp
mov
out
es
sub
pop
test
pop
sbb
shlb
enter
mov
jbe
insl
popf
movsb
addr16
lds
testb
add
lcall
mov
jge
pushf
lods
push
loope
lret
loop
sti
adc
sahf
in
imul
imul
movsb
adc
pop
adc
es
push
fadds
cmp
xchg
mov
in
xchg
orl
push
lret
jbe
inc
mov
push
fisubl
dec
test
js
mov
xchg
sbb
stc
adc
xchg
jno
cltd
push
xchg
pop
orb
inc
jge
stos
int
sub
add
pop
lea
nop
and
lret
add
xor
pop
push
or
test
inc
push
aaa
in
inc
scas
les
out
adc
jo
pop
cmp
repz
cmp
clc
or
dec
xor
mov
imul
mov
mov
stos
inc
icebp
inc
jp
and
add
jmp
fimuls
add
into
mov
sarl
out
dec
xor
add
ret
out
arpl
imul
mov
and
pusha
cmp
push
push
and
push
inc
ja
sub
adc
adc
lock
xor
es
xor
mov
inc
jle
fs
cmp
and
push
or
mov
add
lods
lea
sub
cld
aas
jg
xchg
adc
adcb
or
out
sub
repnz
jl
insb
enter
xchg
imul
jp
cmp
sarb
or
sti
jo
dec
movsb
sbb
and
xor
mov
jbe
fucomp
xorps
mov
js
outsl
aas
fisubrs
mov
repnz
sti
inc
jne
out
xchg
ljmp
stc
int3
xchg
mov
push
sbb
insl
dec
lods
xor
push
adc
pop
inc
jns
mov
inc
push
cwtl
adc
out
jge
push
mov
addr16
and
xchg
pop
jb
xchg
mov
in
repnz
mov
and
adc
mov
jbe
arpl
mov
mov
add
cld
fwait
jmp
rcrl
std
mov
dec
cmp
dec
imul
mov
shl
imul
inc
out
pop
mov
mov
sub
inc
jnp
jl
dec
stos
test
and
or
rcll
push
sbb
shll
std
mov
imul
jp
rorl
jne
arpl
aas
cld
sarl
insb
test
fwait
addl
mov
into
roll
jge
jno
cmpsb
cmp
lock
repz
dec
mov
adc
ja
daa
jle
xor
pop
pushf
pop
push
iret
js
out
cld
int
mov
cli
adc
mov
dec
xor
add
inc
ret
add
xor
and
fwait
or
pop
addr16
mov
dec
mov
repnz
adc
or
mov
mov
add
or
or
aad
dec
adc
aad
mov
sub
xchg
pop
cmp
ss
fcompl
test
fstps
sbb
or
push
fstpt
test
fwait
mov
cmpsl
dec
xlat
push
xor
adc
and
jle
js
jne
gs
or
xor
ljmp
dec
mov
aaa
int
jle
popa
pop
lcall
outsl
sub
dec
mov
inc
xor
sbb
pop
aas
lods
mov
cs
pop
imul
and
rorb
adc
ja
mov
mov
lret
fcoml
xchg
xchg
push
outsl
in
cmp
in
mov
xor
int3
int3
push
sbbb
insb
and
adc
mov
iret
fildll
subb
les
push
loop
xchg
mov
repnz
jmp
jmp
dec
cltd
sbbb
and
pop
sub
int3
xchg
or
cwtl
mov
sbb
mov
pop
mov
or
mov
icebp
test
inc
xchg
mov
adc
std
mov
stos
shr
jmp
mov
orl
loope
pop
push
popa
jmp
loopne
fsubl
jne
mov
clc
hlt
pop
pop
adcb
xchg
mov
insl
adc
mov
cld
cwtl
xchg
cmp
jo
scas
ficomps
mov
pop
push
lods
fistpl
cmp
xor
push
sahf
repnz
pop
arpl
into
dec
cld
push
pop
or
test
mov
cmp
stos
test
mov
push
pop
jl
data16
aad
add
sub
sbb
in
push
lahf
hlt
stos
or
pop
fs
insb
in
jp
dec
sub
ss
insb
sub
or
sbb
add
jbe
sub
mov
into
lea
aas
ficomps
lret
test
addr16
faddl
cmpsb
cmp
stos
aas
xlat
push
dec
int
into
jmp
jecxz
jg
shl
xor
out
test
mov
es
mov
inc
lds
fistpl
cmp
movb
sti
mov
int
addb
push
add
mov
sarl
cmp
xor
dec
shrb
test
lcall
pop
inc
adc
xchg
mov
push
mov
jmp
xor
in
or
jl
inc
mov
out
and
push
dec
adc
imul
loope
icebp
adc
imul
test
sbb
xchg
xchg
inc
xor
shl
lret
movsl
mov
test
cmp
ds
lock
insl
addr16
sub
jb
pop
pop
dec
inc
dec
xchg
ljmp
xchg
out
int3
hlt
mov
cmpsl
mov
andb
mov
in
enter
or
mov
dec
in
push
push
lahf
mov
fdiv
test
inc
and
pop
xor
jbe
push
mov
mov
les
cld
sbb
xchg
xchg
mov
test
xchg
mov
outsl
add
mov
mov
js
mov
xchg
sbb
jp
rcrl
sbb
test
es
loope
dec
xchg
cmp
push
push
loopne
mov
jns
jnp
adc
sub
test
sub
sub
mov
dec
pusha
cli
and
pop
jne
sub
int
add
dec
insb
sarl
sbb
sub
sbb
int3
xor
pop
pop
mov
and
push
imul
repnz
negl
imul
mov
loope
stc
rol
iret
cmp
data16
or
cmpsb
jne
jnp
std
test
xchg
repnz
or
and
xor
je
pop
pushl
cmp
lret
sbb
adc
pusha
add
fidivs
dec
pop
int
mov
fs
std
dec
bound
sub
xchg
sahf
loopne
inc
sub
loop
push
dec
enter
sbbb
xchg
jecxz
repnz
fwait
je
jne
js
je
pop
shll
push
cwtl
push
xor
sbb
dec
xorb
insb
iret
jp
jno
jns
jecxz
mov
and
iret
mov
fdivrl
xor
xor
int
insl
cmp
addr16
and
cmp
and
adc
dec
inc
cmpsb
in
aam
inc
movsl
pop
idiv
jle
mov
add
dec
sbb
lcall
cmp
test
sub
out
inc
sahf
mov
inc
jo
outsb
fwait
cmpsl
or
fildl
in
scas
je,pt
orl
mov
jnp
pop
insl
push
xchg
icebp
xor
out
arpl
test
fwait
cmp
gs
sbb
jns
addr16
mov
or
jns
orl
inc
out
test
dec
popf
shlb
mov
mov
jecxz
xchg
mov
loop
inc
sub
lds
dec
fsubrl
xor
lods
popf
or
rcr
lret
out
imul
push
fcmovb
fcomi
push
int3
xor
ljmp
and
pop
iret
push
inc
lock
addb
xchg
clc
lret
rolb
push
jno
pushf
cwtl
sahf
pop
pop
int
hlt
xor
inc
in
jnp
cs
hlt
mov
pop
aam
adc
gs
insb
mov
mov
arpl
stos
sarl
adc
aad
leave
fbstp
stc
mov
add
bound
lods
pop
ljmp
into
call
int
jnp
lods
push
jle
frstor
add
out
sub
out
dec
inc
sub
mov
xor
jecxz
xor
js
inc
sub
imulb
jbe
adc
jge
out
mov
mov
add
andb
jne
fisttpl
xchg
ja
imul
pop
mov
rcll
dec
cmpsl
push
push
push
mov
cltd
adc
outsb
push
popa
imul
movsl
jno
dec
into
dec
adc
pop
pop
inc
mov
outsl
jl
out
sbb
cwtl
aam
mov
in
and
lea
sub
lret
int
mov
insl
fcmovnb
jmp
cmp
sbb
sbb
mov
addb
aam
rcl
fbld
dec
shlb
inc
repz
sbb
repnz
shlb
mov
push
cmpsb
cmc
mov
lcall
movsb
xchg
xchg
outsb
pop
addr16
or
fstpt
push
mov
mov
in
push
adc
stos
movsl
add
pop
dec
arpl
cwtl
test
roll
les
or
and
xor
cli
arpl
dec
or
cmp
fwait
jge
or
out
mov
mov
mov
insl
cmp
cwtl
movsl
add
ficoml
iret
mov
adc
ja
add
adc
jns
jmp
arpl
push
lock
in
sbb
sub
fwait
lcall
shlb
orb
dec
gs
arpl
push
sbb
outsl
test
nop
mov
mov
pop
or
pop
fisubl
shll
leave
dec
mov
jno
cmp
rol
cltd
inc
jmp
xchg
or
loop
and
dec
inc
jge
and
mov
insl
lock
mov
or
roll
jnp
add
scas
cmp
sub
shrl
mov
shrb
xchg
adc
iret
fcoms
add
repz
push
fldenv
mov
cltd
out
cmpl
jg
imul
pop
test
lods
cmpsl
lret
or
inc
cmpsl
or
fldl
mov
andl
ficoms
cmp
mov
dec
add
mov
test
push
xchg
or
imul
or
xor
mov
lret
or
sbb
inc
adc
push
xchg
ljmp
lods
xchg
inc
lds
mov
push
movsl
mov
and
pop
pop
sbb
jle
testl
xchg
outsl
ljmp
lahf
out
mov
cmpsb
adc
int
std
jbe
fs
jg
add
sbb
pop
jecxz
dec
addl
pushf
arpl
pop
daa
pop
js
cmpb
stc
rcll
fwait
pop
sbb
xchg
lods
push
fildll
int3
and
daa
jge
jmp
insl
xchg
aam
imul
sbb
cmp
mov
or
adc
lret
dec
lea
js
adcl
add
cltd
mov
sbbb
out
aad
pop
mov
out
movsl
mov
lret
in
stc
iret
sti
in
mul
pop
mov
cmc
scas
mov
std
mov
ret
cmp
popa
adc
push
in
mov
lea
rcr
test
inc
adc
imul
scas
bound
sbb
mov
je
xchg
add
xchg
sti
mov
xchg
lret
sbb
pop
pop
test
mov
push
outsl
mov
mov
and
jle
mov
xlat
das
mov
mov
sub
cmp
fistpll
jno
adc
or
aad
and
pop
movsl
xchg
lods
cmp
mov
aaa
out
dec
pop
sbb
insb
pop
test
push
mov
stc
imul
xchg
lret
decl
fiaddl
je
data16
cld
call
xchg
insb
or
pop
subl
stos
bound
cli
js
push
xor
mov
bound
mov
mov
jl
lcall
sbb
notb
xchg
jae
pop
adc
sbb
ret
sub
cmc
shrl
sbb
dec
add
pop
xor
sub
cmpsb
aam
lret
push
mov
xor
jecxz
scas
sarb
xchg
push
add
pop
sbb
jmp
mov
jmp
imulb
or
lods
scas
cmpsb
aaa
cld
push
jo
mov
mov
lcall
lea
lods
icebp
insl
div
add
rcr
jmp
jo
mov
or
mov
push
in
xchg
mov
lret
fcom
pop
inc
imul
jnp
or
out
in
push
add
cltd
mov
call
imul
shrl
adc
dec
inc
dec
icebp
xchg
int3
adc
and
xor
mov
dec
xchg
nop
addr16
xor
cmp
xor
mov
xchg
testb
pushf
lds
cmp
ds
cmp
ficoms
mov
and
pop
int
ss
mov
add
or
aaa
andl
in
push
mov
punpckhdq
add
adc
stos
xchg
jnp
pop
fdivl
test
jno
push
pop
fdivl
mov
cmp
iret
push
aas
ljmp
ret
call
sbbb
scas
dec
adc
icebp
jecxz
jge
stos
fidivrl
push
mov
mov
sahf
flds
pusha
sti
pushf
test
jae
dec
out
xor
je
lds
adc
into
clc
in
vpshab
imul
cmp
mov
mov
into
nop
enter
cmp
or
out
scas
mov
inc
cmpsb
sub
out
lahf
xor
add
fwait
xchg
lcall
jnp
xchg
xchg
iret
je
xorl
sahf
and
pop
jmp
ret
pop
jg
ret
pop
fisubl
aam
mov
out
or
xor
les
nop
mov
movsb
push
stc
addr16
aad
std
cltd
dec
inc
test
adc
rcrb
int
inc
movsb
addr16
add
lds
leave
dec
or
movsl
enter
jbe
addr16
out
push
xor
inc
sbb
lcall
mov
loop
cmp
add
mull
ffree
jmp
daa
sbb
xor
push
jbe
jo
cmp
movsb
pop
jp
adc
xchg
jg
mov
dec
int3
es
jg
xchg
push
dec
mov
inc
or
nop
pop
pop
orb
adc
iret
addr16
imull
sub
or
add
shlb
pcmpeqb
loop
sbb
inc
outsb
insb
add
popa
int
jae
adc
sub
mov
rclb
movsb
ret
js
into
je
imul
and
inc
inc
cwtl
xorl
mov
adc
xchg
orl
repnz
int3
in
inc
jp
xlat
clc
rclb
and
test
add
jle
repz
dec
mov
adc
pop
out
mov
or
je
jne
lods
add
jecxz
aam
pop
push
dec
cmp
and
movaps
rol
daa
es
outsb
cmp
jae
mov
sub
std
out
pop
or
mov
and
add
mov
or
in
and
dec
out
sti
mov
sar
icebp
sahf
push
mov
mov
cmp
add
pushf
or
fs
out
mov
mov
pop
cmp
leave
decl
cmp
mov
mov
pop
jne
sub
ds
xchg
xchg
mov
mov
cld
add
sub
dec
andl
fwait
insl
js
jecxz
push
popa
enter
push
add
imul
stos
xor
imul
mov
es
jns
sbb
push
insl
call
shll
mov
popf
ja
cltd
push
jg
adc
lock
pusha
shlb
xchg
aam
jp
pop
sbb
out
or
icebp
cmpsl
out
popf
flds
cld
imull
xlat
imul
push
dec
fiadds
out
push
rorl
in
jg
mov
add
xor
js
push
push
sahf
stos
stos
add
mov
sbb
es
jbe
pop
xchg
push
in
jo
xchg
pushf
mov
lahf
mov
jno
mov
stc
mov
push
mov
fnstcw
add
dec
xchg
in
xchg
xchg
dec
repnz
sbb
fidivrs
adc
sbb
icebp
sub
inc
cmpsl
dec
cmp
xchg
sbb
test
inc
dec
xchg
push
nop
xchg
std
add
xchg
add
ljmp
mov
aas
adc
int3
das
lock
aas
cwtl
sbb
or
push
inc
cli
mov
sbb
ret
cmpsb
sbb
test
gs
add
jge
in
je
out
pop
sbb
sub
out
or
inc
push
mov
sub
vpmaxub
push
or
dec
gs
int3
adc
xor
loop
inc
leave
int3
jo
mov
cmpsl
mov
imul
push
xchg
pop
adc
dec
ds
mov
mov
xor
xchg
dec
daa
rcrb
fcoml
xor
pop
gs
pop
out
je
loope
ficoml
gs
icebp
mov
xor
nop
add
aas
inc
cmp
enter
shlb
mov
or
adcl
es
ret
test
or
xchg
es
add
sbb
mov
call
push
pop
and
xchg
mov
sub
rcrl
insl
dec
in
push
shlb
add
outsb
mov
and
les
xchg
xorb
xor
daa
lock
addr16
imul
aad
fldenv
iret
and
and
pop
fcoms
jl
inc
and
mov
cmp
ret
call
or
or
add
cmovge
push
push
xchg
pop
loope
pop
add
movsb
xchg
xor
cs
sub
pop
loopne
repz
mov
dec
call
mov
push
or
cmpsb
push
fidivl
jne
ds
pusha
stc
ret
and
es
pop
add
mov
stos
xchg
sub
pop
jl
mov
repz
in
jecxz
cmp
adc
sub
mov
sbb
test
dec
insl
out
mov
pop
dec
adc
mov
mov
pop
xor
icebp
mov
push
xorb
fistpl
adc
pop
out
cmovl
loop
inc
xchg
and
fwait
in
negb
insb
lret
jnp
aas
insb
mov
mov
inc
sbb
aas
cmp
test
xchg
scas
aad
mov
dec
and
stos
fs
mov
or
cli
sbb
or
pop
lock
sbb
mov
lods
stos
jmp
test
out
mov
lcall
cmpsl
inc
jp
mov
and
xor
add
movb
xchg
adc
mov
cmp
sbb
in
imul
sub
pop
or
cmp
xchg
and
pop
jnp
add
and
lds
fistl
add
arpl
mov
sbb
lea
movsb
push
and
inc
xor
jg
xchg
test
cli
mov
dec
pop
ret
pop
push
cld
cmp
dec
dec
jp
jp
sbb
dec
sahf
shlb
into
and
xor
and
in
inc
into
rorb
lea
popl
test
into
sbb
mov
in
and
or
imul
mov
jp
cs
mov
push
add
in
out
sub
es
dec
int3
pop
pop
arpl
sub
cmp
arpl
pop
aaa
mov
cmp
and
popa
mov
inc
xor
sbb
jg
stc
stos
sub
push
or
dec
std
adc
pop
dec
mov
or
js
mov
rcrl
adc
movb
pop
lahf
out
mov
aas
cmp
sbb
mov
jle
movsl
or
in
stos
mov
adc
add
cmp
cmp
lods
pop
cmp
sbb
xchg
lods
xchg
mov
sub
arpl
mov
jg
int
xor
lds
jp
lds
sbb
pop
call
sbb
pop
in
dec
je
adcb
add
and
cmp
and
mov
dec
fnstsw
add
lock
gs
cmpsb
dec
sbb
pop
popf
cmpb
mov
stos
jge
dec
inc
push
dec
lods
cmp
jbe
push
and
sub
cmc
fwait
inc
adc
xchg
shll
push
lods
pop
adc
test
insl
mov
inc
cmp
dec
cmp
out
sub
and
pop
addr16
lahf
in
xchg
add
mov
push
cmpsl
bound
enter
hlt
rolb
mov
adc
leave
loope
pop
je
or
xor
icebp
popa
mov
xor
push
hlt
sbb
movsl
test
jns
leave
into
lret
ret
adc
es
sbb
cmpl
movsl
sbb
rcrb
insb
and
rorb
lods
mov
dec
mov
cmc
inc
add
lret
cmpsl
sub
pop
pop
mov
loopne
orl
popa
xchg
and
aas
daa
xchg
in
xchg
jmp
or
or
sarb
int3
and
push
sub
sub
mov
sub
and
movsw
shlb
lock
mov
mov
jo
jge
sar
mov
stc
mov
add
mov
out
adc
xchg
cmp
dec
jbe
and
aam
push
daa
in
or
scas
jp
outsl
shlb
popf
cld
popf
into
mov
mov
xor
repnz
pop
dec
push
jne
shrb
add
and
mov
cltd
enter
xor
pop
cmpsb
or
icebp
add
repnz
lds
adc
mov
sbb
gs
push
mov
popa
ljmp
lods
pop
mov
jmp
push
fwait
sub
push
lods
lcall
nop
mov
push
das
inc
mov
sub
dec
ljmp
fnsave
push
jle
cmc
or
jmp
cmp
sbb
int
xor
cs
mov
scas
pop
mov
pop
mov
fisubl
xor
lea
or
pop
je
push
stc
inc
adc
pop
scas
mov
adc
mov
enter
iret
cli
loopne
das
dec
dec
rolb
push
inc
enter
addb
mov
fsubp
imul
mov
popf
jno
pop
mov
icebp
xor
jle
or
cli
into
jnp
pop
stos
pusha
jbe
cmp
data16
fldl
pushf
and
hlt
outsb
mov
popf
popa
pop
pop
xchg
insl
cmpsb
imul
jle
mov
xor
xor
aas
pop
push
add
mov
pop
push
outsl
aad
sub
mov
xchg
or
mov
mov
jnp
cmp
mov
or
sub
xor
pop
pop
jbe
dec
mov
cmp
inc
in
mov
cmp
push
push
cmc
cmp
sbb
xor
dec
push
in
push
decb
mov
push
outsb
arpl
scas
outsl
pop
adc
inc
ret
xchg
fsubrs
divb
cmp
dec
or
in
out
popf
adc
divl
ja
dec
mov
inc
dec
push
jb
sbb
lret
js
ja,pt
popf
add
cli
pop
scas
loope
pop
mov
sub
jg
push
sub
and
pop
pop
jge
sbb
cmp
stos
pop
jno
add
lods
fisubs
test
or
cwtl
icebp
lods
movsl
cmc
lcall
jl
inc
push
leave
test
lret
punpckldq
popa
mov
sub
inc
gs
fcomip
jno
movsl
arpl
sub
sbb
or
mov
sub
mov
fdiv
sub
cmp
push
jbe
sub
sbb
movsb
sbb
or
std
clc
sbb
cmp
cmp
fldcw
sbb
cld
add
jp
adc
lret
loopne
cld
orb
psubsw
aam
mov
jbe
shlb
mov
push
and
push
adcl
dec
adc
cmp
pop
inc
mov
sub
pop
pop
mov
cmp
jmp
mov
stos
mov
xchg
roll
out
pop
jg
rol
lret
stos
call
std
popf
rolb
popw
push
and
and
sbb
fnstsw
push
push
call
dec
xchg
mov
pop
outsl
clc
pop
xorl
iret
xor
ror
insb
out
std
mov
sbb
fwait
push
jae
pop
repz
mov
insl
cmp
into
pop
xchg
adc
and
and
addl
pop
leave
xor
xor
add
nop
aaa
push
insb
arpl
icebp
and
sti
sbb
fiadds
inc
hlt
sbb
add
jne
inc
adc
xor
push
adc
icebp
pop
cmp
lock
fisttps
jmp
insb
push
out
adc
pop
sahf
in
into
in
aaa
push
or
mov
and
shrb
cld
loop
xchg
inc
pop
mov
mov
xchg
mov
lcall
and
xchg
xor
mov
arpl
aas
cmp
mov
in
inc
xchg
jp
andb
clc
sahf
dec
push
pop
std
aam
mov
loop
sbb
cs
pop
and
iret
fistpl
in
push
mov
fldt
jne
cwtl
test
test
movb
in
iret
adc
imul
outsl
mov
or
lcall
out
fisttpll
add
inc
mov
outsl
je
test
test
pop
mov
pushf
pop
popf
jno
xor
cmp
jae
aam
shll
out
mov
pop
ja
cs
test
int
xor
sub
lods
add
notb
jae
sbb
iret
cmp
xchg
jecxz
daa
sarl
scas
jne
cmp
notl
jae
mov
test
cmp
add
lock
sbb
std
xor
test
fistpl
aaa
jl
xchg
cmp
cmp
icebp
std
popa
cmp
hlt
mov
rorl
cmpsb
sbb
add
mov
jge
lds
cmpsb
xchg
lea
shl
repnz
xchg
loope
test
out
add
add
hlt
int3
in
or
movsb
mov
imul
cwtl
movsl
arpl
xor
or
js
rolb
ds
inc
shll
adc
and
mov
mov
cmp
lods
xor
add
test
aaa
in
loopne
adc
mov
mov
lahf
xlat
cltd
xchg
das
pusha
fxch
roll
adc
lahf
and
cmc
jle
inc
lcall
mov
test
imul
xlat
in
pop
push
jae
cmp
fwait
call
mov
or
iret
notl
mov
and
xor
pop
sbb
dec
pop
int
aam
aad
mov
push
cld
data16
sbb
jmp
pop
arpl
pop
movsb
imul
fwait
sbb
xchg
adc
js
pusha
int3
dec
cli
xchg
out
sbb
mov
ja
dec
cmp
inc
xchg
ja
leave
jecxz
push
fiadds
arpl
add
xchg
roll
cmpsl
mov
fcmovb
xor
dec
insl
aas
push
call
fwait
sahf
add
mov
xchg
jmp
mov
jne
mov
and
xor
jae
sub
inc
cmp
sbb
mov
jb
sub
outsl
xchg
cs
sbb
jo
stos
mov
ficoms
cmc
movl
addr16
packsswb
andb
lods
in
dec
test
mov
mov
cmp
ss
mov
vmread
fwait
imul
pop
add
push
adc
test
dec
jge
jmp
mulb
rclb
inc
les
loopne
or
cmp
addr16
sub
add
std
mov
mov
sahf
outsl
xor
loope
sbb
mov
push
stos
vcmpss
test
push
dec
clc
mov
insl
push
nop
mov
aas
loopne
insb
pop
jg
xchg
mov
cmpsl
cmp
dec
shlb
jb
inc
jge
xchg
or
and
ficompl
sub
in
sarb
sbb
and
xchg
mov
not
mov
ss
js
and
mov
jno
xor
lods
sub
push
int
out
sbb
cld
arpl
pusha
lock
into
mov
std
jns
imul
cmc
addl
addl
adc
adc
testl
gs
rorl
jl
cli
outsb
inc
scas
sub
aad
imul
and
insb
int3
bound
ss
xchg
popf
push
mov
dec
dec
jo
or
ret
jne
insl
into
or
shll
das
add
rorb
jo
adc
in
sar
test
adc
sbb
mov
xlat
sbb
mov
loop
push
setp
and
mov
imul
orl
or
push
or
xchg
negl
sbb
dec
lea
fs
lahf
orl
ret
loop
in
mov
fidivrl
ret
js
addr16
mov
cwtl
push
ds
gs
xchg
mov
add
jbe
subb
inc
pusha
xlat
scas
pop
aad
dec
in
sbb
subl
xchg
push
mov
mov
ret
jns
xchg
mov
lahf
ljmp
pinsrw
icebp
mov
jl
jns
cld
mov
and
stos
and
mov
xor
pusha
push
xchg
mov
jno
fs
sbb
push
push
inc
or
lret
sub
dec
mov
jae
scas
pushf
inc
fwait
jmp
mov
lret
inc
cmp
fisubs
lea
jmp
sahf
fcompp
mov
loop
cmp
pop
outsl
inc
xchg
imul
sbb
and
ljmp
xor
cmpsl
les
les
stos
pop
addr16
jl
mov
push
jae
inc
pop
cmc
push
rolb
faddl
sub
mov
mov
div
and
cli
add
inc
stos
sarl
pop
mov
stos
rcll
lahf
repz
pop
add
loope
ss
lret
or
sub
loop
xchg
cs
cmpsl
cmp
lret
rorl
adc
cltd
jno
cmp
dec
repnz
mov
test
cmp
sbb
testb
xchg
push
cltd
push
in
ja
push
ret
nop
or
mov
sub
test
adc
arpl
lock
xor
mov
int
xchg
inc
into
sbb
jl
pop
mov
aam
push
mov
pushf
mov
testb
test
leave
dec
xchg
push
ret
leave
movsb
push
adc
dec
adcl
and
testb
sub
out
neg
cmc
inc
lods
inc
cs
scas
and
pop
cmpl
stc
fwait
push
idivl
sub
jle
ljmp
mov
xchg
cmpsb
shl
jne
mov
ja
pusha
bound
imul
dec
mov
out
mov
ja
jg
adc
or
out
or
clc
cmpsb
lock
pop
inc
cmp
xchg
jo
fsubrl
jecxz
cmpb
xchg
out
stos
push
dec
adc
aad
and
push
or
cmp
push
aaa
fs
mov
add
or
and
cmp
lock
mov
fcoml
test
aas
stc
dec
gs
and
mov
mov
xchg
mov
mov
add
lcall
inc
cmp
cld
push
call
enter
push
leave
mov
adc
push
adc
movsb
jne
mov
stos
and
pusha
or
addl
sbb
xor
rcll
les
lds
repnz
jno
jne
xlat
shlb
sahf
sbb
in
hlt
ljmp
push
xchg
mov
mov
push
testl
sbb
push
inc
pop
pop
cmc
pop
mov
mov
xchg
dec
sti
pop
adc
mov
repz
or
and
xor
stc
xor
movsl
insl
fwait
pop
mov
arpl
out
xchg
pushf
dec
and
dec
stos
fnclex
fs
jmp
cltd
outsl
jnp
mov
mov
push
dec
sbb
int
xor
sbb
aas
xchg
add
pop
mov
popa
sarl
inc
jae
dec
and
jecxz
lods
test
xchg
fs
cmpsl
popl
in
and
int
xchg
push
or
mov
stc
leave
ret
xor
mov
sub
lahf
sarl
mov
fwait
popf
fstl
add
adc
push
sub
add
push
mov
push
loope
fdivrs
int
pop
test
xchg
and
xor
push
cmpsb
mov
enter
test
bound
roll
or
into
xor
les
call
mov
lret
loop
lea
mov
shll
dec
and
ss
xchg
mov
mov
test
sub
js
xchg
jnp
and
mov
stos
cs
movsb
adc
cmpsl
in
insb
cs
roll
lahf
push
cmp
or
fcomps
adc
outsl
and
push
sbb
int
sbb
pop
inc
lods
sub
popf
bound
mov
cmc
push
mov
mov
loope
frstor
fstpt
pop
loopne
mov
add
test
push
outsb
jg
jl
jl
rorb
sub
jge
dec
adc
push
jecxz
mov
or
fdivrl
pop
push
cmp
xchg
das
push
cs
sti
add
dec
pop
sti
adc
jge
adc
mov
out
pop
rorb
push
mov
addr16
xor
pop
pop
in
add
sub
jbe
shl
mov
pop
cmp
ja
ljmp
and
and
add
push
sbb
pop
sti
enter
mov
xchg
daa
loopne
push
jecxz
mov
std
fnstsw
jecxz
and
repz
pop
stos
mov
mov
sub
cmp
or
adc
cmc
xchg
mov
push
cmp
xor
fsubrs
push
repnz
adc
repnz
out
sub
jae
pop
fwait
inc
pop
movsl
mov
inc
ljmp
aas
add
mov
cmp
and
mov
daa
push
jae
xchg
mov
bswap
rcl
addr16
fdivl
repnz
pop
jg
mov
push
cltd
xor
in
arpl
movsl
dec
enter
cwtl
js
test
in
lock
rcll
jno
xchg
xchg
mov
lret
daa
xchg
dec
test
and
add
pop
lea
sub
orb
pop
push
sbb
xchg
mov
adc
divb
xor
jnp
pop
negb
icebp
int
push
mov
bnd
nop
clc
dec
stos
rcl
push
fiadds
std
loopne
bswap
shrl
mov
andl
cmpsl
addr16
jecxz
jne
and
cmp
imul
fisubs
xor
cmp
pop
cmpb
rcr
fldcw
insl
lret
gs
mov
inc
movb
adc
xor
sub
movsl
xor
fbld
lods
mov
dec
add
inc
xchg
out
fisttps
pop
out
jmp
int3
test
divb
dec
mov
cmpsl
scas
fsubrp
js
mov
push
addr16
jnp
push
add
mov
push
std
jno
cmpsb
inc
mov
call
ljmp
aas
xchg
mov
jmp
add
shlb
arpl
xchg
insl
xor
adcl
jbe
fildl
cmp
lock
mov
jmp
std
push
test
popf
xchg
fwait
jl
mov
add
jp
mov
or
cmp
out
fimuls
or
inc
jge
push
insl
mov
popa
int3
add
mov
imulb
xor
insw
xchg
insl
sub
mov
xlat
fimull
xchg
sbb
xchg
out
es
icebp
xor
inc
pushf
or
pushl
mov
sub
mov
pushf
enter
mov
or
insb
rcrl
fidivrl
mov
fs
out
out
and
aas
aaa
sub
js
sbb
mov
imul
mov
jmp
pushf
push
xchg
movsl
adc
jb
or
rolb
inc
sub
mov
popa
xor
inc
mov
pusha
aas
stc
adc
imul
pop
je
and
push
fs
jae
xchg
inc
jbe
xchg
lods
aaa
cwtl
ret
add
fbld
out
arpl
sub
push
fwait
pop
pop
sub
sbb
add
lahf
insb
sahf
adc
outsl
adc
xchg
sti
add
jne
popf
lds
stos
adc
fs
pop
and
mov
das
jge
inc
in
mov
inc
frstor
enter
xchg
mov
notl
sub
lcall
lds
dec
push
sbb
lahf
sub
dec
mov
sub
or
lcall
xchg
repz
or
jb
add
dec
and
sub
int
mov
mov
push
in
bound
xor
dec
stos
xchg
xor
int
sub
or
cmp
xchg
in
sbb
adc
mov
sub
repz
jle
cmpsb
sub
lock
xor
sub
pop
push
ds
xchg
out
into
adc
mov
mov
mov
les
out
mov
sub
mov
xor
ja
lret
mov
negl
sarl
rcrl
pushf
push
pop
cmp
fisttpll
sub
xchg
xorb
sub
aam
mov
into
mov
and
xchg
sub
jp
div
das
fs
dec
lcall
lock
jnp
jle
adc
pop
push
dec
mov
mov
cld
fisttpll
add
mov
inc
push
out
arpl
test
scas
or
loope
cmp
cmp
sub
fwait
aam
and
mov
jge
xor
jecxz
out
sub
lret
pop
jge
add
pusha
popa
add
inc
int
add
popa
and
xchg
test
mov
xchg
mov
push
add
push
mov
inc
das
or
sti
rol
lcall
push
dec
fcompl
cmpsl
sbb
or
loope
popf
mov
adc
dec
fcomip
out
repnz
into
sbb
pusha
push
das
xchg
ja
sbb
mov
scas
xchg
mov
popf
add
jle
cmp
sti
xor
push
dec
cmp
loop
mov
icebp
lcall
and
push
roll
jmp
push
sbb
ret
inc
jb
sahf
sbb
loop
es
lahf
sbb
mov
dec
mov
mov
fbstp
mov
test
lcall
push
outsl
sub
inc
and
rclb
jo
mov
add
dec
call
add
adcl
mov
pop
int
inc
fucomp
xor
jp
sub
xlat
sahf
push
fisubrl
mov
insl
ja
les
push
cmpsl
xlat
add
cwtl
je
fadd
pcmpgtd
test
int3
push
mov
xor
cld
mov
insl
ljmp
cmpsl
fsubs
sbb
mov
andb
out
addb
push
mov
outsb
jbe
add
nop
cmp
fidivrs
dec
or
cmpb
xor
out
je
or
mov
push
mov
inc
jl
xor
pop
je
cmp
mov
ret
add
fistps
lods
xor
sub
aaa
mov
shll
sti
push
push
aad
or
icebp
lret
addl
and
loop
push
sbb
outsb
xchg
movsb
subl
sub
test
in
hlt
inc
mov
test
sbb
pop
scas
in
rcrl
insl
cmp
pop
loopne
mov
jo
orl
mov
ja
inc
mov
addb
mov
fistl
jle
mov
inc
lea
inc
push
jnp
add
dec
or
nop
jp
adc
imulb
and
cld
sub
stos
jge
mov
sub
xchg
and
add
mov
sbb
xchg
mov
fnstenv
lock
mov
push
pusha
jle
out
adc
repz
mov
ljmp
shl
sbb
popa
mov
xchg
sar
popf
push
js
xor
lahf
out
fisttps
dec
nop
mov
and
mov
lea
xchg
xchg
iret
bound
into
inc
scas
pop
mov
shll
sub
rcrl
clc
fs
ss
or
and
sbb
add
push
das
dec
jo
pop
mov
dec
jne
sbb
movl
outsl
repz
mov
stos
test
adc
aas
inc
mov
push
jg
mov
pop
movsb
pop
push
subb
cmpsl
in
cmove
out
xor
lret
push
addl
test
outsb
pusha
pop
cmp
mov
cli
leave
jb
scas
cmpsb
xor
cmpsl
pop
or
testb
pop
lret
popf
xor
cmp
or
icebp
jns
sbb
adc
xchg
xchg
ficompl
xchg
rorl
orb
int3
arpl
cmpsl
sahf
jns
test
ds
jmp
sbb
cwtl
scas
mov
addr16
int3
xchg
mov
cmp
mov
or
sbb
xor
icebp
or
arpl
stos
pop
jo
pop
or
xchg
insb
roll
pop
add
xchg
daa
data16
leave
mov
lods
ss
dec
cwtl
sti
xchg
cld
adc
xchg
push
fmul
and
std
push
rcll
push
mov
inc
pop
or
jns
scas
fs
imul
sbb
lret
outsl
ja
push
bound
aaa
and
andb
push
stos
lea
pop
sbb
lods
outsb
ss
pop
fistpl
xor
and
test
push
clc
push
jp
mov
push
or
ss
sbb
lret
jp
fdivs
das
dec
sub
cmp
out
arpl
stos
in
ss
out
cltd
mov
push
adc
xchg
dec
sahf
lds
add
test
fs
jl
ret
and
clc
icebp
cmc
int
xor
jecxz
cmp
imul
xor
sbb
mov
in
jb
mov
bound
or
je
jbe
test
mov
add
and
cmp
stos
incb
jns
and
aad
push
jns
and
shll
jmp
lret
jnp
rolb
xor
nop
clc
cmpsl
jl
hlt
xor
fadd
inc
pop
xor
mov
jg
rorb
inc
aas
add
xor
xabort
in
mov
and
sub
fldl
fcomps
mov
push
sub
push
adc
paddq
mov
adc
push
lods
mov
pop
xchg
xor
imul
out
roll
iret
addl
fimull
dec
adc
aad
sub
cmp
jnp
movl
test
push
iret
fsubrs
cmp
stos
rorl
adc
shlb
pop
add
movsl
inc
cwtl
jl
pop
push
imul
rcrl
dec
es
imul
scas
std
popa
mov
mov
stos
xchg
cmp
sbb
inc
das
sub
inc
sub
sub
mov
pop
xlat
outsb
xor
ljmp
adc
les
xchg
sbb
cmp
xchg
cmp
insl
or
adc
sub
lods
loopne
std
imul
cmp
insl
sbb
cmp
mov
adc
fwait
jge
fs
jo
repnz
xchg
std
xchg
jecxz
sbb
in
cmp
jne
sub
mov
add
mov
push
orl
xor
pop
lahf
shlb
out
mov
jl
scas
pop
fstps
stos
xchg
xorb
ss
mov
mov
xchg
cwtl
mov
popf
scas
push
stos
les
xchg
dec
dec
mov
mov
into
int
pop
repz
test
jb
ds
pop
popf
sub
ja
gs
or
lret
nop
out
inc
jmp
mov
int
imul
popf
sbb
mov
ret
xchg
jecxz
mov
sub
xor
mov
cmp
incb
std
shld
lea
stos
movsl
mov
push
dec
test
cmc
lock
xchg
mov
push
mov
xor
lds
lods
mov
push
mov
sbb
incl
mov
mov
inc
adc
ret
aas
lds
adc
leave
call
iret
jecxz
mov
jae
loopne
fidivrs
push
fldcw
mov
in
and
lcall
sbb
addr16
lahf
fldl
aaa
aaa
push
push
shll
adc
or
pop
xor
cld
sub
movsl
into
lret
pop
lods
sbb
inc
inc
xor
in
and
push
pop
and
sbb
popa
les
cmpb
outsl
cmpsl
ret
mov
test
call
insb
iret
arpl
xor
das
push
dec
ja
es
lods
add
in
outsb
pop
stos
insb
pop
ja
cwtl
adc
xchg
icebp
dec
je
hlt
jno
and
hlt
sbb
xchg
loop
insb
jle
sbb
lret
popa
cmp
pop
inc
in
ret
hlt
mov
xchg
clc
jmp
sub
mov
xor
call
mov
xlat
test
addr16
xlat
les
stc
push
push
jne
mov
and
out
inc
hlt
shrl
push
fs
das
jge
test
xor
ds
lret
iret
jns
call
sarl
inc
xchg
or
push
pop
xchg
mov
insb
mov
sub
adc
stos
or
pop
xlat
stos
jmp
stos
hlt
sbb
or
out
popa
mov
mov
imul
popa
movl
mov
fmull
xor
and
dec
jge
movsb
dec
psubb
sbb
inc
cltd
sbb
push
mov
test
inc
inc
lahf
xor
ret
adc
adc
roll
lods
dec
jl
fistpll
mov
inc
loope
adc
es
dec
mov
mov
imul
add
inc
adc
dec
mov
mov
sub
lcall
movsb
and
jecxz
movsl
orl
aas
incl
add
push
jns
scas
pop
in
mov
dec
pop
inc
bound
loop
clc
and
sbb
shrb
arpl
leave
lods
imul
out
outsl
mov
dec
mov
or
fidivrl
pop
inc
or
push
xchg
fisubrl
inc
into
lret
pop
js
repz
ss
mov
push
icebp
cmp
test
bound
sub
outsb
adc
sub
or
pop
enter
sbb
sub
push
inc
pop
mov
ja
pop
mov
push
aas
xchg
fs
add
mov
push
call
dec
daa
mov
mov
jnp
aad
sarl
sub
jno
std
dec
xchg
xor
std
xor
out
push
jb
push
ficoml
jmp
pop
inc
imul
mov
sub
adc
int
movsb
insl
mov
shrl
pusha
sub
and
js
mov
ret
popf
cmp
mov
push
imul
sti
mov
arpl
jno
dec
es
and
imul
fidivrl
cmp
das
push
pop
cmp
lds
js
ret
ret
movl
clc
pop
out
fmull
sub
mov
cmc
sbb
in
clc
ret
mov
jecxz
ss
dec
cmc
sbb
sbb
enter
test
ss
sbb
sbb
ret
outsl
out
cmpsb
xchg
mov
push
lret
xchg
jno
push
imul
test
or
jb
fidivl
cmpl
shll
inc
sbb
std
xlat
sbb
call
aam
mov
loop
cmp
pop
mov
jmp
repnz
sbb
movsl
xchg
kmovw
push
mov
jb
lcall
pushf
ret
xchg
lods
jae
hlt
push
xor
inc
jbe
inc
les
add
pop
inc
dec
test
add
mov
cmpsl
add
adcb
dec
jecxz
pop
movl
sub
arpl
rorl
cmp
xchg
inc
roll
xchg
mov
adc
lods
add
cmp
pop
cmp
andl
les
rclb
cmc
cmpl
loop
stos
inc
adc
push
imul
pop
cld
or
mov
fcom
test
adc
or
mov
pop
cmpsl
mov
push
add
cwtl
cmp
sub
sbb
cld
dec
mov
adc
imul
adcl
test
fs
fwait
fwait
and
sbb
daa
pop
lret
sbb
add
cmpb
ret
shlb
adc
imul
ds
into
xor
ds
mov
testb
pop
cld
push
lahf
cvtdq2ps
mov
cmp
test
xchg
popf
in
outsl
lea
daa
iret
pop
sbb
mov
mov
dec
mov
cs
je
sbb
adc
xor
xor
arpl
loop
clc
scas
jne
std
ret
dec
mov
mov
xchg
add
adc
fstpt
bound
dec
sahf
in
mov
jg
call
lahf
mov
in
push
inc
mov
adc
inc
aam
jge
lods
and
mov
dec
cltd
push
cmp
cmp
mov
dec
cmp
sbb
pop
jbe
outsl
icebp
and
test
fmull
test
stos
vpcmpgtb
cmpsb
pop
inc
iret
or
mov
mov
xchg
fsts
xchg
out
incb
lds
add
dec
jae
out
push
mov
dec
pop
mov
aam
jae
addr16
sub
std
imul
aad
add
pop
fwait
mov
adc
rorl
adc
insl
mov
push
fimull
sbb
xor
dec
sub
pop
mov
adc
scas
adc
cmp
or
scas
loopne
std
lods
push
test
test
push
test
dec
xlat
push
and
gs
mov
xor
lods
mov
lds
shrb
pop
sub
mov
mov
mov
lea
fisubs
pop
jns
stc
pop
ret
push
popa
cwtl
popf
adc
xchg
mov
jg
mov
jmp
iret
xchg
xlat
test
dec
jae
add
jo,pt
sbb
pop
mov
or
mov
int
jl
sub
push
lret
shr
repnz
and
gs
aam
xchg
inc
and
xchg
fisttps
mov
fidivs
xchg
test
std
dec
sub
mov
inc
mov
xor
leave
lret
add
jno
jnp
pusha
mov
stos
mov
mov
aad
test
push
push
mov
xchg
aas
insb
fcompl
jo
push
push
iret
gs
lret
xor
mov
insb
inc
imul
into
mov
inc
jle
and
or
je
in
ret
lahf
sub
testb
push
in
xchg
mov
int3
out
pop
adc
or
out
int3
stc
rcrl
mov
ja
lcall
push
insb
mov
js
mov
jle
adc
fimuls
mov
fadds
add
cmp
add
das
fnstcw
add
ffreep
or
inc
in
sub
inc
pop
stos
stos
cld
mov
pop
lcall
ja
push
loopne
mov
dec
xchg
sarb
fmul
fldl
mov
pop
shlb
lcall
push
jns,pn
push
ret
cltd
push
faddl
cwtl
xor
or
outsl
les
movsl
inc
daa
add
push
fcmovu
xchg
dec
push
jne
rorl
lahf
xchg
cmp
push
jp
inc
sbb
jecxz
mov
pop
outsl
sahf
sub
jecxz
and
dec
pop
mov
outsl
add
addr16
das
mov
negl
in
es
test
sbb
scas
repz
testb
cmp
mov
shll
push
dec
movsl
xchg
push
sub
les
mov
je
pop
loope
mov
xchg
es
stos
xlat
js
scas
cmova
push
aad
roll
lods
add
movsl
mov
push
fcompl
loop
xchg
cltd
outsb
add
data16
bound
xorb
dec
daa
push
pop
xor
loopne
sub
repnz
ljmp
adc
sahf
jae
clc
push
lea
xor
in
js
int
add
pop
sbb
fsubr
iret
cmc
mov
mov
pop
inc
mov
lcall
pop
push
scas
push
mov
js
popf
mov
shlb
cmpsb
pop
or
push
cltd
inc
mov
test
lea
fbld
and
outsb
mov
out
mov
mov
jae
arpl
mov
in
inc
sahf
test
mov
imul
rcrw
es
je
mov
mov
jg
mov
inc
cmc
mov
push
stc
hlt
push
faddp
xchg
loopne
cli
add
and
enter
or
or
movl
add
sbb
and
xchg
and
jmp
nop
pop
test
cld
shr
cmpsb
sub
xor
sub
mov
xor
adc
fisubrl
aad
push
add
mov
pop
push
add
jbe,pt
pop
cmp
lahf
pop
ja
jmp
loop
push
aas
sahf
out
roll
aad
fcomps
fcom
fs
decb
add
insb
shll
xchg
int3
out
out
sbb
dec
andl
daa
mov
push
jp
sub
movsb
or
call
mull
sbb
insl
aam
inc
push
push
punpckhwd
jne
les
aaa
xor
es
mov
mov
mov
jno
push
and
sub
mov
dec
dec
mov
sarl
push
test
mov
in
dec
lcall
push
cmp
popa
loop
jle
mov
sub
dec
cmp
jbe
or
mov
add
push
dec
or
add
adc
in
loop
es
push
sti
adc
inc
pop
mov
xor
mov
stos
fcoms
imul
xor
ret
dec
dec
sbb
cwtl
and
sbbb
ret
stc
mov
addr16
inc
pop
in
xor
decl
sub
or
push
ds
leave
ljmp
xchg
pop
pop
mov
mov
inc
mov
adc
repnz
lock
cwtl
mov
test
sub
push
mov
addr16
adc
bound
out
or
mov
dec
jbe
jmp
fimuls
lcall
cmpsb
movsl
stc
mov
sub
and
sbb
push
repnz
sub
leave
sub
ret
mov
jmp
daa
sbb
int
insb
out
and
je
insb
insl
pop
daa
push
call
rcrb
out
std
sub
mov
enter
out
leave
lret
dec
dec
adc
dec
cmp
jns
jg
pop
stos
aad
sbb
fisubs
add
movsl
mov
jbe
fs
and
and
stos
test
mov
cld
jno
cmp
aaa
sub
int
and
out
lds
stc
xchg
lods
xchg
lock
mov
repz
into
mov
rcl
mov
push
dec
icebp
lret
ret
ds
mov
mov
xor
inc
paddq
mov
xchg
sbb
loopne
add
call
mov
int3
ljmp
imul
rolb
enter
push
sahf
mov
sarl
ret
xchg
sub
fisubrl
inc
inc
or
les
lea
std
movsl
in
push
mov
xchg
lret
insb
and
sub
mov
cltd
shrb
lcall
imul
cltd
in
add
into
inc
test
jle
push
inc
lahf
mov
aad
push
test
hlt
ret
mov
and
pop
scas
jne
cmpsb
cld
pop
adc
xchg
mov
stc
pop
push
inc
dec
xor
cmp
rcrb
stos
cltd
test
stos
jnp
push
mov
mov
lahf
inc
push
cld
pop
jge
je
arpl
in
xor
int
sub
movsb
adc
mov
mov
dec
not
pop
sbb
test
aam
cmp
outsb
push
xchg
sti
fnsetpm(287
push
stc
sub
std
sbb
enter
mov
jecxz
out
std
aad
leave
cmp
mov
lock
mov
rcl
xchg
pop
sub
cmp
add
repnz
loopne
movsb
roll
or
insb
daa
xchg
das
fists
xor
sub
inc
and
shrb
orb
jmp
and
out
into
or
pop
data16
cltd
sbb
lea
push
jl
mov
or
jl
ds
add
dec
add
push
aad
aam
mov
aam
push
add
loope
and
push
mov
add
loope
das
lahf
mov
dec
jg
mov
jb
cmp
pop
int
jecxz
repz
pop
mov
mov
lahf
std
loope
xor
dec
je
fwait
mov
sub
add
push
int3
lods
incb
adc
insb
xchg
mov
and
push
loop
fwait
stos
ret
pop
test
int3
jge
ja
mov
cli
jbe
cwtl
mov
movsb
fyl2x
push
outsb
stos
pop
pop
jno
pop
mov
in
sbb
xor
stc
or
push
sub
inc
aaa
mov
aas
sub
jmp
call
xlat
xchg
je
int3
mov
mov
sbb
mov
mov
lcall
jmp
or
js
mov
pop
xchg
cs
dec
pshufw
xchg
jne
mov
cltd
jle
fwait
orb
dec
adc
lods
scas
lds
fs
out
push
stc
sbb
adcb
pop
push
int
or
std
sbb
imul
fwait
pop
push
push
cmc
mov
fidivl
xchg
out
ret
dec
and
cmp
ret
pop
lods
jne
aam
cltd
mov
shll
arpl
inc
inc
sarb
push
addr16
push
add
rclb
push
bound
push
stos
int3
lret
xor
push
jl
xchg
pop
loop
mov
test
add
inc
xor
daa
push
push
mov
das
pop
testl
movsb
jne
jecxz
push
or
dec
push
iret
sbb
test
push
mov
sub
loop
adcl
pop
je
icebp
sbb
subb
rcrl
push
jb
fs
pcmpgtd
xorb
adc
sbb
mov
ret
pop
lock
push
icebp
jo
lret
cmp
repnz
leave
dec
jne
loop
mov
fwait
test
dec
call
shll
sti
inc
xor
lcall
mov
jge
aam
loopne,pt
sbb
push
mov
jmp
cmpl
xor
cmp
out
fnstcw
inc
stc
rcr
adc
lods
icebp
sbb
xchg
dec
dec
sti
pop
mov
out
sarl
fnstcw
pop
add
inc
lahf
inc
mov
sub
xchg
push
mov
rorb
test
cmp
std
push
and
pop
push
xchg
push
lahf
jbe
xor
and
jecxz
mov
test
jge
add
movsb
loopne
sub
fisubrl
mov
mov
dec
ljmp
adc
je
in
dec
jns
push
sub
fwait
cwtl
sub
pop
sbb
cmp
mov
cmpb
loope
and
sbb
movsb
in
xor
mov
mov
push
andl
scas
stos
jg
in
jp
mov
daa
fmuls
dec
lods
jl
lret
ljmp
cmp
jne
mull
jp
leave
xchg
insl
test
sbbb
in
test
push
jnp
ret
in
xor
xlat
mov
sub
es
inc
push
dec
push
fs
scas
cmp
push
cmp
push
test
xlat
xchg
stc
mov
and
pop
inc
push
xor
or
outsb
fs
xchg
fsts
je
repnz
in
add
mov
int3
or
adc
sti
nop
xchg
add
mov
dec
cmp
inc
aad
es
stos
dec
inc
jle
push
test
psubd
das
mov
movsl
sbb
fcmovbe
sub
outsl
and
negb
das
dec
lea
inc
popa
sbbl
stc
adc
cmovno
or
or
call
cmpsl
lock
adc
addb
xlat
fs
dec
mov
pusha
call
xchg
scas
jbe
out
cmp
movsb
dec
jno
adc
pop
int
and
cmp
and
mov
les
dec
loop
jecxz
fwait
mov
adc
cmp
or
cmpsl
std
cli
pop
dec
pop
mov
adc
adc
insb
movsl
cmp
and
aam
pop
add
lea
cli
outsl
cmp
lcall
add
arpl
sbb
repz
out
dec
out
adc
inc
push
bound
dec
aad
jbe,pn
xor
and
xchg
movups
pop
call
insl
stos
adc
cmpsb
inc
push
fisubl
and
fimull
xor
sbb
jno
pop
jle
cld
shlb
cmp
hlt
popa
push
mov
mov
in
pop
ljmp
int3
sub
pop
clc
dec
hlt
sbb
adc
clc
pop
test
imul
pusha
je
adc
push
into
movsb
cmp
mov
imul
ret
pop
outsl
xchg
push
lock
push
nop
les
dec
fwait
pop
mov
stos
jp
sbb
jno
je
aas
add
cmp
pop
sahf
loope
leave
cmp
and
mov
fbld
out
add
into
test
sub
add
mov
rorb
push
push
pop
or
hlt
xchg
mov
cmp
cmpsb
cmp
pop
mov
inc
xchg
scas
sub
cltd
leave
ss
inc
jmp
push
pop
fcomi
sbbb
push
testl
dec
sub
sub
mov
push
ljmp
rcr
test
cs
out
jle
pop
or
cli
push
pop
fwait
xor
mov
in
lahf
jns
icebp
and
mov
fcoml
push
sbb
jae
adc
mov
jecxz
mov
mov
sbb
lret
adc
test
sbb
scas
data16
mov
imul
sub
inc
bound
into
call
lock
mov
push
sarl
mov
mov
push
adc
jge
adc
mov
int3
push
bound
pop
mov
sub
adc
jns
out
lods
jo
lds
jo
sub
adc
xor
mov
popf
ret
or
add
dec
mov
or
cmpsb
imul
cmp
cltd
fbld
or
jmp
ret
shll
add
sar
fdivrp
fbstp
adc
nop
mov
pushf
in
cmp
xor
insb
push
lods
pop
mov
push
repz
inc
mov
mov
pop
or
clc
dec
sbb
inc
mov
imul
mov
sub
les
dec
cwtl
add
stos
mov
fcomps
fs
dec
rcl
out
fidivs
lock
adc
sbb
xchg
rclb
inc
dec
sbb
adc
cwtl
adc
repnz
xchg
jns
or
lcall
dec
push
sahf
adc
movsl
sub
cwtl
aas
pop
stc
adc
mov
and
sbb
pop
gs
pop
sbb
mov
dec
mov
mov
push
add
mov
push
adc
call
addr16
add
movsb
xor
rolb
sub
into
pop
jg
jo
dec
sbb
sbbl
outsl
imul
xchg
push
inc
dec
shlb
adcb
int3
imul
insl
movsl
dec
mov
mov
jns
xchg
xchg
lcall
xor
sti
lods
push
and
sub
clc
xchg
pop
cltd
andl
ror
shll
xor
out
test
xchg
out
sub
es
adc
shrl
xor
jle
mov
outsb
repnz
in
ljmp
push
adc
mov
cli
push
mov
popa
sbb
out
std
dec
xor
shll
jbe
mov
jmp
jae
scas
loopne
xchg
out
push
sbb
movsl
gs
cmpsb
neg
out
adc
cmpsb
ss
push
jo
jb
add
data16
fs
and
bound
add
pop
call
ret
push
subb
fisubrl
shlb
jl
lods
lods
movsb
mov
lods
sub
cmpsl
xchg
xchg
mov
iret
rcrl
jo
pusha
dec
add
ljmp
test
je
mov
sbb
pop
xchg
xchg
sub
aad
add
repnz
jmp
js
es
pop
dec
dec
push
push
inc
movsl
add
ret
rol
jbe
push
addr16
into
lret
in
mov
std
dec
cmp
jns
sub
mov
xchg
add
push
test
dec
mov
sub
pop
sahf
adc
insl
cmpsb
mov
pop
fdivs
in
insb
jp
mul
int3
xor
orb
cmpl
outsb
insb
gs
pop
lds
mov
adc
clc
push
les
jb
std
lret
sbb
dec
rcl
fimuls
cmp
out
pop
xchg
iret
sbb
pushf
sbb
lods
hlt
movsl
rcll
mov
enter
jmp
dec
mov
sbbb
push
jno
scas
mov
sbb
mov
xchg
sub
or
fimuls
gs
div
adcl
dec
jb
out
cld
push
push
and
cmp
insl
xor
xor
cmp
and
inc
xchg
sub
lahf
mov
imul
outsb
push
cmpl
popa
mov
aam
xor
mov
push
add
inc
inc
sti
lret
jns
mul
addr16
test
test
sub
in
sbb
adc
sahf
dec
jl
adc
divl
movsb
stos
pop
sub
paddb
repnz
lret
xchg
push
pop
dec
sbb
jge
xchg
add
mov
adc
xchg
xchg
dec
lret
mov
inc
mov
cmpsb
push
inc
adc
cltd
dec
pop
rcrl
jb
push
or
mov
les
stos
loopnew
xchg
imul
test
xchg
lret
lock
cli
push
add
adc
cs
sbb
adc
or
cs
jae
dec
loope
mov
add
test
clc
inc
jns
std
mov
add
shll
fxch
add
lea
mov
xchg
incb
call
std
sbb
xchg
jecxz
fwait
out
scas
cltd
push
arpl
fwait
into
fldt
outsl
ficoms
xlat
orb
rorb
rorb
jnp
mov
shlb
xor
sub
test
cmp
dec
clc
lret
ljmp
xor
mov
sub
sarb
xchg
rolb
xchg
adc
pop
test
xlat
adcb
lcall
cmp
xorl
stc
rcrl
or
jnp
je
pop
and
iret
out
pop
xor
cmpsl
xchg
add
mov
xchg
jbe
or
mov
add
sub
cltd
js
das
add
jecxz
push
mov
mov
push
sbb
mov
fstpt
out
or
es
pop
xchg
cli
loope
push
or
or
jg
xchg
mov
fdivl
sbb
push
jae
imul
imul
mov
pop
fnstenv
sti
fldt
push
outsl
pusha
scas
adcl
and
add
pusha
testl
iret
in
pop
mov
sub
cmp
imul
sub
jg
iret
in
in
inc
xor
dec
sub
ret
mov
mov
sti
inc
jg
and
dec
jmp
sbb
pushf
sbb
xor
push
enter
in
cwtl
pop
or
std
jns
xchg
xor
loope
cmp
dec
loop
leave
data16
icebp
or
xchg
enter
ja
mov
mov
iret
adc
dec
xchg
pop
in
mov
mov
js
fstpl
add
cmp
andl
sbb
shr
jno
call
mov
lcall
out
rcrl
xchg
jmp
mov
mov
ficomps
xchg
xor
insl
sbb
cld
jmp
fnsave
lds
movsl
aad
movl
pop
into
or
subb
push
push
pusha
lret
mov
test
cmp
xchg
ret
inc
mov
xchg
ret
testl
out
pop
and
cmp
sbb
cmp
ret
xchg
clc
testb
pushf
loopne
xchg
popf
lock
jo
push
push
pop
fdivl
mov
sbb
ret
bound
dec
jp
pop
mov
inc
je
push
imulb
mov
cmpsb
and
push
pop
lcall
test
fsubp
mov
es
cli
ja
cmp
sub
stos
int
sub
das
pop
daa
xchg
or
ds
xchg
addr16
js
fcompl
es
mov
xchg
mov
inc
in
cmpsb
gs
mov
dec
or
outsl
cmp
orl
stos
dec
fcoml
jg
mov
pushf
stc
jns
mov
lahf
ror
out
adc
movsb
aaa
mov
inc
frstor
int3
pop
cmc
pop
loopne
mov
push
inc
cli
outsb
ja
pop
fsubrs
xor
dec
mov
sub
movsl
es
pop
in
enter
mov
in
mov
rolb
pushf
xchg
mov
fmuls
jp
mov
inc
ret
dec
bound
leave
subl
xchg
mov
cmp
add
gs
sub
sbb
sets
sub
fistpll
imul
nop
jb
outsl
daa
repnz
in
mov
adc
mov
and
mov
inc
sub
nop
sbb
outsl
cmp
mov
add
shll
lea
or
in
fsubp
jb
xor
xchg
cli
add
lcall
stc
pop
mov
ret
cmpsb
jne
std
inc
mov
mov
sahf
testb
decb
xchg
sub
mov
push
into
or
and
push
cmp
xchg
pop
push
cmp
and
cmp
das
and
into
cmp
enter
sar
cmp
dec
xchg
xchg
adcl
or
jne
movsl
lcall
je
sub
push
push
adc
fadds
or
jno
test
cmc
das
adc
shll
pop
je
inc
cli
cwtl
int3
dec
mov
cmpsl
xchg
lcall
mov
add
mov
xchg
xchg
or
push
xor
je
xchg
jbe
adc
xchg
popa
in
mov
push
jg
popf
xor
push
dec
adc
popa
mov
pop
and
adcb
cmp
popf
dec
cmpsl
loopne
cmc
daa
gs
and
std
lock
outsb
inc
inc
sub
and
popf
test
add
xor
cli
jnp
jl
or
cmp
cmp
adc
pushl
jno
jo
mov
adc
jae
int
leave
movsb
jmp
mov
or
imul
jge
ja
testl
lods
js
fdivrp
mov
in
cmp
sarb
ret
adc
mov
test
lods
cmpsl
jg
mov
pop
pop
xchg
mov
or
sbb
sbb
adc
repnz
xchg
sub
inc
lods
into
lahf
dec
clc
andl
fsubrl
repnz
aam
in
cmp
out
daa
push
xor
push
dec
outsl
les
sbbl
fstps
jns
and
bound
sbb
cltd
xchg
loope
pop
push
cmpsb
adc
or
push
xchg
hlt
xor
dec
push
in
dec
popf
test
add
es
mov
ljmp
test
repz
sbb
imul
add
loop
adc
and
sub
jecxz
ret
gs
inc
in
add
aad
into
xchg
inc
add
pop
xorl
jle
sarl
inc
jae
fists
lret
mov
nop
sahf
daa
fistpl
cmpsl
mov
jmp
faddl
inc
mov
or
leave
ret
pop
jnp
dec
adc
mov
fidivs
into
dec
in
mov
fsts
arpl
dec
adc
mov
addr16
das
pop
loop
inc
add
ss
inc
loop
push
sub
dec
aas
cmp
sarb
lret
cmp
jae
lods
fldl
test
lock
fisubs
inc
stc
mov
push
mov
jmp
outsl
mov
adc
leave
push
into
nop
scas
mov
dec
shr
ret
cmpsb
cmp
sahf
fmulp
sbb
inc
xchg
jns
icebp
adc
push
push
iret
sub
mov
xlat
push
repnz
fisttpl
outsl
stos
xor
pop
and
mov
pop
sahf
cmp
lahf
insl
into
cmp
sub
jb
jnp
mov
sub
inc
js
fcompl
add
sub
es
cltd
mov
cltd
movsb
in
push
sub
mov
pop
repnz
mov
sub
arpl
fwait
es
nop
sahf
xor
xor
js
push
jbe
push
or
imul
mov
and
stos
lock
fcom
lret
mov
rcrl
or
daa
fmull
cld
xchg
lret
push
jo
dec
test
stos
dec
orb
fadds
lret
add
int3
icebp
mov
cmp
dec
mov
dec
fdivrl
mov
ror
sbb
loop
ret
ja
jns
sbb
jmp
pop
cltd
test
sarl
and
inc
fnstsw
sarb
outsb
das
fistpll
cmp
or
cld
aam
xor
pop
fs
imul
mov
nop
add
xchg
jl
mov
pop
into
mov
loopne
xor
shlb
shlb
out
shrl
mov
cmp
nop
das
push
sarb
push
imul
sbb
lcall
insl
rcll
sti
pop
and
or
std
vpsraw
xchg
enter
adc
test
aad
push
mov
repz
sahf
push
pop
add
pop
cmp
pushf
movsl
xchg
pop
out
xchg
mov
clc
push
movsb
daa
adc
ss
adc
jg
xchg
mov
nop
bound
fcom
xchg
loop
icebp
jo
mov
scas
xchg
sbb
js
jmp
mov
adc
fimull
stos
dec
shrl
subl
add
push
out
test
cwtl
fisubrl
enter
and
push
dec
loopne
dec
pop
in
test
mov
xchg
xchg
test
xor
or
mov
popf
xchg
add
sub
pop
adc
dec
inc
mov
lret
imul
lahf
cmp
xchg
icebp
adc
xchg
jne
inc
outsb
adcl
aam
mov
bound
cs
jl
jae
pop
in
pusha
mov
jnp
cli
sbb
mov
and
addr16
movsb
mov
nop
jmp
dec
lods
xor
stos
ss
les
and
ds
jmp
pop
in
pushl
dec
cltd
xchg
popa
shrb
sbb
mov
dec
mov
xchg
mov
cltd
mov
out
sub
das
ret
aaa
scas
sub
clc
into
push
in
xor
mov
cmp
fimull
mov
pop
out
imul
aaa
icebp
jae
dec
fcomps
dec
out
mov
xor
dec
sahf
push
xor
lea
push
insb
add
mov
add
or
sub
out
arpl
or
xchg
popf
dec
jl
data16
repnz
adc
stos
and
push
push
test
out
cltd
iret
gs
sbb
and
push
push
pushf
sub
jmp
xor
fimull
out
push
pop
fdivr
je
das
push
cmp
mov
and
lock
mov
call
mov
insl
or
sbb
push
cmp
mov
stos
nop
push
xchg
mov
les
dec
jns
mov
shrl
add
loop
cmp
add
ror
mov
pusha
mov
mov
add
je
adc
push
or
out
dec
aas
fstp
add
call
mov
fldcw
sub
lds
nop
xchg
out
pushf
add
in
pop
or
js
and
leave
rclb
aam
cmp
dec
dec
jno
sarl
xchg
xchg
and
add
mov
addr16
mov
sbb
scas
popf
outsb
loop
outsl
or
call
sbb
adc
test
mov
popf
stc
adc
pop
sub
ds
sar
gs
mov
clc
sbb
push
add
outsl
shrb
es
xorl
sub
inc
pop
ja
mov
cli
jge
sbb
in
jns
and
cmpsl
scas
inc
or
add
in
pop
jb
pop
rcll
sub
sub
xchg
jo
lds
popf
ss
sbb
test
lock
mov
stc
lds
sbb
ds
mov
cld
cmpsb
inc
nop
movsl
in
iret
sbbl
fsubs
popa
mov
mov
dec
xchg
jnp
dec
mov
sahf
imul
pop
dec
sbbl
mov
sbb
adc
pop
lahf
inc
fld
mov
mov
push
movsb
rcrb
xchg
in
add
cld
cli
test
repnz
cltd
add
cmc
jb
xchg
imul
jae
adc
or
out
lcall
popf
mov
jmp
ja
mov
cmpsb
dec
gs
adc
push
dec
fld
fucomi
add
xor
clc
lret
cltd
pusha
jns
and
pop
or
xor
pop
loopne
xor
test
test
jge
push
jns
sbb
mov
xor
cmp
fwait
pop
imul
mov
sub
bound
dec
xor
ljmp
out
int
mov
mov
mov
xchg
lahf
pushf
cmp
xor
icebp
jne
bound
nop
mov
sbb
idivl
fists
push
addr16
cmpsb
es
inc
imul
aas
add
adc
mov
jg
lret
xorl
push
push
mov
es
enter
push
xchg
adc
dec
cmp
add
xchg
mov
adc
mov
ljmp
pop
sub
or
jmp
sbb
cmc
aam
pop
mov
xchg
adcb
xor
mov
pop
sub
push
mov
test
inc
cltd
mov
push
movsb
jg
or
prefetch
push
or
mov
sbbb
sub
and
lahf
in
pop
ds
mov
add
add
fs
aam
aaa
dec
mov
add
aas
push
movb
push
xchg
mov
or
notl
pop
aas
rcrl
popl
inc
shlb
call
and
leave
out
shrl
xor
sub
rclb
cmp
xor
cld
sub
hlt
or
or
push
fdivr
or
icebp
dec
jmp
aad
clc
dec
and
out
mov
mov
mov
fs
sbb
call
sub
pushf
jns
imulb
test
mov
out
les
gs
pop
sub
stos
icebp
es
bound
test
leave
or
jnp
mov
sbb
jno
jo
pop
mov
out
test
lods
and
cmp
cmpsl
mov
test
out
imull
pop
insl
cmc
sub
es
std
jns
insb
sbbb
mov
jnp
jmp
aaa
mov
sarl
ss
jmp
jb
out
jle
sbb
int3
push
xlat
ljmp
fwait
cltd
dec
inc
add
inc
popa
sbb
mov
mov
test
sub
push
pusha
shrl
add
jg
pop
sub
xchg
enter
jnp
mov
dec
lcall
stos
inc
mov
inc
push
or
mov
pop
adc
shlb
es
int
push
int
repnz
add
mov
sub
enter
and
bound
pop
jne
daa
cmp
xchg
xchg
jne
repz
pushf
mov
xor
jl
test
mov
sbb
cmp
pop
and
cmp
pop
mov
push
orl
lret
mov
cmp
xchg
adcl
pop
pusha
push
movsb
loopne
jne
jp
int3
adcb
in
pop
or
sub
inc
dec
cltd
cmpsb
stos
sarl
out
addr16
repz
lea
fidivrs
idivl
mov
pop
cli
fsubrp
nop
inc
sbb
jp
lods
pop
lods
decl
jo
es
scas
and
pop
imul
imul
bound
mov
and
ljmp
push
push
adcb
pop
in
stos
adc
pop
xlat
mov
lock
loope
xchg
jae
fisttps
aas
xchg
in
lcall
inc
rcll
xor
lea
inc
fidivrs
xchg
aam
or
int3
inc
shrb
notb
rcrl
pop
mov
dec
adc
mov
jne
xor
mov
cs
add
adc
sbb
gs
fwait
dec
mov
loop
sbb
call
mov
cmp
dec
cltd
mov
addb
sub
adc
js
or
or
pop
out
fnstcw
pusha
sbb
ja
xchg
repnz
outsb
shlb
push
cli
jecxz
jg
jne
or
mov
dec
movl
out
in
push
cmp
xor
outsb
mov
pop
cmp
dec
imul
sub
cwtl
push
outsb
or
cli
cmc
cmc
frstor
out
mov
pop
push
push
loop
xchg
out
add
dec
test
in
rorb
sub
test
icebp
jl,pt
out
fnstenv
push
stc
cli
dec
pop
inc
mov
shrl
cmpsl
inc
inc
inc
lret
cmp
mov
addl
inc
scas
repnz
xlat
xchg
pop
sbb
cltd
lahf
aas
push
mov
hlt
push
fmul
sti
inc
imul
jb
mov
mov
cmpsl
enter
out
pop
cmc
out
cmpsb
xor
and
pop
jg
jmp
inc
push
ja
andl
or
xlat
lods
outsl
xor
clc
int3
sub
xor
js
call
push
cmp
push
clc
push
sbb
hlt
es
pop
stos
cltd
xor
pop
xor
cmpsb
pop
aam
mov
mov
sub
outsl
into
sub
or
int3
in
cltd
pushf
sub
jo
cmp
and
lret
sbb
and
ss
nop
xor
int
push
xchg
repz
ljmp
repnz
outsb
jmp
es
jl
mov
inc
loopne
sub
and
pop
inc
push
push
ss
lahf
xchg
cmp
dec
fwait
jne
loope
daa
inc
inc
cmpsb
fisubl
out
jecxz
ds
lahf
add
data16
push
xchg
loope
push
out
mov
mov
mov
int3
jecxz
mov
imul
imul
addr16
xchg
aaa
lret
xchg
cmpsl
repz
subb
pop
jg
ss
cmp
xlat
add
sbb
jno
cmpsb
or
jo
cli
dec
icebp
dec
and
loopne
cmpsl
mov
mov
imull
adc
jae
adc
fsubl
sub
push
movsb
fldt
jp
aaa
pop
les
sbb
cmpsl
cltd
add
rcll
stos
shrl
out
pop
and
data16
sub
inc
fwait
xchg
rorb
sub
xor
add
pop
std
add
orb
xchg
pop
int3
sub
aas
add
bound
shl
mov
movsl
mov
mov
push
pop
inc
fs
add
es
mov
fldl
add
pop
adc
popa
mov
xor
das
neg
hlt
add
imul
mov
pop
rep
cmpsl
int3
lcall
insl
jl
xchg
or
stc
inc
and
xor
outsl
insl
insl
aad
inc
mov
aad
pop
xchg
mov
sbb
or
or
int3
je
or
push
rcrl
pop
cmp
bound
mov
pop
cmc
aaa
fdivs
xor
and
pop
push
cmpsl
je
stc
xor
sbb
pushf
or
cmp
test
jl
arpl
insb
add
sub
xchg
in
pop
insb
lea
in
and
jb
int3
clc
mov
pop
mov
int
lret
mov
es
mov
pop
das
cs
adc
push
pop
es
out
add
xchg
adc
jno
imul
jl
das
outsb
and
mov
mov
or
mov
or
xchg
mov
nop
mov
xchg
mov
add
clc
fldenv
xchg
dec
iret
ficomps
jno
or
inc
cs
fs
movsl
ret
mov
jne
out
mov
mov
push
pop
fstps
or
dec
insl
dec
loope
loop
mov
test
mov
sti
repz
fiadds
cmpsl
add
repz
inc
imul
enter
loope
mov
and
pusha
lcall
pop
add
out
ss
es
dec
in
fisubl
push
pop
rcl
cmp
add
scas
mov
dec
xor
cmp
dec
shl
sbb
adc
pop
push
imul
mov
cmc
jo
jo
loop
mov
int3
jo
out
test
inc
mov
push
xlat
lcall
int
fbstp
lcall
ret
insb
sti
popa
and
cmpb
bsf
push
cmp
sub
or
ljmp
stos
addr16
inc
xchg
loope
xchg
js
add
inc
mov
es
xlat
or
mov
xchg
loop
sti
mov
xor
mov
repz
shl
mov
insl
and
les
cltd
stc
adc
es
pushf
out
and
clc
ret
lahf
pop
in
cmp
mov
cmc
outsb
fldcw
push
outsl
stos
sub
stos
dec
adc
cmpsl
out
fadds
cmp
sbb
ss
das
pop
icebp
dec
test
in
iret
cmpb
orb
dec
cwtl
loopne
ret
adc
aaa
or
js
pushf
cltd
xlat
aad
cltd
lret
pop
xchg
mov
push
push
push
clc
push
out
cltd
lcall
nop
push
mov
pop
cmpsl
clc
cld
lods
mov
ds
xchg
inc
rol
fdivrl
test
pop
sbb
and
stc
cmp
iret
mov
mov
divl
mov
inc
das
out
mov
movsb
fdivrp
mov
add
jge
loope
jns
jle
cld
or
repz
hlt
jp
test
lods
sarl
xchg
dec
push
std
imul
fistpll
dec
mov
jle
rcrl
cmp
mov
or
inc
and
scas
dec
adc
andl
pop
hlt
mov
xchg
adcb
lock
inc
clc
or
mov
sbb
movsl
and
filds
loopne
int3
dec
popa
xchg
inc
jno
dec
inc
mov
mov
xor
lahf
mov
xorb
add
dec
mov
add
loopne
int
xor
dec
pop
cld
jno
sub
dec
push
cmc
flds
lds
into
mov
cmpsl
lock
imul
pop
pop
or
and
and
rcll
shlb
mov
xlat
enter
add
jmp
cli
daa
ss
add
icebp
and
mov
mov
xchg
loopne
test
pop
inc
shlw
pop
fwait
mov
sbb
js
pop
jmp
fdivl
cmpsl
shr
je
adc
mov
mov
jb
dec
lcall
xchg
aas
cmp
mov
fs
dec
mov
in
pop
sbb
in
push
aam
pop
push
mov
es
add
out
pop
add
lods
mov
insl
out
inc
xchg
mov
pop
push
movsb
loopne
outsl
cmc
insl
and
cli
ja
cmpsl
test
cld
xor
outsl
push
push
js
mov
xor
outsl
push
xor
cmp
into
xchg
pusha
push
test
push
pusha
lea
sub
lret
mov
xchg
nop
cmp
xor
jne
sub
xchg
cmpsl
add
add
bound
dec
and
sbb
jmp
out
xor
jo
hlt
xor
shrl
jle
daa
sbb
add
sbb
xchg
sahf
les
aaa
scas
lahf
out
mov
jb
mov
sbbl
andl
sub
sahf
jno
inc
cmp
jbe
push
dec
ja
test
mov
pop
jb
pop
sbb
or
bound
not
les
mov
pusha
mov
mov
rclb
inc
and
data16
inc
inc
rorb
test
outsb
lds
popa
jno
stc
dec
jl
pop
outsb
dec
stos
sub
jecxz
addl
inc
gs
leave
orb
inc
fistl
fidivs
in
xor
out
cmp
sbb
imul
mov
fwait
cmp
mov
in
mov
inc
jbe
xor
inc
mov
sahf
popa
sub
cmc
arpl
xor
mov
ds
not
imul
push
outsl
fwait
sub
lods
push
pop
or
sub
jo
sahf
imul
inc
insl
inc
mov
fimull
test
fisubl
negb
fwait
jg
movsb
sahf
lods
out
mov
lahf
std
inc
imul
flds
jge
lods
sub
daa
fistpll
fisttpl
dec
sbb
lds
and
add
js
leave
lea
push
aam
xchg
lods
lods
out
dec
shll
adc
add
mov
ror
test
pop
popf
cmp
nop
out
cmp
push
or
test
sti
aad
jecxz
in
int
flds
imul
inc
ss
out
dec
pop
or
or
xlat
xchg
ficompl
cmp
dec
cmp
jecxz
cmp
popf
mov
mov
pop
mov
mov
xlat
jecxz
jmp
ja
pop
aam
cld
add
ror
pop
xchg
xor
mov
int3
adc
popf
push
imul
insl
test
enter
add
pop
cltd
or
mov
lock
xchg
cmp
stc
lock
out
fimuls
pop
das
insl
push
jae
dec
or
ss
add
push
mov
jne
adc
inc
mulb
lods
les
mov
inc
sarl
lret
jnp
ret
icebp
insl
gs
pushf
jo
and
jno
fidivrs
mov
bound
pop
push
imul
push
psubusw
adc
jbe
mov
add
mov
outsb
pop
xchg
jnp
xor
test
jbe
sub
ljmp
out
fsts
ss
mov
stc
ficomps
add
push
push
pop
ds
cmp
fs
adc
popa
jmp
les
mov
outsl
rep
pop
out
xor
sti
arpl
jns
mov
imul
mov
std
les
rcr
fiadds
fcmovbe
cmp
fcoms
push
inc
mov
mov
movd
mov
pop
add
xchg
xchg
out
mov
pop
push
sub
icebp
cmpsb
jmp
push
jge
fmull
movsl
stos
lods
sbb
jb
and
sbb
sub
push
insl
or
pushl
inc
notb
cmp
test
imull
insb
fstp
inc
lods
scas
xor
sbb
pop
inc
push
gs
mov
xor
in
pop
inc
ljmp
rorb
fsubs
std
push
mov
xchg
call
mov
push
clc
popa
es
mov
sub
xchg
adc
and
imul
adc
cli
cwtl
adc
dec
shlb
fdivrl
add
sbb
andl
push
cmp
scas
inc
fistpll
jge
in
inc
mov
pop
cmp
clc
add
data16
nop
and
push
gs
mov
lds
jb
jb
jl
or
cmp
int
lods
pop
dec
stos
mov
add
or
adc
mov
aas
inc
testl
cli
lods
insl
lahf
mov
push
cmp
pushf
lods
dec
dec
fsubrp
ljmp
pop
popa
sahf
test
fldt
insl
sub
dec
popa
adc
lods
aas
inc
sub
jne
xchg
fprem
das
inc
arpl
test
jge
pop
xchg
aaa
lret
jmp
loopne
add
mov
sub
sub
repz
mov
out
add
imul
sub
jmp
in
fisubrl
loope
data16
xchg
add
and
shl
mov
add
jle
adc
adc
pop
dec
das
out
xor
push
loope
ja
jle
cli
inc
jo
jmp
or
pop
inc
mov
adc
xor
fnsave
jl
adc
push
std
jmp
aaa
icebp
jmp
and
or
std
shll
es
imul
insb
lods
mov
stos
out
fcmovu
fistps
jae
imul
ljmp
dec
jle
in
sub
dec
cmp
xrelease
pop
ret
jp
dec
ja
xchg
push
test
xchg
sti
push
mov
lahf
xor
js
pop
or
xchg
xor
jp
adc
pop
jp
cmp
push
cltd
push
mov
popf
in
sbb
jno
arpl
ljmp
mov
test
inc
inc
hlt
sti
adc
scas
test
xchg
int3
mov
xchg
scas
subl
pusha
sub
jg
ds
loopne
xchg
mov
aam
jge
or
imul
push
es
fadds
dec
sub
cltd
jp,pt
nop
mov
fwait
xor
icebp
sub
mov
mov
pop
in
dec
mov
test
fwait
sahf
and
jmp
mov
cwtl
sbb
lods
push
adc
inc
mov
pop
mov
dec
mov
jl
inc
fs
flds
xchg
xchg
call
repz
fsts
aam
cmp
pop
insb
push
outsb
inc
inc
push
arpl
push
les
ret
ret
and
jno
pop
rolb
add
inc
adc
dec
aas
cmp
sbb
popf
push
rolb
cli
mov
mov
sbb
je
jnp
dec
sub
or
ret
cli
mov
andb
sbb
jnp
push
dec
inc
sbb
bound
and
ja
inc
aas
sub
cmc
or
sub
dec
sub
jg
stos
daa
je
jmp
dec
loopnew
test
mov
xchg
jmp
hlt
adc
iret
jns
pop
mov
fcomi
test
std
in
pushf
aad
add
fnstenv
std
jg
imul
lret
repnz
repnz
sub
pop
test
sub
mov
inc
push
int
xchg
js
inc
sub
mov
stc
xchg
cmp
jp
std
xchg
mov
in
lods
test
and
shl
jl
adc
push
loope
xchg
push
add
sbbl
lds
mov
mov
and
cmp
cmp
outsb
addr16
fcmovu
shll
dec
cmpsb
pop
push
mov
test
jge
cmp
std
scas
je
add
adc
dec
lds
push
push
xchg
sub
adc
mov
call
lds
int
xor
push
fucomp
addr16
or
fwait
adc
or
mov
xchg
pop
je
xlat
add
ja
mov
mov
cmc
or
popf
test
dec
jle
outsb
adc
in
mov
lds
aaa
push
mov
leave
jecxz
testl
jae
lahf
das
push
inc
mov
popf
sub
mov
push
lahf
mov
imul
adc
dec
inc
and
scas
in
call
add
adc
fxch
in
stos
das
dec
mov
xor
movsb
fsubrl
rcr
ds
and
pop
push
int
inc
xor
mov
in
pusha
fcom
dec
push
ret
lret
inc
push
dec
xor
or
les
mov
inc
daa
jle
shll
es
sbb
xchg
popa
cltd
mov
lcall
xchg
jecxz
pop
repz
ret
dec
gs
mov
ficoms
jmp
xchg
mov
and
lret
ljmp
cltd
mov
xchg
adc
out
pop
sbb
push
movsb
repz
mov
push
out
and
pop
gs
mov
xchg
lahf
ret
dec
rolb
test
and
add
arpl
and
lahf
mov
daa
add
mov
jge
lea
inc
or
mov
mov
mov
loopne
push
or
dec
jnp
movsb
and
ficoms
aam
rcl
lret
mov
jg
and
hlt
ficompl
in
cwtl
or
inc
in
fcoml
jecxz
push
arpl
ja
jecxz
int
in
ds
sub
inc
add
xchg
cltd
in
push
dec
push
lret
xor
jg
jl
ret
test
push
jns
out
pop
in
jne
notl
cwtl
imul
push
je
mov
pushl
mov
pop
sbbb
mov
fildl
fcompl
add
fldenv
cmpsl
std
das
jne
loopne
stos
das
push
pop
pop
ljmp
add
ljmp
data16
push
imul
xchg
adc
or
dec
xor
cld
sbb
and
cmc
push
mov
pop
jns
pusha
sub
pop
pop
gs
fninit
loopne
sbb
cmp
jne
mov
push
xlat
inc
ss
push
jp
ficoml
je
fwait
push
ss
mov
mov
push
rolb
dec
nop
movsb
frstor
out
test
pushf
aam
or
fldl
or
pop
pop
jne
push
sbb
jnp
ficomps
push
mov
test
add
and
cs
mov
mov
sbb
and
push
out
sbb
cli
scas
scas
xlat
jge
jle
movsb
inc
cmpsl
outsb
inc
sub
js
pop
aaa
pop
xchg
out
sti
pop
add
cwtl
cltd
jae
and
call
je
pusha
inc
push
sub
jno
mov
push
divb
divl
adc
in
xchg
sub
jne
mov
aam
push
xchg
fcmovu
lods
inc
mov
insl
lock
lods
jns
inc
std
aas
ret
faddl
mov
test
lock
push
int
pop
es
mov
add
cmp
mov
sub
jns
sti
add
inc
loopne
cmp
push
mov
or
bound
int3
pop
push
or
dec
les
stos
cwtl
sbb
xchg
pop
jp
cltd
ret
fisttpl
lea
repnz
inc
adcl
cmp
popa
xchg
sbb
mov
mov
mov
jle
sub
jmp
test
cmpsl
jnp
push
pushf
pop
mov
mov
inc
ja
sbb
inc
loope
not
xorl
xchg
imulb
rcrl
leave
cwtl
jb
ds
loop
movsl
es
cmp
fstpt
aas
sahf
roll
rcrl
jb
int
jmp
cmp
dec
mov
cmp
xchg
into
jp
or
pop
cwtl
sbb
pop
and
mov
xlat
adc
sub
in
mov
xor
xor
inc
cmpsb
dec
orl
test
adc
mov
loope
rclb
fstl
sti
in
mov
aad
xchg
add
cmp
jg
lahf
add
call
fmull
adc
dec
cmp
ret
fildll
adc
cmp
rcl
dec
inc
cli
sbb
paddw
inc
and
and
cmc
push
and
fs
mov
xchg
in
cld
call
dec
sbb
fmul
nop
lds
data16
icebp
inc
js
mov
out
fstl
cvtps2pi
sub
repnz
loopne
out
mov
out
xchg
mov
and
pop
leave
xor
sub
outsb
cmpsl
jns
sub
sbb
push
push
jmp
mov
xchg
cwtl
rcr
data16
push
jnp
bnd
cld
dec
stc
cli
inc
cs
sub
cmp
xor
jno
mov
jns
das
push
dec
inc
scas
icebp
cmp
lahf
adc
test
pushf
call
inc
add
inc
pop
pop
outsl
cld
inc
lret
push
inc
fdivrl
lahf
fstpt
fs
outsb
ficoml
test
pushl
mov
mov
into
icebp
jl
push
mov
adc
das
sub
and
jle
add
lods
adc
cltd
jbe
pop
pop
shl
ret
lods
mov
add
pop
aad
cmc
mov
push
mov
add
negl
xlat
xor
mulb
hlt
lock
ss
fwait
jmp
int
cmpsl
icebp
or
xor
and
xor
stc
xor
sub
cmp
inc
push
fucomp
mov
dec
mov
adc
add
adc
int
data16
mov
add
dec
fistpl
insb
cmc
or
adc
mov
add
xor
xchg
popf
clc
dec
es
and
sbb
cmp
enter
mov
and
add
jne
in
nop
imul
lods
adc
mov
or
negl
xchg
push
cmc
or
sahf
dec
or
mov
sbb
mov
sbb
cmp
or
mov
xchg
fsubl
bound
les
mov
repz
leave
mov
push
imul
xchg
pop
push
push
pop
stos
jmp
jbe
clc
loope
call
or
and
daa
pusha
movsb
insb
mov
pop
sahf
mov
push
loopne
clc
sub
ret
mov
pop
mov
cmpsl
pop
popf
aad
and
aad
dec
xchg
popf
hlt
pop
pop
cwtl
and
jge
test
std
scas
nop
xchg
mov
cmp
scas
ja
or
or
dec
xchg
pop
push
loope
mov
sbb
adc
xor
les
cmpsl
clc
inc
cmp
sahf
sbb
mov
fs
fs
ror
hlt
lret
sub
xchg
stos
repz
fsubrl
inc
dec
mulb
fcmovne
jnp
stc
cmp
test
mov
xor
add
add
mov
rcrl
jle
mov
loopne
xchg
call
sbb
xchg
lods
inc
pop
das
cli
popa
mov
std
shrl
fucomip
xor
js
fwait
pop
daa
dec
in
jo
mov
jae
mov
fadd
xchg
insb
mov
jae
sub
fsubp
bound
in
enter
dec
adc
mov
stos
dec
mov
mov
cmpsb
or
sti
imul
imul
loop
adc
xchg
fimuls
sbb
pushf
test
out
pop
out
mov
jne
or
mov
out
jp
fnstenv
outsb
or
ja
cwtl
push
xor
sbb
xchg
push
jb
fnstcw
ret
imul
lret
lret
test
xchg
bound
in
int
inc
pusha
mov
push
adc
cmpsb
xchg
add
arpl
push
mov
sbb
mov
dec
fsubrs
pop
scas
fsts
std
or
xchg
pusha
sbb
xchg
je
int3
gs
fstps
ss
jno
lret
push
push
push
dec
idivb
push
add
mov
pop
leave
rorl
mov
mov
mov
cli
xchg
add
mov
adc
sbb
jno
and
xchg
sub
or
outsl
int
shl
mov
push
or
testb
xor
push
xchg
test
outsb
mov
adc
push
pop
fdivs
add
dec
jb
outsb
xchg
sub
loope
push
and
adc
jo
rcrl
iret
mov
fildll
mov
push
mov
push
repz
cli
jl
loope
mov
mov
push
enter
add
push
add
lods
xchg
sub
insb
jl
xchg
into
mov
xacquire
aad
ret
sub
idivb
jno
mov
xchg
and
xor
xor
shlb
dec
lods
or
inc
jge
adc
inc
ljmp
fildll
gs
jb
mov
mov
sahf
dec
inc
xor
outsl
repz
mov
test
mov
mov
mov
cmp
jo
or
iret
mov
daa
sbb
mov
push
sbb
sbb
fstl
jne,pt
sahf
minps
dec
mov
mov
scas
cmp
inc
xor
sub
loope
hlt
sub
testb
cmpsb
sahf
subb
dec
add
rcrl
scas
andb
lcall
xchg
pop
es
loope
imul
filds
or
addl
push
mov
cmp
daa
pop
jmp
outsb
sbb
sbbl
mov
pop
and
mov
fnstsw
inc
subb
mov
cmp
mov
roll
xlat
stos
push
cmpsb
jnp
mov
mov
xchg
add
scas
xchg
or
ljmp
mov
out
testl
popf
jecxz
jne
pop
gs
mov
inc
mov
scas
push
add
or
sbb
dec
loope
stc
fidivrs
jo
jnp
cld
or
xor
dec
lcall
ss
packsswb
ja
jecxz
and
fnstsw
ret
test
push
xor
pusha
lods
sub
outsl
sbb
fmuls
inc
sbb
sbb
xor
xor
jo
pop
xchg
cwtl
inc
and
inc
dec
fcmovne
and
ljmp
mov
adc
sub
roll
sub
and
rcll
mov
repz
mov
fdivp
negl
fidivl
sbb
adc
inc
mov
icebp
dec
insb
movsb
ja
mov
push
xchg
sub
push
lods
pushf
repnz
movsl
pop
push
mov
or
push
ds
mov
iret
movsl
mov
and
jmp
subl
cwtl
pop
ds
fisubl
adc
push
fpatan
xchg
int3
and
pop
adc
and
mov
mov
cmp
aad
sar
inc
test
out
cmp
mov
xchg
push
xchg
inc
mov
cmpsl
xor
fs
fisubl
add
mov
loope
in
test
test
movb
out
push
negb
dec
adc
lods
cs
daa
push
ljmp
inc
inc
data16
or
clc
ljmp
mov
sahf
inc
jle
mov
sti
fisubrs
inc
dec
dec
jae
add
test
incl
sub
xor
mov
je
add
rorb
hlt
add
or
inc
aad
out
inc
pop
and
sub
out
mov
addr16
jae
inc
push
aas
lods
pop
xchg
inc
ja
fcoml
jl
int3
js
lods
jp
call
pop
jbe
stos
in
arpl
push
jns
jl
jle
hlt
ljmp
ljmp
fs
sbb
addb
nop
dec
xchg
jne
sub
gs
int3
das
dec
and
dec
sbb
fistl
adc
in
mov
cmp
jl
cli
add
dec
ret
movsl
pop
push
shll
fiaddl
push
scas
mov
pop
leave
out
xorl
filds
xlat
adc
xchg
push
fs
pop
out
mov
xchg
mov
sbb
push
push
and
outsb
or
pop
mov
or
lods
rorb
je
je
andl
cmp
jge
loopne
rorl
cli
insl
in
nop
mov
iret
push
add
sbb
addr16
cmp
inc
push
imul
add
outsl
push
mov
pop
mov
mov
imul
out
jnp
shrl
test
mov
lret
xlat
daa
add
std
fnstsw
test
aas
push
xchg
lea
jb
mov
sbb
sub
xchg
xchg
orl
sub
jb
dec
sbb
addr16
repnz
cmp
jle
mov
dec
adc
imul
aaa
fstps
add
jbe
and
lcall
movsl
sub
push
in
lods
cmp
sbb
dec
cmp
pop
leave
imul
test
lret
ljmp
loope
push
or
in
ja
add
pop
pop
dec
inc
jbe
push
sarb
repz
aam
xchg
add
mov
dec
out
xchg
movsl
pushf
inc
and
mov
test
jo
xor
insl
negb
xchg
adcb
mov
scas
bound
fidivs
imul
sub
sbb
scas
xor
es
mov
jae
add
xabort
roll
cli
add
fcmovb
mov
and
cmpsl
push
idivb
test
in
sbb
jne
xchg
imul
push
or
sbb
fcmovbe
inc
mov
cmp
je
sbb
push
aas
push
sbb
fstl
push
in
push
sbb
into
xor
movsl
pop
mov
mov
mov
fwait
mov
jne
aaa
loopne
fists
hlt
orl
scas
ret
sub
or
mov
es
inc
inc
repnz
daa
and
pop
xchg
cmp
adc
jl
imul
test
std
mov
jbe
mov
es
cmp
lods
lret
lds
pop
cmp
xchg
push
rorl
orl
push
inc
loope
dec
push
dec
jle
testl
mov
mov
lods
in
sbb
mov
dec
inc
sbb
sbb
dec
subl
pop
mov
popa
mov
pop
inc
push
jmp
or
mov
sub
xorb
clc
out
stc
xchg
mov
fistpll
sti
int
data16
or
hlt
mov
cmpsb
ss
inc
mov
mov
loopne
mov
push
movsb
mov
pop
test
add
nop
xchg
cmp
mov
loope
shlb
or
inc
add
jecxz
shl
lahf
xor
mov
aam
xor
sbb
lahf
xchg
adc
push
mov
mov
outsl
push
notl
xchg
mov
insb
fbstp
add
mov
test
cmp
cmpsl
sub
lods
sahf
and
icebp
scas
je
gs
push
stc
cmp
nop
daa
test
push
cmc
add
or
inc
int3
mov
das
pop
fisttpl
stos
and
scas
jmp
pop
xor
xor
and
push
pop
js
pop
pushl
nop
int
jnp
ds
imull
dec
cmpsb
arpl
aad
inc
das
mov
shr
cld
xchg
cmp
xor
jp
aaa
push
xchg
roll
cltd
jmp
testl
jge
imull
adcl
shrl
mov
adc
cmpsb
pop
ds
push
in
stc
mov
ficoml
cmpsb
cmp
cmpl
jmp
add
push
xor
ss
and
inc
mov
push
adc
dec
mov
jle
std
mov
les
push
cmpsb
pop
sub
mov
out
call
jg
inc
xchg
push
mov
pop
mov
jge
lods
fimull
pop
xor
mov
push
mov
stos
sbb
ds
xchg
sub
pusha
in
into
lcall
pop
mov
adc
loopne
inc
pop
dec
adc
and
in
jne
xlat
loope
das
push
jmp
mov
popf
jae
adc
sbb
xchg
mov
aad
clc
faddl
ds
mov
mov
xor
xor
and
xchg
mov
jle
in
xchg
push
lds
dec
sbb
dec
outsl
inc
or
pop
pop
and
mov
adc
pushf
int3
dec
pop
lock
dec
mov
ficoml
sub
ficoms
addb
mov
test
adc
sub
sub
in
cmp
subl
sbb
enter
mov
pop
cli
adc
out
enter
daa
jno
or
repz
in
dec
orb
mov
pushf
popa
fildl
pusha
mov
lret
in
fldcw
mov
loopne
xchg
inc
jp
jbe
loope,pt
loop
dec
adc
test
ret
mov
sbbb
jnp
fs
lret
call
mov
int3
cmpsb
inc
pushf
mov
push
mov
data16
cwtl
xor
jecxz
inc
mov
or
and
testl
mov
sub
push
mov
dec
jns
imul
je
data16
push
lods
mov
in
adc
subb
shlb
push
jecxz
jl
lea
addl
sub
scas
sub
into
cmpl
dec
ss
test
popa
jns
xor
stc
and
cmp
fldt
test
jl
pop
lds
adc
mov
ret
sbb
add
sti
rolb
stc
in
mov
mov
aas
mov
lods
pop
fmulp
cld
imul
cli
ret
out
mov
inc
ror
mov
in
idivl
add
sbb
popa
dec
xor
and
clc
sbb
lods
cli
cmpsl
xorl
add
mov
jecxz
ret
addl
arpl
mov
push
jmp
shll
jmp
decb
rolb
movsb
mov
out
cwtl
inc
mov
scas
add
push
pop
cmp
adc
pusha
pop
and
xor
push
es
add
mov
out
in
insl
push
dec
or
loop
ftst
scas
push
stos
push
dec
sub
bnd
pcmpgtw
shrb
cli
out
sbb
push
pop
jae
push
out
in
cmp
mov
xchg
aad
pop
lcall
pop
lds
aaa
mov
and
arpl
imul
gs
xor
fdivl
sti
push
cltd
imulb
and
adc
pop
or
push
jecxz
js
aas
mov
repnz
xor
inc
push
and
shrl
cld
push
jnp
add
stc
call
push
in
push
call
mov
pop
mulb
popf
cmpl
jl
fistpll
movsl
shrl
shrb
aas
dec
jecxz
sbbb
jge
adc
cltd
push
jle
rcr
fdivrs
sbb
movsl
jle,pt
inc
push
out
fcomps
sbb
or
pop
push
sub
leave
jecxz
jo
icebp
and
out
xchg
ret
psubq
loopne
faddl
pop
rcrl
xor
mov
leave
xchg
mov
data16
fxch
jae
mov
pop
dec
iret
jno
int3
or
data16
ret
stos
add
jnp
fcmovu
jge
int
fwait
jg
test
dec
repz
cmp
addb
les
loope
dec
cwtl
pop
cmc
push
leave
xchg
cmp
lods
xchg
xorl
cwtl
pop
das
in
xchg
sbb
or
pop
xchg
mov
lahf
ficoms
inc
jnp
pop
sub
stos
pop
sub
xchg
or
or
add
or
adc
rcll
pop
mov
push
add
fnsave
pop
cmc
push
and
stos
and
leave
shll
sarl
or
lods
addr16
pop
cs
jmp
popf
mov
bound
push
inc
sahf
xchg
clc
nop
outsb
or
and
push
in
jle
cs
cs
cmp
mov
xchg
test
cld
mov
cmp
stc
jp
iret
pop
or
jo
divb
mov
cmp
push
loope
sub
in
pop
add
js
xchg
jp
pop
jbe
pushf
iret
cmp
mov
mov
push
mov
xor
mov
cmpsl
cmp
mov
xor
pop
scas
insl
les
mov
jne
pop
xchg
fdivrs
mov
dec
sub
cmpsb
out
imul
xchg
dec
pop
push
sub
xchg
pusha
insb
or
sbb
cmp
into
or
mov
cmpsl
mov
clc
xor
mov
or
xor
push
or
pop
lahf
jmp
push
icebp
dec
cld
fucomp
fucom
xchg
push
cli
push
and
out
mov
stos
jbe
std
xorb
test
out
and
out
aas
xchg
fisubs
dec
pop
adc
inc
loopne
movsb
mov
out
mov
cld
cmc
mov
mov
jns
fs
fnstcw
adc
add
ds
and
clc
test
aaa
leave
push
inc
cltd
test
insb
test
fstpl
sub
sbb
sbb
inc
sar
dec
pop
add
push
cld
decb
mov
gs
mov
test
inc
je
enter
icebp
test
push
jae
fnstenv
inc
fmull
cwtl
push
jbe
inc
test
fwait
mov
int3
out
mov
mov
stos
sbb
mov
js
xor
adc
or
jae
cli
pop
fisubrs
pop
insb
push
clc
rclb
xor
shlb
aad
cmp
and
push
aaa
sub
repz
sbb
cld
loopne
adc
das
test
les
mov
rorl
cmp
sbb
sar
xlat
inc
push
push
mov
cmpsl
jl
jne
xchg
sahf
loop
cmpsb
add
jo
stos
out
xchg
stos
mov
jecxz
sbb
jle
push
inc
test
adc
div
stc
push
mov
cmpsl
inc
inc
mov
mov
test
or
das
cli
mov
js
xchg
xchg
jp
daa
data16
and
mov
mov
hlt
fcompl
int3
mov
aaa
mov
xchg
das
enter
sub
aam
jno
mov
repz
movsb
mov
lret
fs
sbb
dec
outsb
sbb
repnz
sub
cmp
xchg
mov
or
dec
test
outsb
pop
andl
xchg
mov
mov
movsb
cmp
cmp
fmuls
mov
roll
movsl
les
mov
bound
fdivrs
test
cmpsb
mov
dec
push
push
pusha
xchg
push
push
push
jp
rorl
push
xchg
ds
adc
xor
divl
dec
mov
sbb
push
roll
out
into
leave
adcb
mov
lods
movsb
stc
mov
lret
push
or
jo
ror
adc
xlat
sub
xchg
push
stos
add
rcl
sub
movsl
aam
inc
mov
cmc
bound
xor
mov
das
xor
mov
push
out
jbe
dec
stc
jmp
out
pop
sub
push
and
stc
test
sub
test
div
mov
cli
enter
lret
push
popf
ds
scas
add
pop
sub
xor
pop
jp
inc
inc
push
or
sahf
mov
fdivrl
and
shrb
push
int
push
daa
andl
adc
bound
jmp
cmp
add
test
pop
sbb
enter
mov
incl
add
mov
mov
les
push
out
mov
push
mov
notl
push
or
mov
push
lea
cmpb
rorb
inc
imul
dec
jmp
daa
inc
jo
cmc
fadds
lock
pop
int
sbb
in
loope
outsb
lcall
sub
cmpsb
xor
movsb
movsb
sbb
lret
mov
imul
sarb
jne
movsb
mov
pop
sahf
lods
daa
ja
or
mov
inc
outsl
stos
xchg
into
repnz
mov
pushf
andb
mov
sub
cmp
mov
lock
sub
cmpsl
mov
jecxz
stc
adcl
leave
lret
cltd
cmp
in
or
inc
stos
sbb
cmpsb
push
xchg
shll
pop
stos
inc
stc
jnp
js
fcmovnu
out
push
cmp
pop
add
dec
std
jno
and
push
xchg
pop
cmp
xchg
inc
pop
cmc
out
rolb
popf
inc
push
cmp
imul
xorb
neg
mov
das
addr16
cmp
frstor
push
pop
repz
push
ljmp
ret
cmp
xchg
sti
shll
pop
jo
cmpsb
pause
jl
push
push
cltd
or
push
aam
jmp
xchg
xor
jne
loop
pop
jle
and
clc
and
mov
push
add
testb
loope
xchg
ljmp
xlat
lock
push
lret
daa
jns
push
out
cwtl
sub
and
xor
mov
mov
xlat
xor
arpl
aad
inc
push
sbb
add
andb
add
imul
pop
jl
adc
push
enter
addb
ja
fnstcw
pop
dec
mov
xchg
or
in
sbb
sbb
cmp
mov
negl
test
xchg
add
shl
push
incb
xchg
insb
sbb
mov
lds
call
cmp
shlb
mov
data16
jnp
rcrl
ficoml
pop
icebp
mov
push
loop
in
mov
arpl
lret
mov
mov
insl
sub
int3
loope
test
sbb
dec
sbb
add
and
dec
popa
cmpl
pop
push
push
testb
js
dec
in
jae
jmp
push
mov
jp
xchg
cmp
cmp
or
mov
inc
fldt
adc
loopne
xchg
push
ss
lret
inc
inc
and
mov
mov
lods
and
xchg
sbbl
fistpl
jle
lea
xorl
lock
cmp
mov
out
pop
das
ret
or
mov
fdiv
shl
or
daa
fisttpll
lea
movsb
push
icebp
cld
xchg
arpl
jb
push
inc
sub
es
push
add
pop
dec
ret
inc
hlt
adc
rorb
jb
in
pop
adc
cli
iret
or
scas
gs
add
dec
sbb
test
jb
fs
pop
fistps
aas
jge
ja
fsubs
cmp
dec
fs
cmp
and
sub
shlb
mov
jo
in
shlb
inc
test
sbb
pop
dec
sub
lea
in
sub
lock
ss
lods
mov
lods
xor
or
test
in
add
sub
sub
rcr
in
mov
fs
mov
mov
dec
mov
loop
stc
add
pop
pop
test
arpl
pop
or
jmp
out
dec
sbb
lahf
je
xlat
sbb
cmp
jbe
pop
pop
pushf
jmp
push
jp
divl
sbbb
xchg
xor
fs
loope
imul
mov
nop
and
imul
test
pop
cmp
xor
imul
test
dec
fdivs
iret
inc
cld
xchg
jno
xchg
dec
dec
es
dec
dec
aam
jmp
addb
inc
subb
stc
xchg
adc
inc
pop
add
xchg
fsubl
fdivl
iret
add
fstpt
bound
mov
shll
or
lcall
lds
pop
dec
sbb
pop
cmpsl
dec
ret
aad
jbe
adc
adc
push
loope
popa
pop
push
mov
push
push
cmpl
in
out
negb
addb
data16
sbb
dec
xor
sbb
mov
adcb
push
pop
test
xchg
pusha
dec
orb
jl
call
pop
xor
dec
in
xchg
xor
inc
add
insb
test
lods
insl
add
add
cmp
xor
cwtl
cmpsl
jl
dec
pop
cmp
lods
pop
out
dec
xor
push
rorb
dec
mov
or
add
cmp
stos
sub
in
inc
sub
pop
fisttps
mov
mov
push
adc
jle
or
mov
xor
push
cmpsl
jmp
pop
stc
dec
jnp
adc
cli
sub
ret
int3
jae
sti
jl
aaa
xchg
js
push
cld
xchg
fisttpll
mov
jno
add
daa
mov
jns
xor
jne
and
lahf
icebp
repnz
aam
test
shl
pop
bound
dec
mov
fdivrp
xchg
dec
inc
sti
sbb
aas
inc
mov
dec
and
jp
inc
js
sub
jns
sub
add
fisttpl
cltd
cmp
lods
fs
xchg
sub
adc
fistl
mov
lods
adc
lock
jb
in
fmul
int3
arpl
inc
inc
push
out
and
or
addb
mov
mov
pop
and
or
xchg
stos
movsb
dec
std
pop
cmp
and
jns
bound
cwtl
js
lahf
push
pop
leave
jp
xchg
mov
push
push
xchg
clc
cs
and
dec
cmp
jecxz
incl
mov
stos
jg
xchg
loop
sub
ret
mov
js
sub
sbbl
dec
jo
dec
adcl
hlt
xor
fldcw
sarb
cs
mov
fidivs
repz
xchg
imul
les
test
pushf
xor
inc
pop
and
shlb
fsubrs
sbb
cmp
mov
pop
int
mov
inc
std
idivl
add
dec
push
xchg
mov
rol
aaa
inc
dec
imull
mov
ret
in
jnp
cli
lods
mov
xor
xchg
push
ficompl
fists
sbb
and
push
out
test
mov
adc
or
jle
out
xlat
aas
and
jmp
mov
jns
lret
or
je
ret
sbb
push
jns
mov
pop
xchg
iret
je
xor
inc
jg
push
inc
add
js
inc
cmpsb
push
mov
xor
pop
pushl
bound
pop
push
hlt
xor
out
mov
scas
pop
add
sub
dec
push
inc
or
xor
cmpsb
inc
cmp
js
sbb
jae
int
cmp
and
cmpsb
or
arpl
js
mov
pop
xchg
js
jg
dec
aad
pop
or
mov
xchg
mov
cs
push
jo
and
mov
jno
shl
add
pop
stc
mov
ds
inc
jns
lret
mov
ss
or
inc
das
rorl
xor
xchg
or
pushf
jb
jb
cmc
rcl
or
loop
sbbl
push
push
mov
jnp
icebp
ret
cmp
in
sbb
cmp
inc
das
pop
test
rol
xchg
pop
ss
adcl
fistl
adc
cli
icebp
cs
push
push
scas
jle
mov
mov
xchg
xchg
dec
pop
mov
sti
dec
adc
ret
int
icebp
test
sub
into
xor
push
bound
sub
rcrb
fcomi
push
je
mov
mov
cltd
scas
or
push
jecxz
xlat
dec
enter
cld
frstor
mov
int3
jl
dec
insl
xchg
jp
xchg
cmp
test
add
outsl
pop
push
repnz
ja
mov
cmp
sbb
cwtl
and
jle
mov
mov
sbb
cmp
pop
pop
xlat
pop
clc
out
mov
aad
fs
dec
lahf
addl
popf
mov
jns
jae
pushf
adc
lret
ja
aam
jl
xchg
inc
cmc
loope
cmp
shlb
cmpb
out
cld
inc
xchg
push
cmp
sbb
xchg
dec
cmp
inc
neg
fcoms
rcrl
mov
arpl
sub
shll
leave
cmp
add
test
sub
clc
push
cmp
jae
cmp
and
inc
xor
xor
mov
sub
jno
mov
insl
and
push
vmovhps
icebp
sbb
jge
or
sub
push
scas
aad
lret
dec
sub
mov
jle
daa
add
arpl
cmpsl
cltd
dec
pop
mov
and
cmp
ret
jle
aaa
shlb
mov
insl
aad
popf
xlat
mov
mov
dec
outsl
loope
lahf
jns
xor
adc
jge
testl
mov
push
popa
xor
xor
or
and
cmc
cmc
lret
lods
rorb
inc
inc
aaa
into
test
jb
cmc
je
xor
cs
dec
dec
lea
les
push
fadd
insl
stc
movsl
je
arpl
or
lds
loop
fwait
adc
dec
xor
xor
lahf
gs
mov
mov
movsb
mov
in
push
in
pop
adc
add
xchg
int
xchg
in
imul
xor
sub
and
adc
mov
int
jmp
mov
dec
adc
cmpl
mov
fnstcw
insl
stos
lahf
fistl
in
lods
fisubs
hlt
cmpl
adc
jno
cld
jae
pop
or
push
aas
fwait
test
aas
lds
js
inc
gs
xchg
jge
and
push
jnp
divb
pusha
xchg
imul
xchg
xor
dec
les
std
push
cmp
jge
aad
cmp
push
or
pop
lock
fs
mulb
xchg
sar
fucomip
pop
push
or
xlat
push
fists
das
add
xchg
das
ret
mov
outsb
or
push
lock
push
sub
imul
test
fs
dec
idiv
inc
adc
stos
sub
lea
in
rcll
test
xchg
insl
enter
rol
mov
fimuls
add
jl
cmpsl
inc
jne
fsubp
push
inc
push
add
xchg
adc
stos
lahf
inc
add
jne
ja
movsl
pop
xchg
in
das
outsb
lods
jne
pop
clc
pop
mov
mov
xor
mov
pop
xchg
jb
stc
and
push
fisttpll
inc
decl
in
and
sub
jo
fcmovbe
sub
decb
jl
or
mov
leave
cmp
inc
add
mov
xchg
jb
mov
adc
push
xchg
or
mov
sbb
cmp
adc
es
inc
sub
in
fsubr
dec
inc
orl
stos
mov
fsub
dec
int3
lret
inc
inc
and
dec
popf
data16
push
dec
jo
mov
dec
dec
add
mov
or
or
jmp
fstpt
out
dec
aaa
mov
and
pusha
dec
jno
jb
pop
lock
movsl
mov
sbb
dec
mov
out
inc
mov
and
dec
xacquire
icebp
xchg
test
pushf
loopne
icebp
dec
and
sbb
js
cmp
mov
and
adc
lods
and
stos
xchg
sub
xchg
sahf
jnp
mov
jns
pushf
fwait
xlat
popf
stos
sbbb
mov
loopne
mov
loope
pop
sub
add
imul
sbb
out
iret
test
and
cmpsb
and
dec
fdiv
in
or
or
mov
jmp
clc
insl
push
jle
pop
sub
jl
lcall
fcomps
outsl
jle
sti
sub
and
push
mov
push
iret
or
or
sub
mov
movsl
xor
sbb
xorl
lret
inc
jmp
call
mov
rolb
stos
mov
addl
enter
pop
ret
into
and
push
negb
dec
mov
jmp
sbb
xchg
dec
pop
dec
int3
ljmp
dec
cmp
lret
fbld
jl
mov
in
call
loop
sbb
adc
stos
addl
xchg
test
push
std
test
aad
negb
mov
pusha
add
int
lret
lods
and
das
pop
add
nop
popa
into
xchg
loopne
pop
cwtl
aad
cmpsl
shll
adc
dec
sahf
ljmp
mov
lahf
lods
mov
ret
adc
xor
hlt
sti
xchg
sub
cmp
fildll
cmp
orl
aas
cmp
push
xchg
adc
dec
push
xor
sbb
ret
dec
jb
cmp
loope
ds
mov
and
jp
test
push
insl
int3
jns
aaa
push
add
xor
pusha
jp
sub
mov
xchg
stos
les
shll
jle
ss
fwait
ret
xchg
insl
addr16
leave
les
and
sbb
inc
jb
push
ficoml
adc
sahf
adc
and
sbb
cmp
sub
sub
fcom
bound
dec
shl
or
fs
xchg
out
ret
xchg
stos
adc
das
lods
mov
sarb
dec
and
test
or
sub
sti
add
ja
push
mov
pop
cmp
mov
pop
mov
cmp
sub
mov
jnp
lret
shrl
add
fistpl
je
jg
jmp
mov
in
jmp
cs
inc
lock
jmp
in
out
enter
cmp
lods
in
xchg
lret
cmpsb
mov
or
jbe
popa
in
sti
loopne
sbb
ds
ja
je
lock
aaa
imul
dec
ficoms
add
ret
mov
idiv
pop
dec
pop
imul
jge
stos
stc
mov
sbb
shlb
test
aas
lcall
lea
mov
data16
inc
rorb
movq
incb
notl
push
xlat
stc
xor
cmp
or
sbb
lret
sarb
xchg
pushl
cmpsb
into
dec
push
push
repnz
and
push
sub
jae
int3
sbb
int3
out
shlb
out
ret
out
lods
adc
mov
es
and
mov
cwtl
xchg
mov
sub
jno
add
xor
push
pop
js
popa
xor
imul
jle
enter
adc
mov
sarl
rcrb
jmp
clc
mov
testl
pop
std
hlt
repnz
push
aam
fdiv
out
lcall
outsl
and
or
adc
movsl
repz
lock
jnp
cltd
popf
mov
pusha
clc
outsb
pop
mov
in
push
pop
test
pop
cmpsl
xlat
ss
jle
pop
mov
pushf
adc
ja
mov
iret
pop
ror
or
mov
and
hlt
mov
cmp
jo
test
shl
dec
mov
xlat
in
jbe
and
add
add
jb
pop
xor
mov
out
outsl
fstpl
mov
mov
enter
fldl2e
nop
aaa
xor
xlat
lock
push
or
and
jae
pop
roll
insl
mov
shll
push
std
jne
xchg
add
fildl
insb
adc
jmp
ret
cmp
fcom
sarb
jg
mov
fimull
pop
jl
mov
pop
cmpl
xchg
fnop
jle
push
adc
loop
and
push
mov
and
or
mov
add
mov
faddl
sbb
shll
and
daa
jle
sub
xchg
cld
repz
fs
aaa
push
clc
xor
loopne
scas
xor
or
clc
enter
mov
test
xchg
inc
inc
adc
adc
inc
es
or
sub
and
out
ss
pop
test
testb
stos
in
pop
jle
addr16
jns
shrb
pop
jno
adc
cmp
sahf
mov
lea
push
movsl
pop
adc
xchg
sbb
mov
pop
std
test
popf
mov
adc
enter
test
jge
dec
jno
dec
or
add
fdivs
test
iret
jno
movsl
cli
jns
loope
jnp
mov
or
sbb
fs
mov
test
fidivrs
addr16
pop
gs
jns
movsb
sbb
sbb
lds
rcl
arpl
or
testb
or
pop
lret
dec
xchg
mov
fwait
rsm
or
jmp
sbb
push
rorl
sub
jecxz
addr16
in
test
nop
mov
movsl
or
inc
xor
movsb
jnp
roll
mov
lods
fmull
jb
es
adcb
mov
std
cmp
out
lret
jnp
pop
cltd
mov
adc
add
adc
push
xchg
sub
lds
pop
xchg
fbstp
pusha
faddp
imul
push
sub
mulps
je
or
aad
pop
cmp
dec
fildl
lods
inc
nop
ja
adc
test
xlat
lds
cltd
push
xchg
out
mov
notb
xlat
fdivr
jmp
jmp
or
fcoml
xor
shrb
sub
push
ljmp
pop
push
xchg
mov
mov
xor
scas
inc
jecxz
clc
lock
mov
pop
cmp
xchg
test
in
mov
bound
repnz
mov
inc
inc
mov
stc
outsb
or
pop
inc
sbb
insb
cld
popa
lea
movsb
jp
fs
int3
jns
lret
out
sbb
and
insb
pushf
cmpsl
test
xchg
icebp
nop
dec
jge
cmp
add
shll
mov
aad
test
mov
jge
lcall
cli
cmp
cmp
mov
stc
int
push
pop
insb
mov
les
mov
xchg
xchg
pop
mov
pop
and
add
movsl
pop
in
test
dec
test
mov
subl
add
ficoms
fldl2t
pop
iret
inc
and
icebp
and
rorl
mov
sbb
cmp
mov
mov
into
insl
pop
bound
fnstenv
jnp
jns
pop
lds
loop
mov
lds
xchg
jno
xchg
pop
divb
cld
jns
imull
xchg
sbb
cmpsb
pop
xor
mov
out
fistpll
pop
jle
push
rcr
inc
adc
aam
adc
mov
fcos
mov
ja
mov
or
push
mov
mov
clc
adc
xor
fcomi
lret
cmc
pop
mov
mov
js
xor
inc
mov
iret
int
jl
mov
aaa
jb
jmp
lea
in
movsl
adc
iret
or
loopne
inc
xor
sahf
pop
sub
rolb
scas
and
pushf
scas
jge
mov
movsb
rcll
xchg
cmp
xor
push
sti
cwtl
sub
or
jbe
cwtl
fucomip
test
sub
fwait
sbb
push
insl
mov
ljmp
xchg
std
cwtl
xchg
xlat
jne
lods
add
adc
cmp
fimull
loop
push
adc
test
mov
pushf
lods
idiv
mov
jmp
dec
cmp
mov
inc
dec
pop
sbb
lods
jns
stos
push
test
mov
or
out
xchg
lods
popa
je
imul
cmpsl
pop
xchg
mov
adc
bnd
add
dec
clc
unpcklps
push
repnz
outsl
mov
nop
inc
insb
mov
sub
or
push
stc
push
add
inc
mov
fwait
ret
xchg
mov
mov
cmpsb
adc
mov
divl
js
push
xchg
fdivrl
pushl
jge
dec
jecxz
fsubl
dec
xchg
imul
cmp
sbb
pop
mov
pop
xor
hlt
and
in
enter
movsb
push
xchg
adc
pop
or
cwtl
fildll
mov
insl
in
jo
or
fs
rorb
push
or
test
movsl
mov
push
jb
fstp
lret
dec
xchg
das
mov
in
ja
xorb
test
rcl
sti
sub
cmp
test
cmc
insb
test
pop
mov
jle
dec
scas
add
ret
movsl
in
add
lret
inc
mov
lahf
out
push
cmp
pop
jae
in
cld
and
adc
into
mov
lods
fnstenv
jbe
popf
add
movsb
cmp
or
and
bound
lcall
sub
sti
xchg
mov
jecxz
jae
add
inc
pusha
daa
inc
outsb
loop
pop
les
inc
aaa
into
xchg
or
ret
cmpb
pop
lahf
inc
sti
fld
dec
add
cmc
out
scas
mov
aaa
lea
add
vmwrite
fnstenv
push
leave
dec
ja
sub
hlt
jnp
cmpsb
xchg
pop
and
movsl
push
out
fldt
pop
xlat
xchg
int
out
xor
out
sub
icebp
in
dec
mov
pop
pop
mov
jae,pn
rcrb
and
pop
jl
pop
std
aaa
sbb
push
stos
mov
frstor
bound
lds
mov
mov
std
inc
cmpsb
js
int
loop
push
adcl
sti
or
inc
out
scas
push
cmp
xchg
lret
roll
or
fisubs
gs
push
ss
jg
push
sbb
cmpsl
fsubs
enter
mov
inc
mov
adc
jae
and
dec
xchg
dec
insl
imul
inc
sarl
pop
add
add
cltd
aam
data16
jge
insb
aam
lahf
in
dec
pop
inc
in
outsl
popf
pushf
imul
out
xor
ja
jo
pop
mov
lds
add
mov
fbld
icebp
rcll
fwait
adc
cmp
insl
dec
mov
loop
cld
je
rcll
or
dec
push
xor
leave
pop
sahf
psubusw
add
xchg
leave
dec
outsb
xchg
xchg
jmp
mov
sahf
inc
outsb
sbb
inc
dec
push
cmp
mov
lea
leave
std
shl
xor
mov
push
fldcw
sbb
enter
shl
js
adc
je
cmc
or
das
rcr
in
push
dec
pop
dec
xchg
mov
inc
or
mov
mov
loop
jnp
sbb
xor
out
xor
cmpsl
cmp
insl
or
mov
and
popf
movsl
pushf
shlb
test
insb
jo
jo
outsb
jmp
cmc
pop
out
jne
aad
add
jl
xchg
dec
andb
mov
inc
and
aaa
mov
mov
mov
sti
mov
cld
inc
ret
push
icebp
cmpsb
push
dec
pop
jns,pn
out
sub
push
and
fisubl
ljmp
and
shl
outsb
ljmp
rol
int
mov
nop
dec
mov
aad
xor
sbb
jbe
xlat
xor
test
jp
pusha
sub
daa
mov
popf
dec
movsb
ret
mov
repnz
cwtl
jne
sbb
jne
enter
dec
stc
push
pop
iret
inc
insl
mov
xchg
mov
dec
repz
add
mov
test
cmc
and
iret
out
int3
push
sub
push
xchg
or
or
pushf
add
iret
outsb
push
mov
jle
jo
mov
daa
mov
sbb
add
push
push
js
xchg
ja
shlb
or
add
pop
mov
xchg
mov
iret
jae
sub
jnp
sarl
dec
sub
or
insl
int3
rol
jl
pop
cmpsb
dec
and
xlat
hlt
pop
outsb
repz
fidivs
repz
sub
mov
adc
ret
dec
adc
pop
test
mov
mov
pushf
std
shlb
dec
gs
je
sbb
or
inc
pushf
cmp
lret
cwtl
or
jns
mov
hlt
int
sub
jae
adc
add
xor
leave
orl
pushl
xor
repz
mov
lods
jp
pushf
sub
jae
mov
mov
arpl
sbb
in
sub
push
push
jae
push
sub
sbb
dec
cmp
jne
es
sbb
xchg
call
dec
ret
insb
idiv
rcll
in
mov
repz
xchg
std
mov
dec
pop
add
roll
call
shr
ret
push
int
cmp
pushl
aaa
out
rcrb
mov
push
jne
xor
or
jecxz
fadd
push
mov
adc
mov
hlt
fnstsw
jnp
into
add
outsl
fildl
mov
into
inc
int3
lock
or
loopne
push
jb
sarb
std
mov
mov
aad
test
adc
and
mov
mov
insb
inc
jl
jp
shrl
or
pop
adc
sahf
add
mov
stos
je
pop
rol
jo
roll
pop
js
icebp
out
and
jno
in
mov
adc
inc
xchg
in
and
imull
enter
xchg
in
in
cmpsl
mov
xchg
fidivrl
fwait
jb
test
das
sub
jo
push
std
xchg
movsl
in
insb
mov
cmpb
ret
jecxz
fldcw
jne
cli
add
mov
mov
lret
dec
fdivrl
adc
mov
pop
add
fbstp
mov
xchg
xor
jo
mov
shlb
rorl
and
scas
push
sahf
sbb
adc
lods
and
jle
cltd
dec
lock
sbb
adc
aaa
mov
mov
es
dec
push
xor
adc
lcall
cmpsl
inc
push
es
push
add
sahf
add
dec
dec
dec
xchg
adc
pop
sahf
push
mov
fdivs
mov
insl
enter
repz
adc
add
and
sub
cmpb
push
rolb
xor
sbb
jp
add
sbb
loop
pop
pop
xchg
movsl
jb
fnstenv
ljmp
cmpsb
fdivrl
inc
xor
add
jge
das
or
cmpsl
cltd
and
xor
dec
pop
sub
sub
and
xchg
enter
pop
outsb
xor
fbstp
mov
xor
in
imul
xchg
add
pop
mov
fs
jmp
jle
mov
loope
loope
push
mov
or
mov
cltd
add
jge
aad
sub
les
inc
dec
sbbb
imul
mov
call
adc
sub
ljmp
ja
mov
lahf
ja
and
imul
lods
jmp
cmp
divl
ljmp
push
jns
push
dec
xchg
enter
adc
cmp
sbb
xorl
mov
cmpsl
mov
pop
scas
push
mov
rcll
xchg
mov
pop
inc
or
mov
mov
jo
sbb
decb
sub
test
cmpb
pop
xchg
mov
or
dec
xor
test
scas
dec
ret
cld
pop
out
pop
enter
adc
gs
adc
in
cmp
add
mov
lret
aad
inc
arpl
sub
mov
js
sub
adc
add
les
daa
cwtl
mov
lods
adc
pusha
shlb
out
mov
sub
jno
dec
xor
xor
xor
pushf
mov
stos
pop
movsl
mov
cmc
imul
hlt
xor
dec
pop
icebp
dec
cmpsl
fcoml
mov
mov
mov
and
gs
adc
jg
mov
cmp
xor
loopne
adc
jnp
push
inc
and
adcl
mul
inc
push
testb
jno
ja
inc
mov
jns
lahf
fucom
mov
jp
repnz
cld
stos
mov
pop
aas
xchg
sub
outsb
lcall
hlt
jae
movsb
jnp
repz
push
test
rol
jl
jne
ret
pop
in
loopne
push
es
incb
imul
jg
sub
addb
lods
mov
adc
or
sbb
sub
inc
pop
mov
out
aad
imul
ret
jae
pushf
sbb
clc
adc
imul
xchg
loopne
pop
call
push
mov
inc
popf
cmp
cmpsl
rclb
mov
sahf
repnz
das
dec
fmul
sarl
mov
lcall
xor
lret
sbb
or
mov
les
sbb
mov
xor
loope
and
mov
jg
lret
aam
jb
jno
sub
push
ret
bnd
dec
int3
out
cwtl
jmp
adc
scas
inc
ret
adc
pop
into
orl
and
cmp
das
aas
cs
insb
scas
sahf
xchg
pop
mov
loop
mov
push
cmc
mov
sarb
and
mov
gs
loope
mull
jne
mov
shrb
pop
pop
ret
lea
inc
sub
repnz
pop
sbb
mov
or
imul
dec
rol
rcll
cmc
xchg
fs
pop
inc
mov
adc
xor
pop
ljmp
leave
xor
mov
insb
insl
repnz
jnp
xor
mov
and
xor
jecxz
cmc
fnstcw
dec
jecxz
jmp
cli
sub
mov
pop
xchg
iret
cmp
fadd
push
cld
in
out
shrl
gs
fcoms
insl
js
adc
or
or
mov
icebp
insb
mov
lods
xchg
mov
jmp
stos
rcrl
mov
xchg
aaa
dec
aaa
jno
iret
jmp
daa
push
dec
pop
lret
push
shrl
push
mov
subb
jp
mov
in
popa
mov
or
inc
clc
sahf
xchg
xlat
pop
push
dec
in
outsb
out
inc
sub
xchg
mov
call
adc
outsb
in
call
jns
jno
ss
jo
es
jge
in
fs
test
add
insb
push
leave
das
int3
test
jae
ret
cmpsb
mov
js
ja
xchg
push
fstpl
push
blcfill
repz
sbb
aad
mov
test
mull
xor
cmp
add
aam
gs
test
push
repz
and
dec
jle
insb
mov
pop
popf
fadds
adc
iret
outsb
and
adc
jne
mov
jle
mov
lcall
xchg
mov
or
dec
fstpt
movsl
sahf
xor
call
mov
sbb
cmpsb
xor
mov
mov
add
int
cwtl
jo
in
add
fwait
movsl
test
out
jns
pop
push
mov
cltd
push
mov
and
inc
mov
jno
imull
and
fisubrl
pop
ja
scas
jmp
fsubr
inc
ljmp
insb
sbb
lret
movsb
push
xor
jle
arpl
es
mov
mov
mov
jo
adc
adc
mov
push
and
cli
jle
test
and
hlt
mov
fadds
popf
sarb
scas
inc
stos
xchg
xchg
test
mov
sbb
cmc
test
in
cli
fidivrl
inc
addr16
and
cmp
leave
scas
lret
add
jne
pop
mov
mov
ja
mov
pop
xchg
pop
out
es
loopne
cmc
or
test
adc
insl
icebp
mov
loope
push
rolb
adc
xor
fisubl
sahf
pop
flds
pop
push
or
adc
xchg
xchg
testb
adc
hlt
sbb
xchg
and
mov
imul
cmp
insl
fs
cltd
adc
js
repz
pop
in
pusha
addl
leave
jbe
jbe
fistps
xor
test
sbb
inc
mov
or
pop
lret
dec
popf
jnp
rclb
fstpt
pop
or
xchg
push
xchg
aas
repz
xchg
sti
lcall
inc
and
pop
loop
ret
loope
pop
mov
lock
or
xlat
mov
out
scas
pop
out
mov
lret
dec
adc
addr16
cmp
mov
or
cwtl
scas
jmp
dec
rcl
lahf
ret
xorb
jmp
das
add
jnp
jo
adc
sub
mov
add
jbe
jae
pop
jbe
mov
scas
ja
adc
sub
inc
enter
xchg
push
add
or
adc
ret
cmp
insb
adc
cmp
cld
lret
inc
scas
sub
sbb
lret
push
in
repz
sbbl
hlt
cmp
daa
xor
or
and
rorb
mov
mov
shlb
jae
ret
mov
sub
or
xchg
mov
sub
loopne
sub
and
or
cmc
sbb
negl
pop
and
mov
cli
and
xchg
leave
cmp
lods
js
cltd
ljmp
cmp
add
cwtl
xor
lret
adc
outsl
fistpll
imul
dec
cmpsb
push
out
clc
mov
repz
test
int
movl
dec
cmpsl
je
mov
je
movsl
xchg
jbe
ret
loopne
lcall
int3
inc
fildll
es
mov
imul
je
fisubrs
jmp
or
xor
in
pop
test
outsl
cmpsb
cmpsb
sbb
and
test
mov
or
cmpsb
mov
lret
and
mov
enter
cmpsb
ljmp
pop
xchg
test
mov
lcall
cmp
adc
xchg
lds
mov
mov
mov
push
popf
fs
dec
in
cmp
ss
es
mov
pop
loopne
mov
lcall
push
int
out
push
pop
div
sbb
imull
cmpsb
shlb
in
or
aaa
inc
scas
imul
js
and
cmpsb
pusha
jle
pusha
dec
or
scas
outsb
iret
jo
je
mov
scas
addr16
loopne
mov
mov
in
gs
and
cltd
mov
pop
pop
cmp
sub
aas
mov
jmp
cmpsb
jmp
push
inc
out
pop
adc
xor
int3
push
inc
adc
pop
pop
jp
add
adc
lret
mov
lods
xor
lods
les
dec
cwtl
sbb
cwtl
loop
ljmp
push
mov
sti
mov
adc
or
sbb
jae
outsl
jbe
dec
loope
mov
cmp
nop
jno
xor
inc
inc
stc
dec
jmp
xlat
fistps
push
lea
das
das
sahf
out
lahf
lds
jno
or
mov
and
hlt
data16
sbb
ret
pop
xchg
mov
dec
addr16
test
mov
clc
ss
and
aam
in
xor
int
sub
dec
dec
cmp
and
shll
push
int3
std
adc
push
jo
lea
xorl
jo
nop
push
ja
out
pop
fimuls
adc
nop
in
cmp
orl
cmpsb
jg
xchg
jge
mov
dec
cmp
sbb
jecxz
add
repz
xor
or
sbb
insl
pop
cli
pop
mov
in
or
fcompl
aaa
rcr
mov
cmp
push
js
repz
lahf
xchg
xor
hlt
sub
shl
aaa
mov
jo
pop
adc
sahf
mov
xchg
in
fdivs
pusha
push
out
std
icebp
in
fldt
jle
mov
sbb
mov
sbb
arpl
mov
filds
dec
mov
and
push
xchg
pop
jb
and
push
add
cld
mov
mov
adc
mov
loope
lods
push
adc
icebp
out
pop
mov
mov
call
int3
pop
popa
or
stos
cmp
ds
fmuls
sub
out
xor
mov
jle
es
xor
fildl
pop
and
mov
xor
and
nop
sub
jo,pn
sbb
jne
sub
add
xor
mov
pop
cmpsb
mov
jb
in
js
cs
repz
xchg
mov
or
fistpl
sub
adc
push
or
pop
add
movsb
out
in
xchg
cli
jg
aad
mov
aas
mov
in
inc
cmp
insl
stc
mov
or
sub
outsb
in
fdivrl
mov
insl
iret
xchg
xchg
pop
mov
push
test
je
scas
push
out
and
in
sub
psraw
cmp
xor
loopne
leave
test
push
jp
int3
adc
inc
fiaddl
cmp
mov
mov
mov
sahf
or
pop
dec
adc
loopne
push
dec
add
dec
pop
cwtl
dec
test
cmpsl
in
lret
inc
inc
in
loopne
add
jae
std
mov
bound
gs
pop
mov
dec
adc
dec
xlat
gs
jmp
insl
push
jbe
rorl
xor
mov
inc
mov
push
xchg
inc
jle
pop
push
mov
std
inc
lcall
ja
jo
or
cmpsb
xor
sbbl
cwtl
pop
lret
cmp
push
daa
or
mov
cld
data16
push
cmp
cmp
mov
jnp
and
psadbw
lahf
cmp
mov
sub
jae
ljmp
or
call
lcall
fnstcw
mov
repnz
jl
dec
pop
jmp
jne
fsubrs
test
cld
popa
aam
or
daa
push
or
lods
mov
notl
std
adc
sbb
xchg
in
push
xlat
lea
xchg
stos
jb
mov
mov
popa
out
gs
addb
addr16
incl
aaa
cltd
lcall
xchg
lea
cwtl
push
push
daa
mov
outsl
jae
dec
dec
or
push
dec
inc
pushf
xchg
sbb
mov
adc
lds
dec
adc
add
cmp
or
or
mov
jb
mov
subl
mov
movl
pop
lea
repnz
adc
jle
aad
mov
sbb
cs
dec
pop
push
out
and
mov
icebp
jle
sub
loope
ljmp
ja
jnp
mov
cs
xor
pop
xor
orb
popa
ljmp
xchg
dec
jmp
bound
sbb
jmp
push
jbe
adc
jle
test
bound
pop
stos
jae
repz
stc
cs
scas
sub
sub
pop
push
shrb
daa
cs
ret
sbbb
arpl
cmp
data16
test
lret
sbb
fdivr
adc
jnp
aad
stc
leave
adc
add
das
pop
pop
add
push
push
and
clc
push
stos
dec
icebp
xchg
dec
cltd
or
insl
sub
jns
popl
icebp
roll
push
pop
sar
sar
jae
scas
fidivrs
dec
mov
fmuls
sub
idivb
gs
lock
mov
add
jmp
sarl
xor
nop
or
mov
sbb
jl
mov
movsb
fisubrs
fisttpl
mov
mov
sarl
aam
jbe
xchg
fadd
shl
ret
shrb
sub
dec
mov
repnz
xchg
mov
test
sub
and
mov
repnz
inc
ret
lret
lock
jb
mov
add
loopne
nop
pop
pop
adc
lret
dec
add
inc
into
jae
andb
rcll
push
xchg
iret
mov
push
xor
and
mov
or
gs
js
outsb
inc
out
add
sub
pop
and
pop
inc
xchg
push
shlb
loop
mov
in
adc
roll
or
mov
dec
les
jae
nop
or
cwtl
daa
mov
jl
mov
adc
adc
xchg
dec
lea
mov
cmc
inc
pusha
scas
inc
inc
popa
pop
das
aad
dec
test
lahf
jne
jne
mov
cmp
pop
out
mov
into
mov
daa
jp
dec
sub
xor
fwait
xchg
outsl
pop
int
and
inc
xchg
repnz
scas
pop
mov
mov
sar
adc
adc
int3
loope
aad
jne
in
push
notl
xor
pop
shl
cmpsl
sarb
pusha
cwtl
dec
loopne
outsl
xor
and
xchg
repz
je
pop
mov
adc
loopne
call
dec
fs
cmp
mov
dec
xchg
pop
daa
iret
jno
adc
scas
add
stos
push
jmp
push
xchg
jne,pt
fidivl
or
lahf
ret
pop
in
adc
jnp
ss
sbb
xchg
fcoms
shll
xchg
mov
sbb
mov
mov
pop
sarb
scas
add
mov
dec
dec
sbb
inc
fsubs
gs
in
xchg
stos
lret
mov
fcomi
jbe
push
in
test
in
scas
push
std
loope
or
mov
cli
aam
xchg
dec
jecxz
in
sub
mov
lods
sahf
mov
mov
sub
dec
pop
and
dec
nop
adc
adc
xor
stc
mov
or
jl
and
loop
adc
aas
xchg
pop
std
loop
stos
std
push
icebp
push
add
sub
jl
sub
out
cmp
cmp
loope
sahf
and
notl
lahf
sub
inc
mov
addb
or
push
push
fildll
mov
pop
stos
xor
dec
jbe
adc
mov
mov
add
dec
test
loop
fs
or
adc
lods
out
sbb
xor
dec
mov
aad
push
pop
mov
xor
cmp
imul
push
sbb
std
mov
and
push
shr
jl
ret
loop
std
push
jno
sahf
movsl
mov
loop
orb
add
xlat
inc
mov
scas
dec
mov
or
mov
outsl
or
sub
pop
stos
clc
div
dec
dec
push
rcll
mov
in
pop
pop
add
sub
movsb
jle
mov
ret
cmpsb
adc
push
mov
js,pn
dec
push
lahf
mov
imul
inc
pop
fdivs
adc
jecxz
jb
mov
int3
jae
aas
cmpsb
mov
mov
jle
mov
ficomps
inc
jae
mov
jg
out
loop
pop
push
inc
das
in
jl
loopne
adc
into
loop
xchg
sbb
cli
dec
ret
je
jp
popa
xchg
fldl
int
dec
lcall
notl
push
aas
sub
pop
outsl
sbb
fnstsw
dec
mov
mov
add
and
and
movsl
push
in
in
cmp
mov
pop
mov
inc
ja
mov
ja
jecxz
pextrw
lcall
inc
xchg
inc
das
repz
xor
jb
arpl
pop
push
popf
xor
ror
sti
xchg
push
imul
or
test
push
xor
cmp
cli
jb
or
jae
in
mov
subl
and
sarl
in
std
out
jp
inc
jg
jnp
fyl2xp1
mov
insb
mov
mov
add
insb
pop
fimull
scas
sbb
icebp
jno
fldenv
mov
test
cli
test
mov
fidivs
xor
sbb
ds
lock
dec
imul
jnp
int
mov
int
push
pop
mov
repnz
je
fwait
ja
fistps
out
aaa
adc
pand
sbb
call
push
cli
in
scas
add
xchg
cmpsb
or
xlat
cmpsb
rcrl
arpl
stc
gs
sub
dec
jp
xchg
lahf
sar
cmp
popf
add
adc
dec
cmp
into
cmpsb
jno
cwtl
rcr
mov
mov
xchg
mov
bound
mov
cmp
mov
ret
inc
jo
adc
sti
daa
inc
mov
sbb
cmp
pop
mov
int
neg
pop
adc
stos
clc
mov
leave
fmul
jbe
jbe
subl
xorb
out
sub
fldt
loop
adc
dec
in
push
addl
mov
les
repz
leave
loopne
mov
push
lret
das
xor
sub
dec
mov
xor
lret
inc
and
std
call
push
mov
test
pop
icebp
xchg
into
test
mov
jge
repz
sti
adc
push
loopne
repnz
out
jne
or
add
and
mov
lret
or
cmpsb
dec
inc
cs
out
popf
add
popf
xlat
mov
loop
xchg
or
ret
jb
insb
popf
pop
dec
std
push
sbb
add
xor
fadd
add
adc
adc
mov
xor
dec
adc
pop
fmuls
cmp
daa
neg
jne
jl
push
mov
repz
jne
fmul
lods
inc
data16
xchg
jae
iret
addr16
stos
mov
fcoml
xor
ja
or
dec
in
xlat
call
mov
out
cmp
sti
repnz
cli
pop
cmp
mov
push
fidivrs
mov
in
inc
dec
xchg
pop
mov
xchg
dec
jns
jl
negb
mov
and
fisubrs
sub
xor
and
sbbb
jns
shrb
rorb
cmc
pop
test
stc
bound
cmp
andb
rorb
and
js
pop
add
in
push
jl
fidivs
mov
insb
jg
gs
call
nop
addr16
lea
mov
cmc
fdivs
lea
cmp
fidivrs
push
push
lock
inc
aad
push
rcll
jnp
pop
push
adc
stc
shrb
mov
fimuls
mov
out
rorl
loope
xchg
dec
aas
testb
fsubp
decb
xlat
jbe
imul
mov
mov
jno
cmp
push
cmp
ficoms
mov
hlt
pop
add
std
adc
cmp
push
insb
pop
push
dec
data16
out
pusha
cmc
adc
push
inc
cltd
sub
adc
arpl
adc
add
idiv
mov
test
push
stc
or
data16
and
loope
push
pop
cmpsl
sbb
stos
inc
xchg
push
pop
adc
mov
in
test
xor
shlb
jecxz
push
movsl
loopne
jnp
or
mov
mov
and
pushf
add
inc
imul
mov
test
adc
insb
push
pop
out
jnp
outsl
pop
faddl
push
add
or
and
sub
dec
mov
mov
imul
or
add
aaa
insl
pushf
mov
xlat
hlt
sarb
xchg
push
xchg
daa
push
mov
int
lret
mov
cltd
fdivrl
fistps
or
fwait
inc
cmp
test
in
or
imul
lock
in
out
jecxz
imul
add
ljmp
outsl
cmp
mov
mov
mov
pop
sub
xchg
cmp
jo
pop
xor
pop
sti
push
fneni(8087
xchg
ret
mov
mov
pop
sub
sub
mov
push
xlat
les
push
mov
sbb
into
aam
fildl
sbb
inc
xorl
xlat
add
js
add
xlat
outsb
in
adc
add
in
es
repz
jle
push
popa
fsts
je
cld
cmp
jp
cs
xlat
lret
jge
mov
cmp
dec
repz
outsl
mov
pop
pusha
ss
leave
sbb
dec
mov
stos
sub
sub
sub
int
imul
xchg
lahf
jno
sbb
jnp
into
adc
cmp
stc
jle
push
sbb
xchg
es
xchg
or
mov
push
cmpl
ret
push
jmp
xor
push
and
bound
cmpsb
pop
insb
into
mov
cmc
lea
or
dec
std
std
stos
dec
arpl
add
insl
popa
sbb
in
sbb
jg
bound
mov
xchg
sub
xchg
lret
dec
sub
xchg
mov
xor
mov
add
inc
jnp
sub
and
sti
inc
outsl
das
mov
dec
push
lret
cs
in
scas
and
sub
pushf
jg
pop
and
lret
or
test
push
sbb
mov
xlat
mov
and
xor
mov
lods
int
pop
and
enter
mov
lods
pop
mov
mov
fnstcw
cmp
and
aam
sarl
push
popf
push
mov
pusha
loope
sahf
fstp
push
call
mov
stc
mov
mov
push
push
xor
ljmp
push
and
push
test
mov
xchg
lds
ja
xor
test
push
sbb
mov
sub
in
xchg
push
xchg
je
pop
je
adc
xchg
ljmp
jecxz
test
out
dec
nop
xchg
rcr
rcll
lret
rcl
cmp
fstpl
jmp
pusha
add
test
mov
and
adc
aas
inc
mov
mov
mov
cmp
sti
imul
adc
xchg
ret
sti
pushf
pop
aam
jecxz
add
popa
mov
mov
push
je
repz
outsb
pop
iret
rorb
scas
or
and
sub
in
jo
sahf
jnp
inc
cmp
or
add
test
int3
mov
imulb
out
js
mov
aam
or
ljmp
mov
xchg
ret
lock
std
loop
mov
jg
cmp
and
xchg
and
js
add
sbb
jns
mov
pop
mov
in
cmp
pop
aad
push
scas
mov
lcall
popa
add
dec
sub
mov
or
js
or
inc
rcrb
sub
popf
scas
cmc
push
aaa
leave
dec
movsl
out
xchg
repnz
dec
add
dec
push
test
ds
and
sbb
arpl
stos
adc
add
jle
xor
add
push
push
xchg
inc
cmpsb
icebp
mov
stos
inc
jbe
loop
add
ljmp
mov
loopne
xor
not
jge
push
pop
lds
and
sbb
inc
jns
out
push
cmpsl
push
dec
pop
std
rorl
and
arpl
mov
jg
sbb
xchg
add
outsl
sarb
ds
cmp
jp
pop
pop
movsb
mov
add
push
pop
jg
xor
fwait
test
sbb
add
pop
ljmp
pusha
jno
popl
scas
rcr
mov
fsubs
leave
shrb
push
cs
push
mov
mov
lods
sti
in
in
btc
imul
stc
outsl
das
popa
daa
inc
push
adc
jb
fnstcw
aam
ret
and
sbb
aad
mov
outsb
stos
dec
mov
sbb
adc
movsb
fdivrs
outsb
fwait
mov
jbe
lret
jmp
outsl
into
fistpll
cmp
fwait
inc
or
inc
repz
das
pop
movsb
mov
pushf
shl
adc
mov
pop
out
test
pop
inc
aad
lods
xchg
or
mov
dec
insb
aam
test
jmp
xor
sub
std
adc
or
mov
pop
jb
mov
sub
pop
jmp
cmp
popa
cmpsl
mov
jp
push
lahf
lcall
mov
out
addr16
xchg
sub
imul
rol
push
pop
or
pusha
scas
ficoms
fsubl
jl
clc
inc
inc
push
xchg
or
stos
ds
hlt
mov
andps
pop
xchg
mov
lods
xorl
lahf
cli
cltd
jecxz
lahf
repz
fs
add
inc
fsubs
cmp
icebp
mov
mov
sahf
iret
mov
scas
xchg
jp
ret
mov
orl
xor
and
push
fsts
cmp
jne
dec
or
pop
cld
lret
fsub
nop
jbe
cmp
test
rcrl
push
sti
pop
sub
inc
test
and
ds
fwait
or
icebp
cld
xor
and
add
bound
fs
jb
les
imul
imul
sub
mov
and
push
fidivs
inc
sub
sub
inc
dec
push
xor
lock
adc
dec
stc
lock
push
add
ficoml
sub
cmpsb
mov
pop
adc
pop
cmp
jns
xor
inc
sbb
sub
addb
mov
daa
pushf
add
or
bound
sbb
lods
mov
mov
aad
rorb
sub
popf
jo
add
mov
xchg
cli
popf
sub
inc
jbe
or
jae
adc
test
hlt
lock
mov
stos
lds
in
notb
ja
pop
cmp
leave
or
mov
mov
xchg
in
or
pop
pusha
mov
xchg
pop
inc
dec
sbb
shll
loope
loope
push
dec
add
mov
test
les
mov
popa
and
xor
pushw
or
and
popf
add
sarb
mov
sub
mov
pop
test
in
jge
test
ss
jmp
shll
cmpsb
sahf
add
aaa
pop
clc
lcall
inc
orb
cld
or
dec
mov
das
jo
addb
into
sbb
gs
fcoms
jecxz
repnz
adcb
sbb
inc
xchg
xchg
and
push
jae
mov
sub
or
fdiv
movsb
xchg
daa
fsubl
and
add
int3
jle
and
mov
or
sbb
dec
out
daa
repz
inc
cli
pcmpgtd
aad
loope
mov
shrb
mov
lock
xor
jnp
add
in
insb
adc
out
add
fldenv
dec
nop
adc
inc
inc
mov
pop
xchg
adc
sub
push
and
add
sub
adc
fiadds
push
and
popa
out
add
and
data16
rorl
mov
sbb
aad
xchg
popa
adc
cwtl
pop
cld
mov
xchg
xchg
mov
adc
add
mov
insb
sar
rolb
mov
add
cmp
loop
push
xor
push
cmc
sbb
push
xchg
and
xor
icebp
lret
sbb
dec
and
mov
loopne
dec
in
lods
xor
icebp
outsb
lahf
push
jge
test
add
mov
and
stos
add
ret
lea
sbb
lcall
jbe
and
jg
ljmp
add
pushf
js
mov
push
jp
sbb
adc
inc
and
mov
negb
leave
xchg
jmp
sub
je
sbb
aaa
mov
push
push
fistpl
cmp
pusha
and
mov
mov
hlt
pop
dec
mov
arpl
or
lds
mov
and
in
mov
dec
les
jno
add
mov
scas
out
pusha
mov
dec
aaa
inc
push
inc
cmp
and
out
adc
push
sub
xchg
mov
les
inc
fisttpll
addb
div
outsl
xchg
jp
dec
and
mov
add
pop
pop
nop
cmpsl
xor
es
mov
imul
sub
jecxz
ss
cmp
mov
scas
lods
lods
pop
leave
jae
into
adc
fcoml
mov
popa
adc
mov
xchg
and
push
addr16
aad
and
push
and
cmc
adc
fidivrl
mov
fisubrl
movsb
cmp
popf
jnp
xor
mov
fistpll
sahf
loopne
cwtl
stc
ficomps
cmc
pop
mov
mov
sub
popl
add
xor
fmull
shlb
mov
ja
sbb
and
adc
call
int3
gs
stc
inc
in
cmp
sub
push
push
push
push
push
sbb
xchg
das
loop
and
push
nop
mov
add
or
sbb
int3
and
pop
fbld
sub
jo
sbb
ljmp
cld
mov
ret
ficomps
jns
lods
fsubl
mov
xor
lret
xchg
lds
pop
enter
flds
push
dec
and
insb
ret
imul
test
push
repz
pop
test
adc
pop
jmp
and
aad
inc
push
test
jnp
hlt
add
lret
inc
sub
xlat
dec
mov
inc
sbb
cmc
push
in
mov
push
cli
pop
loope
or
call
mov
aas
xor
mov
jbe
mov
cld
roll
pop
add
dec
shlb
scas
jae
loop
bound
lahf
sti
enter
sub
mov
mov
mov
mov
push
pop
push
and
mov
adc
pop
dec
xchg
mov
sbb
aas
pop
es
movsl
and
sbbl
and
inc
xchg
cmp
xchg
xor
stos
inc
jae
mov
mov
mov
fidivl
mov
sbb
imul
lahf
lret
ljmp
xor
cmp
ljmp
addr16
into
aam
adc
in
sub
sbb
inc
iret
ja
xor
sub
xchg
push
pushf
cmp
fstp
bound
popa
popf
mov
repz
adc
add
outsb
loope
insl
icebp
lret
insl
outsl
loop
jae
mov
cmc
mov
jae
add
test
cmp
repnz
pop
sbb
rcl
stc
cld
mov
sbb
dec
in
mov
adc
cmp
das
adc
gs
sbb
mov
mov
loope
and
jnp
call
mov
shll
ljmp
cmp
push
sbb
mov
pop
mov
aas
inc
push
fs
inc
fnstcw
arpl
mov
loopne
pop
movsl
mov
ficoml
fildl
addr16
xor
cld
add
out
xchg
mov
adc
xchg
push
push
lods
and
hlt
ljmp
outsb
ror
aad
ja
ds
fistpll
dec
adc
adc
imul
jmp
inc
sahf
in
fs
cmpsb
adc
dec
scas
lahf
int
pop
sbb
pop
push
sar
fwait
push
mov
xchg
decl
divl
std
inc
mov
cmp
mov
sub
lret
mov
mov
mov
sub
jl
or
cmpl
andl
das
and
ret
pop
int
cmp
movsl
mov
fcmovnb
icebp
xlat
pop
mov
int3
mov
pop
stos
sbb
leave
jae
or
cs
dec
data16
mov
push
icebp
mov
or
add
inc
push
sbb
outsl
sbb
mov
ljmp
mov
daa
fdivl
inc
mov
xchg
cmp
jns
adc
fcmovb
cmp
adc
inc
enter
scas
lods
xchg
dec
push
mov
icebp
lds
scas
loopne
xchg
loopne
pop
xchg
daa
push
sub
jl
ror
inc
inc
sbb
fwait
mov
cmp
fbstp
fidivs
xor
fucomi
scas
cltd
jns
mov
inc
bound
and
fnstenv
ret
mov
stc
dec
test
imul
lea
sbb
push
xchg
popf
and
pop
cmp
or
je
inc
mov
sub
cmp
cmp
and
mov
or
mov
mov
push
aam
cmovbe
inc
cmp
adc
add
mov
loop
repz
outsl
inc
repz
stos
outsb
or
fwait
xchg
out
jg
popa
fdivr
int3
dec
out
inc
lds
xlat
and
aaa
mov
sub
xchg
lea
add
and
shlb
call
insl
repz
ja
and
mulb
movsb
mov
sub
ret
lahf
jle
mov
push
rorb
cli
out
pop
lret
ja
movsb
push
push
sub
cmp
popf
add
inc
sbb
dec
add
or
xor
fldenv
arpl
scas
or
xor
stos
ds
push
jle
xor
mov
lock
and
daa
lock
push
testb
dec
and
sarl
adc
sarb
push
xor
notb
mov
pop
addr16
jbe
lea
adcb
je
cmpsl
stos
mov
js
pop
rcrl
adc
add
inc
aaa
mov
inc
ljmp
rcrl
add
cld
add
je
cmc
call
push
sub
inc
rolb
das
xchg
mov
cwtl
ret
in
lret
xchg
insl
sbb
mov
movzbl
xor
or
mov
mov
inc
cmp
aas
cs
mov
adc
sbb
adc
adc
jns
lcall
sub
outsl
mov
push
cwtl
add
iret
and
jno
cwtl
out
inc
sbb
popa
inc
pop
int3
rclb
push
inc
js
or
cltd
or
xchg
mov
sbb
bound
mov
or
mov
xor
shrl
adc
cld
push
outsb
xchg
clc
xor
loop
sbb
flds
fidivrl
int3
mov
or
xchg
cmp
pop
xorl
rcrl
xchg
push
clc
out
dec
dec
mov
out
lock
jae
pop
nop
mov
mov
jg
js
jbe
popa
and
imul
cmp
dec
mov
ficompl
sub
addr16
dec
nop
push
inc
sbb
loopne
mov
into
fnstcw
int
sbb
std
and
xor
lret
fisttps
cmpsl
fidivs
loop
test
mov
xchg
cld
mov
inc
aaa
sbb
inc
add
shlb
lcall
dec
sub
inc
bound
ret
lret
sti
mov
jmp
mov
push
push
loopne
adc
loop
inc
or
or
js
or
repz
call
and
mov
movsb
stc
addr16
fisubrs
xchg
sbb
lea
sub
mov
xchg
int
call
into
out
mov
lods
lock
mov
iret
outsl
mov
dec
fsts
xchg
xchg
dec
and
inc
out
pop
add
aas
in
aas
jmp
das
stos
sub
out
adc
lods
sub
jl
jnp
aas
insb
push
jle
js
inc
push
stos
les
ficoml
in
jl
inc
ror
push
add
jmp
xchg
and
sub
xlat
xor
sub
inc
jle
in
cs
out
movsl
imull
xchg
fnstenv
popf
sti
std
mov
cltd
sbbb
jp
sub
fs
xchg
mov
test
jno
dec
mov
push
insb
cmp
fistpll
aad
ret
mov
gs
mov
ljmp
arpl
mov
push
lret
bound
aas
stc
push
sub
ljmp
scas
hlt
loope
aas
pop
nop
test
imul
insb
pushf
rcrl
andb
mov
loope
xlat
outsb
pop
arpl
test
xor
fs
out
notl
dec
stos
jle
mov
addb
add
testl
xor
and
cmp
dec
xor
mov
insl
jno
jl
popf
adc
push
notl
push
sub
inc
and
sub
in
in
stos
sub
gs
push
mov
or
xor
aam
push
and
popa
das
or
sbb
push
cmc
inc
scas
mov
js
push
ret
xor
fstps
pop
and
cmp
adc
push
push
cmp
or
test
cwtl
push
inc
scas
in
ljmp
dec
mov
addb
jnp
fsts
mov
rorb
pusha
nop
pop
cmpsb
nop
aad
cmp
movsl
test
mov
dec
push
movsb
mov
in
sub
popf
jmp
call
sub
sti
dec
xchg
xor
cli
xor
adc
xor
call
leave
push
mov
ret
pop
pop
sbb
xchg
ret
jmp
add
jle
cmpsl
or
pop
aam
fsts
inc
pop
fcoml
or
mov
arpl
jmp
ja
lock
lret
mov
xchg
inc
xchg
pop
xor
inc
loope
or
shrl
cwtl
mov
mov
jge
popf
adc
sub
insl
xchg
cwtl
sbbb
pop
fld
jnp
xchg
pop
jecxz
push
add
sub
xchg
aas
sbb
clc
pop
inc
cmc
imul
leave
push
mov
mov
mov
sti
jp
xchg
lods
jge
dec
in
jmp
pop
cmp
xchg
fs
mov
sar
scas
push
xchg
jno
je
je
jo
xchg
sbb
and
dec
pushf
ss
cmp
mov
push
jmp
out
or
jnp
mov
mov
add
push
pop
pusha
in
xchg
push
cmpsl
roll
rorb
outsl
mov
out
daa
sbb
adc
jl
cmc
mov
add
cs
enter
out
lods
dec
mov
cld
and
sarb
roll
mov
daa
popf
aas
pop
lods
inc
out
ljmp
adc
sub
int3
clc
and
movsb
roll
jle
lock
ret
or
cli
sub
mov
mov
xor
ret
xchg
xchg
push
in
xchg
imull
and
lret
adc
cmpsl
add
cmp
cmp
faddl
jle
lret
mov
test
pop
adc
mov
mov
fwait
insb
bound
mov
test
jo
ljmp
pop
dec
imul
inc
xor
add
sub
push
xlat
enter
sub
gs
and
ja
adc
inc
or
add
ftst
jo
mov
fadds
sub
int
inc
test
in
loop
imul
inc
mov
insl
cmp
mov
mov
pop
mov
notl
cld
mov
pop
adc
sbb
das
add
inc
mov
popa
popa
mov
ffreep
ret
mov
sub
push
shll
mov
ficoms
stos
loop
push
movsl
mov
pop
push
ja
add
rcll
add
in
mov
mov
mov
aam
sti
mov
bound
incl
test
and
mov
fnstsw
int3
je
dec
cmpsl
pop
xchg
push
mov
dec
inc
jmp
lds
inc
pop
xor
icebp
inc
dec
packuswb
push
sub
addb
les
add
add
mov
fisubl
subl
cmpsb
mov
pop
repz
in
insb
xchg
mov
mov
push
xchg
leave
fdivrl
cmp
out
sub
mov
clc
gs
lods
xchg
mov
fs
and
stos
sbb
cltd
add
in
js
sub
orl
sub
imul
scas
push
add
repz
jmp
fisttpll
xorb
push
mov
cltd
ljmp
test
sarb
or
add
jl
push
imul
or
cli
mov
outsl
pop
fdivr
scas
mov
inc
imul
mov
add
cmp
xchg
gs
ljmp
rcll
dec
sti
sbb
mov
fisttps
enter
push
xlat
mov
inc
dec
adc
sbb
sbb
andl
mov
js
das
cwtl
dec
into
imul
mov
lret
jle
cmp
loope
lock
mov
inc
daa
aas
jmp
adc
adc
push
cwtl
ljmp
icebp
lea
cwtl
xchg
pop
pop
xor
fsubs
cmp
cs
mov
mov
pop
in
add
js
push
insb
dec
mov
fsubl
aas
pop
push
mov
out
aas
inc
jmp
mov
js
roll
inc
lock
into
or
call
ja
lods
ljmp
xchg
mov
or
mov
lcall
xchg
or
push
or
pushf
mov
mov
iret
xchg
fst
das
mov
xor
add
inc
out
xor
jno
dec
movsb
rcrl
icebp
movsl
cmp
std
add
or
into
lods
cmp
xlat
and
popa
jo
insb
enter
mov
dec
pop
inc
xchg
xor
fisttps
jae
lods
addr16
xor
push
fstps
fsubl
push
jge
dec
sbb
test
pop
in
pop
mull
sbb
imul
sbb
inc
stos
arpl
into
push
lcall
dec
inc
leave
xchg
xlat
lret
lods
test
fists
dec
cmp
jnp
inc
or
sti
not
mov
sbb
shrl
popa
dec
pop
push
pop
mov
push
adc
rolb
or
popa
xlat
clc
ficomps
int3
add
scas
daa
sbbl
imul
mov
out
push
imul
xor
sahf
jb
add
sbb
push
ret
or
scas
jns
ja
sub
sub
sub
ficompl
lock
add
sbb
jae
sbb
cs
adc
daa
add
shrl
sub
ljmp
jo
je
xor
jge
inc
sub
jl
jb
les
mov
js
xchg
sbb
cwtl
lods
imul
jl
push
stc
in
sbb
mov
pop
mov
lret
xchg
mov
mov
xorb
cmp
pop
dec
mov
in
xor
aam
push
jns
fists
lods
pop
jnp
xchg
leave
popa
inc
sub
pop
pop
lahf
test
aas
sahf
bound
xor
out
and
lods
popf
sbb
mov
sub
dec
jne
push
cmp
adc
daa
pop
push
pushf
repz
leave
outsl
push
les
cmp
in
mov
push
add
test
xchg
incl
sarl
push
jb
out
jge
faddl
adc
push
adc
dec
push
stos
mov
jmp
addb
loopne
mov
push
mov
mov
mov
rol
mov
and
push
jp
push
ja
loop
pop
lret
mov
mov
jo
mov
dec
ja
cs
sub
xor
into
cmp
cmpsl
mov
out
test
xchg
mov
cmp
adc
push
lcall
scas
cmpsl
inc
mov
mov
cmp
repz
jo
jg
icebp
and
rcrb
push
push
divb
or
adc
push
repnz
gs
mov
js
aaa
or
sub
mov
mov
push
lds
inc
decb
shrl
add
sub
bound
mov
and
ds
gs
fcoms
mov
bound
xor
cs
cmpl
js
mov
mov
jbe
stos
fstpl
push
mov
imul
iret
sbb
xchg
add
andl
int3
icebp
int
addl
push
xlat
adc
xor
insl
frstor
int
sub
pop
mov
cmpsb
mov
cs
pop
insb
inc
es
push
in
push
aaa
cmp
mov
push
aas
sbbl
dec
sbb
push
inc
mov
ret
jns
dec
aas
scas
jae
pop
sti
inc
jb
or
jmp
lods
shl
push
jle
cmp
cmp
aas
mov
pop
push
adc
cmpsl
sub
xor
cltd
add
cmpsb
pop
outsl
or
addr16
mov
sub
fs
pop
pop
push
sbb
in
jne
push
outsb
insl
in
jmp
inc
fnstenv
or
mov
idivb
dec
fs
fldt
or
push
sub
mov
or
insl
mov
ja
sub
subl
dec
cmp
mov
sbb
dec
ret
push
scas
sub
out
jmp
test
add
adc
fwait
das
lret
inc
mov
xchg
ret
xor
test
int
int
mov
and
mov
jecxz
lds
or
ret
ja
subb
dec
sbb
inc
jae
mov
out
ja
lret
fdivl
inc
xchg
testl
and
int
dec
cmc
inc
loope
inc
inc
ret
fcmovnu
imul
mov
int
and
sti
cmc
fimull
mov
cmp
mov
das
xchg
xor
push
movsb
jns
xchg
movsb
pop
jbe
sbb
or
adc
dec
sti
daa
inc
scas
xchg
xchg
jne
jl
and
sub
jle
out
pop
xor
jb
jne
in
ja
and
or
xchg
rcrb
lds
addl
jne
out
adc
jl
testw
sbb
add
pop
push
loop
xor
roll
and
pop
jg
fs
cmpsl
xchg
fwait
clc
xorl
sahf
mov
in
iret
rcll
sbb
and
lea
inc
add
out
cmp
shrl
cmpsb
jmp
psrlq
lock
mov
ret
dec
fwait
into
sarb
loop
sarb
jnp
testl
fs
push
inc
bound
mov
adc
pusha
push
mov
aad
sbb
pop
jno
dec
push
lahf
idivb
xchg
test
les
dec
bound
hlt
cmc
aaa
mov
add
nop
jl
mov
gs
rclb
imul
movsl
cmc
das
dec
cmp
ss
jbe
outsl
dec
xchg
movsl
out
sti
jo
scas
call
mov
les
sbb
xlat
push
fisttps
push
clc
adc
jo
dec
jno
or
dec
icebp
lret
sub
cld
div
jns
lcall
sbb
mov
push
lea
jg
cmpsl
inc
sbb
pop
add
xor
pop
stos
lcall
pusha
mov
and
inc
mov
and
sarb
adc
push
jno
inc
lds
mov
mov
sub
add
xchg
sbb
ljmp
inc
add
or
and
jno
in
mov
xlat
xor
cli
das
addl
movsb
cli
push
fbld
mov
xchg
ret
cmp
arpl
int
sbb
inc
inc
xchg
dec
in
out
and
cmp
xchg
sub
push
pop
lahf
adc
test
pop
imul
pop
icebp
inc
test
lret
clc
fsubrp
cmp
int3
sbb
repnz
loope
push
out
loope
lcall
sub
imul
int
mov
mov
arpl
in
push
into
sti
loopne
ficompl
jl
jp
aaa
aad
ja
adc
xchg
inc
and
rcrb
cmc
mov
leave
inc
movsl
jge
mov
add
adc
mov
xchg
mov
xchg
jg
xchg
sbb
inc
sub
loope
cmp
adc
and
lock
adc
cmp
cli
mov
sbb
jecxz
jecxz
cs
mov
adc
pop
add
or
inc
push
mov
call
fistpll
mov
pop
dec
andb
loopne
mov
push
jne
add
jbe
es
add
dec
sbb
test
daa
in
jge
mov
pusha
push
lods
adc
cmpsb
add
dec
jle
add
jb
jl,pn
sub
ljmp
mov
pop
push
pop
lcall
adc
jb
mov
jg
jecxz
push
repnz
or
add
push
je
cmp
sub
jecxz
mov
mov
jo
rcll
adc
ljmp
pop
repz
inc
sbbb
movsb
xlat
es
cmpsb
sarb
adc
arpl
pop
push
xchg
cmp
cmp
dec
add
jae
mull
stos
pop
adcb
xlat
jmp
jle
mov
pusha
lds
test
xchg
insb
mov
push
mov
jns
insb
insl
cwtl
aas
mov
repz
iret
xchg
sub
cs
push
nop
xchg
popf
pop
mov
pop
movl
mov
sub
mov
negl
add
iret
xchg
mov
out
subb
adc
lods
xor
int
jp
lods
aad
mov
xor
inc
ret
inc
lock
lcall
adc
and
cmpsb
int
test
xor
repz
mov
gs
mov
mov
push
out
data16
outsb
repz
dec
loope
shll
fdivs
cmpsl
mov
mov
out
aam
inc
dec
lcall
mov
inc
jno
inc
inc
adc
popa
ret
inc
test
mov
sub
into
push
jmp
push
cmp
pop
mov
sbb
fidivl
repnz
in
and
jecxz
add
popa
ss
xor
lock
imul
push
sub
push
xchg
cmp
dec
jl
int
loopne
sub
pusha
jne
xchg
or
call
mov
loop
inc
jecxz
add
xor
add
fldl
fistpl
repz
inc
xchg
mov
mov
push
fldt
fwait
sahf
sbb
and
fidivl
xchg
lea
jo
repnz
scas
int3
dec
and
mov
sub
jnp
xchg
jecxz
icebp
mov
fldcw
and
pop
out
div
addr16
adc
in
mov
test
out
popf
jnp
nop
xor
sbb
into
sbb
mov
insb
out
sub
xchg
sub
push
movsl
mov
mov
mov
or
loopne
scas
inc
dec
jns
sbb
push
fidivs
push
insb
aaa
xchg
dec
in
adc
jo
or
fisubl
daa
xchg
cmp
decl
out
or
cltd
orb
sbb
push
std
dec
xor
aam
pop
or
sbb
shl
rolb
nop
push
mov
xor
xchg
jno
je
or
mov
xchg
loope
cwtl
jle
pop
shr
push
mov
add
cmpsb
add
cltd
cmpsl
imul
inc
fstpl
lods
push
push
xchg
cmp
stc
adc
mov
xor
cmpb
iret
add
cmpl
shrb
popf
xlat
mov
dec
cmpsl
or
stc
jl
cmp
dec
pop
sti
imul
testb
in
adc
jg
xor
out
mov
in
dec
push
adc
mov
xchg
pop
jmp
int
or
repnz
aad
jns
shll
out
mov
jge
and
mov
nop
pop
xchg
popa
jbe
and
jno
sbb
mov
int
xchg
sbb
xor
sub
jno
out
in
clc
cmpsl
stc
inc
sbb
mov
mov
or
lods
dec
test
dec
sbbb
add
add
mov
xor
jno
xchg
in
std
fadd
ficoml
mov
add
mov
ljmp
inc
jecxz
roll
xchg
bound
fsts
mov
js
testl
add
inc
icebp
xchg
mov
sbb
test
push
iret
and
cmpsb
js
mov
sbb
insl
and
fcoms
lahf
adcb
ds
and
ret
jge
sahf
cld
jp
sub
lret
adc
scas
fwait
adc
adc
mov
push
ret
fs
push
cmp
cld
sub
fnstsw
jecxz
rorl
jnp
imul
mov
cmp
das
je
push
lret
adc
lcall
dec
xor
pop
clc
cmp
popf
push
shlb
cmpsl
dec
rcl
aam
mov
nop
cs
inc
inc
add
rcrb
shll
rcrb
call
int
pop
sub
insb
sbb
fwait
cmpsb
test
sahf
data16
pop
push
dec
pusha
movsb
push
mov
notb
js
mov
jmp
mov
mov
add
js,pt
mov
repz
fnstsw
repz
adc
inc
lahf
lods
filds
mov
sbb
adc
and
pop
sub
lret
je
les
pop
mov
push
lret
stc
inc
mov
bound
daa
std
leave
push
dec
xchg
adc
sbb
cmpsb
in
stos
in
arpl
xchg
add
aad
sub
mov
cmp
lock
fcomps
and
aaa
mov
sbb
ret
rcrb
lret
rcrl
xchg
iret
lock
adc
stc
aam
jo
aaa
ret
mov
or
jmp
mov
mov
or
sarl
loope
jmp
xchg
mov
outsl
gs
into
fucomip
cmp
fists
dec
and
stc
popf
push
or
popa
cwtl
lock
cmp
push
mov
stc
mov
cld
loopne
in
mov
stos
adc
dec
mov
push
lock
cld
sub
sub
and
xchg
imul
mov
jo
and
xor
cld
sbb
popa
cli
push
test
jle
and
in
push
cmp
mov
gs
mov
outsb
mov
addr16
cli
rcrb
test
sbb
out
hlt
adc
stc
repnz
addr16
andb
mov
jp
adc
cmp
aad
mov
lcall
cmp
gs
leave
or
xlat
inc
test
pop
lds
fstps
das
addb
imull
inc
jp
aam
pusha
or
into
loope
in
add
cmp
in
push
xor
rcrl
mov
es
add
pop
repnz
scas
je
xchg
insl
lods
ficoms
jnp
pop
call
mov
sub
jle
mov
decb
rorb
jecxz
push
xor
inc
push
inc
insb
int3
push
add
mov
les
xor
dec
pop
out
leave
xchg
push
mov
test
jo
adc
inc
lock
dec
leave
and
sbb
mov
aam
stc
into
xchg
gs
pusha
jno
ja
call
pop
movsl
icebp
push
ljmp
inc
ss
insl
outsl
rolb
in
clc
lret
shl
rcll
sbb
int
jle
pop
dec
xchg
filds
jmp
add
jnp
xlat
adc
mov
push
sbb
fimuls
jle
bound
out
mov
sbb
jmp
bound
les
insb
or
sahf
mov
ficoml
outsb
xchg
jecxz
pop
loope
cmc
popf
rclb
scas
xor
mov
mov
mov
mov
jns
sahf
jb
and
xor
or
mov
sbb
pop
dec
mov
pop
in
sub
popa
add
leave
int3
cmpsb
int3
push
pusha
shll
dec
and
fimuls
push
test
add
popa
cmpsb
sub
add
in
jb
scas
sub
pop
dec
cmpsl
testb
jl
lret
es
pusha
jl
nop
les
jb
lret
jmp
test
jle
add
clc
mov
out
cmp
xchg
aaa
test
xor
xlat
sbb
jmp
cli
push
ficomps
call
mov
mov
push
outsb
lahf
aam
jg
imul
adc
sti
pushf
test
int
push
dec
lcall
add
fdivp
jge
scas
in
inc
mov
fnstenv
mov
leave
or
mov
fidivrl
mov
bound
ret
inc
cmp
out
mov
out
outsl
lcall
mov
pop
push
cmp
and
inc
add
sbb
cld
xchg
cmc
fs
into
fstps
sbb
cmpsl
push
push
divl
xor
pop
jge
push
pop
jne
fcomip
sbb
outsl
mov
or
stos
loop
in
mov
movsb
mov
cmp
mov
aaa
repz
stos
push
and
cmpsb
mov
push
das
dec
lcall
leave
mov
cld
imul
mov
push
xor
shlb
in
lret
sbb
iret
scas
jmp
fmul
fsubs
stos
clc
pop
leave
iret
push
push
in
sbb
jp
cmp
lods
pop
enter
fisubrs
bound
gs
adc
outsl
shll
pop
int
mov
aaa
cmpsb
adc
fdivs
and
adc
or
test
in
icebp
popa
fisttpll
mov
in
adc
sar
jg
xchg
mov
addr16
js
aad
mov
pop
adc
inc
mov
mov
outsl
mov
cli
inc
xor
and
xor
ret
mov
scas
sbb
ret
xchg
inc
loope
or
cmp
popf
test
adc
aam
fcoms
call
in
lahf
adc
inc
xor
mov
cmp
aas
in
shlb
out
cmpsb
push
stc
movsb
jbe
push
ret
sub
cwtl
stos
mov
movsb
cmpsl
gs
mov
sahf
cvtps2pd
pop
mov
xor
cmp
jo
sbb
sub
or
mov
shr
dec
dec
push
lahf
jl
sti
xor
arpl
or
adcl
add
jo
mov
test
stc
cmpsb
jbe
push
adc
je
xchg
mulb
add
add
push
ljmp
sub
or
push
mov
mov
incb
adc
jge
push
popa
inc
out
loopne
inc
leave
arpl
inc
in
sbb
stos
lcall
popf
and
shlw
roll
out
mov
and
or
ret
lret
push
and
idivl
nop
mov
movsl
sub
in
pop
xchg
ss
push
sub
rcll
ja
js
stc
inc
lcall
inc
int
sti
inc
cld
insb
pop
es
flds
push
lock
aad
arpl
cld
imul
sub
mov
mov
adc
mov
movsb
push
movsb
popa
inc
xchg
jg
lock
pop
shl
rcl
addr16
xor
popf
aas
test
insb
dec
dec
jmp
mov
xor
int
stc
push
loopne
sub
cltd
mov
and
aam
ficoml
adc
icebp
lret
push
xorl
mov
mov
loop
in
jmp
push
sbb
pop
imul
fwait
sahf
repz
es
push
sbbl
dec
and
jge
out
popa
and
in
dec
adc
push
pop
or
sub
adc
xlat
iret
into
sbb
adc
mov
push
sbb
stc
in
jno
sbb
out
sti
sub
bswap
and
divl
out
mov
jecxz
sahf
pop
pop
sti
bound
daa
cmp
fstpt
aam
sub
xor
mov
cltd
cltd
and
pop
jo
fcmovnbe
shrl
shl
stc
hlt
or
push
aaa
cld
xor
and
adc
or
mov
imul
mov
dec
lds
fdivrl
popa
mov
jb
clc
xchg
pop
jae
je
pop
dec
out
sub
cltd
out
sub
inc
push
mov
stc
xchg
lret
sbb
add
ss
dec
sbb
push
addl
movl
sbb
call
aad
mov
pop
imul
int
cmp
ret
js
icebp
pop
jb
outsb
mov
xchg
cltd
imul
inc
mov
aas
jno
and
fadds
arpl
adc
push
mov
inc
sbb
inc
cmp
test
pop
cmp
aad
and
popa
hlt
xor
jp
cwtl
mov
stos
xor
cmp
dec
xchg
push
aam
mov
into
cmp
pop
jp
inc
ret
call
xchg
fwait
push
fwait
mov
inc
out
dec
or
mov
mov
fnstenv
adc
aad
test
sub
and
subb
fldcw
add
push
das
jle
aam
xlat
js
adc
cltd
cs
push
int
sub
outsl
xor
add
outsl
int3
xchg
xchg
inc
cli
cmp
jecxz
ss
adc
pop
mov
jo
test
dec
popf
sarl
inc
and
jmp
mov
dec
out
cmp
popa
dec
fwait
imul
lock
mov
and
aam
dec
add
addl
ret
jo
int
cmc
ret
pop
and
les
jb
or
pop
jns
mov
pop
lcall
sti
cmp
es
test
inc
inc
mov
pop
and
xchg
cwtl
xchg
out
pop
test
lock
sarl
sbb
jne
sbb
add
jae
sbb
xchg
sub
shrb
jnp
sti
test
lods
add
test
and
or
push
popf
movsl
adc
jmp
iret
ljmp
lahf
add
sarl
mov
lock
pop
pop
pop
jecxz
push
push
decb
adc
sbb
or
pop
xchg
outsb
xchg
dec
mov
loopne
and
cld
ret
cltd
daa
adc
rcr
pop
cmpsb
jg
pop
mov
adc
mov
int3
cmc
adc
jmp
mov
cmpsb
add
cmp
movsb
imul
aam
cmp
push
and
xor
pop
mov
xchg
scas
mov
cmp
cmpsb
test
xchg
stos
fsubrl
fnstenv
jecxz
xchg
dec
in
jo
dec
lahf
mov
push
or
sub
jne
testb
scas
adc
nop
rcll
dec
push
jne
addr16
and
jns
xor
outsb
inc
dec
sahf
fsubs
xor
fnsave
pop
sub
in
ret
loop
punpcklbw
push
fsts
sti
jns
lret
and
xchg
fsub
js
pop
in
lret
add
mov
pop
mov
fdiv
jne
lods
inc
adc
cmpsb
lret
jmp
lock
fnstcw
mov
xchg
jb
loop
ss
adc
pop
pusha
pop
or
add
cmp
popf
std
dec
or
cwtl
je
push
or
test
jae
mov
cmp
movsl
fists
fwait
ja
or
out
xor
ds
adc
push
jnp
mull
add
sbb
arpl
arpl
lret
int
push
cmpsb
xor
xor
xor
fistpll
sbb
js
sub
dec
jb
sub
cwtl
fs
xlat
inc
mov
jne
in
xchg
mov
mov
or
add
jnp
in
pop
dec
jp
dec
test
stos
inc
push
loopne
push
addr16
in
shrb
adc
pop
lret
pop
pop
adc
inc
xchg
inc
enter
jl
pop
cwtl
mov
inc
outsb
sub
ss
inc
shrl
xor
clc
pusha
aad
xchg
cld
aas
or
repnz
and
or
loopne
fucomip
jbe
rorl
mov
add
movsb
nop
dec
mov
int3
push
packssdw
sbb
mov
xor
jo
jb
cwtl
add
mov
stos
xchg
das
out
stc
xor
and
sub
pop
aam
jns
lcall
or
cmc
sub
adc
aaa
insb
and
mov
inc
dec
daa
imulb
sub
mov
mov
outsb
push
lea
iret
sub
jne
subl
ret
je
mov
mov
mov
push
pop
mov
negb
or
dec
stos
fdivrs
loopne
insl
mov
sub
add
jb
lock
mov
cmpb
push
dec
cmc
mov
imul
push
cs
inc
icebp
arpl
ret
loopne
and
sti
rorb
scas
inc
imul
jno,pt
push
shr
jge
push
adc
xchg
inc
setle
jbe
or
fcomps
arpl
push
mov
mov
ljmp
xchg
in
scas
bound
loop
fildl
aaa
mov
gs
adc
push
rclb
inc
into
xchg
cmpsl
push
sbb
jae
mov
dec
mov
adc
sub
daa
stos
jne
in
mov
sub
adc
bnd
xchg
xchg
jb
aam
xchg
pushf
push
sbb
nop
cmp
add
inc
cli
push
idiv
adc
dec
mov
insl
or
iret
movsl
sub
sub
and
push
mov
es
repnz
ds
mov
mov
mov
fsubp
dec
imull
mov
shll
mov
aas
clc
fidivrl
jae
cld
sub
iret
insl
bnd
push
rcll
imul
push
aam
rclb
shrb
inc
mov
pop
bnd
ja
xor
sbb
aaa
lret
lods
je
sub
sub
jne
cmp
xorl
mov
lret
jae
mov
mov
pop
arpl
jg
xor
rclb
jae
push
movsl
clc
rcl
je
mov
sbb
lods
addr16
lret
aaa
enter
dec
shl
push
and
iret
icebp
sub
jo
inc
iret
fmuls
jno
sar
dec
push
mov
inc
inc
ds
push
jne
pop
adc
inc
repnz
push
pop
testl
cwtl
es
mov
lods
fwait
loopne
hlt
cmpsb
mov
jle
cmpsb
js
mov
mov
adc
jl
dec
xlat
mov
stos
sub
add
mov
cmpsb
add
and
and
int
adc
in
sbb
cmpl
outsb
stos
adc
data16
dec
lock
mov
scas
jae
or
push
dec
dec
orl
cs
stc
cs
push
mov
leave
dec
lahf
int3
cmp
outsl
pop
jle
sub
repz
daa
mov
or
lods
insb
lods
jns
jg
and
pop
fistpl
push
aad
faddp
inc
mov
xchg
shl
dec
dec
sbb
aam
popa
idivb
push
lods
lods
fdivrs
imul
lods
mov
jp
sbb
cmpb
test
pop
sbb
inc
xchg
pop
lods
jno
xor
out
jbe
push
sbb
fstpt
pushf
jg
xchg
mov
ljmp
add
scas
fistpll
sbb
jo
jae
xchg
lret
mov
push
and
add
js
mov
stos
push
leave
in
push
xchg
sub
sub
filds
inc
loope
jnp
xchg
jns
loopne
sbb
adc
pop
xchg
cli
lret
and
insl
insb
mov
xor
and
daa
and
fstpl
jo
fwait
sub
or
add
or
inc
mov
test
test
mov
aam
sbb
dec
mov
aam
xor
cmp
test
test
push
xorl
cs
xchg
test
fs
lcall
adc
icebp
and
push
add
mov
mov
xchg
pop
push
rcll
in
jle
mov
mul
pop
rcl
and
jp
xlat
sub
inc
mov
pushf
les
rsqrtps
testl
mov
imul
test
pop
inc
faddp
dec
pop
inc
push
cmp
jg,pt
mov
jno
out
jbe
dec
inc
mov
mov
jnp
xor
mov
mov
dec
push
xor
lret
jl
adc
lea
jmp
jnp
push
add
lcall
jno
fdivrl
pop
out
test
or
mov
mov
bound
outsb
pop
adc
sbbl
or
dec
push
gs
aaa
and
inc
mov
rolb
mov
ja
jmp
shll
call
fs
sbb
add
pop
das
or
and
mov
inc
xchg
scas
push
xlat
sbb
and
std
neg
sbb
stos
mov
ja
push
push
divb
push
inc
xor
mov
outsb
push
or
xorb
nop
arpl
and
add
xor
movsb
pop
arpl
mov
testb
ss
xor
dec
fs
cmp
mov
out
jmp
movsl
xchg
ret
js
enter
jb
jmp
cmp
je
ficompl
stos
mov
mov
das
lock
push
int3
addr16
or
cmp
sti
andl
push
aas
aam
aad
jne
call
fists
test
pop
mov
fs
out
sub
pop
sub
add
sub
scas
xchg
adc
outsb
sahf
aaa
push
enter
lds
jns
cmp
pop
ja
daa
push
pop
cmp
leave
jb
loopne
mov
mov
ss
ret
imulb
mov
inc
push
push
mov
ret
lods
pop
inc
loopne
loope
das
cwtl
dec
or
mov
and
stos
fbld
inc
js
fisubrl
popa
and
xchg
lds
dec
loop
mov
lds
stc
clc
imul
movsb
call
mov
stos
add
jl
pop
leave
xchg
or
stos
stc
lret
dec
cld
fadd
sub
inc
arpl
test
addl
cmpsb
and
dec
xchg
shlb
lds
loop
sarl
lahf
mov
mov
movsl
mov
clc
insl
lods
cmpsb
aas
cmpsl
mov
xchg
add
pop
in
sub
aaa
pop
pop
into
in
repnz
sub
enter
call
icebp
mov
imul
cmp
loopne
popa
gs
sub
test
sbb
andb
icebp
mov
cmp
ljmp
cli
push
sub
das
add
push
loopne
lock
add
inc
movsl
sub
push
jle
mov
cmp
nop
out
rclb
ss
scas
xchg
xlat
aas
int3
or
nop
pop
fabs
repz
push
insb
cmp
push
mov
jbe
into
dec
push
cmp
and
add
rcrb
jp
int
dec
xchg
leave
mov
add
out
xor
pop
push
or
xorl
pop
gs
dec
sar
rcrl
enter
das
stos
mov
pop
call
adc
fs
repz
popa
sub
inc
xlat
mov
cs
cmp
imulb
mov
aas
push
lea
fdivrs
fistl
sbb
mov
out
cmp
negb
jle
inc
lret
xor
jae
mov
adc
roll
sti
inc
add
mov
insl
jecxz
ror
test
out
ljmp
cltd
dec
push
cli
mov
shr
test
dec
pop
out
iret
pop
sub
shlb
mov
fsub
ds
mov
jmp
sbb
xchg
sti
vmread
pop
sbb
scas
data16
push
jecxz
push
repz
clc
and
sub
lock
cltd
xchg
sub
xchg
je
mov
mov
test
mov
inc
push
push
data16
int3
popa
into
in
ljmp
scas
icebp
mov
ffree
ret
add
pop
adc
mov
pop
sub
aaa
call
pop
cmp
cld
daa
mov
out
lock
mov
pop
and
lcall
xchg
cmp
mov
jl
sti
pushf
push
push
ds
xor
push
mov
mov
fstl
mov
int
stos
pushf
jne
xchg
inc
mov
jbe
jmp
decb
push
inc
cmp
pop
int3
mov
push
and
call
xor
sbb
lahf
imulb
aas
and
dec
test
or
xor
cltd
mov
lea
out
cld
dec
sbb
xor
outsl
test
mov
jnp
iret
cmp
imul
jge
sbb
pop
cld
movsb
mov
pop
pop
cli
pop
sbb
adc
jb
pop
push
mov
cmpb
lock
enter
fs
mov
cmc
stc
or
call
std
adc
dec
cmp
push
mov
mov
rcrl
gs
xlat
jns
in
mov
mov
or
inc
lods
out
pop
jle
xor
nop
mov
mov
jnp
mov
push
lds
ljmp
mov
mov
std
pop
cltd
std
out
enter
ljmp
sti
jmp
mov
in
fdivrp
or
test
xchg
mov
clc
inc
hlt
sti
jl
cmp
mov
stos
ja
aad
add
or
xchg
scas
push
inc
and
movsb
adc
lcall
repnz
repz
xor
movsb
pushf
adc
push
push
addl
mov
jge
nop
into
clc
push
mov
jb
xchg
popa
iret
sub
sbb
icebp
xor
cmc
leave
and
push
mov
jmp
pop
dec
sbb
loop
mov
add
xchg
nop
outsl
inc
or
jecxz
daa
je
cs
xlat
std
data16
mov
es
stos
push
popa
xchg
xor
js
addr16
sub
mov
test
shrb
mov
xchg
repz
out
adc
push
pop
dec
sti
and
add
inc
repnz
popa
push
sub
pop
js
daa
push
jg
in
push
push
push
sarl
push
pop
add
orb
in
adc
lret
inc
ret
sti
mov
leave
imul
jecxz
cmpb
inc
ror
fld
lods
dec
andl
notl
mov
push
fdivrl
mov
cmp
ja
sar
xor
stc
or
mov
mov
xchg
xor
cmpsl
test
add
push
xchg
fwait
xchg
cmp
insl
ror
loop
ja
popa
rclb
sbb
and
adc
xlat
push
cmp
mov
dec
addr16
test
imul
xchg
jae
xor
inc
sti
mov
das
jae
inc
js
loope
xchg
lock
inc
cmpsl
fabs
repz
adc
stos
mov
sub
jecxz
push
cmp
ret
test
or
jl
mov
rorb
stc
xor
enter
pop
and
and
mov
popa
ljmp
dec
push
adc
adc
xchg
xchg
ljmp
mov
inc
xchg
add
bound
jnp
sbb
sbb
mov
bound
mov
dec
les
imul
pushf
cmc
js
pop
clc
js
adc
xor
out
in
ja
std
ss
fwait
in
xchg
popa
sti
jbe
hlt
sub
mov
jp
inc
scas
shlb
mov
rorb
lods
and
test
inc
insl
adc
sbb
rcll
mov
dec
jae
push
mov
fldcw
add
sbb
xchg
adc
mov
jne
lcall
mov
xor
sbb
cmp
ja
sbb
add
pop
testl
mulb
fisubrl
sbb
sub
das
inc
sub
pop
rcrb
jns
fdivs
jge
fildll
or
ljmp
addr16
sbb
jmp
add
imul
mov
jge
or
mov
xchg
or
or
scas
gs
bnd
je
jnp
xchg
dec
push
ljmp
sub
test
cmp
or
inc
cld
shll
mov
shrl
pslld
sbb
dec
test
es
in
dec
pusha
rclb
js
jb
push
push
or
push
data16
std
cmp
ds
call
jge
mov
mov
xchg
dec
sbb
adc
clc
imul
lds
mov
jbe
movsw
jge
mov
dec
out
mov
push
dec
sbb
push
repz
test
or
ss
scas
cmc
jmp
mov
mov
cld
cmp
pop
fwait
mov
xor
sub
cmp
cmp
xchg
xchg
and
dec
xchg
jecxz
fstl
lock
incb
lret
pop
clc
dec
sub
mov
in
mov
mov
cli
cmc
lret
call
adc
out
jecxz
loopne
sbb
inc
sbb
cmp
cld
not
daa
popf
aaa
mov
clc
xchg
or
xchg
mov
lods
loop
movb
int
scas
lret
aam
xlat
sub
das
xchg
add
sarb
rcll
jecxz
negb
cmp
outsl
insb
leave
ret
lock
jl
mov
inc
push
js
and
mov
fisubrl
fisubs
insl
test
ret
lock
ficomps
mov
addr16
call
push
dec
sub
subb
mov
adc
fisttps
or
mov
int3
xchg
or
push
fwait
mov
and
cmpsl
xchg
popa
loop
pop
in
outsl
add
test
gs
sub
xor
int3
mov
inc
inc
inc
fadds
loope
and
push
popf
dec
aad
push
or
nop
lods
mov
sbb
sbb
jno
fcompl
cmc
mov
fsubp
popf
jle
push
xchg
dec
and
dec
xor
daa
loop
push
test
cmp
js
push
and
mov
add
xchg
cmp
and
decb
std
and
cs
mov
loop
popa
ljmp
inc
arpl
pusha
jge
inc
xchg
xlat
mov
clc
pop
scas
mov
mov
mov
cltd
or
xchg
in
add
in
repnz
pop
or
add
dec
add
ss
imul
in
sbb
rcrl
jg
push
xor
nop
out
andl
sbb
mov
scas
mov
pop
jge
mov
inc
clc
daa
jo
push
mov
sarb
adc
mov
pusha
popa
negb
inc
add
add
jo
adc
sti
xchg
cmc
out
stos
into
in
mov
jo
mov
adc
leave
dec
fwait
data16
inc
dec
mov
dec
daa
fdivl
mov
mov
sahf
xor
cmpl
js
push
inc
or
pop
mov
mov
movsb
adc
push
jg
ljmp
adc
rcrb
insb
sub
imul
test
pushf
pop
out
popf
dec
add
mov
adc
pop
push
in
add
mov
sub
mov
fs
jno
dec
cmp
mov
sbb
fisubl
cmpsl
cmp
adc
pushf
add
fimull
adc
mov
int
or
sbb
and
fadds
xor
mov
sub
push
dec
movzbl
cmpsb
dec
in
sub
lock
lahf
call
pop
int3
and
and
cmp
or
jmp
sarl
or
pop
jg
pushf
mov
push
push
add
lahf
jle
clc
xorb
pop
fistps
shlb
cmp
decl
push
mov
mov
in
or
int3
negb
std
test
dec
push
inc
push
dec
lods
mov
pop
shrb
movsl
push
add
jl
lahf
stos
adc
jp
cmp
sbb
mov
dec
and
in
in
xchg
push
jbe
loopne
mov
xchg
scas
and
sub
bound
scas
mov
mov
push
out
js
sub
loopne
arpl
into
or
cmp
pop
dec
sti
xor
xor
jo
dec
arpl
icebp
jo
sub
mov
pop
or
ret
or
loop
fucom
adc
inc
mov
dec
pop
or
mov
pop
mov
pop
out
xchg
ljmp
sub
jecxz
push
fmuls
xlat
call
push
icebp
scas
lods
pop
mov
push
stc
out
jmp
scas
cmp
cli
mov
aad
rol
inc
and
add
call
fistps
mov
or
repnz
jp
or
sqrtps
mov
lock
mov
add
xchg
mov
popa
cli
mov
add
xor
sbb
mov
fwait
ljmp
push
xor
scas
in
mov
icebp
lock
and
test
and
or
clc
jbe
jo
rolb
xchg
dec
xchg
jns
pop
or
pop
mov
daa
cs
in
call
ljmp
popa
inc
mov
sub
xchg
ficompl
sbb
daa
or
aas
cmp
mov
imul
mov
xchg
in
dec
shrb
mov
int
movsb
fstl
mov
arpl
mov
xor
aas
leave
push
fidivrs
inc
dec
inc
adc
push
shr
sbb
add
jbe
or
fcompl
xchg
and
outsl
jno
pop
mov
andl
imul
xchg
add
popf
dec
out
pop
mov
sub
movsl
sbb
mov
add
mov
add
adcb
sub
or
scas
movsb
ds
sub
in
add
test
xor
int
in
push
jecxz
add
addl
subl
lods
test
mov
lea
cmp
add
in
sub
loope
clc
cmp
pop
push
xor
imul
xchg
push
arpl
mov
test
enter
repz
rorl
pop
jl
repz
fisubl
mov
adc
enter
mov
and
sbb
mov
loop
mov
daa
dec
add
fwait
xchg
pop
mov
sub
inc
in
dec
xor
insl
inc
jle
out
aam
lcall
xor
add
das
sarl
and
fs
aas
add
shl
mov
aas
test
adc
test
dec
adc
fidivl
imul
sub
adc
push
sbb
in
inc
inc
loopne
mov
enter
arpl
pop
pop
mov
inc
push
in
das
mov
or
loope
sar
push
rcr
sub
aam
lock
out
sub
dec
adc
push
test
xlat
mov
pop
mov
lret
push
pop
test
insl
fistpl
adc
pop
xchg
sub
xchg
fs
and
stos
jle
mov
ss
out
ljmp
call
sahf
rorl
pop
ds
mov
mov
les
in
dec
pop
cmp
cld
dec
xor
sbb
pop
movsb
xchg
je
xchg
out
stos
xchg
out
xchg
out
jmp
inc
push
lds
adc
daa
mov
dec
mov
cmp
aad
cwtl
pop
aad
mov
mov
mov
push
and
ja
inc
sti
dec
adc
push
cmp
inc
fs
or
or
ret
test
inc
pusha
or
repnz
fnsave
and
mov
mov
jae
dec
jge
aas
sbb
sub
inc
jg
sysenter
andb
xor
scas
add
ret
repz
arpl
hlt
imul
sahf
add
xchg
mov
mov
push
and
ss
mov
loope
fnstsw
int
mov
push
pop
ljmp
int
cmp
mov
sahf
dec
jecxz
dec
push
int3
ja
fwait
jo
out
cli
sbb
xor
mov
jp
dec
cwtl
scas
stos
or
push
aam
icebp
pop
rorb
xchg
cmpsl
les
mov
add
jmp
loope
int3
add
jbe
lea
fcomip
inc
int3
and
and
iret
xor
push
dec
mov
fdivl
cmp
mov
js
jecxz
mov
fldt
dec
cmp
push
adc
pop
es
daa
rolb
or
push
movsb
dec
repz
fnsave
mov
add
and
inc
jne
ljmp
add
xchg
mov
cld
pop
ret
inc
outsl
xorl
mov
fistps
cltd
jns
outsb
add
cmp
sub
jp
fnsave
xor
loopne
cltd
mov
aaa
rcrl
xchg
xchg
ss
pop
into
dec
loop
js
lahf
je
dec
in
dec
addb
lock
sti
jle
dec
inc
insb
jp
cld
xchg
imul
outsb
icebp
cmp
jg
mov
cli
cli
ret
stc
mov
or
adcb
mov
jns
push
outsb
mov
loopne
movl
ret
fs
mov
enter
fldcw
lea
adc
mov
sub
add
push
pop
inc
sub
fistps
adc
inc
out
push
insl
dec
sbb
cmpsb
fdivl
subl
cmpsb
aad
xchg
popf
pop
lds
mov
dec
cld
xchg
loop
rcrl
movlps
push
rorl
xchg
mov
mov
mov
xchg
xor
iret
push
jg
inc
fisubrl
aam
fistpll
mov
enter
dec
cmc
add
xchg
or
mov
cmp
movsl
jp
in
xchg
mov
pop
cmp
xor
sbb
xchg
add
fisttps
movsb
mov
les
iret
inc
cmpl
mov
arpl
jmp
es
imul
cmp
mov
sbb
stos
mov
pop
cmp
jb
es
mov
and
cmc
les
aas
in
pop
inc
fcompl
jnp
sbb
and
mov
inc
fwait
insl
ficompl
int
push
cmpsl
mov
out
bound
ret
icebp
test
lea
adc
cmp
sub
fwait
push
jae
inc
out
imulb
pop
pop
mov
cwtl
ss
jae
int3
lods
xchg
pop
lods
jl
lret
shll
cmp
inc
test
xor
cmp
data16
jg
jle
adc
mov
sub
pop
mov
jns
fstpt
ret
fisubrl
dec
data16
iret
mov
sub
dec
ret
popl
jecxz
jb
sub
mov
jp
or
pop
dec
fistpll
scas
shrb
mov
in
mov
mov
out
inc
fnstcw
pop
jns
mov
orl
fildl
adc
lea
lret
jecxz
adc
jl
add
dec
pop
xlat
or
dec
js
and
pop
push
lea
das
rcrl
mov
or
or
cwtl
adc
insb
push
dec
daa
push
test
hlt
icebp
xor
jae
stos
mov
in
push
dec
punpckldq
push
jno
popf
add
cmpsb
int3
cmp
dec
cltd
mov
cmp
mov
and
outsb
dec
pop
push
jge
xchg
pop
or
repz
mov
jle
lds
and
mov
jp
call
and
scas
xchg
idivl
push
mov
pop
jae
and
ret
stos
cmpsb
aam
mov
sub
je
adc
adc
dec
and
out
mov
loope
add
pop
cmc
sub
add
je
lahf
and
xor
sbb
nop
or
ds
jl
popa
aam
dec
and
push
inc
test
repnz
push
imul
gs
xor
xor
mov
adc
xor
mov
mov
sbb
jmp
sbb
das
mov
fucomp
out
jns
cmc
stc
movsl
je
mov
xchg
sbb
in
jp
in
and
mov
cmpsl
ret
call
shlb
cwtl
adc
insb
lcall
test
into
and
pop
push
pop
add
push
pop
in
push
jmp
mov
call
imul
divl
or
inc
add
lds
jnp
sub
jne
pop
sahf
shrb
sbb
dec
aam
repnz
mov
pop
fsubr
fs
mov
test
test
jle
repnz
adcb
mov
ja
pop
mov
out
nop
dec
icebp
jg
inc
cmc
dec
lea
mov
inc
jmp
into
jne
out
cmp
and
dec
push
loope
icebp
xlat
pop
ja
push
mov
cltd
and
sbb
sub
movsl
cld
clc
ljmp
xchg
pop
stc
fildl
sub
sub
cmpl
jge
mov
and
lods
mov
insb
es
shlb
gs
and
jmp
and
int
popa
add
loop
mov
xlat
cmp
cmpsl
add
repnz
sbb
adc
push
insl
xorb
adc
sbb
mov
lods
jle
rcr
aad
fwait
shll
leave
push
pop
shl
pusha
fisttps
test
jmp
loop
dec
repz
adc
jle
sub
push
jbe
xlat
push
fsubrp
xorb
stos
ss
cmpb
pushf
inc
ret
mov
mov
sub
jle
lods
negl
sar
addr16
dec
insl
inc
rorb
and
sub
pop
outsl
leave
jns
cwtl
jnp
cmp
outsb
aam
je
test
or
movsb
xor
in
ds
bound
rcll
sbb
sarb
dec
sub
xor
pop
xor
rcr
sbb
leave
dec
pop
divb
popf
push
and
cmp
mov
mov
add
dec
out
pop
push
inc
add
mov
jl
scas
mov
cmp
or
out
jns
pop
shll
cmp
adc
adc
push
pop
into
out
ret
add
out
xor
xor
mov
jle
xchg
shlb
les
xor
xor
cmp
cs
xchg
push
and
xadd
jnp
sti
push
stos
test
inc
sub
jge
mov
push
mov
xchg
cmc
mov
lods
xor
dec
mov
dec
add
lret
adc
xor
adc
push
jno
cmp
sbb
mov
enter
mov
loope
ja
pop
fistps
int3
test
orb
sub
xchg
js
cmpsb
jle
inc
jae
xchg
jo
xor
pusha
inc
inc
sbb
clc
fisubs
clc
push
and
jp
jg
xchg
popa
and
ret
das
data16
imul
mov
in
rcrl
add
sub
and
aam
pop
sub
std
jnp
nop
js
lock
push
flds
push
add
icebp
pop
and
adc
popa
pop
sbb
cmp
add
fldl
push
dec
jno
mov
test
push
cmp
arpl
cmp
xor
addb
xchg
push
mov
and
mov
data16
mov
lahf
mov
fwait
xchg
es
push
in
inc
into
add
inc
inc
xchg
lcall
cmp
mov
mov
jp
aad
or
repz
sbb
push
ret
loopne
push
sub
pop
outsb
inc
orl
xchg
inc
push
loope
lods
mov
mov
or
add
cs
mov
sub
gs
pop
and
enter
testl
mov
mov
mov
sbb
mov
stos
pop
movsl
add
pop
jnp
insl
xchg
lret
add
iret
push
lock
int3
mov
mov
aad
mov
rol
cmp
push
sub
mov
inc
pop
pop
mov
nop
cmp
movl
jo
scas
addr16
ficomps
mov
je
push
jecxz
jge
push
mov
adc
sti
pop
stc
add
mov
add
sub
xor
stc
nop
fisttpll
loope
push
mov
cmp
insl
mov
cmp
icebp
lods
jae
clc
inc
int
inc
test
xchg
push
sbb
cs
xchg
or
mov
js
push
sbb
movsl
mov
aas
mov
cmp
sub
or
push
jmp
pushf
dec
xlat
inc
lea
xchg
and
lahf
outsb
lock
cmp
lds
add
scas
enter
add
xchg
or
stos
cmp
clc
addr16
mov
stos
jbe
push
xchg
andb
mov
and
and
dec
push
cld
pop
pop
enter
fdivl
stos
jmp
xchg
push
jae
cli
mov
jmp
dec
push
add
repz
add
inc
fidivl
pop
jbe
sbb
mov
mov
xchg
scas
dec
js
mov
add
outsl
cmpsl
cmp
mov
arpl
scas
jle
pop
jo
cltd
lret
mov
mov
aam
push
sub
fwait
js
cmp
hlt
popa
mov
std
rcrl
pushf
shlb
rorb
cltd
hlt
mov
jnp
das
push
mov
into
int
outsl
fwait
ret
arpl
lea
mov
push
call
and
rcr
or
mov
xlat
or
iret
adc
pop
stc
jp
jge
cmp
mov
jl
shrb
popf
jp
xchg
jno
test
popl
xor
xchg
lods
xchg
lret
xchg
inc
xchg
sub
or
ja
add
stos
jns
call
pop
loope
movb
cmpsb
xor
pop
out
push
lock
pushf
in
sub
and
xorl
loope
pushf
ret
mov
sub
ret
push
xchg
into
inc
test
stos
mov
lret
dec
adc
hlt
out
in
cmp
xchg
jns
pop
scas
popf
pop
std
and
pop
loope
sub
mov
cwtl
xor
or
cmp
adc
and
shl
jecxz
iret
xor
and
push
dec
mov
lods
lea
xor
mov
pop
push
lds
and
nop
xchg
cmp
jl
mov
sub
mov
call
mov
fnstcw
out
mov
and
iret
ffree
lret
call
roll
push
add
test
sbb
pusha
push
aaa
shr
leave
repnz
fs
xlat
loope
fmull
test
movsl
popa
mov
cld
push
xcrypt-cbc
cmpsl
push
stos
sti
imul
iret
fildl
jb
cmc
xor
xorl
mov
xor
out
cmc
inc
or
addr16
ret
lea
popf
nop
or
xchg
add
ljmp
int3
pop
cmpsl
pop
lock
stc
adc
jle
mov
jecxz
mov
push
and
divb
xchg
cli
mov
inc
sub
mov
pop
inc
pop
fucomi
pusha
loop
mov
sbb
clc
push
insl
shrl
sbb
nop
and
push
sub
mov
ss
fdivp
into
xchg
in
jns
adc
dec
pop
loopne
mov
mov
fwait
pop
jnp
mov
daa
mov
adc
pop
ret
cltd
mov
jecxz
jae
pop
add
jbe
scas
cmovae
loopne
mov
xchg
mov
add
out
mov
sub
xchg
dec
adc
hlt
cmp
ljmp
mov
in
sub
jo
push
loopne
das
xchg
scas
dec
inc
int
pop
jg
mov
lret
popf
scas
movsb
pushf
adc
xor
lds
mov
leave
fs
imul
divl
jmp
xor
nop
pushf
sub
cmp
xchg
mov
sub
xchg
sbb
rcrb
pop
dec
pop
cmpsb
mov
ret
imul
push
dec
mov
push
imul
mov
mov
adc
pop
adc
in
mov
mov
xlat
cs
adc
lret
sub
push
jb
std
or
dec
pushf
and
adc
xchg
jecxz
inc
sbb
jle
fwait
outsl
dec
add
pop
scas
or
popa
loope
inc
sbb
sub
add
pushf
sbb
jne
fldl2t
or
sbb
mov
push
mov
pop
pushl
cmp
jo
sbb
fs
or
inc
dec
add
push
test
mov
xor
mov
sbb
sbb
or
mov
sbb
xchg
and
pop
jecxz
std
xor
into
hlt
jne
fwait
das
sbb
int
sub
cmpsl
sbb
icebp
std
xchg
in
pop
outsb
push
mov
jl
jnp
int3
or
mov
push
jl
pushf
xchg
xor
jmp
ljmp
mov
jp
aaa
inc
mov
mov
pop
rclb
push
fnstenv
nop
scas
je
fisttps
adc
ss
add
mov
je
mov
lret
test
popf
lcall
imul
ret
cmp
out
movsl
mov
jp
fdivrl
cmp
mov
jecxz
data16
lds
push
mov
fwait
adc
jp
gs
inc
adc
sub
mov
lods
xchg
inc
jge
insl
dec
cmpsb
mov
mov
call
and
mov
push
sub
and
ret
insl
push
push
and
leave
mov
fidivrl
mov
and
lcall
push
mov
mov
mov
cmpsl
inc
jno
cwtl
jnp
dec
mov
jns
mov
jecxz
scas
jno
aaa
pop
iret
out
out
daa
cmp
push
and
add
and
xchg
or
rclb
add
jecxz
add
test
sbb
pop
dec
repnz
dec
xor
add
fnsave
inc
in
pop
shr
mov
pop
outsl
mov
int3
jae
das
sub
ds
in
rcrl
test
sbb
fadd
int3
cmp
add
les
mov
push
add
lea
loop
xlat
cmp
aam
scas
mov
rdmsr
push
fcmovbe
mov
and
div
mov
mov
or
xchg
ss
xor
imul
and
ljmp
cli
int3
xor
pop
in
aas
call
xor
pop
sti
or
cwtl
add
push
int3
fnstcw
mov
jae
jbe
mov
pushf
lret
mov
into
gs
dec
int
or
add
inc
icebp
lret
lds
stos
push
sub
mov
push
add
ret
mov
call
shll
xlat
push
xchg
loope
nop
mov
adc
jno
jle
je
mov
mov
push
cmpb
sbb
aas
mov
cwtl
cs
ja
nop
int3
mov
push
mov
add
lods
mov
inc
push
sti
xor
test
adc
sahf
arpl
in
xchg
cwtl
xchg
adc
mov
das
insb
roll
push
cs
or
sbb
rcll
or
jp
xchg
dec
popa
out
and
out
imul
mov
push
cld
push
cmc
mov
add
and
pop
lret
sbb
jecxz
sbb
scas
mov
pop
mov
cmc
into
cmp
mov
jo
dec
notl
dec
sub
adc
adc
sub
clc
xchg
push
ror
dec
mov
mov
mov
add
inc
loope
stos
stos
imul
adc
pop
out
push
inc
dec
jecxz
repnz
lahf
and
mov
adc
and
xchg
jno
call
jge
push
pop
push
xchg
cs
aad
adc
and
out
xchg
fbld
adcb
mov
stos
pop
pop
cwtl
inc
es
add
adc
jb
and
mulb
bndstx
xor
cmp
dec
clc
jnp
push
bound
mov
gs
cli
out
incb
shrb
sub
fstpl
pop
and
push
xchg
hlt
popf
test
xchg
or
xor
fnstenv
jo
repz
push
inc
or
sub
cs
lds
shl
cmp
dec
std
arpl
nop
test
pop
jns
int3
push
repz
movsb
sub
push
inc
xchg
xchg
sub
or
xor
xchg
rcll
jnp
cmpsl
lea
int
bound
push
out
cmp
jno
fstps
aad
sbb
jnp
cmc
pusha
fstpt
push
or
cwtl
mov
lock
icebp
je
aaa
std
movsl
mov
sbb
pop
push
add
shll
and
inc
and
cmp
jl
in
sub
pushf
sti
in
mov
push
fstpt
enter
fistpll
std
and
mov
outsl
dec
push
mov
dec
sbb
jl
fistpll
stos
out
dec
inc
fcompl
fwait
mov
jnp
cmp
mov
add
dec
out
inc
push
in
bound
mov
outsb
inc
arpl
rorb
ret
int
popl
push
add
jl
int
jns
jle
cli
add
popa
ror
pop
jns
jnp
in
fucom
loop
ljmp
or
mov
andb
rcrl
xor
mov
push
xchg
jbe
sbb
test
or
or
add
ffreep
cmpsl
jg
test
popf
movsb
xorl
xchg
stos
dec
dec
pop
add
aam
inc
pop
xor
cmp
xor
adcb
dec
inc
add
inc
mov
add
cmpsb
cmp
jb
sbb
cltd
insb
fdivrl
sarl
pusha
lock
sub
nop
ja
in
bound
jne
jmp
xor
adc
lret
or
outsb
out
rolb
jno
sub
sti
gs
dec
dec
add
pop
cli
into
fdivrl
outsl
movsb
adc
xchg
lret
gs
jne
aad
ja
ljmp
into
gs
lcall
scas
mov
adc
sub
rcl
test
sbb
mov
test
loop
sbb
xor
sbb
pop
fdivs
sti
sti
push
dec
movsb
iret
pop
xchg
sahf
cmp
dec
leave
cmpsl
iret
or
stc
mov
fwait
and
push
mov
cmp
sub
or
xor
adc
jne
inc
push
mov
push
sbb
fwait
xchg
pop
movaps
ret
pusha
mov
mov
mov
ds
loopne
movsl
jge
mov
mov
leave
insl
outsl
mov
sbb
shll
cmp
sub
inc
fdiv
testb
mov
mov
pop
jmp
stc
dec
vshufps
pushf
mov
add
punpcklbw
xchg
jg
mov
mov
pop
clc
jle
add
gs
dec
pop
dec
pop
mov
adc
cmp
cmp
sub
repnz
test
or
mov
xchg
into
movsb
adc
nop
jns
sahf
les
jl
in
jae
jmp
xor
lret
adcb
test
push
push
mov
enter
aas
xchg
ja
cwtl
adc
jge
pop
insb
sub
fsubl
cld
mov
xchg
loop
test
out
addr16
mov
jb
xor
push
and
pop
popf
in
cmp
jg
leave
aaa
mov
xor
cmpsb
jp
dec
popa
into
imul
lods
and
push
push
pop
arpl
xor
mov
test
test
adc
idivb
movsl
pop
mov
mov
fildl
jle
jno
cltd
pop
ret
pop
mov
rcrb
mov
mov
pop
jno
cmc
leave
ret
mov
stc
sub
xor
fs
loopne
stos
xor
imul
inc
push
pusha
dec
call
xchg
in
setns
pop
fildll
mov
cli
xlat
mov
mov
mov
jl
jp
mov
push
pushf
iret
xchg
test
sti
mov
stos
popa
and
or
btr
mov
jp
pushw
and
jae
xchg
popf
mov
cltd
mov
push
push
mov
push
add
mov
rorl
aas
lahf
pop
movsl
ss
sub
inc
inc
cli
cmpl
sbb
cmc
sub
add
xchg
jne
dec
ljmp
xchg
jle
fcompl
xor
nop
xchg
dec
adc
mov
xchg
lahf
mov
dec
in
shrl
add
cmpsl
pop
dec
sbb
jle
mov
add
mov
push
ficoms
jle
ffree
addr16
test
ret
aad
jae
sub
jbe
and
mov
xlat
pop
clc
mov
adc
jp
jae
cmp
arpl
jnp
test
leave
lcall
jb
sti
adc
sub
push
insl
mov
lret
mov
adc
pop
fstpt
add
and
or
push
cli
fs
and
or
jno
ror
cld
into
push
lods
add
mov
sub
jmp
adc
fwait
sti
mov
lock
or
cmp
nop
daa
outsb
cmpb
fdivr
and
sbb
push
fimull
add
mov
outsb
test
in
xor
int3
icebp
ds
sbb
mov
push
jecxz
push
sbb
dec
roll
repnz
pusha
xchg
lock
and
ret
mov
inc
data16
dec
fwait
and
cwtl
xor
test
add
fisubrs
mov
mov
cmpsl
lret
lods
ret
push
xchg
jae
jnp
orb
cwtl
repnz
cmp
pop
cmp
negb
mov
lods
sub
xor
sbb
cs
call
movsb
lock
sbb
push
dec
jl
adc
or
or
push
mov
mov
lcall
mov
inc
mov
insl
add
nop
and
in
cltd
jne
divb
fwait
call
xlat
int
sub
out
cmp
mov
adc
cwtl
xor
lods
lock
cwtl
jge
lods
sbb
push
pop
test
pushf
cmpsb
inc
aam
test
pushf
daa
jl
popa
insl
call
shll
jae
ja,pt
jb
icebp
bound
test
sub
std
mov
push
add
shl
pop
and
adc
jb
xor
mov
test
jg
mov
out
shld
xchg
repz
mov
add
cmpsl
sub
pop
push
push
bound
out
and
stos
dec
sbb
aaa
cmp
push
and
loopne
or
clc
pop
pop
xlat
cmp
iret
mov
jle
les
sub
test
fnsave
mov
xchg
out
loop
add
mov
adc
icebp
cmp
cmp
sub
sub
mul
mov
pop
add
cmc
xor
shrb
push
cmp
sub
loope
pop
nop
mov
lock
xchg
mov
loope
loope
or
aad
lods
or
outsl
add
mulb
cmp
mov
faddl
sub
mov
mov
dec
ljmp
ljmp
negl
mov
pusha
pop
lret
dec
sbb
mov
jb
push
jl
or
lds
jno
stc
push
inc
dec
ljmp
or
pop
or
sbb
adc
sbb
push
mov
fsubp
bound
adc
test
cmpsl
xor
rolb
mov
xchg
stos
rclb
scas
xlat
mov
inc
push
add
sub
jae
sub
loopne
scas
mov
fldenv
push
lret
sub
rorb
push
xor
lcall
sub
jne
xor
cmp
ss
jnp
pop
ret
fwait
jo
or
dec
sahf
push
outsb
pop
mov
out
insl
ja
pushl
push
cld
enter
and
xchg
frstor
mov
jbe
jge
sub
mov
jmp
or
jge
jb
push
and
repnz
or
or
aad
jae,pn
mov
mov
xor
inc
push
pusha
jle
pusha
sbb
mov
jmp
adc
dec
fwait
sub
mov
or
jae
inc
mov
aam
ret
jbe
or
gs
pop
addr16
dec
xchg
cmp
dec
and
aas
rcrb
xor
add
bound
mov
fistpll
sub
mov
pusha
aam
and
shll
rcl
mov
jb
enter
outsl
arpl
std
js
call
sti
sbbb
test
push
xchg
mov
cmp
data16
jl
icebp
hlt
pushf
push
or
push
sbb
mov
in
push
jmp
stos
pushf
jne
cmpsb
scas
inc
push
ljmp
mov
sti
mov
mov
sub
icebp
mov
sub
jmp
pop
nop
adc
adc
adc
aad
or
mov
hlt
mov
sti
adc
push
push
cld
lods
arpl
jns
iret
fldenv
iret
xor
shlb
lods
sbb
out
adc
data16
pop
loope
or
jno
loope
int
jl
jbe
pop
add
fisubs
jge
xchg
ret
mov
shrl
adc
pop
int
mov
movsb
xor
jae
fcomps
cmp
and
aam
jle
inc
lods
push
jmp
sub
inc
fdivl
popa
sbb
int
mov
lret
jbe
mov
inc
sub
rorb
pop
imul
or
mov
daa
fistps
aam
mov
xlat
mov
adc
xor
mov
mov
inc
dec
inc
jecxz
push
jns
lret
jg
ficoms
inc
pop
inc
jge
mov
jbe
add
mov
pop
movsl
jmp
or
dec
mov
fsubrp
pop
inc
add
gs
adc
scas
roll
dec
fisubrl
push
imul
push
addl
ficoms
mov
into
jecxz
mov
rcr
or
xchg
dec
cmp
or
addr16
pop
pop
dec
sbb
cmp
or
xor
lods
dec
pusha
test
sarb
push
addr16
mov
sub
sub
push
es
mov
out
sub
jnp
pop
jmp
or
in
mov
fldenv
lock
inc
sub
popa
xor
in
cmpsb
push
repnz
xchg
jbe
pop
dec
into
cmp
dec
adc
ja
sub
stos
adc
test
loope
call
cmp
mov
ljmp
leave
repz
lret
dec
mov
dec
pop
mov
and
int3
mov
pop
outsb
hlt
stos
test
cmp
push
jno
push
das
mov
imul
into
jb
sub
adc
dec
dec
lahf
push
stc
xchg
es
sbb
popf
adc
cmp
mov
jle
lcall
dec
es
test
xchg
es
divl
fnstenv
cmp
mov
mov
iret
cmp
lcall
sbb
dec
enter
lret
pushf
mov
or
jecxz
je
mov
cld
int
xor
cmp
cmp
loopne
pop
mov
jno
xchg
test
add
push
push
inc
add
sarb
cmovns
jns
insb
pop
xchg
sub
sub
hlt
push
and
jecxz
shrb
or
or
push
imul
jmpw
xor
add
lods
sbb
sbb
mov
mov
cli
stos
dec
mov
mov
jns
lods
pop
stos
out
jge
lods
daa
sbb
mov
pop
push
je
jb
xchg
fcoml
inc
int3
xchg
div
test
hlt
subl
loopne
xchg
ljmp
pop
rorb
cmp
sbb
push
pusha
loop
adc
data16
adc
test
sbb
pushf
adc
or
mov
rcll
aas
xor
pushf
pop
clc
mov
mov
adc
outsb
int3
out
pop
xchg
dec
imul
hlt
js
add
out
pop
xchg
dec
fnstsw
test
orl
jno
fcoms
inc
mov
addl
mov
jo
mov
ss
cld
push
mov
imul
repnz
jbe
lret
mov
loopne
xchg
ds
fcoms
in
cmp
push
mov
je
cmp
xor
cmp
sahf
pop
cs
inc
int3
pop
and
pop
mov
inc
xor
cmp
sbb
repz
add
jae
call
or
cltd
fcmovb
mov
sbb
fs
cltd
inc
cmpsl
jne
inc
loopne
jecxz
sub
xor
aas
mov
out
cmp
test
pop
lahf
lods
fucom
adc
fisubrs
fnstcw
mov
scas
cmp
dec
ret
ds
ss
lcall
mov
cmp
hlt
out
aam
ficoms
shl
movsl
push
les
sbb
or
cwtl
pop
pop
jno
jecxz
jecxz
xor
add
fildl
inc
mov
aam
sarl
adc
inc
pushf
sbb
nop
lods
out
inc
or
int
out
xchg
lods
jns
push
xchg
mov
mov
test
pop
xchg
push
pop
mov
mov
xor
cmp
pushf
cwtl
push
and
pop
loop
das
incb
mov
mov
repz
in
aam
xchg
jp
sub
jo
stos
stos
movsl
cmp
mov
decb
outsl
lret
mov
scas
adc
fwait
mov
out
fwait
jo
add
inc
dec
add
mull
mov
rcl
shl
dec
add
mov
out
mov
xorb
loope
sti
jae
mov
movsl
xchg
stos
repnz
in
mov
mov
in
jl
push
jmp
xor
in
jge
inc
clc
mov
in
adcb
push
mov
inc
push
xor
push
addr16
js
sbb
mov
insl
jb
imul
xchg
pop
notb
fdivrp
divl
dec
repnz
andl
jnp
and
fnstenv
gs
push
stos
subl
sbb
mov
inc
enter
in
in
out
dec
cld
or
in
mov
ret
dec
push
adc
data16
sbbl
lds
daa
je
cmp
mov
loopne
aas
dec
jg
sti
xor
cmp
jo
sbb
les
push
movsl
out
cmpsl
sbbb
xchg
mov
scas
shr
icebp
cmp
push
out
ret
ljmp
push
lods
xchg
and
jp
push
mov
stos
jbe
inc
inc
jp
add
fisttps
mov
sbb
adc
mul
push
test
cmpsl
aaa
in
jbe
les
inc
pop
mov
cs
dec
imull
push
sub
xlat
and
call
cmc
movsb
lock
adc
mov
add
mov
or
ret
or
iret
xchg
inc
cmp
inc
imul
stos
mov
mov
cld
adc
fstpl
testl
popf
rcll
mov
or
mov
aam
xlat
or
daa
mov
rep
xchg
fsubl
fidivrs
jbe
add
das
les
mov
xor
sbb
mov
aam
mov
fistpl
lods
mov
sti
jnp
pop
add
xlat
cli
fidivs
movsl
cltd
and
iret
out
imul
aaa
inc
pop
fdivrp
out
jecxz
bound
pop
jp
pop
inc
or
and
and
sbb
and
stc
repz
or
lock
mov
and
jle
stos
jbe
das
add
inc
outsl
das
jo
mov
add
js
pop
subb
lea
stos
or
dec
and
js
scas
lods
ja
add
jmp
fwait
xchg
xchg
sarl
sub
mov
lods
mov
cmp
cwtl
mov
mov
mov
fbstp
xlat
jg
mov
xor
inc
lods
mov
mov
pop
xlat
lds
add
adc
push
scas
lds
adcl
hlt
and
fildl
and
xchg
cmpsl
push
mov
movsl
xor
cmp
stos
inc
jl
dec
rorl
les
test
mov
push
fcmovnu
push
fcmovb
hlt
sti
movsb
sub
fmuls
out
mov
push
cmp
ret
add
iret
pushf
lea
test
pop
jmp
inc
leave
inc
add
cli
sub
cltd
dec
xchg
inc
xor
dec
in
add
dec
push
std
pop
repnz
dec
xchg
or
int3
pop
lea
push
loope
rolb
sti
lcall
hlt
or
pusha
int3
mov
sahf
mov
lods
clc
pop
mov
mov
clc
ljmp
xor
jg
mov
add
mov
jl
fdivs
movsb
mov
clc
mov
dec
mov
pusha
bound
ret
push
xchg
testl
mov
push
dec
es
fnsave
adc
ret
cwtl
cltd
out
push
pop
adc
pop
xlat
jb
lret
jne
jg
scas
inc
daa
mov
fwait
push
adc
jbe
ljmp
adcb
push
xor
push
iret
mov
jg
mov
cmp
mov
iret
jno
out
jl
cs
xor
cmpsl
and
cltd
shll
cs
inc
mov
sar
dec
rorl
ffree
cmp
shll
lds
fldcw
sbb
std
testb
std
dec
xor
lcall
rorb
ljmp
sub
jmp
fistl
push
into
jge
or
or
stc
arpl
into
ja
pop
sbb
es
sarl
shll
and
jge
insb
push
mov
clc
aam
cmp
insb
push
gs
inc
sbb
mov
ja
mov
push
push
push
pop
xchg
loope
jns
mov
es
xchg
enter
push
bound
xor
insl
push
shlw
cmc
cmpsl
push
dec
mov
lret
dec
fbld
mov
sub
popf
sub
sub
in
dec
leave
lret
scas
mov
clc
push
faddp
adc
das
pop
dec
push
jmp
pop
movsl
hlt
outsb
adc
cmp
mov
arpl
mov
out
mov
andl
inc
sbb
cmpb
add
jge
sahf
push
or
jbe
repz
mov
fisttpll
iret
mov
scas
fwait
cmp
testl
push
mov
pop
adc
daa
push
test
sbb
out
mov
test
lret
int
lea
jp
movsb
aad
xchg
sbb
sbb
cli
lahf
mov
mov
outsb
lods
mov
rolb
repnz
add
loope
lock
and
xchg
out
call
in
pop
and
cmc
dec
dec
icebp
and
pop
dec
pop
call
mov
cmp
jecxz
es
push
pop
movsb
les
hlt
cli
dec
inc
cmc
push
movsb
stos
lret
ret
aad
or
scas
mov
adc
jecxz
xchg
xor
xchg
aam
jnp
cmp
xchg
cs
mov
jge
pop
fldenv
and
push
jns
or
loope
and
xchg
in
fs
ud2
stc
shrl
xor
push
scas
test
sbb
jns
and
mov
scas
sbb
adc
out
lret
push
sbb
sub
insb
shll
fimull
or
pop
inc
out
insl
dec
cs
in
jg
dec
iret
push
adc
and
xchg
mov
xchg
jecxz
divl
das
lods
sbb
mov
sahf
xlat
jp
pop
xor
cmp
inc
andl
inc
ja
mov
mov
jg
mov
dec
adc
mov
add
mov
int
insl
xlat
push
sarl
push
pop
sbb
mov
mov
mov
cs
mov
dec
mov
cmp
repnz
xchg
enter
push
imul
andl
in
lret
jne
fmull
pushf
and
xor
out
cmp
inc
stos
loope
cmc
icebp
shrl
fstps
loop
xchg
xor
push
movsl
sbb
lahf
sbb
loop
pop
shlb
mov
int3
outsb
cli
add
in
mov
push
jno
mov
push
aas
mov
lods
imul
pop
mov
popf
sub
pop
add
mov
jae
cli
fbld
jne
popa
mov
icebp
pop
jnp
in
jo
push
je
pop
daa
into
fsqrt
cmp
push
arpl
popf
movsl
cmp
mov
pushf
cli
push
push
imul
xor
lret
data16
repnz
fiaddl
fidivl
inc
fwait
insl
lret
sbb
dec
cli
sub
mov
or
and
sbbl
sbb
popa
data16
fimull
icebp
aam
lcall
in
popf
adc
cmp
fldl
and
lcall
stos
scas
mov
ljmp
or
enter
push
test
or
lock
pop
lea
pop
lds
cmc
adc
out
divl
pop
cld
pop
mov
push
sti
add
jne
push
xchg
into
cmpsb
bound
push
mov
mov
adc
cli
lock
sarl
or
rclb
subb
negb
popf
in
out
andb
add
or
adc
mov
xor
test
cmc
mov
push
and
js
arpl
sti
imulb
test
and
dec
lret
ret
adc
out
imul
cs
jl
inc
push
xor
sub
jle
inc
ja
lret
pop
sub
das
decl
arpl
adc
or
hlt
popa
or
std
sub
lcall
in
sub
ljmp
xchg
dec
add
int3
cmp
sbb
idivb
adc
insb
or
push
sti
mov
dec
mov
mov
or
or
xchg
pop
enter
cs
xchg
movsl
xchg
cwtl
out
outsl
jno
push
int3
inc
cmpsl
jle
mov
mov
add
idivb
les
xchg
push
cmp
imul
xchg
jp
ja
xor
lahf
jae
int
adc
sbb
fistl
scas
in
xchg
loopne
mov
dec
inc
enter
fs
movsb
jg
inc
and
xchg
mov
xchg
loope
std
dec
ja
pushf
cld
hlt
call
lahf
sar
add
scas
xor
push
cmpsl
mov
cmp
push
cwtl
push
sbb
mov
push
or
call
out
inc
push
jg
add
and
dec
rorl
gs
into
out
test
popa
insb
inc
imul
adc
ficoml
imull
popw
adc
subb
mov
ja
and
aad
pop
outsb
dec
xchg
cmp
pop
lds
or
lcall
push
sbb
vpshufhw
pop
push
outsb
xor
cltd
xor
mov
cld
imul
scas
mull
pusha
cmpsb
pop
xchg
imul
aaa
or
lea
adc
dec
add
int
cmc
jo
xchg
jecxz
add
icebp
add
mov
icebp
mov
push
fcomi
adc
inc
aad
lods
dec
leave
shll
push
enter
lods
push
mov
jmp
push
ljmp
fwait
mov
and
ret
xor
stc
stos
jbe
jp
stos
sbb
je
test
mov
fildl
push
popa
push
cmpb
movsb
cld
inc
push
xchg
jmp
std
mov
jg
decl
and
xchg
incb
pushf
mov
loopne
pop
decb
or
cmp
int3
xchg
scas
add
je
dec
out
mov
test
aas
cli
xchg
aaa
in
sub
insb
cmpl
sbb
dec
jg
cld
scas
cmp
imul
pop
jl
cmpsb
out
mov
int3
pop
xchg
mov
lods
inc
sbb
idiv
movsb
push
into
and
addl
mov
xor
ss
sub
mov
rcr
ja
mov
mov
inc
or
push
test
or
xchg
mov
pusha
orl
or
ljmp
jmp
jp
pop
idivl
inc
fmuls
loop
or
test
mov
pop
adc
int
push
enter
andb
pop
or
fistl
sahf
mov
repnz
cmpsl
lea
xchg
out
dec
cmp
sbb
out
jb
shrb
in
imul
xorl
cli
aas
mov
pop
inc
jno
sub
in
std
push
cmp
dec
ret
loope
sbb
ror
add
out
loopne
adc
pop
sub
jmp
push
shl
xlat
sbb
fildl
out
movsl
sahf
adc
and
sahf
xorb
mov
repz
adc
imul
or
fs
sub
ds
shll
mov
jbe
nop
mov
cmp
add
aaa
aas
aaa
lds
and
mov
ds
xor
xchg
or
mov
or
sbb
sbbl
sbb
jns
outsl
jl
add
imull
sub
call
insl
adc
fwait
in
pushf
sub
out
jae
mov
pop
fldl
xchg
dec
push
cltd
dec
icebp
aad
or
mov
mov
mov
mov
movsb
xchg
mov
add
jle
andb
push
pop
dec
pop
xor
loop
insb
movsl
pop
ss
or
adc
ret
aas
push
dec
lret
fadd
inc
push
cmpl
les
inc
push
dec
mov
notl
jp
sub
imulb
adc
dec
or
frstor
scas
xchg
sarl
test
fadds
or
xor
movb
imul
ret
mov
sti
sbb
mov
or
lret
lret
lea
mov
rcll
test
shlb
xlat
inc
jbe
mov
int
scas
push
dec
inc
idivb
push
cs
mov
inc
xchg
mov
xor
jne
xchg
pop
and
sbb
jbe
hlt
cmp
add
ret
add
jg
test
les
jo
fs
cmp
xor
push
test
rolb
fwait
jae
sub
stos
inc
add
and
jno
push
cmp
lock
cwtl
mov
inc
into
mov
jbe
add
dec
mov
int
inc
dec
jb
or
icebp
add
cld
and
arpl
in
lock
repnz
dec
adc
je
hlt
imull
hlt
cmpsb
scas
bound
sub
testl
cli
pushl
fstps
mov
jg
cli
push
sbb
dec
cmpl
fimuls
jo
jge
jno
imulb
and
pop
sbb
add
mov
adc
dec
and
iret
in
sub
jae
push
and
outsl
ds
sbb
fsubrs
and
and
push
cmpsl
ljmp
hlt
push
cltd
jg
dec
lret
xor
call
dec
xchg
mov
lods
cmpsl
xor
mov
pop
lcall
js
insl
mov
ret
xchg
pop
adc
mov
popf
stos
sbb
mov
das
cmp
pop
pop
repnz
mov
xchg
or
mov
inc
or
xchg
xor
scas
dec
stos
jmp
mov
xchg
xor
inc
xchg
inc
lret
addl
lcallw
decb
inc
xor
dec
xor
negb
jl
in
pushf
vmread
cmp
inc
cld
dec
push
out
fisubl
mov
dec
js,pn
jo
and
aaa
push
ja
sbb
xchg
add
into
pop
pushf
pop
sub
jne
test
mov
sbb
push
or
add
dec
gs
adc
sahf
add
sub
xchg
outsb
and
das
lea
xor
adc
adc
xor
lret
xor
lret
dec
add
iret
push
fists
jp
mov
add
mov
ret
xor
movsb
sub
push
insb
stos
iret
jp
xchg
add
es
fcompl
xor
xchg
lret
lods
call
jmp
inc
jmp
shrl
scas
lcall
aad
das
leave
insl
movsb
mov
lcall
les
in
xchg
inc
jp
cltd
rcr
stos
icebp
xchg
dec
fisubrl
dec
pop
sbb
mov
push
clc
jb
and
shll
inc
and
xor
sub
pusha
iret
dec
inc
out
data16
jp
pop
stc
cmp
ja
clc
imulb
xor
daa
mov
adc
test
mov
ja
cs
mov
nop
test
mov
loop
ret
es
sbb
mov
pop
pop
lods
add
sar
lret
js
loope
mov
add
mov
outsl
jl
mov
mov
stc
push
fisubl
cltd
ret
adc
xlat
adc
xchg
push
cmp
mov
fs
cmp
jle
cmp
or
fdivrs
add
or
mov
xchg
fmulp
sbb
faddl
mov
testl
pop
sub
imul
fs
sub
test
sub
sti
imul
ret
sbb
jg
mov
adc
sbb
pop
pop
add
push
cmc
shrl
pop
icebp
jge
fisubl
add
sbb
sub
sub
test
ret
add
mov
das
dec
fs
and
and
sub
test
mov
call
aam
inc
addb
je
shlb
test
cltd
jae
inc
xchg
xchg
inc
or
std
fidivrs
lret
add
scas
insl
sub
and
ret
mov
cld
insb
fsubl
pop
shlb
insl
and
pop
fwait
push
pop
repnz
xor
xor
mull
test
int3
inc
push
outsl
sbb
xchg
push
pushl
test
jge
push
fnsave
add
dec
mov
test
and
push
mov
dec
push
mov
mov
fidivrs
pop
loop
fidivl
mov
mul
push
mov
mov
jmp
adc
xchg
ret
mov
rcl
hlt
inc
mov
lock
dec
popf
out
sarl
out
stos
mov
mov
inc
mov
pop
push
xor
mov
outsl
jne
out
lret
insb
dec
jl
out
insb
inc
dec
nop
xchg
sbb
jmp
pop
mov
pop
lock
movsl
imul
dec
aaa
imul
adc
mov
cmp
ror
movsl
push
adc
cmp
push
orb
inc
xor
enter
sbb
loop
and
pop
adc
sbb
adc
xor
xor
or
or
lcall
sub
daa
dec
outsb
pop
test
sub
or
lcall
lods
sub
and
lock
imul
sbb
fisubl
sub
jbe
repnz
ret
hlt
jg
jns
inc
test
std
lret
push
aas
sbb
sbb
push
data16
mov
cli
aaa
add
pop
outsl
adc
jmp
arpl
lods
insb
mov
dec
or
leave
in
data16
dec
jecxz
inc
adc
sbbb
sar
fstps
wbinvd
jne
or
int3
dec
dec
mov
pop
sbb
xbegin
cmpsb
jb
push
pop
push
pop
les
daa
mov
imul
mov
loop
push
loop
aas
cmp
mov
mov
addb
jp
jae
xchg
lret
imul
mov
cmp
stos
mov
stos
pop
sbb
add
pop
shrl
mov
mov
push
cmp
inc
push
adc
mov
mulb
in
xor
inc
pop
cmpsl
or
add
out
inc
cmp
mov
gs
in
rorl
nop
adc
test
add
push
ficoml
sbb
or
cmc
mov
loop
or
pop
xchg
movsl
lcall
xchg
xor
add
mov
cmp
in
cs
inc
ss
xchg
orb
adc
jp
inc
cmp
jmp
scas
scas
outsb
int3
int
mov
and
sbb
fs
cmp
jmp
scas
pop
or
push
inc
ja
mov
mov
mov
inc
mov
ss
sbb
mov
sarb
mov
jo
add
or
arpl
nop
pop
nop
add
mov
push
shll
fdivrl
mov
imul
mov
out
lds
dec
inc
fwait
xor
pop
stc
mov
push
jo
pop
stos
ss
xor
out
scas
repz
emms
dec
rorl
push
sub
cmpsb
and
cmpsl
jge
cmp
and
pop
shlb
xchg
pushf
mov
cltd
inc
sub
xchg
pop
icebp
xor
out
pop
dec
je
add
out
add
xchg
mov
push
into
sbb
fnstenv
sbb
repz
sahf
loopne
out
lcall
ret
inc
pop
and
xchg
pop
out
cltd
pop
popa
or
fildll
jle
scas
dec
bound
cmpsb
lods
fs
lcall
and
adc
push
test
arpl
xor
adc
movsl
fcoms
mov
inc
fdivs
out
push
test
push
push
lret
mov
or
cld
xlat
icebp
insl
and
sub
sbb
pause
mov
mov
pop
mov
repz
add
fdiv
push
and
push
inc
push
dec
dec
dec
inc
leave
mov
jno
jae
jecxz
pop
xor
imul
add
lods
cmp
and
aaa
jnp
inc
in
adc
add
scas
xor
testl
daa
xor
lret
mov
adc
loope
inc
out
dec
addr16
mov
cmp
jae
in
repnz
insw
loope
jns
cltd
cli
fcomi
dec
scas
imul
mov
mov
sub
je
add
lret
add
jae
fwait
sub
push
pop
in
subl
and
cmc
mov
mov
xchg
mov
hlt
insb
xor
aam
es
jmp
stos
pop
test
inc
les
sbb
mov
pusha
adc
xor
xchg
mov
jmp
mov
xor
out
mov
mov
cmpsb
cmp
or
outsb
fnsave
fsub
inc
jmp
jecxz
sub
mov
popa
je
xchg
inc
mov
or
dec
scas
cmp
out
xor
jb
jne
imul
lea
cmpsl
xlat
jg
ljmp
gs
hlt
pop
pop
pushf
or
clc
cmpsl
aad
cmpsb
dec
lret
mov
mov
popf
dec
push
aas
mov
sbb
test
and
push
mov
push
jge
xchg
mov
and
gs
out
pop
mov
lret
subl
je
push
sub
aam
adc
int3
dec
jmp
mov
out
or
cmp
jno
jbe
insl
test
xlat
mov
iret
mov
add
pop
adc
ljmp
push
pop
mov
std
mov
adc
outsl
cmp
or
pop
fs
loopne
fcom
push
xor
xchg
xor
iret
jnp
mov
pop
jl
mov
icebp
leave
fldl
add
ret
repnz
orl
popa
shlb
pushf
jecxz
out
ljmp
nop/reserved
in
iret
mov
sbb
mov
inc
cmc
pop
fldcw
icebp
jb
push
ret
xor
repz
sub
and
fisttps
mov
cmp
call
mov
mov
idiv
sub
or
sub
add
inc
daa
mov
dec
or
dec
xor
cs
mov
ljmp
xor
push
pop
mov
sbb
in
push
arpl
bound
sub
push
dec
fcmovnu
popa
pop
xor
cmc
pushf
push
cmp
imul
int3
cmpsl
stos
data16
mov
adc
jnp
into
pop
sub
sub
sub
dec
dec
ficomps
imul
sti
sbb
test
into
add
mov
ljmp
mov
push
imul
popf
mov
rorl
mov
push
cmp
into
subb
shl
pop
dec
hlt
cmc
adc
out
jmp
jae
lds
icebp
add
sub
repz
cli
jl
sbb
push
and
sti
and
lcall
call
aad
jle
stc
adc
cmp
mov
xor
fpatan
sahf
xorb
xchg
daa
xor
bound
daa
fdivr
xorb
mov
pop
out
and
cltd
dec
push
xchg
es
jns
cmpsb
mov
inc
pop
std
pop
icebp
xor
or
pop
mov
cmp
repnz
mov
emms
xor
mov
test
xor
xchg
xor
hlt
add
sbb
ss
and
mov
add
lods
bound
inc
xor
aam
xchg
lods
jnp
xor
dec
xchg
ficoms
or
shrl
push
sub
add
lds
sarb
inc
fildll
mov
pop
jo
cmc
add
sbb
mov
lods
sub
xor
pop
stos
xchg
push
push
in
pop
leave
mov
xor
mov
dec
lret
lods
push
rclb
cld
popf
push
add
test
mov
jp
rorb
mov
pusha
mov
in
into
fs
adc
clc
idivb
and
adc
es
test
sub
and
fwait
mov
ret
pop
fcmovu
dec
mov
or
imul
sub
push
sarl
pop
inc
rcl
idiv
add
pop
test
adc
lock
inc
pusha
clc
pop
loop
mov
mov
mov
mov
inc
out
xchg
call
outsl
idivl
mov
sub
lret
outsb
xchg
xchg
lods
push
jae
cltd
rclb
dec
and
and
push
scas
aas
mov
pop
lret
imul
mov
jb
push
xchg
adc
jmp
es
loopne
adc
jg
into
jae
lcall
cli
popf
ret
dec
cltd
adc
pop
pushf
fildl
scas
repnz
xchg
pop
jl
out
and
fldcw
pop
or
sbb
jge
mov
clc
int
mov
mov
xor
insl
jle
mov
nop
std
and
or
push
ret
icebp
insl
in
cmpsl
sbb
test
sub
lods
dec
ficoml
insb
lea
xor
cs
out
mov
adcb
lahf
sbb
push
mov
mov
jmp
jmp
dec
leave
es
lock
sbb
ja
jg
mov
hlt
mov
loop
xor
mov
xchg
mov
cmp
pop
pop
sbb
jecxz
stos
pop
jnp
in
std
repz
cli
js
sarl
rcrb
adc
fsubrp
mov
loope
lret
add
inc
shll
add
mov
popf
pop
sarb
loop
xchg
or
mov
push
mov
cli
sbb
dec
sbb
xor
cmp
pop
pop
mov
add
das
addr16
jno
leave
out
js
inc
inc
cmpsl
or
add
pop
std
stos
fwait
pop
test
movsb
sub
ja
test
in
jae
jl
cs
jns
pop
mov
and
sbb
push
sbb
sahf
cmp
in
cmp
mov
scas
push
dec
or
ret
popl
inc
dec
into
and
mov
mov
lods
add
scas
mov
fcoml
rorl
ss
dec
jp
fimull
inc
xorl
je
push
pop
test
scas
cmp
xchg
sbb
mov
aam
inc
add
ret
inc
nop
pop
hlt
sbb
fwait
xchg
add
add
push
mov
outsb
mov
cmp
and
ret
push
mov
test
arpl
jo
push
dec
leave
jns
fsubrl
imul
into
insb
push
ja
inc
xchg
cltd
push
inc
sub
pop
in
cmpl
xchg
insl
loop
sbbb
stos
out
out
sub
jmp
in
mov
mov
and
add
or
xchg
jp
add
leave
push
cmp
pusha
mov
xor
xchg
gs
pop
sti
bound
and
test
insb
adc
mov
jnp
or
mov
int3
mov
cld
pop
insl
pop
push
push
sub
inc
mov
dec
lret
inc
es
add
fstp
pushf
or
dec
movsl
xchg
stos
jp
jb
and
ja
cld
pop
jg
shrb
xchg
mov
pavgw
cmc
cmp
jg
adc
jge
and
inc
daa
cmp
mov
mov
jg
fisubl
mov
jle
sbb
mov
gs
out
addr16
push
pushf
push
mov
in
pop
xchg
mov
lret
dec
in
call
std
adc
lret
add
mov
xchg
pop
cmpsb
and
cmp
sub
ficoms
clc
and
sub
iret
out
or
push
xchg
call
pop
mov
jno
pop
mov
and
out
sbb
push
add
imul
leave
stos
mov
hlt
js
sbb
aam
push
jae
sbb
xor
xlat
cli
jbe
fstpt
mov
xchg
cmpsb
or
pop
insb
mov
cmp
rcrb
sbb
adc
jmp
subl
mov
leave
sub
mov
sub
cmc
adc
inc
lds
and
cmp
mov
scas
out
cwtl
push
sub
loop
or
lods
push
inc
pop
repz
icebp
xor
ljmp
jae
int
test
shl
sub
in
xchg
lds
mov
gs
inc
xor
sub
add
sbb
push
inc
inc
mov
outsl
rorb
in
fbstp
xor
mov
mov
adc
add
test
aam
popf
ret
adc
leave
add
out
out
pop
stos
push
xor
cmpsl
dec
xor
jp
mov
xor
loopne
inc
and
loop
xchg
in
and
mov
shlb
xchg
xchg
push
add
cmp
mov
jecxz
mov
neg
repz
xchg
outsb
xchg
inc
lahf
mov
lea
lret
bound
ljmp
or
jo
push
pushf
mov
out
cmp
je
outsl
outsb
iret
leave
jnp
les
sahf
lods
push
mov
scas
adc
adc
cwtl
fcmovb
push
lahf
out
xor
add
enter
mov
pop
pusha
clc
mov
add
cmp
and
pop
sub
orb
loopne
mov
nop
pop
cwtl
lods
pop
les
mov
int3
and
sub
push
mov
jecxz
cmp
xor
icebp
push
fidivrl
stc
scas
sbb
lahf
jne
xor
jns
outsl
push
cmpsb
pop
inc
mov
imulw
out
mov
jl
scas
idivl
mov
gs
mov
sub
adc
rorb
mov
adc
xor
adc
scas
fxch
fsub
jne
inc
in
inc
or
adc
and
dec
and
add
ljmp
test
ret
pusha
mov
xlat
and
outsb
lods
cli
mov
mov
pop
popa
cmp
enter
dec
fwait
adc
push
push
pushf
push
xlat
roll
repz
mov
popf
jns
pop
jo
push
sub
lcall
lods
pop
push
or
and
xor
sbb
sub
add
sub
jo
pop
sbb
dec
in
xor
xchg
popa
ds
adc
push
outsb
push
jbe
cmp
out
insb
cmpsl
out
and
cmpsb
fstps
icebp
cwtl
shrb
in
mov
lock
xchg
mov
add
lods
test
mov
or
add
sbb
jp
ljmp
dec
lods
imul
jp
lahf
cld
cwtl
pop
and
dec
pop
test
or
xchg
and
insl
sbb
pusha
jmp
jno
lods
sar
or
mov
sbb
pop
mov
cli
aaa
sbb
bound
inc
jmp
notl
mov
mov
cs
aaa
mov
int3
sub
jle
lret
jg
add
jge
inc
cmp
xchg
into
enter
and
pop
add
push
cmp
add
mov
outsl
add
inc
mov
mov
repnz
push
icebp
lock
dec
call
popa
mov
repz
ss
sub
or
test
shlb
gs
push
into
mov
call
mov
in
movsb
addr16
push
inc
mov
jge
fists
jecxz
jge
loopne
iret
lahf
outsl
push
add
xchg
out
mov
lds
jp
mov
mov
adc
outsl
mov
jle
mov
loop
std
adc
mov
ret
jg
or
mov
test
test
jae,pn
in
xor
lea
std
outsl
cmp
add
xor
push
pop
and
cmp
push
xchg
ss
shl
movsb
test
out
icebp
xchg
out
adc
loop
inc
ret
or
xchg
dec
dec
movsb
icebp
inc
mov
jge
sbb
xchg
xor
pop
sbb
adc
sub
lret
mov
out
lret
sbb
xchg
fisttps
dec
add
lds
in
mov
fsubs
fidivrl
insl
xchg
jge
and
mov
mov
aaa
adc
jmp
lods
xor
mov
incl
dec
jle
jbe
sbb
imul
mov
jl
dec
aas
xchg
fldcw
test
and
add
movsb
or
fwait
pop
push
jge
ljmp
es
dec
sub
mov
mov
out
mov
xor
xlat
pop
and
mov
sti
lcall
lods
lock
fldenv
int
lret
mov
sbb
jecxz
aam
inc
lods
out
popl
scas
jbe,pn
mov
sbb
cmpsl
iret
and
inc
mov
adc
pop
mov
jae
xor
sbb
mov
mov
cmp
mov
aad
or
mov
arpl
imul
aaa
cmpsb
loope
in
movsb
pop
out
xchg
enter
aaa
inc
test
insl
fmuls
aad
jp
test
push
cmp
fcmovbe
add
mov
inc
push
or
fnstenv
mov
xchg
adc
insl
movsl
cmpsl
mov
out
adc
dec
lret
pop
or
leave
jecxz
fisubl
sbbl
testb
sbb
sub
and
pop
cs
sbb
pop
loope
jl
gs
loop
outsl
pop
jmp
sbb
mov
jno
repnz
and
push
dec
dec
cmpsb
sahf
mov
jo
pusha
dec
xor
xchg
repz
sub
inc
pusha
in
inc
imul
push
mov
mov
push
and
inc
jge
test
aad
pushf
inc
aam
sbb
enter
shlb
cld
xchg
pop
adc
lahf
add
clc
xor
out
cltd
sahf
stos
insl
mov
jns
in
or
mov
mov
subl
das
ja
jo
scas
and
or
fimuls
lcall
jmp
and
pop
insb
dec
xchg
xchg
push
aad
mov
xor
mov
les
xchg
fadds
pop
mov
cli
hlt
inc
stc
lea
pop
loope
mov
mov
pop
in
dec
dec
loope
or
fidivs
fnstenv
inc
pop
xchg
inc
imul
sbb
add
dec
and
bound
jbe
jns
inc
mov
cmp
cld
cmc
cltd
jb
and
dec
popf
popf
test
es
jge
popl
xchg
fsubs
push
xchg
sbb
out
xchg
jne
in
ljmp
push
movsl
add
test
mov
leave
dec
gs
sub
fstpt
ficompl
das
add
shll
nop
pop
in
and
loope
ja
mov
clc
out
or
leave
adc
push
in
push
aaa
jge
fs
or
add
push
stos
es
aaa
lock
push
call
stos
jle
test
shrb
push
mov
test
roll
arpl
cmpsb
rcrl
push
aas
outsl
fisubrl
jnp
mov
jns
mov
loopne
imulb
test
push
repz
inc
adc
lock
add
or
inc
sub
imul
pop
ja
cmpsl
xor
inc
test
daa
ror
or
sti
cmp
mov
push
or
pop
insb
test
sub
rcrb
subb
fcmovbe
fimull
dec
sub
dec
add
sub
mov
adc
mov
sub
repnz
adc
mov
inc
jge
jmp
jmp
jl
pop
xor
fwait
push
rorl
and
jl
in
pcmpgtw
mov
sbb
jg
cmpsl
aas
nop
mov
push
sub
out
pop
push
jae
xor
mov
mov
and
ja
je
rcr
fisubl
int3
outsl
dec
fidivrl
push
fistps
repz
mov
js
mov
jo
mov
inc
mov
ret
dec
mov
xchg
mov
cmp
mov
add
adc
arpl
pop
movsw
cmp
cltd
push
gs
in
xchg
les
sarb
pop
adc
mov
add
push
arpl
je
cmpsl
das
ret
or
dec
pushf
jmp
insl
test
shlb
shlb
jae
bound
or
rcll
in
mov
ljmp
bound
fwait
loopne
out
cltd
aas
sub
imul
cmpb
fstps
fnclex
cmp
or
mov
sti
mov
mull
pop
fidivl
stos
insl
adc
dec
jp
incb
dec
xor
jo
enter
inc
push
ljmp
dec
aas
gs
jmp
mov
pop
add
adc
sub
shll
fadds
cmpsl
sbb
insl
hlt
adc
in
leave
je
adc
js
lret
rcrb
aam
dec
mov
pop
sub
popf
adc
int3
std
aaa
subl
pop
mov
es
loopne
aad
inc
nop
add
push
jl
mov
or
mov
pop
push
data16
xor
inc
rclb
jae
movups
mov
loope
jmp
push
xor
in
mov
ret
sbb
xchg
or
scas
jmp
dec
ds
xor
push
dec
ret
mov
xor
popl
xchg
arpl
popa
pushf
xchg
mov
lds
push
lds
mov
pop
push
cmp
cmp
mov
mov
xchg
in
insl
fmull
add
cs
jp
cmpsl
push
adc
push
cmpsb
pusha
jo
mov
sbb
fcoms
loopne
pop
mov
jg
lea
push
mov
enter
bound
sub
movsl
stos
and
mov
popa
xchg
popa
dec
push
shr
sbb
ja
out
push
dec
in
ja
adc
sub
xchg
adc
mov
pop
fdivrp
std
insl
test
aas
es
adc
mov
dec
sbb
dec
mov
outsl
rcl
out
cmp
roll
rorb
movl
lret
xchg
leave
dec
and
or
addb
xlat
adc
orb
sbb
jl
in
fs
inc
aaa
push
jg
xchg
inc
and
outsl
sti
leave
pop
int
dec
or
lods
lock
dec
mov
aam
mov
iret
pop
call
mov
and
aam
and
data16
push
jl
push
push
cmp
lcall
xcrypt-cfb
cmpsl
and
in
sub
fstpt
cli
inc
xor
pop
push
ret
std
jnp
or
hlt
xchg
movsb
shll
cmp
mov
cmp
in
jno
call
fs
lahf
pop
mov
into
loopne
xor
aaa
xchg
stos
push
mov
jge
test
popa
ret
enter
pop
dec
cmp
ja
cmp
sbb
cmpsl
mov
push
xor
jge
sub
daa
xor
fwait
sub
into
jae
jecxz
dec
or
cmp
les
xchg
test
dec
loopne
enter
popf
or
sub
mov
js
es
scas
leave
dec
jp
roll
repnz
shrb
test
cli
inc
ret
stc
cli
cmpsl
sub
cmpsb
cmpsb
adc
push
and
jne
mov
ds
andb
pop
inc
sti
movsl
dec
aaa
roll
out
pop
adc
sub
stos
mov
xchg
adcb
cmpl
outsb
pop
mov
dec
and
daa
movsb
inc
enter
lock
sbb
inc
rcr
xchg
mov
pop
ret
cmp
xlat
inc
xlat
test
mov
pop
mov
xchg
shr
sbb
test
in
fs
xor
lret
mov
ja
in
nop
dec
subb
daa
add
mov
cmpsl
and
lods
dec
stc
jbe
jo
add
xchg
into
out
and
or
cwtl
insb
push
jns
jb
xor
mov
in
dec
jl
sarb
push
sbb
rcll
pop
inc
or
mov
incb
cmp
or
mov
out
shrb
aas
data16
pop
repnz
and
and
leave
incl
sbb
add
pop
pop
outsl
in
sbb
adc
jg
sbb
jmp
rcl
repz
or
sub
aam
mov
loop
bound
fwait
push
enter
call
lods
notl
mul
sbb
sub
push
push
test
cmp
adc
push
sub
jae
xchg
sbb
orb
pop
imul
insb
sbb
dec
mov
jl
ds
lcall
lods
mov
rcr
cmp
or
insb
cs
test
xchg
cwtl
addr16
xchg
push
push
mov
scas
jns
cmc
sbbb
push
and
cmp
bound
jge
adc
xor
mov
sahf
lahf
mov
dec
inc
fbld
cmpb
add
insb
iret
add
jne
inc
inc
sub
pop
mov
aaa
cld
jb
jmp
sub
outsb
int
cmpsb
push
leave
sub
push
adc
arpl
les
ret
xchg
mov
xor
cmpsl
or
xchg
jge
xor
jmp
rclb
popa
lea
sbb
lcall
ds
and
js
mov
call
test
ss
or
xchg
dec
rolb
lret
fdiv
imul
adc
es
in
and
jne
stos
jle
inc
testb
push
test
sti
imul
pop
outsl
dec
icebp
js
rorl
pop
pop
push
cmpxchg
call
movsb
jne
sbb
inc
sbb
fsubr
repnz
pop
jb
jg
mov
mov
cmp
bound
stos
mov
dec
fnstcw
arpl
out
stc
outsl
cltd
arpl
mov
cld
dec
jecxz
mov
inc
push
adc
inc
xchg
sbb
pop
xlat
adc
outsb
out
ss
test
xor
dec
fisttpl
pop
mov
dec
xchg
mov
jecxz
ss
js
pop
sbb
xchg
bound
repnz
repnz
push
in
xchg
call
ja
add
out
cld
hlt
pop
cmpsb
cmp
jb
sbb
lret
fldcw
stos
hlt
xlat
js
iret
or
insl
jne
xchg
div
outsb
mov
inc
mov
cmp
stc
in
sub
mov
inc
fmuls
lods
call
repnz
or
xchg
pop
lcall
in
jle
xchg
mov
push
push
push
inc
sub
lahf
lods
jo
adc
mov
pushf
ds
mov
das
dec
loop
fwait
xchg
push
outsb
dec
addr16
jg
xorb
jle
mov
jns
mov
push
je
imul
dec
mov
fs
in
loop
out
js
inc
pop
sbb
inc
addr16
mov
cmp
leave
sbb
sub
mov
out
movsb
xchg
pop
fcomps
stc
call
add
loope
mov
add
sub
xor
outsl
bound
lcall
scas
out
jl
insb
jbe
push
sbb
xor
ja
iret
sub
mov
mov
bound
or
not
ljmp
or
cmp
sti
mov
sub
repnz
mov
inc
stc
mov
xor
lock
sbb
inc
mov
lds
rcrb
push
shll
roll
fs
imull
add
dec
push
pop
jl
add
cmp
dec
xor
jecxz
push
insl
and
dec
rcrl
adc
cmpsl
ficoml
xor
sbb
out
shr
sub
cs
nopl
out
iret
int
adc
stos
jns
leave
push
mov
mov
dec
jp
sub
cltd
sti
xor
jge
jno
adc
inc
add
loop
inc
or
nop
test
cs
lcall
clc
shrl
loop
repnz
in
test
out
js
rcll
inc
cmc
cmova
dec
jno
dec
pop
xor
lock
lahf
fistl
xor
ljmp
lcall
push
ds
push
int
rol
repz
bound
add
or
lret
mov
ss
loop
rcrb
aas
push
stos
inc
jecxz
enter
sbb
adc
sub
and
dec
cmpsb
xchg
jl
cmp
lret
jnp
jb
into
fisubrs
mov
xchg
jno
and
cltd
fs
adc
pop
negl
icebp
cmpsb
adc
stc
insb
fldl
ret
fsts
mov
pop
ja
mov
jecxz
cmpsl
jno
push
pop
aad
xchg
imul
mov
lahf
add
mov
sarb
mov
inc
std
mov
push
adc
les
dec
xor
sbb
arpl
shl
mov
insl
pop
jns
xorl
int3
inc
pop
or
inc
hlt
push
push
arpl
push
cmpsb
pop
adc
xchg
dec
and
pop
inc
mov
add
adcb
clc
jg
xchg
lods
cld
mov
std
add
test
and
mov
inc
cmp
ret
mov
jecxz
outsl
out
and
sbb
mov
aaa
cmp
popa
int
xor
jae
add
aam
xchg
mov
cmp
insl
adc
xchg
pop
push
lahf
mov
dec
pop
cs
test
mov
jbe
jmp
lret
loopne
imul
push
jns
das
inc
in
pop
fwait
jge
lods
popa
iret
and
pushf
xchg
dec
out
loopne
sbb
icebp
movsl
leave
jae
dec
int
xchg
push
rorl
inc
in
xchg
jge
sar
data16
sub
fs
mov
dec
mov
daa
imul
jl
jae
inc
dec
pushf
sar
mov
out
cmpsl
cltd
xor
mov
clc
adc
addr16
pop
xchg
fs
or
pusha
fldcw
mov
cmp
cwtl
call
mov
fmul
cld
ds
fmull
iret
outsb
or
dec
data16
ljmp
cmp
xchg
push
pushf
nop
sub
jo
mov
cmp
cwtl
push
in
mov
popa
fwait
leave
dec
fistps
dec
xchg
es
dec
sti
pop
imul
leave
inc
jp
lock
popf
sub
pop
rolb
mov
outsb
loope
fwait
pop
bound
loope
cmp
inc
push
test
push
xchg
cmp
mov
test
dec
jb
in
xor
insb
push
xchg
repz
js
mov
inc
and
push
negb
dec
pop
std
repz
aad
mov
stos
repnz
sub
jno
int3
mov
pop
sub
aam
or
in
mov
xchg
imul
shrl
rclb
mov
sub
ljmp
daa
orl
mov
test
mov
jmp
popf
push
aas
xor
push
push
enter
mov
sub
popa
js
outsl
roll
aad
and
nop
cmp
jns
insb
add
add
mov
iret
pop
outsl
mov
pop
enter
push
test
in
cmp
into
pusha
call
lods
out
std
mov
adc
fcoml
add
pop
sub
adc
enter
cmp
es
jne
and
xor
pop
sti
pop
sahf
outsb
notb
shr
xchg
and
xor
sbbb
and
lock
cmp
xchg
jmp
and
xchg
lock
test
icebp
rorb
test
jnp
in
js
outsl
xchg
cmp
inc
or
cld
xchg
orb
cmpsl
jecxz
loope
test
or
add
in
cwtl
std
mov
je
lret
mov
adc
insb
mov
mov
jle
sti
mov
mov
ds
xchg
std
js
popa
js
aas
mov
mov
mov
shrb
sbb
push
mov
add
rcr
mov
pmulhuw
shll
call
rcrl
or
mov
jle
mov
rclb
adc
popl
sub
mov
ja
shl
xchg
shl
xchg
xor
add
mov
add
movsb
popa
aad
mov
mov
or
ds
dec
sbb
jae
mov
push
mov
pop
cmp
idivl
pop
mov
add
test
or
push
aad
xchg
mov
roll
xor
icebp
inc
lret
lahf
adc
pop
loopne
mov
cmpsl
mov
jmp
push
cmp
add
cmp
dec
mov
push
push
call
pop
jb
aas
iret
insb
jge
mov
out
fidivs
mov
inc
popf
mov
orl
rcl
daa
adc
andb
aas
fldl
jg
lahf
jno
int3
imul
test
mov
sub
ja
jo
cmp
ss
dec
cmc
mov
mov
gs
not
mov
sub
insb
arpl
cmp
fstpt
aas
cli
aaa
xor
or
cmp
pop
xchg
scas
jp
push
insl
jo
push
in
fildll
adc
xor
add
pop
inc
jnp
jbe
pop
jg
mov
shl
inc
stos
xchg
and
pop
xchg
jnp
cmp
sti
cmpsb
lcall
faddp
fsubs
mov
aad
pop
push
cmpsb
aad
add
test
sub
push
mov
ret
fucomip
xchg
or
inc
lret
add
xchg
mov
jmp
dec
add
js
mov
push
in
int3
or
lretw
stc
mov
pop
cmp
adc
or
mov
data16
inc
cmp
sub
popf
int3
mov
pushf
mov
push
mov
jl
jg
cmp
dec
jecxz
and
mov
rolb
out
xchg
lret
clc
call
and
roll
icebp
push
mov
push
mov
inc
xchg
xchg
in
xor
outsl
add
xchg
mov
insb
cld
mov
ljmp
mov
inc
insl
jne
stos
in
mov
lea
xchg
out
insb
pop
fwait
sub
lret
movsl
mov
pop
ret
mov
out
in
mov
cmp
ljmp
ljmp
leave
xchg
ret
push
cmp
dec
add
loop
clc
loop
in
das
loope,pt
push
sub
cld
sbb
in
adc
popf
sbb
mov
adc
jae
push
lahf
dec
fstpt
popa
cld
addb
mov
mov
mov
push
lods
xor
jle
mov
xor
leave
mov
ja
push
adc
gs
lret
jecxz
push
das
add
xchg
xchg
popa
push
dec
orl
push
clc
lock
push
xor
jbe
push
xchg
mov
cmc
fidivl
jge
cmpsb
xchg
xchg
fsubr
sbb
adcb
fcomps
mov
cmp
pop
imul
ret
ljmpw
cs
lock
add
iret
sub
dec
loope
cli
out
sub
sbb
sbb
mov
jnp
push
sub
mov
cld
jmp
les
neg
xor
aaa
dec
pop
lahf
das
adc
xchg
cmp
out
arpl
sub
pop
pop
mov
dec
test
xchg
or
imul
xchg
and
es
clc
call
loope
pop
gs
xor
cmc
mov
mov
hlt
mov
xor
and
hlt
cmp
pop
push
xchg
pop
ret
rep
sub
insl
rolb
sub
outsb
and
push
fisubs
cmp
xchg
mov
push
imul
xchg
test
addl
dec
sub
adc
adc
mov
push
xor
cmpsb
fnstcw
fwait
sub
in
adc
mov
cmp
call
pop
sub
push
int
add
out
lcall
in
imulb
rcll
mov
cmp
sub
out
ja
sbb
pop
or
jmp
fwait
into
scas
bnd
and
popa
pushf
loop
adc
shrb
in
jno
inc
mov
das
sub
lds
cli
and
dec
movsb
cmp
ret
sti
lds
arpl
rorl
add
lahf
inc
mov
and
mov
cli
xor
push
sub
call
daa
lret
xchg
fnclex
sbb
push
xchg
push
test
dec
push
push
sub
ljmp
aad
cmp
inc
sbb
lea
push
xlat
dec
xchg
aaa
sbb
sbb
mov
dec
push
ljmp
test
adcb
mov
mov
icebp
aaa
or
sub
inc
jecxz
jns
lret
pushf
pop
mov
add
popf
mov
cmp
sbb
in
in
arpl
push
mov
or
ffreep
sub
mov
lods
and
filds
shlb
out
fsts
cld
and
pop
xor
imul
pusha
xor
adc
stc
dec
xchg
and
ret
sub
push
outsb
div
ljmp
bound
pop
test
xlat
aaa
jbe
jmp
push
xor
dec
js
push
lods
dec
call
packsswb
sbb
fwait
into
sub
mov
aam
jae
sub
pusha
fiadds
das
movsl
mov
and
inc
test
mov
jge
and
pusha
icebp
stc
scas
in
mov
sahf
rolb
push
push
fdivl
dec
dec
xchg
jbe
fistps
jge
xchg
add
xlat
cmpsl
clc
aaa
roll
sti
xor
mov
push
sbb
fisubl
cmc
hlt
sub
daa
lret
cmpsb
cmp
jne
in
mov
stc
jecxz
insl
adc
lods
xchg
mov
lds
in
scas
in
movb
sbb
sbb
lahf
mov
jmp
push
mov
dec
cmp
adc
jg
xor
xchg
and
jg
pop
xor
shll
adc
scas
loope
icebp
enter
jne
mov
ret
and
mov
pop
and
shlb
aas
sar
mov
int3
push
cmp
and
pop
inc
push
adc
mov
repz
mov
xlat
enter
cmp
and
inc
ret
xor
push
pop
or
or
add
mov
lret
in
mov
dec
sarl
popf
mov
ret
sbb
mov
sbb
jnp
shrl
inc
inc
hlt
out
cmp
int3
sbb
jns
lcall
cli
inc
mov
outsb
in
and
cli
push
inc
gs
mov
push
pop
mov
or
fnstenv
jecxz
and
dec
out
mov
movsl
pop
xchg
hlt
icebp
jns
or
and
leave
jne
fbstp
icebp
ret
xor
cmpsl
pop
pop
loopne
subl
push
sbb
out
data16
ja
mov
in
mov
dec
in
fdiv
pushf
loop
imul
data16
scas
lock
pusha
sub
lea
iret
cwtl
popa
cmp
jno
bound
fstpl
je
sbb
jbe
pop
cmp
stos
out
insl
xchg
jl
and
mov
stos
sbb
stos
cwtl
cmpsb
cmp
mov
jle
add
andl
xchg
scas
pop
mov
jno
fdivs
ret
add
xchg
add
xor
dec
sub
mov
aaa
leave
filds
shrb
push
movsl
jbe
fdivl
insb
xchg
ss
sub
push
dec
lret
es
xchg
xchg
test
xchg
daa
inc
xchg
imul
jmp
mov
cmp
fs
and
mov
xor
pop
jmp
scas
in
xor
popf
adc
sub
xchg
lock
clc
sbb
add
adc
add
sbb
push
xor
fdivp
inc
outsl
push
fstps
inc
jle
and
xor
lods
test
outsb
mov
out
dec
mov
cmp
shl
jns
pop
imul
push
sarb
pop
xor
cld
adc
fwait
pushf
pop
push
xor
jp
xchg
mov
enter
xor
xor
mov
push
out
adc
pop
movsl
jmp
push
pushf
pop
push
mov
inc
out
inc
dec
adc
push
mov
sbb
push
push
xchg
mov
jbe
das
mov
repz
and
jb
pop
sub
daa
xchg
inc
out
stc
mov
xor
push
sbb
fadds
daa
mov
xor
into
insb
std
add
leave
add
mov
mov
mov
xchg
add
adc
jg
rolb
lods
hlt
test
xor
out
or
mov
sbb
rorl
inc
pop
loop
gs
aas
xor
jmp
xchg
xor
add
pop
mov
stos
and
pop
stc
scas
xor
add
adc
cwtl
xor
push
subb
sbbb
in
repz
add
insl
in
shrl
outsb
inc
addb
pushf
push
stc
or
push
dec
imul
mov
push
or
out
stos
sbb
out
sbb
js
sub
lret
and
inc
mov
push
lahf
out
xchg
lahf
pop
pusha
xchg
std
cmp
cmpsb
add
aas
mov
mov
inc
aaa
adc
or
cs
aaa
mov
pop
ds
jle
xor
cmp
mov
jecxz
aas
xchg
and
mov
orl
sub
shrl
int
or
fsubrp
mov
out
dec
xor
or
orl
xor
pop
mov
adc
cmc
adc
stos
mov
jo
test
xchg
push
aas
rcl
jp
push
in
clc
sub
pop
mov
aam
cmp
ret
xchg
bound
inc
cltd
fistps
add
sbb
ret
adc
xchg
int3
cmp
movsl
mov
out
pop
dec
fbld
dec
divb
stos
pop
inc
test
sub
sub
adc
xchg
inc
out
push
test
mov
out
dec
sbb
loope
xchg
ja
jne
lock
pop
addb
xor
push
jnp
outsl
adc
or
jg
stos
or
ss
cmp
mov
xchg
fsubr
and
mov
mov
jmp
push
add
sbb
mov
sbb
ret
jp
scas
cmpsl
sub
dec
lcall
jp
push
arpl
rcl
jl
or
mov
jmp
fcmovb
xor
xchg
in
scas
lock
aam
push
stc
mov
call
shlb
jbe
cmpsb
out
movsb
mov
mov
push
aam
call
je
mov
pop
fistpll
xchg
or
inc
pop
imul
imulb
mov
jecxz
dec
pusha
jl
stos
movsl
add
orl
and
cltd
xor
aaa
movb
fs
or
jbe
pop
mov
out
jb
fs
inc
mull
and
call
cld
xchg
aas
movsb
lds
cmpsl
in
add
push
inc
add
aas
sub
test
mov
add
ss
clc
arpl
mov
jp
adc
in
arpl
cld
imul
mov
mov
sbb
int
jle
aas
jns
xchg
push
rclb
and
movsl
filds
ret
lods
je
push
mov
cli
cmp
push
sub
hlt
aaa
shll
mov
jecxz
int3
dec
mov
or
xchg
push
add
mov
divw
int
adc
mov
maxps
dec
fwait
jle
sbb
in
push
scas
xchg
enter
jge
cld
mov
dec
push
push
adc
pop
add
fstl
pop
dec
jg
jmp
enter
mov
popa
xchg
lock
lea
push
cld
mov
test
mov
mov
mov
shrb
jmp
push
aas
out
pop
and
cld
out
push
add
cmp
cli
and
push
cwtl
or
orb
loope
es
dec
mov
je
pusha
sub
imul
rolb
pop
inc
pop
jecxz
fucomip
pushf
mov
popl
xchg
in
xchg
jl
mov
xor
gs
lea
out
negb
in
jne
cmp
inc
rorb
lods
movaps
inc
ss
stos
mov
gs
cmp
dec
mov
imul
lcall
inc
imul
jecxz
sbb
cli
sbb
jmp
pop
push
pop
std
aas
ret
dec
push
jae
pop
xor
adc
mov
lret
arpl
push
inc
fxch
inc
adc
into
and
movsl
mov
ja
je
cmp
mov
in
pop
jne
sbb
outsb
or
push
adc
mov
lcall
push
lahf
imul
mov
xlat
push
xchg
xchg
xchg
and
jmp
push
sub
xchg
add
jecxz
pop
xor
ss
popf
lahf
push
adc
sbb
fbld
cmp
pop
inc
arpl
push
mov
decb
stos
mov
inc
xchg
stos
mov
xchg
push
xor
fiadds
es
movsl
xchg
push
je
mov
mov
lea
and
lock
shlb
pop
and
test
shr
mov
ret
jo
inc
in
sub
aaa
shrl
rcrl
popf
fisubl
ret
or
or
xchg
xlat
and
xchg
inc
imul
nop
movsb
pop
lret
cmp
loope
push
lahf
in
jmp
jb
mov
push
push
add
stc
inc
cmpsl
mov
into
mov
arpl
gs
rcl
aam
ss
mov
mov
add
pop
pop
out
dec
fwait
leave
in
sub
xchg
and
adc
xchg
fcmovu
jns
jge
jne
xchg
fisubrs
lock
jae
lret
xchg
cmc
inc
mov
pop
pop
ds
xchg
or
xor
mov
insl
or
mov
sbb
mov
orl
sarb
cmp
sbb
add
adc
and
sbb
xor
cmp
das
xchg
sahf
adc
add
enter
mov
movsb
out
clc
push
cmpsb
jo
push
add
loop
pusha
adc
mov
inc
sub
mov
arpl
mov
pop
pop
adc
lods
scas
aaa
push
push
addl
lods
cmpsl
adc
gs
std
cmp
pop
ret
jge
mov
cmpsl
or
popf
lret
push
sub
mov
pushf
sbb
jns
adc
dec
outsb
sbb
xor
fisubrl
lahf
pop
adcb
icebp
fwait
mov
popf
repnz
lahf
insl
sbb
mov
xchg
sub
and
inc
in
lahf
mov
cmp
stc
fstpl
pop
pushf
loopne
xlat
aam
movsl
pop
icebp
adc
mov
xchg
and
stos
pop
adcb
dec
xchg
jecxz
push
loop
xchg
jbe
inc
push
and
test
cmpsb
add
jno
and
dec
jmp
addr16
fldenv
hlt
mov
cltd
arpl
fistps
sub
mov
sbb
add
mov
in
pushf
and
lds
push
inc
jae
fldt
ret
xor
bound
mov
xchg
lea
sub
inc
push
xchg
in
sbb
mov
and
repz
inc
push
jae
push
xchg
cmpsb
jns
xchg
jno
pop
pop
pop
call
mov
mov
mov
pop
adc
dec
mov
mov
das
loop
inc
lret
pop
mov
pop
fildll
and
jb
repnz
or
addr16
lahf
fs
aad
adc
sbb
mov
push
xor
xchg
in
mull
xor
fisttps
xor
mov
add
pop
negb
into
mov
outsl
jp
aad
dec
push
sti
xor
call
fcomi
stc
xor
mov
sarb
xchg
lcall
xchg
ds
lcall
sahf
and
mov
in
lea
sub
arpl
inc
mov
int
nop
inc
dec
or
pop
sub
sti
xchg
xor
loopne
insb
pop
bound
pop
mov
loop
pop
and
mov
testl
scas
fildll
add
js
out
inc
xchg
dec
sub
loop
pop
es
lcall
and
mov
pop
testl
daa
jmp
sub
test
xchg
out
sbb
dec
sarl
mov
adc
sbb
cmpsl
mov
inc
clc
aam
sarb
dec
mov
dec
sub
out
push
adc
rcrl
outsb
and
push
sub
rclb
movl
xor
and
add
rep
fcompl
mov
and
or
ffreep
and
fs
sarl
outsl
mov
mov
cmp
dec
push
pop
cld
adc
or
cmpsl
push
adc
or
or
jl
cmp
cmp
sub
sti
dec
mov
jo
in
and
outsl
dec
mov
aad
mov
daa
fdivrl
aad
and
out
jnp
ss
pop
daa
call
lret
and
sbb
push
pop
cmp
lock
lahf
or
cli
dec
inc
decb
cwtl
aaa
push
sbb
and
je
cmp
sub
les
repnz
lods
xchg
imul
adc
aad
fidivl
push
fiadds
lea
cld
sub
jne
pop
scas
rolb
adc
lret
adc
sbb
pop
pop
mov
mov
add
lea
les
push
lods
leave
dec
pop
push
add
rcl
pop
loope
lcall
mov
negb
mov
adc
sbb
pop
jmp
and
xchg
cltd
xorl
xor
sub
mov
xor
rorb
arpl
sarb
icebp
cltd
arpl
xlat
js
jp
cmpsl
hlt
js
and
in
les
mov
in
cld
in
jmp
xchg
popa
loope
test
inc
cli
push
pop
xchg
mov
mov
lret
cs
fisttpl
mov
dec
out
and
push
cmp
stc
and
movsb
js
or
xor
imul
sti
dec
fldl
add
rcrb
mov
push
in
inc
cld
mov
or
mov
icebp
adc
divb
add
mov
xor
pop
and
jb
lahf
xor
dec
mov
sbbb
pop
mov
push
inc
mov
and
xlat
add
fs
and
push
das
mov
inc
into
sarb
cmp
into
popa
jp
sub
mov
sbb
test
jb
ret
xor
lods
hlt
sbb
push
dec
imul
pop
xor
mov
outsb
inc
hlt
dec
pop
test
ja
nop
in
ljmp
fisubrs
lret
cmp
ss
mov
data16
lahf
mov
loopne
jge
pop
std
in
xor
xor
xchg
xor
int3
xchg
mov
mov
mov
cmp
jne
notl
mov
cltd
cmpsl
pop
jp
add
cmp
xchg
js
aam
ret
xchg
jmp
jge
fildl
mov
push
xchg
xchg
stos
mov
mov
repnz
fsubl
mov
lea
xchg
jb
jle
cmp
xor
and
subl
sub
lock
rol
fdivs
xor
jecxz
fmulp
sbb
cmp
aaa
js
mov
stc
insb
jno
xor
in
sub
xchg
cmp
lock
ss
out
cmp
sbb
call
jns
push
imulb
add
stos
xchg
mov
pop
es
pop
pop
insl
mov
and
fsubl
je
stc
pusha
jae
cmpsb
cmp
mov
adc
ljmp
fwait
lret
sbb
xchg
sub
scas
ret
add
arpl
adc
lcall
mov
out
aad
pop
cmp
mov
loopne
loop
adc
insb
enter
mov
cmpsb
addr16
mov
loopne
subl
sub
test
out
push
jmp
je
mov
inc
mov
das
mov
aas
cmp
inc
out
push
insb
iret
or
out
aad
out
mov
insl
xor
addr16
jl
add
push
pop
sub
aas
and
loop
ja
faddp
sub
jl
pusha
ret
repz
mov
add
stos
mov
stos
jmp
in
add
mov
das
xorl
movsl
into
xchg
cli
add
lea
add
pop
and
jbe
inc
in
ljmp
sbb
mov
test
into
inc
pop
arpl
add
repz
inc
lahf
jb
mov
mov
xor
aaa
adc
shlw
dec
loope
add
fucompp
adc
push
xor
ja
push
pop
mov
std
adc
pushf
rorl
aaa
das
movsl
lcall
lret
fbld
dec
shlb
cmp
and
loop
hlt
mov
aam
in
out
xchg
dec
add
jmp
in
xchg
iret
test
pop
cmp
jle
inc
push
ljmp
mov
shll
jae
mov
mov
push
push
divb
fcmovbe
mov
les
mov
int3
fdivrl
fwait
lcall
mov
inc
lcall
cmpsb
ja
mov
aas
cmc
xchg
mov
jle
pop
fldl
push
jp
iret
bound
xchg
mov
cmpl
scas
add
cmp
js
jg
add
pop
loope
std
es
mov
cmpsl
mov
pop
push
xor
cmp
xchg
orb
jae
pop
test
jo
push
dec
les
xchg
iret
pop
sarl
inc
aas
outsl
push
cmpsl
arpl
mov
lahf
or
gs
and
lcall
xor
inc
jecxz
xchg
stos
aam
mov
push
pop
add
sub
adc
adc
push
jge
mov
addb
lret
lods
sub
in
jns
inc
inc
aam
out
loop
mul
lods
or
mov
loop
mov
fs
test
gs
maxps
push
push
shrl
sub
repnz
pusha
or
push
andb
ja
xchg
das
adc
int
inc
cli
push
push
adc
xchg
push
or
aas
add
jge
cmc
mov
xchg
popf
adc
and
jns
int3
sub
cmp
push
daa
and
adc
pop
jmp
repz
bound
sbb
or
sahf
test
ret
imul
fwait
cmc
cmpsl
mov
cli
mov
cmp
mov
insb
mov
xchg
cmc
adc
mov
cli
jo
sub
sbb
scas
sbb
mov
mov
push
movsb
or
cmp
in
fucomp
mov
mov
lcall
mov
stos
sub
xchg
push
mov
psrld
xor
popf
or
xor
dec
out
inc
loope
test
stc
arpl
pop
mov
xor
xchg
stos
pop
inc
mov
mov
fs
mov
popf
popa
out
stos
mov
out
pop
mov
fs
enter
daa
push
cwtl
mov
ljmp
sub
mov
xor
mov
pop
push
imul
loop
fcompl
ds
mov
iret
cmpb
adc
mov
rcr
cmp
cltd
in
sbb
test
les
iret
push
xchg
lds
cmpsl
dec
sbb
movsb
and
or
mov
add
xor
xor
sarb
imul
jg
or
insl
or
adc
mov
es
mov
adc
es
or
xchg
xchg
sbb
jbe
cmp
inc
xchg
aaa
pop
xchg
fisubl
js
lahf
mov
or
bound
enter
enter
and
js
daa
rcrl
lcall
int
std
fisttpl
sub
rorl
cmp
and
mov
push
dec
insb
enter
push
test
inc
jp
test
out
int3
mov
mov
repnz
out
jo
repnz
not
movsb
mov
and
jnp
data16
roll
test
xor
lret
jp
movsb
push
ret
or
cmp
pop
test
lret
xchg
adc
sub
push
jl
fcoml
xchg
sub
popf
push
test
insl
mov
cwtl
andb
jmp
repz
rclb
push
add
pusha
cmp
sbb
dec
shl
and
add
out
fistps
in
ljmp
adc
frstor
jmp
xchg
cli
mov
cld
ja
jl
jns
cmp
insl
jo
in
fs
pop
inc
xchg
xor
pop
jb
out
mov
xchg
mov
mov
cwtl
pop
push
jl
and
lods
jne
cmp
mov
mov
mov
push
mov
movsb
jbe
push
push
jmp
mov
sti
outsl
jge
dec
test
stc
inc
dec
sub
jns
pop
adcb
mov
popa
incl
cmc
push
fidivrs
mov
in
daa
orl
cmp
in
pop
mov
popa
inc
pop
arpl
out
popf
lret
or
outsb
lahf
or
xor
sbb
pop
push
or
mov
push
inc
mov
xchg
and
repnz
jnp
and
cmp
outsl
ret
insb
aas
icebp
xor
dec
mov
fcmovnu
push
or
pop
sahf
or
test
jb
cli
stos
push
aaa
std
divl
xchg
inc
push
inc
sub
sbb
lods
jo
lret
bound
sub
mov
adc
mov
add
adc
scas
push
sub
dec
pop
int3
mov
push
les
testl
shll
pop
mov
inc
orl
lahf
mov
mov
stos
cltd
cs
pushf
pusha
mov
loop
test
fsubrl
cli
aaa
xor
repnz
jmpw
mov
pop
mov
adc
or
cmp
fildl
jge
adc
mov
cltd
aam
sbb
sub
or
inc
adc
adc
xchg
in
cli
enter
stc
ret
push
push
push
inc
gs
imul
xor
hlt
add
out
and
sbb
scas
insl
inc
nop
fcompl
mov
dec
sub
cld
jle
mov
mov
pop
cmpsl
mov
mov
and
pushf
mov
or
sub
jle
fisttps
mov
inc
fidivs
inc
in
cmp
clc
out
out
and
jp
and
add
mov
pop
sub
test
scas
xchg
pop
mov
mov
aam
adc
xor
icebp
xor
leave
imull
movsb
mov
xor
or
xor
jbe
push
add
lret
das
cli
lcall
in
ljmp
inc
sub
or
pushf
mov
jmp
arpl
mov
and
inc
inc
scas
shll
cmp
data16
in
push
lds
jns
mov
mov
sub
adc
repz
hlt
adc
mov
popa
shrl
mov
sbb
or
loope
and
scas
add
das
loop
ds
scas
adc
add
and
ror
rol
inc
out
out
inc
push
ret
and
das
adcl
dec
dec
push
popf
fidivrl
xor
adc
mov
arpl
stos
jae
lock
jo
lds
mov
std
repnz
testl
mov
daa
out
xchg
insb
mov
add
xchg
lock
fimuls
scas
loop
shrb
dec
je
call
hlt
xchg
clc
cli
xchg
and
imul
xchg
adc
jae
mov
pop
adcl
addl
lret
sbb
ds
add
cs
lock
cltd
test
mov
fimuls
jecxz
fcmovu
and
cmp
insl
fcoml
pop
mov
cli
jae
add
mov
xchg
les
cs
out
cmpsl
push
cmp
inc
out
jo
ja
pop
shrb
jle
inc
lcall
cmp
mov
test
xchg
movsb
xor
and
push
dec
inc
in
movsl
popf
bound
cmp
pop
insb
testb
push
jbe
xchg
cmpsl
imul
sbbb
shll
stc
jo
test
mov
test
or
lret
mov
scas
mov
and
loop
lcall
js
xchg
fcmovne
lret
pop
movsl
cld
mov
xchg
pop
pop
pop
mov
imul
xchg
sbb
jmp
lea
cmp
xchg
cwtl
or
scas
jl
jl
xchg
pop
and
and
adc
mov
jbe
and
add
inc
or
mov
loope
adc
or
cmpsb
adcb
out
dec
add
cmp
sti
adc
jne
push
mov
mov
lods
xor
cmpl
push
movsl
dec
jp
adc
add
mov
lea
cld
mov
add
test
insl
imul
cmp
pop
mov
xchg
adc
jb
enter
iret
sub
cmpsb
stos
adc
repnz
jae
xchg
and
and
shll
add
sbb
ret
or
das
mov
mov
and
fcmovu
rorb
cmp
out
jo
lods
sbb
xchg
fimuls
jae
mov
pop
dec
subb
dec
pop
and
jl
push
leave
popf
cli
mov
sbb
lret
adc
xchg
mov
mov
dec
bound
dec
adc
push
mov
mov
mov
adc
sbb
mov
push
push
adcl
cmp
add
xchg
mov
jmp
arpl
and
push
pop
sub
insb
mov
int
je
fs
mov
jmp
leave
fnstenv
inc
xchg
outsl
push
mov
mov
xor
mov
inc
shl
jb
adc
dec
imul
add
icebp
cmp
scas
out
js
dec
cmp
push
fnstenv
test
loop
push
imul
cltd
xorb
sahf
std
mov
mov
int3
or
sub
outsb
inc
mov
movsb
dec
insb
divb
xchg
test
or
xchg
jmp
addl
gs
fisttpll
sar
adc
cmpsb
push
dec
pop
pusha
notl
gs
sarl
cmp
mov
rorl
pop
cltd
pop
dec
xor
pop
ss
inc
xchg
xor
pop
loope
or
fisubs
sbb
mov
push
inc
jl
mov
jmp
out
test
push
pop
sbb
cwtl
or
aas
inc
sub
adc
xchg
hlt
or
push
cli
add
xor
adc
jnp
stc
out
push
fsubrs
mov
psubq
add
jl
and
lea
cmp
xlat
popf
loopne
movsb
pop
adc
stos
scas
fisubs
push
inc
std
mov
loop
mov
cmc
inc
int3
loope
fsubl
in
xor
inc
insl
lea
std
mov
sbb
dec
out
dec
rolb
jl
fildl
or
pop
mov
cltd
push
mov
or
cmp
cmpsb
mov
int
lods
sti
sbb
es
ja
mov
lods
mov
adc
fwait
dec
test
fs
push
lcall
sbb
int
and
in
mov
call
iret
add
or
xchg
jb
mov
test
adc
add
xor
insb
dec
popa
pop
ss
sahf
stc
rcrl
mov
sti
jne
fs
in
or
xchg
pop
dec
pusha
cmp
push
dec
cmp
les
and
bound
dec
pushl
xorb
pop
mov
negb
test
dec
inc
movsb
pop
stos
pop
aas
mov
shlb
lds
mov
leave
push
pop
dec
enter
mov
jne
lcall
pop
xchg
xlat
push
mov
nop
jno
rorb
nop
sahf
pusha
ja
sbb
jge
incl
stos
sarl
sbb
add
std
into
jge
js
xor
sbb
mov
sti
inc
xchg
xchg
jp
inc
test
iret
or
sbb
or
xchg
jle
mov
mov
mov
cmc
xchg
ds
mov
fsubl
and
xchg
mov
aaa
adc
jge
pop
jb
das
and
arpl
adc
loope
leave
jecxz
mov
xchg
sarl
jle
xchg
mov
or
mov
cli
jbe
data16
cs
jnp
notb
jge
in
fildl
adc
pop
add
sbb
xchg
cmpsl
adcl
jbe
and
jg
arpl
int3
dec
sub
dec
paddsb
iret
mov
mov
ds
shll
mov
outsb
jg
mov
mov
or
andl
test
pop
aam
push
ja
push
mov
or
pop
xor
icebp
push
cld
int
into
ja
xchg
stc
movsb
sub
sbb
stos
mov
gs
incl
orb
push
fisttps
fstps
call
imul
int
mov
adc
jge
dec
and
aas
mov
or
mov
add
lods
mov
fmull
jmp
pushf
sbb
pop
das
push
and
fildll
add
mov
in
fnstsw
fistpl
hlt
jns
and
mov
push
lret
adc
mov
movsb
mov
inc
in
adc
outsl
jb
shl
xchg
add
and
cld
in
fnsave
adcb
int
push
dec
cmpb
jno
fs
push
push
and
andl
stc
inc
sbbb
popa
xor
mov
pop
lods
push
adc
lods
jne
xchg
pop
or
sbb
fs
push
pop
mov
popa
pop
mov
loopne
ror
rcll
sbb
mov
fildll
jecxz
jmp
loopne
mov
jmp
lret
outsb
in
nop
shrl
fisttpl
stos
call
aam
loopne
fxch
aaa
in
pop
cmp
jecxz
ret
pop
and
sub
adc
xchg
movsl
inc
rcll
repz
sub
aaa
cmpsb
mov
inc
sub
scas
xchg
mov
and
dec
add
jae
test
pop
stc
insb
hlt
jbe
fcomi
push
iret
adc
gs
test
pushf
outsl
inc
or
call
movsl
scas
add
mov
and
mov
repnz
or
aad
dec
arpl
stos
jmp
dec
pop
push
push
mov
add
pop
out
pusha
inc
aam
pop
xchg
rcll
push
add
sbb
xchg
arpl
dec
into
mov
nop
mov
in
gs
enter
shlb
xchg
sub
and
test
pop
ret
adc
and
mov
popa
xor
and
add
mov
inc
fucomp
aas
fldcw
imul
mov
push
lret
xor
push
and
movsl
add
pop
inc
sub
mov
adc
xor
push
jb
mov
push
mov
clc
int3
js
push
cs
popa
pop
cmpb
mov
mov
sbb
pop
and
imul
push
sbb
js
stos
rcr
push
out
cld
dec
lret
mov
adc
pop
shll
mov
jns
push
jg
fcmovb
add
cmp
pop
cwtl
pop
shrb
lret
inc
inc
cld
fmull
inc
dec
call
or
lahf
push
subl
inc
adc
outsb
sbb
outsl
and
fldcw
push
out
in
into
mov
and
repnz
sbb
pop
aad
dec
adc
xchg
xchg
in
xchg
cmp
enter
sub
out
mov
mov
shlb
push
je
push
push
mov
mov
pusha
xor
jbe
inc
mov
ret
pushf
call
push
mov
push
rcll
pusha
mov
sub
call
mov
pop
arpl
pushl
dec
xchg
cmpsb
jecxz
push
popa
imulb
leave
lods
push
push
mov
mov
inc
or
pop
push
push
inc
aas
dec
cmp
sti
sub
inc
mov
push
repnz
imul
fisubrs
ficoml
lds
loope
mov
fiadds
mov
push
xchg
in
inc
hlt
bswap
inc
dec
pop
repz
jbe
fidivrl
jmp
aad
lods
sbb
xor
test
cs
mov
iret
test
push
and
icebp
test
push
imul
pop
jp
mov
ljmp
sub
and
sbb
shrb
mov
scas
and
push
scas
popa
lret
mov
sub
or
das
outsb
aam
lret
add
mov
out
mov
mov
xor
sbb
mov
or
or
cmp
xlat
inc
sbb
xchg
add
or
fs
iret
aas
test
call
and
gs
sbb
xor
aam
or
sbb
jnp
xchg
push
or
cld
subb
das
mov
call
mov
pop
sub
cmp
lods
push
outsb
scas
lahf
and
scas
stos
cmp
xlat
in
lods
shrb
inc
pop
push
arpl
aam
sbbb
sub
fisttpl
and
cltd
loopne
rcl
imul
das
enter
sbb
cmpb
in
sti
mov
cwtl
fisubl
inc
push
sbb
sub
mov
push
scas
clc
cmpb
test
adc
psllw
fst
test
add
adc
adc
cmp
fcoms
mov
cmc
mulb
lods
lret
out
outsl
or
lods
aaa
cmp
dec
test
loop
xchg
insb
rcl
jmp
mov
mov
enter
std
ret
insb
insb
inc
sarl
adc
dec
clc
lcall
loope
fidivs
pop
mov
mull
lret
mov
push
leave
into
hlt
dec
scas
roll
xchg
xlat
mov
and
pop
mov
movsb
mov
xor
fistpl
mov
sahf
les
aaa
sbb
ret
and
sbb
cmp
sbb
sbb
lret
sbb
mov
xor
xchg
nop
sub
or
lds
cld
fxch
pop
addr16
and
mov
fisubs
popf
iret
movsb
int
dec
fdivl
call
xor
mov
insb
ljmp
xchg
out
faddl
fistpl
inc
cmp
decb
or
or
out
cmp
and
sub
ret
ja
inc
mov
pusha
out
mov
cmp
orb
and
fisttpl
fists
icebp
les
test
in
scas
mov
push
sub
inc
mov
fs
mov
test
bound
ja
mov
sub
vmread
lcall
fwait
xchg
sbb
xorl
jge
mov
sbb
shrl
movsl
and
orl
in
stos
jno
mov
adc
cmpsl
rcrl
lods
lods
daa
jns
xchg
sbb
xchg
into
cmp
ret
pop
mov
lret
adc
es
push
mov
pop
fdivl
mov
aaa
or
mov
pop
mov
xor
push
daa
je
mov
pop
mov
cli
int
ret
pop
icebp
jge
push
add
xor
scas
xchg
dec
cmp
loope
aad
mov
div
push
mov
movsl
outsb
ds
push
mov
xchg
xor
sarb
clc
jmp
pop
push
shrl
fwait
mov
lea
xchg
mov
cld
jnp
shlb
inc
mov
add
and
jecxz
xor
test
xor
sti
mov
xchg
cmc
mov
mov
dec
movsb
jno
xbegin
enter
jle
xor
bound
xchg
cmp
sbb
lcall
shrl
or
in
shl
or
jp
inc
pushf
add
outsl
in
int3
orl
or
pop
adc
adc
aad
mov
inc
je
add
mov
call
xchg
cmp
sbb
jmp
pop
push
pop
sbb
sub
adc
pop
sarl
xchg
mov
js
push
push
push
mov
repnz
hlt
mov
mov
in
ficomps
pop
and
fidivrs
lahf
cltd
jp
lcall
inc
popf
inc
test
sbb
mov
dec
loopne
dec
jl
pop
adc
jns
fisubrl
das
leave
sbb
in
xor
mov
loope
cld
pop
adc
xchg
cwtl
aaa
jp
sub
jmp
inc
mov
xchg
movsb
insb
lea
repnz
sub
insl
daa
mov
les
daa
cld
or
jne
xchg
in
movsb
rcll
push
mov
test
shl
js
rclb
jns
ja
mov
pop
shl
lret
pop
jnp
inc
xchg
push
imul
dec
pop
xchg
xor
or
push
xchg
aaa
pop
bound
mov
xchg
mov
xchg
imul
xor
into
push
fimuls
lret
or
clc
xor
popa
xlat
in
push
out
jne
imul
pop
fwait
inc
shll
out
dec
js
inc
fistps
into
popf
xchg
mov
inc
aad
pusha
dec
out
add
and
or
add
iret
push
in
divl
lock
sbb
jne
js
movsl
incl
lea
or
mov
push
jmp
repz
inc
or
aad
lret
inc
sub
mov
test
xlat
imul
xchg
push
lahf
fcomps
cmp
add
inc
cltd
lcall
movsl
jno
push
mov
and
inc
testl
xor
in
call
jecxz
jno
push
clc
leave
ss
pop
popa
bswap
fsubr
in
into
push
insb
cmp
in
call
lea
imul
fwait
mov
cmp
cmc
mov
pop
iret
subb
jns
lea
sub
cmp
ljmp
lcall
inc
cmp
shl
lahf
roll
subl
cli
shr
adc
push
mov
imul
outsb
inc
mov
in
arpl
xchg
mov
data16
cwtl
pop
shr
fucomi
sbb
test
cmp
add
test
push
in
cmp
push
pop
jg
ja
invd
and
lds
loop
pop
inc
jecxz
sahf
pop
cmpsb
mov
xor
stos
inc
add
hlt
nop
inc
sbb
jns
push
fildll
mov
idivb
das
and
btr
and
mov
outsl
pop
adc
pop
mov
mov
xor
sub
cmp
jae
div
lahf
add
ljmp
leave
and
imul
jp
pop
xchg
and
mov
or
mov
xchg
ss
push
scas
mov
or
adc
outsl
in
jmp
ss
in
add
dec
mov
in
mov
xor
insb
adc
sub
ds
fdivrs
fcompl
lahf
je
mov
pop
cmpsb
stc
mov
out
lcall
cmpb
jae
push
aas
mov
sbb
outsb
fdiv
sahf
mov
cwtl
repz
inc
pushf
mov
dec
inc
push
dec
and
das
mov
pop
ljmp
jg
dec
arpl
stos
cmp
pusha
test
xlat
xchg
lret
je
and
mov
sub
das
outsw
cmpsl
xchg
inc
lret
cli
xchg
sub
or
cmp
inc
adc
popa
hlt
add
clc
jno
jns
arpl
mov
mov
fisubrs
cmp
aas
push
out
mov
pop
shll
push
xchg
popa
inc
mov
xor
int
xchg
xchg
ja
scas
pop
xchg
mov
les
orb
mov
mov
scas
jl
xchg
mov
jbe
gs
fmulp
imul
mov
pop
inc
lret
cmc
add
mov
or
xor
je
jp
ljmp
xchg
das
and
repz
cmp
mov
das
stos
addb
push
pop
pusha
dec
xchg
sarl
ljmp
test
xchg
or
out
xor
dec
negb
push
adc
out
mov
sub
mov
mov
mov
xchg
test
lea
pop
addr16
setbe
or
push
pop
aam
mov
or
inc
and
jo
ret
in
pop
mov
cmp
mov
insl
stos
mov
xchg
test
stos
or
xchg
sbb
push
mov
and
push
addl
les
pop
cs
lret
popa
xchg
xchg
or
insb
clc
sbb
lds
pushf
inc
mov
xchg
outsb
or
scas
pusha
lahf
sub
movsl
push
jle
jle
fs
jns
jle
rcrl
lds
repz
pusha
sti
or
bound
adc
sbb
push
aad
mov
push
xor
or
push
or
jle
xchg
mov
xacquire
aam
cmp
aad
lds
imul
fcmovnu
cmp
xchg
sbb
push
fbstp
daa
inc
mov
call
xchg
pop
out
add
fabs
pop
pop
bound
lret
mov
in
ss
mov
jbe
imul
inc
call
in
push
outsb
push
and
push
jecxz
push
out
cltd
repz
cli
sub
les
pushf
lock
xchg
sbb
push
pop
mov
es
addr16
movsl
pop
rclb
dec
pushf
cmp
and
dec
mov
int
adc
dec
cmpl
mov
push
push
or
nop
sub
inc
subb
mov
or
pop
pushf
int
or
jnp
pop
xchg
dec
xlat
xchg
cmp
jle
adc
add
into
out
mov
cmp
push
dec
jno
es
outsb
cmp
stos
xchg
or
movsb
jnp
fcoml
mov
pushf
jl
adc
dec
jmp
mov
cmp
inc
lods
and
repnz
shl
fdivrl
popf
xor
call
jae
leave
adc
mov
int
xchg
in
mov
jl
cmp
fidivs
cmpsb
sbb
pop
adc
aas
ret
nop
das
mov
pop
lock
dec
sti
cmp
or
cmpsb
mov
insb
shll
sub
sbb
or
test
cmpsb
and
jle
and
jno
and
xchg
pop
ljmp
loope
lret
hlt
mov
lahf
add
ljmp
adc
or
iret
sbb
xor
arpl
sbb
adc
pop
or
and
pop
fcompl
inc
cld
cld
add
rorb
outsb
movsb
sub
sub
ret
cmp
data16
adc
lahf
outsb
lret
enter
mov
insl
sub
pop
fnstcw
or
jno
xchg
lods
push
inc
dec
rcrb
sbb
xchg
mov
mov
fdivs
lcall
movsb
shrb
and
jns
popa
xor
es
sbb
push
out
stos
rorl
pop
aaa
addl
test
pop
jns
lods
mov
push
cs
cmp
fstps
mov
jo
ja,pn
fsubrs
xchg
or
loope
sarl
repz
imul
jo
adc
pusha
int
xchg
ljmp
stc
inc
test
lods
enter
pop
out
xor
mov
lcall
mov
popa
pusha
inc
mov
mov
jne
pushf
lcall
mov
mov
ret
add
and
cmpsl
imul
mov
mov
test
movsl
push
adc
out
cmpsl
out
imul
out
scas
cmpb
or
scas
adc
push
sbb
push
jge
ficoms
or
xor
jge
adc
repz
mov
test
pop
scas
xchg
mov
subl
lds
mulb
outsb
and
inc
xchg
sub
imul
bound
icebp
divl
scas
push
cli
in
test
cli
out
lahf
inc
ret
or
xor
dec
adc
sbbl
mov
add
dec
pop
enter
sub
in
mull
push
sbb
imul
dec
adcl
mov
add
sub
dec
rcr
call
jle
sbb
and
loop
insb
push
cwtl
and
mov
jmp
xor
add
orb
pop
jb
jle
fsubrl
insb
xchg
jg
inc
pop
sub
sub
ror
lock
add
or
adc
dec
pop
mov
push
out
in
in
adc
movsl
outsl
mov
addr16
jne
push
stos
cmp
mov
addr16
cmp
pusha
dec
sub
xchg
jb
testl
mov
push
loopne
xchg
ficoml
push
dec
stos
and
push
fucom
add
sub
fnstsw
je
push
in
xchg
xchg
int3
push
mov
sbb
mov
add
cli
pop
lret
push
adc
stos
push
mov
ja
pop
mov
sub
mov
jnp
stos
les
sub
mov
fdivr
sub
rcrl
push
mov
cmp
mov
push
movsb
push
push
cs
add
aas
mov
pushf
into
dec
jnp
jp
mov
popf
adc
and
call
data16
popf
testl
jecxz
lcall
and
mov
cld
ljmp
mov
fcom
movsb
movsl
mov
adc
xchg
cmp
jne
out
xchg
data16
mov
mov
in
inc
push
insl
hlt
jle
lret
add
mov
jge
add
jo
pop
dec
cmp
mov
cli
pop
call
andl
je
lds
xor
pop
aaa
pop
in
xlat
push
mov
push
sbb
jle
xor
rclb
xor
sub
pop
mov
jmp
and
leave
dec
icebp
fnstcw
mov
mov
push
gs
mov
stos
pusha
pop
mov
cltd
mov
stos
pusha
cltd
aad
fucom
in
aam
ja
sub
mov
and
sbbb
inc
jmp
add
jmp
pusha
cmp
movsl
popa
jp
sub
xchg
enter
xchg
cmp
jmp
sahf
mov
popa
in
jne
ret
outsl
mov
push
aam
and
mov
cmpsl
mov
pop
sbbb
mov
inc
enter
ret
call
xchg
lock
jns
in
mov
xor
adc
stos
outsl
outsl
jg
ret
or
adc
mov
je
and
push
ss
lret
push
add
stos
sbb
test
mov
ret
push
cmp
mov
adc
adc
hlt
jle
mov
es
test
iret
add
insl
cs
sbb
dec
adc
test
out
inc
xor
andb
fisubs
push
or
minps
mov
pop
inc
xor
push
dec
das
out
xlat
je
sub
imul
mov
xchg
xchg
inc
movsb
jb
xchg
sub
es
je
xchg
inc
mov
aad
pop
sub
sub
pop
pop
loop
inc
sub
in
js
adc
test
and
lock
shll
popa
xchg
inc
in
xchg
sub
orl
in
cmp
adc
das
stc
mov
icebp
mov
addr16
jb
sbbb
jae
shll
imul
adc
sub
dec
int3
jle
in
sbb
mov
lods
dec
and
cli
sbb
push
daa
push
mov
cmp
cs
xchg
in
cld
std
aam
xchg
jmp
add
push
imul
mov
push
loopne
and
sbb
mov
scas
jg
mov
shll
push
outsl
jno
pop
xchg
push
loopne
cwtl
sub
push
push
rorl
mov
cltd
adc
adc
pop
cmp
and
fwait
dec
fiaddl
stos
movsb
cltd
mov
jne
imul
xor
flds
outsl
mov
inc
cld
add
pop
invd
fidivs
push
in
mov
mov
add
jecxz
cmp
sbb
arpl
cmp
js
mov
inc
shrl
andl
test
cltd
sbb
notb
push
xchg
orl
cmp
xor
fsubs
push
and
lods
push
xchg
or
sub
cwtl
popf
mov
mov
cwtl
shll
daa
mov
fmuls
adc
cmp
fimull
seto
or
outsb
out
cmp
mov
pusha
pusha
and
mov
addr16
cld
notb
pop
adcb
xor
pop
mov
mov
jecxz
push
lock
mov
push
mov
test
push
daa
push
fadd
inc
popa
jp
jae
shll
jno
and
adcl
jo
push
sbb
mov
je
sbb
scas
repz
adc
popa
mov
and
mov
xchg
xlat
or
aad
jns
out
js
xlat
adc
mov
add
inc
push
xchg
xchg
or
addl
push
inc
xor
lret
movb
xchg
sti
sbb
stos
imul
adc
jl
pusha
mov
adc
or
testl
cmp
aad
mov
jecxz
or
rorl
cmp
add
ds
cmp
addr16
add
int3
jns
mov
pushf
shll
dec
mov
xchg
push
dec
out
jmp
inc
cmpsb
in
lcall
mov
or
sub
mov
mov
hlt
pusha
and
push
xchg
pushf
cmpsl
sub
daa
adc
and
push
jge
push
cli
lea
mov
gs
xor
out
fwait
int
insb
aas
pop
lret
inc
cltd
movsl
push
pop
insl
jns
pop
jp
mov
loope
pop
adc
jne
cltd
inc
loopne
jle
jg
test
js
xor
roll
jns
add
in
sub
adcb
lcall
mov
adc
scas
adc
fcoms
dec
or
jo
andb
cmpsb
sub
adc
nop
lea
jo
and
iret
adc
mov
in
adc
out
jmp
mov
pop
sbb
sbb
dec
jmp
cmc
lcall
pop
js
mov
pop
mov
cmp
mov
mov
inc
sbb
adc
inc
jb
das
pusha
jne
mov
ja
imul
cmp
pop
mov
sti
add
jno
lods
pushf
mov
fstpl
sbb
jecxz
rolb
stos
pop
sub
adc
cli
stos
sarl
sub
repz
adc
add
sti
push
out
out
sub
mov
mov
jb
xchg
nop
inc
arpl
lea
mov
stos
sbb
icebp
or
mov
lods
fistl
push
outsl
jae
sub
out
cmp
and
lods
push
inc
pop
sbb
jmp
cmp
sbb
push
leave
jecxz
mov
pop
sub
in
jl
mov
data16
pop
sub
repnz
mov
dec
sub
out
jp
aas
add
mov
cmp
lods
xchg
or
incb
adc
inc
mov
pusha
jecxz
sbb
or
adc
push
or
mov
xchg
lock
jg
xchg
add
das
ficomps
and
sbb
jp
stos
dec
shr
and
add
xor
push
fcoms
insb
ds
popf
fstpl
icebp
jnp
mov
jmp
pop
idivb
neg
mov
xchg
xor
mov
fwait
je
lret
push
dec
sbb
mov
sbb
mov
int
jge
add
mov
loop
lcall
mov
out
sahf
push
les
mov
lcall
add
and
ficompl
and
repz
sbb
xor
es
loopne
pop
jmp
jns
fsubs
mov
shrl
popa
mov
mov
aam
mov
or
push
inc
lds
cmpsl
pop
pop
adc
xchg
inc
out
xor
adc
cmpsl
jbe
pop
pop
mov
jp
addr16
mov
or
jle
inc
outsb
sbb
pop
lock
xchg
loopne
mov
inc
cwtl
lds
test
pand
fiaddl
fbstp
je
jb
mov
pop
mov
sbb
imul
movsb
mov
adc
popf
fcmovu
add
jo
cmp
xchg
or
push
outsb
leave
fdivrs
in
inc
in
mov
insl
push
and
mov
lret
dec
sbb
cmp
out
jb
cmpsb
cmp
add
leave
cmp
lock
jecxz
or
outsl
mov
test
frstor
jne
je
mov
sar
movsb
dec
push
xchg
dec
scas
mov
cmp
dec
push
and
sbb
jle
inc
test
out
in
cmp
pop
or
mov
aaa
mov
cli
mov
lea
bnd
cs
mov
xor
sbb
icebp
lret
pop
mov
mov
xchg
pop
in
mov
es
mov
jbe
scas
inc
push
pop
inc
je
aas
adc
arpl
insl
arpl
jo
xchg
out
pop
std
and
sub
or
clts
xchg
add
mov
pop
jecxz
mov
or
gs
frstor
movsb
in
mov
adc
movaps
addr16
xchg
adc
dec
adc
lahf
addb
sub
push
aam
js
adc
and
or
data16
jle
mov
inc
adcb
mov
jmp
mov
push
push
mov
data16
push
inc
std
adc
out
idivl
mov
sbb
dec
enter
sar
mov
test
lods
lock
inc
iret
clc
test
add
jo
pop
mov
cltd
inc
mov
xor
jb
scas
rcrb
int3
add
push
cltd
xchg
out
movsl
jg
ja
mov
and
cmpsb
js
ds
ss
cli
adc
xor
lods
or
int3
push
std
decb
lret
nop
stos
aad
push
inc
xchg
rcrb
cmp
mov
cmp
sbb
sahf
sub
pop
xorl
sub
aam
adc
and
and
loopne
jge
les
mov
out
mov
cmp
in
inc
mov
xchg
in
xchg
jp
cmp
jp
mov
lods
jge
cmp
jecxz
je
push
lcall
sbb
js
ror
pop
or
pushf
mov
xchg
ret
sub
push
dec
or
roll
les
dec
sti
rol
lock
jl
mov
dec
addr16
ja
cmp
fists
sahf
mov
jns
sbb
inc
sbb
negl
decb
ret
and
icebp
adc
xor
mov
inc
test
aad
sahf
xchg
js
push
sbb
dec
arpl
and
mov
sub
lret
cmp
push
or
int
cmp
cltd
dec
inc
aas
call
cmpsb
mov
pushf
and
cmp
test
jge
push
mov
popf
andb
jp
je
pop
ret
negl
dec
mov
cmp
stos
xchg
mov
mov
nop
outsl
and
mov
jns
fisttpl
dec
in
sbb
mov
mov
jp
scas
mov
out
gs
fwait
mov
inc
jle
js
les
sbb
insl
xor
xor
xchg
mov
push
lods
xor
cwtl
daa
mov
jle
in
cli
je
cld
loope
in
fidivrs
push
stc
cltd
or
stos
cld
push
out
test
push
fcomps
pop
xchg
jl
mov
push
in
inc
xor
mov
sub
mov
loopne
clc
leave
xor
mov
xor
cld
out
add
jb
adcl
cmp
push
shlb
push
mov
xchg
jmp
dec
push
test
outsl
in
xchg
stc
call
sub
ficompl
arpl
clc
xchg
pop
mov
adc
xor
aaa
stos
push
push
ficompl
loopne
lds
aam
fdivl
dec
dec
push
add
ja
ljmp
outsb
shlb
into
cmp
addr16
fstl
leave
test
lret
sub
andl
hlt
loope
int3
in
imul
nop
push
nop
cltd
push
leave
neg
jg
shlb
cmp
jle
shlb
jle
jl
mov
jle
add
mov
pop
add
mov
push
jno
xchg
iret
xchg
ret
sbb
adc
mov
mov
insl
je
xchg
out
popf
adc
push
pop
jg
push
jb
je
mov
jbe
mov
imul
ds
pop
jns
dec
adc
dec
cmp
jns
loope
sbb
hlt
adc
ficomps
int
shll
stos
cld
push
sub
mov
and
mull
fdivr
aaa
rclb
into
sti
mov
movsb
shr
movsb
sahf
mov
adc
xadd
push
push
insb
lods
aaa
inc
and
xlat
pop
aaa
iret
adc
leave
xor
pop
cmp
mov
cs
xchg
test
stc
mov
iret
jno
pop
mov
rolb
test
jns
ror
inc
cmp
push
mov
adc
or
cmp
fdivrl
mov
pop
sbb
xchg
fiadds
or
cmp
fcomps
sbb
shl
xchg
lahf
pop
test
pop
movsb
jbe
mov
xchg
negb
fdivs
pop
mov
pusha
leave
jae
hlt
ret
fwait
pop
and
pop
mov
mov
repz
add
divb
xchg
adcb
mov
testb
xchg
mov
mov
cmpsl
and
cmp
insl
mov
imul
or
sub
daa
or
neg
pop
pop
jo
mov
cs
lahf
mov
cld
cmp
popa
movsb
rep
xor
ljmp
pop
add
clc
adc
pop
jne
andl
cmp
addb
stc
xor
cmpsl
imul
adc
lcall
movsl
inc
popf
test
sub
daa
mov
ja
loop
fwait
and
rcl
sub
mov
cli
jno
cmp
xor
mov
clc
and
ret
cmp
inc
sub
js
pop
ljmp
xor
pusha
lcall
popf
gs
add
xor
xlat
sbb
xor
xor
jl
fs
and
bound
sbb
mov
push
enter
xchg
mov
adc
dec
cmpsb
cmp
inc
cmc
repnz
sahf
cltd
imul
data16
mov
fcmovne
xchg
shrb
adc
and
fcompl
push
imul
in
in
mov
das
jge
push
jg
js
fnstenv
daa
or
lret
and
je
mov
scas
pop
add
outsl
xchg
sahf
lret
xchg
ffreep
stc
je
dec
pop
mov
dec
cmc
push
fsubrs
or
inc
shlb
add
dec
mov
lea
jmp
hlt
xchg
insl
fildl
loopne
add
outsb
mov
jnp
ljmp
push
pop
inc
addr16
pop
mov
and
push
sub
into
and
rorl
push
out
adc
push
lods
lods
jae
jae
das
shll
push
dec
add
pop
pop
mov
mov
sub
xchg
lcall
dec
mov
fldl
insb
mov
add
mov
inc
pop
arpl
daa
or
dec
daa
adc
movsl
movsb
mov
pop
fidivs
inc
pop
push
arpl
xor
ret
xlat
rorb
mov
pop
movsb
or
pop
ret
xchg
jmp
out
scas
pusha
stc
jmp
push
mov
test
lret
pop
or
fwait
pop
xchg
mov
insb
sub
push
add
sub
mov
cs
addr16
lea
sar
jl
invd
adc
cmovs
icebp
ret
into
popf
inc
mov
sahf
cltd
or
push
xor
or
pop
lahf
lcall
push
sbb
shll
nop
shlb
int
xchg
pop
es
xchg
cmp
arpl
out
cmp
aad
repnz
nop
jbe
mov
aaa
rolb
jp
in
test
mov
xor
leave
xchg
cmpsb
push
and
lds
cmpsl
pushf
fsubrs
mov
in
jge
xchg
dec
cmp
roll
out
out
adc
mov
mov
out
pandn
rclb
pop
xor
pop
jle
cmp
movsb
es
test
out
cli
mov
imull
add
stos
shll
mov
mov
adc
xchg
mov
sub
inc
xor
inc
cltd
push
adc
dec
aad
aad
je
fisubrs
dec
orb
aas
adc
dec
movsb
cmp
lods
add
push
loopne
xchg
adc
lcall
sbb
enter
push
fldt
out
or
add
stc
lock
loopne
jge
jl
push
cmpsl
adc
jnp
pop
iret
push
bswap
add
insl
pop
das
mov
jbe
bound
add
jecxz
xchg
lret
jno
mov
pop
cmp
inc
insb
cmpsb
ja
jns
daa
mov
test
mov
das
bound
adc
lret
jl
inc
adc
lods
cmpl
mov
test
aas
sti
mov
cmp
icebp
ret
dec
jae
ss
cmp
jecxz
mov
adc
loope
inc
sbb
dec
pop
fldenv
mov
or
cld
nop
push
cmc
inc
jae
add
test
push
sbb
js
shll
inc
out
sbbb
xchg
rcll
fdivrl
mov
jecxz
or
popf
hlt
xor
popa
cmc
ror
lds
adc
js
dec
jmp
jg
add
mov
adc
and
xchg
testl
push
mov
and
rcll
xchg
sbb
jge
xorl
iret
push
movsl
cmp
add
shrb
add
test
xchg
mov
cmp
stos
inc
sqrtps
fs
gs
mov
and
jb
into
xchg
and
loop
pop
cmp
add
out
imull
icebp
xor
mov
bound
cmc
push
mov
mov
fistps
ret
sbb
addr16
push
movsl
iret
aaa
or
sbb
mov
das
ljmp
shl
xlat
sbb
ret
push
lahf
icebp
push
jmp
jmp
adc
or
dec
cmpb
shl
mov
mov
mov
loope
repz
mov
scas
mov
xor
add
cmc
push
cmc
stc
jmp
sbbl
pop
add
xor
sub
xchg
push
out
testl
xor
stc
lret
dec
shll
imul
and
jo
cmp
mov
lcall
add
mov
shll
jnp
jmp
xchg
jo
jp
lcall
pop
xchg
pop
sbb
fs
in
cld
sbb
mov
mov
inc
xor
nop
inc
out
out
adc
aaa
mov
mov
cmp
jle
hlt
call
repz
cwtl
movsb
movsl
cmp
lcall
fwait
cmp
mov
repnz
notl
lea
cmp
in
and
sbb
cmp
outsb
repnz
std
jg
and
and
cmp
lds
mov
test
jge
dec
aad
popa
mov
in
rorl
lcall
pop
shrl
push
jl
fistps
clc
test
inc
movsb
cmp
loope
sub
mov
lods
daa
push
mov
repnz
adc
sbb
dec
movsl
mov
inc
nop
test
adc
cmp
cmp
sub
xchg
push
subb
push
test
lret
cmp
test
lret
push
aaa
call
dec
daa
pop
ds
rcr
lea
xchg
les
inc
fcoms
insl
fsubs
push
add
inc
sbb
sbb
pop
icebp
lods
arpl
daa
jae
int
sbb
dec
mov
sbb
cmp
xchg
adc
inc
mov
mov
push
mov
cmp
insl
inc
pop
push
sub
push
sub
fistpl
xor
sub
cmp
mov
or
arpl
out
jp
xchg
mov
out
and
nop
add
scas
sahf
and
dec
add
inc
or
push
insl
cs
add
repnz
inc
jae
movsl
jae
clc
or
addr16
fbstp
inc
insb
dec
mov
in
jecxz
fs
mov
es
clc
lret
inc
mov
sbbb
test
mov
mov
fldl
and
icebp
fwait
pop
pushf
ret
inc
pop
pop
or
cli
call
rcll
mov
nop
cmp
mov
rcrl
je
xor
mov
mov
mov
jp
mov
pop
dec
out
repz
jno
cltd
cmp
scas
mov
jp
push
mov
mov
or
pop
pop
lahf
adc
mov
in
out
rolb
cld
cltd
jmp
jns
inc
pop
cmp
xchg
hlt
xor
and
dec
jno
frstor
rol
arpl
push
mov
mov
cmc
pop
sbb
iret
out
mov
adc
jne
int3
addr16
jnp
and
imul
faddl
xchg
xchg
push
js
mov
arpl
mov
pop
andl
sbb
pop
mov
xor
jecxz
lods
push
mov
es
sub
fwait
lods
in
sbb
jmp
out
aas
mov
hlt
xor
jae
pop
sub
aas
add
adc
loope
mov
xchg
dec
dec
pushf
out
or
adc
shlb
jl
cmp
sbb
les
insb
aam
push
jns
sbb
inc
scas
nop
mov
xor
leave
sar
data16
sbb
pop
inc
fidivrs
add
xor
xchg
jg
dec
push
push
std
filds
push
xor
xor
jecxz
pop
sbb
pop
mov
adc
pop
out
push
fstl
mov
mov
add
inc
ficoml
nop
or
in
js
mov
ret
je
mov
cli
test
lods
push
test
cld
jmp
mov
pop
nop
adc
pop
repz
ds
icebp
mov
pop
andb
out
adc
push
loopne
cmp
mov
pop
bound
push
out
ljmp
pusha
in
add
xlat
aad
rcll
mov
fcmovu
fildll
lcall
es
dec
jl
jp
push
mov
cmp
loop
mov
cmp
lcall
sar
test
dec
add
sbb
int3
and
jp
dec
lret
push
cmpsb
mov
js
xor
and
inc
pop
test
lret
fistpll
jmp
xchg
dec
dec
pop
loop
adc
sbb
loope
adc
das
push
btc
test
jecxz
jl
jbe
sti
sbb
sbb
aad
popf
imul
rolb
xor
mov
adc
xchg
test
cli
fldl
pop
fisubl
lods
pop
inc
mov
jb
dec
pop
or
xchg
mov
or
aaa
inc
xor
and
shlb
inc
adc
aas
addl
ret
fwait
pop
and
mov
and
lea
pop
mov
adc
xchg
pop
cs
sarl
cld
sahf
dec
mov
cwtl
es
sahf
dec
xlat
mov
xchg
int3
testl
xor
mov
xor
inc
inc
or
jnp
pop
movb
pop
push
jne
in
and
mov
dec
fiaddl
fmull
add
push
test
push
or
xor
cmp
test
cmp
cmp
mov
pop
in
imul
jns
das
mov
mov
mov
push
imul
jl
mov
push
mov
dec
pop
sbb
push
jp
iret
loopne
push
cmp
insl
xor
jg
scas
int
in
add
jecxz
push
pop
imul
out
hlt
movsb
dec
cmp
xchg
pop
mov
clts
pusha
mov
iret
into
sub
push
ja
rcrl
int3
or
scas
adc
mov
mov
push
movsl
lods
push
xchg
mov
inc
lods
xchg
push
sarb
lahf
ss
out
or
cmp
xor
movsb
dec
sub
add
mov
clc
inc
fnstsw
xor
nop
push
and
dec
cmp
idivl
xchg
int
sbb
enter
fidivrl
dec
and
std
psubusb
out
push
add
xchg
mov
mov
xchg
pop
mov
sub
xor
leave
pusha
mov
inc
mov
push
xor
jmp
lcall
aaa
pop
mov
icebp
int
nop
jbe
dec
xchg
out
fs
movsb
incb
lods
pop
sahf
andps
jno
icebp
rorl
dec
mov
pop
call
call
subb
outsb
aas
xor
int
pop
ficomps
pop
xorl
mov
dec
sbb
repnz
pop
jg
add
pop
adc
jg
cmpsl
imul
mov
sbb
push
jle
cmp
cli
mov
pop
jmp
hlt
and
roll
mov
adc
test
xor
pop
insb
push
imul
hlt
outsl
enter
out
movsl
sti
xor
pop
lods
and
sub
cwtl
negb
fdivrl
or
ror
imul
stos
jecxz
cmp
orb
mov
cld
mov
out
cld
mov
mov
sbb
cmpb
repnz
test
pop
jae
jmp
jae,pt
outsb
and
lret
xchg
and
imulb
mov
mov
lahf
and
xor
dec
pop
mov
dec
cmp
fisubrl
das
add
adc
jae
pop
mov
cs
popf
xchg
cld
adc
scas
mov
xchg
mov
daa
pop
cmp
mov
adc
mov
inc
and
sub
mov
fistps
add
push
push
scas
jae
sub
shrl
scas
mov
mov
and
push
cs
fdivrl
int3
or
sahf
ja
cmpsl
rorb
shrb
push
or
mov
fs
fs
sbb
xchg
cmp
shl
or
insb
loopne
mov
aam
pop
nop
mov
push
subb
or
mov
outsb
mov
or
out
stos
dec
andb
or
jecxz
jecxz
xor
in
rcll
das
cwtl
rorb
in
xor
dec
pop
mov
dec
mov
ja
inc
cs
pop
xor
add
pusha
fisubs
out
sub
lcall
cmp
mov
inc
decl
inc
es
jae
sub
rorb
inc
inc
lahf
dec
sti
lds
push
fistl
push
mov
mov
xorb
mov
lahf
fildl
gs
outsl
mov
fwait
mov
aam
popa
and
xchg
repz
inc
jl
add
pusha
scas
jg
lods
push
fnstcw
jl
lods
out
lods
mov
jg
mul
lcall
cli
jne
ss
cmp
and
int3
popf
and
int
push
jmp
rcrl
push
mov
and
xchg
xchg
sbb
fcmovne
jmp
pop
inc
lret
subb
sbb
xor
dec
push
out
cli
sub
stc
xor
dec
popa
gs
push
cwtl
xor
cmc
cmp
dec
insl
imulb
mov
inc
data16
mov
xor
mov
adc
sbb
lcall
sub
loop
mov
enter
xchg
mov
pop
jb
pusha
cmp
sub
jp
sahf
adc
push
mov
popf
ljmp
sub
push
xchg
mov
or
stc
mov
push
push
xchg
cs
andb
das
mov
dec
cld
addr16
jle
cmp
inc
or
aad
lock
popa
ja
jp
orl
xlat
lock
sbb
or
movsb
aas
sub
arpl
inc
aad
dec
loope
mov
subb
xchg
mov
jge
arpl
lods
dec
inc
inc
push
inc
jl
inc
or
leave
sub
clc
adc
ret
mov
push
jg
arpl
jae
mov
xor
xor
adcb
ss
outsl
int3
aad
movsl
inc
mov
sub
fs
rcrb
fldt
dec
andl
push
mov
jne
inc
sub
add
or
dec
dec
test
jae
sbb
add
sbb
sahf
sbb
add
xchg
inc
xchg
addr16
adc
aaa
outsb
xor
and
adc
stos
jmp
adc
popa
nop
dec
jp
fldl
add
dec
shrb
ja
jnp
pop
sbbl
cmovae
mov
adc
nop
add
adc
jo
jno
jl
xor
or
sub
cmp
or
enter
inc
movsl
into
call
lcall
cli
mov
and
dec
mov
and
mov
sub
stos
cltd
lods
fnstenv
nop
movb
sti
mov
pop
cld
pop
bound
mov
inc
int
in
dec
aas
sub
inc
stc
dec
push
aas
or
stos
popa
insl
pop
mov
out
dec
xchg
dec
and
ficoms
imul
dec
test
sbb
sub
int3
dec
and
pop
lods
xchg
mov
fs
cmp
repnz
leave
xor
push
xor
mov
cmp
mov
mov
inc
roll
mov
popf
inc
or
addr16
adcb
inc
lock
popa
sub
stos
push
in
push
pop
or
xor
fisubs
daa
jmp
jne
pop
fldcw
jae
outsl
sub
mov
xor
inc
fadds
adc
out
invd
stos
mov
sub
push
cs
loop
loope
clc
in
push
fisttpll
aam
clc
adc
push
add
cmp
test
jg
mov
pop
clc
fsubrs
lcall
cmp
call
rorl
and
testl
mov
or
rorb
std
ret
pop
mov
xchg
mov
fildll
adc
sbb
leave
je
subb
sbb
mov
xchg
add
inc
sbb
xor
shlb
lods
xchg
mov
fadd
push
xlat
rcr
adc
repz
jbe
xchg
sbb
leave
push
ss
lods
jge
and
sti
arpl
icebp
pushl
xor
pop
sarb
stc
mov
dec
repnz
push
sbb
add
mov
insl
arpl
sahf
mov
push
jg
fdivr
lcall
imul
dec
ljmp
xchg
sub
pop
jg
insb
cld
xor
pop
add
add
mov
test
add
lds
xor
xor
fsubrs
repnz
test
loopne
test
js
push
lcall
inc
jns
repz
out
es
insb
inc
dec
jmp
arpl
iret
les
mov
lret
arpl
or
cmpsb
xchg
xor
cmpsl
shrl
inc
dec
iret
sbb
inc
repz
mov
push
jo
test
or
mov
cs
aas
enter
mov
sub
sbb
add
adcb
adc
hlt
mov
cmp
aaa
cld
dec
pushf
lock
or
add
mov
cli
push
lock
sti
jge
cld
sarb
inc
sbb
scas
add
test
imul
outsb
out
fists
ljmp
and
orl
inc
imul
xchg
push
adcb
jge
jnp
sbb
outsl
jle
inc
lcall
jae
adc
inc
and
jg
test
cli
sahf
in
mov
inc
dec
push
sbb
pop
jle
movsb
mov
mov
dec
test
std
ret
and
iret
cltd
je
out
fs
fcomps
sti
inc
je
cmpsb
rcrb
inc
cli
clc
inc
popf
sub
adc
and
and
mov
lods
shrb
cmp
mov
xchg
orb
cmc
arpl
mov
jle
pop
loope
xchg
sub
outsb
data16
scas
aam
xor
mov
sbb
das
lret
add
jle
cmp
add
jecxz
loopne
adc
mov
js
adc
jns
xchg
int3
inc
inc
cmc
dec
lock
jge
dec
adc
pop
cmp
xchg
sahf
mov
push
cmpsb
ret
addl
adc
movsl
pusha
das
push
inc
or
sbbl
in
pop
lret
mov
pushf
pop
aam
mov
jmp
push
sub
pushl
cli
mov
or
and
jne
filds
mov
into
add
adc
adcb
and
add
xchg
sub
daa
lahf
push
push
bound
inc
lods
cmp
out
inc
sahf
imul
sub
add
mov
ds
xor
loope
fisubrs
pop
xchg
sub
out
and
sub
lods
testl
push
sbb
popf
sbb
cmp
lret
xor
and
divb
cltd
ret
adc
in
and
mov
outsl
enter
and
mov
scas
or
pop
xlat
enter
xor
inc
jle
test
mov
xrelease
imul
or
out
jecxz
movsl
imul
movsl
pop
das
inc
inc
xorl
je
sbb
ds
sub
in
jo
xchg
push
sub
sub
jmp
scas
jmp
or
es
arpl
dec
push
jg
lret
sbb
or
enter
mov
push
icebp
stc
or
pushf
ret
sbb
je
ja
adc
jo
std
in
or
pusha
popa
arpl
sbb
xor
mov
mov
xlat
pop
rorl
arpl
pop
aaa
repnz
sub
mov
push
outsl
mov
cmp
call
into
into
mov
cmp
cld
lea
cmp
scas
addr16
in
sbb
push
aas
mov
jge
loop
repnz
push
jp
jle
cmp
pop
ret
pop
scas
das
out
ljmp
stos
sub
dec
push
mov
dec
jb
dec
rcll
rolb
inc
mull
add
xchg
cmp
arpl
dec
jge
insb
movsl
rclb
pop
inc
lahf
mov
sarl
repz
dec
loope
lcall
imul
jae
mov
cmp
pop
xor
adc
lret
loop
outsb
imul
pop
rcll
xchg
js
test
inc
mov
mov
pop
add
jecxz
ja
lcall
cli
or
rcll
lea
mov
push
pop
fbld
mov
pop
ficoms
mov
mov
ret
psubusw
sbb
rclb
pop
ret
insl
cmp
sbb
xor
mov
je
into
test
pop
cmp
mov
jge
js
push
fcmovb
adc
dec
mov
jne
mov
in
add
sub
sti
dec
cs
mov
jmp
pop
sub
lds
stos
sti
lahf
xor
test
mov
in
enter
mov
mov
daa
mov
xor
add
mov
faddl
jge
inc
adc
sahf
shr
jmp
test
sub
into
lahf
sub
inc
mov
pushf
int
out
ss
xchg
out
popf
cwtl
inc
pop
cs
mov
call
mov
sub
mov
xchg
jne
cmp
xchg
cwtl
imul
push
pop
and
mov
cmp
or
xchg
ficomps
push
jg
jo
cmp
pop
xor
loop
sub
lahf
xchg
push
enter
xor
cltd
int
sub
inc
xchg
or
pop
shll
pop
push
mov
cmp
xor
rcl
lock
cmp
shrl
add
std
lods
xchg
popa
out
scas
mov
js
xchg
xor
or
jecxz
sbb
cmpsl
outsl
pop
daa
iret
pusha
icebp
dec
cli
and
xchg
xlat
nop
fsin
shrb
nop
jne
insl
in
movsb
push
loope
shlb
sub
pop
sub
test
xor
xor
and
ret
cld
pop
shrb
jmp
mov
xchg
add
jecxz
ret
adc
mov
mov
dec
mov
ja
mov
cmp
shlb
cmpsl
mov
inc
mov
or
mov
xor
loop
and
jns
pushf
test
and
sbb
dec
dec
cmp
ret
call
or
pop
mov
imul
mov
sub
push
subb
xchg
sub
icebp
imul
cmp
sbb
enter
push
mov
dec
xchg
and
mov
push
sub
or
pop
out
sbb
inc
loopne
inc
jno
loop
fs
pop
pop
gs
jae
iret
call
aas
xor
movsl
int3
push
cmpsb
sbb
mov
sub
mov
add
jp
or
out
jl
loop
or
lods
adc
and
or
jecxz
and
jle
lock
sarl
mov
xchg
cld
and
movsb
fcoms
sbbb
arpl
in
dec
loope
sarl
lret
cmp
repnz
insb
js
adc
es
sbb
add
int3
xchg
dec
and
pushf
sbb
aad
into
ds
mov
push
cs
sbb
stos
cli
jecxz
pop
cmp
lds
inc
xchg
stos
aad
pop
subl
adc
mov
pop
std
sbb
cmp
leave
jmp
int3
aad
fldcw
out
push
out
xchg
dec
cmp
rorb
arpl
jae
cmp
mov
and
aaa
mov
dec
sbb
or
in
xchg
addr16
lods
fisubrl
sub
jle
int3
sbb
and
dec
mov
sub
jbe
aad
and
ljmp
clc
das
adc
test
cld
inc
outsb
in
and
jns
dec
jae
into
sub
ss
mov
pop
repz
std
xchg
sub
rcr
fstpt
leave
xor
mov
dec
sub
xor
pop
push
mov
pop
test
idivl
xacquire
xlat
push
sbb
sub
jns
and
xchg
xchg
push
jne
lahf
xchg
push
addl
jecxz
sub
cmp
pop
mov
fistpl
dec
pop
shll
int
rclb
or
mov
cmc
es
mov
into
sub
inc
xchg
sub
dec
xor
xchg
mov
sbb
aas
or
out
jno
lret
test
push
inc
mov
loope
lret
test
icebp
cmp
add
test
mov
imul
jne
movsl
hlt
fs
fwait
out
sub
aad
hlt
mov
lret
add
inc
jnp
pop
pop
push
xchg
push
mov
push
aas
gs
cmpsb
sbb
xor
int3
mov
testb
imulb
xor
test
dec
dec
sub
std
jge
lret
popa
xor
add
iret
xchg
adc
add
lds
ret
pop
test
rorb
cmp
scas
mov
jbe
movb
jnp
xor
add
movsb
and
jae
cltd
repnz
arpl
fisubrl
sub
shll
xchg
aaa
bnd
jl
jae
cmp
pop
scas
pop
imul
xchg
sub
icebp
popa
fistl
notl
addr16
cmpsl
sbb
icebp
add
mov
lock
cmp
mov
jl
jnp
lods
call
dec
inc
dec
push
mov
add
and
scas
push
in
pop
cmpsb
and
sbb
pop
aam
outsl
jmp
jnp
ljmp
inc
xchg
xor
xchg
jg
imul
aaa
mull
pop
sbb
lret
js
es
add
push
cli
dec
adc
hlt
mov
out
add
pop
fucom
xor
jo
mov
in
push
inc
hlt
mov
sahf
cltd
or
push
sub
adc
ret
mov
add
adc
ljmp
mov
rcrl
dec
out
rorl
idiv
inc
inc
cmp
cmp
push
hlt
fstpt
ficoms
lock
arpl
xchg
xchg
xor
pop
pop
cmpl
pushf
and
jg
sub
jmp
mov
dec
dec
stos
dec
jle
inc
test
dec
sub
insb
add
in
stc
jno
lret
inc
lea
into
pop
lods
fs
or
inc
test
insl
inc
adc
xorl
sub
pop
stos
in
pop
pop
and
popa
outsl
fbstp
cmpsb
and
cmp
fwait
fnstsw
sahf
adc
xchg
jns
aaa
sbb
push
mov
xchg
fistps
or
lea
xor
and
mov
shlb
movsl
aaa
jo
or
adc
push
aaa
add
add
add
loope
adc
jno
nop
cs
sbbl
xchg
xor
je
bound
cmp
xchg
ret
repz
test
mov
sub
push
out
in
add
adc
mov
out
xor
stc
test
in
cmpb
jmp
push
add
shrl
fisttpll
xchg
mov
test
stc
shl
jns
cmp
jns
lods
ds
shl
and
mov
lahf
int
or
mov
mov
jb
lret
lret
mov
lods
or
hlt
mov
out
into
lret
mov
dec
bound
std
add
dec
inc
iret
cs
sbb
pop
ja
xchg
sbb
adc
aaa
sub
cmp
int3
sub
dec
pop
or
lea
mov
sti
lahf
mov
imull
loop
jnp
and
fs
ret
xchg
test
add
cmpsb
jae
gs
imul
daa
pop
mov
mov
mov
daa
inc
outsl
or
dec
ljmp
adc
fstpt
test
into
aaa
nop
jp
mov
mov
cmp
cmp
cmpsb
dec
icebp
scas
jbe
call
or
pop
into
push
push
xchg
rcll
test
adc
mov
xlat
sub
push
pop
or
call
test
or
pop
lods
or
icebp
sbb
pop
add
mov
mov
mov
push
mov
sub
sbb
adc
shrb
iret
mov
dec
repnz
in
push
xor
xor
sbb
or
fistl
in
pusha
sub
test
fwait
mov
mov
mov
test
dec
jnp
cmp
popa
adc
pushf
gs
sub
stos
or
imul
lahf
jns
clc
xchg
ficoms
loop
mov
lods
or
fdivl
es
add
je
cmc
orl
pop
jno
test
push
call
dec
xor
mov
sarl
or
and
mov
and
fs
imul
pop
jae
or
fnstcw
pop
mov
lea
gs
adc
and
jae
xor
mov
shll
adc
call
jbe
ja
out
mov
pop
int3
and
sub
mov
dec
cmp
gs
jmp
jle
into
lock
arpl
cmp
dec
push
jbe
js
bound
fdivs
es
cmp
jne
orl
testl
inc
in
je
in
xor
push
dec
arpl
inc
sbb
mov
std
mov
scas
pop
iret
inc
mov
pop
jnp
xchg
xchg
int3
sub
xor
or
je
and
test
nop
jbe
std
pop
mov
das
sub
push
fisttps
xor
test
dec
shlb
xchg
out
mov
mov
cli
loop
xchg
sarb
imul
push
fildl
adc
mov
add
and
xchg
adc
mov
fstpt
push
dec
movsb
add
call
xchg
xchg
xorb
stos
push
jl
testb
arpl
insl
sub
repz
jle
sbb
fsubp
xchg
in
xchg
aad
and
add
fisttps
dec
nop
push
shlb
push
cmp
dec
sub
inc
sahf
inc
mov
push
stos
and
aam
jno
popa
push
shll
aam
fcmovnb
jb
xchg
pop
incb
or
int
xchg
mov
sub
stc
push
scas
das
inc
jo
mov
fwait
sbb
ret
jo
xor
stc
movsb
mov
push
aad
add
mov
cmpsl
fwait
mov
stos
jecxz
enter
mov
loopne
pop
mov
test
sub
sub
lds
movsb
repz
fs
sbb
in
pop
bsf
sar
ret
xchg
scas
out
dec
sub
loopne
sbb
dec
aaa
rcl
mov
or
ja
les
adc
mov
xor
inc
mov
xchg
sbb
cmc
loopne
cmp
shrb
jne
dec
sbb
ja
pusha
push
lret
das
pop
mov
pop
mov
in
mov
fs
subl
aas
aaa
adc
cmpsb
dec
sub
mov
out
in
add
or
not
aam
sub
cmp
xchg
shll
shlb
mov
xor
or
jne
fisttpll
in
daa
cmp
push
call
cmpb
push
aad
ljmp
dec
stc
stos
fisubl
pushf
fcoms
gs
or
xchg
mov
cmc
fs
out
lret
rcrb
dec
mov
inc
push
push
rclb
fldt
stc
lahf
sub
movsl
pop
jne
xchg
cmpsb
add
cmc
jne
stc
add
sub
addr16
push
push
dec
push
ret
xchg
push
cmp
mov
pop
scas
adc
or
test
aad
loop
out
cmp
scas
xchg
je
cwtl
jmp
xchg
loopne
and
xor
mov
sbb
mov
jo
sarl
lret
xchg
ss
cwtl
cmp
inc
hlt
jb
js
loopne
push
iret
roll
and
popl
ret
inc
xor
adc
clc
or
outsl
push
es
xchg
push
xchg
dec
repz
sbb
jbe
adc
dec
pop
mov
jb
xor
cmp
push
jp
dec
add
push
std
mov
loopne
xchg
pop
pop
pop
loopne
jno
pop
andl
inc
out
dec
dec
push
adc
sub
push
scas
imul
mov
push
inc
mov
mov
ss
leave
mov
shlb
dec
xor
mov
enter
out
out
push
jl
insb
into
shlb
outsl
inc
xchg
nop
unpckhps
add
inc
or
ret
jno
test
dec
aas
in
daa
test
and
pop
jns
sub
add
ss
push
dec
scas
inc
addr16
outsb
xor
in
rcrb
mov
xchg
lea
test
sub
lahf
cmpsb
jl
add
jg
into
sub
adc
pushf
sbb
stc
arpl
push
cmp
std
imul
cmpsl
add
push
test
aam
jecxz
mov
jp
lret
xorb
cmpsb
lock
popa
adc
push
rorl
gs
mov
sub
push
push
sbb
cli
sbb
inc
loope
add
or
loop
add
shll
pop
sbb
addr16
pop
imul
addr16
je
adc
pop
inc
push
jp
loope
scas
push
push
bound
and
stos
ret
insl
mov
sti
xchg
ficompl
mov
filds
sbb
inc
xor
popf
jge
inc
imull
out
out
sub
ss
xchg
push
mov
inc
push
jno
push
imul
inc
add
sbb
push
dec
jns
push
lea
test
adcb
cmpb
ret
add
jns
shll
stc
fwait
sbb
cmp
movsb
push
push
fs
dec
stos
or
test
inc
adc
fs
inc
push
jae
xchg
subl
dec
addl
mov
pop
dec
dec
repz
cmp
jg
lea
mov
mov
sti
aad
fimull
leave
movsb
xorl
int
and
aad
add
mov
dec
cmp
iret
repnz
clc
rcrb
jo
pushl
sar
inc
mov
inc
mov
aam
adcb
pop
repz
into
cmp
xchg
cld
dec
outsl
dec
push
jp
out
ljmp
jo
lahf
xor
pop
into
adc
inc
rol
pop
jle
mov
lret
lahf
fstl
loope
cltd
jb
and
push
clc
and
push
mov
add
mov
mov
test
cmpsl
push
out
outsb
in
out
xchg
js
mov
mov
jne
scas
enter
xor
jbe
sbb
jp
jno
pop
sub
mov
and
lds
ljmp
arpl
test
mov
jg
frstor
push
mov
mov
or
std
xor
adc
sub
mov
call
lahf
sti
call
call
scas
push
pop
sbb
mov
mov
repz
jge
mov
icebp
mov
cmc
ret
and
cmp
jl
rclb
pop
mov
xchg
fiaddl
jae
push
imulb
mov
daa
jne
das
add
mov
sbb
aam
cmpsb
and
and
cli
push
jnp
sub
or
and
inc
ljmp
imul
icebp
lods
inc
push
push
sub
repz
outsl
fnsave
lret
test
sbbl
or
scas
inc
ja
ret
nop
incb
fisubrl
imul
insb
jl
fcoms
mov
mov
out
insb
push
jl
lods
fisubrs
dec
mov
xlat
rcll
insl
and
jo
loopne
adc
jle
xchg
pop
dec
sub
setb
repnz
adcl
outsb
jnp
lds
sbb
ret
inc
push
mov
push
fldenv
addr16
cwtl
mov
inc
pop
loope
cmp
aam
daa
imul
add
in
cltd
jmp
movsb
pop
mov
jbe
scas
les
movsl
jno
clc
gs
movsl
loop
pop
jge
push
cli
and
loop
sub
jne
cmpsb
jl
bound
bound
nopl
sub
jmp
xchg
incb
ss
data16
mov
add
sbb
std
daa
shlb
lock
scas
mov
sbb
push
add
mov
push
lcall
adc
xchg
les
arpl
pop
push
push
push
cmp
shll
xchg
test
jge
mov
aaa
mov
mov
cmp
cmpsl
rcl
push
das
imul
out
jl
imul
push
mov
add
pop
dec
adc
sbb
cld
lret
sub
pop
mov
sub
aad
add
ds
loopne
rcll
stc
cmp
mov
or
mov
fcoml
popa
fs
push
or
xor
fcomi
dec
inc
clc
int3
cmp
int3
cmp
pop
cmp
add
inc
add
cld
inc
add
mov
repnz
xor
sti
add
ret
scas
fcomps
in
popa
fwait
xchg
aas
mov
bound
xor
jae
inc
fwait
jle
jne
fdivl
dec
jnp
add
inc
mov
inc
or
xor
lret
xlat
test
movsb
add
outsb
sti
aas
or
mov
pop
test
dec
push
jno
pushf
into
inc
xchg
clc
pop
daa
js
or
scas
test
fdivl
mov
or
mov
push
fstpl
inc
pop
lret
inc
lea
sub
mov
in
jne
and
mov
stos
sbb
mov
stos
repz
je
ja
stos
dec
imul
insl
loope
in
cmpl
mov
cltd
xchg
pop
rcll
jae
pop
jb
pop
movsb
push
insl
dec
mov
in
clc
jecxz
fistpll
cmp
lret
rcl
arpl
mov
xor
push
mov
je
subl
sub
ucomiss
gs
jne
inc
pop
daa
mov
xchg
xor
jbe
pop
sahf
stc
pop
fdivs
sub
sbb
enter
push
out
rolb
or
xlat
pop
test
ret
or
or
and
stos
inc
xchg
xor
jne
ret
or
inc
mov
mov
dec
ljmp
xchg
push
rcrl
push
jnp
mov
add
mov
arpl
clc
aaa
shlb
fdivrl
inc
push
xor
rcrb
jge
xor
push
loope
push
out
testl
or
jle
xchg
mov
mov
movb
rep
sbbb
pop
pop
add
cld
iret
or
cmc
fyl2x
sub
mov
push
xor
mov
jno
mov
int3
lds
mov
outsl
push
lock
inc
jge
mov
nop
pushl
inc
sahf
xchg
mov
pop
inc
in
stos
mov
dec
add
repnz
push
mov
pop
mov
dec
mov
xor
insb
daa
pop
cmpsl
fsubs
adc
popf
pop
cs
inc
pusha
add
mov
push
jecxz
inc
out
jbe,pt
test
ss
aam
mov
das
mov
aad
jae
xlat
shr
pop
das
xlat
xchg
dec
adc
mov
add
add
pop
sub
sarl
mov
inc
inc
in
ficoml
jbe
repz
andl
pop
sbb
in
fbstp
pop
scas
adc
pushf
xor
mov
stos
fs
or
les
in
out
in
jl
scas
jmp
or
add
add
cmpsb
adc
inc
sbb
jmp
jno
sub
or
loop
mov
mov
add
mov
push
jo
test
inc
add
sub
jge
inc
push
sbb
data16
mov
mov
or
mov
inc
ss
jmp
push
push
inc
xchg
cmp
fisubl
outsb
xchg
scas
adcl
xor
aaa
pop
pop
add
faddl
repz
jmp
in
mov
mov
fdivrl
mov
cmc
add
bound
imul
xorl
or
and
outsb
pop
mov
cmp
xlat
loope
xor
push
mov
jg
adc
jbe
push
dec
das
sbb
jecxz
mov
pop
push
adc
mov
shll
add
pop
bound
push
mov
call
mov
adc
mov
rcrl
arpl
aas
sub
sbb
mov
stc
stos
ret
push
sarb
repnz
ret
adcb
in
neg
rcr
orl
cmp
int
aas
leave
leave
xor
subb
fstl
outsb
fbld
sub
sbb
dec
add
and
aam
cmp
push
mov
sub
mov
xchg
divb
xchg
loop
fisttpl
imulb
fistps
mov
lret
push
mov
aaa
mov
push
repnz
push
inc
mov
push
dec
mov
mov
xor
ljmp
add
mov
dec
sbb
pop
out
add
pop
xor
enter
mov
das
mov
or
fdivl
gs
pop
int
push
add
adcl
add
add
ret
mov
cmp
adc
sub
xor
pop
sub
pushf
lods
loop
cmpl
pop
sbb
pop
shrl
into
insb
xorl
add
mov
jmp
pop
hlt
push
loop
shlb
xchg
or
loop
inc
lds
lds
sub
dec
je
popf
push
in
imul
in
mov
dec
ja
xor
mov
add
outsb
std
into
xor
xor
sub
stc
stos
subl
jbe
rcll
xchg
std
test
mov
or
fs
sarb
push
out
xchg
adc
inc
jge
jmp
sub
test
fisubrs
les
xor
into
and
sti
mov
subb
xchg
mov
jge
das
and
sbb
in
mov
fidivs
mov
ja
rorl
aaa
call
insb
sbbl
xchg
daa
insb
pmuludq
pop
enter
mov
pop
push
cwtl
in
mov
rol
addr16
jle
cli
gs
repz
or
rcl
orb
adc
into
sbb
repnz
mov
jno
shll
sbb
push
xlat
push
or
ret
pop
dec
test
out
nop
sbb
roll
mov
lock
sahf
push
cmc
dec
xchg
and
imul
test
gs
arpl
imul
mov
and
repnz
jle
or
add
les
out
push
push
jo
cmp
or
pop
pop
pop
add
ret
push
je
pop
xchg
cmp
mov
insl
xchg
xchg
inc
out
jae
in
subb
jl
sbb
jns
inc
xchg
push
ret
test
rcl
mov
and
and
and
pop
mov
pop
rclb
sub
ficoml
test
inc
scas
sub
mov
add
bound
insb
inc
les
cmp
mov
popa
insb
movsl
ficoms
inc
in
and
rclb
shl
mov
movsb
push
mov
pop
aam
lods
std
jmp
loopne
jnp
mov
cli
inc
mov
stc
imul
adc
pop
stc
lcall
xor
lret
mov
shrl
push
jnp
sub
testl
or
fidivrl
in
insl
out
sbbl
xchg
pop
sbb
xor
add
and
int3
ret
push
std
mov
dec
fld
lret
pop
push
imul
jb
xchg
add
lahf
mov
popa
jnp
adc
xorl
insl
notl
mov
fdivr
mov
push
push
mov
cmp
dec
xor
cmp
loopne
push
xchg
insl
test
xchg
xchg
adc
push
lods
gs
mov
xchg
sbb
das
stos
std
sbb
xor
xchg
cli
ret
sub
xor
jne
test
mov
ja
ljmp
mov
adc
add
xor
xchg
xchg
loope
add
mov
xchg
lret
pop
adc
add
outsb
mov
push
mov
mov
xchg
adc
xchg
xor
push
stos
mov
lods
cmpsb
mov
xorl
sub
out
pop
scas
lock
sti
test
adc
add
mov
pop
xchg
test
inc
adc
mov
xchg
scas
dec
xchg
mov
dec
and
pop
jns
and
shrb
pop
rorb
clc
sbb
test
sub
ljmp
sub
or
lds
mov
loopne
xor
sbb
add
ljmp
scas
in
mov
add
in
inc
cmc
sub
or
xor
xchg
popf
ja
xchg
mov
inc
andl
jb
or
sbb
jl
decl
inc
lea
sbb
icebp
stos
ja
aas
xor
sub
dec
xor
and
je
add
bswap
cmp
dec
fsts
aas
add
sub
adc
cmp
add
popf
aaa
push
mov
decl
fwait
mov
or
jl
ss
jae
andb
adc
je
xchg
dec
ljmp
mov
inc
inc
or
aam
xchg
xlat
lods
cmp
mov
xor
mov
dec
lea
mov
stos
fisttpll
or
cmp
popf
mov
lods
lea
push
mov
repz
popf
push
fisttps
addr16
popf
adc
mov
clc
push
or
scas
sub
xor
out
inc
dec
lea
rcrb
enter
cmp
out
lret
leave
in
mov
cld
shl
in
jo
inc
outsb
add
fimull
sbb
imul
pop
jl
jp
xchg
aam
sbb
fadd
jg
fs
jb
faddl
cmp
ljmp
out
pop
push
stos
ds
add
dec
push
or
test
xchg
clc
sub
or
cmp
inc
ret
clc
push
loop
mov
xor
lcall
inc
xchg
mov
pop
cmpsl
rclb
lods
pop
adc
int
lods
scas
cmp
jnp
cmp
add
push
xorb
add
jo
cmp
jo
enter
pop
pop
add
shlb
fmul
insl
ds
stc
push
xor
test
add
mov
mov
fldl
pop
shlb
jle
fsin
inc
dec
insl
xchg
xchg
cmp
mov
movsb
aaa
sbb
or
xor
and
adc
loope
adc
int3
jle
insl
cmp
fmull
lcall
pop
popa
in
and
and
test
shll
addl
out
sub
insl
lods
push
push
popf
in
mov
aad
or
test
lea
pop
les
or
xorl
push
mov
into
scas
nop
jp
or
inc
das
cmpsl
lahf
cld
in
xlat
out
xor
xor
mov
sti
mov
les
jp
push
inc
shll
xor
movsb
vmovhpd
jmp
mov
xor
lea
jle
test
jns
adc
dec
push
sub
adc
pop
adc
cmp
enter
xchg
jnp
dec
jp
dec
push
mov
call
ja
sbb
shrl
mov
stos
dec
jne
mov
popf
mov
mov
inc
das
or
aaa
sahf
call
pop
sbb
xchg
dec
jae
pop
pop
xor
xchg
push
iret
xor
ja
faddp
sbb
ret
movb
lahf
adc
mov
pop
out
dec
fwait
jmp
dec
ljmp
out
adc
and
out
dec
mov
push
xchg
adc
pop
in
int
push
dec
out
xor
inc
sub
icebp
add
neg
inc
cltd
xchg
cmp
pop
and
mov
jmp
stos
cld
out
push
dec
jo
add
int
iret
mov
pushf
adc
pop
lods
push
mov
mov
out
aas
and
cmp
in
add
pop
mov
aad
or
mov
stos
scas
std
mov
insb
test
mov
xor
pavgb
mov
pushf
push
xor
sbb
mov
and
pop
rcrl
mov
jno
inc
leave
pop
lret
shlb
es
cmp
rcrb
add
pop
and
mov
mov
or
jae
dec
je
and
xor
and
inc
inc
xor
inc
pop
cmc
adc
inc
jnp
divl
inc
push
and
mov
in
pop
add
shrl
xchg
fisubl
jg
xchg
jae
mov
sbb
imul
jg
dec
push
sbb
orl
movsl
lds
mov
pushf
fisubs
hlt
lret
sarb
and
stos
ja
push
jno
sub
stos
ds
out
ljmp
shrb
jge
ds
push
daa
lods
loope
sbb
in
mov
inc
into
mov
sub
cltd
popa
mov
mov
call
or
std
icebp
xor
movsl
nop
sub
ret
or
sub
out
daa
repz
inc
jmp
push
xor
fdivs
addr16
jmp
cmp
insl
ljmp
xor
mov
test
mov
inc
pop
and
jmp
pop
adc
mulb
sub
pop
in
bound
xchg
int3
sarl
fisttpl
in
movsb
clc
push
push
in
insl
add
sub
scas
shrl
fcmovnbe
xchg
test
push
leave
jne
mov
sbb
stc
add
fisttps
dec
in
jge
push
inc
sbb
aas
cmp
inc
xorb
xor
xor
mov
jmp
push
jne
imul
dec
inc
out
fs
pop
aad
or
les
mov
in
mov
mov
xchg
stc
fstps
mov
adcb
enter
and
fcompl
push
cmp
or
adc
cmp
xchg
pop
stc
mov
jno
lret
mov
push
int3
cmc
les
mov
sub
ja
dec
inc
lods
lahf
popf
xor
je
into
dec
jno
xchg
adc
loope
push
enter
fxch
repz
stos
add
idivb
ss
adc
fcomps
dec
mov
mulb
imul
mov
fidivs
xchg
cmp
sbb
dec
xor
mov
movsb
fmuls
fisttpl
popf
scas
mov
icebp
pop
testl
adc
cli
arpl
mov
dec
es
mov
andb
fisubs
imul
jbe
push
xchg
mov
xor
std
cmp
adc
jnp
pushf
icebp
adc
enter
dec
nop
fildll
push
mov
outsl
mov
jg
sbb
shll
pop
aad
leave
jae
out
cwtl
aad
sbb
sbb
jb
push
es
mov
push
lret
jle
xlat
push
repnz
cmp
mov
loope
inc
pop
pop
movl
ljmp
cltd
sbbl
jnp
stos
mov
fcomps
mov
add
sub
aam
pop
clc
hlt
popa
ret
xor
pop
xorb
dec
add
call
cmp
or
sbb
push
jl
push
sub
mov
sub
sub
scas
insb
loope
xchg
pop
lock
nop
imul
push
jo
mov
dec
push
lret
arpl
scas
dec
leave
and
shrb
mov
les
adc
fldenv
hlt
inc
cs
ret
aam
enter
insl
push
scas
xlat
fucom
mov
jo
adc
test
jmp
and
mov
test
cmp
clc
dec
es
adc
push
pop
add
daa
adc
mov
es
add
dec
data16
adcl
lret
sbb
mov
mov
sub
jmp
lahf
pop
movsl
push
andl
mov
pop
movsb
out
push
sub
dec
xor
bound
mov
test
scas
enter
ret
daa
mov
jo
pop
test
sub
push
stos
mov
outsl
push
stc
fxch
dec
or
mov
fnstsw
icebp
rol
dec
jb
icebp
out
and
adcl
mov
adc
inc
pop
mov
dec
inc
sub
rorb
mov
out
inc
inc
pushf
stos
stos
sub
adc
lahf
dec
cwtl
cmp
loope
idivl
xorl
rolb
pop
lret
push
jmp
fwait
in
cmp
push
popf
push
xor
fbld
fnstcw
xchg
or
sarb
stos
aad
push
cmp
jnp
jl
xchg
xchg
cwtl
mov
xchg
stos
xchg
pop
sbb
std
jb
aas
in
jns
sbb
divb
sbb
mov
mov
or
inc
ret
mov
sbb
inc
ds
dec
ror
xchg
js
mov
leave
inc
mov
pop
pop
loop
lock
out
xchg
and
jl
int
movsl
xor
cmp
or
les
jge
adc
js
int3
jae
je
fcomps
shl
mov
inc
pop
push
dec
pop
push
lret
clc
or
addr16
and
dec
out
lods
xchg
js
popa
jb
fadds
movsl
scas
or
ljmp
sbb
jb
arpl
sub
pop
mov
jge
cmp
insl
pusha
cltd
rorb
push
xchg
js
dec
inc
xchg
orl
push
add
fdivrs
les
out
pusha
jg
mov
mov
push
loopne
fs
hlt
pop
sbb
repnz
cmp
scas
fists
xchg
xlat
test
mov
cwtl
jno
jp
lret
mov
shl
mov
sub
inc
inc
xorl
sub
push
sahf
xlat
adc
mov
xchg
xor
leave
or
inc
mov
flds
nop
sahf
sub
pop
adc
loope
mov
xor
and
add
cmpsl
enter
aam
or
cmp
test
std
gs
call
adc
and
ja
test
test
insl
cltd
add
or
jl
pusha
arpl
push
out
add
and
cmpsl
in
push
dec
mov
push
je
mov
lods
pop
cld
ret
sbb
sbb
dec
inc
call
dec
mov
ja
stc
sub
xor
out
mov
mov
xlat
jecxz
pop
stc
jmp
es
ret
sbbl
in
sbb
roll
mov
aas
adc
xchg
test
dec
imul
stc
push
adc
sub
jo
popa
mov
stos
pop
inc
shll
repnz
mov
cmp
stos
push
xchg
cmp
cmp
das
ds
mov
mov
loope
pop
enter
test
add
adc
ret
jmp
xor
add
mov
pop
and
sub
fs
sbb
mov
jb
inc
stc
xor
jb
insb
and
jl
mov
lds
mov
fabs
js
or
mov
or
push
mov
push
push
fucomp
or
pop
loop
inc
ret
push
jae
cmp
dec
or
dec
or
inc
push
je
movsb
push
inc
inc
sub
cmp
cwtl
pop
pop
stos
lods
shl
stos
jns
aad
xor
loope
test
mov
out
mov
sub
mov
bswap
das
lock
je
sahf
xchg
scas
add
orb
imull
inc
cmpsl
nop
ljmp
int
into
xor
or
cmp
mov
xor
ss
stos
pop
mov
adc
outsb
cltd
lds
jne
cmc
xor
loopne
xchg
xchg
push
sti
popa
jae
clc
sub
lahf
movsb
outsb
pop
out
inc
lods
call
mov
cli
xor
inc
cli
test
mov
test
hlt
adc
mov
ds
xchg
sarb
sub
cmp
aaa
push
gs
mov
in
loope
gs
int3
mov
cmp
fistps
push
jl
pop
ljmp
ja
or
popa
jmp
mov
push
popf
pop
mov
mov
push
add
fidivrl
cmp
ret
imul
adc
test
lret
nop
hlt
out
jb
out
push
or
jno
std
mov
add
fdiv
xchg
mov
and
xor
les
nop
or
push
in
mov
insl
lahf
add
xor
mov
mov
mov
lods
dec
push
mov
and
hlt
test
push
mov
pop
pushf
add
sahf
push
into
loop
cld
mov
pop
stc
in
pop
loop
cmp
lret
test
les
cmp
xchg
loope
outsb
in
mov
mov
jle
rclb
mov
and
sub
sub
adc
dec
push
ret
iret
cwtl
std
xor
cld
jbe
push
cmp
fiadds
cmpsb
je
sarl
addr16
lods
cmp
pop
mov
or
idiv
add
mov
into
ljmp
int
hlt
mov
sti
insb
cltd
rcrl
xor
push
inc
pusha
pop
cwtl
in
push
push
xchg
push
adcl
push
sarl
fwait
jecxz
adc
aad
and
scas
or
mov
pop
dec
sub
or
cs
jmp
out
sbb
movsb
mov
mov
inc
notl
dec
inc
out
in
dec
out
xchg
lea
sarl
adc
int
in
mov
cmp
lret
or
into
scas
mov
sarb
mov
pop
mov
xor
fdivs
push
push
inc
inc
fcoml
rolb
sbb
cmpsb
mov
push
je
mov
cmp
fs
ja
ds
sub
push
outsb
fdivl
and
adc
xlat
sub
lea
pop
add
stc
outsb
repnz
dec
lds
jo
jae
rclb
dec
sub
mov
out
push
mov
sbb
lods
xchg
mov
movsb
jbe
ret
sub
jne
mov
and
xlat
lods
cmp
jb
mov
aad
jbe
mov
mov
sbb
xor
cmpl
mov
stc
dec
dec
movsb
fsts
mov
mov
inc
les
adc
lock
mov
ret
xlat
fcompp
cpuid
pusha
movsl
dec
and
and
jge
mov
cmp
test
inc
imul
test
popf
mov
dec
imul
sbb
inc
jmp
mov
call
bt
aas
ja
push
jp
pusha
or
pop
int3
dec
push
mov
mov
call
inc
jo
mov
outsl
sub
stos
sbb
rcrl
pop
aaa
xor
sbb
lret
mov
fsts
jg
mov
or
xchg
dec
testl
incl
cmp
ds
xor
mov
xchg
cmp
int3
ret
mov
xlat
ret
das
jmp
mov
xchg
or
pop
jl
xchg
cltd
repz
outsl
out
stos
and
pop
clc
jb
imul
outsl
mov
lret
pop
and
cmc
cmp
lods
adc
pop
lret
mov
mov
mov
push
enter
xchg
inc
stos
xor
add
push
cmp
mov
cwtl
lods
mov
lods
jns
add
jg
insb
mov
inc
and
in
rorl
push
cmpsl
int
jge
and
cmp
cwtl
js
mov
and
adc
aam
xchg
insl
sahf
mov
pop
fsubr
rolb
and
mov
ss
xor
add
mov
lcall
js
pop
pop
pop
or
stc
lds
pop
fs
icebp
popf
push
mov
leave
lods
pop
xchg
lods
insl
ljmp
arpl
bnd
mov
or
ss
sbb
insb
rcrb
call
jmp
inc
sbb
aas
insb
pop
adc
out
add
incb
nop
leave
lahf
int
jnp
mov
adc
jge
or
jge
mov
ss
cmpb
nop
mov
push
das
pop
ja
mov
clc
jecxz
sub
sbb
push
jb
fs
mov
pop
outsb
add
adc
sbb
push
aad
movsl
stc
xor
jnp
pop
jbe
mov
call
inc
mulb
mov
les
mov
dec
rorl
pop
jge
lahf
out
xlat
sub
push
subl
mov
mov
and
roll
cli
rol
jno
mov
int
pop
mov
push
ds
into
ja
js,pt
lahf
mov
repz
leave
xor
orl
inc
scas
dec
xor
inc
xchg
outsb
std
sbb
pusha
dec
arpl
sub
pop
icebp
shr
xor
xlat
mov
jmp
sbb
and
inc
popa
dec
lahf
mov
outsl
and
pop
mov
push
dec
adc
lret
inc
ficoms
fdecstp
jnp
pop
stos
inc
repnz
or
dec
sub
mov
xchg
push
mov
dec
movsl
or
mov
lds
sbb
jp
inc
ret
sbb
cmp
movups
sub
mov
popa
fs
mov
dec
test
push
pop
leave
push
pop
ljmp
xor
push
jp
dec
shll
pop
lock
scas
or
insl
arpl
sub
out
xchg
sub
xchg
xlat
rorb
or
push
das
popa
lock
mov
adc
xor
test
sub
mov
insl
cmc
repnz
push
lods
cmp
push
push
cmp
fnstsw
stos
inc
daa
and
mov
std
adc
adc
mov
movl
sub
insb
cmp
sbb
cmp
cli
insl
add
cmp
inc
xor
xor
xlat
leave
clc
pop
sub
xchg
sub
ret
add
outsb
inc
adcl
jno
jp
mov
test
and
cld
jmp
in
xchg
fisttps
add
push
shl
test
add
push
pop
xlat
jbe
ret
dec
sbb
stos
xchg
push
mov
dec
xor
jo
mov
xor
dec
aam
pop
clc
popf
pop
ret
out
pop
in
fidivrs
adc
sbb
int3
imull
mov
xlat
in
pop
jg
movsl
xor
xor
enter
ljmp
popa
inc
fnstsw
bound
aaa
cmp
inc
ficoml
xlat
inc
test
int
mov
cmpsb
cld
in
insl
jle
xchg
inc
xchg
in
xchg
ss
sti
pop
mov
pusha
popf
mov
adc
mov
mov
add
dec
les
and
push
lahf
xor
call
idivb
pop
mov
mov
fisubrs
mov
ss
and
xchg
pop
std
add
repz
clc
mov
imul
je
sbb
mov
lret
xorps
test
xchg
or
inc
push
shll
insl
stos
outsl
jb
mov
pop
fldl
jle
inc
fisttpl
adc
mov
enter
call
adc
push
push
push
scas
mov
adc
adc
jo
mov
cmp
lds
ja
leave
ljmp
popa
mov
push
sub
sub
icebp
repz
cli
scas
pop
lret
or
push
and
cmp
push
add
cmp
out
mov
jne
sbb
mulb
lret
psubsw
adcb
jg
mov
jle
inc
out
in
adc
fnstenv
add
push
mov
pop
lahf
les
cmp
int3
cs
cmpsl
sub
adc
adc
mov
inc
enter
jbe
jge
jecxz
mov
xor
fdivs
jns
pop
add
in
sub
mov
jg
or
mov
cmp
pop
sub
sar
mov
mov
cmp
outsl
add
push
jns
pop
pop
xor
test
inc
mov
pop
fisttps
je
xor
sbbb
insb
rolb
stc
out
inc
xchg
and
xor
add
xor
sbbl
lods
shrl
inc
and
and
imulb
sbb
or
sbb
divl
add
subb
jecxz
jmp
jmp
scas
pop
and
enter
lods
pop
mov
or
push
xchg
sbb
sbb
leave
in
enter
nop
fsubs
add
jbe
dec
jbe
leave
jbe
lret
popa
subb
cli
xor
push
push
inc
mov
push
cmp
fcomps
push
and
loope
adc
arpl
or
cmpsl
push
test
dec
jl
dec
cmpsb
movsb
test
sbb
lods
cltd
push
ljmp
loopne
enter
inc
and
jbe
in
and
jmp
pop
cltd
inc
icebp
mov
mov
and
dec
or
arpl
adc
mov
xchg
jb
xchg
mov
loop
sbb
ljmp
mov
gs
cmp
and
test
andb
loop
push
xchg
inc
dec
shrb
mov
lods
loope
mov
outsb
lods
insb
add
pop
sbb
xchg
push
push
pop
sub
push
mov
pop
cwtl
jp
sub
sub
cmpsb
mov
lock
pop
mov
cmp
adcl
outsb
scas
lea
push
sbb
in
ja
test
or
out
adc
mov
lods
int3
cmpsb
sbbl
pop
clc
sbb
mov
adc
test
movsl
pop
jb
popf
push
repz
cmpsl
mov
sub
push
and
ret
push
imul
inc
cmp
lahf
mov
inc
xor
loope
jnp
inc
lea
dec
cld
push
cmpsb
dec
shrl
dec
adc
xchg
cs
test
add
pop
lods
lods
psrld
jbe
dec
sbb
mov
sub
mov
push
sbb
or
sub
into
ret
cmp
push
push
fadds
lods
rcr
push
pop
into
hlt
repz
stc
push
js
js
or
imul
adc
push
ficompl
call
mov
in
mov
mov
data16
pop
cs
xchg
mov
adc
js
pop
and
xchg
ss
jmp
add
fistps
mov
icebp
jbe
sbb
fadds
push
mov
and
addr16
fmull
les
inc
dec
lock
outsl
outsl
mov
fiaddl
rcll
adc
sub
fnstsw
mov
add
push
mov
dec
mov
and
fstps
sub
dec
jecxz
fisttpll
mov
mov
inc
stos
add
jae
dec
ret
jae
mov
cmpsb
mov
mov
sbb
lods
stc
leave
pop
loopne
dec
dec
mov
fnstsw
adc
sub
cmp
out
pop
jle
repz
sahf
fidivrl
jg
jl
mov
lock
sbb
or
jns
scas
sub
les
pop
pusha
leave
pushl
insl
push
cmp
repnz
jecxz
dec
dec
mov
dec
adc
pop
xchg
jbe
xchg
sbb
or
jg
pop
sbb
push
sti
or
jmp
inc
jl
xor
cld
and
roll
in
pop
fistpl
dec
aas
and
in
shl
push
cmp
mov
lret
add
inc
shlb
push
dec
sub
push
shll
mov
xchg
sub
mov
jl
lret
pop
std
jge
xchg
inc
sbbb
ds
mov
or
pop
fisttps
rclb
stos
in
popf
and
jns
xor
xchg
add
xchg
and
cltd
push
xor
je
pop
fidivrs
mov
push
and
pop
sarl
sub
pushf
mov
pop
aam
cmp
pop
pop
jmp
pop
cmpb
loope
jge
out
lret
mov
out
popa
test
mov
cmc
pop
shrb
adc
int
push
push
push
or
in
mov
sarb
xor
cmp
push
enter
mov
jb
cwtl
test
rcl
jl
mov
inc
imul
or
mov
outsb
inc
xchg
and
adc
mov
sarl
xchg
punpckldq
add
mov
pop
roll
loopne
movsb
xchg
inc
mov
pop
nop
inc
test
bound
loope
inc
cmpl
cmp
loopne
or
ss
test
int
fs
xchg
mov
and
ja
dec
addr16
int
pop
mov
call
fmuls
jle
addr16
push
iret
mov
xor
insb
add
cmp
std
fcomps
lds
and
and
sar
loop
in
jl
xchg
test
out
les
push
push
inc
das
push
push
sub
call
cmc
pop
mov
push
and
add
rolb
xor
mov
stos
iret
dec
cmp
mov
loop
adc
iret
pop
fistpll
stos
or
inc
pop
jno
adc
mov
test
aam
sti
jnp
bound
fsubl
add
cmpsb
xor
repnz
das
shrb
sub
push
push
aam
repz
das
sub
pop
mov
ret
xchg
push
movsl
pop
lods
sub
pop
pop
cmp
cmpsb
jecxz
push
fmuls
xchg
push
popf
dec
iret
and
add
cmpsl
jge
lahf
mov
outsb
mov
ret
ljmp
in
fsubp
cmc
mov
mov
jno
pop
fldl
pusha
test
mov
call
rclb
sbb
imul
sarb
inc
lods
xor
repz
cltd
aas
imul
adc
xlat
jg
adc
iret
lock
mov
xor
js
aaa
fidivs
ret
sarl
jo
cmp
jo
inc
push
xchg
or
jne
mov
iret
mov
add
xchg
jb
adc
rclb
mov
shrb
or
jb
imul
lahf
mov
add
xchg
ficoml
neg
jo
rolb
jns
adc
aam
shr
lock
pop
mov
mov
fs
sbb
pop
push
mov
fs
sti
ret
std
call
hlt
es
sbb
lss
xor
dec
jmp
xchg
jno
sub
sub
rcrl
adc
lret
roll
orb
out
out
push
ret
add
adc
xlat
inc
mov
mov
mov
xchg
adc
dec
dec
std
ret
or
mov
roll
dec
xchg
add
push
clc
cmc
adc
fs
push
xor
out
inc
and
pop
or
mov
arpl
jno
mov
mov
test
fwait
adc
lcall
mov
dec
mov
test
jmp
rolb
movb
inc
rep
rcr
dec
dec
lahf
push
mov
jg
int
inc
push
loop
dec
testl
mulb
sub
dec
out
gs
lds
push
ljmp
repz
js
mov
jge
out
ret
ja
dec
ficomps
enter
jns
addl
out
imul
cs
fnsave
pop
mov
jbe
sti
add
adc
xchg
lahf
cmp
cmpb
cmp
test
js
dec
mov
mov
rcll
and
test
mov
cmp
pop
shr
and
ret
das
adc
sbb
aad
popa
out
mov
sub
adc
adc
xchg
lods
pop
pop
cmp
pop
in
jb
push
xor
mov
jl
out
xor
add
test
cld
or
xor
xchg
xchg
push
mov
pmaxub
mov
pop
jae
push
jne
sub
xor
xchg
sar
jmp
call
jno
mov
adc
aam
cmp
ss
lea
xor
dec
dec
data16
pop
loop
pop
add
add
pop
pushf
mov
out
sbb
icebp
in
jae
ljmp
je
adc
dec
or
stos
pusha
mov
sbb
push
or
inc
pop
insl
pop
xor
das
loopne
orb
adc
inc
insb
mov
imul
ds
dec
iret
ljmp
das
ljmp
outsb
ss
sbbb
ja
xlat
cld
lea
scas
in
push
cs
lods
mov
comiss
xlat
add
cmpl
mov
mov
sub
cmp
sub
call
cmp
and
or
nop
repnz
add
dec
dec
mov
cmp
dec
mov
mov
push
or
loopne
aaa
aam
cmp
and
call
push
dec
push
dec
mov
push
jb
shrb
arpl
incb
lock
mov
fcoml
lock
test
pushf
pop
pop
mov
cwtl
jge
std
mov
xor
or
stos
out
xchg
add
push
and
out
xchg
mov
jecxz
xor
pop
pop
jle
shll
xor
mov
cltd
scas
sbb
mov
mov
ljmp
push
xchg
aas
imul
jmp
pop
repz
lahf
out
jg
xchg
lods
add
cmp
jns
adc
fisttps
test
test
fidivrs
pop
lahf
xchg
jp
sbb
mov
add
int3
push
lds
xorb
ss
xor
sub
mov
ss
iret
jb
jge
das
xlat
mov
mov
iret
push
cs
pop
push
rorl
sti
jb
inc
jnp
addr16
inc
fs
cltd
mov
and
jmp
mov
stos
popf
jae
add
rclb
js
xlat
or
shll
sub
lds
out
sbb
and
bound
jne
fucom
adc
jg
call
js
sbb
mov
mov
add
inc
xchg
repnz
fdivrs
pushf
pop
pop
stos
mov
popa
mov
inc
sub
mov
mov
cs
lods
jo
push
into
int3
xor
xchg
std
dec
pop
arpl
das
add
jmp
cmp
xor
sti
out
mov
mov
out
or
pop
inc
imul
icebp
in
lret
mov
mov
or
jle
fisttpl
or
jg
xchg
dec
lock
sbb
lahf
or
push
lret
push
pushf
std
in
movsl
fsubrl
movsl
and
mov
push
ret
test
adc
dec
adc
stc
push
ja
and
dec
push
add
pushl
test
inc
daa
xchg
jae
jecxz
xlat
divl
mov
rcll
xchg
xor
out
bound
insl
and
outsl
movsl
loopne
inc
inc
pop
dec
or
movsb
pop
mov
enter
lock
out
cld
adc
fwait
rorb
fbld
pop
fwait
push
aad
fidivrs
sub
nop
cmp
leave
clc
and
mov
int3
jle
lret
dec
push
ror
jns
xchg
loop
shl
mov
dec
push
adc
arpl
mov
cmp
cmc
adc
inc
mov
inc
lret
xchg
rcl
adc
inc
iret
lods
inc
and
push
cmpl
adc
pop
lods
jecxz
push
fmull
out
jo
xchg
push
mov
in
sti
inc
nop
into
cli
lcall
mov
pop
xchg
and
enter
sahf
out
fnstcw
dec
sbb
inc
mov
jmp
adc
mov
or
stc
aam
add
inc
mov
outsl
loopne
das
cmp
fsubr
out
movsl
xor
aas
lock
mov
pop
xchg
dec
loopne
jecxz
cmp
or
sahf
xor
mov
shl
fwait
pop
add
mov
add
mov
push
mov
sbb
pushf
xorb
adc
mov
xlat
xor
mov
mov
ljmp
xchg
mov
aad
adc
in
fidivl
dec
add
xchg
mov
push
sbb
jmp
dec
push
sub
inc
xchg
outsl
push
xchg
xchg
addr16
cmpsb
push
inc
adc
xchg
mov
fsubrl
dec
loopne
pop
mov
sbb
jg
js
sub
push
adc
jno
lods
xor
mov
xchg
in
sti
cmc
xlat
aam
add
movsl
pop
fbstp
push
xor
sbbb
adc
test
das
popf
inc
clc
adc
jb
out
insl
aas
push
pop
scas
popf
inc
add
mov
push
scas
xor
movsl
outsl
cltd
adc
jmp
xchg
scas
addr16
add
push
test
and
xchg
mov
insl
cmpb
rol
add
and
pop
int
jmp
cltd
and
mov
and
cmp
mov
cwtl
ss
in
add
dec
sbb
movl
pushf
mov
pop
jmp
pop
mov
out
clc
aaa
dec
out
jge
movsl
or
cmp
mov
ljmp
adc
cmp
into
jo
jmp
jb
sub
mov
mov
out
orl
pop
dec
adc
cmp
xchg
mov
adcl
xor
pop
jl
push
insl
inc
test
ret
movsl
adc
inc
fstl
xchg
sub
fs
out
les
out
arpl
pop
je
and
pop
add
les
pop
xlat
adc
dec
outsl
shll
lods
ja
cmp
mov
dec
add
pop
mov
loopne
and
xchg
push
outsb
mov
ds
sti
inc
rol
sarl
rorl
int3
pop
mov
das
sbb
sbb
cmp
xchg
clc
pop
jno
and
icebp
push
loope
movsl
jne
adc
lods
mov
addl
addr16
stos
mov
or
hlt
inc
sub
insl
dec
cmp
emms
jecxz
pop
adc
int3
xchg
inc
mov
mov
out
das
sub
pop
fwait
popa
cwtl
xchg
mov
or
test
scas
or
jno
je
mov
cmp
in
icebp
ljmp
adc
ret
pop
and
jmp
push
cmp
jne
leave
dec
push
cmp
in
test
cmp
subl
sbb
adc
adc
dec
xor
inc
or
cs
sbb
cmp
sub
into
mov
stos
xchg
imul
jmp
cmp
adc
gs
push
aad
cmp
insb
push
out
rcrl
xchg
mov
test
mov
lret
leave
aad
adc
sub
repnz
xchg
insl
divb
add
xchg
or
jmp
sbb
cwtl
xchg
rolb
test
enter
ds
or
mov
xlat
fwait
push
mov
mov
arpl
cmp
sbb
jne
sub
xchg
ds
xchg
mov
pop
repz
cwtl
mov
xor
mov
fiadds
push
sbbl
imul
push
ds
and
mov
xchg
cmp
repnz
mov
sbb
lcall
dec
push
ret
jp
adc
jae,pt
sbb
add
fdivrs
inc
clc
ret
or
jl
out
mov
cmp
and
pusha
into
dec
mov
xor
push
xor
icebp
enter
jmp
mov
out
imul
jp
dec
mov
dec
cld
sub
shll
popa
or
push
mov
push
sbb
cmp
pushf
mov
pop
int3
addl
imul
fdiv
and
adc
cli
outsl
xorl
stos
pushl
jns
arpl
je
cmp
mov
sbb
xchg
pusha
adc
xchg
sbb
loope
push
sbb
lret
add
negl
sbb
loop
pop
lahf
sub
fsubrs
add
out
xor
ret
bound
fstpt
out
jnp
lret
arpl
popa
and
push
add
inc
aad
test
cmovge
mov
sub
xchg
and
cmp
jno
xchg
inc
sub
hlt
xchg
pop
sbb
fidivrl
fs
sbb
and
in
movsb
shrl
and
ja
sarl
cmp
and
and
adc
jle
push
add
loopne
call
lds
loopne
inc
dec
imul
orl
and
insb
sbb
dec
inc
xor
jle
xor
into
add
xor
and
push
aam
mov
push
cwtl
aas
imul
sub
mov
mov
push
push
sbb
mov
outsb
sti
ljmp
dec
dec
mov
sub
xlat
sub
mov
adc
fldcw
mov
int
in
dec
faddp
and
outsb
push
xor
mov
sub
dec
or
push
xchg
lret
inc
push
cwtl
jle
pop
je
imul
jle
popf
jge
ror
test
push
push
icebp
pop
push
loope
xor
loope
mov
rcrl
dec
inc
mov
add
out
cmp
add
push
or
ficomps
adc
pushf
inc
fwait
ret
ds
lds
hlt
and
fidivrl
or
repnz
push
dec
inc
scas
push
hlt
jnp
insb
ret
sarl
bnd
sbb
lds
cwtl
push
mov
push
push
notb
mov
mov
pop
mov
hlt
push
push
test
lods
cmp
stc
imul
cmpsb
dec
inc
fisubs
pop
mov
fldt
cmpl
fcmovne
sub
ret
sbb
or
scas
outsb
daa
das
mov
lahf
jns
cmp
lds
lock
hlt
and
sub
add
inc
lea
dec
pop
int3
shr
aas
cmpsb
mov
aad
pop
repnz
ljmp
popf
push
mov
jmp
jae
pop
inc
cwtl
mov
imul
andl
fnsave
cmp
jp
test
adc
test
sbb
clc
stc
ljmp
cld
movsb
and
adc
rcrb
ficoml
jg
mov
mov
adcb
mov
add
test
sub
xchg
mov
ror
mov
movsl
inc
pop
xor
in
jge
sbb
je
push
scas
and
adc
pop
cmpsb
mov
pop
test
xor
push
add
rcrb
dec
fisubrs
xor
xchg
add
call
pop
add
xor
pusha
mov
ret
and
push
fucom
push
sub
mov
dec
mov
pop
sbb
mov
xor
lock
mov
adc
pop
insw
inc
xor
jb
jl
je
mov
add
lcall
mov
mov
int3
xchg
out
andb
xchg
add
repz
dec
or
inc
int
xlat
pop
jecxz
xor
cmpsb
jmp
enter
stc
inc
insb
mov
cmc
sarb
es
ss
jecxz
jl
jno
mov
and
jmp
add
int
xlat
scas
jle
ljmp
dec
push
jo
movsl
outsl
push
cmp
loop
ss
pop
in
mov
fwait
sbbl
push
push
dec
jb
inc
and
inc
and
dec
mov
cmp
in
xchg
xchg
out
test
out
or
fs
add
xchg
lea
inc
mov
push
adc
or
mov
adc
bound
xor
jmp
aas
ss
jmp
push
push
push
add
push
push
mov
jae
xchg
mov
fidivrs
cmp
repz
out
add
jmp
mov
negl
js
adc
jo
adc
push
xor
or
mov
xor
adc
stos
icebp
cmp
xchg
or
dec
int3
das
lock
or
iret
add
add
loop
out
pushf
sbb
mov
jae
jl
cld
fstpl
xchg
adc
int3
jmp
loop
cwtl
outsb
mov
xchg
ljmp
jg
inc
pop
ret
xlat
mov
mov
push
js
mov
rclb
aaa
fistpl
xor
cwtl
inc
aas
std
leave
mov
mov
iret
pop
stos
mov
ret
fnstsw
clc
mov
in
pop
cltd
imul
mov
cmp
or
xchg
jl
adcb
es
ret
push
std
fnstcw
push
jecxz
subl
ja
mov
test
cmpsl
xchg
test
xchg
hlt
xchg
jne
aaa
ret
scas
xchg
ds
fwait
sti
xchg
inc
pop
outsb
repz
jne
jg
cmpl
loop
inc
je
daa
pop
sbb
rorl
std
pop
sbb
jmp
daa
mov
mov
jno
sub
mov
iret
data16
bnd
int3
cmp
add
nop
pop
jmp
dec
cmc
insl
adc
sbb
roll
cmc
cmp
insb
fnclex
cltd
cltd
xor
sub
sub
and
dec
xchg
jp
iret
xchg
pushf
in
iret
lcall
adc
lret
addr16
pop
sub
push
fs
dec
cltd
mov
loop
cmp
pop
lcall
inc
xlat
push
and
mov
jb
mov
jmp
or
dec
add
and
mov
idiv
mov
idiv
add
jno
notl
mov
inc
sub
xor
es
adc
or
dec
sbb
cmc
fistpl
pushf
out
push
and
xchg
mov
inc
mov
push
mov
cmp
lds
mull
gs
int
xlat
pop
sub
adc
inc
lcall
imul
pop
xlat
test
popa
out
or
fcomp
in
push
test
jge
icebp
shlb
stc
out
outsb
fdivrs
loop
fcomp
sbb
inc
movsl
adc
andl
lock
jno
imul
mov
leave
ret
sbb
stos
fstl
not
lock
sarb
push
stos
imul
cmpsb
cmpsb
outsl
mov
int
das
sub
lret
xchg
scas
scas
fwait
add
add
push
lcall
fcoms
outsl
icebp
pop
pop
xor
or
adc
stos
in
cs
and
add
popf
stc
imul
or
stos
stc
inc
rolb
or
ja
andl
sbb
and
push
sbb
cli
jns
push
ja
test
adc
or
in
add
cmp
jmp
fcmovb
in
in
adcl
dec
cmpsl
faddp
test
adc
pop
jne
sbb
sbbl
sarl
fbld
test
clc
jl
xchg
movsl
jne
test
aaa
cmp
mov
dec
mov
sub
adc
fstps
and
outsb
mov
or
cmpsl
dec
rolb
mov
jle
test
mov
xor
cmp
test
lods
xchg
add
addr16
mov
fucomi
xlat
fxch
and
cmc
test
mov
mov
xchg
cmp
jge
adc
shrl
and
push
add
dec
idiv
jp
or
icebp
ljmp
cwtl
mov
xchg
sbb
mov
imul
insl
and
je
inc
cmp
and
add
cld
mov
frstor
cmpb
or
notl
fcom
dec
push
jns
jg
sbb
jmp
lea
int3
cmp
mov
outsb
dec
lods
jecxz
orb
stc
sub
or
adc
sbb
mov
pop
sbb
sbb
dec
ljmp
test
or
jne
mov
inc
cld
adc
mov
sbb
mov
sbb
push
out
dec
dec
pop
mov
sub
and
and
jg
push
xor
sti
sub
jno
mov
sbb
push
pop
test
leave
test
loop
jbe
dec
cltd
inc
xchg
test
pop
inc
loop
jo
popl
mov
sub
push
stos
sub
ja
sbb
mov
sti
stos
xchg
xlat
or
sub
jnp
mov
int
int
sub
xchg
sbb
mov
mov
jmp
xlat
jo
cmpsb
pop
incb
nop
pop
add
jo
lahf
subb
xor
xchg
ucomiss
xchg
push
sbb
icebp
sbb
test
push
lods
mov
and
mov
sub
cli
fucom
pushf
rclb
insb
mov
adc
adc
jae
and
movsl
pop
fs
mov
lea
rcrb
xor
sub
lock
cwtl
push
add
cmp
fwait
scas
enter
ret
insb
or
cltd
in
push
imul
test
in
ficomps
lods
xchg
inc
sub
push
push
fidivs
jns
movsb
xor
jmp
cld
sub
cld
test
pop
push
cmp
lock
jle
ds
popa
add
push
je
cmpsb
sbb
and
pop
cmpsb
mov
ljmp
sahf
pop
push
cli
xchg
stos
inc
add
xor
je
pop
xor
ret
js
or
fistpl
sarb
rcll
or
ffree
fimull
clc
pop
mov
xchg
push
sub
add
mov
packsswb
mull
loope
pop
adc
fcompl
arpl
sub
xchg
or
in
jns
rol
outsl
fs
pop
inc
xchg
pop
push
jns
das
push
mov
lret
xor
inc
dec
ds
je
cmp
mov
shrb
orl
pop
mov
cwtl
das
mov
out
pop
sti
xor
xchg
sbb
or
inc
adc
ljmp
cmpl
sub
mov
jbe
dec
mov
or
lea
fnstsw
pushf
jno
xor
push
out
sbb
xchg
je
jns
jae
cmpsb
pushf
xlat
mov
das
int
popa
scas
dec
push
mov
or
jp
cmp
xor
inc
add
outsl
sahf
out
cs
mov
daa
ret
xchg
dec
loop
xchg
mov
or
lea
out
stos
cmp
push
push
fisttpll
inc
test
lea
add
push
adc
mov
outsl
stos
sbb
inc
rcrl
and
out
lods
pop
cmp
negl
jmp
in
mov
add
dec
je
int
iret
push
mov
clc
add
or
sbb
pop
lea
cmp
scas
sub
mov
dec
xlat
adc
sbb
inc
clc
hlt
lret
sbb
sub
out
push
js
jno
enter
stos
mov
and
sub
dec
sbb
jmp
repz
out
pop
xor
rcll
xor
fisubrl
push
paddsb
mov
mov
lea
mov
movsl
lea
xchg
fwait
stos
sarb
sbb
arpl
loop
add
call
sub
add
sub
jle
stc
or
daa
mov
mov
dec
cmpsb
iret
movsb
push
mov
enter
dec
arpl
insl
orl
inc
mov
fisubrs
sub
sub
mov
iret
xchg
add
gs
or
add
sbb
ljmp
sub
pushf
loop
notb
or
push
pop
std
add
xor
xor
mov
jbe
push
outsl
movsb
bound
in
dec
push
cmp
adc
xchg
xchg
cmp
and
call
std
movsb
dec
movsb
pop
push
sub
test
jae
mov
or
pop
sbb
data16
ja
jg
cwtl
and
push
adcl
scas
sub
test
inc
lret
mov
mov
mov
das
mov
jmp
pop
popf
rcll
mov
push
popf
into
cmp
pop
add
mov
repnz
fucom
into
out
sub
inc
je
subl
and
sbb
adc
pusha
cmpsb
xor
pop
lahf
xchg
sbb
fisttpll
cltd
jp
jg
insb
mov
rclb
mov
pop
pop
pop
ja
jl
sar
xchg
xor
inc
xchg
add
int3
or
dec
pop
xor
data16
xchg
rcr
movsb
adc
push
ss
rolb
ja
stos
and
jecxz
dec
xor
mov
bound
pop
pushf
fsubrl
into
xchg
pop
or
and
mov
into
mov
outsl
std
dec
mov
pop
mov
les
je
enter
call
inc
mov
xchg
jp
pop
push
xchg
jo
xchg
push
sbb
adc
stc
cmp
shrl
sarb
sarb
push
xlat
mov
inc
mov
and
push
adc
sub
add
sub
outsb
repz
jne
pop
pop
sub
xlat
or
dec
xchg
sub
sti
xor
sbb
inc
and
inc
movsl
jg
negb
dec
adc
aaa
les
push
jno
adc
xor
mov
daa
jo
insl
sbb
xor
sub
pop
stos
fcompl
popa
scas
mov
pop
adc
push
jl
pop
add
and
push
mov
sbb
xor
jo
mov
push
bound
popa
out
sarb
aad
ss
dec
fisubl
decl
cs
jae
cmp
cmp
gs
ror
add
in
xorb
push
jge
ret
bound
jne
scas
jge
notl
pop
sti
jae
push
out
aaa
fwait
ljmp
outsb
sbb
imul
rolb
cmp
xor
adc
and
push
outsb
xchg
outsb
dec
jmp
push
push
or
mov
jmp
mov
or
negb
stos
enter
jle
adc
inc
pop
lret
les
push
hlt
stos
enter
fprem
jp
push
inc
pop
pop
addr16
xor
xlat
mov
out
jge
or
cmp
testb
inc
xchg
inc
jne
es
jecxz
test
jle
mov
xchg
cmp
jnp
ficompl
cmc
outsb
jle
push
mov
ret
xchg
sahf
inc
lods
inc
pop
jp
lods
xchg
outsl
test
xchg
push
pop
sti
adc
adc
out
jge
or
jge
fisttpll
scas
out
call
daa
enter
push
mov
into
mov
and
adc
lret
and
mov
js
iret
dec
sar
mov
lret
xor
sub
lcall
repnz
pop
shlb
xchg
mov
push
xchg
add
jne
pop
push
loope
outsb
add
adc
rorb
mov
mov
or
xchg
sub
cli
jecxz
inc
cmp
add
popf
aas
push
push
sub
add
xchg
inc
jp
inc
cmpl
mov
movb
out
out
push
divl
pusha
jno
push
fwait
dec
nop
push
cwtl
pop
jns
aad
ret
dec
test
adc
pusha
jle
jne
mov
ds
ja
add
js
add
mov
js
stc
fwait
jnp
call
es
mov
into
test
mov
mov
sub
test
call
dec
sbbl
jnp
adc
pop
stos
cmp
xchg
shrb
data16
faddl
repnz
mov
fstl
xor
pushf
xor
push
jne
jno
cmp
and
cmp
xchg
stc
scas
cmp
and
jg
pop
cmp
lea
mov
dec
and
add
mov
pop
mov
js
mov
push
push
jnp
popa
lahf
xor
push
cmp
cli
cmp
inc
cli
imul
cmp
js
or
jmp
rcr
mov
mov
mulb
dec
ja
aas
fs
cmp
sbb
hlt
mov
add
je
push
jp
clc
mov
xor
out
movsb
insl
and
adc
or
add
add
test
xlat
rolb
into
xor
lahf
dec
lods
int3
pop
pop
cs
sbb
adc
pop
xlat
mov
jbe
bound
xchg
xchg
mov
lret
enter
test
pop
push
sarb
popf
dec
add
push
or
clc
movsl
xchg
cltd
es
leave
push
outsl
push
mov
mov
xor
mov
call
pop
lret
inc
adc
push
jle
stc
mov
addb
jnp
testl
mov
jmp
inc
nopl
xchg
push
mov
loopne
lods
aaa
pop
adc
shlb
ror
test
dec
sbb
jl
pop
and
dec
xchg
mov
fnstcw
jae
bound
jae
add
aaa
or
mov
clc
lods
lret
sub
jns
and
sar
xchg
shll
sahf
dec
cmp
fstpl
and
sub
xlat
and
sub
ret
rcl
pop
jge
sub
ret
enter
push
jb
out
addr16
loopne
cmp
mov
fsubl
xor
out
mov
addl
mov
jg
sahf
dec
mov
adc
pop
and
jo
sbb
push
mov
rorb
jp
pushf
icebp
stc
push
cmp
or
hlt
inc
scas
aaa
jle
lret
or
sub
sbb
addl
mov
adc
scas
mov
repz
mov
adc
iretw
stc
mov
mov
jmp
dec
js
mov
sbb
loope
push
jne
and
xchg
in
fxch
fdivs
ret
or
dec
xor
int
stc
cmpsl
mov
in
lcall
outsb
jmp
fbld
inc
pop
push
out
xchg
popa
and
pusha
dec
pop
cli
aaa
or
xchg
cmp
mov
lcall
sub
addr16
jb
pop
dec
xchg
inc
sbb
mov
lods
add
rcrl
aas
push
and
repnz
int
adc
xor
push
cltd
or
lods
ljmp
mov
jns
mov
je
out
repnz
dec
frstor
cmp
pop
repz
cli
lds
dec
mov
popl
les
add
mov
mov
and
scas
pop
in
insb
dec
dec
popl
xor
int
scas
adc
push
popa
je
push
movsb
lea
jbe
das
cmp
jp
cwtl
cmp
fists
xlat
fnsave
gs
cld
in
cmp
cmp
jns
lret
test
repnz
jl
pusha
xchg
rcll
bound
inc
data16
out
cmp
hlt
data16
sub
scas
sti
push
jns
fadds
mov
and
push
ret
mov
fwait
dec
cmp
aas
or
ljmp
inc
sub
in
xchg
repz
xor
push
cmc
in
or
es
movsb
into
mov
add
sub
lock
jl
xchg
decb
test
cmp
push
das
or
cld
lock
or
adc
pop
sub
lods
cld
jmp
loope
insl
hlt
and
pop
notb
dec
in
stc
jge
orb
rcrb
imul
or
xor
adc
popa
xchg
pop
xor
mov
movsb
xchg
stc
fisttpl
test
imull
hlt
in
mov
sti
scas
pop
inc
and
inc
fs
xchg
xchg
aas
movsl
push
sbb
xchg
mov
xchg
mov
movsl
fimull
add
test
fnstcw
jnp
rclb
xchg
dec
jle
jp
es
jmp
out
int3
xchg
sub
jle,pt
mov
cmp
jns
js
or
imul
jns
pop
mov
mov
sti
jp
inc
imul
mov
xor
dec
iret
jge
inc
xchg
xchg
xchg
jge
push
sub
mov
andb
aas
aaa
ljmp
sub
mov
push
or
mov
sub
stos
sub
jl
xorb
hlt
push
outsb
das
rolb
xchg
scas
fistps
imul
and
psubb
shlb
ret
jno
mov
adc
sbb
aaa
add
and
push
stc
out
out
cmp
and
shufps
outsl
mov
js
lcall
pop
cwtl
cmp
inc
xchg
push
sahf
dec
int3
aad
sbb
outsl
rcrl
jmp
push
sbb
stos
mov
cmp
adc
jmp
mov
xor
mov
fstps
out
xor
shlb
adc
push
jmp
push
or
enter
push
lds
mov
xchg
enter
psubd
sub
cs
sbb
es
mov
dec
cli
clc
sbb
insl
and
mov
add
xor
jnp
sti
add
inc
and
dec
jp
mov
repz
data16
fwait
inc
leave
xor
fisubl
pop
aad
sbb
xor
ficomps
inc
cmp
push
outsb
jmp
mov
sbb
popa
into
inc
push
sbb
xchg
xorl
mov
cmp
dec
adc
xchg
pushf
cmp
sbb
nop
addb
mov
sbb
outsl
pop
arpl
imul
mov
les
nop
test
iret
mov
and
lret
std
popa
in
xchg
adc
dec
imul
xor
mov
nop
div
stos
jb
rcl
dec
in
pop
xor
rol
ss
jo
mov
add
jmp
add
aad
fbstp
insl
adc
mov
ficoms
cmpsb
daa
mov
add
and
out
inc
jecxz
pushl
dec
cmpsb
mov
dec
gs
pushl
adc
testl
mov
jns
pop
into
mov
pop
sti
ret
mov
sahf
or
pop
push
cmp
xor
shlb
fwait
repnz
lea
xchg
sbb
xchg
and
lods
sbbl
mov
or
inc
shll
int3
push
call
mov
sub
push
dec
adc
ret
std
aas
in
inc
jns
enter
dec
cwtl
cmp
and
xor
lods
push
jns
push
sbb
cmp
repz
jno
pop
out
cwtl
mov
fdivs
enter
in
mov
sub
xchg
loope
push
loop
xchg
outsb
out
cmp
or
push
shl
add
jp
jno
shll
push
sti
jle
test
add
sbb
pop
mov
dec
inc
rcrb
cwtl
xchg
jge
rolb
pop
and
lret
or
push
cmp
nop
hlt
cvttps2pi
mov
sub
adc
sbb
lret
jp
and
cli
inc
lock
mov
xrelease
sub
or
xchg
or
lahf
ds
mov
lret
loopne
lea
adc
lcall
or
rcrl
rol
jmp
fldenv
decl
scas
mov
test
out
inc
mov
inc
cmp
cs
nop
int
xchg
jge
cwtl
pop
js
jl
arpl
and
sbb
dec
mov
add
leave
ds
mov
in
and
sbb
jle
mov
cmpsl
cmp
mov
out
and
add
push
add
nop
aam
lcall
xchg
dec
push
aad
sub
outsb
adc
and
lret
xchg
xor
pop
pop
fimuls
fidivl
pop
test
stos
jb
iret
lds
jecxz
addb
inc
or
cmp
jmp
fildll
dec
ss
lret
pop
cmp
mov
pop
rcll
sub
inc
mov
adc
mov
xor
xor
loop
or
mov
scas
lock
jg
vpsubusb
xchg
pop
mov
fsts
in
out
pop
mov
std
xchg
xor
inc
mov
fs
mov
arpl
jne
int
cwtl
xchg
jmp
inc
pusha
int
jnp
or
in
rcl
push
inc
mov
jg
icebp
mov
dec
imul
bound
pop
push
aaa
xorl
lcall
imul
sub
cmp
mov
sub
jno
mov
out
movsb
sub
sub
pop
fsts
shrb
loope
out
adcb
popf
test
jge
sbb
popa
mov
mov
pop
lods
pop
mov
ss
loopne
push
je
fdiv
pop
pushf
add
inc
push
fwait
imul
jno
movsl
adc
es
dec
mov
adc
lcall
xchg
xchg
int
popa
inc
or
fdivrl
mov
push
push
je
repnz
or
cwtl
cli
mov
shll
daa
in
out
in
jns
mov
xchg
std
dec
xor
cmc
push
test
repz
xchg
stos
dec
push
ror
outsl
xchg
sbb
dec
pop
jl
addr16
cmpsl
mov
mov
pop
xchg
sub
loopne
iret
dec
arpl
cmp
push
cmp
enter
cmp
mov
cld
xorb
sub
xor
psubw
pop
pop
rcl
inc
sbb
aaa
lea
pop
bnd
jge
fsts
mov
mov
jbe
jle
out
ret
cmp
aad
pop
clc
xchg
mov
mov
sub
out
cld
or
in
mov
scas
xchg
inc
push
dec
jg
addr16
mov
jnp
push
cld
sahf
cli
daa
mov
jle
mov
es
sub
rcrb
jl
pop
in
repnz
push
adc
xor
out
jo
ljmp
lret
add
ret
lahf
pop
aaa
ret
mov
push
mov
in
sub
pop
xor
jbe
xchg
es
addr16
mov
add
add
sbb
cmpsb
pusha
test
push
lret
iret
add
repnz
clc
cltd
pop
cli
pop
cmp
scas
sysenter
mov
insb
aas
add
push
xor
add
cmp
roll
adc
loopne
push
mov
insb
mov
pop
lds
daa
testb
sbb
adc
adc
aam
popf
lds
adcl
xor
cvttps2pi
cmp
inc
mov
xor
iret
int3
sbb
cmpsl
push
xlat
adc
iret
mov
out
inc
lock
jl
stos
pop
jle
loopne
xor
pop
enter
mov
mov
loop
and
sub
jne,pn
js
addb
mov
bound
cwtl
xchg
repnz
xchg
leave
push
jnp
cmp
les
mov
aas
mov
push
and
jbe
out
orb
dec
jno
xchg
int
repnz
mov
mov
jo
xchg
adc
jp
xor
cmp
mov
into
inc
gs
pop
enter
outsl
sbb
push
dec
subb
pop
pop
scas
or
ljmp
std
pop
sbb
pushf
adc
rcrl
xchg
mov
jne
fdivrl
mov
dec
cli
jno
subl
xlat
inc
movsl
mov
fucomip
xchg
sbbl
inc
mov
adc
nop
push
test
ss
scas
rcll
xchg
xchg
or
popf
les
insl
popa
inc
or
enter
cs
xchg
sub
out
sub
out
pop
pop
mul
mov
jl
into
mov
cmpsb
ret
flds
inc
xchg
jne
inc
shlb
or
sbb
jb
call
lods
std
scas
lock
jb
jecxz
cmp
loope
dec
imul
lret
aad
push
nop
dec
or
js
cld
mov
setge
shlb
je
xor
dec
and
xchg
pop
sub
cmp
stos
pop
xchg
pop
popf
enter
add
jne
cld
ja
outsl
dec
addr16
jg
shr
lcall
dec
andl
push
dec
sbb
cmpsb
js
dec
stos
loopne
jl
leave
and
idivb
jnp
mov
or
sbb
addr16
movsl
dec
push
cmp
add
lods
std
dec
pop
out
scas
dec
stos
call
add
mov
adc
push
sbb
mov
fstp
dec
adc
jmp
push
and
jmp
jo
xchg
or
into
aam
stos
add
outsl
and
stos
stos
fabs
cwtl
test
pop
and
leave
pop
ljmp
jge
sub
mov
add
mov
cmpb
popa
lcall
mov
adc
lret
push
leave
and
dec
jp
js
aas
and
iret
aam
in
or
dec
cltd
add
mov
jns
inc
aad
sbb
pusha
cltd
repnz
sub
ja
inc
pop
into
adc
cmp
inc
xchg
lods
ficoms
std
push
sub
pop
imul
push
add
orb
aaa
ret
aas
cmp
loopne
test
fidivl
cld
cwtl
lods
jp
or
movsl
in
ds
sbb
hlt
movsb
xor
cmpsl
mov
adc
jecxz
or
lock
push
push
push
dec
scas
pop
int3
add
aas
mov
sbb
mov
cmp
sub
push
movsb
rclb
xor
dec
push
pusha
xor
stos
push
jne
ss
push
and
or
rol
movsb
pop
push
movl
push
fwait
mov
jecxz
cmpb
mov
in
add
or
test
addb
jp
add
mov
jmp
xor
jg
std
hlt
jmp
pop
test
xchg
add
sub
lea
mov
push
pop
mov
test
inc
add
sti
or
loop
cli
es
scas
or
nop
xchg
rorb
xchg
ret
adc
dec
adc
push
cmpsb
xor
xchg
inc
sub
cmp
xchg
inc
sbb
adc
jo
inc
lods
ror
pop
jge
stos
push
add
add
fimuls
cmc
mov
inc
or
ret
cmp
jge
sbb
mov
jle
ret
mov
rcrl
shlb
mov
aam
cld
jae
mov
jle
mov
cmp
push
xor
dec
cwtl
mov
pusha
sub
xor
lds
js
mov
jp
in
jmp
xor
pop
cli
mov
mov
addr16
rolb
mov
sbb
pop
mov
or
lea
rcrb
or
push
repz
or
mov
dec
pop
loopne
das
jp
sub
add
adc
imul
add
stos
lods
mov
push
jne
pop
lock
movsb
ljmp
outsb
push
push
pop
pop
cmpsl
jae
es
push
mov
outsl
fs
xchg
inc
sub
icebp
push
fldl
scas
adc
ret
out
pushf
adc
xchg
test
stc
and
jmp
out
xchg
jl
push
dec
xor
jle
les
xchg
push
cmp
repnz
push
push
out
fwait
loopne
jbe
push
ret
mov
xchg
mov
pop
cmc
pop
dec
inc
mov
pushf
mov
sbb
out
push
in
push
jle
pop
mov
lds
cmp
shlb
mov
pop
push
and
push
add
xchg
or
mov
fcompl
data16
mov
inc
inc
dec
xchg
jp
mov
sti
cmp
mov
fcmovnb
jb
outsl
mov
xchg
je
mov
sub
sbb
dec
add
insb
sti
push
mov
loop
outsl
sahf
in
aad
mov
nop
iret
jmp
cltd
jmp
pop
fistps
add
test
dec
cmc
push
xchg
push
aam
sarb
out
sbb
push
dec
int
mov
xchg
pop
repnz
push
sbb
cwtl
mov
mov
je
adc
add
cs
adc
sbb
xor
stc
out
loope
das
mov
sbb
sarb
pop
rcrb
sub
dec
mov
xchg
call
test
sahf
lret
dec
cmp
mov
xor
push
mull
fiaddl
pop
dec
jmp
xchg
push
cmpsl
orb
ss
in
sahf
xor
lock
jno
adc
iret
pop
sbb
sub
mov
movsb
mov
xor
sbb
xchg
rolb
loope
sub
lret
mov
cmp
adc
fst
mov
jmp
adc
push
mov
inc
sbb
stos
sarb
pop
jno
jmp
inc
imul
dec
push
stos
mov
ss
xor
pop
mov
xchg
jmp
lods
mov
in
jecxz
sbb
xor
mov
decl
sbb
pop
push
xor
sbb
mov
dec
push
or
inc
nop
lods
sbb
fprem1
dec
sub
out
mov
out
adc
sbb
jl
or
andl
xor
and
inc
fwait
movb
cmp
adc
adc
out
jle
xchg
jge
adc
or
cltd
mov
out
sub
and
gs
pop
in
inc
xchg
mov
dec
jne
loope
aas
mov
jb
ret
xchg
das
ljmp
sub
ret
andl
lock
es
add
mov
cmpb
push
repz
sub
lods
insb
add
aaa
outsb
in
xchg
arpl
and
jne
push
mov
ja
pop
ror
mov
adcb
pop
xchg
imul
dec
jae
pop
sbb
dec
les
sbb
arpl
xchg
aam
and
cld
sbb
aas
pop
mov
into
mov
inc
enter
daa
mov
cld
mov
addr16
push
pop
push
xor
lret
dec
sub
in
movb
dec
mov
mov
inc
jl
pop
lcall
cmp
dec
outsb
pop
test
mov
push
movsl
mov
subl
mov
icebp
push
es
aam
mov
and
stc
jge
dec
inc
mov
xchg
imull
out
push
iret
xchg
fdivs
ret
inc
jg
mov
stc
repz
cmp
jb
cli
jl
test
repnz
mov
sbb
mov
into
aas
mov
adc
xor
jno
mov
shll
or
mov
mov
outsl
jg
cmp
and
subb
ror
dec
std
mov
and
push
xchg
mov
test
lock
adc
invd
cmpsb
dec
outsb
adc
and
sbb
inc
andb
mul
dec
xor
stc
mov
push
sti
push
lock
les
or
dec
cmc
std
lahf
fldt
fstp
fdivrl
outsb
nop
cld
cmp
shrl
xchg
sub
add
pop
test
mov
push
dec
xchg
adc
cltd
addr16
ret
lods
ret
cmp
adc
aam
xor
adc
rcr
inc
sbb
sti
xchg
int3
push
mov
cmp
gs
push
out
push
in
push
icebp
iret
in
inc
mov
addb
inc
jae
adc
out
shlb
xchg
cmp
lret
int
sbb
add
shll
adc
add
ljmp
addr16
add
repnz
mov
ds
jge
std
mov
aam
daa
repnz
inc
push
movsl
push
inc
in
std
and
addr16
pushf
mov
mov
jle
aaa
push
movsl
hlt
arpl
add
push
out
cwtl
out
popf
dec
popa
adc
jbe
pop
loopne
jb
fcoml
mov
cmp
pushf
jge
mov
cmp
push
test
cmp
stc
xchg
push
leave
xchg
push
in
mov
lea
loop
std
lea
aas
hlt
aad
shll
sub
jmp
pop
int3
mov
insl
push
ret
jmp
add
testb
ret
and
bound
push
xchg
push
jp
sbb
push
cli
call
pop
sti
loop
push
xchg
insb
sub
mov
sarl
stc
add
xchg
pop
push
mov
cmpsb
sub
pop
inc
xor
jne
lret
addr16
clc
xlat
loope
imul
jae
sub
leave
lea
in
mov
das
fadd
lcall
test
cwtl
sub
movsl
or
fsubs
imul
pop
pop
xlat
pop
jg
fiaddl
test
xchg
repnz
push
adc
lcall
aaa
jae
int3
lret
pop
pop
pop
jmp
adc
rorb
out
mov
xchg
adc
mov
cmp
loope
insb
push
dec
imul
mov
xchg
filds
int3
cmc
data16
mov
gs
sbb
mov
pop
fildl
mov
dec
mov
cmp
mov
cmpsb
fiadds
xchg
cwtl
pusha
xchg
jo
js
pop
jne
pop
cli
xor
pop
adc
push
das
out
or
mov
hlt
repnz
sbb
sbb
mov
mov
jg
lea
mov
pop
dec
arpl
jno
xor
lock
push
es
or
insl
fsts
mov
mov
dec
mov
dec
mov
loope
in
test
lock
lcall
int
lahf
mov
xlat
mov
cmp
pop
mov
lahf
push
mov
push
xor
and
cmp
dec
cld
test
mov
es
dec
or
stos
and
cli
jle
push
xor
je
sub
mov
icebp
lock
inc
inc
add
std
and
sti
jmp
lock
xor
push
roll
inc
in
lea
push
sbb
lods
icebp
mov
hlt
cltd
push
xchg
out
mov
repz
js
div
mov
fidivl
ret
in
mov
stos
test
xchg
fmulp
cmpsl
in
mov
lret
push
jp
push
ljmp
aam
shl
into
ja,pt
sbb
repz
lret
inc
sbb
dec
push
iret
pushf
leave
movsb
cmpsl
lods
mov
popf
cmp
xchg
add
pop
sti
jo
movsb
push
rcrb
repz
xchg
cmpsl
push
lea
mov
fstpt
mov
xchg
sub
sub
test
mov
push
test
cmpsl
mov
popa
stos
lret
sub
push
push
mov
mov
arpl
push
aam
and
inc
xchg
inc
jecxz
jne
setb
js
jo
daa
sbb
fidivl
mov
xchg
ret
xlat
adc
rcrl
imul
fdivr
mov
and
mov
gs
dec
aas
ret
mov
sbbb
out
pop
xor
xchg
mov
inc
ret
sahf
mov
jl
dec
cmp
and
ja
push
mov
fsts
aam
push
mov
jg
jb
add
add
cmp
jecxz
push
adc
mov
pop
loopne
sbb
sbb
mov
xchg
into
out
in
mov
xor
jne
rorl
iret
jg
xchg
jg
and
testl
repnz
fwait
cld
push
dec
mov
xor
imul
and
pop
sub
push
mov
sbb
cli
xor
push
movsb
rol
sub
aam
cli
std
mov
lahf
out
test
jae
push
adc
les
jmp
out
test
adc
and
enter
mov
les
inc
and
sbb
pop
aam
jb
fnstenv
rcrl
out
in
lea
nop
mov
scas
jb
mov
stos
pop
push
pop
in
push
mov
pop
cmc
test
mov
and
jns
inc
div
outsl
pop
popa
movsb
push
lods
and
jno
and
adc
ret
mov
aam
leave
jmp
jns
adc
add
sub
out
sub
and
xchg
mov
cmc
push
popa
jp
mov
cmpsl
mov
push
fs
mov
fnstsw
sbb
pop
cmpl
pop
mov
sbbl
or
mov
or
push
out
outsl
out
mov
cmp
mov
sub
inc
js
inc
pop
fs
jo
bnd
icebp
stos
push
xor
int
add
jmp
sahf
inc
xchg
dec
lock
nop
pusha
adcl
jecxz
shl
rcll
loop
in
dec
jge
sahf
mov
cmpsb
in
pop
shll
sub
mov
sbb
jmp
js
jge
or
pop
push
sub
push
mov
xchg
ljmp
mov
jae
adc
adc
imul
or
mov
out
hlt
cmp
pop
jae
inc
hlt
loop
mov
push
inc
push
sti
ret
les
stos
xchg
pop
cld
je
xlat
mov
divb
test
cmp
push
jmp
push
adc
repz
jns
jns
cs
outsl
subl
mov
cmpb
mov
test
xchg
sti
jle
mov
stc
dec
iret
xchg
mov
loope
push
sbb
jg
mov
fidivrl
xchg
push
pop
addr16
and
pop
in
push
or
cs
fst
addb
sti
lret
mov
mov
mov
cli
pop
sub
divl
add
cmp
cmp
lods
sahf
dec
out
cs
das
push
scas
push
add
inc
aas
pop
aas
xor
cmp
adc
insl
in
mov
pusha
mov
lods
dec
mov
roll
fistl
and
ret
sbb
jl
mov
test
jg
dec
pop
cmp
les
cwtl
xchg
adc
or
and
jo
mov
fisubl
lods
mov
ja
cmpb
std
repz
adc
adc
and
pop
xlat
adc
cmp
subb
push
sub
sar
or
cmpsl
and
jb
shl
movsb
arpl
sahf
dec
out
stos
sbb
in
add
icebp
xor
xor
pusha
jne
or
sbb
out
xchg
xlat
push
hlt
and
out
pop
and
adc
dec
clc
push
iret
jl
je
add
movsl
jns
fisubl
sbbl
scas
xchg
shll
ret
fimuls
lds
aaa
sub
adc
mov
jbe
paddd
pop
mov
jmp
inc
movsb
lds
clc
call
add
adc
addr16
mov
xchg
lret
inc
outsb
sarb
and
sbb
loop
pop
cmp
jbe
scas
mov
xor
inc
push
mov
xor
loopne
inc
mov
mov
pop
lcall
sarb
popa
or
outsb
pop
jae
repnz
add
ret
cmp
cmp
xlat
xor
and
sub
lods
cmp
shl
mov
loopne
pop
je
mov
add
imul
insl
cmp
push
loopne
outsb
gs
push
fwait
mov
pop
xchg
jns
ror
or
cmpl
out
mov
loopne
rorl
loop
fidivrl
mov
sahf
outsb
xor
enter
or
into
xchg
gs
sub
or
jbe
cmpsb
push
xlat
jb
je
and
shlb
sbb
lds
das
ljmp
pop
push
adc
pusha
ret
jns
outsb
pusha
sub
stc
jg
and
push
mov
add
jnp
lahf
loop
lcall
adc
jle
test
add
aaa
mov
shlb
jg
jg
fstpt
pushf
repz
leave
xor
insb
pop
adc
repnz
icebp
stos
sbb
stc
das
dec
xchg
inc
dec
jns
xor
std
test
jno
ret
fsubrs
cmp
lds
xor
mov
and
rorb
sub
mov
cmpsb
inc
push
xor
sub
fcmovnu
or
cld
adcb
rorl
popf
jmp
dec
jae
pop
enter
dec
cmpsb
sub
jae
stc
js
mov
jle
adc
dec
mov
adc
jb
mov
test
mov
push
jb
int3
stos
mov
mov
inc
nop
gs
fmull
xor
iret
xchg
pop
inc
jg
dec
andb
pop
sbb
xor
mov
push
icebp
adc
push
sbbb
sub
sti
and
js
popa
mov
pop
push
xchg
fnstenv
ds
mov
daa
out
sbb
adc
jnp
movsb
or
add
andl
test
push
adc
or
mov
sbb
scas
and
scas
nop
fsubs
in
test
fidivs
lret
adc
loopne
and
jne
add
sub
imul
jge
push
pop
dec
scas
push
loopne
test
fs
fcoml
rcr
in
mov
arpl
jb
cmp
fidivrl
and
adc
out
mov
dec
out
sub
loop
add
cltd
push
pop
or
mov
pop
fbld
fisubrs
mov
data16
addl
iret
pop
sbb
loope
xor
packsswb
sbb
jne
xor
sbbb
jae
popf
scas
ds
test
push
sub
aam
dec
add
mov
dec
dec
fcmove
loope
cmp
fxch
icebp
or
pop
inc
cltd
add
or
xchg
sbb
jge
nop
xlat
das
shrl
push
pop
out
jmp
mov
mov
add
cmp
enter
inc
push
pop
cltd
xchg
mov
sbb
mov
cmp
insb
xchg
push
in
mov
push
fcompl
in
std
push
mov
xor
outsl
push
scas
fldenv
cmc
cmpsl
mov
inc
pop
cmp
push
push
mov
xchg
stos
stos
inc
mov
pushf
add
adc
or
test
xchg
ret
ljmp
mov
push
add
loop
cmp
lock
inc
lahf
lds
jnp
sub
or
mov
mov
icebp
jmp
mov
dec
aaa
xor
cmp
aas
insl
xlat
fs
int3
mov
scas
pop
sbb
mov
insb
idivl
adc
outsl
les
add
lods
dec
negb
dec
out
inc
cmp
bound
into
insb
cmpsl
out
jbe
cmp
push
cmp
fs
jmp
or
addr16
mov
in
push
das
cld
dec
ljmp
inc
scas
mov
ja
or
aam
addb
outsb
hlt
cmp
jb
push
push
xor
dec
into
pop
aad
mov
push
stos
jmp
stos
stos
add
mov
and
mov
mov
pop
cmp
cmc
mov
inc
je
xor
mov
rolb
push
sarb
test
pop
idiv
push
imul
xchg
popf
mov
gs
js
into
or
xchg
pop
cli
sahf
pop
cltd
sub
xchg
jns
inc
stos
and
adc
jp
cmp
in
test
lea
pop
aaa
jmp
lret
scas
sbb
jb
add
pop
cmp
fdivrs
test
pop
sbb
rolb
test
mov
pop
mov
sub
dec
in
filds
in
pop
mov
sub
daa
loopne
stc
mov
inc
jb
xchg
cmp
rcl
lock
cmpsb
nop
dec
testl
ss
fisttpl
xor
rcrb
loopne
add
movsb
sbb
xchg
push
xchg
outsl
push
dec
aam
mov
repz
sbb
out
cmpsl
xor
shrb
push
shlb
ss
adc
mov
test
mov
notl
xor
add
outsl
pop
xchg
mov
jmp
ja
push
cltd
test
call
fdivl
lds
jns
and
xor
nop
mov
call
adc
movl
inc
xchg
cmc
xor
xchg
outsl
in
sti
mov
pop
mov
xchg
cmp
mov
daa
fwait
cmp
stos
mov
movsb
or
lds
je
loop
data16
jecxz
adcb
dec
pop
in
aad
push
sbb
xchg
call
lock
dec
shll
mov
xchg
loop
mov
in
dec
mov
jb
in
cs
subl
dec
int3
cld
mov
rcl
sub
shl
test
cmp
iret
int3
fnstcw
insb
imull
dec
mov
sbb
sub
or
push
dec
in
xchg
add
add
pop
xchg
add
icebp
out
andnps
out
es
testl
add
fldl
mov
push
rcrb
mov
leave
fucomp
push
scas
xor
sti
xchg
fdivrl
jns
push
mov
push
add
sub
pusha
dec
adc
sub
xchg
mov
xchg
cmp
mov
ret
repnz
stos
cmp
scas
mov
movsb
shr
adc
pop
sub
dec
jmp
and
sbb
add
sub
pusha
andl
push
mov
addr16
insl
inc
arpl
gs
es
push
and
inc
pop
pop
jns
cli
mov
and
insb
ror
and
int3
scas
inc
fcompl
xchg
gs
adc
stos
cmpsl
pop
xor
sbb
out
jo
sbb
repnz
aaa
cmpsl
cmpsb
loopne
xorl
or
enter
and
int
and
ja
jae
xchg
aaa
jg
in
leave
mov
adc
pop
mov
ret
sbb
push
mov
int
lret
push
lahf
mov
pop
xor
stc
dec
or
mov
gs
arpl
in
mov
xchg
push
push
xchg
jmp
mov
iret
loope
loop
inc
or
imul
scas
std
push
aad
ljmp
sbb
cld
es
dec
inc
jge
xlat
rclb
sbb
out
dec
insl
cmp
mov
test
je
or
in
call
sbb
lds
sbb
or
inc
test
into
shll
xor
imul
test
sub
sbb
pop
in
and
adc
and
cmpsl
pop
dec
js
outsl
fdivp
jl
popf
inc
push
int
mov
loopne
pop
lds
scas
repnz
cld
icebp
popf
loop
mov
mov
in
dec
pop
cli
push
cmp
sbbl
pop
jno
int3
repz
test
inc
cwtl
fmuls
sbb
dec
aas
imul
mov
adc
int3
mov
mov
add
icebp
divb
jle
mov
mov
xor
add
jecxz
popf
shll
push
mov
test
xor
bound
int
loopne
sbb
lea
ret
mov
sbb
lods
out
mov
mov
shl
dec
dec
leave
sar
lods
pop
lret
adc
mov
and
cmc
inc
ret
xchg
sti
outsl
aaa
xchg
pop
loopne
sub
sbb
divl
repz
insl
inc
and
movsl
mov
sti
mov
loop
adc
xor
mov
xchg
sahf
enter
ror
jmp
outsb
aad
push
push
mov
cmp
loope
shll
pop
fs
xchg
pop
mov
jno
xor
xchg
push
fdivs
fs
das
cli
je
mov
adc
jb
notb
nop
fwait
xorb
jle
cmpsb
add
scas
fstl
outsb
mov
in
stc
push
dec
mov
xor
sub
mov
pusha
imul
xor
or
mov
sbb
orl
iret
mov
cmp
ss
faddl
mov
stos
cs
movsl
cmpsb
xchg
xchg
cltd
adcl
add
stos
nop
repnz
aam
cmpsb
aam
dec
and
mov
cmpsb
cmpsb
out
test
out
add
pop
fwait
mov
push
add
scas
dec
aaa
inc
mov
fcomip
test
lock
add
push
xchg
popf
xor
cmp
cld
jae
out
pop
mov
jo
jl
sbb
ret
pop
mov
jmp
leave
shl
jmp
jno
sub
xchg
and
cmpsl
out
dec
in
aam
andl
cmp
jno
pushf
out
mov
pop
cmp
cmpsl
rolb
mov
fsubrs
daa
call
xchg
fstps
adc
sub
and
inc
mov
aad
jmp
mov
data16
sub
leave
xchg
add
movsb
call
sti
adc
push
inc
mov
and
fimuls
fnsave
sub
or
mov
jns
clc
movsl
and
icebp
int3
ret
and
mov
loop
lock
mov
outsl
xor
test
and
mov
cmp
mov
or
sbb
repnz
lret
fcmovne
jmp
jge
xchg
in
cmpsb
std
dec
andb
je
pop
fsqrt
jb
sub
mov
lods
movsl
adc
xor
repz
fnstsw
je
cmp
adc
sti
stos
aaa
iret
js
sub
xor
cli
aas
inc
lods
jl
push
sub
push
and
pop
ljmp
push
sarl
stos
push
outsl
mov
inc
lcall
jbe
jns
adc
xchg
std
mov
ljmp
jl
test
in
shrb
adc
repnz
xchg
loop
push
imul
inc
push
inc
pop
jns
cmpsb
jae
les
sub
mov
sub
cmc
inc
lock
pop
ficoml
enter
outsb
ds
call
sbb
sbb
add
or
stc
mov
mov
adcb
bound
pop
call
clc
pop
jae
test
pop
push
repnz
insl
adc
daa
inc
scas
loopne
lock
adc
mov
lcall
bound
scas
sbb
je
aas
mov
xchg
mov
adc
std
push
xor
add
inc
scas
cwtl
insb
stos
mov
sbb
lret
lret
in
adcl
imull
ffreep
std
adc
sub
popa
es
rcrl
xor
daa
push
inc
mov
mov
cmpsb
cmp
mov
inc
insb
ja
mov
out
and
lock
mov
mov
jle
ljmp
fisubl
push
js
jae
sub
sub
or
stos
add
mov
push
inc
dec
cmp
dec
ja
insb
insb
mull
into
xor
stc
dec
xchg
push
xchg
lcall
push
mov
jnp
icebp
xor
sub
mov
inc
xchg
leave
xlat
pushfw
cmpsb
lret
inc
xchg
xchg
jl
jmp
inc
pop
adc
std
loop
outsb
fldl
fs
sarl
cld
jbe
ss
jo
mov
imul
out
call
and
ret
sub
sbb
xchg
fnstsw
test
ljmp
jo
gs
adc
lock
mov
mov
popa
in
sub
dec
jge
mov
pop
mov
bnd
clc
out
shl
or
cmp
std
hlt
adc
pop
ljmp
xchg
mov
sub
mov
mov
xor
ljmp
jg
push
dec
loope
out
cmpsb
lds
scas
adc
loopne
fnsave
es
lods
popf
xchg
sub
mov
outsb
mov
addr16
lcall
cmpsl
pop
inc
shll
leave
xchg
add
shrl
rorl
pop
push
or
jge
jmp
rcrb
push
jnp
mov
xor
xchg
nop
mov
fnstsw
es
out
inc
pusha
test
or
clc
jge
in
sarl
fs
pop
push
test
loope
aad
mov
ja
jo
jecxz
lods
xchg
ljmp
and
enter
cmp
pop
mov
and
sahf
jmp
pop
adc
sbb
sahf
mov
add
das
divb
sti
cltd
scas
mov
mov
and
enter
das
iret
ljmp
mov
pop
nop
xor
imull
cmpl
iret
and
test
ficomps
and
and
mov
roll
mov
nop
mov
xchg
xchg
fcoml
mov
scas
jns
sub
inc
inc
push
add
insb
sbb
pop
cs
cltd
push
lahf
scas
orl
jnp
and
jnp
sbb
mov
nop
push
mov
or
jb
aam
inc
xchg
addr16
or
test
rcrl
cmp
mov
les
pop
push
add
out
stos
adc
sahf
out
divl
lods
cmp
jae
cmc
cmc
push
jne
out
fs
cmpsl
ljmp
adc
jnp
push
or
adc
push
push
enter
movsl
sbb
call
add
jl
inc
dec
and
icebp
dec
lods
not
mov
shlb
roll
mov
inc
pop
mov
inc
mov
in
outsl
outsb
mov
ret
xchg
out
lock
stc
repz
test
and
loopne
jnp
pop
pop
sbb
fdivl
xchg
pop
cmpsl
sub
mov
iret
fadds
xchg
inc
jg
inc
or
pop
and
and
out
mov
dec
pop
push
mov
js
or
fwait
jmp
testb
add
gs
stos
mov
cmp
add
cmp
cs
cmp
mov
lret
pop
bound
add
xchg
inc
push
lods
sti
or
cmpsb
jecxz
push
sbb
xor
sbb
xchg
ja
sub
nop
sub
daa
lds
sub
and
setl
jbe
je
imul
push
out
insl
inc
outsl
pop
pop
fsubp
sbb
cltd
pop
mov
addr16
inc
or
sahf
arpl
xchg
mov
mov
dec
jp
cmp
cwtl
pusha
in
xlat
xchg
mov
rol
test
xor
mov
cmp
add
mov
clc
jp
sub
jle
and
push
cli
jl
jb
push
shrb
and
and
xor
pusha
adc
dec
iret
pushf
add
xor
sti
dec
mov
sub
popf
fnsave
les
fsubl
pop
xlat
rcl
sub
sub
or
xchg
push
and
dec
jp
fdivr
clc
and
inc
and
xchg
pop
shr
mov
push
push
out
out
mov
adc
subl
insb
in
mov
cmp
loop
cmp
mov
mov
jne
mov
pusha
and
fcoml
mov
xorl
cltd
cmpsl
xchg
stos
mov
ss
nop
xor
mov
hlt
pop
mov
mov
mov
fdivs
fst
add
jnp
out
sar
or
sub
loope
ret
xor
popf
js
push
lock
fidivrs
fldt
out
xchg
push
repnz
jle
push
cmpsl
les
adc
pop
jae
lods
and
cmp
jae
sub
xchg
adc
orl
cmp
sub
mov
das
dec
mov
mov
jge
xchg
inc
lock
inc
test
stc
daa
js
adc
push
jmp
lods
ror
in
cmp
xor
dec
pop
xchg
jmp
sub
nop
lds
fistl
shr
loopne
lret
jbe
lea
jecxz
std
jp
movsl
lcall
shr
mov
incl
xor
insl
mov
rorl
fxch
std
loopne
sub
mov
jl
xor
scas
cs
dec
gs
jne
jnp
out
sbb
jg
inc
jns
cmc
jmp
pop
repnz
push
dec
sub
xchg
pop
imulb
push
andb
out
mov
and
popf
sub
shrb
sub
in
push
jle
ret
inc
test
ffree
subl
jp
mov
rcr
mov
sbb
mov
leave
or
jl
popf
test
sbb
or
inc
push
pop
push
push
pop
mov
gs
mov
es
and
jp
fs
bound
in
push
pusha
pop
dec
inc
cmpsl
sbb
sbb
bnd
xor
adc
mov
jae
sub
cmp
mov
mov
add
call
scas
or
push
loope
fnstsw
xor
push
lret
repz
in
enter
mov
icebp
cmpsl
push
and
sarb
dec
imul
jl
xchg
divb
pop
mov
sti
bound
and
xchg
imul
mov
shrl
sbb
cmp
js
fadds
mul
insb
lods
cltd
mov
hlt
or
int3
lds
add
pop
ficoml
sbb
imul
rcr
push
cli
xor
adc
rolb
xchg
ljmp
fst
or
mov
push
ja
inc
test
xchg
push
cmp
std
jns
xchg
test
ret
shl
push
add
mov
jne
or
jecxz
or
cld
inc
mov
mov
xchg
fcomps
inc
lods
inc
fisttpl
insl
or
mov
jne
sti
es
inc
rclb
fdivr
jp
lea
xor
or
mov
sti
mov
jae
cmc
popf
jae
dec
and
stos
out
and
push
divl
cs
or
inc
jb
jmp
lods
and
insb
push
mov
mov
fdivrs
inc
sub
aas
fcompl
out
pop
mov
repz
pushl
pop
movsb
mov
in
ret
scas
push
stc
cwtl
xchg
inc
mov
leave
cltd
test
aad
mov
outsl
incl
ja
sbb
xor
add
popa
adc
adc
pop
xor
int3
xchg
ret
or
cli
dec
aas
xor
inc
push
pusha
insb
mov
adc
jno
decl
and
test
or
fnsave
outsb
mov
cmp
or
pushf
sub
rolb
gs
adc
sub
mov
adc
push
pop
scas
fdiv
push
cwtl
and
adc
jmp
mov
ss
jae
push
push
movsb
aas
cld
rcl
pushf
ret
and
repz
into
in
data16
mov
xchg
pop
add
js
inc
in
adc
xlat
jns
lea
iret
leave
cmp
jge
xchg
cmp
sbb
add
add
dec
inc
not
in
out
mov
insl
sbb
rcrb
mov
or
adc
and
outsl
loopne
iret
loop
dec
mov
mov
mov
popf
icebp
scas
mov
jecxz
lret
and
imul
dec
aas
xorl
mov
into
jle
jl
lcall
pop
ja
cmp
lods
arpl
add
mov
push
xor
xchg
inc
imul
shlb
cmc
add
dec
lock
xlat
sub
jg
fidivrl
xchg
arpl
xor
mov
sub
sbb
mov
pop
add
add
inc
xchg
sub
outsl
int3
push
inc
insb
movsb
add
sahf
jb
sub
xchg
scas
xlat
add
pop
or
xlat
stos
das
out
or
cmp
mov
dec
xchg
aas
dec
cli
inc
pop
xor
outsb
xchg
cmp
fs
repz
fs
adc
test
jmp
loop
dec
rcrl
mov
jl
cmp
mov
or
test
ja
and
and
jno
jmp
push
xchg
mov
dec
push
dec
cmpsb
dec
les
pop
cmc
in
cwtl
out
and
stos
lods
fxch
pusha
jo
mov
pop
and
cmp
xlat
lea
or
gs
pop
out
inc
bound
pop
in
add
push
jbe
adc
cmp
imul
int
and
xor
fstps
sub
xchg
sub
repnz
adc
jae
imul
push
mov
inc
cmp
nop
cld
out
cld
pop
sbb
mov
jle
add
fcompl
arpl
jnp
jnp
paddsw
rcll
cmpsl
cld
xchg
andl
sbb
xchg
mov
clc
jl
sbb
addb
mov
sbb
mov
jge
aam
mov
out
out
iret
inc
jnp
sbb
pop
push
pop
adc
and
jne
add
shl
cli
cmp
cltd
jecxz
imul
mov
push
fbstp
jl
in
imul
inc
inc
cmp
and
or
mov
push
out
cld
out
push
lcall
jle,pt
cmp
push
or
outsb
scas
xlat
sbb
xor
es
xor
mov
mov
jno
aaa
push
testl
mov
mov
cmp
sbb
fiaddl
jmp
cmp
call
inc
sbbl
aaa
rorw
jle
adc
lcall
imul
aaa
aad
push
fstl
mov
fbstp
mov
pop
jecxz
addb
push
xchg
dec
test
movsl
cmpsl
xor
daa
arpl
aam
adc
stos
in
scas
inc
lcall
mov
inc
pop
out
imul
insb
enter
std
pusha
pop
insl
fwait
jo
xchg
cmpsb
aaa
ret
lock
xorl
in
sbb
jbe
shlb
or
fsts
pop
jae
jl
sub
mov
sub
stc
cld
and
inc
out
mov
xchg
mulb
jo
mov
aaa
cmp
inc
push
je
mov
cs
cmp
push
mov
insl
dec
cmp
leave
test
pop
rcrl
adc
xchg
shll
cmp
xor
mov
push
cs
outsb
test
test
jno
cli
push
out
pop
jne
movsb
ds
outsl
add
negl
nop
loop
roll
divl
lret
xor
fidivrs
mov
adc
flds
aaa
cmp
pusha
fnstenv
shrl
push
lods
mov
popf
and
fistpll
ja
roll
mov
dec
lcall
daa
xchg
adc
fidivl
in
inc
push
xor
cmp
hlt
pusha
popf
mov
inc
stos
cmp
stc
ret
pushl
cld
pop
imul
and
loope
aam
ss
jl
lock
pop
push
shlb
lea
xor
mov
dec
add
xchg
adc
jae
cwtl
mov
fsubr
test
dec
mov
and
test
idivb
mov
cmp
xchg
fistl
xlat
fnstcw
test
sahf
enter
pop
and
push
les
and
dec
fisubl
out
or
dec
dec
xor
push
cli
int
push
loope
scas
push
sbb
lock
mov
and
das
xchg
pop
leave
or
pop
jne
push
jle
mov
and
mov
pop
xor
fldcw
sub
test
push
lret
clc
push
lahf
jl
icebp
iret
and
idiv
add
mov
aam
test
jae
sbb
out
aas
mov
enter
sbb
incb
pop
pop
pop
fisubs
push
lret
sub
bswap
adc
or
outsl
sbb
test
in
das
cmpsl
add
lcall
inc
dec
std
sbb
sahf
push
mov
aam
mov
dec
stc
lea
cs
lret
mov
adc
sbb
jl
xor
repnz
adc
mov
mov
call
cmc
aas
xlat
adc
mov
out
xchg
insb
inc
imul
push
repz
cs
add
adc
movsb
lods
sbb
cmpsb
jmp
insl
mov
jmp
int3
stos
sahf
jb
sub
cmpsb
hlt
popf
leave
mov
int3
rorb
adc
jl
mov
ljmp
and
jecxz
test
pop
adc
xor
test
out
add
inc
jo
das
pop
jno
bound
pop
and
or
popf
mov
cmp
ret
ja
adc
sub
mov
lock
mov
xor
or
xor
out
adc
cmp
les
lods
mov
jbe
lahf
int3
in
outsb
pop
movsb
jns
lahf
inc
mov
sub
xlat
insl
xchg
dec
dec
inc
inc
jb
adc
dec
inc
dec
sahf
cmp
and
sti
jb
or
inc
stos
or
jnp
dec
rorl
jne
pushf
daa
ss
popf
stos
lret
je
sub
insb
jo
mov
ja
inc
mov
push
mov
inc
push
iret
repnz
push
cmp
cmp
xchg
mov
jle
scas
into
mov
mov
fs
movsb
inc
add
movsb
jb
aas
in
xchg
mov
jecxz
mov
cmpsl
jg
xchg
filds
push
sub
pop
int3
mov
xchg
mov
fnstcw
call
xor
lods
or
fidivs
fcomps
rcr
mov
adc
inc
jecxz
mov
xchg
rcr
js
push
add
cmpsl
push
or
jg
jno
sti
push
cltd
dec
cs
insl
out
push
ds
insb
je
or
mov
mov
pop
lea
cmpsb
jmp
pop
icebp
mov
sbb
inc
loopne
fcmove
mov
sbb
rolb
jbe
ljmp
add
jecxz
out
mov
loope
fsts
pop
xor
pop
std
mov
xor
aaa
and
in
sub
jle
mov
leave
das
ja
flds
jge
roll
cmc
or
in
cmp
je
rcrb
xor
fistps
xchg
lret
dec
push
into
dec
pushfw
xchg
cmpsl
jmp
bound
in
pop
ret
push
cmp
lcall
rcrb
imul
stos
mov
inc
pop
jecxz
std
call
jge
adc
popa
mov
ret
jns
jg
scas
mov
mov
inc
out
xor
sbb
cmpsb
mov
imul
outsb
pop
push
ret
xchg
adc
or
cli
mov
jmp
push
mov
sbb
xor
push
aam
push
orb
jecxz
push
mov
les
sbb
sub
mov
icebp
sub
add
mov
dec
or
ror
cmpl
push
insb
dec
push
inc
add
in
dec
mov
inc
dec
or
sar
mov
push
ss
mov
outsl
sbb
xor
mov
movsl
pop
jns
or
xchg
insb
popf
in
fsubrl
sahf
mov
inc
mov
rclb
sbb
lea
leave
cmp
xchg
mov
jb
dec
ss
in
popl
dec
sub
cmpsl
test
repz
insl
fwait
cli
ret
out
hlt
xor
pop
sahf
push
loopne
ljmp
jl
jbe
fdivl
mov
fwait
out
icebp
lock
mov
jecxz
mov
or
mov
sub
mov
data16
stc
jbe
test
pop
push
jp
shlb
faddp
testl
ja
push
incl
inc
jp
adc
in
push
mov
rorb
scas
pushf
insl
mov
in
cwtl
lds
mov
add
mov
insl
dec
jbe
push
ja
rcrl
xlat
test
stos
stos
xor
insb
mov
jo
and
pop
sub
cmc
popl
out
and
mov
testb
mov
int3
call
test
jne
mov
sub
lcall
hlt
jecxz
or
add
ja
lret
int3
insl
daa
dec
xor
pop
jmp
sbb
mov
lahf
dec
sti
cmc
lret
stos
lea
test
iret
test
cmp
cltd
push
icebp
pause
aam
jnp
fldenv
or
icebp
les
sahf
sub
dec
pop
pop
mov
loope
dec
repnz
mov
and
lahf
pop
cmp
aas
xor
pop
mov
mov
mov
inc
sarl
test
pop
jnp
pushl
dec
jecxz
inc
aam
sbb
shll
dec
ljmp
cld
sbb
pop
in
adc
js
hlt
lods
loop
mov
rcr
das
sub
sbb
add
mov
popf
mov
push
add
add
rep
mov
pop
in
jge
inc
mov
out
adc
pop
nop
lods
or
add
adc
push
pop
or
xor
xchg
rorl
insb
mov
pop
mov
sbbl
out
out
add
add
and
cmpsb
in
insl
push
push
push
mov
adc
dec
mov
or
pop
sbb
add
out
push
mov
adc
inc
xchg
xlat
sahf
lret
and
mov
dec
fwait
mov
out
int3
or
xchg
cltd
enter
stc
into
jb
xorl
dec
sub
cmpsl
sub
fbld
clc
lret
into
test
jecxz
mov
pop
test
inc
lods
sti
rcll
mov
je
aas
outsl
add
dec
xor
adc
mov
push
bound
movsb
adc
aad
shl
and
jl
lcall
xor
mov
inc
dec
enter
into
test
fdiv
sbb
out
pop
mov
lds
mov
filds
ret
daa
jno
cmp
shr
push
ror
fildl
imul
ret
stc
xchg
xchg
inc
mov
insl
mov
in
pop
dec
out
jg
pop
inc
je
bound
stos
aam
adc
fwait
sub
jp
inc
aam
and
in
mov
add
cltd
pop
cmp
push
jbe
movsl
dec
mov
pop
lahf
mov
or
push
xor
jle
cmpsl
or
shrb
dec
jbe
inc
repnz
scas
mov
loope
fdivrl
push
jl
dec
aaa
inc
insb
clc
ds
aas
mov
adc
sbb
mov
xlat
push
cld
shrb
sub
push
mov
movsl
mov
adc
insl
popf
adc
mov
mov
faddp
sti
in
mov
call
insl
mov
popa
inc
lcall
in
rcrl
mov
xor
add
adc
inc
testb
sbb
loopne
push
jae
mov
sti
shlb
fstpl
xchg
js
pop
mov
cmp
in
jno
inc
enter
push
shll
mov
fcompl
and
cmp
cmp
mov
inc
ret
jle
arpl
je
js
jno
push
push
sub
cmpsl
push
iret
je
inc
pop
mov
sbb
mov
sbb
in
mov
push
sub
push
jmp
add
jge
aad
stos
psrld
or
sub
push
mov
dec
adc
cld
ljmp
js
jmp
out
xchg
outsb
push
push
and
pusha
loopne
sub
aad
imul
mov
xor
or
cmp
push
xchg
add
inc
in
shrb
jl
mov
dec
cmp
aaa
add
adc
jmp
push
add
hlt
std
mov
mov
imul
push
xchg
loop
aam
push
dec
lods
add
lock
push
insl
cmp
cld
into
push
push
stc
das
mov
inc
mov
arpl
out
iret
jp
pop
adc
shl
jmp
adc
addr16
xchg
fcmovbe
arpl
sub
mov
pop
enter
scas
stos
inc
xchg
jno
mov
outsl
ss
cltd
cmc
imul
ret
std
cmpsb
das
es
xchg
cmp
aad
xchg
xchg
mov
sbb
mov
lods
pushf
xor
psubw
push
std
and
int
sahf
subl
or
movsl
xor
out
jno
inc
push
sarb
inc
leave
cwtl
arpl
rclb
mov
es
std
mov
mov
test
pop
and
sub
pop
and
popa
scas
mov
pop
jnp
insb
push
enter
gs
repz
jecxz
pushf
stos
and
clc
outsb
and
mov
shl
add
push
xchg
movsb
ret
out
adc
scas
je
push
test
lock
fdivl
movsl
pop
xor
push
ljmp
test
xchg
jo
and
pop
push
xor
int
aam
lcall
lea
stos
pop
mov
sahf
loop
aad
ret
shrb
mov
push
and
inc
push
mov
shr
jg
mov
inc
cmpsl
mov
mov
push
stos
jae
movsl
push
popf
insb
fcomp
out
sbb
xchg
mov
xchg
mov
mov
xor
shl
xor
shll
cmp
aam
out
jl
js
stos
xchg
and
or
dec
jno
jo
adcl
jno
hlt
outsl
inc
outsb
inc
les
sbb
dec
addb
mov
enter
inc
int
and
cmp
andb
leave
int
mov
sti
nop
out
stos
out
mov
pop
push
cmc
insb
pop
mov
inc
lods
lret
enter
jb
je
fdivs
and
jle
arpl
dec
ljmp
enter
cmp
xchg
sub
dec
adc
pop
les
sbb
push
inc
cmpl
ljmp
ds
lahf
inc
jg
dec
cmc
cwtl
lods
daa
and
sbb
into
mov
in
sbb
dec
sti
add
je
sbb
dec
adc
repnz
out
inc
and
hlt
pop
sbb
mov
aas
mov
sub
lret
jle
das
xchg
mov
out
xor
int3
repnz
in
inc
int3
lods
insb
mov
roll
aaa
sbb
xor
or
test
test
xlat
inc
dec
pop
test
jo
or
mov
popf
jo
adc
andb
insl
mov
out
lock
sbb
not
je
xor
pop
sub
adc
call
mov
cmp
int3
test
pusha
sub
and
xlat
sub
movsb
sarb
shlb
pushf
repz
mov
into
fwait
pushf
flds
mov
mov
faddl
fcmovnbe
add
mov
ss
mov
in
and
sti
arpl
loope
adc
lret
and
jnp
or
xor
mov
adc
dec
pop
or
ficoml
scas
lds
xchg
dec
mov
daa
lds
dec
sbb
mov
repz
stos
sub
lock
push
xor
movsl
idivb
jne
pop
enter
add
in
nopl
push
arpl
mov
mov
clc
push
repz
in
sar
pop
cmc
cmp
arpl
xchg
dec
mov
and
and
aad
ds
push
xchg
in
cwtl
push
std
jg
into
cli
mov
cmp
mov
jo
jl
shrb
sbb
dec
shrl
adc
add
daa
loop
cwtl
pop
adc
sub
fwait
add
icebp
cmp
sub
push
nop
mov
jmp
aas
inc
xor
push
xor
scas
test
add
sbb
cmp
sbb
adc
in
pushf
aas
fs
orl
mov
xchg
ss
addb
cmp
sub
xchg
sub
push
fidivrs
push
jb
push
inc
test
adc
xchg
add
sbb
and
addr16
xchg
cmp
addb
push
je
sbb
repz
mov
add
fistpll
inc
test
mov
fisttpl
cmp
aas
sub
outsl
adc
popf
repnz
sbb
cli
mov
andb
ret
sub
loopne
repnz
mov
pop
mov
fcmovnu
jae
lcall
orb
hlt
inc
outsb
xor
mov
add
cmc
mov
movsb
push
test
test
jl
add
fadds
lea
repz
std
fbstp
sbb
xchg
je
dec
sar
ret
nop
repz
das
xchg
fsubs
loopne
in
inc
je
popa
push
cs
mov
add
negl
insb
jb
aam
out
jnp
jle
loopne
aam
daa
insl
adcb
inc
push
scas
lock
and
push
add
pushf
sub
jecxz
pop
xadd
sti
repz
add
je
xor
push
ja
xchg
sub
test
inc
loopne
jl
and
pop
leave
sahf
sub
mov
push
in
pop
inc
dec
and
dec
shl
sbb
jp
jns
and
push
jmp
mov
xchg
adc
test
and
mov
pop
out
pop
sbb
scas
leave
ret
push
pop
inc
sbb
addr16
cmpsl
jno
nop
std
push
inc
xchg
mov
mov
imul
pop
mov
push
add
std
mov
jnp
popa
cmpsb
xor
test
dec
test
sub
cltd
pop
lret
or
jnp
mov
push
shlb
fwait
and
jae
rcll
jno
test
rcrl
push
loope
stos
xchg
adc
data16
push
adc
jbe
pop
rcrb
or
or
cld
pop
sar
shlb
add
cmp
sahf
inc
push
das
dec
cmp
pusha
xchg
dec
fwait
xor
mov
mov
dec
and
xchg
gs
fwait
xor
xor
aad
lret
lods
das
mov
adc
pop
xchg
adc
sbb
inc
jg
int
enter
add
sar
mov
xor
xor
les
sub
mov
into
data16
push
out
loope
sbb
or
or
cmpsb
out
fldl
mov
shr
popa
jne
and
sub
sub
jo
mov
clc
mov
sub
cli
and
dec
outsb
jl
or
jnp,pt
pop
pop
mov
inc
sarl
aad
sub
cli
pop
or
cmp
push
movsb
inc
or
mov
data16
xor
scas
outsl
mov
je
hlt
xchg
xchg
or
mov
adc
sub
dec
scas
lods
mov
std
js
sbb
xor
int3
loop
fisubs
shll
xchg
mov
sub
test
ds
sub
decl
loop
jo
dec
addr16
cli
jecxz
data16
outsl
jle
pop
cwtl
imul
sahf
push
lods
fcomp
subl
cmp
and
loop,pt
popa
mov
xchg
lcall
jns
aad
neg
add
insl
addr16
aam
gs
or
push
cwtl
cmpsb
btc
xchg
push
xor
mov
les
cld
imul
jmp
inc
xchg
call
cltd
push
dec
add
mov
imulb
icebp
xor
in
fldenv
dec
sbb
pop
int3
xchg
lds
imul
mov
add
pop
sbb
aam
lret
clc
arpl
addl
negl
mov
add
pop
mov
jg
fisttpll
dec
push
pop
mov
push
fimuls
stos
fisubl
adc
xor
mov
pop
subl
data16
xchg
pushf
out
fldenv
stos
mov
inc
push
insl
mov
and
or
xchg
insb
xchg
mov
inc
int
dec
roll
push
jnp
xchg
testb
inc
pop
xlat
xor
lret
shll
loop
flds
cli
mov
sub
sub
pop
mov
js
mov
fs
dec
and
popa
mov
push
outsb
or
mov
mov
ret
stos
jo
rcr
movsl
flds
out
fldcw
inc
mov
das
enter
mov
dec
cli
int3
dec
mov
lahf
out
jl
push
pop
ss
inc
stc
cs
xchg
je
dec
lret
aam
popf
pusha
bound
sbb
jp
and
mov
mov
sub
stc
inc
pusha
add
sbb
in
sbb
mov
arpl
sbb
int
sbb
sub
mov
sar
cmpsl
cmp
call
in
xchg
pop
mov
lahf
dec
cmc
jp
inc
jo
adc
xchg
test
adc
pop
adc
repnz
mov
mov
std
movsb
cmpl
or
ss
movsl
cs
sbb
xor
sbb
jbe
js
jp
cmpsl
push
lods
mov
ss
sub
mov
mov
pop
sub
popf
cmp
es
ds
inc
lock
lahf
fwait
cmpsb
push
arpl
add
fimull
adc
push
out
xchg
xchg
dec
sbb
add
and
pushf
push
in
aam
cli
push
xchg
sbb
mov
cmp
daa
mov
lods
cmpsl
clc
dec
adc
or
push
jne
pop
sbb
inc
inc
inc
xor
pop
sbb
test
push
pop
cli
popf
cmp
push
popf
popa
mov
dec
mov
cltd
jb
stos
ret
and
aad
lret
mov
int
cmp
push
cltd
cmp
loop
shll
inc
dec
test
inc
jge
loopne
dec
fldt
sub
pop
movsb
mov
les
jno
push
sarl
xor
nop
inc
insb
mov
push
jae
pop
stos
pop
sti
add
mov
pusha
rol
pushf
mov
rol
xchg
pop
ret
in
ljmp
xor
sahf
push
ss
pushf
dec
insb
nop
cmpsl
roll
cmp
hlt
je
fs
emms
xchg
shll
mov
pop
sub
mov
pushf
int3
mulb
push
mov
in
adc
push
loope
xchg
cltd
adc
add
pop
mov
inc
fucomi
xchg
inc
aas
xchg
or
testb
dec
movsl
ljmp
inc
pop
jo
jmp
andb
lds
jnp
cwtl
mov
imul
sbb
imul
inc
fnstsw
sub
ljmp
xchg
xchg
sub
into
mov
rcl
dec
mov
mov
adc
mov
push
out
jbe
mov
or
shr
or
adc
fsubrs
js
sbb
cltd
cs
ja
cmp
xlat
xchg
int
les
into
sbb
mov
jnp
mov
inc
adc
fcmovnu
push
adc
cmp
mov
or
and
inc
aas
mov
cmp
in
push
adc
gs
popf
xchg
imul
jg
pop
shrb
or
xor
cmp
xchg
xor
inc
mov
in
scas
mov
loop
or
testl
iret
in
push
ss
mov
mov
pop
je
sbb
mov
in
adc
xlat
adc
jo
cmp
cmp
mov
sub
xor
cmc
push
adc
lods
pop
xchg
ljmp
xchg
cltd
mull
add
out
and
aad
mov
lret
xchg
test
adc
sub
std
aad
push
push
cmp
inc
jp
sbb
cmp
push
in
cmp
arpl
xchg
or
mov
add
jbe
fldcw
movsl
cmp
push
mov
pusha
lret
mov
scas
or
pushf
pop
or
or
or
push
push
test
mov
ds
stos
loopne
incb
ret
leave
lds
dec
bound
mov
dec
or
call
mov
xor
xchg
mov
push
lahf
shr
lods
idivl
clc
mov
adc
pop
inc
xchg
and
dec
in
jo
enter
xor
lea
adc
xlat
cmp
dec
call
test
outsl
and
test
lahf
scas
lock
ss
into
xchg
testb
sbb
add
loopne
ror
push
gs
jecxz
lret
mov
add
sbb
lcall
fwait
iret
or
jmp
jo
sub
in
inc
hlt
idiv
int
fdiv
sbb
jno
mov
fs
call
call
repz
scas
nop
add
cld
sbb
test
mov
xor
sbb
pop
in
stos
mov
and
pusha
jne
mov
lds
pusha
mov
call
inc
repnz
xchg
cmp
mov
sbb
mov
inc
mov
pop
lods
sbb
add
subb
int
faddl
scas
scas
push
or
push
imul
xor
and
xchg
ret
int
popf
imul
mov
mov
and
fmull
js
inc
js
xor
inc
les
dec
jmp
jmp
pop
and
sarb
repz
repz
sbb
leave
rcr
sti
loopne
jne
out
shlb
out
imul
push
rcrb
cmp
push
xchg
fmulp
stos
andl
clc
mov
dec
sarl
test
jg
aad
loop
dec
mov
popa
xchg
push
cmpsb
mov
pop
adc
adc
and
sub
cmpsl
jne
xor
add
sub
inc
mov
mov
test
notb
negl
pop
arpl
lds
adc
xor
cmp
xor
pusha
xchg
jo
pop
out
pop
stos
mov
lcall
ds
cmpsb
in
sbb
xchg
jbe
jmp
mov
js
jb
dec
inc
cltd
daa
je
testb
sbb
daa
cmpsl
in
lods
jp
movsl
pop
rorb
xchg
push
mov
xor
mov
aaa
mov
fisubl
mov
fldl
dec
scas
mov
push
pop
or
jmp
stos
fimuls
call
addl
sub
data16
inc
shll
je
out
ret
mov
xor
mov
pop
add
jp
mov
and
popf
loope
xor
or
jnp
pop
xchg
aas
dec
pop
add
in
sbb
push
mov
mov
adc
xchg
pop
jg
seta
push
adc
and
dec
xchg
inc
xor
cmp
ljmp
mov
jno
flds
xchg
cltd
push
mov
negb
sbb
int
lods
cmp
call
xchg
in
sbb
in
dec
mov
xchg
int3
push
sbb
dec
mov
lret
xchg
out
movsl
leave
loope
in
pushl
jge
ja
pop
pusha
adc
sub
cmp
fdivrs
fildl
sbb
fwait
adc
add
std
push
leave
mov
aas
add
mov
fwait
mov
in
mov
cmpsb
pushl
jo
sahf
mov
push
rolb
xchg
jb
dec
sbb
stos
mov
pushf
xor
decl
cmp
dec
popf
mov
aaa
pushf
lods
mov
sbb
mov
popa
lds
xchg
cmp
lods
mov
xor
enter
sub
mov
mov
fisubs
sub
adc
rclb
fimuls
addb
enter
daa
mov
adcl
cmp
pop
jo
add
mov
push
fs
jae
mov
sub
dec
jns
and
push
sub
loopne
sub
sbb
popf
xchg
ja
icebp
pop
call
pop
mov
push
shrb
rcrl
stos
cltd
xchg
mov
das
mov
stos
sub
jg
insb
sbb
pop
popa
xchg
mov
jg
movsl
add
mov
push
cmc
leave
rclb
cmp
rcrb
dec
pusha
jmp
mov
lahf
and
inc
and
fmul
push
adc
fadds
mov
iret
push
lods
jp
mov
mov
or
sbb
test
ret
cmpsl
sbb
jecxz
out
cmpsb
mov
insl
out
mov
into
notl
pop
loope
ja
sbbb
into
cmpl
fnsave
xor
int
xlat
dec
push
jno
and
mov
shrl
imul
orl
in
std
dec
adc
shll
popf
inc
iret
xchg
nop
dec
inc
jne
mov
shrl
lds
dec
push
push
stos
xlat
jl
outsb
loope
jno
andb
push
jb
adc
cmpsl
cmp
pusha
dec
xor
xor
mov
cmp
push
push
fistpl
lea
cmp
inc
mov
fs
and
mov
mov
lret
ss
push
xchg
mov
pop
in
pop
adc
jo
cmpsl
cmp
mov
lods
mov
and
xchg
fwait
inc
stos
arpl
push
inc
or
dec
jg
fsub
iret
test
and
les
nop
adc
xchg
lret
cmp
in
loope
xchg
xor
mov
fnstenv
movl
cmp
sub
mov
jb
mov
in
in
mov
test
aas
sub
out
fistl
mov
frstor
mov
inc
inc
lds
cltd
aam
lock
mov
out
aas
das
dec
jno
stos
sbb
and
mov
jmp
push
xor
gs
cli
jl
jae
mov
xor
jns
repnz
jb
sbb
les
leave
leave
pop
lds
out
pop
adc
mov
sbb
pop
pop
out
push
cmp
aad
lds
lcall
cmpsl
aad
xchg
mov
andl
mov
and
in
fsubrs
sarb
aas
sbb
push
push
inc
jbe
outsl
or
sub
add
mov
test
jne
mov
mov
mov
jo
mov
xorl
jmp
neg
js
sub
out
lret
sub
xchg
inc
fwait
dec
cmp
in
mov
sbb
push
addl
inc
fnstcw
xchg
imul
jg
cmp
xchg
repz
mov
lret
leave
xchg
shrl
xlat
pop
cmp
aam
out
sub
pop
popa
add
cltd
lods
push
in
cmp
cmp
inc
dec
shrl
aas
movsb
mov
loopne
sub
xor
sub
adc
sub
cmp
lock
stos
inc
pop
clc
dec
popf
sub
outsb
cmc
mov
mov
dec
imul
mov
ret
mov
add
sarb
push
jbe
or
mov
ljmp
jo
mov
pop
movsl
jge
std
xchg
inc
gs
mov
mov
sub
mov
outsb
shl
pop
adc
add
pop
cmp
adc
adc
dec
testb
aaa
and
push
iret
test
add
jmp
mov
jno
sub
js
and
jle
mov
mov
xor
xchg
mov
ljmp
addr16
dec
test
cmp
mov
scas
scas
popf
mov
or
mov
jbe
or
jnp
xchg
xchg
sub
loop
lods
and
fnstsw
mov
je
decl
cmpsl
dec
into
inc
pop
orb
sbb
daa
insl
repnz
mov
dec
xchg
rcl
aas
xchg
nop
dec
inc
movsl
inc
xchg
popf
sbb
pop
mov
xor
data16
add
out
xchg
divb
xlat
mov
xorl
xchg
loope
mov
out
or
xchg
pop
mov
dec
mulb
add
sbb
push
hlt
inc
mov
adc
or
iret
inc
aam
test
mov
test
adc
rclb
xlat
rorl
inc
add
out
sbbl
outsl
or
cmp
dec
push
inc
sbbb
xor
push
imul
inc
mov
xchg
pushl
xor
cmp
pusha
in
ret
decb
jl
ret
mov
loopne
cmc
jo,pn
aaa
adc
xchg
aaa
fcomps
icebp
push
aam
jne
int
fmuls
shll
pushf
fmul
fisttpll
bound
and
mov
inc
xchg
xchg
xor
xchg
push
loop
repz
mov
mov
mov
jp
xchg
mov
jmp
rcr
and
sub
sub
xlat
pop
jne
xor
stos
lcall
les
dec
cltd
repnz
add
mov
mov
lds
jnp
cli
mov
cmpsb
insl
aaa
in
nop
cmc
arpl
das
les
dec
sub
push
add
sub
fstps
dec
xor
sbb
mov
push
call
frndint
sbb
mov
fsubr
inc
nop
push
sbb
hlt
add
pop
notb
pop
test
jle
mov
inc
daa
and
test
cmp
testl
ljmp
mov
call
loope
ret
addl
stc
xchg
pusha
jge
pop
jl
inc
ljmp
cmp
popf
pop
mov
push
jmp
test
repnz
popa
sub
icebp
aam
mov
mov
punpckhwd
insb
and
or
js
gs
xor
fildl
adc
pop
sub
enter
test
movsl
dec
push
lcall
pop
sbb
cmp
stc
push
lcall
push
repz
cmc
mov
out
iret
adc
aam
insl
arpl
adc
imul
jmp
cmp
test
ljmp
mov
cmpb
ljmp
and
pop
mov
or
jo,pn
pushf
outsb
scas
jno
pop
adc
mov
ja
lods
xchg
mov
rcll
jo
xchg
or
or
pop
cmc
mov
mov
pop
dec
push
or
imul
test
cmpsl
or
int3
dec
loope
mov
adc
cld
out
cmp
push
dec
and
and
dec
inc
xor
push
mov
es
jae
xor
pop
xchg
out
std
add
pop
repnz
mov
shll
out
or
jnp
mov
push
pop
bswap
adc
js
xchg
aad
pop
scas
lock
mov
les
add
stc
sub
fimuls
sbb
dec
inc
push
cmpl
sub
cli
mov
dec
sub
enter
jbe
je
dec
es
loop
xchg
lret
add
add
mov
xor
jp
mov
daa
sbb
outsl
adc
jp
hlt
addr16
sub
add
mov
xor
push
lret
movsb
lcall
insb
sbb
push
das
je
orl
xor
sub
cmpl
push
jb
cmp
inc
add
das
pop
nop
iret
mov
dec
dec
and
jecxz
fidivs
xor
clc
adc
inc
and
jle,pt
cmp
sbb
jne
clc
lods
adcb
xchg
loopne
repnz
in
popf
int3
push
pushf
sbbb
out
mov
bound
in
std
sbb
add
mov
pop
add
push
lods
pop
xor
xor
sub
adc
fwait
mov
mov
xchg
or
bound
xor
push
ret
mov
xchg
adc
jo
inc
sbb
mov
jp
and
rclb
jnp
sahf
outsb
sub
mov
out
adc
dec
adc
and
xor
call
mov
and
clc
test
js
fists
insl
mov
xor
xor
ds
push
xchg
xor
xor
loopne
cs
push
pop
stc
mov
hlt
cwtl
push
cs
rolb
std
ret
test
stos
ret
fcmovu
aam
inc
jae
jbe
mov
adc
sub
sub
pop
inc
xchg
aam
sbb
mov
lock
pop
inc
fwait
pop
sbb
cmp
adc
push
fnsave
dec
fnop
insl
mov
filds
mov
mov
xor
jns
sti
enter
pop
xor
pop
imul
jg
xchg
addr16
fldcw
bound
aad
or
insl
negl
mov
in
pop
in
push
mov
add
jp
out
mov
imul
dec
mov
dec
rorb
or
std
cltd
push
and
es
or
cmpsl
push
or
shl
popf
cmpsl
in
or
xor
fdivl
adc
hlt
or
add
ret
mov
aaa
aaa
pop
adc
adc
xchg
fs
mov
xor
imul
ljmp
mov
lahf
dec
jbe
mov
and
mov
outsl
dec
sub
jbe
mov
pushf
gs
jmp
imul
fnsaves
jnp
iret
les
and
mov
pop
outsl
or
test
inc
rcl
add
jne
jb
jbe
inc
mull
dec
aad
shll
jmp
xchg
mov
push
movb
insb
push
ret
add
inc
lea
and
icebp
in
xchg
xor
cmp
insb
adc
push
mov
scas
ret
leave
insl
xorb
sbbb
lret
inc
stos
shl
xchg
mov
pop
stos
sti
das
daa
loope
aaa
icebp
insl
and
push
jg
adcb
dec
lods
lods
and
int3
xor
sub
sbb
stc
add
xor
cmp
movsb
imul
jnp
and
mov
std
cld
mov
adc
rolb
jp
test
ss
sahf
push
dec
ja
push
push
lcall
mov
adc
xchg
pop
pop
jg
orb
int
push
sub
jb
inc
pop
inc
je
scas
shrl
mov
mov
repnz
inc
jecxz
ja
int3
xor
or
dec
cmpsl
and
ja
adcb
paddw
push
mov
and
cmp
imul
adc
into
decl
popf
jne
sahf
stos
mov
mov
loope
out
add
jnp
mov
add
dec
adc
dec
ss
mov
xchg
loop
pop
ja
in
adc
push
adc
inc
int
jecxz
sub
mov
fidivrl
ljmp
push
shr
insl
ljmp
and
nop
sub
pop
fwait
les
xor
push
movsb
mov
nop
mov
enter
dec
cmpsb
and
lcall
cmpsb
clc
divl
mov
and
ret
push
mov
or
push
mov
sub
and
xchg
cs
dec
mov
or
mov
in
xor
mov
inc
add
ja
fistpl
popf
dec
mov
sub
mov
mov
lea
pop
data16
mov
fmull
pop
push
inc
mov
dec
jmp
jo
jnp
pop
sub
orl
inc
test
in
lahf
aad
je
xchg
das
cmpsl
ret
add
jmp
out
or
or
cld
stos
mov
rolb
popa
cmp
cltd
sbb
data16
sbb
and
fistps
mov
push
xchg
sahf
lret
out
loopne
adc
push
je
repz
xor
pop
adc
enter
fadds
inc
sahf
pop
xor
sti
mov
sbb
sub
xor
test
andl
icebp
xchg
js
gs
cmp
jecxz
clc
out
inc
pop
js
ss
aam
inc
outsl
push
adc
xor
or
or
push
pop
clc
jl
mov
push
xor
aam
jp
jbe
mov
jg
xchg
mov
xchg
mov
popf
mov
addr16
fcompl
sbb
mov
mov
add
movsb
data16
daa
mov
insl
not
jg
loope
clc
in
outsb
loopne,pn
in
xchg
fsubs
imul
inc
xchg
jns
or
xor
add
psraw
and
jecxz
scas
cmp
xchg
scas
out
fwait
dec
inc
popa
int3
mov
push
fidivs
lahf
shl
pop
adc
xor
clc
and
and
loope
push
js
popf
mov
mov
pop
push
xor
cmp
sti
mov
sbb
decl
xchg
in
sub
fildl
lods
xchg
dec
jo
repz
or
movsb
jp
lock
in
adc
xchg
cli
pop
mov
pop
sub
insb
jb
inc
in
ret
cli
icebp
fs
push
jns
push
dec
sbb
mov
jne
insl
sub
xchg
imul
cmp
lahf
mov
int
xor
sub
mov
dec
mov
sbb
xor
cltd
xchg
mov
sbb
mov
mov
mov
dec
sub
leave
dec
dec
into
or
loope
push
jg
stc
add
addl
movsl
and
dec
dec
pop
push
cli
add
dec
mov
inc
cmp
std
lret
mov
scas
sbb
cs
mov
mov
loopne
push
imul
pop
dec
mov
mov
rclb
fdivs
and
out
rcr
mov
add
bnd
decl
push
rclb
fdivrs
adcb
fchs
ret
fmuls
push
aaa
push
xchg
inc
mov
dec
out
inc
adc
xchg
sahf
ds
mov
xchg
inc
add
cmc
pop
jne
dec
push
call
xchg
add
push
lret
mov
jae
in
jecxz
xlat
jmp
and
lahf
ja
loop
jb
jle
mov
add
dec
and
or
dec
dec
mov
xor
mov
and
sbb
pop
mov
lcall
xor
or
cwtl
push
outsl
jo
dec
dec
and
out
xor
xchg
lock
bound
cmc
addr16
pop
mov
enter
fimuls
enter
push
call
in
mov
aas
ja
je
ret
stos
addr16
imul
imul
sub
scas
cmc
mov
inc
out
dec
pmuludq
rol
mov
inc
sub
out
test
xchg
pop
es
inc
or
mov
outsb
stos
sub
mov
adc
mov
cld
mov
jmp
adc
fmull
mov
mov
and
popf
int
inc
ret
xchg
ljmp
hlt
aaa
mov
test
loope
bound
mov
and
lret
adc
fidivl
aad
adc
jne
pop
cmp
cld
pop
push
xchg
andb
popa
and
xor
xchg
es
mov
mov
nop
movsb
test
cmpsb
fstpl
sub
inc
inc
push
aas
jmp
adc
cmp
mov
push
mov
call
and
scas
cltd
sbbb
push
mov
loope
inc
pop
popf
jne
shrl
pushf
push
inc
xchg
jmp
in
mov
jb
push
out
add
add
push
cli
mov
jne
mov
sbb
ljmp
jno
pushf
cli
lret
int3
mov
sbb
or
jo
ret
repz
mov
mov
fisubrl
adc
xchg
call
mov
stos
adc
add
mov
push
int3
out
jle
jl
lahf
dec
inc
leave
xchg
test
jne
push
push
lods
data16
xlat
inc
sahf
or
or
xchg
ror
hlt
adc
int3
or
add
sbb
adc
mov
lods
test
dec
mov
outsb
subb
push
mov
dec
cmp
xrelease
pop
mov
sub
sub
inc
inc
push
add
mov
jmp
mov
xorb
loopne
jae
mov
div
adc
add
js
lock
sarl
cwtl
jmp
add
mov
out
lret
out
push
jne
xor
lock
jae
push
clc
mov
sti
out
sahf
popa
mov
xor
testb
test
jno
shlb
test
mov
push
int3
movsb
and
lods
push
int3
aaa
lock
dec
lahf
mov
loope
iret
std
test
cwtl
xchg
rcll
popf
mov
xor
and
mov
fwait
push
dec
xchg
pop
mov
sbb
adc
dec
dec
arpl
xchg
dec
orb
divl
int
cmp
xor
test
xchg
adc
fs
cmp
push
and
pop
mov
or
stos
cli
mov
cltd
adc
pop
out
sti
jbe
pop
jne
out
mov
subb
lcall
lea
sahf
xorl
cli
mov
ds
mov
and
add
inc
lods
jno
xor
xor
mov
int3
cmpsl
aaa
add
push
xchg
pop
js
mov
jge
shrb
adc
stc
dec
icebp
push
push
mov
mov
lret
sar
cld
hlt
xor
mov
cmc
ret
mov
push
xchg
cmc
sub
push
lock
movsl
dec
jmp
adcl
js
addr16
dec
andb
mov
mov
push
fistps
xlat
pop
daa
and
or
in
enter
lds
lods
adc
jns
xchg
insb
mov
enter
dec
outsb
cmp
fs
or
lret
cmp
xchg
aad
and
mov
add
add
test
inc
push
aam
mov
and
inc
pop
sbb
movsl
mov
scas
ljmp
mov
std
cltd
and
mov
inc
lods
jns
pop
mov
push
add
loop
outsb
push
addb
lahf
cmc
lahf
jne
jl
mov
in
or
pop
lahf
fisubs
jnp
mov
mov
insl
jmp
int3
fwait
and
fadd
ds
xchg
sbb
mov
ret
mov
dec
adc
xchg
mov
jae
push
loope
or
and
in
and
push
scas
fdivl
gs
sub
in
popa
test
aas
int
jmp
or
jge
in
in
and
add
jno
cmp
mov
sub
pop
fiaddl
cmp
or
add
jecxz
lret
jae
fbld
ss
dec
lods
or
lds
push
jnp
rcrl
mov
push
xor
fistps
sub
je
das
test
js
lea
addb
cmp
das
mov
cltd
sbb
xor
movsb
xor
pop
les
pop
add
xor
movsl
pop
ficompl
mov
cmp
jbe
outsl
push
pusha
sub
push
shlb
fistpll
jb
xlat
es
in
xchg
loopne
loopne
ret
dec
jecxz
fstps
xor
inc
push
movsl
sbb
xchg
xor
lock
push
xor
mov
adc
pmaxub
push
push
pop
aad
jle
out
dec
adc
je
addb
mov
loope
cmpsb
and
sahf
inc
mov
dec
ficompl
adc
jno
mov
adc
jns
push
or
xor
push
pop
lods
lods
add
xor
pop
mov
mov
pop
pop
je
iret
dec
dec
std
jmp
out
lcall
insl
xor
dec
mov
icebp
scas
lock
lods
shlb
outsb
insl
and
in
push
inc
sti
repnz
test
and
stos
cmpsb
jle
push
push
cltd
push
xor
cltd
les
pop
pop
jmp
ja
ljmp
out
int
in
dec
int
and
std
push
daa
jl
pop
outsl
mov
jp
nop
add
pushf
addl
mov
outsl
mov
test
jbe
ja
pop
mov
mov
adc
insb
add
mov
mov
test
sub
mov
in
add
add
test
nop
adc
fsincos
jne
adc
push
jb
not
lahf
or
scas
fbstp
inc
pop
scas
fwait
hlt
and
mov
mov
aaa
ret
or
fsubl
jo
sbb
cmpsl
sub
cmp
test
mov
js
dec
pop
dec
aad
insb
imul
or
ficompl
fwait
inc
jnp
daa
cs
mov
sub
mov
leave
cmpsl
pop
cld
sub
or
sub
bound
lret
pop
mov
insb
fdivrp
loope
jmp
lods
mov
dec
fstl
pop
test
sahf
sbb
jp
clc
sahf
int3
cmc
subl
sbb
fcmovnb
fmul
push
inc
mov
sbb
mov
or
in
push
test
das
fmuls
xchg
inc
out
push
mov
mov
repnz
loope
lods
xchg
icebp
add
push
mov
lret
lahf
lods
push
rcr
sbb
outsb
jns
dec
add
inc
push
adc
add
inc
inc
push
imul
shlb
or
aad
dec
movsb
xchg
pushf
xor
fs
lret
xor
xor
repnz
and
int3
sbb
call
xor
add
xchg
jae
fnstenv
jbe
and
push
push
xchg
sbb
dec
mov
icebp
add
mov
mov
sbb
or
jnp
sbb
adc
mov
push
or
sbbl
int3
add
push
add
mov
in
mov
aaa
lock
jae
dec
nop
sbb
outsb
cmpsb
aas
out
sub
inc
jl
adc
sti
nop
sbb
xchg
imul
scas
daa
cld
and
movsb
scas
les
loop
inc
xchg
fimull
mov
adc
cmp
enter
repz
scas
push
adc
push
jns
ja
addb
imul
punpckhwd
jecxz
pop
and
push
inc
pop
aaa
push
mov
dec
xor
mov
mov
adc
push
push
cwtl
mov
mov
arpl
aam
add
push
dec
scas
inc
mov
lahf
gs
xor
and
mov
imulb
arpl
insl
test
ret
ja
daa
sub
jl
pop
xchg
pop
shrl
mov
jp
cmp
leave
push
pop
movsl
mov
pop
add
adc
aaa
fwait
bound
cld
sbb
inc
cmp
pop
xchg
jl
push
push
lds
jp
inc
mov
mov
jmp
cmp
and
loopne
adc
push
push
push
in
push
and
pop
mull
ljmp
cmc
xchg
cwtl
jne
mov
out
lahf
lret
mov
lahf
or
mov
cmp
ja
push
mov
call
les
jne
and
mov
push
rclb
sbb
cmpb
and
or
dec
sbb
jns
mov
arpl
push
jb
dec
out
lahf
xchg
cmpb
add
pop
js
fldenv
fwait
sub
out
out
push
mov
xchg
jl
and
xorb
test
cmp
add
jecxz
nop
mov
pusha
sbb
test
lds
xor
test
out
popa
ja
fs
pop
pop
mov
dec
and
mov
nop
daa
mov
mov
iret
sbb
sub
out
fdivrp
loope
push
mov
mov
in
out
bound
dec
sub
loop
and
stos
xor
xor
shll
and
lods
xchg
jo
and
jecxz
pop
and
in
and
cwtl
mov
push
sbb
cwtl
fwait
sub
cmp
aaa
push
or
jg
xchg
cmp
xor
add
sub
vsqrtss
daa
fistps
jo
cmp
jg
or
mov
push
ret
xchg
outsb
sub
add
mov
out
test
pop
sub
fbld
push
sub
and
test
hlt
push
mov
and
lods
adc
pop
inc
xchg
hlt
daa
and
pop
in
mov
pop
out
enter
int
es
xchg
pop
mov
mov
or
dec
adc
inc
xor
sbb
repz
dec
sarb
movsl
jae
xor
or
aaa
in
push
add
fisubs
jmp
cmp
popf
mov
lcall
xchg
dec
adc
mov
repz
arpl
add
aam
pop
mov
xchg
loopne
mov
inc
xor
sub
outsl
int3
fildl
push
mov
jne
pushf
imul
cmp
data16
xchg
jne
iret
push
sub
sub
mov
mov
stos
fsubp
xor
add
bound
filds
jge
adc
xor
scas
jecxz
data16
shlb
stc
jae
mov
mov
and
lahf
inc
fcomi
xchg
push
jl
out
outsl
rcrb
cli
lds
es
add
gs
mov
pop
imul
clc
or
decb
xchg
mov
sub
and
pop
repnz
inc
xchg
push
jbe
call
push
aaa
lods
jbe
mov
add
inc
dec
lcall
pop
pop
in
jl
int
movsl
jbe
push
outsl
adc
xchg
cmpsb
sti
push
push
or
push
push
mov
mov
mov
xor
mov
and
mov
jle
sbb
jae
pop
pop
cmpsb
aas
test
jno
imul
or
lret
lock
mov
bound
orl
daa
lret
in
mov
inc
jp
dec
mov
mov
pop
enter
jmp
fildl
icebp
in
jmp
cmp
xchg
test
xor
outsl
sub
les
psadbw
mov
push
rcrb
clc
and
pop
jae
mov
jo
push
add
dec
lea
xor
dec
iret
adc
adc
out
call
xor
int
cmpsb
rolb
test
adc
sbb
mov
jo
cmp
or
inc
movsb
push
xor
push
jecxz
lods
mov
mov
adc
jp
xchg
inc
roll
or
or
out
jecxz
sub
or
add
xor
movsl
mov
ffreep
jmp
mov
jbe
cmp
repnz
dec
cmp
fiaddl
dec
sbb
pushf
enter
sbb
hlt
lret
ja
popf
cltd
mov
dec
out
pop
loop
inc
jmp
mov
lret
cwtl
out
fistps
xchg
or
dec
adc
mov
stos
aaa
and
popl
xor
sbb
mov
fstl
std
fucomp
les
xlat
or
mov
xchg
leave
xor
fnsave
push
adc
nop
mov
insl
cmp
jl
shlb
dec
inc
lock
xor
jns
into
negb
inc
mov
cmp
or
pop
je
jmp
mov
push
add
rorl
loopne
xlat
shr
in
push
outsl
cmp
jnp
test
stos
iret
cmc
iret
cmp
in
out
push
mov
sarl
loop
inc
test
rorl
cmp
and
stos
in
call
fsts
bound
orl
dec
xor
leave
mov
lret
rcr
int
pop
cmp
js
mov
sub
fsubs
dec
les
popf
pop
sub
xchg
into
cmp
sbb
ljmp
sub
neg
loop
gs
outsl
es
mov
mov
sub
push
sbb
lahf
adc
mov
out
jmp
outsb
or
push
cs
jne
mov
dec
stc
pop
insb
imul
cld
cmp
and
mov
dec
or
xor
pop
pop
cmp
daa
je
ss
lahf
mov
xchg
mov
ret
jb
out
mov
inc
xlat
stos
pop
push
mov
jno
xlat
bound
pop
pop
incl
sbb
or
sub
xchg
fisubs
xchg
icebp
cmc
ja
or
fdivrl
daa
cmp
inc
add
ds
cmp
sbb
xor
sbb
or
gs
hlt
push
xchg
mov
xor
pusha
push
out
mov
sarl
xchg
or
jl
cmc
sahf
lods
adc
sub
flds
mov
aas
xlat
adc
fdivrs
cmc
imul
mov
xor
repnz
addl
mov
rcll
in
xor
jmp
fcmovbe
xor
push
adc
and
out
or
jb
mov
popa
mov
lret
push
and
dec
adc
adc
mov
or
pop
inc
adc
imul
jb
cli
jne
loopne
xchg
js
cmpl
inc
adc
push
sbb
dec
xor
outsb
sbb
mov
jge
and
jno
pop
repz
adc
fwait
mov
inc
popa
mov
out
movsl
mov
xlat
mov
mov
inc
push
jmp
addr16
lret
hlt
dec
stos
mov
add
mov
ret
rolb
int
outsl
clc
add
das
sbb
dec
sub
mov
test
mov
movsb
leave
cmp
jp
pop
mov
xor
ret
cmp
js
stc
int3
daa
mov
xor
xchg
mov
jl
sbb
fcmovne
test
in
stc
xor
popa
stos
jmp
mov
bound
and
test
cli
popa
cmp
xor
mov
fistpll
adc
or
hlt
xor
sahf
repz
jae,pn
mov
xor
mov
outsl
pusha
and
push
cmp
dec
sbb
fldlg2
xlat
sub
mov
fmuls
dec
mov
int3
sub
int
xchg
adc
jge
adc
scas
cmp
lods
adc
jl
test
clc
cmp
push
mov
jl
lods
aaa
or
mov
jp
xor
mov
icebp
sub
addb
jg
xchg
vmovlps
pop
adc
dec
add
rclb
pop
cld
test
and
rcrl
push
xlat
and
push
jns
je
and
popa
adc
popf
xchg
mov
popl
sbb
mov
push
mov
div
cmp
jns
cmpb
cmp
ss
inc
pusha
movsl
sahf
aas
pop
add
sub
add
or
mov
pusha
in
ret
cmp
pop
das
xchg
scas
push
sbb
in
mov
enter
mov
les
jp
je
or
jbe
stos
bound
lds
mov
jne
call
mov
mov
sub
xor
ja
mov
jae
lods
loope
inc
mov
fiadds
add
pop
dec
lahf
lret
cmpsb
mov
inc
push
imul
pusha
je
dec
nop
jo
repz
adc
cmp
arpl
imul
js
mov
enter
jnp
es
out
adcl
sub
lcall
jnp
xchg
gs
add
sub
je
mov
add
mov
xchg
jl
sbb
jno
and
pop
repz
jb
jp
rcrl
ror
pop
xchg
lds
bound
xor
stos
insb
inc
out
jae
pop
in
aam
mov
idivb
fs
in
mov
mov
shlb
divb
adc
xchg
dec
fwait
mov
xchg
loope
out
mov
sti
sub
jmp
and
out
ds
sub
mov
or
pop
mov
das
pusha
fs
sahf
cmp
or
cld
mov
bound
dec
repz
std
les
add
jae
mov
push
push
jle
lods
xchg
scas
inc
jl
xchg
movsb
mov
addl
push
ljmp
push
nop
movsl
ja
and
sub
mov
mov
pop
jb
adc
inc
mov
pop
sbb
fistpll
std
lahf
sti
out
jae
fst
jecxz
cmp
xor
incb
mov
insl
inc
out
cmp
pop
inc
mov
mov
rcll
lahf
daa
jl
ret
movsl
add
vmovlpd
mov
jae
cltd
sbb
test
ret
in
or
je
mov
ret
push
push
xor
add
jl
pop
inc
xor
xchg
je
movsl
stc
jle,pt
jo
sub
push
xchg
jno
fwait
jecxz
adc
push
fcompl
cmp
jnp
inc
push
lea
mov
jg
pop
ret
inc
outsb
push
cs
xchg
mov
xchg
lods
mov
cmpsl
hlt
adc
lods
iret
adc
xchg
pop
fstl
sarw
push
dec
in
mov
aad
js
inc
js
and
dec
filds
or
lret
cmp
push
fisubrs
js
push
fwait
scas
stos
push
xchg
stos
inc
cltd
test
xchg
xor
fstp
push
dec
pop
mov
dec
sbb
mov
call
inc
push
and
sub
lods
std
insb
sbb
popl
cmc
xor
cmp
mov
int3
das
mov
cmp
mov
push
sbb
movsl
cwtl
andb
cmp
add
ret
jg
push
add
fst
pop
push
sarl
test
ficompl
das
xor
cmpb
mov
pop
jae
inc
fiaddl
lahf
cwtl
in
sub
jae
out
push
lock
xor
clc
jns
inc
sti
rcr
pop
je
push
lock
aas
cmp
push
orb
ds
pop
roll
loop
scas
dec
add
arpl
fsubl
sarb
sbb
sbb
sub
jp
sub
mov
out
addr16
nop
adcl
mov
push
inc
in
fnstenv
sti
lcall
int3
test
sbb
lock
arpl
or
mov
xchg
jb
aas
jle
icebp
lahf
aas
jnp
mov
divl
aas
daa
push
scas
int
scas
cmp
insb
adc
jae
cmp
cli
jle
rclb
insl
adc
mov
jbe
popa
dec
mov
adc
push
or
mov
test
add
cmc
dec
inc
mov
mov
or
cmp
aaa
orl
adc
add
dec
mov
dec
cmp
rorl
xlat
int3
jmp
mov
dec
jecxz
pop
lcall
xchg
xchg
sbb
in
and
lret
rclb
loope
pop
and
cmp
pop
push
sahf
dec
movsb
or
mov
outsb
mov
mov
sti
xor
je
imul
pop
pop
mov
pop
bound
iret
xchg
inc
sub
jmp
xor
adc
mov
xor
rorl
pusha
pop
outsb
lods
pop
mov
int
mov
dec
in
xchg
push
dec
and
push
jbe
or
inc
mov
sub
repz
cs
movsl
add
out
stos
push
popf
std
popf
fsubrs
outsb
xlat
clc
mov
jnp
popf
pop
sbb
jo
adc
pushl
sub
pop
mov
imul
ror
add
jg
adc
adcb
lods
jb
jecxz
add
subl
jecxz
sarl
fcoml
mov
leave
lret
jmp
das
and
adc
push
mov
int
xlat
mov
lahf
sahf
cmp
sub
orl
pusha
lret
jbe,pt
inc
int
jb
sbb
int3
aas
jo
rolb
sbbl
dec
jno
mov
mov
xchg
lock
jnp
xor
mov
rcrb
fwait
insb
mov
xchg
enter
mov
add
push
jno
pop
aam
xchg
nop
dec
inc
xlat
mov
pushf
hlt
pop
jp
loope
sti
add
and
mov
popa
movsl
inc
sub
mov
mov
bound
mov
jl
pop
data16
out
aas
dec
stc
rolb
pusha
inc
inc
xor
jbe
lahf
and
das
iret
sbb
les
imul
sub
fdiv
mov
outsl
mov
iret
ja
test
aad
fdivs
ljmp
sarl
sub
adc
rcrb
mov
xchg
lods
es
or
das
mov
subl
cli
std
adc
jo
movsb
dec
lret
testb
mov
test
mov
add
add
mov
or
mov
out
jnp
pop
push
insb
scas
and
mov
stos
mov
repz
cmpsb
test
adcb
or
mov
pusha
outsl
mov
pop
fstl
sahf
xor
popf
inc
test
adc
subb
in
pop
andb
lds
sbb
sub
movsl
push
and
add
cmp
mov
in
xor
lahf
clc
and
sbb
pop
xor
imul
sub
cli
shl
inc
dec
jecxz
cmp
ret
data16
mov
popf
dec
pop
ret
imul
lret
jns
shrb
xchg
adc
repnz
jg
jp
jg
inc
cmp
int3
mov
dec
mov
or
inc
cltd
inc
xor
cmpsl
imul
pusha
mov
push
dec
adc
push
add
mov
mov
or
out
jo
push
push
enter
mov
int3
dec
in
cmp
mov
repnz
aad
test
stos
scas
mov
sbb
addr16
pop
mov
mov
in
repnz
ret
sub
nop
push
imul
xor
scas
daa
test
in
cwtl
clc
xor
out
mov
insb
hlt
mov
sub
lcall
inc
or
pop
aad
jge
repnz
in
sub
sub
mov
mov
andb
xchg
cld
mov
dec
inc
aas
jecxz
cmp
nop
cltd
or
mov
fwait
ss
dec
nop
jo
insb
popf
fstl
push
out
cmc
fistl
xchg
jg
sarl
aas
mov
sub
out
outsl
je
cmpb
loope
pop
outsb
xchg
lods
pop
sbb
xchg
pop
inc
ret
lock
mov
sub
movsl
repnz
xchg
fstl
adc
pop
sbb
jp
lahf
mov
int3
out
adcb
cli
dec
aam
or
lds
cltd
les
xor
and
mov
les
lds
mov
pop
mov
push
push
dec
dec
add
dec
or
movd
nop
frstor
in
jb
popa
add
jno
movsb
shl
sbb
pop
sbb
mov
fucomip
mov
push
subl
fidivrs
cli
pop
add
cmpsb
lea
and
inc
jle
xchg
rol
in
shlb
sbb
inc
sbb
popa
es
subl
in
rorl
push
dec
push
pop
jb
sahf
inc
lcall
popa
adc
adc
jle
insl
mov
dec
scas
jnp
mov
orb
out
ss
into
scas
sub
or
or
fldenv
daa
call
cmc
or
xor
jbe
jmp
sub
or
pop
aam
mov
dec
inc
orl
sub
xor
rorb
rclb
shll
mov
pop
jl
push
fisttpl
adcl
xor
mov
push
icebp
mov
aas
outsl
das
push
into
mov
mov
or
cltd
dec
sbb
andps
mov
neg
xchg
and
ss
je
pusha
movhps
les
addb
or
inc
cs
int3
sbb
dec
adc
mov
lret
pop
mov
push
pop
fildl
arpl
mov
insb
xor
adc
mov
push
int3
stos
mov
pop
inc
clc
pushf
jecxz
sub
or
sub
icebp
pop
mov
cli
cvttps2pi
je
ror
jp
imul
orb
pop
mov
adc
clc
or
xchg
cmp
sbb
xchg
ss
xor
push
mov
lret
out
or
mov
paddsw
loop
push
dec
mov
shr
daa
rcrl
mov
or
clc
rcrb
sahf
out
lret
js
mov
addr16
test
fnstcw
mov
add
ljmp
rcll
in
addr16
adc
cmp
rcll
adc
push
add
rolb
add
arpl
mov
adc
push
sub
inc
jp
dec
lret
and
mov
test
pop
movsb
pop
add
ficoml
xchg
ja
test
ja
outsl
test
lcall
or
leave
cmc
stc
movsb
fisubrs
daa
repnz
stos
inc
dec
jmp
push
sbb
jmp
popa
fstpl
sub
icebp
sahf
leave
and
mov
lret
ret
cmpb
or
xor
pop
popf
popa
mov
imul
mov
or
loopne
push
roll
cmp
js
xor
ficoms
les
jmp
ss
out
sahf
lret
clc
push
add
xchg
xchg
daa
xlat
sub
adc
out
push
sbb
dec
nop
inc
mov
cwtl
dec
sahf
mov
lods
mov
cmp
insl
scas
lret
outsb
and
inc
push
cmpsb
push
or
aad
outsl
or
repz
in
add
sub
jbe
jecxz
jae
ret
mov
clc
xchg
sub
adc
sbb
loopne
push
popf
sahf
pushf
sbb
aam
das
inc
popf
xor
xchg
daa
movsb
fiadds
clc
sbb
adc
lea
inc
lods
imul
push
jbe
js
popa
popf
dec
outsb
lock
cmp
dec
xchg
ret
or
xchg
fcompl
dec
sbb
cs
dec
cli
push
lea
daa
inc
dec
mov
jns
mov
and
xchg
xchg
in
dec
pushf
shlb
outsl
fistl
stos
aas
test
xor
hlt
ss
ljmp
xor
and
xchg
rcl
fwait
sub
xchg
stc
cmp
pop
bound
daa
insl
sarb
fs
cmp
inc
mov
cmp
inc
push
fcoms
push
shll
lret
sub
sub
jg
in
or
leave
sbb
jne
aaa
popf
sti
enter
idivl
or
add
cmp
or
hlt
fsubp
imul
add
rcrl
mov
aas
mov
xor
gs
mov
pop
in
stos
xchg
mov
ds
jns
dec
data16
xlat
int3
jle
pop
out
mov
push
pop
in
cmp
jnp
cld
popf
in
mov
popa
mov
cmp
inc
loope
stos
dec
or
jae
jmp
push
mov
cmc
cmpb
jg
in
pop
mov
push
sbb
sub
rclb
push
lock
pop
fwait
in
fstpt
add
push
cmp
stos
mov
xchg
sti
mov
adc
push
jno
adc
sahf
je
mov
xchg
dec
dec
outsb
add
loop
sbb
fisttpl
or
js
adc
inc
lock
sub
cs
xchg
sti
stc
negl
and
mov
mov
into
shrl
addl
jno
popf
repnz
cmp
lcall
mov
sub
sub
jns
xlat
mov
lret
mov
jmp
out
in
js
sbb
in
jno
out
int3
loopne
daa
mov
dec
jne
test
popf
push
push
bnd
inc
test
push
inc
movb
pop
jns
fcomi
mov
fwait
jo
mov
sub
xorl
ret
jmp
leave
pop
out
mov
fldt
push
lea
jecxz
js
fists
testb
xchg
sbb
arpl
icebp
dec
cld
and
addb
add
rorb
inc
cltd
ds
jo
adc
lcall
and
adc
add
pop
sahf
fwait
shr
or
cmp
jle
mov
jne
mov
xchg
jno
imul
inc
jne
mov
addr16
add
mov
notb
shr
xor
push
and
jmp
pushf
test
repz
mov
cs
mov
xchg
jbe
lds
xlat
or
sub
outsl
dec
or
xchg
jno
shrl
sbb
out
sub
xor
push
leave
mov
iret
jle
test
and
or
inc
loop
fcomps
jmp
test
mov
cmc
jg
push
and
pop
mov
xor
ja
jb
cmp
inc
out
jle
movsb
daa
std
mov
sti
or
and
rorb
sbb
ja
in
pop
bound
push
jbe
lods
popa
push
inc
mov
push
mov
xor
insb
pop
aaa
push
add
aas
xlat
mov
push
mov
insl
mov
xchg
pop
jnp
jmp
in
cmp
inc
mov
movsl
or
arpl
mov
dec
pusha
out
popa
setne
xor
stos
and
bound
dec
xor
inc
jbe
fsubrs
or
aam
adc
out
cmc
xchg
or
pop
into
inc
jg
sbb
inc
mov
sbb
adc
cmp
inc
outsb
push
sbb
cld
push
rorl
mov
mov
imul
mov
adc
loope
hlt
nop
dec
xchg
test
lret
je
aas
enter
into
rorl
jle
cmp
ret
aas
mov
cld
enter
and
rcrb
int
xchg
adc
pop
mov
les
or
repnz
imul
jns
mov
xorb
lcall
addr16
cmp
pop
hlt
sbb
das
xchg
cmp
enter
xchg
iret
adc
adc
mov
lds
and
scas
inc
jae
lods
sub
in
sbb
fsubrs
jae
fidivl
mov
sub
clc
sbbl
add
rorb
repz
lods
xchg
mov
xlat
mov
mov
mov
in
jns
fists
cmp
mov
xorl
sub
jecxz
lods
outsl
fwait
shll
andb
shrb
mov
pop
popa
dec
addr16
mov
inc
xchg
in
lods
mov
mov
jnp
xor
dec
pop
popa
test
out
and
mov
xorb
jecxz
loope
dec
movsb
icebp
adc
rcl
xchg
adc
jne
sub
pop
nop
sub
and
add
or
subb
stc
xlat
out
dec
int3
ljmp
pop
xchg
cmpsl
mov
pop
mov
leave
sbb
jg
mov
fnsave
sti
xchg
nop
stos
cmp
cltd
outsb
aad
fcoms
adc
lret
or
pushf
stc
cmp
jle
jp
bound
push
test
aad
cli
dec
sbb
enter
pusha
stos
stos
int
aad
int3
fimuls
rclb
stos
loopne
mov
mov
out
scas
push
dec
mov
xor
paddb
lods
test
insb
sahf
cwtl
mov
aas
adc
jne
mov
add
pop
inc
cmp
mov
mov
adc
sti
daa
nop
or
imul
shrb
in
sub
pop
pop
stc
jb
xor
rclb
sti
push
adc
sbb
add
repnz
inc
aad
loopne
push
subl
jbe
cmp
in
push
push
shll
mov
inc
sbb
mov
jecxz
aad
fldl
ss
inc
cli
addb
decb
daa
int
mov
push
add
push
cli
add
lret
xchg
lcall
push
xchg
fxch
mov
into
push
xchg
out
repz
das
dec
push
fistpl
loop
sbb
jp
lcall
mov
mov
imul
stc
shl
pushf
call
in
mov
cmp
cmp
mov
sbb
pop
ljmp
hlt
in
add
xor
lret
movsl
out
mov
ficompl
push
push
dec
xor
fildll
push
ds
adc
inc
pushl
mov
icebp
cltd
mov
call
fdivs
cmp
sbb
imul
mov
or
nopl
sbb
cmpl
imul
mov
lret
cmp
pop
js
inc
jb
add
sub
ds
mov
jo
and
mov
in
iret
add
icebp
flds
mov
xchg
mov
jmp
lea
out
lcall
movsb
pop
mov
xor
jno
fisubl
push
xchg
testl
ret
xchg
sarb
mov
sub
daa
movb
test
adc
cmp
push
repnz
ss
movsl
outsb
sbb
push
push
loopne
call
test
sub
mov
xchg
cwtl
bound
mov
jo
adc
add
or
jae
out
adc
insl
sahf
xor
cmpsl
push
cli
mov
nop
cmp
jo
sbbb
aad
xchg
xor
inc
outsb
outsb
aaa
push
xchg
rcrb
push
daa
iret
pop
pop
xor
hlt
call
mov
dec
mov
ds
jno
jmp
sbb
ret
sti
psubd
mov
cld
pushf
addb
pop
fcomip
adc
mov
and
negb
mov
jge
jle
sarb
sti
add
add
fmul
jg
stos
aam
mov
push
mov
jp
pop
fsubp
dec
jge
testl
jle
fists
inc
clc
push
loopne
aad
js
pop
imul
adc
mov
jnp
xchg
stc
inc
pop
xorb
mov
sub
js
sarl
sarb
push
cwtl
mov
jno
jmp
cmp
loop
negb
repnz
cmp
pop
jae
xorb
repnz
mov
pusha
int3
mov
add
cmp
pushf
jmp
xchg
repnz
add
add
pushf
dec
jmp
push
lods
stos
fsubr
jne
orb
cmpsl
pop
cltd
cld
and
hlt
rcll
and
cmp
mov
addb
mov
push
mov
frstor
mov
ds
cmpsl
or
cli
repnz
cltd
pop
dec
jo
xchg
mov
cmp
add
mov
push
jae
in
dec
xor
loope
push
jecxz
aas
stos
sub
ficomps
lret
das
xchg
sub
bound
mov
sbbb
jl
imul
adc
fisttpl
mov
push
mov
cwtl
or
mov
or
hlt
mov
loopne
imul
push
mov
rorb
xor
stos
pop
das
int
sbb
insl
out
add
ss
sti
stc
xchg
xor
arpl
sti
les
imul
sub
scas
mov
dec
sti
popa
cmp
jbe
cmc
loope
mov
mov
fadd
push
das
out
xor
popa
xor
mov
loop
dec
syscall
pop
add
inc
xor
cmp
mov
gs
fwait
pop
cs
sahf
adc
xor
push
insl
lret
xchg
adc
xchg
mov
xor
sbb
inc
icebp
gs
and
es
sub
in
jae
jb
xor
scas
loop
cmc
fcoml
adc
movsl
adc
scas
pop
add
shrb
jns
adc
stos
stos
sahf
or
push
setbe
je
out
pusha
lcall
dec
out
ror
fidivs
jge
cmpsl
lods
popl
imul
aas
in
jg
push
imul
cmp
pop
mov
or
sbb
ror
fcomp
or
mov
mov
repnz
pop
es
xchg
jg
inc
cmpsl
pusha
iret
xchg
sbb
mov
adc
cltd
push
jb
dec
sub
xchg
sub
sub
mov
rolb
in
mov
jge
out
push
cmpsb
cmc
push
or
mov
dec
pusha
and
out
scas
or
rcrb
cmp
clc
mov
mov
sahf
call
add
outsb
fsubs
in
push
push
jecxz
dec
xor
ljmp
andl
xor
or
adc
mov
pushf
mov
pop
mov
cli
popf
in
repnz
pop
inc
mov
ljmp
mov
sub
bndstx
mov
sahf
xchg
inc
sub
mov
inc
fsub
js
fwait
xchg
pop
stos
std
xlat
test
ret
xlat
jp
adc
cmp
fwait
jns
dec
pop
insl
sbb
les
aas
lcall
lds
pop
lret
mov
aad
jg
jg
inc
mov
or
pop
jne
insb
insb
jp
xlat
jne
mov
dec
add
pop
push
dec
aas
sub
sbb
jg
adc
xor
dec
int
clc
mov
fwait
rclb
jmp
adc
into
ljmp
sarb
lods
push
pop
frstor
pop
adc
loop
mov
sub
das
aam
mov
insb
and
jne
lret
add
push
outsb
fimuls
inc
xchg
or
push
fnstcw
fistpl
out
dec
sub
add
repnz
call
enter
pop
je,pn
and
inc
sbb
adc
fwait
out
dec
hlt
int3
pop
nop
jp
mov
dec
rcl
adc
dec
dec
adc
dec
jo
dec
ret
lcall
push
dec
hlt
pop
pop
js
stos
add
mov
xchg
roll
sbb
mov
ret
arpl
cmpsb
lret
cld
or
into
xchg
ljmp
les
cmp
repnz
xchg
nop
and
jmp
sbb
inc
cwtl
jmp
jbe
stos
insl
pop
popa
dec
cmp
pop
and
popa
sbbl
pop
fstpt
sarl
push
jb
sub
pusha
leave
ja
fs
xchg
std
push
dec
repz
xchg
xlat
xchg
adc
add
inc
in
divps
hlt
inc
xchg
inc
iret
outsl
jecxz
pop
scas
jns
bound
mov
int
cmp
mov
add
aas
roll
inc
or
arpl
test
dec
add
add
mov
icebp
loopne
cld
sub
adc
sbb
push
sbb
out
inc
cmpsb
and
enter
and
or
stos
in
push
inc
addr16
int3
pop
sti
jo
jbe
pushf
mov
mov
pop
filds
jmp
shlb
shll
pop
dec
push
or
mov
push
jno
std
mov
jle
add
sbb
int3
insb
sub
sbb
dec
pop
or
lods
add
dec
and
inc
cmp
mov
sbb
int
xchg
sub
test
mov
xchg
clc
sbb
push
fcomps
das
outsl
or
dec
sahf
movsl
nop
inc
xchg
out
into
icebp
leave
push
es
insl
jno
cli
jb
clc
out
xor
mov
into
sub
out
pop
outsl
push
test
pushf
pop
mov
and
and
in
test
imul
out
loop
es
push
dec
sub
bound
fwait
lret
rcrb
nop
adc
insb
jo
scas
push
jmp
xchg
idivl
popf
je
xlat
scas
adc
ljmp
iret
mov
push
inc
and
inc
pushf
fadds
jo
add
xchg
sub
jl
mov
cwtl
push
popa
mov
mov
inc
enter
push
inc
sub
pop
push
or
sbb
jmp
push
nop
pop
lods
adc
sbb
xchg
and
testl
mov
fwait
lea
cs
iret
dec
cld
push
mov
sbb
mov
xlat
or
dec
cmp
and
mov
imul
sar
jns
sar
in
enter
lahf
outsl
scas
test
xchg
cmp
lret
cmp
mov
add
leave
mov
mov
jle
enter
pop
leave
xchg
sbb
adc
cmpb
jle
inc
fs
loopne
xlat
stos
popf
pop
fwait
push
pop
movl
or
push
jmp
mov
cmp
test
cmp
movsl
insb
jp
xorb
mov
int
ljmp
mov
ret
lock
nop
sub
mov
mov
jl
pusha
or
mov
fnstcw
cmc
shlb
cmp
lret
das
xchg
push
push
sbb
push
dec
mov
pop
arpl
xor
ss
pushf
in
addr16
and
icebp
adc
xchg
inc
dec
insb
mov
stos
dec
xchg
int
mov
ds
pop
cwtl
and
inc
pusha
xor
movsb
mov
mov
adc
add
in
icebp
ficoms
psllw
sti
sbb
xchg
push
inc
cmp
loopne
ret
fs
test
adcl
gs
jns
push
sahf
mov
mov
push
je
popa
daa
repnz
mov
mov
dec
mov
sub
jmp
sub
das
sub
xor
inc
pushf
fistps
int
rcrb
mov
aam
xor
loop
ljmp
push
sub
and
in
xor
fidivrl
xchg
out
dec
xchg
pusha
sub
icebp
push
inc
xchg
addl
cmpb
inc
jno
shll
sbb
push
cmp
push
xchg
lret
xchg
shll
pop
and
push
push
push
inc
sub
jge
xchg
mov
and
js
test
pop
aas
add
int3
es
sbbl
jmp
xor
push
inc
xchg
mov
in
aam
loope
mov
pushf
jmp
mov
jno
adc
pop
or
clc
xchg
icebp
push
or
sbb
mov
push
xchg
add
pop
movsb
imul
arpl
lock
mov
arpl
fsubl
xchg
shr
or
lea
out
inc
mov
mov
lods
inc
cmpsb
lahf
adc
enter
bsf
mov
icebp
arpl
mov
sbb
fmull
data16
dec
adc
pop
or
test
int3
cmc
jae
dec
sbb
inc
jmp
or
xor
pusha
outsb
test
popf
jp
sub
dec
in
adc
dec
jmp
sub
or
sub
sbbl
clc
mov
cld
popa
mov
ljmp
and
mov
mov
cltd
adc
pusha
aaa
inc
mov
inc
mov
adc
sub
pop
jo
je
mov
xchg
pop
lock
leave
cmp
fnstsw
insl
test
and
xchg
shlb
xchg
jb
insl
sub
dec
dec
lret
add
data16
xorb
mov
scas
dec
mov
into
and
imul
aaa
dec
push
sub
inc
inc
mov
imul
cmp
cmp
xor
sbb
repnz
push
jno
popa
xor
ss
pusha
cld
push
scas
arpl
loope
fbld
add
adc
mov
das
lahf
ret
dec
ds
outsl
pop
xor
int
and
out
fs
jns
lock
xor
and
pop
inc
jnp
push
or
je
sbb
mov
rcll
insl
test
inc
shll
pop
loope
or
inc
leave
imul
dec
insl
mov
lret
inc
lds
outsl
les
aad
rorb
mov
cld
in
imul
bnd
add
pushf
xchg
add
sbb
pop
imul
xchg
stc
lods
mov
push
mov
push
jae
fsubrs
add
inc
xchg
les
scas
mov
cmpsl
int
add
popa
push
mov
in
inc
and
jne
loop
aad
into
xchg
iret
outsb
cli
and
lcall
sub
loop
lods
jp
iret
sub
push
dec
orl
idivb
daa
pmullw
push
pop
jl,pt
idivl
and
in
pop
adc
mov
pushf
rcll
sub
inc
mov
cli
imul
jbe
outsb
jecxz
lds
and
fwait
lods
out
inc
and
lret
mov
in
jmp
hlt
popa
nop
dec
add
loope
iret
loope
fdivrl
imul
sub
inc
fadds
mov
into
scas
mov
or
bound
shrb
fwait
lahf
std
scas
and
popf
mov
inc
sub
or
adc
and
sub
inc
xlat
aam
in
not
jmp
mov
sub
push
hlt
dec
fsts
dec
bnd
les
jns
mov
sbb
movsb
adc
pop
pop
stos
jne
repz
push
pop
out
ds
loopne
jae
or
xor
xchg
xor
bswap
sbb
fwait
cltd
cltd
inc
push
ds
pop
in
pop
aad
aam
cmp
jno
xchg
ficompl
orl
stc
movsl
repz
cmc
test
push
fwait
mov
test
push
xor
push
outsl
enter
lds
mov
dec
in
jg
ja
in
mov
sbb
flds
xchg
mov
xor
into
insb
mov
shrl
faddl
jno
inc
daa
mov
mov
xchg
inc
and
insb
test
lret
jo
xchg
push
dec
mov
inc
dec
lds
imul
out
iret
inc
enter
es
fs
adc
push
xchg
rcr
push
out
dec
je
mov
stos
imul
stos
or
xchg
xchg
xorl
xor
cmpsb
ss
mov
pop
ret
lret
orl
sbb
flds
dec
das
jle
or
xchg
mov
or
xchg
push
mov
inc
out
fnstcw
cmp
or
or
mov
fidivrs
push
nop
xor
pusha
scas
pop
sahf
rcll
adc
jmp
jnp,pn
cmpsl
adc
in
and
cli
flds
leave
mov
fsubl
cmp
xor
jne
xchg
pop
scas
add
out
push
and
testb
pop
loop
mov
mov
cmc
dec
adc
add
mov
aas
cmp
mov
in
push
test
sti
dec
test
in
in
cmp
push
jmp
sub
inc
push
add
lret
nop
cltd
cmp
nop
loop
inc
out
add
insb
mov
orb
cmc
shl
rorl
or
jg
lds
test
xor
push
pop
xor
sbb
into
ret
adc
les
pop
mov
divl
xchg
sbb
sbb
cmp
iret
aam
lret
push
rcrb
xchg
leave
push
xor
push
lods
xchg
das
sub
loopne
mov
aam
mov
test
aaa
scas
stos
ret
pop
dec
xchg
clc
mov
ljmp
orl
adc
mov
push
aaa
lods
leave
scas
scas
xchg
push
in
xor
cmp
lods
in
lea
test
push
inc
mov
popf
jmp
mov
fdivrs
and
cwtl
test
sbb
pop
lods
inc
inc
inc
pop
cwtl
dec
ja
mov
cltd
dec
mov
enter
cs
ret
int3
fldt
adc
in
aam
movsb
jecxz
adc
push
xchg
loopne
push
iret
mov
cs
or
sbb
push
mov
xor
loopne
cmp
and
scas
icebp
lods
popa
in
cs
ljmp
jbe
mov
fiadds
dec
jne
sub
xor
dec
lret
cmpsb
lods
stc
fs
xor
xchg
sbb
mov
mov
les
dec
loopne
add
sub
cmp
sahf
cwtl
pop
ss
loop
shr
jp
xor
es
mov
mov
mov
ds
and
hlt
add
xchg
pushl
icebp
inc
imul
mov
xor
mov
inc
test
lods
ret
fisubrl
push
popa
mov
flds
mov
push
aam
mov
adc
sub
dec
xchg
out
xchg
mov
cmp
je,pn
hlt
sub
jl
das
dec
sub
gs
mov
pop
cmp
lret
data16
xchg
and
inc
adc
xchg
fidivl
call
into
push
add
push
sbb
jg
jmp
pop
xor
push
push
shl
in
xchg
jnp
pop
jns
iret
pushf
ds
rclb
jb
xchg
mov
out
sub
shr
mov
loop
and
lea
in
outsb
repz
loopne
popa
addr16
sahf
ss
pushf
decl
ljmp
into
sahf
adc
inc
jmp
push
enter
fldt
fs
es
mov
hlt
ljmp
movsl
mov
aaa
sbb
insb
test
inc
and
popa
fcompl
fimull
fisubrs
lods
aam
cmpsb
shrl
movsb
mov
add
call
dec
sub
push
loope
scas
ss
xor
fcmovu
xor
adc
and
aaa
fwait
and
push
adc
movsl
repz
add
pop
mov
aad
xchg
mov
fiaddl
mov
cwtl
mov
jae
mov
loope
jge
aad
test
jmp
cwtl
stc
inc
push
xchg
sub
cmp
fnstenv
daa
ja
sub
mov
adc
cmpsb
fsubp
filds
cmp
decb
call
inc
push
and
addl
xchg
sub
sbb
arpl
movsb
addl
xchg
sub
loopne
lods
inc
mov
inc
std
pop
pop
std
mov
cwtl
lcall
cltd
or
sarb
je
sbb
popf
xorb
or
jl
into
scas
xchg
xchg
inc
jp
loope
leave
mov
dec
stc
mov
xor
xlat
mov
insb
mov
cmp
xchg
test
inc
in
cmp
cmp
in
adc
mov
lods
jge
idivl
das
shrl
test
push
shrb
lahf
and
sbb
fimuls
sbb
call
lods
jg
es
or
movsl
pop
jp
jnp
xlat
xchg
jp
adc
mov
pop
out
adc
pop
cmpsb
and
mov
mov
out
orl
jp
dec
scas
or
in
mov
pushf
fs
sub
pop
test
xor
cmc
or
inc
mov
adc
js
das
adc
inc
jge
outsl
cmp
push
sbbb
cwtl
sbb
nopl
and
xchg
roll
xor
and
les
jno
scas
stos
jp
adc
leave
push
mov
sub
xor
pop
xchg
pop
popf
cltd
pop
into
insl
xor
sub
pop
aam
sbb
sub
mov
pop
sub
push
xorb
shlb
addb
pop
xor
push
xor
dec
sub
lahf
js
pop
xchg
in
dec
lds
loope
and
movsb
xchg
push
pop
hlt
insb
xor
mov
fwait
cwtl
fwait
jmp
lret
stc
aaa
stc
mov
xchg
push
dec
test
or
mov
daa
pop
frstor
aam
pop
lahf
cmc
xchg
notl
les
aad
mov
xchg
insb
aad
sbb
jmp
cli
hlt
aam
ds
jno
aam
mov
xor
jae
adc
fnstcw
sbb
mov
jl
or
jno
jne
push
mov
sar
pop
pcmpgtw
mov
jge
je
fnstenv
jp,pt
pop
adc
push
js
rolb
test
mov
bound
cmp
sbb
xor
pop
rcl
sbb
dec
scas
xchg
daa
pop
cmp
jo
or
divl
rorl
imul
inc
popf
stos
shld
mov
mov
push
out
addb
or
adc
rcrl
dec
es
xor
pop
inc
inc
in
adc
adc
movsl
nop
jbe
gs
jno
jae
or
sbb
cmp
roll
stos
stos
test
push
push
ret
adc
xchg
dec
arpl
cmp
stos
pop
mov
add
sahf
push
sbb
das
mov
mov
xor
repz
jnp
mov
dec
push
jecxz
das
cmp
jno
cmp
xor
loop
sahf
fdivrl
dec
ja
xchg
jmp
scas
movsl
mov
add
adcb
adc
sarb
mov
xor
xchg
aad
push
iret
inc
jg
les
into
jnp
mov
fnstcw
mov
inc
sbb
xorb
frndint
ficomps
js
xchg
xor
sbbb
or
lods
bnd
sbb
mov
shrb
jp
or
jae
fildll
and
add
pusha
and
ret
addb
insb
or
and
test
std
outsl
cld
add
or
adc
loopne
mov
jl
push
xchg
and
repnz
ja
mov
imulb
sarb
aaa
jno
clc
sahf
rcl
xchg
loop
hlt
and
and
int3
adcl
sbbb
fists
bound
jle
mov
pop
jns
cmpsl
sub
std
das
mov
ret
inc
and
push
push
cmpsb
test
ret
inc
out
and
jecxz
out
inc
jle
icebp
icebp
jg
and
push
in
push
mov
rcr
mov
aas
inc
push
pop
sbb
aad
rolb
mov
cmpb
dec
outsl
aad
movsb
mov
mov
cmp
xor
es
xor
pop
mov
in
or
daa
dec
xor
pop
ret
fnstsw
repz
jl
out
in
mov
nop
in
mov
in
faddp
sub
xor
ret
nop
sub
and
dec
or
push
in
push
popf
jle
pop
lcall
or
leave
shrl
fs
jae
out
mov
pop
and
jge
xor
sbbl
xor
clc
loope
add
push
repnz
lcall
rcrl
dec
mov
jae
xchg
aad
or
sbb
pop
adc
out
adcb
mov
sub
das
pop
repz
xchg
push
loope
stc
int3
xor
add
imul
dec
adc
xchg
jo
xchg
sub
mov
in
test
jl
aam
jmp
xchg
dec
ja
and
lret
and
mov
inc
sub
jl
dec
xchg
arpl
das
mov
out
cmp
scas
shll
shll
mov
loop
sub
jbe
rol
nopl
es
mov
xor
std
mov
dec
xchg
test
inc
fbstp
int
and
pop
xchg
es
jb
adc
mov
vpmaddwd
and
mov
filds
scas
dec
ljmp
popa
dec
jnp
xchg
aaa
or
mov
mov
inc
popf
insl
push
jb
into
cmpsl
mov
push
push
lds
xor
adcl
xchg
dec
sbb
and
add
loopne
jp
jle
shlb
or
imul
or
lods
rcrl
out
lods
out
pop
imul
lods
pop
and
rcrb
repnz
lock
outsb
jp
stos
daa
mov
mov
cmpsb
add
lahf
daa
jae
movsl
xchg
pop
aam
jle
mov
pop
cmp
lea
inc
sbb
cmpsl
test
pop
jo
jecxz
std
sti
mov
sub
xchg
jno
ds
shll
stc
jns
push
jl
push
es
pop
inc
pop
mov
sub
pop
fisttps
cli
sarb
dec
je
sbb
sti
imul
mov
cld
aam
subb
addr16
sub
inc
shrl
pop
faddl
inc
in
mov
lahf
push
movsl
cmp
sub
nop
fiadds
cmp
add
cli
jbe
mov
into
xor
adcb
ljmp
pop
clc
sahf
fiadds
in
dec
test
inc
xor
imul
cmp
sbb
jp
fwait
jnp
jne
jl
add
pop
xor
or
aam
dec
out
dec
jge
ljmp
lcall
fisubl
aas
push
inc
sbb
or
dec
inc
loop
or
adc
adc
fcomps
mov
testl
popf
les
and
jge
dec
mov
in
stc
add
in
int
lea
or
xchg
jae
cmp
loope
pop
and
push
xchg
rcll
inc
pushf
sub
jno
pop
insl
jmp
loop
and
repnz
jo
lea
add
pop
aad
xchg
jns
cmp
jne
push
jnp
sub
sbb
xlat
movl
pop
pop
cmp
arpl
nop
push
xchg
gs
cmp
xor
or
cmpsb
dec
rolb
jne
nop
cmp
and
lods
lgs
sub
bound
es
cli
in
dec
es
call
add
or
int
out
inc
mov
adc
test
pop
and
mov
mov
add
push
dec
xor
sbb
loopne
icebp
sar
popa
push
push
sbb
fimull
stos
loopne
ja
mov
push
cmc
into
push
inc
enter
sub
mov
xchg
and
and
aad
adc
xor
lcall
mov
mov
and
cmp
push
sub
adc
js
in
in
daa
push
jg
adc
pop
push
and
xchg
jb
add
add
ror
add
divb
cltd
addr16
scas
insl
lods
pop
stc
or
lea
lock
fsubs
int
fldcw
into
repnz
repz
cmp
test
push
mov
movsb
icebp
insl
fs
pop
addr16
push
sahf
fsubs
xor
hlt
insl
xor
dec
nop
cmp
enter
mov
mov
xor
xchg
xor
lret
sbb
sub
sub
jecxz
outsl
mov
in
loopne
repz
imul
mov
push
adc
fcmovnu
fisttpll
aad
add
xor
sahf
pop
sahf
aaa
xorl
jecxz
leave
aas
stos
and
push
lock
stos
dec
stc
pusha
xlat
jge
imul
fcoms
loopne
adc
sarl
push
jno
enter
jnp
sahf
leave
xlat
call
mov
ss
inc
cltd
dec
inc
sub
xchg
fwait
push
sahf
loope
pop
shrb
popf
push
lods
shll
jnp
inc
cli
sub
call
mov
and
int3
fsubrp
xor
xorb
inc
lds
xor
jne
sub
mov
test
lods
jl
pop
imul
jl
test
and
out
popa
push
pop
adc
pop
pop
lods
xchg
push
mov
arpl
scas
fs
inc
dec
dec
setne
lret
and
popf
xchg
sbb
inc
sti
js
mov
push
rorb
inc
popa
push
push
add
sbb
outsb
mov
add
dec
inc
or
push
lret
jecxz
mov
call
xor
f2xm1
das
cmp
cmp
lock
cmpsb
mov
xchg
sbb
enter
sbb
cwtl
mov
jmp
ret
mov
adc
fcoms
std
in
sbb
loop
inc
ret
dec
and
out
cmp
xor
mov
add
jg
in
data16
orb
cltd
test
inc
mov
dec
js
adc
push
sub
out
and
xor
inc
pop
sbb
call
mov
inc
cmp
gs
mov
inc
xor
jno
add
in
mov
int3
das
std
out
in
dec
ss
add
shrb
rorb
mov
ss
add
or
or
pop
pusha
xchg
enter
lods
lods
xchg
std
mov
stos
add
test
push
in
movsl
test
out
and
ljmp
fistpll
mov
adc
pop
mov
pop
movsb
lcall
xchg
push
ret
cli
loope
repz
mov
mov
rorb
jmp
pop
test
push
mov
out
sbb
lahf
sub
push
push
xchg
pushf
lds
mov
iret
lret
sbb
pop
adc
mov
in
outsb
fdivl
std
cmp
dec
das
rol
shld
incb
lcall
loope
sar
cmp
gs
int
in
into
hlt
pop
flds
or
sub
cmc
and
add
xchg
jecxz
mov
popa
xchg
jne
std
addr16
or
jmp
aas
jno
sub
shlb
loop
sub
jecxz
lcall
filds
mov
sbb
fstp
outsl
dec
pushl
cmp
mov
cmpsl
fists
repnz
sub
mov
xchg
dec
pop
xor
js
cmc
adc
popa
stos
mov
add
adc
stos
pop
push
xor
pushf
mov
incb
ss
insl
push
push
mov
mov
addl
adc
out
inc
xor
mov
sbb
dec
add
sbb
psllw
jecxz
test
lea
cltd
mov
cli
mov
out
scas
clc
push
rcr
out
and
mov
or
mov
push
and
mov
sbb
insl
jb
ja
lock
sub
aaa
cltd
dec
fs
ds
hlt
lcall
jno
mov
pop
into
pop
mov
cmp
xchg
ja
int
fiadds
inc
mov
sub
out
cmp
add
lea
and
push
sub
pop
lods
sub
xor
out
stos
xchg
nop
jne
cmpsl
enter
stos
sub
cmp
cli
movsb
sub
sbb
outsl
ret
jb
mov
fistpl
pop
add
sub
adc
jp
adc
cmp
add
inc
sub
mov
in
pop
inc
xchg
lret
mov
rcll
lods
cltd
scas
roll
in
jge
adc
mov
jnp
xor
int3
jne
lret
sbb
jbe
xchg
jg,pn
stos
pop
mov
fisubrl
lds
in
push
ret
sbb
lock
jo
fidivrl
mov
inc
scas
je
lds
lret
lahf
sub
cmp
in
cwtl
sbb
imul
iret
cmpsl
mov
in
loopne
lock
cmp
ja
lods
add
repnz
out
pop
test
mov
lret
lret
push
icebp
ja
test
imul
sub
and
notl
test
or
lahf
loopne
mov
jb
fsubs
cmp
dec
jge
mov
hlt
cld
mov
popf
lea
mov
sub
add
sbb
scas
repz
add
fldenv
push
mov
sti
aas
outsl
dec
lret
mov
ss
mov
imul
test
data16
push
sub
and
lret
out
stos
cld
jge
loopne
adcb
adc
fimull
stc
jl
shll
inc
outsl
bound
pop
ficomps
cld
sub
mov
dec
mov
xor
xlat
fsubs
aaa
push
push
and
jecxz
popa
lcall
push
add
test
xlat
ret
int
scas
push
in
cmp
shlb
adc
pop
mov
sub
pop
leave
cmp
cs
lock
aaa
ret
fsubs
les
shr
lds
je
jno
dec
int
bound
jnp
push
pop
push
inc
scas
add
xchg
push
insl
int
pop
and
sahf
cmc
jb
sbb
xchg
jo
mov
cmp
mov
xchg
adc
jo
jmp
jmp
mov
sub
decb
add
jns
and
mov
inc
test
push
andb
lret
pushf
mov
lcall
jbe
test
std
jnp
gs
mov
in
cmp
inc
insl
or
sub
mov
and
adc
rcr
pop
jmp
push
xlat
lahf
jmp
inc
cmp
stos
mov
mov
gs
negb
mov
pushf
lahf
stos
das
adc
xchg
xlat
push
push
bound
push
int3
mov
and
out
movsl
cmp
cmpsl
jecxz
sub
mov
push
mov
jns
out
push
ficomps
jne
scas
stos
js
push
sub
push
push
leave
pop
ds
dec
mov
cmp
inc
pushf
cmp
les
repnz
mulb
pop
iret
jno
cs
jge
and
popa
movb
popf
arpl
push
add
imul
sbb
dec
mov
lds
xchg
fwait
jl
xchg
sub
test
pop
aaa
and
push
lret
pop
dec
popf
jnp
dec
jne
js
in
ss
nop
cmp
stc
in
fcom
shr
mov
js
jae
inc
fidivs
test
mov
mov
and
push
addr16
mov
cmp
xchg
fistps
stos
cltd
sbb
loopne
shl
push
sub
cmp
orl
stc
mov
or
push
adc
adc
push
je
jmp
dec
fs
popa
mov
dec
add
cld
loopne
adc
insb
stc
out
popf
xor
or
mov
aam
fstpt
xlat
pop
loopne
add
inc
movsl
adc
push
sub
jne
aam
out
add
jne
jge
shrl
imul
les
jno
popf
dec
or
cmp
std
fs
push
ljmp
push
inc
ds
pop
cwtl
jbe
pop
add
daa
dec
rcll
push
mov
ss
mov
pop
mov
fcomps
mov
and
mov
ljmp
insl
in
inc
imul
aaa
mov
xchg
jo
xlat
xor
cmp
adc
push
push
testl
push
mov
cmpsb
push
inc
insb
xchg
ret
test
in
fwait
mov
repz
sbb
sbb
mov
inc
push
sahf
test
dec
pop
loop
pop
insl
add
cmp
and
cmp
lea
xor
sub
push
insl
enter
adc
flds
pop
into
lods
imul
inc
bound
mov
leave
sub
lret
testb
xor
mov
into
fs
lret
movsb
and
add
insb
pop
xor
imul
mov
or
push
and
repnz
in
cmc
and
jge
xchg
add
adc
jmp
stc
sbb
mov
jmp
lds
xchg
and
dec
in
dec
xlat
fimuls
aas
daa
mov
ds
nop
adc
bound
pop
pop
daa
sbb
inc
cld
jl
pop
sub
dec
adc
jge
mov
and
lea
sbb
xor
adc
xor
or
into
aaa
jp
fisubs
cmp
add
test
jle
ret
fwait
push
cli
jae
mov
mov
xor
or
adc
ss
jne
ret
mov
dec
out
cmpsl
test
mov
stc
mov
insb
cmpsb
pmaxub
inc
rcrl
das
stos
out
pop
sbb
mov
mov
inc
bound
shrl
nop
loop
add
adc
lods
inc
mov
push
fs
ljmp
pop
cmp
rcll
fnstcw
sbb
fwait
jne
sub
sub
outsb
xchg
push
lahf
and
jp
scas
pop
pop
pusha
icebp
and
dec
push
add
testl
cmp
xor
sbb
push
mov
sbb
ret
pop
mov
jge
test
cmp
fstp
mov
cld
cmp
xchg
or
mov
mov
add
aam
aam
arpl
pushf
adc
in
aaa
push
or
add
fisttpll
mov
xlat
fdivl
mov
lods
out
mov
push
sub
ret
and
imul
in
fldl
push
daa
xlat
or
pop
jmp
mov
jecxz
orb
aaa
sbb
roll
push
loopne
jp
mov
adc
cld
into
lock
xor
and
pop
pop
repz
movsl
into
adc
pop
pop
mov
addr16
push
mov
not
jno
in
jns
pop
lret
scas
bound
fcomi
adc
jnp
ss
movsb
fs
sbb
lret
sub
sbb
jo
jmp
insl
test
stos
mov
cmc
and
push
lret
pushf
push
add
movsb
cmpsb
test
xchg
lahf
and
push
outsl
or
clc
loopne
out
pop
and
mov
lret
xchg
and
stc
push
insb
cmp
fs
fcompl
or
adc
push
fldt
and
mov
jecxz
inc
aaa
dec
cmp
jns
mov
fs
mov
stc
sub
mov
ficomps
and
movsl
xchg
push
dec
pusha
mov
sbb
mov
leave
sbb
inc
cmp
jmp
loopne
cmp
inc
xchg
mov
pop
or
movsb
push
popf
push
jne
sarb
inc
mov
ss
cmp
add
iret
push
jecxz
call
push
xor
sbb
arpl
jo
adc
push
pop
jno
arpl
add
imul
inc
inc
insb
mov
and
jbe
scas
mov
dec
add
jno
repnz
cmp
cltd
inc
sub
push
stos
popf
mov
fsubr
push
mov
push
cmp
les
scas
jnp
adc
xor
jno
rol
es
popf
jb
into
sahf
jnp
push
test
sbb
cmp
sbb
cmpsl
int3
xor
jmp
inc
test
nop
or
sahf
xchg
mov
jbe
loope
or
and
mov
movsb
ss
lods
mov
or
in
jo
cs
repnz
xor
out
jl
add
fimuls
jg
push
out
push
fs
cmpsl
lret
cmpsb
pushf
lret
arpl
ret
movl
cli
jns
lahf
fistps
xor
ljmp
ljmp
pop
xchg
fidivs
rclb
pop
mov
mov
mov
test
cmpb
shlb
aad
movsb
xor
movsb
or
pop
aas
sub
inc
icebp
xor
dec
cmpsl
xor
ss
mov
inc
aam
mov
adc
pop
add
loope
hlt
pop
pop
and
in
lock
sbb
mov
pop
cmp
frstor
mov
loop
adcb
mov
aaa
lcall
lea
hlt
xor
mov
les
into
fs
push
fs
adc
lods
in
mov
out
adc
sbb
leave
add
lea
sub
inc
dec
cmp
push
cmp
cmp
les
jecxz
aas
test
sti
movsb
lahf
xchg
pop
lret
call
jle
pop
inc
jae
adc
loop
sahf
test
ds
push
and
and
pusha
push
push
test
adc
mov
das
lcall
add
leave
lahf
lret
lret
cli
mov
das
inc
int
andl
shl
xchg
jmp
out
or
enter
cmpsb
jmp
test
leave
call
mov
jmp
pop
inc
es
int
jmp
popa
int
mov
mov
test
imul
cltd
xor
or
add
xchg
cmp
jne
xorl
cmpsl
jmp
loop
inc
jmp
clc
les
bound
cs
adc
shrb
das
lock
popa
and
test
hlt
cmp
and
scas
add
push
sub
and
xchg
test
insl
test
ret
jns
xchg
popl
pop
sub
jmp
mov
dec
in
ja
sub
dec
mov
mov
imul
add
xchg
jb
add
mov
xor
fcompl
or
or
lret
mov
aas
jno
cltd
pusha
push
fidivrl
cmp
daa
push
and
push
int
adc
pop
js
test
inc
dec
loopne
sub
out
ret
cli
mov
lods
mov
push
in
jg
lods
fsubrs
mov
insl
push
lds
xor
mov
inc
fwait
xor
adc
xor
and
int
mov
iret
cmp
das
push
stos
dec
cmp
jecxz
and
or
adc
sahf
and
repnz
add
fimuls
or
in
dec
sbb
inc
aas
mov
js
sub
je
lret
ds
into
xor
lret
jo
mul
test
add
int
pop
cmp
fnstenv
mov
sti
and
lcall
outsb
inc
mov
jp
rclb
mov
or
sbbl
loopne
test
mov
adc
mull
out
loopne
inc
das
sbb
dec
mov
pop
push
inc
aas
dec
inc
adc
setb
jle
pushf
add
pop
aas
mov
pop
adc
stos
int
fadds
push
pop
sbb
sbb
dec
xor
stc
sub
xor
and
jb
dec
insl
push
push
lea
cmp
push
daa
es
adc
mov
mov
xchg
mov
out
out
fdivs
dec
lods
dec
ret
dec
dec
and
sahf
sub
insb
loopne
iret
rorb
add
fimull
dec
xor
push
jno
fists
movsb
in
add
aad
test
inc
inc
test
push
in
ljmp
aad
in
enter
sub
dec
add
sbb
and
xor
adc
jmp
icebp
and
shrb
insb
setg
pusha
outsl
mov
jae
pushf
xor
pop
mov
adc
lret
and
es
jg
ss
imul
push
test
movsb
mov
cli
cmp
push
adc
ja
and
dec
push
dec
dec
fsubrl
jne
dec
and
jns
mov
jecxz
inc
cmp
cmp
xchg
mov
mov
std
adc
push
mov
jae
in
sti
mov
adc
xor
testb
jne
dec
enter
scas
sub
dec
mov
iret
cltd
adc
es
faddl
push
push
popa
arpl
sar
nop
xchg
cmp
cli
out
or
mov
ss
clc
push
repnz
cmp
fdivr
jp
jne
jns
movsb
out
or
jmp
inc
push
pop
push
jp
fxtract
cli
jp
or
jb
fmuls
sub
lods
outsl
loopne
outsb
cs
pop
push
pop
jmp
in
pop
nop
in
mov
fcomps
std
cmpsl
cmp
rol
sbb
int
add
mov
xor
sub
sbb
lock
jge
inc
out
leave
mov
or
rolb
push
icebp
js
xchg
or
adc
xor
adc
fsubl
sub
pop
mov
insb
or
cli
lea
push
aad
push
scas
sub
shlb
mov
and
in
xor
xchg
cmp
ret
ret
iret
or
aad
xor
push
out
shll
pop
adc
test
fwait
or
sbb
shl
stos
mov
inc
push
es
pop
loopne
jne
test
add
lods
rolb
pop
and
das
repnz
push
ss
xrelease
cli
xchg
ja
mov
push
mov
jmp
add
leave
ret
cli
test
dec
push
adc
les
jg
outsl
adc
xchg
or
dec
inc
outsl
daa
inc
mov
mov
repz
daa
aas
aas
int3
or
pop
inc
jne
adc
jbe
pop
fmull
mov
adc
mov
push
sahf
dec
and
add
push
mov
cmp
shr
lods
fldt
cmp
push
push
mov
movsl
push
sbb
sub
cmpsl
jae
and
movsb
cld
js
out
sbb
xorl
icebp
or
shll
inc
mov
scas
fwait
leave
mov
mulb
inc
push
dec
dec
repz
jns
insl
dec
inc
push
subl
xor
xchg
iret
rcl
inc
dec
mov
hlt
dec
in
into
sbb
test
cmc
sbb
push
aam
mov
mov
jno
clc
add
nop
push
inc
dec
add
inc
mov
gs
das
sbb
cld
cmp
push
jns
adc
xor
stc
std
add
rcrl
push
cmp
adc
aad
mov
idivl
arpl
sbb
sahf
test
lods
pop
mov
jl
nop
pushf
xchg
stos
mov
lret
mov
mov
or
icebp
adc
lods
scas
lods
and
and
les
xor
xchg
incl
lods
decb
and
loop
fs
lea
test
rorl
andb
insl
in
and
popa
fimull
lret
scas
dec
pushf
and
lcall
inc
push
lds
movsl
andb
add
add
popa
fsubrl
mov
push
push
cmpsb
push
incl
jmp
xchg
mov
and
or
pop
rorl
sbb
or
and
pop
hlt
and
mov
movsb
outsb
xor
dec
es
mov
leave
mov
inc
xchg
insb
push
std
push
pop
mov
popa
adcl
push
in
daa
dec
scas
jmp
idivb
jo
pusha
cmpsb
or
mov
sub
loopne
mov
xchg
add
orl
popf
sub
mov
inc
add
lods
pushf
dec
sti
jl
jge
ds
shl
pop
push
push
push
ss
mov
je
mov
mov
add
push
cmp
jl
xchg
cmpsl
popf
adc
sbbl
sbb
rclb
ret
mov
popa
push
divb
rclb
out
mov
outsb
icebp
sti
push
pop
cld
mov
mov
jl
mov
push
jmp
imul
sahf
pop
jae
inc
cmp
out
insb
xor
cld
loope
ficoml
ret
push
clc
scas
or
arpl
je
add
jnp
xor
fwait
inc
jbe
dec
pop
and
or
inc
inc
outsb
decl
fildl
xchg
dec
mov
dec
sti
push
push
fisubrs
dec
and
or
mov
fimull
sbbl
popf
scas
inc
sub
or
push
mov
icebp
pop
sbb
jg
or
jne
jg
push
inc
jo
mov
adc
xor
xchg
pop
call
jmp
and
and
movsb
add
xchg
lods
xor
mov
pop
fdivs
mov
pop
insl
xor
test
fs
cmpsl
stos
std
sub
fnclex
jmp
ret
leave
dec
fs
in
dec
rcl
or
rorb
lcall
xor
mov
imul
bound
fmuls
xchg
cli
jmp
int
mov
nop
jnp
cwtl
into
pushf
mov
in
lock
pop
inc
jmp
mov
sub
gs
fisubrs
push
outsb
sahf
xor
aaa
pop
addl
inc
hlt
xchg
movsl
xchg
andb
cmc
pop
fstpt
push
jp
sub
xor
jo
jae
lret
sbb
pop
mov
jbe
pop
inc
inc
push
mov
test
inc
sbb
mov
mov
bound
mov
add
dec
fdivrp
push
int
cmp
dec
cmp
mov
xchg
jo
add
iret
mov
cmovns
loop
in
xor
mov
inc
and
lret
mov
mov
dec
insb
jg
test
push
nop
in
xor
ds
mov
adc
mov
call
cwtl
cli
fcoms
mov
pop
inc
test
and
inc
push
dec
scas
das
outsb
or
sbb
cmp
mov
cld
lds
add
repnz
inc
jbe
or
sub
stos
add
pop
adc
dec
fldcw
insb
ds
test
mov
mov
mov
lods
in
jecxz
in
dec
idivl
sub
add
jnp
aad
mov
mov
cmp
outsl
cmpsl
nop
jae
enter
dec
xor
push
enter
add
mov
xor
adc
les
cwtl
mov
jge
enter
nop
test
and
subl
outsb
xlat
int
cs
insb
sahf
repnz
mov
pop
addb
call
pop
or
push
jle
shlb
and
mov
ljmp
cmp
cs
sub
jno
adcl
inc
sub
or
bound
xor
adc
std
adc
and
sarb
jl
jnp
andb
lods
mov
cmp
movsl
das
inc
sub
jl
in
inc
iret
fldcw
xchg
lret
lahf
and
cwtl
int3
mov
bound
pop
mov
xchg
outsb
sti
rcl
mov
push
enter
xor
mov
leave
lods
loope
xchg
fstpl
insb
xchg
or
mov
xchg
pushf
popa
mov
dec
rcr
hlt
outsb
bnd
cmpsl
mov
xchg
adcl
negw
mov
je
or
fstl
cmp
ds
bound
fwait
pusha
cmp
idiv
nop
ljmp
insl
cmpsb
popf
call
je
pop
xchg
ljmp
or
bound
ss
sub
pop
arpl
idivl
dec
rorl
pop
jbe
in
lcall
movsb
mov
mov
adc
xor
ret
daa
int3
imul
sub
push
addl
stos
mov
std
leave
cmp
shlb
dec
out
cmpsb
xlat
sarb
repnz
inc
sbb
ficompl
xchg
jge
or
mov
push
test
cmpb
push
test
sbb
movsl
jmp
stc
jl
fbld
in
dec
lret
fsubs
mov
push
or
sbb
jb
ja
mov
loop
fwait
pand
add
inc
into
xchg
xor
shrl
in
mov
test
out
or
xchg
lods
test
aaa
arpl
in
insl
pusha
fisttpl
dec
xor
fld
jp
test
cli
adc
sbb
std
stos
push
outsl
pop
inc
fwait
dec
xchg
stc
repz
mov
sbb
repz
add
mov
movsb
cltd
cmp
clc
imul
test
xchg
inc
lods
cmpsb
fmul
inc
cs
mov
std
je
fmuls
xor
inc
jle
or
push
cmp
lcall
xlat
icebp
aas
and
lock
cmpxchg
popa
out
cs
mov
sbb
mov
cmp
xchg
lock
pushf
mov
lea
adc
inc
sub
sub
mov
popf
or
out
ficoms
sbb
sub
ds
call
ja
fwait
pop
enterw
xor
adc
sbb
dec
push
int3
dec
xchg
mov
xor
lods
popa
fmuls
mov
cwtl
hlt
movsl
push
cli
mov
dec
test
mov
xor
ja
mov
cs
daa
cltd
xchg
fsubl
dec
cmp
jnp
cli
jbe
scas
sbb
xchg
xor
jo
scas
jg
pop
shl
mov
cld
inc
les
and
xlat
insl
sub
or
dec
popf
pop
out
aam
das
adc
sbb
mov
into
mov
mov
in
test
push
imul
mov
mov
rcrb
aaa
fldl
rcr
std
jecxz
mov
cmp
and
mov
inc
xor
imull
test
imulb
or
rcrb
jp
loopne
mov
testl
pop
testb
icebp
mov
std
loope
or
fwait
lock
lock
clc
pop
push
sbb
mov
out
loope
push
or
jns
test
mov
pop
push
pop
adc
mov
data16
inc
push
mov
cltd
push
jns
fimull
movsl
mov
dec
mov
aas
sbb
pop
fbstp
rcrb
inc
lret
mov
test
ficomps
push
pusha
fcoml
xchg
jp
js
pop
dec
fwait
mov
cli
adc
aas
lret
mov
sahf
pop
mov
jno
mov
adc
push
inc
pop
in
into
testb
or
or
xchg
cmpsb
xor
ret
sub
out
cmp
hlt
or
jb
loop
stc
in
or
pop
aaa
jns
roll
das
mov
xor
mov
add
mov
ds
ljmp
filds
pushf
add
in
push
and
fdivrl
adc
leave
addr16
cmpsb
loop
xchg
jmp
jnp
jb
out
sbb
mov
lcall
xchg
mov
stos
das
test
les
mov
dec
mov
jne
or
fld1
pop
xchg
xchg
xor
cmp
sbbl
insl
insl
dec
test
adc
lds
sbb
fsubrs
out
mov
jp
mov
and
imul
loope
add
daa
or
add
and
cwtl
inc
fxch
imul
add
out
adc
int
adc
sbbb
or
jns
mov
or
call
pop
call
lret
sbb
xchg
sub
movsl
push
jno
cmc
push
cmp
jns
xor
or
adc
mov
popf
fwait
aas
sbb
rorl
sahf
outsl
ret
in
inc
stos
add
mov
push
dec
add
stos
jl
cs
mov
sub
sbbb
psubusw
shll
outsb
sbb
mov
adc
fbstp
lods
cmp
cmpsb
into
xchg
orb
sub
add
in
popl
jb
outsl
pop
stc
lods
das
adc
mov
loopne
dec
mov
jo
jo
cmp
or
ficompl
shlb
cmpsb
and
pop
xchg
xlat
mov
clc
nop
sub
push
insb
sbb
adc
xchg
mov
inc
jecxz
dec
sahf
mov
xor
fwait
mov
pop
or
loopne
inc
insl
aaa
popf
xor
push
sbb
push
insl
jne
mov
repnz
pop
stc
jp
inc
cld
out
sbb
cwtl
inc
mov
inc
enter
xor
mov
movsl
push
mov
cmp
test
mov
loop
jmp
test
jle
inc
xchg
adc
rolb
imul
jecxz
sbb
in
lahf
fs
cmp
dec
ret
dec
mov
lds
adc
mov
dec
iret
cs
pusha
xchg
hlt
mov
push
fidivrl
fisubrs
mov
das
sub
sub
test
mov
jle
push
stos
popf
mov
bnd
mov
dec
xchg
jae
call
jecxz
sti
pop
lret
lret
jmp
sub
outsb
push
mov
fcoml
push
mov
mov
mov
hlt
sarb
fidivl
jo
inc
push
sub
cli
cmp
fisubl
cmp
adc
xchg
and
adc
sub
je
shlb
popl
mov
jp
sti
mov
sub
mov
movsl
cmpsb
adc
test
jo
mov
mov
out
jecxz
cmp
pop
sub
call
and
sub
dec
cld
shll
popa
jl
clc
dec
std
inc
xor
jmp
cwtl
in
loop
out
or
jno
lahf
dec
push
cli
lods
sbb
cli
iret
test
incb
xchg
pop
lods
int3
dec
xchg
bound
pop
inc
orb
bound
inc
nop
or
mov
nop
sbb
mov
pushf
or
das
jo
sbb
inc
and
das
mov
push
xchg
repz
inc
ret
cmp
std
out
test
rcl
sahf
cmpsb
pop
mov
push
push
hlt
xor
xorl
mov
jg
mov
enter
lahf
xchg
repz
add
leave
sbb
lds
in
cmp
test
and
jne
push
sub
out
pop
push
pop
fdivl
xlat
jl
mov
pop
push
add
fldl2e
movsb
inc
dec
pusha
push
push
sti
push
out
lcall
out
in
fsts
pop
in
bound
cmc
popa
testb
mov
addl
test
in
insb
jl
pop
push
mov
rcrb
push
call
out
and
pop
xchg
daa
xchg
sub
movsl
mov
mov
inc
adc
into
xor
jbe
sub
or
int
sub
inc
dec
mov
in
out
out
or
mov
cld
stc
iret
mov
sbb
xchg
lods
imul
idivb
add
inc
pop
xchg
in
cmp
cmp
xor
dec
jno
int
mov
jmp
or
jo
xchg
fs
fsubl
fldcw
std
and
insl
pop
mov
cmpl
sahf
orl
orb
ds
xchg
cmp
es
mov
push
imul
dec
push
ret
dec
test
loope
xor
push
cmp
inc
sbb
cli
sbb
adc
adc
jnp
or
and
fimull
mov
lods
mov
dec
inc
das
in
daa
shlb
pop
or
mov
jbe
pushf
dec
fwait
inc
pushf
mov
cmp
call
lcall
sub
cmp
mov
andb
jmp
adc
std
dec
push
out
xchg
xor
clc
lds
pop
fcomps
mul
mov
out
fdivs
adc
mov
stos
xor
inc
cwtl
cwtl
pop
pop
jae
pop
sbbl
pop
push
and
pushf
sbb
scas
add
xor
outsl
sbb
mov
js
mov
push
mov
or
es
and
data16
dec
daa
jns
sbb
cwtl
sahf
pop
pop
rclb
jno
fistl
jae
mov
cmp
sbb
xor
fs
in
icebp
sbb
xor
iret
fadd
js
pop
cmp
push
or
icebp
cmp
mov
xchg
inc
mov
adc
jmp
mov
jmp
jbe
push
jg
stos
clc
sbb
inc
cli
mov
cld
mov
loopne
adc
jbe
movb
mov
or
push
fcomp
cli
mov
mov
out
mov
mov
mov
sahf
and
lret
and
add
push
lret
popa
sub
test
cwtl
es
xchg
mov
cld
xchg
jb
insl
cmp
xchg
imul
stos
je
lret
jnp
jl
cmp
jecxz
dec
push
mov
inc
ror
mov
call
add
gs
sahf
movsl
push
out
pop
mov
mov
mov
cs
inc
sub
and
or
pop
jb
scas
jnp
xor
jle
repz
popa
sti
dec
or
test
repnz
xor
push
and
sub
inc
dec
decb
pop
dec
mov
shll
mov
push
xchg
inc
outsb
pusha
shrb
scas
leave
sub
dec
rcl
push
test
repnz
jmp
outsb
test
sub
mov
mov
jg
adc
jle
mov
mov
lret
jno
add
fs
fists
inc
sbb
mov
or
adcl
cmp
call
sbb
fsubs
push
ret
and
mov
movsl
sub
dec
mov
jo
lods
scas
sub
xlat
pop
jno
mov
dec
movsl
dec
mov
sahf
push
bound
or
and
fwait
cmp
ss
add
or
int3
jnp
mov
or
movsl
push
orl
lods
cmp
jnp
pop
in
ret
or
xchg
pop
dec
mov
adc
pop
cli
push
jge
test
gs
jle
push
pop
stos
jle
push
jge
arpl
cmp
pmaddwd
fldenv
sub
cmpsb
ret
add
daa
arpl
mov
call
jb
call
iret
xchg
jg
mov
add
pop
repz
test
cwtl
loop
pop
xchg
aam
je
mov
or
dec
ja
aam
xor
mov
jmp
and
cmp
iret
xor
adc
fsubrs
fnstenv
cmpsl
sub
adc
aaa
jno
shl
jne
sahf
loopne
movsb
and
adc
push
rcr
xchg
cli
jbe
cmpsb
sbb
sbb
xor
inc
clc
inc
enter
test
cmpw
add
test
cli
shrb
xlat
movsl
inc
loop
and
and
dec
lea
lods
mov
repnz
and
fndisi(8087
and
ret
in
xchg
lds
mov
push
push
shl
jb
cmpsb
push
and
out
inc
adc
pop
xchg
sub
jbe
xorl
mov
clc
xor
imul
or
and
pop
adc
or
pushf
or
pop
or
stc
out
push
into
mov
bound
push
movsl
call
push
and
push
fsubrl
add
push
jg
outsb
mov
or
adc
mov
sbb
aad
push
mov
dec
or
aas
push
cmp
fimuls
popf
negb
testl
adc
jmp
mov
fdiv
inc
out
imul
or
insl
push
nop
ja
xor
mov
movsl
adc
enter
mov
fbld
mov
add
cmp
dec
inc
cmp
push
mov
cmp
bound
fisubrs
ss
cmp
mov
shl
push
inc
push
ret
lahf
dec
pusha
pop
rcl
mov
in
gs
adc
sbb
mov
pushf
xor
xchg
lods
lcall
test
jno
lahf
pop
cld
movsb
out
jbe
or
stos
ja
inc
pop
xor
sub
in
xchg
and
test
cmpl
push
jo
ja
and
loopne
add
inc
in
ret
out
orb
mov
sarl
cmp
mov
lcall
mov
mov
sbb
insb
and
mov
outsl
mov
add
test
pop
adc
imul
mov
inc
or
js
adc
jo
push
daa
pop
cld
jbe
dec
xor
lahf
xor
adc
testl
daa
int3
lea
or
dec
cmp
imul
out
inc
int
fsts
ret
scas
insb
gs
sub
mov
pop
adc
inc
mov
addr16
imul
mov
add
mov
push
rol
stc
add
jo
rorl
xchg
sbb
lock
push
mov
repz
or
xchg
mov
outsb
push
aaa
iret
jg
imul
pop
or
push
ljmp
sbbl
push
inc
push
mov
adcb
mov
jle
loopne
jne
add
dec
dec
lods
jle
stc
mov
xor
cld
insl
ljmp
fistl
and
or
sub
out
mov
ljmp
loop
xchg
mov
imul
or
cmp
pop
push
dec
fiaddl
add
scas
test
mov
ss
in
iret
loop
sub
and
movb
test
or
test
cmpsl
in
int3
call
shrl
push
stos
sbb
jno
ret
inc
jno
sub
mov
push
popa
mov
call
lods
adc
lahf
push
cmp
push
mov
roll
call
cmp
push
xchg
adc
iret
ljmp
stos
mov
stc
jmp
les
ret
test
push
sbb
int
pushf
out
rorl
lea
and
adc
in
push
inc
aam
pop
cli
addb
lods
pop
mov
lods
or
pop
scas
push
fidivrl
add
xor
push
pop
sbb
stos
mov
cmpsb
xor
mov
jnp
push
fdivr
jo
mov
inc
dec
rolb
jle
in
fldl
inc
pop
add
and
in
and
add
fwait
rcl
pop
adc
mov
adc
xchg
or
dec
ret
in
test
ret
mov
imul
add
rcl
pop
fnstsw
or
daa
adc
arpl
sti
fimuls
push
sub
jo
popf
mov
inc
stos
cwtl
into
fmul
jmp
in
data16
icebp
dec
jge
rcll
lea
test
mov
xchg
cwtl
and
in
bound
sub
lret
sub
jae
mov
loopne
stc
push
je
pop
mov
sbb
push
adc
lods
push
dec
ljmp
xchg
mov
cwtl
push
loopne
cld
cmp
pop
push
xor
out
xor
adc
lds
nop
xchg
mov
cmpb
sbb
ficomps
je
testb
push
popa
es
xchg
mov
or
les
inc
movsl
inc
lods
lret
sub
jne
sbb
aas
sub
out
addr16
jnp
outsl
test
push
adc
or
or
aaa
test
dec
push
popl
xchg
jb
pop
adc
inc
xor
xchg
adc
loopne
gs
jns
stc
dec
xchg
sub
es
lea
sti
imul
cmpsb
cmp
fisubl
jne
dec
cld
movsb
xor
jp
xchg
xchg
in
idiv
mov
xorl
sub
fs
cltd
cmp
addb
mov
in
jp
mov
jnp
cmp
inc
stos
out
cmc
sbb
add
adc
push
out
lds
jle
jae
xchg
adc
or
jge
aas
xchg
push
int
int
lods
pop
push
es
xchg
stos
ljmp
scas
pop
mov
xchg
cmpb
jbe
xorl
ret
gs
push
jno
inc
push
divb
aaa
jnp
mov
fwait
dec
data16
push
aam
jbe
testl
pop
push
cld
xlat
popa
js
cmp
sub
popa
in
andb
sub
and
pop
std
fisubrs
clc
lock
jne
add
xchg
jns
movsb
out
xchg
sub
lods
and
mov
push
ret
pop
ds
pop
fistpll
fimuls
sub
mov
dec
jae
or
stos
push
push
popa
or
stos
fiadds
fstl
mov
dec
xlat
insl
or
fiaddl
xchg
jle
fistpl
inc
or
dec
sub
sysret
push
jae
imulb
aaa
push
dec
xlat
arpl
mov
rorl
mov
xor
sbb
cmp
test
sbb
jg
and
mov
xor
ja
xchg
subl
cmpsb
jge
es
push
sbb
cli
call
xor
push
jnp
push
js,pt
cmp
or
icebp
jg
xor
pop
dec
and
bound
push
js
sbb
xchg
inc
arpl
xor
xchg
call
loop
js
lods
and
xor
sarb
cmp
xchg
out
aas
and
xchg
daa
sbb
sbb
es
sub
stos
stos
ds
rorb
jo
xor
push
fsubl
cmp
enter
adc
jae
fisubrs
test
push
sbbb
sub
in
push
stos
pop
add
cmc
fadd
out
insl
mov
sti
push
adc
jns
pop
cmp
mov
in
adc
lock
push
pop
adc
iret
lahf
aas
push
dec
enter
orl
jnp
xchg
cmpsl
nop
cmc
dec
fwait
idivl
mov
adc
dec
ret
cltd
in
gs
jmp
xchg
mov
fmul
xor
ret
dec
and
jne
dec
xor
or
mov
fs
daa
jne
stc
push
stc
cmc
fadds
jle
int3
pusha
xor
xor
lds
fsubrl
fwait
data16
jne
arpl
jae
inc
loop
push
out
pop
pop
mov
enter
jmp
popa
xor
jg
mov
mov
test
add
mov
cmp
addr16
mov
xchg
xor
fiadds
lods
pop
pop
dec
jp
or
sub
jmp
dec
mov
mov
sub
sub
insb
pop
pop
xchg
add
xchg
xlat
xchg
or
aaa
mov
inc
add
lock
movb
loopne
btr
xchg
cmp
loope
ficomps
mov
das
dec
xchg
fs
inc
sbb
dec
addr16
int3
clc
lahf
adc
cltd
fildl
or
pushf
fcmove
inc
sahf
test
sbb
cli
cmp
mov
mov
cltd
push
push
mov
adc
inc
sub
dec
xchg
cmp
xchg
insl
cmp
pop
pusha
lea
pop
mov
inc
sbb
dec
daa
xor
adc
cld
mov
dec
dec
mov
jmp
enter
lods
rcrb
push
lahf
sub
mov
pusha
dec
pop
call
das
loop
int
fnsave
cmp
jns
lds
jnp
cwtd
push
nop
adc
mov
in
xchg
fidivs
out
xor
push
push
ret
mov
mov
and
outsl
mov
push
int
ja
cmpsl
hlt
xor
mov
fistl
mov
test
pop
and
push
fsubl
xor
xlat
cpuid
cmpsl
dec
or
add
aam
sub
xor
loop
pop
into
mov
xorl
stos
jnp
in
jae
sti
stos
sbb
jecxz
movzwl
inc
je
jae
sar
cmp
test
lods
in
in
or
xchg
mov
fwait
add
outsb
pop
clc
cld
andl
out
loop
insl
fldcw
jne
jge
adc
mov
jbe
roll
pop
adc
xlat
sub
fsubrs
jno
sbb
or
fcompl
pop
js
xchg
sub
dec
mov
add
jns
push
andl
mov
mov
xchg
loope
in
inc
mov
sub
sub
add
xchg
pop
imul
mov
mov
and
in
les
mov
and
or
ret
imul
inc
xor
mov
or
pop
push
das
insb
ja
ss
es
sbb
xor
cmpsl
repnz
cli
sbb
in
jle
scas
xor
xor
adc
ret
mov
sbb
mov
xchg
leave
or
aaa
data16
jbe
inc
stc
cs
inc
aad
mov
push
loopne
and
arpl
data16
enter
enter
mov
insb
out
and
push
pop
push
push
or
mov
add
ret
testl
xchg
add
pop
inc
sub
cs
adc
inc
idivl
mov
andl
fstps
and
pop
push
push
or
xchg
aaa
and
add
scas
dec
pop
inc
out
addb
cmpsl
ret
jno
out
cltd
adc
inc
push
push
push
cmp
dec
sbb
dec
xor
or
mov
add
ss
sbb
jne
sub
loope
lahf
lea
js
rorl
mov
xlat
ljmp
xor
inc
orb
add
into
ja
or
decb
lcall
in
mov
int3
addr16
lret
jne
dec
inc
dec
xchg
popa
cmp
rolb
int3
push
xchg
shl
test
in
dec
xchg
mov
pusha
mov
enter
add
testb
test
cs
fnstcw
enter
mov
in
and
mov
insb
mov
or
rcrb
lret
inc
xor
sub
cli
adc
mov
xchg
repz
sub
out
test
pop
sbb
dec
shll
push
add
pop
arpl
sbbb
mov
test
push
popa
pop
jp
fs
mov
mov
mov
aaa
xor
or
push
out
push
push
loop
mov
inc
add
xor
subl
fscale
outsb
les
sbb
ret
lds
pusha
sbb
add
aas
xlat
xchg
push
and
testb
mov
sub
sbb
add
pop
sub
pusha
mov
pop
rorl
jge
xor
jne
push
test
imul
xor
in
push
jns
aam
adc
jg
pop
dec
cmp
push
pushf
ret
lcall
lret
sbb
xchg
scas
fcomp
cld
jno
sub
scas
fwait
scas
xchg
push
jmp
jmp
cld
xchg
std
inc
mov
inc
or
movsb
loopne
cmp
scas
int3
movsl
ja
loop
pop
mov
xchg
pop
arpl
mov
sub
fwait
in
fbld
js
notl
add
adc
mov
inc
dec
pop
mov
into
dec
les
mov
cmpsl
clc
or
sarl
cwtl
movsl
xchg
jmp
dec
cmp
out
les
xchg
sbb
mov
cmp
mov
jns
mov
outsb
lcall
enter
mov
movsb
push
jecxz
cltd
xor
mov
cmpsl
in
fwait
cmp
dec
rcrb
and
mov
inc
mov
insb
loopne
xchg
sahf
xchg
adc
divl
mov
mov
movsl
enter
cmp
sbb
int3
shll
stos
shll
sbb
nopl
push
popa
dec
inc
fistl
dec
pop
push
inc
jb
mov
movsb
add
shl
adcl
push
pushf
push
aam
mov
mov
push
push
shrb
movsb
and
mov
out
or
push
xor
decl
cmc
inc
sti
xor
push
mov
jp
xor
inc
inc
cmc
add
dec
cli
daa
mov
push
cmp
mov
imul
adc
jno
or
sti
mov
mov
in
cli
push
imul
pop
iret
scas
add
aad
xchg
add
xor
lret
push
pop
or
jmp
xor
ret
jb
pop
add
pop
movsl
decl
je
adc
xchg
push
clc
sbb
sub
and
pop
or
call
inc
lahf
xor
dec
mov
push
mov
mov
out
in
aaa
fimuls
sbbb
inc
push
sub
xchg
mov
nop
or
icebp
jnp
ffreep
pop
sub
shlb
lods
jecxz
out
cmp
pop
xchg
xor
repz
mov
addr16
addl
dec
fwait
scas
in
xchg
mov
sub
adc
inc
pop
inc
out
jno
xlat
cmp
and
pop
stos
xlat
arpl
and
mov
jb
cs
push
push
xchg
pop
mov
nop
int
sub
ret
leave
lahf
push
pushf
fmull
in
mov
mov
aas
jo
les
cs
data16
repnz
aaa
ds
cmp
jae
shlb
test
pop
cmpb
pop
loope
fsubl
or
outsl
xor
adc
inc
cs
outsl
popf
cmpsl
movsl
sbb
dec
cmp
mov
subb
and
outsb
fwait
mov
jle
adc
in
pop
int3
loope
and
mov
dec
push
xchg
outsl
dec
pop
pop
cmp
add
sub
adc
cwtl
push
cmc
xchg
jge
cmp
mov
cs
add
adc
mov
sbb
sbbb
or
mov
push
popf
loopne
pop
scas
test
sbb
dec
aam
ss
mov
incb
cmc
pop
leave
icebp
lcall
xchg
stos
add
push
ja
popa
repnz
pop
push
or
or
loop
dec
sahf
sub
jmp
arpl
adcb
pop
ljmp
cltd
mov
sbb
push
push
notb
add
add
xor
in
insb
in
dec
xlat
enter
cld
adc
repz
pop
pop
or
mov
xchg
sahf
cs
lods
mov
std
shrl
enter
icebp
sahf
sarb
not
or
inc
push
dec
mov
jnp
sbb
in
mov
call
jmp
pop
fistpl
sarl
lea
jbe
push
js
or
pop
push
push
dec
stos
adc
mov
nop
das
add
jo,pn
in
mov
or
lods
xor
jne
xchg
sbb
test
shlb
adc
mov
cmc
iret
in
gs
sub
loope
add
out
push
movsb
scas
and
lret
mov
push
mov
fsubs
sbb
outsl
movsl
into
add
idivb
cmp
stc
push
and
mov
divl
xchg
push
fbld
inc
pop
test
loope
adc
jne
insb
mov
cmc
les
and
pop
push
cmc
scas
jne
call
sbb
lahf
shrb
clc
mov
repz
outsb
cmp
adc
arpl
popfw
test
loop
mov
outsb
adc
stos
bound
mov
stos
inc
inc
push
aaa
pop
lock
imul
xor
sub
sbb
cwtl
mov
bound
insb
sub
faddl
add
jb
scas
lods
cs
lret
sub
push
repnz
or
pop
sub
sbb
jnp
mov
mov
jle
lock
xor
xor
popf
ss
inc
notl
insl
pop
push
daa
mov
jno
sub
adc
fisubs
mov
lahf
dec
add
int
mov
aad
push
test
lds
insb
cmp
jmp
push
fwait
mov
sbb
push
add
enter
xchg
in
negl
push
mov
jmp
andl
out
jle
cmp
xor
out
push
scas
or
std
jmpw
mov
test
ljmp
incl
cli
in
movsl
sahf
icebp
dec
inc
adc
sub
mov
fwait
pushf
xor
sbb
out
test
lock
stos
push
xor
or
das
fsubrp
sarl
in
mov
leave
imul
cmc
bound
jb
xor
je
dec
shrl
or
dec
xchg
mov
lcall
lret
mov
ds
loopne
testb
sbb
mov
jp
mov
pop
pop
and
jne
mov
icebp
and
mov
lret
sbb
fimuls
and
jne
incb
iret
subl
int3
ljmp
and
cwtl
or
arpl
loop
jle
loope
jg
jne
icebp
inc
xchg
jmp
lea
cmpsl
sub
jnp
stos
cmp
lods
mov
lahf
cmc
cmc
mov
push
je
push
jp
scas
scas
dec
arpl
adc
insb
pop
jno
or
cmpsl
mov
aaa
push
aad
pusha
xchg
lret
dec
add
push
leave
cmp
mov
outsb
mov
cmpsb
loop
xor
daa
sbb
int
and
add
ret
jae
cli
test
sbb
sub
faddl
fistl
enter
pop
jl
inc
lahf
lcall
dec
into
push
outsl
adc
jecxz
stc
arpl
ror
jmp
divb
loope
incb
dec
in
hlt
and
lds
push
or
jns
jns
scas
mov
and
and
fadd
fxch
pop
aad
shrl
orb
adc
js
xchg
lret
xor
ss
jno
pop
fldcw
mov
loopne
inc
jnp
dec
mov
ret
pop
stos
hlt
cli
cmpsb
shll
fisubrl
push
icebp
lret
clc
mov
and
sub
dec
jge
mov
ljmp
pop
pop
push
call
mov
dec
pop
sub
cmp
xchg
mov
fistpl
jle
xchg
cmp
lds
inc
push
mov
jl
loop
xchg
mov
fsubrl
lcall
mov
fcoml
ja
and
adc
popf
loope
mov
lock
shll
and
outsl
dec
push
xchg
xor
xor
pop
gs
dec
ja
mov
mov
rcrb
xor
hlt
dec
jbe
icebp
dec
movsl
pop
mov
ljmp
ret
adc
xchg
movsl
xchg
jo
cmc
mov
push
dec
jg
jp
jp
lods
mov
and
test
push
dec
shlb
adc
cltd
push
sub
fwait
out
loopne
shl
dec
add
out
xchg
aas
arpl
mov
insl
hlt
loop
loopne
in
fisubl
fisttpll
imul
dec
out
ljmp
jp
scas
fidivs
and
pop
jecxz
pop
nop
cmp
mov
cwtl
mov
sbb
orl
mov
inc
add
sub
add
test
in
movsb
and
arpl
sub
ljmp
xor
xchg
shl
popf
inc
jb
pop
les
dec
xlat
das
jmp
ret
sub
loopne
jae
mov
sbb
in
ja
pop
cmp
mov
push
stos
jbe
jo
and
push
adc
add
idiv
inc
mov
pop
adc
pop
cli
mov
mov
push
roll
push
fcom
push
sub
iret
scas
leave
icebp
jle
jmp
mov
loope
repnz
ud1
fisubrs
ljmp
nop
movsb
outsl
and
enter
addr16
mov
adc
jg
cmp
pusha
dec
jno
ds
mov
xor
scas
stos
lahf
outsb
pop
push
or
test
sti
sub
and
lret
fidivs
add
enter
adc
ljmp
jmp
inc
push
mov
push
xor
fildll
xchg
test
and
lods
xor
sbb
mov
int
nop
fistpl
or
jns
stos
mov
jle
rclb
outsl
sub
test
addl
in
xchg
lods
into
xchg
popa
add
sub
stc
je
push
xor
scas
inc
mov
sbb
jmp
shl
aaa
cmpsb
mov
push
xchg
or
scas
push
scas
push
jle
mov
loop,pt
ret
leave
sbb
xchg
jg
lret
sarl
jl
mov
cmc
imul
add
lea
inc
jne
bt
dec
add
int
addl
xchg
jg
outsb
and
push
xor
pop
adc
inc
mov
sub
fnsave
and
iret
mov
mov
xlat
in
sarb
jb
inc
das
mov
jmp
xlat
std
repz
dec
xor
push
fsubrs
lods
or
or
lcall
lods
test
cmp
aam
leave
push
mov
into
mov
mov
mov
jl
lcall
mov
push
int3
fisttpl
fisubrs
cli
inc
dec
sarb
mov
enter
add
fwait
xchg
fsubrp
sub
lcall
and
cmpsl
mov
xchg
mov
lock
push
adc
cwtl
jb
and
out
cmp
sbb
out
cmp
data16
mov
sub
cmpsb
and
aam
das
jl
xor
push
mov
add
out
jne
xchg
pop
and
add
lock
mov
adc
cltd
inc
mov
mov
sbb
movsl
push
mov
inc
shll
xchg
mov
aas
mov
add
loope
and
test
inc
jns
dec
jo
ss
xchg
pop
xor
mov
jmp
inc
stos
or
sub
cmpsl
enter
scas
ljmp
insb
xchg
jle
inc
jmp
add
add
into
dec
pop
adc
xor
inc
add
dec
fstps
jno
sub
cmp
mov
mov
out
fidivrs
nop
incl
cmp
rcrb
lods
mov
dec
adc
cld
xor
pop
pop
jo
adc
pop
shlb
loopne
xchg
loopne
pop
mov
jo
dec
scas
pop
in
rol
loopne
xchg
lds
les
insl
stos
jp,pt
in
fimull
xchg
adc
rcr
test
sbb
sbb
xor
lret
jmp
popa
adc
add
inc
popf
sbb
cmp
pop
lahf
add
jp
hlt
jp
outsb
enter
aam
mov
fiaddl
lahf
pop
mov
push
pop
fwait
popf
gs
mov
ret
fwait
clc
into
ss
push
pushf
jle
fabs
add
loope
push
xlat
xchg
cwtl
movsb
data16
and
fcomip
fdivl
mov
ret
mov
push
shrb
outsb
xor
lcall
and
cmp
sbb
mov
and
gs
mov
adc
push
xchg
mov
mov
and
jno
pop
push
push
arpl
push
es
adc
cmp
pop
inc
push
mov
shll
aaa
test
insb
cmp
mov
imul
out
pop
sub
push
xor
push
push
cs
and
cli
cld
lret
rorb
mov
movsb
scas
jo,pt
roll
fwait
adc
fisubrl
inc
xchg
js
sub
cmp
mov
rorl
or
sahf
nop
in
loopne
insb
jl
xchg
adc
pop
jle
stos
xchg
movsl
outsb
iret
int
pop
mov
arpl
jg
mov
aas
jo
popf
adc
mov
subb
fildl
enter
outsl
mov
into
cmp
mov
js
and
mov
cmc
imul
lods
loop
and
into
imul
push
in
adc
pop
push
and
testl
scas
imul
dec
adc
sbb
xchg
jo
test
pop
jnp
adc
loop
lods
xchg
lcall
cmpsb
aas
aad
jge
popl
jae
std
add
lahf
test
cs
scas
or
enter
clc
mov
sbb
pop
int3
popa
call
jno
xchg
sub
iret
mov
int3
dec
out
ret
into
xchg
ja
pop
mov
iret
dec
pop
jb
dec
mov
or
test
add
es
repnz
add
sbb
mov
jae
jl
mov
and
movsb
adc
mov
out
lahf
xor
es
cli
test
add
pushf
inc
mov
ds
cmp
xchg
cltd
jne
xchg
xor
test
or
lahf
add
mov
sbb
nop
fmuls
in
xchg
lret
jmp
adc
stos
ja
pop
loop
in
scas
out
imul
add
mov
lock
mov
cltd
nop
bound
xor
incb
xlat
xor
les
pop
repnz
pop
ret
sarl
cmc
mov
mov
bound
mov
jle
mov
stos
imul
mov
out
pop
and
jg,pn
xor
xlat
add
fidivrs
stc
cltd
and
adc
outsb
push
mov
push
pushf
pop
sbb
std
dec
sub
mov
dec
cmpsb
mov
in
shr
xor
push
or
pop
mov
sbb
jp
jnp
push
mov
outsb
lods
xor
dec
add
cmp
movsb
lock
xchg
mov
cli
ljmp
movsb
in
loopw
jecxz
lret
or
mov
cmc
inc
mov
cmpsb
or
pop
xor
inc
jo
inc
rcl
ss
lods
xor
xchg
dec
maskmovq
mull
mov
pop
aam
scas
push
jo
test
xchg
fadds
cmc
jnp
mov
push
fstpl
fs
pop
shll
mov
add
ftst
add
ret
jno
lcall
or
jge
pop
jo
xchg
mov
les
inc
aas
popl
mov
enter
orb
shl
jbe
push
dec
mov
and
xor
jo
js
sbb
jg
ucomiss
pop
xchg
mov
push
out
aad
lds
pop
nop
je
jg
adc
or
jno
pop
enter
pop
sub
cmpsb
test
lcall
adc
lret
adc
cmp
mov
jo
jbe
push
loope
add
jnp
out
aaa
mov
xor
and
jge
add
pop
adc
repz
or
mov
jbe
pusha
test
mov
push
dec
push
push
inc
adc
int3
orb
insl
sub
jo
and
jmp
pop
jnp
inc
into
lock
dec
mov
stc
pop
xlat
inc
mov
roll
sbb
sbb
sbb
adc
and
int
adc
push
ret
cmp
stos
pop
aam
stos
movsl
adc
xchg
xor
pop
pop
dec
sar
out
mov
insb
nop
cmp
add
pop
out
mov
packssdw
fistpl
mov
and
mov
aad
stos
push
add
adc
imul
fadd
pop
mov
stc
sti
aas
and
ret
sub
mov
adc
cli
shl
cli
or
in
iret
xchg
mov
adc
les
cmp
aaa
add
lods
jo
xlat
sub
das
and
mov
push
and
lds
inc
scas
sub
push
xor
and
nop
or
stos
movsl
scas
aad
test
movsb
jnp
sarb
mov
push
jg
sbb
xorl
cmpsb
fstl
add
imul
inc
jge
mov
iret
add
loop
push
lods
xor
sub
adc
aad
push
outsb
cmp
out
js
adc
bnd
push
lods
or
aad
sub
cmpsb
jecxz
mov
bound
lock
push
push
pop
adc
jp
aaa
mov
cltd
orl
hlt
mulb
push
mov
xor
out
inc
sub
shlb
xchg
dec
add
outsb
loope
or
shll
mov
xor
jecxz
push
add
cmpsl
mov
sbb
in
dec
lret
dec
or
push
cmp
imul
mov
inc
scas
adc
inc
les
iret
imull
dec
jle
xchg
pop
cmp
aaa
or
xor
dec
stos
fidivrl
xchg
push
out
loope
pop
push
inc
out
xor
mov
and
push
int
in
inc
scas
ja
lcall
das
andl
je
sarb
cld
push
cmp
lcall
data16
pusha
loop
bound
ret
mov
insb
cwtl
adc
lds
addb
xor
mov
xchg
inc
fwait
ja
movsb
adc
in
inc
fisttpl
inc
xor
mov
or
insb
add
pop
loop
outsl
mov
add
mov
cmc
push
ffreep
dec
sbb
sub
movl
pop
jecxz
sub
dec
mov
test
push
aas
xchg
fs
sti
xorl
or
shlb
rorb
xchg
sub
jl
adc
push
fwait
incb
pop
popa
out
mov
inc
jmp
push
fwait
stos
sbb
dec
bound
dec
test
and
stos
in
xor
test
push
mov
mov
inc
fcomps
xor
mov
sub
or
adc
dec
mov
cmp
cmpl
popa
dec
pop
xchg
cmpsb
cmpsb
dec
sub
rclb
or
stos
ss
mov
adc
icebp
filds
pop
push
lcall
loop
add
mov
and
xchg
inc
test
inc
pop
or
out
arpl
or
xchg
fildl
xchg
scas
inc
xchg
inc
lret
mov
or
adc
cld
push
xchg
pop
or
xchg
out
testb
sub
mov
out
dec
out
sbb
jecxz
xchg
ljmp
fbstp
fdivrp
sub
arpl
loopne
iret
dec
bound
rcll
jnp
lock
dec
jge
xchg
es
loope
mov
push
fnstsw
rcrb
or
adc
call
push
adc
cltd
stos
add
ret
sahf
lret
inc
mov
es
and
popf
aaa
das
lds
movsl
in
mov
adc
lahf
add
xchg
inc
sub
push
es
push
stos
lahf
ja
cmc
jl
scas
push
ret
sub
mov
push
push
cmp
mov
pop
dec
push
movsb
dec
xchg
and
imul
test
pop
mov
mov
push
mov
pop
xor
dec
pop
lea
cmpb
cmp
inc
fadd
and
imul
xchg
out
pop
cwtd
sub
outsb
push
sbb
std
jp
sub
sarl
lret
sar
mov
out
push
inc
lcall
lods
mov
dec
sub
aaa
test
pop
aam
clc
pop
xchg
mov
xchg
and
dec
adc
clc
or
push
mov
test
xor
test
pop
outsl
add
rolb
jb
fnsave
inc
cmp
gs
push
adc
inc
jo
sub
out
cmpsb
pop
pop
scas
xchg
ljmp
inc
enter
mov
in
cli
ret
dec
stc
add
jecxz
xor
fsubl
out
cmp
dec
ja
xchg
mov
mov
fists
sbb
lret
es
add
dec
sbb
sub
iret
test
mov
aas
jmp
scas
arpl
add
inc
pop
movsb
rcrb
mov
mov
hlt
arpl
and
add
jns
cmp
mov
in
push
or
outsb
or
lcall
jo
daa
in
pusha
gs
cmp
outsb
mov
ret
aam
shlb
xor
popf
xor
xchg
sbb
xor
cltd
dec
lods
mov
es
fcomps
mov
add
add
nop
stc
pop
lods
ja
imul
bound
out
push
shr
xor
loopne
add
shrl
out
mov
push
test
push
repz
repnz
dec
bound
push
inc
lret
mull
jecxz
push
into
sub
pop
test
bnd
in
xchg
loope
stos
int
mov
rep
push
data16
mov
xor
push
fistl
mov
into
xor
lds
ljmp
xchg
push
jg
jecxz
jb
lret
or
testl
pushf
push
call
pop
int
mov
jecxz
es
push
inc
enter
xor
add
jl
ret
mov
dec
sub
or
xorl
ret
sub
push
or
in
mov
stc
xor
ljmp
sbb
fwait
or
mov
fstp
sbb
lods
mov
fistpll
stos
mov
mul
fldenv
shrl
sub
movsl
add
or
ss
inc
inc
filds
out
insl
popf
fmull
aaa
iret
iret
and
adc
jge
rcrl
add
add
fimuls
pop
les
sbb
daa
sbb
int3
adc
movsb
es
pushl
std
sub
out
mov
or
idivl
lock
add
mov
sub
adc
cmp
les
in
jg
out
test
and
cwtl
inc
mov
push
pop
or
out
dec
popf
fdivl
pusha
cwtl
dec
jns
xor
lock
cld
insb
jl
loopne
add
stc
cmpsb
add
mov
and
cmp
push
jno
jecxz
mov
shlb
repz
pop
dec
loopne
rcll
xor
cmpl
ss
out
lret
dec
push
sub
scas
jns
lret
loope
loope
mov
and
leave
divl
dec
push
gs
ds
addr16
in
xor
ficompl
mov
ret
loope
jno
fcmovnu
mov
lcall
rcrl
sahf
sti
adc
mov
aas
cltd
pop
cmpsl
aas
nop
scas
aam
sarl
test
cmp
hlt
add
sub
sti
enter
inc
rclb
mov
mov
push
and
loope
nop
test
and
adcl
insl
fcmovnb
xchg
ja
cmpsb
fildll
shrb
inc
bound
shrl
inc
push
ss
xchg
out
add
push
or
movsb
outsl
mov
test
jmp
pop
dec
nop
inc
mov
and
sbb
sub
jge
std
xchg
push
jmp
or
push
jl
aad
aad
pop
loope
gs
fidivl
mov
ret
not
fsubrp
daa
or
or
mov
fisubrl
cmpsl
inc
mov
jl
je
ret
lods
adc
xchg
sar
sbb
pusha
push
das
enter
cmp
inc
mov
sub
and
mov
out
in
mov
out
inc
test
cmp
das
inc
jae
adc
lods
data16
push
mov
cmp
adc
mov
fwait
inc
and
pushf
sbb
jnp
or
inc
adc
imul
lds
mov
sbb
pop
sub
pop
mov
sarb
pop
dec
lret
sbb
jmp
aad
std
pop
pop
xor
test
and
jle
dec
add
jno
insl
int
or
xlat
add
mov
mov
pushf
or
jnp
add
xchg
jge
push
mov
sbbb
fadds
out
or
fcomip
push
hlt
mov
ret
mov
rcll
int
and
mov
in
lods
shl
lock
mov
mov
sbb
sbb
jae
mov
dec
push
cmp
fwait
cmp
mov
xchg
pop
xchg
jno
shll
cmpsb
sub
push
inc
cmc
pusha
xor
cmp
dec
movsl
xchg
test
popf
sbb
icebp
xchg
pop
hlt
fsubrl
lahf
dec
mov
jne
out
push
mov
arpl
inc
mov
add
cmp
loope
data16
push
es
sbb
dec
cmp
mov
in
fidivs
stos
imull
nop
xchg
mov
xchg
push
shrl
jno
mov
push
inc
pop
dec
xchg
in
xchg
insl
sarl
stos
add
ljmp
cltd
and
iret
pop
fbld
fnstenv
jl
cli
out
sbb
insb
push
mov
fstps
data16
mov
or
outsl
cmpsl
std
cmpsb
test
adc
pushf
adc
pop
xor
repnz
ja
in
addr16
jle
outsb
scas
and
mov
aam
jp
cmp
pop
fimull
lods
jno
out
dec
dec
jae
pushf
fistpll
and
fmulp
jnp,pn
adcl
or
mov
pushl
lret
xor
pop
pop
cmp
dec
movsl
cmp
add
sti
lods
mov
aaa
mov
in
insb
jae
adc
iret
icebp
rolb
in
cmp
fsts
cmpb
mov
jb
in
out
push
imul
mov
xor
incl
icebp
mov
pushf
outsl
push
fcoms
aad
jg
inc
pusha
jg
pop
push
jns
movsb
jb
rcll
ja
jno
incl
dec
addr16
jbe
fisubl
movsl
addr16
sub
fcoms
cmp
xor
aam
sub
mov
mov
and
rcll
add
fcos
jmp
pop
loope
adc
mov
out
daa
xchg
insl
mov
jp
negb
or
jno
rol
imul
push
sub
mov
popa
int3
in
lods
and
sub
or
addr16
fiadds
gs
mov
lds
insl
mov
add
aas
and
and
mov
in
arpl
icebp
sbb
push
xchg
xorl
cltd
outsl
xor
stos
out
adc
cmp
xchg
cld
orl
adc
cwtl
mov
call
test
mov
inc
xrelease
lea
das
push
popf
mov
inc
dec
fimuls
in
mov
fisubrs
icebp
sub
jne
shll
insl
xchg
lret
scas
cmp
out
pop
or
jno
es
rolb
fnstcw
test
push
rorb
fisttpll
movsb
pushf
hlt
dec
dec
stos
in
int3
enter
pminsw
xlat
mov
pop
gs
jno
jnp
xor
mov
jae
lret
aas
stc
fnstsw
mov
xchg
mov
push
cmp
inc
aam
jecxz
adcb
ret
test
aaa
mov
push
cmp
pop
mov
mov
mov
cmp
sbb
fisttpll
xor
sbb
orl
hlt
lods
jns
or
aad
mov
pop
sti
and
mov
cld
stos
jp
push
or
sti
xchg
outsl
es
jbe
cmp
xbegin
in
sbb
mov
ret
daa
cmc
decl
dec
jo
mov
push
filds
test
decb
mov
in
mov
rorl
pop
das
mov
cmp
movsl
mov
push
push
jle
aas
and
inc
outsl
xor
mov
jle
popa
mov
mov
ja
out
dec
lods
sti
test
icebp
sahf
das
sub
mov
pop
xor
fcoml
sbb
and
enter
jl
push
inc
add
xor
ror
hlt
ja
cmp
jl
jo
adcb
ljmp
jle
sti
mov
leave
int
dec
ljmp
ret
jecxz
or
cmp
push
inc
fucomip
pop
dec
xor
and
out
push
mov
repz
ss
es
push
inc
push
pop
daa
adc
dec
icebp
aaa
lcall
and
pop
lahf
pop
addb
sahf
pop
pop
mov
sub
push
xor
shlb
push
and
fwait
mov
add
cli
out
imul
test
mov
je
test
jl
jno
and
sbb
mov
pop
leave
sbbb
ss
out
push
incb
push
or
sti
cmp
aas
pop
les
push
sarb
nop
in
ret
xor
cmp
add
fadd
repnz
mov
push
mov
push
pushf
jge
inc
mov
jae
or
adc
sbb
push
sbb
lock
cmp
push
cli
push
pop
sarb
mov
sbb
pop
xchg
push
arpl
xchg
ficoms
mov
ljmp
push
adc
rolb
aam
xor
jmp
aas
ds
jge
jnp
mov
test
fadds
xor
pushf
test
incl
test
ret
cwtl
mov
sbb
push
je
out
push
ret
mov
test
push
fiaddl
mov
jge
adc
xchg
in
dec
push
pop
pop
xchg
mov
in
jmp
push
or
shl
aad
cmp
rclb
ljmp
cli
mov
cmp
jg
test
push
jecxz
xchg
jle
out
dec
insl
cmp
sarb
lahf
mov
inc
jg
or
sti
stos
jge
js
iret
dec
out
insl
and
int3
xchg
imul
jb
jo
inc
pop
aaa
cld
adc
sub
bound
aam
mov
pop
in
add
sub
test
popf
push
mov
shrb
test
xchg
jle
das
dec
lods
scas
mov
je
or
jmp
jmp
pop
pop
push
xchg
inc
xor
dec
dec
lock
les
pop
arpl
ss
cmpsb
ds
aaa
cltd
daa
je
sub
cltd
add
ja
test
idivl
xor
dec
mov
leave
arpl
xchg
mov
add
je
mov
jbe
or
mov
addr16
iret
sbb
pop
dec
test
test
inc
xchg
mov
jo
sub
rcr
jns
cmp
cmp
add
sub
cltd
mov
repnz
pop
rorb
loopne
sti
scas
jo
cltd
mov
sbb
ds
fcompl
movsb
mov
shll
push
loopne
loop
lret
push
push
xchg
daa
lods
lods
xor
loope
dec
fsubs
or
lods
dec
out
pop
adc
push
jns
cmp
and
fwait
gs
lret
enter
loopne
and
rolb
sub
jno
cwtl
cmp
xor
data16
movsl
std
enter
lret
or
ja
pusha
pop
out
jecxz
jns
popf
lahf
jmp
stos
clc
je
in
je
lahf
fwait
pop
stos
xchg
mov
mov
pusha
jnp
jge
inc
and
iret
mov
loop
xor
rclb
jno
sbb
aas
mov
sub
add
pop
out
sub
jnp
mov
sub
sub
mov
or
fpatan
inc
add
inc
lea
cli
mov
aad
scas
xchg
add
test
repz
lahf
ret
aam
add
scas
xchg
sbb
neg
cwtl
pop
icebp
pop
fisubl
ds
into
adc
test
mov
push
mov
fbld
cwtl
mov
scas
sub
into
adc
pusha
dec
rorl
mov
adc
jae
mov
popl
or
das
je
enter
push
jb
add
loope
xchg
imulb
fstpl
in
push
adc
inc
push
add
lahf
and
pop
lret
mov
add
inc
xor
lret
ret
in
es
pop
int
loope
les
push
pushf
push
shll
jle
add
in
fldenv
ficomps
lahf
mov
mov
aaa
pop
and
iret
movsl
enter
dec
push
rclb
sub
jno
mov
and
push
int
int3
outsb
in
incl
mov
xlat
cmp
cmc
adc
push
push
jg
jp
js
inc
mov
bnd
jl
fstpl
and
enter
lock
ds
insb
jp
sub
dec
imul
fsts
rol
mov
inc
pushf
dec
cmpsb
or
pop
jl
rcll
adc
inc
lods
pop
orb
movsl
fwait
test
mov
sahf
mov
jge
add
test
dec
repnz
inc
and
cmpsl
mov
inc
jo
xchg
xchg
and
pushf
mov
std
cmpsb
inc
cwtl
inc
mull
inc
shrb
test
stos
cmpsl
inc
mov
and
mov
and
stos
mov
js
pop
mov
stos
pop
mov
lahf
pop
pop
les
mov
dec
mov
mov
call
jge
mov
adc
loope
popf
xor
jo
stos
in
xchg
popf
mov
cmp
cmp
dec
xchg
lods
add
jb
xchg
add
pop
cs
imul
push
repz
mov
insl
jns
xchg
insl
outsl
jg
inc
jo
push
imulb
lds
das
jmp
xor
outsl
push
xor
mov
cmc
pop
icebp
lods
or
cmp
gs
pop
pop
push
insb
stc
stos
xor
push
push
cmp
mov
jbe
lret
xchg
aas
das
cmpsb
push
xchg
jl
popa
inc
je
and
adc
jecxz
or
inc
and
shl
push
js
bound
iret
fisttpl
movsb
xchg
inc
data16
mov
mov
xchg
clc
popf
js
pop
jl
loop
enter
mov
pop
aad
or
int
add
clc
test
dec
sub
in
test
call
xchg
hlt
imul
inc
orb
aaa
adc
mov
xor
outsb
and
sub
mov
mov
adc
dec
mov
jp
or
das
mov
es
movsl
ja
push
adc
mov
sbb
js
out
fists
ja
mov
push
add
sti
subl
ret
dec
dec
xchg
lahf
push
adc
fadds
jns
arpl
int
mov
push
addb
pop
mov
push
orl
pop
jge
sbb
ds
xor
mov
jge,pn
fnsave
in
sbb
add
pop
sub
nop
jo
xor
and
repnz
mov
add
cmp
iret
das
aaa
dec
arpl
enter
in
push
sub
sti
sahf
aad
cmp
fcomps
notb
inc
loop
jbe
in
fists
adc
pop
sbb
mov
sbb
outsb
pop
jg
mull
dec
add
mov
pusha
dec
cmp
jg
lea
out
push
sbb
cwtl
outsb
jnp
jne
push
pop
xor
push
sahf
call
loopne
iret
mov
out
adcb
push
sbb
mov
add
dec
ret
cli
mov
fs
cmpl
hlt
shlb
testb
dec
mov
mov
jcxz
shl
jecxz
scas
mov
test
xchg
outsl
outsl
sbb
xchg
sub
adc
push
xor
jb
mov
popf
lea
inc
fidivrl
int3
mov
dec
mov
dec
xchg
push
dec
jmp
pusha
dec
in
lahf
pusha
xchg
outsb
addr16
test
mov
pop
mov
dec
pop
iret
and
imul
mov
xchg
aaa
pop
les
leave
xchg
lods
cmp
jae
repnz
sub
and
test
les
push
push
mov
es
divb
adc
subb
jmp
mov
or
xchg
fsubs
rcrb
push
xorb
cmp
gs
mov
jl
addr16
int3
leave
mov
mov
cmp
pop
fidivrl
jns
inc
cmp
ret
xor
ss
inc
cwtl
icebp
mov
xchg
ljmp
add
lods
sub
out
cwtl
pop
out
sub
push
xor
ja
jp
stc
fists
stos
lds
dec
stos
xorl
flds
mov
and
daa
cmc
xchg
std
jle
fstl
ss
adc
xor
and
ds
fisubl
in
shll
push
xchg
mov
movsl
mov
hlt
dec
icebp
mov
test
fwait
or
cmpsl
or
adc
lret
ss
mov
push
in
stos
xchg
out
js
nop
cmp
cmp
call
test
in
mov
mov
fsubs
enter
aad
pop
pop
cmp
and
in
xchg
lea
push
xlat
int3
out
jns
jne
sub
mov
flds
mov
jae
and
sbb
aas
mov
sub
stc
push
int3
or
jo
jp
fcoml
movsl
movsb
les
repnz
mov
cmp
dec
cmpsl
or
mov
dec
push
sub
pop
dec
lods
xchg
cmp
sbb
mull
and
pop
shlb
lods
push
xchg
aas
jmp
stos
xor
xchg
push
aas
jg
fwait
mov
popf
add
xlat
imul
jle
jge
add
jle
movsb
jg
add
mov
cli
xchg
mov
pop
mov
pop
decb
inc
fcmovb
or
sar
pop
shlb
cmpsb
sbb
jne
js
insl
imulb
call
or
call
test
mov
les
movsb
lods
call
arpl
fsubrl
adc
iret
sub
mov
lods
cmpl
xor
add
jno
popf
xchg
push
and
xchg
les
dec
lret
and
cltd
dec
xor
loop
xor
mov
scas
mov
xchg
mov
stos
add
pop
pop
clc
mov
xorb
mov
sbb
lea
mov
shrb
pop
loope
fcomps
ret
xchg
dec
loop
or
add
test
and
ja
sub
stos
fcmove
push
dec
push
ret
push
xchg
sbb
ret
leave
lcall
xchg
push
insb
add
xor
xchg
xor
ret
imul
jl
leave
pop
jecxz
xor
push
int
mov
xchg
hlt
xchg
ret
psraw
mov
jle
cmp
popf
xchg
sub
xor
clc
ljmp
mov
pop
mov
sbb
fldt
pop
mov
lcall
or
mov
mov
cmp
cld
clc
mov
mov
or
sub
jmp
mov
jge
ja
add
jle
pusha
lret
inc
and
sarb
mov
sbb
xchg
movsb
scas
push
pop
mov
adc
lods
xor
dec
push
inc
movsb
ret
adc
cmpsb
push
sub
or
dec
mov
cmp
fistpl
aam
lds
lods
sahf
cmp
inc
imul
and
add
push
and
testb
xor
push
push
sbb
mov
cmpsb
jle
cld
sbb
frstor
out
bound
cmp
neg
ljmp
insb
ds
pop
xor
out
mov
mov
inc
std
mov
test
cmp
xor
xchg
aad
mov
or
inc
sub
sub
out
and
adc
or
inc
fldlg2
sbb
sub
push
xor
shlb
sbb
sahf
shll
cld
js
pop
and
or
icebp
pop
ljmp
and
push
mov
out
movsl
lea
and
clc
sbbb
jp
stos
dec
out
test
loopne
repz
sahf
adc
fsubl
out
add
inc
in
fldl
and
add
ljmp
imul
and
ljmp
ds
cmpsl
add
sbb
sbbl
mov
cmpl
gs
mov
pop
rcrl
fnstenv
pop
bound
xchg
pop
cmp
jp
stos
pop
mov
xor
test
sti
push
sbb
mov
jg
sbb
std
test
std
inc
mov
or
aad
aam
xor
fisttps
cmp
xchg
sbb
roll
mov
icebp
jbe
cmc
cwtl
adc
mov
into
push
mov
push
cli
mov
out
xchg
icebp
mov
loope
cmp
faddp
insb
cmpsl
shrb
xor
jecxz
es
out
popf
in
push
inc
or
std
stos
repnz
pop
push
dec
and
mov
je
scas
data16
dec
in
xchg
pop
or
roll
push
es
int3
cmp
nop
std
pop
ret
popa
aam
imul
data16
or
rorb
adc
sub
fdivrs
in
xchg
add
aad
adc
test
cltd
mov
mov
xor
mov
push
sub
andb
or
push
sarb
mov
xchg
push
xchg
cld
or
aad
pop
mov
xchg
fwait
sarl
xor
std
sbb
testb
sbb
jmp
movsb
pop
shll
push
les
or
inc
in
adc
mov
into
icebp
cmc
addl
iret
js
xchg
ficompl
popf
xchg
ret
ljmp
xchg
and
mov
pop
sub
mov
repnz
add
ja
je
insb
sub
xor
dec
mov
pop
sbb
jne
and
cmpsl
mov
pop
ss
cmp
shl
cmpsl
gs
mov
lds
mov
lcall
cmpsl
pop
xchg
shl
inc
jne
xchg
xchg
cld
mov
mov
cmp
je
cmpsl
add
in
jge
es
and
fwait
adc
adc
inc
add
add
push
xchg
jnp
loope
push
pop
mov
cmp
shrl
in
int
das
cli
mov
jg
fsubrs
in
test
aam
test
sub
mov
push
addr16
stos
push
test
scas
test
xchg
sbbl
jb
mov
nop
pop
data16
mov
shrb
loopne
and
in
push
add
divb
and
std
loop
out
lahf
pusha
cld
shr
xchg
je
std
in
mov
add
int3
out
aad
cwtl
hlt
lods
pop
out
xor
pop
cmc
adc
stos
int
fcomps
xchg
dec
sub
call
pusha
dec
rcrb
test
test
jb
in
pop
pop
outsb
cmp
sbb
add
mov
les
push
enter
lods
out
or
dec
jno
push
dec
in
rclb
xchg
push
es
into
cmp
mov
lret
insl
je
lock
out
sbb
pop
daa
or
sub
xor
imul
rcrl
and
das
leave
test
mov
push
and
fmul
mov
int
push
xchg
cmp
pusha
inc
xchg
ret
xor
insl
gs
arpl
and
cmp
int
inc
popa
fisubrs
xchg
loop
dec
mov
xchg
mov
push
out
cltd
pop
imulb
mov
cli
imul
jnp
sahf
sbb
das
jno
loop
mov
js
push
or
mov
clc
push
push
outsl
sar
push
fldl
idivb
sahf
mov
pop
jne
jnp
aaa
fstpt
sbb
inc
mov
pop
popa
addr16
ds
dec
shrl
mov
inc
fsts
push
movsl
lcall
push
and
cmp
mov
jae
push
adc
idivb
aaa
gs
mov
mov
mov
lea
test
into
xor
xor
cltd
mov
jmp
leave
push
sub
lea
fidivs
pushaw
xchg
ret
jg
repnz
test
cmp
xchg
sub
cwtl
xchg
jl
jns
nop
cmpsb
dec
cmc
pop
lcall
pop
cmp
sbb
adc
cli
add
movb
cltd
mov
icebp
push
movsl
aaa
xchg
sub
in
scas
cmc
push
data16
subb
fidivrl
incl
inc
or
mov
imul
inc
sub
insl
add
inc
outsb
in
dec
arpl
test
inc
xchg
sub
ud2
jmp
out
xchg
sbb
je
gs
sub
and
out
pop
dec
adc
aaa
cli
das
cmp
fisubrs
xor
aam
dec
pusha
xchg
cmp
pop
xchg
sub
add
movsb
std
mov
in
imul
mov
mov
das
xchg
popf
sbb
mov
mov
cmp
fwait
int
push
xchg
outsb
pop
pusha
imul
and
mov
clc
test
mov
rcr
jg
cli
sub
adc
xchg
leave
or
das
jl
ffree
pop
sbb
adc
fmull
cmp
pop
lcall
xor
call
lret
addr16
adc
xchg
test
adc
mov
js
scas
push
cmpxchg
sbb
das
inc
lock
adc
or
lods
inc
inc
fcmovnb
test
std
rorb
loope
clc
jg
adc
pop
dec
push
mov
mov
lcall
loope
hlt
and
imul
popa
imul
xor
mov
test
repnz
sub
stos
pop
sub
mov
in
daa
hlt
mov
and
jbe
dec
sahf
insl
add
aad
test
push
movsl
sub
test
xchg
xchg
std
jo
iret
adcl
insl
insl
dec
mov
popf
clc
inc
adc
adc
scas
lods
cwtl
out
or
push
sub
and
fsubr
mov
shll
push
sub
aam
data16
sbb
cwtl
sbb
push
sti
fists
xor
aam
loopne
sahf
or
arpl
lret
mov
frstor
std
cld
sti
rolb
aaa
push
cmc
fidivl
jnp
pop
and
jb
xchg
mov
mov
pop
mov
in
push
outsb
nop
inc
roll
int3
mov
gs
rcrl
mov
pushf
jno
dec
sbb
sub
pusha
testb
xchg
in
mov
lods
leave
mov
mov
mov
pushf
and
daa
pop
inc
outsb
test
std
movsb
cli
mov
and
icebp
fisubl
pop
dec
xchg
rorl
icebp
mov
imull
mov
mov
lret
int
push
imul
jl
ret
cmp
scas
lods
fldl
sub
pop
jmp
mov
push
out
cmp
out
es
sub
pop
rorl
lea
lock
movsb
mov
and
jne
aam
cmp
frstor
sub
sbb
dec
pop
add
mov
jbe
aas
mov
leave
frstor
mov
in
lods
mov
das
movsb
mov
roll
xchg
lds
testb
mov
addl
cmpsl
shlb
jns
mov
lcall
mov
mov
pop
fildl
sub
or
lcall
mov
shrb
mov
outsl
dec
jp
mov
sub
outsb
or
or
fisubs
pop
inc
push
mov
outsb
xchg
mov
scas
mov
mov
mov
push
ffreep
insl
inc
repnz
mov
mov
or
dec
repz
xchg
add
push
xor
or
mov
cmpsl
std
mov
adc
lea
adc
addr16
je
arpl
jnp
call
adc
roll
out
cmp
inc
or
jmp
sbb
fidivrs
daa
aas
jl
or
mov
sbbl
inc
mov
push
mov
notl
sub
add
ja
fs
daa
imul
xchg
pushf
sarl
in
mov
sub
xchg
dec
jns
sub
jno
rorl
movsb
cmpsb
vshufps
mov
mov
xchg
xor
cmp
or
mov
in
loope
lods
stos
xor
sahf
adc
loope
pop
mov
bound
ret
jmp
shl
dec
sub
pushf
mov
clc
dec
or
add
xchg
push
adc
push
lcall
int
inc
cli
sub
ss
jecxz
and
xchg
fwait
inc
cmp
push
test
cmc
adc
push
lock
xchg
mov
mov
push
shl
mov
pop
xchg
scas
push
in
or
leave
sbb
out
mov
daa
jae
push
xor
push
sbb
ja
imul
xor
jnp
stos
sub
sbb
jno
mov
sub
scas
movsb
cmc
xchg
sub
jne
or
jnp
leave
inc
movsl
in
test
push
xchg
sub
pusha
ret
sub
sbb
jle
das
je
shrb
pop
dec
and
jg
adc
inc
in
xor
sub
dec
int3
andb
inc
ficoms
pop
add
das
ljmp
dec
add
xchg
repz
xor
popf
andl
hlt
or
ja
sahf
mov
stos
int3
enter
mov
dec
push
outsl
sub
push
xor
divb
pop
cli
cld
xor
mov
xchg
jne
adc
xchg
fdivs
xor
inc
std
rorl
hlt
push
sbb
xchg
inc
arpl
das
jne
sbb
dec
mov
ja
sub
pop
cmp
pop
and
addl
pusha
add
add
or
add
jnp
or
lahf
cli
test
xchg
adc
daa
lods
add
sub
or
cmp
icebp
mov
xor
sub
psubsw
scas
loop
and
jo
jge
mov
sub
lcall
stos
data16
xor
test
mov
repz
xor
inc
add
xor
jno
lods
dec
loop
mov
das
pop
lahf
lock
mov
mov
pop
sahf
fnop
or
outsl
inc
in
cwtl
sahf
adc
pop
lret
stos
add
mov
std
mov
or
stos
test
inc
adc
imul
xor
push
push
loop
mov
and
mov
popf
pop
aas
mov
mov
xchg
inc
into
push
add
push
inc
std
aad
pop
test
pop
push
loope
test
aad
jecxz
xchg
stos
lock
sub
mov
add
and
ss
adc
xor
cwtl
lahf
fldt
push
fucomip
mov
mov
daa
cs
test
push
sbb
repz
mov
lds
adc
out
xchg
dec
xor
fsubrl
sub
js
sti
stc
mov
jbe
shld
add
cmp
xor
leave
js
lret
inc
jle
mov
sub
mov
dec
call
push
cli
sbb
mov
xor
mov
cli
jo
mov
mov
jecxz
mov
scas
jo
notl
pop
loopne
fs
mov
push
lcall
bound
sbb
add
dec
pop
jmp
sti
xchg
clc
repnz
mov
jle
fiaddl
mov
repz
sub
inc
int3
stc
and
xchg
mov
movsb
sbb
scas
push
test
fs
xchg
idiv
faddl
mov
ljmp
jnp
rorb
adc
sbb
mov
jb
js
add
dec
jmp
popa
loop
adc
mov
adc
adc
out
incb
repnz
notl
or
gs
pop
hlt
jp
por
or
inc
or
sub
loope
iret
mov
dec
sub
and
mov
int
insl
inc
pop
push
cmc
insb
jbe
fiaddl
and
lods
adc
inc
movsl
or
pop
out
les
or
jmp
xor
adc
mov
mull
add
stc
mov
dec
xchg
pop
loopne
ds
aas
push
std
mov
movsb
adc
sarl
sti
adc
pop
cmpsl
arpl
clc
scas
ds
mov
mov
fnsave
lods
mov
xchg
imul
lods
stos
inc
jne
mov
outsl
rcrl
and
pusha
push
and
mov
lea
out
in
sub
xor
aas
ror
pusha
pop
dec
pop
rcll
push
out
mov
insl
cmp
lds
daa
adc
insl
cmp
push
int3
sbb
jg
xchg
push
cmp
pop
add
test
nop
jg
sub
pop
fbld
std
or
clc
jle
out
aam
mov
sbb
xchg
mov
sub
cmc
inc
stos
popf
sbb
movsl
mov
xor
dec
neg
hlt
pop
pop
inc
mov
lea
push
je
cmp
mov
je
outsb
mov
dec
insl
divl
ljmp
add
mov
pop
push
pushf
pop
push
mov
movsb
push
mov
in
notb
or
mov
cld
fistl
xor
inc
inc
mov
push
push
icebp
imul
testb
mov
movsl
fisttps
loop
repnz
seta
or
mov
and
lock
sub
in
rcr
sub
inc
popf
pop
in
push
rcrl
lahf
call
cld
daa
jp
and
jp
jge
fwait
cmpsl
js
fwait
out
cmpsl
movsl
pop
add
adc
xchg
cmp
cmp
dec
testl
dec
movsb
mov
xor
movsb
pop
int
mov
cmpsl
mov
imul
jne
mov
jb
dec
ja
rcll
push
in
clc
mov
out
sbb
addl
scas
push
xor
insl
pop
mov
stos
mov
xor
loop
sub
sahf
es
cmp
lea
add
xor
lret
ja
jno
mov
movsb
jecxz
out
and
cmp
int
stos
test
jb
cmovne
pushf
mov
fwait
popf
fmulp
fcoms
in
adc
dec
pop
popa
and
jns
jecxz
mov
push
in
xchg
leave
add
adcb
mov
sarb
push
test
mov
add
rcr
mov
dec
jae
out
scas
ret
pop
jo
das
pop
sbb
or
test
mov
pop
addl
inc
imul
dec
and
xchg
inc
xor
sbb
add
aas
jbe
movsl
inc
add
movsb
push
push
cld
adc
pop
data16
out
call
mov
pop
scas
loope
addr16
and
jl
adc
pusha
mov
inc
mov
jl
ss
dec
pop
mov
and
sub
rorb
sbb
xchg
xchg
decb
add
add
mov
inc
ret
testl
mov
adc
movsl
xor
ss
xchg
push
push
lcall
inc
out
out
push
or
jl
lds
mov
sahf
popf
pop
jge
mov
cmp
mov
add
scas
aam
sub
mov
cmpsb
lds
lods
movsl
lret
aas
add
adc
cli
repz
inc
insb
mov
aas
jge
mov
repz
adc
cli
jbe
jl
cmc
shrb
adc
xchg
mov
ljmp
push
add
loopne
jmp
aad
and
adc
std
and
imul
loop
or
repz
inc
and
outsb
mov
and
les
adc
lret
xor
loope
xchg
call
sti
cmp
jmp
in
inc
adc
fidivrs
mov
aam
add
mov
push
test
push
and
shlb
jge
push
lret
sbb
lret
push
fucom
pop
out
imul
mov
or
bound
adc
pop
fmulp
ljmp
in
arpl
imul
int
adc
mov
into
test
xchg
ret
cs
jge
push
xor
repz
enter
mov
sbb
xor
shlb
jbe
outsb
fwait
stos
pop
stc
or
xor
mov
xchg
in
mov
jb
mov
pop
int3
stos
xor
push
mov
jle
inc
inc
mov
pop
push
fldt
mov
push
xor
mov
imul
outsl
scas
rorb
sbb
dec
add
add
mov
pop
cmp
repnz
daa
mov
das
mov
test
xor
scas
lahf
pop
mov
pop
xchg
frstor
ss
test
adc
and
hlt
cmp
loope
jno
jg
xchg
cmc
call
popf
mov
jae
in
ljmp
mov
or
imul
pop
test
sbbl
inc
add
out
jl
daa
out
sti
sub
imul
push
mov
xchg
jle
ret
xchg
loop
jae
jae
pushf
ja
xor
sub
mov
test
enter
fdivl
jae
sbb
stos
rcr
ss
jecxz
les
cmp
clc
add
jae,pt
lods
out
fs
pop
lods
cmp
add
movsl
xlat
sbb
add
call
aas
xchg
lea
dec
jno
and
push
clc
arpl
cld
dec
add
fsubrp
adc
mov
in
push
in
pop
cmp
and
jb
add
ljmp
or
rcrb
push
jmp
in
cs
lea
lock
push
xor
sbb
cltd
mov
push
ss
sub
std
in
xor
in
inc
pop
les
fidivrs
inc
jmp
push
add
mov
xor
and
mov
js
mov
cld
add
ljmp
adc
jecxz
int3
xchg
stos
nop
pushf
loope
pop
imul
aas
aam
ja
gs
mov
xor
cmp
xor
inc
cli
lock
mov
aaa
fdivr
or
xor
push
jp
jne
pushf
fisttps
mov
dec
filds
xchg
mov
add
jno
add
rorb
or
jno
xor
nop
jl
je
daa
icebp
mov
movups
sbb
shrl
fadd
test
jns
mov
bound
and
aaa
cmp
push
incl
or
js
leave
out
mov
and
sub
imul
in
xchg
add
or
data16
in
sub
mov
ds
hlt
faddp
jl
repnz
push
insl
rcrb
pop
jl
inc
mov
fwait
xchg
outsb
mov
fistl
jbe
shrb
imul
jl
mov
sub
xlat
enter
dec
pop
adc
sahf
fiaddl
jns
divl
add
push
fiaddl
rolb
aaa
cltd
push
xchg
push
and
fistps
push
adc
add
jno
jg
mov
mov
pop
dec
inc
je
sti
call
dec
and
enter
or
je
div
xchg
push
cld
inc
add
jmp
into
cmc
cmpsl
sbb
mov
fs
adc
and
inc
repz
ficompl
aam
out
orl
xchg
fsqrt
or
mov
dec
ja
jns
aad
mov
stos
daa
ss
mov
fsubp
insb
test
aas
mov
in
add
pop
fisubrl
and
mov
mov
mov
dec
ja
ljmp
and
lock
fwait
ret
lahf
in
mov
xor
jle
cmpsb
sub
jo
popf
fldt
xor
push
sbb
imul
loop
cmp
das
mov
add
adc
lret
inc
mov
sbbb
insl
pop
push
jmp
repz
jbe
popa
repz
cmp
xor
outsl
push
shlb
int
arpl
leave
push
xchg
iret
hlt
xchg
icebp
js
fistpll
mov
jmp
or
jnp
jle
mov
das
adc
les
pop
mov
fistl
decl
mov
lods
dec
inc
inc
adc
sbb
mov
mov
roll
xchg
sbb
arpl
xor
push
xor
mov
stos
xchg
scas
pop
dec
ja
push
push
sub
clc
in
xchg
cltd
imul
mov
xor
pop
daa
sub
ror
insl
in
mov
inc
hlt
subl
mov
inc
pop
sub
pop
fld
iret
jo
das
sbb
repnz
cmp
ja
shll
roll
in
pop
lea
ficompl
insb
ret
push
mov
fildl
xchg
cmp
popa
and
adc
xchg
mov
push
mov
lock
sahf
and
lea
int3
xchg
clc
fnstsw
mov
iret
cmp
testl
dec
pop
in
mov
lods
ljmp
xor
sti
cmp
movsb
testl
and
ret
ljmp
xor
pop
addb
call
jbe
mov
fmuls
orb
adc
cmp
inc
sub
mov
mov
shlb
test
out
dec
js
fs
xchg
jb
addr16
jno
inc
pusha
cmp
imul
sub
adc
loop
out
push
lret
pop
cmpsb
push
and
ds
push
mov
test
andl
add
test
mov
cwtl
inc
ljmp
test
mov
js
adc
adc
test
js
aas
lcall
enter
xor
mov
pop
jbe
popa
xchg
inc
mov
rolb
gs
andl
mov
lds
mov
mov
or
insb
add
sbb
test
ja
cmp
fcmovnu
or
mov
ja
retw
test
mov
or
insl
ret
das
mov
mov
sbb
fstpl
leave
ljmp
jmp
or
sahf
in
cld
xchg
mov
sbb
in
pop
push
test
push
iret
mov
lret
les
fnstcw
pop
pop
test
adc
jecxz
scas
sub
add
js
xchg
mov
ret
ret
adc
inc
roll
movsb
jge
push
mov
adcb
into
xor
mov
icebp
mov
xchg
sbb
inc
xor
mov
imul
sti
mov
cmp
les
mov
cli
jno
push
adc
aam
pop
data16
and
jb
push
ja
xlat
repz
xor
sbb
push
test
or
rcrb
mov
mov
add
ljmp
push
shll
mov
fsubs
jl
mov
push
xor
cmp
call
iret
shlb
jmp
mov
test
dec
cs
insl
loop
add
je
test
pushf
mov
lret
cwtl
andl
push
and
mov
insb
jecxz
fiaddl
cmpsl
ds
in
pushl
cmp
jb
mov
sahf
and
pop
scas
repnz
or
jmp
xchg
popa
adc
aas
lods
sub
test
mov
xchg
pop
inc
jmp
cmp
and
outsl
das
dec
pusha
out
ljmp
inc
sbb
mov
pop
out
dec
inc
xor
inc
dec
aas
xor
mov
bound
in
sarl
sub
xor
sahf
push
cmp
leave
lods
lret
rolb
scas
icebp
iret
dec
mov
hlt
and
jno
xchg
pop
inc
mov
dec
xchg
mov
ret
out
xor
jb
xchg
push
test
jo
add
xchg
pusha
jle
push
sub
jo
lahf
mov
dec
mov
js
or
xor
cmp
pop
not
movsb
loope
movsb
push
jbe
lea
add
jae
aam
out
xor
fisttpl
ret
and
lret
jnp
insl
sub
cmpl
sub
add
test
inc
inc
jnp
push
xor
pusha
pop
lret
test
es
sbb
shlb
inc
dec
clc
mov
pop
sbb
test
lret
jns
mov
and
cmp
xor
rolb
dec
and
sub
cmc
shrl
icebp
and
xchg
cmc
in
mov
fs
adc
jne
mov
push
mov
out
push
shl
xchg
add
dec
cmpsl
pop
xchg
icebp
lea
sub
sti
scas
xchg
add
gs
pop
adc
lret
inc
jnp
mov
push
leave
pop
imul
mov
mov
add
in
sub
andb
adc
sub
lcall
iret
push
int3
lods
jge
pop
int3
sbb
push
enter
cs
aaa
xor
popa
cli
jge
aas
sahf
cmc
adc
in
shlb
mov
lea
neg
sub
pop
test
in
shlb
adc
cmp
outsb
mov
mov
adc
jno
hlt
in
aad
shl
add
xchg
xchg
cvtdq2ps
or
loopne
sub
lcall
cld
jns
xchg
shll
lock
data16
in
pop
js
mov
pop
push
push
insb
int3
xchg
hlt
shlb
push
xor
xchg
adc
mov
les
adc
lods
aam
imul
mov
aam
sub
pushl
sub
inc
in
push
jbe
je
pop
stc
pop
dec
out
mov
arpl
lahf
test
js
ficompl
adc
or
adc
xor
test
xor
rcll
fisubrs
pop
fbstp
adc
mov
into
movsl
and
push
sahf
pop
fidivrl
rcll
xor
fnstenv
xchg
popf
xchg
xchg
mov
pop
cmpsb
imul
nop
and
movl
addr16
push
into
fwait
add
sti
mov
das
or
scas
jbe
add
fisubrl
jge
das
leave
sarl
mov
imul
fstl
push
add
rcrl
cltd
outsl
in
xchg
std
data16
cltd
sbbl
push
fucomip
mov
xchg
jl
jmp
sbb
inc
enter
fldt
mov
mov
sub
mov
ljmp
imul
jno
sbb
ljmp
int3
mov
adc
cwtl
insb
inc
mov
or
pop
das
jo
cs
das
sub
push
mov
jl
add
cmc
lcall
gs
in
popa
popf
sahf
sarl
pushf
fstpt
pop
out
xchg
outsb
inc
pop
ja
mov
push
loope
sbb
daa
fnstcw
inc
mov
sbb
lds
leave
fildl
in
cmpsb
or
movsb
push
push
jmp
cli
lcall
std
jae
scas
cmp
sub
mov
int3
orb
pusha
mov
xchg
mov
stos
xor
pop
xchg
mov
mov
into
inc
int
dec
dec
aas
or
stc
ss
dec
not
fnstsw
pop
mov
movb
in
out
stos
fisubrl
test
pop
loop
mov
or
test
inc
mov
mov
test
mov
movsl
dec
pop
bound
xor
cmc
jle
inc
mov
roll
push
cmp
push
and
loope
lahf
ss
mov
and
insl
clc
xchg
jle
rol
sti
repz
lds
divps
int3
add
ljmp
iret
flds
add
hlt
shll
into
jmp
dec
pmaxsw
mov
pop
lock
cmpsb
scas
ret
pop
inc
icebp
push
xchg
inc
and
mov
repnz
movsb
mov
cmp
sti
add
sub
xlat
cltd
adc
push
or
push
mov
dec
stos
mov
repz
xchg
inc
shlb
pop
inc
mov
pop
ret
push
lret
jae
push
int3
scas
pop
adc
sub
xor
negb
hlt
in
mov
cmp
shll
notl
cwtl
imul
mov
outsl
add
xor
dec
call
std
adc
pop
dec
in
mov
cmc
pop
push
clc
xchg
popa
inc
outsl
sub
movsb
dec
pop
cmp
je
loop
cmc
push
push
outsb
inc
fcomps
cld
mov
xchg
jne
addl
sub
fisttps
aas
push
and
xchg
pop
movb
push
dec
cmpsl
jmp
or
mov
movsl
and
push
add
jbe
sbb
xlat
sbb
movsl
mov
lahf
mov
xchg
mulb
ficompl
mov
pop
cmpsb
jne
outsb
scas
sub
push
mov
sub
mov
xchg
out
sbb
dec
insb
xchg
push
cltd
jb
and
push
test
mov
and
xor
insl
cld
flds
sbb
add
negl
pop
gs
fiaddl
dec
or
or
lock
stos
je
clc
outsb
pop
jbe
aad
jbe
jae
push
aad
aam
mov
xor
push
fcompl
cmp
pop
das
addr16
xchg
out
in
shll
or
push
leave
mov
out
cmp
jnp
jmp
out
cmpsb
lret
mov
dec
push
out
and
dec
mov
test
fisubrl
adc
in
mov
fidivl
jnp
int3
cmp
fld
je
sub
fcmovnbe
push
and
jg
nop
jnp
cmpsl
jbe
sahf
push
xchg
mov
mov
in
pop
pop
rorb
inc
jg
movsb
lret
jp
inc
fxch
dec
sub
push
add
sti
nop
cmp
xchg
scas
jae
cs
jbe
insl
out
clc
sub
ficoml
xor
lds
test
es
ljmp
xchg
out
jno
push
sbb
or
int3
and
xchg
mov
cmp
lock
push
pop
idivb
in
add
pop
sahf
arpl
adc
gs
fsin
cwtl
fstps
sub
push
inc
mov
sahf
insl
dec
std
imul
mov
jae
into
fsubrs
insb
adc
push
jb
cmp
jge
je
es
in
dec
loopne
stc
arpl
xchg
mov
sbb
push
orb
pusha
push
sahf
sbb
add
lods
mov
mov
jo
mov
xchg
pop
addr16
int
in
mov
jl
push
fnsave
jb
mulb
dec
mov
pop
push
jp
div
dec
arpl
lods
mov
sysenter
into
push
sub
cmp
sti
pop
out
clc
pop
push
xchg
ret
mov
xor
mov
lret
cltd
dec
pop
push
or
mov
fs
ret
mov
bound
xlat
cmpsl
push
out
pop
in
hlt
test
sbb
not
faddl
fsts
pop
mov
sub
xchg
xchg
sbbl
subl
or
pop
daa
cmpsb
jns
enter
popf
lods
scas
mov
add
nopl
fmulp
sbb
imul
cmpsb
ljmp
outsl
xchg
icebp
or
clc
fadds
sahf
fnclex
es
ret
imul
push
add
or
addr16
cmpsl
rcr
jmp
cmp
add
xlat
test
push
xor
inc
test
pusha
dec
adc
adc
and
insl
pop
lret
add
fwait
or
ret
jle
mov
addb
nop
neg
xor
push
and
loop
mov
push
mov
clc
cmp
vmaxss
lods
jmp
xlat
iret
jg
add
xor
sbb
rolb
mov
jmp
in
push
xchg
xlat
mov
xor
pop
bound
mov
mov
add
sbb
xchg
into
inc
xchg
les
xor
lea
mov
ret
adc
xchg
fsubs
scas
mov
test
or
frstor
mov
sbb
xchg
stos
jmp
sub
dec
pop
push
mov
pop
or
pop
lock
fildl
add
cmp
rorb
xor
pop
pop
rcr
out
sub
jb
cli
adc
and
je
nop
outsb
mov
pop
das
pop
push
stos
test
or
dec
dec
nop
add
inc
jo
iret
xchg
mov
icebp
out
fsubrs
sub
rcrb
mull
pop
push
dec
mov
xchg
xchg
adc
add
mov
ljmp
and
fs
in
ficoml
push
outsl
lods
cmpsl
ucomiss
insl
push
xor
xor
bswap
mov
pop
sub
lcall
pop
sub
push
nop
imul
push
cmp
xchg
mov
clc
stc
cwtl
dec
mov
popf
mov
les
jecxz
test
cmp
imul
es
flds
push
xchg
jb
icebp
pop
cwtl
xlat
pop
shll
test
inc
jo
scas
dec
pop
notl
ja
jns
mov
loopne
movups
or
xor
addr16
pop
dec
es
data16
rclb
fnop
lods
je
cli
aaa
repnz
mov
sti
jo
ja
rcll
sub
xor
movsl
jle
mov
inc
aas
xor
es
lret
movsb
jp
inc
jo
mov
bound
jo
shl
push
fnstsw
fldl
pop
xlat
xchg
lret
cmpsl
sahf
popa
xchg
xor
aam
jb
ret
outsb
fcomip
push
pop
pop
cli
cmp
lods
inc
dec
loop
addr16
push
adc
cmpb
mov
rcll
mov
jbe
xchg
lods
dec
mov
mov
sbb
sub
aaa
aaa
scas
leave
jle
lcall
ret
in
jns
and
bt
movb
mov
test
and
lret
mov
aam
inc
int3
fisubrl
sub
scas
add
outsb
enter
add
jbe
cld
push
mov
stos
push
adc
loopne
xor
mov
mov
je
je
lock
stc
iret
xor
jp
subb
mov
lds
push
mov
sbb
xor
out
or
pop
ret
daa
cli
sub
pop
jl
das
fs
cmc
jo
cltd
push
sahf
lods
mov
adc
shl
fiadds
out
mov
ret
shll
aaa
shll
xchg
sbbl
push
jbe
mov
addb
aaa
aaa
cltd
xchg
ljmp
add
insb
jmp
push
pushf
push
pop
inc
pop
or
jne
mov
sbb
push
outsb
jnp
fidivl
lds
dec
test
insl
cwtl
pop
fcmovnu
icebp
inc
or
inc
decb
repnz
jo
push
loop
jmp
cmc
imul
imull
push
and
fcoml
add
cmp
ds
sahf
jne
insl
pop
inc
sub
xchg
cmp
xlat
adc
cmp
pop
int
mov
idivb
adc
rorb
mov
jo
ret
notl
sub
dec
adc
incb
mov
push
cs
or
ljmp
movsb
aaa
and
loop
pop
inc
add
jbe
lahf
jnp,pn
push
jmp
aam
rcr
mov
fsubr
das
mov
popa
jp
sub
stos
setb
push
ror
rol
pop
mov
or
popl
lods
adc
sbb
out
add
call
insb
jp
je
jbe
or
and
bnd
imul
push
sbb
testb
and
push
arpl
jp
fstpt
mov
add
xor
outsb
adc
ficoml
pop
xchg
in
in
lret
jg
xchg
xor
sbb
fsub
sti
fs
and
repz
imul
es
or
jno
mov
xor
pusha
adc
lcall
les
jno
push
push
pop
mov
mov
rcrl
cmpsl
mov
fucomp
dec
out
insb
jo
mov
dec
xchg
movsb
icebp
mov
call
scas
dec
adc
or
bound
fdivrs
xchg
ljmp
mov
insb
mov
fldl2t
int3
xor
test
test
mov
les
push
clc
shll
xchg
dec
sbb
xchg
push
dec
jb
add
pop
repnz
lods
ss
jne
imul
add
insl
scas
jbe
push
pop
test
xor
ljmp
stc
mov
mull
aam
jle
cmpsb
jg,pn
sub
adc
movsl
ljmp
repz
inc
cmpsb
iret
push
lret
jbe
aam
jbe
rcrb
mov
and
lret
xchg
sub
or
aam
repnz
and
das
popf
lds
fdivr
sahf
stos
lahf
xchg
xchg
xor
pop
ficoms
loop
push
imul
and
and
testl
jle
insb
mov
rcrb
ss
inc
fisubs
adc
popa
push
jecxz
xchg
dec
in
xor
inc
ret
je
gs
outsb
outsl
xchg
mov
aas
cmpsb
dec
inc
dec
jbe
sub
mov
outsb
loop
lea
aad
add
jg
sbb
movl
fdiv
cmc
or
stos
pusha
jb
push
add
andl
ret
add
cmp
mov
in
mov
dec
stos
adc
aad
adc
adc
mov
jl
mov
ja
cmp
lods
jl
and
dec
popf
push
push
rcrl
mov
out
push
lret
mov
fwait
mov
lods
cltd
push
loopne
add
out
or
daa
sbb
add
rcrb
push
dec
jo
or
rorl
into
test
xor
push
sar
es
pop
test
aam
cmp
mov
addr16
push
inc
ja
jmp
in
dec
int
loopne
xor
addr16
push
inc
sahf
inc
aam
fadds
pushf
and
fistpll
or
or
push
rolb
dec
es
or
rclb
jns
pxor
sbb
sbb
jns
xchg
pop
sbb
push
mov
dec
cmp
jle
stc
pop
es
andl
cmp
jle
in
cld
fbld
push
mov
aas
sbb
int3
mov
ret
push
arpl
and
jl
shrb
dec
inc
inc
out
not
bound
inc
test
daa
xchg
mov
pop
ret
cltd
imul
das
cltd
push
push
pop
outsb
test
adc
jbe
push
rcrl
lret
xor
fisubrl
lcall
jmp
mov
int
push
dec
mov
ret
dec
mov
or
inc
negl
xchg
pusha
mov
sti
int
in
loope
push
ss
mov
pop
not
mov
or
loopne
repnz
mov
mov
push
sbb
insl
leave
and
das
subl
xlat
imul
jg
test
mov
arpl
jae
mov
pushf
jns
lds
sub
jns
insb
mov
repnz
fisttpl
into
jbe
insb
add
out
sti
and
mov
adc
pop
nop
das
cmpsb
adc
xchg
mov
inc
adc
scas
loopne
push
dec
cmc
fidivl
andb
sahf
imul
dec
xchg
sti
fst
call
outsl
out
sti
sub
mov
jnp
inc
js
jg
xchg
inc
sub
scas
xchg
jp
push
mov
incb
inc
mov
fisttpl
xor
in
xor
out
fldcw
int3
fwait
mov
andl
cwtl
sub
and
push
jl
shrb
fimull
pop
push
mov
dec
icebp
or
loop
jg
inc
bsf
pop
orb
jne
inc
jae
jb
mov
xchg
stc
xchg
les
dec
clc
adc
inc
xchg
xorl
daa
and
idivb
sahf
jae
int
rcll
xchg
fimuls
pop
int
cmc
daa
dec
adc
das
aas
fs
mov
mov
sbb
sub
push
es
pop
leave
int
cli
or
stos
movsl
fisttpl
mov
sbb
data16
mov
stc
inc
sbb
add
int3
cmp
rcrl
mov
fldt
in
pusha
scas
ds
loop
add
incl
mov
sbb
popf
push
jo
stc
cmp
push
dec
push
or
jmp
fstpt
or
dec
test
mov
and
jne
add
sti
pop
inc
and
push
sub
mov
mov
and
es
sub
sub
adc
inc
in
cmpsb
jecxz
adc
jg
iret
fidivrl
xlat
push
lret
int3
mov
fisubrl
cmp
mov
inc
push
test
jmp
mov
daa
jle
mulb
cmp
loop
scas
loope
add
xchg
xor
inc
and
inc
xchg
push
jp
outsb
adc
cmp
mov
mov
pop
mov
xchg
lret
pop
adc
adc
add
pop
push
mov
stos
sbb
mov
hlt
int
testl
dec
or
push
sti
js
cmpsl
mov
pop
sbb
sbb
hlt
add
js
aas
lea
js
mov
adc
xor
fs
fstpt
lcall
out
jg
mov
adcb
test
mov
xchg
or
push
mov
cmp
push
pop
pushf
xchg
insb
test
ret
xor
arpl
dec
orl
inc
push
popa
cmp
and
lock
add
mov
scas
jo
loopne
pop
nop
out
or
sti
rcl
clc
sbb
loope
shl
push
out
ret
jecxz
pushw
mov
lret
add
lcall
jg
iret
and
test
lods
mov
or
sub
add
mov
outsb
dec
insl
bound
cmp
mov
outsb
jne
dec
add
cmc
mov
push
test
mov
inc
dec
mov
fadds
pop
cwtl
mov
shlb
push
sub
sub
xor
scas
ljmp
and
add
ljmp
inc
stos
xor
js
cmpsb
je
sub
fsubrs
push
xor
add
add
fs
jmp
mov
mov
jne
push
pop
mov
scas
cwtl
sbb
push
inc
push
xchg
loopne
repnz
mov
popf
mov
aaa
or
jmp
imulb
cmp
adc
jge
pop
lods
push
and
fcoms
ret
mov
pop
jg
mov
sbbl
std
xchg
adc
and
mov
cltd
repnz
pop
mov
pop
pushf
jns
pop
in
pop
sub
or
mov
cmp
adc
sbb
loope
push
sbb
out
shr
add
xchg
xor
adc
mov
cmc
aam
ss
in
inc
mov
stc
shlb
scas
sarb
lahf
testb
sbb
cltd
mov
xchg
popa
jne
adc
rcrl
shll
push
fidivs
sbb
bound
cmpsb
nop
pop
popf
or
inc
shll
icebp
cmpl
cmp
cmp
xchg
roll
and
fs
xchg
ja
pop
loope
adc
stc
cvtps2pd
gs
cli
call
pop
call
or
sub
mov
fidivrs
pop
sub
testb
mov
sub
in
inc
rcll
cmp
adc
rolb
sarb
inc
add
push
fcmovnbe
into
inc
out
or
daa
bound
mov
cld
insl
cmp
jnp
inc
jb
jmp
out
dec
pop
testb
push
pushf
popf
inc
ss
aad
loopne
bound
pushf
icebp
pop
sub
adc
sbb
in
mov
std
test
mov
lcall
add
cmp
fiadds
xlat
out
jp
adc
outsb
inc
sti
push
dec
sbb
cmpsb
sub
in
jb
and
or
scas
pushf
mov
adc
dec
addr16
je
sub
inc
cmc
jb
push
test
and
push
pop
jae
cmp
or
repz
adc
mulb
pop
imul
push
adc
jecxz
lret
xor
push
dec
ficoms
stc
mov
cmp
add
dec
stc
cmpsb
lcall
insl
rorl
dec
mov
movsl
pop
pusha
sbb
pop
push
fisubrl
lods
inc
out
in
dec
outsl
out
ds
pop
insb
xchg
stos
leave
sahf
scas
cmp
pop
cld
sub
or
gs
mov
lock
push
mov
xchg
sbb
or
pop
mov
ficomps
pop
add
inc
shll
sub
shl
push
call
fldl
fwait
lock
adc
adc
out
ret
cmpl
ss
stos
iret
jnp
gs
cmp
in
cmp
inc
pop
insl
addr16
cltd
xchg
mov
jmp
mov
cmc
lea
xchg
stos
adc
sub
jbe
jle
fwait
mov
outsl
outsb
pop
xchg
mov
inc
jg
jno
push
inc
push
shl
push
mov
mov
sbb
mov
sbb
mov
gs
jbe
cmc
sbb
es
jns
pop
movl
fdivrl
sbb
push
or
and
dec
shll
inc
inc
pop
aam
in
push
xchg
into
sub
orb
cmpsl
jns
lahf
fisubrs
addr16
mov
ja
in
mov
mov
clc
movsb
pop
mov
push
inc
insl
mov
mov
out
repnz
mov
xor
hlt
nop
fsubs
rolb
mov
xchg
das
call
inc
adc
in
mov
test
add
mov
jns
leave
xchg
cmc
ja
shll
fcompl
imull
out
add
fnsave
movsb
cld
adc
out
mov
fimuls
inc
pop
ja
mov
cmp
sbb
jle
xor
dec
fnsave
push
jbe
jmp
outsl
movb
test
xor
xchg
pop
push
test
xchg
add
dec
outsb
and
lods
addr16
es
and
addr16
mov
out
inc
pop
test
jb
popa
add
jmp
jmp
stc
daa
sti
adc
xchg
divl
call
sbb
jnp
sahf
ret
cld
lret
lret
and
mul
mov
pop
and
ds
cltd
cmp
cmp
test
xor
cs
inc
stc
nop
stos
mov
pushf
dec
jno
lods
mov
pop
xchg
cs
cmc
pop
stos
push
mov
in
daa
mov
cmp
and
dec
nop
jnp
faddl
gs
popa
mov
fisubl
in
sahf
in
inc
sbb
ljmp
xchg
aas
jae
bound
dec
call
jp
mov
decl
sbb
mov
or
les
jo
loope
adc
ret
inc
push
xchg
fiadds
cld
jne
fistpll
movsb
inc
stc
lret
pop
mov
cmc
jecxz
push
pop
mov
hlt
pop
insl
cld
xchg
pop
inc
mov
and
lret
clc
aaa
mov
rolb
lahf
mov
add
pop
or
daa
enter
or
aas
in
jns
lds
lcall
push
rcr
lret
jns
lahf
push
ja
sbb
outsb
lahf
int3
mov
xor
mov
cmp
shl
jl
dec
jecxz
mov
inc
cmc
loopne
pusha
jo
iret
pop
roll
lret
pop
jno
inc
dec
jmp
or
fdivs
adcb
jns
dec
movb
mov
cmp
or
lods
lret
push
mov
stos
outsl
lret
add
out
inc
pushl
push
or
shlb
add
rolb
cmpsl
cld
out
jmp
fstl
adc
les
aam
insb
ret
into
loopne
enter
jno
pop
mov
mov
mov
insb
nop
cmp
insb
mov
adc
mov
xor
adc
or
movsb
inc
cld
out
int3
add
pop
sbbb
cmp
push
push
in
mov
out
sarb
push
adc
scas
jne
pop
ret
cld
fbstp
cmp
adc
inc
mov
add
lock
ss
pop
sbb
rclb
nop
lcall
lcall
test
sbb
and
dec
outsl
fisubs
and
pop
dec
inc
cmpsl
mov
xchg
and
adc
je
cmp
sbb
push
pop
sahf
iret
adc
or
push
dec
orb
xchg
mov
push
and
les
pusha
sbb
push
scas
sbb
cmpsl
arpl
mov
js
mov
dec
stc
lds
xchg
scas
popf
dec
push
ret
jmp
subl
mov
nop
ret
sti
sub
add
xor
out
or
inc
push
add
je
cltd
mov
push
xchg
cmp
cld
xchg
cmp
push
rcll
mov
movsb
stos
mov
fstpt
xor
inc
cmp
cs
jle
sub
jmp
sbb
and
mov
repz
loopne
lock
jae
cmp
mov
rcll
sbb
push
mov
loope
pop
xor
mov
adc
dec
or
push
mov
mov
shrl
xor
push
pop
clc
clc
roll
or
mov
addr16
xor
rorl
arpl
gs
lods
or
mov
fwait
lea
mov
arpl
pop
loope
hlt
aaa
add
inc
fcompl
and
mov
pop
pusha
xor
jp
mov
xchg
inc
clc
pop
bound
pop
test
test
add
mov
push
mov
add
inc
inc
dec
leave
jp
sub
or
push
cmpl
aaa
adc
mov
popf
scas
jmp
xchg
or
push
sub
in
jne
in
mov
or
es
idivl
push
adc
popa
lods
add
in
std
sbb
add
ret
aas
mov
cld
cmp
pop
jl
rol
int3
lods
pop
data16
adc
out
lcall
jb
push
repnz
into
lcall
movsb
mov
dec
adc
pop
rolb
popf
push
fbstp
shl
inc
sub
fildl
fbld
or
push
adc
or
pop
push
and
decl
xchg
ret
mov
movsb
sbb
aam
popf
stos
cmpsl
jl
fs
push
mov
out
cltd
jb
scas
movsl
cld
dec
stos
xchg
pop
shl
jno
jo
jge
out
sbbb
xorb
adc
xor
mov
orl
or
jp
mov
sub
xchg
push
push
add
outsl
xor
or
lods
icebp
xchg
loop
mov
sbb
push
push
or
cmp
dec
scas
jecxz
pop
mov
icebp
inc
jae
js
jbe
movsl
dec
ret
imul
sbb
cmp
pop
jns
clc
xchg
and
lret
inc
lret
frstor
idivb
xchg
cmp
mov
push
push
pop
in
out
jl
stos
cltd
fucomip
rcll
cwtl
pop
and
stc
inc
sbb
int
out
adc
lods
pop
xor
dec
cmp
push
cmc
jne
in
out
push
imul
cmp
xchg
cmp
adc
push
sarl
jle
push
sbb
popa
sbb
xlat
pop
mov
xor
pop
add
mov
cmp
enter
cmp
sub
or
push
daa
inc
mov
cli
das
in
dec
and
loopne
cmp
fdivr
outsb
push
push
sbb
mov
lds
xor
arpl
xchg
stc
mov
push
add
xor
daa
lods
clc
adc
in
add
add
and
lret
in
mov
push
push
jns
outsb
add
popa
es
aad
jae
mov
rclb
inc
rclb
mov
sbb
test
pop
cltd
dec
adc
jecxz
enter
adc
push
nop
mov
mov
or
adc
je
xor
fwait
cmp
xchg
sub
fmull
shll
xlat
hlt
and
stc
stos
fisubl
movsl
mov
repz
daa
or
xor
push
or
orb
mov
push
insb
adc
xor
dec
adc
into
outsl
lret
imul
pop
leave
negb
pushf
jae
cmpl
clc
add
and
jecxz
popf
mov
dec
dec
sub
popa
pop
pushf
icebp
stos
aad
loop
push
mov
test
xchg
bound
add
lret
test
inc
out
and
push
sbb
scas
adc
dec
or
and
jbe
mov
icebp
int
test
xchg
adc
out
mov
sarl
dec
fiaddl
xchg
xchg
jge
pop
pop
sub
jl
and
or
inc
push
xorb
jle
and
std
mov
pop
scas
sub
xchg
jo
jae
adcl
jnp
dec
shl
dec
xor
clc
mov
lret
sub
dec
cmc
jns
in
test
ds
cli
clc
jmp
xchg
xor
sbb
sti
js
fisubrl
mov
adc
xchg
or
push
out
cli
or
jns
xor
in
cmp
xor
outsb
cli
sbb
inc
and
and
sbbb
js
stc
sub
ja
jp
push
push
dec
cmpsb
cmc
sub
mov
xor
popf
lret
hlt
cmpsl
cmc
das
mov
js
out
mov
pushf
push
or
cmp
jae
or
fisubl
mov
daa
popf
cmp
sbb
mov
jns
xor
dec
jbe
bound
jae
aam
push
arpl
loop
xchg
fidivrl
jno
dec
dec
lret
mov
mov
adc
lds
loop
movsl
rcrb
sbb
push
bound
pop
sbb
fidivrs
je
mov
outsl
push
xchg
std
aaa
jno
jl
dec
fisttpll
imul
mov
push
hlt
pop
xor
call
mov
outsb
sahf
es
pusha
pop
and
in
aam
cli
mov
inc
cmp
pop
stos
testl
add
ljmp
cs
and
sub
sub
scas
dec
pusha
pop
int3
xor
mov
into
clc
xchg
cmp
pop
call
dec
ss
adc
add
adc
out
mov
cwtl
and
xchg
adc
push
dec
icebp
push
ja
mov
test
cmovne
dec
fidivs
inc
mov
cld
or
rorl
hlt
sbb
push
mov
enter
adc
adc
popf
je
fsubs
xor
jle
sbb
sub
adc
aaa
push
data16
jo
enter
mov
in
sarl
jg
aad
mov
push
ljmp
neg
sarb
adc
sbb
ss
cmpsb
jbe
inc
mov
mov
dec
pop
sub
in
xchg
adc
push
pop
jnp
outsb
mov
adc
and
ljmp
out
dec
lcall
push
and
loopne
inc
cmpsl
mov
pusha
nop
cltd
sbb
adc
pop
or
sbb
enter
cmp
test
arpl
or
fdivrs
xchg
imul
lea
int
jmp
pop
cmc
cwtl
xchg
xchg
lret
pusha
movsb
dec
xchg
pop
xchg
add
test
pushf
mov
cmpsl
test
mov
jo,pt
rolb
pusha
popf
fdivrs
push
jnp
fiaddl
cltd
sbb
aas
loop
clc
sub
aaa
mov
loopne
bound
xlat
inc
std
in
push
fnstenv
mov
negl
repnz
lret
les
sbb
sbb
gs
jb
sub
xchg
mulb
jl
cmpl
xlat
sbb
jge
ljmp
in
inc
mov
xchg
pop
decl
dec
movsl
sbb
repz
add
imul
stos
lock
or
dec
mov
outsb
jb
pop
test
jmp
cmp
xchg
adc
xchg
cltd
jo
out
mov
or
dec
pop
xchg
lods
popf
inc
jns
xor
cmp
push
jle
pop
js
frstor
ds
in
mov
inc
lock
inc
sub
pop
jmp
hlt
lods
pcmpgtw
lret
out
cmp
cmpsb
ds
int3
dec
lret
cmp
fs
cmp
stc
xchg
outsb
lcall
loope
dec
fdivr
xor
xchg
cli
sti
inc
into
out
push
jnp
sub
ret
xor
dec
dec
jbe
sbb
ficompl
push
and
or
out
dec
vaddsd
mov
inc
stos
mov
arpl
in
sub
dec
sbb
divl
xor
pop
fiaddl
push
and
pop
push
inc
inc
jo
push
or
pop
dec
mov
lods
icebp
push
mov
jmp
ds
push
sarb
jle
jae
xchg
jmp
outsb
repnz
outsl
cmp
cs
movsb
sahf
and
mov
and
cs
arpl
cmp
shll
fisubs
repz
sub
fsub
insl
outsl
or
xlat
in
mov
mov
lock
sbb
idivl
loopne
sbbb
es
js
lret
inc
xchg
ret
subl
mov
enter
xor
orl
mov
call
xor
mov
pop
fucomi
enter
jecxz
aad
sub
rcrb
imul
xor
dec
test
leave
add
xor
loopne
out
mov
outsb
cmp
cld
dec
dec
out
imul
sbb
das
sbb
sbb
mov
add
add
sbb
fistps
ss
loop
cmpsl
aas
dec
or
adc
adc
jae
orb
add
lds
fucomp
lret
xor
fstl
test
mov
out
and
pop
fucom
fwait
cmp
shl
add
cmp
aaa
inc
mov
mov
lock
fstps
in
push
and
sub
inc
mov
rorb
fimull
mov
int3
dec
fiaddl
fbstp
aaa
push
in
mov
xchg
rclb
xchg
xor
push
subb
mov
loop
fwait
push
ds
scas
xchg
and
xchg
mov
and
jnp
adc
mov
addr16
add
jp
jns
std
f2xm1
push
jae
int3
sar
sub
out
mov
sub
ret
lret
xor
cmp
loope
vmread
call
add
inc
pop
pop
in
daa
repnz
push
pushf
adc
shlb
xchg
sbb
std
push
inc
xor
pop
clc
cmc
pushf
dec
inc
leave
outsl
jno
xor
adc
test
xchg
aas
adc
xchg
mov
dec
aad
mov
notb
cmp
mov
xorl
add
mov
and
popa
out
test
push
test
jge
fdivp
lahf
and
test
sub
or
sbb
push
notl
xchg
insb
test
ljmp
sbb
pop
jnp
in
mov
adc
mov
or
scas
mov
fistl
and
mov
nop
sub
push
mov
sahf
push
aad
xchg
lea
lea
push
sbb
out
call
fs
add
lea
in
or
push
popf
mov
add
and
fistpl
rorl
out
mov
mull
jne
test
and
adc
or
lock
mov
sub
sbb
jg
fdivr
sub
shl
sbb
lahf
div
cmp
lods
dec
pop
pop
jnp
add
jmp
or
add
dec
add
mov
sub
cli
push
ficompl
inc
rorl
push
cmp
adc
sbb
bound
sbb
ljmp
push
inc
es
outsb
loope
fstl
sub
std
xchg
ficomps
mov
cmp
mov
scas
leave
pop
jno
mov
cld
mov
add
rorb
loop
inc
xchg
and
xchg
jnp
cmpsb
scas
jo
mov
lret
mov
dec
ja
add
movsb
push
popl
lock
iret
push
sbb
mov
add
clc
popa
out
insb
and
xchg
mov
in
mov
or
or
imul
pushf
stc
pop
nop
push
inc
bound
pmaxsw
lcall
and
loope
mov
cmpsb
mov
jbe
mov
leave
ss
and
test
cmc
add
mov
ss
rolb
sbb
cltd
je
push
mov
pop
gs
adc
bound
test
xor
test
popa
and
iret
push
notb
jns
jp
dec
lcall
push
or
fisubs
push
popf
fimull
mov
out
mov
popf
es
clc
cmp
idivl
popa
sub
js
adc
rcl
lret
lock
xchg
cmp
push
mov
adcl
add
mov
scas
cld
in
xor
fstpl
xor
jecxz
in
xchg
fidivs
pop
mov
fistps
out
cli
and
add
fnsave
in
in
jle
cli
dec
ja
pop
mov
sbb
in
loopne
ja
clc
dec
adc
add
inc
xlat
mov
dec
filds
in
js
push
popf
lods
and
push
add
jno
int
adc
mov
push
sub
push
mov
fdivrl
orl
insl
aaa
ss
adcl
mov
dec
add
jle
mov
scas
jl
sub
sbb
cmp
mov
or
pop
js
pop
cltd
inc
mov
ds
jmp
and
xor
int3
sbb
and
cmp
or
mov
lods
push
arpl
cmpsl
adc
rolb
xchg
aam
ss
fsubs
and
repz
nop
adc
dec
shll
add
xor
sbb
mov
push
aad
mov
aaa
rcr
inc
jge
mull
stc
mov
stos
std
int3
ret
ljmp
mov
lcall
add
pop
arpl
mov
inc
insl
dec
pop
add
or
lret
inc
xor
or
bound
fwait
xchg
lcall
ljmp
and
clc
repz
or
jmp
or
insl
mov
cmpsl
or
sti
or
dec
or
shlb
lcall
mov
sbb
sahf
adc
jmp
call
pop
ret
rclb
pop
lret
arpl
push
and
or
pop
int3
jl
sub
test
push
push
hlt
leave
loopne
mov
inc
sub
dec
or
jno
xchg
aas
mov
inc
inc
out
mov
mov
pop
ret
cmpsb
leave
repz
lahf
dec
inc
xor
sub
and
ret
mov
rcrb
adc
cmp
sbb
sub
mov
clc
cmp
loope
cmp
iret
addr16
mov
daa
lea
adc
mov
test
test
out
popf
daa
es
jb
cltd
jae
pusha
je
jo
jnp
jg
imul
ja
mov
sahf
scas
in
adc
daa
lahf
into
in
sub
scas
mov
xor
cmp
and
pop
jbe
leave
inc
xchg
sahf
shr
bound
dec
test
mov
push
mov
ljmp
outsb
xchg
jo
and
ret
xchg
cmp
and
mov
and
cmp
cli
sbbb
aaa
mov
out
mov
rcr
xchg
stos
imul
in
push
and
stos
xor
lret
inc
les
cs
sub
sbb
dec
xchg
inc
mov
xchg
pop
push
push
movsl
insl
mov
sahf
in
negl
jl
xor
inc
sub
jmp
xor
dec
das
imul
sbb
ret
mov
inc
nop
inc
and
sbb
jcxz
push
pop
cmp
mov
push
addr16
ss
js
les
jno
jg
nop
mov
rolb
dec
scas
cmc
imul
pop
popf
inc
arpl
das
test
jno
push
fs
stc
mov
sarb
and
mov
pop
jge
mov
jmp
iret
mov
mov
jae
jno
rclb
ss
aaa
ficomps
or
cwtl
cmp
movsb
adc
loope
stc
in
push
mov
rcll
test
pop
jmp
mov
cwtl
inc
clc
movsb
in
cmp
sbbb
shlb
imul
pop
repz
mov
in
add
and
sbb
insl
or
xor
adc
xchg
movsl
jne
icebp
loopne
push
sub
scas
inc
ljmp
mov
lods
xchg
cmp
pop
jbe
loopne
pop
bound
daa
icebp
fldlg2
adcl
pop
out
or
xor
mov
lock
inc
xchg
addr16
mov
or
push
into
xchg
xor
test
xor
cmc
mov
push
mov
jmp
sub
repz
inc
pop
mov
sti
je
outsb
pop
xor
movsl
xor
xor
xor
mov
adc
je
cwtl
mov
scas
push
sbbl
pop
cltd
repnz
sbb
mov
xchg
stos
decb
ljmp
mov
clc
int
fs
outsl
scas
outsl
xchg
push
push
mov
stc
jnp
in
xchg
fiadds
mov
je
mov
sbb
jecxz
inc
cmpsl
push
add
rcl
fisubs
mov
loopne
mulb
leave
dec
mov
xchg
xchg
shll
cmp
mov
jp
scas
lods
xchg
push
sub
dec
in
divl
lods
cltd
mov
push
sbb
sub
int3
sbb
mov
ss
fsubl
adc
sbb
negb
sub
cmpl
pop
fsubrs
push
push
outsb
lret
dec
ds
pop
stos
lahf
cld
aam
outsl
cs
xchg
jle
jecxz
jge
int
std
jecxz
cltd
stos
jecxz
js
dec
ds
and
fstl
xor
push
fnsave
js
push
popf
and
dec
out
or
push
clc
out
imul
cmp
in
stos
std
stc
cli
shrb
mov
stc
adc
hlt
or
jmp
scas
enter
sbb
ja
cmpsl
dec
loope
std
lea
xor
js
add
test
lods
fcmovu
jge
jns
cli
out
int
mov
adc
cmc
mov
outsl
push
jb
mov
dec
aam
push
push
dec
sub
adc
sub
cli
and
call
cmpsb
popl
push
outsb
out
sti
dec
out
mov
sub
mov
xor
xor
push
mov
mov
leave
fs
or
sbb
ss
andl
aam
add
setns
movb
decl
jae
roll
push
mov
xchg
sub
repnz
aaa
xor
outsb
fldl
insl
pop
pushf
cwtl
cmp
add
jecxz
jo
shlb
cmp
xchg
xor
add
std
jae
cmp
mov
mov
roll
dec
ret
adc
xchg
mov
push
jae
fcompl
xor
rclb
lret
in
repz
and
and
push
jge
orb
fisttpll
adc
mov
mov
mov
repz
jno
push
mov
mov
std
fldl
mov
jns
fcmovnb
addr16
dec
xchg
sbb
les
loope
lods
je
lcall
test
xor
pop
inc
into
out
dec
jge
jnp
pop
sub
int3
repz
js
scas
cli
mov
sbb
stc
lds
ds
dec
and
das
jecxz
or
adc
stc
cmp
roll
stc
mov
jnp
je
test
push
ljmp
inc
sub
test
lods
add
cmp
lret
sbb
and
or
in
add
popf
jge
pop
gs
rclb
cs
xchg
lds
dec
pop
scas
js
leave
mov
out
jno
int3
push
pop
int
or
bound
sub
out
in
sub
arpl
sub
call
mov
cmp
push
xor
ljmp
adcl
xchg
push
cmpsl
cmp
in
leave
mov
pop
jae
xchg
pusha
or
sub
call
test
sbb
stos
inc
or
mov
jl
mov
ret
lods
dec
jne
pop
lret
rcll
and
pop
cld
bound
add
or
out
cltd
jl
sub
lods
gs
dec
cmp
xchg
popa
in
pop
jecxz
lea
cmpsb
push
rcrb
mov
xchg
clc
test
mov
inc
imul
cmc
popa
andl
cmpb
aam
sub
daa
aad
jno
sbb
daa
inc
mov
adc
mov
imul
test
dec
sub
ficomps
or
int
push
pop
xor
push
cmp
mov
js
loopne
or
mov
push
sub
in
in
adc
xchg
sub
fisubrs
leave
sti
test
inc
rol
sarl
aaa
mov
and
shl
mov
sarb
in
jmp
mov
fidivrs
call
dec
add
test
push
pop
in
fs
dec
pop
jle
and
lcall
push
dec
mov
pop
outsl
aaa
in
inc
mov
push
adc
mov
and
or
and
xor
loopne
push
push
les
test
or
or
mov
mov
mov
test
mov
addr16
jge
das
andl
test
mov
roll
je
mov
std
jae
mov
sbb
int
cmp
lods
dec
es
push
ffreep
xchg
cmp
out
lock
push
lret
add
repz
xchg
aam
fdivrs
movsb
popf
inc
jns
add
aad
push
rcl
push
sbb
pop
imul
push
push
jle
mov
and
movsb
inc
rclb
adc
pop
arpl
mov
lret
and
xchg
sbb
jg
cmpsb
sub
iret
ret
loope
call
fldt
and
mov
cmp
loop
pop
loop
rclb
or
imul
sbb
sbb
aad
in
dec
fiadds
or
in
and
in
scas
cltd
dec
stos
dec
xchg
mov
pusha
cli
lret
pop
jl
bound
dec
clc
lods
dec
inc
lods
das
jecxz
fstps
mov
sub
or
test
or
xchg
dec
pusha
inc
aam
cmp
mov
test
jp
dec
rcll
jecxz
or
and
addr16
and
mov
xchg
push
jbe
aad
and
xor
xchg
ljmp
jne
mov
mov
imul
mov
adc
shll
mov
andb
mov
and
fldt
rclb
scas
sti
xchg
addr16
xchg
ds
mov
xchg
les
sbb
sarl
inc
movsl
out
xor
dec
shr
cli
push
pop
call
mov
stc
add
xchg
dec
sbb
or
push
cmp
push
dec
fstps
and
push
leave
testb
xchg
sti
jmp
loope
inc
out
fs
mov
aas
lods
dec
sub
outsl
dec
fsts
mov
mov
mov
pop
mov
popf
mov
jle
fsubs
and
jmp
dec
lods
stos
lret
rcr
pushf
mov
xchg
lret
cmovg
push
loope
adc
mov
daa
sub
mov
xor
push
rcr
pop
cmp
push
mov
fisubs
adc
inc
mov
daa
mov
push
add
lcall
addl
jecxz
jge
pop
mov
xor
inc
loopne
out
clc
call
xor
loop
pop
in
rcrb
jge
inc
addr16
pusha
dec
ds
in
jbe
adc
sbb
arpl
lcall
adc
jnp
xor
push
xor
lock
stc
mov
push
xor
arpl
nop
adc
enter
sarl
or
inc
pop
mov
add
or
adc
loopne
pushl
gs
pop
clc
dec
sub
xchg
pop
pop
inc
mov
sub
sbb
fisubs
js
cmpsw
mov
mov
mull
adc
xor
mov
scas
jbe
adc
cld
and
out
adc
ret
xlat
int
mov
cld
and
xchg
inc
lock
sti
mov
jp
cmpsl
and
jbe
mov
lcall
push
or
sub
nop
fcomps
push
sbb
xchg
xchg
bound
adc
mov
dec
or
movsb
shll
in
push
ljmpw
or
and
les
and
pop
movsb
leave
adc
pop
mov
aam
pusha
adc
sbb
sbb
shll
dec
xchg
in
jge
inc
stos
jl
dec
or
stos
mov
add
sahf
int3
shll
fnstsw
dec
add
rcrb
addr16
loopne
enter
jns
xchg
jecxz
fbld
pop
adc
mov
jl
ss
popa
stos
mov
imul
push
and
es
iret
mov
nop
mov
dec
xchg
xor
mov
mov
push
and
fmul
mov
movsb
mov
outsl
vunpckhps
dec
maxps
adc
test
xor
push
mov
add
ljmp
add
mov
aad
call
pop
mov
loopne
js
pusha
test
std
shrl
mov
jae
push
xchg
xor
adc
mov
dec
mov
sbb
pop
inc
or
sbb
orl
jns
test
push
pop
std
aam
pop
jo
std
push
xchg
push
mov
xor
add
movsl
mov
daa
or
mov
cltd
xor
push
les
cmp
sub
insl
add
bound
pop
inc
repz
sub
les
scas
pop
adc
jmp
or
shrb
mov
cmpsb
leave
andl
sti
test
or
or
mov
fs
jne
arpl
ds
rcr
outsl
xor
ss
in
mov
mov
in
add
mov
dec
sub
xorl
push
std
lods
mov
jp
jae
popf
mov
fistpl
xor
dec
pop
shrb
mov
movsl
or
aad
fdivl
lret
mov
mov
leave
and
stc
out
add
push
push
shll
push
and
lock
adc
dec
fwait
out
mov
insb
add
in
nop
and
mov
cmc
dec
jp
jle
rcrb
push
shl
ret
or
dec
cmp
xchg
mov
ret
and
leave
mov
out
fldenv
ret
sbb
push
jne
stos
xchg
mov
mov
test
jae
insb
aad
bound
sbb
cmpl
dec
mov
sti
push
int
inc
shlb
push
imul
insl
insb
sub
imul
repz
insl
fs
add
xchg
pusha
lds
add
mov
in
inc
clc
mov
lds
or
dec
inc
sub
pop
cmpsb
push
in
inc
movsb
lods
inc
pop
lds
sub
push
pop
stc
sarl
sbb
movsb
push
enter
repnz
fmuls
insl
test
xchg
push
xor
out
dec
pop
mov
lret
stos
iret
ret
or
loopne
mov
fisubs
gs
pusha
rclb
jnp
lahf
shld
and
jns,pn
cltd
add
mov
push
scas
fstl
out
lret
or
ljmp
add
in
sahf
sub
mov
out
es
sub
and
jp
jo
pop
mov
lock
nop
je
push
adc
aam
pop
pop
adc
imul
stos
das
push
loope
inc
mov
sub
mov
add
fcmovnu
mov
ds
lret
dec
jmp
mov
mov
mov
mov
sub
jmp
sbb
pop
fcompl
ficoms
pop
sub
stos
jo
cmp
ficomps
movsb
adc
scas
lret
test
pop
es
mov
out
adc
idivl
inc
sub
repnz
push
push
test
mov
or
push
pusha
or
xchg
push
cs
or
add
repz
push
jecxz
lds
popf
mov
xchg
int
fs
stc
ds
xor
stos
push
negb
inc
mov
add
mov
push
pop
push
mov
xchg
js
sub
dec
sub
arpl
xchg
cli
or
jo
jnp
std
pop
xchg
inc
call
xchg
lahf
aam
adc
inc
test
xchg
dec
ja
out
xchg
repz
shl
lret
inc
rorb
cmp
out
and
out
mov
cmp
mov
fstp
dec
ljmp
sbb
movsl
xchg
test
into
rolb
pop
xor
pushf
jecxz
std
cwtl
std
mov
sti
in
or
pop
xchg
jnp
movl
mov
mov
cld
outsl
dec
dec
rep
sbb
mov
hlt
pop
mov
add
ljmp
mov
mul
pop
xchg
cmpb
inc
pop
jmp
mov
jae
pop
cmp
sbb
inc
lea
mov
loop
into
insb
gs
loop
repnz
dec
xchg
cltd
aaa
mov
push
cmp
movsb
push
sbb
cmpsb
add
sbb
leave
decb
xchg
jb
mov
and
fstpl
jne
mov
adc
leave
aaa
ret
pop
mov
ret
pop
push
sub
mov
mov
out
mov
mov
int
imul
inc
shrl
icebp
adc
cli
push
addr16
inc
mov
gs
out
aas
movsb
decb
mov
cltd
cmp
in
je
push
push
in
xor
aad
mov
mov
icebp
pop
xchg
inc
xor
inc
mov
adc
or
insb
cltd
jo
addr16
dec
stos
cmpsl
ficompl
pop
scas
daa
or
cmp
add
pop
and
mov
inc
je
push
std
add
daa
nop
adc
addl
add
leave
jecxz
jbe
and
ficoms
and
lds
stc
pop
or
nop
mov
data16
rcl
repz
int3
lret
lods
in
roll
push
inc
movb
mov
cmp
je
out
sarl
jnp
pop
pop
cmpsb
pop
out
pop
pop
and
pop
mov
lea
lea
and
or
lahf
pusha
clc
jo
xchg
in
inc
xchg
jle
jnp
xor
pop
mov
leave
pop
fs
nop
mov
mov
subl
addr16
push
add
xchg
les
push
jecxz
testb
loopne
aaa
xor
mov
mov
xor
bound
iret
into
adc
sub
jle
cmp
jmp
and
inc
fisubs
adc
mov
lods
daa
pop
or
cltd
outsl
cmpsb
pop
cmpb
out
sub
xabort
xchg
pop
or
loopne
test
adc
lock
or
cld
rcr
xchg
enter
movups
aad
loope
sub
pop
jmp
xchg
incl
bound
cmp
xor
pop
aad
xchg
sar
sub
cmp
data16
loopne
mov
pop
inc
aad
mov
xor
ret
adc
icebp
dec
gs
daa
sub
mov
jb
out
loop
insb
hlt
int3
inc
aaa
repnz
push
jecxz
fucom
and
rol
lods
fistpl
push
cmpsb
pop
sub
fwait
ja
mov
inc
push
loop
push
shl
lcall
pop
lds
enter
fwait
xor
mov
xor
les
daa
or
add
jmp
add
push
jle
pop
mov
inc
push
daa
mov
in
dec
fwait
sub
mov
adc
mov
dec
popf
mov
int
sbb
inc
aad
mov
jo
sub
dec
add
lret
mov
repnz
xor
dec
pop
mov
test
xor
inc
sub
arpl
scas
stc
les
inc
inc
fcoms
out
jle
inc
add
mov
loope
xchg
inc
xchg
insb
xchg
je
cltd
fwait
push
jmp
popf
sar
xchg
sbb
jne
and
popa
hlt
or
xor
nop
ja
sbb
pop
push
push
dec
inc
cmp
je
lret
mov
in
or
mov
test
fisubrl
test
inc
mov
fsubrs
lret
int
imul
jbe
std
sbb
cli
lret
movsbl
in
xor
xor
test
repnz
push
roll
cmpsl
cs
jg
ficoms
sub
clc
daa
out
inc
dec
mov
insl
push
test
mov
jb
push
enter
mov
cmpsl
fstl
mov
insb
iret
inc
pop
mov
jmp
int
pop
dec
dec
out
sub
or
out
rcll
iret
jle
in
in
cli
lahf
sub
cmp
cmpsb
push
clc
add
mov
sbb
jo
clc
mov
inc
jne
repz
xorl
movsb
or
pop
adcb
outsl
cli
cwtl
jge
loopne
push
lods
mov
jmp
pop
adcl
mov
pop
call
ljmp
sub
pop
jae
rolb
lret
sub
lods
mov
mov
cmc
jmp
aas
pop
jp
sbb
cmp
daa
and
les
int3
sti
fcmovnb
xor
push
pop
add
jbe
xchg
test
imul
or
sub
loop
push
insl
fistpll
and
cmpl
add
add
inc
xchg
xor
outsb
stos
daa
mov
pop
addr16
jbe
leave
sbb
push
push
sar
pop
loopne
movsb
pop
test
and
or
je
ret
mov
or
cmp
mov
fimuls
jno
jae
in
mov
cli
sbb
lods
xchg
mov
in
xchg
mov
lds
loope
loop
orb
push
js
addr16
adc
xchg
pop
push
inc
cmp
pop
test
int3
and
mul
xorl
arpl
orb
data16
xor
xor
jbe
test
loopne
dec
pop
mov
jne
mull
aaa
insb
jns
cltd
vmread
xchg
lods
mov
push
imul
jbe
jb
xchg
or
loope
aad
inc
outsl
xor
jecxz
dec
loope
inc
dec
push
jge
orl
mov
xor
int
or
xor
sbb
xchg
push
fldcw
lods
adc
lods
xchg
aam
loope
push
xchg
adc
mov
mov
pop
cwtl
mov
cli
xchg
adc
cmc
mov
mov
stos
test
arpl
sub
adc
inc
sub
sbb
jp
mov
and
stc
cmp
push
pop
sub
arpl
mov
sub
outsb
aad
ret
jno
loop
call
mov
mov
lea
lret
pop
adc
mov
push
mov
imul
adc
aam
insb
add
push
push
ficompl
lret
dec
xchg
xchg
or
xor
sub
or
add
or
cmp
jno
aad
adc
cmpsb
ret
shlb
mov
arpl
daa
dec
add
sti
xadd
test
incl
pop
stos
mov
dec
cmp
sar
jb
pop
std
sbb
lods
movsl
inc
mov
popfw
rcll
lods
mov
mov
push
js
sub
push
sub
jp
inc
call
push
xor
lock
or
bound
loop
cmp
and
cmpl
xchg
sbb
add
dec
push
xchg
gs
xchg
xchg
test
stos
inc
mov
sub
inc
repz
clc
sub
lret
xchg
sbb
lds
lahf
mov
fwait
fwait
xchg
push
mov
mov
xor
add
push
loopne
or
push
jmp
aaa
daa
loop
inc
lds
cmp
or
decb
and
fwait
mov
rcll
pop
cmp
mov
scas
push
decb
ss
arpl
adc
push
stos
xchg
das
aaa
sub
lret
data16
sub
push
fdivrs
jle
fisubl
sbb
test
pop
mov
dec
repz
out
sub
inc
test
mov
stos
rcl
in
jnp
pop
lods
out
movsb
or
xor
into
or
pop
mov
sbb
insb
jmp
cld
out
and
leave
add
adc
mov
das
js
js
sub
inc
xor
pop
test
jnp
pop
add
xchg
and
jge
lret
fwait
mov
loope
mov
jne
xchg
xor
cs
mov
stos
scas
out
jp
inc
fisubl
leave
sti
mov
in
iret
dec
mov
into
sub
int3
sbb
scas
repnz
gs
daa
cmp
adc
mov
xor
pop
test
outsb
ss
inc
or
dec
dec
popf
lods
inc
in
mov
fildl
in
jo
cli
xchg
add
sbb
pop
notb
fs
mov
rclb
pop
dec
push
inc
stos
outsl
or
in
movb
pop
cmp
jnp
adc
insl
repz
ror
inc
mov
mov
out
das
ffree
daa
adc
mov
push
push
stos
adc
jp
xchg
bound
daa
das
add
mov
mov
xchg
jecxz
mov
mov
divb
std
dec
push
lds
cmp
jno
mov
xor
add
shll
mov
fs
stos
and
test
arpl
sub
test
movsl
andb
add
and
daa
lret
jb
out
jo
insl
sti
sbb
ret
jg
mov
add
stc
jb
stos
repz
push
gs
jne
add
lret
pmaxsw
cmp
ljmp
lret
mov
aas
pop
fcomi
pop
add
mov
jmp
jno
adc
inc
add
unpcklps
mov
shl
push
inc
mov
test
bound
mov
cld
test
and
cmpsl
xchg
sub
mov
adc
in
cmp
jbe
popa
jne
jle
jp
adc
pushf
jo
fstl
lret
insl
imul
adc
mov
fucomp
inc
pop
lret
sbb
mov
jp
and
fildll
bound
xorl
inc
inc
push
out
sbb
cwtl
xchg
fdivs
ljmp
int
mov
notl
int
mov
gs
stc
pop
cmp
push
movsb
jmp
mov
xchg
das
into
outsb
out
jnp
mov
push
stc
pop
mov
rcrb
loope
jno
mov
mov
jg
adc
clc
inc
sbb
enter
dec
outsb
je
pop
lahf
ret
mov
mov
popl
xchg
mov
sti
push
fdivs
inc
lock
cmpsb
loop
lods
test
sahf
fdivrl
push
jb
xchg
adc
insb
mov
xor
inc
test
cmpsl
and
push
mov
incb
push
fcmove
xchg
push
lods
ret
ds
cmp
lods
add
sbb
sbb
and
stos
push
je
out
xchg
or
cli
pop
xchg
lea
outsb
pop
lock
lods
jle
sarl
fwait
push
sbb
iret
aam
in
cld
leave
enter
icebp
nop
dec
mov
pop
daa
lret
test
fnsave
std
out
stos
insb
sub
lea
sub
mov
pop
cmpsl
adc
ret
sub
cmp
cmp
std
test
cmp
rcrl
fs
decb
pusha
jnp
stos
sbb
lea
or
sbb
dec
movsl
mov
sbb
outsb
xor
iret
xchg
sbb
xchg
mov
fldpi
in
outsl
loope
addr16
mov
gs
xor
shrl
cld
xor
daa
repz
pop
push
pop
mulb
xchg
jecxz
dec
roll
out
test
in
mov
xchg
das
jnp
add
sbb
adc
test
sub
lods
inc
ror
shl
cmp
adc
jo
xchg
mov
repz
out
test
lcall
and
add
outsl
fstpt
push
push
adc
in
lret
loopne
shlb
leave
or
dec
pop
stc
xchg
test
adc
sbb
dec
jg
pop
popf
mov
dec
mov
sub
sub
or
xor
inc
mov
push
mov
and
repnz
adc
std
or
adc
cmp
stos
mov
iret
mov
fdivrl
lea
dec
mov
jp
xchg
mov
les
outsl
stc
xor
cmp
fisubrs
ds
jmp
test
imul
xor
push
lods
jno,pn
out
and
pop
push
pushf
faddl
fcmovb
mov
dec
mov
idivb
aas
and
ja
xchg
ja
in
in
jbe
and
mov
adc
jg
push
cmp
cmp
int3
ss
pop
xor
sbb
in
cmp
and
mov
inc
mov
xchg
popf
aad
cmp
adc
mov
sbb
dec
aam
add
xor
and
or
sub
nop
add
mov
cmpsb
jecxz
mov
or
xchg
sbb
test
pusha
sub
addb
repnz
cld
sub
sbb
ja
dec
xchg
pushf
stos
push
in
mov
and
popf
xor
fimuls
dec
popf
xchg
cmp
pop
jl
mov
xchg
inc
xchg
mov
cli
loop
dec
jge
or
icebp
cmp
jne
add
inc
inc
mov
mov
mov
push
fwait
addb
pop
test
jo
cmpl
scas
ja
scas
leave
inc
ret
pop
scas
xor
xchg
push
jp
lods
cmpsb
push
fisttps
sbb
fwait
and
js
fisttpll
and
aam
sahf
mov
cmp
cmc
sbb
push
rcrb
inc
push
mov
ljmp
loop
jns
add
scas
aad
stos
repz
xchg
jecxz
leave
xor
inc
mov
xor
test
push
mov
cmp
loop
ljmp
jno
aad
lret
add
in
and
mov
sub
insl
xchg
jae
lea
stc
push
pop
stos
sbb
cmp
imul
jg
push
add
mov
add
mov
pop
ja
icebp
shl
rclb
cmp
inc
dec
ret
repnz
mov
inc
sbb
cltd
mov
cmp
sbb
ret
pop
mov
std
or
mov
fstps
push
mov
mov
cmpsb
sub
pop
pop
mov
addr16
mov
xor
pushl
fwait
push
and
add
xchg
int3
xchg
repnz
push
ja
dec
ret
xchg
and
sub
mov
jp
decb
fs
add
pushf
sti
cmp
imul
and
popa
std
clc
sub
and
movsl
adc
clc
lock
shrb
jns
rclb
orl
mov
cmp
dec
repz
test
imul
in
cmpsb
push
adc
cmp
sub
loopne
cmp
int3
mov
pop
fdivs
add
mov
jle
hlt
pop
nop
cwtl
das
aas
xchg
adc
xor
push
jecxz
lahf
and
lahf
pop
loop
cmc
jb
inc
sub
out
out
cmp
pusha
iret
or
xadd
dec
mov
xor
ds
pop
dec
les
notl
loop
jle
stos
jnp
or
outsb
xorb
cmpsl
pop
fldz
dec
pop
imul
ss
lret
das
call
outsb
sub
ffree
mov
pop
cmp
jl
add
int3
insl
inc
cmc
push
sbb
push
pop
adc
cmpsl
nop
imull
mov
cmp
xlat
fistpll
test
repz
xchg
pop
add
daa
xchg
loope
and
inc
icebp
xchg
pop
push
add
pop
pop
jo
in
shlb
outsl
enter
gs
dec
sub
push
fs
movsl
rorb
ror
jno
mov
ja
pop
mov
jle
addr16
jo
push
sbb
daa
mov
arpl
adc
cmp
iret
push
dec
lock
ljmp
mov
and
jae
das
mov
fidivrs
popa
cli
es
rcrl
cltd
dec
jmp
xchg
jns
jmp
cli
cld
mov
bound
add
sub
gs
popa
xchg
push
mov
test
mov
inc
loop
or
xchg
xchg
dec
inc
or
pop
xor
cmp
mov
aas
shlb
int
std
xchg
int
mov
push
orb
sub
clc
and
sarb
stos
mov
gs
cmp
push
psubb
shrb
js
orl
pop
andl
imul
out
in
xchg
or
jbe
inc
xchg
push
jb
dec
xchg
jb
out
cs
mov
jge
aaa
xor
and
or
mov
sub
push
int
mov
lods
movsl
sbbb
rcrl
add
push
sbb
dec
xor
ja
and
lret
jecxz
jno
add
xlat
insl
or
out
xor
sub
mov
push
xchg
popf
jl
sub
lods
lea
rcrl
sub
xor
js
mov
call
cmp
lret
addb
fidivs
sub
or
clc
xchg
jae
loop
pop
and
in
es
push
or
inc
scas
popa
movsb
xor
test
fcoms
or
mov
imul
fisttpll
sbb
std
stc
in
or
je
mov
lcall
mov
and
out
cwtl
mov
out
push
push
fimuls
lret
rcrl
sbb
mov
push
mov
loop
mov
xchg
leave
adcl
call
ss
int
je
xchg
imul
popf
mov
rcl
fs
rcrl
dec
push
outsb
pop
lds
lret
sub
jmp
xchg
pusha
xchg
jmp
fsubrp
cmpsb
push
fdivl
xor
adc
push
aam
sbb
lds
mov
test
jecxz
mov
pop
xchg
jl
xchg
inc
push
sub
mov
add
pop
imul
xor
es
notb
insl
mov
sub
dec
lods
cmc
nop
scas
push
mov
mov
aaa
fisttpl
pushf
and
dec
sbb
cld
ss
mov
mov
cmp
pop
mov
dec
jp
cmp
pop
in
push
lock
or
mov
push
setnp
nop
cmp
inc
xor
std
mov
xchg
mov
enter
sbb
xor
testl
adc
xor
jae
repnz
mov
adc
lahf
sub
test
or
push
xlat
dec
cmp
dec
xchg
stos
in
arpl
jo
xchg
cmovl
aam
fimuls
or
outsb
dec
add
data16
xchg
fnstenv
enter
es
fnstcw
and
dec
outsl
lret
xchg
daa
inc
sbb
push
loop
imul
out
xchg
inc
inc
jl
push
add
insl
test
pop
cmp
add
push
les
mov
outsb
rorb
cltd
push
mov
and
fldcw
sahf
subb
mov
xchg
push
outsl
mov
js
shl
sub
call
cmp
inc
mov
cmpsb
xor
push
pop
pushf
cmp
pop
les
mov
add
push
sbb
push
xchg
loop
add
push
xchg
and
pop
sub
xor
mov
jle
popa
sti
loope
jbe
fs
fwait
add
loope
push
lret
popa
arpl
fnclex
outsl
popa
mov
lds
push
fidivrs
lds
xchg
xchg
add
fisubs
xor
cmp
ficomps
rcll
out
in
or
jg
pop
cmp
cmp
push
sub
and
fwait
sub
jne
movb
test
jl,pt
mov
jecxz
inc
mov
adc
xchg
inc
arpl
sbb
sub
testl
and
push
stc
jo
cmp
and
or
fstps
ficompl
add
rorb
and
lods
je
xor
xlat
ss
orb
lods
jb
xchg
inc
pushf
sub
mov
inc
xlat
sbb
mov
fwait
pop
js
fsts
jle
cmpsl
sub
push
dec
movsb
mov
test
lods
jno
cmc
daa
fisubs
cld
push
mov
push
mov
mov
push
add
xor
and
adc
push
xchg
mov
les
ret
daa
shrl
or
cmpsb
mov
sub
imul
int
and
std
jg
loope
xor
push
pushf
popa
movsb
push
mov
orl
or
je
mov
dec
jl
inc
ss
addr16
jb
dec
mov
addl
hlt
sub
mov
mov
cs
daa
pushf
pop
adc
or
xor
xor
and
mov
int
popf
iret
adc
mov
mov
jg
xchg
cltd
leave
scas
jge
inc
ret
adc
add
xor
dec
xchg
out
les
sti
push
mov
dec
inc
popf
xor
mov
push
insb
dec
mov
ds
cmp
js
push
movsb
jno
pop
out
push
jp
cwtl
jb
xlat
jge
insb
jge
push
mov
mov
cltd
stos
out
jp
stc
xchg
test
push
outsl
imul
xchg
jg
in
sub
in
jecxz
addr16
imul
dec
adc
cmp
jl
nop
cltd
int3
daa
and
jne
dec
and
es
and
test
push
xchg
fistpl
dec
jl
nop
mov
cmpb
movl
xchg
mov
pop
sbbl
adc
sbb
loopne
mov
or
ja
jge
add
push
lcall
cmp
lods
stc
cmp
shlb
lret
sbb
es
mov
mov
or
and
out
ja
mov
inc
mov
into
rcrb
mov
lret
or
push
cvtps2pd
sbb
cmp
add
and
es
out
xchg
cmc
cmp
xchg
and
or
jl
mov
push
mov
movsl
jge
dec
push
mov
mov
mov
inc
pop
data16
or
addr16
call
cmp
addb
pusha
loope
or
dec
mov
addr16
push
mov
pop
insb
ret
cwtl
push
jo
cmpsl
xchg
cmpsb
pushf
dec
stc
add
fisttpl
dec
xor
and
or
mulb
push
jl,pn
jecxz
inc
roll
dec
xor
dec
inc
hlt
and
repz
jns
popa
xchg
jbe
int
gs
adc
mov
leave
inc
and
dec
nop
push
clc
cs
cmpsl
lds
mov
adc
adc
sar
in
jmp
mov
mov
xor
dec
add
push
dec
lods
in
sbb
mov
stc
test
add
and
xchg
stos
mov
das
or
mov
mov
sbb
imul
xchg
dec
cmc
adc
ret
add
xchg
loop
push
sbb
mov
mov
pop
mov
rcll
pushf
and
pop
pop
outsl
ljmp
out
cltd
movsl
bound
cld
movsb
test
pop
cmp
pushf
out
pop
xchg
push
adc
xor
add
mov
push
jnp
ja
mov
push
test
inc
jno
pop
mov
ljmp
aas
add
jmp
loopne
adcb
dec
inc
fimull
addr16
xchg
scas
lcall
inc
cwtl
outsb
jmp
mov
loope
cmp
scas
push
sbb
and
pushf
push
jno
dec
shrb
jb
xchg
arpl
and
push
add
dec
and
pop
inc
cltd
mov
sub
insl
add
fstpl
outsb
cmpsl
loop
mov
jg
xlat
xchg
jo
cmp
adc
pop
fcmovnb
movsb
ljmp
inc
imul
lret
dec
mov
addl
pop
push
mov
mov
cmc
pushf
sub
jle
outsl
pop
push
testb
dec
mov
enter
or
test
mov
pop
xchg
jo
cmp
fsubrl
outsl
rcll
fistpll
and
pop
and
es
mov
ljmp
sub
stos
les
push
mov
lret
sub
jae
repz
ja
mov
rcll
xchg
scas
testb
je
push
test
mov
sahf
into
pushf
fnstsw
push
push
imul
lret
test
gs
fiaddl
mov
inc
popf
mov
repnz
cmp
shlb
pop
cld
xlat
inc
lsl
mov
xchg
rorl
popa
cmp
ja
adc
jnp
dec
sbb
ss
orl
pop
shrl
or
cmp
stos
mov
js
leave
test
scas
cmp
rorl
or
push
rcll
mov
mov
push
outsl
sahf
push
xchg
test
mov
fdiv
and
add
les
inc
bound
jg
dec
dec
sub
mov
cmpb
nop
imul
rcrb
sub
lahf
inc
mov
vcvtusi2sd
mov
mov
or
sbb
call
add
adc
call
sbb
xor
pushf
pop
jge
push
dec
jae
mov
or
flds
or
push
enter
push
sbb
sbb
stos
inc
icebp
gs
clc
fwait
mov
dec
jo
xchg
inc
ret
mov
cmc
mov
pop
mov
and
dec
je
cmpsl
mov
rcr
cmp
adc
ret
xchg
int3
push
ja
stc
sbb
pusha
leave
out
and
std
arpl
int
leave
loopne
mov
imul
pusha
dec
ficoms
cmp
inc
ficoms
sbb
jmp
lds
rcrb
ror
and
add
sub
mov
dec
frstor
call
sub
ds
lret
gs
push
into
dec
push
or
jl
out
jg
arpl
sub
mov
jnp
out
cwtl
adc
cmc
mov
jb
pushf
xchg
in
dec
jmp
pusha
pop
inc
xlat
loope
inc
out
test
jae
sti
gs
dec
loopne
leave
stos
lahf
popf
jno
mov
add
das
fisubrs
xchg
add
pushf
push
clc
fdivrs
mov
lahf
aaa
or
sbb
cld
and
divb
mov
stc
jecxz
cmc
inc
cli
sbb
lret
xor
sbb
push
adcb
and
cmc
push
fwait
push
in
cld
xor
mov
or
cmp
jle
scas
xor
aam
out
and
sbb
aad
sbb
xor
push
aas
in
xchg
pushf
in
std
jns
hlt
decw
xor
rcl
rcrl
mov
in
fistpll
add
mov
sahf
fisubrl
mov
mulb
dec
xorb
mov
fwait
push
mov
xchg
stos
inc
out
scas
lock
out
sub
clc
notb
dec
jb
cmpsl
loop
mov
dec
into
lcall
lahf
aaa
push
push
out
adc
mov
insb
lods
xchg
int3
cmp
mov
aam
jne
push
adc
mov
shl
push
xchg
jg
xor
inc
pop
sbb
mov
add
dec
sti
pop
lret
aaa
dec
add
pop
push
adc
and
jbe
mov
mov
and
aas
cmp
dec
pop
sti
pop
dec
and
mov
js
mov
jbe
cmpsl
mov
add
jg
call
mov
pop
lcall
push
inc
popf
xchg
ljmp
sti
jg
and
stc
repnz
mov
sub
cltd
xchg
test
nop
or
sub
and
lcall
mov
lret
cmc
push
test
adc
call
outsl
stos
in
loop
dec
test
inc
jecxz
enter
xor
pop
je
dec
ja
out
repnz
pop
std
add
inc
jle
mov
mov
push
into
iret
cmpsb
aad
inc
subb
cltd
mov
lret
pop
jns
int
popa
insb
js
scas
sbb
out
sbb
out
jmp
mov
aas
je
jecxz
shll
sub
jo
xlat
sti
inc
sub
hlt
rorl
cmp
cmp
pushf
subb
sbb
call
dec
rcr
das
test
jecxz
sub
cmpsl
inc
push
out
js
je
fnstsw
insb
jmp
imul
mov
mov
dec
aad
pop
sti
push
js
ror
lcall
mov
lods
mov
push
std
call
sahf
inc
aaa
imul
pop
sub
out
scas
bound
in
in
scas
roll
cwtl
pop
movsb
mov
sub
ret
pop
and
cwtl
jp
sub
xchg
pop
pop
sbb
jge
and
sub
and
mov
outsl
ljmp
test
mov
cmp
rcrl
xor
adc
jmp
and
mov
pop
push
imul
pushf
dec
add
cmpsl
cs
and
dec
fldl
aam
shrl
test
inc
popaw
cmpsl
cmp
mov
inc
or
outsl
std
idivl
cli
mov
out
mov
xchg
rorl
fisttpll
pusha
push
inc
mov
gs
mov
mov
mov
inc
jae
pop
pop
push
push
fadd
add
inc
addr16
test
jg
sbbl
xchg
jle
lods
jg
sub
shlb
outsb
and
es
inc
cmp
scas
int
int3
sti
mov
or
jg
lea
repz
jle
loopne
mov
cli
comiss
xchg
daa
cmp
sub
sbb
ja
inc
adc
cmc
iret
cli
insl
mov
imul
push
add
pop
hlt
pop
das
dec
pop
push
add
dec
and
lds
pop
lods
dec
dec
shll
push
hlt
subb
mov
aaa
or
mov
fwait
mov
es
lret
push
adc
xchg
dec
inc
push
mov
push
in
dec
jae
jmp
cmpb
cltd
mov
pop
clc
pop
mov
mov
add
mov
and
xor
inc
into
mov
jg
sbb
lods
add
pop
mov
xchg
je
popa
fiaddl
or
leave
mov
in
inc
lahf
iret
sub
lret
sbb
imul
scas
movsl
out
sahf
inc
mov
add
cmc
add
mov
addr16
or
loopne
mov
stos
and
mov
fsts
sbb
xchg
loopne
mov
cmp
xchg
push
push
dec
mov
in
fisttps
int
icebp
jg
xchg
push
jle
xor
cmpsb
mov
pop
call
mov
stos
xchg
aam
subl
jb
pop
xchg
arpl
mov
mov
xor
xor
or
jbe
push
mov
subb
dec
jnp
cmpsl
scas
sbb
sub
mov
add
xchg
xchg
dec
xor
pop
add
adc
mov
pop
jb
cli
mov
arpl
jp
ljmp
pop
xchg
cmp
pop
inc
stos
sti
in
cwtl
cmp
sti
mov
xchg
cld
sbbl
lods
lods
and
mov
test
shr
or
pop
mov
sub
out
ret
cmpsl
into
lcall
subb
int
sub
out
ja
inc
and
xchg
adc
fs
inc
lock
add
loop
and
push
cs
imul
mov
mov
dec
jecxz
xorl
mov
mov
and
push
mull
dec
in
or
mov
int
movsl
sar
mov
lods
xchg
push
mov
sub
inc
sub
xor
nop
pop
dec
jno
and
cmpsl
pushf
loope
subb
mov
and
xchg
pushf
cmpsb
dec
xor
sarl
rcrb
mov
pop
sbb
insb
mov
cmpsb
scas
test
call
cmp
lods
inc
mov
lods
aam
bswap
outsb
lods
iret
xchg
popa
xchg
sub
push
push
fisubl
ja
mov
repz
mov
or
out
shlb
outsb
mov
roll
test
dec
xor
aam
pop
outsl
xchg
pop
jl
jg
sbb
pusha
push
jge
ret
mov
adc
fcos
jecxz
aas
or
icebp
jge
gs
jne
inc
stos
outsb
inc
leave
jmp
imul
fisubrs
xor
gs
daa
dec
xor
or
sub
jbe
cmc
lret
test
and
and
in
icebp
adc
mov
sub
dec
mov
adc
in
cmp
and
mov
dec
jle
pushf
cmp
iret
push
lret
sbb
les
pop
subb
lea
jecxz
shlb
or
insb
adc
ss
out
addr16
jmp
lret
dec
pushf
pop
sub
jg
add
jo
xor
mov
ljmp
push
je
adc
ss
cmpsl
push
cmpsb
mov
int3
mov
rcrb
lret
xor
cmp
sub
cli
aas
sbb
xchg
data16
pop
inc
and
sti
mov
jge
jle
into
sahf
mov
cli
xchg
jne
loope
jl
movsb
jl
sub
xchg
and
mov
rcrl
cmpsb
fwait
shll
shlb
or
pop
jp
jo
lret
jnp
cmp
push
or
dec
repz
mov
push
loopne
sub
aad
push
push
mov
mov
jp
aad
add
test
pop
ljmp
scas
sbb
pusha
scas
add
sbb
adc
leave
leave
push
dec
orl
lcall
mov
inc
comiss
inc
nop
and
mov
js
dec
leave
inc
mov
addb
cmp
ja
jno
dec
mov
ret
jno
icebp
cmpsb
repz
pop
xor
scas
mov
jb
ret
jo
leave
xchg
out
scas
inc
mov
cwtl
fwait
aad
cmc
lods
mov
cmpsl
aaa
les
aas
cmpl
jno
xor
xchg
out
das
ljmp
and
push
mov
jge
mov
push
mov
xlat
jae
lods
pop
mov
lcall
and
hlt
das
dec
hlt
cmp
cwtl
sbb
pop
and
push
ljmp
adc
push
mov
dec
and
mov
pop
or
dec
daa
jge
movsl
cmp
or
and
pop
loop
rolb
inc
daa
out
dec
mov
xor
rcr
mov
mov
xchg
scas
sarl
xchg
xchg
rcll
int
lahf
out
fistps
sub
mov
xchg
push
fnstenv
mov
jecxz
cmp
in
aaa
or
dec
cmc
test
fildll
sub
sub
jmp
jmp
inc
fsts
inc
int
cwtl
cwtl
lods
xchg
push
dec
pop
jp
mov
cmpb
je
ret
lcall
jne
jmp
fistl
stc
or
mov
iret
fpatan
add
js
int
test
push
insb
push
mov
cmp
cmpsb
mov
sbb
adcl
sbb
pop
fistps
sbb
add
in
test
sub
mov
inc
push
mov
inc
pop
jmp
inc
aam
pop
xor
mov
das
out
inc
push
push
stos
ljmp
loop
push
loope
scas
mov
popa
cmp
cmpl
pop
test
mov
addr16
push
daa
pusha
js
lcall
mov
fisubl
in
or
mov
mov
sbb
inc
mov
and
jmp
es
jle
jb
mov
xor
pop
xchg
in
mov
xchg
jb
out
lret
mov
mov
nop
pusha
ds
add
ret
push
mov
jne
rcl
shrl
cmpsl
mov
addr16
cmp
shrb
add
dec
dec
testl
sub
cmp
xor
scas
movsl
sti
add
dec
out
test
cli
mov
inc
jo
pusha
mov
jnp
mov
xor
adc
repnz
dec
push
out
xchg
cmp
xchg
jnp
jne
mov
scas
cmp
cmpsl
daa
add
jno
rcll
jmp
dec
daa
inc
jle
inc
mov
fucom
pop
outsl
inc
fldcw
jp
mov
test
leave
mov
inc
call
or
pop
stc
inc
jne
sbb
aas
daa
dec
jle
test
loop
fwait
lods
test
std
push
push
xor
out
xchg
je
add
jno
lock
in
xor
dec
mov
add
cmp
in
jne
or
mov
iret
test
data16
inc
insb
loope
ljmp
mov
dec
dec
call
movsl
cli
test
fucomp
sub
and
inc
sub
mov
repnz
frstor
and
xchg
cmc
sbb
jo
xchg
xlat
hlt
ss
pop
xchg
inc
jbe
mov
fisubl
or
lods
aam
shl
or
jb
pop
iret
mov
jle
jns
jne
add
sub
push
mov
dec
dec
and
aaa
inc
testb
inc
stos
push
mov
inc
int3
movntq
lea
loope
or
je
cltd
sbb
leave
mov
pop
nop
aad
rclb
cmp
int
inc
jo
jge
insb
out
pushf
out
fdivr
mov
test
or
insl
sub
push
std
add
sbb
mov
cwtl
mov
fcmovne
or
jg
cs
scas
push
sbb
xlat
mov
mov
sbb
mov
adc
mov
jno
dec
push
push
fstl
mov
mov
fmull
scas
imul
push
sarb
pop
fisubrs
mov
mov
add
xchg
loope
je
fs
or
lods
stos
loopne
lock
mov
or
lods
jb
jb
sub
lods
jmp
es
mov
arpl
mov
mov
sbb
dec
sub
stc
adc
loopne
dec
shlb
scas
sub
jge
loop
xor
rcll
push
pop
cmp
xchg
adc
pop
mov
outsl
jl
mov
mov
xor
sti
in
dec
pop
std
leave
in
pusha
out
mov
mov
stc
mov
push
pop
sub
sbb
mov
push
push
cmp
int3
out
jae
arpl
and
icebp
jecxz
fcompl
outsl
lret
mov
sub
into
cmp
or
cmpl
xchg
add
mov
xor
cs
mov
cmc
inc
dec
mov
bound
xchg
xor
sub
or
dec
hlt
lock
in
mov
inc
fsubl
sbbl
push
push
mov
jne
cmp
sub
nop
cs
cmp
cmpsl
mov
lds
cmp
icebp
mov
push
xor
ffreep
sbb
shld
cmp
outsb
insl
fsave
cmp
sarl
jo
jge
jae
loope
les
cmc
stos
xchg
pop
popa
add
pop
gs
outsb
lods
outsl
mov
cmp
nop
dec
insl
inc
cld
mov
das
mov
shlb
mov
mov
or
sub
sub
add
loope
adc
xchg
lahf
cmp
jmp
stc
jo
or
fstpt
insb
js
inc
out
xor
jae
dec
xor
jecxz
imul
sub
daa
popa
data16
cmp
shl
aas
mov
cmp
fiaddl
int3
sbb
dec
sub
cmpsl
cld
xlat
cmp
sub
dec
aad
dec
lods
jle
push
subb
cld
xchg
out
xchg
jo
push
lods
fucom
cs
insl
mov
bound
cmp
imul
add
test
inc
mov
test
mov
sbb
ja
mov
or
adc
negl
mov
adc
dec
push
insl
cmp
test
leave
and
or
leave
sbb
push
fnsave
inc
jno
dec
ljmp
fs
xchg
stc
inc
das
sbb
mov
dec
ljmp
fwait
imul
jp
mov
ret
cli
mov
mov
xchg
mov
sub
add
bound
incl
xchg
lahf
aaa
popf
mov
adc
test
mov
fdivl
and
imul
lcall
mov
mov
inc
clc
xchg
out
adc
hlt
fcompl
jns
lret
push
pushf
push
cmc
mov
cli
pop
xchg
mov
mov
enter
cmpsb
fs
mov
jge
icebp
push
sahf
push
ss
out
roll
fisubrl
jb
inc
movsl
cmp
stc
fimull
inc
sbb
rcr
fiadds
adc
addr16
mov
fwait
das
imul
adc
or
inc
fs
rol
push
jmp
jnp
and
mov
or
rcll
stos
pop
test
cld
cld
xor
in
dec
scas
mov
mov
out
enter
cmpsb
mov
inc
dec
inc
bound
jmp
mov
imul
clc
and
mov
and
mov
dec
sub
jo
out
pusha
in
mov
icebp
std
loope,pn
pushf
test
arpl
mov
push
test
leave
xor
mov
sbb
int
add
pop
out
jne
ret
data16
sti
imul
cmp
mov
roll
hlt
push
imul
inc
std
sub
repz
stc
inc
sub
arpl
xor
xor
inc
inc
aaa
popa
xor
aaa
std
mov
fs
pop
inc
call
add
push
xchg
pop
cmp
mov
jp
aad
jmp
cmp
xlat
mov
cmpsb
rcll
sub
in
pop
xchg
push
or
out
out
inc
push
add
cmpsl
insl
loop
fnstenv
lock
imul
jl
hlt
arpl
mov
pop
repz
mull
and
mov
pop
xchg
mov
dec
cmpsl
test
cmc
in
pop
stos
inc
jmp
xor
mov
and
out
lds
movsl
int3
push
xor
inc
jl
ss
pop
mov
das
pop
add
sbb
mov
mov
adc
int3
push
daa
pop
enter
jno
xor
mov
mov
stc
ror
out
jmp
inc
push
adc
insb
in
sbb
es
outsb
lods
jae,pt
xchg
adc
mov
and
push
test
icebp
rcrb
mov
daa
incb
pushf
pushl
adc
or
jbe
faddl
add
in
ficoms
fldpi
test
xor
mov
mov
rcr
leave
lret
add
jle
popa
mov
push
push
addl
sti
mov
cmp
mulb
mov
call
lods
ret
jno
sub
pusha
lret
inc
je
xchg
mov
dec
sub
dec
cmp
cwtl
int3
lea
in
mov
mov
sarb
lret
in
inc
cltd
dec
push
in
push
add
repnz
iret
xchg
cltd
jg
or
mov
mov
popa
jo
mov
mov
insb
pop
sti
aaa
mov
mov
cld
rorb
sbb
movd
mov
adc
mov
scas
jmp
mov
pushf
mov
push
jb
bound
cmp
aas
pop
sahf
scas
mov
out
leave
pop
es
mov
adc
ret
pop
bound
pushf
fistps
fcoml
cmp
push
sbb
mov
pushf
nop
jnp
push
stc
ljmp
cli
mov
insl
aam
jl
ret
push
movsl
cmp
or
data16
push
fs
pop
mov
lods
and
mov
mov
icebp
pop
xchg
mov
mov
add
ret
pop
nop
subps
leave
out
insl
shlb
cmp
fildl
popa
decb
xchg
pop
add
jle
enter
push
imul
cmc
fwait
ljmp
insl
pop
das
cltd
add
xchg
mov
xchg
push
adc
push
lret
mov
jb
scas
in
repnz
mov
pushf
scas
nop
pop
out
dec
imul
repnz
jecxz
rcl
cmp
add
pop
outsb
dec
lret
and
stos
sti
cmp
push
pusha
out
das
dec
push
fistpll
aad
dec
jle
loop
pop
push
icebp
adc
adc
inc
gs
cmc
rcrb
add
scas
pop
push
xchg
mov
pop
mov
popa
addb
dec
popa
orb
mov
scas
cmc
push
scas
into
iret
loop
cmp
jbe
loop
cli
xchg
adc
and
in
or
mov
ficoml
pop
enter
pop
and
xchg
mov
sahf
jbe
xchg
inc
cmpsb
sub
imul
jp
xor
in
mov
int3
inc
addr16
outsb
add
jle
jo
lea
xchg
jno
and
fcomps
stos
and
lret
inc
add
adc
out
xchg
xor
inc
pop
pop
out
les
in
sub
fnstsw
leave
mov
inc
loop
ss
cltd
fimuls
mov
push
xchg
test
jo
mov
xchg
pop
cmp
push
pusha
outsb
jbe
cmp
fwait
and
push
push
xor
movsl
xchg
add
dec
cmp
out
aaa
imul
cs
mov
cwtl
dec
xor
or
mov
push
int
sub
mov
push
iret
mov
push
sub
adc
xchg
add
push
mov
jmp
pushf
add
mov
sahf
push
jmp
xor
push
jle
mov
out
inc
int
je
mov
cmp
pop
shlb
mov
aam
lcall
out
add
add
aaa
and
or
pop
cmp
cmp
mov
lea
pop
arpl
dec
jns
andl
jb
pop
lcall
popa
dec
push
xchg
lods
inc
xchg
sbb
mov
fadds
popa
cmp
cmpsb
xchg
outsb
pop
adc
jecxz
dec
lock
repz
es
pop
mov
rclb
and
xlat
mov
dec
pop
outsl
mov
sti
mov
fdivl
shlb
test
add
jl
test
mov
clc
cmc
clc
outsl
repnz
repnz
outsb
dec
pop
mov
das
out
inc
dec
jecxz
pop
das
inc
xchg
sbb
mov
arpl
mov
into
mov
sub
xchg
sub
add
lods
dec
jl
cmp
xchg
loopne
rdtsc
and
out
ret
cmpsl
hlt
pop
jg
sbb
add
mov
lods
push
mov
push
roll
push
fbld
cltd
inc
icebp
cmpb
and
daa
ljmp
mov
in
orb
adc
jecxz
mov
inc
mov
mov
adc
mov
lds
int
ja
add
mov
sub
mov
cwtl
test
lds
pop
or
aad
imul
xchg
hlt
mov
adc
movsl
loope
addr16
dec
xor
addl
mov
pop
and
xchg
mov
cmpsl
icebp
inc
add
inc
mov
movb
mov
ds
fadds
and
sti
adc
xchg
mov
pop
adc
repnz
xchg
jge
loop
jo
pushf
mov
daa
adc
and
push
imul
mov
dec
addr16
inc
adc
iret
nop
pop
push
push
push
cmpsb
daa
or
jbe
fbld
arpl
pop
push
xor
mov
mov
jl
call
test
cmpsl
sbb
test
push
sub
dec
xor
xor
pop
jge
fsubrs
fcoms
adc
and
push
sbb
dec
add
push
stos
lret
sbbl
jecxz
in
les
and
push
mov
cltd
mov
mov
sub
or
push
bound
das
aaa
xchg
and
jmp
mov
ja
pop
adc
cmp
mov
or
lods
scas
mov
cmp
repnz
mov
icebp
std
out
push
gs
and
fdivs
push
rcll
fwait
jnp
popa
int
mov
out
add
jp
xchg
push
mov
mov
add
xchg
xor
cmp
pusha
in
icebp
jmp
clc
lds
sbb
cmpsl
incb
fnstsw
sbb
incl
fstpl
call
cltd
enter
rcll
mov
adcb
mov
mov
lock
icebp
sbb
mov
mov
mov
fxch
sub
push
movsb
clc
mov
lds
push
fwait
cwtl
out
shlb
fists
push
inc
jo
ja
movsb
and
and
sbb
movl
inc
mov
out
or
sbb
and
bound
sub
mov
adc
push
mov
sbb
aam
push
cmp
jnp
insb
leave
leave
in
add
jnp
pushf
xchg
or
jmp
dec
loopne
in
inc
shl
mov
sub
jno
cmp
and
int
or
pop
and
xchg
cld
out
xchg
daa
imul
push
inc
in
sahf
xor
xor
loop
or
out
adc
push
mov
xor
mov
jnp
xor
push
aad
mov
stc
lret
nop
arpl
sbb
hlt
push
push
imul
xlat
push
sbb
fsubr
pop
insl
iret
mov
popf
and
loope
sahf
xlat
out
hlt
in
sub
imul
aam
dec
ljmp
jo
cltd
or
imul
int
ja
ja
pop
mov
jp
cwtl
ljmp
sub
outsl
xchg
nop
imul
add
scas
popf
pop
push
jmp
lret
mov
xchg
cwtl
xchg
dec
push
cmp
arpl
test
jmp
mov
push
insl
fldt
mov
sti
inc
mov
mov
mov
arpl
and
les
arpl
mov
daa
push
add
cmpsb
clc
leave
popf
gs
lds
stos
cmpsl
cwtl
sbb
ror
mov
jnp
jmp
mov
adc
jg
xlat
stos
ss
push
adc
mov
sbb
ret
xlat
in
test
mov
mov
imul
add
stos
cmp
loop
pushf
rol
sub
scas
inc
divl
pop
ret
movsl
sub
mov
cmp
cwtl
dec
fxch
and
cli
mov
fwait
shll
sbb
mov
adcl
mov
popf
jl
mov
js
subb
xor
out
in
fisubl
jecxz
mov
repz
stos
mov
in
mov
adcb
push
inc
sub
xor
pop
js
loop
lods
mov
pop
push
sub
fs
jo
loope
or
xor
mov
jecxz
mov
push
stc
mov
dec
push
testl
popf
xchg
scas
mov
negb
jae
jecxz
or
cmp
inc
lret
mov
js
cwtl
jp
cmp
pop
or
fildl
push
test
fisttps
outsl
push
mov
shlb
ret
mov
gs
sub
jecxz
aaa
lods
popa
add
cmp
cmpsl
pop
jb
fdivl
or
scas
jns
dec
add
mov
inc
imull
call
mov
xchg
jno
shl
xor
js
bound
subb
adc
shl
movsl
fxch
or
sbb
jne
push
jne
xor
pushf
in
pop
pop
mov
mov
push
mov
loope
mov
test
push
pushf
andb
fists
push
fcomp
in
test
adc
pusha
jmp
jmp
sbb
fidivs
negb
sbb
andl
inc
jnp
lods
xor
addb
scas
cmp
pop
mov
testl
jge
add
int3
sahf
xchg
xlat
aas
cmp
hlt
xor
jmp
pop
jbe
ss
mov
gs
ret
ret
pop
push
or
jbe
fucom
lea
xor
in
push
inc
sbb
stc
gs
mov
jns
inc
das
dec
stc
mov
stos
adcl
adc
sub
push
sbb
and
xacquire
pop
sub
outsb
dec
add
xchg
inc
ljmp
sti
dec
xor
jno
adc
sbb
loopne
xor
jnp
or
cli
adc
push
clc
orb
repz
pop
add
pop
cmp
xlat
jecxz
cltd
das
dec
jno
neg
clc
and
sbb
fld
mov
push
orl
push
xor
ja,pn
jle
test
mull
lods
jp
xchg
fistpl
add
mov
mov
stc
clc
test
add
xchg
movb
jg
arpl
sub
out
das
xor
jno
ret
aam
mov
pusha
mov
icebp
dec
jge
sub
stos
dec
ljmp
nop
xchg
add
and
pushf
sbb
adc
pop
sbb
loop
or
adc
push
sub
insb
sub
arpl
cli
sbb
adc
scas
mov
pop
xor
push
std
xlat
mov
mov
cmp
lods
bound
xchg
push
pop
out
inc
ret
mov
push
cmp
incl
lahf
sbb
mov
lock
sar
and
dec
mov
mov
mov
nop
jp
mov
mov
sbb
dec
rorl
jge
ljmp
stos
aad
and
rcll
pop
cld
add
sub
fwait
cmp
inc
inc
inc
fs
dec
mov
and
lods
dec
fldt
rclb
dec
mov
test
mov
test
xor
aad
mov
repnz
pop
aad
inc
in
lret
pop
cmp
ja
sub
mov
in
add
xor
test
mov
outsb
in
adc
jae
cwtl
aam
ds
cs
lret
xor
aas
mov
leave
sub
cli
push
inc
fcompl
cmp
xor
repz
push
inc
cmp
cld
dec
scas
pop
xchg
pop
adc
int
loop
xor
cmpsl
adcl
or
fbld
add
mov
mov
imul
inc
lods
sbbb
add
inc
jge
xor
in
sbb
pushf
shr
jbe
sti
es
mov
pop
movb
mov
xor
push
jne
sahf
xchg
scas
aaa
daa
cld
in
mov
lahf
sti
sbb
daa
push
ss
popf
insl
mov
std
imul
push
cmpsb
jl
mov
lahf
clc
sbb
dec
mov
jl
or
push
pop
test
lret
pop
sarb
clc
mov
push
pop
mov
or
adc
subl
jnp
sti
add
stc
xchg
jmp
sbb
dec
push
rolw
pop
cmpsb
inc
jo
jecxz
je
jb
jp
movsl
ds
cmpsb
cmp
out
mov
adc
sub
push
daa
and
sub
sbb
pop
fsubrs
loop
sti
jle
and
mov
dec
pushf
lahf
addr16
roll
pop
jmp
ret
ljmp
iret
and
xchg
push
push
ljmp
repnz
fs
dec
sbb
sub
and
out
addr16
out
jg
jb
cmpb
add
xlat
fwait
mov
adc
adc
cmp
mov
out
inc
xchg
adc
mov
and
mov
scas
xor
jecxz
jae
ljmp
cmp
sub
dec
mov
in
mov
divl
dec
add
insl
cmp
jecxz
jns
mov
pop
cmp
mov
cmp
fs
js,pt
and
aas
imul
xorb
mov
repnz
into
popf
sub
lret
rorb
push
es
mov
out
fidivrs
and
pop
xor
push
add
add
out
pop
jp
lock
daa
jp
xor
xor
mov
sub
inc
xor
out
add
pop
push
inc
fiadds
lret
js
dec
ljmp
push
or
inc
loope
push
pop
mov
int3
sub
mov
cmp
mov
or
push
xchg
and
sub
cmp
outsb
fcoml
or
xor
push
xor
outsl
adc
mov
std
pop
stos
rcpps
and
xor
mov
xchg
pop
in
orl
mov
in
add
xor
jbe
mov
or
loop
adc
das
insl
pop
lahf
shlb
dec
cld
mov
dec
jg
pop
or
scas
ds
mov
loopne
ss
inc
jmp
lods
or
push
dec
lea
test
add
sbb
cli
xchg
rcrl
push
nop
jle
jo
pushf
clc
mov
sub
xor
xchg
xor
lret
lods
mov
jecxz
add
test
adc
adc
jg
add
out
cmpsb
inc
sbb
clc
mov
mov
mov
mov
pop
ja
leave
scas
cmp
lock
mov
mov
sar
jl
adc
mov
pop
cmp
inc
push
lcall
sti
imul
inc
xchg
sbb
or
test
sub
ja
call
cmp
xchg
movsl
testl
mov
xchg
and
push
insl
subb
push
push
test
jns
shll
inc
jecxz
jbe
das
xor
in
xchg
cli
or
mov
xor
mov
in
ficoml
add
repz
stc
pop
mov
sbb
das
arpl
test
adc
jp
or
daa
mov
push
jp
stos
push
or
xchg
out
pop
pop
out
push
punpckldq
sarl
jnp
push
ss
fwait
orb
ds
jae
in
pop
movsb
mov
adc
add
xlat
rcll
adc
cltd
mov
popa
and
mov
js
push
cmp
and
mov
jae
sbbl
sbb
repz
add
add
shrd
push
xchg
addl
and
ss
add
push
pusha
xlat
jbe
add
aas
test
cmp
and
xchg
jmp
rclb
add
insl
mov
ljmp
cmp
push
xor
test
insl
or
dec
mov
sbb
cmp
es
sahf
add
mov
leave
cltd
sbb
jno
cmpsl
clc
add
push
fs
imul
pop
cmpxchg8b
dec
scas
push
leave
push
imul
cmp
leave
lods
cmp
sub
mov
sbbl
pusha
sub
or
pop
pop
lret
addb
and
dec
add
js
enter
mov
push
push
pop
mov
mov
hlt
push
mov
cmp
ljmp
lahf
rolb
add
mov
popa
xor
repz
inc
mov
fucomp
popa
sbb
lret
ret
mov
shrb
xchg
pop
sahf
jge
gs
nop
cmp
popl
push
mov
ss
lea
inc
mov
xchg
sbb
mov
jns
movhlps
lock
lahf
cmp
push
aas
sub
inc
push
inc
or
xchg
aam
sbb
out
pop
out
pusha
adc
imull
xor
xchg
pop
dec
sub
add
outsl
inc
cmp
adc
xchg
jns
pop
jbe
push
lea
xchg
fidivrs
mov
scas
in
push
addr16
push
push
mov
loopne
and
adc
sbbb
sub
push
out
adc
stos
fisttpll
push
push
cmc
mov
out
insl
cmp
pop
aad
addb
cmp
fwait
pop
push
cmp
movsb
or
adc
je
out
inc
xchg
pop
sbb
sub
stos
lea
pop
xchg
cmc
push
adc
adc
fbstp
pop
fisttps
cmp
imul
sbb
pop
inc
mov
lahf
jl
push
mov
fxtract
out
call
sbb
pop
xchg
add
xchg
dec
push
dec
lea
pop
mov
inc
jne
add
xchg
dec
jecxz
mov
push
out
mov
mov
andb
add
shrb
bound
aas
mov
popa
push
or
jno
sbbb
push
sbb
ss
loopne
in
dec
test
adc
sbb
or
lahf
push
pusha
aaa
out
sbb
sub
decb
and
push
mov
cltd
aad
inc
call
xchg
add
xor
adc
cs
out
and
adc
sarb
xchg
shrb
sub
icebp
inc
mov
inc
sub
inc
faddl
jns
lods
dec
mulb
inc
jnp
ljmp
sub
nop
push
add
cmp
in
in
xchg
dec
lock
xor
movsl
cmp
inc
lret
xchg
inc
push
scas
daa
mov
lret
int
sub
or
or
pop
cmpsl
iret
sarb
test
repz
fldt
jle
nop
loope
mov
ja
cmp
dec
movsb
inc
rcr
xor
imul
push
movsb
push
mov
mov
aas
lret
sahf
mov
mov
pop
jnp
xchg
mov
dec
adc
popa
pop
mov
mov
mov
cmp
das
nop
and
outsb
outsl
mov
negb
and
xchg
jb
stos
mov
jp
push
aad
xor
in
xchg
insb
sarl
imul
testb
lcall
rcrl
cli
rcr
adcl
xchg
out
in
hlt
jp
pop
xchg
hlt
adc
xor
inc
add
daa
fstpt
iret
and
cld
in
dec
mov
gs
inc
and
pop
push
lcall
mov
mov
insl
push
push
fdivrl
or
out
out
scas
cmp
dec
or
jg
xorb
dec
data16
rolb
jmp
sahf
aas
loop
imul
repnz
addr16
push
clc
mov
test
loop
add
aad
sub
arpl
xchg
inc
pop
inc
jns
or
xlat
fistl
int3
mov
xchg
negl
jmp
pop
aam
cmp
or
push
xchg
test
jne
in
loop
ret
pop
dec
xchg
ret
sbb
loope
mov
dec
enter
jo
stos
bound
mov
repnz
mov
dec
loope
ror
cmp
out
popa
xchg
ja
sbb
xor
in
jge
sub
inc
push
pop
cmc
int
out
stos
es
sub
jmp
and
shll
scas
out
fdivrl
xor
jl
outsl
rcrb
cmpsb
mov
ret
mov
movsb
test
mov
ret
jae
jns
mov
popf
xchg
inc
push
aad
stos
mov
je
nop
nop
inc
in
sti
xlat
movsb
popl
cld
mov
out
imul
lods
push
mov
mov
mov
arpl
ret
out
mov
mov
mov
pop
shrl
test
mov
add
and
fmuls
or
call
sub
scas
push
push
sbb
xor
cmp
aad
in
les
add
mov
push
sbb
enter
in
add
mov
lret
std
and
pushf
xchg
push
inc
jns
jne
cmp
icebp
in
sti
sub
or
sub
pop
sub
sbbl
bound
and
insb
int3
and
jp
add
xchg
mov
xor
jg
adc
lret
or
leave
cmp
mov
lahf
jnp
lret
cmpsb
xchg
sbb
xor
xchg
mov
out
int3
filds
mov
adc
or
xchg
and
adc
shlb
mov
call
clc
adc
adc
xor
aaa
sub
loop
xchg
lahf
dec
shr
push
and
mov
das
adc
mov
xor
pop
jge
or
rep
push
inc
push
xchg
nop
and
xchg
addr16
leave
sbb
jge
out
inc
in
add
push
imul
mov
mov
mov
pop
push
cmp
and
or
incb
dec
test
add
add
cld
sub
add
add
add
add
or
add
add
add
sub
add
enter
add
add
cld
sub
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
cld
sub
add
add
add
add
add
add
js
add
add
add
jb
add
add
add
add
add
sub
add
add
add
add
add
add
mov
rolb
add
add
mov
add
cld
sub
add
add
add
add
add
add
enter
sub
push
add
xor
add
add
add
add
add
sub
add
add
add
add
add
add
lock
add
or
add
add
add
add
add
add
sub
add
add
add
add
add
add
sbb
add
js
pop
add
lds
add
add
add
add
add
sub
add
add
add
add
xor
add
add
js
add
mov
add
add
sub
inc
outsl
insl
add
add
add
add
push
repnz
add
add
add
add
add
add
add
sub
inc
outsl
insl
add
add
add
add
nop
add
add
cmc
pop
add
add
add
sub
inc
outsl
insl
add
add
add
add
mov
std
pop
add
add
mov
add
cld
sub
add
add
add
add
add
add
loopne
add
cld
sub
inc
outsl
insl
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
ja
pop
js
mov
add
add
lock
jg
mov
add
add
xorb
clc
sti
mov
add
add
lock
js
mov
add
add
cmpb
xchg
mov
add
add
lock
js
or
add
jg
cmpb
xchg
add
call
add
lock
out
add
js
jo
add
add
cmpb
mov
pop
xchg
add
lock
scas
jmp
js
jo
add
add
lock
mov
jmp
testl
xchg
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
jo
hlt
call
dec
xchg
add
add
incl
hlt
decb
xchg
add
add
ja
jo
out
call
xchg
add
add
add
pop
hlt
decb
add
add
add
add
hlt
out
out
call
add
add
add
add
hlt
mov
decb
add
add
add
pop
hlt
mov
out
call
add
add
add
pop
hlt
mov
xchg
add
add
add
pop
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
call
jne
and
add
add
add
jne
adc
add
add
add
add
xor
add
add
or
rolb
add
add
add
or
add
add
jl
or
inc
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
push
jmp
inc
jnp
je
pushf
pop
or
loop
cld
dec
scas
mov
push
cmpb
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
mov
or
loop
mov
mov
lds
adc
xor
iret
and
or
push
es
inc
or
pop
push
lar
or
je
adcb
filds
nop
cwtl
movsl
jg
insb
mov
cmovl
movsb
and
push
push
push
call
in
dec
call
inc
or
add
sbb
lahf
push
or
lea
lods
stos
dec
add
adc
pop
jae
test
out
push
sub
xchg
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
ret
lcall
sbb
call
nop
add
lea
les
inc
mov
xchg
aaa
and
push
call
jb
sbb
insl
xchg
rcll
dec
sti
nop
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
ret
lea
test
xor
push
aas
pop
inc
mov
sbb
add
inc
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
or
dec
jle
add
add
movb
fsub
jae
dec
mov
push
and
repnz
pop
push
lea
sbb
data16
mov
jbe
mov
add
pop
pop
pop
pop
ret
push
imul
cwtl
jne
cld
mov
or
aas
pop
loopne
push
adcb
or
ret
xchg
shll
add
std
xlat
ljmp
inc
xor
stos
pop
cs
adc
sbb
lods
push
jne
lds
cmp
int
sarl
dec
enter
xchg
mov
scas
sub
jmp
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
faddp
scas
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
mov
add
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
test
push
push
mov
clc
nop
xor
sub
in
adc
shr
dec
xor
sbb
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
or
pop
xor
cmp
push
je
outsb
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
jmp
jae
in
gs
sbb
inc
or
adcl
scas
sbb
inc
inc
mov
inc
or
shlb
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
mov
add
lea
add
daa
push
iret
shr
pusha
loope
push
lea
push
fs
cmp
inc
push
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
enter
adc
inc
and
cmpsl
sbb
and
scas
mov
dec
dec
cmp
mov
xor
subb
xor
pop
mov
cmpsb
dec
push
js
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
daa
arpl
jae
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
hlt
add
add
push
add
clc
or
add
invd
add
or
dec
add
add
add
inc
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
not
ror
das
aam
xchg
stos
pop
or
add
add
add
jmp
sub
mov
mov
push
push
mov
mov
shl
mov
push
mov
mov
sub
mov
mov
shl
mov
add
mov
shl
xor
sub
mov
add
mov
mov
mov
mov
mov
mov
movb
mov
je
mov
mov
rep
mov
movzbl
xor
mov
add
or
mov
mov
shl
or
movzbl
shl
or
cmp
jbe
push
mov
mov
and
mov
shl
add
cmp
mov
mov
lea
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
mov
sub
mov
shr
mov
shl
mov
add
imul
cmp
lea
mov
jl
mov
sub
mov
movzbl
mov
mov
mov
add
mov
and
cmp
lea
lea
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
test
mov
je
cmp
jge
mov
mov
lea
cmp
jae
movzbl
shl
shl
or
add
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
test
mov
lea
je
cmp
jl
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
mov
mov
add
mov
mov
cmp
mov
mov
jge
movl
jmp
cmp
jge
sub
mov
jmp
sub
mov
jmp
mov
shr
sub
sub
sub
cmp
mov
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
mov
mov
xor
cmp
setl
mov
mov
mov
lea
sub
and
mov
jmp
mov
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
lea
shl
add
cmp
mov
mov
lea
jae
shl
mov
mov
movzbl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
xor
cmp
setge
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setge
sub
and
add
mov
lea
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shl
mov
lea
mov
movl
jmp
sub
sub
mov
shr
sub
mov
add
mov
movl
mov
mov
mov
nop
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
subl
jne
mov
mov
shl
sub
add
cmpl
jge
addl
cmp
mov
jl
mov
mov
shl
lea
movl
mov
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
subl
jne
sub
cmp
jl
mov
mov
sar
and
sub
or
cmp
mov
jge
shl
movl
mov
mov
sub
mov
lea
mov
jmp
mov
sub
jmp
lea
cmp
jae
movzbl
shl
shl
or
add
shr
add
cmp
jb
sub
or
sub
jne
mov
add
shl
mov
mov
movl
movl
mov
jmp
mov
cmp
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
mov
or
lea
shll
subl
jne
jmp
mov
addl
je
mov
mov
mov
sub
add
add
lea
mov
sub
mov
add
add
test
mov
jne
mov
cmp
jb
mov
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
movzbl
cltd
mov
idiv
push
mov
push
push
mov
movzbl
cltd
idiv
mov
mov
mov
add
mov
shl
mov
mov
add
shl
push
push
call
mov
mov
mov
lea
push
push
push
push
mov
add
push
lea
push
mov
call
mov
push
push
push
call
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
inc
add
add
mov
add
sub
add
inc
add
add
add
pop
add
add
inc
inc
add
add
add
add
add
mov
add
iret
add
add
pusha
add
es
add
inc
outsl
pop
add
add
add
add
add
je
add
incl
adc
add
adc
add
filds
add
pop
add
adc
add
adc
add
add
add
add
or
add
insb
nop
xorl
jmp
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
arpl
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
add
lcall
adc
push
add
insl
push
add
rcrl
add
jmp
add
push
push
add
cmp
add
dec
push
add
add
add
jp
add
pushf
sbb
adc
