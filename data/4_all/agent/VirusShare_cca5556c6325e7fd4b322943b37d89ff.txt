mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
int3
inc
inc
test
inc
and
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
pop
add
xor
add
add
add
add
add
add
add
adc
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
out
cli
jp
and
xor
pop
adc
cmpsl
sbb
mov
leave
arpl
inc
mov
push
fwait
clc
xchg
jno
jmp
insb
pop
hlt
cmp
lods
mov
out
ret
cmp
jno
ret
lret
jno
fs
data16
loopne
pop
lods
cmovns
imul
test
in
cs
fldenv
mov
xchg
aad
repz
inc
enter
loop
loop
sbb
xchg
mov
pop
rorb
les
hlt
idivl
mov
cs
call
push
jle
push
xor
rolb
dec
insb
sub
jb
pop
inc
stc
test
dec
or
leave
leave
scas
sbb
cld
fcomps
cmpsb
enter
leave
repz
outsl
cmp
pop
les
pop
push
decb
xor
test
fldcw
jge
sub
jno
and
pop
mov
pminub
imul
and
sub
sub
mov
push
movsl
mov
movsl
fsubs
gs
jnp
add
pop
add
add
jp
xchg
or
pop
lock
loop
xchg
sub
or
sbb
sub
int3
mov
inc
cmp
nop
cmp
cmp
mov
ret
clc
fwait
and
pop
aam
pop
ds
mov
lcall
fs
dec
fbld
xchg
.byte
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
out
cli
jp
and
xor
pop
adc
cmpsl
sbb
mov
leave
arpl
inc
mov
push
fwait
clc
xchg
jno
jmp
insb
pop
hlt
cmp
lods
mov
out
ret
cmp
jno
ret
lret
jno
fs
data16
loopne
pop
lods
cmovns
.byte
xchg
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
out
cli
jp
and
xor
pop
adc
cmpsl
sbb
mov
leave
arpl
inc
mov
push
fwait
clc
xchg
jno
jmp
insb
pop
hlt
cmp
lods
mov
out
ret
cmp
jno
ret
lret
jno
fs
data16
loopne
pop
lods
cmovns
imul
test
in
cs
fldenv
mov
xchg
aad
repz
inc
enter
loop
loop
sbb
xchg
mov
pop
rorb
les
hlt
idivl
mov
cs
call
push
jle
push
xor
rolb
dec
insb
sub
jb
pop
inc
stc
test
dec
or
leave
leave
scas
sbb
cld
fcomps
cmpsb
enter
leave
repz
outsl
cmp
pop
les
pop
push
decb
xor
test
fldcw
jge
sub
jno
and
pop
mov
pminub
imul
and
sub
sub
mov
push
movsl
mov
movsl
fsubs
gs
jnp
add
pop
add
add
jp
xchg
or
pop
lock
loop
xchg
sub
or
sbb
sub
int3
mov
inc
cmp
nop
cmp
cmp
mov
ret
clc
fwait
and
pop
aam
pop
ds
mov
lcall
fs
dec
fbld
xchg
int
imul
cmp
popf
popa
push
arpl
dec
pusha
cmp
ret
adc
insb
or
mov
es
jne
jg
imul
mov
mov
jmp
add
lcall
cmp
xorb
mov
jg
inc
aaa
jp
pusha
scas
lods
xor
push
and
and
xchg
popf
sub
pop
imul
xchg
mov
sub
gs
stos
lea
push
insl
pop
and
adc
andb
rol
jnp
mov
fnstsw
sbb
jbe
sbb
push
xor
loop
xchg
in
mov
adc
mov
cmpb
decb
jmp
adc
sbb
aam
xchg
movsl
in
mov
mov
and
dec
jnp
shll
xchg
psubusw
popl
pusha
xlat
xchg
inc
cmp
hlt
sub
mov
pop
xchg
movsl
imul
dec
xchg
fwait
mov
lods
test
xchg
loope
push
pop
jnp
xor
push
in
jns
shrb
repnz
adc
and
insl
mov
and
jno
shrl
mov
ss
mov
fsubrl
gs
loop
mov
iret
pop
cmp
sub
sbb
test
xchg
xchg
add
lods
push
sbb
fsubrp
push
push
outsl
cld
xchg
stos
icebp
sub
push
in
test
sub
push
adcl
clc
mov
cltd
push
outsl
xor
or
vmwrite
ds
outsl
into
pop
in
and
leave
sbb
and
jne
mov
cs
push
sbb
add
int3
lods
adc
jecxz
bound
xor
jmp
push
push
clc
xchg
push
pop
leave
int3
sbb
or
cltd
jb
and
fs
pop
scas
mov
fsubs
shlb
stos
sbb
daa
add
aas
sub
or
and
pop
fs
jle
mov
adc
loopne
xchg
add
push
mov
sub
pop
jge
cmpsb
cwtl
rol
stos
scas
dec
outsl
addr16
aaa
int
mov
mov
addr16
dec
add
or
pop
pop
ds
fwait
iret
inc
stc
mov
pop
adc
push
fidivl
pop
out
push
rcrl
push
sbb
fimuls
jl
dec
in
push
push
pop
xor
sub
push
lods
out
push
aad
ljmp
cld
xchg
in
adc
mov
aad
add
out
cwtl
xchg
jbe
movsb
pop
mov
inc
cli
shl
lret
jg
mov
mov
addr16
or
push
setns
add
ffreep
int3
cmpsb
fldcw
inc
rolb
ss
mov
adc
aam
xchg
push
andl
lods
movsb
nop
scas
lods
pushf
in
sahf
jp
outsl
jg
inc
test
add
in
mov
push
sti
and
fnstsw
inc
push
mov
aas
adc
mov
push
out
xor
push
dec
aad
js
push
lcall
dec
iret
out
lret
gs
mov
adc
cli
arpl
cmpsb
scas
aad
orl
cmp
push
test
or
adc
pushf
in
insb
or
sbb
dec
add
adc
adc
jge
jp
ficoml
push
pushf
int
addr16
je
xor
mov
out
or
iret
lcall
cmp
xor
fisubrl
ficoms
repz
cmp
insb
es
push
cmpsl
mov
add
dec
pop
mov
enter
pop
stos
adc
pushf
psubw
out
push
jns
in
nop
jo
mov
ds
inc
mov
inc
sub
in
enter
sahf
sarl
shl
pop
pop
xchg
stos
lods
mov
cmp
rcrb
lahf
dec
xor
cli
negb
dec
mov
add
inc
bound
add
je
and
inc
and
ss
leave
xchg
pop
js
sub
jmp
shlb
or
negl
push
xor
lods
dec
pop
dec
movl
push
mov
aam
mov
adcb
mov
inc
xor
int3
add
nop
mov
repnz
sbb
sahf
jge
mov
fdivs
subb
sbb
aas
xor
add
pop
fs
sar
xor
pusha
insb
xorb
scas
mov
fbld
dec
jo
sbb
xchg
in
or
enter
jb
js
adc
loopne
mov
add
or
mov
or
jp
hlt
nop
push
iret
sti
jl
push
pop
sbb
mov
xor
pop
dec
push
ja
arpl
lret
data16
ljmp
sbb
pop
jle
mov
jle
imul
push
lahf
in
les
mov
mov
cli
sub
mov
lret
and
adc
imul
xchg
insl
and
mov
ljmp
mov
pop
xorl
push
loopne
pop
and
or
shll
pop
xlat
js
cmpsl
pop
shlb
hlt
lret
xor
jne
lea
fnstcw
shlb
int3
rcll
ficomps
jb
imul
popa
cld
mov
jg
lods
insb
xor
lock
mov
cld
in
fcomps
mov
roll
inc
xor
pop
jge
mov
or
roll
xor
sbb
mov
orb
mov
push
add
lods
movsb
dec
and
or
div
push
mov
jecxz
jns
lods
xchg
xchg
xor
adc
imul
xor
test
dec
jecxz
push
aas
je
in
mov
jbe
scas
lods
or
mov
cmpsb
test
icebp
in
loop
ret
push
bound
cmp
push
mov
mov
jle
jg
jno
xlat
js
inc
inc
int3
iret
pop
sbb
mov
orb
je
mov
lret
adc
mov
cld
leave
fnstenv
ds
fisubs
sbb
aaa
cmp
clc
sbb
je
aad
pop
imul
hlt
mov
and
popf
pop
scas
dec
xor
insb
stc
mov
push
mov
add
addr16
ret
mov
cmp
aaa
lock
ja
aas
and
insl
xchg
mov
mov
xchg
mov
dec
cmpsb
subb
xor
lods
inc
out
out
clc
jmp
push
dec
jg
pushf
push
lods
ret
bound
clc
jmp
jb
xchg
fs
les
adc
das
cmp
imulb
xor
andb
push
shr
int
adcl
mov
adc
sub
fildl
sbb
mov
dec
pop
mov
xor
mov
test
xchg
add
or
cwtl
sbb
popf
pop
add
aas
testb
mov
lcall
jge
jnp
xlat
addr16
jo
add
cmpsb
adcl
iret
test
cltd
pop
cmp
fwait
mov
mov
int3
cmp
andl
ljmp
mov
xor
aaa
mov
gs
inc
mov
aaa
push
pop
aas
mov
sbb
push
cli
lods
lds
cmp
in
testb
cmp
shlb
cmp
test
jl
adc
fstpt
ljmp
pop
adcl
ja
jo
inc
jb
add
push
sub
cmp
jle
iret
and
lcall
cmpsl
lds
hlt
lret
or
ffreep
ja
lret
gs
cmp
stos
inc
insl
out
and
pop
jle
lods
or
push
sub
mov
in
mov
test
sahf
mov
sti
das
or
push
pop
jg,pn
rcrl
rolb
cld
arpl
loope
repz
cmp
jno
in
dec
mov
and
push
xchg
xor
sbbl
mov
push
jae
aaa
lret
jmp
stos
stc
hlt
dec
sub
cmp
jbe
stos
lods
and
pop
iret
dec
negl
push
cmp
xchg
fwait
std
sbb
add
rcll
mov
mov
push
call
rcrl
test
pop
ljmp
pop
xchg
fsubrs
xchg
sbb
stc
fcmovne
or
call
xchg
cwtl
ljmp
or
mov
lret
cmpsl
mov
cmp
sbb
jno
clc
gs
fistps
push
shr
aad
mov
cmpsl
jb
test
insb
ss
dec
fs
rorl
fistpl
dec
sbb
hlt
daa
fs
cmp
adc
repz
add
or
or
xchg
mov
xlat
xor
movsl
jge
daa
ffreep
lods
rorb
mov
adc
push
mov
xchg
xchg
jne
aaa
notl
xchg
push
xchg
addr16
cmp
push
adc
insb
xor
add
and
lcall
jo
adc
into
shlb
lret
push
inc
add
mov
mov
les
scas
inc
adc
dec
mov
sar
js
jo
ret
imul
test
fs
incb
inc
xor
cmp
mov
jle
icebp
adc
movsl
icebp
push
xchg
cmpb
jp
jb
pop
imul
xor
xchg
lock
imul
adc
xorb
jge
popl
mov
ret
int
sub
icebp
mov
lods
mov
adc
shrl
stc
call
mov
pop
add
cs
mov
dec
lret
es
xor
cwtl
xor
xchg
lcall
in
push
idivl
mov
inc
cs
nopl
dec
push
mov
jp
jnp
lds
inc
jae
outsl
and
mov
js
cmpsb
repz
adc
xor
aam
ret
icebp
add
ljmp
xor
stc
add
add
xchg
push
pop
and
or
lock
xlat
js,pt
or
and
sub
out
aam
add
mov
roll
imul
sbb
jb
clc
or
sbb
adc
jl
rolb
and
das
fistl
adc
js
mov
push
ss
xchg
das
sti
das
test
lds
sahf
inc
mov
out
and
or
je
movsl
xor
xchg
dec
adc
push
xlat
sbb
push
lods
mov
mov
cld
das
stos
xlat
aaa
lret
test
push
repnz
dec
xlat
push
imul
das
loopne
fmulp
cmp
jno
xor
repnz
sub
loop
ljmp
out
jp
cli
adcb
decl
adc
xor
mov
dec
cmpsb
jnp
sub
lret
data16
enter
call
movb
xor
out
shrb
outsl
or
daa
cmp
and
sub
adc
jp
and
xchg
lahf
into
xlat
push
push
inc
inc
jg
jnp
push
sbb
jae
xchg
sbb
lret
fcmovnb
push
movsb
fwait
iret
or
mov
mov
icebp
pop
pop
sub
pop
icebp
xchg
sub
dec
mov
shrl
xchg
jbe
inc
sbb
lahf
fldl
push
and
mov
xchg
cld
push
adc
mov
jo
and
jns
cmpsl
lcall
out
mov
test
sub
push
jg
xorb
in
mov
sub
in
inc
or
pop
or
lods
xchg
rcrl
pop
jmp
shl
jmp
sahf
into
decb
fwait
ljmp
xor
pop
mov
dec
pop
xchg
lods
adcl
jl
jecxz
jge
fnsave
mov
icebp
and
insb
outsb
inc
lods
pop
rcrl
icebp
test
ljmp
sbb
or
notl
inc
pop
adcl
and
pop
arpl
mov
insb
cmp
xchg
clc
aam
xchg
sahf
pop
push
push
and
cmp
pushf
sub
lcall
fs
subb
rcr
dec
xor
xor
inc
lods
movsb
cmp
hlt
adc
call
and
cli
adcb
iret
movsb
incb
pop
xchg
mov
inc
mov
in
pusha
xor
jp
pop
push
adc
stos
mov
or
loope
and
mov
fimull
add
lret
stos
sbb
out
shll
mov
lret
repnz
pop
cmpsb
movsl
das
adc
mov
pop
and
jecxz
call
xchg
or
and
jne
les
mov
pop
sbb
mov
xchg
in
sub
movsb
mov
inc
jb
cmpl
adc
int3
push
cmp
xchg
repnz
dec
rcrb
xchg
movsl
sbb
mov
in
dec
mov
dec
out
arpl
mov
mov
cltd
out
fcmovbe
inc
adc
lcall
inc
push
icebp
sysenter
sbb
mov
xchg
jg
clc
mov
jb
ret
dec
scas
add
popa
lds
repz
xchg
inc
mov
jg
hlt
inc
jge
push
jle
pop
sarl
aam
movsl
sbb
lret
sub
test
mov
pop
jo
repz
jae
xor
add
xor
popa
sub
repz
int3
or
jg
into
jp
mov
iret
xchg
sbb
fs
dec
sbb
cmpsl
mov
je
xor
or
test
cld
cld
mov
sub
fcoml
js
push
stos
xlat
adc
pop
outsb
in
inc
rorl
scas
xchg
adc
jle
inc
sbb
push
movsb
adcl
cwtl
or
cli
mov
sbb
and
data16
iret
inc
cwtl
add
push
sbb
xchg
push
and
dec
test
pop
int3
jge
pop
push
insl
xchg
sarl
adc
mov
mov
add
jae
stos
loop
lea
adc
xor
mov
jle
out
add
and
es
xchg
ja
dec
fldcw
dec
jns
jp
pop
mov
xchg
and
fldenv
dec
mov
call
inc
sbb
xor
fcmovnu
dec
xchg
sti
pusha
push
add
movsb
inc
call
mov
fisttpll
out
lds
inc
aaa
in
add
jo
dec
into
mov
popf
les
repz
lds
imul
pop
lret
or
push
mov
cmpsb
popf
xlat
xor
xor
or
jle
outsb
mov
sub
add
jmp
or
pop
inc
dec
scas
out
ljmp
mov
mov
and
xlat
cmp
shr
push
pop
mov
lods
push
mov
aas
jbe
mov
add
fwait
clc
fisubl
test
or
leave
pop
fildl
and
inc
js
sub
inc
in
enter
test
out
pushf
add
lds
xor
loop
outsb
inc
fisttps
add
out
addr16
cld
iret
jge
or
cmp
add
enter
fldt
lcall
or
inc
mov
jae
cld
aas
sub
imul
lret
and
sub
xchg
popl
imul
sbb
push
pop
cmpb
in
jp
enter
mov
cmp
push
jo
mov
test
xchg
loope
lock
sbb
adc
sub
inc
lock
das
jo
xor
push
cs
movl
sub
std
data16
sahf
enter
mov
pop
inc
ret
push
pop
jp
xchg
sub
clc
aam
fsts
mov
sti
int3
and
outsb
and
insl
popf
repnz
mov
ljmp
dec
fs
xor
mov
jno
aad
out
into
in
lret
sub
mov
and
into
shll
popf
sbb
mov
insl
into
lcall
pop
js
push
lods
or
mov
mov
mov
push
jmp
cmp
pop
mov
call
jge
sbb
jns
jle
pop
mov
xchg
jbe
mov
sub
adc
jecxz
lods
jmp
mov
mulb
pop
daa
lea
inc
mov
aaa
mov
dec
inc
and
scas
lods
mulb
aaa
imul
insl
pop
adc
in
aad
lcall
div
mov
push
shll
cmpsb
pop
mov
mov
cmpsl
jge
jo
mov
out
shll
bound
cmp
jbe
dec
xorl
addr16
mov
push
cmp
cmpsb
call
mov
xor
push
mov
cmpl
icebp
js
jnp
and
jmp
cmp
daa
pop
mov
xor
scas
lds
cmp
aaa
and
pop
mov
arpl
mov
push
or
add
mov
fisubrl
sbb
xor
repnz
sbb
mov
xor
pusha
daa
scas
popf
mov
inc
fidivrs
aaa
cld
js
pushf
lea
out
adc
imul
fs
adc
movsb
cmp
lahf
sbb
aaa
push
cmp
or
scas
stos
xor
jnp
ja
aas
mov
mov
pop
jmp
das
sub
mov
push
popf
leave
xchg
cmp
sub
mov
xlat
shrd
into
std
inc
mov
fiaddl
jbe
mov
sti
jbe
fistpl
les
xchg
sbbb
cmp
add
xchg
stos
push
adc
push
ret
mov
xchg
dec
mov
jno
adc
xchg
or
mov
bound
orb
fucomip
ja
subb
mov
insb
and
xchg
and
hlt
mov
xchg
push
hlt
add
out
pop
aad
jge
or
sub
xlat
pusha
dec
nop
pop
bound
lods
add
xchg
cmp
ret
mov
int3
xchg
into
adc
jne
sub
dec
jle
push
jae
js
cmpb
jne
pop
pop
lods
xchg
add
mov
test
cmp
cs
xchg
in
sbb
jmp
aaa
iret
mov
jg
hlt
imul
mov
neg
int
adc
jle
fldcw
out
add
fwait
mov
divb
or
adc
lcall
fldcw
in
test
sub
clc
inc
mov
jnp
sbb
pop
pusha
insb
mov
je
dec
jle
je
pop
dec
adc
mov
push
jb
nop
sub
mov
loopne
jp
add
scas
jbe
bound
std
push
jne
fnstsw
imul
and
cld
popf
xor
das
jle
and
push
shlb
mov
jle
repnz
mov
xchg
lret
stc
mov
xlat
fadd
and
push
cld
addb
call
es
dec
lcall
pushf
loopne
loope
js
xchg
fcom
sbb
pop
jmp
sub
icebp
insb
xchg
or
ss
or
or
mov
push
sbb
lock
sub
mov
iret
sti
sbb
mov
dec
mov
test
data16
aam
adcb
sbb
ret
sbb
into
fs
push
sub
cmp
mov
sub
xchg
nop
imul
test
jg
mov
jmp
add
inc
mov
jbe
mov
cmp
mov
inc
jmp
push
inc
xchg
mov
cmpsl
iret
jge
dec
inc
test
xor
and
mov
cld
mov
dec
stos
mov
jmp
mov
clc
lahf
cmp
fmull
or
mov
mov
adc
cltd
push
out
and
fwait
test
cmp
push
dec
int3
cmpsb
popf
jae
roll
inc
arpl
xchg
jo
xor
popf
sub
mov
sub
and
mov
cmp
icebp
pop
loopne
lock
and
mov
cmpl
lcall
sbb
mov
loope
test
inc
into
push
push
jmp
adc
lret
pop
inc
in
add
cmp
cs
push
dec
mov
or
inc
in
test
mov
jmp
xchg
lahf
movsl
enter
js
push
aad
sahf
popf
inc
cld
or
cmp
mov
push
jb
daa
sti
stc
xchg
dec
sarb
loope
pop
xchg
int3
scas
popa
adcb
pop
ljmp
push
fidivs
lahf
mov
xor
lahf
push
xchg
push
stc
pop
inc
sti
xchg
pusha
movsb
xchg
dec
xor
pop
outsl
lds
test
lds
jmp
xor
push
sti
and
stos
pusha
push
shrl
movsb
dec
mov
xlat
or
sub
add
sbb
mov
rol
jl
lock
sti
loope
add
insl
std
or
xchg
dec
cmp
mov
idiv
jle
repz
pop
movsb
pop
loopne
mov
jmp
add
adc
lret
or
push
aas
repnz
std
jmp
mov
xor
sbb
std
ret
popa
inc
dec
testl
imull
ret
inc
outsb
or
lods
xlat
sub
push
lret
mov
adc
jae
outsl
mov
cmpl
jnp
cwtl
enter
inc
inc
xlat
cmpsl
xchg
push
lret
xchg
xchg
push
push
add
bound
jg
mov
rclb
add
lods
xchg
push
icebp
scas
cmpsl
mov
or
movsl
mov
sub
lods
or
sub
fdivs
jl
sub
lock
sub
mov
pop
mov
loop
insb
push
or
popf
scas
imul
or
mov
pop
arpl
adcl
bnd
jle
cwtl
mov
test
fwait
sub
sbb
aas
inc
pop
test
mov
jo
cmpsl
mov
subb
jae
pop
fnstcw
dec
jne
ja
aas
mov
mov
sahf
push
ds
push
pop
je
and
or
ret
fimull
shr
dec
xchg
into
cmp
int
pop
and
arpl
insb
dec
into
ret
lds
mov
movsl
test
movsl
and
push
data16
daa
jg
adc
ss
jp
lds
xor
loop
movsl
outsb
movsl
push
in
sarb
or
cmpsl
and
cmp
or
sarl
adc
sbb
popa
lahf
sub
shrb
or
test
in
je
testl
adc
jmp
arpl
mov
aas
fdivs
or
jmp
jnp
jns
rolb
lret
dec
into
pop
push
mov
cmpsl
lret
inc
jle
jp
cwtl
and
push
inc
jl
sub
ja
xor
mov
mov
aas
ret
xor
fsubr
into
in
inc
out
mov
rcr
repnz
jb
hlt
fs
out
cltd
cmp
rolb
jne
sub
jg
jle
imul
pop
or
loope
pop
jmp
inc
pop
jg
mov
mov
sbb
and
daa
imul
xlat
stos
pop
lahf
repnz
and
aas
cmp
scas
xor
bound
into
fcomps
and
fistpll
pop
cs
les
cmpsb
sub
lods
ret
in
sub
cmpb
arpl
test
mov
loope
cmp
sub
or
test
lcall
mov
mov
ret
jo
mov
andl
dec
xchg
push
or
adc
dec
push
jmp
fmull
jae
and
dec
test
jge
les
ret
jo
fs
mov
and
and
insl
sahf
subl
push
mov
cld
mov
in
bound
je
je
shlb
mov
outsl
push
movsl
outsb
pop
inc
movsl
xchg
sub
push
out
fstl
add
cld
shrl
js
sbb
fstp
jg
outsl
cmpsl
xchg
mov
clc
sbb
mov
loopne
xor
aad
lock
fisubrl
inc
xlat
fcmovu
mov
rclb
push
jno
lods
enter
lods
shufps
sub
test
adc
loopne
cltd
mull
and
dec
push
xchg
hlt
in
inc
ss
jle
lret
jmp
inc
cmp
test
mov
jo
movsl
in
or
adc
add
cmp
mov
push
pop
fdivs
xchg
sbb
mov
out
out
fisubl
testb
pop
dec
lea
bound
mov
mov
outsb
lret
xor
jg
mov
jmp
or
or
in
mov
or
push
mov
dec
ja
in
negb
cmc
sti
and
daa
movsb
ficompl
pushf
inc
adc
inc
test
movsl
inc
mov
jp
mov
call
jmp
dec
sub
ret
add
insb
cmp
push
mov
std
subb
jg
in
pop
pop
popa
add
xor
xchg
xlat
loope
cmp
fmuls
enter
add
fbstp
inc
and
cmp
scas
jecxz
xor
inc
xchg
addb
daa
loopne
push
mov
xchg
push
and
cmc
in
mov
fldcw
or
in
or
mov
ret
cli
cwtl
mov
mov
fisttpll
mov
scas
ret
fisubs
les
mov
mov
jne
inc
jecxz
loop
cmpsl
push
pop
dec
cmpsb
sti
adc
inc
mov
mov
inc
and
shll
jnp
dec
fsts
in
mov
cmp
sbb
mov
mov
or
push
jmp
sbb
fdivrl
jmp
jae
int
andl
repnz
mov
cltd
jbe
aas
aas
jmp
lds
fcoml
test
repnz
iret
or
lret
lcall
cwtl
in
push
imul
sbb
stc
push
xchg
je
daa
sbb
outsb
mov
jnp
inc
iret
xor
push
jle
sbb
cmp
repz
insl
dec
les
mov
xchg
push
call
pusha
fadd
std
cmp
mov
xchg
jmp
xor
or
sahf
imul
fisttpl
mov
mov
cmp
scas
mov
xor
and
push
aad
push
ds
sub
mov
enter
call
in
jl
mov
and
shrl
inc
adc
pop
xchg
outsl
bound
hlt
xchg
push
int
js
lock
into
dec
pop
je
inc
mov
mov
sub
xchg
dec
aad
inc
in
jne
inc
pop
ret
mov
in
movsb
sbb
ja
enter
shrl
aad
lcall
popa
fwait
shll
ljmp
adc
test
jb
rolb
ljmp
pop
repz
addl
xchg
int
in
jle
xchg
dec
gs
loope
mov
imulb
notb
and
mov
inc
cmp
xchg
mov
sub
ja
jg
and
cmpsb
out
aam
jge
jmp
mov
mov
into
jmp
cs
scas
sbb
leave
cmp
lret
jae
inc
loopne
jnp
cmp
mov
inc
or
jbe
lret
and
adc
in
adc
dec
and
inc
mov
add
mov
mov
ss
jmp
cmpsl
cltd
pop
and
cs
xchg
jle
mov
or
jmp
sub
out
pop
daa
and
lret
xchg
xchg
mov
outsb
sub
mov
or
movsl
out
cmc
sti
push
icebp
outsl
mov
test
dec
rorb
adc
or
and
lea
xchg
das
xchg
and
ja
jbe
lods
std
outsl
gs
adc
leave
roll
enter
loop
sar
sarl
or
mov
aaa
aas
ret
xchg
jge
pause
in
sub
sbb
das
jbe
or
mov
ffree
sbb
inc
loopne
fsub
push
out
jecxz
int3
mov
in
out
xlat
jne
cmp
mov
div
lahf
sbb
push
into
xchg
pop
mov
inc
dec
notb
fdivrs
insl
nop
fstl
xor
sub
loop
clc
fisttps
movsl
inc
loop
scas
sti
sub
int3
or
ret
popa
out
dec
inc
out
jns
and
fcomps
out
test
adc
into
repnz
fadds
gs
bound
aam
out
movsb
sub
lds
sahf
jns
mov
rcll
or
jmp
mov
inc
push
mov
inc
push
in
out
lock
or
push
or
lret
lods
jo
sub
fcmovbe
fsubl
inc
int3
pop
xchg
jg
test
mov
sub
imul
adc
or
mov
mov
jae
push
push
mov
dec
movsl
cli
push
pop
loopne
aas
cmc
inc
adc
aad
add
dec
xchg
mov
sub
hlt
sahf
int
movsb
push
jp
call
gs
je
sti
lahf
push
xchg
xchg
mov
les
or
roll
rorl
sub
aam
push
cwtl
icebp
cmpsl
inc
jl
and
push
in
push
pop
mov
bound
adc
pop
gs
xchg
aaa
xchg
fistps
push
std
movsb
pop
lret
xlat
xor
ret
push
push
jnp
sbb
enter
push
mov
push
stos
mov
ret
int3
repnz
jmp
roll
pop
and
sbbb
pop
and
xor
pop
ljmp
out
xchg
rolb
icebp
pop
and
leave
pop
jmp
daa
sti
or
leave
xor
insl
push
add
lock
test
stos
inc
imul
push
imulb
pusha
lods
mov
mov
enter
sub
test
sbb
adc
push
and
jecxz
out
push
nop
jmp
jne
add
sbbl
add
int
cmpsb
cltd
hlt
hlt
les
and
mov
stc
lea
std
std
mov
jns
adc
jl
or
ret
add
rcl
cld
shlb
xor
sub
jae
test
popf
loope
inc
ja
push
dec
cmp
in
stos
push
pop
mov
push
mov
imul
lock
cmc
mov
xor
jae
add
out
mov
aad
aad
data16
in
stos
loopne
aad
ret
push
add
cmp
lock
aad
addr16
or
xor
test
bound
jo
mov
repz
inc
xchg
popa
inc
call
add
dec
sbb
into
call
arpl
mov
lods
outsl
xchg
jne
fnsave
xchg
sbb
dec
xchg
xor
pop
rorb
jl
das
sti
test
cltd
add
loope
sub
xor
bound
ficoml
and
and
in
les
mov
adc
xchg
adcl
cwtl
dec
cli
cltd
orb
or
and
cmpsb
inc
mov
mov
cmp
or
pop
fisttpl
xchg
push
push
lods
pop
sarl
or
push
xor
mov
iret
and
and
jns
sbb
mov
fisttpl
mov
xor
dec
sbb
push
jnp
xchg
out
jecxz
rcl
iret
xchg
lods
adc
jg
in
push
lret
outsl
inc
push
mov
adcl
insb
ja
in
test
push
arpl
inc
in
fidivrl
inc
gs
xor
sahf
lcall
jns
push
adcb
aaa
cmp
jecxz
mov
and
inc
pop
or
cmc
sbb
shrl
cld
mov
mov
mov
mov
in
std
dec
adc
xor
scas
sub
je
fs
js
cmp
stos
outsl
call
cmp
test
cli
inc
mov
inc
inc
xor
addr16
cmpsl
dec
xor
mov
jae
popa
mov
pop
xchg
inc
sbbb
insb
xor
nop
cmp
clc
pop
push
push
mov
push
lods
pop
inc
shrl
add
out
lods
rorb
inc
into
inc
mov
mov
movsl
cwtl
int3
sbb
mov
jl
repnz
pop
xor
dec
inc
push
fadd
mov
rcrl
popf
out
out
jl
cmp
sbb
aaa
lds
fistpl
mov
jp
in
cmp
movl
dec
cld
loop
sbb
and
jno
fucomip
imul
or
push
mov
insb
cmp
xchg
xchg
mov
stos
test
xor
adc
mov
out
xlat
mov
inc
mov
repz
aam
out
pop
push
xchg
stos
bound
lods
inc
pop
jae
or
cs
enter
dec
ret
fists
push
cmpsl
in
sbb
loope
enter
jp
xchg
xor
jbe
sbb
push
int
call
and
add
in
xchg
pop
push
xchg
call
push
iret
cli
jo
push
shrl
cs
mov
mov
iret
xchg
test
loope
mov
jl
inc
pop
clc
pop
mov
hlt
jmp
test
mov
in
out
push
sub
inc
fsubp
or
mov
sub
mov
fimuls
xchg
cmc
inc
pop
mov
pop
fwait
iret
xchg
in
push
mov
test
jmp
cmp
fnstcw
inc
cmp
pop
out
insb
xor
mov
pop
aaa
fmull
pop
sbb
inc
in
jle
and
xor
aad
out
adc
or
outsl
sbbl
and
jg
inc
xchg
jne
es
sbb
mov
push
xchg
and
movsl
and
jae
dec
out
or
out
pop
push
leave
je
push
sbb
push
in
mov
lea
and
data16
sub
cmp
push
pop
inc
xchg
pop
lock
iret
sub
ljmp
shr
inc
inc
leave
or
lcall
jo
xorb
test
push
lcall
pop
enter
fldenv
and
lods
ror
in
aas
jo
xchg
int
aas
repz
rcl
add
add
nop
sbb
push
sub
mov
push
rorb
out
xchg
mov
push
aas
sub
jno
sti
xor
loope
dec
rcr
and
bound
test
lock
int3
pop
adc
lea
cmp
loop
jge
push
imul
lea
hlt
mov
movsb
inc
arpl
jb
mov
mov
push
repz
iret
pop
xchg
push
cld
pop
lret
cld
sbb
gs
aad
outsb
jge
jae
imul
test
cmp
test
add
lds
lahf
xchg
bound
inc
cmp
inc
jo
and
repnz
int3
push
mov
cmpb
inc
mov
and
bound
scas
sub
cmp
fsubs
pop
mov
mov
add
lahf
xchg
inc
cld
lods
fxch
popf
int
cmc
mov
push
mov
std
inc
and
inc
inc
and
call
or
xlat
popf
sarb
enter
mov
idivl
mov
nop
lahf
fmul
pop
jne
adc
test
mov
mov
jno
jb
push
aaa
xor
xchg
popf
sbb
sbb
popf
dec
aad
pushf
add
xchg
mov
aaa
push
xor
or
jne
hlt
mov
or
jno
loope
mov
and
inc
pop
aad
out
push
shlb
leave
cmp
pop
jbe
push
clc
cmp
pop
pop
les
lods
add
aad
rclb
xchg
fsubl
adc
mov
and
mov
decl
xchg
sbb
out
call
mov
daa
mov
test
addr16
jae
push
lock
mov
icebp
or
into
push
pop
mov
test
insb
loope
jecxz
aad
in
sub
pop
insb
pop
loopne
stos
mov
ljmp
mov
mov
cmpb
push
or
push
inc
ffree
aas
nop
xchg
adc
pop
ret
dec
sarb
les
std
mov
push
lds
lahf
sub
cmp
test
fwait
add
mov
bound
dec
insl
sysret
jge
or
jbe
ds
sub
nop
jmp
ja
cld
fs
in
adc
jne
cmpsb
movsb
inc
call
adc
lods
mov
pop
mov
dec
and
cmp
mov
xchg
fwait
repz
ljmp
jns
xchg
lods
push
repz
sub
dec
mov
ja
std
out
scas
arpl
aas
dec
fiadds
sahf
ret
mov
cmp
out
xchg
push
xlat
mov
jno
mov
aad
jb
jl
bound
shll
stc
js
imull
mov
dec
sbb
negb
aaa
jae
or
neg
testl
dec
pop
loopne
push
pop
pop
jae
jne
jno
mov
jo
pop
fldenv
sub
xor
gs
nop
aaa
ret
mov
xor
cli
leave
xorb
adc
xchg
cli
mov
pushf
or
js
ds
lahf
js
jl
jg
push
popa
lods
int3
clc
lret
mov
pop
adc
insb
xchg
shlb
lods
pop
lock
xor
int3
mov
test
cli
sub
cwtl
ljmp
aam
fmull
mov
adc
rcll
push
cmp
fwait
popf
pxor
pop
or
adc
stos
lret
ss
test
jb
adc
bound
sarl
and
mov
cmp
sbb
xor
stc
xchg
dec
xchg
test
pop
outsl
test
clc
movsl
cli
mov
aas
xchg
jne
and
cltd
and
ret
inc
nop
adc
cmpsb
inc
or
movl
sti
pop
int3
adc
aas
daa
in
pop
out
inc
arpl
xor
xchg
hlt
jns
out
and
nop
insb
sub
mov
adc
lret
push
fcomip
xor
cmp
inc
insl
xorl
xor
mov
fwait
cmc
jg
aam
repnz
call
push
and
pop
loopne
adc
js
inc
data16
stc
push
outsl
mov
jl
pop
test
mov
cltd
jge
adc
jbe
xchg
rclb
adc
push
sbb
sub
fwait
das
cwtl
dec
mov
pusha
das
fimuls
loope
or
adc
sbb
push
xor
mov
addl
outsb
data16
and
push
mov
adc
addl
movsl
inc
loop
test
sbb
cmp
push
cmp
mov
leave
lret
popf
sub
cmp
push
push
test
stos
daa
or
adc
mov
pusha
cli
pop
repnz
clc
push
adc
jno
push
mov
mov
fmuls
dec
add
add
lret
scas
pushw
icebp
jb
cmpsb
movsb
mov
mov
push
xor
call
jl
or
pusha
sbb
mov
test
push
pop
hlt
aas
and
repnz
adc
or
incb
sbb
movsl
adc
adc
push
call
inc
add
stc
cwtl
out
repz
rcrb
insl
icebp
mov
add
cli
sub
lahf
repnz
lret
sbb
fwait
dec
push
sbb
jae
fsubp
adc
aas
mov
sti
cmp
scas
pop
cmc
inc
jge
xor
in
aad
icebp
sub
fdivr
pop
xchg
das
imul
movsb
insl
imul
fs
cmp
nop
ja
jmp
popa
inc
mov
and
push
std
gs
jb
xchg
and
pop
insl
fildl
mov
cmpsl
in
jno
sub
iret
and
xchg
pop
or
movsb
fldcw
jb
dec
mov
xchg
je
inc
movsb
sbb
push
pop
std
mov
or
fs
cmpsb
mov
cmp
shr
out
sbb
pop
and
outsb
push
xchg
push
scas
lret
jno
pop
or
fldt
mov
mov
bound
and
fstl
js
mov
gs
outsb
inc
cld
adc
es
add
pop
dec
lock
imul
mov
inc
mov
mov
push
fdivrl
mov
out
sub
ret
cmc
imul
xor
push
sub
dec
push
mov
aam
test
push
mov
mov
jle
das
push
cmp
js
mov
int3
sub
jmp
pop
data16
ljmp
and
cltd
fadd
add
ja
adcb
jno
lods
jl
test
cmp
mov
rolb
lcall
and
adc
xchg
mov
push
push
test
pop
add
push
divb
dec
or
ds
cmp
cmp
jnp
dec
mov
mov
and
mov
loope
enter
out
fisubs
nop
xchg
sbb
mov
mov
mov
jb
mov
push
mov
cmp
ret
int3
ret
mov
add
in
inc
enter
xlat
pop
lods
adc
dec
sbb
sbb
pop
lcall
mov
mov
cmp
movsl
pop
dec
es
jmp
pop
sub
bnd
sarb
mov
xor
and
jae
outsl
dec
mov
or
pusha
fsubs
push
arpl
orl
insl
adc
and
cmp
sub
cmpsl
dec
addr16
add
cmp
adc
lahf
pop
sbb
pop
cmp
add
adc
push
xor
mov
jno
aad
insb
or
jns
push
push
stos
adcb
pop
dec
xchg
jno
xchg
mov
xchg
jmp
push
pop
push
in
test
inc
add
leave
stos
inc
jmp
test
pop
sub
jb
jl
out
pop
cmp
or
outsl
in
cwtl
mov
xchg
aad
cmp
and
jle
cld
xlat
push
ret
popf
sub
sbb
icebp
add
add
lret
les
cli
pop
dec
js
sub
push
adc
test
dec
test
mov
insb
fbld
clc
sar
add
or
xchg
leave
lcall
pusha
popf
push
insb
push
cli
mov
jp
push
lock
lahf
pop
push
adc
roll
mov
jmp
into
fcmovbe
or
inc
adc
inc
es
dec
mov
jmp
aam
cmpsb
mov
aad
sbb
push
and
cwtl
sbb
adc
jmp
das
dec
into
outsb
and
std
in
mov
cld
out
xchg
aas
jg
or
ljmp
xchg
repnz
movsl
jns
fcmovnb
xchg
mov
imul
psubd
push
mov
bound
push
andl
iret
outsb
cmpl
stos
xchg
les
xchg
cltd
out
mov
filds
push
xlat
rol
shll
adc
xor
mov
inc
sbb
pop
push
cs
cmp
fldenv
ficoms
stos
mov
inc
leave
data16
iret
mov
jp
das
int
into
fs
loope
jne
movsl
std
divl
and
push
cmc
int3
xor
stc
test
mov
ljmp
mov
mov
jbe
imul
popa
cwtl
push
sub
rclb
arpl
int
lret
push
stc
stc
arpl
aam
or
and
shl
aas
pushf
cmpsb
sub
pop
imul
divps
jecxz
test
or
mov
cmp
jp
mov
push
test
mov
stos
daa
out
sub
loope
or
jl
sbb
and
loopne
popf
mov
stos
inc
inc
rcl
jle
pop
ret
mul
pop
jp
repz
call
loop
movsb
in
stos
dec
xchg
lea
sbb
pop
imul
adc
sbb
add
or
jne
pop
sub
or
jne
inc
loopnew
or
fnsave
movsl
mov
stc
aaa
insb
mov
mov
repz
sahf
ss
jl
dec
jl
je
pop
lret
mov
scas
or
sbbl
mov
cmp
xchg
pop
jg
jb
leave
mov
dec
dec
mov
dec
out
cmp
xorb
mov
das
dec
pmullw
xor
test
sbb
stc
jo
adc
es
dec
into
or
inc
sub
push
bound
push
mov
add
repnz
push
adc
mov
and
mov
enter
fsubs
test
mov
pop
mov
push
test
adc
clc
fistpl
enter
pop
cmp
outsb
and
pop
add
jmp
aam
rcll
xchg
push
cmp
push
cmc
push
fmull
adc
xor
lds
inc
xlat
pop
jge
mov
jge
testb
loopne
stos
cmpsb
or
loope
xchg
fcomps
test
out
fistps
mov
clc
adc
sbb
xchg
adc
sbb
mov
inc
icebp
add
push
and
movsb
fsubrl
or
push
jmp
and
ja
xchg
lret
push
fadd
sti
xor
lods
push
lret
pop
mov
xchg
loop
fwait
dec
dec
mov
mov
pop
cmc
in
rcll
push
lea
pop
xor
cmp
movsl
push
out
movsb
mov
sbb
sub
shl
pusha
jg
cmpsb
std
push
xchg
test
lds
loope
mov
mov
xor
rcrl
stos
out
inc
cmp
cmpsl
test
jne
stos
xchg
mov
pop
and
jmp
in
jge
sub
pop
jnp
adc
jp
cmp
je
dec
mov
mov
cwtl
xchg
mov
mov
shll
sbb
mov
pop
pop
adc
or
js
xchg
das
xor
xorl
mov
sub
stc
es
test
mov
fldt
in
loope
repnz
push
push
add
dec
cwtl
cmp
les
pop
jg
lret
jmp
pop
jne
call
ljmp
cmp
push
in
mov
push
xor
pop
xchg
adc
in
enter
das
scas
and
jg
pop
add
push
out
cmpsl
pop
pop
cltd
sbb
lret
das
pop
fwait
cmpsb
ret
inc
outsb
sbb
jp
sti
shll
aas
out
cmpsl
out
jl
ja
pop
xchg
daa
push
dec
gs
shll
jecxz
imul
shlb
fdiv
xchg
inc
push
test
adc
outsl
inc
inc
scas
mov
loop
mulb
fisubl
mov
aam
jge
ds
dec
lds
lds
in
jp
test
inc
mov
xor
mov
repnz
sbb
addr16
out
xchg
in
mulb
mov
dec
lret
mov
xchg
inc
rolb
jns
rcll
mov
inc
xchg
sbb
mov
pop
js
mov
push
push
aas
mulb
int3
pop
pop
repnz
push
scas
fists
mov
mov
pushf
dec
shlb
push
ja
ja
sub
wbinvd
lret
mov
out
cmp
pop
icebp
int
xchg
push
mov
jns
test
cltd
sbb
jecxz
mov
mov
and
mov
daa
fwait
iret
rclb
push
inc
in
mov
push
push
sub
adc
or
push
lahf
scas
icebp
sbb
or
shrl
imul
mov
mov
add
push
jg
scas
popf
jp
test
jmp
jmp
icebp
in
mov
stos
pop
mov
jno
mov
mov
add
mov
xor
cmp
push
ss
ktestw
or
in
aam
iret
popa
adc
mov
iret
loop
inc
jge
mov
and
test
ficoms
xor
inc
sarb
dec
pop
add
add
cmc
jle
jecxz
loope
mov
movsl
jns
out
jge
xlat
pop
push
dec
imul
andb
xor
pop
outsb
hlt
hlt
icebp
jne
int3
ret
test
xor
pmulhuw
mov
xlat
jbe
out
shl
movaps
add
mov
xchg
je
mov
or
cld
push
adc
bound
xchg
and
aaa
xor
insl
imul
dec
mov
sub
andl
xchg
test
iret
xlat
mov
insl
jle
jmp
push
push
ficoms
xchg
cli
pop
cs
pop
pop
adc
push
arpl
mov
pop
out
test
lods
jge
cltd
les
insb
mov
lret
add
jg
pop
mov
sahf
aaa
xchg
push
fcompl
jae
outsb
jg
jnp
xor
ljmp
sbb
and
fld
loop
cmpsb
loop
mov
mov
les
push
scas
adc
push
scas
and
out
rdpmc
jnp
mov
jecxz
sar
bnd
pop
lock
out
adc
xchg
cmp
cld
cmp
cltd
arpl
and
pop
nop
mov
test
jb
outsl
mov
cmp
daa
cwtl
or
mov
int
and
mov
cmp
imul
xchg
dec
mov
mov
decb
xchg
ror
cwtl
mov
fistpl
and
and
sub
xchg
dec
scas
lock
pop
jle
shl
inc
mov
push
inc
xchg
cli
pop
jle
and
mov
imul
imul
adc
add
pop
inc
loop
mov
fscale
mov
pop
xchg
pop
add
ljmp
cmp
shll
popf
div
lahf
push
movsb
bound
cld
bound
jp
xor
mov
push
out
orb
leave
xchg
test
pop
icebp
inc
inc
inc
jnp
sub
pop
add
sbb
mov
xchg
gs
shlb
jbe
ret
sbb
fisubs
sub
icebp
cmp
cmp
mov
push
add
mov
bnd
cmp
pusha
and
sahf
mov
or
dec
rolb
push
inc
addb
or
inc
in
mov
repnz
pop
jp
xchg
pop
shr
aas
stc
loop
inc
sti
pop
insb
xchg
lahf
ret
inc
push
pop
cmp
les
fcoms
dec
mov
ror
aaa
inc
call
mov
jmp
outsl
jo
je
xor
pop
popa
mov
xor
ds
in
sbb
cmp
dec
mov
inc
ret
call
mov
in
dec
pop
testl
mov
add
rcll
call
pusha
dec
jae
int
test
pop
add
cli
pop
dec
and
cli
inc
insb
fadds
pop
mov
dec
pop
cmpsl
test
stos
cmp
sub
fdivrl
xchg
mov
push
pop
jbe
sbb
push
in
mov
mov
notl
push
xchg
nop
mov
roll
nop
enter
sbb
fstp
out
flds
xor
adc
pop
inc
das
mov
pop
gs
inc
aad
mov
mov
sarb
mov
add
sub
and
scas
jns
idivb
mov
ja
enter
and
nop
dec
sub
sub
loopne
fidivl
cmp
adc
popa
sbb
adc
dec
pushf
and
mov
out
xchg
mov
stos
dec
out
stos
jno
orb
jns
adc
hlt
mov
jae
popf
mov
mov
adcb
popf
mov
adc
ja
mov
mov
mov
pop
mov
push
fucomip
cmp
pop
mov
jne
or
call
mov
xchg
daa
sbb
mov
jnp
xor
outsl
aad
adc
fldl
and
fwait
fwait
ljmp
or
push
cmovge
aaa
in
popa
pop
and
mov
insl
cmp
push
sbb
sbb
mov
pop
push
bound
or
pusha
stos
jbe
xchg
ficompl
xor
popa
inc
dec
inc
inc
shl
cmp
js
int3
aad
in
mov
pop
pop
push
movsl
inc
repnz
jno
mov
xor
mov
and
in
pop
scas
sbb
xchg
fcmovnu
ret
rolb
sbb
mov
test
in
xor
in
incb
fiaddl
test
data16
lock
shlb
sahf
stos
sahf
mov
or
pop
repnz
cmp
mov
aad
or
inc
sub
push
xor
jl
sbb
insl
and
js
inc
mov
mov
iret
inc
loop
repz
xchg
or
adc
fcoml
jl
insl
xor
jl
inc
dec
out
int3
pop
add
push
xchg
cmp
lcall
lock
xchg
sub
inc
jns
outsl
and
mov
push
sbb
into
or
mov
loopne
mov
testl
aam
mov
test
lods
fnstsw
mov
xchg
fmull
jo
mov
and
add
pop
repnz
ljmp
push
aas
push
add
aas
push
addl
sub
fldl
std
enter
cwtl
rcr
pop
scas
jno
ret
fistpl
andb
sbb
jg
outsb
adc
xchg
loopne
mov
fistpll
mov
and
jb
mov
adc
xchg
cmp
sub
adcl
push
inc
pop
mov
mov
xchg
pop
cmp
or
xchg
shrb
testb
leave
adc
mov
daa
fisttpll
pop
push
dec
test
loope
add
gs
in
mov
mov
int
jno
push
lds
mov
cld
xor
cltd
push
testb
ds
shlb
cs
popa
sub
sbb
xchg
js
adc
js
or
sub
jns
popf
scas
adc
int3
inc
mov
jmp
es
jmp
ds
inc
les
add
arpl
push
push
adc
mov
lock
frstor
add
xchg
inc
ja
aaa
lcall
mov
notl
sub
or
mov
inc
orl
fs
xchg
cltd
xor
je
ret
repnz
adc
or
loope
sbb
arpl
jbe
adc
out
lods
dec
in
jmp
lret
fsts
insl
fbstp
add
insb
sbb
nop
jo
xor
popf
sub
pop
inc
scas
or
call
dec
xlat
enter
test
inc
add
xor
jecxz
xor
add
dec
lock
mov
pushf
mov
fadd
aaa
sbb
ja
inc
sbb
fnstsw
mov
push
shrl
or
sbb
test
pop
stos
orb
sbb
mov
in
dec
bound
xchg
lds
adc
add
inc
or
lcall
xchg
cld
cmp
mov
xor
mov
push
mov
lcall
imul
push
or
movsl
push
lcall
xchg
jb
xchg
int3
mov
lock
sbb
mov
mov
dec
call
hlt
div
test
sub
or
jnp
ljmp
nop
es
sbb
ret
hlt
outsl
aaa
sbb
sub
mov
fidivs
inc
pop
xchg
insb
add
into
std
movsb
fiadds
push
cmpsl
inc
test
pop
mulb
mov
cli
idivl
jle
sbb
dec
push
pop
pop
lock
jae
pop
jb
pop
xlat
popf
jl
in
mov
lods
hlt
int3
sahf
add
sahf
or
push
scas
in
push
mov
mov
dec
push
inc
jne
gs
mov
aaa
es
popa
jno
or
mov
stc
test
out
push
cmp
adc
sbb
aas
pop
mov
pop
add
movsl
jecxz
push
aam
and
js
push
dec
fstps
lods
imul
test
inc
push
sbb
xor
cmp
sbb
icebp
neg
insb
les
cmp
jmp
sub
in
rorb
xchg
adc
ds
les
and
cs
dec
lods
or
mov
or
pop
sahf
les
jae
sahf
add
add
cmp
lds
mov
cmp
mov
fisubrs
jns
call
fnsave
mov
cli
mov
mov
fldl
jle
adc
movsl
sti
xor
icebp
jecxz
shl
sahf
xor
stc
in
test
push
lods
and
adc
out
in
sbb
mov
cmp
xchg
mov
ret
jne
and
and
jae
cld
and
add
daa
das
and
xchg
mov
nop
jnp
sub
bound
lea
mov
cmpsl
sbb
mov
sub
push
cmp
pop
in
mov
add
and
mov
pop
ret
mov
adc
mov
push
lret
out
insb
lods
add
call
and
push
add
std
in
sbb
push
test
mov
int
pop
mov
cmpsl
test
mov
adc
sub
mov
dec
cmp
aad
in
loope
insb
aad
leave
push
push
mulb
mov
dec
jle
icebp
and
in
incl
xlat
push
shlb
jp
jl
pop
into
test
cmp
jmp
insb
sub
test
sti
imul
or
lcall
cld
rcll
ja
dec
je
add
loop
sbbb
xor
pop
xchg
mov
pop
xor
xor
fdivrl
mov
lods
out
lahf
or
roll
and
gs
pop
xlat
mov
loop
out
sbb
cmp
jg
test
jl
jo
cmp
mov
and
ret
xchg
dec
mov
sbb
ljmp
adc
cmpl
adc
sbb
jecxz
pinsrw
lock
lahf
repnz
sbb
pop
mov
xor
jno
ja
divb
into
loopne
dec
inc
push
ja
sub
cmp
fmulp
sub
ljmp
pop
mov
icebp
movsb
ret
or
movsl
pop
pop
cwtl
mov
mov
jl
out
inc
cmpsb
imul
and
jno
dec
out
xchg
out
aam
addr16
fbld
sub
aad
mov
xor
mov
and
out
ljmp
in
aaa
daa
push
mov
test
pop
mov
imul
out
jnp
fildl
xor
dec
push
mov
addr16
fisubl
push
shll
data16
mov
outsl
outsb
sub
sahf
xchg
mov
fistpl
jle
rcrb
aam
pop
xchg
lcall
jp
mov
and
and
in
add
movsl
out
ret
stos
push
out
fwait
push
lcall
mov
xchg
gs
das
adc
repnz
jge
add
sbb
sub
cmpsb
push
mov
xchg
les
xchg
xchg
testb
xor
sub
sub
out
inc
sub
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
out
cli
jp
and
xor
pop
adc
cmpsl
sbb
mov
leave
arpl
inc
mov
push
fwait
clc
xchg
jno
jmp
insb
pop
hlt
cmp
lods
mov
out
ret
cmp
jno
ret
lret
jno
fs
data16
loopne
pop
lods
cmovns
imul
test
in
cs
fldenv
mov
xchg
aad
repz
inc
enter
loop
loop
sbb
xchg
mov
pop
rorb
les
hlt
idivl
mov
cs
call
push
jle
push
xor
rolb
dec
insb
sub
jb
pop
inc
stc
test
dec
or
leave
leave
scas
sbb
cld
fcomps
cmpsb
enter
leave
repz
outsl
cmp
pop
les
pop
push
decb
xor
test
fldcw
jge
sub
jno
and
pop
mov
pminub
imul
and
sub
sub
mov
push
movsl
mov
movsl
fsubs
gs
jnp
add
pop
add
add
jp
xchg
or
pop
lock
loop
xchg
sub
or
sbb
sub
int3
mov
inc
cmp
nop
cmp
cmp
mov
ret
clc
fwait
and
pop
aam
pop
ds
mov
lcall
fs
dec
fbld
xchg
int
imul
cmp
popf
popa
push
arpl
dec
pusha
cmp
ret
adc
insb
or
mov
es
jne
jg
imul
mov
mov
jmp
add
lcall
cmp
xorb
mov
jg
inc
aaa
jp
pusha
scas
lods
xor
push
and
and
xchg
popf
sub
pop
imul
xchg
mov
sub
gs
stos
lea
push
insl
pop
and
adc
andb
rol
jnp
mov
fnstsw
sbb
jbe
sbb
push
xor
loop
xchg
in
mov
adc
mov
cmpb
decb
jmp
adc
sbb
aam
xchg
movsl
in
mov
mov
and
dec
jnp
shll
xchg
psubusw
popl
pusha
xlat
xchg
inc
cmp
hlt
sub
mov
pop
xchg
movsl
imul
dec
xchg
fwait
mov
lods
test
xchg
loope
push
pop
jnp
xor
push
in
jns
shrb
repnz
adc
and
insl
mov
and
jno
shrl
mov
ss
mov
fsubrl
gs
loop
mov
iret
pop
cmp
sub
sbb
test
xchg
xchg
add
lods
push
sbb
fsubrp
push
push
outsl
cld
xchg
stos
icebp
sub
push
in
test
sub
push
adcl
clc
mov
cltd
push
outsl
xor
or
vmwrite
ds
outsl
into
pop
in
and
leave
sbb
and
jne
mov
cs
push
sbb
add
int3
lods
adc
jecxz
bound
xor
jmp
push
push
clc
xchg
push
pop
leave
int3
sbb
or
cltd
jb
and
fs
pop
scas
mov
fsubs
shlb
stos
sbb
daa
add
aas
sub
or
and
pop
fs
jle
mov
adc
loopne
xchg
add
push
mov
sub
pop
jge
cmpsb
cwtl
rol
stos
scas
dec
outsl
addr16
aaa
int
mov
mov
addr16
dec
add
or
pop
pop
ds
fwait
iret
inc
stc
mov
pop
adc
push
fidivl
pop
out
push
rcrl
push
sbb
fimuls
jl
dec
in
push
push
pop
xor
sub
push
lods
out
push
aad
ljmp
cld
xchg
in
adc
mov
aad
add
out
cwtl
xchg
jbe
movsb
pop
mov
inc
cli
shl
lret
jg
mov
mov
addr16
or
push
setns
add
ffreep
int3
cmpsb
fldcw
inc
rolb
ss
mov
adc
aam
xchg
push
andl
lods
movsb
nop
scas
lods
pushf
in
sahf
jp
outsl
jg
inc
test
add
in
mov
push
sti
and
fnstsw
inc
push
mov
aas
adc
mov
push
out
xor
push
dec
aad
js
push
lcall
dec
iret
out
lret
gs
mov
adc
cli
arpl
cmpsb
scas
aad
orl
cmp
push
test
or
adc
pushf
in
insb
or
sbb
dec
add
adc
adc
jge
jp
ficoml
push
pushf
int
addr16
je
xor
mov
out
or
iret
lcall
cmp
xor
fisubrl
ficoms
repz
cmp
insb
es
push
cmpsl
mov
add
dec
pop
mov
enter
pop
stos
adc
pushf
psubw
out
push
jns
in
nop
jo
mov
ds
inc
mov
inc
sub
in
enter
sahf
sarl
shl
pop
pop
xchg
stos
lods
mov
cmp
rcrb
lahf
dec
xor
cli
negb
dec
mov
add
inc
bound
add
je
and
inc
and
ss
leave
xchg
pop
js
sub
jmp
shlb
or
negl
push
xor
lods
dec
pop
dec
movl
push
mov
aam
mov
adcb
mov
inc
xor
int3
add
nop
mov
repnz
sbb
sahf
jge
mov
fdivs
subb
sbb
aas
xor
add
pop
fs
sar
xor
pusha
insb
xorb
scas
mov
fbld
dec
jo
sbb
xchg
in
or
enter
jb
js
adc
loopne
mov
add
or
mov
or
jp
hlt
nop
push
iret
sti
jl
push
pop
sbb
mov
xor
pop
dec
push
ja
arpl
lret
data16
ljmp
sbb
pop
jle
mov
jle
imul
push
lahf
in
les
mov
mov
cli
sub
mov
lret
and
adc
imul
xchg
insl
and
mov
ljmp
mov
pop
xorl
push
loopne
pop
and
or
shll
pop
xlat
js
cmpsl
pop
shlb
hlt
lret
xor
jne
lea
fnstcw
shlb
int3
rcll
ficomps
jb
imul
popa
cld
mov
jg
lods
insb
xor
lock
mov
cld
in
fcomps
mov
roll
inc
xor
pop
jge
mov
or
roll
xor
sbb
mov
orb
mov
push
add
lods
movsb
dec
and
or
div
push
mov
jecxz
jns
lods
xchg
xchg
xor
adc
imul
xor
test
dec
jecxz
push
aas
je
in
mov
jbe
scas
lods
or
mov
cmpsb
test
icebp
in
loop
ret
push
bound
cmp
push
mov
mov
jle
jg
jno
xlat
js
inc
inc
int3
iret
pop
sbb
mov
orb
je
mov
lret
adc
mov
cld
leave
fnstenv
ds
fisubs
sbb
aaa
cmp
clc
sbb
je
aad
pop
imul
hlt
mov
and
popf
pop
scas
dec
xor
insb
stc
mov
push
mov
add
addr16
ret
mov
cmp
aaa
lock
ja
aas
and
insl
xchg
mov
mov
xchg
mov
dec
cmpsb
subb
xor
lods
inc
out
out
clc
jmp
push
dec
jg
pushf
push
lods
ret
bound
clc
jmp
jb
xchg
fs
les
adc
das
cmp
imulb
xor
andb
push
shr
int
adcl
mov
adc
sub
fildl
sbb
mov
dec
pop
mov
xor
mov
test
xchg
add
or
cwtl
sbb
popf
pop
add
aas
testb
mov
lcall
jge
jnp
xlat
addr16
jo
add
cmpsb
adcl
iret
test
cltd
pop
cmp
fwait
mov
mov
int3
cmp
andl
ljmp
mov
xor
aaa
mov
gs
inc
mov
aaa
push
pop
aas
mov
sbb
push
cli
lods
lds
cmp
in
testb
cmp
shlb
cmp
test
jl
adc
fstpt
ljmp
pop
adcl
ja
jo
inc
jb
add
push
sub
cmp
jle
iret
and
lcall
cmpsl
lds
hlt
lret
or
ffreep
ja
lret
gs
cmp
stos
inc
insl
out
and
pop
jle
lods
or
push
sub
mov
in
mov
test
sahf
mov
sti
das
or
push
pop
jg,pn
rcrl
rolb
cld
arpl
loope
repz
cmp
jno
in
dec
mov
and
push
xchg
xor
sbbl
mov
push
jae
aaa
lret
jmp
stos
stc
hlt
dec
sub
cmp
jbe
stos
lods
and
pop
iret
dec
negl
push
cmp
xchg
fwait
std
sbb
add
rcll
mov
mov
push
call
rcrl
test
pop
ljmp
pop
xchg
fsubrs
xchg
sbb
stc
fcmovne
or
call
xchg
cwtl
ljmp
or
mov
lret
cmpsl
mov
cmp
sbb
jno
clc
gs
fistps
push
shr
aad
mov
cmpsl
jb
test
insb
ss
dec
fs
rorl
fistpl
dec
sbb
hlt
daa
fs
cmp
adc
repz
add
or
or
xchg
mov
xlat
xor
movsl
jge
daa
ffreep
lods
rorb
mov
adc
push
mov
xchg
xchg
jne
aaa
notl
xchg
push
xchg
addr16
cmp
push
adc
insb
xor
add
and
lcall
jo
adc
into
shlb
lret
push
inc
add
mov
mov
les
scas
inc
adc
dec
mov
sar
js
jo
ret
imul
test
fs
incb
inc
xor
cmp
mov
jle
icebp
adc
movsl
icebp
push
xchg
cmpb
jp
jb
pop
imul
xor
xchg
lock
imul
adc
xorb
jge
popl
mov
ret
int
sub
icebp
mov
lods
mov
adc
shrl
stc
call
mov
pop
add
cs
mov
dec
lret
es
xor
cwtl
xor
xchg
lcall
in
push
idivl
mov
inc
cs
nopl
dec
push
mov
jp
jnp
lds
inc
jae
outsl
and
mov
js
cmpsb
repz
adc
xor
aam
ret
icebp
add
ljmp
xor
stc
add
add
xchg
push
pop
and
or
lock
xlat
js,pt
or
and
sub
out
aam
add
mov
roll
imul
sbb
jb
clc
or
sbb
adc
jl
rolb
and
das
fistl
adc
js
mov
push
ss
xchg
das
sti
das
test
lds
sahf
inc
mov
out
and
or
je
movsl
xor
xchg
dec
adc
push
xlat
sbb
push
lods
mov
mov
cld
das
stos
xlat
aaa
lret
test
push
repnz
dec
xlat
push
imul
das
loopne
fmulp
cmp
jno
xor
repnz
sub
loop
ljmp
out
jp
cli
adcb
decl
adc
xor
mov
dec
cmpsb
jnp
sub
lret
data16
enter
call
movb
xor
out
shrb
outsl
or
daa
cmp
and
sub
adc
jp
and
xchg
lahf
into
xlat
push
push
inc
inc
jg
jnp
push
sbb
jae
xchg
sbb
lret
fcmovnb
push
movsb
fwait
iret
or
mov
mov
icebp
pop
pop
sub
pop
icebp
xchg
sub
dec
mov
shrl
xchg
jbe
inc
sbb
lahf
fldl
push
and
mov
xchg
cld
push
adc
mov
jo
and
jns
cmpsl
lcall
out
mov
test
sub
push
jg
xorb
in
mov
sub
in
inc
or
pop
or
lods
xchg
rcrl
pop
jmp
shl
jmp
sahf
into
decb
fwait
ljmp
xor
pop
mov
dec
pop
xchg
lods
adcl
jl
jecxz
jge
fnsave
mov
icebp
and
insb
outsb
inc
lods
pop
rcrl
icebp
test
ljmp
sbb
or
notl
inc
pop
adcl
and
pop
arpl
mov
insb
cmp
xchg
clc
aam
xchg
sahf
pop
push
push
and
cmp
pushf
sub
lcall
fs
subb
rcr
dec
xor
xor
inc
lods
movsb
cmp
hlt
adc
call
and
cli
adcb
iret
movsb
incb
pop
xchg
mov
inc
mov
in
pusha
xor
jp
pop
push
adc
stos
mov
or
loope
and
mov
fimull
add
lret
stos
sbb
out
shll
mov
lret
repnz
pop
cmpsb
movsl
das
adc
mov
pop
and
jecxz
call
xchg
or
and
jne
les
mov
pop
sbb
mov
xchg
in
sub
movsb
mov
inc
jb
cmpl
adc
int3
push
cmp
xchg
repnz
dec
rcrb
xchg
movsl
sbb
mov
in
dec
mov
dec
out
arpl
mov
mov
cltd
out
fcmovbe
inc
adc
lcall
inc
push
icebp
sysenter
sbb
mov
xchg
jg
clc
mov
jb
ret
dec
scas
add
popa
lds
repz
xchg
inc
mov
jg
hlt
inc
jge
push
jle
pop
sarl
aam
movsl
sbb
lret
sub
test
mov
pop
jo
repz
jae
xor
add
xor
popa
sub
repz
int3
or
jg
into
jp
mov
iret
xchg
sbb
fs
dec
sbb
cmpsl
mov
je
xor
or
test
cld
cld
mov
sub
fcoml
js
push
stos
xlat
adc
pop
outsb
in
inc
rorl
scas
xchg
adc
jle
inc
sbb
push
movsb
adcl
cwtl
or
cli
mov
sbb
and
data16
iret
inc
cwtl
add
push
sbb
xchg
push
and
dec
test
pop
int3
jge
pop
push
insl
xchg
sarl
adc
mov
mov
add
jae
stos
loop
lea
adc
xor
mov
jle
out
add
and
es
xchg
ja
dec
fldcw
dec
jns
jp
pop
mov
xchg
and
fldenv
dec
mov
call
inc
sbb
xor
fcmovnu
dec
xchg
sti
pusha
push
add
movsb
inc
call
mov
fisttpll
out
lds
inc
aaa
in
add
jo
dec
into
mov
popf
les
repz
lds
imul
pop
lret
or
push
mov
cmpsb
popf
xlat
xor
xor
or
jle
outsb
mov
sub
add
jmp
or
pop
inc
dec
scas
out
ljmp
mov
mov
and
xlat
cmp
shr
push
pop
mov
lods
push
mov
aas
jbe
mov
add
fwait
clc
fisubl
test
or
leave
pop
fildl
and
inc
js
sub
inc
in
enter
test
out
pushf
add
lds
xor
loop
outsb
inc
fisttps
add
out
addr16
cld
iret
jge
or
cmp
add
enter
fldt
lcall
or
inc
mov
jae
cld
aas
sub
imul
lret
and
sub
xchg
popl
imul
sbb
push
pop
cmpb
in
jp
enter
mov
cmp
push
jo
mov
test
xchg
loope
lock
sbb
adc
sub
inc
lock
das
jo
xor
push
cs
movl
sub
std
data16
sahf
enter
mov
pop
inc
ret
push
pop
jp
xchg
sub
clc
aam
fsts
mov
sti
int3
and
outsb
and
insl
popf
repnz
mov
ljmp
dec
fs
xor
mov
jno
aad
out
into
in
lret
sub
mov
and
into
shll
popf
sbb
mov
insl
into
lcall
pop
js
push
lods
or
mov
mov
mov
push
jmp
cmp
pop
mov
call
jge
sbb
jns
jle
pop
mov
xchg
jbe
mov
sub
adc
jecxz
lods
jmp
mov
mulb
pop
daa
lea
inc
mov
aaa
mov
dec
inc
and
scas
lods
mulb
aaa
imul
insl
pop
adc
in
aad
lcall
div
mov
push
shll
cmpsb
pop
mov
mov
cmpsl
jge
jo
mov
out
shll
bound
cmp
jbe
dec
xorl
addr16
mov
push
cmp
cmpsb
call
mov
xor
push
mov
cmpl
icebp
js
jnp
and
jmp
cmp
daa
pop
mov
xor
scas
lds
cmp
aaa
and
pop
mov
arpl
mov
push
or
add
mov
fisubrl
sbb
xor
repnz
sbb
mov
xor
pusha
daa
scas
popf
mov
inc
fidivrs
aaa
cld
js
pushf
lea
out
adc
imul
fs
adc
movsb
cmp
lahf
sbb
aaa
push
cmp
or
scas
stos
xor
jnp
ja
aas
mov
mov
pop
jmp
das
sub
mov
push
popf
leave
xchg
cmp
sub
mov
xlat
shrd
into
std
inc
mov
fiaddl
jbe
mov
sti
jbe
fistpl
les
xchg
sbbb
cmp
add
xchg
stos
push
adc
push
ret
mov
xchg
dec
mov
jno
adc
xchg
or
mov
bound
orb
fucomip
ja
subb
mov
insb
and
xchg
and
hlt
mov
xchg
push
hlt
add
out
pop
aad
jge
or
sub
xlat
pusha
dec
nop
pop
bound
lods
add
xchg
cmp
ret
mov
int3
xchg
into
adc
jne
sub
dec
jle
push
jae
js
cmpb
jne
pop
pop
lods
xchg
add
mov
test
cmp
cs
xchg
in
sbb
jmp
aaa
iret
mov
jg
hlt
imul
mov
neg
int
adc
jle
fldcw
out
add
fwait
mov
divb
or
adc
lcall
fldcw
in
test
sub
clc
inc
mov
jnp
sbb
pop
pusha
insb
mov
je
dec
jle
je
pop
dec
adc
mov
push
jb
nop
sub
mov
loopne
jp
add
scas
jbe
bound
std
push
jne
fnstsw
imul
and
cld
popf
xor
das
jle
and
push
shlb
mov
jle
repnz
mov
xchg
lret
stc
mov
xlat
fadd
and
push
cld
addb
call
es
dec
lcall
pushf
loopne
loope
js
xchg
fcom
sbb
pop
jmp
sub
icebp
insb
xchg
or
ss
or
or
mov
push
sbb
lock
sub
mov
iret
sti
sbb
mov
dec
mov
test
data16
aam
adcb
sbb
ret
sbb
into
fs
push
sub
cmp
mov
sub
xchg
nop
imul
test
jg
mov
jmp
add
inc
mov
jbe
mov
cmp
mov
inc
jmp
push
inc
xchg
mov
cmpsl
iret
jge
dec
inc
test
xor
and
mov
cld
mov
dec
stos
mov
jmp
mov
clc
lahf
cmp
fmull
or
mov
mov
adc
cltd
push
out
and
fwait
test
cmp
push
dec
int3
cmpsb
popf
jae
roll
inc
arpl
xchg
jo
xor
popf
sub
mov
sub
and
mov
cmp
icebp
pop
loopne
lock
and
mov
cmpl
lcall
sbb
mov
loope
test
inc
into
push
push
jmp
adc
lret
pop
inc
in
add
cmp
cs
push
dec
mov
or
inc
in
test
mov
jmp
xchg
lahf
movsl
enter
js
push
aad
sahf
popf
inc
cld
or
cmp
mov
push
jb
daa
sti
stc
xchg
dec
sarb
loope
pop
xchg
int3
scas
popa
adcb
pop
ljmp
push
fidivs
lahf
mov
xor
lahf
push
xchg
push
stc
pop
inc
sti
xchg
pusha
movsb
xchg
dec
xor
pop
outsl
lds
test
lds
jmp
xor
push
sti
and
stos
pusha
push
shrl
movsb
dec
mov
xlat
or
sub
add
sbb
mov
rol
jl
lock
sti
loope
add
insl
std
or
xchg
dec
cmp
mov
idiv
jle
repz
pop
movsb
pop
loopne
mov
jmp
add
adc
lret
or
push
aas
repnz
std
jmp
mov
xor
sbb
std
ret
popa
inc
dec
testl
imull
ret
inc
outsb
or
lods
xlat
sub
push
lret
mov
adc
jae
outsl
mov
cmpl
jnp
cwtl
enter
inc
inc
xlat
cmpsl
xchg
push
lret
xchg
xchg
push
push
add
bound
jg
mov
rclb
add
lods
xchg
push
icebp
scas
cmpsl
mov
or
movsl
mov
sub
lods
or
sub
fdivs
jl
sub
lock
sub
mov
pop
mov
loop
insb
push
or
popf
scas
imul
or
mov
pop
arpl
adcl
bnd
jle
cwtl
mov
test
fwait
sub
sbb
aas
inc
pop
test
mov
jo
cmpsl
mov
subb
jae
pop
fnstcw
dec
jne
ja
aas
mov
mov
sahf
push
ds
push
pop
je
and
or
ret
fimull
shr
dec
xchg
into
cmp
int
pop
and
arpl
insb
dec
into
ret
lds
mov
movsl
test
movsl
and
push
data16
daa
jg
adc
ss
jp
lds
xor
loop
movsl
outsb
movsl
push
in
sarb
or
cmpsl
and
cmp
or
sarl
adc
sbb
popa
lahf
sub
shrb
or
test
in
je
testl
adc
jmp
arpl
mov
aas
fdivs
or
jmp
jnp
jns
rolb
lret
dec
into
pop
push
mov
cmpsl
lret
inc
jle
jp
cwtl
and
push
inc
jl
sub
ja
xor
mov
mov
aas
ret
xor
fsubr
into
in
inc
out
mov
rcr
repnz
jb
hlt
fs
out
cltd
cmp
rolb
jne
sub
jg
jle
imul
pop
or
loope
pop
jmp
inc
pop
jg
mov
mov
sbb
and
daa
imul
xlat
stos
pop
lahf
repnz
and
aas
cmp
scas
xor
bound
into
fcomps
and
fistpll
pop
cs
les
cmpsb
sub
lods
ret
in
sub
cmpb
arpl
test
mov
loope
cmp
sub
or
test
lcall
mov
mov
ret
jo
mov
andl
dec
xchg
push
or
adc
dec
push
jmp
fmull
jae
and
dec
test
jge
les
ret
jo
fs
mov
and
and
insl
sahf
subl
push
mov
cld
mov
in
bound
je
je
shlb
mov
outsl
push
movsl
outsb
pop
inc
movsl
xchg
sub
push
out
fstl
add
cld
shrl
js
sbb
fstp
jg
outsl
cmpsl
xchg
mov
clc
sbb
mov
loopne
xor
aad
lock
fisubrl
inc
xlat
fcmovu
mov
rclb
push
jno
lods
enter
lods
shufps
sub
test
adc
loopne
cltd
mull
and
dec
push
xchg
hlt
in
inc
ss
jle
lret
jmp
inc
cmp
test
mov
jo
movsl
in
or
adc
add
cmp
mov
push
pop
fdivs
xchg
sbb
mov
out
out
fisubl
testb
pop
dec
lea
bound
mov
mov
outsb
lret
xor
jg
mov
jmp
or
or
in
mov
or
push
mov
dec
ja
in
negb
cmc
sti
and
daa
movsb
ficompl
pushf
inc
adc
inc
test
movsl
inc
mov
jp
mov
call
jmp
dec
sub
ret
add
insb
cmp
push
mov
std
subb
jg
in
pop
pop
popa
add
xor
xchg
xlat
loope
cmp
fmuls
enter
add
fbstp
inc
and
cmp
scas
jecxz
xor
inc
xchg
addb
daa
loopne
push
mov
xchg
push
and
cmc
in
mov
fldcw
or
in
or
mov
ret
cli
cwtl
mov
mov
fisttpll
mov
scas
ret
fisubs
les
mov
mov
jne
inc
jecxz
loop
cmpsl
push
pop
dec
cmpsb
sti
adc
inc
mov
mov
inc
and
shll
jnp
dec
fsts
in
mov
cmp
sbb
mov
mov
or
push
jmp
sbb
fdivrl
jmp
jae
int
andl
repnz
mov
cltd
jbe
aas
aas
jmp
lds
fcoml
test
repnz
iret
or
lret
lcall
cwtl
in
push
imul
sbb
stc
push
xchg
je
daa
sbb
outsb
mov
jnp
inc
iret
xor
push
jle
sbb
cmp
repz
insl
dec
les
mov
xchg
push
call
pusha
fadd
std
cmp
mov
xchg
jmp
xor
or
sahf
imul
fisttpl
mov
mov
cmp
scas
mov
xor
and
push
aad
push
ds
sub
mov
enter
call
in
jl
mov
and
shrl
inc
adc
pop
xchg
outsl
bound
hlt
xchg
push
int
js
lock
into
dec
pop
je
inc
mov
mov
sub
xchg
dec
aad
inc
in
jne
inc
pop
ret
mov
in
movsb
sbb
ja
enter
shrl
aad
lcall
popa
fwait
shll
ljmp
adc
test
jb
rolb
ljmp
pop
repz
addl
xchg
int
in
jle
xchg
dec
gs
loope
mov
imulb
notb
and
mov
inc
cmp
xchg
mov
sub
ja
jg
and
cmpsb
out
aam
jge
jmp
mov
mov
into
jmp
cs
scas
sbb
leave
cmp
lret
jae
inc
loopne
jnp
cmp
mov
inc
or
jbe
lret
and
adc
in
adc
dec
and
inc
mov
add
mov
mov
ss
jmp
cmpsl
cltd
pop
and
cs
xchg
jle
mov
or
jmp
sub
out
pop
daa
and
lret
xchg
xchg
mov
outsb
sub
mov
or
movsl
out
cmc
sti
push
icebp
outsl
mov
test
dec
rorb
adc
or
and
lea
xchg
das
xchg
and
ja
jbe
lods
std
outsl
gs
adc
leave
roll
enter
loop
sar
sarl
or
mov
aaa
aas
ret
xchg
jge
pause
in
sub
sbb
das
jbe
or
mov
ffree
sbb
inc
loopne
fsub
push
out
jecxz
int3
mov
in
out
xlat
jne
cmp
mov
div
lahf
sbb
push
into
xchg
pop
mov
inc
dec
notb
fdivrs
insl
nop
fstl
xor
sub
loop
clc
fisttps
movsl
inc
loop
scas
sti
sub
int3
or
ret
popa
out
dec
inc
out
jns
and
fcomps
out
test
adc
into
repnz
fadds
gs
bound
aam
out
movsb
sub
lds
sahf
jns
mov
rcll
or
jmp
mov
inc
push
mov
inc
push
in
out
lock
or
push
or
lret
lods
jo
sub
fcmovbe
fsubl
inc
int3
pop
xchg
jg
test
mov
sub
imul
adc
or
mov
mov
jae
push
push
mov
dec
movsl
cli
push
pop
loopne
aas
cmc
inc
adc
aad
add
dec
xchg
mov
sub
hlt
sahf
int
movsb
push
jp
call
gs
je
sti
lahf
push
xchg
xchg
mov
les
or
roll
rorl
sub
aam
push
cwtl
icebp
cmpsl
inc
jl
and
push
in
push
pop
mov
bound
adc
pop
gs
xchg
aaa
xchg
fistps
push
std
movsb
pop
lret
xlat
xor
ret
push
push
jnp
sbb
enter
push
mov
push
stos
mov
ret
int3
repnz
jmp
roll
pop
and
sbbb
pop
and
xor
pop
ljmp
out
xchg
rolb
icebp
pop
and
leave
pop
jmp
daa
sti
or
leave
xor
insl
push
add
lock
test
stos
inc
imul
push
imulb
pusha
lods
mov
mov
enter
sub
test
sbb
adc
push
and
jecxz
out
push
nop
jmp
jne
add
sbbl
add
int
cmpsb
cltd
hlt
hlt
les
and
mov
stc
lea
std
std
mov
jns
adc
jl
or
ret
add
rcl
cld
shlb
xor
sub
jae
test
popf
loope
inc
ja
push
dec
cmp
in
stos
push
pop
mov
push
mov
imul
lock
cmc
mov
xor
jae
add
out
mov
aad
aad
data16
in
stos
loopne
aad
ret
push
add
cmp
lock
aad
addr16
or
xor
test
bound
jo
mov
repz
inc
xchg
popa
inc
call
add
dec
sbb
into
call
arpl
mov
lods
outsl
xchg
jne
fnsave
xchg
sbb
dec
xchg
xor
pop
rorb
jl
das
sti
test
cltd
add
loope
sub
xor
bound
ficoml
and
and
in
les
mov
adc
xchg
adcl
cwtl
dec
cli
cltd
orb
or
and
cmpsb
inc
mov
mov
cmp
or
pop
fisttpl
xchg
push
push
lods
pop
sarl
or
push
xor
mov
iret
and
and
jns
sbb
mov
fisttpl
mov
xor
dec
sbb
push
jnp
xchg
out
jecxz
rcl
iret
xchg
lods
adc
jg
in
push
lret
outsl
inc
push
mov
adcl
insb
ja
in
test
push
arpl
inc
in
fidivrl
inc
gs
xor
sahf
lcall
jns
push
adcb
aaa
cmp
jecxz
mov
and
inc
pop
or
cmc
sbb
shrl
cld
mov
mov
mov
mov
in
std
dec
adc
xor
scas
sub
je
fs
js
cmp
stos
outsl
call
cmp
test
cli
inc
mov
inc
inc
xor
addr16
cmpsl
dec
xor
mov
jae
popa
mov
pop
xchg
inc
sbbb
insb
xor
nop
cmp
clc
pop
push
push
mov
push
lods
pop
inc
shrl
add
out
lods
rorb
inc
into
inc
mov
mov
movsl
cwtl
int3
sbb
mov
jl
repnz
pop
xor
dec
inc
push
fadd
mov
rcrl
popf
out
out
jl
cmp
sbb
aaa
lds
fistpl
mov
jp
in
cmp
movl
dec
cld
loop
sbb
and
jno
fucomip
imul
or
push
mov
insb
cmp
xchg
xchg
mov
stos
test
xor
adc
mov
out
xlat
mov
inc
mov
repz
aam
out
pop
push
xchg
stos
bound
lods
inc
pop
jae
or
cs
enter
dec
ret
fists
push
cmpsl
in
sbb
loope
enter
jp
xchg
xor
jbe
sbb
push
int
call
and
add
in
xchg
pop
push
xchg
call
push
iret
cli
jo
push
shrl
cs
mov
mov
iret
xchg
test
loope
mov
jl
inc
pop
clc
pop
mov
hlt
jmp
test
mov
in
out
push
sub
inc
fsubp
or
mov
sub
mov
fimuls
xchg
cmc
inc
pop
mov
pop
fwait
iret
xchg
in
push
mov
test
jmp
cmp
fnstcw
inc
cmp
pop
out
insb
xor
mov
pop
aaa
fmull
pop
sbb
inc
in
jle
and
xor
aad
out
adc
or
outsl
sbbl
and
jg
inc
xchg
jne
es
sbb
mov
push
xchg
and
movsl
and
jae
dec
out
or
out
pop
push
leave
je
push
sbb
push
in
mov
lea
and
data16
sub
cmp
push
pop
inc
xchg
pop
lock
iret
sub
ljmp
shr
inc
inc
leave
or
lcall
jo
xorb
test
push
lcall
pop
enter
fldenv
and
lods
ror
in
aas
jo
xchg
int
aas
repz
rcl
add
add
nop
sbb
push
sub
mov
push
rorb
out
xchg
mov
push
aas
sub
jno
sti
xor
loope
dec
rcr
and
bound
test
lock
int3
pop
adc
lea
cmp
loop
jge
push
imul
lea
hlt
mov
movsb
inc
arpl
jb
mov
mov
push
repz
iret
pop
xchg
push
cld
pop
lret
cld
sbb
gs
aad
outsb
jge
jae
imul
test
cmp
test
add
lds
lahf
xchg
bound
inc
cmp
inc
jo
and
repnz
int3
push
mov
cmpb
inc
mov
and
bound
scas
sub
cmp
fsubs
pop
mov
mov
add
lahf
xchg
inc
cld
lods
fxch
popf
int
cmc
mov
push
mov
std
inc
and
inc
inc
and
call
or
xlat
popf
sarb
enter
mov
idivl
mov
nop
lahf
fmul
pop
jne
adc
test
mov
mov
jno
jb
push
aaa
xor
xchg
popf
sbb
sbb
popf
dec
aad
pushf
add
xchg
mov
aaa
push
xor
or
jne
hlt
mov
or
jno
loope
mov
and
inc
pop
aad
out
push
shlb
leave
cmp
pop
jbe
push
clc
cmp
pop
pop
les
lods
add
aad
rclb
xchg
fsubl
adc
mov
and
mov
decl
xchg
sbb
out
call
mov
daa
mov
test
addr16
jae
push
lock
mov
icebp
or
into
push
pop
mov
test
insb
loope
jecxz
aad
in
sub
pop
insb
pop
loopne
stos
mov
ljmp
mov
mov
cmpb
push
or
push
inc
ffree
aas
nop
xchg
adc
pop
ret
dec
sarb
les
std
mov
push
lds
lahf
sub
cmp
test
fwait
add
mov
bound
dec
insl
sysret
jge
or
jbe
ds
sub
nop
jmp
ja
cld
fs
in
adc
jne
cmpsb
movsb
inc
call
adc
lods
mov
pop
mov
dec
and
cmp
mov
xchg
fwait
repz
ljmp
jns
xchg
lods
push
repz
sub
dec
mov
ja
std
out
scas
arpl
aas
dec
fiadds
sahf
ret
mov
cmp
out
xchg
push
xlat
mov
jno
mov
aad
jb
jl
bound
shll
stc
js
imull
mov
dec
sbb
negb
aaa
jae
or
neg
testl
dec
pop
loopne
push
pop
pop
jae
jne
jno
mov
jo
pop
fldenv
sub
xor
gs
nop
aaa
ret
mov
xor
cli
leave
xorb
adc
xchg
cli
mov
pushf
or
js
ds
lahf
js
jl
jg
push
popa
lods
int3
clc
lret
mov
pop
adc
insb
xchg
shlb
lods
pop
lock
xor
int3
mov
test
cli
sub
cwtl
ljmp
aam
fmull
mov
adc
rcll
push
cmp
fwait
popf
pxor
pop
or
adc
stos
lret
ss
test
jb
adc
bound
sarl
and
mov
cmp
sbb
xor
stc
xchg
dec
xchg
test
pop
outsl
test
clc
movsl
cli
mov
aas
xchg
jne
and
cltd
and
ret
inc
nop
adc
cmpsb
inc
or
movl
sti
pop
int3
adc
aas
daa
in
pop
out
inc
arpl
xor
xchg
hlt
jns
out
and
nop
insb
sub
mov
adc
lret
push
fcomip
xor
cmp
inc
insl
xorl
xor
mov
fwait
cmc
jg
aam
repnz
call
push
and
pop
loopne
adc
js
inc
data16
stc
push
outsl
mov
jl
pop
test
mov
cltd
jge
adc
jbe
xchg
rclb
adc
push
sbb
sub
fwait
das
cwtl
dec
mov
pusha
das
fimuls
loope
or
adc
sbb
push
xor
mov
addl
outsb
data16
and
push
mov
adc
addl
movsl
inc
loop
test
sbb
cmp
push
cmp
mov
leave
lret
popf
sub
cmp
push
push
test
stos
daa
or
adc
mov
pusha
cli
pop
repnz
clc
push
adc
jno
push
mov
mov
fmuls
dec
add
add
lret
scas
pushw
icebp
jb
cmpsb
movsb
mov
mov
push
xor
call
jl
or
pusha
sbb
mov
test
push
pop
hlt
aas
and
repnz
adc
or
incb
sbb
movsl
adc
adc
push
call
inc
add
stc
cwtl
out
repz
rcrb
insl
icebp
mov
add
cli
sub
lahf
repnz
lret
sbb
fwait
dec
push
sbb
jae
fsubp
adc
aas
mov
sti
cmp
scas
pop
cmc
inc
jge
xor
in
aad
icebp
sub
fdivr
pop
xchg
das
imul
movsb
insl
imul
fs
cmp
nop
ja
jmp
popa
inc
mov
and
push
std
gs
jb
xchg
and
pop
insl
fildl
mov
cmpsl
in
jno
sub
iret
and
xchg
pop
or
movsb
fldcw
jb
dec
mov
xchg
je
inc
movsb
sbb
push
pop
std
mov
or
fs
cmpsb
mov
cmp
shr
out
sbb
pop
and
outsb
push
xchg
push
scas
lret
jno
pop
or
fldt
mov
mov
bound
and
fstl
js
mov
gs
outsb
inc
cld
adc
es
add
pop
dec
lock
imul
mov
inc
mov
mov
push
fdivrl
mov
out
sub
ret
cmc
imul
xor
push
sub
dec
push
mov
aam
test
push
mov
mov
jle
das
push
cmp
js
mov
int3
sub
jmp
pop
data16
ljmp
and
cltd
fadd
add
ja
adcb
jno
lods
jl
test
cmp
mov
rolb
lcall
and
adc
xchg
mov
push
push
test
pop
add
push
divb
dec
or
ds
cmp
cmp
jnp
dec
mov
mov
and
mov
loope
enter
out
fisubs
nop
xchg
sbb
mov
mov
mov
jb
mov
push
mov
cmp
ret
int3
ret
mov
add
in
inc
enter
xlat
pop
lods
adc
dec
sbb
sbb
pop
lcall
mov
mov
cmp
movsl
pop
dec
es
jmp
pop
sub
bnd
sarb
mov
xor
and
jae
outsl
dec
mov
or
pusha
fsubs
push
arpl
orl
insl
adc
and
cmp
sub
cmpsl
dec
addr16
add
cmp
adc
lahf
pop
sbb
pop
cmp
add
adc
push
xor
mov
jno
aad
insb
or
jns
push
push
stos
adcb
pop
dec
xchg
jno
xchg
mov
xchg
jmp
push
pop
push
in
test
inc
add
leave
stos
inc
jmp
test
pop
sub
jb
jl
out
pop
cmp
or
outsl
in
cwtl
mov
xchg
aad
cmp
and
jle
cld
xlat
push
ret
popf
sub
sbb
icebp
add
add
lret
les
cli
pop
dec
js
sub
push
adc
test
dec
test
mov
insb
fbld
clc
sar
add
or
xchg
leave
lcall
pusha
popf
push
insb
push
cli
mov
jp
push
lock
lahf
pop
push
adc
roll
mov
jmp
into
fcmovbe
or
inc
adc
inc
es
dec
mov
jmp
aam
cmpsb
mov
aad
sbb
push
and
cwtl
sbb
adc
jmp
das
dec
into
outsb
and
std
in
mov
cld
out
xchg
aas
jg
or
ljmp
xchg
repnz
movsl
jns
fcmovnb
xchg
mov
imul
psubd
push
mov
bound
push
andl
iret
outsb
cmpl
stos
xchg
les
xchg
cltd
out
mov
filds
push
xlat
rol
shll
adc
xor
mov
inc
sbb
pop
push
cs
cmp
fldenv
ficoms
stos
mov
inc
leave
data16
iret
mov
jp
das
int
into
fs
loope
jne
movsl
std
divl
and
push
cmc
int3
xor
stc
test
mov
ljmp
mov
mov
jbe
imul
popa
cwtl
push
sub
rclb
arpl
int
lret
push
stc
stc
arpl
aam
or
and
shl
aas
pushf
cmpsb
sub
pop
imul
divps
jecxz
test
or
mov
cmp
jp
mov
push
test
mov
stos
daa
out
sub
loope
or
jl
sbb
and
loopne
popf
mov
stos
inc
inc
rcl
jle
pop
ret
mul
pop
jp
repz
call
loop
movsb
in
stos
dec
xchg
lea
sbb
pop
imul
adc
sbb
add
or
jne
pop
sub
or
jne
inc
loopnew
or
fnsave
movsl
mov
stc
aaa
insb
mov
mov
repz
sahf
ss
jl
dec
jl
je
pop
lret
mov
scas
or
sbbl
mov
cmp
xchg
pop
jg
jb
leave
mov
dec
dec
mov
dec
out
cmp
xorb
mov
das
dec
pmullw
xor
test
sbb
stc
jo
adc
es
dec
into
or
inc
sub
push
bound
push
mov
add
repnz
push
adc
mov
and
mov
enter
fsubs
test
mov
pop
mov
push
test
adc
clc
fistpl
enter
pop
cmp
outsb
and
pop
add
jmp
aam
rcll
xchg
push
cmp
push
cmc
push
fmull
adc
xor
lds
inc
xlat
pop
jge
mov
jge
testb
loopne
stos
cmpsb
or
loope
xchg
fcomps
test
out
fistps
mov
clc
adc
sbb
xchg
adc
sbb
mov
inc
icebp
add
push
and
movsb
fsubrl
or
push
jmp
and
ja
xchg
lret
push
fadd
sti
xor
lods
push
lret
pop
mov
xchg
loop
fwait
dec
dec
mov
mov
pop
cmc
in
rcll
push
lea
pop
xor
cmp
movsl
push
out
movsb
mov
sbb
sub
shl
pusha
jg
cmpsb
std
push
xchg
test
lds
loope
mov
mov
xor
rcrl
stos
out
inc
cmp
cmpsl
test
jne
stos
xchg
mov
pop
and
jmp
in
jge
sub
pop
jnp
adc
jp
cmp
je
dec
mov
mov
cwtl
xchg
mov
mov
shll
sbb
mov
pop
pop
adc
or
js
xchg
das
xor
xorl
mov
sub
stc
es
test
mov
fldt
in
loope
repnz
push
push
add
dec
cwtl
cmp
les
pop
jg
lret
jmp
pop
jne
call
ljmp
cmp
push
in
mov
push
xor
pop
xchg
adc
in
enter
das
scas
and
jg
pop
add
push
out
cmpsl
pop
pop
cltd
sbb
lret
das
pop
fwait
cmpsb
ret
inc
outsb
sbb
jp
sti
shll
aas
out
cmpsl
out
jl
ja
pop
xchg
daa
push
dec
gs
shll
jecxz
imul
shlb
fdiv
xchg
inc
push
test
adc
outsl
inc
inc
scas
mov
loop
mulb
fisubl
mov
aam
jge
ds
dec
lds
lds
in
jp
test
inc
mov
xor
mov
repnz
sbb
addr16
out
xchg
in
mulb
mov
dec
lret
mov
xchg
inc
rolb
jns
rcll
mov
inc
xchg
sbb
mov
pop
js
mov
push
push
aas
mulb
int3
pop
pop
repnz
push
scas
fists
mov
mov
pushf
dec
shlb
push
ja
ja
sub
wbinvd
lret
mov
out
cmp
pop
icebp
int
xchg
push
mov
jns
test
cltd
sbb
jecxz
mov
mov
and
mov
daa
fwait
iret
rclb
push
inc
in
mov
push
push
sub
adc
or
push
lahf
scas
icebp
sbb
or
shrl
imul
mov
mov
add
push
jg
scas
popf
jp
test
jmp
jmp
icebp
in
mov
stos
pop
mov
jno
mov
mov
add
mov
xor
cmp
push
ss
ktestw
or
in
aam
iret
popa
adc
mov
iret
loop
inc
jge
mov
and
test
ficoms
xor
inc
sarb
dec
pop
add
add
cmc
jle
jecxz
loope
mov
movsl
jns
out
jge
xlat
pop
push
dec
imul
andb
xor
pop
outsb
hlt
hlt
icebp
jne
int3
ret
test
xor
pmulhuw
mov
xlat
jbe
out
shl
movaps
add
mov
xchg
je
mov
or
cld
push
adc
bound
xchg
and
aaa
xor
insl
imul
dec
mov
sub
andl
xchg
test
iret
xlat
mov
insl
jle
jmp
push
push
ficoms
xchg
cli
pop
cs
pop
pop
adc
push
arpl
mov
pop
out
test
lods
jge
cltd
les
insb
mov
lret
add
jg
pop
mov
sahf
aaa
xchg
push
fcompl
jae
outsb
jg
jnp
xor
ljmp
sbb
and
fld
loop
cmpsb
loop
mov
mov
les
push
scas
adc
push
scas
and
out
rdpmc
jnp
mov
jecxz
sar
bnd
pop
lock
out
adc
xchg
cmp
cld
cmp
cltd
arpl
and
pop
nop
mov
test
jb
outsl
mov
cmp
daa
cwtl
or
mov
int
and
mov
cmp
imul
xchg
dec
mov
mov
decb
xchg
ror
cwtl
mov
fistpl
and
and
sub
xchg
dec
scas
lock
pop
jle
shl
inc
mov
push
inc
xchg
cli
pop
jle
and
mov
imul
imul
adc
add
pop
inc
loop
mov
fscale
mov
pop
xchg
pop
add
ljmp
cmp
shll
popf
div
lahf
push
movsb
bound
cld
bound
jp
xor
mov
push
out
orb
leave
xchg
test
pop
icebp
inc
inc
inc
jnp
sub
pop
add
sbb
mov
xchg
gs
shlb
jbe
ret
sbb
fisubs
sub
icebp
cmp
cmp
mov
push
add
mov
bnd
cmp
pusha
and
sahf
mov
or
dec
rolb
push
inc
addb
or
inc
in
mov
repnz
pop
jp
xchg
pop
shr
aas
stc
loop
inc
sti
pop
insb
xchg
lahf
ret
inc
push
pop
cmp
les
fcoms
dec
mov
ror
aaa
inc
call
mov
jmp
outsl
jo
je
xor
pop
popa
mov
xor
ds
in
sbb
cmp
dec
mov
inc
ret
call
mov
in
dec
pop
testl
mov
add
rcll
call
pusha
dec
jae
int
test
pop
add
cli
pop
dec
and
cli
inc
insb
fadds
pop
mov
dec
pop
cmpsl
test
stos
cmp
sub
fdivrl
xchg
mov
push
pop
jbe
sbb
push
in
mov
mov
notl
push
xchg
nop
mov
roll
nop
enter
sbb
fstp
out
flds
xor
adc
pop
inc
das
mov
pop
gs
inc
aad
mov
mov
sarb
mov
add
sub
and
scas
jns
idivb
mov
ja
enter
and
nop
dec
sub
sub
loopne
fidivl
cmp
adc
popa
sbb
adc
dec
pushf
and
mov
out
xchg
mov
stos
dec
out
stos
jno
orb
jns
adc
hlt
mov
jae
popf
mov
mov
adcb
popf
mov
adc
ja
mov
mov
mov
pop
mov
push
fucomip
cmp
pop
mov
jne
or
call
mov
xchg
daa
sbb
mov
jnp
xor
outsl
aad
adc
fldl
and
fwait
fwait
ljmp
or
push
cmovge
aaa
in
popa
pop
and
mov
insl
cmp
push
sbb
sbb
mov
pop
push
bound
or
pusha
stos
jbe
xchg
ficompl
xor
popa
inc
dec
inc
inc
shl
cmp
js
int3
aad
in
mov
pop
pop
push
movsl
inc
repnz
jno
mov
xor
mov
and
in
pop
scas
sbb
xchg
fcmovnu
ret
rolb
sbb
mov
test
in
xor
in
incb
fiaddl
test
data16
lock
shlb
sahf
stos
sahf
mov
or
pop
repnz
cmp
mov
aad
or
inc
sub
push
xor
jl
sbb
insl
and
js
inc
mov
mov
iret
inc
loop
repz
xchg
or
adc
fcoml
jl
insl
xor
jl
inc
dec
out
int3
pop
add
push
xchg
cmp
lcall
lock
xchg
sub
inc
jns
outsl
and
mov
push
sbb
into
or
mov
loopne
mov
testl
aam
mov
test
lods
fnstsw
mov
xchg
fmull
jo
mov
and
add
pop
repnz
ljmp
push
aas
push
add
aas
push
addl
sub
fldl
std
enter
cwtl
rcr
pop
scas
jno
ret
fistpl
andb
sbb
jg
outsb
adc
xchg
loopne
mov
fistpll
mov
and
jb
mov
adc
xchg
cmp
sub
adcl
push
inc
pop
mov
mov
xchg
pop
cmp
or
xchg
shrb
testb
leave
adc
mov
daa
fisttpll
pop
push
dec
test
loope
add
gs
in
mov
mov
int
jno
push
lds
mov
cld
xor
cltd
push
testb
ds
shlb
cs
popa
sub
sbb
xchg
js
adc
js
or
sub
jns
popf
scas
adc
int3
inc
mov
jmp
es
jmp
ds
inc
les
add
arpl
push
push
adc
mov
lock
frstor
add
xchg
inc
ja
aaa
lcall
mov
notl
sub
or
mov
inc
orl
fs
xchg
cltd
xor
je
ret
repnz
adc
or
loope
sbb
arpl
jbe
adc
out
lods
dec
in
jmp
lret
fsts
insl
fbstp
add
insb
sbb
nop
jo
xor
popf
sub
pop
inc
scas
or
call
dec
xlat
enter
test
inc
add
xor
jecxz
xor
add
dec
lock
mov
pushf
mov
fadd
aaa
sbb
ja
inc
sbb
fnstsw
mov
push
shrl
or
sbb
test
pop
stos
orb
sbb
mov
in
dec
bound
xchg
lds
adc
add
inc
or
lcall
xchg
cld
cmp
mov
xor
mov
push
mov
lcall
imul
push
or
movsl
push
lcall
xchg
jb
xchg
int3
mov
lock
sbb
mov
mov
dec
call
hlt
div
test
sub
or
jnp
ljmp
nop
es
sbb
ret
hlt
outsl
aaa
sbb
sub
mov
fidivs
inc
pop
xchg
insb
add
into
std
movsb
fiadds
push
cmpsl
inc
test
pop
mulb
mov
cli
idivl
jle
sbb
dec
push
pop
pop
lock
jae
pop
jb
pop
xlat
popf
jl
in
mov
lods
hlt
int3
sahf
add
sahf
or
push
scas
in
push
mov
mov
dec
push
inc
jne
gs
mov
aaa
es
popa
jno
or
mov
stc
test
out
push
cmp
adc
sbb
aas
pop
mov
pop
add
movsl
jecxz
push
aam
and
js
push
dec
fstps
lods
imul
test
inc
push
sbb
xor
cmp
sbb
icebp
neg
insb
les
cmp
jmp
sub
in
rorb
xchg
adc
ds
les
and
cs
dec
lods
or
mov
or
pop
sahf
les
jae
sahf
add
add
cmp
lds
mov
cmp
mov
fisubrs
jns
call
fnsave
mov
cli
mov
mov
fldl
jle
adc
movsl
sti
xor
icebp
jecxz
shl
sahf
xor
stc
in
test
push
lods
and
adc
out
in
sbb
mov
cmp
xchg
mov
ret
jne
and
and
jae
cld
and
add
daa
das
and
xchg
mov
nop
jnp
sub
bound
lea
mov
cmpsl
sbb
mov
sub
push
cmp
pop
in
mov
add
and
mov
pop
ret
mov
adc
mov
push
lret
out
insb
lods
add
call
and
push
add
std
in
sbb
push
test
mov
int
pop
mov
cmpsl
test
mov
adc
sub
mov
dec
cmp
aad
in
loope
insb
aad
leave
push
push
mulb
mov
dec
jle
icebp
and
in
incl
xlat
push
shlb
jp
jl
pop
into
test
cmp
jmp
insb
sub
test
sti
imul
or
lcall
cld
rcll
ja
dec
je
add
loop
sbbb
xor
pop
xchg
mov
pop
xor
xor
fdivrl
mov
lods
out
lahf
or
roll
and
gs
pop
xlat
mov
loop
out
sbb
cmp
jg
test
jl
jo
cmp
mov
and
ret
xchg
dec
mov
sbb
ljmp
adc
cmpl
adc
sbb
jecxz
pinsrw
lock
lahf
repnz
sbb
pop
mov
xor
jno
ja
divb
into
loopne
dec
inc
push
ja
sub
cmp
fmulp
sub
ljmp
pop
mov
icebp
movsb
ret
or
movsl
pop
pop
cwtl
mov
mov
jl
out
inc
cmpsb
imul
and
jno
dec
out
xchg
out
aam
addr16
fbld
sub
aad
mov
xor
mov
and
out
ljmp
in
aaa
daa
push
mov
test
pop
mov
imul
out
jnp
fildl
xor
dec
push
mov
addr16
fisubl
push
shll
data16
mov
outsl
outsb
sub
sahf
xchg
mov
fistpl
jle
rcrb
aam
pop
xchg
lcall
jp
mov
and
and
in
add
movsl
out
ret
stos
push
out
fwait
push
lcall
mov
xchg
gs
das
adc
repnz
jge
add
sbb
sub
cmpsb
push
mov
xchg
les
xchg
xchg
testb
xor
sub
sub
out
inc
sub
lds
jle
and
icebp
out
sub
mov
xchg
pop
inc
mov
dec
arpl
inc
jae
add
sahf
jp
mov
out
imul
adc
jns
out
lods
inc
cmp
mov
adcl
adc
in
mov
pushf
in
lret
iret
sbb
scas
je
xchg
mov
negb
adc
mov
adc
push
out
xor
jae
mov
cmp
pop
dec
jae
and
mov
push
iret
dec
pop
lods
jle
pop
ljmp
inc
adc
mov
sbb
jmp
lods
lcall
mov
or
gs
aas
sti
inc
mov
mov
jg
cld
fimull
adc
and
dec
hlt
ja
mov
cmp
jge
xor
imul
pop
sbb
loope
jle
cli
mov
js
pop
mov
arpl
aad
bound
sar
popa
call
test
and
pusha
js
rclb
cmp
xchg
shll
xchg
lmsw
adc
push
data16
insl
lods
mov
dec
jno
sub
push
sbb
cld
shr
jge
test
jp
dec
push
lods
add
adc
lret
xchg
mov
ret
call
lods
xor
es
bound
mov
int3
mov
popf
add
jg
sbb
call
cmp
out
fnstsw
dec
stos
clc
lret
dec
es
adc
jbe
fiaddl
xchg
xor
inc
jbe
rcrl
jg
xchg
or
fstpt
xor
into
inc
test
test
xchg
lahf
xchg
pushf
pushfw
dec
mov
js
stos
push
mov
cmp
xchg
test
push
mov
push
mov
push
pushf
xchg
shrl
js
pop
jnp
subl
add
int
sti
jo
jmp
pop
imul
mov
jecxz
or
and
mov
les
or
rolb
pusha
fimuls
test
adc
xor
bound
sar
cmp
push
push
pop
jge
hlt
out
cmp
andb
jns
mov
or
clc
lock
dec
cmp
iret
xlat
sub
sbb
xchg
push
sub
iret
jbe
cwtl
mov
xor
movsb
addr16
xchg
ret
in
iret
outsb
es
mov
sbb
jmp
loope
push
mov
ss
shld
pop
sub
pop
mov
fistpl
inc
push
xchg
test
loope
notb
sub
leave
add
sahf
in
out
cmp
shrl
in
fisttps
scas
aad
call
inc
sbb
sub
add
mov
or
sahf
icebp
pushf
sbb
das
cmp
sub
push
or
mov
or
pop
out
jp
adcl
cmp
inc
fs
mov
mov
mov
ja
imul
push
setg
outsl
pop
sbbl
shrl
xor
sahf
and
movsl
in
sbb
test
std
lock
push
lret
mov
xchg
or
in
cwtl
push
fisubrl
mov
fimull
pusha
and
fidivs
mov
cmp
je
sub
xchg
jae
test
xchg
and
mov
jecxz
mov
fdivs
jp
pop
jg
les
leave
add
mov
nop
jnp
pop
mov
cwtl
push
mov
cmp
out
cld
pop
cmp
jmp
adc
mov
lea
push
mov
outsb
pop
mov
sub
mov
cwtl
dec
sub
pop
and
ret
rol
jno
gs
aaa
add
mov
mov
or
fwait
mov
or
lret
into
dec
nop
shlb
pop
pop
outsb
int
xchg
mulb
cmp
call
out
inc
mov
xlat
mov
push
cmpsb
dec
mov
out
lds
cltd
xchg
rcr
push
mov
ret
inc
pop
not
push
ficomps
rcrl
fimull
lds
call
int
jp
lods
test
movl
adc
sahf
ret
push
sbb
std
adc
push
int3
xchg
test
jae
dec
mov
ret
push
pushf
fstpt
lods
pop
cmp
pop
aas
add
or
aaa
in
cmpsb
lret
mov
and
lret
cmp
add
popf
aas
cmp
rcrb
mov
push
fbld
mov
jl
cmp
sbb
cmp
lret
dec
sub
arpl
test
inc
mov
push
icebp
push
imul
pop
adc
push
mov
shl
mov
dec
cmp
int
fistpl
scas
insl
mov
jae
add
pop
inc
push
sub
fildl
sbb
and
stos
sbb
popa
add
insb
in
leave
cmpsb
add
pop
cli
cltd
and
mov
push
push
sbb
rcr
test
sub
sbb
mov
ja
xchg
adc
jg
std
pop
inc
mov
out
mov
loopne
or
hlt
push
shlb
adc
mov
das
lods
test
xchg
enter
data16
in
clc
mov
sub
pop
inc
lahf
daa
in
pop
jl
das
pop
xchg
xor
jns
and
adc
imul
xchg
sahf
data16
stos
or
pop
sbb
imul
and
inc
lcall
sbb
xchg
test
sub
cmp
jo
in
cmp
jno
aaa
scas
pop
in
cld
dec
mov
sbb
mov
lcall
rorl
in
fwait
test
jle
jl
inc
cmp
mov
loopne
cs
sbb
mov
cmp
mov
repz
jl
shll
cmp
aas
mov
aas
xor
or
jne
lcall
addr16
mov
cmp
xchg
push
dec
xor
xor
add
imul
mov
mov
mov
mov
jns
push
pop
scas
andl
or
imul
arpl
sbb
imul
push
mov
pop
loop
movsl
in
in
sub
subb
mov
imul
inc
clts
loope
lret
fwait
aad
xchg
ret
dec
inc
pop
pop
mov
jbe
ja
fidivrs
call
in
cwtl
jno
mov
mov
daa
jl
cmp
out
scas
dec
mov
fcomps
inc
jecxz
rorb
movsb
mov
loop
adc
imul
aas
stc
fcomp
add
mov
cmp
sarb
and
sbb
mov
jbe
mov
das
inc
daa
mov
imul
mov
and
loope
push
pop
cmp
lods
push
lcall
pop
nop
pop
cmp
je
je
lcall
xchg
dec
inc
push
sbb
std
jbe
jecxz
cmpsl
lds
lret
daa
stos
addr16
jg
test
inc
or
sub
int
dec
jge
jno
loope
xorb
pop
mov
adc
aas
mov
lods
sti
les
daa
add
test
adc
pop
mov
jns
mov
movsl
jne
cld
or
mov
cmp
sti
inc
cmp
push
cli
jp
push
jo
mov
es
cmp
out
mov
mov
xor
pop
push
inc
cmpb
bound
inc
cmp
repnz
ja
jb
ficoml
call
repz
dec
and
repz
sbb
xchg
movsb
je
push
in
push
pop
mov
ficoms
stc
repz
mov
daa
dec
sbb
cmpsl
xchg
daa
lea
sbb
jl
out
sbb
addr16
jg
lods
adc
shrb
sbb
ret
or
mov
and
xchg
mov
xor
je
xor
adc
mov
notl
mov
daa
cmp
fidivs
movsb
scas
push
fisubrs
adc
xchg
aas
add
dec
lcall
mov
imul
xorl
ret
ja
xor
jmp
dec
mov
xchg
ficoms
leave
mov
sub
push
cmc
sbb
stos
dec
ja
mov
out
add
mov
adc
fsubrs
insb
add
jmp
push
sbb
mov
mov
jmp
jno
lea
test
imul
fcomip
adc
adcl
jb
lods
add
arpl
push
sub
mov
ds
aaa
movsb
jae
movsb
or
mov
test
clc
pop
popa
cld
lds
xchg
popa
cmc
lcall
lahf
in
add
push
push
pushf
js
lret
push
das
pop
js
int3
mov
mov
incl
fadds
mov
test
inc
inc
fcmove
xlat
cli
or
out
lock
mov
mov
or
aas
pop
cltd
sbb
mov
adcb
jnp
insl
inc
mull
loopne
cmpl
dec
int
jo
sub
jbe
mov
leave
icebp
xchg
and
test
imul
lock
adc
stc
outsl
daa
sbb
imul
sub
lds
hlt
psubd
repnz
pop
and
les
xchg
loope
jmp
stos
mov
ficoms
out
xor
mov
or
cltd
cwtl
fstsw
and
pop
sub
xor
sbb
pop
jmp
xchg
clc
sbb
flds
and
push
movb
adc
dec
adc
je
out
scas
push
mov
aas
imul
icebp
gs
push
cmp
or
orb
adc
sahf
test
std
sub
mov
jne
adc
sarl
aaa
cltd
les
imul
lods
dec
js
push
push
push
pop
imul
lret
mov
or
sbb
jnp
addr16
mov
xchg
mov
outsb
arpl
mov
lret
cmp
je
addb
xchg
or
and
arpl
fsincos
xchg
sub
jo
in
ljmp
in
or
or
and
jecxz
idivl
pop
adc
mov
mov
mov
cmp
cltd
adc
adc
pop
mov
push
loope
xchg
xchg
sbb
pop
sbb
mov
and
cmp
cmp
subl
testb
mov
dec
loopne
imull
xchg
jb
test
in
xor
enter
pop
jecxz
cmp
nop
mov
push
adc
mov
imul
shlb
or
jns
add
jmp
enter
cld
xlat
js
div
aad
hlt
inc
shlb
pop
mov
in
scas
cmp
call
and
inc
xchg
xor
aam
add
fdivrs
jp
and
aam
mov
sbb
pop
or
or
dec
insl
shlb
dec
adc
mov
scas
sub
popf
sbb
add
hlt
or
sbb
dec
fisubrs
and
mov
or
cmp
xor
iret
outsb
xor
mov
mov
jle
pop
jae
int
clc
sbb
hlt
and
movsb
pusha
cmp
mov
jae
adc
je
jmp
pop
mov
inc
cwtl
mov
sbb
cltd
into
jecxz
lret
test
add
cltd
imul
hlt
mov
mov
dec
and
cmpsl
xchg
rolb
cmp
rol
mov
ja
mov
jl
sbb
add
mov
out
mov
mov
aaa
or
movsl
sti
add
outsb
out
rolb
xchg
mov
pop
mov
enter
dec
lods
scas
hlt
mov
push
int
arpl
jge
inc
addr16
inc
jecxz
ret
and
je
pop
xlat
push
cmpsb
ffree
aas
mov
jnp
and
inc
push
xchg
mov
dec
xchg
pop
mov
out
inc
insb
lods
mov
and
sbb
mov
frstor
xchg
adc
loop
shrb
cwtl
pmulhuw
xchg
dec
pop
xor
jl
lret
lods
fisttps
sub
mov
loop
es
shl
rorl
mov
lds
xor
lcall
or
push
jns
loopne
jnp
or
cmp
mov
scas
nop
jbe
push
xor
dec
adc
out
sub
lret
adc
test
aam
xchg
sbb
adc
sbb
popf
xchg
push
xor
adc
pop
jne
xchg
jns
rolb
mov
xchg
xor
cltd
lcall
or
sbb
jge
push
lret
lods
out
lret
popl
rorl
mulb
jns
andb
cmp
insl
mov
nopl
pop
dec
fdivl
insb
subl
xor
int3
sti
loope
mov
out
inc
neg
jbe
jge
outsl
imul
ret
add
mov
xchg
cmpsb
mov
inc
push
add
push
daa
loope
fstl
push
xor
popa
dec
xor
dec
pop
adc
mov
or
mov
pop
fisttpll
int
imull
int
xchg
cmpsl
psubw
or
cmpsb
arpl
ljmp
lret
adc
xor
mov
add
fistpll
movsb
ds
sub
out
in
cli
mov
cmp
scas
push
or
insb
clc
mov
imul
pop
xchg
fsubp
and
xchg
ja
das
negl
jge
xchg
add
mov
mov
inc
mov
dec
subl
ja
cmp
xchg
insb
mov
mov
es
and
mov
jbe
mov
mov
aaa
mov
xor
dec
scas
bound
mov
enter
loope
jmp
jnp
xorb
aam
insb
jle
aam
mov
mov
or
mov
jmp
pop
cmpsb
cmpsl
push
lock
inc
ljmp
cmp
jg
dec
or
int
sbbl
mov
loop
pop
movsb
sar
sbb
inc
jbe
loop
jp
arpl
push
gs
mov
lods
int3
out
scas
je
push
jg
fcmovu
leave
dec
or
cmc
or
mov
insl
or
adc
movsb
nop
lods
ret
in
in
push
or
cmp
and
imul
cmp
lret
or
leave
xor
in
cmp
repz
mov
rclb
or
popf
subb
popf
adc
gs
das
xor
mov
aad
add
adc
push
dec
jmp
gs
xor
ret
push
cltd
push
dec
in
mov
loop
mov
jns
fsubl
add
cld
repz
fidivs
scas
push
pop
xchg
jmp
push
out
jp
andl
push
adc
or
leave
icebp
xchg
push
and
dec
jbe
add
popa
jg
mov
push
jns
in
in
mov
xor
int3
into
das
test
inc
sarb
xchg
pop
sub
mov
fisttpll
mov
mov
ss
sub
ret
insl
mov
mov
lcall
shrb
xchg
pop
push
les
push
lret
inc
xchg
mov
xchg
lods
add
push
fwait
sbb
cmp
mov
jo
loop
jmp
jmp
lods
mov
cltd
cmp
cli
jne
inc
pop
cmpl
icebp
xchg
mov
aas
stc
pop
jl
enter
xchg
adc
mov
dec
mov
shll
into
les
pop
repnz
mov
cmp
jnp
pop
mov
sbb
pop
out
stos
jnp
jge
iret
frstor
xlat
mov
pop
leave
ffree
cmp
mov
pop
fwait
cmp
mov
cs
adc
sbb
loop
xor
mov
xor
lods
mov
xlat
or
cli
outsb
icebp
shll
push
lods
mov
jo
sub
pop
mov
lea
ss
xchg
xor
pop
loope
cltd
ss
test
cmpl
pop
push
or
pushf
pop
inc
les
add
jle
xchg
aaa
in
test
mov
jo
cmpsl
shll
aam
sub
ss
pop
push
jp
cmpsb
pop
shlb
mov
sbb
push
pop
mov
dec
push
lcall
xor
iret
jae
daa
js
not
jno
sub
pop
mov
nop
sub
lock
addr16
mov
cmp
cmpsl
jmp
jmp
popf
mov
dec
adc
frstor
push
js
jo
lret
and
sarb
movsb
test
xchg
cld
or
pop
push
mov
lahf
leave
push
mov
leave
ret
sub
or
jge
push
jmp
loope
jnp,pt
enter
icebp
mov
rolb
stc
mov
push
fistps
fdivs
sub
scas
js
adc
lahf
jb
ja
lea
xchg
hlt
cs
bound
mov
int
xchg
sbbl
fmul
iret
pop
repnz
push
ljmp
inc
sub
std
lds
jne
pop
xor
hlt
cmp
inc
dec
jle
test
xchg
cmp
sbb
sbb
xchg
lds
aaa
dec
push
fs
das
lea
add
dec
sub
xchg
fstpt
xchg
xchg
jle
stos
fadds
std
mov
jg
pop
test
cli
push
xor
ret
xor
push
cmpsb
mov
cld
adc
pop
push
insl
icebp
sbb
cli
mov
arpl
std
jecxz
enter
mov
repnz
loope
sub
cmp
pop
dec
add
cmp
fnstcw
xchg
mov
push
testb
test
out
adc
loopne
add
mov
clc
sub
lea
in
jg
ja
pop
fidivrl
scas
sub
nop
jo
js
test
cmp
mov
lcall
xor
fistl
push
cmpsl
lret
out
xorl
aas
out
inc
cmc
pusha
movsl
scas
sbb
mov
sbb
enter
mov
mov
gs
into
aad
cs
clc
into
jo
add
mov
sbb
popa
dec
stos
cmp
cmp
cmp
xchg
cwtl
and
ret
xlat
bound
rcrl
push
aad
sbb
xor
xor
movsb
stos
icebp
loop
inc
mov
je
cmp
add
test
mov
sbb
insb
lods
mov
sti
xchg
sbb
daa
sahf
cltd
push
out
or
xchg
out
dec
inc
std
mov
loopne
fwait
mov
inc
jne
jg
and
loope
lock
jnp
decl
loopne
cmpsl
mov
mov
int3
test
lahf
int
out
sub
fsub
ret
mov
ss
xchg
jae
scas
dec
nop
sbb
and
bound
inc
aas
xchg
xchg
jmp
push
mov
imul
push
sti
cmpsl
dec
mov
cli
push
push
insl
and
js
lods
cmpsl
nop
mov
mov
mov
jg
dec
sub
iret
pop
dec
movsl
hlt
xchg
mov
cmp
in
dec
jnp
and
pop
cmp
push
add
inc
jb
dec
mov
jge
jge
lret
cmc
popa
xchg
cld
out
les
ret
bound
xor
es
inc
cmpsl
jle
rcl
lods
andl
mov
cmc
mov
call
ljmp
sti
cs
inc
adc
rcll
add
pop
fmull
xchg
in
test
test
push
mov
aaa
xchg
in
xlat
mov
es
and
int3
cmp
jno
out
into
xor
mov
xchg
cmp
push
jle
adc
and
pop
icebp
jb
adc
xor
das
dec
int3
and
mov
aas
data16
mov
sbb
in
outsb
push
xlat
out
xchg
mov
ja
mov
xor
hlt
sub
or
inc
imul
push
mov
addr16
ret
adc
notb
out
push
mov
or
mov
