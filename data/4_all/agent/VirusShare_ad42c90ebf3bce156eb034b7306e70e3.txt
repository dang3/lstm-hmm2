push
stos
in
out
inc
add
xchg
cmp
push
add
scas
pusha
add
push
mov
cmp
push
add
cmp
add
mov
add
cmp
lods
add
sahf
outsl
gs
cmp
sbb
cmp
mov
cmp
lock
jp
pop
cmp
test
cmp
in
and
dec
push
push
cmp
sbb
cmp
mov
add
out
aam
cmp
xchg
sbb
scas
sti
sub
cmp
out
cmp
pop
cmp
cmp
mov
cmp
cmp
sbb
ss
cmp
xchg
sbb
outsb
inc
sbb
push
mov
dec
cmp
cmp
cmp
add
jle
xor
jb
push
cmp
in
sbb
mov
cmp
adc
jle
cmp
arpl
cmp
dec
cmp
push
cmp
xor
subb
scas
lock
pop
movsl
and
cs
add
negb
cmpb
pop
and
mov
sub
push
int
cmp
cmp
cmp
jns
iret
cmp
mov
dec
cmp
adc
sub
mov
inc
cmp
fwait
aas
cmp
gs
pop
cltd
cmp
jo
cmp
adc
into
rclb
push
xor
cmp
add
cmp
cmpl
add
mov
or
cmp
fsubl
dec
adc
cmp
imul
sub
mov
dec
cmp
sarb
push
xchg
cmp
lds
adc
mov
cmp
ret
mov
cmp
cmp
xorl
out
cmpb
into
add
scas
loop
cmp
out
push
cmp
and
sarb
mov
cmp
fsubrl
cmp
jl
cmp
xlat
int3
cmp
push
data16
fidivrl
sarb
cmp
inc
xor
cmp
cmpl
mov
je
cmp
out
xor
into
nop
cmp
outsb
xchg
cmp
sti
cmp
repnz
imul
jbe
sbb
xchg
mov
outsl
cmp
or
jb
repnz
cmpsb
cmp
sbb
dec
cmp
add
in
jecxz
stos
in
add
scas
xor
cmp
data16
xchg
xchg
mov
cmp
push
adc
cmp
cmp
out
cmp
lret
sbb
cli
cmp
sub
cmp
pop
je
repnz
push
cmp
or
add
pop
cmp
sub
out
jns
cmp
xor
dec
inc
insb
cmp
jecxz
mov
inc
cmp
ret
xchg
cmp
test
cmp
pop
add
fidivs
lret
cmp
or
cmp
das
adc
cs
dec
cmp
adc
out
push
cmpsb
cmp
repnz
testb
xchg
rol
cmp
sbb
cmp
push
sub
fisubl
cmp
push
cmp
xor
cmp
loopne
out
rcll
popa
jp
es
fdivrl
dec
in
mov
aad
cmp
popa
add
push
inc
add
sahf
dec
jnp
inc
notb
cmp
lcall
mov
jb
inc
adc
jp
mov
cmp
popf
cmp
sub
cmp
add
dec
insb
nop
cmp
cmp
cmp
push
cmp
add
xchg
push
cmp
fcoml
cmp
pop
cmp
hlt
cmp
or
cs
add
mov
jo
fimull
pop
cmp
cmpl
jae
cmp
pop
sbb
dec
aam
cmp
push
lods
cmp
pop
cmp
mov
cmp
stos
cmp
out
icebp
cmp
aas
popf
cmp
mov
cmp
or
out
outsl
cmp
cmp
dec
add
fidivs
ja
cmp
int3
cmp
jo
loop
add
cmp
idivb
data16
xchg
stos
cmp
xchg
mov
mov
or
cmp
imul
xor
out
push
cmp
push
les
into
stos
fstpt
pop
out
cmp
pusha
outsl
cmp
cmp
cmp
in
fistpll
mov
sub
pop
lea
and
cmp
mov
mov
scas
cwtl
pop
cmp
jae
mov
or
aaa
adc
outsb
repz
stos
xor
dec
cmp
aam
cmp
dec
in
mov
cmp
movsb
cmp
fstpl
mov
sub
cmp
daa
cmp
sarb
adc
pop
cmp
sub
ret
cmp
and
cmp
add
inc
mov
cmp
sbb
jbe
jae
sahf
mov
cmp
call
data16
insl
outsb
cmp
push
jns
faddp
xchg
cmp
fs
jmp
sarl
pop
pop
sub
into
mov
sarb
xor
jb
das
cmp
in
cmp
xchg
into
cmp
sub
call
mov
cmp
mov
cmp
push
cmp
pop
cmp
adc
cmp
int
cmp
test
push
cmpsl
sarl
outsb
mov
cmp
sub
cmpsb
pop
fidivrl
xchg
push
cmp
stc
cmp
cmc
scas
cmp
test
imulb
cmp
and
cmp
into
cmp
cmp
or
cmp
pop
sti
cmp
xlat
loope
subb
mov
pop
cmp
js
cmp
int3
cmp
sub
cmp
sub
cmp
nop
outsl
cmp
pushf
pop
cmp
mov
cmp
push
cmp
jmp
cmp
bound
bound
out
sbb
sbb
cmp
mov
das
cmp
mov
cmp
pop
cmpl
test
cmp
out
cmp
and
bound
sbb
inc
stos
cmp
ret
sarl
loopne
push
mov
repnz
imul
cmp
js
cmp
adc
cmp
into
cmp
cmp
add
repnz
cmp
hlt
insl
cmp
jmp
xchg
cmp
adc
cmp
icebp
inc
cmp
out
cmp
inc
cmp
fistpl
jo,pn
cmp
ss
cmp
mov
mov
push
fidivrl
stos
sub
cmpsb
xor
xor
cmp
cmp
into
dec
cmp
es
cmp
stos
cmp
sub
adcl
shr
sub
cmp
sahf
in
cmp
add
cmp
push
lock
scas
ljmp
sub
cmp
movsl
push
cmp
cmp
cmp
add
cmp
sahf
xchg
cmp
scas
pop
cmp
mov
cmp
mov
cmp
jle
inc
cmp
inc
insb
cmp
mov
cmp
pop
scas
cmp
lock
mov
cmp
or
mov
xor
push
cmp
cmp
outsb
mov
cmp
xchg
cmpsl
cmp
push
ljmp
sti
or
movb
ss
scas
cmp
shll
cmp
lods
enter
cmpl
loop
cmp
sub
cmp
adc
cmp
sbb
cmp
and
cmp
cmp
scas
push
pop
cmp
xor
cmp
std
cmp
pop
pusha
cmp
jp,pt
cmp
fwait
xor
negl
cmp
ljmp
cmp
hlt
mov
mov
cmp
int
cmp
cmpsb
imul
xor
inc
dec
jno
outsb
in
cmp
sbb
cmp
cs
mov
ds
dec
int3
call
cmp
dec
cmp
mov
or
adc
cmp
sub
cmp
loop
in
cmp
mov
inc
cmp
negb
or
cmp
stc
xchg
cmp
xchg
cmp
push
mov
cs
sub
push
jne
pop
mov
sub
cmp
add
jge
out
mov
cmp
cmp
xlat
test
cli
sub
xor
xor
into
xchg
out
data16
cmp
sub
data16
cmp
idivb
outsb
aaa
je
jp
fidivrs
sbb
cmp
push
sub
cmp
cmc
xor
adc
cmp
out
cmp
cmc
insl
cmp
mov
inc
cmp
adc
or
cmp
fdivrl
cmp
inc
ds
cmp
movsb
enter
out
cmp
or
cmp
stos
cmp
mov
cmp
and
cmp
xor
cmp
jp
outsb
inc
push
ds
adc
out
inc
inc
cmp
gs
cmp
scas
cmp
add
cmp
sbb
cmp
mov
cmp
jno
data16
mov
sbb
cmp
xchg
js
mov
pop
dec
cmp
aam
cmp
mov
cmp
jbe
and
cmp
test
cmp
fmull
push
pop
cmp
mov
stc
xchg
cmp
push
icebp
inc
cmp
cs
and
test
cmpl
xchg
ds
movsl
cltd
cmp
iret
ja
or
ficoms
mov
cs
enter
stos
cmp
add
roll
pop
adc
sahf
fmuls
or
aaa
cmp
push
cs
cmp
xchg
mov
gs
cmp
lock
mov
orps
addb
cmp
ljmp
cmp
mov
mov
mov
cmp
std
sbb
cmp
in
xchg
cmp
jno
sub
cmp
cs
cmp
out
cmp
aaa
pop
cmp
gs
scas
ds
inc
mov
cmp
sarb
js
cmp
mov
cmp
jmp
mov
cs
dec
cmp
push
cmpl
inc
push
cmp
ja
cmp
loop
cmp
loopne
cmp
cmp
cmp
push
jp
cs
fiadds
or
sbb
or
fiadds
push
ds
in
cmp
push
push
cmp
lods
adc
scas
sbbl
repnz
push
cltd
ret
cmp
mov
aas
push
push
mov
cmp
jp
pop
or
shlb
dec
cmp
clc
mov
cmp
xor
outsb
mov
ds
fnsave
mov
sbb
stos
mov
cmp
push
mov
out
test
mov
cmp
cmp
cmp
push
insl
cmp
jle
dec
cmp
mov
mov
ds
pop
cmp
les
push
push
cmp
add
aas
jnp,pn
cmp
adc
aas
mov
mov
cmp
or
fnstcw
mov
sahf
outsb
cmp
cld
cmp
push
daa
fdivrs
push
sbb
cmp
push
lods
cmp
ficomps
enter
test
outsb
add
out
cmp
ret
ss
cmp
push
cmp
cli
imul
add
ds
aas
ret
cmp
mov
or
aas
mov
pushf
fwait
cmp
test
mov
ds
mov
fiaddl
cmp
repnz
cmp
jb
cmp
mov
dec
cmp
dec
mov
outsb
lds
aas
out
sbb
into
mov
jge
ljmp
cmp
pushf
inc
ds
mov
ds
les
cmp
loopne
cmp
cwtl
mov
aas
xchg
dec
jmp
cmp
mov
cmp
add
sub
cmp
scas
popa
fidivrs
xchg
fidivrs
ds
fs
rolb
cmpsl
sbb
ds
out
cmp
lret
cmp
inc
pop
cmp
movb
ds
mov
cmp
cmp
cwtl
mov
push
pop
movsb
cmp
fnstcw
dec
dec
cmp
mov
ds
pusha
stos
cmp
push
mov
cmp
push
sarb
sbb
cmp
insb
sarl
cmp
cmp
in
sub
cmp
adc
push
cmp
and
ds
inc
sub
or
cli
scas
and
into
negb
cmp
mov
mov
cmp
popf
aas
jbe
aas
fistl
cmp
sbb
cmp
jle
jb
dec
inc
pop
inc
scas
jle
aas
push
rclb
scas
jg
aas
push
sarb
repnz
cmp
mov
icebp
aas
ss
movsb
cmp
cs
in
ds
hlt
aam
mov
fsts
out
aam
aas
cmpsb
pushf
scas
inc
out
ja
into
pushf
out
cs
aas
and
inc
es
mov
cmp
sahf
mov
xor
mov
rclb
aas
jle
sarb
ds
shll
push
pop
sarl
shlb
outsb
or
aas
mov
jae
out
test
cmp
dec
xchg
cmp
push
mov
cmp
cs
xlat
cmp
pop
dec
aas
push
ret
push
fnstsw
cmp
test
into
ds
push
dec
cmp
addl
sub
mov
cmp
in
cmp
jnp
cmp
xlat
sbb
cmp
jle
cmp
out
cmp
lcall
inc
push
sub
mov
sarl
inc
add
popf
adc
sub
arpl
jmp
test
cs
adc
push
cmpl
sbb
push
cmp
testl
cmpsb
fadds
cmp
dec
mov
mov
or
lret
add
hlt
cmp
mov
pop
cmp
mov
inc
pop
shll
jle
lret
dec
sbb
or
cmp
dec
cli
cmp
pop
loopne
into
xchg
pop
mov
cmp
in
stc
ds
xchg
push
shl
cmp
fisubrs
jle
out
ds
or
rolb
popa
inc
mov
mov
jbe
ds
aas
push
mov
push
add
test
inc
bound
cld
ds
jg
ds
fistpll
into
xchg
daa
cmp
mov
cmp
jbe
enter
pop
ds
into
mov
mov
cmpl
adc
cmp
xchg
stos
cmp
push
or
inc
stos
xor
into
in
inc
or
ret
aas
push
int
cmp
jmp
dec
bound
inc
push
mov
inc
ds
mov
cmp
xchg
cmp
std
cmp
mov
adc
inc
lcall
inc
ss
dec
cmp
rcl
dec
cwtl
sahf
cmp
pop
dec
push
aas
repnz
cmp
rolb
cmp
repz
cmp
sub
inc
cs
cmp
outsb
and
cmp
fimuls
leave
cmp
lahf
fistpll
xlat
mov
ds
flds
pop
push
cmp
inc
xchg
cmp
xor
inc
scas
push
sub
ds
cmp
repnz
movsl
cltd
inc
incb
insb
ds
icebp
aas
cmp
cmp
cmp
jbe
or
sahf
ss
inc
mov
in
outsb
hlt
pop
cmp
imul
fisubrs
cmp
xor
cmp
jbe
ds
out
lock
cmpsb
dec
scas
inc
into
push
sarb
cmp
ficomps
cmpsb
cmp
xchg
push
and
ret
cmpsb
aaa
outsl
inc
pop
cmp
inc
int3
jo
push
xchg
inc
cmp
movsl
test
data16
cmp
sahf
pop
out
push
incl
xlat
adc
fdivrs
push
cmc
cmp
shll
mov
jmp
sub
std
pushf
cmp
cmp
dec
jg
scas
xchg
jle
dec
stos
lahf
inc
outsb
push
leave
cmp
lds
cmp
push
ljmp
cmp
scas
cmp
inc
pop
inc
mov
jnp
out
sub
imul
call
cmp
notb
dec
inc
leave
sbb
cmp
clc
roll
in
sahf
cmp
sahf
movsl
sbb
cmp
dec
xor
inc
cs
into
aas
inc
cmpsb
adc
dec
fistpll
mov
inc
sub
cmp
outsb
sub
shl
push
cmp
out
inc
dec
clc
nop
inc
out
dec
sbb
mov
pop
inc
into
push
dec
cmp
mov
cmp
pop
or
icebp
add
aas
sbb
out
adc
into
xor
aas
jle
mov
cmp
push
adcb
movsl
leave
inc
jle
sarl
paddq
es
push
inc
subb
or
mov
outsb
mov
mov
inc
push
movsl
and
xchg
mov
outsb
hlt
cmp
push
pop
mov
aas
incb
inc
push
stc
push
cmp
xor
xlat
cmpb
fiadds
aas
stos
adc
aas
into
mov
sarb
clc
fs
mov
imul
mov
in
push
adc
cmp
imul
into
pushf
inc
ss
ds
in
scas
pop
call
inc
data16
inc
cmpsb
pop
out
ds
jl
jb,pt
sbb
out
in
add
nop
inc
mov
icebp
inc
sbb
adc
ss
cmp
test
aas
jle
xchg
ds
fdivrs
es
inc
push
pop
jp
outsb
into
cmp
cmp
stc
adc
jmp
cmp
mov
aam
cmp
cs
arpl
inc
pop
gs
cmp
push
inc
sub
push
in
sarl
push
andb
maxps
lcall
cmp
xor
cmp
dec
in
push
ljmp
aas
xchg
adc
aas
dec
rcrb
cmp
jbe
sahf
xchg
cmp
into
mov
inc
inc
jle
inc
inc
dec
xchg
inc
out
mov
cmp
in
aas
push
or
inc
xor
cmp
pop
pop
inc
pop
out
cmp
scas
xor
adc
inc
inc
jno
aas
sahf
call
xlat
aas
push
out
cmp
lret
loope
mov
std
inc
scas
fistl
cmp
push
dec
imul
fcmovbe
cmp
add
inc
cmpsb
gs
cmp
cmpsb
ret
stos
ret
aas
cmp
cmp
adc
ds
inc
stc
aas
cs
inc
scas
cmp
pop
repz
cmp
xchg
cmp
or
cmp
push
lret
dec
inc
ds
sbb
xchg
xchg
cmp
and
data16
inc
inc
sahf
ljmp
push
outsl
inc
cmp
push
inc
cmpl
ja
inc
jle
sub
aas
push
movsb
push
cmp
in
loope
and
inc
adc
pop
cmp
cmp
inc
inc
push
xchg
cld
aas
out
cmc
mov
outsb
push
xchg
cmp
mov
inc
ljmp
inc
lret
inc
jbe
mov
aad
cmp
sub
bound
mov
aas
dec
push
outsl
ds
pop
test
sahf
jmp
stos
cmp
mov
sub
inc
ret
ds
cmp
out
xchg
je
repnz
dec
rol
aas
mov
pusha
loope
mov
inc
sub
cli
inc
call
inc
mov
mov
loop,pt
lret
cmpsb
data16
cmc
cmp
notb
cs
scas
or
outsb
cmp
cs
push
cmp
insb
std
cmp
push
sbb
push
shr
cmp
andl
daa
sarl
mov
cmp
loopne
inc
xchg
xlat
cmp
sub
cs
sarb
push
scas
hlt
cmp
cwtl
sbb
pop
cmp
mov
cmp
or
cmp
ret
mulb
inc
sbb
cmp
scas
cmp
popf
cmp
outsb
fistl
cmp
adc
cmp
mov
fs
aas
outsb
mov
xchg
aas
ficomps
lret
inc
into
mov
inc
aas
mov
push
sub
cmp
nop/reserved
push
shll
inc
pop
aaa
ds
scas
fcmovu
ds
pop
xlat
inc
cs
inc
movsb
mov
cmp
mov
jle
mov
ds
into
pop
jae
xchg
add
inc
cmp
inc
outsb
mov
cli
ja
inc
xchg
push
faddl
jle
out
imul
inc
and
ds
into
int
cmp
out
inc
mov
push
iret
inc
rorb
cmpsb
aas
push
testl
inc
push
repnz
sbb
inc
roll
jle
cmp
cmp
pusha
inc
push
imul
scas
push
aas
imulb
out
inc
ret
inc
push
imul
dec
xchg
test
fidivrs
jno
inc
scas
jb
cmp
dec
mov
inc
xchg
aas
outsb
push
loop,pt
addb
inc
fisubrl
xchg
cmp
in
aas
xchg
nop
cmc
inc
cmpsb
cmp
cmp
dec
testl
insl
jno
push
mov
scas
dec
mov
adc
adc
in
inc
lret
inc
mov
sub
push
cli
popf
cmp
into
mov
inc
push
pop
lods
cmp
in
cmp
test
loop
inc
sahf
and
push
inc
jbe
adc
adc
cmp
xor
inc
jle
aas
xchg
push
inc
outsb
pop
and
popa
push
inc
jl,pt
inc
mov
sbb
cmp
fisubs
fwait
inc
incb
ds
movsb
pop
inc
push
insb
gs
inc
mov
cmp
mov
cmp
shrb
fildl
rcrl
fldenv
out
dec
hlt
inc
pop
fdivrl
mov
inc
mov
sub
push
int3
jbe
pop
lret
mov
idivb
aas
jbe
enter
xchg
inc
outsb
subl
aas
in
inc
push
lcall
aad
inc
mulb
aas
mov
repz
adc
cmp
es
xor
pushf
addl
cwtl
lret
xchg
cmp
roll
cmpsb
dec
es
push
mov
ds
xor
aas
mov
mov
ds
filds
pop
pushf
inc
mov
inc
push
into
mov
inc
push
jno
sbb
inc
es
inc
scas
dec
jle
repnz
outsb
iret
adc
cmp
mov
fcmovb
xor
es
cmpl
or
cmp
das
push
cmp
push
sbb
add
cs
and
mov
inc
rolb
pusha
inc
pop
cmp
cmp
roll
sub
scas
aas
mov
cmpl
mov
imul
or
inc
es
sti
inc
jo
aas
mov
dec
inc
ds
sub
scas
je
inc
jbe
outsb
inc
push
pop
dec
inc
jp
inc
cmp
jne
cmp
xlat
cmp
daa
mov
cmp
loop
push
inc
scas
mov
inc
outsb
push
rolb
ds
lea
inc
sbb
inc
data16
inc
jno,pn
inc
scas
je
cmp
push
cmp
ds
xchg
ds
mov
cmp
push
push
pop
inc
mov
pop
xchg
aas
es
jae
push
roll
inc
adc
inc
push
bound
aas
mov
addr16
adc
cmp
cmp
inc
mov
loop
push
push
pop
aas
xchg
cmp
lret
cmp
inc
cmp
scas
roll
movsl
fildl
test
pop
cmp
je
cmp
add
sahf
cmp
and
aas
into
dec
scas
inc
into
lds
cmp
and
mov
cmp
call
cld
inc
xchg
add
inc
pop
pushf
or
fmulp
inc
negb
test
lock
lcall
aas
cmp
fimuls
cmp
xchg
in
inc
loop
mov
notb
cmp
and
inc
shll
inc
cmpsb
rolb
into
dec
test
push
fld
cmp
dec
jb
pop
xchg
ja
dec
or
inc
mov
aam
cmp
cmpsb
push
daa
cmp
pop
pop
and
cli
cmp
inc
scas
lahf
cmp
cmpb
in
inc
fcmove
or
dec
pusha
test
mov
in
cmp
push
inc
out
xchg
lds
dec
xchg
mov
scas
stos
pop
sbb
and
mov
inc
mov
fwait
xchg
inc
rolb
fiadds
jp
into
cmpb
cltd
aaa
cmp
inc
pop
cmp
sub
cmp
or
inc
pop
cmpl
mov
inc
out
or
int
cmp
inc
cmp
rol
cmp
xor
push
pop
js
and
jp
out
add
inc
add
inc
dec
or
inc
mov
pop
inc
inc
adc
inc
inc
mov
push
cmp
in
inc
mov
sbb
cmp
inc
scas
lahf
nop
inc
inc
sub
inc
ret
cmp
lea
inc
sahf
rolb
inc
jl
push
ja
inc
mov
dec
cmp
movsl
xchg
inc
ss
daa
inc
cmpsb
dec
cmpl
mov
jns
cmpsb
shlb
inc
sub
into
insl
inc
loop,pt
add
cli
push
outsb
aas
out
mov
and
cmp
fdivl
dec
cltd
inc
cmp
enter
cmp
cmp
pop
cltd
inc
out
sub
and
cmp
xlat
aas
ret
cmp
xchg
cmp
jle
cmp
sbb
fwait
ds
inc
call
inc
mov
dec
inc
pop
xor
inc
decb
stc
inc
jp
test
dec
insl
cmp
mov
inc
push
mov
cmp
inc
pop
jns
inc
into
arpl
inc
ljmp
inc
ds
loope
dec
pop
mov
inc
scas
sbb
add
inc
mov
sbb
fidivs
cmp
pop
inc
push
aas
jne,pn
aas
xor
cltd
cmp
jmp
aas
mov
cs
scas
call
or
cmpsb
and
jbe
mov
outsb
adc
cmp
lcall
xchg
repz
inc
ds
incb
add
aas
push
cmp
pop
jp
cmp
lret
cmp
xchg
jge
cmp
pop
inc
ret
mov
sbb
push
addl
mov
inc
xor
js
push
popa
test
cmpsb
popf
aad
lods
or
stc
cltd
inc
out
jne
inc
jbe
mov
inc
mov
popa
inc
dec
cmp
enter
sub
inc
jbe
mov
lret
aas
into
call
arpl
push
adc
cmp
mov
inc
ficomps
leave
cmp
xor
inc
orb
inc
mov
daa
cmp
inc
in
inc
outsb
adc
inc
outsb
fnstsw
cmp
cmc
inc
cmp
addl
push
test
cmp
out
mov
aas
rorb
aas
jl,pn
sbb
pop
cmp
lahf
fldl
mov
fidivrl
lcall
dec
decb
outsl
inc
into
pop
sub
dec
out
xchg
push
push
inc
cmp
cmpl
aas
mov
mov
call
add
xchg
lock
das
mov
cmp
jo
inc
cs
inc
add
inc
pop
clc
les
adc
nop
inc
out
cmp
push
mov
ljmp
or
inc
fiadds
aas
cs
sub
cmpsb
mov
out
inc
insl
inc
cmp
mov
out
pop
insb
inc
scas
xlat
inc
lret
inc
fidivrl
cmp
mov
jae,pn
cmp
cs
inc
es
mov
cmc
pop
inc
mov
lock
aas
jb
pop
cmp
cmc
mov
and
push
lds
fidivl
popa
inc
loop
cmovs
push
icebp
inc
cmpsb
sub
into
cmp
movl
mov
cmp
test
xchg
in
iret
cmp
mov
sub
out
bound
imul
push
or
and
cs
sub
inc
pop
stc
mov
cmp
add
cmp
scas
mov
test
jle
cmpl
outsb
lock
mov
dec
inc
jbe
inc
cmp
jecxz
outsb
jp
inc
jb
scas
inc
out
lahf
fdivrs
cli
jns
inc
dec
xor
mov
inc
pop
incb
aas
fldenv
fisubs
inc
push
lods
lret
dec
shlb
inc
into
dec
xor
aas
out
leave
bound
stos
orl
flds
mov
inc
mov
nop
aas
push
inc
mov
inc
sbb
inc
mov
and
cmp
xchg
mov
inc
scas
mov
pusha
dec
mov
or
push
lahf
cmp
cmp
cmp
add
mov
inc
xor
cmp
xchg
nop
cmp
dec
push
inc
scas
inc
sbb
mov
sbb
push
push
aam
ds
js
jbe
mov
dec
mov
stos
inc
repnz
aas
negb
inc
mov
inc
push
add
push
inc
ror
cmp
push
xchg
inc
dec
mov
ss
xor
cmp
stos
int
mov
cmpb
imul
push
mov
cld
inc
ds
jle
cmp
inc
sub
xlat
inc
cs
and
sbb
ds
jne
aas
sahf
inc
fistpll
mov
loope
jle
imul
out
into
idivb
and
roll
jbe
inc
imul
adc
or
out
cmp
dec
pop
test
pop
push
inc
cs
ds
or
jle
idivb
dec
adc
cmp
mov
idivb
pop
mov
cmp
dec
stc
inc
fimull
and
dec
add
xchg
inc
mov
cmp
ds
xor
cmp
scas
outsb
inc
xchg
cmp
mov
inc
scas
push
ret
inc
add
push
ds
lcall
mov
lock
push
cmova
std
inc
mov
sbb
inc
into
mov
inc
push
and
inc
push
xchg
push
dec
xchg
adc
dec
ds
push
loop
dec
in
cmp
out
fidivrs
sti
sbb
inc
dec
inc
sahf
xchg
cmp
lock
ds
mov
cmp
lret
aas
push
mov
cld
cmp
cmp
mov
fiadds
lods
dec
scas
push
cmp
pop
push
inc
scas
das
aam
jb
cmp
mov
cmp
pop
mov
inc
lea
cmp
add
sarb
add
mov
inc
into
dec
pop
cmp
dec
mov
cmp
inc
scas
xchg
cmpl
lods
imul
ds
scas
mov
mov
inc
outsb
inc
stos
leave
or
mov
xchg
xchg
pop
inc
xor
cs
push
push
decb
jno
inc
sahf
cmp
inc
mov
subl
cs
sub
ds
inc
adc
inc
push
std
push
aas
out
iret
cmp
sub
or
dec
mov
sahf
cmp
push
xlat
dec
inc
outsb
fstpt
mov
cmp
test
inc
testb
inc
lret
inc
mov
cmpsl
ss
mov
jnp
cs
fdivrl
fiadds
inc
inc
dec
mov
fwait
inc
into
out
dec
fildll
inc
out
iret
stc
inc
xchg
add
inc
dec
popa
cmp
outsb
aam
into
cmp
mov
jecxz
mov
bound
ss
and
cmp
aam
push
adc
inc
fsubp
inc
cmp
lds
pop
xor
sub
lcall
cmp
test
dec
cmp
int3
push
inc
ljmp
cmp
mov
push
jmp
inc
ss
cmp
mov
test
pushf
inc
out
stc
into
inc
into
jg
cmp
iret
aas
ljmp
inc
loop
popf
dec
mov
sub
lahf
or
mov
inc
das
dec
fsubp
inc
cmp
jo
dec
push
dec
jb
xchg
movsl
mov
inc
insb
mov
iret
xor
icebp
cmp
jbe
cli
xchg
ret
and
xor
inc
ds
jp
cs
movsl
inc
push
imul
inc
pop
and
inc
xor
pop
cmp
fldl
dec
ss
cmp
mov
loope
inc
cmp
xor
push
mov
add
and
adc
addb
sub
repz
dec
ds
iret
dec
lcall
inc
xchg
sbb
inc
ljmp
dec
lret
inc
mov
lds
inc
outsb
popf
mov
cmp
cltd
gs
data16
inc
mov
insl
dec
dec
xchg
je
cmpsb
divb
pop
mov
leave
inc
xchg
aad
cmp
and
mov
cmp
cs
inc
mov
in
scas
loopne
loop,pt
lds
push
std
inc
stos
icebp
dec
scas
jge
inc
fstpl
dec
push
inc
xchg
cmp
js
inc
mov
add
cmp
dec
aam
fimuls
inc
adc
inc
mov
cltd
out
cmp
mov
jp,pt
pop
inc
push
int3
pop
jle,pt
cwtl
inc
out
lcall
data16
sbb
and
inc
scas
push
and
push
out
cmp
ja
cmp
xor
cs
adc
jmp
cmp
adc
int
inc
xchg
cmp
mov
aas
mov
sbb
scas
add
fisttps
inc
cs
rolb
jg
cmp
pushf
data16
ds
mov
mov
mov
mov
aas
xchg
imul
inc
jle
lock
mov
ds
add
xchg
imul
cmp
xor
xchg
dec
outsb
push
rolb
into
mov
dec
cmpsb
inc
call
inc
jbe
roll
sbb
add
push
push
cmp
cmpsb
add
push
jbe
repnz
imul
imul
jg
dec
dec
js
inc
xor
aaa
pop
ds
mov
dec
pop
out
inc
xor
inc
cs
cmp
adc
inc
sahf
cmp
into
lock
popa
dec
ds
inc
jns
out
add
push
aam
dec
push
pop
leave
and
inc
outsb
cmp
sub
lods
fimull
scas
aas
notb
mov
inc
out
or
cmpsb
inc
mov
dec
out
cmp
dec
scas
icebp
and
mov
inc
jbe
mov
pop
sub
dec
mov
push
cmp
add
daa
dec
inc
dec
cmp
push
sub
in
inc
cs
cmp
dec
sahf
mov
add
in
dec
add
jle,pt
jo
ds
inc
pop
mov
dec
lcall
cmp
daa
in
dec
mov
sarl
xchg
add
cs
out
outsb
out
sub
jns
dec
scas
jbe
inc
push
adc
inc
cs
imul
aas
and
insl
cmp
dec
lret
adc
dec
dec
lods
cmp
imul
jmp
dec
cmp
inc
xchg
push
mov
inc
out
fcmovb
dec
adc
inc
out
add
cmp
loop
cmp
cmp
push
ljmp
in
bound
xchg
cmp
pop
aam
cmp
inc
outsl
inc
sahf
in
mov
dec
cmpsb
xchg
dec
add
cmp
pop
addr16
repnz
mov
push
mov
dec
repnz
xchg
gs
inc
scas
dec
daa
cmp
aad
dec
inc
mov
dec
cs
inc
sahf
mov
cli
inc
out
mov
inc
bound
dec
cmp
mov
dec
pop
inc
push
je
inc
or
mov
lods
std
inc
mov
clc
inc
dec
ret
outsb
ss
inc
and
cmp
outsl
jecxz
outsb
cmp
inc
movb
cs
inc
out
dec
inc
arpl
pop
shl
inc
add
inc
ss
ljmp
inc
inc
imul
pop
dec
scas
aad
ds
and
dec
xor
lea
sub
dec
scas
add
sarl
mov
sub
inc
rcrb
or
jo
xchg
cmp
popf
xchg
ds
pop
test
loop
push
inc
ficomps
rorb
mov
mov
cs
ret
cmp
add
mov
add
jge
in
add
and
aad
xor
add
jle
and
mov
adc
add
into
add
pusha
add
inc
add
adc
and
add
enter
sub
out
add
jno
dec
xchg
inc
add
ljmp
pop
add
pop
adc
cmp
lret
push
add
or
jo
xlat
sbb
and
add
popf
rcl
xchg
arpl
sbb
shl
push
add
add
mov
add
push
or
sub
push
add
xchg
pop
arpl
sbb
incb
xchg
cwtl
cmc
jne
pop
rolb
div
adc
add
sub
xor
add
mov
mov
and
add
push
mov
aam
aad
pusha
add
add
subb
popa
sub
icebp
hlt
rolb
jbe
xor
add
and
sub
dec
clc
jg
and
add
mov
xchg
pop
in
mov
popa
cmp
add
je
adc
sub
and
add
xchg
or
test
add
add
mov
rcll
inc
in
arpl
pop
js
pop
cwtl
sar
js
dec
adc
in
dec
add
subl
sbb
mov
cmp
xchg
clc
scas
sarb
cmpl
add
add
add
negb
add
and
add
cwtl
dec
add
add
out
cmp
fdivl
pushf
in
xor
add
adc
add
inc
add
or
add
mov
add
add
rcll
add
rep
sarl
rolb
add
jb
add
add
adc
sbb
pop
add
aas
out
jle
int
out
add
fcoml
dec
add
mov
mov
imul
pop
lock
mov
stos
add
add
flds
and
and
orl
test
push
jecxz
js
ss
add
rcrl
popl
arpl
cmp
xor
idiv
mov
je
pop
pop
add
add
add
data16
adc
shlb
clc
xchg
or
mov
test
ljmp
and
add
add
add
add
pop
add
sahf
pop
xor
add
pop
add
mov
js
or
movsb
adc
add
aam
or
adc
add
int3
push
rcll
out
pop
push
outsl
jecxz
out
pop
mov
out
fs
mov
add
dec
add
inc
add
xor
add
icebp
mov
add
test
frstor
add
clc
cmp
inc
add
cli
sbb
mov
add
inc
add
jg
int
sub
or
lock
jl
jge
movb
sti
in
mov
jg
add
out
sarl
add
mov
call
fiaddl
dec
add
add
fldcw
add
and
insl
sti
lcall
leave
pop
push
add
add
add
jmp
dec
pop
stc
xchg
in
xchg
mov
mov
ja
shll
pusha
add
adc
xlat
mov
ljmp
add
test
cmc
scas
sbb
push
pop
in
lcall
fnstsw
es
add
les
inc
add
and
nop
jl
push
cli
push
xor
add
add
sbb
jg
or
xchg
je
pop
add
add
add
add
add
add
add
add
add
mov
inc
add
repz
add
mov
jp
fisubl
inc
mov
data16
inc
add
add
js
sub
xor
movswl
add
je
sub
dec
push
jno
add
adc
in
jle
cltd
lock
jl
movl
aam
add
cmp
mov
or
sub
cmc
fmuls
add
jae
aas
ret
add
adc
xchg
xchg
add
add
add
fisttps
aaa
aad
push
faddl
cmp
mov
push
add
and
xchg
add
xor
add
test
pusha
add
add
xchg
add
mov
test
pop
lock
cmp
rorl
push
mov
insl
pop
and
dec
xor
inc
add
dec
add
push
add
sbb
push
jb
mov
dec
add
inc
xchg
or
andb
add
ljmp
add
lret
out
or
es
cli
pop
xchg
and
adc
ret
dec
nop
movsl
jl
push
xor
data16
rolb
incb
dec
adc
add
test
add
outsl
add
outsb
add
sbb
pusha
add
into
leave
test
loopne
add
iret
add
mov
loop
and
daa
dec
add
fmul
adc
add
mov
add
add
outsl
add
rorb
or
in
bound
mov
add
ret
loope
xor
add
popa
orb
cmp
pop
xlat
add
pmulhw
pop
mov
cmc
fmulp
not
stc
sub
or
push
add
das
and
xor
add
shll
add
cmp
mov
popf
loop
pop
or
dec
incb
inc
add
inc
add
mov
fnstcw
mov
adc
add
cli
mov
cli
xchg
cmp
daa
daa
add
es
add
rcll
mov
cmp
cld
popf
in
push
add
cld
push
mov
mov
fisttps
or
inc
add
mov
add
lret
pop
ret
js
loope
add
mov
mov
add
scas
andb
cs
push
add
loope
mov
inc
imul
mov
mov
dec
add
shlb
lret
push
add
int
push
lea
cmpsb
shrb
cltd
cmp
fistpll
dec
fadds
adc
add
push
add
add
add
ljmp
add
push
aaa
jmp
add
hlt
sub
in
cmc
aaa
push
pop
xchg
mov
cmp
pop
adc
addr16
mov
loop
dec
add
or
sahf
loope
mov
mov
cmp
scas
mov
or
jae
jg
add
mov
orb
cmp
sub
add
xchg
jne
jmp
and
add
jmp
lea
pop
add
mov
outsl
adc
int
leave
je
arpl
add
jbe
out
imul
loopw
add
negl
sub
test
pop
add
add
inc
add
rorl
inc
add
add
movsb
and
add
pop
add
add
jae
xor
add
pop
and
enter
inc
add
xchg
pop
cmc
add
push
jb
dec
rcll
add
add
mov
or
mov
add
test
pop
inc
add
add
cwtl
rolb
add
and
sub
adcb
add
dec
add
fildll
push
add
iret
jae
insl
in
cmp
ffreep
sbb
mov
mov
call
xor
popa
sbb
test
inc
mov
into
add
ror
outsb
add
jbe
cmpsl
fistl
jne
xchg
jge
leave
int3
stos
cmp
mov
mov
das
add
add
jb
add
sub
fwait
fwait
mov
leave
jbe
rcrl
test
mov
add
mov
jne
imul
add
cmp
push
add
mov
clc
cmp
cmp
pop
sbb
mov
out
sub
shl
xor
add
popa
fsubrs
fcoms
lds
mov
mov
pop
pop
inc
cmp
pop
add
dec
jp
test
pop
add
pop
add
movb
add
mov
fscale
rcll
xchg
add
popa
sub
push
add
add
cmp
int3
xchg
cmp
xchg
dec
add
cmp
jbe
in
xchg
outsl
loop
insl
add
js
bound
or
pop
add
ljmp
and
add
cli
dec
add
paddb
into
movsl
push
add
jo
movsl
jmp
add
in
add
mov
adc
add
cmp
mov
aad
ret
add
add
cmpsl
push
add
popf
jns
xor
adc
cvtps2pi
jg
push
je
cwtl
pop
movswl
pushf
xor
arpl
add
je
jmp
movsb
cli
jl
adc
sti
mov
add
add
xchg
or
fsubp
jge
add
add
push
add
or
icebp
adc
add
out
out
add
cs
mov
outsl
mov
adc
subb
call
push
vmovapd
scas
add
mov
add
add
fildl
into
xor
cltd
es
add
add
xchg
xchg
int3
dec
aas
jecxz
loope
add
in
ficoms
sti
out
xchg
movsl
test
cmp
sbb
pusha
add
mov
pop
mov
fcmovnbe
xchg
cli
mov
stc
add
cli
inc
ja
dec
add
or
mov
mov
ret
add
sarb
ret
lds
push
add
add
sub
jne
add
dec
add
jge
outsb
add
add
sub
jle
xor
add
add
add
inc
push
mov
jb
and
outsl
push
push
add
leave
adc
xchg
repz
cmp
test
jne
sbbl
add
add
imul
add
loopne
stos
add
adc
inc
das
add
add
xchg
sbb
or
push
pusha
add
push
xor
addr16
add
sub
add
add
add
fstl
nop
add
sub
mov
lret
add
add
pop
aaa
enter
pop
mov
add
call
ret
std
js
push
add
xlat
call
add
cmc
testl
add
push
out
push
xchg
add
aam
pop
out
sbb
add
add
inc
dec
push
ficompl
add
or
orb
xor
xchg
cmp
popf
movsl
pop
add
lret
pop
add
push
add
add
incl
adc
mov
add
jnp
fwait
adc
xor
xor
add
xor
jae
add
shufps
or
addr16
mov
lret
add
sub
add
sbb
jnp
pop
add
mov
and
nop
add
add
jns
lods
mov
mov
pop
dec
add
cmc
add
in
adc
add
jne
push
sbb
popf
xchg
je
mov
into
aad
cmp
pop
cmpsb
movsl
sub
loope
hlt
aad
repnz
scas
aaa
mov
jne
outsb
add
test
stos
lds
aad
or
stc
add
insl
cltd
adc
add
lds
add
push
add
add
xlat
mov
jp
push
ret
pop
add
sahf
mov
dec
pop
push
cmp
das
mov
add
call
call
add
sbb
aad
adc
xor
out
sarb
and
dec
add
pop
add
push
add
filds
sbb
add
add
jecxz
mov
testl
sub
adc
add
inc
push
add
jmp
test
jge
in
mov
jp
rclb
lods
arpl
imul
ja
add
mov
outsb
add
pop
add
mov
add
xor
sahf
std
hlt
decl
add
or
fldcw
push
xchg
dec
add
mov
movsl
pop
dec
cmpl
or
dec
test
icebp
and
add
xchg
mov
outsl
jo
push
add
inc
add
add
add
add
xchg
fs
nop
pop
add
out
lret
adc
add
add
fimuls
into
mov
push
push
in
rcll
or
add
ja
and
popf
es
adc
sarb
add
cltd
jl
sbb
add
add
bound
mov
add
in
cmpsb
pop
add
push
add
shll
and
add
fwait
andl
repnz
sub
xchg
cmpsl
add
add
jo
inc
add
outsb
add
fdivrs
jae
shll
jge
pop
add
adc
sbb
and
add
add
push
add
aad
lods
stos
sbbl
icebp
push
add
test
add
out
sbb
movsb
xor
inc
cmp
sub
dec
add
add
mov
adc
xchg
cmp
lret
add
push
add
fnsetpm(287
cmp
jne
add
dec
add
sbb
push
add
push
outsl
add
xor
pop
add
sub
push
add
add
popf
add
int3
outsl
lock
pop
add
sbb
add
push
add
scas
or
adc
add
inc
movsb
fnstenv
insb
add
inc
add
int3
aaa
mov
fwait
test
add
scas
dec
add
add
add
adc
sahf
stc
lods
xchg
scas
popf
mov
cli
push
add
dec
add
stos
in
scas
pop
add
fwait
inc
add
mov
test
mov
mov
pushf
pusha
add
add
sbb
cmp
mov
mov
in
les
and
add
add
test
pop
add
add
icebp
inc
pop
mov
cmp
aas
ljmp
aaa
ret
add
test
cmc
xorb
mov
pop
mov
jmp
sahf
add
add
movsb
or
add
js
lds
add
cmp
addr16
push
add
push
mov
call
dec
add
push
add
inc
add
sbb
lea
inc
add
add
adc
add
jae
and
sbb
insb
add
add
test
cmp
jle
xchg
mov
adc
add
sbb
xchg
fmull
add
ja
adcb
dec
out
xor
clc
ja
leave
xchg
fidivs
add
rolb
bound
ror
and
nop
dec
add
add
add
mov
pop
and
add
cmp
jae
test
imul
mov
xor
ret
add
sbb
mov
fdivp
dec
lret
xor
add
xchg
addr16
incl
repz
rcrb
add
out
negb
or
add
add
add
idivl
add
add
inc
or
call
int3
fcomps
aam
add
repnz
add
add
add
push
add
add
jo
fldenv
ljmp
add
mov
push
jl
adc
fstpt
push
jne
in
add
adc
mov
or
loop
jl
stc
pshufw
add
add
add
shll
ret
gs
lods
cmp
lret
inc
add
add
add
and
add
adc
add
add
add
repnz
loopne
adc
add
push
add
jb
xor
and
add
push
and
add
inc
add
push
add
jge
add
mov
cld
sub
lods
add
aad
or
jae
ljmp
nop
adc
insb
add
add
pop
das
out
add
add
je
dec
clc
cmpsl
cmp
dec
jecxz
dec
mov
add
sub
add
mov
jle
mov
jb
jo
push
xchg
sub
push
out
push
pop
sahf
adc
mov
jae
pop
add
scas
movsb
out
js
das
mov
lret
xchg
pop
mov
das
xchg
jae
add
addl
in
jg
sub
dec
add
cli
add
outsb
add
push
ljmp
imul
in
mov
test
cltd
mov
bound
cwtl
sub
mov
inc
add
sbb
fadds
nop
dec
add
adc
shll
lds
xchg
ja
pop
add
sti
daa
push
add
lret
bound
mov
cmc
xchg
inc
add
add
cwtl
and
add
test
add
mov
inc
add
lds
push
outsb
add
loop
sbb
mov
push
cli
pop
mov
pusha
add
pop
add
xchg
bound
lea
add
jns
cli
add
xchg
aaa
mov
lds
sbb
mov
dec
lods
lock
xchg
push
add
les
call
add
add
add
add
add
inc
add
test
xchg
add
add
fcoms
mov
sti
adc
add
add
jle
bound
loopne
pushf
pop
add
add
xchg
jnp
jp
cmp
sub
repz
sbb
scas
scas
das
and
add
cmp
stos
rorb
addr16
xchg
daa
scas
add
test
add
lahf
cmp
push
add
add
adc
add
dec
mov
test
roll
push
sbb
xchg
add
lret
add
add
fisubrl
adc
or
in
inc
push
xor
add
mov
add
nop
stc
or
pusha
add
add
and
add
xor
add
gs
add
clc
mov
push
add
or
fidivs
mov
or
pusha
add
add
cwtl
lret
mov
add
fdivl
insl
add
add
lds
mov
sahf
lods
lea
and
scas
or
xor
add
daa
pop
add
mov
add
cwtl
add
mov
and
sub
js
mov
inc
add
mov
pop
mov
mov
add
or
pop
add
mov
popa
out
add
mov
inc
add
add
add
cmp
adc
add
sbb
pop
inc
add
je
aam
je
jmp
dec
add
mov
sbb
pop
mov
rolb
inc
std
in
and
add
sub
nop
sbb
add
in
arpl
jge
leave
lret
lods
xorl
int
pusha
add
mov
xor
filds
leave
test
xchg
lock
in
fisubrl
outsl
mov
pop
add
cmp
add
mov
shl
dec
mov
mov
mov
inc
mov
sbb
stos
arpl
imulb
add
pop
mov
jge
movsb
add
push
sub
push
add
push
xchg
add
adc
add
sub
mov
sti
call
sub
push
add
add
add
sub
imul
or
jl
sbb
mov
add
add
cltd
fistpl
add
mov
xchg
inc
add
and
add
push
add
pusha
add
jne
addl
add
and
cmp
add
sti
nop
aam
add
add
int
add
sbb
outsb
add
xchg
mov
add
int
cmp
adc
add
inc
add
stos
add
in
daa
jge
mov
push
add
dec
add
sahf
mov
out
sub
fists
add
add
jo
pop
dec
aaa
iret
add
ss
add
push
cmp
leave
sbb
mov
arpl
aam
add
add
pop
add
jae
cmc
and
mov
movsl
add
sbb
mov
add
loope
add
mov
push
add
test
add
or
roll
push
mov
scas
jbe
mov
add
cmpsl
add
test
out
jo
lea
mov
data16
add
add
jne
aas
into
xor
add
mov
je
add
imul
jl
inc
mov
scas
inc
cmp
add
mov
in
pop
in
sub
mov
mov
dec
add
aaa
sub
loopne
push
xchg
jae
add
pusha
add
add
mov
pop
mov
xchg
in
xor
add
sbb
cmpb
in
fmull
add
scas
enter
mov
sbb
cmp
les
mov
cmc
fcomps
jns
dec
or
clc
lock
add
add
cmpsb
fwait
test
inc
mov
sub
stos
lods
pop
repnz
xor
add
add
add
subb
cmpsl
leave
push
add
divl
cmp
in
jns
xor
add
xor
iret
and
sbb
jae
pop
add
pushf
aaa
mov
adc
cmp
lcall
push
add
les
add
sbb
add
imul
pop
test
in
inc
add
jno
and
jmp
pop
add
sarb
push
add
add
sahf
mov
sarl
lock
lret
addl
and
add
sbb
aas
stos
imul
add
cmpl
sub
sub
add
add
js
sahf
and
add
filds
ret
pop
xor
rcrb
add
inc
add
fiadds
data16
xchg
repnz
out
add
push
add
stos
cmp
add
in
movsl
mov
push
enter
adc
out
in
add
pop
stos
adc
add
sbb
mov
mov
pusha
add
int3
int
add
pop
outsb
add
or
add
push
add
fildl
insb
add
add
add
subl
add
inc
add
js
fisttpl
mov
xchg
stc
push
add
pop
jbe
sub
jl
sbbb
or
add
out
add
xor
mov
sahf
iret
cmp
lret
cld
push
add
xor
add
mov
rolb
or
lret
js
mov
faddl
incl
mov
add
inc
add
add
cmp
push
mov
sbb
jge
outsb
add
fiaddl
popa
mov
mov
xchg
pop
add
movsb
lods
in
pop
add
inc
add
add
add
add
enter
add
add
inc
add
nop
push
add
repnz
jl
add
jo
jle
pop
mov
sub
orb
push
add
fdivrs
add
lret
inc
sub
add
rolb
push
hlt
add
xor
loopne
mov
icebp
add
inc
add
enter
in
pop
add
add
cltd
add
mov
outsl
shlb
push
hlt
mov
push
xor
mov
add
dec
add
add
mov
fimuls
add
or
cs
pusha
add
xchg
aad
outsb
add
clc
stos
cltd
mov
add
and
addr16
mov
add
pop
add
mov
lods
insl
stc
out
or
push
add
add
cmp
pop
je
jbe
loop
loopne
add
ror
sti
add
or
fstps
or
cltd
push
mov
add
xlat
inc
in
data16
add
cmp
hlt
mov
das
int3
add
pusha
add
cmpsb
arpl
repnz
mov
mov
in
fdivrs
cmp
inc
add
cwtl
dec
add
addb
inc
add
add
add
data16
add
add
push
and
cmp
inc
test
sub
rolb
add
add
dec
add
inc
std
cld
lods
cmpsb
stos
cli
xorb
jecxz
and
add
call
loop
addb
add
dec
add
add
lret
insl
std
hlt
das
dec
add
add
fwait
add
ret
pop
mov
push
add
add
add
shl
imul
lea
mov
mov
add
push
add
mov
push
adc
leave
push
add
push
adcb
add
cmp
and
xor
dec
jno
add
pusha
add
and
add
lock
add
adc
jbe
add
add
sbb
fxtract
int3
push
xorl
inc
add
push
add
decl
add
pop
add
mov
cmp
add
fwait
arpl
enter
sub
call
fistpll
call
add
fwait
rcl
jl
sub
clc
fimuls
add
push
add
jno
adc
add
mov
and
add
pusha
add
in
inc
add
in
push
add
push
add
aaa
add
sub
fwait
out
shll
pop
add
lcall
fmul
out
xor
pop
add
adc
add
add
hlt
shll
pop
add
mov
adc
add
push
add
add
lods
add
sbb
in
add
mov
add
xor
xchg
xchg
pop
and
add
loopne
cmpsl
dec
add
add
jmp
repnz
cvtps2pd
adc
add
add
jg
jbe
pop
add
mov
push
add
stos
leave
gs
mov
movsb
add
in
jbe
inc
imul
add
add
push
mov
adc
xor
loopne
push
xor
add
add
imul
jecxz
jg
xor
sar
sahf
adc
add
cltd
push
aaa
mov
add
mov
add
xchg
push
mov
out
mov
push
hlt
in
add
inc
dec
mov
repnz
jg
test
jmp
mov
aas
repnz
leave
movsl
jle
je
jnp
add
jmp
leave
xchg
mov
dec
addr16
shr
xchg
mov
mov
cmc
pop
mov
gs
pop
add
mov
cmp
pop
add
mov
pop
jbe
xchg
sbb
jg
mov
add
mov
add
or
jnp
add
jo
stos
fcoms
add
incl
fidivrl
jns
loope
xchg
into
mov
add
add
add
push
add
inc
add
or
insb
add
pushf
dec
add
cwtl
jb
adc
jnp
shll
add
add
ret
add
add
pop
rorb
add
add
mov
jno
das
adc
std
orb
add
in
push
fidivrs
mov
mov
cmp
add
cmp
add
push
add
out
scas
insb
add
jmp
push
add
push
scas
add
jne
sahf
test
shl
repz
sub
aam
or
push
ret
sbb
pop
jae
push
add
add
lods
repnz
add
add
mov
cld
xor
das
popl
add
add
cli
incb
cmp
mov
mov
add
inc
add
js
loopne
call
pop
mov
aad
test
xchg
push
add
push
and
add
icebp
popa
inc
add
shll
dec
add
mov
fstps
add
xor
add
fs
xchg
enter
add
enter
inc
ja
pop
add
pop
add
popf
mov
mov
into
add
mov
addr16
stos
xchg
enter
push
jg
aad
push
push
pop
fwait
imul
loope
adc
add
sbb
std
stos
mov
and
jecxz
rcll
inc
add
add
add
add
mov
out
filds
mov
negl
add
xchg
les
mov
mov
insl
mov
inc
pop
je
jne
in
or
out
cmc
xor
scas
inc
add
adc
dec
add
add
inc
shlb
in
and
add
test
jl
dec
add
add
loop
andb
add
or
mov
add
add
pusha
add
sahf
rcrl
add
add
and
inc
add
inc
add
lret
push
lock
mov
mov
inc
add
fnstcw
add
ss
add
stos
es
add
mov
cmp
pop
add
call
cltd
lcall
mov
mov
add
add
cltd
add
cltd
lret
sbb
sub
sub
add
gs
cmc
hlt
lods
outsb
add
lret
fsubrs
pop
jnp
xor
test
push
xor
push
inc
sub
cmp
rolb
inc
add
flds
mov
xchg
fcomps
add
cld
dec
add
adc
add
addr16
add
add
bound
jae
test
loope
mov
jbe
jmp
add
fistpll
sbb
cmp
pusha
add
orb
or
xchg
add
add
adc
sub
std
add
fisubs
xor
mov
lret
mov
mov
pop
add
add
and
ss
dec
in
lcall
add
and
test
pop
add
in
dec
add
jle
ret
lcall
cli
push
add
push
dec
add
cltd
inc
add
sub
shlb
add
xchg
out
arpl
arpl
inc
add
clc
push
stc
clc
ja
aaa
aaa
add
daa
movb
inc
mov
cmp
out
into
out
push
add
add
ss
add
or
movsl
jle
scas
div
mov
mov
addr16
aas
sbb
jns
imul
xchg
cli
mov
js
data16
ja
sub
sbb
leave
xor
dec
add
stos
outsb
add
test
push
add
add
mov
arpl
jno
bound
adc
add
adc
sbb
test
out
lea
xor
add
inc
add
and
add
adc
inc
add
add
dec
add
sub
add
arpl
add
xchg
pop
pmaddwd
aaa
add
add
scas
ljmp
arpl
dec
add
and
add
mov
movsb
fiadds
je
inc
dec
orl
or
or
ret
or
aas
sbb
cwtl
lds
add
add
dec
aas
xor
add
andl
add
push
cmp
fisubrs
mov
push
xlat
pop
adc
add
cmp
out
push
add
add
or
aas
test
movsb
jnp
fstp
sub
inc
aas
mov
lcall
mov
add
add
or
movsb
addl
dec
mov
in
aaa
inc
add
sti
mov
xor
add
add
add
ljmp
int3
jmp
add
add
pop
or
icebp
addr16
movl
arpl
aas
daa
sbb
pop
ret
jb
pusha
add
jge
lock
add
mov
fists
lret
cmpsb
aad
add
add
movsl
xor
add
insb
add
or
repz
sbb
xchg
add
add
mov
addr16
sbb
push
mov
sub
call
mov
lea
push
push
push
push
call
shr
cmpb
jne
mov
push
push
call
add
and
xor
cmp
jb
lea
and
or
es
push
mov
test
je
shr
test
jne,pn
nop
leave
lret
or
xchg
cld
call
push
in
sub
add
sub
popf
adc
add
xor
fistpll
lahf
xor
add
scas
dec
add
xchg
test
add
cmc
xor
add
call
mov
push
add
pushf
enter
aad
lods
add
add
mov
add
add
jg
inc
add
daa
jb
adc
data16
add
dec
aas
lret
dec
add
lret
loope
and
add
cli
jmp
in
je
mov
or
xchg
cltd
push
jl
jmp
and
pop
data16
fs
lods
shrl
add
add
add
jg
mov
add
outsl
test
add
xor
add
add
pop
add
add
clc
mov
dec
add
cld
pop
add
test
push
add
add
adc
add
mov
fiaddl
les
sahf
das
cld
mov
adc
sbb
or
or
fidivrs
add
add
pop
mov
mov
pop
cmp
inc
add
push
add
add
mov
repz
add
test
cmpsl
pop
add
add
shlb
roll
jb
repz
loopne
and
setg
shl
sbb
pop
add
ret
fwait
jmp
add
jns
out
imul
pop
jecxz
lods
mov
dec
test
push
fisubl
push
add
add
sti
in
insl
sub
xchg
sub
or
mov
iret
add
rcrb
mov
fistpl
lret
aam
add
and
dec
test
fcmovb
popa
pop
sub
sub
push
add
daa
faddl
pushl
mov
cwtl
or
pop
xchg
fdivs
test
xchg
cmp
jmp
cmpsl
int
imul
gs
mov
add
daa
ret
add
repz
mov
push
in
cli
leave
rclb
push
add
jg
and
pop
aad
mov
test
add
movb
add
add
add
mov
add
add
ret
sub
mov
dec
imul
add
add
mov
mov
add
dec
mov
add
sbb
push
xchg
add
in
pop
movsb
add
insl
push
add
jae
lret
mov
or
lods
cld
xchg
mov
stos
add
ss
add
stc
mov
add
les
add
aaa
add
hlt
mov
call
in
std
push
mov
ret
jnp
enter
pop
inc
add
in
insl
clc
xchg
push
pop
adc
add
fldenv
pop
add
aad
out
add
es
add
jmp
dec
mov
jp
in
call
les
js
or
pushf
push
add
outsl
pop
fisttpl
pushf
bound
mov
add
pop
sbb
sbb
stos
xchg
lcall
or
xor
add
andb
add
xor
dec
add
xchg
mov
add
and
add
movsl
add
imul
lahf
add
or
std
mov
daa
mov
push
dec
add
add
add
pop
add
adc
add
movsl
ljmp
mov
adc
sahf
jl
add
add
ltr
mov
add
cwtl
fwait
imul
incl
fmuls
lret
sub
mov
add
inc
jmp
inc
adc
add
adc
add
add
adc
add
add
jmp
add
cwtl
cmpsb
leave
jns
mov
cld
jns
mov
pop
clc
add
shlb
add
jge
push
mov
pop
add
cmp
push
jmp
int3
sub
mov
push
add
test
test
add
jo
pop
add
add
push
add
and
add
mov
add
add
or
int
ffree
jl
jne
loope
inc
add
add
outsl
loopne
in
test
dec
add
pop
outsb
add
xchg
add
or
jnp
pop
add
out
mov
cmp
pusha
add
add
push
dec
insl
iret
movsl
gs
mov
add
in
add
xor
popa
adc
add
jmp
cli
clc
dec
add
fwait
movsb
aas
in
fcomps
cld
sarb
scas
ret
sub
out
add
xlat
fscale
std
and
add
add
push
in
testb
xor
jp
xchg
mov
cli
inc
push
add
pop
std
add
add
les
add
add
out
add
daa
add
lods
xor
or
xchg
add
call
inc
add
add
add
lods
mull
add
inc
std
movsl
adc
aam
mov
and
mov
std
pop
mov
mov
cmpsl
jb
jmp
push
fs
jg
addb
pop
dec
xchg
sub
orl
movsb
adc
shl
aaa
addl
lret
aaa
push
popa
data16
gs
adc
shlb
add
add
mov
rcrb
or
push
xchg
mov
sbb
pop
inc
add
add
xlat
mov
mov
mov
add
add
lea
decb
add
add
adc
hlt
push
xor
std
nop
icebp
pop
in
clc
insb
add
int
lret
xor
add
out
leave
fldt
push
add
mov
pop
add
mov
add
movsl
je
or
push
pop
xchg
add
xchg
testl
push
add
dec
cmpsb
loope
out
jae
ljmp
mov
add
push
into
mov
adc
fsub
xlat
inc
add
rcrb
mov
js
mulb
fldl
and
bnd
bnd
add
add
inc
add
es
add
jo
in
sbb
movsl
and
add
insl
mov
add
xor
add
ficomps
add
mov
jg
add
jo
add
mov
inc
jp
push
add
in
pushf
insb
add
cmpsb
popa
loopne
sti
and
add
push
shr
inc
add
mov
fucomp
shll
jne
movb
dec
and
add
push
add
xchg
insl
movsb
dec
add
pop
add
daa
add
ss
xchg
mov
outsb
add
sbb
sti
mov
add
lret
push
data16
movsl
ja
xor
add
in
or
popf
mov
in
mov
loop
jb
hlt
movsb
sub
push
add
xor
fbld
stc
inc
sub
lds
add
jmp
add
add
add
push
xlat
incl
sti
inc
insb
add
mov
icebp
and
add
mov
add
add
testb
cmp
pop
add
xchg
pop
mov
add
mov
cmp
addr16
adc
add
xorb
add
pop
or
inc
add
repz
add
popa
jo
push
sbb
adc
add
fildl
pushf
fstps
leave
lahf
ds
shl
cmp
mov
sbb
mov
add
cli
js
jne
sub
mov
fisubl
xor
sub
jl
loopne
rorl
test
add
sldt
xchg
dec
add
sub
add
add
subl
or
push
xchg
add
leave
pop
add
fidivrl
dec
cmp
lea
xlat
inc
add
testl
repz
repnz
jo
jecxz
jae
add
add
add
inc
add
dec
add
repnz
inc
and
add
jecxz
mov
int3
add
xlat
leave
sbb
sub
xor
add
icebp
scas
data16
cltd
adc
movb
add
and
or
call
push
add
fidivrl
add
test
clc
add
add
mov
pop
in
dec
add
cmc
hlt
inc
sbb
stc
push
or
out
je
lret
add
repnz
xor
add
hlt
add
add
aaa
xchg
add
add
imul
add
add
add
add
add
sbb
imul
fcomp
or
sahf
cld
jle
xor
add
sbb
inc
add
or
fldcw
daa
mov
add
add
add
pop
lea
mov
aaa
add
mov
popf
mov
fbstp
ljmp
lahf
pop
add
loop
add
ret
sbb
daa
mov
stos
frstor
into
add
sub
add
sti
cmpb
add
add
add
mov
adc
or
cmp
out
dec
add
pop
subps
int
sub
push
leave
neg
jl
insb
add
xchg
in
add
add
in
push
jp
mov
add
cmp
add
add
faddl
insb
add
test
nop
stc
mov
add
or
add
pop
adc
add
add
adc
jg
shll
loopne
add
mov
mov
test
add
das
xchg
cmpsl
gs
add
mov
movsb
dec
add
sti
arpl
sti
rcr
scas
push
add
jp
arpl
stc
add
add
add
movq
push
lret
in
int3
fistpll
jp
inc
cwtl
jmp
loope
jg
add
add
mov
pushf
out
add
outsb
add
loop
sbb
cmp
add
movb
addl
dec
movsl
call
sub
orl
mov
mov
push
add
lahf
jne
add
xor
leave
scas
int
push
add
mov
push
add
into
add
add
out
scas
mov
jae
add
add
shr
icebp
ljmp
fisubl
add
mov
lock
dec
add
push
and
ss
add
lcall
push
jns
sarl
xor
add
gs
inc
add
add
add
imul
adc
and
jno
lods
fidivrl
add
add
in
add
add
js
not
loop
adc
hlt
adc
add
xor
add
sub
rclb
jl
mov
add
dec
add
add
push
add
pop
pop
add
push
sahf
pop
pop
add
pusha
add
push
add
jno
pop
add
bound
mov
sub
jecxz
add
mov
mov
fdivp
sbb
into
outsl
xchg
lret
add
mov
and
aam
add
add
sub
aaa
out
add
repz
es
cli
and
add
xor
add
fdivl
add
jae
es
add
mov
fidivrl
ret
add
mov
adc
add
pusha
add
popf
ret
imul
add
add
out
daa
add
jl
jns
aam
add
je
cwtl
stos
mov
add
aam
inc
add
cmc
add
inc
add
xor
add
sbb
adc
xchg
insl
lret
nop
fsubrl
add
add
add
pop
rcrb
mov
or
fst
push
add
add
dec
lcall
add
in
push
add
clc
add
inc
add
leave
xchg
jnp
adc
cmpb
or
out
mov
enter
add
cmp
and
add
add
test
fwait
xchg
scas
fistpl
dec
add
jnp
add
sbb
rcrb
or
push
add
dec
add
shr
aad
sbb
jns
add
add
push
gs
rcl
das
scas
jg
dec
sbb
int3
push
call
cltd
sub
pop
add
je
dec
add
addr16
lret
cmp
lcall
sbb
mov
lcall
jnp
add
mov
add
or
mov
add
inc
jmp
add
incb
pop
adc
cmc
data16
add
add
add
cld
add
add
lods
and
add
pop
add
add
add
add
mov
ret
hlt
push
add
add
stc
add
dec
fidivs
cmpl
mov
iret
jg
fstpt
je
loop
add
mov
je
push
movsl
add
inc
outsb
add
cmc
push
add
les
cmp
cltd
mov
add
fildl
add
add
in
xor
sub
rcll
add
xchg
add
inc
jl
das
xor
add
add
inc
xor
add
sub
dec
add
add
add
jmp
mov
and
test
iret
cmp
aam
or
popf
jg
in
add
fidivrs
add
cmp
cmpl
pop
mov
fcoms
cmp
adc
add
add
adc
add
add
or
adc
add
add
dec
ret
xchg
add
add
xor
aas
or
aam
pop
add
jbe
jle
pop
in
jl
mov
pop
add
add
imul
cld
mov
cltd
nop
mov
ficompl
pop
mov
test
jp
push
add
dec
add
add
imulb
jecxz
andl
add
rcrl
cmp
nop
jne
and
add
add
add
in
add
nop
out
fsub
fldenv
test
pop
xorl
add
xlat
add
add
hlt
xor
mov
sbb
jns
add
out
test
lahf
xchg
inc
add
bound
mov
add
mov
popa
iret
xchg
repnz
call
add
lcall
add
add
pop
inc
add
test
pop
insb
add
xor
insb
add
add
inc
repnz
cmp
fwait
push
push
add
in
add
gs
sbbb
xchg
popa
pop
add
cmp
test
roll
outsb
add
or
mov
sbb
jp
adcl
add
hlt
ds
push
add
or
xlat
dec
add
das
pop
add
add
fcompl
fwait
add
test
mov
jp
outsl
sbb
sti
dec
je
jno
out
push
in
imulb
aam
push
add
add
js
cmpsl
sbb
push
add
adc
add
dec
out
jbe
sub
add
roll
pushf
mov
lods
loopne
jo
push
pop
add
mov
hlt
out
lahf
mov
dec
or
xchg
xorl
add
fimuls
add
sbb
icebp
add
int3
jg
inc
cld
mov
out
std
mov
repnz
add
add
xor
add
dec
add
cmp
push
add
pop
fsubrs
outsl
fistpll
movsl
push
mov
incb
mov
cwtl
divb
cwtl
adc
movsl
fld
jmp
les
xor
shll
scas
add
xor
inc
add
lea
int
ffreep
mov
leave
icebp
sbbb
jno
out
rcrb
lret
test
xchg
lock
lret
pop
add
add
sbb
jg
cmp
adc
add
fmuls
fidivs
inc
cld
dec
add
push
nop
jno
dec
add
cmpsl
push
add
add
add
add
xchg
nop
out
xchg
in
test
cmp
mov
js
and
data16
or
push
stos
sti
cltd
adc
add
sahf
outsb
add
sub
jb
shl
loop
or
or
add
sub
mov
cmp
gs
cltd
repz
or
mov
push
add
dec
loop
add
push
add
lret
insb
add
add
add
mov
rcll
add
add
add
stos
add
pop
and
add
pusha
add
cmp
pop
mov
jmp
out
push
push
pop
mov
mov
add
add
inc
push
push
add
add
stc
xchg
test
sub
addr16
arpl
shll
add
ss
add
add
rolb
jbe
daa
ljmp
jecxz
add
add
test
add
inc
add
add
lods
add
add
add
cmpsb
mov
stc
dec
add
mov
daa
add
sahf
clc
and
add
add
into
add
xor
jg
test
dec
add
fldenv
movsl
adc
pop
and
add
add
add
dec
add
add
add
and
xorl
sub
inc
add
and
add
decb
inc
add
push
add
inc
mov
add
ficoml
int
sbb
jne
mov
add
je
jmp
add
shll
push
add
fisubrs
dec
add
or
call
mov
adc
cmc
jmp
add
add
add
add
in
dec
add
std
mov
shlb
neg
mov
sti
add
inc
add
pop
add
mov
add
outsb
add
nop
cltd
ret
ret
ljmp
jg
cmp
add
add
loope
sbb
out
testb
add
mov
pop
add
adc
jl
pavgb
push
xchg
mov
add
pusha
add
pop
in
mov
fwait
stos
outsb
add
fsubl
and
adc
add
push
add
pop
add
push
add
insb
add
add
jae
add
dec
fldl
fadds
insb
add
testb
add
jnp
sub
and
mov
cld
loope
add
int
das
lcall
add
jle
xor
and
mov
pop
add
lods
xchg
sub
std
cwtl
add
add
push
add
add
xor
fiaddl
push
add
add
lock
lret
adc
cmp
mov
jle
jnp
add
hlt
mov
add
aas
hlt
test
imul
add
das
xchg
push
jl
ret
add
xchg
in
pushf
jmp
add
loopne
cmp
bound
jp
fwait
push
add
add
mov
into
pop
flds
pop
insl
add
ljmp
xor
add
add
add
add
xchg
add
int
add
adc
add
sbb
add
add
dec
add
mov
mov
sbb
push
add
adc
add
sub
sub
jns
mov
sbb
shll
sub
aad
pop
push
add
mov
add
aad
lret
lcall
imul
add
jb
push
mov
lock
lods
pushl
mov
add
add
loop
into
add
aad
mov
fs
sarb
xchg
adc
sahf
mov
sbb
iret
lea
fbld
xchg
cmp
mov
test
pop
stc
add
test
add
jb
sub
pop
cmpsl
mov
mov
incb
cmp
ja
aas
xchg
adc
add
sub
add
xchg
outsb
add
hlt
mov
fstps
fcmovnu
jl
xor
add
push
add
aas
pop
add
mov
push
add
xor
mov
add
outsb
add
or
int
push
mov
mov
adc
loop
orl
fucomi
popf
adc
lds
add
xchg
ljmp
mov
push
shr
aaa
mov
mov
ljmp
jmp
sub
out
aas
dec
xchg
in
gs
insl
pop
jo
jge
sbb
mov
testb
mov
add
push
mov
xchg
inc
push
lods
dec
mov
jno
jns
rcrl
add
or
mov
cmp
push
mov
add
mov
jmp
ret
mov
rcl
movsl
ret
add
int3
lea
movsb
jmp
cmp
fst
mov
mov
push
sbb
mov
lcall
add
rclb
add
out
add
add
add
lea
test
add
adc
repnz
xlat
add
push
add
mov
sub
jg
add
out
xchg
aad
fildl
nop
les
add
iret
data16
add
dec
add
xlat
jae
sbb
xchg
cmpsl
jne
rolb
in
add
cmpsl
add
and
adc
add
and
test
clc
lret
test
jo
test
ljmp
pop
rorl
adc
add
les
cmp
jnp
ljmp
add
cld
orb
rolb
jno
ljmp
mov
jle
mov
loop
arpl
or
cmp
and
jae
add
sbb
cli
mov
mov
out
mov
add
sahf
push
add
dec
add
mov
icebp
jge
xor
or
cmpsl
push
add
adc
cmp
add
add
sub
add
clc
inc
sahf
mov
adc
incb
mov
xchg
movsl
add
insl
test
add
mov
and
jle
adc
add
add
add
add
add
xchg
cmp
cmc
mov
sbb
loop
in
shlb
faddl
or
sbb
bound
xchg
pop
and
add
ljmp
pop
add
push
movsb
xor
pop
lds
mov
fistpll
jno
cmp
stc
lock
add
cld
enter
ljmp
inc
add
repz
dec
fwait
adc
add
add
addb
mov
scas
add
rcll
shll
dec
add
adc
addb
js
js
fistpll
add
jbe
fadds
iret
pushf
das
fimull
cmp
adc
mov
gs
mov
insb
add
out
stos
fstpl
sbb
and
mov
mov
inc
cmp
shlb
mov
pop
adc
add
dec
add
push
add
xor
or
xor
add
add
jg
add
rclb
add
inc
add
add
add
add
xchg
bound
jae
aad
add
add
add
add
mov
jns
add
adc
pop
add
ja
xlat
xor
in
or
data16
add
in
iret
push
add
xchg
add
xlat
inc
sub
or
mov
adc
push
push
aad
lcall
and
add
push
mov
sbb
add
push
add
es
pop
enter
add
jns
add
add
sbb
pop
add
jnp
loopne
add
add
lret
movsb
lret
fisttps
add
mov
add
mov
xor
add
jg
shrl
add
lock
add
jo
scas
mov
xchg
add
and
mov
mov
xchg
sbb
sbb
push
mov
jl
js
int
in
mov
add
inc
add
xchg
lds
sbb
xchg
lret
add
iret
test
jno
jns
jo
mov
add
gs
test
lods
in
lea
pop
rcll
add
lods
test
add
add
add
add
and
add
add
xchg
add
je
and
loop
stc
shrb
add
sbb
mov
fbld
xchg
sbbb
mov
and
add
sysret
roll
bound
sahf
cltd
cltd
or
push
pop
add
push
pusha
add
and
cmpsl
push
add
add
out
adcl
add
add
xor
add
add
push
sub
xor
add
mov
mov
lret
sti
xlat
sbbb
jnp
out
mov
aaa
cmpsb
add
inc
add
dec
add
icebp
sahf
mov
inc
xor
ja
pusha
add
data16
add
or
ret
mov
xchg
js
imul
rclb
or
push
add
jno
pop
scas
clc
scas
sbb
pop
inc
add
inc
add
sti
add
dec
add
push
add
add
jnp
add
sbb
and
add
add
adc
pop
mov
add
jle
mov
xchg
repnz
pop
add
adc
add
push
add
xlat
fcoms
add
sbb
aaa
fldl
jp
shl
add
add
lods
or
fimuls
out
test
jmp
mov
mov
pop
add
add
mov
enter
mov
xor
add
leave
jb
data16
add
daa
nop
add
ljmp
hlt
hlt
clc
clc
jmp
xchg
pop
add
add
add
insl
and
jg
pop
add
arpl
adc
add
fucom
and
add
add
mov
and
add
stc
les
mov
jge
dec
add
out
jl
jp
add
mov
add
add
add
inc
add
push
add
icebp
pop
jmp
lahf
pusha
add
roll
out
dec
cmpsb
mov
nop
add
jae
xlat
mov
sbb
pop
int3
enter
dec
test
cmpsl
test
add
sbb
dec
add
add
add
popf
push
add
add
add
push
add
shlb
mov
mov
in
adc
add
add
jl
push
cmp
lock
jbe
aam
push
add
push
push
mov
mov
mov
mov
add
add
mov
mov
add
test
shl
push
xor
add
sub
popa
nop
ss
add
push
add
inc
add
add
dec
add
sub
repz
add
in
xchg
cmpsl
ja
add
in
iret
mov
mov
mov
mov
add
lret
add
mov
test
xchg
scas
rol
lcall
fmuls
enter
and
imul
add
addl
add
mov
add
sti
leave
dec
jle
call
add
or
imul
xlat
cmp
mov
outsl
xchg
jmp
aam
mov
test
push
add
dec
add
dec
add
movsb
out
jmp
add
jl
shll
into
mov
inc
add
popa
xlat
lret
add
add
add
ror
cwtl
mov
inc
jecxz
in
gs
add
add
adc
adc
add
add
xchg
cmp
sbb
pop
sub
addr16
add
add
lock
add
inc
push
add
add
adc
add
repnz
add
test
jmp
in
pop
dec
add
xchg
cli
add
sahf
xchg
outsl
xchg
mov
rolb
mov
jge
mov
sbb
dec
add
insl
das
jbe
xlat
and
add
sti
int3
sbb
sbb
add
add
cmp
iret
jecxz
cmp
add
mov
in
add
mov
mov
push
in
add
push
lea
sbb
outsb
add
push
arpl
iret
pop
dec
add
add
imul
add
mov
adc
and
add
clc
add
aas
mov
adc
fwait
daa
add
add
sahf
sti
repz
ret
cmp
add
adc
pop
add
add
xchg
gs
fldl
dec
add
pop
add
in
ja
dec
add
movsl
push
add
mov
rcr
adc
add
fsubs
add
jae
add
out
add
repnz
cwtl
in
adc
add
mov
push
sahf
fldl
enter
sbb
xor
jb
mov
stos
arpl
cmp
add
push
add
push
add
add
sbb
rorl
sbb
dec
fnsave
cmp
add
dec
loopne
mov
add
in
sub
insb
add
hlt
cltd
inc
add
sub
out
in
test
jb
movsb
pop
jp
sbb
xchg
mov
sbb
ret
inc
jae
xchg
int
mov
enter
add
cmp
inc
add
mov
movsb
test
add
add
sbb
xchg
mov
ss
imul
pop
add
cmp
sbb
add
add
add
or
pop
addb
mov
inc
in
dec
mov
inc
add
add
add
add
lods
scas
sub
mov
add
add
rcrb
pop
and
sub
rorb
xorl
adc
add
mov
sub
dec
sub
leave
loop
and
loop
lcall
xchg
aas
cmp
orb
and
add
add
jge
lock
add
pop
add
push
ljmp
jnp
pop
sbb
adc
cwtl
push
add
push
std
lcall
lds
mov
arpl
dec
add
rclb
testb
sbb
mov
das
dec
add
xlat
fadd
mov
imul
lods
push
add
mov
mov
dec
add
popf
sahf
lock
add
xor
iret
push
movsb
lods
bound
jp
daa
lret
add
push
hlt
jne
add
add
dec
add
push
add
test
or
add
inc
add
lret
add
add
add
or
sub
add
mov
add
les
add
add
sub
mov
lret
mov
xchg
test
mov
shl
jp
test
mov
pop
dec
add
inc
out
ja
xor
mov
into
lahf
test
sahf
aad
add
add
test
add
mov
add
add
add
sahf
clc
out
daa
xchg
sbb
out
jg
add
addb
add
mov
and
add
mov
mov
loope
xchg
add
mov
lret
mov
add
fldcw
pushf
stos
and
loope
cs
or
ljmp
mov
ljmp
add
sti
add
fildl
popf
loop
into
mov
and
cltd
and
enter
mov
xchg
mov
hlt
bound
push
outsl
mov
lcall
sbb
lahf
in
add
testl
insl
pop
add
addb
add
mov
push
add
add
test
pop
and
add
sub
imul
jge
jnp
add
jl
int3
inc
jge
add
xor
sub
mov
dec
imul
jmp
cld
add
call
add
data16
xchg
inc
add
adc
jp
pushf
inc
pushf
mov
testl
mov
add
lods
xchg
and
mov
les
add
add
sbb
add
add
mov
add
pop
and
es
sub
int3
mov
add
add
fadd
mov
add
decb
ljmp
addr16
imul
add
addr16
add
fmull
clc
push
stos
and
loopne
cmc
insb
add
xchg
lret
ja
sbb
jmp
test
jp
push
loop
jg
scas
mov
mov
aam
stos
hlt
in
adc
add
add
add
add
add
push
push
add
dec
add
lods
lods
lock
add
push
sub
xor
lret
or
add
add
add
cmpsl
clc
xchg
jmp
add
add
add
add
leave
mov
add
xor
neg
or
es
add
fisttpl
jmp
xchg
repz
adc
or
adc
loop
int3
add
push
add
testl
or
jne
shrl
add
dec
fisttpl
sarb
add
add
pop
sub
cmp
add
jge
inc
add
adc
daa
add
sbb
inc
stos
adcl
scas
add
punpcklwd
xor
pmaxub
lcall
jp
jne
mulb
jecxz
mov
leave
add
add
xor
add
pop
outsb
add
xlat
pop
jp
inc
add
push
ds
add
inc
add
inc
sub
cli
arpl
mov
push
add
xlat
decb
fadd
pop
inc
push
insb
add
mov
icebp
subl
add
leave
stos
jbe
sbb
add
mov
sbb
std
sub
sub
mov
dec
add
les
jbe
sbb
aad
or
add
mov
mov
cwtl
mov
push
add
orb
cli
mov
jns
jecxz
mov
xchg
mov
add
cmc
xor
add
mov
xor
add
or
ja
add
jecxz
xchg
ret
adc
pop
add
push
xchg
add
add
pusha
add
sub
jno
enter
add
dec
add
pop
xlat
push
push
sti
lret
mov
adc
add
push
add
add
sub
shl
testl
test
mov
rdpmc
xlat
add
add
push
add
and
mov
icebp
ret
or
mov
lock
pop
jle
imul
pop
mov
and
add
or
repnz
xor
out
popa
add
add
aaa
adc
in
xor
add
insb
add
or
xchg
xchg
jp
push
imul
add
andb
add
add
add
aad
pop
add
add
add
push
ret
and
add
push
push
jge
ljmp
fsubp
pop
out
pop
out
add
or
aam
rcr
adc
add
jecxz
lock
jnp
push
add
add
insl
push
mov
cld
sbb
add
test
lahf
push
add
adc
add
subb
in
xchg
jmp
add
add
in
mov
gs
add
jge
add
clc
and
xlat
xor
imul
icebp
mov
add
das
xor
add
cmp
js
push
add
add
testl
add
mov
and
add
outsl
arpl
add
add
add
add
je
iret
or
jno
movsb
add
addl
pop
add
xor
add
sar
insb
add
sahf
aam
add
add
add
xchg
arpl
add
cmpsb
add
stos
lock
fucomi
jl
sub
add
jno
add
test
imul
xchg
dec
sbb
outsb
add
fsubr
es
pusha
add
mov
jne
hlt
jns
lods
add
pop
lods
jbe
push
sub
and
inc
mov
dec
mov
add
add
push
add
bound
add
xchg
dec
add
nop
xor
pop
ljmp
sti
cmpsb
shlb
sbb
add
sbb
jb
cmp
add
push
popa
es
dec
pop
add
imul
add
dec
add
adc
insb
add
add
fdivr
inc
add
add
cmp
test
sbb
or
mov
add
roll
pusha
add
jmp
sbb
mov
mov
add
xchg
add
add
addb
repnz
add
cmpsl
and
mov
dec
add
adc
add
hlt
jnp
add
notl
jp
in
mov
pop
add
cmp
add
fstpl
mov
add
mov
std
cs
lods
jmp
mov
test
add
xchg
add
xchg
jno
dec
add
mov
andb
pop
add
inc
add
sahf
pop
add
mov
sti
or
xor
add
add
xchg
jb
addb
mov
add
sub
sub
iret
test
aam
nop
add
loopne
dec
push
add
push
jle
aam
and
xchg
addb
sub
ljmp
std
sub
add
mov
lock
add
scas
mov
mov
sbb
jecxz
aad
pop
inc
add
add
loope
dec
sub
add
push
jae
cli
shlb
test
add
sti
add
jns
mov
pop
add
add
add
add
add
or
cmpsb
add
and
xchg
rcr
rcl
xlat
nop
jecxz
das
cmp
jne
add
lods
add
mov
add
nop
cmp
sahf
add
sarl
inc
add
inc
add
popl
push
add
pop
sarl
inc
add
add
gs
in
icebp
pop
sbb
dec
add
mov
add
xchg
sub
pop
add
shll
dec
movsl
jle
mov
add
in
add
adc
scas
pop
add
outsl
dec
add
aas
or
addr16
add
mov
ljmp
rcll
lds
dec
jo
xchg
jp
pop
cmp
movsl
loopne
add
fucomp
mov
repnz
test
enter
pop
pop
add
mov
rorl
push
cmp
jo
in
fidivrl
mov
add
add
add
and
add
adc
notl
cld
push
add
add
lods
sbb
add
mov
js
rcl
add
scas
bound
jecxz
mov
pop
push
pop
cmp
test
enter
add
pop
orb
add
cmp
ret
lods
je
jbe
or
clc
pop
add
sbb
mov
adcl
lds
push
insb
add
and
fchs
stos
pop
add
add
test
in
add
mov
int
jae
clc
add
add
or
fidivl
mov
lods
xchg
lock
jb
pop
cmp
into
adc
scas
add
add
inc
add
adc
test
movsb
loop
add
push
or
ja
sti
xchg
ret
outsl
hlt
add
add
fwait
outsl
mov
dec
add
add
adc
add
popa
sbb
fistps
fneni(8087
cld
mov
lcall
jo
xchg
mov
pop
or
test
add
pop
scas
add
jmp
xchg
jp
sub
pop
push
pop
add
inc
add
and
mov
int3
mov
or
pop
xchg
jae
mov
mov
insb
add
push
lret
add
add
daa
stos
add
subl
rcrl
add
push
push
add
fcompl
add
out
add
fucomi
cmp
xor
add
jno
cmp
loope
add
test
mov
add
cld
je
add
add
mov
inc
add
test
cmp
ja
mov
cmp
popl
roll
add
add
xor
add
aad
lea
add
mov
xor
mov
mov
add
add
gs
fwait
sbb
or
sub
clc
mov
add
push
aas
aam
gs
pop
add
pop
add
add
add
fwait
mov
rolb
bswap
pop
add
cli
add
scas
mov
int3
add
mov
xlat
add
pushf
mov
add
into
mov
pushf
inc
outsl
in
add
dec
es
nop
jno
add
push
add
ret
dec
pop
xchg
push
add
add
and
es
add
mov
test
xor
ljmp
ret
add
xchg
inc
add
fldt
mov
cmp
les
add
pop
std
add
sub
in
loopne
sbb
cli
dec
add
add
sbb
mov
mov
int3
fnstenv
add
sub
ficompl
add
dec
add
popf
cmc
dec
add
add
test
sbb
movb
inc
add
cmpl
add
into
cmc
out
jl
test
mov
adc
jbe
xchg
add
add
add
add
sbb
lds
xchg
sbb
xchg
cmp
add
add
sbbl
push
add
xlat
out
lret
cld
add
add
jb
push
push
loope
fwait
loop
add
outsb
add
push
add
pop
add
adc
add
pop
add
adc
add
add
es
xor
add
fbld
mov
pop
add
xchg
pop
add
cmp
pop
hlt
pop
add
push
cmc
ljmp
fs
hlt
pop
icebp
add
add
sub
xchg
movl
add
jmp
push
add
mov
add
jnp
add
add
push
add
icebp
cmp
sub
cld
dec
fstl
nop
xchg
mov
add
fldl
pop
mov
add
sbb
add
add
lahf
fwait
mov
sbb
push
hlt
inc
add
add
mov
repnz
jae
or
push
pop
lcall
cmp
sti
add
aas
stc
push
repnz
jae
stos
mov
dec
pushl
inc
add
push
add
add
sub
jecxz
inc
add
xchg
ret
stos
mov
cmpsl
mov
sub
mov
mov
add
mov
pop
outsb
add
mov
jmp
mov
add
inc
push
xchg
jmp
dec
mov
mov
or
dec
scas
jno
cmpsl
jb
mov
push
add
hlt
mov
push
icebp
add
jge
xor
add
adc
add
push
add
jle
popa
je
aas
adc
cmc
mov
add
subl
aas
xor
add
add
addr16
add
push
add
add
popf
lahf
insb
add
mov
add
movsb
xlat
out
sub
xchg
lock
add
add
outsb
add
add
add
add
dec
in
sub
mov
add
mov
mov
jmp
inc
add
sbb
mov
loope
mov
pop
add
add
add
sti
sub
inc
loope
add
mov
call
and
add
add
pop
add
dec
or
filds
popf
mov
add
or
and
add
xchg
pop
and
repnz
jae
cmp
lcall
lcall
push
aam
pop
add
cmp
xchg
jmp
push
mov
jmp
dec
mov
or
mov
jns
jecxz
cwtl
loopne
daa
add
aas
add
add
add
rcrb
insl
mov
int3
mov
add
movsl
push
ud0
add
xchg
mov
test
jb
mov
ss
shlb
popf
add
add
add
add
mov
jl
shrb
rorb
add
sbb
nop
imull
add
sub
jecxz
iret
add
subb
add
call
push
mov
lock
ret
mov
mov
jbe
fcmovbe
xchg
dec
add
add
add
out
cmc
lret
mov
data16
jne
push
add
and
and
xor
clc
jae
sahf
mov
xor
push
xchg
mov
push
repnz
jae
sahf
or
push
mov
mov
xor
add
push
cmp
test
int3
add
ja
xor
add
inc
add
add
mov
push
push
repnz
jae
mov
stos
pop
and
sahf
aam
add
add
add
ret
data16
dec
add
lods
xchg
insl
fildll
cmp
jb
jmp
add
jge
add
jmp
sbb
pop
push
xor
add
and
xchg
add
add
add
dec
xlat
inc
add
xchg
ret
testb
mov
sahf
ja
in
cmp
add
out
incb
cmp
add
push
add
add
add
pop
add
mov
repnz
jae
push
mov
cmp
mov
test
and
add
jb
inc
add
stos
add
xchg
add
not
rolb
xchg
or
or
pop
add
or
sbb
in
add
int
stc
mov
repnz
jae
out
or
or
lods
loope
lds
xchg
sar
loop
add
add
lret
add
cmpsb
add
mov
mov
jecxz
jne
dec
add
test
sbb
test
insl
lret
imul
jb
insl
pop
add
ss
adcl
add
popf
aad
notl
xchg
pop
fndisi(8087
mov
add
add
sub
jecxz
jb
or
repnz
jae
mov
mov
add
stos
mov
lods
lcall
mov
loopne
add
add
mov
jmp
leave
add
scas
push
add
imul
xor
add
mov
flds
aad
adc
push
mov
test
adc
add
loop
insl
add
mov
adcl
inc
add
cmp
lahf
repnz
mov
add
mov
add
div
orb
mov
add
stos
dec
xorb
add
xor
add
or
dec
xor
push
or
int3
pop
mov
pop
add
test
dec
add
add
fisubrl
add
push
xchg
pushf
jbe
mov
sbb
add
push
call
pushf
and
add
imul
push
xor
add
pop
push
add
or
add
jmp
cwtl
cmp
add
lods
aam
add
in
jp
xor
add
into
pop
shrl
add
aaa
add
add
stos
inc
add
out
add
sub
push
xchg
add
in
jo
imul
aam
xor
out
inc
add
add
pop
cmp
mov
test
ficoml
push
or
sub
push
cmp
cltd
in
adc
add
add
xchg
xchg
lods
xchg
jecxz
mov
jae
ltr
aaa
fadds
add
ret
cltd
outsb
add
sarb
add
cmp
inc
add
sbb
inc
push
add
add
mov
jae
add
leave
jecxz
add
add
sub
or
aad
mov
add
sub
leave
popf
cmp
and
add
mov
pushf
rol
cld
dec
jmp
inc
loopne
inc
add
lods
rcr
jl
mov
stc
jmp
xchg
jmp
dec
xor
call
cld
dec
pop
xchg
mov
and
rcrl
mov
adc
add
add
jge
add
out
or
mov
pop
add
push
add
loope
popa
stos
js
adc
add
mov
lock
ret
and
mov
pop
cltd
push
xor
add
scas
dec
sbb
loopne
cmp
pop
test
dec
add
mov
and
add
xor
xor
dec
add
aaa
add
adc
stos
daa
scas
add
cmp
or
add
add
add
mov
xchg
add
add
inc
dec
xchg
jmp
sete
push
mov
dec
mov
fdivs
pushf
mov
repnz
jae
or
sahf
mov
sahf
pop
push
xor
push
dec
or
mov
add
repnz
jae
mov
mov
mov
push
add
xchg
mov
repnz
jae
testb
mov
mov
jg
arpl
scas
rcrb
push
add
add
inc
mov
push
mov
lock
ret
sahf
mov
or
xchg
add
clc
jae
sahf
cmp
sahf
pop
or
call
mov
add
xor
mov
or
add
aaa
gs
mov
add
scas
mov
movb
roll
stos
cmp
jb
jns
xchg
mov
or
or
add
sbb
jae
cmp
iret
jns
mov
inc
scas
shlb
out
add
add
test
mov
push
adc
mov
ret
inc
add
jmp
push
mov
cmp
add
or
inc
add
xchg
ret
dec
push
stos
mov
cwtl
mov
pushf
cmp
pushf
jnp
add
bound
push
add
mov
inc
add
and
lds
pop
daa
ret
fiadds
in
inc
add
dec
add
add
aad
adc
add
mov
mov
cli
addr16
push
popf
repnz
jae
and
mov
xor
lcall
out
ret
mov
je
ret
jmp
add
stc
add
imul
jae
out
call
repnz
jae
cmp
stos
cmpsl
setle
add
add
data16
sarl
pop
pop
add
mov
sbb
inc
add
data16
and
add
sub
lock
push
cmpsb
push
add
add
int
pop
add
ret
pop
cmpl
add
add
insb
add
inc
add
and
add
icebp
push
cmp
aaa
into
add
stc
mov
xchg
jmp
push
add
imul
and
add
popa
int3
dec
int3
in
add
sub
sub
fnstenv
add
clc
jae
stos
sahf
push
and
in
mov
out
daa
inc
add
out
hlt
loope
add
xor
add
add
xor
jo
jmp
add
adc
add
push
add
pop
sbb
mov
push
repnz
jae
sysenter
cmp
pop
mov
sbb
into
int
lds
mov
xchg
jmp
mov
sahf
dec
dec
push
mov
mov
cwtl
outsb
add
dec
add
add
jmp
jmp
mov
push
push
dec
lcall
or
add
cmp
jae
sbb
mov
add
add
push
adc
add
sti
add
lahf
pop
ljmp
movsb
inc
add
fcmovbe
loop
test
jmp
xchg
ds
add
clc
jae
dec
or
mov
add
add
adc
add
add
add
mov
add
xchg
or
add
add
mov
imul
dec
and
add
jle
cmpsl
jae
push
add
add
jge
inc
pop
repnz
jae
add
mov
add
xchg
popa
add
clc
jae
stos
push
xor
cwtl
mov
mov
xchg
add
add
sub
xchg
inc
add
or
add
adc
dec
mov
add
and
inc
add
add
push
add
sub
loop
push
add
loopne
add
loope
call
repnz
jae
push
mov
and
mov
mov
mov
jae
xchg
decl
lcall
add
loope
jge
enter
add
jno
mov
pop
add
and
sub
mov
add
bound
cmp
add
imul
adc
clc
jae
push
mov
and
and
jnp
xchg
add
jae
cmp
mov
xor
test
xchg
stc
call
repnz
jae
sahf
or
push
xor
pop
push
add
inc
add
sub
imul
mov
xorl
add
or
imul
xchg
sti
add
nop
cmp
js
mull
addr16
lahf
sub
das
or
add
add
in
loop
add
inc
add
cmp
sarb
aas
fisubrl
xlat
and
add
inc
add
mov
shll
add
xor
or
add
add
dec
addb
popa
lea
add
mov
ljmp
ljmp
repnz
jae
xchg
mov
mov
mulb
in
cmp
and
hlt
inc
add
and
add
in
pop
add
stos
or
test
add
xchg
jmp
and
xchg
call
shrl
hlt
push
add
ljmp
mov
repnz
jae
mov
add
lcall
insl
push
sarl
mov
imul
movsb
dec
fldt
popa
stc
mov
repnz
jae
and
call
cmpsl
push
mov
mov
ja
scas
mov
mov
lock
ret
decl
pushl
sbb
pop
add
add
pushf
leave
sub
addr16
add
js
icebp
sahf
pop
and
add
add
ss
mov
stc
lea
repnz
jae
mov
testb
mov
xor
jl
dec
push
into
call
mov
inc
dec
ljmp
inc
add
add
repnz
cmp
and
push
pop
add
cmpsb
or
dec
add
add
inc
orl
test
inc
add
jo
adc
movsl
cmp
dec
add
adc
sbbl
shlb
jnp
sbb
mov
cmc
dec
add
add
jae
mov
add
and
mov
out
dec
push
push
add
cmp
clc
jae
mov
mov
mov
pop
notb
jae
xchg
cmp
sahf
mov
cmpsl
pop
add
or
mov
add
add
add
test
add
sbb
cmpsb
clc
loope
stos
add
jmp
inc
add
xchg
ret
push
pop
in
push
mov
push
addr16
daa
add
pop
xchg
add
arpl
mov
adc
cmp
xchg
xor
js
mull
add
scas
les
aaa
sahf
add
ds
sub
fldl
xchg
inc
cmp
mov
lock
ret
mov
xchg
push
push
add
and
add
push
rcll
cltd
das
sahf
ja
dec
add
add
mull
add
add
jnp
ret
lret
cmpsb
popa
fnsave
mov
add
mov
or
add
xchg
pop
pop
daa
cmc
add
add
inc
pop
bound
mov
add
add
in
inc
add
mov
or
nop
cld
add
add
in
add
add
pop
xchg
jmp
mov
in
xchg
mov
cmpsl
incl
pop
add
data16
int3
mov
fstpl
cmpb
add
sbbb
add
test
test
add
add
cld
add
mov
out
arpl
add
imul
dec
add
add
repnz
jae
out
push
mov
mov
sahf
add
mov
repz
or
add
add
cmp
add
add
out
add
xchg
add
add
jnp
cmp
push
mov
lock
ret
push
mov
mov
lcall
mov
fdivs
or
inc
jbe
shrb
add
sbb
addb
std
sub
add
mov
lcall
add
popa
insb
add
inc
add
js
jmp
mov
cld
stos
sub
notb
add
add
subl
out
pop
imul
add
out
add
add
add
dec
add
add
mov
lock
ret
push
sahf
add
push
push
mov
add
or
add
test
add
add
add
sti
add
sahf
stc
mov
repnz
jae
mov
and
push
or
ficompl
add
repnz
jae
xor
pop
cmp
push
xchg
negb
ficoml
cwtl
loope
lret
dec
add
add
std
mov
rol
xor
add
cmp
movsb
add
mov
popa
data16
pop
cmp
jecxz
add
xchg
xor
fs
jae
push
xchg
push
mov
mov
add
repnz
add
movsl
dec
add
mov
movsl
push
arpl
add
loope
add
inc
add
add
fsubr
add
add
add
test
sub
push
adc
add
movsb
sub
outsl
sbb
add
or
sbb
inc
add
mov
jb
push
stos
out
push
cld
add
int
popa
add
xchg
fistl
jo
inc
add
xchg
ret
decl
stos
call
cmp
repz
cltd
addr16
jnp
loope
test
jl
icebp
in
add
jmp
repnz
jae
mov
sahf
jp
add
add
add
add
xor
add
add
hlt
inc
add
call
add
cmp
lods
orb
sub
ret
ja
lcall
add
sub
jns
or
and
add
movb
lcall
add
xor
lods
in
sbb
mov
jae
push
cmp
push
dec
mov
sahf
and
stc
add
outsl
cmp
inc
add
mov
aam
xchg
xchg
jmp
push
mov
xchg
mov
lds
cmpsl
xor
add
rolb
add
add
add
add
add
fwait
xor
add
mov
cltd
shlb
lock
iret
jno
add
hlt
loop
push
add
fbld
outsl
add
jmp
add
lock
negb
adc
add
push
cmp
inc
stc
div
xchg
jmp
mulb
setp
out
and
pusha
add
push
add
inc
jle
cmp
orb
inc
cmpsl
daa
ret
imul
add
lea
mov
cmp
inc
imul
add
add
mov
add
sbb
pop
add
xchg
shlb
adc
add
jge
add
add
pop
add
mov
in
sbb
dec
add
mov
in
xchg
xor
add
xchg
jmp
pushl
cli
mov
nop
and
add
push
add
mov
clc
out
lods
das
xchg
clc
jae
cmpsl
push
lcall
xchg
mov
jmp
push
add
rorb
out
pop
add
out
flds
mov
add
adc
add
out
cmpsb
clc
jecxz
add
add
data16
cmpsl
sub
sbb
cmp
fistpl
clc
jae
cmp
testb
mov
mov
add
lock
xlat
leave
push
add
insl
xlat
daa
xchg
add
dec
add
je
xchg
leave
sub
enter
incl
cltd
add
mov
lcall
pusha
add
add
mov
dec
call
insl
adc
add
inc
add
add
push
mov
lock
ret
xchg
lcall
lock
jmp
or
dec
cmp
clc
jae
mov
mov
and
in
inc
add
mov
mov
mov
push
add
clc
jae
mov
lock
mov
repnz
jae
mov
or
add
xchg
mov
fsubs
and
mov
je
sub
add
mov
mov
push
add
pop
add
arpl
add
or
mov
cmp
pop
add
dec
add
xor
pop
insl
rorb
add
sbb
add
sub
orb
inc
add
xchg
ret
cmp
mov
in
test
cmp
cmp
in
mov
sbb
icebp
dec
stc
mov
repnz
jae
out
out
add
and
dec
add
mov
repnz
jae
sahf
pop
mov
and
cmp
daa
push
mov
add
push
mov
lock
ret
mov
push
dec
add
pop
repz
inc
add
or
popa
ljmp
inc
add
add
in
mov
xor
add
xchg
jmp
and
or
jbe
imul
lock
xchg
mov
sub
add
push
add
xor
stos
and
add
add
add
fldl
cmp
sub
test
cmp
sbb
inc
add
xor
add
add
shlb
fidivrs
add
sub
shlb
pusha
add
in
add
add
add
popa
cmp
mov
lahf
das
pushf
imul
xchg
js
xor
xchg
push
repnz
jae
pop
stos
push
dec
push
or
push
lock
repnz
jae
add
call
cmpsl
pmulhuw
add
add
cmpsb
cmp
mov
add
add
add
fwait
out
push
add
es
add
sbb
push
add
jp
jmp
insb
add
add
add
lea
imulb
add
pop
push
mov
add
add
scas
sub
add
dec
add
imul
or
pop
repnz
jae
push
cwtl
lock
adc
dec
xor
clc
xor
inc
mov
jmp
and
in
mov
stos
call
and
add
adcl
add
call
mov
cmpsl
insb
add
dec
or
add
pop
add
add
jmp
add
sbb
call
sahf
clc
ljmp
pop
mov
cli
inc
out
rcrb
add
add
add
add
xchg
mov
repnz
jae
push
testb
mov
add
cmpsl
pop
and
dec
add
inc
mov
xlat
ret
push
add
lods
ret
add
add
pop
aam
add
add
in
fwait
or
rorb
mov
jmp
or
cwtl
pop
mov
cmp
fdivr
rcll
dec
add
fisubs
add
lea
pop
insl
dec
add
add
mov
cmc
add
lods
inc
add
lods
movsb
xchg
jo
xorb
xchg
jmp
xchg
push
mov
push
lcall
xchg
mov
mov
add
adc
inc
add
xchg
ret
add
cmpsl
mov
adc
adc
je
js
mov
lock
ret
dec
or
stos
xchg
outsb
add
jmp
lock
mov
mov
call
cmpsl
popa
pop
add
lahf
add
add
leave
dec
add
insl
aam
xchg
bound
jge
add
jmp
add
in
xchg
dec
shr
cmp
pop
add
cli
into
in
mov
cmp
sbb
cs
out
subl
add
push
mov
lock
ret
call
out
adc
add
popf
es
mov
xorl
add
in
mov
mov
and
push
lret
insb
add
add
add
add
test
push
add
mov
adc
add
mov
loop
add
iret
add
push
jo
mov
int3
int3
add
add
add
add
add
push
add
cmpsl
add
add
dec
add
outsl
out
push
xor
pop
add
add
rcr
rolb
add
stos
repnz
jae
dec
mov
add
and
divb
mov
push
add
add
xor
add
fidivrs
sti
sahf
mov
mov
add
sti
add
mov
push
mov
lock
ret
testb
mov
and
lock
iret
add
subb
ret
add
inc
add
add
or
xor
add
je
repnz
jae
push
lcall
out
pop
add
xor
add
jno
add
fidivs
xor
adc
mov
add
adc
and
add
adc
add
cmpsl
lcall
mov
add
stos
xchg
or
shll
jp
dec
add
shl
jno
sbb
mov
sbb
adc
add
add
shrl
mov
mov
loopne
mov
xor
repnz
jae
mov
push
mov
mov
push
lahf
pop
add
jmp
mov
cmp
cmpsl
in
decl
pop
jl
mov
or
repz
mov
xchg
adc
repnz
jae
push
push
in
mov
lock
inc
add
or
push
add
aad
jno
xor
add
jb
pop
pop
add
clc
jae
push
push
mov
mov
push
mov
inc
xchg
jmp
repnz
jae
mov
cmpsl
in
xchg
mov
mov
xchg
jmp
cmpsl
call
xchg
stos
and
loop
call
cmp
lret
pusha
add
cmp
add
and
add
mov
lods
cmp
aad
lcall
push
sub
mov
add
add
pop
add
test
subl
outsl
pop
add
lock
call
xchg
and
mov
push
repnz
jae
cwtl
and
push
push
and
clc
xchg
out
add
ja
inc
xchg
repnz
jae
mov
mov
or
test
xchg
cmp
les
clc
jae
out
push
pmulhuw
sahf
and
out
loope
int3
test
mov
pop
add
sbb
push
hlt
and
mov
lock
ret
cmp
xchg
add
add
es
divl
scas
push
push
add
fiadds
dec
add
cmp
cmp
jle
mov
add
aam
out
scas
mov
fsub
xchg
jle
insl
and
add
outsb
add
mov
add
bound
in
or
loop
jbe
mov
data16
mov
add
imul
sbb
loopne
add
clc
xchg
jmp
mov
mov
or
xchg
out
cwtl
push
scas
push
mov
test
in
jne
movsl
pop
add
insb
add
test
add
les
add
and
in
inc
add
push
aad
lds
and
xor
data16
or
cltd
out
adcl
add
add
inc
add
loope
and
sti
xor
add
roll
xchg
add
add
mov
and
shrl
dec
add
jl
cwtl
add
pop
add
aas
add
data16
mov
cltd
dec
push
and
and
add
xlat
pop
add
adc
scas
adc
add
cmp
negl
cmp
inc
push
add
add
add
ret
jge
push
add
inc
add
ljmp
or
sbb
jmp
sahf
push
mov
mov
dec
pop
mov
mov
inc
add
jbe
sbb
inc
xor
add
sahf
in
or
cmpsb
mov
out
dec
or
js
call
and
mov
lock
ret
push
sahf
add
out
sub
and
test
aad
add
add
add
cmp
loopne
mov
inc
add
adc
push
repnz
jae
xchg
lock
add
and
mov
add
loope
mov
inc
fnstenv
add
add
xchg
pop
add
test
xchg
jmp
sahf
mov
push
dec
cmp
add
mov
subb
mov
adc
add
insb
add
stos
mov
add
sub
add
fcompl
data16
cmp
add
add
testl
arpl
dec
add
mov
mov
cmpsl
ret
lahf
mov
les
movsl
add
loope
mov
rol
xlat
dec
add
bound
add
add
dec
scas
mov
pop
add
mov
data16
add
jp
imul
add
add
add
and
xchg
jmp
dec
add
js
jg
fidivs
int3
add
insb
add
arpl
cltd
fcmovb
aaa
cmpsl
add
dec
jne
lret
mov
out
es
add
sarl
add
flds
cwtl
pop
add
xchg
adc
add
pop
xchg
xchg
dec
jo
mov
sbb
pusha
add
adc
add
add
push
jbe
mov
add
pop
sbb
mov
xchg
push
add
mov
les
add
sbb
outsl
cmp
test
push
sbb
test
aam
ja
xor
stc
push
xchg
jmp
mov
mov
push
mov
and
add
repnz
jae
dec
mov
and
mov
push
mov
iret
xor
int3
aam
sub
aas
sbbb
call
xor
push
dec
add
inc
fidivl
sub
jns
jb
cmp
sbb
dec
mov
jo
popa
in
sub
jo
xchg
mov
and
add
popl
jg
add
add
test
je
call
pop
stc
add
repnz
jae
mov
mov
or
cmpsl
mov
mov
add
movl
push
int3
and
sbb
jnp
xlat
jno
aam
out
sub
jae
add
orb
add
cwtl
add
cwtl
cmp
lret
je
jmp
add
cmpsb
or
sbb
loop
mov
push
add
inc
add
add
add
adc
add
lea
scas
fwait
mov
push
add
cmp
fwait
mov
shlb
ficoml
adc
push
addr16
sbb
cmp
and
add
nop
sbbb
mov
sub
mov
in
add
add
dec
add
lahf
jne
pop
scas
cmc
sbbb
add
mov
add
add
add
push
jle
pop
add
inc
add
pop
add
fistpll
mov
inc
add
adc
add
mov
xor
repnz
jae
lcall
xchg
push
cwtl
inc
dec
test
stc
je
xchg
jmp
and
add
cmp
add
enter
add
movsb
add
xor
add
cmp
mov
and
sahf
cmpsl
mov
push
loop
jne
add
cmp
mov
in
push
fwait
add
adc
jb
scas
cld
jb
leave
data16
add
dec
add
hlt
mov
repz
dec
test
push
rolb
pushl
add
mov
mov
rep
repnz
jae
lcall
mov
lea
test
inc
add
xor
clc
pop
add
add
inc
dec
add
loop
fst
add
add
mov
repz
push
in
add
inc
add
add
stc
push
push
mov
lock
ret
lock
call
sbb
iret
imul
xchg
pop
add
out
daa
rolb
enter
enter
js
sub
aaa
ds
xor
and
add
addb
dec
add
jns
enter
mov
add
dec
add
sbb
cmp
bound
xchg
movsl
inc
das
bound
jge
push
xor
add
faddp
loop
add
cld
shrb
das
mov
ret
jbe
cmp
mov
int
xchg
add
xchg
jmp
psadbw
mov
and
mov
push
test
xor
add
mov
inc
testl
stc
push
repnz
jae
xor
dec
push
lock
sti
add
add
pop
add
mov
iret
sbb
fwait
mov
out
inc
add
add
sub
mov
add
repnz
jae
xchg
call
mov
and
add
rcl
cmpsb
cmc
jmp
stc
pop
push
mov
lock
ret
dec
mov
jmp
and
ljmp
adc
cmp
jmp
add
repnz
jae
push
incl
and
adc
out
xchg
inc
and
clc
jae
mov
call
push
mov
lock
ret
add
mov
push
mov
movsb
sbb
push
add
mov
add
push
shll
mov
rclb
adc
lock
ret
mov
lcall
lcall
pop
adc
ss
add
add
mov
loop
jecxz
add
fbld
xor
add
mov
add
jbe
mov
add
out
dec
lret
push
shlb
sahf
add
add
add
push
add
cmp
add
cltd
aas
jge
nop
stc
push
push
mov
lock
ret
mov
mov
lock
pop
push
mov
mov
fadds
dec
bound
shll
inc
xor
repnz
jae
push
push
push
mov
lods
mov
leave
popa
pop
add
paddsb
pop
add
aaa
xor
pop
add
inc
fdivrl
lahf
add
push
xchg
jmp
mov
decl
xor
add
repnz
jae
mov
cmp
cwtl
adc
add
or
call
loop
jle
popf
mov
jg
inc
push
mov
lock
ret
mov
xchg
mov
cmpsl
lcall
loopne
xchg
jmp
cmpsl
push
mov
mov
lcall
mov
add
pop
and
add
add
call
mov
imul
aas
xor
icebp
and
add
sub
icebp
pushf
popa
movsb
sbb
xor
inc
add
scas
iret
adc
sbb
jnp
or
adc
add
sub
out
xchg
pop
add
add
std
mov
jae
sahf
sahf
in
mov
and
clc
pop
add
push
sbb
mov
iret
out
push
add
jnp
sub
mov
std
add
pusha
add
iret
xchg
jno
int3
int3
int3
add
jne
cmp
add
fcmovnb
add
repnz
je
xor
add
mov
repnz
jae
xchg
cwtl
and
or
in
dec
push
shrb
adc
pop
and
add
gs
lods
jge
dec
data16
pop
jge
xchg
add
inc
add
and
inc
add
push
loop
cmpsl
into
pop
add
or
movsl
in
sub
fistpll
add
inc
add
xor
add
cmp
subl
dec
dec
add
add
push
add
add
fldl
or
pop
int
mov
push
pop
push
add
lock
jae
add
mov
mov
inc
add
xchg
mov
pop
add
add
aaa
mov
cmp
add
add
xor
repnz
jae
or
or
and
cli
repz
outsl
repz
shrl
mov
add
movsl
lea
add
fwait
or
jmp
mov
dec
mov
cwtl
cmp
aad
add
cmp
inc
pop
repnz
jae
and
and
stos
or
mov
or
std
neg
or
jle
iret
iret
stos
bound
sub
add
add
pop
das
mov
addb
mov
or
sahf
das
idivb
add
pop
add
mov
xchg
addb
add
sets
add
add
shl
repnz
jae
cwtl
mov
mov
or
xchg
mov
push
dec
add
jbe
es
jnp
mov
repnz
jae
mov
and
lods
add
fnsave
add
pushf
and
add
shlb
jne
and
rcrb
mov
xchg
add
stos
add
add
sahf
test
mov
lock
ret
cmpsl
stos
mov
add
push
pop
add
xchg
jmp
xor
push
divb
mov
xchg
ja
daa
add
add
arpl
add
add
sub
cmp
mov
push
mov
lock
ret
push
xchg
mov
dec
xchg
push
fs
cmp
arpl
add
mov
imul
and
movsb
jnp
sbb
or
jne
mov
in
mov
icebp
mov
cmp
cmp
xlat
add
xchg
push
xor
lock
lcall
pushf
mov
xor
xchg
jmp
or
mov
mov
lcall
pusha
add
aas
xor
add
mov
add
loop
test
insb
add
les
clc
add
pop
add
xlat
cwtl
xchg
call
das
push
inc
add
xchg
ret
or
insl
mov
push
sub
xor
dec
cwtl
clc
pop
sbb
xchg
pop
xchg
jmp
mov
mov
cmp
mov
out
in
movsbl
fnstsw
cmc
jp
ljmp
add
stos
ret
lahf
repnz
fbld
add
inc
add
cli
fsubrs
add
xchg
in
inc
add
xchg
ret
in
lock
cwtl
in
out
sub
dec
in
stc
mov
repnz
jae
and
push
dec
decl
sahf
lock
add
push
add
aam
je
ret
insb
add
mov
shll
add
rolb
xor
sub
push
add
repnz
loope
add
add
movl
outsb
add
and
test
push
sbb
ss
add
push
adc
cli
lret
add
push
test
xor
jo
lret
jo
pop
add
test
int
das
fsub
cmp
sbb
lods
cmp
lea
and
mov
sub
fidivs
jecxz
rclb
fiadds
add
add
xchg
clc
jae
mov
or
dec
pop
in
lods
lret
jo
loop
pop
add
ror
jecxz
hlt
xor
mov
add
lret
pop
filds
adc
jge
add
adc
pop
sbb
pop
cmc
mov
rorl
mov
jae
pop
pop
lock
push
and
mov
iret
dec
add
ljmp
pop
add
test
push
add
add
mov
int3
int3
add
mov
mov
out
jne
repz
dec
jle
or
sub
add
mov
add
xchg
adc
pop
cmpsl
repz
add
add
add
cld
add
add
xor
add
sti
lea
pop
shlb
add
pop
xor
inc
add
inc
add
and
add
lock
add
add
add
xchg
push
repz
jmp
mov
mov
mov
cwtl
mov
add
mov
add
add
into
out
dec
add
int3
add
pop
xchg
cmpl
or
xchg
mov
aam
push
add
test
fwait
es
add
add
and
push
aas
aas
loop
add
xor
cld
ret
aam
aad
stc
and
repnz
jae
mov
mov
mov
jge
clc
add
cmc
fwait
or
in
push
stos
add
inc
add
cmp
imul
movsb
adc
add
pop
add
add
xchg
xor
add
xchg
jmp
mov
mov
in
fists
mov
mov
add
sbb
or
insb
add
std
inc
mov
enter
xchg
xor
add
repnz
jae
cmpsl
add
mov
inc
aad
push
clc
jae
push
cmpsl
cmp
mov
ss
add
mov
icebp
sti
lahf
jg
jmp
jns
lret
xor
ljmp
stc
mov
repnz
jae
mov
mov
mov
imulb
movsl
rol
push
add
hlt
xchg
jmp
decl
in
cmp
sbb
xchg
add
add
ss
add
fdivrl
mov
xchg
ljmp
dec
add
lcall
call
mov
add
rolb
pop
inc
add
faddl
jmp
mov
insb
add
dec
lahf
ds
lcall
test
mov
and
rcrl
and
or
mov
or
cmp
xchg
push
out
dec
out
mov
cwtl
mov
mov
jne
add
fs
or
ret
and
dec
cltd
into
lock
je
cmp
sahf
pop
mov
mov
jmp
jno
or
push
jge
mov
mov
test
xor
add
clc
xchg
jmp
stos
and
mov
push
pop
repnz
jae
add
lcall
stos
call
jp
jno
add
add
cmp
fistpl
add
add
xor
add
daa
lahf
add
push
dec
add
pop
xlat
add
xorb
push
sub
enter
sbb
iret
mov
mov
mov
xchg
jmp
mov
setp
push
or
push
stos
xchg
add
add
shll
cltd
das
xor
jns
add
add
jae
jnp
add
pop
sub
mov
mov
add
jg
add
test
xchg
imul
sub
add
in
xchg
and
ja
and
pop
stos
bound
xchg
test
push
xchg
jmp
dec
in
cmpsl
push
push
mov
lcall
icebp
sbb
pop
sarb
mov
mov
cmp
stc
call
repnz
jae
push
push
mov
add
push
add
push
lods
add
mov
ret
roll
add
sub
pusha
add
dec
sub
push
add
add
and
jle
mov
push
mov
lock
ret
or
out
mov
cwtl
pshufw
rcrl
push
add
add
cli
or
int
lcall
int3
sti
loop
add
outsl
lcall
add
sub
cmp
cmp
movl
mov
repnz
jae
mov
cmpsl
cwtl
mov
mov
cmp
xor
shl
jbe
in
add
add
sub
add
stc
mov
xchg
jmp
mov
out
mov
dec
push
jnp
stos
add
ficomps
in
cmp
dec
add
jne
repnz
jae
push
dec
mov
lock
mov
out
ret
add
add
add
jmp
sahf
mov
call
cwtl
xchg
push
and
cwtl
loop
xchg
fdivrl
test
lret
or
icebp
mov
inc
push
test
cmpl
lret
add
mov
cli
and
add
movsb
add
add
xorl
add
or
add
fidivrs
add
out
popa
shl
pop
add
out
add
fwait
push
adc
add
add
add
add
add
mov
xor
push
repnz
jae
or
add
xchg
shld
pushf
cmp
outsl
xchg
cmc
fdivr
dec
add
js
cmp
out
add
pop
add
pop
repnz
jae
or
mov
push
and
out
dec
out
mov
jo
add
add
xor
test
xor
fwait
and
add
add
and
mov
adc
in
in
mov
jae
mov
or
mov
dec
mov
or
shll
add
in
xor
repnz
jae
mov
mov
pop
mov
das
fdivl
jnp
xchg
test
inc
add
sub
add
add
dec
lcall
inc
add
insl
mov
mov
test
jae
mov
add
push
clc
jae
push
sahf
add
mov
inc
add
mov
mov
xor
cmp
leave
iret
sbb
dec
fld
bound
cli
xor
add
add
pop
sti
pop
data16
test
mov
add
cmpsb
mov
and
add
mov
and
add
fldl
sub
cmp
pop
add
push
xorb
add
addb
fs
add
add
add
push
add
stc
mov
repnz
jae
mov
call
dec
mov
mov
repnz
jae
cmpsl
mov
push
cmpsl
mov
and
jb
ret
xchg
test
xchg
jmp
add
or
cwtl
mov
or
add
dec
add
bound
js
or
add
inc
mov
jp
add
add
incl
sti
arpl
repz
add
push
add
pop
sub
jl
mov
jmp
divb
and
sti
cld
hlt
jl
and
and
add
add
cli
mov
loop
or
ljmp
rolb
push
add
add
jb
rorl
fwait
testl
cmp
xchg
jae
femms
push
xchg
cmpsl
xchg
mov
out
xchg
add
add
cmp
cmpsb
inc
dec
incb
ljmp
add
mov
push
mov
lock
ret
pop
mov
or
daa
mov
dec
aad
push
add
and
clc
aaa
dec
add
mov
adc
push
clc
jae
dec
dec
negb
cld
add
pop
add
add
jno
add
add
xchg
jmp
cwtl
pop
mov
dec
mov
and
ss
add
add
jo
test
xchg
sub
push
mov
lock
ret
mov
xchg
xchg
mov
or
sbb
dec
xor
add
adc
add
lcall
subl
icebp
dec
add
inc
decl
push
mov
lock
ret
mov
and
mov
test
add
cmc
add
add
pop
add
or
cld
or
or
out
ret
subl
lock
jmp
cmp
mov
xor
push
add
push
add
xor
xchg
add
repnz
jae
and
pushl
subb
and
test
adc
add
xchg
xor
add
andl
add
shl
xchg
jge
lods
int
and
or
inc
add
ja
xor
add
sbb
cmp
mov
inc
ret
sub
popl
inc
cmp
adc
fstpt
add
dec
add
pop
add
call
ret
mov
jae
out
lcall
mov
lcall
fs
lods
out
das
pop
add
repnz
jae
mov
or
stos
mov
push
jg
cltd
out
dec
add
les
daa
mov
xchg
pusha
push
mov
lock
ret
push
dec
out
push
dec
lcall
and
add
mov
jae
sahf
push
mov
mov
cmp
or
pop
cmc
xor
add
es
sub
mov
dec
add
add
mov
sarl
push
repnz
jae
cmp
add
cmp
push
push
xchg
stos
and
add
paddusb
mov
mov
add
jne
sub
bound
in
int3
xor
add
les
cmpsb
mov
mov
aam
push
cmp
lret
je
aas
jmp
inc
add
cli
insb
add
idivb
and
mov
sbb
fisttpll
outsb
add
mov
ljmp
add
ljmp
sbb
loop
mov
repz
in
add
daa
aas
add
mov
call
xor
adcl
add
js
add
xchg
jmp
mov
push
stos
mov
sub
test
sub
iret
daa
stos
add
in
mov
add
insb
add
call
mov
jne
fmull
idivl
pop
add
jbe
shr
mov
add
and
add
add
cli
xor
add
add
dec
add
jmp
xor
cwtl
notb
mov
xchg
jae
cmpsl
dec
push
mov
add
or
xchg
jmp
push
out
push
mov
pop
mov
add
sarb
sti
mov
faddl
addr16
cld
repz
cmpsl
ret
hlt
pop
add
leave
add
int3
pusha
add
mov
jmp
push
pop
or
pop
jg
sub
addb
mov
cmpsl
pop
push
add
push
repnz
jae
mov
mov
xchg
push
pop
mov
cmpsl
call
push
repnz
jae
sahf
mov
or
push
and
pmaxsw
cld
out
std
mov
mov
add
ja
pop
jecxz
adc
add
push
sub
jge
jl
pop
add
roll
mov
das
leave
sbb
cli
xchg
inc
adc
add
aaa
test
and
pop
lock
add
lea
push
mov
inc
jno
or
jnp
pop
add
add
inc
add
incb
push
add
or
nop
xor
add
adc
add
push
add
add
out
mov
adc
add
addl
adc
sub
andl
push
add
aad
xor
add
pusha
add
stos
pusha
add
dec
add
fldenv
and
add
cmp
add
aam
outsb
add
xchg
and
add
add
or
xchg
jmp
mov
and
mov
mov
push
add
stos
push
push
in
cmp
add
xor
dec
add
pop
add
jae
inc
je
sbb
xlat
add
push
addb
add
and
add
nop
movsb
stc
inc
repnz
jae
dec
mov
mov
mov
add
mov
lcall
fninit
into
ficomps
ficompl
mov
add
movsl
hlt
faddp
pop
and
adc
xlat
add
add
clc
add
sub
jo
daa
nop
add
mov
addr16
add
mov
push
and
int3
dec
add
cltd
sub
pop
hlt
je
sbb
jae
in
pop
lods
in
mov
inc
add
adcl
mov
dec
sub
ss
sub
jne
adc
out
in
add
movl
push
add
and
xchg
jmp
push
push
mov
push
stos
push
xlat
mov
mov
pop
add
and
add
insb
add
sub
add
mov
clc
jae
out
add
mov
mov
add
js
and
add
adc
cmp
fstl
cmc
xchg
mov
adc
add
add
std
mov
movsl
pop
or
negb
addb
mov
mov
xor
add
outsl
cmp
fidivrl
and
stos
adc
mov
add
aad
mov
das
adc
add
dec
aas
pop
fbld
lds
sahf
jmp
xchg
mov
lock
ret
mov
xchg
negb
pop
mov
add
xchg
fadd
mov
add
data16
sbb
lock
xchg
xchg
pop
test
push
add
jns
roll
leave
dec
or
pusha
add
mov
xor
and
test
lret
mov
adc
adc
add
das
sub
add
call
pop
add
subb
insb
add
fcompl
add
push
andl
sub
add
add
loop
add
cmp
add
mov
mov
cmp
mov
add
pushl
cwtl
cmpsl
lcall
pop
add
add
jmp
xchg
jmp
dec
mov
or
fcompl
add
addb
push
xor
add
icebp
gs
popa
cmpsb
mov
push
add
add
in
addr16
sub
mov
repnz
jae
xchg
add
pop
mov
mov
mov
pop
add
rclb
ret
mov
sub
sbb
or
push
add
cli
add
ja
imul
jecxz
add
sbb
adc
hlt
sar
cmp
mov
shl
jae
call
mov
dec
fwait
dec
add
xchg
xor
dec
add
xor
add
add
jno
out
nop
mov
sub
push
mov
aad
mov
mov
test
and
add
outsl
cmp
out
test
popa
repnz
jae
out
add
pushl
mov
add
popa
call
sub
movsb
imul
imul
add
stos
add
jecxz
pop
fwait
add
jg
lcall
outsl
push
sub
ljmp
sbb
aam
push
repnz
jae
sysenter
push
add
cmpsl
cmpsl
call
ret
popf
cmpsl
xor
add
arpl
ret
mov
mov
jbe
cwtl
daa
sbb
sar
inc
add
sub
mov
add
adc
add
inc
or
clc
jae
lcall
and
roll
ficomps
inc
add
pop
add
repnz
out
pop
add
xor
add
sbb
pop
enter
pop
mov
insb
add
dec
add
jae
rcll
xor
push
mov
lock
ret
mov
je
jno
push
add
inc
push
test
jge
dec
and
movsl
add
arpl
data16
je
mov
ljmp
add
cli
fcompl
add
clc
add
movsb
cltd
sahf
push
add
mov
iret
hlt
fcmovbe
ja
imul
js
pushf
pop
push
add
adc
add
mov
fdivrl
add
add
divb
popl
aas
xlat
lock
add
add
pop
pop
add
movsl
push
pusha
add
sarl
clc
or
jbe
xchg
or
add
xlat
cmp
lea
or
add
repnz
jae
and
push
cmp
mov
jmp
enter
cmp
jp
scas
pop
bnd
pop
add
push
or
lahf
movsl
scas
push
add
mov
repnz
jae
mov
and
xor
xor
sti
xchg
mov
repnz
jae
mov
sahf
out
mov
icebp
insl
movsl
cmp
xorb
add
adc
add
fwait
sub
mov
ds
mov
jecxz
add
jb
das
xchg
mov
jle
pop
fs
loope
add
outsb
add
and
add
add
cmp
add
js
sbb
fdivs
inc
add
xor
add
pop
add
jae
js
mov
out
rclb
add
add
loop
and
inc
and
inc
mov
xchg
jmp
mov
mov
add
out
jge
add
in
cmp
out
push
add
in
mov
add
pop
add
jne
push
mov
lock
ret
push
mov
nop
in
push
xchg
push
push
mov
lock
ret
or
lock
mov
fnstsw
scas
jae
push
push
add
bound
push
add
incb
sub
pop
lea
sar
add
sarb
jl
shll
dec
mov
loop
push
add
sbb
in
ret
add
jne
pusha
add
jo
test
xchg
sbb
sub
je
repnz
jae
decl
pop
mov
push
test
push
add
sub
pop
add
adc
dec
add
cmp
mov
aas
pop
enter
add
add
adc
add
imul
lahf
into
nop
xchg
or
loop
pop
add
jg
jmp
xchg
jmp
out
push
or
mov
add
xlat
add
cwtl
fwait
les
add
jae
repnz
add
jno
mov
addb
push
mov
lock
ret
mov
mov
loopne
repz
push
and
call
sub
sub
add
repnz
enter
add
popf
cmp
cwtl
or
loopne
cld
out
notl
sub
xor
sti
in
add
addl
add
xchg
mov
or
dec
add
scas
imul
sub
fisttpll
add
pushl
push
mov
lock
ret
or
mov
gs
jge
add
nop
dec
add
add
add
or
mov
je
mov
inc
mov
push
mov
lock
ret
setp
mov
add
roll
mov
loopne
push
cli
ficompl
cli
add
lret
xor
add
out
and
add
add
mov
xor
add
push
insl
idiv
mull
add
arpl
mov
add
loopne
aad
fildll
add
add
sahf
sbb
xlat
in
add
icebp
jecxz
add
push
inc
add
add
add
add
or
add
add
dec
inc
add
call
adc
add
add
repz
mov
pop
mov
jmp
xchg
mov
xchg
and
lcall
femms
push
insl
push
sub
push
add
stos
mov
xorb
addb
push
add
mov
ja
into
stos
dec
add
adc
mov
sbb
inc
sarl
add
add
add
fisubrl
inc
add
add
mov
out
dec
punpckhdq
add
cmp
mov
adc
add
mov
lods
test
jae
and
add
push
add
mov
pop
add
xchg
clc
jae
mov
or
in
notb
data16
data16
das
inc
add
jae
add
out
repz
nop
inc
add
fisttpl
dec
add
in
add
add
mov
repnz
jae
push
dec
dec
mov
negb
jbe
jle
int3
jno
stos
push
mov
lock
ret
sahf
out
cwtl
mov
or
or
outsb
add
add
shrl
cmp
inc
addl
out
lds
aam
pop
add
add
ss
add
addr16
push
test
jns
mov
repz
jae
xor
decl
dec
xor
cmp
push
mov
lock
ret
cmp
mov
mov
into
sub
sub
loope
movsl
dec
cmpsl
fistpll
imul
test
jno
movsl
pop
jp
call
push
fistpll
add
int
mov
xchg
rcll
add
adc
enter
sar
mov
push
add
add
cmp
inc
fnstcw
xor
or
xor
pushf
sbb
jbe
mov
or
repnz
jae
xor
or
mov
xchg
xor
add
jno
jnp
loop
add
out
add
xchg
jmp
mov
push
push
xor
in
add
clc
repnz
jae
cmpsl
call
add
push
add
add
inc
add
add
movsl
repnz
jae
dec
in
pop
and
mov
sbb
sub
add
out
and
add
loop
jns
out
lods
shlb
filds
inc
add
cwtl
cwtl
dec
int3
sti
jns
add
inc
add
sarb
sub
xor
add
cmpsb
add
mov
faddl
stos
bound
sbb
lret
inc
mov
xchg
jmp
cmp
mov
lcall
outsl
push
call
push
mov
lock
ret
call
adc
add
cmp
cmp
clc
jae
push
push
mov
stos
add
cmpsl
mov
pushf
stos
or
adc
mov
pusha
add
fst
rcl
add
inc
add
push
add
stos
les
filds
lcall
add
add
enter
sbb
fadds
jae
dec
cwtl
dec
mov
xchg
push
stos
mov
jb
add
add
repnz
jae
push
and
push
add
or
cmc
and
pop
faddl
cmp
cmp
add
inc
xor
repnz
jae
dec
cmovl
mov
insl
sar
push
mov
pop
xor
roll
and
add
lock
xor
xchg
xchg
test
sbb
cmpsb
fdivrs
scas
jnp
add
jae
fcmovne
test
jns
add
cmp
mov
sbb
out
test
movsb
add
add
dec
add
and
inc
clc
and
cmp
lods
or
xor
mov
xlat
sbb
add
cmp
stc
push
repnz
jae
pop
dec
mov
mov
xchg
or
mov
mov
mov
add
cmp
sub
scas
pop
sub
bound
scas
mov
xor
adc
add
mov
faddl
jnp
decb
in
push
or
call
and
add
movsb
mov
jle
xchg
dec
add
loop
add
pop
inc
mov
push
mov
lock
ret
stos
push
dec
or
cmp
std
jae
scas
lret
add
fsubrp
fwait
inc
bound
rolb
add
inc
mov
mov
cmp
dec
cli
or
add
icebp
scas
movsb
add
add
cltd
jb
and
jle
adc
sbb
inc
add
test
stos
mov
push
xchg
jmp
mov
mov
notb
push
out
mov
pop
out
add
add
mov
and
add
scas
dec
xchg
je
xchg
jmp
mov
add
out
sahf
or
jge
jno
test
add
cmp
mov
add
pop
add
aaa
mov
push
add
add
insl
pop
add
lods
jno
xor
add
repnz
jae
dec
mov
lcall
or
add
add
xchg
test
lock
clc
ret
jno
es
mov
push
mov
lock
ret
and
stos
mov
pop
lea
pop
scas
dec
add
jns
mov
das
cmp
jg
imul
push
push
mov
lock
ret
mov
out
mov
and
xchg
or
into
jno
movsb
mov
add
lret
mov
inc
pop
add
outsb
add
in
cmp
cli
pop
pop
jmp
js
or
out
pop
adc
add
inc
lock
lods
rclb
add
mov
and
cwtl
sbb
mov
mov
arpl
jl
cmp
mov
add
pusha
add
loopne
add
mov
add
je
dec
add
shl
sbb
in
aaa
mov
dec
stc
add
repnz
jae
out
or
dec
push
psrad
iret
test
enter
inc
mov
lods
dec
add
adc
xchg
sub
lock
sbb
xchg
cmpl
mov
testb
pop
mov
mov
lock
adc
or
cld
cmp
adc
outsb
add
cmp
adcb
xor
add
loopne
out
mov
push
repnz
jae
out
push
notb
add
lock
call
lods
mov
sub
iret
adc
and
je
sub
mov
add
cli
xor
inc
add
add
les
add
add
add
xor
add
add
xchg
cwtl
push
fld
pop
and
adc
loop
jbe
inc
add
insl
xor
lret
mov
repnz
jae
xchg
mov
mov
lcall
fdivs
add
movsl
mov
or
xor
add
pop
push
mov
lock
ret
mov
cmpsl
lock
mov
push
mov
lock
ret
mov
stos
mov
repz
lock
adc
add
jg
hlt
shrl
add
inc
mov
push
mov
lock
ret
dec
push
in
mov
div
inc
cmpsb
adc
add
jl
shrb
jnp
add
out
xor
add
lock
add
jp
sbb
mov
gs
rorl
and
add
ret
add
jp
mov
jae
mov
lret
sbb
or
clc
jae
push
notb
mov
and
pop
adc
adc
add
addb
add
add
iret
inc
add
add
add
push
mov
lock
sahf
aam
jl
int
adc
pusha
add
int
sbb
je
mov
add
mov
xchg
jmp
add
mov
call
add
mull
push
nop
add
xchg
add
add
or
std
scas
rcr
cld
sbb
cmpb
jne
cmp
xorb
add
pop
add
jl
inc
lock
ljmp
add
aas
mov
jae
cmp
testb
dec
dec
and
je
shl
or
add
xor
call
mov
ud2
add
cmp
imul
mov
or
mov
out
call
in
lds
inc
xchg
pop
int3
add
xor
add
xchg
inc
and
clc
jae
mov
xchg
lcall
add
sti
push
xchg
movsl
dec
add
add
addr16
negl
mov
lahf
add
add
inc
mov
add
mov
add
jecxz
sub
xor
add
imul
dec
add
cmp
inc
add
add
xlat
clc
in
pop
add
pop
iret
insb
add
pop
add
add
incl
add
xchg
lcall
hlt
and
add
jle
pop
add
mull
out
add
out
add
stos
push
add
mov
lock
ret
sets
lcall
add
add
mov
dec
jl
iret
mov
add
mov
iret
cmp
pop
pop
add
aaa
push
add
or
out
dec
dec
aaa
xlat
add
call
push
add
mov
sbb
cmp
add
add
adc
add
repnz
jae
push
lcall
jns
xor
sbb
nop
arpl
and
fmuls
nop
mov
clc
pop
add
int3
lock
ja
cmp
add
lahf
sarb
es
add
dec
cli
fcmovbe
push
jmp
stc
inc
xchg
jmp
mov
dec
add
add
pop
rol
and
cld
hlt
add
jecxz
adc
add
loop
mov
push
aas
add
lods
add
mov
inc
add
pusha
repnz
jae
mov
cmpsl
lock
dec
out
ljmp
stc
add
xchg
jmp
mov
lock
pop
mov
sahf
cmp
add
jp
ss
es
andb
repz
lcall
rep
push
mov
lock
ret
add
dec
mov
mov
jmp
mov
in
push
mov
mov
pop
xor
add
add
add
mov
cs
mov
fwait
add
add
add
fsubl
mov
add
pop
add
faddl
or
xchg
mov
stc
push
repnz
jae
dec
mov
dec
cmp
mov
ret
push
add
dec
add
out
add
sub
ja
divl
dec
add
das
scas
dec
lcall
push
outsl
jae
jmp
sahf
dec
in
mov
push
cwtl
add
add
jmp
negb
in
or
dec
or
xor
test
mov
add
jns
data16
inc
jae
rclb
add
adc
mov
inc
mov
xchg
jmp
cwtl
mov
dec
lcall
jmp
pop
cmp
and
sbb
sub
adc
add
add
mov
icebp
jle
nop
mov
xchg
inc
repnz
jae
mov
or
mov
push
add
xor
out
and
fldenv
outsl
add
add
pop
loopne
pop
add
cmp
mov
fistps
cmpsb
fidivl
jns
lret
xchg
jle
add
add
pop
add
xor
pop
fiadds
lock
ret
or
mov
pop
add
in
mov
popa
scas
aam
xchg
add
add
mov
jae
add
lcall
add
mov
xchg
xor
add
sub
add
pop
add
add
inc
add
jg
repnz
add
adc
push
add
sub
adc
add
sub
shlb
jnp
xor
mov
xor
add
add
lds
addb
mov
repz
xor
add
icebp
sahf
outsl
dec
add
out
popa
xchg
and
imul
add
jmp
movb
ret
fnstcw
fisubs
sbb
xchg
xor
mov
adc
jmp
push
lcall
jl
and
add
mov
jge
icebp
fstpl
das
out
push
add
insl
movsb
dec
add
lea
adc
add
pop
inc
add
es
add
add
clc
jae
idivb
sahf
or
bound
sbb
cmpsb
lock
scas
movsl
pop
imulb
xchg
adc
push
clc
jae
mov
mov
mov
cmp
sbb
push
lock
incl
filds
subl
call
push
lock
mov
add
ret
add
add
lcall
pushf
mov
mov
ja
add
adc
add
insl
mov
cmp
add
xchg
test
mov
inc
add
lea
add
adc
out
add
sub
ffreep
mov
out
and
add
repnz
test
add
sbb
mov
jle
push
out
and
add
jmp
repnz
jae
mov
out
call
xlat
mov
mov
jae
push
or
negb
popf
mov
jmp
lgs
out
mov
repz
add
xchg
add
loopne
iret
jno
mov
sbb
in
add
movsl
cmpsb
fcompl
inc
rep
repnz
jae
dec
lock
mov
xchg
imulb
push
add
xor
add
add
add
add
add
add
add
into
xor
mov
pop
mov
mov
aaa
inc
add
cmc
jbe
std
lock
lock
add
jae
divb
call
mov
xchg
jmp
add
mov
mov
add
mov
lock
sti
lea
or
mov
rolb
add
dec
mov
mov
decl
in
mov
fs
mov
xchg
jmp
and
xchg
out
cmp
mov
arpl
clc
adc
add
pop
add
enter
add
inc
add
add
jecxz
rclb
fnsetpm(287
push
add
add
aam
hlt
shlb
imul
dec
imul
jnp
mov
out
negl
fldenv
ret
lcall
inc
push
push
mov
lock
ret
pop
in
xchg
add
add
movsb
aam
scas
add
cmpsb
aam
fwait
sti
inc
xor
add
add
roll
push
add
jg
sub
jno
sbb
or
jg
push
xchg
add
les
repnz
testl
fidivl
outsl
xchg
jmp
mov
mov
sahf
push
negb
and
lods
push
add
mov
jmp
add
mov
out
add
and
push
add
je
or
add
add
push
daa
mov
scas
lods
lcall
jo
pop
add
daa
push
add
pusha
add
jmp
and
mov
mov
mov
push
mov
lock
ret
mov
mov
mov
or
xchg
jne
push
mov
lock
ret
push
pop
hlt
outsb
add
pop
mov
xchg
pop
push
mov
lock
ret
push
call
decl
or
and
add
ja
mov
lds
mov
insb
add
outsb
add
mov
inc
add
add
add
pop
cld
mov
cmp
cmc
sbb
xlat
jmp
add
xor
repnz
jae
out
lock
mov
inc
add
add
add
pop
add
aas
jle
adc
jl
in
and
push
push
into
hlt
in
repnz
mov
repnz
jae
or
and
icebp
fstpt
mov
cmpl
add
dec
loope
add
add
je
or
stos
call
add
add
pushf
and
add
add
push
add
mov
leave
add
add
scas
ficomps
repnz
sub
dec
add
mov
mov
add
sbb
out
add
sbb
add
stos
adc
add
xchg
out
in
pop
add
add
xchg
jmp
call
mov
xorb
repz
push
push
xchg
jmp
mov
lock
push
cwtl
call
push
add
cmp
cmp
int
pop
xchg
add
push
mov
repnz
jae
add
mov
pop
add
add
add
add
repnz
jae
mov
cmp
dec
lock
mov
mov
add
rorb
imul
push
xor
add
sbb
and
add
pop
and
push
mov
mov
inc
add
add
jmp
fistpl
jnp
rcrl
inc
xchg
jns
insl
fstpt
pop
pop
add
cmp
shlb
aaa
ljmp
add
push
repnz
jae
pop
push
mov
push
mov
cld
mov
mov
xchg
sbb
cmpsl
cltd
mov
mov
add
dec
add
cmpsl
test
add
sahf
jmp
dec
ret
sar
and
test
xchg
add
add
sar
or
neg
cmp
adc
add
cmp
stos
fst
cvtpi2ps
push
cmp
add
add
mov
xchg
inc
mov
xchg
jmp
push
mov
xchg
cmp
cmp
lock
inc
and
add
xchg
cld
mov
add
mov
mov
add
hlt
inc
add
add
lods
mov
loop
loope
add
subb
xor
add
lret
add
add
jbe
pop
cmp
mov
sub
out
dec
out
pop
add
jns
jo
call
into
dec
fmul
aad
add
repnz
jae
mov
out
lgs
out
icebp
add
dec
add
movl
sti
or
js
xchg
ret
outsl
jmp
fdivl
pop
jle
inc
adc
add
fimuls
adcb
jmp
sahf
sahf
sahf
cmpsl
push
lcall
mov
push
mov
lock
ret
in
and
or
movsb
ljmp
xchg
add
push
xchg
add
push
add
jns
or
inc
add
lret
jnp
mov
popa
add
clc
jae
add
mov
xcrypt-cbc
cmpsl
push
mov
loop
add
and
scas
pop
mov
pop
add
xor
add
pop
mov
in
cwtl
push
add
sbb
adc
add
add
in
add
add
mov
add
add
ljmp
mov
cwtl
add
inc
add
rol
mov
xor
add
mov
and
add
popf
jge
inc
add
outsl
lahf
mov
add
shll
loope
gs
push
add
xor
add
mov
sub
das
xchg
xor
repnz
jae
mov
push
mov
add
jmp
or
add
jno
inc
and
xchg
jmp
mov
push
mov
or
add
push
add
jae
popl
xchg
jmp
mov
mov
mov
dec
mov
jecxz
sub
add
sbb
mov
lea
fadds
mov
push
push
add
aad
sbb
loopne
add
int
dec
add
add
add
shl
fsts
rolb
enter
sub
xchg
test
add
push
mov
lock
ret
push
mov
push
add
xchg
jmp
sub
add
call
incl
mov
outsb
outsl
repnz
jae
or
mov
pop
rcpps
adc
add
xchg
repz
jae
and
push
cmp
mov
out
mov
add
pop
add
xor
add
add
lcall
test
mov
in
add
jns
jmp
and
add
lcall
fwait
loop
dec
cltd
pop
xor
add
inc
sbb
and
mov
mov
int3
stos
jo
push
add
lds
add
aam
jne
addb
shll
sbb
dec
sarl
imul
and
into
jecxz
add
ret
push
add
rolb
mov
add
repz
cmpsl
jmp
aam
andl
inc
sbb
xor
add
inc
add
mov
or
movsb
jg
sbb
std
iret
fiadds
sbbb
add
and
fldl
imul
push
and
add
add
add
add
movsl
add
and
repnz
jae
push
mov
dec
or
dec
aas
pop
add
ret
add
push
data16
jge
cmp
bound
lcall
cmpsb
or
movsb
add
fnstcw
dec
mov
add
add
in
pop
add
add
mov
mov
out
repnz
jae
xor
call
notb
dec
sahf
inc
add
cmpsb
lea
shlb
adc
push
add
bound
xlat
jmp
add
adc
lds
popf
add
das
add
mov
dec
add
stos
dec
cmp
mov
add
dec
add
push
add
add
fistl
enter
add
add
stos
push
mov
mov
pusha
add
dec
add
das
js
imul
xor
and
add
les
cmp
xchg
dec
in
push
clc
jae
mov
xor
out
mov
jl
mov
mov
jmp
stos
mov
mov
and
cmp
jae
add
add
pop
repnz
jae
or
mov
incl
in
call
dec
mov
das
add
jbe
dec
stos
loop
add
sbb
pop
shlb
push
jae
push
inc
mov
icebp
add
mov
add
aas
loopne
add
icebp
mov
int3
int3
jb
in
outsl
add
mov
add
cmp
lea
cmpb
mov
mov
add
add
push
add
std
rcll
add
sub
ljmp
in
leave
pusha
add
push
add
push
xchg
jmp
push
xchg
mov
cwtl
fnstsw
mov
cli
add
imul
stos
adc
add
add
jae
mov
push
mov
notb
dec
add
daa
testl
sbb
inc
xor
add
stos
add
add
add
push
add
cmc
cmpsb
xor
pushf
popa
push
mov
add
add
mov
mov
push
push
push
ficoml
aaa
cmp
pop
lods
push
sbb
and
pop
add
mov
repz
outsb
add
add
add
xchg
fnstenv
adc
lock
add
jbe
add
push
adc
sbb
add
jb
ret
add
push
in
stos
cmp
cmp
add
add
mov
shlb
sub
xchg
jmp
mov
cmp
dec
cmp
mov
add
lods
out
and
add
hlt
pushl
mov
clc
scas
aas
inc
or
out
add
xor
sub
fucompp
imul
les
bound
outsb
add
adc
loope
outsl
or
mov
shlb
mov
in
popf
scas
andl
add
inc
add
xor
ret
popf
insl
dec
pop
data16
and
clc
mov
add
nop
add
add
xchg
shll
aam
nop
cmp
and
mov
add
xchg
jmp
and
add
dec
lock
out
sahf
mov
insl
mov
mov
ja
or
int3
addr16
add
js
xchg
test
mov
sbbl
sub
add
sub
jbe
vmovdqu
cmp
movsb
js
sub
jb
pop
push
add
mov
loopne
mov
lock
ret
mov
sysenter
in
push
sub
rcll
stos
arpl
sldt
jno
mov
div
repnz
jae
lcall
mov
mov
dec
add
mov
add
push
push
sbb
xor
jnp
push
pop
add
aad
inc
and
mov
lods
add
inc
add
mov
xchg
jmp
mov
pushl
iret
jns
sahf
inc
jnp
add
sbb
adc
add
pop
add
pop
cli
iret
mov
mov
lahf
in
bswap
pop
add
pop
inc
add
inc
add
shrl
add
movsb
xor
addl
shrl
cmp
mov
dec
xchg
fldcw
clc
popa
dec
add
out
aas
cmp
add
sub
add
add
inc
add
mov
jne
repnz
jae
push
mov
mov
mov
mov
add
add
xor
out
popa
lods
fsts
add
aas
addr16
add
les
add
pop
sti
add
dec
add
lahf
inc
nop
push
mov
lock
ret
and
cmpsl
push
out
fmulp
xchg
xor
rclb
xchg
outsb
add
insb
add
jl
cmpsl
clc
pushf
notl
and
jae
clc
js
cltd
and
jp
sbb
sub
mov
clc
jae
stos
cwtl
cmpsl
out
dec
mov
cmovl
sti
mov
sbb
push
add
push
and
add
sarl
mov
jno
in
in
inc
add
inc
push
mov
mov
pop
add
push
lcall
sbb
out
add
out
add
mov
add
adc
lret
add
jnp
in
scas
fsubs
rorl
fyl2x
mov
addr16
pop
add
test
xchg
rep
repnz
jae
out
and
or
cmpsl
xchg
and
testb
xchg
jae
lcall
mov
sti
xor
add
jo
sbb
nop
cltd
enter
add
sub
mov
lods
inc
push
add
in
xchg
pop
add
jmp
fidivrs
add
or
int
add
lds
add
sbb
bound
loop
pushf
add
sbb
cmpps
push
lcall
pusha
add
movsl
add
xor
add
movsb
fisttpll
faddl
and
and
pop
add
add
xchg
mov
push
mov
lock
ret
push
lcall
mov
notb
jb
lea
xchg
clc
jae
pop
add
cmpsl
dec
add
or
xor
add
push
aad
cmpsb
sbb
pushf
popa
adc
aas
pop
outsb
add
pop
data16
divb
js
jnp
xor
popa
push
add
add
sahf
pop
aaa
scas
add
add
mov
pop
add
add
mov
mov
clc
jae
mov
mov
and
lock
and
aas
shl
xor
add
movsl
imul
mov
sbb
add
scas
pop
out
data16
add
sbb
scas
inc
add
mov
adc
add
out
mov
je
stos
inc
add
aad
xor
add
dec
add
push
push
jae
and
pop
outsl
out
out
lods
into
addps
lret
fiaddl
movsb
mov
jmp
mov
dec
add
add
shr
push
add
push
add
fiaddl
aad
fists
add
xchg
jmp
mov
mov
add
add
dec
add
std
and
rcrb
jmp
clc
jae
cmpsl
mov
mov
lock
add
jae
xor
add
pushf
inc
sbb
loope
add
jne
daa
mov
jge
or
add
add
cmp
mov
dec
sub
incl
mov
cmp
out
mov
faddl
rolb
mov
add
cmc
push
add
je
mov
js
and
add
inc
add
add
inc
shrl
in
xchg
pop
add
sarl
or
movsb
mov
push
cmc
add
cmp
xchg
sub
imul
loop
test
loopw
push
xor
add
push
mov
pusha
add
add
pop
out
int3
loope
and
add
clc
lret
pop
insb
add
icebp
imul
and
xor
bound
jb
insl
push
lret
sub
and
add
pop
add
cmpl
fwait
sub
add
clc
jae
cmpsl
mov
test
movsb
jnp
pusha
add
jne
repnz
jae
mov
out
and
jge
shll
or
add
add
add
add
sti
sub
cmp
cmp
stc
call
xchg
jmp
incl
and
lock
push
inc
add
adc
add
mov
add
lods
adc
aaa
mov
push
dec
add
push
daa
add
roll
mov
and
fists
push
jae
lahf
test
xor
add
or
data16
mov
testl
mov
add
fistps
aad
add
sbb
popa
add
add
fiaddl
xchg
adc
add
ret
add
mov
add
repnz
addr16
jne
pop
add
and
add
add
mov
add
cltd
dec
sti
out
cmp
cmp
sub
pop
push
add
dec
cwtl
mov
ss
xchg
out
std
add
add
add
adc
add
pusha
add
mov
push
mov
bnd
sub
push
testb
popl
fstpt
jg
and
add
inc
push
xor
aaa
cmp
pop
add
pop
add
inc
insb
add
aaa
insl
add
mov
add
or
mov
xchg
stos
jo
or
mov
xchg
or
lret
jecxz
add
ret
dec
mov
sahf
inc
add
fildll
lahf
add
add
out
aam
add
icebp
add
addr16
mov
jns
mov
test
add
pusha
add
add
out
mov
add
add
add
xchg
or
pushl
add
sahf
and
call
push
add
mov
dec
add
xchg
loope
mov
rcll
mov
sbb
adcl
add
push
aam
dec
add
pop
add
call
sub
and
add
daa
and
data16
test
dec
out
pushf
repz
sbb
adc
xchg
daa
dec
add
pop
dec
add
test
sahf
dec
add
neg
call
ja
inc
add
xchg
ret
mov
call
imul
iret
sbb
mov
and
xchg
cltd
jge
iret
xchg
pop
cmp
mov
lock
ret
push
add
cmpsl
push
xor
out
mov
add
nop
inc
mov
ljmp
mov
repnz
jae
pop
or
push
push
pop
add
mov
stos
decb
add
mov
dec
add
jl
imul
add
das
add
sbb
out
add
add
cmp
in
mov
insl
mov
add
add
add
shrb
add
mov
sbbb
flds
lock
ret
sets
and
or
pop
xor
pop
loope
add
add
cmp
lret
gs
mov
test
xor
hlt
mov
fisubrl
jecxz
in
aam
add
jb
push
add
add
xor
ss
add
cmpb
mov
aas
add
pop
loop
or
push
insl
add
push
push
mov
lock
ret
lock
mov
cwtl
decl
or
mov
cld
sub
jge
xchg
repnz
jae
stos
pop
and
mov
xchg
lret
mov
cmp
cltd
adc
add
cmp
stos
insl
pop
add
test
mov
xchg
jmp
incl
and
mov
cmpsl
cmpsb
pop
lock
inc
enter
pause
in
adc
add
popf
cltd
fcmovu
push
add
scas
repz
add
push
insb
add
stos
aam
jb
lcall
rorl
cmp
pop
inc
add
jmp
push
add
sahf
push
xor
stos
cmpsl
dec
push
mov
add
dec
mov
pushf
scas
push
outsb
add
sti
add
ss
or
mov
add
jnp
movb
ret
and
add
adc
push
push
add
and
add
inc
add
dec
sbb
repz
add
aaa
add
adc
lock
pop
add
sbb
add
cli
add
xchg
inc
add
add
mov
xchg
add
push
add
ret
lret
testl
xchg
jmp
or
mov
mov
push
ficoms
in
mov
sarl
pop
add
add
or
test
std
pusha
add
xchg
jo
push
add
add
in
xchg
clc
jae
psadbw
mov
cwtl
mov
add
fsubl
mov
and
add
sldt
inc
add
test
add
loopne
data16
add
mov
test
subl
dec
add
mov
add
das
ss
daa
jbe
lret
cmp
outsb
add
mov
add
adc
imul
into
cmp
aaa
mov
clc
jg
and
popa
adc
call
add
push
out
ss
mov
les
pop
add
fistpl
jns
mov
pop
add
aam
or
cmc
lcall
jge
sbb
shlb
add
add
add
push
xchg
xor
mov
shll
insb
add
repnz
add
lret
mov
push
jp
jns
adc
rcl
adc
sbb
push
add
add
dec
add
add
add
xorl
int3
cmp
or
adc
ss
add
decl
add
lcall
add
cmp
jge
stos
add
mov
int
clc
insl
std
jb
xchg
cmpsl
jns
push
xchg
jmp
push
and
mov
push
mov
sahf
push
aas
aas
fcoms
movl
lcall
inc
sub
xchg
jmp
mov
or
mov
lock
xchg
and
add
cmpl
add
aas
add
add
cmpl
aas
and
add
mov
rcrb
add
add
xchg
jmp
and
push
xchg
dec
and
dec
divb
add
out
fiaddl
mov
aad
xchg
push
add
mov
scas
test
imulb
or
clc
jae
push
cwtl
out
add
lcall
xor
add
aas
rcr
dec
int
and
add
mov
add
sbb
xlat
mov
stos
jg
fstpl
xor
outsb
and
mov
lock
ret
or
lock
or
add
dec
add
into
andb
add
es
mov
mov
add
push
add
insb
add
xchg
pcmpeqd
insb
add
add
inc
add
sti
add
clc
jae
mov
mov
out
and
loop
add
lds
adc
rorb
add
add
data16
dec
xchg
ja
push
xor
xchg
lds
insl
xlat
repnz
adc
add
arpl
adc
pop
add
add
add
dec
add
sahf
gs
add
imul
addb
and
add
add
inc
rep
repnz
jae
add
push
xor
sahf
pop
add
mov
jg
jne
out
mov
jae
and
mov
or
lcall
std
xchg
lcall
ljmp
add
loop
push
mov
lock
ret
notb
in
pushl
out
loop
add
ret
arpl
shlb
add
fistps
popa
repnz
jae
mov
or
stos
and
push
pop
add
sub
add
mov
sar
icebp
pusha
add
add
addl
mov
cwtl
mov
mov
push
mov
xchg
js
push
es
add
add
push
add
pop
jl
stos
insb
add
outsb
add
fidivs
add
inc
fcoml
fwait
push
inc
add
andb
orl
lock
out
lcall
inc
add
dec
cmp
test
loopne
xchg
or
sub
fwait
call
xchg
and
mov
mov
rcrl
ja
add
push
in
jmp
or
mov
lcall
xor
add
stos
add
mov
sbb
push
inc
add
inc
dec
add
push
add
add
dec
add
and
push
mov
jecxz
add
add
xchg
dec
add
xchg
addr16
jp
push
add
cmp
push
add
mov
xor
adc
add
in
lea
fs
or
push
sbb
imul
mov
loop
lret
sahf
sbb
arpl
mov
jmp
cmp
or
push
in
incl
and
add
add
pushl
lahf
add
pushl
lldt
add
repnz
jae
pop
add
sahf
and
add
pop
add
bound
sbb
pop
add
sub
mov
mov
add
jp
cli
in
insb
add
fisttpl
lret
and
add
add
mov
add
ret
cmp
mov
add
add
xchg
jmp
mov
push
lock
add
push
or
enter
add
scas
hlt
sti
inc
mov
iret
inc
add
add
neg
or
add
add
cmp
mov
add
xchg
ret
out
test
add
add
filds
andb
jae
add
mov
add
clc
sub
mov
mov
add
dec
add
mov
lds
orb
sahf
and
cmp
and
sub
test
call
add
sub
movsl
inc
inc
xchg
jmp
in
dec
mov
dec
cmp
lock
mov
sbb
push
add
add
xchg
jmp
pop
cwtl
lcall
mov
xor
add
sar
or
test
imul
cmp
add
lret
xlat
jge
jecxz
insb
add
in
mov
aaa
in
push
rol
cvtps2pd
adc
repz
testb
add
aas
pusha
add
jns
cld
jp
pop
add
dec
rcrb
inc
jne
cwtl
in
notl
sub
rorl
sub
inc
add
repnz
jae
mov
mov
mov
jns
add
add
popa
lods
dec
add
mov
add
call
xchg
mov
add
mov
aad
test
dec
add
cltd
sub
xchg
xchg
push
loope
imul
inc
jb
sub
ret
add
push
xchg
lock
push
icebp
lods
popf
fdivs
repz
fsubrl
lea
add
xchg
cld
jb
push
int3
icebp
bound
pop
cld
pop
mov
daa
clc
add
push
int
testb
add
int3
jae
insl
add
xor
push
lret
xor
add
data16
dec
add
or
jne
mov
in
movsl
adc
pop
add
scas
sbb
jnp
cltd
fldl
orl
add
outsl
add
rolb
dec
add
sub
je
sbb
add
push
add
or
iret
mov
mov
lock
ret
lcall
xchg
mov
iret
add
push
add
inc
int3
sbb
add
add
push
add
outsl
sbb
add
or
sub
pop
sub
sbb
push
add
add
pop
in
push
add
incl
fucom
mov
decb
pop
lock
add
jmp
mov
or
lcall
call
add
mov
inc
add
lfs
repnz
jae
mov
dec
mov
cwtl
out
sub
ret
movsb
scas
mov
sub
xor
add
stc
pop
xchg
jmp
mov
push
sahf
add
add
dec
sahf
jle
ret
pop
add
fwait
add
jmp
cmp
add
call
repz
mov
add
fdecstp
std
imul
add
lods
repnz
mov
test
jmp
cmp
data16
jb
inc
add
cld
dec
jbe
sbb
ljmp
das
push
push
add
out
cmpsl
pop
add
mov
cmc
inc
add
nop
mov
inc
ror
fucomip
cld
cli
xchg
pop
xor
and
dec
add
xchg
jmp
add
push
and
mov
mov
xchg
xlat
xor
mov
nop
fwait
mov
mov
push
sub
xor
add
add
jbe
dec
iret
xor
add
test
add
add
pusha
add
add
div
int3
mov
ds
inc
add
xchg
ret
or
mov
mov
sbb
jp
ret
ficomps
xchg
rclb
int
push
inc
push
repnz
jae
dec
or
lcall
mov
sub
ud0
xor
sbb
sub
in
ret
lret
dec
es
call
add
dec
add
xchg
nop
dec
sub
dec
out
lret
push
cwtl
add
out
add
add
sbb
and
popf
mov
out
jle
sbb
cmp
adc
xchg
jmp
push
or
and
push
pop
rcrb
aam
dec
add
pushf
mov
push
clc
jae
mov
xchg
cmovl
lcall
mov
arpl
and
add
popf
xchg
jae
mov
call
add
dec
push
and
jbe
pushf
jns
ja
ret
xchg
loopne
cmp
lods
add
add
sub
push
add
jmp
arpl
stos
addl
add
imul
repz
imul
repnz
repnz
jae
push
or
decl
cwtl
mov
movsl
xor
add
mov
testl
jmp
mov
mov
pop
push
inc
mov
xchg
iret
bound
adc
jmp
add
add
dec
add
add
xchg
push
add
jp
ja
mov
rolb
shll
mov
icebp
lock
popa
loope
mov
push
pop
push
add
add
add
pop
add
pandn
scas
pop
add
xchg
pop
repnz
xchg
ret
add
adc
dec
add
mov
orl
jae
pop
mov
lcall
mov
add
add
addr16
sub
data16
add
mov
xorb
add
inc
xchg
jmp
push
mov
add
xor
or
mov
jecxz
pop
xchg
jmp
push
push
push
pop
lcall
push
imul
clc
jae
lcall
or
jnp
bnd
add
dec
std
clc
sub
push
lods
scas
addr16
push
mov
subb
fstps
add
cmp
in
sahf
mov
and
mov
lds
add
gs
and
bound
lods
scas
mov
jge
xchg
jmp
cmp
mov
mov
cmpsl
push
sahf
cmp
add
aas
jmp
pop
add
arpl
stc
pusha
repnz
jae
stos
push
and
stos
cwtl
call
xchg
ljmp
or
dec
xor
xchg
dec
mov
add
dec
add
add
adc
add
repnz
jae
and
lcall
mov
add
cltd
sbb
in
lea
add
lldt
lods
adc
xchg
jmp
out
xchg
xor
cmp
and
push
add
push
add
xchg
repnz
jae
mov
add
push
push
pop
cmc
add
int3
add
add
add
add
add
hlt
add
testb
xor
xchg
push
add
sub
rol
add
add
jmp
add
jge
sbb
mov
add
dec
mov
scas
add
lea
mov
stc
push
repnz
jae
push
dec
xchg
cmpsl
call
cmpsl
addr16
jmp
pop
add
dec
ss
jl
cli
sub
mov
xchg
jmp
add
mov
dec
cmpsl
lock
mov
pop
jae
test
je
pop
mov
ljmp
icebp
out
cld
scas
mov
add
sahf
adc
add
sub
gs
dec
add
divl
loopne
pusha
add
lods
sub
jl
inc
add
add
ror
shrb
daa
stos
add
test
lahf
push
add
clc
addb
add
cmp
ret
insl
and
add
cmpsl
xor
add
in
arpl
cltd
xchg
out
ljmp
pushf
mov
push
add
or
repnz
jae
xor
cmpsl
mov
stos
add
out
jno
jne
add
add
dec
rcrb
xchg
repnz
jae
testb
cmpsl
pop
cwtl
mov
sahf
dec
pushf
es
repz
and
lret
lahf
or
mov
fmul
mov
sub
adc
mov
and
mov
movsb
rorl
std
rolb
and
dec
add
add
xor
inc
jmp
pop
jno
or
js
xchg
add
std
stos
sub
push
outsb
add
addr16
adc
add
add
add
testl
aaa
add
jo
insl
arpl
add
xchg
cmpsb
push
xchg
lods
push
mov
lock
ret
in
push
push
testb
gs
push
ja
xchg
pop
push
add
das
lret
add
pop
mov
mov
ret
out
imul
daa
les
and
add
rep
mov
stc
jne
xchg
jmp
and
and
add
int3
xor
push
add
incl
aaa
cmp
in
imul
sbb
icebp
stos
mov
or
repnz
jae
cmp
push
mov
mov
inc
cmp
xchg
jmp
mov
push
push
mov
es
add
and
negl
push
icebp
pop
add
add
in
cmp
push
add
or
add
add
pusha
add
inc
add
pop
add
cmp
int3
pop
add
inc
add
mov
mov
lock
ret
pop
add
in
push
mov
jbe
in
popf
out
arpl
mov
mov
fnstenv
lcall
mov
repnz
jae
push
mov
mov
mov
rcrb
add
addl
inc
mov
lods
popa
lret
adc
cmp
ret
loop
repnz
cmp
lea
mov
repnz
jae
mov
dec
push
out
stos
push
xor
and
ja
mov
cmp
push
add
in
nop
out
and
add
mov
cmp
dec
add
sub
add
je
sub
mov
mov
insl
sub
adc
add
out
push
add
lahf
xchg
scas
mov
cmp
mov
repnz
shrb
add
xchg
std
pop
adc
test
mov
ret
dec
repnz
iret
fiadds
cmp
jnp
and
jge
add
xlat
test
add
add
repz
mov
add
lods
repnz
jae
stos
dec
xchg
out
push
cmovle
push
sahf
mov
add
dec
add
fldl
loopne
rcrb
data16
jge
outsl
pop
clc
adc
cli
adc
mov
lock
mov
push
add
iret
cmp
mov
push
add
add
add
sub
lcall
outsb
add
fisubs
push
add
jmp
repz
mov
xchg
add
push
add
les
loopne
mov
inc
add
add
jle
sub
add
imul
mov
xchg
loopne
pop
std
add
xchg
jae
push
push
xchg
sahf
in
mov
and
add
cmpsl
call
pusha
test
push
clc
jae
cwtl
mov
mov
mov
adc
int3
xor
add
mov
push
out
cmc
pop
add
dec
add
xchg
add
in
add
ret
add
add
ret
add
sbb
sub
jge
inc
add
xchg
ret
call
dec
scas
or
outsb
add
cltd
adc
xchg
cmp
mov
xchg
test
loope
push
clc
jae
lock
mov
mov
aad
sub
repz
pop
push
add
jb
or
inc
out
sbbl
leave
inc
add
add
int3
add
and
add
inc
add
rcrb
inc
lea
repnz
jae
xchg
xchg
mov
push
dec
dec
push
add
orb
cmpsl
mov
add
rorl
mov
or
addr16
xchg
ss
add
or
insl
or
les
add
xor
cli
mov
add
frstor
stos
jl
jle
pop
inc
add
arpl
add
inc
subb
add
add
add
add
test
add
imul
fsubr
cmp
push
mov
sub
addr16
xchg
lods
jp
scas
jle
pop
inc
mov
repnz
jae
mov
out
cmp
cwtl
or
insb
add
int
sub
and
jge
sub
fldcw
enter
test
in
mov
xor
dec
add
cwtl
add
outsb
add
cmpsl
test
add
test
popf
mov
add
in
jp
pop
and
hlt
mov
mov
lret
out
jne
add
add
daa
stc
add
add
data16
xor
xchg
js
fisubl
add
mov
add
pop
sub
ljmp
lahf
call
mov
inc
add
xchg
ret
lcall
es
mull
mov
xor
add
mov
adc
mov
xchg
jmp
xchg
mov
jae
pop
cwtl
mov
xchg
dec
out
stos
mov
mov
mov
xor
jo
adc
aaa
iret
add
stc
cmpl
xchg
jmp
push
push
xor
mov
mov
add
add
add
cmp
lea
cli
sbb
add
lds
or
mov
jne
xchg
jmp
or
mov
testb
into
mov
push
add
pop
mov
mov
mov
cmp
xchg
inc
add
xor
outsl
in
stc
mov
xchg
jmp
notb
cmpsl
mov
sahf
xor
cli
or
xor
add
adc
add
and
add
or
lods
add
les
in
in
rcl
xchg
popf
movsl
add
add
or
add
jo
push
add
add
add
out
xchg
add
add
add
out
icebp
cmp
push
add
inc
add
mov
jle
mov
lea
inc
add
mov
repnz
jae
sahf
and
mov
call
mov
pop
add
add
pop
inc
lcall
add
add
call
loopne
movsl
lcall
cltd
add
push
add
into
xor
add
add
add
clc
jae
cwtl
rcpps
cmp
push
jle
inc
add
cs
sub
add
add
add
negb
pusha
add
and
add
push
add
sub
je
sbb
jge
sub
add
jg
ffree
pop
cmpsl
mov
ret
jl
aad
add
add
xchg
je
repnz
jae
sahf
mov
or
mov
mov
imul
outsb
add
cltd
dec
add
add
rolb
xchg
ret
push
jmp
in
and
add
jecxz
add
jge
test
adcl
add
js
or
add
out
adc
add
cmpsl
adc
add
jp
ffree
int
shl
add
add
cltd
add
add
popa
pop
sbb
mov
aam
add
sbb
add
push
mov
lock
ret
mov
xchg
mov
and
cwtl
movsl
pusha
add
filds
mov
sub
add
adc
add
add
daa
dec
add
jmp
mov
add
add
stos
xchg
push
mov
das
enter
or
test
test
add
repnz
jae
push
lcall
mov
xlat
jle
cmp
jb
push
add
call
das
add
in
pop
jecxz
mov
push
add
ficompl
mov
in
call
in
mov
add
xchg
ret
mov
lcall
add
call
mov
and
mov
mov
add
ss
add
jmp
int3
jo
add
add
ss
icebp
sub
lock
leave
fnstenv
add
add
test
aas
aas
mov
xor
add
mov
dec
mov
addr16
jnp
add
adc
out
add
add
add
cwtl
dec
cli
xchg
sub
loope
add
sub
add
xchg
ret
push
call
mov
or
mov
lods
and
add
push
add
add
mov
xor
add
add
jae
push
add
add
das
outsl
stc
mov
repnz
jae
pop
push
mov
push
lock
add
dec
test
incl
pushl
or
push
cmpsb
fcoms
jae
or
xchg
call
out
push
icebp
adc
or
xchg
mov
add
repz
inc
add
cmp
mov
imul
lea
nop
add
sbb
ja
loope
ss
add
push
xor
insb
add
add
mov
mov
pusha
add
add
sbb
or
shll
xchg
xchg
or
in
xchg
add
popf
pop
add
mov
mov
adc
lret
shrl
outsb
add
repnz
jae
add
and
or
and
add
mov
mov
add
leave
pop
add
add
lods
out
cmp
mov
jmp
add
mov
add
clc
jae
lcall
push
push
decl
and
add
add
rolb
jmp
add
mov
or
push
pop
add
add
aam
pop
xchg
icebp
cmp
subb
dec
add
ljmp
adc
mov
mov
mov
rclb
add
xchg
shlb
push
add
in
out
popa
push
fwait
add
mov
mov
mov
test
jmp
dec
mov
push
out
lcall
mov
sub
pop
add
les
test
xchg
jmp
push
pop
mov
mov
mov
cwtl
decl
push
add
add
add
js
inc
add
add
sbb
add
cmp
lea
xlat
add
imul
loop
iret
add
roll
fdivs
jle
push
inc
add
ja
or
fisubrl
dec
cmpsb
mov
pusha
add
add
jp
mov
pop
add
push
cld
lods
xor
add
movsl
add
test
add
add
sbb
sbb
test
outsl
push
adc
add
add
je
xor
add
mov
pop
add
add
mov
or
add
inc
add
stos
add
mov
add
push
mov
add
sbb
lcall
add
in
push
and
add
push
add
daa
aad
loopne
repnz
adc
add
add
bound
mov
or
insl
mov
or
push
add
icebp
mov
sbb
ds
jb
test
or
push
push
add
sbb
sub
or
push
dec
and
add
enter
lds
test
add
icebp
cmp
pop
jmp
insb
add
lcall
push
sub
aam
add
or
or
and
add
mov
sbb
fiadds
mov
add
je
decl
add
add
add
push
add
pop
add
cltd
int
add
addr16
add
addr16
lods
mov
test
inc
pop
add
add
daa
dec
add
add
add
and
jge
mov
push
mov
lock
ret
add
mov
movsb
mov
roll
or
ret
std
fs
fbstp
push
push
mov
lock
ret
out
cwtl
sahf
xor
cmp
stos
push
and
inc
add
add
add
xchg
js
lret
add
push
mov
xchg
in
and
add
xchg
mov
mov
lock
xchg
cmpsl
cmp
or
dec
add
mov
and
add
xchg
pop
repnz
jae
add
push
mov
push
mov
and
sti
sbb
jno
sarl
mov
add
imul
add
add
xchg
add
popf
jne
push
add
inc
add
and
repnz
xor
add
jp
out
ret
add
add
aam
insl
jae
add
mov
add
mov
shlb
shl
push
add
inc
imul
add
add
lret
enter
lock
push
popa
add
cltd
cltd
or
push
add
pop
add
mov
jo
pop
jle
push
add
flds
lods
popf
addr16
and
add
add
and
bound
clc
hlt
push
inc
add
add
imul
add
in
adc
add
lea
repnz
jae
mov
testb
dec
xchg
cwtl
pop
hlt
or
nop
push
or
or
sahf
add
jb
push
add
mov
add
or
jecxz
push
add
fcmove
into
int
pop
je
insl
std
cmp
and
pop
add
jge
xchg
xor
add
lea
loopne
mov
add
mov
repnz
jae
mov
and
cmp
xor
xor
aam
push
repnz
jae
or
add
cwtl
cmp
mov
mov
cli
fsubs
pop
repz
inc
add
xor
add
mov
and
add
add
out
add
xchg
add
leave
or
jmp
push
add
mov
mov
mov
addr16
in
inc
add
add
inc
jl
repnz
jae
lock
or
pop
out
dec
add
iret
add
fadds
adc
add
adc
loope
mov
add
sub
shll
adc
and
add
add
push
mov
add
mov
orl
or
bswap
pop
hlt
sub
pop
add
in
insb
add
add
mov
add
clc
jae
and
xcrypt-cbc
cmpsl
push
push
mulb
or
iret
add
cs
xor
add
outsb
add
jae
dec
rsm
dec
mov
and
and
data16
add
add
xlat
add
xor
add
xchg
addr16
add
imul
dec
inc
add
pop
add
pop
jbe
cwtl
out
xchg
stos
in
lods
pop
add
xchg
sahf
xor
jmp
icebp
mov
pop
add
jne
shlb
mov
mov
or
mov
add
cld
add
sub
shlb
jo
add
push
sbb
lock
add
inc
add
add
repnz
jae
push
mov
or
lea
mov
lods
bound
xchg
lcall
aam
cmp
ret
lcall
adc
add
pushf
add
stos
mov
sub
daa
ret
add
and
mov
sti
jle
out
adc
mov
jmp
xor
xchg
stos
mov
xor
or
push
add
push
cmp
jns
out
mov
pop
xor
dec
add
fstpt
add
sbb
sub
adcb
test
pop
in
push
mov
decl
lgs
add
mov
add
rolb
push
dec
add
orb
es
add
dec
add
xor
add
add
jae
lret
mov
add
roll
add
mov
add
jns
and
add
in
dec
and
jl
cmp
push
rolb
sub
pop
outsl
add
add
icebp
mov
scas
add
xor
cmp
push
js
jo
push
jecxz
std
hlt
mov
outsl
xor
add
inc
add
leave
xchg
and
add
add
add
vpunpckhdq
hlt
xor
add
clc
add
add
imul
add
in
jnp
add
or
push
jg
add
push
add
add
insl
cmp
mov
shll
add
lea
repnz
jae
mov
cmovl
or
fs
daa
or
cmp
mov
inc
repz
add
add
adc
or
test
mov
cmpsl
cld
add
in
data16
clc
adc
sbb
aad
add
adc
dec
adc
add
aam
mov
sbb
call
add
mov
decb
rcrb
or
cmp
in
shll
cmp
popa
ja
rcrb
add
adc
sbb
movsl
inc
mov
jmp
es
add
in
in
sbb
sbb
push
add
push
cld
test
xor
add
int
push
add
jnp
hlt
add
add
jge
add
shll
pop
xor
sub
test
jmp
sub
out
and
or
add
sti
and
jle
xor
add
xchg
mov
pushf
arpl
flds
xchg
push
hlt
ret
inc
mov
xchg
jmp
mov
cwtl
cwtl
mov
push
and
cmpsl
adc
add
in
add
mov
add
iret
mov
sub
mov
js
inc
add
call
lods
add
add
add
data16
add
bound
pop
std
add
sub
sti
add
addl
lcall
cmp
add
lret
cmpsb
jno
add
dec
add
idivb
scas
int3
cmp
add
add
jge
xchg
and
push
mov
lock
ret
or
in
and
push
add
and
add
lret
xor
add
clc
push
add
int3
mov
mov
popf
cmp
ret
hlt
das
add
pop
push
mov
lock
ret
and
mov
push
cmp
scas
repz
mov
repnz
jae
mov
xor
push
mov
add
dec
shll
push
mov
lock
ret
push
add
pop
or
xor
xchg
mov
sbb
dec
add
mov
pushf
scas
sahf
mov
add
daa
add
pop
data16
sti
test
or
mov
stos
adc
or
invlpg
and
orl
mov
lret
rcrb
scas
xor
xchg
clc
jae
mov
mov
xor
mov
sbb
sub
xchg
sub
add
daa
cmc
add
mov
add
pop
call
mov
add
add
imul
mov
jp
fbstp
inc
add
add
pop
add
inc
mov
mov
xchg
ret
mov
or
dec
add
pop
push
incl
jne
push
mov
lock
ret
cmp
mov
dec
stos
dec
mov
movsl
mov
mov
push
add
mov
cli
pushf
or
insl
adc
add
add
xchg
jmp
mov
dec
and
mov
push
and
add
add
or
adc
add
add
xchg
fmull
adc
add
xchg
add
mov
and
add
mov
add
sbb
add
shll
je
out
add
repnz
iret
adc
popf
jp
fsubs
mov
cmp
int
sbb
in
add
or
or
dec
add
add
push
nop
call
push
add
push
or
xchg
jmp
mov
push
sahf
and
dec
rcrl
jbe
out
and
hlt
testb
add
add
roll
xor
mov
pop
mov
add
je
adc
jne
add
fndisi(8087
or
stos
lret
jp
mov
loopne
sbb
cmpsb
cli
aam
mov
push
add
lea
adc
ja
add
in
cld
sbb
mov
repnz
pop
add
mov
clc
jae
push
push
push
push
or
movnti
xchg
loopne
push
add
sub
add
imul
add
dec
add
add
add
or
nop
sbb
add
add
sub
inc
xchg
mov
pusha
add
add
lahf
leave
popf
shrb
das
and
add
lods
cmp
add
repnz
jae
xor
mov
notb
lock
add
add
rolb
or
jmp
sbb
loopne
lock
int3
dec
add
mov
jb
inc
int
add
mov
mov
iret
fcmovnb
xor
inc
mov
in
xchg
jae
and
push
push
stos
call
add
outsb
add
add
push
ja
ss
add
inc
add
dec
add
loopne
dec
and
adc
add
and
xchg
fstp
push
nop
mov
add
ret
stc
push
push
mov
lock
ret
mov
lcall
add
add
sbb
push
repnz
jae
mov
sysenter
lcall
sbb
jns
nop
fisttpll
into
test
add
fcomps
testl
add
mov
add
sub
lock
ret
cwtl
or
pop
add
mov
lods
jae
add
jp
hlt
fs
inc
add
add
add
add
add
dec
add
xchg
xchg
mov
int
add
add
xchg
pop
push
add
in
add
add
push
jae
mov
popa
and
pushf
push
add
aam
fidivl
cmpb
add
outsb
add
jbe
movsb
pop
mov
or
shr
movsb
gs
movsb
mov
rcll
add
xchg
jae
add
add
aad
js
pop
add
add
adc
or
dec
push
and
add
outsb
add
and
cmp
cli
int
add
pop
add
fmulp
jle
cmp
sub
cmpsl
das
pop
add
inc
add
int3
add
and
add
sub
clc
jae
mov
xchg
in
or
lock
xlat
sub
fdivl
push
add
repnz
aas
add
fldl
int3
mov
push
mov
lock
ret
xchg
or
mov
stos
add
pusha
add
add
loopne
push
add
out
fwait
inc
add
mov
inc
add
add
push
add
add
stos
negl
cmp
push
clc
jae
pushl
arpl
and
cmpsl
pop
add
xor
mov
add
les
loop
dec
add
jg
repnz
jae
and
mov
je
dec
add
add
dec
add
inc
add
pop
add
push
add
push
testb
in
jmp
and
mov
lock
pop
add
xchg
ret
add
sbb
cmp
andl
add
add
in
lea
clc
pop
push
add
js
sbb
cltd
jl
pop
mov
cli
fmul
push
fwait
jg
cmp
stos
or
dec
add
inc
aaa
scas
add
cwtl
in
fldenv
mov
jb
insl
imul
add
rcrl
dec
mov
js
pop
pop
xor
add
or
sbb
dec
add
adc
shl
add
jnp
sbb
add
fwait
add
mov
add
scas
aam
stos
pop
pop
add
mov
dec
add
push
add
xor
cwtl
out
incl
pushl
mov
add
sbb
inc
add
dec
shlb
add
repnz
ss
add
add
add
xchg
mov
fcoms
fwait
test
arpl
scas
and
add
add
xchg
subb
outsb
add
add
addb
fists
roll
test
pop
push
jp
js
adc
add
adc
add
cmpb
add
add
cmovno
lock
ret
and
stos
mov
inc
lds
mov
aas
or
decl
push
mov
lock
ret
mov
add
add
mov
lock
ret
mov
mov
mov
mov
jae
xchg
add
jne
sbb
flds
mov
add
add
add
pop
add
ret
repnz
jae
or
or
push
and
push
xchg
insl
xchg
mov
xorl
jmp
fdivs
incb
mov
mov
loopne
add
add
or
or
push
in
cmp
loope
roll
ljmp
add
sbb
jle
push
ss
add
or
xor
or
sub
movsl
pusha
add
dec
add
sar
ja
fiaddl
add
into
in
add
cmp
lcall
stos
add
push
sbb
xchg
out
sub
xor
ret
incl
push
dec
xchg
dec
xchg
and
repnz
jae
mov
xchg
lcall
mov
add
mov
push
add
test
sahf
add
std
out
les
subl
mov
add
jb
mov
add
dec
outsb
add
in
add
dec
add
add
movsb
add
xchg
pusha
add
add
xchg
jne
test
jp
sbb
dec
add
cmp
add
add
int3
mov
stc
pop
push
mov
lock
ret
add
in
lock
xor
dec
add
stos
and
adc
add
subl
jo
outsb
add
add
roll
roll
jl
ja
add
push
mov
jne
or
clc
jae
call
cmp
mov
stos
mov
test
or
mov
pop
add
add
lds
lcall
out
sub
or
mov
pop
jmp
cmp
push
xor
dec
add
aam
add
dec
add
hlt
add
sub
xchg
mov
repnz
jae
mov
and
ja
add
mov
jg
inc
add
mov
cmp
sub
mov
sti
xchg
jmp
dec
lcall
notb
scas
push
add
pop
add
jmp
add
inc
add
roll
push
add
decb
mov
add
imul
add
popf
ss
xlat
movsl
pusha
add
add
lods
xchg
adc
mov
int3
add
add
sbb
add
dec
add
add
pop
idivl
aaa
xlat
add
xor
add
pop
inc
add
jae
mov
mov
mov
in
stos
cwtl
push
cmp
adcb
dec
cmp
clc
jae
mov
cmp
lock
xchg
mov
jns
mov
repnz
jae
cmpsl
lcall
insl
lret
add
fistpll
xchg
push
push
mov
lock
ret
mov
xchg
out
add
push
add
imul
repnz
jae
lock
stos
mov
stos
lcall
add
into
popl
sub
fisttps
add
data16
xchg
add
add
add
aad
arpl
mov
ja
std
mov
bound
and
add
mov
popf
sbb
inc
add
add
or
popa
dec
mov
cmpl
add
mov
mov
repnz
jae
lcall
mov
push
xchg
jno
flds
hlt
dec
add
lret
test
jle
lds
add
scas
mov
add
xchg
clc
jae
dec
mov
xchg
mov
or
fldt
daa
pop
add
icebp
mov
sub
and
add
and
add
add
or
add
xchg
jmp
pop
cmp
cmp
cmpsl
mov
sbb
mov
sahf
add
scas
enter
add
and
bound
cmp
xchg
or
sub
mov
add
adcl
cmp
mov
push
add
leave
add
mov
popf
cmpsl
push
ss
add
dec
add
lcall
rolb
cwtl
cltd
pop
add
mov
cld
out
xchg
add
adc
test
and
add
mov
sub
ret
je
sbb
ret
xchg
popa
add
jmp
stos
add
and
xchg
push
push
xor
mov
adc
add
nop
in
or
fstpl
aaa
push
add
or
adc
jp
push
add
jmp
xchg
fcompl
jo
adc
add
sbb
lea
dec
dec
add
mov
je
sbb
sub
mov
out
mov
pop
mov
pusha
add
and
ds
or
loopne
sub
add
test
add
push
add
punpckhbw
xchg
shl
clc
jae
push
or
mov
pop
mov
jle
popf
andl
xchg
vfrczps
add
outsb
add
mov
loopne
repz
add
mov
mov
mov
mov
mov
mov
add
pop
jmp
add
loope
push
xor
in
inc
add
popa
add
xlat
mov
jae
fisttpll
and
add
inc
push
clc
jae
out
cmpsl
lock
xor
xor
mov
loopne
jp
movsl
xchg
clc
jae
mov
xchg
and
dec
xchg
add
xchg
and
xor
add
fiaddl
test
cmp
cmp
inc
mov
repnz
jae
call
dec
mov
out
push
sub
fmulp
and
add
add
jge
add
push
add
arpl
push
add
ss
add
mov
xchg
jmp
lcall
lcall
xchg
jmp
mov
xchg
push
mov
aam
int
test
push
movsl
add
cmpb
sub
add
add
aam
add
pop
loopne
xchg
out
insb
add
add
jne
clc
addr16
inc
addr16
add
add
dec
add
push
jl
mov
push
gs
push
insb
add
add
add
mov
repnz
jae
stos
mov
out
call
and
add
movsl
add
xchg
dec
add
adc
add
cmp
add
mov
filds
dec
xchg
push
mov
lock
ret
mov
push
mov
add
add
call
jno
add
add
ljmp
add
push
pop
add
lret
add
sub
mov
clc
jae
push
mov
mov
push
lcall
inc
sub
xchg
jmp
mov
mov
push
add
std
ja
push
add
mov
pop
mov
mov
stos
in
jae
and
add
orb
mov
inc
add
xchg
ret
push
push
and
decl
loopne
lock
fs
dec
jae
xor
imul
sbb
mov
add
add
insb
add
jmp
jb
mov
add
pop
dec
push
lret
cmp
jnp
addl
roll
sub
xor
sbb
fcoml
jecxz
sbb
test
test
add
outsl
add
jo
repnz
dec
add
rcrb
cs
ret
xchg
jmp
lock
stos
mov
call
shrb
push
add
xorl
add
add
inc
inc
add
xchg
sub
mov
out
adc
or
add
add
jae
cmpsl
mov
mov
mov
mov
xor
add
inc
add
jle
cld
ja
sbb
loop
pop
jecxz
ja
mov
add
push
jae
test
rcrb
ljmp
sahf
sti
pop
add
cmp
addl
add
push
add
ficompl
add
sub
sub
fnsave
jmp
add
add
add
mov
dec
dec
push
lock
add
jmp
mov
xchg
call
lcall
sub
pushf
add
les
jns
out
xchg
in
mov
and
popa
push
add
fdivr
mov
cmp
adc
fldt
add
push
ss
adcb
add
jmp
test
xchg
cmc
loop
data16
gs
lret
xor
ds
push
add
lods
adc
add
add
mov
add
xchg
add
hlt
sbb
sarl
pop
push
add
dec
mov
lcall
mov
leave
je
insb
add
call
repnz
jae
or
out
lgs
mov
mov
add
mov
fmuls
or
repnz
mov
loopne
outsl
andl
push
clc
add
and
add
dec
add
in
outsl
dec
sbb
out
flds
inc
add
add
inc
mov
push
mov
lock
ret
jmp
lock
outsl
xchg
clc
sti
mov
repnz
jae
or
push
and
xor
dec
cwtl
add
xchg
add
add
jge
xlat
add
mov
xor
jecxz
add
or
inc
mov
repnz
jae
mov
and
xor
je
lods
cmp
add
or
adc
pop
or
enter
pop
add
nop
add
xchg
push
xchg
jmp
call
stos
mov
push
add
xor
dec
fnop
inc
add
aam
sbb
repz
add
cltd
add
arpl
mov
sahf
lea
xor
pushl
mov
pop
adc
pop
aam
add
sbb
out
in
lret
jne
hlt
loope
add
add
add
aas
in
xor
add
add
xor
add
incl
xchg
jmp
mov
push
mov
out
mulb
ljmp
int
add
add
cmp
lock
mov
pushf
mov
add
add
lock
add
stos
mov
inc
add
mov
sub
push
add
add
mov
push
mov
inc
leave
mov
add
notb
rolb
incl
pushl
sahf
cmp
aas
cli
inc
xchg
cltd
sub
mov
inc
add
push
add
add
int3
sub
or
mov
aaa
mov
sub
cmc
and
add
add
mov
fwait
outsb
add
add
add
mov
test
add
and
pop
add
ret
mov
add
inc
add
gs
mov
mov
adc
add
add
leave
mov
daa
mov
add
add
jmp
test
cld
pushf
data16
ja
xchg
add
sub
ljmp
add
add
mov
mov
repnz
rolb
popf
xor
repnz
sbb
mov
xchg
ret
xchg
psubsb
mov
add
mov
mov
adc
pop
add
add
add
pop
push
add
sar
shl
inc
loope
add
add
and
mov
lock
ret
add
cwtl
lcall
mov
push
sub
decl
jle
add
into
mov
add
leave
repnz
jae
add
stos
push
and
lock
sti
js
sub
jo
cmp
add
int
mov
push
xchg
jmp
xor
ret
out
cwtl
push
push
adc
add
add
add
add
and
add
test
ss
add
mov
inc
repnz
jae
xchg
call
push
cmpsl
cwtl
xor
pop
jl
cmp
pop
add
mov
add
push
add
ret
jecxz
fistpll
add
add
sub
stos
daa
sub
ja
pop
js
add
add
add
fldcw
add
cmpsb
adc
call
lock
pop
add
push
pop
jno
add
add
add
add
call
in
pop
add
add
cltd
push
add
xor
add
ljmp
add
in
add
add
pop
add
add
repz
dec
insl
jns
lret
add
fwait
popa
shl
mov
add
and
jle
mov
sti
add
add
add
and
add
scas
stos
scas
and
jmp
xchg
mov
xchg
jmp
push
mov
pop
or
mov
adc
add
add
cwtl
testl
or
dec
xchg
jmp
mov
or
testb
rcrb
add
add
add
mov
lock
ret
push
and
or
out
testl
add
cwtl
add
xchg
and
add
add
call
push
ret
lock
ret
xor
xchg
jmp
jmp
xchg
xchg
pop
mov
call
xchg
dec
into
add
add
in
mov
sahf
add
cltd
into
lods
insl
leave
and
jnp
add
adc
test
stos
add
call
mov
lock
ret
cwtl
or
mov
hlt
jmp
jecxz
cmp
sbb
data16
rorl
rorl
add
sub
sub
pop
lods
sbb
mov
add
sahf
sbb
xchg
adc
add
cli
mov
sti
je
bound
push
rcll
aam
sub
xor
cld
inc
add
movb
xchg
call
pop
cmpsl
pop
mov
imulb
repnz
jae
xor
cmpsl
cwtl
mov
decl
movq
dec
add
lds
testl
iret
test
in
fdivrs
add
adc
test
daa
cmc
add
shlb
pop
add
adc
add
xchg
sti
mov
add
inc
add
andl
mov
test
lcall
inc
push
repnz
jae
mov
mov
mov
out
push
push
lcall
mov
popl
in
inc
mov
push
mov
lock
ret
mov
lock
mov
fisubl
add
mov
add
pop
add
add
add
mov
xchg
dec
cmp
clc
jae
mov
or
xor
call
add
or
jmp
mov
mov
mov
incl
int3
inc
mov
add
imul
add
mov
mov
repnz
jae
pop
mov
pop
push
push
cmpsl
ljmp
inc
add
cmc
push
rolb
mov
add
inc
add
push
add
add
add
push
fldenv
cmp
cli
insb
add
cmpsb
add
aad
sbb
mov
nop
dec
pop
fiadds
push
out
jnp
add
insb
add
push
fdivs
insl
add
xchg
cmp
popf
fcmovne
lock
add
lock
orl
inc
add
xchg
ret
xor
lcall
xor
inc
sti
inc
jnp
xor
leave
xor
cwtl
push
add
xor
add
add
mov
add
rorl
stc
call
repnz
jae
call
lock
sti
bound
push
push
xor
sbb
cmp
jecxz
mov
sub
enter
adc
add
subl
fdivp
mov
cld
add
in
add
clc
jae
cmpsl
xchg
mov
push
xor
and
cli
imul
push
sbb
mov
ds
adc
add
stc
cmpl
xchg
jmp
out
push
dec
cwtl
mov
lgs
dec
cmc
rcrl
mov
sub
cwtl
and
add
xor
pop
add
xor
add
aam
test
add
mov
test
push
add
cmpsl
sub
test
int
les
add
sahf
add
mov
add
das
mov
dec
add
add
jb
mov
repnz
add
pop
add
or
lahf
xor
sub
push
add
mov
jmp
negb
or
mov
add
popa
push
jne
add
add
add
or
push
xor
add
in
gs
es
lock
loop
xchg
mov
repz
jae
or
cmp
mov
or
xor
jl
xor
push
add
add
pop
cmp
jae
mov
jae
add
clc
jae
dec
cmpsl
or
cwtl
push
mov
adcl
das
arpl
mov
push
mov
lock
ret
push
out
or
pop
add
xchg
jae
mov
mov
mov
lock
push
add
inc
add
mov
xor
repnz
jae
lcall
lock
js
ficompl
xor
add
ljmp
add
add
ret
push
add
sti
add
out
add
fsub
push
add
ljmp
xchg
clc
jae
mov
lcall
add
mov
add
push
sarl
les
add
add
jg
add
sbb
insb
add
fsubl
add
loop
add
repnz
jae
xchg
xor
push
xchg
xcrypt-ofb
cmpsl
stos
mov
inc
add
mov
or
clc
jae
mov
call
or
push
mov
and
add
add
lcall
rorl
or
add
mov
test
popf
rol
xor
add
xor
xchg
mov
xchg
or
sub
inc
add
data16
push
add
push
daa
loopne
cmp
and
imul
xor
add
les
pusha
add
mov
test
add
add
pop
add
jns
sti
cmp
pmuludq
jae
add
jle
mov
and
and
pop
nop
andl
and
clc
jae
decl
push
lgs
enter
add
in
and
sub
stc
mov
push
mov
lock
ret
mov
or
jl
icebp
call
add
arpl
jp
sub
or
add
dec
add
add
in
in
inc
add
in
add
and
mov
ret
nop
jp
ljmp
add
sbb
mov
pop
adc
sbb
sar
push
pop
add
and
mov
mov
sbb
sbb
clc
xlat
out
push
pop
add
pop
add
inc
add
repnz
jae
stos
pop
pop
cmpsl
xchg
mov
and
xor
dec
add
jmp
mov
add
push
mov
xchg
push
dec
add
pop
add
jecxz
inc
add
xchg
ret
xchg
mov
mov
pmaxsw
xor
adc
add
stos
sahf
clc
pusha
add
add
enter
jp
cmc
imul
mov
xchg
jmp
push
mov
lock
lgs
xchg
and
xchg
push
mov
enter
sub
cmpsl
les
pop
and
and
push
nop
jmp
stos
jle
xchg
inc
add
leave
pop
lahf
pop
add
repz
add
push
daa
mov
xchg
out
ret
add
stos
pop
pop
notb
scas
out
add
sbb
push
mov
lock
ret
mov
mov
in
es
add
pop
repz
ljmp
mov
mov
add
add
sub
fwait
lahf
stc
inc
push
mov
lock
ret
mov
mov
call
add
xchg
mov
add
add
mov
inc
add
add
addb
add
sbb
xchg
pop
add
clc
push
add
bound
pop
cmp
ljmp
and
lret
add
add
stc
inc
push
mov
lock
ret
mov
mov
mov
mov
nop
push
add
or
add
mov
inc
add
lret
int3
int3
int3
rolb
add
add
add
or
faddl
outsl
sub
adc
add
add
add
push
add
add
mov
add
cmpb
dec
lods
jne
arpl
cmpb
and
add
leave
add
add
cmc
push
add
mov
jne
movsb
lock
add
shrb
inc
mov
add
cmp
stos
je
rorl
mov
scas
shl
lods
push
add
sub
mov
sbb
sbb
sarb
hlt
imul
leave
add
add
insb
add
loope
gs
aad
aam
pop
xor
jl
mov
add
xchg
jecxz
mov
add
or
push
add
push
pop
push
inc
add
add
add
fcomps
enter
mov
cmp
les
sub
pop
add
or
or
gs
mov
daa
pop
add
fdivrl
out
push
add
js
lods
add
add
add
jle
jbe
adc
add
add
or
jae
push
sbbl
aas
lock
add
pop
mov
mov
cmp
into
shl
repz
icebp
jno
mov
mov
lret
add
and
add
add
cmp
scas
push
jg
mov
sbbl
mov
add
iret
lods
clc
gs
push
push
add
xchg
roll
stos
sub
mov
sub
add
popf
lahf
shl
add
jns
pop
and
add
jns
add
mov
add
add
stc
or
ljmp
add
cmpsl
and
add
sbb
sbb
jp
out
add
push
add
imul
push
add
xchg
incl
lods
cs
dec
inc
add
add
and
add
out
jns
jecxz
cmp
pop
add
add
aas
mov
add
insb
add
add
leave
pop
add
add
out
add
jge
add
cmp
push
add
iret
jl
pusha
add
xchg
icebp
movsl
mov
jae
pop
addb
push
mov
cmpsl
xor
xor
andl
decb
push
add
das
add
lahf
les
cmp
aad
mov
add
fildll
loope
aas
mov
call
out
add
lock
mov
add
fwait
add
add
sbb
rcrb
add
push
cmc
pop
add
test
cmp
mov
add
add
mov
add
loope
in
pop
xor
stc
loop
aaa
fadds
mov
inc
adc
mov
lock
mov
mov
cmp
jmp
lahf
fimuls
add
pop
mov
into
push
mov
outsl
pusha
add
es
push
fs
mov
stos
scas
stos
add
outsl
into
fcmovnu
shrb
push
add
xchg
add
mov
add
fwait
pop
add
adc
mov
add
add
shll
test
loope
and
add
outsb
add
jp
testb
das
pop
notl
imul
mov
adc
cmp
add
mov
xchg
jle
mov
xor
or
xlat
out
add
imul
add
inc
dec
add
jne
aad
cmpb
push
add
add
mov
in
adc
pop
test
mov
cmpsb
pop
add
in
jg
mov
fwait
xchg
or
dec
pop
add
add
shrl
fdivrl
add
add
mov
push
mov
push
push
lock
mov
fbstp
add
ret
in
add
orl
cmc
icebp
xchg
inc
mov
loope
push
adc
xchg
ljmp
clc
sub
test
and
add
mov
or
mov
into
xchg
hlt
ret
sbb
adc
add
add
popa
sub
sbb
add
xacquire
sbb
add
pop
add
add
movsl
sbb
push
add
cmp
mov
mov
aaa
mov
mov
adc
pop
add
adc
add
xchg
cmp
sub
add
xor
add
sub
lea
scas
pop
add
andl
add
out
ss
add
and
add
add
adcl
add
push
add
xor
xchg
lahf
ss
xor
out
addl
add
bound
cmpb
rorb
inc
jl
je
xchg
push
add
lea
adc
xchg
sbb
pop
add
or
add
insl
nop
pop
add
add
add
xor
daa
inc
add
sub
and
add
push
add
in
repz
add
bound
dec
add
add
shrl
pusha
add
mov
xchg
mov
mov
mov
aad
mov
insl
inc
add
inc
add
add
lret
cld
orl
test
jl
jb
jmp
cwtl
add
adc
add
repz
jne
add
sub
cli
in
popa
aas
es
mov
mov
and
cli
and
xor
lret
ret
push
roll
call
push
add
pop
pop
rorb
add
and
add
sbb
data16
push
add
add
add
add
add
xchg
add
movsb
push
xlat
add
lea
add
jo
add
add
fisubl
add
add
xlat
mov
cld
loopne
sbb
dec
add
add
call
or
add
mov
cmpsb
push
add
jno
clc
or
mov
mov
cmp
sti
add
out
cmp
lock
ret
add
push
mov
mov
push
pop
add
out
decl
js
sbb
xchg
xlat
iret
adc
in
and
add
mov
sub
add
mov
push
sub
jno
add
pop
push
add
daa
add
fucomip
out
or
dec
into
cmp
mov
sub
movsl
cmp
add
add
lret
push
stos
roll
movsb
sub
add
movb
sub
add
add
add
push
add
je
inc
mov
pop
add
bound
sbb
scas
adc
add
adc
add
add
test
mov
outsb
add
andl
insb
add
mov
mov
xlat
pop
add
inc
add
stos
sub
add
cwtl
jnp
out
and
jecxz
icebp
pop
pop
adc
add
mov
into
andl
test
inc
add
pusha
add
aad
add
std
fsubs
fcomp
inc
scas
ljmp
jae
adc
add
ret
add
add
xor
or
inc
add
push
dec
add
cwtl
mov
mov
inc
add
shrb
add
pop
and
pop
add
add
cltd
loope
add
arpl
xor
add
inc
add
cmp
loopne
dec
add
push
add
add
add
fldenv
xor
mov
fcoms
pop
pop
add
sahf
add
add
xor
add
add
or
rcrl
add
add
jp
and
add
add
int
mov
add
xor
push
add
add
in
mov
aas
popa
test
pop
aaa
in
add
mov
rcrl
shlb
test
sbb
xchg
mov
or
lods
leave
sub
add
lahf
add
pop
add
add
push
inc
add
jb
test
jmp
jle
bound
inc
dec
add
in
out
add
out
add
xchg
add
add
pop
add
add
test
mov
stos
add
addb
ss
add
pop
add
repnz
or
pushf
inc
add
add
add
dec
add
js
loop
scas
out
or
aad
daa
jns
mov
loop
pushf
pusha
add
ret
mov
push
add
iret
mov
out
pop
add
add
xchg
ret
mov
add
fcoms
addb
add
mov
add
test
jg
or
scas
xchg
mov
cmp
lcall
sub
in
mov
add
arpl
xchg
hlt
stos
add
sbb
pop
add
mov
add
push
push
fldl
ret
lcall
pop
add
mov
add
xlat
add
clc
mov
mov
or
loopne
add
mov
fs
pop
ffreep
push
add
pop
xor
add
sub
lea
add
into
lahf
mov
jno
repnz
add
or
pop
add
push
push
incb
add
xor
add
stos
data16
jl
pop
mov
fcomp
stc
repnz
sub
adc
add
in
add
adc
add
in
jno
jge
mov
add
dec
add
ss
add
incl
and
inc
mov
xchg
out
insl
vmwrite
ret
inc
pop
adc
mov
or
stos
cmpl
lcall
add
daa
addl
mov
mov
jmp
int3
mov
test
and
add
add
fwait
nop
outsl
out
xchg
inc
out
sbb
mov
pop
push
scas
dec
enter
add
js
dec
jle
test
jg
pushl
xlat
jb
dec
cmp
mov
repnz
sub
add
add
sarl
mov
and
add
cmpsl
add
sti
add
fiadds
xor
add
aas
subl
xorb
add
cmp
fstpl
add
lea
add
aaa
mov
enter
xchg
pop
cltd
aaa
lret
add
pop
xlat
cmc
dec
lret
mov
add
mov
ljmp
stc
add
push
xor
in
std
mov
add
imul
shl
dec
add
add
cmp
and
enter
leave
loopne
add
mov
mov
add
add
jno
data16
aam
add
push
jnp
add
add
add
ljmp
and
xchg
push
mov
dec
add
jg
xor
add
mov
mov
mov
jp
add
add
inc
inc
inc
add
mov
adc
add
add
pop
add
stc
and
add
filds
pop
fisubs
lret
or
daa
movsb
add
cmp
push
jg
add
dec
add
imull
add
add
xchg
jp
mov
mov
pop
mov
int3
fistpl
add
add
xor
add
imul
scas
dec
lea
icebp
mov
imul
sub
xor
insl
in
sbb
sub
aad
adc
add
pop
add
sahf
and
jle
imul
outsl
pop
or
mov
mov
or
scas
popa
cmp
push
add
ja
add
lcall
or
fsubp
incb
mov
add
or
jae
cmp
dec
dec
add
rcrl
rclb
mov
add
scas
add
add
xor
lock
movsb
cmc
push
add
push
add
add
sbb
sub
ret
incl
mov
into
cmp
sub
or
add
scas
sarb
jge
cmp
add
in
jne
shl
jg
sub
add
into
ja
add
stos
add
lods
lcall
jl
adc
lods
xchg
ret
jmp
mov
inc
add
inc
add
daa
push
add
out
add
mov
add
popa
sub
ret
add
andl
and
ret
cmp
test
push
add
xchg
and
test
push
add
imul
cmpsl
add
add
shrl
push
lods
iret
in
into
sbb
push
add
scas
fisubs
mov
ljmp
push
add
push
add
sub
add
mov
add
mov
add
jo
out
sub
sbb
mov
mov
dec
add
cmpsl
add
add
push
pop
add
adc
add
mov
cmpsb
into
lret
add
add
pusha
add
cld
add
sub
pop
aas
test
test
adcb
sbb
push
add
addl
xor
add
add
loopne
or
jo
jecxz
push
add
loop
hlt
pop
add
push
add
jne
arpl
add
add
pop
xchg
pop
add
dec
add
bound
sbbb
iret
pop
push
ljmp
add
push
add
in
sub
add
add
stos
mov
add
push
add
xor
push
add
add
mov
imul
data16
addr16
jno
rolb
xor
add
xchg
mov
add
subb
popa
add
dec
add
loopne
xchg
add
aam
and
adc
add
xor
jb
push
add
mov
clc
pop
mov
add
push
jp
mov
add
cmp
push
push
push
add
out
add
repz
rcl
inc
add
movsb
mov
add
outsl
xor
aaa
fldl
push
add
mov
pushf
sub
fstpt
mov
add
xchg
insl
call
mov
jnp
rcrb
data16
jb
mov
insl
cltd
push
add
pop
add
int
push
mov
cmp
jle
jns
ror
inc
aam
rolb
add
xlat
and
std
imul
repnz
lcall
and
add
add
dec
sahf
inc
popa
int
addb
add
lret
add
and
mov
or
push
add
inc
test
rorb
add
adc
add
add
mov
pop
sahf
nop
or
add
add
lahf
loope
add
cmp
push
xchg
rorl
sbb
add
add
stos
aaa
ret
pop
or
pop
jg
mov
sbb
inc
mov
mov
addr16
std
pop
jle
scas
jb
sbb
jg
or
in
int3
jb
mov
mov
lods
or
bound
mov
iret
aas
shlb
dec
add
add
or
add
leave
mov
test
xchg
xchg
movsb
xchg
add
dec
ret
sub
and
add
push
add
add
add
aas
rcrl
in
and
sub
add
add
sbb
andb
inc
jae
add
lahf
xchg
rcrb
add
test
sub
dec
add
rclb
adcb
sbb
arpl
roll
mov
add
std
add
add
and
add
inc
mov
add
mov
push
add
repz
test
mov
xor
add
push
or
or
add
xor
add
add
jg
lret
daa
iret
add
ltr
xchg
aas
insl
out
mov
add
aas
call
push
add
leave
add
js
jbe
adc
sbb
push
add
pop
add
mov
or
dec
mov
inc
add
test
movb
insb
add
jmp
leave
jae
xchg
iret
das
sub
mov
dec
add
add
mov
imul
xchg
mov
fdiv
xor
add
add
orb
add
stc
out
lret
sub
xchg
add
outsb
add
sub
jo
es
mov
loop
jbe
lahf
aam
outsl
dec
add
or
pop
imul
inc
add
lds
in
pop
jle
xlat
pop
mov
jg
testb
call
cmpsl
icebp
pop
add
sub
outsb
add
das
mulb
cmp
add
daa
outsl
add
mov
pop
cwtl
jae
sti
cmpsl
andl
add
das
daa
outsl
add
add
mov
and
add
inc
and
sahf
jmp
pop
fdivl
fisttpll
mov
add
inc
mov
movsl
hlt
xchg
fiaddl
jg
xor
add
inc
enter
xchg
leave
push
jle
loope
sbb
outsl
ret
rorl
ljmp
add
rolb
test
lock
add
incl
arpl
cld
jb
je
xor
sub
data16
popf
lock
data16
lret
data16
or
repnz
sbb
and
push
add
dec
add
pop
es
pop
add
jmp
dec
add
orl
xor
pop
add
jbe
cmpsb
push
push
int
pop
add
sub
outsb
add
movl
rcrb
outsb
add
mov
sbb
imul
add
ret
add
fsubl
jae
add
mov
sbb
scas
add
mov
add
pop
add
jp
ljmp
inc
add
js
shrl
cltd
bound
in
add
adc
add
and
js
addr16
add
aam
adc
add
mov
jmp
push
add
add
add
and
add
add
jnp
push
mov
mov
add
rolb
mov
data16
xchg
pusha
add
repz
iret
add
movsl
rclb
rolb
aaa
lldt
bound
sahf
test
je
add
add
fildll
adc
add
pop
add
leave
cmp
add
add
add
add
add
xlat
xor
add
add
adc
add
jbe
dec
outsl
test
fwait
add
pop
movb
or
scas
mov
loopne
xlat
addb
aas
sub
add
sub
xchg
mov
cmp
inc
add
movsl
mov
mov
pop
add
into
push
flds
les
add
inc
add
pop
add
inc
add
mov
add
inc
arpl
add
inc
xchg
jmp
hlt
aaa
sbb
cli
cmpsl
xor
add
inc
xchg
mov
add
cmp
cmp
nop
daa
mov
cmp
aad
jecxz
sti
sub
add
and
push
shlb
jmp
and
bound
push
mov
popf
fimuls
test
or
mov
add
add
inc
ja
movsb
lret
add
add
and
add
rorl
mov
out
lea
add
add
aaa
loopne
cli
xchg
mov
dec
add
sub
mov
add
stc
sub
imul
add
jge
inc
dec
add
scas
add
and
mov
push
mov
cld
mov
adc
add
push
push
add
push
add
jbe
ja
push
pushf
and
add
xchg
add
cmp
or
fildll
movsb
mov
cmp
inc
add
dec
dec
add
out
add
cmp
in
rorb
xor
add
add
adc
add
imul
out
push
or
add
add
mov
add
icebp
add
inc
add
or
jno
fnsave
add
push
lods
add
imul
add
add
dec
add
mov
jp
push
add
lcall
fcoml
adc
stos
sbb
out
dec
add
jbe
jae
add
dec
add
cmp
push
add
or
pop
add
pop
add
push
add
inc
add
and
movl
arpl
mov
in
xor
js
mov
and
add
jb
dec
setge
add
shl
add
testb
fcmovnu
inc
rol
inc
add
out
add
add
sub
loop
cmc
gs
cmp
xchg
mov
cmpsb
or
or
cmp
fdivl
jns
pop
add
add
nop
out
cltd
int3
xor
add
incl
scas
xchg
add
xchg
movsb
push
add
shrb
testb
out
jle
push
push
add
or
or
pop
or
inc
add
add
rolb
add
mov
int3
aam
add
cld
add
jle
inc
pop
arpl
pushf
mov
add
mov
add
aad
xor
sbb
out
aaa
in
ja
push
cs
loop
lahf
pusha
add
pop
add
sbb
xor
add
add
add
mov
int
or
pop
loope
fcmovnu
in
dec
add
push
pop
add
les
shl
orl
dec
add
std
add
mov
add
popf
je
add
add
sub
pop
xchg
add
add
stos
rorl
sbb
sahf
aam
gs
add
add
sub
add
ret
sbbl
add
test
cld
inc
rclb
aaa
sub
add
sbb
loop
xlat
je
jl
les
sub
xor
add
add
or
add
pop
add
imul
dec
adc
add
out
dec
insl
add
in
sbb
call
mov
and
inc
adc
add
jle
push
enter
add
and
pop
lods
add
cld
mov
add
popf
loop
lret
movb
jne
add
push
add
pop
sbbl
test
stos
pop
popf
addr16
add
and
add
add
xchg
sub
jnp
adc
test
in
mov
pusha
add
dec
add
mov
rcr
sbb
aam
inc
add
pusha
add
dec
or
cld
rcrb
mov
xor
fisttps
in
fdivl
jp
je
pop
mov
cmpb
rorb
jecxz
and
out
iret
dec
lahf
push
add
loop
in
lods
add
popa
lods
ret
add
in
xor
add
add
add
xchg
cwtl
lds
fwait
ficoms
fildl
or
push
nop
add
filds
add
mov
or
sbb
add
add
in
movb
fdivrs
add
sti
mov
add
add
add
mov
pop
add
pusha
add
stos
sub
sarl
push
add
fistpl
add
inc
xchg
or
cmpsb
mov
aas
or
sbb
or
adc
add
cmp
lcall
mulb
enter
add
lds
stos
movsb
jp
sbb
jge
sahf
cmp
ror
add
mov
in
add
dec
fwait
pop
add
andl
add
xor
add
xlat
out
pusha
add
add
inc
add
out
xchg
add
cli
ja
das
inc
adc
stc
cmp
add
test
cmp
lds
add
and
or
inc
xchg
dec
add
xchg
jecxz
or
add
sahf
jp
xlat
loopne
add
test
and
add
pop
add
aad
jne
mov
outsb
add
cmp
sahf
hlt
scas
jle
adc
add
sbb
inc
pop
std
dec
add
je
xor
dec
push
push
jno
jl
sbb
out
sbb
jecxz
cmpl
mov
leave
add
dec
iret
mov
add
add
filds
ret
or
cmp
pop
add
mov
mov
add
add
add
in
sarl
pushf
jae
and
inc
call
add
add
sbb
outsl
mul
sub
add
out
mov
test
add
xchg
mov
scas
pop
imul
add
cmpl
sti
cmpsb
push
sbb
jg
adc
inc
add
cwtl
and
data16
add
lret
aad
in
dec
test
data16
and
xchg
add
pop
enter
add
out
call
push
or
pop
cld
cltd
pop
add
add
or
add
sbb
fcompl
xlat
or
clc
fadd
lcall
push
add
push
add
add
sub
bound
scas
add
jecxz
lret
mov
inc
add
loop
ret
mov
loope
or
add
iret
mov
add
push
sbb
xchg
dec
add
adc
mov
test
shrb
ret
shl
shr
mov
movl
add
pop
add
cmp
cwtl
xor
add
aaa
add
cmp
mov
popa
add
rol
push
add
test
gs
lahf
mov
mov
jo
clc
mov
fstpl
add
dec
add
insb
add
dec
add
and
add
mov
dec
add
push
outsl
cltd
cltd
sbb
idiv
jge
scas
add
add
xor
fwait
add
cwtl
add
cltd
das
cmpsb
mov
mov
inc
mov
pop
jge
add
add
in
add
aam
roll
or
xchg
cmp
rclb
adcb
out
inc
push
adc
add
xchg
add
int3
loop
add
imul
add
pop
shlb
add
repnz
add
jno
add
int
in
add
lock
inc
add
out
int3
test
lds
in
add
frstor
dec
add
push
add
cmp
cmp
lret
mov
iret
xor
xor
add
jp
and
ljmp
mov
and
sbb
add
and
out
mov
sub
ljmp
nop
mov
push
mov
testb
sub
cmp
clc
sbb
jg
in
orb
add
mov
mov
mov
inc
add
xor
xor
add
xchg
add
xor
add
aam
notl
push
add
divps
sbb
popa
into
outsb
add
cltd
lods
enter
mov
incl
setno
rorb
out
adc
add
out
add
fsubl
xchg
mov
add
fsubrs
mov
das
int3
jnp
dec
test
fnsave
adc
cmpsl
add
into
inc
add
imul
daa
add
add
cmc
dec
sbb
frstor
mov
nop
call
test
and
dec
aam
addb
jae
pop
add
add
jmp
aas
and
test
adc
arpl
mov
push
add
add
aas
or
sub
push
add
add
cwtl
mov
sbb
sub
dec
add
push
inc
add
arpl
dec
add
inc
add
pop
add
add
sbb
push
add
hlt
add
mov
dec
out
sub
push
pop
add
cmp
mov
mov
sbb
in
mov
pushf
sbb
push
add
or
xchg
bound
dec
cmc
std
xlat
jae
add
pushf
cmpb
cmp
cmpl
lods
add
mov
out
sub
jmp
std
add
add
jmp
cmp
test
add
loopne
dec
add
mov
add
add
add
add
mov
and
fsubl
scas
and
lods
sub
pop
adc
xchg
or
imul
sarb
add
shll
mov
dec
and
add
push
add
ffreep
pop
add
add
adc
add
inc
add
fdivr
sub
stos
xchg
iret
icebp
sub
icebp
push
add
sbb
bound
loop
xor
dec
fcoms
xor
dec
icebp
adc
mov
mov
add
dec
jne
test
add
cltd
xchg
lcall
sbb
xorb
sbb
add
inc
outsb
add
addl
xor
add
mov
add
pushf
jne
add
rolb
pop
add
adc
add
adc
add
pop
nop
enter
mov
loop
adc
mov
sub
rolb
jae
add
out
fmul
adc
dec
add
pop
mov
or
xchg
push
stc
das
js
and
add
mov
out
dec
add
cmpb
filds
or
out
jb
jo
ss
add
shr
mov
lahf
leave
sub
pop
add
adc
add
jae
test
es
repz
inc
cld
pop
add
push
add
lcall
cwtl
add
add
push
stos
xor
add
fisubl
add
inc
sub
pop
add
ja
dec
add
jp
inc
add
inc
int
inc
add
add
inc
add
jne
lahf
add
add
out
adc
dec
daa
inc
add
cmpsl
loop
add
cli
add
add
mov
push
add
cmp
repnz
js
inc
sub
pop
add
in
lds
add
mov
in
cld
repz
inc
pop
or
imul
dec
push
pop
jo
mov
add
xor
hlt
sbb
sbbl
test
add
mov
lds
inc
add
add
add
cmpsb
pusha
add
push
pushf
nop
outsb
add
in
sbb
xchg
xchg
mov
add
add
add
and
push
add
inc
xor
add
add
sbbl
sbb
xlat
movsb
fdivs
les
out
jmp
xchg
stc
push
add
add
mov
popf
jmp
pop
add
scas
add
mov
jae
ljmp
test
test
sub
das
push
pop
add
jp
cltd
inc
add
dec
fistpll
push
add
in
stos
inc
fsts
stos
pop
add
or
dec
pushf
cwtl
mov
fadd
push
push
test
popf
ja
add
dec
add
add
nop
add
xchg
cmpsl
mov
bnd
add
fwait
push
cmpsl
adc
add
push
add
add
int3
dec
add
add
xchg
jae
cltd
jp
adc
add
lcall
mov
add
push
add
scas
js
jle
cld
inc
add
xchg
xor
lods
test
pop
add
pop
xor
add
fnsave
dec
add
dec
inc
xchg
ss
add
add
nop
xor
add
dec
add
pop
add
add
jle
xchg
ret
ss
cwtl
mov
pusha
add
mov
mov
add
adc
cld
fcompl
mov
out
dec
add
or
adc
add
sbb
push
push
stos
push
add
mov
clc
mov
and
add
add
imul
cld
push
and
cmp
sub
add
test
add
insb
add
adc
xchg
add
int
add
add
leave
add
mov
lcall
in
xor
aam
xchg
imul
add
push
add
inc
jo
and
add
add
dec
add
push
outsl
add
inc
add
mov
in
mov
add
mov
xor
add
add
mov
inc
fucomi
lret
mov
int3
jb
xor
sbb
push
add
add
pop
add
test
pusha
add
sbb
adc
add
daa
outsb
add
and
adc
inc
add
movsl
mov
fisubl
iret
or
dec
add
jns
mov
push
xchg
xchg
mov
loope
add
andl
push
rclb
add
mov
aad
and
add
xor
add
add
flds
push
add
or
jbe
push
sbb
pop
add
cmp
dec
xchg
mov
fiaddl
pop
gs
loope
popa
hlt
cwtl
dec
add
cld
sub
sti
add
add
pop
mov
mov
adc
xchg
loop
clc
xor
push
add
add
add
cwtl
shl
jbe
jp
cld
adc
inc
add
add
mov
pop
add
popl
add
add
inc
add
cli
sub
call
add
imull
movsb
mov
mov
push
setae
add
outsb
add
xorb
loop
mov
pop
add
aad
cmpsl
outsl
mov
jmp
test
add
imul
inc
add
cmp
cmpsb
aaa
out
pop
add
push
into
add
push
add
sbb
push
add
add
mov
out
fwait
and
add
pop
push
add
push
add
push
mov
cltd
add
lret
loopne
outsl
sub
mov
sub
jae
pop
std
add
jge
or
stos
inc
add
add
add
rcll
pop
mov
xor
ljmp
adc
pop
jecxz
sub
les
cmpsl
jno
dec
aam
add
add
insl
fcomps
icebp
orl
int
push
ja
aad
add
cmc
aad
push
add
pop
add
push
inc
sbb
mov
cmp
and
add
clc
add
in
enter
jb
add
adc
add
xchg
cmpsb
add
mov
fstpt
into
scas
andb
add
adc
lock
add
add
mov
inc
scas
lahf
sbb
xor
add
add
xor
mov
mov
add
mov
pop
mov
adc
sub
add
add
aad
push
add
or
xchg
out
enter
pushf
or
pop
movb
mov
add
add
lahf
int3
pop
jbe
mov
sub
jae
aaa
scas
add
add
add
add
xchg
push
add
inc
add
xor
xlat
inc
jg
clc
add
arpl
sti
rcll
add
fists
sbb
jle
or
sub
and
add
add
test
in
scas
dec
add
add
repz
lods
or
fidivs
adc
sahf
imul
jecxz
add
orb
pop
add
lock
xchg
fs
sub
mov
cld
xchg
pop
add
sub
fldcw
add
mov
icebp
aaa
ja
out
or
jle
insl
sbb
add
imulb
add
cli
or
and
mov
add
repz
add
xor
ljmp
add
pop
jb
add
add
add
sarl
lods
inc
or
inc
inc
add
add
push
add
dec
add
gs
sahf
addb
add
inc
add
or
xchg
mov
add
jle
insl
and
and
add
pop
and
add
add
mov
or
jecxz
add
pushf
mov
push
sub
in
xor
and
add
add
inc
add
add
add
xchg
xchg
movsb
int
add
mov
add
orl
mov
lahf
or
add
add
add
sub
cmc
cmp
mov
out
lret
mov
popf
cwtl
shlb
in
and
add
push
add
outsl
mov
outsl
add
cmpsb
add
xchg
enter
cltd
dec
add
aas
add
cmpsl
xchg
into
cli
dec
add
and
bound
mull
add
add
ret
add
outsl
orl
add
add
add
lds
imul
nop
mov
or
or
into
stc
lods
xchg
rorb
ljmp
cmc
or
inc
nop
loop
xchg
push
xchg
add
add
popf
hlt
fdivp
mov
gs
lret
add
adc
add
add
seta
or
add
add
adc
loope
nop
xor
add
movsl
daa
std
add
bound
test
and
add
push
add
add
add
into
jg
add
add
ret
dec
add
push
add
ljmp
push
xor
test
idivl
add
add
repnz
aad
inc
pushf
popf
std
das
addr16
add
or
pusha
add
push
adc
add
push
adcl
add
or
push
in
add
sarb
lea
add
test
add
add
sub
add
out
push
add
dec
add
test
addr16
add
jno
xor
sub
sbb
sahf
dec
mov
outsl
sub
add
inc
add
loope
fdivrl
mov
aaa
cmp
adc
add
iret
mov
test
out
mov
or
and
add
into
add
hlt
dec
add
add
or
or
jl
test
xor
cltd
mov
xchg
add
and
add
cltd
add
push
or
dec
add
xchg
mov
pop
xchg
xchg
lret
add
xchg
je
cwtl
push
add
jo
mov
pop
ret
add
aaa
add
push
push
add
mov
mov
add
aad
add
jbe
jl
subl
add
in
push
add
in
inc
mov
xchg
pop
rol
je
cmp
adc
add
and
add
cmp
add
es
add
iret
push
add
idiv
lcall
add
js
imul
mov
jns
inc
cltd
ret
and
mov
test
hlt
pushf
push
add
xor
mov
pop
mov
std
mov
push
add
push
add
xchg
sti
mov
xchg
in
mov
movb
add
jl
mov
rcll
insb
add
popf
add
jp
inc
aam
add
cwtl
ret
std
pop
popf
pushf
imul
add
push
add
push
mov
cmp
out
dec
dec
add
lahf
add
sahf
pop
shll
test
mov
jb
mov
xchg
insl
fsubrp
fdivr
xchg
ret
cmp
call
pop
add
add
shrl
push
add
push
add
push
and
add
and
add
xor
popa
shlb
mov
mov
add
sbbb
add
add
jmp
mov
outsb
add
les
add
push
add
aam
push
add
mov
add
pop
add
repnz
jl
pushf
pop
jbe
mov
add
xchg
loope
xchg
dec
mov
in
or
int
mov
call
mov
add
add
mov
pop
add
push
add
inc
mov
add
add
sbb
les
rcr
rolb
mov
clc
add
sbb
and
add
lods
outsb
add
sti
in
jl
arpl
add
inc
add
pop
imul
cmp
jge
mov
lret
mov
add
imul
add
push
add
add
pop
add
scas
clc
jns
mov
bound
lods
sti
push
incb
mov
incb
adc
test
mov
andl
add
ss
jg
mov
ja
xchg
push
lea
add
pop
add
mov
add
pop
mov
mov
xor
cmpl
lods
cmp
push
add
add
or
add
add
adc
lods
or
jl
js
data16
cld
incb
jne
inc
hlt
dec
loop
dec
add
insl
add
add
mov
fiaddl
push
add
fsts
jb
insl
out
add
jnp
repz
mov
add
pusha
add
mov
out
adc
add
gs
xchg
add
xchg
mov
test
dec
add
cmp
int3
pop
in
sarb
js
inc
add
pop
add
inc
add
pop
mov
lea
add
sub
fcoml
mov
fstpt
pushf
push
jle
insl
loope
jbe
jg
add
dec
mov
add
movl
std
aam
add
mov
test
push
je
movsl
shrb
rolb
mov
sets
cmp
push
sar
xor
clc
ljmp
add
sub
push
jle
inc
mov
test
add
adc
cs
mov
ret
add
dec
add
mov
push
xor
add
push
rcrb
aas
inc
gs
add
mov
cmpsl
jbe
ret
fsubr
mov
add
add
add
pop
leave
notl
sub
add
dec
add
add
ficompl
add
mov
push
out
fmuls
xor
js
pop
add
mov
push
xor
push
gs
add
lods
or
add
fistpl
sbb
jge
add
add
loopne
add
add
push
add
testl
xchg
add
xor
add
aaa
and
push
add
ret
scas
jecxz
sbb
jecxz
add
loopne
notb
ret
add
add
cwtl
int
orb
add
add
mov
dec
add
jno
and
add
leave
push
sti
mov
add
aad
jno
adc
add
inc
add
jmp
and
mov
icebp
data16
add
add
jle
aad
adc
add
dec
add
inc
inc
add
push
add
add
sub
jb
adc
xchg
adc
dec
add
push
add
add
lret
dec
idiv
cmp
sbbl
xchg
inc
add
xchg
add
inc
data16
sti
push
jmp
cmp
inc
xchg
leave
loope
add
mov
pop
mov
test
add
cmp
cmp
shll
stos
add
cld
and
add
lods
call
add
imul
add
add
test
dec
add
push
add
adc
lahf
test
leave
push
add
fnstenv
add
cmp
add
dec
add
repz
pusha
add
push
add
stc
add
inc
add
add
in
movsb
or
faddl
add
mov
sub
add
ljmp
insl
and
xchg
clc
pop
rolb
dec
insb
add
in
lahf
push
add
ja
sbb
mov
arpl
sub
pusha
add
add
or
addl
mov
aas
cmp
ret
insl
mov
cmp
mov
nop
fsub
dec
cwtl
and
add
add
fucomi
pop
add
xor
xchg
inc
add
mov
repnz
ftst
leave
popa
jno
jo
dec
add
add
icebp
add
pop
add
add
sbb
xlat
xor
add
jg
je
inc
jmp
fidivrl
add
imul
ret
mov
imul
cmc
adc
add
sbb
call
xor
add
jno
cmp
aas
inc
xorb
mov
add
sbb
rcrb
daa
pusha
add
cwtl
add
fiadds
addl
pushf
cld
ret
add
testb
mov
pushf
dec
add
push
add
add
cltd
adcb
sar
aas
add
xor
and
or
addr16
add
xchg
add
add
add
add
fnsetpm(287
fdivrs
add
sbb
stc
add
add
sbb
repz
add
add
inc
xchg
pop
sub
jnp
pop
add
and
add
sti
push
std
add
pop
add
cltd
ljmp
add
add
jo
movsl
mov
shll
faddl
add
add
add
add
add
add
mov
sub
data16
mov
add
or
stc
jo
cmp
fdivr
jno
jo
adc
sbb
xchg
in
mov
add
jg
call
mov
pop
add
movsb
mov
frstor
xchg
mov
popa
mov
xor
add
std
add
mov
negl
add
pusha
add
mov
aas
add
add
adc
add
fistps
add
add
fistl
fiadds
mov
jle
mov
cmp
xchg
cmp
mov
or
jb
fidivrs
jge
add
add
xchg
mov
add
add
and
add
inc
add
or
mov
sbb
das
or
dec
jae
add
lret
clc
pushf
jmp
mov
jns
add
outsb
add
add
pop
add
add
mov
lahf
in
insl
pushf
sbb
add
and
add
or
int3
cmp
xor
add
mov
xor
dec
test
add
add
sub
or
pop
sub
mov
push
add
add
iret
xor
add
sub
add
es
fcomp
inc
add
add
add
das
xchg
lods
inc
add
sahf
popf
jmp
cmp
cld
and
sub
add
negl
cmp
mov
lock
mov
add
or
in
movsl
cvttps2pi
subl
sti
leave
lock
inc
add
loopne
mov
movsb
add
dec
add
and
leave
pop
add
dec
cmp
into
enter
pop
jnp
xchg
xchg
mov
add
add
add
iret
mov
add
xor
add
shrb
add
cmp
loopne
das
pop
add
cmpsl
pop
jge
aas
cwtl
testl
add
add
adc
add
aad
pushf
in
test
mov
ds
pop
jb
jbe
mov
add
inc
add
push
add
inc
loop
aam
rcl
add
cld
add
jne
push
add
popf
ja
dec
or
rclb
and
shll
outsl
js
aas
adc
incl
jmp
xor
cmp
push
pop
add
les
jge
sbb
sub
cmp
push
sub
jmp
add
cmp
imul
or
daa
out
add
add
add
andl
arpl
cwtl
call
adc
add
sbb
xchg
int3
into
push
add
repz
into
mov
xor
add
stos
add
add
movsb
add
cmp
nop
das
and
stc
test
mov
sub
xchg
flds
adc
add
xor
add
stc
pusha
add
push
add
add
add
add
sbb
jb
sti
adc
push
add
mov
iret
decb
push
add
add
sbb
and
mov
add
daa
push
add
add
jb
lret
add
add
pop
mov
push
jnp
subb
lret
daa
movb
push
add
adc
sub
push
add
data16
add
add
add
add
push
cmp
sbb
jge
adc
xchg
popf
ret
add
add
in
test
add
add
sub
divb
mov
cld
add
adc
fiadds
test
sbb
jmp
cmpsb
and
add
push
add
jo
mov
add
pop
add
lcall
notl
mov
add
dec
add
add
data16
inc
add
add
add
aam
jne
add
mov
cmc
cli
add
cltd
xor
add
sbb
or
add
aaa
dec
add
add
add
add
fwait
xchg
mov
add
or
aas
mov
mov
adc
mov
add
mov
clc
add
stc
add
jle
add
fimuls
pop
add
push
add
faddl
das
add
xor
stos
sarl
or
add
test
std
cli
aad
sub
cmp
add
add
sbb
push
add
nop
hlt
into
fists
jno
jae
into
dec
loopne
pop
cmp
dec
rolb
fwait
jne
add
add
add
dec
cmp
add
inc
add
fcomi
and
add
adc
add
add
xchg
daa
jnp
inc
add
add
and
jns
add
add
add
add
push
cmpsb
test
std
in
faddl
stos
fldenv
in
add
mov
add
in
leave
xor
mov
mov
cltd
push
add
in
xor
add
incl
int3
lret
fisubrl
je
xor
in
movsb
repz
pop
xor
lods
jne
add
add
sbb
xorl
add
xchg
add
sub
dec
xor
push
add
jp
nop
fiadds
add
xchg
or
adc
add
ljmp
inc
pop
or
lock
or
inc
cmc
pop
add
inc
add
mov
mov
pop
xor
xor
dec
iret
les
jb
mov
inc
add
popf
add
gs
cmpl
add
outsb
add
out
xor
add
xchg
lods
jne
adc
pop
in
lcall
add
mov
add
jne
add
lret
push
add
add
jbe
leave
stos
in
add
imul
cwtl
xchg
sub
cmpsb
add
xchg
add
fbld
add
in
lea
jbe
into
mov
xchg
cmpb
ret
sbb
outsl
add
cwtl
cld
in
fsts
inc
add
jne
pop
lret
repz
add
ja
out
add
jmp
push
add
push
add
mov
add
jo
dec
jg
das
add
or
xor
inc
add
add
jo
mov
add
inc
add
xchg
icebp
cli
inc
jle
lds
add
lods
pop
ret
inc
add
add
into
movsl
add
add
pushf
add
mov
add
add
stos
jnp
les
add
fiaddl
dec
add
xor
cmc
mov
add
add
add
add
call
jp
arpl
push
pop
jl
cmpsl
inc
add
jnp
add
or
jns
out
in
dec
add
and
cmc
push
in
push
add
add
fistps
lds
cld
mov
pop
dec
lcall
add
mov
and
shlb
add
add
pusha
add
rolb
jle
push
andl
add
push
add
add
pop
flds
sub
les
sbb
loopne
mov
mov
loopne
push
dec
add
adc
add
nop
pusha
add
jle
sbb
cmpsl
mov
shll
in
dec
add
add
push
pop
dec
test
call
pop
sub
andl
pop
push
add
sub
add
mov
add
add
push
add
push
add
add
add
scas
cli
les
out
add
out
cwtl
or
mov
mov
pop
add
in
mov
ret
ret
pop
jge
out
loope
add
icebp
add
es
mov
sbb
jg
pop
xchg
inc
add
push
add
imull
data16
xchg
cld
jne
loope
jp
mov
pop
xchg
mov
add
mov
outsb
add
xchg
leave
sub
mov
sahf
pop
adc
push
mov
add
mov
imul
add
bound
andl
inc
xor
add
hlt
call
add
faddl
mov
icebp
icebp
cmp
fucompp
inc
adc
add
std
pop
add
mov
add
inc
add
and
ret
add
pop
add
lret
add
add
adc
dec
add
call
add
add
xor
add
add
int
sub
add
lods
sub
and
jge
scas
pop
inc
add
cmp
add
mov
add
loopne
add
sarb
test
sbb
repnz
test
jge
add
pusha
add
xchg
pop
inc
pop
add
mov
sarl
les
or
inc
sbb
loop
es
add
shrl
dec
add
mov
add
aad
mov
add
or
fimull
mov
test
movsl
push
add
js
les
add
dec
add
add
inc
add
or
push
repnz
pop
add
and
add
aas
lret
cmpsl
mov
cs
mov
mov
mov
add
or
rcl
push
cltd
loopne
insb
add
lahf
leave
in
jmp
aas
jp
outsb
add
xchg
popf
pushf
mov
sub
sbb
mov
jge
sub
add
scas
out
imul
ljmp
add
sbb
add
xor
add
xchg
add
repz
inc
mov
cmpsb
add
add
add
inc
mov
adc
cwtl
nop
dec
or
pop
add
inc
adcb
add
sbb
xchg
inc
cmp
daa
jmp
and
add
shrl
ja
aas
add
add
incb
lcall
gs
aaa
mov
add
jg
in
nop
or
jb
xchg
icebp
clc
fistpl
popl
fdiv
pushf
into
rcr
and
cmp
imul
dec
lock
inc
out
sbb
push
mov
mov
test
enter
add
stos
cwtl
rcl
mov
xchg
fidivrl
ret
and
add
push
add
jne
ffreep
mov
lahf
call
sub
adc
dec
adc
add
cmp
shrb
mov
mov
or
fadd
jb
jp
popa
inc
add
xchg
fdivrl
xor
add
loope
filds
nop
std
xor
add
mov
cmp
mov
outsb
add
jne
mov
add
xor
add
mov
lods
add
fwait
pop
mov
jg
push
or
add
ret
jmp
fidivrs
mov
bound
bound
test
jecxz
mov
jmp
lahf
push
mov
add
add
add
iret
int
mov
std
cmp
adc
cwtl
test
sbb
jp
out
cmp
fstl
call
faddl
xchg
or
aaa
xlat
add
lcall
push
les
jns
jl
das
out
and
add
xchg
mov
push
add
push
and
mov
add
add
sahf
add
lock
add
roll
std
pushf
movsb
hlt
and
cli
sbb
dec
sahf
push
xchg
fiaddl
rcr
out
pop
pop
negl
ret
fidivs
leave
or
cmp
xchg
shrb
orl
add
into
lcall
add
inc
jmp
cmpsl
ret
stc
inc
xchg
add
sahf
stc
mov
rclb
sub
in
sahf
repnz
mov
sbb
sar
sbb
gs
add
testb
add
cli
add
int
ror
push
insb
add
mov
inc
cmp
add
movsb
add
add
add
add
test
xchg
imul
mov
push
add
push
add
dec
add
int
add
in
repnz
xchg
popa
out
xchg
and
push
add
add
andb
mov
inc
les
jo
popf
and
outsb
add
and
ja
test
push
fadds
add
mov
les
add
addl
jns
test
add
mov
pop
loop
in
add
mov
lods
pop
add
add
lcall
add
sahf
aas
clc
hlt
dec
add
les
dec
test
lea
or
lods
loopne
in
mov
jne
add
pop
add
mov
jae
lods
cld
or
mov
es
ss
jle
pop
xchg
dec
cmp
pop
add
loopne
adc
rclb
add
inc
fimuls
pop
push
add
repnz
or
dec
adc
add
lods
add
lods
inc
aas
loopne
fcomps
hlt
sub
xor
mov
add
add
add
insl
add
mov
pusha
add
fsub
adc
add
pop
add
push
fildl
xor
add
data16
in
add
lret
add
shll
pop
add
add
sub
fidivs
int
sarl
test
popa
xor
jecxz
add
add
dec
add
std
in
lahf
icebp
js
lcall
data16
adc
add
pop
mov
movsl
out
add
mov
cmp
xchg
lods
mov
jnp
inc
add
ljmp
sbb
pop
mov
mov
stos
add
lret
adc
add
jg
xchg
pop
aas
push
add
mov
and
add
out
adc
lods
mov
es
mov
enter
pop
push
lret
jg
int
xor
ret
and
add
add
out
roll
jle
lods
dec
jecxz
ljmp
pop
push
add
xchg
xchg
lods
jbe
outsb
add
ucomiss
pushf
sbb
add
add
jns
fstpl
mov
push
jno
cmp
lcall
mov
add
dec
sub
mov
add
add
cmp
popa
ret
push
sbb
mov
add
xchg
das
push
add
mov
sub
gs
sbb
or
pop
add
adc
add
cwtl
mov
cmp
scas
sub
ja
xor
xchg
jmp
mov
add
roll
add
push
xchg
push
add
add
add
outsl
sbb
adc
in
mov
add
fistpl
add
push
add
or
pop
loopne
jp
orb
dec
add
cwtl
add
add
adcl
jns
xchg
jle
adc
add
add
shll
shlb
mov
out
pop
add
xchg
sub
jb
call
stc
fcomps
lcall
add
push
add
test
rcl
xchg
mov
stc
xchg
cmpb
js
xor
cmp
fwait
add
add
testl
sbbb
sub
jnp
add
test
cltd
dec
cmpb
mov
mov
add
add
add
add
fdivrp
das
inc
add
pusha
add
mov
test
add
add
ret
add
jge
je
call
stc
andl
es
je
out
or
lock
mov
out
xor
add
sbb
subl
popf
add
xchg
jno
ficompl
mov
scas
loop
test
je
stc
push
add
inc
add
cwtl
and
dec
add
cmpsl
xchg
mov
add
dec
cmp
mov
fcomps
out
xchg
mov
adc
add
orl
xchg
repz
mov
add
mov
and
rcrb
add
lcall
inc
jle
scas
xchg
mov
mov
lret
add
imul
sub
xor
add
cwtl
add
sahf
add
movsb
mov
push
adc
add
out
inc
in
mov
jne
adc
add
fisubs
add
add
dec
xchg
fstl
ror
lea
add
add
out
and
add
sarb
xor
add
push
add
add
adc
ja
sub
mov
xlat
sub
scas
mov
add
add
or
mov
flds
bound
loopne
leave
sub
mulb
or
xchg
lret
inc
lods
dec
lods
fimull
aaa
addb
xor
dec
add
and
add
jecxz
mov
ss
std
cmpsb
push
jge
andl
add
sahf
gs
jge
dec
add
xchg
pushf
add
add
add
add
add
call
pop
add
inc
add
adc
std
into
out
cmp
jp
inc
push
add
sbb
jge
sbb
subb
add
daa
jno
adc
inc
add
loope
mov
sbb
jns
add
lret
pop
or
std
jg
xor
add
popf
cmpsb
and
add
dec
add
mov
imul
cmp
data16
jmp
fs
dec
add
add
jl
pop
xchg
scas
mov
in
mov
fimull
adc
add
icebp
add
insb
add
add
push
mov
add
add
add
mov
mov
and
add
lahf
push
adc
add
inc
lock
sbb
push
cli
mov
cmpsb
es
popf
aam
aas
in
loopne
aam
jg
push
jmp
pop
add
cmc
imulb
mov
add
pop
mov
add
xor
add
movl
add
jecxz
add
add
pop
add
jnp
insb
add
adc
dec
mov
sti
mov
or
add
add
mov
cmp
jb
scas
pop
jnp
mov
out
pop
add
add
mov
rcrb
xchg
sbb
jo
cs
and
lock
add
push
test
add
mov
add
and
mov
adc
arpl
xchg
xor
add
jb
push
mov
cmp
dec
cmp
inc
mov
in
loop
leave
add
rol
cmc
gs
or
cmp
data16
test
jo
test
add
stos
sbb
outsb
add
mov
jb
pavgb
ss
add
dec
add
add
add
sbb
mov
in
sbbb
or
add
ja
das
push
cmp
stos
fistpll
add
push
add
testb
out
sub
data16
or
aas
jge
insb
add
add
lods
lods
mov
out
add
add
inc
mov
dec
add
mov
addl
add
cmp
adc
xchg
cmc
pusha
add
cli
fisubs
lds
pop
add
stos
adc
push
add
popl
cmp
jcxz
sbbb
iret
pusha
add
jge
add
add
add
mov
xor
add
jmp
fwait
xor
and
add
cltd
shll
out
data16
adc
scas
js
popf
je
jle
mov
push
add
mov
add
dec
scas
add
add
inc
test
mov
int3
scas
lea
movsb
in
ja
add
xchg
bound
std
mov
jmp
xorl
add
push
jae
jecxz
cmp
mov
jecxz
pusha
add
out
jmp
stc
jnp
mov
add
dec
add
xchg
mov
inc
add
xchg
add
inc
add
xchg
in
call
mov
sahf
add
sti
add
xor
out
adc
add
mov
mov
lds
movsb
or
pop
add
data16
add
push
pop
add
mov
outsb
add
pavgb
or
in
add
xchg
lds
insb
add
add
add
add
xor
add
add
add
cmp
mov
sub
cmc
and
mov
fwait
outsb
add
mov
fidivrl
add
mov
cmp
filds
pop
popa
add
js
xorb
sub
ror
out
mov
das
inc
mov
inc
add
sub
data16
adc
subb
lret
sbb
lea
mov
cmpsb
dec
add
xor
add
mov
adc
push
lds
dec
cli
push
in
add
add
inc
add
cmp
mov
insb
add
int3
add
mov
and
add
mov
lcall
icebp
xor
add
push
pop
add
fistpl
pop
push
add
sbb
les
add
stos
cmpsb
and
mov
dec
in
xchg
add
push
mov
nop
es
mov
mov
stc
push
xor
lahf
add
add
pop
adc
add
push
add
pop
push
add
insl
enter
mov
xchg
add
fisubl
popf
cmp
loopne
add
test
push
add
jl
xchg
lods
cmp
and
add
add
add
xor
add
or
scas
or
cmp
push
add
add
out
cmp
add
add
pop
add
add
jo
negl
in
or
jbe
pop
aas
mov
ficoml
jno
push
add
push
add
mov
fwait
sarl
cmp
jle
xor
add
pop
push
push
jne
mov
and
xor
or
mov
data16
in
pop
pusha
add
or
mov
aam
add
mov
pop
sub
daa
incl
xlat
hlt
fidivs
cmp
movsl
mov
push
add
pop
add
sub
sahf
rolb
add
cmp
test
stos
push
cwtl
add
inc
sbb
add
mov
sbb
pop
inc
push
add
adc
ror
xchg
mov
jb
push
add
clc
fiadds
inc
add
lret
call
and
cwtl
sub
or
fucomip
jb
mov
cli
push
dec
add
xor
mov
scas
andl
jnp
add
add
push
lret
add
add
roll
xchg
bnd
jbe
mov
lods
xchg
das
imul
daa
push
add
je
push
xor
add
push
add
outsb
add
sti
adc
xor
add
or
add
push
ljmp
fildl
dec
push
in
in
enter
add
fs
push
ja
add
mov
add
test
mov
aas
adc
add
adc
sub
add
hlt
lods
and
add
lcall
adc
add
add
orl
iret
or
or
mov
popl
add
lcall
push
add
js
test
add
mov
mov
add
cmc
add
hlt
inc
add
inc
add
lods
add
dec
add
adc
add
cmp
enter
pop
inc
add
xor
add
jmp
cli
cmpsl
ret
add
int
test
pop
roll
xchg
mov
ds
xor
add
fistps
add
add
lods
mov
add
push
mov
loop
cwtl
add
add
add
dec
add
cld
adc
add
push
add
add
ljmp
fiadds
push
cmp
int
fisttpl
adc
rorl
cmp
xchg
inc
mov
add
jae
sbb
ret
pop
add
xor
jmp
inc
imul
dec
add
cmp
push
mov
shll
add
pop
or
addb
roll
sbb
dec
add
cmp
enter
mov
int
cmp
push
aad
ret
add
out
add
cld
jnp
in
add
repz
xchg
fisubrs
add
lret
loop
add
adc
add
add
add
push
add
sarl
jno
and
pop
outsl
and
xchg
rclb
add
repnz
add
lock
fldenv
in
or
arpl
out
xor
add
add
mov
and
negb
add
js
les
loop
std
mov
pop
push
movsl
add
in
and
into
pop
roll
mov
inc
add
test
add
pop
jno
cmp
je
xor
xchg
jge
flds
pop
xor
call
add
inc
add
repz
icebp
data16
jge
loopne
add
popf
adc
and
movl
sub
mov
imul
add
mov
mov
cmp
cltd
jge
and
add
outsb
add
ss
add
add
js
sbb
pop
arpl
pop
add
lahf
xor
mov
add
push
add
inc
add
mov
cli
ja
add
nop
bnd
mov
pop
popa
jl
jnp
pop
add
pop
add
add
add
roll
add
lods
push
add
cmp
xchg
add
add
dec
add
add
xor
cmc
pop
dec
mov
gs
xor
push
cmp
mov
inc
jno
pop
bound
in
add
cmp
cmpsb
add
add
leave
inc
add
lret
mov
add
mov
js
hlt
ljmp
fistpll
mov
sbb
in
adc
insl
add
add
add
fbld
add
imul
add
test
aaa
in
add
mov
jle
test
add
add
rorl
leave
test
adc
andl
add
repz
xchg
lret
pop
add
in
into
lods
jno
addl
inc
mov
add
jle
mov
orb
popf
push
add
pop
add
push
mov
in
adc
add
dec
add
scas
and
add
imul
add
loopne
mov
dec
pop
scas
xchg
mov
sbb
into
outsb
add
ja
or
ret
mov
sarb
mov
ret
mov
scas
add
add
mov
fnstsw
mov
imul
call
call
xchg
roll
add
int
cwtl
pop
add
sub
xchg
adc
xchg
fwait
dec
add
adc
xor
add
imul
sbb
sub
ljmp
jg
xchg
aas
out
cmp
scas
cmp
pop
add
add
fdivr
mov
add
ret
jnp
mov
lea
add
scas
push
add
push
add
adc
add
lcall
mov
test
ljmp
imul
sub
lcall
ret
add
add
je
add
add
imul
ret
add
xchg
dec
mov
imul
add
loopne
pusha
add
fiadds
subb
mov
stos
dec
add
shrb
pop
xchg
jmp
add
add
adc
add
add
sub
call
out
fnstenv
cmc
add
mov
lds
jmp
into
arpl
jg
xor
mov
xchg
mov
out
ret
dec
add
mov
stos
repz
enter
stos
push
add
xchg
xor
add
dec
cmp
call
fldt
xor
add
mov
xor
aas
mov
mov
push
add
and
add
iret
mov
add
mov
dec
add
sub
lret
pop
sub
mov
push
cwtl
add
push
add
outsl
and
add
xchg
dec
in
cltd
incl
ret
es
add
cmp
pushf
es
add
test
adc
add
mov
add
out
stos
sbb
add
jle
outsb
add
lahf
or
push
pop
add
pop
jmp
stc
ftst
or
or
lock
push
add
insb
add
mov
and
jae
imul
cmpsl
sqrtps
add
push
in
cmp
jge
push
add
add
add
add
lret
pop
add
call
add
add
sbb
add
push
add
sti
mov
cmp
iret
movsb
xchg
fld
cmpsb
mov
out
jge
add
imul
push
push
add
inc
add
add
inc
add
push
add
es
sub
pop
fisubrs
cmp
cmp
cmpb
add
xlat
mov
xchg
sub
xchg
idivb
add
cld
pop
add
add
and
add
sub
sbb
or
jmp
lahf
jecxz
out
pop
add
adc
shl
add
dec
add
mov
mov
add
add
jecxz
xor
add
and
add
hlt
nop
mov
outsl
lock
arpl
add
das
mov
cwtl
in
jns
add
add
add
add
cmp
xor
add
push
add
inc
rclb
xlat
mov
add
xchg
xchg
mov
add
lds
testb
add
jne
mov
out
xor
add
data16
xchg
insl
mov
cmp
add
add
add
insl
or
xchg
add
adc
add
add
or
dec
or
stc
lods
adc
add
cmp
pop
mov
lock
faddl
repz
push
sbb
xchg
inc
add
fstpt
icebp
mov
scas
add
xor
and
xor
add
popf
aam
adc
mov
stc
cli
lods
dec
sahf
sub
dec
mov
outsb
add
add
mov
mov
pop
call
mov
jno
nop
or
lock
out
iret
out
outsl
push
data16
xchg
xor
sub
sub
addl
add
dec
add
cmp
adc
add
in
xlat
push
mov
sub
mov
movl
sbb
shlb
add
pushf
add
pop
pop
add
ffree
sbb
adc
xchg
jmp
fpatan
inc
xchg
mov
add
je
jl
push
and
add
mov
scas
ror
fildll
push
fcos
aad
mov
pop
sbb
jnp
scas
and
aaa
push
add
add
filds
aaa
lret
inc
xchg
movsb
lahf
xchg
mov
pop
add
add
add
jp
sbbb
jbe
cmp
int
ss
add
lock
test
mov
add
int
add
mov
mov
out
outsb
add
mov
mov
add
add
pop
add
add
inc
js
cmp
outsb
add
add
fimull
lret
add
add
pop
add
push
cmp
int
mov
or
or
lea
mov
push
push
add
dec
mov
fwait
test
add
pop
add
inc
push
call
test
add
push
adc
add
roll
daa
sub
insl
mov
inc
fmuls
popf
sbb
clc
lock
add
fcoms
adc
repz
addr16
out
or
cwtl
sub
add
sub
sbb
mov
mov
xchg
scas
push
add
rcll
add
or
test
add
shll
or
xchg
enter
cwtl
iret
mov
in
dec
add
adc
mov
cmpsl
mov
scas
cwtl
adc
add
cld
add
push
add
jae
mov
mov
adc
xchg
add
add
xchg
clc
and
fsubs
in
lret
dec
les
sbb
add
cmp
in
add
repnz
add
out
mov
jo
and
xor
add
dec
mov
fs
loop
push
loope
add
push
add
scas
out
incb
lahf
imul
add
add
ret
cmp
add
and
add
add
test
in
mov
bound
xchg
push
add
fimull
mov
pop
add
ror
inc
add
mov
add
add
add
xchg
pusha
add
add
add
push
scas
in
and
add
int
aad
sub
or
add
add
sub
jne
xor
add
mov
add
add
mov
xor
add
pop
add
push
cmpsl
fs
sbbb
cli
add
jle
ljmp
fnsave
sub
fnstenv
iret
add
dec
add
in
ss
push
adc
xchg
jl
mov
add
cwtl
lods
jle
xor
add
push
mov
xchg
add
cmp
nop
psllw
dec
add
imull
nop
mov
cmp
mov
sub
add
add
hlt
xcrypt-ecb
cmpsl
or
into
add
dec
fwait
pop
add
rolb
and
add
loop
stos
repz
outsb
add
jg
stos
inc
loop
cltd
out
dec
adc
add
push
add
popa
add
mov
cmp
mov
pop
add
sub
mov
add
sub
add
push
add
sub
lahf
fbstp
or
mov
cmp
adc
add
cli
add
icebp
add
jecxz
enter
mov
push
int
mulb
add
jae
cs
insl
or
add
add
add
aad
add
pop
add
sub
push
add
add
lods
push
add
in
sbb
xor
js
lea
dec
add
add
push
add
mov
test
add
add
cld
inc
ss
add
and
add
data16
add
push
jae
pop
notb
fnstcw
add
jo
cltd
lea
mov
mov
je
xchg
push
add
push
add
cltd
pop
into
stos
movsl
mov
lret
or
bound
xor
pop
int
lods
jae
add
add
sbb
loopne
lret
inc
add
or
in
sub
call
scas
sub
fistl
lods
outsl
lds
and
shrb
add
mov
cmp
test
ret
test
arpl
insb
add
fildl
fisubrl
sbb
sub
jg
mov
push
add
iret
add
cmp
into
and
add
add
xchg
add
out
mov
xor
add
cmc
jmp
arpl
add
mov
add
stc
lods
shl
add
add
adc
ds
push
pop
add
out
xor
rorl
test
add
dec
mov
add
or
mov
fidivrl
imul
add
adcl
sti
add
add
push
add
pcmpeqd
data16
mov
pop
inc
add
xchg
test
pop
add
add
testb
pop
scas
lcall
orb
les
push
sbb
bt
sub
cmp
add
add
add
pop
add
mov
xor
add
dec
jle
js
test
inc
add
add
xchg
jb
xor
and
cmp
sarb
sub
jae
or
jne
and
jge
inc
fisubrl
add
mov
popf
decb
xchg
fistps
add
sub
shll
or
ljmp
fiadds
filds
pop
ljmp
and
xchg
add
out
add
xchg
sub
ret
xchg
mov
xchg
add
div
mov
loopne
hlt
add
add
test
add
enter
clc
add
pop
add
add
enter
xor
int
mov
mov
fldl
movsl
sub
add
sub
mov
jge
loopne
jmp
cli
pop
xchg
add
loope
lock
movsl
imul
sub
xchg
rclb
xor
add
or
adc
add
add
dec
dec
add
push
add
pop
add
add
push
ror
adc
add
cli
inc
out
aad
jp
incb
xchg
pop
jmp
stc
pop
add
popl
add
bound
popa
inc
test
jp
imul
add
add
sarb
aam
mov
shll
outsb
add
xchg
xor
popa
sub
scas
push
add
add
rcrb
call
bound
rorl
jmp
lahf
add
add
popf
add
call
test
cli
je
adc
out
adc
add
jp
fmull
add
dec
add
inc
ret
add
test
or
inc
push
in
push
les
dec
pop
add
sub
int3
inc
add
clc
add
dec
add
gs
push
push
add
stc
call
ret
mov
push
sub
test
add
add
mov
adc
add
adc
add
test
push
and
in
and
dec
add
pop
bound
aaa
ljmp
add
add
push
add
push
xor
rcrl
mov
add
jg
inc
add
cmp
sub
arpl
mov
pushf
mov
add
add
hlt
sti
lcall
repz
adc
add
loope
add
add
jnp
popa
mov
fs
jecxz
jno
inc
mov
add
add
ret
add
hlt
mov
push
xor
add
lahf
loope
add
daa
stos
add
dec
add
add
repz
sub
dec
add
pop
add
push
subl
xor
add
gs
lret
in
fsubrp
clc
sbb
add
jge
movsl
into
dec
add
xchg
mov
add
adc
add
jns
adc
and
push
mov
int3
mov
add
shl
test
inc
add
add
rol
fwait
xchg
mov
add
inc
add
mov
add
test
cltd
sahf
sub
int
pop
cwtl
add
sub
mov
push
xchg
add
adc
jne
mov
int
dec
pop
xor
add
mov
int
xor
jns
or
add
pop
add
add
xlat
loopne
cmpsb
sbb
and
pop
sub
cmpsl
push
aam
rorl
add
add
sbb
sub
add
mov
jecxz
shrl
add
xchg
jge
mov
add
fistps
call
add
xor
out
lcall
add
push
add
add
into
push
add
and
add
js
enter
popf
ficoml
out
arpl
sub
mov
add
mov
jg
add
adc
aas
mov
add
aad
in
add
add
cmp
fs
xor
add
jb
loopne
aas
inc
mov
jecxz
and
add
repnz
add
sbb
sbb
les
jnp
xchg
addr16
add
dec
sbb
xchg
roll
imul
std
lock
inc
push
lock
cmp
cmpsb
jp
cld
pop
add
mov
mov
js
icebp
movsb
movsl
nop
pop
add
mov
mov
cmp
add
xchg
sbb
out
ret
add
add
mov
cltd
mov
loop
hlt
hlt
pop
arpl
and
sbb
add
pop
popf
mov
mov
jecxz
add
fs
daa
jne
jg
loop
add
mov
add
in
add
jle
mov
sbb
or
cs
mov
dec
add
add
push
inc
scas
lret
ds
pushf
mov
cmc
and
add
mov
jne
cmp
jg
add
neg
in
add
mov
sar
and
mov
sub
roll
mov
test
add
shrb
test
xor
add
add
add
add
add
jg
ret
add
add
add
jo
orb
pop
fstpt
movsl
mov
xor
add
mov
add
loope
lods
mov
dec
add
add
arpl
clc
pushf
lahf
test
add
mov
shll
xchg
add
out
imull
add
add
xchg
test
leave
jmp
xchg
adc
add
idivl
movsb
pushf
xor
xchg
aad
sbb
in
dec
add
insb
add
add
and
add
push
pop
add
jle
je
ja
jecxz
mov
filds
gs
pop
add
push
push
add
add
hlt
lock
frstor
jmp
mov
fiadds
jnp
sbb
add
add
pop
add
xlat
imul
in
adc
cmpsb
adc
add
mov
aaa
cltd
add
mov
add
add
dec
add
out
add
iret
outsl
call
pop
add
jbe
loopne
add
mov
add
add
add
sbb
test
add
data16
jae
pop
jnp
bound
jno
jge
lods
mov
lahf
add
or
push
daa
dec
add
add
dec
add
fwait
js
jmp
inc
mov
add
addb
add
icebp
fnstsw
aaa
in
gs
aad
cmpsb
adc
add
cmpsl
add
test
cmc
popa
add
sub
sti
jo
bound
or
mov
add
aad
or
dec
add
in
hlt
add
lcall
cmp
shrb
mov
adc
add
dec
add
add
add
jge
out
out
add
roll
add
dec
add
stos
and
add
and
add
and
add
push
jmp
dec
add
mov
dec
push
add
inc
jmp
dec
add
cld
dec
add
js
xlat
and
add
int3
test
test
test
rorl
sbb
and
add
jbe
inc
mov
jb
ret
or
mov
push
add
fst
test
outsl
imul
add
iret
add
add
cmp
daa
dec
add
rol
add
daa
lea
dec
add
add
lds
addl
add
pop
add
add
lcall
add
add
ret
sbb
push
mov
push
sbb
pop
push
add
sbb
add
popf
bound
orl
add
daa
mov
es
ljmp
add
rcrb
add
add
add
mov
out
loopne
pop
add
sahf
loope
addr16
push
add
add
pop
xor
add
add
push
add
cmp
data16
or
sbb
pop
add
mov
dec
cmp
mov
add
stos
sbb
add
dec
pop
frstor
mov
dec
add
xor
add
in
add
test
xchg
insb
add
imul
andb
add
or
fistpll
and
add
add
outsl
push
insb
add
les
mov
outsb
add
inc
add
imul
add
cmp
dec
add
stc
roll
out
add
push
add
bound
stos
mov
inc
pop
add
pop
dec
add
test
push
scas
imul
inc
add
mov
mov
add
mov
add
out
add
pop
ljmp
mov
sbb
adc
mov
daa
add
stc
sahf
push
add
test
and
jle
stos
je
fildll
add
out
push
mov
add
push
add
add
xor
inc
add
pop
add
jg
pop
jbe
lahf
dec
add
xchg
jg
push
push
add
add
xlat
cmpsb
cmp
dec
jle
outsb
add
inc
mov
sahf
add
lods
push
add
incl
push
mov
in
fisubs
xor
inc
add
inc
add
add
or
jo
lods
adc
add
or
adc
clc
xor
lahf
jmp
mov
sbb
or
popa
sarl
popa
xor
push
add
xor
add
movsl
dec
xchg
sbb
add
dec
cli
jo
mov
sbb
and
mov
push
add
mov
add
cmp
test
or
add
inc
sti
sub
je
or
inc
add
sub
pushf
andb
cmp
lods
jmp
js
sti
rorb
lcall
aaa
mov
jge
pop
mov
push
add
add
pop
add
add
push
pop
lahf
add
add
or
cwtl
pushl
dec
add
inc
add
jae
push
inc
add
push
add
loop
add
add
dec
mov
add
jno
call
xor
add
cmp
sub
shrl
std
adc
add
lods
lods
add
xor
lods
add
cmpsb
add
sti
inc
insb
add
aaa
add
mov
aas
push
add
mov
in
in
int3
jmp
add
inc
add
jp
mov
rcl
mov
push
lcall
in
mov
add
xor
add
aas
jp
lret
daa
lea
int
add
add
add
leave
cld
insl
repz
add
dec
add
jae
add
xchg
sbb
dec
add
push
add
call
lcall
xchg
lret
pop
addr16
add
enter
add
pop
add
add
xor
in
inc
arpl
mov
mov
pop
add
rorl
mov
hlt
outsl
sti
mov
cmp
push
hlt
sbb
push
in
add
add
add
xchg
xchg
add
add
lock
mov
fucomip
ret
jecxz
repnz
int
mov
or
sysret
xor
or
out
jae
jns
dec
addr16
add
add
pop
add
adc
add
add
jae
add
shrb
xor
jle
push
rolb
fstpl
sbb
mov
lcall
gs
jmp
and
pop
scas
add
movq
xor
xor
idivl
bound
arpl
xor
pushf
inc
outsl
out
cmp
add
je
insb
add
push
add
mov
adc
add
mov
addb
aaa
xchg
add
enter
add
add
xchg
rol
dec
add
sbb
jecxz
roll
add
adc
call
add
inc
dec
sub
jbe
sub
jge
fcomp
hlt
out
insb
add
add
cmpb
or
xor
add
or
clc
mov
and
sub
and
or
mov
add
cwtl
add
pop
add
sbb
daa
jne
fisttps
in
add
add
add
rcrb
shll
add
add
icebp
fldl
add
in
testl
add
add
lds
add
pop
pusha
add
mov
pop
adc
add
push
in
cwtl
subb
push
lret
repz
loopne
pop
cwtl
pop
add
add
mov
add
sti
das
inc
add
mov
sbb
test
pop
xlat
in
dec
add
add
sbb
mov
jmp
test
add
dec
add
mull
mov
add
inc
ret
sbb
pop
add
ja
add
mov
in
lds
test
popa
ljmp
add
mov
push
cmp
pop
add
std
imul
add
jb
pop
lret
hlt
jg
roll
dec
addr16
in
cmp
add
cmc
out
fstpt
repz
add
add
movsl
add
aas
jno
jmp
add
add
xchg
add
add
and
adc
push
add
pop
stos
add
pop
lea
jb
or
add
inc
aaa
test
js
dec
add
push
add
cmp
in
sub
and
add
add
rcrl
inc
add
mov
dec
xchg
add
aam
add
add
push
sarb
add
repz
les
dec
adc
add
lds
fidivl
es
clc
leave
adc
add
adc
aad
mov
inc
repnz
fidivs
std
add
adc
out
inc
add
add
sbb
add
ss
add
int
ja
cmp
lods
and
add
jmp
add
xor
add
aaa
mov
iret
mov
xor
add
or
push
mov
and
add
add
add
add
clc
outsb
add
test
sub
dec
add
in
mov
lds
cwtl
mov
mov
push
rolb
sub
arpl
cmpsl
out
sbbl
add
xchg
lcall
fisubrs
xor
add
lods
in
push
mov
adc
or
bound
cmp
cmpb
icebp
sti
mov
push
add
add
push
fidivrl
mov
add
sbb
sub
add
mov
pop
add
sbb
or
adc
sub
hlt
jge
cmp
sbb
sbb
xchg
adc
add
mov
movsb
fisttpll
cmp
push
add
mov
xchg
cld
xchg
pop
push
add
adc
mov
insl
in
jmp
movsl
cmp
in
inc
add
mov
jns
add
xor
add
fiaddl
popa
jnp
pusha
add
jp
das
pop
add
push
or
dec
or
test
lods
lock
add
lcall
add
dec
add
lock
out
ret
mov
dec
add
aaa
add
outsl
leave
mov
add
xchg
inc
add
pop
add
mov
sti
add
dec
add
scas
aam
jecxz
cwtl
scas
jns
inc
add
je
sbb
xor
add
jae
add
in
jns
jns
clc
fistps
mov
ret
add
xchg
mov
pop
insl
mov
sub
adc
hlt
inc
add
add
cmp
stc
jns
dec
add
aaa
or
mov
add
aam
icebp
out
pop
push
add
jmp
sub
mov
fidivrl
lahf
cmc
add
adc
add
add
cmp
outsl
mov
inc
add
add
aaa
jl
push
stos
xadd
dec
iret
popf
adc
add
cmc
add
addr16
push
add
sub
insl
cmp
stos
mov
sbbl
xlat
rolb
jns
into
pushl
data16
aad
xor
mov
aad
out
inc
sbb
lcall
mov
gs
loop
stos
dec
stos
dec
add
dec
pushf
out
stos
je
cmp
ret
sbb
sub
in
push
popf
clc
into
jno
leave
rclb
xchg
jne
fnstenv
in
outsb
add
stc
push
add
add
add
xchg
jb
mov
add
push
jge
stos
dec
loop
add
pop
popl
jmp
jg
add
add
outsl
call
add
add
jecxz
dec
add
fisttpl
push
in
lods
pop
das
lret
xchg
xchg
mov
add
fiadds
enter
shlb
nop
xlat
cmc
xchg
xor
add
aad
add
add
aaa
xchg
add
ja
shl
movsl
add
push
add
sbb
add
add
cmpsl
push
fldl
add
imul
adc
inc
add
int3
sbb
xlat
xlat
push
test
sbb
add
pop
add
inc
add
ljmp
add
mov
pop
je
cmpsb
rcl
sbb
add
test
aad
je
shll
xor
adc
add
mov
cs
mov
rcl
or
test
je
fidivs
xlat
imul
inc
ds
clc
and
dec
jno
add
inc
nop
fidivrl
orb
xchg
aas
xchg
dec
repz
add
add
js
addr16
add
mov
cmp
sti
add
dec
jl
sbb
mov
add
jns
aad
cmp
cmp
je
es
add
cmpsl
add
add
mov
add
dec
xor
add
std
or
aaa
out
lods
repnz
adc
add
cmp
and
jne
push
dec
add
flds
insb
add
loopne
xor
add
aas
les
stc
ja
notb
insl
and
cmc
int3
fucom
sub
sub
ror
sahf
push
add
add
outsl
mov
dec
add
addr16
lds
xor
add
add
fstpt
xchg
mov
push
in
or
repnz
sbb
fmulp
cltd
or
mov
shl
xchg
dec
add
adc
add
add
xor
add
cmp
sbb
aas
lock
inc
add
jae
xor
fisubrs
add
push
sub
cmp
pop
pop
add
stc
sub
add
xchg
movsl
mov
add
add
jl
xor
jp
dec
add
add
shlb
add
jge
adc
dec
ficoms
test
neg
cmpl
add
pop
cli
cmp
xor
add
add
add
in
nop
xor
add
add
cmc
cmp
jbe
adc
cmp
data16
add
jmp
js
inc
add
push
ljmp
fwait
sub
ret
dec
add
fcomip
neg
aad
call
pop
jns
inc
scas
bound
or
aam
and
add
pop
add
arpl
fstps
add
fiaddl
mov
cmp
jae
add
add
insl
cmc
mov
add
pop
cmp
sub
ja
pop
add
add
mov
pop
add
jp
scas
sbb
adc
mov
popl
in
mov
add
inc
add
insl
push
add
dec
add
in
cld
mov
mov
inc
add
cmpb
loopne
dec
add
add
outsl
stc
lods
mov
cltd
movsb
ja
xor
push
pop
or
das
sub
inc
add
push
jge
pop
push
test
adc
lret
mov
add
add
dec
add
shlb
add
rclb
fldl
push
add
lea
add
or
xchg
jle
test
push
mov
loope
jle
and
cmc
adc
cmp
sub
cltd
into
in
stc
js
fdivrs
ljmp
add
repz
push
lret
mov
add
push
add
push
add
cmp
adc
xchg
nop
push
pushf
in
add
mov
add
sbbb
xor
add
add
test
test
test
add
xor
je
bound
cmovno
mov
fdivs
jnp
fwait
sbb
add
cmpsl
adc
add
out
data16
add
add
movsb
les
add
add
enter
lahf
bnd
das
nop
fsubr
lahf
mov
add
add
sahf
lock
inc
add
jp
lcall
xlat
or
in
imul
add
xchg
aas
ja
jnp
call
add
cmp
add
call
or
inc
add
jno
mov
scas
unpckhps
dec
mov
add
mov
add
int3
inc
add
cmpsl
and
add
test
add
mov
xor
add
mov
dec
add
in
and
add
add
add
mov
push
add
pusha
add
pmullw
stc
pop
add
pushf
mov
add
jo
xchg
mov
add
jmp
in
call
fcompl
add
or
sti
sarb
add
int
cmp
loopne
mov
aas
repz
add
add
add
mov
add
mov
sti
mov
jnp
adc
hlt
add
xlat
pushf
pop
lods
filds
cmp
sub
add
pop
stos
in
or
pusha
add
cmp
mov
int3
xchg
and
or
xor
add
or
cmp
add
dec
add
enter
add
xchg
xlat
ljmp
pusha
add
add
cmpsl
aad
add
xor
add
add
inc
add
and
add
adc
and
add
xchg
fld
cli
out
add
lret
add
add
pop
add
es
add
add
fbstp
mov
pop
add
sbb
jl
aaa
in
add
scas
loope
dec
add
pop
add
add
addr16
push
add
add
xchg
in
jae
nop
jae
cltd
add
imul
add
add
lret
mov
add
in
xchg
aam
in
ret
scas
popf
jp
sahf
xor
add
add
xchg
cli
es
add
inc
mov
xchg
call
or
push
add
xchg
call
add
rcl
scas
jbe
je
sbb
loop
cmpb
add
push
push
add
jnp
pop
inc
jbe
cmp
ffree
fists
mov
addl
add
aaa
mov
pushf
ret
mov
and
add
pop
mov
ret
pop
imul
and
xlat
inc
add
cmp
adc
add
xor
add
pop
icebp
add
add
push
add
add
std
xlat
enter
jle
mov
clc
sub
inc
out
addb
cmp
add
rcl
in
dec
add
xor
add
sub
pop
add
mov
inc
mov
adc
add
add
inc
add
jae
iret
insb
add
push
bound
movsl
push
inc
dec
add
arpl
xlat
subb
insb
add
or
out
repz
sbbb
sbb
or
cmp
push
ret
add
add
mov
negb
add
add
das
push
pushf
insb
add
fstpl
add
add
sub
fildl
call
test
add
stos
add
add
popl
fisubrs
cmp
sbb
shrb
adc
arpl
and
add
mov
mov
add
or
add
push
jno
scas
sub
mov
fists
add
lock
and
add
lods
icebp
movsb
aas
sub
outsl
cmp
sbb
mov
cld
insl
adc
jge
add
xchg
add
sub
jecxz
lret
decb
rcrl
push
cmp
cmp
subb
add
add
pop
pusha
add
push
inc
add
fs
lret
mov
add
sbb
jne
out
jle
out
sarb
jle
fildll
sub
jne
sub
mov
data16
fsub
pop
add
jbe
mov
and
add
mov
push
mov
iret
add
mov
mov
add
insb
add
loopne
mov
and
out
mov
sti
lods
gs
outsb
add
movsb
add
add
xchg
lods
push
add
add
insl
loop
or
js
adc
rol
mov
fcom
jo
dec
add
push
faddl
pushf
imul
push
add
flds
cmp
pop
add
sbb
out
mov
mov
shufps
mov
add
mov
add
cld
aam
add
xchg
dec
cmp
repz
mov
inc
add
add
movsb
jle
out
add
dec
add
add
stos
add
mov
dec
add
and
pop
add
cmc
jp
inc
enter
mov
add
in
jb
mov
and
lods
xchg
movl
adc
add
lret
xchg
pusha
add
inc
add
lods
add
xlat
add
sbb
adc
aas
or
inc
or
cwtl
ja
leave
add
mov
mull
ss
add
xchg
call
test
out
daa
add
pop
mov
xchg
inc
add
add
dec
add
jbe
pop
rolb
loopne
mov
fsubs
mov
add
push
add
add
and
pop
add
push
mov
cmp
and
fcmovnbe
inc
add
jo
xchg
pop
add
jl
adc
add
jbe
cmpsb
xor
mov
js
adc
add
clc
xor
test
xchg
mov
and
add
es
inc
add
add
add
add
lock
insl
out
mov
lret
gs
loopne
adc
js
mov
repnz
add
pop
add
pop
scas
incl
push
add
mov
jmp
addb
add
mov
push
or
popa
flds
sub
lock
enter
add
xchg
rorb
jmp
add
add
pop
or
pop
add
stc
ja
or
lret
pushl
js
mov
aas
mov
dec
sbb
sti
push
dec
lret
xor
mov
cld
add
add
ficoms
jae
adc
add
mov
dec
pushf
out
xchg
push
add
and
add
ret
push
call
addr16
jle
mov
xchg
pop
fcmovb
scas
jno
pop
add
mov
add
and
idiv
cmc
or
test
mov
stc
lahf
bound
int
push
verw
sbb
dec
add
add
cwtl
adc
add
adc
add
icebp
add
test
adc
add
mov
xchg
add
push
add
clc
andb
xchg
divb
lcall
or
push
add
dec
add
adc
add
xchg
mov
add
push
pop
call
adc
add
in
add
ljmp
adc
add
cmpsl
shlb
push
add
pop
add
jecxz
cmp
xchg
ffreep
or
push
add
add
dec
add
pop
test
add
dec
add
add
aaa
out
add
add
sbb
mov
aam
data16
testl
push
iret
add
fmul
xchg
lds
movl
and
bound
push
add
hlt
pop
dec
add
clc
aaa
push
add
adc
add
scas
lds
sub
xor
add
add
pop
dec
add
xlat
add
add
iret
push
add
xchg
add
jb
mov
cwtl
xchg
inc
add
adc
add
add
push
or
push
add
pop
add
fstl
insl
add
mov
outsl
clc
jae
add
xor
add
xchg
add
add
cwtl
add
add
and
add
shrl
fstpt
imul
jne
es
and
add
sbb
data16
mov
mulb
test
add
xlat
mov
or
mov
add
push
push
add
jecxz
add
add
dec
add
add
lock
add
mov
out
shlb
ret
jae
add
lock
xchg
rolb
pop
add
add
mov
jl
fisubs
in
add
adcb
out
rcrl
cmc
int3
fwait
dec
clc
aas
pop
mov
fimull
dec
aaa
leave
add
andb
add
aas
add
push
add
add
add
push
stc
add
bnd
jno
mov
aas
pop
jno
add
subb
outsl
aas
in
pop
add
mov
add
stos
int3
mov
fstps
add
ja
stos
xor
scas
hlt
inc
inc
add
repnz
sub
mov
js
loope
or
imul
jg
mov
add
das
bound
or
outsl
hlt
pop
add
sahf
cmpsb
test
push
add
aad
or
loop
repz
add
in
out
int
add
add
add
pop
add
je
cld
lock
cltd
movsb
push
push
or
loopne
xchg
adc
xchg
shll
xchg
push
add
or
mov
out
dec
lods
inc
add
add
pop
mov
add
pop
inc
data16
stos
sbb
clc
mov
jmp
xchg
out
xchg
psllq
sbb
add
inc
add
lahf
or
notb
xchg
mov
ror
add
push
jl
inc
add
add
push
das
add
add
add
movsb
jmp
or
add
add
stc
add
jb
pop
add
aad
add
adc
cmp
mov
imul
cmp
cmp
or
addl
lahf
pop
push
add
sub
ljmp
add
fwait
add
dec
sbb
xchg
cmp
push
add
arpl
fnstsw
jae
pushf
mov
addr16
call
xchg
test
add
sub
push
lods
out
sbb
out
add
cmpsl
in
sti
cmp
imul
add
jae
xor
add
cmp
les
add
jp
cld
or
sub
or
loop
pushf
pop
test
shlb
bound
in
gs
pop
jle
dec
or
mov
rcrl
push
roll
add
push
add
jnp
dec
add
shlb
loop
cmpsl
fldenv
add
adc
xchg
dec
add
xchg
add
add
and
cmp
frstor
add
add
add
lcall
das
les
mov
stos
add
jecxz
jecxz
add
test
and
add
fincstp
pop
mov
xor
loope
out
mov
add
pop
add
outsl
mov
movsl
lret
add
test
cmp
lods
xor
add
sub
inc
add
sarl
add
add
add
sti
pushf
or
bsf
pusha
add
mov
add
test
xchg
add
add
test
es
add
dec
add
pop
add
push
add
std
stos
std
and
sub
add
add
mov
loop
and
add
sub
cltd
ret
pop
inc
test
or
xor
add
jl
inc
lret
scas
add
aaa
lret
add
xchg
test
pop
add
pop
addb
cmp
inc
sti
pop
mov
mov
add
aas
dec
add
add
mov
mov
scas
lea
outsl
dec
add
mov
es
ss
add
imul
jge
add
stos
fdivr
imul
stos
or
push
roll
inc
add
pusha
add
jg
sub
cmp
add
add
add
add
add
clc
int
xchg
jns
ror
mov
imul
stos
dec
addl
stos
inc
add
cmp
pop
stc
push
sti
add
add
test
add
nop
add
jae
add
add
add
es
stos
cmpsb
xchg
loop
adc
add
add
addr16
add
xchg
loop
fidivs
add
push
add
add
jno
add
dec
sbb
movsb
inc
aas
mov
add
push
es
mov
ljmp
mov
pop
mov
add
sub
insb
add
decl
xor
cmp
xchg
shrb
cmc
lds
shr
sahf
ljmp
push
add
addl
idivl
sub
jbe
iret
mov
fwait
inc
lret
pop
aaa
add
pop
add
loope
jp
sbb
mov
add
and
int3
adc
sbb
sub
and
add
add
add
sahf
mov
sti
pop
adc
add
faddl
add
in
leave
and
add
cmpsl
adc
add
add
xor
and
mov
xchg
call
adc
frstpm(287
fisubrl
jne
mov
in
addb
loope
dec
add
add
mov
add
cmp
movsl
out
xor
cld
in
and
dec
add
dec
add
pop
add
test
ret
add
push
inc
xor
sarl
jnp
add
add
add
jb
jne
add
push
add
inc
mov
sub
or
in
push
add
push
notl
and
sub
push
add
nop
out
ja
add
cmpsl
dec
add
jecxz
add
cs
jbe
sbb
ds
push
add
mov
test
loop
inc
add
add
popa
push
add
xor
add
iret
out
add
sub
stc
movsb
push
mov
sti
jg
ds
inc
add
add
pop
add
or
xchg
push
mov
mov
push
inc
add
jge
push
add
pushf
and
adc
sbb
imul
adc
add
inc
sbbb
cmp
or
lret
pop
add
in
pusha
add
movsl
add
iret
dec
jg
pop
leave
adc
add
addl
jns
mov
cmp
mov
add
dec
add
pop
add
add
xchg
push
mov
fstl
add
cltd
cmp
push
add
call
aam
and
add
jb
push
addb
fidivrl
shrb
adc
mov
aam
sbb
data16
lock
add
add
aad
dec
add
scas
and
add
xor
add
mov
inc
push
cwtl
pop
xchg
dec
add
add
mov
fisttpl
out
popf
sub
dec
add
mov
test
sahf
add
rcrl
lods
push
xchg
xchg
jae
sti
shlb
cmpsb
push
add
dec
add
rcll
roll
pop
sub
xor
add
aam
pop
add
add
push
insl
add
add
pop
js
sub
add
adcl
cltd
in
mov
sub
lods
mov
push
add
and
add
add
rcr
insb
add
add
js
and
add
add
add
add
mov
nop
xorb
add
adc
add
and
add
add
mov
xor
adc
out
add
add
incl
jl
cmp
dec
add
xor
add
xchg
push
add
ljmp
mov
add
add
mov
lcall
lret
add
mov
mov
mov
ret
mov
add
add
mov
add
enter
lods
lcall
add
aad
imul
add
push
loope
pushf
rcll
add
dec
out
rcll
pop
push
add
into
add
les
xor
ss
ja
rolb
dec
imul
push
iret
cltd
mov
sbb
mov
add
inc
add
lret
add
in
add
rclb
add
inc
xchg
xchg
out
clc
lret
loop
or
cmp
pop
add
sbb
add
add
mov
jecxz
and
adc
add
insb
add
std
add
outsl
gs
add
add
out
jl
out
mov
addl
popl
push
add
pop
imul
and
xrelease
lcall
imul
add
sub
sbb
stos
pop
add
jnp
add
mov
dec
add
add
rol
push
add
pop
add
mov
add
testb
sbb
or
dec
add
pop
add
fcompl
xor
add
daa
add
jle
add
add
mov
in
cwtl
xchg
push
push
push
jnp
cmpl
rol
mov
push
inc
add
out
pop
add
fists
std
testl
leave
add
add
sub
test
subb
add
sub
add
mov
add
add
int3
dec
popa
jle
pop
ljmp
scas
mov
jae
hlt
mov
add
mov
push
add
add
pushf
lds
add
pop
add
insl
stos
xor
add
mov
notb
add
enter
dec
add
cmpsl
aaa
dec
add
jb
and
dec
sub
jbe
and
sub
add
add
dec
add
dec
add
js
mov
push
add
inc
cld
sbb
sub
adc
add
inc
add
mov
add
adc
lret
xchg
push
ret
add
lods
sbb
push
inc
add
mov
cltd
sahf
inc
mov
subb
add
xchg
lea
add
mov
mov
in
cmp
inc
add
add
add
stos
sub
ds
add
mov
std
dec
add
aam
sbb
les
div
push
add
leave
sub
negl
add
mov
inc
sbb
scas
scas
adc
add
xchg
jmp
add
and
add
fs
pop
jge
add
add
scas
test
add
pop
add
add
sub
xchg
mov
call
add
fidivl
enter
loopne
add
insb
add
push
out
pop
inc
dec
inc
ds
addl
pop
leave
scas
gs
add
test
add
mov
pop
add
pop
lcall
flds
into
fisubrs
insb
add
push
cmp
and
in
bound
mov
mov
imul
icebp
or
fistps
add
xor
add
pop
out
xchg
loopne
add
adc
add
mov
cld
mov
dec
popf
and
fwait
add
and
add
leave
pop
add
add
das
aaa
or
xor
testl
test
adc
add
std
addl
sub
sub
std
pop
add
cmp
dec
ja
popl
cmp
add
sub
adc
add
xchg
add
jo
xchg
cmc
push
add
add
sbb
sub
loop
mov
dec
add
add
adc
leave
cmp
and
adc
add
aas
dec
add
lret
lret
inc
add
in
add
int
mov
data16
aaa
or
pop
sub
es
add
add
add
add
adc
es
insb
add
jle
cmc
sti
shlb
add
add
inc
fmull
jle
and
pop
jl
loop
rcr
out
mov
xlat
push
or
add
out
add
ror
out
add
pop
scas
loope
sbb
sbb
sub
sub
imul
sub
push
js
les
fnstcw
add
jb
pop
adcl
add
mov
inc
xchg
rcrl
jmp
push
scas
fdivr
push
add
dec
das
je
cmc
or
or
inc
push
xchg
popa
xor
add
add
add
jno
in
iret
sub
decl
add
inc
mov
and
add
fisttpl
add
pop
push
add
popl
jmp
dec
push
push
pop
test
ud2
add
pop
add
aam
add
jge
jl
xor
mov
lret
xchg
jl
enter
add
mov
or
mov
ret
inc
add
das
mov
mov
mov
add
ret
push
add
add
add
and
add
testb
vpmullw
and
aad
mulb
into
add
inc
add
xchg
mov
push
out
pop
add
add
jmp
pushf
add
imul
add
inc
cltd
mov
addr16
add
add
add
add
ret
lcall
stos
add
fxam
push
mov
add
and
add
add
xchg
fldenv
ljmp
lock
stos
data16
jge
cmpsb
or
nop
pop
mov
add
and
lods
in
or
push
add
xchg
fldt
jne
icebp
paddsb
sbb
jnp
xchg
movsl
add
pop
sbb
cwtl
test
jle
repnz
add
cltd
add
test
hlt
sub
push
lcall
out
inc
add
ljmp
add
push
popa
ror
mov
xor
mov
add
in
inc
bound
lods
mov
add
or
repnz
jge
fwait
imul
add
cli
sub
mov
inc
fists
rolb
push
add
lahf
outsl
and
add
lock
push
adc
add
jmp
mov
sti
add
add
add
jmp
add
mov
das
add
add
mov
out
imul
subl
pop
add
dec
outsl
inc
rcrl
cld
mov
cmp
cmp
mov
push
cmp
in
lret
test
push
add
add
add
call
sub
push
add
mov
sub
add
leave
sbb
fcmovb
pushl
sub
and
mov
and
jno
jns
add
das
add
ret
ja
add
sar
out
and
add
jmp
adc
add
add
fwait
add
dec
lock
sub
fiaddl
xchg
lea
or
mov
hlt
cmp
stos
call
or
add
sub
dec
cld
daa
mov
adc
add
cmpb
loope
adc
in
add
add
push
inc
add
pushf
pop
add
add
ljmp
cmp
repz
xor
lock
cmp
sbb
add
add
mov
xor
test
add
add
or
daa
sub
adc
add
test
inc
add
mov
add
sbb
push
xchg
pop
pop
add
cld
sbb
lcall
cmpsb
add
xor
add
test
scas
je
lahf
scas
xor
add
xchg
mov
mov
mov
pop
adc
push
mov
dec
add
pop
add
data16
add
jmp
jp
scas
insb
add
adc
pop
xor
push
add
loopne
add
sub
mov
bound
pop
add
pop
add
out
adc
add
fcompl
dec
and
add
jbe
dec
add
add
shlb
cwtl
in
lds
add
ret
testb
cmp
gs
mov
pushf
jg
dec
jg
xlat
mov
mov
or
cmp
dec
movsl
xor
add
sub
sbb
in
or
cmp
pop
cmp
insb
add
out
add
jb
scas
popa
packuswb
pop
loopne
xor
add
push
adcl
orb
add
lods
mov
add
movsb
add
cltd
inc
add
mov
dec
rolb
add
add
xchg
nop
and
add
ja
int3
test
mov
mov
mov
pop
cmc
push
add
push
test
dec
add
faddl
out
cs
roll
std
mov
add
jne
or
or
jo
fimuls
andl
add
dec
repz
loop
add
bound
xor
add
xorb
add
xor
add
stos
insb
add
push
shlb
fiaddl
jmp
popf
das
xchg
faddl
mov
insl
cmpsl
insl
test
or
fdivl
xchg
add
sub
sub
add
or
cmpsb
push
gs
add
or
mov
dec
add
in
xchg
add
test
add
call
loopne
and
loope
mov
rcl
repnz
sbb
mov
es
add
and
imul
and
adc
xchg
mov
mov
adc
cwtl
rclb
sub
push
add
add
push
add
mov
inc
add
aaa
adc
mov
mov
imulb
inc
test
jg
and
add
xchg
jns
hlt
xchg
fucom
add
add
pusha
add
pop
test
mov
add
es
add
fimull
add
shrl
rolb
adc
test
mov
dec
add
mov
cmp
or
out
mov
jl
fnstsw
gs
add
or
aas
xchg
mov
inc
and
add
add
push
xor
add
mov
mov
add
mov
add
stc
push
ljmp
add
mov
inc
push
js
aaa
dec
add
icebp
add
xor
add
ss
imul
ret
gs
and
add
test
add
or
push
jge
aad
inc
add
add
add
add
mov
out
xlat
push
mov
xchg
outsb
add
negl
and
add
imul
les
add
adc
inc
add
data16
pop
add
add
inc
add
add
dec
add
orb
mov
jns
aaa
movsl
add
add
les
mov
add
lods
push
add
in
add
and
add
rcll
xlat
xchg
add
mov
orb
add
push
lds
mov
add
lock
jnp
add
insl
add
flds
add
add
sbb
cmp
dec
jp
aad
pop
add
add
arpl
adc
add
add
add
inc
add
jae
jl
jbe
aad
testb
into
outsb
add
xor
sub
das
adc
pop
mov
xchg
test
add
mov
add
hlt
notl
add
and
push
add
aaa
add
add
cmc
add
mov
dec
add
or
sbbb
outsb
add
add
jns
cmp
xchg
xchg
or
add
add
and
add
fiadds
dec
add
fiadds
lock
cmpsl
out
mov
push
inc
add
mov
mov
add
hlt
mov
add
pop
add
insl
movsb
mov
add
enter
test
in
add
jle
das
pop
test
add
ja
inc
add
and
add
add
xor
cmp
push
mov
mov
add
add
dec
add
dec
push
jnp
cld
xchg
enter
mov
jl
adc
add
add
mov
test
mov
sbb
sbb
or
jle
aam
add
xor
add
mov
sbbl
jns
lcall
popf
addl
add
inc
add
cmp
mov
xchg
popa
lock
mov
add
adc
mov
sbb
jno
out
sbb
fisubrl
add
popl
addr16
add
add
mov
add
flds
add
in
gs
pop
add
mov
insl
xchg
sti
push
push
add
fdivrs
into
bound
push
jo
jnp
movsl
in
xor
add
test
aad
mov
call
lods
add
pushl
push
add
xlat
cli
popf
jg
jl
pop
push
add
cmp
mov
xchg
icebp
leave
push
push
add
decl
add
jno
les
mov
add
add
mov
add
inc
add
faddl
add
mov
in
or
call
insb
add
sub
popa
cmpsl
jnp
adc
es
dec
fidivrs
add
in
adc
add
mov
push
int3
sbbb
add
add
clc
into
sbb
adc
add
or
pop
jg
push
cwtl
add
push
add
shlb
arpl
mov
mov
test
fcomps
das
cmc
popa
sbb
lahf
xchg
jle
jg
jle
mov
adc
add
add
mov
stos
jp
jmp
add
jo
enter
repnz
add
jecxz
xorl
cmp
xor
add
lock
xchg
test
sub
je
pop
lods
lret
fdivr
or
cmp
inc
add
add
push
imul
mul
stc
jmp
movsb
add
pop
int
ret
ret
mov
mulb
add
mov
lds
arpl
ljmp
add
mov
inc
jo
repnz
mov
jb
lock
mov
sub
jb
incl
addb
cmp
and
add
das
add
add
push
add
dec
add
xor
jne
std
adc
add
push
xchg
ret
add
lret
pop
add
lcall
add
push
add
push
add
out
mov
outsb
add
les
or
imulb
arpl
lret
mov
jb
mov
lret
int3
es
add
sub
dec
add
adc
add
nop
mov
roll
add
add
mov
repnz
adc
push
add
or
insb
add
or
inc
add
jo
repnz
mov
mov
or
and
add
dec
mov
cmp
adc
or
add
shrb
out
jle
in
int3
into
adc
add
push
add
adc
add
fwait
call
sbb
das
add
out
mov
and
mov
add
add
lods
adc
mov
mov
js
adc
add
dec
add
jne
je
mov
add
dec
add
adc
out
in
bound
or
jae
sub
fildl
add
push
add
push
add
mov
loop
push
pusha
add
lds
add
mov
dec
add
in
add
lock
push
add
add
add
add
push
jp
cli
jo
shll
xor
adc
roll
jns
das
in
fwait
add
mov
loopne
pop
mov
shr
fsubrl
jo
and
adc
fildl
dec
sbb
jl
cli
jg
adc
dec
add
add
mov
repnz
ret
pop
dec
imul
add
and
lret
mov
loope
cld
dec
inc
scas
cmp
jge
mov
popf
add
popf
sti
dec
add
add
add
int
arpl
popf
cmp
sbb
add
dec
add
es
xchg
gs
add
add
aaa
scas
add
mov
adc
cmp
pop
daa
std
add
or
add
ret
and
add
add
xchg
test
loop
add
aas
pop
fadds
jnp
adc
add
es
lods
jb
mov
jbe
and
add
cld
fstl
data16
add
lahf
sbb
add
mov
js
leave
jno
dec
add
jbe
cmpsl
repz
add
test
test
es
add
ret
add
add
ja
mov
jmp
dec
adc
or
add
add
daa
sbb
aam
mov
add
mov
and
add
js
gs
adcl
daa
movl
add
jo
adc
fistpll
mov
std
cmc
negb
sub
xor
add
add
add
sub
inc
pusha
add
add
inc
add
fiaddl
bound
sbb
add
push
add
jnp
ret
pop
add
xchg
xchg
push
or
inc
les
xchg
mov
add
addr16
add
sbb
dec
int
jge
fistps
add
pop
pop
add
repnz
mov
mov
inc
test
out
pop
add
mov
clc
lock
lea
add
test
add
add
mov
add
add
add
mov
push
add
fadds
aad
push
dec
add
stos
notb
mov
xchg
flds
into
je
and
mov
add
dec
add
mov
mov
movsl
add
sbbb
adc
cmp
mov
push
add
mov
inc
add
cmp
movsb
mov
add
push
dec
add
xor
dec
add
xchg
outsl
pop
or
pop
aad
cmp
daa
fildl
mov
pop
lds
push
add
pop
add
jne
add
adc
add
jno
sbb
push
add
shlb
dec
add
mov
sarl
sbb
inc
fwait
loope
shlb
sbb
cmp
js
pop
adc
add
push
jmp
mov
add
mov
std
inc
add
add
scas
mov
in
push
sbb
mov
mov
ljmp
out
bound
shlb
out
cli
movsl
sbb
pushf
push
add
stos
subb
lret
pop
cltd
data16
rcrb
push
add
out
lret
mov
add
out
sbb
xchg
sbb
push
filds
push
add
mov
mov
iret
add
cmp
shl
cmp
add
addl
add
xchg
add
add
adc
add
cmpsl
inc
xchg
add
inc
add
data16
push
add
or
in
test
push
cmp
aaa
cmpsb
add
outsb
add
flds
cmp
mov
add
add
add
mov
insl
add
repnz
push
fstl
pop
enter
add
add
mov
push
add
add
add
clc
add
cmpsb
add
add
test
daa
loop
xchg
stc
sub
jns
mov
add
sbb
push
sub
add
push
dec
add
aad
nop
add
mov
mov
imulb
repz
add
or
iret
inc
data16
pushf
sub
into
bound
inc
adc
xchg
fnstenv
add
mov
mov
jbe
dec
add
push
add
jbe
sbb
loope
adc
jge
test
sti
pop
rorl
pop
add
repz
sub
out
add
add
test
and
add
imul
filds
cmp
pop
mov
and
fst
imul
subl
sbb
iret
dec
add
in
cmpsb
xor
add
jecxz
add
sub
inc
add
pushf
dec
add
pop
fucom
popf
xor
add
pop
sbb
add
jmp
mov
add
add
insl
add
mov
dec
add
mov
inc
add
xor
clc
xor
pop
into
add
jno
mov
add
cmp
push
and
int
jmp
add
inc
add
add
pop
xchg
aam
add
add
push
add
data16
xchg
sub
push
add
adc
mov
lock
mov
xchg
sbb
movsl
jmp
stos
jle
js
ret
inc
add
add
xor
and
add
add
xor
add
add
sbb
nop
add
aaa
add
push
add
cmp
int3
add
add
add
leave
add
push
add
mov
insl
mov
lods
es
mov
dec
add
mov
add
dec
loopne
xchg
adcl
lods
mov
mov
jnp
pop
add
add
or
daa
xchg
add
pushf
push
sti
and
adc
popa
dec
add
sub
jmp
add
add
sbb
xchg
add
add
mov
aad
inc
mov
inc
add
jno
dec
add
dec
inc
and
add
cmpsb
into
or
mov
inc
testl
inc
add
inc
fucom
jg
out
add
add
add
lods
pop
sbb
mov
add
je
sub
lahf
mov
in
popa
in
jno
jmp
add
jne
mov
add
into
fdiv
enter
add
add
add
fs
cltd
dec
jle
and
cmp
dec
xchg
mov
add
test
mov
add
cmp
adc
add
mov
jmp
das
pop
add
bound
int
and
add
dec
mov
add
mov
add
add
inc
add
data16
lahf
inc
add
add
nop
lret
mov
add
xor
mov
scas
stos
lret
xchg
jno
test
add
leave
sti
xchg
fldenv
xchg
outsb
add
or
inc
add
icebp
xlat
lods
mov
mov
int
or
scas
mov
add
xchg
roll
lea
add
adc
add
in
aad
adcl
add
mov
int
gs
dec
add
outsb
add
gs
nop
sbb
sbb
add
or
push
jge
movsb
xchg
add
inc
add
lcall
int3
jns
flds
add
dec
mov
pushf
inc
mov
pop
add
shll
add
cmpl
pop
mov
in
xchg
insb
add
cmp
xchg
add
add
add
mov
or
xor
add
add
into
mov
add
ret
ljmp
add
roll
mov
or
mov
mov
add
fldl
add
pop
add
and
add
lea
inc
add
out
xchg
out
fsubrl
add
shll
rolb
xchg
pop
cli
adc
add
inc
add
add
jo
fcmovnu
test
es
add
out
xor
add
pop
add
lods
sbb
pusha
add
pop
add
add
add
sbb
arpl
adc
pop
mov
jae
stc
mov
dec
add
mov
loop
dec
add
sub
jo
push
add
adc
add
push
add
pop
js
dec
xchg
and
dec
xor
cld
add
add
leave
add
scas
movsb
sbb
test
sub
test
popf
pop
add
adc
add
pop
add
jge
out
dec
jp
pop
add
out
in
clc
jge
add
and
insl
aad
add
dec
scas
mov
add
fnsave
gs
scas
test
insl
sub
idiv
cmp
push
add
sti
sub
lahf
push
sbb
inc
add
dec
add
add
sub
stos
pushf
jno
jae
in
iret
mov
cmp
bound
cmp
int3
mov
jb
pop
ja
push
add
xchg
movsl
insb
add
pop
add
xor
xchg
inc
add
and
outsl
add
push
add
leave
push
mov
outsl
lahf
mov
push
add
ss
pusha
add
loopne
xchg
dec
add
adc
push
add
sub
xchg
je
test
jl
ret
lahf
dec
add
push
add
sbb
xor
add
add
cmovno
nop
add
push
add
add
ss
add
fiadds
dec
cld
clc
data16
movl
mov
add
aas
shll
jp
sbb
cmpsl
mov
xchg
pop
cltd
add
dec
pushf
hlt
cltd
jp
mov
daa
push
add
mov
ljmp
iret
add
loopne
repz
add
cmpsb
xor
and
add
das
ficoml
lea
outsl
and
cmpb
push
add
sbb
mov
sub
cs
sbb
js
iret
cld
push
out
and
mov
add
mov
mov
pop
pop
jno
ss
add
fisubrl
mov
adc
add
sahf
add
add
add
rclb
dec
add
shl
xor
add
stc
gs
pop
add
lret
push
add
adc
add
xor
cmp
insb
add
add
jg
frstor
inc
add
arpl
popa
mov
mov
jl
pop
add
sub
ret
gs
mov
add
add
shrb
inc
ffree
out
inc
add
mov
ret
fisubl
testl
ja
add
mov
test
cmp
and
add
mov
rcll
adc
add
push
add
add
mov
std
sub
pop
notb
fwait
pushf
icebp
je
add
inc
xor
imul
jns
push
add
je
out
and
add
out
and
add
add
inc
add
jp
dec
add
jb
push
add
push
add
sti
lret
sbb
and
ret
add
gs
push
add
add
dec
add
push
rcrb
enter
add
mov
mov
jb
add
add
je
add
add
lret
mov
add
fadds
sarl
pop
add
add
add
dec
add
add
lea
fldenv
lods
mov
add
adc
add
lcall
repnz
add
mov
or
cwtl
push
sub
loop
cmp
push
add
out
lcall
pop
add
data16
aad
loop
pop
mov
dec
add
sub
popa
ss
mov
add
pop
or
in
add
or
out
or
lods
or
mov
out
shrb
jg
ljmp
mov
shll
rolb
jno
add
push
add
test
pop
incb
inc
mov
mov
dec
add
push
add
adc
push
addr16
add
add
sbb
xor
add
dec
popf
dec
fdivs
icebp
and
and
mull
cmp
test
xor
add
add
jmp
add
adc
add
add
pause
add
sub
xchg
cli
add
pop
les
jae
cld
addr16
push
add
leave
add
shlb
dec
add
dec
aas
adc
frstor
cwtl
movb
add
sub
xchg
inc
add
mov
push
and
add
shll
mov
xchg
inc
add
jecxz
mov
pop
add
sub
add
mov
cltd
dec
xchg
jae
add
test
add
add
stos
or
dec
sub
adc
outsl
fnsave
mov
test
arpl
je
push
add
pusha
add
jns
fcoml
lock
or
call
xchg
add
or
xchg
stc
pop
in
sbb
add
xor
add
insl
jp
or
add
add
mov
stos
cmc
std
pop
add
in
add
add
fildl
pop
test
dec
add
xchg
cmp
fwait
xchg
and
sub
mov
sldt
in
ljmp
add
sub
jnp
dec
add
cmpsb
and
outsb
add
add
mov
xor
add
andl
add
adc
add
xor
inc
jno
das
xor
or
lahf
lods
mov
data16
mov
incl
bound
sbb
hlt
add
daa
mov
push
add
mov
outsb
add
dec
sub
add
mov
loopne
dec
add
xchg
nop
rcrb
add
pop
leave
add
out
mov
ret
adc
add
fsts
sbb
mov
arpl
dec
outsb
add
add
dec
add
roll
add
ret
xor
pop
dec
add
lods
pusha
add
cmc
insb
add
and
add
add
jo
push
add
pop
cmp
mov
fwait
outsl
xchg
stos
orb
inc
add
add
adc
add
add
das
test
mov
test
pop
add
movsl
pusha
add
lret
cli
sti
mov
add
jbe
add
add
adc
mov
or
mov
jg
mov
xchg
lods
loop
in
mov
les
push
add
mov
push
add
cmp
add
inc
add
add
movsl
lock
xor
add
add
add
ja
roll
repz
test
or
cmp
aad
lret
aas
mov
inc
add
adc
mov
jnp
enter
push
add
push
add
mov
ljmp
add
pop
xor
add
mov
mov
add
mov
push
add
xor
mov
mov
ja
cmp
mov
sub
dec
lock
stc
add
int
and
add
icebp
add
add
mov
or
mov
das
add
add
cwtl
mov
add
not
lret
push
jmp
addl
add
sbb
lret
mov
add
push
add
cwtl
and
mov
and
cmp
sti
imul
add
add
sbb
lret
sub
mov
xor
add
add
sbb
or
dec
orl
xchg
addl
mov
add
test
scas
mov
add
addb
sti
sub
ret
loop
fisubrl
lahf
in
add
xchg
movsb
xor
add
out
mov
mov
add
add
add
mov
push
cmp
add
add
add
jecxz
cld
inc
mov
add
mov
add
add
add
add
loop
mov
add
add
add
fstpt
std
sbb
out
add
xor
add
mov
add
test
outsb
add
add
add
pop
add
xor
je
aad
aas
pushf
subl
jbe
or
loope
cwtl
stc
repnz
repz
imul
push
add
and
push
popf
dec
popa
mov
add
pop
dec
scas
repz
add
fisubs
outsl
push
cmc
cmp
mov
add
fimuls
mull
push
loopne
xor
adc
f2xm1
cmp
fadds
movb
add
aaa
jb
sbb
inc
add
cltd
cmp
outsl
or
add
sbb
or
add
add
mov
pop
adc
ret
add
add
adc
add
pusha
add
add
lahf
inc
add
xchg
adc
loop
fucomp
add
ret
mov
add
mov
cmp
jae
movl
add
pop
mov
mov
jmp
mov
add
push
push
mov
add
add
dec
add
xchg
lea
and
ror
add
pop
add
jo
movl
dec
add
add
jns
lcall
sbb
lock
pop
cmp
mov
cltd
cmp
bnd
pop
dec
add
dec
add
and
add
movsb
int3
icebp
dec
add
mov
inc
dec
push
push
mov
lods
js
stos
dec
add
add
out
outsb
add
add
das
jmp
popa
add
lcall
add
repnz
ret
add
outsb
add
add
add
cmpsl
jo
cli
sbb
scas
adc
xchg
das
out
mov
add
jp
cmp
xor
add
je
lea
mov
pop
inc
add
xor
add
push
add
push
sahf
sbb
hlt
add
xor
bound
cli
add
add
in
pop
fldl
fwait
jp
push
add
aaa
mov
js
mov
add
and
add
mov
shlb
pop
dec
mov
aam
sbb
stc
sub
push
dec
add
adc
mov
push
add
bound
scas
aad
adc
add
mov
bound
shrb
add
push
popl
popf
int
imul
mov
inc
add
xchg
test
mov
repz
add
hlt
pop
add
push
add
pop
add
push
add
cmp
jo
in
add
stos
xor
and
and
add
les
dec
pop
add
call
arpl
add
mov
movsb
pop
add
adc
jg
mov
inc
xchg
add
imul
add
add
popa
popa
add
add
jmp
adc
add
mov
lods
fucomp
sub
push
stos
in
add
inc
out
or
imul
stc
lcall
scas
lods
dec
add
add
cmp
fwait
dec
xor
add
cmp
or
jo
cs
xchg
and
add
add
add
fsub
jnp
mov
test
out
stos
add
sbb
add
test
add
xchg
mov
bound
insb
add
push
add
push
add
add
jp
xor
xchg
aaa
mov
loopne
fwait
mov
add
add
xor
add
dec
rclb
mov
cmpl
rcrb
add
sub
into
sahf
js
leave
add
roll
pop
add
lret
ret
jp
adcb
dec
cmc
push
add
xchg
pusha
add
dec
dec
add
dec
add
movsb
lcall
cmp
mov
mov
pusha
add
inc
cmp
fwait
or
inc
xor
addr16
lods
sahf
loopne
jl
jbe
inc
add
add
sub
mov
repz
dec
add
insl
add
jle
pop
add
cld
outsl
shl
dec
scas
mov
add
add
add
test
add
jecxz
or
xor
add
add
add
jb
loop
add
into
flds
aaa
cmp
lods
rcll
mov
mov
ljmp
outsb
add
andl
add
push
add
xor
add
pop
add
out
inc
add
add
xchg
add
xor
pusha
add
movsb
push
add
add
add
inc
adc
add
or
mov
int3
push
mov
data16
add
adc
push
add
cmp
fstpt
cmp
xlat
sbb
stos
insb
add
roll
nop
enter
jo
pop
fwait
movsl
pusha
add
inc
cwtl
jge
add
adc
outsb
add
mov
add
add
hlt
into
lcall
add
add
push
add
add
fadds
adcb
jae
add
push
add
sbb
add
jne
test
and
add
push
lea
xchg
xchg
jnp
xor
int3
gs
sbb
fwait
pop
mov
add
mulb
add
movsl
testl
add
add
popf
pusha
add
rcrb
repnz
xchg
add
push
add
decb
inc
add
add
add
add
push
jne
sbb
int
add
cli
add
sti
jns
ss
add
ljmp
cmpsb
inc
add
push
xchg
jg
jns
or
hlt
bound
mov
loopne
jnp
ja
cmp
scas
mov
push
cmpl
jbe
xor
outsb
add
pop
and
add
les
jmp
mov
mov
punpcklbw
mov
add
test
notb
push
outsl
call
add
mov
add
mov
add
ds
and
add
jne
popf
bound
dec
add
mov
enter
pop
mov
pop
add
sbb
pop
mov
add
pop
add
cs
lock
ror
add
add
add
cli
xor
imul
adc
add
xor
mov
sbb
adc
add
xor
add
cld
cmp
add
dec
add
outsl
adc
add
push
insb
add
xchg
cmp
mov
push
jge
dec
add
out
add
rcl
fsubs
aam
sbb
jecxz
pop
add
adc
push
mov
lods
add
testb
push
dec
push
add
pop
sub
mov
push
sub
add
mov
loope
add
dec
add
mov
adc
add
mov
push
add
out
add
add
inc
add
mov
jl
data16
ror
pop
add
add
ja
xor
shlb
rclb
inc
add
add
adc
jae
fldcw
push
xor
jmp
ret
clc
outsl
xchg
adc
mov
add
dec
add
xlat
pusha
add
fimull
add
add
jle
mov
add
das
in
adc
mov
add
add
lea
or
add
fidivs
cmp
pushf
ja
add
xchg
mov
add
lahf
pop
add
adc
lahf
jecxz
cmpsl
jl
bound
fcoms
add
add
pop
lret
iret
inc
hlt
mov
jne
rolb
aaa
adc
add
add
sbb
push
add
push
add
add
insl
bound
sbb
sarl
fstps
add
mov
sub
sbb
call
mov
add
hlt
add
jl
ds
or
inc
add
dec
add
outsb
add
aad
add
add
insl
mov
dec
add
mov
icebp
aaa
pop
add
call
jno
add
dec
add
push
add
mov
lods
mov
add
mulb
stc
add
jnp
fwait
aad
jb
push
aas
jns
add
or
add
add
add
xor
add
dec
add
inc
add
cmp
dec
add
ret
add
gs
push
add
jb
lcall
adc
add
mov
movsl
hlt
repnz
jo
data16
pop
mov
les
add
add
data16
and
add
cmpsb
mov
mov
sbb
test
orl
inc
pop
mov
sub
fucomi
mov
int
aam
insl
mov
fidivrs
add
out
ljmp
add
xchg
jnp
movsl
sub
add
add
andl
flds
add
out
add
add
aaa
add
pop
cmp
xor
xchg
mov
pusha
add
imul
sarl
add
pop
mov
xor
add
jge
cmp
add
pop
add
jge
add
and
sbb
xchg
xchg
xchg
mov
push
add
aam
add
sub
ja
add
in
ljmp
and
int3
add
loope
or
push
sbb
jnp
repz
add
adc
add
add
aas
cltd
pop
mov
add
enter
andl
jmp
adc
add
dec
pop
dec
add
mov
out
popa
mov
lock
fildll
add
mov
cmp
mov
les
sub
push
add
add
daa
cmc
add
out
inc
add
ss
inc
add
mov
xor
lods
sahf
iret
mov
cmpsb
jae
mov
mov
cmc
ret
xchg
shll
imul
roll
arpl
shll
add
jo
roll
mov
hlt
sub
jp
test
add
add
add
dec
adc
add
gs
add
add
jnp
filds
cld
push
add
add
dec
add
lahf
push
add
mov
stos
fimull
add
sub
out
inc
loop
add
data16
in
add
ss
ja
push
add
in
xchg
sub
and
nop
dec
adcb
repnz
test
add
pop
push
add
add
rcll
add
jge
push
dec
add
in
lock
sbb
fiaddl
lock
rcrb
add
add
sbb
sbb
insl
lock
add
sbb
bound
sahf
out
movsb
add
add
scas
xor
add
loope
add
add
mov
sti
push
je
xchg
out
pushf
mov
or
jne
fstpl
add
add
add
fsts
jno
push
add
cmp
push
add
mov
out
jecxz
test
fwait
je
cs
push
repnz
daa
call
add
xchg
aas
adc
dec
add
cli
add
add
test
sti
sahf
jae
add
pop
add
loopne
add
andb
sbb
add
add
ret
cmpsl
lea
add
or
mov
cs
aad
add
mov
add
sub
or
dec
add
or
hlt
push
add
dec
cmp
imul
cwtl
arpl
add
add
mov
pop
decb
add
scas
jle
xor
add
cmc
push
push
add
insl
add
jae
sbb
mov
or
icebp
or
xor
cwtl
pushf
jecxz
lret
out
lea
sbb
and
add
and
test
push
add
add
push
add
dec
add
pop
add
cwtl
or
mov
xor
cmpsl
mov
push
add
insl
xlat
cmp
jge
add
imul
pushf
nop
dec
xorb
add
pop
push
add
ljmp
pop
cmpsb
push
add
inc
sub
sbb
cmp
or
adc
add
arpl
mov
out
test
stc
cmp
sub
ss
add
cmp
fwait
cmp
js
jns
sti
xchg
add
add
add
in
les
add
mov
pop
aad
cmc
push
add
inc
add
inc
add
or
shrd
add
repz
fwait
or
add
xchg
insl
jo
enter
movsb
dec
add
mov
xchg
add
or
fnstenv
jo
stos
mov
rcll
add
addr16
add
add
adcb
add
inc
add
add
fsubp
cs
stos
rep
add
mov
add
ficoms
add
jecxz
lret
dec
add
add
dec
jns
add
add
mov
xchg
xchg
jle
andl
add
add
add
cld
in
pop
mov
mov
call
adc
add
xor
aam
test
add
jbe
jne
jp
or
jb
jb
mov
int
out
enter
xor
stos
aam
lds
xor
dec
into
or
adcl
cmpsl
jne
addr16
mov
add
push
add
add
push
add
add
adc
add
hlt
leave
fs
pusha
add
nop
xchg
xchg
in
sub
in
push
pop
add
sbb
mov
fwait
ljmp
inc
aad
xchg
pop
adc
xorb
sbb
sbb
push
int3
fdivrs
push
add
mov
add
enter
outsl
xchg
mov
cmc
inc
add
in
add
test
jns
out
sub
pop
add
mov
add
mov
enter
add
add
push
xor
dec
add
add
fcmovne
call
loop
jp
je
adc
and
add
add
rcrb
stos
add
add
push
jl
mov
add
push
addl
add
add
lock
add
jbe
sar
add
pop
ja
fdivs
cwtl
add
push
push
rolb
add
mulb
dec
add
mov
dec
add
mov
dec
add
dec
repz
add
outsl
push
push
add
add
push
fsts
out
add
add
jb
mov
add
flds
cli
into
mov
add
pop
add
add
jns
dec
add
fcmovnb
sbb
add
dec
add
add
pop
sbb
inc
add
cmp
adc
add
push
add
js
sbb
xor
add
jecxz
push
add
repz
nop
insb
add
fidivrl
push
add
mov
cld
add
mov
mov
add
add
sub
sbb
inc
add
test
push
subps
dec
sbb
mov
add
mov
inc
add
lods
call
add
ret
insb
add
sbb
dec
add
shlb
call
add
xchg
xor
add
mov
loope
jbe
add
add
out
fldenv
pop
ss
add
fildl
adc
add
add
addr16
add
cmp
push
fbld
ljmp
mov
add
mov
add
add
jnp
push
add
inc
add
or
add
add
jg
mov
scas
adc
add
xchg
das
and
int3
mov
and
add
loop
loop
jecxz
ret
add
cmp
pop
addl
repz
add
cmp
mov
rcr
mov
popf
mov
clc
fidivrl
add
stos
sbb
push
add
push
int3
and
lcall
add
mov
cltd
add
popf
into
add
add
mov
lea
leave
add
add
xor
add
jne
jnp
faddl
sbb
iret
lods
in
sub
sarl
and
add
jbe
add
mov
add
fsubrp
mov
jge
out
icebp
sti
add
add
jae
push
add
add
jg
xor
add
pop
enter
add
add
add
outsl
push
inc
add
and
add
add
mov
cld
add
push
xchg
inc
fwait
xor
add
push
ret
mov
jmp
add
test
xchg
xor
add
fldt
rclb
mov
add
add
lds
mov
imul
push
add
es
add
pop
add
add
pop
aas
and
mov
popf
sbb
jg
rcrb
xchg
add
add
lahf
imul
dec
add
jmp
pop
add
iret
stos
sbbb
adc
aad
cmpsl
call
add
ss
add
push
pop
add
or
push
mov
mov
add
enter
add
faddl
stos
int
call
sbb
push
add
test
out
lds
pop
add
push
jge
orb
popa
inc
add
xor
add
xchg
add
sbbl
pusha
add
in
mov
out
imul
add
pop
add
pop
adc
add
ret
inc
add
ficompl
addr16
dec
les
push
mov
push
add
mov
ja
inc
add
cld
and
pusha
add
or
adc
fwait
roll
xor
add
jb
dec
add
add
push
add
add
lods
add
aam
outsl
mov
xchg
add
insl
pop
test
and
test
and
add
push
cmc
jo
inc
add
lock
cmpsb
add
mov
add
cli
mov
dec
mov
mov
add
add
popf
cmp
loop
add
cmp
into
jp
fcmovbe
pushf
insb
add
lds
inc
add
ret
nop
add
mov
loope
dec
add
jae
fildll
bound
or
cltd
test
data16
mov
adc
jb
out
jge
arpl
imul
in
add
gs
add
add
addr16
shrl
dec
es
or
sub
mov
add
xchg
sbb
in
sub
add
pusha
add
add
dec
add
inc
push
add
lds
sub
ret
add
mov
sbb
lods
jns
add
mov
pop
loopne
adc
add
sbb
or
xor
add
add
xchg
adc
add
push
add
add
add
add
outsl
add
add
add
add
dec
add
add
into
sbb
ret
adc
sub
mov
add
sbb
mov
add
mov
jns
mov
add
pop
add
into
jp
push
jle
xchg
push
mov
add
mov
repz
add
mov
jmp
pop
add
add
xor
xor
add
out
push
add
xlat
xor
add
add
add
aad
insl
orb
pop
in
add
pop
popf
mov
ret
push
mov
adc
sub
mov
and
add
andl
add
jmp
sub
mov
scas
add
add
xchg
adc
cmpsl
add
adc
add
add
in
cmpsl
stos
fwait
xor
dec
ror
aam
ljmp
add
out
sub
push
mov
pop
inc
add
testb
mov
add
repz
jo
add
sub
push
xor
daa
pop
add
popf
ljmp
add
jp
mov
cli
xchg
imul
add
incb
testb
sub
mov
outsb
add
std
fmull
push
sub
push
add
jle
stc
sbbb
xor
iret
push
adc
add
add
pop
movsb
add
mov
push
add
and
test
pop
pop
add
add
pop
add
add
movsb
inc
mov
add
add
add
and
mov
sub
add
add
out
mov
cli
pop
pop
out
mov
add
js
xchg
dec
add
adc
add
in
add
fbld
pushf
add
arpl
or
ret
cmp
dec
add
inc
lret
add
cmp
jne
and
add
sbb
xchg
in
dec
mov
or
xchg
mov
add
mov
inc
jg
pop
data16
loope
stos
add
add
cmp
test
sti
add
add
dec
adc
or
testl
cmp
push
add
push
dec
sub
lret
pop
mov
and
and
xlat
cld
add
lcall
cmpsl
add
in
add
sbb
inc
add
loopne
loope
cmp
xor
add
outsb
add
add
out
push
add
add
sahf
push
add
or
jmp
xor
xor
add
push
add
add
add
js
xchg
xchg
pusha
add
lods
ror
fs
sub
jb
dec
add
sbbb
add
fisubs
aaa
add
cmp
pusha
add
cmp
push
mov
add
xor
add
popf
mov
add
push
addb
sbb
pushf
pop
xgetbv
add
sub
aam
mov
outsb
add
pop
add
add
test
add
mov
pop
add
xchg
inc
add
js
mov
out
push
add
leave
ret
pop
add
sub
cmp
jge
movsb
pop
jl
and
mov
inc
je
xor
leave
xchg
rolb
insl
hlt
inc
add
roll
lret
pop
add
adc
add
pop
cli
mov
push
add
add
add
inc
add
add
adc
add
stos
aad
sti
add
push
add
jb
or
lea
movsb
cmc
adc
push
add
pop
ret
rcr
mov
jge
icebp
cmp
outsb
add
roll
cmp
aam
add
add
add
pop
add
cmp
iret
stos
push
add
lahf
xchg
inc
jle
push
cwtl
leave
incl
inc
or
adc
add
subl
je
mov
and
cmp
test
add
xchg
sbbl
inc
jge
mov
lods
jle
xor
add
mov
icebp
cwtl
fsub
jne
insb
add
add
add
add
stos
mov
testl
add
add
add
fildl
add
arpl
add
cmpsl
in
inc
add
jp
mov
inc
add
push
add
dec
add
add
aas
aaa
test
loop
dec
add
fwait
popf
mov
add
cmp
sbb
adc
push
and
add
add
loope
add
push
add
fiaddl
cwtl
jle
out
adcl
cwtl
add
add
push
add
inc
add
scas
sbb
add
add
pusha
add
outsb
add
fiadds
mov
int
ljmp
mov
call
cmp
sbb
push
shlb
xor
mov
add
add
mov
mov
add
dec
add
lcall
in
test
cmpl
pop
shrl
add
add
push
mov
xor
test
lahf
xor
add
add
dec
pop
add
int3
scas
adc
add
cmp
dec
lock
add
add
imul
jmp
add
add
imul
mov
adc
cwtl
and
add
roll
mov
pop
add
je
jl
stos
aas
popf
pushl
mov
add
add
daa
mov
mov
sub
mov
mov
insb
add
daa
out
fwait
xlat
push
pushf
add
xchg
add
pop
add
add
add
pop
and
add
xchg
push
adc
inc
add
jle
pop
xlat
inc
add
sub
jne
inc
add
movsb
add
popf
mov
mov
lods
mov
add
xchg
and
ja
mulb
mov
insl
mov
jp
add
filds
mov
jb
jns
or
mov
out
fnstcw
stc
call
jne
add
lods
add
lahf
clc
push
xchg
sub
punpckldq
mov
add
pop
add
add
imul
cmp
ret
call
dec
jb
adc
or
jne
add
ja
pop
add
fucom
xorb
in
aam
prefetch
or
add
cld
in
cmp
xchg
int
add
outsl
pop
stc
add
add
xor
pop
scas
mov
daa
add
add
push
cmp
movsl
add
repnz
xor
add
xor
jg
adc
pop
add
scas
add
repz
pop
add
sub
add
sbb
pop
add
add
fidivrs
adc
jno
lods
insl
push
add
pop
add
loopne
stos
imul
aaa
cmc
add
test
xchg
lods
dec
add
add
into
add
int
add
bound
inc
sahf
and
and
add
mov
lea
out
movsb
fisubrs
add
mov
icebp
add
add
mov
xor
adc
add
add
mov
cmpsl
add
or
add
nop
add
xchg
insl
cmp
pusha
add
scas
add
ss
add
test
ret
xchg
add
jnp
mov
aad
inc
dec
add
mov
ja
je
test
stos
sbb
add
addr16
cld
icebp
jb
add
cmc
sarb
jmp
add
out
xchg
jg
jp
sub
and
add
pop
mov
sub
fwait
pop
les
add
sbb
inc
add
inc
push
cmpsb
jl
xchg
inc
add
jne
dec
add
jmp
pop
add
add
add
add
add
push
add
or
mov
in
cmpsb
xor
add
add
pop
add
xor
aas
push
and
add
jne
scas
xorl
xlat
out
loope
dec
add
add
sbb
fcomi
cmpl
iret
int3
jp
mov
fidivrl
xor
add
scas
cmp
add
push
jne
cwtl
jo
cmp
push
outsb
add
fldl
and
imul
add
js
bound
xchg
lods
push
add
push
pop
mov
adc
mov
xlat
inc
add
add
add
add
lcall
push
nop
aam
add
mov
push
add
or
mov
stc
sbb
inc
aam
cld
mov
or
inc
jp
jle
jbe
or
cmp
pop
add
inc
add
ss
adc
cmp
enter
ss
add
in
lods
and
add
adc
xchg
in
add
pop
add
xor
lahf
je
rclb
add
movsl
xchg
push
add
add
add
jle
or
cltd
call
inc
add
and
add
int
add
out
add
cli
xlat
jmp
in
lret
pop
xor
add
add
pop
or
ret
nop
rol
adc
add
call
cwtl
pushf
pop
add
addl
inc
add
mov
inc
add
jo
fmuls
push
in
inc
les
scas
xchg
filds
adc
add
fadds
add
xchg
arpl
sub
data16
xchg
xchg
mov
adc
lea
add
add
out
ret
add
iret
add
sbb
mov
adc
inc
pop
insb
add
xchg
add
faddl
pop
add
adc
add
add
add
adc
and
push
add
mov
inc
add
mov
repnz
xchg
add
add
test
jnp
or
ja
sbb
sbb
sub
fsubrl
sbbb
movsb
lahf
lods
popa
test
lret
test
inc
xor
add
add
mov
imul
std
jns
test
fadds
je
jmp
or
lods
in
adc
imulb
add
add
xchg
lock
pop
mov
pop
pop
xchg
lods
inc
add
sbb
ret
in
add
pop
cmpsl
jno
add
add
mov
push
loope
rorb
mov
xor
cmc
fsubs
out
xchg
ja
addb
add
add
insb
add
lret
sub
pushf
or
repz
mov
inc
add
mov
dec
inc
add
out
scas
ret
adc
add
insl
ret
mov
add
add
add
add
jle
es
add
sub
add
mov
add
add
fdivrl
test
pop
pop
add
sub
adc
sahf
pop
add
out
mov
add
sbb
scas
inc
mov
outsb
add
mov
ss
sub
mov
push
jno
mov
adc
add
jb
cmpsb
lods
jno
addr16
add
lods
pop
outsl
icebp
int3
jl
pop
add
scas
dec
add
out
add
push
cmp
mov
sub
in
cli
inc
add
int3
ficompl
cmp
je
inc
add
cld
add
xchg
add
mov
clc
rclb
das
iret
mov
pop
add
lea
jb
in
gs
pop
add
push
add
nop
mov
inc
dec
jg
pop
iret
mov
add
add
xor
add
stos
cmp
ret
mov
mov
add
add
out
cmp
sub
jle
cmpsl
pop
add
adc
mov
add
add
jg
push
add
aam
in
movb
test
repnz
add
test
cmc
sti
inc
add
add
and
xchg
jne
push
add
cmpsl
jnp
pop
add
jo
js
mov
mov
int
add
push
add
xchg
dec
add
inc
add
popf
or
mov
mov
pushf
jns
pop
add
add
push
jne
out
jmp
cmp
xchg
add
add
add
fbld
xor
cmp
js
cmpsl
adc
add
add
lahf
xor
call
or
mov
sub
pop
aam
dec
add
fistl
jbe
jg
mov
or
gs
divb
iret
add
push
add
push
and
add
nop
test
aas
add
dec
add
out
loope
add
gs
dec
mov
add
adc
add
add
xor
arpl
jb
data16
jp
push
lods
mov
fst
xchg
orb
add
add
addr16
jo
xor
adc
add
pop
flds
mov
shll
movsl
fistps
jl
mov
pop
add
sub
rcl
add
push
add
push
stc
xchg
xlat
push
adc
fbstp
inc
cmp
stc
add
add
in
adc
jg
add
push
add
jle
ss
add
add
cmp
mov
cmp
fimuls
mov
stos
pusha
add
js
mov
add
add
add
sub
adc
add
movsb
pop
add
sldt
mov
push
stos
mov
mov
pop
sarb
in
or
adc
add
stos
dec
add
inc
xchg
mov
add
pusha
add
jne
add
add
insl
xor
push
addb
push
stc
loopne
int3
add
stos
ficomps
icebp
cmp
inc
jp
mov
in
add
into
stos
mov
sub
jecxz
add
add
sbb
mov
bound
push
add
test
add
add
testb
into
inc
add
add
lea
mov
roll
adc
push
add
lea
add
sbb
popl
loope
loopne
and
pop
out
popl
in
and
adc
push
aaa
sub
lea
add
add
cltd
lahf
pop
xlat
gs
cmp
mov
dec
dec
cwtl
mov
loopne
add
lret
mov
pop
pop
add
push
add
add
mov
add
inc
add
jmp
xchg
into
add
pusha
add
jbe
mov
lahf
movsl
add
xor
inc
lahf
sub
jae
cmpsb
pushf
cltd
dec
add
enter
negb
add
mov
add
mov
add
gs
add
xor
add
push
add
add
jl
or
lds
add
add
add
add
cmp
add
push
add
fdivrl
mov
cmpb
pusha
add
out
popl
roll
subl
dec
add
mov
rcrl
clc
addps
shll
rolb
xchg
movsl
mov
pop
jmp
loopne
imul
xchg
add
cs
ljmp
add
add
jnp
loopne
out
push
sub
sbb
xchg
out
test
add
push
add
js
add
xor
add
ljmp
out
jg
and
add
mov
lret
inc
add
fidivs
xor
adc
add
add
sbb
adc
loopne
add
add
mov
push
add
xchg
lret
jne
jbe
popa
mov
lds
out
add
add
nop
cmp
mov
sti
add
jmp
push
add
add
add
sbb
pop
js
fisttpll
fwait
or
bound
cmpsb
jl
dec
fcmovbe
dec
add
push
add
out
cmp
pop
or
add
add
call
add
sub
pop
add
in
dec
add
mov
in
lds
call
cmp
xchg
pop
push
add
add
adc
imul
movsb
and
add
add
add
rolb
cli
ja
data16
jmp
lods
add
dec
cmp
xchg
pop
addr16
lahf
jbe
pop
or
shl
mov
and
and
add
add
inc
add
add
dec
add
add
pop
std
mov
add
sbb
or
lret
mov
shlb
add
lret
adc
std
mov
out
pop
add
cwtl
lahf
mov
pusha
add
mov
ljmp
popa
sti
lds
clc
xor
add
das
add
push
add
add
add
add
push
push
add
fimuls
aam
stos
push
add
stos
add
cmp
lea
shrl
add
add
or
and
in
sarl
and
add
cltd
mov
mov
pop
add
push
xchg
add
cwtl
sbb
jae
pop
mov
lods
push
add
jno
add
add
xchg
push
add
sub
fnstsw
add
dec
add
inc
add
shrl
mov
push
add
addb
je
les
add
leave
fadds
add
mov
imul
fdivl
xor
add
decb
fmull
add
add
add
sub
cmp
mov
inc
js
add
mov
push
add
lock
mov
add
outsb
add
adc
add
add
add
data16
add
mov
sbb
dec
add
cmp
dec
mov
das
jno
lods
push
adc
decb
add
popa
add
shrl
add
mov
add
fiadds
add
mov
lea
sub
popa
dec
js
jns
add
or
cmp
jnp
add
in
sahf
rcr
ret
xchg
or
or
adc
sub
dec
add
push
sbb
loope
inc
add
cmpsl
pop
and
iret
inc
add
xchg
mov
add
jne
sbb
lcall
jge
add
xchg
cmp
and
add
imul
add
add
dec
scas
sbb
enter
add
test
add
imul
dec
add
movsb
or
mov
data16
adc
sahf
je
dec
add
cltd
das
test
loope
cmp
add
mov
add
add
les
ret
stos
push
iret
add
cmpb
push
pop
push
add
repnz
add
cltd
add
xor
test
jnp
jno
adc
add
mulb
add
jmp
add
add
push
mov
jno
add
add
lds
add
add
call
mov
ret
clc
xor
add
lret
jb
sbb
sahf
add
out
and
add
lahf
push
into
add
add
pop
mov
xlat
jp
mov
data16
ror
push
jecxz
add
stos
or
jl
cmpsb
or
mov
out
ljmp
add
add
fisubrs
addl
pusha
add
pop
adc
add
add
adcl
pop
push
jecxz
sarb
cli
popa
pop
push
add
leave
xor
jbe
aaa
nop
add
inc
insl
push
push
pop
add
and
add
add
pop
add
fs
sub
xchg
int
addl
add
aad
hlt
add
movsb
leave
ret
add
xchg
mov
mov
jae
ja
pop
jl
add
mov
jg
fwait
cmp
aam
mov
pop
pop
add
call
lahf
movsl
clc
loope
xchg
add
test
rcrl
sbb
jmp
mov
and
add
js
mov
jge
loope
iret
add
nop
sbb
and
lret
add
add
movsl
shlb
add
js
xchg
icebp
daa
nop
add
lret
lret
pop
mov
sbbl
xor
pusha
add
roll
jnp
or
lds
sub
mov
fcompl
repz
mov
outsl
cli
add
aaa
mov
psllq
xchg
and
add
in
pop
add
rcrb
dec
add
push
add
in
xchg
js
ret
push
add
add
scas
cmp
push
fwait
mov
les
imul
lret
test
bound
shrb
add
inc
test
dec
jg
add
mov
add
cmp
pop
add
fisubl
fiaddl
xchg
ja
push
mov
inc
add
bound
inc
push
les
sub
insb
add
sbb
mov
enter
xlat
lahf
pop
repz
pop
add
gs
lret
pop
add
es
out
add
pop
add
movsb
push
lds
xchg
adc
add
test
or
pop
sbbb
fwait
add
ss
add
add
push
add
add
leave
jno
leave
daa
cmp
fwait
test
mov
add
mov
pop
xor
in
cmc
stos
les
movsl
or
or
insl
sub
add
jbe
movsl
inc
test
into
add
js
adc
add
insl
ja
adc
scas
hlt
dec
add
mov
scas
add
push
add
mov
cmp
add
movb
add
lret
imulb
jb
dec
add
sbb
cmpsb
pop
add
sahf
add
popa
add
mov
loope
shlb
fnstenv
add
movsl
xchg
pop
add
sub
mov
jae
mov
es
add
cmp
pop
jl
and
add
sub
add
outsl
scas
push
add
add
sahf
lahf
inc
add
adc
add
inc
add
sub
aad
mov
add
add
cmp
jle
adc
add
add
or
jo
or
nop
adc
add
add
jb
cmp
aad
in
sbb
das
jge
mov
and
dec
add
add
addr16
push
fs
stos
push
adc
add
lcall
add
push
add
add
add
cmp
jmp
add
add
pop
push
cld
add
pop
add
sbb
mov
add
add
add
lahf
mov
add
and
cmp
add
fistpl
mov
adc
and
dec
add
add
add
aad
scas
cwtl
test
test
add
adc
cmp
dec
dec
icebp
lahf
cld
adc
dec
add
loope
pusha
add
add
out
ficoml
add
or
or
push
add
aas
stos
mov
pop
jne
dec
add
add
sbb
jne
inc
int
ja
mov
push
add
add
adc
inc
sbb
fidivrl
addr16
push
add
add
sub
and
add
add
add
xor
fwait
adc
add
mov
inc
add
and
add
add
popf
inc
add
dec
test
lods
jp
stos
cmp
sub
xchg
mov
add
sbb
insb
add
push
lock
inc
adc
jl
popf
sahf
out
pop
and
add
jmp
fsubs
sub
jb
xchg
mov
push
loopne
aad
xchg
xchg
aad
xor
rcl
fisubs
add
add
push
lret
push
mov
push
xchg
push
add
add
cmpl
lea
sbb
in
mov
lcall
add
mov
mov
mov
xor
add
push
out
cs
hlt
and
stos
push
add
xchg
push
inc
ficompl
cmp
lret
add
cltd
xor
add
test
test
add
add
add
lock
add
jmp
mov
add
jnp
jo
test
mov
lret
adc
add
popa
sbbl
imul
add
stos
and
add
bound
cwtl
imul
cli
push
out
bound
push
add
adc
pop
add
imul
xor
add
add
jns
jbe
mov
jmp
mov
inc
add
add
lcall
add
sbb
enter
add
mov
mov
add
ret
aas
add
int3
xor
sub
ror
inc
add
cld
je
rcr
adc
mov
dec
add
add
and
rolb
sub
sbb
add
add
scas
cmp
sbb
or
loopne
stc
popa
mov
cmpsb
add
cmp
cmp
push
mov
lock
sub
jle
inc
std
jmp
movsl
sub
and
add
pop
sbb
xlat
inc
pop
add
and
add
data16
push
pushl
cli
add
add
addr16
imul
add
sbb
out
cmp
data16
aad
dec
push
add
cltd
in
push
sbb
scas
lcall
std
inc
push
cmp
lods
movb
mov
mov
popf
data16
add
and
add
lret
inc
xor
add
add
pop
add
mov
ljmp
sub
mov
cmp
outsl
fldcw
add
sahf
cmpsb
push
mov
cmp
jae
xchg
add
sbb
outsl
add
test
daa
fiadds
ja
rep
movb
add
lods
xchg
push
add
add
add
xchg
cmpsl
lahf
fnsave
in
leave
mov
test
pop
pop
add
stos
add
testb
les
xchg
add
add
test
push
insl
sti
mov
and
xor
punpcklbw
mulb
add
add
sub
jg
sti
cmp
ja
cmc
cmpl
add
and
add
add
jno
inc
add
subl
notl
lea
sbb
cmc
push
jmp
loope
add
stos
add
add
xchg
xchg
cmpsb
inc
add
mov
sub
fdivrl
imulb
test
cli
pop
ror
or
lea
lods
lret
push
add
cmc
bound
mov
add
add
imul
add
mov
mov
add
jne
mov
push
add
js
cmp
push
add
and
add
xchg
add
aaa
or
inc
idivb
cmp
lahf
dec
add
inc
inc
cmc
dec
jne
into
imul
imul
int3
lret
into
or
in
ljmp
jg
add
dec
add
lcall
rclb
add
sbb
ja
add
add
insl
jmp
dec
mov
cmp
mov
imul
sbb
add
add
adc
popa
and
add
add
adc
leave
xchg
fldt
push
add
movsl
add
jp
push
mov
add
add
cmpl
or
push
add
mov
add
mov
add
dec
add
add
ret
mov
or
add
add
dec
add
add
dec
clc
jmp
add
in
inc
add
push
add
and
scas
pop
xor
xor
lods
or
bound
cld
push
xchg
inc
or
and
es
sarl
sahf
jns
add
mov
add
cmp
sub
jl
mov
ret
xor
add
mov
xchg
ja
and
add
jge
mov
add
jne
add
jmp
inc
add
inc
add
push
add
sub
loopne
push
add
add
jl
mov
add
hlt
hlt
aas
cld
mov
out
dec
add
out
cwtl
lahf
xchg
pop
repz
add
adc
add
incb
ret
adc
add
ljmp
add
add
add
xor
add
add
inc
pop
sub
or
mov
and
inc
add
popf
adc
pop
fdiv
mov
add
stos
aam
add
pusha
add
sbb
add
push
pushf
jne
test
add
adc
add
mov
dec
add
and
add
loope
pop
movsl
add
sbb
pop
xchg
cmp
test
and
out
sti
jmp
xchg
gs
and
add
add
in
js
add
add
add
add
sldt
push
cmc
add
mov
aam
dec
out
cmp
inc
add
nop
pop
add
add
jne
outsb
add
or
dec
mov
add
or
add
mov
cmp
into
ja
add
rclb
testb
xor
add
fisubs
lahf
sbb
arpl
add
sarl
add
enter
int
hlt
add
sub
sbb
ja
outsb
add
cs
movsb
and
add
push
add
add
push
icebp
add
push
cwtl
add
mov
add
jecxz
add
add
stos
mov
inc
add
and
push
pop
add
add
add
mov
imul
add
loopne
jmp
add
cmpsb
std
mov
add
int
aas
es
add
adc
add
jge
lods
in
nop
mov
test
pop
stos
add
add
or
push
add
cmc
stc
addr16
push
add
cli
or
xorb
add
enter
inc
pop
dec
adc
shlb
add
stos
add
mov
es
add
pop
add
das
add
add
inc
add
aad
add
add
add
xor
sub
add
in
jbe
push
add
cltd
sbb
mov
andl
or
lahf
lods
lods
leave
test
dec
add
sbb
push
and
push
add
mov
jb
fiadds
mov
add
add
mov
xor
es
add
add
sar
add
scas
imul
testl
int3
es
aaa
or
lahf
adc
add
mov
add
jecxz
jb
mov
sbb
stos
or
repnz
testb
pop
xor
cltd
adc
add
cmp
pop
imul
add
mov
pop
add
mov
test
mov
fnsave
aas
add
or
lods
mov
xchg
idivb
add
loopne
cmp
cmp
popf
inc
add
push
bound
xchg
in
in
clc
lret
or
or
cmc
jl
test
or
xor
add
add
dec
add
mov
stos
gs
mov
xchg
outsl
outsb
add
cli
out
imul
xor
add
popf
add
push
add
outsb
add
cmp
push
add
mov
in
dec
add
jp
or
lahf
lods
mov
jns
fnstcw
dec
loope
mov
pop
add
sbb
and
mov
xchg
test
roll
fidivrl
cltd
aaa
lock
push
lock
mov
pushf
addr16
rcr
cli
stc
es
add
or
xor
sti
mov
pop
add
and
aam
add
leave
fsubr
add
cmp
pop
test
add
add
aaa
add
add
bound
jbe
push
xor
add
add
or
or
cmpsb
fnsave
or
add
add
or
jmp
push
add
mov
pop
add
or
aas
out
movsb
insb
add
xor
add
mov
inc
outsl
shrb
orl
rcr
mov
aad
add
push
mov
add
js
cli
and
or
mov
cld
in
add
sti
mov
into
cmp
xor
add
cmp
add
add
repnz
xlat
jnp
jp
push
fstl
test
cmc
mov
insl
pushf
filds
add
inc
add
imul
add
add
add
std
mov
mov
and
add
push
add
push
les
inc
xchg
js
jge
add
enter
push
add
in
push
add
and
add
gs
cmp
addr16
sub
pop
and
add
cmp
mov
jg
inc
and
add
in
lds
adc
add
or
sbb
inc
add
and
push
out
rolb
out
imul
fmul
imulb
jae
adc
mov
add
bound
out
sbb
add
push
out
inc
add
add
cmpsb
mov
pop
cmpl
sbb
mov
std
les
inc
add
pop
lahf
add
inc
add
mov
xchg
inc
sbb
rcr
xor
into
ret
adc
mov
rcll
cli
test
cmp
push
add
pop
mov
popa
mov
pop
add
out
scas
aas
cmp
inc
add
add
aas
lods
das
xor
pop
add
add
jp
std
jae
in
jle
test
add
mov
add
sahf
mov
nop
cwtl
push
add
icebp
adc
fdivrs
mov
out
lods
jb
mov
add
add
lcall
jbe
dec
add
add
repz
add
sub
rcrb
jae
ja
push
dec
add
idivl
aam
or
into
insb
add
and
add
insl
lcall
jge
notl
shll
sbb
clc
push
add
pop
cltd
inc
add
dec
add
mov
push
add
xchg
fstpt
andl
data16
aas
int3
test
sub
or
xchg
loopne
mov
iret
lods
stos
in
in
and
add
jp
outsb
add
push
add
loopne
sbb
dec
add
pop
add
push
jmp
repnz
xlat
scas
or
adc
add
pop
out
adc
or
ljmp
pop
sub
xor
add
enter
imul
add
enter
inc
add
sub
jne
aam
mov
rcrl
lcall
pop
ret
add
faddl
mov
ret
lret
push
add
inc
add
fwait
into
imul
jns
jno
dec
add
stos
push
pop
add
lea
rorl
bound
pop
sub
push
add
fstpt
cmc
pop
add
ja
idivl
ja
leave
add
sub
add
xchg
insb
add
push
add
popa
adc
add
out
enter
add
and
jb
arpl
adc
add
or
jmp
pop
movsl
add
inc
add
jae
decb
add
add
cmp
sub
std
lret
stc
xchg
frstor
std
mov
arpl
mov
push
add
push
add
js
push
push
add
inc
add
pushl
mov
or
push
add
je
vpmaxsw
jns
push
add
popa
gs
mov
push
das
pop
add
add
sbb
pop
add
add
mov
add
add
sbb
aas
add
add
lcall
add
jmp
mov
hlt
es
add
add
dec
dec
jb
mov
jecxz
fstpl
add
add
pop
adc
out
dec
add
add
xor
mov
cmpsl
loop
call
add
ficomps
add
xor
add
cmp
test
add
ret
add
add
pop
add
nop
push
gs
mov
add
xor
add
and
add
pop
lock
xchg
pop
dec
xor
add
lahf
lods
repz
pusha
add
add
add
std
xchg
add
movsl
lea
or
pop
jo
mov
sbb
ljmp
daa
lds
jmp
aas
push
add
jno
push
add
add
add
add
repz
repnz
bound
sbb
shll
add
add
aas
pop
jns
pusha
add
scas
frstor
add
add
add
add
cmp
jmp
inc
add
add
push
add
daa
and
inc
add
dec
add
mov
imul
out
lcall
push
add
pop
add
add
jl
nop
xchg
xchg
adc
add
pop
das
mov
jb
cltd
mov
or
add
outsb
add
jp
cmp
add
sbb
sub
les
add
sbb
std
iret
add
dec
add
add
mov
xor
add
cmpsl
sbb
inc
add
add
movsl
or
icebp
mov
mov
or
xlat
push
addb
sti
add
test
mov
sbb
add
movl
add
add
sti
mov
xor
scas
fstps
add
inc
mov
insb
add
jge
jo
sti
repz
cltd
movsb
shlb
sub
inc
mov
jg
mov
les
add
add
lahf
mov
mov
fadds
mov
pop
add
popf
jno
dec
add
andb
jae
sbb
mov
pop
pop
add
push
add
hlt
add
add
and
add
scas
add
add
inc
sub
aad
cmp
ds
add
dec
add
add
or
sub
sar
adc
fcoml
add
scas
inc
add
add
pop
mov
add
or
sbb
add
add
or
lret
clc
fucomip
or
add
or
jge
xlat
push
test
add
xor
add
out
inc
adc
iret
add
inc
add
inc
push
add
fbld
push
add
in
cmpl
out
xor
jne
add
decb
add
inc
add
add
add
mov
add
xchg
ret
add
inc
add
fldenv
filds
add
jns
shl
loope
imul
add
test
sbb
ljmp
push
or
dec
rolb
test
bound
sub
sub
loopne
fcmovb
dec
inc
push
add
daa
cmpsl
add
add
pop
out
hlt
cmpl
mov
enter
add
push
add
icebp
outsl
xor
add
add
aam
js
push
add
cmp
add
pop
add
push
jl
insb
add
data16
addb
shrl
lods
cmp
push
pop
add
lret
mov
fldcw
add
mov
jge
add
rcrl
add
loop
iret
lret
jns
jae
add
sub
subl
mov
dec
cmpsl
pop
and
aad
mov
pusha
add
push
fadds
pop
test
and
gs
add
dec
outsb
add
adc
mov
sbb
test
lret
jp
notb
mov
enter
pop
add
and
add
or
ficomps
es
popf
sub
fldt
outsb
add
testb
add
cmp
push
bound
fnstenv
out
vandnpd
sbb
jge
or
jg
push
add
add
xchg
jbe
sub
push
add
xor
add
ljmp
add
dec
add
add
imul
add
cmp
and
add
cmp
add
xchg
add
sbb
pusha
add
in
add
add
add
movsb
js
fnstenv
add
out
lock
arpl
rolb
add
mov
rolb
mov
xchg
int
daa
add
ljmp
stc
fwait
cmp
fisubrs
and
and
xor
add
add
scas
cmp
test
dec
add
inc
or
pop
add
add
inc
add
add
jg
xchg
loop
xchg
aam
add
cli
mov
fiadds
fcom
leave
insb
add
add
inc
or
push
add
out
add
mov
and
add
daa
jecxz
mov
insl
dec
xchg
push
cmpsb
mov
xchg
lock
jno
sub
adc
add
add
pop
adc
xor
add
insl
dec
add
stos
in
xor
add
rolb
add
mov
int3
xor
add
pop
add
std
push
dec
add
lcall
sbb
cwtl
mov
add
add
add
jmp
add
sub
out
mov
add
mov
loop
add
icebp
imul
add
add
cmc
add
fs
push
test
cmp
adc
add
add
add
cmp
cmpsl
mov
test
aam
out
xchg
xor
jl
inc
inc
sbb
pop
add
add
mov
add
gs
stos
add
cli
leave
enter
sub
add
and
add
inc
add
jmp
add
add
add
push
jmp
mov
ja
jo
shrl
add
leave
das
loope
cmp
ljmp
aad
add
mov
push
in
test
imul
inc
add
fucomip
cmp
lods
mov
ss
add
cltd
push
popa
jae
add
add
lds
add
push
out
ret
sbb
push
cmc
cwtl
mov
add
jo
or
repnz
xor
sub
adc
add
mov
lds
jae
out
test
xor
daa
cmp
bound
xchg
mov
jmp
and
add
add
adc
add
dec
add
mov
mov
add
add
xchg
mov
sbb
or
xchg
rcr
push
adc
imul
leave
add
jl
int
add
push
add
fidivl
sub
pop
mov
xor
repz
jne
or
scas
lahf
push
ds
aas
push
jl
inc
mov
add
or
jecxz
mov
lock
in
add
xlat
imul
add
and
add
push
add
mov
data16
fcmovnu
and
notl
jbe
inc
mov
jne
test
test
push
aam
out
sbb
in
jae
outsb
add
mov
mov
mov
ret
add
add
fiadds
out
mov
or
xor
mov
add
jno
add
xor
add
idivb
jns
xchg
sbb
out
dec
add
xlat
popf
rolb
jp
mov
mov
sub
shlb
daa
scas
add
adc
cmpsl
sti
sbb
call
and
inc
add
or
add
add
fucomp
dec
ds
and
cltd
es
add
add
push
add
jp
cmp
fiaddl
xchg
add
inc
add
pop
add
inc
add
sub
add
xlat
add
mov
fwait
into
test
aaa
pop
add
add
inc
add
sbb
shrl
dec
add
fistpll
insb
add
sub
adc
dec
add
sub
add
repnz
add
xchg
inc
add
pop
push
aad
sub
lods
clc
xchg
int
lret
jb
lock
jns
add
add
add
or
and
add
movsb
adc
add
rol
push
add
dec
add
jp
int3
in
repz
add
xor
cmp
cmpsb
daa
cmp
adc
add
pop
add
add
repnz
mov
add
jae
pop
add
sbb
stc
popa
cmp
es
mov
add
sub
sbb
inc
lods
mov
jecxz
test
sbb
pop
repz
mov
outsb
add
clc
int3
xor
add
call
add
add
jg
jge
add
inc
add
add
sbb
push
add
inc
add
add
fadds
sbb
mov
call
or
inc
add
and
rcll
add
add
in
adc
add
or
inc
imull
and
add
in
frstor
mov
add
push
clc
or
sub
test
adc
sahf
fimuls
add
lods
call
inc
add
add
lret
add
add
pop
add
add
add
or
out
idivl
fst
data16
sub
loop
inc
add
add
in
cli
sub
push
add
add
mov
or
sub
in
aaa
test
or
xor
add
data16
in
add
fistps
pop
add
leave
and
add
jmp
xchg
mov
cli
dec
add
nop
sub
in
rcrl
call
add
or
icebp
push
add
lcall
out
add
xchg
dec
add
add
iret
add
add
ljmp
pusha
add
dec
add
aam
add
ret
add
xchg
fcoms
cli
fisubrs
gs
add
add
gs
mov
jne
and
jge
add
add
pop
cli
cmp
push
dec
add
adc
mov
cmpsb
testb
add
add
add
push
sti
mov
add
rdmsr
movsl
add
push
add
ror
inc
mov
sbb
shll
add
sahf
inc
add
addl
jno
addb
add
add
mov
inc
add
fadds
mov
add
add
lahf
sub
mov
jecxz
push
jo
mov
fnstcw
mov
outsl
cli
dec
daa
adc
xlat
insb
add
mov
dec
add
sbb
inc
pop
xchg
sub
push
add
bound
jno
xchg
add
cmp
add
lea
repz
sub
test
jp
or
pminub
add
cmp
out
add
dec
push
mov
add
add
add
call
stc
flds
add
push
add
addr16
add
out
add
xchg
add
adc
add
add
fiaddl
and
out
aad
sub
lea
dec
add
lods
add
cmp
or
or
or
imul
jg
sbb
add
jmp
lcall
lods
push
add
add
pop
add
cmpsl
xor
add
xor
add
mov
and
add
fsub
mov
mov
add
add
add
movl
add
add
scas
inc
add
pop
mov
pop
movsb
add
fsubs
roll
clc
adc
rcrl
add
inc
shl
sete
out
les
mov
pop
xchg
add
add
out
data16
nop
mov
mov
inc
add
add
imul
sar
cmp
jg
cmpsb
add
mov
packssdw
dec
inc
add
adc
add
xchg
push
out
dec
scas
scas
and
add
js
push
mov
push
movl
movsb
aas
aam
testb
mov
mov
pushf
add
dec
daa
mov
testb
sbb
mov
add
add
pop
adc
leave
imul
add
dec
and
gs
andnps
or
add
std
lcall
add
mov
add
add
add
pop
fsub
mov
lods
mov
mov
aas
pusha
add
test
add
push
add
add
and
loop
sbb
adc
add
ds
sub
es
add
cltd
dec
ret
dec
inc
imul
add
dec
add
add
add
add
dec
adc
add
mov
fbstp
pusha
add
ror
cwtl
ret
adc
add
add
nop
and
shll
jle
out
hlt
adc
add
insl
adc
add
aad
dec
add
lret
repnz
push
add
sub
loopne
bnd
enter
movsb
lds
filds
call
and
jecxz
fiaddl
mov
lods
push
add
es
add
push
sbb
sbb
mov
repz
pop
add
inc
divl
call
roll
fcom
fwait
lds
pop
add
stc
lahf
addr16
add
mov
jne
pop
dec
sub
sub
test
or
in
cld
mov
dec
xchg
movsl
add
ret
inc
xchg
mov
mov
add
inc
add
push
add
jmp
lods
inc
add
sub
mov
add
mov
jg
mov
lcall
add
pop
add
and
icebp
cmpsl
in
add
mov
xchg
out
mov
bound
negl
add
mov
dec
mov
jmp
pop
decb
pop
add
add
int3
jmp
add
or
sub
mov
xchg
xor
sahf
add
test
jmp
mov
add
in
mov
add
xor
sbbl
rorl
add
add
fstps
add
add
add
add
add
int3
fnsave
cmp
sbbl
std
sbb
xor
push
repz
add
jno
push
add
cmp
cmp
jbe
push
add
add
mov
add
xchg
andb
add
jmp
fdivp
sub
add
pop
add
cmp
mov
out
popa
push
or
mov
outsl
sbb
pop
in
or
je
pshufw
pop
inc
clc
xor
add
push
cltd
add
add
out
mov
add
mov
lods
push
pop
xor
lret
cld
fildll
fnstsw
cli
mov
fucomip
loopne
fcmove
push
ja
sub
imul
ljmp
sahf
insl
fwait
repz
fldenv
repz
mov
add
adc
adc
add
jge
imul
mov
jge
icebp
sbb
jp
ja
add
stc
add
push
add
movsl
add
mov
push
add
add
add
mov
add
mov
and
add
test
or
dec
ficompl
add
dec
add
cli
jmp
add
std
mov
xchg
and
add
dec
imul
inc
add
int3
addl
add
mov
fdivrs
sahf
xchg
aas
and
xor
push
lea
add
cmc
push
add
imul
sbb
mov
scas
cmp
out
add
adc
cld
jmp
into
add
out
movsb
dec
add
add
add
push
add
add
rcll
scas
xchg
shlb
aad
add
in
lods
or
movsl
sub
mov
add
shll
sahf
push
and
add
data16
shr
mov
add
dec
add
inc
add
shll
jno
cmp
rorb
add
rclb
push
add
mov
dec
sub
jecxz
add
add
or
es
add
and
add
sub
cmpsb
fcmovnbe
fwait
inc
fcmovnbe
mov
add
add
cwtl
inc
ja
pmuludq
popl
test
movsb
mov
jg
jmp
ja
add
add
add
dec
add
cmp
push
add
into
lahf
sbb
ret
add
data16
mov
add
data16
jne
add
lods
cli
fildl
cli
incb
inc
add
lea
jb
jg
add
sbb
and
xor
cmp
sbb
mov
jo
addb
add
add
adc
popf
out
pop
add
push
inc
add
dec
sub
mov
inc
add
jo
jp
shlb
jb
repnz
add
cmp
add
add
or
add
add
add
cmc
mov
pop
add
mov
add
add
or
cmp
add
add
cmp
jmp
std
adc
add
cmp
pop
add
push
add
or
sbb
pop
mov
xchg
xor
lret
add
movsl
add
fisttpl
mov
xchg
cmpsb
mov
and
hlt
push
pop
sbb
jge
add
cmp
cmpsb
add
jg
lcall
push
pop
je
mov
and
insb
add
mov
jae
add
add
aas
aas
add
add
add
mov
add
lods
ret
addr16
ret
mov
add
rcrb
add
enter
dec
push
add
inc
add
add
xchg
popa
movsb
scas
and
fsub
xor
dec
inc
add
mov
adc
dec
scas
mov
or
lea
push
add
data16
mov
arpl
add
push
add
pop
loop
and
in
pushf
adc
add
mov
mulb
cmpsb
add
xor
fadds
cltd
outsl
pop
es
xor
add
pop
addl
push
add
or
insb
add
mov
add
add
add
add
add
fsubl
pop
add
enter
testl
imul
pop
pop
sahf
add
mov
jne
add
or
cmp
cmp
movb
push
add
push
add
dec
add
push
cmc
add
mov
adc
push
mov
mov
pushf
aaa
aaa
add
add
insl
mov
xchg
add
add
in
lock
bound
sbb
cltd
sub
pop
cli
add
clc
out
sub
rcrb
add
add
dec
add
pop
add
mov
add
cld
lods
stos
and
add
xchg
add
jge
and
fcoml
mov
add
xchg
fmull
jbe
mov
add
add
ltr
add
fiaddl
pusha
add
push
add
jg
add
xchg
push
adcl
add
add
popf
push
push
add
xchg
add
add
add
sub
xor
add
push
add
rclb
jb
rorl
add
xchg
fucomi
adc
add
add
add
add
fistpl
add
adc
add
inc
add
sbb
and
add
add
dec
add
add
add
pop
add
add
addr16
inc
imul
sbb
bound
sub
jae
jg
cmp
daa
incb
loope
add
dec
dec
add
test
andl
outsb
add
add
add
add
mov
and
stc
cld
mov
pusha
add
inc
add
repnz
pop
notl
dec
add
filds
xchg
and
add
mov
jae
add
lret
push
xchg
adc
xlat
data16
add
pop
add
add
fdivl
add
insl
pushf
fbld
sub
pop
loopne
push
add
add
lahf
mov
sti
sub
cmp
sahf
push
mov
sbb
mov
inc
add
insl
repz
dec
add
add
dec
add
push
add
aam
add
adc
add
js
pop
add
push
imul
pop
xchg
adc
pop
add
add
sub
insb
add
std
cli
jnp
pop
pop
add
add
xor
add
add
movsl
stos
aas
mov
inc
mov
add
add
outsb
add
aad
cmp
add
jns
add
add
add
outsl
leave
out
push
or
or
or
mov
loopne
and
add
or
jns
add
sub
pusha
add
pushl
jae
add
mov
add
sti
lods
sub
in
lcall
in
shl
pushf
pusha
add
add
sbb
adcb
das
rcrl
in
push
add
push
aad
stos
cli
cli
push
add
inc
daa
mov
adc
fwait
outsb
add
into
or
xchg
subb
negb
cmp
nop
pop
add
add
adc
add
movsl
and
add
in
dec
add
int3
xchg
addr16
add
cwtl
shrl
repz
pop
add
add
clc
testb
or
es
scas
fwait
xor
xor
add
lahf
sbb
add
push
cmpsb
out
adc
pop
loope
fiadds
mov
nop
push
add
sub
jge
xchg
fcmovne
cmp
imul
pop
add
stc
icebp
add
xchg
add
add
jnp
mov
dec
je
rolb
add
out
add
add
sub
test
out
add
or
lock
add
xchg
icebp
rolb
add
cltd
add
in
jge
and
add
inc
add
sti
inc
add
xor
pop
add
dec
add
add
mov
nop
sbb
stc
pop
add
xor
add
sbbl
subl
mov
jnp
loop
add
add
fs
xor
add
add
add
add
push
or
aam
lret
cs
out
and
jae
cwtl
scas
daa
outsb
add
ljmp
repnz
mov
popa
inc
cmp
add
mov
ret
incb
pop
add
ss
aas
andl
in
add
sub
int3
int3
fwait
mov
mov
cmp
stos
mov
add
push
cli
add
jmp
sti
add
stos
inc
add
int3
push
add
mov
adc
pop
fidivrs
js
and
add
push
rolb
lds
pop
add
pop
add
mov
mov
jge
add
js
repz
push
shlb
add
jecxz
jmp
add
mov
mov
push
xchg
shlb
push
add
add
stos
sub
scas
shl
inc
add
popf
add
les
fimull
xchg
loopne
mov
pushf
add
add
mov
sti
aaa
add
mov
pop
add
movsb
cwtl
stos
mov
orb
mov
in
mov
push
and
add
incb
cmp
jne
inc
add
xor
xchg
add
add
push
add
add
aaa
add
jle
in
aaa
int3
add
add
es
iret
mov
sbb
add
scas
add
mov
incb
mov
decl
popa
js
jmp
orl
iret
scas
xchg
mov
out
inc
dec
add
sub
mov
jo
or
mov
add
jae
hlt
mov
push
jnp
stos
jmp
add
insl
fcom
std
aam
lods
repz
add
mov
add
mov
test
and
add
add
add
xchg
add
add
add
push
add
dec
add
xor
add
sbb
add
das
cmc
arpl
pop
add
add
sub
cld
outsb
add
mov
add
imul
xchg
imul
add
jbe
and
add
sub
lea
fstps
dec
pop
add
jnp
add
inc
int3
push
add
out
add
xchg
add
outsb
add
outsl
out
and
loopne
adc
add
outsb
add
movl
push
add
push
add
inc
loope
ljmp
add
cmpsb
repnz
insb
add
xchg
fcoml
add
adc
inc
add
fisttps
sub
jle
mov
add
inc
add
jle
and
and
add
xchg
add
loop
jmp
push
add
cmpsl
decb
adc
add
iret
xchg
pop
loopne
mov
outsl
icebp
push
add
aam
add
je
xchg
pop
add
adc
sbb
and
add
jne
imul
js
xchg
mov
gs
shl
test
data16
sub
dec
xchg
inc
add
pusha
add
add
inc
add
fadds
incl
push
push
add
mov
xchg
rcll
add
clc
add
add
sarl
aas
mov
add
mov
adc
add
pop
sub
push
add
add
xor
dec
inc
xchg
in
xor
in
add
fstpl
rclb
dec
inc
add
add
or
add
lds
xchg
popf
rcrb
jle
iret
jno
xor
add
roll
stos
hlt
jae
jmp
iret
lods
push
fistl
pop
add
add
pop
lock
pop
add
xor
add
add
pop
cli
add
add
add
cltd
insb
add
add
cli
inc
add
idivl
fmul
lock
mov
add
add
cltd
enter
jae
cmp
ds
mov
mov
add
cltd
xchg
ret
orb
or
aam
arpl
je
insb
add
add
jmp
in
mov
inc
add
push
add
pop
pop
sbb
fdivs
stos
add
das
out
jp
outsb
add
add
jae
jl
mov
dec
add
add
add
inc
jecxz
adc
xchg
shll
mov
mov
leave
sbbl
mov
aas
imul
add
js
mov
add
add
mov
outsl
fwait
adc
add
add
cmc
and
add
mov
dec
inc
xor
sbb
sbb
lock
lahf
add
sub
jnp
xchg
loopne
add
add
and
push
add
rcrl
add
add
add
fcoms
lods
in
jo
fsubrs
iret
pusha
add
pop
add
fistpll
xchg
push
scas
add
dec
add
cmp
mov
out
lahf
pop
add
mov
insb
add
mov
stos
imul
inc
add
push
mov
add
in
add
hlt
imul
sub
add
add
mov
int
add
add
add
pop
add
inc
add
cmp
or
jnp
pop
sub
ja
idiv
inc
cmp
pop
add
add
shl
dec
inc
mov
cld
outsl
out
mov
add
add
aam
dec
insb
add
and
cmp
mov
inc
testl
add
jle
lods
aas
xchg
out
andl
add
add
mov
dec
int
sub
add
add
push
shlb
sub
and
mov
push
add
sbb
fdivrs
es
call
add
add
cwtl
scas
stos
xor
add
adc
movsl
mov
aam
cltd
fsub
or
sub
jle
mov
es
adc
add
add
pop
ja
flds
jae
out
add
sub
movl
mov
add
jns
data16
int3
cmc
mov
adc
add
add
add
add
outsl
xor
add
add
insl
cmp
pop
stos
test
roll
stos
inc
add
cmp
sub
adc
add
cwtl
iret
cmpb
dec
add
aam
push
add
or
cmpsb
inc
xchg
repz
js
movsl
mov
jno
add
push
add
in
sbb
sti
int
xlat
and
add
mov
lret
or
dec
add
jmp
xor
lret
mov
pop
jo
movsb
xchg
bound
push
add
iret
add
movsl
sub
mov
cmp
xchg
mov
jle
push
add
mov
jle
aad
in
or
xchg
add
mov
mov
pusha
add
int3
add
add
mov
mov
sub
or
and
and
add
add
les
outsl
scas
pop
sub
roll
aad
and
add
mov
add
cmpsb
mov
add
sbb
and
add
add
add
gs
add
daa
inc
add
imul
add
outsb
add
xchg
sbb
add
lods
ljmp
sahf
stos
lods
dec
add
sub
and
xchg
sbb
xchg
ret
jl
fisubs
outsb
add
add
add
out
jb
imul
add
mov
add
nop
xor
add
push
add
xor
add
loopne
roll
add
add
add
add
cld
add
rcrl
dec
add
add
and
fimull
xchg
cmp
mov
lea
rclb
add
or
test
add
add
mov
je
cmp
les
int3
dec
add
dec
add
inc
add
cmp
imul
fnsave
add
test
push
xchg
mov
test
add
test
mov
je
dec
inc
mov
add
push
add
add
add
add
mov
clc
sub
lods
pusha
add
leave
inc
push
add
cmp
xchg
add
add
test
sbb
adc
add
adcl
add
in
adc
xchg
jno
shll
pushf
push
push
push
add
push
add
out
dec
add
add
add
test
push
add
pushf
dec
add
xor
add
lods
pop
sbb
pushf
add
push
add
leave
add
add
xorb
add
add
repz
rolb
sbb
icebp
add
add
repnz
add
add
loope
add
add
mov
imul
subl
faddl
stos
add
jg
inc
add
outsl
imul
shll
cmpsl
outsb
add
xor
add
imul
and
add
add
add
xor
add
xor
add
lea
add
gs
add
push
add
loop
add
inc
add
jle
cmpsl
dec
add
push
push
add
in
out
add
iret
out
push
into
add
pushf
aam
add
add
cld
rorl
imul
sub
stos
sbb
add
lahf
add
add
cmpsl
cmp
test
test
inc
add
mov
clc
pop
and
add
add
xchg
add
add
mov
mov
gs
cld
mov
add
cli
sub
cmp
jb
xor
add
ja
push
pop
pop
push
pop
jge
ja
sub
leave
fistl
adc
lods
mov
sub
mov
cli
add
add
sbb
sbb
je
int3
inc
stos
sbb
sarl
into
add
or
push
lods
jns
out
sahf
ja
flds
xlat
dec
loope
add
add
add
in
popf
jle
inc
add
jg
add
nop
add
inc
jns
out
add
or
inc
dec
mov
adc
cmp
mov
sbb
add
popa
add
push
add
outsb
add
insb
add
addl
jns
jo
lahf
loopne
aad
dec
add
lret
lods
push
xchg
add
sbb
insb
add
mov
cmp
cli
mov
add
add
mov
add
add
sbb
iret
insb
add
mov
push
xlat
add
inc
add
lahf
add
jg
loop
daa
faddl
clc
xor
add
sub
push
addb
bound
inc
add
out
push
add
hlt
xchg
call
daa
add
popa
icebp
jo
add
add
add
mov
add
int
shl
or
ja
mov
scas
mov
adc
add
lds
cmc
add
inc
add
out
test
fbstp
ds
filds
popf
xor
fmul
cmp
add
inc
jmp
add
pop
out
cmpsl
xor
add
js
loope
bound
cli
dec
pop
in
adc
add
cmp
comiss
and
add
xor
inc
and
mov
fwait
inc
add
dec
add
fcoms
add
add
xchg
mov
inc
add
xchg
data16
pop
mov
shlb
add
dec
add
popa
add
jp
xchg
jmp
mov
adc
push
add
or
mov
mov
in
int3
lds
jge
xor
int
leave
or
cmp
cmp
repz
test
popf
add
lds
addb
add
add
adc
mov
dec
cmpsl
addb
std
add
clc
and
mov
pop
add
mov
sti
shrl
xor
and
xor
xorb
addr16
mov
or
adc
ljmp
and
add
dec
mov
add
inc
add
dec
add
add
push
add
add
pop
jg
mov
inc
dec
scas
scas
lods
dec
daa
mov
ljmp
jle
out
dec
imul
lods
add
add
add
jbe
xchg
mov
xchg
and
or
sub
test
lcall
inc
add
push
str
add
idiv
and
xchg
lea
mov
lds
and
xchg
or
inc
add
int3
rcrl
mov
inc
add
sub
aas
out
add
stc
jp
mov
pop
add
add
jg
xor
call
add
add
sbb
rclb
ffree
jecxz
add
or
xchg
shll
cmpsl
repz
mov
push
add
dec
sbb
cmpsb
xchg
mov
add
jne
push
lock
vsubsd
dec
mov
push
lcall
jp
push
ja
jno
add
add
mov
enter
add
lret
stos
jle
hlt
push
sti
add
and
xor
push
sub
adc
add
add
in
xor
add
add
cli
int3
ja
data16
add
mov
test
pop
add
lds
jecxz
add
pushf
add
pop
add
shll
add
add
add
sub
sub
add
shl
int3
sub
jmp
and
add
or
jp
flds
cli
add
or
or
cmpsl
fdivl
aad
xchg
push
add
sbb
mov
mov
inc
add
add
test
add
push
jle
repz
negl
xchg
lock
push
push
add
add
pushf
stos
mov
xchg
mov
adc
repz
fldl2t
jle
pop
add
imull
add
popa
add
mov
and
loopne
inc
add
daa
imul
je
sbb
popf
lret
jge
add
mov
jecxz
clc
sbb
add
sbb
jmp
lret
mov
add
add
lcall
add
add
inc
add
adc
add
sbb
jl
stos
pop
add
mov
sub
dec
add
adc
add
mov
into
push
add
dec
add
lds
push
add
mov
gs
or
sbb
aaa
sbb
push
add
fldl
mov
or
fidivs
xor
add
add
int
adc
add
movsl
add
jnp
sbb
ret
loope
push
pop
add
mov
xor
add
add
loopne
stos
mov
outsb
add
jne
add
add
iret
add
fldl
add
pop
add
aad
sub
xchg
xchg
out
mov
clc
lock
xchg
popa
adc
jl
xchg
out
mov
and
add
jne
jl
mov
xor
add
dec
add
into
add
add
sbb
add
incb
aad
insb
add
xor
adc
bound
add
lods
add
aaa
add
adc
ljmp
repz
in
jae
movsl
mov
es
inc
add
pushf
in
or
jne
add
xchg
and
fcom
test
fistl
mov
sbb
aad
cmp
mov
add
in
int
mov
add
lds
add
add
jmp
or
repnz
add
int3
mov
inc
add
xor
mov
stos
sub
int
add
or
add
xchg
and
mov
pop
add
inc
jo
jne
dec
mov
add
add
jnp
in
dec
or
mov
inc
nop
enter
imul
add
add
add
insl
jb
out
loope
cmpsb
push
add
daa
add
pushf
imul
test
mov
add
mov
add
pop
add
xor
add
and
add
adc
add
mov
rorb
negb
add
sub
adc
add
ret
loope
clc
inc
push
lea
repz
mov
pop
mov
add
add
add
add
int
test
dec
add
iret
add
add
jb
inc
aaa
xor
mov
ror
sbb
mov
push
add
xchg
add
fiaddl
outsb
add
xchg
not
mov
stc
xchg
out
add
jmp
in
jle
or
add
test
aas
sub
fcomip
jne
shlb
add
lahf
rclb
clc
ljmp
add
sub
repz
ds
inc
sub
loop
add
jmp
jns
add
sub
test
imul
or
inc
adc
add
jb
push
ljmp
xor
pop
jb
dec
cmp
int
add
loopne
cmp
sti
xor
add
incb
dec
loop
mov
mov
inc
add
or
mov
out
repnz
pop
add
jo
enter
add
pop
dec
add
outsb
add
stc
sbb
mov
stos
and
add
add
xchg
ds
push
sub
testl
mov
roll
push
add
add
or
pop
inc
add
shl
or
add
xchg
lret
imul
cld
xchg
mov
shr
xor
add
add
add
dec
add
int
add
addr16
add
imul
adc
xchg
jne
loope
in
jae
xchg
dec
cli
and
mov
add
jae
cltd
add
add
movsl
add
out
mov
push
add
add
outsl
add
push
add
out
mov
fists
sbb
xchg
sbb
push
and
add
in
aam
arpl
jle
out
jns
sahf
cmp
data16
mov
cmpsl
xor
cmp
imul
add
mov
insl
pusha
add
push
stos
shrl
fldenv
pop
xor
add
push
scas
scas
adc
insb
add
mov
daa
cmp
rcrl
lret
cmp
add
je
xchg
insb
add
arpl
lahf
add
lea
add
xlat
popa
pop
pop
add
add
test
lock
jo
push
add
jo
add
add
outsl
adc
mov
push
add
inc
add
xor
mov
add
lret
into
fwait
clc
addr16
loope
aas
add
push
push
roll
dec
jbe
and
add
and
imull
mov
push
scas
add
aas
lret
dec
add
add
fsubr
scas
dec
add
imul
test
movsb
shl
mov
add
push
jle
dec
add
loopne
dec
add
xchg
aam
adc
and
add
and
loope
lods
xor
add
aad
movsl
push
ret
jmp
and
aas
push
add
mov
add
add
add
pop
out
mov
and
add
mov
inc
add
sbb
adc
xor
mov
add
xor
add
adcl
add
les
add
pop
repnz
or
push
imul
push
outsb
add
stos
push
add
call
add
dec
iret
push
add
xor
add
push
add
aaa
aas
add
inc
add
lret
add
xor
add
lcall
pop
add
add
mov
mov
and
add
sub
mov
jo
inc
mov
add
and
hlt
sub
iret
aam
outsb
add
push
add
add
lret
xor
or
inc
add
scas
in
push
add
add
xchg
add
add
add
xchg
sbb
push
aaa
je
cmc
inc
aad
push
add
inc
loopne
add
aad
add
pop
ret
mov
mov
mov
insb
add
hlt
leave
push
test
add
mov
decb
add
cld
add
sti
repnz
or
cmp
cmp
xchg
test
lds
push
add
pop
imul
add
in
shl
or
stos
pop
mov
push
add
fidivrs
aad
push
insl
repnz
jle
pop
out
push
loope
push
push
add
adcb
bound
pandn
jl
ror
adc
xchg
add
fldl
cs
aad
add
ljmp
or
add
lahf
add
mov
rorl
push
add
add
lret
pop
add
lods
jp
sahf
into
sbb
rclb
add
add
push
add
add
push
jl
insb
add
add
or
inc
lock
and
jg
mov
or
icebp
pop
loop
pop
fisubl
mov
mov
arpl
inc
add
cmp
jge
rorl
and
add
addb
sbb
cli
outsl
bnd
popa
aas
bnd
es
add
add
add
movsl
xchg
add
add
fildll
imul
add
push
add
xchg
aas
out
addb
jp
mov
add
cltd
in
insl
ficomps
lret
loope
push
add
ljmp
out
sub
pop
adcb
sbb
sub
push
add
or
pop
loopne
dec
add
jb
inc
nop
pop
in
icebp
adc
add
cmp
std
dec
mov
add
dec
aas
imul
leave
and
adc
add
daa
add
scas
xchg
pop
roll
sub
mov
dec
add
cmpsl
cli
je
dec
add
lret
out
fiadds
fidivrl
dec
add
out
mov
add
ret
cmp
add
add
sarl
lret
pop
add
call
lds
add
sub
dec
das
fisubrl
fildl
push
add
ja
ret
add
xor
pop
push
xlat
imul
mov
add
jle
fs
mov
rcrb
cmp
mov
mov
add
or
nop
out
in
out
and
xchg
faddl
sbb
adc
add
add
mov
lods
mov
mov
adc
test
loop
push
fcmovb
loop
add
stos
dec
dec
add
movsb
test
pop
fbstp
hlt
add
fs
loopne
add
and
adc
add
add
add
cmp
stos
cwtl
xorb
push
add
in
add
adc
cmp
adc
add
and
cmc
add
sub
movq
add
repz
fs
insb
add
sahf
sbb
jmp
aad
mov
out
std
add
mov
shlb
pop
add
inc
add
dec
add
mov
jae
add
add
add
in
mov
add
dec
add
call
pushl
add
pop
pop
add
add
int
je
dec
leave
jb
jno
mov
flds
pop
test
inc
add
lret
cmpsb
mov
rolb
test
add
mov
outsl
sub
push
add
add
xor
add
cmp
cmpsl
in
jo
and
add
sub
pop
add
mov
dec
aad
xor
add
fwait
xchg
add
cmpsl
and
movsb
add
add
cltd
nop
mov
shlb
pop
add
pop
add
add
bndstx
sub
mov
jbe
ds
repnz
int
int
imul
add
cmp
data16
xchg
arpl
adc
add
add
add
repz
lds
add
add
jns
add
add
int
add
lcall
insl
sbb
das
fimull
mov
mov
repz
add
jnp
dec
add
sub
roll
aaa
add
rcrb
cwtl
cmp
loop
xor
add
cmpsl
mov
mov
mov
hlt
xor
add
jecxz
sbb
fldt
jb
mov
sbb
cwtl
adc
add
add
add
inc
add
push
lock
nop
sti
or
leave
inc
add
call
roll
fdivrs
inc
add
and
xchg
add
inc
inc
sbb
or
in
inc
add
call
add
adc
mov
jbe
divl
mov
cmp
add
in
xchg
xor
add
xchg
pop
imul
movsl
cmp
sbb
and
cmc
popf
inc
popa
sub
ljmp
das
out
mov
xchg
push
add
ss
add
dec
mov
push
faddl
inc
add
js
hlt
jb
inc
add
sbb
pop
add
mov
inc
add
stos
ret
es
add
push
add
add
jbe
shl
adc
jne
mov
filds
sbb
cmp
ss
sub
lret
add
int
das
sub
push
push
outsb
add
rep
add
stc
add
jmp
mov
mov
out
ret
add
call
into
inc
outsl
setg
dec
add
outsl
or
dec
add
jb
clc
pusha
add
add
add
int
add
leave
sub
xchg
shrl
sbb
push
inc
add
adc
add
add
sub
sbb
test
add
out
sbb
add
push
add
stos
fstps
and
dec
dec
mov
out
adc
popf
and
std
jne
test
lcall
cltd
add
pop
add
pop
add
addr16
es
das
xor
add
add
and
rolb
cmp
lea
gs
sti
aam
add
dec
add
pop
pop
hlt
push
pop
jo
cs
sub
inc
fwait
jl
cmp
jne
roll
es
add
jnp
push
add
mov
jg
sarl
add
add
xchg
add
cmpsl
add
dec
add
jge
jle
cltd
test
outsb
add
fiaddl
mov
cmpsl
add
pop
add
add
int3
test
add
repz
fnstenv
sbb
bound
mov
push
add
add
roll
mov
aad
and
mov
leave
or
pop
add
xor
or
lret
cmpsl
add
rolb
lds
add
scas
adc
add
fisubrs
scas
ret
adc
mov
add
mov
ljmp
jle
les
addl
in
lock
jmp
mov
add
add
icebp
push
add
arpl
enter
add
fwait
jae
aam
imul
jne
xlat
xor
or
mov
loope
fmuls
std
adc
stos
adc
mov
adc
ja
xor
bnd
scas
mov
popf
imul
jb
inc
add
add
adc
stos
xchg
push
add
iret
add
add
push
ret
scas
clc
int
add
add
mov
in
cs
add
add
cmc
in
mov
clc
add
jo
mov
js
sti
sbb
dec
mov
cld
push
add
adc
add
pop
xchg
or
or
jmp
iret
ds
lcall
mov
sbb
das
pop
or
adc
xlat
mov
ret
add
add
insb
add
mov
das
imul
push
jbe
inc
add
xlat
xor
add
push
jl
jecxz
lods
pop
in
nop
sub
push
add
lock
mov
out
inc
add
cmpsb
push
inc
add
ljmp
in
dec
sbb
jns
sbb
add
les
ss
data16
cmp
push
add
add
cmc
add
ja
xor
inc
add
inc
cmp
add
push
jl
pop
add
faddl
and
popa
scas
mov
add
mov
dec
add
jns
dec
add
sub
ja
sbb
inc
add
add
add
mov
fimull
scas
add
icebp
add
int3
adc
cli
add
ret
xor
dec
cmpsl
mov
add
fwait
add
add
daa
fadds
mov
push
and
add
and
add
xor
add
jne
jo
xchg
pop
icebp
add
push
and
insb
add
jno
inc
addr16
xchg
xchg
ret
pop
add
aas
adc
add
dec
add
adc
xchg
push
add
push
add
lea
popf
loopne
cwtl
add
dec
add
cmpsb
sbb
add
add
sbb
and
push
add
movsb
je
xchg
sti
data16
movl
loopne
add
add
jp
bound
add
add
dec
add
adc
add
xor
add
add
mov
fsincos
aas
mov
pop
enter
mov
adc
push
add
adcl
pop
pop
add
call
cmp
push
add
dec
add
loop
add
or
sub
add
inc
add
out
fcomi
mov
fnstsw
nop
and
add
pop
pop
mov
cmp
pop
or
pushf
dec
mov
scas
sub
and
add
repz
sbb
enter
jp
pop
add
push
xorb
add
sbb
orl
inc
add
cmp
mov
cmpl
pop
pop
add
cmp
mov
dec
add
jmp
js
push
mov
movb
inc
add
add
jnp
sub
sbb
int
bound
jge
outsb
add
xchg
test
sub
add
mov
movsb
xchg
cmpsl
mov
imul
scas
mov
cmp
mov
xor
inc
jl
icebp
xchg
enter
add
adc
mov
out
add
add
add
verr
cmpsb
or
aam
rclb
loope
test
mov
test
add
daa
ret
add
adc
add
pop
mov
sahf
sahf
lds
rcl
mov
popa
sbb
adc
add
sub
and
insl
mov
lret
add
or
add
cmpsl
stc
lcall
stos
push
add
add
in
outsl
adc
add
jae
jp
xor
sahf
jae
sub
pop
add
xchg
jmp
mov
jle
popa
sbb
ss
add
add
repnz
add
add
imul
xchg
cmp
sub
fildl
xchg
jge
add
lret
add
movsb
inc
hlt
sbb
mov
add
push
mov
add
jp
jmp
cmp
fidivl
add
jns
mov
out
mov
mov
ror
sbb
xchg
gs
add
lods
sbb
xor
mov
imul
btc
jne
enter
lock
sub
push
mov
addl
cwtl
lock
push
xchg
aad
add
lods
icebp
cmp
jl
sub
cpuid
addr16
test
pop
add
or
lahf
outsb
add
dec
add
sub
ds
arpl
and
in
mov
add
push
add
dec
add
loop
clc
in
jb
xchg
int3
cld
fnstcw
out
cld
data16
mov
xchg
std
fdiv
int3
iret
shlb
in
add
out
incl
pop
inc
add
pop
add
dec
add
mov
jae
add
push
sbbb
loop
cmp
mov
mov
cmp
stc
bound
std
movsl
in
mov
mov
add
jge
sub
push
add
add
add
aam
rcrl
mov
add
mov
xor
add
add
jnp
add
dec
add
lret
les
push
add
add
fildl
mov
test
jmp
xchg
pusha
add
or
add
pop
std
out
xorl
cmpsl
sub
mov
movsb
stos
push
add
addb
cmp
dec
add
add
add
cmp
shlb
int3
add
mov
insb
add
mov
mov
subl
add
add
shl
negl
add
inc
add
mov
in
xchg
outsb
add
mov
stos
adc
in
aaa
incb
push
add
add
add
add
scas
sbb
add
add
bound
mov
stos
mov
scas
imul
stos
or
pusha
add
push
inc
add
add
sub
addb
add
add
incb
rcr
int
popa
add
add
cmpl
into
sahf
dec
add
int3
xlat
dec
add
add
or
stos
ljmp
xchg
xchg
pop
push
add
js
jp
sahf
mov
inc
add
add
scas
arpl
push
stc
and
add
inc
add
jmp
aam
add
out
dec
popl
test
or
enter
test
push
add
jno
pop
bound
add
add
mov
mov
push
addl
add
imul
aad
mov
add
push
add
add
inc
add
je
xor
add
pop
add
jle
xchg
pop
mov
js
sub
push
or
push
add
lea
roll
andb
add
stos
push
movb
mov
mov
pusha
add
and
add
mov
push
add
mov
loope
out
popa
mov
mov
xchg
ljmp
mov
add
mov
fcoms
add
xchg
stos
cmp
xor
jl
mov
pop
shlb
sub
inc
mov
outsb
add
mov
pop
add
push
add
mov
and
add
sub
push
add
pushf
push
daa
icebp
add
xor
xchg
in
das
add
int3
add
or
iret
shll
lret
add
mov
dec
add
push
add
stc
popf
icebp
out
mov
add
out
mov
cwtl
xor
add
add
add
aam
scas
inc
jecxz
push
push
fs
xchg
into
popf
shlb
add
lods
call
in
cmp
xlat
pushf
mov
call
mov
out
mov
add
add
pusha
add
filds
mov
add
and
add
cld
int
stc
add
add
dec
out
mov
sbb
outsb
add
add
push
add
mov
insl
add
stos
in
mov
add
add
jmp
lods
adc
dec
incl
xchg
mov
add
sub
fiaddl
clc
jle
mov
call
push
add
add
cs
mov
add
jns
fidivl
add
pop
and
test
cmp
fwait
or
pop
add
mov
xor
add
add
add
add
mov
xor
lahf
xlat
cltd
sbb
adc
add
add
fmul
jle
mov
fnsave
xor
aaa
sub
xor
add
out
lds
add
push
add
movsl
mov
test
out
ret
call
add
cld
cmp
mov
ss
xor
add
xchg
roll
stos
add
add
sbb
pop
add
add
aad
push
add
js
push
add
push
je
out
fidivl
xlat
and
cmpsl
xor
add
xchg
popf
outsb
add
pop
add
mov
fwait
pop
add
xchg
movsl
pop
dec
das
pop
add
jl
inc
stc
inc
fdivl
sahf
add
dec
add
push
add
push
sub
jle
sub
ret
sbb
jp
std
xchg
mov
add
and
add
adc
mov
add
add
notl
add
add
inc
sbb
sahf
shrl
and
sti
and
add
repz
add
sbb
mov
add
cwtl
jecxz
cli
sbb
addl
pop
add
or
lock
add
rol
or
and
add
movsl
lods
bound
xchg
pusha
add
push
add
repnz
out
push
cld
rol
add
into
add
imul
hlt
push
repz
ltr
dec
ss
add
mov
pop
in
pushl
sarb
lods
adc
orl
dec
add
clc
mov
add
sub
aaa
fiadds
data16
clc
jbe
cltd
je
mov
xor
add
add
push
sub
imul
lds
add
and
add
jae
scas
popf
add
lret
pop
aas
cld
daa
mov
and
je
es
add
add
and
lcall
add
jns
pop
add
add
dec
idivl
icebp
mov
add
add
cwtl
add
imul
add
jmp
add
add
cmp
inc
and
mov
sbb
sub
cmp
add
jae
adc
data16
add
sub
negb
add
pop
add
xor
roll
arpl
or
push
in
xchg
and
add
sahf
push
add
jg
jle
dec
cmc
or
cmc
mov
or
mov
add
or
enter
push
xchg
xchg
add
hlt
adc
rclb
add
mov
pop
fildll
cmpsb
mov
jmp
imul
mov
repz
inc
add
dec
add
loop
subl
bound
dec
add
mov
fwait
inc
imul
add
test
js
inc
add
xor
add
mov
push
add
xor
add
add
sbb
pop
mov
popf
xor
les
cmp
loope
ljmp
add
pop
push
add
ja
add
xchg
add
add
push
add
jmp
add
add
les
add
or
in
loop
fisubrl
scas
mov
push
add
loop
add
icebp
cwtl
or
imul
jns
lock
les
add
xor
add
cmp
add
adc
add
xlat
call
cwtl
lds
add
mov
add
out
lea
xchg
adc
add
cmpsb
or
add
pop
add
dec
add
mov
mov
insb
add
xor
add
test
and
in
or
cmc
test
xchg
jo
ret
add
xor
lcall
mov
test
fmull
or
hlt
test
add
in
sahf
adc
cmp
xchg
stos
add
inc
sub
push
filds
lock
out
add
and
add
lahf
enter
inc
add
das
lock
popa
dec
add
sub
sahf
mov
push
roll
rcrb
fwait
loop
add
add
add
sub
cmpsl
in
mov
mov
add
mov
jae
mov
ficompl
aaa
push
add
test
add
push
add
jns
int
xchg
int
jbe
sbb
mov
and
in
or
mov
cwtl
movsl
adc
imul
ds
lahf
cltd
shr
and
xchg
rclb
mov
lret
mov
add
gs
mov
fiadds
add
js
sub
pop
add
std
out
addr16
iret
fdivr
add
shlb
add
push
add
test
je
mov
incb
mov
and
add
xchg
mov
loope
adc
add
add
shlb
leave
add
out
addr16
loope
int3
pop
add
loopne
aam
push
add
xor
and
inc
add
add
add
add
mov
sbb
rcrb
lds
mov
sbb
jg
cli
add
imul
mov
xchg
add
add
arpl
repnz
push
add
loope
aam
add
mov
pusha
add
push
add
dec
add
xor
add
enter
add
int3
add
cmp
add
jns
adc
add
inc
add
and
xchg
int3
dec
js
jmp
sbb
push
add
test
add
arpl
add
add
movsl
add
xor
daa
je
fdiv
xchg
jbe
xchg
aad
add
add
xchg
jne
mov
add
push
cmc
rcll
add
and
cmp
jns
xor
add
test
lret
jle
call
das
add
adc
mov
mov
stos
add
jmp
push
add
or
push
das
in
mov
fimuls
lea
add
jbe
and
add
bswap
out
jle
and
add
add
pop
movsb
add
push
aam
testl
push
add
pop
sti
jmp
mov
pop
add
add
add
ret
push
pushf
jmp
add
add
lret
scas
or
stc
xchg
push
add
mov
ror
rcl
and
add
test
mov
mov
mov
add
xor
add
in
add
add
jp
xchg
imul
sbb
aam
push
je
pop
rcll
mov
push
add
pop
pop
add
add
cld
push
add
fiaddl
idivl
add
push
cmpsl
add
loopne
push
add
cmpsb
in
dec
aad
pop
outsb
add
iret
stos
xchg
dec
or
loopne
mov
push
testl
add
jb
sub
mov
mov
add
add
frstor
shr
inc
add
add
add
mov
mov
outsl
mov
stc
mov
add
jl
das
sub
ficoms
add
cmpsl
lahf
sub
mov
or
cmpsl
push
xchg
ja
inc
add
xchg
sub
dec
add
adc
mov
add
cmpsb
mov
add
out
or
xor
add
lcall
add
sub
outsb
add
jg
add
mov
fcompl
fistpll
add
push
roll
xchg
mov
shll
add
or
jne
out
jnp
pop
add
leave
adc
add
lods
cmpsb
insb
add
add
cmp
lods
and
add
add
cli
push
add
inc
add
insl
aas
in
mov
xchg
dec
add
loope
mov
add
push
add
jp
push
in
jae
sahf
mov
add
add
dec
jne
add
xchg
cmp
push
add
lds
sub
add
fwait
push
add
enter
arpl
loopne
push
add
icebp
fwait
adc
add
add
add
insb
add
add
shrb
imul
mov
mov
push
add
mov
cmc
movsl
add
pop
or
dec
add
addl
add
add
fld
shlb
jno
xchg
ret
mov
lock
or
add
add
data16
mov
es
dec
add
outsl
xchg
sbb
add
add
out
ret
add
add
add
test
mov
test
and
incl
test
fmuls
dec
add
test
loopne
sahf
das
or
popa
add
inc
lea
daa
xchg
add
inc
add
and
add
mov
mov
mov
mov
sahf
add
add
mul
hlt
pushf
jecxz
dec
add
ja
push
add
dec
add
in
aaa
out
pop
adc
add
add
add
dec
mov
pop
add
pusha
add
dec
lret
add
mov
sbbl
ret
lods
add
push
inc
fmul
mov
xchg
sbb
xor
sub
add
xor
mov
mov
add
pmulhw
pushf
jecxz
xchg
xor
out
cmpb
add
adc
mov
mov
lret
aam
add
je
jnp
lock
add
mov
mov
inc
add
xor
add
or
xchg
xchg
push
inc
add
sbb
aaa
ret
add
scas
sbb
fdivrs
add
add
add
add
mov
lds
cmp
dec
outsl
lock
aas
jge
lret
add
outsb
add
mov
std
in
add
add
mov
and
add
adc
fldenv
add
mov
mov
add
add
cld
std
push
das
jns
dec
aaa
roll
outsl
push
sub
mov
push
add
jmp
xlat
pop
mov
lahf
mov
and
mov
sub
dec
popf
shl
inc
mov
clc
out
shll
sbb
andl
and
push
add
add
sahf
fwait
cwtl
repz
lret
cmp
mov
cmpsl
clc
shrl
xor
ret
inc
mov
add
ret
xchg
jae
add
roll
add
add
xor
add
add
or
mov
or
pop
add
mov
add
push
cmp
cmc
call
fidivs
adc
pop
popl
add
out
clc
test
mov
test
dec
add
testl
movsb
push
add
add
shl
add
or
dec
add
jle
int
jmp
in
loop
xchg
add
add
inc
lcall
cwtl
and
add
rcrb
insb
add
js
bound
ja
stc
aas
repz
cld
mov
jl
das
and
add
mov
lea
add
xchg
jnp
pop
add
into
lea
pop
add
xchg
dec
adc
add
push
je
push
inc
insl
push
push
adc
stos
xchg
sub
lcall
add
jp
push
xchg
pop
pop
add
mov
mov
mov
mov
sub
push
add
adc
add
add
outsl
dec
add
mov
int
fidivrl
jnp
add
dec
add
movsb
add
cmpsb
add
imul
jmp
inc
add
in
add
pop
xchg
hlt
mov
outsb
add
iret
in
cmp
fldl
mov
xchg
popf
cmp
sbb
xchg
xor
jno
cs
cs
inc
jmp
and
les
add
std
test
orb
and
add
xchg
ret
add
sbb
js
movsl
test
pop
add
aad
movsb
mov
popa
decl
sbb
ljmp
add
cmp
inc
add
ljmp
add
add
sbb
sti
mov
sub
xor
int
jno
add
out
and
add
inc
lock
add
pop
add
add
jle
ficoml
sbb
fisttps
add
movsl
sub
add
xor
add
jl
out
xchg
imul
pusha
add
mov
add
stos
add
add
jl
mov
daa
stc
add
lea
sub
sub
mov
pop
data16
shl
insb
add
jns
add
jmp
outsb
add
pop
add
gs
leave
insl
mov
test
andb
add
add
out
pop
add
inc
mov
fcomps
jne
out
add
daa
add
pop
mov
xor
add
add
enter
cmpsl
or
in
outsl
and
add
pop
add
pop
or
sub
mov
mov
sti
xor
push
jo
cmp
jg
bound
lahf
fildl
int
rcrb
sbb
lods
outsl
test
add
les
popa
pop
add
add
add
and
add
mov
mov
sub
xchg
hlt
mov
dec
add
pop
cltd
jecxz
testl
fst
inc
je
data16
mov
add
lods
mov
test
pop
add
nop
subl
jg
leave
add
arpl
stos
xchg
repz
add
fisubrl
add
xchg
xchg
add
fwait
cmpsb
add
lods
add
movsb
xchg
jb
imul
add
outsl
add
mov
xchg
xor
add
sub
sub
mov
mov
push
sub
sbb
fwait
dec
sbb
xor
aas
mov
add
fcoms
xor
dec
mov
sub
or
arpl
pop
cli
inc
sub
cli
add
mov
sub
fldl
scas
rclb
jl
in
xchg
jae
mov
ljmp
add
loopne
stc
add
add
sub
xor
pop
jae
add
add
add
push
add
je
xor
cmc
add
outsl
leave
and
cli
bound
pop
int3
loope
pop
add
push
movsb
add
add
aaa
xor
add
iret
add
add
add
add
mov
mov
add
mov
in
add
add
adc
call
mov
mov
roll
fdivrl
stos
or
cmp
bnd
lret
cwtl
dec
add
mov
lock
dec
testb
fdivp
jle
add
jl
add
add
fstps
sbbl
inc
add
add
dec
lcall
jns
add
jae
iret
mov
stos
add
sbb
push
add
iret
shrl
or
in
pusha
add
jne
add
add
add
stc
fnstsw
rcll
add
mov
int3
dec
mov
and
add
stos
xchg
sub
fldt
cwtl
or
mov
add
test
add
hlt
add
bound
arpl
jge
inc
fdivs
scas
add
push
add
xor
jmp
jmp
cmp
add
xchg
roll
leave
xchg
xor
add
fwait
or
jge
sub
or
or
add
pushl
popa
add
in
add
andl
and
add
and
add
add
lret
push
mov
jp
xor
add
pop
add
enter
leave
xchg
adcb
add
add
add
push
mov
stc
fnstcw
inc
add
mov
into
out
cmp
add
bound
scas
and
idiv
or
dec
add
add
add
push
push
mov
insb
add
dec
add
sbb
scas
cmp
cltd
or
out
or
adc
add
or
sub
push
imul
add
add
xchg
add
xor
add
add
add
sbb
jg
add
mov
push
add
cmpl
jno
add
push
add
add
add
mov
testb
hlt
add
ljmp
or
icebp
mov
xchg
cmp
incl
add
add
popa
add
popa
lods
popa
in
push
sbb
mov
add
add
push
add
in
push
add
add
clc
add
pop
xchg
dec
add
jne
insl
cmp
outsl
fistps
push
add
xchg
add
add
jbe
sub
push
add
imul
or
add
addl
add
sbb
pop
cwtl
pop
mov
jnp
cmp
test
aam
add
inc
add
add
add
icebp
jmp
pop
dec
add
xor
add
sbb
negb
add
add
outsb
add
mov
pop
flds
mov
mov
in
inc
sub
ret
mov
mov
add
divb
add
xchg
cmove
daa
mov
dec
int
or
xlat
mov
add
shlb
add
adc
add
add
dec
add
fadd
xchg
jns
mov
add
jo
lods
jb
ret
aaa
sub
add
add
add
sub
data16
fidivs
mov
mov
pop
add
imul
mov
add
pop
add
push
add
xor
add
inc
add
add
mov
xor
add
sarl
mov
imul
lahf
arpl
jmp
pop
push
pop
add
push
add
inc
add
mov
cld
and
add
movsl
add
aam
add
sub
sbb
and
add
shrb
mov
and
mov
xor
add
sarb
push
add
adc
adc
add
pop
les
mov
fisubrl
mov
int3
push
add
add
out
popf
and
ss
insb
add
add
testb
add
cmp
push
add
jbe
sub
inc
int3
iret
stos
icebp
cli
rcl
xor
add
mov
add
push
xlat
jnp
fidivrs
rclb
add
dec
add
icebp
add
add
mov
xor
dec
dec
add
in
xchg
cld
xlat
test
fildll
es
cld
push
push
add
xor
push
add
add
push
mov
mov
cmpsb
add
add
cli
add
add
xor
das
sti
in
push
scas
ja
push
repnz
les
ja
std
rcll
inc
add
inc
fucomip
arpl
xchg
mov
movsb
test
sarb
add
add
jl
inc
adc
add
or
into
sti
mov
add
add
and
add
adc
add
int3
sub
test
je
ljmp
imul
cmp
scas
add
add
jb
mov
or
int3
push
add
xchg
scas
nop
dec
add
mov
loopne
mov
add
jle
pop
and
insb
add
sbb
xor
add
pop
add
into
cmpsl
pop
testl
add
ret
jb
cmp
out
xchg
ret
rcr
popa
sub
pop
mov
inc
add
add
add
inc
add
add
xchg
adc
loope
pusha
add
add
add
add
inc
mov
mov
mov
add
mov
add
jb
sub
dec
add
add
daa
add
lods
insb
add
dec
add
push
add
add
pop
add
add
arpl
dec
add
add
add
icebp
cmc
andl
add
cmp
imul
sub
scas
dec
add
loope
ret
sbb
jmp
xchg
pop
je
test
aad
push
sbb
xorb
icebp
add
xchg
sbb
jo
mov
mov
sbb
add
push
add
imul
add
push
add
dec
add
add
and
mov
sub
xchg
ret
sbb
or
jmp
mov
xchg
sub
add
add
add
ret
add
mov
add
xchg
insb
add
mov
cld
lahf
xchg
add
push
add
in
data16
mov
add
add
mov
push
sahf
ljmp
add
mov
fmull
add
jge
mov
and
mov
leave
int3
lods
pop
and
nop
ljmp
mov
add
add
lea
add
xor
add
inc
dec
add
in
adc
dec
add
add
add
mov
and
jl
fsubp
sbb
adc
add
jbe
jne
mov
in
jae
add
pop
add
test
cld
out
mov
add
add
test
push
add
pop
add
add
mov
pop
adc
dec
cltd
mov
sbb
sbb
dec
mov
js
and
add
mov
imul
xchg
sub
clc
add
lahf
hlt
xchg
add
add
add
lods
aam
sbb
popf
lea
flds
insb
add
xor
add
aad
mov
lods
addr16
stos
out
lds
mov
sahf
jo
mov
mov
add
add
jle
jbe
and
add
push
sahf
enter
aaa
push
add
lea
cmp
fwait
mov
fstpt
subb
addb
add
jge
jno
bound
cmpb
mov
push
test
scas
pop
sub
adc
add
lahf
jbe
jno
xchg
add
xchg
movsb
mov
add
leave
add
add
add
mov
repz
xchg
test
cmc
movsb
add
inc
add
xor
add
jge
xchg
lcall
jbe
into
push
add
add
inc
add
fwait
loop
cmp
stos
test
pop
mov
sbb
add
cmp
test
lea
add
ret
add
outsl
rclb
xchg
daa
xchg
add
repz
xchg
add
add
add
in
add
and
add
add
mov
scas
add
cmp
cltd
jmp
xor
xor
add
push
add
int
or
pop
mov
lcall
fbld
add
sbb
inc
add
in
mov
mov
mov
in
cli
add
ret
adc
add
add
imul
sub
pop
clc
mov
or
adc
add
arpl
add
xchg
pop
fidivrs
pushf
add
test
or
xor
add
ret
xchg
xorl
pop
add
push
add
cwtl
cmp
pop
push
loope
add
test
push
add
faddl
dec
mov
add
dec
add
loopne
add
out
bound
dec
add
push
add
or
add
pop
mov
add
flds
mov
push
add
dec
ret
cmp
inc
dec
add
xchg
adc
cltd
cmpl
sbb
mov
repnz
in
mov
xchg
adc
add
xchg
mov
mov
scas
sub
pushf
stos
lea
add
cld
add
jecxz
negb
in
mov
lock
fnstsw
stos
aam
mov
xchg
add
jle
clc
sbb
adc
xchg
add
jbe
insb
add
jecxz
fsub
dec
pusha
add
stc
add
cmpxchg
sub
xchg
or
pop
add
in
mov
test
add
add
add
add
pop
xor
add
or
jb
call
mov
add
jg
repnz
mov
leave
pop
jae
shl
sbbl
sahf
iret
das
pop
data16
sbb
in
aas
js
and
add
bound
xchg
rolb
fadds
daa
dec
add
pop
add
rorb
daa
or
jl
cld
loop
add
repz
and
or
rolb
jge
je
stos
aam
pop
add
popl
test
data16
xchg
and
push
imul
pop
add
scas
pop
sub
popl
test
icebp
xor
mov
aad
add
add
sub
pushf
add
add
lds
into
jae
lods
out
pop
add
data16
add
add
jae
add
add
mov
add
push
mov
cmp
pop
adc
mov
flds
sub
mov
imul
add
add
add
xor
add
test
data16
add
cmp
fisubl
adc
ret
xor
add
mov
test
ja
shrl
movsb
adc
add
shrl
push
add
xor
pop
add
in
insb
add
rorb
add
and
stc
sbb
aad
daa
mov
nop
add
ss
add
inc
push
jecxz
roll
mov
and
add
les
mov
mov
popa
into
lods
mov
pop
add
jnp
add
jno
xor
jno
or
out
mov
dec
add
add
mov
ret
stos
push
add
mov
out
pop
add
faddl
subl
or
data16
xor
fwait
iret
rolb
add
mov
pop
add
sarl
dec
add
ljmp
sbb
add
mov
inc
shlb
adc
add
sarb
jae
imul
mov
sbb
or
out
jg
add
push
add
add
pop
data16
cmp
cld
lock
dec
add
cmpsb
jecxz
out
jl
sub
cmp
jecxz
add
outsb
add
jns
shll
daa
add
flds
cmc
call
dec
lock
sbb
ljmp
movsl
pushf
inc
add
mov
push
add
je
xchg
cmp
cli
fldcw
mov
scas
cwtl
or
pop
jbe
lods
add
sbb
sub
inc
add
xchg
add
fdiv
xchg
out
push
add
ret
popf
shlb
add
inc
add
and
add
lea
add
data16
xor
add
clc
call
cmp
mov
add
add
add
mov
add
add
jl
push
add
leave
lea
stos
hlt
xchg
sti
push
add
add
mov
js
insl
addr16
adc
pop
jbe
or
mov
mov
push
add
inc
aam
in
add
fisttpl
add
add
rolb
insb
add
dec
add
or
fcmovb
int
sub
cmp
push
mov
xchg
loop
cli
in
xchg
mov
sub
add
rorb
arpl
sbb
fildll
add
add
jge
cld
add
fidivrl
and
add
movl
scas
push
mov
scas
cld
sub
xchg
pop
add
add
cltd
xchg
jno
addr16
push
add
test
in
mov
jl
push
add
inc
mov
mov
add
out
je
adc
xchg
loope
negl
icebp
mov
add
mov
adc
add
movsl
mov
add
aaa
add
adc
add
add
xlat
andl
lcall
or
filds
int3
add
int3
dec
mov
add
aas
mov
js
iret
cli
test
sbbl
loope
add
ficompl
add
push
add
les
rcrl
inc
add
pop
add
inc
add
inc
imul
aaa
and
dec
dec
loope
lahf
das
adc
add
sti
add
mov
add
mov
pushf
mov
add
outsl
subb
dec
xor
add
mov
add
repz
aas
int3
insb
add
movups
add
jge
add
mov
add
sbb
adc
lock
cld
add
sti
aam
das
add
add
xor
push
mov
enter
dec
xor
add
add
add
and
sbb
movsb
mov
add
pop
add
add
add
add
add
data16
cmovs
adc
add
pop
add
filds
test
xorl
gs
and
add
orl
jmp
add
aaa
rolb
pop
add
pop
add
sbb
xor
add
dec
add
out
repz
shll
add
fstl
jecxz
add
xchg
clc
aam
fwait
cmp
xchg
dec
sub
add
in
rorl
add
subb
jae
xlat
sub
test
clc
dec
sub
jge
cmp
add
xchg
sub
pop
jo
inc
add
sti
jecxz
out
addr16
fs
lods
gs
pop
lods
cmpb
mov
jbe
fistpll
dec
mov
cltd
sbb
add
data16
add
add
add
add
outsl
aam
xor
add
pusha
add
add
pop
or
dec
dec
add
and
stos
mov
add
inc
imul
sbb
scas
mov
fildll
cmpsl
stc
mov
addr16
inc
pop
cld
out
test
or
inc
add
add
add
push
add
fnstenv
lahf
dec
add
add
dec
add
pop
in
push
lods
mov
js
je
push
faddl
icebp
repnz
xor
add
xor
add
and
insl
sbb
inc
mov
in
cmpsl
addr16
jno
sarl
enter
test
popf
push
or
ljmp
pop
sub
js
and
add
pop
add
mov
loope
lods
push
dec
add
jns
add
out
les
cli
rcl
das
bnd
mov
dec
out
mov
add
std
popf
and
mov
aaa
repnz
jp
aam
sbb
adc
add
fldenv
pop
add
in
ja
dec
mov
test
pop
mov
adc
add
stos
inc
add
add
ljmp
xchg
dec
add
mov
bound
add
fnstenv
xchg
add
imul
dec
ljmp
lods
sbbb
mov
add
add
mov
mov
jle
ljmp
clc
mov
sbb
sub
ret
lret
add
add
cmp
xchg
add
adc
xchg
fwait
scas
nop
je
cmp
mov
es
add
adc
cmp
pop
cli
int3
xor
add
add
and
iret
push
or
nop
lds
add
sbb
xchg
ljmp
ljmp
loope
add
push
xchg
jl
cmp
add
push
add
pop
cmpsl
sti
test
add
mul
dec
das
jmp
add
aam
cmp
add
mov
cmc
pop
popl
mov
fcoml
xor
add
add
push
clc
adc
mov
cmp
adc
add
add
adc
add
add
add
mov
sub
add
leave
lret
cmp
scas
outsl
aad
add
mov
arpl
jne
adc
add
inc
add
fdivp
add
mov
sahf
add
add
lea
add
xchg
add
push
nop
add
add
rcr
pop
mov
add
sbb
fisubrs
xor
mov
bound
dec
add
lods
lret
arpl
jge
add
push
add
add
mov
add
sbb
mov
and
add
add
loop
mov
insb
add
out
in
pop
sub
data16
or
out
aad
add
orl
add
add
sub
or
xchg
ja
mov
mov
imulb
add
lods
pop
add
das
dec
add
dec
sub
iret
movsl
ret
add
push
fwait
or
pop
add
add
xchg
std
pop
popa
xor
add
adc
add
clc
inc
or
add
jp
pop
das
add
jp
inc
add
mov
cld
in
push
sti
dec
push
add
add
add
movsb
aad
jbe
inc
std
sar
xor
add
scas
repz
push
add
insl
push
xchg
add
mov
stos
xchg
adc
push
add
pusha
add
lds
add
lods
jb
jl
das
jl
repnz
add
push
add
add
lds
jg
sub
inc
inc
add
call
jmp
push
xchg
dec
test
in
repz
loopne
rolb
mov
sub
cli
mov
add
xlat
pop
mov
shrb
sub
jge
cmp
nop
cwtl
das
sub
insb
add
or
bound
xchg
ret
pop
add
cmpsl
xchg
mov
or
mov
jb
js
repnz
pop
add
adc
add
jne
add
nop
sbb
dec
lods
mov
push
add
stos
push
add
inc
nop
imul
movsl
sar
daa
fwait
add
jbe
add
add
les
outsl
dec
add
jb
xchg
stos
insl
scas
stc
mov
add
pop
add
cmp
mov
adc
and
add
inc
add
add
ljmp
add
or
cmp
cmc
add
inc
fsts
jne
adc
cmp
cmp
inc
sbb
outsl
add
sub
xchg
sub
icebp
shl
subl
data16
sub
add
inc
add
sar
inc
add
mov
xchg
arpl
add
out
xchg
mov
shlb
scas
xor
add
ret
idivl
pop
sahf
je
cmp
or
add
add
add
jecxz
add
xchg
fnsave
or
add
frstor
loopne
jo
je
stc
daa
inc
add
loope
mov
mov
scas
sbb
add
sbb
pop
dec
or
jmp
scas
dec
loopne
rol
rcll
add
lcall
add
cwtl
mov
imul
xlat
xchg
adc
aad
out
jge
jecxz
add
jnp
dec
xor
add
xor
inc
ja
and
mov
push
add
add
mov
jb
sahf
pop
xchg
out
test
add
xchg
add
mov
jmp
xchg
mov
jp
dec
xor
add
mov
nop
dec
neg
or
mov
push
mov
dec
add
sahf
pop
cmpsb
jmp
push
ja
pushf
add
xor
add
mov
loopne
sahf
lock
add
xchg
add
andb
xchg
ret
sub
cmpsb
add
data16
into
sti
sbb
or
add
enter
xchg
sbb
leave
sub
addr16
hlt
or
add
add
dec
aad
insb
add
call
add
add
add
sbb
add
mov
jb
jle
data16
sub
and
aad
jecxz
xchg
mov
or
inc
add
inc
add
xchg
call
add
insl
add
testb
mov
add
popl
outsl
add
add
inc
cld
orl
mov
xchg
sbb
bnd
fldcw
lcall
add
xchg
rol
fidivs
xchg
pop
or
pop
add
mov
add
jmp
movl
add
add
outsl
mov
dec
into
xchg
ret
add
cmp
jecxz
stc
mov
add
xor
add
int3
add
pop
rcrl
mov
adc
push
insl
aad
cmpsb
mov
push
loopne
mov
add
out
or
es
outsl
xor
iret
push
mov
into
addr16
sub
xor
add
mov
jno
xchg
dec
ds
dec
cmp
add
add
adc
add
add
pop
cmc
or
inc
add
cmp
pop
cld
mov
int
mov
inc
add
stc
add
jg
add
add
mov
popf
add
aam
fsubrl
and
sbb
mov
fimuls
adc
mov
adc
add
push
add
and
add
add
add
add
cmp
adc
mov
pop
xchg
mov
incb
xor
add
bound
add
cmp
and
add
bound
add
add
je
and
add
push
add
push
add
jg
adc
ficompl
xor
stos
sbb
add
in
push
inc
add
leave
mov
pop
add
mov
sbb
push
fidivrs
add
out
out
fcmove
xor
cld
stos
cmp
jae
mov
add
jmp
mov
mov
arpl
mov
add
mov
jge
mov
xchg
dec
add
and
add
call
add
fbld
jno
jge
add
imul
add
push
add
das
cmp
add
add
inc
add
push
out
push
sub
xor
cmp
test
add
popf
add
adc
outsl
js
adc
add
add
repz
loop
add
add
std
add
int3
test
adc
add
pop
add
movsb
dec
or
xchg
jle
inc
mov
out
inc
add
push
out
cltd
lahf
sbb
or
sbb
push
dec
test
mov
pop
add
xlat
pop
out
cmp
incl
and
mov
adc
add
xor
or
mov
rcr
mov
in
mov
mull
lret
cmpsl
mov
fsubrl
stos
je
xor
pop
add
add
or
dec
add
add
arpl
cmpsb
jg
add
lret
add
jg
add
add
int3
aad
test
add
outsl
cmp
or
shl
out
push
add
aam
lods
xchg
push
add
mov
xlat
sub
jmp
popl
fwait
call
cmpsl
subl
decb
add
frstor
add
xchg
mov
shlb
jno
stc
jmp
lock
xchg
and
pop
add
addl
je
fwait
pop
add
rolb
test
lahf
mov
outsb
add
xor
add
out
aaa
add
inc
xor
add
xor
dec
ret
sahf
add
or
test
cmpsb
push
add
adc
add
cmp
jg
pop
or
ret
add
add
aad
fwait
add
out
pop
orb
leave
push
mov
fdivs
add
add
inc
pusha
add
xor
add
and
testb
xchg
mov
les
cmp
aas
out
mov
pop
add
push
add
out
mov
jecxz
popa
sbb
add
jmp
aas
push
xchg
add
add
inc
add
addr16
add
add
push
add
inc
add
add
push
add
sub
pop
add
add
negb
sub
test
mov
add
add
jb
sub
fldl
jnp
movsb
pusha
add
add
ds
lds
repz
pop
in
add
aas
lds
rolb
add
or
mov
add
lret
int
pop
lcall
scas
outsb
add
jmp
mov
add
lods
jae
adc
add
cld
pop
mov
popf
fwait
push
adc
add
add
outsb
add
sbb
mov
xchg
shll
add
jmp
adc
mov
mov
aad
nop
or
fimull
mov
aas
bound
sbb
repnz
add
and
add
lock
mov
dec
add
jo
int3
sub
mov
fwait
mov
or
mov
sar
mov
fwait
jecxz
and
add
out
popa
and
add
add
inc
scas
adc
stos
adc
add
add
popf
cwtl
and
add
xor
out
add
jl
mov
je
ljmp
add
dec
je
push
rcrb
adc
sub
cmp
xlat
inc
mov
adcb
lea
test
rol
add
add
add
or
enter
add
mov
outsl
xor
add
mov
add
mov
cmp
sub
mov
xchg
pop
push
add
xchg
fmul
jne
jno
add
sub
mov
mov
lock
jl
shll
sbb
sbb
js
mov
aas
bound
cmp
add
movsl
repz
add
fwait
sbb
mov
mov
xchg
fwait
imull
xor
pop
filds
test
lret
add
add
add
fsts
inc
add
add
add
push
in
aaa
sbb
fisttps
add
mov
movsl
xor
sahf
idivl
add
cwtl
mov
or
xchg
add
ss
add
sbb
in
xchg
jp
fisttpll
add
and
mov
int3
dec
cmp
movsb
or
and
add
incl
lods
push
test
sbb
iret
sub
or
pop
add
ljmp
mov
xchg
cltd
push
lds
cwtl
add
lcall
xchg
jmp
aad
int
push
add
add
push
add
push
add
adc
mov
jmp
add
gs
add
xor
add
or
fildll
pushf
sar
cmc
xlat
jg
jmp
stc
push
add
mov
mov
add
ljmp
add
ficompl
add
leave
or
push
add
push
add
mov
loop
pusha
add
push
add
mov
or
push
push
add
sahf
dec
add
add
jo
out
inc
add
or
and
add
pop
add
je
add
add
add
out
into
or
arpl
xor
aaa
scas
add
repnz
push
xchg
jp
sbb
xchg
add
out
fnstsw
mov
push
add
stos
ljmp
cmpsl
jns
jb
jmp
add
ret
push
in
add
push
fwait
add
out
inc
pop
mov
add
add
add
sbb
push
ja
add
cmp
add
loopne
fstp
jg
adc
push
add
xchg
pop
adc
out
add
rolb
cmp
sbb
in
repz
pop
push
add
jbe
or
push
mov
lods
push
ja
xchg
xor
pop
negl
add
add
mov
and
add
cmp
push
filds
popf
lret
xor
add
add
mov
