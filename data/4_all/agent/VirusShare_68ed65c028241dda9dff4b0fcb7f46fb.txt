xor
add
add
add
sub
ficoms
dec
xor
mov
test
pop
mov
mov
mov
sti
cmpsl
out
mov
sub
sbb
cli
fimull
dec
in
jbe
sbb
adc
push
mov
mov
dec
addr16
jnp
scas
repnz
fcomps
inc
test
pop
push
sbb
movd
in
dec
jecxz
adc
daa
lods
jne
pop
test
cmp
mov
ljmp
xor
js
mov
rorb
jns
fiadds
sub
ja
in
cmp
int3
push
mov
inc
orb
int
cmc
shlb
mov
xor
stos
ss
js
in
jmp
sub
or
pop
dec
xlat
fidivs
xchg
out
icebp
call
addr16
mov
adc
xchg
pop
sub
test
add
cmpsb
mov
cltd
pop
mov
sbb
pop
jl
sub
pop
jmp
js
cmp
enter
aam
lret
xlat
es
inc
scas
movsl
sbbb
xchg
call
mov
inc
mov
loop
pushf
and
movsl
sub
enter
loop
or
jge
xchg
movl
push
sub
subb
add
adc
adc
pop
or
inc
js
and
mov
and
cmp
push
cmpsl
testl
jmp
cmp
xchg
pop
cmpl
in
int3
mov
ljmp
out
inc
in
ret
push
sbb
rcll
js
imul
sub
inc
fbstp
push
out
ficoms
jge
adc
dec
mov
das
dec
icebp
lock
mov
sbb
lahf
int
nop
inc
scas
shll
jo
pop
sub
dec
mov
jecxz
jl
insl
clc
lcall
jbe
adc
aad
sbb
or
push
jo
mov
add
jg
imul
mov
and
jmp
aaa
push
xlat
mov
lcall
mov
add
mov
test
outsl
loopne
jmp
cmp
jnp
cmc
inc
aam
in
clc
mov
or
icebp
sbb
fcmovnb
fdiv
sbb
and
mov
movsl
jbe
imull
jae
mov
lds
je
ficoms
add
rclb
loope
mov
fs
js
cmp
push
push
fs
mov
adc
push
cmp
mov
lcall
xchg
jp
mov
ret
jge
leave
jne
adc
imul
adc
add
xchg
add
push
popa
ljmp
mov
cmp
jl
mov
addb
mov
scas
imul
sub
cwtl
or
movsl
add
mov
aaa
and
mov
mov
in
jae
mov
sbb
xchg
lcall
jp
xchg
nop
imul
sbb
rcrb
cltd
pop
stos
sti
mov
lea
jb
aaa
push
pop
cli
xchg
adc
jp
test
out
mov
mov
test
enter
mov
lods
push
mov
sbb
mov
push
mov
pop
clc
shrl
mov
and
adc
hlt
shlb
fdivp
mov
test
ficoms
push
sub
fisubrs
out
lods
pop
cmp
iret
jle
call
aam
mov
mov
push
jno
cmp
stos
xchg
adcb
and
lods
dec
lock
inc
icebp
jl
mov
sti
xor
xchg
mov
push
test
movsl
dec
pop
cmpsb
mov
mov
xchg
addr16
sbb
movsb
cwtl
loope
and
pop
nop
mov
aas
imul
pop
push
mov
into
jb
addr16
mov
cmpsb
fmulp
adc
push
sub
clc
cmp
ja
cltd
cli
lret
es
sbb
mov
mov
fwait
mov
sbb
jecxz
dec
addr16
cli
push
int
adc
jbe
push
add
jbe
cmp
movsb
fiaddl
test
faddl
in
dec
sbb
addl
cmpsb
scas
fnstenv
js
testb
mov
push
sub
sahf
ds
xor
or
test
add
ja
jmp
mov
sbb
fimuls
nop
jmp
inc
dec
fwait
mov
inc
xor
xchg
mov
aad
popa
inc
leave
sbb
xchg
sti
cmp
inc
adc
lcall
or
pop
sub
or
mov
and
or
jb
pop
aad
add
testb
popa
add
add
shll
xor
cltd
repnz
xchg
and
es
aas
mov
dec
stc
movl
lret
lods
lods
push
ss
sub
jb
fwait
xchg
jle
pop
dec
push
sub
in
adc
rcrb
test
cld
xor
jecxz
sub
lea
popf
xor
hlt
add
test
sbb
fbld
cmp
gs
out
adc
lret
push
notb
mov
sub
aaa
or
ljmp
mov
rorl
add
decb
scas
lods
lahf
sbb
mov
addr16
gs
dec
das
push
cwtl
pop
sbb
cmpb
jae
out
fs
out
xor
mov
dec
or
jno
adc
icebp
pusha
in
cmp
push
jmp
pop
fcmovne
movsb
dec
aaa
leave
mov
xor
ret
adc
pop
aas
shll
shll
pop
jl
popf
or
mov
fnstsw
push
test
add
lahf
fidivl
jnp
aaa
rclb
mov
pop
mov
in
clc
xorb
push
lods
push
scas
mov
out
nop
or
insl
loope
jo
push
jmp
push
cmp
sbb
sub
xorl
xchg
inc
xchg
mov
or
movsl
adc
pop
dec
lcall
out
inc
xchg
and
jno
add
stc
mov
fimull
xchg
ljmp
call
add
stc
mov
inc
and
rcrl
xchg
mov
cli
pusha
push
xor
and
xor
sbb
ljmp
popa
fidivrs
push
jmp
shl
mov
scas
out
ds
call
push
call
sub
aas
cmp
pop
sbb
fcomi
mov
lods
sbb
mov
call
cmp
dec
sub
test
movaps
popa
pop
mov
dec
push
mov
cltd
insb
mov
mov
mov
js
and
insb
jno
push
pop
dec
call
or
mov
mov
or
and
stos
xor
cmpsb
lods
outsl
xchg
add
xchg
stos
inc
addr16
dec
sub
int3
lods
or
mov
cmpsl
pop
pop
cmpsb
mov
mov
push
test
arpl
mov
and
cli
fistpl
jbe
fdivl
adc
push
xor
imul
outsl
fsubs
push
xchg
cmc
mov
arpl
xchg
movsb
iret
leave
adc
cltd
pushf
fmuls
ds
addr16
cmp
fsts
pop
xorb
xchg
lods
and
aas
jbe
and
sbb
lods
fwait
repnz
cmp
dec
lcall
cmpsl
fadd
fs
mov
and
mov
addl
fnstenv
lea
mov
ret
mov
rcll
lds
pop
jnp
add
mov
fisttps
lods
pop
and
fsubl
das
loop
lods
fstpl
sbb
cmpsb
call
in
mov
add
icebp
jge
pop
aam
adc
imul
cwtl
lret
fistl
aad
xor
inc
adc
loop
ds
mov
rorb
daa
aam
pop
movsb
mov
inc
add
and
cmp
mov
sub
mov
lds
pop
dec
fcmovne
addr16
popf
mov
pop
in
je
inc
pop
cmpsb
sub
mov
xchg
jg
rolb
lahf
mov
or
jge
cmpsl
in
ret
mov
xchg
add
test
dec
addl
adc
mov
mov
lds
push
mov
add
cli
jecxz
scas
lret
mov
jnp
fnstsw
aaa
adc
pop
fcmovne
adc
scas
or
pusha
dec
icebp
add
inc
fildl
sub
xor
inc
fisubl
push
mov
adc
test
cltd
orb
imul
lahf
loop
stos
fidivrl
add
dec
pop
sub
sti
int3
mov
and
mov
mov
loopne
or
test
jne
add
jnp
push
inc
dec
mov
leave
cmp
pop
mov
shlb
mov
aaa
jns
sub
stos
sahf
add
out
dec
add
and
pop
dec
cmp
xor
jmp
jl
ja
mov
jmp
sbb
rorb
xor
imul
cmp
outsl
add
push
inc
mov
xchg
mov
xor
xchg
dec
movsb
mov
or
cmp
faddl
jne
adc
ljmp
mov
sub
subb
mov
mov
inc
out
mov
xchg
je
nop
test
loope
pop
xchg
add
cmpsl
mov
pushf
push
adc
jno
dec
cmp
sbb
or
cs
sti
test
or
pop
pop
mov
sub
test
pop
xchg
cli
lods
ds
mov
push
jge
loop
mov
xchg
pop
push
dec
cmp
sbb
mov
adc
pushf
imul
loop
dec
dec
push
mov
outsb
les
or
icebp
xchg
bound
mov
addr16
lds
stos
in
jp
pop
jae
adc
inc
mov
mov
fnsave
cmp
cmpsb
movsl
outsb
pop
xor
sti
cmp
jb
and
or
inc
cmc
inc
lret
jle
leave
divl
cs
xlat
in
inc
add
cmp
loope
push
lea
fwait
lds
jae
into
fidivl
mov
inc
xor
sbb
outsl
js
enter
addl
out
mov
pop
sub
loopne
lret
mov
aaa
xor
pop
test
leave
fcoml
jp
rolb
pop
xchg
pop
adc
loop
insb
test
jmp
pop
shlb
aam
stc
add
sbb
decl
pushf
inc
mov
testb
orl
test
add
cmpsb
cmp
hlt
enter
aas
iret
add
movl
xchg
push
lock
adc
inc
loopne
adc
test
push
dec
pop
lds
clc
add
and
ds
aad
dec
push
xchg
mov
xor
nop
pop
out
mov
sbb
mov
stc
pop
imul
mov
notb
mov
inc
adc
mov
push
and
mov
add
lock
jecxz
and
add
aad
add
pmaxub
push
mov
shll
sbb
sub
orb
scas
ret
mov
jge
xor
bnd
lcall
jle
aam
stos
jo
sbbl
test
jge
test
cmp
mull
push
fbstp
push
ds
xchg
jp
scas
aad
or
and
cmpsb
ja
sbb
mov
ret
andl
cltd
sbb
cmpsb
adc
jno
das
repz
or
pop
leave
pop
into
faddl
pop
fisttps
dec
mov
das
cmpsb
cs
adc
bound
mov
movsb
mov
jbe
jne
sbb
call
cmpsb
xchg
les
sub
cmp
clc
aaa
pop
clc
mov
icebp
inc
ds
or
fsubl
cmp
stos
adc
js
cli
ficoml
into
test
push
popf
pop
repnz
add
adc
xchg
mov
push
mov
scas
adc
pushf
insl
xchg
pop
lea
daa
xorl
dec
pop
sahf
mov
jno
cmp
inc
dec
jns
jne
loope
xchg
rorb
scas
insl
lds
test
push
lret
mov
push
jecxz
leave
add
mov
dec
nop
inc
cmp
lock
sub
test
scas
push
jl
pop
jmp
jb
adc
cwtl
adc
pop
sub
push
sti
scas
ss
je
fsubrp
add
dec
push
ss
sub
jl
jl
js
jae
xchg
xor
jg
or
fstpt
mov
or
push
xchg
cmp
pushf
cltd
mov
pop
es
dec
mov
push
sbb
fisubl
jg
push
xchg
aam
insw
inc
iret
das
cmp
cmpsl
push
push
lods
shl
fwait
into
aas
icebp
out
push
in
pop
inc
xchg
mov
test
scas
in
mov
int3
pushf
mov
out
sahf
jmp
dec
nop
sbb
xor
or
xor
inc
push
imul
mov
mov
jge
sahf
rcrb
push
jl
stos
jns
cmpsl
dec
mov
mov
movsl
popl
inc
cmp
xor
sub
and
hlt
loopne
cmp
pop
or
mov
loope
mov
inc
mov
jae
jl
mov
out
xor
nop
jne
out
and
or
enter
pop
sahf
pop
mov
mov
rclb
stc
and
icebp
fcomps
shlb
fdivs
adc
sbb
and
inc
ret
mov
jl
pop
lret
leave
popl
dec
pop
push
popf
and
dec
and
pop
and
int
push
dec
fstpl
xor
lock
xlat
xor
cld
mov
cmpsl
jmp
mov
inc
nop
pop
scas
jp
sub
pop
enter
ffreep
push
loopne
fcom
jge
dec
sub
or
xorl
mov
loopne
mov
jl
nop
mov
mov
js
into
mov
pcmpeqw
xchg
mov
or
mov
cmpsl
jo
shl
xchg
xchg
scas
xchg
cmp
jo
cld
loope
xorl
push
adc
cmp
test
inc
imul
push
mov
mov
fcom
push
push
cmp
scas
push
aas
sbb
pop
xchg
inc
test
lahf
cld
lock
daa
sub
mov
hlt
cmp
mov
imul
mov
cs
cmpb
repnz
push
out
pop
leave
jae
dec
out
jg
push
or
sbb
mov
mov
pop
mov
lods
add
sub
push
add
out
adc
lret
inc
mov
repz
movsl
jg
cmc
xchg
negb
xchg
adcb
addr16
cmc
pop
sahf
or
lret
lods
mov
xchg
clc
and
jmp
push
cmp
sbb
sbb
incl
cmp
lret
or
pop
mov
in
jp
inc
cmpsb
les
cmc
cld
cmp
mov
push
sbb
push
sahf
sbb
cmp
sbb
pop
mov
inc
mov
fdivrs
out
das
and
scas
in
push
addr16
push
add
xchg
dec
mov
or
fsubr
sub
adc
loop
sbb
sti
or
mov
jmp
addr16
les
xchg
insl
mov
lret
rclb
mull
clc
testl
mov
mov
or
fmuls
and
leave
test
insb
gs
jo
xlat
icebp
or
stos
stos
mov
sub
out
mov
dec
outsb
push
xchg
adc
push
lock
iret
fists
insl
and
mov
fstl
cltd
fbstp
into
or
test
je
icebp
repnz
out
int
loope
jge
call
add
scas
push
or
sbb
pop
dec
and
jo
mov
jmp
pop
outsb
xlat
inc
sub
jl
jae
pop
ds
jns
jbe
add
jbe
fbld
ss
fmul
mov
movsb
mov
rolb
sbb
sbb
mov
xchg
daa
fisttps
testb
mov
sbb
sub
push
adc
enter
add
pop
xor
or
xor
pop
mov
cmp
aaa
dec
je
shlb
push
push
push
testl
cmp
insb
mov
inc
lock
mov
aad
in
ss
das
sub
lock
aam
push
stc
mov
ds
jecxz
dec
or
loop
push
daa
push
jge
bound
nop
js
pop
stos
fadds
into
mov
test
test
mov
cwtl
scas
adc
push
test
popa
outsb
negb
add
mov
jge
int
icebp
inc
sbb
jmp
sbb
jmp
push
out
stos
insb
test
out
in
cli
mov
push
test
push
mov
jecxz
imul
mov
cmc
push
mov
les
mov
adc
sbb
fbstp
sub
dec
orl
mov
loopne
mov
lea
enter
jns
dec
mov
pop
mov
mov
push
pusha
push
or
loope
mov
jo
lea
and
test
fistpll
std
xor
adc
fdivr
pushf
fistpll
call
jns
jb
fdivrl
idiv
lret
adc
pop
dec
lds
scas
push
inc
lcall
mov
rcll
subl
push
fldcw
movsl
xor
repz
add
xchg
mov
jnp
add
sub
xchg
dec
and
push
jne
divb
dec
push
inc
out
mov
cld
mov
aas
add
pop
subb
aam
daa
mov
repz
adc
or
leave
inc
jmp
dec
ret
int
out
push
dec
mov
jmp
mov
pop
ljmp
cmpsb
aad
outsb
cld
ficoms
loope
dec
out
pop
mov
xor
loop
sti
int3
sub
push
inc
cmp
cltd
cmp
add
and
dec
lock
clc
out
fucom
mov
xchg
in
xchg
lret
mov
nop
push
je
inc
xchg
rcr
sub
jb
call
lcall
xchg
cmp
pusha
jno
shl
mov
inc
add
mulb
jns
cmp
ja
loop
rclb
clc
cmp
mov
cmp
int3
repz
dec
mov
outsb
testb
negb
push
push
push
cmp
arpl
imul
xor
loopne
sbb
push
aas
dec
fwait
cmp
dec
mov
nop
aaa
mov
cmpsl
pop
jl
jb
testb
lret
sbb
mov
pop
nop
fsin
cmp
call
gs
rorl
dec
fists
insb
pop
cmp
dec
dec
repz
mov
pop
dec
cltd
mov
stos
xchg
in
fwait
pop
sarl
int
pop
mov
cmp
or
adc
lcall
fdivrl
mov
bound
and
ret
pop
push
imul
ror
add
pop
mov
add
sub
into
inc
sub
adc
dec
pop
mov
out
push
adc
hlt
arpl
in
insb
push
je
cmp
pop
xor
clc
fsubl
pop
jb
daa
ss
lret
out
mov
aaa
ret
add
sbb
repz
xlat
dec
pop
outsb
loopne
cltd
and
or
frstor
inc
movsl
cmp
mov
lock
aaa
lcall
mov
pop
cmpsb
call
push
ljmp
or
outsb
mov
ds
inc
rorb
es
sbb
jns
ret
dec
mov
gs
mov
popa
push
out
jecxz
ss
out
xorl
or
stc
fldl
cmpsb
test
lds
jp
mov
mov
mov
jg
js
pop
dec
or
sub
insb
jle
adc
cmp
in
fs
xchg
xchg
jae
and
es
jp
sub
lods
nop
pop
push
jns
aaa
in
inc
inc
push
dec
sar
xchg
sub
and
ja
sbb
mov
dec
adc
sti
sbb
stos
and
int3
mov
pop
dec
cltd
cmpl
aaa
enter
fs
cmp
sahf
add
push
or
dec
test
in
rorl
add
xor
lret
cli
xchg
push
adc
lods
in
hlt
jae
mov
jmp
mov
sbb
jo
push
sub
xchg
je
jle
fwait
adc
add
jnp
clc
mov
lret
outsl
das
fstps
clc
mov
je
sub
ds
mov
imul
and
pop
loope
fsubr
push
imul
xchg
sub
dec
cmp
test
mov
lret
rcrl
jmp
out
sbb
scas
outsl
cmpb
mov
leave
pop
adcl
cmp
xor
sub
adc
and
ret
ret
xchg
mov
popa
aaa
scas
sbb
or
int3
jg
faddl
add
cld
jecxz
dec
fildll
popa
pop
dec
dec
ss
lcall
adc
inc
daa
mov
dec
push
cli
cmpsb
movsb
shl
or
jae
cmpsl
sti
imul
repnz
or
movsb
push
cli
push
dec
imul
xchg
enter
or
push
cmp
mov
loop
out
adc
inc
arpl
sbb
or
data16
imul
mov
dec
shr
call
mov
push
xchg
lcall
movsb
jae
push
movsl
sbb
pop
je
mov
aas
and
sub
inc
push
jo
in
dec
inc
dec
xchg
dec
loopne
sbb
or
test
push
repnz
xchg
mov
inc
inc
xor
cmp
mov
xor
xor
inc
add
or
inc
loop
jmp
sbb
sub
pusha
push
pusha
sti
cmpsl
dec
cli
subl
pop
in
dec
int3
pushf
sbb
jne
test
pop
in
mov
aaa
add
mov
mov
pop
mov
sub
push
sarb
icebp
xor
lock
or
xorb
ljmp
arpl
inc
loopne
xchg
mov
mov
xchg
and
xor
lock
inc
testl
mov
mov
inc
fsts
sbb
dec
mov
push
sub
dec
adc
dec
adc
or
xor
sub
adc
cmp
in
cmpsl
pop
push
cs
into
mov
outsl
add
mov
outsl
insl
cld
lock
aad
faddl
adc
scas
add
mov
adc
add
sti
mov
ror
test
or
mov
lret
dec
ret
pop
xchg
and
add
and
cmp
jge,pn
es
arpl
mov
ljmp
and
pop
add
sub
adc
loop
add
xchg
aad
test
jmp
inc
mov
pop
push
and
sbb
out
cs
test
cmp
adc
inc
sub
add
cmp
call
push
push
xor
xchg
mov
sub
test
xor
mov
mov
cmpl
xor
lret
jecxz
rcr
xor
mov
push
mov
call
sub
sbb
add
jo
dec
adc
jae
xor
arpl
stc
jno
popf
inc
insl
jns
stc
in
push
fidivl
xor
je
sbb
and
lret
mov
imul
adc
repnz
dec
xor
lret
pop
mov
orb
push
or
lds
cmpsb
scas
mov
fdivs
lret
sbb
sub
sub
inc
push
jo
dec
push
sub
adc
inc
inc
xchg
and
sar
pop
gs
nop
mov
shlb
rcl
aas
mov
sub
insb
imulb
aam
outsl
and
pushf
addr16
jne
sub
mul
inc
sarb
fisubl
cmp
xorb
adc
outsb
rcrb
aam
into
insl
outsl
jl
mov
inc
dec
mov
out
mov
sbbb
cmp
pop
arpl
out
xchg
movsl
jl
sbb
inc
ss
imul
lods
les
mov
outsb
movsb
cmpl
push
sub
push
cmc
inc
push
jg
jo
leave
imul
cltd
or
nop
adc
repnz
pop
outsb
xchg
inc
xor
enter
lds
or
test
outsb
stc
add
dec
int
test
and
cmpsl
imul
mov
cltd
jbe
sbb
or
inc
imul
mov
ljmp
pop
jno
fsubl
loope
sub
jb
imul
pop
loope
bound
inc
cmp
lret
lcall
pushf
xchg
and
lcall
push
ficoml
jmp
ficoml
lea
std
dec
push
and
xor
mov
sahf
mov
je
lcall
rol
shrb
data16
aas
pop
inc
sub
jge
imul
and
mov
add
pushf
sub
rcr
pop
int
mov
imul
mov
mov
int
push
enter
mov
lods
dec
mov
xchg
xor
cwtl
sub
pop
imul
sahf
or
mov
adc
xor
sbb
pop
inc
aas
in
cmp
mov
cmp
mov
call
jnp
mul
fdivrl
mov
mov
pop
mov
lods
bound
aaa
lock
repz
neg
outsl
rolb
xor
fxch
sub
xchg
cwtl
lret
adc
outsl
xor
lds
lret
jnp
xor
dec
sub
jmp
inc
aad
imul
push
mov
ds
aaa
pop
mov
aaa
fstpt
and
inc
orl
out
jmp
addl
bnd
jmp
push
fidivrl
fwait
mov
pushf
icebp
lcall
add
xor
mov
adc
jno
sbb
inc
and
cmp
mov
in
pop
scas
push
repz
pop
addr16
jnp
xchg
dec
jge
int
inc
sbb
push
ljmp
in
int3
pop
idivl
mov
loope
arpl
adc
adc
mov
out
lret
pop
rcrb
cld
shlb
int
xor
xor
sub
shll
popa
sub
loop
fisubs
push
sub
jnp
cmp
es
inc
lret
sub
xchg
cmp
je
iret
mov
mov
jne
push
es
aaa
mov
ret
ja
xor
jp
bound
or
ds
sbb
stos
cmp
cmp
sub
dec
out
mov
push
mov
pop
adc
or
mov
imul
mov
push
pop
addr16
dec
idivl
popa
add
jae
push
add
jecxz
pop
jo
pop
sub
mov
out
iret
ret
add
jecxz
or
mov
jl
jbe
mov
sub
xlat
xor
sub
ret
insl
mov
and
scas
xor
inc
cwtl
sub
jne
lahf
loope
icebp
lret
xchg
aam
push
aas
jg
mov
int
cmp
mov
test
enter
pusha
mov
fwait
dec
dec
dec
inc
xor
cltd
iret
mov
jecxz
xchg
pop
xor
pop
pop
xchg
inc
pop
repnz
std
js
jge
mov
mov
inc
jne
notb
pop
sti
adc
rcl
popa
int3
cmp
cmp
xor
test
mov
cmp
pop
and
jno
fcmove
push
cmc
data16
jb
nop
or
lds
push
daa
das
xchg
out
testl
sbb
sarb
push
dec
into
cmp
pop
shlb
pop
sub
testl
add
divl
xor
jno
mov
lahf
cmc
jl
jne
pop
adcb
jp
xchg
sbb
sbb
mov
mov
aas
sarb
lock
sub
or
xor
mov
lock
push
cmp
cmp
int
jo
cmc
fcmovbe
in
pop
lret
push
adc
lret
loope
xor
bound
in
sub
ror
pop
stos
lret
push
mov
push
adc
enter
jecxz
fcmovnu
dec
jno
adc
lea
inc
pushf
jae
aad
lahf
dec
cmp
outsb
xor
xchg
addr16
rcrb
mov
xchg
icebp
popa
pop
pop
in
pop
mov
jg
push
fsubr
or
stos
shlb
push
adc
and
je
stos
aad
jns
xchg
mov
push
xor
nop
test
dec
popa
gs
or
ret
aad
inc
daa
lcall
mov
sti
in
jb
sahf
cld
xchg
mov
test
pop
cmp
imul
jae
inc
mov
mov
push
adc
fadd
mov
into
data16
jae
cmp
pop
das
inc
aad
mov
outsb
jmp
pop
ret
in
lahf
je
or
rclb
xor
fcmovne
push
loop
xchg
arpl
roll
ret
inc
fidivrl
mov
lret
xchg
fcomp
std
jle
es
fmull
mov
movsl
adc
mov
addr16
adc
push
or
cwtl
mov
adc
xor
push
jnp
aam
lds
pushl
xor
inc
jo
inc
add
add
jns
mov
std
stos
loop
lahf
cwtl
cmp
pop
jecxz
mov
testl
stos
mov
mov
add
call
leave
push
stc
aas
and
rolb
ss
lret
adc
fisubrl
or
int3
add
and
fstl
jecxz
les
lret
ds
cwtl
into
or
inc
sbb
imul
sbb
xorl
add
jnp
mov
fimull
popa
adc
loopne
inc
enter
adc
push
cld
mov
lods
addr16
popa
xor
ret
or
fildll
cmp
push
int
out
mov
or
cmp
or
in
mov
ja
test
inc
andb
enter
pop
hlt
popa
dec
jecxz,pt
addr16
fs
sbb
movsb
lretw
imul
lret
sbb
xchg
inc
jb
xchg
mov
xchg
gs
push
xor
insl
sarb
and
subl
daa
push
cmp
pushf
xor
pop
xchg
clc
std
call
inc
popf
movsb
push
push
cmp
and
lods
je
fdivs
ret
fldt
sbb
inc
xchg
add
mov
sub
mov
ret
inc
sar
sbb
pop
ror
in
aaa
orl
ja
xor
cli
mov
cwtl
pop
fistpll
orl
mov
loopne
in
jl
jo
andb
sub
push
into
orl
lds
bound
xor
add
and
cwtl
in
ja
dec
dec
cmp
pop
push
push
cmp
js
setne
leave
in
std
mov
test
cwtl
dec
fwait
sbb
fsubrs
push
stos
pusha
es
or
outsl
jbe
mov
sbbb
xor
mov
jmp
mov
push
pusha
jb
cmpsb
mov
fbld
mov
ja
out
shl
ficompl
jb
xor
or
cmp
push
xor
xchg
xorb
add
out
fsub
xor
xor
ds
aam
xchg
fsubs
fisubl
lods
imull
das
mov
xor
sar
add
cmp
mov
daa
inc
xor
mov
cmp
int3
xlat
add
imul
lret
mov
sarb
movsb
push
nop
lahf
notb
xor
inc
ror
pop
sbb
in
sbb
clc
dec
sub
jle
push
imul
sti
in
cmp
and
aam
mov
lods
mov
adc
test
test
mov
rcll
pop
std
dec
leave
mov
pop
jmp
cltd
call
lods
test
addr16
or
cli
mov
inc
xor
jns
push
scas
cmp
leave
pushf
xor
pusha
mov
sbb
and
push
and
daa
lods
or
mov
movsl
mov
arpl
popf
ficompl
mov
ret
loopne
shlb
in
loopne
popf
xlat
jbe
pop
js
testl
das
dec
xor
pop
fistps
jo
dec
idivb
mov
das
cmp
es
mov
outsl
push
out
and
mov
addr16
xchg
in
addr16
xor
mov
fstl
push
outsb
xchg
lret
inc
sahf
cwtl
clc
enter
push
mov
das
leave
rolb
jno
test
push
add
inc
inc
sub
inc
jbe
cmp
add
ds
and
push
sbb
push
js
sbb
sahf
add
divl
jmp
sbb
loop
and
ret
push
aas
mov
xchg
sbb
and
fsts
aaa
xchg
jge
in
ljmp
jnp
daa
lahf
adc
movsb
sti
push
jns
push
inc
cli
pusha
outsb
sub
test
inc
adc
mov
lock
dec
in
int3
mov
mov
outsb
dec
xor
aas
imul
inc
push
lahf
subl
cmp
lahf
mov
xlat
jo
dec
inc
fidivs
dec
test
mov
sub
into
mov
leave
lahf
xlat
and
push
xchg
insb
adc
mulb
lods
xchg
sub
lods
sbb
push
push
dec
test
int3
enter
test
cmp
mov
xchg
insl
push
sbb
jle
lcall
loop
xor
sbb
add
cltd
movsb
cmc
pop
jo
out
icebp
dec
fnstsw
outsl
sbb
je
mov
push
in
loopne
jg
inc
push
test
pop
lock
or
je
and
imul
nop
bound
and
cmpsl
loopne
test
inc
imul
xor
daa
xlat
daa
or
ss
shl
notb
shll
repz
in
dec
into
push
mov
outsl
push
add
stos
xchg
cmc
out
jmp
mov
cmpb
sub
inc
icebp
pop
scas
rorb
dec
shl
fcmovbe
add
idiv
cwtl
jb
xchg
mov
stos
cwtl
dec
stc
mov
push
adc
mov
daa
outsl
or
fs
popw
out
inc
mov
addr16
cmp
shll
pushf
popa
mov
pop
cmpl
mov
pop
push
cli
xor
pop
daa
pusha
ret
xchg
mov
into
dec
leave
and
je
sub
imul
push
leave
mov
mov
inc
jge
sub
orl
addl
insb
mov
or
outsl
in
sbb
or
mov
mov
push
cmp
push
adc
scas
data16
dec
mulb
aas
stos
dec
jb
ss
ljmp
ljmp
jbe
dec
inc
pushf
jo
xor
and
js
xchg
pop
mov
aam
clc
scas
fistpl
xchg
inc
adc
adc
mov
push
lea
das
sbb
mov
xlat
in
lret
jno
call
lret
mov
inc
int
jne
pushf
shl
mov
and
mov
add
add
aaa
add
ss
mov
in
adc
movsl
sub
adc
and
sbb
stos
jl
inc
cmp
jne
js
pop
jmp
pop
ja
nop
nop
inc
push
movsl
sbb
imul
cs
ds
sbbl
sub
dec
pop
in
and
lcall
cmp
cwtl
aam
inc
scas
cmp
loopne
xor
int
mov
mov
inc
jo
xchg
sarl
adc
pop
push
mov
lcall
insb
mov
push
adc
scas
push
jbe
orl
into
fiadds
aad
stc
out
in
pushf
pop
cli
jle
sub
shlb
mov
cs
arpl
dec
push
xor
xchg
push
in
add
xchg
jge
dec
lret
xor
inc
clc
inc
pop
add
lcall
ds
scas
test
jbe
sahf
fbstp
hlt
sub
data16
jbe
pop
xor
mov
pop
mov
push
adc
sbb
jns
dec
js
or
push
xor
add
cs
pop
pop
das
pop
mov
sbb
jg
stos
add
mov
sub
pop
adc
mov
xchg
cmp
daa
add
dec
push
mov
pop
add
in
fdivrp
flds
push
aam
xor
mov
ret
jb
jo
outsb
es
popa
sahf
pop
ja
jmp
xchg
test
push
fidivs
pop
dec
mull
add
cmpsb
xor
jg
faddl
pop
clc
aas
sub
dec
xchg
xor
or
cmp
mov
lods
lea
cmp
sbb
add
and
in
out
mov
out
mov
sahf
and
dec
int
fsub
rol
cli
out
jl
stc
mov
push
cwtl
inc
js
jae
jns
inc
lcall
dec
mov
pop
aad
xchg
jg
into
dec
neg
repnz
pop
mov
js
pushfw
pop
cmp
sbb
inc
push
jbe
lret
aaa
adc
call
pop
ret
mov
mov
lcall
add
rorb
ds
xor
fstpl
fucomp
pusha
mov
xchg
xlat
in
mov
out
and
mov
cltd
jmp
pop
xchg
into
inc
mov
adc
xchg
pop
fcompl
mov
cmp
hlt
adc
lret
inc
and
test
loop
stos
jns
xchg
lods
icebp
out
fwait
ss
fnstsw
mov
adc
loopne
in
or
sub
je
test
mov
sti
dec
scas
lea
push
dec
inc
fisubs
roll
push
inc
add
jne
data16
pop
push
add
in
adc
cmpsb
sbb
mov
jns
lret
lds
cmp
pop
je
and
add
je
cltd
addl
popa
sbb
mov
push
or
loopne
push
aam
ljmp
jne
dec
fnstenv
sti
mov
mov
cs
mov
outsl
std
aad
mov
test
xchg
aaa
jl
xchg
hlt
loopne
sub
lock
pop
mov
mov
aaa
pop
bound
in
test
data16
orb
add
out
push
mov
push
lahf
fsubr
jne
jo
popa
pop
mov
xchg
add
aaa
leave
xor
adc
mov
sbb
rolb
mov
ja
and
add
inc
lock
push
push
rcr
add
add
inc
stos
sub
or
hlt
push
insb
rcrl
push
gs
and
xchg
or
sub
mov
jae
push
les
in
sub
sub
cld
lcall
call
jno
lret
dec
xor
sub
cmp
leave
mov
in
inc
inc
ja
sub
icebp
sar
enter
xor
hlt
adc
sbb
or
jns
test
sbb
xchg
bound
cmp
movl
dec
scas
pop
adc
rcrb
fsubl
and
xor
ds
xchg
out
jnp
call
add
test
test
shrl
cmp
inc
bound
add
or
sub
les
mov
cmp
or
shrl
push
das
minps
out
sub
sub
sti
mov
jnp
imul
scas
jp
xor
push
mov
dec
push
add
rorl
lea
jns
dec
push
mov
xchg
lods
pop
mov
arpl
cwtl
jbe
pop
in
mov
push
out
vxorps
fcomps
jae
dec
aad
jle
imulb
pop
rcrl
ret
and
cmp
xor
lret
push
outsl
xor
in
cwtl
cmp
sbb
int3
sti
jle
jg
lock
out
andnps
pop
and
in
ja
sub
cmp
mov
mov
pusha
into
inc
aas
sbb
adc
mov
cli
and
sub
out
fnstcw
cmc
fdivr
js
mov
mov
int
hlt
sbb
pop
test
fidivrs
ja
lock
mov
xchg
in
lcall
popa
jnp
cmpl
xchg
js
mov
aam
jle
push
popf
fwait
call
shrl
jno
and
add
cld
dec
icebp
stos
xor
stos
enter
in
filds
pusha
orb
adc
aam
stos
cmpsb
adc
nop
gs
inc
lea
xchg
loope
mov
in
sub
xchg
add
cmp
sub
cld
aas
mov
movsl
sbb
movsb
xor
bnd
movsl
add
dec
movsb
pop
out
leave
out
ss
popf
push
push
inc
sbb
or
into
test
mov
call
loope
lcall
inc
mov
ret
stos
fs
out
sub
mov
dec
idiv
nop
add
dec
fcomps
jp
adc
inc
sub
pop
inc
mov
adc
pop
mov
pop
stc
lock
repz
dec
shrb
xchg
stos
mov
jo
mov
fdivrp
inc
js
mov
rolb
mov
and
push
nop
pslld
pop
mov
data16
fdiv
mov
and
push
push
mov
pop
fwait
mov
adc
pop
sbbl
xchg
out
pushl
add
test
out
inc
mov
push
cmp
in
dec
rorb
mov
xchg
fs
xchg
adc
imul
in
sbb
xchg
movb
mov
pop
cmp
pop
mov
ljmp
dec
sbb
ret
sbb
stos
ror
lods
into
and
adc
jg
sub
movsl
loopne
xchg
sbbl
es
mov
enter
out
xor
jb
movsb
xor
cld
mov
fstps
js
fimull
pop
mov
add
imul
push
sub
xlat
jbe
sbb
mov
inc
test
mov
cs
xor
jns
jle
xor
call
add
bound
dec
sub
xchg
mov
icebp
sbb
adc
vmovdqa
mov
jne
aas
popa
arpl
ds
xor
pop
push
ljmp
fcom
jg
cld
mov
inc
pop
aas
movsl
dec
loopne,pn
iret
mov
push
lahf
sub
pop
mov
mov
fstp
mov
std
cltd
sbb
loop
fistps
clc
mov
jle
lret
push
icebp
cmp
popa
lods
sbb
xchg
sub
and
ret
mov
push
pop
cmp
pop
or
add
add
push
adcb
pop
dec
pusha
enter
lds
jbe
pop
dec
lea
xor
adc
xchg
fadds
mov
daa
dec
clc
cld
or
outsl
imul
popa
outsb
repnz
repz
bound
cmp
inc
andl
inc
arpl
sahf
out
mov
xchg
and
fisttpll
sub
inc
jb
push
mov
movsb
cmp
push
mov
xchg
mov
dec
cmc
add
jg
jb
sub
ljmp
fsts
cmpsb
lds
inc
fisubs
cmpsb
mov
sbb
cmpsb
pop
enter
sub
incb
rcrb
cmp
or
push
mov
push
test
dec
or
dec
ds
in
sub
or
cs
ja
nop
ljmp
pop
jle
jo
or
dec
and
ljmp
imul
mov
mov
loop
adc
cmp
jae
and
or
mov
mov
test
add
jle
test
out
imul
jecxz
or
inc
or
test
data16
test
jp
mov
sub
adc
cmp
mov
loopne
pop
fxch
pop
out
nop
ret
push
pusha
jle
push
pop
outsl
daa
mov
ret
xchg
dec
and
outsb
movsl
sbb
jno
pop
push
loope
and
sbb
fistl
das
popa
inc
enter
aas
or
mov
fisubrs
mov
cmp
cmp
pop
movsb
push
loop
stos
ja
inc
les
cmp
inc
push
movsl
cwtl
xchg
out
dec
ret
pop
clc
lock
xor
cld
xor
sti
rorb
fimull
popf
les
mov
push
mov
pshufw
sub
fsubrl
sub
xchg
push
sbb
xor
adc
jae
inc
dec
dec
aaa
test
nop
push
sti
jmp
lcall
xlat
ljmp
pop
test
lcall
popa
pop
sbb
bound
lds
jl
pop
xchg
xor
dec
int3
js
dec
push
sub
dec
pushf
hlt
mov
rcr
add
sub
fiadds
mov
leave
jne
pop
mov
je
xorb
fisubrs
jp
mov
mov
dec
xchg
mov
mov
in
rclb
int3
mov
sub
mov
scas
mov
cwtl
cltd
lret
aad
shrl
pop
xchg
lods
lds
cld
push
dec
test
int3
out
mov
stos
xlat
push
es
pop
test
fisubl
mov
fs
jne
push
mov
inc
nop
movsb
cli
in
mov
test
jecxz
sbb
mov
outsl
scas
xor
cltd
pop
loope
adc
add
sub
fwait
push
enter
mov
cmpsl
mov
push
add
push
mov
jp
add
and
rcr
dec
push
incb
lcall
or
adc
adc
pop
inc
and
call
and
addr16
cmp
call
cmp
push
insl
mov
cmp
push
fsub
stc
scas
stc
sub
test
xchg
and
mov
cmpsb
aas
mov
push
repz
mov
cwtl
test
xor
insb
out
les
pop
in
movsl
cmp
ljmp
mov
xchg
inc
jnp
movsb
jo
imul
negl
das
sets
ficomps
xorb
push
mov
fcoms
pop
pop
inc
es
stc
fdivr
cld
fists
lcall
cmp
sbb
cld
pop
dec
sbb
in
xor
scas
lds
push
push
push
lcall
push
data16
ror
lock
rclb
mov
js
jp
xlat
jns
jp
mov
push
lea
sub
cmp
mov
xchg
rolb
pop
pop
outsb
cmp
imul
stos
test
sbb
fldenv
inc
scas
cmp
sete
xchg
jle
adcl
inc
jl
test
jae
lahf
or
push
sub
imul
repnz
push
pop
and
inc
scas
outsb
gs
cmp
mov
fsts
push
or
xchg
lcall
adc
cmpsl
add
fwait
push
rcr
jb
stc
mov
aad
mov
jecxz
js
lods
xchg
insb
pop
test
add
sbb
inc
sbb
ja
shlb
inc
xchg
rolb
or
ret
or
mov
jmp
push
adc
repz
das
fidivs
ljmp
iret
cmp
arpl
sbb
dec
jno
stos
adcl
lcall
pop
jl
cs
cwtl
loopne
cmpsl
pop
jnp
inc
mov
inc
repnz
addr16
jg
dec
rclb
pop
rorb
mov
mov
popf
out
mov
mov
loopne
pop
push
ja
push
lock
push
lods
and
pop
pop
and
xchg
cmpsb
mov
xchg
pop
bound
out
loope
dec
and
ja
xor
jmp
mov
push
stos
lock
fs
pushf
dec
lods
add
ret
xchg
rcll
xlat
clc
sub
aam
mov
test
test
test
nop
jp
mov
dec
sbb
dec
pop
shlb
mov
int
cmp
dec
mov
mov
cmp
lea
fmul
lods
xchg
xchg
into
std
sbb
stos
jg
mov
push
outsb
mov
ljmp
fdivrs
inc
push
mov
outsl
dec
jb
mov
mov
orl
cwtl
add
leave
or
ret
mov
imul
xor
lcall
push
inc
ljmp
adc
mov
sub
mov
mov
and
pop
mov
dec
iret
hlt
jp
cmp
inc
jbe
out
out
mov
xlat
inc
out
dec
jmp
lret
cltd
cmp
cmp
push
mov
mov
mov
scas
out
add
mov
mov
lcall
test
scas
mov
lds
sbb
and
sbb
adc
lock
jo
ret
push
sub
loope
dec
rorb
mov
xchg
adc
pop
pusha
pushf
subb
pop
das
xchg
cmpsl
pop
addl
ds
dec
lods
inc
mov
inc
clc
sbb
movaps
mov
in
daa
mov
test
mov
fnstenv
je
fwait
pusha
dec
ret
addr16
cmpsl
dec
xchg
or
loope
notl
stos
int
push
int3
cltd
xlat
nop
pop
cld
add
test
xchg
scas
js
repz
mov
or
cli
push
jae
and
js
stos
lcall
jge
std
arpl
adc
idiv
les
pavgb
mov
cmp
mov
mov
and
ss
or
bound
add
sub
mov
outsl
out
insb
sbb
movsb
scas
nop
mov
push
fcmovu
mov
cli
fisubs
and
or
and
cmp
add
mov
pop
fucomp
xchg
dec
pop
out
and
hlt
mov
ljmp
cwtl
mov
adc
jb
cmova
fldcw
loop,pn
ret
loopne
ficomps
jnp
iret
fcompl
dec
cltd
sub
cmp
adc
push
pop
xchg
loop
cmpsl
push
jne
repz
or
je
test
mov
mov
repz
xchg
mov
std
mov
mov
and
push
shll
add
mov
fistpll
or
mov
xchg
mov
aam
int3
xor
pop
add
xchg
inc
ror
std
out
mov
cmp
cmp
iret
mov
js
fldz
cmpsl
lods
sbb
xor
test
xchg
jae
sbb
sbb
lea
aaa
jmp
xor
movb
inc
jle
aaa
call
inc
add
js
mov
jl
and
fildll
imull
mov
addb
cmpsb
and
push
pop
dec
ja
ljmp
rcl
cmp
pushf
scas
add
xor
jg
mov
jecxz
int
cmpsb
call
fwait
cltd
xchg
shl
dec
push
ret
into
lods
addr16
jbe
or
icebp
adc
dec
imul
leave
das
push
out
sbb
mov
je
lahf
xlat
test
jle
je
fnstsw
jmp
sub
or
dec
mov
xchg
imull
out
mov
sbb
pop
sub
in
in
inc
dec
mov
and
and
movsb
and
xor
mov
add
outsl
jne
pop
cmpsb
xchg
int
pop
pop
pop
xchg
icebp
push
sahf
adc
dec
pop
dec
xchg
add
sub
fadds
hlt
ret
clc
mov
pop
push
adc
in
cmp
push
inc
divb
add
sub
mov
and
jb
xchg
test
xchg
lcall
test
sbb
cmp
mov
xor
repnz
imul
dec
ja
out
add
testb
and
js
pushf
inc
das
iret
scas
pop
nop
mov
pop
pop
and
out
jl
lahf
mov
ja
pop
lods
outsl
xchg
mov
stc
leave
pop
mov
in
ljmp
sub
xor
xor
loop
pushf
icebp
repnz
pop
cmp
or
insb
stos
sub
and
pushf
cltd
cmp
scas
sbb
stos
mov
cwtl
mov
out
movsb
rcll
arpl
pusha
enter
xchg
rorb
cmc
std
mov
mov
ret
pop
mov
lret
das
notl
popf
adc
push
std
les
sbb
addr16
or
ficoms
loop
jp
inc
sbb
push
jbe
mov
and
test
adc
fisttpl
shlb
add
stos
loopne
mov
jmp
xor
jae
sub
jb
inc
js
icebp
rcrl
enter
idivb
fistpl
mov
xchg
inc
adcb
shrl
mov
xchg
sbb
jb
push
push
stc
mov
scas
cmpb
push
js
fwait
jle
jo
out
jecxz
in
push
pop
aam
cmp
mov
mov
imul
shl
fstl
and
cwtl
xor
or
pop
repnz
into
xchg
cmp
mov
movsb
movsl
jae
fiadds
jbe
mov
filds
add
lahf
je
filds
push
jns
scas
xchg
pop
popa
sub
xor
and
int
stc
inc
aam
pop
lret
push
stc
dec
cmp
lods
or
cmc
cmp
jne
add
push
mov
jne
add
iret
inc
ja
lret
sub
dec
pop
mov
add
sbb
xchg
sbb
xchg
jecxz
xchg
lods
dec
sub
mov
adc
rcrb
in
mov
sub
in
mov
push
pavgb
insb
cs
shlb
fadds
mov
cmp
cmp
sbb
push
add
cltd
mov
and
cmpsb
add
in
push
mov
adcl
jo
mov
or
or
push
pop
pop
rol
hlt
push
and
iret
icebp
and
and
mov
or
dec
push
std
imul
test
shrl
fsubs
repnz
inc
xor
or
notb
adc
lods
and
fisubl
stos
insl
arpl
daa
jb
add
and
jne
out
popa
cwtl
add
popf
inc
inc
js
mov
and
lock
cwtl
clc
nop
xchg
sar
les
fstpl
dec
ljmp
xchg
xchg
ja
pop
pop
add
stc
inc
add
es
fldt
adc
mov
popf
xchg
pop
cmp
mov
jb
mov
ljmp
fistps
inc
sub
push
test
adc
push
stc
jnp
sub
xchg
aas
in
mov
and
push
lods
push
ljmp
aaa
lahf
repz
in
hlt
add
jp
and
sbbb
xchg
or
fildl
xor
pop
push
cmp
ss
and
sbb
cltd
cld
addr16
fs
inc
or
cli
hlt
fsubrl
sbb
xchg
mov
jbe
xor
pop
xor
or
fcmovb
mov
shll
das
cld
movsb
and
cltd
sahf
jge
insl
sub
add
pop
jno
aas
dec
loop
mov
jecxz
jg
xchg
xor
mov
xchg
movsl
ret
mov
and
ret
test
push
mov
shl
push
dec
push
in
push
sahf
push
std
shl
fld
add
sub
mov
sbb
xchg
add
sbb
mov
cmp
adc
dec
stc
out
shl
sti
js
std
xchg
pushf
loop
test
das
adc
dec
shl
inc
cmpsb
nop
insl
lcall
inc
pop
fildl
pop
push
adc
mov
and
dec
jmp
adc
jo
xchg
mov
jp
loope
in
push
outsl
pusha
xor
lock
inc
popf
jmp
sahf
jle
push
inc
in
add
rcrb
gs
fcmovnbe
inc
rcrl
or
mov
lret
sti
fs
repnz
cs
loope
or
or
les
movsb
add
mov
adc
lods
mov
roll
fwait
mov
cmp
inc
pop
in
rcl
xchg
push
add
mov
mov
sarb
xchg
mov
je
sti
dec
pop
jecxz
jns
pop
sub
jbe
test
mov
insb
js
orb
and
loop
and
test
jns
inc
adc
stos
dec
out
outsl
sub
xchg
push
add
repnz
scas
movsl
not
mov
cmpsb
shll
jns
popa
mov
or
adc
aam
orl
cli
mov
push
sarb
xchg
dec
loop
pop
pop
pushl
lods
bound
cmc
xor
inc
mov
inc
push
rolb
int3
test
mov
aam
and
add
inc
daa
cmp
add
pop
xchg
movsb
mov
movsb
inc
xchg
rcrb
jno
push
jg
pop
in
lret
in
sti
adc
outsb
pop
inc
fidivrs
rcll
xchg
orb
fwait
push
inc
add
mov
xor
pop
mov
push
dec
lcall
jbe
cli
xor
pop
or
jns
mov
mov
out
insl
in
jno
int3
and
cmp
xchg
jb
xchg
stos
mov
fs
push
inc
xor
push
hlt
sub
imul
shlb
test
in
xor
push
movsl
outsl
adc
mov
add
mov
mov
les
adc
test
lods
sub
int
sbb
lret
and
mov
sbb
movsl
aas
or
fdivp
push
mov
or
scas
adc
ret
in
outsl
jl
jg
mov
test
sub
push
lods
pop
std
fsubrl
popa
inc
popa
mov
wrmsr
add
adc
add
mov
mov
loopne
mov
mov
and
xchg
mov
adc
adc
sti
inc
lret
add
push
sahf
adc
mov
sbb
leave
add
jmp
jns
insl
sbb
inc
or
cs
xchg
pusha
in
mov
filds
cmp
push
and
mov
push
jns
int
push
nop
cli
jne
test
jae
cld
ds
xchg
mov
lahf
jbe
in
jmp
cwtl
pusha
mov
jbe
sub
inc
cwtl
std
dec
and
leave
rorl
xor
aad
inc
add
mov
or
sub
cs
pop
mov
or
jmp
xor
pop
cmp
insb
not
push
mov
xchg
mov
arpl
mov
mov
pusha
loopne
aad
fwait
dec
pop
sub
divb
lds
jmp
mov
and
enter
add
mov
mov
sbb
stos
adc
or
xchg
cli
das
out
repnz
iret
push
inc
push
adc
mov
add
inc
mov
xchg
cli
lea
xor
mov
xchg
mov
sbb
mov
gs
or
mov
mov
xor
cmp
ret
ret
adc
jle
inc
add
mov
test
xchg
pop
fwait
adc
inc
push
cmp
stos
mov
cmc
or
test
cld
push
mov
add
roll
mov
mov
xchg
push
or
inc
cmp
ret
out
or
sub
push
loop
hlt
dec
test
pop
sbb
testl
iret
lret
sarl
hlt
cmpsl
popa
xchg
pusha
leave
add
outsb
je
xchg
mov
inc
adc
inc
cmp
stc
inc
shr
xchg
push
xorb
cwtl
lea
divl
and
pushf
sahf
xchg
pop
out
nop
addr16
cmp
fwait
sbb
push
pop
push
nop
aam
pop
test
insl
mov
movsl
pop
cmp
sbb
jmp
mov
rclb
mov
mov
mov
int
into
mov
out
fsub
and
sti
lea
jge
xchg
shl
xor
cmp
or
or
inc
xchg
xor
cs
mov
ret
xchg
out
and
mov
pusha
mov
fs
inc
scas
mov
adc
lret
add
imul
jmp
and
push
push
jg
pop
fsubrs
insl
jae
in
cmpsb
jmp
ss
jae
adc
scas
and
jbe
xor
movsl
sbb
xchg
add
mov
ja
and
cmp
dec
mov
fdivp
negl
fnstcw
leave
icebp
stos
pop
movsl
lods
or
fimull
mov
addr16
out
ja
loopne
pop
icebp
in
scas
inc
and
cmp
pop
and
aas
cmovge
fldenv
add
mov
cmc
xor
movsl
adc
xor
sahf
fisubs
test
stos
sbb
lods
push
push
cwtl
lret
push
cmp
lods
data16
cmp
jnp
cmp
xor
pop
xor
dec
call
lock
push
or
adc
lods
ret
lds
int
xchg
dec
pop
lods
add
dec
jl
ss
adc
cmp
mov
out
scas
inc
cmpsb
xchg
pop
inc
jns
cs
loopne
jle
pop
mov
push
movsb
mov
dec
mov
out
add
out
sub
ds
call
sub
cmc
jecxz
mov
cmpsb
mov
sub
je
js
xor
xchg
xor
push
xor
sbbl
int3
xchg
xor
ret
repnz
cmpl
and
rol
in
sub
mov
xchg
mov
dec
repnz
mov
js
pop
and
xor
data16
and
xor
stos
mov
jns
mov
mov
cmp
jno
push
push
not
rcll
hlt
mov
loopne
inc
es
sub
jnp
adc
das
movsb
call
push
fstp
inc
pop
and
inc
push
lock
fdivl
push
xchg
dec
repz
or
mov
enter
jge
jo
xchg
sbb
into
mov
loope
fidivrl
shll
aas
stos
cwtl
mov
sbb
jne
gs
push
push
fsts
es
jge
mov
mov
je
and
xchg
sub
shll
and
pop
ret
cmpsb
lret
adc
fdivr
cvttps2pi
and
mov
js
imul
sbb
insb
and
mov
xchg
stc
jnp
aam
notl
fistpl
or
lock
loopne
enter
fmull
iret
roll
loope
mov
jno
adc
adc
mov
mov
xchg
popa
mov
sbb
push
icebp
lret
popa
jl
mov
lock
mov
out
jge
pop
push
pop
adc
imul
mov
add
pop
and
rcrl
imul
data16
mov
and
push
popa
mov
add
lret
jae
shrb
pop
sbb
into
clc
pop
push
lods
in
test
sub
and
scas
fs
cld
stos
mov
aad
sarl
nop
orb
dec
sbb
xchg
pop
sbb
inc
pop
movsl
fistl
sti
inc
mov
jae
mov
fbld
mov
push
push
jnp
push
push
daa
jp
fsub
mov
and
into
inc
sbb
mov
mov
frstor
js
call
nop
pop
repnz
std
mov
push
test
cmc
xchg
arpl
mov
xchg
repnz
cmp
mov
jo
cli
imul
push
out
cmc
sahf
dec
add
inc
ss
jl
inc
or
out
xor
xor
xor
mov
call
push
push
lock
cwtl
sarl
js
mov
xchg
outsb
fistl
ret
test
jno
sbb
sbb
enter
sti
mov
enter
sbb
dec
pop
int3
sbb
lock
mov
mov
and
add
push
clc
cltd
repz
dec
mov
loope
cmpsl
xchg
in
fiadds
popf
lret
mov
jmp
sub
push
jns
aam
inc
sub
sahf
daa
mov
xor
xor
jg
rolb
mov
mov
mov
mov
cmp
fimull
cli
pop
cwtl
sbb
adc
xor
ret
push
stos
sti
xchg
in
mov
icebp
mov
xlat
clc
or
mov
mov
push
pop
rcr
inc
ds
aas
clc
cmp
outsb
inc
push
insb
xchg
and
pop
jne
movzwl
sbb
push
pop
cmp
pop
mov
mov
lock
jbe
mov
push
adc
clc
mov
dec
xor
xchg
rorl
mov
mov
mov
jecxz
stos
jb
jb
dec
imull
inc
leave
mov
lds
jp
rcrb
jb
adc
ret
pop
jmp
movsb
divl
sti
cmc
pop
mov
adc
stc
sti
push
adc
cld
lahf
pusha
jae
push
cmp
in
call
pop
cmp
pop
out
cmovb
sub
ret
sti
fmull
imul
ss
ret
pop
or
dec
mov
jge
sbb
clc
movsl
mov
arpl
xchg
shlb
pop
or
xchg
sbb
pop
pop
or
dec
std
addr16
push
test
or
jle
lcall
and
mov
adc
das
mov
xchg
sahf
push
push
jecxz
test
hlt
lock
sub
xor
jecxz
cmpb
push
test
test
nop
xor
xor
fistps
mov
mov
cs
aad
cmp
in
jl
xor
jae
cwtl
int3
jl
inc
and
outsl
jle
pop
scas
rorl
jb
mov
pop
fimuls
cmp
mov
mov
insb
jp
sbb
add
mov
pop
ljmp
lret
push
xor
sbb
push
mov
mov
fmull
sub
fsubs
jle
mov
mov
pop
data16
and
sub
aam
and
xor
movsb
sub
cmovb
imul
cli
loopne
insl
fldl
in
xlat
psrlq
mov
pop
adc
mov
loop
test
dec
movsb
cmp
xchg
mov
pushf
pop
or
test
inc
call
mov
sub
ret
loop
and
lahf
or
lret
fsubs
jge
in
out
mov
push
icebp
xor
or
add
inc
jecxz
jbe
aas
sbb
xchg
jmp
ss
jb
inc
movb
push
outsl
cmpsl
cwtl
stos
mov
stc
hlt
add
pop
and
lret
mov
imul
jmp
sub
mov
sbb
insb
stos
fisttps
stos
push
cld
xchg
lret
scas
jno
dec
test
rcll
dec
aad
push
imul
pusha
je
lock
in
inc
xchg
cmp
jbe
leave
pop
ret
cld
push
push
push
lods
xor
movsb
mov
aaa
inc
adc
pop
adc
aad
xor
dec
dec
icebp
xor
adc
mov
out
mov
mov
cli
push
jecxz
lods
push
mov
xchg
sbb
cwtl
mov
pop
xchg
dec
push
icebp
and
testl
and
dec
push
nopl
cmpb
mov
inc
push
stc
or
add
fdivr
jp
sub
out
add
lods
adc
out
hlt
cmp
mov
inc
aas
leave
outsb
ret
popa
jle
fnstcw
fstps
lods
or
push
sub
push
sub
pusha
jge
push
push
stos
ja
in
add
stc
adc
jmp
xor
and
les
xchg
xchg
ja
rol
add
or
pop
lret
add
mov
fst
insl
mov
repz
js
mov
jb
loopne
in
test
add
rolb
xchg
mov
fs
and
call
out
int
shlb
mov
xchg
push
inc
xchg
lahf
mov
dec
push
pop
or
lods
loop
icebp
roll
out
stos
pop
sbb
mov
lcall
and
fimuls
cltd
lcall
inc
andl
les
jnp
dec
push
outsb
add
push
jg
push
shl
lods
enter
dec
in
test
sbb
out
aaa
inc
jns
jmp
outsb
pop
pop
xchg
aaa
sub
gs
shr
call
xor
xchg
sub
loopne
imul
mov
cmp
lods
jbe
cwtl
or
ret
sarl
push
js
pop
ja
rcrb
aaa
add
loop
xlat
imul
pop
jo
fcmove
jle
outsl
aaa
ret
mov
push
push
sbb
lret
cmp
ljmp
in
cmp
test
mov
bnd
jo
mov
push
xchg
xchg
cmp
sbb
mov
jle
xor
outsb
jae
adc
push
dec
pop
dec
in
and
xchg
mov
dec
mov
int
inc
ljmp
sbb
arpl
inc
cmp
sub
jnp
or
sub
out
lea
aaa
or
popa
push
cmpsb
mov
pop
add
ss
cwtl
filds
xor
out
in
divl
nop
mov
addr16
imul
jb
insl
jne
adc
cmp
pop
jl
sub
mov
ds
lods
cmp
xchg
mov
mov
mov
add
lods
repnz
les
mov
pop
aad
je,pn
fists
lret
fcom
jb
pop
and
inc
mov
jns
shr
or
and
xlat
mov
loope
lret
add
add
push
adc
ret
sub
jecxz
aad
int
mov
and
imul
mov
mov
hlt
jmp
addr16
sub
push
pop
or
jl
jp
ljmpw
mul
mov
jno
fiadds
push
jmp
mov
jbe
daa
arpl
test
add
rcl
inc
add
ljmp
ds
cmpsb
test
lea
cmp
sub
icebp
and
push
jo
dec
mov
and
cmp
adc
cs
mov
imul
clc
arpl
jp
xchg
notl
outsb
mov
call
scas
adc
jl
and
mov
push
lcall
jp
repz
test
xor
jbe
and
jnp
rorl
xor
xor
scas
sub
hlt
push
mov
push
mov
inc
mov
xchg
icebp
xorb
xchg
sub
loope
fmull
es
mov
push
and
dec
cmp
xor
and
fsts
aad
gs
shrb
lock
push
lahf
loope
xor
mov
imul
fistpl
dec
cmp
iret
push
sbb
sub
xchg
jge
or
jecxz
cmp
cli
imulb
test
movsl
mov
fisubrs
cwtl
mov
jo
insb
cmpsl
cli
push
cmpsb
stos
mov
ret
pop
xlat
cs
xchg
inc
xchg
jb
mov
loopne
or
mov
push
add
ret
or
mov
jecxz
pop
add
lret
add
mov
aam
cmp
push
jnp
mov
rorb
or
divl
imul
mov
cltd
or
shll
mov
or
enter
push
jbe
pop
rorb
lods
cmpsb
and
xor
addr16
loopne
mov
xor
and
pop
cs
insb
push
xchg
inc
lock
mov
stc
call
jmp
xor
gs
movzwl
aam
xlat
loop
std
mov
cmp
inc
and
imull
test
adc
iret
pusha
xor
xor
test
mov
aad
int3
not
popf
xchg
sbb
mov
scas
jb
push
clc
adc
js
flds
dec
ror
sbb
fwait
jo
mov
pop
mov
push
outsl
ds
sbb
ljmp
jns
mov
cs
sti
push
mov
dec
pop
dec
inc
mov
inc
dec
or
mov
ret
call
dec
push
fiaddl
xorl
adc
ja
push
data16
add
or
push
or
sub
ret
cmp
scas
pushf
sub
mov
sti
mov
in
mov
ficoml
add
das
sbbl
cmp
xorb
lcall
sbb
and
xor
xor
jl
sarl
scas
f2xm1
pop
fists
testl
sub
dec
xor
loope
pop
jecxz
push
push
inc
popa
popf
cli
xchg
jnp
mov
outsb
fisubrl
inc
pop
iret
pushf
sbb
mov
cli
push
cmp
shll
stos
stc
test
movsb
popa
outsl
mov
in
ljmp
cmc
mov
mov
push
fwait
xor
push
pop
xor
cmp
subb
dec
insl
mov
outsb
xor
jae
pop
test
mov
or
test
dec
das
dec
iret
jb
dec
dec
sub
dec
add
xchg
push
loope
and
add
insl
add
pop
mov
test
sbbb
pop
add
sbbl
and
mov
out
adc
xchg
out
pop
lods
dec
push
cld
cmpsb
lods
and
mov
out
sub
and
and
test
fisubrl
pusha
js
jae
clc
loop
in
xchg
xlat
enter
lcall
inc
aaa
xor
adc
in
dec
icebp
test
aam
xor
scas
inc
repnz
pop
daa
mov
cmpsb
test
sbb
je
pop
das
add
test
das
dec
xor
mov
sbb
pop
cwtl
mov
test
dec
jnp
push
push
lock
mov
stos
leave
cmp
push
sub
int
sti
icebp
lcall
leave
and
ret
inc
pop
and
push
mov
es
lds
int
outsb
movsl
dec
sub
rclb
fistpll
xchg
and
mov
pop
mov
mov
and
cmp
mov
mov
adc
out
inc
mov
mull
dec
sahf
xchg
push
xlat
or
js
cld
lods
push
enter
cmp
out
lods
rol
mov
cwtl
pusha
mov
les
rcll
loopne
and
jle
jmp
mov
ret
jl
shl
das
push
push
dec
imul
lock
or
cmp
mov
test
pop
ja
pop
imul
into
mov
clc
dec
jnp
jg
sarb
mov
jg
jp
pop
and
push
xor
flds
pop
sahf
fcmovbe
sahf
in
pop
xchg
mov
push
push
mov
mov
paddusw
inc
pop
mov
jmp
ret
daa
or
sub
fsubrs
xchg
sub
push
push
addr16
xor
insl
xor
int
imul
mov
adc
jae
ja
cwtl
mov
sbb
sub
xlat
gs
data16
fiaddl
and
outsl
dec
inc
lock
adc
cmp
pusha
in
jmp
inc
fsubl
sarl
rorb
lahf
jmp
mov
lods
inc
xchg
xor
call
fmuls
jno
pop
mov
mov
mov
movsl
aas
das
daa
lcall
hlt
sub
out
lods
mov
ds
push
mov
sar
xchg
sahf
ficomps
pusha
add
pop
sbb
xor
lcall
psadbw
cs
push
pop
popf
cmpsb
dec
xchg
loopne
sti
mov
lds
and
mov
dec
xor
sub
push
cmpsl
jbe
xabort
stos
inc
xchg
cli
loopne
lods
test
std
arpl
rclb
mov
xchg
aam
lret
and
mov
pop
adc
shl
fldl
dec
cltd
dec
and
jp
movsb
rol
jbe
inc
mov
incl
jecxz
push
push
jmp
xlat
push
insb
pushf
jecxz
sbb
push
lods
rolb
pop
mov
out
ret
or
xchg
das
sub
pop
inc
pop
inc
into
jle
dec
into
or
lock
jo
hlt
dec
out
mov
xlat
dec
push
dec
ss
clc
in
xchg
shll
push
shrb
mov
push
cmc
test
or
mov
or
mov
inc
daa
lds
adc
adc
lret
xchg
mov
ficomps
data16
mov
and
pop
lret
bnd
lcall
mov
jl
add
adc
lock
movsl
insb
mov
sbb
out
lods
dec
insl
aam
xor
fadd
jbe
or
fcom
pop
std
cmp
insl
dec
add
nop
mov
rorb
fcompl
xchg
les
add
mov
arpl
add
mov
test
loop
inc
dec
int
call
and
in
stc
fcoms
xchg
shrb
out
mov
aas
lods
les
cmp
fbstp
imul
pop
in
dec
mov
gs
pop
decl
mov
xor
int
mov
out
push
inc
cmp
cs
aad
mov
adc
xchg
xlat
mov
dec
mov
pop
es
mov
push
push
imul
push
push
pop
dec
mov
pushf
out
aaa
and
gs
add
adc
fdivs
xor
push
mov
sub
ss
sahf
pop
jns
repz
lret
inc
hlt
xchg
cmpsl
add
push
lock
outsl
cmp
jne
mov
add
jmp
jecxz
pop
sbb
nop
shrl
fsubrp
xchg
push
fs
ficoms
adc
mov
je
push
test
adc
test
outsb
mov
fbstp
cmp
out
clc
ljmp
mov
adc
and
fldenv
add
loopne
mov
ss
loop
adc
insb
jns
mov
insl
mov
xlat
sbb
and
fstl
dec
sbb
into
and
rorb
inc
arpl
shll
mov
push
call
jno
mov
pop
mov
add
rcr
xchg
or
divb
das
movsb
jg
out
insl
mov
aad
out
dec
incl
in
lods
inc
bound
inc
push
push
cmp
fdivrs
fstps
pop
scas
pop
jecxz
gs
pop
add
mov
vmovdqa
add
mov
lock
and
jg
aam
das
outsb
cwtl
loopne
je
jo
or
inc
fisubs
test
movsb
loop
xlat
mov
in
cld
sub
or
inc
fdivl
xchg
test
fbstp
sub
mov
mov
incb
mov
je
pop
mov
das
cmp
clc
inc
jge
push
andb
test
dec
jbe
and
or
les
pop
xchg
fnstsw
pop
shl
paddusw
repnz
stos
scas
mov
cs
cmp
mov
pusha
or
jp
dec
test
jno
enter
cmp
xchg
adc
cli
push
das
sti
xlat
push
fidivrs
mov
cmpb
sub
mov
sbb
pop
dec
leave
adc
jecxz
dec
xor
xor
xor
jge
fwait
mov
dec
xchg
jecxz
icebp
xchg
aad
loope
mov
pop
or
fcoms
add
add
int3
pop
mov
lret
xchg
lea
pusha
cltd
sti
or
sbb
insb
fisubl
jne
inc
mov
jae
mov
test
xchg
das
xchg
arpl
test
add
fstps
jae
call
add
mov
and
shll
movsl
cmp
repz
push
or
push
repnz
add
aaa
xchg
mov
icebp
cltd
sbb
imul
cltd
and
ja
xor
push
sbb
test
imulb
fldcw
leave
mov
add
out
sbb
jl
and
mov
aad
mov
sbb
test
or
mov
sub
cmpb
out
mov
lods
std
lds
jno
stc
push
dec
ror
int3
je
popf
sti
cmc
icebp
icebp
dec
push
fwait
int
or
jo
and
dec
int3
mov
xchg
and
ret
repnz
mov
movsl
pop
xor
enter
mov
adc
xchg
arpl
push
xor
lock
pushf
pop
cmp
push
xchg
out
mov
mov
adc
sub
lret
pop
inc
popa
fdivrs
mov
mov
add
lea
sbb
push
lods
cmp
mov
loopne
movsb
aas
dec
xchg
mov
adc
dec
xchg
pop
push
xchg
cli
iret
scas
mov
ss
cmc
sbb
cld
push
scas
out
jnp
jecxz
mov
xchg
cmp
rorl
xor
into
xor
inc
and
leave
inc
test
jo
xchg
adc
xchg
iret
pop
mov
and
das
mov
mov
jns
dec
mov
mov
jae
cmp
cmc
add
fisubl
scas
hlt
mov
stos
dec
mov
push
cmp
adcb
imul
mov
fbstp
movsl
cmp
jp
dec
xchg
in
dec
repnz
xlat
sub
sbb
ja
stos
dec
jge
xor
adc
pop
jnp
repnz
outsl
rorl
int3
xor
in
repnz
sarl
adc
xchg
imul
push
setp
adc
sbb
mov
stc
mov
xor
cmpsl
sbb
dec
cmpsb
dec
rcrb
gs
or
cmpsl
mov
mov
jne
ljmp
or
add
loope
cmp
fisubl
dec
adc
xchg
adcl
pop
dec
popa
or
adc
in
ljmp
xchg
cmpsb
push
inc
sub
mov
pushf
fwait
sub
cmc
fistpll
lods
mov
push
pop
push
outsl
cld
stos
stos
int
pop
sub
pop
in
in
adc
dec
pop
movsl
sbb
jp
sarl
aam
mov
std
sbb
push
mov
dec
movsb
fistl
push
or
inc
test
or
mov
mov
fimull
ds
adc
mov
xor
das
leave
mov
adcb
mov
xchg
nop
jns
mov
sti
lods
mov
dec
push
notb
sub
fadd
sub
daa
cmp
mov
mov
cmp
lret
mov
fs
mov
xor
lods
sbb
test
push
imul
sub
not
cmp
dec
popa
cmc
fldl
sti
adc
or
sub
dec
aad
jecxz
cmpl
or
pop
mov
xor
es
or
enter
std
sub
push
jp
xor
in
xor
sbb
add
sahf
inc
stos
sti
les
iret
scas
add
popf
xchg
das
rcrl
loop
xor
ret
xchg
repnz
outsl
popa
pushf
cmp
fldl
popa
ss
jae
and
fwait
mov
push
lock
mov
push
cmpsb
aad
repnz
push
push
xchg
sbb
xor
mov
push
fimull
ds
pop
in
cwtl
and
sub
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
lea
mov
pop
dec
ss
pop
fdivr
push
fidivrl
lret
add
and
mov
pop
ljmp
adc
dec
pop
dec
lea
hlt
scas
push
push
in
push
add
push
call
push
dec
mov
fs
jmp
mov
push
pushl
pop
mov
shlb
lcall
sbb
mov
sub
mov
sbb
idivb
xchg
push
aas
icebp
out
fcmovnb
pop
mov
in
jno
addl
mov
mov
jae
or
add
lock
shrb
xor
inc
sub
std
push
xchg
ljmp
in
pop
pusha
cmp
or
js
in
xchg
fimull
push
je
or
scas
clc
ret
jo
push
leave
or
cmpsl
push
push
cmpsl
mov
fdivs
add
push
pop
mov
sti
sub
inc
lahf
pop
pop
inc
xor
daa
push
push
test
add
mov
mov
popa
fiaddl
cmp
es
inc
lods
jo
push
std
sar
adc
pop
lods
jns
stc
aas
push
lods
lock
scas
inc
and
inc
adc
shl
inc
jge
lcall
sub
push
ss
negb
pop
dec
sbb
xorb
jns
cmp
pop
and
js
and
adc
int3
mov
std
inc
mov
fsubrs
mov
sbb
or
mov
jl
sub
mov
test
fcompl
xchg
out
cld
andl
mov
jns
les
mov
gs
mov
or
xchg
mov
jno
jb
xchg
jl
scas
dec
push
jecxz
push
mov
cli
inc
daa
xor
inc
cmp
mov
ret
int
pushf
mov
popf
in
lock
loopne
je
dec
inc
sahf
mov
inc
jl
inc
rorl
dec
sub
push
insb
xchg
lahf
repz
or
lods
subb
jmp
iret
div
mov
in
aad
and
cld
jp
or
mov
icebp
cwtl
mov
std
js
or
mov
test
int3
fstl
mov
mov
dec
or
pop
lds
mov
les
mov
mov
add
adc
fdiv
xchg
pushf
out
sbb
push
stos
negl
add
push
and
pop
and
cmp
jnp
cmp
insb
dec
jns
xchg
add
int3
repz
out
adc
or
xor
mov
xor
cmp
add
orb
dec
mov
xor
mov
scas
mov
or
jno
or
xor
dec
sub
cs
inc
scas
pusha
xchg
std
mov
in
movsb
inc
dec
inc
sarl
dec
daa
push
cmpsl
stc
xchg
xlat
push
mov
cltd
popf
clc
mov
jns
adc
jmp
call
lcall
push
inc
hlt
iret
fwait
iret
ficompl
stos
in
fs
andl
int
mov
filds
mov
dec
push
jg
packsswb
jae
leave
in
mov
ss
jmp
arpl
loopne
add
cwtl
push
jae
sub
xlat
xchg
mov
loope
dec
mov
shlb
cld
lods
push
lret
inc
inc
out
or
lret
inc
mov
js
push
xlat
fnsave
fnstsw
mov
inc
jmp
sub
icebp
ljmp
pop
aas
mov
add
fsubrs
push
pop
jns
enter
aas
adc
push
sub
fucomi
mov
and
pop
mov
jl
xchg
in
stos
sbb
pop
lods
xor
out
push
aad
dec
subb
cs
cld
cmp
addb
push
lods
pop
inc
fisubl
cli
dec
mov
jno
xor
xlat
jns
cmp
cmp
sahf
pop
stos
sbb
and
push
gs
xor
adc
mov
popf
inc
fwait
sub
out
mov
pushf
jb
in
scas
or
test
jge
stos
xchg
ss
mov
mov
push
fsubs
mull
ss
sbb
and
and
lock
mov
pop
cld
hlt
std
int3
xchg
add
mov
mov
cmp
or
sub
clc
mov
sbb
cltd
loopne
cmp
mov
jge
test
add
imul
add
push
sbb
pop
gs
mov
outsb
dec
push
out
mov
add
cmp
adc
scas
pop
pop
sub
add
sbb
mov
xor
xor
jg
scas
fisubrl
cld
fdivl
fwait
addl
ss
scas
movsl
lock
test
push
add
xor
outsl
shll
or
mov
sysenter
call
jns
shr
aaa
xchg
or
clc
xor
mov
push
in
aad
cli
jmp
shrl
mull
fcompl
add
adc
xchg
rcrb
in
sub
popf
jb
dec
jne
out
cli
fwait
out
int
sahf
lea
xchg
lret
js
hlt
or
dec
mov
iret
mov
test
test
popf
call
loop
and
add
and
out
test
and
in
repnz
fcoms
mov
lds
inc
in
fdivs
jnp
pusha
mov
jne
ja
jae
aas
push
jo
xchg
push
ja
sarl
fs
ds
cmp
mov
mov
mov
xorb
sub
push
scas
push
jecxz
es
hlt
cmp
mov
inc
std
sub
ljmp
xchg
fldt
xchg
xchg
jns
gs
jae
mov
add
xchg
popa
js
mov
sub
js
lcall
pushf
and
push
aaa
rclb
sbb
push
cld
cli
jns
nop
sbb
loopne
movsb
cmc
subl
cmp
inc
cli
push
mov
cmpsl
shlb
fidivl
mov
enter
xchg
test
mov
icebp
dec
out
popf
mov
push
push
pop
in
sub
xchg
das
sbb
mov
cwtl
in
je
dec
dec
mov
pop
mov
adc
leave
jae
adc
pop
pop
sbb
iret
or
xchg
shrb
es
xor
incb
pop
in
fcmovne
push
dec
lcall
nop
xchg
fwait
adc
in
pop
cs
xlat
jbe
stos
fdivr
adc
push
push
cwtl
dec
pop
xchg
adc
movsb
test
loopne
inc
out
mov
sbb
pushf
push
jle
jb
ss
popa
inc
es
and
xchg
and
shrl
jns
fistpl
mov
arpl
es
ss
push
cmp
dec
sti
xchg
push
sbb
popf
sbb
les
jl
setne
or
cmp
xor
stos
mov
inc
icebp
popa
dec
mov
loope
cwtl
jne
mov
add
inc
or
sub
subl
inc
cmp
and
or
cld
lds
inc
arpl
cmp
fisubrs
ret
push
ror
filds
pop
xchg
sbb
jnp
and
ficoml
push
push
in
pop
scas
add
movlps
popf
pop
popf
jo
lock
cmp
inc
xchg
sbb
lea
sbb
ret
addr16
dec
pop
insb
xor
xchg
mov
inc
adc
sbb
std
push
mov
pop
rcl
mov
outsl
mov
add
mov
push
dec
es
push
jecxz
rclb
jns
jmp
add
jecxz
out
xchg
adc
lods
or
pop
sbb
and
add
pop
inc
xor
iret
in
xor
popf
adc
cmp
je
imul
and
inc
test
imul
sub
pusha
pusha
fs
cmp
aad
shlb
add
push
lret
cli
int3
cli
das
out
push
lea
popa
subl
leave
and
xor
add
aas
mov
dec
mov
pop
pop
sarb
sub
imul
sbbl
push
pop
sub
lds
sbb
xchg
enter
or
add
adc
add
cmp
fisubs
lds
pusha
sub
js
lods
pop
adc
xchg
and
jbe
pop
sti
fldl
stos
scas
dec
sbb
repz
in
mov
push
sbb
cmc
sub
mov
cltd
cmpsl
mov
jns
jnp
movsb
add
fisubrl
loopne
and
test
repz
inc
mov
ret
jg
xchg
test
and
xor
mov
sti
cmp
sub
lea
imul
aad
dec
ret
dec
xchg
jmp
sti
mov
sub
cmp
jmp
dec
pop
hlt
out
rorb
or
or
test
fisubrl
in
xor
sub
dec
sbb
mov
inc
int3
and
lcall
or
sub
push
sub
dec
adc
dec
clc
and
or
sbb
lds
jno
clc
rcrl
jp
jne
dec
sbb
aaa
lret
xchg
xor
pop
xor
mov
ret
jge
xchg
gs
ret
fyl2x
xor
fidivrs
notl
pop
andl
jecxz
aam
xor
adc
loope
movsb
icebp
aad
sub
or
adc
in
mov
xchg
or
xor
push
cltd
nop
push
fdivp
enter
xor
pop
mov
cmpsl
mov
cmpsl
out
fsubrs
stos
into
jo
push
mov
add
std
cld
icebp
adc
add
testb
bound
jge
fsubrl
jmp
test
jle
pop
jmp
repnz
jge
aaa
hlt
cli
mov
and
mov
cli
or
clc
push
cmp
iret
fcomip
fxch
mov
cs
les
into
add
stos
test
xorl
js
adc
add
add
mov
filds
add
rolb
pop
and
inc
adc
cmp
fstpt
xor
sub
add
in
dec
mov
fimuls
mov
cmp
out
mov
in
cld
add
mov
inc
call
int
je
aas
jb
xchg
xchg
xor
test
aam
xchg
dec
adcl
push
aam
mov
mov
int3
pop
pop
ds
jbe
mov
rcrb
xchg
mov
or
test
cmp
ljmp
daa
cmp
mov
jo
imul
aaa
mov
cmp
xor
adc
lahf
js
movsb
pop
int3
pop
jmp
lret
jmp
pop
imul
lock
movsb
and
adc
xchg
xor
mov
add
addl
leave
fcmovu
fwait
cmp
sbb
and
loopne
xchg
lcall
pop
js
sarb
ljmp
scas
push
js
arpl
popf
or
jb
jge
loopne
ljmp
scas
fstp
mov
es
mov
push
mov
les
mov
aad
bts
xor
nop
dec
cmp
mov
test
rorl
pop
xchg
hlt
sbb
and
jmp
dec
jae
in
ss
push
lahf
jge
mov
cltd
mov
nop
pop
mov
and
ss
xchg
pop
inc
jae
add
fimuls
push
add
sbb
fimull
dec
iret
ja
stos
in
out
mull
std
push
shrl
mov
pop
push
pusha
pushf
cwtl
xor
xor
push
xchg
fsubl
cmp
cmpsl
fadds
lcall
inc
pushf
mov
mov
int3
jno
push
out
xor
sahf
mov
sbb
jb
inc
or
ja
jbe
cmp
lahf
gs
fcomip
jns
ret
mov
iret
repz
adc
jl
and
mov
and
in
stc
outsb
xorb
sub
lods
mov
xor
push
sub
idiv
sub
pusha
or
clc
xor
xchg
mov
xchg
jg
cwtl
out
outsl
in
addb
addr16
lcall
fwait
push
imul
or
out
or
xor
enter
and
cltd
mov
jmp
lock
push
inc
out
push
into
jp
cmp
loope
inc
loope
ficomps
ret
push
movsb
or
mov
gs
push
or
lcall
pop
xchg
cmpl
rcll
ret
inc
fsubl
lret
sub
xor
cmpsl
out
pop
into
or
mov
mov
lahf
out
jno
lock
add
inc
fnstcw
inc
test
leave
and
mov
mov
mov
jg
inc
sub
push
ret
mov
enter
les
mov
and
iret
add
add
pop
and
dec
ja
test
out
push
popf
bound
push
push
fidivrs
jae
or
and
pop
and
je
mov
cmc
mov
push
xchg
jns
cwtl
inc
xchg
pop
dec
fs
xor
add
xchg
xor
aas
add
js
mov
add
test
push
and
xchg
push
out
mov
roll
vmovsd
inc
push
sbb
decl
add
stos
adc
imul
xor
pop
mov
mov
sub
adc
fcoml
pushf
pop
test
lcall
fwait
cmpsb
jb
mov
fadds
and
push
adcl
insb
pop
push
repz
pop
lea
adc
ss
jl
push
outsb
fs
repnz
sbb
sbb
out
les
ss
adc
jbe
cwtl
fcoms
jne
adc
pop
lods
or
sbb
and
jle
dec
push
inc
pusha
sub
sbb
bound
lcall
push
pop
adc
cwtl
and
xchg
in
loopne
in
les
out
inc
mov
add
sbb
stc
push
inc
ja
cmp
scas
push
filds
sbb
lcall
mov
pop
incb
xor
push
data16
mov
adc
jecxz
movsb
test
jl
in
jb
add
push
push
lds
mov
inc
mov
push
jmp
ret
jbe
fildl
adc
sbb
mov
push
ds
pop
and
push
lods
cld
jbe
pop
pop
fdivl
in
daa
imul
loope
lock
repz
xor
or
adc
xchg
lret
add
cmp
inc
cld
fsubrp
mov
mov
inc
jmp
ret
pop
xlat
pop
ljmp
insb
dec
add
movsb
pop
pop
mov
mov
and
fdivs
fisubl
test
jo
xor
push
in
repnz
sub
mov
stc
mov
arpl
cmpl
jno
stc
cli
mov
lds
testl
xor
adc
push
scas
cmc
xchg
lret
push
sbb
jnp
push
loop
aad
rolb
les
push
adc
lahf
lahf
jne
out
in
inc
popf
addr16
testb
test
mov
inc
int
or
movsl
mov
push
aad
popf
leave
xchg
push
data16
mov
into
add
jge
adc
or
mov
cmp
or
jp
pop
sbb
adc
stos
call
pop
sahf
popf
lret
divl
sbb
jecxz
xlat
iret
push
shll
fisubrs
jnp
aas
cwtl
lods
dec
jae
gs
push
std
testl
mov
sub
movsb
dec
movsb
es
repz
mov
lahf
mov
test
jl
aaa
incl
movsb
push
mov
aam
dec
lahf
pop
pushf
xchg
mov
mov
push
mov
pushf
and
movsb
fdivl
cmpsl
sub
xchg
adc
cld
imul
pop
jg
popa
fwait
outsl
lea
cwtl
dec
mov
addl
inc
cld
push
mov
rcrb
out
icebp
lods
mov
pop
movsl
jmp
sahf
mov
aad
cmpsl
ret
daa
in
rcrb
faddl
pop
cld
jl
test
or
sbb
xchg
sub
mov
imul
and
xchg
jmp
clc
es
cwtl
pushf
test
enter
in
out
cld
or
leave
movsb
or
push
mov
orl
lcall
repz
sub
xlat
out
sub
or
in
rolb
cmp
or
mov
idivb
test
sub
inc
jne
js
inc
xor
clc
outsl
mov
lea
jns
mov
stos
add
loop
xchg
shlb
popa
and
loope
call
stos
int3
data16
fsub
pushf
jne
int
xchg
add
fisttpll
inc
gs
das
sbb
sbb
insl
mov
inc
sar
mov
xchg
ret
into
xchg
or
cmp
xor
bound
sub
shrb
adc
and
aam
int
push
mov
das
fwait
cmpsl
aas
ret
pop
and
out
adc
mov
fnstenv
test
int3
mov
fidivrs
adc
dec
jbe
lahf
mov
xchg
arpl
and
add
mov
jge
jnp
sbb
call
sbb
push
cmc
inc
es
sub
or
sub
insb
pop
pop
dec
push
lea
adc
pop
ljmp
lcall
movsb
dec
sahf
les
xor
lds
out
fldl
mov
xchg
jge
mov
mov
and
in
mov
sub
lods
and
data16
fiaddl
mov
push
lcall
dec
mov
shrb
ret
push
scas
outsl
es
cmp
ror
pop
in
xchg
xchg
fsubrl
mov
pop
mov
mov
decb
aad
fiadds
rolb
mov
lods
lcall
fdivs
lahf
lahf
xchg
mov
hlt
orl
inc
iret
dec
inc
pop
lret
mov
push
fiadds
jecxz
out
imul
loope
push
sbb
pop
mov
dec
lods
outsl
scas
dec
loope
lea
mov
lock
push
cmp
jnp
stos
adc
jle,pt
outsb
inc
adc
cmpsb
push
jp
adc
or
mov
fadds
push
xor
ret
popa
fadds
mov
in
push
cli
and
add
fcomip
push
cmp
loop
mov
gs
pop
add
fcmovb
sub
cmp
imull
cmp
gs
cmp
cmpsb
cmpb
js
enter
insb
add
lahf
in
movsb
cmc
rcl
jno
or
xchg
cs
mov
cmp
sub
mov
cmp
ficoml
cld
sub
std
or
cmpsb
pop
fcoml
out
jmp
repnz
icebp
inc
push
xchg
in
add
jbe
adc
gs
or
adc
shll
push
xor
cltd
or
call
shlb
sub
cmp
ja
inc
mov
sub
outsb
xchg
inc
sbb
or
bound
out
mov
push
adc
std
xchg
popf
mov
ret
inc
addl
dec
push
jnp
loope
pop
enter
dec
movsb
sahf
out
int3
lcall
pop
lcall
sbb
ret
inc
jecxz
xchg
lret
inc
sub
ret
mov
push
xor
loopew
xchg
fdivl
std
lods
je
mov
push
and
xchg
test
in
cmp
imul
out
sub
jo
jle
pusha
mov
mov
cs
pushf
and
cmpsb
dec
mov
lods
pop
sub
xchg
jnp
scas
in
repnz
inc
xlat
xor
and
xchg
cmc
repnz
dec
cli
or
mov
insl
push
push
cmp
jmp
sbb
movsb
dec
lahf
jae
mov
jge
les
push
lods
sahf
mov
jae
or
mov
out
xchg
out
jmp
mov
jecxz
in
mov
pop
daa
inc
leave
nop
xor
mov
fcmovbe
pop
pop
add
xchg
dec
and
mov
fs
dec
rcll
int
stc
lcall
outsb
dec
push
or
ljmp
pop
pop
sub
pop
jp
fisubl
and
inc
fildll
jno
scas
test
loopne
cmc
xchg
mov
leavew
ss
xlat
in
jmp
lea
push
push
xlat
and
cltd
xor
loopne
cmp
adc
mov
xor
ret
push
mov
pop
rorb
jne
test
nop
dec
idivb
inc
adc
lret
out
stc
xchg
inc
cli
or
sbb
popf
jle
fdivs
outsb
out
xor
test
rorl
mov
pop
add
push
enter
in
arpl
fbld
mov
adc
jmp
loop
hlt
pushf
pop
js
cvtps2pi
adc
loopne
clc
and
test
les
pop
pop
or
cmc
or
pop
push
das
mov
test
lock
pop
jb
mov
ret
xor
inc
jns
dec
pushf
outsb
outsb
sarl
in
ffreep
mov
cli
inc
subl
fs
or
cld
jge
push
pop
lods
jmp
jmp
xchg
xor
jo
repnz
mov
jns
or
daa
mov
shll
lcall
sbb
jg
hlt
jg,pn
adc
cmp
cmp
daa
jae
inc
mov
jl
xchg
mov
fdivr
icebp
imul
mov
pop
xor
sahf
addr16
sbb
stos
aaa
lock
cld
mov
popf
loopne
stos
loopne
push
lock
mov
pop
inc
popf
cmp
rol
insl
mov
in
and
xlat
lahf
mov
jnp
cmp
and
mov
cmp
mov
outsl
pop
lods
lock
cmp
mov
add
dec
mov
adcb
and
inc
and
cmp
int3
lret
sahf
pop
outsb
inc
pushf
inc
mov
jns
adc
cltd
mov
fmull
lahf
gs
or
lods
sbb
pop
call
cmpb
mov
mov
push
and
loope
out
pop
mov
cld
stos
ret
and
push
push
adc
adc
cmc
jp
xchg
pusha
jne
icebp
cmpsb
scas
mov
jne
test
mov
dec
push
repz
imul
jecxz
mov
out
jae
jb
sahf
das
clc
repz
mov
cld
arpl
test
inc
iret
jp
mov
push
in
mov
inc
pop
push
mov
adc
int
mov
xchg
cli
aas
call
xchg
pop
push
mov
cmpsb
dec
pusha
xor
push
mov
cmp
adc
lret
xchg
mov
mov
mov
dec
xchg
mov
cmpsb
inc
lods
push
or
jl
push
clc
dec
mov
leave
repz
push
shll
push
mov
dec
arpl
out
xor
push
je
in
test
mov
push
imul
pop
adc
aam
jo
fwait
in
lds
mov
lcall
push
clc
das
dec
and
cltd
sahf
lea
cli
jne
dec
aad
mov
dec
jecxz
xor
popf
scas
ret
out
aam
scas
push
mov
xor
jae
xchg
fsub
xchg
test
pop
cmp
shr
cld
mov
ds
and
mov
in
sti
lret
cmp
orl
mov
call
sbb
jecxz
mov
and
mov
iret
pop
mov
sub
mov
repnz
ss
pop
lret
imul
mov
stos
mov
aas
fidivrs
jle
or
cmp
push
stos
lahf
adc
xlat
repnz
pop
test
mov
adc
xor
mov
jno
jge
lcall
xchg
shll
jnp
mov
lcall
les
xchg
aam
sbb
inc
shll
mov
cld
add
test
lods
jns
mov
call
add
jmp
inc
lods
xchg
out
daa
xlat
inc
xchg
lods
mov
sub
push
push
mov
in
test
inc
and
xchg
and
repnz
cld
gs
push
mov
pusha
sub
xor
mov
xor
fcompl
push
sbb
ljmp
jmp
leave
xor
xchg
add
cmp
bound
ret
add
cltd
ss
imul
pop
and
nop
cmp
cmpsb
les
mov
faddl
and
adc
jae
call
jecxz
add
popa
push
rcrl
hlt
stos
xor
xor
test
mov
movsb
adc
xchg
mov
inc
sub
cwtl
jl
mov
nop
pusha
fistl
mov
mov
pop
push
pop
cli
lcall
jno
sahf
sahf
mov
jno
jmp
jl
fs
out
adc
push
daa
lret
and
mov
inc
sub
lock
hlt
add
push
out
scas
movsb
test
xchg
inc
xchg
lahf
scas
or
test
cmpsb
shlb
mov
xor
inc
jmp
cmp
cltd
out
mov
mov
insl
adc
sbb
call
dec
pop
les
addr16
movsb
fildll
cmp
jbe
dec
test
addr16
idivb
or
fistpll
adc
dec
scas
mov
sub
addr16
xchg
inc
vcmpss
push
in
adc
push
add
mov
cs
xor
jmp
mov
mov
pushf
call
inc
rcrb
lcall
xor
adc
inc
add
xor
insl
or
inc
pop
push
iret
lock
mov
fbld
jmp
jne
inc
lea
hlt
lret
or
ljmp
popl
sbb
sub
dec
add
lret
jne
arpl
xchg
out
xor
jnp
mov
je
jb
in
out
rclb
notb
test
xor
nop
cmp
ds
xchg
mov
dec
sar
mov
mov
pop
dec
push
xchg
mov
cltd
loop
stc
fcmovne
es
in
jg
jp
push
and
stos
daa
ds
dec
add
and
into
in
scas
dec
mov
mov
mov
cmp
ds
mov
sbb
mov
fs
dec
push
xorl
loop
stos
clc
jno
arpl
cmpsb
sub
imul
pushf
or
std
fisubl
or
shl
dec
push
jo
jns
push
adc
mov
or
icebp
pop
push
aad
xchg
cmpl
data16
xchg
mov
pop
daa
test
into
and
pop
jmp
mov
sbb
mov
rol
movsb
mov
push
mov
leave
stos
mov
clc
dec
movsl
mov
pop
ja
dec
mov
or
pop
pop
or
and
dec
cld
sub
xor
loopne
adc
adc
test
push
cmc
rolb
mov
outsb
add
xchg
cmp
jp
cwtl
dec
popf
jp
int3
lret
pop
inc
movsb
mov
sbb
int3
inc
out
out
dec
jne
std
dec
add
es
jecxz
pushf
adc
aad
in
sub
jecxz
dec
lret
xchg
jecxz
push
and
or
loopne
inc
cmpsb
outsl
push
push
or
in
dec
jp
sbb
pop
jge
fadd
mov
pop
xchg
movsl
aam
sbb
mov
pop
add
jae
push
xchg
push
push
and
push
push
aad
ljmp
ret
ret
fidivs
nop
dec
xor
shl
lock
sub
rcll
add
jle
or
mov
ljmp
jp
sbb
mov
lods
or
add
outsl
xchg
arpl
sarl
mov
mov
out
sub
mov
dec
inc
les
inc
pop
push
mov
cmp
shrb
call
mov
jge
int3
fs
test
sbb
mov
add
push
inc
push
mov
sti
aas
cmp
push
pop
in
dec
imul
adc
stc
or
imul
sbb
iret
daa
les
adc
addr16
pusha
scas
jg
out
xor
adc
adc
cmp
sub
add
sub
mov
shl
fdivr
mov
lahf
fsubr
fdivr
and
mov
repz
inc
jle
sbb
pop
gs
fsubrs
push
test
sti
aaa
mov
cmp
inc
mov
mov
pushf
pop
popa
mov
inc
daa
fdivs
and
jg
cmp
xchg
dec
jns
test
or
mov
mov
data16
adc
iret
loopne
cld
repz
sub
aam
xchg
push
ds
mul
and
ja
ja
stos
test
cmp
imul
ljmp
adc
fildll
hlt
sbb
mov
or
dec
pop
push
fcompl
js
inc
xor
mov
mov
push
pop
mov
xor
imul
ja
jl
rcl
fsubl
sar
mov
lret
mov
push
pushf
xchg
mov
inc
xchg
sbb
pop
mov
or
jb
jno
das
jle
or
cwtl
insl
insb
mov
cld
daa
out
imul
pop
pop
push
push
cs
cmp
std
rcrl
and
xchg
cmp
mov
rcr
push
mov
sarl
repnz
xchg
imul
cmp
bound
push
ds
inc
movb
loopne
and
orb
xlat
fsubrs
daa
jg
lcall
hlt
addl
xchg
xor
lcall
pop
insl
push
lods
dec
push
fdivs
dec
sub
add
and
pop
imul
ficompl
mov
push
jno
in
cmp
cmp
push
inc
out
sarl
sbb
mov
sub
into
lret
je
imul
cmpsb
inc
insl
sub
xchg
sub
stc
outsb
mov
or
lods
jb
sbb
mov
enter
pop
cmp
cmc
subb
add
or
mov
pop
cs
lahf
lock
inc
mov
scas
ljmp
loop
sbb
leave
xchg
jg
jg
jnp
enter
xorl
inc
inc
xchg
push
hlt
je
fistps
xlat
jae
pop
push
push
pop
mov
mov
int
pop
or
add
lret
sub
pop
add
mov
nop
lock
mov
sub
es
sar
clc
push
outsl
dec
dec
mov
dec
out
pop
adc
test
sbb
jg
add
fidivrl
insl
ret
cltd
add
dec
jg
xor
jle
std
call
enter
and
jo
jnp
cmpsl
test
test
jmp
sub
or
test
movb
loopne
fldl
enter
imul
push
mov
or
popa
dec
jne
sbb
inc
sbb
lahf
xor
jecxz
or
rorl
push
loopne
pop
data16
std
dec
xchg
lret
sahf
ljmp
adc
sbb
jmp
test
call
mov
lcall
jl
lods
and
jg
shl
adc
shl
std
cmp
mov
out
movsb
pop
in
inc
ja
scas
mov
push
inc
gs
jbe
ljmp
cmp
pop
adc
mov
bound
mov
aaa
xor
and
mov
ret
ficompl
or
neg
xchg
clc
ljmp
sarl
outsl
mov
jl
int3
pcmpgtd
loope
push
mov
pop
adc
dec
je
xor
xor
dec
cli
mov
mov
xor
xchg
jle
ret
xchg
jns
lds
add
xchg
pop
ret
out
cmp
std
inc
jns
xor
cmp
test
jg
and
stc
aam
faddl
lcall
push
cmp
pop
test
repz
adc
mov
or
adc
test
or
xchg
ret
popl
roll
push
mov
xlat
cld
out
fsts
frstor
cs
cs
loope
dec
inc
scas
or
je
ljmp
rcrl
shlb
sbb
jl
mov
pop
push
enter
fiadds
mov
and
in
inc
mov
cltd
push
jbe
jecxz
les
or
mov
and
add
mov
and
push
inc
movups
rcr
mov
add
adc
push
test
and
aam
jno
inc
add
in
insb
popa
push
imul
rcll
cmp
leave
cwtl
lock
test
push
mov
pop
xor
push
ret
adc
jecxz
mov
sub
add
test
xchg
std
cmp
push
ficomps
jmp
out
ljmp
adc
rdmsr
mov
daa
aas
sti
xchg
out
sub
leave
sub
mov
sbb
out
mov
lahf
inc
hlt
and
xchg
sbb
or
mov
lea
mov
mov
inc
loop
mov
pop
pop
or
sub
out
nop
adc
and
xchg
jne
aas
loopne
nop
enter
and
mov
lods
add
outsb
leave
mov
daa
sub
repnz
jno
lods
ljmp
mov
fidivrs
iret
imul
mov
inc
shrl
adc
push
sub
movsb
es
test
icebp
dec
sub
dec
cli
fmulp
std
dec
sbb
pop
mov
in
adc
pusha
lods
popf
in
movq
aas
or
daa
div
aaa
shl
xchg
and
lahf
xor
and
bound
xabort
sbb
rorb
push
or
movsb
jmp
mov
loop
push
fildll
ja
push
mov
xchg
stos
call
cmp
push
cltd
sbb
xorl
ljmp
xor
mov
nop
sahf
ret
loopne
movhps
clc
dec
fisubrl
aad
cmp
inc
push
or
lods
mov
shl
jno
out
jnp
mov
mov
push
xlat
or
push
fadd
dec
push
iret
or
xor
leave
int
test
adc
lods
add
testl
pushf
pop
add
int3
in
mov
subps
arpl
and
int
jns
and
fmull
fs
pop
sarl
push
enter
xor
out
sub
pop
add
xlat
sub
mov
push
xchg
shll
in
push
add
push
into
sub
dec
mov
xchg
in
sub
repnz
or
shlb
jae
mov
fcmovnbe
hlt
sub
mov
pop
jno
test
mov
dec
lret
movsl
repnz
sbbb
out
xchg
inc
fisubs
pop
lea
shlb
jo
fsubrs
lcall
mov
xchg
push
adc
adc
fnsave
cmp
mov
xchg
jmp
jne
pop
pop
mov
jo
dec
jge
lret
aad
ja
cmc
ja
mov
adc
inc
adc
fimull
ja
xchg
js
and
inc
rol
outsb
into
loopne
fbstp
add
popl
lods
pop
cmpsb
jno
mov
jne
adc
cmp
cmp
sarb
pop
or
or
rorl
pop
outsl
call
lock
pop
ucomiss
pushl
dec
cmpl
testb
aam
repnz
sbb
imul
mov
push
call
mov
lret
dec
add
rcr
daa
jno
pop
cmpsl
push
inc
imul
sti
arpl
adc
cmpsb
ljmp
movsl
or
pop
and
pop
loope
xorb
push
imul
imul
pop
mov
nop
sarl
mov
and
cwtl
pop
shll
addr16
out
mov
shr
mov
inc
mov
pop
les
inc
or
imul
ds
stos
mov
das
imul
mov
push
lret
outsb
or
push
mov
xlat
ds
les
pop
lds
xor
adc
add
mov
fistpl
fisttps
jge
sahf
mov
fsubs
cmp
xchg
dec
adc
adc
pop
ret
cmc
or
adc
gs
dec
sbb
sbb
dec
addr16
mov
test
inc
loop
dec
movsl
pop
test
sub
pop
lods
aas
pop
add
sarb
stos
shlb
pop
cmpsb
push
ret
in
or
mov
cmpl
or
jne
lods
mov
dec
insb
movsl
dec
mov
divl
addr16
nop
mov
das
out
lods
lds
add
loope
jnp
ljmp
aam
jb
jb
push
mov
mov
cwtl
or
pop
call
jnp
mov
loopne
aas
mov
mov
or
jmp
and
mov
mov
xor
int3
xchg
ss
push
scas
shrb
or
push
push
pop
adc
jno
jb
cmp
loopne
push
pushf
frstpm(287
in
xor
int3
push
popa
push
jae
fimuls
jae
iret
mov
cli
faddp
jp
mov
repz
add
adc
push
cmp
xchg
dec
icebp
xlat
sbb
jae
loope
je
testb
lret
inc
fcoml
sbb
sub
mov
push
fimull
adc
dec
mov
pop
and
jae
push
lds
filds
shll
mov
mov
ss
shrl
add
mov
mov
mov
mov
push
push
pop
sub
fadds
jl
comiss
mov
daa
push
mov
and
mov
jge
bt
addr16
xor
xor
ficoms
xchg
mov
or
subl
into
rcr
dec
daa
adc
ja
repz
adc
mov
out
mov
cmpsl
mov
or
inc
inc
pop
sahf
mov
mov
xchg
xor
icebp
nop
iret
cmp
cli
pop
adcb
and
inc
rcll
and
stos
data16
fdivrl
add
xor
dec
xor
xchg
cmp
dec
gs
iret
jae
cmp
out
jge
pop
fimull
repz
pop
repz
sbb
add
decl
movsb
outsb
pop
aad
xor
je
sbb
push
sbbb
ds
mov
stos
xchg
mov
and
sub
scas
insl
and
xchg
push
das
lcall
push
mov
in
repnz
mov
getsec
call
lret
rclb
ret
add
mov
inc
push
push
adc
mov
jge
xor
aam
push
das
sbb
out
je
packsswb
cmpsb
je
stos
call
cmp
imul
int
jae
sub
ss
cltd
cmovne
imul
mov
dec
xchg
sub
int
dec
push
dec
sbb
js
adc
mov
dec
inc
mov
mov
jnp
adc
out
imul
movsl
add
add
out
xor
outsl
enter
jo
pop
mov
push
xchg
repnz
fldenv
loope
sub
cli
nop
push
push
add
psrlw
arpl
sbb
or
push
mov
addr16
mov
mov
popf
loope
int3
or
inc
inc
cmpsl
sbb
jae
add
in
and
fadds
test
arpl
test
and
push
push
or
adc
push
test
stc
jle
fadds
sbb
movsl
out
adc
xor
jb
sub
sub
add
cmpsb
add
mov
jne
sbb
into
push
nop
jp
adc
push
loope
popf
jecxz
ljmp
aam
adc
sub
pop
addl
mov
scas
out
jmp
scas
lcall
imul
sbb
cmc
sbb
out
adcb
popf
lahf
cmp
push
outsl
adc
jbe
add
mov
dec
sbb
clc
imul
push
out
leave
stos
jb
add
gs
gs
test
jbe
and
push
mov
mov
or
mov
jb
outsb
outsl
cmc
or
lock
outsl
mov
adc
or
insb
xor
call
jo
jge
mov
in
jl
pop
sbb
xor
xlat
sbb
pop
inc
xlat
outsl
adc
mov
cmpsb
out
ja
jmp
sub
lcall
sbbl
cmp
push
cltd
mov
mov
sbb
pop
mov
xchg
insb
xchg
out
cld
dec
daa
imul
imul
dec
push
gs
sbb
dec
jae
xor
test
add
mov
les
movsb
stos
loope
in
adc
lcall
jo
jp
jl
xor
imul
inc
adc
fs
loop
push
mov
or
aas
add
and
rorl
test
dec
inc
and
in
outsb
mov
xchg
adc
in
test
jmp
lock
jno
shlb
cltd
icebp
gs
mov
dec
nop
enter
inc
inc
ficoms
dec
sub
call
fsubs
cmpsl
mov
dec
mov
xor
mov
inc
sbb
in
inc
popf
shll
dec
cmpsl
jno
jge
push
sbb
fucomp
and
push
jecxz
xlat
cmp
in
xchg
inc
dec
jo
shlb
popf
movl
inc
mov
xor
adc
stc
mov
movsb
stos
mov
idiv
xchg
adc
sarb
mov
add
sbb
xchg
test
clc
push
fidivrs
js
mov
xor
outsb
call
int3
pop
xchg
ret
push
adc
xor
lea
stos
nop
mov
pushf
ss
repz
or
mov
push
push
dec
or
and
mov
cwtl
xchg
mov
lcall
pop
or
or
and
dec
outsb
aam
mov
fistpl
add
push
add
and
sub
lret
pop
shl
movsl
faddl
adc
sub
mov
mov
pop
imulb
test
xor
mov
cmp
rol
inc
cmc
stc
push
cwtl
gs
mov
pop
jp
rcl
in
leave
es
pop
jl
clc
pop
lcall
bound
mov
add
xor
test
lcall
pop
shr
pusha
dec
scas
call
xlat
dec
push
loopne
xchg
jne
add
mov
daa
mov
dec
or
and
xchg
imul
notb
test
push
cld
movsb
imul
sbb
or
mov
jle
pusha
loop
mov
outsl
das
dec
ss
pop
pop
pop
jae
iret
popa
sub
jbe
mov
scas
pop
out
fnstenv
inc
sbb
adc
and
out
and
test
add
and
dec
pop
mov
int
in
add
xor
mov
fimull
xlat
or
and
lock
es
sub
mov
pop
addl
xorb
xchg
pop
in
int
subl
dec
int3
pop
xor
cmp
dec
mov
inc
mov
inc
out
mov
lahf
ss
popa
cmpsl
jle
inc
xor
sahf
pop
cmc
dec
stos
ret
je
inc
mov
sub
adc
mov
int3
gs
loope
iret
and
sbb
xchg
jae
adcl
pop
je
xchg
pop
mov
adc
push
mov
mov
iret
js
out
hlt
inc
in
push
or
or
imul
jnp
into
xchg
xor
daa
enter
std
lahf
cmpsb
popf
dec
mov
add
mov
sub
nop
movsl
inc
jge
les
icebp
jg
aaa
xlat
xor
xchg
push
lock
xorl
mov
mov
imul
int
pop
lods
testl
xchg
fs
out
hlt
xor
into
iret
mov
loop
shlb
shll
fdiv
inc
xchg
cs
jae
jge,pt
push
jns
xchg
xlat
push
filds
xchg
or
pop
or
out
xchg
cs
adc
hlt
adc
xor
and
shll
aam
ja
inc
mov
sub
inc
push
mov
dec
sub
cmp
int3
cmpb
xchg
jge
lods
pop
jbe
shll
and
imul
popf
ret
mov
pushf
and
add
mov
mov
fsts
imul
add
mov
sbb
sub
pop
and
sub
aad
and
mov
sarl
ja
and
ret
imul
push
lods
adc
pop
push
sbb
test
int
arpl
js
insl
pop
push
add
cmp
sub
xchg
idivb
stc
pushf
mov
and
stos
mov
fldenv
add
and
sbb
or
push
fucom
stos
sub
iret
push
xchg
pop
in
addr16
sub
jae
loope,pn
rcrl
pushf
bound
ds
lahf
push
rcll
mov
and
mov
sbb
daa
adcl
in
lock
bound
xor
push
stos
jmp
xor
aas
pop
jl
mov
popa
lret
adc
xor
cltd
xchg
xorl
stos
adc
lcall
rcrb
jb
enter
or
test
xor
dec
and
lds
mov
rdtscp
out
cmp
adc
and
data16
outsl
sbb
xlat
inc
mov
dec
dec
test
add
in
cmp
dec
mov
xchg
mov
dec
lahf
mov
sar
pop
mov
lds
jno
xchg
sarl
fs
outsb
loope
pop
inc
pusha
pop
enter
adc
jnp
mov
fstl
jecxz
inc
pop
pop
sbb
xchg
jnp
jns
dec
daa
add
and
pop
fisttpl
clc
lea
sahf
arpl
cmc
inc
leave
aas
iret
mov
dec
sbbl
bound
adc
xchg
sub
cmpb
push
xchg
jns
xchg
dec
lods
jp
mov
adc
ja
std
fistl
lret
mov
add
add
add
out
add
fimuls
lret
jb
inc
push
mov
adcb
addr16
in
ja
mov
cmpsb
adcb
xchg
rorl
mov
mov
ljmp
or
insl
daa
loop
lds
insb
sub
mov
jo
mov
ja
es
inc
in
repz
sub
xchg
mov
sbb
shl
arpl
cmp
sahf
mov
call
push
loop
mov
test
fcmove
fiaddl
dec
add
dec
fnsave
and
jl
sbb
push
imul
out
adc
fisubs
fcomi
ret
shl
xlat
cmp
xchg
cltd
imulb
pushf
out
clc
push
xor
jge
add
or
insb
and
mov
jmp
fisubs
mov
sub
adc
dec
loopne
mov
sub
outsl
mov
cmpsb
dec
or
int3
lret
xor
push
add
lds
adc
shl
xchg
xchg
dec
mov
xlat
insb
pusha
outsb
aas
cmpsl
movsl
gs
arpl
sub
arpl
cmc
sub
shl
movsb
dec
outsl
scas
aaa
lds
lods
inc
leave
jmp
repz
pop
and
js
pop
dec
push
fstpl
fwait
or
repz
or
xchg
std
jp
and
xchg
imul
mov
cwtl
leave
push
mov
cmp
push
ret
xor
iret
inc
outsl
mov
in
fucomip
shr
std
or
jecxz
test
and
pusha
out
sub
shlb
aas
pusha
popa
dec
test
jge
in
dec
jl
fs
xor
inc
imul
xchg
loop
pushf
repnz
sti
cmpsl
mov
jl
sti
mov
je
lods
jne
sub
rcrb
popa
pop
insl
adc
mov
inc
inc
push
adc
scas
sub
push
pop
lods
jno
stos
add
es
inc
jo
dec
ret
xchg
andl
adc
dec
xlat
in
mov
popa
clc
inc
and
iret
stc
or
fwait
or
add
xlat
out
insb
jae
pop
popf
jno
mov
lret
mov
ret
cmc
inc
roll
push
or
inc
sbb
push
aas
xchg
stos
xchg
sbbl
mov
movsl
cmpsl
adcb
push
daa
adcb
mov
pop
out
lea
fists
adc
xor
ds
or
fidivl
xchg
and
out
add
loope
pop
fwait
leave
jecxz
mov
add
pop
push
mov
cmpsl
add
mov
bound
mov
icebp
xchg
adc
xchg
cld
push
push
lods
out
aad
mov
int3
mov
rcrl
inc
sbb
imul
shrb
sahf
mov
lret
inc
push
imul
test
adc
push
or
push
pop
cmp
pop
jo
repz
mov
xchg
inc
ja
add
pop
mov
push
pop
divb
das
sbb
adc
sbb
dec
repz
movsb
popa
repnz
mov
inc
icebp
xor
jecxz
lods
xor
pop
rcrl
mov
jecxz
xchg
mov
cld
xlat
ljmp
adc
xchg
push
daa
popf
sar
pop
jl
jmp
scas
dec
xor
cmp
loop
pop
push
data16
aas
in
cmc
push
mov
out
add
push
in
pop
pop
test
sub
rcrb
jg
jge
dec
cmpsl
cs
jb
or
icebp
xchg
jg
sub
mov
gs
aas
int3
dec
cld
cli
cmp
mov
mov
imul
iret
mov
rorl
add
or
cli
or
push
add
lret
jns
pop
adc
mov
xchg
jl
mov
jno
cmp
push
cmc
lret
loopne
xor
lea
mov
mov
cmpsl
enter
in
mov
xor
push
movb
xchg
xchg
and
cmp
scas
cmp
pop
push
call
pop
cmp
ret
jl
loop
mov
push
lods
add
and
add
daa
lcall
mov
and
iret
add
out
inc
mov
scas
jle
add
lret
sub
fmuls
dec
adc
leave
sbb
cmp
push
cs
add
out
mov
sbbb
ficoml
outsl
or
stos
xchg
sbb
or
xor
push
imul
cmpsl
es
repz
add
shrb
lods
push
arpl
mov
pop
rcrl
and
and
mov
cmc
jp
test
or
cs
dec
movsl
mul
add
mov
dec
xchg
aam
in
pushf
xadd
test
inc
insb
aaa
xchg
or
jge
xchg
xchg
sbbb
mov
jmp
icebp
clc
lods
xchg
rcrb
rcll
jae
or
dec
ret
notb
and
add
sbbb
pop
xchg
dec
add
add
iret
scas
mov
inc
ljmp
xchg
cli
mov
es
rolb
outsl
or
sub
mov
std
mov
cmp
shr
push
xchg
mov
push
sbb
xlat
mov
ss
fwait
pushf
and
jbe
cltd
lret
adc
daa
nop
inc
mov
mov
or
adc
movsb
nop
xor
hlt
xchg
repz
in
lea
mov
cmp
add
stc
cmp
xor
fisttps
jne
clc
test
mov
dec
or
inc
sbb
xlat
mov
dec
repnz
add
cwtl
test
push
mov
lret
pop
sbb
test
arpl
loopne
jnp
xchg
daa
loopne
pop
jge
add
inc
sbb
inc
mov
mov
mulb
js,pt
scas
mov
arpl
add
clc
imul
sub
jp
xchg
stos
fildll
mov
loop
movsb
std
imul
pop
push
inc
push
insl
sahf
or
dec
mov
push
inc
push
cwtl
push
mov
mov
jmp
mov
lock
sub
or
cmpb
push
inc
sub
dec
pop
jne
cld
xor
jg
popf
lahf
lds
repz
in
addr16
jbe
jo
add
push
mov
pop
sbb
bound
mov
jo
je
jmp
pop
pop
les
les
mov
xchg
in
mov
notb
inc
mov
xor
and
jno
fimuls
sbb
xor
xor
mov
movsl
adc
aas
dec
sbb
xchg
and
xor
ljmp
jb
sub
lcall
jbe
sahf
sbb
call
dec
out
mov
xchg
mov
fdivs
inc
in
adc
jle
cmp
fidivs
fidivs
jo
pmaxub
dec
adc
xor
or
out
cwtl
inc
pop
cwtl
cmc
cs
cmp
in
test
sub
dec
adc
jae
cmp
pusha
addb
mov
jl
fsts
js
repz
int3
cld
push
test
xor
inc
cmpsl
mov
lea
add
pushf
jne
pop
in
push
fildl
es
mov
call
aad
inc
jg
and
nop
pop
push
sbb
mov
std
sub
mov
mov
sti
or
stos
popf
fildll
jne
cld
mov
js
es
mov
repz
icebp
xchg
call
mov
pop
push
xor
iret
dec
test
xchg
adc
out
ret
repz
std
pop
jnp
jb
fst
adc
ss
mov
out
cli
jge
clc
pusha
lock
xchg
xchg
stos
cld
test
sub
pop
add
sar
pop
test
aas
popf
icebp
fcom
test
or
popa
std
lret
scas
out
aaa
push
sub
stos
mull
mov
ja
call
mov
jmp
mov
sub
mov
xchg
xor
inc
in
leave
into
scas
inc
pop
loope
dec
sbb
push
mov
push
xor
ret
pop
sbb
stos
aad
or
insl
test
test
inc
movsl
mov
cmp
sub
ret
mov
pop
ret
sub
lods
pusha
shlb
cmp
or
jno
mov
xchg
add
dec
adc
sub
enter
outsl
adc
or
rcll
loop
mov
pop
orl
push
out
repnz
or
daa
test
xor
mov
cmp
mov
jecxz
lahf
and
push
mov
inc
adc
icebp
es
int3
sbb
fwait
inc
iret
xchg
mov
adc
repz
cwtl
xor
stc
mov
cld
pop
sbb
je
mov
cmpl
mov
test
ror
movsl
mov
divb
mov
add
xchg
aam
jo
sbb
pop
jp
push
adc
test
repnz
out
push
or
popf
xor
into
aaa
adc
mov
push
cmc
test
cld
int
cwtl
fs
test
test
cmp
ficomps
rcrb
aaa
bound
rcl
push
sub
xchg
out
lcall
mov
adc
xchg
rorb
xchg
jbe
and
sub
cs
in
icebp
and
push
popa
lods
outsl
xor
adc
push
clc
in
push
fabs
adc
inc
pop
or
int3
cs
data16
pop
add
mov
mov
jl
adc
pusha
cmp
sub
pop
jnp
cmp
sub
xor
push
dec
ss
dec
xor
lcall
pop
cmp
adc
out
jmp
fcomp
repnz
lret
or
add
pop
stc
jno
cld
push
push
sub
mov
push
push
mov
mov
lock
pop
int3
test
les
mov
mov
jnp
xor
int3
ss
out
out
sub
outsl
test
repnz
call
test
outsl
xor
sub
fsubl
push
fsts
push
xchg
mov
popf
in
leave
push
enter
xchg
xchg
mov
dec
pushf
jbe,pt
mov
sti
stos
int
mov
mov
mov
stos
and
push
inc
in
jmp
andb
dec
popa
push
pop
repz
inc
cmpsl
pop
jl
subl
pusha
es
ds
sbb
pusha
pop
adc
sub
push
lret
sub
xchg
pop
jnp
js
lock
daa
inc
and
mov
nop
cmp
xorb
mov
push
fcompl
mov
movsb
push
sub
fistps
push
sub
out
sub
pop
call
inc
xchg
or
jp
lds
xchg
sbb
nop
push
sbb
repz
push
mov
mov
sbb
divl
loopne
dec
mov
iret
lock
fwait
pop
adc
sbb
xchg
imul
das
outsl
push
sbb
and
dec
loop
jbe
shrb
pop
sbb
sbb
or
fmuls
or
xchg
adc
movb
test
cmp
sub
daa
ficoml
stc
or
pop
add
std
lret
in
pop
mov
add
in
pop
mov
inc
pop
mov
mov
lods
test
mov
push
push
lcall
dec
ret
dec
call
mov
lea
loopne
pusha
in
outsl
pop
testb
sahf
cmp
movb
and
xor
mov
xchg
xchg
lret
ret
fucomp
shl
insb
mov
dec
push
pop
jp
push
call
mov
push
xchg
lods
insl
roll
dec
jg
mov
pop
lds
cwtl
push
fwait
dec
and
in
mov
scas
pop
aas
jecxz
push
mov
insl
cmpsl
outsb
xlat
sbb
fwait
inc
cmp
jns
imul
popa
pusha
fildl
mov
mov
fldt
and
push
lcall
xlat
jnp
lret
je
jo
bound
dec
sub
fldcw
les
jnp
mov
pop
adc
inc
ja
aad
daa
testl
in
push
into
sti
mov
testl
cmp
dec
bound
imul
movsb
test
xor
xchg
repz
xchg
pop
pop
cmp
jno
stos
inc
push
pop
and
icebp
inc
cltd
test
mov
ljmp
or
and
adc
jns
inc
or
mov
cmp
ja
shlb
aas
shlb
jecxz
mov
or
lret
hlt
mov
xchg
popf
cltd
adc
fsts
push
in
push
test
and
dec
data16
add
clc
pusha
sbb
or
mov
mov
inc
jmp
inc
cs
out
es
es
out
push
xchg
sarb
fnstenv
call
cmp
icebp
xchg
out
or
sbb
mov
and
je
out
fdivp
xchg
xor
dec
adcb
mov
and
pop
inc
js
test
add
mov
and
pop
inc
mulb
ja
jnp
push
mov
and
and
pop
jmp
call
in
scas
sbb
fadds
inc
mov
test
lret
cmp
add
and
mov
arpl
add
inc
mov
mov
add
cmp
fwait
and
popf
xchg
and
xor
jg
ss
push
jl
mov
jb
cltd
add
out
cmp
cmpl
cmc
ret
pusha
gs
mov
cli
repz
in
mov
dec
stos
mov
and
mov
mov
adc
arpl
add
and
dec
adc
cmpsl
push
push
xor
fcoml
cs
cs
stos
cmpsl
outsl
and
pushf
dec
add
je
leave
sub
repnz
divb
or
jl
add
and
repz
jno
pop
pop
les
jnp
push
popa
decl
outsl
push
insl
rorl
mull
lock
xchg
leave
push
sbbl
push
out
xchg
lcall
adc
into
jbe
mov
je
cmc
shlb
sbb
mov
xor
mov
out
pop
xchg
test
fldenv
jns
push
mov
sub
xchg
sub
shrl
dec
stc
scas
pushf
sbb
xlat
fdivs
jns
jbe
push
out
movsl
mov
stos
dec
push
fiaddl
ret
xchg
shr
testl
fwait
dec
not
and
adc
inc
icebp
scas
psraw
pop
inc
in
outsb
or
xchg
xor
in
clc
gs
mov
mov
adc
pushf
rcll
insb
fimull
orl
dec
stc
or
mov
add
sti
mov
lea
gs
dec
sti
sub
insb
out
outsb
xor
mov
iret
scas
pop
mov
xor
or
mov
in
mov
pop
stos
repz
cltd
ficoml
gs
xor
shlb
popa
stos
mov
cmpsl
pop
adc
addb
adc
xchg
inc
jb
push
hlt
daa
jae
jl
loopne
mov
adc
idivl
or
and
jne
sub
test
insl
arpl
push
bound
jne
out
mov
fwait
jmp
adc
and
stc
and
cmpsb
pop
lret
jp
jg
clc
sub
fisttpll
lods
dec
in
xchg
decb
out
fsubl
mov
mov
sub
iret
fistl
in
push
daa
loope
mov
pop
jne
mov
and
or
shll
pop
dec
adc
mov
cld
add
pop
pop
in
pop
or
push
leave
dec
sub
or
inc
jno
sub
ret
ss
loope
cs
mov
mov
and
daa
nop
ljmp
adc
fwait
xchg
cmp
mov
fisubrl
sub
pop
adc
pop
loop
sub
inc
and
push
sar
imul
sbb
mov
test
dec
iret
adc
mov
hlt
push
lods
inc
shr
jae
sahf
sbb
xlat
mov
pop
xchg
inc
push
add
lcall
sarb
adc
mov
xchg
mov
mov
dec
or
es
jle
imul
cwtl
pop
add
jne
sub
inc
cs
push
dec
lods
mov
push
cs
jnp
jecxz
sbb
mov
jecxz
stos
rorb
popf
inc
enter
icebp
in
pop
popa
lret
mov
testl
inc
sub
jne
out
pop
popa
movsl
mov
cmc
sbb
pop
gs
lods
mov
rcll
cmp
jnp
shlb
and
pop
sub
pop
lods
push
and
ret
mov
mov
loop
ja
or
test
sub
pop
mov
and
mov
stos
andl
adc
cld
int3
xchg
repnz
xchg
out
sbb
lock
inc
mov
xor
and
arpl
call
add
scas
repnz
aas
and
mov
push
pop
and
jne
sub
jmp
call
out
sbb
dec
nop
cmpsb
xchg
fsub
jb
daa
jmp
in
fstpt
shrl
sub
scas
leave
out
fnstsw
ja
dec
and
inc
out
xlat
push
mov
enter
push
or
rorl
out
xchg
mov
mov
pop
inc
xlat
push
xchg
sahf
mov
cmpsl
mov
and
push
ss
inc
je
mov
mov
mov
lds
jecxz
xchg
pop
lret
dec
adc
shr
mov
cmp
mov
jp
stos
sub
in
pop
testl
pop
xchg
sbb
in
mov
rolb
cmp
xchg
imul
shlb
lock
out
mov
or
movsb
xchg
outsb
fs
xchg
sub
ljmp
test
xchg
repnz
sar
push
call
daa
mov
or
int3
fisubrs
pop
clc
flds
gs
jge
jo
cld
clc
lods
out
mov
push
mov
fwait
decl
mov
ljmp
imul
es
add
mov
repnz
fs
dec
jo
xchg
stos
nop
in
xor
mov
xchg
gs
xor
cld
negl
xchg
and
out
sbb
xor
sarb
cmp
es
or
mov
in
jp
jmp
into
sti
sub
push
test
mov
push
xchg
loop
inc
mov
hlt
popa
xchg
movq
std
ja
add
movsl
or
stos
jno
icebp
xchg
lods
push
nop
dec
std
das
cmp
data16
inc
popa
addr16
xor
jl
sarl
out
and
loopne
inc
dec
mov
sarb
dec
lcall
sub
data16
push
jno
fimull
add
jg
sbb
adc
test
testl
sbb
pusha
ljmp
stc
fcomps
into
daa
icebp
jl
mov
aas
lds
dec
mov
adc
xchg
or
mov
icebp
jno
movsb
cmp
lods
inc
xchg
mov
loopne
mov
push
test
cmpsl
jp
aam
imul
pop
xchg
lret
loope
jp
adc
jbe
loopne
and
mov
data16
repnz
lahf
movsb
push
pop
mov
ret
cmpsb
jmp
cmp
dec
fs
jmp
inc
jbe
loope
out
lahf
or
dec
sarl
imul
inc
push
dec
dec
leave
push
aad
sbb
test
add
fistpll
shll
mov
dec
add
mov
ds
arpl
inc
pusha
adc
shlb
lret
mov
bound
dec
jns
in
cwtl
mov
inc
and
adc
mov
out
add
stos
jo
roll
push
xchg
imul
dec
cmpsb
xchg
cmp
sub
pop
data16
jmp
mov
jbe
out
pop
and
insl
int3
mov
mov
inc
imul
mov
mov
dec
jecxz
popa
mov
icebp
or
jo
sbb
rorl
lods
pusha
popa
pop
jmp
faddl
add
ficompl
add
mov
test
sbb
in
fs
xchg
lret
addb
add
cld
push
mov
in
cwtl
sub
push
int3
scas
add
inc
jnp
jmp
cmp
or
or
add
sti
rol
fcompl
sub
lahf
cmp
mov
nop
mov
pop
movsb
mov
xor
dec
shlb
xlat
lds
outsb
mov
xor
pushl
dec
shll
sti
mov
inc
add
hlt
lahf
mov
inc
cmp
jge
jae
pop
pop
scas
outsl
jle
xchg
enter
and
imul
out
sbb
rcrb
nop
push
repz
sbb
and
xor
mov
test
cwtl
cmp
aas
jge
jns
ja
sahf
push
adc
xor
adcl
add
jo
mov
fisubrl
ret
mov
xlat
jle
adc
push
rcl
enter
daa
xor
decl
pop
mov
add
add
mov
add
add
add
mov
add
add
add
decl
add
mov
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
leave
mov
mov
rolb
pusha
dec
les
sti
iret
sub
jno
sub
and
in
push
push
testl
add
pusha
pusha
adc
sbb
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
pop
dec
rorl
jno
orb
add
out
or
add
add
xor
int3
enter
mov
rcrb
add
rcrb
xor
push
sbb
leavew
and
jle
stos
and
add
lret
lea
adc
add
push
sbb
repz
pop
push
mov
daa
fsub
jmp
imul
cmp
sub
xchg
add
sub
shr
add
cmp
lods
inc
mov
and
ret
lret
insl
or
out
inc
xor
sbb
or
mov
imul
std
pop
lea
movb
sub
sbb
sahf
push
lcall
mov
and
add
scas
cmpsb
movl
lods
and
insb
mov
mov
sub
push
clc
sahf
adc
jae
stos
mov
inc
rorb
je
imul
sbb
movsb
icebp
mov
mov
xchg
pop
add
inc
mov
xchg
push
inc
cmp
mov
ss
mov
mov
cmp
iret
mov
push
xor
add
xchg
cmp
push
pushf
and
cmpsb
and
and
jl
jmp
mov
dec
lret
or
adc
cmp
in
add
cmpsb
sbb
fucomip
and
adc
cmp
push
jb
stc
roll
inc
push
jmp
sub
nop
repz
nop
rol
lret
mov
dec
xor
ret
lods
out
shrb
shr
pop
sarl
bnd
xor
cs
popf
xchg
sub
lods
dec
or
shlb
int3
setl
cltd
mov
sbb
adc
lea
xorl
add
jmp
xchg
dec
sub
dec
repnz
jns
lret
and
or
sub
xor
or
cmp
xchg
push
push
mov
jne
push
lea
add
add
pushf
xchg
sub
cmpsl
jmp
xchg
shl
sbb
in
or
sbb
test
and
mov
dec
adc
hlt
adc
add
test
aad
xchg
inc
out
popf
ret
or
dec
enter
sbb
adc
cmp
mov
outsl
push
and
pop
and
in
cmc
sar
std
lret
sub
roll
xor
inc
adc
xor
sbb
inc
and
and
sub
push
repz
inc
push
jns
mov
mov
movsb
mov
adc
lret
mov
sub
ret
inc
and
loope
in
or
daa
adc
lods
adc
push
inc
mov
mov
xchg
cli
and
dec
mov
or
loopne
lea
or
in
scas
cld
dec
add
inc
and
adc
adc
add
enter
jns
xchg
mov
xor
fs
pushf
popa
iret
mov
adc
pop
lds
mov
orl
cltd
jns
push
pop
aaa
cs
fisttpll
jmp
outsb
jae
pop
lea
mov
jne
mov
sub
add
fldl
and
pop
jns
adc
jl
cmc
adc
sahf
lret
add
lea
movsb
push
insl
shlb
mov
xlat
and
loope
in
int3
jne
ljmp
jbe
ficoml
jle
aas
sar
xchg
in
push
sti
int
sub
push
mov
jge
sarl
in
dec
inc
leave
and
mov
jmp
xchg
sbb
cwtl
add
les
cs
call
jb
lret
ret
adcb
jle
jmp
xor
movsl
adc
clc
push
xchg
test
fs
sbbl
xor
sub
movsl
clc
jmp
dec
sbb
add
jmp
or
std
add
inc
in
dec
add
inc
lret
test
pop
cli
sub
jb
pushf
xchg
rcrl
lahf
jmp
and
adc
in
dec
adc
pop
push
scas
js
rolb
inc
add
mov
stc
mov
sub
cmp
xor
pop
lret
rcrb
in
sbb
add
mov
add
mov
add
sbb
push
call
mov
les
push
push
jb
cld
call
push
ficoml
mov
lahf
xor
sub
fimull
ds
push
lahf
rcrl
sahf
inc
cltd
adc
ret
add
mov
ret
or
adc
add
adc
adc
mov
inc
lcall
xor
sub
push
mov
int3
cmovne
je
sbb
or
adc
xor
mov
test
imul
adc
and
push
push
push
push
call
in
dec
adc
pop
lea
inc
cld
add
xor
push
or
jbe
data16
mov
push
stos
add
nop
cmpl
je
pop
jae
inc
test
push
mov
mov
test
xchg
add
in
imul
sbb
sbb
popa
mov
shlb
or
dec
sub
lea
sub
sbb
push
and
xchg
popa
and
push
call
sub
sbb
xchg
jecxz
inc
mov
or
add
xor
cmpsl
daa
in
mov
push
adc
inc
push
pusha
iret
jnp
xchg
mov
insb
ret
jne
fwait
dec
push
sub
xor
rcll
lock
orl
lea
push
insl
inc
pop
add
adcb
add
jno
addr16
aas
out
push
rclb
test
pop
inc
xor
adc
dec
ficoms
inc
or
jbe
shl
test
sub
mov
in
push
es
loop
mov
bswap
cmpsb
imul
pop
pop
pop
pop
ret
push
popa
mov
and
call
jmp
sbb
push
add
push
call
inc
add
jle
ret
shll
add
std
xlat
ljmp
inc
popa
add
jmp
aad
xchg
leave
push
adc
jge
pushf
inc
sbbb
pop
ret
je
dec
ja
and
push
add
in
sub
fmuls
fistps
aas
push
enter
cvtdq2ps
in
movw
js
aaa
cmpl
add
add
sti
inc
test
cli
pslld
shll
or
jmp
jne
mov
add
jno
repnz
jmp
jbe
jae
sarl
dec
enter
pop
pop
add
ret
jmp
cmpsl
and
xor
call
push
push
cmp
leave
pop
add
sbb
nop
xor
rorb
inc
adc
fisttpll
adc
xchg
test
insb
fsubrs
mov
iret
jge
dec
push
inc
imul
inc
dec
je
dec
or
xlat
jne
sub
jbe
dec
or
rclb
rcrl
push
addr16
into
add
pop
roll
pop
pop
dec
mov
aam
cmp
ret
in
add
jbe
push
adc
cmpsl
dec
nop
pop
mov
dec
aas
es
out
loope
in
push
pop
out
fists
jb
fiadds
and
jae
push
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
cmovbe
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
dec
mov
push
fistps
mov
in
pop
test
inc
je
jae
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
icebp
movl
sub
pushf
dec
mov
fiaddl
stos
inc
or
cmpsb
push
push
nop
add
or
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
ret
inc
mov
ret
adc
dec
lds
insl
jae
jb
jmp
in
fistpl
adc
mov
pop
mov
and
ret
inc
and
addl
dec
pushf
dec
dec
pop
xor
jmp
test
adc
out
inc
leave
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
dec
dec
mov
push
ret
mov
add
mov
lods
popf
and
push
outsl
jnp
repz
xor
icebp
mov
shr
nop
adc
dec
dec
or
adc
mov
rorl
imul
insl
pop
sbb
sbb
inc
inc
mov
add
daa
hlt
iret
sub
jmp
push
lea
mov
leave
popa
cmp
mov
mov
pop
mov
jb
mov
les
jp
and
mov
popa
dec
idivb
mov
insb
imul
and
jb
iret
test
adc
jno
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
ja
inc
fdivs
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jae
bound
lret
and
xchg
jo
outsb
or
mov
dec
mov
mov
lcall
adc
push
pop
xor
mov
sbb
mov
scas
std
addb
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
les
add
loopne
add
dec
mov
add
sbb
add
add
add
adc
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
