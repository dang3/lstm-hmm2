fildll
push
push
mov
lea
mov
push
push
xor
call
test
and
je
lea
push
and
adc
pop
pop
xor
pop
ret
mov
fistpl
xor
push
and
push
push
add
add
dec
or
insl
imul
mov
ss
sbb
ret
fldt
mov
push
push
mov
xlat
ds
in
adc
into
fmull
mov
daa
aas
ja
pop
call
test
cmp
adc
mull
sahf
mov
xor
lea
sbb
stos
mov
push
frstor
add
sbb
das
or
into
jge
or
iret
cmpsl
jmp
mov
cmp
mov
sbb
cmpsb
add
jbe
fmull
xor
push
jns
mov
outsb
mov
dec
mov
daa
out
inc
add
mov
pushf
xchg
add
mov
mov
or
loope
aaa
add
mov
cmpsl
or
push
pushf
adc
unpcklps
pop
push
xor
in
decl
not
dec
in
mov
add
fcoml
inc
and
sub
pop
cmpl
pusha
add
mov
jne
jl
cmp
mov
rorb
add
push
or
into
clc
imul
movsl
and
outsb
cmp
or
sti
subb
xor
xor
xchg
mov
jo
testb
jb
or
xor
push
mov
in
mov
setne
mov
aaa
inc
adc
pop
dec
add
push
sbb
mov
je
add
dec
out
pop
mov
rcrl
aam
push
hlt
or
pop
fldt
stc
lea
adc
outsl
mov
lret
sbb
jmp
enter
shll
loope
xchg
pause
mov
addr16
iret
pop
push
fstps
mov
dec
pop
lret
jbe
jbe
cmp
fs
mov
into
testb
push
pop
push
roll
je
cmpsb
shl
call
bound
ss
mov
and
ja
in
push
or
ds
adc
mov
pop
push
mov
sbb
push
sbb
and
mov
in
out
data16
push
dec
pop
adcb
add
sar
test
je
push
sbb
xchg
lret
push
pop
cmp
add
pop
fists
loopne
loopne
loopne
mov
or
les
sbb
enter
xor
stos
sbb
sahf
dec
aad
push
xchg
or
testb
test
cmp
dec
mov
sub
popf
add
sub
cmp
inc
outsb
subb
cmpsl
push
cli
jo
dec
dec
and
adc
fs
xlat
add
and
or
sbb
subb
loopne
sub
push
adc
or
scas
ret
cmp
pop
xor
jg
or
inc
les
add
push
mov
add
add
sbb
sbb
or
out
or
fucom
pop
out
aam
inc
movb
jno
sbb
cmp
or
sbb
jg
out
sbb
mov
mov
or
lds
aad
arpl
into
out
dec
es
add
scas
xchg
mov
adc
adc
aam
daa
xchg
sbb
cmp
stos
xorb
or
adcl
lock
je
or
jp
loopne
and
mov
lods
jp
cmp
call
xlat
add
add
es
pop
cld
push
push
adc
imul
cmp
mov
mov
pop
js
js
push
cmp
rcrl
sub
out
jne
jle
jb
enter
mov
iret
stos
jmp
and
sbb
pop
inc
inc
call
dec
xor
or
mov
mov
and
ret
sub
jne
fwait
mov
mov
sub
movsb
notb
pop
out
ja
mov
jo
adc
imul
cmpsl
out
rolb
sbb
cmp
jge
push
ljmp
pushf
ss
adc
or
mov
cld
inc
jo
in
mov
push
jl
adc
ss
sub
movsl
xor
sub
lods
mov
fistl
mov
popf
or
nop
jo
pop
pop
scas
cmpsl
dec
mov
movsb
jmp
dec
add
fmull
ss
lcall
lea
movl
movb
jnp
outsb
pop
in
mov
lods
inc
sti
clc
add
leave
and
adc
push
fsub
fstpl
mov
add
pop
add
fisubrl
sbb
push
fcoml
int3
out
mov
dec
mov
mov
mov
fstpl
and
or
dec
mov
iret
mov
aaa
inc
push
mov
loopne
sarb
enter
cmpl
sti
test
test
in
or
inc
fimuls
xor
ret
cmp
mov
and
mov
jmp
mov
xor
cmp
sar
or
mov
mov
sub
test
jle
mov
dec
test
dec
fwait
movsb
insb
push
cmp
aaa
lea
jno
roll
test
call
lds
subb
cmp
jmp
andl
cld
or
pop
mov
adc
pusha
dec
shlb
sbb
repnz
ffree
ds
mov
xchg
insb
push
push
mov
add
adc
or
ret
cmp
negb
add
lcall
pop
xor
adc
and
ret
sub
mov
mov
cmp
mov
or
mov
pop
or
popf
js
icebp
dec
hlt
pop
mov
pop
ret
jbe
cltd
add
sub
in
push
push
push
cmp
test
pop
sub
pushl
jo
jmp
cmp
push
push
mov
stos
outsb
cmpb
icebp
fs
inc
aad
ret
mov
cmp
sbb
lock
push
xor
push
call
ss
xchg
jbe
xlat
adc
mov
inc
sbb
call
mov
mov
xor
pop
icebp
aas
add
cmp
pop
dec
cmp
add
or
dec
cmp
aas
dec
enter
or
mov
pushf
mov
int3
sub
add
cmp
jae
and
lret
push
ljmp
rorl
aad
or
stos
pop
sbb
lods
jne
mov
or
sub
mov
sbbb
mov
jo
stos
stos
mov
mov
stos
insb
pusha
mov
push
inc
add
mov
adc
cwtl
push
add
push
inc
sti
and
xor
or
imul
rorl
push
mov
cwtl
pop
mov
pusha
fildll
out
add
and
xor
pop
cwtl
jecxz
add
push
push
inc
mov
sub
clc
push
das
sbb
ja
mov
push
push
push
cmp
jg
int3
divl
lods
cltd
push
sub
adc
and
sbb
add
or
mov
mov
movsb
jmp
fs
pop
add
pop
pop
push
rcll
or
pop
decb
call
jl
mov
xchg
and
mov
jne
aam
je
adc
jns
pop
push
dec
adc
orb
mov
aas
sbb
add
pop
pusha
pop
inc
push
je
pop
test
push
xchg
cmp
cmp
negb
cmp
adc
ffreep
shlb
pop
push
dec
pop
rorb
push
or
ret
mov
fwait
xchg
push
addb
xchg
and
roll
in
rol
cmp
jb
pop
mov
adc
cmp
pop
push
xchg
and
and
imul
js
adc
pop
cld
pop
sbbb
dec
adc
les
pop
ret
jp
mov
push
je
stos
lea
das
jg
jl
xchg
xchg
movl
insb
fidivrl
adc
test
add
pop
lahf
add
jge
or
adc
cmpsl
xor
mov
adc
sbb
lods
lret
ret
or
js
or
fldt
pop
loopne
mov
pop
xlat
adc
push
mov
je
push
adc
sub
ljmp
lret
fbstp
and
add
dec
pushf
sbb
push
aad
mov
pop
test
cmpb
add
dec
adc
test
mov
scas
stos
std
mov
lea
in
fdivrl
in
into
push
sbb
sbb
setg
ret
loopne
test
mov
mov
gs
adc
nop
sub
popf
xor
loop
sbb
mov
push
je
xor
ret
inc
pop
ss
adc
xchg
mov
jno
mov
and
gs
aas
sbb
js
push
and
add
out
pop
mov
mov
mov
jle
mov
jl
push
push
dec
and
dec
jge
cmp
xchg
sbb
dec
pop
adc
inc
addb
aaa
je
insl
xor
clc
and
mov
addb
fisubl
stos
testl
adc
enter
push
filds
rcl
daa
pop
add
add
push
lock
and
mov
mov
sub
inc
addr16
jo
pop
daa
sbb
xchg
icebp
jmp
sub
push
repnz
imul
iret
push
jae
mov
out
xchg
push
push
or
sub
loope
test
loopne
into
dec
and
jecxz
shl
sbb
xchg
and
pop
fildll
jp
inc
in
add
addr16
scas
push
ljmp
and
cmp
out
push
dec
cld
or
pop
mov
sub
mov
shll
jmp
add
sbb
mov
cmp
dec
xor
xchg
pop
lods
cmp
mov
mov
pop
dec
lahf
jle
loopne
test
sub
sub
cmp
ja
dec
and
cmp
rcrb
sbb
jecxz
pop
and
decl
push
pop
push
push
cwtl
mov
add
jbe
cmp
jo
push
aaa
je
xchg
mov
sub
cmp
xor
adcl
pop
mov
out
push
jbe
push
mov
push
jmp
dec
dec
push
bound
in
into
in
mov
movsl
subps
fs
sub
push
xor
cmp
push
iret
arpl
ret
jno
pop
sub
dec
or
mov
adc
adcb
sbb
add
push
cmc
sbb
sub
push
in
ret
psubq
fsubl
mov
sub
add
jle
roll
je
mov
popf
xchg
repnz
scas
outsl
push
push
adc
idivb
int3
adc
mov
xor
lcall
xchg
add
or
je
jo
jl
jl
sbbb
lea
cmp
jl
cmp
or
sub
push
arpl
inc
mov
push
rolb
jo
pop
aas
cmp
aas
xor
and
or
add
rcrl
xchg
jl
cmc
in
add
mov
push
sbb
arpl
inc
xor
jl
dec
mov
mov
lret
sbb
or
push
gs
pop
call
jmp
rorl
leave
testb
sbb
push
test
clc
push
aas
mov
mov
scas
inc
xor
loope
xor
lahf
rcrl
sub
dec
subl
ret
fbstp
and
mov
jne
sbb
adc
cs
pop
out
popa
mov
push
push
lret
sti
lcall
pop
mov
out
cs
stos
push
aaa
pop
movl
push
mov
pop
sarl
pop
cld
sub
inc
mov
shlb
pushf
push
mov
adc
aas
faddl
jo
loopne
je
xlat
call
into
adc
movsb
pop
inc
sbb
dec
or
xchg
rol
out
outsb
adc
mov
pop
insb
sub
add
inc
push
and
pop
sbb
cmp
pop
clc
push
loopne
xor
fs
push
out
xchg
outsb
sbb
dec
xor
sub
and
fists
inc
push
sub
push
push
in
or
cmp
notl
mov
add
mov
xor
cmp
push
push
or
and
xchg
pop
add
sbb
inc
insb
jne
pusha
gs
xor
aas
sbb
mov
xchg
sbb
cwtl
fs
rorb
fstl
call
insb
in
push
and
pop
subl
inc
sahf
pop
and
mov
scas
mov
mov
push
lea
add
mov
xchg
lea
pop
ss
mov
add
pusha
cmp
jne
lea
push
lds
stc
int3
lret
jl
sbb
js
mov
push
fsubrs
xchg
fsub
inc
movsb
arpl
pop
pusha
mov
lea
sbb
pusha
movsb
jecxz
orl
rclb
xchg
arpl
add
pop
add
lea
repnz
adc
push
push
loopne
push
push
mov
hlt
mov
es
push
jae
add
jl
or
clc
inc
push
add
add
push
pushf
ds
cmp
inc
xor
aad
and
loopne
cmc
add
insl
or
int3
or
push
cmpsl
sbb
cmp
mov
and
insl
jle
pushf
push
jg
xchg
fiadds
fnstsw
pop
lods
cs
jge
or
in
lock
push
jl
out
jno
call
fmull
push
pop
loop
icebp
push
push
push
sbb
jg
jae
or
mov
mov
mov
aad
push
jno
or
pop
mov
lock
inc
or
dec
mov
and
in
outsb
jg
and
mov
in
mov
pop
in
mov
insl
or
shll
xchg
push
or
dec
sahf
dec
push
mov
clc
orl
jo
je
mov
mov
xor
push
jl
sub
enter
push
push
inc
adc
lcall
lds
icebp
cmp
int3
adc
adc
popa
dec
sbb
mov
jl
dec
gs
scas
lods
mov
add
lock
test
adc
mov
js
loopne
xor
loopne
dec
das
mov
rol
test
and
add
pop
xchg
stos
inc
xor
inc
test
adc
cmpsb
ret
xor
int3
inc
cmp
fidivs
xchg
pop
xor
pop
aaa
test
push
push
push
push
add
movsb
jl
push
push
sbb
push
dec
mov
dec
lock
sub
jl
jmp
add
ret
psrlq
sbb
mov
mov
sbbb
sbb
shrl
push
dec
sbb
in
mov
sub
push
cmp
mov
mov
mov
mov
xchg
push
cs
and
insl
mov
push
js
in
sbb
shll
sahf
mov
sbb
jb
push
cs
dec
inc
or
adc
fdivl
cmpsl
push
xor
pop
pop
inc
pusha
and
clc
jle
push
sbb
push
mov
inc
push
pushf
push
mov
xchg
and
add
sub
xor
or
mov
mov
add
add
mov
cwtl
sbb
adc
push
cmc
add
cs
je
mov
push
lahf
in
mov
mov
scas
test
and
ss
adc
fxsave
sub
rcrb
rorl
insb
mov
sub
inc
add
xchg
or
dec
shl
les
inc
jle
fs
shrb
adc
inc
mov
and
mov
stc
test
dec
aas
sbb
push
cs
push
jb
outsb
push
test
jecxz
int3
push
frstor
test
outsb
add
pop
aas
pop
cltd
sub
gs
cmpsl
or
xor
add
inc
xor
xor
popf
pop
movsb
stos
pop
xchg
push
adc
mov
pusha
jne
mov
fsubl
sub
mov
pop
fs
outsb
jmp
imul
cmp
sbb
mov
aad
inc
sbb
lods
jl
lods
sbb
call
adc
mov
inc
sub
xorb
nop
cwtl
sub
loop
jne
xchg
insb
outsb
in
icebp
sahf
jge
pop
adc
inc
sub
mov
test
push
cmp
fists
rcrb
sub
test
ja
push
add
imul
imul
ljmp
push
jno
push
test
clc
cmpsb
push
or
adc
dec
cmpsb
stos
sub
push
mov
sub
mov
jne
xlat
sbb
call
sub
and
pushf
lcall
mov
mov
jnp
je
lea
sbb
xor
jmp
xchg
cmp
jmp
xchg
int
jmp
in
cmpsl
cs
push
push
xchg
stos
cmp
pop
popa
cs
xchg
js
call
xchg
xor
sbb
cmpb
and
inc
adc
imul
popa
dec
aam
scas
mov
imul
push
pushf
das
int3
mov
mov
push
mov
jo
mov
sbb
cmovge
sub
ret
sub
sbb
sub
pusha
push
dec
lods
das
js,pn
cmp
dec
sbbl
aam
pop
scas
subl
int
jge
mov
fcoms
cs
xlat
push
inc
sub
test
addl
push
pusha
inc
je
movsb
or
push
mov
add
or
lods
cmc
xor
dec
push
adc
hlt
int3
mov
scas
sbb
iret
sub
jle
sbb
int3
dec
mov
fldpi
add
testl
jne
add
shl
inc
mov
dec
dec
xor
sbb
mov
mov
shrb
test
sbb
push
rol
cmc
push
sub
test
push
nop
andb
sbb
add
pop
pop
sub
mov
pop
lahf
fcomps
andb
add
scas
rorl
bound
test
xor
dec
cwtl
aas
jb
dec
and
das
jbe
jbe
and
fs
or
dec
pusha
sbb
cmp
punpckldq
aas
sbb
sub
sbb
out
xchg
out
mov
mov
es
hlt
push
add
push
js,pn
sub
adc
pop
and
sbbl
cmp
sbbl
dec
test
insb
arpl
xchg
aad
cli
call
xchg
jp
jl
sbb
mov
fcomps
shlb
into
daa
add
cmp
push
fs
or
fadds
and
push
dec
clc
cwtl
push
jmp
inc
dec
jo
lods
sub
sub
lock
clc
movl
clc
subb
sub
and
mov
je
pop
mov
fiadds
outsb
pop
pop
add
or
inc
jo
sahf
pusha
push
ljmp
add
mov
push
cmp
push
icebp
pushf
mov
cwtl
push
sub
fwait
hlt
add
nop
xor
adc
xchg
and
dec
mov
test
add
filds
or
test
sbb
lahf
adc
data16
adc
lods
xor
pop
add
adcb
pop
cmpl
adc
push
inc
push
jae
scas
mulb
push
pop
sbb
pushf
mov
sub
clc
add
data16
cmc
mov
mov
push
out
rol
adcl
or
dec
loopne
xorl
add
outsl
mov
sbb
ja
mov
inc
cmpsb
xchg
loopne
cmc
ficomps
jae
imul
mov
sbb
ror
jnp
push
xor
push
pop
test
out
mov
lret
dec
fdivl
pop
loopne
xor
pusha
jge
xor
insb
or
cli
and
or
push
push
pop
or
and
mov
add
sub
leave
inc
sub
xor
pushf
push
mov
pop
rorb
mov
xorb
jge
xchg
inc
mov
or
cli
filds
cmp
jl
in
jne
ret
lahf
cli
sbb
push
cmp
jle
jmp
and
or
mov
jo
sub
pop
lods
adc
inc
xchg
les
xchg
xorb
mov
adc
cmp
or
sbb
or
mov
sbb
or
imul
mov
or
ret
inc
push
ret
fbstp
pop
stos
push
or
in
fistps
or
cmpsb
add
scas
sub
push
adc
shrb
and
insb
jne
xor
cmp
je
gs
add
adc
mov
and
add
mov
sub
aaa
jo
fistl
dec
mov
je
push
push
push
sbb
xor
lret
mov
jns
repz
mov
cmp
clc
adc
push
fcmovne
lret
sti
push
call
inc
jge
test
movl
cmp
push
add
cmpsl
or
push
loope
pop
jno
add
sbb
pop
adc
daa
data16
insl
orl
aam
mov
mov
push
push
into
xor
inc
push
cld
lock
jge
cltd
mov
inc
fsub
movsb
mov
ljmp
pop
ret
data16
call
enter
mov
cmp
adc
sub
stc
sbb
push
loopne
pushf
add
xor
loopne
add
loope
or
mov
pop
adc
push
mov
push
mov
sub
mov
pop
sbb
lahf
or
push
push
or
js
jl
testl
inc
or
lock
push
adc
sbb
pop
mov
pop
or
adc
pushl
jae
icebp
add
push
add
pop
xor
pop
movl
push
pop
push
mov
cmp
cli
sbb
push
cmp
test
push
scas
pop
das
mov
in
push
scas
or
and
mov
rcll
cmp
push
ficomps
adc
std
inc
mov
mov
or
push
or
loop
js
mov
or
push
and
addr16
pop
lcall
add
mov
cmp
mov
pop
jmp
rcr
shlb
pop
cs
lret
mov
lret
in
mov
mov
xchg
nop
mov
test
mov
push
in
pop
pop
push
push
in
mov
inc
pop
cs
lret
cmp
xor
sub
in
mov
mov
adc
add
movsl
bnd
clc
popa
hlt
lock
call
in
jb
push
enter
pop
cs
rcl
fcomp
loopne
lret
in
in
in
lock
out
mov
add
cs
or
adc
xchg
lret
in
sbb
and
sub
mov
cmp
xchg
lret
in
inc
dec
dec
xchg
mov
pop
pop
or
lret
in
fs
mov
addb
nop
xchg
cwtl
in
mov
lods
pop
cs
lret
mov
mov
jb
enter
test
aam
adc
mov
mov
pop
les
sub
add
test
jb
sbbl
sub
jae
sub
mov
sbb
fidivrs
inc
add
ret
cmpl
jnp
and
mov
pop
ret
push
sub
pop
ret
mov
inc
insb
iret
cmp
or
mov
jge
cltd
adc
lods
dec
leave
lret
cmp
mov
xchg
out
pop
mov
pop
cld
pop
fsubs
orl
or
sub
mov
jnp
xor
loopne
mov
mov
pop
lock
or
push
push
mov
xor
mov
dec
lcall
add
sbb
sbb
nop
nop
out
sarl
mov
or
add
fildll
fnsave
mov
cmpb
jne
inc
adc
push
cmp
je
cmp
repnz
sahf
es
pushf
movsb
mov
testb
decb
mov
aam
push
push
cmp
push
jmp
push
addb
or
push
push
push
icebp
repz
clc
vunpckhps
cwtl
data16
xlat
inc
in
or
mov
xor
or
xchg
pop
hlt
mov
add
pop
addl
arpl
cld
cmpsl
in
ja
fldt
or
insl
mov
jnp
inc
fadd
push
and
bound
dec
dec
nop
arpl
pop
cmp
and
cmp
or
gs
test
test
cli
inc
adc
push
push
fsubp
aas
and
push
add
xchg
loope
test
in
test
inc
push
loopne
jne
loopne
dec
cmp
lods
mov
pop
cld
add
leave
ret
add
shll
lock
xor
lock
ja
in
inc
imul
mov
sbb
je
addb
in
lea
aad
or
outsl
add
dec
pop
inc
or
jb
xchg
decb
adc
frstor
cmp
mov
pop
loope
xorl
dec
test
outsb
sub
jmp
adc
nop
inc
scas
jne
push
mov
sbb
push
pop
jle
pusha
dec
call
push
aam
sbb
lds
and
sbb
loopne
lret
in
popa
add
and
adc
jns
aaa
clc
daa
dec
ret
mov
xchg
jle
imul
daa
mov
mov
mov
outsb
lock
and
mov
or
lock
aam
mov
push
gs
call
cmp
call
or
in
mov
and
or
adc
in
cmpsl
jno
jmp
bswap
shl
in
rolb
mov
clc
frstor
inc
mov
in
andl
sbb
xchg
call
loopne
aam
mov
lds
scas
adc
in
js
outsl
jle
outsl
call
pop
imul
pop
pop
cmp
or
mov
inc
push
xor
jno
ss
pop
cs
fsubrl
in
push
or
and
orb
getsec
mov
or
das
mov
pop
test
outsl
adc
mov
pop
pop
or
rorb
movsb
adc
or
in
es
mov
pushf
aam
cmp
pop
in
bswap
mov
and
xchg
test
sbb
mov
sbb
call
adc
iret
lods
fmuls
iret
nop
dec
cmp
mov
xchg
test
mov
stos
inc
jbe
and
insb
pop
add
or
mov
jbe
lahf
int3
leave
cmp
pop
lds
mov
push
outsl
adc
dec
cmpsb
sarb
xor
pushf
adc
cli
push
cld
mov
sbb
add
test
inc
add
and
subb
mov
add
xchg
xchg
jge
inc
loope
and
xchg
xchg
pop
inc
outsb
jbe
sub
cmp
jnp
sub
push
es
push
inc
inc
cmp
jnp
repz
nop
push
sub
and
sbb
sahf
out
push
adc
add
fsubrp
test
clc
push
xor
in
push
out
sahf
out
loopne
aam
enter
out
mov
out
sahf
movsb
sahf
cwtl
xchg
mov
mov
push
mov
movsb
insl
mov
cmpb
mov
call
fdivr
pop
push
cs
pop
mov
inc
adc
or
mov
mov
adc
les
es
jg
out
or
push
adc
jns
or
add
inc
hlt
out
cmp
loop
add
loopne
push
lock
lret
mov
mov
out
xor
cmpb
mov
mov
mov
cmp
push
xlat
or
jg
add
or
out
cmp
shrl
ds
dec
leave
loop
mov
xchg
dec
mov
inc
addr16
cmp
add
jne
mov
pop
leave
add
sbbb
mov
sbb
out
mov
andb
aaa
mov
outsb
jo
pop
aaa
sbb
jbe
mov
inc
dec
enter
jb
rcrb
lds
lods
leave
lock
js
dec
push
sub
mov
fsubrs
lods
sarl
jp
aaa
nop
jg
push
mulb
jg
mov
rorb
enter
mov
jns
lahf
push
push
push
fadds
loopne
in
mov
repnz
sbb
clc
push
js
andb
sub
jg
xchg
push
enter
dec
daa
dec
jns
mov
pop
inc
dec
or
out
or
xor
out
fsubrl
mov
lds
dec
aas
js
jo
jb
call
mov
jg
dec
adc
outsl
and
dec
aaa
dec
pmulhuw
out
leave
in
jo
js
inc
jg
dec
dec
scas
nop
cwtl
mov
repz
add
mov
fcomps
jbe
mov
scas
call
adc
sbb
xor
imul
pushl
pop
out
aaa
jnp
push
inc
inc
push
dec
push
add
add
add
out
imul
or
jns
out
orl
or
fwait
mov
xchg
mov
ret
lret
cmp
xchg
rcr
adc
aaa
cmp
add
push
sti
push
sbb
das
jg
push
in
in
sbb
sub
in
in
cmp
push
dec
sahf
out
pop
arpl
imul
out
sub
subl
sahf
out
sub
out
dec
stos
xor
mov
enter
daa
stc
icebp
mov
outsb
adc
stc
int3
dec
rclb
push
and
pop
outsb
jbe
push
aaa
clc
push
pop
push
cmova
movups
push
and
enter
push
xor
push
js
cmp
push
dec
push
push
das
pop
push
ja
jo
pop
mov
jo
roll
push
xchg
enter
pop
adc
daa
push
in
jbe
push
cmpsl
loopne
call
xchg
or
push
adc
adc
js
pushl
addr16
jb
xor
das
jbe
and
jae
and
das
jne
jg
pop
push
outsl
insl
push
jo
arpl
and
and
dec
add
arpl
sub
and
ljmp
push
inc
push
inc
dec
outsb
je
jb
gs
js
gs
imul
arpl
fimuls
clc
outsl
jae
data16
push
xor
inc
push
inc
fs
jo
jae
outsw
add
push
sahf
xlat
jge
cs
insb
outsl
or
cmp
shlb
inc
imul
clc
je
jo
das
andb
arpl
ja
adc
arpl
fildll
jo
fsubrs
popa
jae
aas
jbe
data16
ja
cmp
or
arpl
in
loopne
xchg
and
je
mov
adc
pop
dec
xchg
pop
shll
cld
jo
cmp
jb
push
jecxz
rclb
inc
gs
popa
jne
je
add
pop
mov
and
push
push
dec
dec
imul
cmpb
inc
jae
aas
and
cwtl
frstor
lea
jae
outsb
sbb
cmpsb
and
sub
decl
iret
jnp
inc
inc
xor
xor
inc
sub
sub
sub
idiv
fisttps
xor
ss
inc
inc
ss
loop
add
pshufd
daa
das
mov
xor
xor
daa
daa
daa
xor
xor
fstpt
fisttpl
dec
outsl
push
gs
jb
dec
addl
jns
inc
stos
call
jbe
popa
insl
in
push
outsb
cld
jae
popa
pusha
push
je
icebp
lahf
mov
jae
push
dec
inc
push
push
inc
push
inc
sub
push
addr16
ds
ja
jne
pusha
jnp
push
push
jle
iret
pop
adcl
insl
add
xlat
add
jbe
jg
decl
inc
pop
pop
push
push
inc
push
push
pop
dec
dec
inc
inc
dec
pop
dec
inc
inc
dec
dec
dec
inc
fdivs
mov
dec
push
dec
add
jo
jle
dec
inc
push
sbb
pop
push
dec
dec
push
das
insb
movsb
mov
pop
xchg
adc
fdivp
xor
push
or
and
add
shll
xor
scas
sbb
jno
add
arpl
push
lods
loope
mov
push
add
iret
paddsb
rcll
cs
pop
pop
push
jne
imul
test
mov
shll
das
pop
mov
mov
mov
int3
scas
and
ror
mov
and
aad
dec
cmp
push
mov
pop
inc
lock
adc
sysexit
add
outsl
and
xor
mov
add
into
jecxz
inc
xchg
outsb
pop
add
and
pop
pop
hlt
decl
mov
cmp
dec
iret
adc
hlt
out
test
mov
fldt
add
jne
popl
mov
inc
sbb
stos
ljmp
inc
idiv
incl
or
push
sbb
mov
add
sub
and
xor
pop
insl
pop
in
mov
pop
jb
push
add
sub
ja
das
mov
sti
mov
cmpsb
enter
xchg
add
aaa
push
hlt
call
jo
add
je
cmp
xchg
call
mov
lgdtl
add
xor
push
add
lcall
jle
rolb
inc
pop
add
int
rcrl
push
or
std
cmp
mov
mov
and
int3
mov
psubd
aam
pop
mov
or
push
mov
ret
mov
mov
pop
lcall
out
push
jg
xor
daa
xor
mov
xorl
and
fbld
insl
jbe
cmp
mov
jnp
popa
lret
aas
add
jne
xor
arpl
xchg
mov
stos
gs
add
pop
js
or
ja
push
cmp
add
js
mov
mov
cmp
xor
inc
sub
sub
sub
sbb
or
inc
inc
xor
aaa
xor
ljmp
mov
or
loopne
push
dec
pop
push
push
push
inc
inc
mov
adc
pop
mov
and
aaa
insb
or
and
outsl
addr16
and
outsb
mov
insl
ljmp
je
bound
jb
and
inc
dec
push
and
mov
lods
pusha
cs
dec
push
inc
sub
pop
pop
cld
idivl
pop
inc
pop
inc
push
and
repnz
test
fimuls
sub
out
das
push
jmp
dec
mov
in
jo
push
inc
jg
pop
adc
mov
sub
push
imul
test
add
push
or
mov
popa
inc
loopne
sidtl
add
add
lods
mov
lahf
inc
orb
gs
pop
adc
jb
add
mov
das
pop
jg
daa
sbb
in
mov
lea
mov
push
fsubrl
mov
sbb
js
pop
dec
and
test
xor
jg
enter
add
jo
loopne
mov
jb
popa
aaa
and
fstpl
addb
mov
dec
add
cs
mov
lock
rcrb
mov
cmp
out
push
lahf
subb
repz
and
mov
or
jmp
cmp
and
adc
call
ret
cs
fwait
mov
shlb
mov
aam
pop
jb
cmpb
mov
adc
mov
push
mov
lock
ja
lock
leave
xor
xor
rorl
cmpsl
jge
mov
push
loopne
sti
std
mov
jmp
pop
or
cmp
and
idiv
inc
or
cmp
je
test
jne
dec
push
mov
pop
mov
jg
std
pop
mov
adc
cmp
ja
mov
push
idivb
repz
xor
add
and
mov
mov
lret
push
divl
fdivs
mov
sbb
movsb
pop
jg
nop
iret
adcb
push
mov
mov
or
pop
mov
jmp
dec
push
call
adcb
movl
in
lock
jns
inc
sub
add
nop
lock
xor
xor
push
push
lcall
and
or
xchg
ror
push
xor
test
push
inc
mov
ret
fisttpl
inc
mov
and
sub
fstpl
sub
jne
mov
mov
pusha
shl
mov
in
add
ljmp
adc
adc
mov
and
rol
loope
inc
push
pop
sbbb
inc
push
pop
xor
sti
jne
mov
js
jmp
outsb
cmp
add
xor
push
sub
push
mov
adc
inc
loop
roll
call
sbb
js
or
and
lds
movsbl
sub
rcr
filds
ret
push
mov
dec
inc
in
lahf
inc
jo
inc
add
nop
enter
dec
mov
sbb
into
cmc
pop
cmp
or
out
jge
mov
adc
jl
adc
into
adc
lahf
stos
stos
sti
loope
sbb
and
ljmp
sbb
shl
sub
lds
outsb
ja
lea
add
arpl
jle
jecxz
mov
push
sub
loop
pop
inc
mov
cmpsb
ja
inc
orl
test
popf
push
jecxz
lods
add
xchg
push
mov
mov
mov
mov
or
call
mov
sub
hlt
sub
leave
lds
dec
ret
xor
sbb
je
mov
mov
sbb
jne
testb
add
or
rorl
loopne
inc
hlt
add
pop
xchg
call
sub
outsl
jns
dec
inc
sub
scas
movsb
shll
cltd
and
aas
dec
cmp
cmp
cmp
or
and
sbb
mulb
sub
push
add
and
lea
push
pushf
cmp
and
sub
sahf
mov
or
jmp
mov
lods
jbe
or
sbbb
cmp
cmp
mov
loopne
inc
icebp
jmp
add
sbb
pusha
inc
dec
sarl
push
add
push
repnz
inc
push
cmp
ds
fidivl
das
nop
add
push
inc
add
aas
pop
lret
mov
xchg
inc
inc
pop
or
enter
xor
test
add
push
dec
pop
push
popf
mov
lock
ljmp
add
cmp
shl
nop
stos
adc
fs
sbb
loop
loope
stos
es
add
push
sbb
mov
lock
push
inc
push
and
sub
movsb
sbb
mov
dec
xchg
mov
movsl
sub
sub
mov
and
movsb
ret
add
loopne
sbb
out
xor
add
jbe
sbb
sbb
mov
push
test
push
ja
sbb
jge
add
push
mov
iret
fldl
rorl
mov
nop
lcall
loopne
jle
mov
test
stos
jbe
push
add
cmp
aas
push
sbb
push
out
shll
add
pop
frstor
sbb
or
in
cmp
into
sbb
test
lea
fimuls
in
mov
or
add
jl
test
push
jbe
scas
loopne
loope
jo
mov
inc
xchg
ret
enter
movsl
add
xorl
adc
test
jle
dec
mov
inc
sub
inc
in
nop
inc
jo
inc
loope
xor
dec
inc
sbb
mov
ret
xor
std
rcrb
in
and
stos
imul
add
or
pushf
loopne
jmp
push
push
mov
cmp
je
push
js
jle
push
adc
add
mov
test
mov
aas
enter
mov
call
popa
mov
mov
rorb
call
jo
xchg
rcrl
xchg
cmc
add
in
imul
cmp
test
jo
subb
sarl
pop
call
bound
pop
xchg
push
dec
imul
sub
pusha
rorl
movl
inc
add
ret
xchg
call
or
pop
pop
inc
in
pusha
mov
clc
pushl
mov
jae
or
pop
inc
cmp
add
dec
loopne
aas
add
add
or
jge
icebp
jge
mov
ja
stos
decl
mov
jg
xchg
adc
call
dec
aaa
add
mov
sub
adc
push
shl
dec
sub
clc
mov
dec
jno
fwait
rclb
push
mov
add
scas
dec
sub
push
and
lcall
enter
mov
and
fidivrl
push
or
ret
sarb
mov
shrl
xor
push
push
call
add
sub
lret
jg
dec
pusha
inc
cmp
jne
xor
jne
sbb
mov
out
repnz
push
out
mov
lret
je
and
std
pop
adc
mov
lock
pusha
jnp
ret
stos
jns
or
and
mov
fstpl
push
lock
repnz
dec
loopne
add
arpl
adc
popl
adc
faddl
cli
jb
test
mull
adc
or
xchg
inc
cmp
jno
dec
pusha
shr
pop
je
addl
pop
cmp
insl
pop
mov
inc
or
or
sbb
pop
and
mov
loope
jo
cmpsb
sub
or
push
inc
adc
test
or
adc
scas
or
pop
clc
je
push
shl
jge
and
cwtl
or
clc
pusha
int3
jg
xor
add
push
mov
inc
adc
repnz
jl
mov
cmpb
mov
xor
dec
inc
inc
mov
sub
cmp
test
xchg
inc
out
push
pusha
mov
repnz
inc
lret
add
rolb
or
ret
sub
and
pop
pusha
pop
arpl
adc
mov
call
loopne
xor
jo
push
dec
mov
lods
arpl
jmp
push
push
jl
fisubrl
cmp
add
push
fucomp
and
test
dec
mov
in
sub
add
xor
icebp
ret
movswl
and
sti
mov
je
cs
adc
inc
push
jo
jp
xchg
and
xor
js
js
stos
out
lods
loope
add
sbb
inc
js
mov
test
and
add
clc
ss
add
xchg
call
inc
fldl
push
call
ret
push
pop
cmp
and
cmpsl
sbb
std
fisttps
aaa
adc
push
cmp
sbb
add
cs
filds
inc
xchg
inc
push
dec
push
mov
dec
or
mov
xlat
lock
jbe
push
cmp
mov
jecxz
aaa
sbb
mov
push
mov
adc
xor
cmp
inc
dec
sarb
pop
xor
sarl
pop
jl
dec
je
or
inc
aas
sbb
loopne
mov
pusha
and
pop
movsl
sbb
inc
lret
cmp
aad
push
popa
ljmp
call
je
push
dec
sbb
es
sub
mov
sub
or
setns
js
mov
push
adc
mov
inc
xor
dec
and
call
pop
jecxz
push
fs
pop
mov
cli
std
leave
add
pop
ss
push
push
aad
pop
dec
sbb
mov
je
call
dec
adc
outsb
push
or
and
jl
test
in
sub
xor
push
sahf
push
scas
add
and
loopne
pushf
adc
jmp
enter
pop
or
and
loop
inc
adc
push
cwtl
int
nop
inc
add
mov
scas
jmp
adc
jne
jnp
pop
sub
adc
adc
xchg
fld1
in
sbb
adc
push
sub
mov
push
and
mov
aam
aad
jne
sub
ja
mov
push
loopne
cmp
popf
sbb
into
sub
sbb
fwait
add
xchg
push
push
adc
jae
sub
imul
fcomps
jne
jmp
arpl
dec
jmp
cmp
sbb
pop
movsl
imul
mov
test
pop
dec
or
xchg
push
xchg
inc
inc
in
adc
xchg
fldenv
out
call
jo
jp
or
call
and
loop
push
pop
inc
push
or
call
cmp
pusha
and
not
cmp
sbb
je
sbb
sarb
fisubrs
mov
sub
call
pop
lcall
adc
dec
loope
adc
or
xor
aas
cmp
adc
int
jno
jo
scas
gs
inc
push
cmp
and
inc
mov
ds
in
sbb
nop
inc
pop
push
lahf
push
out
popa
addb
xor
adc
push
call
jo
add
adc
loop
add
jg
addl
xor
pop
ds
adcb
inc
sbb
lds
aas
shll
movl
mov
add
or
sbb
cmp
add
test
ds
pop
xor
ret
push
out
js
xor
cs
xor
sbb
ljmp
add
roll
cmp
dec
sbbl
mov
pushf
add
scas
lods
in
cmp
sub
adc
mov
call
mov
push
push
mov
xor
cmp
je
test
mov
faddp
xor
and
jbe
jne,pt
pop
mov
ficompl
aad
dec
sbb
imul
adc
or
cld
enter
sbb
int3
cs
imul
or
mov
fdivs
sub
out
xor
pusha
aaa
lret
call
mov
lret
insb
jne
xor
dec
or
mov
pop
mov
push
add
mov
and
jne
dec
add
inc
mov
push
push
or
fsubs
push
mov
dec
mov
or
and
push
push
shrb
outsl
adc
outsl
push
outsl
push
ret
fmuls
outsl
sbb
sbbl
jns
add
dec
repnz
add
rcrl
stos
push
mov
mov
push
jg
test
adc
sarl
or
adc
decb
inc
adc
rorb
pop
inc
dec
into
dec
or
mov
popf
xorl
enter
fldl
fdivr
inc
or
shl
ret
add
ds
jne
xchg
pusha
jmp
out
call
jne
cld
pop
adc
aam
cmp
inc
push
push
inc
test
mov
lock
mov
repnz
xchg
outsb
sbb
les
or
sub
push
inc
call
add
clc
sbb
dec
mov
nop
hlt
jl
aaa
push
fmuls
inc
inc
adc
push
jne
jnp
dec
insb
inc
dec
dec
and
aad
pop
in
lcall
or
mov
mov
xor
leave
je
add
add
inc
xor
pop
std
push
int3
or
test
pop
pop
lea
cmpsb
dec
jg
and
nop
inc
jg
cmp
push
mov
pop
imul
and
or
dec
subb
sbb
push
loope
int3
cwtl
les
out
pusha
xor
push
sub
mov
sub
les
and
jg
pusha
ret
jg
and
adc
jg
dec
jg
rol
lock
cwtl
sbb
jg
cwtl
cmp
xor
rol
adc
jg
add
jg
inc
pusha
ret
jg
dec
fs
lahf
jg
add
out
fidivrl
adc
inc
mov
mov
outsb
add
sub
les
pusha
ret
jg
and
sub
dec
sbb
pop
jg
pusha
mov
mov
daa
jg
fmull
dec
jg
repz
add
push
orl
mov
jmp
xchg
cmp
xor
shrl
cmp
mov
aaa
xor
jle
push
data16
aaa
cmp
ja
call
jl
aad
loop
out
push
mov
aas
int
outsb
cmpb
es
xchg
aaa
mov
xor
test
ss
xchg
mov
sub
insb
loope
data16
test
add
mov
xor
adc
lcall
bound
sbb
mov
les
xor
and
xor
dec
mov
aad
mov
dec
fmul
mov
adc
fisttpll
nop
es
test
mov
xor
mov
jle
jg
aas
or
cwtl
ficoms
mov
jb
je
xchg
cli
xor
cmp
add
dec
cmc
xor
xor
adc
mov
mov
into
in
cmp
pop
pushl
pop
inc
adc
pop
das
xor
arpl
lahf
and
ret
add
outsl
mov
lret
js
push
icebp
enter
and
xorl
mov
xlat
movsb
push
loopne
xor
ret
cmp
or
push
add
add
loopne
xchg
mov
push
je
sbbl
mov
add
push
dec
ds
pop
push
popa
test
lahf
dec
mov
incl
mov
add
loopne
test
cld
cwtl
mov
cld
call
adc
mov
cli
and
pusha
sbb
loopne
rorb
ljmp
jns
test
rcl
add
or
cmp
outsb
xor
mov
push
lods
jne
mov
ss
lcall
xor
adc
fidivrs
outsb
aad
nop
je,pt
lea
and
xor
and
push
and
fdivs
push
out
shr
push
push
jns
xor
ret
ds
and
popf
lcall
push
xchg
in
or
test
inc
out
pop
cs
jo
addb
xchg
ds
push
push
lods
adc
dec
nop
popa
data16
bound
inc
js
inc
cltd
das
cmp
rclb
add
adc
scas
pop
out
inc
rorl
hlt
neg
add
xchg
cli
sbb
enter
fmulp
xlat
out
mov
or
aam
call
jbe
addl
lock
cmpsl
or
mov
adc
stos
rcl
nop
subb
adc
push
lea
scas
mov
and
xchg
call
test
ss
push
push
add
dec
pushw
gs
daa
lret
scas
jecxz
imul
adc
mov
les
xorb
or
adc
adc
bound
xorl
push
or
subb
je
xor
shlb
lods
xchg
test
addr16
stos
sbb
push
ret
push
faddp
mov
and
inc
push
lock
call
push
sub
push
push
xor
in
fs
test
adc
xchg
mov
dec
mov
adc
jo
test
push
mov
and
setne
js
sbb
sarb
sub
sti
push
ja
mov
insl
mov
or
mov
lahf
or
mov
pop
mov
pushf
sbb
push
rclb
sbb
mov
add
std
sub
lret
sbb
cmp
or
lock
dec
shrb
cmp
outsb
dec
clc
bound
call
push
push
mov
mov
push
loopne
fs
out
sub
or
test
icebp
push
xchg
jmp
out
negl
add
xor
fsubrs
call
and
jge
add
scas
dec
ret
mov
mov
lea
cmp
sahf
jmp
idiv
into
js
jmp
inc
xchg
jp
call
andl
es
push
movsb
in
pusha
inc
cmp
mov
cmp
pop
outsl
adc
lds
add
data16
push
cmp
push
xor
bound
popa
xor
sub
aas
inc
orl
insb
ss
jns
ret
js
mov
or
adc
mov
xchg
aam
mov
and
repnz
push
dec
and
pop
and
xchg
les
inc
and
cmp
pop
fstpt
cmpl
pop
push
jp
dec
and
pop
dec
data16
xchg
cld
xor
jno
xchg
inc
sbb
inc
adc
scas
sub
push
pop
ret
sub
add
pop
sub
ja
xchg
pop
xchg
pop
and
inc
pop
lea
push
pop
xchg
add
repnz
mov
and
add
inc
lea
ret
sbb
add
push
inc
adc
mov
and
and
imul
inc
pop
ret
pop
mov
mov
xchg
pop
xor
and
or
xor
mov
dec
sbb
mov
and
sub
xor
outsb
or
pop
xor
pop
cmp
int3
rcrl
clc
mov
adc
loopne
bound
mov
sbb
and
loopne
xchg
pop
pop
sbb
jno
loopne
repnz
je
and
push
cltd
xchg
orl
or
cmp
dec
mov
jb
add
or
and
aaa
xchg
pop
mov
pusha
pop
pusha
ffreep
fwait
bound
push
xchg
pop
push
scas
xchg
les
and
bound
dec
mov
add
mov
sub
fdivl
xchg
mov
cmp
cli
fs
stos
pusha
and
xor
adc
lea
and
lods
xchg
mov
sbb
mov
inc
ret
out
sti
mov
jo
out
sub
repnz
mov
and
dec
mov
cld
pop
stc
jo
xchg
les
stos
and
arpl
fisubl
dec
or
inc
pop
dec
sub
inc
pop
or
ja
sbb
sbb
jle
add
mov
sub
mov
pop
xor
jo
repnz
pop
bound
pop
mov
pop
xor
sbb
add
dec
mov
mov
leave
sbb
xlat
test
add
cmp
out
push
add
dec
pop
and
adc
mov
stos
pop
pop
cmp
rcll
pop
or
pop
sbb
adc
push
ret
lods
add
mov
call
and
lds
adc
test
dec
loop
lods
sub
push
adc
xchg
push
push
movsb
pop
rcrb
inc
fwait
loope
rorb
sub
xor
je
or
je
push
mov
or
or
mov
adc
call
xor
push
in
mov
push
xchg
jl
jne
add
jns
inc
gs
jl
icebp
pop
pop
jecxz
rcrl
sub
je
pushf
cmp
push
dec
cmc
adc
pop
stc
and
pop
sahf
outsl
or
mov
dec
xchg
fistl
dec
cmp
jb
mov
push
scas
icebp
mov
sbb
add
adc
pop
pop
fs
clc
jg
loope
in
add
inc
cmp
mov
adc
cmp
adc
ficoml
movsl
fldl
mov
inc
adc
aam
aad
add
push
push
sbb
mov
rol
arpl
pop
sub
and
test
push
xchg
xor
mov
pop
sub
push
test
push
stos
jbe
and
pop
jl
sub
out
ret
fs
scas
out
orb
mov
and
or
arpl
sbb
movsl
adc
sbb
mov
mov
xor
clc
daa
test
ja
sbb
or
lods
adc
jo
adc
ficompl
pop
addb
xlat
sbb
popa
mov
cmovo
cmp
add
sbb
sbb
aam
pusha
jbe
and
sbb
sub
cmp
lods
jbe
dec
add
jmp
sbb
lea
ds
cmp
xchg
mov
cs
adc
loopne
loope
or
mov
pushf
sub
jecxz
in
jno
cmp
mov
add
dec
pushf
inc
pop
dec
push
pop
test
pop
sbb
cmp
xor
fists
inc
js
push
push
xlat
mov
idivl
mov
ss
inc
or
or
push
sub
loopew
add
call
out
push
push
test
adc
clc
adc
or
jmp
sub
cmpb
rcll
or
out
dec
sbb
jmp
inc
cld
or
and
loopne
shlb
push
xor
aad
cmp
imul
pop
scas
xlat
jmp
fdivrl
je
jecxz
push
xchg
inc
pop
fsubl
pop
pop
ljmp
jno
pop
fstps
xor
mov
xor
loope
pusha
mov
jnp
or
jl
mov
dec
dec
popa
adc
pusha
arpl
mov
cmp
jge
and
insb
push
orl
or
sub
mov
sub
jne
outsb
iret
mov
add
push
adc
lds
and
or
les
fstpl
scas
and
outsl
jle
adc
loope
fcomps
dec
into
push
clc
imul
and
fsubs
dec
movsl
sbb
aam
sub
mov
lahf
add
ljmp
xor
jge
jo
jg
sbbb
mov
les
mov
dec
ret
nop
xor
cmp
ja
push
idivl
subb
in
add
xor
rcrl
adc
addb
cli
sbb
push
and
adc
sbb
push
sbb
push
sbb
or
dec
or
fs
in
or
lods
test
test
pusha
loopne
daa
lea
add
std
rcrl
sub
xchg
daa
xor
ja
push
movsb
inc
or
scas
mov
enter
js
les
pop
sbb
xchg
jmp
cmp
jne
orl
sbb
fcoms
mov
roll
insb
and
popa
ret
clc
inc
push
xchg
fists
jnp
lcall
xor
pop
pushf
xor
bswap
mov
aad
cmp
lock
xchg
aam
fmuls
adc
sbb
xor
mov
mov
jle
xor
icebp
jecxz
mov
xor
push
and
cmp
push
je
cmc
mov
or
outsb
mov
call
sahf
xchg
loop
js
sti
adc
lods
and
ret
insb
add
lock
pop
aad
pop
hlt
bound
mov
xchg
xchg
aas
adc
or
or
sti
or
mov
cmp
pop
arpl
test
outsl
sbb
call
mov
shll
cli
loopne
or
std
daa
in
mov
popa
imul
mov
pop
or
dec
lea
fucomip
fistps
rorl
mov
mov
xor
jae
mov
mov
push
lcall
out
testb
fmul
pop
or
adc
subb
add
jg
pop
dec
ficompl
orb
nop
iret
mov
aaa
iret
sbb
test
mov
test
or
or
pop
pop
and
rcrl
adc
lds
inc
add
push
movsl
sub
dec
sbb
cmp
movsb
addb
loopne
or
es
mov
mov
xor
arpl
mov
flds
pop
cs
jbe
or
repz
dec
imul
add
and
mov
mov
xor
test
fdivr
xlat
add
jg
push
mov
aaa
mov
or
pop
add
jno
xchg
daa
jecxz
sub
fs
lcall
pop
lcall
sub
push
dec
xchg
jo
mov
into
push
adc
push
and
push
clc
inc
sub
sbb
repz
inc
or
sub
push
xor
sub
cmp
sar
fiadds
sbb
push
inc
pop
loopne
push
jmp
xor
out
mov
sub
sarl
scas
mov
hlt
push
je
testl
or
jns
jecxz
daa
loopne
and
pop
xlat
mov
out
fidivs
inc
call
add
ficompl
lcall
jmp
sti
and
add
push
jecxz
xor
jge
call
sub
loop
or
jge
into
adc
in
sbb
jle
addr16
lcall
xor
cmp
mov
or
call
or
arpl
pop
je
push
shr
and
shlb
push
and
imul
in
push
and
or
into
adc
add
push
cmp
sbb
loopne
daa
out
cmp
scas
adc
mov
add
add
add
jae
jno
push
adc
inc
jge
bound
jg
cmp
test
jg
inc
add
test
jbe
aam
pop
pop
out
sbb
xor
cltd
sbb
dec
or
test
mov
xchg
aas
jb
xchg
test
xchg
push
add
xchg
and
mov
mov
mov
push
out
outsb
enter
jmp
cs
adc
pop
pop
and
movb
inc
inc
arpl
movsl
pop
dec
cmp
sbb
jge
or
je
push
cltd
repnz
sbb
cmp
jge
or
sbb
pop
jmp
mov
adcb
cmp
inc
mov
shll
int
and
test
and
add
shl
mov
lcall
fimuls
movsb
adc
sbb
ss
mov
or
mov
scas
adc
out
xchg
lret
testl
adc
inc
jo
and
mov
mov
pop
fsubs
call
call
aam
out
inc
nop
add
adc
sbb
xchg
jmp
ljmp
add
fs
pop
mov
pop
test
or
sbb
or
push
push
jno
dec
mov
jecxz
adc
or
fs
and
mov
add
push
push
adc
push
push
sbb
scas
push
pusha
or
mov
fiadds
sahf
ret
add
inc
pop
mov
add
mov
dec
jle
sbb
add
call
xchg
js
pusha
add
inc
call
sbb
push
fwait
adc
imul
outsl
mov
mov
xor
jnp
mov
cli
adc
jmp
jbe
mov
or
pop
call
js
sbb
call
call
inc
jo
or
jle
std
or
push
int
push
sbb
cmp
rcrb
sub
inc
sbb
pop
call
enter
inc
xor
mov
repnz
call
outsb
test
fnstcw
adc
call
shll
sub
divl
call
leave
std
enter
call
insb
jl
enter
pop
je
sets
adc
les
push
push
je
xor
movsb
ret
insb
mov
push
mov
jo
push
mov
or
mov
loope
xchg
std
push
leave
out
sbb
flds
dec
loope
inc
jecxz
sbb
and
and
mov
and
mov
cmp
xchg
dec
pop
loope
arpl
out
adc
aaa
adc
dec
mov
mov
arpl
adc
jg
cmpsb
jl
inc
ret
add
mov
fistl
fistl
and
fsubrl
jbe
jle
loope
in
mov
xchg
and
and
sub
add
inc
push
pop
or
or
mov
js
incl
aas
pop
jns
fwait
insl
fsubrs
clc
or
and
int3
lcall
adc
lds
fsubr
pop
daa
pop
shl
jl
mov
adc
rcrl
dec
mov
je
pop
sub
lds
test
sub
out
inc
call
push
dec
xchg
mov
mov
stos
shrl
push
xchg
cmp
ja,pn
in
and
adc
and
dec
mov
jns
mov
inc
and
pop
aas
mov
cmp
pop
stc
inc
jge
mov
int
shll
sbb
pop
dec
imul
add
shll
aas
orl
push
pop
incl
mov
adcl
xorl
dec
mov
pop
or
or
xchg
insw
mov
or
inc
and
xor
xchg
and
es
lods
jmp
cmp
js
cmpsb
fwait
push
add
or
jns
ret
jnp
sbbb
adc
ret
cmp
jno
cmpsb
js
mov
dec
jmp
push
and
push
inc
jb
das
imul
adc
and
shlb
sbb
mov
fisttpll
sbb
lret
xchg
mov
pop
sbb
or
das
stc
psubsb
rcrb
fwait
aas
in
push
call
outsb
cmp
insb
inc
jo
inc
fimull
mov
mov
int
or
jp
imul
xchg
and
lret
fildll
movsl
or
inc
mov
movsl
add
inc
push
popa
or
subl
inc
arpl
mov
scas
pop
enter
ret
pop
std
xorl
aam
add
mov
xor
and
mov
call
mov
sarl
rclb
or
incb
push
sbbl
xchg
mov
rol
fs
es
or
xchg
rcrl
mov
mov
enter
push
push
jne
movsl
loopne
fsubr
add
mov
or
into
jle
jno
mov
ret
push
call
xor
add
testl
pusha
ljmp
fiaddl
xchg
notl
push
push
push
inc
jmp
fisttpl
mov
inc
inc
dec
dec
ret
mov
pop
bt
mov
hlt
lock
sti
call
cltd
add
test
sti
hlt
mov
jb
push
or
cmp
push
xor
xchg
jo
cs
addb
das
sbb
mov
add
push
into
push
je
dec
cmp
call
jne
xorl
shl
mov
xor
xchg
inc
sub
push
dec
loope
pop
add
xor
or
xchg
push
or
scas
rcll
push
mov
fstps
and
push
repz
mov
nop
je
sbb
cmpl
adc
loopne
jb
in
jne
sbb
adc
movsb
cmp
sub
rorl
xchg
pop
sbb
jmp
and
and
or
lock
sbb
or
push
jmp
mov
dec
add
add
jno
pop
sbb
push
or
push
xchg
adc
push
add
lret
sbb
dec
mov
pop
dec
shl
shrb
ret
add
and
mov
or
xchg
mov
into
mov
jo
xchg
sub
push
push
cmpb
clc
jne
push
sahf
dec
mov
xlat
pushf
es
xchg
mov
and
repz
inc
insb
push
fcoml
loopne
into
imul
sbb
pop
cmp
add
cmpsl
imul
push
sbb
sbb
pop
sahf
not
xor
mov
inc
push
inc
dec
hlt
inc
test
stos
int3
sti
dec
lret
mov
sbb
push
push
inc
or
mov
ss
xchg
sbb
pop
int
sub
or
add
and
cli
popa
enter
or
lret
test
sbb
call
movb
push
inc
add
xchg
in
cli
jg
add
data16
adc
pop
call
dec
sbb
jmp
push
xlat
jp
outsl
sub
clc
dec
loop
push
push
cwtl
mov
xor
xchg
addr16
mov
push
out
xchg
inc
sub
sub
sub
mov
inc
mov
or
pop
in
lahf
pop
mov
push
or
aaa
pop
add
sub
test
mov
pop
jbe
leave
je
mov
jmp
sbbb
jo
xor
mov
pusha
xor
inc
sbb
mov
lret
pop
push
imul
js
pushf
sbb
xchg
lock
push
or
jne
mov
dec
iret
jo
or
iret
jge
sahf
mov
inc
sbb
cmp
es
addr16
dec
movsb
jmp
jle
movsl
add
and
cmp
pop
push
or
orb
fadd
xchg
fimuls
mov
stc
sbb
jl
adc
sbb
and
mov
in
or
dec
and
jne
jmp
pop
mov
ss
and
dec
out
hlt
cmp
xlat
sub
add
cs
sbb
shll
push
rcrb
sahf
test
or
or
ret
push
popf
nop
xor
sahf
outsb
and
call
mov
nop
push
add
mov
notl
xor
call
cwtl
lock
incb
add
adc
aad
add
add
test
aas
push
jne
sbbl
sub
sbb
cmp
mov
push
pusha
imul
adc
and
sub
rcrb
call
adc
ljmp
aad
call
lock
loope
je
inc
lret
xor
mov
pop
sub
outsl
mov
cwtl
dec
cs
ret
xor
push
imul
mov
jb
movsb
mov
pop
cs
nop
mov
test
jb
pop
jo
push
lret
pusha
pop
pop
push
push
lret
in
mov
mov
cmp
sub
lret
in
sub
sbb
jb
pop
cs
or
xchg
lret
add
cld
cmp
cs
call
in
ror
in
mov
mov
mov
in
test
addb
nop
cwtl
pushf
lret
in
mov
mov
mov
mov
jb
enter
jb
pop
cs
loopne
cs
lret
in
in
lock
clc
xor
pop
cld
add
mov
lret
in
pop
or
or
adc
jb
pop
cs
and
cs
lret
in
xor
cmp
jb
pop
inc
inc
dec
dec
pop
cs
lret
push
push
pop
pop
pusha
lret
in
mov
mov
js
test
mov
cld
pop
mov
push
je
inc
adc
inc
pop
sbb
mov
mov
inc
adc
add
out
adc
pusha
int3
add
and
ja
mov
rolb
push
lcall
xchg
les
filds
addb
push
enter
sbb
in
arpl
push
ss
orl
add
and
mov
inc
int3
mov
fadds
pop
bound
push
cmp
test
sub
popf
call
jl
and
and
call
jge
mov
test
xor
push
jmp
add
dec
fsubs
dec
adc
mov
xor
arpl
arpl
mov
sub
inc
xor
fbld
or
cmp
les
test
ret
push
ss
ds
loop
int3
jge
mov
dec
mov
js
cli
sbb
jge
xor
mov
scas
ret
nop
cmpsb
stos
cmc
stc
mov
test
dec
xor
popa
adc
jo
lcall
xor
cwtl
jge
lcall
aaa
lcall
dec
xchg
xchg
sbb
ljmp
dec
mov
cmp
or
scas
ror
adc
cmp
mov
sub
mov
mov
faddp
pop
jmp
jmp
nop
fistl
mov
in
push
stc
lcall
mov
pop
ds
loopne
sahf
fucomp
clc
jmp
mov
jmp
enter
fdivrs
jle
ds
jmp
paddq
mov
lods
jmp
call
xchg
das
push
mov
js
scas
aas
jge
stc
repnz
nop
loopne
pusha
int3
pop
das
enter
sahf
dec
das
outsb
dec
das
cwtl
pop
pusha
das
sti
repnz
jnp
clc
pop
sub
movsb
jmp
pop
cmp
cmp
mov
add
outsl
clc
negl
push
xor
and
mov
dec
in
xchg
mov
shlb
mov
mov
jg
mov
add
notl
mov
rclb
test
ds
negl
dec
testl
gs
and
jg
sahf
filds
pop
gs
push
in
or
dec
or
negb
call
mov
pop
loope
fstl
outsl
mov
nop
in
sbb
aas
sbb
js
cmp
jo
pop
shlb
sbb
mov
sbb
dec
incl
hlt
scas
outsb
sbb
adc
fcmovnu
mov
mov
fmul
cmp
cmc
pushf
push
pop
xchg
dec
ja
aaa
mov
inc
aas
sahf
shl
out
test
or
adc
femms
cwtl
push
aas
ret
dec
in
sub
xchg
xchg
clc
lahf
loop
rclb
pusha
and
lds
loopne
cmc
jg
insb
ret
clc
pop
fcmovnb
rcl
or
cmp
mov
stc
hlt
psllw
out
popl
pop
loop
or
clc
shl
lahf
enter
ficompl
mov
sbb
cmp
mov
push
pushf
fists
xor
out
inc
sub
js
lock
pusha
xor
into
inc
iret
xor
pusha
inc
aas
push
scas
sahf
and
adc
nop
push
das
pop
ljmp
js
aas
fsubrl
sbb
lods
stc
negb
xor
pusha
xor
negb
and
sub
fists
xchg
movsl
or
jb
lea
ds
les
pop
repnz
mov
sbb
and
outsl
loope
jno
xor
sub
cmpl
arpl
push
sub
cmp
and
push
outsb
adc
aas
mov
sahf
insl
add
insb
xor
jo
out
pop
repnz
push
loopne
fistpll
mov
pop
adc
mov
movsb
mov
jg
jl
mov
psubusb
lds
push
jg
pop
ror
push
loope
jae
dec
repnz
repz
cmp
xchg
fisttpl
pushf
jae
repnz
sub
loopne
pop
mov
or
add
push
js
aas
cmp
cltd
jge
icebp
mov
mov
add
xor
das
jg
lret
jmp
mov
testb
movsl
mov
adc
sti
jnp
rcrb
xor
hlt
cmp
jb
sub
rolb
je
stos
push
inc
test
jae
shlb
mov
test
and
pop
mov
dec
mov
div
inc
push
cs
out
jmp
enter
push
cmp
ror
or
fiaddl
shll
jmp
xchg
imul
cmp
out
fsub
dec
sti
cltd
out
ret
fiaddl
insb
pop
cmp
repz
inc
sbb
clc
fstps
push
out
cmp
sarl
adc
xor
iret
mov
push
and
mov
sbb
andb
push
sahf
out
insl
adc
sbb
jecxz
inc
push
adc
fldcw
out
xchg
cli
or
adc
push
adc
ds
dec
jl
stc
lcall
push
mov
movsl
or
mov
jle
push
test
or
repz
mov
lcall
shlb
data16
sahf
negl
xchg
xchg
cmc
data16
push
movsb
pop
jnp
sbb
push
aaa
idivb
push
push
sub
fidivrs
shl
add
pop
not
ret
pop
mov
or
movsl
fidivrs
mov
lea
jbe
ss
push
adc
fdivp
pop
dec
or
add
mov
fidivrs
int
or
ds
pop
repz
loopne
fcomi
ss
sahf
nop
add
xor
jnp
jnp
jbe
bound
push
sahf
in
push
inc
icebp
dec
js
cmp
les
mov
ret
jnp
cmp
insb
outsb
and
mov
jle
push
mov
push
les
arpl
dec
jnp
mov
push
sbb
pop
push
cli
scas
out
push
sbb
push
dec
push
cmp
ss
jle
out
jns
loopne
int3
xchg
ss
pop
mov
fidivrs
js
pop
movsw
out
push
sbb
loope
xor
and
and
push
pushw
dec
jnp
loope
push
push
fdivp
pop
push
icebp
cmpsb
testl
mulb
cs
push
jno
mov
push
dec
push
cmpsb
cs
adcb
fninit
fidivrs
fidivs
scas
sbb
cmp
cmpsl
push
out
sahf
data16
xor
lcall
dec
fbld
jnp
mov
cld
add
flds
and
lcall
loop
cmp
sahf
out
ficoms
pop
push
sahf
out
xchg
stos
mov
mov
mov
adc
out
out
add
fbstp
lds
ja
fldl
jns
or
faddl
push
pusha
iret
jnp
repz
push
nop
push
cmpsb
inc
repz
cmp
or
ss
mov
iret
repz
mov
repz
dec
jp
inc
stos
cwtl
inc
int3
repz
test
xor
or
add
xor
mov
sbb
jo
add
mov
test
addb
jnp
jle
push
enter
jo
cmp
sbb
mov
in
in
mov
das
inc
sbb
pushf
cs
fs
cwtl
aas
push
mov
push
mov
pusha
addb
jl
adc
movsb
pop
sbb
xor
sbbb
imul
push
cli
hlt
out
jns
out
call
repz
ror
push
les
mov
data16
sub
dec
jnp
es
xor
fistps
pop
xor
ss
jns
js
mov
je
jb
icebp
and
cmp
jle
xor
mov
pusha
out
xchg
mov
insl
jne
imul
leave
bound
imul
add
subl
ja
jge
popa
arpl
gs
add
insb
outsl
subb
jg
imul
imul
popa
outsl
jb
jne
or
push
push
outsb
fs
inc
int
jle
jg
jo
push
inc
mov
lcall
xchg
in
and
xor
jne
shrl
mov
ja
cs
mov
push
outsb
outsl
dec
cmp
push
cmc
jo
push
jp
je
shl
inc
sbb
jno
data16
gs
push
lock
bound
fidivrs
popa
jne
mov
cmc
pop
rcrl
jg
addb
jge
jb
addb
sti
ljmp
fiaddl
push
insb
imul
or
mov
mov
jns
loop
mov
xchg
mov
jle
fimuls
mov
sbb
adc
jle
inc
sbb
jle
pusha
addl
and
ficompl
loopne
outsl
je
jmp
ja
add
test
jle
jne
imul
out
ja
insb
testb
mov
pushl
add
jae
jge
pop
int3
and
ja
add
insl
testl
punpckhdq
in
insl
popa
jo
inc
sub
mull
testb
add
xor
outsl
push
clc
jle
xor
jg
inc
xchg
cltd
pop
cld
andl
sbb
popa
cmc
or
test
insl
shlb
add
scas
pop
pusha
inc
jg
jne
std
shll
repnz
enter
imul
push
je
jne
addr16
adc
sub
pushf
pop
sub
or
push
pop
les
addl
mov
sti
pop
inc
subl
popa
jp
push
fdivl
je
pop
movsb
test
jle
inc
inc
jo
out
mov
jg
sti
jle
gs
subb
push
xor
pop
je
fs
imul
jg
je
das
mov
sbb
incb
or
outsl
mov
pop
roll
orl
orl
adc
clc
adc
data16
mov
jg
arpl
mov
jge
jne
adc
std
jg
jae
in
dec
push
stc
jg
imul
sub
jle
cmpl
jl
jo
or
data16
arpl
sub
cmp
incl
xorb
je
push
jle
jne
and
add
addb
xchg
imul
ret
jg
outsb
stc
sub
mov
jo
sub
xchg
insb
insb
jmp
push
arpl
ja
inc
or
add
fwait
ret
push
xor
addr16
arpl
xor
std
add
push
rcrl
and
add
cld
je
mull
jle
sub
inc
pop
jg
std
jle
add
sub
jg
or
arpl
inc
mov
popa
insl
jmp
orb
cmpl
outsl
insl
add
inc
insl
add
xchg
mov
outsl
fadds
adc
jg
add
push
shl
mov
add
jl
les
add
jo
std
jle
rclb
cmc
add
je
push
je
sti
jle
mov
fs
mov
add
shll
push
mov
pushl
imul
xor
bound
push
mov
lods
stc
mov
adcb
push
std
pushl
push
or
repz
and
xor
jae
cmp
jo
mov
stc
jne
rorl
mov
sbb
inc
adc
imul
adc
jg
idivl
xor
adc
mov
outsb
xchg
xor
pop
jle
add
jns
jo
aaa
sbb
ja
mov
mov
cmp
mov
jg
sarl
push
shl
lret
and
lds
mov
lahf
and
add
lods
mov
mov
push
mov
sub
adc
mov
in
mov
in
sbb
fdivrs
div
inc
sti
mov
imul
mov
addr16
sarl
mov
mov
repnz
mov
shll
jmp
or
mov
outsl
adc
aas
inc
repnz
test
mov
repnz
sbb
int3
shr
fnstsw
test
clc
add
push
or
enter
xchg
and
jg
inc
in
inc
mov
cli
shrb
mov
sti
push
aam
test
je
jg
fprem
adc
sub
mov
add
jle
jg
orl
pushl
int
in
push
adc
mov
roll
mov
cli
jle
xorl
mov
mov
push
mov
jg
mov
mov
jnp
sarl
mov
mov
jnp
ror
cld
jg
stc
pusha
push
mov
adc
push
or
jg
mov
cld
scas
mov
add
js
les
je
arpl
in
mov
loop
rcl
adc
sbb
shll
pop
mov
mov
ret
mov
mov
mov
pop
mov
jg
test
add
mov
push
adc
mov
and
lock
shll
dec
ds
sarl
mov
add
jmp
leave
stos
mov
mov
and
scas
incb
push
movsl
mov
mov
je
movsl
jb
repz
and
or
mov
ror
les
jp
leave
add
jp
mov
jl
enter
pop
mov
mov
push
notl
mov
mov
mov
rolb
mov
dec
jo
jg
cs
push
pushl
int3
mov
sub
jb
pop
push
mov
mov
rorl
cmp
jmp
mov
add
lds
mov
jg
push
aam
mov
into
out
dec
xchg
ffreep
cli
jle
mov
fadds
les
clc
mov
mov
les
and
inc
inc
push
dec
push
mov
dec
inc
mov
fidivl
or
push
cmpb
inc
dec
jp
mov
rcl
inc
push
jg
mov
mov
test
fidivs
sti
out
mov
call
inc
test
loope
test
mov
in
inc
xor
jp
mov
mov
jo
adc
dec
inc
inc
stc
push
xor
dec
jb
fnstsw
lods
add
mov
jg
inc
or
add
jg
pop
shrb
fdivl
mov
push
adc
sarb
mul
inc
sti
lds
mov
sar
lods
call
in
decl
sbbl
dec
jg
mov
push
adc
es
jg
adc
mov
ret
scas
push
inc
cmpl
mov
xchg
rcr
in
ret
ret
mov
mov
mov
mov
loop
adc
enter
inc
repnz
mov
ds
cmp
sarb
aam
fisubs
lds
add
dec
aas
push
shll
inc
pop
cmp
inc
enter
sahf
out
scas
ds
push
mov
stos
movsb
jns
out
sahf
cwtl
xchg
mov
cmpb
push
bound
dec
xorb
rorb
adc
inc
jp
cmp
pop
dec
inc
dec
inc
or
push
inc
das
push
leave
faddp
mov
lock
inc
add
pop
into
pop
movsb
jge
and
cs
or
addb
or
movsl
push
repnz
pop
add
jle
pushf
insb
ja
jns
mov
xchg
mov
add
pusha
ja
jp
dec
mov
pusha
jno
cmp
pop
cmpsb
gs
aas
pop
pushf
shlb
mov
loopne
inc
jb
dec
aas
lock
xchg
jle
repz
repz
mov
repz
push
pop
pop
push
dec
jae
xor
nop
push
inc
pop
push
iret
repz
cmp
sub
sbb
shl
cmp
adc
testl
push
add
push
clc
push
fmul
jle
inc
iret
pusha
insl
arpl
frstor
icebp
push
pop
adc
pop
cld
xchg
adc
lods
dec
add
xor
aas
fildll
xchg
mov
mov
into
xor
pop
and
shrb
push
insb
mov
pop
or
test
add
fsubrs
ja
daa
mov
cs
pop
push
daa
aas
pop
leave
cmp
xor
imul
or
in
add
shl
fcmovu
xchg
fsubrs
leave
adc
sub
fimull
sbb
push
pop
push
xchg
xchg
sub
out
in
cmp
push
out
cmp
js
add
add
push
add
cmp
repz
mov
repz
mov
mov
lods
add
enter
push
fdiv
outsb
mov
pavgb
call
out
ds
clc
adc
imul
daa
inc
xchg
imul
je
cmp
xor
cmp
scas
pop
mov
cwtl
pop
push
scas
shrb
out
scas
lock
mov
inc
scas
popf
dec
enter
imul
mov
pop
addr16
xchg
insb
fildll
insb
popf
pop
mov
iret
mov
push
mov
daa
loopne
test
popf
fistl
jg
int
mov
add
jg
mov
add
pop
mov
pop
jg
icebp
ret
inc
fldenv
iret
push
mov
fnstsw
mov
adc
insl
jg
clc
push
cmp
mov
pop
daa
insl
iret
dec
add
enter
pusha
insl
push
mov
vmread
dec
pop
leave
leave
leave
enter
pmulhuw
mov
jg
lock
lock
pop
nopl
rolb
mov
dec
outsb
push
adc
adc
adc
outsl
popf
pushf
fcoml
js
mov
mov
out
add
lahf
sub
ficoml
or
sbb
jns
xor
clc
add
movups
adc
shlb
outsl
dec
push
fwait
mov
pop
pop
nop
jmp
sbbb
push
scas
jg
push
in
popa
xchg
push
enter
jecxz
sarb
clc
and
add
xor
xor
out
jb
push
jo
outsl
pusha
data16
add
jg
jg
cmp
sub
mov
test
mov
push
jae
cmp
add
add
ror
repz
push
fadds
loopne
call
or
or
add
xor
xchg
jno
jno
adc
shl
ss
and
and
push
add
repz
xor
cmp
inc
add
iret
repz
add
leave
leave
repz
arpl
mov
jno
test
aas
xchg
add
mov
inc
sahf
jno
enter
daa
push
mov
xadd
dec
adc
shrl
sahf
pushf
testb
iret
or
scas
daa
js
cmp
jb
das
sub
imul
movl
mov
pop
sub
daa
jo
jbe
scas
out
fdiv
sub
orb
adcl
dec
pop
xchg
jne
scas
sbb
cld
pop
xchg
mov
dec
fs
dec
in
js
mov
fcomps
shll
les
test
dec
into
sub
js
daa
cmp
dec
fbstp
ja
es
addl
and
hlt
jg
dec
inc
inc
xor
cs
dec
dec
add
pop
pop
inc
js
fbld
and
cld
insb
gs
xchg
in
filds
arpl
push
add
popa
insb
outsb
jne
dec
add
fimull
pop
insl
enter
pop
pop
adc
mov
jo
je
cs
inc
pop
add
push
xchg
jle
inc
int
mov
shrb
push
push
pop
jne
ja
sub
and
mov
cmp
fs
outsb
push
xchg
add
inc
pop
adc
push
inc
push
push
adc
aas
lock
mov
aas
xor
pop
pop
subb
rol
push
dec
push
pop
arpl
mov
orb
add
out
es
subb
addr16
cmp
mov
jae
nop
inc
mov
mov
ss
jae
add
mov
nop
or
popf
fs
jb
mov
imul
mov
outsl
xorl
es
in
xchg
mov
outsb
je
outsl
insb
bound
add
mov
inc
gs
sbb
movl
insb
cltd
shr
jl
sub
or
enter
data16
dec
test
shll
xor
rorl
sub
add
xchg
push
test
push
xchg
add
dec
mov
pop
xor
sbb
xor
les
add
insl
subb
pop
nop
inc
cmp
call
push
nop
mov
fdivs
outsl
dec
popa
push
inc
dec
inc
cmp
orb
sbb
xor
or
dec
lcall
addr16
push
imul
ja
push
add
mov
dec
cmp
jp
add
inc
xchg
add
aaa
lret
mov
dec
jle
sub
insb
filds
subb
jo
push
inc
sbb
imul
push
dec
mov
lret
aas
xlat
add
adc
or
test
cmp
mov
cmp
add
insb
popa
shl
popa
add
je
ret
loope
mov
dec
ja
cmpsb
orl
out
dec
imul
or
fdivrs
clc
mov
arpl
cmpsb
add
pop
sbb
add
std
scas
add
push
imul
inc
add
fwait
push
lcall
dec
inc
dec
xchg
pop
mov
jl
clc
xor
mov
inc
shl
or
lods
loop
push
outsb
fs
adc
sub
popf
xchg
pop
ja
addr16
leave
jo
inc
dec
add
sub
xchg
add
mov
clc
enter
push
pop
or
stos
rcrb
aam
fadd
jge
cmp
pop
dec
pusha
ror
outsb
sbb
push
jne
jns
ss
jge
add
lods
and
xchg
fmuls
sub
inc
push
inc
adc
fcoms
jecxz
add
inc
stos
cmc
sub
and
cld
dec
inc
fs
push
add
xchg
das
xchg
mov
or
insb
fs
nop
cmp
out
add
dec
adc
cmp
adc
pop
push
sub
imul
sbb
xchg
imul
cmp
std
dec
inc
int
inc
inc
insb
lcall
dec
dec
inc
inc
push
push
dec
sahf
inc
xor
jbe
shlb
add
bound
or
or
or
xor
cwtl
shr
jg
push
or
outsl
testl
jo
inc
aas
and
xchg
and
sbb
add
mov
push
and
jb
sbb
shll
jae
fwait
push
sub
mov
jb
xor
inc
enter
lret
jne
clc
lcall
sbb
pushf
out
sahf
pop
push
outsb
lret
pop
inc
pop
push
roll
xchg
jmp
xchg
sbb
dec
imul
stc
pushf
push
xor
mov
mov
inc
inc
or
add
inc
fiaddl
lods
lcall
insb
ja
adc
dec
mov
push
aas
scas
aas
push
cmp
inc
xchg
sub
loopne
fmuls
jne
jle
outsl
push
lods
lcall
xor
mov
mov
mov
movsb
loopne
das
movsb
das
sbb
xor
push
ja
adc
xor
stos
add
dec
push
jb
imul
push
lcall
add
xchg
daa
insl
adc
add
xchg
hlt
sbb
push
idivb
push
add
and
add
pop
daa
jg
rcr
and
cld
arpl
push
dec
dec
sbb
xchg
inc
xchg
sbb
or
sbb
adc
push
test
cli
adc
pop
add
push
sbb
sub
les
inc
or
mov
adcb
rorb
pop
xor
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
cmp
xchg
adcb
pop
pop
cli
lcall
bound
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
sub
das
add
or
es
outsb
mov
mov
gs
push
lods
xlat
shll
dec
push
inc
add
movsb
jae,pn
push
push
jo
das
add
cli
outsb
pop
inc
aam
dec
popa
jbe
outsb
xor
mov
out
sub
dec
pusha
movsb
inc
mov
inc
sub
lret
rclb
mov
flds
stos
push
rolb
sbb
sub
inc
push
add
popa
outsl
aam
add
jnp
jo
jge
xchg
or
pop
fdivrl
icebp
punpckldq
inc
sbb
dec
dec
inc
add
shrl
verw
aaa
cmp
outsb
adc
fs
mov
cmp
xor
dec
bound
xchg
int3
xchg
push
xor
pop
jae
mov
pop
push
adc
out
mov
out
les
test
mov
shll
out
mov
and
pop
jg
mov
std
cmpb
roll
in
jl
mov
mov
adc
push
push
sti
jle
adc
add
jg
adc
jecxz
jg
daa
fs
mov
imul
jg
mov
mov
sub
and
lods
mov
mov
push
roll
mov
mov
and
out
iret
mov
add
in
inc
outsl
outsl
dec
add
xor
mov
or
loop
aad
pop
aas
in
mov
in
mov
mov
jle
nop
ret
jbe
lock
adc
push
pop
mov
jns
xchg
outsl
imul
jg
call
mov
out
mov
mov
add
and
add
adc
mov
sub
pop
add
mov
and
add
or
imul
ljmp
jne
or
sub
cmp
add
ljmp
add
insb
imul
insl
mov
and
mov
popa
sub
pop
push
push
add
jge
lods
mov
outsl
add
and
push
incl
jno
inc
push
movsb
xor
popaw
insb
je
mov
jae
mov
add
xor
ja
add
ja
bound
lods
test
jne
jne
jae
adc
test
inc
int
pop
or
lods
push
jne
mov
adc
movsl
inc
loopne
mov
jne
xor
add
push
or
inc
lret
jae
add
mov
divl
push
pop
stos
inc
jmp
sbb
and
in
add
mov
andb
mov
jo,pn
outsl
js
cmp
xor
jnp
test
adc
mov
xor
add
shrl
push
inc
pop
data16
popa
outsb
adc
call
adcb
add
pop
lods
push
pushl
add
lods
mov
bound
lea
imul
adc
inc
mov
sub
adc
push
or
push
movsl
divl
stos
mov
je
test
stos
test
pushl
imul
outsb
jae
outsl
jne
mov
bound
fs
pop
and
and
dec
push
ljmp
lcall
inc
xor
cs
adc
stos
jne
sbbb
dec
push
fcoms
insl
jae
sbb
sub
aam
dec
aas
push
push
xchg
sarb
inc
xor
outsb
mov
inc
pop
jne
adc
repnz
dec
jl
test
repnz
add
arpl
cmp
sub
mov
test
add
inc
xor
xor
sti
mov
outsl
inc
outsl
js
js
pop
pop
stos
int
xchg
shll
bound
inc
gs
jmp
cmovne
cmp
adc
outsb
push
lret
mov
jbe
gs
aam
push
daa
daa
gs
or
ljmp
outsb
imul
movsb
push
aaa
jg
mov
movsb
push
imul
outsl
pop
out
test
pop
and
dec
and
adc
cmp
gs
add
lcall
pop
aas
bound
ljmp
insl
pop
xor
stos
xor
pop
cmp
addr16
cmp
repnz
xor
iret
cmovbe
cmpsl
pusha
push
insb
outsl
das
sbb
push
push
ljmp
outsl
out
dec
std
jg
cmpsb
popf
loopne
inc
lcall
frstor
frstor
dec
xor
adc
lret
fiaddl
retw
inc
and
cltd
rcrl
shlb
in
lahf
das
adc
cmp
insb
je
das
rcl
push
fdivs
das
imul
add
push
dec
iret
lret
dec
xchg
das
inc
add
or
roll
inc
leave
popf
inc
xlat
add
pop
popf
push
xlat
add
sub
jbe
pop
add
or
cmp
lret
mov
or
rclb
call
mov
xor
mov
ret
xlat
pop
jmp
and
xchg
rorb
adc
fiadds
pusha
setb
insb
sahf
shlb
or
ljmp
insl
add
mov
dec
pop
lock
aas
inc
mov
lcall
neg
sti
mov
inc
add
dec
xchg
dec
push
dec
or
out
mov
mov
add
add
daa
jbe
cmp
popl
add
pop
daa
sbb
daa
push
outsb
jb
addr16
gs
loop
inc
dec
xor
mov
punpckldq
shrl
mov
insl
add
mov
ja
pusha
fisubrl
jo
jns
popa
inc
jbe
cs
iret
inc
push
push
or
je
outsl
ljmp
stc
testb
add
push
jbe
imul
jae
inc
sub
or
fisubs
aaa
das
daa
mov
ljmp
sub
adc
pusha
shl
mov
jnp
outsb
insl
mov
fisubrs
and
daa
stos
sub
sub
xor
cmp
sub
push
mov
fs
mov
bound
add
notb
sub
mov
pop
gs
loopne
scas
cs
pop
push
scas
push
adc
mov
mov
or
outsl
push
arpl
xor
mov
and
push
or
sahf
out
popa
mov
inc
cmp
or
inc
pop
push
sysret
xchg
insb
jne
ss
arpl
jae
popa
daa
xor
xchg
pop
push
int3
dec
jnp
sub
cmpsb
inc
cmpsl
add
add
sbbb
push
std
jg
decl
sub
add
add
add
add
push
xor
or
fistps
push
addr16
or
push
add
xorb
add
pop
xor
xchg
clc
pop
xor
wrmsr
and
push
call
add
dec
push
jae
mov
sbb
and
add
mov
xchg
rol
sqrtps
sbb
mov
mul
cmpsl
push
adc
pusha
outsl
fwait
xor
jp
add
add
xlat
cli
rcll
clc
popa
scas
sahf
hlt
nop
out
mov
pop
aad
or
fdivr
mov
or
add
push
adc
push
sbb
xor
lods
popf
mov
imul
pop
mov
xor
xor
xor
adc
dec
pop
add
and
and
insl
push
sub
imul
and
xor
pop
or
xor
testb
sbb
xor
xor
pop
jmp
xor
xor
shl
andl
and
lahf
leave
pushl
add
add
repnz
adc
decl
dec
pop
das
dec
xchg
imul
xor
bound
push
xor
ret
sbb
mov
les
divb
fstps
scas
mov
jbe
icebp
test
imul
dec
dec
ljmp
mov
pop
dec
mov
pop
in
sub
subb
sub
stos
mov
loop
call
loopew
ret
sahf
pusha
cmp
loop
push
mov
jnp
sub
cld
rolb
mov
xor
push
ds
pop
push
or
inc
add
xor
xor
xor
xchg
add
cmpsl
xchg
outsl
arpl
loop
movsb
fildl
sbb
add
xor
pop
add
xor
xor
mov
and
jb
out
add
ret
popa
cs
ret
out
mov
or
or
add
xor
das
jbe
sbb
mov
adc
loop
aas
movsb
adc
adc
shrd
push
push
inc
xor
rclb
sub
add
enter
incl
ret
mov
add
adcl
sub
adc
jmp
fadds
xchg
xchg
mov
sbb
jmp
mov
ss
cwtl
dec
in
mov
dec
xchg
inc
sbb
lea
cli
aad
add
xor
mov
daa
repnz
dec
incl
cmp
js
cld
push
loopne
loopne
xchg
movsb
xchg
sahf
pop
or
loop
mov
pusha
loope
lods
sub
fadd
movsl
dec
fs
sbb
lods
cmp
aad
and
lcall
inc
or
mov
gs
mov
jmp
iret
leave
add
sbbb
pop
jb
jge
pop
sahf
sub
mov
cmp
dec
xchg
add
stc
pop
push
hlt
sbb
pushl
sti
cmc
lods
xchg
mov
push
andb
sub
add
jmp
js
roll
pop
jg
jmp
mov
les
sub
xchg
fisttps
dec
dec
decl
fldt
or
loope
adc
adc
adc
jg
pop
xor
xor
adc
std
ja
pop
adc
inc
jne
bound
shrb
pop
mov
push
sbb
adc
add
js
je
imul
xor
jae
ljmp
xor
pop
aad
insl
sbb
push
sbb
and
cmp
add
add
int3
int
scas
or
jge
lods
xchg
mov
icebp
ffreep
movswl
mov
mov
test
mov
mov
push
imul
sahf
xor
in
js
ja
jle
cmp
xchg
scas
or
xchg
lret
sub
cmp
pop
sbb
lahf
cli
das
imul
mull
add
jg
push
jecxz
pusha
in
inc
sbb
mov
mov
xchg
add
and
xor
push
sub
xchg
call
cltd
adc
out
ret
sub
mov
xchg
sbbl
jne
cmp
xchg
cmp
call
adc
push
rorl
inc
dec
fnstsw
jl
cmp
js
in
lahf
xor
icebp
out
sbb
les
pop
mov
cmc
out
jl
jge
bound
cmc
dec
std
decl
and
xchg
int
mov
out
mov
fldenv
adc
mov
sarl
fcmovnu
adc
push
or
sub
in
mov
xor
mov
xor
mov
push
push
cmp
mov
mov
test
push
rorl
xor
jmp
add
test
cmp
mov
imul
pop
ljmp
xor
mov
dec
int
mov
fisttps
sub
dec
xchg
adc
add
or
add
mov
leave
xchg
dec
lcall
aaa
and
xor
decl
call
push
xchg
dec
and
test
mov
inc
repz
out
fstps
mov
sub
fabs
push
mov
iret
or
lock
sub
cmp
sbb
daa
mov
in
inc
dec
cld
add
mov
xor
aad
and
and
in
in
dec
hlt
das
into
aaa
fldt
insl
test
or
xor
je
movsl
inc
es
inc
pop
jecxz
popa
push
xor
imul
push
sub
das
sub
xorl
mov
and
sub
fs
and
insb
jns
popa
and
in
adc
sub
jge
aad
pop
lret
push
add
lret
xor
xor
xor
adcl
sti
sbbb
movsb
iret
popf
mov
pop
jae
adc
or
insb
pop
dec
push
or
sbb
ja
int3
adc
jmp
or
xchg
add
push
ror
xchg
xchg
lea
bound
pop
fstl
lea
lcall
jp
mov
cmp
jmp
pop
lahf
pop
mov
dec
or
cmc
lcall
test
clc
cwtl
mov
or
mov
mov
cld
push
pop
or
jmp
fisubrs
enter
dec
fs
xchg
mov
pop
sbb
aad
xchg
int3
jl
jb
jmp
std
leave
xchg
pop
xchg
fiaddl
lcall
or
mov
push
lret
fimuls
movsb
ja
jnp
push
inc
aad
outsb
sub
cmp
decl
push
or
jmp
daa
test
popa
std
jle
jl
sbb
repz
inc
xor
wbinvd
add
stos
inc
fsts
push
add
add
jnp
inc
iret
stos
or
ljmp
xor
inc
jmp
dec
push
xlat
jns
rorb
mov
lock
inc
mov
into
add
in
fisubl
push
cmp
pushl
dec
in
push
jbe
fs
movsb
test
xchg
ja
mov
popf
jmp
aad
outsb
inc
inc
test
bound
dec
dec
jl
cmp
lods
lods
jae
mov
js
lcall
inc
fldenv
out
pop
cmp
notl
jmp
enter
push
das
adc
lcall
push
mov
cs
dec
or
cmc
cmp
mov
jmp
jg
lods
inc
jns
lods
adc
sbb
mov
aaa
mov
sbb
and
xor
inc
enter
inc
sbb
or
sub
shll
pop
fisttpll
jmp
xchg
inc
iret
mov
or
jle
sub
out
cmpsl
adc
pop
cmp
scas
ljmp
in
lock
push
mov
and
nop
cld
jmp
test
push
push
and
rorb
push
bswap
adc
and
popa
scas
ret
outsl
or
lds
sbb
add
jnp
dec
push
push
lods
adcb
les
pop
leave
mov
lahf
adc
inc
popa
stos
dec
sub
xor
xor
addr16
outsb
cmc
jg
mov
fs
or
inc
gs
insb
outsl
jo
sub
aaa
mov
adc
imul
aas
cwtl
out
call
or
mov
dec
dec
ret
dec
aaa
stos
cld
jp
pusha
or
call
ja
lock
mul
enter
loop
gs
cld
pop
repz
movsl
push
cmpsb
popf
inc
inc
scas
stos
call
pop
mov
push
jb
pop
jl
push
xchg
inc
jecxz
cmpsl
das
cwtl
clc
jg
shlb
jge
lahf
inc
xor
mov
cmp
jno
fcompl
out
stos
rcl
imul
and
push
inc
lods
out
or
call
cld
sub
and
mov
std
xchg
divl
cmp
jns
pop
jl
sub
subb
fisttps
lea
cmpsb
xor
push
dec
mov
inc
inc
dec
sub
cmp
imul
add
xlat
imul
lea
ret
inc
or
out
mov
ljmp
pop
sbb
stc
add
enter
dec
fisttpl
sbb
adc
xor
adc
sub
sub
sub
jae
xor
cmpsb
test
and
push
push
pop
pop
sbb
je
aam
movsl
add
dec
xchg
push
ret
ficoml
adc
and
fldenv
and
add
or
pop
jb
add
mov
ds
inc
push
decl
push
jno
outsb
in
and
add
into
xor
mov
dec
ret
push
and
imul
sbb
gs
push
cmpsl
std
shr
sbb
ljmp
xchg
gs
stos
push
or
jp
decl
es
rep
in
idivl
lcall
icebp
xor
adcb
cmp
incl
rol
lahf
outsb
fs
loop
stc
mov
je
xchg
cld
sbb
dec
test
fs
ja
xchg
lcall
jbe
andl
cmc
inc
ss
sar
cmpsl
or
ds
jl
je
lods
sbb
lret
push
fld
inc
and
jmp
adc
in
stos
dec
fldl
ss
out
out
add
aad
and
cli
shrl
insl
cli
aas
jecxz
out
and
xchg
fisttpl
lds
nop
gs
xor
stos
daa
push
inc
clc
inc
loop
sub
cmc
inc
loopne
cmp
je
mov
jb
stos
mov
push
pushf
clc
out
movb
mov
jo
das
into
pop
add
push
pop
cltd
adc
sbb
adc
sbb
or
jmp
scas
mov
jne
lahf
and
xchg
fstpt
shrl
jmp
mov
out
lds
incl
cmpsb
movsl
cmp
std
incl
fisubrl
mov
es
cld
loope
inc
test
xchg
mov
pop
xchg
sbb
bound
or
sub
lcall
pop
test
push
dec
sub
dec
mov
arpl
jl
dec
cltd
cmpsl
jns
sahf
adc
ljmp
movb
cmp
sub
jl
scas
int
mov
es
incl
cmova
movb
mov
movsb
inc
shl
fsubrs
inc
aas
and
cmc
pop
lds
cmpsb
addr16
sbb
mov
jno
cmp
stos
cmp
pop
fstpt
cmp
jb
cwtl
ss
push
shll
rclb
cs
sbb
das
clc
pushl
pop
xchg
sub
fistps
mov
inc
add
cs
sbb
or
xor
xor
mov
and
xorb
je
push
mull
cmp
dec
cmpsb
incl
xor
movsb
pop
pop
test
sbb
sbb
adc
dec
push
dec
adc
sub
dec
psubb
call
or
xor
incb
dec
or
adc
add
sahf
and
pop
loope
inc
sahf
mov
insl
push
dec
push
mov
sbbb
call
add
lret
fistpll
pop
decl
aam
arpl
sub
add
fldt
sbb
xor
lahf
add
pop
lret
xchg
dec
movsl
outsb
loope
inc
cld
inc
dec
inc
dec
outsl
shll
xlat
cmp
repz
adc
or
stc
or
mov
xchg
sbb
add
jle
fldcw
push
lcall
daa
icebp
cmp
sub
mov
and
in
jp
dec
fstpl
inc
sbb
lcall
andl
insl
nopl
jno
lods
dec
fistl
lcall
bound
sarb
jb
in
dec
popa
jae,pt
into
pop
or
jne
and
sub
insl
clc
lcall
mov
movsb
into
xchg
jb
add
sub
addr16
mov
push
adc
das
xor
and
push
or
add
xor
jo
pop
mov
mov
add
lock
or
jg
xchg
mov
jno
xor
add
lcall
mov
and
ret
pop
leave
sub
mov
bound
mov
mov
adc
decl
add
add
scas
dec
dec
sub
xor
mov
mov
dec
stos
sub
test
loopne
fbld
xlat
inc
sahf
jo
mov
sti
pop
jg
add
in
lods
sub
or
loope
incl
fsubr
repnz
ja
cmp
rcll
xchg
or
inc
dec
shl
fists
add
adc
lcall
imul
sub
fldenv
jmp
add
cmp
enter
les
add
pop
out
jnp
popf
shl
xchg
into
xor
incl
sbb
push
cwtl
xchg
push
sbb
push
aaa
mov
jns
pop
xor
pop
mov
pop
call
int3
mov
int
jl
xchg
push
loopne
or
push
rcll
lcall
fnsave
push
and
pop
pusha
adc
ljmp
jg
es
push
decl
mov
or
mov
jnp
push
jg
jnp
icebp
fisubrl
push
xor
and
pop
and
inc
pushf
sub
call
sub
push
add
icebp
cmp
or
lahf
icebp
mov
push
sbb
add
add
xor
xor
addr16
jg
rcl
push
mov
ss
xchg
in
bound
mov
cld
mov
aas
cld
xor
pusha
and
mov
pusha
ljmp
sub
push
lret
out
pop
lcall
and
sbb
pop
xchg
cmp
ja
pushl
jl
test
and
xchg
push
add
int
mov
mov
scas
aam
mov
movsl
arpl
cmpsb
mov
rcrb
loop
pop
xorb
mov
clc
add
pop
lock
push
push
sahf
cmp
mov
add
jno
rcrl
sarl
and
push
mov
or
pop
xchg
rcr
sbb
mov
lahf
jg
push
jo
push
jmp
mov
fiadds
jg
lret
in
pushl
jg
dec
repnz
cmpsl
mov
je
push
pushl
add
mov
out
mov
out
push
movsb
movsl
mov
push
and
mov
add
inc
adc
add
xchg
inc
inc
add
mov
and
mov
movsl
nop
mov
push
inc
lret
push
out
xor
push
int
push
in
adc
inc
dec
lock
pusha
shrl
lock
stos
mov
stc
mov
cs
test
mov
xor
lods
add
dec
dec
inc
dec
push
dec
push
aad
out
sarb
dec
sarb
cmp
push
sbb
cmpsb
fdiv
dec
clc
sbb
inc
inc
mov
mov
adc
insb
adc
andl
pop
adc
call
mov
pop
xchg
mov
xor
scas
jp
call
ret
sub
repnz
dec
add
arpl
sete
mov
sbb
mov
adc
into
mov
cmpsl
fincstp
push
call
push
xor
add
pop
inc
sub
jmp
gs
mov
xor
inc
shlb
mov
adc
aam
push
fs
mov
add
mov
and
lea
pop
mov
test
bnd
cmp
test
jne
sub
or
call
or
mov
aaa
call
pop
mov
fnsave
jle
jo
sar
mov
cmp
inc
sbb
sarb
xchg
jne
sub
aas
pop
pop
mov
push
push
lea
mov
mov
jl
inc
in
mov
mov
push
sub
in
dec
xor
shll
lock
lods
mov
mov
out
insb
mov
loop
add
xor
mov
xor
mov
jge
fcompl
pushl
push
test
clc
incb
jl
adc
fdivr
dec
in
xor
push
pop
cmp
jge
sub
lea
xor
pop
xor
mov
iret
inc
jo
punpckhbw
pop
inc
incl
test
lea
faddl
ret
shlb
lret
dec
adc
in
into
inc
roll
outsl
inc
cmp
insb
sbb
in
jecxz
int3
inc
into
fidivrl
adc
lods
cmp
lea
push
sub
faddl
jle
mov
movsb
aam
test
mov
push
dec
or
mov
pusha
inc
cvtps2pd
jo
pop
fmuls
mov
or
je
pop
mov
jg
lods
shrl
mov
inc
add
out
in
outsl
sbb
lea
mov
inc
inc
incb
mov
jnp
dec
lock
add
xor
pop
mov
inc
pop
mov
push
jae
adc
add
push
pop
jnp
mov
or
adc
sub
lods
sbb
inc
adc
jl
inc
ljmp
test
xor
test
andl
clc
jbe
xchg
movl
inc
or
ret
stos
push
adc
sbb
stos
clc
daa
inc
sub
je
dec
mov
shrl
push
cmp
movsb
fs
add
xchg
mov
xor
and
mov
mov
or
sbb
jge
mov
je
nop
fucomi
mov
gs
xor
rolb
xchg
sbb
push
push
bound
mov
adc
xchg
jl
pop
nop
xor
out
divl
es
in
movl
add
push
push
movsb
lret
nop
cmp
je
sbb
jns
sbb
call
lock
movsl
sbb
cmpsl
pop
imul
ret
test
pop
cli
push
xchg
mov
js
lock
cmpsb
jl
push
mov
mov
es
call
sbb
ret
push
cld
lods
mov
mov
jnp
call
jne
es
leave
mov
cmc
mov
dec
push
cld
out
mov
inc
cld
jae
loopne
ret
push
jnp
movswl
outsl
dec
in
hlt
ljmp
lock
adc
sbb
or
and
fmuls
pop
push
push
movsb
sub
sbb
dec
pop
jp
adcl
jns
add
mov
cmc
dec
jmp
pop
adc
dec
sbb
mov
dec
cli
aaa
js
add
push
lea
push
andb
add
pop
repz
lea
mov
push
push
adc
daa
cmp
call
pop
adcl
data16
aaa
sbb
jo
pop
call
das
in
push
push
sbb
and
or
pushf
dec
loopne
push
call
inc
adc
xor
push
outsl
lock
call
fistpll
push
hlt
push
jbe
jle
sub
mov
and
xchg
inc
imul
clc
jp
scas
jge
hlt
adc
inc
hlt
lcall
push
xorb
inc
popa
jmp
inc
adc
adc
scas
loope
or
or
add
sub
clc
clc
psubb
push
ret
pop
pop
mov
mov
sub
je
jle
in
and
pop
fisubrs
mov
or
xor
pop
push
xchg
sti
add
sub
mov
je
pusha
and
loopne
dec
cmp
jmp
xchg
cmp
jne
or
inc
push
xor
add
lcall
inc
fadds
mov
xchg
push
je
clc
add
call
neg
dec
in
push
mov
cmp
movzwl
lods
popl
adc
loop
inc
cmpsl
iret
adc
js
sbb
jns
push
je
mov
mov
andb
or
jmp
sarb
push
fsubr
xchg
ds
ja
fcompl
loopne
add
jo
push
aam
lret
and
push
scas
call
mov
ss
push
sub
aaa
ljmp
ss
mov
add
dec
cmp
inc
cmp
cmpsb
outsb
mov
dec
lock
cmp
or
je
ja
mov
jle
push
sub
dec
adc
or
cmp
shrl
les
fcoml
mov
cmp
jge
pop
call
jmp
or
fwait
loopne
push
stos
inc
lea
inc
scas
jle
cld
push
loop
jmp
mov
push
push
js
push
and
orl
in
pop
dec
dec
std
xor
sub
cmp
or
lcall
dec
in
push
and
out
jl
outsb
lahf
pop
adc
ret
sbb
lods
mov
test
adc
out
inc
or
push
adc
or
gs
lea
mov
stos
aad
aam
nop
xchg
loop
jp
lret
add
pop
je
insb
sbb
and
js
sahf
stos
pop
out
dec
inc
mov
pushf
push
cmc
push
shr
test
jl
ds
mov
js
cmpsl
cmp
add
icebp
xorb
call
adc
fs
push
ss
xor
adc
xchg
pop
xchg
dec
push
and
pop
aas
cmp
xor
push
sub
push
jns
pop
xchg
or
andl
lds
or
popf
inc
sbb
jbe,pt
push
pop
mov
test
xchg
push
outsb
dec
push
xor
mov
call
fwait
push
add
daa
or
test
or
inc
pop
jmp
stos
add
lahf
xchg
push
mov
xchg
bound
or
dec
jno
repnz
and
sub
adc
sbb
stos
mov
sahf
shr
in
sub
or
in
call
jo
jl
int3
push
add
fcompl
inc
push
nop
aam
call
arpl
lock
cld
shlb
adc
pushf
outsb
jo
call
mov
pop
in
mov
mov
cmp
lea
xbegin
aad
mov
repz
in
push
mov
cmp
push
ds
or
lods
cmp
nop
sub
movsb
push
push
and
push
jl
loop
inc
pop
je
sub
xchg
bound
push
sti
xchg
xor
out
and
loopne
mov
xchg
test
shl
cmp
sbb
in
push
cli
or
test
imul
xor
sub
fsubl
rclb
inc
shlb
mov
pusha
ret
adc
movl
add
mov
inc
test
push
jb
arpl
inc
jecxz
testb
cmp
sbb
clc
push
push
mov
mov
jmp
push
jne
jo
mov
jg
push
das
jo
or
inc
cmp
aam
sub
into
into
sarb
xor
in
call
or
fisubl
in
dec
fcoms
jle
or
add
popl
push
fidivrl
out
xchg
popl
lea
push
fdivp
pushl
push
outsb
cmpl
shrb
inc
enter
mov
or
call
xchg
xchg
mov
mov
and
sbb
fndisi(8087
ret
push
push
addb
ja
call
mov
adcl
mov
jge
pusha
mov
pop
push
jmp
cmp
rorl
int
lea
sbb
in
or
adc
mov
int
in
or
or
ja
pop
repz
fsubrl
xor
bound
mov
enter
or
lcall
mov
scas
adc
inc
clc
adc
cld
ffreep
aaa
add
test
xor
into
rclb
push
add
or
mov
ret
xchg
push
mov
mov
pop
sub
mov
jmp
xor
push
cmp
jne
inc
mov
add
pop
aam
dec
jbe
sub
adcb
loop
mov
add
jno
mov
in
jae
loop
fdivrp
dec
sbb
mov
jmp
sbb
cmp
sub
and
mov
dec
adc
xor
sbb
xchg
jmp
mov
push
les
in
pop
cmp
je
xor
push
push
faddp
cmp
inc
or
pop
lret
movsl
cmp
sbb
inc
pop
dec
pop
lcall
mov
mov
inc
mov
add
push
stc
fcompl
push
or
lods
loope
or
incb
dec
out
sbb
fcoml
inc
jb
pop
pushf
js
loop
pusha
ljmp
lods
dec
xor
mov
div
mov
aaa
push
sub
ret
jae
or
icebp
movsl
sbb
testl
sbb
je
ret
call
add
and
sub
inc
outsb
jmp
push
mov
jb
push
and
aad
jge
push
xchg
mov
mulb
lods
jl
and
or
add
setle
fcmovnbe
mov
push
xor
xchg
loopne
xor
jge
adc
int3
add
js
test
sbb
inc
mov
loopne
mov
mov
push
mov
not
cmc
iret
push
pop
iret
pusha
shr
adc
test
push
lock
jb
popa
push
adcl
movsb
fimull
sbb
clc
hlt
push
fadds
out
fadds
mov
xor
cmpsb
mov
mov
jb
mov
or
mov
data16
stos
in
movsb
jnp
ds
cld
push
icebp
jne
inc
pop
dec
popf
push
push
mov
and
jne
call
imul
mov
and
xor
shrl
pushf
sbb
add
es
cmp
in
mov
popf
xchg
adc
push
vmovapd
fnsave
dec
stos
jo
cwtl
fnstsw
ljmp
cmp
xchg
or
cmp
sbb
jo
ret
mov
sub
shlb
lahf
mov
dec
jl
pop
insb
mov
pop
mov
or
mov
push
lods
inc
pop
or
hlt
push
mov
cmpl
rcl
popa
sahf
sbb
pop
pushl
or
call
or
inc
mov
xchg
adc
jg
adc
gs
add
outsl
subb
les
rorb
pushf
into
xor
mov
or
and
xchg
lret
push
or
shlb
mov
jl
inc
outsb
dec
ret
addb
call
jmp
loopne
push
call
push
cmp
in
cltd
sub
movsb
mov
stos
pop
push
adc
ds
sub
push
mov
cmp
adc
xchg
ds
aad
jecxz
adc
sub
xchg
out
call
shrl
xchg
les
frstor
adc
adc
push
add
dec
push
imul
mov
pop
stc
inc
or
add
add
imul
mov
ljmp
adc
xor
fdivrl
pop
nop
pop
ds
or
jnp
es
mov
adc
pop
mov
aad
lret
test
xor
cmp
test
loopne
or
xchg
out
or
push
adc
jge
pop
fsts
mov
push
or
sub
xlat
lea
adc
jmp
pushw
xchg
mov
jbe
mov
inc
add
je
jo
dec
fnsave
add
lock
inc
movzwl
cmp
jl
xor
push
sti
or
ss
jmp
enter
sbb
test
push
jmp
fistpl
ret
mov
lea
push
sub
shl
xchg
dec
adc
ja
hlt
xchg
sbb
jne
ds
dec
jge
xor
or
cmp
or
ss
ds
sub
ret
xor
sbbb
inc
push
xor
inc
inc
inc
cmp
jl
fs
and
decb
hlt
roll
xchg
dec
jne
push
jmp
decb
xchg
pop
push
jmp
push
pop
insb
dec
shlb
cmpsl
sbb
xchg
inc
jp
adc
inc
test
xor
dec
adc
or
je
cmp
dec
shll
xor
enter
lcall
pop
call
add
adc
or
nop
in
xlat
adc
inc
je
xchg
imul
outsb
mov
add
scas
cmp
stos
inc
xor
fimull
inc
push
mov
push
sbb
pop
inc
and
mov
cmp
sbb
test
or
pop
fidivrs
mov
ret
sbb
and
lock
fs
adc
nop
push
movsb
jle
adcb
into
shl
and
and
mov
mov
pop
or
clc
cmpsb
stos
jg
fidivrl
call
addr16
mov
sbb
push
adc
push
negb
jmp
es
mov
inc
mov
adc
or
shrl
dec
mov
adc
std
mov
push
mov
and
popf
outsl
scas
ja
iret
and
cmp
pop
lds
push
pop
inc
pop
or
pusha
pop
mov
movl
stc
pop
mov
xchg
out
mov
mov
lahf
out
sti
mov
rcrb
ret
addl
jle
push
push
nop
mov
sub
pop
jmp
test
mov
adc
mov
mov
xchg
cmp
ss
mov
mov
cmp
ret
lea
shll
pop
sbb
ja
sti
not
or
push
andl
jg
xchg
mov
add
add
dec
and
dec
mov
sbb
cld
pop
out
sbb
mov
jge
adc
push
sbbb
or
out
adc
or
inc
xor
add
stos
sahf
push
inc
sbb
adc
jo
stos
hlt
and
lods
add
xchg
dec
xchg
rorl
out
cmove
inc
jo
add
push
pushl
neg
sbb
and
test
je
ret
rol
mov
int
add
add
xor
rcr
jle
adc
std
testb
adc
ret
add
add
add
push
cmp
jl
loop
ja
jne
inc
push
sub
jnp
xor
add
sbb
cmp
sbb
dec
xchg
pop
push
data16
mov
pop
mov
shrb
movsb
hlt
gs
push
das
push
pusha
or
insl
adc
and
or
ret
push
inc
and
lods
lea
and
push
xor
adc
add
mov
fimull
xchg
or
or
test
into
jne
fs
mov
cmp
jbe
ss
jle
imul
rorb
xor
adc
or
mov
cmp
dec
push
cmp
pop
mov
push
sbb
or
push
pop
pop
jne
cmp
outsl
add
xchg
aas
inc
xor
or
push
orb
insb
push
adc
jecxz
leave
xlat
adc
stos
mov
movl
movl
inc
push
add
dec
shrl
in
add
data16
aad
xor
ret
inc
pushl
imul
popa
xchg
dec
push
leave
or
cmpb
push
and
cmpb
add
and
pop
add
dec
repnz
add
xor
inc
adc
sbbl
jne
or
add
js
or
cmc
leave
aam
mov
add
or
sahf
and
sub
add
dec
sub
jno
xor
movb
fadd
push
mov
add
aaa
xor
loopne
push
insb
and
stc
push
and
mov
push
jo
mov
dec
xor
or
adc
cmp
cmp
scas
or
jg
cltd
dec
mov
mov
jle
fs
xchg
inc
popw
push
push
push
sbb
fs
pop
pop
pop
add
cwtl
add
cmpsb
or
push
mov
mov
cmp
mov
push
sbb
pushf
mulb
loopne
scas
add
push
call
dec
ljmp
cmp
jne
cmp
jne
in
jne
lock
pop
xchg
cmp
dec
es
mov
iret
arpl
pop
push
and
dec
js
push
mov
sub
out
push
push
cmp
fdivrl
fcoms
push
add
mov
jge
cmp
jne
fxch
in
pop
cmp
sbb
or
pop
stos
xor
enter
push
xchg
xor
cli
cmp
je
push
mov
pop
rorb
jne
jle
shll
push
jo
push
or
push
add
adc
jl
cmp
push
push
dec
rorl
sbb
ret
ud2
pop
sub
adc
or
stos
mov
out
pop
pop
add
inc
pop
push
aam
mov
sbb
mov
pop
into
cmp
jl
mov
hlt
shl
add
sbb
mov
xor
adc
pusha
inc
das
arpl
ljmp
pop
adc
adc
xchg
shll
adc
xor
ret
lcall
stos
shll
xor
xchg
or
aas
sbb
add
iret
pop
mov
push
inc
sub
add
dec
and
adc
pop
mov
sub
popa
jns
xor
cmp
clc
or
lret
dec
sub
movsl
lcall
call
cmp
xor
roll
push
pop
pop
pusha
push
xor
cmc
je
arpl
enter
or
shlb
or
mov
loope
js
xchg
mov
push
shlb
mov
xchg
dec
dec
cmpsb
mov
and
sbb
ljmp
cmp
add
mov
ftst
jl
add
pop
and
loop
cmp
mov
pusha
sub
sti
int
pop
addb
aaa
je
jmp
add
dec
scas
sti
and
and
xor
mov
pop
je
jmp
dec
repz
fiaddl
ss
push
pop
sbbl
mov
push
push
daa
add
je
push
loopne
adc
inc
and
sbb
xor
dec
pusha
inc
cli
mov
iret
pop
bound
sub
shr
hlt
lcall
push
mov
hlt
pop
ret
push
pop
xchg
jae
add
sahf
adc
inc
adc
cmp
shlb
and
loop
dec
das
sub
in
cmp
ror
jle
mov
mov
sahf
imul
sbb
outsb
pop
jge
mov
in
pop
mov
lahf
push
out
cli
or
outsl
shll
or
inc
mov
add
aam
pop
test
ficomps
mov
push
sbb
xorl
enter
lock
lret
pop
and
sbb
sbb
pop
add
sbb
pop
in
dec
or
out
push
adc
pop
pop
inc
addl
jmp
xchg
in
xchg
das
adc
cmpsb
add
sub
sub
mov
subl
push
xchg
ja
cmp
mov
or
ljmp
add
add
imul
and
sarl
jne
cmp
lret
sbb
sbb
dec
lods
enter
rorb
push
sub
jge
roll
sbb
movsl
add
setg
push
es
xor
xchg
add
jp
mov
pusha
jns
inc
mov
ret
pop
cmpb
push
mov
lods
lods
sub
stos
xchg
dec
mov
fstpt
test
mov
aam
fmull
and
adc
leave
adc
popf
dec
jmp
out
das
push
add
punpcklbw
test
jge
pop
xchg
je
test
jne
lret
inc
add
repnz
rcrb
mov
mov
push
mov
add
adc
testb
es
add
pop
pushf
xor
mov
push
xor
adc
jb
cmp
push
push
imul
out
mov
xchg
div
std
cmp
mov
add
add
mov
jnp
mov
dec
sahf
pushf
daa
push
push
push
mov
ds
dec
adc
lods
inc
rorb
pusha
ret
xchg
cmpsb
mov
mov
sub
sub
ljmp
or
mov
addb
cld
mov
push
sub
movsl
or
or
lods
ds
shll
pop
rcl
cli
sub
das
mov
js
shr
shlb
idiv
in
xor
push
shrl
jp
add
inc
add
or
idiv
pusha
insb
test
add
test
scas
test
aas
jo
movsl
and
jl
ds
movsb
pop
mov
dec
sbb
add
cs
and
push
and
or
add
leave
fs
pusha
sbbl
adc
sub
push
mov
test
mov
jne
sbb
or
adc
test
les
push
or
adcb
pushl
xor
or
mov
push
push
sbb
ja
mov
addb
mov
mov
pop
hlt
xor
pop
pop
insb
int
mov
loop
mov
scas
cmp
jbe
or
inc
cmp
push
es
push
adc
lods
add
jo
int3
in
sub
pop
or
add
xor
push
rclb
movsl
sub
inc
loopne
fs
in
sbb
notl
mov
filds
pop
jbe
lock
dec
leave
ret
xlat
ret
mov
pop
mov
stos
pop
cmpsb
sub
cmc
enter
int3
dec
xor
push
push
cld
adcl
add
mov
push
scas
clc
jp
das
adc
push
dec
test
cmp
loopne
cwtl
xor
dec
pop
mov
pusha
popa
jle
cmpsl
movsl
pop
and
call
or
loopne
in
xchg
shll
jne
push
push
daa
popa
mov
pop
inc
mov
or
add
sbb
sbb
xchg
mov
pop
loopne
mov
loop
sbb
addb
push
sbbb
dec
orb
mov
inc
push
cld
add
aaa
cwtl
popf
adc
sbb
outsl
or
test
and
rcrl
aas
push
arpl
mov
jl
mov
in
in
xor
adc
rol
adc
adcl
lock
mov
and
sti
adc
sub
or
add
push
rcll
test
sub
andb
sub
in
mov
jne
xor
insb
jbe
mov
or
and
push
pop
sarb
add
push
cmp
cmp
jge
or
icebp
sbb
push
mov
pop
push
cmp
je
or
lods
push
cmpsb
sbb
loopne
sbb
jae
dec
xor
push
add
push
out
sub
fimuls
out
fld
lahf
lret
dec
daa
insb
addb
mov
jle
cmp
fistps
jno
adc
push
and
dec
push
imul
sbb
jl
sbb
sbb
cmp
mov
out
xor
push
outsl
sbb
dec
or
xor
test
xor
fdivp
pop
add
adc
out
sbb
and
and
jmp
loope
sbb
xor
daa
add
mov
aam
les
push
call
sub
mov
jae
pop
rcll
push
or
and
pop
sahf
mov
cmp
fadd
inc
lock
pop
rorl
sbbl
jl
xchg
mov
cmp
pop
xor
mov
cltd
push
pop
shr
push
mull
or
adc
lock
jo
xchg
adc
mov
clc
je
jl
mov
push
pop
test
mov
inc
mov
es
mov
cmpsb
push
adcb
andb
pop
icebp
mov
cli
pop
xor
mov
jmp
rcrb
push
jne
cmp
fstps
sarl
push
push
leave
pop
je
xor
mov
mov
xchg
mov
lds
mov
filds
movb
jge
sti
nop
sahf
adcb
cmp
les
jno
aas
jnp
push
xchg
stos
sarb
add
pop
insb
idiv
jl
xchg
xchg
adc
xchg
loopne
js
adc
pop
mov
sub
add
adc
shlb
add
inc
in
push
loopne
in
loop
inc
mov
inc
pushf
arpl
xchg
scas
sbb
arpl
xchg
mov
add
insb
outsb
xchg
push
orl
lock
adc
idivl
sbb
push
lret
push
aam
jno
ljmp
and
jle
adc
pop
orb
or
push
jmp
out
xor
add
add
mov
add
mov
pushf
call
les
cli
adc
or
mov
add
shr
insb
adc
cwtl
jo
nop
adc
das
mov
xor
adcl
mov
in
and
or
sub
adc
add
push
pop
mov
push
inc
in
xchg
mov
movsb
mov
xchg
add
outsl
mov
lds
negl
or
xchg
and
xchg
stos
cmp
add
sub
lahf
adc
ficompl
rclb
xor
or
cmp
enter
adc
adc
adc
adc
push
or
jnp
cmp
inc
in
iret
dec
shr
cs
bound
adc
xchg
aad
jl
mov
sub
int3
roll
add
mov
bound
fsubrs
jecxz
add
insl
push
xchg
xor
sbb
andl
dec
jp
push
or
add
inc
mov
and
sub
and
and
popf
mov
pop
call
cwtl
push
adc
sbb
add
pusha
in
add
cmp
sbb
fists
mov
movsl
loop
dec
push
mov
adc
das
aaa
adc
dec
mov
lock
xchg
mov
cwtl
iret
pop
dec
jae
daa
add
sbb
mov
cmp
fisubrl
and
or
cmp
out
dec
lret
pop
ret
shlb
mov
mov
mov
xor
mov
sub
jl
mov
push
push
cmp
pop
jae
fistps
push
mov
cmp
je
mov
or
add
test
pusha
rorl
dec
loope
pop
xor
in
cmp
jl
or
xor
dec
lea
xor
jmp
lock
mov
mov
dec
lods
jp
cmpsb
pop
mov
add
push
xor
push
aad
js
sbb
nop
xchg
or
adc
ret
jo
xor
cwtl
cmp
pop
dec
pop
fimuls
push
push
dec
mov
or
sub
aaa
ret
push
andl
fmull
inc
fcoml
test
cmp
adc
sub
push
aas
pop
loop
add
shl
mov
push
insb
and
or
xor
or
fdivl
mov
xor
mov
xor
imul
and
mov
dec
mov
inc
call
nop
mov
mov
rclb
mov
sbb
mov
and
mov
or
iret
xchg
subb
add
jo
and
pop
pushf
add
inc
cwtl
je
dec
mov
and
test
push
push
mov
maskmovq
mull
push
loope
or
ja
jle
pop
lods
xor
aaa
shl
data16
imul
push
lds
je
loopne
in
scas
movsb
push
pop
fidivrl
pop
cmp
mov
jg
lea
jne
icebp
lods
xor
clc
inc
fsubrl
dec
mov
roll
int
mov
aad
and
jmp
and
insl
jns
sbb
mov
js
loop
xchg
pop
sub
loop
ljmp
fimuls
add
mov
out
push
mov
das
loop
sahf
lock
mov
push
mov
jge
neg
aas
inc
mov
hlt
sbb
lock
dec
adc
inc
push
mov
ja
jmp
jle
xchg
clc
push
fcoms
mov
leave
or
insb
lcall
stos
pop
jp
push
pushf
fdivl
or
adc
lret
inc
movsb
icebp
lea
xchg
mov
insl
add
imul
sti
rcl
jne
adc
jo
mov
int
pusha
mov
or
push
cmp
lods
xchg
mov
jbe
scas
stos
dec
and
fbstp
and
insl
push
and
dec
mov
mov
mov
test
out
andb
pop
push
call
xchg
push
pop
add
cmpsl
shlb
jl
ja
cld
inc
test
sbb
cmp
xchg
divl
cmp
test
loope
pop
inc
pop
out
loopne
in
or
inc
ficoml
ret
fadds
xor
ret
test
adc
or
js
mov
adc
cld
sbb
ljmp
cmp
icebp
or
pop
pop
add
ret
push
cmp
mov
push
push
push
push
hlt
mov
or
jae
and
movsb
inc
loopne
add
push
xor
ss
mov
shrb
xchg
out
pusha
neg
mov
pop
mov
outsb
pop
xchg
orl
pusha
dec
pusha
movsb
lods
in
imul
fldenv
adc
adc
adc
pusha
int
add
dec
jmp
mov
xor
xor
loopne
shlb
mov
push
add
push
lret
aad
jb
cs
sbb
push
movsb
adc
xchg
mov
push
mov
in
loopne
test
and
push
les
or
and
add
jp
adc
cltd
ja
fnstsw
andb
pop
push
frstor
or
in
pop
int3
hlt
sbb
adc
dec
movl
mov
add
ret
add
push
mov
std
push
call
dec
test
sbb
hlt
or
xchg
or
pusha
pusha
std
dec
fcom
ds
sbb
mov
pop
or
pop
je
movsb
js
int
out
ds
xor
testb
lock
clc
lea
cld
xor
in
pop
adc
fdivs
sub
test
mov
pop
js
icebp
mov
divl
inc
mov
sub
adc
or
daa
adc
push
notb
pop
jmp
sbb
adc
arpl
cmp
push
mov
fsubl
adc
xor
and
sub
push
xor
test
xor
movsl
sub
xchg
xchg
ja
cmp
lock
xlat
dec
sbb
cmp
adc
stc
call
adc
add
or
mov
mov
mov
push
mov
xchg
js
jno
fildl
push
inc
cmp
jbe
mov
dec
js
in
cmp
adc
xor
movsl
add
fcomps
rorb
lahf
data16
inc
shrb
xchg
bound
rcrb
dec
pop
and
call
add
mov
pushf
fstpt
push
ds
mov
mov
ja
mov
movsl
cmp
pop
shl
loop
xchg
pop
sbb
mov
adc
inc
push
cwtl
sahf
icebp
push
call
push
and
fcmovnbe
jne
xor
add
push
jmp
add
inc
pushf
fimull
lea
push
pop
pop
loope
add
testb
je
aad
and
add
hlt
jne
add
std
jmp
int3
loope
adc
ret
add
jecxz
push
mov
das
in
sub
imul
sti
mov
cs
jmp
or
in
dec
sbb
jne
or
andb
subl
cmpsb
cmpb
sub
rorl
xor
pop
ffree
push
cwtl
jge
loope
push
jmp
pop
pop
or
movsb
rorb
add
lock
stos
aad
xchg
and
jne
adc
pop
pop
mov
mov
sbb
push
jbe
add
push
mov
test
mov
push
adc
jne
adcl
mov
aaa
mov
es
test
mov
mov
push
pop
and
shrb
out
and
add
lea
add
movsl
mov
insl
and
add
loop
pop
aas
xor
or
lret
xchg
lock
push
aaa
jmp
sti
dec
sub
pop
sti
test
mov
cmpb
fdivrl
pushf
inc
lock
inc
in
sbb
in
loopne
loopne
pop
popf
test
push
fsubl
pushf
loopne
sbb
mov
push
or
xchg
sub
sbb
test
or
push
push
cmpsb
mov
scas
ret
add
mov
sbbb
pop
xchg
rolb
enter
dec
mov
testb
mov
pcmpeqb
call
es
shlb
dec
lds
mov
push
xchg
pop
cmpsb
out
sti
cmp
ja
or
je
sub
adc
outsl
or
or
jbe
or
jne
xor
mov
call
xor
xorl
sbbl
adc
adc
xor
cmp
and
lret
jne
movzwl
xor
ret
stos
jbe
pop
jle
ret
inc
daa
fsubl
push
jmp
rol
inc
or
and
adc
jp
pop
jmp
add
jp
sahf
push
in
sbb
fistl
add
test
jne
mov
or
shr
and
pusha
sub
sbb
adc
push
xchg
fwait
mov
enter
neg
sbb
and
sarl
call
mov
inc
cmp
jnp
je
dec
cmp
or
xor
rclb
jb
test
les
add
stc
shlb
sub
xor
negl
cs
or
jle
cmp
call
es
xor
sbb
fidivl
or
xchg
or
loope
mov
jl
inc
adcb
in
or
or
movl
mov
sub
ja
xor
inc
test
nop
push
adc
add
or
clc
add
pushf
push
bound
jle
jmp
or
imul
aaa
or
fiaddl
adc
test
dec
push
inc
testb
push
adc
and
and
add
fsubrs
xor
es
cmp
pusha
add
dec
sbb
popa
mov
mov
loop
push
bound
in
cs
pop
adc
pop
dec
and
jl
jp
xor
cmp
adc
or
cld
inc
add
loope
sbbb
sbb
dec
push
popa
add
dec
ja
iret
cmp
adc
aam
add
mov
mov
out
adc
sub
push
adc
aas
clc
call
cmp
inc
adc
sub
cmp
push
or
int3
sub
or
les
lock
xor
push
sub
push
pusha
or
faddp
lret
or
push
bound
hlt
mov
push
mov
push
ret
gs
cmp
sbb
sti
jb,pn
or
std
out
je
cmp
sti
adc
push
ffree
push
notb
push
push
ja
xor
fadd
or
sub
mov
arpl
sbb
sub
loopne
jo
add
xor
aaa
xchg
cmp
push
jb
call
sub
push
sbb
and
xchg
fsubrl
ljmp
sub
ret
push
xor
pop
xor
popf
xor
gs
ficompl
sbb
push
pop
add
flds
scas
fs
mov
bound
adc
faddl
mov
mov
mov
xchg
pop
jae
cmpsl
or
cmc
pusha
xor
sbb
lea
enter
or
lahf
stos
inc
insl
sbb
xlat
and
or
xor
mov
jp
pop
lock
adc
in
sbb
add
xor
pop
fwait
mov
mov
inc
and
jo
push
adc
ret
jo
or
cwtl
pop
into
cmp
jle
or
add
ljmp
call
test
and
pop
add
rep
rclb
je
mov
adc
cmp
jb
push
addl
int
shlb
mov
scas
pop
loop
inc
out
xor
clc
add
shlb
mov
jae
mov
pop
add
xchg
pop
or
inc
cmp
ljmp
subl
push
jne
sub
or
test
ds
ljmp
fimull
dec
or
jae
or
push
sub
iret
mov
outsb
jbe
and
fdivrl
ret
test
pop
ss
dec
sbb
mov
jno
hlt
sbb
movsb
or
mov
pop
pop
add
and
fwait
push
adc
out
push
test
xchg
lcall
or
mov
mov
call
ret
add
inc
cmp
aas
push
jo
or
pop
shlb
push
or
mov
push
mov
scas
jge
add
sahf
mov
sub
pop
inc
mov
or
scas
inc
repnz
loope
call
pop
mov
adc
adc
add
push
aaa
mov
pop
nop
pop
xchg
fbstp
push
adc
mov
mov
mov
sub
mov
add
sbb
dec
push
adc
fisubs
sbb
scas
ss
adc
or
and
adc
test
add
mov
lea
mov
inc
movsl
rolb
xor
ficoms
insb
mull
jg
neg
sbb
and
add
test
jb
and
testl
xorl
and
sbb
mov
les
mov
xchg
inc
scas
sbb
dec
add
jae
jne
cmp
stc
sbb
mov
hlt
clc
ja
jg
lcall
aaa
lea
push
push
mov
call
push
fs
enter
add
xor
pop
pop
cmc
or
in
clc
or
popa
loopne
fs
add
mov
add
inc
addr16
inc
xor
push
outsb
sete
xor
aaa
mov
mov
cmp
mov
popa
dec
adc
sub
push
mov
xor
enter
xor
in
mov
lods
in
or
pop
sarb
popa
xor
cwtl
add
addl
gs
js
adc
cmp
shlb
mov
cmp
sbb
add
sub
data16
push
lea
lock
mov
mov
js
ss
xchg
mov
pushf
es
add
jmp
xlat
mov
data16
or
sbb
lods
mov
andb
inc
hlt
mov
mov
and
mov
js
adc
loop
sbb
pop
call
bound
dec
shl
rcl
mov
cmp
jmp
xchg
jae
sub
daa
sbb
mov
arpl
dec
inc
imul
addl
mov
sbb
push
lods
push
inc
xor
stc
or
incb
add
mov
mov
cmc
mov
xor
aam
cmp
and
push
shlb
hlt
and
push
inc
in
push
ret
xchg
and
pop
dec
or
lock
jno
stos
test
dec
pop
xor
ja
and
cltd
jle
sub
mov
into
test
push
mov
add
ret
lock
add
push
push
and
rcll
mov
xchg
fs
jno
jge
or
pop
xor
push
inc
sub
jle
inc
pop
call
sub
xor
cmp
lea
mov
sub
js
xchg
cltd
jo
push
or
daa
push
scas
mov
pop
dec
rolb
lods
sbb
push
dec
push
addr16
pusha
lea
scas
jne
push
or
xlat
inc
pop
dec
and
add
aas
loopne
xor
push
mov
cmp
jno
and
lock
mov
addb
movsb
or
adc
jns
inc
jo
mov
scas
inc
mov
ss
cmp
popf
xor
add
pop
jno
les
scas
push
sub
inc
and
fistps
pop
or
mov
lods
daa
iret
push
jnp
sbb
call
repnz
push
pop
ds
test
pop
mov
or
add
pop
inc
add
mov
in
inc
jae
push
pusha
mov
add
aad
ja
push
adc
andl
push
cltd
popf
mov
repnz
int3
cmp
nop
dec
or
shrb
ds
mov
nop
xchg
inc
push
stc
adc
xchg
insb
jb
push
cmp
adc
js
push
sbb
ds
nop
pop
xor
and
cmp
in
inc
adc
and
push
stc
leave
and
hlt
icebp
cli
sub
add
pushf
je
push
daa
fcoml
pop
pushf
gs
icebp
mov
test
or
ret
xor
adc
mov
outsb
fldl
bndldx
adcb
test
push
imul
fwait
pop
cmp
sub
cs
xchg
or
push
sub
dec
lea
shl
cmpsb
adc
ret
int
std
jg
cmp
jne
mov
add
push
push
xor
loopne
inc
cmpsb
std
sahf
ror
addl
jge
inc
dec
adc
xor
mov
subl
inc
add
xor
xchg
mov
cmp
pusha
sub
mov
or
cld
cmp
sbb
jle
clc
jo
inc
imul
mov
jo
mov
lea
push
aaa
push
pop
jbe
jle
test
cs
insl
into
hlt
push
call
adc
addb
scas
inc
jo
xchg
push
pusha
push
pusha
cmp
nop
subb
jno
fstpt
pop
or
dec
push
rcrl
push
push
enter
test
adc
xor
sahf
push
invd
inc
jo
jmp
xchg
mov
mov
adc
dec
or
arpl
dec
dec
mov
and
incl
in
mov
pusha
pop
mov
jl
cmc
add
inc
in
das
sub
mov
mov
pop
loopne
bound
rorb
xor
or
and
subb
or
mov
xor
add
dec
loope
addr16
xlat
xchg
negb
imul
add
dec
lret
dec
leave
popa
adc
gs
stos
or
xchg
jmp
popf
clc
dec
push
or
adc
push
mov
xchg
mov
pop
dec
or
xor
xchg
mov
adcb
sub
jle
or
or
movb
add
adc
xchg
push
xor
pop
push
pop
lock
jge
not
cli
aas
stos
cmp
push
movzwl
test
pop
rcll
push
lcall
xor
lock
inc
xchg
cmpsb
in
pop
jae
les
or
mov
push
cmp
cmp
sbb
mov
mov
lret
mov
xor
pushf
mov
das
in
in
xchg
lock
mov
popa
inc
mov
add
sub
sti
sbb
sub
into
callw
xor
adc
ds
dec
or
add
mov
js,pt
ss
xor
push
loop
inc
cmp
jmp
inc
or
sbb
jnp
enter
or
inc
sbb
js
hlt
dec
dec
pop
adc
push
shl
orb
ret
jns
inc
das
js
jp
mov
test
pusha
lcall
add
lea
add
je
clc
fiadds
cltd
ret
jmp
or
xchg
fcmovb
insb
push
outsl
jbe
adc
jb
cmp
jmp
or
icebp
cmp
mov
push
or
lods
cmpsl
or
push
fdivrs
rorb
dec
rclb
mov
cmp
sbb
jne
aaa
sbb
insb
push
je
lret
enter
push
cmp
cmp
pop
mov
lret
add
mov
or
xchg
daa
xchg
arpl
sahf
fsub
mov
or
or
sahf
xor
cld
mov
ret
bound
jbe
pushf
rdmsr
sbb
clc
data16
and
rorl
push
jne
out
pop
inc
xor
call
loopne
or
ss
ret
or
shll
xor
int3
frstor
fdivl
cmpl
loopne
rol
and
addb
mov
or
andb
rorb
hlt
mov
sub
adcb
pop
data16
call
xchg
sbb
les
mov
cltd
or
bound
or
dec
loopne
repz
xchg
test
pop
popf
loop
mov
stc
mov
fwait
mov
sahf
mov
push
icebp
je
call
fimuls
setb
test
adc
lds
lret
cmpb
das
orl
aam
movsl
sbb
fbstp
sbb
call
add
push
or
adc
mov
xor
xchg
iret
rorb
cmp
push
inc
add
lea
rorb
mov
add
pop
adc
mov
clc
cmp
jne
cwtl
jne
dec
push
or
mov
sti
cli
incb
ja
subl
call
and
cmp
clc
mov
jne
adc
sub
lods
pop
rcrb
nop
call
inc
out
or
jmp
cmp
push
adcb
mov
push
popf
mov
push
loop
sahf
test
dec
test
subl
fstps
dec
mov
fmulp
inc
dec
jo
or
aam
in
negl
stos
je
loope
or
call
cmp
enter
mov
push
xlat
iret
add
out
mov
or
adc
dec
or
add
jmp
movsb
repnz
pop
rclb
sbb
dec
jb
xchg
shll
sub
mov
lea
cmp
adc
cmpb
pop
call
sbb
fwait
or
adc
push
lret
push
mov
dec
inc
cmpsb
cmpb
sarb
lea
xchg
mov
jbe
push
mov
lods
inc
mov
dec
js
add
call
adc
xor
fstpt
xchg
dec
add
jns
dec
sbb
push
mov
mov
or
into
ffreep
sbb
test
mov
cmp
jmp
dec
cmpsb
jns
mov
push
aad
push
insl
call
cmp
sub
add
cmp
cmp
push
add
mov
sahf
dec
xor
cmp
dec
in
rclb
jp
pop
pcmpeqw
dec
or
adc
cmp
adc
stos
xor
cmc
mov
cmp
mov
mov
xor
xorb
cld
icebp
sub
pushl
enter
imulb
js
sbb
pusha
adc
sub
jge
jns
inc
ds
mov
daa
sub
lods
cmpsb
add
dec
xchg
sbb
jecxz
fwait
jae
movsl
or
je
xor
pop
sbb
xor
xlat
push
and
adc
push
lret
int3
and
js
fildl
push
fidivrs
push
add
mov
jg
hlt
xchg
mov
dec
or
adc
dec
sbb
stos
jg
fsts
cmp
je
adc
call
mov
pop
jno
cmpb
inc
push
jne
pushf
pop
fnstcw
insb
or
jb
add
inc
insb
loopne
add
fsubs
movl
jb
cmp
mov
test
sti
mov
mov
add
ljmp
sub
sbb
dec
icebp
mov
pop
push
or
es
icebp
sub
and
add
aad
push
jmp
xor
adc
add
je
pop
mov
or
add
mov
inc
insb
jae
je
rorl
jo
add
xor
mov
and
ret
mov
sbb
lock
adc
ljmp
adc
cmp
cmp
jl
lods
out
add
inc
or
shll
cmpsl
enter
sbb
mov
push
adc
mov
dec
or
cs
push
cmpl
adc
inc
pop
jnp
push
sbb
jmp
movsl
inc
leave
insl
mov
lods
or
imul
and
push
mov
scas
and
add
add
push
loope
push
sbb
scas
stos
add
mov
cmp
ret
mov
add
push
ds
xorb
sbb
inc
push
add
adc
cs
je
test
jae
in
bound
mov
xor
mov
in
xchg
arpl
cmp
adcb
add
mov
or
cmp
or
mov
mov
or
add
dec
cmp
lods
or
xchg
mov
adc
add
adc
pop
xchg
loop
and
and
sbbl
fdivrs
dec
clc
jne
jmp
cmp
pop
adc
push
fcompl
repz
roll
push
fistpl
addb
orl
mov
icebp
adc
scas
add
add
lret
int3
mov
or
mov
arpl
aaa
ret
or
sub
loope
mov
dec
inc
imul
bound
int3
insb
add
jmp
aam
xor
cld
cmp
or
mov
cli
mov
jp
nop
add
jge
push
inc
outsb
call
xor
pop
xchg
in
mov
sub
pop
mov
push
xor
cmpsb
push
ljmp
inc
or
or
mov
jmp
je
lahf
add
jno
push
push
push
call
repz
xor
pusha
and
mov
inc
rcrb
mov
out
lcall
scas
mov
out
jnp
pop
call
in
mov
mov
mov
xchg
mov
mov
cmpsb
inc
xor
out
lahf
neg
jo
test
pop
je
jp
loopne
mov
sub
sbb
jmp
and
lcall
adc
aad
add
test
mov
ret
mov
sub
je,pt
cmpsl
push
in
int3
arpl
jbe
pop
xor
xchg
mov
scas
fadd
int3
inc
out
mov
push
cmp
ret
fcomps
mov
or
loopne
movsb
xchg
orl
cli
add
xor
mov
sbb
repz
push
insl
push
mov
pusha
and
call
js
add
adcb
daa
inc
sbb
or
or
call
jl
in
in
sbb
sbb
popf
lret
cmp
mov
pop
das
adc
push
outsb
hlt
lea
add
test
shrl
nop
push
push
imul
lea
sub
cli
jge
dec
test
add
adc
and
add
fidivrl
xchg
and
stos
repnz
stc
lock
add
mov
jecxz
and
or
shlb
push
fsubr
mov
mov
xor
inc
fsubrl
xchg
push
pop
cwtl
xor
dec
push
cmp
push
lahf
fldl
mov
jg
ud0
jmp
das
push
test
cltd
mov
je
call
push
push
mov
leave
cmp
adc
sub
xor
cmpsb
aas
cmp
cmpsb
in
add
lock
cs
sarb
fsubrp
xchg
xor
cmpsb
sbb
pop
push
sbb
dec
jmp
imul
aaa
rolb
movsl
push
mov
push
nop
jnp
cmp
xchg
stos
mov
or
jl
ret
loopne
mov
ds
xchg
add
push
push
je
sbb
xchg
icebp
arpl
mov
lret
jmp
mov
je
lar
lea
clc
jl
mov
mov
xor
jo
push
xor
dec
andb
shr
jge
add
adc
popa
arpl
test
fnsave
push
push
cmp
cmp
ret
mov
add
pushf
sub
call
jno
adc
test
dec
shll
aad
or
xchg
xchg
cmpsl
xchg
mov
mov
sarb
jmp
je
shll
sbb
das
push
sub
adc
loopne
call
int3
inc
loope
adc
jae
push
sbb
dec
addr16
inc
movl
call
push
pop
xor
out
les
push
xor
and
sub
dec
icebp
jne
push
repnz
fsubrp
sub
or
int3
subb
pop
pop
inc
shr
xchg
lock
push
test
cltd
jo
test
sub
pop
rcrl
mov
loop
cmp
les
jo
call
mov
rorb
outsb
into
loope
mov
call
jle
jle
push
test
jle
mov
mov
jb
enter
lods
sub
add
addr16
fildll
add
cmpsl
fnstcw
loopne
sub
scas
inc
ds
mov
xor
jmp
in
call
clc
adc
pop
pop
mov
jle
out
pop
add
adc
or
subb
add
test
adc
loope
test
adc
sub
shlb
pop
test
mov
icebp
or
or
movsb
andl
xchg
repz
hlt
add
pop
inc
add
cmp
in
icebp
sub
cmpl
hlt
into
ficompl
jns
adc
in
pop
add
push
lea
fmul
mov
dec
inc
mov
call
adc
add
fstpt
mov
sub
clc
subb
cmp
ss
jmp
mov
mov
jb
jbe
out
ds
int
push
subl
call
pop
push
jl
jmp
aad
push
xchg
imul
cmp
loope
dec
mov
and
push
xorb
sub
add
and
test
dec
add
jmp
insb
test
aam
xchg
pop
pop
stos
mov
mov
adc
dec
cs
sarl
xor
sbb
cs
fs
cmovne
lock
gs
int3
movsb
and
nop
inc
repnz
sbb
mov
loopne
cld
push
pop
stos
into
add
test
lods
es
call
push
push
in
outsb
lods
dec
or
das
leave
adc
push
fistpll
aad
outsl
adc
xor
or
or
bound
xor
aaa
or
mov
add
js
cmpb
into
or
testb
push
sbb
push
cmp
in
sbb
cmpsl
sub
pop
test
fimull
daa
mov
jo
les
adc
popf
mov
mov
push
sub
cmpsb
arpl
packsswb
sbb
test
inc
subb
cmp
das
xchg
push
repz
or
lea
mov
sub
cmp
andb
mov
add
mov
mov
dec
in
pop
mov
mov
punpckldq
faddl
enter
or
push
call
and
sbb
imul
mov
ja
insb
movl
pop
lahf
mov
fs
mov
bound
movsb
adc
add
loop
mov
in
roll
inc
sub
cmp
add
mov
ja
shl
jl
and
sti
fbld
pop
je
dec
jmp
lea
test
add
pop
jmp
enter
imul
mov
andl
cmp
mov
push
push
add
pop
add
jnp
call
or
faddl
mov
jg
cwtl
mov
rclb
mov
mov
or
push
xor
ficompl
ret
inc
sbb
inc
adc
shl
test
ror
push
add
aad
cmp
jle
push
pop
and
test
and
ret
mov
int
and
mov
sbb
inc
cmp
not
jg
adc
sub
push
loopne
and
xorl
shr
mulb
or
add
or
adc
lea
lock
add
xorb
inc
hlt
es
sbb
pop
xor
test
jle
and
add
shll
push
dec
pop
and
sbb
jae
in
push
inc
jle
scas
cmp
pop
mov
bound
push
cmc
js
lock
pop
sub
nop
push
clc
jbe
mov
or
loop
cltd
and
hlt
iret
call
popa
fs
dec
pusha
cwtl
fadds
push
jmp
cwtl
sub
scas
pop
bound
andl
jl
dec
mov
rcl
cmpsb
push
sub
mov
scas
out
sub
sub
dec
ja
cmpsl
mov
or
int
push
pop
and
cmp
test
mov
repz
cmp
xchg
add
xor
adcb
cmpsl
cwtl
add
jnp
jp
jae
pop
or
add
and
cmpsb
xor
inc
jnp
es
pop
js
sbb
ret
mov
mov
add
jecxz
xchg
mov
push
mov
lods
add
pop
ffree
add
outsb
cmp
cmp
js
cmc
lret
add
or
mov
loope
mov
and
int
in
inc
cmp
ficoml
das
pop
fldcw
xor
inc
cmp
je
mov
outsl
sbb
bound
rcl
add
pop
js
adc
jb
fsubrl
lods
adc
xor
ss
sets
outsl
fnstcw
fisubrl
dec
push
push
mov
dec
inc
int
sarl
cmpsl
bound
aaa
mov
push
or
imul
test
daa
push
movw
cld
mov
xor
mov
xor
xchg
addb
sbb
adc
scas
add
pop
adc
ret
or
jmp
fsubrs
pusha
insl
popf
pop
lods
lods
cmpb
add
std
mov
add
xor
movsl
shr
outsl
cmp
push
xchg
jae
pop
add
push
frstor
fmuls
clc
movsb
loope
and
jge
mov
xor
push
jb
add
jp
aas
cmp
lahf
lock
std
test
mov
sbb
call
adc
pushf
sbb
push
add
add
push
cmp
pop
in
sub
and
addl
push
or
pop
imul
lahf
cli
pushl
call
call
jne
dec
add
adc
xor
movsb
bound
xor
shrb
pop
pop
jns
cmp
mov
dec
ds
test
rclb
jmp
push
xchg
sbb
xlat
pop
daa
icebp
popa
shlb
xor
test
or
jno
jle
or
scas
xchg
sub
cwtl
mov
aad
aad
call
pop
cmp
pop
pop
xorb
loope
clc
cs
mov
popf
daa
push
xchg
add
ret
stos
add
xchg
push
xor
dec
inc
mov
pop
add
int
inc
test
push
adc
hlt
jo
mov
fs
cmp
outsl
lea
hlt
pop
jg
push
xchg
mov
leave
fs
dec
leave
or
jnp
pop
or
lret
jecxz
test
dec
stos
sub
pop
test
jmp
pop
mov
push
jle
sbb
ss
jne
jns
arpl
mov
js
mov
jne
jmp
addb
je
dec
js
fidivrl
sbb
sbb
fisubs
add
aas
je
mov
cmp
xchg
movsb
and
mov
push
or
aaa
sahf
jl
jb
in
shrb
call
dec
add
jp
xor
mov
or
ljmp
lahf
jp
mov
sbb
sbb
mov
add
ljmp
add
mov
cld
or
fcoml
dec
subb
cmp
jnp
sahf
push
ss
pop
lods
imul
jmp
jae
mov
xchg
push
fiaddl
fwait
push
push
rcll
push
or
ficoml
jmp
bound
lea
add
jbe
mov
mov
mov
add
mov
mov
bound
pop
pop
les
pop
loope
add
lahf
add
clc
cmp
stos
add
inc
adc
shl
cmp
in
lcall
in
hlt
adc
out
stc
or
or
or
or
test
pusha
push
pop
jmp
pop
in
aas
add
xchg
lret
mov
test
push
mov
daa
jne
sub
push
sub
cld
push
adc
stos
je
nop
xchg
inc
jae
jge
cmp
and
push
aaa
push
push
test
loop
push
add
xchg
shll
add
cmp
hlt
xor
inc
mov
inc
cmp
jb
mov
test
push
adc
lock
cltd
call
loopne
sub
pop
or
pop
daa
cmp
and
je
push
cmpsl
pop
mov
pop
cmp
cmp
cmp
add
pop
push
jne
jb
inc
mov
rcll
pop
adc
je
push
test
shlb
sub
ret
js
sbb
jne
pop
aas
stos
shl
push
pop
jp
pop
mov
pop
add
cmp
mov
mov
fcmovb
xor
shlb
lret
adc
ret
roll
int3
call
adc
jo
push
push
cmp
push
jecxz
sub
mov
out
out
mov
inc
test
cs
cmp
jg
inc
mov
lcall
scas
xchg
jbe
pop
add
push
das
lock
lods
cmp
mov
negb
cmp
pop
adc
ss
cmp
stos
inc
inc
sbb
xor
mov
lret
out
xchg
cmc
loopne
or
stos
orl
mov
add
push
test
xor
notl
or
orl
push
mov
mov
mov
or
in
push
insl
xor
xor
sbb
addl
cld
gs
jbe
pop
ret
push
in
je
call
pop
ds
jmp
mov
lock
inc
lsl
add
loop
adc
pop
enter
ja
mov
jle
xor
mov
test
pop
add
mov
push
pop
dec
jbe
add
push
xchg
es
rorl
jo
xchg
mov
sub
mov
jmp
dec
cmp
adc
int
adc
or
jne
cmp
adc
jecxz
mov
mov
adc
xadd
mov
call
icebp
ficoml
jge
jg
sbb
jo
xor
push
add
fdiv
fistpl
fistl
push
xchg
and
aam
and
fstl
mov
push
mov
push
push
inc
popa
push
add
push
jno
mov
add
test
or
cmc
ret
xor
jmp
dec
mov
aad
rolb
add
jl
insb
shlb
fsts
call
inc
scas
addl
cmpl
sub
and
shll
cmp
rorl
dec
aas
push
popf
jmp
or
pop
outsb
je
das
shrb
cltd
inc
rsm
mov
sti
sub
aaa
add
pop
jb
cmp
adc
fcoms
sbb
sub
fsubr
fidivrl
cmp
adc
mov
push
xchg
or
mov
cltd
clc
addb
sbb
lods
or
loope
fcoml
pop
jmp
jl
cld
cmc
sbb
mov
lds
add
aad
add
inc
cmp
jo
inc
jo
rolb
adc
push
js
sub
xor
add
xchg
mov
xchg
clc
clc
or
pop
push
ja
imul
or
lock
cmp
sub
xchg
addl
mov
aaa
mov
or
add
adc
or
loope
adc
add
or
enter
or
fld1
repnz
or
sbb
mov
cmp
and
mov
adc
insb
pop
outsb
sbb
xor
in
and
and
sbb
and
jne
ss
cwtl
ficoml
cwtl
lock
cmp
jmp
xor
ja
call
nop
std
push
leave
ljmp
cmpsb
pop
rolb
xor
jns
roll
scas
ret
dec
loop
sbb
jmp
or
adc
movb
shll
jg
push
cltd
and
jb
xchg
mov
xor
test
loop
loopne
jo
xlat
mov
adc
cmp
sahf
cmpsb
cwtl
push
leave
push
push
fistpll
iret
jl
xchg
push
mov
sub
xchg
sbb
mov
fucomip
orl
inc
lods
arpl
inc
or
lock
push
jb
decb
adcb
dec
pop
rcl
mov
leave
adc
insb
scas
lods
imul
lock
push
or
jmp
mov
xor
push
pop
lock
push
insl
lock
arpl
mov
hlt
shrl
push
daa
fstl
nop
push
xor
xchg
cwtl
clc
or
push
je
pop
popf
jmp
sahf
push
xor
cltd
push
or
insl
inc
into
sahf
test
push
and
jle
pusha
arpl
pushf
inc
into
pop
jl
jg
pusha
mov
jno
xor
mov
je
mov
clc
fucom
push
fdivs
mov
cmp
xor
inc
or
dec
fwait
shll
cwtl
outsl
jmp
sub
sub
notb
adc
subl
aas
pusha
xchg
mov
ror
insl
or
mov
cmc
cmp
sbb
mov
testb
and
adc
je
dec
mov
and
jmp
sbb
add
add
es
inc
push
ret
hlt
push
mov
shll
adc
dec
call
jmp
les
sub
fs
fmuls
sar
and
cltd
push
mov
fstps
cmp
jo
sbb
or
rcrb
lea
add
movsl
cmpl
rol
xor
mov
in
insb
mov
fimuls
mov
idivb
rcrl
lret
or
inc
cmp
int3
aam
into
mov
scas
mov
ljmp
cmp
adc
fs
sub
sub
push
lahf
xchg
ret
jp
hlt
mov
cltd
mov
testb
cmp
orb
outsl
mov
mov
adc
movl
adc
adc
out
sub
push
repnz
loopne
dec
and
xorb
ss
add
loop
pushl
jg
cmp
jl
cmp
cmp
push
inc
jle
cmp
cli
rcll
jle
cmp
jg
in
ret
push
aaa
xor
xor
outsb
xor
add
mov
sub
add
mov
mov
loop,pt
inc
add
in
insb
push
call
cmp
cmp
adc
dec
lods
sbb
jge
aaa
cmp
xor
inc
clc
dec
clc
out
or
mov
dec
test
or
jbe
cltd
inc
insb
or
sub
in
add
sbb
and
push
call
daa
fists
repnz
div
xor
xor
mov
add
push
jl
movl
xchg
adc
dec
xchg
or
add
dec
cmpsl
fs
lods
xchg
lods
mov
dec
scas
sbb
add
cwtl
stos
inc
outsl
mov
xchg
lea
jo
jge
dec
add
or
cmp
mov
js
subb
popa
push
lock
shrl
add
add
or
roll
rorb
add
lret
inc
rcrb
lcall
push
nop
mov
hlt
negl
mov
cmp
call
push
mov
xor
aad
xor
and
pop
cmp
imul
movsb
add
test
data16
or
mov
or
push
push
sbb
xlat
adc
or
mov
push
insb
add
je
jl
fstl
js
sahf
cmpb
je
outsb
lcall
call
cmpl
jne
add
jmp
or
call
xchg
add
or
push
test
push
ds
popa
sbb
cmp
mov
lahf
outsl
and
jle
and
pop
push
je
jp
mov
cmp
cmp
jns
lcall
or
sub
or
in
cmp
or
or
inc
jmp
add
dec
xchg
push
jne
lea
add
mov
decb
push
push
push
xchg
rcrl
add
push
into
xchg
test
cmp
imul
pop
fidivl
jne
or
ret
lods
add
movsl
mov
push
push
dec
call
loopne
and
and
pop
adc
fchs
mov
adc
sbb
cmc
sub
nop
adc
push
pop
mov
jmp
and
adc
jne
cmp
je
cmp
je
dec
xor
adcb
or
cmp
pushl
call
xor
or
inc
cmp
jbe
js
das
lret
sbbb
add
inc
push
pop
test
loope
lods
popf
jae
push
lcall
andl
or
jmp
add
and
pop
push
mov
add
inc
push
pop
mov
jne
and
mov
xor
mov
mov
push
call
xor
jge
add
adc
aad
and
or
clc
or
jp
pusha
push
fcoml
je
push
adc
inc
aas
mov
xchg
loopne
add
xor
jle
loopne
movsl
or
jle
cmp
or
mov
mov
pop
dec
jmp
inc
cmp
pusha
ret
or
subl
inc
sbb
insb
and
ficoml
aad
cmpsb
mov
std
lock
sub
insb
ss
cmp
sbb
cmp
and
jmp
fcmovbe
jl,pt
cmpl
or
push
xchg
adc
fld
stos
fsubp
scas
jmp
mov
ds
mov
and
adc
inc
push
adc
aam
add
pop
dec
popf
mov
pop
xchg
inc
test
adc
jne
sub
jecxz
js
lds
std
es
xchg
mov
or
push
push
loopne
sub
push
push
dec
aaa
adc
jno
mov
inc
push
loope
add
or
and
adc
jp
das
mov
andb
lea
or
add
dec
cmp
mov
push
test
int
ss
subb
mov
int3
and
repz
pop
and
movl
lcall
sbb
push
popf
inc
outsb
rorl
cmp
cmp
mov
jne,pn
inc
mov
xor
pop
and
and
jle
mov
cmovg
adc
aad
pusha
xchg
add
xor
in
jo
mov
push
cmp
cwtl
sub
ja
sbb
push
lock
stos
ds
jo
cs
mov
test
add
out
and
mov
xchg
cmpsl
call
ss
rcrb
adc
pushf
inc
sbb
les
xor
pop
mov
cmp
scas
or
popa
cmp
sbb
fdiv
lret
cmp
data16
in
mov
and
pop
je
or
mov
cmp
es
test
push
test
pop
jp
sbb
and
mov
sub
jns
jo
sbb
arpl
and
sbb
je
xor
lret
pop
add
cmp
cwtl
adc
adc
push
in
in
pop
stos
cli
adc
sbb
insb
popa
push
and
inc
dec
sbb
mov
dec
xor
and
lods
push
or
bound
jb
pop
xchg
mov
lcall
push
xor
mov
adc
dec
sub
subb
test
cmp
js
sbb
push
movd
add
sub
inc
dec
daa
dec
pop
dec
pop
cmp
jmp
add
pop
js
scas
mov
mov
inc
mov
mov
push
push
xchg
leave
and
movsb
sbb
shlb
mov
ret
mov
add
pop
ja
push
mov
pop
jo
sub
ret
mov
mov
or
pop
add
jp
inc
pop
outsb
push
insl
lods
add
sbbl
ret
mov
rcll
in
pop
mov
out
call
mov
mov
inc
mov
add
xor
lahf
fdivs
jge
sbb
cmpl
push
xchg
add
adc
dec
mov
das
test
mov
add
sub
in
leave
popl
mov
mov
push
jno
sub
cmp
xor
add
xchg
mov
push
lcall
sbb
test
in
mov
push
lahf
jle
add
cli
test
je
sbb
cli
insb
je
or
xor
cli
in
lods
xchg
addb
add
sbb
add
xor
dec
pop
push
clc
dec
clc
call
mov
mov
inc
test
mov
ja
jmp
push
cmp
push
adcl
jg
je
sub
je
or
pop
dec
ja
xchg
xor
sbb
lods
jb
adc
sbb
cmp
dec
popa
loope
xchg
shl
repz
test
or
add
and
add
xor
in
pop
mov
es
xor
ljmp
push
clc
subb
xor
arpl
push
dec
cmpsb
gs
mov
cld
sub
rcll
fstps
out
inc
sub
adc
or
add
push
and
hlt
test
push
push
and
fsubs
and
inc
data16
cwtl
adc
testb
rcrb
movhps
pop
dec
addl
movsb
cmp
mov
in
sub
dec
cmp
or
cli
xor
je
mov
or
jp
mov
inc
adc
dec
or
ret
mov
mulps
fdivs
leave
push
adc
daa
icebp
mov
xor
cmp
scas
inc
cmpsl
xlat
cmp
das
fwait
cltd
pop
dec
stos
fdiv
jmp
call
daa
fdivl
add
mov
scas
cmp
movsb
adc
mov
sub
rcr
push
insb
pop
push
or
scas
mov
int
pop
xchg
jl
sbb
push
add
mov
cmp
movsl
xor
test
pop
cs
popa
fs
push
or
dec
jbe
fcoml
inc
xor
aam
xor
lret
jbe,pt
icebp
leave
add
testb
in
adc
call
add
mov
and
test
rol
sub
lds
mov
mov
cmp
ds
sbb
sbb
pop
and
add
mov
mov
mov
cmp
mov
leave
lods
mov
or
hlt
cmp
rcll
fildll
jbe
rorb
add
xchg
and
nop
in
enter
loopne
pop
arpl
push
gs
daa
jno
dec
mov
rclb
jnp
enter
jnp
dec
fstl
rol
loopne
pop
rcll
push
add
jns
roll
add
cwtl
imul
sbb
ret
or
rorl
int
inc
enter
xor
add
dec
adc
sub
outsl
or
jecxz
adc
mov
push
sbb
out
cmp
sub
pop
push
nop
push
cmc
inc
sarb
lock
fsubr
loop
movsl
add
jne
ret
dec
sbb
repz
icebp
pushf
js
imul
fcoms
jecxz
xlat
push
jmp
cmpsl
mov
popa
aam
cli
cmpsl
ja
xchg
insb
jno
stos
cmp
movsb
andl
pop
adc
fsubr
cmp
bound
daa
push
mov
inc
push
mov
cmc
mov
xchg
add
mov
push
cmc
add
aaa
jg
sub
js
imul
lods
add
inc
mov
and
das
ret
push
lods
or
inc
push
pop
std
and
rorl
mov
shlb
inc
clc
xor
xor
loope
inc
adc
xchg
test
aaa
jle
cmp
push
sbbb
pop
notl
js
sbb
push
push
shll
mov
stos
fs
push
cmp
mov
movsb
sahf
jle
aas
movsl
jg
jns
pushl
fwait
mov
test
cltd
sub
dec
imul
fsubl
loopne
add
call
movl
mov
or
ljmpw
sub
cmpsb
jl
jl
rcrb
test
xor
movsl
pusha
test
mov
dec
push
cmp
pushf
lret
popa
jge
test
jne
push
lock
out
pcmpeqw
lret
mov
addb
orl
pop
cld
cmp
sahf
setne
push
xchg
lock
push
pop
push
dec
inc
andl
test
orb
andb
loopne
pop
aaa
push
pusha
or
popa
sbb
pusha
inc
je
or
mov
sbb
sub
sub
push
mov
in
movsl
je
fdivs
imul
adc
cli
mov
sbb
in
loopne
add
test
ss
loopne
jo
or
ret
idivl
call
pop
cld
ficomps
test
or
jle
xor
jge
mov
sub
adc
clc
adc
pushf
jp
sub
pusha
xchg
test
inc
ret
lret
xor
push
pop
sbb
loop
push
ja
js
push
cmp
mov
call
sbb
fsubrl
cmp
pop
xor
cwtl
pop
push
mov
push
mov
clc
fisubs
push
nop
pop
push
addr16
xor
sbb
subl
mov
pop
or
imul
mov
ret
adc
cmp
pusha
push
addr16
out
ret
dec
out
call
das
mov
int3
push
cld
sbb
dec
pusha
ss
rcrl
cli
dec
loopne
sbb
sub
mov
icebp
cmp
clc
jle
leave
call
jge
imul
jl
scas
hlt
push
js
push
mov
out
call
inc
dec
adc
sub
inc
test
or
call
mov
mov
mov
push
mov
mov
data16
add
call
fs
dec
rclb
push
xor
mov
and
out
fdivrl
push
roll
cmp
mov
jecxz
push
pusha
iret
jbe
shlb
repnz
aad
cmp
rclb
mov
data16
cmp
es
fsubrl
ja
push
dec
cmc
mov
push
test
dec
add
in
mov
std
enter
insl
pop
imul
call
jno
int
sahf
into
loopne
into
mov
dec
shll
mov
jb
repz
push
daa
stc
loope
jns
je
or
adc
dec
dec
or
inc
dec
cmpsl
and
outsb
in
aad
dec
or
jmp
pcmpeqd
bnd
out
xchg
psrld
insl
popa
cmp
sbb
rorb
sub
dec
shrb
sub
xchg
xor
lcall
repnz
adc
adc
push
sub
rorl
and
daa
and
and
push
dec
mov
push
and
fs
mov
push
inc
mov
mov
das
or
push
faddp
dec
shr
je
mov
dec
add
rcrl
xor
xor
add
push
shrb
fldl2e
push
mov
ja
or
data16
call
hlt
inc
arpl
outsb
mov
mov
rclb
notb
out
dec
or
dec
cmp
cmp
call
and
and
adc
sub
je
dec
lret
mov
sbb
enter
loop
pop
mov
mov
sbb
sub
jmp
or
testl
xchg
lcall
int3
insb
jge
test
shlb
subb
adc
ds
lock
push
nop
icebp
add
push
lcall
rclb
inc
or
or
adc
test
pop
cld
inc
fisubl
adc
movsb
mov
mov
mov
push
sub
mov
fwait
aam
mov
in
arpl
outsl
xchg
inc
mov
push
push
sub
xorb
sub
cmp
fsubrs
sub
jne
push
or
push
inc
push
jmp
pop
push
test
and
jo
and
xor
rol
and
lea
hlt
adc
or
pop
and
add
fdivrl
and
aam
push
jb
lahf
cmp
xchg
testl
jnp
and
dec
leave
dec
dec
mov
dec
cmp
jo
pop
and
add
and
sahf
dec
and
mov
and
xchg
push
and
inc
fildl
repnz
xchg
iret
inc
les
mov
out
adc
dec
fnsave
scas
call
or
sbb
imul
ds
aaa
add
add
in
or
lahf
aas
or
ss
cltd
pop
les
sbb
test
xlat
movsb
in
xchg
pop
aam
aas
sbb
in
nop
dec
push
mov
sahf
xor
sbb
mov
inc
imul
cmc
in
add
sub
jo
adc
into
pop
push
push
imulb
int3
pop
add
xchg
test
sub
sub
push
cmpsl
fdiv
lock
lods
fs
int3
cmp
cs
dec
or
mov
push
mov
loopne
sub
out
scas
inc
call
inc
mov
inc
mov
sbb
dec
hlt
aam
push
pop
stos
inc
xchg
mov
or
adc
jae
or
sbb
xor
call
lods
add
push
repnz
sub
shl
in
popa
stos
or
inc
jo
call
mov
fadd
aam
dec
emms
jae
cmc
sub
jae
cmp
dec
sbb
addl
inc
dec
add
cmp
in
inc
lea
pop
mov
pop
pop
inc
loope
mov
cld
xchg
in
inc
xlat
adc
push
xchg
mov
cmp
xchg
sub
lock
mov
xor
xor
adc
cmp
push
cli
xchg
cs
in
mov
out
addl
jmp
dec
scas
mov
cwtl
adc
movsl
in
imul
lahf
cltd
push
inc
inc
mov
lcall
gs
push
add
test
ror
mov
jmp
call
daa
stc
xchg
orl
call
mov
shlb
imul
jmp
dec
psrld
inc
dec
push
or
loope
cltd
and
in
test
scas
push
enter
or
jl
jl
push
dec
push
cmp
sbb
xchg
cmp
rcrl
adc
dec
inc
xor
pop
or
cmp
stos
add
js
mov
fs
sub
push
imul
sub
push
mov
mov
fs
loop
adc
movsb
jle
dec
clc
mov
mov
mov
pop
mov
push
mov
ficoml
mov
movzwl
dec
xor
mov
fadds
push
sub
mov
or
fcoml
push
push
inc
and
lock
push
adc
clc
je
pop
lret
cmp
sbb
sub
into
enter
int
sbb
xchg
div
rclb
out
mov
imulb
int3
mov
jmp
or
and
cs
mov
mov
inc
das
mov
pop
es
push
cmp
pop
xor
stos
push
and
push
push
pop
test
mov
mov
sbb
ljmp
lds
aad
xchg
xchg
stos
xor
int3
mov
sbb
test
xor
nop
call
mov
sbb
mov
cltd
mov
rdpmc
mov
int
cmp
jb
call
jae
movsb
cmovno
sbb
or
mov
cwtl
mov
xor
enter
push
add
sub
out
jnp
call
addr16
rcll
xor
inc
notl
or
mov
push
aad
loopne
lret
daa
push
jmp
xchg
inc
pop
call
cmp
xor
dec
and
das
dec
shlb
test
mov
in
into
pop
fdiv
mov
mov
in
mov
or
fnstcw
xchg
adc
mov
aas
mov
bound
adc
aam
pop
jl
jae
pop
nop
or
sub
mov
cmp
add
dec
ljmp
push
shll
fsubr
ljmp
fildl
push
mov
mov
push
and
cmp
mov
loope
cmp
push
jl
jno
test
adc
test
or
or
fiadds
cmpb
sub
popa
sar
call
jo
adc
test
adc
mov
rorl
adc
inc
mov
stos
cmp
rcrl
pop
jl
shrl
pop
psubsb
jle
and
and
jae
int3
jl
or
ljmp
pop
test
xor
dec
sub
das
mov
and
or
lret
cmpsl
andb
call
imul
je
outsb
testl
imul
adc
js
inc
or
add
push
sbb
mov
fistpll
in
cmp
jmp
test
mov
pop
loopne
mov
popa
stos
jp
cmp
js
xor
sub
test
jle
xor
arpl
shrb
mov
clc
and
sbb
ds
push
je
call
cmc
add
popa
enter
jo
cmp
movsl
xchg
and
call
adc
jbe
pop
roll
push
call
pop
add
xchg
cmp
push
sbb
mov
adc
or
into
add
inc
lods
inc
clc
out
lods
xlat
jmp
lods
jmp
jns
rorl
pop
icebp
add
call
cs
or
je
push
loope
cli
push
xorl
dec
xchg
push
in
jge
pusha
adc
or
repnz
orb
jmp
mov
mov
int
xchg
add
cld
ret
jp
push
les
jne
lea
movsl
je
jnp
out
enter
push
adc
enter
jmp
cmpb
or
inc
jne
daa
mov
jl
push
punpckhbw
cmp
sti
out
mov
jmp
or
test
xor
dec
in
add
nop
cmp
or
cmp
or
ljmp
sbb
pusha
lret
jmp
or
xchg
push
dec
test
nop
xchg
test
insb
xchg
cmp
seto
or
nop
xchg
mov
adc
aaa
xchg
adc
fs
pop
dec
idivb
inc
fnstsw
jns
lret
ljmp
push
or
sbb
out
add
adc
add
push
and
lods
dec
push
cltd
in
inc
or
call
jo
test
enter
lock
test
fsubrl
cmp
pushf
cmp
cs
fs
out
or
cmp
inc
enter
mov
cs
sbb
popf
unpckhps
xchg
rcrb
test
aaa
dec
hlt
out
in
xchg
or
mov
xor
push
enter
adc
pop
cmp
xchg
or
inc
js
sbbl
pop
xor
pop
dec
xor
dec
dec
inc
add
repnz
jo
aaa
testb
push
xor
cltd
xor
leave
ja
sbb
jbe
sti
mov
cmpl
push
push
jns
and
fs
push
std
ss
dec
in
and
and
lock
adc
pop
stos
in
or
ds
dec
rorl
repnz
out
adc
cmp
cmp
clc
stos
dec
dec
leave
enter
lsl
jb
popa
sbb
adc
inc
call
cmp
les
pop
leave
mov
stos
sub
xor
imul
inc
push
mov
rcrb
mov
xor
in
push
xchg
jl
push
mov
or
xor
in
ljmp
ljmp
xor
or
mov
adc
jmp
adc
in
fs
dec
push
dec
push
mov
inc
cmp
xchg
cld
loop
cmp
aas
pop
sbb
inc
dec
cmp
test
push
je
add
xor
and
jae
adc
pushl
loop
mov
or
jne
dec
add
sbb
or
rcrb
pop
cmc
xor
out
jb
xchg
push
mov
or
leave
adc
or
cld
push
xor
inc
mov
cmpsb
dec
inc
in
or
dec
dec
dec
pop
nop
dec
inc
scas
adc
dec
cmpsb
pusha
sbb
inc
fs
sahf
push
fdivl
xor
cmpsl
xor
push
xor
cmpsb
out
insb
xor
adc
loopne
pop
mov
dec
test
incl
sbb
and
dec
or
repz
sub
xlat
in
xchg
push
xor
lds
mov
jb
push
pop
add
lock
negb
xchg
dec
xor
dec
xor
jb
dec
xor
adc
enter
inc
sub
jo
pop
push
decl
add
movsb
je
das
push
pusha
gs
movsl
xor
inc
mov
pop
leave
and
ja
inc
enter
fisubrs
cmp
test
xor
in
cs
pop
adc
jb,pn
lret
or
in
in
or
shrb
or
inc
push
es
test
push
cmp
test
cmpl
sub
pop
xor
sbb
sub
jnp
gs
pop
xchg
add
push
pushf
and
adc
sub
sub
in
loope
subb
cmp
jbe
mov
adc
incl
inc
lahf
shlb
pop
dec
and
mulb
arpl
add
adc
aam
rorl
xchg
jmp
mov
cwtl
rcrb
js
or
ficoml
push
dec
fsubr
xchg
sub
mov
cmp
mov
gs
daa
nop
jne
mov
xchg
sahf
ficompl
add
mov
aam
rcrl
call
outsl
jbe
jne
push
test
push
pop
jb
int3
inc
shrb
cs
aam
test
dec
aam
not
xor
je
sub
mov
aaa
sub
sahf
and
or
xchg
mov
scas
pusha
mov
imul
add
and
ds
clc
cs
lods
xchg
sbb
rclb
ret
mov
and
push
filds
mov
cltd
xchg
sbb
mov
sub
aam
jbe
add
pop
call
test
add
decl
int3
push
push
xchg
cmp
pushf
outsb
xor
push
sub
and
out
jg
mov
cltd
sbb
sbb
inc
loopne
or
add
in
and
je
xor
loopne
sub
cmp
movsl
and
inc
push
and
shll
sub
xchg
test
mov
shll
sub
in
rorl
add
xchg
add
sbb
or
scas
sbb
push
xchg
ljmp
dec
repnz
push
jns
fbld
sub
cli
push
repnz
jmp
enter
push
lds
outsb
jecxz
orl
push
inc
lock
jmp
in
test
or
cs
into
xor
shrl
je
xchg
jnp
rclb
sub
es
adc
lock
je
xor
out
mov
insb
mov
rcl
cmp
je
ds
push
xor
jge
pop
sbb
xor
lret
or
jl
or
jns
daa
repz
daa
push
nop
shrb
push
dec
push
push
daa
dec
mov
xor
jno
sub
pop
inc
mov
rolb
mov
inc
xor
adc
stos
addb
adc
inc
loopne
mov
lods
jnp,pt
lds
call
inc
sub
mov
cmp
lea
lea
dec
xor
add
adc
lods
lret
aam
xor
add
pop
loop
insb
shrl
bound
das
and
adc
mov
add
pop
inc
mov
adc
xor
call
test
pop
xor
dec
push
dec
jmp
sub
mov
jne
xor
cmpsl
nop
push
shrl
minps
xchg
mov
push
dec
js
pop
pushw
add
pop
add
scas
stc
dec
cmp
mov
in
pop
sub
pushf
push
xor
js
js
and
adc
xor
sbb
inc
pop
in
lret
cmp
ss
ret
aam
cwtl
dec
fisubrl
inc
mov
dec
and
pop
add
xchg
xor
jge
xor
jns
xchg
fisttps
adc
hlt
stos
repz
dec
jg
jl
mov
int3
rolb
aaa
dec
ja
dec
int3
cmp
and
daa
loopne
lock
call
mov
ss
rcl
jecxz
pop
in
rcll
loopne
pushf
mov
fmul
xor
outsl
mov
adc
and
mov
dec
lds
or
jne
fstpt
and
pop
mov
inc
mov
test
add
lods
mov
test
shrb
push
xchg
mov
push
in
add
push
ffree
adc
mov
push
inc
decb
inc
inc
test
test
inc
mov
jmp
das
in
or
dec
andl
aad
push
mov
mov
dec
sti
or
mov
daa
psubsb
jecxz
imul
movl
jns
add
aad
mov
lahf
pop
push
loopne
clc
adc
out
pop
jle
addr16
add
cltd
jp
scas
loope
cld
inc
pop
mov
and
cmp
add
add
pop
sub
or
mov
mov
add
lods
gs
test
pop
dec
mov
mov
lods
insl
es
call
and
lods
es
sbb
shrl
lock
add
jg
push
pop
faddl
call
and
sub
cltd
and
jmp
repz
inc
out
enter
loope
sub
bound
pop
imul
out
sub
mov
cmpps
mov
jmp
inc
fcmovu
push
les
xchg
lods
call
mov
mov
ret
xor
sbb
xchg
or
cmp
and
mov
ret
and
xor
push
dec
sbbb
sahf
xchg
gs
cmp
call
push
xchg
ret
mov
pushf
call
push
bnd
xchg
aam
mov
xlat
adc
cwtl
call
jb
pop
call
xchg
jmp
adc
enter
cmp
inc
push
push
cs
and
xchg
jecxz
out
sbb
push
adc
sub
xor
arpl
fildl
ja
aas
mov
xor
pop
lock
pushf
call
es
adc
or
lret
adc
jo
ret
push
dec
mov
push
and
popl
div
xor
cmc
mov
lds
jmp
lcall
add
mov
xchg
mov
pushf
dec
mov
xchg
pop
popl
scas
dec
pop
les
mov
lock
sbb
outsb
cmp
add
call
xor
imul
cmp
dec
pop
and
or
xor
pop
dec
test
icebp
push
rcll
fsubs
jecxz
push
daa
fsubrs
orl
fdivs
incl
dec
xchg
arpl
cmp
rolb
clc
xor
cmpsl
clc
loope
cmpsl
mov
clc
jmp
push
push
shrd
popf
or
arpl
xchg
xor
sub
push
jmp
xchg
fsubr
push
push
mov
add
js
sbb
sbb
inc
and
mov
js
std
mov
mov
push
mov
rclb
sbb
mov
cld
mov
jge
lret
clc
add
fcoml
aam
clc
lret
xlat
nop
push
pop
push
dec
mov
mov
mov
lds
or
jp
pop
and
lcall
push
outsb
jne
fcompl
je
sarb
push
scas
cmpsl
xor
xchg
mov
or
push
mov
push
orl
les
or
push
pop
int3
daa
js
pop
addr16
sbb
in
rcr
lret
sarb
mov
or
sbb
pop
clc
pop
mov
ret
jl
shlb
or
fidivl
ret
mov
ficompl
icebp
mov
push
mov
push
mov
les
push
ret
jge
pop
inc
cltd
loopne
repnz
sbb
pop
and
add
jmp
or
movsb
adc
add
push
inc
xor
or
sbb
out
mov
inc
js
and
sbb
rolb
and
jecxz
test
mov
sbb
xor
push
inc
out
pop
push
arpl
ss
or
ret
jno
jmp
mov
xor
cmp
and
add
mov
not
fdivrp
inc
nop
sbb
lret
push
test
lea
cmp
sub
ja
jge
jmp
push
mov
jecxz
ss
call
mov
mov
stos
push
call
mov
add
call
cmp
pushf
mov
dec
adc
test
and
insl
inc
mov
add
call
outsb
in
adc
add
cs
mov
pop
pop
sbb
movsb
pusha
test
adc
cmp
dec
push
pusha
cltd
and
fbstp
mov
adcl
adc
test
imul
mov
lods
dec
inc
mov
push
mov
cmp
fsub
cld
add
pop
dec
xor
sub
add
addl
je
jno
adc
in
mov
push
push
sub
rcrb
mov
cmpw
adcb
xor
adc
xchg
dec
dec
inc
add
or
je
and
cmp
adc
lea
ljmp
sbb
rolb
xchg
int
dec
jbe
mov
repz
inc
jns
xchg
je
add
clc
orb
dec
cwtl
push
xor
adc
adc
dec
aad
pop
jmp
or
cmp
rcr
sub
inc
push
mov
xor
adc
push
pop
or
adc
sub
std
xor
adc
call
hlt
ljmp
rclb
lret
gs
add
lea
and
pushf
push
xor
fadd
test
xorb
jp
add
add
pop
push
cli
jle
push
mov
jne
lock
sbb
mov
jmp
add
data16
ljmp
int3
pop
add
test
je
lods
movsl
lods
insl
mov
pop
push
insb
xor
test
mov
leave
push
pop
and
pop
ret
pop
ja
sbb
push
in
rclb
jmp
pop
jne
jmp
pusha
mov
sbb
dec
inc
inc
add
je
ret
loop
cli
pop
jecxz
sub
sbb
fnstsw
inc
pop
and
inc
inc
rorb
add
add
sahf
movsb
inc
lock
or
repz
decb
adc
shrb
addl
adc
push
jbe
push
push
pop
fmull
add
sub
cmp
je
push
pop
je
adc
je
pcmpeqd
lock
sub
mov
pusha
mov
xor
jmp
jle
bound
add
or
xor
dec
mov
add
mov
cmp
pop
mov
aaa
negl
pop
sbb
pop
cmp
ss
pop
popa
in
xchg
xor
sbb
jbe
jae
add
dec
andb
and
pop
test
stc
adc
and
nopl
push
cmp
xchg
sub
ret
out
or
pop
xchg
push
push
imul
movl
adc
jp
pop
adc
les
aaa
adc
pop
pop
stos
es
adc
push
pop
aaa
imul
mov
mov
or
add
jne
cmc
orb
jge,pt
dec
and
call
inc
and
pop
ljmp
subb
add
sbb
insb
push
testl
call
mov
add
movsb
popa
and
outsb
sub
and
sub
aam
xor
nop
ss
xor
mov
into
add
testb
dec
adc
lods
inc
or
mov
mov
insb
push
out
enter
push
out
jnp
outsb
imull
push
push
jne
or
and
mov
or
inc
add
dec
sbb
rcll
sar
mov
lea
mov
adc
add
jo
aaa
push
push
sbb
movsl
sub
pop
inc
adc
dec
push
or
push
jo
call
add
jb
push
fildl
push
jge
subl
shl
inc
addr16
inc
jae
cmp
insb
subl
cmc
test
add
clc
jo
adc
cmp
jo
clc
cld
hlt
push
faddl
scas
fisttps
and
cltd
loopne
mov
push
push
stc
aad
and
sahf
lock
clc
sub
imul
mov
lods
packsswb
push
jae
lock
sub
inc
jle
aas
adc
inc
lds
jl
rcrl
cmp
push
in
add
sbb
pop
cmp
add
call
adc
sbb
mov
add
push
adcb
adc
and
sub
xor
cld
aaa
add
addb
dec
add
test
mov
cmp
inc
add
stos
push
xchg
pop
inc
clc
adc
push
call
movsb
es
xor
inc
adc
add
insb
adcb
inc
add
push
pop
adc
cmc
rolb
aas
lods
xchg
cmp
pop
add
or
push
inc
call
pop
rcrl
pop
push
inc
jmp
pop
jne
fidivrl
push
xchg
lret
or
and
jnp
xorb
adc
or
or
xchg
mov
or
dec
adc
adc
mov
add
hlt
pop
add
ja
xor
xchg
call
jnp
int3
outsb
das
mov
popa
ret
lea
cmpb
mov
push
nop
test
and
jb
pop
lock
add
xchg
and
xor
cmp
shl
mov
test
add
adc
rolb
ja
mov
das
stos
es
js
shll
add
jno
xchg
pop
dec
inc
mov
mov
scas
lret
call
adc
or
or
adc
movsb
or
inc
inc
push
shlb
lahf
inc
sub
adc
pop
pop
and
mov
rcl
xchg
popf
inc
and
call
xchg
pop
or
pushf
stc
movl
mov
inc
sub
testb
sbb
insb
sbb
rorb
adcl
fcmovnu
rclb
clc
sub
or
cmovnp
mov
ud0
test
add
add
pop
fisttps
sbbl
imul
les
cmc
in
jl
scas
fs
insl
mov
adc
lock
dec
sub
and
inc
loope
andb
sarl
and
and
std
inc
sti
mov
adc
mov
jmp
fidivl
call
mov
xchg
sbb
xchg
or
push
leave
rcll
arpl
push
ret
std
dec
js
inc
insb
push
mov
mov
dec
mov
adc
xlat
pop
sbb
aas
sub
das
add
cmpsl
mov
call
cwtl
cwtl
cmp
push
imul
inc
jle
call
sbb
mov
in
sub
leave
jne
mov
shll
inc
psubsb
or
mov
bound
mov
divl
paddusw
cmp
jl
or
fwait
outsb
xchg
push
sub
adc
or
xor
mov
adc
stc
xchg
fs
push
fwait
mov
fcompl
call
inc
push
in
sbb
xor
insb
mov
pop
stc
dec
add
stc
leave
and
mov
loopne
mov
in
or
xchg
je
dec
push
cmp
jo
add
in
pusha
jo
outsl
test
mov
inc
or
fsts
push
push
call
push
push
cmp
pusha
dec
xor
or
add
xor
outsb
xchg
sbb
mov
or
rcl
insb
adc
leave
mov
popf
pop
incb
and
shlb
lock
jo
fisttpl
and
in
notb
mov
xchg
fcompl
loopne
insb
cmp
sbb
les
ss
fadds
imul
mov
test
xor
shll
and
push
xchg
adc
jmp
dec
cmp
lock
mov
mov
xorps
cmp
push
rcr
xor
imul
mov
add
mov
xlat
jl
dec
cmp
data16
daa
add
mov
or
cmpsb
adc
sbb
xchg
shlb
fdivr
pop
dec
sbb
lret
ret
aas
add
mov
ret
jmp
sbb
push
test
add
pop
sub
mov
cmp
aaa
xor
ret
xor
gs
rorl
mov
mov
and
and
push
shrb
sbbb
cmpsb
sbb
inc
or
imul
pop
hlt
stos
xchg
or
cmpsb
pop
lock
pop
pop
add
idivl
jmp
clc
mov
mov
dec
jnp
add
xor
call
jmp
mov
pop
adc
mov
and
scas
adc
ljmp
imul
call
test
push
mov
add
ja
ficoms
stos
mov
int
sub
or
in
jp
inc
rolb
rcrb
and
dec
or
stos
out
xlat
enter
lea
sahf
roll
jno
pushf
add
loop
inc
jle
into
cmp
mov
push
mov
ror
mov
inc
adc
sub
mov
cmp
addr16
inc
and
push
js
out
sbb
call
push
or
popa
sub
loopne
pop
push
daa
addb
add
cs
popf
inc
std
fsubrl
dec
cmpl
loopne
xchg
mov
rorb
add
sub
fsubs
xor
push
xchg
xchg
insb
pop
enter
sub
add
jne
outsb
dec
add
or
adc
or
and
shlb
cmp
adc
add
and
int3
in
sbb
pop
or
popa
int3
sub
jae
pop
sub
xor
inc
mov
dec
shlb
nop
pop
inc
in
pop
stc
mov
and
popa
ret
add
jnp
mov
test
adc
sbb
push
add
scas
pop
aaa
and
xor
pop
or
pop
scas
call
jmp
or
jno
loop
add
fcompl
cmc
add
jne
lret
push
dec
int
mov
mov
js
loope
aad
incl
mov
out
or
adc
and
scas
push
lods
push
aas
lock
jecxz
mov
nop
inc
rolb
rorl
sar
fldcw
adc
rorb
outsb
add
aam
xor
fcomp
push
cmpsl
push
daa
incl
stos
cmp
adc
loope
jecxz
cmpsl
rolb
or
lock
adcb
stc
push
addb
jp
jnp
aam
sub
inc
roll
push
jmp
lods
adc
jecxz
add
push
mov
test
popa
call
mov
sbb
or
add
push
pop
loope
push
push
mov
jg
push
call
add
push
insb
jl
push
xor
push
ret
mov
xor
clc
sahf
cmp
inc
pop
cwtl
push
jne
jnp
and
clc
outsb
out
and
pop
mov
sahf
enter
push
cmp
pop
add
xchg
dec
dec
inc
repz
and
sub
loopne
pop
xchg
sbb
inc
bound
push
push
push
and
dec
xchg
cmpsb
inc
mov
adc
or
les
inc
sahf
mov
pusha
cmp
dec
and
xchg
dec
in
dec
lock
mov
arpl
mov
jno
add
scas
or
dec
pop
xor
fmuls
popf
jnp
jo
cmp
addr16
jbe
cmpsb
sbb
mov
cwtl
in
and
rcll
add
push
lds
mov
jp
mov
fsts
cmp
adc
loopne
pop
loopne
push
arpl
rorl
jp
inc
js
std
and
push
mov
sbbl
loopne
das
and
pushl
mov
aam
adc
push
call
xor
push
andl
cmp
movsb
xor
push
jg
xchg
mov
push
add
jl
pop
ret
sbb
jne
mull
lret
pop
push
rorb
adc
mov
pop
xchg
push
ret
and
lea
cltd
or
and
add
inc
pop
cltd
fadd
sub
hlt
sub
faddp
mov
push
fwait
jmp
mov
adcl
test
xchg
lods
fmuls
jne
ja
js
mov
imul
negb
push
movsl
push
dec
addb
push
sahf
and
mov
xchg
push
mov
or
loopne
mov
aam
cs
lret
in
enter
in
mov
lods
pop
cs
lret
test
mov
jb
xchg
nop
mov
test
lret
in
jo
push
pop
cs
push
push
dec
cs
lret
in
inc
inc
cmp
in
mov
and
cs
lret
and
adc
lret
in
mov
pop
cs
lret
clc
hlt
lock
lret
in
mov
mov
aam
int3
enter
jb
sarb
mov
test
cs
lret
in
pushf
cwtl
xchg
nop
in
mov
sbbb
jl
je
insb
cmpsl
test
push
mov
and
mov
add
add
push
and
cmc
mov
pop
imul
adc
push
imull
ret
cmp
jmp
call
cmp
cmpsl
in
mov
pop
inc
adc
dec
add
pop
pusha
xchg
repnz
or
sbbb
test
mov
cmp
loopne
jno
icebp
je
andb
xchg
push
sti
les
cmp
jo
test
jnp
mov
mov
ret
inc
push
push
call
call
sub
mov
cmp
adc
cmp
dec
test
mov
add
clc
cmpsl
cmp
inc
call
loope
movsbl
dec
aam
or
call
inc
sbb
or
or
pop
jmp
popl
cmp
inc
inc
iret
out
cld
adc
outsl
test
xchg
dec
xlat
inc
fisubl
sbb
mov
push
lock
insl
mov
and
call
pop
add
call
hlt
push
jmp
std
sub
push
cwtl
sub
call
or
leave
call
dec
xor
ds
movsl
jne,pt
xchg
add
add
out
and
push
or
adc
repz
fmuls
xorl
cmp
inc
or
shlb
pusha
jge
call
cmp
out
imull
inc
or
outsl
pop
or
jo
push
add
xor
add
ljmp
or
add
ret
es
mov
je
or
inc
mov
push
ret
int3
push
inc
adc
and
mov
data16
mov
lods
inc
or
or
sub
xchg
call
add
sub
sub
loope
test
adc
lock
push
enter
add
sbb
pop
mov
adc
popa
adc
jo
fbstp
sbb
sub
push
mov
or
jmp
mov
mov
or
lods
or
jae
loopne
add
cmpsl
dec
and
jmp
and
add
push
pop
pop
movb
fdivl
out
adc
inc
test
in
loopne
lret
xor
push
je
in
and
pop
out
add
xlat
xor
sub
test
lahf
or
push
jae
dec
fs
lret
cmp
ss
ljmp
or
cmp
pushf
and
stos
sub
push
sbb
add
mov
ja
jbe
sbb
mov
out
lahf
fstpt
call
pop
jmp
cmp
cmp
or
mov
cld
cmp
jb
mov
popf
or
cmp
daa
add
and
push
cwtl
and
or
lods
ss
insb
les
aas
mov
and
shr
xor
call
addr16
mull
pop
es
data16
aas
push
adc
es
test
mov
jo
sbb
dec
loopne
imul
mov
lds
or
andl
and
mov
js
mov
test
movsl
bnd
pop
and
ret
xchg
push
dec
dec
out
xchg
out
jnp
pop
cmp
cmp
sahf
jo
pop
sub
pusha
pop
pop
sub
or
scas
adc
mov
or
adcb
or
mov
cmp
test
out
rcrl
cltd
outsb
dec
inc
mov
imul
popf
aas
mov
testb
addb
xorb
or
test
xor
jmp
mov
and
sbb
dec
in
push
fbstp
mov
mov
xlat
es
mov
daa
loopne
addr16
and
or
xor
adc
xor
cli
xlat
cmp
ffree
addb
aaa
pop
loopne
aad
pop
xchg
call
out
fisttpll
jbe
lret
rcr
xchg
mov
fstpt
movsl
daa
sbb
add
inc
pop
aaa
adc
and
daa
sub
test
mov
pop
xchg
shlb
punpcklbw
xchg
cwtl
daa
push
jmp
and
adc
jmp
and
repnz
cs
lds
adc
pop
les
push
push
push
fstpl
idiv
cmpsl
jbe
push
mov
stc
das
aaa
in
rorl
jb
mov
mov
lods
mov
frstor
cwtl
lea
and
jo
cmpsl
clc
adc
jmp
mov
psrad
sbb
dec
negb
cmp
pushf
addr16
fbstp
xchg
out
es
loopne
adc
pop
es
jae
out
loopne
adc
lahf
xchg
scas
loop
or
loopne
xchg
ja
clc
aad
es
movsl
shrb
cmpsb
iret
pop
scas
cmp
dec
adc
pop
ror
jo
fsubl
fsubl
mov
jle
psubsb
sbb
out
loopne
jno
jo
push
sbb
dec
ja
sub
enter
and
enter
subb
clc
mov
sbb
jg
cmove
pusha
cmpsl
mov
lcall
loopne
ss
fisttpl
push
fisubrs
xlat
lds
push
enter
xchg
push
sbb
xchg
aaa
test
andl
test
ret
out
ja
divl
fistl
pop
pop
add
hlt
xadd
pusha
inc
dec
mov
jmp
outsl
mov
in
call
sub
pop
push
lock
xchg
mov
js
popa
mov
dec
pop
mov
jbe
repnz
dec
push
in
and
push
and
pusha
mov
pushf
sub
push
jg
push
test
movsl
mov
dec
lock
loop
cmpsl
xchg
rorb
scas
test
inc
xchg
idivb
shrb
cmp
ss
pop
lahf
cmp
adc
dec
xchg
sub
mov
jle
js
xchg
jl
jae
imul
arpl
das
push
push
jns
js
daa
dec
fsubr
dec
sub
ds
or
stos
rclb
out
jb
xchg
push
enter
and
js
mov
repnz
lock
mov
int3
sub
cmp
jmp
mov
imul
xchg
sahf
lock
lock
ja
lret
pop
mov
push
daa
enter
test
cli
hlt
jo
cmp
lret
hlt
sub
ja,pn
fwait
pop
sbb
ja
jl
hlt
pslld
mov
cwtl
insl
mov
push
in
xchg
fmull
mov
addl
shlb
cmp
xchg
fsubs
jge
mov
jle
inc
in
sbb
pop
dec
aaa
inc
sub
xor
hlt
out
inc
xchg
ds
outsb
mov
out
adc
jmp
push
pop
lahf
add
jle
loopne
leave
and
or
adc
xchg
add
cmp
xchg
ret
add
xor
xchg
rep
sbb
pop
out
out
inc
jle
jns
cmpsl
in
call
xlat
pushf
call
out
pop
mov
jg
xlat
jle
filds
ja
bsf
inc
push
ficoms
decb
shr
dec
enter
jg
paddusw
ljmp
dec
add
out
hlt
mov
pop
xor
out
mov
cmp
in
clc
rorb
out
popl
out
jns
addr16
cmpsl
in
push
imul
xor
movsl
mov
fimull
rolb
in
jnp
cmpb
xchg
dec
test
scas
lcall
xchg
in
mov
mov
jp
je
add
in
loopne
adc
leave
leave
mov
dec
inc
ds
pop
enter
sbb
xorb
ds
add
addr16
aaa
sarl
mov
and
xlat
inc
iret
inc
ja
aad
push
das
push
push
pop
mov
push
mov
adcb
fucomi
in
mov
out
in
xchg
jbe
push
movsb
xlat
sub
bound
loope
mov
ja
mov
adc
in
outsl
xor
aaa
xorb
ss
pop
sbb
mov
adc
pop
or
in
les
jmp
bnd
jmp
pop
inc
js
cmp
mull
aaa
into
cmpxchg
movb
fwait
loopne
insl
mov
scas
jmp
cmpsb
jmp
sahf
pop
in
in
xchg
jle
in
jbe
pop
in
in
push
dec
inc
ds
in
ss
repnz
in
push
push
ljmp
out
jmp
mov
xlat
ljmp
push
adc
setne
sahf
ljmp
xchg
out
mov
ljmp
ljmp
fisttpl
dec
scas
xor
ljmp
roll
daa
adc
cmp
adc
mov
push
mov
and
rcl
pop
loopne
or
dec
or
cwtl
pop
add
jmp
xchg
bnd
loop
mov
mov
outsl
rorb
lret
cmp
mov
ja
jmp
loope
aaa
lret
mov
lcall
scas
test
pop
ljmp
iret
incl
pop
jmp
lds
sub
cmp
sbb
xor
dec
sub
mov
and
lea
pop
pusha
test
popa
aad
leave
loopne
jns
xchg
out
add
call
mov
cltd
leave
repnz
or
cmp
into
call
mov
stos
inc
test
idivl
xchg
outsb
adc
call
ja
dec
in
insb
sbbb
inc
test
add
data16
loope
pop
inc
push
fdivl
call
pop
imul
dec
pop
fsubl
cmp
call
pop
cli
shrl
out
or
inc
mov
cmp
fsubp
push
out
out
inc
sub
stos
out
ja
insb
pop
fwait
push
mov
pop
xchg
daa
rorb
sub
out
jp
mov
mov
push
out
pop
outsb
bound
cmp
xchg
stc
jmp
ss
nop
out
adc
cs
aam
outsl
orl
or
jmp
cli
out
js
daa
out
out
cmp
mov
test
xchg
cmpsl
cmpsb
out
sahf
pinsrw
mov
test
inc
addr16
jl
sti
je
jecxz
out
das
inc
movsl
shll
push
mov
jl
pusha
mov
jle
and
add
mov
cwtl
popf
negl
push
ljmp
add
push
push
push
or
xchg
out
mov
rol
mov
ss
jns
jae
push
movsb
xchg
ficoms
mov
out
mov
lahf
out
sahf
cmp
sbb
in
nop
cmp
repz
fmulp
mov
repz
repz
stc
cmp
xor
or
out
int
jns
loop
mov
or
cmp
dec
push
pusha
jb
cmp
repz
iret
fsub
add
mov
push
push
sahf
push
push
pop
fisttpl
lods
push
daa
mov
out
jns
in
push
sub
pop
add
cmp
fisubs
cwtl
jecxz
push
pop
dec
push
fnstcw
sbb
xor
push
movhlps
data16
sbb
imul
imul
jno
dec
lcall
or
fidivl
push
push
out
adc
mov
and
mov
adc
xchg
inc
notb
adc
neg
arpl
es
push
xchg
cld
dec
or
das
add
loopne
negl
push
pop
sbb
clc
fidivrs
js
popf
push
push
xchg
add
sub
push
adc
xor
dec
jl
mov
aaa
push
cmp
ds
and
sbb
push
testl
movsl
push
sbbl
or
sarl
push
call
repnz
imul
dec
pushf
pushf
cmp
nop
push
add
mov
push
ret
movsb
nop
int
jns
xchg
call
cmp
repz
xor
push
mov
iret
repz
iret
jnp
sub
adc
push
add
adc
mov
std
cmovle
test
cbtw
dec
repz
or
clc
xchg
in
ds
repz
mov
xchg
add
xor
inc
push
dec
pop
lret
repz
jns
hlt
sbb
adc
iret
repz
cs
pusha
jo
repz
adc
push
cs
repz
dec
pop
outsb
mov
push
push
dec
mov
sub
or
cmpsb
repnz
sahf
out
out
rol
mov
nop
mov
clc
out
mov
xor
and
repz
adc
cwtl
ljmp
cmp
inc
jg
out
sahf
xlat
ds
mov
mov
popf
mov
push
and
mov
add
adc
xchg
cs
jg
push
pop
xor
inc
rclb
popf
int
add
sub
pop
imul
cltd
das
push
mov
and
jmpw
das
fsubrs
in
inc
clc
add
dec
cmp
push
and
push
sub
cmp
cmp
sub
xor
int
out
xor
mov
pushf
cmp
fadds
imul
arpl
push
and
jne
jl
iret
roll
xchg
mov
inc
pop
inc
stc
cmp
shll
out
sahf
cmpsl
adc
push
sbbb
push
dec
cmp
iret
repz
jl
movsb
mov
imul
out
stc
iret
shrl
arpl
mov
jns
inc
xor
imul
mov
fidivrs
js
pop
roll
dec
fdivrp
mov
pop
mov
mov
xlat
jl
push
xchg
push
lahf
push
test
jo
cmp
push
mov
jl
imul
push
arpl
insl
dec
dec
pushf
jge
fnstenv
push
imul
dec
enter
cmp
inc
push
dec
pop
dec
pop
dec
lahf
out
fidivs
cmpsb
push
mov
dec
mov
fisubs
push
dec
ljmp
sahf
mull
cmpsb
push
lret
push
loope
idivb
sbb
sbb
bound
mov
mov
pop
push
push
int
jge
notl
xor
push
xchg
or
repz
inc
cmp
xor
push
out
out
testl
dec
push
pop
pop
mov
negl
push
cmp
add
mov
aaa
leave
push
mov
mov
pusha
ss
mov
ret
mov
pop
or
popf
cmpsb
jmp
pop
dec
and
aaa
repnz
in
mov
add
cmpsl
incl
jo
lcall
dec
test
add
andl
inc
loopne
imul
ljmp
xchg
xor
xchg
xchg
add
sti
fstpl
xchg
lcall
add
ds
addr16
outsl
negb
js
jbe
out
jns
jo
mov
jns
out
push
dec
inc
inc
cmp
or
push
and
sbb
jns
repz
adc
or
sahf
out
lcall
jl
out
fcmovbe
into
enter
lcall
int3
jp
add
insb
inc
daa
fsubs
adc
insb
push
jbe
pop
jmp
fldcw
push
or
lds
fcomip
sahf
cmpsb
pop
push
mov
adc
add
cmp
repz
mov
add
push
lods
add
outsb
outsl
test
dec
js
dec
dec
cmp
loopne
shll
iret
pop
or
add
xchg
decl
inc
lahf
push
dec
mov
mov
roll
loope
and
inc
or
or
std
jmp
mov
push
das
subl
push
push
and
hlt
mov
adc
sti
cmpsb
mov
pop
xchg
push
pushf
add
repnz
mov
add
push
cmp
adc
shrb
add
pushl
adc
or
adc
mov
lcall
bound
adc
add
mov
lahf
in
cld
test
cmp
sti
mov
pop
sbb
adc
and
jg
mov
and
jg
dec
call
xor
sbb
scas
sub
popa
stc
push
mov
xor
jg
cmc
rclb
test
mov
stc
add
shrb
jbe
aas
push
push
pop
mov
mov
adc
add
idivb
pushl
or
roll
ss
adc
sbb
mov
pop
adc
push
int3
push
and
pop
sbb
mov
sbb
or
clc
pop
xchg
inc
repnz
or
inc
add
mov
adc
mov
adc
lahf
or
cwtl
xlat
push
jae
out
sub
cs
inc
sbb
es
sbbl
fsubrs
add
outsb
mov
pop
bound
xchg
daa
fdivr
mov
mov
addr16
jo
cltd
adc
jnp
mov
pop
push
push
scas
nop
popa
aaa
push
push
pop
lock
dec
dec
mov
outsl
and
push
rcrb
in
mov
pop
in
scas
test
jb
adc
fadd
mov
test
enter
mov
adc
pop
pop
pop
and
add
lahf
je
ja
cmpsl
test
mov
arpl
xchg
adc
inc
push
rcll
add
or
sub
cltd
pushf
movsb
iret
cmp
inc
scas
pop
mov
sub
cmp
mov
in
iret
fwait
ljmp
push
add
cmp
repz
and
iret
repz
pop
inc
or
je
mov
or
insl
push
enter
xlat
sub
mov
sub
jb
daa
push
mov
in
adc
sub
xchg
rcr
in
adc
push
daa
add
clc
or
rcll
ret
or
or
mov
or
or
sub
scas
fsubrs
mov
or
mov
xlat
dec
mov
fiaddl
insb
pop
je
call
mov
je
sahf
fisttpl
jb
stos
xchg
je
mov
push
mov
int3
dec
movd
sbb
scas
int3
fistl
paddusb
in
or
mov
clc
cmpsl
in
repnz
adc
pop
adc
in
add
jb
push
enter
pop
popa
mov
scas
mov
or
jbe
dec
enter
jns
mov
pop
add
sub
decl
push
jo
call
pop
dec
dec
scas
or
jo
jo
fdivl
dec
test
scas
and
scas
fsubs
and
clc
xchg
ja
adc
ja
in
sbb
fbld
cmpb
int3
xor
adcb
enter
inc
loopne
and
movups
leave
sbb
sub
xor
inc
pop
adc
pop
push
in
pusha
or
pop
scas
cwtl
xchg
sub
xchg
test
mov
cwtl
add
pop
fsubrl
aam
loop
cmp
jns
push
jns
or
and
push
femms
movlps
cs
arpl
sbb
jbe
iret
cwtl
jns
mov
iret
xor
push
add
test
inc
lahf
fdivrs
sub
jg
cmp
cmp
pusha
push
mov
push
push
push
xchg
jle
or
mov
adc
adcb
out
inc
jp
mov
jle
mov
pop
jo
das
mov
les
sub
mov
aaa
rcr
jnp
lahf
and
pushf
stos
mov
prefetcht0
pushf
inc
mov
jnp
or
cmp
jg
mov
jb
pop
cwtl
dec
es
jno
enter
mov
loop
scas
jb
sub
aad
insl
subb
pusha
and
mov
outsb
xchg
jl
sbb
pop
in
mov
testl
loopne
insb
mov
scas
les
int3
paddq
adc
and
jge
call
in
cld
punpckhbw
in
in
adc
push
pop
cwtl
cmpsb
jmp
push
bswap
sahf
ja
lds
push
push
add
fwait
push
pushw
fbstp
leave
insl
or
aas
adc
nop
cwtl
jmp
leave
fwait
cmpsb
mov
das
mov
pusha
lahf
add
mov
add
mov
fwait
mov
sbb
and
cmp
repz
sub
add
cmp
repz
inc
or
push
or
push
syscall
push
enter
jg
unpckhps
mov
jl
test
push
outsl
jbe
ror
mov
fcmovne
adc
int3
push
enter
enter
rcr
outsb
out
clc
outsl
push
sub
ss
outsl
or
adc
pop
rorl
fbld
sub
lahf
push
pushf
pushf
pop
and
pushf
pushf
push
mov
movsb
icebp
in
in
mov
les
xchg
and
pop
int3
adc
adc
adc
jbe
enter
out
sbb
cwtl
inc
cmpsl
sbb
out
adc
adc
xor
jg
pop
jg
loopne
leave
inc
dec
push
adc
adc
inc
mov
adc
jns
out
jl
or
xchg
or
sahf
or
mov
aas
xchg
sub
shlb
loopne
lock
adc
adc
and
xor
inc
dec
push
xchg
xchg
xchg
xchg
pop
pusha
push
xchg
js
mov
cwtl
mov
xchg
xchg
mov
xchg
fcmovne
loopne
ljmp
loopne
call
lock
add
das
adc
sbb
jg
into
lock
pop
and
mov
cmp
and
incl
adc
adc
adc
adc
sbb
insb
adc
adc
mov
push
xchg
cmovg
mov
lods
push
adc
mov
pushf
cmpsb
daa
iret
push
aam
adc
test
lock
or
filds
adc
iret
iret
repz
inc
cmovnp
add
pop
push
arpl
imul
pushf
jae
jnp
addl
mov
test
dec
xor
leave
mov
daa
daa
pop
scas
rcr
loopne
in
fwait
xchg
mov
sbb
jb
adc
cmovle
fsub
jg
push
outsl
popf
mov
dec
ja
jg
cmpsl
xchg
push
or
xchg
pushf
movsb
mov
daa
push
in
enter
mov
jbe
decl
call
in
adc
jb
inc
cwtl
aas
or
dec
push
pop
push
push
push
lock
pop
pop
lahf
jp
cmp
xchg
push
imul
jg
dec
jge
scas
nop
rol
imul
pushf
fcoms
mov
add
fistpll
push
sbb
add
cmp
repz
add
js
pop
pop
pop
mov
mov
mov
xchg
jl
push
sub
push
mov
mov
adc
push
hlt
mov
repnz
lods
inc
and
inc
push
lea
out
scas
cmp
insb
xchg
pop
add
sahf
xor
daa
inc
xchg
out
pop
jnp
dec
ja
es
xlat
lcall
dec
je
mov
or
orb
lock
popf
jbe
fs
add
aaa
and
sub
pop
loope
dec
ret
add
and
and
or
inc
add
dec
cmp
dec
xlat
xchg
sbb
jo
add
pop
call
adc
cltd
adc
sarl
inc
ret
repz
push
clc
imul
mov
push
jo
arpl
sarl
mov
adc
and
inc
sbb
add
je
dec
inc
inc
dec
ret
push
dec
or
dec
fisttpl
sbb
add
push
inc
jb
imul
nop
daa
cwtl
push
jne
dec
jne
inc
inc
jns
xorb
jb
xchg
fadds
int3
add
jb
or
pop
roll
mov
push
outsb
pusha
in
sti
int
pop
dec
sbb
add
mov
add
jne
push
repz
jo
sbbb
mov
rep
addr16
sub
dec
and
daa
and
mov
das
inc
shlb
adc
int3
es
push
add
sub
or
xchg
mov
mov
add
inc
cmc
xchg
add
dec
and
icebp
es
sbbb
adc
add
xor
push
cmpb
pop
inc
imul
adc
outsl
outsl
insb
nop
insb
jo
imul
xor
jo
outsl
ss
pop
outsl
mov
push
push
add
xchg
pop
pop
push
add
dec
pop
sub
outsl
and
pop
es
cmp
jb
inc
incl
mov
jmp
and
outsl
das
dec
cmp
test
js
das
xchg
add
cmp
sub
mov
imul
out
std
cmp
jae
inc
inc
push
xchg
fs
adc
dec
push
jo
xor
cmc
inc
outsl
inc
mov
test
dec
sbb
pop
adc
test
inc
dec
clc
push
jae
jbe
xchg
mov
lea
push
dec
ret
pop
pop
lods
xor
jno
mov
pushw
jl
push
xchg
pop
jb
add
dec
fadds
sub
lods
add
sub
pop
add
das
dec
pop
repz
pop
vpsraw
jb
testl
fldl
addr16
push
xchg
out
mov
jnp
pop
add
cmp
and
ja
dec
enter
loopne
popa
dec
repnz
cmp
outsb
fwait
in
jecxz
and
in
cmp
inc
mov
std
sub
sbb
or
dec
adc
je
popf
pusha
sub
andl
ss
jl
and
inc
mov
dec
inc
in
ss
jns
inc
ljmp
dec
fidivl
sbb
xor
sbb
add
inc
dec
mov
xchg
test
shll
xor
shrl
adc
sbb
pushf
loopne
inc
inc
jbe
push
enter
push
mov
loop
ret
add
cmp
adc
jb
cli
ja
dec
dec
or
lds
je
jo
dec
es
push
mov
nop
xor
mov
xchg
pop
inc
adc
daa
mov
shlb
and
outsl
nop
pop
and
jg
adc
insb
addr16
cmp
add
insb
add
adcb
psrlq
ljmp
addr16
ret
inc
aaa
inc
lods
jbe
dec
or
cmpsl
mov
sub
pop
dec
add
data16
daa
xchg
add
push
jae
push
jnp
add
xchg
call
outsb
jl
roll
imul
mov
mov
add
fcomip
xorb
mov
je
and
aas
jne
imul
lods
jecxz
hlt
mov
ffree
jnp
add
fisubrs
inc
insb
xchg
outsb
insb
jle
in
dec
xchg
inc
shr
negb
sub
stos
xor
es
inc
jb
es
repnz
movsl
outsl
je
and
cwtl
stos
movl
inc
mov
aam
dec
sbb
dec
inc
shll
cs
rclb
daa
pop
cwtl
fwait
adc
icebp
pop
mov
int
add
inc
and
sbb
or
dec
outsb
dec
cmp
pop
add
out
out
popf
push
or
push
dec
dec
push
jb
push
dec
inc
fstpt
adc
or
xchg
test
dec
dec
add
gs
xor
insl
ja
add
rcrl
jg
fs
mov
mov
jge
outsb
outsb
mov
inc
xchg
test
cld
loopne
push
push
dec
xor
test
or
and
or
and
inc
sbb
mov
add
dec
push
pop
jo,pn
dec
push
push
inc
test
push
pop
mov
scas
mov
and
mov
ror
mov
test
rcrb
xor
loopne
pop
lcall
ja
rclb
mov
jb
pop
dec
push
pop
push
push
add
xor
lea
lahf
mov
add
aas
mull
add
inc
sbb
into
test
sbb
dec
dec
push
arpl
jb
and
xor
pushf
imul
xchg
inc
xor
jb
cmpsl
sub
adc
adc
mov
out
or
jmp
xchg
sub
pop
xchg
or
mov
xlat
jmp
test
cld
outsl
movb
pop
push
inc
dec
dec
inc
das
fimull
sbb
ss
adc
jmp
inc
outsl
mov
push
and
push
and
mov
hlt
inc
sub
add
xchg
insb
cld
jmp
xchg
imul
insb
inc
js
pop
sti
pushl
push
dec
pop
inc
push
dec
inc
inc
push
inc
dec
dec
push
push
dec
dec
daa
dec
mov
push
push
push
push
bound
adc
pop
push
test
and
and
insl
bound
fs
jnp
das
cmp
out
xor
xor
push
es
xor
xchg
dec
sub
aad
inc
sub
adc
xlat
mov
push
pop
and
push
adc
push
jae
push
push
lds
mov
cmp
insb
out
add
cwtl
pop
shl
and
rcrb
cmp
jae
mov
inc
sbb
inc
push
mov
adc
je
pop
shlb
mov
mov
sbb
aas
mov
pop
mov
inc
mov
addr16
jbe
incl
xor
jo
mov
fsubs
jg
loop
mov
hlt
lds
aas
and
xor
aaa
fiaddl
pop
into
sub
inc
roll
adc
out
das
inc
pop
pop
inc
daa
and
test
and
popa
ret
add
das
jbe
pop
mov
loope
jg
pop
mov
dec
cmp
outsl
adcb
lcall
sbb
orb
or
adc
sbb
or
test
mov
push
and
xchg
pusha
inc
ja
pop
jmp
push
or
sub
adc
or
and
mov
ret
fsubrs
shll
sbb
sub
push
jl
cmc
mov
add
pop
popa
dec
cmp
or
aaa
pusha
xor
dec
inc
dec
inc
por
dec
push
or
push
inc
push
xor
arpl
inc
dec
push
dec
inc
dec
inc
inc
add
mov
int3
dec
pop
inc
inc
push
push
dec
dec
pop
and
aaa
inc
dec
rsqrtps
inc
mov
lahf
push
jns
sub
push
inc
xor
and
nop
test
std
inc
je
sub
jle
lahf
dec
inc
push
inc
dec
pop
dec
cmp
popa
nop
inc
dec
ret
and
jb
adc
adc
mov
xor
lcall
or
inc
and
pop
xor
jno
mov
cmp
jl
jno
addr16
dec
push
pop
pop
add
pop
jo
mov
sbb
je
push
dec
lahf
jae
testb
fldenv
cmp
das
insb
fadd
js
or
cmc
inc
es
outsl
movsb
repnz
add
or
cmp
loopne
jne
pusha
mov
push
inc
leave
pop
add
inc
js
shrb
ja
jo
mov
mov
fiadds
or
imul
rorb
adc
insb
test
das
inc
cmp
outsb
cmp
jbe
addr16
arpl
fs
sub
and
inc
cmpsb
shr
test
das
mov
mov
adc
or
xor
dec
push
cmpsl
inc
fsub
pop
idivb
sarb
add
push
push
dec
jb
js
sub
dec
cmp
jmp
movsb
imul
loopne
in
aam
cmc
jmp
jnp
shl
dec
xchg
rorl
loop
out
pop
jns
imul
nop
pop
xorl
mov
inc
inc
and
leave
dec
pop
fldl
pusha
xor
mov
xor
push
fwait
add
or
jbe
gs
adc
js
jb
or
cmpsb
pop
push
jns
daa
dec
jno
push
bound
sub
lds
in
push
add
adc
sbb
outsb
sti
pop
insb
insl
add
xchg
xchg
push
xorb
dec
inc
lods
das
imul
xchg
scas
movsb
cs
pop
pop
inc
subl
rorl
mov
inc
insl
inc
inc
push
or
cmp
lods
pop
mov
lret
daa
dec
mov
insb
lds
jbe
push
insb
outsl
je
imul
pop
push
cmp
push
outsb
or
dec
cs
add
fildl
or
iret
aas
add
adc
inc
adc
sbb
xlat
das
mov
or
ret
jae
inc
daa
add
pusha
xchg
outsl
cmpsl
in
adc
orb
imul
inc
jno
aas
filds
push
arpl
loope
dec
pop
fisubl
push
outsb
iret
outsl
aaa
add
sbb
outsl
je
push
xlat
fmull
sub
xor
adc
inc
and
das
ret
push
cmpsl
mov
add
add
and
addb
cmpb
xlat
or
push
push
inc
ja
and
and
add
inc
inc
or
dec
insb
xor
cmpsb
cs
pop
inc
insb
scas
xor
sub
enter
jno
dec
pop
lods
movsl
dec
dec
inc
dec
outsl
sub
sar
subb
pop
pop
dec
dec
inc
jb
mov
pop
push
push
inc
push
inc
inc
jg
inc
arpl
lcall
and
add
imul
mov
and
ds
cmp
push
mov
push
push
sahf
push
inc
add
nopl
mov
add
shlb
sbb
jns
call
iret
aam
pop
sbb
lahf
xor
dec
dec
movsb
mov
cmp
das
pop
inc
cs
or
shl
mov
cmpsb
in
xor
inc
xor
xchg
sbb
jns
and
leave
negb
push
pop
add
add
mov
inc
dec
push
push
push
jbe
sub
cs
inc
dec
pop
aas
outsb
orl
stos
or
mov
fs
add
mov
add
and
push
xor
or
addb
mov
jg
inc
mov
pop
ss
jo
testl
push
push
push
das
push
clc
call
xchg
xor
jne
je
mov
xorb
or
inc
and
mov
adc
or
or
add
sbb
fildl
and
sub
inc
pop
add
insb
jecxz
imul
and
dec
and
mov
dec
jbe
inc
imul
cmp
inc
jb
pop
and
or
add
std
lahf
jae
jnp
sub
pop
cs
xchg
lea
imul
add
and
cs
lods
sbb
pop
sub
add
ret
jp
mov
adc
clc
adc
xor
cmp
es
add
insb
jne
testl
jae
jmp
in
xor
and
and
add
add
andl
mov
sbb
xlat
ja
mov
inc
fwait
stos
or
daa
mov
or
fsubs
or
push
sarb
add
daa
imul
cmp
cwtl
loopne
add
xor
sbb
sub
and
adc
test
xchg
pop
mov
pop
inc
sti
int3
imul
daa
or
ja
inc
xor
js
sub
ss
xor
xor
inc
xor
sbb
cmp
inc
inc
or
aaa
jge
and
das
inc
or
push
testb
dec
add
or
push
pop
add
jp
outsl
ret
mov
add
pop
mov
sub
dec
push
lock
mov
mov
cmpl
pushl
mov
aas
aaa
cmpsl
pop
popa
fistl
andb
fsubr
sbb
dec
nop
jae
rorl
pop
pop
sbb
jnp
jae
adc
scas
pop
loopne
out
test
sbb
pop
xlat
cmp
pop
mov
lods
add
pop
adc
pushl
mov
and
sbb
stos
les
add
cmp
xor
je
xchg
fsubl
jp
roll
nop
outsl
adc
in
push
xor
xor
ljmp
push
pop
testl
lds
xchg
call
pop
mov
xor
pop
jo
fistl
ja
add
fidivrs
adc
mov
pusha
inc
xor
shll
xor
pusha
fwait
or
das
add
mov
call
pop
lgdtl
sbb
outsl
pusha
jg
add
stos
sub
xor
testb
push
add
aas
add
scas
pusha
inc
enter
sub
mov
lock
jg
add
add
inc
dec
push
add
cmp
or
out
lds
cmp
cmp
cmp
mov
and
xor
out
adc
lcall
stos
jge
xor
and
popaw
arpl
adc
stos
bound
rorb
add
jge
ja
or
add
lods
push
pusha
and
push
add
pop
pop
xor
or
adc
push
xor
xor
jg
sub
cmp
xor
xor
jns
jle
sub
pushl
xor
xor
nop
cld
jg
xor
jae
enter
and
xorb
xor
xor
xor
xor
xor
jg
sub
xorb
cltd
xor
xor
xor
pushl
xor
cmc
xor
cmp
pop
ss
mov
ss
aaa
inc
aaa
dec
aaa
push
pushl
pop
aaa
pop
aaa
imul
aaa
jne
xorl
mov
aad
loop
out
aaa
push
cmp
cmp
cmp
cmp
cmp
mov
lahf
cmp
cmp
cmp
cmp
cmp
jno
jnp
sahf
cmp
cmp
cmp
pop
cmp
jg
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
cmp
in
cmp
pusha
imul
fidivrl
jecxz
sti
ds
dec
aas
arpl
xchg
add
or
aas
ret
aas
incl
call
push
int3
or
xor
out
xor
xor
jo
shlb
out
xor
xor
decl
adc
jg
shll
fnstenv
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
xor
aaa
xchg
aaa
sahf
aaa
shll
jmp
int3
aaa
xlat
rolb
mov
sarl
cmp
cmp
cmp
mov
jmp
lock
cmp
cmp
or
adc
pop
cmp
cmp
cmp
inc
cmp
lcall
decb
push
cmp
popa
add
cmp
xchg
fwait
cmp
cmp
cmp
clc
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmpb
xlat
sub
cmp
cmp
adc
ljmp
xor
mov
xor
data16
je
jnp
xorb
xor
lcall
xor
or
bound
mov
pushl
push
outsb
aaa
jmp
loope
inc
inc
pop
cmp
cmp
cmp
cmp
cmp
cmpl
cmp
mov
cmp
cmp
xchg
lds
aad
and
xor
mov
fistpll
out
cmp
pushl
inc
cmp
push
sub
xor
cmp
jp
ljmp
aas
dec
aas
subl
aas
pop
cli
push
fidivl
pushl
or
adc
inc
xor
xor
xor
xor
pop
pushl
xor
xor
xor
hlt
adc
cmp
aaa
fwait
jle
jg
ljmp
aaa
loopne
cmp
inc
and
cmp
cmp
cltd
icebp
dec
cmp
push
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
call
xor
int
push
ds
mov
les
push
push
sbb
incl
aas
fistpll
or
sbb
xchg
sbb
pop
int
sti
xor
xchg
xor
sub
pushl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
add
xor
xor
xor
xor
xor
pushl
fbstp
ljmp
aaa
insl
aaa
lea
lods
aaa
mov
enter
xor
inc
jg
mov
pop
cmp
cmpl
cmp
aas
cli
jg
hlt
cmp
cmp
cmp
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
push
cmp
add
ds
xchg
mov
mov
jmp
ds
sbb
inc
aas
addr16
test
mov
fidivrs
out
aas
std
xchg
adc
mov
push
call
sub
xor
outsl
xor
xor
xchg
lcall
jbe
pop
xor
xor
xor
xor
xor
mov
mov
adc
xor
mov
hlt
ljmp
pop
aaa
cmpsl
aaa
mov
aaa
aam
or
cmp
lcall
mov
xchg
cmp
cmp
decl
aad
push
pop
sub
dec
cmp
cmp
cmp
jecxz
lcall
cmp
inc
or
pop
ds
ds
and
lcall
ds
aas
sbb
cmp
mov
mov
es
dec
xor
inc
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xorl
clc
in
dec
xor
xor
xor
xor
xor
ss
ss
cmpsb
lods
ss
jmp
push
aaa
pop
aaa
nop
and
jmp
pop
cmp
cmpl
cmp
cmp
cmp
cmp
jb
cmpl
cmp
mov
cs
cmp
bound
sub
ds
mov
jge,pt
mov
ret
ds
and
inc
aas
push
aas
bound
jo
mov
mov
cmp
add
or
xor
ja
out
cmpb
xor
xor
xor
xor
xor
addr16
in
jb
cld
sbb
sub
xor
xor
xor
xor
xor
xor
xor
pop
jmp
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
fnstcw
ss
ss
shll
add
aaa
sub
jmp
sub
sbb
cmp
cmp
jle
scas
filds
lock
cmp
push
pusha
cmp
jecxz
jmp
push
cmp
mov
lds
ljmp
cmp
cmp
cmp
sar
call
jo
cmp
jmp
or
adc
sahf
and
cwtl
aas
mov
xor
out
rcr
nop
and
xor
xor
fs
movsl
xor
add
push
xor
xor
jmp
xor
jbe
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
cmp
divl
sarl
mov
fdivs
add
pop
aaa
orps
aaa
sub
xor
cmp
aaa
mov
mov
cmp
cmp
lret
cmp
cmp
cmp
cmp
cmp
pop
dec
adc
cmp
cmp
cmp
dec
pop
lcall
cmp
sarl
add
sub
ss
ds
ds
ds
xlat
ds
fidivrl
loop
cli
ds
jmp
or
cmp
xor
xor
xor
xor
outsb
aas
xor
xor
xor
xor
xor
xor
decb
inc
sub
cwtl
adc
jg
or
mov
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
mov
cmp
cmp
loop
insb
cmp
fdivrl
push
sar
push
aas
inc
aas
pop
aas
xchg
aas
mov
je
pusha
mov
decl
xor
cli
jg
pop
fiadds
dec
xor
mov
xor
xor
scas
xor
xor
adc
xor
xor
xlat
or
fdivl
pop
andl
aaa
jecxz
cmp
ja
add
mov
cmp
cmp
cmp
cmp
out
ret
add
ss
cmp
cli
cmp
cmp
ficoml
test
aas
adc
mov
sub
imul
pushl
cmp
xor
imul
fdivl
add
xor
jo
mov
fidivs
add
incb
loop
xor
sub
dec
xor
call
jg
shll
xor
das
popf
xor
and
inc
ss
ss
dec
ss
add
xor
pop
aaa
mov
aaa
and
cmp
int3
cmp
cmp
jne
cmpsb
bound
test
fnstcw
sub
dec
cmp
sbbb
push
test
scas
or
jp
mov
into
decl
inc
cmp
cmp
cmp
inc
add
xchg
cmp
mov
adc
dec
ds
mov
inc
fs
xchg
popf
add
aas
inc
movsb
add
call
xor
xor
xor
jl
mov
xor
xor
xchg
xor
lcall
mov
xor
xor
xor
xor
xor
xor
xor
ljmp
lcall
das
and
xor
pop
ss
ss
pop
test
cli
pop
aaa
popa
aaa
xorb
mov
cli
or
sbb
dec
outsb
cmp
pushf
cmp
cmp
clc
aas
cli
xor
mov
lret
cmp
pusha
cmp
cmp
data16
inc
outsl
jle,pt
or
xchg
out
loopne
pop
out
cmp
jo
test
xor
xor
rclb
test
pushl
pusha
xor
xor
std
dec
incl
ss
mov
ss
xlat
jb,pt
popf
pop
ja
add
inc
push
js
lods
lock
cmp
cmp
cmp
cmp
fisttps
mov
cmp
cmp
inc
cmp
jno
mov
pop
loopne
fnstsw
sub
cmp
cmp
cmp
inc
cmp
cmp
addb
pop
jb,pt
mov
jnp
fwait
push
lock
inc
xor
xor
mov
xor
ds
xor
xor
hlt
jg
loop
xor
xor
xor
xor
xor
cmp
jg
clc
fbstp
xchg
mov
dec
negl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
in
sub
pop
pop
cld
dec
cmp
xchg
enter
push
pop
push
cmp
test
cmp
loop
cmp
mov
sbb
jb
cmp
cmp
loopne
out
orl
or
adc
push
sbb
rcrb
inc
ds
or
lds
add
jbe
jl
cmp
mov
ds
ds
mov
ds
call
ds
ds
add
push
aas
or
adc
push
aas
imulb
aas
xor
add
das
out
les
dec
sub
xchg
data16
insb
aas
jb
js
jle
jg
rorb
aas
pushf
aas
mov
aas
mov
mov
int3
aas
rcr
add
aas
ljmp
ljmp
or
sbb
es
xor
test
fdivs
in
out
xor
jg
and
xor
cmp
bound
push
xor
xor
xor
mov
aad
dec
xor
xor
xor
xor
mov
mov
mov
xor
xor
stos
aad
in
cmc
sarl
add
sbb
push
xor
cmp
cld
ss
call
xor
or
inc
loope
jp
sbb
push
ss
sub
add
ss
ss
ss
ss
jbe
mov
loopne
cmc
mov
mov
cmp
fidivrs
aad
xor
fdivs
addr16
cmp
push
fnstcw
in
cmp
push
jge
xchg
cmp
and
movsl
shl
cmp
cmp
cmp
cmp
push
mov
test
cmp
cmp
mov
cmp
cmp
cmp
cmp
cld
filds
into
ja
cltd
cmp
fnstsw
inc
xchg
and
cmp
aas
leave
loopne
hlt
aas
mov
shlb
add
xor
xor
test
das
lds
adc
in
adc
cs
ljmp
mov
sbb
fs
insl
inc
mov
push
hlt
ss
test
insb
pusha
pushf
lock
aad
mov
outsb
cld
xor
xor
push
xor
outsl
sar
pop
xor
fs
je
js
test
mov
fcmovb
xor
in
lock
ss
add
aas
bound
cmp
mov
push
dec
es
ss
ss
ss
imulb
insb
xchg
push
adc
mov
shlb
pop
pushf
movsb
ss
lods
ss
mov
mov
clc
mov
xor
data16
add
adc
fsub
in
ljmp
ss
mov
or
lcall
aaa
sbb
sbb
aaa
and
sub
sub
xor
cld
jg
sarb
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
mov
fsubl
aaa
fs
push
aaa
js
pop
mov
lret
xchg
aaa
cwtl
jno
lcall
test
mov
mov
jb
sub
aaa
shlb
divb
jg
sub
fcompl
aaa
call
cmp
cld
aaa
hlt
aaa
clc
aaa
cld
outsb
cmp
or
or
adc
adc
sbb
imul
and
sub
sub
xor
add
pop
subl
mov
cmp
inc
inc
or
cmp
push
push
out
mov
nop
cmp
mov
cmp
jbe
cmp
cmp
or
scas
sarb
repnz
fdivrl
icebp
call
xchg
or
adc
adc
sbb
sbb
and
and
mov
cmp
pop
cmp
stos
push
jo
lods
push
int3
cmp
cmp
into
in
call
push
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
and
and
adc
cmp
and
into
inc
cmp
mov
push
cmp
push
sbb
cmp
insb
cmp
js
jl
test
mov
nop
cmp
cmp
les
les
int3
push
aam
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
call
pop
cmp
cmpb
cmp
cmp
mov
cmp
mov
sarb
mov
mov
push
aam
lock
std
fisubrs
mov
cmp
inc
mov
cmp
mov
pop
xchg
fmuls
and
and
sbb
add
loopne
adc
test
int3
ds
cmp
dec
pop
cld
or
dec
add
add
pop
aas
push
pusha
subb
movzbl
fidivs
cs
adc
icebp
push
stos
ret
pusha
xor
xchg
push
aaa
stos
mov
shlb
in
lock
cmp
dec
add
scas
sahf
jo
mov
pushf
xor
pop
mov
xor
adc
mov
jge
push
loopne
xor
xor
xor
add
decb
xor
or
adc
sbb
and
sub
movb
xor
xor
mov
cwtl
pop
mov
jg
mov
inc
xor
xor
xor
xor
xor
xor
mov
scas
xchg
mov
mov
stos
dec
pop
mov
and
aad
mov
xor
and
jp
cmp
out
jl
movsb
jp
jp
lcall
sub
cmp
and
out
xchg
loop
cmp
cmp
mov
lcall
adc
cmp
fdivrs
hlt
mov
sbb
xor
aas
stos
lock
pusha
fidivl
xchg
movsb
loop
cmp
ljmp
icebp
icebp
shl
mov
mov
push
outsb
test
cmp
sub
aas
ds
in
adc
sahf
push
cs
je
movsb
add
push
pop
sub
push
clc
cmp
inc
xchg
sbb
push
es
ljmp
in
in
and
mov
jo
cmp
cmp
je
pushf
cmp
mov
int3
fcmovu
adc
adc
or
adc
and
xor
jecxz
jl
dec
stos
insb
js,pt
pushf
pop
loope
ja
lods
ds
mov
ds
and
add
sbb
aas
insb
push
mov
pop
test
aam
dec
mov
pushf
add
decl
and
pop
xor
xor
call
movsb
testb
int3
push
fs
icebp
xor
xor
push
in
xor
push
sbb
shrl
xor
pop
bound
mov
outsl
loopne
push
test
mov
and
jg
aas
cmp
inc
xor
xchg
xor
xchg
xchg
xor
movsb
xor
aam
sahf
cmp
xor
xor
shlb
jmp
jg
xor
xor
movsb
xor
les
int3
adc
xor
xor
xor
call
adc
sbb
sub
xor
sbbb
jge
adc
mov
les
push
pop
lcall
lock
sub
dec
in
insb
and
lods
push
mov
xor
hlt
push
add
adc
push
inc
or
adc
xchg
mov
mov
xchg
or
sbb
mov
push
jb
push
ss
or
stos
inc
je
pushf
ss
imulb
add
mov
mov
cmp
dec
sahf
pop
mov
test
ss
add
pop
pop
sub
sbb
js
addl
ror
xor
mov
loopne
dec
mov
jbe
nop
stos
add
push
lret
cmp
add
add
cs
pop
dec
inc
ljmp
dec
mov
cmp
mov
mov
push
add
mov
adcb
push
mov
lret
mov
ljmp
adcb
sub
call
cs
mov
fsubl
jns
popa
pushf
clc
scas
frstor
xor
or
cmp
ret
test
test
push
jecxz
adc
lahf
pusha
cld
arpl
mov
mov
jmp
xchg
outsb
cmc
add
cmp
mov
les
icebp
movsb
sbb
and
daa
insl
or
pushl
movsl
dec
leave
pushf
mov
add
cli
ja
xor
lahf
outsb
xchg
mov
cmp
pop
inc
adcb
out
cmp
fcomp
cmp
push
dec
mov
inc
push
lods
lahf
hlt
fildll
call
scas
js
mov
jo
fsub
pop
sti
pushf
jl
inc
xchg
cmp
add
popl
roll
movntps
loop
pop
push
push
cmp
aam
repz
std
loope
mov
mov
scas
sub
sub
mov
out
std
xlat
subl
insb
cmpsb
mov
sub
decl
cmpsb
decb
fwait
insl
and
adc
fdivrl
lcall
sub
lcall
push
daa
lods
popa
movsl
sbb
add
test
adc
mov
add
mov
idivl
sbb
mov
and
lcall
int
das
pop
dec
aad
loopne
leave
add
pop
fldt
cwtl
pop
ss
mov
and
dec
inc
es
mov
cmp
pop
iret
sahf
mov
add
cld
xlat
jle
test
add
mov
dec
add
cld
sti
popa
dec
fistps
roll
in
mov
dec
mov
roll
mov
mov
roll
fcomip
pop
mov
hlt
roll
sub
mov
fiaddl
scas
lret
lods
in
jg
sub
jmp
sbb
push
pop
add
je
inc
jg
dec
pop
cs
add
mov
mov
test
mov
pop
addb
adc
jg
sbb
addl
push
pop
rcr
and
add
mov
adc
test
xor
push
dec
jg
fisubrl
xlat
pusha
dec
pusha
lahf
push
add
adc
adcb
sub
test
out
test
xchg
add
cmp
test
enter
enter
xor
adc
and
cs
xor
stos
fbstp
cwtl
mov
cmp
mov
adc
or
nop
inc
or
xor
inc
nop
xor
cwtl
inc
add
mov
push
movsb
hlt
sub
inc
xlat
xchg
adc
pop
and
add
aad
mov
cmp
mov
ret
or
add
inc
mov
xchg
je
dec
rclb
push
pushf
add
adc
loopne
add
pop
xchg
adc
jmp
dec
ret
mov
fsubs
jp
mov
sbbb
test
and
aaa
cmpsl
sub
adc
sub
daa
shlb
xchg
sbb
adc
subl
sbb
jg
decl
pcmpgtb
xor
sub
mov
mov
packuswb
add
or
push
xchg
sbb
shrb
pop
ret
or
adc
mov
cmp
pusha
lea
int
or
test
push
xchg
popf
xlat
and
subl
xor
cmp
mov
inc
jae
sbb
xor
cmp
push
jo
jno
push
cmp
push
sub
dec
inc
mov
push
and
mov
dec
mov
mov
inc
push
add
push
cli
or
iret
mov
jge
sub
xchg
inc
inc
ljmp
and
sysenter
dec
push
adc
imul
sbb
inc
das
xchg
addr16
fldenv
pop
rcl
cmp
adc
push
mov
roll
mov
or
mov
push
jbe
mov
adcb
and
pop
push
call
or
add
add
push
mov
and
jmp
and
subb
test
and
loopne
jmp
jno
push
sub
outsl
lods
and
xor
divl
mov
and
cmp
jne
cmc
call
fcmovnu
movb
fs
add
fwait
arpl
mov
push
sbb
and
mov
mov
ds
pop
imul
jbe
cltd
test
dec
xor
inc
divb
movl
and
sub
ficompl
push
and
pop
pop
xchg
cmpl
stos
pusha
into
addps
pop
imul
and
mov
lds
fbld
inc
fistps
fists
inc
rcrb
inc
or
cmp
inc
ret
adc
je
adcb
adc
adc
mov
push
mov
fs
lahf
mov
cwtl
cmp
lods
pop
lock
jbe
cmp
cwtl
nop
cmp
inc
mov
movsb
pop
mov
add
call
sbb
push
cmp
push
dec
leave
ds
jle
inc
add
icebp
ret
add
fisubrs
pop
xor
mov
pop
fists
add
adc
ja
jmp
adcb
outsb
call
xchg
lcall
sub
add
orl
std
or
push
mov
xchg
pop
js
add
pop
aad
xor
pop
rolb
adc
cmp
mov
push
mov
and
mov
loopne
hlt
mov
mov
pushf
jg
pop
sub
push
add
adcl
cmp
push
jl
fsts
mov
adc
cwtl
mov
jno
xchg
imul
sub
push
pop
pop
mov
jg
adc
push
ss
jg
jne
mov
inc
mov
movsb
mov
jnp
pop
adc
sub
cltd
inc
idiv
pop
mov
add
mov
mov
xor
repnz
sub
stos
dec
js
or
loopne
mov
das
out
adc
lret
movl
cmp
push
sub
stos
jp
adc
lds
adc
icebp
cmpsb
fadds
inc
mov
or
stos
mov
adc
loopne
fsubr
push
pop
ljmp
sbb
mov
in
mov
and
sbb
mov
mov
fcmovnb
roll
or
dec
into
lock
or
fmull
emms
push
jp
scas
inc
push
dec
orl
pop
pop
lods
inc
das
add
call
js
dec
push
mov
mov
add
jecxz
shlb
call
rol
xchg
inc
mov
cmpsl
add
mov
adc
xor
ret
xor
fnstenv
pop
movl
popa
pusha
xchg
sbb
push
fsubs
mov
or
inc
mov
data16
mov
push
cmp
mov
in
cmp
jle
fwait
into
sbb
lcall
xor
ficoml
xchg
dec
pop
dec
roll
jg
push
loope
mov
adc
push
jmp
add
or
jb
sub
lds
mov
push
push
jb
or
xor
push
pusha
xor
lcall
or
push
xor
mov
xchg
pop
dec
lahf
clc
mov
call
push
roll
sub
daa
or
mov
mov
lods
push
cld
mov
fmuls
xchg
push
clc
ret
aaa
stos
push
pop
mov
and
push
dec
jnp
cmp
xor
call
les
movsl
adc
push
inc
inc
out
cmp
or
sbb
enter
call
jmp
cmpsb
flds
push
lret
jne
pusha
sbb
push
push
push
call
xor
fimuls
push
sbb
jecxz
imul
andb
dec
fstps
and
push
or
ds
stos
push
xor
xor
dec
les
push
stos
gs
xor
cmp
add
lret
dec
imul
xor
xchg
nop
mov
dec
or
cmp
xor
dec
add
lea
pusha
cmp
loopne
int3
lahf
sbb
mulb
inc
cmp
fistpl
add
mov
pusha
add
add
sub
add
inc
inc
cmp
mov
and
xor
sbb
or
push
fstp
xchg
scas
inc
jmp
jo
sarb
movsb
push
shrb
fs
pop
dec
cli
add
xor
in
sub
test
js
lods
inc
and
mulb
int3
mov
dec
push
add
clc
aaa
xchg
adcl
xchg
add
das
or
jecxz
test
sub
cmp
push
adc
or
mov
repnz
int3
inc
orb
fcomp
mov
orb
adc
adc
cmp
cmp
stos
sahf
push
je
xor
rcrb
cmp
test
fstl
out
shll
push
test
add
sbb
ficompl
add
jno
and
imul
pop
arpl
push
nop
or
lods
push
inc
faddl
jne
clc
push
jge
pop
movsb
or
hlt
xchg
or
out
push
xchg
pop
xchg
push
jo
cmpb
xchg
xchg
cmpsl
xor
cmc
test
call
jns
out
dec
stos
inc
xor
call
cmp
push
shr
add
call
jl
dec
push
push
stc
pop
addr16
call
lahf
dec
mov
call
in
test
call
or
push
lock
mov
jle
xor
scas
enter
push
pop
call
sub
push
push
aaa
fwait
inc
and
adc
mov
fstpt
jle
aaa
inc
and
int
cmpsl
dec
cmp
shlb
fcomps
ljmp
repz
mov
xchg
mov
call
cmp
push
call
mov
sub
pop
jno
cmp
mov
or
subl
add
and
out
mov
sub
inc
call
cltd
xchg
add
in
scas
sbb
js
cmp
mov
aas
xchg
inc
pop
xor
sub
call
mov
and
sahf
gs
movsb
int3
sbb
nop
sbb
push
mov
or
sbb
call
adc
sbb
roll
add
fwait
orl
enter
scas
dec
mov
lahf
nop
push
fcmovnb
mov
xor
ss
mov
or
cmp
lret
in
xor
and
jb
pop
cs
adc
das
xchg
lret
in
or
cld
xor
pop
sub
lock
call
in
aam
jb
pop
ror
enter
xchg
lret
sarb
mov
mov
cs
lret
mov
mov
jb
enter
mov
fsub
in
xchg
lret
in
in
lock
clc
cld
mov
xor
or
lret
in
adc
sbb
movsl
mov
inc
and
lret
notl
xor
cmp
inc
xchg
lret
in
or
push
push
pop
jb
pop
cs
pusha
fs
insb
jo
js
in
mov
nop
pop
cs
lret
xchg
cwtl
pushf
mov
mov
cmp
cld
adc
xor
push
push
mov
adc
insb
sbb
es
pop
sbb
cmc
cmp
daa
mov
mov
cmp
push
fnstcw
mov
dec
add
and
fcompl
pop
jecxz
jnp
sbb
pusha
sbb
mov
push
nop
mov
mov
push
fsubrs
aam
popf
call
push
mov
sbb
sbb
sbb
cmp
test
insb
jo
or
add
cmp
cmp
xor
and
fcmovnb
sarb
je
ret
bound
xor
jl
fcmovnb
out
lds
ret
js
push
adc
inc
test
or
mov
inc
adc
mov
xchg
aad
adc
cwtl
xor
ret
out
insl
fmull
add
add
incl
in
adc
inc
jmp
fst
sbb
fsubs
mov
xchg
fstpt
test
inc
pop
in
mov
movsb
adc
mov
cld
imul
sub
movsb
push
lahf
jg
dec
xor
push
sub
pop
mov
adc
fwait
ss
mov
ss
test
push
sti
cmp
fists
aas
push
and
jg
arpl
nop
push
fidivs
push
sub
sub
sbb
adc
test
mov
jmp
call
popf
sub
enter
sahf
loopne
in
jmp
les
bswap
lahf
fwait
outsb
jmp
or
in
sub
cmp
das
shr
and
sbb
orb
sbb
jns
and
push
inc
dec
sti
cltd
out
and
cmpb
repz
inc
sub
jns
iret
repz
cmp
lret
sahf
out
mov
repz
cmp
dec
pop
push
xchg
repz
jnp
mov
out
mov
sbb
sub
cmpsb
or
fnstcw
mov
xlat
data16
or
cmp
repz
mov
icebp
pop
idivl
leave
lock
lcall
add
imul
pop
adc
sub
insb
cmp
movsl
or
add
mov
push
test
xchg
in
inc
pop
push
aaa
sbb
sbb
adcl
jecxz
add
lret
add
add
sbb
sahf
add
add
out
sub
stos
push
pushf
add
and
negl
dec
mov
sbbb
jecxz
pop
pop
jns
pop
in
scas
pop
fs
push
out
sahf
out
xor
adc
repz
hlt
cmp
loop
int3
ret
repz
mov
divl
enter
push
mov
jns
add
aas
push
stos
xchg
cmp
scas
ds
mov
jecxz
out
cs
sahf
xchg
in
cmp
push
jecxz
sbb
js
fsubl
test
adc
push
jo
sahf
out
flds
pushf
push
xchg
nop
mov
mov
mov
push
insb
cmp
repz
pusha
pop
push
dec
sahf
neg
repz
shlb
xor
jnp
jnp
push
mov
adc
push
add
and
jns
call
lds
and
sbb
loopne
inc
cmp
xchg
or
rcrb
xchg
enter
adc
jl
inc
xor
mov
es
dec
xor
sbb
idivl
push
jp
outsb
push
bound
dec
inc
divl
push
and
cmp
repz
and
adc
cmp
repz
or
int3
mov
imul
mov
mov
scas
push
sbb
and
ja
les
sub
sub
push
dec
iret
pop
jbe
cmp
nop
dec
add
mov
sub
mov
adc
adcl
sub
in
sub
push
cmpsl
and
ss
xor
iret
pusha
jg
dec
jmp
push
enter
mov
mov
pop
fwait
scas
loopne
mov
aaa
fdivs
xor
fmuls
pop
dec
sbb
lock
das
out
outsl
add
push
add
sahf
out
sahf
add
add
je
dec
xor
add
dec
outsl
pop
dec
fdivrs
shlb
xor
daa
xlat
push
clc
dec
test
xor
test
and
dec
cld
sbb
or
cmp
les
jl
imul
dec
mov
cmp
lea
and
outsl
mov
hlt
mov
rolb
ja
retw
js
rolb
scas
add
mov
mov
add
rol
pop
sbb
add
xorb
adc
xchg
add
cmp
xor
push
fwait
outsl
and
fiaddl
jns
shll
push
or
inc
pushf
sbb
push
or
addl
out
mov
movsb
inc
add
inc
inc
or
sbb
sbb
pop
push
inc
jno
pop
sub
lods
or
aaa
les
add
inc
pop
aaa
inc
mov
dec
faddl
popa
data16
arpl
faddl
add
and
mov
je
call
sub
inc
jp
jnp
outsb
ret
xor
fimuls
sub
and
mov
push
mov
faddl
mov
push
call
xor
inc
mov
inc
arpl
sbb
aas
lret
gs
adc
popa
movsb
mov
pop
mov
iret
leave
xor
inc
dec
andb
into
je
inc
inc
xchg
xchg
cmp
daa
jo
push
cmp
pusha
sbbb
xchg
pop
cmp
add
imul
gs
inc
test
sbb
outsl
and
out
je
insl
mov
mov
stos
push
pop
pop
adc
push
bound
add
sub
sub
push
dec
pop
dec
sub
and
xlat
mov
mov
or
popf
ljmp
ss
ss
iret
or
rol
nop
test
mov
pop
ror
out
and
push
pop
imul
je
inc
adc
add
leave
push
out
insb
pop
dec
inc
dec
push
inc
adc
push
daa
sub
pop
push
dec
dec
push
inc
decl
lcall
push
xlat
in
add
insl
and
xor
add
sub
das
repz
adc
mov
or
xlat
nop
mov
fildl
mov
push
push
inc
shlb
push
add
les
insb
push
dec
adc
add
adc
inc
test
pop
add
mov
aas
add
pop
mov
outsb
lods
rcrb
mov
jbe
dec
xor
out
jle
push
mov
and
cmp
jnp
or
xchg
incl
push
stos
push
movsl
pop
sbb
scas
ja
and
cmpsl
or
or
add
cmpb
adcl
mov
or
push
mov
aas
andl
mov
sbb
adc
pushf
call
inc
add
pop
xor
push
pop
or
repz
mov
dec
add
add
shll
add
sbb
and
adc
ret
in
sub
push
and
pop
push
push
push
add
xchg
mov
sbb
mov
adc
pushf
lcall
add
xchg
or
arpl
sub
sbb
xchg
je
mov
ss
mov
inc
and
or
repz
mov
dec
or
push
test
add
lcall
jmp
xlat
adc
mov
cmp
shll
adc
loop
dec
add
pushl
psraw
add
pop
jne
mov
push
inc
lahf
mov
jmp
adc
dec
in
out
repnz
movsl
and
movsl
mov
jb
inc
mov
sub
inc
xchg
stos
adc
into
jmp
or
imul
xor
nop
adc
inc
repnz
dec
test
mov
cmpsb
pop
test
jno
insb
adc
cltd
xchg
and
ljmp
sbb
jo
mov
scas
ret
imul
roll
and
mov
incl
dec
jno
aad
outsl
fldenv
fnstcw
adc
push
lcall
cmp
xchg
decl
mov
std
int3
imul
xchg
jbe
mov
mov
sub
rolb
lcall
stos
mov
mov
cmp
add
mov
lcall
stos
jecxz
mov
test
enter
adc
pop
cmp
jmp
sahf
mov
sub
fwait
setl
fistpll
pop
fisubl
mov
inc
in
jmp
jno
xor
in
sarb
dec
xor
mov
pushf
loop
shrl
ss
xor
mov
scas
cmp
lret
test
nop
jne
out
in
shl
add
and
or
loopne
out
psubq
outsl
jnp
jo
sbb
sti
out
fbld
cmp
xlat
and
sbb
adc
jb
sti
sti
mov
and
xadd
sub
push
fmull
mov
fiadds
dec
dec
adc
dec
outsb
add
or
mov
jno
mov
daa
sbb
out
xchg
js
fadd
sbb
pop
jo
inc
xchg
test
je
iret
lock
fs
fisubl
nop
pushf
out
mov
pop
daa
jg
push
jo
push
push
mov
iret
mov
std
test
fldl
add
jo
ja
dec
lods
clc
mov
mov
cmpsl
leave
push
add
adc
iret
and
mov
and
scas
rcl
dec
shrb
dec
dec
dec
scas
add
adc
movsl
xor
xchg
dec
sbb
fcmovb
xor
adc
stc
ss
out
inc
adc
push
push
lea
cmc
cmp
sub
addb
insb
mov
mov
enter
cs
and
hlt
fldl
pop
mov
ret
mov
jmp
out
jbe
add
dec
push
push
fmuls
mov
testb
insl
out
push
push
push
and
add
pop
push
cmpsl
pop
pop
pop
pop
adc
sbb
fmuls
aas
push
sbb
xor
call
push
xchg
in
mov
xchg
loope
adc
add
arpl
and
roll
sbb
jne
testl
or
pop
repz
rcr
in
hlt
dec
adc
and
jb
sub
andb
or
or
push
push
xchg
jl
clc
adc
fistl
push
push
lahf
je
mov
fucomip
mov
enter
jle
mov
mov
inc
jno
outsl
pop
popa
loopne
pop
lea
sbb
imul
push
outsb
addr16
call
mov
dec
sahf
out
call
xchg
add
or
pop
clc
add
mov
call
fstpt
adc
push
adc
mov
mov
insl
pop
push
hlt
push
jge
push
shr
pusha
or
pop
cmp
mov
cmp
push
cmp
jl
mov
add
enter
sbb
sahf
sbb
je
mov
xchg
pop
mov
xor
scas
loopne
out
mov
pop
pop
mov
sbb
and
cmp
push
pop
sub
cld
orl
push
xor
pop
test
add
call
push
push
cld
add
cmp
or
pop
lods
or
insb
in
mov
mov
loopne
and
xchg
data16
popf
inc
cmp
xor
or
add
call
out
repz
inc
xchg
out
push
loopne
cmp
movzwl
jecxz
addl
mov
je
enter
mov
xchg
push
test
movsl
jb
or
adc
mov
mov
dec
pop
sbb
push
jns
lds
mov
add
push
pop
lcall
sub
outsl
jl
sub
daa
sub
jns
and
fsubs
mov
dec
mov
dec
mov
inc
hlt
je
mov
stc
push
aaa
lods
sbb
lock
mov
movsb
push
in
inc
divb
cmpb
shrl
loopne
ljmp
je
sub
pop
mov
cmpl
xor
filds
adc
jns
xchg
xchg
out
in
or
shl
xchg
cmpsl
xor
add
sti
ret
push
jns
and
enter
cmpsb
shlb
les
cltd
lock
outsb
call
mov
mov
adc
fisubrl
sbb
mov
push
cltd
push
push
xchg
cmova
outsl
mov
lea
mov
les
or
xor
fnsave
pop
lods
or
int3
or
pop
adc
les
dec
or
imul
cmp
imul
xlat
mov
jo
xchg
push
shl
sahf
dec
and
push
push
adc
and
divb
lock
jge
xor
cmpsl
paddsb
ret
adc
in
jno
cmp
je
js
inc
lds
daa
and
cmp
push
sahf
and
jmp
push
loop
adc
addl
or
mov
push
push
push
mov
iret
fdivrs
add
pop
jle
call
scas
mulb
hlt
cmp
or
cs
daa
jae
or
xor
fadds
adc
xchg
lea
aam
jp
les
sbb
insb
call
push
jb
xor
lea
bound
push
das
bound
clc
mov
mov
push
stos
cmpl
push
rcr
mov
mov
cmpsl
or
fs
pop
insb
loopne
or
cmp
icebp
adc
rcll
xor
dec
mov
iret
xchg
shll
add
maskmovq
testl
lcall
mov
push
daa
or
adc
inc
lea
pop
mov
adc
jl
inc
rcrl
push
jne
inc
pop
int
pop
fdivrs
call
cmp
dec
pop
jmp
push
mov
push
mov
call
adc
loope
int
sarb
jle
mov
or
or
mov
jbe
cmp
in
dec
aad
inc
lret
out
mov
sub
data16
push
dec
rorl
add
shll
repnz
stos
cmpsb
mov
xor
inc
cmp
ljmp
adc
fidivl
mov
inc
inc
popf
loope
je
sub
sar
push
pop
mov
test
fwait
out
push
daa
fdivs
mov
adc
in
sub
mov
pop
hlt
sub
sar
mov
mov
imul
lea
push
lea
push
push
pop
xchg
mov
xchg
fcomps
lock
ret
push
andl
jl
push
push
adc
cmp
icebp
jl
jne
cmc
or
loope
and
fidivrl
pop
pop
mov
sarb
add
ss
daa
sub
lock
jl
ret
lods
cmp
or
sbb
push
clc
sbb
es
femms
mov
inc
inc
inc
mov
pop
sbb
pop
sub
fimuls
and
in
cwtl
inc
sub
scas
cmp
enter
adc
or
inc
add
push
or
adc
xchg
xor
mov
cmp
lds
pop
lret
jmp
sbb
cmp
pop
or
push
orb
sbb
or
adc
fmuls
xchg
cwtl
xor
aaa
mov
jle
arpl
call
inc
inc
pop
jmp
lock
cmp
inc
add
mov
test
mov
clc
jg
sub
pop
hlt
adc
cld
mov
pop
xchg
int3
jp
lods
xchg
push
movsl
cli
push
jne
jle
push
popf
loopne
or
adc
fldl
lcall
and
cld
xchg
call
cld
lea
push
shrl
mov
jmp
cwtl
add
push
mov
cmp
adc
test
rcrl
xchg
mov
iret
mov
stc
es
jle
push
push
ss
mov
dec
jge
mov
mov
add
shlb
pop
or
daa
test
adcl
push
les
pshufw
ret
cmp
enter
sub
roll
lods
test
and
jg
xor
and
add
sub
pop
addl
pop
mov
subb
xor
push
in
add
sbb
xor
jmp
iret
out
shll
ret
into
ja
add
fcomp
push
ret
rorl
ret
lea
push
dec
push
js
mov
lahf
call
and
ffreep
push
and
or
sub
test
cmp
push
jl
loope
es
js
dec
ret
xor
sub
pusha
hlt
add
or
inc
xchg
stos
jge
pusha
mov
lods
or
inc
dec
lret
ja
mov
mov
jmp
mov
invd
pop
lret
ret
cs
push
inc
aam
push
add
shl
fisttpll
enter
or
and
loop
inc
adc
insl
call
insb
roll
sbb
rolb
or
xchg
sbb
ja
add
cmp
clc
fstp
fmull
or
je
and
je
loopne
mov
out
outsb
int
push
jmp
ret
adc
test
sbb
stos
or
pop
adc
and
dec
xor
lods
pop
push
and
out
stos
les
jae
mov
loopne
or
imul
aaa
inc
ret
divb
dec
pop
or
out
push
mov
jo
les
unpcklps
mov
mov
pop
in
call
aaa
mov
jmp
push
icebp
pop
adc
jg
or
pop
lea
dec
movsb
dec
test
mov
fs
mov
jle
dec
jo
jl
push
in
orb
rolb
pusha
lcall
pop
dec
test
or
pop
pusha
leave
movsl
cmp
or
test
repnz
pop
subb
push
mov
xchg
or
mov
lock
mov
jne
call
sahf
sub
inc
push
pop
push
ljmp
mov
mov
cwtl
cs
movsb
add
mov
loop
push
lock
mov
pop
push
mov
mov
fdivs
cmp
and
sbb
pop
mov
out
adc
test
push
lods
out
adc
insb
and
mov
and
mov
lea
ds
cmpsb
call
adc
lea
or
loop
cmp
xor
call
cmpsb
ss
or
lahf
cmp
push
push
call
dec
jb
fldt
dec
pop
mov
aas
inc
push
jne
lcall
aad
ret
pop
sbb
jl
inc
add
xchg
push
outsl
scas
cli
sub
push
scas
cmpsb
xor
mov
dec
jle
add
jno
leave
pushf
mov
sbb
add
mov
insb
lock
call
mov
adc
testb
cmpb
add
xchg
jmp
push
xor
sti
aam
add
jno
push
push
xorb
push
fcoms
sbb
sbb
mov
jmp
sbb
bound
aaa
push
pop
mov
jle
jo
xor
xchg
je
dec
dec
mov
or
adc
nop
pop
sbb
daa
xchg
pusha
movl
sbb
push
push
loope
test
adc
sbb
add
mov
mull
ja
loop
jne
int3
jbe
mov
inc
jae
jo
xor
xchg
pop
xor
mov
push
cmp
sub
lock
movl
movl
dec
adc
sub
pop
stos
push
ret
add
scas
adc
sbb
mov
out
inc
adc
dec
scas
push
popa
or
ss
push
lods
pusha
xor
dec
and
enter
dec
das
or
cmp
sub
cmp
ret
in
enter
or
mov
mov
dec
dec
sbb
sub
leave
push
sbb
and
sbb
inc
push
int3
loopne
or
mov
mov
pusha
or
ret
and
mov
jmp
xchg
cmp
dec
xor
or
and
out
in
addr16
xor
cmpl
jne
lret
add
call
mov
popa
std
es
mov
and
jl
cmp
mov
xchg
lea
bound
loopne
inc
pop
mov
xor
xor
and
xlat
jb
add
sub
jns
testb
xchg
push
loopne
aad
cmp
out
je
incb
jle
jle
push
lea
call
sbb
cmp
outsb
mov
jl
pop
mov
popa
pop
not
and
stc
imull
sbb
sbb
mov
shlb
sbb
add
cmp
icebp
pusha
sbb
out
insl
inc
xor
adc
or
ljmp
out
pop
jge
movb
push
push
pop
addb
mov
cwtl
add
je
lea
push
add
adc
add
and
add
inc
or
mov
mov
sub
push
cmp
nop
movsb
imul
adc
jle
or
add
sbb
jne
add
test
push
loopne
push
call
add
sub
pop
sbb
in
std
inc
add
cmova
inc
je
rorb
loope
scas
lds
je
aam
cmp
mov
jo
sahf
pop
fsubs
add
out
or
adc
sub
lret
sbb
xlat
push
xchg
scas
add
jl
or
loopne
test
ljmp
dec
or
add
push
pop
mov
add
cmp
dec
jne
repz
jmp
les
mov
adc
lds
xchg
sahf
or
scas
push
test
div
pop
pop
mov
fimuls
jb
faddp
sbb
add
pop
jae
into
cwtl
mov
jae
cld
add
cmp
jb
push
int3
test
call
mov
in
inc
add
xor
sti
outsb
xlat
xor
call
or
out
mov
les
xchg
xor
push
cmp
ret
pop
rorl
push
cld
lcall
bound
jp
divb
std
pop
jne
pop
pop
ds
fs
xchg
push
push
cmp
pop
jne
jl
cs
clc
pop
fs
aad
push
sbb
pop
add
ds
scas
push
icebp
mov
sbb
cs
mov
or
pop
pop
lret
inc
pop
xor
add
addb
ss
jle
and
adc
cmp
popa
inc
inc
shll
sar
dec
addr16
sbb
call
mov
insb
mov
or
add
pusha
dec
shlb
in
dec
jo
sub
sub
push
pop
add
mov
or
test
sbb
add
testb
subb
adc
adc
or
inc
add
add
push
add
mov
data16
test
mov
jne
call
sbb
stos
and
push
lret
adc
inc
pop
mov
add
clc
cmp
std
mov
addl
enter
jecxz
je
std
or
jo
jne
jo
cmp
jb
pop
test
add
je
and
push
sub
loope
inc
inc
inc
inc
xchg
stos
je
test
out
sbb
xor
lock
imul
and
gs
int
add
sub
xchg
dec
popa
pop
mov
adc
icebp
sub
insb
jno
nop
femms
rcrb
and
jmp
push
lock
subb
fsts
add
sbb
inc
jg
push
or
cmpsl
or
enter
add
sub
jmp
push
cmp
sbb
daa
inc
data16
sub
scas
rorb
cmp
jne
pop
jg
ret
sbb
jg
push
dec
mov
push
pop
mov
push
add
adc
mov
xchg
push
cmp
jb
test
lret
ja
mov
sar
and
je
mov
push
call
mov
icebp
jmp
scas
pop
xchg
sub
cwtl
lcall
daa
or
dec
mov
test
jecxz
xlat
push
pop
mov
and
push
je
pop
loop
fbstp
stos
and
jmp
aam
inc
sbb
pusha
mov
jmp
mov
pop
push
sti
inc
cmpsl
add
data16
dec
jne
jle
adc
call
push
push
add
add
mov
aas
in
mov
push
push
test
jb
add
jmp
cmp
cmp
call
pop
repnz
add
or
jg
or
sbb
std
xchg
nopl
out
testb
add
xlat
add
sbb
push
sti
rclb
hlt
call
jle
push
and
add
idivb
ljmp
jno
mov
mov
pop
add
mov
add
jb
cmpl
or
push
sbb
xchg
pmulhuw
add
xor
je
rcrb
or
rorl
add
dec
mov
loopne
xor
push
push
lret
or
test
stos
mov
dec
ljmp
push
sbb
xor
andl
cmp
mov
add
xchg
sahf
sbb
sub
pop
nop
icebp
pushf
push
pop
fstpl
cmp
loop
adc
cmp
mov
inc
adc
mov
add
and
lock
dec
jecxz
or
loopne
mov
cmp
mov
shl
rcrl
adc
or
inc
xchg
fisttpll
cld
test
sbb
call
out
mov
enter
pop
out
testb
xchg
das
push
mov
jge
out
cmp
jge
call
call
and
inc
sub
divps
adc
push
adc
test
ror
addr16
cmp
mov
mov
js
push
cmp
aas
mov
call
or
out
pop
out
inc
xor
jne
call
popf
jo
jp
call
pop
xchg
rolb
mov
mov
inc
push
add
ljmp
jmp
xchg
mov
pushl
sub
add
insl
jbe
add
mov
inc
jno
or
cmp
cmpsl
or
mov
stc
mov
add
xor
jbe
addr16
adc
pop
subb
cli
and
mov
test
ror
push
dec
xchg
and
into
push
bound
cmp
loop
inc
sub
sbb
jecxz
push
es
je
sahf
pop
movsl
mov
cmpsb
pop
xor
or
sbb
jmp
add
movsl
in
rol
sahf
shrl
mov
cmc
and
push
mov
or
addl
lock
shll
nop
add
pop
and
add
xor
subps
adc
pop
xor
or
jae
fucomp
xchg
clc
jle
arpl
xor
or
xor
fcom
adc
sbb
testl
inc
pop
push
xor
es
shlb
lods
enter
sub
sbb
jo
test
loopne
lds
inc
insb
imul
aaa
sbb
mov
mov
mov
addl
add
or
xchg
mov
aad
push
fs
inc
call
mov
adc
ret
xor
call
mov
pop
xchg
push
sub
inc
add
push
cmp
imul
out
andl
mov
mov
add
lea
dec
xchg
stos
mov
xchg
add
adc
ja
das
movsb
xlat
call
add
dec
mov
jo
inc
or
dec
int
jl
roll
pop
cmc
enter
sarl
mov
mov
xchg
lock
cmpsb
fs
pushf
and
call
fcoml
ret
push
adc
bound
cmp
int3
pusha
xchg
mov
cmp
add
in
das
sbb
dec
pop
insb
in
xor
jmp
mov
call
xlat
jmp
shl
cmpl
dec
push
pop
mov
fcomip
ja
ss
push
lods
pop
fdivrl
push
out
stos
test
int3
rcrl
cmp
pop
dec
inc
and
dec
cmp
psraw
data16
xchg
sub
xor
cmp
inc
jnp
cmp
jecxz
cmp
push
ss
pop
mov
xor
jecxz
hlt
daa
mov
dec
or
daa
dec
cli
stos
in
mov
fstpl
push
mov
jp
xor
cmp
jle
scas
ret
addb
testb
jae
xchg
call
push
ret
cmpsl
and
sbb
imul
lods
js
or
and
xor
cmp
push
scas
push
or
adc
pop
or
push
sbb
or
test
sub
cmpb
sub
sub
mov
bound
mov
ljmp
loopne
rcrb
inc
mov
dec
jg
fdivr
sbb
push
loopne
jmp
adc
lahf
xor
cmp
shlb
lods
mov
sbb
push
jmp
frstor
ds
fcmovb
call
lock
jl
jle
mov
out
jle
inc
sbb
or
sub
mov
inc
cs
xor
mov
sub
adc
or
test
sub
in
and
clc
push
or
mov
lret
jne
sbb
jmp
mov
sub
mov
pop
inc
les
mov
cmp
dec
loop
in
jne
or
cmp
and
iret
sbb
je
inc
pop
sub
js
dec
xor
add
xor
rorb
xchg
pop
sbb
shl
add
ret
xchg
je
mov
cmp
mov
push
add
add
scas
movsb
mov
mov
sub
idivb
mov
mov
adc
adc
jbe
lods
jl
clc
cmp
and
or
std
pop
sbb
or
cld
mov
pushf
popl
or
add
adc
push
jmp
mov
push
movl
cmp
cmpsl
popf
push
sbb
add
jge
int3
mov
adc
inc
mov
mull
adc
fsubl
add
cmp
add
test
nop
push
scas
rcrl
movsb
lcall
xor
out
push
or
or
sub
inc
rclb
push
js
insb
jne
dec
pop
xor
rolb
les
loop
cmp
jo
add
cmp
movzwl
lea
jbe
push
push
jge
sub
inc
push
xor
hlt
or
incl
sub
fdivs
cmpsb
clc
inc
roll
enter
les
xor
mov
cs
pop
push
cmp
xor
cmp
jmp
js
jmp
push
je
add
sti
pop
add
push
mov
or
jmp
dec
mull
or
and
shr
or
leave
leave
sar
shlb
mov
fs
mov
mov
sub
imul
mov
rol
sbb
mov
inc
test
or
jge
je
push
push
push
sbb
sub
push
stos
xor
imul
inc
pop
mov
sub
add
push
sub
xor
mov
mov
or
xchg
bound
ja
sub
and
mov
inc
or
push
inc
mov
and
outsb
clc
call
es
rep
mov
xchg
add
push
gs
adc
addr16
mov
mov
dec
push
xchg
pop
mov
pop
mov
scas
mov
ds
and
and
cmp
sbb
sbb
ret
cmp
or
cmp
not
push
icebp
pop
int
outsb
outsl
xchg
call
mov
add
or
fwait
sahf
add
xchg
dec
cmp
mov
adc
and
int
sbb
and
fisttpl
int
cmp
cmp
mov
sub
push
int3
loope
pushf
jno
call
daa
movsl
nop
cwtl
sub
sahf
lds
addr16
and
cmp
dec
jge
cmp
add
inc
sbb
jo
out
and
scas
inc
lds
clc
push
cld
daa
inc
pop
pop
out
popf
push
lock
mov
xor
adc
adc
addl
lods
pop
cmp
pop
add
mov
pop
rcll
jbe
dec
push
das
ret
push
cltd
jno
notl
xchg
or
aam
and
mov
imul
outsb
mov
push
scas
sbb
sub
add
shrb
inc
add
cltd
pushf
cmp
push
xchg
mov
adc
pushf
sub
pop
jae
mov
or
jno
ss
popa
jo
ljmp
push
ret
int
aam
out
fwait
or
call
in
mov
mov
jmp
xlat
mov
sub
cli
mov
call
outsw
push
gs
sbb
in
xor
je
pop
xchg
xor
or
xor
cli
sbb
inc
mov
sti
xchg
jmp
call
sbb
xorl
mov
mov
pop
jne
cmp
add
pop
or
cmp
add
leave
push
cmp
pop
aas
xor
xchg
sbb
add
jo
sbb
dec
sbb
pop
add
sub
fsubrs
jo
fdiv
insl
adc
jl
lods
rcll
rclb
pusha
sete
jne
mov
push
stos
jmp
fwait
mov
inc
lahf
cmp
mov
sub
mov
or
and
pop
cmp
rcll
arpl
push
test
lea
pop
push
cwtl
or
xor
pop
mov
ss
pop
hlt
push
sub
leave
ds
js
dec
rolb
inc
pop
test
lcall
add
xchg
push
jnp
pop
rcrl
mov
aam
popa
jns
inc
inc
std
iret
adc
xchg
rorb
or
cs
les
sub
and
sarl
jb
pop
cmp
orb
sbb
cmc
inc
jo
cmpsl
ja
inc
mov
or
fidivl
sbb
xchg
or
loope
jb
xor
jp
fisttpl
cld
sbb
adc
call
loope
idivb
mov
lret
pop
js
push
outsl
pop
push
and
sbb
pop
jno
out
mov
mov
femms
movsl
cmp
icebp
rcrb
push
and
aad
xor
cmp
fs
sub
pop
and
hlt
loope
xchg
cld
popl
mov
cmp
fildl
sbb
sbb
push
mov
mov
pop
mov
pop
test
sbb
mull
mov
cmp
test
loopne
je
pushf
add
cmp
or
ss
cmpl
fs
push
pop
jl
cmp
push
jbe
push
pusha
movsl
in
and
push
pop
mov
sub
pusha
and
ffree
adc
cmp
and
mul
xlat
imul
adc
ret
or
je
sbb
int
xor
aas
enter
mov
or
pop
cli
ss
xor
push
mov
lock
int
push
cmc
mov
in
lcall
lret
mov
and
or
fimull
mov
call
adc
es
mov
pop
sbb
and
sub
add
jbe
stos
add
pop
sbb
sub
mov
cmp
out
aaa
sbb
jne
lea
mov
mov
sbb
cld
js
jl
shll
add
xchg
les
jnp
test
jl
out
sbb
jbe
mov
jl
sahf
jb
fmuls
out
rol
pop
and
pop
mov
mov
add
cmp
ja
sub
and
add
xor
dec
fcoms
lea
add
rcrb
mov
mov
addl
push
cs
popf
push
fdivl
out
inc
cmp
pop
bound
inc
add
fisubrl
mov
push
movzwl
rcrl
push
or
dec
push
sbb
jge
in
jmp
and
je
and
jne
push
xor
jbe
jg
adc
xchg
mov
lahf
mov
leave
sub
mov
lea
pop
and
sti
sbb
xchg
push
mov
mov
push
and
and
push
inc
cmp
jb
mov
mov
repnz
leave
push
mov
sub
fcomps
fsub
jl
leave
clc
mov
outsb
cwtl
fidivrl
push
pop
rclb
call
push
pop
call
sbb
push
dec
ret
inc
adc
add
mov
lods
and
in
push
fwait
test
mov
jmp
push
roll
xchg
js
pop
rcr
inc
add
add
ds
in
inc
adc
je
jp
movl
cmp
inc
addb
push
std
jne
inc
fcoml
add
sub
sbb
jne
add
jmp
ja
xor
xchg
int3
pop
leave
repz
add
pop
addl
les
push
push
sbb
ret
mov
mov
popf
les
push
shr
dec
shlb
lock
out
std
mov
push
push
jmp
pusha
movq
imul
mov
cmp
fdivs
and
sub
inc
sbb
lock
loopne
inc
js
jl
xlat
push
jnp,pt
jae
jbe
jnp
jge
movsb
iret
xor
mov
test
sbb
pop
jnp
je
inc
incl
leave
jmp
sbb
imul
in
imul
push
lea
shrb
sub
sub
add
out
daa
arpl
jmp
mov
cmp
or
es
mov
mov
inc
inc
or
data16
sti
push
mov
inc
sarb
add
jb
mov
inc
cmc
xor
movl
mov
testb
inc
or
adc
incl
test
inc
xchg
inc
inc
inc
dec
jne
mov
cmpsb
mov
fucomip
in
jmp
sbb
out
shll
jle
inc
xor
dec
loop
mov
rorl
inc
dec
jne
sub
sbb
bound
sub
cmp
sbb
mov
xor
xlat
outsb
bound
mov
push
in
adc
shlb
jmp
xor
dec
and
dec
repz
sub
inc
mov
ljmp
fisttpl
adc
or
into
lods
jle
jecxz
and
shlb
out
sub
lret
inc
jno
pusha
sti
rep
andl
inc
lods
cmc
test
in
push
test
arpl
cmp
shll
cwtl
sbb
cmp
sub
pop
push
mov
out
add
lahf
or
add
push
insb
cli
je
cmpsl
sbb
hlt
mov
or
xchg
or
cwtl
mov
aam
add
mov
ja
int3
mov
inc
test
jmp
xor
jg
or
mov
add
fwait
xlat
add
mov
pushl
add
inc
insl
adc
jo
inc
jno
call
mov
xor
in
add
sbb
and
imul
cmp
push
adc
dec
add
xchg
in
xor
jmp
push
popf
adc
push
call
dec
sbb
xchg
fistpll
insl
mov
lds
outsl
cmp
cmp
je
cmp
jne
push
shll
sbb
lret
shr
mov
call
mov
gs
add
fwait
mov
test
jns
jno
inc
or
jnp
sbb
sub
adc
inc
and
fsubrp
rcrb
sub
and
rcrb
aaa
cltd
or
sub
stc
lock
ljmp
sub
push
adc
aaa
call
jp
insb
or
cmp
ds
cmpl
cld
or
cld
mov
outsl
cld
sub
sub
int
dec
jne
push
call
loopne
icebp
jg
aad
movb
cltd
divb
mov
inc
xchg
rcrb
push
pop
cmpl
das
cmpl
ss
test
xor
ret
adc
fdivs
into
xor
or
add
mov
int3
movsl
mov
pusha
xorl
aaa
pop
xor
cmp
push
mov
adc
push
jbe
jecxz
or
je
jb
add
and
mov
add
lahf
daa
mov
or
inc
out
inc
jge
dec
push
jl
test
jo
xchg
pop
jmp
inc
aam
movsl
lea
mov
in
mov
out
cwtl
mov
mov
xor
loop
adc
xchg
sub
int
or
fsubr
and
push
mov
cmp
inc
mov
shll
dec
cmpsl
adc
mov
shr
mov
jne
sub
mov
mov
inc
xor
mov
xchg
ret
xchg
popa
lcall
push
aam
fstpl
push
fdivrl
imul
jg
cld
cmp
nop
hlt
pop
dec
or
xorl
xor
addr16
std
sub
movsb
rclb
mov
add
sbbb
jne
mov
fistl
mov
pop
jo
mov
insb
gs
test
les
xchg
std
add
jl
or
push
sarb
jne
pop
std
es
subb
push
adc
rolb
inc
push
in
adc
fs
xor
in
and
pop
add
or
or
sub
jp
jle
movsb
mov
xchg
add
lret
inc
add
xchg
inc
push
ret
lea
ret
into
test
pushl
or
enter
pop
jmp
mov
pop
jmp
es
outsl
adc
fs
push
adc
push
cld
xor
or
ret
add
jle
push
pop
cmp
push
test
push
call
mov
popf
cli
inc
and
mov
mov
fimuls
add
xor
dec
push
push
mov
adc
mov
xchg
jbe
loope
cmp
andb
mov
push
pop
and
int3
mov
cmovs
sub
xchg
adc
add
and
std
adc
mov
movsl
jmp
adc
ds
je
daa
outsb
xchg
or
enter
dec
fdivp
fsubl
lea
push
test
nop
cmp
fs
repz
mov
rorl
mov
or
xlat
xor
add
mov
jge
dec
add
add
add
or
cmpsb
pop
inc
xor
testl
mov
cmp
repz
fcom
enter
loop
mov
mov
push
call
sahf
in
in
lock
hlt
dec
lahf
out
clc
clc
cld
cld
lea
out
lock
xchg
jns
cmp
mov
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
or
std
cld
out
mov
neg
adc
pusha
lret
fcoml
divl
mov
pop
nop
les
call
in
xor
jl
mov
test
fidivl
imul
mov
jno
addr16
mov
xor
ljmp
repz
test
cmpsl
sbb
push
sbb
adc
adc
or
cmp
repz
or
or
jns
xchg
rorb
push
fcomps
or
in
dec
aaa
outsb
push
mov
fadds
ja
add
jns
dec
fbld
jb
push
cwtl
dec
xchg
aas
xor
repnz
sbb
dec
fists
or
mov
add
xchg
push
repz
push
dec
inc
cmp
pop
or
shl
xor
mov
inc
push
and
push
and
divl
xor
pop
nop
xor
pop
push
adcb
pusha
mov
pop
ffreep
sub
mov
push
sahf
out
push
in
hlt
cld
add
and
cmp
push
filds
jmp
cmp
dec
pop
push
ffreep
subl
shlb
out
dec
cld
movl
es
push
sbb
sub
pop
mov
rorb
mov
sub
mov
jmp
add
movl
test
mov
add
and
sbb
lret
inc
or
or
cwtl
jns
push
je
and
daa
psubb
jae
pop
mov
loope
sbb
jae
rorb
or
out
or
shlb
jecxz
lea
test
rep
pop
sbb
xlat
adc
jne
mov
dec
jp
aad
rorl
adc
dec
out
ds
or
insb
sbb
push
insl
cwtl
out
pop
or
jo
push
push
bound
test
cmp
lock
mov
dec
rclb
cmp
pop
sub
call
pusha
lock
call
xlat
xchg
mov
pop
in
mov
mov
sbb
in
adc
int
jmp
or
push
mov
cmpb
cmp
incl
push
add
add
and
push
push
movsl
shll
mov
jae
into
rorb
fs
jne
xor
cli
sub
es
pop
repz
xchg
mov
ror
arpl
and
mov
mov
ss
cmpsl
pop
arpl
xchg
dec
inc
mov
add
push
push
pop
mov
fimull
rep
push
push
jecxz
shll
sub
or
add
inc
hlt
add
add
dec
jp
pop
inc
jno
sbb
adc
xor
decl
scas
dec
or
jmp
shr
lea
ljmp
adc
and
rorb
push
inc
push
pusha
jo
ds
inc
hlt
mov
sbb
in
mov
cs
lods
inc
cltd
and
sub
sub
and
mov
roll
pop
mov
cmp
mov
lret
xchg
mov
dec
repz
mov
mov
inc
add
sub
mov
sub
push
outsb
rep
ss
neg
add
push
lcall
dec
imul
sbb
mov
cs
sbbl
push
push
push
adc
insl
aas
push
dec
fists
push
pop
test
mov
dec
lock
clc
adc
add
dec
in
lea
mov
or
or
or
dec
add
and
mov
and
xor
out
push
outsl
add
data16
or
cmp
mov
mov
mov
lea
cmp
mov
mov
rorl
aaa
cmp
pop
pop
call
cld
loopne
decl
lea
and
fisubrs
adcl
and
call
jl
and
adc
cmp
jb
inc
arpl
jg
popf
lods
sbb
mov
adc
push
jle
fldenv
stc
fisubl
rcll
or
je
mov
test
dec
test
xor
lock
sbb
mov
clc
add
out
add
shll
mov
rsm
cmpsb
mov
ret
xchg
sub
dec
cmp
hlt
inc
adcl
pop
fmuls
xchg
sbb
xorl
push
sub
js
or
loop
orb
xchg
sbbl
push
pop
dec
ret
dec
rolb
rcl
mov
data16
movsb
and
mov
and
outsb
aas
push
aaa
xor
ds
xor
inc
nop
lods
jo
adc
add
or
sbbl
aaa
pop
js
insb
and
sti
add
shrl
mov
loope
call
adc
push
mov
call
pop
rsm
sbb
ja
or
lea
icebp
sbb
or
mov
jmp
mov
or
enter
push
and
mov
jl
cmpsl
and
test
movb
mov
add
es
or
daa
inc
repz
je
inc
and
sub
mov
jne
push
xor
mov
iret
mov
sbb
adcl
imul
ds
fldt
call
push
pop
je
push
push
fdivrs
push
test
aad
insb
jl
pop
in
cmc
cmp
rcrb
sti
aam
xchg
mov
mov
adc
xchg
jno
daa
pop
pop
mov
repnz
add
mov
adc
mov
loope
push
out
fldl
add
add
sub
out
push
fs
xor
dec
cld
mov
jmp
adcb
inc
and
cmp
pop
push
or
add
insb
mov
pop
push
icebp
adc
popa
mov
cmp
or
std
push
sbb
add
fstpt
jg
or
cmp
je
or
jne
or
mov
inc
ljmp
imul
cmp
insb
cmp
cmp
std
insl
add
cmp
inc
jmp
dec
jmp
xor
inc
inc
movsb
inc
or
sbb
mov
or
inc
inc
inc
mov
push
pop
es
pop
int
mov
ss
cmp
and
xchg
and
push
push
mov
shr
into
dec
stc
add
push
aad
pop
loopne
xchg
push
ss
jp
add
je
cmpl
movsbl
push
addb
leave
or
mov
pop
jp
into
call
or
test
jmp
sub
xchg
arpl
or
sbb
or
or
push
cmp
scas
or
add
adc
sahf
sbb
push
mov
xor
clc
mov
cmp
xor
sbb
pusha
jp,pn
lcall
lea
call
cmp
cmc
aas
jae
or
sbb
push
mov
fisubrl
mov
dec
mov
jbe
adc
push
push
or
out
dec
mov
or
ljmp
inc
ficompl
jmp
dec
jmp
add
sub
dec
stos
sbb
inc
jbe
or
js
and
jbe
lcall
push
mov
pop
add
sbb
data16
mov
push
add
adc
jne
or
rcr
or
sub
push
sar
inc
aaa
push
movsl
xchg
push
shlb
jecxz
cmp
fisubrs
inc
push
imul
push
mov
and
push
scas
mov
sub
jnp
popf
rolb
add
jmp
dec
push
xor
insb
push
xchg
add
mov
test
mov
or
lods
div
inc
jle
popa
test
and
jae
icebp
and
mov
sbbb
outsb
loop
or
cmp
mov
adc
adc
ret
and
inc
in
mov
clc
sbb
test
call
pop
inc
es
clc
xor
jne
rolb
jb
mov
flds
pop
or
inc
mov
insb
push
mov
clc
jne
into
rolb
popf
sub
mov
and
adc
mov
push
test
sub
lret
adc
ss
push
or
or
pop
mov
subb
int3
adc
inc
cwtl
pop
and
mov
pushl
mov
insb
ss
insb
jns
mov
cmp
cmp
pushl
ret
xchg
add
pop
icebp
mov
and
add
add
orl
push
push
or
aas
sahf
lret
cmp
neg
inc
in
add
cmp
jb
imul
ret
jae
xor
cs
xchg
shll
pop
ret
lds
js
sti
cmp
add
pusha
fdivrl
fisubrs
orb
mov
mov
addb
fisttpll
or
test
imul
rcll
cmp
cmp
sbb
push
mov
loop
in
add
stc
out
dec
outsl
jle
inc
andl
adcl
cmp
test
cmp
popf
lret
xchg
cmp
bound
add
xor
jmp
leave
push
sbb
dec
loop
mov
pop
sbb
pop
jne
loope
cld
mov
or
pop
adc
pop
push
push
mov
lock
mov
or
mov
in
pusha
lcall
in
mov
mov
rorl
pop
cwtl
pop
jns
dec
lock
xor
and
cli
pop
test
mov
test
daa
rcrb
loopne
or
fs
push
inc
push
xor
shll
mov
in
ret
push
lea
sbb
mov
aaa
pushl
add
or
je
or
pop
sbb
ss
shlb
ret
andl
das
mov
jmp
jl
push
mov
fisttps
notl
cmpl
cld
pop
pop
jne
sar
pop
int
or
mov
fcoml
out
or
popa
lcall
jo
lret
std
pop
dec
pushl
js
fisubrl
fs
movsb
mov
in
ss
mov
and
fldt
testb
push
push
xor
cmp
mov
push
push
jge
fcompl
psubsb
jmp
aas
jmp
push
call
jne
les
loope
inc
jne
arpl
sbb
push
mov
push
mov
das
in
mov
sub
mov
sub
inc
mov
add
and
mov
jl
cmpsl
inc
xor
in
sbb
inc
ljmp
xchg
dec
imul
add
lods
add
pop
or
add
sub
xchg
sbb
fisttpll
or
js
rcrb
aas
mov
jno
adc
enter
sub
sub
mov
adc
adc
lea
cmpsb
lea
ret
sub
pusha
std
sbb
cld
shr
mov
imul
sub
test
or
mov
xor
sbb
mov
mov
mov
lods
scas
cld
or
adc
ret
or
je
cli
add
pop
inc
adc
cmp
jbe
push
pop
dec
cmp
jne
out
cli
nop
push
jae
hlt
shr
lea
lock
add
shll
pop
mov
and
and
jmp
lea
xor
mov
mov
scas
mov
pop
adc
add
adc
rorb
xor
cs
pop
clc
and
hlt
divb
jge
or
sti
add
pop
sti
push
sbb
dec
pop
cmp
jbe
mov
mov
imul
andb
cmp
je
shrb
add
lods
and
shr
subl
pop
dec
add
and
sarl
jle
jmp
lea
das
mov
xor
fnstcw
or
xor
sbb
and
jmp
imul
hlt
hlt
fimuls
test
sbb
or
mov
dec
pop
or
cmp
cmp
jne
mov
out
loope
sub
mov
jge
jge
cmpsl
push
loopne
sti
call
inc
dec
or
jmp
repnz
in
lock
adc
js
clc
ljmp
push
mov
inc
xchg
dec
mov
or
cmpl
mov
jo
mov
fsubrl
mov
sub
add
scas
pop
data16
jp
mov
gs
or
sbb
andl
ret
sub
dec
inc
adc
inc
dec
sbb
and
or
jo,pt
or
and
inc
cmpl
aaa
enter
test
fldt
enter
dec
adc
sbb
inc
rcrb
cmp
cmpsl
fwait
mov
adc
jg
mov
das
mov
jg
dec
add
jne
mov
push
cmc
push
push
shrb
shrl
js
ljmp
cmc
idivb
push
push
lock
add
pop
stos
push
cmp
sub
lea
pushl
aaa
fwait
mov
jo
orl
out
add
and
pop
popa
inc
inc
aad
fnsave
dec
pop
jno
fcmovnb
add
inc
lret
or
mov
imul
or
inc
cli
inc
clc
pop
out
add
pop
jo
inc
dec
jne
add
sti
ficomps
inc
sub
je
push
adc
add
xchg
ljmp
int3
cld
ja
ret
shr
aaa
adc
jl
xorl
add
push
xchg
push
and
inc
cld
lock
xchg
sub
sbb
xchg
jo
out
add
push
lea
shlb
adc
inc
cli
push
das
lock
inc
add
mov
inc
mov
cli
clc
pop
sub
test
push
mov
jne
or
rorl
and
not
and
xor
add
jo
xchg
ret
xlat
sub
inc
lcall
or
push
cld
inc
dec
cmp
jle
or
push
mov
and
mov
adc
clc
cmp
ret
ss
enter
call
add
sar
dec
cmp
push
shll
xchg
pop
into
pop
pop
add
cmp
inc
sub
cmp
clc
or
mov
dec
es
add
cmp
and
lcall
cmp
adc
mov
mov
pop
dec
sub
or
cmpsb
add
dec
cmp
mov
cld
aad
jnp
mov
sti
inc
pop
jg
jnp
pop
xor
jle
adc
or
cmp
sahf
cmpsl
imul
pop
adc
push
add
sbb
adc
jo
data16
and
jo
test
loopne
test
int3
aad
imul
jle
rorb
push
sbb
jmp
adc
mov
lods
mov
dec
inc
dec
insb
pop
xor
push
sbb
dec
cmp
xor
movsl
pop
imulb
jb
enter
fwait
mov
cld
xor
cmp
add
jl
dec
cmp
jb
sbb
fisttps
cltd
dec
cmp
andb
roll
add
ja
dec
adc
push
sti
movb
adc
dec
lea
js
loope
mov
mov
mov
push
adc
mov
mov
repnz
lods
push
xor
mov
out
cmp
pop
push
xor
jns
popf
nop
loop
dec
inc
mov
sbb
mov
movsb
cld
sub
outsb
cmc
push
movsb
ret
rcll
loope
xor
push
push
ja
jg
and
jge
or
shr
adc
jmp
call
cli
xor
cmpsb
inc
or
jecxz
push
fiadds
sub
and
or
test
adc
fadds
or
or
jg
sbb
jge
jne
jmp
mov
jae
sbb
jb
std
stc
mov
lock
jl
dec
cmpsb
mov
or
mov
inc
cmp
lods
mov
cmp
je
mov
xchg
sbb
fimuls
mov
mov
addl
orl
jne
add
xor
cmp
add
push
cmpsb
jmp
shr
dec
shrb
mov
and
jne
mov
push
pop
outsb
clc
xor
leave
inc
test
xor
pushf
mov
sub
push
and
icebp
cmp
pop
lds
dec
push
dec
dec
dec
pop
lcall
or
out
cmp
sahf
ret
lret
pop
mov
decb
jne
xchg
or
or
sub
dec
mov
addr16
pop
pop
dec
bound
dec
cmc
out
jecxz
and
pop
jbe
orb
adc
decb
inc
call
push
or
das
pop
sub
jge
or
cli
jmp
out
or
inc
mov
or
inc
or
lcall
jo
subb
or
mov
in
sbb
push
sbb
xor
test
test
xchg
lea
jne,pt
cmp
ret
cmp
out
mov
and
add
sbb
int3
scas
pop
sbb
mov
inc
mov
ss
push
mov
adcl
pop
adc
adc
or
sbb
xor
cmp
pusha
pop
mov
lea
int3
mov
pop
dec
sub
outsb
imul
repz
push
ds
mov
sbb
mov
xor
mov
out
jmp
mov
mov
lock
movsl
mov
or
enter
loop
push
das
rorb
adc
adc
fadd
lea
fsubrp
out
je
and
pushl
add
jno
call
rcrl
push
mov
bound
adc
rcrl
push
mov
mov
mov
leave
ds
pop
or
outsb
push
add
or
fs
adc
sub
fcmovne
pop
mov
rorl
xchg
clc
cmpw
mov
add
cmpl
dec
pusha
test
js
or
push
fwait
pop
lahf
sbb
dec
adc
pop
inc
mov
or
negb
or
jbe
cld
inc
sbb
call
xor
dec
cmp
cmp
pop
ret
pop
dec
mov
out
push
xchg
je
jg
movsb
rorb
push
cmp
out
xchg
sub
dec
clc
addr16
xchg
daa
mov
adc
in
rclb
sub
cmp
pop
xlat
test
daa
push
xor
or
inc
and
call
ret
mov
dec
mov
adcb
add
inc
mov
or
cs
popf
nop
mov
jl
cmp
je
sti
xchg
outsl
loopne
loopne
push
and
push
das
xor
out
sbb
rcrl
inc
cmp
out
dec
jne
cld
adc
sbb
push
pop
and
in
lcall
mov
fimuls
jne
sbb
xchg
sbb
or
push
and
push
push
lret
add
jb
test
mov
xor
imull
lea
lret
sub
adc
stos
leave
and
cmp
mov
sbb
js
mov
pop
sub
div
clc
dec
pop
dec
cltd
mov
mov
sub
sbb
adcl
shrb
fisubrl
inc
imul
add
pop
aaa
testb
in
push
pop
stc
or
into
rcrl
mov
dec
jecxz
pop
adc
jg
rol
mov
fisubs
ret
divl
dec
out
mov
sub
push
call
add
sbb
jb
dec
jo
cltd
into
mov
add
add
mov
pop
jp
or
xor
sub
push
mov
mov
adc
adc
lea
pop
jb
or
add
sub
pop
pop
lods
out
or
and
and
pop
hlt
push
push
lock
cli
add
push
lds
pushf
shlb
adc
in
jle
push
mov
jns
and
push
pop
add
dec
testl
lea
outsb
and
add
arpl
mov
add
andl
push
add
jbe
ss
testb
cmp
jae
out
cmp
push
add
je
test
insb
clc
lret
into
addb
mov
add
xchg
push
call
cmpsb
mov
pop
shll
pushl
fsubp
xor
adc
inc
pushf
in
add
cwtl
dec
cltd
stos
pop
ret
pop
mov
and
es
data16
push
fld1
push
xor
push
ds
mov
movsl
and
xor
fiadds
ds
adc
loope
push
rorb
orb
sbb
in
pop
jne
es
test
sub
lea
enter
xor
add
sub
jb
imul
add
inc
js
mov
inc
pop
fdiv
mov
in
call
ljmp
cmc
jmp
lods
mov
fiadds
cmpsb
fcomp
fucomi
mov
pop
lahf
jmp
imulb
jae
adc
imul
or
or
mov
jecxz
and
or
add
or
out
dec
nop
aad
add
cmp
jae
inc
popf
sbb
rolb
cmpsl
mov
lock
adc
push
add
and
or
or
ficomps
je
lret
clc
out
push
or
call
pop
clc
sbb
stos
jg
shrb
or
pusha
pushl
mov
test
shr
pusha
sub
mov
jne
push
pop
xchg
adcl
or
sub
xor
sahf
sub
aad
scas
mov
jae
or
push
mov
mov
dec
or
bound
jle
cmpsb
insb
andnps
add
pop
sbb
jle
xchg
leave
ss
in
xchg
jno
pop
ss
inc
sub
dec
jp
loopne
lea
mov
mov
mov
mov
jne,pn
sbb
into
les
fs
adc
or
or
in
scas
adc
and
jg
cwtl
push
mov
pop
mov
jecxz
ja
fsubr
fucomi
into
mov
les
sbb
push
call
jmp
push
das
lret
insb
mov
aaa
xor
or
and
mov
imul
sbb
sbb
adc
dec
cmp
push
dec
fcoms
pop
dec
out
mov
xorb
sbb
push
sbb
and
xor
roll
int3
cmp
shlb
jg
cmp
push
jbe
mov
jbe
or
mov
loopne
stos
in
pop
add
das
cmp
das
and
faddl
pop
add
sub
add
push
lahf
fsubrs
mov
cmp
in
adc
cmpl
mov
dec
mov
lock
imul
movsl
lahf
pusha
imul
lcall
dec
dec
cmp
rorl
cmp
or
mov
and
jle
mov
ja
dec
cmp
pop
loop
mov
and
into
aam
add
or
dec
out
pop
sbb
dec
add
test
or
pop
movsb
lret
add
jne
cld
hlt
inc
xor
add
les
cs
nop
pop
pusha
push
push
fs
mov
add
xchg
push
fwait
rolb
push
xchg
jle
push
xor
pop
div
mov
aas
or
ja
call
in
mov
fimull
xchg
int3
sbb
and
cmp
je
and
in
hlt
dec
mov
xorl
jecxz
jae
pop
lock
imul
xor
daa
and
mov
and
nop
loop
inc
xor
mov
inc
or
je
xchg
sbb
fadds
repz
adc
enter
xor
iret
cmpsb
pop
jle
jnp
push
cmpsb
xchg
cmpsb
cmp
push
sub
sbbl
hlt
js
movl
fs
orb
push
call
sub
and
push
add
sbb
push
lret
push
push
cwtl
jne
sbb
inc
ret
imul
or
js
pop
jmp
push
lock
cmp
sub
pop
push
es
push
sub
and
xor
adc
dec
or
push
mov
and
mov
imul
cmp
push
push
adc
sub
fdivrl
adc
jle
mov
ja
dec
loope
iret
popa
sub
push
cld
divb
pop
cmp
jns
clc
ljmp
fsubs
mov
adc
sbb
hlt
jecxz
shl
mov
cli
loopne
ds
inc
mov
call
fsubl
push
daa
jl
push
jl
xchg
enter
les
xor
pop
das
nop
mov
jle
adc
ret
lea
imul
mov
lahf
adc
int
inc
mov
sub
fiadds
pop
fs
call
test
and
sub
adc
inc
ret
ljmp
shlb
repnz
int
push
inc
ret
ret
xor
push
xor
mov
sub
jb
cmc
jmp
jne
add
jne
mov
and
or
mov
sbb
push
std
sub
jg
xor
sbb
mov
xlat
mov
pusha
je
inc
ss
out
lds
shll
ja
sarl
mov
jp
dec
aad
cli
and
jmp
sbb
push
sub
sbb
sbb
xchg
in
add
mov
inc
pop
sbbb
adc
out
jae
call
cld
fsubl
sub
sub
lds
pusha
ss
dec
mov
inc
repnz
cmpsb
in
push
test
je
xor
test
add
lea
add
ja
outsl
ret
sbb
jecxz
and
cld
jne
fisttpl
pop
rorl
adc
lret
adc
ret
scas
adc
pop
jl
mov
sbb
cmp
mov
movsb
sub
pushf
sub
jg
lret
call
xor
test
jl
cmp
je
call
outsb
adc
call
pop
cmovs
push
dec
call
sub
call
lret
xchg
das
pop
pop
call
fs
in
call
jo
add
jb
call
icebp
jl
jmp
popf
xor
test
dec
rorb
in
mov
mov
cltd
pushf
mov
andl
jle
sub
xchg
xor
out
adc
dec
cmp
test
sti
add
mov
arpl
sub
dec
fwait
out
jg
pop
or
push
jae
shlb
adc
enter
daa
int
dec
int3
ljmp
and
and
cmp
rcr
mov
adc
xchg
ds
fidivs
push
enter
xor
jb
sbb
cmp
je
inc
dec
jne
movsb
dec
fdivl
push
mov
test
jne
pop
lret
divl
movsb
aad
xor
rolb
xchg
add
or
cmc
and
ret
add
jmp
jbe
pop
adc
push
sbb
cmpsb
stc
xor
mov
cs
adc
mov
jmp
inc
push
fisubrs
adc
rcrl
pusha
pop
jns
pop
sbb
mov
es
loopne
aad
lcall
outsl
stos
mov
jge
ss
mov
mov
inc
inc
cltd
js
jae
push
jmp
sbb
mov
mov
add
jg
popa
out
fimull
push
mov
pop
or
jo
call
or
cmp
ljmp
add
jns
or
xchg
fadds
aad
dec
sbb
jno
mov
push
ss
jno
sub
push
dec
mov
or
aas
push
fstl
fs
mov
push
add
loopne
dec
or
mov
cmpsb
es
sbb
inc
dec
test
in
add
push
mov
mov
in
pop
je
daa
push
fwait
xchg
xor
movhps
dec
sbb
sti
lock
inc
add
lea
inc
jb
mov
push
rorl
mov
clc
cmp
popa
or
adcl
cld
inc
dec
jecxz
dec
mov
mov
cmp
cmp
mov
fs
adc
std
mov
bound
xor
sbb
sbb
jg
lea
pop
mov
mov
mov
inc
cmpsl
add
xchg
popa
and
shll
lods
lock
push
inc
inc
dec
sub
mov
and
call
inc
js
gs
pop
mov
fldenv
and
pop
push
mov
rol
jmp
sbb
ljmp
and
in
fsts
pop
jle
and
dec
sbb
pop
jmp
cmp
sub
imul
inc
mov
or
push
mov
lock
or
je
and
cmpsb
mov
dec
or
roll
lea
dec
pop
les
sbb
sub
fwait
add
out
ss
adc
push
and
jle
fists
and
push
jg
outsl
inc
sbb
repz
or
jbe
jle
xor
lock
outsl
ja
jo
sbb
mov
gs
or
mov
cld
xor
sub
sub
or
jnp
xor
xchg
into
jg,pt
aad
loopne
icebp
add
adc
dec
daa
icebp
sub
sub
ja
sbb
shrl
rorl
sub
mov
lock
jl
rep
mov
xor
clc
shll
xchg
popa
out
jle
dec
or
and
or
xchg
pop
and
push
push
call
insl
sub
xor
xchg
dec
sbb
sti
xchg
addb
andb
add
call
pop
jne
call
lea
or
pop
xor
insb
test
push
dec
popf
inc
sub
pop
inc
adc
xor
lds
iret
xchg
in
add
inc
xor
and
shrb
mov
jp
fbstp
iret
in
cli
nop
mov
sbb
mov
and
enter
push
adc
and
addr16
mov
call
xlat
dec
imul
push
sbb
and
adc
xor
incl
mov
add
sar
cmp
mov
add
jbe
rolb
out
not
inc
sahf
loopne
jo
call
inc
sub
div
rol
jmp
jge
jmp
pushl
stos
mov
push
ret
scas
or
stos
cmp
push
int
loop
sbb
out
insb
daa
rorl
sbb
and
push
inc
pushl
mov
push
movsl
movb
mov
je
pop
sub
sahf
push
inc
js
mov
cmp
xchg
sti
movsb
jbe
mov
test
jp
or
nop
inc
pcmpeqd
push
push
fisttpll
std
stos
cmp
push
mov
mov
or
jo
xchg
dec
pusha
roll
call
jo
mov
add
sbb
xlat
push
ds
rclb
pop
inc
test
popa
pop
and
or
add
addb
jmp
lods
push
stos
sbb
inc
test
inc
in
ds
add
and
xchg
push
test
test
and
in
lcall
inc
xor
add
add
sbb
xor
jle
insb
cmp
movsb
mov
sub
mov
add
lret
pop
or
jnp
add
add
dec
and
int
lock
jmp
cmp
hlt
dec
or
loopne
jne
dec
xor
pop
mov
in
insl
icebp
push
inc
lods
push
dec
aas
cmp
sbb
and
shlb
dec
cmp
inc
sub
je
dec
lcall
mov
lret
cmp
jnp
adc
push
mov
cmp
jecxz
xor
mov
jmp
xor
fdivs
mov
test
cmp
cmp
add
and
movsb
andl
sub
mov
lock
push
movsb
mov
mov
inc
cmp
jne
mov
shlb
adc
mov
or
out
pop
xorb
fsubs
fdivrs
push
push
push
mov
or
pop
sbb
mov
add
lretw
adc
sbb
subb
daa
inc
lahf
mov
inc
push
or
aad
lods
movsb
shll
push
lods
mov
ficoms
inc
inc
nopl
add
add
jo
add
push
cmp
js
nop
add
lds
xchg
xchg
add
lods
lock
add
or
inc
xor
in
add
daa
repnz
xorl
inc
sub
lods
pop
sti
loopne
add
inc
or
add
movsb
add
cmp
push
push
int3
jne
cmp
sbb
test
bound
add
or
sub
xor
mov
cmp
push
mov
enter
je
out
sbb
add
test
and
je
add
push
jg
jmp
add
jnp
add
pop
pop
popf
pop
sub
xor
pop
jno
add
int
sbb
ret
test
xchg
push
fwait
mov
jne
or
je
push
pop
pop
cmp
mov
jl
inc
mov
dec
mov
in
sub
fildll
sbb
call
mov
sbb
add
push
cwtl
pop
mov
in
adc
adc
leave
cwtl
xor
cmp
fldt
sarb
adc
and
cmc
in
jl
cmp
cmpb
cmpsl
mov
inc
mov
push
mov
jmp
sar
sbb
aam
adc
adc
or
mov
xor
mov
mov
adc
js
push
adcb
xor
stc
in
jnp
aad
jmp
call
jmp
insl
lods
in
scas
stos
les
stos
mov
faddp
test
jnp
add
push
iret
mov
jecxz
pusha
mov
push
or
pop
sbbb
pop
test
jbe
mov
loopne
mov
or
cli
sub
fcom
pusha
mov
adc
mov
and
call
fistpl
ss
mov
lret
cli
pusha
xor
sarb
fbld
inc
and
cmp
push
pop
push
adc
or
ret
cli
xorb
adc
sbb
push
stos
idivb
sbb
jl
js
jmp
mov
pop
cltd
call
jno
adc
and
mov
mov
adc
scas
adc
lahf
xor
cmc
mov
or
and
sbb
ficoml
ret
movsb
pop
icebp
jo
or
inc
and
sub
mov
aaa
aad
jge
cmp
dec
and
dec
push
cmp
fsubs
push
pop
pop
fldcw
cmp
call
sbb
shrl
imul
push
inc
or
stc
adc
jnp
in
xchg
jge
pop
sub
test
lahf
add
or
cmpb
cmp
xchg
ds
bound
lret
je
ds
lea
loope
rcrb
shl
mov
ret
bound
aaa
lock
fnstcw
pop
inc
rcrb
mov
mov
dec
or
sub
add
push
push
fwait
jge
sahf
rorb
mov
dec
xor
mov
inc
movl
sahf
or
jge
inc
add
lcall
and
pop
inc
sbb
mov
test
gs
xor
inc
std
pop
jmp
sub
jge
mov
cld
or
rol
push
mov
add
xor
mov
jmp
push
push
add
dec
pushf
and
sub
sahf
mov
sbb
cmp
push
inc
adc
add
mov
pop
mov
sub
loope
sub
bound
mov
lds
mov
mull
movsb
mov
shr
inc
push
pop
jnp
decl
fcmovnbe
ljmp
div
pop
dec
adc
ljmp
mov
jb
cmp
or
cmp
jbe
dec
sub
sbb
add
out
or
fadds
ret
pop
mov
lock
loopne,pt
fisubl
popf
mov
cld
and
rcrl
and
je
cmp
out
or
addl
sub
lea
hlt
push
pushf
pop
std
jg
rcr
xor
pop
sub
je
push
popf
adc
push
call
mov
xchg
testl
js
ja
jge
loopne
sub
fwait
and
add
adc
or
sub
hlt
mov
test
sub
pop
add
loope
imul
and
inc
imul
jge
orl
jbe
push
mov
xchg
add
call
mov
pop
fadds
lea
jbe
mov
push
push
xchg
mov
push
push
sub
push
jno
test
inc
je
ret
bound
fcoms
sub
pusha
inc
pushf
sub
sub
out
inc
mov
or
cmp
adc
mov
add
in
mov
lds
dec
pop
inc
mov
dec
add
pop
mov
mov
xchg
sub
jmp
ret
xchg
sarl
sbb
push
or
loope
into
xchg
inc
ret
push
push
mov
adc
or
mov
push
push
aam
ds
add
push
push
push
xchg
xor
pop
pop
pop
movsl
shlb
jnp
add
adc
enter
adc
loope
push
cmp
or
test
adc
add
pop
lods
icebp
adc
sbb
push
mov
or
ficompl
test
fidivs
adcl
push
mov
jns
add
arpl
xchg
pop
xor
add
mov
add
inc
lret
add
dec
das
mov
xchg
lret
dec
mov
int3
mov
xchg
je
mov
push
xchg
jae
scas
xchg
mov
hlt
aam
lcall
imul
mov
das
mov
sub
or
inc
sarl
fidivrs
or
test
out
sbb
popf
mov
movsb
push
and
push
je
xor
aad
pop
fs
sbb
testb
mov
sbb
clc
push
aas
push
dec
and
jb
orl
fsubrp
inc
adc
cmp
cmp
mov
je
jo
es
push
je
sbb
adc
fstps
adc
dec
inc
pusha
jbe
imul
lahf
das
adc
pop
push
inc
aad
add
jp
pop
jbe
add
mov
add
and
jno
mov
push
test
pop
and
testb
pop
enter
jbe
cmp
testb
ja
push
xor
inc
cmpsb
mov
adc
mov
add
ljmp
mov
jne
and
aad
insl
movsl
mov
in
int3
mov
push
adc
test
mov
hlt
push
cli
fdiv
adc
cmp
dec
mov
nop
scas
xor
xor
xor
inc
out
pop
scas
dec
ret
adc
and
add
mov
ljmp
arpl
fsubs
loopne
sbb
daa
in
stc
mov
lock
orb
jmp
dec
and
push
shll
aam
sub
push
fdiv
pop
inc
cmp
jle
cmp
pop
push
cmpsb
ss
ret
pop
das
ds
test
lahf
mov
enter
push
push
mov
aas
call
mov
mov
inc
jmp
mov
mov
xor
mov
lret
hlt
or
push
adc
add
pop
jg
pop
int3
sahf
daa
pusha
mov
push
inc
lds
pusha
mov
jmp
lcall
and
dec
pop
dec
cld
pusha
pop
je
push
push
jbe
mov
fidivrl
adc
push
dec
dec
add
lea
cmp
enter
mov
testb
xchg
mov
cmp
xor
pop
gs
xor
mov
mov
in
cmp
rcrl
or
pop
jmp
sub
sub
adc
add
jo
push
push
mov
je
xchg
incl
addb
fdivs
sbb
jge
inc
aas
sub
sub
xchg
mov
movsb
xchg
pop
and
clc
add
jne
cmp
stos
xorb
pop
ficomps
inc
cld
adc
std
adc
xor
pusha
fs
mov
leave
dec
cld
shlb
mov
inc
dec
adc
mov
ret
cmpsl
push
clc
sbb
imul
dec
sbb
add
in
popl
loope
sub
ds
xor
clc
jmp
mov
xchg
mov
inc
xchg
addr16
mov
out
sbb
arpl
xchg
jne
sbb
mov
xchg
add
ret
fnstcw
cmp
add
shll
mov
ret
pop
scas
in
add
add
adcl
push
and
cmp
push
jle
mov
sbbb
scas
adc
cmp
clc
mov
orb
xor
fistpl
loopne
nop
mov
mov
mov
in
adc
cltd
xchg
les
or
hlt
jae
mov
ljmp
inc
inc
sbb
inc
mov
mov
sub
je
dec
loop
adcb
jmp
adc
dec
rorl
cmc
sub
idivb
scas
neg
je
push
jmp
call
jge
stc
xor
fsubrs
jge
rcll
push
scas
arpl
push
jmp
shll
jae
mov
pop
sub
scas
pop
xchg
mov
iret
les
shll
xor
rcll
jp
xchg
xlat
data16
stos
testl
inc
in
jne
popf
adc
mov
pop
sbb
ljmp
adc
movsl
outsb
pop
in
add
rclb
xlat
mov
mov
xchg
cmp
lock
data16
push
lret
mov
jo
jecxz
outsb
add
outsb
and
sbb
stos
cmp
dec
sub
push
mulb
mov
sbb
or
inc
andl
nop/reserved
xorb
data16
jne
inc
loopne
or
push
repnz
mov
dec
inc
mov
cmc
aam
daa
sti
or
and
sub
push
push
or
mov
xchg
push
xchg
cld
push
dec
addb
sbb
add
push
mov
sahf
popa
add
loopne
ret
push
pop
sub
add
push
xor
push
das
push
sub
fwait
cld
add
sbb
xorl
cmp
rcrb
xor
adc
sub
push
fistpll
and
xor
call
mov
xchg
sbb
inc
jmp
jmp
es
sbb
ret
or
add
test
add
aaa
sub
cmp
aas
test
push
aam
test
clc
shrb
sbb
push
and
mov
sub
pop
xchg
adc
mov
jae
dec
hlt
dec
fimuls
and
adc
pop
mov
pop
jne
das
loope
repnz
aam
push
dec
int
push
testw
mov
test
lret
mov
add
outsb
loope
mov
loop
inc
lahf
movl
insl
test
jge
enter
mov
cmp
or
push
mov
push
enter
mov
and
cmp
cmp
out
lahf
jae
sbb
pop
mov
push
adc
add
xor
adc
clc
xor
inc
jmp
repnz
mov
xchg
ror
push
ret
jmp
std
sbb
fsubr
mov
push
into
sti
ret
rclb
jmp
sti
xchg
xor
cs
pop
push
dec
adc
jbe
sub
aam
gs
lret
gs
jns
ret
xor
pop
shll
sub
out
or
jl
or
test
push
aaa
lods
push
mov
jle
add
jl
add
or
inc
mov
into
push
push
cmp
and
xchg
js
mov
xor
inc
mov
xorl
cmp
or
sbb
jmp
les
cmp
sub
xor
iret
xchg
lock
dec
test
nop
aam
inc
adc
aaa
jmp
rcll
enter
xor
pop
cmp
stos
mov
cmp
and
or
xchg
or
pop
jne
dec
add
add
jne
inc
lds
and
fadd
mov
movzwl
sub
je
outsl
push
test
xor
sbb
hlt
mov
sub
sbbb
jne
pop
fnstenv
xor
ror
dec
adc
sbb
add
insl
adc
lret
sbb
cwtl
fisubl
dec
or
scas
dec
and
or
loope
push
fists
flds
mov
js
inc
jne
stos
lret
xchg
and
or
ss
or
jb
inc
jl
jbe
call
add
sbb
cmp
and
dec
cld
call
ret
and
push
lods
jno
mov
test
add
ret
sub
inc
xor
lds
add
adc
and
ror
push
enter
push
inc
inc
std
sub
into
movsl
orl
adc
or
ja
call
andb
mov
or
mov
sbb
add
int3
pop
adc
insl
pop
jecxz
pop
stc
pop
scas
adc
clc
stc
add
adc
inc
or
push
les
es
sti
xchg
push
orb
adc
mov
ret
lret
add
lock
insb
fldl
xchg
sbb
mov
inc
pop
fs
cmpb
pop
xchg
testb
add
jmp
sbb
je
mov
or
mov
cs
subb
jbe
je
adc
out
mov
jb
cmp
ja
add
cmp
adc
adc
clc
cmp
jne
cmpsb
sarl
or
adc
jb
neg
loop
mov
push
add
inc
add
jns
arpl
loope
dec
add
inc
ret
mov
push
push
or
lock
xchg
mov
push
push
dec
pop
repz
pushf
nop
pop
sbb
call
out
cmp
mov
testb
mov
in
imul
cmp
push
mov
add
jge
xchg
stos
sbb
sbb
mov
ljmp
pop
add
std
xor
lcall
mov
jo
mov
mov
andb
cmp
or
jns
add
das
call
pop
shlb
xchg
jo
orl
popa
stos
pop
sub
ret
xlat
sbb
jecxz
adc
dec
popa
inc
pop
je
imul
cmp
push
jg
mov
or
mov
mulb
cmp
jmp
push
add
call
pop
xor
pop
or
icebp
inc
sub
sbb
arpl
mov
pop
gs
sbb
add
mov
shll
insb
pop
and
push
ss
addl
mov
fcomps
inc
fldcw
sbb
cmc
push
mov
int3
cmc
mov
add
xlat
cmc
inc
sub
pushf
out
mov
fcmovbe
and
fmull
aaa
movsl
sbb
data16
movsb
jle
push
xchg
pushf
test
sbb
or
jb
orl
pop
mov
pop
movsb
push
inc
and
in
mov
jmp
popa
push
arpl
addl
mov
xchg
cmc
call
cwtl
sbb
jo
push
andl
or
fisubs
pop
lea
ljmp
or
test
cmp
inc
fadd
loopne
fcmovnb
out
iret
je
mov
cmpsb
lahf
jne
inc
lret
je
test
sub
or
push
insb
pop
sub
test
adc
mov
mov
add
stc
scas
and
xor
in
mov
or
scas
and
or
push
mov
cld
lcall
out
in
sahf
adcb
xchg
and
fdivl
sti
jns
aam
xchg
pop
addr16
outsb
dec
dec
sbb
std
cld
and
jnp
movb
add
pusha
mov
sub
mov
inc
insl
sub
nop
xchg
fdivl
loopne
sbb
sbb
add
push
cmpsb
lods
and
pusha
sbb
xchg
add
test
test
lret
lcall
movsb
add
push
inc
add
cmp
mov
xchg
icebp
fldl2t
and
mov
adc
push
or
jno
je
add
cmp
dec
aam
or
push
cld
mov
aad
fisttps
into
call
imul
cmp
hlt
or
jp
fnstsw
push
cmp
bound
out
add
adc
loope
cmp
jl
sahf
mov
adc
dec
cs
mov
rol
and
sbb
dec
call
mov
add
lock
sbb
mov
mov
scas
loop
test
fmuls
popa
lcall
movsl
inc
int3
sbb
call
test
adc
adc
sub
dec
cmp
imul
push
aam
xchg
enter
outsb
sbb
pop
pusha
fmuls
gs
mov
enter
mov
je
fs
sbb
ret
ret
jp
or
adc
movl
push
jmp
repz
dec
and
or
sbb
rclb
popf
iret
or
push
orb
xchg
mov
incb
add
push
arpl
movsl
cmp
fdivrs
pop
arpl
imul
push
inc
shlb
fsubrp
add
enter
aam
enter
adc
cld
dec
push
mov
loopne
aam
jge
cmp
dec
push
inc
or
jbe
pop
sub
jge
ss
mov
adc
add
jnp
jbe
mov
outsb
xchg
inc
add
loope
jl
orl
mov
jne
mov
cmp
or
fiaddl
jns
ret
icebp
loopne
inc
inc
test
lock
xchg
cmp
call
out
push
mov
test
je
mov
push
adc
shl
pop
jmp
adc
cmpsb
out
repz
and
ds
lea
cmpsl
hlt
in
rcrb
inc
test
adc
pop
call
adc
sub
daa
bound
pop
sub
dec
push
push
sub
in
sub
mov
cmpsl
add
call
movsl
mov
imul
push
test
xchg
lock
hlt
dec
movl
test
lock
cld
test
sbb
push
cmpsb
add
ja
std
or
adc
or
adc
inc
or
mov
adc
push
call
inc
or
and
testb
testb
je
outsb
inc
sbb
mov
fisttpl
jecxz
das
or
aas
lock
add
ds
dec
inc
loopne
sbb
mov
call
nop
jmp
je
mov
outsb
and
sub
decl
mov
pusha
in
or
cli
cmpl
mov
add
sub
add
push
je
fs
cmp
sub
ret
dec
or
push
xor
into
add
cmpsb
pop
cmpl
or
mov
add
hlt
xchg
dec
or
pop
sbb
sub
insb
cld
xor
movsb
and
cs
jmp
into
fmull
mov
sahf
push
cmpb
mov
scas
xchg
dec
xchg
cs
clc
xor
cmp
aam
adc
and
and
adc
jne
inc
sbb
dec
aas
in
test
mov
fldt
push
dec
add
dec
ret
pcmpeqb
dec
imul
imul
sub
push
push
pushf
jle
fsubr
ret
out
xchg
sahf
jne
push
cmp
daa
inc
lock
lret
jmp
mov
add
dec
cltd
orl
pop
das
clc
push
mov
or
add
inc
lea
or
ret
jno
or
mov
std
aas
push
adc
jnp
sarl
repnz
sbb
or
sarb
lea
jle
pop
ss
adc
push
push
xor
push
inc
cli
add
incb
xor
adc
or
jg
jmp
pusha
pop
jg
nop
add
fs
pop
jl
mov
jno
nop
add
pop
call
jle
call
mov
cmp
into
call
ficoms
dec
jmp
loopne
sbb
mov
mov
push
jle
fnstenv
xor
and
fsubp
or
inc
inc
mov
pop
or
mov
pop
pop
jp
add
mov
sub
imul
mov
mov
mov
adc
rcrb
add
push
mov
or
cwtl
fisttpll
cmpsb
call
xchg
rcrb
out
push
cmp
les
push
pop
adc
pop
in
mov
jae
out
je
push
pop
orl
cmp
dec
rclb
scas
pop
in
mov
test
pop
or
ret
aas
adc
inc
dec
pushf
stos
std
jge
adc
add
xor
mov
push
push
push
ja
je
lock
shrl
aas
dec
roll
jle
cmp
roll
sub
pop
cmp
xchg
and
jge
jne
scas
sbb
and
ss
stc
leave
xor
mov
xor
sub
sub
jge
outsl
loop
rorb
test
mov
inc
and
push
or
dec
repz
es
neg
and
inc
or
iret
sarb
add
push
loop
jb
mov
call
lock
mov
add
repnz
loop
mov
mov
and
add
add
cmpsb
sti
repnz
nop
andb
in
fsubrs
pop
je
call
fsubs
cltd
aam
xor
inc
mov
jg
pop
push
inc
imul
or
jmp
cmp
inc
jae
in
mov
sbb
push
mov
lds
cmp
gs
pop
mov
fsubrp
call
outsb
loop
sbb
dec
clc
and
testb
pop
jecxz
je
mov
cmpsb
addl
gs
xchg
inc
xchg
jne
stos
sbb
mov
cmp
or
and
sbb
ljmp
or
xchg
sarb
inc
dec
je
dec
jne
mov
ds
or
lods
jg
fdivs
loopne
sbb
cmpsb
add
sbb
adc
or
xor
mov
sbb
jnp
movsb
icebp
sub
pop
or
dec
add
pop
leave
mov
je,pn
inc
dec
pop
fwait
cmp
lea
xor
hlt
inc
cs
mov
pop
sub
dec
mov
cmp
push
popa
pop
sahf
add
rolb
fiaddl
xor
mov
call
test
fmuls
sub
rorl
lea
adc
pop
bound
int3
inc
in
clc
xchg
sbb
add
xchg
xor
jb
sbb
push
loope
adc
shlb
push
cmp
jl
rorb
sahf
jg
lcall
mov
hlt
jg
js
jne
lea
testb
jne
sub
call
add
mov
cmpsl
push
ficomps
mov
jb
cmc
dec
xor
and
shrb
loopne
sbb
cmp
jo
mov
dec
push
and
push
and
fsubrs
enter
lahf
or
jmp
mov
in
sub
xor
sti
or
add
aaa
das
xchg
dec
call
and
cmp
mov
sbb
in
push
test
popa
fisubrs
hlt
jne
frstor
fstpt
mov
push
and
add
xor
aad
mov
mov
cmp
mov
pop
push
jo
inc
pop
cmc
icebp
xorb
jle
xchg
mov
in
outsb
aaa
mov
or
jmp
ret
dec
fmulp
outsb
clc
lahf
jle
test
jmp
pop
push
cmp
sbb
mov
adc
jne
add
xchg
clc
dec
adc
push
clc
arpl
clc
insl
sbb
mov
jae
cmp
jae
andb
cmp
popl
or
sahf
mov
add
pusha
pop
movsb
jle
outsb
inc
push
mov
mov
jle
jbe
loope
fs
cmc
mov
adcb
decl
jg
jecxz
daa
fistl
orl
sub
mov
fldl2t
pop
hlt
popa
jne
repz
inc
cld
aad
icebp
loopne
jecxz
out
jmp
jge
and
call
add
fsubl
pop
and
out
pop
xchg
jb
loopne
dec
add
pop
xor
aas
cltd
call
and
add
scas
xchg
arpl
inc
or
and
enter
ljmp
xchg
leave
adc
or
mov
enter
xchg
aam
inc
lret
cmpsl
clc
push
fdiv
jne
test
jg
cmpl
mov
fwait
popa
rcrb
and
scas
pop
and
imul
cmpl
push
pop
mov
cltd
inc
shll
jg
xor
mov
cs
cmp
jb
testb
pop
jg
lret
testb
fadd
xchg
xor
jp
jge
push
mov
jnp
jmp
inc
sbbl
je
mov
sub
cmp
jb
cmp
jbe
mov
push
or
mov
push
nop
ss
inc
stc
push
ja
in
pop
sub
sub
imul
sbb
or
mov
sbb
jmp
xor
lods
xchg
cmc
shlb
fstpl
inc
jmp
sub
or
mov
cwtl
xlat
mov
test
adc
icebp
mov
stos
pushf
call
dec
lock
mov
imul
jo
jmp
and
inc
in
imul
out
mov
pop
pushf
xor
in
jmp
les
dec
or
lock
cs
jmp
test
jmp
sbb
sti
int3
jmp
enter
jmp
nop
fwait
inc
out
aam
fsubl
inc
push
mov
ret
inc
add
mov
mov
and
out
or
xor
cmp
dec
sbbb
jmp
insb
pop
in
jmp
and
loope
sbb
aaa
pop
push
das
pop
mov
scas
jge
pop
xchg
shrb
mov
xor
jns
fcomps
iret
push
inc
loop
xor
inc
hlt
inc
adc
mov
push
cwtl
out
sbb
inc
inc
adc
add
jo
mov
inc
jge
clc
call
pusha
call
sti
xor
addr16
xchg
movsb
shrl
mov
test
sbb
cmpsl
jmp
test
xor
fwait
repz
out
jae
jmp
test
adc
out
aad
add
ljmp
inc
ljmp
repz
in
shrb
mov
nop
iret
repz
jp
pop
dec
cmp
sahf
cmpsl
stc
cmp
les
lock
push
or
push
and
repz
xor
insb
test
mov
in
jns
out
sbb
data16
jns
out
lcall
sahf
out
testb
cmp
cmp
push
jp
stos
ret
iret
mov
pushw
sub
repz
repz
loope
cmp
mov
out
xor
cmpsl
popf
dec
sub
push
sbb
jmp
repz
shrb
mov
inc
cmp
ret
repz
push
cld
outsb
shlb
add
ss
ret
into
jae
and
mov
insl
repz
lea
aaa
and
xchg
xor
add
jne
ficomps
and
dec
repz
lea
xor
into
repz
dec
jg
decl
cmp
rclb
cmpl
bound
dec
js
movsb
and
inc
mov
xchg
and
push
and
adc
push
inc
mov
and
jg
cs
imul
or
enter
or
cmp
or
aaa
outsb
gs
xor
jae
push
shrb
movsb
push
pop
inc
popa
bound
sub
dec
ret
push
jb
js
cmpsb
je
push
dec
add
xchg
jbe
pushl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
test
lcall
and
and
es
sub
sub
sub
cs
sbb
jg
jne
cmp
jmp
pop
pop
pop
pop
pusha
or
jl
jle
sbb
fists
aaa
and
imul
outsb
and
sub
mov
push
push
enter
sub
movsb
and
dec
cmp
ret
push
xchg
fisubs
aaa
andb
imul
jns
nop
ficomps
cs
jb
jo
ds
cmp
dec
inc
jb
rclb
fildl
daa
daa
pop
lods
bound
and
mov
je
arpl
je
pop
mov
jne
cmp
popa
outsb
rorl
ret
pop
push
jbe
mov
inc
or
cltd
and
in
add
sahf
pop
pusha
inc
jbe
incb
pusha
insl
rclb
pusha
lahf
fs
mov
push
gs
and
cmp
push
jmp
pop
sbb
gs
and
sbb
aad
rclb
outsl
gs
pop
popa
add
popa
arpl
push
add
fwait
mov
adc
push
and
jno
xor
add
pop
cltd
call
in
jbe
subl
pop
loope
adc
bound
ret
xchg
inc
or
push
push
dec
testl
faddl
lods
dec
je
and
inc
arpl
mov
or
xlat
xor
andb
push
ds
popa
mov
xor
rcl
jg
ljmp
adc
or
or
pusha
add
pusha
cmp
inc
mov
enter
das
shll
xchg
jecxz
xor
sub
mov
cmpsl
mov
mov
das
je
cmp
scas
mov
aaa
in
mov
test
pop
cmp
sti
cmp
cmp
or
ds
and
inc
push
iret
sub
lcall
push
jle
sub
jae
out
push
fs
add
push
and
iret
jle
sub
sub
pop
or
enter
sbb
aaa
push
mov
out
xor
jle
push
and
adcb
xchg
movsb
and
sti
mov
ret
fs
in
mov
das
jo
ss
push
jb
iret
or
in
cld
sbb
pop
or
cmpsb
dec
pop
sub
xor
jo
sub
push
test
or
out
sub
push
addr16
push
dec
cmp
fsubp
jns
and
adc
ret
ds
out
iret
roll
sub
clc
push
faddl
cld
enter
sahf
hlt
cwtl
push
lock
push
call
out
int3
enter
sahf
sarb
jns
test
mov
jns
push
xchg
nop
mov
jns
jl
je
out
sahf
out
push
out
sahf
pop
push
dec
cmp
sub
lock
shlb
nop
jo
sub
out
sahf
out
int3
movsb
mov
out
sahf
je
pop
cmp
and
dec
repz
clc
mov
ds
repz
xor
hlt
push
movsb
aam
clc
cmp
pop
les
fwait
nop
lret
lcall
mov
push
dec
dec
push
push
and
mov
add
inc
and
push
xor
adc
and
movsl
mov
test
cltd
lock
je
insl
nop
and
xor
imull
pop
and
in
xor
or
cmp
inc
popa
data16
daa
mov
jne
pop
test
jbe
dec
insl
sub
mov
jl
xchg
jo
pusha
aas
xor
addb
dec
rolb
push
push
scas
inc
popf
leave
imul
cmp
jle
ret
dec
or
mov
fs
pusha
aas
test
je
orl
in
ds
fcoms
or
imul
ret
jns
cmc
aad
mov
or
andl
dec
imul
das
ljmp
dec
roll
sub
xor
sti
outsb
add
inc
xchg
sub
mov
out
xchg
mov
cmp
push
loope
xorl
popa
xor
xor
lds
push
xchg
jnp
sbb
cmpsb
cs
out
or
or
xor
shll
mov
push
adc
movsb
add
add
mov
add
ja
outsl
outsl
rorb
mov
adcl
imull
mov
inc
xchg
sarl
loopne
mov
and
inc
das
xor
out
adc
mov
or
dec
insl
ret
pop
arpl
mov
cmc
pusha
add
xor
or
inc
aaa
insl
in
imul
or
das
ja
mov
imul
mov
scas
mov
jae
push
push
leave
pop
push
push
data16
call
mov
stos
sbb
ret
js
xor
negl
push
cmpsb
xchg
sub
and
lock
cmpsl
xor
or
xor
je
rorl
adc
addl
loope
sub
lret
inc
sub
outsl
xchg
and
or
dec
ret
cmp
ds
test
cmp
pop
lea
xor
and
dec
cmp
push
fstpl
sbb
push
subb
js
mov
dec
imul
xor
fs
push
xchg
aaa
pop
inc
xor
xchg
sub
xor
pop
int
add
add
arpl
push
and
add
add
add
add
mov
cmp
inc
or
jbe
addl
imul
adc
mov
add
lret
adc
pop
adc
xchg
pop
add
or
filds
jle
cmpsb
push
mov
test
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
mov
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
aaa
or
loopne
loop
in
out
mov
xor
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
dec
aam
xorl
mov
int3
xchg
shrl
incl
inc
xor
mov
sarl
push
adc
dec
cmp
cmp
negl
pop
add
dec
out
lcall
add
das
das
adc
push
inc
push
loopne
dec
push
inc
out
mov
pcmpeqd
adc
daa
rorb
adc
dec
ret
sub
mov
lahf
and
xchg
outsb
gs
or
inc
inc
and
addr16
test
inc
bound
mov
popa
outsb
adc
iret
cmp
cmpsl
xchg
popl
leave
lods
out
ja
inc
popa
pushf
divb
mov
sahf
mov
push
gs
sbb
dec
outsl
outsb
pushf
jae
std
and
jbe
push
cmp
dec
inc
aas
cmp
sub
int3
mov
push
dec
insb
insb
adc
add
lea
push
push
add
add
clc
addr16
imul
pop
and
push
pop
or
push
stos
jg
mov
add
int3
and
push
add
pusha
push
cmp
js
js
or
cmp
add
icebp
in
out
xor
sbb
addb
fnstenv
addb
rorl
adcb
daa
xchg
jle
push
push
and
sub
mov
jnp
ror
add
pusha
pop
lock
mov
mov
je
das
mov
jae
jns
and
inc
addr16
incl
test
outsl
jo
cmp
rolb
or
push
pop
add
pop
cmp
subl
jo
ror
jmp
push
mov
out
xchg
mov
pop
mov
loope
push
popl
and
dec
pop
cmp
mov
mov
js
jo
inc
out
jne
jb
cs
pop
add
stos
bound
sti
jae
inc
fcomp
dec
nop
push
insl
pop
add
cmpsb
pop
in
sahf
jge
cmp
xlat
arpl
push
push
jnp
outsl
data16
aas
pop
add
call
je
cmp
inc
sbb
pop
aas
jae
gs
lea
add
cmpsl
aaa
xchg
xor
pusha
mov
add
lret
push
cmp
fistpll
pop
mov
dec
imul
sub
jp
lock
mov
push
add
addr16
daa
add
aas
add
scas
sbb
dec
adc
inc
xor
stos
iret
pop
xor
inc
insl
call
adc
outsl
negb
add
inc
push
js
xlat
fsubrp
push
inc
xor
xor
jb
jp
push
mov
push
arpl
mov
aam
outsb
shrl
addr16
and
adc
dec
lcall
mov
or
push
inc
push
cmpsl
les
pop
push
fs
sub
lods
xor
movsb
push
cmp
pop
sub
xor
in
xchg
test
lods
mov
pushl
sub
test
pop
in
xchg
cwtl
jmp
test
mov
and
sub
mov
cmpsb
sbb
and
cs
dec
ss
rcrl
inc
pop
and
dec
pop
daa
or
fidivs
call
push
fsubl
lods
cltd
mov
cltd
inc
add
dec
or
daa
subb
mov
sub
inc
das
inc
jne
je
das
xchg
outsl
cmp
inc
lock
fbstp
jo
jmp
test
fists
jg
das
and
push
fsubl
out
mov
add
xor
push
lods
insl
fcoms
inc
test
in
mov
pop
mov
outsb
lock
nopl
fildl
mov
das
cmp
aas
sahf
cmpsl
cmp
sbb
pcmpgtb
add
sub
in
push
adc
testl
or
aaa
fistl
negb
pop
cs
nop
aas
fimull
xor
pushf
push
imul
or
fmuls
ja
push
adc
jbe
dec
or
sub
fimull
cmp
jmp
push
out
push
mov
ret
pop
es
jg
dec
xor
scas
outsl
jae
cmp
jg
jno
jae
fwait
push
insb
fnsave
sub
mov
lds
sarb
jbe
inc
inc
mov
ja
add
lea
mov
inc
popf
mov
cmp
dec
mov
in
inc
sti
xchg
pop
movsl
iret
adc
adc
lock
add
xchg
add
mov
push
push
dec
mov
push
into
dec
push
lock
or
jns
ja
pop
push
pop
sub
jns
out
pop
add
add
xchg
push
stos
pop
ret
or
out
jns
or
lahf
sbb
or
mov
rol
movsl
aaa
outsl
in
xlat
out
push
scas
pop
push
and
aaa
shlb
cs
scas
push
sbb
stos
add
adcb
or
inc
out
jne
jo
in
pop
mov
add
les
pop
xor
aas
mov
mov
or
mov
std
mov
mov
mulb
lcall
dec
jno
out
and
adc
or
out
sarl
mov
rclb
in
mov
je
and
dec
adc
out
ror
adc
add
das
inc
push
pop
mov
and
cmp
mov
mov
add
inc
js
mov
adcl
outsl
or
mov
ja
jle
lret
sub
jo
dec
movsb
lock
arpl
outsl
jne
ret
jp,pn
enter
xchg
push
aad
adc
rclb
bound
jbe
add
pop
sbb
dec
popa
jo
icebp
dec
les
iret
cs
xor
nop
ret
std
sbb
das
push
or
adc
mov
imul
cs
sub
addl
adc
out
dec
push
movsl
mov
ja
sub
and
xchg
xchg
xchg
hlt
pop
adc
add
insl
pop
inc
inc
lahf
lods
addr16
scas
rorl
mov
adc
rorb
js
dec
lea
inc
shr
sbb
mov
inc
or
and
insb
fnstsw
js
and
pop
int3
in
std
and
sbb
mov
sbb
and
push
fwait
mov
jno
sub
cmpsl
cs
frstor
and
incl
push
jno
ret
mov
push
push
push
or
cltd
loopne
test
adc
fsubs
gs
gs
lahf
xchg
jle
cwtl
arpl
push
outsb
xchg
inc
lock
repz
adc
fwait
inc
dec
cmp
cmp
and
dec
or
sarl
mov
add
outsb
sub
sbb
test
dec
loop
lahf
sbb
xor
inc
mov
mov
jge
add
push
push
arpl
sbb
xchg
sub
dec
pop
aas
cmpsb
or
push
insl
and
push
push
cmp
dec
inc
aad
or
sub
imul
aam
fucomi
test
loopne
testb
inc
dec
cmp
sbbb
add
arpl
add
push
aaa
push
pop
cmp
jb
iret
jle
mov
mov
shll
adc
push
push
aam
and
or
fistps
mov
shrb
xor
sbb
rcr
ret
addr16
mov
jae
adc
iret
xlat
xlat
sahf
je
popa
xor
add
push
cmp
jmp
add
dec
inc
sbb
or
mov
jbe
dec
cmp
sbb
and
and
dec
or
es
fisttpl
sbb
pop
shll
lret
xor
jp
xor
dec
adc
mov
addr16
cltd
xchg
push
pop
fildl
xor
sbb
push
and
rclb
out
add
inc
jne
data16
add
roll
and
icebp
inc
out
xlat
js
xor
sub
pop
lcall
push
and
sub
pop
push
and
jnp
push
inc
lock
inc
or
xchg
shll
je
push
add
and
aaa
sub
dec
and
fistl
add
fcmovnb
sub
aaa
add
mov
mov
add
cs
adc
adc
mov
repz
and
mov
xor
add
mov
test
push
test
adc
cmp
add
cmp
aas
push
pusha
cmpb
lods
cmpsb
fisttps
mov
pop
sbbl
mov
inc
push
mov
mov
dec
cs
pop
inc
mov
mov
dec
sbb
in
call
mov
out
push
add
push
pop
fisubrl
fdecstp
rcr
fsubp
stc
inc
xor
xchg
mov
ret
testl
in
pop
pusha
nopl
pop
imul
insb
fst
clc
rcrl
test
and
mov
addr16
mov
ficoms
push
push
outsl
pushf
out
fisttpll
add
sbb
sub
pop
mov
wbinvd
outsb
fstl
scas
or
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
jns
insb
das
insl
push
and
jb
add
pop
andb
gs
daa
mov
aas
addl
hlt
sahf
pop
mov
aas
pop
ret
ret
leave
xlat
sbb
or
add
js
or
or
rorl
or
sbb
add
lea
leave
and
nop
and
xchg
xchg
add
lds
out
lcall
add
bound
adc
push
iret
xchg
jae
test
imul
mov
mov
pop
cld
iret
push
or
iret
repz
or
adc
fcompl
adc
sahf
out
push
sbb
hlt
int
cmp
rcrl
mov
repz
je
adc
fmul
iret
repz
and
lret
and
xor
fdiv
cmp
and
push
cld
mov
decl
es
fdecstp
dec
rolb
cli
roll
sub
out
sahf
cmpsl
and
sbb
adc
repz
adc
add
fldlg2
loopne
iret
repz
int3
enter
cmp
repz
iret
repz
test
mov
out
idivb
js
jo
push
repz
dec
inc
xor
call
and
or
sbb
movsb
ja
inc
mov
cmpsb
fiaddl
xchg
mov
dec
adc
push
testb
dec
testb
xor
sbb
decl
int
sarb
add
pop
ja
shl
imul
xorb
add
push
inc
es
jo
test
outsb
add
aas
push
push
push
dec
cmp
test
push
inc
jg
push
jle
push
add
pop
imul
lcall
repz
pop
js
mov
repz
out
adc
xor
cmp
xrelease
push
pop
ja
mov
lods
into
repz
mov
dec
lods
ljmp
loope
mov
inc
sbb
xchg
dec
add
outsb
mov
shrb
sbb
icebp
jns
add
push
pop
add
add
das
sbbb
iret
das
icebp
mov
cmpsb
pop
inc
inc
push
in
push
xor
xchg
add
js
insb
outsb
jae
and
cmp
push
shlb
sub
sub
jbe,pn
and
subb
gs
fs
and
or
ds
inc
mov
and
pop
pop
adc
add
mov
icebp
xor
inc
sbb
js
pushf
or
aaa
xor
xchg
xor
xor
clc
or
pop
xor
jb
xor
xor
push
inc
idivb
lcall
xor
xor
adc
mov
xor
aaa
clc
sub
shlb
jae
xchg
ss
lds
es
sbb
aaa
sbb
and
outsb
or
fistps
adc
aaa
jl
fdivrl
loope
adc
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
push
lods
adc
out
cmp
cmp
jo
sbb
inc
or
ds
pop
and
or
daa
and
push
sbb
aas
insl
aas
mov
xchg
aas
mov
out
mov
xchg
inc
inc
xor
jl
inc
aaa
and
sbb
pop
xor
outsl
xor
cmp
mov
fs
jl
and
nop
xor
xor
dec
inc
jae
mov
xor
adc
ja
das
xor
repz
inc
add
shll
add
jmp
inc
push
inc
clc
das
nop
repnz
xchg
cmp
xchg
test
inc
xchg
jo
xchg
xchg
cmp
in
jmp
sub
push
es
es
sub
jl
mov
cmp
cmp
test
and
cmp
sbbb
push
ucomiss
sahf
adc
aas
hlt
and
and
dec
pop
mov
add
leave
xor
cmp
lahf
ljmp
inc
sub
inc
xor
jge
inc
push
in
or
add
mov
bound
dec
adc
pop
xor
xor
xor
xchg
cmp
xor
xor
cmp
loope
xor
into
outsb
xor
sub
xchg
cmpl
loopne
xor
mov
xor
out
push
pop
xor
je
lea
cmpsl
and
push
shlb
push
xchg
xor
cld
pop
add
and
ss
ss
ss
and
add
ss
and
adc
stos
es
pop
gs
in
divb
add
add
push
bound
aaa
dec
mov
ret
dec
scas
aaa
lret
or
ret
jb
lahf
lock
xchg
xchg
fistpll
cmp
aas
cmp
push
and
popf
xchg
cmp
mov
adc
aaa
add
and
sarb
ret
loopne
out
std
cmp
loope
or
push
cmp
cmp
cmp
cmp
cmp
and
jae
push
out
mov
inc
clc
es
bound
test
cmp
loope
out
add
iret
cmp
cmp
cmp
cmp
fwait
and
sbb
lods
cmp
cmp
dec
loope
cmp
and
pop
cmp
or
and
cmp
hlt
test
cmp
pop
dec
ret
mov
outsb
int
push
or
mov
cld
ds
jo
jge
fsubrl
lds
aas
test
xchg
push
fbstp
in
push
mov
xor
lds
push
mov
in
xor
xor
lock
nop
jo
xor
jp
xor
or
xchg
push
jo
and
cmp
mov
xor
nop
dec
lds
ss
inc
sbb
push
adc
loope
xorb
cmp
cmp
cmp
test
push
sub
ret
fdivrs
filds
cmp
cld
jno
scas
out
cmp
cmp
cmp
daa
cmp
mov
cmp
jo
mov
mov
insb
or
jo
fistpll
sarb
push
cmp
cmp
js
mov
push
push
nop
jo
or
out
inc
ds
das
aas
clc
jmp
cmpsb
pusha
mov
mov
adc
outsl
aas
mov
xchg
pushf
aas
mov
out
int
repz
decb
lds
and
xchg
out
ljmp
scas
test
mov
testb
sbb
xor
mov
and
insb
ret
push
sub
inc
inc
lods
push
mov
adc
push
enter
and
shlb
sbb
andb
jmp
lret
xor
xor
xor
jne
xchg
ljmp
outsb
xor
xor
push
mov
xor
in
xchg
out
addb
ret
lock
aas
or
aaa
aaa
mov
sub
dec
lock
int
inc
mov
cltd
cmp
aad
addb
call
pop
mov
sub
jnp
stos
cmp
cmp
cmp
dec
clc
stos
xorb
lock
outsb
into
clc
cmp
cmp
and
les
pushl
out
idivl
and
and
cli
dec
inc
sbb
inc
pop
cmpb
ds
add
das
mov
aas
pop
xor
aas
mov
dec
out
xorb
add
mov
jmp
or
sbb
and
sub
cmp
xchg
xor
clc
sbb
out
xor
stos
xor
mov
fnstenv
adc
test
js
ds
dec
push
test
add
pop
xor
xchg
cs
jbe
xor
push
mov
in
jp
ss
dec
ret
inc
inc
inc
or
cmp
fnstsw
and
and
add
or
cmp
inc
test
sti
mov
aas
adc
pop
das
mov
cmp
xor
xor
sub
arpl
outsl
cs
push
xor
ret
movsl
xor
adc
xor
sbb
pop
mov
aam
or
xor
xor
xor
xor
push
popa
pop
fstl
icebp
outsb
cmp
insl
or
inc
ret
into
nop
jo
movl
jnp
cwtl
ss
test
push
sbb
push
lcall
ret
mov
nop
lock
and
pop
mov
sti
cmp
cmp
pop
ret
dec
inc
jns
mov
stos
push
pop
sbb
fists
cmp
aas
xor
inc
aas
push
or
mov
mov
lock
push
mov
subl
xor
push
cmpb
shlb
xor
sub
outsl
xlat
add
movsl
aaa
jge
in
cmp
enter
cmp
cmp
out
jmp
push
jle
mov
cmp
push
sub
add
je
xchg
xchg
test
dec
fcmovb
jnp
out
idiv
ds
call
sti
sbb
mov
loop
les
sub
lods
xor
add
outsb
dec
inc
xor
xor
xor
ficoms
push
test
ds
xor
push
sbb
subl
adc
pop
xorl
xor
sbb
mov
mov
cmp
hlt
aaa
cmp
cmp
jp
cmp
out
ljmp
jns
mov
iret
cmp
cmp
insl
cmp
or
mov
jl
mov
stc
cmp
fs
loope
ds
subb
adc
lret
ja
js
and
xor
mov
xor
xor
pop
ret
and
sbb
xor
sahf
insb
lock
pop
ljmp
popf
nop
testb
cmp
cmp
arpl
lret
cmpsl
and
cwtl
cmp
cmpsl
xchg
mov
movsb
mov
xor
pop
add
or
bound
cmp
dec
clc
loop
cmp
cmp
aad
andb
inc
stos
int3
mov
ret
scas
add
adc
cmp
push
cmp
push
adc
xor
test
mov
ret
mov
xor
inc
and
dec
scas
notb
and
dec
pop
cmp
pushl
xor
xor
call
js
jl
and
mov
ljmp
cwtl
xchg
mov
lock
rorb
test
push
fisttps
adc
movsb
nop
push
or
lods
or
push
int3
outsl
in
test
hlt
rcl
sbb
adc
adc
xor
ds
lea
inc
outsb
add
or
push
je
push
sbb
inc
inc
inc
pop
test
test
mov
xchg
test
or
push
loopne
test
clc
outsb
push
xor
push
pop
mov
xor
loopne
insl
es
xor
mov
test
call
xor
lret
xor
test
dec
mov
push
inc
inc
pop
and
sub
and
test
xchg
ret
adc
aam
xor
jbe
xor
push
push
xor
lock
xor
dec
in
lock
add
adc
sbb
scas
xchg
xchg
scas
xor
js
dec
push
pop
sub
scas
call
xor
and
dec
js
dec
inc
push
xchg
out
clc
std
inc
and
or
xchg
test
mov
stos
outsb
sub
dec
xor
dec
sbb
xchg
inc
add
push
and
int3
cmp
push
mov
loope
sahf
cmp
adc
cmp
adc
cmp
sbb
or
xchg
shlb
push
andl
and
andl
cmp
add
cmp
xor
adcb
cmp
andl
into
mov
popf
fdivrl
test
or
and
adc
mov
xchg
cmpsl
jne,pn
xchg
adc
push
aaa
push
add
sbb
add
jo
pusha
rcl
int
push
dec
add
call
scas
add
in
push
mov
mulb
cld
dec
add
out
cwtl
mov
xchg
add
dec
dec
scas
mov
add
nop
pushl
mov
pop
testl
loop
mov
mov
pop
mov
fsubl
imul
test
ds
add
ljmp
push
lods
push
xor
mov
inc
adc
jnp
mov
ret
icebp
fst
test
xor
int
add
jo
pop
xchg
in
cmp
loop
in
mov
std
mov
add
hlt
into
stos
stc
ret
add
daa
pop
xor
pop
add
cli
pushf
and
mov
into
pop
xor
dec
jb
jg
sbb
mov
ss
adc
push
dec
push
sbb
lcall
push
adc
insl
fdivrl
and
in
adc
mov
sbbl
ljmp
sahf
cld
popa
fisubrs
fisttps
mov
add
jae
repz
stos
xchg
call
rclb
decl
call
dec
inc
iret
push
pop
lcall
adcl
pop
dec
adc
pop
inc
mov
xor
xchg
push
std
add
mov
add
fcmovbe
and
aad
xchg
ret
inc
pop
adc
ljmp
pop
mov
mov
sub
psubw
pop
push
mov
jmp
inc
jecxz
jbe
cltd
fucomp
movsl
scas
mov
das
jmp
mov
filds
pop
in
inc
mov
insb
dec
lcall
cwtl
std
jo
ljmp
adc
mov
and
pop
sub
sbb
iret
cs
sbb
jno
jmp
push
pop
sar
cmp
or
shl
pop
sub
sahf
cmp
arpl
inc
jbe
pop
xor
cmp
or
mov
in
nop
scas
add
and
cmpsl
dec
or
xchg
test
gs
insb
loopne
pop
add
xlat
insb
sub
dec
mov
pop
cmp
aas
dec
ljmp
arpl
outsb
adc
mov
push
repnz
leave
sti
add
jno
dec
aaa
add
add
add
call
les
fisubrl
pop
sub
add
addl
xchg
test
pusha
xchg
jno
dec
sbb
xchg
lret
add
pop
incl
sbb
enter
xor
lods
xor
add
sbb
xor
sbb
and
aam
pop
sub
pop
mov
sbb
lea
sub
scas
jmp
addl
adc
mov
test
sbbl
out
mov
nop
jle
cmpsb
or
mov
divb
incl
mov
or
mov
add
pop
sbb
ud0
adc
dec
inc
lcall
add
das
add
orl
or
outsb
add
xchg
adc
sbb
jg
adc
movsb
pop
out
pop
out
push
pushl
jns
push
inc
sub
imul
sbb
jl
dec
pop
push
pop
sti
pop
pop
jo
or
call
leave
push
pop
lea
lods
imul
inc
dec
or
jg
mov
decl
lret
or
mov
cli
call
dec
dec
repz
mov
test
sub
shrd
push
mov
adc
pop
dec
push
inc
inc
pop
imul
shlb
cli
add
out
mov
pop
jnp
inc
fs
fldl
inc
imul
inc
and
fs
cld
lods
mov
pop
push
jbe
and
or
adc
pop
imul
jl
pop
xchg
insb
mov
adc
roll
pushf
xor
add
inc
imul
arpl
add
mov
pop
add
sbb
sbb
ss
out
xor
mov
dec
cmp
adc
dec
sti
add
push
inc
aaa
pop
push
insl
sbb
inc
push
stos
add
mov
popa
mov
add
lcall
adc
daa
and
push
add
jno
test
add
in
adc
inc
or
popa
in
aam
fnstenv
add
negl
mov
add
into
xchg
push
xchg
test
sbbl
out
loop
test
cmp
add
push
add
lahf
icebp
sub
jne
sbb
push
xlat
out
add
add
xor
push
fucomip
add
add
cmp
inc
xor
je
add
or
dec
add
lcall
add
dec
insb
push
pop
fildll
adc
mov
add
sub
pop
addl
sbb
outsb
inc
lods
dec
cltd
adc
outsl
fwait
or
xor
add
pop
movl
push
add
mov
sub
rorl
icebp
mov
dec
jno
les
or
js
dec
add
dec
sub
mov
iret
lahf
nop
pop
or
mov
push
add
adc
fsubrs
xlat
jne
mov
push
sgdtl
and
ret
inc
mov
js
sbb
dec
xchg
and
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
