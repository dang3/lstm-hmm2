push
call
in
sub
push
xor
cmp
push
mov
je
pusha
inc
add
inc
pop
cs
fucomi
dec
add
jo
gs
in
push
fwait
in
mov
outsl
out
arpl
icebp
jae
xchg
fldt
bnd
pop
repz
push
aad
and
in
xlat
insl
fsubrs
fisubl
scas
pop
inc
loopne
outsl
lcall
adc
lock
jg
cmp
je
lea
push
push
call
mov
or
or
mov
cmp
cltd
test
clc
or
sti
out
push
pushl
push
push
call
cmp
or
push
clc
push
in
out
lret
outsb
cld
push
hlt
mov
leave
ret
in
in
insb
xor
dec
testl
out
std
add
mov
idivb
push
push
lahf
les
jmp
cmpsb
jmp
mov
leave
lret
mov
xchg
fldt
pop
into
push
loope
mov
shll
add
cmpsb
imul
jmp
loop
in
mov
add
inc
call
mov
imul
lock
imul
imul
mov
cld
je
push
and
fcomps
ja
dec
xchg
outsb
loope
adc
sbb
inc
clc
xchg
and
rcrb
mov
idiv
pop
cmp
cmp
push
call
inc
jmp
mov
sti
inc
cmp
add
shr
lea
movl
outsl
mov
sbb
xor
adc
or
mov
adc
std
ret
insl
add
cmp
shlb
shlb
loope
pop
or
mov
pop
test
call
popf
std
lock
pop
cs
lret
icebp
fs
popa
hlt
jo
imul
cs
stc
cli
insb
mov
insb
cld
push
clc
ret
faddl
fisubs
fildll
mov
imul
in
push
mov
lcall
mov
jne
pop
xlat
je
mov
dec
mov
test
xlat
jne
mov
addr16
mov
xlat
insb
lods
rol
ret
push
les
fwait
pop
cltd
lcall
xlat
pushf
test
mov
mov
movsb
movsl
fwait
cmpsb
imul
pop
mov
lods
jae
mov
gs
sub
mov
xor
cwtl
xor
cmpsb
arpl
pop
nop
enter
je
inc
je
jne
int
dec
jb
outsb
je
shll
gs
outsl
leave
mov
fstps
dec
xchg
push
push
call
push
xor
pop
jl
std
rorb
mov
jne
pop
jmp
mov
pop
mov
jo
mov
neg
sbb
fldt
push
and
push
adc
insb
push
push
push
cmp
insl
outsl
mov
inc
xchg
inc
test
cli
aaa
bound
je
or
cmp
cld
mov
cmp
jb
movsbl
cmp
je
dec
jmp
leave
pop
cmpl
je
mov
mov
pop
cmp
jg
push
mov
inc
inc
jmp
andb
and
fwait
push
cld
not
xchg
add
push
test
inc
mov
pushl
pop
fstp
fisubrs
movzbl
inc
lret
inc
jp
call
inc
cmp
jne
cmpb
je
daa
inc
shll
faddl
shr
inc
sbb
or
stos
pop
pop
or
mov
mov
das
mov
push
popf
clc
mov
cmp
dec
andl
pop
push
jbe
ss
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jnp
pop
jb
xor
mov
pop
mov
add
leave
fldcw
push
pop
jo
cmpb
clc
inc
inc
jmp
adc
mov
je
notl
push
mov
mov
pop
sahf
in
inc
inc
test
jne
pop
xor
xor
push
lods
add
leave
jmp
dec
or
in
inc
roll
xor
outsb
fs
inc
dec
shll
inc
imul
inc
fildl
xor
xlat
outsb
frstor
outsl
mov
gs
aam
insb
mov
adc
mov
adc
testb
adc
pop
in
adc
shlb
imul
lcall
mov
imul
arpl
adc
adc
xor
inc
adc
jo
addr16
add
xchg
in
adc
pop
loope
dec
loopne
adc
sbb
pop
leave
pop
in
push
xchg
lock
push
push
outsl
xchg
mov
lret
cmp
mov
mov
sbb
idivl
mov
das
push
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
mov
mov
add
push
cltd
add
test
cmpl
jg
sbb
jmp
mov
mov
lea
movzwl
inc
sbb
adc
sbb
add
and
add
cmp
outsl
cmp
imul
je
cmp
and
clc
repnz
repnz
pop
rorl
std
ja
rep
stos
stos
mov
sub
and
xor
aas
into
movsl
push
scas
hlt
mov
xor
or
push
cmp
push
rcll
ret
les
sahf
hlt
and
je
mov
test
insl
and
add
pop
stos
push
or
mov
rorl
fisttpll
mov
adc
neg
lea
shll
mov
adc
jge
sub
mov
mov
inc
sub
sub
call
or
pop
pop
call
bound
movsb
cs
rcrb
jne
ljmp
mov
mov
ret
mov
or
dec
ret
adc
and
outsl
adc
mov
or
fs
lcall
xor
fs
movsb
imul
xor
xchg
push
push
xchg
insl
lcall
int
outsb
mov
iret
dec
rcl
jns
rolb
pop
int
sarl
aad
push
gs
mov
scas
imul
mov
mov
scas
jmp
ret
imul
shll
cli
jae
cld
jge
add
movsb
insl
jns
lcall
sbb
lods
sbb
cwtl
lret
rcrl
scas
or
in
xor
aas
mov
mov
cs
xor
adc
dec
fmulp
xchg
mov
pop
push
jne
mov
push
lea
push
aaa
adc
ret
in
pushf
add
mov
test
and
or
pop
mov
inc
call
lea
outsb
aad
dec
int
dec
rcll
imul
or
pop
inc
add
xor
fsub
mov
jmp
inc
jecxz
xchg
lret
xorb
je
mov
sub
insl
mov
mov
lods
outsb
scas
scas
cs
cs
mov
js
gs
add
push
pop
testl
cmp
test
into
jp
xor
lea
fs
je
dec
inc
xor
dec
mov
addl
push
dec
rcl
and
push
jne
ss
shll
jns
repz
es
sbb
in
xorb
or
jecxz
sub
pop
mov
in
inc
out
mov
jne
xlat
jmp
daa
in
ss
sub
sub
push
mov
movsl
mov
fwait
std
test
add
es
lods
mov
stc
jl
pop
mov
fldl
lods
daa
adc
adc
aas
mov
shll
xlat
jno
jne
add
fcmovnb
mov
les
lods
pop
add
fwait
cmpsb
jmp
mov
cmc
call
cmp
movl
jns
rolb
fnsave
outsl
xor
cltd
dec
sahf
cmp
jecxz
shlb
and
int3
push
loop
mov
arpl
adc
inc
cmp
jb
jmp
cs
xchg
shll
add
fwait
xor
and
and
and
xlat
insb
cmp
inc
in
adc
daa
out
ss
adc
in
push
outsl
cmpsb
imul
imul
sbb
jb
movsb
imul
xlat
jne
mov
mov
fldt
push
rol
add
scas
fnstenv
fcmovnb
dec
daa
vrsqrtss
enter
xor
leave
insl
ja
lret
int3
push
sbb
dec
test
inc
iret
rolb
lcall
in
out
lcall
in
add
cmpsb
in
out
out
lock
aam
iret
push
addb
addr16
jo
imul
jns
push
and
push
lret
push
pop
lock
sbb
pop
mov
adcl
loope
pop
rcrb
adc
xor
int3
or
or
jo
pop
mov
ret
adc
jl
ret
cmp
out
pop
pop
push
add
negb
adc
pop
das
mov
adc
imul
nop
cmp
fcmove
inc
sub
daa
in
mov
outsb
xor
push
adc
cmp
mov
rcrl
xor
ret
xchg
popa
je
out
sub
mov
xor
push
ljmp
sti
pop
and
or
xor
xor
fsubs
inc
shll
popa
arpl
xor
push
pop
jbe
mov
mov
flds
adc
push
not
xor
fwait
inc
outsl
push
clc
jo
inc
orl
pop
adc
mov
pusha
je
stc
sbb
xlat
inc
fiaddl
sti
mov
push
push
add
adc
sbb
dec
pop
jae
jae
gs
pop
push
shll
outsb
fs
shll
imul
jb
je
mov
iret
mov
mov
jb
ljmp
mov
or
or
pop
mov
xchg
or
or
adc
cli
push
pop
das
mov
add
add
xor
mov
cmp
pop
xchg
cwtl
repz
iret
fdiv
fldt
jae
mov
adc
sbb
sbb
pop
enter
adc
and
imul
je
inc
lcall
inc
imul
jl
fs
xchg
jp
add
inc
fcoml
inc
cli
or
and
sti
adc
adc
pusha
add
adc
sbb
pmullw
ret
fdivrs
xchg
mov
mov
push
pop
bswap
xor
push
cmpsl
ds
and
or
mov
push
xchg
cmpsl
xchg
fisttpl
pushf
pop
mov
js
jmp
in
xchg
or
arpl
cmp
mov
xor
or
sub
in
notb
adc
inc
sbb
sbb
mov
xchg
nop
popf
dec
sub
adc
mov
aad
orb
clc
pop
sti
hlt
push
add
dec
push
mov
add
xor
push
mov
arpl
fs
inc
popa
push
pusha
mov
and
mov
push
mov
into
jp
inc
xchg
push
sarl
pushf
sub
gs
insl
jo
mov
lret
push
popa
je
inc
jecxz
pop
xor
jbe
push
lret
and
push
and
push
shrl
imul
int
outsl
jb
mov
test
mov
imul
xor
pop
fs
stos
lods
lods
xor
inc
dec
dec
scas
inc
dec
outsl
popa
lcall
idiv
mov
sti
cld
pop
inc
mov
arpl
imul
xor
cmpsl
gs
dec
gs
gs
jne
ljmp
in
mov
push
lock
xchg
fs
pushf
rolb
push
adc
and
out
loope
imul
movb
dec
filds
lea
cltd
int
pop
push
mov
cmp
mov
push
cmp
mov
mov
ss
rcrb
movb
test
push
test
pusha
iret
inc
pop
aam
popf
mov
fisttps
xor
cs
xchg
jnp
or
or
mulb
cmc
je
pushf
pushf
scas
sbb
adc
cwtl
je
xor
nop
add
add
add
ret
add
pop
pop
pop
pop
mov
push
push
push
add
rorb
jo
jbe
xorl
adc
push
xchg
movsb
mov
or
adc
mov
add
xchg
int3
enter
faddl
insl
mov
jle
out
xchg
mov
movsb
jbe
push
push
popf
or
fldenv
in
leave
movb
sahf
sbb
mov
xor
fildll
sub
lds
call
cld
bound
xor
test
dec
cld
jge
add
neg
adc
xor
stc
xchg
sbb
fistl
dec
xchg
orb
jmp
dec
neg
and
or
mov
outsl
xchg
xor
js
adc
fcom
leave
mov
lds
ret
push
push
add
pop
xor
in
in
jne
in
popf
or
dec
pushf
inc
adc
xor
xchg
jge
or
sbb
bound
and
push
incl
pop
push
mov
push
dec
dec
xchg
in
pop
mov
gs
pop
jb
inc
std
js
shll
je
imul
sub
xor
xor
imul
xor
js
push
flds
bound
jne
xchg
cmp
imul
insb
gs
add
or
loop
pop
push
rolb
add
or
or
lods
loope
andl
add
add
movl
and
les
mov
andb
pop
cwtl
pop
or
adc
or
adc
jl
jne
mov
mov
test
lods
cli
lods
cli
pushf
imulb
enter
cwtl
cmc
cltd
cmc
gs
adc
enter
clc
sbb
jo
aaa
inc
xor
outsl
shll
imul
stos
test
dec
xchg
gs
xchg
inc
push
push
inc
push
inc
inc
int
or
mov
in
ja
xchg
movsl
add
or
flds
iret
shrl
ja
add
push
xchg
gs
popa
bound
gs
xchg
push
push
cmpsb
imul
xor
in
fists
int
outsb
pop
push
subl
pop
mov
mov
out
and
dec
mov
iret
inc
lret
iret
pop
sbb
pop
mov
fstps
cwtl
divb
das
xlat
add
insb
and
mov
xlat
stos
cli
adc
pop
enter
push
cltd
pop
daa
inc
pop
andl
test
mov
in
adc
xor
testl
pushf
jne
outsl
and
adc
push
orl
xor
hlt
insb
adc
popf
mov
push
and
fs
adc
shrl
adc
push
les
inc
aaa
repnz
incb
ljmp
push
inc
inc
lcall
gs
je
lcall
jne
push
jae
dec
dec
shll
inc
fcmovnu
fstp
xor
shll
loopne
loop
shll
out
rclb
pusha
jmp
jbe
cmp
aam
iret
test
call
fcom
jmp
sub
xor
mov
and
sbb
push
or
inc
dec
shr
lods
dec
adc
pop
sbb
push
cmp
mov
jne
and
leave
xchg
or
xchg
mov
es
fstps
adc
ljmp
fdivs
add
xchg
ret
or
jp
mov
and
mov
xchg
sbb
pop
mov
mov
test
adc
sbb
or
cmp
push
xchg
cmpxchg
cmp
ja
test
pop
stos
shll
dec
rol
push
stos
cwtl
jns
je
imul
or
inc
push
call
jp
push
or
mov
pop
leave
fsts
xchg
fnstsw
std
add
pusha
int
std
pop
negb
push
push
push
push
push
in
ror
je
cld
mov
and
mov
push
or
and
jne
sbb
sbb
cmp
ficoms
pushf
pop
xchg
cmpsb
fs
negl
pop
dec
sbbb
mov
lods
mov
push
ss
hlt
insb
jge
subb
int3
fsubs
aam
rcrb
push
and
or
nop
into
jbe
xor
adc
push
sub
inc
mov
jmp
mov
fsubrl
mov
mov
xchg
mov
addr16
mov
adc
mov
fisttps
mov
cmc
xor
sbb
stos
sub
add
insb
mov
inc
push
sub
outsb
lock
mov
cmc
dec
ss
subb
fsubs
mov
sub
sub
or
jne
cmp
jmp
jp
adc
push
sbb
sbb
pop
push
or
push
loopne
mov
rcrb
fcmovnbe
jns
arpl
std
jge
jl
jb
xor
adc
clc
sbb
es
iret
je
xchg
push
push
inc
mov
or
mov
cmp
leave
push
cmp
lea
sbb
int
or
and
data16
push
push
lods
out
dec
loope
push
test
or
in
pop
mov
inc
pushf
gs
jo
add
jle
repz
push
cmp
sub
mov
imul
inc
mov
enter
push
mov
mov
xchg
lret
data16
outsl
nop
xchg
mov
outsb
insb
xchg
or
cmp
xchg
xchg
jns
or
mov
inc
fwait
pushf
insb
cmp
or
rol
insl
andl
or
gs
imul
cmp
test
lods
lret
xlat
pop
lods
popa
scas
scas
dec
popa
xor
rcl
inc
and
outsl
mov
dec
shll
and
in
je
iret
mov
or
pop
inc
lea
adc
sbb
rol
mulb
mov
scas
lock
imul
push
loopne
stos
mov
icebp
add
push
push
clc
pop
add
xor
mov
or
sbb
mov
nop
outsl
jo
testl
xchg
gs
push
popa
insb
xor
insb
shll
fs
jmp
outsb
ljmp
push
push
jg
xchg
in
push
leave
and
jne
cmp
int3
int
push
les
mov
dec
hlt
push
push
lds
enter
push
pop
xor
or
push
repz
push
add
fadd
jmp
push
ret
mov
jb
scas
sub
add
test
cltd
ret
ret
xor
mov
sub
clc
jb
fsubs
outsb
inc
sbb
pop
jnp
jle
dec
pop
push
adc
dec
out
or
lock
icebp
pop
jl
insl
insb
jbe
mov
mov
sbb
xor
or
push
inc
or
lock
inc
or
div
imul
ret
mov
in
cmp
cmp
jbe
push
std
ja
pushl
mov
mov
push
or
sub
mov
mov
cltd
fs
and
sbb
or
inc
es
cmp
adc
fwait
sbb
adc
sbb
movzwl
sti
mov
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
add
test
pop
or
shlb
fcomps
popf
adc
pop
pop
sbb
jne
xor
aaa
addr16
pop
push
inc
jle
dec
sbb
pushl
into
push
adc
imul
adcl
sbb
xchg
dec
cs
cmp
ss
sahf
xchg
sub
aaa
add
and
lock
jne
rclb
pop
or
fisttpl
and
movl
js
sbb
mov
pop
insb
xor
xchg
dec
lea
mov
mov
fisttpl
push
sbb
pop
mov
inc
sub
out
mov
sub
push
pushl
dec
lods
add
mov
push
push
add
nop
fisubrs
ficoms
xchg
cmpsb
fstps
gs
dec
jno
test
mov
sub
movsl
mov
or
mov
sub
sbb
aas
or
sbb
sbb
push
push
sbb
cld
mov
leave
ret
leave
or
aam
cmpsl
test
sti
xchg
and
push
in
js
wbinvd
inc
add
cmp
jl
add
mov
xorl
add
mov
test
jae
dec
clc
mov
sbb
stc
sti
mov
addl
pop
adc
adc
pop
xchg
mov
loopne
loopne
test
inc
movl
gs
push
pop
lea
daa
push
sahf
adcl
lea
fstl
int
rcr
sbb
jnp
inc
clc
add
jbe
mov
adc
adc
incb
mov
mov
mov
daa
sbb
adc
cli
jl
jo
in
fimuls
inc
movsb
mov
push
test
cmp
stos
adc
mov
adc
dec
mov
inc
push
adc
mov
inc
add
jmp
push
push
leave
push
test
pop
push
xchg
sub
push
xchg
push
mov
mov
pop
mov
or
ret
mov
test
ret
add
and
fmuls
xor
xorl
por
push
lret
dec
cmp
pop
call
jne
or
ljmp
pop
push
mov
sbb
cltd
mov
lea
push
pop
movsl
add
and
lea
sar
arpl
cmp
outsb
adc
lds
adc
dec
mov
mov
or
cltd
dec
outsb
adc
dec
mov
xor
cmpl
jg
xchg
adc
cmpw
jne
fwait
addr16
inc
sub
xchg
jmp
loope
lea
push
sbb
out
fwait
leave
inc
andl
sbb
dec
add
ja
rol
push
pushf
adc
sub
xchg
in
mov
rcll
fnsave
cmp
rclb
mov
xor
inc
dec
jne
out
inc
sub
cwtl
ds
mov
ret
andl
and
and
dec
or
mov
add
pop
call
push
push
test
mov
add
pop
shlb
aas
mov
or
pop
rolb
rcl
aad
test
sbb
jno
xor
xchg
hlt
mov
fcomps
push
adc
or
iret
andb
mov
ret
lods
js
addl
popa
inc
lock
daa
inc
jbe
pusha
jb
mov
xor
adc
loopne
lock
xchg
fmuls
popa
adc
ja
jnp
jne
mov
cld
pusha
and
push
inc
or
nop
add
cmp
test
bndstx
mov
addr16
lock
sbb
sarl
lods
or
jb
sub
gs
bound
xor
pop
mov
insb
addr16
mov
mov
outsb
add
pop
sbbb
xlat
push
lret
jae
dec
xchg
data16
ljmp
in
in
insb
inc
aad
add
push
jbe
pop
push
fadds
aam
or
fldcw
lahf
out
movsb
add
scas
add
xor
insl
lock
mov
insl
and
pop
sub
mov
out
push
and
lcall
movsl
outsl
mov
pop
adc
pusha
adc
aas
fbld
jge
or
inc
add
sub
out
or
jno
push
mov
inc
outsl
sti
push
sub
pop
add
dec
and
lock
jl
or
jne
jge
in
and
jmp
add
pop
mov
inc
mov
jl
mov
jmp
inc
je
mov
dec
imul
outsl
ja
inc
imul
arpl
sbb
jb
icebp
adc
mov
testb
mov
wrmsr
and
into
cwtl
gs
andb
inc
insb
xchg
gs
xchg
insb
inc
popa
arpl
inc
sub
or
in
mov
add
sti
cld
inc
nop
mov
sbb
pop
push
xchg
mov
xor
xchg
lods
out
orb
loop
stos
stos
or
fdiv
push
iret
pushf
cs
je
out
adc
in
pop
idiv
add
mov
inc
add
pop
cmp
adc
std
bswap
xchg
inc
stos
cld
push
or
shrb
xor
pop
fstps
repnz
cwtl
inc
push
cs
mov
nop
inc
leave
add
adc
xchg
sbb
testl
andb
adc
and
adcl
mov
fs
outsl
jo
inc
scas
mov
mov
insb
sbb
add
outsl
jbe
inc
lret
in
movsb
pusha
insb
xchg
inc
fnstsw
adc
xor
push
lods
or
mov
aam
jmp
pop
shll
xchg
push
push
inc
push
xorl
inc
mov
je
addr16
inc
imul
lea
mov
add
sub
pop
pop
dec
mov
inc
sub
aaa
sub
pusha
or
lods
aad
sbb
or
sarl
and
nop
arpl
into
enter
xchg
std
jae
push
mov
or
sub
ror
cs
test
pop
push
push
sub
lods
pop
adc
add
or
stos
sub
test
pop
aad
aam
punpcklbw
enter
sbb
adc
mov
jmp
and
stos
sub
inc
sbb
adc
sbb
nop
or
cmp
push
mov
pusha
sub
fnstcw
push
sub
faddl
push
or
insb
testl
sub
mov
jnp
or
xchg
xchg
dec
sbb
jno
xchg
pavgw
addr16
sbb
or
adc
xor
or
push
cwtl
mov
sub
insl
loope
pop
outsb
loopne
mov
adc
sub
dec
dec
loopne
adc
in
bound
call
push
leave
call
pusha
xchg
pop
and
bound
lcall
inc
mull
xchg
cwtl
jne
outsb
inc
test
int3
push
jmp
mov
jmp
add
jae
xchg
test
mov
or
xchg
mov
fcmovnb
int3
cmp
ljmp
out
pop
or
mov
popa
push
loopne
jbe
xor
or
mov
dec
aaa
xor
inc
mov
gs
mov
orl
cmp
pop
inc
inc
mov
js
or
arpl
mov
or
test
sub
sbb
dec
cmpsl
ficomps
cmp
push
std
cltd
or
sub
mov
insb
or
adc
pop
subb
enter
xor
fbld
jge
xor
cmpb
jne
inc
or
sti
cmp
je
cmp
repnz
jbe
add
rorb
imulb
add
por
sub
jbe
roll
imul
add
les
xor
sbb
lock
mov
push
push
test
fld
mov
mov
ss
in
add
cltd
scas
mov
inc
orl
push
jmp
mov
xchg
add
cmpsb
fstps
xchg
push
add
into
ljmp
shll
xor
push
xor
sarl
cmpsb
mov
shll
or
mov
push
push
cli
or
push
daa
shll
pushf
nop
lock
imul
cmpsb
imul
cmpsb
imul
into
out
dec
shll
push
xor
pusha
outsb
jbe
cltd
in
add
push
add
push
mov
sbb
add
add
in
sbb
ret
add
push
sub
dec
dec
ret
push
dec
push
subb
insb
add
call
inc
push
xor
cs
insb
aas
dec
dec
add
sub
fs
inc
pop
cltd
dec
std
test
outsb
gs
fldt
mov
dec
outsl
fs
gs
imul
inc
jb
mulb
sti
popa
je
push
push
and
mov
outsl
jae
dec
popa
outsb
ds
jae
arpl
xor
outsl
jb
cld
jmp
pop
inc
imul
gs
les
mov
fwait
jb
jae
add
js
add
jne
fs
pop
fistl
or
fs
push
dec
dec
popa
pop
rcrb
arpl
dec
or
incl
lock
inc
dec
push
pop
out
or
jne
nop
pusha
nop
stc
insl
add
add
call
lds
jmp
sbb
push
movl
xchg
filds
fdivl
arpl
fs
or
add
dec
jae
cld
jmp
pusha
mov
mov
mov
inc
or
mov
adc
rolb
jge
pushl
dec
add
mov
add
dec
nop
test
nop
je
lea
mov
add
push
mov
cmpsb
sbb
pop
jne
nop
nop
outsl
push
mov
sbb
jle
jl
sbb
cli
mov
add
jge
cmp
outsl
ret
jg
adc
cmp
out
adc
je
lea
xchg
or
fimuls
push
in
mov
dec
pop
in
bound
insb
inc
jb
adc
jns
scas
sub
pop
call
push
pop
and
inc
shll
lea
nop
xor
lea
push
call
outsb
mov
push
jmp
pop
pop
sbb
dec
call
out
sub
negb
mov
pop
mov
dec
mov
mov
repnz
nop
add
test
add
lcallw
push
add
add
adc
pop
dec
pop
nop
add
inc
add
fs
and
repnz
add
pop
mov
int
mov
imul
ljmp
jb
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
popa
inc
fs
mov
cltd
mov
add
fdivr
mov
sti
lock
pop
je
stc
cwtl
into
repz
sbb
fistpll
lock
lock
pop
into
cld
lock
xor
repz
idivb
push
imul
push
daa
dec
add
add
dec
mov
and
int
xor
add
and
adc
nop
ja
sbb
xor
adc
add
fidivl
sub
fld
into
pushw
or
pop
push
and
leave
in
xor
dec
cmp
xor
adc
rcrb
daa
or
xchg
mov
xor
nop
les
push
loopne
pusha
leave
xchg
or
inc
xchg
or
cmp
daa
adc
xor
pop
and
mov
pop
cmpsb
push
add
dec
ret
test
ret
xor
adc
push
outsl
aaa
mov
repz
mov
or
cld
push
cli
pushl
xor
push
lea
mov
push
mov
pop
add
or
add
pop
add
mov
xor
dec
cmp
cmp
out
mov
cmp
push
jmp
movb
jg
in
mov
mov
cmp
jmp
je
call
mov
push
pusha
aaa
xor
mov
out
out
loop
mov
jo
or
push
inc
add
mov
jmp
hlt
mov
adcl
add
push
push
mov
out
das
sbb
push
mov
add
sti
lret
mov
ficoms
div
clc
mov
in
lcall
mov
fstp
inc
cmc
sub
pop
sbb
xorb
fs
out
and
push
push
test
pop
outsl
push
push
mov
push
pop
cmp
push
sub
icebp
out
test
insb
icebp
je
sbb
pusha
cmp
sbb
aad
movsl
and
or
aas
mov
dec
incl
ljmp
mov
sbb
sbb
xchg
mov
pop
cmp
pop
xchg
pop
clc
insb
arpl
mov
xor
sar
mov
add
or
cmp
xorb
push
xor
mov
cmp
decl
xor
roll
stc
jle
sbb
jl
cmp
pop
jae
hlt
decl
mov
or
xor
sti
push
aas
push
push
cmc
and
mov
or
je
add
add
cmp
jle
or
add
decl
cld
mov
nop
out
or
push
adc
mov
xchg
add
mov
ljmp
cld
jae
dec
and
jg
shll
in
add
in
call
push
add
fsubrs
leave
fsubrs
je
pop
and
adc
push
clc
mov
pushl
push
outsl
adc
mov
dec
cmp
inc
in
jne
xor
push
adc
decl
fmulp
cmp
push
fisttps
push
cmp
xchg
dec
add
std
int3
push
dec
xor
mov
adc
mov
out
lcall
in
nopl
inc
and
or
and
and
insb
testl
decl
decl
sbb
mov
jge
and
adc
add
packuswb
dec
jb
sbb
jmp
adc
xchg
mov
jg
xor
sub
jecxz
or
or
insl
push
or
pushl
push
add
jle
ret
test
lea
xor
push
fsubrs
adc
dec
loopne
push
call
inc
sbb
inc
mov
push
dec
xchg
int
add
push
dec
notb
and
mov
test
lea
je
dec
je
add
enter
sahf
gs
jg
jnp
xor
iret
lock
popf
cmp
dec
repz
sbb
cld
jbe
xchg
mov
incl
insl
cmc
push
push
jbe
testb
or
or
cli
push
jmp
loopne
insb
int3
js
mov
mov
lea
xchg
mov
add
and
fadd
mov
dec
xchg
and
sar
call
outsb
mov
in
pop
stos
inc
and
or
subb
add
ljmp
out
mov
adc
pop
inc
mov
xlat
sbb
mov
or
and
ds
insb
fadds
ret
adc
out
inc
add
mov
imul
mov
mov
mov
decl
jnp
jmp
push
pop
in
sbb
inc
inc
and
lods
lds
dec
push
sub
pop
xor
push
adc
mov
push
and
cmp
mov
pop
sbb
sbb
push
mov
pop
pop
movsl
pushl
mov
xor
lcall
mov
push
pop
ss
mov
dec
push
decl
mov
lea
addl
jbe
or
mull
movsb
add
or
push
add
jle
pop
test
lret
in
mov
inc
pop
pop
sbb
outsb
call
add
daa
mov
scas
in
sti
outsb
je
sbb
imul
or
jg
lcall
popa
cmovle
mov
mov
add
jl
leave
add
push
push
sbb
andl
jl
add
outsl
clc
adc
mov
push
push
push
lret
lea
sub
incl
dec
out
add
icebp
add
mov
mov
aas
ret
imul
decl
xor
enter
imul
inc
adcl
clc
das
std
call
test
dec
bound
or
shrb
dec
xor
loop
mov
sbb
call
pop
sti
or
push
sbb
das
sub
shrb
arpl
mov
jbe
outsl
adc
lods
es
incl
ret
xor
dec
or
fbld
or
inc
pop
xor
cmpsb
mov
ret
pop
call
adc
adc
jb,pn
lods
xor
js
test
ficomps
xor
popa
jmp
pop
sbb
pop
jg
cmp
pop
ljmp
push
sub
sahf
ret
sub
sarl
lock
jmp
ficoms
int3
jb
insl
xchg
or
aas
cs
push
mov
je
cmp
int
mov
movsb
xlat
fsubs
sub
pushl
fcmovu
cmp
jae
mov
push
popa
fnstsw
pop
lea
mov
outsl
std
in
sbb
lret
int3
in
xchg
sbb
addl
or
mov
les
pushf
add
jge
push
or
rolb
arpl
call
fsubrl
les
mov
movsb
inc
mov
inc
add
test
jb
stos
pop
lods
outsb
sbb
scas
in
scas
adc
fisttpl
add
mov
leave
mov
mov
jmp
repz
dec
xlat
xor
cmc
jo
sar
xchg
inc
stc
cli
or
cld
std
aaa
cs
outsb
adc
push
loope
and
insl
ss
imul
out
push
cmpsb
imul
in
in
out
rolb
out
lock
cwtl
dec
mov
test
or
loope
mov
mov
rol
ret
les
shll
mov
pusha
dec
mov
inc
cmp
sub
xchg
push
cwtl
das
push
scas
aad
adc
push
mov
lock
cmpl
mov
or
int3
aaa
jg
xor
mov
lahf
jecxz
inc
push
mov
nop
jno
in
decl
test
or
and
lods
mov
jae
sbb
xchg
sub
call
jns
outsl
mov
push
call
pop
mov
pop
mov
mov
jge
cmpb
mov
cmp
adc
rorl
insb
pop
in
xor
sub
ljmp
imul
dec
push
pop
or
sbb
xchg
sbb
add
mov
jns
xchg
call
add
jl
add
xchg
arpl
cld
xor
xchg
decl
cld
mov
cld
sbb
dec
mov
or
xor
lcall
ds
sbb
push
in
and
test
jge
sub
mov
negb
or
jmp
test
or
into
lea
xchg
or
test
mov
subb
or
and
call
cs
mov
hlt
mov
jae
xor
cmp
push
clc
pushl
int
pop
lret
sbb
int
xor
or
aaa
mov
lret
cmpsb
aam
xor
imul
mov
push
adc
jae
es
popa
or
cmp
and
ret
jns
cld
sub
or
inc
adc
imul
fmul
or
les
gs
pop
jecxz
ljmp
in
loop
out
sbb
fisttpl
mov
xor
repz
jae
aaa
inc
mov
in
mov
mov
dec
push
pop
and
adc
mov
insl
mov
push
outsl
pushl
push
subl
push
outsl
xor
push
je
popa
mov
dec
gs
outsl
outsb
pop
xlat
insb
dec
pop
inc
aas
enter
das
lret
jb
in
dec
sbb
int3
imul
iret
dec
mov
mov
int3
insb
sbb
jg
into
outsb
aam
jne
aad
aaa
xlat
or
cmp
add
insb
xor
call
adc
xor
fists
imul
out
call
jmp
imul
add
mov
sub
fwait
imulb
sub
sbb
movl
xor
sbb
test
lods
fs
push
mov
mov
push
fistl
or
rep
pop
or
pushl
cwtl
daa
add
testb
adc
pop
rorb
jmp
repz
jg
jmp
fs
pop
jmp
dec
dec
jo
dec
sub
jb
pop
nop
popf
add
outsl
cld
jmp
sbb
mov
ds
std
rclb
popa
cmp
cmc
dec
mov
and
adc
jmp
mov
adc
enter
adc
adc
call
sub
stc
jg
and
cs
stos
push
les
pop
push
jg
lcall
cmp
nop
sub
xchg
pop
xchg
aas
dec
in
xchg
popa
xchg
fwait
in
f2xm1
jg
call
xchg
gs
cltd
fs
imul
jb
outsl
pushf
jo
fsubrs
sahf
lahf
xor
sti
push
xchg
pop
xor
addr16
push
jo
pop
jg
or
scas
test
dec
ds
xor
jae
sbb
sub
rcll
or
mov
je
sub
notl
pop
int
neg
sbb
js
call
jae
xchg
int3
sub
icebp
test
sub
aam
incl
jle
jmp
hlt
addb
pop
andl
test
jg
mov
inc
imul
popa
push
add
out
fs
xor
pop
ja
int
fsubrs
shrl
mov
scas
pop
outsl
mov
mov
dec
or
incl
sarb
addr16
xor
inc
lcall
add
mov
insl
imul
lods
xor
push
lcall
lea
inc
or
filds
lret
test
sar
cs
dec
mov
sar
jmp
insl
icebp
xchg
jmp
xlat
or
mov
pop
ljmp
jo
or
pop
mov
push
ror
xchg
outsb
fimuls
in
loop
ljmp
fstpl
push
jno
jo
xchg
adc
jg
dec
jne
mov
lods
or
adc
push
add
inc
mov
push
inc
jb
das
hlt
mov
decl
push
sub
lods
jge
lds
mov
cmpl
cltd
lods
add
mov
loop
hlt
inc
sub
push
sbb
jbe
clc
aaa
adc
or
sub
inc
sub
aaa
fisubl
adc
out
adc
out
iret
fisttpl
hlt
ror
sbb
rorb
jp
jmp
and
ret
or
mov
push
inc
sahf
shlb
std
inc
xor
daa
js
mov
jg
and
mov
and
shl
cwtl
sbb
test
adc
aam
push
inc
adc
or
pop
adc
jg
inc
push
dec
push
imul
or
and
or
mov
xorb
test
lods
fisubrl
xor
test
lock
mov
inc
pushf
inc
mov
or
pop
je
mov
lods
push
cmp
sar
mov
rclb
push
fisubl
mov
inc
push
mov
cmc
mov
enter
loopne
pop
pusha
stc
push
mov
inc
ljmp
push
jg
icebp
ret
lret
arpl
int3
fstps
in
in
ljmp
inc
push
andl
xor
inc
pop
adc
mov
out
ret
adc
jmp
out
loop
hlt
pushl
mov
mov
pop
jle
adc
shll
loopne
pusha
add
xchg
sub
dec
cld
call
orl
jmp
outsl
scas
cmp
mov
ljmp
cwtl
add
push
mov
push
sub
or
and
test
sbbl
cmp
cld
ljmp
cmc
push
std
add
loop
inc
add
mov
ret
pop
setae
enter
pop
insb
add
jns
inc
lods
cmp
push
je
insl
pop
cli
outsl
adc
pop
cmp
ja
cmp
pop
in
mov
xor
loopne
push
or
arpl
stos
sub
inc
mov
jb
sub
push
add
imul
dec
xor
int
ljmp
mov
out
in
fsubrl
add
ljmp
fsts
hlt
ljmp
inc
add
and
mov
fistpll
xor
mov
sti
add
add
jge
push
cs
or
mov
sub
sub
clc
ljmp
pop
ret
movsl
mov
sub
and
fisttps
sub
inc
in
jmp
fisubs
lea
aam
and
je
cmpsb
cmpsb
fs
xchg
xchg
and
adc
inc
pop
or
cmp
lock
add
pop
out
out
jecxz
decl
int3
jbe
xorl
cld
stos
mov
inc
mov
pop
popa
das
pop
and
mov
adc
sbb
push
adc
cmp
and
ljmp
clc
daa
enter
jge
push
sbb
push
out
inc
pop
sbb
hlt
jmp
in
dec
dec
shll
mov
cld
jg
outsl
loopne
sub
dec
adc
sti
rorl
out
ret
inc
and
incl
fmull
ja
sub
cmp
roll
ret
decb
jae
cmp
gs
or
incl
pusha
inc
lea
insl
pop
insb
mov
ret
add
daa
fadd
das
sub
pop
cltd
cld
or
test
or
lret
push
inc
fucomi
pop
pop
cmp
popa
fstl
inc
ret
pop
fstpt
jmp
add
pushl
pop
inc
or
pop
pop
pop
or
in
inc
jge
ljmp
outsl
iret
mov
sub
push
aam
mov
jbe
inc
add
movsl
aaa
xchg
ss
cmp
add
fbld
jmp
dec
test
test
and
loope
xchg
push
push
loope
push
stos
fnstcw
and
inc
pop
jecxz
cltd
or
popf
aaa
loope
shl
cwtl
cli
xchg
sahf
lret
dec
sub
or
add
aaa
aam
push
je
inc
mov
arpl
or
in
loope
sbb
mov
mov
lcall
jmp
dec
scas
adc
scas
je
fisttpll
pop
test
decl
test
daa
cltd
test
pop
sar
or
lods
push
push
sub
sbbl
push
shl
stos
sub
or
mov
push
repz
pop
fsubrl
push
stos
repnz
test
mov
xchg
out
pop
clc
popf
mov
lods
mov
test
cmpsb
int
push
pop
xchg
jg
xor
xorl
pop
js
xchg
mov
subb
ret
push
mov
aad
mov
pop
loop
incl
and
push
je
mov
ror
mov
adc
cli
pushl
mov
or
xor
push
xor
or
ret
cmpsl
sub
repnz
pop
call
out
sarl
mov
cmp
sbb
adc
pop
cmc
call
mov
sub
sbb
sbb
mov
and
nop
bound
call
repnz
or
push
cmp
nop
enter
adc
fcomps
lcall
outsb
shll
ret
ret
inc
fwait
enter
jmp
fwait
orl
jecxz
mov
decl
pushf
push
in
lods
add
mov
jno
dec
ljmp
icebp
incl
inc
imul
jnp
or
rorl
add
and
outsl
cmc
dec
and
and
pop
mov
cwtl
sbb
std
addl
call
pop
xchg
bound
cs
jae
sub
pop
jo
xor
jae
lcall
sbb
and
mov
data16
mov
pop
mov
aas
loopne
andb
jg
xchg
cli
shlb
inc
xchg
and
int3
lea
sub
movb
jg
ljmp
inc
inc
mov
iret
or
xchg
push
or
xchg
add
jg
push
mov
add
test
lock
outsb
add
call
xor
jle
sub
add
sub
or
pop
add
das
xchg
aas
cwtl
mov
dec
mov
jmp
sub
lock
pop
sbb
inc
cs
lock
add
mov
cmpsl
and
and
ss
xor
mov
add
inc
pop
lods
sarb
test
nop
movsb
mov
in
fdivs
adc
lret
es
ds
pop
jo
adcb
lea
insl
or
clc
xor
or
es
push
inc
dec
sub
or
insb
in
ficompl
pop
ror
mov
add
jecxz
jg
xchg
incl
pop
add
pop
psubsb
pop
xlat
inc
decl
pop
inc
and
das
add
movsb
pop
andb
xchg
repnz
js
mov
call
lods
xor
xor
xchg
mov
out
mov
sti
stos
mov
outsl
jg
inc
push
dec
nop
dec
inc
dec
dec
nop
add
insb
hlt
incl
mov
lcall
test
ja
decl
xor
fsts
push
arpl
hlt
aaa
xchg
imul
or
add
jmp
shl
out
pop
mov
mov
enter
in
int
in
clc
int
adc
into
mov
arpl
stos
or
bnd
dec
arpl
mov
jb
inc
xor
lods
imul
sub
fcmovnu
dec
inc
aas
imul
pushf
add
push
push
dec
outsl
mov
neg
call
jno
sahf
or
inc
pop
and
insb
std
idiv
gs
pop
les
sbb
sbb
inc
cld
mov
insb
fxch
mov
and
incl
jne
and
xor
add
je
inc
jne
pop
xor
mov
push
adc
adc
jne
mov
adc
jns
imul
xchg
jne
movsl
mov
inc
popa
fidivs
fstp
mov
or
inc
jne
clc
or
das
jae
test
jb
jne
insb
dec
mov
cld
in
sub
inc
adc
push
aas
push
cmp
mov
or
inc
aam
arpl
push
gs
dec
jle
loope
testb
and
std
dec
jbe
or
fbstp
lret
push
sbb
imul
in
adc
fs
inc
mov
pusha
mov
and
jmp
outsl
aad
pushl
ja
outsb
fxch
jge
popa
jo
outsl
ret
cwtl
imul
pop
push
dec
cmp
lcall
popf
gs
and
jb
jb
inc
jge
mov
imull
jo
mov
pushl
push
add
cmp
add
push
outsl
test
icebp
dec
cld
xchg
mov
jge
es
test
cld
fbld
fs
inc
jns
xchg
test
pop
xlat
or
outsl
or
mov
jo
mov
jb
adc
call
incl
mov
mov
addr16
jns
dec
test
arpl
dec
or
addr16
jne
jns
or
xor
imul
ss
test
test
outsl
adc
xor
jb
data16
arpl
fildll
jecxz
xchg
scas
pop
mov
jecxz
cmp
mov
gs
pop
push
lods
mov
lods
ja
mov
mov
inc
cmp
outsb
leave
or
popa
pop
pop
pop
inc
js
inc
jb
fsubr
lcall
jg
les
aas
xor
inc
pop
dec
inc
incl
mov
lcall
enter
push
je
jo
loop
outsl
xlat
ljmp
cld
dec
sbb
lahf
adc
add
cs
inc
push
push
xlat
adc
aas
xor
in
fstpt
push
push
and
push
xchg
sbb
and
pop
adc
pop
and
or
and
jl
and
adc
push
xchg
xor
pop
or
push
or
pop
sub
push
sbb
or
roll
jg
or
mov
je
mov
push
lock
push
dec
adc
adc
outsl
and
inc
jnp
incl
push
sub
jmp
or
pop
jbe
push
in
pop
push
add
sub
aaa
jbe
incl
push
das
jl
sub
cmp
adc
sbb
adc
cmp
and
cs
push
push
push
out
cmc
incl
and
and
adc
push
mov
das
hlt
mov
push
cmp
add
add
sbb
sbb
push
das
icebp
aaa
mov
add
mov
push
ret
dec
adc
push
clc
aas
cmp
sti
and
mov
insb
aad
cmc
loopne
fcmovnb
pop
fistps
adc
pop
or
sbb
cltd
pop
push
xor
or
lods
mov
push
ss
xor
cs
mov
xlat
inc
cmpsl
loopne
cs
pop
test
ffree
mov
and
pusha
aaa
enter
incl
mov
jb
test
or
and
lahf
add
es
push
insl
lcall
dec
es
sub
rorb
movsb
gs
xchg
add
jae
daa
lock
mull
sbb
add
lcall
xchg
daa
jne
inc
xor
nop
adc
les
nop
add
inc
mov
inc
add
push
ljmp
out
mov
sub
adc
jb
mov
outsl
pop
adc
or
out
jne
push
jae
xor
push
push
jb
shl
cmp
jnp
push
in
mov
das
leave
or
and
or
add
orl
add
das
popf
cld
jbe
or
xchg
mov
aas
inc
mov
ret
sub
jne
push
std
ja
add
jmp
xchg
test
mov
add
cmpb
jne
mov
mov
shr
shrl
les
clc
sub
add
add
cld
jne
lods
push
mov
cmp
daa
lea
jo
repz
pop
or
xchg
or
pop
push
in
push
dec
repnz
push
adc
call
pop
mov
push
jmp
popa
xor
ja
fstl
cld
or
and
mov
adc
jo
jmp
lods
jnp
loop
mov
mov
or
scas
insb
inc
test
mov
jle
mov
ss
cld
std
push
call
lea
mov
jg
adc
lea
push
cmp
and
in
sub
lods
xor
scas
xchg
adcb
andb
scas
test
mov
cmp
hlt
je
repnz
mov
andl
inc
dec
dec
xorb
inc
inc
push
loope
add
popa
push
push
adc
and
push
add
dec
shlb
xchg
mov
cwtl
setns
xor
bsr
mov
sub
adc
test
test
imul
mov
shll
arpl
aam
in
lsl
arpl
data16
jl
cmpb
imul
fnstsw
pushf
add
rolb
xchg
add
add
je
inc
jns
outsl
outsl
pop
jnp
mov
adc
sbb
add
inc
mov
mov
fisttpl
gs
adc
imul
push
imul
mov
pop
push
pop
jae
gs
xchg
call
sti
adc
cmp
push
inc
imul
outsl
xchg
mov
inc
js
cs
je
bound
jae
jbe
pop
mov
imul
pop
mov
adc
fwait
adc
in
insl
imul
fs
mov
xchg
insl
inc
xchg
bound
and
mov
mulb
scas
and
mov
stos
jo
adcl
sub
das
outsb
jle
popa
lea
fisttpll
lahf
je
or
dec
outsb
outsw
inc
xchg
out
outsl
fisttpl
and
jo
je
jo
subb
data16
or
insl
test
inc
push
ss
imul
push
data16
mov
imul
je
mov
xor
subb
gs
gs
jnp
pop
push
stos
pop
mov
cmp
dec
mov
or
and
add
adc
adc
or
jo
arpl
mov
outsl
jo
ds
ret
mov
pop
pushf
dec
subl
outsl
scas
sbb
sbb
push
data16
xor
push
test
jne
xlat
je
outsb
jle
xor
push
jnp
fistl
arpl
imul
inc
lds
popa
and
imul
xchg
cld
push
dec
adc
in
ljmp
pop
repnz
add
adc
dec
ja
adc
add
push
frstor
ficoms
jo
and
mov
and
je
js
cmp
adc
nop
fildl
popa
sti
xor
or
cs
or
pusha
iret
mov
dec
lret
inc
dec
dec
loope
jmp
xchg
xor
jo
and
outsl
sahf
adc
sbb
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
