mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
add
shlb
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
add
jo
out
inc
lahf
jbe
fdivl
cmpsb
mov
or
xor
ret
out
sbb
cmp
data16
out
int
lock
sub
in
fidivs
jo
popa
sub
imul
lds
mov
xchg
push
hlt
decl
inc
jae
xchg
daa
cmc
push
dec
das
cmp
fstps
sbb
in
sbbb
and
pop
add
shrl
xor
pop
mov
mov
fs
cmc
cmpsb
fisubs
sub
xor
dec
xchg
imul
arpl
mov
mov
call
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
add
jo
out
inc
lahf
jbe
fdivl
cmpsb
mov
or
xor
ret
out
sbb
cmp
data16
out
int
lock
sub
in
fidivs
jo
popa
sub
imul
lds
mov
xchg
push
hlt
decl
inc
jae
xchg
daa
cmc
push
dec
das
cmp
fstps
sbb
in
sbbb
and
pop
add
shrl
xor
pop
mov
mov
fs
cmc
cmpsb
fisubs
sub
xor
dec
xchg
imul
arpl
mov
mov
call
test
dec
adc
jno
jno
rcll
shll
mov
mov
or
decl
int3
cmpsb
mov
adc
mov
cltd
lods
rcl
cmp
mov
aad
adcl
pop
cmpsb
sbb
mov
pop
fninit
imul
lret
fndisi(8087
push
and
rol
fildl
jbe
aas
dec
aam
inc
dec
push
gs
pop
call
sub
les
or
xchg
ret
inc
jmp
push
fmull
pop
scas
adc
insb
sub
dec
jge
jno
sbb
fwait
test
leave
mov
loop
and
mov
jne
or
mov
dec
int3
add
lea
inc
mov
popa
mov
movb
lahf
dec
insb
in
sub
mov
sti
int
mov
adc
aas
push
mov
inc
test
xor
popf
jo
or
xor
movsl
add
fiadds
jecxz
and
popa
mov
jbe
jmp
stos
pop
mov
jecxz
mov
int3
scas
loopne
jae
pop
pusha
std
aaa
inc
sbb
jo
push
sahf
out
cli
aaa
dec
les
mov
add
pop
and
into
cs
mov
lea
cld
cmpsl
in
pop
mov
jo
ss
mov
inc
or
adc
aas
cld
jnp
dec
sbb
mov
jae
cmp
out
lahf
mov
in
cs
jge
or
test
adc
dec
fidivs
push
das
mov
mov
push
cmp
and
aas
movsb
adc
mov
repnz
divl
mov
test
int3
add
rorl
out
fsubrs
fisubs
xor
popf
loop
mov
gs
orl
lret
jmp
sub
mov
and
lock
mov
das
out
sub
ret
jl
xor
loop
push
dec
stc
cmp
idivb
lret
sbb
cs
ja
xchg
hlt
inc
mov
mov
mull
shr
lret
inc
push
xor
rcrb
xchg
pushf
out
mov
sarb
dec
mov
and
add
pop
jecxz
adc
mov
push
in
lret
fs
test
ja
lret
add
push
sbb
jecxz
push
adc
movsb
sub
xchg
mov
shlb
dec
data16
leave
es
popa
cmp
sbb
push
mov
mov
cmp
scas
dec
out
xchg
nop
cmp
gs
ret
xlat
inc
xor
out
xchg
pop
clc
inc
add
mov
add
jge
popf
rcll
add
jo
dec
mov
inc
adc
stos
not
flds
or
push
fdivrl
rclb
fisubs
fucomp
pushf
pop
hlt
and
pusha
addr16
xchg
pop
sub
sbb
sahf
fdivr
dec
cmpb
outsb
popa
stos
and
lods
adc
adc
std
lret
or
add
bound
cmp
cmpsl
in
sahf
repnz
mov
aaa
mov
cmp
outsl
inc
ficompl
cmpsb
xchg
in
mov
push
lods
mov
stos
test
ds
std
push
out
in
popa
mov
inc
mov
inc
imul
loop
xchg
or
add
cltd
xchg
sbb
jmp
add
pop
push
jg
adc
aas
orl
dec
int3
pushf
inc
add
sbb
out
or
mov
das
inc
jne
test
and
jae
add
lcall
hlt
gs
inc
rcll
dec
imul
aaa
sbb
xchg
cmp
es
imul
call
push
cmp
std
and
jo
add
pop
xchg
cmp
push
ret
data16
out
push
sub
inc
pop
jle
in
inc
mov
mov
loop
jecxz
xchg
stc
jae
pushw
gs
xchg
mov
pop
sbb
jl
stc
add
shrb
or
sti
stos
add
mov
int
arpl
imul
cmpsb
mull
and
js
aad
add
test
mov
ljmp
xchg
mov
es
cmp
call
scas
popf
bound
adc
push
and
jne
pop
or
test
dec
fcomps
cmc
lret
push
fbstp
insl
xchg
inc
lods
cmc
inc
outsl
lods
sub
jno
push
std
xchg
jecxz
mov
mov
lds
add
out
adc
pushf
sub
push
ficompl
enter
adc
int
mov
cmpsl
arpl
sub
je
cld
ss
jns
push
mov
ds
sub
pop
mov
jo
xchg
leave
mov
xchg
jge,pn
scas
jg
inc
sar
mov
out
cmpsl
or
sbb
les
jp
fisttpl
cld
or
push
sub
pushf
sub
mov
hlt
test
adc
push
imul
dec
inc
adc
shlb
fstpl
adc
insb
push
adc
xchg
cmove
jmp
imul
loopne
cmp
xlat
ds
mov
adc
dec
dec
xchg
dec
push
and
pop
or
pop
adc
xor
inc
sarl
in
sbb
cmpsb
fdiv
sbb
inc
pushf
push
add
inc
fistpll
push
lret
roll
and
loop
ret
add
out
pop
mov
hlt
xor
pop
jno
out
push
fcmove
pop
loopne
xchg
jne
add
lds
mov
outsl
pop
push
aas
or
or
mov
cmpb
scas
icebp
imul
pop
adcb
ja
nop
out
rorb
or
xchg
rorb
mov
xchg
dec
sar
dec
push
adc
inc
pop
pop
mov
inc
or
add
adc
mov
sbb
or
xor
xlat
mov
int
add
mul
mov
movsb
push
imul
adc
mov
add
xor
in
mov
fwait
and
ret
aaa
jle
gs
les
push
aam
or
out
jns
xchg
pop
stos
mov
and
jle
adc
loop
dec
divb
lret
xor
test
xchg
in
das
and
xchg
fsubs
test
inc
push
ret
mov
shlb
les
pop
dec
sahf
mov
popf
mov
mov
paddd
jge
cmp
push
ljmp
cmp
cwtl
aad
fs
cmp
insb
xchg
popa
aaa
mov
sub
or
scas
dec
lret
xor
pop
and
test
add
aaa
test
sub
sub
cmp
out
dec
mov
loope
iret
in
lods
add
push
xchg
sub
iret
push
mov
call
mov
jecxz
xor
mov
and
hlt
push
test
or
mov
xor
imul
xor
adc
fmuls
adc
popf
cmp
cld
pop
fidivrl
adc
loope
pop
or
dec
sbb
jg
mov
push
pushf
push
cmp
add
call
mov
fildl
int3
adc
fldl
push
sti
imul
jge
dec
jge
and
rcll
push
addb
mov
pop
mov
xchg
mov
xchg
cld
bound
cmp
lahf
jg
or
aam
push
repz
push
leave
out
rdpmc
test
push
dec
shl
and
mov
ja
adc
and
imul
mov
decl
loopne
sbb
aam
or
xchg
inc
imul
je
adc
aam
jbe
inc
dec
aaa
mov
lods
dec
inc
test
mov
scas
adc
xchg
fcompl
xor
adc
ja
jle
add
push
add
cmp
cmpl
arpl
mov
lahf
inc
fsubr
push
mov
or
xor
cld
dec
ret
test
inc
das
sahf
xor
ds
xchg
mov
cmp
movsl
xchg
lds
xchg
adc
jl
mov
mov
subb
pushf
fdivrs
jnp
adc
inc
adc
xor
push
imul
inc
cmp
sbb
fimull
mov
sub
mov
test
jnp
insl
sub
inc
outsb
aad
adc
scas
mov
pop
ds
movsl
loop
and
pop
jns
jne
pop
fldenv
aas
mov
fstl
adc
jg
add
xchg
cmc
jp
fimull
xchg
adc
fsubp
cmc
push
jecxz
pop
xchg
mov
imul
sub
cwtl
sbb
arpl
mov
stos
jg
int3
mov
pop
mull
xchg
jmp
sti
dec
add
sub
jno
add
add
mov
stos
inc
push
pushf
adc
cld
cwtl
add
ja
loop
push
ficomps
aad
or
loopne
or
xor
cmpsb
stos
loopne
jns
shlb
dec
jecxz
push
cli
call
mov
cmp
daa
into
mov
add
cs
lds
add
jbe
mov
lcall
sbb
test
mov
xor
adc
inc
int
adc
pop
mov
push
mov
cmp
insl
add
xchg
cmp
sub
dec
scas
cmp
sub
scas
pop
xor
test
add
mov
sbb
pop
sbb
repz
ret
popa
mov
fsubrs
outsb
aas
sub
add
dec
in
inc
mov
pop
inc
loope
add
push
ja
mov
shll
push
xchg
and
cmp
jp
mov
cmp
fcoml
adc
push
dec
inc
cmp
jne
dec
arpl
add
lret
ja
sti
pop
pushf
repnz
inc
inc
out
mov
jb
ja
mov
mov
xchg
xor
push
inc
xchg
mov
arpl
mov
cs
or
and
dec
ljmp
insl
mov
sti
out
idiv
loope
lds
fsubl
push
add
pop
movsl
rorb
in
outsb
adc
dec
cltd
push
mov
push
sbb
pop
mov
xor
out
fimuls
cmp
dec
dec
add
cltd
shlb
cmp
push
dec
sti
mov
inc
inc
mov
push
and
int
pop
push
pop
jecxz
cmc
pop
pop
mov
mov
pushf
xchg
mov
jp
mov
jecxz
scas
loop
mov
ret
in
push
push
inc
stc
outsl
xchg
sub
pop
pusha
repz
adc
fst
or
sub
mov
aad
stos
jecxz
add
lcall
mov
adc
add
push
cs
test
pop
xchg
sbb
pop
push
xchg
fcmovnbe
mull
clc
rorl
in
sahf
in
insb
mov
test
dec
xchg
push
sti
cltd
push
pop
popf
mov
mov
ficoms
dec
inc
mov
aad
imul
or
imul
js
xchg
cltd
insl
push
das
pop
stc
iret
popl
fiadds
jl
les
sub
push
notl
nop
js
leave
ss
lcall
inc
lock
int
jmp
dec
adc
cli
pop
ja
pop
push
push
inc
xchg
xor
popa
mov
push
fisttpl
push
sbb
inc
inc
outsb
jno
pextrw
xchg
hlt
stos
pusha
jnp
inc
cli
addl
xchg
or
dec
out
cmp
fcomps
mov
mov
stos
sar
sbb
jl
jno
stos
jp
mov
flds
xorl
inc
dec
fsubrl
adc
push
push
xchg
mov
pop
andl
popf
pop
push
xchg
rclb
jne
lcall
mov
cmp
cmp
inc
sub
ror
popf
mov
call
mov
jmp
mov
mov
out
cmp
in
cmp
inc
dec
inc
inc
lcall
cs
and
testb
push
mov
adc
pop
in
sub
loop
mov
adc
mov
xchg
lods
std
dec
sub
mov
or
adc
jp
pop
jecxz
aaa
fsubl
push
dec
sbb
mov
add
js
test
push
mov
popf
push
mov
push
mov
xor
fwait
aas
inc
mov
aam
fcomps
mov
test
inc
rcl
ljmp
push
mov
mov
ss
fcomip
aaa
inc
cmp
mov
adc
mov
and
cwtl
call
data16
sti
sbb
cmp
into
data16
xor
lods
cmp
movsb
push
mov
lahf
jb
clc
mov
mov
das
pcmpeqw
adc
sbbb
lea
mov
movsl
mov
clc
push
sub
dec
inc
mov
in
js
pop
out
push
cmc
sbb
fmul
loopne
mov
js
lock
xor
inc
loopne
push
push
cli
xchg
int
aaa
popa
mov
fdivrs
lret
movl
iret
push
cmp
dec
addr16
cmpsb
jbe,pn
mov
mov
adc
push
xchg
pop
test
lock
pop
sbb
jge
mov
rorl
push
mov
mov
imul
push
jae
mov
sbb
push
in
push
scas
les
push
insb
into
xchg
gs
mov
arpl
mov
sbb
push
or
pop
add
sbb
daa
mov
fdiv
nop
inc
xchg
mov
add
xor
jle
xor
jecxz
jo
lds
repz
lock
loop
mov
in
sub
outsl
pop
psubb
push
rorb
sbbl
pop
mov
popa
xlat
mov
out
jno
adc
mov
sub
out
or
sbb
cltd
repnz
cwtl
mov
loope
pop
fstpt
jg
inc
pop
popf
arpl
stc
dec
in
inc
mov
inc
aad
or
idiv
outsb
or
pop
push
fs
push
mov
or
mov
loopne
push
sub
js
and
xchg
imul
jmp
dec
cs
fs
pop
dec
adc
sti
cmpl
clc
adc
sarl
xor
jae
adc
add
sbb
xchg
ret
cmp
scas
les
out
or
and
and
mov
in
movsl
call
sub
fdivrs
and
lahf
cld
push
ficoml
int
lahf
cmp
movsl
test
xlat
or
ffree
jmp
mov
in
loope
ljmp
shrb
inc
dec
sbb
inc
lea
adc
jp
jge
std
and
add
add
or
push
cltd
xor
xchg
and
xchg
sbb
inc
xchg
mov
iret
gs
push
into
movsl
xchg
mov
shll
jge
cwtl
and
jbe
sub
fisubrl
test
mov
push
add
and
mov
hlt
xorb
inc
fildl
fwait
sub
pop
or
das
shll
dec
movsl
idivb
and
mov
fsts
fisubs
push
rcrb
js
mov
sbb
sub
jmp
add
lret
hlt
xchg
in
cmpsb
notb
lock
jl
push
and
and
mov
inc
mov
inc
add
daa
cmp
js
sbb
and
loopw
movsl
arpl
sbbl
xchg
mov
sub
fwait
mov
and
ds
subb
sbb
cmp
xor
notb
adc
addr16
mov
cltd
mov
mov
push
sub
cmp
mov
in
out
adcl
lret
ss
dec
idiv
andb
rcl
aaa
xchg
pop
in
mov
int
jnp
je
rclb
jg
add
dec
dec
pusha
xchg
mov
pop
out
imul
push
lods
jns
dec
mov
fdivl
aaa
jp
jmp
ret
getsec
fisttpll
cmpsl
inc
test
push
ljmp
cmp
mov
sub
push
pushf
sub
or
ret
jecxz
jle
lret
add
push
xor
xor
or
pusha
inc
adc
push
jl
enter
test
daa
pop
aas
adc
xor
lock
inc
movl
add
int3
mov
lods
lret
pop
dec
or
dec
in
data16
ja
xor
lcall
dec
lret
pop
sub
cmc
clc
bnd
mov
sahf
cmc
xor
ds
hlt
leave
dec
stos
in
test
mov
nop
imul
aas
pop
imul
xor
adcl
rorl
mov
test
int3
lods
sub
pop
adc
mov
in
dec
xchg
repnz
sbb
cli
inc
leave
pop
xchg
dec
jns
xor
mov
adc
imull
xor
xchg
loopne
enter
test
inc
pop
stc
aad
data16
mov
sti
mov
pop
ret
push
popa
aad
xchg
push
push
lcall
pusha
fnstsw
scas
cmp
test
outsl
xchg
mov
mov
adc
mull
scas
xor
ret
push
sbb
in
dec
xor
pop
arpl
fistpl
out
xlat
jae
xor
jnp
sbb
fdivrl
and
sbb
imul
jl
sub
add
ja
inc
jno
dec
mov
mov
push
pop
fs
inc
adc
dec
sbb
out
sbbl
or
out
jp
mov
das
loopne
push
and
sbb
mov
in
mov
cld
dec
add
and
movsb
push
xchg
or
ljmp
cwtl
or
adc
inc
sub
cli
jb
lock
div
and
pop
push
mov
lcall
fcom
push
out
stos
sti
xor
cmpl
pop
jg
lods
mov
pop
in
sub
xor
sbbl
lock
inc
std
nop
inc
dec
lret
aaa
jp
sbb
arpl
xor
jns
in
sub
cs
stos
sub
add
xchg
xor
arpl
ss
scas
mov
outsl
jno
cmp
pushf
jg
or
or
pop
fisubrl
xchg
mov
push
aad
lret
xor
add
rcrb
cmp
adc
insl
push
ret
sub
xchg
mov
ss
sub
push
xchg
out
dec
ss
loope
xlat
cs
jo
das
test
cmp
ret
lds
mov
xchg
lods
xchg
xorps
jns
cmpsb
fnsave
xorb
jle
mov
cmp
push
lds
add
out
mov
xchg
aas
lock
add
loope
int
xor
cmp
jmp
pushf
dec
add
adc
jle
in
cmp
and
ret
xchg
and
icebp
lret
lcall
ja
and
push
addl
test
push
jp
sahf
mov
stos
imul
lods
arpl
push
cld
pop
rcr
pushf
jnp
xor
jle
inc
pop
fcmovnb
and
ret
data16
mov
dec
mov
add
xchg
lahf
out
and
jmp
or
lcall
fisubs
out
cmp
outsb
ljmp
dec
negl
imul
cmpsl
in
loope
mov
xor
sbb
scas
mov
sar
cmp
push
aaa
dec
add
pop
mov
shrb
bound
int3
lret
pop
mov
jecxz
jno
fnstenv
aad
in
adc
xchg
adc
sub
in
jnp
adc
push
fisubrl
mov
mov
lock
inc
loopne
cmp
fnsave
arpl
dec
int3
sbb
mov
insl
out
cltd
jne
xchg
sub
mov
out
outsb
mov
imul
cltd
fsubrs
mov
int
icebp
repnz
test
and
int3
pop
xor
out
sbb
mov
addr16
inc
jbe
cmp
rcrl
das
icebp
cmp
xor
int
mov
jae
sti
mov
fistpl
sbb
or
sbb
or
lret
sarb
sub
popf
add
jbe
adc
push
cmp
jns
movsb
repnz
push
inc
jbe
iret
stc
icebp
jmp
or
gs
outsb
pop
xchg
test
sbb
lods
pextrw
in
push
sbb
mov
dec
inc
xchg
jmp
aaa
mov
inc
imul
aas
pop
sub
ljmp
add
loop
pushf
out
je
lock
addb
pop
loop
xchg
cs
fcompl
into
push
cmp
inc
adc
fcomps
std
and
ja
push
mov
shlb
push
pop
fiadds
insl
dec
out
mov
xchg
pop
push
imul
ficoms
sub
cs
mov
jb
xchg
mov
cmp
mov
sub
mov
xchg
push
popa
lahf
insl
bound
adc
pop
ret
jns
adc
mov
add
xchg
rcll
insb
test
icebp
enter
xlat
shll
and
mov
stos
call
mov
dec
cld
nop
pop
cmpb
je
mov
popa
sub
xchg
push
es
int3
insb
mov
or
mov
stos
push
lock
ljmp
adc
dec
dec
sbb
jo
sbb
outsb
lret
jno
dec
popa
outsl
jne
mov
or
xchg
stc
mov
mov
ljmp
jb
outsl
sub
icebp
fimuls
add
pop
das
push
movsl
xor
push
jne
aas
addl
mov
scas
xlat
mov
jns
leave
jle
mov
cmp
and
cmp
mov
movsb
clc
icebp
fcomip
hlt
lret
adc
imul
inc
rcll
mov
pusha
in
mov
int3
popf
orb
decl
not
mov
cmp
js
loopne
mov
dec
xchg
aaa
pop
mov
fwait
pusha
inc
pushf
xchg
gs
pop
aas
xor
jp
cmp
sbb
push
into
add
pop
insl
and
or
popf
pop
in
push
pop
mulb
push
sahf
and
js
sbb
ja
sar
xbegin
out
fisubs
imul
scas
insl
dec
out
insb
shr
es
inc
out
pusha
sub
mov
rep
mov
lcall
arpl
rorl
divl
int
add
outsb
mov
jae
clc
lret
jmp
shlb
and
lods
or
mov
lods
push
ds
outsb
test
jecxz
mov
shr
pushf
dec
mov
or
cli
lcall
jmp
and
loope
xchg
test
stos
loop
ret
fldln2
cmp
pop
lods
mov
inc
sub
ret
fprem1
mov
mov
mov
jb
adc
push
pop
pop
les
fcmovnu
pop
sbb
and
xor
jnp
loopne
aas
mov
shll
push
sti
xchg
inc
fs
pushf
or
dec
sub
push
push
jge
pushf
sbb
ss
lahf
push
adc
int
mov
insb
imull
add
rolb
loop
fildl
xchg
hlt
or
out
dec
adc
dec
xchg
enter
jl
imul
in
cmp
push
mov
push
xchg
sbb
pop
pop
jnp
push
in
nop
mov
sbb
in
gs
add
or
loopne
mov
sub
mov
push
sbb
adc
dec
cmpsl
mov
push
push
divl
pop
pop
lock
adc
adc
xchg
mov
push
xchg
cmp
arpl
inc
push
daa
clc
into
out
fsubrs
add
mov
adc
xorb
out
scas
cwtl
sarb
aas
outsl
mov
daa
clc
cmp
call
cli
xchg
repz
lea
out
addr16
dec
movsl
pop
mov
xchg
dec
sub
adc
jae
pop
aam
add
fwait
sub
aaa
in
inc
jl
std
in
adc
mov
push
and
mov
push
sbb
into
pusha
mov
pop
jl
rclb
dec
daa
repnz
xchg
sub
movl
sbb
divb
adc
stos
pop
xorl
lahf
dec
jg
loopne
hlt
lds
inc
push
ret
fisubs
test
sub
lcall
cmpsb
mov
mov
lock
sahf
stc
sub
fidivl
out
fldenv
or
cmc
jge
sbb
cld
jecxz
cmp
out
mov
cmc
popa
int
ds
cmpsl
shll
outsl
push
lret
jnp
sbb
add
jp
icebp
lret
dec
ljmp
lock
dec
pop
scas
xor
dec
popf
push
inc
add
add
sub
push
jle
fmulp
out
jae
bound
push
loopne
imul
pop
add
xchg
pop
xchg
push
hlt
leave
xchg
mov
mov
mov
dec
jecxz
bound
jp
test
mov
icebp
pop
xor
and
mov
sub
lods
popf
inc
mov
sbb
dec
shrl
repz
cmp
push
subb
inc
inc
fsubrs
lods
pop
outsl
das
shll
outsl
mov
pop
into
gs
lock
xchg
enter
lret
inc
push
add
cli
push
fbstp
imul
pop
mov
fidivrl
mov
sub
mov
rclb
fisubs
push
cmp
mov
pop
scas
insl
xor
ret
jmp
push
mov
mov
inc
push
cmp
mov
sar
fbstp
add
inc
push
inc
sub
push
pusha
mov
or
xchg
sarb
das
jnp
adc
xchg
dec
add
loop
lock
cld
and
js
out
mov
xchg
xor
fimuls
insb
or
fwait
push
ja
pop
dec
leave
pop
bnd
iret
rol
outsb
pop
decl
leave
jns
adc
scas
rcll
dec
xor
pop
mov
or
test
or
add
fisubl
pop
ljmp
stc
xchg
xchg
sbb
hlt
xchg
lret
cmc
btr
pushw
cld
lahf
ss
out
lar
jbe
test
ljmp
out
inc
dec
test
nop
nop
sahf
adc
and
dec
push
jmp
fadds
jl
push
pop
inc
jb
ljmp
jle
cld
jle
lcall
adc
rclb
pop
and
sub
jl
sbb
lahf
xchg
xor
out
iret
in
xchg
xchg
jmp
pop
decl
loop,pn
mov
ds
ja
mov
adc
jno
loop
movsb
inc
xchg
xor
inc
push
mov
push
xor
loopne
xchg
inc
sub
or
or
add
sbbb
out
sarb
jg
push
lret
inc
popa
pop
lds
mul
cmp
sbb
rcrl
add
cmp
orb
ljmp
aam
or
inc
add
push
fmuls
rcr
out
fmul
lret
jecxz
mov
ds
mov
mov
add
into
jg
fwait
fs
outsl
stos
sarl
es
pop
fwait
cmp
out
scas
xor
inc
cmpsl
cmpl
xchg
adc
and
dec
aam
sarb
cmpsb
fstpt
mov
add
cmp
sarb
stc
add
inc
imul
out
sbb
fstpt
idiv
cmpsl
lret
mov
fwait
insl
push
ja
sub
sbbb
sub
sub
inc
jmp
mov
rorl
lea
cmpxchg
es
xchg
sub
pop
xor
fisubrs
mov
and
xor
mov
push
jmp
dec
mov
ja
test
mov
pop
and
sub
inc
lret
jnp
out
int3
ljmp
xchg
iret
enter
lock
dec
lock
lret
in
jne
xor
insl
mov
mov
cmp
into
mov
rorl
negl
faddl
push
xchg
xlat
cs
incl
xor
cwtl
test
jae
pop
add
mov
mov
mov
mov
cmpsl
cwtl
arpl
shlb
out
cli
jp
pop
scas
mov
jl
ret
push
addr16
sbb
push
rcl
pop
add
fildll
imul
and
push
into
push
pushl
fwait
mov
outsl
testb
in
xchg
jmp
dec
mov
hlt
adc
mov
or
sbb
pop
orl
jg
loop,pt
fdivl
lods
sbb
xor
stos
jo
faddp
repz
jo
test
fcomps
test
dec
rorb
xchg
icebp
ficompl
sub
mov
ja
dec
lods
sub
mov
jnp
push
movsl
call
or
mov
sub
sarb
dec
sub
jg
mov
out
lret
jle
jns
nop
sbb
in
or
pop
add
cld
jmp
rorb
jno
jns
xchg
sub
xor
pop
outsb
cwtl
fwait
or
xor
data16
sub
xchg
outsb
cmp
lods
jg
repnz
outsl
push
mov
push
jo
adc
xchg
call
jo
or
dec
testl
mov
lret
inc
mov
outsb
out
insb
adcb
mov
popa
xchg
insb
roll
or
cmp
subl
mov
or
or
repnz
test
andb
mov
pop
andb
aam
sub
push
imul
or
push
fldcw
stc
xor
push
mov
repnz
cmovae
xlat
jecxz
mov
cmp
inc
cmp
or
dec
inc
sub
loopne
sub
aas
inc
xor
fstpl
cmpsl
inc
mov
test
aam
scas
mov
inc
iret
in
lret
and
xor
lods
fbld
stc
sbb
xor
stos
rcrl
lods
mov
sbb
aad
test
xor
pop
into
shlb
sbb
adc
cmp
nop
mov
out
push
ret
cmp
xchg
jecxz
filds
mov
inc
dec
fadds
sti
pop
aaa
mov
loope
ret
mov
das
insb
fmul
repnz
mov
xchg
std
jbe,pn
mov
xchg
push
or
push
jns
add
inc
fistl
or
or
push
scas
std
sahf
add
insl
mov
jns
adc
imul
xchg
sub
mov
in
pop
enter
cmc
ret
or
mov
ss
push
push
xor
in
xchg
jbe
jb
addb
aaa
and
pop
fimull
mov
add
adc
sti
push
and
inc
jg
jb
ficoml
ret
popf
addr16
scas
pop
andl
popa
and
imulb
jl
push
and
dec
jge
enter
bound
mov
xor
test
add
add
or
shl
pop
add
push
xor
push
and
lret
mov
out
outsl
dec
into
mov
push
test
mov
jmp
and
push
cltd
jle
fucomp
out
lea
sub
out
add
lret
test
testl
xchg
xchg
push
aad
inc
add
rclb
jnp
add
mov
or
jno
lret
mov
scas
xor
pop
jns
test
sahf
bound
dec
xchg
jno
es
mov
fs
xor
mov
or
imul
xor
fmulp
imul
mov
dec
mov
das
ja
enter
std
movsl
cmp
add
mov
xorl
lea
mov
inc
dec
mov
gs
int3
dec
xor
xchg
decl
pop
gs
sbb
and
daa
dec
jmp
insl
arpl
pop
and
jne
push
hlt
sbb
mov
hlt
stos
movsl
inc
jb
test
aad
mov
fnstenv
imul
xchg
stos
faddl
repz
jge
add
adc
xchg
mov
fwait
cmp
hlt
ret
insb
sbb
inc
mov
test
daa
and
pop
pop
fists
mov
add
add
pop
cld
add
sub
push
mov
rcrb
add
stc
test
mov
or
mov
adc
mov
dec
mov
mull
sbb
addr16
cmp
adc
jno
inc
fstl
aad
jne
xlat
mov
hlt
fsts
inc
mov
push
fcmovne
mov
push
add
pop
inc
outsl
fwait
jnp
push
pusha
cmp
rolb
mull
pop
popa
iret
jbe
xchg
cmpsl
ret
nop
ja
cmp
stos
jge
or
cmp
inc
pop
lods
bound
xor
add
cmp
sbb
push
int
xchg
lret
loope
mov
xchg
push
enter
testb
fwait
and
mov
fistl
imulb
cvtps2pi
xchg
jmp
inc
sbb
fists
mov
not
insb
call
imul
pop
mov
mov
add
std
add
or
pushf
xor
jno
sub
sti
lock
insl
adc
jmp
rolb
clc
pop
pop
std
iret
push
in
add
ss
pushf
lret
or
sarl
loope
cmp
xchg
mov
and
rorb
out
leave
nop
xor
stos
dec
loop
mull
pushf
pop
pop
mov
pop
xchg
push
sbb
mov
mov
loope
adc
push
lahf
jns
mov
dec
imul
mov
add
out
insb
pshufw
jp
pop
cld
mov
aas
or
arpl
xor
xor
and
inc
stos
fidivs
fidivl
icebp
ret
cmpsb
cmp
add
mov
cmp
int
sbb
pop
in
mov
dec
push
out
sub
loopne
pop
rcr
lret
xchg
lahf
rclb
frstor
xor
out
mov
cltd
cmc
dec
stos
sti
sbb
sbb
fistps
sub
mov
icebp
mov
xchg
cmp
adc
push
xchg
or
adc
xor
fmuls
mov
mov
inc
fisttpll
ret
xor
sbb
dec
add
push
mov
and
dec
ret
fisubrl
mov
pop
xor
adc
pushf
lods
scas
sbb
aam
push
sbb
mov
sbb
cmp
shll
pop
in
cmc
call
fs
ss
cwtl
jp,pn
fildll
or
cli
pop
sbb
pop
and
mov
call
jno
arpl
enter
pop
xchg
ljmp
ficoms
dec
fwait
pop
pop
leave
ret
daa
enter
pop
pop
cwtl
xor
mov
lcall
ss
or
int3
pop
jl
inc
mov
hlt
jg
daa
repz
pusha
fsubs
adc
or
pusha
inc
mov
test
push
inc
loope
enter
or
jecxz
clc
movsl
lods
gs
sbb
push
ret
fildll
into
das
mov
push
pop
or
adc
enter
out
out
mov
inc
push
jbe,pt
dec
pusha
jne
and
dec
je
loope
arpl
popf
dec
sahf
add
jl
pop
add
fisubrl
mov
test
iret
aaa
popf
cli
fs
rorl
cmp
mov
and
cmpsb
test
inc
adc
xor
mov
sub
mov
xor
adcb
hlt
test
or
push
add
add
push
adc
lcall
push
mov
ficoms
xor
xchg
iret
mov
adcl
jmp
bound
xor
jge
xchg
inc
lret
mov
adc
stos
aad
xchg
stos
cwtl
imul
imul
jmp
adc
inc
or
add
gs
test
in
xchg
xor
dec
xchg
xchg
push
and
fwait
bound
adc
adc
ds
pop
pop
push
insl
xchg
mov
lods
lods
shlb
dec
insl
or
or
cmp
lods
mov
mov
roll
cmc
les
sub
dec
jns
rolb
iret
nop
into
sahf
push
sbb
dec
sbb
mov
xchg
jle
xchg
sbb
idivb
push
and
jne
das
push
xor
or
cwtl
xor
pusha
add
jnp
rcr
push
mov
clc
cs
mov
pop
sub
pushf
push
mov
xchg
cmc
mov
fidivrs
loope
ficoml
movsl
xchg
cmp
outsb
daa
mov
inc
mov
dec
cmp
jge
push
test
cmp
mov
shll
xchg
popa
mov
lock
mov
cmp
repnz
test
push
ljmp
or
jl
cmp
and
inc
inc
lods
pop
add
icebp
dec
sub
add
mov
adc
lret
scas
imul
jle
xor
mov
jno
push
or
mov
pop
mov
nop
adc
sub
or
repnz
test
dec
or
fsubr
mov
cld
xor
movb
mov
add
pop
out
push
test
lret
dec
mov
xlat
das
insb
mov
jecxz
in
das
jmp
sub
xchg
jmp
jmp
sahf
das
in
movsl
shll
adc
jo
mov
mov
pop
mov
cmp
pop
xchg
inc
and
adc
aaa
movsl
dec
mov
pop
adc
fucom
mov
jge
cmp
cmp
test
aad
jle
aaa
and
sahf
out
cmpsl
xor
inc
xchg
inc
mov
or
sti
test
sub
inc
lcall
mov
jg
push
mov
int
pop
cwtl
xor
pop
rolb
pushf
inc
mov
inc
jae
jae
pop
ss
imulb
mov
mov
in
cmp
ret
pushf
cmp
jecxz
shlb
mov
int
mov
xlat
fsubr
jmp
scas
jo
out
insl
xchg
push
jge
sub
dec
clc
fimuls
sbb
pop
incb
sbb
push
movsl
push
repz
sub
jg
lret
mov
add
adc
stos
jmp
lods
pop
ljmp
mov
pop
adc
adc
scas
add
xchg
fldenv
popa
jle
xchg
add
xchg
xchg
in
adc
xchg
sbb
push
mov
xchg
dec
pop
xlat
loop
push
shll
sbb
or
cmc
cmpsl
or
push
cli
sbb
push
mov
sbb
push
cltd
push
sbb
mov
in
shlb
push
pop
cltd
dec
xchg
sub
jns
cli
mov
add
add
jbe
cmp
loope
loope
hlt
aaa
push
sti
fsubs
adc
cltd
sbb
push
and
mov
jno
mov
lret
call
adc
addr16
ja
aam
pop
cltd
fbstp
cmp
jb
scas
shrb
shrl
inc
dec
enter
add
xor
jle,pn
test
cs
add
std
in
jmp
std
cmp
lahf
aaa
shll
jb
movsl
bswap
jmp
fnstcw
xor
cltd
cltd
xchg
mov
rcll
mov
std
loopne
mov
lds
cmpsb
push
ret
jecxz
mov
or
test
fcoms
mov
imul
sysenter
push
pop
in
int
aaa
imul
jp
mov
ret
test
fwait
dec
mov
pop
sbb
mov
call
sarb
outsb
add
std
pusha
rcrl
imul
adc
es
pop
test
xchg
inc
into
adc
push
xor
jo
sbb
mov
outsb
mov
popa
jne
arpl
andb
imul
inc
xchg
mov
inc
xchg
hlt
pusha
cli
rcrl
js
cltd
sbb
mov
imul
mov
iret
jl
mov
or
push
mov
ficoms
cs
add
mov
push
pop
test
pop
jmp
stos
fs
or
mov
dec
jge
and
gs
xchg
mov
cwtl
push
sbb
mov
popa
addr16
adc
mov
add
test
cli
inc
in
dec
dec
push
je
inc
pop
mov
stos
ss
cld
mov
push
adc
or
xchg
loop
cltd
xor
movsb
out
pop
or
cmp
out
push
jecxz
adc
add
dec
les
mov
xchg
lret
adc
jmp
xchg
ret
push
and
fisttpl
fwait
xchg
pop
jae
subb
imul
xchg
mov
pop
xchg
ss
xor
add
mov
and
clc
jno
out
and
ficomps
cli
adc
flds
fildl
sahf
inc
and
push
mov
push
xor
cwtl
das
push
movsbl
xorl
or
enter
mov
jle
fisubl
xor
fisubrs
aaa
lock
push
mov
mov
pop
push
mov
stc
xchg
pop
aam
dec
lahf
int
lret
add
dec
sahf
dec
push
mov
xor
cmp
mov
lods
dec
rorb
fsubrp
push
cmpsb
sarl
stos
lahf
mov
clc
leave
je
ljmp
out
bound
inc
es
cmp
lahf
mov
push
and
jbe
cli
enter
mov
rorl
xor
scas
cwtl
xor
scas
fimuls
loope
pop
or
inc
sbb
je
dec
dec
sub
mov
stc
jmp
push
out
push
rolb
push
mov
stc
and
in
xchg
imul
xchg
cmp
shlb
stc
dec
fcoms
rcrl
push
lret
sbb
call
xor
mov
or
mov
imul
mov
mov
shr
rcrb
rcrb
jecxz
jae
stc
mov
call
cltd
xorb
outsl
and
or
mov
popl
and
inc
mov
pop
fistl
push
test
test
fbstp
js
lock
leave
enter
test
jecxz
dec
pop
cmp
notb
pushf
nop
xor
fidivrl
push
mov
inc
or
sahf
jp
sub
mov
ss
in
cmpl
or
cmp
stc
or
or
data16
sub
icebp
xor
and
int
xor
pop
sarl
mov
sbbl
incl
aaa
leave
popa
push
adc
pusha
pop
test
call
fisttpll
repnz
lods
stos
sbb
ret
mov
jae,pn
aam
mov
cmp
out
mov
fadds
sbb
add
arpl
aaa
std
pop
push
rep
mov
xchg
adc
xchg
fisttps
or
in
xchg
pop
sbb
loope
mov
int3
fdivs
adc
or
imull
dec
movsb
pop
mov
push
or
mov
xchg
iret
mov
push
das
push
add
jp
out
test
div
xchg
cmp
or
fcmovnb
xchg
mov
push
pmaxub
mov
insb
jmp
mov
xchg
sub
sbb
add
inc
fimull
push
adc
gs
fstp
and
pop
jp
add
xchg
into
lahf
sub
test
mov
inc
xchg
add
loop
repz
adc
in
aaa
ficoms
mov
mov
push
mov
xchg
dec
mov
fidivrl
test
pop
aam
xor
lret
push
cli
sbb
inc
lret
sahf
push
ja
subps
dec
das
cmpb
pop
or
scas
fidivl
sbb
xor
cmp
mov
mov
xor
xchg
pushl
outsb
loopne
lahf
lods
std
test
lahf
movsb
out
test
inc
hlt
movsb
lret
cmp
pop
outsb
fwait
xlat
lahf
mov
push
jmp
fwait
xchg
stos
shll
mov
jnp
lock
addb
popf
mov
lea
ret
and
or
cmpsb
mov
pop
add
lods
fistpll
fiaddl
and
cmpsb
fwait
xchg
push
sbb
jecxz
mov
and
push
pop
hlt
fists
repz
jne
in
jbe
mov
cwtl
or
sbb
shrl
sbbl
jb
outsl
ret
sub
stos
jp
scas
jmp
inc
insl
rol
mov
pop
adc
fiaddl
mov
cmp
cmp
mov
fmuls
lock
xchg
inc
into
lret
fistpll
lret
and
pop
rcl
pop
scas
xchg
push
es
scas
rcll
aam
xchg
popa
in
cmpsb
cmp
orb
outsl
jg
hlt
mov
jmp
cmpb
in
shll
sbb
js
adc
into
mov
mov
mov
aaa
and
mov
jl
add
xchg
sbb
rorb
outsb
into
sbb
pop
sbb
fdivr
outsb
addb
lcall
xchg
das
push
imul
ss
out
push
aas
mov
inc
xlat
push
cmp
not
fidivs
mov
mov
push
mov
imul
in
out
loopne
jge
sbb
adcl
lcall
pop
push
es
dec
out
enter
pop
inc
enter
xor
and
fwait
jge
scas
inc
jbe
out
xchg
sub
push
popa
cmp
sub
les
mov
movsb
inc
push
inc
inc
push
mov
sbb
mov
js
cmp
sub
push
loop
roll
jbe
into
ret
cmpsb
int
and
lcall
out
out
stc
sahf
xchg
push
mov
pop
adc
mov
mov
lods
les
es
push
lret
jle
xchg
movzwl
test
stos
cmp
fucom
loop
sub
and
and
xchg
in
cmc
fsincos
dec
fadd
stos
push
ja
lcall
dec
adc
mov
mov
fcomp
push
xchg
inc
js
mov
movsb
enter
aaa
jge
test
clc
mov
mov
add
sahf
aam
lahf
lret
sub
lea
xchg
sub
or
fs
adc
int
push
push
inc
ret
js
pop
cmp
loopne
insb
test
mov
hlt
popf
outsl
jp
or
xchg
jmp
xor
pop
sbb
inc
push
std
fwait
push
stc
pop
pusha
add
mov
fmull
jae
outsl
jle
lea
rorb
xchg
mov
outsb
add
push
add
movsl
icebp
je
pop
sbb
and
in
nop
cmpsl
sahf
mov
sbb
push
sbb
hlt
fs
fcmovu
and
cwtl
jmp
push
aas
es
gs
mov
pushf
adc
push
cmp
inc
pop
cmp
cld
pop
daa
push
insl
push
mov
push
or
outsl
sub
xchg
out
sbb
pop
mov
mov
add
jg
pop
shll
sub
pop
iret
cld
repnz
mov
fucomp
shll
movb
or
in
mov
adc
lcall
cmpsb
or
jecxz
cwtl
push
add
xor
addr16
fistpl
mov
mov
shlb
fstpt
pop
sbb
iret
bound
andl
sahf
jle
lock
cmp
sbb
pop
shl
js
movsl
insl
push
cmp
cvtdq2ps
push
jp
inc
or
push
jbe
sub
test
mov
mov
ror
adc
mov
pop
aaa
sub
leave
or
popf
cmp
bound
mov
mov
lods
imul
push
xor
mov
insl
fisubs
xchg
dec
lret
xchg
imul
scas
fwait
jp
sub
stc
dec
pop
outsl
cmp
mov
out
insb
fistps
push
decl
test
mov
xlat
clc
es
rorl
dec
add
orl
jne
aaa
sbb
xchg
pop
sbb
repz
pop
mov
mov
inc
xchg
ret
adc
fsubrs
inc
cmp
ja
imul
push
std
call
pop
imul
jno
push
dec
adc
xor
xor
in
lret
jae
and
je
pop
or
sbb
pop
jae
sbb
rcrb
cmp
and
xchg
dec
dec
push
xchg
shlb
sub
adc
fs
and
pusha
andl
mov
es
mov
iret
adc
sub
xchg
mov
lods
xchg
mov
jne
push
dec
cs
lahf
out
add
dec
fdivrl
mov
mov
xchg
xor
push
mov
mov
mov
push
stos
out
sbb
mov
pop
mov
out
jp
std
push
fisttpll
insb
push
adc
movsb
dec
jb
rorb
gs
dec
clc
sub
lods
repz
push
push
adc
into
negl
xor
xchg
cli
cmp
or
and
xor
add
sbbb
imul
into
jge
dec
mov
mov
add
sub
mov
xchg
dec
daa
enter
inc
gs
inc
xchg
cli
dec
lds
fsubrs
clc
inc
jge
xchg
loope
xor
fisubl
enter
sbb
xchg
pop
xor
mov
push
or
movsl
dec
pop
jmp
dec
mov
lds
lock
pop
mov
jge
add
ds
or
adc
sti
std
aam
pop
and
dec
das
fistpll
mov
mov
outsl
int3
mov
cwtl
addl
ds
xchg
adc
je
arpl
out
iret
cld
push
popf
repnz
lods
add
sub
push
xchg
test
xchg
loopne
aam
mov
mov
cwtl
insb
enter
inc
fmul
xchg
fcompl
ds
inc
ja
mov
dec
or
in
mov
les
sub
addb
or
fsubl
mov
or
xchg
push
mov
fsubrs
push
xor
xchg
mov
mov
dec
in
mov
mov
add
imul
xchg
mov
aad
std
pop
inc
out
lahf
filds
loope
add
sbb
adc
aas
iret
jae
jmp
push
push
rclb
mov
fbld
mov
test
dec
cld
pop
push
mov
subl
dec
add
pcmpeqb
xchg
mov
testl
xor
push
es
fsubs
push
loop
push
nop
scas
icebp
enter
push
inc
ret
jae
out
loopne
leave
aam
adc
mov
jo
hlt
in
adc
data16
mov
or
stc
popf
jb
xchg
pusha
lret
jp
and
mov
mov
pop
pop
push
xchg
and
loopne
sbb
dec
adc
mov
sti
xchg
xchg
mov
xchg
jns
or
shll
inc
mov
push
loope
mov
sti
adc
lret
cmp
das
dec
fs
pushf
push
add
mov
dec
out
rep
xchg
jmp
cli
sarb
in
sbb
mov
lea
insl
movsl
std
xor
subb
hlt
divl
mov
into
out
jp
cmp
or
or
mov
cld
js
in
nop
stos
sbb
addb
cmpsl
aad
inc
scas
adc
jge
nopl
movsl
jne
rcl
xor
or
or
inc
jg
movsl
shrb
insl
pop
aaa
cmpsl
ret
lock
ficoml
not
add
inc
push
mov
popf
push
rcll
ds
xor
mov
iret
or
int
pop
xor
fidivs
pop
dec
call
adc
cwtl
enter
ja
mov
ljmp
imul
pusha
test
hlt
mov
add
and
aas
stos
enter
sarl
dec
leave
push
xchg
lock
fs
xchg
jns
or
pop
in
out
aas
mov
inc
mov
sub
clc
dec
call
sub
jl
add
lea
gs
icebp
mov
mov
or
pop
jbe
cmc
rorl
adc
cmp
xchg
movsl
push
stc
gs
add
popf
adc
sbb
or
xchg
loopne
sbb
push
pop
lock
mov
test
inc
and
or
shlb
add
pop
ljmp
test
stos
test
call
std
js
add
out
ret
cmpb
fidivrl
mov
cmp
sub
push
sub
cmp
push
sub
outsl
pop
jl
fcmovbe
pushf
testl
mov
enter
popl
cmc
cltd
xchg
pusha
shlb
es
cmpsb
std
cmp
pop
inc
and
push
cmp
mov
ret
xchg
inc
out
lcall
sub
incb
sbb
std
mov
sarl
add
inc
pop
mov
hlt
out
scas
jmp
xchg
outsb
hlt
popf
xor
jmp
mov
sub
push
pop
jno
or
and
mov
scas
hlt
sbb
cmc
xor
add
ljmp
in
outsb
xchg
clc
add
in
sub
mov
lcall
pop
pop
mov
and
jno
pop
adc
idivb
ds
adc
shrb
or
sub
pop
sub
xchg
dec
inc
aaa
stos
insb
out
pop
or
loope
pop
icebp
dec
adc
sarl
sub
inc
adc
add
movsl
push
dec
orl
ss
scas
lret
insl
mov
movb
lret
inc
dec
mov
pop
pop
movsl
cmp
or
sub
cltd
mov
mov
dec
sarl
add
pusha
pushl
enter
std
inc
iret
adc
xchg
loope
aaa
fsts
ss
pusha
xchg
outsl
ja
loop
aas
lret
cwtl
adc
dec
enter
ljmp
dec
pop
pushf
xchg
dec
xor
and
icebp
loope
rclb
loope
and
mov
imul
or
sbb
jbe
and
push
or
mov
dec
popf
mulps
out
sub
pop
lcall
pop
dec
movsb
jle
mov
jmp
movsl
push
xor
repz
shl
nop
out
std
int
mov
test
notb
ret
cmp
leave
and
xor
jns
out
stos
mov
dec
lods
and
ljmp
pop
loopne
cmp
negl
jmp
adc
mov
mov
cltd
inc
xor
inc
or
lods
test
stos
xor
jno
std
loop
xlat
out
adc
jp
imul
fimuls
sti
rorl
jmp
dec
insl
xor
fistpll
imul
push
dec
push
loope
stos
mov
in
jo
mov
out
cmp
jge
sarb
jo
cld
mov
scas
dec
arpl
add
aas
mov
mov
sbb
jbe
jl
js
inc
mov
iret
mov
mov
pop
jo
loopne
fwait
xchg
sti
mov
jno
std
adc
push
mov
into
push
add
fstpl
mov
cmc
mov
sbbb
inc
sahf
inc
stc
mov
pop
jnp
int
iret
cwtl
add
dec
aad
push
jmp
xor
cmp
mov
imull
cli
cmp
mov
pop
pusha
fiadds
jecxz
in
ds
jb
leave
jg
shl
adc
push
addr16
dec
mov
or
add
jge
xor
jecxz
cmp
mov
and
lea
dec
inc
scas
fs
adc
ucomiss
sbb
mov
sbb
sbb
xor
stos
inc
mov
data16
pop
cltd
mov
fstpt
sbb
lods
ljmp
xor
adc
cs
les
aam
sub
loopne
jns
stos
sbb
jno
add
and
js
shlb
push
mov
setge
jno
cmpl
mov
out
cmp
enter
sbb
cmpsb
mov
add
adc
mov
mov
stos
sti
int
dec
movsb
test
jbe
mov
negl
lcall
lods
inc
scas
jae
adc
push
mov
imul
outsb
inc
shl
jne
and
bound
pop
mov
mov
mull
and
or
pop
sarb
xchg
and
addb
or
mov
or
cmp
ja
xchg
pop
sbb
pushf
and
dec
out
xchg
cmp
fstl
fisubs
out
test
sbb
sub
neg
pop
mov
test
std
push
inc
je
xlat
jb
ljmp
push
dec
cmc
stc
add
outsl
sbb
fs
shlb
pop
cmc
ret
lahf
jb
ficompl
out
out
jp
add
xchg
cmp
out
and
and
test
rclb
inc
into
nop
loopne
and
loopne
loopne
negl
xor
jno,pt
ret
nop
push
adc
lret
mov
jg
rcl
jmp
xor
pop
lahf
mov
imul
std
call
idiv
in
arpl
cltd
sbb
mov
inc
inc
neg
popa
jle
dec
sub
sub
pushf
push
lret
js
mov
rcrb
inc
bound
insl
fyl2x
movsl
push
out
ja
mov
pop
subl
mov
divl
jns
mov
xchg
in
jl
divb
pop
insb
out
idivl
xor
lcall
dec
lock
xor
pop
mov
lsl
jo
sbb
mov
xchg
cmpsl
adc
scas
orl
fnstcw
push
aam
stos
mov
js
pop
jns
lock
dec
into
inc
cmp
mov
mov
push
pop
out
sub
jecxz
call
dec
inc
shrb
cmp
pusha
mov
arpl
or
xchg
push
xchg
mov
cmp
pop
in
outsb
cwtl
nop
adc
stos
mov
add
jl
and
rcr
dec
xchg
arpl
int3
lahf
fisttps
idivb
mov
or
fldl
sbb
mov
loop
add
aaa
inc
test
dec
negb
fistpl
bound
ja
cli
or
or
icebp
pop
push
mov
adc
pop
cmp
push
and
loopne
xor
mov
pop
dec
fsub
dec
push
sbb
hlt
xchg
repnz
clc
cmp
inc
ds
dec
jnp
js
jl
pop
fists
hlt
mov
jp
pop
sub
push
in
les
dec
adc
ss
ja
mov
enter
outsl
and
std
loopne
xchg
stos
xor
aad
mov
mov
cld
nop
mov
aaa
or
push
in
aam
inc
aaa
shlb
and
in
pop
stc
fs
jo
push
inc
jmp
mov
jae
test
testl
sub
inc
mov
push
pushf
popa
lcall
xchg
imul
divl
xchg
mov
in
jmp
push
pop
test
dec
lahf
cmp
inc
add
int3
mov
adc
mov
outsb
jb
stos
mov
cmp
pop
pop
inc
push
loope
popf
cmpsb
pop
jg
mov
push
cwtl
cmpsl
mov
cmp
mov
push
inc
dec
and
mov
jae
je
xor
xor
jmp
dec
or
jb
lods
pushf
lret
pop
sbb
fistl
test
dec
adc
in
rolb
bound
push
xchg
sar
ret
fwait
and
push
or
in
lods
push
andb
repnz
add
xlat
sti
dec
add
pop
add
xchg
es
mov
out
mov
add
loop
incb
dec
jle
mov
push
adc
test
clc
xchg
pop
dec
ljmp
push
inc
in
mov
xchg
movsl
sub
pop
and
inc
adc
movsb
mov
xor
xchg
mov
dec
repz
loop
add
xchg
sub
inc
inc
andb
mov
sbb
mov
lret
mov
stos
inc
aas
popf
adc
faddl
sti
gs
add
dec
mov
js
sbbb
push
cmp
mov
inc
test
fcmovu
in
pusha
int3
xchg
fwait
mov
inc
xchg
adc
cmpsb
or
mov
inc
.byte
stos
stos
test
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
inc
mov
sbb
insb
mov
mov
js
mov
jne
mov
add
pusha
and
repnz
jb
jmp
inc
fmuls
int
adc
add
stos
call
sub
mov
cmpsb
mov
mov
jb
mov
xchg
sti
out
pop
jl
inc
sbb
mov
les
es
shlb
cmpsl
int
ljmp
sub
sbb
nop
gs
xchg
fs
cwtl
lea
mov
lods
ljmp
dec
in
sub
dec
jne
push
daa
or
adc
js
cld
ljmp
and
adc
mov
int
gs
mov
mov
rolb
mov
popa
mov
inc
or
dec
mov
sub
in
mov
or
mov
mov
test
sub
mov
xor
inc
repnz
hlt
mov
stc
outsl
and
jnp
pop
mov
sub
jns
push
lea
xor
mov
inc
and
xor
insb
cmpsl
icebp
out
or
and
jb
aad
cld
mov
lods
and
sbb
insl
pop
jp
cli
fcmovbe
repnz
cmp
lds
xchg
cmpsl
adc
nop
addr16
and
mov
vmread
inc
inc
in
das
movb
cmc
xchg
mov
and
jl
cwtl
and
lods
mov
adc
cmp
out
test
jno
pop
add
test
add
jo
out
inc
lahf
jbe
fdivl
cmpsb
mov
or
xor
ret
out
sbb
cmp
data16
out
int
lock
sub
in
fidivs
jo
popa
sub
imul
lds
mov
xchg
push
hlt
decl
inc
jae
xchg
daa
cmc
push
dec
das
cmp
fstps
sbb
in
sbbb
and
pop
add
shrl
xor
pop
mov
mov
fs
cmc
cmpsb
fisubs
sub
xor
dec
xchg
imul
arpl
mov
mov
call
test
dec
adc
jno
jno
rcll
shll
mov
mov
or
decl
int3
cmpsb
mov
adc
mov
cltd
lods
rcl
cmp
mov
aad
adcl
pop
cmpsb
sbb
mov
pop
fninit
imul
lret
fndisi(8087
push
and
rol
fildl
jbe
aas
dec
aam
inc
dec
push
gs
pop
call
sub
les
or
xchg
ret
inc
jmp
push
fmull
pop
scas
adc
insb
sub
dec
jge
jno
sbb
fwait
test
leave
mov
loop
and
mov
jne
or
mov
dec
int3
add
lea
inc
mov
popa
mov
movb
lahf
dec
insb
in
sub
mov
sti
int
mov
adc
aas
push
mov
inc
test
xor
popf
jo
or
xor
movsl
add
fiadds
jecxz
and
popa
mov
jbe
jmp
stos
pop
mov
jecxz
mov
int3
scas
loopne
jae
pop
pusha
std
aaa
inc
sbb
jo
push
sahf
out
cli
aaa
dec
les
mov
add
pop
and
into
cs
mov
lea
cld
cmpsl
in
pop
mov
jo
ss
mov
inc
or
adc
aas
cld
jnp
dec
sbb
mov
jae
cmp
out
lahf
mov
in
cs
jge
or
test
adc
dec
fidivs
push
das
mov
mov
push
cmp
and
aas
movsb
adc
mov
repnz
divl
mov
test
int3
add
rorl
out
fsubrs
fisubs
xor
popf
loop
mov
gs
orl
lret
jmp
sub
mov
and
lock
mov
das
out
sub
ret
jl
xor
loop
push
dec
stc
cmp
idivb
lret
sbb
cs
ja
xchg
hlt
inc
mov
mov
mull
shr
lret
inc
push
xor
rcrb
xchg
pushf
out
mov
sarb
dec
mov
and
add
pop
jecxz
adc
mov
push
in
lret
fs
test
ja
lret
add
push
sbb
jecxz
push
adc
movsb
sub
xchg
mov
shlb
dec
data16
leave
es
popa
cmp
sbb
push
mov
mov
cmp
scas
dec
out
xchg
nop
cmp
gs
ret
xlat
inc
xor
out
xchg
pop
clc
inc
add
mov
add
jge
popf
rcll
add
jo
dec
mov
inc
adc
stos
not
flds
or
push
fdivrl
rclb
fisubs
fucomp
pushf
pop
hlt
and
pusha
addr16
xchg
pop
sub
sbb
sahf
fdivr
dec
cmpb
outsb
popa
stos
and
lods
adc
adc
std
lret
or
add
bound
cmp
cmpsl
in
sahf
repnz
mov
aaa
mov
cmp
outsl
inc
ficompl
cmpsb
xchg
in
mov
push
lods
mov
stos
test
ds
std
push
out
in
popa
mov
inc
mov
inc
imul
loop
xchg
or
add
cltd
xchg
sbb
jmp
add
pop
push
jg
adc
aas
orl
dec
int3
pushf
inc
add
sbb
out
or
mov
das
inc
jne
test
and
jae
add
lcall
hlt
gs
inc
rcll
dec
imul
aaa
sbb
xchg
cmp
es
imul
call
push
cmp
std
and
jo
add
pop
xchg
cmp
push
ret
data16
out
push
sub
inc
pop
jle
in
inc
mov
mov
loop
jecxz
xchg
stc
jae
pushw
gs
xchg
mov
pop
sbb
jl
stc
add
shrb
or
sti
stos
add
mov
int
arpl
imul
cmpsb
mull
and
js
aad
add
test
mov
ljmp
xchg
mov
es
cmp
call
scas
popf
bound
adc
push
and
jne
pop
or
test
dec
fcomps
cmc
lret
push
fbstp
insl
xchg
inc
lods
cmc
inc
outsl
lods
sub
jno
push
std
xchg
jecxz
mov
mov
lds
add
out
adc
pushf
sub
push
ficompl
enter
adc
int
mov
cmpsl
arpl
sub
je
cld
ss
jns
push
mov
ds
sub
pop
mov
jo
xchg
leave
mov
xchg
jge,pn
scas
jg
inc
sar
mov
out
cmpsl
or
sbb
les
jp
fisttpl
cld
or
push
sub
pushf
sub
mov
hlt
test
adc
push
imul
dec
inc
adc
shlb
fstpl
adc
insb
push
adc
xchg
cmove
jmp
imul
loopne
cmp
xlat
ds
mov
adc
dec
dec
xchg
dec
push
and
pop
or
pop
adc
xor
inc
sarl
in
sbb
cmpsb
fdiv
sbb
inc
pushf
push
add
inc
fistpll
push
lret
roll
and
loop
ret
add
out
pop
mov
hlt
xor
pop
jno
out
push
fcmove
pop
loopne
xchg
jne
add
lds
mov
outsl
pop
push
aas
or
or
mov
cmpb
scas
icebp
imul
pop
adcb
ja
nop
out
rorb
or
xchg
rorb
mov
xchg
dec
sar
dec
push
adc
inc
pop
pop
mov
inc
or
add
adc
mov
sbb
or
xor
xlat
mov
int
add
mul
mov
movsb
push
imul
adc
mov
add
xor
in
mov
fwait
and
ret
aaa
jle
gs
les
push
aam
or
out
jns
xchg
pop
stos
mov
and
jle
adc
loop
dec
divb
lret
xor
test
xchg
in
das
and
xchg
fsubs
test
inc
push
ret
mov
shlb
les
pop
dec
sahf
mov
popf
mov
mov
paddd
jge
cmp
push
ljmp
cmp
cwtl
aad
fs
cmp
insb
xchg
popa
aaa
mov
sub
or
scas
dec
lret
xor
pop
and
test
add
aaa
test
sub
sub
cmp
out
dec
mov
loope
iret
in
lods
add
push
xchg
sub
iret
push
mov
call
mov
jecxz
xor
mov
and
hlt
push
test
or
mov
xor
imul
xor
adc
fmuls
adc
popf
cmp
cld
pop
fidivrl
adc
loope
pop
or
dec
sbb
jg
mov
push
pushf
push
cmp
add
call
mov
fildl
int3
adc
fldl
push
sti
imul
jge
dec
jge
and
rcll
push
addb
mov
pop
mov
xchg
mov
xchg
cld
bound
cmp
lahf
jg
or
aam
push
repz
push
leave
out
rdpmc
test
push
dec
shl
and
mov
ja
adc
and
imul
mov
decl
loopne
sbb
aam
or
xchg
inc
imul
je
adc
aam
jbe
inc
dec
aaa
mov
lods
dec
inc
test
mov
scas
adc
xchg
fcompl
xor
adc
ja
jle
add
push
add
cmp
cmpl
arpl
mov
lahf
inc
fsubr
push
mov
or
xor
cld
dec
ret
test
inc
das
sahf
xor
ds
xchg
mov
cmp
movsl
xchg
lds
xchg
adc
jl
mov
mov
subb
pushf
fdivrs
jnp
adc
inc
adc
xor
push
imul
inc
cmp
sbb
fimull
mov
sub
mov
test
jnp
insl
sub
inc
outsb
aad
adc
scas
mov
pop
ds
movsl
loop
and
pop
jns
jne
pop
fldenv
aas
mov
fstl
adc
jg
add
xchg
cmc
jp
fimull
xchg
adc
fsubp
cmc
push
jecxz
pop
xchg
mov
imul
sub
cwtl
sbb
arpl
mov
stos
jg
int3
mov
pop
mull
xchg
jmp
sti
dec
add
sub
jno
add
add
mov
stos
inc
push
pushf
adc
cld
cwtl
add
ja
loop
push
ficomps
aad
or
loopne
or
xor
cmpsb
stos
loopne
jns
shlb
dec
jecxz
push
cli
call
mov
cmp
daa
into
mov
add
cs
lds
add
jbe
mov
lcall
sbb
test
mov
xor
adc
inc
int
adc
pop
mov
push
mov
cmp
insl
add
xchg
cmp
sub
dec
scas
cmp
sub
scas
pop
xor
test
add
mov
sbb
pop
sbb
repz
ret
popa
mov
fsubrs
outsb
aas
sub
add
dec
in
inc
mov
pop
inc
loope
add
push
ja
mov
shll
push
xchg
and
cmp
jp
mov
cmp
fcoml
adc
push
dec
inc
cmp
jne
dec
arpl
add
lret
ja
sti
pop
pushf
repnz
inc
inc
out
mov
jb
ja
mov
mov
xchg
xor
push
inc
xchg
mov
arpl
mov
cs
or
and
dec
ljmp
insl
mov
sti
out
idiv
loope
lds
fsubl
push
add
pop
movsl
rorb
in
outsb
adc
dec
cltd
push
mov
push
sbb
pop
mov
xor
out
fimuls
cmp
dec
dec
add
cltd
shlb
cmp
push
dec
sti
mov
inc
inc
mov
push
and
int
pop
push
pop
jecxz
cmc
pop
pop
mov
mov
pushf
xchg
mov
jp
mov
jecxz
scas
loop
mov
ret
in
push
push
inc
stc
outsl
xchg
sub
pop
pusha
repz
adc
fst
or
sub
mov
aad
stos
jecxz
add
lcall
mov
adc
add
push
cs
test
pop
xchg
sbb
pop
push
xchg
fcmovnbe
mull
clc
rorl
in
sahf
in
insb
mov
test
dec
xchg
push
sti
cltd
push
pop
popf
mov
mov
ficoms
dec
inc
mov
aad
imul
or
imul
js
xchg
cltd
insl
push
das
pop
stc
iret
popl
fiadds
jl
les
sub
push
notl
nop
js
leave
ss
lcall
inc
lock
int
jmp
dec
adc
cli
pop
ja
pop
push
push
inc
xchg
xor
popa
mov
push
fisttpl
push
sbb
inc
inc
outsb
jno
pextrw
xchg
hlt
stos
pusha
jnp
inc
cli
addl
xchg
or
dec
out
cmp
fcomps
mov
mov
stos
sar
sbb
jl
jno
stos
jp
mov
flds
xorl
inc
dec
fsubrl
adc
push
push
xchg
mov
pop
andl
popf
pop
push
xchg
rclb
jne
lcall
mov
cmp
cmp
inc
sub
ror
popf
mov
call
mov
jmp
mov
mov
out
cmp
in
cmp
inc
dec
inc
inc
lcall
cs
and
testb
push
mov
adc
pop
in
sub
loop
mov
adc
mov
xchg
lods
std
dec
sub
mov
or
adc
jp
pop
jecxz
aaa
fsubl
push
dec
sbb
mov
add
js
test
push
mov
popf
push
mov
push
mov
xor
fwait
aas
inc
mov
aam
fcomps
mov
test
inc
rcl
ljmp
push
mov
mov
ss
fcomip
aaa
inc
cmp
mov
adc
mov
and
cwtl
call
data16
sti
sbb
cmp
into
data16
xor
lods
cmp
movsb
push
mov
lahf
jb
clc
mov
mov
das
pcmpeqw
adc
sbbb
lea
mov
movsl
mov
clc
push
sub
dec
inc
mov
in
js
pop
out
push
cmc
sbb
fmul
loopne
mov
js
lock
xor
inc
loopne
push
push
cli
xchg
int
aaa
popa
mov
fdivrs
lret
movl
iret
push
cmp
dec
addr16
cmpsb
jbe,pn
mov
mov
adc
push
xchg
pop
test
lock
pop
sbb
jge
mov
rorl
push
mov
mov
imul
push
jae
mov
sbb
push
in
push
scas
les
push
insb
into
xchg
gs
mov
arpl
mov
sbb
push
or
pop
add
sbb
daa
mov
fdiv
nop
inc
xchg
mov
add
xor
jle
xor
jecxz
jo
lds
repz
lock
loop
mov
in
sub
outsl
pop
psubb
push
rorb
sbbl
pop
mov
popa
xlat
mov
out
jno
adc
mov
sub
out
or
sbb
cltd
repnz
cwtl
mov
loope
pop
fstpt
jg
inc
pop
popf
arpl
stc
dec
in
inc
mov
inc
aad
or
idiv
outsb
or
pop
push
fs
push
mov
or
mov
loopne
push
sub
js
and
xchg
imul
jmp
dec
cs
fs
pop
dec
adc
sti
cmpl
clc
adc
sarl
xor
jae
adc
add
sbb
xchg
ret
cmp
scas
les
out
or
and
and
mov
in
movsl
call
sub
fdivrs
and
lahf
cld
push
ficoml
int
lahf
cmp
movsl
test
xlat
or
ffree
jmp
mov
in
loope
ljmp
shrb
inc
dec
sbb
inc
lea
adc
jp
jge
std
and
add
add
or
push
cltd
xor
xchg
and
xchg
sbb
inc
xchg
mov
iret
gs
push
into
movsl
xchg
mov
shll
jge
cwtl
and
jbe
sub
fisubrl
test
mov
push
add
and
mov
hlt
xorb
inc
fildl
fwait
sub
pop
or
das
shll
dec
movsl
idivb
and
mov
fsts
fisubs
push
rcrb
js
mov
sbb
sub
jmp
add
lret
hlt
xchg
in
cmpsb
notb
lock
jl
push
and
and
mov
inc
mov
inc
add
daa
cmp
js
sbb
and
loopw
movsl
arpl
sbbl
xchg
mov
sub
fwait
mov
and
ds
subb
sbb
cmp
xor
notb
adc
addr16
mov
cltd
mov
mov
push
sub
cmp
mov
in
out
adcl
lret
ss
dec
idiv
andb
rcl
aaa
xchg
pop
in
mov
int
jnp
je
rclb
jg
add
dec
dec
pusha
xchg
mov
pop
out
imul
push
lods
jns
dec
mov
fdivl
aaa
jp
jmp
ret
getsec
fisttpll
cmpsl
inc
test
push
ljmp
cmp
mov
sub
push
pushf
sub
or
ret
jecxz
jle
lret
add
push
xor
xor
or
pusha
inc
adc
push
jl
enter
test
daa
pop
aas
adc
xor
lock
inc
movl
add
int3
mov
lods
lret
pop
dec
or
dec
in
data16
ja
xor
lcall
dec
lret
pop
sub
cmc
clc
bnd
mov
sahf
cmc
xor
ds
hlt
leave
dec
stos
in
test
mov
nop
imul
aas
pop
imul
xor
adcl
rorl
mov
test
int3
lods
sub
pop
adc
mov
in
dec
xchg
repnz
sbb
cli
inc
leave
pop
xchg
dec
jns
xor
mov
adc
imull
xor
xchg
loopne
enter
test
inc
pop
stc
aad
data16
mov
sti
mov
pop
ret
push
popa
aad
xchg
push
push
lcall
pusha
fnstsw
scas
cmp
test
outsl
xchg
mov
mov
adc
mull
scas
xor
ret
push
sbb
in
dec
xor
pop
arpl
fistpl
out
xlat
jae
xor
jnp
sbb
fdivrl
and
sbb
imul
jl
sub
add
ja
inc
jno
dec
mov
mov
push
pop
fs
inc
adc
dec
sbb
out
sbbl
or
out
jp
mov
das
loopne
push
and
sbb
mov
in
mov
cld
dec
add
and
movsb
push
xchg
or
ljmp
cwtl
or
adc
inc
sub
cli
jb
lock
div
and
pop
push
mov
lcall
fcom
push
out
stos
sti
xor
cmpl
pop
jg
lods
mov
pop
in
sub
xor
sbbl
lock
inc
std
nop
inc
dec
lret
aaa
jp
sbb
arpl
xor
jns
in
sub
cs
stos
sub
add
xchg
xor
arpl
ss
scas
mov
outsl
jno
cmp
pushf
jg
or
or
pop
fisubrl
xchg
mov
push
aad
lret
xor
add
rcrb
cmp
adc
insl
push
ret
sub
xchg
mov
ss
sub
push
xchg
out
dec
ss
loope
xlat
cs
jo
das
test
cmp
ret
lds
mov
xchg
lods
xchg
xorps
jns
cmpsb
fnsave
xorb
jle
mov
cmp
push
lds
add
out
mov
xchg
aas
lock
add
loope
int
xor
cmp
jmp
pushf
dec
add
adc
jle
in
cmp
and
ret
xchg
and
icebp
lret
lcall
ja
and
push
addl
test
push
jp
sahf
mov
stos
imul
lods
arpl
push
cld
pop
rcr
pushf
jnp
xor
jle
inc
pop
fcmovnb
and
ret
data16
mov
dec
mov
add
xchg
lahf
out
and
jmp
or
lcall
fisubs
out
cmp
outsb
ljmp
dec
negl
imul
cmpsl
in
loope
mov
xor
sbb
scas
mov
sar
cmp
push
aaa
dec
add
pop
mov
shrb
bound
int3
lret
pop
mov
jecxz
jno
fnstenv
aad
in
adc
xchg
adc
sub
in
jnp
adc
push
fisubrl
mov
mov
lock
inc
loopne
cmp
fnsave
arpl
dec
int3
sbb
mov
insl
out
cltd
jne
xchg
sub
mov
out
outsb
mov
imul
cltd
fsubrs
mov
int
icebp
repnz
test
and
int3
pop
xor
out
sbb
mov
addr16
inc
jbe
cmp
rcrl
das
icebp
cmp
xor
int
mov
jae
sti
mov
fistpl
sbb
or
sbb
or
lret
sarb
sub
popf
add
jbe
adc
push
cmp
jns
movsb
repnz
push
inc
jbe
iret
stc
icebp
jmp
or
gs
outsb
pop
xchg
test
sbb
lods
pextrw
in
push
sbb
mov
dec
inc
xchg
jmp
aaa
mov
inc
imul
aas
pop
sub
ljmp
add
loop
pushf
out
je
lock
addb
pop
loop
xchg
cs
fcompl
into
push
cmp
inc
adc
fcomps
std
and
ja
push
mov
shlb
push
pop
fiadds
insl
dec
out
mov
xchg
pop
push
imul
ficoms
sub
cs
mov
jb
xchg
mov
cmp
mov
sub
mov
xchg
push
popa
lahf
insl
bound
adc
pop
ret
jns
adc
mov
add
xchg
rcll
insb
test
icebp
enter
xlat
shll
and
mov
stos
call
mov
dec
cld
nop
pop
cmpb
je
mov
popa
sub
xchg
push
es
int3
insb
mov
or
mov
stos
push
lock
ljmp
adc
dec
dec
sbb
jo
sbb
outsb
lret
jno
dec
popa
outsl
jne
mov
or
xchg
stc
mov
mov
ljmp
jb
outsl
sub
icebp
fimuls
add
pop
das
push
movsl
xor
push
jne
aas
addl
mov
scas
xlat
mov
jns
leave
jle
mov
cmp
and
cmp
mov
movsb
clc
icebp
fcomip
hlt
lret
adc
imul
inc
rcll
mov
pusha
in
mov
int3
popf
orb
decl
not
mov
cmp
js
loopne
mov
dec
xchg
aaa
pop
mov
fwait
pusha
inc
pushf
xchg
gs
pop
aas
xor
jp
cmp
sbb
push
into
add
pop
insl
and
or
popf
pop
in
push
pop
mulb
push
sahf
and
js
sbb
ja
sar
xbegin
out
fisubs
imul
scas
insl
dec
out
insb
shr
es
inc
out
pusha
sub
mov
rep
mov
lcall
arpl
rorl
divl
int
add
outsb
mov
jae
clc
lret
jmp
shlb
and
lods
or
mov
lods
push
ds
outsb
test
jecxz
mov
shr
pushf
dec
mov
or
cli
lcall
jmp
and
loope
xchg
test
stos
loop
ret
fldln2
cmp
pop
lods
mov
inc
sub
ret
fprem1
mov
mov
mov
jb
adc
push
pop
pop
les
fcmovnu
pop
sbb
and
xor
jnp
loopne
aas
mov
shll
push
sti
xchg
inc
fs
pushf
or
dec
sub
push
push
jge
pushf
sbb
ss
lahf
push
adc
int
mov
insb
imull
add
rolb
loop
fildl
xchg
hlt
or
out
dec
adc
dec
xchg
enter
jl
imul
in
cmp
push
mov
push
xchg
sbb
pop
pop
jnp
push
in
nop
mov
sbb
in
gs
add
or
loopne
mov
sub
mov
push
sbb
adc
dec
cmpsl
mov
push
push
divl
pop
pop
lock
adc
adc
xchg
mov
push
xchg
cmp
arpl
inc
push
daa
clc
into
out
fsubrs
add
mov
adc
xorb
out
scas
cwtl
sarb
aas
outsl
mov
daa
clc
cmp
call
cli
xchg
repz
lea
out
addr16
dec
movsl
pop
mov
xchg
dec
sub
adc
jae
pop
aam
add
fwait
sub
aaa
in
inc
jl
std
in
adc
mov
push
and
mov
push
sbb
into
pusha
mov
pop
jl
rclb
dec
daa
repnz
xchg
sub
movl
sbb
divb
adc
stos
pop
xorl
lahf
dec
jg
loopne
hlt
lds
inc
push
ret
fisubs
test
sub
lcall
cmpsb
mov
mov
lock
sahf
stc
sub
fidivl
out
fldenv
or
cmc
jge
sbb
cld
jecxz
cmp
out
mov
cmc
popa
int
ds
cmpsl
shll
outsl
push
lret
jnp
sbb
add
jp
icebp
lret
dec
ljmp
lock
dec
pop
scas
xor
dec
popf
push
inc
add
add
sub
push
jle
fmulp
out
jae
bound
push
loopne
imul
pop
add
xchg
pop
xchg
push
hlt
leave
xchg
mov
mov
mov
dec
jecxz
bound
jp
test
mov
icebp
pop
xor
and
mov
sub
lods
popf
inc
mov
sbb
dec
shrl
repz
cmp
push
subb
inc
inc
fsubrs
lods
pop
outsl
das
shll
outsl
mov
pop
into
gs
lock
xchg
enter
lret
inc
push
add
cli
push
fbstp
imul
pop
mov
fidivrl
mov
sub
mov
rclb
fisubs
push
cmp
mov
pop
scas
insl
xor
ret
jmp
push
mov
mov
inc
push
cmp
mov
sar
fbstp
add
inc
push
inc
sub
push
pusha
mov
or
xchg
sarb
das
jnp
adc
xchg
dec
add
loop
lock
cld
and
js
out
mov
xchg
xor
fimuls
insb
or
fwait
push
ja
pop
dec
leave
pop
bnd
iret
rol
outsb
pop
decl
leave
jns
adc
scas
rcll
dec
xor
pop
mov
or
test
or
add
fisubl
pop
ljmp
stc
xchg
xchg
sbb
hlt
xchg
lret
cmc
btr
pushw
cld
lahf
ss
out
lar
jbe
test
ljmp
out
inc
dec
test
nop
nop
sahf
adc
and
dec
push
jmp
fadds
jl
push
pop
inc
jb
ljmp
jle
cld
jle
lcall
adc
rclb
pop
and
sub
jl
sbb
lahf
xchg
xor
out
iret
in
xchg
xchg
jmp
pop
decl
loop,pn
mov
ds
ja
mov
adc
jno
loop
movsb
inc
xchg
xor
inc
push
mov
push
xor
loopne
xchg
inc
sub
or
or
add
sbbb
out
sarb
jg
push
lret
inc
popa
pop
lds
mul
cmp
sbb
rcrl
add
cmp
orb
ljmp
aam
or
inc
add
push
fmuls
rcr
out
fmul
lret
jecxz
mov
ds
mov
mov
add
into
jg
fwait
fs
outsl
stos
sarl
es
pop
fwait
cmp
out
scas
xor
inc
cmpsl
cmpl
xchg
adc
and
dec
aam
sarb
cmpsb
fstpt
mov
add
cmp
sarb
stc
add
inc
imul
out
sbb
fstpt
idiv
cmpsl
lret
mov
fwait
insl
push
ja
sub
sbbb
sub
sub
inc
jmp
mov
rorl
lea
cmpxchg
es
xchg
sub
pop
xor
fisubrs
mov
and
xor
mov
push
jmp
dec
mov
ja
test
mov
pop
and
sub
inc
lret
jnp
out
int3
ljmp
xchg
iret
enter
lock
dec
lock
lret
in
jne
xor
insl
mov
mov
cmp
into
mov
rorl
negl
faddl
push
xchg
xlat
cs
incl
xor
cwtl
test
jae
pop
add
mov
mov
mov
mov
cmpsl
cwtl
arpl
shlb
out
cli
jp
pop
scas
mov
jl
ret
push
addr16
sbb
push
rcl
pop
add
fildll
imul
and
push
into
push
pushl
fwait
mov
outsl
testb
in
xchg
jmp
dec
mov
hlt
adc
mov
or
sbb
pop
orl
jg
loop,pt
fdivl
lods
sbb
xor
stos
jo
faddp
repz
jo
test
fcomps
test
dec
rorb
xchg
icebp
ficompl
sub
mov
ja
dec
lods
sub
mov
jnp
push
movsl
call
or
mov
sub
sarb
dec
sub
jg
mov
out
lret
jle
jns
nop
sbb
in
or
pop
add
cld
jmp
rorb
jno
jns
xchg
sub
xor
pop
outsb
cwtl
fwait
or
xor
data16
sub
xchg
outsb
cmp
lods
jg
repnz
outsl
push
mov
push
jo
adc
xchg
call
jo
or
dec
testl
mov
lret
inc
mov
outsb
out
insb
adcb
mov
popa
xchg
insb
roll
or
cmp
subl
mov
or
or
repnz
test
andb
mov
pop
andb
aam
sub
push
imul
or
push
fldcw
stc
xor
push
mov
repnz
cmovae
xlat
jecxz
mov
cmp
inc
cmp
or
dec
inc
sub
loopne
sub
aas
inc
xor
fstpl
cmpsl
inc
mov
test
aam
scas
mov
inc
iret
in
lret
and
xor
lods
fbld
stc
sbb
xor
stos
rcrl
lods
mov
sbb
aad
test
xor
pop
into
shlb
sbb
adc
cmp
nop
mov
out
push
ret
cmp
xchg
jecxz
filds
mov
inc
dec
fadds
sti
pop
aaa
mov
loope
ret
mov
das
insb
fmul
repnz
mov
xchg
std
jbe,pn
mov
xchg
push
or
push
jns
add
inc
fistl
or
or
push
scas
std
sahf
add
insl
mov
jns
adc
imul
xchg
sub
mov
in
pop
enter
cmc
ret
or
mov
ss
push
push
xor
in
xchg
jbe
jb
addb
aaa
and
pop
fimull
mov
add
adc
sti
push
and
inc
jg
jb
ficoml
ret
popf
addr16
scas
pop
andl
popa
and
imulb
jl
push
and
dec
jge
enter
bound
mov
xor
test
add
add
or
shl
pop
add
push
xor
push
and
lret
mov
out
outsl
dec
into
mov
push
test
mov
jmp
and
push
cltd
jle
fucomp
out
lea
sub
out
add
lret
test
testl
xchg
xchg
push
aad
inc
add
rclb
jnp
add
mov
or
jno
lret
mov
scas
xor
pop
jns
test
sahf
bound
dec
xchg
jno
es
mov
fs
xor
mov
or
imul
xor
fmulp
imul
mov
dec
mov
das
ja
enter
std
movsl
cmp
add
mov
xorl
lea
mov
inc
dec
mov
gs
int3
dec
xor
xchg
decl
pop
gs
sbb
and
daa
dec
jmp
insl
arpl
pop
and
jne
push
hlt
sbb
mov
hlt
stos
movsl
inc
jb
test
aad
mov
fnstenv
imul
xchg
stos
faddl
repz
jge
add
adc
xchg
mov
fwait
cmp
hlt
ret
insb
sbb
inc
mov
test
daa
and
pop
pop
fists
mov
add
add
pop
cld
add
sub
push
mov
rcrb
add
stc
test
mov
or
mov
adc
mov
dec
mov
mull
sbb
addr16
cmp
adc
jno
inc
fstl
aad
jne
xlat
mov
hlt
fsts
inc
mov
push
fcmovne
mov
push
add
pop
inc
outsl
fwait
jnp
push
pusha
cmp
rolb
mull
pop
popa
iret
jbe
xchg
cmpsl
ret
nop
ja
cmp
stos
jge
or
cmp
inc
pop
lods
bound
xor
add
cmp
sbb
push
int
xchg
lret
loope
mov
xchg
push
enter
testb
fwait
and
mov
fistl
imulb
cvtps2pi
xchg
jmp
inc
sbb
fists
mov
not
insb
call
imul
pop
mov
mov
add
std
add
or
pushf
xor
jno
sub
sti
lock
insl
adc
jmp
rolb
clc
pop
pop
std
iret
push
in
add
ss
pushf
lret
or
sarl
loope
cmp
xchg
mov
and
rorb
out
leave
nop
xor
stos
dec
loop
mull
pushf
pop
pop
mov
pop
xchg
push
sbb
mov
mov
loope
adc
push
lahf
jns
mov
dec
imul
mov
add
out
insb
pshufw
jp
pop
cld
mov
aas
or
arpl
xor
xor
and
inc
stos
fidivs
fidivl
icebp
ret
cmpsb
cmp
add
mov
cmp
int
sbb
pop
in
mov
dec
push
out
sub
loopne
pop
rcr
lret
xchg
lahf
rclb
frstor
xor
out
mov
cltd
cmc
dec
stos
sti
sbb
sbb
fistps
sub
mov
icebp
mov
xchg
cmp
adc
push
xchg
or
adc
xor
fmuls
mov
mov
inc
fisttpll
ret
xor
sbb
dec
add
push
mov
and
dec
ret
fisubrl
mov
pop
xor
adc
pushf
lods
scas
sbb
aam
push
sbb
mov
sbb
cmp
shll
pop
in
cmc
call
fs
ss
cwtl
jp,pn
fildll
or
cli
pop
sbb
pop
and
mov
call
jno
arpl
enter
pop
xchg
ljmp
ficoms
dec
fwait
pop
pop
leave
ret
daa
enter
pop
pop
cwtl
xor
mov
lcall
ss
or
int3
pop
jl
inc
mov
hlt
jg
daa
repz
pusha
fsubs
adc
or
pusha
inc
mov
test
push
inc
loope
enter
or
jecxz
clc
movsl
lods
gs
sbb
push
ret
fildll
into
das
mov
push
pop
or
adc
enter
out
out
mov
inc
push
jbe,pt
dec
pusha
jne
and
dec
je
loope
arpl
popf
dec
sahf
add
jl
pop
add
fisubrl
mov
test
iret
aaa
popf
cli
fs
rorl
cmp
mov
and
cmpsb
test
inc
adc
xor
mov
sub
mov
xor
adcb
hlt
test
or
push
add
add
push
adc
lcall
push
mov
ficoms
xor
xchg
iret
mov
adcl
jmp
bound
xor
jge
xchg
inc
lret
mov
adc
stos
aad
xchg
stos
cwtl
imul
imul
jmp
adc
inc
or
add
gs
test
in
xchg
xor
dec
xchg
xchg
push
and
fwait
bound
adc
adc
ds
pop
pop
push
insl
xchg
mov
lods
lods
shlb
dec
insl
or
or
cmp
lods
mov
mov
roll
cmc
les
sub
dec
jns
rolb
iret
nop
into
sahf
push
sbb
dec
sbb
mov
xchg
jle
xchg
sbb
idivb
push
and
jne
das
push
xor
or
cwtl
xor
pusha
add
jnp
rcr
push
mov
clc
cs
mov
pop
sub
pushf
push
mov
xchg
cmc
mov
fidivrs
loope
ficoml
movsl
xchg
cmp
outsb
daa
mov
inc
mov
dec
cmp
jge
push
test
cmp
mov
shll
xchg
popa
mov
lock
mov
cmp
repnz
test
push
ljmp
or
jl
cmp
and
inc
inc
lods
pop
add
icebp
dec
sub
add
mov
adc
lret
scas
imul
jle
xor
mov
jno
push
or
mov
pop
mov
nop
adc
sub
or
repnz
test
dec
or
fsubr
mov
cld
xor
movb
mov
add
pop
out
push
test
lret
dec
mov
xlat
das
insb
mov
jecxz
in
das
jmp
sub
xchg
jmp
jmp
sahf
das
in
movsl
shll
adc
jo
mov
mov
pop
mov
cmp
pop
xchg
inc
and
adc
aaa
movsl
dec
mov
pop
adc
fucom
mov
jge
cmp
cmp
test
aad
jle
aaa
and
sahf
out
cmpsl
xor
inc
xchg
inc
mov
or
sti
test
sub
inc
lcall
mov
jg
push
mov
int
pop
cwtl
xor
pop
rolb
pushf
inc
mov
inc
jae
jae
pop
ss
imulb
mov
mov
in
cmp
ret
pushf
cmp
jecxz
shlb
mov
int
mov
xlat
fsubr
jmp
scas
jo
out
insl
xchg
push
jge
sub
dec
clc
fimuls
sbb
pop
incb
sbb
push
movsl
push
repz
sub
jg
lret
mov
add
adc
stos
jmp
lods
pop
ljmp
mov
pop
adc
adc
scas
add
xchg
fldenv
popa
jle
xchg
add
xchg
xchg
in
adc
xchg
sbb
push
mov
xchg
dec
pop
xlat
loop
push
shll
sbb
or
cmc
cmpsl
or
push
cli
sbb
push
mov
sbb
push
cltd
push
sbb
mov
in
shlb
push
pop
cltd
dec
xchg
sub
jns
cli
mov
add
add
jbe
cmp
loope
loope
hlt
aaa
push
sti
fsubs
adc
cltd
sbb
push
and
mov
jno
mov
lret
call
adc
addr16
ja
aam
pop
cltd
fbstp
cmp
jb
scas
shrb
shrl
inc
dec
enter
add
xor
jle,pn
test
cs
add
std
in
jmp
std
cmp
lahf
aaa
shll
jb
movsl
bswap
jmp
fnstcw
xor
cltd
cltd
xchg
mov
rcll
mov
std
loopne
mov
lds
cmpsb
push
ret
jecxz
mov
or
test
fcoms
mov
imul
sysenter
push
pop
in
int
aaa
imul
jp
mov
ret
test
fwait
dec
mov
pop
sbb
mov
call
sarb
outsb
add
std
pusha
rcrl
imul
adc
es
pop
test
xchg
inc
into
adc
push
xor
jo
sbb
mov
outsb
mov
popa
jne
arpl
andb
imul
inc
xchg
mov
inc
xchg
hlt
pusha
cli
rcrl
js
cltd
sbb
mov
imul
mov
iret
jl
mov
or
push
mov
ficoms
cs
add
mov
push
pop
test
pop
jmp
stos
fs
or
mov
dec
jge
and
gs
xchg
mov
cwtl
push
sbb
mov
popa
addr16
adc
mov
add
test
cli
inc
in
dec
dec
push
je
inc
pop
mov
stos
ss
cld
mov
push
adc
or
xchg
loop
cltd
xor
movsb
out
pop
or
cmp
out
push
jecxz
adc
add
dec
les
mov
xchg
lret
adc
jmp
xchg
ret
push
and
fisttpl
fwait
xchg
pop
jae
subb
imul
xchg
mov
pop
xchg
ss
xor
add
mov
and
clc
jno
out
and
ficomps
cli
adc
flds
fildl
sahf
inc
and
push
mov
push
xor
cwtl
das
push
movsbl
xorl
or
enter
mov
jle
fisubl
xor
fisubrs
aaa
lock
push
mov
mov
pop
push
mov
stc
xchg
pop
aam
dec
lahf
int
lret
add
dec
sahf
dec
push
mov
xor
cmp
mov
lods
dec
rorb
fsubrp
push
cmpsb
sarl
stos
lahf
mov
clc
leave
je
ljmp
out
bound
inc
es
cmp
lahf
mov
push
and
jbe
cli
enter
mov
rorl
xor
scas
cwtl
xor
scas
fimuls
loope
pop
or
inc
sbb
je
dec
dec
sub
mov
stc
jmp
push
out
push
rolb
push
mov
stc
and
in
xchg
imul
xchg
cmp
shlb
stc
dec
fcoms
rcrl
push
lret
sbb
call
xor
mov
or
mov
imul
mov
mov
shr
rcrb
rcrb
jecxz
jae
stc
mov
call
cltd
xorb
outsl
and
or
mov
popl
and
inc
mov
pop
fistl
push
test
test
fbstp
js
lock
leave
enter
test
jecxz
dec
pop
cmp
notb
pushf
nop
xor
fidivrl
push
mov
inc
or
sahf
jp
sub
mov
ss
in
cmpl
or
cmp
stc
or
or
data16
sub
icebp
xor
and
int
xor
pop
sarl
mov
sbbl
incl
aaa
leave
popa
push
adc
pusha
pop
test
call
fisttpll
repnz
lods
stos
sbb
ret
mov
jae,pn
aam
mov
cmp
out
mov
fadds
sbb
add
arpl
aaa
std
pop
push
rep
mov
xchg
adc
xchg
fisttps
or
in
xchg
pop
sbb
loope
mov
int3
fdivs
adc
or
imull
dec
movsb
pop
mov
push
or
mov
xchg
iret
mov
push
das
push
add
jp
out
test
div
xchg
cmp
or
fcmovnb
xchg
mov
push
pmaxub
mov
insb
jmp
mov
xchg
sub
sbb
add
inc
fimull
push
adc
gs
fstp
and
pop
jp
add
xchg
into
lahf
sub
test
mov
inc
xchg
add
loop
repz
adc
in
aaa
ficoms
mov
mov
push
mov
xchg
dec
mov
fidivrl
test
pop
aam
xor
lret
push
cli
sbb
inc
lret
sahf
push
ja
subps
dec
das
cmpb
pop
or
scas
fidivl
sbb
xor
cmp
mov
mov
xor
xchg
pushl
outsb
loopne
lahf
lods
std
test
lahf
movsb
out
test
inc
hlt
movsb
lret
cmp
pop
outsb
fwait
xlat
lahf
mov
push
jmp
fwait
xchg
stos
shll
mov
jnp
lock
addb
popf
mov
lea
ret
and
or
cmpsb
mov
pop
add
lods
fistpll
fiaddl
and
cmpsb
fwait
xchg
push
sbb
jecxz
mov
and
push
pop
hlt
fists
repz
jne
in
jbe
mov
cwtl
or
sbb
shrl
sbbl
jb
outsl
ret
sub
stos
jp
scas
jmp
inc
insl
rol
mov
pop
adc
fiaddl
mov
cmp
cmp
mov
fmuls
lock
xchg
inc
into
lret
fistpll
lret
and
pop
rcl
pop
scas
xchg
push
es
scas
rcll
aam
xchg
popa
in
cmpsb
cmp
orb
outsl
jg
hlt
mov
jmp
cmpb
in
shll
sbb
js
adc
into
mov
mov
mov
aaa
and
mov
jl
add
xchg
sbb
rorb
outsb
into
sbb
pop
sbb
fdivr
outsb
addb
lcall
xchg
das
push
imul
ss
out
push
aas
mov
inc
xlat
push
cmp
not
fidivs
mov
mov
push
mov
imul
in
out
loopne
jge
sbb
adcl
lcall
pop
push
es
dec
out
enter
pop
inc
enter
xor
and
fwait
jge
scas
inc
jbe
out
xchg
sub
push
popa
cmp
sub
les
mov
movsb
inc
push
inc
inc
push
mov
sbb
mov
js
cmp
sub
push
loop
roll
jbe
into
ret
cmpsb
int
and
lcall
out
out
stc
sahf
xchg
push
mov
pop
adc
mov
mov
lods
les
es
push
lret
jle
xchg
movzwl
test
stos
cmp
fucom
loop
sub
and
and
xchg
in
cmc
fsincos
dec
fadd
stos
push
ja
lcall
dec
adc
mov
mov
fcomp
push
xchg
inc
js
mov
movsb
enter
aaa
jge
test
clc
mov
mov
add
sahf
aam
lahf
lret
sub
lea
xchg
sub
or
fs
adc
int
push
push
inc
ret
js
pop
cmp
loopne
insb
test
mov
hlt
popf
outsl
jp
or
xchg
jmp
xor
pop
sbb
inc
push
std
fwait
push
stc
pop
pusha
add
mov
fmull
jae
outsl
jle
lea
rorb
xchg
mov
outsb
add
push
add
movsl
icebp
je
pop
sbb
and
in
nop
cmpsl
sahf
mov
sbb
push
sbb
hlt
fs
fcmovu
and
cwtl
jmp
push
aas
es
gs
mov
pushf
adc
push
cmp
inc
pop
cmp
cld
pop
daa
push
insl
push
mov
push
or
outsl
sub
xchg
out
sbb
pop
mov
mov
add
jg
pop
shll
sub
pop
iret
cld
repnz
mov
fucomp
shll
movb
or
in
mov
adc
lcall
cmpsb
or
jecxz
cwtl
push
add
xor
addr16
fistpl
mov
mov
shlb
fstpt
pop
sbb
iret
bound
andl
sahf
jle
lock
cmp
sbb
pop
shl
js
movsl
insl
push
cmp
cvtdq2ps
push
jp
inc
or
push
jbe
sub
test
mov
mov
ror
adc
mov
pop
aaa
sub
leave
or
popf
cmp
bound
mov
mov
lods
imul
push
xor
mov
insl
fisubs
xchg
dec
lret
xchg
imul
scas
fwait
jp
sub
stc
dec
pop
outsl
cmp
mov
out
insb
fistps
push
decl
test
mov
xlat
clc
es
rorl
dec
add
orl
jne
aaa
sbb
xchg
pop
sbb
repz
pop
mov
mov
inc
xchg
ret
adc
fsubrs
inc
cmp
ja
imul
push
std
call
pop
imul
jno
push
dec
adc
xor
xor
in
lret
jae
and
je
pop
or
sbb
pop
jae
sbb
rcrb
cmp
and
xchg
dec
dec
push
xchg
shlb
sub
adc
fs
and
pusha
andl
mov
es
mov
iret
adc
sub
xchg
mov
lods
xchg
mov
jne
push
dec
cs
lahf
out
add
dec
fdivrl
mov
mov
xchg
xor
push
mov
mov
mov
push
stos
out
sbb
mov
pop
mov
out
jp
std
push
fisttpll
insb
push
adc
movsb
dec
jb
rorb
gs
dec
clc
sub
lods
repz
push
push
adc
into
negl
xor
xchg
cli
cmp
or
and
xor
add
sbbb
imul
into
jge
dec
mov
mov
add
sub
mov
xchg
dec
daa
enter
inc
gs
inc
xchg
cli
dec
lds
fsubrs
clc
inc
jge
xchg
loope
xor
fisubl
enter
sbb
xchg
pop
xor
mov
push
or
movsl
dec
pop
jmp
dec
mov
lds
lock
pop
mov
jge
add
ds
or
adc
sti
std
aam
pop
and
dec
das
fistpll
mov
mov
outsl
int3
mov
cwtl
addl
ds
xchg
adc
je
arpl
out
iret
cld
push
popf
repnz
lods
add
sub
push
xchg
test
xchg
loopne
aam
mov
mov
cwtl
insb
enter
inc
fmul
xchg
fcompl
ds
inc
ja
mov
dec
or
in
mov
les
sub
addb
or
fsubl
mov
or
xchg
push
mov
fsubrs
push
xor
xchg
mov
mov
dec
in
mov
mov
add
imul
xchg
mov
aad
std
pop
inc
out
lahf
filds
loope
add
sbb
adc
aas
iret
jae
jmp
push
push
rclb
mov
fbld
mov
test
dec
cld
pop
push
mov
subl
dec
add
pcmpeqb
xchg
mov
testl
xor
push
es
fsubs
push
loop
push
nop
scas
icebp
enter
push
inc
ret
jae
out
loopne
leave
aam
adc
mov
jo
hlt
in
adc
data16
mov
or
stc
popf
jb
xchg
pusha
lret
jp
and
mov
mov
pop
pop
push
xchg
and
loopne
sbb
dec
adc
mov
sti
xchg
xchg
mov
xchg
jns
or
shll
inc
mov
push
loope
mov
sti
adc
lret
cmp
das
dec
fs
pushf
push
add
mov
dec
out
rep
xchg
jmp
cli
sarb
in
sbb
mov
lea
insl
movsl
std
xor
subb
hlt
divl
mov
into
out
jp
cmp
or
or
mov
cld
js
in
nop
stos
sbb
addb
cmpsl
aad
inc
scas
adc
jge
nopl
movsl
jne
rcl
xor
or
or
inc
jg
movsl
shrb
insl
pop
aaa
cmpsl
ret
lock
ficoml
not
add
inc
push
mov
popf
push
rcll
ds
xor
mov
iret
or
int
pop
xor
fidivs
pop
dec
call
adc
cwtl
enter
ja
mov
ljmp
imul
pusha
test
hlt
mov
add
and
aas
stos
enter
sarl
dec
leave
push
xchg
lock
fs
xchg
jns
or
pop
in
out
aas
mov
inc
mov
sub
clc
dec
call
sub
jl
add
lea
gs
icebp
mov
mov
or
pop
jbe
cmc
rorl
adc
cmp
xchg
movsl
push
stc
gs
add
popf
adc
sbb
or
xchg
loopne
sbb
push
pop
lock
mov
test
inc
and
or
shlb
add
pop
ljmp
test
stos
test
call
std
js
add
out
ret
cmpb
fidivrl
mov
cmp
sub
push
sub
cmp
push
sub
outsl
pop
jl
fcmovbe
pushf
testl
mov
enter
popl
cmc
cltd
xchg
pusha
shlb
es
cmpsb
std
cmp
pop
inc
and
push
cmp
mov
ret
xchg
inc
out
lcall
sub
incb
sbb
std
mov
sarl
add
inc
pop
mov
hlt
out
scas
jmp
xchg
outsb
hlt
popf
xor
jmp
mov
sub
push
pop
jno
or
and
mov
scas
hlt
sbb
cmc
xor
add
ljmp
in
outsb
xchg
clc
add
in
sub
mov
lcall
pop
pop
mov
and
jno
pop
adc
idivb
ds
adc
shrb
or
sub
pop
sub
xchg
dec
inc
aaa
stos
insb
out
pop
or
loope
pop
icebp
dec
adc
sarl
sub
inc
adc
add
movsl
push
dec
orl
ss
scas
lret
insl
mov
movb
lret
inc
dec
mov
pop
pop
movsl
cmp
or
sub
cltd
mov
mov
dec
sarl
add
pusha
pushl
enter
std
inc
iret
adc
xchg
loope
aaa
fsts
ss
pusha
xchg
outsl
ja
loop
aas
lret
cwtl
adc
dec
enter
ljmp
dec
pop
pushf
xchg
dec
xor
and
icebp
loope
rclb
loope
and
mov
imul
or
sbb
jbe
and
push
or
mov
dec
popf
mulps
out
sub
pop
lcall
pop
dec
movsb
jle
mov
jmp
movsl
push
xor
repz
shl
nop
out
std
int
mov
test
notb
ret
cmp
leave
and
xor
jns
out
stos
mov
dec
lods
and
ljmp
pop
loopne
cmp
negl
jmp
adc
mov
mov
cltd
inc
xor
inc
or
lods
test
stos
xor
jno
std
loop
xlat
out
adc
jp
imul
fimuls
sti
rorl
jmp
dec
insl
xor
fistpll
imul
push
dec
push
loope
stos
mov
in
jo
mov
out
cmp
jge
sarb
jo
cld
mov
scas
dec
arpl
add
aas
mov
mov
sbb
jbe
jl
js
inc
mov
iret
mov
mov
pop
jo
loopne
fwait
xchg
sti
mov
jno
std
adc
push
mov
into
push
add
fstpl
mov
cmc
mov
sbbb
inc
sahf
inc
stc
mov
pop
jnp
int
iret
cwtl
add
dec
aad
push
jmp
xor
cmp
mov
imull
cli
cmp
mov
pop
pusha
fiadds
jecxz
in
ds
jb
leave
jg
shl
adc
push
addr16
dec
mov
or
add
jge
xor
jecxz
cmp
mov
and
lea
dec
inc
scas
fs
adc
ucomiss
sbb
mov
sbb
sbb
xor
stos
inc
mov
data16
pop
cltd
mov
fstpt
sbb
lods
ljmp
xor
adc
cs
les
aam
sub
loopne
jns
stos
sbb
jno
add
and
js
shlb
push
mov
setge
jno
cmpl
mov
out
cmp
enter
sbb
cmpsb
mov
add
adc
mov
mov
stos
sti
int
dec
movsb
test
jbe
mov
negl
lcall
lods
inc
scas
jae
adc
push
mov
imul
outsb
inc
shl
jne
and
bound
pop
mov
mov
mull
and
or
pop
sarb
xchg
and
addb
or
mov
or
cmp
ja
xchg
pop
sbb
pushf
and
dec
out
xchg
cmp
fstl
fisubs
out
test
sbb
sub
neg
pop
mov
test
std
push
inc
je
xlat
jb
ljmp
push
dec
cmc
stc
add
outsl
sbb
fs
shlb
pop
cmc
ret
lahf
jb
ficompl
out
out
jp
add
xchg
cmp
out
and
and
test
rclb
inc
into
nop
loopne
and
loopne
loopne
negl
xor
jno,pt
ret
nop
push
adc
lret
mov
jg
rcl
jmp
xor
pop
lahf
mov
imul
std
call
idiv
in
arpl
cltd
sbb
mov
inc
inc
neg
popa
jle
dec
sub
sub
pushf
push
lret
js
mov
rcrb
inc
bound
insl
fyl2x
movsl
push
out
ja
mov
pop
subl
mov
divl
jns
mov
xchg
in
jl
divb
pop
insb
out
idivl
xor
lcall
dec
lock
xor
pop
mov
lsl
jo
sbb
mov
xchg
cmpsl
adc
scas
orl
fnstcw
push
aam
stos
mov
js
pop
jns
lock
dec
into
inc
cmp
mov
mov
push
pop
out
sub
jecxz
call
dec
inc
shrb
cmp
pusha
mov
arpl
or
xchg
push
xchg
mov
cmp
pop
in
outsb
cwtl
nop
adc
stos
mov
add
jl
and
rcr
dec
xchg
arpl
int3
lahf
fisttps
idivb
mov
or
fldl
sbb
mov
loop
add
aaa
inc
test
dec
negb
fistpl
bound
ja
cli
or
or
icebp
pop
push
mov
adc
pop
cmp
push
and
loopne
xor
mov
pop
dec
fsub
dec
push
sbb
hlt
xchg
repnz
clc
cmp
inc
ds
dec
jnp
js
jl
pop
fists
hlt
mov
jp
pop
sub
push
in
les
dec
adc
ss
ja
mov
enter
outsl
and
std
loopne
xchg
stos
xor
aad
mov
mov
cld
nop
mov
aaa
or
push
in
aam
inc
aaa
shlb
and
in
pop
stc
fs
jo
push
inc
jmp
mov
jae
test
testl
sub
inc
mov
push
pushf
popa
lcall
xchg
imul
divl
xchg
mov
in
jmp
push
pop
test
dec
lahf
cmp
inc
add
int3
mov
adc
mov
outsb
jb
stos
mov
cmp
pop
pop
inc
push
loope
popf
cmpsb
pop
jg
mov
push
cwtl
cmpsl
mov
cmp
mov
push
inc
dec
and
mov
jae
je
xor
xor
jmp
dec
or
jb
lods
pushf
lret
pop
sbb
fistl
test
dec
adc
in
rolb
bound
push
xchg
sar
ret
fwait
and
push
or
in
lods
push
andb
repnz
add
xlat
sti
dec
add
pop
add
xchg
es
mov
out
mov
add
loop
incb
dec
jle
mov
push
adc
test
clc
xchg
pop
dec
ljmp
push
inc
in
mov
xchg
movsl
sub
pop
and
inc
adc
movsb
mov
xor
xchg
mov
dec
repz
loop
add
xchg
sub
inc
inc
andb
mov
sbb
mov
lret
mov
stos
inc
aas
popf
adc
faddl
sti
gs
add
dec
mov
js
sbbb
push
cmp
mov
inc
test
fcmovu
in
pusha
int3
xchg
fwait
mov
inc
xchg
adc
cmpsb
or
mov
inc
lea
inc
xchg
sbb
xor
or
mov
test
fidivrl
sub
sbb
stos
lea
loope
ljmp
inc
imul
stos
and
roll
cmp
pop
add
pusha
shl
mov
aas
jnp
fidivl
or
mov
push
push
fcmovnu
pusha
shrl
je
ss
repnz
mov
popa
or
xor
jp
adc
xor
pop
out
lret
in
xchg
sbb
fisubs
lcall
ss
cmp
jo
mov
fstl
or
inc
lea
mov
sbb
das
mov
scas
outsl
jbe
test
leave
mov
adc
add
cmp
aas
xchg
sub
xor
sarb
into
adc
cld
cmp
lds
inc
cmpsl
arpl
jae
cmp
mov
out
push
insb
lea
cmp
das
scas
adc
jle
in
sub
movsl
jae
jo
cmpsb
test
adc
ret
stos
xchg
pop
pop
pop
adc
sbb
les
repz
cmp
jns
mov
adc
jle
test
sub
or
enter
inc
cwtl
hlt
ljmp
enter
push
xchg
repnz
mov
aaa
out
sarb
cmpsl
xchg
test
scas
sub
add
sub
pop
or
test
lods
inc
mov
inc
testb
nop
stos
ss
mov
xlat
dec
je
mov
cmp
mov
loopne
push
xor
pop
dec
in
and
jae
sbb
mov
out
incb
dec
pop
jmp
adc
sub
mov
int3
sub
push
cltd
out
jp
inc
and
xchg
jmp
arpl
loopne
mov
inc
push
filds
mov
ret
jns
mov
mov
in
xor
outsb
test
mov
xchg
push
sub
enter
inc
loopne
pop
pop
mov
mov
into
orb
out
sbb
mov
add
shlb
fld
sub
cmp
in
push
xorl
and
xor
lds
dec
add
lods
dec
popa
int
lahf
shlb
or
dec
daa
mov
jl
adc
imulb
jl
push
cwtl
repz
and
sahf
test
aad
test
shlb
ds
vmovmskpd
loopne
cmc
jno
mov
stos
popf
cli
pop
lods
mov
jle
inc
or
cmp
dec
out
cmp
inc
adc
je
hlt
sti
int3
pop
fcompl
push
adc
sbb
ret
pusha
jle
das
xchg
ja
sbb
insl
ret
and
shlb
mov
test
repnz
pusha
lret
push
xor
std
sarl
jge
xorl
xor
inc
ja
push
fadd
lods
sub
jae
push
lock
inc
sti
outsl
in
sbb
fmull
sbb
lcall
sub
mov
push
loope
jns
fbld
test
and
into
pop
mov
ja
enter
shll
fidivrs
cld
pusha
push
inc
and
ljmp
rcrb
jbe
stos
sub
ljmp
or
adc
mov
mov
and
pop
in
push
xchg
enter
cmp
popf
add
mov
cmp
mov
push
mov
inc
cmc
fbstp
push
enter
fdivs
xor
xchg
pop
cmpb
lds
cmp
push
mov
cmpsl
cmp
mov
or
jmp
mov
sarb
xor
xlat
and
xchg
fnstcw
iret
mov
inc
mov
inc
icebp
dec
stc
cmc
xchg
imul
sub
testb
adc
aaa
imul
pop
push
cmp
pop
dec
out
push
mov
fldt
icebp
sub
mov
mov
and
sar
mov
addr16
ljmp
sub
jo
sub
mov
mov
cwtl
mov
xorl
adcb
ret
pop
push
call
sub
inc
fwait
dec
andl
jb
add
movsl
jle
push
adc
sub
mov
jo
clc
jg
sahf
mov
andb
andl
adc
dec
push
add
ret
andl
div
movsb
and
dec
push
outsl
sub
sti
out
push
pop
sbb
jle
jle
cmp
lock
pop
out
popl
divb
inc
and
daa
idivb
mov
inc
jne
adc
pop
stos
bound
mov
jmp
inc
mov
std
repz
xor
push
or
pop
insb
jge
inc
lea
mov
lea
push
out
add
popa
mov
enter
push
scas
ljmp
subps
pop
mov
iret
cmp
or
jmp
in
xchg
scas
je
fcompl
daa
icebp
sbb
mov
lea
or
icebp
mov
jno
add
mov
pop
daa
pop
xor
popf
loope
lds
test
add
jae
ret
or
lock
jge
std
mov
rcll
xchg
fistpll
mov
cmp
and
jbe
jge
add
and
out
cmp
mov
insl
leave
xchg
mov
stos
sbb
cmpsl
call
ret
aam
fnsave
inc
sub
in
inc
popf
fs
mov
and
aas
xchg
test
insl
xor
sub
in
lds
loop
jns
pop
vphaddwd
lea
movsb
imull
sbb
leave
call
nop
lcall
repnz
xor
and
adc
xchg
out
call
rclb
lret
cmc
adc
loopne
in
adc
loope
pop
cmpsb
add
repz
xchg
loop
sbb
adc
cs
xchg
dec
cwtl
adc
stos
jne
inc
fsubrl
cltd
stos
pop
std
jno
cmc
sbbl
and
and
or
jmp
sahf
sub
std
ja
push
cmpsl
cltd
pop
add
xchg
pusha
nop
loopne
jnp
inc
sub
adc
mov
cli
mov
pop
rcl
in
mov
jae
pop
dec
jns
xadd
mov
inc
sti
cmp
inc
lods
adc
rol
leave
lahf
mov
aas
mov
mov
mov
mov
xchg
xor
lcall
mov
add
test
jbe
adc
pop
mov
aas
popf
stos
scas
mov
aad
xor
outsb
mov
push
push
das
int
stos
icebp
sarl
outsl
jnp
xchg
lods
mov
push
ds
jno
cmpb
rolb
repz
das
mov
js
and
inc
pop
mov
incl
fsubrl
lret
sub
or
ja
and
enter
ss
loope
adc
lret
cltd
sti
push
std
xchg
xchg
std
mov
movb
outsl
cmp
fwait
cltd
mov
mov
push
cmp
pcmpgtw
clc
mov
hlt
negl
push
cs
xor
popf
shl
jg
pop
fistpll
xchg
leave
sbb
xor
fsubrs
rorb
nop
mov
cmp
or
cli
and
xor
lret
xor
aam
pop
scas
sub
jo
pusha
jno
lods
rorl
imul
pop
sbb
or
icebp
jg
pop
insl
rol
inc
pop
loopne
adc
add
push
cli
dec
or
pop
enter
icebp
pop
int
sub
fs
les
push
nop
call
filds
xchg
xchg
rcrb
cmp
xor
stos
lret
pop
testb
fiadds
adcb
sbb
daa
bound
popf
std
movsl
ljmp
push
push
mov
adc
out
xchg
cmp
xor
lock
push
leave
out
cmp
in
mov
xlat
int
mov
sub
lahf
xor
lret
loope
int
add
inc
push
inc
clc
loopne
dec
testl
out
sbb
cld
push
fidivs
xchg
sub
push
dec
mov
call
mov
add
lods
sub
into
jb
test
cmpsl
mov
adc
pop
mov
mov
aad
inc
dec
addl
sti
test
pushf
xor
mov
aad
jecxz
clc
xchg
divl
scas
outsb
das
pop
popf
lret
jb
cmpsl
scas
sbb
inc
in
push
ljmp
jne
jo
push
mul
sbb
jne
pop
xor
in
or
jmp
in
int3
mov
mov
pop
ret
popa
pop
lcall
imul
test
pop
test
xchg
sbb
xor
or
and
mov
jbe
lods
pop
les
minps
and
push
movsb
pop
xor
xchg
xchg
cld
mov
or
pop
loope
mov
lds
push
insl
sub
pop
stos
adc
inc
inc
mov
cmp
mov
mov
dec
lret
mov
mov
lods
in
iret
xchg
loop
bound
pop
jp
cmpsb
xchg
mov
mov
jge
dec
cltd
push
dec
test
xchg
mov
pop
cli
imul
and
dec
outsb
popa
xlat
cmp
dec
fstps
mov
aam
pop
jae
rorb
cmpsb
jecxz
mov
stc
bnd
inc
bound
fwait
int3
loope
and
cli
xchg
les
test
inc
gs
push
inc
loopne
sti
in
enter
pop
xor
arpl
stc
and
sbb
mov
shl
mov
repz
push
mov
fldl
repz
jo
cltd
cmc
pushf
loope
call
adc
jb
insl
or
fs
push
stos
sub
addr16
push
push
mov
cmp
in
jmp
fwait
inc
call
push
jg
mov
add
lahf
into
fwait
or
or
add
loope
lcall
cvtps2pi
xor
jae
push
fbstp
mov
adc
xor
xor
aas
sub
xlat
incl
xchg
pusha
cs
adc
hlt
out
addr16
fnstenv
dec
jbe
mov
inc
fcomps
sub
add
repz
jnp
sbb
ficomps
leave
adc
pop
fistpll
push
lock
leave
push
lds
hlt
mov
in
testb
notl
or
xlat
jmp
es
cmp
push
mov
mov
and
hlt
xchg
cwtl
dec
xor
je
mov
xchg
xor
aas
adc
mov
xor
adc
sub
mov
adc
jp
inc
in
bound
cwtl
adc
mov
cmp
mov
not
lods
outsb
fildl
mov
les
xchg
div
jo
fldcw
xchg
mov
cmpsb
sbb
addr16
mov
call
lret
es
out
sub
in
and
test
and
outsb
sub
sarl
mov
mov
mov
sub
cwtl
push
fwait
inc
outsl
enter
jne
xor
out
jbe
mov
faddl
xchg
std
inc
das
sbb
inc
jge
mov
inc
add
cwtl
ret
push
ret
add
test
push
xchg
outsl
in
xor
loop
std
cs
or
inc
or
js
jmp
cmpsl
imul
or
adc
adc
imul
jl
dec
sub
les
stos
dec
jbe
push
cltd
lea
xchg
mov
ret
pop
lahf
mov
leave
and
adc
andl
bound
mov
mov
loopne
mov
sbb
and
cmp
jmp
rcll
sbb
push
push
es
mov
icebp
and
mov
xor
loopne
popf
es
sub
jno
stos
inc
jl
rcrb
shll
mov
jb
fucomip
imul
cmpl
dec
leave
mov
inc
cmp
sub
xchg
push
mov
jnp
or
pop
js
iret
mov
xchg
sub
sbb
divb
mov
addr16
or
mov
jp
test
mov
popl
push
and
out
jo
not
adcl
mov
or
sbb
lahf
mov
push
add
mov
fwait
inc
clc
popa
cmpsl
and
rorb
ret
and
xlat
lea
jmp
mov
push
push
inc
lret
idivb
mulb
and
sbb
pusha
and
dec
dec
shl
xchg
fimull
push
stos
pushf
add
inc
mov
clc
mov
pop
cwtl
test
pop
cmc
cmp
outsb
outsb
lret
pop
and
and
xchg
jnp
fisttpll
iret
pop
sbb
fnstcw
xchg
cmpsb
jecxz
lods
inc
roll
imul
jg
enter
in
xor
gs
ja
push
jnp
loope
in
outsb
push
xor
sub
cmpsl
insl
int
lret
sahf
insl
jmp
sub
ret
imul
mov
sbb
int3
incb
ret
leave
out
jb
xchg
in
inc
shll
repnz
pop
and
push
pop
addr16
fidivs
bound
ljmp
sbb
lock
inc
xlat
fs
add
xchg
sarb
mov
mov
jbe
inc
popf
div
mov
pop
test
icebp
and
popa
ret
mov
cltd
rcrl
adc
inc
pop
pop
inc
clc
mulb
icebp
lods
dec
enter
pop
jb
sbb
lods
xchg
mov
outsl
dec
cli
push
lods
jl
mov
cmpl
jle
cmp
jo
add
mov
das
pushf
sbb
jle
sub
jmp
sbb
mov
fs
int3
cmc
mov
cmpsl
jae
sub
lock
cmp
and
testb
or
xor
add
lods
jp
clc
stos
lods
out
out
pop
sub
pop
xor
dec
mov
iret
fildl
jb
lahf
stc
xchg
sub
pop
adc
ja
inc
mov
xchg
inc
push
add
push
ss
dec
or
or
mov
cmpsl
mov
dec
mov
sub
cmp
mov
push
add
mov
stos
out
xor
jne
das
dec
mov
mov
push
push
pop
push
je
roll
lret
mov
push
aad
mov
test
push
push
cmp
data16
cmp
aam
adcl
adc
inc
pop
rorb
xor
loop
or
rolb
mov
loope
cs
test
sub
imul
jmp
loop
ret
lods
pop
fistpll
mov
push
adc
sbb
xchg
arpl
mov
jbe
pop
mov
jns
icebp
sbbl
xchg
adc
push
dec
mov
and
inc
lcall
adc
adc
push
in
decb
jno
fisttps
adc
push
mov
mov
sbb
push
pop
pop
and
push
mov
test
mov
insl
inc
rcr
fdiv
fmulp
aam
dec
fdiv
data16
and
mov
add
nop
xchg
rcrl
cmp
je
mov
dec
sbb
jg
sub
je
inc
fbld
lret
into
in
pop
jmp
jl
push
movsb
cmp
icebp
adc
fnstcw
dec
jmp
and
xchg
cli
cmpsb
out
jge
pushf
mov
add
sub
inc
push
dec
dec
mov
test
adc
push
and
sbb
jge
mov
inc
mov
ja
inc
xor
mov
pop
push
inc
cmp
inc
mov
daa
sbb
ljmp
adc
jbe
mov
repz
jno
jo
sahf
and
or
lods
adc
push
js
mov
movsb
test
pop
xchg
sub
sub
mov
mov
or
inc
xchg
adc
push
faddl
pop
gs
lea
push
and
cmp
jg
mov
popf
or
xor
mov
sbb
fstps
xor
inc
les
jge
mov
pop
xchg
jbe
insb
dec
mov
jl
and
dec
push
sbb
subb
mov
cmp
adc
scas
mov
popa
adc
dec
pusha
inc
jb
jne
cli
xchg
test
add
mov
mov
jne
arpl
into
sti
xor
movsl
dec
sbb
mov
loope
pop
xchg
sbb
ljmp
mov
scas
dec
cli
adc
fstpl
mov
push
inc
jg
int3
outsb
xor
jmp
lods
fwait
push
dec
jg
push
pop
and
fwait
adcb
push
inc
xchg
xor
dec
or
adc
xor
pop
push
movsl
sti
lret
cmp
fisttpll
push
popf
sbbb
popf
lahf
mov
fdivp
loop
cmpsb
pop
shrl
testb
mov
inc
mov
jne
decb
mov
test
movsl
pop
pextrw
mov
adc
sbb
repnz
fstl
pusha
ss
mov
mov
movsl
jge
mov
mov
mov
je
in
sbb
push
jo
fdivrl
cltd
pop
ss
pop
xchg
pextrw
bound
xlat
add
test
aad
mov
xor
aad
ljmp
fwait
xor
in
jecxz
lods
sub
mov
jmp
push
inc
dec
and
ljmp
pop
dec
loopne
sarb
int3
cmp
mov
jne
and
mov
popf
stos
xor
fld
xor
add
push
pop
sti
mov
shrl
mov
aad
out
insb
cs
cmpl
sbbb
dec
out
fcmovu
test
outsb
mov
adc
mov
aaa
cmp
lods
lcall
sub
js
pop
pop
mov
icebp
dec
cmp
hlt
aad
repz
test
and
cmp
adc
insb
mov
xor
out
xlat
xchg
idivb
pop
mov
shll
pop
push
inc
test
mov
rolb
sub
test
js
addr16
pop
mov
cld
or
and
mov
xchg
flds
pop
sbbl
test
aas
sbb
cwtl
aas
and
push
fwait
xchg
sbb
filds
lret
mov
mov
dec
jmp
push
add
push
inc
in
inc
addr16
int3
scas
dec
bound
sbb
add
cmp
dec
jecxz
and
stc
cmp
movl
ds
daa
int
daa
int3
clc
insb
mov
push
cmpsl
sahf
bound
les
popf
push
pop
pop
dec
and
inc
loop
xor
mov
scas
jno
and
ret
lahf
and
sbbb
mov
lea
and
mov
push
push
das
cwtl
lcall
jge
jae
xchg
loopne
jecxz
inc
imul
inc
pop
xor
sbb
jl
jno
cmc
les
cmp
xor
mov
jl
mov
mov
loop
sub
mov
nop
cmp
mov
cmp
int3
mov
jmp
je
mov
pop
faddl
notb
dec
test
or
inc
imul
ror
or
lret
mov
les
xlat
cli
jp
push
flds
cli
inc
das
dec
cmpb
rorb
pop
xor
jnp
jns
sbb
sbb
mov
add
cmp
or
dec
jno
mov
or
mov
or
mov
sbbl
repnz
rcll
decl
or
push
cmpsl
dec
ljmp
mov
orb
iret
jmp
test
cmp
jmp
jmp
shlb
and
mov
push
stc
mov
xor
dec
add
xchg
outsb
mov
inc
shr
stos
cld
push
cmp
cwtl
cmc
aas
cld
sbb
or
xchg
push
aam
fcomip
sbb
popf
jne
cmp
pop
push
loopne
sti
packsswb
imulb
push
push
xchg
movsb
dec
sbb
xor
shrl
and
add
popa
outsb
xor
mov
add
fsubrp
fwait
movsb
arpl
sahf
pop
out
push
xchg
movsb
pop
push
adc
xor
inc
jmp
dec
pop
loopne
mov
cwtl
mov
add
inc
sbb
mov
xchg
xchg
movsb
push
sar
xchg
mov
sub
jle
xchg
insb
scas
or
xor
insb
mov
arpl
inc
or
call
sarl
pop
mov
xor
push
jmp
scas
out
insl
xchg
imul
shlb
cmp
dec
lret
pusha
cmp
add
mov
fsub
cli
add
add
xor
push
outsb
mov
pop
pop
sub
in
je
insl
sub
sbb
push
add
ljmp
fwait
adc
sbb
outsl
pop
sbbl
loope
mov
xlat
divl
jecxz
cmp
addr16
outsb
lcall
push
shrl
stos
repnz
mov
mov
add
in
gs
adc
std
test
adc
neg
xor
ja
xchg
enter
xchg
jne
lahf
cmpsl
and
xchg
inc
mov
test
mov
or
scas
xchg
fstpt
orb
sub
xchg
lods
iret
jmp
insb
pop
scas
add
and
in
repz
push
iret
mov
iret
mov
iret
enter
mov
adc
push
cli
mov
and
xchg
inc
xor
push
aas
pop
jmp
lret
imul
mov
and
xor
sahf
mov
inc
adc
imul
push
pop
add
lahf
enter
std
lcall
cld
bound
mov
push
mov
push
sub
test
cmpsw
and
nop
sarl
or
sub
xor
and
je
in
mov
xor
dec
push
mov
pop
push
cmp
outsl
stc
ret
adc
sbb
or
int3
out
das
cmpsb
push
push
cmc
ficoml
pop
lock
fimull
mov
jmp
into
je
repnz
and
iret
shl
mov
sbb
aam
pop
pop
pusha
mov
xchg
lea
scas
push
cmp
sahf
out
adc
pop
xchg
iret
add
jp
jecxz
negb
fnstcw
cwtl
jg
repz
int
fnstcw
lods
mov
ficoml
mov
gs
xchg
mov
and
ja
fldl
cmp
pop
clc
adc
adc
sbb
shlb
test
lock
push
xchg
xor
xchg
mov
movsl
pop
xlat
dec
rorb
sub
notl
xor
push
dec
xor
stc
ja
call
in
pop
lahf
jmp
or
xchg
popa
dec
daa
cld
iret
out
ja
or
and
push
ljmp
jle
jbe
push
fstl
pop
sub
mov
xchg
pop
scas
push
add
push
in
repz
ja
bound
or
