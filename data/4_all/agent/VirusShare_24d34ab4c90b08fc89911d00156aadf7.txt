insl
movsl
pop
add
add
or
insl
movsl
pop
add
add
add
add
notl
mov
rorb
std
mov
popa
fwait
and
lods
mov
mov
das
insl
iret
iret
sbb
dec
scas
outsl
repnz
adc
jmp
movsl
ja
mov
sti
iret
xchg
mov
sbb
add
add
scas
dec
ret
lea
and
and
inc
es
xlat
daa
das
arpl
pop
pop
popa
xchg
dec
ss
cmc
push
adc
pop
mov
mov
loope
cli
dec
imul
push
ss
adc
push
adc
jo
cwtl
lods
icebp
jp
ficoml
out
mov
inc
sbb
xchg
hlt
fisubrs
fdivl
aad
cld
or
jle
add
inc
xor
das
and
add
movsb
jle
and
insl
aam
clc
cs
sub
js
dec
std
jne
xor
fs
mov
mov
or
lods
mov
jecxz
cld
push
ja
mov
inc
cmpsl
ja
sbb
sbb
push
xchg
cltd
sub
mov
aas
clc
dec
repz
insb
mov
popa
adc
xlat
jbe
add
and
dec
jge
jae
outsb
pop
mov
shll
jo
xchg
dec
adc
pop
out
std
jno
fnstenv
jge
xchg
xchg
jne
scas
pop
pop
stc
sub
arpl
daa
incb
pop
jecxz
mov
jmp
mov
sub
pop
pop
insb
push
stos
mov
mov
sub
pop
ret
sbb
ja
mov
add
orl
popf
pop
ret
push
sub
in
fsubrl
sar
dec
sub
outsl
lcall
jbe
movsb
mov
jg
mov
pushf
pushf
push
js
nop
mov
mov
sarl
jmp
stos
xchg
push
mov
sub
mov
cmp
push
jmp
pushf
hlt
std
gs
addr16
call
push
dec
and
les
mov
push
cltd
out
mov
add
sub
lret
mov
mov
pop
movsb
mov
jle
inc
arpl
pop
cltd
cmp
mov
dec
ret
rol
shrb
out
movsb
mov
mov
lds
and
jb
jecxz
jb
or
add
movsl
rclb
xlat
sub
hlt
fstp
sub
hlt
stos
es
jb
mov
dec
test
rcll
clc
push
aad
dec
shll
aas
iret
enter
leave
mov
out
and
cs
adc
cmp
mov
and
inc
sbb
push
stos
bound
lret
mov
and
adc
testl
adc
sub
in
cld
sub
xchg
shlb
mov
outsl
bound
mov
mov
and
jb
mov
fcmovu
jmp
add
outsb
dec
dec
jns
mov
xchg
sub
cld
push
and
in
aaa
clc
outsb
pop
dec
cmpl
mov
jecxz
stos
fdivl
imulb
stos
fcomi
fcmovne
push
or
lods
fbstp
and
cmp
enter
xchg
fucompp
int3
cs
pop
xor
pop
mov
pop
cwtl
cmp
les
sti
xchg
fwait
popa
hlt
shrb
insb
cmp
inc
fsts
or
xchg
cmp
adc
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
fmull
inc
jle
js
add
and
push
push
jno
fsts
mov
dec
movsb
xchg
ret
fwait
add
mov
es
icebp
jns
xchg
out
xchg
lret
dec
xor
fstpl
arpl
fidivrl
and
les
cwtl
add
push
push
sarl
shll
insl
mov
jl
mov
mov
add
shll
mov
xchg
stos
mov
sbbl
fidivl
xchg
adc
pushl
xor
add
loopne
orl
ds
xor
or
fsubr
adc
leave
int3
hlt
add
in
dec
pop
add
xor
jp
js
sbb
mov
xorl
movsb
jmp
je
je
mov
push
dec
out
or
mov
out
inc
push
mov
inc
and
movsb
mov
nop
jp
sbb
lret
mov
int3
jg
push
das
sub
stos
int3
and
nop
imul
stc
adc
add
xor
aaa
pop
and
pop
rcr
sbb
dec
pop
cli
in
and
shll
and
push
neg
ret
mov
cmp
out
aad
stos
mov
out
or
into
in
jne
mov
pop
imul
dec
fnstcw
add
in
int3
and
test
or
pop
cmp
sbb
test
push
cwtl
sti
xchg
xchg
pop
fcomps
mov
dec
lock
cmpsl
sbb
icebp
jno,pt
or
imul
iret
pushl
nop
push
lea
pop
shrl
and
cmp
and
out
push
arpl
jp
shrl
xchg
dec
mov
rclb
bound
sub
mov
sub
fucompp
ud2
jle
imul
dec
jle
or
out
xchg
xchg
imul
jmp
xchg
ljmp
stos
add
inc
pushf
xor
sti
dec
add
adc
and
cmp
and
es
push
insl
std
sbb
test
cmp
in
addl
out
add
mov
es
lock
or
mov
jecxz
xchg
jp
inc
dec
testl
mov
fmuls
and
loopne
push
sbb
mov
mov
mov
int
mov
mov
pop
fprem
lds
fmul
clc
pop
adc
sahf
jne
fwait
cmpsl
mov
adc
call
or
xor
aaa
fldl
pop
enter
repz
xchg
mov
daa
jl
stos
je
adc
subb
ret
sahf
adc
mov
add
xor
fnstenv
iret
inc
lcall
add
jp
xor
das
xor
sahf
cmp
jnp
pop
push
cld
jle
outsl
fistpll
jl
ljmp
and
xor
pop
ret
popa
add
cmp
dec
pop
call
stc
dec
mov
inc
xor
lods
xor
dec
cmp
or
mov
mov
rcll
jle
inc
pushf
fldl
cmp
lahf
roll
mov
add
mov
sub
ret
daa
mov
jecxz
test
push
add
pop
shlb
pop
push
pop
sub
mov
popf
sbb
les
insb
leave
mov
out
ljmp
loope
daa
idivb
in
xlat
jg
pop
not
pop
sbb
jne
cmpsl
call
fs
and
sub
add
xchg
xchg
loope
into
into
jmp
outsb
nop
push
lret
and
push
or
lds
sti
ret
shll
rcl
addr16
mov
jge
iret
xor
cmp
push
stos
idiv
xchg
mov
cmpsl
xchg
or
or
stc
shl
movsl
lahf
ret
fcmovnbe
adc
addb
cmp
sub
add
nop
sub
mov
push
add
inc
clc
sbb
out
mov
or
out
pop
mov
sbb
xor
shlb
mov
xor
insl
js
jmp
add
and
dec
loope
jnp
outsl
out
flds
mov
hlt
jl
or
mov
or
mov
pop
sbb
testb
std
cmpsb
adc
jnp
or
mov
xor
xchg
or
pop
dec
mov
jns
pop
and
les
test
pop
jmp
mov
cmp
cli
pop
fsubrl
mov
leave
ja
fcoml
xchg
push
cmp
adcl
jae
js
arpl
out
and
add
lock
cld
mov
push
mov
pause
cli
xor
adc
add
mov
dec
push
dec
push
lock
je
aas
push
cmp
adc
jbe
int
sbb
pop
loop
les
push
mov
hlt
dec
cltd
aad
ljmp
lods
sbb
or
iret
subb
mov
loop
aam
cwtl
push
mov
fdivl
push
xchg
ret
dec
add
pusha
xor
icebp
cltd
pop
push
inc
out
daa
popf
mov
jnp
inc
jmp
mov
sbb
xchg
cmp
pop
add
andb
mov
js
inc
pop
sbb
inc
addr16
push
lods
push
lea
cmpsb
mov
sub
les
sbb
pop
pop
adc
mov
push
mov
pcmpgtb
mov
cmp
arpl
dec
push
sub
call
sub
enter
loope
push
cs
adcl
jno
rclb
jge
mov
push
adc
add
mov
lock
mov
mov
ljmp
leave
in
fs
je
jne
test
stc
sbb
bnd
add
and
pop
sarl
mov
and
jne
call
ror
das
fistpll
in
cs
cmp
xor
and
dec
ja
jns
sti
mov
jg
add
ss
cwtl
cmc
decl
cmc
mov
push
ljmp
stos
sti
out
push
fisttpl
mov
mov
sub
mov
cmp
cmpsb
jno
icebp
push
daa
cs
dec
sti
cld
mov
jbe
sarb
and
daa
adc
xchg
or
lret
cmp
js
xchg
pop
jbe
mov
loop
lret
les
out
xchg
movsb
xchg
in
fwait
sub
scas
add
xor
pop
jp
jno
out
jo
jmp
dec
and
and
inc
fsubs
inc
aad
rcr
pop
daa
cmp
add
jle
pop
dec
in
xchg
or
xchg
sbb
addl
push
push
out
imul
cmpsb
nop
sub
mov
push
jne
xchg
dec
icebp
das
jb
cwtl
inc
jb
cmp
icebp
mov
imul
das
fneni(8087
jne
pusha
dec
mov
dec
sahf
push
arpl
inc
inc
test
ret
lods
mov
mov
mov
adc
pop
insl
roll
pop
adc
xchg
jae
rcrb
outsl
cmp
mov
shrb
rolb
cld
push
flds
mov
fdivrl
out
int3
mov
pop
pusha
pop
shl
gs
popa
test
push
mov
mov
fisttps
xchg
xor
mov
mov
pop
lods
push
sarb
in
ss
pop
add
cmp
mov
jle
ficompl
stos
cmp
cmp
add
and
or
xchg
sbb
daa
pop
mov
addr16
fisubs
xor
pop
cmpsl
or
dec
ret
iret
lds
pop
xchg
sar
out
movsl
out
mov
adc
mov
jno
movsb
sub
push
mov
aas
js
xlat
cmpsl
gs
sub
adc
scas
outsb
inc
lods
incl
stos
pop
sahf
out
push
clc
jae
add
js
push
push
fmul
out
lods
fsubrs
cmp
or
fdivrl
jae
xchg
popa
xadd
icebp
jo
mov
test
shll
jg
ja
and
jl
cwtl
sub
jae
nop
push
add
mov
cwtl
push
cmp
outsb
jnp
outsl
mov
xchg
ljmp
jmp
cmp
rcrb
repz
icebp
test
mov
dec
pop
or
ret
dec
frstor
lret
dec
lret
out
fwait
in
imul
inc
cmp
fisttpll
inc
xchg
sub
cld
out
mov
push
negb
cmp
loope
sbb
cmpsb
jl
fucomi
repnz
add
mov
adc
mov
mov
clc
xchg
repz
scas
pusha
in
outsl
inc
and
dec
push
loope
inc
test
cmpsl
or
repz
push
inc
mov
bound
cmp
cmp
pop
xor
pop
mov
mov
pop
pop
add
shrb
fsubrs
mov
mov
sbb
repnz
stos
in
out
les
into
gs
sub
nop
pop
daa
testl
adc
sbb
sarb
mov
push
or
pop
scas
jl
je
sub
xorb
bound
push
cmp
sarb
jae
pop
push
or
inc
int3
dec
sahf
or
cmp
or
push
mov
sbb
repnz
inc
push
pop
fcmovnu
sbb
inc
and
adc
mov
sbb
or
cs
adc
mov
cmpsl
fcmovnbe
sub
mov
hlt
mov
sub
xlat
jmp
adc
push
in
test
adc
push
inc
push
and
ficomps
push
outsl
inc
cmp
or
inc
data16
push
dec
push
repz
jle
jne
lods
popf
lret
repz
repz
jno
jmp
scas
adc
ljmp
or
adc
mov
xor
out
repz
sti
pushl
or
ljmp
in
mov
lahf
jp
mov
and
add
jl
clc
and
std
pcmpeqb
out
xor
jle
push
gs
cmp
addr16
imul
pmovmskb
pop
push
sub
jo
push
andb
push
dec
jbe
and
sbb
sub
mov
inc
xor
loop
push
mov
sub
es
stos
pop
and
arpl
cltd
push
add
loopne
sbb
out
movsl
mov
or
stos
arpl
mov
int
jg
push
ss
cmp
cmp
xor
sub
push
mov
stc
mov
and
add
push
mov
out
call
jno
pop
cmp
movsb
mov
or
leave
xchg
jp,pt
fs
mov
mov
imul
mov
push
fisttpll
dec
movsl
xchg
sbb
xchg
loopne
ds
add
test
push
js
arpl
in
xor
push
cli
call
jg
jo
repz
pop
daa
xorl
mov
jo
std
movsl
pop
sbb
lds
pop
mov
movsl
lahf
sar
les
popf
xchg
pop
loope
pop
push
pop
cmp
mov
shll
in
mov
adc
add
cli
push
cwtl
pop
xchg
sbbl
movsl
fmul
mov
cmp
pop
sub
inc
add
mov
pushf
xchg
shr
dec
and
sbb
inc
cmp
sbb
jg
out
add
popa
and
aad
cmp
mov
mov
sub
inc
and
ljmp
call
in
xor
mov
pop
fistps
add
inc
adcl
mov
stos
insl
int
adcb
cs
xchg
jne
inc
or
push
mov
mov
add
inc
in
mov
cld
scas
and
dec
hlt
jmp
and
mov
jae
mov
or
jae
dec
lds
sub
lahf
std
jl
cltd
lods
push
push
out
icebp
mov
daa
es
insl
iret
lahf
nop
and
cmc
sbb
outsb
decl
inc
mov
jb
sbbb
push
data16
pop
fildll
shrl
sub
xor
xchg
sbb
or
fcoms
out
jno
iret
cld
inc
cltd
pushf
xor
mov
mov
ja
mov
repnz
ret
and
pop
pop
test
addl
cmpsl
inc
outsb
negl
ja
hlt
sub
fdivl
or
cmp
movsl
mov
outsl
inc
jbe
cmc
nop
or
inc
inc
sub
mov
and
jl
jns
xor
mov
sub
scas
jb
in
lds
repz
or
bswap
stos
sub
mov
pop
mov
pop
inc
dec
inc
lods
enter
mov
cmp
xchg
mov
aad
fnstenv
cmp
testl
movsb
insb
lret
sarl
arpl
pop
ljmp
sub
movsb
inc
xchg
sub
test
xchg
push
imul
mov
hlt
sub
test
negl
das
mov
nop
sub
pop
inc
xchg
cmp
movsl
push
or
push
fdiv
ljmp
inc
jp
repnz
xchg
in
pop
inc
aad
les
mov
mov
xchg
pop
out
arpl
scas
xchg
sahf
pop
xchg
xor
lods
pop
mov
xchg
jecxz
cltd
ss
adc
cld
fdivs
fiadds
mov
push
xchg
and
outsb
mov
or
push
mov
push
inc
mov
mov
je
and
pop
out
adc
dec
xchg
dec
les
push
pop
icebp
sbb
xchg
push
sahf
imul
add
push
cld
int3
xchg
mov
adc
push
ret
xchg
push
xor
jmp
in
scas
lea
xchg
cltd
inc
mov
fcmove
sbb
xor
push
dec
nop
hlt
adc
dec
push
mov
jle
and
ss
rcrb
lods
cld
mov
add
jae
cmp
lret
clc
xor
fstp
loop
sbb
aam
pop
push
mov
jmp
adcb
roll
mov
push
or
arpl
xchg
pop
push
jne
cld
or
repz
pop
or
pop
rolb
sub
loop
inc
ret
xor
push
xchg
or
sub
clc
xchg
jmp
pop
push
repz
stc
sbb
or
cmp
fnstenv
aas
inc
loope
mov
cs
mov
dec
sbb
sbb
and
adc
das
int3
ds
jge
das
xchg
push
cs
stos
out
cmp
push
xor
outsl
mov
or
xor
sub
ret
add
mov
nop
les
daa
inc
jecxz
das
aad
inc
jns
xchg
es
cmpsl
lcall
mov
daa
in
outsb
xchg
and
loopne
imul
inc
adc
xor
sbb
lret
jae
mov
cmp
out
cmpsb
popa
leave
lahf
jge
mov
addr16
mov
mov
mov
sub
in
sub
inc
xor
fcomps
cli
into
test
inc
jo
mov
int
cmp
jge
les
and
bound
cwtl
xchg
js
mov
mov
inc
adc
sti
jbe
out
repnz
popa
adc
stos
push
into
jno
pop
xchg
fldenv
xchg
jae
hlt
ds
or
xor
dec
arpl
out
cmp
xchg
pop
in
adc
sbb
rcrb
movsl
inc
popf
adc
mov
sbb
icebp
dec
fdivs
int
pusha
dec
aas
sbb
loopne
jne
ja
data16
andl
add
mov
stos
xchg
mov
and
mov
into
mov
and
lods
jg
push
imul
mov
into
xor
mov
push
fwait
sub
mov
test
xchg
out
push
out
and
outsl
out
jmp
pop
mov
cmc
ja
int3
mov
xchg
xchg
ja
loop
mov
sbb
push
xor
js
or
xor
in
adc
loopne
xorb
cmp
pop
sbb
gs
movsb
cli
or
jns
push
or
loope
mov
cmp
in
xchg
xchg
sub
dec
js
lret
and
dec
sub
mov
into
repz
shrb
inc
scas
in
sbb
insl
pop
xor
inc
stc
icebp
hlt
imul
aas
jmp
stc
push
jbe
rorl
fcmovb
push
sahf
dec
xchg
or
lahf
fbstp
out
push
or
fcompl
gs
push
test
jg
pop
shrb
dec
movsb
out
test
cmp
mov
cld
cmpl
jmp
test
shr
dec
jbe
out
aas
test
push
jmp
pop
xor
mov
ret
mov
iret
scas
xor
sbb
push
push
adc
push
lods
pop
mov
xor
mov
sbb
out
test
xchg
add
and
es
pushf
push
adc
sub
sbb
imul
int3
jmp
mov
stc
inc
xchg
gs
cwtl
lret
lret
popf
ja
outsb
mov
push
mov
pop
cmc
fs
inc
adc
jnp
jbe
test
fucomi
inc
jno
ret
popa
adc
insl
or
mov
and
jl
mov
nop
ljmp
sbb
or
xchg
jne
das
sub
shrb
sub
loopne
dec
fiadds
loop
pop
fldt
push
ja
jns
movsl
push
cmp
sub
repz
int3
ja
xor
push
cmpb
andl
jns
jp
and
xor
or
or
mov
fs
inc
pusha
scas
cli
loop
push
jbe
and
sti
repz
les
lock
bound
inc
scas
in
mov
icebp
fdivrs
loope
shrb
and
mov
ret
jno
adc
adc
sarl
jmp
and
sub
xchg
aad
push
mov
inc
call
fsubrp
pop
cli
xchg
xor
inc
sarb
adc
dec
negl
xchg
push
jno
jle
call
xlat
pop
jecxz
push
push
in
out
in
cld
push
inc
mov
pop
sti
xor
cltd
lds
mov
push
test
shl
in
sahf
xor
movsl
pushf
push
into
je
ja
dec
sub
xchg
imul
and
scas
xor
lcall
pop
xor
pop
add
push
xor
rol
dec
cmp
mov
loop
jns
adc
cltd
inc
movsb
aaa
lahf
in
mov
push
xor
aam
popa
inc
es
rorb
cmc
xchg
scas
out
mov
andb
mov
inc
pand
or
imul
mov
adc
outsl
jne
xchg
dec
ds
fsubrl
mov
in
inc
outsb
jp
adc
push
popf
nop
sbb
xchg
cmp
jns
pop
inc
pusha
pop
mov
pop
cmpl
pop
rcr
mov
fs
mov
mov
jo
mov
out
pop
stos
lods
mov
jmp
iret
cmpsb
ret
sbb
addr16
in
mov
lcall
movsb
mov
outsl
sub
push
mov
add
ds
lcall
mov
mov
gs
jecxz
fidivrs
jecxz
xorl
idiv
in
ret
popa
pop
sub
cmpsb
jb
movl
lret
not
sub
sbb
adc
adc
mov
or
jno
cmp
push
sbb
das
mov
sbb
lcall
and
mov
inc
ret
repnz
jle
fnstcw
sbb
jge
xchg
shrl
out
mov
adc
xor
scas
and
sub
lods
cvttps2pi
jno
in
and
pop
sbb
mov
jle
adc
mov
pushf
in
or
fsubrl
icebp
mov
dec
pop
lret
sub
push
outsb
mov
cld
call
xor
jl
loope
cmp
push
push
sbb
fdivs
mov
std
shl
out
test
je
jo
xchg
mov
mov
cmp
mov
dec
dec
sbb
iret
test
mov
mov
mov
and
xlat
mov
xor
jecxz
cmp
inc
xor
stos
ret
adc
dec
outsb
bound
or
in
xchg
fsts
xor
scas
nop
push
insw
add
push
clc
xor
pop
lcall
mov
jnp
arpl
pop
sub
xchg
rolb
mov
or
pop
sub
push
subb
out
push
add
sbb
fdivrp
aaa
in
enter
xor
pop
mov
dec
test
scas
mov
scas
int
fidivrs
fcoms
dec
sarl
nop
push
sahf
and
lahf
xor
ja
mov
mov
ja
xchg
fxtract
cmp
test
add
push
out
dec
dec
dec
xchg
imul
jl
jge
pusha
mov
jbe
push
jb
jl
ret
jg
sti
std
imul
mov
call
pushf
xchg
ss
mov
jg
adc
std
cmp
xor
test
pop
add
outsl
sub
mov
into
ja
mov
iret
pop
inc
cld
stos
push
aas
notl
fwait
bound
paddusw
test
outsb
clc
push
or
ja
les
jecxz
sarb
cmc
loope
mov
or
stos
add
fistpl
pop
pop
sbb
pop
shl
or
bound
jne
sub
repz
sub
push
push
in
js
fs
js
fadd
movsb
mov
lods
cs
clc
inc
lods
pop
cltd
adc
xlat
add
dec
mov
bound
pop
in
out
je
call
lock
ja
fnstenv
roll
inc
es
gs
inc
mov
ret
mov
lahf
mov
jl
jns
leave
push
cmp
gs
out
inc
arpl
inc
cmp
push
fiaddl
jecxz
xor
aam
fcomps
xchg
mov
lret
and
jb
push
movsl
cmp
clc
lods
pop
pop
shlb
out
and
js
gs
idiv
fistpll
in
mov
in
sbbl
dec
mov
add
cs
ret
add
out
js
scas
inc
fldl2t
pop
xchg
fsubrp
hlt
push
sbb
in
les
loop
xchg
dec
xor
call
ret
adc
fbld
mov
mov
push
pusha
loopne
int
push
push
pop
or
pop
clc
mov
and
sub
pop
lea
push
mov
cltd
sti
sahf
ja
mov
inc
outsb
adc
pop
adc
lds
or
sbb
movsl
mov
leave
adc
jns
adc
fs
mov
jl
push
repnz
je
enter
imul
mov
push
js
int3
insb
aaa
push
arpl
sbb
enter
mov
nop
out
sub
mov
es
inc
jp
loop
sti
jae
stos
mov
ret
jno
dec
es
shlb
and
dec
dec
lret
inc
push
pop
ds
repz
add
enter
inc
addr16
xchg
imul
js
adc
loopne
shll
shr
push
pop
cmpsb
add
add
inc
scas
roll
das
pop
loopne
jle
sbb
dec
scas
push
shrb
jle
cwtl
aad
dec
xchg
rcr
or
add
ficoms
test
ljmp
aas
jecxz
hlt
and
jp
add
leave
jmp
push
cmpsb
outsl
jae
push
loopne
mov
jb
cld
jmp
xor
push
fcmovnb
adc
ja
push
or
mov
scas
jecxz
pop
fildl
lahf
rcrb
fwait
push
aas
sub
les
stos
int3
lret
jl
cmpsb
xchg
cltd
and
or
lods
stos
mov
stos
cmp
in
push
or
inc
cmp
jbe
xor
lret
cli
aad
ret
jg
pop
imul
add
nop
jo
or
cmpl
lahf
imul
sbb
xor
je
pusha
into
pushf
in
sub
inc
push
pop
pop
sbb
imul
xchg
lcall
loope
mov
sub
leave
push
add
and
pop
fisttpll
adc
int
xor
das
movsb
jge
in
lea
push
cmp
pusha
cmp
stos
aas
xor
mov
mov
cli
pop
adc
fiaddl
cmpsl
fnsave
xor
xchg
xor
mov
xchg
in
mov
les
dec
scas
mov
xchg
popf
adc
mov
fwait
repz
xchg
stos
add
test
aad
cmp
or
repnz
mov
and
ja
aaa
inc
cmp
enter
jbe
in
mov
mov
jl
mov
mov
add
cmpb
loope
negl
fistpll
incl
jge
add
jp
push
pushl
mov
xchg
sbb
mov
ret
fistpll
movsl
mov
and
and
xchg
xor
xor
pop
fwait
mov
fisubl
rcr
aad
insb
dec
push
xchg
xchg
data16
fstpl
add
aaa
sub
loope
js
arpl
aaa
aaa
ja
xor
xor
mov
pusha
fwait
cmp
loope
js
nop
out
lahf
adc
icebp
cmp
ljmp
test
mov
pop
iret
insl
adc
sbb
adc
testl
frstor
inc
and
cmp
mov
cmp
pop
repz
inc
cmp
sbb
pusha
pop
mov
jne
sub
lcall
sub
mov
xor
inc
in
inc
lcall
push
dec
pop
pop
popa
outsl
fs
out
in
lods
fsubrs
push
dec
data16
out
js
ret
add
add
jmp
enter
inc
cltd
cmpsl
pop
hlt
int
sbb
leave
jge
lea
movq
fcoms
inc
movsb
and
sub
or
dec
xor
inc
pop
jg
xchg
mov
ret
lds
jmp
fistpll
sarl
and
sti
cld
jne
arpl
leave
mov
push
xlat
mov
out
xor
dec
sub
xor
push
test
mov
sbb
adc
jge
xor
cli
fnsave
repz
out
inc
mov
jecxz
adc
mov
movsb
and
clc
xor
push
or
rcr
fwait
gs
sub
sarl
into
jecxz
jge
fwait
sbb
sbb
imul
in
fnsave
jmp
lahf
das
pop
pop
xchg
mov
lret
mov
jne
rclb
fdivrl
adc
push
sahf
fldt
dec
mov
dec
das
lret
fs
adc
pop
cmp
dec
mov
add
hlt
lcall
xchg
aaa
inc
inc
cvtpi2ps
pop
dec
addr16
cmpsl
pop
fldenv
or
xor
fsubr
inc
ret
dec
fwait
push
adc
rcrb
das
mov
stos
mov
test
mov
mov
icebp
rcll
idivb
adc
in
adc
js
sub
sub
test
pop
mov
jg
test
fld
aam
inc
mov
mov
ficompl
lret
jo
shlb
jb
lret
fnstenv
xchg
jl
xor
pop
into
daa
and
xchg
js
outsb
adc
js
xor
sarl
xor
test
pop
andl
jb
ljmp
pop
leave
cld
in
or
es
mov
popa
sbb
adc
mov
inc
outsl
add
dec
dec
ljmp
inc
xor
lcall
test
xchg
fadd
in
lea
rcrl
xchg
mov
jle
js
sbb
push
sbb
xlat
add
andl
cmp
cli
pop
in
jo
in
cmpb
and
stc
je
leave
andl
inc
xchg
push
les
sarl
and
in
lds
lock
cmp
int
popf
cmp
push
adc
data16
push
xchg
inc
stos
mov
sbbb
lds
xor
aas
test
adc
loopne
sbb
mov
inc
in
sub
sub
int3
out
js
scas
out
rorb
sbb
xchg
cmp
das
roll
dec
call
adc
cmpsb
les
lock
stos
mov
out
fidivrs
popa
stos
mov
mov
or
cld
and
addr16
and
xor
das
movsl
lods
fwait
es
xchg
loope
xor
inc
cmpsb
rorb
cmpb
inc
in
push
and
loopne
ja
lea
push
xor
xor
dec
iret
mov
in
bound
mov
mov
fisubrl
sbbl
sub
add
mov
clc
or
mov
in
xchg
jb
adcl
dec
aad
std
xchg
aaa
mov
pop
push
cmp
mov
jecxz
and
ret
stos
add
aaa
xlat
lock
pop
cmp
nop
sub
test
rorl
fldt
fs
js
loope
mov
dec
ret
inc
xor
in
out
jmp
aad
inc
cmp
xchg
mov
push
cmp
aaa
mov
jno
les
icebp
sbb
js
xor
sbb
out
and
mov
mov
dec
sub
mov
lret
aas
fdivr
insb
out
les
xor
out
in
movsl
lahf
pop
mov
inc
xchg
js
arpl
adc
mov
push
sub
or
push
mov
scas
stc
in
xor
addr16
sbb
xchg
jns
les
and
or
sub
cmc
fsubl
lock
sub
cmp
loop
in
pusha
cmc
into
mov
or
sub
rcr
pop
movsl
mov
dec
xchg
xchg
xor
lcall
idivb
jecxz
sbb
data16
sbb
scas
push
push
in
stc
or
loopne
fwait
inc
int
sbb
mov
jle
mov
mov
stos
xchg
sbb
sbb
sub
sbb
jns
in
iret
jge
mov
xchg
xor
inc
int3
mov
fbstp
adc
push
dec
fimull
sub
iret
stc
fldl
sbb
mov
mov
ds
mulb
inc
adc
fwait
mov
mov
outsb
ss
sub
ja
cltd
jnp
jno
lds
push
arpl
dec
cmp
stos
mov
mov
jle
dec
adc
pop
bnd
xor
jb
pop
fisttps
out
das
jp
dec
out
or
push
test
roll
adc
add
adc
cwtl
sahf
xor
pop
ljmp
cli
adc
push
mov
pushf
js
ds
xchg
adc
icebp
nop
gs
pop
add
in
dec
and
ret
sub
add
adc
ror
repz
iret
mov
ja
mov
lods
add
pop
es
push
mov
lods
add
pop
or
jg
adc
dec
lock
aas
push
punpcklwd
inc
jg
ret
cltd
loope
sub
scas
mov
not
sub
dec
testl
xor
aaa
xchg
sbb
in
test
sub
out
outsl
and
or
jns
jb
aaa
outsl
lret
xor
es
mov
sbb
add
inc
adc
pushf
mov
cmp
dec
test
mov
inc
pop
out
xchg
pop
mov
jno
xor
jns
dec
loopne
cmp
je
out
inc
aaa
aaa
fmull
lcall
prefetcht2
sbb
inc
repnz
push
add
cmp
pusha
test
jl
aaa
jge
mov
loop
stos
popa
sub
mov
ret
loope
loope
das
jge
or
pop
mov
add
enter
adc
pandn
adc
mov
ret
mov
testl
sbb
jle
jle
addr16
mov
mov
pop
je
mov
push
inc
ds
xor
and
xchg
inc
daa
imul
jg
dec
stos
lcall
std
jp
es
je
pop
or
ja
cmc
mov
cmp
mov
xor
mov
sbb
mov
or
jecxz
daa
dec
mov
sub
lret
gs
pop
repz
outsb
paddsb
dec
xlat
and
mov
adc
andb
aas
jbe
in
addr16
and
cmp
shll
outsb
inc
push
mov
rcrl
xor
jp
pop
fcmovnbe
xchg
outsl
sub
jb
cmp
cmpsb
sbb
pop
sub
dec
pushf
ss
push
mov
jge
out
clc
scas
push
push
inc
pop
mov
xor
xchg
push
xchg
inc
orl
push
cmp
inc
int
movsb
xor
cwtl
xor
incb
mov
loop
out
cmp
shl
jecxz
dec
insl
test
and
inc
lods
ljmp
cmpsl
jo,pt
xchg
cmp
sub
adcl
mov
lea
pop
mov
sub
outsb
or
mov
lods
cli
ret
outsb
mov
fsubs
push
shlb
mov
mov
fs
repz
mov
jl
add
jecxz
mov
mov
dec
xchg
mov
leave
test
clc
pop
add
shr
inc
jl
outsb
jno
add
les
jb
rolb
jecxz
jno
jno
adc
sub
xchg
jae
adc
xchg
pop
cltd
inc
xchg
inc
mov
xlat
rcr
pop
mov
loopne
cmp
cmpsb
push
enter
insl
out
enter
xor
mov
stos
xorb
push
xchg
mov
pop
lods
test
mov
xchg
mov
xor
scas
pop
pop
xchg
mov
ret
je
mov
pop
pop
jb
loopne
js
inc
je
imul
out
enter
inc
adc
int3
lahf
mov
mov
inc
sub
mov
ret
dec
outsl
popf
data16
xchg
adc
inc
cmpsl
pusha
popf
orb
jne
inc
xor
sub
insb
mov
jle
jmp
imul
out
sahf
cltd
or
pop
loop
popf
scas
push
or
add
sbb
leave
adc
into
mov
test
out
pusha
or
inc
ret
push
roll
jge
aam
adc
scas
sbb
cmp
dec
pop
adc
bound
pop
and
jp
pop
xchg
dec
mov
jg
cwtl
push
pop
sub
xor
mov
dec
jmp
cmpb
std
sub
cwtl
test
adc
push
sub
push
pop
mov
fwait
ret
outsl
or
shll
arpl
mov
cmpsl
shrl
adc
xchg
lahf
cmp
inc
push
and
xor
adc
fsubrs
icebp
sbb
adc
push
out
push
jge
cld
pop
cld
outsb
inc
push
inc
adc
pop
xor
fnstenv
sbb
pusha
sarb
adc
int
arpl
jbe
repz
dec
sbb
call
pop
jmp
movsb
sti
adc
int
call
dec
xor
insl
dec
mov
cmp
rorb
das
test
jne
jo
or
aad
fidivl
dec
or
lock
xor
mov
push
mov
loope
mov
in
jmp
mov
cld
sub
sbb
notl
std
cltd
pop
add
stos
adc
movsl
push
test
in
data16
fisubs
xchg
popa
push
ret
cmp
out
xchg
jbe
fucom
push
or
and
into
and
push
fcmovu
sub
pop
pusha
mov
jo
pop
movsl
cmp
filds
pop
fs
adc
cmpsb
and
cmpsb
hlt
orb
dec
and
dec
icebp
xchg
es
or
data16
rcrl
inc
add
jecxz
inc
mulb
adc
leave
xchg
mov
xchg
test
daa
dec
stos
cmpsb
pusha
scas
das
or
test
sbb
pop
add
jnp
dec
imul
inc
mov
ret
push
mov
inc
mov
sahf
ja
mov
xchg
loopne
cmp
push
les
xor
xor
sbb
cli
jae
imul
imul
inc
mov
sub
xor
jmp
inc
inc
cmp
cmp
and
adc
mov
mov
and
push
jge
push
mov
and
pop
fsubr
sarl
cmp
or
cld
jmp
sub
inc
dec
jg
push
jbe
stc
jle
cmpsl
ds
cwtl
pop
and
pusha
dec
lods
js
mov
icebp
fcoms
aam
pop
std
lret
andl
add
dec
popa
cmp
adc
mov
add
sub
loopne
dec
cmp
jp
sbb
cltd
adc
outsl
stc
in
scas
jns
cmc
insb
jno
in
mov
xorb
enter
mov
es
adc
popf
iret
stc
xchg
jbe
outsb
xchg
test
fbstp
cmp
rcll
sub
push
pop
mov
ja
mov
inc
pusha
xlat
roll
sbb
int3
dec
or
xor
dec
mov
push
jmp
inc
mov
bswap
xlat
or
push
ss
cmp
stc
or
outsl
arpl
leave
scas
fwait
lds
lea
mov
mov
lods
and
cmp
cmp
test
enter
sbb
aad
xlat
lret
movsl
and
mov
aaa
ss
pop
loop
add
enter
xorb
mov
pop
cmpsb
cmovle
mov
mov
pop
shll
sub
lret
push
push
rorb
imul
push
inc
je
lods
inc
repz
dec
push
cmc
and
out
in
repz
lods
dec
les
xor
not
jo
call
int3
mov
adc
popf
add
xchg
sahf
cmp
test
maxps
lock
mov
pop
cmp
and
jg
lock
aaa
in
dec
xchg
gs
or
dec
fcoms
dec
insb
add
sub
inc
adc
push
sub
push
mov
aaa
mov
loope
outsb
adc
or
pop
xor
mul
pop
icebp
popa
movsb
hlt
std
xchg
pusha
mov
pop
shrb
sbb
cltd
push
sub
jno
hlt
jo
sbb
mov
sbbl
fsubr
sbb
pop
inc
fsubrs
into
insl
xchg
rclb
and
adc
mov
add
jp
fchs
pop
mul
add
add
ds
lock
and
movsl
jmp
call
inc
out
outsb
clc
and
sub
lds
ret
and
fwait
push
loope
or
or
movzbl
dec
dec
jl
stc
imul
ja
scas
adc
add
jno
test
cltd
mov
inc
jo
jnp
mov
lods
flds
cli
mov
jne
ror
sub
mov
mov
xor
mov
jl
inc
mov
ficoml
adc
repnz
vprotq
add
roll
push
out
aas
push
cmpsl
push
xlat
cwtl
pop
out
jnp
insl
sti
dec
push
ret
out
call
mov
scas
movsl
jecxz
push
ljmp
les
xor
cmp
aaa
xchg
jl
aam
and
add
lds
cwtl
sub
ljmp
pop
roll
scas
jbe
xchg
adc
dec
scas
push
sbb
pop
cmp
and
or
gs
push
mov
shlb
dec
aas
mov
lret
mov
cmp
sub
js
out
jns
ret
fs
es
inc
fstpt
test
push
lea
push
xor
js
jb
in
sbb
pop
gs
adc
xchg
pop
sarb
jb
mov
cltd
adc
pop
lea
out
mov
into
sbb
jmp
mov
outsb
cmpsb
loope
sbb
mov
test
outsb
or
loopne
sarl
shll
sbb
les
xor
inc
je
fcoml
in
dec
cmovg
daa
call
fadd
movsb
dec
outsl
jl
add
dec
aas
xlat
push
outsl
pop
mov
mov
cli
out
push
cmc
andl
jl
inc
push
in
pop
cmpb
repz
sbb
lds
dec
jbe
aaa
sub
sbb
jg
outsb
fdivrp
repnz
fdivr
cmpb
pop
push
jbe
out
lods
sbb
iret
jge
lcall
and
fmulp
lret
sbb
or
inc
and
sub
push
mov
xor
pop
dec
lcall
cwtl
add
imul
or
push
push
stos
dec
push
std
shrb
fdivrl
dec
dec
push
pop
cli
std
pop
pushf
mov
xor
bound
jp
adc
scas
data16
js
inc
pop
sub
mov
or
lods
dec
xor
sti
scas
xor
mov
test
push
les
outsb
bound
in
dec
mov
xor
int
cltd
pop
cmp
mov
inc
test
jo
inc
xchg
and
sahf
aad
rcrb
xor
mov
mov
cmpsb
sbb
lods
xor
rcrb
shr
int3
movsb
repz
jne
xchg
rolb
cmp
loopne
xor
icebp
pcmpeqb
add
aad
xchg
jecxz
push
mov
cs
cmp
lock
ja
pop
or
and
adc
xchg
sub
dec
push
adc
mov
jge
xor
pop
lret
lea
and
add
test
std
mov
sbb
popa
pop
or
inc
shlb
roll
ds
addl
mov
inc
leave
mov
xchg
lods
xchg
cltd
cmpsl
sub
dec
pop
mov
in
dec
fcmovbe
mov
or
aas
scas
data16
aad
pop
xor
stos
and
test
dec
lods
in
mov
das
mov
daa
outsl
pop
push
mov
hlt
inc
iret
inc
popf
out
enter
enter
cmp
hlt
cmpsl
fwait
test
inc
mov
sbb
rclb
dec
popa
in
aam
sbb
or
inc
and
clc
jle
push
jo
push
iret
outsl
xor
lea
das
cmpsl
ficoms
imul
cmp
xor
add
int3
pop
addr16
fstps
loop
dec
pusha
jnp
inc
inc
xor
into
cwtl
pop
cmp
fcmovnu
pop
lcall
xlat
jge
or
std
add
xchg
cmp
bound
mov
fadd
in
mov
mov
dec
out
push
lret
adc
cmp
scas
mov
inc
fisubrl
sahf
jg
nop
stc
imul
add
jne
fdivr
icebp
push
sarb
call
mov
pop
pop
adc
push
and
lahf
js
sbb
cmc
jae
sub
cltd
cmpb
out
dec
adc
fs
movsl
pusha
xchg
cwtl
aad
jge
pushf
add
cmp
aaa
adc
aam
mov
test
out
insl
mov
mov
std
jnp
or
cmp
mov
test
dec
insb
nop
mov
fdivr
jns
sar
imul
jnp
sbb
inc
cmp
jmp
ret
mov
call
xchg
popf
push
int
lret
mov
xchg
sahf
inc
pop
add
lock
add
adc
xchg
push
mov
mov
cwtl
sbb
xchg
cld
sahf
mov
aad
sti
sar
cltd
pushf
in
gs
mov
add
imulb
sti
dec
jmp
jne
xor
and
js
jb
lahf
or
data16
outsb
xchg
das
mov
repnz
ss
ds
int
mov
aad
sbb
out
cs
addr16
inc
pop
popa
sbb
test
mov
sub
dec
gs
imul
jo
mov
mov
and
outsb
mov
push
dec
lds
mov
mov
fistpll
or
inc
lods
cmp
test
jg
dec
ficoml
push
test
lret
push
jecxz
inc
gs
lods
sbb
cmp
xchg
or
lret
cmp
js
inc
repz
cs
adc
es
bound
inc
xor
push
mov
pop
add
movsl
push
add
ror
shl
insb
sbb
int3
inc
cmp
out
and
and
adc
icebp
scas
xor
data16
fildll
and
inc
fs
adc
jno
cmc
and
add
aam
in
sbbl
xchg
rclb
stos
and
mov
call
jmp
inc
pop
loopne
jmp
fistps
adc
jmp
call
popf
scas
add
test
xlat
and
add
sbb
mov
jnp
cmpsl
hlt
mov
test
mov
sub
dec
popf
shll
gs
jle
nop
addr16
inc
push
add
pop
or
inc
mov
lea
mov
scas
pop
popa
jmp
into
pusha
sti
mov
jge
and
sarl
mov
mov
outsl
loope
cmc
mul
enter
push
addl
imul
in
cmpsb
neg
sbb
iret
iret
les
aaa
dec
jle
or
xor
and
stos
js
xchg
shlb
mov
mov
pop
xor
mov
jne
ds
lock
adc
lea
ja
shl
adc
cmp
sbb
inc
add
dec
dec
sub
xchg
sub
in
fisubrl
loopne
push
mov
mov
or
mov
loopne
sub
or
mov
inc
andb
jp
mov
push
mul
lock
shrb
addr16
sub
adc
lods
add
fimull
mov
or
sbb
icebp
xchg
mov
pop
sbb
mov
push
mov
hlt
cld
jo
pop
add
jle
mov
cld
hlt
int3
std
add
sbb
into
arpl
lret
insb
push
lret
mov
hlt
insb
rorb
add
mov
mov
sub
enter
xorb
jmp
addr16
add
push
orl
sub
pop
xchg
int
xorl
dec
mov
popa
dec
pop
adc
out
insl
enter
in
jnp
out
mov
inc
push
pop
lret
lea
xor
sbbl
push
insl
dec
mov
adc
test
popf
adc
popf
pop
or
pop
sub
insb
push
sbb
pushf
sub
xor
or
pop
and
inc
bound
hlt
movsb
cmp
and
inc
mov
pop
mov
jno
pop
jns
fildll
in
std
push
sub
iret
dec
icebp
test
mov
imul
push
out
les
xchg
mov
pop
scas
jle
ret
std
sbb
jns
and
cmc
dec
inc
repnz
add
insb
xor
jo
into
aam
lret
sahf
sub
lcall
xor
xor
inc
push
inc
xlat
das
push
adc
rcr
psadbw
imull
cmp
adc
mov
cmpl
mov
sbb
stos
jnp
fadd
pop
insl
inc
dec
inc
cwtl
xchg
mov
and
fists
push
mov
xchg
and
xchg
sub
dec
sbb
push
sbb
hlt
and
loope
hlt
lahf
mov
xor
mov
repz
jecxz
sbb
mov
pop
or
xor
in
rorl
dec
in
mov
iret
lea
outsl
bound
adc
xchg
inc
mov
mov
sbb
add
cld
xor
test
aas
test
rcrb
mov
jmp
fidivrl
ret
pop
mov
mov
clc
jmp
push
cmp
js
jl
xchg
mov
ret
jp
xchg
jbe
pop
and
out
sahf
testb
mov
mov
mov
jne
mov
lock
daa
push
mov
repz
push
enter
fs
push
sbb
popa
jo
addr16
rcll
scas
hlt
or
aam
jns
mov
inc
andl
roll
movsl
insl
mov
sub
les
out
pop
sahf
mov
negb
fdivr
sub
es
repz
mov
int3
hlt
adc
in
inc
movsl
arpl
pop
cmp
xchg
adc
and
repz
mov
dec
sub
mov
roll
cmp
push
add
pop
sbb
lahf
repz
push
inc
pop
mov
sub
xchg
into
test
sub
mov
sbb
bnd
in
push
popf
sbb
pop
and
lret
dec
les
push
in
outsl
cmp
sbb
mov
xor
inc
add
orl
sbb
in
mov
insl
je
xor
mov
aad
mov
bound
inc
insb
xlat
lods
repnz
mov
inc
mov
pop
fcoms
insl
out
cld
push
push
cmpsb
sub
dec
dec
and
sub
xor
shll
cmp
cltd
adc
lock
adc
sbb
add
stc
jle
call
or
xchg
sbb
adc
sub
sbb
mov
call
or
adc
sbb
mov
movsl
inc
jp
rol
call
or
aad
pushf
mov
or
sbb
stos
xchg
sub
scas
lods
test
inc
aad
loope
in
mov
clc
pop
and
xlat
and
gs
inc
jle
and
sahf
out
int3
xlat
xor
aas
dec
mov
push
dec
dec
jo
jp
xlat
cmp
jnp
push
adc
int
sub
sti
lcall
xlat
adc
jne
outsl
xchg
arpl
xor
adc
das
cmp
jo
and
in
mov
call
dec
cmpl
xchg
jb
cli
sub
cmpsb
mov
add
movd
test
adc
mov
sub
dec
rcl
dec
hlt
sub
aas
out
xchg
cmp
cld
dec
ljmp
imul
and
in
push
mov
add
andb
fucomip
dec
cmp
push
xchg
loop
mov
sub
cmpsb
out
js
fcomps
outsb
cmp
popf
or
xchg
inc
out
inc
fucomip
push
js
ljmp
sbb
pop
clc
in
decl
stos
inc
adc
cmpsl
add
nop
pop
push
mov
je
mov
insb
dec
or
imul
push
xchg
je
ljmp
dec
cmp
sbb
pop
mov
or
adc
je
sub
cmp
inc
stos
inc
scas
out
out
stos
mov
iret
jb
cmpsl
add
and
fwait
mov
mov
push
loope
push
das
inc
iret
test
cmpsb
out
out
mov
push
jns
dec
adc
add
testb
jnp
subb
dec
mov
add
scas
pop
xchg
or
jne
js
sbb
or
push
or
push
lea
stc
repz
inc
add
push
push
jmp
js
fsubrs
jp
cmpsb
adc
mov
push
add
sbb
loope
inc
jle
push
pushf
cltd
les
les
sub
mov
add
leave
xor
pop
sub
sub
rcrb
arpl
jmp
and
add
lret
in
inc
fwait
int
pop
jns
test
push
dec
mov
subl
insl
les
daa
pop
ds
out
lret
mov
pusha
add
sbb
icebp
sub
cmp
subl
xlat
mov
movsb
out
cmpsb
xor
mov
sub
xchg
divb
cs
jge
pop
outsb
std
mov
push
lea
mov
stc
sub
inc
push
jge
xor
push
adc
sbb
xchg
push
gs
cmp
cmp
jb
cmp
imul
roll
pop
adcb
sub
dec
dec
andb
and
loope
push
sub
iret
cmp
and
clc
leave
in
push
in
ds
sub
aas
decb
add
mov
lds
add
mov
push
push
enter
les
sub
or
loope
push
adc
cltd
cmp
hlt
stos
mov
jge
cmp
das
test
jne
xchg
lods
and
push
inc
enter
dec
mov
mov
inc
or
adc
rcrb
xor
mov
loope
arpl
lock
jp
mov
push
in
push
in
clc
in
jle
mov
shr
adc
xchg
xchg
stc
cmp
cli
cmp
test
dec
loop
fnstenv
test
rcll
clc
dec
pop
loope
mov
mov
aaa
xchg
xor
dec
cmp
mov
pop
sbb
in
sbb
pop
mov
jbe
jg
and
mov
sub
and
scas
pop
aam
adc
jo
in
and
xchg
ss
cmp
jl
testb
ljmp
out
imul
mov
ljmp
mov
test
pop
xchg
push
lods
data16
mov
cmpsb
daa
or
push
jb
or
pop
lret
adc
mov
jns
xor
jmp
les
or
add
inc
bswap
push
xchg
cmpsl
fisttps
cli
mov
lahf
xor
fs
push
mov
test
push
or
jmp
pop
pop
into
into
fcompl
or
dec
jae
push
test
aaa
pusha
rolb
xchg
or
insb
and
or
movsl
push
aam
jmp
aaa
mov
xchg
jecxz
daa
xchg
jp
test
shrb
cmc
insl
rcr
adc
adc
push
jne
xlat
sub
sbb
ds
sti
idivb
sub
push
push
push
cmp
fwait
or
jl
dec
dec
popa
push
xor
sbb
aaa
cld
icebp
jecxz
dec
sbb
dec
int3
call
mov
cmpsb
test
popf
mov
dec
jbe
shll
shrl
jge
leave
pop
in
jg
jo
lock
xchg
and
das
sarb
pop
push
jb
pop
es
mov
xchg
mov
cmpsb
inc
aam
or
xchg
xchg
fstpl
dec
inc
pop
cld
jmp
es
cmc
push
jmp
or
shlb
or
mov
and
scas
mov
or
repz
lcall
jg
fcomps
jmp
daa
das
sbb
inc
nop
mov
xor
movl
int3
push
mov
inc
mov
fistpl
sub
mov
fwait
and
call
popa
xchg
ret
push
sub
jg
add
adc
jge
cmp
sub
adc
aam
notb
xor
pop
xchg
in
sbb
bound
mov
jo
stos
mov
mov
jo
push
lock
push
inc
inc
jmp
cmpb
pop
mov
xchg
xor
cmp
lea
add
std
mov
cmp
leave
bound
push
jns
xchg
outsb
iret
and
pop
mov
mov
fisttpl
pop
mov
sub
ljmp
lcall
cmp
stos
sbb
loopne
mov
xor
pop
inc
rclb
cmp
adcl
aaa
and
inc
and
inc
cmp
lea
aam
or
in
lahf
pusha
shll
mov
and
aad
ja
imul
mov
scas
rcll
pushf
push
jl
xor
scas
add
fcoms
sbb
push
cmp
gs
jecxz
mov
les
pop
jecxz
adc
daa
mov
adc
pop
in
ret
jmp
cmp
rcrb
pop
push
insb
jecxz
lea
ss
or
pop
dec
je
add
sub
inc
iret
pop
int
and
enter
leave
push
mov
addb
std
sbb
repz
in
mov
aas
sbb
lds
pop
int
pop
rcll
arpl
or
std
imul
jmp
sbb
aad
es
mov
sahf
jecxz
les
jne
in
sti
sbb
movsl
push
sti
sbb
popf
cltd
xchg
pushl
add
push
sbb
jl
xchg
lods
mov
stc
adc
js
or
sub
mov
jno
xchg
lea
mov
pop
shlb
dec
jno
add
pusha
push
jmp
cltd
dec
or
jp
cmp
scas
pop
jmp
lock
fldt
push
mov
jbe
fs
xor
add
adc
mov
fs
insb
addb
mov
insb
pop
sbb
loop
adc
shl
adc
dec
push
jle
cmp
mov
mov
jecxz
fcomip
arpl
push
test
inc
xor
sbb
pusha
mov
or
mov
or
push
push
push
sti
repnz
sbb
test
movsb
sarl
leave
push
popa
loopne
adc
mov
and
out
into
and
stos
fs
sub
mov
or
into
test
sti
shlb
stc
icebp
jo
mov
mov
sub
and
pop
sbb
ljmp
icebp
xor
lar
pusha
cmpsl
pop
mov
push
mov
lret
movq
or
mov
xor
mov
test
mov
orl
jbe
inc
xor
add
inc
nop
pop
sbb
sbb
sub
cmpsl
popf
aam
popf
shll
clc
and
xor
cmp
mov
sub
dec
pop
mov
clc
lahf
loopne
hlt
popf
or
ret
mov
push
and
mov
imul
pop
js
mov
jns
adc
inc
aaa
test
cwtl
cmp
stos
jns
lret
rorl
aas
stos
inc
movsb
fwait
sub
subb
mov
dec
xchg
ret
dec
loop
mov
adc
insb
insb
mov
movsb
push
lea
and
pop
jne
mov
sbb
xchg
ret
repnz
ret
jo
jo
inc
lock
outsb
add
out
jl
in
arpl
mov
add
mov
sbb
jno
sub
adc
call
dec
adc
xchg
mov
add
es
das
sbb
sbb
and
lcall
leave
xor
mov
xchg
xchg
test
cmpl
pop
pop
sub
jne
sbb
dec
jnp
test
fdiv
or
int
scas
push
mov
mov
loope
adcl
push
arpl
into
and
and
mov
push
pop
add
ror
dec
jecxz
fsubl
xchg
imul
insb
mov
jle
fs
lods
movsb
push
sahf
mov
xchg
push
and
pop
dec
pusha
cmp
imul
adc
movl
pop
out
push
gs
fucom
inc
scas
pusha
stos
lret
int
std
inc
cmp
ret
mov
mov
lcall
sbb
aaa
scas
adc
push
test
adc
pop
pop
negb
test
sbb
or
arpl
stos
cmpsl
sub
aaa
std
mov
mov
adc
xchg
mov
lds
mov
jno
test
fdivrl
out
mov
sbb
inc
addl
std
ja
xor
mov
inc
sub
jge
std
cmp
bound
xchg
dec
dec
subb
mov
mov
pop
int
insl
in
sarb
xor
jge
call
inc
lcall
mov
inc
in
xchg
dec
pop
inc
xlat
dec
sub
paddsb
jae
adc
ret
and
out
xlat
jo
loopne
gs
and
push
jl
andb
xor
leave
inc
mov
mov
dec
sbb
cmpsb
movsl
pop
out
out
lods
insl
scas
and
mov
inc
in
and
xchg
mov
inc
ficompl
lret
inc
and
out
mov
mov
out
int
mov
mov
orl
pop
iret
shlb
and
scas
or
jl
mov
insl
push
movsb
in
lock
mov
push
arpl
iret
rolb
movsl
loopne
lock
inc
mov
push
repnz
dec
mov
cmc
scas
xchg
adc
or
xor
loop
sbb
sbb
insb
jno
add
mov
rclb
pop
bound
lcall
loope
movb
dec
test
into
scas
hlt
pop
jne
enter
cs
pop
mull
in
sub
icebp
xor
xor
popa
lret
pop
sbb
stc
or
xchg
push
fs
in
outsl
inc
sub
mov
je
sahf
ret
movsb
sub
and
fcompl
or
xchg
adc
sub
jno
mov
cmp
fiadds
jge
adc
int3
divb
jnp
and
movsl
out
and
sub
loopne
popl
fdivrs
shlb
repnz
bound
sahf
pushf
jle
cmc
push
push
rorl
shlb
mov
fldcw
daa
xchg
lea
sbb
aaa
std
movsb
mov
imul
pop
jnp
pop
fcomip
outsl
incl
jg
pop
xchg
pop
dec
sub
or
test
aaa
pop
stos
jb
mov
adc
add
cli
call
xchg
dec
cmpsb
int
add
mov
and
repnz
hlt
les
mov
cmpsb
add
jle
mov
ret
data16
inc
movsb
mov
mulb
cmpsb
xor
sbb
xlat
jbe
xchg
jmp
adc
push
loopne
imul
lahf
xor
xchg
jle
out
inc
daa
call
arpl
icebp
scas
ja
xchg
jne
test
inc
aad
out
insl
test
mov
ja
push
rclb
pusha
pusha
sbb
mov
adc
xchg
sar
sti
xchg
lahf
and
lahf
fwait
inc
out
addb
fiadds
add
add
cmp
xor
add
out
pop
jle
imulb
add
and
sub
cmpsb
xor
add
cmp
mov
adc
xchg
int
adc
in
pop
test
pop
call
sbb
pop
add
scas
cmpl
not
mov
mov
jmp
shrl
jnp
cwtl
sbb
aas
pop
fidivs
cmc
fnstsw
out
lds
arpl
shl
not
push
xchg
sbb
inc
sbb
cmc
lahf
addb
adc
movsb
mov
inc
pop
push
mov
mov
aaa
es
cld
js
cmc
ror
loop
xchg
push
dec
mov
mov
mov
mov
aaa
mov
cmp
loopne
mov
aas
cwtl
cmp
add
and
xor
jae
in
xchg
mov
je
bswap
mov
sarb
enter
push
push
movsb
call
data16
cld
push
shlb
pop
xor
nop
outsb
in
lret
insb
scas
sub
js
shrb
and
cltd
fdivl
call
sub
pop
xchg
in
lock
pop
xor
out
mov
fcomps
and
mov
jae
je
or
sbb
and
jp
inc
pop
in
dec
ficoms
std
clc
mov
bound
push
adc
sti
mov
or
mov
subb
test
mov
mov
cltd
imul
gs
stos
jno
jno
pop
rcrl
jge
mov
pxor
popa
add
inc
daa
or
mov
or
jg
mov
lretw
sbb
mov
cld
movups
imul
adc
add
dec
into
inc
in
popf
jle
jge
das
xor
add
adc
sbb
mov
pop
mov
adcl
ficoml
and
int3
pop
push
lods
sbb
cmpsb
mov
xlat
adc
in
ljmp
gs
xor
aad
ja
push
enter
cmp
sub
shl
pop
shll
inc
dec
mov
push
add
mov
add
movsb
cmp
mov
xor
stos
mov
add
sbb
outsl
sbb
scas
sbb
fwait
jmp
popa
loope
jne
cmc
sbb
in
jp
dec
add
jbe
adc
push
xchg
ja
cmp
arpl
lods
jnp
gs
je
icebp
ficompl
stos
rcrl
dec
loop
fcoml
pop
mov
ja
cs
rcll
sbbb
hlt
cli
xor
lds
in
sub
lret
xchg
or
scas
aas
out
cmpsl
out
dec
std
je
or
loope
sarb
nop
and
push
push
imul
lret
jnp
cmpsl
shrl
mov
divl
aam
mov
pusha
lcall
jge
push
out
in
cmp
jae
push
xor
xchg
mov
icebp
cmpsl
test
outsb
sub
xor
shrl
das
aas
mov
shrb
imul
popf
xchg
sub
jp
icebp
cmp
inc
mov
push
in
fildl
fnsave
movsb
fcomp
outsb
and
sti
mov
sub
addr16
pop
lods
jecxz
and
out
push
lods
int3
xchg
repnz
movsl
adc
out
mov
jp
xchg
push
dec
mov
ss
sub
and
push
add
xor
outsb
mov
sbb
lods
icebp
pop
and
dec
add
or
cmpsl
fdiv
bound
dec
fbld
into
or
repz
xchg
pop
cmp
push
push
xor
xchg
testl
adc
int
lea
sub
xor
mov
mov
push
jmp
es
jmp
xchg
xchg
jbe
add
jmp
mov
mov
mov
jmp
daa
push
inc
test
jns,pn
lock
jecxz
mov
mov
jae
mov
xor
cltd
int
add
mov
xor
xchg
mov
icebp
push
lods
daa
mov
mov
cmp
in
xchg
hlt
push
pusha
cmpsb
dec
cltd
inc
dec
mov
pop
mov
mov
hlt
dec
arpl
insb
icebp
sbb
test
sub
lea
lea
or
xchg
push
shrb
rclb
ret
inc
dec
fimull
outsb
popf
cmp
movsb
scas
mov
and
push
mov
je
loope
xchg
cmp
out
es
xchg
xor
xchg
push
arpl
xor
sub
jbe
aam
inc
cmp
sbb
adc
pop
test
add
cmp
out
xchg
xchg
ljmp
add
cmpsb
xchg
sar
loop
int
pop
push
lret
arpl
imul
cmp
mov
jae
xchg
cltd
dec
aad
inc
mov
and
dec
ljmp
xlat
and
sub
jb,pt
mov
shll
xlat
into
cmovl
cmp
adc
repz
jmp
push
negl
xor
and
js
add
or
es
insb
cmp
pop
xchg
mov
lcall
or
add
cwtl
push
addr16
mov
pop
xchg
pusha
popa
push
mov
dec
movsl
in
imul
lock
data16
mov
test
mov
xor
jns
pushf
out
push
fnstcw
xchg
ljmp
and
movsb
scas
sbb
pop
sub
adc
push
add
xor
popa
inc
andb
mov
dec
mov
push
outsb
xchg
add
jo
or
dec
xor
jne
loope
je
jl
mov
add
cmpsl
xchg
in
popf
mov
dec
xlat
jle
xor
mov
std
mov
mov
jae
cmpsl
pop
xchg
leave
shl
je
mov
xor
out
push
dec
ficoms
in
pop
jle
sub
hlt
fwait
mov
mov
mov
mov
cmp
mov
ret
push
pop
inc
sbb
mov
sbb
lea
sbb
pop
popf
dec
jle
pop
int
jmp
and
loopne
mov
cli
movsb
jnp
fmulp
imul
xchg
test
sbb
pop
dec
aas
loopne
bound
inc
xor
xchg
lret
adc
mov
insl
out
andb
hlt
hlt
lock
jns
std
lea
add
dec
loopne
jns
mov
or
fisttpll
jle
mov
mov
xchg
mov
aas
add
lcall
mov
in
push
cmp
pop
xchg
pusha
push
mov
fmull
iret
leavew
mov
ljmp
xchg
sub
jno
stos
push
repz
lret
jnp
cmpsl
jp
dec
sbb
into
sub
loope
sbb
rorl
scas
sarb
jns
jbe
dec
add
out
dec
lock
bound
jns
push
mov
jbe
and
test
push
push
and
add
mov
jo
and
das
sbb
sub
push
and
ja
pop
ds
pop
sahf
mov
push
out
jno
subb
push
pop
popf
sbb
ljmp
mov
and
adc
sbb
inc
in
dec
in
mulb
clc
xchg
push
rolb
nop
cs
push
in
mov
inc
xlat
inc
adc
xor
fwait
and
jne,pn
inc
fisttpll
pusha
cmc
sub
jae
sahf
loop
xchg
sub
bound
cli
icebp
into
adc
or
inc
mov
pop
xor
je
pop
pop
test
or
stc
jge
fcoml
and
fnstenv
test
sarb
aas
addb
dec
xorb
mov
lods
mov
mov
bound
sub
xor
sbb
dec
les
mov
lods
lock
dec
aas
mov
mov
adc
in
sub
loop
or
inc
sbb
mov
fsubl
mov
fsubrp
sbb
or
mov
jb
fildl
out
aad
push
aaa
adc
iret
xor
sbb
sub
sub
cmpsl
add
jp
push
js
bound
imul
push
and
mov
mov
push
aas
cwtl
adc
pop
xor
test
orl
or
xor
and
push
mov
popa
and
jns
sub
cmc
xchg
mov
call
je
call
stc
in
mov
mov
cld
mov
and
jbe
and
sbb
and
inc
popf
or
lret
push
sub
leave
cmp
imul
test
jnp
stos
lods
inc
lock
pushf
or
bound
orb
test
pushf
lds
jge
xchg
pop
sahf
repz
adc
into
inc
jbe
jnp
les
push
stos
xor
ret
scas
out
daa
push
das
repz
ljmp
stos
pop
idivb
xor
jmp
fcomp
dec
inc
push
dec
mov
cld
imul
lods
xchg
mov
cmp
mov
rep
test
fldt
and
xchg
xchg
push
sbb
stos
cmp
popa
lcall
mov
mov
jmp
imul
cmpsl
jp
ja
les
and
addr16
pop
sub
sub
lds
and
insl
cwtl
in
dec
shrb
add
outsb
dec
imul
fwait
xor
and
enter
jg
fldt
jne
movswl
repz
rol
sbb
xor
scas
lea
xorb
fisubl
gs
cmp
jmp
fisubl
clc
movl
sub
inc
adc
cli
mov
xor
shll
and
adc
xor
stc
cmpb
ret
gs
inc
bound
daa
and
gs
sti
fs
xor
xchg
xchg
rolb
lock
out
sub
add
or
jns
loopne
xchg
jae
xchg
cmp
mov
xor
mov
pop
jl
nop
mov
shrb
gs
fists
popf
insb
das
or
iret
sbb
cmpsl
pop
in
xor
cld
test
jbe
dec
mov
mov
inc
adc
in
jp
inc
cmpsl
dec
lcall
xor
dec
cmpsl
dec
dec
mov
ss
sti
pop
mov
add
in
jno
mov
dec
leave
scas
test
mov
xchg
mov
dec
cwtl
aaa
xchg
mov
cs
sub
lahf
leave
hlt
cli
imul
inc
mov
mov
movsb
cltd
shl
xchg
or
jae
stos
adc
loop
push
or
push
fsubrl
inc
push
cmp
mov
out
icebp
stc
fwait
dec
rorl
insl
fnstenv
lahf
jmp
and
jnp
pop
inc
adc
call
frstor
out
movsl
push
mov
or
or
sub
add
repz
cmp
sar
mov
mov
lds
push
pusha
dec
popa
testb
xor
sub
lea
jecxz
movsl
leave
mov
daa
push
cmpl
ret
add
decl
mov
jg
dec
push
sub
fcompl
repz
pop
xor
aaa
push
mov
pop
shlb
pop
scas
inc
jg,pt
xchg
sbb
mov
subl
mov
xchg
aas
xchg
mov
xchg
movsb
ljmp
and
les
popf
or
xchg
mov
xchg
movsl
sbb
jnp
cmc
pop
sbb
mov
and
aaa
mov
xor
dec
pop
add
xacquire
cltd
mov
push
sbb
jecxz
jle
xchg
bound
ret
in
pop
jnp
xor
lret
data16
in
rcrb
mov
and
lcall
in
mov
std
sarb
xor
outsl
movsb
insl
xchg
loop
cmpsw
shll
xchg
int
cmp
test
or
sbb
inc
cmp
out
sub
fsubl
jmp
jbe
push
popf
into
and
ss
pop
mov
sbb
popf
jbe
cmc
in
pop
jecxz
fmul
in
pusha
jnp
out
in
xor
data16
push
sbb
push
jge
sahf
mov
push
cmp
test
inc
push
mov
lock
out
les
in
ja
ljmp
ret
rolb
xor
push
xchg
or
fildll
or
leave
shlb
loopne
mov
call
fstpl
mov
rorl
add
test
cltd
divb
xchg
insl
add
add
push
mov
sahf
test
sbb
out
sahf
hlt
cmp
adc
mov
ljmp
imul
idivb
push
xchg
insb
push
inc
mov
cmp
insb
sub
adc
lahf
out
sub
adc
mov
fsts
adc
push
rorb
leave
cwtl
dec
pop
xor
mov
packssdw
lea
or
dec
xchg
and
ljmp
out
jecxz
gs
cmp
or
out
xor
jo
les
out
push
mov
aas
xor
sbb
cmp
inc
mov
or
lcall
add
mov
fdivl
mov
movsl
xor
lahf
xor
xchg
outsb
push
loopne
cmp
push
hlt
roll
cmpsl
jle
in
stos
cmpsb
fwait
xorl
daa
push
and
mov
add
icebp
jecxz
sub
xchg
sar
xchg
push
or
aas
mov
dec
ret
add
mov
sub
scas
sub
imul
test
push
fsubrs
dec
popf
aas
and
cmp
fs
mov
mov
inc
gs
xchg
shrb
ret
pop
mov
aaa
push
mov
cmp
outsl
cmp
addr16
lock
dec
cmp
jcxz
sub
ja
sbbl
mov
jg
xchg
repnz
jae
repz
call
jg
inc
mov
mov
or
pop
pusha
fldt
sub
sub
add
jns
hlt
stos
mov
mov
into
xchg
leave
je
dec
lds
aaa
inc
fisubrl
mov
scas
sti
xorl
cwtl
loope
push
jmp
stc
iret
xor
push
fstp
lahf
int3
imul
daa
pop
ja
in
rorb
sbb
xchg
xchg
mov
lods
mov
cmc
mov
in
shlb
pop
sub
stos
shl
sub
hlt
pop
push
dec
cli
pop
negb
aas
fdivrs
sub
fldcw
cltd
call
stc
push
das
xchg
jno
mov
mov
imull
dec
mov
adc
sbb
pop
mov
or
or
sbb
dec
test
cmp
adc
les
xchg
cmp
int
test
into
mov
hlt
ret
mov
popa
test
in
daa
push
lret
adc
sahf
pop
in
dec
out
sbb
hlt
lcall
jmp
xchg
out
add
ljmp
jae
cmp
stc
test
cld
cld
pop
jle
ret
scas
movsw
or
cwtl
out
addr16
in
jnp
xchg
notb
lcall
jmp
insb
aas
jne
pop
pop
pop
xchg
xchg
lods
push
addr16
cmp
or
mov
fcomip
call
int3
lods
sbbb
es
add
pop
mov
adc
std
xor
loope
stc
inc
popa
jno
insl
and
icebp
in
stc
adc
mov
cmpsb
xor
lea
stos
push
shlb
jbe
sub
or
nop
lret
loopne
sub
repz
push
loopne
dec
mov
into
inc
or
add
adcb
mov
jmp
inc
cmc
dec
lea
xchg
cmp
inc
testl
dec
pop
jne
lds
pop
mov
and
push
inc
int3
sub
rolb
dec
fnstsw
sahf
movsb
push
or
imul
scas
sarl
aam
jg
xor
cmp
js
mov
xchg
cmp
xchg
jbe
test
xchg
cmp
mov
setne
imul
ffree
mov
in
sbb
lock
lret
out
mov
mov
adc
xchg
shl
ret
sub
fsubr
in
jg
mov
pop
fcmove
cs
fstpl
push
add
cmp
xorl
sub
mov
cmpsb
je
das
or
sub
roll
lea
lret
data16
add
mov
dec
shlb
jb
dec
dec
in
cli
lock
jne
outsl
push
adc
add
cld
push
mov
fsts
add
mov
add
arpl
mov
mov
inc
jp
push
test
imul
xchg
pop
int
jge
lea
lea
jbe
lock
adc
mov
stc
les
ja
jb
mov
lea
mov
fcoml
test
or
add
in
jae
xchg
xchg
jecxz
inc
inc
sbb
sti
pop
mov
mov
scas
sbb
push
mov
orb
push
filds
call
sbb
push
mov
jp
jns
incb
shrb
cmp
nop
push
and
adc
mov
xchg
push
inc
jnp
push
inc
xor
hlt
cmpsb
xor
mov
ficoms
ljmp
test
mov
gs
es
add
push
cli
cmp
dec
xchg
inc
push
mov
sbb
pusha
adc
loope
test
dec
push
cltd
sbb
out
ljmp
lds
cmp
mov
out
mov
int3
out
aad
mov
jns
cmpsl
xchg
xchg
push
mov
sub
imul
cli
loopne
pop
jg
lret
cmp
sub
or
popa
adc
ljmp
pop
cli
push
leave
xchg
add
int3
imul
shl
push
push
dec
pop
sub
mov
pusha
inc
pop
xor
sbb
bound
cld
test
push
sti
sbb
and
mov
and
ret
push
sub
cmp
cmp
mov
andb
clc
xchg
push
addl
push
int
call
mov
jbe
andnps
cld
inc
mov
jmp
and
mov
dec
insl
dec
sbbb
inc
pusha
sub
push
inc
dec
mov
loop
rolb
fiaddl
stc
mov
mov
movsl
aam
mov
stos
mov
push
sub
xchg
in
sub
or
insb
jmp
orl
inc
hlt
pop
leave
push
sbb
dec
add
aam
adc
lahf
lahf
mov
inc
add
inc
roll
mov
lock
scas
ljmp
outsb
pop
cmp
mov
cmp
idivb
cmp
ss
inc
arpl
ret
call
sbb
cmpsl
adc
pushf
jge
loop
pushf
xor
jnp
cmp
adc
out
cld
stos
mov
adc
loopne
call
inc
cli
in
push
sahf
notb
outsb
insl
inc
push
shll
add
stos
jl
lret
ds
insl
das
xor
mov
jmp
mov
cltd
dec
or
icebp
subb
sbb
pop
adc
xchg
orl
jo
push
sub
arpl
lds
add
mov
mov
cmp
add
movsb
lret
add
cltd
add
std
inc
xchg
fs
aam
inc
xchg
leave
mov
xor
shrb
fimull
inc
scas
push
dec
gs
stos
imul
inc
jb
mov
nop
arpl
shrb
outsb
imul
mov
test
loop
sbb
and
push
test
pop
push
icebp
jb
stos
inc
sar
sub
aaa
cwtl
hlt
mov
fdivp
push
pushf
inc
fildll
sbb
js
or
mov
clc
xchg
sub
or
jno
cwtl
inc
jl
leave
mov
aam
test
sbb
jle
jle
rolb
data16
xor
jo
mov
dec
sub
cmp
in
flds
std
xchg
dec
or
dec
movsl
push
scas
leave
lcall
and
scas
inc
fsubrs
shrb
loopne
shlb
push
cli
push
call
iret
sub
clc
das
mov
sub
push
jg
mov
out
adc
out
and
mov
enter
jbe
add
xor
test
cmp
sbbl
jle
and
sbb
sub
sub
into
fisttpl
notl
ret
shl
pop
sub
je
jle
jl
sbbl
xor
cltd
mov
pop
lea
mov
pop
xor
cs
mov
in
in
into
inc
setge
inc
mov
mov
push
negb
mov
pop
jns
jge
dec
and
mov
sbb
mov
mov
lahf
fistps
idivb
ja
ljmp
jb
add
push
and
shrl
cmp
test
fisttpll
icebp
popa
dec
xchg
push
lahf
daa
jle,pn
jmp
sbb
in
add
pop
pop
lds
xlat
lret
mov
pop
mov
fs
jnp
cli
addr16
aaa
aad
fucomi
or
sti
shll
adc
cmp
mov
pop
outsb
fldt
jae
push
arpl
sub
add
adc
repnz
or
pop
adcl
mov
dec
je
adc
or
sbbl
inc
and
sbb
je
ljmp
movsb
cmp
scas
jbe
fistpll
cld
js
jnp
stos
inc
push
jns
sbb
mov
sub
je
es
dec
shlb
jbe
rcrl
push
lea
sub
sbb
dec
jo
mov
pop
std
xor
inc
cmp
xchg
in
cmpsb
mov
adcl
scas
sti
mov
in
dec
push
sbb
jnp
mov
lds
sbb
mov
sahf
pop
sub
jg
mov
cld
add
push
inc
pop
dec
mov
arpl
mov
add
dec
xlat
xchg
xchg
jge
cli
test
xchg
stos
push
rcrl
or
xor
imul
lds
cmpsb
pop
stos
les
js
mov
out
add
mov
mov
dec
daa
and
dec
shrb
in
shl
jo
add
faddl
xor
aaa
add
mov
pop
stos
rorb
cmp
sarl
into
insl
sbb
icebp
mov
nop
aad
mov
cmp
xor
or
jmp
mov
cli
sahf
lods
add
and
data16
enter
fistl
iret
jg
divb
mov
das
push
adc
scas
jecxz
and
jae
fdivrs
aam
ss
sub
xchg
xor
or
inc
in
lahf
in
sbb
or
test
les
pushf
mov
push
sbb
pushl
or
xchg
add
xchg
test
mov
in
xchg
sbb
jb
cli
shl
sbb
into
loop
sti
roll
mov
mov
add
out
call
inc
ss
mov
aam
addb
or
jl
xor
fildll
push
or
stos
xor
notb
jne
sub
lock
sbb
ljmp
mov
pusha
insl
lods
pop
repz
call
jle
jae
add
xorb
lods
loop
or
xchg
adc
adcl
adcl
xor
and
popa
xlat
cmp
inc
mov
and
das
xor
xor
fstl
scas
lods
adcl
pop
jae
js
add
pop
and
xchg
pop
test
sbb
xlat
dec
mulb
insb
jle
shlb
mov
mov
dec
mov
xor
xchg
add
and
aad
in
mov
add
imul
int3
mov
daa
push
xchg
and
fcoms
out
ds
mov
stos
scas
mov
mov
out
xor
mov
xchg
test
or
inc
adc
adc
out
in
sub
mov
fisttps
add
and
and
pop
mul
push
popf
nop
popa
or
and
push
pop
mov
fstpl
mov
ja
sub
add
mov
pushf
sub
int3
lcall
dec
out
cmp
fcmovne
xchg
cs
add
pop
and
test
inc
cmc
pop
mov
sbb
pop
rclb
es
movsb
mov
push
in
dec
push
bound
push
sub
cs
fiadds
pushf
adc
lahf
dec
pop
mov
mov
nop
pop
xchg
pop
or
lret
inc
outsl
add
mov
pop
mov
push
inc
mov
jmp
fnstsw
cmp
xchg
cmp
fnstsw
imul
inc
out
cmp
jnp
out
mov
inc
ja
mov
pop
lahf
push
add
and
imulb
enter
test
adc
test
pop
xor
inc
stc
cmp
test
dec
xchg
out
mov
jl
mov
test
mov
in
test
rcrl
or
aad
fdivs
movb
mov
adc
adc
add
js
pop
lcall
movsb
int3
test
and
notl
cmp
or
jg
ljmp
outsb
jle
cs
mov
jnp
cli
dec
mov
push
mov
out
jge
imul
mov
outsl
add
out
cmc
bound
enter
cmpsb
in
xchg
and
jo
cli
dec
and
lahf
and
mov
pop
test
inc
sbb
sbb
loopne
push
repz
je
pop
xchg
sbb
out
mov
ja
inc
sub
sbb
ror
sti
movsl
inc
leave
outsl
bound
scas
into
cmp
pop
or
cwtl
int
lock
mov
mov
push
push
lahf
pop
fistps
in
xorl
push
cmp
repz
mov
insl
in
jle
fnstsw
push
ret
sbb
ljmp
lock
pusha
adc
fadd
lock
xor
xchg
and
sbb
jmp
cmc
pop
jb
xor
jecxz
pop
jbe
ljmp
add
mov
push
xor
jle
or
add
push
scas
jl
add
jp
inc
dec
repz
pop
adc
pop
mov
xor
cmp
lahf
cmp
mov
roll
push
jmp
stc
test
fisubs
ljmp
and
pop
mov
xor
call
pop
xor
sbb
mov
scas
enter
dec
scas
ret
jle
notl
xchg
test
mov
push
pop
push
mov
jne
jbe
push
push
jns
jns
das
mov
movsl
aas
out
cld
lret
push
dec
or
lea
jmp
mov
and
mov
sbb
mov
icebp
icebp
push
addl
nop
mov
push
stc
cmp
dec
xor
adc
dec
xor
or
inc
addr16
jg
repz
or
shll
push
or
push
stos
cmp
mov
push
jle
sar
cli
sti
push
movsb
cmp
jb
rcrb
scas
lods
fimull
mov
jl
popa
pop
pop
popf
in
enter
pusha
mov
cltd
pop
leave
and
sub
mov
je
adc
arpl
pop
mov
aam
aas
sbb
cs
sbb
push
nop
nop
adc
mov
scas
jl
inc
mov
out
mov
call
sbb
js
leave
or
mov
popf
mov
lcall
push
imul
nop
shl
dec
out
sbb
xor
fbld
out
cmp
out
fs
dec
mov
xchg
enter
and
in
in
xchg
sbb
out
mov
mulps
push
xchg
sbb
movsb
add
xlat
roll
cltd
xor
sbb
bound
mov
jne
add
sub
ljmp
jp
mov
cmp
hlt
outsb
cmp
sub
pop
mov
es
and
ja
jp
jnp
sub
xrelease
lods
mov
loopne
pop
push
push
sub
mov
push
mov
fisttpll
loope
mov
lret
ljmp
icebp
push
int
dec
jl
out
adc
idivb
syscall
mov
imul
mov
inc
jnp
dec
xlat
mov
cmp
sub
imul
add
rcl
inc
sbb
cld
inc
pusha
div
gs
into
pop
pop
mov
loopne
cld
sarb
aas
out
push
int3
stos
jno
movsl
sarl
cmp
outsl
shr
inc
scas
push
or
or
jmp
or
push
dec
fwait
andb
dec
or
sub
int
jecxz
shlb
inc
nop
cs
sbb
ret
repnz
xchg
xor
lcall
cmp
sub
xchg
in
sti
mov
aam
fbstp
mov
mov
stos
sbb
xchg
ds
cld
mov
sbb
inc
testb
sbb
pop
push
icebp
xchg
xchg
dec
xchg
xchg
fistl
shlb
notb
jno
lock
mov
add
jo
mov
ret
popa
call
aaa
mov
xchg
push
pop
xchg
std
lock
subl
in
rolb
pop
fcomps
push
aas
jp
test
out
sbb
xchg
fstpt
nop
lock
leave
add
js
jns
jmp
dec
mov
faddl
divl
aam
shlb
stc
xchg
bswap
pop
lea
sbb
jbe
jno,pn
outsl
andl
aaa
test
xlat
adc
sahf
int3
rolb
je
mov
jmp
aam
mov
insl
cltd
sub
sbb
mov
xchg
xchg
mov
push
xchg
cmp
jb
add
push
int
out
lahf
adc
sub
xchg
pop
rclb
or
mov
sbb
fcoml
inc
xor
and
mov
pmaxub
pop
dec
jge
add
xchg
aas
les
rolb
cltd
jecxz
add
add
dec
test
cmp
cmp
sbb
loopne
dec
out
xor
inc
addr16
lcall
js
adc
cwtl
into
out
sbb
faddl
pop
and
movsb
jne
pop
rorb
push
sub
int3
mov
insl
scas
push
int3
mov
out
ret
push
push
or
sub
lret
xorb
push
mov
nop
ds
push
pusha
popf
in
scas
xchg
ret
mov
fistl
inc
inc
push
mov
adcl
and
stc
testl
and
dec
insb
stos
inc
out
sbb
xchg
in
scas
subb
imul
sti
sti
sbb
fmuls
incb
stos
sbb
out
jg
or
jmp
xor
adcb
inc
xor
in
adc
ffree
push
dec
lods
movsl
lods
js
or
mov
shrb
pop
push
cmp
mov
mov
or
adcl
ret
inc
and
sub
mov
cmc
push
mov
jp
push
out
jne
mov
cmp
sahf
push
data16
js
xchg
and
fistps
pop
lret
mov
or
and
rorl
rorb
aad
pop
xor
imull
cmp
imul
and
mov
push
repnz
xchg
mov
mov
xchg
sub
pop
push
sub
push
sub
cmp
aaa
fsubr
jae
adc
sbb
xchg
cmpsb
out
loopne
mov
xor
aam
pop
jb
ss
call
xlat
mov
mov
iret
push
loopne
pop
mov
fimull
aaa
imul
cmpsb
sbb
jg
lahf
or
lcall
cmc
cmp
lahf
lea
movsl
or
lret
xchg
in
cmpl
adc
in
inc
jge
pop
jae
shlb
sti
nop
and
xchg
xchg
inc
mov
outsb
and
lcall
push
lock
and
std
mov
add
aam
int3
xchg
shll
imul
and
nop
or
adc
scas
pusha
xchg
out
fadds
cmp
jmp
dec
loop
sub
or
test
sbb
movsl
rorb
out
aas
push
dec
stc
pop
add
imul
xchg
pushf
aaa
mov
push
icebp
dec
pop
cld
mov
into
mov
stc
enter
in
sbb
adc
les
xor
or
mov
jns
movsl
push
or
fcmovu
stos
or
les
stos
add
test
loopne
sub
test
sahf
xlat
add
iret
mov
fiaddl
xchg
cmp
test
cmpsl
pop
pop
cld
dec
aad
in
repnz
xchg
out
jle
xlat
cmc
movsb
iret
movsb
mov
lods
xor
jne
cmp
mov
cmc
aam
jno
push
call
push
idivl
fisubrs
mov
pusha
and
cmp
mov
mov
test
jle
movsb
js
and
and
loop
roll
sbb
mov
mov
dec
cmp
mov
cld
enter
mov
decb
lds
jle
and
jge
pop
add
pop
push
add
cmpsb
mov
push
sahf
jg
jnp
mov
mov
and
movsb
push
test
scas
sub
repnz
push
mov
stos
add
dec
loop
iret
testl
dec
adc
rcll
andl
lcall
push
imul
add
loopne
sub
xchg
sbb
arpl
xor
insb
out
pop
jne
negl
jbe
push
arpl
sbb
ffreep
jb
push
outsl
mov
pop
test
xchg
jae
rcll
xchg
outsb
pop
xchg
hlt
fbstp
repnz
add
mov
mov
ljmp
ss
negl
sbb
mov
mov
push
add
dec
or
popa
adcl
xor
out
nop
and
cmp
leave
jnp
outsl
iret
or
loopne
out
in
or
xor
xchg
xchg
cltd
push
test
pop
cmp
xor
jl
movsb
enter
pop
fdivs
mov
into
xor
lods
loop
daa
or
xchg
int3
bound
dec
or
mov
add
push
xchg
mov
push
mov
or
push
mov
mov
andl
js
aad
and
jne
push
insb
sbb
add
push
incl
ljmp
dec
inc
mov
lods
test
or
dec
out
das
int
stos
scas
xor
test
sub
cmp
pop
push
arpl
jbe
loope
push
jne
lds
nop
js
xchg
xor
push
push
outsb
xchg
data16
xchg
imul
mov
mov
jne
cmp
mov
mov
xchg
imul
adc
fsubl
xor
push
dec
pop
sbb
mov
cltd
mov
call
or
fsub
out
ret
int3
pop
rcrl
stos
and
popf
mov
mov
pop
repnz
mov
push
inc
xchg
xor
mov
mov
cmpl
aas
or
sub
ja
mov
mov
sti
or
mov
mov
mov
daa
push
cli
dec
les
pop
push
gs
xchg
mov
mov
xchg
outsl
xchg
inc
lcall
push
arpl
fisubs
movsl
push
enter
int
andb
shll
fwait
rcr
insl
mov
dec
and
outsl
mov
jle
add
in
mov
js
adc
cs
or
xor
lret
je
add
and
or
fisubs
add
mov
mov
xchg
mov
mov
sbb
push
test
test
movsl
loopne
rol
adc
shlb
jb
movsb
out
movhps
cwtl
fisubrs
adc
mov
push
sub
mov
mov
stos
jb
jae
pop
test
mov
pop
bound
cmp
outsl
sub
xchg
loope
sahf
or
or
adc
sub
out
mov
es
adc
jo
neg
insb
pop
idiv
enter
xchg
push
adc
xchg
pop
shll
xchg
push
jge
inc
in
aad
nop
repz
cmp
mov
fwait
decb
jbe
jle
bound
add
das
mov
lods
cmpsb
int
pushf
dec
rcrl
aad
ds
push
lret
das
mov
lret
std
movsb
iret
cwtl
or
push
cmc
and
pushf
dec
mov
in
dec
mov
hlt
or
pushf
jae
adc
frstor
and
xchg
das
popa
das
lcall
jmp
fbld
adc
sub
pushf
xorb
push
lea
shlb
int3
pop
and
and
gs
push
inc
in
ja
in
popf
das
dec
mov
or
fs
jae
cld
fnstenv
fwait
insl
and
lcall
push
add
or
ret
outsl
sbb
scas
ja
add
inc
mov
aaa
push
shll
out
ret
or
push
cltd
mov
test
aam
pop
scas
shrl
rcrl
push
call
inc
xchg
mov
loopne
fsts
lods
pop
mov
fnstcw
adc
mov
add
hlt
mov
adc
dec
push
mov
sub
mov
jo
pop
xchg
mov
out
test
scas
inc
es
pop
dec
push
aas
sub
fwait
xchg
pop
fwait
sub
pop
mov
sub
fiaddl
xchg
mov
cld
xor
inc
jmp
int
popf
and
clc
addb
add
je
adc
in
push
add
xlat
adc
xor
stc
imul
and
or
ljmp
mov
pop
in
or
and
and
pop
adc
dec
enter
and
addl
push
imul
loopne
loop
daa
pushf
popf
lret
rorb
dec
fstp
les
and
push
std
into
aaa
cwtl
dec
mov
nop
push
mov
pop
lahf
sbb
xchg
loop
lods
inc
rcrb
pop
ret
xchg
adc
test
pop
gs
xchg
insb
divl
mov
std
fiaddl
iret
movsl
scas
call
lock
aaa
je
sbb
movsl
addb
movsl
sub
inc
aad
loope
sbbl
jbe
ret
ret
xchg
mov
jg
cmpsl
test
adc
rcl
arpl
or
xchg
fnstcw
mov
mov
jge
dec
mov
shll
mov
imul
and
push
adc
pop
add
jmp
scas
push
add
scas
push
popf
jl
lock
iret
arpl
mov
inc
sbb
push
sub
adc
jb
dec
sbb
push
inc
xor
pushf
jae
jg
inc
sti
mov
sub
xor
dec
arpl
pop
xor
xchg
imul
push
lahf
fisubrl
pop
out
dec
sbb
mulb
test
inc
push
adc
jbe
mov
jge
into
jmp
test
daa
dec
subb
mov
or
inc
inc
xchg
lea
cmpl
dec
test
mov
xor
nop
pop
dec
lret
pushf
or
pop
in
inc
sub
cwtl
xor
fbld
orb
dec
or
xor
jmp
rcrb
andl
mov
or
push
ss
pop
imull
inc
int3
pop
fdivs
or
movsl
pop
shrl
jno
xor
fnstcw
rorb
fstpt
jns
bound
cmpsl
ret
or
sbb
xlat
lahf
repz
adc
and
jo
dec
and
pop
mov
insl
int
inc
xor
jmp
dec
fninit
mov
iret
fadd
mov
mov
or
adc
and
mov
mov
into
push
xchg
test
popf
inc
xchg
mov
sub
add
daa
xor
push
inc
inc
or
dec
xchg
out
ds
cmp
jecxz
cmpsb
fcoms
cmp
dec
and
test
inc
pop
and
push
inc
sub
sbbb
test
jns
xchg
scas
popa
dec
sub
imul
cmp
repz
gs
repnz
mov
inc
sbb
out
out
mov
push
dec
daa
aam
adc
bound
ret
jae
or
pusha
xor
xchg
lods
outsl
xchg
push
mov
jecxz
jecxz
in
pop
cs
jne
mov
cs
rol
jne
xor
add
out
lret
aas
pop
and
jmp
xor
filds
cmpsl
push
in
mov
push
and
adc
test
fildll
in
adc
jbe
mov
lret
lret
lret
lcall
inc
fisubs
sub
mov
xor
mov
push
sub
add
stos
adc
sahf
loope
push
lcall
xorl
fmull
push
or
push
xchg
std
jns
cltd
jge
cli
sub
jle
std
sahf
loopne
jg
into
imul
cmp
icebp
shlb
hlt
in
repz
iret
sbb
mov
xchg
mov
or
add
neg
push
insb
dec
das
sbb
and
mov
push
loopne
std
cmp
nop
lahf
in
xor
add
ss
pop
jbe
and
shl
sub
scas
cltd
pop
pop
xchg
gs
movsl
add
iretw
push
lods
cmp
inc
lret
movsb
xchg
mov
cmp
xchg
clc
outsb
mov
jne
pusha
inc
sbb
flds
outsl
and
inc
lcall
jo
or
int3
enter
add
xchg
jnp
cmc
add
xor
cli
ja
xor
pop
shll
jae
add
or
jecxz
ror
popa
outsl
xchg
lret
aas
bound
add
or
pop
les
or
cmp
adc
pushf
in
aam
mov
iret
ds
insb
sti
xchg
std
adc
push
xchg
add
mov
cs
push
loopne
cmp
push
in
mov
mov
es
xchg
popa
mov
test
jl
mov
xchg
push
sahf
jecxz
sbb
int3
mov
aas
pop
pop
lods
push
fldcw
out
in
insb
fidivrl
movsb
push
lahf
xchg
add
pop
jbe
fnsave
movsb
mov
inc
pop
sbb
pop
adc
int
xor
in
or
popf
dec
jo
aaa
rol
mov
mov
xchg
jg
mov
pop
inc
movsb
fdivs
push
das
popf
repnz
sbb
xchg
mov
ret
cld
sub
dec
xchg
out
lods
xor
push
inc
and
mov
cwtl
dec
mov
aad
push
push
imul
push
clc
jne
xchg
jb
mov
xor
ret
pop
orl
jae
insb
push
sub
pop
insl
loopne
outsb
pop
into
mov
dec
test
loope
cmpsb
xchg
nop
mov
hlt
cmp
jae
flds
scas
mov
add
lock
das
out
scas
dec
push
sub
mov
cmp
inc
imul
pop
cmp
mov
mov
addr16
in
pushf
jl
subb
sbb
es
in
leave
iret
hlt
loopne
lds
imul
ljmp
lods
pop
or
lcall
je
pop
xchg
xchg
es
lcall
jmp
frstor
inc
sub
mov
outsl
les
insb
adc
imul
xlat
mov
and
adc
add
rorl
inc
adc
jg
mov
pop
and
lock
push
ss
pusha
lock
fisttpll
ss
notb
pop
fucomi
adc
mov
sahf
adc
fistpll
arpl
cmp
xchg
filds
dec
mov
xchg
aam
ret
xor
inc
aas
cmp
lods
inc
mov
into
mov
mov
mov
push
mov
sub
pop
cmp
rcrb
repz
pusha
inc
cmp
data16
fs
arpl
inc
fucomip
aaa
xor
andl
jb
adc
pop
adc
lahf
pop
cmpsb
cmp
lds
out
xchg
fnstsw
mov
mov
xor
ljmp
lds
adc
orl
test
hlt
push
jne
add
push
addr16
and
jno
inc
mov
add
pop
outsb
push
push
push
fdivl
sbb
or
lret
mov
nop
fs
mov
mov
sub
stc
fists
and
pop
cmc
fsubr
mov
js
shrl
aam
and
mov
push
sbb
adc
or
cmc
sarl
iret
or
int
gs
xchg
adc
hlt
lock
gs
pop
push
push
add
cmp
dec
jecxz
nop
out
addr16
rep
inc
mov
mov
dec
pop
dec
sbb
jge
nop
repz
bound
int3
int3
or
sarb
adc
and
popa
in
mov
mov
rcrb
dec
test
cltd
fnstenv
stos
insb
mov
xchg
lds
push
test
iret
out
fdivrl
xchg
jp
xchg
mov
sub
leave
xlat
inc
push
lret
and
sbb
sub
fsubrp
dec
sti
cmc
sub
imul
fs
arpl
push
aad
mov
jb
ds
inc
pop
dec
insb
dec
mov
bound
inc
sub
cs
and
xchg
out
cmp
roll
stos
or
jmp
xor
test
inc
scas
jl
iret
ss
dec
mov
add
cwtl
out
sbb
aam
shlb
cmp
add
aas
push
test
sbb
push
or
push
jb
incl
test
in
fisubrl
cmp
lcall
or
out
stos
adc
prefetch
or
loopne
cwtl
fs
sub
ret
jge
sbb
lds
sub
les
push
movsb
sbb
mov
cld
inc
mov
lahf
ficompl
jle
mov
mov
dec
lds
add
mov
mov
stos
inc
pop
in
sub
mov
fsubs
fstp
mov
or
shl
xchg
mov
sbb
rcrl
jl
pop
in
pop
and
sbbl
mov
out
xor
dec
jecxz
ljmp
ds
negb
mov
aad
jno
mov
or
les
popa
pop
shl
and
push
repz
and
inc
sahf
push
imul
inc
loope
cmp
sbb
mov
int
adc
clc
sbb
arpl
popa
dec
jge
pop
dec
cltd
mov
xor
aam
dec
rcll
jns
or
mov
repnz
stc
sub
rep
mov
jmp
mov
pop
adc
sbb
in
push
xchg
sbb
in
push
cmpsb
hlt
cmp
es
jne
sarl
xchg
je
out
cmp
sub
test
jne
or
fs
sbb
jl
mov
xor
add
lods
mov
jl
mov
fstp
add
iret
dec
cmp
aas
repnz
inc
loop
dec
push
loop
or
insl
add
cmpsl
cmp
push
or
mov
ja
mov
mov
jle
popa
mov
dec
push
jl
push
iret
inc
gs
dec
cmp
movsb
stos
movsb
sbb
inc
into
sub
ret
mov
xchg
pop
repnz
add
flds
jp
mov
xchg
cld
iret
adc
sarb
sbb
loop
test
pop
pop
data16
mov
sahf
push
sbb
or
es
push
out
jle
xor
lret
add
into
inc
cmp
clc
cltd
les
rolb
pop
out
scas
sbb
iret
lret
daa
pop
fs
cs
pop
stos
dec
or
push
loop
cmp
add
xchg
test
push
loopne
dec
sbb
xchg
pop
dec
js
int3
fs
push
fisttps
daa
int
cmp
or
mov
push
mov
fcoms
jnp
cs
std
xchg
inc
aam
out
jp
mov
fsts
dec
mov
test
mov
push
push
adc
notl
test
sbb
push
inc
fadd
in
pop
fstl
movb
push
cmp
push
es
in
pop
lret
and
mov
mov
movsb
pop
jns
or
mov
cmp
es
or
lods
lret
sbb
mov
int3
sti
fmull
jne
mov
jnp
jecxz
lret
push
lock
outsl
sbb
inc
push
fisttpl
insl
mov
dec
pop
mov
rorl
outsl
mov
aas
int3
or
test
or
lods
out
fbld
pop
cmpb
mov
sti
adc
js
out
cltd
dec
push
xor
add
outsb
inc
dec
push
inc
imul
jo
test
mov
aaa
sar
add
stc
iret
add
filds
pop
push
int3
ljmp
adc
mov
cmc
pop
jecxz
repnz
testl
repnz
sbb
fcoms
sbb
stc
xor
dec
insl
sti
insl
insl
out
mov
lods
sub
xor
add
fwait
lods
pop
aas
ret
inc
arpl
mov
adc
xchg
pop
or
nop
test
lcall
lea
lret
stos
dec
cltd
mov
gs
xchg
out
jne
rolb
pop
inc
inc
xor
imul
inc
cld
mov
mov
imul
and
in
push
hlt
dec
mov
cmp
push
sahf
clc
aaa
outsb
loopne
aaa
xchg
mov
rclb
bnd
or
mov
xchg
jl
mov
mov
lds
or
cmpsl
ds
or
fsts
cltd
xchg
or
popa
pushf
enter
jno
out
shl
adc
cmp
xor
iret
repnz
jl
pop
xchg
mov
and
ljmp
inc
movsl
aaa
test
jge
les
insl
addl
dec
in
xor
or
je
adc
inc
dec
loop
test
je
mov
divl
out
push
dec
dec
jno
pushf
imul
jne
out
sahf
push
pusha
int
sbb
xchg
xor
fsubl
mov
cmp
and
hlt
xchg
inc
sbb
dec
leave
stc
sar
pusha
aas
xchg
add
mov
aas
xchg
mov
xor
cld
mov
xchg
fidivrs
push
out
mov
in
mov
mov
xchg
insl
sti
imul
dec
lahf
cmp
nop
dec
call
pop
pop
shlb
pop
lods
inc
fwait
clc
xor
add
fs
fcoml
in
add
push
sub
add
push
mov
xor
dec
adc
test
arpl
adc
mov
in
sub
iret
inc
es
mov
stc
pop
adc
in
icebp
xor
adc
test
jo
inc
sti
stos
sub
mov
repz
outsl
inc
int3
call
movsl
sahf
idivb
and
jnp
dec
mov
jle
test
popa
and
jbe
insl
in
sub
icebp
test
lahf
inc
adc
stos
xchg
mov
push
cmpsb
adc
push
pop
mov
fbstp
mov
xchg
inc
in
fwait
ret
adc
sub
push
jns
mov
enter
cmc
popa
and
and
rorl
lods
mov
aad
addr16
mov
dec
jecxz
pusha
insl
pop
lods
idivl
sub
xor
adc
dec
xchg
pcmpeqd
and
pop
sub
pop
lret
and
and
jne
int
push
jne
push
jbe
jb
xchg
pop
xor
gs
mov
aaa
loope
adc
mov
sahf
test
and
or
mov
cltd
add
add
inc
loope
addr16
repz
xchg
rorl
xchg
jb
jnp
adc
and
xchg
sbb
mov
das
mov
pop
das
mov
mov
xor
ss
subb
sbb
or
aam
iret
jb
mov
adc
adc
adc
call
lahf
in
lods
xchg
ret
roll
icebp
dec
push
in
dec
cwtl
pop
push
pop
imul
adcl
sub
and
and
movsb
popa
in
fwait
arpl
add
push
jo
insl
sti
les
dec
xchg
xchg
loop
cs
pop
fadds
xchg
pop
pop
inc
inc
insb
push
popf
je
mov
icebp
dec
add
sbb
call
movsb
jge
jb
mov
jne
cmp
shll
cmp
add
daa
je
mov
pop
and
jbe
push
movsb
xor
lahf
jns
adc
xor
in
or
or
pusha
cltd
fldl
cmp
xchg
lcall
or
inc
cmp
inc
push
or
in
cmp
mov
les
aad
sbb
cmpsb
mov
cwtl
faddl
fwait
xchg
adc
rcll
popa
jbe
leave
fldl
mov
dec
fwait
xchg
cld
shl
xor
sub
jnp
flds
push
push
push
xor
lahf
test
out
and
aaa
jae
sub
insl
rolb
sub
fwait
test
cmpsb
inc
shrb
test
push
call
push
mov
jb
scas
fldl
out
leave
subb
sahf
cli
cmp
lahf
inc
pop
lret
xorl
push
mov
and
div
pop
or
sbb
mov
pushf
loope
inc
cmp
movsl
cmpsl
pop
cmpsb
inc
fnstsw
les
imul
mov
sti
mov
or
lods
int3
fistl
mov
cli
jle
jmp
push
mov
mov
mov
arpl
lock
scas
add
xchg
pushf
mov
sbb
xor
mov
test
sbb
mov
jae
xor
es
push
das
lcall
orb
and
mov
mov
cmpl
pushf
push
test
call
dec
jae
xchg
lret
jmp
test
xor
test
sbb
dec
loopne
mov
js
push
xor
cs
subb
adc
sbb
das
push
push
outsb
mov
add
cmp
negb
cwtl
and
or
into
fbstp
xor
shll
sbb
movsl
pushf
jne
les
out
out
push
inc
adc
jmp
cltd
jns
adc
push
ret
mov
sub
insb
ret
int3
pop
addr16
mov
mov
jmp
cmp
pop
xor
sub
gs
adc
jl
imul
icebp
cmc
xchg
outsb
inc
jo
jl
stc
aaa
jmp
push
mov
push
lret
insl
push
jecxz
clc
adc
jmp
ds
and
xor
mov
aad
out
sti
movsl
mov
fstp
jmp
adc
mov
xchg
mov
test
push
ret
lret
adc
mov
add
jl
mov
push
add
jg
dec
pop
mov
cmc
mov
push
jae
fnsave
add
lret
in
in
imul
insl
insl
jno
mov
mov
mov
aas
pushf
sar
xor
scas
pop
sub
push
scas
and
lcall
sub
jp
push
mov
dec
and
cmp
out
lahf
movsl
cmpsl
dec
or
arpl
ret
xchg
gs
insb
test
xchg
shlb
test
and
cmc
lcall
je
cmp
aad
mov
inc
dec
mov
adc
fbstp
cmc
stos
sahf
stos
mov
jmp
mov
lods
imull
jmp
or
add
aam
cld
mov
lods
insb
pop
fsubl
xor
jae
cmp
imul
xor
xchg
pushf
xchg
dec
cli
sub
enter
xchg
pop
inc
mov
jbe
imul
fmuls
icebp
push
paddsw
decb
sti
call
inc
mov
jno
nop
jo
leave
jecxz
fildll
stos
cmp
mov
cltd
mov
lret
outsl
ret
lret
std
push
leave
leave
sbb
fdivrs
jnp
pop
dec
xchg
xor
cltd
adcl
mov
sbb
lods
lret
cmp
sub
bound
pop
add
sarb
popf
jo
sbb
xlat
in
xchg
xchg
sahf
push
movsb
mov
cwtl
xlat
pop
fs
mov
lret
pop
mov
mov
ss
cmp
push
daa
xor
rcl
jns
lea
std
cmc
mov
or
adc
test
mov
test
or
dec
adcl
adc
mov
or
mov
inc
out
sub
rcrl
cmc
int3
ret
push
xor
lret
out
push
pop
sbb
popf
adc
xlat
dec
repz
es
imul
ret
mov
mov
incb
pop
andl
out
inc
stc
inc
and
jnp
pop
xchg
xor
out
and
sub
pop
or
fisubrl
fcomi
or
jl
iret
movsb
cmp
sub
test
pop
int
jbe
loop
aam
jo
pushf
sbb
sub
fisttpl
adc
mov
push
dec
add
xchg
jbe
mov
out
mov
fildl
mov
xlat
popf
xor
push
mov
adc
mov
inc
aam
ficomps
pop
add
ds
sarb
ljmp
idivl
mov
push
add
test
arpl
das
push
mov
ja
cmpsb
push
cmpsb
jbe
dec
pop
pop
jo
or
push
outsb
testb
pop
inc
out
popl
and
sub
imul
inc
mov
xchg
push
leave
cmp
into
xchg
insb
xor
push
ds
push
fs
je
xchg
fsub
aaa
and
and
dec
pusha
pushf
cmpsl
rcr
pop
clc
pop
xchg
pop
mov
xchg
pop
xchg
jl
mov
das
xor
mov
sbb
jno
mov
mov
mov
sub
lods
gs
lahf
frstor
dec
mov
sub
or
lods
push
mov
push
sbb
xor
lret
nop
jl
je
lods
cwtl
sar
pop
lahf
sub
mov
aas
or
dec
stos
push
dec
in
and
pop
repz
dec
bnd
mov
into
and
mov
test
push
dec
and
out
dec
dec
mov
fcoml
adc
adc
xor
xchg
fisubrs
add
leave
lahf
jb
dec
xchg
cmc
inc
ja
cmc
je
or
aaa
lods
and
jl
popf
xchg
lea
mov
in
push
add
sahf
das
cmp
pop
cmc
inc
jns
push
xchg
and
inc
call
rol
inc
xchg
pop
or
les
dec
add
ljmp
push
mov
xorl
pop
push
ja
cmp
loope
mov
adc
mov
test
lret
jl
jo
lret
test
add
iret
lret
fistpll
sub
out
jp
popa
and
xor
ret
int3
or
add
shrb
mov
sub
mov
repnz
inc
fistpll
incb
outsb
and
enter
adcb
push
xor
fs
cmp
ss
sub
mov
xchg
jne
mov
xchg
or
addb
cmpsl
mov
cld
or
jge
mov
push
fldcw
dec
push
and
movsb
aas
insb
jno
xor
mov
bound
add
adc
xchg
call
xor
xchg
sub
inc
movsb
test
jno
add
cmp
rclb
mov
in
xor
sarb
leave
jle
fwait
rcrl
mov
in
sub
loop
mov
cmc
mov
movsl
out
push
rorl
scas
adc
shlb
cmp
xchg
stos
arpl
cmp
int3
hlt
outsl
rcll
mov
in
sub
inc
mov
push
imul
push
adc
cli
adc
test
adc
mov
lods
call
or
lahf
mov
xlat
rcl
sub
rcr
js
push
es
xchg
mov
xchg
aad
leave
and
mov
jmp
repz
cmc
ret
lods
sti
popf
loope
mov
inc
xor
dec
inc
adcb
push
mov
out
and
dec
or
stc
adcb
dec
lret
pop
icebp
sub
insb
std
and
dec
stos
addr16
sub
hlt
lret
cwtl
imul
fists
lret
cltd
mov
inc
sub
test
out
mov
adc
push
dec
xor
clc
cli
es
jns
cmp
jne
xchg
adc
mov
ljmp
push
insb
scas
faddl
stos
jmp
push
jns
xor
es
out
test
bound
push
pop
mov
iret
int
test
cmpsl
aad
test
xor
mov
movl
ljmp
dec
adc
adc
sub
dec
or
or
cli
mov
mov
inc
dec
push
mov
xlat
data16
xor
xchg
xor
mov
mov
insl
adc
fisubrl
call
mov
inc
dec
sbb
xor
std
mov
loopne
mov
jbe
in
xor
out
lret
fs
push
shrb
sub
dec
sar
jne
cmpsl
ret
cltd
and
mov
out
into
or
outsb
filds
mov
xlat
test
sbb
movsb
xor
push
and
push
push
pop
cmp
add
or
inc
ficoms
cmp
imul
stos
push
mov
sbb
inc
jle
pop
jno
frndint
push
push
aaa
sti
cmpsl
call
ss
and
cmpsb
in
notl
mov
loop
xchg
lods
das
jno
stos
rclb
test
lock
mov
lods
add
aas
mov
cmovbe
jmp
xlat
mov
add
ss
jnp
pop
inc
dec
pop
dec
rcr
test
outsl
out
loope
cmp
clc
lock
cltd
and
ss
in
jns
ja
mov
in
and
sbbb
scas
divb
jbe
sbb
push
xchg
int3
mov
int
in
clc
or
es
and
add
dec
mov
cmp
nop
jae
sti
pop
lahf
ret
lods
shll
nop
cmp
shrb
cltd
xchg
arpl
mov
jne
mov
inc
test
mov
arpl
pop
xchg
pop
xchg
sub
bound
mov
xchg
aam
addl
stos
sbb
adcl
int
loopne
pop
dec
cmpsl
addr16
rorl
dec
sar
shl
lea
adc
adc
jl
cmc
adc
nop
lea
or
jge
mov
adc
sbb
outsb
lock
adc
fisttps
in
mov
sub
orb
cli
xchg
dec
in
push
fsubrs
shrb
cmp
stc
inc
inc
je
add
les
push
inc
test
dec
out
sbb
int
xchg
xchg
mov
mov
pop
add
pop
das
jecxz
arpl
push
cmp
xor
fsts
loopne
clc
cmc
mov
dec
dec
cmp
shl
lcall
cltd
push
pushf
js
and
pushf
fwait
sbb
lahf
jo
lea
inc
out
js
andb
jp
or
scas
hlt
int3
inc
enter
pop
add
into
add
or
mov
push
shrb
sbb
test
frstor
cmpb
jge
cld
fdivs
and
mov
ret
mov
icebp
mov
into
push
cmp
enter
jge
mov
jae
jbe
js
xor
push
jp
push
push
xchg
pop
in
nop
dec
dec
push
mov
in
pusha
pop
dec
mov
stos
fsubr
out
dec
les
sbb
and
sub
fsts
leave
pusha
jl
icebp
imul
outsb
cmp
xchg
scas
cmp
cld
jb
das
lret
mov
sub
cmp
inc
cmp
cmc
xchg
fsub
rorb
movl
pop
out
mov
pop
lds
mov
cmp
mov
xchg
lcall
jne
loopne
stc
test
or
dec
test
mov
cmpsb
xchg
sbb
add
push
jne
cmp
mov
sbb
or
cmp
outsl
ja
mov
outsl
push
incl
xchg
xchg
aam
jmp
push
xchg
inc
shl
rclb
loopne
dec
ljmp
dec
mov
xor
cltd
into
lods
mov
fisubs
ret
and
imul
ret
sti
mov
in
add
jecxz
adc
test
shlb
cltd
rcrl
pop
jnp
push
mov
loopne
cs
daa
adc
mov
incl
mulb
in
ljmp
dec
lock
js
hlt
out
pop
push
lock
cmp
adc
into
repz
in
xchg
imul
pop
mov
sbb
pop
and
das
xchg
sub
xor
jmp
mov
in
or
push
cmp
sbb
ds
ffreep
sub
xchg
cmp
iret
scas
lret
pop
mov
ljmp
js
test
or
incb
cmp
mov
loop
mov
aaa
jb
mov
out
and
pop
pop
and
push
or
sahf
adc
loope
test
pop
pop
mov
add
cmp
out
dec
scas
sbb
push
stos
jo
sahf
loope
icebp
cmpsl
jno
cmpsl
pop
sub
inc
xor
xchg
in
inc
inc
xchg
mov
push
adc
push
mov
xchg
adc
inc
xlat
mov
leave
fisttpl
sub
jbe
xor
sar
out
test
jecxz
xchg
fstps
cltd
std
out
xchg
jecxz
pop
push
out
dec
pop
out
fimuls
push
in
sarl
push
test
jecxz
arpl
andl
pushf
adc
sub
clc
jno
icebp
rcrb
and
cs
mov
rorb
sti
add
stos
xor
jo
mov
mov
sahf
lret
xchg
mov
imul
and
dec
fstl
les
sbb
mov
or
repnz
add
cmc
inc
xor
loopne
push
popf
mov
adc
xchg
mov
cltd
cwtl
sbb
loop
jo
cmp
mov
into
xor
or
mov
add
rcr
cltd
pop
sub
fcoms
mov
mov
jb
or
pop
xor
mov
pushf
mov
test
in
adc
fsubrs
dec
sahf
add
imul
std
add
fdivl
push
ret
sarb
negl
adc
ljmp
xor
out
push
mov
sbb
jb
ror
loopne
mov
inc
filds
push
js
xchg
nop
mov
gs
arpl
and
cmpb
pop
data16
lods
gs
jmp
shl
xchg
mov
add
xchg
adc
mov
cmp
movb
int
daa
mov
mov
mov
cli
pop
push
aas
insb
sub
push
inc
sub
and
test
jecxz
xchg
sbb
orb
jbe
out
lret
sbb
push
ret
notl
sahf
fdivs
push
cli
mov
jl
clc
int3
mov
cwtl
jo
inc
dec
cmpsl
bound
inc
push
adc
push
sub
sbb
inc
sbb
push
xchg
cltd
sub
lea
je
lock
in
push
scas
ret
imul
mov
or
les
rorb
mov
ja
cmpsb
push
sahf
pop
sarl
and
ljmp
xchg
lahf
push
pop
cld
imul
in
sub
ret
fisubrs
xlat
mov
test
stc
adc
fwait
cmp
ss
cmc
jno
xor
mov
xor
push
jle
add
dec
cmc
cmp
or
popa
dec
hlt
pop
mov
ds
sub
mov
mov
nop
in
mov
popa
jne
stc
or
nop
mov
dec
push
movsb
mov
jns
mov
push
sub
add
call
ss
pop
lret
cli
pusha
ret
xchg
add
lret
jae
in
aas
mov
cwtl
xchg
lods
pop
je
lock
aaa
stos
outsb
insb
mov
mov
sarl
sbb
push
xchg
insb
inc
aas
stos
add
add
aaa
push
shll
mov
test
lcall
popa
stc
add
xchg
jne
sahf
loope
inc
pop
jae
add
xchg
mov
inc
sub
xchg
vmovntps
data16
std
mov
aaa
int3
dec
fbld
and
fadds
mov
pop
dec
inc
inc
add
insl
xorb
sbb
in
xor
arpl
adc
adc
push
lcall
mov
stos
movsb
test
pop
dec
cmp
sahf
adc
cmp
jmp
arpl
in
push
outsb
push
sbb
stos
mov
mov
out
add
mov
mov
fistpl
out
mov
xchg
stc
movsb
push
pop
pusha
jge
sub
pop
mov
in
xor
xorl
push
dec
cmp
mov
or
mov
push
jo
mov
in
adc
pop
and
pop
inc
xchg
repz
push
or
addl
in
and
hlt
mov
mov
push
cmpsb
fstpt
repz
jne
and
testl
jo
iret
enter
shlb
subps
repnz
push
dec
mov
inc
sub
test
test
cs
and
stc
sar
lods
mov
test
icebp
xchg
lret
xchg
lods
dec
ret
adc
iret
stc
dec
iret
pop
dec
sbb
inc
xchg
and
js
iret
gs
xchg
sahf
insb
pop
popa
imul
sbbb
xchg
jg
sub
or
pop
addr16
add
xchg
xchg
sub
xchg
mov
adc
add
push
sahf
ret
adc
ljmp
sbb
rdtsc
popa
es
or
fbld
mov
bound
shrl
js
sbb
ljmp
cmp
jnp
cld
test
in
mov
repnz
jb
imul
xchg
js
pop
fdivrl
lock
btc
lahf
cmp
jge
popf
mov
stc
and
dec
cmp
arpl
mov
mov
mov
mov
xchg
add
sub
std
fldcw
leave
pop
jecxz
mov
pop
ljmp
aam
sub
inc
in
inc
pop
in
cmp
and
or
sbb
xor
ljmp
addr16
mov
push
subb
jg
mov
pop
mov
xchg
popf
dec
and
jnp
dec
pop
and
jae
pop
dec
and
outsl
and
scas
inc
in
xchg
dec
movl
out
cmp
aas
add
inc
iret
gs
mov
in
sub
fs
popf
fadds
ds
xchg
popa
rorl
mov
lret
dec
movsb
push
push
sahf
out
scas
addr16
int
int3
std
mov
dec
sar
fadds
cmpsb
aaa
repz
jmp
xchg
dec
inc
jae
lods
int
mov
in
adc
or
inc
std
and
in
pop
rol
orl
enter
enter
outsl
sahf
cmp
jne
xor
jmp
mov
mov
pop
sahf
mov
lods
lret
ss
stos
mov
fsqrt
stos
ret
sbb
shlb
xor
popf
dec
out
lods
or
lret
push
push
aaa
loop
orb
mov
arpl
mov
jb
mov
mov
inc
movsl
mov
out
mov
add
pop
ja
aam
sub
or
insb
jae
test
pop
pop
sub
jmp
mov
sarb
cmpsl
inc
sub
insl
cmp
add
ret
leave
sub
push
scas
shr
scas
pop
or
xchg
dec
test
les
mov
call
mov
add
stc
cmpb
pop
pop
inc
pop
fstpl
cmp
or
pop
dec
and
or
test
push
push
notl
jp
insl
jns
mov
push
xchg
inc
shrl
imul
mov
pop
add
and
ljmp
mov
aaa
xchg
inc
adc
dec
push
inc
jo
pusha
mov
mov
dec
lcall
cmp
fs
out
pop
or
sub
dec
dec
xchg
mov
push
mov
mov
sbb
xchg
rcrl
iret
inc
mov
gs
dec
mov
int3
mov
push
or
sbb
ss
mov
and
arpl
test
push
xor
loop
inc
inc
jo
jbe
dec
ja
mov
jl
mov
lods
lahf
sub
and
and
ret
lcall
mov
push
mov
mov
aam
outsw
xor
jnp
scas
sbb
mov
sub
xchg
jno
ljmp
push
icebp
push
sahf
xchg
clc
sub
adc
add
data16
insl
sahf
insl
jmp
scas
shll
pop
mov
xchg
bound
and
sub
jno
hlt
xchg
push
scas
out
hlt
push
dec
int
mov
fwait
add
and
pushf
pop
fdivrs
dec
jp
jo
cltd
dec
mov
rol
movsl
sbb
ds
pop
inc
fisttpl
push
xchg
iret
add
adcb
repz
mov
aad
xchg
mov
and
adcl
mov
shr
or
jg
outsl
pop
loop
lock
shl
mov
vaddsubps
push
arpl
stc
sbbb
xlat
push
or
ds
pop
mov
test
int3
test
scas
or
adc
and
jne
test
mov
jne
lahf
lcall
cmpsb
jle
call
jcxz
mov
pushl
cmp
fld
mov
and
out
mov
xor
inc
pop
mov
push
dec
imul
xchg
xor
mov
in
lcall
jns
inc
js
adc
icebp
mov
ret
or
lods
ljmp
mov
xor
sbb
cmp
in
negb
nop
push
addr16
sahf
into
shlb
mov
dec
or
pusha
arpl
push
mov
adc
mov
das
dec
mov
and
in
push
pop
sub
or
lret
inc
call
fimuls
cmp
iret
loop
fwait
cs
int3
push
pusha
push
scas
xchg
add
sub
ja
clc
add
out
insb
mov
xor
and
adc
adc
dec
xchg
inc
ficoml
cmpsb
leave
pop
scas
xor
mov
dec
scas
xor
jp
test
cmp
stc
mov
test
mov
aaa
mov
mov
pusha
jecxz
outsb
test
enter
xlat
lods
test
and
inc
adc
sbbl
bound
int3
int3
mov
xor
and
int
popf
sub
fwait
lods
mov
cmpsl
jl
xor
push
xchg
cld
in
lods
sub
out
repnz
icebp
sbb
addb
pusha
ljmp
cmp
and
jecxz
lods
in
xorl
loop
mov
push
jl
lods
dec
pop
sub
mov
pop
add
dec
xchg
lret
int
mov
and
insb
xchg
leave
dec
inc
addl
or
push
mov
push
in
inc
xchg
xor
adc
push
add
fldcw
aad
loop
int3
pop
fists
inc
frstor
sbb
sbb
cs
fbld
cmp
sub
mov
mov
rcl
mov
loope
fbstp
add
faddp
or
pop
adc
push
push
pop
test
fcmovu
sub
xchg
subl
mov
push
testb
push
iret
push
ret
sbb
xorl
mulb
in
cmp
push
xlat
xchg
fmull
push
add
out
push
insb
adc
fwait
lods
and
lcall
in
insb
imull
xor
pusha
sbb
mov
mov
dec
cmp
insb
xor
mov
mov
ja
aaa
dec
arpl
pop
adc
inc
jp
push
arpl
pop
lcall
dec
xchg
fildl
sahf
xchg
and
xchg
add
dec
stos
test
rcr
ds
dec
push
aad
pop
dec
jns
mov
addr16
fs
out
rol
lret
int3
and
pop
jg
push
jl
cmp
inc
xchg
and
repz
adc
popf
cmp
pop
hlt
notb
ret
adc
push
fldpi
jnp
push
sti
sti
sub
mov
out
popf
mov
mov
stos
dec
jp
mov
cltd
or
sbbb
add
or
divb
daa
sbb
lods
push
pop
lock
mull
xchg
cmp
mov
jns
pusha
inc
in
mov
fldl
lret
push
js
cmp
xchg
icebp
jge
push
js
lods
das
jne
roll
jp
sub
or
jb,pn
and
ss
inc
push
test
or
ret
xor
push
sbbb
adc
adc
stos
xchg
jg
xchg
cmp
pop
aas
ficompl
jno
int
mov
outsl
add
cmp
inc
loop
and
xchg
cld
sbb
mov
adc
mov
ds
inc
mov
jnp
and
je
mov
unpckhps
push
sbb
pop
and
gs
add
lods
out
clc
xchg
jae
add
adc
mov
lock
aad
mul
sarl
mov
push
fists
jmp
cwtl
negb
push
sbbb
adc
add
xor
push
ss
push
xchg
or
xchg
popf
lock
aas
ret
adc
rorl
mov
outsb
xchg
sub
or
ror
call
add
inc
sarb
clc
push
push
out
sti
sbb
fldenv
les
ficomps
and
test
je
cmpsl
jp
call
jno
aas
sub
leave
dec
repz
stos
push
jp
popa
fdivl
add
xchg
mov
cmp
cmp
lcall
xchg
inc
and
pop
rcl
jecxz
pusha
cld
in
mov
and
in
xchg
into
cwtl
sbb
sub
mov
sti
push
in
cmp
aas
mov
lds
addr16
mov
xlat
mov
dec
dec
jno
mov
hlt
call
sbb
imul
popa
test
imul
mov
rcrb
ret
inc
or
movsl
push
dec
xor
cmp
cmp
or
pop
xor
xlat
xchg
push
inc
mov
push
jl
leave
call
sbb
fidivl
mov
cmp
cmp
out
fstl
dec
or
jo
fnstenv
ljmp
imull
mov
add
int
lea
sbb
pop
adc
sti
sbb
mov
mov
dec
int
fs
fidivl
jmp
lods
movsl
cmp
mov
xor
adc
in
imul
adc
lea
pop
out
push
and
cmp
cmp
dec
in
ret
fstpt
lock
xchg
pop
pushf
stos
jbe
and
add
cltd
xchg
push
lahf
ljmp
fcompl
fildll
popa
ror
sar
test
fmulp
adc
imul
ret
imul
add
pop
shlb
pop
pushf
enter
mov
cli
jmp
outsl
loopne
addr16
sub
adc
decb
decl
and
jno
cwtl
mov
mov
lret
adc
mov
cmp
ja
cmp
movsl
subb
dec
mov
xchg
inc
popf
sbb
fxch
and
les
gs
cmpsl
in
sub
cltd
loopne
cli
fists
popw
call
add
loope
scas
lods
pop
call
dec
mov
roll
imul
sbb
cmpsl
adc
jl
fwait
cld
push
sbb
in
xchg
call
add
push
mov
mov
mov
push
dec
jp
pop
into
jne
andl
ss
mov
imul
cmp
popa
cmp
psrld
and
or
std
fwait
cmp
std
repz
sahf
shlb
repz
clc
mov
cltd
mov
setge
sbb
into
inc
loop
jno
fisttpl
stos
jl
imul
loopne
xchg
lods
stos
jle
or
pop
clc
cli
mov
popa
push
mov
jecxz
mov
xchg
cmc
mov
hlt
outsb
mov
mov
inc
or
push
sub
sbb
jl
je
out
and
sbb
cmp
mov
inc
xor
push
cmp
xchg
pop
mov
mov
fisubs
insl
movsl
pop
xchg
gs
shl
adc
fstps
xchg
inc
shrb
cmp
adc
imul
xchg
add
or
inc
xlat
jmp
dec
xor
pushf
push
jno
mov
mov
lock
jmp
pop
cmp
aam
jbe
test
cmpsb
icebp
push
lret
cmp
sub
and
xchg
mov
popa
pop
insl
add
adc
push
add
dec
sbb
pop
movsb
insl
ss
dec
data16
jbe
xor
ss
add
mov
and
pop
sbb
pop
sbb
das
lea
repnz
shrb
dec
mov
sti
jae
cmc
and
pop
stc
adc
les
mov
push
std
dec
cmpsl
insl
xor
lret
cmpsb
dec
insl
test
fs
std
dec
xchg
jnp
iret
mov
inc
nop
loope
mov
mov
rorl
sahf
jge
clc
mov
cmpsb
cmpb
inc
imul
rclb
xchg
mov
js
sbb
arpl
getsec
rorb
cmp
mov
fcompl
sub
cltd
jns
sbb
sub
jecxz
insl
xor
mov
mov
test
cmpsb
inc
repz
sub
repnz
mov
pop
call
jno
rol
stos
push
in
popa
cmpxchg
dec
fsubrs
push
lods
fnsave
lods
add
inc
subb
lods
xchg
subl
jmp
gs
ljmp
xchg
push
xor
pusha
inc
cmp
orl
jae
js
jge
mov
jle
mov
lods
inc
and
adc
stc
xchg
or
push
push
popf
stos
mov
aas
je
sub
repnz
sub
push
aam
das
cmp
pop
xchg
xchg
lcall
insb
mov
incl
or
xchg
and
adc
dec
mov
cmp
movsl
lea
mov
enter
dec
xor
rclb
pushf
addr16
mov
enter
inc
jnp
jge
ja
arpl
adc
sarb
xor
pusha
jmp
je
mov
imull
sbb
fcomip
sbb
xchg
push
ja
dec
nop
es
loopne
cmp
and
rcll
mov
addl
ss
loop
dec
test
or
imul
push
dec
inc
sub
es
sub
ret
xlat
and
fsubl
cli
es
push
dec
int
cmp
mov
enter
mov
mov
xchg
jecxz
jp
or
mov
insl
daa
adc
mov
jno
xlat
movsb
gs
dec
adc
ja
pop
jle,pt
cmp
adc
add
scas
pop
inc
mov
jnp
pop
sbb
daa
pusha
xchg
lods
and
int
pop
aas
pop
cmpsb
jl
and
shrb
add
inc
mov
orb
test
fistpll
cmpsb
mov
into
sbb
pop
jne
test
inc
lods
enter
leave
test
aad
repnz
jl
inc
lahf
js
daa
pop
fbld
ds
mov
pop
inc
pop
in
aas
cltd
pop
gs
ror
mov
arpl
popf
dec
lods
clc
test
sahf
sub
mov
popl
jmp
bound
lcall
int3
adc
out
ss
pop
pop
sub
fsubs
scas
xchg
fstpt
movsb
push
addr16
fiadds
je
rcrb
dec
out
or
test
mov
idiv
rcrb
xor
and
test
xor
cmp
fadds
shlb
cmp
push
rorb
xchg
out
setle
pop
inc
test
iret
xchg
dec
out
and
pusha
inc
call
imul
jb
loop
mov
jae
cmp
cld
ret
ss
daa
mov
lds
je
mov
and
idivl
idivl
cmp
hlt
cltd
sbb
cltd
xor
dec
xlat
gs
cmp
popa
hlt
sbb
or
jg
xchg
mov
add
das
pop
std
negb
xchg
mov
test
pop
in
push
loopne
nop
xor
ja
pop
mov
nop
and
cmp
add
adc
je
cmpl
adc
pusha
daa
test
jge
inc
push
and
inc
xor
and
cs
neg
sub
cmpsb
sbbb
pop
inc
mov
test
subl
lret
arpl
sub
in
mov
xlat
lcall
ljmp
xor
test
xchg
push
dec
mov
mov
jae
pop
lods
xor
enter
pop
fdivr
popf
loop
xchg
sti
iret
push
arpl
lcall
int
cmpsb
sbb
hlt
mov
sbb
jo
ss
and
in
out
dec
xor
sbbb
pop
mov
lahf
icebp
enter
mov
daa
repnz
push
mov
outsb
xor
mov
cli
or
fldl
xchg
mov
and
pusha
fcomp
sbb
or
jp
xlat
jae
jmp
and
dec
sbbb
and
cmc
outsl
icebp
jno
sahf
xchg
lea
ljmp
sbb
jg
push
mov
repz
ret
and
xchg
pushf
mov
dec
and
fst
pop
xchg
jno
ljmp
and
pop
push
cmp
xchg
mov
push
push
outsl
shll
enter
mov
shr
xor
imul
fsts
cmp
icebp
popa
frstor
add
jne
sarb
mov
repz
mov
jo
cmpsl
sbb
dec
mov
mov
movb
imul
dec
xchg
outsb
bound
inc
fsin
stc
idivb
mov
fnsave
push
pop
jge
lahf
cmp
mov
je
mov
adc
cmc
mov
jb
xchg
xor
mov
xor
push
cmp
lods
xchg
cmp
es
mov
mov
add
addr16
pop
cs
push
es
xchg
lock
cmpsl
loop
jmp
mov
mov
jo
pop
mov
add
cmpsb
and
icebp
adc
cwtl
sub
mov
das
sub
mov
mov
shlb
imul
cmpl
jmp
neg
daa
jmp
cmp
jmp
sahf
out
out
scas
in
in
scas
icebp
pop
enter
lret
jns
fsubl
mov
mov
lret
xor
shl
jbe
mov
dec
ljmp
xlat
insb
insb
test
rolb
xchg
inc
push
int3
shll
or
push
scas
sub
sbb
lods
cmp
cwtl
ljmp
jp
mov
sbb
outsl
sbb
mov
mov
xor
repnz
dec
xchg
mov
icebp
imul
iret
in
xchg
mov
push
mov
adc
lahf
and
in
mov
cld
mov
add
pushf
ds
js
sti
data16
xchg
jecxz
pop
nop
xchg
dec
dec
stc
rolb
pop
mov
pop
out
hlt
ljmp
jecxz
jecxz
sub
push
nop
mov
jp
ds
mov
xor
int
test
mov
popa
jge
clc
ss
add
cmpsb
xor
jno
push
mov
jge
jl
cmp
enter
test
push
lods
lods
loope
test
push
cmp
sub
mov
mov
pop
dec
stc
insb
sbb
push
push
adc
or
push
xor
jnp
sarb
mov
jne
push
lea
mov
nop
scas
enter
test
movsl
inc
movb
inc
stos
mov
adc
mov
jp
sbb
xchg
repz
add
pop
in
cwtl
cld
jbe
loopne
movsl
inc
xor
sbb
lock
nop
out
sbb
mov
jns
fdivl
pop
xchg
sub
jg
idiv
mov
lock
mov
mov
sti
mov
add
out
rolb
jl
xor
je
pusha
stos
ja
mov
mov
out
adc
sub
jne
inc
pop
jle
and
cmp
mov
ss
es
test
push
pop
or
insl
loop
in
jno
adc
sub
jae
mov
cld
sub
insl
pop
ljmp
jp
imull
sbb
mov
rclb
xchg
mov
lock
xchg
addr16
jne
and
stc
test
jne
pop
addr16
loop
fisttpll
shlb
jns
dec
cmp
lcall
loopne
js
movsb
loopne
push
add
mov
push
out
push
iret
inc
adc
pop
mov
sub
iret
inc
sub
in
or
add
xchg
dec
add
movsl
adcl
out
cmpsl
inc
pop
loopne
lea
push
push
jl
aaa
mov
dec
mov
lods
fisubl
dec
cltd
jo
repz
jo
rorb
cli
je
pop
cmp
imul
dec
inc
pop
sub
pop
jle
lret
mov
mov
orb
scas
mov
cmpsl
loop
rcrl
or
xchg
test
inc
pop
cmp
jne
dec
cmpsl
dec
outsb
mov
shlb
push
adc
adcl
or
je
out
shr
jp
jecxz
xor
call
orl
dec
sti
jmp
or
rcll
lods
xor
repnz
mov
push
out
and
jo
mov
or
adc
fsubr
sbb
adc
pop
mov
jns
idivl
cmpsl
mov
add
sbb
out
cmp
cli
mov
pop
push
jnp
adc
and
stos
jno
inc
mov
fwait
cs
fsubl
dec
je
inc
sbb
or
insb
out
nop
bound
out
icebp
call
cmp
pop
popf
lcall
jge
rol
sahf
or
nop
or
adc
mov
xchg
out
xor
test
ds
push
inc
lcall
in
stc
insb
in
mov
jg
push
cmp
loope
rclb
cld
or
or
in
imulb
mov
fwait
cmp
fwait
inc
mov
mov
addr16
mov
mov
dec
mov
mov
ja
xchg
xchg
xor
call
lcall
ret
lods
std
or
sub
mov
mov
adc
bound
into
pop
push
dec
jle
neg
lret
insb
test
les
push
out
jo
lret
push
test
mov
stos
cmp
adc
sbb
jb
iret
out
inc
xchg
cmc
xor
xor
add
lcall
aad
mov
or
pop
ret
push
pop
push
mov
std
jecxz
sahf
bound
cld
xchg
daa
notb
add
push
cmp
dec
jge
and
mov
xchg
fs
or
jae
dec
imul
shll
scas
jns
mov
enter
push
fadd
test
mov
xchg
repz
stc
das
fwait
inc
lret
mov
out
push
ficomps
mov
or
push
or
sub
stos
pop
dec
ret
inc
jmp
push
xchg
pop
push
cmc
xor
pushf
outsl
in
add
pop
jns
mov
mov
or
sbb
cmp
in
pop
sub
sub
add
pusha
pop
movsb
push
push
fmull
mov
test
add
outsl
sbb
mov
xor
push
pop
adc
push
and
jb
dec
or
rorb
lret
pop
andl
inc
or
lahf
xchg
pop
mov
cmp
and
jae
and
push
in
aaa
ss
lock
pop
mov
dec
mov
inc
mov
arpl
and
iret
jnp
out
cld
popw
and
js
sub
pop
dec
adc
cli
jmp
xor
fidivl
jp
outsb
sbb
shll
ss
pop
mov
mov
sub
lock
mov
cmpsl
push
and
jg
jbe
imul
or
xlat
fiadds
or
sbb
xor
cltd
mov
movsb
inc
inc
gs
mov
daa
movsl
mov
mov
icebp
scas
xchg
jb
fimull
adc
in
dec
movsb
sbb
mov
mov
roll
and
loopne
arpl
cwtl
adc
stc
stos
jae
sbb
pop
shlb
shlb
cli
cltd
test
mov
bound
dec
push
mov
mov
push
pushf
iret
cmpsl
int
xor
shll
dec
pop
mov
mov
sub
jns
test
cld
lcall
sbb
aas
mov
sti
mov
aas
push
enter
xchg
mov
out
test
cmpsb
cmp
mov
xor
pop
cmc
insl
ds
jl
test
out
cmp
inc
adc
daa
popa
adc
jo
ljmp
pop
pop
or
jg
mov
push
insb
ret
pop
pop
pushf
or
pop
pop
dec
cld
add
out
js
lods
adc
mov
mov
lea
sarl
pop
lahf
lods
mov
push
dec
incb
adc
cld
xchg
fcomps
add
adc
push
rcrb
add
stos
fsubs
cmp
jne
adcl
testb
pop
inc
dec
inc
push
idivb
xchg
sbb
mov
cld
rcl
dec
lret
mov
sahf
shl
lret
dec
lds
pusha
mov
dec
adc
cmpsb
test
mov
xlat
or
ds
jb
and
enter
aas
dec
inc
mov
and
cmp
pop
sahf
adc
js
jmp
or
jp
mov
jae
les
push
mov
cli
stos
es
sub
bound
sub
rolb
xchg
out
jne
adc
push
mov
stos
test
outsb
push
or
fdivrp
mov
nop
aad
xlat
shrb
inc
out
popf
mov
sti
and
mov
and
int
dec
cmp
mov
adc
jne
cmp
sub
push
cli
xchg
mov
mov
sub
cmc
imul
arpl
inc
adc
cs
pop
ficompl
cld
mov
cs
jae
mov
push
inc
out
or
iret
mov
insb
mov
test
lret
popa
icebp
sub
sbb
jo
stc
jp
negl
cmp
adc
add
ja
xor
mov
out
xchg
push
das
fnstcw
call
jp
push
cmpl
push
push
or
mov
jns
lea
loope
gs
divl
pop
les
dec
test
push
mov
push
mov
jmp
cs
leave
xchg
dec
dec
jbe
mov
popa
mov
sbb
pop
jns
xchg
push
xor
shll
dec
sarl
pop
movl
pop
pop
jecxz
or
mov
pop
into
mov
dec
or
mov
mov
loopne
lret
ret
cs
adc
cmp
imul
push
mov
adc
call
imul
jecxz
cld
sbb
pop
sbb
fsts
rorl
xchg
jmp
fsub
jnp
sub
data16
jmp
out
add
adc
imul
ljmp
andb
xor
push
jmp
out
cwtl
data16
dec
clc
xor
xchg
adc
inc
inc
push
ja
fimuls
pop
mov
xchg
inc
sbb
adc
xor
incl
mov
cmp
pusha
add
inc
cmp
push
add
push
outsl
xor
aaa
inc
push
fstpl
cmp
sub
mov
loopne
and
mov
out
movsb
pushl
and
dec
add
jg
popa
dec
and
push
pop
fs
leave
sarb
mov
inc
xchg
inc
shll
aas
sbb
push
fdivs
pop
pushf
clc
xchg
or
lea
imul
cmp
or
shrl
cwtl
xchg
push
lcall
xor
arpl
sub
pop
cmp
cltd
in
sub
sbb
cmp
in
rcrl
mov
cmp
pop
push
xchg
loopne
into
sar
ja
movsl
pop
push
pusha
lahf
repnz
lret
test
popa
or
outsl
pop
xchg
add
popf
add
lock
lcall
pop
psllq
fcmovbe
mov
mov
mov
pop
mov
xchg
test
cltd
mov
mov
fwait
dec
loope
or
push
fcom
push
or
xchg
or
xchg
shlb
fcomps
loop
pop
out
aas
stc
jbe
pop
jl
scas
adc
clc
sahf
pop
jp
inc
push
lods
push
xchg
daa
push
in
mov
push
pop
shr
xlat
in
mov
pop
test
mov
mov
faddl
push
add
les
inc
fadds
add
jo
clc
addl
cmp
fdivrs
aas
imul
mov
js
and
inc
cli
bound
ret
mov
sub
ret
pop
xor
mov
int3
pop
xchg
push
leave
nop
stc
jo
and
aaa
add
jnp
dec
outsb
sbbl
cmp
pop
sub
adc
sbb
sbb
arpl
or
ljmp
pop
std
push
ds
mov
push
ljmp
pop
sbb
or
inc
nop
mov
dec
lcall
fsubs
pop
lea
lods
test
dec
pop
mov
push
fsts
mov
popf
out
or
or
stos
sbb
dec
dec
add
dec
std
lret
pop
adc
sub
mov
jg
out
lock
push
sub
pop
popl
mov
xchg
mov
sarb
clc
adc
mov
imul
push
jno
mov
pop
dec
lea
mov
or
sbbl
xchg
mov
fnsave
orl
xchg
xchg
imul
inc
or
out
sti
fnstsw
aam
cmp
mov
add
int3
icebp
jb
pop
adc
inc
dec
fcmovbe
mov
push
cltd
mov
mov
stos
pop
adc
pop
decb
fisubl
sub
jg
add
pop
sub
ret
add
out
mov
rclb
mov
in
lea
scas
lock
mov
mov
test
jp
dec
dec
adc
fwait
xor
into
jno
mov
scas
leave
or
mov
fwait
mov
aas
ljmp
jns
push
inc
adc
dec
push
shlb
pushf
lock
in
pushf
jo
pop
pop
inc
stos
inc
stos
lds
sub
sahf
nop
pushf
push
cmp
xor
cmp
xlat
add
in
adc
test
xor
fninit
out
mov
movsb
cmp
lret
sub
test
adc
and
fldenv
add
jl
ret
fbstp
aam
or
enter
fwait
pop
leave
push
psadbw
xchg
cmp
insl
ficoml
je
mov
push
cli
movsl
mov
lret
loopne
lret
movsb
je
sbb
imul
sahf
stc
xor
mull
push
mov
mov
dec
cltd
std
xor
xchg
fsubp
cmp
sbb
mov
test
fwait
mov
ror
std
mov
iret
xlat
outsl
mov
mov
or
pop
imul
jo
cltd
mov
cmp
cwtl
push
add
sti
das
xchg
subl
inc
xor
pop
lret
outsl
outsl
push
mov
fisubl
adc
sbb
push
xchg
adc
mov
adc
sbb
lcall
jbe
mov
in
or
mov
jb,pt
mov
or
imul
pop
mov
and
in
lret
popf
push
add
shll
dec
test
into
cmc
add
neg
lock
es
in
ljmp
lea
ljmp
lret
cmp
sub
test
mov
xchg
add
dec
adc
xor
cmp
push
add
pop
jmp
loope
js
out
mov
pusha
or
test
mov
push
dec
iret
xor
jmp
xchg
daa
cmp
xchg
loop
mov
inc
ret
mov
sub
mov
pop
ss
pop
mov
jecxz
push
fldt
or
fidivs
push
std
andb
push
ds
js
xor
mov
aaa
mov
pop
scas
fwait
cmpsl
add
push
cwtl
jne
fwait
loopne
movsl
neg
cmp
out
dec
mov
in
into
mov
sbb
sub
add
rclb
mov
mov
fcoms
shrl
js
sub
dec
xchg
cwtl
in
mov
push
mov
pop
adcl
push
sbb
mov
lahf
int
popf
sbb
inc
adc
jae
sar
jns
nop
aam
test
push
cwtl
mov
stc
in
dec
jb
int
sar
das
jb
adc
aad
mov
xchg
out
inc
or
in
cli
sub
outsb
stc
push
mov
rcrl
mov
inc
cmp
jne
sbb
dec
jne
mov
lock
mov
in
outsb
sub
inc
incb
mov
push
mov
adc
sahf
addr16
push
dec
fstps
sub
jo
nop
mov
arpl
lcall
negb
fucomi
add
scas
cmpsb
nop
add
ljmp
push
push
nop
outsl
in
mov
imul
mov
cld
jp
lds
push
xsaveopt
cltd
lods
mov
and
pop
out
jae
and
pop
out
into
sbb
ret
xchg
and
mov
adc
sub
or
and
xchg
cwtl
cmpsb
pop
add
inc
cmp
cmp
dec
jp
cmp
cmp
loopne
out
adc
cmp
push
arpl
adc
xchg
arpl
das
das
jle
ljmp
adc
rclb
in
cld
push
lods
push
inc
sbb
mov
es
mov
fimuls
insl
clc
es
adc
mov
dec
test
or
pop
call
xorb
push
adcb
and
mov
dec
scas
jmp
sti
nop
jg
adc
fs
outsl
cmp
push
mov
xchg
mov
cs
jg
idivl
dec
out
cmp
enter
loopw,pt
and
jge
fstpl
pop
imul
inc
sub
mov
in
add
push
test
rcll
cmp
pop
sbbl
mov
clc
leave
jmp
cli
ljmp
pop
mov
fnstenv
or
push
mulb
neg
leave
push
push
sub
nop
fistpl
mov
fsubl
mov
pop
dec
loop
call
mov
cmp
xor
aad
xor
xor
mov
aas
inc
adc
popf
mov
je
cmpsl
inc
mov
popf
rorb
or
xchg
test
ret
add
jp
ds
test
movsb
lods
sub
les
ss
mov
shl
stos
inc
inc
mov
daa
cmp
xchg
in
das
inc
sub
in
je
push
mov
fstl
arpl
out
or
mov
in
mov
jb
sti
mov
mov
cltd
mov
inc
jp
mov
xchg
lods
outsb
xchg
mov
divb
test
sbb
out
fcomi
test
xchg
das
jnp
or
lods
mov
lds
and
std
repnz
cmp
out
outsl
jb
std
mov
rolb
int3
inc
ror
in
or
xor
push
cwtl
rclb
scas
mov
dec
mov
sub
js
mov
les
addr16
sbb
add
mov
gs
add
roll
ds
dec
imul
neg
mov
add
rcll
popl
sbb
xor
stos
movsb
mov
in
stc
dec
xor
call
cmp
sahf
cmp
jmp
pop
lret
nop
lret
xchg
mov
mov
test
loopne
push
inc
add
mov
mov
jbe
inc
stc
or
mov
push
daa
jnp
dec
inc
test
jge
dec
out
mov
pop
mov
lods
imul
es
and
cvttps2pi
jg
popa
dec
test
xor
cwtl
add
add
int
or
repz
ret
out
sbb
and
push
mov
outsl
js
push
xor
or
dec
jge
enter
inc
leave
xor
mov
imul
cmp
xor
in
jno
sahf
mov
jo
dec
xchg
jnp
sbb
into
in
mov
xchg
push
push
mov
mov
mov
mov
aam
mov
xchg
dec
cmp
sbb
dec
or
pop
lahf
test
sbb
mov
scas
clc
or
divb
in
clc
cmp
insl
aas
add
or
lret
xor
sbb
es
sarb
ficoml
adc
int
ss
mov
andb
shlb
js
ficompl
leave
add
mov
in
ss
pop
lret
push
in
scas
std
push
mov
in
inc
arpl
lret
mov
cmp
cmp
lock
add
fadds
repz
pusha
add
mov
inc
inc
inc
lret
dec
adc
rsqrtps
jbe
pushf
aam
adc
arpl
stos
pop
mov
adc
in
cmpsl
sbb
bound
loop
jecxz
sti
inc
in
pop
pop
or
and
js
add
test
cmp
ljmp
daa
data16
fstpt
xchg
insl
adc
shll
adc
sbb
cmp
cmpsb
xchg
xchg
imul
sub
je
mov
rcrl
int
cld
adc
add
rorl
jmp
lods
lea
lcall
subb
out
add
jb
roll
jecxz
push
pop
mov
mov
aad
inc
ret
aad
imul
or
ljmp
add
ljmp
xchg
ret
and
inc
add
cld
into
leave
mov
mov
sbb
jne
push
dec
push
hlt
test
and
js
push
push
xchg
sbb
notb
xor
pop
xchg
iret
or
pop
daa
stos
negl
dec
in
lock
dec
adc
xlat
loop
dec
enter
or
lahf
mov
aaa
fwait
xchg
and
sub
adc
arpl
and
je
fists
ret
cmp
loopne
pushw
jle
mov
add
repnz
xchg
leave
cld
scas
xchg
push
sbb
rol
out
rcrb
test
idivb
xor
lret
cli
movsb
shl
div
push
dec
loop
repnz
mov
sub
or
imul
inc
pop
ret
xor
mov
cltd
mov
push
repnz
jb
icebp
mov
mov
js
add
in
loop
pop
pusha
arpl
cmp
and
movsb
adc
fwait
loopne
movsb
movsb
test
pop
cmp
xchg
daa
test
inc
lods
dec
cmp
cmpsl
fdivr
xlat
sbb
cmp
or
outsl
push
sbb
leave
push
cld
popa
adc
or
lods
out
or
insl
add
fldenv
dec
in
lods
mov
std
cmp
repz
and
or
inc
jbe
fcmove
mov
sub
loope
push
pop
stos
cld
int
or
inc
into
lock
mov
cmpsl
or
es
jmp
sub
xor
and
mov
sbb
adc
jle
xchg
andb
outsl
fsubrl
sub
es
lcall
mov
xor
les
loop
int
dec
bound
stc
sub
repz
mov
mov
add
loope
gs
xchg
in
and
in
out
mov
iret
pushf
in
push
pop
or
cmpsl
je
xor
sbb
lods
cmpsl
out
inc
cmpl
es
in
pop
or
lds
or
mov
int3
sbb
push
bound
sbb
jmp
popa
lcall
lret
sub
or
push
sbb
ss
jns
adc
shl
xchg
aaa
cmp
mov
int3
shrl
xor
inc
lret
outsl
mov
dec
roll
push
ljmp
lret
push
inc
movsb
int
test
aam
dec
add
mov
mov
sbb
push
addr16
es
adc
fsubr
cmp
pop
push
icebp
js
jnp
dec
pop
mov
aaa
sbb
inc
mov
ret
xor
sub
jmp
mov
test
movsl
jg
scas
sub
pop
mov
pop
roll
fsubrp
adc
jae
jne
fwait
movsl
push
test
les
into
mov
pop
mov
fdiv
shll
mov
or
jb
xchg
fs
cltd
loope
xchg
sbb
add
pop
jb
adc
gs
movsl
and
outsl
cmp
cmp
push
xchg
dec
and
repnz
test
and
outsb
jge
insl
xchg
cmp
movsl
arpl
fs
jns
or
jge
jp
pushf
stos
sub
dec
mov
es
inc
pop
inc
fisubl
fs
addl
stos
push
fwait
push
fmull
repnz
mov
xor
fldenv
add
jb
pop
leave
pop
push
sub
push
decl
inc
stc
xchg
pop
mov
add
mov
xchg
shrl
dec
mov
pop
mov
sbb
xchg
jno
gs
or
and
out
mov
aad
shlb
imul
adc
jmp
aad
jns
scas
fisubrl
inc
loope
nop
inc
cs
ror
xor
movsl
mov
jle
stos
cmc
add
pop
or
call
mov
aas
mov
int
and
cmpsb
stc
mov
add
scas
je
outsb
repnz
aas
cltd
les
dec
lea
pop
mov
out
cltd
mov
adc
js
inc
out
mov
sbb
add
xchg
roll
test
popf
jne
push
mov
push
cld
imul
add
pop
pop
stos
mov
and
push
iret
clc
daa
push
cmc
sbb
mov
mov
pop
data16
js
daa
cmp
mov
sahf
xchg
push
cmp
aam
xchg
loopne
arpl
cmpsl
fcmovu
or
add
pop
pop
clc
xlat
and
fbld
or
and
dec
and
dec
xchg
imul
or
sub
pop
pop
aaa
clc
xor
in
inc
or
sub
inc
jecxz
iret
out
out
lret
adc
js
and
sub
inc
arpl
stc
sahf
mov
fistl
mov
out
mov
loopne
push
xchg
jb
fsubr
cmp
outsb
mov
call
rcll
addr16
inc
test
and
mov
daa
ret
hlt
test
add
push
mov
pushf
out
out
daa
pop
mov
xchg
lret
and
cmc
mov
push
xor
adc
pop
xchg
jle
shl
push
mov
aaa
inc
adc
dec
inc
lret
jo
adc
pop
and
adc
enter
xchg
out
out
inc
mov
out
js
sar
fadds
into
inc
stos
xchg
cmp
ficomps
lods
popa
popf
cmp
push
pop
cmp
sbb
test
stos
push
add
xchg
mov
sbb
push
iret
adc
les
orl
mov
mov
repnz
xchg
and
jl
or
stos
xchg
add
inc
in
mov
mov
rolb
pop
xchg
mov
loope
mov
jns
xlat
loope
cli
scas
dec
or
je
outsl
data16
mov
iret
andb
or
testb
ja
sub
stos
fldt
std
stos
hlt
or
es
add
xor
mov
mov
dec
arpl
adc
xchg
nop
mov
or
add
mov
jns
sub
jmp
pop
push
inc
or
lahf
insb
lea
pop
scas
addr16
lret
lcall
movsb
jle
popf
inc
mov
loope
es
pop
sub
sar
dec
loopne
movsl
clc
and
dec
jp
scas
fidivl
mov
cltd
in
sub
imul
adc
or
in
mov
inc
es
xchg
xchg
stos
jp
dec
xor
mov
and
lret
mov
je
lahf
clc
mov
ret
out
xor
lods
mov
mov
pop
and
movl
mov
sbb
jp
testb
daa
mov
stc
pop
hlt
adc
cld
ja
mov
mov
push
push
daa
cmp
sbb
inc
mov
pop
jnp
adc
or
pop
idivb
rorl
repz
stos
and
xchg
in
movsb
inc
mov
inc
out
les
loopne
popa
je
cmpsl
daa
mov
in
push
or
cmovs
cwtl
inc
stos
adc
cmp
pop
outsl
push
mov
idivb
mov
sbb
insb
ss
push
cmc
push
dec
jmp
inc
cli
aam
xchg
fsubs
ja
mov
xchg
bound
cmpsl
std
inc
imul
cmp
je
or
cmp
jecxz
mov
scas
cmp
aas
sarb
hlt
loopne
xor
cmp
insb
sub
push
test
scas
add
inc
lods
ljmp
push
rcll
in
sub
xchg
enter
inc
testl
cmp
add
imul
jne
cmp
test
xchg
dec
stos
inc
ffreep
sub
orl
or
scas
jecxz
and
mov
in
inc
mov
xor
jecxz
add
lret
sub
repz
aaa
lods
outsb
pop
outsl
clc
jmp
out
adc
jae
fwait
xchg
push
pop
pop
fadds
sbb
imull
or
jbe
inc
cmp
add
cmp
pop
mov
xor
dec
or
lahf
rcl
out
cmpsl
dec
shlb
xchg
sti
cltd
cwtl
and
jbe
outsb
enter
cmp
gs
fmull
sbb
jp
je
lds
adc
mov
insb
push
xchg
rol
sahf
mov
data16
mov
sub
mov
in
cld
clc
and
or
inc
and
cmp
faddl
and
pop
push
inc
les
icebp
int3
fs
dec
pop
shrb
dec
add
dec
adc
xchg
repnz
or
mov
loope
ss
mov
xor
sbbb
sub
aam
mov
pop
js
fcoml
mov
in
cld
mov
cwtl
add
add
inc
sbbb
jae
and
arpl
and
scas
out
inc
loop
enter
jae
ret
into
ret
fnstcw
test
sbb
cmp
ss
pusha
pop
std
pop
cmp
sub
xchg
and
lcall
xchg
and
xchg
repnz
cmp
mov
cli
mov
cmpsb
daa
or
fsubrs
or
push
mov
out
fld
xor
sbb
enter
mov
mov
repnz
sahf
mov
cmp
scas
pop
cmp
daa
push
xor
cmp
cmp
jle
pop
ljmp
inc
jns
inc
repnz
cmp
icebp
adc
pop
pop
test
xchg
dec
xor
ss
push
ret
mov
pop
out
mov
sub
xchg
xor
adc
and
mov
jg
aam
test
popa
clc
cwtl
dec
out
or
in
fdivrl
out
push
imul
xchg
ficomps
sti
jle
cld
adc
mov
jg
rorb
hlt
xchg
cmp
cmp
popf
mov
das
pop
cwtl
xchg
jae
and
cld
ja
push
jge
inc
cltd
jns
loopne
cwtl
cmp
mov
sbb
ret
xor
and
push
movsl
sub
cltd
adc
fucom
inc
mov
fmul
push
stos
push
and
mov
pop
cmpsb
push
xchg
adc
pop
jle
dec
pop
and
dec
mov
fimuls
xor
mov
mov
mov
xchg
jne
test
sahf
push
outsb
add
xor
jbe
imul
add
mov
jp
xchg
insl
jnp
xchg
pushl
and
xchg
mov
mov
mov
add
xor
fidivl
out
push
xchg
stc
push
in
lock
adc
sbb
xchg
stc
das
xor
xorl
add
out
adc
ss
loope
js
mov
movsl
push
cmp
xchg
leave
out
out
dec
xchg
jo
int3
call
xor
add
popf
in
sub
std
aaa
mov
sub
ss
fisubrl
outsb
nop
sbb
movsb
or
mov
jg
or
iret
push
mov
loop
push
push
pop
add
or
sbb
add
adc
add
pop
add
inc
in
rorb
mov
outsb
ljmp
push
jb
pop
inc
sar
or
and
add
out
dec
add
sbb
hlt
jmp
lock
push
nop
push
xchg
popf
mov
repz
cmp
sarl
fisttps
scas
les
ljmp
dec
jno
nop
sbb
iret
jle
shrl
jnp
pop
mov
dec
lods
loop
mov
fsubrl
pop
in
repnz
cmp
insb
das
add
or
or
ret
mov
fcomps
js
in
incl
mov
aaa
cmp
jno
scas
in
mov
or
jle
shll
cmp
pop
or
lret
mov
xchg
push
es
dec
outsl
dec
or
aam
push
cmpb
ja
pop
out
movsb
jecxz
lods
lret
shrb
in
xchg
testb
sbb
add
scas
vpmaskmovq
push
or
mov
sub
xchg
fstpt
stos
lret
pushf
call
mov
loope
fwait
das
lret
lock
test
je
ja
fimull
ret
rcll
or
ja
and
xchg
movsl
ljmp
daa
dec
mov
mov
mov
nop
adc
pop
test
lods
push
dec
push
cmp
in
sub
test
outsb
js
inc
flds
pop
and
push
jmp
je
or
ret
pop
mov
fiaddl
dec
imul
xor
fs
rorl
insl
aam
mov
mov
and
xchg
scas
jg
mov
inc
pop
pop
inc
aaa
xor
mov
daa
jecxz
and
and
pop
in
jne
jno
stos
les
mov
mov
adc
test
cmpsb
or
cmp
stos
mov
adc
push
mov
test
jg
cli
cltd
and
jo
pop
ja
jno
dec
xlat
enter
pop
push
cltd
dec
rorb
add
out
sub
cmp
jne
mov
ffreep
scas
add
mov
imul
mov
insl
dec
test
push
jae
neg
js
out
mov
jne
pop
sub
out
mov
pop
cmp
lea
sub
sub
inc
pop
ret
pop
or
dec
pop
jne
insl
ja
push
push
mov
push
jns
push
les
inc
jb
mulb
add
sbb
xchg
lock
arpl
sahf
sub
pop
movsb
adcl
inc
and
mov
popa
inc
xchg
push
xchg
jecxz
xchg
inc
ss
std
xchg
outsb
pop
xchg
mov
mov
xor
mov
xchg
stos
add
mull
lcall
gs
jo
mov
test
xor
lcall
jecxz
nop
xchg
into
lods
test
jle
sahf
push
or
icebp
add
push
sbb
dec
lods
pushf
nop
frstor
mov
lahf
xchg
xchg
mov
pop
sahf
pop
pop
mov
push
fwait
pop
sub
cmpl
pop
stos
imul
gs
mov
imul
iret
cmp
dec
mov
or
cld
mov
adc
addr16
dec
ss
xor
push
adc
add
daa
nop
mov
xchg
add
movsl
pushf
adcl
xor
call
lret
jp
shlb
and
mov
repnz
pop
jge
xor
mov
pop
mov
stos
fwait
or
loopne
stos
das
stos
sbb
and
inc
insl
jns
lods
push
sub
repnz
aaa
xlat
callw
and
lcall
lcall
sub
imul
in
mov
sub
jecxz
sbb
pop
jb
mov
imul
mov
dec
ds
jbe
push
jb
in
push
outsb
dec
push
nop
push
outsb
pop
test
jb
popa
xchg
scas
xor
jbe
testl
fisubs
dec
sub
js
push
cltd
xchg
add
scas
into
fisubs
movsb
sbb
mov
leave
xor
mov
jbe
ret
repz
inc
aaa
aad
aas
movsb
out
push
icebp
pop
mov
movsb
and
inc
jne
pop
das
std
sahf
insl
adc
in
pop
cltd
out
add
cmp
mov
cmp
mov
xlat
cmp
dec
mov
xchg
push
ficomps
add
lds
jae
rcll
mov
movsl
push
orl
test
rcll
xlat
call
xchg
lods
pop
jnp
test
mov
pop
leave
push
dec
jp
pop
stos
sbb
push
inc
jns
ss
das
push
scas
fadds
and
mov
stc
in
and
jne
call
outsl
lcall
and
inc
shlb
hlt
daa
dec
lcall
rcrb
call
aaa
repnz
adc
pop
loop
imul
bound
jle
out
lds
cltd
mov
sbb
adcl
jb
mov
scas
jns
adcl
pop
mov
push
and
pop
roll
dec
fcomi
mov
stos
and
aam
cmp
ret
dec
in
cmc
cli
in
mov
lret
fldcw
sti
js
mov
lods
les
pop
es
loop
mov
into
or
jne
mov
mov
mov
add
cmpb
adc
insl
pop
push
xor
mov
lods
test
fs
pop
movsl
insb
add
jnp
pusha
outsb
repz
insl
out
push
pop
mov
and
sar
ficoms
pop
fisttpl
pop
pop
js
mov
dec
pushf
dec
xchg
xchg
stos
cmp
repnz
jp
loopne
and
sub
lock
and
mov
lock
dec
in
in
cmp
mov
fcompl
lahf
xchg
mov
mov
ja
inc
clc
fidivrs
mov
lods
lret
mov
push
movd
pop
jge
or
divb
inc
or
sahf
adc
xchg
rolb
nop
dec
push
std
orl
lret
and
jbe
xchg
add
test
fcomps
adc
mov
jl
sarb
shr
push
aam
sub
sbbb
icebp
call
fimuls
ss
add
push
jnp
and
jg
add
in
test
cmpb
out
pop
pushl
jp
ror
lcall
test
mov
push
mov
outsl
pop
xor
xchg
inc
add
icebp
loopne
dec
xchg
rol
fmul
ror
jl
jmp
pop
push
adc
xor
mov
dec
inc
pop
cmp
std
pusha
arpl
ss
popa
mov
cld
lret
cmpsb
xor
sub
xor
or
inc
cld
cli
bound
push
xor
fmuls
jg
iret
xor
bound
dec
imul
mov
xlat
sti
push
cwtl
scas
push
jne
jns
adc
js
adc
jo
addr16
xor
bound
or
roll
loope
cmp
mov
int3
jne
mov
es
cmc
ds
call
inc
repz
sahf
cld
dec
mov
push
push
clc
dec
sarl
jns
dec
adc
or
stos
pop
fs
stos
popa
in
ss
clc
sarl
jne
cli
lods
sti
jp
or
or
in
das
lods
pop
push
fidivl
fwait
pop
cltd
inc
and
insb
adc
je
mov
adcl
pop
xor
sbb
fisttpl
out
jp
or
or
movsl
jmp
aam
pop
inc
call
repz
stos
cmp
cmp
mov
mov
sbb
cs
cmp
sub
jecxz
cwtl
pop
shll
adc
or
js
inc
repz
xchg
mov
mov
mov
out
in
inc
inc
jg
lock
iret
cmp
out
jecxz
je
pop
mov
sub
iret
cmp
cmpsl
in
mov
aas
lock
or
sahf
mov
inc
jo
push
fwait
adc
push
and
lods
pop
mov
and
lcall
popf
movups
fiadds
xor
cmp
cmp
aam
jns
sarl
dec
stos
js
sub
ret
mov
into
pop
sub
daa
inc
adc
loop
jmp
push
pop
jno
xor
out
or
mov
push
and
xchg
xchg
push
outsb
xor
in
idivl
cmp
aad
ss
sub
out
mov
jle
mov
mov
xor
test
rcrb
push
pop
inc
cmp
movsl
mov
jge
jo
mov
or
cmp
sub
pop
clc
pusha
leave
mov
dec
add
fstl
sbb
jmp
xor
das
cmpsb
add
adc
dec
outsb
mov
mov
sbb
jg
jl
add
cmp
movsb
cmpsb
int
les
adc
cwtl
pop
xorl
insl
cmp
mov
pop
mov
aaa
test
xor
inc
mov
pop
std
pop
mov
das
ljmp
cmp
fbld
ret
jne
sbb
rorb
aaa
pop
test
cmp
add
pop
rorl
mov
push
xchg
sub
push
pop
outsb
fiaddl
push
daa
shlb
add
or
mov
std
sbb
nop
cmpsl
xchg
cmpsb
xchg
imul
inc
and
xorl
nop
jecxz
bound
cmpsb
jecxz
jp
lods
pusha
mov
add
lcall
mov
mov
pop
clc
std
mov
lcall
inc
clc
mov
test
inc
or
movsl
ror
xchg
push
add
mov
das
cmp
lret
mov
gs
mov
sbb
and
mov
icebp
pop
enter
cmp
xchg
push
jnp
pop
outsb
sub
mov
leave
dec
sti
xchg
or
jmp
lods
jne
dec
idivb
xor
lock
popf
rclb
stc
aaa
pop
lods
stos
add
inc
push
xchg
icebp
xchg
aad
mov
stos
nop
xor
test
push
insb
out
enter
mov
movsb
test
add
jecxz
cmp
cwtl
xor
fdivrl
popf
mov
daa
out
or
jae
push
inc
loopne
and
nop
jl,pt
or
repnz
inc
xor
and
mov
push
out
ja
or
icebp
test
jle
jmp
mov
cmp
mov
lds
adc
push
jg
jnp
or
cmc
out
test
stos
jmp
in
inc
mov
pop
out
xchg
inc
lahf
stos
stc
stos
xchg
xor
jae
xchg
divl
lock
pop
pop
mov
idiv
adc
jp
nop
mov
and
repnz
cs
in
ffree
je
js
xor
ljmp
aad
jge
push
or
add
lock
sub
test
xor
inc
jno
test
jo
daa
je
pop
add
aam
aam
cmp
pop
cld
jno
fdivrl
or
testl
aad
fcoml
adc
cmpsb
repz
inc
mov
pop
mov
pop
jmp
loop
arpl
movsl
outsl
in
sar
test
mov
shlb
inc
cmp
notl
sbb
test
and
push
cld
pop
push
out
push
int3
sub
sbb
rcll
push
sbb
push
dec
xchg
sar
xorl
inc
mov
inc
daa
mov
push
or
into
mov
xor
dec
cmp
xchg
and
sbb
cld
jp
pop
sbb
lds
mov
mov
scas
cmp
push
and
xor
dec
jge
ja
push
push
and
cvtps2pd
bndldx
stc
pop
push
push
xchg
mov
xlat
bound
sahf
xchg
mov
sbb
pop
fnstsw
dec
mov
and
sti
pop
cmp
adc
rorb
loop
hlt
cmc
cmpl
mov
mov
fistpl
sbb
jnp
icebp
loope
cmp
jb
pop
mov
dec
sbb
mov
mov
loope
sbb
push
outsb
popa
pop
push
add
hlt
jle
dec
stos
push
dec
push
filds
movsl
mov
pop
aaa
mov
sysret
aad
adc
push
dec
sahf
push
int
clc
int
icebp
rolb
rorb
and
cmc
iret
and
call
pushf
stc
scas
push
sbb
mov
push
rcll
mov
pop
xchg
push
sahf
clc
sbb
fnstsw
std
jne
filds
out
xchg
fstpt
mov
push
in
fidivrl
and
lds
fistpll
out
sbb
inc
add
in
sbb
cld
jo
rorl
test
pop
loopne
movsl
sub
in
push
dec
loope
dec
dec
in
or
btcl
jbe
push
dec
dec
rolb
outsb
pop
data16
cmc
jp
sub
mov
jb
mov
mov
mov
andl
out
call
test
pusha
mov
test
mov
mov
iret
mov
jge
xchg
sbb
sub
imul
loopne,pn
in
push
cli
jo
in
push
mov
hlt
jecxz
or
mov
imul
out
cmpsb
sub
sbb
push
call
add
scas
fiaddl
ret
adcb
dec
lock
mov
test
popa
jbe
inc
xlat
out
adc
addr16
dec
inc
test
dec
add
jae
add
mov
push
add
ret
cmc
lods
in
dec
imul
dec
sti
pop
add
sbb
call
stc
sub
mov
cmp
push
dec
ss
inc
pop
fimull
shl
das
xchg
push
mov
pusha
push
mov
push
fldcw
cmpb
and
push
sub
out
jp
add
push
ret
shll
popa
and
shlb
sbb
mov
jg
mov
push
pop
fs
ljmp
sub
jmp
inc
jg
repnz
lods
lods
shlb
pop
mov
in
dec
iret
popf
or
adc
pop
cmpsl
xor
mov
pop
cmpsl
fsubs
push
fsubrl
push
ljmp
inc
lahf
mov
int3
cs
xor
imul
std
test
daa
jmp
enter
iret
insl
fisubrl
fstpt
mov
sbb
sahf
jmp
inc
ds
stos
imul
insb
mov
push
shll
dec
mov
mov
icebp
fisubs
add
dec
cmp
mov
cmp
arpl
gs
pop
cmp
xorb
mov
jns
mov
mov
xchg
and
outsl
in
hlt
adc
gs
cmp
out
rorb
je
fadd
inc
das
testl
pop
or
jmp
sbb
mov
jg
mov
mov
call
fistl
jmp
rcl
test
pop
and
inc
jl
movsl
in
pop
imul
cmp
cmc
jecxz
mov
stos
movsb
mov
rcl
arpl
lods
movsb
dec
fdivp
lods
push
lahf
mov
cmp
cmp
sub
cmp
sub
sbb
pop
push
xchg
mov
inc
dec
pop
add
push
and
lods
push
iret
or
mov
movsl
mov
pop
loope
xchg
icebp
push
stc
test
divb
clc
pop
cmp
xor
loopne
fdivs
fisubrl
arpl
data16
adc
faddp
pop
and
arpl
inc
fcoms
int
or
jnp
aas
shrl
test
test
jg
cmpsl
in
add
inc
add
or
loopne
in
enter
ret
xchg
ds
mov
fsubrp
js
fistps
outsl
jno
sbb
rcr
mov
fnsave
xchg
fcompl
push
push
nop
es
stc
lea
nop
adc
jg
out
mov
pop
and
aaa
in
std
jl
xor
popa
imulb
in
mov
push
sbb
rorl
loope
aaa
xor
mov
fcmove
ret
cs
mov
mov
nop
aam
pop
add
mov
xchg
push
mov
jae
mov
jge
push
dec
mov
and
cmpsl
daa
in
jno
out
loopne
js
lods
popf
mov
inc
inc
mov
dec
sahf
or
mov
adc
stos
ss
jp
sub
in
mov
popf
sti
push
test
movsb
or
iret
push
fbld
call
into
rcr
addr16
mul
sbb
sbb
sar
cwtl
add
cmpsl
jnp
jne
decb
sbb
adc
mov
rolb
cmp
loope
gs
repz
sarb
std
out
ret
jle
das
sbb
xchg
jnp
fiaddl
rclb
sbb
xor
lods
aam
mov
cmpsl
push
out
xchg
adc
cmp
dec
push
xchg
add
cmp
ss
xlat
push
movsl
leave
xchg
sbb
mov
shl
xor
mov
jae
xchg
push
jbe
xchg
outsb
cmc
loop
xor
sbb
push
lahf
mov
js
dec
into
sbb
jno
inc
call
inc
ss
mov
adc
enter
arpl
mov
rorb
jne
sub
push
adc
and
out
mov
repz
push
inc
push
adcl
daa
fsubrl
bound
mov
jbe
jb
inc
and
stc
dec
mov
adc
xchg
push
popf
ret
mov
inc
cmc
mov
xlat
cmp
adc
jge
popa
xor
add
ret
mov
fisubrl
mov
xchg
sbb
pop
cli
jl
inc
enter
push
in
cmp
mov
in
pop
mov
mov
fistps
ja
cmpsb
cmpsl
push
sbb
dec
xchg
cmp
pop
mov
xchg
xchg
inc
es
jne
push
pusha
jnp
mov
addb
sbb
xchg
shrl
adc
cmp
or
mov
inc
mov
pop
ret
cwtl
bnd
stos
inc
in
adc
fcoms
lods
push
dec
test
mov
pop
lcall
je
adc
fincstp
gs
xchg
sbb
dec
idiv
mov
push
push
mov
inc
push
daa
cli
subb
scas
pop
imul
dec
insl
ljmp
je
aad
mov
ja
lods
mov
int
and
push
or
out
int3
mov
clc
pop
push
or
daa
outsb
add
sbb
or
mov
xchg
jo
addr16
in
ss
pushf
inc
int
cld
lock
cmpsb
fisubrl
ja
into
jbe
inc
pop
sub
jbe
or
in
fisubrs
jecxz
divb
stos
inc
add
fwait
in
push
out
popl
adc
cmpsl
inc
cmpsl
push
adcb
js
aas
adc
lds
adc
bsr
cwtl
rorl
mov
ds
sbb
pusha
jne
pop
test
xchg
push
out
cld
outsl
jne
mov
pop
stos
adc
fbld
icebp
adc
lds
arpl
addr16
int3
mov
xchg
xchg
testl
js
pop
imul
dec
lahf
or
inc
mov
pop
and
pusha
mov
fnsave
mov
cli
aad
jmp
and
loop
out
scas
ror
mov
xor
mov
popf
pop
cltd
fcmovne
sub
lods
mov
add
add
aam
scas
push
push
js
loopne
xorb
mov
fistpl
scas
out
pusha
fs
bound
jecxz
or
mov
jmp
adc
js
fsts
sub
in
mov
dec
sbb
jnp
in
and
mov
test
or
xchg
xchg
test
jae
adc
jle
inc
cwtl
lods
int3
rclb
mov
iret
cli
cs
and
or
pop
push
js
test
mov
sub
add
pop
push
xor
or
ds
enter
jns
pmulhw
mov
jnp
mov
sbb
cmpsl
jb
xchg
nop
rcl
pop
xor
and
sbb
sub
in
mov
in
push
push
out
mov
mov
fstpt
js
ja
mov
aam
in
fildl
add
sbb
jecxz
ja
cld
fs
cmp
fldt
pop
lcall
imul
xor
xchg
and
lea
cld
xlat
xchg
sub
repz
btc
dec
decl
cmp
adc
or
mov
mov
jle
sbb
adc
xor
push
push
mov
fcomps
ss
xchg
push
cltd
jmp
jno
out
std
mov
jns
les
adc
dec
inc
push
icebp
and
int3
add
aas
mov
mov
pop
inc
into
add
aad
push
out
std
mov
cmp
or
test
cld
int
jmp
xchg
ret
lock
cmc
ja
mov
sub
test
adcl
int
add
aam
pop
pop
sub
mov
push
leave
jmp
lock
in
and
or
mov
movsb
ja
pop
hlt
aaa
pop
jns
clc
jmp
gs
movzbl
dec
pop
js
fs
in
rol
fcomp
xor
push
mov
inc
push
in
xor
lea
pop
test
sub
fidivrs
mov
gs
xchg
nop
push
sti
scas
popf
jns
cli
jmp
mov
cmp
dec
or
fstl
cmp
loope
arpl
sub
xor
fisubrs
js
es
add
cld
mov
jmp
arpl
imul
iret
cmp
idivb
dec
mov
add
outsb
stos
cmpsb
adc
fwait
push
test
add
jne
cltd
loope
gs
jl
les
jbe
pusha
adc
cmpsb
add
cs
jae
mov
fdivr
xor
pushfw
inc
mov
call
mov
rcl
loop
push
adc
out
test
xor
aas
fisubs
push
pop
mov
test
mov
dec
jns
ror
aam
push
clac
idiv
xor
fsubr
out
int3
shl
mov
cmp
loop
adc
fadds
test
popf
clc
pop
int
scas
imul
ljmp
xchg
out
xchg
mov
repz
xchg
adcl
fs
cltd
loop
ss
shlb
int3
and
cmp
std
outsb
outsl
mov
adc
popl
jbe
mov
outsb
fwait
dec
sbb
inc
push
cmp
xor
push
sub
clc
push
dec
in
pop
sahf
add
add
repnz
push
push
cwtl
ret
sub
xor
mov
pop
aas
call
enter
xchg
jl
test
pop
dec
imul
orb
testb
xchg
inc
sub
mov
adc
jge
into
adc
in
divb
or
mov
ljmp
jne
out
cmp
lock
inc
ss
fs
jle
sbb
inc
push
inc
cwtl
rcrb
dec
insb
pop
les
adc
ret
dec
sbb
xor
cmc
fbstp
sbb
mov
adc
icebp
dec
xor
cld
shlb
jmp
stc
jl
adc
outsb
inc
testb
pop
jge
stos
bound
outsb
adc
inc
push
sub
sub
fildll
fcmovnb
int3
iret
jmp
or
sbb
cmpsl
jnp
cvtdq2ps
push
dec
mov
adc
insb
aam
les
inc
out
test
pop
push
aad
add
cmp
je
cwtl
lea
insl
dec
shrb
pop
aas
and
dec
ret
std
dec
pop
cmp
cld
adc
daa
cmp
jae
ret
sub
mov
jnp
push
and
dec
cmpsl
sbbl
mov
pop
repz
cmpsl
jbe
into
imul
add
push
or
inc
ds
mov
mov
xor
lahf
and
xchg
pop
out
repnz
testl
in
shrb
jp
xor
aaa
xchg
lock
xchg
cmc
xor
cwtl
pop
push
imul
xchg
cs
outsb
in
adc
inc
and
xor
mov
into
pop
addb
faddl
mov
js
push
cmc
inc
push
jecxz
xchg
cmp
or
insl
push
leave
out
std
ja
test
pop
lds
xor
mov
out
cs
les
call
pop
adc
and
gs
mov
cld
adc
jge
mov
jl
pop
iret
xor
cltd
jge
aam
xchg
pop
lret
or
icebp
jo
xchg
jb
in
out
lret
popa
js
loop
mov
add
loop
mov
pop
rcrb
pop
jmp
imul
sub
cli
movsb
adc
testb
icebp
outsb
sbb
sbb
xchg
rclb
push
out
stos
adcb
loopne
in
aad
ret
jg
lea
xor
aas
je
call
je
hlt
cmp
insb
pop
shll
stos
repnz
sub
dec
negl
sbb
push
mov
outsl
xchg
xchg
mov
add
into
jo
fadds
xchg
lock
push
leave
dec
sub
pop
sbb
xchg
xor
and
or
aaa
cmc
add
shl
dec
jge
dec
inc
push
scas
or
cmp
push
lock
xor
cmpsl
faddl
loope
cmp
pop
stos
mov
sub
inc
fnstenv
aam
mov
or
lcall
add
pop
adc
insl
repnz
lret
cmp
xchg
fsin
adc
push
daa
out
pinsrw
in
fdivrl
mov
into
mov
xchg
ja
sbb
jle
mov
pop
mov
jo
pop
add
pop
pop
mov
inc
daa
add
pop
pop
mov
rcrb
dec
dec
xor
inc
js
cmpb
adc
or
dec
mov
ret
test
outsb
and
loopne
xor
out
sbb
iret
or
or
movsb
xor
arpl
or
lods
lods
sbb
pop
ret
insl
fs
cmc
les
in
fistpll
sbb
test
jo
mov
sbb
cmp
jecxz
out
dec
mov
jmp
nop
fwait
cmp
fwait
mov
push
out
iret
mov
out
jle
push
mov
mov
cs
hlt
stos
mov
xchg
or
lahf
mov
dec
xchg
hlt
or
int3
xchg
pop
test
dec
fwait
addr16
xchg
xor
or
jle
clc
pusha
xchg
push
repnz
pop
mov
mov
cmp
mov
inc
xchg
int3
addl
bound
push
adc
cmpsb
fnstenv
cli
and
or
add
les
inc
pop
stos
movsb
or
dec
mov
popl
and
jmp
cmp
push
push
test
jmp
popf
xchg
mov
push
std
push
aaa
jb
lods
mov
mov
test
andl
xchg
xor
stc
cwtl
jae
jg
jnp
sub
pop
mov
aaa
xchg
adc
hlt
xlat
xor
jge
in
lret
shrb
dec
mov
inc
imul
dec
ljmp
rcrb
ficomps
mov
aas
inc
outsb
push
dec
adc
push
sbb
ret
and
dec
push
cmp
jg
hlt
mov
dec
mov
xor
in
daa
fcoms
imul
cmpsl
jne
test
cltd
aas
clc
inc
sbb
out
inc
push
pop
out
xchg
dec
aas
mov
and
xor
or
test
ja
bound
push
fnstsw
shr
inc
xlat
out
push
in
xchg
aas
fistpl
adc
roll
sbb
lods
add
inc
aaa
adc
mov
je
lea
mov
dec
psadbw
push
push
mov
cmp
lret
js
mov
aam
lret
rcll
pop
hlt
outsb
xlat
out
lret
jle
rolb
iret
arpl
lods
loopne
ret
add
or
mov
sbb
outsl
mov
sahf
and
fstpl
xchg
outsl
inc
js
int
xor
mov
adc
inc
jo
push
inc
loope
test
stos
in
and
ret
adc
mov
or
js
fs
test
movsb
jno
mov
xchg
loopne
bnd
aam
into
sbb
enter
ret
call
jo
mov
add
stc
mov
pop
inc
das
arpl
mov
sub
sbb
test
xor
add
jcxz
stos
pop
test
or
or
inc
xor
addb
les
xlat
addr16
shrl
aas
popa
xchg
mov
fcmovnb
jmp
lahf
mov
jb
rcll
xor
sahf
mov
push
adc
mov
scas
out
cmpb
hlt
xor
hlt
push
mov
fldl
aas
leave
outsl
icebp
push
adc
ficoml
inc
scas
xor
lds
xchg
pusha
mov
insl
jno
hlt
cwtl
or
in
xchg
lock
mov
sub
mov
add
aam
stc
xchg
mov
dec
sub
cli
add
push
push
adc
je
rcr
ja
stos
repnz
es
div
jne
xor
inc
shll
mov
jbe
xchg
pop
push
xor
outsl
int
sub
and
ret
int3
jp
ss
out
out
mov
jb
into
cs
testb
xor
test
jle
das
pop
xchg
stos
cmp
push
outsl
sbb
aas
or
jp
sbb
dec
push
mov
cmp
ret
jl
sub
or
adc
mov
and
cwtl
testb
lea
loop
out
cmp
out
je
nop
scas
out
jne
jg
flds
add
loop
xchg
imul
push
sarb
pusha
adc
rclb
adc
loop
popf
loopne
cmp
mov
pop
jbe
movsl
or
mov
addr16
xor
stos
aad
out
add
and
mov
cmp
add
mov
mov
aas
test
or
cmp
push
lea
jl
cmp
jmp
and
cmp
jns
imul
jp
or
inc
lcall
pop
push
mov
xchg
cmp
inc
test
adc
data16
inc
mov
jae
int
mov
jg
jle
hlt
sub
adc
xchg
lods
stc
push
lret
in
mov
dec
push
xor
xchg
adc
sub
int
xchg
push
out
jl
push
lods
mov
hlt
insb
jne
mov
pop
lds
jge
cmpl
jb
std
lahf
push
pop
sub
jle
mov
pop
adc
xor
das
cmp
in
or
or
xor
pusha
inc
dec
cmp
cmp
ss
dec
mov
inc
jmp
or
ret
fidivl
jns
or
xchg
add
insl
sub
mov
or
xchg
push
or
cmp
test
bound
js
jnp
adc
adc
dec
cmpsl
mov
cs
fwait
or
pop
inc
jp
sbb
fdivr
xchg
mov
enter
fistpll
enter
pop
scas
ja
dec
fs
je
lret
sbb
mov
js
mov
and
push
add
dec
sbb
pop
pushf
jl
sbb
lock
es
cs
and
out
movsl
ja
nop
in
xor
cmp
aas
jge
adc
or
arpl
data16
loop
test
sbb
inc
push
fistpl
lret
adc
in
ljmp
xchg
sub
inc
push
xchg
adc
sbb
sbb
fwait
ret
jmp
pop
cmp
repz
mov
ret
xor
out
aad
inc
mov
mov
or
mov
std
aaa
jo
gs
sub
ljmp
xor
cmc
scas
outsb
scas
test
ja
push
aas
push
cmc
mov
scas
xchg
addr16
inc
inc
mov
mov
notl
adc
mov
in
jg
mov
jo
lock
aad
push
clc
inc
stos
rep
lcall
lahf
pushl
xchg
add
or
fidivrs
cmp
mov
outsl
call
push
xchg
push
pop
bound
add
and
mov
out
sbb
imul
cmc
adc
xor
aaa
xchg
jg
test
inc
cmp
jmp
sbb
in
loopne
inc
ds
pop
dec
pop
into
pop
push
out
test
jb
push
push
xor
xchg
xchg
lcall
test
outsb
xchg
push
xor
daa
test
dec
sbb
inc
out
sarl
test
nop
lds
test
or
into
addr16
cmpsl
sub
movsl
movsb
fistps
add
xor
cs
inc
out
lea
lret
xchg
pop
repz
cld
lds
into
fcoms
test
mov
stc
imul
lock
ficompl
repnz
std
test
ret
fldl
popf
rcr
jl
popa
lock
mov
push
xor
pop
out
xchg
push
mov
ljmp
adc
int
cltd
gs
shll
jbe
add
clc
sahf
in
and
outsb
lahf
aas
add
sbb
sbb
xor
addr16
push
mov
cmpsb
add
add
out
loop
adc
push
stos
inc
lods
icebp
add
rcrl
push
cmovae
sbb
adc
jg
cmc
xchg
repnz
and
jo
cmp
push
insb
imulb
push
lret
out
loopne
in
push
jp
es
dec
inc
aad
pushf
stc
xor
mov
xor
bound
jo
inc
in
sub
mov
adc
subl
daa
sbb
lods
cltd
xchg
pop
sub
mov
lods
popf
in
out
xchg
icebp
push
adc
push
repz
das
add
clc
xchg
and
sub
fdivr
movsb
push
or
mov
mov
lret
jne
sub
jns
int
inc
cmp
mov
inc
jecxz
sub
outsl
imul
dec
dec
lret
sub
pop
push
mov
lahf
adc
jge
and
movsl
mov
mov
sbb
inc
mov
adc
pusha
mov
fistpl
sbb
sbb
mov
pop
aas
cmp
inc
pop
mov
ljmp
insl
push
push
push
xchg
pop
out
add
jmp
out
xor
gs
mov
iret
jmp
out
arpl
push
cmp
repnz
sub
sbb
fldenv
dec
cmp
lock
mov
xchg
out
xchg
mov
inc
mov
movb
lret
and
mov
std
mov
xor
aaa
ffreep
and
dec
or
ja
jne
or
jecxz
fsubrs
jle
cmc
cli
je
call
sahf
jecxz
int3
adc
js
mov
imul
stc
xor
pop
dec
aam
enter
and
lds
ds
mov
jmp
int3
and
cmpsb
cld
jmp
xor
jo
movsl
insb
les
outsb
gs
mov
ret
in
pop
lcall
mov
repnz
xchg
movsl
mov
push
mov
bound
pop
adc
inc
cmpsl
mov
addb
jle
jge
and
push
xchg
dec
data16
dec
stos
dec
and
mov
sbb
push
iret
inc
das
mov
cmp
daa
mov
cmc
xor
ss
or
mov
lcall
mov
imul
mov
imul
mov
fsubl
bound
xor
jnp
jae
loope
add
aad
lret
pop
imul
pop
push
pushf
add
dec
loop
aad
in
dec
popf
xor
dec
xchg
mov
xchg
arpl
pop
addl
out
imul
lds
sbb
pop
xchg
jl
or
adc
add
mov
sarl
xorb
pop
jnp
mov
mov
jnp
addb
and
pop
nop
test
lret
hlt
inc
jmp
mov
mov
cmp
cmp
xor
cmp
insl
pop
mov
sub
inc
jl
out
addr16
clc
pop
xlat
in
mov
jbe
lds
dec
mov
lcall
sub
mov
ljmp
inc
ja
fprem1
fs
js
inc
sub
xchg
in
add
push
push
and
adc
mov
xchg
and
or
add
mov
jg
mov
mov
in
popa
mov
sbb
mov
mov
lret
inc
aaa
or
test
xor
lea
outsb
in
inc
ljmp
xchg
xchg
inc
js
adc
test
sbbb
push
lods
sub
mov
addb
in
in
ret
add
mov
sub
lea
mov
dec
movsl
dec
es
hlt
pop
movsl
movsl
test
adc
pop
xor
imul
leave
sub
popf
inc
icebp
sub
cmp
dec
cmpsb
add
insb
inc
enter
mov
adc
mov
mov
sti
adc
mov
jecxz
mov
call
cltd
fists
pop
cwtl
mov
ljmp
loope
out
xchg
incb
ja
repz
std
lret
mov
ja
repz
in
jp
pusha
es
and
shll
inc
call
jns
and
and
mov
xchg
aad
outsb
push
jl
in
imul
fsubrl
pushf
pop
inc
push
outsb
bound
mull
xor
movsb
mov
push
mov
add
icebp
push
cmp
or
loop
test
das
push
jae
fdivl
xor
and
lret
xchg
mov
lock
ret
mov
pop
into
lock
repz
mov
fsubs
and
les
jmp
rorb
cmp
mov
lods
jo
bound
jp
das
mov
sub
and
xchg
cmp
lahf
andb
jl
add
les
sahf
hlt
mov
sub
leave
push
and
jbe
push
lret
xor
call
lods
jbe
sahf
adc
mov
xchg
js
insb
pop
jge
dec
mov
clc
mov
cmpsb
sub
push
cmp
leave
out
jmp
pop
sti
test
cld
call
and
adc
aam
mov
cmp
push
xchg
push
sub
lahf
dec
ljmp
mov
lret
push
iret
fbstp
xlat
call
mov
jmp
mov
lock
movsb
jo
mov
pop
jno
or
aas
leave
or
outsl
mov
cmp
stos
and
or
jbe
pop
pxor
fisttpl
icebp
or
inc
pop
pop
jecxz
xor
cmpsb
aam
imul
jle
mov
jno
sahf
dec
cmp
test
outsb
push
cmpsl
xchg
fwait
sub
pop
or
jns
sub
or
jecxz
jmp
movsl
and
or
inc
adc
cmp
cvtps2pi
pop
insb
or
ds
mov
push
leave
jecxz
pop
movsl
mov
mov
into
xor
xchg
sahf
movsb
aad
jae
lret
adc
mov
sub
inc
sub
mov
cwtl
inc
xor
add
ss
sbb
and
out
in
les
sub
rorl
mov
push
mov
jb
inc
mov
xchg
in
cltd
push
cmp
pop
push
sbb
arpl
lds
fisttpl
push
pop
push
ljmp
push
imul
mov
leave
mov
push
or
call
loop
ja
dec
mov
push
lahf
out
add
sbb
ret
ret
mov
shrb
mov
movsb
push
ss
pop
xchg
jnp
dec
cmpsl
sbb
addb
sub
sub
mov
cmp
mov
mov
adc
xchg
pop
pushf
rcrl
pop
out
add
mov
pop
push
fs
outsl
dec
push
mov
orb
jp
adc
or
movlps
or
and
cli
out
nop
jle
or
popf
andb
dec
shll
add
mov
in
aad
sub
mov
xor
jno
xor
in
pop
jno
cmp
lahf
adc
es
add
cvttps2pi
dec
jmp
orl
push
cmp
loopne
xlat
and
insl
jmp
sarl
aaa
xor
sbb
rcrl
xchg
cmp
xchg
sbb
dec
ror
test
sbb
cli
pushf
repz
stc
jl
cmpsl
rorb
pushf
push
popa
dec
mov
loop
mov
dec
fs
test
or
mov
icebp
loope
test
popf
popf
push
and
roll
clc
je
xor
scas
fisubs
jns
or
xchg
or
inc
xor
xlat
pop
insl
lret
das
rcrb
jno
cmp
bnd
push
fld
test
jle
loop
sbb
cmp
call
clc
sahf
in
scas
dec
sub
add
divb
sbb
inc
insl
adc
movsb
mov
and
rolb
jp
push
and
jns
xlat
enter
je
subl
lahf
mov
sbb
cmp
push
popa
mov
call
jg
dec
add
and
pop
push
loop
sbb
dec
and
rcll
jbe
mov
arpl
dec
adc
idivb
std
dec
out
xorb
xor
jnp
lret
ss
sbb
and
lret
push
jne
movsb
cmp
push
cmpsl
cmpb
mov
xor
pop
bound
stos
jne
inc
mov
xchg
pop
popa
sbb
fnstenv
movsb
pusha
mov
ljmp
sbb
pushf
adc
popf
outsl
ja
mov
jmp
movsb
shlb
and
nop
inc
fcomps
movsl
pushf
push
adc
push
sarb
cmpsb
sub
sbb
lea
loop
mov
xchg
or
test
call
ficoml
jl
adc
jb
iret
jecxz
mov
push
add
sbb
daa
push
mov
sahf
xchg
push
cli
jnp
mov
ret
cld
shlb
test
out
or
mov
out
ds
imul
sti
negb
push
lods
push
inc
pusha
sub
jae
test
enter
mov
rcrb
clc
pop
jno
js
in
cmp
gs
ja
inc
mov
rcrl
fs
add
jl
add
hlt
or
xchg
scas
je
sbb
pushw
add
push
sub
mov
faddl
insb
loope
dec
daa
inc
mov
loope
pop
add
imul
ret
into
jg
sub
lods
outsl
jno
inc
pusha
mov
sti
push
adc
in
rcr
mov
jle
sub
aam
aad
xlat
mov
mov
xchg
dec
xchg
or
jecxz
adc
push
sbb
lods
scas
imul
mov
xor
insb
and
jecxz
push
sti
popf
ljmp
leave
push
mov
pop
test
push
int
out
fsub
dec
lods
xchg
mov
mov
sub
pop
js
adc
push
aas
loopne
mov
push
and
inc
mov
out
cmpsb
icebp
adc
xlat
shll
mov
pop
ss
pop
mov
mov
adc
ret
and
std
loopne
cs
js
mov
je
xlat
subl
push
ficompl
out
and
insb
fistps
sub
xor
fwait
lea
lcall
mov
push
rcl
rcrl
cwtl
mov
dec
movsb
cwtl
xor
xchg
and
imul
mov
je
loopne
dec
or
sti
pop
fbstp
out
pop
xchg
lods
mov
in
xchg
mov
and
mov
inc
mov
roll
sub
insl
cld
mov
scas
int
or
add
cld
popf
arpl
cmp
sub
das
mov
inc
stos
ret
hlt
test
jb
aad
lret
mov
pop
mov
cmpsl
lock
push
loopne
push
sub
and
xor
push
jnp
jecxz
add
fsub
loopne
jp
aad
shr
ror
jge
sub
push
dec
inc
mov
cmc
sti
pop
inc
aaa
jecxz
out
jae
pop
xchg
push
pop
sbb
icebp
out
pop
mov
insl
int
int
and
inc
in
mov
out
dec
hlt
sqrtps
jl
push
ljmp
adc
adc
fstps
push
cwtl
inc
sbb
das
ret
or
stc
inc
cli
pop
lret
xchg
and
mov
aas
cmp
ja
mov
xor
popf
mov
call
pop
mov
es
nop
pop
ss
inc
and
dec
mov
cmovge
pop
fs
mov
push
ret
test
pop
ljmp
add
pop
stos
xor
adc
nop
xor
es
icebp
push
enter
int3
rcrl
std
test
loope
repnz
je
loop
and
loop,pn
xor
notb
insb
dec
out
das
dec
pop
daa
mov
orb
jae
bound
pmulhuw
ret
pop
idivl
lock
add
stos
scas
adc
outsl
jge
inc
daa
and
mov
push
or
loop
mov
inc
popa
jge
clc
mov
insb
sahf
and
loop
xor
push
push
ja
sahf
lods
in
xchg
xchg
and
mov
mov
or
xchg
std
or
shl
aas
fnstenv
das
add
sub
jae
cmp
jp
xor
scas
hlt
xor
xor
jns
cmp
out
out
push
mov
cmp
nop
add
aaa
push
lret
jmp
dec
sub
test
push
test
jnp
jl
inc
sub
cmp
cmp
scas
inc
fildl
mov
xchg
sub
sub
or
xor
out
push
out
movsb
and
mov
push
int
mov
lea
mov
in
jnp
push
pop
lods
mov
ja
mov
pop
xchg
push
mov
movsb
js
pop
inc
in
inc
sub
mov
dec
lds
adc
jb
scas
sbb
inc
fs
mov
xor
push
cltd
sub
and
xchg
je
mov
lods
cmp
dec
push
inc
stc
mov
add
dec
addr16
jmp
test
andl
push
xchg
fcomi
xor
dec
jmp
mov
add
adc
xlat
inc
xor
sahf
sub
jbe
popaw
cmp
jp
or
imul
cmp
sbb
cmp
and
rcl
stos
clc
xor
xor
shll
arpl
out
mov
dec
ret
es
mov
lods
push
push
testb
and
nop
and
pop
dec
out
fbstp
pusha
sbb
hlt
dec
cld
test
test
mov
sub
ljmp
pop
mov
inc
inc
fs
xchg
xchg
push
or
sub
jo
and
push
ja
outsb
xor
into
jne
gs
out
cmp
iret
mov
sub
sbb
or
push
jae
inc
cmp
fs
add
stos
les
sub
hlt
add
mul
hlt
push
adc
test
test
xor
in
sub
cmp
pop
shlb
andb
ficompl
pop
dec
test
mov
stos
mov
ficoms
inc
jnp
xor
out
dec
icebp
lods
dec
aad
jbe
sbb
sub
popa
nop
pop
push
jb
psubw
cs
ss
test
ja
push
leave
test
inc
mov
sub
or
jmp
cwtl
xchg
or
xchg
outsb
cmp
shlb
push
scas
test
sbb
fcmovbe
adc
pop
inc
mov
jl
and
sbb
lret
mov
test
rorb
xchg
enter
jmp
sub
push
call
mov
les
aam
xor
mov
jmp
fnstenv
in
mov
inc
dec
aas
dec
repz
push
or
mov
mov
mov
xchg
cwtl
cli
lcall
iret
iret
imull
inc
mov
clc
inc
in
fsts
lret
xchg
or
subb
bound
lock
inc
mov
cmp
scas
inc
mov
repz
fiaddl
mov
inc
push
mov
ret
add
mov
push
xor
loopne
pop
jge
jo
lret
int
repnz
dec
cwtl
imul
cmc
pop
jae
mov
push
cltd
and
mov
or
mov
out
call
dec
in
mov
pop
dec
add
test
jmp
jl
dec
and
push
add
or
sbb
push
cltd
popa
or
addr16
push
cmp
pop
test
repz
jnp
sub
xchg
stos
and
popf
jns
lcall
mov
jnp
mov
adc
ret
push
aam
jno
out
insb
adc
gs
imul
sub
ret
rol
imul
cmp
dec
push
loope
mov
mov
push
inc
aam
pop
repnz
cs
add
and
out
push
dec
xlat
and
outsl
mov
jae
dec
std
cli
inc
mov
inc
xchg
lods
add
or
addr16
test
push
dec
loope
leave
es
dec
cmc
mov
mov
xchg
shrl
dec
push
stos
mov
sub
lods
mov
pop
mov
push
xchg
cld
and
dec
jmp
push
sbb
out
mov
es
jmp
pop
mov
and
fidivrs
gs
push
mov
mov
int3
insl
gs
cmp
sbb
es
cmp
push
out
adc
hlt
mov
iret
add
negl
jae
jnp
sub
movsb
mov
inc
push
dec
fnstsw
cmc
jmp
jo
mov
in
mul
xchg
mov
scas
sub
cld
mov
repnz
lahf
lret
push
cmp
ret
adc
insl
ss
enter
mov
inc
and
jle
sarb
xlat
outsb
bnd
push
push
mov
js
mov
out
aam
loopne
and
inc
jecxz
adcl
lret
mov
push
adc
rcr
mov
dec
push
pop
jmp
push
stc
adc
imul
ficomps
mov
mov
sbb
fwait
lods
sbb
mov
mov
rorl
sbb
pushf
das
inc
sub
cli
test
dec
outsb
sub
sbb
inc
fimuls
fimuls
xchg
or
xor
xchg
dec
daa
cmc
imul
scas
mov
fdivp
or
mov
mull
sbb
popa
ss
mov
jge
xor
mov
leave
jp
cmpsb
inc
jl
addb
ljmp
cmpl
mov
popa
int3
rcrl
and
ds
push
and
sub
dec
mov
ret
jbe
xor
mov
xchg
pop
lret
sahf
push
les
jp
xchg
adc
jp
jne
shrl
inc
cmpsb
and
mov
call
mov
loope
popa
mov
movsb
in
ficompl
pop
jg
int
fisubs
fistpl
shrl
fmull
mov
mov
push
mov
loope
mov
int3
cli
jg
cld
pop
scas
xchg
dec
mov
cmc
ds
xor
jae
inc
inc
push
jecxz
je
sbb
add
inc
add
les
test
insl
stos
out
repz
add
dec
xchg
xor
daa
jge
fdivs
cwtl
arpl
in
mov
xchg
push
fsts
mov
hlt
cmp
jmp
fldl
xchg
lds
jnp
add
inc
inc
icebp
roll
pop
cmp
mov
sbb
nop
cmp
mov
sbb
mov
xchg
dec
adc
pop
add
pop
add
test
rcr
xchg
lock
inc
fdiv
cmp
cmp
jnp
xor
scas
sub
jo
sub
ljmp
repz
mov
mov
push
stos
insb
inc
lods
out
mov
sub
les
mulps
hlt
mov
rcrb
inc
dec
and
xorb
xlat
int
or
and
or
and
pop
push
in
fsubrl
rcll
out
add
dec
mov
cld
lds
test
sbb
stc
mov
xor
xchg
leave
hlt
je
adc
sbb
jg
stos
sbb
ret
test
int3
push
adc
out
xchg
aas
mov
fs
cltd
pop
mov
xchg
xor
fwait
mov
test
sbb
iret
sbbl
cltd
sbb
movsb
pop
mov
std
shlb
inc
and
adc
insl
adc
xchg
mov
mov
pop
jl
lret
adc
imul
inc
inc
ss
sub
push
inc
xor
inc
add
xor
in
adc
aas
outsb
pop
lcall
in
pop
lahf
pop
or
xchg
push
dec
outsb
clc
cmp
inc
adc
mov
adc
xor
jbe
adc
jnp
loop
inc
mov
push
sti
pop
xor
aas
dec
ja
daa
in
xor
shrb
fwait
sbb
and
inc
iret
or
movsl
pop
pushl
andb
pop
sahf
sub
repz
and
push
inc
lret
jmp
mov
je
mov
ret
fldl
out
fisttpl
inc
clc
push
push
arpl
arpl
pushf
pushf
int3
lcall
addr16
cmp
unpcklps
mov
pop
dec
decb
fiadds
pop
dec
cmp
mov
cli
inc
stc
cli
aaa
sub
ds
push
popa
xor
out
adc
cmp
mov
inc
aad
cwtl
adc
movsl
mov
pop
inc
xchg
push
mov
dec
inc
sbbl
and
add
gs
mov
jge
push
jmp
aam
dec
test
xchg
add
frstor
and
add
roll
stc
movsb
in
jp
and
ficomps
mov
cli
cmc
cltd
stc
cmc
jns
xor
icebp
mov
sub
mov
add
fwait
int
aas
inc
movsl
and
pop
mov
outsb
push
repnz
cmp
push
mov
sbb
lock
jle
in
ss
orb
cmp
jecxz
pop
rorl
push
or
push
sub
test
insb
mov
in
imull
cmc
inc
and
lahf
jmp
push
js
xchg
or
mov
mov
lcall
cmc
subb
inc
loope
and
fldpi
out
paddw
shr
sbb
push
pushf
not
mov
dec
sbb
mov
push
clc
pop
mov
cmp
in
jbe
add
adc
inc
aas
mov
stc
mov
dec
pop
cmp
sub
stc
or
add
mov
fs
fwait
jg
and
scas
int
setns
lahf
and
dec
inc
popf
and
mov
or
adc
pushf
imul
mov
ficomps
mov
aaa
aam
push
and
sahf
xor
dec
test
xchg
and
insl
pop
shr
fisubrs
sbb
fidivs
push
iretw
ss
push
jno
les
cwtl
push
sub
jecxz
inc
movsb
cmp
mov
sbb
imul
mov
aam
jp
shll
fiadds
adc
or
inc
jle
push
into
cltd
sub
push
ds
mov
mov
int
scas
cmp
out
xchg
sub
fistpl
inc
negl
icebp
dec
in
mov
inc
scas
ljmp
ret
cmc
ret
data16
lret
inc
lock
add
cmpsl
push
mov
adc
sahf
lock
out
fdivrp
xlat
and
bnd
stos
fidivl
sbb
fistl
adc
rolb
jle
and
int3
jmp
ficomps
shrb
rcrl
mov
fisubrl
push
in
adc
jae
jg
mov
movl
jne
ret
xor
xor
cmpsb
mov
inc
fmuls
sbb
test
cmc
repz
into
ret
cld
insl
int3
jae
mov
leave
cmp
aad
mov
jl
pop
and
in
cmp
out
jg
xor
jbe
xor
cltd
dec
pop
data16
adc
inc
data16
fmul
ficompl
inc
cmp
adc
mov
test
cmp
test
clc
or
inc
aas
cs
lcall
imul
mov
shlb
je
push
mov
daa
fdivrl
or
xor
and
mov
fcoms
or
out
or
push
in
jle
xchg
xchg
sahf
mov
or
lea
push
sub
data16
mov
das
test
and
addb
add
out
push
sbb
into
test
cmp
mov
data16
cmp
lret
or
repnz
jb
into
sbbb
cmp
out
sbb
fidivs
adc
fwait
insl
push
mov
dec
mov
out
repz
jg
push
ficompl
push
push
and
and
subl
sbb
xorb
push
push
adc
rcll
lcall
repnz
push
sbb
jge
jp
in
mov
mov
mov
shll
lds
inc
popf
out
adc
add
sahf
mov
adc
insb
or
pop
sbb
in
dec
and
add
push
dec
xchg
stos
daa
mov
fs
jae
push
or
sub
xchg
mov
stos
mov
arpl
call
out
and
ret
pushf
cmp
cmpsb
test
sub
adc
sub
sub
mov
enter
xor
mov
sbb
std
sbb
aas
cmc
cmp
mov
jl
fisttps
mov
ret
and
nop
filds
int3
pop
ja
mov
mov
inc
out
add
jg
mov
sub
test
aam
fisubs
les
mov
test
test
idivb
dec
jo
dec
es
movsl
stos
aas
mov
enter
leave
mov
dec
test
mov
lcall
divl
jmp
jb
out
out
inc
loope
dec
test
mov
pop
aad
in
jno
adc
andb
fnstcw
testb
inc
dec
dec
cmp
xchg
int
pop
movsb
or
dec
insl
sbb
test
popf
stos
adc
clc
inc
mov
rep
mov
popa
cmp
cmp
lds
jno
lds
lret
sbb
and
sbb
jle
popf
cltd
orl
ljmp
test
cltd
jg
sub
adc
incb
fidivrl
add
mov
jns
mov
dec
ss
gs
mov
loop
mov
nop
mov
lds
fmul
mov
cmp
mov
sbb
insb
mov
mov
pop
cmpsb
cmp
pop
adc
push
push
mov
push
jbe
mov
sub
jo
jecxz
xchg
popa
or
xchg
sbb
adc
subb
mov
out
pusha
jp
arpl
idiv
push
rclb
sub
andb
mov
idivb
xlat
inc
lea
mov
adc
sub
lock
fdivs
sub
icebp
leave
jnp
jne,pt
xchg
mov
addb
xor
sbb
mov
xor
les
push
add
jecxz
push
and
inc
jmp
shlb
insl
incl
xor
adc
push
mov
fwait
jns
push
xor
movsl
or
push
jnp
std
mov
fbld
dec
fstpl
aad
sbbl
dec
lock
jl
pop
shlb
jns
pop
hlt
loop
pop
xor
jge
mov
out
test
sbb
fs
mov
in
outsb
inc
fdivs
push
jl
xchg
inc
ret
jmp
mov
imul
or
nop
mov
popa
mov
jae
leave
pop
dec
das
ret
or
rcl
mov
insl
lock
pop
dec
xchg
xchg
fcmovu
lock
jge
popa
fiaddl
idivb
pushl
dec
sahf
pop
pop
cltd
cld
ljmp
out
push
pop
mov
lcall
mov
cmp
mov
push
fsubl
inc
cmpsb
dec
jmp
mov
nop
or
sbb
cmp
jnp
sbb
sbb
sbb
pop
inc
jbe
pop
ds
daa
cmp
lock
mov
rorl
gs
in
stc
push
inc
lahf
adc
xchg
mov
sar
sub
mov
fisttpll
imul
outsb
sbb
dec
sti
int3
push
cld
dec
data16
sub
xchg
pop
inc
pop
loop
lcall
cs
pop
xchg
and
and
clc
adc
popl
fnstsw
and
int
cmpsl
loopne
jg
xchg
inc
push
sbb
ljmp
pop
add
fwait
inc
arpl
xchg
pop
addr16
lods
push
enter
call
add
cwtl
sbb
xor
mov
je
pop
nop
mov
jb
push
repz
sahf
add
add
jae
orb
add
aas
mov
mov
test
in
mov
sub
sub
add
sub
xor
enter
and
sbb
test
adc
int
ficoms
push
sbb
cs
inc
adc
out
pop
in
cld
cmp
fcoms
xor
das
inc
dec
mov
int3
mov
push
mov
mov
scas
lock
mov
adcl
xor
sti
adc
in
scas
lods
das
push
js
subl
mov
push
add
sbb
mov
sbb
mov
or
mov
in
or
dec
and
jne
xor
push
sub
dec
sbb
ljmp
rorl
inc
push
hlt
xor
and
or
enter
aas
sarl
arpl
mov
sub
push
xchg
ret
pop
lahf
and
mov
adc
bswap
inc
ror
sub
adc
add
popf
mov
inc
ret
popa
add
ljmp
fwait
mov
dec
push
mov
and
loope
test
ret
sub
lret
cltd
add
add
add
mov
outsb
fld
lods
xchg
out
mov
addr16
pop
movsl
repz
sbb
call
test
jbe
add
add
test
inc
cmc
add
jg
subb
jg
push
jb
mov
mov
xor
dec
lret
adc
or
xor
test
insb
or
jmp
dec
cmpsl
scas
push
das
xlat
int
lods
std
cltd
cmp
popf
pop
shlb
lods
push
xlat
push
adcl
xor
enter
jno
sbb
xchg
or
fistpl
sbbl
inc
and
push
std
nop
dec
aas
xchg
or
or
cmp
jecxz
inc
stc
mov
dec
add
lret
notl
les
scas
je
mov
fcompl
adc
subl
mov
dec
fisubrs
bound
inc
inc
aad
mov
fisubl
sbbl
into
lahf
hlt
sub
and
fsubl
mov
imul
jb
stc
daa
push
subl
mov
pop
adc
cs
xlat
pop
leave
subl
cmpsl
outsb
push
xchg
adc
push
sbb
leave
cwtl
aad
xchg
lods
cmp
xor
mov
negb
ret
cmp
bound
and
insb
dec
sub
popf
int
and
mov
mov
pop
mov
cmp
call
xchg
inc
stos
out
movsl
test
sbb
add
ja
inc
jge
and
in
daa
call
adc
clc
mov
mov
subl
out
push
sti
or
jo
push
rcrl
jl
adc
jecxz
add
sbb
loopne
outsl
mov
fdivrs
add
add
test
xchg
sub
out
cmpsl
pop
shrb
test
pop
pop
inc
cmp
pop
rcll
fwait
dec
push
out
fimull
add
push
mov
jecxz
in
xor
sbb
pop
dec
andl
sub
jo
dec
pop
add
mov
inc
test
inc
or
loope
inc
lret
or
movb
mov
adc
ds
inc
sbb
dec
sbb
push
pop
adc
cli
jp
lret
cmc
xor
popa
adc
stos
arpl
mov
dec
in
and
sub
jmp
push
jbe
or
jno
pop
lods
movsb
mov
sbb
inc
imul
mov
cmp
add
mov
sti
pop
mov
push
sbb
push
cs
jo
movsb
pop
mov
mov
sub
gs
sub
mov
jbe
test
sahf
rcrl
fsub
cmove
sub
popl
out
sbb
outsl
cmp
in
pop
mov
test
dec
and
push
jno
or
inc
pop
sti
dec
movsl
sub
lahf
adc
sub
in
hlt
or
fwait
mov
inc
dec
push
or
push
or
mov
sbb
cltd
ljmp
dec
push
adc
push
int
in
xchg
cltd
lahf
dec
in
inc
jle
rclb
xor
jge
sub
shll
sti
rorl
push
fidivrs
roll
ret
inc
push
into
negl
jecxz
dec
in
push
test
xchg
shlb
jne
icebp
stos
xchg
in
nop
mov
xchg
in
pop
loopne
in
lods
sbb
jae
fucomip
ds
daa
cmp
inc
sbb
testl
aam
lcall
lahf
add
aaa
outsl
sbb
imul
dec
or
outsl
pop
out
int
cmp
aam
sbb
mov
ljmp
mov
adc
js
aam
push
in
dec
jo
jg
adcb
outsb
push
lds
pop
bound
lret
xor
xor
xor
roll
ja
and
ljmp
xchg
add
popa
repnz
sub
cli
test
call
and
fsubrp
lods
mov
ss
adc
dec
push
mov
scas
xor
xor
fstpt
xchg
ljmp
aas
sahf
movsl
mov
ds
sub
jae
ja
bound
push
xchg
xorb
nop
incl
pop
dec
mov
ret
mov
les
add
jns
gs
fs
test
fmulp
cmc
repnz
mov
pushaw
mov
jbe
xchg
xchg
mov
jno
dec
add
or
push
pop
and
iret
pop
pop
aaa
es
dec
xchg
nop
push
jne
cli
push
sub
sahf
and
sar
or
mov
cli
inc
repz
dec
inc
sbb
call
sbb
pop
outsb
jp
xchg
push
or
clc
ret
shll
mov
sub
into
loop
fisubs
and
inc
xor
cld
jnp
xchg
pop
jg
les
sub
or
mov
add
leave
aaa
dec
adc
sbb
das
out
out
push
adc
adc
rcll
dec
js
aam
pop
nop
test
ret
pushf
xchg
out
icebp
enter
jns
fdivrs
adc
ljmp
iret
in
or
dec
sbb
pushf
cld
outsl
dec
out
adc
jne
jne
icebp
jg
jmp
mov
adc
xlat
or
mov
dec
inc
jmp
xor
in
fwait
push
roll
mov
jle
cmc
pop
outsl
pop
mov
bound
shlb
or
mov
lret
push
sbb
mov
popf
sub
jmp
push
pop
mov
ret
jl
xchg
aam
inc
rorb
xor
inc
shr
std
sbb
push
clc
sub
test
out
mov
inc
scas
add
cmp
cmova
std
mov
nop
adc
ret
and
cs
cmc
lcall
in
push
jl
into
jo
bound
mov
test
mov
fs
dec
fstpt
pop
mov
cmp
or
mov
adc
adc
mov
mov
xchg
and
pop
or
mov
lcall
dec
inc
dec
aad
mov
imul
dec
sub
mov
sbb
mov
sbb
xor
fsubrs
cmp
clc
sub
popl
cmp
loop
mov
test
repnz
fnstcw
das
rcr
pushf
mov
dec
mov
jmp
mov
cmp
push
sub
adc
out
xchg
sahf
fmull
adc
pop
mov
sbb
or
pop
lcall
sub
adc
sahf
fs
repz
shrl
mov
mov
js
jne
sub
pop
popa
insl
mov
add
cmp
adc
iret
addr16
aaa
jno
clc
jg
dec
stc
ljmp
jecxz
sbb
or
cltd
addb
push
mov
repnz
dec
into
lret
test
rcll
mov
xor
dec
sbb
mulb
aaa
js
dec
ljmp
inc
sub
scas
xor
clc
pop
lods
dec
iret
xchg
movsl
shrb
add
adc
popf
pushf
bound
dec
xchg
pop
mov
daa
mov
fiaddl
add
sub
mov
mov
int3
sti
xor
into
add
mov
inc
test
jb
icebp
xor
data16
inc
or
out
insb
push
jle
repz
add
daa
insb
pusha
mov
cli
dec
mov
or
addr16
cli
ficoml
adc
iret
add
aad
pmaxub
xchg
aas
sbb
es
je
xchg
je
fwait
ljmp
sub
out
mov
mov
mov
push
inc
pop
push
xor
fcompl
fabs
stos
int3
mov
mov
jmp
pop
lahf
lahf
cltd
or
pop
xchg
mov
xchg
mov
jp
xchg
inc
arpl
mov
pushl
jp
sti
jl
add
sti
outsb
insb
movsb
mov
mov
scas
in
sbb
and
idivl
inc
xor
lock
pushf
inc
inc
jg
xlat
je
push
dec
cmp
sub
dec
fidivl
cmpsl
xchg
adc
out
sbb
addr16
imul
xchg
push
repnz
imul
loop
xchg
outsb
add
setbe
jo
insl
test
cs
pop
lds
jge
rcll
dec
push
add
mov
adc
mov
inc
arpl
sub
dec
or
ljmp
gs
out
fimull
insl
rcll
pop
subl
sub
shrl
push
push
movsb
je
sbb
cmp
inc
mov
mov
pop
dec
or
fldenv
xchg
js
std
mov
cli
dec
sub
inc
testb
xchg
and
dec
adc
js
xor
mov
daa
add
roll
stos
dec
mov
xchg
inc
inc
cltd
or
xor
int
cmp
dec
call
loope
mov
ret
lret
cmp
lods
mov
jnp
insb
adc
pop
icebp
ja,pn
mov
dec
int
inc
sbb
mov
xlat
inc
inc
jo
test
push
add
int3
mov
adc
xor
test
add
add
inc
sub
mov
cmp
cmp
cmp
cmc
mov
mov
inc
or
pop
xor
ljmp
jns
je
mov
idivl
insl
in
jno
jp
stos
fldenv
movsb
dec
lds
into
movsb
sbb
xor
cmp
pop
jecxz
aam
jns
aaa
flds
pop
arpl
push
inc
dec
xchg
push
ror
and
and
out
xchg
or
test
outsl
int
mov
xor
mov
inc
dec
or
inc
stos
stc
in
pop
mov
in
iret
inc
adc
es
lods
enter
lret
cmp
std
jno
add
ficoml
repz
lds
sbb
xchg
push
inc
sub
fucomi
push
jns
sbb
adc
inc
imulb
mov
sar
mov
ret
jmp
lahf
in
push
dec
add
xor
adc
jno
jns
jbe
out
jo
dec
aas
inc
in
sub
sub
sub
pop
hlt
jg
add
fs
shl
aad
adc
lahf
arpl
stos
scas
shrb
cmp
out
adc
mov
lret
push
sbb
jno
pop
sub
ljmp
cmp
xchg
fildl
sahf
icebp
and
and
mov
mov
sub
ret
mov
mov
mov
mov
mov
pop
test
lahf
xor
push
lods
push
stos
nop
negb
movsl
das
mov
arpl
mov
xorb
in
dec
test
or
mov
lret
mov
icebp
pop
cmp
sti
sbb
icebp
pusha
or
and
and
ret
pop
inc
mov
sub
clc
jb
xor
pop
xor
out
int3
movsb
sbb
sub
jbe
add
sarl
dec
mov
xchg
mov
mov
xor
jbe
jmp
les
adc
push
add
out
or
inc
pushf
jns
xchg
inc
xorl
mov
aaa
jle
pop
fidivs
bound
sub
popf
push
popa
sbbl
or
scas
inc
rcll
pop
lds
push
jbe
mov
mov
jnp
sbb
nop
or
dec
into
cmp
loope
jmp
shrb
enter
in
cmpsl
pop
dec
outsl
push
das
mov
shll
sbbb
dec
or
mov
xchg
mov
mov
or
or
xor
mov
mov
loop
push
idivb
sbb
inc
jae
sahf
or
pop
int
pop
sbb
subl
cmp
inc
sbb
adc
das
imul
sbbl
jmp
push
arpl
sbb
sbb
xchg
push
push
inc
test
lds
sahf
cmpb
push
pop
xchg
loop
pop
push
popa
push
aas
fwait
jg
jo
push
pop
lcall
push
inc
outsb
aad
add
dec
pushf
and
cltd
mov
sub
cs
inc
mov
sub
in
pusha
mov
inc
or
mov
icebp
mov
add
ret
ds
push
clc
aam
and
sarl
outsb
adc
insb
incl
je
cld
sub
inc
loopne
push
xchg
out
cmc
cmp
push
or
andb
call
pop
shll
xor
jecxz
mov
and
mov
push
inc
push
pop
mov
test
jns
xchg
sbb
jbe
dec
jno
arpl
daa
in
shll
push
mov
inc
mov
sbb
xchg
dec
rclb
aas
xchg
sarb
push
mov
cmp
subl
xor
ret
fisubrl
stos
sub
and
jmp
cld
jne
sub
in
mov
inc
fs
jle
add
ja
xor
fucomip
lods
dec
inc
sti
hlt
inc
lret
je
shll
jno
or
pop
xor
mov
or
mov
fwait
int3
in
dec
dec
mov
lret
jb
inc
pusha
scas
lret
aam
xlat
and
adc
inc
scas
rol
cmp
push
cltd
xor
and
je
fs
sub
std
imul
push
mov
in
out
xchg
add
xor
mov
movsl
sub
mov
shll
mov
lds
xchg
loope
clc
pushf
int
nop
lea
and
dec
mov
shrl
cmpl
loopne
mov
dec
inc
bound
fdivs
jb
iretw
add
sub
cwtl
out
jmp
dec
dec
push
jmp
les
pusha
pop
lds
jge
add
aam
divl
decl
faddp
testl
pushf
or
in
ja
sti
inc
mov
or
stos
das
out
ds
or
bound
xor
ret
xor
xchg
cli
ja
and
xor
mov
push
addl
ret
add
mov
sub
jns
dec
adc
mov
ss
fistl
mov
test
ljmp
cmpsl
pop
mov
mov
pop
adc
jnp
ret
sub
add
jg
divl
jmp
cmpsb
inc
push
scas
dec
pop
sbb
push
sub
dec
sbb
pop
cmc
aas
dec
jecxz
std
outsb
pusha
xchg
cld
and
dec
sbbl
adc
xor
leave
lods
stos
mov
jle
adcb
mov
outsl
pop
xchg
repz
xchg
xor
pop
sahf
mov
pop
insl
push
mov
out
aam
shll
roll
cwtl
push
ret
in
inc
cwtl
add
inc
mov
dec
push
int
call
pop
cmp
in
addr16
xchg
sub
outsl
adc
mov
sub
dec
lcall
pushf
mov
cli
imul
out
sti
mov
sahf
sub
fs
and
inc
or
xchg
int
add
mov
fscale
and
sub
and
push
adc
add
push
ja
popa
clc
adc
add
mov
pop
jmp
mov
sbb
xchg
mov
dec
loop
in
mov
sub
mov
nop
movb
or
push
dec
ja
inc
dec
mov
adc
xchg
stos
xor
jo
adc
cwtl
sbb
mov
cmpsb
mov
and
shlb
sub
stos
fsubs
add
and
pop
call
push
add
stc
or
dec
ret
sbb
xor
dec
xor
fnstenv
js
pop
jnp
jle
or
scas
mov
add
stos
imul
mov
outsb
cmpl
shll
pop
ret
xorl
mov
aad
imul
into
out
and
push
test
or
stos
add
rorl
andl
jno
adc
repz
mov
push
ljmp
inc
idiv
je
push
orl
and
xchg
adc
cmp
sbb
or
test
popa
cld
dec
mov
xchg
lret
cwtl
es
in
cs
xor
out
fistps
repz
addr16
data16
sub
jb
jg
mov
out
adc
push
pushf
mov
push
repz
imul
and
cwtl
out
mov
xor
fmull
in
test
mov
leave
sub
andl
mov
repz
mov
loopne
push
dec
or
mov
mov
jl
xor
hlt
pop
movd
jne
jo
mov
xor
mov
add
pop
dec
jbe
sbb
xchg
dec
cmp
mov
and
mov
mov
push
xchg
loopne
push
push
fsub
dec
les
adc
ror
dec
lcall
push
xchg
insb
aad
jmp
repnz
jb
pop
fistpll
push
bound
inc
sar
add
mov
lahf
mov
fldenv
dec
mov
xor
add
cmp
rorb
dec
mov
out
adc
pop
and
or
dec
enter
popa
data16
ja
ffreep
xlat
addl
test
cmp
movsl
daa
cli
mov
push
mov
lods
rclb
sbbl
jno
enter
ret
mov
jnp
pop
pop
loope
mov
jne
test
and
ret
cs
adc
pop
adc
push
imulb
aad
daa
jg
sub
xor
lea
sbb
imul
stos
in
jbe
fwait
sub
subb
adc
cmp
scas
cmp
adc
imul
add
mov
xchg
popf
jmp
jno
in
repnz
mov
xchg
in
nop
cld
sub
jle
in
dec
lods
and
lods
dec
lds
or
xchg
enter
add
fsts
mov
adc
in
jmp
inc
inc
cltd
les
cmp
inc
xor
or
sbb
adc
cmp
mov
xor
clc
cwtl
dec
hlt
xor
scas
sub
mov
cli
sub
testl
movsb
xchg
xlat
xchg
push
xchg
or
add
cmp
test
movsl
cmp
mov
sub
int
ds
pusha
notb
fwait
xchg
or
add
sahf
cli
lods
cmpsb
adc
and
pop
sbb
test
lods
sti
mov
cmpsl
divl
je
mov
js
jle
xchg
jle
test
jo
stos
je
mov
stos
mov
jne
loopne
jl
mov
mov
mov
or
adc
pop
dec
int
sub
cld
sar
fsts
int
in
mov
cmp
pop
loopne
add
fisubs
add
fistl
push
outsb
nop
shl
jecxz
roll
rorb
int
jmp
ret
add
cmp
jns
cmpsb
jnp
dec
ja
add
pop
push
jnp
cmp
push
mov
and
lock
adc
icebp
je
iret
mov
stc
sbb
fsubrl
fdiv
into
imul
mov
adc
rcr
rclb
mov
and
loope
inc
and
popa
or
mov
es
iret
xchg
inc
test
pop
push
out
cmp
pop
ljmp
sub
dec
pop
sahf
test
repz
bound
sahf
xchg
xor
loope
xchg
mov
jns
ret
pop
push
ss
dec
jns
mov
mov
test
mov
cmc
mov
xor
push
mov
push
enter
gs
loope
xorb
cmp
mov
stos
lcall
cmp
jne
and
sbb
jp
mov
cs
adc
sub
movsb
leave
adc
push
lods
shll
clc
icebp
dec
loope
popa
sub
jb
mov
push
dec
call
testb
xlat
mov
sbb
inc
sbbl
xchg
pop
mov
clc
das
push
adc
jmp
xchg
mulb
data16
insb
aaa
pop
xor
icebp
sbb
push
jp
pop
xchg
fistpl
mov
mov
sbb
imul
and
inc
pop
mov
mov
out
mov
movsb
aas
out
movsb
push
idivb
addb
lods
cmp
imul
dec
dec
inc
push
movsb
insl
es
mov
outsl
cmp
pop
and
std
mov
je
mov
cmp
sbb
pop
test
cli
push
pusha
insb
repz
test
adc
jmp
rorb
xor
add
push
sbb
into
sub
or
mov
aas
cmp
cli
stc
sbb
fidivl
mov
jmp
jg
div
fnstcw
out
pop
and
daa
fistpll
xchg
test
insl
mov
push
push
test
in
jb
mov
sub
xchg
jmp
or
and
push
nop
in
sbb
ret
sub
jae
and
mov
out
rolb
push
adc
lret
popa
jl
hlt
jo
ja
leave
mov
sub
daa
and
dec
enter
mov
cs
inc
cmc
dec
inc
jge
rorl
mov
sub
into
fs
mov
lods
lds
sub
dec
pop
cmp
insb
popa
loope
fistl
cmp
aam
imul
roll
jae
mov
and
daa
jbe
enter
inc
sub
ss
addr16
jo
add
push
and
icebp
loop
add
icebp
fdivs
jne
int
jb
push
outsl
cmp
mov
sbb
jle
ret
loopne
fadds
pop
jno
jbe
dec
cwtl
out
in
in
je
push
adc
out
sbb
clc
inc
add
dec
xor
fwait
and
inc
les
jae
adc
mov
xchg
lcall
push
push
and
mov
outsl
pop
pop
push
in
mov
out
sbbb
or
lea
jp
jl
jmp
outsl
ficomps
jbe
mov
shrb
pop
sbbl
xlat
inc
lea
fistpl
sbb
dec
shld
inc
popf
xlat
xor
mov
ficomps
sti
frstor
out
jns
lods
imul
out
lds
cwtl
test
jne
movsb
dec
xor
add
dec
add
fdivl
xchg
repz
or
xchg
mov
add
scas
jmp
inc
xor
ret
adcb
inc
jl
and
outsl
scas
out
leave
mov
arpl
fst
lock
or
adc
ret
adc
inc
jnp
sub
xor
mov
lahf
popf
in
lret
cltd
mov
sti
fbstp
imul
daa
push
xchg
std
bound
inc
jg
mov
out
insb
out
dec
jb
xor
inc
inc
pop
fsubl
nop
sbb
or
cmc
lock
mov
loop
ds
mov
mov
adc
inc
mov
mov
je
cmp
out
loop
insb
mov
cmpsb
mov
ja
imul
out
scas
imull
push
push
mov
in
xor
xor
test
mov
repz
mov
in
imul
xchg
shrl
mov
arpl
out
test
inc
shrl
arpl
push
push
addr16
in
addb
inc
jns
jg
xchg
lea
es
dec
je
or
mov
adc
inc
push
lods
out
xchg
test
subl
enter
test
push
or
shlb
sub
cmp
rorb
fs
loope
in
dec
pop
xor
pop
sarl
and
fidivrs
in
daa
push
inc
dec
in
jmp
dec
dec
jae
mov
add
ss
sbb
das
ror
and
mov
inc
lcall
cmp
ljmp
pop
and
repnz
pop
lcall
stos
cltd
xchg
in
movsl
pop
mov
ret
jno
pusha
jns
or
lock
cmp
sbb
xor
jns
inc
adc
outsb
push
icebp
push
mov
add
or
sbbl
je
clc
pop
adc
std
cmp
aad
mov
shll
int
mov
sub
mov
xor
inc
inc
lahf
in
xlat
mov
dec
orl
cmc
dec
push
or
push
push
push
in
mov
mov
jae
push
jne
cmp
int
mov
orl
das
out
inc
jo
leave
daa
mov
or
mov
or
divb
sbbl
push
je
mov
in
jbe
fistpll
mov
xchg
sbb
loop
xchg
push
xchg
and
outsb
jp
mov
fiaddl
daa
out
hlt
push
cmp
sti
loop
popa
sbb
adc
stos
pop
adc
ret
out
pop
fld
leave
aaa
in
fidivrl
cltd
rcrl
sub
pop
push
and
mov
mov
sbb
iret
mov
mov
in
sar
or
es
inc
cmc
xchg
mov
cmpsb
pop
jmp
lods
movsb
stos
sub
push
inc
insb
bound
pop
popa
jl
addr16
pop
push
out
and
scas
sar
stos
cmpsb
cmp
sub
fnstenv
das
jae
pop
bound
test
cmp
push
mov
shrl
mov
pop
cmp
mov
dec
repz
adc
lret
push
jg
mov
and
jo
pop
cld
mov
ja
mov
lock
xor
sti
or
mov
push
sarb
add
in
bnd
test
mov
xor
xchg
repz
xor
pop
jl
jge
jmp
stc
pop
pushl
pop
out
mov
pop
dec
cs
cmp
out
push
in
mov
in
sbb
movl
and
hlt
in
call
enter
sbb
movsb
mov
loope
call
add
aas
testb
pop
add
mov
cs
xor
ja
sbb
mov
jl
or
sbb
repnz
mov
jp
sbb
jbe
add
int3
add
loope
outsl
in
std
xor
dec
test
inc
dec
mov
pop
fwait
jo
xchg
divb
jmp
cs
into
or
inc
mov
rclb
fnsave
cltd
cld
pop
push
leave
fstps
jb
xor
jp
lock
xchg
or
and
xchg
movsl
lock
fistl
jge
jle
sub
out
jo
std
mov
mov
sbb
ficoml
add
push
mov
adc
dec
test
inc
inc
add
adc
and
aaa
int
fidivrl
divl
xor
mov
push
dec
pop
lods
in
adc
pop
xchg
push
xchg
add
icebp
lcall
ret
int
lahf
nop
cmovo
fbstp
jmp
jae
cmp
jbe
pusha
cwtl
xor
or
cs
mov
sbb
add
jl
lock
cmp
pushf
ss
jp,pn
pop
es
lret
adc
mov
loopne
bound
bound
or
subl
inc
xor
cmp
mov
iret
or
cmp
or
xchg
mov
sub
je,pn
xor
jle
or
mov
pop
pop
in
adc
rorb
imul
jns
cmp
repnz
xchg
push
xchg
jmp
push
cmp
in
das
outsl
popa
xor
pop
mov
lsl
popa
pop
cltd
mov
ret
gs
cmp
pop
out
cli
shll
jle
xor
jle
pop
shlb
dec
mov
ljmp
mov
out
xchg
jbe
insl
fs
enter
clc
cmp
mov
dec
out
mov
sbb
jmp
subl
mov
jl
std
xchg
or
fisttps
hlt
iret
adc
and
mov
mov
nop
test
or
aas
jbe
and
insb
testl
xchg
into
fnstcw
lock
loop
lret
mov
adc
push
adc
xor
mov
mov
cmp
jp
xlat
loope
inc
or
ret
test
dec
fdivs
xor
repnz
in
stc
call
mov
lret
pushf
xor
mov
push
test
cmp
or
sbb
jge
jbe
mov
jno
das
out
pop
mov
es
mov
adc
cwtl
fwait
pop
jge
inc
sub
addb
xchg
or
or
or
cltd
and
inc
bound
test
dec
jno
filds
xor
inc
adc
sbbb
cmp
in
jbe
ret
mov
mov
cmp
xor
insl
movsb
add
add
iret
jns
cmp
xchg
imul
bound
cmp
nop
xor
cmc
push
push
ss
mov
push
aad
mov
les
xor
in
mov
xor
xor
movsl
movsb
adc
cld
or
mov
lret
add
aad
pop
adc
arpl
mov
xchg
out
rclb
mov
nop
inc
jg
fbld
xchg
jbe
outsl
pushf
adc
cmpsb
jl
lret
push
add
xor
cmpl
add
jecxz
cmpb
les
push
mov
ja
jg
bnd
push
es
sbb
inc
mov
cmp
and
into
pop
in
shlb
add
jmp
mov
push
pop
pop
shl
cmp
out
mov
nop
dec
adc
fsubs
in
dec
cmpsl
mov
mov
cmc
push
out
jns
jecxz
adc
and
mov
cmp
push
pop
movsb
pop
repnz
jbe
cmp
jmp
movsl
jg
aam
shll
jp
test
scas
dec
enter
sahf
js
fdivr
outsl
cmpsl
fs
sub
inc
and
jge
jle
scas
dec
dec
bound
icebp
xlat
inc
inc
xchg
cli
xlat
outsb
or
xor
insb
out
and
push
outsl
inc
add
sbb
and
add
mov
xchg
out
in
adc
shrl
sbb
out
xchg
decb
adc
dec
jb
mov
out
int3
or
lods
sbbl
bound
adc
adc
aad
or
in
movsb
lods
aam
dec
pop
les
mov
xchg
jae
call
xchg
mov
push
cmp
mov
dec
fistl
fdiv
inc
movsb
sbb
mov
arpl
insb
xor
mov
rep
lds
jne
jmp
in
dec
or
sub
cmpsb
mov
in
fidivl
stc
sbb
ss
aam
pop
scas
cld
push
in
push
and
mov
jmp
arpl
push
mov
add
pop
or
push
jno
push
shlb
jno
sub
les
call
sub
sarb
or
mov
xor
imul
mov
ljmp
int3
imul
adc
cmp
sub
and
dec
out
fs
dec
mov
pop
cwtl
jnp
shll
pop
pushf
jl
aas
xchg
or
mov
inc
dec
pop
mov
adc
cmpsl
xchg
sub
add
mov
lea
leave
pop
adc
jmp
mov
mov
xor
scas
xchg
jae
enter
pop
test
data16
decb
push
sub
add
movsl
jo
in
jbe
ret
add
mov
pusha
sub
fwait
addr16
mov
int3
push
shlb
loop
fstpl
int3
add
sub
ror
lea
push
pop
popa
inc
loop
repz
pusha
cmp
fs
xor
push
sbb
cmc
dec
sub
cmp
int3
sub
call
out
cmp
mov
add
mov
lods
inc
or
sbb
movsl
and
mov
ds
int3
sbb
mov
xchg
cld
adc
pop
insb
out
sub
pop
lret
adc
mov
push
jp
out
stos
or
aad
fistpl
mov
cmpsl
ja
or
out
aam
loop
and
loop
and
cmp
lods
fwait
add
sbb
sbb
aas
push
lock
dec
fcompl
adc
mov
add
add
pop
pusha
cmc
sub
mov
jns
adc
mov
adc
stos
aam
sub
mov
and
mov
loop
dec
stc
mov
or
sbbl
iret
ret
sub
gs
scas
mov
add
rclb
inc
cmc
sub
outsb
mov
add
fwait
add
xor
cmp
or
in
mov
mov
cmp
jae
scas
xor
push
aas
cmp
and
mov
push
sub
dec
scas
aam
ror
movl
ljmp
mov
dec
add
push
xchg
xor
mov
pop
cmp
cmpsl
xlat
lret
pop
dec
lahf
movl
cmp
test
or
sub
or
mov
cmpsb
jne
pusha
idivl
movsl
ffreep
xor
add
lcall
mov
pop
mov
add
in
inc
das
cld
and
movsl
scas
sahf
mov
sar
gs
cmpsb
mov
popa
notb
cmc
scas
xor
aaa
mov
in
pop
adc
in
aam
out
mov
leave
dec
mov
lods
xchg
mov
out
aaa
push
mov
cwtl
sub
jnp
aam
popf
push
dec
push
mov
and
inc
fcompl
les
adc
pop
je
rolb
cwtl
dec
cld
sbb
mov
pextrw
add
xor
pop
in
scas
sub
jne
sub
push
xor
test
sub
ret
gs
in
lds
repz
rorl
popa
dec
rcrl
inc
mov
pusha
cmpsb
pop
les
test
and
bound
icebp
aaa
sbb
xchg
add
xchg
mov
repz
andl
xor
xor
push
add
push
pusha
pop
xor
into
mov
imul
sub
adc
mov
mov
xor
jmp
cli
push
sub
jae
jo
loope
pop
jns
sbb
clc
fstps
out
ficoms
adc
pop
imul
lods
mov
out
jae
cmova
cmp
mov
cmpsb
cmp
std
and
insb
pop
icebp
ds
pop
or
mov
sub
pushf
jo
fcomi
enter
and
scas
mov
sbb
js
addr16
pop
in
negb
dec
push
jmp
stc
sub
push
xor
stos
inc
adc
in
xor
adc
xor
testl
sahf
adc
data16
gs
call
test
ret
sbb
sbb
cwtl
xlat
add
and
add
lret
arpl
ljmp
dec
sbb
add
les
int
test
xchg
push
cmpsl
lods
mov
push
xchg
pop
sub
cltd
lods
push
xor
pop
push
pusha
es
cmp
out
inc
pusha
pop
push
mov
xlat
mov
inc
sbb
mov
add
jo
sub
lods
and
pop
push
call
jg
fucomp
pop
add
cli
enter
stc
add
lret
cmp
ja
xchg
sbb
fisttpl
jbe
test
pusha
aam
mov
call
testl
jne
outsl
adc
clc
aad
sub
dec
pop
cmp
mov
xor
lret
inc
mov
bndldx
sbb
mov
test
cmpsb
jmp
jbe
mov
gs
mov
push
stos
inc
popa
mov
std
js
stos
xchg
push
mov
call
sbb
fisttpll
rcrl
adc
push
loope
movsb
cli
sbb
mov
sahf
pop
dec
ret
cmpsb
jno
shl
test
inc
les
cmpsl
cltd
bound
pop
dec
cmp
push
sahf
jbe
fistps
movsb
cmpsl
pop
clc
hlt
adc
dec
sub
imul
repnz
je
push
pop
fs
jns
cmp
add
das
mov
mov
inc
cli
fidivrl
aad
pop
add
and
pop
ret
jge
inc
inc
sub
push
jl
and
sub
xchg
mov
mov
movups
fsubrl
mov
pop
iret
cmp
roll
loop
in
mov
or
loopne
cmc
clc
adc
adc
jl
outsl
ficompl
jp
adc
out
mov
icebp
cwtl
roll
and
xor
lds
ljmp
clc
cwtl
dec
in
cmp
push
add
orl
cltd
mov
iret
mov
aad
mov
lods
ror
and
mov
inc
push
pop
mov
xchg
inc
jbe
mov
xchg
jmp
xchg
loope
push
cmp
movsl
movsb
sub
pop
insb
mov
adc
mov
or
mov
stos
aas
xor
nop
lea
cmpsb
out
push
lcall
in
in
arpl
jne
xchg
out
mov
int3
ljmp
dec
push
repz
cwtl
rorb
pop
xchg
cmpsb
inc
mov
es
mov
adc
dec
add
push
pop
outsl
lcall
adc
push
add
sarl
push
jne
dec
stos
dec
jno
jo
mov
lds
scas
out
or
iret
orl
sbb
sub
dec
loopne
rorb
fnstsw
fwait
mov
push
and
mov
jg
mov
push
ja
and
xchg
in
adc
cs
jecxz
cltd
adc
adc
testl
lds
out
push
adc
or
lret
out
les
lea
jmp
jl
ss
flds
push
push
jl
dec
xchg
cmp
hlt
push
lea
pop
out
cmpsb
mov
aam
inc
in
add
outsb
ret
inc
add
dec
sbb
mov
xchg
adc
ds
jp
jno
stos
loop
mov
mov
pop
daa
sub
fistpll
mov
fistpll
jge
ja
cmp
jae
roll
fs
jp
or
mov
mov
std
cmp
or
loop
decl
pop
jle
xchg
xchg
xchg
test
pop
mov
and
and
push
and
fmull
jbe
jo
xchg
outsl
xor
adc
dec
stos
mov
sbb
mov
xor
aas
mov
int
fwait
dec
fs
fdivrs
ret
lcall
adc
scas
testb
add
jae,pt
push
mov
cli
and
push
cmp
gs
jne
test
clc
adc
test
in
push
or
bound
add
pop
xchg
sub
cld
test
outsl
fdiv
sub
jmp
and
jne
lahf
fwait
jle
frstor
ficoml
jl
cs
pop
gs
ljmp
sub
xchg
mov
mov
int
iret
repnz
xor
mov
lret
mov
cmp
cmp
push
mov
outsb
sub
fsubp
pop
jp
inc
stos
sub
add
movsl
mov
lahf
mov
pusha
jl
adc
mov
out
js
mov
nopl
call
cmp
pop
push
arpl
xor
push
pop
and
into
jb
call
stc
stos
pop
inc
dec
jl
fsubl
mov
and
xor
aaa
fcmovnu
or
push
enter
and
mov
push
icebp
idivb
clc
sbb
jnp,pn
dec
xor
push
mov
jno
cmp
subb
inc
arpl
and
jecxz
pusha
imul
shrl
jp
mov
icebp
xor
fcompl
jmp
into
xor
xchg
xor
cmp
lret
add
pop
mov
pop
ficomps
sub
cmp
mov
outsl
cmp
mov
cmpsb
jge
push
fisttps
xchg
test
imul
ss
mov
mov
jae
mov
pop
or
dec
mov
mov
loop
mov
mov
sub
cbtw
mov
jmp
or
lret
fld
mov
mov
or
rolb
xchg
mov
jge
imul
pop
loopne
mov
sub
cmpsb
inc
jge
pop
fildl
out
mov
push
dec
sbb
pop
in
add
pop
sbb
aam
mov
dec
mov
adc
inc
cwtl
leave
cmp
push
lea
jae
mov
xchg
push
mov
or
pop
and
cltd
std
push
mov
cmp
jg
sarl
es
das
adc
ja
xchg
xor
and
dec
insl
adc
aas
push
rcll
mov
lock
mov
add
jns
mov
dec
and
cs
push
lds
mov
out
shlb
fcmovb
pushf
fisttpll
mov
dec
pop
ss
cmpsb
sbb
int
sub
jne
mov
jae
subl
call
and
mov
mov
jne
sub
hlt
decb
hlt
sub
xchg
popf
mov
in
add
nop
test
sahf
inc
shlb
js
sbbl
in
jmp
repz
push
mov
dec
ret
dec
daa
mov
push
mov
dec
xor
stos
push
orl
mov
fdivp
cmp
jno
add
jnp
and
fistps
dec
test
popa
push
outsb
in
cmc
mov
imul
xchg
lahf
mov
js
pop
shll
cmpsb
loope
sbb
rcrl
jle
cld
mov
inc
jbe
jecxz
test
push
dec
jb
dec
mov
int3
pusha
adc
inc
jecxz
mov
sar
push
dec
loop
ret
push
adc
xor
xchg
into
dec
fsubr
xchg
and
push
jecxz
fimuls
stos
mulb
pop
aam
lods
enter
xor
imul
push
push
out
and
and
pop
cmc
ret
dec
shlb
cmp
call
mov
mov
and
fsubl
mov
jp
mov
stos
pop
fwait
enter
mov
pop
jns
push
mov
ret
xchg
xchg
add
mov
in
insb
in
mov
aad
mov
push
xor
stos
sub
mov
cmp
in
in
out
mov
lods
enter
pop
jp
adc
push
inc
and
arpl
rcl
sarl
out
mov
cmp
leave
daa
mov
aas
xor
lea
pop
push
dec
cli
popa
jnp
pop
cltd
add
sub
sub
roll
or
imul
adc
dec
xchg
mov
out
pop
movsl
jge
shll
dec
jo
rep
loopne
jecxz
enter
jnp
outsb
rcll
sub
push
shrb
repnz
add
loop
scas
pop
pop
mov
imul
mov
outsl
dec
cli
test
std
push
jnp
shlb
dec
mov
negl
dec
pop
scas
sbb
or
std
mov
icebp
add
cmp
test
jge
and
xorl
xchg
mov
mov
stos
xor
mov
sbb
out
and
idiv
jle
adc
jns
jns
mov
inc
and
mov
dec
xchg
xor
bnd
popa
and
ficompl
out
je
adc
push
dec
dec
scas
dec
sti
mov
hlt
fistpl
mov
push
cltd
test
xor
jecxz
mov
and
push
xlat
xor
push
subb
lds
fldcw
push
mov
push
lods
mov
push
mov
sbb
add
loopne
cwtl
lock
and
out
inc
adc
cmpl
lock
insl
mov
cwtl
mov
lock
mov
mov
lods
mov
or
shrl
inc
xor
push
jns
int3
mov
outsb
subb
test
push
pop
sbb
xchg
loope
inc
adc
pop
arpl
push
leave
test
push
push
dec
mov
or
or
hlt
in
pop
add
mov
enter
das
sbb
add
movsb
data16
scas
scas
lods
sbb
insl
jmp
sbb
sbb
push
lods
sbb
mov
dec
dec
out
loopne
out
pminub
fmuls
fdivrs
cmp
movsb
cmc
hlt
lret
int
push
test
push
mov
sbb
lods
imul
push
cmpsb
or
adc
mov
and
fxch
jge
cld
lock
mov
sti
aam
lds
dec
push
test
push
popf
mov
jo
popf
inc
xchg
stos
and
into
mov
mov
sbb
outsl
je
add
jp
fbstp
mov
mov
sbb
inc
xor
je
xchg
ret
cmc
sbb
pop
sbb
inc
and
dec
push
mov
pop
int3
divl
addr16
jl
push
xor
ja
call
test
xchg
popf
push
into
fsubr
aaa
dec
xchg
push
pop
cmp
data16
in
decl
sahf
les
outsl
decl
stos
sbb
add
movb
adc
ljmp
iret
icebp
inc
ret
pushf
adc
xchg
stos
mov
jb
es
rorl
outsl
test
sub
jmp
cmp
sahf
aaa
push
sahf
push
popf
cmpsb
gs
fsub
mov
movsb
mov
jbe
test
and
stos
ret
xor
adc
int3
jbe
xchg
mov
cld
cltd
cltd
test
outsb
adc
mov
into
cmp
sub
inc
or
test
inc
cs
push
jg
jo
add
leave
jl
adc
xchg
cmpsl
leave
adc
inc
add
mov
cmp
scas
fidivrs
test
in
xor
cld
mov
dec
rclb
mov
mov
es
and
sbb
lret
pop
cld
xor
es
xchg
add
rcl
jle
movsb
ja
push
aad
movsb
out
ret
test
mov
mov
inc
sti
lea
push
ds
aas
sub
mov
fwait
xchg
sahf
cmp
sub
pop
mov
int
inc
lret
aad
or
cltd
test
xchg
out
inc
gs
push
rcrl
xor
repnz
mov
mov
adc
scas
frstor
mov
test
sahf
in
mov
inc
sbb
push
nop
xchg
lds
push
add
and
jo
out
mov
test
and
pop
sbb
adc
in
push
sti
in
cltd
adcl
mov
movsb
adc
push
jns
std
pop
and
and
ja
cmp
fs
pop
cmp
mov
scas
lcall
push
jbe
xor
inc
aam
mov
lds
jbe
mov
enter
fs
icebp
loopne
xchg
push
mov
mov
mov
int
stc
mov
sarb
test
sbb
das
add
cmpl
int3
je
stos
mov
stos
push
call
push
cmp
cwtl
loopne
pusha
lahf
push
pop
inc
pop
cmp
cld
sbb
dec
xor
push
pop
and
lods
imul
pop
and
shrl
mov
push
sbb
loop
jecxz
dec
sub
and
and
adc
push
cmp
jns
hlt
or
push
mov
divl
scas
pop
ljmp
xlat
and
push
pop
xor
mov
outsb
sbb
jb
ljmp
xchg
enter
fildl
inc
mov
scas
movsl
stos
fwait
mov
push
jge
mov
fisttpl
enter
and
popf
jne
push
and
in
cmp
fldenv
mov
add
cmp
xor
mov
mov
mov
mov
gs
addr16
jno
bnd
xor
adc
and
test
lods
rcr
cmp
mov
dec
cmpsb
mov
cmpsb
xchg
add
mov
push
and
pop
std
cmpsb
nop
cmp
fisttpl
lahf
int
pop
dec
xor
pop
shll
add
pop
repz
aaa
rolb
jecxz
sub
dec
cmp
xor
cli
mov
loope
mov
sub
into
dec
sarb
add
xlat
loop
push
lods
jecxz
cltd
inc
jecxz
mov
jns
outsl
xchg
jno
add
push
in
pop
gs
cltd
sbb
cmp
cmc
and
dec
ja
mov
ret
popl
xchg
pop
push
in
inc
or
inc
cmp
pop
adc
enter
or
xchg
adc
mov
pop
popf
insb
mov
js
push
inc
repnz
stos
dec
xchg
lods
jl
sbb
rorb
and
or
ja
out
mov
sub
xchg
xchg
cmp
orl
pop
das
loopne
movsb
adc
sbb
insl
mov
dec
icebp
cmp
sbb
jg
xchg
xor
dec
add
rcrb
shll
repz
and
mov
sbb
sub
rcll
loopne
rcrl
testl
arpl
pop
push
movsl
and
test
pop
push
cmc
scas
xor
sbb
call
adc
cmp
push
data16
ja
pop
sahf
pop
xor
bound
imul
sbb
xchg
fsub
jp
aaa
rorb
push
mov
push
xorl
push
je
imul
inc
leave
ds
jae
dec
rorl
outsl
mov
lcall
push
add
dec
xchg
cmp
stc
dec
and
sub
xor
lret
arpl
cmpsl
xor
pop
push
and
adc
movsl
mov
sbb
push
leave
test
negl
clc
jmp
push
jp
jns
mov
insb
xchg
sti
cld
cli
or
mov
ljmp
push
mov
cmpsl
sub
dec
outsb
mov
mov
fstl
jo
push
js
cmp
in
mov
adc
and
xchg
push
pop
inc
jge
out
lds
test
pop
sbb
int3
std
es
cmpsb
lret
loopne
mov
outsb
dec
push
sbb
fldenv
divb
cmp
mov
sbb
or
adc
mov
adc
pop
loop
push
daa
fwait
jl
shr
pop
add
cmp
inc
data16
lds
ja
mov
nop
in
lods
mov
mov
sub
mov
xchg
add
push
add
scas
mov
mov
in
mov
cmp
ljmp
mov
rorl
iret
cmc
xchg
int3
jne
divl
cmp
xchg
aad
and
adc
add
adc
insl
std
leave
scas
mov
dec
mov
ja
add
pop
mov
push
and
mov
jl
test
je
std
fcoms
or
mov
dec
adc
xchg
jge
push
cmp
sub
and
pop
cmp
loope
dec
dec
and
push
negl
ss
lret
scas
and
inc
lret
xchg
fwait
lcall
mov
cmpsb
negb
lret
push
pop
mov
xchg
or
cmp
dec
cli
mov
cmp
stos
push
sahf
ss
inc
mov
sbb
mov
pusha
mov
xor
sbb
inc
xor
cs
jmp
mov
notl
add
push
push
aaa
pusha
mov
xor
push
lret
jecxz
pop
pop
mov
repnz
sub
aas
pushf
faddl
ret
in
add
roll
mov
outsl
push
das
dec
add
adcb
fisttpl
je
sbb
jle
cmp
repnz
out
xor
mov
in
in
pop
push
rol
or
push
repnz
mov
fsts
add
clc
and
mov
scas
xchg
iret
adcl
xchg
scas
mov
ret
leave
repz
pop
mov
xchg
fucomp
out
xor
jg
adc
mov
jnp
dec
cmp
jae
sahf
xchg
out
dec
std
xchg
or
cmp
mov
lret
data16
xchg
mov
xchg
in
lcall
fs
loope
test
cmpsb
jns
ficoms
popa
and
loopne
jmp
mov
xchg
mov
lds
xchg
shrb
outsl
mov
addr16
popl
stos
test
cmp
in
and
push
mov
xor
pop
or
push
sbb
sub
mov
add
xor
and
and
or
es
mov
mov
std
sbb
xor
fcoms
cld
mov
lret
ret
lret
out
aas
loop
ret
add
cli
xor
addb
call
push
cmpb
mov
dec
mov
xor
mov
lock
pop
mov
jmp
dec
clc
xchg
xchg
lcall
neg
mov
movsl
mov
xchg
xor
jge
xor
pop
jge
sbb
mov
xchg
and
adcb
mov
pop
in
nop
fstps
aam
jae
mov
jle
jo
ja
dec
les
mov
aam
xchg
out
mov
jae
lea
in
scas
ficomps
lods
xchg
xor
push
repnz
ret
or
mov
orb
lea
pop
orl
gs
clc
aad
jle
or
cmp
sarl
add
lds
jnp
imul
lods
mov
mov
clc
cld
jg
pop
ljmp
int3
std
or
push
and
and
push
sub
outsl
push
inc
sub
movsb
xchg
dec
sub
cmc
and
and
xor
call
daa
pop
addr16
stc
dec
sbb
out
adc
or
mov
ret
adc
and
frstor
test
andb
loopne
shl
mov
daa
jmp
in
popf
fcoml
hlt
loopne
je
es
punpckhdq
popa
mov
stc
mov
pop
mov
cmp
int3
mov
pushf
lret
dec
jne
push
lea
push
jmp
pusha
pop
cmp
dec
int3
cmp
or
bound
inc
ja
or
jle
and
fwait
cli
andl
out
test
or
in
mov
lds
push
imul
xchg
add
gs
add
jno
lock
adc
cmp
sub
add
sub
pushf
sub
movsl
add
lret
fcoml
cmp
pop
stos
lcall
jo
fidivs
ja
iret
subb
dec
inc
adc
out
das
inc
lea
ja
mov
inc
in
jp
flds
mov
push
int
push
mov
xchg
mov
inc
lock
clc
mov
sbb
dec
in
inc
xchg
fwait
ret
mov
out
sbb
or
push
mov
mov
aam
dec
fisttpll
mov
shl
stos
mov
aas
out
jle
scas
lods
push
adc
jl
and
clc
push
push
mov
push
lods
stos
jne
and
sub
jnp
add
outsb
shl
lds
xchg
loope
pop
pop
pop
loopne
cmc
inc
dec
js
inc
pop
out
push
aas
jae
fs
push
push
push
or
mov
divb
dec
inc
scas
daa
mov
movsl
ret
inc
add
pusha
or
popa
mov
loopne
mov
out
add
lret
in
mov
mov
mull
inc
mov
cs
or
pusha
insb
xor
orl
push
adc
jo
cmp
imul
lds
cmpsb
pop
xor
jecxz
les
push
inc
mov
movsb
push
ret
xchg
cmp
clc
ret
nopl
int
fadd
sub
pop
ds
loope
cltd
enter
loop
inc
lahf
leave
xor
js
push
int
fldt
insl
mov
add
xor
inc
jns
add
xchg
push
fstps
jbe
fs
or
jnp
push
sahf
fistl
push
and
mov
cld
andb
shl
push
sahf
xlat
movsl
mov
mov
test
aaa
dec
cmc
rorl
lahf
call
mov
adc
jmp
movsb
xchg
repz
sub
stos
mov
lods
gs
inc
mov
jmp
shl
pop
dec
aad
out
popf
or
ljmp
xor
bound
jno
mov
repz
pop
call
xor
ret
sbb
mov
xchg
add
or
cmp
push
cld
in
jnp
inc
add
aaa
shll
mov
and
sbb
pop
call
push
in
fisttps
push
mov
out
mov
arpl
out
push
xor
insb
mov
mov
outsl
ja
mov
orb
xchg
push
pop
sbb
jbe
jp
outsb
jl
fisubrs
mov
xlat
inc
call
pushl
rcr
orl
mov
push
shr
xchg
addr16
mov
sahf
mov
sbb
xlat
push
hlt
dec
sub
incb
cmpsb
call
xor
mov
add
dec
jge
mov
insl
orl
pop
xchg
stos
jl
decl
sub
je
xchg
xchg
cs
add
jle
lock
icebp
sub
jmp
int3
jae
aam
into
pop
inc
fbstp
pop
nop
sbb
cwtl
mov
mov
dec
adc
test
or
out
cltd
insb
fsubrl
mov
add
dec
in
pusha
aaa
lahf
jnp
dec
push
pop
sbb
mov
pop
or
lods
jnp
leave
dec
mov
into
sti
popa
mov
sub
sub
cld
int
mov
sbb
popf
cld
jmp
mov
scas
mov
ja
test
add
loope
lret
in
fucomi
pop
pop
mov
mov
or
fistl
pop
pushf
out
sbb
and
dec
pop
js
mov
sarb
lret
mov
ret
dec
fcompl
xor
mov
or
dec
inc
jle
nop
jecxz
add
mov
stos
shll
inc
xchg
mov
mul
bnd
lret
sub
pop
jmp
shlb
push
push
cmp
or
loop
lock
js
mov
loope
cmp
ss
shlb
pop
sti
hlt
lods
fdiv
aaa
jae
arpl
idivb
cltd
and
or
shll
repz
in
pushf
add
ret
adc
in
lret
sbb
movsl
cld
xor
and
das
cmp
loope
mov
cmp
pop
push
mov
out
sub
pop
push
dec
pop
loopne
scas
jnp
dec
mov
xchg
push
push
xchg
mov
xchg
xor
sub
pop
pop
add
mov
mov
fwait
xchg
addr16
sbb
or
pop
inc
hlt
inc
and
popa
imul
test
pushw
insl
test
fdivp
cld
sub
lods
sub
mov
jo
outsl
xchg
mov
fwait
xchg
pop
push
add
dec
out
push
cmp
pop
lods
stos
andl
pop
in
xor
jns
pop
push
test
cld
outsb
sahf
fldenv
push
add
filds
nop
hlt
notl
cmp
insb
bound
dec
mov
mov
push
dec
sbb
push
or
fistpl
lahf
pop
mov
ds
xor
sar
mov
stc
push
jecxz
rorb
lret
pop
les
and
insl
enter
dec
or
mov
mov
inc
ljmp
mov
add
in
jns,pt
mov
cmp
add
xorb
or
aaa
ljmp
push
mov
inc
mov
call
xor
fcomps
mov
iret
loop
mov
in
mov
inc
andb
mov
sbb
sarl
enter
xor
cld
mov
dec
and
jecxz
je
dec
aam
inc
xchg
scas
xlat
cltd
dec
adcl
add
pop
adc
pop
loop
popa
push
push
bswap
stos
or
lods
sbb
call
adc
hlt
iret
jp
mov
or
sbb
nop
repnz
repz
push
das
in
jecxz
push
pop
hlt
fistps
ds
xor
add
xor
or
or
pop
loopne
pop
fucompp
mov
pop
pop
clc
add
outsb
mov
iret
mov
mov
aaa
into
in
int
add
ss
inc
mov
sub
xchg
int3
call
sub
xchg
cmp
xchg
movsb
mov
cmp
movsb
icebp
scas
fadds
mov
sti
roll
lock
outsl
dec
adc
inc
adc
xchg
push
pop
xor
inc
adcb
jecxz
gs
int3
je
or
push
jge
out
pusha
or
xchg
mov
mov
pop
jmp
mov
lret
out
cmpl
and
pop
lret
push
fsubrs
ret
sbb
jb
fs
sub
add
insl
push
scas
xchg
bound
mov
dec
cltd
or
sbb
push
pop
cs
movsb
fsubrl
test
sbb
das
push
sbb
add
repnz
fwait
xchg
sti
mov
lods
xlat
ljmp
and
adc
data16
adcl
jmp
insb
push
add
and
arpl
lahf
lods
push
in
fnsave
and
mov
and
test
cmp
inc
add
mov
ds
inc
sub
shrb
dec
shrb
add
in
insl
mov
outsl
rcrl
lret
rclb
mov
cmc
mov
inc
and
sbb
iret
xor
mov
mov
lods
adc
mov
cmp
js
mov
cwtl
lcall
aas
fmul
clc
cld
popf
ds
dec
jmp
push
ljmp
xor
mov
mov
pop
xchg
sahf
lods
mov
cmpsb
incl
es
xchg
sbb
mov
movb
lcall
popa
cld
sbb
in
push
outsl
cmc
inc
adc
fdivs
lods
mov
xor
arpl
adc
mov
mov
jmp
pop
cmp
shll
jns
stos
icebp
and
sbbb
ret
mov
inc
enter
jne
sahf
ret
cmp
jl
mov
icebp
xchg
jmp
fwait
aad
add
jbe
sarb
repz
pop
ret
incl
push
cmp
sarl
mov
jne
inc
xor
xor
mov
lcall
outsb
mov
and
lods
ljmp
pop
dec
jle
inc
pop
jmp
inc
xchg
ljmp
rol
adc
out
int
in
dec
push
xchg
outsb
pop
dec
bound
xchg
leave
xchg
insb
cmpb
es
cld
rolb
adc
cld
sarb
cld
je
out
into
pop
push
in
iret
inc
mov
or
push
push
notb
aas
cmp
sbb
xchg
cmp
hlt
lahf
cld
div
mov
in
mov
not
jp
loop
sbb
cmc
mov
sbb
das
std
fsubl
jmp
lods
je
scas
adc
pop
jge
xchg
int
mov
in
lds
or
rorl
ret
xor
or
int3
push
leave
sbb
push
je
cmp
cmc
lea
aaa
movsb
xor
xlat
jecxz
add
loopne
jecxz
addr16
repnz
or
mov
scas
xor
hlt
in
mov
or
push
or
mov
cmpsb
sub
adc
leave
push
xchg
dec
mov
adc
into
pop
insb
sbb
push
jecxz
xchg
mov
push
rcrb
mov
mov
fs
adc
cmpsl
in
adc
sub
jmp
sarb
iret
and
sub
arpl
add
sar
xor
pushl
out
icebp
mov
cld
lock
outsl
and
test
xchg
fnstenvs
lock
ret
mov
lods
pushf
scas
loope
ja
mov
xchg
mov
mov
mov
mov
bound
stos
dec
inc
or
mov
das
retw
cld
push
dec
popl
je
clc
adc
mov
icebp
ret
sahf
subl
push
push
xor
ret
xchg
outsl
out
dec
mov
outsb
mov
jnp
test
out
inc
mov
test
adc
jmp
fisttpl
cs
hlt
mov
aaa
adc
sub
or
pop
js
pusha
ret
mov
cwtl
fsub
add
xchg
adc
cmpsb
cld
das
xor
js
xor
ja
dec
xchg
cmpsl
ror
and
stos
xlat
pop
and
jns
xchg
orb
xor
add
fdivs
icebp
mov
and
or
or
ljmp
loope
das
mov
outsb
mov
cmc
xchg
xchg
cmp
mov
arpl
cs
cmpb
adc
lahf
jp
cmp
outsb
aaa
mov
test
mov
push
and
rcrb
aad
jmp
mov
mov
icebp
test
pop
jge
or
mov
mov
clc
dec
data16
mov
pop
shll
pop
loope
lahf
or
xchg
inc
pop
jno
add
inc
nop
out
and
mov
and
xor
sub
pop
out
fcmovb
call
popf
lea
push
shlb
add
mov
cltd
push
out
push
and
xchg
xchg
push
and
sbb
lds
clc
xchg
cs
out
xchg
xchg
pushf
and
mov
xchg
popf
push
nop
gs
sbb
cld
fildll
jbe
add
cmp
in
inc
rcll
xor
jne
aam
daa
dec
cmp
mov
popf
push
push
js
ds
inc
lock
pop
mov
cli
cmp
push
pxor
ljmp
inc
pop
xchg
xor
lods
loop
add
sub
or
xorl
test
or
lret
scas
rorl
nop
sti
cmp
subl
addr16
ds
dec
frstor
insb
dec
jnp
sahf
jge
adcb
mov
sbbl
pop
mov
aas
dec
int
or
mov
xor
dec
mov
mov
pop
cmc
lock
pop
push
hlt
ja
sbb
dec
loop
arpl
cwtl
dec
adc
out
ret
popf
movsl
ret
or
mov
xor
cmp
idivb
push
sbb
fimull
dec
iret
push
in
fldpi
sbb
or
rcl
dec
mov
pop
cmp
aas
jnp
xchg
call
push
lahf
adc
jmp
sbb
inc
jb
pusha
cmp
jecxz
push
dec
stos
stos
cmp
inc
cld
scas
jmp
jl
mov
fstl
mov
enter
push
repnz
adc
cld
mov
insb
and
jo
cmp
test
inc
xchg
stos
out
mov
mov
sub
stc
sbb
pop
int3
jne
lods
xchg
sbb
imul
mov
xlat
sti
mov
fcomi
sub
fisttpll
push
xor
and
jg
and
mov
sbb
dec
jle
inc
and
loop
test
pop
cmpsb
call
inc
and
or
mov
mov
adc
out
add
movsb
cli
movl
aad
enter
jg
pop
mov
xor
add
sahf
cltd
adc
adcb
cmp
in
pop
lods
xchg
orl
push
lds
dec
decl
rorb
pop
arpl
out
mov
aam
inc
sbb
push
lret
pop
push
pop
shll
out
sub
or
pop
in
mov
gs
call
les
or
adc
dec
nop
or
cltd
xor
fcmovbe
in
jmp
jo
jge
cli
imull
inc
int
aaa
push
int3
mul
mov
push
xchg
dec
or
pop
loope
adc
xor
lock
fsubrs
adcl
sahf
and
in
out
jbe
scas
jmp
icebp
mov
les
push
push
mov
lcall
jo
mov
mov
es
and
push
cltd
fdivrl
push
or
fdivr
sub
nop
test
pop
sbb
out
push
inc
ljmp
jb,pn
rcll
cmp
js
lret
pop
popa
in
les
popa
adc
adc
mov
mov
and
mov
adc
adc
jg
xor
mov
xlat
lcall
and
mov
jb
loop
movsb
xchg
pop
ds
jns
push
pushf
pop
insl
mov
mov
pop
or
arpl
out
push
test
adc
test
iret
add
lea
scas
testb
in
push
add
addr16
xor
push
or
adc
mov
mov
and
jmp
shll
add
xor
pop
aam
fdivrs
jns
pop
mov
comiss
push
inc
out
dec
mov
mov
pop
cmpsb
dec
or
movsl
fs
imul
in
jmp
mov
pop
sub
jl
data16
dec
into
les
xor
into
cmp
mov
bound
test
cmp
cmp
pop
data16
sbb
push
or
fldcw
imul
or
adcl
es
xchg
addr16
movsl
inc
mov
pop
shl
add
aad
dec
pop
fs
push
jbe
and
out
xchg
movsb
adc
sbb
sahf
mov
fists
sbb
pushf
ss
out
mov
scas
lahf
sbb
fmull
cwtl
leave
ds
push
lahf
loope
rclb
jle
int
sbb
push
insl
xor
jecxz
pop
cli
jge
jecxz
out
xor
jmp
popf
sub
mov
add
aas
inc
or
cmp
sub
push
xor
int
ret
jle
cmpsl
xor
jo
bnd
adc
mov
ss
pop
sub
addr16
mov
cmp
fwait
out
jp
addr16
stc
jl
popa
mov
lock
or
ja
mov
dec
outsb
orb
add
fisubs
pop
mov
sub
scas
xorb
pop
movsb
adc
mov
sbb
or
inc
xchg
out
aas
lock
or
inc
and
outsb
in
call
and
dec
repnz
pusha
jo
push
dec
mov
sbb
lock
inc
addr16
cli
inc
cmp
lods
push
mov
clc
and
push
gs
ds
ftst
sti
repnz
xor
xchg
mov
xchg
lock
mov
int3
mov
in
sbb
push
xor
add
mov
jecxz
ret
dec
les
or
out
fcomps
stos
add
and
pusha
mov
push
test
rorl
mov
sbb
push
out
mov
xor
pop
out
iret
adc
mov
xchg
sbb
adc
push
mov
or
mov
pop
les
out
pop
in
andl
push
js
arpl
xor
lret
wrmsr
ret
adc
jo
inc
pop
js
std
lea
into
scas
shll
pop
clc
mull
rol
cmp
stos
adc
mov
mov
xor
jno
push
nop
inc
mov
lret
ljmp
push
movb
testb
into
add
in
dec
repnz
cmp
sbb
insl
xor
hlt
sti
inc
sbb
stc
sub
push
and
dec
mov
adc
sbb
iret
test
xor
ret
push
push
or
mov
addr16
out
push
cmpl
shlb
jmp
push
into
in
mov
push
mov
sbb
in
cmpsl
xlat
arpl
fldt
loop
decb
adc
das
shrl
mov
ss
dec
aaa
stos
or
jle
pop
push
insb
ds
cwtl
xchg
aaa
mov
xchg
lahf
aam
inc
cli
mov
daa
addr16
xchg
fsubs
xchg
cmpsb
sub
test
std
dec
gs
in
mov
adc
add
and
icebp
std
mov
pushf
fisubrl
cwtl
cmp
outsb
sarb
mov
icebp
push
nop
movsb
dec
clc
stos
pop
push
cmpsl
mov
mov
pop
or
sbb
out
mov
incl
xchg
adc
add
sub
shl
fidivrl
adcb
dec
push
xchg
jp
push
push
or
xchg
sub
cmpsl
daa
shll
rol
iret
jae
push
dec
daa
jns
sub
sbb
xor
out
xor
push
adc
enter
lret
divl
out
mov
in
sbb
jnp
dec
push
icebp
cmp
mov
leave
sub
xor
cltd
in
sbb
add
push
add
popa
rcrl
push
add
xor
in
inc
or
out
jg
adc
xlat
or
mov
cmc
sub
xor
sbb
or
movsl
js
fidivrs
pop
mov
ret
test
int3
divl
mov
repz
push
mov
faddl
mov
or
sub
aad
scas
or
xor
cwtl
cmc
loopne
les
int3
in
mov
mov
mov
call
idivl
stos
shlb
test
pusha
loopne
das
xlat
bound
loope
add
clc
cmp
inc
push
add
cld
std
and
in
ss
subb
ret
imul
push
xor
adc
jge
addr16
jmp
bound
push
fisubrl
dec
cmp
and
in
cmpsl
inc
lret
lret
mov
pop
xchg
neg
ja
pop
jecxz
mov
cli
xor
sbb
jne
outsb
cmp
fucomip
shll
rorb
jnp
lahf
iret
jns
imul
jp
jno
inc
push
fadds
leave
scas
or
lock
jle
lret
pop
call
andb
mov
pop
cmp
addr16
jae
xor
clc
loope
int
adcb
ljmp
jmp
scas
adc
repnz
push
xchg
cmp
aad
mov
xor
mov
lock
jae
xor
jg
mov
iret
out
mov
and
adc
orb
pusha
adc
fucomip
jne
adc
push
jo
sbb
or
adc
in
std
fldcw
cld
arpl
stos
sbb
fstpt
jo
rcll
mov
cmp
call
fs
popf
sub
scas
xchg
std
rorl
cs
fs
sub
mov
bound
or
inc
cmp
leave
sbb
mov
xor
es
mov
xor
arpl
cmpsl
mov
in
movsl
mov
jo
cmp
lret
mov
sub
test
add
rcrb
mov
clc
scas
push
cs
xchg
mov
mov
loop
sub
mov
add
scas
ds
pxor
in
adc
aaa
aaa
filds
inc
adc
lret
mov
aas
adc
mov
xchg
inc
mov
std
mov
cmc
mov
sarl
xorb
inc
mov
cmpsl
or
rolb
insl
cs
out
mov
or
test
pusha
jns
xor
pop
je
aaa
loop
push
jle
out
jle
add
dec
in
lock
cmp
cmp
or
iret
jl
mull
mov
add
mov
mov
sub
sbb
cs
push
xor
test
nop
jnp
inc
testb
es
mov
push
xor
lret
add
movsb
pop
movups
rclb
xchg
mov
nop
call
mov
and
or
gs
mov
je
jnp
add
or
fs
xor
mov
inc
mov
hlt
pop
mov
ficoms
leave
ss
sti
xchg
ret
inc
rep
cmpb
sbb
ljmp
jbe
cmp
int
movntq
mov
mov
leave
xchg
mov
movsl
fldcw
mov
xchg
inc
je
xchg
mov
imul
push
rcll
scas
cmpsl
movsb
jns
ss
dec
fildl
out
adc
cmp
loopne
push
xchg
jp
adc
pop
pop
sub
dec
popa
mov
es
ret
mov
fldt
mov
nopl
lds
adc
andl
call
xchg
pop
and
imul
jo
lods
push
push
lahf
bound
outsl
cmp
xchg
jmp
dec
pcmpgtd
add
ret
jno
mov
cmpsl
sbb
and
aaa
cmp
lods
ss
dec
push
lock
add
jne
inc
nop
mov
rcr
sub
mov
call
mov
add
lods
xchg
and
xlat
sub
ljmp
cmp
push
lahf
mov
jns
outsl
rcrb
lods
or
lock
out
push
inc
cld
and
cwtl
movsb
push
stos
loope
lahf
add
xchg
int
cltd
in
scas
jecxz
add
lret
in
aam
sbb
sub
dec
clc
aam
cmp
ret
movsb
lods
xchg
repz
add
xchg
stc
push
out
adc
add
xchg
add
shlb
pop
lods
or
das
sti
test
lret
xchg
lcall
jns
mov
mov
sbb
adc
pop
clc
pop
sub
and
dec
bound
xor
dec
inc
push
xchg
xchg
shl
movsb
xlat
add
mov
push
inc
popa
adc
mov
rol
ja
sbb
xchg
xchg
dec
negl
test
mov
fimuls
jg
lret
ja
scas
fs
in
mov
test
aaa
lret
add
cs
js
sahf
pop
push
jle
xchg
jmp
cld
loopne
pop
popa
dec
push
imul
xchg
repz
ljmp
mov
lret
pop
sub
xchg
lds
shrb
test
sbb
popf
jne
pop
or
jecxz
sbb
cwtl
inc
mov
add
xor
loop
inc
cmp
mov
mov
mov
dec
xchg
cld
dec
fucom
loope
dec
enter
mov
gs
mov
dec
pop
mov
not
add
pop
in
pop
sti
cmpsl
jmp
xchg
inc
mov
scas
idiv
jl
sbb
push
stc
cmp
cmp
add
cmp
out
rorl
lcall
lea
lock
mov
dec
loop
mov
xor
scas
mov
push
jge
sub
sub
pusha
mov
and
fcmovnbe
sub
cwtl
xlat
cwtl
or
sub
sub
movsb
xchg
cmpsb
imul
xor
gs
mov
movsl
inc
pop
jno
fwait
mov
jl
push
jle
imul
out
stos
outsl
ja
fs
hlt
push
cmp
push
mov
aad
roll
mov
jge
imul
jns
mov
sbb
add
and
and
jl
dec
mov
repz
int3
jp
push
inc
mov
aad
fidivrl
addr16
cltd
jecxz
aas
aas
xchg
jo
mov
jecxz
cmp
roll
cmpsl
and
inc
ljmp
and
dec
push
mov
sbb
push
inc
nop
movb
and
outsl
cmp
stos
mov
jb
pop
jmp
jmp
pop
and
loope
hlt
xor
std
push
xor
and
dec
sub
inc
shrb
push
pop
push
and
rep
js
popa
imul
xor
adc
ja
into
mov
js
lds
adc
or
in
stos
jae
push
push
sbb
jmp
xchg
leave
inc
inc
mov
xor
ret
sub
cmp
stc
dec
movsb
out
jg
test
add
mov
in
lret
bound
sbb
dec
pop
rclb
out
fs
test
cmc
jo
add
in
xor
add
fsubs
andl
sub
sub
in
shrb
add
pop
and
inc
or
hlt
add
aas
lods
daa
cwtl
cmpsl
xor
or
add
adc
fsubrs
movsl
jbe
cmpsl
and
aaa
testb
push
insl
mov
loope
sbb
push
push
push
in
jge
lcall
push
adc
add
bound
in
jns
loope
push
lods
aaa
test
dec
lcall
mov
sti
push
fldenv
pop
mov
pop
adc
mov
mov
mov
xor
xchg
repz
push
fdivp
loope
enter
sbb
ljmp
mov
add
jns
ss
in
notb
mov
pop
and
bound
mov
push
lods
sbb
fistps
call
jne
cmp
sbb
mov
fnstenv
cwtl
jecxz
sbb
out
ds
sub
fs
out
push
xchg
repnz
sub
mov
movsb
dec
in
insl
push
bound
ficoms
or
mov
pop
repz
xchg
lret
push
mov
adc
pop
fidivl
into
adc
mov
test
test
xor
xor
push
test
mov
xor
loop
je
pop
adc
adc
mov
ret
or
xchg
shl
and
sub
dec
es
jle
imul
rcrl
sbb
sub
or
mov
cmc
or
bound
inc
lret
mov
or
test
imul
pop
mov
jno
adc
push
push
clc
mov
jmp
dec
xor
cmp
enter
cmpsb
movsb
gs
leave
pop
nop
les
enter
shlb
nop
xor
add
push
ret
rcr
push
xchg
testb
xchg
outsl
idiv
shrl
cwtl
movsb
dec
pusha
mov
dec
loop
pop
xlat
and
hlt
test
jo
mov
loop
adc
imul
outsl
adc
jmp
and
clc
mov
push
mov
lds
sub
ss
test
ja
mulb
inc
adc
pop
mov
sbb
adc
int3
cmp
fcomp
push
or
and
add
ficoml
push
mov
ljmp
shl
dec
popa
mov
and
inc
xor
out
push
cmp
dec
add
stos
lds
xchg
add
and
ret
outsl
mov
outsl
rorl
jle
inc
mov
and
xor
insb
cmpsl
sbb
mov
mov
push
shlb
cmc
rol
or
pop
outsl
push
mov
je
adc
mov
out
rorl
sbb
xchg
loope
in
popa
iret
dec
mov
sbb
xchg
shl
sub
mov
dec
lret
outsl
mov
movsl
fwait
mov
nop
push
scas
dec
repz
mov
in
xor
xchg
mov
mov
mov
leave
arpl
jge
sbb
pop
adc
movsb
repz
pop
push
add
aaa
cmpl
sub
nop
cmp
jns
inc
out
mov
pop
test
xchg
ds
push
add
xchg
pop
sbb
mov
enter
jecxz
push
add
sar
pop
vxorps
add
jmp
popw
mov
aaa
insl
mov
adc
frstor
inc
jecxz
jbe
cli
outsb
xor
fdivrs
lods
pop
pop
cmp
adcb
or
cmpb
adc
movsl
mov
mov
movsb
loopne
xchg
cmp
insb
rcr
adc
jae
loope
mov
fldt
mov
dec
or
jnp
add
sbbb
les
mov
lret
push
mov
aam
mov
jo
cli
inc
ret
scas
adc
sti
push
fsub
push
cs
in
push
fistpll
sub
xchg
outsl
jg
orl
stc
xchg
pop
out
insb
jb
loope
xchg
pusha
sahf
sarl
subl
mov
and
hlt
or
ret
aad
cmp
divl
lods
mov
dec
addb
sub
je
lods
lret
jp
or
and
popa
dec
or
loope
dec
xor
cmpsl
aas
and
dec
shll
push
mov
cmpsb
push
push
or
call
sarl
add
push
jne
scas
std
jno
fldt
int
ror
xor
jae
pushf
cld
mov
push
sub
push
sti
sub
jl
sbb
pop
push
imul
adc
pop
xchg
pusha
je
and
outsb
dec
jp
test
adc
sbb
data16
ljmp
in
push
mov
lods
or
leave
fldcw
add
sub
clc
cmc
adc
mov
push
test
pop
xchg
sbb
sbb
outsl
fadd
mov
push
adc
ret
ljmp
jecxz
leave
loop
orl
pop
test
popf
movsl
sub
enter
pop
add
nop
dec
jo
inc
test
insl
cmp
push
jbe
testb
gs
pushf
loope
ljmp
je
xchg
mov
xchg
sbb
stos
mov
push
mov
mov
out
push
lods
mov
jb
and
dec
mov
lahf
fs
fsts
mov
push
or
cwtl
mov
int3
hlt
pop
sbb
in
mov
sbb
ds
int
shl
aad
adc
mov
add
scas
std
lahf
jns
mov
clc
ja
pop
addb
jb
xor
fptan
jno
ds
xchg
test
mov
outsb
movsb
sahf
xor
jg
or
cmc
lahf
scas
movaps
imul
sahf
xchg
add
jg
cld
leave
xor
fsubs
mov
xor
mov
jl
push
imul
mov
sbb
mov
popa
fs
imul
jecxz
insl
push
xor
pop
jo
sub
pop
push
mov
mov
mov
jmp
jae
pop
sbb
ja
mov
imul
mov
inc
aam
test
push
imul
sbb
mov
add
imul
lret
stc
push
cmp
inc
push
arpl
aad
or
xchg
in
adc
push
rolb
add
rcll
loop
inc
xor
lods
add
sub
jnp
lods
push
hlt
mov
shrb
sbb
test
fstl
loop
cmp
cmp
add
sbb
jl
cmp
pusha
lods
or
xlat
adc
xor
or
mov
stc
dec
ret
push
or
pop
ljmp
push
addr16
push
dec
test
xchg
ret
popf
cltd
mov
pusha
mov
aam
loope
jp
dec
push
mov
test
mov
mov
lock
push
jmp
cwtl
add
fwait
jecxz
out
sbbb
xchg
les
mov
lret
ljmp
fld
scas
movsl
int
xchg
call
dec
popf
push
or
pushf
arpl
jl
lcall
clc
inc
dec
push
jle
insb
adc
es
sbb
xor
ss
cmp
xchg
popf
mul
lea
andl
shrb
xchg
push
dec
in
push
sbb
ret
icebp
pusha
out
fistpl
mov
dec
xor
and
or
iret
sbb
aad
fisttpl
or
das
pusha
push
ret
pop
fwait
jae
xchg
lcall
adc
scas
out
rorb
dec
fnstsw
call
pusha
jmp
cmp
nop
inc
shll
ss
xor
mov
addb
js
popl
inc
fwait
add
in
sub
cmpsl
add
add
mov
call
loope
and
stos
insb
shrl
inc
pop
mov
ljmp
push
jae
sbb
cmpsl
push
not
ud1
fbld
mov
jmp
sub
andl
aad
add
mov
pop
adcb
jbe
dec
mov
lods
xchg
test
insl
bswap
dec
in
xchg
js
iret
sub
sbb
mov
push
sarb
ds
out
push
sub
fucom
cmp
mov
cs
fldenv
repnz
mov
xchg
or
rcrl
out
adc
sub
push
fwait
pushf
xor
in
mov
cmp
stos
jne
test
lock
ficoml
jmp
sub
mov
xlat
push
and
les
adc
mov
jo
jno
xchg
inc
cli
push
xchg
and
int
pop
mov
out
insb
loope
push
shrb
dec
jecxz
sub
test
cmpsl
inc
mov
xor
jo
sub
imul
xchg
pushf
aad
ficompl
adc
sbb
pop
pop
mov
test
dec
cltd
hlt
das
dec
xchg
dec
cmp
ja
aaa
jne
mov
pop
dec
pushf
xchg
push
adc
pop
call
jg
iret
das
cmc
xchg
push
call
jle
pop
std
mov
popf
sbb
lock
jle
sbb
aad
push
scas
inc
xchg
xchg
add
cmp
lahf
add
inc
lcall
jmp
negb
pushf
or
test
xor
mov
add
pop
and
adc
and
mov
aam
test
ret
sti
sub
mov
fidivs
sbb
cs
or
mov
jg
pusha
inc
and
in
cmp
daa
fst
cwtl
div
mov
popf
imul
or
enter
sbb
aas
xchg
cmpsl
cwtl
push
cmp
cmp
leave
mov
mov
arpl
or
jne
and
add
mov
loopne
dec
jle
xlat
inc
push
fmuls
lock
repnz
insl
push
xchg
dec
jo
in
sbb
adcb
mov
popa
and
xchg
mov
sub
pop
mov
mov
test
pop
mov
lea
inc
xchg
cmp
push
xlat
out
mov
and
xchg
inc
cwtl
cmpl
mov
stc
das
loop
inc
movsl
je
add
inc
nop
xor
xor
mov
mov
push
in
ja
int
add
sbb
fucom
ds
mov
push
rcll
cmp
cmp
ror
mov
lret
pusha
mov
fiadds
test
lods
fstpt
jo
clc
add
pop
push
xor
and
xchg
rcr
hlt
pop
repz
subb
fwait
std
test
je
sbbl
mov
int
xchg
test
sub
jecxz
scas
in
push
lret
cld
sub
jge
or
xchg
stos
inc
sub
cmpsl
sbb
scas
mov
cmp
fldz
cwtl
jmp
push
xor
pop
pusha
dec
dec
daa
sub
jl,pn
xchg
add
xchg
arpl
xchg
jbe
jge
arpl
hlt
mov
and
insl
and
pop
lahf
sub
sub
jns
lret
and
fisubl
sub
sahf
stos
loopne
mov
in
mov
pop
aas
fimuls
ss
xchg
ret
ja
daa
sub
push
xchg
les
mov
leave
push
cmpsb
rcl
xchg
pop
or
andl
and
push
push
dec
mov
pusha
pop
ljmp
add
pushf
icebp
subb
gs
mov
bound
lcall
mov
cmp
pop
cwtl
cli
jns
out
jne
pop
and
cwtl
aad
lea
lods
mulb
inc
and
xor
mov
inc
xchg
push
stos
or
test
add
sub
sbb
jae
jl
js
xor
int3
rcl
scas
outsb
pushf
mov
mov
mov
sbb
lods
mov
xchg
lcall
or
mov
sub
dec
mov
imul
xlat
add
fcoml
jno
add
out
stos
and
sbb
dec
push
xor
mov
jns
insb
xchg
and
push
add
fstpl
pop
test
xlat
xor
ret
sbb
rcl
in
gs
es
fcoms
xorb
cmp
xor
jb
mov
loope
add
add
lret
insl
leave
iret
stc
jge
fisubs
mov
pmulhw
out
jle
sbb
imull
mov
je
ljmp
xchg
mov
push
jmp
jp
imul
popf
movsl
bound
arpl
dec
outsl
insb
or
lcall
stc
jle
mov
fdivrl
rcll
cwtl
push
aaa
scas
pop
add
mov
stc
push
adc
iret
aaa
shlb
adc
sub
repz
daa
mov
xchg
sti
loope
aas
cmpsb
xor
das
icebp
imul
inc
mov
int3
cmp
push
mov
imul
fisubs
mov
mov
xchg
push
pop
mov
sahf
aas
ljmp
xor
mov
xor
sbb
mov
ss
and
mov
ficompl
pop
daa
or
out
scas
aad
mov
mov
insl
sub
shl
cmp
icebp
jmp
mov
negb
out
xchg
outsl
sub
mov
jp
lock
jmp
mov
xor
adc
add
fistps
notl
mov
scas
cltd
sbb
adc
repnz
in
fs
test
in
and
das
imull
out
pop
jbe
dec
or
data16
adc
xlat
imul
mov
xchg
mov
test
in
in
xchg
mov
push
icebp
cwtl
jecxz
es
dec
xchg
pop
mov
scas
repz
sahf
xchg
xor
outsl
jo
arpl
cmp
in
enter
cmp
in
cmp
rcll
adc
dec
jmp
es
and
cmc
mov
jmp
pusha
mov
stc
pop
mov
in
inc
inc
push
pop
xchg
jnp
xchg
stos
cmpsb
sub
inc
movsb
loop
addr16
pop
xchg
sub
lahf
repz
mov
insl
ret
lahf
ljmp
mov
scas
push
lret
or
les
xor
and
dec
jnp
rolb
fwait
mov
jae
fimuls
pop
test
jg
and
xor
xchg
push
xchg
leave
xchg
testl
sbb
xor
imul
sbb
jb
sub
adc
inc
or
fstl
divb
lahf
loop
movsb
jno
ret
mov
inc
call
mov
clc
test
faddp
sub
test
mov
out
add
mov
ja
xlat
gs
cmpl
adc
cwtl
jno
cs
or
xlat
data16
and
data16
in
mov
lods
call
sbb
icebp
scas
push
ds
and
pop
adc
and
nop
pop
jge
xor
rcrl
add
int3
aaa
in
pop
or
mov
outsb
and
iret
repz
fcmovu
fadd
dec
sti
fisubrs
cmp
mov
xchg
arpl
pop
cmp
mov
cmp
and
ja
into
sbbb
incl
test
imul
xor
das
inc
das
sub
cmp
and
jecxz
aas
aam
push
xorl
inc
out
ss
sub
out
inc
test
jmp
mov
test
out
repnz
adc
push
push
je
xor
cmp
sub
int3
push
lea
inc
ja
push
mov
mov
je
jno
and
inc
aaa
push
arpl
aas
push
push
cmp
scas
xchg
xchg
and
sbb
stos
mov
es
dec
ror
sub
orl
sub
inc
dec
xlat
jo
jb
or
in
inc
sahf
scas
cmpsb
btc
lret
iret
cli
movsb
lahf
lcall
lahf
loop
fisubrl
mov
cli
jo,pn
movsb
fisubs
sahf
mov
inc
cltd
push
scas
mov
data16
adc
push
or
sub
in
adc
inc
fists
adc
inc
pop
push
shr
push
add
xchg
dec
mov
fwait
pop
xchg
les
in
pop
pop
ss
push
push
std
mov
ljmp
movsl
dec
rclb
mov
mov
jb
test
cld
sahf
jmp
add
clc
pop
fsubrl
xor
cmp
cmp
jle
leave
call
icebp
dec
xchg
aas
std
in
add
mov
add
sbb
lods
cmp
add
xor
pop
push
cmp
ret
in
sbb
divl
mov
push
pop
in
cmpl
pop
nop
pop
rcr
shll
push
or
mov
movsb
push
mov
dec
add
inc
dec
mov
add
cmpsb
leave
xlat
ret
sub
add
sbb
icebp
push
cmp
out
push
jmp
inc
cmp
mov
dec
outsb
sub
inc
movsb
jecxz
sub
jg
daa
je
fwait
mov
mov
dec
cmpsb
lcall
rcrl
add
sub
call
and
call
adc
lret
stos
lcall
adcl
fcomps
stos
dec
pop
cmpsl
subb
lcall
je
js
adc
rolb
pop
xchg
aam
jmp
test
inc
dec
xlat
add
hlt
and
shl
pop
idivb
cmpb
push
bound
fistps
sbb
rcll
sub
inc
lds
xchg
inc
fmull
pop
sub
arpl
cmp
dec
sbbb
jno
xor
fwait
movsl
popa
mov
lods
in
or
xlat
incl
mov
test
pop
xor
push
push
sub
pop
es
out
xchg
adc
xchg
adc
daa
pop
add
in
sahf
stc
daa
rolb
cld
and
in
or
lock
pop
in
cld
dec
fcmovb
push
and
aad
rclb
mov
test
cmp
mov
loopne
popa
ljmp
lcall
cli
pushf
inc
lcall
rcl
sti
shll
mov
je
add
push
dec
mov
int
mov
add
dec
mulb
repz
push
add
sub
ljmp
jg
test
sbb
push
cmp
adc
pushf
cli
mov
in
test
or
mov
inc
fs
aaa
mov
push
jnp
lods
cmpsl
mov
ret
sub
repnz
mov
sti
xor
add
xchg
or
jg
nop
jne
jns
adc
and
shl
leave
add
and
mov
fisttpl
mov
xchg
jno
mov
jecxz
sbb
lods
aaa
mov
push
ret
stc
les
int
scas
adcl
arpl
les
test
inc
dec
adc
movsb
notl
lods
dec
popf
cs
mov
ja
mov
push
sbb
in
push
sub
sub
ds
mov
and
inc
jo
ret
pop
test
add
arpl
xlat
xlat
xchg
inc
lcall
and
sbb
push
mov
imul
mov
imul
and
inc
and
pop
fstps
jmp
push
push
ret
lret
adc
xchg
mov
xor
xor
add
push
movsl
int3
mov
mov
cwtl
mov
loope
bound
out
ret
jmp
or
fsubrs
push
dec
cwtl
out
pop
inc
pop
outsb
sub
push
enter
pop
mov
ss
imul
loope
in
jo
mov
lods
push
sti
dec
loopne
cmp
mov
adc
frndint
shll
lea
dec
test
lcall
add
pop
sub
sbb
in
das
sti
mov
add
adc
cmp
cmc
mov
dec
in
add
pop
outsl
push
sub
in
pop
adc
and
test
and
imul
hlt
stos
and
pusha
lret
inc
ret
mov
imul
cmpsb
lds
and
sub
and
xor
jle
sarl
nop
clc
scas
dec
inc
push
pop
js
aas
das
xchg
sahf
stos
cwtl
int3
outsb
xor
mov
sbbl
cmpsb
arpl
pushf
and
shll
jno
insl
adc
in
adc
int3
xor
mov
lret
cwtl
sarl
pop
cmpsl
je
mov
pop
mov
test
push
es
aam
movsl
addl
movsb
dec
loope
mov
or
mov
jp
mov
insb
pushw
xchg
leave
jmp
jno
push
sarl
xor
and
lods
lds
adcl
jno
or
mov
dec
pushf
stos
push
xor
ja
pop
push
lock
repnz
push
push
and
ret
shlb
mov
cmp
push
jg
xchg
rol
push
jg
jne
lods
nop
inc
aaa
mov
push
cltd
inc
rol
add
jecxz
in
push
or
mov
cmpsl
out
adc
mov
pop
rcl
cmp
mov
mov
out
sub
add
sahf
adc
lcall
hlt
das
push
cltd
jns
scas
mov
sub
dec
jle
mov
xchg
push
pop
pop
ret
dec
xchg
mov
inc
mov
std
cmp
sub
adc
adc
mov
std
std
push
xor
ret
repz
sub
movsb
shrl
pop
mov
psllw
popf
jmp
sub
bound
sbb
cld
out
xor
lret
and
lahf
les
dec
mov
inc
jg
insl
jno
scas
sub
lds
mov
cmc
arpl
aas
push
mov
mov
or
adc
pop
fnop
lcall
push
push
repz
aaa
add
lcall
fsub
adc
sub
sub
dec
pushf
aas
repz
pushf
test
shrl
fdiv
nop
or
pop
or
andb
mov
test
add
sbb
sahf
mov
hlt
add
cmp
xchg
bound
adc
add
popf
out
es
lahf
enter
mov
in
fdivl
movsl
mov
jge
popf
push
add
arpl
push
lds
icebp
iret
add
mov
push
mov
adc
arpl
into
jbe
cmc
fadds
ljmp
pop
sbb
pop
mov
sahf
sub
cmp
jne
and
shlb
dec
mov
mov
lahf
mov
lds
push
mov
push
aas
jns
sbb
inc
cmp
sahf
scas
fsubrl
jno
mov
lahf
add
or
cmp
push
dec
or
rolb
out
adc
or
push
sti
nop
xchg
adc
add
xorb
cld
test
dec
dec
test
mov
pop
mulb
mov
jmp
data16
jnp
aam
adc
xor
dec
add
dec
aad
call
or
adc
nopl
lods
xor
je
pop
add
cmp
stos
pop
sahf
mov
pop
cli
js
stos
out
mov
les
mov
xchg
xchg
cmpsb
pusha
aad
test
jnp
push
mov
test
loop
lods
bound
arpl
negb
ret
fidivl
or
mov
lret
aad
jb
mov
xchg
out
lahf
mov
mov
cmc
aad
pop
mov
adc
cmpsl
sub
pop
inc
mov
cmp
push
push
cmpsl
call
rcl
stc
mov
mov
aad
push
add
dec
insl
adc
negl
rcrl
sbb
jecxz
pop
daa
and
inc
mov
nop
push
iret
mov
sbb
dec
push
stos
in
mov
lods
inc
sub
addr16
sub
jnp
xchg
add
inc
jb
rorl
mov
repnz
das
or
add
lcall
out
icebp
lods
adc
dec
loopne
lret
jecxz
fistps
pop
jp
fidivl
arpl
xor
test
testl
stc
xchg
call
xchg
mov
je
lods
sbb
into
pop
jns
ror
xor
fldt
push
lods
in
and
sbb
adc
pushf
lods
out
int
inc
pop
inc
mov
sub
repnz
dec
pop
outsl
pop
sti
arpl
popf
lods
mov
push
fidivs
repz
add
mov
jl
mov
inc
jb
xor
xorb
mov
xchg
hlt
push
xlat
iret
push
pop
mov
cmpb
and
std
jg
xor
ljmp
ja
cli
dec
mov
pop
dec
or
frstor
or
ja
add
outsb
js
adc
xor
pop
pop
cmpsb
push
ss
rcrl
jge
inc
dec
mov
mov
xchg
pop
mov
out
xchg
movsl
fstpt
sub
dec
in
pop
xchg
mov
and
arpl
sub
push
lea
lret
and
repnz
xor
and
xlat
adc
lock
stc
inc
add
sbb
mov
fcoms
test
ds
mov
xchg
stos
jp
and
rorb
popa
push
addr16
andl
outsl
inc
inc
cmpsl
in
in
mov
mov
jo
jg
jne
sub
sbb
jo
mov
cs
jns
push
negb
je
push
or
test
xchg
jg
sbb
push
mov
loope
xchg
mov
mov
push
imul
push
cmp
inc
div
or
inc
push
imul
xchg
mov
sbb
mov
pop
lea
mov
ja,pt
add
fsubs
jmp
xchg
stos
add
repz
push
roll
mov
xlat
call
sbb
in
adc
jbe
sub
sar
out
pop
call
test
mov
gs
stos
ljmp
in
cs
xor
outsl
xchg
mov
fs
lock
dec
xchg
shl
xchg
test
lock
int3
das
ret
cltd
ds
movsb
dec
adcb
sahf
prefetcht1
sub
and
pushf
lcall
enter
adc
hlt
arpl
lds
inc
add
insl
sbb
cld
mov
sahf
mulb
rorb
cmp
scas
test
push
xchg
cmp
pop
cmp
adc
je
ret
pop
xchg
aas
mov
mov
and
sub
mov
sub
js
push
out
jge
lret
sub
xor
jne
stc
test
cwtl
std
pop
pop
dec
dec
fimull
pop
adc
rcrb
test
mov
pop
addr16
sub
pop
and
in
xchg
mov
inc
scas
cwtl
mov
dec
lock
js
bound
rcrb
cmpsl
mov
pop
into
ds
jbe
mov
sub
addr16
mov
pop
mov
or
loope
mov
xor
mov
mov
lds
add
nop
xchg
std
sub
icebp
mov
sub
in
iret
push
cwtl
mull
aad
repnz
lock
ljmp
sbb
cld
pop
mov
mov
add
lds
cmp
fs
dec
hlt
cmp
je
fbstp
cmp
mov
inc
and
pop
cld
bound
loop
jle
sbb
bound
mov
jg
scas
stos
hlt
adc
ret
inc
mov
aam
mov
sbb
cwtl
and
pusha
inc
shlb
popf
cmp
cmp
sbb
fldt
mov
sub
jg
push
push
xor
into
xor
sbb
pop
or
jo
adc
sub
out
imul
dec
outsl
jmp
and
xchg
and
scas
test
loopne
test
dec
mov
div
pop
inc
inc
nop
mov
pushf
int3
jbe
aaa
addr16
pushf
mov
xchg
test
lock
cmp
xor
fwait
rol
mov
jns
shr
jecxz
roll
gs
mov
sti
pop
faddl
mov
adc
es
jg
rcl
xchg
leave
dec
lock
es
mov
mov
aas
ret
jl
into
jnp
mov
pop
lods
jne
pop
dec
or
jne,pt
pop
jae
xor
jae
sub
repnz
jno
jp
cli
sbb
ret
jnp
add
mov
mov
mov
xchg
popa
pop
movsb
mov
sub
and
sbb
inc
mov
test
movsl
add
xor
pushf
cltd
mov
xor
push
rcll
aad
andl
inc
in
jno
dec
aam
insb
jmp
or
shlb
hlt
aad
in
jns
ds
cmp
movsl
call
sub
insb
out
dec
jmp
mov
mov
add
fisubl
sti
loop
inc
or
mov
cmp
push
lods
and
lret
jae
ret
xchg
call
daa
push
dec
cmp
movsb
sahf
insl
xor
and
in
arpl
aas
test
inc
out
shl
ljmp
mov
dec
sbb
and
mov
pop
ss
add
addr16
test
repz
pop
lret
cli
and
and
idivb
mov
cmp
sbb
mov
pop
dec
popa
movsb
sbb
subl
imul
xorb
jge
lds
lret
jmp
rcrl
sub
sbbb
mov
add
subb
movsb
lods
add
ds
sahf
hlt
jb
push
ds
cmp
and
push
push
ret
ja
nop
dec
aad
mov
out
mov
dec
sti
jecxz
sbb
negb
cltd
xchg
push
addb
dec
mov
cwtl
sbb
pop
xchg
into
mov
push
imul
iret
mov
mov
fdivr
and
or
and
out
arpl
xor
lret
test
pusha
sbb
add
add
inc
xchg
lret
lahf
jns
push
cmp
jmp
cmp
pop
adc
cmp
add
jnp
dec
hlt
xchg
inc
lcall
stos
imulb
pop
popa
push
das
push
cmpsl
bound
add
jl
cmp
mov
inc
std
out
adc
test
stc
scas
in
sbb
sbb
test
xchg
xor
psubq
cmp
in
mov
dec
push
mov
push
mov
cmp
lock
mov
lods
xchg
cmp
push
orl
push
lahf
pop
xor
leave
hlt
daa
pop
andb
arpl
lret
sbb
pop
and
cmc
dec
lret
mov
cli
xor
out
jle
fildll
daa
cmpsl
xchg
xor
inc
mov
insb
out
fmull
icebp
stos
jo
mov
ds
aas
mov
xchg
cs
push
test
shrl
or
or
dec
push
add
aas
scas
sbb
sub
push
jbe
pop
mov
cmpsl
test
jge
lret
add
lret
jp
jnp
or
jg
enter
insb
popa
repnz
dec
xlat
lcall
iret
mov
pop
xchg
adc
nop
and
mov
adc
fwait
push
push
or
ja
push
mov
out
pop
lods
int3
into
pop
outsb
xchg
add
lret
shl
xor
add
rcrl
push
inc
leave
notl
ja
call
xor
dec
mov
clc
xor
enter
and
cs
cltd
xchg
sbb
std
jb
sbb
loopne
fstpl
mov
jl
fcoml
lea
xor
gs
leave
bound
jp
ss
xor
aam
mov
cmc
xchg
mov
inc
push
sbb
loope
push
jnp
inc
push
jg
or
ret
sub
cmp
test
mov
sarl
adc
jg
sub
test
inc
mov
adc
movsl
sbb
mov
fsub
or
adc
shld
call
sub
pmullw
cwtl
or
mov
int3
or
data16
clc
in
mov
fldt
mov
fstpl
add
dec
sub
std
jbe
xchg
rorl
subl
jnp
shll
jne
mov
sub
orl
shll
enter
icebp
adc
mov
mov
mov
push
dec
repz
sarb
cwtl
loop
xchg
ret
add
cmp
cmpsb
es
outsl
test
sbb
cmpsl
or
inc
jmp
shll
xor
and
pushf
mov
mov
adc
add
cltd
scas
sub
dec
or
sub
rclb
add
adc
pushf
shrl
xchg
cwtl
xchg
jle
sbb
inc
shrl
outsb
and
inc
cmpsl
push
pop
add
pop
mov
cmp
call
push
xor
xor
mov
mov
test
scas
popa
incb
dec
push
mov
pop
fstpl
loopne
xchg
das
cmp
mov
daa
jae
sbb
rclb
dec
dec
inc
xor
test
inc
jno
push
aad
stos
je
cmpsb
stos
inc
lods
or
ficoml
cmp
aas
stos
or
fisttpll
adc
and
mov
inc
data16
jbe
sbbl
jae
xchg
inc
into
jmp
rcl
imull
sub
lds
sbb
outsl
test
and
mov
movsl
dec
lods
and
std
pop
leave
cltd
sub
adc
or
cmc
jns
in
sahf
push
or
sti
test
sbb
les
sub
sub
outsb
out
imul
cmp
jl
xchg
and
adc
xchg
dec
inc
out
xchg
out
fiaddl
loope
add
push
xor
pop
mov
sub
and
lcall
adc
dec
jae
pop
js
iret
pop
or
fucomp
cli
mov
stos
push
mov
ret
movsb
aam
jle
pushf
mov
inc
jmp
loopne
jmp
out
stos
divb
xchg
shlb
pop
mov
data16
jae
mull
int
push
cmp
sbb
loop
adc
inc
mov
cmp
ljmp
js
std
jno
mov
faddl
xor
movsb
ficompl
aad
push
and
test
ja
ja
pop
movl
mov
mov
sbb
push
fcoms
mov
into
cmc
out
insl
pusha
inc
lcall
xcrypt-cfb
cmpsl
mov
mov
nop
sbb
lods
mov
stc
fiaddl
jge,pt
aam
push
gs
jp
pushf
mov
inc
leave
jb
test
addl
movsl
fisubl
out
add
mov
repz
push
pop
mov
sub
xor
add
xor
shll
add
cmp
or
push
inc
mov
out
test
mov
shrb
inc
xchg
jns
insb
xchg
mov
mov
sbb
add
insb
jp
jnp
mov
hlt
hlt
lds
adc
aaa
in
and
sub
pop
fwait
mov
dec
pop
pop
jmp
adc
or
jae
and
and
jl
mov
loope
cs
shll
adc
pop
test
lds
jg
inc
roll
xor
mov
mov
xchg
push
dec
cmpsl
shlb
xchg
bound
push
lock
add
sahf
dec
xchg
shll
fwait
dec
imull
fsubrs
out
cmp
mov
call
lret
xchg
dec
sahf
cs
mov
xchg
mov
push
gs
ficomps
push
in
jnp
popf
int
shlb
jmp
push
add
or
mov
mov
test
sbb
push
stos
cmpsb
rorl
sub
mov
pop
sbb
test
mov
xchg
cwtl
pop
fildll
xor
sbb
cmp
pop
aam
dec
mov
aad
cmp
xor
sbb
bnd
cmp
pop
fsts
push
inc
jp
loope
outsb
in
cli
por
fs
orb
xor
frstor
mov
mov
js
sar
in
pop
pusha
push
push
das
cli
mov
arpl
std
push
adc
sbb
push
das
cmpsl
inc
mov
or
pop
fidivrs
in
pop
mov
lret
push
sbb
xchg
icebp
jae
pop
jp
popf
ret
push
stos
mov
xorl
adc
iret
jmp
ret
scas
sbb
fucomi
icebp
cli
in
jns
dec
sti
jno
test
xchg
xchg
push
and
arpl
jbe
pushf
sbbb
pop
mov
es
cmpsb
cltd
push
es
or
or
aad
sbb
inc
pop
je
mov
jno
xchg
cmpsb
jns
gs
mov
adc
in
push
addb
xchg
idivl
push
ret
cmpsb
pop
faddl
xchg
pop
cmp
mov
pop
adc
and
add
dec
adc
fs
sbb
lret
push
mov
repz
or
sbb
shl
shll
jg
fldcw
int
test
xchg
test
and
fistpll
sub
mov
mov
cmc
push
xor
data16
pop
and
cli
arpl
test
loopne
xlat
push
pop
push
add
fidivs
jbe
xchg
js
add
in
push
dec
aaa
cmp
jnp
xlat
jae
movsl
or
arpl
sbb
or
sub
xchg
sbb
ja
pushf
mov
push
pop
lahf
cmpb
jle
aas
pop
lods
mov
xchg
push
push
sub
ret
push
shlb
jmp
push
js
xchg
pop
inc
stc
mov
jbe
out
out
out
fwait
mov
or
fistpl
mov
adc
andb
cmp
mov
out
cmpsb
lahf
dec
or
sub
fs
ret
or
shll
dec
xor
mov
and
roll
ja
popf
sti
scas
push
popl
inc
mov
in
stos
pop
notl
in
xchg
or
les
xor
mov
inc
shll
pop
test
push
push
mov
rcr
faddp
cmp
mov
xor
ret
ja
aas
and
xchg
hlt
aam
int
addr16
inc
pop
dec
into
cltd
outsl
ret
sbb
pop
add
cli
inc
add
or
test
and
cmp
xchg
dec
pusha
push
in
es
and
divl
or
add
pushf
mov
lea
sub
push
cs
movsb
mov
add
inc
arpl
icebp
inc
pop
mov
stos
sbb
shl
push
pop
mov
pushf
testb
jg
mov
outsl
jb
add
out
mov
cmpsb
pushf
add
dec
dec
stc
mov
cmpsb
dec
fnstsw
rorl
mov
sbb
std
mull
dec
aaa
icebp
rol
pop
dec
mov
sbb
jecxz
xor
push
inc
iret
loopne
or
mov
test
cs
lods
inc
ds
daa
stc
jecxz
mov
inc
xchg
sti
cmp
xchg
cmove
push
xlat
xchg
inc
mov
adc
sbb
test
nop
das
ljmp
fst
es
dec
dec
pop
cmp
inc
jnp
cmp
loop
push
repnz
and
and
add
adc
xchg
movsb
ret
popf
lahf
mov
xchg
leave
lock
xor
jg
xchg
xor
sub
sbb
dec
pop
mov
mov
aam
repnz
mov
jg
pop
aaa
fsubs
icebp
arpl
iret
scas
mov
cmp
sti
loope
stos
jo
mov
repz
mov
stos
pop
and
repz
adc
cmp
pusha
or
les
mov
test
mov
lds
mov
xchg
xchg
adc
popf
imul
cltd
pop
pop
xchg
sti
sbb
push
inc
add
lods
mov
mov
add
inc
loopne
aam
jo
push
add
or
enter
jmp
fisubrs
xorl
popa
sub
dec
sbb
mov
mov
sbbl
pop
jle
gs
mov
loope
cmc
push
inc
dec
movl
clc
pop
and
stos
iret
mov
pop
subb
xor
pusha
jl
jecxz
mov
or
je
push
cmc
inc
test
mov
push
xor
pop
fsts
arpl
sbb
mov
movsb
jns
icebp
rorb
clc
and
notb
fistpl
sbb
xlat
xchg
and
mov
test
sub
pop
stc
fbstp
mov
jg
push
inc
or
cs
adc
add
negb
xlat
in
jne
aad
push
sub
push
mov
pop
scas
test
and
jmp
jns
ret
xor
mov
or
je
xor
in
ret
xor
in
clc
add
out
or
js
pushl
int
xchg
fisttps
adc
and
les
push
xor
adcl
dec
cmpb
mov
pop
cwtl
rcrl
das
popl
xor
and
out
cltd
mov
imul
mov
lahf
aas
or
arpl
inc
in
aad
ds
inc
insb
cmp
enter
in
mov
inc
push
adc
push
repnz
cmp
or
shrl
push
les
pop
aaa
insb
mov
xchg
mov
adc
add
and
sub
sbb
clc
mov
sub
dec
movsl
pop
xor
pop
out
dec
cmp
int3
leave
js
push
push
cmpl
xlat
inc
pop
shl
sub
mov
stos
dec
stc
dec
push
lock
mov
or
sarb
fiaddl
jle,pt
xor
push
xor
adc
psubd
sub
frstor
repz
mov
jecxz
mov
mov
inc
add
fidivrs
shrl
push
lcall
sub
gs
add
mov
push
adc
test
hlt
ljmp
ljmp
mov
add
mov
pop
scas
push
dec
lahf
sbb
jae
mov
xor
out
lods
xlat
out
enter
mov
cmpb
xchg
sahf
adc
add
les
icebp
shrl
sbb
cs
and
mov
sub
push
rcr
xor
lcall
inc
sub
push
and
cltd
push
inc
xor
int3
lock
pop
push
loopne
and
addb
mov
dec
gs
pavgw
insl
repnz
movsb
push
push
es
mov
jmp
or
mov
test
aas
rolb
fbstp
mov
adc
push
enter
inc
sbb
inc
push
leave
push
fisubl
xchg
mov
push
inc
test
adc
mov
and
fisubl
xor
pop
cmp
add
test
ja
push
xchg
pop
fwait
jp
call
inc
mov
lods
jo
xor
cmp
outsb
ja
lcall
or
pop
push
fcomp
lret
sahf
aam
fwait
xor
inc
or
xchg
cmp
aad
pushf
lds
dec
popa
test
adc
xchg
outsb
lds
and
inc
pop
mov
repnz
xchg
mov
jle
test
pop
mov
rorl
cmp
inc
jno
in
push
jns
idivb
fldl
iret
inc
mov
dec
add
mov
push
jb
sub
cmp
push
xchg
repz
outsb
cwtl
dec
test
inc
push
push
stos
sbb
or
and
rorl
sbb
scas
pop
and
dec
xchg
mov
stos
push
mov
lret
fdivrs
mov
cmp
mov
dec
out
xorl
or
sub
cmpsl
cld
pop
shrb
dec
push
fwait
das
jle
mov
test
cmp
icebp
xchg
icebp
xor
fbstp
xchg
popa
mov
hlt
mov
mov
mov
cmpl
movsl
cld
ja
inc
mov
cmp
into
ret
cmp
jb
enter
lret
js
std
pop
into
loop
push
pusha
dec
mov
add
mov
mov
popa
sbb
fsubs
sub
push
and
mov
les
dec
gs
leave
mov
les
mov
stos
mov
in
jle
ja
sbb
movsl
jg
mov
fimull
push
test
lcall
xor
mov
or
scas
mov
dec
mov
add
mov
push
nop
jecxz
xlat
add
push
xor
roll
inc
es
in
shll
push
dec
fists
pop
pop
mov
arpl
iret
aam
sarl
jge
cwtl
mov
sbb
fdivl
xchg
test
in
jae
sbb
and
andl
sub
xor
sub
jo
cmp
mov
pop
dec
fisttpl
jmp
mov
scas
stos
mov
pop
add
inc
dec
pop
test
aad
mov
jnp
subb
lods
mov
mov
lock
mov
push
sub
lret
adcb
mov
nop
adc
add
ja
sbb
pop
xchg
repz
pop
stos
sbb
je
nop
sbb
outsb
mov
je
cwtl
xor
outsl
mov
bound
pop
cmp
cmp
pop
adc
xchg
or
out
imul
xor
aam
scas
imul
lret
jo
add
mov
or
out
push
dec
int3
cmp
rclb
lods
daa
xor
inc
aas
mov
sbb
and
mov
mov
push
push
sub
sbb
fstps
xor
in
dec
pop
aas
movsb
int
adc
push
xor
sbb
addb
cmp
cmpsl
das
xor
cmpsl
push
mov
cwtl
repz
loopne
lods
push
sbb
cmp
adc
shlb
cltd
inc
push
mov
in
lret
sbb
mov
int
dec
out
and
rclb
xchg
add
aam
lahf
imulb
xchg
mov
call
cmpsb
push
rol
and
jecxz
adc
mov
popa
adc
lods
shlb
insb
xchg
out
inc
dec
xchg
repnz
jmp
lahf
imul
decl
in
pop
popa
xchg
test
sahf
sub
or
mov
or
movsb
xchg
sahf
cltd
dec
jl
fwait
pop
into
in
push
cmc
jnp
xchg
dec
das
mov
mov
icebp
xchg
or
and
jb
clc
xchg
jl
rcl
scas
push
lock
in
sbb
sbb
or
or
mov
and
les
cmpb
pop
mov
cmp
cmc
add
push
pop
mov
pop
pop
or
imul
push
jo
fbld
add
or
into
push
sub
pop
lds
adc
or
mov
test
inc
cmp
test
es
and
outsb
into
sub
mov
sti
push
pushf
xorl
repz
push
ret
les
jp
aad
ret
jne
sub
fildll
adc
adc
and
daa
jecxz
sub
inc
xor
and
shl
mov
das
aad
ret
scas
sub
and
insl
xor
lds
push
xchg
mov
mov
mov
pop
inc
inc
cld
sbb
mov
xchg
pop
addr16
cmc
lahf
sarl
sub
stos
sti
mov
test
fwait
xchg
out
sahf
xorb
cmp
lret
fnstenv
lods
push
dec
xchg
lahf
pushf
xor
cmp
dec
sub
xorl
imul
mov
in
ljmp
ja
fs
pop
mov
ja
or
shlb
cmp
hlt
push
lret
outsb
jp
aas
mov
in
add
inc
push
call
js
or
dec
adc
ss
cs
stos
inc
clc
es
nop
fimull
and
fwait
inc
mul
imul
test
jecxz
into
xchg
add
test
jb
out
mov
insb
add
add
jbe
mov
push
out
mov
cmp
cmp
ss
imul
xor
inc
ja
iret
rorl
and
push
mov
or
jl
push
cwtl
xchg
scas
jl
sub
sub
or
sub
xchg
adc
sub
movsl
xlat
scas
mov
idiv
jnp
jge
or
in
aas
fwait
icebp
lret
push
sub
mov
sahf
decl
dec
xor
jne
mov
out
adc
testl
xchg
movsl
xchg
xchg
lcall
negb
movsb
xchg
dec
xor
test
ret
shrb
sub
shrl
xor
inc
cmp
mov
inc
in
pop
cmpsl
xor
fcompl
xchg
cmp
mov
mov
mov
sbb
stos
jp
inc
inc
repz
cmp
jge
outsl
es
pop
inc
jp
jecxz
xchg
lahf
mov
pusha
lock
popa
sti
out
adc
inc
lods
dec
push
push
cmpsl
ljmp
pop
sbb
insl
sbb
pushf
enter
pusha
adc
pop
test
push
gs
mov
mov
ds
and
mov
test
and
adc
sti
je
lret
in
addb
in
pop
loope
fidivs
sub
ss
xor
xchg
sbb
jecxz
jg
shll
adc
neg
push
sbb
push
movsl
jecxz
mov
cmp
push
dec
leave
ds
out
pop
inc
mov
scas
roll
cwtl
cmp
push
xchg
std
push
and
out
lcall
mov
cltd
add
xchg
xlat
enter
bound
jns
in
fs
outsl
fstp
icebp
sbb
sahf
movsb
pop
aaa
inc
xlat
xchg
test
imul
jmp
jb
ret
int3
je
imull
jle
cmp
loopne
fisubs
ret
sub
and
pop
dec
pop
inc
lcall
test
mov
mov
dec
push
test
sbbl
jnp
dec
notl
movsl
add
cmp
adc
jge
ljmp
lea
lea
xor
xor
repz
das
int3
jnp
test
jp
adc
cli
add
mov
pop
iret
pop
inc
sub
fsubs
and
incl
or
test
mov
outsb
xor
test
testb
icebp
out
dec
imul
mov
int3
stc
mov
iret
push
outsb
cmp
out
lret
rcl
dec
adc
fldl
rorb
loopne
lods
add
in
or
loope
xlat
adc
jmp
pusha
lods
out
push
add
xchg
adc
mov
mov
fsubrl
cmp
adc
and
inc
jg
mov
and
mov
test
adc
dec
xchg
sub
fstpt
sbb
jmp
fistps
add
outsb
jecxz
into
clc
mov
fdivl
inc
fwait
adc
hlt
pushf
in
or
mov
nop
rcl
mov
pop
push
jge
rorb
mov
mov
enter
inc
test
jnp
mov
xlat
out
sbb
sti
jl
adc
mov
dec
mov
jbe
mov
mov
xor
mov
out
fidivl
mov
test
scas
mov
push
jno
pop
add
sub
sbb
lods
mov
ljmp
adc
mov
inc
mov
adc
vpsrld
xchg
sub
cli
call
cmc
sti
push
je
mov
mov
sbb
mov
add
dec
mov
adc
xchg
stos
repz
aam
pop
fistpl
in
frstor
addl
roll
outsl
jge
stc
jmp
shlb
jo
dec
mov
rcrl
lods
int
jae
sahf
lods
add
ficoml
xchg
insl
pop
test
in
div
cld
in
cmc
push
xchg
cld
mov
ret
std
rcr
scas
xchg
push
or
ds
mov
int3
mov
mov
jae
or
push
cmc
fs
pop
push
jo
push
pop
aaa
popa
mov
fst
gs
stos
cmc
aad
test
cmp
or
sbb
loop
xor
sub
mov
dec
sub
es
lahf
pop
mov
mov
paddd
jns
rolb
xor
mov
inc
mov
inc
pop
and
aas
test
fwait
cs
in
sub
out
jno
dec
mov
movsl
dec
ds
dec
pop
pop
lds
lods
or
int
mov
push
jb
cltd
dec
mov
ss
insl
inc
sub
mov
pushf
lcall
inc
and
push
or
jo
ret
ja
ds
mov
pop
sub
int
lret
popf
sub
jmp
add
adc
sti
inc
lock
xchg
cli
or
dec
xchg
cmc
sub
xchg
aas
movsl
outsl
push
aam
pop
mov
int3
and
fcomps
adc
inc
pop
xchg
fnstcw
mov
test
aad
popa
nop
adc
rorb
test
mov
in
jle
jecxz
mov
mov
pop
xchg
sub
int
push
ret
dec
in
mov
and
lahf
rclb
push
fcoms
sub
shlb
xchg
mov
loop
or
adcw
xchg
cmc
lahf
idivl
adc
stos
pop
not
shrl
stos
cli
cltd
les
cmp
test
rol
insb
shll
pop
rolb
push
jnp
sbb
dec
inc
lds
and
pop
dec
outsl
jl
popa
fidivrs
or
adc
mov
cs
into
jne
pop
mov
icebp
mov
jb
mov
lds
xlat
adc
ret
mov
and
mov
or
xorb
cmp
stos
clc
movsl
out
mov
test
test
xchg
ret
or
arpl
inc
pop
popa
or
lahf
push
shrb
orb
lahf
call
mov
hlt
push
in
gs
sub
repnz
pop
out
xor
xchg
inc
lcall
dec
xchg
push
mov
ffree
mov
jae
jae
mov
fistps
sub
cmp
leave
push
inc
jmp
ret
subb
popa
clc
pop
mov
shll
jnp
in
sarb
cmpsb
dec
sub
sbb
gs
and
in
aas
lods
and
int3
fs
mov
xchg
outsb
jbe
add
add
lret
push
xor
push
popf
jge
xor
filds
dec
pop
cmpsl
outsl
jbe
lock
sub
ss
xchg
pop
sarb
inc
mov
push
cmc
dec
dec
movsl
xchg
xlat
inc
push
ss
xchg
add
mov
testl
lods
jbe
sti
xchg
pop
mov
test
data16
into
jne
rcr
les
xchg
add
sub
adc
popa
ficoms
ret
bound
fsub
and
mov
add
ret
shll
fwait
loopne
mov
jo
push
les
inc
sbb
xchg
and
roll
adc
mov
adc
arpl
cmp
push
inc
fdivrl
mull
out
push
pop
loopne
dec
dec
out
pop
inc
inc
imulb
xchg
push
cltd
inc
xchg
inc
xor
push
push
movsb
cwtl
pop
or
mov
movsl
sbb
or
pop
outsb
xor
pop
aaa
imul
adc
jle
jge
cli
jns
fnstcw
fs
aas
add
cwtl
sub
cmp
mov
out
outsb
insb
adc
jge
add
rorl
andl
xchg
js
xor
sbb
pop
inc
mov
ret
out
cltd
or
xchg
addr16
pop
sub
mov
leave
js
xor
inc
inc
ja
insb
popf
and
mov
adc
jns
jbe
jle
mov
cmpsb
mov
cmc
mov
and
jb
pop
out
loope
cmp
popa
fldt
mov
xor
mov
or
xchg
aad
sbb
push
mov
jmp
sar
sarl
pop
out
jecxz
sbb
test
jle
mov
cmp
lock
test
add
adc
call
pop
xchg
sub
xor
push
pop
call
push
pminsw
adc
addb
stos
cmc
lods
pop
comiss
rcr
add
paddq
dec
xor
das
or
bound
bound
sbb
popa
jg
sbb
loope
cmp
xchg
dec
mov
inc
addr16
enter
cmp
lds
adc
jae
sub
scas
ss
repnz
scas
fiadds
mov
shlb
insb
mov
or
mov
iret
jo
cmpsb
xchg
in
dec
aad
cmpsb
jb
mov
mov
cmp
xor
clc
imul
dec
js
cmp
push
add
adc
aaa
and
stos
jno
subb
jno
dec
inc
dec
rolb
movsl
stos
push
sub
fxch
and
loopne
int
and
sub
fidivrs
jmp
je
sub
decl
frstpm(287
and
mov
jns
inc
sarl
and
push
stc
push
fiadds
fucomp
pushw
idivl
push
pop
aaa
mov
fisubl
into
cmp
test
pusha
test
xchg
leave
add
jecxz
fadd
es
bound
mov
jo
mov
pushf
jnp
jns
pop
scas
arpl
fdivs
push
incl
jge
ljmp
and
mov
mov
fnstcw
xchg
insl
add
xlat
fisttps
push
pop
sub
mov
inc
jle
pop
fiaddl
add
lds
scas
jg
sahf
lret
sub
lea
xchg
clc
sbb
cmp
add
and
sti
push
outsl
roll
test
cmpsb
das
inc
lods
cmp
iret
add
les
ror
scas
inc
mov
addr16
pushf
les
js
xor
inc
lods
dec
cmc
dec
push
push
push
jns
xchg
mov
cmp
pusha
ret
sti
pop
ss
pop
inc
xorl
movsb
in
sub
divb
jmp
mov
mov
sub
cli
fcoml
push
test
iret
and
enter
sbb
push
data16
pop
ret
mov
hlt
in
stos
and
cld
sub
and
cmpsb
dec
cmp
xor
xorl
dec
ficoms
out
imul
push
std
shr
cwtl
sub
movsb
rcll
push
in
push
fs
mov
mov
or
add
dec
mov
lret
mov
dec
stos
or
loope
xor
aam
imul
outsl
das
int3
loopne
in
arpl
sbb
push
ss
and
and
fwait
in
mov
fwait
aaa
aad
jb
ret
adc
add
les
out
roll
arpl
sbb
cmpsb
xchg
leave
and
cmp
cli
lods
lret
movsl
and
into
adc
mulb
leave
pop
and
daa
popa
or
push
data16
subl
stos
das
repnz
outsb
adc
in
pop
dec
mov
mov
rcr
ljmp
iret
popa
mov
mov
iret
push
push
iret
adc
sbb
fldl2t
push
loop
dec
fistpll
loopne
xchg
xchg
xchg
pop
mov
fildl
addr16
or
jg
mov
mov
rcrl
arpl
inc
xchg
lods
int3
push
cmp
jb
xor
adc
push
aad
lret
push
push
xor
lds
loop
je
push
lea
cmp
sbb
xor
inc
xchg
cmp
cmpsb
fisttps
fcmovbe
jb
dec
mov
mov
stc
cmpsb
incl
rcr
pop
and
add
jg
fisubl
in
jno
add
dec
mov
incb
daa
imul
push
mov
into
in
dec
or
inc
cwtl
cld
fcmovnu
aaa
lds
lods
into
cmp
imull
repz
xchg
rcll
cmpsb
jb
insb
xor
sub
push
mov
jecxz
push
aaa
leave
or
mov
cmc
js
xor
lcall
dec
cmc
icebp
ja
mov
movsl
pop
imul
popa
movsb
fxch
je
xchg
jno
popf
aaa
popa
pop
xchg
xchg
cmp
fsub
fmul
mov
add
mov
jo
lea
cmp
sbb
inc
mov
pop
fldenv
rolb
popa
div
dec
in
out
notb
stc
ja
out
test
adc
pop
xor
out
ja
repz
jno
push
adc
lock
adc
or
push
cmp
insb
sub
add
cli
inc
jae
je
lock
sbb
icebp
xor
jmp
daa
xor
push
mov
jg
stos
hlt
push
push
dec
ss
pop
xchg
lods
pop
sub
cltd
add
mov
sub
pop
cmp
pop
fisttps
mov
imul
pop
inc
xor
lahf
dec
popf
adc
pop
dec
xor
fwait
mov
popf
test
mov
loope
jns
xchg
mov
sbb
add
mov
or
ret
mov
xor
xchg
jb
stos
cmp
pop
fisubrl
in
mov
das
rolb
ret
sub
lods
pop
xlat
mov
add
sub
add
sub
repnz
mov
push
xchg
mov
add
dec
add
mov
fwait
cs
push
test
insl
int3
mov
hlt
xor
mov
out
push
dec
les
fcomi
outsl
adc
add
dec
inc
and
lahf
sbb
outsl
pop
sub
stos
cmp
push
fwait
jns
push
addr16
xor
icebp
sbb
iret
in
pushf
xchg
jle
sub
leave
in
mov
push
push
fbstp
sbb
fs
inc
mov
dec
lahf
add
jmp
mov
bnd
movsl
daa
sbb
jg
adc
adc
in
push
lds
and
loop
xor
shll
addr16
cmp
cmp
push
jae
dec
int3
inc
xlat
xor
push
fists
jae
arpl
out
aaa
jno
stos
jnp
mov
pop
xchg
mov
push
jo
pop
add
movsb
xchg
test
cmp
icebp
scas
push
inc
das
dec
fisubs
lret
or
or
xchg
adc
jecxz
xor
shrb
sbb
insb
push
xchg
cmp
shrl
lret
ds
cmpsb
stos
mov
insb
lret
inc
scas
movl
xlat
repz
add
in
or
hlt
int
xchg
xor
xchg
pop
in
sub
aaa
xchg
sbb
mov
shrl
pop
sbb
dec
mov
jl
mov
pop
pop
push
lods
adc
adc
or
lods
sahf
push
lret
roll
cld
fldenv
pop
xchg
mov
notb
call
push
flds
pusha
idivl
dec
mov
push
or
dec
adc
rclb
pop
data16
mov
out
mov
sbb
xor
push
inc
dec
mov
aad
xor
cmp
scas
jecxz
outsb
popf
or
push
cmp
fdivp
inc
mov
test
sbb
mov
leave
or
push
sub
shl
movsb
push
test
rcr
fldt
popf
js
jp
or
sahf
fisttps
mov
lock
aaa
pop
clc
cmp
xor
cld
sub
cmp
cmp
es
mov
ljmp
imul
mov
mov
fs
push
test
int
int
jae
xorb
mov
push
sarl
loope
pushl
dec
push
inc
lcall
jg
fimuls
ds
jle
push
stos
mov
dec
rcr
repnz
in
pop
cli
push
cmp
sub
dec
push
sbb
loop
push
dec
loope
xchg
pop
xor
xchg
adc
ss
inc
fs
jge
test
sti
pop
adc
push
adc
dec
add
jmp
inc
sub
or
inc
xchg
jmp
repnz
or
pop
cmp
jae
xchg
lret
fs
ljmp
adc
or
adc
shll
into
loope
shlb
ss
in
fwait
xor
lods
movsb
xor
cltd
adc
icebp
cs
pop
pop
out
ljmp
orl
or
sbb
mov
pop
es
mov
dec
sbb
fistpl
add
sbb
test
js
xchg
jp
lret
in
cmc
xchg
scas
pop
xchg
sbb
int
inc
test
or
cmp
and
adc
out
push
pop
lcall
mov
cmp
xor
pop
ljmp
adc
popf
loope
ss
mov
or
imul
sub
cmp
lds
mov
pop
cmp
sbb
std
imul
shlb
dec
xchg
mov
and
inc
rcrb
enter
cmpsl
push
mov
xchg
popf
xchg
fldz
inc
and
cmovge
pop
inc
insb
cwtl
test
pop
scas
mov
out
mov
jl
add
sub
icebp
movsl
faddl
sbb
js
push
lret
push
push
push
loopne
repnz
std
jo
out
scas
mov
ljmp
es
ja
xor
inc
sarb
movsb
adc
sbb
adc
aas
sub
mov
jnp
xchg
fiaddl
ror
and
leave
jg
repz
mov
lcall
dec
push
pusha
sub
jnp
les
sbb
jg
mov
lret
pop
cmp
inc
pop
jb
je
cmp
fidivrl
decl
andb
xor
xchg
mov
mov
push
or
fildl
xchg
sbb
mov
jg
aaa
push
cmp
xchg
or
dec
test
ja
jnp
popf
arpl
jnp
sbb
mov
pop
ret
jmp
int
gs
ljmp
mov
stc
xor
dec
clc
stos
lahf
out
cmp
orb
cmp
fldz
mov
mov
bound
xor
inc
clc
or
jmp
lds
movl
outsb
xchg
jp
mov
cmp
adc
shl
sbb
addl
jo
push
flds
call
add
imul
aad
lock
aam
push
sbb
fwait
xor
arpl
and
cmpsl
inc
dec
hlt
repnz
lock
in
aas
in
sub
popw
or
or
xchg
in
jno
sub
into
pop
sbb
mov
icebp
push
or
pop
inc
aam
enter
and
insb
sarb
inc
jge
jecxz
push
xchg
xchg
cs
jecxz
fistl
xchg
pop
sub
jg
push
cli
inc
cli
mov
outsl
jb
popa
cmp
sbb
addb
cli
cmpsl
icebp
and
push
add
movb
inc
push
test
movb
sub
fistl
cmc
fiaddl
sub
das
nop
outsb
iret
in
xchg
inc
aaa
mov
outsl
or
std
xchg
ret
sbb
data16
subb
daa
loop
jmp
fistps
pop
sarb
addl
je
jnp
push
cmpsl
insl
stos
stos
lahf
jg
lds
or
notb
mov
xchg
sub
push
pop
jp
in
lret
icebp
mov
icebp
into
sbb
fmull
jle
pushf
repz
repnz
movb
lods
jg
dec
and
lret
xchg
movsb
int
cltd
cmp
in
lret
inc
inc
imul
push
add
adcb
popa
or
mov
mov
je
xor
xlat
xchg
je
push
dec
add
cmp
pop
cld
xor
push
cmpsb
jno
pop
das
mov
add
test
cwtl
dec
loopne
out
pushf
push
add
and
add
fisubrl
jl
push
enter
stos
cmpsl
imul
sub
lock
mov
mov
pop
arpl
inc
aas
dec
nop
popf
sub
ja
mov
stos
mov
lock
out
call
cltd
gs
rcrb
aas
mov
cmp
dec
aaa
mov
mov
mov
loop
lea
hlt
pop
cmpsb
frstor
inc
xchg
xchg
add
scas
adc
movsb
pusha
in
pop
ds
aaa
ja
push
xlat
movsl
in
pusha
inc
xorl
xor
mov
push
mov
lret
push
sub
insl
pop
fsubs
stos
push
mov
inc
inc
mov
gs
shll
jo
sbb
or
adc
cmp
mov
aas
jbe
incb
int3
adc
mov
ljmp
xchg
adc
clc
fists
fistl
push
aad
pand
bound
cmp
ss
insl
xchg
das
js
or
jne
fsts
pop
lret
lock
daa
ja
jecxz
dec
dec
sub
inc
cmp
mov
sub
xchg
outsl
jae
adc
xchg
pop
mov
xchg
add
in
jge
xchg
addr16
fwait
adc
lock
mov
xchg
fisttpl
ret
divb
pop
out
mov
mov
jl
mov
inc
loopne
sarl
dec
push
adcb
out
in
dec
rorl
std
cmp
fwait
dec
jp
inc
bound
stos
shl
dec
mov
in
sbb
mov
fildll
xchg
fwait
or
fsubrl
mov
ds
jbe
push
inc
push
dec
mov
jo
icebp
out
xor
sub
int
cmpsl
pop
notb
mov
inc
push
fmul
cmp
xchg
add
xchg
jge
push
lock
push
sub
loopne
dec
jns
stos
push
loop
mov
fbstp
bound
mov
mov
test
dec
ret
cs
std
aad
push
ja
pop
js
xchg
pop
mov
fisubl
add
jno
adc
pushf
dec
pop
repz
mov
test
pop
xor
lret
je
push
sub
notl
jl
or
inc
data16
inc
mov
xchg
cli
dec
and
xchg
stos
jmp
call
arpl
sbb
test
notb
pop
mov
inc
jae
cmp
mov
pop
hlt
fxch
jne
jno
dec
mov
addr16
and
and
data16
stc
test
push
xor
inc
dec
test
fs
sbb
sub
fsubrl
ljmp
and
call
mov
insl
push
sbb
adc
push
sbb
lock
lods
cmp
mov
lret
dec
dec
adc
pop
jo
mov
clc
imul
push
rorb
xor
stos
cwtl
pop
mov
mov
and
les
ret
dec
lcall
popf
sub
sbb
loope
mov
jge
nop
nop
pop
mov
pop
bound
decb
cmp
cmp
dec
adc
xor
push
push
stos
mov
xor
scas
aad
lods
dec
insb
sti
negl
cmpsl
xchg
inc
inc
add
loopne
inc
mov
mov
pop
dec
push
orl
pop
xchg
andl
cmp
mov
call
cmpsl
cmp
inc
aas
sub
sahf
mov
js
sub
aas
sub
adc
xchg
xchg
mov
jb
push
movsb
lea
adc
mov
fadds
out
jne
daa
sbb
cmovns
adc
outsl
cmpb
nop
or
js
pop
push
jnp
imul
fisttpl
mov
inc
mov
les
mov
adc
daa
mov
insl
sub
cmpsl
mov
negl
dec
stos
jns
jno
mov
mov
ficoml
enter
xchg
sbb
add
das
fistpl
sbb
sbb
mov
pushf
nop
lret
in
adc
push
or
in
jecxz
out
jae
sbb
js
repz
and
popf
xchg
inc
pop
pop
pop
sbb
inc
and
mov
ss
dec
movsb
dec
iret
test
ret
ret
pop
jae
mov
adc
loope
lea
sbb
xor
and
adc
push
pop
mov
test
jge
fs
into
jge
jp
sbb
push
in
pop
xor
cmp
and
ret
imul
adc
std
jmp
add
cmp
sub
outsl
fwait
lods
into
out
and
push
stc
sbb
jae
sub
nop
lret
inc
cmp
dec
inc
sub
mov
es
stos
in
jne
or
cld
leavew
inc
or
sub
scas
aaa
or
ljmp
xlat
lahf
xchg
mov
bound
dec
je
test
jne,pn
rclb
popa
mov
rcrb
sub
out
mov
sti
and
fwait
xchg
inc
aas
jb
pusha
lret
sub
mov
push
adc
pusha
sub
fnstcw
adc
test
idiv
push
outsb
xor
mov
insb
mov
mov
repz
mov
mov
mov
sub
pop
sahf
push
iret
arpl
dec
jle
mov
rcr
test
dec
fbstp
inc
outsl
and
ret
mov
pop
xorl
arpl
in
push
cmp
cmc
loope
cmp
repz
aam
movsb
pop
inc
dec
dec
jle
cmp
sub
insl
xor
mov
jle
jp
xor
sub
cmpsl
xor
and
call
push
stos
into
bound
inc
imul
dec
jb
in
scas
and
cmpsb
ret
push
pop
push
ds
test
push
xchg
push
je
xchg
in
sarl
mov
mov
cltd
jle
loope
and
and
fwait
mov
orl
ja
es
xor
mov
cltd
pop
and
nop
push
stc
into
sub
dec
out
or
fldl2t
inc
imul
ljmp
das
and
ss
xor
cmpsb
xor
add
in
sub
xlat
or
mov
outsb
mov
test
loop
ficomps
lds
sahf
ret
ljmp
mov
test
lret
aaa
or
dec
insl
adc
pushf
cld
imul
popa
adc
out
sbb
sub
jge
pop
mov
outsb
cmp
das
repz
pop
xor
sub
loope
or
imul
ffreep
cltd
cmp
or
sti
insb
gs
pushf
cld
lret
bnd
inc
repz
adc
dec
fs
in
push
shl
dec
add
or
xor
loope
shll
dec
fadd
mov
popa
jns
mov
push
nop
gs
cmp
push
xor
xlat
jbe
cs
ds
bound
ds
xchg
dec
mov
idiv
in
or
mov
xchg
mov
in
mov
pop
adc
xchg
in
imul
in
pop
fs
xor
dec
imul
push
mov
push
dec
sbb
jg
cs
stos
ds
adc
js
idiv
jne
inc
pusha
jle
jno
push
cmp
cmpb
xchg
mov
xchg
orb
pop
data16
ficoms
and
dec
cmc
jnp
outsb
add
orl
ja
dec
pushf
mov
dec
jnp
mov
sbb
push
mov
dec
and
adc
cmp
fisubrs
roll
xchg
out
cld
loope
fs
insl
pushf
ss
push
mov
mov
sbb
pop
fs
in
inc
sub
test
stos
sbb
sub
inc
xorb
cmp
lods
xchg
mov
xor
inc
cmpsl
and
shlb
stos
cmp
xor
test
scas
xchg
out
fsts
cltd
lds
jmp
xchg
ss
inc
bound
clc
push
test
addr16
xor
adc
addr16
out
scas
inc
out
mov
adc
push
inc
aam
lock
xlat
daa
cltd
xchg
xchg
addl
aas
pop
xor
push
mov
cmp
dec
orb
sub
ljmp
rclb
pop
mov
xor
dec
sbb
xchg
mov
xchg
mov
cs
es
ljmp
cmp
test
adc
psubd
cmp
xor
and
int3
je
in
jp
in
push
in
hlt
inc
inc
test
sbb
and
mov
mov
cwtl
std
mov
mov
into
cmpsl
lcall
xorb
lahf
and
movsl
push
jle
push
addr16
ljmp
sbb
and
filds
push
lahf
pop
test
cmp
stos
inc
push
sub
xchg
mov
scas
pop
add
cwtl
lcall
sahf
loopne
adc
jecxz
daa
rcll
xor
shl
das
inc
in
jmp
cmp
lret
inc
fs
xchg
xchg
pop
sub
adc
cwtl
mov
dec
cmpxchg
xor
push
sub
imul
jno
lcall
or
outsl
sub
lcall
mov
and
orl
lods
arpl
jg
testl
push
or
shll
jle
sbb
inc
dec
cmp
mov
lret
cmp
inc
leave
popf
mov
imul
das
jle
dec
mov
not
pop
shlb
jle
bsf
cmp
mov
aad
cld
scas
inc
and
aaa
pop
mov
and
cmp
jg
dec
roll
je
mov
and
aaa
pop
fidivl
sub
or
push
test
insl
sub
int
iret
fsubrp
mov
mov
cmpsl
mov
stos
mov
lea
out
in
sbb
and
pop
push
pop
shrl
shlb
sub
repz
push
ss
push
dec
mov
rcrb
movsl
push
sbb
outsl
lea
mov
inc
mov
lret
in
popf
fsub
bound
inc
add
push
es
push
jl
dec
xor
push
shrl
clc
fisttpl
mov
aam
cmp
aas
xchg
xchg
cmc
pop
push
or
es
mov
mov
js
xor
xor
or
jmp
iret
hlt
mov
in
idivb
dec
ret
xlat
cs
out
push
adc
nop
jnp
stc
lret
js
jg
sub
jbe
fwait
add
dec
int3
iret
inc
sub
stos
nop
fildll
movq
jb
or
jecxz
pop
mov
cmp
pop
xchg
mov
ror
add
sub
and
popf
jmp
sub
sub
out
stos
cmpsl
push
stc
movsl
cli
out
int
add
dec
stc
out
shl
decb
je
sub
iret
sbbl
mov
dec
sub
jb
add
mov
ljmp
ret
xchg
jbe
in
xchg
push
cmp
shlb
rolb
outsb
das
pop
cmp
push
push
in
push
pop
js
lea
pop
mov
pop
shll
xor
adc
xlat
imul
popa
mov
addb
mov
xchg
lock
mov
jo
movsb
dec
sbb
pop
jb
ja
jge
xchg
leave
outsb
jp
sub
loop
out
fildl
sub
out
pop
sbb
push
xor
dec
ja
add
shrl
inc
and
sahf
adc
pop
xchg
mov
lds
outsl
mov
sbbl
mov
sub
push
jg
fdivs
cmpsl
inc
clc
jl
cwtl
pop
ret
jle
push
decl
outsl
cmp
lahf
rcrl
aas
push
inc
xchg
idiv
test
lods
and
mov
xor
in
roll
mov
xor
mov
and
pop
push
jbe
mov
push
inc
out
pop
inc
jns
or
insb
pop
les
movsl
in
in
int
pushf
or
xchg
daa
sub
cmp
roll
cmpsl
sbb
pop
cltd
loop
xchg
dec
push
das
les
andl
fdivp
and
repnz
push
adc
or
repz
or
xchg
js
bound
add
fidivs
xchg
data16
inc
pop
cmp
scas
fistps
mov
les
stc
stos
mov
lock
mov
mov
rcll
data16
xlat
pop
gs
cmp
int
lahf
insb
aad
or
cmpsl
add
push
and
cmp
das
pop
dec
addl
mov
xchg
aad
test
std
scas
push
xchg
cmp
cld
xlat
and
lcall
push
aas
mov
pop
mov
aas
cld
or
pop
call
add
xchg
or
stos
daa
xchg
test
jmp
pop
push
jno
xor
fs
or
or
outsl
sbb
push
jnp
add
mov
mov
mov
jbe
or
lahf
ret
jnp
and
mov
in
cmp
sub
add
in
into
repnz
cmpsl
je
jnp
or
hlt
ljmp
jmp
cmc
jle
adcl
add
add
dec
aam
mov
cmp
push
dec
call
sbb
int3
out
add
mov
adc
mov
xor
adc
add
enter
mov
pop
test
xor
pop
popa
and
adc
push
cwtl
sub
movsb
adc
outsl
cmp
cmp
popa
jp
cmp
mov
filds
ret
je
xor
js
xor
push
jae
xchg
rcl
lods
orl
pop
addr16
lcall
stc
popf
into
popf
fisubs
dec
push
mov
mov
or
cld
data16
std
and
xchg
fnstenv
xchg
mov
aad
pop
mov
std
or
mov
push
inc
shl
jnp
cs
sbb
mull
mov
add
xchg
psllq
xchg
mov
inc
or
sahf
fadd
push
xchg
fistpl
nop
push
jle
arpl
mov
sbb
je
int3
push
ret
dec
lcall
lods
scas
dec
add
ret
xchg
sbb
ret
bound
aad
jmp
pop
adc
dec
test
or
sbb
inc
mov
push
imul
add
popf
sub
jl
pop
xor
scas
pop
pop
push
jge
dec
jecxz
loopne
mov
cmpb
roll
fildll
xor
shlb
and
aaa
sub
inc
cmc
add
ja
int3
push
mov
xchg
sub
es
call
sbb
adcl
mov
adc
pop
mov
ljmp
add
rcr
dec
rcl
xchg
test
jp
push
loopne
cmp
int3
cltd
in
mov
sub
enter
and
scas
mov
mov
pusha
sti
arpl
rorl
filds
unpckhps
pop
add
sbb
test
ficoml
lahf
cmpsb
push
lret
imul
rcr
pop
std
int3
or
pop
test
or
stos
push
cmp
aad
jl
inc
test
ljmp
xchg
fcomip
popf
cwtl
mov
pop
les
fildll
movsl
outsb
les
mov
push
scas
dec
xor
data16
arpl
add
stos
pusha
repz
adc
dec
loop
jge
outsl
shll
addr16
and
mov
mov
dec
sub
les
sbb
cmc
imul
add
pop
aas
js
sub
ret
adc
lret
jp
je
test
cld
clc
lahf
dec
loopne
inc
xor
mov
and
xchg
rcrl
in
out
es
shrl
daa
pop
mov
push
js
mov
lret
and
ret
push
sbb
popf
lcall
mov
ds
mov
les
jp
pushf
pop
xorb
les
mov
aam
mov
mov
push
pop
mov
push
jmp
movb
cmp
stc
push
xchg
inc
adc
mov
fs
sti
mov
cmpsl
iret
or
or
jle
dec
pop
test
sub
or
push
pop
jae
dec
sub
in
xchg
pop
test
leave
pushf
pop
call
jae
mov
enter
mov
in
xchg
dec
cmp
jl
ds
push
sub
and
aam
stos
mov
or
pop
mov
cli
arpl
cmpsb
pop
add
cmc
xchg
ds
cmp
mov
mov
xlat
cmp
imul
mov
in
fdiv
arpl
mov
imul
stc
mov
fsubr
sub
adc
mov
inc
pushf
dec
fadds
push
sub
xchg
cmp
or
mov
inc
lahf
and
pop
ss
mov
mov
ret
adc
pop
out
repz
add
andps
bound
out
pop
fs
mov
imul
enter
roll
and
push
mov
mov
cmpsl
imul
aad
mov
and
aam
jg
aas
je
in
cmp
es
mov
cmpsl
jecxz
jmp
ret
aad
mov
ds
pop
jmp
or
std
cmp
nop
dec
jmp
cwtl
sahf
inc
xchg
lcall
movsb
out
xor
mov
push
loope
lret
push
insl
stos
push
lret
xrelease
or
xchg
out
xchg
sub
add
mov
dec
mov
sbb
aad
outsl
jg
inc
loop
and
mov
jb
xchg
out
loop
fidivrs
mov
add
test
out
cld
dec
jne
shll
push
int
sbb
mov
push
push
add
sbb
push
aas
int3
pop
call
and
lcall
ficompl
lods
push
dec
jmp
loop
stos
mov
out
adc
sub
mov
mov
cmp
inc
int3
test
xor
xlat
in
repnz
jnp
outsb
nop
subb
push
inc
es
int
roll
pop
aad
sbb
xchg
out
int3
xchg
in
push
std
push
mov
pop
cmp
les
lds
shrb
icebp
sahf
xchg
jle
mov
jbe
push
push
add
pop
adcl
mov
andl
test
mov
jne
leave
inc
mov
jmp
xor
addr16
je
fcmovb
push
lret
icebp
ljmp
in
push
add
orb
and
xlat
movsb
inc
call
stc
mov
cs
js
rcrl
leave
cmp
or
add
movsb
loope
aad
push
movsl
stos
mov
mov
mov
jno
js
lds
push
dec
cmp
pop
mov
jbe
in
adc
shll
dec
imul
xor
jo
lret
test
jne
test
mov
lahf
push
and
ljmp
jecxz
popf
pop
or
sahf
in
setne
pop
add
inc
or
xchg
inc
mov
arpl
leave
les
and
fmuls
addr16
test
insb
les
rorb
nop
add
pop
outsb
xor
push
xlat
sub
cmp
filds
add
add
jle
mov
jns
cmp
rolb
loope
xchg
fs
stos
dec
cltd
push
and
stos
xchg
xchg
xlat
or
mov
bound
fcmovnb
jnp
fwait
or
sbbl
ret
or
mov
add
dec
mov
mov
sub
fistpll
add
xchg
sub
mov
stos
jl
jno
aam
sahf
mov
mov
rcll
push
add
outsl
push
rcrb
shlb
das
iret
pop
jl
mov
adc
popf
push
stos
lret
add
lea
pop
jl
jns
sbb
push
push
insl
lods
je
add
jg
fistpl
jbe
sbb
lods
add
inc
daa
xchg
mov
scas
add
inc
sti
movsl
adc
mov
push
mov
iret
cmpsb
cmp
cmp
dec
adc
pop
sub
jo
sbbl
push
push
dec
add
xchg
mov
push
mov
mov
fwait
pop
jge
ss
mov
push
test
nopl
adc
cld
pop
test
rcrb
mov
cli
outsb
sub
lock
mov
xor
addr16
pop
out
pusha
in
xchg
or
xchg
or
push
cmpsb
inc
xadd
jp
mov
fs
ds
jg
dec
inc
jne
jmp
add
pop
dec
dec
fstp
test
pop
and
aad
ficomps
sbb
sub
ret
mov
test
inc
mov
and
sub
lahf
ljmp
leave
push
movsl
adc
out
stos
mulb
jecxz
je
cmp
rcr
sub
popf
ljmp
sub
pop
mov
ss
push
iret
sub
fisubrs
dec
imul
mov
adc
pop
stos
pop
outsl
test
repnz
sub
mov
pusha
in
sar
loop
pop
leave
or
adc
mov
xchg
ret
loope
int
in
push
cmp
cmp
in
in
mov
adc
fs
sbb
mov
mov
mov
lds
ficoml
or
outsb
roll
push
cmp
sbb
cld
cmp
outsl
cltd
and
adc
rcrl
lea
hlt
add
xor
push
mull
lcall
data16
or
jl
or
sbb
lods
mov
into
imul
cmp
aas
jns
rorl
pusha
je
mov
scas
movsb
pop
stc
lods
cwtl
mov
dec
cltd
pop
xchg
shrl
push
lcall
jge
addr16
fdivrs
sbb
test
push
hlt
lds
out
sub
daa
popa
clc
out
mov
out
repz
into
cwtl
lds
pop
scas
xchg
sub
arpl
pushf
pop
sbb
and
jbe
or
sub
inc
pop
dec
jbe
mul
popf
and
xor
xor
mov
pop
dec
sbb
mov
popf
mov
outsb
push
pop
fidivs
push
jp
daa
data16
hlt
cwtl
dec
push
in
push
hlt
nop
fistl
mov
bound
dec
mov
inc
out
xor
loope
arpl
jle
jl
dec
mov
daa
add
cmpsl
dec
push
outsl
sub
js
jg
xchg
out
xor
addr16
cwtl
loop
mov
adc
in
jl
negl
xor
bound
mov
jg
xchg
sbb
cld
lret
js
testb
push
roll
push
leave
das
or
jecxz
mov
lea
inc
into
xchg
lock
mov
daa
xlat
jno
insl
stos
dec
insb
lea
out
jge
or
stos
movsl
and
xlat
test
push
mov
icebp
aad
xor
and
and
jb
js
pop
sbb
xlat
xchg
cmp
jne
jb
xchg
and
mov
lods
pusha
sbb
sub
add
cli
clc
xchg
jmp
rolb
lock
in
aad
push
mov
subl
mov
fisttpl
cmp
mov
jmp
adc
fdivl
sar
movsb
pop
loope
aad
es
add
mov
pop
in
mov
and
pop
pop
scas
mov
inc
cld
loope
push
pop
lods
push
and
or
or
dec
stos
sub
pop
pop
sub
jl
stc
or
or
or
imul
jmp
divb
xchg
ss
push
ja
stc
in
push
adc
xchg
xor
cmp
hlt
gs
mulb
pop
pop
dec
pop
push
pop
xchg
xchg
test
ret
rclb
add
push
sbb
scas
sub
push
pusha
aam
mov
xor
aam
inc
loop
inc
push
mov
jmp
dec
cmpsl
pusha
xchg
daa
ret
pop
xchg
movsb
add
cs
dec
ffree
cmp
or
jne
adc
ja
inc
shll
aaa
sarl
or
icebp
lock
mov
fs
fimull
or
pushl
xchg
out
stc
mov
cmpsb
pushf
jg
lock
repnz
nop
jl
sbb
movsl
jge,pn
stos
je
jge
nop
pusha
mov
jo
loop
jge
cmp
jb
add
push
xor
es
iret
mov
push
sbb
xchg
fldenv
icebp
fcoms
repz
loop
mov
cmp
iret
inc
daa
mov
xor
xchg
jae
clc
pop
cmp
imul
xchg
dec
js
xchg
dec
mov
mov
fcoml
daa
mov
push
jo
cmpsl
scas
push
pop
scas
outsl
xchg
push
mov
sbb
push
or
cmp
mov
enterw
lds
call
mov
push
mov
mov
add
dec
repz
in
add
jb
ds
fwait
aaa
call
movsb
sbb
mull
xor
cmp
jne
xchg
out
cmp
mov
push
lods
jb
or
push
pop
out
orl
xlat
test
adc
cmp
jp
mov
cli
mov
and
je
cwtl
sahf
push
sub
xor
mov
or
cltd
adc
xor
test
mov
fsubl
xchg
adc
leave
loop
xchg
xchg
dec
mov
push
inc
mov
sbb
mov
mov
xorl
stos
mov
ret
pop
inc
pop
mull
sbb
or
xchg
mov
add
dec
jae
out
add
jbe
addb
sbb
sbb
mov
cmp
aas
and
inc
adc
push
rcr
sbbl
jle
dec
or
out
mov
stos
xlat
ret
int
hlt
mov
lcall
add
sbb
das
fdivs
cltd
and
popl
or
ss
movsb
jmp
pushf
jmp
xchg
leave
stos
and
dec
xor
add
dec
mov
std
ret
cmp
pop
mov
bound
pushf
dec
sub
mov
add
pushf
das
push
aad
inc
add
fistpl
lahf
pop
cmp
arpl
jecxz
jecxz
cmpsl
jl
xor
cs
int
popa
out
xchg
imul
cmp
stos
xor
push
add
and
test
add
test
in
sub
push
mov
pop
lods
sti
shlb
lcall
ss
inc
or
repz
jno
int
xchg
jge
rolb
loope
call
or
sti
mov
mov
push
sbb
cmp
xchg
jo
lahf
cmp
fwait
sbbb
ret
fucomip
cli
sarb
xchg
je
mov
clc
cmp
insb
fldt
arpl
jl
jecxz
and
out
xlat
pop
mov
mov
mov
stos
lods
ret
repnz
pop
ljmp
in
loop
ja
add
test
mov
jge
inc
push
in
lds
mov
mov
cmp
and
xor
test
jae
sbb
cmpsb
outsb
mov
xor
xor
repnz
push
mov
xchg
sub
or
test
push
in
and
add
rorl
test
push
sahf
aad
mov
mov
sbb
hlt
int
sbb
scas
mov
jecxz
jno
fstpl
add
push
adc
push
sar
in
xchg
popf
sbb
mov
mov
movsl
xchg
lods
cmp
daa
push
pop
xchg
ljmp
pop
lds
andb
or
and
and
js
xchg
pusha
scas
cltd
and
sti
mov
jno
shll
es
cmpsb
nop
scas
pop
aad
testl
std
rcrb
mov
inc
pop
or
mov
jb
cmp
mov
in
inc
test
getsec
xchg
mov
and
addl
push
imul
dec
not
out
ret
call
mov
jge
sti
push
outsb
inc
jb
fldl
fidivs
push
inc
cli
push
cmp
imul
popa
daa
adc
dec
dec
sub
sbb
xor
jne
inc
cmp
cli
and
test
mov
pop
add
fiaddl
xor
sub
dec
xor
fistpl
js
dec
ret
dec
cmp
xchg
pop
mov
xor
test
or
jns
xor
push
mov
xor
jecxz
mov
outsb
xchg
loopne
jns
add
repnz
xchg
jae
fwait
out
sub
mov
cs
push
jl
cmp
pushf
std
cltd
xor
adc
inc
inc
enter
ficomps
jl
aam
pop
fldenv
movsb
sbb
xchg
cltd
push
mov
mov
pop
sub
sbb
out
ljmp
fld1
mov
cltd
xor
lret
cmc
jno
aam
clc
sbb
ljmp
xor
lahf
repz
mov
dec
fsubr
je
adc
add
lods
adc
mov
es
xchg
and
rol
cmp
mulb
xchg
xor
lcall
loopne
adc
sahf
pop
xchg
push
mov
jge
mov
iret
aas
stos
roll
test
popa
in
cli
daa
fcomp
sub
addl
out
xor
mov
fistpll
cmpsl
dec
insb
jp
pop
inc
add
insb
outsb
mov
adc
shl
rclb
sbb
cmp
jmp
loope
adc
mov
cmp
add
mov
inc
call
lods
and
ja
je
xchg
out
rcrb
es
leave
mov
push
xchg
push
pop
fadds
xor
mov
push
aad
movsb
into
jns
xchg
pop
or
push
jg
addb
mov
dec
ss
dec
ljmp
sub
aam
lods
mov
lods
lcall
pop
in
lcall
shll
adc
popf
imul
cmp
cmp
sub
scas
fcompl
jmp
fwait
xchg
fs
scas
out
not
popa
inc
pop
cltd
jp
repz
mov
shrl
inc
mov
mov
sbb
std
add
cmp
popa
xor
inc
lcall
cmp
leave
addr16
lar
leave
aam
bound
xchg
lcall
xchg
and
lcall
mov
mov
adc
lods
mov
lahf
and
pop
xchg
mov
xchg
add
jge
pop
out
pop
leave
cmp
xchg
rep
mov
imull
loop
shl
shll
mov
pop
jns
cwtl
lcall
out
inc
ja
in
testb
or
mov
out
xchg
fldenv
test
inc
jno
jo
cld
cmp
inc
into
jecxz
lods
outsb
aaa
jecxz
enter
sub
lcall
pushl
jb
xor
lret
andl
faddl
xchg
int
mov
insb
popa
xor
test
mov
lods
mul
pushf
cmc
sbb
lret
add
out
adc
scas
xchg
xor
sbb
jo
mov
sub
sub
cld
mov
imul
add
jp
iret
jecxz
jb
frstor
or
xchg
or
dec
jae
inc
mov
and
xchg
jb
xchg
push
pop
mov
xor
push
mov
mov
lcall
fnstsw
sbbb
xor
inc
repnz
fidivrs
inc
mov
push
sar
lahf
add
aam
int3
pop
fcomip
mov
or
jbe
fcmovu
sbb
cmp
dec
adc
scas
orl
xor
movsb
fucom
pop
clc
push
xorb
mov
cs
jo
cld
mov
stos
mov
roll
dec
andb
push
and
icebp
scas
push
shlb
sbb
xor
decl
add
clc
lods
out
mov
xchg
mov
inc
hlt
sub
addr16
sbb
aas
push
mov
jno
notb
cmp
nop
adc
dec
shll
fs
pop
cmp
int
xor
fildll
and
sahf
mov
dec
jl
cmp
xchg
hlt
stos
sti
fadd
adc
outsb
std
mov
xchg
xlat
fiadds
es
lds
pop
dec
popf
aaa
aad
push
shlb
pop
imulb
sub
cmova
orl
xchg
ret
das
les
mov
dec
enter
mov
shr
jp
sub
dec
imulb
das
or
sbb
cld
ljmp
lock
lods
pop
test
fdiv
xchg
or
and
cwtl
push
sub
je
push
int3
das
rcll
cli
push
punpckhbw
lock
stos
dec
popa
pop
jle
sbb
adc
insb
cmp
sbb
dec
jle
int
add
lret
mov
sahf
imul
jp
test
adc
sub
fwait
repnz
mov
enter
xchg
clc
xor
jne
lods
sbbb
xchg
push
adc
add
scas
jmp
push
push
and
or
fxch
leave
dec
cltd
pop
sub
or
mov
loop
sub
popa
mov
or
lahf
sbb
jg
mov
pop
ficoml
lcall
inc
pop
test
xchg
and
js
hlt
cmp
pop
movsb
sbb
hlt
push
data16
js
mov
nop
fld
bound
shll
cld
mov
pop
nop
add
int3
test
int3
add
loop
mov
adc
xchg
lods
testl
or
aas
loopne
data16
fsub
jge
push
xor
fnstenv
pop
js
repnz
xchg
xor
outsl
inc
ss
dec
inc
ljmp
pop
and
jo
mov
adc
mov
push
arpl
ficoml
popf
mov
or
aaa
or
xchg
mov
cmp
dec
xchg
and
shr
push
xchg
or
or
push
mov
shrb
sbb
cmc
lea
movb
cmp
mov
inc
inc
in
dec
mov
into
pop
mov
or
and
mov
mov
dec
adcb
fstpl
cwtl
xchg
jne
paddq
jge
push
xchg
or
or
dec
sub
js
push
insb
in
fxch
cwtl
dec
daa
adc
int3
xor
shlb
xchg
push
dec
xor
cmp
je
sbb
test
push
xchg
lcall
outsb
and
pop
das
mov
mov
cld
jge
or
xchg
inc
prefetch
jo
xor
int3
push
testl
sbb
ret
cld
inc
imull
xchg
cmp
push
inc
push
add
iret
adc
sub
leave
sub
dec
jbe
in
out
idivb
scas
cmpsl
popf
mov
mov
ds
or
mov
scas
addl
cltd
adc
pop
andb
or
movsl
sbb
sbb
cmp
xchg
ret
aam
mov
sub
mov
sbb
in
shl
mov
add
adc
adc
inc
jno
mov
stos
rolb
mov
mov
lods
pop
sbb
clc
shl
and
fs
push
dec
test
add
and
lods
daa
dec
xchg
insl
mov
mov
in
mov
and
xor
scas
mov
pop
fists
cmpsl
sahf
mov
into
add
ljmp
iret
push
push
xlat
sub
adc
jmp
fcompl
jecxz
xor
or
or
lcall
fstl
nop
push
rorl
inc
push
sbb
xchg
xor
jbe
and
cli
jg
pop
adc
mov
mov
mov
fimuls
pusha
test
lcall
mov
sbb
xchg
mov
mov
out
inc
ja
pop
mov
xchg
aad
jo
push
adc
rorl
aas
repnz
jecxz
add
mov
jecxz
stc
fs
popa
add
xorl
mov
push
or
mov
adc
out
fcmovne
jg
mov
mov
xchg
lahf
and
push
jecxz
xor
aam
pop
lahf
push
inc
xor
and
mov
sbb
ds
adc
rep
hlt
pushf
pop
push
inc
arpl
pop
sub
mov
out
dec
jns
add
mov
roll
xor
lcall
pop
out
jae
mov
jno
lods
xchg
lcall
sub
mov
sar
jle
test
addl
pop
sahf
sar
and
dec
out
cmp
jmp
pop
jmp
mov
pop
outsl
sti
cmpl
mov
xchg
push
and
or
test
rcl
mov
rcrb
cmp
mov
daa
pop
aaa
sub
dec
clc
mov
mov
lea
xchg
push
aaa
inc
xorl
xchg
mov
adcl
test
repnz
lods
fstpt
das
adc
mov
cmpsb
add
mov
sbb
pop
fidivrl
cmp
mov
inc
and
arpl
xchg
inc
shlb
fcoml
aam
aas
sbb
and
cld
call
cmpsl
sub
stos
cmpsb
xchg
mov
ret
inc
xchg
dec
sahf
dec
gs
out
ljmp
xchg
out
push
cmp
negl
adc
pop
loopne
mov
xor
fcompl
push
push
jecxz
aad
sbb
sbb
movsb
rcrb
out
cld
lcall
and
rcr
push
outsl
not
jle
or
adc
jge
and
inc
and
sbb
xchg
add
mov
test
push
popa
js
dec
shrl
ror
xchg
mov
in
sbb
in
mov
popf
xchg
and
mov
sbb
mov
ret
popf
out
aas
cli
xlat
xchg
mov
out
fldl
cld
mov
sti
push
jns
mov
cmpsl
jae
nop
loop
into
push
dec
xchg
fisttpll
nop
movsb
imul
enter
aam
jns
pop
cs
xchg
pop
movsl
ss
loope
into
lods
cld
inc
xchg
xor
push
fcoml
sbb
xchg
inc
imul
mov
outsl
cmp
icebp
adcb
adc
orb
rcll
push
mov
ds
aas
in
mov
push
inc
push
inc
ljmp
mov
xor
aam
in
adc
add
dec
dec
mov
mov
fisubs
jmp
cmc
pop
dec
movsb
cs
adc
aad
adcl
aaa
lds
cmc
inc
sub
adc
inc
ss
xchg
das
pop
jg
scas
int3
adc
fmul
xchg
insb
ficompl
jp
mov
insl
pop
test
jbe
adc
lret
lds
dec
mov
cmc
push
popa
std
lock
push
loope
xor
inc
test
loopne
orb
dec
test
bound
sub
push
rcr
test
popf
xor
std
mov
xchg
dec
in
cmp
lret
pop
loope
sbb
es
imul
subb
sbb
fstl
push
sbb
xchg
inc
data16
outsb
mov
movsl
popa
lds
xor
loop
int3
add
mov
jp
mov
xchg
shrl
dec
mov
clc
loopne
pop
xchg
jecxz
and
push
push
enter
lds
call
jp
mov
mov
mov
add
jecxz
adc
mov
test
push
xor
sbb
das
pop
adc
dec
hlt
lahf
push
add
cmpsb
fidivl
pusha
add
mov
rcl
jge
icebp
mov
dec
jbe
pop
mov
rcrl
push
xchg
aaa
add
jg
pop
jbe
xor
mov
pop
fnstenv
fs
and
jge
mov
mov
cmp
push
sub
cmpsb
mov
flds
xchg
lret
push
sbb
mov
idivb
call
jp
push
mov
pop
xchg
leavew
test
lock
mov
hlt
idiv
mov
or
imul
fwait
mov
xor
rorl
xchg
ret
leave
sbb
dec
or
inc
xchg
adc
pop
in
jg
pop
inc
sub
mov
scas
jo
std
sbb
insl
sub
lret
fsub
mov
add
mov
stc
adc
stos
test
pop
insl
sbb
mov
cld
mov
call
jae
adc
filds
sarb
in
clc
out
into
shl
adc
cmp
push
cmp
dec
mov
push
or
xchg
cli
hlt
xor
sub
sub
je
fprem
lods
mov
inc
mov
or
and
popa
add
loopne
pop
stos
shll
or
push
fidivl
mov
mov
lea
repz
xchg
add
lcall
out
test
inc
sub
bound
lcall
in
jle
inc
cmp
hlt
inc
and
js
jns
xchg
pop
stos
pop
or
mov
gs
mov
inc
mov
inc
sti
popa
lret
pusha
lods
mov
and
xor
xchg
imul
xor
jno
test
inc
jmp
xor
leave
addr16
sub
ficomps
shlb
out
es
adc
xchg
mov
cmpsb
xchg
add
jecxz
xchg
movsb
pop
jo
or
jecxz
inc
push
and
sub
sbb
les
pop
enter
mov
arpl
fsubl
mov
nop
fpatan
loope
leave
jbe
movsb
insl
xor
call
mov
and
rcl
sbb
fistl
xor
pop
mov
xchg
xchg
inc
ljmp
pop
mov
cwtl
inc
jmp
inc
into
sbb
dec
xchg
adc
pop
mov
test
cmp
mov
mov
push
pop
jo
subb
test
inc
lock
mov
mov
std
mov
inc
cmp
push
adc
test
cmp
jae
rorl
cld
iret
imul
cmpb
fdivp
cmp
mov
jmp
sub
mov
movsl
subb
inc
popf
mov
and
mov
sbb
popa
inc
std
insl
fwait
sbbl
mov
jbe
xchg
andl
or
clc
inc
push
xor
jnp
idivb
frstor
lods
fsubrs
lock
lods
pop
dec
lahf
repz
sub
or
rorl
test
or
pop
add
or
xchg
lock
push
decb
jnp
push
fsubl
push
adc
push
lahf
flds
dec
sbb
adc
jno
shll
jne
fwait
mov
cs
sahf
out
cld
shll
push
and
hlt
cmpsb
mov
insl
cmp
xchg
fidivrl
out
lods
mov
adc
mov
nop
fistl
or
icebp
push
js
das
rolb
mov
jno
cmp
sub
cld
fmul
mov
stos
xor
pop
and
idiv
movsl
or
push
subb
aas
push
scas
sbb
xchg
int
popa
add
or
test
push
insl
add
jle
inc
stc
lret
inc
xor
mov
mov
into
divl
icebp
jl
into
aaa
out
mov
mov
cmpsb
push
dec
outsb
faddp
xor
xchg
lock
push
dec
ficoml
frstor
rcrb
call
jmp
jb
faddl
insb
lods
mov
xchg
push
lret
mov
int
insl
xchg
xchg
push
ret
dec
cli
sub
iret
out
sar
mov
ljmp
push
xor
xor
out
mov
mov
lret
dec
mov
arpl
iret
or
jbe
mov
lcall
add
aad
js
xchg
inc
popf
jnp
mov
jno
ja
cwtl
sub
shlb
jge
inc
sub
xchg
dec
xchg
jmp
sub
subl
push
sub
xchg
jb
dec
lods
or
mov
dec
add
popa
cmpsb
mov
nop
lods
movzwl
iret
sub
jne
inc
addr16
mov
cmp
int3
pop
ret
jge
pop
test
lret
xlat
loope
fsubl
sbb
dec
pop
pop
cmp
xor
out
ds
hlt
cld
mov
adc
push
xor
das
lret
mov
outsl
out
cmp
bound
cwtl
inc
in
jo
cwtl
add
mov
cwtl
enter
outsl
mov
and
das
push
mov
clc
xor
or
addr16
aaa
test
xor
ja
rcr
scas
and
xchg
adc
ret
mov
inc
popa
pop
xchg
adc
jle
aas
out
jg
fmuls
stos
jl
icebp
mov
jnp
std
fidivrs
repz
xor
sbb
xchg
add
jle
cli
int3
jge
push
outsb
pusha
add
push
ljmp
push
sti
cmp
outsb
jo
pop
adc
hlt
insb
repnz
xor
sarb
mov
sbb
ja
push
in
jmp
es
fwait
shll
fdivrl
lcall
imul
and
les
pusha
push
xor
or
inc
mov
mov
xchg
lret
stos
xor
xor
xchg
fsubrs
movsl
push
pushf
lret
and
jbe
pop
mov
mov
sahf
orb
sub
outsb
jne
scas
jl
lahf
or
movsb
cmp
adc
les
mov
and
xchg
repnz
or
cmp
and
jecxz
rolb
pop
push
shrl
int
call
ljmp
scas
cmp
fisubl
fwait
dec
sub
out
push
mov
and
lds
sbb
pusha
add
push
shr
testb
stos
or
ljmp
add
inc
testl
shl
in
rclb
mov
mov
pop
add
testb
xchg
fdivrs
hlt
jl
jae
and
leave
out
cmp
inc
and
dec
or
pushf
adc
arpl
jge
jns
test
push
inc
mov
popf
push
add
test
xlat
sub
notb
nop
xor
inc
add
cmpsb
rorl
mov
out
sbb
scas
push
jmp
pop
lcall
and
mov
arpl
scas
sub
mov
adc
pop
int3
xor
repnz
jno
lret
push
dec
sbb
push
lcall
scas
and
jle
and
sahf
imul
dec
bound
pop
sub
and
inc
mov
jae
mov
jbe
add
bound
loop
xchg
in
and
inc
mov
call
adc
imul
cmp
dec
and
fwait
sub
gs
mov
mov
xor
push
cld
cmp
outsb
or
and
test
shrl
and
xorl
fcmovne
daa
mov
fldl
push
pop
add
test
enter
neg
jge
enter
daa
push
inc
ljmp
push
pop
adc
fcomp
sbb
aas
ror
mov
fidivl
ja
int
fcmovu
and
lahf
ljmp
cmp
ret
sahf
icebp
sub
lods
mov
and
xchg
jg
xchg
cli
or
rcr
mov
sahf
lock
leave
xchg
xchg
fiaddl
cwtl
push
cmp
jo
gs
dec
xor
insl
out
fidivs
mov
xchg
scas
loope
cmpl
cmpsl
fstpl
sahf
pop
sub
jmp
bound
jmp
cmc
mov
push
pop
leave
dec
inc
xor
push
push
into
xor
loope
enter
cwtl
push
int
into
pop
push
clc
add
ret
mov
iret
and
xor
mov
enter
stc
sbb
sti
and
js
cwtl
repnz
mov
jb
inc
test
sbb
loope
mov
loope
pop
pop
ffree
mov
andl
xchg
sub
xchg
add
int
cmpsl
sub
leave
aad
mull
sbb
ljmp
mov
hlt
call
shrw
mov
inc
sub
ss
cmpsb
push
rcrb
add
out
adc
cmp
rcl
mov
sti
sub
pop
or
push
mov
mov
flds
jl
sub
sbb
lcall
xchg
and
jmp
cmp
stc
cli
xorb
pop
fidivl
dec
xlat
mov
push
xchg
rorb
adc
js
sbb
mov
js
xor
pop
stos
push
cld
inc
es
fildll
xor
cli
adc
and
push
repnz
int3
mov
pop
lahf
adc
incb
out
jns
dec
shrl
xchg
fists
sbb
leave
into
xchg
mov
or
cmp
sub
aad
out
test
test
xor
enter
jge
push
and
dec
xchg
loopne
jno
jecxz
pop
jbe
mov
push
and
movsb
jg
mov
insb
mov
mov
or
repz
pusha
mov
fildl
loope
fs
inc
jno
cmp
ja
fs
repnz
imul
sub
xor
mov
in
and
sub
in
dec
cmpsl
mull
pop
outsl
xchg
push
and
add
push
mov
loope
js
cmp
mov
mov
adc
inc
push
rcl
push
xchg
cmp
in
xor
dec
insb
mov
mov
lret
arpl
dec
gs
xchg
and
mov
fdivrs
out
pop
mov
push
scas
push
dec
xor
fistpl
mov
mov
push
fidivl
leave
sbbb
shrd
xor
mov
mov
add
nop
xor
or
jnp
jmp
movsl
jbe
mov
insl
cmp
shrb
fisttps
arpl
jmp
in
fimull
iret
mov
mov
enter
and
out
sub
pop
inc
stc
gs
pop
dec
cli
inc
sub
jp
jle
faddl
mov
mov
lret
mov
je
add
lcall
xor
jp
fdivr
andl
dec
out
sbb
and
cmp
mov
out
int3
cs
dec
bound
mov
repz
les
mov
inc
jmp
add
add
xorb
jg
push
filds
mov
sahf
or
mov
push
push
jb
outsl
call
cmpsb
fadds
inc
mov
or
jb
sbb
stos
fistpll
push
sub
xor
nop
push
repnz
fiadds
pushf
mov
rcll
icebp
movb
inc
sarb
cs
rclb
jecxz
mov
pushf
xor
subl
icebp
rol
and
or
cli
ljmp
outsb
adc
sbb
mov
dec
add
mov
repnz
rorl
mov
cmp
push
jl
in
and
aas
adc
data16
jno
cmp
out
aas
or
xchg
inc
lds
jo
mov
fs
sub
add
ljmp
or
jbe
pusha
data16
push
nop
out
jnp
cwtl
pop
or
fsubrs
jo
and
or
sbbl
inc
fldcw
mov
adc
jno
lds
rolb
add
dec
out
ret
shl
sbb
cmp
mov
fistpll
xor
push
cmp
cmp
sahf
daa
add
jno
xor
test
js
js
roll
and
addr16
push
mov
rcl
ret
cmp
aas
inc
in
pop
rorl
sti
xchg
cmpsb
inc
iret
bnd
push
xor
insb
lods
mov
ja
add
das
cmp
push
and
add
jnp
sbb
add
popa
push
sub
movsb
arpl
mov
dec
xlat
shrb
fisubl
jp
loop
jne
cmp
push
lahf
xchg
xor
inc
jge
jo
lahf
fwait
and
dec
cmp
and
jns
gs
imulb
outsb
xchg
ds
ror
inc
in
dec
sbb
insb
in
and
and
mov
push
dec
scas
xchg
dec
inc
sahf
xor
fisubl
jne
in
pop
insl
je
shll
push
xchg
adc
imul
dec
popa
or
cmp
xchg
sub
jmp
adc
cs
mov
jo
dec
and
dec
test
adc
nop
sub
pop
lcall
repz
mov
jno
jns
bound
clc
push
rcrb
sub
add
push
cltd
dec
mov
in
pop
fldenv
pop
jno
mov
or
int3
pop
ss
mov
lods
out
divb
aad
sbb
xor
or
cld
ss
test
push
sti
ljmp
mov
shl
div
cmc
pop
or
aad
inc
stos
aaa
add
loopne
jno
aas
fwait
sub
pop
les
pop
pop
xor
fmull
cmp
out
cmc
add
lods
xor
lret
pop
mov
adc
pop
popa
add
or
sub
inc
sbbl
hlt
xchg
jl
fiaddl
aad
outsb
fisubs
nop
test
inc
shl
or
lock
subb
mulb
rorb
leave
imul
pop
pop
jmp
sbb
sub
mov
and
andb
sub
aam
je
jae
dec
push
nop
xchg
pop
nop
add
cltd
cs
cli
lahf
dec
sub
nop
mov
scas
lcall
fucomip
repnz
repnz
daa
imul
cltd
icebp
xor
inc
fadds
icebp
cmp
pop
mov
aad
addr16
int3
mov
inc
adcl
les
movsb
inc
jge
fisubrs
sbb
enter
and
mov
fimull
adc
jo
jb
cmp
cld
fwait
pop
push
pop
pop
pop
inc
fiaddl
into
pop
push
lds
inc
pop
xchg
sbb
jp
pop
je
or
cmpl
test
movsl
mov
mov
cld
lahf
insb
in
in
add
test
cmc
dec
fisttpl
mov
cwtl
fstpl
fs
ror
lock
xchg
sub
and
mov
inc
sbb
test
xchg
test
push
sub
mov
div
test
ss
push
xor
popa
mov
xchg
cmp
andb
sbb
in
xchg
call
insb
dec
adc
fnstenv
sbb
repz
dec
jae
mov
cmpsb
lock
sub
jae
pop
cmp
enter
sbbb
test
sbb
mov
test
push
sub
imul
add
test
clc
std
sub
daa
lea
jge
cmp
dec
in
rclb
jnp
mov
cmpsb
js,pt
leave
pop
pop
and
inc
nop
fldl
fwait
sub
cmp
dec
test
add
aam
mov
decl
les
pushl
movsb
repz
pop
mov
shl
push
xchg
ja
ljmp
leave
push
jo
jmp
call
mov
ficoml
fsubrl
fdivs
std
sbb
push
icebp
movsb
lods
adc
pop
arpl
movsl
icebp
push
mov
dec
sbb
or
cmp
repnz
xchg
mov
sarb
mov
push
lcall
call
test
decb
mov
stos
xchg
mov
ss
lea
pop
arpl
sbb
repnz
and
add
in
cmpsl
out
fmull
icebp
mov
dec
je
inc
jns
and
jmp
lods
dec
push
dec
insb
loopne
mov
and
fmuls
pop
mov
fs
mov
mov
lahf
push
in
adc
dec
fwait
outsl
loope
sub
jo
cmp
fsubs
out
loop
loop
daa
sahf
pop
int3
sahf
xor
inc
add
loope
aaa
std
xor
daa
or
mov
pop
add
mov
imul
fistpll
jno
enter
pop
mov
popa
xor
xchg
dec
bound
into
ds
push
cmp
jo
imul
out
mov
lock
cltd
jnp
lds
arpl
test
adc
stc
pop
in
mov
sub
hlt
mov
pop
lret
xchg
aas
mov
ret
orl
mov
mov
arpl
call
cmp
rcl
inc
push
adc
lret
addr16
xor
jno
mov
sbb
sbb
push
mov
xor
dec
push
add
outsl
sbb
sarb
add
pop
jecxz
dec
hlt
div
call
rolb
jp
ds
cmpsl
mov
add
pop
outsl
mov
xchg
pop
and
mov
jo
adc
mov
popa
test
dec
sub
sub
fstps
ret
cmp
jns
int
mov
cmp
mov
jmp
roll
mov
jmp
jl
xchg
inc
inc
pop
sbb
ja
adc
nop
subb
bound
call
lods
dec
or
pop
cmp
bound
xchg
jle
cwtl
cmp
xchg
cmp
pop
rcl
xor
mov
inc
ds
xchg
xor
test
popf
out
adc
pop
mov
cmp
push
dec
xchg
ficoms
enter
push
repz
and
and
sahf
movsb
cmpsb
push
jb
jbe
push
inc
in
test
int3
ljmp
roll
or
in
fs
inc
jb
xor
xchg
push
or
mov
mov
xor
js
pop
mov
test
cs
sbb
mov
ret
xchg
inc
mov
stos
mov
pop
fildl
stos
or
popf
shr
out
inc
testb
out
dec
outsb
push
adcl
add
insb
mov
mov
pop
pop
xor
push
lock
iret
cmp
sbb
movb
xchg
jle
out
into
pop
or
stos
add
out
dec
xchg
sbb
call
clc
jge
bound
jecxz
call
add
push
and
adc
mov
in
pop
add
icebp
stc
sbbb
jle
lret
xchg
mov
das
xchg
ja
cltd
and
mov
jecxz
scas
pusha
cmp
shlb
mov
push
mov
fldt
push
pop
pop
mov
icebp
add
jnp
cli
sub
out
pop
hlt
add
fsub
sub
ljmp
inc
fsubl
rcrb
pop
sahf
jbe
out
xor
push
add
mov
dec
fs
mov
faddp
daa
stos
in
adc
sub
icebp
sbb
jecxz
pop
mov
cmp
sti
stos
cmp
test
and
cmp
adc
sbbb
or
push
in
js
out
xor
or
iret
mov
aas
jno
jnp
or
dec
out
out
stc
stos
pop
shlb
inc
out
jb
scas
jno
pop
les
push
dec
sub
inc
test
mov
xchg
aam
je
mov
clc
pop
stos
int
add
arpl
cli
cltd
dec
fcom
in
stc
out
in
dec
xor
shrl
and
vandps
mov
sub
test
aad
fnstsw
cmpsb
into
sub
mov
adc
or
aaa
iret
mov
cmpsl
inc
loope
lock
hlt
popf
xchg
jmp
imul
lcall
jnp
sub
add
rcl
movsl
cmp
ljmp
out
data16
stc
mov
int
inc
loopne
flds
pop
adc
test
in
sbb
dec
dec
mov
cmp
pop
imul
ljmp
test
jbe
inc
cmp
out
fidivrl
push
filds
mov
je
mov
cli
push
pop
ret
pop
aas
pushf
push
lahf
xlat
mov
cwtl
xor
pop
enter
xor
or
add
xlat
sub
in
aas
jns
add
cli
iret
cmp
out
cmp
adc
lods
rcrb
lods
mov
dec
rorl
sub
pop
pop
cmp
jge
and
mov
cmp
dec
shlb
and
pxor
mov
addr16
ljmp
lahf
aaa
insl
test
adc
inc
or
dec
mov
aas
sar
push
loope
imul
or
int
lds
stos
mov
ret
mov
dec
dec
xchg
je
loop
int
pop
sti
cmc
push
push
add
dec
or
arpl
leave
mov
jg
rolb
jbe
ja
bound
mov
sub
aad
pop
add
sub
inc
sbbb
nop
jno
fidivs
adc
pop
mov
and
sbb
cwtl
dec
xchg
fs
sarb
cmpsl
cmpsl
mov
jmp
rcl
mov
out
cmp
push
in
into
push
sahf
adc
push
shrl
mov
push
cmp
mov
mulb
xchg
dec
mov
icebp
jnp
loop
inc
cmovbe
arpl
jae
stos
xchg
rcll
adc
mov
incb
dec
xor
sbb
cmpsb
jmp
imul
rorl
js
mov
mov
shl
or
ljmp
idivl
xchg
push
xor
add
mov
push
cmpsl
loop
sti
out
push
lods
xchg
sbb
daa
dec
mov
gs
mov
orb
mov
data16
mov
mov
sub
jb
repz
call
mov
mov
js
or
inc
sub
int
mov
push
sub
negb
push
imul
andb
adc
push
pop
push
pop
loop
push
roll
rclb
popf
inc
in
aas
ror
lods
push
in
jecxz
leave
cmp
or
push
fistl
call
push
out
mov
rcl
aaa
fcom
adc
imul
out
jg
mov
in
repnz
xchg
out
cld
mov
cmpsl
scas
cli
mov
test
inc
jmp
push
test
das
sbb
test
xor
push
test
test
arpl
pop
pusha
dec
and
das
sbb
mov
and
imul
mov
in
push
je
xchg
repnz
xor
sbb
pop
loopne
xlat
lods
or
stos
pop
int3
popa
jnp
addr16
je
mov
xchg
bnd
or
xlat
bound
cld
push
lds
fwait
jg
adc
aas
fwait
dec
in
scas
ja
stos
add
les
cmp
lds
int3
cmc
inc
dec
outsl
outsl
mov
fwait
sbb
xchg
pop
xorl
cmp
add
insl
mov
cmpsl
out
aaa
cmp
xchg
xchg
fs
add
xor
jno
and
or
dec
xor
or
mov
xlat
repz
sti
jg
mov
pushf
fwait
push
lret
cmp
popa
iret
dec
out
mov
movsl
push
push
movsb
shlb
js
int
imul
out
push
insb
stc
mov
add
push
lea
xchg
adc
dec
stos
gs
aam
inc
out
xor
insb
clc
cmp
push
or
and
cmp
iret
fisttpl
inc
push
push
add
cmp
aam
mov
scas
and
lds
xchg
lret
out
pop
fldl
icebp
cs
cmc
aad
or
mov
lea
lret
push
dec
std
outsl
mov
pop
rcll
or
lea
out
ljmp
jns,pt
push
xor
jbe
mov
popf
jg
inc
xchg
push
mov
mov
inc
or
out
cmc
xchg
inc
mov
jbe
xor
xchg
xor
push
dec
cwtl
lods
push
and
into
xchg
cmc
repz
mov
in
loope
jg
add
testb
jbe
sbb
mov
cmc
adc
adcb
repnz
add
sub
lahf
sbb
das
push
sar
sub
xor
loope
mov
movaps
push
mov
mov
inc
fiaddl
adc
mov
scas
mov
push
hlt
mov
mov
push
decl
pop
jle
sub
xorb
shrb
push
adc
movsl
jecxz
fmuls
push
roll
adc
cmp
xor
lock
push
jns
mov
bound
cmc
cmp
test
pop
testl
sbb
imul
in
lret
call
lret
fiaddl
jl
pop
jb
pop
cmpsl
inc
pop
sti
cmp
sbb
add
jecxz
xor
mov
jle
xlat
push
stos
in
mov
jp
pop
sbb
and
in
xchg
and
mov
into
imul
push
dec
pop
sbb
add
mov
sbb
xchg
test
pop
inc
mov
sbb
pop
shl
push
add
and
imul
ljmp
bound
scas
fnsave
test
insb
outsb
lcall
cmp
mov
mov
mov
lahf
test
daa
ror
into
push
fists
test
sub
or
xchg
xorb
xor
xchg
sbb
les
mov
jne
or
dec
repz
jne
sbb
sbb
lahf
cmpsl
test
inc
inc
push
pop
cmp
aad
lods
scas
adc
dec
dec
insb
push
vmread
add
scas
out
inc
cmc
xor
fwait
cmp
mov
loop
inc
daa
mov
loop
lds
jnp
xor
mov
repz
add
sbb
push
loope
andnps
nop
push
sub
ds
dec
jne
xorl
cli
add
sub
test
lret
inc
test
jmp
jg
imul
add
rolb
rcr
sbb
lret
shll
mov
icebp
jns
fiadds
movsb
jb
loope
mov
movsb
lods
adc
lds
adc
push
das
adc
iret
popf
mov
cmp
mov
ja
test
pop
or
lahf
imul
mov
fnstcw
sbb
lds
mov
mov
popf
inc
xchg
xchg
int
es
lcall
imul
out
aas
lods
xchg
push
cmp
mov
ficoms
push
sub
xchg
stos
ss
cmp
je
and
pop
rorl
push
out
cmpsb
add
cmpsl
adc
sub
pop
je
lds
sbb
xchg
inc
loopne
jo
mov
bound
dec
scas
scas
fsubrp
xchg
lock
cli
add
rorb
xchg
test
ret
adc
xchg
aad
clc
xchg
add
test
push
mov
mov
iret
fldl
push
imul
jg
sub
leave
scas
stos
fisubl
sahf
mov
and
sub
sub
jl
lahf
adc
inc
xchg
xor
insl
test
fsubrl
das
pop
add
clc
lds
daa
iret
pop
add
pop
hlt
mov
fs
ret
int3
pop
sub
je
jmp
push
aas
push
jnp
mov
and
loope
loopne
rorb
lahf
push
push
pop
adcb
aas
pop
dec
adc
push
mov
aaa
xor
rcrb
icebp
mov
fistl
inc
mov
imul
in
das
testl
inc
ror
test
add
dec
jns
xor
stos
or
lds
xorb
rcl
mov
fisttps
jl
repnz
pop
ljmp
dec
shl
sti
xor
mov
sub
movsb
dec
pop
or
mov
mov
hlt
lds
mov
jns
stos
hlt
xchg
sti
xchg
xor
mov
mov
flds
test
pop
jge
jnp
int3
ret
das
nop
inc
jo
pop
cmpsl
dec
movsl
push
nop
push
fstps
pop
mov
xchg
sbb
dec
jge
int3
gs
push
push
mov
mov
leave
lods
mov
jno
inc
or
xor
lret
lea
jb
aas
pop
xchg
cmp
push
inc
dec
outsb
das
sub
cs
test
mov
sbb
cmp
int
out
fistpll
cwtl
loop
movsb
inc
jae
cmp
push
stos
and
adc
shll
adc
arpl
push
xchg
jmp
fisubrl
cmp
jge
lcall
xor
xor
mov
adc
cmp
push
mov
xchg
and
inc
enter
add
cwtl
in
shlb
out
loope
aaa
stos
mov
pop
int3
inc
dec
cwtl
xor
jno
shlb
jae
fdivrl
add
adc
xor
or
stc
pop
dec
sbb
dec
cmp
std
push
test
dec
adc
cmp
stc
repz
popa
inc
int3
shlb
cs
lea
lcall
jl
jmp
ds
mov
cmpsl
mov
push
data16
mov
mov
imul
push
ljmp
sbb
shl
test
outsb
jge
sti
jmp
jb
popf
pop
jmp
cmp
les
mov
sub
pop
adc
scas
ret
ret
mov
add
sub
or
inc
mov
gs
push
je
mov
mov
xchg
push
xor
xor
mov
mov
xorl
pusha
aaa
dec
pop
pop
pop
ja
push
or
lret
push
sbb
aaa
push
scas
nop
fadds
loopne
sbb
fisubrs
inc
mov
ja
pushf
add
adc
pusha
xlat
daa
les
pop
xor
cmc
pop
cmc
adcb
stos
leave
sti
and
test
cltd
mov
mov
pop
push
sbb
push
xchg
inc
jmp
lahf
fcoml
cmp
add
dec
sbb
sti
cmpsl
mov
mov
cltd
jnp
rcll
dec
enter
jl
push
lods
sbb
ret
and
mov
or
and
xor
sub
fldl
cmpsb
jge
scas
mov
mov
sub
daa
pop
mov
mov
mov
stos
mov
sbb
cmp
es
int
stos
test
jge
xor
lret
repnz
fmull
mov
jo
out
jle
loopne
push
out
push
and
pop
dec
lods
fs
mov
dec
scas
or
xchg
pop
inc
das
jge
inc
jecxz
mov
subl
fsts
dec
insb
in
push
js
sub
sbb
push
or
adc
je
popf
ret
inc
into
dec
add
add
stos
cmp
mov
cmp
repz
imul
or
mov
stc
jnp
ror
mov
ljmp
add
dec
inc
cli
mov
mov
jne
dec
rcll
scas
bound
std
push
stos
pop
cmp
fsub
dec
xor
push
rcll
leave
ja
subb
mov
pop
add
mov
xchg
inc
mov
adc
push
ja,pn
inc
xor
shlb
mov
aaa
or
inc
adc
scas
xor
in
js
aaa
rolb
or
pop
xchg
xlat
popa
pushf
mov
outsl
aad
and
cld
cwtl
mov
jnp
inc
test
insl
jbe
lahf
cmp
insl
lea
into
pop
scas
repz
xchg
add
subb
mov
popf
cs
test
adc
fwait
jp
cwtl
xor
loopne
vmwrite
int3
imul
out
dec
cld
cmpsl
jns
add
pushf
pop
push
aaa
mov
loop
mov
in
add
subb
gs
lods
xchg
pop
push
in
or
jl
out
test
xorl
inc
adc
loope
popl
scas
pop
push
rorb
cmpsl
das
and
fwait
push
adc
push
mov
mov
pop
imul
pop
dec
fists
js
mov
push
stos
hlt
cwtl
arpl
loop
push
or
sbb
cmpsb
cmpsl
mov
bnd
shll
pop
bound
test
mov
xor
inc
and
bound
adc
jge
xor
dec
sbb
push
inc
mov
push
pop
movsb
xchg
push
xchg
and
out
xor
mov
pop
icebp
dec
mov
shrb
xchg
xchg
mov
imul
lahf
pop
mov
jmp
ret
mov
xlat
fs
adc
pop
lea
int3
cmp
into
xchg
jns
aad
cli
idivb
imul
iret
or
stc
pop
xor
xchg
xchg
jne
sbb
xor
fdivl
loop
sbb
fistpll
mov
int3
dec
jae
pop
xchg
pop
xchg
adc
jbe
into
or
fimull
scas
or
nop
mov
mov
stos
aam
xchg
sbb
ret
roll
dec
sub
dec
test
or
movsb
dec
sub
add
push
fmuls
sub
jge
movsb
cmp
push
loopne
insl
cmpsl
xor
xchg
testb
test
in
dec
xchg
ficoms
mov
repnz
daa
movsb
imul
loope
and
loope
cmp
jo
inc
cmp
les
psrad
add
xor
arpl
xor
xchg
lock
cli
popf
enter
xlat
int
cmp
adc
nop
fdivrl
mov
loop
cmp
scas
jle
call
incb
jno
fldt
popf
mov
push
or
scas
push
mov
sub
enter
cmp
scas
or
add
ja
push
cld
cmpsl
jp
inc
or
jo
das
pop
xor
outsb
imul
sbb
ret
cld
pop
mov
imul
cs
in
sub
add
jecxz
xor
out
dec
imul
push
bound
in
add
push
adc
pop
sbb
pop
inc
mov
push
pop
test
push
pop
js
push
jno
jp
inc
inc
mov
lcall
lods
aas
jmp
mov
sbb
mov
or
scas
sti
or
popf
in
sahf
and
scas
outsl
pop
jae,pn
movsb
xchg
sbb
sbb
push
outsl
clc
into
mov
ficoml
or
test
pushf
xor
stc
xor
sahf
fisttps
scas
lods
add
aam
fiadds
dec
out
test
scas
subl
mov
pusha
repnz
mov
xor
lds
ficompl
mov
xchg
das
lods
ret
inc
ja
jle
sbb
lods
aas
xor
enter
mov
or
cmova
stc
mov
cmp
orl
xchg
aam
push
shl
mov
jmp
jle
std
rcrl
add
int
mov
leave
cmp
aas
andb
sub
popf
mov
aam
pop
les
dec
lock
jns
cmp
push
outsl
lock
and
mov
loopne
out
loope
xor
mov
fsubl
xor
pop
push
in
mov
jmp
cwtl
xchg
push
xor
ljmp
es
movsb
mov
int
ret
push
popa
dec
sbb
adc
in
sub
xorb
hlt
cmpsb
iret
xor
adc
clc
sahf
repnz
mov
fisttps
mov
aas
mov
pop
repz
mov
mov
cmp
stos
jmp
or
add
inc
ficoml
pop
mov
nop
rcrl
sub
cmp
push
push
push
pop
xchg
xor
xchg
xor
dec
jp
dec
arpl
cld
lcall
idivb
inc
mov
pop
mov
mov
in
cmp
or
les
push
repnz
test
in
aam
and
jo
stos
in
or
cltd
movsb
push
fs
pop
cmpsl
ret
bound
pop
in
pop
xor
mov
mov
bound
mov
addr16
lcall
xorl
and
aad
bound
push
shlb
in
jno
jae
cmp
pop
inc
push
adc
lds
mov
push
imul
jne
mov
add
pop
fst
nop
daa
pop
rcll
js
or
mov
sbb
cld
inc
lret
xor
out
mov
in
add
xchg
jns
cmc
mov
ljmp
dec
inc
xchg
sbb
mov
mov
and
xor
cld
mov
mov
in
push
xor
dec
or
sbb
adc
push
loop
stos
xor
and
fcmovnu
or
cmp
loope
push
xor
fwait
mov
xchg
out
stc
mov
xchg
cli
imull
xlat
mov
pop
jbe
mov
cmpl
xor
inc
mov
and
sarb
push
aad
ja
pop
cmpsb
aad
std
loope
negl
inc
push
fldl
insb
inc
es
clc
fs
jno
aad
testb
mov
mov
sbb
shll
inc
cli
adc
popf
mov
sbb
xchg
idivl
cmp
mov
cmp
leave
mov
loop
adc
push
mov
cmp
inc
sub
inc
pop
sbb
es
pop
faddl
mov
subl
jno
stos
fcomps
mov
scas
in
inc
pushf
pop
jle
pop
leave
and
ret
push
and
repz
jecxz
lds
addr16
jae
cmp
jp
push
adc
or
sub
cmp
pop
roll
mov
lret
das
ret
cmp
pop
pop
add
sub
jbe
xor
dec
adc
loope
jg
fistpll
fidivl
in
push
out
jle
mov
adc
dec
iret
and
rcll
push
inc
mov
hlt
xchg
rcrl
fdivr
push
mov
cmp
push
int3
sbb
pop
out
mov
xchg
adc
addr16
cmp
dec
out
inc
test
push
mov
mov
and
incb
inc
jo
jge
sub
pop
push
aaa
mov
dec
andb
outsb
subb
fldcw
xchg
sbb
jecxz
xor
and
test
fwait
add
push
inc
jecxz
mov
mov
movsl
pop
lea
xor
or
pop
inc
mov
movsb
push
add
test
stc
xlat
rorl
jg
jno
inc
push
icebp
jp
repnz
push
rolb
data16
fstpl
pop
sbb
sbb
jae
mov
inc
imul
stos
inc
ss
jns
es
jecxz,pn
and
icebp
jno
inc
stos
insb
leave
sub
lcall
cmp
jl
jne
jne
jmp
inc
pop
jge
add
hlt
rcrb
sub
xor
int
fwait
xchg
or
daa
push
fwait
int
and
aaa
lods
scas
push
inc
pop
pop
add
lds
outsl
js
aaa
lods
dec
push
faddl
push
cmpsb
sti
test
mov
jle
hlt
xchg
jo
mov
adc
out
fisubs
inc
add
dec
inc
mov
adc
inc
icebp
call
int
scas
cmp
or
mov
xor
sbb
xorl
pop
popa
mov
mov
shlb
repz
pop
aaa
cmp
add
jl
sbb
arpl
mov
jno
or
aaa
mov
add
jp
inc
push
lret
xor
shll
adc
mov
mov
mov
jg
scas
xlat
aad
outsb
pop
xchg
rorl
mov
pop
jb
fnstcw
jl
xchg
mov
mov
testb
push
adc
xor
cmpsb
adc
sbb
xor
mov
mov
movsb
mov
mov
shrl
insb
or
cmp
aad
sahf
pop
inc
jae
arpl
jecxz
xor
and
in
add
mov
mov
mov
mov
mov
sbb
test
mov
xchg
pop
mov
pop
es
ret
jae
sub
cld
push
fstl
xor
aam
aaa
shrb
dec
jmp
cmp
cmp
out
aad
addb
lds
mov
aad
int3
sbb
mov
les
xchg
pop
out
imul
dec
push
popf
xor
jb
mov
int3
pop
pop
sarl
jecxz
pop
int
subl
cld
fwait
mov
or
xchg
outsb
in
scas
fs
lahf
push
push
pop
push
mov
xor
repnz
cmp
fst
ret
and
out
jno
stc
outsl
push
imul
inc
or
in
cwtl
int
push
callw
in
mov
mov
pop
dec
insb
test
xchg
mov
xchg
adc
movsl
mov
loopne
in
roll
fldt
dec
ret
add
xor
adc
dec
repnz
adc
mov
pop
xchg
test
inc
int3
mov
daa
or
pop
aaa
adc
stos
xchg
jo
insl
jge
mov
orl
cmp
inc
lds
mov
inc
jnp
mull
mov
mov
push
aam
lahf
lods
repnz
mov
jne
sbb
mov
push
lea
mov
mov
adcl
data16
lods
inc
aam
mov
push
mov
fsubrl
fldenv
inc
nop
sti
adc
movb
mov
loop
inc
dec
mov
loop
mov
adc
cld
sti
scas
lds
inc
pop
sbb
outsl
pop
xchg
scas
fs
mov
mov
mov
mov
or
dec
xchg
add
stos
cmp
aaa
add
jae
xchg
inc
dec
cmp
cltd
popf
sti
aas
sbb
mov
pushf
lea
cmpsb
sbb
lahf
inc
ret
inc
sbb
out
pop
dec
adc
xor
adc
mov
sub
sahf
xlat
mov
mov
aad
push
pop
and
aaa
mov
fisubs
inc
pop
push
sbb
mov
stc
mov
stc
jb
xor
or
rcl
repnz
mov
frstor
push
jg
mov
fucomip
test
push
inc
push
sbbb
xchg
lcall
stos
jp
xor
out
orl
rolb
push
out
mov
inc
push
stos
repnz
hlt
dec
mov
sbb
scas
sub
loopne
sti
mov
sbb
adc
sbb
add
pop
lret
test
movsb
adc
mov
xor
add
into
pop
nop
sbb
mov
loope
xlat
mov
xor
inc
les
push
mov
mov
mov
mov
addr16
insb
or
je
inc
jge
pop
in
fs
sbb
jmp
cwtl
mov
cmpsl
fsubr
sarl
inc
rclb
mov
aam
arpl
add
jb
xchg
aad
dec
xlat
aad
clc
mov
mov
inc
gs
cmp
fwait
mov
fnstsw
xlat
ljmp
clc
stos
rcl
stc
popf
icebp
cmc
aaa
jnp
sbb
shl
imul
insl
sub
jnp
es
jne
lret
fistpl
jecxz
add
lds
fstp
sub
pop
add
jge
or
inc
and
and
sub
testb
xor
test
mov
and
add
lahf
into
dec
add
push
repz
mov
xor
cltd
sar
jnp
rcrb
push
lea
inc
push
std
cmpsb
imul
pushf
mov
lret
fsts
cmp
test
pop
fistps
iret
andb
or
ja
stos
jb
inc
jo
rol
in
cmpsb
test
xchg
mov
outsb
add
and
mov
fidivl
hlt
lea
ret
cmp
adc
push
jne
xchg
push
aad
call
imul
and
dec
and
push
gs
idivl
jg
lahf
push
cltd
pop
or
lds
push
or
enter
das
pop
aas
adc
push
mov
cmpb
xor
fidivrs
jmp
xchg
push
mov
out
dec
jle
mov
movsl
push
imul
push
out
dec
push
out
jl
aam
js
or
ja
push
mov
cmp
mov
xchg
sub
xor
jecxz
js
xor
out
lahf
leave
mov
pop
mov
loopne
mov
pop
imul
mov
pop
jge
cmpl
push
fnsave
mov
mov
add
mov
pop
or
addr16
dec
outsb
das
sysexit
pop
sbb
test
add
add
pop
jno
fisttps
jno
ja
sbb
dec
pop
push
mov
mov
orl
jmp
in
mov
cltd
jb
adc
ss
or
scas
lcall
popf
cmp
lds
pop
dec
jecxz
inc
jl
add
rorb
mov
pop
fwait
push
jle
mov
xchg
fadd
xor
lds
std
mov
sarb
out
ja
sub
notb
call
jnp
cmp
mov
mov
or
ds
mov
cmp
cli
int
icebp
test
or
cmc
dec
pop
filds
push
cmc
push
repz
lcall
mov
dec
sbb
sub
icebp
test
negb
pop
cltd
lds
mov
xchg
gs
out
dec
fxch
arpl
dec
xchg
xchg
std
arpl
cmp
xchg
mull
cmp
inc
push
sub
mov
add
popa
sub
cmp
aad
push
in
adc
fucomp
lcall
xchg
into
stc
lock
mov
push
lret
or
push
mov
mov
repnz
adc
fsubs
cmp
loop
push
les
pop
aam
inc
push
lea
sbb
mov
sahf
into
dec
pop
in
gs
call
push
mov
push
call
cmpl
lret
ret
insl
test
pop
popa
xchg
inc
push
sbb
jecxz
mov
scas
mov
out
sbbb
ja
mov
or
testl
ror
rcr
pop
rcrl
mov
xor
adc
icebp
inc
and
inc
sub
inc
mov
cmp
pop
add
dec
fwait
cmp
mov
xchg
sti
int
call
sbb
jg
jp
lock
mov
addr16
scas
dec
ret
adc
fcom
fimuls
push
icebp
cmp
rcll
jge
mov
rol
and
dec
xor
stos
jnp
sbb
out
mov
xor
sub
cmp
xchg
gs
ds
decl
pop
xchg
pop
or
addl
mov
js
imul
jne
scas
mov
lcall
pop
sub
shll
leave
push
push
ret
push
pop
push
and
outsb
icebp
inc
adc
adc
arpl
dec
les
out
lods
in
shlb
xor
cmp
mov
iret
je
inc
lcall
inc
aam
nop
adc
xor
or
fimull
jb
mov
ret
ret
gs
fcmovu
hlt
cmp
cmc
push
pop
jb
adc
in
xchg
lods
pusha
mov
jbe
std
sub
jl
adc
leave
gs
clc
pop
mov
sub
gs
push
fdivs
and
leave
or
sbb
fdivrl
in
and
rcrl
pop
mov
adc
sar
push
dec
icebp
dec
adc
pop
out
lcall
insb
lea
mov
test
sbb
pusha
insb
cmc
jno
imul
inc
outsb
mov
mov
adc
or
xchg
xor
xchg
or
sub
inc
sub
inc
and
fwait
mov
push
mov
jae
push
in
mov
cmp
adc
jmp
les
movsl
cmpsb
ljmp
and
in
push
jno
cmp
cmpsl
adc
aam
sub
cmp
int
mov
jle
pop
stos
mov
les
les
inc
icebp
ss
pop
call
dec
cmp
ret
xor
in
push
mov
mov
pop
pop
ret
jmp
iret
jle
loope
adc
dec
jbe
jecxz
ljmp
lret
outsl
dec
lods
mov
mov
and
xorl
lret
out
loope
mov
and
out
or
rorb
and
dec
cli
mov
leave
jo
pop
test
popf
mov
divps
add
xchg
mov
xor
xor
imul
mov
or
mov
subl
xchg
inc
mov
fstpt
aad
jb
xor
cmc
push
repnz
shll
ret
inc
test
clc
test
enter
sbb
xor
inc
push
out
ret
inc
mov
lahf
and
sahf
sbb
out
inc
mov
ss
add
push
inc
in
out
add
push
out
add
ljmp
mov
pop
ret
daa
cs
lahf
stos
jl
push
mov
out
mov
xchg
int
pushf
jmp
outsl
or
insl
push
mov
icebp
lods
cmp
out
les
push
mov
stos
shlb
rolb
lahf
cmpl
pop
aad
jl
icebp
fildl
mov
push
cld
lret
xbegin
mov
dec
and
pop
mov
imul
dec
inc
sbb
pop
add
push
cmp
push
arpl
xchg
dec
adc
jne
out
xchg
jne
mov
sbb
jae
adc
into
or
mov
adc
sbb
jecxz
fisubrl
push
inc
fs
xor
adc
jb
pop
aam
arpl
call
xor
lret
rclb
jns
or
iret
mov
jmp
mov
sub
mov
gs
enter
test
adc
push
call
mov
addl
ret
mov
or
pop
mov
movsb
sub
fdivrl
je
mov
or
mov
sub
pop
jg
out
ret
and
pop
and
stos
and
hlt
jne
pop
inc
addr16
lods
in
in
in
mov
mov
pop
lock
out
pop
xchg
sbbl
inc
cwtl
and
out
arpl
jb
pop
xor
loopne
sub
fmull
mov
lds
add
or
mov
pop
hlt
lea
jle
mov
jne
xchg
jecxz
into
and
cmp
cmp
sub
mov
sbb
push
je
sub
pop
lock
aas
cmp
lret
push
jno
lret
and
cmp
insb
jne
shlb
idivb
mov
out
ret
jno
outsb
pop
hlt
xor
movb
leave
out
inc
xor
push
mov
jp
ljmp
pop
std
dec
fstl
stc
arpl
and
sub
or
mov
mov
jge
xor
stos
dec
push
add
fsubrs
and
notb
push
pop
sub
arpl
mov
inc
fisubrs
ret
or
cmpsb
js
add
pop
xchg
pop
aaa
ds
andb
cmc
dec
sub
daa
and
xor
dec
mov
idivb
hlt
adc
ljmp
xchg
imul
jg
out
cmpsb
jnp
xchg
dec
inc
andb
pop
lds
push
mov
sahf
lds
xchg
xchg
add
mov
loopne
hlt
dec
dec
or
cmc
xor
sub
dec
xor
mov
in
mov
outsb
xlat
push
fiaddl
sub
sub
mov
adc
test
mov
sub
mov
js
inc
push
xchg
or
xor
in
nop
jg
loope
stos
push
jecxz
shl
les
sbb
cmp
dec
fs
sub
push
jecxz
inc
push
push
xchg
fsubrl
jo
mov
push
cmp
nop
es
cmp
arpl
inc
rol
sahf
cld
push
pop
sbb
negb
aad
jnp
inc
cmp
icebp
movsl
fcoml
int
aad
xchg
scas
sti
sub
movsl
push
sbbb
shll
dec
bound
cmpl
sbb
fwait
mov
aam
lds
add
divl
jo
jo
cltd
negl
insb
cmp
pop
mov
inc
xchg
incb
lret
pop
and
pusha
sbb
pop
and
inc
sbb
leave
mov
neg
rcl
icebp
jnp
sub
inc
inc
dec
and
mov
mov
inc
mov
inc
mov
push
clc
clc
xor
mov
fucomi
adc
ret
jns
fdivl
mov
jge
adc
clc
icebp
sbb
xchg
mov
sbb
add
cmc
mov
pushf
ficoml
and
inc
xchg
jb
rcr
sub
shr
cmp
fsubl
arpl
pusha
arpl
jne
sbb
popf
xchg
mov
dec
xchg
xchg
adc
ret
mov
movsb
pop
popa
adc
faddp
fs
dec
dec
xchg
fisttpll
xchg
ljmp
test
loope
pushf
mov
aaa
adc
or
out
loope
imul
mov
rorl
sub
loopne
fldenv
mov
addr16
mov
test
push
push
adc
out
pop
nop
adc
jle
cltd
out
add
sub
cmp
mov
cmp
sub
inc
mov
loope
fwait
cli
add
pop
inc
lret
sub
and
mov
lahf
lret
in
xor
rclb
xchg
hlt
mov
push
lret
dec
movsl
dec
enter
notl
out
jb
into
jp
test
cmp
push
lret
shrb
inc
jo
shrl
sub
pop
loope
jecxz
pop
cmp
adc
ror
jle
pop
pop
add
ss
out
jge
cs
leave
rorb
mov
int
jecxz
jo
pop
addr16
lods
fistpll
inc
xchg
repnz
push
add
or
sbb
sbb
inc
in
pop
fnstenv
or
add
in
in
adc
fldenv
inc
scas
pop
movsl
fsubrl
scas
jecxz
mov
testl
xor
cmp
mov
add
int
sbb
jecxz
dec
cmpsl
xor
es
sbb
push
lods
repz
cmp
enter
jbe
or
and
test
mov
sub
push
sbb
dec
ficomps
push
test
dec
pop
rcll
push
in
js
cmp
jge
add
push
and
js
or
add
aas
imul
or
jo
cmp
movsb
ret
das
and
mov
xchg
inc
push
jp
popa
ret
push
and
pop
call
loopne
inc
mov
dec
push
test
in
test
lds
sahf
data16
fwait
dec
out
xchg
outsb
mov
add
in
hlt
mov
xchg
dec
arpl
or
dec
sti
dec
mov
test
inc
imul
jb
inc
roll
movsb
mov
fwait
xchg
jbe
or
xlat
mov
int3
dec
stos
iret
sbb
xor
xchg
lea
fbld
or
inc
sub
mov
xchg
test
cli
xor
jle
xor
cmpl
and
dec
sbb
outsb
imul
rcrl
lahf
in
movb
pop
stos
aad
outsb
push
inc
jno
mov
sbb
mov
addb
push
out
xchg
mov
test
scas
pushf
test
aas
pop
adc
add
movsb
push
mov
subb
imul
je
pop
mov
xchg
lret
cmp
call
mov
mov
das
cmp
arpl
das
outsl
mov
scas
add
subl
dec
repnz
xchg
outsb
xchg
mov
inc
std
ljmp
les
cld
je
lds
aas
mov
xchg
push
loop
sbb
sbb
das
dec
and
cltd
fldl
mov
xor
cs
jbe
pop
icebp
cmp
cs
insl
decl
dec
dec
cmp
xor
leave
bound
aaa
dec
shl
addr16
inc
cld
xor
cltd
out
ds
jae
dec
ljmp
push
aaa
xchg
bound
outsl
ret
addr16
ror
fiaddl
adc
scas
cltd
sbb
std
rcr
popa
and
dec
or
jb
mov
clc
adc
out
dec
dec
mov
inc
loope
or
cli
cmp
cmp
mov
icebp
jecxz
cmp
ljmp
cmp
mov
mov
jp
lahf
dec
or
sbb
insb
xorl
shll
call
daa
jnp
ficomps
bnd
sbb
mov
jo
mov
mov
adc
xchg
adc
adc
adc
roll
imull
fwait
rclb
test
pop
in
je
int3
adc
cmc
lcall
mov
adc
xor
push
xor
sbbl
sbb
sbb
test
xor
adc
push
js
shll
dec
lea
fidivrl
sub
push
ret
cld
adc
pop
jle
repnz
sbb
cld
outsb
dec
enter
cmp
mov
lock
xor
and
jno
scas
sub
jb
loopne
dec
push
push
test
dec
pushf
outsl
mov
dec
xor
dec
subb
or
push
cmc
add
out
test
jbe
sbb
in
pop
jnp
xor
icebp
inc
adc
xchg
lahf
adc
pop
or
lods
jae
xor
lcall
cmpsl
aad
repnz
outsl
lahf
push
popf
popf
cmp
xchg
out
cld
jmp
arpl
mov
mov
je
shlb
xor
cmp
add
repnz
xchg
sub
add
mov
pop
popl
shll
xor
addr16
add
cs
jg
cmp
ljmp
and
mov
jno
js
gs
fucomip
xlat
jl
cltd
cmpsl
xchg
stos
out
push
scas
mov
icebp
cli
and
or
rorb
stc
mov
cmp
call
pop
mov
out
xchg
movsb
lcall
lretw
mov
mov
cltd
and
sub
sar
lahf
pop
inc
test
sbb
jno
xor
bound
pop
push
xor
dec
fdivrl
mov
ss
cmpsl
sub
sbb
mov
fistpl
loopne
mov
mov
mov
incb
jg
cmp
fstps
xchg
cmp
mov
xor
in
mov
sarb
sbb
fcmovnu
repnz
daa
sbbb
aaa
pop
pop
lock
xor
push
out
xchg
cmpsb
ret
pop
xor
data16
push
cmc
mov
pop
or
pop
and
adc
std
popa
mov
xchg
sub
xchg
in
int3
mov
or
mov
push
mov
leave
push
pop
cmp
xchg
push
mov
test
in
xlat
js
js
stc
push
jo
sahf
cmp
sbb
jmp
aas
dec
jecxz
das
mov
lcall
pop
push
notl
addr16
xorb
shl
xchg
mov
pop
bound
popf
or
shr
adc
cmc
mov
xchg
stos
pushl
aas
setae
lods
fiaddl
inc
into
jne
jno
in
push
or
or
shlb
insb
out
scas
mov
ljmp
rcl
popa
test
sub
lds
xlat
jl
repnz
lcallw
stos
icebp
lods
ss
mov
inc
sub
dec
dec
pop
shlb
out
test
stos
lea
cli
xchg
xor
and
test
and
pop
mov
dec
xorb
fdivrs
mov
mov
and
std
test
popa
xchg
or
movsl
pop
dec
pop
mov
dec
adc
xchg
or
or
outsl
jnp
adc
xchg
mov
push
test
add
xorl
insl
es
push
xchg
mov
sbb
xchg
pop
or
push
aaa
sbb
mov
lock
push
mov
sbb
inc
insl
out
push
shll
fisubs
fwait
mov
push
inc
mov
cmp
xlat
jp
dec
lock
je
mov
pop
mov
negb
cwtl
push
stc
push
leave
lret
dec
cmp
cmp
cmc
lret
cwtl
int
dec
mov
dec
jb
jb
xor
js
jg
mov
and
mov
jp
xchg
f2xm1
xchg
mov
mov
rclb
mov
fldcw
lds
xor
jae
push
mov
or
and
repnz
push
or
adc
mov
dec
mov
loope
pand
andl
mov
xchg
outsb
dec
mov
ret
shl
mov
scas
pop
std
popa
xor
mov
lock
xor
out
cwtl
nop
mov
int
shrl
out
shrb
cld
jb
lock
mov
mov
in
pop
aam
lahf
jae
cmp
mov
iret
lret
call
iret
imul
push
shrl
adc
cmpsb
add
scas
scas
sbb
fsub
or
adc
sbb
mov
into
sub
mov
and
push
adc
ja
xchg
lods
pop
xor
mov
cmp
sbb
xchg
push
fbstp
mov
add
pop
stos
sub
arpl
adc
mov
cmp
cmp
sub
lods
sbb
aaa
add
arpl
lret
subb
jne
je
iret
imul
enter
call
pop
inc
je
sbb
dec
faddl
sbbb
repnz
pop
adc
inc
out
int
push
ss
dec
jecxz
inc
inc
jbe
dec
pop
int
int3
je
icebp
cltd
cmpb
mov
in
jmp
mov
movsl
jne
movb
mov
cltd
mov
xchg
shrb
das
adc
inc
and
dec
add
add
dec
int3
push
adc
and
add
sbb
pushf
cmpsb
pop
aam
jns
mov
jecxz
into
xchg
jl
and
inc
and
div
cmc
or
add
xor
jg
lods
rorb
sbb
test
sub
test
stc
cwtl
jns
test
aad
in
and
jnp
inc
jne
cmp
add
mov
mov
inc
inc
cltd
jne
and
pop
dec
xchg
rcrb
adc
inc
xor
les
add
push
sub
leave
cmp
test
hlt
push
outsl
or
lods
mov
lds
iret
xchg
jmp
das
sahf
cmp
lds
popf
int3
add
test
dec
aaa
lret
imul
add
xchg
dec
les
mov
lahf
pop
scas
mov
or
inc
inc
int
push
daa
jge
in
mov
lcall
add
xor
test
jbe
sub
bound
in
lds
addr16
int
sbb
cltd
clc
or
and
adc
and
daa
out
outsl
mov
mov
sbbl
push
out
daa
mov
mov
sbb
cmp
out
inc
sub
adc
stc
gs
push
xchg
mov
xchg
rol
ds
test
inc
cmc
int
inc
daa
push
push
jg
insb
adc
xor
lret
int3
aad
shl
pop
sub
or
xchg
xor
jle
dec
scas
aam
dec
in
fdivrs
decl
mov
push
xor
dec
sub
popa
lods
sub
mov
addr16
jne
outsl
cmp
ss
or
cmpsl
adc
ss
add
cmpsb
sub
xor
rcl
in
pop
addr16
push
imul
or
pop
push
out
xchg
loope
ficompl
add
sarl
mov
sub
in
push
push
pop
lcall
mov
push
xchg
adc
or
addr16
cmc
hlt
cld
ds
pop
negl
push
and
das
jae
lahf
push
dec
mov
sbb
movsl
popf
cmc
sub
add
mov
je
ljmp
xor
cld
ret
pop
mov
mov
mov
cld
jle
rcll
repz
or
and
testb
pop
shll
enter
in
xor
xlat
xor
lret
shll
notb
rcl
sti
inc
and
fmul
or
and
jge
mov
adcb
addr16
jo
mov
add
pop
int
add
out
fcoml
lcall
or
sarb
in
aas
xchg
xchg
push
imul
test
icebp
or
fs
pop
movsl
or
cmpsl
filds
fdivs
in
mov
lds
lock
or
adc
out
sub
xor
popf
sub
dec
sub
xor
and
dec
pop
sbb
dec
out
dec
jge
imul
out
movsb
inc
add
testb
faddl
cmpsb
stos
cwtl
std
leave
dec
push
mov
rolb
aas
jns
mov
pop
cmp
sub
scas
mov
test
cltd
cld
push
adc
fldl
mov
sbb
sub
inc
fnstcw
std
and
add
mov
pop
sub
mov
push
mov
jp
pop
mov
pusha
mov
push
inc
sbb
xchg
mov
push
pop
jo
jns
popa
mov
leave
sub
dec
int
dec
test
fisubl
mov
push
mov
cmp
add
aad
arpl
sbb
in
xchg
pop
aad
mov
sub
pop
dec
dec
aaa
testl
in
cmp
bound
xchg
xchg
adc
movsb
mov
pop
jl
shlb
sub
icebp
inc
xchg
clc
mov
int
repnz
jo
jo
inc
and
aaa
dec
xor
xchg
lock
loope
push
cli
sub
and
hlt
sub
cs
xchg
outsl
sbb
cmpsb
test
call
scas
pop
cld
fmul
imul
lock
cmpsb
mov
ret
popa
inc
rcr
and
pop
xor
pop
xchg
pop
add
push
pop
push
ret
fnsave
icebp
xchg
leave
jmp
mov
adc
test
out
adc
jno
jnp
xchg
je
stc
imul
lret
popf
aam
sub
sub
mov
mov
mov
adc
and
das
pushf
mov
xchg
dec
add
push
outsb
push
psubw
addl
and
mov
test
scas
sbb
fistpll
insl
arpl
daa
cs
rcl
pop
call
xor
and
imul
mov
fistpl
cmp
xchg
int
sub
loope
inc
or
xor
repz
fabs
jmp
test
fists
into
sarl
jns
stos
sbb
push
fwait
mov
cltd
pop
fisubl
cltd
mov
sbb
mov
jbe
xchg
dec
or
push
push
daa
jb
dec
cli
pop
cld
and
cltd
fwait
mov
jne
sub
outsl
punpckhbw
lahf
sete
imul
test
ljmp
and
hlt
cs
pop
repz
mov
and
sub
sbb
or
imul
call
scas
es
scas
xchg
pop
int
dec
mov
inc
cwtl
mov
mov
test
sbb
inc
mov
clc
movsb
cmp
lret
out
mov
xchg
sub
sub
inc
ljmp
insl
fwait
scas
fstps
jne
outsb
mov
rorl
xor
mull
loopne
ror
int3
int
cmp
mov
mov
fdivp
imul
test
and
dec
lret
enter
mov
pop
in
test
int3
push
shr
int
and
das
dec
dec
or
mov
out
in
mov
mov
int
mov
push
cmpsl
in
shrl
fisubrl
mov
cmp
push
sub
daa
stos
es
and
lret
mov
push
cld
mov
jae
sahf
mov
and
xchg
mov
inc
dec
imul
cmp
lods
push
xchg
test
ss
add
mov
nop
cmp
cmpsb
mov
jnp
xor
adc
std
jnp
stos
jo
xlat
ja
cmp
sbb
cmp
push
ja
nop
jle
cmp
xor
sub
cwtl
imul
xchg
jl
icebp
cmp
pushf
mov
outsl
aam
jb
xchg
add
mov
jae
iret
rorb
les
setno
ljmp
mov
pop
sub
push
mov
lods
sbbl
and
cmp
stos
xchg
fnstsw
jne
icebp
lods
xchg
movsb
jb
add
push
jbe
dec
push
push
or
sbb
aam
in
int
lods
test
pop
mov
and
sti
and
mov
inc
push
dec
mov
pop
cmp
push
lret
cli
mov
loopne
push
xchg
push
cmpsl
mov
jns
mov
xchg
xor
ss
jns
in
mov
fidivrs
sub
adc
das
andl
add
mov
insl
addb
mov
in
mov
sub
fwait
push
stos
jne
jnp
bound
inc
dec
mov
jno
jnp
cmp
shll
jbe
push
pop
xchg
cmpsl
shll
adc
jge
pop
aas
xor
je
les
shrb
fnstcw
pop
jmp
jnp
adc
insb
std
dec
xlat
cli
je
push
dec
rclb
xchg
push
data16
les
xor
outsl
inc
jno
cwtl
dec
outsl
out
hlt
xchg
out
aad
imul
add
lods
popa
mov
call
je
aaa
rorb
imul
fldt
mov
sub
shlb
mov
xor
xor
push
mov
adc
outsl
dec
add
push
xchg
jns
cmp
cli
push
filds
jmp
fldenv
mov
clc
sub
mov
imul
dec
add
jg
sti
test
cli
sub
mov
lock
xor
sarb
push
xor
rol
dec
cmpsb
or
and
in
push
rcll
cmpl
xchg
xchg
je
sarb
or
test
and
pop
push
std
fwait
insl
pop
arpl
xlat
repnz
push
and
sub
sub
fwait
andl
js
aam
pop
mov
fldt
xor
jl
push
mov
push
mov
fs
mov
xor
rcl
divb
sbb
outsb
mov
inc
test
lods
push
pusha
add
ret
dec
imul
lcall
inc
mov
subl
pop
daa
lcall
gs
push
mov
shlb
xlat
imul
push
ret
movsb
mov
fisttps
pusha
ss
push
mov
dec
push
xor
or
mov
push
in
test
adcb
mov
icebp
cmp
xchg
lds
test
popa
lcall
or
stc
fldln2
insl
scas
mov
aad
dec
out
aad
adc
notl
sub
lret
push
rclb
loopne
pusha
sbb
repnz
add
dec
xor
jns
lret
ficomps
or
push
dec
iret
fsubl
push
pop
jns
mov
ss
ret
jmp
cmp
pop
lcall
in
arpl
rcrb
scas
jge
or
push
mov
loopne
cltd
xchg
jl
stos
xor
push
lds
push
mov
mov
sub
sub
dec
lret
stos
xchg
aad
xor
push
ret
pop
mov
sbb
lret
leave
int
pop
test
jbe
sub
sub
push
in
int3
sahf
imul
mov
adc
mov
mov
divb
out
push
xchg
push
inc
es
lds
push
push
mov
flds
jecxz
adc
add
enter
mov
fnstcw
sahf
in
sub
test
mov
add
popa
cmp
mov
sarl
imul
call
jle
inc
push
mov
jbe
push
push
xchg
sub
mov
dec
bound
outsl
xchg
aas
in
push
jp
push
lret
nop
negl
hlt
push
out
mov
rclb
fcomps
shrl
adc
mov
fs
imul
inc
xor
loopne
dec
mov
hlt
outsb
stos
push
mov
std
out
push
js
add
fstl
add
ds
and
loopne
dec
mov
dec
lock
xor
into
sbb
sub
sahf
mov
mov
adc
and
push
pushf
push
inc
aad
rcrl
adc
xchg
fmulp
mov
aaa
push
xchg
jmp
pop
mov
adcl
sbb
aad
and
mov
lret
pop
ficomps
ljmp
xorb
push
mov
xchg
xchg
jnp
xchg
cmp
cmc
in
cmp
repnz
stc
es
dec
lret
repz
jbe
or
add
mov
mov
out
pushf
js
jb
lods
scas
mov
lcall
xchg
lret
adc
and
int3
es
dec
and
xchg
push
cli
cld
pop
inc
cltd
int
cmp
into
sbb
fwait
subb
xor
imul
adc
test
and
shlb
cmp
mov
sbb
mov
dec
sti
xchg
push
dec
jl
outsl
aad
xchg
sbb
jl
jbe
mov
arpl
fmuls
cmc
mov
enter
dec
or
lods
fidivs
jmp
dec
mov
mov
dec
cmp
movsl
adc
aaa
sub
mov
lret
dec
pop
popa
dec
sbb
inc
cmc
call
daa
pop
fnstsw
dec
lea
pop
xorb
jmp
sub
adc
rcll
adc
test
jmp
and
icebp
add
pushf
push
adc
rcr
push
movsb
iret
movsb
mov
sbb
and
shrl
mov
outsb
cld
xor
add
cmpsb
cmp
ljmp
adc
inc
insl
imul
mov
fucom
mov
sub
mov
and
mov
js
scas
in
insb
cmp
fisubrl
movsb
test
scas
jne
xchg
add
inc
test
or
pop
fimuls
ficomps
xor
decb
int3
cmp
mov
add
imul
adcb
sub
mull
inc
mov
neg
repnz
mov
or
outsb
jnp
push
sub
cmp
jmp
pop
xchg
test
xchg
les
sbb
pop
inc
or
into
outsl
mov
inc
insb
adc
sbbl
ss
addb
xchg
bound
and
cltd
adc
adc
mov
pop
xchg
mov
lret
sbb
mov
test
add
xorb
push
sub
xchg
rclb
int
jle
iret
sbb
mov
pop
in
pop
pop
sbb
cmp
mov
push
jbe
xchg
mov
test
les
ret
loopne
adc
mov
push
imul
rcrl
and
lods
andb
ret
or
jl
dec
mov
xor
lods
mov
mov
bound
sub
or
ljmp
out
cmp
pop
dec
inc
fsubrp
fadds
lods
pop
adc
sub
es
mov
insl
repnz
shrb
mov
fsubr
lret
ret
or
cmp
and
add
inc
js
lret
test
mov
dec
into
push
clc
sbb
pop
jo
add
push
jg
or
stc
das
mov
jg
jle
negb
ret
dec
xor
clc
adc
and
pop
xor
lods
js
iret
in
sub
jg
sub
aam
jo
ror
push
aas
xchg
cmpb
je
ret
imul
pop
adc
mov
add
in
mov
sub
lods
loop
jbe
into
nop
in
out
xchg
aad
jbe
lahf
shl
aam
adc
inc
mov
mov
cmp
insl
cs
popf
push
sub
mov
rclb
inc
insl
lock
fstpl
push
push
loopne
iret
mov
call
loope
sbb
mov
ret
into
jbe
sub
dec
add
mov
mov
xor
jl
sti
dec
sbb
mov
jo
mov
sub
lret
sbb
xor
jo
pop
into
jne
sub
cs
pop
outsl
insl
mov
ret
jnp
aad
sbb
adc
hlt
pop
sub
lds
mov
and
jnp
stos
xor
pop
jno
les
imull
int3
add
cmp
ret
add
test
mov
push
roll
mov
mov
dec
sbb
enter
insl
sahf
push
icebp
pop
test
xor
xchg
mov
lahf
rcll
cs
and
cmc
shrl
pop
fimull
aas
je
insl
xlat
sbb
cmpsb
das
mov
fsubl
out
mov
call
xchg
ret
pop
push
cli
lret
cmp
push
outsb
jmp
dec
jecxz
mov
je
andl
jno
cmp
or
lods
push
pop
shll
jnp
push
lcall
cmp
mov
adc
mov
inc
insb
push
shll
dec
inc
pop
data16
xor
aam
stos
movsl
insb
and
movntq
bound
loopne
push
sahf
clc
mov
push
out
jne
ja
outsb
jp
faddl
scas
loopne
pop
cmp
push
sbb
out
xchg
int3
in
pop
pop
mov
addl
loope
mov
neg
inc
xlat
mov
frstor
push
loop
dec
aaa
jle
cmpsb
fs
mov
mov
adc
pop
bound
les
das
testb
fsubrs
or
shr
inc
and
negb
pop
pusha
aad
push
xor
push
hlt
test
fdiv
and
and
dec
int
stos
ss
dec
aas
test
adc
sbbl
xchg
jae
push
ret
lea
gs
repnz
or
in
push
xor
xor
jp
lcall
pushf
cmpsb
adc
pop
fdivrl
sub
add
fcmovu
pusha
jno
add
cltd
jmp
push
mov
xchg
fadd
rorb
jge
mov
test
mov
add
push
push
mov
or
out
jle
xchg
clc
mov
or
mov
xchg
push
mov
mov
fwait
mov
sti
pop
stos
and
pop
popa
xchg
mov
fdivr
dec
add
mov
ss
cmovno
shlb
xchg
sub
inc
cli
push
mov
std
test
mov
xor
push
mov
mov
jg
out
jnp
pop
into
mov
adc
icebp
aad
dec
sbb
dec
mov
dec
es
popf
fidivs
mov
imul
iret
mov
xchg
or
push
xchg
mov
pop
add
push
push
inc
sbb
push
xchg
test
cs
jecxz
push
iret
lahf
shrb
cmp
mov
ljmp
pop
xor
lods
out
pop
mov
mov
negl
iret
mov
cmp
imul
mov
mov
lds
pop
ret
pop
push
in
inc
inc
pop
clc
inc
scas
xchg
inc
jne
dec
scas
mov
mov
je
cmpl
adc
push
leave
inc
mov
lea
fidivrs
test
in
pop
xchg
call
scas
notl
ljmp
leave
shl
xor
mov
dec
cmp
pop
data16
data16
test
ret
lea
mov
stos
sbb
popa
inc
cmpsb
xchg
inc
je
arpl
mov
pop
iret
push
out
mov
jns
ss
fstp
and
jae
movsl
ja
in
lods
in
inc
icebp
xchg
fmul
mov
test
cli
lcall
or
daa
aam
sbb
add
cmc
adc
dec
call
in
ret
mov
cmpsb
or
daa
mov
cmp
pop
ss
int
jle
pop
leave
bswap
addr16
jge
and
nop
pop
lret
out
shll
js
cmpl
add
xor
cmp
cwtl
js
repz
sub
lods
cmp
cmp
ds
mov
jo
mov
insb
lock
out
repnz
push
adc
push
jl
mov
inc
lret
push
sbb
push
pop
js
loope
sub
adc
in
mov
and
test
lcall
dec
int3
push
es
xchg
inc
mov
test
loopne
or
push
jno
mov
orl
pop
add
inc
loopne
mov
and
mov
jne
lods
and
pop
mov
pop
mov
jge
mov
addr16
ja
in
pop
lock
push
jge
lds
les
adc
imul
outsb
aad
push
sti
add
xor
hlt
adc
sbb
fiaddl
xor
and
rorl
xchg
xor
mov
outsl
dec
mov
push
and
cmpsl
jge
sbb
lds
inc
int
push
xlat
test
cmp
sbb
sbb
lahf
jne
pop
das
repnz
popa
pop
mov
call
rclb
in
xchg
jae
dec
dec
andl
jnp
mov
mov
lods
rolb
mov
jmp
adc
xlat
xchg
and
repz
scas
adc
gs
jmp
adc
leave
fadds
inc
jb
inc
or
or
dec
lcall
subl
jns
xchg
dec
pusha
inc
push
rcl
lock
pusha
in
daa
imul
xchg
and
xchg
lods
ror
sub
add
push
or
sbb
mov
test
rcrb
dec
mov
int
pop
rcr
pusha
clc
cmpsb
lcall
movsl
pop
mov
nop
push
hlt
push
push
mov
fs
ljmp
decw
mov
ljmp
andb
push
mov
jge
dec
stos
jae
orl
jl
dec
das
inc
adc
fs
push
add
pop
sub
lods
test
pop
jg
pop
jle
jmp
xor
movsb
ret
or
test
xchg
sbb
and
fstl
inc
fldcw
cmc
sbbb
push
add
iret
fwait
repz
mov
inc
push
add
insb
adc
mov
std
xor
imul
and
mov
repnz
lret
xor
mov
cmpsl
xchg
pusha
mov
pop
mov
jno
cmpsb
or
jbe
clc
push
imul
repz
jo
mov
in
int3
test
push
movsb
shrb
jge
into
push
sbb
les
loope
pop
adc
daa
gs
mov
ret
mov
in
dec
push
pop
test
sbbb
mov
adcl
pop
dec
push
sub
xchg
leave
or
shl
mov
or
push
aam
inc
arpl
scas
lahf
cltd
inc
push
cmp
lret
pop
test
pushf
jo
icebp
sbb
out
mov
push
aam
mov
addb
test
mov
xchg
popa
or
imul
imulb
js
add
jns
flds
mov
imul
jecxz
mov
pop
loope
lds
clc
mov
mov
insl
mov
mov
mov
sti
ds
add
mov
lret
lcall
mov
imul
lods
adc
add
lods
hlt
mov
add
or
or
sbb
xchg
sub
jl
sub
roll
das
out
fsubr
or
mov
xor
sbb
jge
mov
xor
push
and
pop
push
mov
fs
notb
inc
jne
mov
and
stc
mov
jne
push
add
dec
mov
shll
lcall
cli
cmp
jbe
stos
mov
push
loop
cld
daa
pop
pop
and
stos
test
pop
xor
movsl
shrl
std
je
pop
jmp
sbb
into
pop
test
cmpsb
in
cwtl
out
or
xchg
loope
xchg
push
cli
and
or
add
push
andl
push
cmpsb
jg
or
pop
outsl
outsl
xor
lds
mov
cwtl
ja
xor
gs
cmp
stc
xchg
divb
ficoml
and
in
mov
jns
in
call
jp
add
push
into
cmp
in
gs
xor
aas
xor
cmp
xchg
xor
out
cmp
pop
movsb
bound
push
dec
adc
sub
movsb
cmp
xchg
subb
stc
mov
daa
sbb
lret
sbb
push
mov
xchg
xchg
inc
jecxz
cwtl
sbb
push
insl
nop
pop
dec
dec
les
stos
iret
lods
jl
and
shl
out
movsl
lcall
sub
mov
roll
lods
push
jae
push
pop
je
mov
jb
adc
dec
sti
and
and
and
fsubl
dec
push
loopne
aam
or
fsubrs
sub
lods
cmp
xor
notl
cmpsl
aas
shlb
shll
inc
adc
aad
jmp
push
out
push
push
rcl
imul
push
test
xor
pop
das
jnp
lds
lret
leave
mov
loop
fmuls
call
ja
lret
or
push
add
inc
ja
sahf
inc
or
sub
pop
outsb
push
xchg
lods
xchg
loope
loop
jne
mov
mov
shll
ja
cwtl
xorl
adc
dec
cmp
insl
and
add
xchg
xor
jl
inc
aas
out
xchg
jmp
cmp
sbb
xor
ljmp
into
adc
clc
mov
mov
add
movsb
movsb
add
jecxz
int3
in
xor
ds
cmc
fiaddl
adcb
jg
sub
ljmp
out
xor
jl
adc
jmp
xchg
dec
in
pop
subl
xor
test
inc
imul
fiadds
jmp
fisubs
test
push
pop
jg
pop
sub
lods
adc
sahf
shlb
jno
jb
xor
cld
pusha
fdivl
dec
cmp
imul
insb
into
popf
jecxz
cli
and
je
test
inc
leave
jno
dec
push
stos
inc
jge
mov
int
push
or
pop
pop
push
outsl
movsl
ss
mov
xchg
imul
jp
dec
imul
add
test
icebp
dec
and
add
mov
daa
or
xchg
out
mov
dec
mov
pop
push
mov
adc
icebp
sbb
negb
adc
pusha
push
sbb
loopne
inc
mov
lcall
or
lret
mov
cwtl
cld
jo
sar
sub
fnstcw
std
mov
shlb
mov
call
or
rolb
hlt
sbb
mov
div
aas
test
sbb
fnstsw
adc
dec
add
rclb
mov
mov
outsl
sub
mov
enter
sti
dec
dec
mov
pop
andl
push
test
sub
cmc
hlt
std
out
aaa
jae
lret
les
jo
push
testl
pop
sub
enter
sub
adc
fs
mov
sahf
xchg
jl
dec
call
bound
stos
jp
push
xorl
fisubrs
js
inc
push
pop
stc
xchg
sbb
ret
mov
push
les
xchg
adc
fstp
jle
mov
mov
jbe
cmp
cmp
inc
cmpsl
enter
inc
jp
sbb
mov
mov
out
push
stc
repz
mov
movlps
insb
sbb
sbbl
xor
stc
mov
pminsw
out
push
mov
cltd
sbb
lock
dec
mov
push
lret
jmp
add
ja
cld
inc
push
hlt
ds
xor
loop
incl
rdmsr
jb
sub
push
shrl
fistl
xor
negl
pop
test
push
cmpsb
dec
sub
jmp
inc
in
inc
lret
rcrb
mov
jo
jmp
sahf
stos
inc
cltd
cmp
lock
push
inc
cmpsl
mov
inc
push
subb
ljmp
dec
test
filds
push
arpl
pop
outsb
pop
dec
mov
xchg
add
xchg
mov
sub
lahf
mov
into
xor
mov
sbb
jg
sti
iret
lds
mov
daa
sbb
incb
mov
icebp
sub
aam
fiaddl
mov
pop
inc
add
adc
or
mov
cs
inc
pushf
sub
lock
xchg
mov
jbe
inc
outsb
adc
xor
fucom
dec
push
mov
ffreep
outsl
and
jae
push
push
arpl
pop
and
pop
xchg
jmp
cmp
jbe
mov
in
ret
or
dec
lock
test
mov
push
out
mov
popf
adc
in
lock
rcrb
push
ficoms
or
jbe
sti
bound
cwtl
mov
and
repnz
imul
push
fadds
and
lret
js
mov
out
je
imul
data16
sarb
push
pop
fnstcw
sbb
clc
bound
fucomip
arpl
or
jp
shr
repnz
enter
int3
adcb
jbe
addr16
int
clc
loopne
cmpsl
dec
xchg
pop
dec
pop
xchg
lds
jg
shll
adc
push
xchg
adc
mov
jne
popf
dec
and
push
and
out
jmp
addr16
inc
jp
aad
mov
cwtl
cmpsl
arpl
fwait
into
dec
std
lock
adc
dec
sarb
xchg
sbb
movsb
fcomps
push
and
push
or
cmc
fwait
add
flds
mov
ss
aam
clc
lods
push
mov
mov
es
jne,pt
cmp
mov
mov
enter
or
stos
arpl
add
inc
mov
repz
push
cwtl
stos
pop
insb
push
rcrb
lds
mov
into
out
rcrl
push
imul
shl
stos
call
test
iret
lret
ret
shlb
lret
ds
imul
lds
adc
cmpsl
stc
scas
add
iret
sub
pop
les
pusha
aad
mov
xlat
mov
push
mov
daa
xchg
dec
dec
mov
shrb
xchg
cmp
cmp
xchg
ja
sbb
scas
pop
pop
ret
imul
ja
cmp
pop
mov
mov
fdivp
xor
push
push
mov
nop
lods
inc
mov
lret
inc
ror
cmpsl
les
out
mov
and
and
jle
or
cltd
mov
mov
cmpsl
shll
fst
xlat
int3
clc
lods
jo
inc
jmp
aam
pop
orb
inc
cld
outsb
add
push
sbb
outsb
mov
aam
das
jl
iret
imulb
and
add
into
lods
push
fwait
dec
fimull
sub
mov
les
stc
cs
aam
cmp
stos
pop
roll
xchg
inc
test
cld
es
cld
sahf
mov
push
ret
rclb
js
cmp
jmp
in
lods
cmc
mov
adc
mov
cmpsb
stc
scas
and
lret
adc
mov
cmp
bound
inc
dec
lods
icebp
add
sti
icebp
cld
xlat
xchg
mov
ja
push
and
cmpsb
js
int3
and
inc
push
mov
push
dec
adc
push
pop
or
and
mov
stc
mov
roll
adc
aad
in
pushf
pop
mov
sti
enter
dec
scas
mov
leave
dec
scas
mov
movsb
mov
push
mov
pop
cli
xor
imul
inc
ret
out
xchg
mov
roll
movb
mov
push
adc
les
dec
xor
jo
mov
lock
mov
fcom
out
lods
cwtl
jecxz
jae
mov
fcmovbe
outsl
scas
xor
inc
mov
adc
mov
scas
push
sub
xor
mov
pop
lea
push
test
lock
int3
orl
fildll
cmpsb
out
xor
icebp
lret
dec
pop
fdivs
sbb
mov
rclb
pusha
ret
jnp
add
push
lea
sti
inc
out
mov
adc
ficoml
pop
cmpsb
fwait
pop
enter
orb
adc
into
sbb
jl
or
dec
aas
push
xchg
in
add
cmpsb
pop
dec
enter
cli
into
xchg
mov
iret
cmp
jo
mov
iret
mov
cld
push
out
les
mov
or
scas
add
or
mov
inc
add
popa
popa
mov
xchg
hlt
jae
push
mov
mov
add
les
add
loopne
ficompl
out
enter
xor
in
shlb
ffreep
and
mov
xchg
lock
pop
cmp
and
mov
js
jo
loopne
inc
dec
leave
sub
xchg
dec
add
sar
ljmp
rorl
sbb
ja
insl
loop
iret
inc
stos
je
sbb
pop
div
jmp
aam
xchg
sbb
jae
ret
shll
into
xor
mov
lea
icebp
aad
loopne
clc
icebp
sti
inc
es
lahf
mov
fwait
popa
std
and
mov
leave
cmc
popa
and
cmp
bound
and
cmpsl
test
lret
negb
fs
jbe,pn
out
jge
cmpl
aaa
mov
xchg
push
mov
cmp
sbb
pop
xor
repz
sub
pop
in
sub
xchg
mov
add
jne
cmp
pop
dec
jle
add
fs
insl
js
inc
icebp
cmp
dec
in
adc
push
cmp
pop
popf
js
mov
push
and
mov
or
ljmp
inc
xor
xchg
or
outsb
fwait
clc
adc
sarb
imul
out
mov
dec
push
iret
pop
mov
in
mov
leave
mov
rol
cs
sub
xchg
fincstp
mov
stos
enter
scas
adc
dec
stos
imul
adc
sbb
ret
stos
xchg
xchg
or
dec
lods
mov
dec
adcl
pop
or
inc
push
cli
cltd
and
out
jp
xor
push
lret
adc
cli
fists
mov
shlb
jb
insl
jge
cmp
pop
cmpsl
sbb
shrb
jp
imul
test
xchg
ss
aad
or
mov
or
xorb
mov
scas
jae
fstps
adcl
dec
sahf
jno
out
test
mov
mov
rcrl
sub
and
test
mov
push
les
shll
push
xchg
and
xchg
fadd
adc
jge
pop
bnd
xor
addl
inc
mov
int3
pop
fldl
lea
xchg
das
in
mov
adc
fs
insl
and
pop
nop
inc
repnz
push
in
shll
mov
lfs
mov
imul
imul
xor
add
in
jno
ja
push
stos
dec
or
mov
cmc
daa
outsb
pop
mov
mov
mov
xchg
stc
pop
pop
lods
daa
es
sti
ret
mov
in
cwtl
xchg
aam
push
outsb
sti
jbe
cmp
dec
jle
add
ds
dec
adc
push
in
dec
fidivl
sbb
lods
mov
pop
stos
xchg
loop
arpl
sub
test
pusha
sbb
and
pushf
jns
jnp
or
leave
sub
adc
shr
aas
gs
ss
xor
cli
and
mov
jne
fmul
and
jge
add
lock
out
mov
push
ja
xor
mov
xor
pop
xor
aam
xchg
out
sahf
xchg
mov
out
in
push
cwtl
out
je
lcall
iret
mov
push
or
cmp
ror
call
cmp
mov
fbld
outsl
fs
ss
es
lret
or
mov
push
loop
inc
movsb
pushf
mov
loopne
inc
jb
sahf
pop
dec
mov
inc
mov
cmp
icebp
aad
movsl
stos
cmpsl
pop
sub
sbb
inc
inc
mov
sbb
push
fisttpl
and
nop
mov
xor
mov
ljmp
test
xchg
test
lods
aas
pushf
add
sbb
stos
push
call
cld
addl
mov
xchg
and
nop
mov
xor
nop
inc
in
lcall
xchg
in
adc
adc
loop
rcr
jbe
jle
sbb
out
and
mov
xor
sbb
out
rcr
mov
mov
ljmp
cmp
repz
adcb
xchg
mov
pop
divl
dec
pop
dec
inc
lock
xchg
xchg
push
sarl
jecxz
incb
sar
shl
insb
jle
mov
mov
divl
clc
rclb
cmc
mov
das
into
es
in
mov
leave
ficompl
dec
dec
mov
mov
lock
loop
icebp
cltd
jbe
sub
xor
jle
push
jl
pop
xor
fs
icebp
gs
call
loopne
fisttpll
popf
sub
ss
xchg
add
in
mov
cli
and
test
lret
push
fldt
xchg
push
xchg
add
cmc
sub
lock
and
loopne
and
sbb
in
js
shrl
stos
adc
sbb
pop
negl
cwtl
sub
adc
and
xor
push
xor
mov
out
test
fldenv
pop
mov
xor
jne
xchg
icebp
sarl
xor
push
or
dec
das
mov
adc
cs
pop
sub
popa
lahf
sti
scas
inc
mov
movsl
cmp
cmp
cs
xchg
clc
fldt
mov
dec
movsb
xlat
sbb
adc
xchg
sbb
loopne
push
das
imul
lods
sbb
rolb
testl
jl
or
cmp
xchg
push
frstor
in
outsl
icebp
pusha
inc
inc
imul
std
jg
sub
add
into
out
rorl
arpl
aaa
stos
fsubrp
into
inc
jae
push
dec
jmp
sbb
dec
add
notb
sub
pop
mov
fs
inc
jmp
lds
shll
jnp
add
fisubrl
xor
inc
rorl
and
sub
mov
or
data16
mov
rclb
sub
mov
or
rorb
add
inc
test
imul
sub
cmp
test
outsb
xchg
cmp
out
fsubrp
test
sub
lds
xlat
push
xor
jnp
test
mov
lahf
inc
and
xor
fistl
jecxz
mov
cld
ficoms
cld
lret
mov
jge
push
enter
enter
push
dec
mov
mov
cmp
fwait
movsl
and
dec
cmp
sub
loop
out
cwtl
dec
sbb
or
push
xchg
push
jmp
test
xchg
in
aaa
dec
insb
insb
mov
cld
aam
or
push
addl
sbb
lahf
or
inc
dec
pop
push
push
or
sbb
adc
jns
clc
and
aad
lods
jb
ds
cli
xchg
roll
loopne
mov
fs
or
xor
add
lds
fisttpll
cli
icebp
xor
xchg
enter
mov
and
inc
add
pop
sti
pop
rcr
dec
fnstcw
mov
dec
xor
and
push
popa
loopne
and
inc
cmp
loope
push
mov
jle
jne
lods
mov
cmp
daa
ret
sub
sbb
mov
pop
jg
cmp
test
jo
and
mov
inc
cmpsl
push
mov
xchg
cltd
ficompl
in
clc
mov
mov
iret
mov
xlat
lods
jae
push
and
mov
lret
jae
push
mov
mov
jnp
cmp
adc
loopne
mov
and
and
fst
lds
inc
mov
repz
add
cltd
inc
cs
adc
pop
sbb
cmp
mov
lock
pop
jb
cmpsb
jecxz
lret
cmpsl
mov
lcall
inc
inc
fimuls
hlt
or
xchg
xchg
adc
mov
inc
or
sub
cmp
adc
xor
or
xchg
fimuls
fcmovu
inc
jp
jp
ljmp
push
xlat
mov
pop
add
lods
jg
rolb
sbb
pushf
cld
loopne
fbld
xor
popf
out
adc
add
jp
insl
scas
cmp
dec
dec
adc
pushl
push
cmp
inc
sub
insl
pusha
pop
mov
add
cmp
jbe
pusha
repz
pop
sub
push
cmp
mov
mov
pop
sub
dec
clc
jmp
jle
cli
push
pop
paddq
fs
stc
jecxz
mov
pop
adc
xor
xchg
popf
push
dec
lret
cli
icebp
notb
ss
int
cmp
ficoms
or
inc
mov
leave
sub
fptan
subl
xchg
test
and
cmpl
jnp
enter
sub
test
mov
pop
cmp
jno
aad
cli
fnstsw
push
stos
xor
ret
inc
aaa
or
sti
mov
adc
lcall
fxch
mov
pop
pop
mov
in
push
std
pop
rcr
jp
cmpsb
pop
fidivrl
inc
xor
rcrb
mov
cmpsb
adc
dec
lds
aaa
sub
xchg
jo
aad
add
push
mov
ljmp
cltd
push
repnz
sti
push
and
mov
pop
jno
xor
cmp
mov
push
mov
loop
jle
fistps
dec
add
sub
push
adc
sbb
out
ds
xchg
adc
mov
fimuls
cmp
in
imul
fld
daa
adc
sbb
scas
stos
or
jmp
leave
in
shrb
sti
push
inc
mov
and
popf
and
or
push
clc
lds
insb
mov
shl
pushf
lea
mov
pusha
cmp
popf
push
or
cli
sbb
imul
add
fcmove
arpl
dec
inc
or
ret
pop
dec
sub
leave
addr16
or
xchg
lods
out
add
pop
das
pop
in
lcall
inc
push
cmp
mov
xchg
inc
mov
shl
das
loop
sub
and
jmp
test
xchg
ret
xchg
jns
mov
adc
jl
popf
in
xchg
sbb
fidivs
xchg
pop
aaa
rcll
lock
push
sub
dec
mov
sub
cs
inc
xor
pop
movsb
loop
popa
push
rcll
jg
lret
sbb
les
pop
test
fcmovbe
std
je
bound
mov
xchg
mov
iret
gs
into
cmp
les
and
sti
dec
xorb
jp
pop
mov
cmp
xchg
in
mov
jno
lahf
adc
pop
loop
mov
arpl
mov
jne
mov
xchg
lods
xchg
cmp
and
adc
out
dec
pop
mov
mov
test
push
sti
and
mov
pop
jb
pop
mov
cltd
adc
push
xor
subb
rorb
cld
ja
popa
sahf
clc
dec
int3
stos
mov
and
ljmp
lock
jbe
xchg
repz
add
daa
pop
jne
lods
sar
xchg
fnstsw
mov
test
jno
pop
and
imul
dec
lret
popa
xchg
lret
cmp
pusha
ret
hlt
mov
xor
loop
lods
bound
or
mov
jp
adc
pop
cmp
dec
daa
mov
mov
pop
xor
int
mov
popf
iret
mov
sub
int
out
fucomip
enter
sub
test
and
sub
loope
xchg
push
test
sbb
rolb
ljmp
jg
xor
shlb
or
rclb
sub
roll
iret
and
shlb
dec
fnstcw
les
pop
pop
push
fstps
cmp
pop
sub
mov
inc
orb
ret
out
hlt
js
mov
pop
inc
cmp
push
lcall
hlt
cmovl
sub
lock
clc
push
jnp
bound
ret
cmp
push
in
mov
push
ja
cltd
and
mov
pop
rclb
inc
add
sbb
inc
cmp
mov
lea
sub
add
or
cmp
fidivrl
je
gs
lds
mov
jmp
cmp
je
sbb
or
int
cmp
or
jge
inc
push
adc
cltd
int
callw
in
or
dec
filds
insl
adc
clc
rorb
add
arpl
push
push
jle
push
xchg
sti
xlat
idiv
les
repnz
add
inc
imul
in
sahf
sub
fcos
cmp
cmp
je
std
add
enter
or
mov
mov
xchg
sahf
mov
pusha
stos
arpl
jge
dec
fs
aaa
cli
cmp
lret
lcall
sub
cmp
xchg
lods
mov
je
mov
inc
adc
popf
xor
add
mov
div
cli
xor
inc
pop
ret
loop
fiadds
and
rclb
and
mov
mov
mov
adc
dec
addr16
lahf
sahf
dec
in
push
adc
mov
jle
into
movsl
test
shll
mov
lret
sub
out
or
lret
sub
dec
int
loope
sub
sbb
cmovbe
cs
adc
add
mov
cli
ficoml
cs
aaa
mov
adc
ds
ja
decb
mov
stos
push
xor
andl
mov
jbe
push
lcall
sarb
sbb
mov
pop
push
mov
cmp
or
out
jl
inc
jle
cmp
xor
mov
int
repnz
push
fwait
aam
mov
mov
lods
xchg
xchg
daa
mov
and
hlt
jno
or
in
lods
aam
adc
sbb
push
xor
jo
stos
out
leave
add
repz
cld
jb
or
sbb
mov
jecxz
mov
outsb
clc
sub
rcll
mov
inc
mov
pop
test
xchg
add
push
aad
out
or
cltd
push
mov
cmpsb
stos
xchg
pusha
hlt
cmp
mov
aas
sub
add
jb
loope
add
and
sub
lods
pop
cmp
lret
sub
push
fisttpl
std
pop
mull
jecxz
xchg
and
test
xor
add
dec
or
dec
mov
hlt
pusha
xchg
aad
xchg
mov
aaa
xchg
es
sub
js
rolb
sahf
enter
sbbb
orl
cmp
jnp
fisubs
insb
and
add
enter
lcall
orb
or
daa
aad
insl
out
add
jecxz
add
stos
xchg
out
dec
das
inc
jbe
in
stos
repz
jo
cs
es
imul
sbb
cli
lret
or
push
rorl
xor
jbe
push
inc
in
and
adc
subl
push
stos
jl
pop
cmpsl
pop
jns
roll
xchg
cmp
dec
push
push
arpl
xor
out
and
movsbw
gs
mov
mov
xchg
hlt
fsubl
sub
sub
pop
repnz
jbe
das
jecxz
out
mov
mov
xor
mov
mov
js
xchg
lock
sub
negb
xchg
shll
adc
and
jg
adc
fidivrs
fucomi
push
nop
cld
mov
xchg
dec
call
stos
in
or
and
pushf
sti
mov
mov
jae
shll
sbb
aam
in
je
das
inc
out
sahf
pushf
loope,pt
cmpb
dec
fs
das
pop
push
inc
aaa
scas
mov
push
jp
mov
hlt
out
add
add
imull
cmp
rcrb
jne
dec
sbb
cwtl
or
ret
rol
clc
loop
mov
xor
dec
loop
scas
arpl
and
xor
lret
lods
stc
xor
rcll
dec
cmp
sub
nop
push
mov
mov
repnz
rorl
inc
jp
mov
add
or
arpl
cld
andb
push
jo
push
push
scas
jmp
lret
dec
jmp
or
lock
dec
sub
dec
sahf
push
shll
xchg
push
jle
aad
sub
repnz
cmp
ljmp
pusha
and
xchg
sub
int3
dec
push
call
mov
mov
jge
popa
dec
andb
xchg
subb
sub
test
sbb
jle
sbb
and
mov
pop
add
mov
push
sub
movsl
and
xor
mov
pop
push
xor
imul
pop
mov
inc
adc
xchg
mov
shlb
cmp
bound
aaa
or
or
inc
mov
fisubrl
jnp
push
repnz
cmp
dec
xor
inc
mov
movsb
sub
fadd
mov
loopne
daa
cmp
cmp
inc
movb
pop
jb
push
popf
out
fs
fwait
xchg
push
in
lahf
shr
testb
sbbb
xorb
nop
mov
faddl
xchg
out
push
add
inc
pop
aam
ljmp
in
push
pop
inc
xlat
shrl
xlat
decb
sbb
cld
jns
xchg
shlb
dec
loop
mov
pop
push
les
xor
adc
mov
jnp
push
mov
imul
sbb
out
push
xor
out
xchg
outsl
pop
lret
inc
add
out
push
pushf
inc
sarb
sub
loopne
aas
and
dec
out
jl
mov
ret
ret
mov
lods
mov
and
cmp
add
lea
fsubrs
xor
mov
or
push
jns
cmpsb
xchg
sti
sti
jnp
ds
or
jnp
repz
aas
inc
fcoml
hlt
dec
mov
dec
cmpl
push
dec
out
cmp
sahf
jmp
rcll
cmp
sbb
adc
aad
xlat
fmulp
push
in
mov
sbb
stc
cmpsb
xchg
jmp
jmp
js
cwtl
loope
aas
roll
xor
adc
icebp
call
pop
lea
dec
je
push
fimuls
cld
sarb
imul
jns
inc
add
jae
cmp
sbb
leave
sub
and
lahf
mov
jge,pt
mov
leave
push
testl
adc
insb
pop
aas
fistpl
mov
push
lea
int3
lods
sbb
repnz
out
xchg
pop
dec
ljmp
mov
loopne
ss
repz
fdivrs
mov
icebp
repnz
xchg
xchg
into
mov
push
dec
mov
pushf
mov
pop
fisubs
loop
int3
mov
mov
push
mov
movl
lcall
cltd
cmp
add
mov
stos
sub
rcrl
cmc
fldl
xchg
stos
in
inc
sarl
repz
mov
sub
mov
xor
mov
enter
imul
mov
and
sub
pushf
notl
cli
stc
dec
cwtl
adc
repz
pop
mov
cmpsb
sbb
xchg
cli
insb
push
mov
xor
mov
mov
add
jge
mov
hlt
or
ret
cmp
jge
ss
test
inc
std
call
pop
std
das
test
jle
jmp
popf
out
pop
lds
pop
mov
addl
repz
or
sub
xchg
cmc
aam
pop
dec
cli
jecxz
mov
or
mov
iret
adc
cwtl
inc
rorb
fldl
out
cmpsl
dec
jmp
fsts
mov
dec
sbb
inc
fisubrs
fidivrs
inc
jl
push
repz
pop
fwait
in
sbb
adc
dec
out
xchg
pop
mov
jb
repnz
sub
mov
mov
pop
push
dec
stc
orb
adc
icebp
insl
repz
ss
lods
jno
jg
mov
adc
dec
xchg
hlt
cmpsb
test
insb
jb
outsl
push
lods
add
out
add
pop
sbb
rcll
mov
jg
scas
rcll
lahf
in
ret
add
push
adc
js
gs
mov
pop
jmp
pop
inc
jle
pop
xchg
xchg
xlat
data16
xchg
inc
cmp
add
lock
push
inc
orb
enter
outsb
subl
mov
ljmp
and
je
mov
addps
sbb
xor
ret
jle
insb
jg
and
pop
mov
sbbb
stc
xchg
lret
xlat
cs
sbb
mov
bound
in
and
je
or
push
lods
pop
scas
fnsave
mov
rcll
es
out
lret
dec
js
xchg
jae
mov
cs
jns
sub
out
jns
ss
hlt
sub
xchg
sbb
jbe
mov
jb
jge
mov
sarl
pop
cs
ss
cmp
jo
int3
cmp
nop
cmpsb
imulb
stos
test
sub
out
stos
push
adc
sbb
enter
sbbb
mov
ljmp
xlat
bound
insl
cwtl
shr
pop
stos
popa
lods
inc
jmp
add
daa
std
inc
and
sahf
fsub
testb
lods
nop
repnz
leave
and
sub
and
xor
pushf
ljmp
test
jg
add
and
inc
pop
jno
imul
adc
movb
out
push
mov
js
aas
jne
jae
inc
jbe
mov
dec
test
in
mov
lret
es
or
out
and
into
sub
jae
jge
dec
add
aas
pushf
stc
dec
cmpsl
insl
lods
jnp
into
mov
stos
cmpsb
inc
cmc
stos
pop
sub
mov
mov
mov
int
test
lods
sub
mov
push
xchg
icebp
lahf
or
gs
pop
arpl
mov
adc
clc
pop
pop
push
aad
out
and
cwtl
sub
sub
dec
cmc
push
pop
xchg
test
xor
into
sti
jg
jl
xchg
lret
iret
pop
push
rclb
dec
popf
mov
xchg
mov
fnsave
fbstp
dec
and
outsb
inc
pop
decl
imul
outsb
cmpb
jns
psubusb
pop
push
mov
mov
cmp
mov
mov
mov
jnp
jmp
inc
mov
enter
pusha
sbb
lret
arpl
xchg
lock
add
sti
pop
jg
aad
cmp
mov
test
xchg
in
sarb
ret
in
cmc
or
test
and
jge
int
dec
notl
push
add
clc
cmp
or
mov
stos
push
push
xchg
jg
cs
xchg
jecxz
cmc
xchg
arpl
cmc
mov
cmp
insl
jmp
adc
insb
mov
outsb
adc
or
sub
enter
loopne
cld
push
rorl
imul
add
call
xor
out
dec
xor
out
adc
leave
push
mov
dec
xchg
and
mov
rcl
out
adc
inc
jmp
pop
js
fbstp
fldl
xor
xor
mov
or
pushf
mov
pushf
add
pop
push
mov
jle
stos
jg
jmp
lahf
sbb
out
jo
lret
push
fcoms
in
adc
xor
cmp
xchg
fcmovu
or
and
jne
fidivrl
add
xchg
xor
fwait
aas
xor
das
jb
sbb
inc
add
push
sbb
testb
inc
inc
sbb
jge
xchg
sbb
test
lock
rcrl
cltd
sbb
inc
xchg
je
mov
shlb
sbb
in
cwtl
sarl
scas
fs
int
mov
adc
pop
jg
out
and
pop
shlb
cmp
adc
jae
jae
inc
and
loope
sbb
nop
adcl
cmpb
ror
sbb
pop
nop
addr16
outsl
xchg
sub
or
cmp
mov
popf
mov
ds
je
or
std
push
mov
scas
fcoms
popf
out
dec
pop
stos
jle
loop
inc
pop
pop
mov
dec
mov
mov
cmp
or
loope
mov
ljmp
mov
and
mov
xchg
sarb
clc
je
lods
dec
xor
sarl
mov
arpl
js
hlt
popa
test
jecxz
stos
arpl
mov
in
scas
int3
rorl
add
jnp
inc
dec
neg
and
jecxz
enter
and
adc
outsb
in
loope
mov
gs
scas
cmp
dec
repz
vmovhps
mov
push
xor
int
cmp
repz
jmp
sub
sahf
pop
dec
orl
push
jg
loopne
leave
mov
mov
and
sti
or
popf
shrl
outsb
push
paddusb
pop
subb
xchg
adc
mov
insb
and
push
not
lahf
jnp
mov
jp
sub
orb
daa
lret
iret
jle
sbb
mov
pop
enter
jecxz
push
adc
or
adcl
xlat
and
jle
xchg
hlt
inc
daa
faddl
pop
js
ja
shlb
sub
xor
and
dec
sahf
jno
cmp
fcompl
in
mov
adc
xor
mov
cmp
cmp
rol
rcrb
idivb
mov
stos
into
shll
gs
mov
call
cmp
pop
iret
fistps
leave
mov
dec
xorb
mov
pop
pop
jns
mov
pop
add
cmpb
cmp
movsb
inc
mov
mov
mov
inc
sub
and
addr16
mov
mov
ss
mov
mov
popl
lods
adc
cmpsb
xchg
fisttpll
cmpsb
movsl
push
cmp
sti
or
inc
push
icebp
cli
stos
lock
jne
fwait
jle
out
fwait
cmp
jnp
jno
cmpsl
sub
cwtl
adc
xchg
add
ljmp
jl,pt
out
inc
inc
stos
and
lahf
fs
test
icebp
xor
pop
clc
cld
cmp
lds
fstp
ficoms
pop
xor
pop
add
icebp
fmull
mov
inc
cmp
ds
loopne
cmpsl
mov
data16
cmp
pop
inc
sbb
cmpsb
mov
sahf
rorl
inc
dec
push
sbb
into
mov
bound
aam
jno
fcmovnbe
rorb
pop
or
notl
fucom
insl
sub
mov
inc
cmp
sbb
fbld
fs
pusha
or
movsb
out
inc
faddl
das
shll
in
popf
test
or
pusha
jb
adc
mov
call
imul
addb
pop
inc
mov
jmp
arpl
repnz
pop
jmp
jb
xchg
or
xchg
shlb
repz
jb
je
and
icebp
pop
callw
stos
stos
xor
xchg
push
dec
loop
pop
call
mov
sbb
push
cwtl
int3
movsl
clc
dec
ret
add
insb
pop
push
inc
orb
imul
das
push
hlt
sbb
lret
mov
mov
pop
cmp
pop
xor
scas
call
adc
gs
inc
fdivl
sbb
mov
jbe
dec
fisubrs
push
outsl
or
hlt
sbb
sti
lahf
sbb
rolb
xor
test
sub
test
icebp
fmull
cli
invd
in
add
xchg
orb
and
clc
pop
test
stc
mov
scas
jbe
lcall
sbb
mov
dec
xchg
cmp
jl
inc
sbbl
mov
and
pop
aas
mov
and
cmp
cmc
mov
or
test
mov
cmp
int3
cmp
push
pop
das
xchg
dec
push
push
mov
add
mov
rcl
sub
cmc
push
xchg
insl
in
jo
sahf
jl
mov
aaa
fidivrs
inc
and
in
mov
mov
out
nop
mov
shll
cmc
ljmp
out
outsb
xchg
outsb
lea
jmp
cmc
call
adc
jns
jg
out
mov
xor
and
mov
dec
cmpsl
rcl
mov
inc
popf
push
xchg
fmuls
sahf
cmp
repnz
xchg
push
and
jo
lock
int
pop
push
pop
xor
iret
pop
adc
test
dec
lahf
xchg
mov
pusha
push
mov
leave
inc
in
movsb
xor
mov
mov
or
dec
scas
mov
push
sub
mov
in
pop
ret
inc
test
cmpsl
push
mov
or
pop
cmpb
cmpsb
jbe,pn
mulb
rorb
test
vmread
sbb
add
mov
add
rcl
xor
adc
test
in
dec
into
int3
xor
xchg
lock
xlat
or
es
loope
fisttpl
dec
dec
inc
lcall
in
out
push
sub
xchg
mov
hlt
jg
inc
loope
std
mov
mov
push
fcoms
sub
cmp
lcall
aam
mov
inc
or
stos
jb
ret
pusha
pop
out
mov
subb
ljmp
jp
ret
sbb
mov
popa
adc
xor
and
sbb
xchg
inc
js
xchg
pop
cmp
mov
les
cmpl
stos
push
std
inc
xor
mov
cmp
jle
dec
lahf
js
or
clc
orb
xor
push
outsl
fcomp
call
dec
ds
adc
mov
jno
out
rcl
in
sbb
loopne
push
pusha
xlat
sbb
cmc
das
mov
movsl
fsubrl
pop
xchg
inc
imul
push
cmp
mov
adcl
sbb
push
jle
cmpsl
xor
mov
mov
lret
pop
sahf
pop
lahf
and
push
push
imul
loopne
outsl
or
rolb
mov
fidivl
or
lock
inc
popa
mov
test
out
sub
sbb
xchg
imull
or
call
cmp
dec
dec
lods
lgs
push
adc
sbb
popf
sub
or
xor
cmpsb
jne
shl
aam
in
xchg
push
jle
leave
inc
inc
sub
int3
sbb
jle
fnstcw
push
insb
sti
rcrb
xor
mov
add
outsl
cmp
popa
sti
jmp
cmp
sahf
pop
inc
addr16
mov
loope
or
mov
sbb
in
stos
fxam
pop
repnz
mov
test
mov
les
sub
push
push
push
sub
lods
ret
xchg
or
lods
sub
push
add
dec
sub
add
inc
scas
jb
jge
mulb
pop
cmp
jo
les
dec
es
dec
clc
pop
xor
jne
mov
mov
sub
pop
sbb
fldt
je
mov
inc
pop
mov
call
stos
out
call
xlat
repnz
xchg
iret
xchg
or
xchg
je
into
sbb
cmp
mov
add
xlat
orl
imul
js
mov
je
jp
jo
addb
pop
clc
arpl
mov
mov
add
iret
and
push
jecxz
jecxz
test
sbb
adc
jp
cmpsl
inc
dec
in
imul
in
sub
mov
jns
mov
scas
inc
lods
sbb
addr16
rcrl
leave
bound
adc
inc
arpl
iret
iret
xor
and
scas
adc
jge
test
int
mov
inc
in
repz
cmp
pop
mov
negb
je
insb
add
aam
pop
outsb
lcall
lock
push
dec
nop
jecxz
loope
xchg
adc
test
ljmp
push
negl
add
inc
jl
cs
dec
xor
adc
mov
push
cmp
fcmovnu
es
dec
or
subl
imul
xchg
in
jbe
xchg
mov
xchg
dec
jge
das
add
pop
fistpll
fcomps
xor
ja
mov
imul
jp
mov
or
stos
sbb
lock
mov
mov
dec
cld
jno
js
out
push
sub
jnp
shr
pop
fwait
adc
fs
sub
test
stos
cwtl
ljmp
mov
cmpb
es
jmp
jl
cmpsl
or
shlb
ficompl
mov
adc
ljmp
add
out
xchg
je
sbb
les
scas
xor
sarl
pop
sub
xor
xchg
mov
out
icebp
mov
imul
sub
scas
outsb
and
inc
xor
js
cmovne
push
cmp
packsswb
mov
bound
call
pop
jo
inc
cmp
xor
cmp
dec
rorl
xchg
mov
adc
jnp
in
xchg
mov
fsts
push
je
addl
scas
cli
pop
lret
sbb
in
test
cli
push
insl
call
into
js
or
mov
push
es
movsb
and
cmc
adc
sub
out
sub
mov
pop
in
sahf
aaa
xchg
ret
sbb
pop
aam
push
jmp
cmp
mov
add
ja
in
xor
sub
call
and
js
cltd
dec
test
rcl
cmp
cld
xor
pop
cs
popf
push
xor
test
notb
sub
jle
test
jmp
xlat
xchg
pop
pop
repnz
jecxz
inc
jnp
xchg
in
out
jl
test
mov
stos
icebp
mov
jb
adc
sub
test
lcall
mov
or
negl
insb
push
cmp
popa
in
lods
les
fnsave
popf
or
idiv
pop
arpl
test
lcall
sbb
add
lods
push
adc
lret
xor
sbb
aam
orb
xchg
nop
add
icebp
adc
repz
xor
adc
bound
xor
dec
daa
cmp
dec
push
jo
fcomps
pushf
adc
or
popa
out
inc
jno
js
aaa
cmp
pop
rol
sbb
loop
aam
lock
add
mov
xor
mov
stos
push
mov
jle
ret
outsb
sub
mov
js
push
pop
aas
push
andb
adc
push
daa
cmp
mov
or
xor
out
ret
sbb
add
or
dec
push
sub
jne
mov
in
dec
not
leave
push
andl
rolb
imul
hlt
sbb
xchg
inc
mov
and
cli
mov
dec
scas
xchg
sub
out
adc
int3
jecxz
iret
dec
out
mov
repz
xor
or
sub
dec
mov
jp
pop
lods
test
into
xor
aas
or
dec
mov
sub
stos
push
push
jae
inc
aaa
iret
or
jg
js
cmp
cmpsl
fsubrp
pop
xchg
sbb
sbb
cmp
sub
jo
into
fidivs
pusha
movsl
push
idivl
sbb
cmp
repnz
mov
lahf
sub
inc
inc
xor
push
repnz
pop
dec
add
xchg
push
in
lea
addr16
inc
xchg
jnp
cmp
addr16
push
jbe
sub
ja
xor
cmp
mov
addb
and
cmc
fwait
xchg
cmp
xor
jb
sub
imul
aam
push
cs
adc
jmp
cmp
add
add
cmc
adc
fisttpl
popf
push
xor
ret
arpl
jge
pop
xchg
inc
xchg
sub
or
add
out
dec
popa
xor
imul
xor
in
leave
inc
sbb
outsb
popf
dec
ja
jbe
dec
rol
xchg
loope
aas
std
out
add
into
lret
sub
pop
jmp
and
inc
dec
cltd
addr16
frstor
add
fs
out
int3
lret
je
loope
scas
dec
sbbw
test
sarl
mov
xchg
xchg
push
push
inc
add
add
imul
adc
xchg
mov
mov
add
xor
pop
test
sub
lahf
sub
and
pop
sub
push
mov
cmp
stos
mov
add
cmp
lahf
mov
test
sub
adcl
push
movsl
inc
int3
popf
cld
cs
sub
mov
cmpsl
les
inc
insl
xor
push
arpl
adc
dec
pusha
cmp
mov
lret
adc
out
ds
daa
inc
pop
out
push
cwtl
ds
sti
pop
test
mov
in
imul
push
dec
mov
lea
daa
cmp
mov
test
sub
int3
aas
dec
aad
into
and
sbb
mov
and
xchg
push
push
add
mov
daa
leave
popf
push
add
test
outsb
jp
int3
in
cmp
andb
pop
ret
lahf
mov
nop
mov
enter
ljmp
popa
testl
pop
adc
fisttpll
jp
data16
xor
out
subl
jbe
dec
cltd
mov
dec
sbb
push
stos
sbb
or
test
jp
inc
mov
fisttpl
or
or
mov
stos
int3
popa
jbe
cmpsb
mov
aad
in
daa
jle
rorb
incb
push
jbe
jne
fucomp
lcall
ret
inc
test
sub
rcrb
loop
mov
push
fisubrl
mov
push
bnd
mov
adc
add
lahf
imul
in
sti
cs
les
xor
or
ret
or
mov
fidivs
addr16
ret
in
dec
push
lock
insb
bound
ret
les
mov
in
lods
popa
add
mov
and
jns
cli
insl
sbbb
jne
cmp
addb
push
mov
daa
mov
loope
xlat
xlat
int3
jnp
ret
pop
lods
pop
insb
pusha
dec
inc
insl
jnp
ljmp
adc
jle
jmp
mov
xchg
pushf
loopne
mov
test
sub
out
lcall
orb
mov
mov
xor
push
ds
mov
daa
imul
loope
mov
scas
pusha
ja
mov
subb
cltd
arpl
cwtl
icebp
xor
xchg
jo
test
add
mov
push
or
xchg
push
cmp
stos
ret
xchg
xchg
and
lahf
inc
mov
jo
lods
int
lods
enter
xor
jmp
cmpsb
mov
mov
lret
popa
pop
inc
adc
out
pop
inc
cmc
sbb
cmp
in
xor
xchg
subl
mov
repnz
xchg
inc
jmp
jg
ss
aaa
add
jae
and
xchg
sahf
and
daa
movsb
xchg
inc
cmpsl
sbb
nop
aam
inc
or
adc
xchg
out
xchg
fwait
into
notl
cmpsl
mov
and
jg
and
cmp
mov
pop
jae
test
out
loope
sbb
out
fadds
scas
or
bndldx
int
dec
rcll
sub
sbb
mov
mov
pop
fsubl
mov
mov
mov
xchg
nop
stos
push
roll
fs
test
jo
push
out
jno
out
scas
rolb
fld
addr16
inc
stos
out
push
mov
push
hlt
jbe
test
int
cmp
mov
sahf
xchg
dec
cmpl
daa
cli
stos
push
add
push
push
push
jne
orl
sarl
push
xchg
inc
sbb
ljmp
dec
push
repnz
out
pop
jae
ret
xchg
mul
jcxz
adc
inc
sbb
xor
cmp
pop
ljmp
das
or
xchg
loope
loope
sbb
lahf
jmp
jle
pusha
jl
push
sub
iret
int
fwait
testb
repz
test
ret
sbb
negb
cmp
lods
cmp
filds
add
orb
mov
in
dec
inc
jg
pop
fbld
mov
jge
bound
std
cmpsb
push
stc
mov
jle
pop
and
jbe
enter
cli
int
sub
dec
dec
pop
sbb
lock
daa
sbb
cltd
dec
xchg
push
out
mov
int3
or
add
imul
bound
ret
aas
jle
sub
mov
mov
mov
push
lcall
lock
inc
xor
mov
jl
push
mov
xor
popf
ret
into
outsl
jns
add
aas
fldcw
fisubrl
sub
ficoms
loope
fiaddl
and
xchg
loop
pop
add
mov
push
stc
lods
bound
mov
mov
iret
cmpsb
add
mov
rcll
sbb
inc
pop
testl
or
mov
subl
mov
ja
jno
les
cmp
cwtl
xchg
and
push
das
dec
into
shrl
stos
pop
and
push
add
test
dec
xor
jo
scas
ljmp
in
and
ja
lods
sbb
push
cmpsb
bound
inc
sub
cmc
jp
inc
mov
jp
out
pop
bound
push
nop
out
jecxz
jbe
dec
jmp
cmp
fldl
outsb
lahf
leave
push
popa
xor
or
loop
mov
fdivrp
lret
lds
stos
gs
in
inc
sbb
pop
fbld
push
add
xchg
cmpl
or
mov
adc
adc
inc
and
jl
mov
sbb
cmp
mov
insb
ret
repz
inc
int3
jg
cmp
jge
aam
loop
xlat
int
add
sbb
test
dec
repnz
push
jbe,pn
inc
mov
mov
pushf
cmp
lods
fistl
jo
sarl
nop
xor
popa
test
mov
in
loop
push
adc
sbb
sbb
outsb
dec
dec
xchg
loop
sbb
adc
imul
pushl
test
out
adc
push
xlat
aam
dec
cmp
xchg
pop
dec
mov
test
sbb
push
imul
push
out
sub
xchg
or
out
sub
adc
dec
jge
adc
mov
xchg
add
push
pop
outsl
pop
out
mov
setno
cmp
sbbb
pop
pop
jecxz
mov
stos
fdivrs
mov
inc
pop
jnp
and
hlt
sbb
lcall
outsl
sbb
dec
sbb
xor
mov
imul
loope
insb
add
sbb
and
sub
push
ss
aas
out
xor
in
sahf
nop
cltd
jl
xchg
push
xor
push
je
cmp
lahf
insb
mov
roll
lret
ljmpw
cmp
inc
adc
jge
sub
lret
push
std
jo
mov
insb
int3
mov
push
ds
les
pop
stc
cmp
mov
sbb
cmp
iret
shrl
add
fcmovnbe
mov
jns
sub
rolb
mov
mov
cmp
push
xchg
fimuls
call
stos
xor
loop
mov
test
aas
fsubr
mov
add
js
cmp
ret
push
inc
lods
xlat
mov
mov
sarl
jmp
out
daa
addr16
shrb
ljmp
sbb
xor
mov
xor
cmpsl
mov
or
push
aad
mov
test
daa
adc
pop
xchg
inc
je
test
pop
lds
mov
add
xor
das
jp
sbb
sar
int
sbb
xchg
pusha
adc
push
insb
mov
push
cld
adc
mov
adc
cwtl
sub
push
xchg
mov
or
test
call
pushf
in
and
jo
sahf
cmp
mov
push
add
ret
mov
xchg
subb
mov
and
fildll
movsb
movsb
mov
xchg
leave
push
mov
and
sbb
sub
sahf
imul
dec
jecxz
push
or
or
adc
data16
jecxz
mov
sbb
mov
hlt
fimull
push
jg
mov
jne
sbb
inc
add
or
sarl
mov
jns
ret
mov
dec
nop
push
and
mov
xchg
mov
testb
lret
fistl
dec
not
mov
xor
push
ret
lods
push
cwtl
pop
mov
and
mov
lods
jnp
and
inc
rorl
daa
and
mov
mov
lret
and
jle
push
fnstenv
cs
push
lods
fbstp
in
or
xorb
scas
sbb
imul
lahf
loope
out
es
and
cwtl
out
mov
cltd
insb
daa
fisubl
scas
mov
fwait
jl
sbb
push
outsb
dec
mov
stc
stos
mov
jge
mov
and
jnp
sbb
test
aam
push
addr16
insb
test
gs
dec
cmpsb
rorb
in
jne
or
nop
pusha
mov
decb
cld
out
push
outsl
scas
xchg
dec
mov
lret
jg
scas
or
cmp
sti
in
popa
nop
sbb
lret
cmpsb
cmp
pusha
mov
or
or
ror
mov
and
sahf
sahf
imul
mov
addr16
add
xor
adc
adc
xchg
or
push
test
bound
inc
stos
lods
dec
xchg
mov
les
and
push
cmp
cmp
dec
lods
mov
dec
push
push
or
mov
sub
push
adc
data16
sub
mov
pushf
insb
push
xchg
pop
push
sub
frstor
rcll
int3
dec
pop
imul
fiaddl
xchg
jmp
dec
cmp
test
cmp
push
pop
shl
xchg
cmp
movsl
dec
mov
sub
xchg
sub
ret
mov
adc
das
cli
popa
in
aam
sbb
ljmp
out
adc
pop
test
pop
xchg
gs
push
jns
aas
fisubs
out
pop
sahf
and
jmp
stc
dec
push
in
jmp
paddw
ds
test
xchg
jae
int
mov
inc
push
jle
add
sbb
test
cwtl
or
lods
pop
es
cmp
jmp
inc
or
add
cmp
sub
sub
andb
inc
add
aas
subl
xchg
mov
fs
std
cmp
jns
mulb
mov
mov
jl
hlt
mov
test
mov
gs
pop
push
lret
sub
pop
add
fmull
test
xor
dec
jecxz
adc
jbe,pn
push
push
test
fmull
xchg
or
icebp
dec
inc
inc
cmp
xchg
add
imul
inc
imul
out
orl
bound
ret
and
mov
call
daa
les
sbb
adc
pop
or
ljmp
dec
jne
jnp
mov
sbb
repnz
ss
neg
mov
loop
lahf
addr16
ret
cmp
dec
inc
add
add
pop
xchg
jne
dec
pushf
xor
das
push
push
out
out
lock
lods
movsl
je
les
pop
aad
add
sub
inc
dec
xchg
xorb
insb
pop
jle
aad
call
push
leave
jno
mov
enter
std
ljmp
xchg
aaa
loope
pop
cmp
scas
ja
xor
lods
cmpsl
jnp
pop
mov
loop
sub
outsl
jl
inc
les
imul
movsb
bound
xor
test
xor
repz
xor
pop
out
das
xor
mov
pop
jbe
test
icebp
jge
repz
mov
cmp
dec
movb
movsb
inc
mov
cmp
hlt
add
mov
jnp
cs
push
shl
add
pop
ja
or
lret
mov
loop
xor
adc
fs
decb
test
mov
sub
cmp
sbb
jo
andl
cmp
sbb
cmp
mull
ror
ret
mov
mov
mov
mov
inc
sbb
mul
in
add
mov
jp
xchg
and
mov
dec
adc
stos
bound
inc
dec
call
sbb
mov
call
insl
jnp
jne
mov
xor
dec
xchg
mov
push
cltd
jp
psrlq
or
jne
pusha
adc
dec
mov
fsubrp
stos
iret
inc
lret
roll
mov
leave
inc
sbb
push
testb
iret
push
pop
mov
cld
mov
add
add
dec
inc
mov
jne
or
fcoms
pop
pop
or
pop
or
dec
std
cmpl
dec
repz
xchg
outsb
ljmp
inc
cld
and
xor
fstl
jbe
clc
inc
cmp
and
dec
inc
pusha
sub
loope
sbb
or
and
sub
dec
pop
rorl
ss
mov
cmp
mov
sbb
mov
mov
mov
gs
pop
sub
jno
iret
lds
loopne
in
cmp
inc
sbb
dec
mov
mov
in
sub
shll
cmpsl
out
sbb
sub
scas
xor
mov
jno
cwtl
sbb
xchg
or
dec
pop
mov
arpl
in
aad
mov
imul
xor
fildll
mov
lret
stc
dec
pop
pop
shrl
jp
push
push
push
dec
adc
faddp
daa
or
pusha
test
adc
inc
lcall
or
jnp
adc
or
inc
mov
xchg
or
mov
lds
in
mov
int3
icebp
std
xchg
lds
add
mov
fbld
fcompl
test
push
push
sub
pop
sub
fcompl
push
aas
shld
aas
pop
pop
push
push
pop
xchg
stc
push
xor
dec
out
xchg
jge
ret
cltd
xchg
add
add
lahf
sarb
push
imul
sub
sarb
testb
rcrl
mov
push
pop
push
mov
ljmp
loope
movsl
push
sbb
mov
mov
fucomip
mov
lret
adc
les
out
inc
in
jne
jmp
adc
in
pusha
jmp
sahf
xchg
inc
shrb
lcall
push
lcall
outsl
jl
xchg
popf
je
lcall
xor
jno
xor
cmc
addr16
movsl
icebp
cmp
dec
mov
cmc
inc
mov
push
adc
mov
dec
lahf
push
push
lahf
popf
daa
pushf
mov
cwtl
and
dec
jnp
addl
push
and
pop
adc
inc
jge
mov
out
pop
ljmp
push
or
test
sub
incl
mov
cmc
idivl
adc
lods
mov
xchg
add
adc
addr16
dec
or
inc
movsl
jp
jnp
xor
pop
or
stos
mov
xchg
js
add
ljmp
mov
mov
pop
loop
mov
repz
sbb
call
mov
daa
pusha
popa
cmp
jns
ja
xchg
mov
jecxz
xor
jecxz
aad
into
push
movsb
shr
out
xor
sub
dec
jge
data16
add
jbe
repnz
sbb
sub
jge
mov
xor
mov
pop
push
out
enter
inc
jp
ret
mov
mov
xor
data16
xchg
add
dec
mov
bound
sub
xchg
xchg
cmpsl
mov
ds
cmc
stos
movsl
ret
scas
icebp
pop
cmp
adc
cmpsl
jle
cmpsl
fsubp
cmpsb
notl
sub
sbb
cmc
fldcw
mov
mov
jp
dec
js
aaa
jo
pop
stos
ret
sub
das
xchg
ret
stc
mov
test
inc
vmovaps
es
cmpsb
adc
mov
out
les
cmp
int
fmuls
hlt
lods
mov
cmp
int
dec
pop
sbb
adc
orb
push
movsl
pushf
inc
lds
mov
iret
or
mov
pop
into
dec
jae
stos
idivb
sbb
cmp
or
mov
imul
mov
jnp
rclb
push
test
mov
lods
loope
pop
pop
and
movsl
sarb
dec
xchg
xchg
lret
andb
leave
jno
jo
push
inc
in
or
xor
sub
push
cmp
mov
ret
xor
enter
mov
mov
xor
es
out
ss
cmc
shrb
mov
loopne
pop
adc
in
pop
cmpsb
gs
cltd
ret
jmp
or
xor
pop
mov
mull
push
fcoml
sub
jo
xchg
mov
lds
lock
ja
add
mov
data16
jp
sbb
enter
test
pop
out
xor
cmc
mov
xchg
lahf
jecxz
adc
dec
jns
sbb
mul
data16
xchg
out
bswap
leave
adc
lret
pop
aas
inc
mov
push
pop
mov
lcall
shlb
rorl
jns
pop
adc
mov
pop
inc
ret
dec
hlt
mov
lcall
mov
add
push
jmp
test
mov
cmp
ss
fsubrp
push
cmpsb
es
cmp
fnsave
or
mov
or
push
adc
popf
add
ss
push
test
shrl
sub
and
sbb
loope
sub
sbb
add
sbb
mov
push
sbb
dec
out
in
jne
inc
sarb
ret
lds
mov
xorb
mov
or
push
mov
fcoml
fistl
jns
int
inc
adc
hlt
pushf
gs
sar
imul
sub
sub
cld
les
push
lock
cmp
or
pop
inc
inc
add
xchg
jae
icebp
or
jmp
dec
cmp
or
movsl
iret
inc
xchg
aaa
aam
aad
aad
jg
dec
ss
lret
pop
into
xor
mov
mov
push
pushf
call
or
insb
xor
insl
pushf
loop
sbb
cmp
imul
std
or
out
sbbb
dec
push
jg
cmp
jle
and
orl
int3
cmp
cmp
sub
push
movb
xchg
and
les
push
ror
jle
mov
loop
sub
dec
adc
je
mov
pusha
pusha
jnp
add
fs
inc
mov
xchg
xor
aas
loope
push
pop
dec
xchg
mov
cmp
push
sbbl
sbb
iret
xchg
notb
jle
push
jbe
out
popa
xor
ja
rcr
ja
fdivrs
rcll
ja
lret
sbb
lea
push
outsl
fbld
lcall
inc
jmp
sub
push
aas
and
mov
mov
imul
cmc
pop
cmpsb
push
pop
popf
sub
in
pushf
xor
outsb
loope
out
push
sbb
jnp
xchg
iret
stc
sbb
ds
mov
inc
dec
sub
in
or
pop
rorl
cli
lds
scas
sbb
jns
adc
data16
lods
xlat
adc
shll
in
into
adc
fimuls
pop
repz
sbb
int3
push
cli
imul
add
mov
mov
cmovo
lea
fbld
daa
pushfw
sbb
sbb
into
js
in
sbb
mulb
xor
push
inc
adc
aas
test
sub
out
pop
fcmovnb
xchg
jno
in
jmp
mov
minps
dec
jg
dec
pop
int3
out
push
aam
out
push
cld
inc
fidivrs
mov
into
push
xor
shl
jp
clc
stc
inc
cltd
add
pop
test
popa
jle
sbb
test
push
or
rclb
xchg
mov
pop
jne
jbe
fs
lret
cmpsb
push
rcll
bound
dec
out
lea
dec
negb
xor
aas
adc
daa
push
movsl
aad
mov
scas
arpl
outsw
mov
stc
test
incb
scas
ss
fadds
inc
jecxz
shrl
scas
out
and
add
vpinsrw
mov
pusha
adc
in
fcoml
insl
fs
mov
dec
sbb
pop
push
xor
stos
mov
cmp
stc
sahf
shlb
mov
pop
or
mov
ret
fiadds
jl
xchg
clc
int
mov
lods
inc
ja
jae
pop
and
inc
fsubl
sbb
and
addr16
add
inc
jno
xchg
cmp
mov
jns
xor
stos
repnz
lret
pop
negb
cmp
jp
adc
stos
xchg
test
repz
mov
mov
dec
enter
dec
push
in
add
pop
mov
jge
ss
pop
rol
fildl
scas
push
and
dec
test
outsl
jmp
mov
fidivs
jle
and
fdivrs
and
js
lahf
cmp
sar
arpl
push
fisttpl
sub
int
scas
hlt
jnp
mov
bound
scas
dec
orl
daa
xor
push
fcoml
aas
mov
cmpsb
inc
sti
mov
shrb
dec
jbe
add
jge
and
andl
and
xchg
jp
nop
push
mov
dec
adc
or
not
sbb
nop
roll
or
and
pop
testb
fidivrs
mov
cmp
xchg
mov
movsl
xor
pusha
lds
lcall
ret
pop
dec
mov
cld
sub
inc
cmp
xchg
movsl
in
mov
subl
orb
or
or
lods
lea
dec
orl
mov
mov
inc
sbb
arpl
dec
dec
push
insb
call
fidivrs
adc
pop
mov
test
sbb
mov
mov
inc
sub
and
or
je
test
aas
or
ret
jmp
cmp
xor
and
mov
xor
inc
push
dec
imul
sbb
cmp
in
sub
xchg
negb
mov
xor
xor
fs
jmp
ds
sbb
ds
jnp
cltd
xchg
jnp
pop
inc
mov
dec
pushw
sbb
cld
outsb
add
mov
push
aam
dec
out
js
and
enter
dec
jp
xchg
mov
addb
cmc
out
das
push
jge
data16
fwait
pop
xor
jno
xor
xchg
int3
dec
lods
mov
pop
cs
pusha
shrb
adc
pop
loope
aaa
and
xor
dec
sbb
xor
shll
fbld
mov
pop
ljmp
addl
jns
imul
call
sarb
pop
mov
fildll
jno
mov
mov
in
push
xor
mov
sbb
sub
push
sub
repnz
fcompl
fwait
push
push
addr16
sbb
rcrb
adc
arpl
mov
cmp
std
mov
mov
mov
sub
jmp
cltd
lret
xchg
fisubl
cmp
movsb
es
arpl
jno
leave
dec
and
shlb
lock
or
sbb
pusha
and
pop
push
outsl
xor
and
xor
xchg
xor
out
test
push
cmc
dec
enter
xor
out
aam
dec
dec
iret
jb
faddp
xor
mov
add
mov
cs
cld
inc
enter
mull
cmc
xor
pop
mov
jbe
mov
sub
nop
push
mov
inc
out
push
sahf
lret
push
clc
jbe
jmp
sbb
adcb
ficomps
fstl
in
add
mov
xchg
dec
jae
xchg
dec
out
je
fisubrs
int3
jl
test
dec
sub
adc
adc
andl
ja
outsl
xor
dec
das
adc
mov
arpl
pushaw
and
xor
jns
divb
and
imul
loope
ret
mov
mov
imul
sbb
lahf
cmpb
nop
int
mov
sbb
ficompl
fldt
xchg
lahf
scas
and
sbb
pop
inc
mov
jnp
cmp
push
sbb
and
ja
jp
inc
sbb
push
xor
lret
mov
dec
daa
jo
cltd
jle
ret
clc
icebp
cltd
inc
insl
repz
shlb
popf
mov
xchg
xchg
cmp
sbb
xor
and
pop
in
mov
cli
leave
adcb
sbb
out
xchg
pop
fstl
popa
testb
inc
out
jecxz
xor
iret
add
or
hlt
mov
imul
mov
in
sbb
cmp
mov
mov
pop
dec
ret
mov
add
cltd
int
mov
mov
lcall
inc
xchg
aam
sub
das
mov
mov
push
movsb
pop
insb
lret
sub
sub
test
in
push
out
push
into
movsl
int3
adc
cmc
cli
ss
lock
adc
iret
jecxz
pop
test
xchg
xchg
cs
lea
mov
into
jnp
pop
scas
hlt
adc
mov
xor
dec
push
repz
push
into
dec
add
or
xlat
dec
int
ss
xor
dec
popa
dec
push
in
jbe
into
into
je
and
pop
push
in
and
pop
daa
fnstsw
icebp
mov
movsl
lcall
cmpsb
into
out
adc
cwtl
mov
daa
cmp
mov
cs
mov
xchg
mov
mov
mov
mov
pop
jne
sub
popa
mov
add
lea
lock
outsb
repz
lahf
adc
pop
pop
les
cmpl
test
mov
xchg
or
mov
cmp
add
loop
sbb
xchg
cmp
int3
dec
or
pop
xchg
shrl
dec
imul
loopne
lds
xchg
or
enter
or
lcall
into
adc
jg
mov
mov
sbb
icebp
insl
add
jne
fs
mov
outsl
testb
scas
ror
cmp
cmp
mov
and
push
mov
pop
incb
in
outsb
mov
pop
push
repnz
or
mov
cmovbe
xchg
loopne
and
jo
icebp
out
test
pop
ret
into
pop
mov
mov
or
and
mov
mov
ret
xor
mov
mov
or
daa
adc
inc
imul
sub
aam
sbb
xchg
pop
cs
outsb
xor
jmp
inc
scas
loopne
mov
cltd
or
cs
push
pusha
cmpsl
sbb
mov
clc
stos
cmp
hlt
insb
or
cs
jmp
xor
pop
out
jnp
sub
and
aam
dec
scas
fcoms
lret
in
and
add
mov
push
daa
pop
dec
mov
xor
dec
mov
jmp
outsl
xchg
xchg
test
sarb
pop
fistps
sub
jmp
popa
sub
xchg
flds
ficomps
push
mov
inc
sarl
js
test
int3
sbb
repnz
inc
fisubs
cmp
fisttpll
push
cmp
dec
test
adc
mov
xchg
out
xchg
ret
sub
xchg
sbb
adc
lcall
cmpsl
mov
xor
jg
outsb
pop
jle
fistl
adc
and
xchg
sbb
and
xchg
nop
sub
sti
call
or
in
push
xchg
inc
sbb
outsl
int3
xchg
adc
les
insb
lcall
xchg
imul
jl
pop
repz
scas
inc
in
xchg
push
inc
or
lods
pop
or
outsl
mov
repz
jnp
fucomip
ljmp
scas
int3
lock
decb
cmp
test
outsb
dec
mov
sub
test
in
ret
mov
jmp
movsl
addr16
lock
das
stos
imul
sbb
call
mov
das
gs
fisttpl
cs
mov
iret
sub
sub
cmp
aad
mov
pop
dec
lahf
adc
sub
push
das
ss
mov
std
leave
aam
scas
aas
sub
xchg
fwait
xlat
cld
pop
fdivl
mov
push
stos
cmp
jmp
scas
lods
sub
lods
pop
push
popa
pand
pop
cli
outsb
lds
mov
xor
gs
fwait
mov
cld
xor
mov
aad
mov
hlt
ds
xor
cmp
mov
add
cmp
mov
mov
fldt
mov
test
imul
stos
mov
loop
sbb
and
int3
enter
xchg
sub
fnstsw
iret
gs
pop
aad
sbb
lret
push
ret
dec
aam
jl
out
or
mov
xor
addr16
pop
dec
or
cmc
sbb
adc
test
add
lods
xchg
mov
mov
fildll
fcoms
dec
ss
mov
mov
mov
mov
repnz
fisubrs
bound
mov
mov
sahf
jmp
or
cmp
divl
or
jns
int
popa
xchg
in
clc
jmp
dec
fcomp
in
or
arpl
sub
bound
jg
mov
sbb
pop
mov
sbb
sub
cmovno
sbb
sbb
sahf
mov
bsr
mov
movsl
jo
mov
fucomip
bound
inc
inc
rol
repnz
jecxz
xchg
jmp
adc
loopne
adc
test
daa
xchg
jae
inc
mov
cwtl
in
mov
sub
xor
push
dec
mov
js
mov
aaa
scas
sarl
ret
cmpsb
cmp
xchg
mov
inc
sbb
in
fcmovnbe
jp
fsubrs
mov
sbb
pop
or
popf
bound
enter
sahf
push
aad
das
enter
cli
push
pop
cmp
repz
add
scas
enter
lret
repnz
inc
jo
arpl
insl
inc
sub
dec
add
in
jle
andl
xor
outsb
ja
arpl
adc
cs
aam
mov
ljmp
movsb
jp
test
mov
push
push
cltd
sbb
xor
jmp
repz
pop
out
jno
push
mov
mov
sar
stos
movsl
xor
xor
loopne
inc
mov
mov
mov
idivb
cmp
sbb
push
sub
movsb
xor
int
mov
aam
cmp
mov
rorb
vmovupd
rcll
dec
ljmp
pushf
lahf
out
xor
cld
imul
lret
cmp
mov
dec
add
cmp
mov
adc
push
int3
movsl
int3
ret
imul
cwtl
jp
xchg
mov
mov
repnz
aas
cmp
and
or
mov
popa
popf
test
sarb
push
and
push
cmpsl
sub
add
cmpsl
testl
sub
lods
sbb
mov
hlt
lods
adc
add
adc
fwait
pop
das
xor
push
movsl
mov
mov
dec
dec
sub
xchg
jbe
inc
aad
push
push
and
dec
xchg
mov
cmp
or
aaa
cmpsl
add
mov
push
movsb
push
leave
push
movl
and
rcr
testb
jae
leave
inc
xor
xchg
loop
xor
xor
jmp
dec
cmpsb
fdivr
mov
insb
in
inc
mov
xchg
and
test
hlt
xor
pop
jno
roll
inc
jno
add
jo
std
popf
jp
cmp
inc
into
cmpsb
mov
pop
inc
pop
jecxz
jecxz
push
and
and
gs
sbb
mov
pushf
dec
scas
jmp
push
adc
mov
jmp
ret
cmp
movsb
add
outsb
lods
pop
arpl
push
inc
push
in
fildll
inc
hlt
aad
jns
mov
cmp
rorl
jns
push
jnp
dec
dec
inc
jle
sub
and
hlt
aam
mul
test
push
mov
jmp
adc
cmp
cmp
movsb
inc
jp
push
test
fcoml
inc
dec
test
or
fcoms
data16
lahf
out
or
sub
mov
stos
mov
sub
fbld
cmp
stos
dec
neg
test
stos
dec
jo
xchg
and
mov
or
add
fidivl
ja
les
pop
inc
mulb
xchg
sbb
stc
loop
std
aam
out
adc
bound
xor
cmpsb
and
aam
add
xchg
jl
fildll
nop
sbb
addr16
mov
pop
jge
sub
lahf
test
outsl
into
je
mov
leave
repz
and
xor
popf
hlt
je
mov
adc
inc
xor
cmp
lods
je
clc
fnstsw
out
addr16
orl
sub
aaa
test
int
test
add
mov
cli
add
roll
adc
inc
mov
outsl
fistpl
test
push
sbb
mov
hlt
mov
xor
int3
std
lret
or
dec
cmp
mov
test
inc
sub
mov
in
fsub
rolb
into
dec
mov
cmp
or
daa
stc
mov
std
sbb
xchg
dec
arpl
int
decb
les
push
add
loop
enter
mov
mov
and
out
xchg
and
pop
adc
into
pop
mov
inc
sub
mov
es
lahf
fsubrl
insl
mov
xor
repz
pop
dec
inc
fnop
cmp
adc
mov
xor
xchg
or
xchg
aad
mov
mov
adc
rorb
cmp
lods
andl
lods
sbb
lret
shlb
sbb
adc
sbb
xor
sti
addr16
push
cmc
sbb
fdivp
clc
lcall
push
pop
mov
xchg
xlat
or
jo
add
fwait
addb
stc
pushf
jnp
sarl
in
pop
and
pop
cwtl
push
pushf
xor
out
push
mov
mov
subl
ds
mov
idivl
nop
idiv
lret
pop
add
and
aaa
das
dec
xor
mov
pop
mov
xchg
jne
xchg
jl
xchg
dec
outsb
sbbl
ljmp
cs
xlat
iret
jle
shll
push
hlt
pushf
test
inc
sub
xchg
add
mov
in
jb
or
push
mov
push
push
sbb
add
mov
cmpsb
imul
push
movsb
lea
pop
cwtl
iret
mov
inc
push
mov
lcall
daa
cltd
aaa
mov
xchg
sbb
repz
into
xchg
or
jge
or
les
mov
push
cld
gs
mov
inc
mov
popf
xlat
and
pushf
xchg
rcrb
mov
adc
movsl
add
out
pop
adc
inc
pcmpeqb
sub
inc
mov
push
in
lods
xchg
adc
test
es
mov
fldl
divl
xor
sub
lret
popa
mov
test
in
addr16
cmpb
ds
push
xchg
inc
leave
mov
fiaddl
mov
sarl
sub
lods
movsb
cltd
stos
adc
out
not
and
ljmp
and
outsb
adc
and
dec
rcl
adc
ss
int
mov
cmpsb
cli
mov
jno
pop
jmp
or
xor
cwtl
ljmp
cs
dec
cli
popf
jno
mov
mov
mov
ret
sub
adc
lea
daa
dec
fidivs
subl
sub
xchg
lds
xor
dec
or
pop
and
xor
inc
sbb
mov
dec
push
dec
lock
inc
outsl
and
xor
std
dec
test
ret
loop
jo
inc
out
call
repz
xor
fucomip
scas
pop
imul
fists
leave
jmp
cli
dec
lahf
adc
push
gs
push
sti
jno
dec
fistpll
notb
or
sub
shl
pusha
push
jp
ret
cmp
loopne
adc
out
mov
sahf
jno
and
loope
in
cmp
sbb
gs
adc
aas
adc
adc
adc
cmp
cmp
push
fldt
imul
loop
mov
mov
inc
clc
clc
xchg
pop
xchg
imul
fcomps
hlt
adc
subl
loope
fldt
xchg
lds
mov
push
mov
inc
cmpb
mov
push
push
aaa
fwait
stos
dec
add
sbb
or
popa
aad
repnz
mov
ss
sbb
popf
in
dec
ret
outsb
sti
scas
fildll
fwait
cmp
into
fisubrs
leave
xchg
xchg
push
mov
cmp
leave
cwtl
xchg
cld
cwtl
mov
sub
jns
pop
int
pop
cmp
mov
mov
xor
daa
mov
mov
out
stc
aad
jge
std
ret
sbb
fwait
sub
jp
addr16
mov
cwtl
xchg
push
add
loope
shrb
inc
or
sub
sbb
xchg
inc
lock
fdivs
scas
shrl
pop
inc
popf
sti
jno
lods
hlt
rcrl
cmp
push
sbb
mov
adc
xchg
popf
add
xor
jnp
movl
dec
mov
add
sub
jbe
repnz
push
xchg
test
jno
dec
ljmp
xor
pop
mov
nop
int3
mov
mov
cmpsb
mov
lcall
setg
and
jl
popa
jb
cs
test
loope
repz
jg,pn
lea
xlat
sbb
xchg
outsb
jecxz
lahf
xchg
flds
mov
testb
daa
push
mov
push
pop
mov
aas
push
movsl
lods
mov
imul
sub
in
cmp
mov
pop
mov
fsubrs
cmp
repnz
ror
movsb
lret
xchg
arpl
movsl
pop
lds
lcall
mov
mov
xchg
insl
jae
jbe
leave
enter
hlt
pushf
sbb
aas
adc
cmp
inc
into
push
pop
arpl
loop
cli
pop
pop
dec
insb
lods
add
ja
cmp
pop
adc
inc
test
enter
push
mov
fwait
push
cmp
mov
mov
stc
push
cmpsb
jle
in
push
mov
aas
insl
mov
addr16
xchg
lahf
hlt
cli
or
pop
imul
arpl
push
rclb
or
add
lock
mov
pop
add
xchg
in
jecxz
push
add
cwtl
push
and
xlat
pop
and
push
js
or
jg
push
insl
xlat
or
outsb
adc
fsubrl
shll
testb
xchg
testl
add
adc
and
xor
dec
mov
int
mov
pop
xorb
jo
fcomps
sub
xchg
fidivrs
lret
inc
jnp
jae
mov
test
sub
and
pop
xor
mov
mov
ret
scas
xorl
jbe
pushf
xchg
je
push
in
int3
mov
ljmp
mov
mov
lods
mov
out
sub
pop
jmp
aam
push
cmp
arpl
sar
sar
dec
or
das
ss
pop
movsb
shrb
xor
jg
jb
in
stos
out
xor
add
add
sbb
ds
adc
aas
pop
sub
ret
stos
outsb
xor
fstp
sub
mov
or
loopne
dec
arpl
sbb
mov
arpl
adc
stc
fwait
fwait
mov
aaa
jg
stc
enter
inc
push
loopne
inc
xor
mov
movl
sarb
out
cli
fsubl
pop
adc
jae
les
imul
test
mov
dec
into
xchg
push
ljmp
call
add
mov
dec
mov
mov
push
pop
loop
push
dec
out
lock
jne
push
rorb
call
jmp
dec
sbb
and
dec
pop
mov
push
arpl
test
fsubp
push
xlat
jmp
sbb
add
or
xchg
push
out
jo
mov
lds
inc
test
push
jg
mov
insb
loope
ja
mov
xchg
cmp
mov
push
mov
lock
pop
fs
mov
inc
into
or
inc
loope
leave
sub
sbb
xor
stos
push
pop
xor
or
cmp
out
rolb
pushf
outsl
mov
das
aad
es
popa
jae
sub
adc
pmulhw
mov
mov
or
out
adc
fwait
inc
iret
mov
cmp
push
push
cmp
sub
icebp
xchg
dec
int
sub
xor
inc
adc
jo
push
ja
dec
jle
gs
mov
lret
xchg
adc
scas
and
mov
xor
cmc
mov
inc
addr16
pop
add
outsb
lods
imul
adc
and
daa
xor
pusha
repz
mov
insl
in
shl
push
push
and
pop
outsl
bound
cmp
mov
into
mov
out
mov
repnz
cwtl
add
inc
add
jno
dec
clc
fs
sub
fmuls
std
js
pushf
adc
inc
fidivrl
sbb
ds
aas
movsb
test
xor
pop
add
test
repz
push
or
cmc
cmc
cmpsl
leave
jae
nop
fistps
mulb
lds
pop
stc
push
lock
sbb
inc
or
cmp
jge
fs
lret
lcall
mov
outsb
and
xor
gs
lret
adc
insl
jl
xor
mov
adc
sbb
mov
push
mov
inc
and
or
cmp
lahf
mov
incl
stos
mov
sub
inc
subl
repz
popa
inc
add
adc
push
dec
inc
lock
cmc
mov
imul
or
push
push
xchg
out
lret
testl
mov
ficompl
cmc
loopne
ja
rclb
mov
adc
jp
pop
mov
mov
push
cmp
push
lahf
xor
jge
cmpsb
fcomp
ret
ss
dec
loopne
aad
in
nop
cld
in
cwtl
sub
cwtl
jg
les
xor
push
outsb
xlat
mov
movsb
push
cltd
xchg
out
and
mov
scas
mov
aaa
add
out
fucomp
jecxz
in
jae
mov
fnstenv
pop
inc
sub
icebp
enter
xchg
fidivrl
xor
dec
out
inc
lods
xchg
xor
dec
xor
insl
mov
add
add
and
inc
sbb
xor
xchg
sbb
pop
mov
nop
pop
test
test
xchg
add
pusha
lahf
pushf
cmc
mov
cltd
lcall
mov
xchg
mov
shll
lahf
and
mov
fsubl
cld
dec
add
push
out
fildll
xchg
movsl
mov
ja
arpl
clc
mov
ljmp
push
jae
cmpsl
xchg
stos
lcall
xor
imul
fs
or
cmp
xchg
xor
lea
xchg
push
into
lock
shl
in
mov
adc
or
fwait
sti
xchg
jmp
subb
sub
add
jne
in
xchg
inc
int3
cmc
mov
adc
ret
jg
fdivrl
cmpsb
sbb
imul
enter
lods
or
push
inc
xor
imul
mov
pop
andl
sbb
mov
mov
push
pop
punpckhdq
mov
mov
push
aad
mov
scas
and
mov
xchg
jl
jmp
insl
pop
inc
ds
mov
and
imul
aaa
in
out
adc
cmp
xchg
or
mov
cld
mov
testl
sub
nop
lcall
mov
push
or
mov
pop
add
jno
or
rorl
insb
ret
jae
rcll
dec
lods
cmc
cld
mov
daa
fs
insb
stos
mov
stos
mov
mov
dec
scas
out
add
shlb
pop
xor
sub
enter
idivb
ret
xor
adc
mov
jbe
ja
dec
cmp
test
mov
adc
pushf
mov
mov
jl
cli
jne
fidivrl
fnstcw
iret
shl
xlat
xor
pop
pop
fs
sti
out
test
js
dec
inc
jle
cmpsl
inc
stc
sbb
dec
jl
push
sbb
fwait
inc
shlb
int
repnz
out
cmc
test
pop
testl
addb
fstl
orb
sub
sbb
jbe
xor
xlat
and
test
pop
addr16
pop
push
outsb
jnp
nop
lret
dec
jo
push
sub
mov
out
mov
pop
jns
nop
insl
xchg
add
cmpsl
sub
ds
call
outsl
xchg
add
leave
jecxz
in
xchg
popa
movsb
ds
cmp
pop
fs
call
fimull
scas
aaa
jne
jbe
ds
lock
push
sbbl
repnz
and
lock
cmpsl
int
cmp
ss
ds
adc
cmpsl
stos
xchg
jbe
push
lods
xchg
cwtl
je
je
xor
lahf
jecxz
xorl
jnp
sbb
into
ljmp
add
cmp
movsl
ja
inc
pusha
sbb
mov
jg
cmc
mov
enter
sub
test
add
rolb
cld
pusha
lcall
ret
pop
pop
jle
aas
xchg
dec
sub
rclb
sbb
js
jg
push
rolb
push
movsl
push
insb
data16
xchg
inc
cltd
out
aad
cmp
fdivrp
xor
jae
div
or
test
mov
pop
sub
pop
loope
and
jp
xchg
cmp
hlt
xchg
xorl
and
call
mov
movsl
in
push
mov
aas
mov
xlat
pop
bound
imul
jno
daa
lret
movsb
sub
jecxz
pop
xchg
cmc
jmp
jo
sub
xchg
rclb
fisubl
std
rolb
call
and
jmp
fstpt
pop
pop
div
addb
stc
dec
mov
push
push
sub
in
rclb
outsl
dec
inc
ljmp
jb
jbe
mov
nop
and
sbb
and
not
mov
sub
cmp
cmp
mov
mov
cs
jb
cmp
in
pop
call
add
ret
lock
cmp
cmp
je
scas
mov
sbb
jmp
leave
push
xor
xor
cmc
movntq
inc
or
cltd
int
sub
push
cwtl
js
mov
and
cmp
sub
and
xchg
xor
scas
out
add
mov
mov
or
mov
cmp
cs
push
imul
sbb
test
add
sahf
jne
leave
xchg
cwtl
movl
mov
xor
je
or
imul
push
jp
daa
rorb
fisubl
mov
popl
or
push
sbb
lret
in
mov
and
jge
movsb
out
mov
notl
mov
jl
adc
xchg
xchg
cs
js
and
mov
add
lret
into
xor
nop
movsl
iret
sbb
aas
stos
adc
push
lods
lcall
sub
jb
mov
push
or
movsb
sbbb
cli
sbb
jo
in
adc
imul
pop
jl
xchg
push
pop
fnstenv
mov
std
ljmp
adc
add
xchg
and
push
jbe
int
sub
les
callw
rorl
mov
insb
inc
popa
pop
add
stc
xor
fldt
jl
mov
pushf
pushf
cs
movsl
cmpsb
mov
sti
lods
cli
xchg
inc
movsl
arpl
push
inc
adc
xchg
mov
push
fsubs
push
jp
cwtl
adc
cmp
ljmp
adc
arpl
lods
sub
lock
test
shll
mov
div
add
in
sarl
inc
les
adc
out
dec
in
cmp
lods
ror
loope
fadds
imul
cld
popf
or
test
push
sar
cmp
push
daa
xor
mov
addb
loop
out
mov
push
or
ljmp
in
int3
fsts
pop
ret
mov
dec
in
push
dec
cld
shlb
stos
and
jg
aaa
in
push
mov
ja
pop
inc
add
cmpsb
jl
cmp
lahf
and
mov
jbe
jbe
dec
lds
aas
les
jbe
fdivrl
xor
adc
mov
leave
addr16
jo
and
mov
jecxz
or
mov
xchg
add
mov
xchg
cmc
pop
dec
mov
hlt
cld
cwtl
pop
mov
mov
pop
fstpt
js
inc
test
mov
sbb
int3
loopne
test
int
icebp
aaa
rclb
not
das
push
pop
sub
cmc
mov
popf
cmpsl
aam
pop
repnz
das
fisttps
out
jecxz
pop
xor
je,pn
loop
inc
and
fidivl
and
daa
ja
dec
insb
xorl
jnp
cld
in
pop
adc
jo
mov
shll
mov
ja
pop
and
mov
pop
cmpsl
scas
je
or
mov
jge
add
jae
dec
scas
pop
mov
lock
pop
jo
gs
dec
scas
dec
jae
sbb
stos
inc
je
ret
aad
ret
out
jmp
mov
dec
enter
cmp
or
shlb
lock
cmc
xor
or
int
out
into
dec
jno
pop
and
int3
cmp
mov
add
popa
popa
pop
push
repz
sbb
dec
cmpsl
test
cmpsb
inc
mov
icebp
push
sbb
inc
push
arpl
rorb
xchg
dec
push
lcall
ljmp
or
in
sbb
mov
add
pop
and
jg
arpl
sahf
insb
loope
jb
jo
call
pop
xlat
lcall
or
fnsave
les
adc
popf
mov
or
jmp
lcall
pop
jl
xor
or
jl
cmp
out
xchg
xchg
xor
mov
and
loope
mov
fcmovb
mov
in
sub
lahf
shl
mov
fdiv
pop
jl
xor
jle
mov
dec
dec
xor
adc
lock
fldl
adc
push
add
inc
push
add
test
mov
push
xchg
inc
xor
lcall
cmp
cli
or
enter
xchg
lcall
and
fs
add
jge
pop
imul
frstor
in
rorb
lods
in
inc
lods
mov
xchg
adc
pop
repnz
cld
xlat
cli
test
jl
mov
sub
popf
xchg
sub
fmull
cmp
mov
and
test
loopne
sahf
mov
test
add
stc
add
and
ljmp
ljmp
lods
hlt
push
and
sub
pop
push
out
movsb
pushf
jle
add
incb
xchg
not
sbbl
adc
mov
loopne
mov
rcr
inc
mov
xchg
jne
int
insl
aam
and
int
mov
mov
or
fucomi
xchg
xor
pop
sbb
imull
xchg
shrl
and
mov
pop
push
xchg
push
pop
js
dec
mov
insb
outsb
xchg
sarb
mov
or
inc
stc
ds
clc
lret
push
add
mov
cld
scas
add
pushf
scas
orl
jl
in
sbb
or
ret
mov
jns
or
das
fdivl
ljmp
add
pop
jb
lahf
mov
sub
scas
add
out
pop
add
aas
sub
decb
scas
or
rolb
mov
dec
into
pop
xchg
scas
out
adcb
jp
cltd
gs
cmpsb
cltd
cwtl
mov
je
or
mul
inc
rcrb
and
xor
adc
ret
dec
dec
and
test
jg
rcll
loopne
jns
sub
dec
stos
dec
add
inc
cmp
imull
insb
ret
lea
outsl
pop
testb
or
xchg
out
jbe
inc
cmpb
inc
jns
adc
imul
or
lods
sbb
lahf
loopne
cmp
mov
mov
cmp
jno
lret
mov
mov
stos
mov
xchg
shll
xchg
xchg
xor
ss
mov
iret
and
lods
cmp
inc
jp
inc
jmp
fcomp
in
jne
aam
popa
push
lods
out
ljmp
mov
adc
or
je
lahf
not
aad
and
repz
in
mov
mulb
pop
fisubl
xchg
cmc
ljmp
push
adc
pop
and
xchg
mov
xchg
loopne
fdivl
mov
fcomps
fwait
addr16
xchg
pusha
add
negl
ret
lods
mov
rdtsc
push
xlat
lcall
pop
cmp
pop
dec
inc
loop
test
in
loopne
sub
push
xchg
add
dec
mov
stos
aam
sbb
movsl
adc
xor
jp
or
into
fwait
push
cld
inc
imul
jl
adc
shll
pop
and
xchg
testl
mov
dec
adc
cmpsl
mov
xchg
xor
inc
test
dec
sub
call
xchg
loope
mov
pop
in
push
add
pushf
popf
int
dec
in
jnp
adc
fildl
test
pop
stos
sbb
mov
in
imul
je
pop
cmp
xchg
int
pop
notl
fistl
sbb
sub
das
inc
mov
rorl
lock
insl
out
lds
pop
and
inc
xor
lahf
adc
jecxz
mov
mov
push
adc
sar
push
mov
pop
cli
lods
loopne
test
daa
cmc
jne
inc
add
stos
jb
add
jle
outsl
in
sub
jne
sahf
push
mov
xor
dec
mov
dec
pushf
dec
add
das
ret
lods
ret
add
add
adc
mov
mov
xchg
xor
pop
mov
jnp
inc
popf
dec
cmp
or
dec
fisubrs
mov
adc
out
decb
push
jle
mov
dec
sarl
push
imul
popa
pop
pop
mov
jo
mov
pop
cmp
and
fsubs
xor
mov
movsb
pop
xlat
adcb
push
out
js
inc
pop
jmp
lock
sbb
and
mov
lret
aas
bound
xchg
sbb
inc
jg
loopne
mov
outsb
fildll
popa
sar
cmpsb
in
lcall
jnp
es
int
cwtl
jns
sub
pop
movsb
mov
add
cmp
imull
lret
subb
mov
pop
and
xchg
inc
jge,pn
mov
data16
stos
ljmp
icebp
sbb
outsl
push
ljmp
outsb
inc
sbb
int
cmpsl
es
insl
lds
aaa
and
decb
and
jmp
pop
nop
mov
lret
stos
aam
push
int
scas
add
xor
jge
and
inc
int
outsb
adc
and
sbb
xchg
add
mov
push
out
ja
in
jno
les
adc
popa
je
inc
sub
mov
push
mov
sub
or
aaa
frstor
dec
int3
insl
lock
scas
and
jne
add
es
fnstenv
das
jl
cmpsb
icebp
adc
jge
mov
jl
fimuls
or
fnstenv
les
fucomp
jmp
adc
mov
loope
mov
fwait
xchg
push
and
scas
dec
pop
mov
push
xor
mov
mov
nop
ficomps
dec
inc
fnsave
mov
scas
movsb
cmp
jl
jp
xchg
adc
jmp
scas
push
xchg
inc
xchg
sbb
pop
jae
push
inc
jmp
inc
cmp
sbb
sbb
dec
inc
fbstp
adc
jae
xor
call
adc
sbb
xchg
lret
push
mov
xlat
in
ret
sti
cmp
movsb
xchg
cmp
sbb
mov
push
jno,pt
xlat
imul
push
dec
mov
js
push
pop
outsl
ja
aaa
xor
or
or
es
shll
lret
pusha
repz
pop
sti
and
movsb
jae
dec
lret
nop
shlb
or
test
jmp
and
and
arpl
cld
es
dec
je
push
pop
addr16
imul
hlt
call
or
cmpsl
xor
fimuls
mov
and
cmc
mov
cld
stos
aas
sbb
mov
mov
scas
loope
push
sbb
lods
dec
and
jnp
push
repnz
lock
jmp
inc
scas
sti
push
cmc
mov
hlt
repz
inc
pop
dec
outsl
lahf
sbb
jg
push
xor
rorb
mov
or
dec
int3
lcall
lds
inc
add
sub
popa
insb
adc
bound
push
out
sbb
and
push
in
mov
test
add
icebp
add
sbb
cs
or
decl
test
pusha
cli
jnp
repz
movsb
das
sahf
lea
inc
mov
scas
cwtl
jns
addr16
cmp
insb
sub
test
jecxz
mov
fdivs
and
xchg
ss
sbb
es
jb
cmpsb
jno
push
andl
push
fcomps
or
std
cmpsb
pop
or
jecxz
mov
push
fstpl
icebp
xchg
and
xchg
push
pop
xor
sti
dec
jg
sub
mov
out
jne
dec
aad
fiadds
sub
nopl
lret
dec
jmp
mov
ret
jp
dec
js
mov
test
push
jecxz
pop
or
push
push
mov
es
xlat
xor
sti
jae
jg
or
ss
lcall
mov
push
push
sub
repz
add
or
push
aad
ja
in
movsb
mov
xchg
int
jmp
imul
aam
jae
popf
add
mov
xchg
sbb
pop
pushf
mov
xor
dec
in
pop
je
xchg
enter
push
pop
and
sbb
sub
and
lds
movsb
repz
jge
mov
mov
mov
testl
mov
cmpl
ret
push
mov
iret
cmp
inc
push
and
das
dec
cmp
arpl
inc
or
dec
xlat
add
jo
ja
lret
pop
xchg
xchg
jge
jb
pushf
dec
push
call
in
and
pop
stc
in
pop
push
mov
out
push
lock
cmc
jno
jno
cmp
addr16
sbb
pusha
test
cmp
je
adc
outsb
loopne
std
mov
and
adc
call
lret
adc
loop
fistl
gs
in
cmp
stc
repz
mov
push
test
cmp
jl
test
daa
mov
movsb
out
mov
negl
or
xor
xor
aaa
nop/reserved
adc
loopne
xor
enter
aas
push
in
testb
and
or
jnp
adc
sbb
jbe
adc
dec
shlb
push
call
jg
out
pop
cmp
js
ret
pop
aam
mov
mov
add
mov
or
sub
sbb
mov
xor
adc
push
in
icebp
push
inc
add
stos
cmc
jbe
lret
xor
jnp
lea
add
push
jge
scas
sarl
jnp
jne
push
inc
shlb
stc
jnp,pn
adc
adc
daa
inc
adc
dec
int
pusha
outsl
lret
xor
add
out
in
in
mov
mov
and
ret
xor
push
sahf
jne
xor
lds
jne
cmp
out
mov
push
sbb
xchg
dec
cwtl
clc
mov
std
mov
push
jle
push
cmp
xor
cmp
inc
nop
in
mov
sahf
jns
adcb
xchg
mov
in
push
mov
aas
xchg
std
adc
fs
or
cmp
jb
aad
xlat
shll
mov
adc
add
or
mov
and
paddusb
mov
and
mov
push
sub
subb
idivl
les
mov
xor
xchg
mov
xlat
out
in
fwait
pop
mov
lcall
popf
arpl
xchg
sub
testb
inc
pop
arpl
jl
es
and
fneni(8087
ficomps
push
xchg
jl
cs
mov
cmp
or
push
mov
out
cwtl
ret
add
sub
sti
dec
insb
fdivs
repz
sub
pop
clc
xor
or
lods
inc
push
fiadds
pop
mov
dec
lcall
data16
push
ds
and
sbb
or
jmp
mov
dec
pop
fmull
sarl
outsl
dec
fnsave
inc
sub
dec
mov
ret
push
or
in
loop
call
pop
rolb
inc
sarb
cmc
inc
pusha
adc
fisubs
stos
iret
dec
cmc
es
ret
fxch
mov
sub
add
cwtl
dec
jo
rorl
fsts
lret
in
dec
or
or
ds
popf
sbbb
or
loope
xlat
nop
loop
and
pop
loope
fldcw
into
rolb
pop
mov
rolb
rorb
out
mov
xor
mov
sbb
cs
jns
cli
push
and
loop
loope
mov
mov
xchg
pop
or
mov
mov
and
sub
out
in
mov
ds
mov
or
cmp
sub
int3
adc
push
push
dec
popf
js
out
or
push
or
popf
out
mov
aaa
popf
out
nop
cwtl
xchg
fnsave
dec
aaa
add
mov
pop
jnp
xor
jo
out
inc
aam
js
test
mov
enter
popf
in
xchg
pop
movsb
jle
xchg
xchg
mov
xchg
pop
jb
leave
jmp
xlat
arpl
jmp
mov
divl
dec
imul
mov
mov
push
sub
lods
stos
pushf
imul
in
mov
push
shl
inc
outsl
push
adc
je
ret
insb
jo
jns
addr16
adc
mov
jle
mov
pop
or
out
sub
scas
dec
dec
popw
sbb
mov
ja
xchg
and
pop
lods
into
add
iret
ja
aad
cmpsb
cmpb
loopne,pt
mov
jne
insl
iret
ret
je
sbb
loop
jno
cmc
adc
push
jecxz
add
mov
addr16
and
shlb
inc
mov
adc
lahf
mov
cld
lods
das
fadds
sub
inc
and
mov
xchg
mov
stos
push
aam
fucomip
mov
mov
sub
jne
es
loopne
daa
mov
inc
sbb
jns
sbb
inc
ret
sbbb
sti
testb
pop
mov
cmc
or
pop
add
mov
adc
in
stc
arpl
test
es
xlat
movsb
clc
push
jbe
or
xchg
pop
mov
lds
sbb
mov
push
outsl
dec
inc
push
in
js
lds
push
imul
xchg
data16
cmp
mov
mov
mov
mov
mov
cmpsb
arpl
lret
xorl
das
sahf
add
in
sbb
ja
and
sub
push
or
and
pop
and
das
stos
scas
in
call
jecxz
push
push
xlat
inc
das
adcb
sub
mov
mov
push
lcall
and
aam
test
std
xchg
lods
jl
mov
push
mov
subb
adc
push
mov
shl
or
test
mov
adc
cmpb
adc
fidivs
enter
mov
and
add
sub
and
sbb
jge
rep
insb
out
mov
and
iret
ljmp
jmp
lea
pushf
repnz
add
icebp
sbb
cmpsb
popa
push
fstl
mov
and
add
ss
pop
and
jb
inc
fsub
lret
ret
ret
lret
add
loope
les
adc
in
aaa
sbb
call
lret
in
pop
sub
adc
mov
in
daa
jecxz
imul
imul
sbb
cltd
jo
inc
add
pop
mov
mov
push
shlb
push
scas
int3
cmc
lods
push
sarb
rol
mov
push
sub
out
xorb
dec
mov
je
testl
xchg
xor
and
lss
je
push
hlt
cs
or
sbb
leave
add
mov
imul
fimull
stc
mov
mov
in
pop
mov
shll
cli
jmp
pop
lods
ss
jmp
ret
ds
das
pop
jno
mov
enter
imul
lahf
mov
flds
int
mov
pop
fistps
aas
jmp
inc
xchg
insb
mov
jno
out
sarb
int3
repnz
sub
arpl
stc
cmpsl
xor
or
xchg
int
dec
or
inc
sbb
outsl
jmp
sbb
out
jge
inc
cli
jbe
sbb
hlt
mov
or
mov
lret
mov
mov
enter
or
fwait
icebp
dec
cmp
lods
aas
push
sti
call
push
mov
repz
mov
cld
les
std
movsl
mov
cmp
xchg
loopne
repnz
into
push
push
fmuls
dec
xchg
ret
jne
jg
mov
stos
leave
sti
jg
lret
lret
xchg
out
into
dec
pop
ret
add
arpl
aaa
sbbb
pop
inc
cmp
pop
xlat
in
int3
xor
je
fcompl
outsl
push
js
and
cmpsl
mov
mov
cmp
rcll
xor
clc
aas
add
mov
rol
add
pop
or
inc
imul
das
adc
repz
inc
pop
cwtl
out
addr16
jl
pop
inc
test
pop
lret
jnp
adc
ret
jne
clc
inc
cmp
cld
mov
inc
mov
ss
mov
es
lcall
jg
pop
fmul
cmp
pop
mov
inc
push
push
xchg
subb
jnp
or
xchg
mov
dec
scas
mov
sub
sub
or
fnstenv
aam
sub
jo
mov
outsl
mov
push
mov
decb
aas
mov
ljmp
lret
pusha
rclb
pop
fidivrl
sahf
shr
ret
sbb
inc
cmp
pop
mov
pop
adc
dec
xchg
inc
outsb
cmp
lods
jae
pop
inc
pop
push
jle
test
push
xor
xor
push
xor
jl
fnstsw
jmp
mov
nop
repz
adc
cmp
push
and
xchg
xor
cmp
dec
lds
sub
testl
xor
sub
sbb
in
lret
mov
popa
xchg
insb
push
cmpsb
inc
or
pop
mov
fidivl
sub
in
cltd
jae
mov
dec
lret
rcrb
jmp
push
leave
test
inc
cli
cmpsl
jp
pop
jns
pop
test
sbb
jmp
je
popa
jge
pop
xchg
mov
in
dec
imul
and
sub
jo
loopne
inc
push
pop
jge
jo
and
lods
fadds
repnz
js,pn
stos
add
xchg
aam
mov
push
loopne
cmp
rcrb
xor
cmp
subl
cmp
inc
adc
daa
jp
outsl
pop
push
lods
out
add
jl
pop
push
mov
fmul
mov
cmp
push
jl
les
aad
stos
adc
push
mov
ja
ds
jg
daa
jg
fs
aad
js
xor
repz
repnz
icebp
arpl
cs
push
jae
into
roll
dec
dec
outsl
ljmp
lea
sti
add
jl
fistl
aad
lock
sub
inc
xchg
test
imul
dec
pop
jp
mov
dec
shll
mov
or
sarb
jb
sbb
ja
stos
push
dec
mov
mov
js
pop
jg
mov
jo
push
adc
sbb
daa
jo
sbbb
jne
xchg
lds
adc
ds
add
aas
push
sti
in
test
mov
fldt
add
test
mov
sti
mov
clc
jl
int3
mov
inc
dec
scas
sub
sbb
add
inc
sub
fisttpl
imul
xor
movsb
mov
xchg
xor
clc
dec
add
bound
stos
adc
sbb
mov
mov
mov
sub
inc
arpl
sub
push
jl
xchg
lret
add
xchg
orl
inc
in
jmp
or
push
stos
pop
pushf
mov
out
mov
push
adc
popl
mov
cmp
cmp
arpl
fld
mov
insl
lds
and
push
pop
jnp
imul
fwait
ds
lcall
mov
gs
sbb
data16
fdivp
xor
js
pop
pop
cmpsb
stc
fadds
stos
cwtl
adc
xchg
insl
pop
or
stos
mov
mov
shlb
push
imul
outsb
sbb
js
push
jae
pop
jle
inc
inc
popf
jp
gs
or
mov
ja
jecxz
dec
xlat
std
dec
add
lock
in
xchg
inc
in
imul
repz
sbb
loope
in
mov
add
xor
movsl
stc
inc
add
int3
sub
cwtl
fucomip
rorl
push
mov
fildll
mov
loope
push
push
add
arpl
push
scas
adc
notb
ss
cmc
insl
sub
icebp
pushf
pop
xchg
mov
lahf
mov
add
neg
into
rcrb
sahf
and
mov
jnp
and
mov
mov
pop
lea
push
sbb
pop
jns
cwtl
scas
fcoml
xor
cmp
or
out
push
data16
sub
pop
xchg
jne
jmp
xchg
push
negl
lods
enter
or
lods
clc
push
fisttps
imul
dec
repnz
lret
adc
mov
cmp
mov
xchg
pop
popf
mov
xchg
sarl
xor
ss
dec
ret
mov
in
jne
fldl
out
fdivl
bound
mov
jle
dec
mov
call
sbb
sub
loope
xor
fisubl
pop
stc
push
add
lahf
and
pop
adc
mov
cmp
xor
fdivr
imul
push
imulb
nop
jno
shl
pop
push
sbb
iret
jecxz
cmp
inc
mov
aad
xor
gs
dec
mov
mov
mov
mov
mov
iret
mov
xor
scas
inc
into
jg
faddl
movsl
clc
stc
stos
hlt
xchg
lret
push
inc
jl
fstps
push
xchg
loope
cmc
dec
mov
stos
jp
and
push
cli
jo
fisubrs
add
nop
jecxz
js
jbe
push
push
mov
sbb
xchg
xor
or
cmp
pop
mov
shlb
mov
dec
or
adc
rep
xchg
cmc
neg
xchg
ret
mov
push
pop
mov
mov
cld
into
imul
mov
and
dec
lds
mov
addr16
sbb
dec
cmp
int
cmp
push
and
into
imull
dec
mov
notb
inc
into
jp
in
inc
shl
xlat
cmp
jne
in
stc
and
mov
push
add
or
mov
rorl
mov
bound
add
sbb
mov
xor
addb
icebp
lahf
sbb
pusha
dec
push
je
shrb
pop
hlt
dec
movsb
xchg
movsl
sbb
adc
es
or
in
shlb
jns
sahf
bound
xlat
hlt
xchg
or
clc
xlat
and
test
mov
pop
cmp
shll
in
int3
jno
add
adc
mov
flds
das
inc
ja
cli
dec
push
nop
cs
jb
push
add
mov
scas
pop
cmpsb
or
repz
out
jns
lock
es
cltd
fldcw
insb
cltd
out
popf
sti
push
shl
call
aas
das
or
or
sahf
test
mov
fidivrl
mov
dec
movsb
jbe
and
sub
fildll
sub
push
jo
dec
pop
pusha
lods
rcll
call
mov
aad
test
stos
or
outsb
testl
cmp
jl
add
leave
in
in
aam
fdivr
inc
cmp
inc
sub
fisubl
jl
adc
jb
pop
out
enter
loope
adc
popa
lds
imul
xchg
fnstenv
xchg
pop
int
jecxz
sarl
sbb
xchg
pop
sub
pop
ret
mov
sbb
les
cmp
xor
pop
mov
arpl
mov
mov
mov
dec
xor
sub
xor
and
andb
xchg
pop
xchg
mov
sub
adc
in
mov
xchg
mov
call
test
xor
xor
shlb
repz
inc
pusha
mov
fstpl
pop
or
jnp
inc
add
je
push
or
fsts
xchg
jp
push
xchg
cmp
fs
shlb
sub
cld
and
add
imul
enter
pop
sbb
pop
inc
pusha
out
and
pop
add
sub
xchg
lahf
mov
shrb
mov
ret
sub
push
sub
add
push
mov
popf
and
xlat
dec
jmp
pop
adc
out
in
sbb
lahf
punpckhbw
daa
add
nop
mov
into
jnp
out
jae
mov
testb
pusha
mov
je
mov
push
das
lds
std
imul
adc
sbb
out
sub
inc
sbb
push
lea
bound
sbb
inc
mov
xchg
std
mov
lds
jbe
or
loop
xlat
in
mov
cld
lret
icebp
sbb
fbld
addb
and
xchg
lods
daa
pop
outsb
dec
call
push
es
rolb
sub
inc
pop
cmp
or
jb
xchg
cmp
int
mov
pop
int
jnp
inc
push
dec
mov
loop
sbb
mov
mov
mov
imul
repnz
daa
int3
lock
lret
dec
jb
jbe
push
arpl
imul
and
sbb
ret
mov
ret
push
sub
shrb
inc
mov
xchg
jno
push
cmp
xchg
loopne
sub
gs
mulb
or
fs
add
stos
mov
jo
dec
mov
and
adc
int
sub
ss
mov
imulb
std
ja
fcomi
and
cltd
rorl
mov
mov
and
ret
leave
lods
dec
push
gs
mov
adc
xor
and
cli
mov
cs
pop
ljmp
test
add
cmp
in
and
sub
and
out
xchg
test
or
mov
jle
mov
stos
fsubl
fstpl
rcrb
sub
mov
jg
loopne
decl
push
or
shll
fcmovnbe
xor
movsl
pusha
adc
and
cld
sti
lcall
mov
push
add
icebp
xchg
loope
add
xor
insb
rol
shrl
and
pop
sub
call
mov
xlat
push
out
mov
in
arpl
ror
jmp
lret
les
movsb
xchg
push
xchg
std
sub
bound
jg
dec
fwait
sub
into
push
cmpsl
fucomip
rol
jno
test
mov
add
adc
and
bswap
and
jge
or
push
mov
push
sahf
leave
fs
push
lock
sbb
gs
mov
or
jl
rcrb
nop
aas
lcall
imul
add
adc
mov
lock
add
jo
pusha
adc
add
xchg
or
bound
jmp
jnp
and
mov
mulb
pop
adc
icebp
mov
push
movsb
pop
xor
addb
lret
clc
loope
xor
fisubrs
jno
push
xchg
xchg
pop
xchg
or
adc
stos
aam
iret
mov
dec
lds
jne
push
cmp
ljmp
loopne
loop
inc
pop
mov
inc
xchg
inc
fldenv
insl
and
lret
cld
mov
xor
jge
test
sub
xchg
aas
jl
imul
enter
or
xchg
dec
mov
jno
xchg
loop
mov
fadds
nop
add
jns
mov
ds
push
mov
mov
test
arpl
aas
sub
sub
push
cld
incb
push
lret
mov
push
adc
int
clc
xchg
push
sub
test
sbb
push
inc
ja
mov
push
jle
shll
in
adc
mov
das
insl
mov
faddl
in
iret
popa
mov
dec
pop
inc
and
cwtl
lods
inc
and
pop
pushf
and
lcall
rcll
inc
imul
push
sti
lret
imul
or
fidivrl
xchg
outsb
and
dec
mov
cli
repz
mov
jnp
lcall
mov
adc
push
inc
push
movsb
sahf
xlat
aam
outsl
hlt
xchg
inc
call
push
add
pop
ret
mov
and
out
pop
ja
or
mov
adc
jl
or
adc
inc
xor
fwait
xor
out
test
sbb
and
mov
mov
xchg
inc
inc
ja
lret
mov
or
jae
pop
lods
fwait
rolb
ficomps
leave
bound
sbb
in
out
pushf
call
das
iret
xchg
adc
out
push
pop
in
flds
insb
add
dec
xchg
xchg
mov
outsl
mov
shl
pop
mov
lcall
fldcw
fcompl
xchg
dec
je
sub
leave
and
pop
ds
clc
sbb
ret
js
ds
dec
je
aam
mov
mov
jnp
dec
push
and
and
pop
push
test
adc
insb
push
faddl
pop
lods
lret
jbe
loop
lret
adc
test
mov
pop
xor
jno
mov
adc
lods
dec
or
cwtl
jg
push
in
and
int3
std
cwtl
sbb
inc
jecxz
sub
dec
adc
dec
lds
aas
push
ficoml
jg
cmc
add
xor
imul
adcl
rorb
out
jbe
and
mov
jg
inc
lcall
imul
and
push
cmpsb
inc
fwait
sbbl
xor
ds
fidivrs
sbb
pop
or
xchg
aas
outsb
or
mov
hlt
sbb
inc
andl
adc
sub
xchg
out
lret
push
jmp
xchg
testl
pop
and
pop
das
push
test
gs
pop
and
and
adcb
js
out
mov
mov
jecxz
scas
xchg
aaa
push
jl
out
xchg
sub
loope
mov
add
xor
test
loope
inc
jno
and
cmp
lods
hlt
clc
sbbb
lahf
fcmovb
mov
ret
dec
popa
xchg
in
push
clc
notb
into
jae
lret
sbb
lea
dec
data16
pop
loope
mov
movsl
adc
fsubl
pandn
xor
outsl
inc
popa
out
push
jle
mulb
lds
sub
pop
lahf
lods
mov
nop
and
inc
or
iret
jmp
popf
adc
lock
add
and
fisttps
inc
sbb
adc
outsl
in
cmpsl
mov
rclb
test
mov
lock
sti
jne
ret
in
push
pop
js
jno
push
roll
inc
pop
aaa
ds
or
xchg
das
aam
xchg
icebp
xchg
outsb
in
mov
dec
xchg
std
fs
jge
fwait
cmpsb
cmpsb
push
pop
fldenv
fadd
xlat
ljmp
pop
cltd
fisubs
lds
jecxz
jmp
sbb
mov
sub
es
cmp
loope
repz
pop
out
mov
adc
in
ss
icebp
mov
dec
shl
and
push
dec
or
xchg
sahf
xchg
mov
push
jns
sti
xchg
dec
das
push
dec
xor
add
aad
fdivrl
rcll
lods
xchg
mov
les
mov
cmpsb
cmp
fisubs
mov
xchg
sbbl
mov
shrl
xchg
pop
and
aad
shlb
jmp
xchg
lods
sub
cli
mov
movsb
cld
leave
leave
in
sub
sub
stc
std
inc
aaa
repz
sbb
addr16
lret
dec
push
mov
fidivrl
sahf
mov
testb
dec
add
cmpb
fst
daa
push
ds
fsubrl
lret
dec
mov
inc
sbb
or
les
es
inc
lahf
inc
pushf
cmp
adc
addl
push
mov
dec
push
or
call
repnz
icebp
into
sub
imulb
imul
pusha
movsb
xor
movsb
in
adc
clc
lcall
fwait
rorb
or
jmp
aad
jecxz
ret
into
stc
fdivrl
dec
movsl
imul
loop
cltd
xor
pop
jp
sar
pop
mov
xchg
inc
adc
cwtl
fimull
push
dec
fisubrl
pop
lods
sahf
addr16
pop
enter
mov
adc
jne
xorb
xor
in
div
stos
sub
daa
push
fldl
mov
xchg
stos
fdiv
lods
inc
inc
dec
pop
pop
xchg
cmpl
cli
pop
adc
shlb
roll
pop
fstps
repnz
jmp
push
dec
hlt
jg
js
push
jbe
sbb
mov
cmp
jg
xlat
mov
or
lret
push
in
dec
out
mov
ss
fstl
xor
cmp
mov
dec
pop
sbbl
sbb
or
inc
mov
adc
ljmp
mov
aam
in
int
adc
out
stc
shrl
jns
stos
jmp
push
adc
test
inc
into
adc
xor
in
fdivrs
or
sub
in
xor
add
pop
mov
mov
adc
inc
cmp
push
sub
inc
lret
mov
arpl
sbb
lret
jae
pop
jne
out
movsb
sti
and
shll
add
mov
loope
cmpsl
sbb
les
std
push
mov
rcrl
add
lret
movsb
pop
adc
mul
stos
lds
jg
xchg
xchg
popf
or
mov
jb
mov
inc
cmp
and
or
sbb
sbb
hlt
iret
sub
cmp
ret
rclb
mov
adc
cmpxchg
mov
inc
cli
dec
pusha
test
xor
sbb
insb
and
into
js
rcrl
add
push
inc
sub
xchg
pusha
jp
and
add
mov
and
or
pop
lret
and
cmp
fwait
lcall
lock
dec
push
dec
scas
mov
push
lods
jle
or
mov
out
out
mov
or
aas
adc
mov
pop
xchg
and
cltd
movsb
mov
sbb
icebp
nop
jg
push
pop
test
mov
bound
add
nop
push
or
pusha
push
mov
mov
in
sbb
lods
adc
sbb
mov
pop
leave
mov
or
std
std
jmp
mov
in
cmp
daa
arpl
adc
jo
dec
mov
shrl
lods
push
mov
in
mov
repnz
cltd
and
movsl
sbb
lock
subb
test
mov
mov
neg
cmp
push
outsb
mov
sub
or
xor
in
imul
inc
mov
and
adc
ljmp
cmp
jns
imul
scas
cmp
out
mov
jo
and
jmp
adc
push
leave
cwtl
mov
stc
fdivl
aas
fwait
add
fisttpl
fsub
mov
lret
aam
add
jge
js
jae
mov
test
daa
repnz
sub
je
imul
stc
jbe
and
insl
testl
out
imul
insl
out
sbbl
sub
loope
fwait
test
daa
sbb
cltd
mov
jge
adc
lods
int3
adc
inc
push
enter
mov
stos
in
nop
imul
jb
lfs
subb
ljmp
pop
xchg
insl
or
roll
cmp
push
xchg
fs
stos
les
stos
lods
mov
cltd
mov
jns
or
cli
fidivrl
jg
fmul
jb
push
loop
dec
mov
les
loopne
insb
imul
cwtl
xchg
sti
sub
enter
mov
mov
pop
stc
daa
fildl
xor
mov
mov
add
stos
shrb
popa
jno
xchg
pop
shlb
add
lods
gs
sbb
stos
mov
aad
lods
jno
pop
int3
xorb
jbe
arpl
clc
sub
sub
mov
sbb
sub
push
insb
pop
xchg
outsl
cmp
scas
jo
sbb
fmul
dec
int3
jmp
shr
insl
jae
cmp
cs
dec
rcrl
in
jb
shlb
data16
test
mov
inc
loopne
jl
int
mov
cld
xor
lea
lods
add
imul
and
stos
push
jecxz,pt
inc
lahf
mov
and
fwait
icebp
ficomps
cwtl
mov
mov
pop
jmp
xlat
jle
or
ja
mov
push
cmp
pop
outsl
imul
jecxz
ljmp
fldt
or
data16
ficomps
dec
pop
dec
push
in
arpl
stc
mov
mov
mov
jae
movsb
push
mov
aaa
mov
sbb
sarb
and
sahf
xchg
pusha
add
clc
aad
enter
sub
scas
mov
aaa
popa
lea
cwtl
inc
test
movsb
or
loop
arpl
cwtl
and
pop
adc
cmpsb
dec
xchg
xchg
aad
xor
imul
stos
andb
adc
pop
call
xchg
xor
ds
jmp
xor
sub
lret
in
mov
stos
rcl
adc
popa
add
cwtl
add
dec
out
and
pop
fldl2e
pusha
cmp
daa
sahf
dec
push
je
jecxz
icebp
jmp
mov
inc
adc
adc
pop
stc
sbb
ret
xchg
xlat
les
cmp
inc
mov
cmp
dec
push
mov
icebp
add
imul
jbe
leave
mov
outsl
outsl
cltd
xchg
adc
testl
inc
add
sbb
insl
into
jbe
push
add
loopne
stos
ret
test
jns
add
cmc
mov
push
imul
jne
shr
mov
daa
add
lahf
arpl
lds
sub
cmc
jns
ljmp
xchg
push
jnp
add
gs
jo
addb
out
xchg
arpl
mov
insl
push
adc
out
mov
jmp
mov
cld
jbe
lret
fs
pushf
and
sbb
xchg
aad
xor
xlat
pop
push
sub
inc
adc
add
negl
repz
sbb
push
lods
aas
loope
jbe
xchg
pop
scas
sbb
into
iret
mov
and
cltd
mov
or
add
adc
sti
mov
push
xchg
jl
cmpsb
or
popl
and
cwtl
mov
arpl
clc
gs
fwait
hlt
cs
ljmp
add
xchg
push
dec
sbb
in
mov
out
add
push
cmp
addb
outsl
push
lea
icebp
lds
pop
std
or
movsb
cmp
js
jno
pop
mov
in
into
cmp
scas
dec
lret
test
sahf
sahf
dec
int
adc
sbb
mov
stos
mov
mov
sbb
cmp
sub
jg
dec
adc
repnz
test
mov
fistpl
and
mov
into
inc
and
dec
pop
pop
pop
pop
xchg
sbb
xor
popf
and
pushf
or
push
repz
lods
movsb
mov
push
or
mov
and
out
mov
pop
mov
test
push
add
rcrb
inc
add
sub
jp
popa
cld
sub
mov
lods
sbb
inc
outsb
push
das
ss
add
adc
mov
gs
jne
jo
push
aaa
adc
int
lret
sahf
call
adc
pop
jne
ror
jg
inc
daa
out
or
cmpsb
ret
dec
mov
dec
mov
jmp
in
sbb
mov
push
or
mov
add
test
bound
inc
xchg
aaa
and
push
adc
dec
sti
push
inc
xlat
out
sub
imul
xchg
push
int
push
vmwrite
andb
and
mov
std
cmpsb
aas
shll
mov
aaa
cld
mov
adc
sub
adc
push
lock
loope
jae
push
stos
fbld
lock
in
mov
inc
ret
dec
xchg
popf
test
rcl
sbb
in
xchg
pop
arpl
add
pop
jbe
pop
mov
xchg
es
int
xorb
dec
cwtl
outsb
sub
jbe
sub
gs
jae
push
jge
lret
inc
inc
xchg
js
out
xchg
es
and
mov
mov
jne
pop
cltd
dec
imul
pop
inc
ret
in
mov
hlt
movsl
bound
sbb
aad
cltd
add
xor
cwtl
test
pop
ret
pop
mov
in
jg
and
jo
cmpb
mov
mov
cmpsl
aaa
mov
test
cmpsb
mov
push
loope
add
sub
test
mov
push
stc
imul
sarl
pop
clc
jl
pop
testb
ds
adc
adc
lcall
inc
jo
pop
xchg
jl
pop
int3
pusha
out
xchg
and
mov
mov
lcall
idivb
repnz
xor
xchg
mov
mov
in
cmp
xchg
sahf
addr16
pusha
pop
les
and
cltd
mov
hlt
cmp
mov
js
mov
jne
lret
sub
adc
mov
or
mov
mov
lods
fs
xor
adc
cmpsl
test
arpl
mov
mov
stc
adc
cwtl
cs
cmp
nop
hlt
andl
loope
test
mov
cmp
sbbb
addr16
gs
loop
popf
mov
stos
mov
xchg
andb
sbb
scas
add
pop
pusha
and
testb
adc
call
mov
jbe
jne
push
add
mov
or
jnp
xor
adc
sbb
ss
cmpb
scas
aam
or
mov
mov
gs
xchg
inc
stc
pop
lcall
mov
int3
xchg
xor
inc
popf
insb
cmp
movsb
ret
inc
stc
in
sub
jg
iret
cmp
sbb
loopne,pn
leave
jl,pt
sbb
mov
jg
cmp
negb
lods
ds
dec
add
sbb
xor
pop
cli
pushf
fldcw
xchg
and
js
jmp
jb
out
enter
sbb
xchg
sbb
incb
mov
leave
mov
sbb
and
mov
mov
inc
rcl
pop
jae
pop
dec
in
sub
xor
sar
dec
out
loopne
pop
add
xchg
test
aam
adc
add
jge
lods
cmp
xchg
popf
jb
int
icebp
pop
mov
dec
jbe,pn
add
std
push
dec
or
movb
mov
das
out
xchg
fimull
pop
popa
jnp
xchg
aas
aad
sbb
nop
jns
inc
sbb
cmp
push
xor
shrl
ret
vpavgb
sbb
dec
add
enter
into
push
inc
mov
ja
xor
dec
popf
sub
mov
call
shl
sbb
adc
push
or
xor
mov
or
mov
jl
xor
stos
js
lahf
loop
jo
ss
pop
or
or
mov
lcall
loop
scas
mov
loopne
inc
add
cli
femms
pop
jge
mov
add
add
or
cmp
pop
push
cmc
mov
jle
aam
or
mov
inc
cmp
lret
in
in
loop
push
repz
and
add
jp
adc
lds
sub
lret
imul
loopne
sub
hlt
push
inc
sub
fs
add
jne
lahf
jp
mov
push
and
stc
push
or
mov
cmp
jo
inc
dec
add
fstpt
jmp
dec
lret
pop
insb
test
jmp
pusha
mov
test
jb
movsl
xor
lods
jns
fwait
jbe
xchg
push
jb
pop
shl
and
sti
in
xor
insb
mov
hlt
push
test
cmpsb
mov
cmp
in
jnp
shlb
orb
fstps
add
iret
es
xchg
int3
out
cvttps2pi
call
or
in
mov
out
mov
pop
add
mov
out
fmuls
aaa
mov
into
mov
inc
and
sub
pop
outsl
inc
and
js
sbb
sbb
jb
std
and
fiaddl
push
lds
push
inc
and
cld
pop
pop
aam
push
or
dec
loop
push
jecxz
pusha
out
jb
jb
and
stc
cmpsb
push
movl
jno
aas
mov
scas
sbbl
data16
pop
insb
in
sbb
or
aam
insl
lods
inc
out
add
lcall
ja
repnz
ja
sub
call
pop
cmp
gs
fchs
mov
js
mov
xor
pop
mov
scas
das
lcall
xchg
sbb
mov
pop
mov
mov
push
adc
roll
in
pop
shrl
lret
and
pop
lea
pop
sub
jo
xlat
jl
rorl
add
xorl
inc
jg
inc
std
outsl
mov
std
ljmp
inc
repz
mov
je
xorl
gs
push
dec
inc
dec
mov
popf
js
incl
xchg
sbb
scas
movsb
lods
jmp
in
out
shl
push
lcall
subl
xchg
and
adcb
xor
or
mov
fiadds
add
push
mov
fimull
add
ret
dec
into
mov
in
jno
sbb
pusha
push
idivb
sub
or
pop
mov
mov
pop
ljmp
xchg
mov
push
arpl
loopne
xor
pop
out
sbb
jecxz
imul
leave
inc
inc
xchg
jnp
stos
xchg
jle
mov
clc
cmc
dec
pop
fsubrs
data16
mov
xchg
cld
out
mov
mov
xadd
imul
in
mov
pop
mov
push
jb
call
adc
mov
xchg
cmp
test
mov
aam
pop
jmp
stos
sbb
movsb
jno
push
sbb
std
pop
sub
pusha
insl
mov
sub
sbb
cld
in
stos
movsb
jo
xchg
sub
dec
data16
nop
inc
jns
hlt
adc
xorb
mov
lods
enter
or
mov
or
test
jae
mov
cmp
fsubrs
adcl
push
push
pop
pop
push
outsb
jo
lds
jge
pop
xor
fcom
cmp
inc
roll
fistpl
cld
xchg
mov
push
ds
jp
sar
push
jmp
add
orl
daa
pop
pop
push
dec
shlb
add
inc
mov
cmp
outsb
lea
outsl
js
sbb
mov
mov
in
adc
ficoml
mov
xor
gs
imull
mov
mov
mov
outsb
insb
test
push
roll
jg
fnsave
mov
pop
cmp
dec
adc
inc
aam
leave
sarl
and
sarl
jb
sub
aam
xor
jns
repnz
arpl
cmp
or
dec
jb
ret
mov
xchg
cmpsb
cli
ja
shll
fcomps
sub
sti
push
movsl
adc
stos
mov
les
daa
xor
lock
mov
lock
add
gs
push
in
jno
xor
mov
in
sbb
iret
mov
jecxz
jl
popl
out
lds
ja
dec
xchg
ds
jecxz
cmpsb
lods
xlat
sbb
add
repz
test
out
stos
out
add
push
push
or
shlb
pop
xchg
rol
mov
xchg
repnz
mov
adc
mov
jecxz
sahf
xor
or
lods
shlb
lock
push
in
test
ljmp
out
nop
inc
scas
inc
stc
in
test
stos
adc
lret
shlb
test
mov
push
adc
leave
mov
std
xchg
fs
or
adc
push
mov
repz
out
push
add
add
sbb
or
sbb
dec
push
jmp
hlt
sbb
push
out
stos
pop
push
adc
in
xchg
mov
movsb
cmpsl
jg
lret
dec
jne
jl
rcrb
iret
xlat
jns
jecxz
ljmp
stos
jle
pop
shll
dec
sub
pop
hlt
test
sbb
xchg
fdivr
cmp
repnz
stos
or
popf
adc
xchg
cli
inc
cmp
mov
pop
cmp
sahf
out
clc
mov
std
add
stos
icebp
fisubl
sbb
mov
cmp
stos
out
and
sbb
out
ret
xor
add
fs
cmp
stos
clc
add
loop
adc
push
jbe
xor
xchg
jno
sarb
cli
cmp
pop
pop
xor
repnz
pop
xchg
fcomi
dec
lret
js
shrl
fildll
inc
sahf
cmp
or
cli
imul
int
push
xchg
add
in
movsl
std
dec
daa
pop
and
test
pop
loop
xchg
mov
adc
dec
outsl
sbb
insl
inc
mov
cwtl
cmp
pop
les
adc
jmp
xor
push
test
jae
mov
fwait
ret
xchg
push
dec
dec
jne
dec
outsl
pop
cmpsl
xchg
leave
std
push
in
push
and
popf
pop
pop
cmp
fwait
incb
jge
pop
insb
popa
jne
outsl
ja
out
inc
mov
sub
movsb
add
test
loope
fidivrs
mov
shlb
out
mov
std
sub
in
loop
push
cmp
lds
and
fwait
fidivrl
out
cltd
dec
push
jge
jecxz
jl
mov
mov
aas
and
cli
mov
pop
lods
fwait
mov
ficoml
daa
lahf
jne
dec
jns
jbe
xchg
sbb
mov
lds
inc
js
xchg
arpl
push
mov
or
cs
sbb
ret
dec
cltd
xor
popa
fucomip
and
jmp
scas
mov
jp
sbb
out
loop
jns
dec
xchg
aas
aad
out
push
xor
jecxz
nop
lock
lock
sti
pushl
mov
adc
hlt
lods
xor
insl
mov
in
test
push
mov
jae
ficompl
sub
cmp
and
mov
cmp
insl
or
push
ftst
add
cltd
mov
in
dec
mov
ds
int3
clc
shlb
das
int
aas
es
pop
std
sub
insl
mov
and
arpl
lret
and
cmp
out
mov
popa
dec
in
adc
sahf
xor
loop
push
test
fbstp
ret
and
repz
repz
imul
jae
pusha
cmp
or
xchg
xor
inc
ss
push
jb
xchg
mov
test
fwait
sbb
pusha
push
dec
movsl
mov
sub
lds
fs
imul
mov
mov
les
jecxz
jle
jnp
icebp
sub
pop
add
inc
bnd
xor
xor
mov
lcall
andb
js
mov
or
xchg
jl
test
dec
movsb
mov
hlt
sub
pop
push
rolb
or
mov
imul
rcrb
icebp
mov
mov
sbb
js
or
repz
leave
pusha
pop
shll
mov
cmp
les
fstpl
sbb
std
sbb
jns
add
mov
pop
lds
mov
xchg
int3
jp
rol
mov
pop
lea
arpl
jp
shll
cmp
shlb
mov
inc
notb
stos
scas
std
add
lahf
aaa
push
cmp
push
add
mov
dec
mov
inc
es
shlb
aam
scas
ficoms
xchg
mov
ja
ss
xor
ja
loopne
sbb
cwtl
cmp
mov
shll
ja
dec
jae
jle
aaa
shl
dec
push
inc
ficompl
or
xchg
cs
loopne
orb
sahf
addr16
pop
push
data16
lret
mov
cs
out
dec
sti
xor
clc
pop
pop
pop
dec
test
jo
fnop
sbb
mov
jae
push
lock
mov
lahf
movb
sbb
jmp
shl
std
sbb
loopne
insb
mov
ja
sbb
pop
sbb
mov
mov
aad
add
call
dec
sahf
jge
push
sbb
sarl
sbb
pusha
loop
mov
adc
add
stos
xchg
out
mov
add
push
adc
cmp
lea
in
les
iret
xor
das
mov
xor
lock
cmp
stc
mov
sbb
cmpsb
and
push
loope
es
and
add
jae
xor
into
jmp
aam
ret
dec
pop
jns
sbb
sbb
xor
push
xorb
mov
jle
adc
inc
call
imul
mov
xchg
xchg
mov
jbe
sub
pop
lret
jmp
cmp
push
mov
call
lock
mov
and
lcall
fsubs
add
xchg
lds
outsb
clc
jg
loop
pop
ret
imul
outsb
pop
insb
cmpsb
xchg
xchg
pop
ficompl
adc
mov
pop
shr
daa
mov
mov
ja
push
cmpsl
cmc
mov
dec
jae
in
out
stos
dec
insl
mov
mov
jo
popa
out
and
cmp
xchg
or
sbb
inc
push
insl
out
cmp
inc
out
xor
or
pusha
sbb
into
jnp
cld
push
loope
pop
or
not
loopne
in
stos
pop
out
faddl
js
addb
dec
movups
lahf
and
pop
dec
aad
pop
sub
cld
je
xchg
xchg
ja
inc
jle
jp
pop
push
in
sbb
in
lods
scas
loopne
mov
es
bound
xor
pop
adc
jno
mov
dec
fists
xchg
xor
xlat
fadd
jecxz
arpl
adc
fcomps
adcb
sahf
or
xchg
stc
insl
and
mov
sarl
sub
mov
pop
jae
iret
push
test
and
mov
adc
push
loop
les
lods
gs
aaa
and
fidivrl
pop
cmp
inc
adc
arpl
pusha
lock
add
inc
cmp
ficompl
push
push
pop
xchg
pop
jne
mov
es
lods
sub
pop
jno
add
jae
bound
mov
adc
nop
icebp
xchg
es
je
sbb
xor
adc
jmp
push
fsubrs
pop
rclb
jo
add
jbe
and
mov
je
dec
mov
cwtl
jae
stc
enter
and
and
cmp
inc
lret
loope
shrl
andl
aaa
push
sub
cli
xor
addb
out
in
dec
or
popa
dec
dec
pop
fwait
xchg
dec
sub
dec
in
push
inc
ljmp
mov
into
and
sbb
xchg
call
mov
ret
ret
add
faddl
orb
nop
lcall
enter
cld
lods
adc
mov
adc
or
xchg
sbb
mov
popl
and
add
push
les
jle
sbb
call
sbb
add
insb
lds
pop
push
adc
inc
ret
test
ds
and
pop
cld
mov
xlat
mov
mov
jbe
mov
js
xchg
test
call
push
arpl
xor
shll
ljmp
popa
icebp
push
cltd
push
xchg
mov
out
out
xchg
push
cld
xchg
jno
fs
lods
sbb
pop
mov
ds
xchg
jns
mov
xchg
xchg
sbb
ljmp
arpl
test
sbb
cmp
mov
jl
xchg
jmp
mov
cmc
int
and
into
pop
daa
loop
daa
cmp
rcll
pop
sti
jg
stc
pop
push
mov
pop
lret
jecxz
adc
dec
push
jne
mov
mov
fstpl
lret
in
movsl
out
inc
arpl
xchg
cmp
mov
out
filds
adc
pop
or
mov
pop
sub
jmp
jne
hlt
outsb
hlt
mov
or
jmp
lret
lods
jecxz
lret
jle
mov
js
pop
xor
adc
sbb
bound
push
or
enter
mov
lcall
adc
sbb
mov
enter
jo
adc
mov
call
jmp
mov
lret
pop
sbb
xor
outsl
ja
add
or
mov
stos
push
iret
pushf
xchg
in
stc
loop
loop
scas
cltd
pushw
test
cli
jo
shlb
insb
inc
test
test
and
adc
xchg
rorl
aaa
sbb
pop
push
mov
mov
lods
pop
xchg
mov
dec
lret
lret
dec
rorl
rolb
cmp
lds
sbb
and
push
testl
cmpsl
or
inc
in
mov
ret
cli
add
frstor
or
arpl
je
jge
xor
push
mov
das
pop
push
pop
rcrl
sub
xor
enter
adc
fimull
outsl
in
repz
ss
sbb
imul
adc
mov
or
or
arpl
inc
stos
dec
negb
test
mov
push
dec
addb
xchg
test
outsl
sbb
adc
push
mov
lcall
add
lock
push
aaa
xchg
int
add
es
sbb
mov
mov
adc
iret
push
test
in
push
pop
divl
push
lock
xor
lods
icebp
sbb
es
cmpl
dec
mov
jl
lret
jl
ljmp
pop
fisttpl
pop
lcall
push
sbb
mov
sub
add
jae
cmp
sub
aas
inc
push
jne
dec
pop
jl
in
sub
lods
jae
push
fwait
jge
inc
dec
add
jne
js
cmp
lds
fnsave
jl
fwait
jbe
and
adc
test
shl
iret
ret
add
ror
ret
rcll
enter
les
sub
add
idivb
sbbb
lret
cmpsl
js
xchg
sub
cmp
mov
and
inc
sub
je
dec
push
or
mov
jmp
push
and
and
add
cmp
ja
call
fdivr
bound
fisttps
xchg
std
adc
or
push
xchg
jne
mov
je
test
outsb
mov
mov
pop
std
mov
in
cmp
frstor
shrl
push
pop
jbe
imul
cmpsl
js
mov
into
mov
xchg
je
dec
btc
icebp
pop
mov
pop
shl
mov
loope
jbe
imul
mov
daa
testb
aaa
push
aam
loope
je
xor
add
sbb
pop
inc
dec
mov
icebp
aad
inc
inc
inc
cmp
stc
lds
pop
inc
orl
sbb
movsb
js
shlb
movsb
fsubrl
jb
sub
sbb
or
xor
stos
and
pop
dec
cli
add
or
test
mov
jns
mov
imul
jmp
push
iret
cmp
out
push
mov
fwait
dec
jb
hlt
jle
adc
inc
hlt
scas
rclb
mov
push
lock
dec
insb
gs
jne
mov
lock
cmp
pushf
dec
jp
stos
mov
lea
ss
insb
rorb
xchg
repnz
pop
fbld
ret
cld
mov
movsb
inc
call
inc
add
dec
movsl
dec
fsubrs
cmc
sbb
jp
ret
lret
loope
out
push
xchg
and
movsl
xchg
test
repz
scas
js
xchg
cmpsl
loop
repnz
pop
or
mov
inc
cmpsb
push
pushf
jnp
push
fdivs
mov
push
sub
lds
mov
or
mov
or
xor
pop
sub
jmp
in
lods
or
mov
jo
mov
xchg
jle
sub
jbe
imul
push
push
out
mov
inc
test
pop
cwtl
xor
mov
mov
sub
mov
pop
cmc
js,pt
push
pop
push
popa
jae
push
and
gs
out
lods
insl
dec
imul
sub
push
stc
mov
add
sbb
int3
jecxz
das
mov
jle
and
lods
mov
cld
or
push
adc
cmc
push
in
hlt
xchg
mov
movsb
mov
add
out
pop
or
mov
inc
and
test
mov
es
imul
mov
and
fimull
inc
cmp
ror
test
xchg
pop
sub
sub
inc
jbe
pop
out
in
stos
and
sbb
cmp
jl
mov
incl
cmp
xchg
jb
stos
daa
adc
lock
out
andl
inc
mov
in
cmp
jae
mull
adcl
mov
and
sub
mov
pushf
and
pusha
mov
mov
add
jmp
int3
dec
push
xorl
jg
data16
ja
loope
test
mov
movzwl
clc
inc
shll
data16
add
jg
mov
repz
aam
int3
xor
loope
xor
cltd
mov
xor
mov
ficoml
inc
mov
std
push
add
ljmp
pop
lods
push
imul
mov
fisubl
rorl
sub
aad
imull
enter
orl
stos
jae
leave
jge
pop
test
push
sub
adc
and
lods
js
lds
stos
push
aad
inc
hlt
sbb
mov
ja
dec
pop
shr
stos
fstps
mov
notb
ljmp
out
sub
repz
int3
inc
icebp
rcll
sub
xlat
push
movsb
jl
loop
sub
iret
and
adc
into
lods
inc
arpl
sbb
je
cmp
dec
adc
int3
call
pop
jo
cli
shrl
mov
sub
add
pop
jge
into
leave
rol
pusha
out
dec
ds
ljmp
xchg
popf
jbe
sbb
jmp
mov
and
ffree
xchg
int3
ds
dec
out
js
xchg
jne
mov
sub
or
dec
xor
negl
test
cmp
mov
mov
add
xchg
addb
icebp
fisttpll
jnp
adc
movl
repnz
jo
ret
mov
cltd
scas
cmp
sbb
icebp
pop
rcrb
shrl
decl
dec
adc
jmp
push
xabort
push
scas
pop
mov
aad
ja
sbb
ret
mov
mov
lds
je
push
push
pop
xor
hlt
mov
leave
sahf
fildll
add
cltd
pop
je
pop
test
daa
dec
and
bound
inc
gs
inc
cld
add
sahf
loope
mov
fildll
clc
sbb
cwtl
push
mov
dec
push
mov
inc
cmp
aad
mov
clc
adc
imul
xchg
in
cmc
arpl
push
mov
popf
fidivrs
mov
ds
call
fstpl
add
sbb
mov
ret
cmp
inc
call
and
cmp
xchg
pop
mov
negb
movb
inc
fnsave
int
jnp
sbb
jns
in
adc
jle
enter
sub
scas
xchg
mov
xchg
rclb
stc
scas
mov
push
mov
sub
xor
sub
in
mov
mov
or
inc
mov
cmp
scas
hlt
jle
xlat
sbb
jb
and
add
cld
push
ja
push
xor
cltd
popl
jb
insl
fistps
in
adcl
push
icebp
mov
cmpsl
pop
call
xchg
xor
mov
lods
outsb
mov
daa
faddp
or
stos
daa
pop
jmp
ja
mov
cs
sahf
push
ret
ret
inc
cmp
jle
pop
dec
mov
stos
push
ror
mov
inc
jge
sub
es
inc
push
jmp
lcall
arpl
incb
fs
out
adc
push
cld
popf
mov
or
add
xor
int
mov
sub
xchg
ljmp
inc
stos
dec
shlb
lods
or
and
pusha
stc
mov
shr
adc
out
fcmove
push
pop
push
add
int
out
cmp
sbb
mov
stos
cmpl
scas
sti
cmp
aam
jne
outsb
mov
fnstsw
xlat
inc
push
fs
imul
lret
jae
push
out
or
jg
mov
cmc
push
ficompl
sub
push
pop
dec
fcmovu
andl
push
mov
popa
loope
repnz
push
cmp
and
cwtl
sub
and
mov
pop
pavgw
pop
push
leave
cld
jmp
ret
rolb
jl
or
outsl
cmc
or
jne
mov
test
push
cmp
jp
rep
mov
pmaddwd
popf
cmp
jnp
mov
push
jmp
add
pusha
or
adc
je
out
stos
xchg
inc
roll
std
test
movsl
lods
adc
pop
lods
out
and
ret
xchg
popa
lret
cmp
pushf
or
pop
fdivr
imul
mov
es
mov
xlat
add
sbb
xchg
movl
push
inc
inc
in
insb
pop
scas
mov
push
and
lods
or
mov
or
popf
jg
int
ret
lods
sub
out
scas
sub
nop
mov
pusha
dec
fucom
jle
aad
insl
adc
repz
lret
dec
xor
loop
ret
adc
lcall
repz
lret
sub
sbbb
xchg
sbb
xchg
pop
subl
dec
into
call
cmp
jge
cmpsl
test
clc
jmp
cmp
hlt
cmp
test
cwtl
xlat
add
loopne
add
repnz
cli
lods
push
push
mov
push
loop
sbb
stc
pop
xor
inc
lea
mov
inc
div
pop
out
out
jmp
ja
pop
in
push
add
ret
xchg
lret
xchg
fdivl
xchg
lret
jbe
shlb
push
nop
loope
mov
mov
in
push
xor
jl
not
stos
mov
fldl
jle
mov
subb
lds
fwait
adc
dec
mov
mov
and
sbb
add
aas
jo
mov
mov
sbb
mov
xor
push
mov
scas
mov
rolb
aam
shll
or
adc
xor
push
pop
lahf
or
jp
dec
push
jb
and
imul
and
nop
repz
sub
dec
add
adcl
movsl
das
jmp
jmp
imul
sahf
lret
cmpsl
sub
jp
jo
push
nop
jb
add
std
hlt
sbb
icebp
mov
mov
cmp
adc
xor
add
sub
jge
and
insl
sub
xchg
xor
lock
dec
in
fistpl
dec
scas
das
push
sahf
push
xchg
imul
push
mov
sti
sbb
cli
inc
outsl
mov
mov
sub
dec
dec
nop
mov
mov
enter
push
cmpsl
lods
lcall
out
pop
cli
mov
xchg
aaa
jecxz
iret
imul
dec
dec
gs
mov
js
xchg
pop
mov
addb
rcll
add
or
push
mov
lods
sbb
sub
out
push
dec
dec
iret
mov
xor
adc
subb
pop
push
push
lods
add
xchg
sahf
push
dec
pusha
mov
add
mov
adcl
mov
hlt
inc
pop
test
pop
dec
iret
xchg
scas
sub
and
pushf
jne
dec
jb
hlt
hlt
pop
dec
jmp
dec
or
test
inc
dec
fiaddl
mov
in
jmp
and
stos
movb
insl
in
test
popa
insb
aaa
lret
fcomi
xor
fistpl
push
leave
xchg
xchg
jg
outsl
jecxz
mov
jecxz
pop
cltd
imul
push
ret
or
xor
push
fsubs
ds
jg
cmp
jle
mov
adc
pop
sahf
mov
jge
loop
in
je
cli
mov
push
dec
fdivrl
dec
add
scas
cmpsb
int3
shll
mov
cmp
mov
je
inc
push
pushf
pop
or
lret
sarb
gs
sub
adc
call
cs
insb
mov
leave
pusha
cmp
cmpsb
loopne
ljmp
pop
jmp
cld
sub
sub
fistl
mov
jo
lods
cmpsb
adc
push
dec
ret
mov
test
test
les
bound
inc
rcrb
push
in
enter
add
push
adc
pushf
jge
adc
cltd
leave
mov
bound
popf
mov
pop
push
dec
jecxz
popf
push
cmp
jecxz
ds
adc
adc
sbb
ret
jbe
cmp
inc
vmulpd
xor
jnp
mov
cmpsb
and
incb
movsb
cli
dec
fadds
mov
repz
sub
sub
lret
test
and
inc
mov
xor
xor
add
and
out
mov
shrl
and
xor
or
pop
xor
fs
xchg
jl
push
push
and
xor
push
cli
xchg
jae
rclb
lock
push
or
inc
scas
add
add
adc
insl
push
push
ds
aad
adc
cmp
push
jne
ret
mov
imull
and
imul
cmp
movsb
mov
sub
lcall
inc
loope
mov
out
ss
add
ss
mov
jl
jbe
jle
ss
inc
mov
xchg
out
pop
jae
dec
dec
mov
inc
jecxz
inc
rclb
stos
pop
jae
sbb
dec
jbe
sbb
add
stos
lods
push
mov
enter
out
xchg
fisubrs
ret
cs
or
mul
icebp
fdivrs
cmp
jno
loope
mov
lea
shlb
mov
arpl
pop
pop
mov
cli
inc
testb
incb
xchg
xor
cmp
out
xchg
sub
leave
mov
jp
push
aas
xchg
mov
lods
popa
mov
inc
xchg
mov
ret
aam
clc
lret
icebp
or
cltd
cld
dec
inc
pop
cltd
cld
adc
mov
loop
fwait
add
xchg
sti
gs
mov
inc
mov
ret
push
enter
mov
fs
outsb
mov
jb
sti
in
stc
mov
mov
mov
mov
jae
lahf
lock
incb
inc
loopne
out
add
xchg
add
xor
roll
mov
and
fcomi
xchg
test
push
clc
enter
out
or
clc
in
mov
ja
fiaddl
divb
fs
adcb
nop
sbb
fs
popf
cmp
add
mov
pop
lea
stos
sarl
out
jb
xor
pop
lahf
mov
sbb
lods
cmpsl
dec
push
xchg
movsb
int
mov
scas
inc
or
insb
imul
jmp
cmp
sbb
cmpsl
push
push
mov
daa
shr
cmp
pusha
xor
lods
mov
call
shr
ljmp
and
repnz
lret
adc
pop
aad
cmpsb
popa
and
sub
pushf
fwait
push
lahf
cld
sub
xor
fisubrs
into
call
cmc
sarl
icebp
adc
clc
push
jb
pop
aad
ret
push
mov
movsl
fwait
jecxz
jmp
push
mov
cmc
fwait
jae
pusha
pop
mov
xor
arpl
test
xchg
int3
sbbb
std
sbb
pop
jg
inc
lods
xor
daa
leave
cld
jae
mov
xchg
mov
or
mov
mov
ret
hlt
push
flds
test
inc
mov
lds
ror
or
int
pop
sahf
pop
jae
fucomi
ficoms
mulb
inc
push
sbbl
xor
pop
cmpsl
test
sub
sahf
sbbl
add
dec
setp
adc
mov
fwait
and
fcomps
lahf
adc
arpl
jmp
xor
mov
nop
imull
outsl
mov
es
inc
jno
push
bound
mov
mov
xor
and
lcall
jmp
sub
dec
inc
into
frstor
adc
add
lea
es
and
push
imul
add
sbb
das
mov
mov
mov
cmp
int3
add
addl
mov
add
jp
mov
push
enter
or
dec
call
or
rolb
testb
fidivrl
cmp
and
jmp
in
adc
dec
cmpsl
adc
sbb
jle
jle
cmc
cmp
popf
push
and
popf
leave
add
push
pop
fsubs
or
jno
pusha
mov
or
mov
xor
in
shlb
xchg
mov
xor
je
sub
xchg
fwait
mov
dec
ljmp
and
movsb
cli
inc
push
add
je
mov
xchg
dec
test
jle
std
insb
xchg
xchg
push
adc
xorb
sbbb
inc
lahf
xchg
imull
cmpl
add
and
mov
jb
cmp
xchg
enter
mov
xchg
push
inc
mov
shll
call
fwait
lcall
push
pop
sbb
cmpl
xchg
stos
cld
mov
xor
lcall
sub
aad
xor
and
or
shlb
push
adc
test
flds
mov
int
and
and
sbb
pop
push
cmp
dec
sbb
in
adc
mov
pop
cli
add
test
sbb
repz
dec
dec
mov
cld
movsl
mov
sti
push
filds
lea
nop
data16
stos
lds
push
adc
jb
cmpsb
cld
test
std
xchg
cmp
repnz
pusha
hlt
mov
ds
in
cs
dec
sti
jb
inc
inc
lods
inc
and
cltd
push
inc
jg
xor
dec
gs
sbb
stos
movsb
mov
nop
stos
std
adc
inc
lods
gs
mov
mov
into
mov
and
cltd
add
stos
jg
xor
sbb
jg
int3
mov
test
mov
fs
jns
rolb
ljmp
cmp
cwtl
sti
cs
mov
arpl
mov
cwtl
mov
fisttps
ss
inc
push
adc
mov
jo
xchg
bound
add
dec
xchg
sub
adc
inc
mov
push
mov
leave
push
enter
xchg
rolb
add
sub
or
sbb
gs
jl
xor
bound
sbb
and
loop
add
push
adc
mov
lock
das
pop
test
hlt
mov
rcr
dec
jo
addb
pusha
adc
jns
test
pop
nop
sti
test
or
cmp
cwtl
insb
int
scas
mov
jo
xchg
adcl
stos
cmp
fs
aaa
pop
test
sarb
pop
test
xchg
adc
stc
popl
jecxz
mov
out
cmc
cld
add
push
mov
jmp
push
cmp
mov
mov
sbb
punpckhbw
sbb
mov
out
popa
push
test
jecxz
fnsave
lret
pushl
mov
bound
mulb
cmpsb
shrl
mov
mov
rorb
mov
dec
sbb
pop
fs
mov
adc
push
adc
push
sti
xorl
in
sbb
or
inc
ret
movsl
shl
xor
xor
jle
inc
adcb
test
xchg
jl
mov
repz
nop
movsb
push
leave
stos
jae
push
shlb
cmp
rdmsr
jae
xchg
insb
lds
or
fs
loop
mov
ds
xorb
andb
pop
unpckhps
mov
mov
imul
mov
int3
call
sub
dec
ljmp
push
js
test
rcrb
mov
leave
ss
pop
frstor
add
or
dec
xor
inc
lock
pop
roll
ficomps
test
pop
fistps
jecxz
clc
add
bound
cltd
jns
pop
pop
mov
mov
and
jp
xor
scas
and
sbb
pop
cmc
push
xor
out
movd
cs
int
and
adc
roll
jmp
sub
xchg
push
cmp
jl
mov
cmp
and
jno
out
sahf
mov
push
or
setnp
fucomip
cmp
adc
test
cld
adc
xor
inc
mov
adc
mov
fsts
orl
rcrb
scas
shlb
lcall
push
loopne
daa
das
dec
hlt
lock
test
lret
jae
cmpsb
aas
xor
out
std
nop
xchg
xor
popa
mov
fsubrl
dec
lret
sahf
pop
loopne
ficoms
sbb
fs
daa
std
adc
sub
or
xchg
shrb
aaa
and
stos
ljmp
xor
jmp
jg
add
mov
cmpsb
stos
jmp
xchg
jle
jne
sbb
cmp
xchg
clc
sarb
js
call
ret
push
and
mov
xor
ret
ds
xor
pushl
sbb
cli
and
push
fisubrs
insl
push
mov
sbb
dec
lods
mov
outsl
fsubr
jo
pop
cmp
jp
lret
xchg
mov
jl
mov
adc
jne
adc
xor
sbb
movsl
test
dec
sarl
fs
mov
sub
add
scas
fdiv
das
pop
cld
rol
dec
push
xchg
or
mov
sub
cmp
imul
cmp
into
movsb
push
xrelease
pusha
inc
leave
popa
xchg
xor
ret
add
ds
bound
scas
ret
add
cmp
mov
loope
stos
rorl
push
lcall
loope
mov
add
in
fdivl
popa
leave
push
aam
shrl
in
sti
push
xchg
or
xchg
cmp
movsl
lods
jg
fldl
mov
mov
aad
cmp
xor
loopne
outsl
pusha
insb
mov
inc
cltd
mov
and
cmp
rcrb
mov
xor
enter
dec
data16
push
int
stos
scas
sahf
loope
dec
mov
leave
icebp
pop
cli
es
int3
pop
dec
push
dec
inc
mov
es
mov
stos
insb
jle
int
cmpsb
jecxz
push
outsb
xor
movsb
outsb
pop
or
and
out
jge
movsl
bound
mov
push
incb
pop
icebp
hlt
lea
jg
jle
sar
leave
in
stc
push
mov
and
push
xchg
mov
add
mov
test
or
pop
popf
or
or
sar
js
mov
jl
jnp
jne
add
lock
cmp
xor
pop
jbe
mov
inc
push
mov
mov
jmp
mov
imul
repz
xchg
cmpsb
shrl
push
dec
popf
xchg
dec
or
stos
pop
into
ret
adcb
add
mov
cmp
cmc
sub
out
movsl
mov
popa
push
fistpl
mov
jno
fs
inc
out
cmpsb
dec
add
mov
rorb
xchg
jle
std
enter
adc
dec
push
and
xchg
jno
pushf
icebp
mov
fistpll
add
movsb
rorl
jbe
add
scas
push
cltd
push
push
scas
sbb
fidivrl
pop
add
mov
sub
inc
jne
and
mov
adc
ret
scas
out
shll
stos
loopne
mov
movsl
mov
aad
shrl
mov
jl
pop
lahf
fbld
sub
adc
mov
cmp
jns
xor
fistl
jbe
cmp
sub
jle
test
or
pop
mov
data16
rclb
cld
es
mov
fimuls
sbb
icebp
mov
push
ljmp
call
jnp
shr
pop
mov
push
outsl
inc
cmp
incb
adc
pop
and
call
xchg
arpl
mov
insb
in
sbb
sub
dec
mov
jge
adc
push
andb
sub
add
ret
fdiv
and
dec
mov
lods
test
mov
pop
and
sbb
inc
xlat
fadds
pop
mov
inc
or
adc
lret
rcrb
inc
scas
inc
int
testl
xchg
sub
out
cltd
and
int3
enter
rcll
cmpsb
adc
cmp
jnp
or
or
loop
jo
jg
movsl
or
mov
fstpt
popa
lahf
mov
fwait
dec
push
ljmp
in
icebp
jae
mov
imul
iret
call
mov
add
icebp
fcoms
sbb
movsl
inc
daa
mov
adc
mov
pop
sti
flds
push
cmpsl
aas
iret
stc
push
fiaddl
adc
push
out
adc
sub
loop
lret
dec
hlt
mov
hlt
jbe
rclb
dec
insb
ljmp
out
dec
mov
dec
dec
mov
xchg
sbb
inc
add
inc
mov
iret
loop
and
fidivl
dec
inc
sbb
mov
sub
imul
ret
mov
test
aaa
gs
bound
mov
icebp
mov
test
mov
cmp
jp
pop
ss
roll
mov
in
dec
test
add
sub
inc
mov
pushf
in
add
mov
adc
scas
inc
cmp
mov
adc
imul
push
inc
add
mov
int
int3
adc
sub
and
cmc
push
inc
dec
and
jp
in
and
cmpsb
sahf
mov
xchg
mov
mov
je
or
adc
mov
inc
clc
icebp
mov
fists
sub
fdivrs
lds
popf
mov
test
and
aad
pop
sub
movsb
xchg
push
and
dec
cwtl
notb
add
xor
out
ja
mov
movsb
xor
sbb
push
add
xchg
lods
ds
add
jo
jno
das
rcll
adc
stos
enter
stos
xlat
test
xor
mov
lods
js
jae
movsl
or
inc
outsb
xchg
out
jne
mov
fldl
incl
lcall
or
inc
mov
ret
mov
inc
and
into
push
mov
xchg
mov
out
test
dec
dec
mov
notb
lock
stos
out
cmovle
pop
in
sub
push
mov
outsb
repnz
xor
in
mov
out
in
hlt
mov
mov
mov
into
lock
int3
out
cmpsb
dec
test
data16
add
fistps
in
idivb
xor
stos
ja
pop
ret
lcall
mov
out
in
cli
cmp
neg
sub
ja
and
mov
out
arpl
push
add
jmp
sub
icebp
push
std
push
cmp
and
in
scas
pusha
cwtl
rorl
add
sub
mov
movsl
mov
xchg
pop
pop
aad
adcb
cmpl
out
mov
xchg
out
in
int
lret
leave
pushf
dec
pop
ja
push
or
stc
das
movsl
faddl
out
les
push
pop
les
push
xlat
xchg
xorb
sub
push
into
add
and
into
bound
push
mov
outsb
cmpsb
es
or
sbbl
clc
jg
jb
rcll
cmp
jb
jnp
out
sbb
sti
xlat
es
cmp
push
jne
rcrl
cmp
ss
mov
xchg
jecxz
push
lods
insb
inc
ret
dec
in
fdivrs
xchg
into
dec
in
xchg
sbb
pop
jmp
add
cmp
clc
pop
lret
sbb
fstps
xor
ljmp
mov
jnp
xor
popf
cmp
push
cmp
imull
and
sbb
cmp
xchg
in
jle
add
int3
les
pusha
cltd
mov
cmpsl
mov
push
clc
xchg
into
jnp
mov
fdivr
aam
add
aam
stos
shll
adc
cmpsb
xchg
in
popa
neg
jp
xchg
cwtl
je
pop
sub
inc
fisttps
push
sbb
pop
sub
add
mov
push
je
hlt
test
lock
jge
push
sbb
sbb
pop
adc
fs
nop
iret
fs
cmp
pushw
mov
push
mov
jl
or
mov
into
adc
addr16
es
adc
cmpsl
jmp
mov
jns
inc
lea
pop
pop
shl
adc
mov
aaa
test
fsts
cmc
pushf
jbe
arpl
leave
test
repnz
cmp
mov
cmp
movsb
insl
repz
push
jns
dec
sbb
xorl
fistps
push
adc
icebp
jecxz
inc
push
push
filds
popf
aad
enter
lret
or
add
outsb
dec
fst
repnz
out
jl
out
into
shl
fs
lcall
or
outsl
testb
jle
neg
xchg
jbe
push
test
or
decb
rorl
daa
jo
or
push
cltd
imul
lcall
add
test
pop
lock
sbb
and
xchg
push
jns
cltd
inc
adc
pop
rolb
cld
nop
lcall
pop
adc
mov
cli
movsb
pop
idivb
dec
call
mov
dec
inc
mov
dec
lret
inc
sti
js
lods
inc
sbb
stos
lods
cld
sarb
aam
outsl
nop
fnstcw
lds
push
aas
pop
cmpl
jmp
jbe
fistpll
or
or
mov
fwait
xchg
int
push
sub
clc
cmpsb
pop
mov
push
rcrb
adc
pushw
cs
adc
mov
ds
rep
in
adc
jmp
pop
shrb
sti
mov
dec
test
out
sbb
inc
pop
je
scas
jno
out
mov
sbb
call
xchg
fsubrl
cld
mov
cltd
pop
out
lods
add
sub
push
addr16
test
ret
xchg
sub
pop
cmp
dec
dec
ret
cmpsl
or
sbb
or
sbb
addr16
cmp
push
cmp
jnp
fldenv
mov
adc
cltd
push
cmp
in
jno
inc
mov
bound
cmp
and
sub
jle
dec
and
addl
adc
jne
cld
in
insb
sub
sbb
jnp
pushl
test
out
sbb
mov
out
je
shll
xchg
inc
push
aam
mov
or
dec
mov
push
test
sub
aas
push
int
adc
pop
imul
lds
push
xor
scas
repz
cmp
and
fimull
and
xor
ljmp
mov
and
popa
jns
add
and
mov
sub
movsl
sbb
jle
mov
cmp
mov
sbb
ja
aas
add
sti
adc
dec
mov
in
xchg
mov
les
cmpsb
pop
sti
push
leave
cld
xor
sub
lret
jbe
cmp
ljmp
xchg
xchg
imul
ret
sub
sub
mov
lret
jne
aam
pop
aam
bound
adc
and
into
jmp
into
fst
in
push
out
pushf
xor
jmp
imul
cmpsb
arpl
xchg
push
icebp
mov
ret
fildl
and
jne
pop
sbb
jno
mov
test
test
test
push
or
shll
pop
pushf
or
sarb
push
adc
sbb
fadd
lret
pushl
xchg
fs
sub
push
cmpsl
movl
push
insl
mov
dec
flds
aaa
push
fwait
or
int3
loope
mov
push
inc
jne
xchg
loopne
stos
mov
dec
out
cmp
imul
and
xor
pushf
mov
sarb
lock
packsswb
lcall
pop
inc
xor
stos
call
les
and
pushl
and
insl
push
xchg
repnz
loopne
adc
test
popl
mov
mov
mov
fldl
nop
adc
inc
cmp
mov
push
push
insb
inc
jnp
insl
dec
and
adc
mov
lds
xchg
mov
xor
gs
sbb
enter
sub
out
int
addr16
mov
sbb
add
jb
mov
or
push
mov
cmp
stos
pop
dec
addr16
jmp
mov
sbb
shlb
es
sub
inc
arpl
add
mov
clc
fimuls
test
mov
ss
in
bnd
push
jo
in
loope
jnp
jbe
ja
les
and
pop
clc
or
outsb
jmp
aam
aas
inc
cmpsl
adc
lret
outsb
xlat
outsl
jbe
mov
mov
pop
sti
fucomi
pusha
aaa
cli
aad
sbb
mov
rcrl
sbb
inc
or
sub
insb
xlat
jae
out
iret
sbb
dec
lcall
pop
push
sbbl
inc
iret
mov
sahf
adc
and
outsb
cmp
ja
pushf
popa
stc
outsb
lret
sbb
cmpsb
xor
mov
data16
and
cmp
sub
mov
mov
jo
fsubrl
xor
pop
daa
push
xor
push
pop
and
into
aas
or
mov
xchg
adc
xor
add
in
add
xchg
or
push
cmp
or
insl
pop
or
mov
leave
add
dec
pop
jp
or
jg
ja
sti
inc
lods
filds
mov
and
das
aam
add
outsl
scas
cmp
fsubrl
adc
loop
mov
add
jmp
sbb
rorb
mov
inc
imul
aaa
mov
mov
shll
lret
sbb
rorl
test
sarb
popf
jns
xor
add
testb
mov
cmp
add
cmp
sbb
inc
insl
leave
mov
jb
lcall
mov
jmp
jp
mov
mov
insl
das
loope
dec
sbb
sub
cmc
jb
gs
mov
lds
cli
or
dec
cmp
pop
inc
aaa
fwait
mov
xchg
popa
out
mov
fcompl
sti
out
loopne
sbb
mov
cld
arpl
mov
mov
mov
add
sub
fistps
repz
xchg
xchg
popf
dec
pop
pop
dec
inc
in
insl
xchg
cmpsb
mov
imulb
test
jo
lds
pop
lret
cli
fistpll
sbbl
notl
mov
pushf
pusha
movsb
push
stc
cmpsb
pop
testl
dec
xchg
enter
mulb
jae
or
dec
iret
rclb
les
adc
jmp
fcomip
sub
imul
cs
je
mov
xchg
mov
mov
insl
mov
mov
pop
clc
divl
jns
pushf
inc
mov
fisubrs
jmp
scas
test
push
mov
jmp
jp
push
fcmovne
mov
xchg
mov
loop
mov
sub
call
xor
clc
dec
push
pop
sbb
sub
lds
mov
or
or
adc
in
jmp
shrl
push
adc
aaa
dec
es
mov
or
mov
insb
sub
jns
sub
pop
cmp
movsl
sbb
call
jmp
cmp
stc
test
inc
xchg
add
shll
and
dec
fiaddl
mov
add
jge
bound
push
dec
adc
cmc
cmpb
push
sbb
in
pusha
xor
fbstp
sub
outsl
dec
cwtl
jle
call
js
testl
dec
dec
xchg
and
lret
insl
sbb
dec
jecxz
adc
push
xor
xor
imul
xchg
fadd
and
mov
call
fiaddl
into
leave
fiaddl
ja
rolb
or
pop
xor
jecxz
sub
push
rcll
cmp
and
insl
cs
jmp
outsl
cld
push
js
mov
test
mov
mov
loop
adc
out
add
push
scas
movsl
pop
pop
test
push
jbe
xchg
jae
jp
das
je
retw
sub
dec
leave
es
xlat
pop
mov
dec
jae
pushl
lds
mov
mov
out
fs
stos
xorl
lret
or
mov
xor
cmp
add
sbb
pop
and
mov
xchg
xchg
cltd
addr16
imul
jb
out
fs
push
into
jmp
fisttps
sbb
pop
ljmp
xchg
mov
sbb
je
pop
popa
rolb
das
rcrl
pop
stc
rcr
or
out
dec
dec
daa
pop
in
mov
add
in
frstor
adc
shrl
scas
fsubs
push
xchg
pop
fdivs
jge
jno
sub
mov
mov
fs
jg
push
and
out
xor
sub
xchg
dec
xchg
xor
pop
or
xlat
nop
mov
rcll
or
adc
mov
ljmp
movsb
ds
sti
and
mov
shll
fadds
out
mov
inc
cli
in
mov
xorb
pop
aas
mov
stos
sbb
push
add
sub
add
scas
leave
cmc
fisubl
push
push
mov
pop
mov
or
jno
add
cmpl
cmp
inc
add
xchg
dec
loope
mov
jecxz
nop
lock
xor
loop
bound
fdivrl
inc
push
dec
data16
mov
xchg
inc
jne
stos
xchg
mov
jbe
andl
add
push
sbb
lods
imul
outsb
fmul
gs
add
lahf
popf
lods
and
das
cmc
sub
xchg
push
fsubrl
pop
rclb
pop
lods
push
sub
es
fisubrs
and
add
bound
mov
xchg
out
rolb
xchg
fwait
cmpsb
and
pop
push
sbb
ret
ljmp
aas
dec
cmp
outsl
lahf
adc
lret
jecxz
sub
test
xchg
mov
pushf
popf
mov
or
mov
push
sbb
ret
sub
inc
shrb
sub
mov
das
pop
mov
add
xor
pop
cld
sub
out
mov
aas
and
stos
ret
int3
sbb
or
inc
repnz
in
rcrb
orb
cmp
repz
cwtl
rcll
mov
lret
mov
ror
in
insl
pusha
cmp
xchg
jae
jae
push
mov
stc
aaa
mov
movsb
mov
jp
movsb
fsts
stc
cmp
ret
xor
cmpsl
das
sahf
xlat
mov
ret
leave
adc
mov
std
jmp
sub
mov
cmp
mov
lock
daa
pop
pop
mov
enter
push
popf
sub
dec
pop
out
mov
sbb
and
in
dec
pop
inc
aaa
mov
jl
pop
stos
andl
out
arpl
sbb
int
lcall
xchg
in
pushf
popa
sahf
pop
cmpl
mov
sbb
xchg
rorl
es
movsl
int
in
imul
cmp
push
mov
cmpsb
xchg
dec
mov
sbb
rdpmc
jne
mov
mov
mov
cwtl
cmp
cld
fcomi
xchg
cli
addr16
hlt
mov
pop
aad
sbb
push
stc
mov
pushf
or
mov
std
lods
int
mov
pushl
movsl
inc
das
push
gs
mov
mov
xor
cmpsb
push
ret
stc
lods
roll
daa
mov
sub
push
mov
xor
ljmp
outsb
es
push
add
pop
xchg
sub
mov
outsl
insl
lds
push
or
fs
aam
sbbl
mov
sub
xchg
mov
xlat
mov
stc
icebp
scas
test
ret
sbb
xchg
sbb
mov
push
jmp
out
push
mov
insb
or
lret
std
sbb
movsb
adc
es
jg
movsl
mov
sbb
inc
lcall
bound
lock
cmpsb
mov
movsl
cmpsb
popa
push
mov
jne
adc
sbb
fucomi
adcl
mov
mov
outsl
pop
pusha
mov
lods
jb
outsb
adc
xchg
and
sti
pop
cli
call
ljmp
scas
jg
xor
xchg
dec
and
jne
dec
jge
sti
cmp
xor
popf
mov
shl
xchg
adc
sbb
fsubl
inc
mov
fwait
push
insb
inc
scas
ja
jne
cmp
neg
or
out
inc
push
leave
addr16
mov
and
jo
inc
add
dec
scas
loope
fadd
xchg
arpl
mov
mov
push
aas
push
outsb
fwait
mov
test
sub
jge
jmp
pop
fsub
sahf
mov
xchg
sub
addb
test
sete
or
hlt
fnstcw
movsl
or
and
jmp
push
xor
pop
inc
orb
leave
outsl
dec
mov
xchg
stos
push
and
out
adc
inc
mov
jp
test
insl
fstps
jne
push
idivl
out
cmp
pop
sbb
sahf
test
clc
movswl
out
imul
push
cli
fbld
add
arpl
ret
inc
nop
mov
dec
xchg
cwtl
repz
push
fsubl
adc
nop
jmp
cmp
jne
inc
mov
ficomps
xchg
jb
loope
jb
adc
add
xor
jecxz
pushf
in
push
outsb
xor
das
data16
arpl
sarb
test
sbb
outsb
add
call
xchg
jmp
push
bound
jecxz
jp
mov
cwtl
cmp
stc
sbb
xor
clc
outsb
fistpll
cld
shl
ret
fsubs
gs
mov
jmp
fmull
jb
sbb
mov
or
mov
sub
lcall
mov
out
mov
mov
mov
fs
int3
or
xchg
and
dec
xchg
xchg
mov
push
lods
push
pop
ret
xchg
mov
jnp
test
testb
pop
mov
pusha
jbe
adc
adc
lcall
and
sti
or
lea
cmp
adc
jp
cli
andb
xor
xchg
in
inc
mov
sti
xchg
mov
xchg
sbb
and
fwait
clc
enter
dec
sbb
stc
aas
dec
dec
fsubs
or
jb
dec
add
jle
inc
cmp
mov
mov
pushf
sti
shrl
dec
repnz
mov
xor
push
cld
inc
dec
out
jae
sbb
xor
jns
mov
das
pop
jle
and
cmp
sbb
dec
rcrb
xchg
add
hlt
jg
push
ljmp
add
dec
and
rcll
or
lcall
jne
pop
aaa
jg
jp
sbb
fdivl
inc
lods
jmp
sbb
cmp
xchg
xchg
daa
into
push
adc
mov
and
add
out
lcall
xchg
xor
dec
cmc
es
and
ret
xor
mov
lds
cld
adc
lea
add
mov
cmp
out
adc
push
inc
mov
aad
pop
jmp
fwait
mov
jo
mov
cmp
and
lret
mov
xchg
inc
icebp
leave
pushf
shld
fisubs
out
xchg
icebp
pushf
es
sbb
cwtl
sub
mov
nop
xor
in
fldenv
xlat
das
ret
jle
addr16
fwait
xchg
divl
stos
pop
push
stos
out
stos
pop
sti
sub
dec
test
add
push
adc
rclb
out
mov
push
push
sbb
mov
ljmp
dec
sbb
nop
inc
lcall
push
addr16
push
mov
sub
cmpl
inc
jo
and
lea
and
sub
pop
out
inc
push
and
out
es
bound
cld
sub
mov
adc
push
arpl
clc
icebp
dec
mov
and
f2xm1
je
cs
gs
lods
jno
enter
mov
xchg
or
lret
jns
into
xor
loopne
push
push
rol
dec
das
pop
pushf
mov
cmp
mov
pop
ficoml
aad
fwait
paddb
dec
cmp
xchg
cmpsb
lods
test
lret
mov
fwait
push
jge
or
stos
aam
xchg
popa
dec
dec
mov
dec
xchg
mov
lock
rcrb
xchg
mov
repnz
inc
or
mov
jp
aaa
cli
fsubs
out
mov
loope
cmp
xchg
or
lret
push
pop
movsl
fdivrl
outsl
and
in
daa
fwait
jl
adc
call
add
cmc
ficomps
outsl
insb
lret
sub
mov
int3
fidivrs
outsb
rcrb
das
dec
pop
into
fmul
xor
xlat
aam
add
out
mov
jns
ret
pop
inc
scas
pushf
pop
and
sub
push
stc
jb
insl
movsb
in
ror
call
add
in
push
and
jmp
dec
incl
fstps
mov
loop
inc
mov
lahf
pop
push
push
inc
mov
fimuls
dec
add
cld
push
mov
pavgw
cmpsl
dec
sbb
in
xchg
inc
xor
bound
mov
lds
jmp
orl
in
test
shr
mov
mov
sti
stos
or
aaa
cltd
outsb
rcl
popf
mov
stos
cmpl
push
repz
mov
pop
cmp
mov
xchg
cs
mov
adc
fistpl
pop
aad
dec
iret
push
push
sub
mov
mov
les
sub
lock
ds
icebp
imul
or
mov
pop
loop
ja
subb
push
mov
sbb
out
xor
cmc
xchg
cltd
adcl
mov
aam
add
inc
jp
aam
xchg
repz
jae
insb
mov
enter
enter
jg
loope
test
mov
shl
aaa
mov
jno
xor
jno
daa
inc
sub
popa
loope
jl
mov
adc
and
dec
in
sbb
and
sbb
add
inc
test
rorl
jge
inc
nop
pop
sub
add
rep
push
xor
and
loopne
mov
mov
pop
dec
inc
jmp
xchg
cmp
adc
xchg
out
ja
les
ss
int3
outsb
fs
push
sahf
ljmp
int3
cmp
aam
cltd
xchg
jecxz
rorl
pop
ds
negb
pop
bound
gs
sub
insl
dec
xchg
addr16
cs
test
pusha
xchg
bound
clc
inc
insl
and
add
xchg
lods
stos
aaa
outsl
call
mov
xchg
pop
addr16
scas
lock
js
popf
ja
jo
and
clc
test
out
mov
cmp
daa
scas
je
push
mov
pop
mov
arpl
jae
pushl
loopne
mov
sbb
push
mov
lret
stc
bound
or
call
clc
int3
or
sahf
test
pop
add
mov
sbb
xor
les
and
add
pusha
insb
cmpsl
add
femms
pop
sub
mov
sbb
inc
sti
dec
cmp
pop
cli
lea
imul
pusha
lret
mov
arpl
mov
lahf
jns
pop
fs
fidivrs
mov
sub
aam
jmp
sub
add
push
xchg
cmpsl
test
xchg
rol
push
ds
pop
mov
fdivrs
cwtl
cmp
aas
fwait
cmc
mov
push
in
lds
shr
or
xchg
lret
inc
push
stos
mov
push
sub
and
dec
das
out
movsb
sbb
mov
dec
xor
sub
push
inc
cwtl
leave
adc
ja
mov
mov
icebp
in
mov
mov
jp
outsb
jecxz
imul
cmp
cmp
and
ljmp
cmp
hlt
sbb
cmp
adc
jae
cld
mov
adc
mov
iret
mov
xchg
push
sbb
fisubs
mov
lret
inc
stos
fsubl
push
imul
and
movsl
outsl
jmp
pop
loop
push
pop
int3
lahf
mov
adc
outsl
xchg
pop
cmpsl
adc
subb
dec
and
mov
sub
lret
int
je
mov
rclb
adc
mov
sbb
jae
mull
stos
fnstcw
inc
mov
andb
int3
sbb
add
lret
mov
arpl
rorl
enter
push
jge
cmp
mov
and
and
cmpl
mov
mov
add
pop
minps
lds
dec
fdivr
mov
lcall
jne
jns
mov
dec
aam
pop
fcomps
and
decb
out
icebp
loope
aaa
mov
and
dec
jno
daa
sub
jmp
adc
and
sub
cli
sti
mov
push
inc
push
ficoms
roll
add
sahf
incb
addl
cmp
data16
repz
xchg
fistps
adc
in
fstl
clc
cld
sub
sbb
or
pop
inc
inc
xlat
inc
xor
pop
mov
push
jl
ret
add
dec
mov
lods
nop
push
mov
loopne
movsl
in
jne
out
cmp
mov
jecxz
adc
pop
pop
xchg
lods
mov
stos
cli
inc
sub
outsb
mov
pop
int
xorl
hlt
mov
lahf
push
sbb
sbbb
jmp
push
lret
pop
add
mov
sbb
les
sub
js
cld
in
loopne
xor
inc
cltd
mov
xchg
outsb
xor
xchg
bound
dec
aad
testl
cmpsb
ds
mov
stc
int3
popa
cmp
push
mov
lods
adc
call
push
repz
cmp
fldenv
xor
nop
lcall
or
pop
inc
notb
adc
aaa
cs
ljmp
lea
in
icebp
leave
enter
pop
jge
mov
dec
es
sbb
clc
mov
mov
pop
push
cld
xor
cmp
dec
sub
arpl
je
dec
mov
fbld
das
daa
or
mov
fs
test
popl
addr16
sbb
push
add
and
dec
lahf
arpl
enter
mov
pop
pop
push
mov
rclb
fldt
es
jecxz
xlat
push
sbb
outsb
push
dec
scas
pop
and
jns
idivb
sub
and
nop
in
mov
push
lret
jecxz
dec
idivl
das
sub
add
stos
out
and
mov
inc
lods
pop
and
setp
and
jge
frstor
dec
divl
mov
inc
shlb
es
lcall
ja
or
adc
insb
xor
cmp
nopl
int3
mov
sub
xor
push
cmp
or
push
cmp
in
hlt
out
jbe
sbb
sub
xchg
push
mov
push
cmp
outsb
sbb
sbb
fldenv
incb
push
sbb
xor
lahf
sbb
mov
mov
arpl
push
sbb
push
js
mov
mov
idivb
lods
xchg
shlb
mov
pop
mov
mov
mov
adc
mov
push
out
inc
mov
sti
mov
pop
fsub
outsb
push
pop
pop
insl
pop
adc
sbb
dec
shlb
lret
sti
sbb
call
jbe
push
insl
add
stos
jecxz
jle
sbb
pop
mov
mov
sub
mov
lret
sbb
movsb
adc
bound
pop
xlat
push
adc
mov
mov
ja
xchg
rol
in
rorl
in
mov
stos
cmp
dec
cmp
out
jae
lret
fs
or
ljmp
gs
daa
cmp
and
dec
jp
fcmovb
test
shrb
lods
dec
pop
mov
mov
out
test
or
lock
into
aas
incb
mov
dec
xchg
nop
cmp
xchg
mov
or
loope
or
std
prefetchwt1
cmp
test
arpl
hlt
sbb
int3
fldt
es
dec
out
lahf
push
popf
stos
loope
xchg
sti
scas
nop
xchg
iret
addr16
fistl
imul
cmp
repz
pushf
mov
push
jle
push
jo
mov
imul
jns
stos
inc
dec
insb
mov
rcrb
loope
jnp
push
in
add
jbe
jl
mov
sbb
or
addr16
jo
cmp
inc
fmull
icebp
adc
cli
push
mov
mov
cli
mov
push
jo
hlt
test
jae
pop
cmp
cmp
repz
scas
das
xchg
adc
add
inc
mov
fcoml
sub
sub
imul
out
xchg
leave
or
aad
sub
push
pop
sub
movsb
inc
dec
aas
sub
ret
shlb
xor
std
loop
adc
jne
fdivrp
inc
or
push
sbb
mov
inc
mov
insl
add
xor
dec
int3
adc
enter
mov
add
std
jae
rorl
mov
jno
mov
loope
sub
jg
jg
xor
jne
nop
and
cmp
mov
dec
and
pusha
addr16
cs
and
pop
lods
push
push
das
sub
pop
sub
xchg
ja
or
mov
add
loope
pop
lret
xor
les
ret
mov
mov
and
or
pop
sti
dec
in
xchg
and
cmp
pop
repnz
ret
add
pusha
inc
test
aaa
test
push
test
xor
sbb
test
mov
push
rcrb
push
and
fscale
sub
add
cmp
fldln2
add
out
out
fistpl
add
mov
mov
mov
xlat
inc
into
add
jmp
mov
cs
mov
pushf
add
add
pusha
loope
add
pop
andb
push
mov
add
push
rcrb
mov
jmp
mov
jecxz
pop
jmp
xchg
in
xchg
sbb
in
cmp
js
insl
shr
push
dec
enter
xor
fcomps
inc
lcall
cmp
lcall
mov
dec
adc
cmp
or
xor
push
sub
lods
nop
lcall
pop
pop
gs
push
cli
call
or
cwtl
mov
dec
lods
inc
scas
aam
cmp
in
adcb
sub
loopne
nop
pop
pop
mov
rep
std
rorl
shll
mov
add
adc
divb
sbb
cmp
hlt
sbb
push
or
int
cld
wrmsr
es
or
fwait
imul
in
jle
xchg
mov
push
popf
inc
pusha
call
adc
mov
pusha
jmp
repz
cltd
frstor
iret
and
xlat
fstps
shr
out
mov
movsb
cmc
in
mov
xorl
cmovae
scas
fcmovu
dec
int
js
dec
stos
ret
lahf
popa
stos
fstp
shl
lahf
fsts
sub
jnp
inc
cmc
sbb
and
mov
sub
filds
xlat
sub
cmp
fstp
pop
mov
mov
inc
xor
scas
roll
fsubrs
jo
in
mov
sbb
pop
jge
mov
out
push
lret
leave
js
cltd
push
iret
icebp
insb
mov
sbb
xchg
mov
cli
inc
sub
aad
mov
mov
jge
push
jmp
add
sbb
xor
hlt
xchg
xor
add
pop
sbb
je
lcall
das
shlb
ds
in
push
pop
sbb
pusha
insl
shll
testb
daa
ret
inc
xchg
aad
shrb
das
jl
cmp
adc
dec
mov
jecxz
cmp
mov
in
jge
gs
mov
sub
mov
cmp
in
nop
out
mov
imul
lar
and
sti
stc
test
shll
aam
nop
push
jecxz
sbb
out
jp
movb
dec
ret
rcr
dec
es
lods
mov
mov
repz
insb
into
into
dec
adcb
fdivs
xchg
sub
push
mov
inc
out
jb
xor
jle
jle
or
adc
aam
cmp
lods
out
lds
pop
pusha
sub
mov
xchg
sub
mov
inc
loope
jecxz
pop
add
mov
xchg
cld
sub
enter
jno
ljmp
mov
mov
lds
pop
test
into
movsl
lret
in
jl
jecxz
mov
jo
ja
sub
add
inc
cwtl
add
lret
lock
or
popf
jb
cmp
sbb
push
cmp
pop
imul
in
into
imul
pop
push
xor
adc
jae
mov
pop
aam
test
outsl
pop
lret
cmp
scas
xor
sarl
xchg
and
ja
mov
mov
out
dec
inc
nop
popa
pop
xor
push
adc
add
cmpsl
ds
int
cmp
and
nop
hlt
hlt
and
les
sarb
cmp
xchg
in
dec
inc
pop
test
lahf
mov
sarb
dec
lods
stos
imul
inc
sub
mov
js
dec
inc
cmpsl
dec
jns
mov
daa
cmp
popfw
inc
les
sti
ss
jge
push
sahf
das
push
fsubrl
jnp
cmc
push
aad
mov
lods
push
mov
call
inc
jae
aad
or
jge
stos
add
xchg
shlb
sbb
mov
adc
add
mov
loopne
pop
push
add
cmpsl
add
js
lret
sar
lock
add
sbb
daa
xchg
lret
jne
mov
pop
mov
cmp
pop
insb
stos
adcl
dec
movsb
std
sub
xorl
hlt
jp
adc
xchg
xlat
pop
int3
sub
inc
les
pusha
testb
nop
std
adc
add
add
stos
in
dec
mov
mov
push
sbb
pop
scas
mov
push
int3
rcrb
pop
cmpl
mov
out
nop
cmc
mov
dec
daa
scas
aas
lret
add
mov
jns
cmp
nop
or
leave
or
rclb
jmp
lock
adc
rcr
ret
mov
in
aas
inc
imul
mov
out
es
xor
fstl
pop
fcomp
cltd
mov
aam
ljmp
in
pusha
and
movsb
lcall
idiv
popf
jns
popf
sub
sbb
shrl
ret
xor
inc
fldenv
xchg
dec
shrb
push
das
sub
cmp
lock
pop
xchg
inc
xchg
push
or
cmpsl
movsl
inc
mov
add
clc
ljmp
mov
inc
cmpb
sub
push
scas
jmp
in
daa
les
out
and
nop
jmp
outsl
jl
inc
loope
mov
pushf
ja
jae
test
jmp
arpl
pop
test
verr
scas
cmp
test
add
leave
add
pusha
dec
mov
push
lcall
shll
aad
mov
ds
xor
jae
movsb
jge
lret
sub
divl
or
stos
das
mov
mov
test
mov
jge
mov
pushf
js
mov
xchg
xor
push
clc
xorl
push
das
stc
cwtl
and
mov
mov
mov
jnp
movsb
cmp
lcall
in
xchg
or
sub
add
jge
mov
not
cmp
addr16
iret
fdivl
mov
xor
ljmp
scas
aas
mov
adc
mov
jl
pushf
pop
cltd
cld
jnp
or
cmp
in
xor
movsl
out
jbe
insl
dec
in
dec
into
xor
xchg
js
stc
and
jmp
mov
mov
mov
inc
daa
outsb
repz
out
mov
outsb
lds
popa
pop
adc
fucomp
xchg
enter
nop
jbe
mov
push
jecxz
push
stc
cmc
je
imul
mov
mov
pop
icebp
dec
mull
icebp
sbbl
add
data16
inc
imul
jne
xchg
outsl
mov
mov
mov
stos
out
pusha
jl
adc
ja
mov
lea
dec
pop
pushf
enter
repnz
pop
fbstp
inc
lods
cwtl
arpl
out
insl
sti
sbbl
cltd
dec
imul
fldcw
movsb
cs
daa
push
call
out
pop
nop
pop
testl
mov
sbb
cmpsb
fisttpl
mov
and
rorl
jg
fdivrl
jb
les
ja
lcall
xchg
dec
repz
push
repnz
dec
aad
mov
mov
inc
std
push
pop
cmpl
cmc
cmc
decb
scas
repz
jae
rep
ja
pop
bound
rcl
jo
out
push
adc
arpl
lret
int
shrl
insb
inc
in
jg
push
dec
insb
jns
lret
cmpsb
pop
adc
fwait
xor
rorb
insb
cmpsl
mov
mov
outsl
movsl
pushf
push
xchg
nop
insb
or
cld
mov
rol
push
decl
push
or
dec
dec
call
xchg
inc
push
shrl
in
mov
mov
scas
fdivl
dec
dec
lods
add
neg
lock
mov
jbe
mov
jp
sahf
xchg
pop
jl
push
mov
insb
repz
mov
in
int3
sahf
ret
jge
lahf
sub
and
ret
in
inc
test
pop
push
sbbl
popw
inc
addr16
mov
les
pop
cmp
popa
out
or
rcrb
cmpsl
sahf
shll
aaa
scas
daa
adc
xchg
fists
rcrl
push
in
xlat
ss
add
jg
shrl
jecxz
mov
jmp
and
lret
jg
int3
clc
jg
inc
leave
pop
xor
pop
cwtl
inc
mulb
inc
pushf
inc
xor
hlt
jbe
cmp
repz
cmc
push
lret
faddp
into
loop
sbb
inc
test
test
ja
xchg
stos
and
roll
decl
adc
sbb
js
je
or
mov
push
sub
sub
scas
mov
mov
stc
xchg
lret
cmpsl
cmp
dec
mov
cmpsb
pop
or
popf
and
jno
add
leave
cmpsl
aam
shll
cmp
push
xor
sub
clc
repnz
xchg
inc
mov
add
pop
xchg
inc
daa
rcrl
xchg
fisttpll
movsl
mov
xor
sbb
xchg
hlt
gs
pushf
push
in
cmp
xchg
sti
or
test
jmp
hlt
xchg
lcall
popf
inc
cmpsl
out
jle
fcomps
xlat
into
hlt
je
je
xor
test
mov
xchg
mov
adc
pop
inc
insb
imul
cmpsb
mov
pop
addr16
jbe
jno
and
shrb
add
push
ljmp
divl
fidivrl
lods
mov
imull
test
xchg
pop
or
xorb
roll
dec
stos
push
push
dec
dec
decl
leave
push
push
jl
addr16
je
pop
xor
jge
jge
bound
lret
or
push
push
dec
xchg
mov
aas
dec
pop
outsl
into
adc
jns
push
and
dec
sahf
shr
cld
adc
xlat
xor
mov
adc
add
out
push
repnz
loope
xor
dec
fisttps
xchg
add
pop
nop
das
jbe
xchg
and
ret
andb
cmp
je
mov
xchg
push
dec
mov
cmp
push
xchg
or
popa
jg
cmpsb
call
in
sbb
jle
push
hlt
pop
push
add
or
push
inc
aas
call
pop
and
popa
mov
xor
pop
and
fs
pop
in
stos
dec
mov
pop
gs
das
or
ret
repz
and
add
mov
xchg
jne
mov
fwait
aas
hlt
mov
outsl
push
mov
int
fcmovnbe
divl
out
sbb
dec
and
xchg
mov
add
xor
mov
adc
mov
imul
or
pop
mov
inc
in
std
out
lahf
jmp
inc
inc
dec
mov
mov
pop
pop
pop
push
inc
push
pusha
cmp
ss
jge
lds
sbb
popa
add
or
xor
fcoml
insb
aad
dec
xchg
sbb
mov
arpl
add
cmp
and
and
out
mov
rorl
dec
stos
mov
jbe
adcl
xchg
loope
dec
movsb
add
lods
push
arpl
dec
fnstsw
ror
insb
sbb
icebp
incb
loopne
lret
mov
repnz
js
js
shll
icebp
and
sbbb
hlt
sbb
mov
in
mov
mov
ja
dec
xlat
jno
and
xchg
xor
push
cli
jnp
xchg
into
lods
mov
repnz
aas
push
cld
lret
fildll
fsubrl
pop
cmp
stc
lock
loopne
aad
aam
hlt
pop
jp
xchg
nop
or
test
nop
int
daa
cli
push
fwait
xor
in
sbb
pop
push
mov
loopne
or
mov
push
hlt
rolb
shlb
mov
or
inc
popf
outsl
daa
scas
cmp
push
cmp
xor
out
aam
fcmovnbe
xchg
cmp
inc
adc
sub
mov
outsl
dec
dec
mov
jnp
test
ja
imul
sbb
xlat
ret
mov
imul
inc
mov
pop
sbb
add
dec
xlat
pop
ja
pop
push
arpl
mov
insl
aam
jne
push
and
xchg
lcall
int
mov
aam
sarl
mov
add
sub
out
push
or
and
popf
movsb
aas
sbb
push
sub
and
sbb
orb
iret
mov
sub
sbb
xchg
dec
push
imul
inc
jne
mov
sahf
ret
and
cvtps2pd
decb
shlb
test
or
or
xor
dec
loop
sub
adc
jns
sar
inc
movsb
sub
pop
ret
mov
jmp
mov
push
sbbl
sub
ds
adc
and
or
add
push
inc
inc
mov
insb
mov
ss
cld
or
adcl
leave
cmpsl
fdivrs
pop
fsub
or
mov
adc
ljmp
xlat
xor
push
jbe
dec
pop
fnstenv
incl
aam
data16
ret
dec
test
rcr
insb
dec
pop
loop
mov
xor
jl
xor
push
push
xor
cmp
imul
jmp
les
leave
lcall
mov
mov
outsl
ss
jnp
mov
push
scas
adc
arpl
sbb
jp
outsl
cmpl
mov
imul
cmp
mov
jl
subl
lret
stos
xor
inc
push
mov
xor
repz
stos
orb
adc
test
mov
in
lock
call
loop
cld
xchg
push
scas
adc
into
and
and
or
dec
outsb
and
fsubs
out
mov
push
jg
aam
push
cmpsl
ja
subb
push
ljmp
push
ja
lea
push
mov
aas
xchg
sbb
mov
push
sbb
fcoms
pop
sbb
js
sbb
pushw
sbb
mov
push
or
lds
xchg
scas
rcl
dec
dec
out
fnstenv
mov
mov
or
push
cmc
sbb
and
xor
rcrb
jmp
clc
sbb
repnz
xchg
adc
cmp
cs
adc
mov
movsl
lds
xchg
test
mov
dec
and
mov
test
pop
repnz
bound
int
shlb
repnz
mov
adc
jae,pn
jge
xor
add
orb
ss
xchg
adc
imul
shll
mov
mov
outsb
insl
imul
push
xchg
push
inc
mov
into
filds
pop
dec
in
sub
stos
les
stos
dec
jle
test
cltd
stos
and
out
leave
outsl
bound
test
sub
add
pop
cwtl
add
and
mov
mov
test
sub
sub
mov
fnsetpm(287
cmc
dec
movsl
ret
add
add
cmpxchg
xor
in
or
arpl
mov
ds
cmp
mov
push
test
sub
cmp
arpl
jle
and
adc
dec
mov
ds
sbb
mov
testb
adc
inc
sub
rcl
daa
rorl
int
xchg
inc
test
jl
ret
xchg
fcmove
outsb
or
nop
pop
fldenv
push
rorb
test
dec
jno
adc
push
dec
shl
sbb
nop
rcrl
add
mov
and
pop
lahf
jle
mov
mov
hlt
inc
test
sub
enter
adc
mov
xchg
fwait
test
imul
test
leave
or
add
fld
inc
scas
les
cld
dec
addr16
popf
das
lahf
cmp
cwtl
and
subl
cmpsb
lods
pop
jae
xchg
and
icebp
jl
test
clc
sbb
dec
insl
cmp
mov
and
icebp
ja
aam
lret
push
pop
sahf
add
mov
fs
pop
test
inc
mov
nop
pusha
add
sub
xchg
pop
pop
das
adc
adc
mov
fwait
mov
and
inc
dec
push
push
outsb
inc
push
cmp
jb
sub
cmp
mov
cltd
inc
adc
repz
cmpsb
xchg
cmp
mov
xor
mov
cli
xor
movsl
lock
in
jge
inc
dec
nop
jnp
xor
sbb
outsb
insl
or
loopne
mov
cmpsb
mov
ret
fistl
inc
rcrl
repnz
cmp
aaa
push
fs
and
push
push
cld
mov
lods
dec
mov
call
lcall
jae
sahf
mul
or
xor
or
inc
enter
cmpsl
sub
pop
push
cmp
je
mov
push
imul
mov
mov
lods
inc
push
mov
pop
les
int
lock
xlat
mov
call
fldt
push
lock
aas
icebp
jle
add
cmp
sub
push
mov
xchg
ds
push
pop
sub
jmp
sub
es
pop
pop
adc
cli
xor
fs
pop
shll
arpl
sbb
xor
xor
lods
ljmp
cltd
fs
clc
bound
sub
popa
pop
sar
leave
adc
pushf
js
adc
mov
jbe
cmp
push
out
lahf
inc
out
jb
push
dec
and
pop
test
pushf
scas
xor
fwait
pop
mov
outsb
cli
inc
cmp
mov
or
daa
test
cmc
mov
ljmp
stos
pop
mov
test
mov
das
fidivrs
mov
hlt
cwtl
ljmp
call
jmp
shrl
cmc
adc
pop
mov
xchg
cmp
xor
xchg
push
stos
std
hlt
ficomps
mov
lcall
loopne
adc
xchg
stos
ljmp
popf
jg
xchg
add
fmul
add
stos
xchg
jmp
or
add
xor
xor
push
or
mov
mov
sbbl
fadd
icebp
mov
hlt
sub
jno
cmp
cmpb
or
jae
and
jge
ret
outsl
sub
inc
jae
cltd
stos
stos
xchg
push
jp
lods
fildll
or
lret
in
addb
pushf
and
cmp
mov
nop
sub
ljmp
repz
mov
popa
pop
mov
mov
xlat
sub
sarl
xor
sbb
pop
xchg
arpl
fnstenv
cmp
push
mov
sbb
repz
mov
addr16
notl
xor
dec
sub
out
lock
mov
icebp
bnd
and
notb
jae
gs
add
or
mov
and
out
pop
cmc
test
inc
loope
data16
mov
ret
mov
into
shrb
movsb
pop
negl
in
xchg
roll
xor
je
mov
lret
aad
or
jnp
fldt
dec
sbb
xor
test
dec
sub
mov
sti
sarb
pop
dec
inc
pop
pop
inc
inc
mov
nop
in
out
or
cmp
test
add
std
jl
pop
lods
and
js
adc
add
push
push
cltd
mov
int3
cltd
lds
inc
xchg
add
icebp
cli
out
jp
adc
adc
lock
insb
adc
jle
imul
popa
pop
sbb
ss
shrb
cmp
outsl
faddl
push
into
mov
sbb
decb
mov
pushf
sbb
or
mov
xor
and
fisttpl
jge
pop
jno
jl
inc
rcr
jne
rcll
das
jno
lret
sbb
lods
xor
leave
test
inc
inc
adcl
stc
out
mov
rep
fmuls
push
xchg
mov
loope
fiadds
insb
pop
pop
lret
and
insl
ds
adc
fwait
movsb
sbb
pop
xchg
std
jecxz
jbe
stos
dec
mov
test
das
mov
inc
inc
fstpt
adc
frstor
dec
adc
mov
scas
dec
xor
loop
mov
clc
mov
jle
fwait
lock
xor
sbb
out
xlat
mov
out
fdivrp
or
sub
loopne
adc
test
cli
or
iret
jbe
cmc
std
int3
jbe
sub
fmul
adc
sub
bound
jne
popa
dec
sbb
outsl
fdecstp
adc
lahf
negb
or
cmp
mov
and
data16
xchg
imul
or
add
iret
lcall
and
xor
movsb
das
xchg
lahf
pmullw
pop
xor
mov
mov
popa
out
push
and
addr16
stos
xchg
dec
jle
cli
or
mov
aas
les
inc
addr16
aad
sbb
fbstp
pop
std
jae
popa
cli
sahf
sarb
cmp
push
popf
das
pop
and
aam
cmp
clc
hlt
sahf
and
popf
cs
jp
push
lret
icebp
pop
jecxz
lret
arpl
clc
mov
mov
sarb
push
pop
mov
sub
dec
push
sahf
clc
adc
rcrl
lock
and
out
and
xchg
scas
push
popa
mov
ljmp
in
mov
sub
add
or
cs
addr16
ret
roll
shlb
rclb
sbb
stc
daa
loope
iret
outsb
inc
mov
out
outsb
sub
setle
or
imul
dec
xchg
int3
mov
cmpsb
ficoms
mov
das
mov
mov
jp
ret
cmp
inc
stos
add
hlt
add
ss
fwait
pushf
sbb
jb
mov
cmp
mov
pop
dec
popf
mov
jno
mov
les
or
and
in
enter
gs
xor
jecxz
lahf
aad
xchg
testb
insb
push
jo
data16
jo
out
sub
jmp
cmc
rclb
sbb
int
imulb
jle
push
fists
in
mov
leave
pop
inc
xchg
sbb
ss
mov
stos
mov
sbb
mov
aad
jl
inc
dec
out
jo
loope
lock
mov
mov
xchg
out
movsl
sub
movl
aas
lcall
xchg
sbb
mov
popf
xor
add
repnz
lret
xor
lahf
pop
push
in
enter
sbb
adc
into
or
loop
dec
xchg
sub
inc
shlb
in
fstpl
cmp
ret
repnz
sbb
inc
inc
lock
std
fisttpll
das
imul
cmp
inc
add
fsubp
or
inc
outsl
cmpsb
lods
push
ss
cmp
xlat
mov
lds
ret
mov
lcall
cmp
push
adc
aam
loope
jmp
mov
cmc
mov
rclb
mov
loope
or
insb
pop
aas
push
xor
pop
fdiv
xlat
leave
and
jae
fwait
mov
pusha
jb
and
inc
gs
iret
xor
xchg
jl
arpl
pop
rcrl
ret
int3
cmp
sbb
sbb
testl
repz
xchg
out
dec
xor
in
sub
cmpsl
ficoms
je
andl
push
ret
jno
fstpl
loop
push
enter
pusha
mov
pop
mov
or
jnp
jmp
xchg
and
loopne
inc
loope
sbb
sbb
mov
fidivs
fsub
add
mov
rcl
movsb
mov
adc
cmc
adcl
push
int3
and
lret
icebp
faddl
or
xchg
xor
movsl
sub
sbb
mov
inc
jns
out
mov
pusha
push
adc
add
add
mov
mov
jne
xor
jl
xor
mov
loop
mov
mov
add
mov
rcll
add
leave
movsl
scas
push
cmc
ret
sbb
bound
mov
or
mov
mov
scas
inc
bound
addr16
inc
jo
or
imul
push
sbb
xor
xor
mov
cmpsl
jns
testl
lods
pop
xchg
js
sbb
fs
inc
stos
mov
scas
in
in
popf
pop
test
add
sbb
jae
je
out
repnz
add
xchg
test
iret
or
push
aas
mov
dec
in
jae
xor
pop
jle
sbb
lea
or
es
sub
jmp
inc
mov
xor
sti
adcl
sbb
pop
or
clc
into
into
add
cmp
lcall
pop
dec
or
divl
dec
jp
shl
and
adcl
and
dec
pop
and
enter
jl
push
sub
xchg
test
in
lcall
in
cmp
ret
ds
mov
dec
mov
and
sub
push
pop
dec
adc
repnz
ds
adc
gs
jge
push
outsb
pop
sub
nop
dec
movsb
add
pop
sbb
les
loope
mov
and
es
pop
xchg
push
adc
dec
scas
scas
jge
mov
fsubl
sbb
adc
les
xchg
js
jp
jb
fsts
inc
lds
mov
test
lret
scas
pop
pusha
cmp
std
push
lods
ds
xchg
push
lret
mov
xchg
hlt
xchg
nop
or
mov
fidivs
mov
mov
daa
dec
push
daa
mov
inc
stos
or
ret
sub
pop
out
test
sub
ljmp
shlb
push
pop
mov
fwait
adc
sbb
adc
and
dec
shrl
mov
cmp
jp
mov
aaa
test
aaa
sub
mov
jns
sti
shll
sub
cltd
aam
in
and
push
jp
jno
cld
lods
push
mov
pop
jnp
out
in
out
push
jg
xor
jns
push
jno
pushl
pop
hlt
dec
mov
sbb
les
pop
or
xlat
jo
mov
inc
mov
pop
fdivl
add
test
sbb
hlt
cmp
xchg
iret
stos
pop
loop
aas
xchg
gs
push
or
sbb
incl
in
insl
int
sbb
mov
sub
adc
mulb
xor
push
int3
sub
add
or
test
jo
xchg
inc
dec
and
notb
mov
icebp
test
or
in
jae
push
inc
sbb
insb
push
dec
setbe
fnstsw
and
jb
dec
adc
sti
movsb
mov
lcall
test
testl
jge
jo
adc
sub
adc
fcomip
push
xor
sub
dec
out
mov
pop
sub
pusha
aaa
scas
pushf
pop
push
ds
sahf
stc
jae
call
inc
call
in
imul
lcall
cmp
xlat
sub
out
les
movsl
xlat
dec
jmp
cwtl
cmp
test
es
popf
inc
imul
push
mov
mov
sub
add
stos
in
sti
dec
or
and
ret
aas
stos
or
dec
loopne
cmpsl
fistps
outsb
aas
ficoms
je
cmp
jg
ret
ss
test
or
pop
mov
adc
dec
aaa
jl
dec
rcll
inc
mov
and
adc
add
cmp
xchg
pop
sti
cli
inc
mov
fnstenv
push
in
loope
into
cmp
mov
mov
inc
loopne
stos
xchg
cld
and
xchg
ja
mov
mov
rclb
out
inc
mov
sbb
rol
jle
fs
mov
scas
and
shrb
push
xor
sbbb
fcompl
aad
or
mov
rorb
push
rcl
std
jmp
jle
je
call
mov
lds
pusha
pop
fbstp
jo
push
xor
lds
dec
xchg
sbb
lahf
or
jmp
arpl
shlb
int
leave
pop
popf
scas
leave
pop
adc
cld
adc
das
mov
es
and
sub
push
into
out
push
das
imul
mov
nop
inc
repz
outsb
scas
sbb
leave
push
aas
adc
roll
adc
scas
mov
test
int
mov
push
or
or
js
pushf
stos
pop
lock
ss
lcall
jle
enter
adc
in
pushf
fidivl
mov
push
mov
test
fcomps
movb
xchg
dec
push
push
repz
cmpb
fstps
or
repnz
dec
or
les
fdivr
sahf
push
rolb
or
push
sbb
mov
cld
in
dec
or
mov
out
and
and
lret
xor
idivl
ljmp
sbb
nop/reserved
pop
int3
mov
mov
rorb
push
pop
jnp
sbb
cmp
insb
or
mov
lea
pop
outsl
mov
xchg
out
fldt
aas
inc
sub
xchg
sbb
xor
int3
or
dec
dec
mov
push
jno
stos
xor
jmp
jno
test
adc
divl
sub
add
enter
test
popa
sub
cs
mov
stc
popa
pop
jle
loop
mov
sub
imul
jl
std
xchg
aaa
xlat
mov
xchg
xor
test
inc
mov
bound
xchg
outsb
movsb
or
pop
ds
pop
mov
clc
leave
popa
test
mov
addr16
inc
add
and
and
sbb
inc
push
push
jbe
scas
es
mov
outsl
xor
in
push
sbb
cmp
inc
stos
aam
push
mov
rcrl
push
dec
add
push
push
sub
or
insl
rcrb
lds
aad
mov
or
icebp
and
je
fbld
div
les
out
fistl
jp
xor
imul
arpl
addr16
shrb
inc
insb
hlt
ja
mov
or
jmp
dec
add
data16
das
ljmp
adc
cmp
sbb
dec
push
push
scas
punpckhdq
ret
sahf
or
mov
jb
add
lret
sbb
pop
push
fsubp
cld
mov
sbb
mov
and
mov
mov
nop
or
mov
mov
push
movsb
into
outsl
inc
lods
mov
lret
sti
dec
aam
shl
push
mov
fwait
daa
ljmp
mov
hlt
fsubrs
ficompl
cli
fdivl
xchg
cli
lahf
subl
pop
dec
enter
cmp
lret
pop
inc
ja
sub
cmp
call
lcall
cld
jae
scas
pusha
push
aam
mov
xchg
or
std
inc
adc
lcall
and
mov
shrl
xor
sbb
imul
xchg
ja
cs
mov
in
sahf
adc
push
ja
add
or
jb
mov
sbb
fld
pushf
aaa
mov
lods
in
pop
mov
or
movsl
ficoml
iret
ror
lods
mov
das
lcall
mov
adc
outsb
iret
out
mov
out
outsl
sub
aam
scas
dec
or
gs
daa
adc
cmp
fistpl
jl
pop
push
pop
scas
pop
fisubrl
and
leave
aam
stc
in
dec
jg
stos
fcompl
std
lcall
mov
cmp
inc
push
bound
xchg
cmpsb
xor
cmp
dec
lds
mov
shrl
shlb
mov
popf
test
and
sub
jns
jns
mov
push
inc
lret
stc
addb
add
mov
arpl
leave
cld
dec
pop
ja
jnp
sbb
ret
inc
dec
jo
in
stos
inc
dec
sub
in
push
sub
inc
push
sbb
pop
cs
mov
xlat
pop
inc
or
adc
outsl
xor
icebp
and
in
in
data16
js
mov
add
pop
push
pop
inc
sahf
jns
lods
push
jbe
sub
add
and
sbb
or
lods
sub
adc
and
dec
fisubs
ret
scas
pop
xchg
mov
xchg
arpl
gs
mov
jns
shl
repnz
insb
sbb
pop
xchg
inc
out
push
pop
add
xchg
xchg
jbe
aaa
ljmp
fstpt
sbb
pushf
xor
insl
shll
mov
into
cmp
sub
cmpb
xchg
lds
push
adc
pop
popf
mov
mov
std
jl
mov
and
cmp
xor
pop
pop
mov
inc
mov
gs
insb
call
or
jo
call
cwtl
out
jp
dec
mov
xchg
sub
xor
cld
and
sbb
cmpsl
mov
mov
jns
bound
pusha
jecxz
push
jg
and
adc
push
jg
gs
inc
cmpsl
xchg
imul
push
jb
ror
lods
inc
xor
mov
sub
outsl
or
pop
fcoms
add
pop
outsb
shll
outsb
sub
das
jno
sbb
xlat
dec
push
and
cmp
push
inc
movsb
lods
push
inc
and
pop
xlat
push
adc
inc
scas
iret
fdivr
or
xor
mov
push
mov
dec
popf
or
cmp
rolb
add
push
sbb
in
mov
ljmp
or
cmp
arpl
int
push
jge
push
jne
jne
movsl
repnz
lods
mov
dec
or
ret
sbb
cwtl
dec
add
ja
pop
jo
push
test
sahf
xchg
jne
loopne
in
ss
adcl
xor
and
sub
jnp
outsl
xor
sub
xchg
push
lcall
pop
inc
dec
ljmp
push
jmp
xchg
jno
jno
mov
mov
gs
and
pop
and
outsl
fstps
cltd
cld
mov
and
je
subl
cld
iret
scas
mov
mov
orb
dec
pop
popa
das
jo
cltd
jo
pusha
fistps
xor
loopne
outsb
xchg
ss
adc
pusha
xor
fstl
popa
sarb
int
jno
inc
push
inc
jb
xor
icebp
jb
pop
lea
sbbb
jge
cs
rorl
and
sarl
ja
out
into
daa
cmpsb
mov
xchg
in
movsb
adc
test
jg
test
cmpsb
mov
xchg
arpl
push
das
and
push
hlt
scas
xlat
clc
push
sti
fdivl
and
mov
rcrw
les
sub
int
sbb
dec
dec
or
sbb
lods
pop
mov
mov
sbb
outsl
insl
int3
gs
pusha
movsl
call
cmp
lahf
cmpsl
int
sahf
pop
ret
and
insb
sbb
or
and
mov
in
xchg
mov
dec
sub
mov
pop
push
test
insl
dec
jns
das
aad
push
aas
ret
bound
test
rcll
and
insl
les
ficompl
rorb
in
lock
push
leave
imul
xorb
fcmovnb
dec
das
arpl
cmp
push
hlt
mov
pushl
test
inc
cmpsb
ficompl
jae
aam
cmp
xor
xor
movsl
insl
push
lcall
fnsave
cmp
fistps
sub
popl
jno
dec
mov
ljmp
ror
jns
cwtl
xchg
loope
in
sarl
mov
mov
mov
push
inc
dec
push
cmp
aam
pop
loope
sbb
fisubl
or
rcrb
mov
fisubs
cld
xor
sbb
push
test
nop
in
jg
cs
xchg
add
add
xor
xchg
mov
or
inc
lods
jns
fwait
xchg
insl
ljmp
mov
xchg
lods
ds
xor
and
out
pop
aaa
repnz
rorl
fldcw
scas
mov
xchg
out
flds
mov
adc
pusha
xor
add
aaa
lds
push
jmp
and
outsb
in
fldcw
jb
add
addr16
xchg
xchg
stc
xchg
arpl
or
pusha
fstpt
push
cmpps
cmp
enter
pop
or
mov
mov
push
pop
and
shlb
xchg
cld
adcl
addr16
pop
lahf
test
mov
test
fnsave
or
cwtl
xchg
in
mov
adc
push
adc
ja
data16
pop
jmp
mov
jno
loope
push
cmp
pop
mov
pop
xor
int
mov
mov
pop
test
scas
imul
jge
dec
sub
mov
inc
mov
cmp
sarb
outsb
dec
enter
and
push
sbb
xlat
stos
xchg
imul
adc
movsb
loope
inc
pop
adc
repnz
and
xchg
push
scas
test
mov
ret
or
xor
aaa
sub
xchg
mov
les
pop
pop
jno
sbb
das
out
leave
test
out
mov
adc
insb
stos
hlt
cld
xchg
mov
aaa
cmp
add
sbb
mov
mov
pop
fucomip
int
or
xchg
push
sbb
cwtl
sbb
mov
mov
adcb
gs
inc
jb
scas
in
movsb
sbb
out
int
mov
mov
arpl
fistl
xor
jno
or
mov
sahf
out
testb
das
movsl
mov
xor
dec
mov
mov
mov
or
ficomps
mov
push
xchg
lock
xor
cmp
clc
add
lea
sub
popf
jl
push
jg
enter
cmp
pop
or
push
or
jns
cltd
aaa
in
out
and
cld
scas
add
inc
mov
lock
push
jp
mov
and
jne
inc
sub
xchg
xor
fdivrl
idivb
or
jg
jo
sub
dec
mov
xor
lcall
xchg
cmp
or
es
push
and
mov
and
xor
adc
addr16
pop
addr16
js
mov
cmp
jno
mov
dec
scas
jle,pt
addr16
cmp
xlat
jae
mov
xchg
je
aam
js
add
lcall
sub
inc
adc
cmp
jne
and
cmpsb
mov
add
xor
push
or
cld
mov
nop
pusha
lret
cmp
adc
mov
jne
lret
in
ret
push
or
incb
cwtl
arpl
and
arpl
test
mov
inc
sub
push
loop
jp
inc
mov
jmp
xchg
clc
adc
dec
sub
adc
leave
js
push
inc
add
mov
jl
idivl
pop
lcall
jl
flds
outsb
mov
adc
mov
loopne
dec
lea
push
sbb
add
outsl
imul
pop
loopne
sub
jmp
mov
push
or
leave
insb
cli
stos
bound
mov
mov
sbb
cmp
test
out
dec
hlt
out
adc
push
adc
in
sbb
lret
icebp
cs
sahf
loope
notl
push
shlb
adc
pop
js
xor
cmp
adc
stos
shll
mov
jno
int
or
xchg
add
sub
pop
js
stc
push
fnop
nop
lds
jmp
or
xchg
mov
jb
stos
cwtl
jae
xchg
in
jecxz
mov
imul
pop
jbe
mov
pop
dec
push
xchg
insb
gs
sarl
mov
fidivrl
daa
fwait
add
dec
sbb
lods
dec
xor
cmp
pop
cwtl
cli
pop
mov
push
pop
data16
push
insl
pop
lea
pop
jno
inc
pop
aaa
cmp
xor
push
std
test
pushf
cli
mov
dec
inc
inc
bound
or
stc
pop
cltd
mov
xor
xchg
out
arpl
pusha
push
js
inc
loopne
push
mov
insl
into
sub
int3
clc
xor
arpl
into
jns
jne
sub
sti
jge
leave
cmp
xchg
jg
pop
and
cmp
xor
jnp
jbe
mov
xchg
mov
and
nop
lcall
ljmp
sbb
popf
loope
and
aad
imul
stos
xchg
push
sti
dec
mov
jae
fs
fs
push
outsl
es
fstpt
dec
adc
jge
sbb
push
push
dec
and
stos
pop
dec
push
push
sbb
and
ret
scas
cmp
inc
dec
push
jnp
jp
xor
pop
mov
ja
jne
stos
mov
mov
xchg
cmp
jo
sbb
ljmp
push
push
and
xchg
test
aad
push
stos
popa
push
push
xor
lea
pop
rcrb
mov
cmp
cmpsl
sub
sahf
adc
lock
ret
fidivs
adc
sub
loop
dec
mov
pusha
jmp
sbb
imul
cwtl
test
pop
js
dec
in
fdivrs
jmp
cld
sub
jl
mov
mov
pop
leave
scas
mov
fisubrs
sbb
and
ss
test
stos
dec
dec
adc
ljmp
idiv
cltd
push
xor
enter
mov
ljmp
fadds
push
repnz
xlat
push
lods
cs
out
push
sub
mov
adc
std
pop
test
inc
das
ja
sar
in
adc
popf
ja
and
stos
xchg
out
repz
sub
test
xor
jns
and
mov
pop
call
iret
loop
fwait
cmpsb
dec
rcrb
and
pop
pop
in
mov
and
and
out
add
mov
insl
jp
js
sub
enter
or
inc
mov
mov
enter
xor
sbb
xor
adc
sbb
fwait
sbb
loop
jecxz
jl
cs
inc
cltd
iret
nop
and
pop
lcall
out
pop
adc
flds
in
jo
pop
adc
push
cmc
add
in
aas
ret
ds
cwtl
cmp
mov
push
inc
inc
lea
ret
add
xchg
xor
test
adcl
out
jno
ss
mov
outsb
xchg
call
arpl
adc
imul
fistpll
pop
sub
cmp
rorb
jno
jmp
xacquire
int3
push
adc
fisubl
pusha
lret
mov
in
pop
cmp
add
cltd
jb
mov
xor
jecxz
sbb
mov
pusha
out
fnsave
fldl
xchg
bound
sbb
pop
lods
int3
lods
dec
leave
bound
fadd
pop
sub
sub
lcall
push
std
je
mov
sahf
in
rolb
rcr
or
inc
addr16
inc
lock
fcomps
imull
mov
enter
arpl
xchg
lcall
hlt
out
scas
add
or
mov
scas
pop
cmp
jge
push
stos
dec
mov
outsb
cmc
rorb
add
inc
leave
out
sub
push
xchg
pop
fstl
sbb
rorb
cmp
aad
jle
jp
ljmp
push
push
jg
cmp
mov
imul
testb
adc
or
std
add
movsl
pop
mov
call
jmp
sahf
fdivs
dec
xchg
push
data16
xchg
das
popa
pop
and
sbb
fldt
cwtl
fisubrs
xor
loope
pop
dec
lcall
push
xchg
mov
test
nop
sbb
outsl
cltd
mov
test
divb
mov
dec
or
cmpsb
mov
lahf
or
lret
mov
cli
cmc
xlat
in
lods
jne
jecxz
movsb
xor
xor
sti
jae
jmp
or
sub
push
cmp
mov
mov
inc
pop
jge
bound
push
mov
inc
lret
pusha
dec
iret
fs
ss
aam
inc
lret
pop
xor
mov
adc
popl
dec
mov
arpl
jmp
cmp
sbb
imul
jbe
sub
or
jnp
xor
cmp
pop
stos
loope
xor
cltd
rolb
shrb
xchg
aad
inc
cli
jmp
xor
fldcw
push
lods
adc
cld
or
scas
imul
inc
aam
inc
sbb
decl
das
aas
dec
dec
popa
xlat
and
js
int
inc
mov
jecxz
cmp
pop
add
jbe
mov
push
cmp
ret
sbbl
rolb
add
mov
rorb
sbb
pop
xor
sub
test
mov
mov
jl
inc
lods
and
pop
xchg
popf
mov
mov
sti
jb
jb
mov
inc
push
sbb
cltd
in
and
aam
inc
repnz
mov
mov
subb
andb
mov
and
in
outsl
dec
add
data16
out
out
ret
push
sbb
imul
dec
jne
inc
pop
cltd
fdivrp
or
cmp
inc
dec
addr16
add
shlb
bound
mov
lds
int
mov
lcall
aam
push
je
jb
das
push
sub
icebp
push
xor
jb
pusha
rcrb
or
loop
inc
aad
imul
pushf
cmp
dec
push
pop
push
fdivl
popf
out
push
mov
jnp
out
outsb
inc
out
mov
loop
or
imul
int
aam
pop
fwait
mov
cmp
frstor
xor
push
mov
cmp
push
pop
arpl
das
mov
and
lcall
ljmp
pop
mov
lods
das
dec
cmp
in
inc
sub
pop
or
mov
test
jne
adc
fwait
sahf
imul
or
add
fnstsw
fsqrt
movsb
cmp
mov
jo
test
scas
lods
sub
push
inc
sti
sbb
leave
push
aaa
xchg
dec
xchg
fistpll
insb
mov
std
sbb
jl
rorl
rorl
xor
rorb
or
andl
test
sarl
int
mov
adc
cltd
pop
push
mov
repz
outsb
cmp
jecxz
push
fld
loop
or
lret
sub
jg
lds
scas
dec
sub
orl
addl
fsin
mov
add
inc
into
add
cmpsb
fwait
push
xchg
inc
int
lcall
pop
xor
pop
push
sbb
clc
and
push
cmp
jno
aam
vcvttss2si
aas
mov
inc
mov
and
dec
xor
nop
xchg
aas
test
dec
pop
inc
or
push
clc
mov
stc
or
das
push
push
push
pop
add
add
adc
insl
add
sbb
add
in
pop
ljmp
xchg
rolb
add
in
roll
pop
pop
es
nop
lcall
in
mov
movsl
pop
jecxz
pop
push
enter
rcll
into
das
mov
dec
or
xor
repnz
dec
mov
mov
cmp
fsubr
int3
addr16
cmc
je
cmc
hlt
repnz
cmp
cmp
nop
dec
out
repz
into
data16
pop
or
mov
jno
mov
add
fldcw
mov
orb
or
adc
pop
and
nop
nop
out
xor
leave
sbb
mov
mov
push
sbb
mov
jns
push
int3
repnz
std
cmp
add
adc
push
cmpsl
add
idivl
mov
ret
jecxz
add
xchg
pop
insl
xchg
sub
pop
mov
adc
cmp
xchg
and
sarl
cmp
sub
aaa
jns
mov
inc
push
les
inc
dec
mov
fisubrl
or
roll
mov
faddl
shr
call
and
push
dec
mov
mov
je
adc
add
jg
push
jle
push
mov
xor
movsl
outsl
xchg
stc
pop
jne
push
cwtl
fld1
jnp
jb
imul
fsubrs
pushf
lock
jo
gs
xchg
enter
and
fists
xlat
add
loop
in
push
in
sub
cli
jno
cmp
inc
es
fistps
pop
adc
xchg
shll
mov
adc
xchg
jg
and
xor
push
pop
or
in
jns
cmp
outsb
adc
mov
or
jns
addl
dec
sub
inc
xchg
mov
fxch
movb
mov
loop
insb
xchg
mov
out
fstps
mov
es
fsubl
orb
xor
lret
inc
loope
cmp
pop
aad
push
enter
ss
out
sbb
and
mov
mov
mov
fstl
and
mov
test
clc
popf
insb
lcall
cmc
decl
cli
les
addr16
sti
roll
mov
sbb
push
jmp
leave
or
mov
int3
push
jge
in
fs
jmp
ljmp
es
xor
sub
sti
imul
ret
ja
dec
pop
sarl
arpl
xor
jge
iret
adc
mov
std
test
mov
mov
fisubrs
jle
mov
and
sbb
inc
pop
imul
roll
inc
jmp
insb
push
push
mov
lcall
imul
rolb
dec
xchg
lea
daa
inc
fnsave
pop
fmuls
cld
fcoml
lods
dec
push
fcoml
insb
sbb
or
pop
xchg
aas
sbb
adc
test
aas
add
pop
bound
rcrl
sub
inc
stos
aas
ret
sti
mov
mov
mov
in
rcr
popa
imul
sbb
in
add
or
jmp
fmull
jbe
pushf
pop
and
mov
push
push
shl
cs
push
rorl
clc
aaa
sub
insl
stos
mov
cmp
mov
mov
or
push
pop
jg
lcall
mov
push
inc
or
xor
pop
dec
jb
lcall
inc
aaa
std
shrb
out
and
in
add
sbb
inc
dec
iret
roll
das
lcall
sbb
js
movsl
mov
dec
mov
cmp
push
dec
push
and
and
xchg
push
inc
notb
sub
jnp
or
jbe
dec
scas
out
mov
stc
hlt
dec
insb
mov
mov
data16
test
test
stos
insl
and
add
or
in
inc
sahf
mov
cmpsb
out
mov
adc
mov
push
aas
outsb
lahf
lock
add
pop
pop
add
cmp
adc
outsb
rcll
insl
je
push
ja
pop
jae
mov
sahf
or
cmp
adc
cmpsb
push
loopne
sbb
cmp
int
push
and
sbb
jge
movsb
mov
in
dec
mov
xlat
sub
jecxz
lcall
mov
test
in
lock
dec
fsts
cltd
xchg
popa
adc
scas
xor
adcb
test
adc
ret
add
das
into
outsb
test
mov
jmp
repz
popa
in
shlb
mov
sahf
push
outsl
aaa
add
outsb
shl
je
push
inc
mov
test
push
iret
in
hlt
xchg
lds
sti
out
add
mov
sbb
arpl
fnstsw
sbb
cmp
dec
into
cmp
push
pop
jle
ljmp
adc
enter
daa
lds
rorb
stos
add
inc
dec
push
cmc
js
xchg
cmp
inc
aas
ss
rclb
dec
xchg
cmp
jmp
cmc
xchg
xchg
and
inc
cltd
ret
out
mov
js
xchg
subb
sbb
add
imul
or
sub
shlb
adcl
pop
dec
adc
stos
lret
mov
pop
xor
mov
cmpsb
int3
dec
push
into
mov
fwait
adc
xchg
lret
add
test
or
jne
inc
icebp
ds
lods
dec
orl
ss
in
rorb
cli
lds
ss
jmp
popl
or
mov
cmpl
out
dec
je
popf
fimuls
ljmp
cli
mov
dec
call
into
fadds
xchg
mov
add
call
and
cmc
lret
mov
std
gs
sub
mov
dec
in
inc
sub
test
xchg
cld
sbb
xchg
int3
xlat
mov
fwait
xchg
mov
jmp
xor
xor
push
push
nop
jne
sahf
testb
cmpsb
cmc
mov
push
sub
fsubs
outsl
xchg
jno
mov
sub
or
mov
mov
jmp
cmpsl
dec
and
test
mov
inc
cwtl
mov
mov
mov
sti
lods
ror
adc
cli
cmp
or
lds
add
aaa
loop
test
arpl
test
adc
fstps
adc
push
fisubrs
dec
mov
lods
mov
sbb
cmp
inc
xchg
rcll
hlt
mov
jo
repz
pop
rorb
cmp
cmp
jle
push
cmp
and
sub
inc
idivl
or
push
xor
push
stos
xchg
aad
push
sarb
adc
nop
dec
adc
clc
pop
loop
aas
daa
push
add
pop
pusha
sub
xchg
xchg
idivb
mov
inc
push
push
fnstenv
es
adc
cmp
fucomi
sub
add
cmp
dec
fistl
ficompl
pop
imul
inc
in
lods
aaa
out
movsb
or
xorb
xchg
xor
jno
lock
pop
adc
push
leave
sub
sbb
lds
adc
dec
out
test
test
inc
and
or
xor
mov
pop
mov
add
ljmp
dec
pop
and
and
sbb
sbb
les
sbb
xor
jecxz
das
inc
adc
cmp
xorl
dec
aas
jo
xchg
mov
int3
scas
scas
xchg
lahf
cmpsb
mov
call
and
push
cwtl
xor
push
sbb
or
outsl
jecxz
xor
gs
into
dec
mov
cli
outsb
or
shlb
mov
cwtl
jns
nop
enter
ss
repnz
xchg
dec
fsubrs
push
push
mov
xor
jmp
cld
cmp
lahf
mov
inc
out
pushf
adc
lods
sbb
cmp
mov
movsb
and
in
sbb
testl
jbe
in
cmc
int3
jb
sub
hlt
or
mov
mov
add
out
push
inc
pop
sub
icebp
cmp
lcall
out
adc
or
mov
rclb
loop
outsb
jnp
ret
inc
pop
inc
sarb
dec
lcall
ss
and
mov
fcmovu
loope
mov
inc
sbb
rorl
cmp
and
and
dec
xchg
adc
mov
sub
out
popf
add
addr16
and
divb
sub
push
add
movsl
test
mov
sbb
popf
lock
adc
push
lret
lock
push
dec
sbb
fsubrl
sbb
sbbl
mov
and
pop
popf
sub
sub
iret
ja
jae
xor
jmp
add
das
test
cmpsl
push
dec
xor
test
mov
mov
jns
inc
pop
cmp
adc
inc
add
cmp
hlt
sar
pop
push
push
push
xchg
and
or
xor
inc
xchg
mov
push
inc
mov
inc
cmp
adc
xchg
inc
rclb
in
dec
leave
xor
ret
push
je
push
fs
push
leave
stos
mov
pop
mov
adc
ljmp
jecxz
sar
int
jge
gs
outsb
es
in
cmp
push
add
ds
xlat
sub
rcll
mov
fcomps
notb
bound
loopne
icebp
pop
negl
adcl
mov
clc
dec
adc
out
aam
pop
lcall
cmc
mov
add
sbbb
mov
outsl
jge
fisttpll
lahf
dec
cmp
jnp
sbb
enter
dec
cmp
cltd
sti
add
jb
shll
push
xchg
push
outsb
xchg
andl
and
ret
sub
cmp
lea
pop
lods
add
adc
add
test
jae
mov
push
test
cltd
clc
in
cmpl
mov
sub
add
inc
bnd
inc
cmc
ret
inc
jnp
mov
dec
mov
push
mov
pop
jmp
movsb
in
sbb
adc
pop
pusha
cmp
out
fildl
push
mov
mov
jae
hlt
jge
jbe
ds
insb
sub
in
popf
out
pop
xor
rcrb
into
push
addb
sbb
add
xchg
mov
orb
mov
mov
mov
and
dec
testl
sti
hlt
mov
adc
mov
or
or
mov
cmpsb
nop
cmp
xchg
jle
or
je
and
les
mov
frstor
mov
repz
pop
mov
clc
inc
mov
outsl
mov
insl
pop
enter
ljmp
call
pop
xlat
dec
mov
dec
rclb
gs
mov
ds
mov
dec
fldl
aam
lock
fdiv
pusha
mov
and
scas
aas
mov
add
mov
aaa
out
inc
mov
sub
dec
add
das
stos
cmp
sbb
dec
xchg
or
nop
xor
addr16
xor
loopne
jo
scas
adc
xchg
or
add
sub
or
push
sbb
mov
xor
xor
es
push
and
push
ret
pusha
push
sarl
inc
mov
jb
push
out
lods
and
xchg
jge
xchg
inc
cmp
or
and
pand
adc
and
imulb
sbb
mov
cmp
push
testl
xor
cmp
mov
out
hlt
push
in
add
dec
fidivrl
cmp
mov
jp
rcr
sbb
imul
ljmp
shll
xlat
mov
ja
mov
adcb
sub
rcrl
sbb
mov
stc
sbb
scas
cmpsl
lcall
jg
cmp
popa
inc
mov
push
pop
js
fldt
mov
jnp
dec
cmp
outsl
test
sub
shr
adcl
insl
addr16
sub
fnstcw
aam
xor
cmp
lahf
data16
mov
sysexit
lret
lret
add
das
dec
jmp
repnz
mov
inc
jbe
pop
loopne
push
in
sbb
mov
xlat
mov
xchg
jb
dec
scas
lock
clc
ja
popf
or
sbb
inc
xchg
push
ror
jmp
add
icebp
dec
sub
xor
and
dec
or
in
js
jb
mov
icebp
or
test
add
jp
jno
das
jne
cmpsb
adc
mov
add
shll
daa
fdivrs
test
xor
pop
cs
stos
in
repnz
jbe
into
mov
xchg
sbb
lahf
dec
sbb
jns
xchg
and
inc
fdivrl
sbb
mov
cltd
outsl
out
out
xchg
sub
sub
out
mov
mov
lahf
scas
in
imul
addr16
jle
pop
mov
fbstp
mov
out
test
mov
cltd
xor
jno
fcoml
mov
dec
aam
pop
inc
inc
mov
aad
cmp
xchg
adc
jnp
fistpl
fldenv
loope
jle
pop
cli
or
shlb
aas
stos
enter
sbb
xor
push
adc
dec
fistpll
dec
pop
jg
xchg
pushf
xchg
inc
stos
out
out
cmpsl
mov
ret
aas
mov
fsubrl
roll
fsubrs
rcrb
sbb
add
cmc
fdivl
dec
mov
sub
call
pop
cmp
mov
add
inc
jmp
pop
adc
mov
inc
mov
push
xchg
andb
pop
imul
push
push
dec
daa
xchg
jb
mov
pop
or
xchg
in
push
ja
rorl
mov
sbb
imul
ss
outsb
mov
sbb
sub
shrb
xor
jbe
orl
ficoml
push
xchg
mov
nop
pop
jne
and
pop
loope
fildll
cmp
inc
mov
mov
adc
and
in
add
mov
push
cmpsb
push
ss
adc
xchg
cmpl
ljmp
mov
jge
ss
shrl
stos
push
cmp
jge
add
divl
push
cmp
adc
pushf
notl
popa
in
jge
xchg
xchg
or
sub
pusha
repz
gs
adc
ror
int
add
push
mov
add
inc
push
sub
pop
mov
jbe
sahf
mov
sbb
and
mov
sub
xchg
fwait
in
scas
push
shr
outsb
fiaddl
test
or
add
or
bound
mov
or
push
in
pop
add
adc
cltd
enter
sub
mov
jns
jmp
inc
lds
subb
mov
mov
pop
aas
jnp
fs
loopne
out
lcall
inc
and
mov
pop
jns
jmp
mov
popl
push
lock
mov
sub
hlt
adc
or
pop
xchg
cld
dec
mov
xchg
leave
dec
mov
das
dec
ds
inc
stos
in
sub
push
popa
mov
lds
int3
mov
in
push
ds
jnp
cltd
addr16
fs
popa
cmpsb
xchg
mov
adc
cwtl
gs
stc
cs
or
push
or
jmp
xor
shlb
sahf
movsb
sbb
sbb
or
inc
cmc
fmuls
popf
pop
or
push
dec
pop
fistpl
jmp
xchg
lea
shll
add
inc
mov
fists
lahf
leave
insl
pushf
cmpb
mov
sub
movsl
test
jno
pusha
jb
int
aaa
sbb
mov
cltd
and
gs
std
jp
lcall
jae
fistpl
push
mov
test
xchg
jg
lcall
sub
mulb
push
loop
add
je
adc
mov
pop
or
pop
cltd
aad
in
int
adc
fidivrs
xchg
repnz
stc
jbe
push
jmp
cld
inc
jbe
mov
or
sbb
fsubrs
scas
movsl
stc
inc
jle
cmp
add
push
aaa
mov
gs
sahf
adc
push
das
mov
stos
icebp
fucomi
outsb
in
lahf
dec
xor
out
shrl
sub
out
or
lock
mov
lret
xlat
xor
jae
stc
shll
cmp
sarb
mov
jmp
or
xchg
mov
or
or
mov
and
pop
mov
sub
ret
mov
fisubrl
std
sbb
shrl
outsl
mov
aam
sbb
fwait
mov
mov
inc
clc
je
out
adc
mov
stos
arpl
in
jnp
cmp
ljmp
cli
test
push
adc
hlt
aaa
lds
in
push
inc
stos
pop
loopne
ret
or
pushf
pop
sahf
ret
or
mov
lret
cli
popa
jnp
hlt
pushf
push
test
xor
pop
jns
loope
mov
cmp
xchg
test
and
addr16
inc
int3
lock
out
outsb
gs
dec
imul
cmp
and
lods
jns
addr16
mov
jb
mov
push
decb
test
loop
mov
dec
add
les
pop
sarl
and
xchg
jl
inc
mov
adc
arpl
outsb
jo
inc
xchg
lahf
pop
lods
outsl
mov
xchg
mov
mov
push
mov
rorb
test
fwait
and
cltd
add
push
or
pop
call
rep
jmp
or
sub
test
in
jge
cwtl
cmp
adc
add
cld
xor
jecxz
test
orl
addb
mov
js
mov
out
fwait
mov
cmpsb
cmc
andl
je
outsb
leave
push
push
push
out
inc
mov
jp
jecxz
mov
xlat
int
xlat
in
jecxz
lods
or
sbb
loop
adc
arpl
lcall
or
and
lds
cltd
dec
jmp
add
mov
or
movsl
xchg
or
fwait
imul
fists
mov
lcall
arpl
repnz
pop
bound
sahf
repnz
mov
xor
xchg
arpl
add
into
and
inc
add
dec
gs
js
cli
cmp
or
xchg
rorl
test
xlat
xchg
mov
xchg
adc
or
out
inc
mov
sahf
enter
movsb
mov
sub
ss
shll
and
jge
ret
xor
daa
fucomip
xlat
and
adc
iret
jne
xchg
movhps
xchg
sbb
ret
and
xchg
arpl
add
adc
mov
jecxz
inc
lods
loope
jo
pop
insl
sub
inc
imul
pop
mov
movsb
inc
pop
jne
mov
jge
pusha
aam
add
add
sarb
stos
mov
xor
add
aaa
sbb
int
cmp
jmp
pop
pop
cmc
cmpb
cmp
jecxz
aas
cli
mov
sub
mov
xchg
add
aad
mov
xchg
addr16
dec
mov
repnz
cmp
call
or
daa
dec
jg
andl
add
lret
cmpsl
pop
cli
sti
inc
fcmovb
adc
cmp
dec
rcrb
and
call
popl
scas
repnz
push
pop
repnz
or
pusha
mov
inc
add
test
or
lods
into
or
iret
cmpb
xchg
inc
sahf
aad
jno
add
inc
cmc
jecxz
addr16
ret
xor
pushf
or
dec
mov
mov
sbb
int
fstpt
adcl
popf
je
sbb
push
data16
add
cmp
add
sbb
cmp
jb
mov
sub
loop
pop
xor
push
cmpsb
xchg
pop
add
mov
mov
orb
cmc
adc
pusha
and
inc
cmc
imul
xlat
pop
mov
and
jbe
mov
mov
aad
sbb
inc
repnz
sub
sub
mov
aas
lcall
out
sub
inc
xor
push
aam
in
cmpxchg
pop
insb
repnz
mov
push
xchg
jg
outsl
mov
inc
fimuls
push
jne
mov
mov
push
pop
mov
aam
and
in
cli
mov
rcr
out
pop
push
mov
sbb
and
pop
in
aam
sarl
push
filds
popf
lret
sbb
les
repz
add
add
mov
mov
bound
je
cmp
add
insb
add
call
ja
outsl
pop
pop
dec
fldt
test
push
scas
aam
ljmp
cmp
dec
test
cmc
xchg
lock
mov
adc
mov
aam
push
mov
pop
pushf
test
pop
jl
out
pop
push
sub
lret
sub
jb
cmc
push
in
aaa
or
xchg
xchg
fisttpl
loopne
pop
or
inc
mov
pop
mov
mov
inc
jp
dec
and
cmp
cmp
adcl
adc
sub
jne,pt
push
icebp
mov
sub
fwait
aam
cmc
mov
mov
xchg
test
cmp
add
loopne
mov
dec
cmp
pop
adc
imul
pop
hlt
push
es
pushf
repz
divl
xchg
mov
mov
mov
leave
dec
dec
cmc
push
mov
xchg
xchg
aas
insb
push
ret
sti
xchg
out
xor
mov
clc
popa
ror
mov
add
scas
movl
xor
xor
roll
enter
mov
lods
popa
xor
out
jb
sbb
xchg
dec
arpl
in
imul
daa
push
cmp
mov
dec
repz
xor
mov
dec
adc
and
loope
stos
test
xchg
in
aam
mov
mov
jnp
mov
push
aas
xorb
mov
lret
repz
cmp
adc
hlt
or
sub
fisttps
int
sbb
movsb
mov
inc
aad
cmp
leave
push
fdivrl
mov
cmp
gs
movsb
in
lahf
cli
jnp
movsb
mov
pop
dec
aas
lahf
popf
clc
xor
in
push
test
hlt
dec
cmpsb
jb
mov
imul
dec
je
ficomps
push
lock
lret
mov
divb
leave
cmp
push
push
cs
pop
adc
xchg
or
mov
cld
jge
and
test
push
mov
sbb
adc
and
nop
rcl
xchg
std
ficoms
test
cld
out
lds
adc
leave
or
mov
push
jmp
pop
stos
push
data16
mov
mov
jge
loopne
jg
jle
out
add
push
pop
cs
xor
lods
data16
mov
mov
or
cmp
push
sbb
data16
shrb
push
bound
lahf
shlb
sbb
cmc
mov
jbe
cmp
or
push
mov
and
sbbb
mov
mov
jmp
mov
stc
mov
ljmp
sub
jg
out
mov
pop
xor
mov
stos
dec
xchg
pop
repnz
pop
lea
repnz
and
in
lcall
test
pop
xchg
fidivrl
shl
mov
push
xchg
and
div
mov
out
imul
inc
push
lock
popf
in
inc
ficomps
jle
fidivs
mov
test
pop
mov
add
jo
adc
jp
imul
popa
mov
pop
lods
xor
std
aam
jbe
pop
lds
std
xor
ficompl
cmp
mov
inc
push
rcl
int
das
inc
sbb
dec
or
xchg
xchg
push
lret
or
sub
xchg
mov
ss
mov
repnz
lods
jbe
cld
dec
inc
add
sbbl
fwait
imul
stos
in
dec
push
insl
js
mov
and
pop
pop
mov
dec
lahf
aas
and
ss
jo,pn
and
jmp
das
rorl
subb
adc
push
stos
cld
sbb
push
and
nop
testl
fs
dec
jecxz
cld
jmp
pop
xchg
out
repz
xchg
push
pop
test
xor
jecxz
pusha
cmc
and
js
mov
xchg
jg
lods
mov
jmp
or
ror
xor
cltd
loope
outsb
mov
sahf
fsub
xchg
push
xlat
pop
cld
insb
scas
xor
jbe
xor
mov
xchg
setbe
add
jns
inc
pop
movsb
imul
push
addb
into
gs
jp
std
dec
insl
pop
xor
lock
dec
mov
xchg
aam
arpl
idivl
add
pop
aaa
dec
adc
je
or
lock
mov
aam
out
cmp
mov
xchg
iret
in
inc
and
cmc
and
fbstp
push
adc
sub
cmpsl
cli
mov
xchg
cmp
rcl
data16
ja
adc
xchg
pop
jecxz
or
enter
loop
jmp
fcomps
outsb
push
xchg
jnp
or
cmpsb
outsb
push
add
out
jns
xor
xor
xorl
jnp
jnp
loopne
mov
mov
out
gs
cmp
sbb
pop
sbb
mov
or
filds
cmp
mov
or
mov
stos
cltd
jp
push
dec
cmpsb
sub
dec
enter
dec
add
cs
push
cli
lods
or
repz
test
leave
dec
movsb
xchg
pusha
cmp
rcl
xor
lods
jl
cmp
pop
negb
insb
adc
mov
or
notb
and
mov
popf
mov
jae
je
adc
lahf
pop
ret
loope
shrl
nop
sub
cld
jae
push
es
xor
cmovle
aas
rorb
jp
lcall
pusha
and
rorb
mov
bound
mov
aas
std
xor
mov
sbbl
or
push
stc
dec
jmp
inc
add
mov
push
je
inc
inc
jmp
cmp
lea
lds
cmp
movsl
jmp
into
xchg
xor
sti
rorl
mov
std
loopne
sbb
cld
mov
push
movsb
cwtl
mov
mov
pusha
mov
popa
popf
and
sti
int
out
pop
ret
int
jle
enter
out
mov
mov
or
xchg
push
stos
je
pushf
xchg
lods
hlt
add
movsl
and
std
es
test
jmp
cmp
jb
sub
cwtl
scas
cmpsl
imul
mov
add
pop
inc
dec
add
cltd
cmp
inc
jae
ret
sbb
xchg
lds
mov
push
scas
enter
in
xchg
push
cmp
mov
ja
sti
popl
shll
ss
outsb
mov
xchg
push
cmc
idivl
nop
addb
and
jp
sahf
mov
inc
popf
lret
daa
negl
or
jmp
and
xchg
adc
and
xchg
popf
pop
loop
push
aam
cmp
fs
das
loope
loopne
arpl
dec
cmpsl
jl
jbe
test
cmpsl
in
mov
cmc
loop
jne
setb
xchg
mov
fstl
adc
or
add
sub
sti
dec
leave
mov
xor
cmp
orb
dec
scas
push
cmp
shll
lock
stos
popf
lea
and
dec
js
cltd
bound
rcr
js
add
inc
cmpsl
bound
fldenv
add
cs
jae
jle
cld
sub
push
pop
mov
inc
incl
stos
repnz
out
cmpsl
stc
adc
fnstenv
and
mov
idiv
popa
jmp
mov
xchg
and
dec
sahf
stc
icebp
push
rorb
add
lods
repz
jne
je
jno
cltd
rorb
mov
call
test
scas
insl
cmc
fcoms
jle
push
mov
or
mov
arpl
adc
pop
dec
push
lea
add
ret
popf
insl
aad
pop
std
cmp
adc
sbbb
sbb
jns
into
pop
xchg
shr
gs
lret
rclb
lahf
movsl
mov
rcrb
lret
cli
add
jo
call
inc
inc
jnp
xchg
cs
mov
jb
push
ja
jbe
cmp
sbb
add
pop
lret
lcall
daa
ror
aas
je
jmp
aaa
dec
inc
and
dec
lret
xchg
call
mov
cmp
xchg
push
jno
xchg
notw
xchg
mov
pop
mov
std
jno
mov
xchg
mov
push
cmpsb
faddp
lock
test
outsl
inc
outsb
push
pop
cwtl
lret
sbb
out
sbb
jecxz
xor
xchg
ret
stos
push
push
out
fwait
dec
lea
mov
xor
lock
movsb
add
mov
xchg
jecxz
arpl
lret
inc
lahf
pop
dec
xor
leave
pop
cmp
mov
fildll
adc
hlt
lds
add
mov
icebp
orb
mov
xor
pop
inc
lods
add
in
cmp
cmpl
scas
rcrl
sub
pop
mov
in
cmp
lret
out
rcl
fcoml
jo
cltd
rcrl
dec
pop
push
in
pusha
mov
or
push
in
lahf
arpl
lds
fsubl
mov
rcrl
and
inc
xchg
cs
dec
scas
and
push
adc
xchg
test
fildll
push
fisubrl
cld
jg
mov
jg
mov
mov
cmp
fstpl
lret
adc
cmp
mov
pusha
rcl
cmp
arpl
outsb
sbb
fcomp
mov
sbb
aad
imul
aam
mov
or
jbe
cmp
xchg
shlb
pop
add
add
ljmpw
push
lret
add
jl
cltd
lods
in
ljmp
out
cmp
ret
fs
mov
push
ds
push
mov
or
nop
sbb
mov
xchg
int3
add
sub
aam
mov
mov
jg
ja
mov
shl
pop
mov
test
movsl
push
out
push
stos
dec
lods
pop
xchg
rcl
nop
add
ffreep
repz
push
pop
je
push
pop
lea
push
jecxz
das
call
jecxz
mov
add
xor
frstor
in
mov
clc
jo
lcall
mov
leave
xor
popf
dec
xchg
mov
out
pop
pop
xorb
shrb
sub
into
push
push
mov
and
addr16
mov
lahf
jo
loope
cmp
dec
jp
fs
jnp
inc
adc
test
outsb
clc
add
pop
xchg
cmpsl
pop
cmc
mov
mov
mov
popa
mov
cmp
jmp
cltd
cmp
jp
pop
lods
mov
and
imul
popf
ss
testl
lahf
fnstenv
test
cs
mov
adc
pop
jp
stc
pop
adc
cmc
adc
and
das
aas
loopne
sub
jecxz
adc
dec
loopne
mov
sbb
xor
and
mov
fsubs
outsl
not
adc
inc
outsb
out
fidivrl
jae
push
or
push
je
cmp
pop
mov
aad
xor
mov
cltd
dec
jb
push
ss
cvtpi2ps
negb
push
mov
movsb
jecxz
stos
push
leave
cmc
daa
or
jbe
push
nop
cmp
fnstsw
jge
mov
decb
lcall
into
dec
imul
stos
aad
or
ret
ljmp
scas
shlb
pop
sarl
add
push
xchg
jg
aad
std
mov
repz
popa
inc
cmp
scas
pop
cmpsl
movsl
cmp
push
fcoml
mov
imul
cmp
pop
pop
jne
fwait
mov
pop
xor
mov
ret
adc
int3
and
xor
sbb
fidivrs
sub
mov
pop
jl
and
cmp
scas
int3
cwtl
fisttpl
in
jo
insl
mov
jl
lock
into
daa
scas
je
push
jp
jmp
pop
loop
dec
call
cmp
cwtl
nop
negb
cmp
icebp
into
push
test
call
sarl
ret
xor
jg
push
mov
lret
cwtl
inc
mov
fadds
jo
in
imull
lea
test
push
and
add
aas
push
aam
pop
cli
fdivs
xchg
sbb
or
shlb
test
cmp
push
xor
pop
or
fs
int
pop
cmp
dec
data16
push
jecxz
push
pop
je
test
or
pop
inc
jp
cmp
dec
jmp
scas
jbe
sub
xor
pop
lret
js
decb
inc
mov
adc
and
or
adc
adc
js
jge
insl
aad
aam
out
cmpsl
xchg
mov
push
xor
mov
mov
pop
xor
jno
mov
loopne
jbe
jle
lret
std
enter
fdiv
jle
cmp
adcb
push
and
pop
ret
jmp
dec
pusha
movsl
cli
cmp
in
adc
xchg
xor
sti
repz
mov
stos
push
js
icebp
je
xor
pop
outsb
subb
inc
pop
in
mov
in
inc
or
in
stos
das
mov
pop
pop
adc
imul
lahf
sub
fsubl
or
loopne
mov
xor
pop
and
insb
loop
adc
lahf
fs
dec
std
imul
jns
mov
jl
mov
loope
int
sarw
arpl
cmpsl
aas
lods
cltd
cmp
push
xchg
xlat
push
sbb
adc
ss
jns
xor
imul
aaa
fnstcw
fdiv
adc
xor
dec
aaa
iret
jge
decb
xchg
scas
jns
or
pop
xlat
mov
fsubl
pusha
push
roll
sets
pop
movlps
lds
into
lods
inc
and
in
out
jne
imull
in
sbb
sub
pop
and
push
leave
pop
xor
adc
lea
mov
lcall
sub
and
xchg
fistpll
outsl
loop
or
cs
xor
mov
in
mov
cmp
push
cmp
xlat
es
or
mov
push
sub
dec
mov
lock
jae
scas
xor
seto
dec
pop
jmp
mov
es
push
jae
mov
add
xchg
jno
cmpb
bound
imul
and
and
add
ss
pop
es
xchg
xchg
mov
push
sub
jno
pop
roll
loop
add
adc
push
fistpll
orb
std
in
ret
cmpsb
fcoml
sub
outsb
clc
shll
xor
cmp
add
adc
inc
pop
loopne
xchg
lret
jno
pop
shr
cmp
shrl
testl
cli
pop
loop
call
jno
sbb
sub
jmp
mov
push
roll
test
mov
mov
sub
jle
nop
in
insl
mov
aam
hlt
inc
xchg
or
arpl
or
mov
add
cmpsb
jecxz
jmp
lea
jae
inc
mov
repnz
mov
sub
ljmp
test
stc
icebp
or
cmp
push
cmp
push
repz
lea
sbb
push
iret
inc
ret
mov
movsl
popl
addr16
mov
cmp
jnp
mov
sub
xchg
scas
test
sbb
push
iret
js
push
in
pop
popa
rol
and
cmp
lret
push
arpl
lahf
mov
daa
jge
mov
xchg
out
inc
mov
imul
loope
add
je
sub
sbb
push
insb
cwtl
lods
movsl
adc
aaa
ja
in
lahf
jns
jns
insb
call
fstps
jns
out
xchg
movsb
jl
lods
mov
leave
inc
mov
push
hlt
jmp
in
mov
push
push
pop
push
pushf
fsubl
imul
test
mov
push
insl
insl
fsubrs
dec
inc
sbb
adc
enter
rol
mul
push
pop
fcoml
sub
inc
add
sbbb
sbb
clc
arpl
mov
cld
dec
mov
jne
mov
test
shll
push
test
std
inc
js
data16
jp
sub
mov
mov
pusha
mov
daa
cltd
leave
inc
cmp
mov
clc
mov
fwait
out
sub
fwait
aad
lea
bound
pop
sar
scas
out
cld
wrmsr
and
movb
movsl
cli
mov
and
sbb
inc
add
xchg
inc
scas
xchg
dec
sti
daa
sbb
sti
ror
push
xor
cwtl
rorb
pop
hlt
mov
mov
loope
hlt
pop
cmp
xchg
out
adc
js
and
mov
pop
mov
pop
fistl
pushf
fwait
xlat
pop
pop
jecxz
push
xchg
repz
insb
lods
jo
dec
daa
out
sub
mov
pop
push
mov
mov
fs
mov
sub
add
inc
mov
inc
ret
nop
xchg
pop
fmuls
pop
ffreep
roll
stos
jbe
pusha
push
mov
and
dec
cwtl
rclb
mov
and
inc
je
mov
push
jns
ret
adc
fadds
rcrb
std
sti
movsb
pop
mov
mov
xchg
add
cltd
into
test
and
sarb
jecxz
rolb
orps
arpl
ljmp
jno
cmp
xchg
call
nop
loop
and
cmp
fmull
subl
add
ds
aas
xor
cmp
dec
mov
ds
inc
jge
out
push
mov
fdivs
xchg
in
jno
push
mov
lea
mov
sbb
stos
mov
outsb
push
inc
idivb
xchg
push
repz
jnp
add
xchg
loopne
xor
frstor
push
pop
xchg
repz
xor
sub
xchg
popf
xchg
jb
jg
jmp
push
sbb
push
stos
es
push
fstl
jmp
dec
jnp
imull
xchg
inc
movsl
sbb
cmp
cmp
add
cmp
jp
jne
pop
or
imul
pop
in
pop
xchg
cmp
mov
inc
popf
add
mov
xor
repz
inc
pop
lahf
sti
add
aam
iret
push
pop
aas
out
sub
adc
xor
mov
es
cs
push
insb
push
push
out
xchg
lock
sbb
jnp
mov
cmpsl
sahf
mov
mov
cmp
imulb
mov
push
jne
aaa
jne
loope
insl
cmpl
or
sub
mov
outsb
mov
inc
aad
iret
shrl
xor
dec
inc
nop
adc
es
pop
pop
adc
pop
cmp
dec
push
aam
ljmp
addr16
lock
stos
push
cmp
and
mov
inc
daa
rorb
ljmp
add
and
cs
bound
mov
inc
ljmp
bnd
hlt
or
adc
repz
sbb
gs
aam
je
and
adc
dec
cmp
mov
sbb
fmuls
cmp
lds
cmp
jecxz
mov
adc
jg
sub
sub
xor
scas
lock
aad
outsb
xchg
adc
jge
mov
xor
les
stc
ljmp
lods
and
arpl
inc
xchg
jnp
roll
jno
lret
ljmp
cmp
xchg
fldenv
fcmovnu
or
cmpsl
mov
loop
adc
fldenv
sbb
aaa
repz
and
loope
sbb
mov
sahf
outsl
jecxz
mov
lahf
int
lods
dec
mov
push
pop
lods
xchg
aas
mov
ljmp
cmpsl
jecxz
mov
ror
ljmp
inc
push
mov
xor
pusha
imull
mov
or
ss
or
inc
sbb
jnp
jb
mov
and
out
stc
aas
inc
out
jbe
sti
rolb
jbe
cmp
jecxz
pop
mov
mov
test
cmp
or
cmpsw
shrl
jle
leave
or
aaa
orl
loop
or
shl
mov
rcl
push
fs
jmp
sbb
adc
pop
sti
pop
cmp
xchg
out
jmp
pop
pusha
add
icebp
cmp
sbb
add
out
ljmp
cmp
pop
std
gs
mov
xor
sti
push
fiaddl
jmp
leave
call
push
cli
ds
test
jmp
sar
stos
mov
nop
mov
insb
int3
add
mov
mov
inc
mov
cmc
enter
loope
lcall
xor
pop
dec
shr
xor
icebp
xchg
push
xor
cltd
push
ljmp
xor
xchg
dec
test
add
pop
cmp
jle
sbb
shrb
repz
push
mov
adc
lahf
cmpsb
call
jo
inc
push
inc
mov
sub
cmp
inc
xchg
cmpsl
add
mov
jecxz
mov
cmp
fisubs
cld
nop
cmp
mov
bound
mov
pause
clc
or
pop
sbb
cwtl
lahf
ljmp
xor
and
cltd
or
jo
mov
or
sti
imul
inc
jne
mov
hlt
or
scas
xchg
les
aaa
lods
cmp
cld
fwait
xchg
ret
aam
aam
sub
icebp
movsb
cmc
fildll
sub
pop
mov
leave
ds
shrl
push
data16
mov
jb
aas
clc
sbb
mov
and
jl
ljmp
lock
cmpsb
pop
movsl
adc
movsl
xchg
fildll
popa
cmp
mov
cmc
mov
data16
shll
outsb
test
mov
jg
loope
es
inc
push
inc
cmc
ss
fnstsw
mov
out
shll
add
nop
adc
insb
mov
mov
and
test
stc
test
stos
pop
dec
sti
mov
dec
lahf
shrb
sub
push
cmpb
enter
cmpsb
add
lea
cmc
jge
mov
dec
inc
roll
sahf
mov
std
loop
fdivl
pop
pop
lcall
popa
dec
cmp
xchg
fidivrs
std
adc
mov
jecxz
mov
sub
fsubl
push
mov
xchg
out
dec
mov
push
and
cmovle
mov
enter
sub
cmp
push
scas
adc
pop
jg
inc
out
mov
and
inc
mov
inc
aam
mov
out
pop
mov
popa
dec
jecxz
movsb
in
xchg
cmp
pop
cld
movsl
sahf
sub
jb
adc
xchg
cs
dec
popa
aaa
iret
jge
adc
mov
or
es
gs
lods
ret
and
sbb
cmpsl
in
dec
push
cld
push
push
jecxz
aas
fwait
stos
rcrl
ljmp
dec
mov
adc
divb
fcomps
xor
adc
nop
adc
out
add
and
push
add
mull
cmp
fsubl
xchg
or
inc
leave
adc
mov
pop
fs
mov
adc
xchg
push
daa
sbb
push
sub
sub
fdiv
xor
mov
test
xchg
mov
out
andl
mov
xor
pop
cld
mov
mov
xor
lret
mov
pop
mov
ret
lahf
xchg
cmp
rclb
aaa
leave
data16
sbb
push
mov
dec
stos
in
hlt
pop
xlat
add
movsl
cmp
ja
ja
or
fwait
pop
orb
or
fnstenv
jl
into
dec
mov
jnp
arpl
sar
in
mov
fstpt
and
and
sbb
adc
int3
iret
cltd
push
dec
fbstp
out
pop
xor
vmfunc
daa
loop
ja
pop
cmp
mov
popa
ljmp
sbb
sub
push
push
and
inc
push
ret
sbb
dec
add
adc
fcompl
pop
arpl
add
pop
stc
imul
or
xor
bound
fmul
inc
or
imul
subb
into
cmp
in
sub
rorl
sub
cmp
pop
pushf
andb
and
dec
push
xor
stc
ss
mov
mov
jb
or
jno
sub
ret
mov
cld
js
int
xor
out
pop
mov
mov
adc
jecxz
ret
out
lahf
and
sbb
rclb
cwtl
ds
xor
sub
out
pop
adc
call
mov
fsubs
jp
dec
jmp
aas
int3
pop
inc
sub
fnstcw
fsubrl
mov
push
xor
pusha
sub
cmp
jo
shrl
mov
loope
cmp
sbb
gs
sbb
sub
jl
cmp
nop
pushf
pop
sbb
pop
js
mov
sbb
rorl
and
insb
ficoms
jg
xor
imul
mov
dec
movsb
cmp
leave
repnz
shll
movsb
hlt
jmp
cld
and
jecxz
stos
xchg
jle
adc
bound
mov
and
rcr
jno
and
stos
jnp
adc
fiadds
fucom
sub
xchg
aad
lods
and
daa
sub
outsb
jno
shlb
add
mov
mov
in
adc
inc
pop
je
or
push
test
push
lahf
adc
cmp
lahf
insb
xor
xchg
mov
dec
mov
cmp
and
mov
sbb
js
inc
xor
jmp
dec
cmp
mov
std
xor
or
hlt
out
mov
cmpsb
push
pop
cmpsl
scas
dec
push
mov
ljmp
popf
ret
or
push
jnp
out
pop
insb
push
push
fidivrl
jl
mov
je
mov
cmp
push
or
push
hlt
movsl
sub
and
or
fxch
cli
movsb
pop
mov
add
add
mov
jmp
sub
leave
mov
push
pop
pop
fs
cmp
jmp
call
add
xchg
aam
into
jecxz
repnz
adcl
ja
mov
lea
push
and
dec
jno
jg
dec
mov
xor
out
or
or
push
dec
inc
pop
mov
pop
dec
mov
and
and
jg
ljmp
xchg
mov
and
mov
hlt
pushf
cmpsl
popa
mov
dec
cwtl
inc
ja
out
int3
leave
pusha
jecxz
lahf
cmpsb
mov
xchg
bound
aad
out
sbb
loopne
or
dec
or
xchg
jl
stos
xchg
lea
dec
dec
push
mov
sbb
adc
pop
fstl
pop
inc
flds
mov
push
lret
and
adc
inc
arpl
call
adc
call
out
pusha
mov
push
aad
stos
rorb
stos
fwait
inc
jge
mov
addb
jle
sub
jo
lods
pop
dec
out
shlb
aad
fcmove
xchg
fistpl
sbb
push
xor
pop
imul
mov
fistpl
jb
fldcw
mov
mov
out
pop
cmpsb
mov
mov
into
or
add
bsf
lock
ljmp
mov
push
xchg
movsl
add
mov
fcompl
aas
inc
outsb
sbb
lods
xchg
fwait
fwait
es
scas
daa
enter
orl
cmp
push
in
jle
mov
or
jecxz
leave
mov
xchg
and
inc
rcll
sbb
cli
mov
cmp
adc
js
fmul
mov
cmpsb
xchg
cmp
cmp
stos
stos
push
sub
ret
push
rorl
pop
sub
adcl
jae
cmp
xchg
adc
aaa
out
icebp
jae
fmull
divl
ror
in
enter
xorl
sbb
enter
adc
add
fisubs
outsl
enter
daa
testb
sbb
mov
xor
xchg
jmp
shlb
icebp
dec
jmp
enter
xor
xchg
rcrl
jb
mov
mov
hlt
add
fdiv
or
arpl
dec
imull
fidivl
jecxz
pop
sbb
push
fst
mov
or
jge
stos
lret
lcall
sub
jmp
sbb
out
in
inc
cmp
push
dec
sub
pop
inc
mov
leave
movsb
dec
in
jbe
adc
mov
adc
jmp
xor
adc
mov
jne
mov
lret
cmp
cmp
sbb
out
lock
xor
or
bound
pop
mov
in
push
shl
and
loopne
push
push
or
jnp
mov
bound
cltd
sub
out
dec
andl
push
std
enter
ret
mov
mull
lahf
test
and
mov
mov
jno
fldz
sbb
xor
fsub
xor
lods
push
sub
pop
rcrl
mov
pushf
xor
mov
leave
or
jne
push
dec
insl
jg
dec
dec
jge
outsb
mov
and
xchg
mov
jb
sbb
inc
sub
mov
and
je
add
or
xor
adc
mov
or
adcb
mov
insb
mov
sbbl
jo
iret
sti
std
mov
in
stos
fwait
mov
xor
xorb
mov
sub
aas
pop
mov
mov
mov
mov
lahf
mov
adc
pop
push
cmpsl
jbe
sbb
dec
out
loop
mov
and
and
sub
mov
mov
add
push
xchg
loope
into
xchg
mov
sahf
mul
into
adc
xlat
adc
aaa
js
or
sar
dec
movsl
loop
andb
cmp
xchg
aam
out
outsl
add
xor
and
icebp
out
xchg
and
bound
inc
rcll
xchg
rclb
sti
mov
fwait
xchg
js
or
ljmp
in
sub
icebp
lds
inc
fcoms
movsb
xcrypt-cfb
cmpsl
and
add
aas
jl
sbb
and
dec
cli
je
stos
xor
ffreep
ljmp
jns
cmp
jp
int
jle
jge
add
icebp
jo
and
arpl
push
jnp
jge
sbb
cltd
push
jmp
mov
xor
in
cmp
pop
movsb
cmpsb
aam
and
mov
cwtl
repz
loope
jo
fnstcw
cli
jge
lret
test
adc
jb
push
jecxz
mov
notl
cmc
fstpl
adc
fiadds
xchg
add
push
xchg
push
or
test
jnp
dec
xchg
out
pop
push
cmc
fs
or
imul
pop
shll
sbb
fwait
and
enter
lret
pop
outsl
cmovle
imul
icebp
add
xchg
inc
pusha
js
cmp
aad
cmc
pop
push
adc
mov
cmc
leave
sub
pop
fcomip
insl
popa
xchg
push
cmpsb
icebp
cmc
mov
addb
orb
mov
loope
adc
andl
out
cmp
out
jle
dec
adc
fucom
or
mov
popf
jno
mov
add
lods
out
add
das
sahf
inc
sub
notl
in
xor
das
mov
stc
fcompl
xor
fs
jmp
adc
xor
lock
adc
ja
jle
jne
xor
out
push
xchg
rcrb
cld
jnp
loopne
dec
pop
add
sub
int3
aam
push
pop
in
and
addr16
leave
ss
mov
xlat
sarb
sar
fwait
cmpsl
and
pop
adc
mov
jns
orps
dec
stos
push
clc
sti
aam
mov
jge
xchg
mov
aam
aam
mov
adc
test
gs
ljmp
insl
dec
lahf
jmp
cs
jns
jecxz
inc
push
sub
add
push
iret
leave
subb
pop
mov
not
into
fiaddl
push
push
push
shrl
call
cmp
xchg
test
xor
int
loope
fidivrl
lds
iret
push
pop
sub
icebp
fwait
jne
ror
movsb
jmp
xor
fsubrl
cmc
out
in
mov
inc
dec
pop
adc
fdivl
icebp
cmp
shr
adc
dec
add
or
cld
imul
notb
mov
fstp
test
lret
cmp
pusha
adc
cld
mov
imul
shlb
xlat
addr16
xchg
addr16
pop
mov
push
int3
loop
fdivrs
adc
xchg
pop
pop
sbb
jne
mov
inc
push
cmc
add
mulb
xchg
ljmp
xor
mov
pop
mov
add
addr16
pop
dec
lret
dec
or
mov
andl
adc
xchg
iret
shll
mov
inc
mov
inc
mov
xor
repz
mov
lds
into
std
mov
test
dec
jmp
cmp
mov
call
cmp
sbb
cmpsl
pop
in
or
out
in
or
lods
fdiv
adc
cmp
mov
dec
fstpl
jnp
out
dec
adc
cmp
ds
mov
sbb
add
sub
test
mov
repnz
add
xchg
test
andl
shrl
mov
mov
out
sub
mov
and
je
lds
pop
cmc
stos
jecxz
cmp
mov
inc
push
push
lods
arpl
pop
inc
pop
aam
cltd
repz
xor
rcr
cs
jmp
xchg
add
nop
xchg
sahf
or
adc
aaa
roll
add
push
add
fcmovu
sub
mov
pop
and
pop
mov
dec
outsl
or
lret
add
mov
int3
inc
or
out
sbb
mov
sbb
jno
mov
pop
je
addr16
pop
pop
xor
idivb
ss
mov
push
mov
lret
test
mov
or
es
push
divl
dec
jo
mov
fcoml
jae
dec
xor
in
pop
inc
mov
insb
mov
or
pop
xor
ss
mov
je
scas
movsb
and
out
int
repz
js
push
outsl
jne
addb
or
sahf
or
and
nop
into
and
jb
dec
gs
pusha
mov
imul
and
cwtl
push
ret
ficoml
xor
xor
cmpsb
xchg
jmp
sbb
loop
lahf
filds
push
mov
stos
out
xchg
mov
mov
ss
mull
test
scas
jg
xor
push
ja
xchg
rsm
fdivrs
pop
mov
fnsave
aas
fstpt
stc
aas
fs
add
insl
clc
mov
pop
out
dec
aaa
mov
mov
adcb
jne
pop
cmp
jne
sbb
sub
cmpsl
adc
ljmp
jmp
push
scas
pop
xchg
fbld
dec
add
adc
jecxz
xor
push
dec
mov
inc
sti
mov
ja
cmp
test
mov
xorl
sub
cmp
mov
out
int3
dec
push
in
loopne
aad
ljmp
adc
xchg
outsb
vpmaxsw
pushf
mov
xlat
or
fadds
cld
call
jecxz
lods
jns
jne
inc
pushf
pop
mov
xorl
in
out
push
xor
cmp
sbb
nop
fildll
mov
arpl
shrl
push
std
xor
es
mov
aam
cmp
add
testb
lahf
inc
pushl
jecxz
lds
lods
iret
sub
mov
sub
lods
mov
and
pop
jp
rorl
xor
test
adc
mov
jp
xor
inc
ja
jle
adc
stos
arpl
enter
aam
pop
std
sub
and
rorb
xchg
sbb
aam
sti
notb
aam
int
jnp
mov
fs
ja
int
mov
or
mov
sub
cmpb
cmp
gs
aad
dec
int
push
hlt
arpl
inc
mov
repz
or
xchg
sbb
bound
add
aad
lock
outsl
dec
sub
shlb
xchg
mov
or
fsubs
cmp
xor
lahf
out
sbb
repnz
out
cmp
insl
mov
mov
push
mov
mov
lret
or
xchg
lds
dec
mov
cmpsb
xchg
sbb
mov
jns
push
inc
fimuls
jbe
add
mov
stos
cmp
in
lods
xchg
inc
pop
jae
mov
dec
movsl
lds
in
mov
dec
xchg
call
or
aaa
xchg
filds
gs
cwtl
dec
hlt
movsb
xor
mov
cltd
fidivl
call
lcall
shl
ds
adc
leave
mov
pop
pop
loopne
std
fadd
jecxz
out
bound
push
out
mov
imul
sub
rorl
mov
mov
mov
mov
adc
pop
xchg
sti
test
ss
dec
loopne
iret
jns
decl
push
cwtl
dec
fsubrl
mov
xchg
sub
jne
out
int
inc
sahf
in
lret
repz
test
and
aad
repz
sbb
sub
mov
jg
ror
movl
dec
pop
sti
inc
add
cmc
cli
mov
movsb
xor
mov
popa
aam
lcall
adc
das
add
cli
cmc
hlt
lret
shll
add
fistpll
sbb
fsubl
decb
mov
scas
rcrl
cltd
cmp
sub
sahf
pop
jmp
cli
cmpsl
inc
fistpl
movsb
and
xchg
add
insb
scas
dec
insl
pop
mov
push
mov
sbbl
add
shrb
add
int3
inc
xor
stc
cmpsb
gs
loope
pop
pop
test
mov
jmp
fisttpl
dec
cmpsl
adc
xchg
sti
mov
imul
jecxz
sbb
int
adc
cltd
je
sbb
xchg
mov
aas
mov
cmp
lds
int3
ljmp
inc
js
adc
cwtl
jae
aaa
sub
add
mov
inc
sbb
repnz
mov
paddd
jne
mov
mov
in
xchg
out
das
jl
jns
xchg
mov
sub
push
sbb
or
pop
jecxz
xchg
jp
xlat
test
xor
aaa
leave
lahf
in
out
xchg
xor
adc
cli
pcmpgtd
stc
jnp
dec
pop
jmp
mov
adc
sti
ljmp
div
mov
or
int3
cld
inc
je
shl
in
sub
mov
sti
push
hlt
mov
addr16
mov
orl
sti
ret
sbb
int3
jecxz
sbb
jne
int
stc
add
mov
mov
sbb
hlt
rcl
push
jge
jg
scas
jl
inc
enter
mov
shrl
pushf
xlat
jmp
xchg
xchg
idivl
sti
lahf
xchg
lods
shrl
iret
jg
pop
jle
outsb
fistpl
jb
mov
mov
aad
xchg
cmp
cmp
push
sti
mov
pop
addr16
push
nop
cmp
lea
shll
hlt
movsb
mov
into
push
imull
mov
fstp
and
ret
sahf
inc
cmp
lcall
pusha
pop
xchg
cwtl
push
and
repnz
out
lahf
jbe
adc
jb
jno
cli
stc
stos
jle
and
leave
cmp
lcall
cmc
dec
sbb
mov
test
add
push
fbstp
dec
mov
rclb
sti
cmp
adc
mov
in
jbe
stos
mov
imul
mov
jne
dec
adc
dec
xor
fdivs
out
test
cmp
es
lret
mov
testl
mov
or
add
mov
or
fidivl
jnp
push
pop
cmp
jb
bound
sub
cli
nop
in
mov
adc
mov
int
mov
lcall
je
pop
arpl
imul
data16
ficomps
loop
fbld
scas
leave
dec
mov
std
and
ret
sub
dec
aas
sbb
sbb
shll
into
sbb
add
cli
adc
fimull
leave
mov
cs
add
inc
mov
jmp
cmp
cmp
outsw
js
shl
leave
adc
pop
add
gs
lcall
divb
fisubrl
divb
stos
pusha
adc
inc
push
das
shll
cmpl
inc
arpl
lds
jns
xor
inc
and
adc
sbb
pop
lret
ss
inc
in
add
fnsave
mov
add
leave
incb
out
lret
out
inc
jne
dec
fs
sub
fisubl
xor
stc
cld
mov
fiadds
adc
gs
int
ljmp
jle
inc
or
push
mov
dec
inc
out
cmp
adc
enter
xchg
add
rcrl
ja
add
addr16
push
cmpsb
or
jbe
cmc
jnp
out
sub
inc
sbb
movsl
jecxz
or
dec
cld
addr16
dec
lds
mov
cmp
sbb
cmc
ss
lods
xchg
popa
scas
mov
inc
xchg
mov
jne
pop
pop
jmp
pop
sbb
add
push
push
mov
sub
or
inc
sub
jno
mov
mov
xchg
ret
pop
jp
mov
shlb
inc
adc
lea
push
popf
bound
push
repnz
add
lock
jmp
roll
cmp
mov
mov
pop
negl
sub
orl
sti
std
pop
push
mov
shlb
xchg
paddb
pop
imul
js
xchg
aaa
mov
fwait
jnp
sbb
sbb
iret
arpl
jo
sti
inc
mov
mov
xchg
xchg
fnstsw
inc
jo
fcompl
jnp
mov
out
sbb
stos
mov
mov
pop
adc
out
xchg
inc
inc
vzeroupper
adc
test
pop
jecxz
jp
add
movsb
mov
ss
push
gs
arpl
jecxz
inc
int
lcall
or
bound
xchg
shlb
or
cmp
mov
add
stos
jnp
into
shrl
inc
xchg
das
cmp
outsb
rorb
leave
mov
mov
xor
push
add
inc
cmpsl
rcll
push
out
adc
xchg
icebp
pusha
adc
insb
insb
push
in
inc
stc
pushl
std
or
cmp
push
mov
scas
pop
pop
jnp
cmp
pop
lret
xchg
sub
cmp
xor
mov
sbb
pushf
xchg
push
insl
cmpl
arpl
pop
sbb
push
clc
ret
xchg
xchg
jbe
aam
fwait
xor
movsl
pop
pushf
in
add
les
mov
add
loope
jl
dec
sub
scas
ja
insb
sbb
mov
lds
push
int3
das
fcomps
hlt
popl
enter
adcb
jb
mov
cld
fs
jns
cmp
pop
pop
pop
or
lahf
push
mov
jae
push
mov
cli
xchg
fcoml
mov
jae
lcall
or
mov
jbe
mov
lods
aas
mov
sub
scas
and
fmull
aam
lds
inc
les
add
mov
mov
mov
aas
stos
mov
aaa
std
and
xlat
mov
push
cmc
fisubrl
adc
popf
aas
scas
xor
cltd
das
mov
fildl
addb
aaa
push
fs
push
imul
adcb
push
rcrb
outsl
subb
inc
std
sbb
fistl
inc
mov
lds
mov
inc
pusha
xor
push
sbb
stos
pushf
lret
aas
pop
add
js
pop
pusha
jno
add
xor
pop
pop
mov
cmpsb
xchg
fcoml
inc
movsl
xchg
inc
and
jbe
jno
adc
sub
lret
sub
fstpl
jp
mov
xor
scas
cmp
and
stos
in
les
push
pop
inc
imul
subb
push
xchg
xchg
scas
cwtl
or
xor
in
rcrl
sbb
ds
pop
cmc
sub
add
repz
mov
es
cmp
jp,pt
ss
jne
sbb
mov
inc
in
jno
enter
sbb
pop
cmp
ret
flds
imul
sbb
dec
xchg
dec
add
push
inc
jae
lcall
push
fisttpll
int3
jg
pop
xchg
jne
xor
pushf
stos
in
loope
dec
mov
mov
pop
add
outsb
sbb
mov
lahf
daa
mov
mov
scas
sbb
xor
fidivl
sub
mov
test
and
dec
xor
pop
stos
in
pop
fwait
enter
cmpsl
aad
sahf
sbb
sub
iret
mov
mov
mov
jge
ficoms
jns
sub
mov
sbb
mov
aaa
mulb
jl
cli
gs
outsw
or
loope
push
push
pop
mov
xchg
sub
mov
sub
dec
add
pop
out
nop
leave
inc
xchg
in
sub
aaa
jo
pop
fwait
test
enter
pop
outsl
outsl
lods
test
lret
lea
pop
jmp
iret
dec
inc
js
and
pop
mov
in
mov
imull
js
stc
pop
subb
xchg
cmc
or
pop
ret
fdiv
ss
cmp
cmpl
cmp
lret
test
sbbb
mov
fs
out
sbb
jne
jecxz
stc
insb
xchg
fistpl
dec
dec
xor
push
jne
ljmp
xchg
popf
pop
in
scas
outsl
push
adc
jl
loop
mov
sbb
adc
test
cmp
dec
and
lods
out
xchg
inc
fs
movsb
mov
ret
add
out
dec
add
push
inc
sub
cmp
cmp
insl
push
sub
ret
adc
push
xchg
mov
sbb
and
lret
shrl
lea
jge
pop
sbb
in
jge
mov
mov
dec
cmc
jle
mov
roll
push
rcr
xlat
jge
add
mov
das
popf
divl
test
xchg
loop
jns
jne
insl
add
xchg
bound
stos
push
cwtl
cmp
mov
jp
inc
pop
scas
mov
pop
push
sbb
jmp
rolb
xchg
std
movsl
and
icebp
lret
xor
mov
push
leave
pop
xchg
push
xlat
in
xor
bndldx
jb
inc
out
imul
push
pushf
jecxz
cs
mov
mov
ret
insb
mov
cmpsb
loopne
pop
push
push
or
mov
fdivs
rcr
into
inc
aaa
lock
mov
inc
mov
or
mov
loope
cs
shrl
cld
mov
lret
outsb
or
shl
icebp
xor
clc
in
lahf
jbe
arpl
xchg
dec
xor
scas
fidivs
mov
fdivs
or
push
ja
pop
push
loop
jno
shl
ror
add
adc
jno
xor
fildl
xor
imul
subb
hlt
test
in
inc
dec
aaa
mov
addr16
fisubs
adc
fisubl
dec
jge
jns
xchg
jmp
push
repz
push
je
mov
mov
inc
cmp
xchg
out
icebp
inc
aad
icebp
xor
enter
or
xchg
xor
cmpsl
jg
cli
cmpsb
cmpsb
outsb
mov
dec
cmp
cmp
test
adc
sub
add
mov
lret
mov
sub
cmc
push
in
inc
pop
jecxz
fwait
imul
pop
xchg
xlat
mov
test
jns
xchg
cltd
xor
mov
aas
dec
das
and
inc
sti
addr16
pop
addb
sub
xchg
sbb
test
jbe
mov
push
hlt
add
pusha
cmp
push
ficomps
enter
jecxz
adc
xchg
lret
addr16
cmp
mov
and
sti
in
call
pop
shl
test
push
and
sub
sbb
sbb
push
cmp
push
arpl
xchg
std
jnp
push
fbstp
movq
fld
add
mov
shrl
xlat
out
fistps
pop
pop
add
lods
mov
push
jb
std
int
mov
in
jmp
jns
jmp
jl
mov
ficoml
mov
inc
test
mov
and
sahf
mov
aam
dec
imull
aaa
lock
dec
dec
xchg
inc
out
pop
xor
out
sarl
inc
adc
cwtl
in
jecxz
bound
cmpsb
lahf
mov
jp
loope
xor
push
dec
ljmp
xor
gs
out
xchg
pop
mov
add
popf
push
icebp
bound
cmp
loopne
add
xor
adc
add
in
aas
faddl
push
sbb
leave
fildl
imul
pushf
jp
ret
clc
je
jl
mov
xchg
imul
pusha
fcompl
repz
jecxz
mov
adc
or
cmp
ljmp
lods
adc
lods
or
dec
xlat
or
sbb
pusha
rcr
enter
aaa
xchg
test
mov
stos
fsubp
pop
es
xchg
je
cltd
ljmp
push
popf
fcomps
add
xchg
and
mov
mov
std
add
repz
xchg
mov
leave
mov
jns
in
imul
lcall
sbb
pop
scas
stc
mov
adc
les
xor
xchg
xchg
pop
gs
js
adc
and
xor
pusha
into
gs
pop
cs
mov
in
mov
insb
dec
inc
mov
mov
fsubs
dec
sub
ss
es
pop
xchg
ret
mov
pop
ss
aad
popf
dec
jne
lcall
loop
sahf
cmp
or
or
jbe
xchg
adc
ss
push
je
in
dec
sbb
mov
fildl
lods
inc
add
or
fmull
xor
adc
stc
jl
cmpl
xor
xorl
fs
mov
sub
scas
testl
cltd
and
adc
sbb
lock
test
fnstsw
xchg
addr16
mov
inc
mov
lea
cmc
inc
stc
out
addr16
dec
mov
sahf
fwait
mov
std
gs
xchg
dec
loope
lock
insl
test
mov
add
and
pop
aad
xor
mov
xchg
shrl
pushf
pop
int3
insb
xor
sub
es
xchg
sbb
cmp
sub
jb
addr16
sti
loop
nop
mov
ljmp
scas
pop
pop
rclb
scas
sahf
and
insl
push
leave
xchg
aaa
les
or
out
xchg
ret
jo
lods
addr16
mov
pop
mov
test
sbb
rclb
xchg
pushf
dec
mov
cmp
dec
adc
inc
mov
loopne
into
adc
add
push
jo
xor
mov
fsts
cli
iret
clc
inc
cld
in
adc
in
ja
cmove
cmp
or
pusha
popa
lods
sbb
es
jns
in
cmp
orl
je
sbb
imul
nop
cmp
js
test
dec
xchg
addr16
gs
cmp
mov
bound
setbe
dec
test
inc
adc
xlat
jl
mov
sub
push
ljmp
clc
ret
imul
cmp
shll
add
xor
cmpb
push
mov
inc
inc
mov
loope
shlb
or
jecxz
xlat
sbbb
cmpl
jnp
outsb
push
jnp
fwait
jmp
cmp
addb
into
filds
dec
lods
push
mov
push
insb
repz
clc
and
jnp
repnz
ret
sub
jbe
insb
orl
mov
stos
pop
cmp
mov
cmp
sbb
mov
lret
int
or
lods
out
js
negl
cmc
sbb
fwait
sahf
cmpsb
fwait
xchg
std
cli
addr16
out
cmp
push
pop
xchg
push
rcl
sub
pop
adc
jno
hlt
adc
inc
jmp
cmp
pusha
mov
fistpll
mov
test
outsl
js
fcoms
pop
in
fwait
sbb
lea
dec
out
push
and
jecxz
inc
rolb
out
or
je
cli
lret
loope
insb
or
cmpsb
outsl
icebp
mov
in
jl
mov
or
mov
mov
jno
and
mov
xchg
mov
ljmp
repnz
scas
add
jns
xchg
and
mov
leave
rcrl
cmpsl
push
aam
cmp
cmp
ret
mov
mov
adc
pop
sub
inc
in
imul
dec
loopne
push
cmpb
sahf
mov
cmpl
pushf
enter
dec
jb
sub
pop
scas
mov
lcall
jns
ret
clc
sahf
ljmp
and
sub
lods
das
inc
push
sbb
mov
and
dec
roll
pop
imul
sub
xchg
cmp
cmc
into
repz
or
xor
jle
je
xchg
inc
imul
sub
inc
jns
xchg
jl
mov
pusha
out
jbe
cmp
testb
fiadds
mov
push
sbb
pop
in
test
icebp
insl
cmp
nop
push
rorl
sub
cmc
xchg
fidivs
xor
or
icebp
and
pop
lds
ret
test
testl
addr16
jg
jp
add
mov
dec
fsubrl
ret
push
xlat
mov
sahf
push
adc
and
fdivp
sub
in
add
jp
xor
push
leave
pop
scas
jecxz
mov
loopne
mov
jnp
ds
cmp
icebp
repz
sub
ficomps
pop
cwtl
movsl
idiv
xchg
aas
mov
sub
sbb
test
and
mov
out
and
je
mov
rcll
mov
xorb
or
idivl
cmp
adc
clc
aam
pop
aas
or
cmc
fisttps
js
addb
fisttps
std
push
fimuls
inc
stos
icebp
sub
in
dec
sbb
cmp
cmp
inc
mov
test
inc
jle
jb
lret
jnp
vmovd
ds
cmpsb
or
stos
push
push
cmp
cs
xchg
mov
push
sub
adc
jl
loopne
mov
inc
loopne
mov
int
mov
mov
mov
pop
jmp
pop
cmpsl
inc
cmp
rolb
jns
adc
pop
scas
cmp
sub
js
xor
add
lea
mov
push
fistl
pop
xchg
jbe
xor
cmpsb
ret
bound
sbb
push
aas
jp
sbb
loopne
xchg
popa
cld
add
lods
adc
cmp
jbe
in
jl
mov
cld
mov
sub
inc
fwait
data16
mov
sbb
pop
into
mov
xchg
push
das
dec
sbb
out
or
mov
addr16
sub
pop
lret
imul
sbb
and
mov
mov
lea
dec
mov
push
xor
push
pop
cwtl
aaa
jg
into
pushf
xchg
in
mov
pop
mov
xorl
loope
rorb
into
xchg
push
dec
adc
jne
in
cld
push
cmc
ret
inc
sub
inc
sub
loopne,pt
icebp
mov
jmp
fs
xchg
jecxz
jmp
insb
aaa
mov
cmp
mov
push
fldl
fstp
in
sbb
mov
or
in
cwtl
call
and
mov
xor
push
add
daa
mov
mov
and
push
inc
add
xor
int
add
arpl
ss
jle
lret
cmpsb
jo
mov
dec
or
cwtl
or
xchg
cli
mov
push
imul
cmp
adcb
mov
ficomps
es
into
xor
cmp
add
cmp
xchg
stc
imul
cli
je
out
loopne
imul
xor
dec
jmp
xchg
ret
outsb
subl
aad
stc
fnstenv
push
jb,pt
sbb
and
pop
mov
lretw
mov
lret
fsubr
ret
mov
push
mov
xchg
xlat
xor
loopne
movsl
mov
mov
mov
iret
mov
mov
xchg
fcompl
cmp
ja
scas
shlb
lret
loope
mov
mov
cmc
cltd
push
dec
cwtl
int
imul
sub
cmp
ss
or
fbstp
xor
mov
je
les
pop
sbbl
jae
shll
xchg
repnz
push
adc
or
mov
cmp
fbstp
or
dec
jb
lcall
mov
out
or
or
cmp
es
cmp
es
bound
sbb
pushf
xchg
popf
add
xor
ss
std
lds
jg
hlt
add
lods
adc
test
xchg
ficomps
outsb
lds
aas
in
cwtl
out
ja
pop
shl
aaa
mov
mulb
ss
push
sbb
push
das
push
jl
xor
cmp
mov
std
pop
inc
dec
pop
cmpl
insb
jo
stos
lea
sbb
sarb
cmp
jecxz
sbb
and
mov
adc
mov
int
lret
test
pop
xchg
ds
loope
mov
mov
add
mov
xchg
pop
jbe
mov
sbb
mov
xorb
das
or
inc
mov
mov
add
inc
movsb
xchg
addr16
aad
jns
js
les
cmpb
mov
xchg
pop
jne
insb
pop
das
dec
loop
mov
mov
pop
inc
test
fldt
fldenv
mov
push
inc
mov
or
add
add
dec
xchg
enter
mov
sbb
dec
sbbb
jnp
mov
int3
insb
push
mov
jnp
into
jmp
out
fs
or
repnz
mov
inc
sbb
sub
rcll
int3
mov
mov
sub
or
mov
ret
sbb
or
dec
lds
addr16
addb
pop
cld
push
mov
cs
push
aad
cmp
ret
mov
movsb
push
cmp
ret
jl
fs
pop
mov
mov
loopne
and
or
in
push
xchg
mov
adc
xchg
sbb
push
sbb
xor
dec
insb
lds
ss
add
mov
mov
pop
ja
mov
inc
and
call
test
mov
push
add
lret
shlb
fbld
rcl
test
leave
lods
nop
cmp
sbb
lock
jns
cld
lods
dec
sbb
mov
lret
clc
roll
mov
repz
rcrl
lcall
pop
jne
mov
mov
imul
or
xor
pop
jbe
push
ds
ror
push
xchg
inc
sub
pop
outsb
mov
popf
add
in
repz
sub
or
std
aam
fmuls
add
insl
cmp
sti
sti
push
out
push
xchg
push
rol
adc
clc
jp
push
rorl
dec
mov
in
mov
jmp
dec
cmp
pop
push
gs
mov
scas
test
fdivrl
ss
test
sub
adc
es
pop
xlat
sbb
popf
test
add
les
addl
pop
mov
mov
insl
push
aad
or
dec
scas
or
mov
int
jmp
test
inc
fldt
cmp
xor
inc
fbstp
add
mov
stos
mov
inc
mov
mov
mov
add
adc
aas
push
or
dec
and
pushf
repnz
push
les
fsubr
negb
mov
and
pop
andl
inc
mov
pop
test
add
lds
int3
xor
and
and
dec
js
out
sbb
xor
roll
mov
pop
movsb
cmpb
loopne
push
push
mov
inc
mov
ret
ja
mov
and
xchg
jp
or
cmpl
mov
in
sbb
adc
aaa
fstpl
cmpsl
push
ficompl
inc
pop
push
cmp
cmc
fld
js
adc
and
int
cwtl
lahf
ret
int3
ss
int
les
movsl
xorl
popf
adc
jl
orb
and
subps
cwtl
shl
ja
movsl
mov
aaa
lock
xchg
xchg
and
add
je
lea
or
inc
xchg
push
and
stos
sarl
fcoml
xchg
mov
test
ss
ror
data16
negb
pusha
sbb
push
in
dec
jmp
es
hlt
add
cwtl
xor
dec
push
push
dec
repnz
cmpsl
push
repz
inc
out
lret
std
push
sub
sub
jl
pop
adc
mov
aam
mov
cmp
sub
and
adc
xchg
ljmp
in
mov
mov
ljmp
cld
bound
and
insb
pusha
sbb
repnz
mov
sarb
cmp
sbb
outsl
in
mov
ss
or
nop
loop
xchg
mov
jle
xor
clc
in
pop
lock
push
and
dec
mov
mov
and
loop
icebp
and
pop
rcrl
outsl
push
lret
imul
popa
push
mov
jp
pop
pushf
shl
and
or
cmp
sbb
xchg
cmp
int
cs
sahf
mov
push
aad
test
dec
sbb
push
leave
movl
iret
lods
push
outsl
pushf
pop
out
fs
addb
dec
shl
jne
repz
mov
xor
add
out
mov
mov
sbb
jle
enter
sbb
sub
add
push
test
mov
cmp
mov
sub
fsts
jbe
mov
inc
insb
fadds
jge
dec
pop
lods
insb
das
je
outsb
int3
sbb
sahf
sub
pop
xchg
or
call
xchg
cmp
sbb
push
jp
pop
jmp
adc
cwtl
or
test
lods
iret
lret
pcmpgtw
stc
jg
popf
mov
enter
and
mov
mov
pusha
into
lods
mulb
mov
repz
leave
cmp
iret
icebp
add
test
imul
mov
in
pop
mov
pop
fidivs
in
das
stos
cmp
jg
fcomps
pop
lahf
jns
mov
mov
in
and
roll
jle
aaa
int
push
dec
ret
loopne
mov
pushf
push
fisttps
outsb
pop
mov
push
add
fistpll
ds
inc
imul
cltd
cld
pop
fsubrs
and
outsl
pop
inc
cli
sub
pop
in
aad
inc
and
pushf
push
mov
cmp
imul
scas
stc
pop
movb
rolb
test
xor
adc
dec
scas
xor
into
xor
aaa
stos
sbb
call
inc
pop
repz
dec
pop
inc
sub
xor
in
push
cld
test
cmc
enter
cld
xor
dec
repz
shrb
mov
lock
xlat
inc
and
in
pusha
pop
add
xorb
mov
fbstp
sbb
xchg
pop
popf
int3
mov
mov
outsb
mov
sub
shrb
jmp
xor
shll
out
shrb
push
pop
leave
pushf
and
insb
xor
or
out
enter
xor
xor
gs
movsl
cltd
sub
adc
sbb
fninit
lcall
xchg
ret
mov
sub
outsb
sub
scas
imul
jae
mov
mov
mov
popf
xor
pop
jne
call
andl
idivb
mov
mov
push
iret
dec
incb
xchg
mov
movsl
add
test
out
mov
in
mov
daa
mov
ret
lock
in
sbb
or
ja
or
lret
jmp
add
icebp
add
xor
test
pop
sbb
fisubrl
dec
pushf
popa
call
mov
dec
aaa
loop
popf
pop
inc
movsb
mov
iret
cmp
out
jbe
sbb
or
test
das
inc
xor
jnp
dec
or
outsb
xchg
push
xchg
mov
jb
adc
cmp
loop
mov
dec
pop
scas
jnp
jmp
pop
or
push
ret
push
xor
repz
fcoml
ret
lret
adc
rolb
popa
adc
cmp
xchg
dec
push
fnstsw
fs
adcl
cld
mov
jle
jnp
ljmp
pusha
imul
xor
add
imul
inc
xchg
sahf
mov
je
mov
mov
mov
in
outsl
xor
lret
xlat
add
pop
mov
loope
jle
cmpsb
pop
inc
addl
cmc
and
repz
pop
cld
adc
pop
test
mov
mov
mov
nop
pop
stos
jne
sahf
imul
push
icebp
xchg
fwait
call
pop
dec
scas
jmp
pop
sbb
cmp
imul
xlat
pop
mov
aas
sub
iret
pop
sbb
test
or
push
jb
dec
mov
arpl
pusha
pop
insb
movsb
add
mov
leave
lods
push
adc
jl
inc
loope
add
cmp
daa
dec
adc
xor
lods
jp
lret
inc
jne
mov
xor
xor
repz
push
in
push
jmp
mov
push
inc
jno
push
fsubl
push
sbbl
dec
add
inc
cmp
add
fisubrl
arpl
xchg
lods
insl
pop
lds
mov
mov
fistpll
mov
and
sbb
push
mov
adcb
mov
xor
hlt
in
cmp
daa
pushf
hlt
push
popa
ret
dec
mov
test
loopne
ljmp
add
ss
nop
aam
int
mov
imul
mov
shrb
mov
mov
dec
sbb
mov
movsl
sub
mov
stos
push
sbb
popl
adc
outsb
xchg
mov
cli
mov
inc
mov
inc
rcrl
mov
mov
sub
test
call
jge
stc
or
sbb
push
xor
sub
dec
ja
push
push
adc
jb
jl
stos
les
fs
jl
dec
adc
sub
mov
fs
add
xor
lcall
push
cmc
jmp
stc
add
lods
outsb
orb
fimull
inc
scas
inc
jnp
and
push
and
xor
mov
adcl
outsl
pop
fdivrp
sub
sbb
lods
decl
sub
sub
outsl
negl
fnstcw
mov
pop
xor
or
jae
repz
sbb
jo
jnp
sub
in
cmpsb
dec
pop
das
ja
ljmp
or
add
mov
mov
shlb
test
outsb
imul
dec
in
sahf
loop
cmp
mov
mov
mov
mov
int3
dec
inc
mov
mov
sbb
push
loopne
mov
int3
aas
arpl
fmuls
gs
xor
cmp
jo
scas
sti
sahf
cmp
ret
lret
cltd
movsb
stos
pushl
mov
ja
dec
stos
imulb
pop
test
mov
lods
inc
or
inc
or
dec
ss
test
push
adc
jne
dec
dec
movsb
push
je
test
fwait
or
fiaddl
sbb
cmpsl
fsubl
and
call
dec
push
inc
jle
mov
mov
das
cwtl
lods
pop
lahf
movb
imul
jp
je
pop
or
inc
jno
dec
fidivl
xchg
xor
jne
mov
ljmp
sarl
inc
jbe
or
cli
dec
sub
shl
scas
je
mov
sub
inc
iret
xorb
mov
out
lods
test
push
test
incl
dec
sub
sub
les
xchg
lret
dec
inc
mov
dec
fimuls
or
mov
scas
scas
stc
jg
dec
lea
add
fs
incb
cmp
adc
cmc
js
push
in
in
mov
cmp
cltd
adc
push
adc
shlb
or
sbb
dec
add
jb
xchg
icebp
call
push
jp
mov
hlt
mov
addr16
mov
dec
push
lret
xor
lods
stos
cltd
xor
test
in
pop
mov
adc
dec
test
sub
fwait
and
rcrl
lock
pop
or
mov
shlb
popf
fucompp
pop
addr16
add
xor
cmpsl
in
es
ljmp
shrd
icebp
cmpsb
ret
nop
lss
pushf
addr16
cltd
pop
lcall
and
push
jge
xchg
pop
adc
hlt
scas
fidivs
inc
push
sbbl
loopne
dec
inc
cwtl
xor
pop
pop
dec
sti
xchg
dec
push
hlt
movsb
pop
push
xchg
mov
lock
andl
sbb
push
cmc
movsl
stos
xchg
std
push
aad
outsb
imul
jbe
pop
fcoml
cli
inc
notl
test
ljmp
push
cmpl
test
xchg
xchg
jle
mov
pop
jbe
mov
mov
xchg
in
jp
lds
and
in
dec
jne
mov
push
pop
push
mov
cs
test
mov
in
icebp
ret
dec
hlt
into
loope
fstpt
mov
sub
imul
imul
test
iret
sbb
aaa
jp
lcall
cmp
dec
xchg
cmpb
jbe
popf
int3
loopne
in
aam
jecxz
bound
jl
lahf
popf
sbb
or
jo
inc
out
xchg
dec
data16
xor
cli
shrb
in
stos
stc
fistpl
adc
push
fstps
les
inc
xchg
rcl
push
arpl
repnz
stos
mov
outsl
sbb
jmp
adc
arpl
xchg
sar
sub
clc
adc
inc
arpl
mov
mov
xchg
or
ss
push
leave
imul
xchg
inc
xchg
in
repz
ds
rclb
dec
xchg
and
dec
ds
sbb
pmaxsw
jg
test
adc
mov
ret
dec
les
pop
push
aam
iret
dec
mov
fcoms
mov
jo
or
or
mov
nop
lods
adc
adc
mov
ja
or
jmp
lret
mov
nop
enter
mov
xlat
les
jo
xlat
fistl
mov
jnp
xor
addr16
mov
or
fmuls
pop
mov
in
pop
pop
jae
icebp
sbb
mov
les
fsts
adc
sbb
sbb
fldz
xchg
mov
jbe
cmp
in
push
cld
sbb
xchg
add
push
sahf
out
ljmp
stc
repz
test
push
test
daa
push
aad
cltd
mov
mov
or
scas
mov
mov
cli
bound
sbb
inc
push
inc
pop
jns
mov
jns
lahf
cmpsb
insl
loope
pop
stos
popf
xlat
subl
push
notl
aad
adc
and
jg
lcall
xchg
imul
pusha
shl
mov
fwait
pushf
adc
out
ret
lahf
xchg
mov
jp
cmp
inc
add
or
add
shll
mov
sbb
xor
mov
mov
mov
nop
call
loope
stos
and
jbe
cmpsl
adc
es
pushf
nop
cld
jae
cld
daa
jb
add
popf
pop
sub
add
enter
or
jle
xchg
std
lods
push
cmp
mov
push
lods
jb
xchg
leave
xchg
jge
mov
popa
fisubs
inc
push
movsl
aaa
inc
cmc
push
fdivl
inc
fmul
and
test
mov
es
push
into
pop
adc
xchg
iret
mov
loope
out
aas
lret
ficoms
jge
or
mov
add
loope
pop
sarl
es
add
push
and
dec
adc
aaa
arpl
in
dec
sarb
inc
push
sbb
fists
sahf
cltd
inc
mov
xchg
imul
xchg
pop
scas
adc
divl
lcall
mov
pop
mov
scas
sub
out
hlt
int3
jl
xchg
stc
mov
xchg
or
add
lods
test
mov
mov
jg
test
rcl
sahf
aad
sbb
inc
fxch
xchg
fdivrs
pop
or
and
push
repnz
fwait
adc
inc
add
dec
lock
lret
cmp
inc
adc
pusha
mov
cmc
std
mov
jcxz
push
mov
call
mov
fildl
popa
cmpsl
pop
jb
cld
into
jecxz
out
outsb
mov
dec
mov
in
test
mov
in
andb
jnp
pushf
inc
mov
xorb
push
scas
les
or
jle
in
aam
mov
xchg
add
cmc
lret
inc
dec
cwtl
dec
out
xor
add
jmp
rol
shll
js
jmp
xchg
mov
mov
mov
xchg
cmp
jae
fdivrl
lods
add
jns
dec
cli
movups
clc
inc
cwtl
push
in
inc
arpl
inc
mov
out
es
xchg
sub
cwtl
and
nop
mov
dec
hlt
push
jne
inc
push
out
insb
outsl
out
shl
addr16
dec
gs
mov
mov
out
rcr
fwait
out
into
and
test
inc
outsl
cmp
xchg
jmp
das
adcb
fildl
pop
int3
int3
sub
adc
push
js
hlt
aas
push
in
imul
jp
add
ss
push
and
test
daa
pop
xchg
dec
xchg
dec
mov
or
aad
pop
es
xor
int3
aad
inc
cltd
jns
iret
mov
adc
mov
jge
addb
roll
icebp
xchg
xchg
in
xor
nop
fmull
sbb
dec
dec
mov
push
sbb
mov
push
push
je
jle
lret
fmuls
shrl
sarb
shlb
adc
mov
ret
sbb
xchg
clc
sub
inc
fiaddl
adc
into
std
cmpsb
adc
jge
jl
jmp
mov
push
stc
ret
mov
add
mov
inc
fimuls
mov
gs
mov
pop
mov
jns
inc
inc
inc
jae
inc
int3
and
in
sti
push
adc
pusha
jge
jecxz
pop
loopne
or
cwtl
or
mov
jp
decb
in
mov
gs
pop
insb
lds
test
cwtl
mov
and
std
sbb
pop
mov
inc
fbld
lods
jb
pop
mov
jmp
iret
pop
mov
mov
push
shrb
xor
adcb
jae
cs
in
fimuls
sbb
lcall
rolb
ljmp
call
jmp
jecxz
loop
gs
andb
roll
cwtl
push
es
mulb
cmp
stos
es
push
cld
mov
cmp
xor
lods
add
call
cli
in
push
push
stos
xchg
mov
push
xor
aam
sbb
cmpl
sub
fld
movsb
gs
imul
notb
pop
add
jnp
lahf
imul
lods
push
jg
pushf
xor
mov
test
or
mov
xchg
xchg
addr16
rorb
pop
jno
pop
push
nopl
out
fmuls
gs
dec
loope
lods
aaa
mov
xchg
mov
aam
push
loope
ds
cwtl
mov
ja
xlat
enter
inc
hlt
and
popa
or
xlat
jecxz
ja
mov
ljmp
mov
mov
mov
sub
push
mov
jne
les
in
xor
enter
sub
jle
sbb
hlt
pop
inc
jo
and
jne
inc
pop
in
mov
mov
mov
dec
xchg
testl
mov
lret
ja
mov
fwait
add
cmp
fwait
or
add
repnz
add
pop
push
xchg
punpckhdq
dec
sbb
ret
adc
packssdw
cmc
cmpb
cmp
cli
add
push
mov
ja
adc
aas
jmp
jb
mov
or
fisttps
cltd
pop
sbb
cmp
aaa
cwtl
test
aam
jecxz
adc
es
fwait
push
jo
mov
jbe
stc
leave
out
sub
popa
mov
rclb
pop
mov
inc
pop
out
in
shlb
sbb
out
dec
lret
imul
sub
xchg
push
push
adc
xor
iret
jp
fidivl
mov
out
movsb
adc
test
out
push
xchg
divl
push
fs
sbb
mov
decb
aas
roll
sub
mov
or
cmpsb
aas
imul
mov
cmp
adc
sub
leave
sbb
sub
inc
out
pushf
xor
mov
xor
add
or
push
dec
sub
stos
sub
mov
inc
stos
mov
cmp
dec
shl
sbbb
cmpsl
icebp
jmp
callw
cmp
push
inc
mov
jecxz
stc
jp
stos
adc
inc
outsl
hlt
and
push
sub
xor
fnstenv
addr16
sub
arpl
sub
push
lods
addr16
fbld
pop
aas
aas
sub
nop
cltd
js
mov
push
add
push
popf
add
inc
mov
mov
mov
enter
dec
repz
mov
mov
cwtl
lods
cmc
shll
divl
adc
test
in
push
push
xor
adc
pop
jge
mov
stos
adc
lods
divl
jl
mov
add
jnp
xchg
add
mov
imul
shll
cmpsb
dec
lea
lods
testl
xchg
lds
in
adc
aas
jne
xor
pop
or
and
dec
ds
pop
pop
xor
xchg
inc
mov
movsb
aam
dec
std
jae
into
add
mov
mov
sub
std
int3
pop
sbb
sahf
loopne
mov
sbb
xchg
xchg
outsb
ffreep
sbb
cmp
lret
push
cmp
ret
test
jle
xchg
dec
sbb
pop
inc
mov
push
mov
scas
cmpsl
xrelease
xor
adc
jbe
lret
das
movl
movsb
into
popa
mov
in
push
loope
pop
jp
cld
pop
lret
lock
arpl
mov
cltd
inc
scas
sub
sub
pop
xor
mov
mov
scas
add
bswap
sbb
cmp
pop
xor
or
sahf
xor
mov
insl
dec
adc
and
sbb
mov
cmp
add
xchg
or
out
bnd
adc
out
and
ficoml
sbb
lods
jb
int
xor
xor
mov
mov
aas
push
sub
and
insb
call
test
fisubrs
inc
fstpl
cli
cmc
daa
pop
jbe
and
insb
divps
fisubrl
sub
repnz
or
repz
jl
and
imul
dec
orl
inc
movsl
nop
cltd
add
and
mov
mov
xor
dec
mov
ret
insb
leave
mov
sub
mov
les
les
adc
push
mov
pusha
jno
insb
mov
mov
cmp
cmp
js
mov
sub
arpl
mov
hlt
in
rdtsc
rorl
fcompl
sahf
adcl
mov
pushf
loopne
jge
fistl
or
data16
lock
imul
loop
mov
pop
or
adc
loop
lods
sar
inc
ja
inc
add
cmp
inc
std
push
in
nop
push
insb
dec
pop
aad
and
outsb
adc
outsb
lea
sub
into
jle
movsl
add
lds
push
outsl
cld
lock
mov
test
adc
std
in
mov
andl
testl
xor
push
scas
xor
xlat
fadd
dec
mov
cmp
cmp
sub
out
mov
xchg
pop
test
cs
dec
mov
jecxz
sbb
in
xchg
xchg
add
inc
loopne
loop
decl
cmpsl
xor
in
mov
sbb
mov
pushf
out
mov
notl
daa
daa
fildl
xchg
roll
mov
push
push
cli
adc
sbb
fs
dec
outsb
sbbl
jne
stos
push
das
inc
cmc
pop
adc
jl
sbb
pop
scas
lret
and
mov
jb
xlat
mov
repnz
daa
push
jmp
dec
sbb
push
loop
sub
xchg
xchg
mov
fadds
mov
xchg
jge
mov
jo
mov
mov
cmp
add
out
stos
xor
sarb
cmp
int
das
lret
int3
mov
adc
inc
adc
or
xchg
and
test
jbe
push
cmp
jle
icebp
cld
cmpsb
dec
sbb
aas
add
jecxz
notb
je
mov
std
cmpsl
pop
sahf
xchg
sbb
dec
test
cs
fistps
enter
loop
add
jp
or
cmp
cs
pop
lret
jae
xchg
fcomip
jns
test
push
sub
movsb
jecxz
mov
inc
scas
int
xor
add
imul
mov
lahf
and
fsubr
add
jns
or
scas
cmp
je
fists
xchg
je
mov
jmp
aam
std
pushf
imul
or
fsubl
cmp
and
mov
out
or
dec
xchg
psubq
add
outsl
rorb
add
pusha
inc
adcl
stos
xor
fcomip
and
or
lock
outsb
xor
mov
addb
sbb
mov
add
sbb
lods
syscall
cmp
and
popa
in
xor
stc
int
arpl
cmp
iret
pushf
sbb
je
and
fs
mov
push
in
popf
es
mov
ds
mov
push
movsl
in
sbb
inc
insb
icebp
push
push
cs
inc
jb
add
xor
fdivl
xchg
jne
push
sub
test
mov
sti
outsb
mov
mov
mov
outsb
sbb
xor
aas
pop
mov
imul
and
scas
loope
pop
sub
pop
xchg
sub
mov
inc
push
or
xlat
jmp
dec
xor
and
repz
cltd
adc
pop
sbb
jno
popa
cs
aam
or
jge
add
pop
cld
nop
in
test
icebp
lret
mov
dec
adc
and
cwtl
test
pop
mov
and
sbb
std
dec
inc
outsb
add
mov
and
xor
movsl
mov
jl
dec
shll
push
fdivl
lods
push
int
iret
mov
sub
movd
inc
fs
call
out
sub
xchg
pop
xchg
sub
sbb
pop
add
loope
in
and
mov
mov
arpl
cli
push
cltd
out
add
push
out
xor
push
popf
push
jbe
mov
jecxz
adc
fistpl
jecxz
and
adc
push
xor
or
push
leave
mov
sbb
idivb
sub
int3
sbb
test
stos
xor
lods
cmp
ss
mov
adc
add
inc
in
roll
adc
jb
stos
or
xchg
and
fstpl
adc
mov
gs
and
jne
cmp
jge
insl
cmp
jmp
shl
outsl
jge
sbb
idiv
mov
sbb
fidivl
push
push
sbb
xchg
jp
in
lret
mov
xor
fmull
mov
add
cmp
sub
test
push
pop
push
sbb
imul
pop
adc
insb
fadds
lret
ret
xchg
iret
mull
je
push
loopne
shlb
std
add
fs
mov
inc
dec
xor
outsl
out
testl
mov
movsb
aad
adc
adc
addb
out
cmp
push
ds
sub
xchg
xchg
stos
subb
dec
xchg
bound
lock
std
dec
shll
cwtl
fisttpll
in
ds
int3
sbb
adc
dec
jbe
cltd
js
clc
jnp
shlb
mov
and
adc
dec
imulb
push
scas
pushf
fidivl
pop
mov
ret
mov
sbb
xor
cmp
or
fldcw
sbb
insl
xor
rcll
adc
mov
add
ss
fsin
cmp
xor
nop
insl
xchg
je
popf
in
rorl
sahf
dec
loop
and
or
js
cmpsb
pusha
jge
jg
in
cmpsl
outsb
dec
push
sub
jmp
dec
aas
scas
aad
ffree
pushf
cltd
and
fisubrl
fs
sarb
push
adc
adc
mov
or
xchg
stos
pop
out
cmp
dec
ror
mov
add
pop
mov
enter
cmpsb
mov
mov
stos
add
jno
leave
xchg
sahf
push
imul
dec
pop
aad
in
add
lock
cmp
idivl
ss
adcl
leave
rol
aas
pop
repz
out
test
xlat
adc
or
push
in
divb
pop
cmp
insb
addr16
push
mov
inc
mov
xor
lret
inc
mov
push
leave
adcl
cmpb
repnz
insl
pop
mov
adc
jnp
mov
xor
out
daa
mov
int3
orb
mov
lret
out
lret
ljmp
js
pop
pop
dec
es
xor
add
cmp
fwait
insb
movsl
cmp
push
test
push
pop
cmp
je
ja
or
fcmovnb
stc
movsb
lds
lds
iret
mov
push
notl
cmp
in
in
lahf
push
iret
jge
mov
and
pop
in
test
iret
std
sub
pop
xor
popa
fst
pop
or
mov
jo
cmpsb
roll
aas
cmp
leave
aas
sub
sub
pop
cmp
lea
movl
bound
out
scas
insb
push
enter
pop
adc
rcrb
insl
xor
ret
cmpsb
mov
and
dec
std
das
sbb
push
cmc
push
jnp
fwait
jecxz
aad
lods
addr16
sbb
mov
and
sahf
aam
xor
jle
pop
adc
loop
add
scas
jb
dec
mov
inc
mov
jmp
push
mov
negb
and
add
cmc
xchg
mov
fsubrs
cltd
stc
jnp
in
stc
rcll
xchg
push
sub
add
sbb
mov
dec
dec
or
cmp
das
mov
xor
xchg
and
pop
jmp
ret
fildl
dec
mov
lahf
lods
sbb
xor
mov
xlat
nop
sti
lock
in
adc
rcll
repz
aad
cmp
inc
aas
orl
cmpsb
pop
jg
pop
sahf
push
jge,pt
aaa
popa
je
cmp
xor
movsb
iret
sahf
std
fdivr
xchg
sbbl
dec
jne
push
mov
das
shll
sbbl
xor
pop
inc
popf
popa
add
add
ret
or
icebp
inc
int3
jno
and
test
mov
loopne
mov
push
push
mov
mov
mov
push
repz
adc
cmpsl
movsb
clc
or
push
cli
fwait
adc
mov
adc
mov
mov
dec
dec
outsl
pop
inc
ljmp
cmp
push
or
jo
fsubrs
stos
test
scas
fiaddl
hlt
jno
loope
cmpsl
js
push
popl
xchg
insb
repnz
lds
ret
and
add
mov
fmull
jno
ss
outsl
mov
mul
out
in
and
push
adc
push
push
dec
fs
test
push
pop
add
enter
mov
imul
fistps
sub
xchg
out
jmp
std
add
stc
gs
sbb
add
xchg
adc
mov
mov
in
sbb
cmpsb
fistpll
mov
or
xor
les
popf
jne
jo
pop
insb
je
test
pop
cmc
into
pop
mov
adc
arpl
orb
jno
xchg
shrb
ret
ja
adc
repz
jecxz
outsb
ja
or
push
das
test
sub
cmpsb
xor
data16
push
jb
or
mov
rorl
shrb
dec
movsl
jl
loopne
dec
jg
ficompl
push
bound
loop
xchg
cs
movsl
or
in
xchg
cmp
out
test
fs
daa
vpaddusb
icebp
js
jg
setnp
xchg
fisubl
out
popa
push
sbb
mov
in
outsl
cs
insl
xorb
xor
je
in
subb
push
popf
sbb
cli
adc
sbb
xor
mov
mov
mull
mov
arpl
pop
inc
cwtl
fistl
loop
lea
inc
inc
mov
jmp
xor
and
iret
push
neg
inc
add
mov
pop
gs
mov
stos
cs
push
jmp
jno
lods
stos
xor
scas
rclb
outsb
dec
adc
adc
sub
stos
xchg
xchg
ds
in
dec
fisubs
sbb
scas
or
xor
xchg
notl
repnz
or
mov
ja
xchg
sbb
in
out
sbbb
loop
data16
jo
add
cmp
bnd
inc
cmp
test
repnz
push
pusha
xchg
hlt
out
mov
jne
ss
push
rep
fldcw
pop
add
scas
pop
cld
test
pop
ss
lods
or
jae
les
cmc
fdivs
loopne
or
sbb
loopne
xchg
outsb
add
inc
push
mov
and
cmp
int3
dec
cmp
jnp
sbb
leave
fnsave
xor
xchg
pop
pop
jle
out
add
enter
cmpsb
in
in
int
shrb
mov
aaa
cmp
or
xchg
lods
mov
and
iret
inc
scas
mov
dec
mov
insl
push
inc
movsb
sub
or
inc
adc
in
jl
aaa
sub
movsl
xchg
jnp
and
and
xlat
outsl
sbb
std
aam
xchg
fsubrp
mov
mov
out
and
pusha
pop
push
or
cwtl
dec
pushf
push
int3
andps
sub
inc
scas
mov
xor
and
out
mov
stc
aas
cwtl
pop
and
sahf
sahf
add
adc
push
mov
ljmp
mov
add
lods
pusha
pop
rcll
jle
add
jge
mov
retw
lahf
sub
dec
lea
jmp
sub
xchg
jg
cmpsb
data16
imul
das
push
addb
ss
xchg
push
lret
aaa
out
or
dec
je
movsl
mov
test
cmpsb
pop
test
inc
mov
cli
mov
add
or
push
jmp
jmp
and
cmpsb
adc
rorb
add
cli
cmpsb
mov
add
xchg
or
cltd
ror
loop
sub
sub
xchg
loope
pop
rcrl
add
arpl
fsubrl
mov
mov
arpl
sub
stc
sbb
xor
adc
sub
cltd
repz
pop
das
mov
pop
in
jmp
xor
push
fmuls
pop
ljmp
xor
adc
cwtl
je
gs
or
movsb
es
out
repz
or
sti
sbb
inc
jecxz
movsb
movsl
jo
mov
push
push
jo
cwtl
and
cmp
jmp
int
and
mov
out
inc
mov
pop
mov
stos
or
xchg
dec
sbbl
iret
add
xor
dec
or
aaa
ret
and
mov
shr
mov
js
sub
rorl
push
int
in
cmpsl
or
sub
movsl
lret
xchg
push
or
iret
mov
mov
xor
mov
std
pop
mov
sbb
mov
movsb
lods
push
cld
adc
call
adcb
dec
clc
out
mov
add
and
xchg
mov
nop
cld
sub
push
adcl
sbb
jmp
mov
subb
js
cli
in
cwtl
outsl
dec
xchg
outsl
and
sub
stc
push
imul
mov
lcall
add
push
cmpsb
sbb
pop
adc
loopne
ret
stc
mov
int
jmp
jb
lret
inc
sub
pop
repnz
pushf
and
push
sti
push
mov
push
ja
xor
push
add
cltd
adc
std
out
fsub
cmp
and
sub
mov
jno
out
inc
popa
or
lret
dec
out
cmp
xor
test
test
add
ret
je
icebp
stos
out
inc
stos
push
inc
pop
jbe
out
pop
hlt
and
xor
sarb
sbb
roll
imul
xor
in
shrb
cltd
into
les
rcl
xor
mov
rcrb
ficomps
nop
leave
sbb
mov
int3
shrl
mov
fsubrs
scas
inc
or
fmull
or
mov
loopne
loope
lds
fwait
pop
cmp
fmul
lods
out
hlt
enter
adc
mov
adc
mov
lcall
je
addr16
sub
bound
inc
mov
imul
xor
and
pop
ret
sahf
jno
ret
add
xor
and
mov
inc
inc
push
pop
push
cld
out
and
ljmp
iret
insb
push
and
vmptrst
add
std
ret
into
mov
sub
pop
cmp
scas
cmp
outsb
fdivr
insb
cmc
jle
dec
jb
adc
aas
add
mov
adc
mov
mov
cmp
rcr
push
pop
pusha
fwait
adc
lods
mov
mov
ss
pop
sub
aad
sub
dec
or
or
cmp
pushf
inc
xor
ja
pusha
push
pusha
mov
adc
push
lahf
add
cwtl
cmpsl
lods
push
xchg
jnp
xor
jp
and
shll
xchg
cmp
cmp
aad
ret
push
push
mov
int3
or
mov
aam
xor
cmp
dec
xchg
or
sub
jb
jmp
or
push
mov
cwtl
jp
and
ja
sbb
sbb
xchg
mov
inc
imul
push
test
push
cmc
add
and
fwait
pop
push
loop
arpl
pushf
lods
in
push
pop
inc
sti
pop
jmp
dec
adc
xchg
gs
icebp
pop
jne
xlat
pop
xchg
mov
pop
in
or
or
movsl
leave
adc
lods
cmpb
movsb
repz
outsb
stos
and
xchg
jb
mov
dec
xchg
xchg
sbb
rol
lea
fs
inc
rorb
out
jp
in
or
outsl
mov
mov
js
mov
addb
into
lods
add
sub
mov
jecxz
dec
adc
inc
jns
mov
dec
xchg
push
sarl
rcrb
or
loopne
jns
mov
dec
pop
xchg
shr
push
and
pop
mov
lods
icebp
mov
jmp
ds
loop
rclb
pop
lock
mov
push
js
sub
lret
xor
ret
mov
mov
push
mov
mov
out
add
xchg
shlb
ds
imul
inc
out
rcll
fsubl
push
sub
or
rorl
inc
leave
mov
mov
js
mov
or
adc
xchg
sti
in
hlt
push
or
pop
pop
icebp
adc
cld
dec
std
clc
arpl
pop
or
mov
lods
add
fisttpll
lcall
pop
es
xchg
pop
fsubrl
cmp
push
jecxz
mov
iret
push
push
jo
or
push
xchg
xorb
fcmovnbe
jns
lock
dec
pop
add
fucomi
and
xchg
jns
rcrl
out
shrl
fldenv
pop
and
jno
stos
xor
dec
push
sub
jne
sahf
out
rorl
movnti
ret
fstps
and
in
jae
pushf
or
add
xor
fldenv
jo
xor
sbb
mov
ret
jl
adc
jmp
ret
jmp
xchg
mov
xchg
push
sahf
pop
pop
mov
sbb
push
adc
ljmp
add
inc
mov
xchg
cmp
mov
clc
jmp
jb
push
cmp
leave
push
js
inc
xor
mov
pushf
out
fldt
mov
mov
xorl
xor
nop
adcb
outsl
or
dec
or
sub
pop
mov
push
add
xchg
out
daa
mov
insb
pop
test
test
jns
xchg
dec
pop
gs
pop
and
js
jno
mov
pushf
push
and
add
inc
fbld
lret
push
fldcw
pop
push
fsubs
fdivp
fisttpll
rcl
cmc
into
lret
xchg
add
sbb
ret
divps
test
out
bound
push
xor
ficoml
movsb
out
imul
mov
jnp
mov
mov
gs
cmc
call
mov
call
bndldx
mov
scas
mov
hlt
sub
mov
mov
lea
repnz
scas
cltd
jb
lock
push
mov
jecxz
lea
cltd
mov
bound
mov
cmp
pop
inc
out
iret
jnp
push
add
shl
xor
inc
popa
fisttpl
mov
jle
push
mov
inc
fcoml
xor
lcall
or
mov
lods
mov
push
mov
xor
sti
andl
in
out
aam
movsb
mov
mov
jecxz
pop
cmpb
lret
scas
insb
xlat
xor
and
popa
enter
mov
mov
xchg
filds
xchg
push
xlat
jno
sbb
std
mov
out
pop
or
idivl
movl
cmpsl
lods
dec
and
lds
inc
mov
lcall
dec
jmp
invd
ret
dec
pusha
ds
inc
sub
add
push
and
leave
pop
sub
inc
mov
into
daa
in
out
ja
popa
mov
jge
pop
xorb
add
inc
or
popa
insl
mov
loope
sti
aaa
mov
xor
mov
mov
push
pop
push
imul
xlat
mov
cmp
mov
fdivrl
nop
fwait
or
mov
ret
mov
aam
jno
arpl
out
inc
into
mov
testb
in
lds
rcrb
push
and
dec
ficoml
lock
mov
inc
ret
cmpsl
jmp
and
add
enter
xchg
mov
out
sbb
out
jp
int
pusha
jno
xchg
std
mov
mov
push
ret
xchg
es
push
leave
lea
inc
push
add
sub
lea
xor
pop
sub
outsl
xor
movsl
ret
mov
push
ds
mov
add
fwait
mov
fs
je
push
lret
adc
inc
mov
lret
cmp
in
lret
lods
sbb
loop
dec
in
lods
mov
hlt
push
pop
mov
adc
lods
sti
arpl
lcall
les
inc
push
pop
xchg
mov
xchg
xchg
dec
or
or
sbb
ja
ds
stos
mov
insl
mov
repnz
jmp
lret
xor
cmovbe
inc
cmp
fldcw
ret
sub
imul
clc
mov
in
push
mov
shrl
rorl
push
ljmp
adc
pop
mov
imul
push
stc
jns
jne
stos
jg
pop
lcall
mov
sub
out
mov
testl
ja
repnz
adc
mov
mov
movsl
outsl
stos
mov
loop
in
xchg
push
popa
sub
xchg
pushf
loope
dec
insb
leave
push
xor
enter
and
aam
popa
xor
icebp
scas
mov
push
and
les
sbb
lahf
sbb
mov
adc
mov
and
shlb
jnp
popf
mov
mov
sbb
xor
pop
xlat
mov
sub
fwait
inc
cmp
mov
pushf
test
cmp
sub
lds
push
push
shr
fbstp
mov
aad
pop
sbb
pop
push
dec
and
xchg
gs
push
out
mov
ret
sub
xor
dec
mov
sub
cmp
jmp
jecxz
xchg
aas
ret
pop
inc
cmp
jnp
out
sbb
mull
nop
xor
add
pop
mov
jp
dec
pop
lret
fildll
out
shl
lea
ret
add
mov
mov
arpl
movsl
add
or
popa
sbb
das
xor
in
ficomps
adc
cwtl
loopne
push
cli
sub
xor
inc
popa
rorb
pop
dec
sbb
sar
shrl
mov
test
sub
mov
or
out
and
dec
push
mov
xchg
or
pop
ja
cmc
mov
sbb
mov
mov
and
xor
call
jns
dec
cmpsl
js
ds
sub
xchg
mov
add
adc
rcrb
cli
mov
sarb
mov
inc
fwait
out
test
pop
lock
filds
ficoms
addr16
addr16
mov
shr
sbb
inc
cwtl
inc
int
fisubrs
pop
rolb
pop
or
outsb
dec
and
icebp
rclb
sbbb
outsb
cmp
imul
cli
sub
inc
cmp
mov
lods
xor
out
or
jge
push
and
out
inc
jo
das
aad
insl
sahf
lahf
cld
in
sbb
pop
push
out
insl
dec
pop
dec
push
mov
out
xchg
push
sub
test
pop
iret
inc
das
inc
push
cmpsb
inc
sub
mov
jl
push
dec
sar
in
jo
lret
add
aas
jbe
and
data16
scas
lods
aad
add
mov
pop
mov
repz
enter
fadds
mov
lahf
addb
cmp
xor
jp
push
dec
xchg
sub
lret
inc
jne
imull
sub
jb
aaa
and
pop
adc
or
jecxz
out
fidivs
jmp
hlt
leave
mov
and
or
stc
into
add
adc
shll
fcompl
xrelease
dec
pop
or
pushl
out
mov
add
dec
lds
mov
or
push
in
lret
jne
js
mov
xchg
and
dec
cmpb
mov
cld
xor
mov
mov
lret
pop
sub
mov
sahf
sub
imul
testb
sar
dec
mov
inc
pop
fwait
daa
jl
pop
outsb
arpl
xor
jae
gs
cli
and
mov
jb
or
sbb
mov
rclb
xor
xor
lea
add
fisubrl
les
lret
inc
xor
cmp
addb
mov
repz
adc
jge
lea
bound
push
hlt
outsl
filds
jp
push
mov
mov
enter
xor
addr16
push
jnp
adc
xchg
push
cmp
outsl
mov
sahf
sbb
cmpsl
add
cmp
pop
std
in
xor
cltd
je
movsb
shr
les
mov
pop
dec
jne
gs
sbb
xlat
cmc
dec
and
fwait
notl
inc
cmpsb
pop
xchg
xchg
into
icebp
mov
add
fwait
aas
in
mov
out
or
pop
idiv
mov
add
pop
leave
push
gs
jecxz
and
push
add
lods
sbb
push
push
inc
test
xchg
mov
int
popa
push
jle
inc
push
or
repz
les
mov
sbb
cmp
mov
jg
xor
addl
mov
jns
fcompl
dec
test
scas
xor
mov
data16
dec
sbb
fimull
xchg
mov
loope
shl
push
inc
mov
mov
sti
mov
lahf
jg
mov
dec
pop
cmp
lret
leave
add
mov
cwtl
adc
jne
movsl
dec
pop
out
inc
mov
in
and
adcl
ljmp
test
cmc
or
push
add
into
imulb
aam
mov
mov
adc
or
dec
mov
out
ret
movsb
insb
pusha
icebp
pop
sbb
jmp
daa
push
mov
insb
push
sbb
or
stc
ret
mov
insl
in
dec
mov
or
dec
repnz
fstpt
jg
cmpsb
lock
push
jmp
and
dec
int3
fcmovnu
inc
lahf
inc
xor
lret
fiadds
dec
out
jp
icebp
and
sub
dec
inc
lds
sub
mov
stos
dec
into
mov
xor
push
lcall
or
lock
jbe
add
adc
pop
and
sub
sbbb
push
mov
int
push
sbb
repz
mov
jno
xor
out
sbb
add
call
jg
cmp
dec
icebp
push
fwait
inc
call
mov
je
je
sti
mov
les
mov
pop
push
arpl
xchg
mov
mov
push
xchg
xor
sbb
adc
inc
and
or
jg
sbb
jmp
pushf
sarb
int
dec
imul
push
sbb
fwait
daa
cli
mull
mov
mov
mov
xorl
or
push
ds
dec
jp
movsb
or
cmp
dec
in
mov
xchg
sub
xadd
dec
js
mov
inc
xchg
dec
test
repnz
adc
sbb
cld
cmp
dec
pop
xlat
push
mov
shrd
adc
mov
ljmp
bswap
adc
lods
mov
test
add
mov
mov
push
nop
jl
fistps
and
hlt
test
loopne
push
adc
inc
jmp
push
aas
mov
mov
mov
jo
add
mov
mov
mov
mov
out
mov
or
mov
or
cmpsb
mov
aas
push
sbb
or
test
rcr
inc
insb
jnp
arpl
sub
push
mov
mov
sbb
jno
and
stos
out
ja
push
jecxz
push
sub
and
mov
cli
aam
insl
fdivrp
test
mov
iret
aaa
push
sti
fs
test
and
mov
popa
xchg
mov
aaa
scas
mov
xorl
int
imul
rol
mov
push
and
cmp
dec
faddl
pushl
cltd
jb
mov
out
leave
xor
fdiv
call
and
fmull
push
push
lods
pop
in
xor
sbb
rclb
mov
sub
cmc
test
jnp
add
lods
mov
jnp
add
imul
dec
xchg
ret
imul
addl
movsb
adc
cmp
scas
add
mov
fists
cmc
or
out
cmpsl
inc
fstpt
push
das
cmpsl
insb
inc
das
mov
jecxz
add
in
das
not
inc
sub
push
lock
lds
lock
fwait
jl
arpl
out
push
xlat
mov
mov
insb
test
fwait
sub
xchg
or
cwtl
pop
test
sbb
enter
pop
mov
mov
sub
insb
jle
jae
inc
mov
in
mov
rol
push
dec
ret
sarl
mov
mov
xchg
lds
test
ror
outsb
mov
inc
movb
lret
mov
arpl
in
mov
dec
fsubrs
test
push
addr16
lcall
jl
popf
es
pop
cmpb
imul
adc
std
and
sbb
dec
adc
arpl
inc
sub
cmpsl
or
mov
mov
push
filds
add
inc
mov
loope
push
pop
push
stos
or
dec
mov
flds
jbe
push
test
mov
movsl
xchg
cli
cmpsl
scas
push
sbb
jmp
dec
mov
test
sbb
rolb
cmpsl
and
loope
jns
outsb
xor
or
sub
sub
cmp
stos
xchg
test
push
push
and
lret
rorb
iret
adc
add
fxch
pop
inc
mov
pop
jg
fdivrl
mov
into
scas
mov
jb
mov
das
pop
imul
jno
sbb
jmp
push
and
sahf
add
cmp
sbb
mov
les
mov
pop
jp
add
adc
les
sbb
das
arpl
mov
mov
xchg
stc
scas
mov
in
inc
js
popa
cmpsl
push
fsubl
cmp
shrb
sub
push
mov
out
je
xchg
fimull
jecxz
nop
or
push
out
icebp
push
fisubs
bound
outsl
pop
fistpl
cwtl
mov
xor
ret
xor
aad
or
ret
jb
orb
adc
in
clc
pop
xchg
fcmovu
xlat
in
test
adc
xor
in
sahf
push
add
add
or
xor
shrb
cmc
sub
test
cmpsl
mov
xor
sbb
jl
stc
cmp
xchg
aam
inc
fistpll
stc
mov
aad
pop
sbb
push
mov
out
cmp
sub
sbb
pushl
mov
fwait
add
xchg
dec
sub
xchg
das
mov
int3
xor
xlat
push
pusha
mov
jp
cltd
push
xor
testl
data16
ret
cmp
sbb
jb
inc
sub
out
lahf
add
arpl
out
fcmovu
mov
test
inc
add
sub
jp
in
scas
or
push
pop
xchg
pop
adc
jns
pop
xlat
xchg
xor
jmp
arpl
clc
and
push
jae
add
jl
mov
cmpsl
psubq
mov
mov
mov
sbb
xor
in
cltd
mov
inc
fildll
mov
ja
aad
leave
add
jbe
das
testb
push
sub
or
xchg
sbb
lcall
cltd
sbb
jne
repz
mov
cmpsb
lahf
inc
sub
cltd
syscall
push
ret
push
cmpsl
inc
addr16
movsb
and
jge
adc
mov
sbb
stos
das
lds
add
cli
jp
mov
pop
mov
cli
inc
sti
push
dec
ja
pop
push
push
jnp
adc
add
sbb
push
add
xchg
pop
negb
pusha
in
imul
jmp
push
add
cmp
push
call
scas
cmp
pushf
pop
nop
popf
mov
nop
mov
stos
out
or
ss
popl
sub
push
sub
add
lods
xchg
jne
fsts
add
in
add
aaa
bound
fcomi
ds
test
pop
push
mov
pop
mov
aaa
push
lret
adc
test
ljmp
ljmp
fs
xor
adc
cmpsl
jne
cmpsb
dec
or
jp
sub
xor
jmp
gs
dec
push
movsl
arpl
jge
shll
xor
jns
out
mov
sub
out
scas
lods
xchg
cmp
mov
loopne
stc
lret
aas
adc
out
dec
shll
movsb
jo
or
push
dec
sub
mov
xor
in
and
movb
std
pushf
outsl
push
dec
mul
jecxz
stos
dec
lahf
std
sbb
scas
pop
aaa
sub
mov
addr16
xor
inc
xchg
lock
dec
hlt
xor
addr16
cmp
push
sub
xchg
mov
ret
bts
cmp
mov
movsb
jecxz
inc
jbe
and
sub
scas
ds
inc
inc
push
cmpsl
sub
cmp
fwait
jl
jle
ja
ja
jle
mov
cwtl
int3
jg
lds
sub
xor
dec
sbb
popa
sbb
jo
mov
dec
nop
cltd
sbb
jo
outsl
mov
xor
cmpb
xor
xchg
fwait
cmp
jge
adc
cmp
popa
xchg
and
call
jne
sbb
mov
stos
dec
jecxz
add
ljmp
xchg
shl
or
cmpb
hlt
rcrb
fidivrs
stos
sahf
ret
sbb
lret
and
jne
mov
xlat
mov
loopne
mov
or
mov
inc
jge
ljmp
popf
inc
repz
inc
jno
dec
mov
lcall
jl
xor
fsubp
xlat
xor
dec
iret
mov
cli
js
pop
hlt
mov
inc
mov
push
pop
push
jmp
shll
cmpsb
push
cltd
les
jnp
adcl
int
lret
rcr
push
pop
imul
xor
cs
mov
orl
push
pop
insb
add
arpl
neg
cmp
sbb
xchg
xchg
out
popf
clc
arpl
fsubrs
jno
cwtl
outsb
mov
ss
test
mov
dec
dec
das
mov
nop
out
mov
and
ud2
cmp
pop
mov
orl
add
sub
gs
add
dec
jg
cmp
mov
and
stos
cmp
in
jecxz
lock
call
andb
test
xchg
movsl
clc
sub
ss
clc
enter
sbb
dec
inc
push
dec
xlat
inc
mov
pop
test
es
fiadds
adc
mov
cli
pop
dec
lret
cmp
jae
sbb
xor
lcall
xchg
xchg
icebp
sahf
adc
imul
xchg
jbe
out
movsb
dec
sar
nop
gs
insl
les
mov
incb
adc
jae
pop
and
gs
and
pop
daa
and
rorl
lea
jl
jg
mov
testl
fidivrl
mov
mov
jecxz
jle
mov
dec
pop
stos
stc
jle
aam
mov
mov
jno
sub
jo
or
jp
in
and
lret
mov
data16
lea
fs
cmp
sbb
dec
xchg
insb
and
pop
adc
xchg
inc
std
lods
lods
pop
xchg
call
or
icebp
jmp
mov
jle
dec
mov
dec
shl
or
data16
push
xchg
xchg
dec
ja
cmp
mov
xchg
gs
xchg
insl
repnz
xchg
dec
popa
scas
mov
jl
jecxz
int3
daa
ret
int
int3
mov
mov
fisubrl
jmp
mov
cli
adc
cli
add
inc
lock
inc
lahf
push
int3
add
fistps
add
loopne
sbb
stos
aad
cmp
dec
adcl
cltd
add
xor
in
mov
jl
pusha
mov
sti
push
shl
xchg
aam
imul
fistpl
les
dec
sti
popa
repz
lahf
cli
inc
nop
ret
mov
jge
jge
movsl
xchg
pushf
push
test
cltd
iret
rcrl
mov
stos
mov
outsl
sbb
or
push
push
inc
stos
add
or
mov
int3
sub
adc
inc
popa
std
es
js
in
xlat
rorb
mov
insb
movsb
ljmp
sub
ss
out
jb
or
test
aas
ret
arpl
mov
rcll
xchg
sub
lea
in
inc
daa
mov
mov
mov
lahf
xor
les
xchg
inc
les
icebp
jle
in
mov
aaa
scas
mov
lea
xchg
sbb
xchg
push
jnp
xor
das
fstps
pop
test
gs
cmp
stos
mov
je
rorl
sub
push
arpl
pop
lock
sbb
push
jg
pop
lahf
mov
filds
mov
jnp
inc
inc
mov
xchg
pop
jbe
rcll
cmpsl
outsl
xchg
iret
and
outsl
iret
je
scas
mov
rolb
sbbb
or
data16
insb
xor
lret
stc
mov
mov
icebp
push
std
sahf
and
fldl
fucompp
out
mov
mov
xchg
pop
insl
adc
imul
lods
lret
je
cmp
add
adc
sbb
lcall
jns
sub
ret
cli
xor
mov
inc
xor
jae
jg
out
ss
cmp
ds
loop
aam
faddl
into
mov
or
mov
jp
sbb
xor
cld
pop
clc
cmp
pop
inc
outsb
pop
sbb
call
xor
ljmp
bt
frstor
repnz
sub
mov
cs
pop
ja
pop
enter
dec
dec
inc
sbb
sbb
mov
pusha
xor
je
fcomi
adc
push
inc
add
sbb
sbb
arpl
cmpsb
ljmp
lds
push
in
xchg
push
prefetch
sub
imul
pop
call
cmp
gs
xor
mov
es
add
loopne
jnp
sub
mov
lret
pop
lcall
and
in
mov
pop
insl
aad
loopne
shrl
pusha
inc
inc
or
movsb
mov
int3
sub
mov
or
pop
aad
in
cmp
jle
sbb
dec
jo
frstor
pop
push
add
les
lock
cmp
fs
call
or
pop
ret
add
cmp
add
repnz
mov
pop
std
mov
inc
cmp
inc
nop
adc
inc
adc
add
fprem
dec
frstor
or
popf
cltd
jmp
pop
or
lods
fcomip
pop
test
push
mov
jmp
xor
cmp
mov
xor
ja
int3
int
inc
xchg
les
stos
push
dec
stos
add
mov
repz
and
mov
cwtl
cwtl
sub
xor
cmp
cwtl
mov
loope
push
mov
pop
add
fdivs
xchg
dec
mov
fwait
repnz
in
mov
dec
jmp
ret
loop
push
mov
cmpsl
mov
cmp
mov
or
ja
out
dec
ds
cmpb
lret
add
add
xor
xchg
les
sbb
mov
and
inc
clc
dec
out
xor
sbb
in
add
cmp
jmp
sbb
lcall
cmpsb
jl
aad
xchg
fstpt
cld
push
daa
sbb
mov
lods
lods
std
jo
or
lods
les
insb
inc
pop
lahf
stos
dec
cmp
inc
sub
push
pop
sub
stos
repz
notl
in
jecxz
mov
dec
ljmp
mov
mov
pop
cmp
frstor
mov
fnstsw
enter
in
sbb
push
pop
icebp
inc
loop
sub
divl
fisttps
iret
les
xchg
xchg
jnp
inc
and
mov
jb
xorl
subb
jmp
in
xor
movsl
mov
repnz
cmpsb
cltd
jnp
sub
clc
sub
mov
jb
dec
filds
mov
mov
inc
inc
loop
dec
out
mov
xchg
std
imul
mov
loope
test
pop
push
dec
je
stos
gs
rcrb
sub
pop
ret
cmp
aad
jecxz
sub
jne
ficomps
ss
push
subl
pop
test
lods
or
enter
inc
cmp
scas
cwtl
or
pop
subb
inc
inc
dec
repz
movsl
inc
cld
add
xchg
lahf
ss
addb
lcall
and
cmp
dec
fdivrp
cld
lahf
inc
pushfw
mov
mov
mov
jne
pop
stos
cs
sahf
loopne
nop
jle
inc
mov
mov
jbe
jbe
jg
adc
mov
test
mov
mov
pop
xchg
stc
es
add
call
and
in
or
xor
cmp
in
sbb
out
push
cmp
xchg
imulb
movl
data16
mov
insb
sbbl
mov
int3
dec
cmovbe
out
shrb
out
shrl
mov
mov
js
pop
mov
aad
inc
cwtl
fstl
xchg
daa
test
mov
cmp
xchg
insb
lcall
mov
aaa
pop
xor
sub
dec
cmpsb
imul
jae
pushf
push
mov
add
push
out
mov
sbb
jb
mov
dec
xchg
in
fdivrp
lock
mov
xor
repnz
out
test
hlt
ret
gs
iret
mov
outsb
add
cmp
int
mov
lods
shlb
lods
lahf
nop
add
push
jge
out
lds
lock
cs
in
sub
lods
fstl
mov
imul
mov
add
adc
shrb
lcall
sti
dec
data16
gs
xchg
adc
into
inc
ret
aam
pop
push
mov
cs
in
pop
and
mov
es
cmp
scas
dec
cmp
fdivrp
xchg
js
push
add
js
jno
xchg
and
mov
adc
gs
mov
cmp
pop
jmp
movsb
jg
subb
pushf
mov
add
fisubrl
mov
cli
dec
in
sub
ret
inc
fistl
in
push
inc
stos
call
popf
or
or
pop
mov
leave
jne
push
mov
jmp
stc
call
repnz
push
xchg
movsb
sub
dec
js
repnz
outsb
int
pop
or
cmp
imul
add
adc
pop
les
lahf
mov
xlat
dec
lds
fdivrl
xchg
push
clc
test
jl
jno
lea
pusha
mov
stos
xor
jno
pop
add
dec
loop
mov
inc
fsubp
mov
and
das
jo
stos
in
mov
add
xchg
or
cmpsb
xor
imul
dec
ret
and
push
cmp
pop
pop
inc
cs
mov
adc
mov
mov
dec
dec
ret
cmpsl
leave
push
fistpl
mov
lods
clc
mov
add
push
pop
sahf
sbb
mov
addl
aam
add
js
bound
push
les
dec
inc
jne
cwtl
lock
mov
movsb
push
ret
dec
test
notb
jecxz
xchg
dec
fistl
rorb
cmp
scas
inc
add
loope
pop
adc
cmp
cs
rcll
xchg
out
sub
das
or
cld
push
lret
jle
push
in
dec
daa
push
inc
fcomps
imul
sub
mov
push
lods
loope
mov
cli
mov
movsb
imul
loop
lock
sbb
sti
fmulp
jecxz
mov
imul
push
outsb
jno
daa
or
stos
and
into
push
pop
dec
mov
scas
je
nop
int3
mov
leave
repz
inc
xor
ror
mov
inc
mov
inc
scas
jbe
or
lcall
int3
xchg
idivb
icebp
and
or
cmp
jns
sahf
repnz
cmp
jge
in
jp
clc
cltd
fistps
ds
loop
mov
mov
push
mov
in
mov
jl
imul
dec
rclb
cmp
and
xchg
ret
sub
lret
and
cltd
and
test
push
mov
and
mov
mov
int3
not
arpl
jb
fsubr
sbb
scas
aas
xchg
popf
push
jge
pusha
das
inc
gs
dec
mov
sub
mov
outsl
jae
xchg
cmp
cld
push
repnz
outsl
les
mov
dec
int3
scas
xor
push
cmp
adc
rolb
inc
sbb
or
daa
call
std
cmc
int
sub
xchg
ja
mov
popf
or
pop
rcll
pop
testl
sbb
push
push
outsl
pop
rorb
std
jno
ret
cmp
leave
clc
hlt
or
out
icebp
inc
jg
dec
jb
jle
ret
pop
incl
addr16
or
ret
test
add
sbb
cli
pop
imul
lock
cld
sub
cli
cmp
out
shlb
cmp
sub
jge
addr16
rolb
adc
or
nop
push
pop
jp
out
cmp
push
dec
dec
xchg
lahf
out
fldl
mov
icebp
fsubs
cmpsl
and
out
shrl
mov
jle
inc
repnz
ret
ljmp
das
imul
dec
gs
loope
test
mov
jno
and
clc
sbb
pop
push
stos
fcmovne
xchg
or
fcmovnb
or
test
push
mov
or
insb
adc
jne
fstl
popa
mov
xchg
mov
sbb
cmp
cld
or
mov
js
push
std
pushf
jno
push
xlat
or
mov
dec
sbb
test
loopne
push
pop
jp
dec
mov
decb
dec
xchg
push
popf
push
gs
jmp
cltd
loop
pop
mov
push
xchg
and
pop
stos
lods
sbb
cmp
and
inc
pop
lea
or
lcall
inc
mov
int3
cmp
pop
or
ja
push
sbbb
sub
push
or
cmc
lock
mov
popa
xlat
and
dec
adc
clc
xlat
and
lock
cli
pop
insl
mov
inc
push
in
stc
inc
mov
std
push
mov
fnstenv
or
out
sbb
mov
and
pop
psllw
mov
pop
int3
fcomp
push
mov
xor
and
nop
dec
out
sub
out
shlb
inc
add
pushf
pop
push
ss
and
push
mov
and
dec
outsb
ja
push
bound
shrb
fyl2xp1
sbb
iret
push
cmc
jg
add
mov
mov
cmp
dec
sub
loopne
es
push
pop
push
mov
sbb
add
iret
leave
stc
int
jbe
pop
push
ret
cli
ret
adc
insl
jno
xchg
jae
inc
lods
xor
insb
jge
stos
push
dec
mov
mov
cmp
icebp
lods
ret
xor
popa
sbb
push
orl
xchg
add
rol
sbb
jmp
xchg
sub
sarb
mov
or
add
xor
dec
jmp
cmpl
or
jp
add
stos
push
cltd
std
out
mov
mov
pop
leave
mov
xchg
xor
pusha
mov
xlat
call
mov
add
int3
lahf
adc
fldl
jnp
rcr
mov
sbb
mov
sub
mov
sbb
cmp
aas
scas
jns
cmp
popf
pusha
test
cmpsb
cmpsl
and
cli
andl
pop
mov
xchg
popf
int3
or
cmpsb
sti
cltd
mov
ret
pop
adc
repnz
mov
subb
jb
dec
fsubrp
test
shl
pop
xor
inc
jns
cmpsb
xor
leave
pusha
in
dec
int
aad
outsl
push
enter
adc
dec
out
push
fidivrl
xor
sub
ds
mov
iret
scas
or
xlat
rclb
stc
lahf
lea
es
cltd
lea
pop
shl
lods
adc
cli
sar
pop
sbb
bound
test
adcb
cmp
lar
ret
pop
mov
fiadds
icebp
fpatan
push
pop
push
mov
fcompl
dec
cmp
cmp
mov
repnz
shll
push
adc
std
jne
pop
repnz
pop
lock
add
push
mov
popa
and
cmp
stc
cmp
test
cli
mov
mov
movsl
pusha
xchg
fidivrl
or
js
nop
addr16
pop
inc
mov
xor
bound
or
fisttpll
sbb
xlat
popf
add
jmp
loop
cmp
sbb
xor
lods
call
add
in
imul
ret
cmp
stos
mov
inc
ds
push
add
mov
push
pop
push
cmpsl
sbb
cmp
adc
fcoms
test
add
ret
pop
mov
xor
xchg
mov
pop
cmp
inc
bound
or
or
push
mov
mov
fmuls
jae
lahf
or
cmp
cmp
jns
mov
pop
push
xchg
inc
add
push
dec
jl
dec
je
je
push
movsb
daa
adc
cmp
mov
mov
out
xor
arpl
inc
jo
out
and
rorl
and
xor
adc
xchg
enter
lret
xchg
mov
hlt
mov
imul
addr16
pop
outsl
mov
imul
hlt
mov
lea
clc
push
jae
mov
repz
mov
or
cmc
lods
gs
push
insb
xchg
and
pop
adc
loop
addr16
fwait
inc
mov
loopne
test
popf
je
xor
inc
xlat
xchg
lcall
add
pop
push
cmp
sbb
inc
mov
or
pusha
idiv
movsb
sahf
nop
aas
nop
inc
pop
in
lret
adc
cmp
out
sbb
xchg
icebp
out
ljmp
dec
aad
and
loop
xor
xchg
push
dec
mov
lahf
fldt
mov
test
xor
xchg
jl
imul
addl
mov
cmc
cmp
push
jne
out
push
jae
std
sbb
leave
push
outsl
mov
add
sub
aaa
faddl
and
movb
mov
stc
pop
jge
jecxz
fldcw
pop
rol
mov
or
addr16
je
into
inc
ljmp
addr16
xor
dec
mov
xor
jle
mov
call
push
ss
int3
push
adc
fcoms
fisttpl
sbb
pop
enter
icebp
test
loope
jl
dec
imul
pop
aam
jmp
xor
cmpsl
push
iret
movsb
pop
cmp
scas
or
mov
je
cli
mov
test
mov
jecxz
sub
imul
stos
ror
repz
insb
sbb
shl
mov
mov
mov
pop
dec
add
call
sub
dec
cltd
stos
das
xor
test
sti
test
inc
xor
lahf
push
sbb
pop
sub
lods
push
jp
bnd
mov
or
pop
loop
push
fbstp
arpl
adc
jnp
pop
hlt
test
push
add
sub
mov
mov
popf
movsb
lods
adc
mov
jae
add
inc
xchg
scas
js
mov
ret
sbb
adc
jo
adc
lds
push
mov
cmp
mov
mov
fldl
lret
fs
addl
movsb
jecxz
lods
ljmp
std
xor
mov
mov
ja
jmp
nop
xorl
mov
aaa
xor
aam
clc
xlat
test
jle
movsl
pop
scas
pop
cmp
mov
mov
xchg
mov
dec
fsqrt
icebp
pusha
mov
dec
data16
mov
test
or
ja
xchg
or
inc
icebp
mov
xchg
stos
movsb
push
jo
cmp
ds
xor
and
jle
pop
inc
out
jae
push
insb
sarl
cli
jnp
rorb
push
inc
push
lahf
je
imul
int
or
lret
out
clc
mov
pop
in
clc
cltd
sti
cli
or
lcall
cmp
xor
mov
icebp
ja
sahf
ret
xor
push
cmp
or
int3
ret
adc
cmp
shlb
adc
dec
xor
je
pop
out
fcmovne
adc
mov
rorl
and
inc
or
iret
or
pop
test
pop
cmp
pop
inc
int
test
sbbl
adc
ds
icebp
arpl
sub
aas
cmpsl
jge
adc
movlps
ret
popa
test
or
js
ja
mov
testb
sbb
test
inc
jg
adc
push
inc
sub
pop
and
pushf
test
into
inc
xor
push
loopne
mov
push
js
xor
cwtl
imul
jp
and
push
cmp
mov
sub
movsl
xchg
and
fnstcw
dec
movsb
or
xchg
xor
jns
movsb
or
xor
cmp
sub
fscale
cld
sub
scas
dec
pop
jecxz
ss
test
adc
sbbl
adc
mov
fwait
jl
ds
pop
call
jbe
enter
lcall
cmp
mov
inc
cmpsb
ret
addl
add
or
imul
shll
test
lds
push
mov
in
and
cmp
push
lret
mov
test
xlat
jae
xor
sbb
out
fbld
sbb
addr16
bound
jp
push
lock
push
inc
aaa
xchg
movsl
out
cs
inc
push
hlt
adc
popa
int3
jbe
xchg
insb
fwait
mov
and
xor
jmp
out
mov
xchg
test
add
mov
mov
push
cmc
pop
add
xchg
je
add
movntps
pop
xchg
push
pop
jl
add
cwtl
add
pop
mov
dec
inc
scas
jb
mov
inc
inc
out
imul
fistpll
inc
out
aad
jmp
lahf
icebp
int
jb
jmp
or
or
vmulps
adc
bound
flds
inc
icebp
jae
jmp
cmp
arpl
jmp
pop
sahf
xchg
xchg
addl
cmp
sbb
or
xchg
shll
in
sub
rcl
jecxz
inc
je
ja
scas
jbe
fists
xchg
cmp
sub
lcall
add
movl
daa
mov
adc
daa
add
xchg
fldcw
in
dec
loopne
inc
clc
ss
pop
pop
ficomps
ror
mov
push
xchg
aad
fs
mov
dec
jl
les
cld
mov
jp
in
lahf
cmpsl
movsl
jmp
sar
ficoms
ja
ja
ret
test
cmp
std
sbb
xor
xchg
inc
sub
and
pop
mov
jo
loopne
iret
and
gs
xor
incb
xchg
insb
push
call
adc
pop
ja
sbb
shlb
mov
lret
xor
sti
out
in
stos
insl
mov
or
and
and
pmaxsw
stc
jbe,pn
jne
xchg
rolb
aas
mov
jne
lock
mov
pop
sbb
das
jo
mov
jo
xor
negl
movsl
negb
cmp
insb
adc
inc
lock
sbb
cltd
loopne
rol
cmpl
cs
outsb
xlat
jmp
imul
pusha
lea
xor
ret
insl
pop
push
mov
pop
in
dec
shrl
mov
pop
pop
xor
bound
lea
sub
jns
in
xor
aad
rorb
inc
add
lahf
cmpb
pop
in
pop
int
add
inc
jge
mov
push
mov
repnz
cmp
pop
lods
in
pop
inc
es
jne
popw
xlat
xchg
push
ret
xchg
and
cli
xchg
pop
inc
pop
outsb
add
add
jp
pop
ja
fnsave
xchg
sub
test
jbe
mov
xchg
or
dec
shll
jns
jl
idiv
sub
fstps
sbb
and
stos
fadds
jae
pushf
dec
xchg
into
pop
popf
out
jl
out
jl
cmp
fsub
outsb
sbb
imul
sbb
dec
add
pop
lds
dec
scas
fdiv
xchg
mov
sbb
cmpsb
and
xor
ljmp
add
mov
data16
xchg
mov
fistpll
cmp
mov
sub
std
test
repz
mov
das
push
nop
inc
xchg
pop
mov
dec
or
inc
cmp
sbb
out
cmpsb
mov
mov
xor
or
into
and
fimuls
push
adc
out
outsl
sbb
and
mov
addr16
js
inc
notb
pop
mov
cmp
push
or
sbb
push
stos
mov
call
lock
icebp
data16
test
or
push
jo
in
dec
sbb
test
aaa
outsb
rclb
push
sahf
adc
xchg
or
mov
sub
push
sbb
mov
icebp
cmpsb
test
sti
bound
sub
sub
jge
pop
fs
nop
scas
jb
push
sbb
cmpxchg
repz
es
inc
dec
pop
jbe
mov
cmpb
icebp
adcb
sub
mov
out
and
addl
sahf
out
int3
mov
scas
int
mov
mov
add
push
pushf
cmp
mov
adcb
pop
and
inc
jmp
call
in
das
jg
inc
inc
scas
test
cmpsb
push
test
and
xchg
sub
es
and
outsl
sbb
outsb
pop
and
lea
cmp
push
push
inc
movsl
test
loope
sub
xor
inc
xor
fs
push
popl
cmp
inc
addr16
xor
inc
jne
cmp
push
xchg
adc
sub
jle
int3
sub
loopne
int3
rorl
pop
cmpsl
scas
sub
dec
fbstp
xchg
or
out
sub
jecxz
and
pushf
cmp
inc
push
scas
call
jle
lcall
sub
dec
pop
or
es
pop
mov
jmp
fistl
lods
add
cwtl
cli
pop
pop
xorl
and
and
sub
mov
in
add
je
pop
pop
cld
adcb
pop
xchg
sbb
push
shll
pusha
div
push
test
rcrb
pop
xabort
cmp
lods
pop
sbb
in
sbb
icebp
or
shlb
nop
int3
sub
popf
xchg
aam
xor
mov
sub
test
sub
jle
push
inc
cmpsb
mov
cwtl
lock
add
xor
cwtl
xchg
mov
push
popa
ss
rorl
in
std
jmp
or
and
movsb
or
pop
cmp
sub
faddl
xor
int3
mov
or
jne
xchg
enter
lods
cmc
and
int3
xlat
cld
or
mov
and
lods
iret
arpl
jb
mov
gs
and
pop
mov
xchg
cmp
push
lret
rcll
jmp
push
mov
pop
stos
pop
stos
cmp
rclb
ja
inc
scas
mov
cltd
adc
jns
leave
xor
out
pop
inc
sbb
pop
mov
adc
shlb
mov
scas
cmp
push
outsb
test
jge
jmp
or
xor
inc
insl
repnz
scas
in
sbb
loopne
push
push
pop
or
dec
loope
jnp,pt
ret
mov
jle
cs
in
add
idivb
adc
xchg
and
and
xor
fwait
fs
sbb
nop
xor
xchg
dec
mov
mov
rolb
cmp
jo
mov
add
imull
dec
xchg
pop
jle
lahf
loope
cmp
roll
inc
gs
add
in
nop
lret
fstl
or
test
or
mov
rolb
mov
push
in
xchg
jp
out
dec
adc
add
or
cld
xor
out
clc
and
shrl
and
pop
out
enter
pop
pop
push
loope
mov
sti
call
fists
ja
icebp
jecxz
inc
jb
mov
xchg
enter
imul
sub
pop
or
mov
jmp
push
cwtl
mov
or
xchg
xchg
sub
inc
mov
popa
sub
or
fsts
ss
insl
xor
test
xor
imul
or
cmpsl
jmp
repnz
fldt
out
repnz
add
push
xchg
xor
xor
imul
and
or
dec
stos
dec
jne
sbb
xchg
outsl
cs
sahf
xchg
rolb
fbstp
adc
mov
jno
out
ja
xlat
lahf
shlb
cli
mov
icebp
sub
dec
xor
cli
shl
push
divl
push
lods
inc
dec
stos
lock
jne
mov
mov
ljmp
repz
mov
pusha
lea
sub
sbbl
push
cs
jl
cli
fisttpll
jnp
jno
fldl
pop
sti
outsl
ja
lret
flds
fnstcw
enter
push
and
daa
push
sbb
shrl
pusha
cmp
jnp
push
push
int3
aam
cmp
dec
xor
popa
imul
ret
clc
xor
dec
pop
int3
mov
mov
add
mov
dec
sti
cmpsl
lret
mov
sbb
negb
loop
in
insb
mov
mov
loop
daa
xchg
sub
jle
sbb
xchg
negb
inc
jae
mov
popf
ss
subb
add
test
cmp
mov
cmp
sub
cmp
or
xchg
sbb
push
mov
add
rclb
push
ret
out
mov
cld
xchg
inc
aaa
mov
in
adc
hlt
mov
xchg
inc
cmp
sub
movsl
pop
mov
sets
dec
cld
sbbb
mov
ret
inc
pushl
out
mov
and
inc
xor
adc
push
icebp
jmp
test
dec
mov
daa
add
xchg
out
test
loope
dec
pop
sbb
stc
dec
push
pop
aas
test
cmp
cld
cmp
xchg
in
jmp
sub
add
idiv
mov
ret
cli
popf
mov
lds
jp
xchg
mov
xchg
xchg
jnp
test
adc
addr16
lahf
loopne
push
lea
in
ds
cmp
aam
pop
rorb
dec
std
sbb
pusha
adc
pop
jnp
adc
div
ret
popf
mov
mov
rorb
dec
into
push
rol
cmp
ret
xchg
out
xchg
sbb
mov
arpl
inc
xchg
sbb
mov
xchg
xor
ret
mov
call
pop
sub
xchg
add
out
dec
insl
pusha
xlat
dec
xchg
xchg
dec
jp
rcrb
push
aaa
push
mov
ret
inc
xchg
jge
dec
popa
xchg
dec
andb
jg
and
mov
mov
aam
fadds
add
and
add
pop
or
das
jne
push
or
ljmp
cmp
aaa
xor
cmp
sbb
testb
push
sahf
cmp
mov
dec
scas
mov
cmp
leave
pop
movsb
push
xorb
mov
mov
mov
and
pop
xchg
ljmp
sub
cwtl
sub
mov
cmp
test
aaa
xchg
push
and
popa
rorb
cmp
and
mov
cmp
fadd
adc
clc
mov
les
xchg
xchg
push
cmp
push
lea
mov
std
sbb
xchg
pop
bound
icebp
loop
mov
mov
std
aam
addb
daa
in
jne
xchg
ret
test
test
push
cmpsb
aaa
repnz
jecxz
and
inc
outsb
cmpsb
pop
int3
inc
scas
rorl
push
push
pop
add
mov
xlat
xchg
pop
test
fcompp
repnz
data16
or
addr16
nop
jg
jg
add
fwait
jp
and
adc
adc
push
cs
and
fisubrs
push
mov
in
out
outsl
cld
jl
adcb
es
or
pop
mov
cli
pop
pop
jmp
fs
mov
das
movl
lret
inc
inc
int
roll
jnp
lds
mov
ljmp
sbb
ljmp
dec
xor
sbb
outsl
popa
adc
les
inc
jmp
cmp
mov
dec
lret
into
setb
shlb
ret
cltd
test
or
jecxz
lea
or
pushf
fsubrs
smsw
bound
imul
jbe
sti
adc
les
loopew
stos
jge
dec
mov
mov
push
jmp
cmpsl
inc
or
mov
sbb
inc
sbb
aad
dec
cmp
adc
adc
scas
add
aad
pop
ljmp
das
fyl2x
mov
cmp
push
and
add
testb
es
pushf
test
cmp
jno
sbb
cmp
fnstcw
nop
sbb
nop
or
push
insb
leave
pop
cmp
pop
stc
mov
jecxz
adc
lahf
push
cli
movl
inc
jbe
adc
xchg
mov
xchg
add
pop
fbstp
dec
out
fldenv
iret
pop
xlat
rorb
pop
and
leave
ljmp
adc
xchg
dec
ret
pextrw
xchg
sub
mov
pop
inc
daa
cmp
push
pop
movsb
and
xlat
or
cli
lret
xchg
mov
clc
jge
test
cmc
mov
xor
or
arpl
bound
xor
std
call
pop
ds
jecxz
mov
jle
pop
int3
push
setp
push
arpl
pusha
xchg
sub
jmp
in
xor
xor
es
ds
push
aaa
call
fdivrs
arpl
loop
push
cmp
and
push
into
int
in
out
fwait
movsl
ds
cmp
lcall
mov
sub
jo
or
addr16
fstps
fcompl
fisttpll
pop
xchg
jle
mov
cltd
arpl
test
mov
in
xlat
call
cltd
mov
lret
add
aad
push
push
jmp
les
pusha
leave
into
inc
enter
jp
sbb
jmp
call
adc
addr16
xlat
mov
clc
test
xlat
into
xchg
dec
in
sub
and
jb
xchg
testb
mov
jae
decb
jmp
nop
leave
cmc
gs
xor
out
pushf
sahf
sub
add
in
div
ljmp
sbb
or
fs
adc
jns
pop
in
mov
fadds
inc
cmp
outsl
jle
xor
xchg
inc
or
fldl
movsl
xlat
jns,pn
rcrb
jne
xchg
shrb
and
je
jge
cwtl
js
lods
mov
sub
enter
cli
and
xchg
push
xchg
stos
les
jbe
rol
shll
and
cwtl
cmp
cs
mov
aad
xor
mov
in
sbb
jg
outsb
adc
fcmovbe
push
adc
daa
pop
pop
sub
add
mov
inc
movb
xchg
pop
sub
or
mov
shrl
jns
xor
inc
pop
dec
je
or
dec
xchg
xchg
cmp
popf
cwtl
xor
fwait
vpshlb
push
mov
add
fiaddl
arpl
pop
ret
xorb
lock
imul
aaa
xchg
scas
js
jne
imulb
jl
addr16
xor
mov
test
lret
mov
scas
ds
lret
popa
ds
xchg
sti
lret
lahf
adc
outsl
icebp
cmpsl
aas
xchg
sub
loopne
add
xchg
sbb
and
mov
out
add
fwait
hlt
aad
inc
and
push
incb
adc
cmpsb
dec
jne
sbbl
stos
mov
jle
xchg
fimull
scas
mov
cmpsl
lods
xor
and
cwtl
inc
mov
lahf
test
rcl
push
mov
or
push
imulb
pushf
lahf
and
test
imul
ss
fstl
sti
je
imul
jp
dec
clc
dec
inc
or
stos
call
add
loope
push
sti
outsl
pop
lods
pop
push
or
iret
cmpsb
mov
push
div
xor
xchg
test
inc
push
imul
adc
pop
das
sbb
test
and
mov
or
sub
mov
dec
je
ret
sub
push
mov
mov
je
jmp
bound
jg
ja
add
cmp
cli
test
add
sti
ret
dec
add
pop
mov
mov
andl
dec
sub
fistpl
or
xchg
repz
jb
push
ds
cmp
stos
mov
mov
add
es
sub
das
inc
jl
xchg
inc
cltd
cmp
push
or
fists
pop
cmpsb
or
lods
sbb
add
push
sbb
push
cmp
pop
ret
pusha
or
push
jns
faddl
cmpsw
jle
mov
push
stc
push
repnz
xchg
push
roll
push
and
test
loop
aas
mov
add
jecxz
or
repnz
lret
jne
in
dec
jmp
cbtw
xor
fsubs
mov
insl
fldt
mov
push
and
pop
and
sbb
cwtl
data16
cmc
jecxz
sar
lretw
fcmovnbe
stc
in
js
inc
test
cmpsl
leave
add
mov
jbe
je
les
jns
sub
sub
mov
fistpl
dec
bound
cli
adc
jp
xor
ret
aam
cmp
cmp
adc
pop
shr
pop
pusha
mov
add
nop
testl
mov
frstor
push
cmpsl
repz
and
xchg
xor
jo
or
pop
adc
lcall
xor
xchg
lods
rcll
js
adc
cmp
adc
arpl
cmp
mov
inc
add
xor
popf
sub
and
mov
fisttpl
loop
xchg
les
mov
mov
jae
iret
xor
mov
jbe
fcomps
movsb
mov
jae
xor
lock
xorl
add
mov
test
imull
lods
cmp
arpl
mov
cmpsb
rorl
sbb
mov
stos
add
dec
sub
subl
jge
daa
jmp
pop
adc
or
enter
jmp
popf
sbb
cmp
xor
inc
jno
ret
nop
push
iret
add
out
jo
out
lods
movsb
xchg
cmpsl
mov
jae
jecxz
inc
js
jmp
pop
adc
push
mov
mov
jle
mov
mov
popl
jle
out
add
clc
sub
sbb
sbbb
push
cmp
test
push
loopne
adc
jl
iret
add
xlat
test
mov
mov
mov
mov
repz
mov
push
lods
add
nop
mov
mov
sbb
in
mov
jns
mov
dec
xchg
mov
mov
jmp
cltd
mov
inc
sub
sahf
mov
shrb
xor
inc
and
mov
aas
lret
cmp
push
dec
jno
int3
jnp
mov
sub
or
cmp
xchg
dec
mov
in
or
or
jle
mov
jmp
or
inc
data16
push
ja
pandn
js
shrl
arpl
and
std
pop
add
mov
pusha
add
inc
sub
add
cltd
lret
fistl
pop
or
sbb
jb
sbbl
xor
cmpsb
mov
sahf
clc
std
xchg
inc
or
push
xchg
scas
jge
in
and
sbb
inc
das
mov
aad
pop
push
cwtl
sub
push
cmovns
into
xor
xbegin
fdivs
adc
push
sub
push
pop
inc
imul
in
pop
movsl
cwtl
andb
icebp
lock
xchg
jmp
movsb
or
sbb
jl
cwtl
sbb
mov
pop
jo
jb
sub
inc
iret
dec
test
cli
arpl
xchg
mov
or
dec
arpl
add
xchg
pop
inc
mov
pop
and
lcall
dec
test
cmpsl
push
lock
ror
jle
ss
xor
mov
dec
daa
jb
nop
ret
mov
push
cwtl
pop
mov
aad
into
add
mov
push
loop
xchg
aas
pop
inc
cmp
lahf
xchg
xor
push
inc
fimull
lcall
popa
js
or
and
vcvttpd2dqy
push
xor
pop
push
dec
rol
sbb
pop
ja
sarb
repz
cmp
xchg
mov
inc
mov
xor
inc
mov
bound
sub
enter
aam
cmpsl
push
cmp
rolb
pop
cltd
test
popf
ja
das
adc
push
test
imul
xchg
add
jmp
fsubp
leave
movsl
sub
ja
fdivr
rcl
mov
adc
cmpsl
adc
add
das
xchg
out
push
jg
in
pop
pushf
fildll
lret
sbb
xor
orb
mov
das
loopne
jnp
mov
fisubrl
lods
stc
inc
iret
les
sarb
iret
hlt
aas
pusha
shll
pop
cmp
sub
lods
in
fcmovne
ficomps
pop
dec
mov
pop
mov
stos
ud1
xchg
inc
or
lahf
lods
js
sub
arpl
jno
push
fisttps
mov
testb
and
add
sbb
pop
mov
xchg
shll
mov
sti
jmp
mov
in
pop
testl
in
inc
and
adc
sub
popf
pusha
arpl
mov
inc
or
sbb
pop
push
lcall
ljmp
leave
sub
adc
sarl
and
outsl
pop
xor
stos
inc
and
and
cs
leave
jo
fs
xor
xchg
pushf
es
rcll
jmp
lods
fstpt
stos
popf
shlw
into
mov
into
sti
rorb
cmc
xor
xchg
daa
lret
sti
cwtl
jp
in
cmc
data16
sub
mov
imul
scas
in
adc
test
subb
mov
mov
mov
outsb
mov
jl
dec
mov
pop
jne
mov
int3
cwtl
lock
mov
lret
ds
call
mov
rorb
mov
xchg
mov
es
repnz
loop
mov
fadds
sahf
sbb
mov
icebp
iret
xor
flds
add
fadd
out
push
insl
or
popa
pop
fsts
sbb
xorb
mov
or
inc
push
cmpsl
bound
nop
push
cld
mov
mov
sub
ljmp
stos
add
sbb
pop
ss
movsl
loope
aas
fstl
jp
xchg
dec
insl
mov
mov
ljmp
dec
insl
adc
pop
inc
testb
jge
gs
mov
jg
loope
fcoml
hlt
icebp
loope
mov
or
sub
loopne
cwtl
pop
sbb
std
movsb
dec
pushf
fnstcw
push
sub
insl
scas
cmpsl
pop
xor
or
lock
mov
mov
cmpsb
sub
mov
stos
inc
push
inc
and
xchg
jne
inc
sub
jle
sub
mov
adc
loopne
popl
rcrl
xor
cmc
xor
push
inc
adc
add
push
movsl
cmp
aas
jge
push
loop
stos
nop
add
mov
sbb
dec
ja
sbb
in
lock
mov
xchg
xchg
es
xchg
arpl
xor
repz
pop
insb
dec
cmc
cmpsb
lods
std
fcmovnbe
leave
jne
xchg
loop
hlt
lret
mov
push
mov
ds
bound
enter
xlat
pop
in
pop
decl
mov
pop
sbb
out
loopne
lret
test
add
pop
test
push
idivb
jno
leave
mov
es
std
repnz
inc
pop
decl
push
ja
mov
pop
cmp
mov
in
jle
cmp
sar
inc
mov
cld
xchg
or
addr16
enter
je
xor
jp
out
lods
pop
gs
and
and
repz
mov
lcall
movsb
ljmp
jmp
aad
pop
dec
xor
loope
test
fcmovnbe
dec
mov
stc
addb
jbe
jg
repnz
fs
push
push
push
imul
out
aaa
and
data16
sbb
jecxz
pop
fiaddl
dec
inc
frstor
or
ret
mull
into
out
dec
push
inc
mov
sub
sub
xchg
outsl
push
shlb
mov
cmpsl
rcr
popa
nop
inc
sub
xor
dec
mov
pusha
stc
push
jo
push
enter
std
cmp
fidivrl
or
shrl
xor
repnz
push
dec
je
sub
out
pop
mov
mov
cmp
lds
outsl
icebp
mov
jb
mov
loop
cmp
mov
dec
pop
popf
lods
xlat
adc
inc
js
scas
add
lods
inc
out
std
pop
mov
daa
dec
popf
rol
add
xchg
inc
lods
fldt
dec
in
in
push
int
mov
popa
jae
int
movsb
negl
jo
out
sbb
xchg
mov
pop
jbe
out
mov
idivb
pop
jo
and
mov
push
and
dec
adc
dec
sub
push
sbb
mov
xchg
sar
jg
lods
push
adc
pop
aaa
cltd
inc
pop
pop
cmp
push
aas
push
test
shrb
mov
stc
cli
loope
mov
lret
rcll
dec
bound
fmull
sbb
decb
insb
mov
adc
xor
xor
daa
lcall
out
xor
xor
pushf
dec
jno
jl
aad
xor
enter
fmul
dec
or
fistpl
jp
sahf
xchg
lahf
and
sub
mov
imul
jae
into
add
sub
ds
adc
or
push
fwait
shrb
gs
lcall
mov
sarl
sbbl
and
fcmovb
pop
sahf
xchg
pavgw
outsb
adc
clc
sbb
je
outsl
xor
dec
and
or
jbe
dec
lret
divl
xor
mov
push
lret
mov
or
fs
and
sbb
mov
adc
cli
fwait
sub
mov
fdivrs
das
push
mov
xor
cmpsb
xor
dec
sbb
mov
xor
push
fucom
in
sbb
or
fsts
sub
ljmp
arpl
daa
loope
aam
add
repz
jno
fisubs
push
and
dec
push
pop
cmp
leave
insl
ja
out
das
pop
test
pop
les
scas
fldl
cs
fnstcw
fs
movsl
cmpsl
adc
mov
pusha
or
into
jns
mov
jp
cmp
out
xchg
sub
int
xchg
mov
jle
test
add
ret
dec
sub
cmc
adc
adc
cmp
sub
mov
lret
inc
clc
out
mov
pusha
shrl
test
sub
cmpsb
jl
xor
rclb
sbb
test
in
out
and
popa
repnz
sub
sarb
int3
rcr
jb
ror
nop
sarl
adc
dec
and
aam
jg
cli
decl
xchg
mov
or
data16
popa
pop
ret
addr16
outsb
popa
mov
jmp
mov
dec
sbb
and
mov
inc
pop
inc
and
mov
test
les
jne
jg
fisubrs
jmp
loopne
int
push
xor
adc
cli
aam
xchg
mov
and
dec
jmp
in
insb
imul
fs
pusha
jns
mov
push
out
sahf
mov
pop
dec
lret
cld
add
addr16
std
pop
insb
adc
inc
rcll
add
shll
out
fs
jge
sbb
loop
fimuls
cs
gs
sub
adc
push
xor
call
lods
dec
jmp
insl
lahf
into
xchg
dec
and
cmp
insl
insb
and
sub
adc
sbb
sahf
xchg
cli
xor
nop
inc
sbbb
hlt
jmp
cmp
leave
or
std
pop
loope
jecxz
xchg
out
es
jae
cld
repnz
fnstsw
cmp
fstpt
ds
loop
orb
testl
shlb
out
sbb
adc
xchg
xlat
lock
fistpll
cmp
out
push
movsb
push
jne
jo
in
adc
mov
outsl
aam
int
mov
mov
xor
or
add
std
mov
push
cli
mov
ret
sub
mov
pop
aas
adc
cmp
xor
in
cmp
js
add
xor
jp
or
push
ret
lds
mov
push
adc
sbb
cld
out
setne
and
imul
pop
in
loope
mov
loop
inc
jle
cld
rcll
loope
dec
adc
cmc
cmc
cmp
test
outsl
mov
cmpsl
jp
fisttps
push
xchg
rorl
xor
jecxz
xchg
xchg
sbbb
stos
notb
cmp
jne
adc
movsb
ret
add
sub
aas
repz
push
pop
jnp
sub
dec
fcompl
adc
adc
shl
test
mov
lds
stc
pop
inc
mov
loop
std
add
rolb
loopne
dec
daa
gs
push
imul
and
sub
adc
in
xorl
ss
or
mov
fwait
daa
lahf
leave
cli
sub
inc
stc
add
hlt
or
hlt
mov
mov
out
out
lock
scas
aaa
jmp
xchg
cmp
sub
inc
sbb
pop
lcall
or
xchg
add
push
ljmp
out
and
insb
inc
shll
push
shll
xchg
cmp
lret
mov
mov
fsts
jle
adc
pop
ljmp
clc
pop
jb
mov
pop
test
repz
outsl
imul
roll
push
loope
sbb
pushf
orb
jo
cmp
int3
cltd
adc
andl
jp
fwait
ds
test
sbb
xor
in
jbe
or
sbb
aas
jmp
adc
js
push
cld
push
out
arpl
negl
outsb
jmp
dec
sarl
jnp
and
aaa
or
mov
sub
cmp
arpl
call
jae
pop
lds
adc
into
ficoml
shlb
mov
mulb
out
sub
or
arpl
cmpsb
insl
and
push
inc
movsb
ss
sub
adc
outsb
pop
popa
push
ss
call
jp
pop
adc
xor
aam
pop
xchg
xor
xlat
add
data16
into
sbb
roll
rcrb
fimull
insl
add
gs
js
cmpsl
mov
ja
das
call
xchg
or
out
cmp
push
mov
mov
and
pop
pop
lcall
inc
test
push
mov
es
divl
movsl
iret
test
adc
push
cmc
fucomip
fwait
sti
push
push
pop
dec
das
push
jecxz
imul
push
fsts
xlat
pop
jne
and
mov
je
lods
outsb
inc
in
fs
or
xor
std
fldenv
push
cld
ja
data16
call
xchg
pop
xor
or
std
sbb
mov
mov
add
in
mov
adc
movb
ja
xor
push
and
or
arpl
and
dec
sahf
clc
sbb
pop
ljmp
mov
lret
aam
adc
fistpll
scas
pop
lods
cwtl
push
pop
shlb
int3
and
hlt
cmp
fwait
ss
mov
or
repz
mov
dec
sbbl
out
add
and
sub
std
cmp
adc
mov
pop
xor
in
inc
lret
sbb
pop
dec
hlt
lds
jnp
inc
lock
lds
add
cmp
push
mov
push
mov
push
int3
dec
xchg
addr16
push
fldenv
xchg
push
jp
cmpsb
fisubl
push
cmp
push
fs
rolb
pop
hlt
das
push
dec
idiv
aad
out
mov
dec
pop
add
mov
call
test
push
dec
ja
stc
lods
scas
sbb
xchg
gs
nop
xchg
or
loop
jne
fbstp
sub
cmp
mov
ret
dec
aad
inc
inc
dec
scas
outsl
cld
lret
sbb
lock
sahf
cmc
mov
das
icebp
fsubrl
mov
mov
mov
xchg
or
cmp
lds
pop
fisttpl
ljmp
jnp
insl
jb
lcall
hlt
push
sub
jnp
mov
jmp
xchg
xchg
push
adc
mov
mov
push
mov
js
mov
adc
in
jne
ja
dec
movsb
xor
push
jl
or
lcall
scas
ljmp
pop
dec
pop
add
mov
clc
ljmp
mov
jns
or
push
mov
inc
xor
popa
and
pop
fisubrl
inc
dec
es
outsb
mov
std
decl
pop
test
cwtl
sub
jns
mov
mov
pop
sbb
mov
cmp
repz
gs
sub
mov
push
pop
sahf
cmpsl
dec
sbbl
shlb
fldcw
mov
out
xchg
add
test
int3
fldl
or
mov
sbb
and
es
jmp
adc
sti
adc
dec
lds
dec
jo
sbb
insb
xor
mov
fisubrs
into
or
loope
or
stc
aam
inc
jmp
les
rorb
pop
sbb
mov
or
and
pop
scas
cmp
add
jle
std
cmpsl
mov
fldcw
and
loop
sbb
cltd
inc
and
push
ja
jp
fbstp
inc
push
adcb
inc
inc
mov
lds
mov
insl
aas
mov
or
push
loope
mov
loope
mov
push
nop
leave
ret
jae
pop
mov
cmc
fisttpl
sahf
pop
xchg
test
xchg
jne
mov
mov
stos
mov
jb
and
and
nop
dec
and
sub
xchg
outsl
dec
test
and
or
lods
test
sub
or
xchg
int3
add
ret
jne
outsb
xchg
xchg
js
and
mov
inc
cltd
cmc
cmp
cmp
inc
scas
fimuls
xchg
pop
lea
rcll
push
dec
inc
add
pop
fildl
adc
int
dec
jg
pop
into
ja
jbe
andb
cmp
outsl
test
hlt
sete
aad
sbb
mov
add
cmp
cs
aas
in
jb
xor
sbb
inc
daa
out
mov
inc
mov
sub
test
insl
cmc
dec
outsb
ret
sbb
adc
sub
add
or
out
and
clc
loopne
movsb
jno
mov
into
imul
arpl
fcoms
mov
lahf
or
icebp
cmp
ja
mov
js
xchg
subb
dec
sub
push
scas
nop
inc
test
movb
std
leave
push
push
jbe
rcrl
loopne
in
mov
fmuls
mov
es
sub
ss
mov
in
dec
out
fwait
xor
ss
xchg
fdiv
cmp
jge,pt
loopne
sbb
je
mov
ljmp
and
int
add
inc
test
adc
pusha
or
stc
inc
cmp
mov
xchg
dec
push
leave
jo
fwait
mov
ds
scas
xchg
mov
mov
pushf
cmp
inc
jl
outsb
idiv
mov
push
pop
imul
stos
ret
lret
adc
inc
fstl
add
repz
sub
pop
pop
insb
dec
repnz
push
pop
push
xchg
sbb
out
jle
jb
adc
rcrl
aad
xor
stos
adc
lret
cltd
stc
cmpsl
loopne
cs
push
lds
dec
xchg
lock
into
aas
dec
pop
mov
or
subl
in
xor
ss
pop
imul
minps
faddl
mov
loope
imul
pop
mov
xlat
mov
rolb
dec
loope
test
or
or
mov
stc
xchg
ret
mov
dec
ret
enter
lock
push
adc
rcl
jg
fidivrl
jno
fildl
and
leave
fwait
cmpsl
xorb
push
sarb
cwtl
movsb
jae
sbb
push
das
mov
xor
xchg
lods
dec
stos
roll
ljmp
mov
xchg
sbb
xchg
inc
jl
cs
xor
inc
jg
pop
movl
push
sub
sub
cmp
add
sbb
jnp
lahf
xchg
out
jno
ja
and
data16
dec
pushf
mov
sub
addr16
lret
or
rcl
jns
mov
xchg
popf
jnp
pop
ds
dec
inc
or
dec
hlt
jbe
into
mov
xchg
outsb
jg
rorb
push
jle
in
hlt
sub
in
sbb
jno
xchg
push
add
push
pop
sbb
icebp
les
std
jg
scas
test
mov
dec
mov
sbb
mov
sbb
out
dec
jae
outsl
jb
mov
cmp
scas
bound
cltd
push
outsl
inc
fdivs
or
bound
xchg
adc
testb
inc
and
add
int3
repnz
jmp
cmpsb
sti
sbb
cmp
fsubrp
mov
cmpb
mov
iret
cld
in
jne
sbb
ja
inc
or
mov
cmp
pushf
cmpl
in
js
loopne
mov
pop
fsubrl
lahf
pusha
xchg
and
mov
aas
xchg
push
sbb
pop
xchg
push
cltd
inc
insb
cmp
xor
ret
cs
sahf
aas
pushf
add
xchg
mov
adc
cmc
pop
subl
inc
loope
xor
mov
mov
imul
std
adc
mov
ja
in
insb
enter
or
cmp
lock
enter
lods
dec
jno
bound
pop
push
rorb
sbb
inc
outsb
add
scas
xchg
fwait
push
push
icebp
test
mov
ss
dec
loopne
sub
sbbl
pop
rcrl
mov
daa
pop
adc
mov
ss
mov
push
cmp
rcll
jb
lods
mov
les
fsubs
and
xlat
test
mov
aas
mov
clc
out
pop
hlt
pop
pop
int
scas
repz
push
pop
push
mov
mov
stc
and
push
mov
and
enter
adc
xor
adc
push
out
jmp
in
stos
fldenv
out
mov
and
push
sti
pop
sub
push
iret
loope
jle,pn
xor
sar
sbb
sub
push
inc
sbb
xchg
mov
imull
divb
fldenv
out
push
ss
pop
test
loop
stos
lds
inc
loope
call
arpl
bound
mov
or
adc
and
pop
adc
push
lods
and
adc
sbb
je
mov
scas
or
loop
xchg
cmpsb
mov
lea
fwait
scas
movsl
and
pushf
subb
sub
jnp
or
add
dec
pop
push
dec
jbe
cmc
add
push
mov
dec
leave
mov
das
dec
sahf
adc
mov
bound
cmc
lahf
mov
pusha
outsl
loop
pop
adc
ret
xchg
inc
fnstenv
sub
out
stos
jecxz
xor
mov
adc
xchg
sub
mov
lcall
bound
imul
scas
call
inc
jb
loop
inc
stc
fwait
inc
mov
xchg
push
jb
and
js
adc
loopne
daa
inc
fisubrl
imul
pop
lds
in
xor
jo
test
dec
mov
pop
pop
das
add
scas
dec
mov
mov
add
out
inc
xor
cltd
push
xchg
mov
lea
in
pop
or
lahf
jns
jne
sbb
xchg
xchg
sub
jbe
adc
mov
sub
cltd
jl
push
xlat
jo
mov
insb
jl
popa
mov
lahf
dec
dec
pop
inc
and
xlat
adc
cs
lods
push
pusha
lock
gs
xchg
lcall
pop
push
jmp
je
movsb
or
inc
xchg
dec
mov
push
int
fistpl
or
mov
jmp
xchg
jbe
sbb
ss
hlt
pushf
xchg
stc
jne
sar
and
adc
das
fstl
add
lds
cmp
xchg
mov
cltd
fimuls
pop
aam
mov
insb
mov
jle
stc
or
movsb
arpl
cltd
ja
enter
mov
in
std
shrl
aam
sub
sti
int
sbb
out
pop
dec
xchg
sbb
jno
push
adc
mov
xchg
in
test
hlt
sbb
jno
xor
fidivrl
dec
cmpsl
popf
lcall
imul
or
mov
fadds
pop
jmp
mov
shll
push
pop
in
and
enter
add
push
scas
pop
dec
sub
inc
dec
pop
pop
jge
lret
jae
xor
das
and
mov
dec
xchg
mov
lahf
popf
movsb
xor
xlat
push
push
or
cltd
ja
stc
fld
push
ss
jp
popf
push
mul
sbb
xor
mov
sbbl
test
mov
add
jnp
push
jmp
into
dec
movsb
arpl
stos
mov
adc
lret
mov
mov
stos
js
in
das
dec
into
xor
in
lcall
jo
loop
mov
ja
push
pop
aad
and
fucomp
in
andb
mov
es
push
push
cmpsb
jp
in
stos
in
xorl
lret
lods
xchg
push
stos
aas
hlt
inc
jle
bound
cmp
mov
lcall
in
pushf
sti
xchg
rorl
or
stos
cwtl
mov
mov
jp,pn
mov
orl
lret
mov
fsubrs
inc
jp
push
push
or
cmpl
sbb
adc
les
jl
pop
icebp
adc
jns
xchg
fsubrl
popf
inc
cmp
mov
nop
icebp
jmp
pop
add
mov
rorl
xor
or
jae
out
mov
ds
jno
fcmove
jp
push
jmp
hlt
dec
or
inc
push
xor
dec
xchg
mov
jne
jb
push
inc
jnp
mov
movsl
mov
repnz
sub
inc
je
cmpsb
push
es
mov
add
adc
ret
and
dec
aam
jg
jno
das
push
jo
adc
jnp
mov
mov
divb
push
lods
or
add
fisttps
jge
cmp
faddl
out
int
stos
in
std
push
movsl
mov
and
out
sub
lock
pusha
xlat
dec
data16
or
mov
js
shrl
adc
inc
out
or
cmp
je
hlt
ds
clc
xor
pop
mov
jnp
inc
push
xor
mov
mov
xchg
xchg
nop
fistpll
ret
aad
pusha
mov
or
jnp
enter
pop
sub
faddl
dec
leavew
lods
jo
dec
push
xor
xor
gs
leave
inc
pop
mov
sahf
mov
pop
lret
cmc
out
jno
sarb
fs
dec
jb
repz
jns
or
cmp
push
imul
mov
out
sarl
and
out
cs
sbb
loop
out
jae
shll
scas
dec
hlt
lods
add
ljmp
jnp
add
xchg
insb
popf
lea
cmp
pop
imul
sub
lods
xlat
in
ja
mov
jb
mov
jp
pop
xchg
out
and
sub
nop
sub
sbb
fisubl
pop
mulb
lods
mov
pop
mov
test
cmp
das
sti
or
or
lds
fsubrl
add
cli
adc
pop
movsb
jne
sbb
out
imul
out
jnp
adcl
rcll
xchg
pop
jno
jbe
xchg
inc
adc
pop
mov
lds
nop
cmp
jmp
pop
imul
sbb
loopne
or
adc
dec
out
adc
jg
push
lcall
mov
cmp
fnstsw
mov
sbb
sub
xchg
pop
push
mov
fisttps
sub
jmp
popa
sub
pop
aaa
adc
daa
test
mov
pop
jnp
push
in
stos
adc
arpl
sbb
add
mov
sub
mov
pop
xor
add
lds
xchg
inc
dec
addr16
in
sub
mov
inc
xor
inc
mov
inc
out
dec
mov
mov
fbld
xchg
inc
shll
cs
ret
push
imulb
mov
cld
int
mov
dec
jecxz
nop
pop
xchg
lahf
in
sub
inc
mov
jne
cmpsb
stos
int
or
xchg
add
cmp
mov
mov
pusha
lock
aaa
cmp
mov
push
out
sbb
out
or
dec
xor
mov
xorb
mov
inc
jae
pop
pop
enter
mov
pop
adc
mov
int3
and
xchg
sbb
imul
lcall
adc
mov
jns
cmovo
pusha
jg
enter
inc
adc
les
xchg
jo
lret
or
mov
scas
mov
push
sahf
pop
mov
int3
or
sub
cmp
out
mov
xor
mov
add
jge
fs
test
mov
call
iret
inc
das
fdivs
push
sbb
pop
mov
and
xchg
pop
push
mov
stos
pop
push
inc
and
lock
ds
pop
mov
sub
or
add
mov
push
mov
pop
push
repz
xlat
hlt
lret
aas
sub
jg
pop
arpl
lahf
inc
sahf
adc
in
popf
sub
sbb
or
add
pop
scas
cltd
daa
out
pushf
push
pusha
dec
js
xchg
push
shr
ljmp
repz
mov
addb
add
test
sbb
push
sarl
negl
pusha
xor
cmpsb
cmp
aad
dec
mov
xchg
daa
insl
cmc
jg
jecxz
mov
imul
lock
dec
scas
cmp
mov
xor
dec
mov
mov
ja
repnz
add
clc
inc
sub
das
adc
cli
imul
fsubl
sti
xchg
sub
mov
movsl
fs
cmp
repnz
mov
jle
cmp
mov
xchg
test
ret
test
sbb
mov
test
in
mov
fstl
mov
jge
push
fdivp
and
push
and
cmp
shll
shlb
ja
cmp
add
xchg
cwtl
lahf
sbb
scas
loopne
clc
ucomiss
push
fnstcw
mov
mov
fidivrs
hlt
jnp
mov
add
loope
flds
inc
aas
in
mov
push
in
sbb
sub
loopne
stos
inc
scas
push
inc
sub
or
sbb
xor
mov
mov
popf
test
or
xchg
leave
out
and
cmp
xchg
and
fdivl
aaa
shlb
push
aas
xchg
dec
mov
out
in
push
cli
call
dec
sub
sub
dec
shl
hlt
jnp
mov
or
sar
movsb
popa
and
xor
out
xlat
int
mov
lods
stc
add
jle
mov
mov
aaa
push
pushf
add
out
adc
in
insl
xor
pusha
sti
je
hlt
imul
cmpsl
lahf
cli
or
mov
push
and
xor
jb
push
adc
scas
pusha
inc
lock
sbb
lret
outsb
ret
lcall
jno
lret
movsb
fs
xor
xchg
xor
mov
jnp
mov
adc
dec
loopne
dec
lcall
clc
pop
je
jg
loopne
clc
push
push
adc
mov
ljmp
push
test
xchg
rep
hlt
int3
and
add
dec
push
push
stos
fdivrs
jecxz
cwtl
inc
mov
mov
inc
lret
cmpb
pop
mov
mov
test
push
jp
push
sub
outsb
push
sbb
nop
cmp
test
divb
xor
push
sahf
adc
aaa
sbb
or
sbb
mov
shrl
stos
or
dec
add
out
sti
pop
fisubrs
pop
or
xor
cld
popa
shrb
in
mov
add
rol
mov
xlat
movsb
jb
mov
repz
fildl
jno
sub
xchg
mov
mov
pop
in
sub
bound
repz
sub
pop
pop
cwtl
mov
clc
lcall
int3
les
imul
fs
mov
inc
daa
adc
add
repz
mov
push
ja
mov
inc
adcb
push
pop
or
dec
lahf
sbb
xchg
scas
int
addb
push
mull
pop
fsubs
movsl
jmp
jae
sub
call
jecxz
call
jg
out
sub
xchg
mov
jge
jne
data16
test
xchg
arpl
pop
into
pop
xor
fcmovbe
and
call
jp
mov
fsubs
cmp
mov
push
out
call
add
movsl
in
jle
incl
and
fs
outsl
push
loopne
in
lods
sbb
les
aam
adc
test
sbb
mov
mov
pop
cmp
cmp
repnz
hlt
mov
mov
xor
push
pop
loopne
orb
xor
pop
inc
or
lret
icebp
test
push
cmp
xchg
pushl
dec
inc
mov
out
cmp
data16
cltd
stos
mov
or
push
nop
cmpsb
fcmovnbe
xor
rolb
out
mov
mov
call
dec
int
lahf
roll
or
nop
in
and
and
out
jp
pusha
leave
lahf
iret
test
leave
out
lods
jo
fsub
int
out
rcr
ja
push
test
shrl
or
or
enter
cwtl
jbe
test
xchg
adc
ljmp
pop
or
aaa
pusha
xlat
mov
jecxz
sbb
popf
jbe
je
js
dec
and
lcall
ljmp
es
jg
mov
cmpsb
sbb
and
ss
or
or
sbb
subl
jns
push
les
scas
or
xor
or
mov
add
pop
in
test
or
mov
or
sub
imul
adc
push
jno
std
or
xchg
mov
adc
push
adc
or
jle
out
ficomps
aas
pop
mov
movsl
sarb
cmp
jae
ljmp
popf
fldenv
add
inc
jecxz
andb
sub
pop
xchg
loope
pushf
mov
pop
push
pop
ret
int3
repnz
in
pop
les
daa
test
aas
andb
in
fwait
ret
xorb
fsubrl
xchg
sub
and
ljmp
cmp
std
fdivs
hlt
or
or
int
or
mov
lret
pop
adc
lds
fxch
jb
push
popa
pusha
hlt
lds
into
loopne
stc
pushl
or
out
outsb
mov
movsb
inc
mov
and
inc
repz
fldl
sub
xor
inc
out
jne
and
mov
clc
inc
add
hlt
cmp
cwtl
dec
movsb
sub
cld
xor
add
aad
adc
jbe
inc
imul
push
push
in
xor
inc
dec
outsl
or
jo
mov
int
cmp
das
out
scas
mov
xchg
daa
sbb
jle
push
xor
icebp
or
mov
push
fldenv
into
inc
push
loopne
scas
push
sbb
adcb
in
pop
out
leave
mov
lods
je
adcb
inc
movsb
ss
loopne
xchg
ss
xchg
stos
repz
mov
fildl
inc
faddl
mov
pop
sarl
insb
lret
lahf
jae
ds
dec
jl
inc
xchg
push
test
int3
pop
insl
mov
mov
mov
push
xchg
fnsave
pop
push
and
push
sarb
repnz
mov
cld
adc
add
jmp
lock
jmp
xchg
jp
movntq
out
ljmp
sbb
outsl
leave
jle
adc
pop
sub
arpl
jbe
adc
or
xor
jmp
mov
cld
cld
mov
sbb
insl
add
mov
loop
enter
and
cltd
jae
sub
jbe
das
dec
jne
xor
pushf
push
lcall
lahf
mov
out
scas
mov
ljmp
clc
aas
xor
xlat
ds
movsl
adc
adc
sbb
in
shlb
or
fwait
mov
test
fidivs
imul
repnz
pop
xor
das
scas
lcall
and
mov
cmpb
mov
adc
jbe
push
sub
jb
xchg
jle
mov
sub
and
fbld
shll
jo
leave
cld
cmp
cmp
loope
paddb
loope
mov
cmp
xor
jbe
inc
sbb
sub
mov
addb
or
mov
jg
adc
xchg
dec
mov
mov
adc
fisubl
push
ljmp
add
lcall
stc
mov
pop
pop
imul
or
daa
ljmp
add
cmpsb
adc
push
push
jnp
cmp
mov
cmp
pop
jecxz
lahf
pop
lock
cmc
xor
ss
out
rcl
and
or
dec
jns
sub
std
pop
aas
daa
sub
movsb
repz
sub
dec
cmp
sti
aad
jp
iret
insb
mov
inc
dec
cmpsb
sbb
orb
rolb
fidivrl
and
push
shlb
and
jnp
test
mov
xor
pop
shlb
mov
negl
icebp
push
jbe
xor
cld
mov
pop
mov
das
mov
flds
and
ret
cld
xchg
xchg
push
and
fcmovnbe
mov
in
push
jae
jecxz
rcll
sbb
xor
pop
in
cmc
adc
jp
fdiv
mov
fmulp
sbb
outsb
aad
fcoml
loopne
mov
pop
fcmove
cli
pop
cmp
shlb
inc
daa
and
mov
inc
test
insl
mov
insl
jp
lahf
add
push
mov
popf
ret
in
out
hlt
jns
xchg
imull
add
sub
sub
add
jo
mov
push
js
outsb
scas
mov
cmpsb
push
jmp
movsl
sbb
into
jno
ljmp
adc
fwait
dec
mov
notb
xchg
outsb
xor
lcall
mov
pop
mov
pop
mov
fistl
push
popf
pop
dec
jb
ljmp
das
adc
mov
imul
xchg
mov
jno,pt
and
pushf
test
dec
insl
cmp
cmp
fdivrl
pop
push
cli
in
mov
pop
or
jg
fisubrs
inc
jns
xchg
bound
mov
xor
xlat
cmp
clc
sbb
push
xor
mov
dec
repz
push
dec
flds
subl
add
in
mov
dec
mov
jmp
mov
inc
cmp
enter
mov
in
mov
les
push
popf
sbb
rcll
cmp
cmpsb
stos
popf
cmc
adc
cli
out
sarb
rcr
xchg
lcall
xor
jecxz
stos
inc
cmp
call
push
popa
bound
outsl
shr
dec
jne
ror
push
lcall
xor
lds
pop
jge
movsl
int3
or
mov
and
popw
jp
or
push
das
sti
jb
push
cmpsl
and
add
dec
cmp
bound
mov
xor
out
rcll
cmp
mov
mov
pop
sbb
fidivl
jecxz
mov
pop
xchg
xor
test
fdivrs
inc
lahf
outsl
inc
dec
cmpb
out
das
je
loop
cwtl
push
push
stc
push
mov
ret
icebp
mov
mov
mov
add
pop
xchg
pushf
nop
pop
xchg
ss
mov
jno
ss
enter
ficoms
mov
cltd
in
jmp
cld
xchg
setns
adc
imul
aaa
sbb
aad
xchg
xlat
sub
ret
push
aaa
xchg
lods
scas
push
aam
jae
lea
lock
dec
jle
mov
lcall
aam
fsts
inc
sub
pushf
int
cmp
pop
arpl
xchg
mov
fsts
adc
jge
out
lret
adc
pop
pop
dec
sub
adcl
push
dec
mov
jnp
mov
mov
mov
add
cmp
fistl
lods
lret
add
sbb
or
mov
dec
bound
mov
test
imul
mov
sbb
dec
in
dec
push
lret
mov
scas
and
shl
out
cmp
xchg
jmp
push
sbb
shlb
fildll
rorb
ficoms
lock
pop
out
arpl
dec
lret
js
daa
mov
pop
and
sub
cmp
les
mov
rol
pop
jg
sub
mov
ja
stc
dec
jle
sbb
sbb
pop
cmpsl
inc
sti
icebp
dec
loop
es
int3
xlat
push
pushw
push
mov
add
in
xor
inc
cmp
lcall
or
scas
hlt
xchg
sub
stos
mov
scas
sub
xchg
jle
cmp
lock
push
xor
or
jl
sahf
mov
mov
cmp
inc
pop
shrb
push
push
subb
fwait
pop
cmc
cmp
das
ljmp
cmp
cmp
jp
dec
xor
fldl
loopne
inc
jle
and
jp
daa
or
loope
jmp
enter
adc
mov
int
lock
addr16
mov
repnz
adc
adcb
cmp
dec
imul
ffreep
push
pop
fimull
push
inc
loope
add
inc
jp
mov
jbe
hlt
jne
pop
stos
nop
je
add
push
jge
push
aaa
cwtl
pop
sub
inc
ret
jns
lret
jmp
sbb
jns
adc
and
cwtl
pop
test
ret
popa
stos
mov
dec
dec
out
aas
fsubs
pop
push
inc
je
xlat
es
sub
out
mov
mov
pusha
pop
fcmovnu
inc
dec
pop
jecxz
add
sbb
jb
repz
pop
mov
insl
push
popa
ret
inc
push
adc
shrb
cs
call
call
mov
dec
sbb
dec
push
faddp
fnstenv
jl
out
lods
mov
scas
mov
hlt
adc
ret
ja
insb
xchg
xchg
loope
popf
dec
insl
ret
inc
imul
inc
lods
cmp
andb
push
repz
xor
mull
mov
fstps
push
stos
clc
lock
test
cmp
popf
sbb
xchg
jno
mov
sar
xor
mov
stos
sti
pop
inc
pop
inc
adc
xchg
mov
cmpsl
and
cmp
bound
cmp
bound
sub
aaa
test
sbb
pop
jle
push
add
push
dec
fcmovnu
imul
lods
and
mov
mov
nop
fdivrl
dec
roll
adc
je
outsl
int
cld
and
ljmp
sub
cmc
pop
test
js
push
test
mov
mov
lahf
sahf
arpl
mov
jne
les
inc
hlt
inc
daa
xor
and
sub
stos
cli
adc
mov
mov
pop
add
iret
fcomps
insl
cmpsl
leave
jmp
push
jge
add
push
cmp
fildll
bound
xor
mov
sub
jo
int
daa
loop
mov
loopne
mov
cmp
lcall
mov
pusha
jle
dec
aas
hlt
fdivrp
enter
popf
xor
mov
es
mov
push
adc
inc
xchg
fcomi
mov
push
pop
adcb
dec
inc
shll
lods
xchg
jmp
in
xchg
cmpsb
cmpsl
lea
fcoms
mov
dec
jge
pop
enter
sbb
pop
adc
lods
pop
in
loop
xchg
std
xor
filds
xor
jmp
out
lods
lods
outsl
xor
int3
adc
pop
mov
lock
enter
aad
loope
cltd
add
fstps
push
mov
out
xor
sub
jmp
fisttps
adc
out
movl
push
xor
call
jg
mov
inc
xchg
out
loope
push
adc
aaa
je
rcll
add
aas
dec
sbb
pop
out
mov
sub
test
sub
scas
sub
in
jp
mov
movsb
rolb
stos
pop
pop
call
dec
and
int3
repnz
push
jge
add
ljmp
aaa
xor
test
xchg
mov
jae
xor
xchg
sub
std
out
es
cmp
sbb
data16
inc
push
mov
sbb
mov
inc
xlat
lahf
mov
stc
loop
inc
cmpsb
cmp
pop
cmp
popf
shrb
dec
adc
lcall
ret
or
test
out
and
pop
cwtl
sbb
and
arpl
out
pop
mov
sbb
jle
xor
jecxz
xor
enter
nop
das
imul
jo
pusha
mov
xlat
psllq
push
movsb
clc
mov
jmp
or
fwait
mov
push
cmc
nop
jle
imull
add
dec
rorb
mov
repz
and
add
jmp
popa
pop
push
dec
pop
ret
xor
and
sbb
mov
xchg
dec
popf
fsubrl
hlt
mov
jg
and
xor
adc
xlat
ss
scas
fdivl
out
push
mov
push
mov
aad
lret
stos
je
scas
outsb
ret
push
add
sahf
jecxz
cmc
mov
js
out
dec
cmp
mov
adc
mov
jg
mov
sbb
jne
jge
loop
sbb
sub
and
int
cmpsl
mov
dec
jle
mov
pop
pop
and
fdivrp
les
inc
inc
mov
pop
movsb
pushf
mov
jp
out
cmp
imul
cwtl
loopne
cmp
jge
addb
push
repnz
mov
movsl
cmpsl
cmp
cltd
push
mov
sbb
cli
les
mov
jge
mull
push
das
nop
adc
fldl
mov
fmuls
adc
jb
shrb
mov
inc
mov
push
push
pusha
mov
adc
dec
mov
pop
push
push
mov
ret
mov
out
lcall
pop
or
out
in
fsubl
jge
popf
or
lods
out
stc
cs
mov
test
data16
aas
fs
shlb
into
push
sub
xchg
mov
loop
add
xchg
add
iret
mov
sub
or
movsb
lahf
adc
mov
rcrb
pop
in
sub
loope
pushf
mov
les
or
mov
pusha
push
add
sahf
adc
jo
cld
stc
adc
push
and
test
cmp
mov
loope
les
cmp
cs
and
movb
test
push
dec
fcomi
and
mov
push
mov
mov
clc
mov
push
in
dec
dec
and
pop
pop
fxam
into
sti
mov
xor
or
jbe
lods
fcomp
ds
shlb
add
and
pop
mov
and
and
in
lea
mov
lods
pusha
stc
cld
mov
or
cmc
adc
xchg
mov
scas
jmp
iret
data16
and
arpl
hlt
pushl
xchg
sub
pop
shl
in
cmp
mov
adc
fistpl
adc
sbb
repnz
pop
test
adc
adc
fnstcw
add
ret
sub
xchg
ds
jmp
flds
mov
and
sbb
dec
inc
stos
decb
and
pop
sahf
xorb
cli
cmp
or
rorl
mov
movsb
sub
stos
shll
imul
sbb
inc
lea
inc
pop
add
adc
icebp
daa
ret
and
pop
fs
or
mov
xor
icebp
mov
lds
addl
fcomi
addb
fstpt
addl
lds
orb
sbb
jmp
push
inc
add
imul
mov
mov
adc
dec
rcr
sahf
insb
cmp
bound
xor
test
lods
sbb
push
xchg
add
or
pop
cmp
incb
xlat
mov
push
cli
sub
testl
inc
cmp
jp
sub
jns
fldenv
sbb
cmp
adc
js
pop
cmpb
rolb
or
sub
sti
and
xor
aaa
xor
cli
enter
je
or
cmp
testl
vsubps
jbe
and
mov
aas
repz
ljmp
push
test
mov
subb
idiv
xor
lahf
jp
test
or
push
es
add
inc
fnstcw
xor
int3
test
push
test
jl
mov
sahf
add
add
repnz
xchg
out
dec
cmp
jl
addb
fwait
outsl
add
inc
je
test
andb
sub
movsl
or
sbb
mov
lret
sar
xor
insb
cwtl
mov
jo
add
cmp
rcr
ja
mov
enter
mov
std
repnz
xchg
popf
jnp
movsb
fimull
pusha
bound
pop
xor
jecxz
das
pop
into
sub
clc
sub
xchg
cmpsl
inc
add
sbb
insb
mov
jnp
icebp
xlat
fnstsw
sub
addl
aaa
xor
xchg
adc
mov
cmpsb
data16
out
pop
shll
nop
dec
inc
cltd
cld
add
imul
leave
outsl
sbb
ss
mov
lret
xchg
aam
mov
pop
xchg
mov
adc
lock
cwtl
cmpsl
dec
pop
sub
inc
mov
cli
je
push
js
xor
testb
arpl
xor
lea
adc
or
icebp
aaa
fwait
js
mov
cltd
mov
stos
pop
lret
cli
cld
adc
push
loope
jge
add
jg
sub
adc
sub
and
mov
and
into
int
mov
pop
lea
pushf
push
arpl
jp
imul
in
stos
push
pop
add
int3
and
xchg
ret
mov
in
sub
and
hlt
xchg
cmp
int
push
cwtl
fisubrs
popw
lds
popa
mov
push
lcall
mov
ret
scas
scas
or
ret
out
sub
mov
daa
sti
mov
lods
imul
fstps
cmp
push
inc
out
mov
lock
mov
sbbl
faddl
imul
pop
in
mov
xor
in
int
sbb
dec
mov
dec
out
or
jge
int
in
divb
mov
cwtl
arpl
hlt
and
xor
in
inc
fwait
mov
roll
mov
or
and
xchg
addr16
fs
aam
das
shlb
mov
adc
jle
sti
pop
test
mov
push
test
sub
and
or
add
jp
push
cli
cmc
insl
movsb
lock
dec
cmp
push
pop
fidivrs
pop
fcomps
dec
cmpsl
out
or
push
pop
mov
xchg
imul
aas
imul
insl
xchg
xchg
and
xchg
cmpsl
fwait
lahf
push
mov
inc
lock
test
dec
andl
and
lret
pop
aas
in
aas
nop
ficoml
xor
hlt
jecxz
push
cmp
arpl
mov
rclb
xchg
pop
lods
push
rclb
pop
inc
or
imul
mov
std
scas
and
mov
ja
jno
jge
hlt
fimuls
mov
leave
pushf
out
inc
shlb
fwait
lcall
inc
notl
push
lods
push
pop
sbb
xchg
cmpsb
lret
lock
cmp
aas
kortestb
cli
add
sub
cmp
push
call
jbe
mov
hlt
cmpsl
mov
add
lcall
fadd
imul
push
std
jbe
push
popf
js
addr16
cld
out
xchg
jle
divl
nop
pop
iret
cmc
jecxz
cld
jge
inc
insb
ss
push
xchg
ja
mov
mov
push
loopne
dec
xchg
lcall
outsl
ss
cmp
shll
jae
sub
std
mov
and
lods
and
stos
imul
movsl
dec
aam
push
into
adc
dec
sahf
rcll
in
or
and
ret
out
inc
jmp
idivl
fnsave
inc
jno
xor
out
test
mov
shrb
sub
loopne
cmp
and
xor
push
xchg
inc
sbb
imul
pop
stos
scas
or
lret
pop
sub
inc
add
repnz
fmuls
pusha
fwait
out
fnsetpm(287
pushl
cs
sub
mov
sbb
push
lret
inc
mov
xchg
xor
inc
push
shrb
jle
xchg
xchg
sub
mov
mov
sub
mov
push
and
mov
xchg
andb
fcomps
stos
push
shll
or
cmp
lods
inc
add
fcmovne
rorb
test
adc
js
call
std
bound
mov
cmpsb
movsl
rcl
jge
imul
xor
addr16
mov
dec
addb
inc
and
testl
popa
dec
addr16
pop
es
pop
pop
enter
pusha
outsl
xchg
sti
mov
nop
mov
nop
push
add
adc
xchg
jg
ds
sti
sub
adc
jecxz
or
pop
sbb
rcr
ret
xchg
fnstenv
leave
hlt
fistps
daa
divb
xor
jge
mov
inc
dec
sub
jl
lock
sbb
mov
cmp
std
aad
mov
in
adc
test
fnsave
push
or
xor
jmp
cmp
call
cltd
sub
jge
cmp
xchg
sahf
stc
insb
mov
rorl
mov
test
subl
data16
and
loop
or
or
imul
add
shlb
push
jno
lods
xchg
repnz
mov
cmp
leave
jnp
shlb
fisttpl
ljmp
sbb
xchg
fimull
leave
adc
les
lock
ljmp
xchg
faddl
mov
lods
leave
fsubrp
mov
and
stos
popa
inc
or
into
gs
push
xchg
jle
cmpsl
outsl
inc
cmpsb
adc
fdivrp
popf
out
xchg
cli
mov
std
pop
stos
gs
scas
jb
lret
pop
gs
push
imul
shl
adcb
insl
sub
lock
fists
xor
std
push
ret
xchg
outsb
push
fwait
or
mov
cs
push
mov
add
movsb
inc
lds
bound
data16
or
and
cld
mov
pushf
aad
xor
testl
or
mov
loope
mov
push
lret
jg
xchg
pop
fimuls
xchg
movsl
mov
pop
pop
out
mov
push
push
cmpsb
push
out
scas
adc
fwait
xor
adc
pop
repz
dec
leave
dec
iret
mov
push
test
push
xchg
mov
inc
add
sub
lods
jno
inc
jge
cltd
jne
out
daa
cmp
fbld
xchg
ret
iret
jmp
mov
test
or
dec
clc
mov
out
lret
mov
and
out
movsl
dec
imul
jge
lock
pop
pop
mov
decb
fcom
jnp
dec
pop
cmp
sub
sub
cmp
and
dec
ja
mov
arpl
dec
pop
scas
in
sbb
jmp
push
jb
adc
fwait
rcrl
test
jp
lcall
cmp
outsb
iret
fs
repnz
mov
and
or
imul
es
jo
mov
movsb
mov
inc
pop
popa
jmp
add
shlb
popf
fildll
repnz
push
dec
loope
pop
cld
frstor
fimull
out
in
sbb
jge
mov
lahf
jne
into
push
jbe
jp
and
jecxz
adc
cwtl
mov
push
mov
pop
les
mov
sub
adc
mov
popf
jae
enter
push
mov
stos
sub
push
jno
repz
pop
addl
insl
and
cmp
dec
mov
xor
dec
sbb
les
mov
dec
xchg
lods
insb
xchg
adc
loop
inc
inc
pop
jns
arpl
sub
push
or
aam
inc
xchg
pop
lock
lds
outsb
enter
das
shlb
add
cmp
insl
psraw
cmpsl
inc
enter
fistl
movsb
loop
idivl
and
adc
call
sub
inc
xor
or
push
pop
je
bound
fwait
cmp
xchg
and
cld
lret
cmp
sub
call
fildll
pop
jne,pt
jl
lea
cmp
adc
lods
pop
lds
fucomp
pop
xor
sbb
rcr
int3
aad
scas
sahf
test
pop
shrl
jb
jl
sbb
add
xchg
cmp
xchg
aas
xchg
fdivp
out
mov
scas
outsl
jp
pushf
test
icebp
icebp
mov
adc
loope
cltd
es
mov
lods
cmp
aam
mov
push
xchg
cmp
test
cmp
xorb
fnsave
dec
rorl
pop
xchg
imul
xchg
jg
pop
bound
icebp
lds
scas
mov
test
std
adc
sub
pop
xor
or
sub
jns
fistpl
ltr
popa
daa
xchg
cmp
loope
and
sbb
bound
jns
cli
mov
shl
in
mov
mov
les
movsl
pop
movsb
cltd
mov
push
ja
lahf
xchg
xor
cmpsl
add
xchg
adc
sub
mov
dec
or
xor
sarl
mov
mov
outsl
or
mov
stos
das
pushf
lods
shll
lret
les
xor
add
loope
nop
xlat
test
pop
aaa
movsb
pop
call
shl
repz
lods
push
xor
xor
mov
rcrl
jl
xchg
and
fidivrs
xchg
pop
jns
lahf
adc
sti
or
imul
arpl
mov
ss
jmp
fistps
mov
ss
sub
adc
lret
push
mov
out
mov
inc
nop
shlb
jmp
mov
jnp
leave
inc
jbe
rclb
les
ss
fwait
inc
xchg
add
lret
inc
or
mov
into
inc
add
sub
sbb
and
rorb
and
jo
xor
push
fistl
stc
nop
pop
das
in
cld
pop
sub
and
mov
and
icebp
or
lds
daa
data16
fidivs
sub
mov
dec
leave
pop
movsb
add
ja
mov
stc
or
jmp
cmpsb
inc
jbe
es
loop
add
in
mov
rol
xchg
adc
xor
or
lods
cmp
and
push
xor
enter
std
out
mov
mov
push
clc
mov
mov
xchg
lds
test
mov
js
int3
lea
jo
xor
in
clc
rorb
jge
cwtl
mov
cmpsb
lods
and
fadd
add
stos
into
dec
in
movsw
sar
pop
imul
cmp
jecxz
dec
cmp
cltd
dec
lods
xchg
mov
xchg
lcall
jb
xchg
jb
inc
lods
pop
fnsave
jbe
pop
mov
mov
mov
adc
add
fnsave
mov
jge
jno
sbb
or
or
cltd
cmp
pop
fcompl
jae
ror
in
push
mov
jo
outsl
pop
gs
cwtl
jne
add
add
mov
xor
lea
imul
je
push
loopne
rcrl
dec
fistps
jnp
cltd
addl
jns
inc
dec
jae
es
add
mov
or
fdiv
inc
int3
repnz
push
rolb
lahf
pushf
and
mov
je
jge
jl
outsl
jg
arpl
dec
out
das
jmp
orb
sti
xlat
call
or
lret
jne
lods
scas
shlb
xchg
sub
and
inc
es
or
in
in
sbb
cli
xor
xor
in
and
sbb
cs
das
mov
rcl
test
outsl
lock
xor
push
mov
inc
fs
sub
movsl
popf
inc
fldenv
mov
fucomp
sbb
loopne
stos
push
popf
pop
mov
pop
sub
jno
dec
je
push
sbb
sbb
cmp
inc
loopnew
pop
movsb
shl
dec
es
pop
fdivl
cmp
aam
xchg
lds
rcll
sarl
xor
out
dec
pop
sub
shlb
popf
jbe
cli
adc
mov
daa
jae
std
sbb
dec
andb
cwtl
and
lea
cmp
fwait
push
cmpsl
fidivs
mov
fstpl
rcll
je
mov
cli
adc
pop
and
imul
xchg
fisttpll
push
or
addr16
or
sub
lea
iret
enter
andl
inc
mov
xchg
adc
gs
movsw
in
and
call
sbb
imul
sbb
fiaddl
mov
dec
test
in
faddl
push
jmp
push
nop
stos
arpl
jle
pop
test
ret
inc
jmp
sbb
shlb
or
ret
mov
sbb
adcl
and
std
sbb
into
adc
adc
insb
xchg
and
xchg
push
add
movsl
pop
mov
push
mov
and
ja
mov
xchg
mov
xor
cltd
push
fdiv
xchg
movsb
jg
loope
nop
jle
les
lea
xor
dec
xor
insl
insl
push
or
xchg
int
je
jecxz
push
leave
int3
jmp
aam
xchg
aas
add
mov
aam
jne
add
clc
in
aas
mov
iret
in
lahf
xchg
mov
ljmp
xchg
fs
or
pop
adc
inc
hlt
movsb
ljmp
cmp
inc
adc
push
mov
sub
mov
inc
jp
pop
xor
xor
lahf
fdivrl
cmp
insl
pop
lods
rcrb
dec
xchg
push
and
inc
mov
mov
sbb
sub
mov
adcb
hlt
aam
add
inc
rclb
pop
sub
xor
scas
or
in
dec
dec
sub
cmpsl
lcall
loopne
scas
out
out
xlat
xchg
iret
lret
xchg
sub
cmp
test
mov
mov
lret
jmp
loop
pop
pushf
scas
mov
pusha
pop
push
pop
xor
cwtl
jo
pop
or
xor
movsb
xchg
mov
sbb
mov
inc
sbb
and
std
push
sbb
dec
xchg
push
push
out
fnstsw
ss
das
adc
mov
add
movsl
insb
pop
or
sbb
inc
xor
sbb
mov
push
pop
sbb
cmp
imul
stos
aam
out
jnp
adc
jae
out
cmp
pop
push
mov
cmpsl
test
xchg
loope
push
sub
pop
push
dec
and
jl
out
mov
cmp
push
imul
cmpsl
cmp
adc
pop
ds
jno
add
shr
outsl
xor
mov
in
sahf
mov
stos
cmpsl
ret
ds
stc
and
xchg
push
incl
test
out
in
ss
aam
iret
push
jge
lret
inc
add
mov
orb
jge
sbb
aam
mov
aaa
and
bound
push
sub
cwtl
xchg
jge
inc
jp
pop
pop
pop
dec
xchg
adc
xchg
add
rorl
in
enter
mov
pusha
pop
notl
jl
xchg
repnz
inc
mov
mov
or
pop
cmp
sbb
mull
fucomip
mov
mov
inc
arpl
movsb
sub
cmp
pop
mov
movsl
insb
pop
arpl
in
mov
and
fdiv
inc
cs
into
add
mov
loop
push
push
pop
clc
shl
jb
inc
mov
xchg
xchg
push
hlt
les
mov
xchg
test
push
jp
add
xlat
add
ss
xchg
xor
mov
lock
movsb
loopne
fcmovnu
inc
ret
outsb
outsl
mov
insl
lahf
aaa
mov
das
imul
fildl
sbb
int
mov
aaa
sbb
mov
or
cld
mov
sbb
daa
into
jnp
leave
out
cli
lahf
lret
push
sub
rcrb
or
dec
leave
insb
adc
movsl
repnz
call
lret
cmp
push
push
cmpsb
shrl
inc
fidivrs
push
jmp
into
fcmovnbe
mov
lea
mov
cltd
dec
pop
call
ret
xlat
fmuls
stos
mov
data16
or
mov
or
ss
inc
insb
fs
inc
xchg
mov
or
into
pushf
pusha
sbb
lock
ljmp
notl
popf
out
xchg
cmp
lods
xchg
sub
lahf
xchg
xchg
fnstcw
mov
les
push
xorl
out
push
aaa
mov
mov
bound
jle
xchg
bound
dec
push
test
cmp
adc
std
and
and
dec
ds
add
mov
and
xchg
dec
test
or
out
fdivr
xor
add
sbb
lods
fs
shl
imul
cltd
mov
in
xchg
aam
loope
outsl
jg
repnz
cmp
pop
mov
outsb
pop
cmp
jg
movsb
fbld
fwait
mov
cwtl
jo
and
loopne
loop
movsl
aas
movsb
sahf
dec
cmpsb
test
andl
lret
int
test
adc
daa
pop
and
test
ret
xchg
arpl
mov
dec
jp
pop
push
sub
jle
adc
push
mov
testl
inc
xor
adc
jo
xor
popa
xchg
fldl
ja
je
jb
mov
and
add
sbb
popa
push
enter
mov
dec
mov
jge
dec
sbb
sub
dec
inc
mov
aas
gs
push
mov
test
mov
lret
xchg
mov
ficompl
or
xchg
dec
sahf
in
cmp
stc
xor
mov
out
adc
cmp
inc
push
mov
popa
or
sub
jmp
or
loope
ljmp
add
inc
inc
pop
movsb
ljmp
popf
push
jnp
rorl
mov
inc
stc
fnstenv
xor
adc
jge
mov
mov
inc
subl
sub
and
jns
roll
enter
inc
add
mov
push
mov
inc
jmp
mulb
and
sbb
int3
es
test
mov
ljmp
xor
push
xor
popa
mov
cmp
ds
gs
cmc
lret
std
dec
jge
movsb
mov
arpl
hlt
hlt
adc
int
sbb
and
sbb
xchg
fsubrl
out
dec
lret
jo
scas
mov
lds
mov
xchg
sbb
fldcw
and
or
mov
fisubs
jo
or
adc
add
outsl
js
or
fldl
fstpt
mov
xchg
sbb
out
pop
in
xor
stos
dec
icebp
inc
dec
mov
mov
add
xchg
push
imul
fs
pushf
inc
mov
sarl
dec
sub
add
and
cmp
and
pop
sbb
or
pop
js
push
mov
mov
fstl
xchg
sarl
cmp
add
or
fisttps
adc
fstpt
ljmp
jo
jg
jb
push
ret
stos
xchg
mov
pop
call
inc
and
adc
push
pop
mov
mov
out
mov
jno
adc
stos
lock
arpl
div
add
rcr
out
push
mov
xchg
fdivrs
shlb
pushf
shr
dec
cwtl
decb
mov
int3
lods
xlat
imull
sub
mulb
leave
fdivs
mov
adc
mov
mov
xor
push
lds
es
inc
popa
dec
push
fwait
aaa
out
les
bound
inc
xchg
push
cli
arpl
sub
ret
enter
jo
bound
mov
mov
xchg
cmpsb
push
dec
add
pop
in
pop
icebp
lcall
in
mov
lcall
dec
cwtl
pop
jp
xchg
insl
cld
mov
xchg
xor
xchg
imul
push
and
icebp
push
scas
cmp
mov
cmp
ljmp
push
pushf
lahf
int3
lock
js
out
into
sti
sub
push
or
leave
fldt
add
leave
pop
ljmp
ret
mov
out
or
jne
int
mov
sub
jecxz
dec
jle
or
cmpl
inc
in
leave
inc
lods
in
sub
ljmp
and
mov
push
dec
mov
or
cmc
orl
imul
pop
add
xor
add
cmpb
and
sub
inc
into
push
popf
fisttpll
sub
adcl
lods
in
mov
fidivrs
lods
xor
push
jns
pop
add
lods
mov
sahf
lds
das
sbb
xchg
pop
test
inc
or
jle
movsb
mov
adc
inc
imul
xor
inc
cltd
bound
stos
aaa
mov
add
mov
mov
mov
inc
or
jge
sub
or
cmpb
push
mov
dec
xchg
in
adc
jbe
arpl
sub
mov
fs
mov
inc
dec
das
sub
pushf
sahf
and
ja
mov
inc
inc
sub
jecxz
inc
lds
or
push
repz
aam
xlat
xlat
push
jns
or
or
adc
jg
pushf
dec
xor
and
call
lahf
js
dec
imul
addr16
and
xor
cmp
rorb
add
pushf
push
out
mov
adc
int
mov
dec
add
fisubrs
ds
stc
xchg
jbe
pop
jae
xor
pop
cmp
sub
fcompl
jmp
dec
cltd
jmp
add
xchg
dec
je
jns
jae
dec
outsb
xor
cmp
int3
sahf
jl
call
subb
or
sub
das
jle
xor
mov
sbb
or
shll
call
adc
jg
xor
xor
insl
outsb
xchg
add
add
cmp
and
cwtl
imull
pop
push
push
mov
in
fcomip
xchg
outsb
mov
mov
mov
pop
mov
sbb
jae
lret
imul
xorl
mov
adc
fmull
decb
les
lcall
stos
not
movb
mov
and
sbb
out
addr16
sbb
adc
sti
div
cmp
imul
add
mov
fsts
cmp
pop
test
loopne
jbe
ds
loop
pop
and
or
icebp
enter
jecxz
fiaddl
cwtl
push
adc
jg
dec
test
fnstenv
sahf
out
mov
push
data16
mov
mov
test
ss
jae
and
ds
mov
or
int3
mov
mov
xor
clc
or
mov
aas
mov
int
pop
push
movsb
jle
mov
inc
inc
orb
fcompl
or
cmpsl
movq
mov
aam
xor
test
mov
mov
dec
aam
aam
cs
and
sub
ret
xor
cmp
rclb
sbb
mov
andl
xchg
iret
out
test
add
add
mov
cmp
pop
jae
or
gs
enterw
jb
mov
ret
xchg
call
test
xor
dec
dec
xchg
fdivrs
repnz
int3
jmp
push
push
aam
add
icebp
adc
push
test
add
xchg
in
inc
xchg
int3
hlt
add
mov
addb
push
jnp
jl
jno
out
xchg
icebp
loop
dec
roll
jns
pop
into
mull
mov
lock
inc
cli
ret
inc
fidivl
mov
jno
xor
js,pn
push
push
pop
in
inc
inc
mov
out
sbb
sbb
push
jnp
cld
in
sbb
pop
xor
jns
inc
jecxz
idivl
mov
mov
in
fbstp
bsr
jne
wrmsr
lret
in
repnz
jge
test
sbb
aam
sbb
mov
mov
jmp
jns
jns
push
pop
dec
ret
ss
push
mov
mov
xchg
xchg
movsl
ficoml
lods
movsl
arpl
mov
mov
jl
jge
ret
andl
out
div
hlt
add
mov
movsb
ja
add
push
stc
or
mov
jae
js
ljmp
xor
sarb
cmp
cmp
lret
stos
cs
jns
nop
ret
adc
fistpll
push
mov
int
popf
sub
cli
dec
test
and
pop
ljmp
loope
inc
mov
jne
icebp
inc
aaa
insb
dec
rcr
jmp
mov
stc
jae
sub
and
leave
jno
push
add
shlb
sbb
push
mov
in
ficompl
xchg
popf
hlt
jbe
mov
call
aas
mov
and
aad
fisubs
cmp
adc
adc
xchg
ja
mov
fimuls
jne
mov
adc
dec
outsl
je
in
fdivr
lret
data16
cmc
xchg
sahf
jne
fstps
jb
shl
in
cmova
mov
mov
sbb
jge
pop
cmp
sub
fistps
mov
push
inc
stc
sbb
xor
orl
mov
jecxz
lret
and
xchg
jecxz
in
cmpps
gs
stos
decl
jp
adc
mov
mov
in
or
call
push
cs
fistl
jno
ret
mov
aas
mov
sub
lea
out
xor
hlt
and
in
adc
dec
addb
pop
cli
push
xor
mov
or
pop
push
cmp
sbb
in
mov
in
pop
push
scas
sbb
mov
add
push
insb
stos
fsts
stos
dec
int3
hlt
in
mov
mov
call
mov
fiaddl
sti
cli
ja
xadd
or
inc
mov
insl
inc
and
inc
out
les
cmp
sub
dec
push
push
xlat
jl
fldenv
cmpsl
dec
adc
mov
repz
sbb
pop
fistpl
inc
out
negl
xchg
cltd
mov
in
dec
push
adc
cmp
aad
pop
mov
fsubp
daa
dec
mov
mov
pop
dec
test
hlt
andb
nop
or
addr16
or
daa
inc
repnz
enter
mov
gs
xor
mov
mov
mov
std
jne
fisubs
cs
pop
sbb
and
inc
ss
stos
andl
push
inc
imul
mov
int
sbb
push
sub
mov
fiaddl
ret
icebp
sbb
add
dec
repnz
fcoml
cmp
push
call
mov
xchg
out
int3
push
in
xchg
add
popa
out
pop
mov
xchg
sub
fdivl
sbbl
mov
or
dec
loope
cmp
les
fisubs
pop
aaa
mov
test
xchg
sbb
fnstenv
jno
repz
fcmovnbe
aaa
push
sbb
repz
mov
fldt
xchg
push
sbb
mov
into
js
fisubrs
jb
pop
jnp
or
push
xor
fwait
movsl
rol
add
lret
outsl
or
and
add
mov
cmp
mov
mov
cmp
es
add
ja
insb
nop
out
cmp
les
pusha
adc
aad
cmp
jp
and
stc
fdivr
push
fisttpl
fisttps
hlt
je
and
fistps
bound
jge
adc
pop
sbb
rorb
inc
sti
mov
stc
out
mov
insb
pop
pop
pop
in
pop
xlat
pop
cmp
enter
test
ss
and
lret
iret
stc
lock
inc
cmp
cmp
pop
ljmp
sub
mov
test
inc
test
mov
cmp
popa
pushf
js
arpl
ficompl
cltd
in
sub
fists
cli
fisubrs
push
jae
js
fmuls
push
repz
jae
sti
xor
fwait
sub
out
push
bound
jp
add
xor
xchg
jl
stos
test
nop
stc
sbb
lret
mov
sahf
mov
xchg
rclb
and
lds
lods
jmp
ja
add
aas
jecxz
jne
cmpunordps
inc
and
mov
mov
pop
loopne
lds
outsl
in
jecxz
inc
mov
or
fildll
stc
lock
rcrb
loope
and
or
das
sbb
push
and
xlat
or
pop
mov
jecxz
mov
inc
sub
sbb
xor
frstor
push
mov
pop
jg
incb
or
es
mov
xor
lods
pushf
rorb
inc
lods
sbb
sbb
mov
sub
mov
and
out
aad
lods
test
mov
jno
xchg
inc
hlt
xor
js
int3
xor
fistl
ficompl
cmp
add
inc
sbb
lcall
push
lock
xor
cmpsl
cld
mov
lods
mov
xchg
push
outsb
push
adc
inc
mov
adc
jo
aad
data16
cmp
xchg
push
xchg
in
mov
stc
mov
adc
rclb
movsl
loope
or
cmp
aaa
or
insb
clc
or
cmp
mov
scas
sti
andnps
cld
mov
cmp
nop
jns
out
sub
addr16
scas
jmp
and
sub
pop
push
dec
push
mov
mov
push
push
xchg
sub
mov
dec
or
fcmovnu
jb
pop
fsubs
neg
xchg
xorb
lock
sub
jmp
add
sarl
jp
dec
sti
or
and
cmp
jo
movl
test
lea
mov
mov
fcoml
xor
mov
ljmp
or
sti
imul
push
arpl
dec
jle
lea
adc
sti
mov
and
call
jmp
out
jnp
xchg
push
stc
sub
ficoms
jbe,pt
sub
jecxz
jmp
stos
fistpl
jno
jo
lea
mov
jge
adc
mov
add
lds
stc
shrl
loopne
push
orb
jl
call
lds
roll
push
pop
mov
sbb
repz
loope
leave
jmp
push
inc
std
fstpl
adc
pmuludq
cmpsl
adc
mov
into
dec
dec
xor
insl
push
mov
or
adc
mov
js
mov
loop
add
mov
lret
xlat
pop
adc
arpl
inc
iret
inc
jl
inc
sbb
cli
push
sti
scas
ror
mov
hlt
popf
testb
xchg
xchg
mov
pushf
or
leave
rclb
lahf
sahf
fimull
sub
neg
inc
shll
add
iret
mov
mov
jae
and
shll
pop
adc
call
mov
cld
popf
and
jg
push
std
insb
movups
in
pop
gs
jno
pop
dec
adc
dec
sbb
mov
mov
adc
xor
inc
add
out
in
shl
xchg
xor
xor
pusha
push
rclb
in
out
ret
cs
cmp
and
adc
pop
negl
dec
scas
xchg
pop
xchg
sub
inc
call
out
cmp
push
hlt
dec
jg
sbb
push
stos
jl
inc
jne
sub
xor
jbe
mov
mov
inc
xorb
jno
insl
popa
clc
cmpsl
sti
ja
movsl
sbb
mov
xchg
jae
and
and
dec
insb
in
in
lcall
sbb
mov
lock
cmc
dec
loope
mov
out
test
xor
mov
aas
shrl
fidivs
sbb
mov
dec
mov
cmp
cld
mov
enter
inc
pusha
testl
cmp
push
mov
ja
xor
pop
repz
dec
ret
xchg
jmp
into
and
imul
test
sbb
jp
outsb
push
out
inc
aas
inc
sub
jae
out
add
test
jmp
cltd
adc
pushf
xchg
lods
jno
shr
ss
lods
inc
repz
dec
pop
sarl
repnz
push
str
sbb
jne
add
or
out
pop
hlt
inc
push
call
cmp
aad
loope
into
adc
xchg
inc
and
add
inc
scas
cmp
xor
ljmp
mov
cmp
pop
sarb
adc
sub
frstor
inc
cmpsb
fnsave
jns
imul
push
fimuls
xor
test
pop
mov
iret
inc
test
mov
sbb
adc
pop
inc
sub
xor
outsl
lret
cmp
push
loop
push
xchg
mov
jnp
cmpb
fs
sbb
aad
mov
into
adc
leave
out
and
aas
mov
dec
das
xchg
push
sbb
insb
pop
rcl
fmuls
das
adc
jle
pop
addb
into
dec
adc
or
cli
xchg
pushf
shll
xlat
in
adc
into
jbe
adc
out
mov
mov
jae
xor
inc
lock
add
clc
pusha
mov
mov
xchg
out
test
pushf
fnstenv
mov
fs
int
mov
rcl
pop
lret
xchg
rcr
mov
cltd
mov
mov
scas
add
mov
sub
add
push
test
scas
ret
gs
cmc
int3
pop
xor
push
in
addr16
and
xchg
dec
xor
and
mov
xchg
pop
pop
imul
stc
cmpsl
dec
popf
or
sbb
sbb
ficoml
popa
mov
stos
lea
xor
push
inc
pop
push
adc
sbb
add
pop
out
ja
jbe
inc
out
jb
jecxz
mov
jo
test
mov
xchg
xor
pop
jle
out
mov
pop
jecxz
inc
loop
xchg
sub
repz
fsubrs
dec
incb
rorl
std
add
addr16
cmp
pop
fwait
aas
in
pop
mov
into
mov
in
lods
lret
adc
mov
adc
jle
negl
sti
xchg
dec
jmp
xor
xor
or
add
xor
mov
outsl
mov
xlat
lahf
fidivrs
add
dec
dec
xlat
mov
jae
in
dec
mov
pop
lret
lcall
sub
add
mov
insl
hlt
leave
push
aaa
jle
cmpsb
scas
mov
mov
movsb
mov
sub
inc
mov
leave
xchg
mov
mov
xor
sahf
ds
push
js
std
stc
fildll
cmp
dec
shll
dec
xchg
adc
dec
or
cld
out
push
out
hlt
mov
push
subb
lods
xchg
jno
inc
inc
dec
call
and
movsl
sarb
out
and
xor
cmp
cmp
shrl
aas
out
ficompl
mov
add
lods
sub
lods
sbb
bound
out
cmp
mov
or
pop
mov
sbb
pop
fwait
mov
xor
fistpl
movsb
cmp
jnp
mov
cs
cmp
fcmovne
imul
and
push
cmp
xor
movsb
push
out
daa
stc
xor
fsts
jbe
add
lods
aas
lock
jbe
jp
ror
mov
aaa
cmp
push
fcoms
scas
sbb
fidivs
test
ljmp
repz
push
mov
pushf
xchg
dec
mov
dec
testl
loop
jo
push
jmp
lods
lea
mov
lods
jp
inc
jo
push
xchg
test
push
imul
testb
cwtl
xor
fwait
stos
ljmp
push
arpl
sub
lods
lcall
out
je
fsubrl
daa
aad
push
std
les
cld
les
aas
cmp
inc
les
fwait
xor
cmc
mov
minps
jle
mov
mov
movsl
dec
cmp
test
sub
fistl
dec
fld1
and
imul
in
add
ja
dec
aam
mov
dec
jg
int3
push
lret
xchg
inc
fsub
inc
jl
mov
lea
ret
dec
jg
scas
gs
sub
push
leave
pop
stos
pop
aad
arpl
cmp
daa
sub
int3
mov
xor
iret
aaa
cmp
loop
push
scas
or
cmc
add
dec
fcoml
call
sahf
pop
fwait
arpl
mov
les
movsb
shr
sub
push
mov
cmp
arpl
dec
xor
xor
iret
movsl
pmaxub
shlb
movsl
or
nop
cmp
inc
mov
ret
test
sti
jb
sbb
push
and
sti
sbb
pop
test
sub
andb
js
int3
adc
cmpsb
aas
jmp
sub
pop
cld
pop
popf
stos
adc
jbe
loop
mov
hlt
fsubrs
and
into
roll
push
call
mov
pop
stc
mov
mov
loope
inc
jmp
inc
sti
cld
xchg
jge
jae
sbb
add
jge
insb
call
pusha
jbe
pop
and
xchg
inc
sub
sub
sbb
push
insb
sub
pop
inc
mov
cmc
lret
adc
aam
cmc
test
cmp
bound
movsl
les
xor
daa
lods
xchg
mov
cwtl
fldt
es
lds
xchg
dec
cmp
xchg
pop
mov
stos
push
dec
lcall
dec
mov
repz
pop
paddw
push
mov
dec
test
out
or
notl
lret
cs
es
in
es
pop
sub
push
mov
pushf
sub
jle
xor
xor
and
mov
stos
mov
add
adc
lret
bound
xor
neg
ds
scas
in
enter
sarb
mov
mov
jbe
mov
sti
loope
out
xor
jae
ret
std
lret
mov
jg
push
or
inc
decl
repnz
mov
stc
iret
mov
int3
and
lods
andl
scas
mov
out
cld
mov
ss
add
popf
sbb
mov
arpl
jbe
fsts
ljmp
sub
pop
or
jo
mov
shl
rclb
mov
js
icebp
ss
out
mov
adc
mov
lea
dec
fs
ret
mov
push
cmp
pop
in
lret
repnz
or
push
sti
xor
subl
or
push
lret
mov
sbb
fmull
sahf
jp
pop
push
jg
dec
das
xchg
dec
arpl
popa
fstpl
or
lea
or
stos
cmp
jae
jne
aad
sbb
cld
sbbw
dec
outsb
dec
xor
subb
or
and
xor
clc
xchg
or
cmp
sub
outsb
jecxz
sbb
mov
imul
loopne
or
dec
push
jnp
ficoms
mov
pop
xor
mov
iret
ret
pusha
adc
popf
sbb
gs
pop
lods
cmc
scas
mov
test
stc
jge
and
js
popa
and
xor
std
test
dec
je
scas
pop
dec
mov
insl
push
inc
jb
in
cli
add
rcrl
mov
inc
cmp
fidivrs
out
mov
loop
aad
cwtl
cmp
or
jge
cmp
xor
in
mov
push
das
insl
xchg
ss
adc
lods
out
sub
lods
lds
jge
push
jmp
daa
pushf
cmp
hlt
push
stos
lret
icebp
inc
jnp
ja
cmc
fsts
fisubl
pop
add
mov
add
aaa
push
out
test
pop
sub
mov
mov
daa
jmp
push
hlt
cld
out
or
or
fsubs
mov
movzbl
adc
lds
daa
lods
jle
mov
push
icebp
dec
xlat
lahf
insb
shll
mov
add
or
in
cmpl
push
aad
mov
inc
orl
leave
sbb
nop
in
inc
aad
and
sbb
ljmp
cltd
cwtl
add
test
int3
cld
and
ret
mov
inc
add
cli
aas
adc
sti
adc
les
add
xchg
or
aad
in
xor
fs
dec
inc
leave
movsb
ss
mov
repz
pop
call
jecxz
test
dec
in
scas
iret
xchg
aas
das
lahf
fstpt
bound
and
nop
int3
mov
sti
adc
mov
mov
arpl
jp
popa
sub
add
sysenter
jecxz
in
out
push
mov
xor
insb
insb
sbb
popf
cmpsl
dec
ss
push
je
and
jns
stc
xchg
popa
or
inc
dec
push
mov
and
les
fiaddl
inc
jmp
xchg
gs
add
and
pop
int
adc
shrl
adc
inc
sub
jns
push
push
insl
das
test
movsl
data16
int3
lods
ret
popf
dec
pop
xor
iret
dec
jo
jo
insb
scas
ret
out
mov
mov
mov
cmp
and
cwtl
test
jns
cmp
loopne
jnp
dec
jb
and
xchg
test
and
pop
or
rcll
lods
out
and
ret
out
mov
push
cwtl
andb
xchg
add
leave
mov
push
mov
jbe
orl
add
repnz
cmp
dec
mov
sub
sbb
outsl
lds
push
addr16
sub
movsl
pushf
popf
xchg
xor
cmp
add
loop
jno
movsb
ret
add
outsb
push
xlat
in
pop
lock
je
fnstsw
and
xchg
clc
adc
je
les
jge
xchg
adc
jbe
pushf
mov
jp
out
push
popf
popa
sbb
xor
pushl
aam
pushf
mov
push
sti
popa
lods
popa
sub
insl
jp
scas
lock
dec
push
in
xchg
fcomi
add
dec
lret
sti
inc
lods
and
sbb
std
adc
add
arpl
mov
icebp
rorb
or
cli
adc
cltd
cmc
out
jno
ror
shll
push
add
scas
in
and
push
in
dec
loop
cs
outsb
mov
xor
sub
cs
mulb
mov
jbe
mov
iret
add
xchg
js
dec
cwtl
xor
mov
or
add
lods
xor
add
enter
daa
imul
add
dec
or
int3
xor
enter
bound
mov
jge
cltd
push
sub
inc
loope
jle
xchg
mov
repnz
div
mov
fnsave
xchg
pop
fidivl
add
push
push
jae
in
cmpsl
outsb
les
add
cmp
aas
mov
dec
mov
jno
jp
sbb
push
sahf
scas
stos
nop
jecxz
scas
insb
dec
push
mov
xchg
test
mov
imul
mov
adc
lock
loope
push
outsb
mov
and
jmp
aas
insl
pop
ret
std
adc
cmp
or
loop
jle
mov
imul
iret
mov
enter
sub
push
mov
stc
repnz
les
sbb
js
mov
repz
sub
addr16
mov
mov
cmp
enter
xor
lahf
mov
jbe
add
push
jb
pop
iret
adc
dec
cmpsl
bswap
mov
test
xlat
shl
inc
xor
or
or
ss
iret
mov
das
sbb
pop
adc
sbb
sbb
mov
jl
jns
xor
jbe
sbb
arpl
movsl
faddl
in
sahf
or
dec
xchg
dec
lcall
rcrb
testb
into
sbbb
gs
lds
add
mov
xchg
fidivs
hlt
ja
sbb
and
lock
jl
mov
xorb
call
pusha
mov
les
push
dec
xchg
and
sbb
inc
xor
add
add
sub
ds
addr16
mov
add
mov
adc
pop
cld
or
sub
pop
cs
inc
jmp
lcall
mov
fstl
pop
sbb
cli
jae
xchg
pop
call
sbb
mov
pop
dec
adc
inc
rol
gs
jp
xchg
pop
jne
jg
dec
xchg
xchg
sbb
icebp
sbb
sub
adc
repnz
mov
push
push
add
scas
push
pop
loope
cmp
mov
loope
rol
pop
movl
pop
pusha
xor
hlt
jnp
pop
xchg
sbb
nop
sub
and
call
popa
sub
adc
mov
or
jmp
push
sti
pop
dec
pop
lcall
les
dec
or
leave
sbb
clc
push
or
xor
push
and
adc
add
mov
dec
enter
int3
fidivs
dec
insl
fnstcw
push
xchg
mov
clc
jl
js
incl
push
inc
pushl
sahf
xlat
fidivrs
insl
outsb
shlb
push
negb
xor
mov
xor
stos
xlat
repz
flds
ret
or
and
and
aas
pushf
inc
jo
dec
mov
jle
pusha
mov
shl
int3
shll
mov
inc
mov
mov
mov
jge
adcl
jl
and
adcl
dec
pop
inc
pop
fiadds
cmp
xlat
popf
or
mov
cmp
sub
xchg
mov
aas
and
lret
pop
jns
jecxz
loopne
push
insb
hlt
fiadds
push
inc
cmpl
lods
mov
inc
fadds
mov
jns
mov
mov
shrl
cwtl
out
cmp
stos
cmpl
mov
pop
add
xor
std
push
pop
mov
sti
push
or
in
rolb
lret
lcall
push
inc
addb
test
xlat
xchg
str
inc
cmpsl
jmp
std
ret
or
insl
adc
aam
lods
sarb
mov
ljmp
hlt
sbb
aaa
mov
out
jae
dec
xor
pushf
mov
hlt
dec
inc
dec
jno
lret
cmc
cli
cmp
ja
jl
and
mov
jmp
xlat
shll
xor
dec
adc
mov
out
aad
fidivrs
sub
aaa
xchg
imul
add
push
sbb
and
or
es
scas
lret
or
out
inc
imul
or
xor
jae
cltd
xor
or
jg
pop
inc
add
in
cmc
js
and
das
insl
ret
mov
mov
adc
and
stos
cmp
sbb
dec
cltd
jg
sarl
sbb
pop
imul
xchg
sbb
dec
insl
sbb
xchg
and
adc
pusha
mov
dec
sahf
jnp
into
mov
mov
mov
icebp
out
add
mov
data16
dec
int3
daa
std
mov
int
mov
mov
and
outsl
adc
and
stos
lock
in
inc
mov
popa
sbb
stc
sar
push
pop
cmpsb
sbb
mov
mov
jg
adc
dec
cmp
or
lods
mov
xlat
mov
stos
iret
xchg
les
xchg
enter
repz
adc
adc
mov
sub
pop
push
orl
lcall
inc
repnz
out
insb
push
test
test
xchg
rcl
mov
dec
fs
inc
xchg
insl
or
jmp
mov
xchg
push
mov
pop
sbb
push
cmp
jge
pop
pushf
pop
adc
or
inc
test
test
aas
into
dec
cmp
hlt
sub
inc
inc
xlat
stc
rep
push
sub
inc
mov
mov
pusha
daa
xchg
repnz
outsb
jns
lret
enter
sbb
sub
repz
xor
inc
lods
jae
add
into
and
mov
sbbl
pop
pop
arpl
sub
xchg
dec
inc
adc
push
mov
inc
inc
mov
sti
sti
or
sub
rcrb
adc
push
adc
cmp
out
dec
je
and
popf
iret
jg
aad
cmc
sub
imul
out
mov
aam
orb
mov
in
clc
or
inc
cmp
fstl
dec
xchg
loop
faddl
les
jne
inc
cmpl
cmp
cmp
leave
sbb
xchg
jge
cs
inc
inc
mov
jg
dec
cltd
lea
lret
std
into
int
jae
repz
mov
sbb
push
or
or
addr16
push
addr16
jb
mov
and
mov
rcrl
mov
xchg
add
pop
mov
rcll
jg
test
mov
xor
sbb
inc
addr16
mov
std
jp
dec
push
jp
sub
dec
bound
jbe
jne
cmp
mov
jno
and
loopne
push
adc
fistps
inc
xor
xchg
jae
mov
pop
decb
arpl
out
stos
jl
and
fs
sub
jo
scas
int
jle
lret
pop
js
adc
add
xchg
sub
rol
adc
xchg
jo
add
loope
icebp
inc
mov
stos
sub
mov
mov
fmul
mov
loopne
or
popa
push
pop
pop
ret
mov
lcall
stc
pop
jbe
bound
push
and
adc
insl
leave
pop
call
sub
inc
cmp
xor
sbb
andb
das
rolb
ficoml
int
into
lds
dec
sub
ds
jmp
negl
popf
add
repz
mov
inc
les
or
arpl
gs
pop
mov
dec
in
mov
mov
sub
sub
push
rcrb
cmp
jmp
adc
xchg
inc
cmp
cs
jg
js
xor
int3
or
xchg
xchg
mov
xor
into
push
cmpsl
enter
mov
out
xchg
cmpsl
pop
xchg
lods
sub
xor
test
dec
jb
jp
jge
lret
rcl
mov
lret
inc
xchg
push
xor
xor
cmpsl
mulb
xor
testl
jo
or
sbb
pushf
cmp
scas
mov
sub
cmpsb
adc
shrb
and
fildl
popf
inc
sub
jb
cmc
and
push
es
xchg
sbb
inc
inc
sub
gs
lahf
dec
pop
push
adc
xchg
sub
ss
gs
cmp
or
fstps
in
ret
rorb
xchg
mov
pop
pop
mov
sahf
test
aam
sbb
dec
call
dec
push
iret
ret
lds
push
adc
test
pop
add
add
inc
xlat
inc
cmp
sub
test
add
and
aad
das
popa
popf
minps
xor
icebp
in
mov
aad
test
sub
icebp
pop
sbb
iret
jge
sti
xchg
bound
sti
sub
test
jge
dec
push
stc
aad
in
in
sub
pop
dec
or
pop
ret
popa
push
adc
and
cs
jle
xchg
push
xchg
shrl
cmpb
sub
imul
mov
fcomps
sbb
sbb
jb
jno
nop
lods
dec
in
es
cmp
mov
ror
jp
add
lcall
addb
pop
push
mov
cmc
fildl
xlat
je
mov
lahf
int3
pop
pop
mov
rcrl
lahf
test
popf
mov
or
jecxz
loop
push
cmp
out
sbb
rcll
into
in
stos
push
out
iret
repz
lret
push
adc
adc
jle
inc
jnp
jle
arpl
mov
lcall
sbb
loope
int
popf
nop
inc
xor
shl
rcl
sub
add
test
pop
pop
jnp
clc
adc
ljmp
mov
mov
flds
add
cmp
negl
push
inc
insb
lds
adc
mov
mov
insl
rol
xor
iret
imul
jae
data16
adc
pop
stos
cltd
mov
addr16
mov
lock
mov
jl
push
pop
movsb
jp
lea
cmp
sub
cmp
rcll
and
repnz
fmull
loop
repnz
inc
cmp
aad
mov
jbe
pop
dec
or
sub
inc
leave
push
xchg
pop
jle
mov
jo
mov
movl
inc
enter
aad
std
gs
jno
mov
xchg
aaa
test
sbb
sbb
decb
notb
clc
xor
mov
jp
push
sbb
aaa
push
fadd
cs
pop
cmpl
fwait
popl
mov
hlt
leave
nop
enter
es
xchg
shlb
clc
test
lret
mov
mov
dec
ret
decl
xor
cmp
xchg
int
aaa
jg
addr16
or
dec
jge
ds
or
and
repnz
inc
add
inc
frstor
aas
and
jo
and
movsl
pop
sub
testl
and
setae
xchg
imul
test
push
xchg
pop
rorb
inc
mov
ret
out
aaa
cmpsb
sbb
mov
jae
jno
rcl
imul
cmpsb
cmpsb
pop
dec
lds
sbb
cwtl
in
adc
adc
mov
push
mov
ror
pop
ret
sbb
cld
xor
lods
cmp
aaa
data16
and
xor
lds
xor
notl
into
or
rol
rcl
shrl
leave
push
incb
jecxz
jl
subb
and
out
and
mov
mov
ret
lods
mov
movsl
ljmp
divl
fidivl
or
int
out
lret
push
lock
pushf
xor
mov
or
lahf
fimull
push
icebp
push
imul
pop
sub
push
sub
stc
cmp
and
lds
test
dec
sbb
loop
in
outsl
in
or
push
mov
insb
movsb
mov
sub
push
or
mov
dec
divps
imul
popa
cmp
cmp
out
test
scas
mov
push
in
fdivrl
dec
and
push
pop
dec
outsb
push
mov
lods
imul
mov
mov
into
adc
sub
push
push
dec
lcall
scas
xchg
fmull
outsl
mov
sbb
fwait
or
push
aas
arpl
mov
and
js
inc
jl
and
adc
pop
pop
jle
adc
or
mov
out
dec
insb
mov
imul
inc
or
xchg
pop
xor
pop
filds
adc
cwtl
in
movsl
fstps
inc
xchg
pop
pop
pop
mov
jp
sbb
push
addr16
mov
xchg
daa
mov
out
call
repz
push
clc
add
pop
pop
fsubrp
adc
adc
int
sarb
add
or
loop
ret
sahf
cmpsb
jo
lods
mov
cmp
je
dec
test
jp
arpl
sub
cs
lcall
rolb
pop
lods
das
mov
jne
mov
mov
ret
xchg
insb
decb
xchg
popf
daa
mov
mov
and
popa
movsb
mov
and
call
jnp
arpl
ficoml
inc
fsubl
push
ds
pusha
and
cwtl
or
adc
imul
lret
xor
jbe
int
pop
pop
sub
fwait
aad
jns
fwait
inc
add
enter
in
push
shrl
ss
pop
loope
xchg
insl
add
mov
mov
cmp
outsl
loope
cmp
mov
jbe
dec
fwait
fwait
es
outsl
fwait
sbb
pop
hlt
cmp
cld
inc
cld
push
cld
inc
pop
mov
cs
mov
jno
aam
sbb
cmpsl
mov
cld
sti
adcl
icebp
xchg
ljmp
adc
inc
cmp
and
frstor
into
cmp
push
mov
cltd
fmul
sbb
pop
adc
inc
dec
add
lcall
jl
aaa
pop
scas
mov
xorl
inc
out
mov
movsb
shlb
mov
sub
and
lahf
push
pop
pusha
mov
mov
xor
adc
test
insl
jecxz
xorb
xor
xorl
jae
jo
push
push
stos
adc
lds
shlb
xor
xchg
stos
adc
jl
out
mov
sub
jp
in
inc
icebp
jle
cmc
add
cmpsb
out
aaa
or
mov
push
aad
lret
stos
rclb
xchg
pop
mov
insl
mov
out
fiaddl
xor
push
dec
incl
or
and
dec
push
sbb
and
xor
cmc
jno
or
fs
push
out
and
enter
jp
adc
aad
andb
rcrb
sub
xor
cmp
pop
jbe
push
sbb
nop
cmc
push
loope
push
jle
cmp
mov
or
push
xor
adc
mov
xchg
nop
int
dec
push
lret
lea
sbb
imul
jns
and
add
lods
leave
add
imul
add
jl
xor
cmpsb
jp,pn
ljmp
cld
jg
pop
cmc
repz
push
push
data16
xchg
xor
jg
sbb
daa
int
in
jge
jae
aaa
ja
and
pop
mov
push
xor
gs
sub
sarb
jnp
or
rcrb
fsts
mov
outsl
lcall
ret
icebp
in
loopne
mov
pop
push
inc
jecxz
and
int3
dec
jecxz
or
cmp
out
push
adc
dec
inc
pushf
fwait
pop
sbb
mov
stos
rcl
inc
push
and
shr
stos
cmc
cmp
pop
test
in
daa
dec
mov
jns
mov
and
in
fistl
jne
call
xchg
testb
sub
popf
cmp
and
push
fcmove
sub
ds
adc
xchg
jnp
jle
out
outsl
cltd
into
int3
cmp
pop
and
arpl
jp
lahf
mov
addl
inc
inc
bound
inc
sub
call
fsubrl
ss
mov
push
addl
xor
pusha
push
mov
cmp
push
or
es
mov
push
inc
frstor
test
push
xchg
imul
std
sbb
jns
sbb
imul
mov
xor
and
pop
cmp
sarl
dec
int3
mov
and
loope
jo
test
test
sub
and
mov
out
imulb
cmpb
cmc
xor
xor
sub
movl
and
aaa
andb
sbb
out
sbb
dec
cwtl
call
movsb
mov
mov
xchg
mov
lret
xlat
imul
and
cli
rclb
mov
sbbl
mov
add
pop
cs
daa
js
sbb
sub
addl
das
pop
push
adcl
cmpsb
mov
sbb
sub
inc
add
sbb
lds
xlat
fwait
leave
imul
inc
adc
lds
or
out
xor
xchg
bound
movsl
pop
pop
imul
lret
sbb
sbb
aad
pop
sub
jno
pop
xchg
cmp
call
std
pop
lahf
add
fwait
xchg
pop
mov
dec
push
fnstsw
sbb
xchg
iret
jo
stos
sub
popa
adc
dec
mov
adc
xchg
cmp
xor
push
outsb
sbb
scas
dec
out
aas
sub
sti
stos
jmp
sub
mov
mov
jg
pop
mov
mov
hlt
insl
inc
fbstp
loope
cmp
pop
cmpsb
popw
and
xchg
adc
mov
add
nop
xor
aad
lahf
out
test
outsl
jne
scas
imull
in
mov
fucomip
sti
js
push
outsb
xchg
test
pushf
add
mov
cmc
dec
dec
es
xorl
test
pop
adc
es
push
mov
sbb
cmp
aas
dec
test
adc
sbb
mov
adc
jns
inc
or
sti
popf
add
cmp
fadds
fidivrl
push
xchg
scas
sub
jb
sbb
xor
int3
cmpsb
sbb
lcall
dec
pop
ja
sub
in
out
push
lcall
es
icebp
inc
sub
in
mov
mov
xor
pop
sbb
xchg
pop
pusha
sahf
loop
cmp
jl
imul
and
pop
ja
push
ret
inc
cmpsl
mov
sub
cwtl
js
dec
sbb
out
movsb
add
aam
es
xlat
pop
imul
sub
dec
roll
xchg
je
sahf
sbb
pop
ljmp
jae
ret
fistpl
das
das
mov
dec
shll
jns
jnp
sbb
cmp
cltd
adc
xor
test
rol
movsb
adc
lods
add
cli
jno
pop
sub
sar
fwait
jae
lock
les
cmp
or
pop
cmc
mov
cmp
mov
cmp
jno
mov
in
in
inc
mov
mov
nop
rcrl
jns
addr16
out
sti
xchg
fwait
mov
xchg
cmp
pop
xchg
rep
dec
mov
pop
pop
or
cli
mov
pop
movsl
jl
fmull
add
xchg
lcall
scas
test
int3
test
aaa
sub
mov
std
nop
je
test
movsb
pop
std
stc
int
ljmp
into
bound
and
into
shlb
sbb
les
test
ds
inc
sub
add
adc
bswap
mov
xlat
mov
iret
jmp
fucomp
cmp
xchg
push
decb
xlat
je
sbb
fdiv
shl
cltd
pop
cli
lahf
lret
imulb
mov
dec
test
jle
cmp
clc
dec
fidivl
out
in
cltd
pop
and
sar
ja
jl
jae
das
mov
mov
fucomp
pop
mov
in
push
sbb
lods
clc
dec
iret
dec
jle
dec
lea
loopne
stc
xchg
or
dec
xchg
mov
adc
push
mov
push
push
daa
add
sbb
fldcw
cmpsb
dec
and
mov
gs
jg
mov
mov
cld
popf
out
ja
jno
adc
mov
jmp
add
insb
add
dec
or
cmc
cmpsb
clc
adc
repnz
out
sub
jg
outsb
xlat
in
int
clc
mov
das
std
daa
out
xchg
pop
fidivl
mov
add
mov
enter
xchg
shrb
pushf
mov
pop
andl
ret
scas
int3
xor
xor
and
lea
and
scas
test
jge
andb
cmp
outsl
insl
stos
popf
rclb
loope
mov
cmp
jg
push
push
push
push
cmp
xor
xchg
jp
bound
pop
mov
xchg
jno
pop
xchg
mov
jns
xor
ror
or
fcmovnb
mov
loopne
jmp
push
cmp
arpl
lea
leave
cli
jnp
pusha
scas
xchg
aad
cmp
pop
dec
lock
movswl
mov
sbb
inc
jae
jecxz
std
popf
out
dec
or
mov
fs
jne
mov
add
scas
mov
and
das
xor
mov
inc
cmp
pusha
loopne
mov
add
sbb
test
mov
call
fldl
aas
leave
movsb
xlat
fcompl
movsb
fs
mov
cmp
and
popf
jmp
in
jo
das
add
and
int3
popa
aas
andl
test
js
jae
inc
insb
aas
mov
xor
pop
ja
arpl
push
leave
inc
push
lods
mov
xchg
mov
mov
mov
fs
or
inc
or
subb
repz
adc
mov
lods
scas
push
mov
lahf
cmp
pop
nop
bound
imul
outsl
mov
cwtl
mov
cmp
das
popa
repnz
mov
scas
add
in
xchg
pop
mov
mov
push
pop
fists
imul
mov
andb
in
inc
fs
xor
scas
jnp
sahf
lods
jp
xchg
jno
cmpb
adc
dec
outsb
pushf
sub
ljmp
adc
fwait
lret
das
cmpsb
cmp
jne
ss
pop
fcomps
shlb
call
mov
pop
nop
test
mov
cltd
mov
dec
lods
jnp
sbb
or
jnp
jnp
xchg
pop
adc
xor
and
and
jne
sub
incl
push
rcl
stos
mov
pop
in
mov
ficompl
jbe
rep
or
nop
dec
aas
xor
mov
xchg
scas
sub
icebp
sbb
dec
jl
push
jle
adc
jae
dec
jnp
imul
xchg
neg
out
test
dec
into
pop
aas
sbb
cltd
scas
inc
ds
dec
mov
in
mov
fs
adc
out
iret
mov
mov
data16
js
inc
xor
popf
sahf
jp
jae
add
sbb
dec
xchg
out
popa
jno
dec
adc
xchg
icebp
loope
ss
out
push
mov
xchg
ret
ds
or
fsubl
es
dec
outsb
pop
dec
inc
ds
inc
stc
adc
and
stos
lcall
popa
push
inc
adc
fmull
js
mov
cmpsb
je
out
jmp
or
mov
inc
decl
push
xchg
out
jl
pushl
cwtl
lock
dec
cs
js
div
cwtl
hlt
fwait
add
clc
sub
and
das
jno
adc
scas
mov
sahf
fcoms
imul
mov
inc
jl
pop
push
jnp
fnstcw
aam
dec
or
pop
lods
add
jp
xor
pop
imull
pop
popa
insl
mov
aas
xor
leave
nop
adc
loope
fldt
shll
xor
dec
lds
xchg
sti
mulb
idivb
divl
mov
or
mov
out
lret
out
push
mov
in
sub
xor
mov
inc
fistps
jge
movsb
inc
jo
pusha
sub
outsb
lret
sub
sub
adc
enter
mov
sub
arpl
sbb
nop
lahf
test
loopne
adc
aam
and
arpl
fadd
cld
cmpb
xchg
out
xchg
pop
mov
les
push
jmp
sbb
inc
pop
outsl
push
iret
inc
mov
sbb
loope
inc
and
xchg
adc
shlb
sbbb
pop
enter
or
iret
pop
pop
jge
decl
into
cmc
daa
xor
je
lret
pop
cmpsb
les
out
jnp
and
int
stos
jbe
sbb
cli
mov
mov
sbb
div
adc
dec
wrmsr
sub
hlt
push
shl
mov
fistps
call
mov
aam
enter
shl
stc
jnp
and
std
push
sti
jnp
fmuls
aaa
dec
imul
and
xchg
in
or
andl
jo
cmc
cli
pop
dec
addr16
jg
out
mov
cmpl
xor
js
ret
out
jns
or
lds
jl
mov
mov
cmp
stc
push
dec
dec
sub
xchg
test
sub
adc
push
je
popf
mov
std
xchg
jns
cmp
fnstsw
insl
xchg
test
add
mov
adc
and
fs
sub
mov
push
mov
and
push
mov
xchg
fs
jl
cmp
mov
dec
dec
or
push
add
pop
pop
xor
pusha
subl
xchg
sub
leave
xchg
aas
push
and
xchg
fldenv
orb
stos
add
mov
das
inc
adc
bound
jecxz
cs
sub
jne
fadd
dec
sbb
cwtl
sbb
fisubl
pusha
xchg
rclb
sbb
mov
pop
out
cmp
inc
incb
adc
sbb
jno
push
xor
jne
jp
jge
add
lods
vminps
jns
popa
dec
mov
xchg
pop
roll
push
shrl
and
dec
adcb
jnp
aas
mov
and
adc
jno
lods
add
test
lea
push
pop
outsb
xchg
repnz
add
shll
stos
pop
xorl
cmpsl
add
mov
mov
cld
lea
insl
dec
movsl
sub
mov
pop
aad
jns
xchg
mov
das
out
fsubrs
out
das
in
mov
add
xchg
mov
fs
lea
dec
test
cmp
xchg
push
std
or
gs
inc
popf
mov
pop
iret
fcomps
add
clc
pop
xchg
adc
or
sub
adc
or
aaa
pop
sti
pop
mov
jne
inc
mov
test
bnd
lea
lret
pop
test
xlat
frstor
sarl
push
pop
lock
stc
fdivrl
sbb
pop
scas
mov
jge
add
out
mov
enter
jae
ret
adc
xor
cmp
sbb
mov
pushf
out
fidivs
call
cmp
out
xchg
adc
mov
in
push
adc
out
scas
sbb
push
sbb
pop
lods
mov
dec
cmpsb
loop
andb
cld
dec
lahf
dec
or
clc
test
pop
shlb
test
leave
jmp
repz
popa
pop
inc
push
fwait
mov
stc
in
insl
jns
xor
xlat
inc
adc
lret
ret
enter
push
lods
mov
cli
push
pop
test
jbe,pn
fsubr
ss
ds
mov
icebp
frstor
jle
inc
test
cltd
mov
mov
mov
incb
sti
andb
push
and
aaa
fwait
pop
mov
xor
icebp
mov
clc
pop
int3
in
dec
adc
pop
scas
dec
xor
lock
sub
jb
data16
std
cltd
insl
leave
mov
mov
int
insl
mov
cmp
jae
sti
out
xchg
jle
cwtl
shl
lock
js
iret
mov
outsb
xor
pop
push
stc
mov
repz
cmpsb
jmp
cmpsb
add
insl
mov
push
clc
sub
mov
lcall
xor
and
xchg
sbb
adc
lret
mov
dec
mov
enter
ret
and
outsb
push
xchg
add
add
jp
mov
and
loopne
inc
pusha
int
hlt
lds
inc
frstor
into
loop
lret
fiadds
iret
ljmp
or
sbb
sbb
mov
push
xchg
enter
repnz
and
xchg
push
rcll
jg
mov
jp
mov
lea
and
movsl
cmp
xlat
sub
imul
movsl
xor
push
notb
loope
loop
adcl
jg
and
xchg
in
push
mov
mov
movsl
sbb
aas
add
mov
scas
clc
arpl
mul
or
fiadds
sub
sti
cld
sbb
stos
popa
daa
mov
inc
cli
mov
clc
jbe
rcrl
out
pop
sub
jae
pop
pushf
inc
fildl
idivl
mov
lds
push
or
xchg
hlt
add
ja
or
movsb
bound
sub
pop
scas
mov
pop
and
fwait
mov
push
dec
xchg
xchg
push
loop
ja
lret
dec
jp
add
dec
sbb
cmpb
cmp
mov
mov
mov
loope
adc
dec
inc
in
pop
ljmp
inc
dec
mov
aad
dec
popf
imul
push
pop
dec
repz
shlb
push
dec
iret
repnz
out
push
push
xor
pop
push
push
sub
sbb
inc
stos
pushf
mov
jle
nop
aam
scas
popf
push
in
add
movsb
adc
scas
lea
into
call
dec
test
add
pushf
pop
push
pusha
push
scas
popa
jne
imul
cmpsb
cmpsb
mov
call
scas
push
lods
lret
pop
inc
dec
fs
cmp
jo
shlb
sbb
lret
adc
mov
pop
mov
mov
adc
cltd
mov
insl
mov
cmp
sub
mov
jge
int3
pop
push
outsl
dec
push
syscall
push
mov
sub
lds
and
jae
lods
test
shr
jbe
push
icebp
sti
dec
imul
cs
cmc
xor
addl
jns
aad
adc
scas
lds
pop
sub
add
test
pop
push
or
xor
and
push
xor
jbe
cmp
adc
outsl
cmp
roll
mov
inc
and
movsb
sti
cltd
aam
popf
daa
jl
lret
mov
xor
movsl
int3
out
push
mov
mov
cmc
inc
mov
mov
leave
ret
pop
test
fdiv
lcall
jmp
ret
sub
mov
sbb
cmpsb
pop
sti
cli
dec
shlb
add
fs
fwait
jno
lds
pop
incb
or
clc
push
jge
stc
stos
and
inc
push
cli
hlt
adc
outsl
sahf
push
mov
jecxz
mov
push
sbb
xor
adc
mov
xchg
jno
inc
scas
imul
hlt
cs
fadd
ja
pop
pusha
mov
in
insb
repnz
int3
aas
jnp
arpl
in
cmp
lds
out
insb
mov
in
pushf
int3
xor
loope
xchg
stos
stos
and
addr16
dec
sbb
mov
movsl
clc
int3
jbe
loopne
andl
loop
inc
popf
xchg
mov
out
push
std
outsb
f2xm1
out
xchg
push
out
aaa
and
rcll
jno
arpl
daa
cltd
sbb
sub
rorb
xchg
xor
inc
push
xor
repnz
jbe
add
outsl
clc
xor
pop
sub
mov
jle
adc
or
sub
mov
inc
pop
clc
jecxz
rcll
test
push
lret
add
jp
xlat
inc
insl
jp
daa
mov
lds
loop
jo
iret
out
loop
out
push
int
sbb
push
mov
cmp
mov
scas
dec
mov
sti
js
pop
mul
scas
xlat
push
inc
sbb
xchg
dec
rorb
aaa
pusha
test
sbb
ljmp
lods
test
popf
icebp
mov
or
or
xor
je
or
out
rcrl
scas
sbb
cmp
and
push
lds
xchg
mov
imul
adc
dec
inc
out
jle
in
jp
je
pop
dec
out
cmp
push
push
bound
sarb
cs
stc
out
rcr
popa
sbb
jo
ret
repz
stos
adc
cmpsl
loop
daa
ficomps
mov
jge
push
push
dec
cld
int3
stos
pop
mov
mov
int
mov
cs
adc
aaa
fwait
outsb
mov
xchg
adc
dec
shrb
sbb
aas
adc
inc
pop
and
jge
es
sub
push
push
lea
lods
fstps
fcompl
enter
mov
and
inc
or
mov
dec
cmpsl
push
dec
or
subb
repz
or
fdivrl
das
cmpsb
sbb
addl
push
sub
filds
ret
gs
in
sbb
sbbb
sti
jecxz
sub
jl
inc
cmc
adc
hlt
add
sbb
push
inc
scas
mov
sarl
jne
jo
iret
adc
push
inc
scas
insb
rol
sbb
ljmp
dec
xor
mov
mov
mov
repnz
cs
rol
loope
movsl
mov
pop
movsl
pusha
enter
xchg
loop
mov
sahf
jmp
repz
or
jne
mov
rcll
scas
push
arpl
push
cld
sub
test
cltd
xchg
out
dec
cmp
pop
dec
stc
or
adc
mov
in
sub
xchg
pusha
mov
and
sbb
ss
mov
jmp
xor
ret
lcall
mov
ret
and
pop
scas
push
xchg
out
pop
cmc
loop
sbb
fcmovne
hlt
ja
aad
stos
xchg
cmpsl
in
mov
scas
pusha
xor
leave
jl
sti
push
inc
mov
leave
xor
test
adc
imul
sub
pop
inc
fwait
xlat
or
inc
xchg
aas
pop
in
andl
jns
push
shll
fstps
mov
dec
mov
ret
jg
xor
out
xchg
pop
jne
sub
mov
push
rcrl
out
subb
and
and
push
add
dec
mov
add
ret
movsb
mov
sbb
pop
and
outsl
in
pop
enter
adcb
cld
push
test
test
sbb
inc
scas
ret
adc
xor
test
xchg
icebp
sbb
clc
arpl
pop
cmp
pop
sub
or
fsubr
scas
push
test
add
pop
push
aas
xchg
lret
loopne
mov
mov
aad
xchg
push
scas
call
inc
inc
pop
xchg
mov
jae
orb
repnz
inc
into
repz
stos
pop
decl
lahf
mov
leave
push
add
dec
es
jae
shlb
mov
enter
adc
jne
sub
je
sbb
sub
fnsave
outsb
fnstcw
js
inc
xor
gs
les
repz
xor
xchg
pop
push
sti
sub
push
icebp
xor
ss
jo
inc
xor
xorb
push
push
or
mov
or
push
mov
pop
adc
adc
nop
daa
rorl
push
xchg
xchg
push
sbb
mov
aam
int
daa
jmp
fwait
cmp
pushf
shll
fdivrl
mov
sarl
in
mov
es
dec
adc
mov
std
test
and
clc
mov
sub
outsb
and
mov
add
dec
addr16
rorb
xor
xlat
stos
aas
dec
outsb
sbb
fidivrl
fimull
mov
test
mov
stos
pop
xor
movsl
dec
adcl
dec
fadds
sbb
add
imul
call
add
sub
dec
ds
adc
mov
jb
sub
and
ds
push
rcll
sahf
mov
call
std
mov
or
push
and
push
jb
das
jns
or
push
lahf
dec
imul
mov
sbb
push
movsl
lahf
xchg
testb
lods
filds
jne
dec
xlat
sub
adc
sahf
push
inc
rcll
addr16
cmp
xchg
scas
cmp
loope
sub
out
inc
mov
sbb
adcl
sbb
sahf
add
scas
sub
cltd
enter
loope
jno
push
scas
cmp
mov
jle
pop
xlat
pop
jle
lret
or
dec
outsl
gs
adcl
scas
fnstenv
jecxz
adc
dec
add
push
into
jmp
ss
dec
inc
mov
lods
mov
test
or
xchg
sub
and
ljmp
mov
test
push
mov
rorl
cmp
sbbb
out
and
sahf
lcall
mov
sbbb
lods
sbbl
data16
mov
cmpsb
cwtl
ja
enter
mov
pop
xlat
or
mov
rorb
test
shll
lcall
xor
movsl
imull
dec
imul
xor
push
dec
xchg
mov
lret
mov
push
sti
and
jmp
inc
cmp
sbb
negl
outsl
or
cwtl
roll
popa
jmp
jmp
out
or
xchg
pop
stos
pop
movsb
aaa
and
into
add
mov
mov
xor
subb
sbb
stos
ds
xchg
shl
pushf
cltd
jb
push
jbe
stos
sub
pop
push
fs
shlb
cmpb
pop
mov
shll
inc
push
ss
jl
jb
ficompl
push
movsl
push
dec
push
fstl
dec
inc
pop
lret
cmp
xor
out
imul
rcll
mov
or
ja
mov
stc
imul
bound
jecxz
pop
nop
push
ret
push
pop
notl
lods
cld
push
shll
sub
push
jno
popa
lcall
pop
mov
enter
xorb
psllq
in
imul
mov
rol
pop
outsb
mov
sbb
cmp
jns
add
fistpll
enter
cmp
xor
test
cwtl
xchg
adc
leave
movsb
pop
mov
les
or
push
test
dec
daa
xor
fbstp
es
sbb
cld
push
outsb
aaa
or
ljmp
int3
aaa
ja
pop
mov
cmp
cwtl
call
mov
adc
and
jge
xchg
sbb
fisttpll
pop
daa
xchg
orl
add
or
and
lea
divb
stc
mov
sub
jmp
test
pop
mov
mov
movsb
push
out
dec
jne
fwait
mov
nop
gs
or
fcompl
mov
lea
stos
adc
xchg
sbb
int3
shll
push
fs
push
xchg
mov
loopne
mov
imul
jp
push
lahf
ret
mov
dec
xchg
icebp
nop
adc
xchg
pushf
sbb
and
adc
mov
cmp
ret
sbb
jbe
in
sub
fldenv
inc
mov
lahf
xchg
inc
es
or
repnz
fistpl
imul
dec
adcl
fucomip
dec
aam
mov
cmpsl
or
xor
shr
fwait
lahf
xor
sarb
int3
dec
fsubrs
enter
mov
loope
adc
cwtl
gs
popa
jmp
and
ljmp
jns
outsl
inc
and
or
fstl
imul
sbb
xor
in
adc
gs
xchg
arpl
sub
jnp
daa
xor
shrl
mov
sahf
xchg
mov
sbb
pop
cld
xchg
and
fwait
sar
dec
or
ffreep
inc
outsl
cmpsb
inc
jnp
push
cmpsl
loope
sbb
rcrl
fmulp
test
vpsrlw
js
pusha
and
outsl
xor
pop
imul
daa
jle
sbb
dec
es
in
addr16
out
imull
jno
call
adcl
sub
add
cmc
into
std
pop
push
fsubrs
cmp
jmp
iret
cmp
pop
dec
jae
enter
outsl
fistpll
or
andb
pop
mov
xor
cld
jecxz
into
cli
mov
xchg
repnz
in
inc
movsb
xchg
aam
arpl
rol
fimull
pushf
xor
inc
adc
xchg
icebp
sbbb
xchg
mov
sbb
aam
sub
mov
pop
fdiv
add
push
mov
enter
add
or
outsb
push
fs
sbbb
popa
mov
push
cwtl
cwtl
jg
out
dec
jo
inc
je
in
dec
mov
movswl
iret
pop
ret
mov
sub
sub
aam
sub
pusha
add
mov
int
cmp
test
sbb
out
imul
into
push
dec
cmp
fcomp
shll
mov
bound
fs
fcoms
lds
pop
push
in
loope
sbb
in
pop
cli
hlt
or
pop
and
stos
notl
inc
sub
lret
pop
push
mov
scas
xchg
xchg
inc
neg
testb
pop
out
scas
jno
mov
cwtl
pushf
mov
ljmp
sti
cltd
fisttps
shrl
push
js
xchg
push
add
cs
inc
add
pop
jne
or
mov
inc
pop
cmc
xchg
pop
and
jno
dec
sub
xchg
jb
addr16
push
cmpl
dec
nop
jne
adc
mov
dec
add
cs
sbb
add
sbb
jmp
add
adc
jmp
enter
arpl
iret
mov
mov
add
es
lea
sub
sti
and
lds
cmp
cmp
push
jb
dec
xor
add
in
insb
jmp
sbb
rorb
xchg
mov
mov
outsb
rol
out
fcoms
enter
push
sub
sub
xor
inc
jle
cli
cmp
mov
xlat
mov
imul
dec
mov
shll
lea
dec
xchg
dec
sub
mov
mov
loopne
and
mov
xor
fbstp
mov
lods
arpl
out
add
cmp
addr16
test
mov
outsb
push
das
rclb
push
sub
cmp
test
push
or
out
popa
add
leave
mov
lret
imul
stos
das
pop
and
mov
pop
xor
pop
lods
sbb
inc
add
lret
popa
mov
mov
je
pusha
imul
fldcw
add
mov
adc
fldcw
lods
pop
mov
add
out
pop
inc
ja
sbb
cwtl
std
cs
les
jo
in
adcl
jmp
idiv
sub
aad
arpl
add
mov
or
push
ds
dec
adc
cmp
xchg
add
push
imul
add
fcompl
xchg
cmp
push
aas
adc
std
repnz
mov
sarl
push
xor
pop
enter
aaa
add
jae
ljmp
cmpsb
pop
jle
push
push
add
mov
jb
inc
dec
aas
jnp
add
aam
xor
dec
jl
xor
mov
sbb
pop
cli
cmp
sbb
inc
add
xor
add
cmpsb
mov
sub
out
sbb
cmpl
sub
aam
xor
in
xchg
cld
cmp
mov
pop
out
or
cmpsb
insl
leave
icebp
pop
test
call
cmpsl
mov
sub
popf
dec
fsubs
roll
cmp
xor
jb
into
and
lret
popa
lret
add
lods
loopne
daa
sub
lret
out
sbb
popl
mov
pop
push
or
xchg
shll
sub
imul
pop
sbb
jbe
fs
shlb
cmc
jmp
btrl
mov
clc
cmp
repnz
or
int3
adc
ljmp
outsb
adc
lret
mov
call
aaa
xorb
js
dec
sbb
imul
imul
sbb
jae
leave
sbb
arpl
pop
cmc
cwtl
mov
fldt
data16
dec
sub
test
push
or
adc
icebp
out
cltd
cli
cmpsl
lods
test
xor
mov
mov
ret
mov
cmp
mov
mov
cld
mov
sub
testb
jns
mov
decl
rcrb
shlb
shll
es
notl
lods
mov
clc
mov
dec
data16
add
mov
sbb
repz
push
push
sbb
jl
inc
out
pop
mov
pop
je
xchg
dec
mov
in
scas
sahf
cmpsb
pop
ljmp
dec
dec
xchg
xor
mov
inc
add
es
enter
dec
fwait
lcall
rcr
inc
fcom
loope
xor
fsubl
addr16
mov
jno
xchg
leave
cltd
lods
lods
pop
and
jmp
push
dec
cmp
push
mov
iret
int
inc
pop
out
jecxz
xchg
hlt
imul
lock
pusha
xor
sub
out
ror
in
pop
push
inc
in
or
adc
sbb
fiadds
jmp
adc
das
lahf
mov
dec
push
push
roll
mov
fwait
or
push
mov
push
bound
repz
lcall
imul
push
fldenv
xor
test
pushf
enter
test
inc
cmpsb
ss
push
sbb
jl
adc
mov
pop
or
test
pop
orl
xchg
xlat
jnp
pop
add
ja
icebp
int3
or
in
lea
insl
xor
mov
xor
frstor
adcb
sub
adc
in
cwtl
push
loope
add
adcl
in
stos
ret
frstor
imul
les
jae
pop
inc
sti
cmp
adc
pop
xor
outsl
jge
jl
add
lret
mov
mov
fbstp
fdivr
jecxz
mov
adc
das
es
shlb
adc
add
out
mov
stc
xor
xor
aad
les
rcrl
movsl
movsb
xor
xor
push
popa
out
lods
cmc
inc
js
jle
and
dec
out
scas
jbe
xchg
mov
sub
fsubs
mov
sahf
call
repnz
pop
flds
lds
cltd
mov
es
std
popa
ljmp
and
push
push
inc
aas
inc
scas
dec
adc
and
lret
ljmp
sub
xor
fwait
cmp
inc
outsl
or
pop
push
push
jbe
ja
jb
imul
pop
push
xchg
jmp
cmp
enter
xchg
xorl
xor
jg
inc
imul
push
xchg
test
inc
xchg
int
sbb
cmp
sahf
cs
xchg
xor
cmp
in
fisubrs
push
adc
movsb
mov
add
or
mov
mov
imul
in
jo
sarb
outsl
xor
aaa
push
popf
inc
loopne
push
sub
xchg
cmpsb
insl
push
movsl
loop
das
cmp
pop
std
pusha
jae
jmp
sub
and
or
popa
push
inc
mov
sbb
cmp
mov
repz
and
out
in
adc
mov
rcrb
xchg
fnstsw
mov
pop
fldl
movsb
push
add
cmp
les
xor
in
jge
adc
sarl
fidivrs
sbb
cmpb
pop
setb
ljmp
or
in
out
dec
cld
xor
push
mov
inc
iret
lret
pop
lret
pop
add
push
xorl
nop
pop
inc
sbb
mov
mov
into
das
push
fidivs
insb
int
bound
fisubl
bound
xor
out
add
pop
jne
std
jmp
fbstp
xchg
dec
push
fdivrs
ja
mov
adc
lret
fadds
sbb
fwait
push
jp
out
loop
xchg
shll
push
xchg
je
pop
das
sub
jns
pop
cmp
icebp
xor
cmp
cld
aaa
test
insl
jns
sbb
xchg
mov
or
mov
sbb
into
inc
cli
ret
in
or
add
sti
incl
out
or
mov
imul
pop
or
in
sbb
dec
lock
movsl
add
jne
jg
sub
jecxz
adc
mov
cltd
mov
fnstsw
lret
testl
pop
pop
inc
mov
xor
sub
ljmp
iret
mov
leave
in
pop
xor
fs
into
nop
cltd
lcall
or
lods
jnp
fstps
push
fdivs
bound
lcall
mul
inc
ja
cs
enter
lods
and
leave
pop
inc
subl
mov
test
out
mov
jo
dec
rolb
lods
int
cmp
repz
cli
ror
jmp
test
test
daa
xlat
sbb
pop
into
mov
sbb
out
jg
outsb
mov
mov
leave
movsl
xor
data16
movsl
pusha
inc
pop
mov
mov
sub
jl
rorl
push
xor
or
repnz
xor
jno
cmp
push
mov
mov
je
jle
inc
iret
mov
bound
lret
aaa
jae
scas
out
cmc
lods
or
pop
or
xor
lods
mov
xchg
dec
jle
mov
arpl
leave
cmp
fcmovnb
std
in
clc
in
pop
mov
ljmp
sbb
lods
fmulp
inc
mov
cli
cli
push
sbb
fldl
push
sub
fcoms
and
adc
sbb
mov
xlat
js
cmpsb
and
mov
xchg
and
loopne
pop
popa
jp
pop
das
lcall
test
in
mov
and
add
cli
push
xor
add
sbb
mov
mov
das
xchg
into
fisttps
xor
cmc
or
push
pop
in
push
rcrb
mov
fldcw
int
fst
sub
mov
into
out
mov
das
mov
cmp
pusha
int3
cmp
test
popf
lsl
xor
jno
ja
mov
out
iret
movsl
xor
sub
insb
test
adc
add
mov
cmp
push
cmp
pop
in
jmp
pop
push
sbb
test
cmpsl
loopne
adc
cltd
add
ljmp
icebp
inc
insl
test
fldlg2
pusha
jp
xchg
pop
rcl
hlt
lret
iret
outsb
pusha
es
sub
ucomiss
test
imul
push
outsl
cld
dec
test
or
movsl
ret
xor
mov
stc
dec
dec
dec
bound
mulb
fld
loope
push
stos
jo
mov
stc
movsl
cltd
rorl
push
dec
je
sbb
cmpsb
dec
cmp
in
add
pop
pusha
out
push
jg
mov
jge
out
ss
adc
sarb
mov
cli
fdiv
xchg
sbb
cmpxchg
test
je
mov
fwait
xorb
imul
lea
insl
pop
pop
in
das
push
xchg
sbbl
imul
ss
dec
mov
repz
cmpsb
clc
pop
je
fsubrp
xchg
rcl
int
inc
call
mov
inc
fistpl
pop
iret
or
mov
push
test
dec
mov
xchg
fcmovnu
cmc
dec
mov
jno
popa
lret
xchg
xchg
stos
aam
fwait
sub
bnd
push
rorl
cld
or
and
jge
repz
cmp
fwait
imul
cmp
jg
clc
adc
cli
inc
popf
sbb
sub
lcall
jbe
sbb
aad
insb
je
add
or
insl
push
lret
cmp
push
cs
pop
mov
ss
ret
fdivr
dec
ja
push
mov
ret
xor
xchg
fiadds
insb
pop
pusha
push
add
jecxz
cmp
pop
push
testb
lcall
fwait
loope
rorb
dec
inc
pop
inc
mov
leave
addr16
pop
sahf
fs
inc
push
mov
fdiv
jb
add
enter
imul
lds
addb
mov
movsb
faddl
dec
add
out
and
xlat
cmpsb
pop
dec
lds
cmp
mov
add
into
dec
idivl
lods
ja
cmp
fsts
jne
ja
pusha
mov
add
mov
jne
jb
adc
mov
daa
pop
test
dec
add
dec
les
pop
inc
xchg
sti
inc
fcmovnb
xchg
test
sbb
jge
fstps
jmp
cwtl
ret
repnz
mov
ja
xor
fcoms
jb
adc
lahf
cld
adcl
sbb
inc
jp
cmpsb
stos
add
stos
shr
cmp
movsl
jle
bound
arpl
xor
inc
lahf
ret
out
xlat
hlt
mov
mov
and
push
sub
outsl
or
pop
in
push
loopne
int
fwait
ljmp
push
pop
rcrl
jecxz
movl
popa
mov
sbbl
dec
data16
addr16
push
ds
pop
push
pop
push
mov
scas
sub
popa
and
or
jg
in
repz
stc
push
leave
sarb
push
cmp
mov
mov
mov
inc
aaa
lock
push
lahf
xchg
nop
in
sahf
jnp
lods
push
popa
and
push
mov
arpl
or
push
pop
scas
scas
test
out
pop
or
fldcw
outsb
jbe
je
cmp
jg
mov
sub
cld
xor
fs
inc
dec
nop
bound
xchg
jb
lahf
imul
add
out
pop
decb
jne
fistpl
fdivl
and
aaa
xchg
push
ljmp
cltd
jl
sub
icebp
push
mov
fcom
jp
inc
ljmp
mov
daa
test
pop
ficompl
inc
pop
push
xchg
fucomip
mov
pushf
sbb
cli
xchg
dec
dec
outsl
lock
in
test
ljmp
push
out
das
dec
push
add
xchg
test
in
loopne
and
je
pop
push
shlb
mov
pop
lahf
pop
add
push
mov
mov
sar
xor
mov
mov
leave
push
or
repz
bound
jp
pop
cmc
xor
xchg
adc
out
mov
clc
sub
lcall
je
das
adc
or
push
and
lahf
sub
fsubr
xchg
cld
sub
in
push
aas
cmpsb
aad
orb
pop
push
mov
jmp
or
std
cltd
xchg
push
mov
push
test
aas
xor
sbb
lds
adc
rcrl
dec
inc
xchg
testl
ficoml
inc
imul
test
sub
sbb
loope
sub
repz
lds
cmp
jle
push
adc
jns
scas
add
adc
in
jns
pop
out
mov
fwait
loopne
es
push
aad
mov
inc
push
aas
aas
bound
leave
movsb
int
mov
lods
insb
pop
sti
or
stos
pop
sahf
scas
jo
lret
mov
adc
dec
icebp
push
jno
pushf
lods
jmp
sbb
sbb
mov
mov
xchg
test
dec
lds
cmp
adc
xchg
jl
jns
pop
fcomp
in
mov
cmp
jg
or
stc
and
sarb
lahf
insl
cmp
bound
cld
adc
xchg
pop
adc
dec
or
pop
insb
or
cmpsl
xor
xchg
xchg
pop
into
insl
shl
mov
out
lahf
sti
fldl
outsl
rolb
stc
dec
add
xchg
push
fistpl
inc
clc
and
int3
pop
xchg
cs
mov
xchg
iret
cs
ja
xlat
wbinvd
xchg
pop
xor
add
and
mov
clc
sub
aam
or
sub
cmp
pushf
xchg
sti
jns
dec
mov
and
mov
mov
cmpl
outsl
fisubrl
lahf
fs
ja
and
inc
adcl
jp
fwait
iret
mov
sub
jg
jo
imul
fistpl
or
cmp
xchg
fisubrl
push
fdivrl
std
add
jae
cmpsb
scas
mov
lcall
sbb
lahf
xlat
inc
cmp
mov
cmp
dec
stos
hlt
rcrl
mov
cmp
les
cli
jmp
scas
cmp
test
mov
mov
inc
inc
mov
movsl
dec
cwtl
jb
cwtl
inc
je
xlat
imul
in
sbb
push
jae
mov
lods
aam
sbb
iret
dec
pop
adcl
or
cld
inc
cmpsb
mov
std
push
adcb
push
mov
stos
aaa
push
aam
jle
pop
and
ret
cmp
mov
aaa
insl
mov
dec
repz
mov
movb
xchg
ja
add
dec
ljmp
cmp
repz
lea
push
adc
inc
fidivs
mov
aad
mov
mov
insb
lahf
inc
dec
push
rcl
test
jns
pop
jl
fdivrl
mov
sbb
pop
repz
add
dec
mov
test
or
addl
mov
inc
rol
stos
test
jo
lret
loope
mov
push
cmpsl
jne
push
add
inc
lahf
sub
pop
je
mov
pop
mov
mov
pusha
xor
adc
cmp
rorl
push
lcall
aas
mov
mov
outsl
jecxz
add
mov
sub
les
imul
xchg
add
incl
out
sbb
mov
fidivl
sbb
inc
pop
mov
push
pop
mov
mov
pushf
out
ja
cmp
push
aad
xor
xor
rorl
inc
adc
xlat
pop
sbb
pop
xchg
and
inc
xor
jbe
inc
fmuls
xchg
bound
shl
sbb
mov
mov
imul
mov
xorl
sbb
pop
fs
jg
lret
mov
dec
dec
pop
pop
push
jns
inc
inc
out
mov
aas
daa
iret
repz
pop
mov
push
test
add
push
dec
dec
clc
lahf
mov
adc
mov
movsb
ss
cltd
ds
xor
xchg
aam
enter
push
mov
cmpsb
cwtl
pop
ret
adc
jb
outsb
push
cli
rorb
rorb
scas
adc
mov
in
push
lcall
inc
fisttpll
lods
hlt
pusha
sbb
mov
addl
leave
cmp
inc
out
nop
and
xchg
push
call
push
inc
inc
xchg
lahf
mov
cs
jne
cmpsb
mov
sub
cmpsb
test
mov
pusha
int3
sbb
es
xchg
aaa
aam
sahf
adc
sub
test
les
inc
lret
mov
xchg
mov
call
mov
repz
xor
loopne
xor
sub
mov
adc
adc
lock
fldl
dec
mov
repnz
cwtl
sahf
xchg
inc
adc
iret
nop
add
outsl
cmp
push
aad
js
inc
jno
cli
leave
add
test
sahf
xor
aad
nop
mov
xor
sbb
push
mov
adc
ret
cmp
or
je
cltd
mov
std
sub
repz
adc
daa
pop
sub
sbb
add
push
cmp
cwtl
pop
je
xor
sahf
stos
ljmp
int
cltd
jmp
inc
jp
leave
scas
loopne
jb
scas
fcomps
icebp
aam
icebp
mov
fldenv
cmpsb
mov
insl
bound
lock
and
pop
scas
xor
or
pop
mov
outsb
in
and
popa
add
xchg
in
push
adc
xchg
inc
push
mov
mov
adc
pop
ror
aaa
inc
mov
aam
xor
add
mov
xchg
or
pop
call
mov
xchg
repnz
cwtl
cmp
xchg
mov
xchg
cli
inc
pop
push
pop
inc
flds
hlt
ret
jl
pushf
dec
cld
push
outsb
xchg
sbb
imul
cmp
mov
mov
jbe
pop
test
pop
outsb
dec
mov
arpl
push
test
pop
testb
adc
pop
mov
mov
mov
loopne
push
lret
shll
test
lret
xor
mov
lods
xchg
jne
push
adc
lret
aas
xchg
test
mov
test
or
push
inc
mov
or
mov
adc
jp
sarb
pop
pop
inc
or
inc
add
push
push
jl
pop
ja
jae
pop
pop
aas
scas
into
lock
pusha
rep
mov
shll
jl
inc
xor
ret
jmp
dec
pop
mov
stc
lock
mov
pop
mov
addr16
jle
or
cld
xorl
pop
mov
setg
arpl
xor
sub
jmp
push
pop
popl
add
xor
jge
jp
cmpsl
cmp
push
adc
dec
sub
rclb
int3
jle
xchg
out
orl
push
xchg
lcall
mov
sub
adc
ffree
adc
pop
scas
pushf
ds
cmp
and
int
mov
push
mulb
add
or
aaa
jg
mov
push
cmp
sbb
sbb
scas
xlat
ljmp
or
cli
mov
jecxz
inc
ret
dec
mov
xor
mov
sub
in
mov
sti
scas
mov
dec
and
mov
sub
jno
pop
mov
test
in
orl
xchg
in
fimuls
and
in
mov
popf
inc
add
lods
jmp
int
das
sarl
mov
or
into
dec
xor
push
fs
pop
fildl
add
push
or
out
jge
xorb
mov
sbbb
cmp
lret
xor
ds
ret
cmp
push
aas
das
mov
lahf
inc
pop
lret
or
mov
sbb
pop
rclb
repz
jne
mov
cmp
fldcw
or
push
js
or
cmp
jnp
mov
adc
ja
mov
push
aaa
sub
cmp
xchg
leave
dec
mov
mov
int
sub
sarl
mov
popa
dec
add
xchg
mov
inc
pusha
idiv
pop
call
pop
js
inc
andb
and
and
out
cmp
cli
cli
popa
pop
inc
pop
sbb
fldt
and
mov
mov
mov
aas
push
mov
push
mov
das
test
test
lods
mov
scas
fdivs
hlt
lock
cwtl
scas
and
or
in
cmp
popl
fsub
cmp
xor
addr16
and
sbb
or
in
test
inc
imul
fs
mov
sub
cmpsl
scas
sarl
lahf
inc
sub
or
movsl
mov
gs
adc
and
push
or
mov
iret
mov
movsl
movsb
cs
or
int
imul
sbb
shll
pusha
xchg
pop
pandn
inc
adc
movsl
add
outsl
leave
and
xlat
into
fimull
xor
push
pop
std
or
ds
or
mov
xor
arpl
pop
and
jnp
push
xor
adc
mov
fcoms
add
call
dec
in
xor
sub
lret
and
xor
push
or
js
lret
daa
pop
push
mov
adc
xchg
addl
out
and
xor
cltd
int3
mov
jne
cmp
dec
dec
test
mov
and
int
test
mov
ud2
je
xchg
add
test
pop
fwait
inc
arpl
push
or
dec
test
xor
xchg
push
fs
inc
je
inc
lcall
adc
out
int3
sub
adc
xor
iret
mov
popa
jne
mov
iret
ficoms
insl
push
mov
push
cmp
out
cltd
and
sahf
clc
mov
push
aaa
sbb
mov
sbb
stos
add
shrl
inc
int3
sbb
insb
mov
pop
push
sbb
sub
xchg
fs
push
mov
cmp
sub
xchg
inc
jle
out
push
test
jae
mov
rcll
shll
lret
out
pop
popf
pop
call
xchg
add
sub
cmpl
mov
mov
ljmp
mov
sbb
pop
popf
push
xchg
pop
stos
aam
ffreep
icebp
inc
inc
faddl
out
mov
das
loopne
mov
sub
movsl
sub
mov
fs
and
adc
cmpb
and
sar
inc
shrl
push
mov
mov
xchg
jle
xor
in
outsl
jb
movsl
dec
stos
popf
jl
and
sahf
or
mov
cltd
and
add
gs
push
sub
mov
cwtl
inc
pop
ficoms
mov
cmp
mov
std
imul
sub
or
mov
dec
xor
sub
fdivs
dec
cmpsl
sbbb
daa
repnz
sbb
imul
cmp
mov
xchg
sahf
fwait
jb
or
sub
adc
fstl
leave
out
or
add
inc
iret
rol
cmp
notb
popa
mov
in
inc
mov
aas
clc
push
push
repnz
ja
mov
jne
cwtl
popf
push
sub
insl
sti
aad
repz
imul
add
ss
ss
pop
push
lret
jb
mov
jg
ja
mov
sbb
sahf
fisubs
jo
stos
scas
or
inc
mov
cmpl
mov
pop
xchg
fcomps
in
insb
xor
sbb
movsl
movsl
ja
lcall
aad
sub
or
fs
fdivrs
inc
lods
sub
push
addr16
push
jo
mov
cmp
jp
fucomip
insb
aam
jb
or
mov
subb
cwtl
mov
mov
inc
fwait
rorl
xchg
loop
addr16
lret
fwait
push
cwtl
inc
sbb
iret
jbe
jno
cmp
mov
fisttpll
inc
test
sub
subl
cmp
dec
sbbb
mov
mov
mov
dec
xchg
xchg
xchg
dec
jmp
xchg
jnp
push
sub
outsl
fidivs
xor
and
adc
xchg
aam
jecxz
in
mov
or
xchg
sub
jg
andl
jbe
sub
push
loop
enter
orl
mov
mov
mov
or
sbb
adc
data16
or
jns
iret
ljmp
repz
call
or
std
push
aaa
scas
push
notl
aaa
sub
insb
leave
xlat
lds
in
pop
fsubl
je
loopne
adc
mov
push
and
decb
mov
jecxz
inc
push
cmpsl
repz
cmp
or
popf
sti
jmp
inc
lds
mov
mov
in
fsub
mov
mov
sub
adc
in
je
or
adc
and
faddl
es
das
xchg
in
int
out
mov
xor
outsb
mov
aas
sub
lcall
xchg
inc
loope
jl
jns
loopne,pn
arpl
pop
iret
sub
dec
pop
shll
outsl
push
add
fs
mov
xchg
pushf
imul
in
sub
jmp
bound
rorl
sbbl
call
adc
popa
inc
xchg
and
imul
roll
mov
cs
sub
dec
inc
das
lahf
addb
fcmovnb
outsl
ljmp
test
test
mov
jecxz
scas
or
dec
xchg
pop
in
add
cld
divb
mov
fs
dec
jp
mov
mov
dec
data16
decl
and
push
popa
ret
mov
test
call
xor
lahf
and
cs
xchg
lods
rcrl
mov
mov
lds
sbb
adc
xchg
arpl
push
ficompl
mov
ds
or
ret
push
xor
dec
les
lea
xor
inc
cmc
xor
aas
adc
ror
stos
xor
sbb
sub
int
enter
xor
mov
ret
mov
sbb
jp
mov
add
fcomps
ja
jmp
push
jmp
push
push
loop
jge
in
jns
adc
shl
mov
pop
imul
setb
inc
xor
xchg
repnz
add
ror
mov
loopne
in
pop
sub
or
mov
ljmp
pop
pop
fistpll
xchg
xchg
sbb
cld
cmp
in
adc
out
push
dec
xchg
leave
aam
sti
xor
insb
decl
jge
inc
test
pusha
push
rolb
jle
push
pop
mov
dec
adc
scas
cltd
mov
jmp
movsl
jnp
leave
hlt
fisttps
push
jge
iret
ret
or
int
aas
call
add
or
mov
imul
hlt
push
std
or
rolb
push
cli
icebp
jne
sub
into
add
nop
inc
faddp
mov
push
mov
jge
sbb
mov
sub
sub
iret
out
idivl
dec
xor
scas
decb
pop
cmp
or
jge
or
push
xor
mov
and
mov
xor
nop
inc
shll
cmp
hlt
mov
cmp
fcmovu
xchg
xchg
push
movsb
sbb
mov
xor
lret
or
jnp
mov
push
and
loop
xor
mov
cmp
adc
adc
pop
addr16
push
xchg
stos
lret
jo
call
aad
in
adc
lds
jno
shll
xor
inc
outsb
mov
mov
cmp
pushf
dec
nop
xchg
shll
fildll
push
leave
add
inc
mov
mov
dec
cmpsl
dec
insb
rorl
in
pop
jno
into
add
mov
pop
cld
xchg
in
fisubrl
cli
es
mov
insb
pop
push
shrb
aaa
das
cmp
xor
adc
enter
outsb
sbb
mov
out
fidivrs
cmp
lret
sub
inc
f2xm1
pop
sbb
repz
sub
ret
mov
mov
push
mov
jne
jl
test
outsb
repz
inc
or
mov
mov
push
ljmp
outsl
ret
loope
pop
in
test
mov
addr16
mov
mov
cmp
dec
jp
cld
stos
arpl
push
and
fisubrs
fst
call
sbbl
or
cmpl
subb
out
packsswb
or
adc
icebp
and
dec
inc
and
add
inc
call
outsb
into
sbb
aam
je
mov
mov
mov
jnp
mov
movsl
push
dec
mov
dec
xchg
mov
les
ret
or
jb
mov
clc
sbb
jnp
xchg
lret
or
fdivrl
or
jo
sub
cmp
mov
mov
cmp
mov
fimull
dec
loop
sbb
push
adc
cli
mov
popf
cmp
inc
in
dec
bound
icebp
insb
bound
jb
outsb
add
mov
cmpsb
aad
jge
mov
daa
pop
jg
daa
fldt
aam
arpl
push
aad
repz
or
xchg
sti
aaa
cmpl
cltd
jge
mov
mov
pushf
xchg
cwtl
js
push
sti
ljmp
pop
sbb
into
aad
lahf
mov
lea
pop
pop
add
add
or
shll
mov
jg
scas
add
loope
mov
lahf
out
or
mov
outsl
jmp
jb
das
inc
cmc
or
jno
mov
ret
cli
loop
mov
repnz
scas
mov
jnp
pop
or
add
pop
dec
jae
leave
pop
int3
xchg
mov
in
sbb
bsr
or
aaa
mov
lods
pop
clc
jp
je
daa
cmp
mov
arpl
popf
add
xchg
adc
arpl
lahf
mov
xor
adc
push
js
fisttps
es
imul
call
test
fdivs
xor
push
fcomip
ret
jno
je
lods
inc
or
cmpsb
xor
popf
and
mov
xor
xchg
jo
inc
adc
push
mov
sub
and
cmp
jge
in
xor
jno
out
subb
mov
xchg
jg
mov
cmp
cmp
lods
dec
loop
pop
adc
clc
sarl
xchg
jne
das
sbb
or
xchg
lock
or
add
mov
pusha
xor
or
ja
jp
cmp
fwait
inc
inc
sub
dec
jbe
cmp
sub
mov
clc
jae
push
loop
stos
jbe
lret
andb
mov
xchg
push
inc
arpl
fwait
adc
add
mov
js
sarl
push
mov
into
push
call
lods
shlb
popa
hlt
shrl
adc
mov
in
je
scas
mov
cmpsb
cli
mov
xor
imull
sbb
out
outsl
xor
inc
das
jns
mov
push
movsl
cwtl
or
adc
mov
bound
fimuls
jg
test
pusha
mov
jge
dec
pusha
test
icebp
outsb
ret
and
rclb
xchg
rcll
test
mov
nop
inc
ret
imul
or
sub
mov
cld
xchg
inc
add
pop
add
and
mov
push
pop
pusha
sarl
xor
std
in
test
pop
mov
inc
lods
and
or
rcll
mov
add
addr16
mov
sarl
or
dec
and
and
popf
cmp
fidivrl
mov
mov
out
mov
fwait
gs
iret
jo
lods
pop
ljmp
rcl
or
adc
aam
in
aad
xor
icebp
loop
sub
hlt
sahf
lods
dec
inc
and
jae
jecxz
cwtl
cmp
shlb
ficomps
scas
sub
incl
or
aam
sbb
adc
xchg
mov
std
adcl
push
push
and
inc
repz
lcall
lds
clc
lea
test
icebp
test
repz
sqrtps
out
mov
xchg
pusha
jo
xchg
je
inc
cmp
movsb
push
and
or
push
pop
xor
cmpsl
je
jmp
jnp
sbb
mov
sbb
jge
lret
lret
xchg
lcall
pop
push
orb
jae
pop
adc
mov
movsb
jne
imul
cltd
rolb
dec
pop
les
test
and
lods
addb
adc
imul
daa
pushf
ror
call
xchg
mov
arpl
ja
mov
out
nop
jb
jmp
dec
aas
movsl
sbbl
pop
rorl
jge
int
dec
jno
dec
repnz
mov
inc
adc
shlb
sbb
jbe
rorb
add
lcall
cmp
or
or
adc
sarb
lea
out
sub
mov
and
and
mov
sub
mov
ljmp
out
push
ror
pushl
inc
stos
jno
push
mov
adc
orl
cltd
cld
or
push
mov
mov
mov
cmp
push
lret
cli
daa
outsl
sarl
xor
lret
out
pause
sbb
xchg
sbb
sbb
fs
pop
jbe
popa
jge
adc
mov
jmp
addr16
adc
jbe
ljmp
mov
mov
inc
popa
xor
or
mov
xor
es
dec
lret
mov
inc
mov
dec
adc
mov
jno
data16
pop
pushf
orl
push
inc
ret
mov
loopne
int
dec
sbb
mov
adc
pop
in
adc
mov
cmpsl
lcall
inc
mov
mov
cmpsb
aam
push
rorb
out
adc
cmc
jecxz
push
out
inc
orb
mov
mov
pop
sbbb
add
and
mov
test
inc
stos
jg
out
gs
cmp
stos
jnp
push
adc
xor
push
dec
mov
dec
imul
adc
jbe
fadds
adc
adc
ret
mov
ljmp
iret
xchg
xlat
ljmp
pushf
loopne
enter
pop
fistl
lret
imul
cmp
js
pop
aas
cwtl
repnz
and
lods
popa
or
and
lea
adc
rcl
icebp
in
std
jnp
add
movsb
jge
push
movsl
lods
mov
rolb
mov
cmc
xor
aam
mov
test
shrb
out
mov
cmp
fwait
test
das
xchg
push
jmp
push
test
inc
pop
pop
lock
vmread
cwtl
sub
jb
inc
and
loopne
loop
xor
cmp
jbe,pn
pop
fcoml
mov
dec
sub
stc
inc
mov
in
fnstenv
or
push
add
xlat
lock
mov
mov
jle
push
rcll
jmp
push
in
mov
pop
lods
mov
shl
loop
adc
in
dec
cs
sarb
nop
jno
or
xor
ud1
adc
shlb
dec
mov
cmp
lea
add
hlt
idiv
loope
daa
cmp
std
xchg
pusha
ds
ss
push
mov
xchg
or
cmpl
sub
dec
jne
ja
mov
jg
popl
sub
mov
mov
xchg
push
mov
fs
movsb
or
and
aad
cwtl
mov
push
pop
out
cmp
ja
mov
test
fs
loope
stc
cwtl
mov
in
sahf
test
push
sbb
mov
icebp
movsl
jns
incb
pop
and
lds
js
inc
stos
cmpsl
test
mov
jbe
lds
jl
fsubrs
out
push
mov
lea
das
icebp
out
xor
nop
iret
pop
xlat
ret
mov
mov
mov
push
popf
mov
shl
pushf
test
and
ss
pop
lret
xor
add
lods
jnp
push
repnz
mov
push
in
adc
in
mov
jp
fnstsw
icebp
xchg
shlb
jge
leave
scas
and
fs
fsubs
jae
and
adc
mov
inc
cmc
mov
or
mov
ret
leave
sub
out
jp
xchg
icebp
sbbl
pop
mov
sbb
sub
aam
push
mov
inc
gs
fwait
pushf
and
lcall
movsl
mov
xor
shr
or
pop
jle
inc
pusha
lcall
xchg
xchg
inc
imul
inc
mov
leave
inc
sbb
mov
xlat
pop
addr16
rorb
pop
mov
add
cld
test
dec
stos
popa
stos
std
mov
cltd
aaa
clc
fldcw
fnstsw
jge
test
outsb
inc
xor
sbb
pop
xchg
adc
addr16
fsubrs
pop
daa
lahf
adc
out
into
adcb
scas
xor
push
xchg
movsb
pushf
push
icebp
fucomip
in
pop
ja
ja
add
mov
xor
cmp
call
xchg
test
mov
fimuls
and
int3
std
sbb
jp
enter
push
jmp
sbb
shrl
outsb
lret
cmpsl
stos
jbe
mov
push
adc
and
or
dec
bound
sti
or
mov
jecxz
leave
mov
jl
jge
pop
bound
mov
jmp
bound
push
pop
mov
mov
add
or
sub
xchg
stos
mov
pop
mov
aad
push
rcrb
pop
lcall
cmpsl
pop
push
and
mov
nop
xchg
sub
mov
xor
pop
mov
pop
test
fldenv
sarb
push
push
jmp
and
xor
mov
in
cmp
bound
cli
arpl
or
push
sub
xor
jmp
aad
and
jno
push
cmpsb
mov
and
cmp
enter
mov
outsb
lods
pop
movsl
cltd
lea
add
insb
je
out
push
ret
push
dec
mov
sbb
das
ja
enter
ljmp
out
inc
push
ret
in
lods
jne
cltd
jge
push
jp
jmp
shrl
sbb
jns
mov
adc
xchg
sub
es
arpl
enter
mov
xchg
filds
jb
testl
add
in
sub
pop
push
stc
xchg
pop
mov
push
decl
mov
jns
cmpsl
fst
out
push
sbb
popf
mov
cld
rcl
pushf
mov
ret
lret
fidivs
ret
push
xor
rorl
and
jns
mov
or
dec
inc
test
xor
inc
test
hlt
mov
jmp
sbb
cs
ret
pop
xchg
adc
repz
pop
bound
jb
je
cmp
xchg
cwtl
das
sti
sbb
mov
push
dec
jmp
sbb
add
push
int
ja
out
sub
cmp
repnz
imul
xchg
dec
test
xor
push
jo
adc
pushf
adc
mov
adcl
mov
or
scas
in
xchg
lcall
addr16
adc
inc
mov
cwtl
cmp
rclb
ret
jmp
sbbl
ret
addb
cs
dec
sub
adc
movsl
in
and
xchg
dec
call
mov
stos
ret
sbb
mov
in
pop
inc
repnz
pop
test
daa
dec
jb
adc
aaa
or
jmp
mov
lea
mull
push
jbe
mov
cs
push
scas
lret
xor
adc
mov
or
lock
inc
sbb
xchg
mov
or
cli
bound
pop
jl
add
inc
dec
xor
movsb
ds
fwait
pop
inc
cmp
xorb
std
stos
lea
sub
ljmp
add
mov
out
ficoml
or
inc
xor
sti
mov
or
fidivl
push
dec
and
push
shlb
mov
jecxz
mov
pop
movsl
sahf
jecxz
fiaddl
pop
and
outsl
lret
fwait
dec
es
adc
stos
dec
jae
cmp
inc
inc
lret
add
sbbb
or
dec
pop
pop
cmp
lahf
sbb
sbbl
jo
sahf
mov
inc
sbb
iret
in
mov
add
dec
notl
jnp
das
dec
idivl
jns
sbb
addr16
andb
xlat
xchg
aad
xchg
outsb
jb
cmc
pop
std
fisubrl
cmc
insb
cmpsl
leave
gs
rcrb
loop
icebp
mov
xlat
or
lea
xor
movsl
jmp
addr16
cmp
xchg
dec
jbe
push
aaa
call
push
and
rcll
xor
push
sub
mov
roll
xor
lret
sahf
fsubr
mov
orl
mov
test
push
aam
jle
into
sti
lods
sub
in
shll
gs
jg
and
cwtl
dec
xchg
orb
out
mov
int
mov
jmp
arpl
fnsave
sbb
jae
repnz
es
addb
in
xchg
addr16
out
sbb
ds
adc
add
je
pop
aad
ret
pop
bound
xchg
xchg
cmp
call
lahf
adc
mov
roll
pop
adc
scas
mov
fscale
mov
sub
stos
ds
ja
sub
sahf
mov
fstps
and
outsb
pop
jbe
add
ljmp
loope
adc
gs
push
int3
popf
or
push
loope
push
test
mov
mov
loope
dec
jnp
fcmovne
mov
lcall
mov
jmp
inc
mov
clc
or
mov
arpl
cs
lds
arpl
xor
xor
aaa
rcrl
cmp
sti
sub
mov
dec
cs
leave
daa
adc
xchg
jb
adc
mov
push
xor
inc
dec
imul
add
pop
cli
sti
int
aas
xor
dec
add
inc
push
mov
mov
fstps
pop
mov
nop
xlat
ja
cmpsl
jb
push
jae
stos
xchg
xchg
inc
adc
push
aam
push
fwait
mov
cmp
push
cmp
repnz
xchg
and
mov
lods
fdivp
mov
mov
das
pop
pop
cmpsl
popf
cwtl
jecxz
sub
push
xchg
mov
mov
addl
jge
ss
dec
and
cwtl
pushf
vorps
inc
push
movsw
data16
fstl
or
fs
cmp
in
dec
lods
dec
mov
orl
sub
inc
cmpsl
daa
and
shll
js
jnp
cmp
shll
or
mov
out
add
mov
cmp
mov
testb
repz
fwait
xchg
je
arpl
dec
add
std
add
mov
gs
mov
push
sbb
mov
in
jmp
in
mov
sub
shlb
add
shr
or
pop
mov
cltd
andl
js
pop
xor
cld
add
ret
js
adcb
and
out
sbb
push
rorl
or
dec
adc
push
loope
shll
icebp
daa
inc
or
loop
movl
lret
imul
lea
lcall
andl
clc
adc
push
pop
dec
sahf
popa
scas
out
add
inc
push
stos
clc
sub
or
popf
jge
jmp
scas
in
lds
inc
push
sub
addr16
adc
mov
loope
in
mov
cwtl
cmc
mov
sbb
or
cli
jno
jns
jge
sub
loope
mov
jb
sbb
cmp
xor
xchg
insb
adc
lret
xor
mov
pop
pop
negl
jmp
cmp
add
sbb
cmpsl
rolb
sbb
inc
es
stos
hlt
nop
mov
test
adc
mov
fidivs
js
addr16
xchg
dec
in
rep
sub
add
xlat
adc
pusha
into
pop
pop
test
adc
ljmp
in
push
mov
int
or
cmp
mov
mov
pop
std
cmp
push
xchg
mov
sbb
ficompl
add
jb
lods
hlt
ljmp
ss
mov
lods
addb
fs
mov
sub
imull
and
jle
jle
movsb
xchg
testb
push
out
inc
jnp
and
sbb
fmuls
cmpsl
or
sarb
jmp
mov
sub
mov
inc
push
jb
and
dec
mov
add
sbb
and
mov
mov
push
add
pop
or
stos
jns
cmp
fidivrl
out
shr
xchg
xchg
inc
aaa
ds
mov
mov
out
aas
mov
push
add
cmp
push
cwtl
ja
fs
xchg
movsb
mov
pop
addr16
mov
inc
int
int3
in
jae
jecxz
incb
fimuls
sbb
das
pop
push
push
jecxz
ficoms
test
pop
inc
sub
sbb
aaa
jge
mov
add
lea
mov
push
pop
jb
pop
je
xor
std
mov
push
loopne
rolb
out
pusha
push
aaa
loopne
push
xchg
bound
or
jno
xchg
jae
cltd
fdivs
xor
pushf
leave
add
jecxz
or
pop
outsb
lret
in
sub
gs
xchg
jge
das
push
mov
scas
orb
inc
js
dec
sahf
add
dec
ret
xor
adcb
jp
mov
es
rcrl
popa
lock
mov
mov
jo
xchg
cmp
pop
rorb
lock
fnstcw
mov
mov
inc
pop
ficomps
iret
add
enter
xor
test
imul
dec
add
fsubrs
hlt
adcl
enter
in
scas
and
lea
sub
pushf
rorb
nop
push
adc
cmp
pushf
mov
fnstsw
dec
inc
aas
and
lock
xchg
call
push
jp
mov
hlt
mov
mov
es
out
dec
xor
mulb
ret
test
in
sbb
jbe
dec
out
sbb
outsl
out
movsb
mov
sbb
jbe
xchg
incb
cmp
fstl
pusha
mov
cmpsl
aas
dec
int
add
push
dec
inc
mov
cs
sub
cmp
test
xchg
fdivl
jmp
ljmp
sahf
inc
stos
imull
fsubrs
pop
inc
mov
push
sbb
push
sbb
lods
idivb
push
nop
das
sub
mov
xchg
movsb
gs
dec
es
out
cmp
mov
repnz
cmpsl
das
movsl
xchg
cli
cmp
and
sbb
inc
fadd
clc
test
test
xchg
mov
lds
dec
mov
inc
dec
lods
jle
or
inc
fdivrs
add
push
mov
mov
fs
push
fiadds
fildll
inc
fldt
sarb
insb
add
pop
test
cmp
sub
or
std
xchg
mov
jge
fcomps
call
mov
fsubp
inc
push
nop
or
ret
dec
push
cmc
in
mov
sub
cmc
sbb
popf
cmpsb
repz
repz
xchg
lcall
push
addr16
and
xor
out
pop
add
or
in
push
add
push
imul
jb
into
jmp
ss
jmp
and
mov
aad
xor
mov
xor
aaa
push
mov
lods
lret
xor
subl
or
pop
cmpsl
movsl
aad
adc
in
mov
push
ja
jno
pop
dec
je
fsubr
mov
jge
out
arpl
icebp
mov
adc
loopne
or
push
into
fnclex
ja
dec
scas
aas
sbb
dec
inc
or
and
fadd
js
cmpsl
xchg
lret
out
mov
inc
out
push
in
mov
mov
les
mov
inc
jo
adc
jb
out
ret
rcrl
aaa
mov
cmp
test
add
mov
lock
push
sbbl
fistps
int
dec
lret
ljmp
jno
cmp
mull
fmuls
sub
fs
out
loope
push
fiadds
adc
stc
cs
cs
popf
fcomip
arpl
lcall
pop
mov
add
ss
jecxz
cmc
dec
mov
lahf
iret
ret
cmpsl
shll
mov
hlt
outsl
adc
mov
jecxz
mov
push
dec
jne
test
add
outsl
lods
mov
fimull
test
push
test
lods
loopne
pushf
fisubrs
shlb
xchg
xchg
popf
jno
xchg
inc
cmp
sub
and
stc
sahf
int
das
lods
push
test
add
mov
cli
sbb
test
or
mov
mov
adc
and
add
dec
lcall
lahf
imul
repz
inc
sbb
pop
aad
mov
sub
stos
sahf
loope
pusha
mov
push
and
pop
mov
sti
jne
dec
cmpsb
sub
into
js
shll
rorl
test
push
shl
and
xchg
inc
test
pop
cmpsl
adc
out
lcall
lea
test
insl
imul
test
popa
adc
es
mov
lahf
lods
jle
mov
in
ret
repnz
in
adc
call
xchg
cli
xchg
add
mov
inc
and
cltd
sbb
test
mov
jmp
dec
insl
pop
adc
dec
outsl
mov
aad
add
loope
hlt
add
lahf
xlat
xor
inc
shrl
mov
enter
xchg
or
fmull
push
fs
jge
mov
fs
push
fcoms
rolb
out
sub
lret
dec
rcll
jl
mov
into
push
push
xor
push
mov
xor
jbe
gs
jmp
sub
mov
icebp
mov
jns
daa
cli
adc
es
fwait
pop
pusha
movsl
or
out
fwait
mov
mov
cmp
stc
mov
add
ficomps
fptan
test
lea
mov
or
scas
cwtl
icebp
into
or
adc
int
shll
and
inc
lods
lods
int3
ret
aas
push
out
ret
outsl
mov
inc
andl
fidivs
decl
mov
mov
add
and
pop
mov
xor
lods
bound
std
pop
inc
pushaw
pop
loop
mov
mov
lcall
inc
fildll
sub
pop
jnp
jbe
pop
enterw
mov
scas
sbb
fnstsw
in
add
stos
push
bound
add
xchg
pop
mov
inc
dec
inc
daa
out
mov
sub
xor
outsb
aaa
jecxz
xor
fisttps
jmp
test
popa
out
inc
adcl
stos
sti
ret
lahf
push
sbb
mov
jmp
sub
add
stc
add
jecxz
outsb
loope
inc
int3
inc
cmp
and
jb
jae
repz
out
shll
mov
add
pop
fdivs
cmp
fwait
dec
mov
flds
pop
arpl
das
int3
cmpsl
mov
xor
inc
push
xchg
jae
ja
scas
rdtsc
shll
mov
aas
sbb
cmpsl
cmp
bound
mov
pop
dec
pop
jnp
test
aam
int3
lea
out
mov
cmp
xor
xor
xor
inc
shrb
ret
out
and
and
add
loop
fsubr
insl
call
dec
inc
icebp
xor
imul
fcompl
in
mov
cs
xchg
inc
sub
mov
push
lods
push
ds
mov
pop
mov
sbbl
or
xchg
mov
dec
cli
mov
pusha
outsb
add
fs
inc
sub
xchg
ficompl
subl
test
inc
mov
cmp
jecxz
fs
push
cmpsb
push
dec
jle
mov
out
imul
pop
into
aad
lock
mov
aad
add
outsl
push
mov
push
leave
jo
das
sub
and
imul
add
push
fistpll
xchg
push
mov
js
addl
ds
add
push
or
mov
arpl
je
dec
stos
test
loop
mov
int
sar
nop
mov
ret
in
mov
scas
sub
sbb
mov
inc
arpl
aam
inc
mov
movsb
dec
popa
mov
in
jb
mov
mov
sahf
popa
xchg
mov
and
mov
ss
fisttpl
mov
out
sub
dec
mov
fmull
and
fildl
inc
pop
add
xchg
les
or
cltd
mov
sbb
mov
mull
incl
cmpsl
lcall
ss
outsb
leave
dec
sub
mov
lret
mov
and
push
pop
rolb
outsb
jmp
mov
jmp
fcompl
leave
xor
mov
cmp
adc
push
jno
lds
push
sbb
pushf
cmp
jnp
dec
adc
add
jp
cli
mov
movsb
or
jl
in
adc
mov
lret
addr16
divb
sbb
mov
push
push
and
mov
call
push
adcl
ljmp
xchg
pop
das
fcoml
xchg
rcrb
xchg
cmpsl
pop
pop
mov
cmp
loopne
iret
push
ffreep
push
repz
std
std
aam
jb
lcall
or
xor
aas
loopne
jae
aaa
xchg
or
sahf
loopne
popa
gs
mov
xor
push
dec
mov
xor
add
push
adcb
cli
aaa
fadd
sbb
inc
popa
mov
pushf
shl
mov
fsts
mov
or
mov
add
jno
out
shlb
adc
js
cli
ds
jae
stos
push
test
inc
sti
loope
xchg
xlat
or
cmc
mov
inc
les
aas
mov
insb
bound
push
ds
stos
xchg
pop
push
ss
push
neg
cmc
inc
aam
cwtl
cld
icebp
pushf
mov
xchg
popa
bound
xchg
add
jno
mov
push
shr
test
mul
mov
hlt
push
mov
xor
je
nop
mov
in
sub
mov
adc
adcl
dec
jg
inc
fs
orb
es
mov
test
cmc
aaa
lahf
xchg
sbb
lahf
outsl
aad
loop
sbb
xor
insl
pop
aaa
dec
loop
dec
subl
mov
test
in
je
mov
addr16
clc
mov
or
mov
lods
and
pushw
adc
and
int3
pop
adc
fwait
ret
stos
lret
cmp
enter
push
pusha
adc
mov
adc
in
and
stos
subb
arpl
nop
pop
idivl
cmp
cmovge
fidivrl
pushf
pop
adc
cmp
xadd
movsb
push
and
int
mov
mov
xor
sub
adc
inc
repnz
push
scas
inc
imulb
js
sub
jno
dec
test
mov
push
mov
pop
mov
imul
pop
sbb
js
push
imul
pop
sub
pop
mov
leave
and
inc
xor
mov
mov
sarb
push
subl
imul
adc
push
ret
subb
lahf
sbb
dec
data16
add
jnp
enter
popf
dec
dec
stc
adc
add
or
shll
xor
scas
inc
inc
imul
sub
clc
lcall
jmp
adc
data16
ret
mov
mov
dec
addr16
lods
movsl
push
cmp
pop
mov
adc
fldt
jbe
in
ret
arpl
push
mov
adc
das
or
dec
adc
cmp
add
mov
jae
inc
mov
je
push
dec
mov
lcall
mov
add
out
ss
and
pop
jno
hlt
jbe
add
int3
subb
adc
xchg
lds
sbb
inc
cmp
cltd
iret
adc
sbb
sub
cmp
fstl
ss
xchg
xchg
rol
lahf
push
sub
test
inc
xchg
push
movsl
pop
ret
and
jle
cld
fdivr
popf
repz
or
inc
jl
dec
cli
inc
fcmovnb
fwait
shrl
cmpsb
test
xchg
push
iret
test
mov
pop
lods
pop
xor
imul
jne
cwtl
jge
stos
push
cmp
jl
cmp
shll
mov
and
mov
cmp
lea
xchg
cmp
mov
push
std
mov
aaa
call
daa
cs
mov
jne
pop
mov
in
in
or
mov
dec
cmp
push
mov
outsb
aam
je
inc
push
sbb
and
mov
hlt
fiadds
and
pop
push
and
xchg
popa
mov
xchg
sub
jbe
imul
adc
xor
aaa
mov
xchg
or
push
rcl
mov
enter
jmp
xchg
mov
inc
lods
pusha
cmp
out
add
es
andl
sbb
int3
std
push
cmc
push
xchg
pop
adc
popa
xchg
js
adc
xchg
mov
inc
dec
movsl
or
outsb
addr16
testb
in
fstp
xor
mov
mov
fwait
ljmp
add
test
je
gs
lods
mov
jae
fldl
scas
ret
xor
pop
or
pop
dec
arpl
mov
adc
push
popf
mov
iret
outsl
das
pop
or
or
sub
stc
arpl
push
sbb
jo
outsb
adc
cmpsl
lds
lret
dec
fwait
movsb
aas
dec
imul
mov
push
leave
xchg
mov
stos
cmp
mov
or
aad
or
or
mov
pop
fwait
jae
jmp
dec
pop
movsl
mov
ja
sbb
mov
filds
dec
dec
jp
aas
popf
cmp
shl
int3
cmp
loop
mov
repz
xchg
jbe
push
outsb
sub
fildll
lock
aam
in
cli
loope
enter
lds
and
pop
fldl
mov
pop
cld
jg
xor
ljmp
orb
movsl
sub
cmp
and
push
mov
mov
pop
imul
sbb
inc
out
sub
popf
clc
cmp
ljmp
ficoms
add
pop
xor
repnz
into
xchg
mov
cwtd
add
jnp
sbb
or
hlt
jg
lods
adc
cmpsb
xchg
mov
cmp
ret
ds
movsl
push
lcall
repnz
aad
mov
push
cmpsb
testb
pop
je
mulb
out
lock
pop
dec
aaa
pop
cmp
or
jb
push
jp
sub
mov
inc
repnz
or
int
test
in
ljmp
gs
add
hlt
iret
mov
shll
add
jbe
inc
jo
inc
mov
out
sbb
stos
lock
ret
xlat
ficoml
dec
int
jae
andl
xor
lea
addl
sub
mov
arpl
mov
cli
rcll
mov
push
mov
je
movsb
dec
adc
test
es
sbb
loopne
into
divl
pop
addr16
mov
pop
loop
jb
sbb
dec
mov
rcrb
pop
dec
xchg
sbb
xor
rolb
cltd
lcall
jae
cmp
pop
push
in
cwtl
loop
mov
mov
push
mov
jne
test
xchg
cmp
cmp
ljmp
repnz
sbb
inc
jbe
cwtl
add
jo
add
sub
add
test
shll
in
lahf
sbbb
and
stc
push
xchg
clc
loopne
xorb
std
push
vmovlps
insb
jnp
loope
shrl
imul
xchg
in
lods
fisttpll
push
loopne
divl
pop
es
pusha
inc
sahf
insl
sub
leave
pushf
sub
jno
add
repnz
pop
je
nop
push
sbb
js
in
pop
push
int
in
sub
mov
fisubrl
sbb
out
pop
or
sti
mov
jns
jge
jbe
dec
pop
xor
push
adc
clc
dec
flds
test
jo
inc
jbe
sahf
fbstp
pop
in
xchg
mov
or
jae
pop
sbb
mov
xchg
mov
mov
push
push
stos
xlat
out
dec
fcoml
fidivs
push
jns
inc
sar
add
stc
fldenv
stos
cmp
in
xchg
js
insl
sbb
mov
push
inc
pop
cltd
imul
fildl
lea
or
inc
stos
or
sarl
lods
cwtl
sub
inc
push
pop
in
mov
inc
lods
ret
add
or
and
clc
and
jecxz
call
dec
mov
mov
cmpsl
push
mov
leave
mov
inc
call
mov
into
or
pop
dec
out
test
leave
or
mov
in
push
sar
xor
clc
into
in
jg
mov
loopne
int
cmpb
fbld
sbb
pop
inc
push
xchg
in
jae
add
ds
into
push
mov
jp
mov
push
out
xchg
sbbl
sbbl
aas
push
xor
repz
cmp
mov
fwait
pop
and
jb
das
xchg
adc
push
adc
mov
daa
add
inc
fwait
jno
jp
inc
xlat
jl
dec
jbe
push
dec
scas
movsl
sahf
insb
dec
test
loop
les
cmpsl
adc
stc
adc
pop
mov
imul
and
into
les
scas
std
outsb
gs
aaa
lods
cmp
aas
int3
mov
into
mov
ffreep
aaa
std
ljmp
ds
jp
lea
mov
jl
ds
mov
sbb
mov
sub
jbe
fs
loopne
sahf
bound
imul
jae
or
or
shll
shl
or
lea
inc
mov
adc
push
add
das
inc
in
push
xchg
and
sub
dec
mov
je
movsl
push
add
dec
push
pop
int
mov
bound
sti
cmp
scas
in
dec
movsb
dec
jp
lods
pop
insb
cltd
mov
add
adc
mov
jle
fsubl
push
dec
sbb
lahf
jle
cli
enter
fisubl
cwtl
aas
mov
mov
mov
xchg
adc
inc
xchg
mov
andb
popf
in
mov
repz
jns
jmp
mov
lcall
lock
movsl
test
and
add
mov
pop
bound
xchg
sbb
pop
repz
pop
push
xchg
cld
movsb
push
hlt
and
imul
inc
into
loopne
ret
mov
sub
mov
adc
repnz
cmp
mov
mov
sti
push
mov
lcall
test
xorl
mov
lea
push
mov
lret
test
adc
and
sarl
sub
cmp
and
mov
cmp
pop
sbb
sub
sub
decl
enter
shl
jge
arpl
roll
pop
add
and
loop
sbb
gs
dec
xor
or
push
loopne
pop
dec
testb
sbbb
mov
test
movsb
mov
fidivrl
pushf
lods
ja
mov
popf
fst
rclb
arpl
cmc
dec
push
pop
adc
andl
fs
and
fs
xor
xor
outsb
daa
cmp
inc
jle
lods
push
nop
test
push
mov
fs
xchg
std
jge
in
sbb
fnsave
int3
xchg
test
inc
xor
cmpsb
in
inc
imul
mov
and
fs
ss
inc
in
sarb
mov
repz
lods
jge
or
popa
mov
les
leave
mov
dec
imul
push
sbb
push
test
repz
bound
std
popf
adc
push
movb
sub
cmp
push
lret
not
dec
int
je
jl
call
fcom
bound
insl
int3
lret
jb
paddsb
in
ljmp
in
imul
aas
maxps
and
pop
in
std
pop
pop
ficompl
pop
sbb
dec
jp
jmp
cmp
sbb
xchg
push
in
sbb
cmpb
outsb
fisubrs
dec
inc
mov
lcall
out
add
xchg
sub
test
push
push
xor
and
mov
cmp
movl
arpl
push
in
mov
lea
in
lods
test
mov
aaa
xchg
popa
lock
sub
push
sbb
push
add
sbb
ret
push
xchg
aas
mov
push
dec
in
enter
arpl
cld
aas
stc
out
sbb
or
out
ja
int3
sub
pushf
mov
push
scas
mov
cmp
stc
out
dec
pop
inc
pop
dec
hlt
popa
fadd
aad
push
cmp
popf
aas
jb
jnp
jl
mov
mov
cwtl
call
dec
lret
inc
sub
sbb
lahf
fsubs
xor
push
add
push
cmpsb
das
xchg
imul
lcall
xchg
sub
inc
jbe
test
inc
fcoms
jae
cmpb
cmp
xchg
dec
adc
fwait
mov
jp
xchg
in
push
xchg
iret
jl
mov
cmp
push
sahf
clc
nop
and
adc
ret
and
add
shlb
push
cwtl
push
sarb
ja
adc
mov
icebp
mov
rorb
test
out
push
fistpl
popa
js
sbb
add
mov
add
mov
test
mov
stc
mov
mov
dec
mov
adc
mov
cmpsb
push
ss
mov
xchg
loopne
xor
sti
fdivp
ja
insl
add
sub
push
ja
cmp
mov
outsb
mov
jno
mov
sbb
orl
jae
fstp
jnp
iret
and
pop
sub
mov
or
or
aad
in
lds
cltd
repz
and
xor
into
dec
push
add
rcr
xchg
mov
mov
pop
push
lahf
sub
aas
lahf
pop
loop
and
jl,pt
lret
out
aad
pusha
out
addr16
pop
hlt
mov
cmp
popf
push
xchg
mov
fwait
xchg
inc
scas
sbb
ljmp
inc
jae
fldl
mov
lret
inc
mov
cmp
push
and
mov
aas
inc
jb
cmc
sub
rolb
pop
jnp
fwait
inc
sti
shll
or
xchg
int3
jle
jnp
cmp
aam
and
pop
mov
mov
in
js
adc
xor
push
lcall
popa
call
cwtl
out
imul
adcb
and
xchg
mov
dec
bound
popf
aas
xorb
pop
sbb
or
and
push
cmp
inc
inc
mov
cld
inc
sub
andl
scas
gs
aaa
sbb
js,pn
into
test
cmpsb
int3
dec
scas
shlb
push
pop
out
mov
or
pop
sub
gs
pusha
mov
cmp
jae
inc
push
mov
into
xchg
and
std
sub
jge
out
fiaddl
sub
sbb
insl
push
xchg
and
icebp
clc
jns
sbb
das
xchg
pop
mov
aaa
mov
fmuls
daa
in
fs
jb
mov
sbb
sti
int
adcl
inc
mov
pop
lea
popf
data16
cs
js
pop
xor
xor
sbb
and
mov
fimuls
hlt
enter
imul
outsl
int
pop
dec
in
ja
ljmp
dec
int
push
cmova
stos
pop
enterw
daa
fwait
mov
aaa
jbe
or
push
mov
jne
pop
add
loopne
outsl
lods
and
fadd
das
sbb
mov
arpl
in
das
adcl
sbb
mov
mov
mov
sar
pop
mov
push
add
pop
push
pop
dec
adc
cmpsl
push
mov
add
cmc
add
movsb
mov
push
popa
std
xlat
clc
iret
jns
aam
sbb
pop
add
add
sbb
sarb
out
test
divb
leave
cs
outsl
jb
jne
and
loopne
mov
sub
shll
pop
leave
pop
mov
test
in
or
cmpsb
movl
jge
les
lahf
fwait
add
in
adc
orb
sub
stc
or
rdpmc
data16
or
rol
sbb
sti
ret
mov
dec
loope
add
adc
jg
popf
xor
out
dec
push
mov
lcall
out
mov
mov
xchg
daa
mov
add
jae
and
cmp
icebp
loope
push
sub
inc
in
cmp
int
popf
mov
mov
data16
shll
mov
dec
push
cmp
je
jns
and
lahf
inc
shl
das
cmp
out
sarl
cld
dec
lret
loope
ds
fsub
xchg
cltd
lahf
lods
sbb
outsb
loope
xor
ljmp
or
jne
mov
mov
les
xchg
rolb
les
inc
loope
out
fbstp
add
and
or
rclb
push
int
adc
mov
into
out
lahf
push
add
pusha
add
mov
in
inc
pop
xchg
in
pop
cpuid
mov
testl
addr16
xchg
jge
fs
pusha
and
inc
lret
mov
aaa
pushf
test
cmp
int3
imul
mov
pushf
inc
fwait
lret
pop
xor
xchg
mov
ret
xchg
or
adc
and
push
inc
loope
jbe
fcom
mov
add
add
ret
mov
shll
insl
xor
pusha
sub
lea
push
jmp
int3
dec
inc
mov
lea
loop
cmp
and
cmp
sbb
sti
cmc
popa
add
sbb
mov
insl
add
pop
cmp
loope
je
pop
aaa
mov
lods
xchg
ljmp
dec
lods
mov
add
or
shlb
xor
mov
xchg
pop
fcos
subl
shrl
test
pusha
jo
repnz
loop
test
mov
jns
mov
pop
mov
int
in
push
ds
lock
pop
xor
push
test
mov
nop
and
aas
bound
and
fidivrs
add
jg
loopne
in
mov
dec
dec
or
aaa
fwait
daa
les
pop
mov
xchg
and
xchg
test
sub
and
mov
pop
push
sbb
add
jae
jmp
stc
mov
popa
inc
mov
inc
cmp
xchg
outsb
scas
inc
insl
lock
loopne
fildl
cmp
andb
sbb
enter
or
mov
mov
sahf
inc
call
out
test
sbb
fbstp
cmpsl
addl
xchg
xor
cld
das
inc
arpl
push
orl
loope
fwait
call
rol
mov
push
adc
sbb
dec
dec
imul
jecxz
mov
std
pop
fdivrl
fcmovnu
sbb
and
xor
pop
std
cwtl
inc
rcrb
sub
test
cli
dec
push
mov
dec
and
mov
mov
subb
jno
fwait
sbb
and
stos
mov
adc
daa
mov
xor
dec
inc
push
outsl
push
push
push
pusha
and
jb
push
frstor
cmpsb
lods
insb
xlat
xlat
and
cmp
dec
lea
pop
cmpl
jbe
xlat
inc
mov
subl
lret
lcall
leave
sbb
ja
xor
xchg
ffree
ss
in
sub
in
in
push
ret
or
push
hlt
add
inc
sti
in
lea
popa
pop
sub
popa
cmp
fidivs
mov
jge
mov
push
lds
iret
aas
scas
aas
xchg
lret
and
dec
fwait
and
test
lods
test
es
test
popa
mov
adc
xor
push
adc
popa
push
loop
xchg
cmp
dec
fisubl
dec
sarl
jp
je
adc
or
and
rcr
and
nop
iret
int
inc
dec
enter
or
pushf
mov
fwait
lods
setl
pop
in
dec
add
jae
mov
pop
nop
out
and
sti
push
movsb
pop
icebp
mov
mov
rol
push
rolb
jnp
push
add
das
add
adc
pop
pusha
clc
mov
arpl
test
mov
add
push
fstpl
pop
jmp
dec
imull
jbe
push
loopne
push
call
das
sbbb
lds
fcoml
jb
js
dec
add
adc
pop
les
mov
cmp
or
sti
sahf
sbb
lea
cmpsb
repnz
push
mov
dec
jae
xorl
add
xlat
xchg
outsl
out
mov
mov
xchg
out
pop
dec
xchg
and
ja
mov
add
push
add
incb
sub
je
mov
sbb
mov
xor
retw
xchg
mov
stos
adc
dec
int3
addl
add
filds
pop
cmp
icebp
pop
les
dec
dec
fdivrp
div
scas
or
jne
sub
xchg
fistpl
dec
scas
dec
test
loopne
loop
or
test
insb
or
pusha
sub
cs
mov
sbb
outsb
fistps
imul
and
mov
ljmp
outsb
or
inc
nop
mov
jp
stos
int
mov
cmc
inc
fimuls
lcall
jg
sub
outsb
inc
jae
lea
sbb
mov
push
int3
mov
push
and
in
mov
mov
decb
cwtl
out
testb
fst
add
fnclex
rclb
push
cmpsl
stos
int3
in
fsubrs
pop
or
sbb
sahf
cmc
addr16
mov
lret
xchg
loop
xlat
dec
js
loop
add
add
jo
sbb
pop
adc
dec
call
mov
cwtl
rcll
lock
push
jge
int3
daa
in
adc
out
cwtl
mov
les
mov
xchg
lret
xchg
mov
test
cmp
out
sti
bound
mov
nop
or
jno
adc
addr16
xchg
arpl
dec
jb
dec
inc
rorb
mov
stos
mulb
xchg
imul
push
shl
dec
pop
mov
popa
jne
xlat
mov
aad
sub
ds
leave
dec
cli
enter
dec
fldt
je
addl
ja
dec
xchg
test
sbb
dec
out
lret
aad
imul
je
xchg
mov
insl
lds
clc
cmp
add
push
xchg
push
jle
add
arpl
in
sub
mov
movsb
popa
mov
push
inc
test
dec
mov
pushf
xchg
dec
sub
lock
dec
xchg
in
not
ljmp
mov
fisubrl
fistpll
jb
loope
lret
mov
jae
inc
adc
imul
popa
mov
pushf
testl
fcoms
inc
lds
test
jo
push
xor
mov
inc
dec
xor
test
push
ja
pop
ret
mov
mov
cmp
cmp
ror
adc
push
jp
dec
int3
mov
mov
movsb
test
popf
mov
inc
xchg
test
jb
clc
mov
and
cmc
sti
clc
push
cmp
jne
cmp
sbb
xor
ds
int
mov
cmp
push
or
or
sbb
das
arpl
popa
xchg
clc
fstpt
sub
repz
clc
in
xor
dec
js
inc
out
xor
test
mov
sbb
fistpll
sti
ljmp
pusha
es
aas
mov
test
cmp
inc
arpl
mov
scas
lcall
and
adc
ds
inc
test
movsl
mov
lods
pop
push
aam
inc
scas
cmc
test
jmp
jp
scas
out
sahf
out
lods
jge
push
and
adc
inc
cmp
or
mov
dec
imull
cmp
hlt
andb
jmp
jecxz
xchg
leave
mov
pop
or
mov
repz
test
out
xchg
outsl
mov
xchg
sub
out
mov
outsb
lods
mov
mov
jb
mov
imul
add
sbb
dec
mov
mov
ret
dec
xor
jb
pop
inc
inc
rcl
andb
popa
push
jmp
mov
push
push
loop
and
lods
shlb
push
pop
daa
ljmp
jl
in
push
mov
ja
cmp
outsb
scas
jle
jb
cmp
mov
in
les
pop
mov
mov
xor
and
fdivl
hlt
in
add
out
dec
outsl
push
xchg
push
cli
add
add
sbb
aam
insb
fcomps
adc
pop
push
scas
enter
or
pop
xlat
cli
loop
repz
mov
inc
xchg
roll
sub
or
leave
aad
fs
ja
jmp
jno
rcrl
mov
ret
cmp
sub
mov
jae
inc
xor
or
mov
es
mov
icebp
adc
mov
push
jns
test
push
stos
push
xor
push
add
sarb
jg
icebp
out
js
fmulp
scas
mov
fwait
sub
cmp
test
and
dec
imul
and
in
pop
shl
push
shrl
sbb
push
gs
jae
jnp
ret
sub
and
jecxz
enter
pop
dec
inc
cmp
fcoml
loope
dec
xchg
and
adc
rcr
inc
outsb
sbbb
stc
orps
arpl
cli
cltd
push
icebp
ja
mov
int3
mov
mov
notl
add
sbbl
add
xchg
popf
ss
ret
test
or
lcall
sbb
inc
add
adc
jge
sub
mov
popf
cwtl
test
pop
jl
pop
je
js
add
stos
sub
adc
mov
inc
rcrb
out
adc
lds
movb
mov
push
lock
sbb
sub
and
mov
mov
mov
xchg
mov
mov
out
pop
out
rorb
popa
sbb
aaa
mov
das
add
fistpll
add
pop
fisubl
rcrl
rorl
sub
push
dec
inc
pop
aas
mov
xchg
shll
pop
out
outsl
fidivrs
test
xor
test
inc
add
sbb
fwait
test
fisttps
jg
mov
or
stos
pop
mov
loop
cmp
push
pop
daa
outsb
xchg
aad
sbb
inc
outsb
push
lahf
xchg
push
imul
leave
enter
fistl
insb
push
in
popa
mov
mov
jmp
stos
ficompl
out
bound
lea
mov
jb
add
mov
or
lret
loop
ss
loopne
pop
fnstsw
int
add
lahf
push
aas
int
push
push
mov
push
jb
aaa
sbbl
les
mov
push
xor
arpl
xor
fidivrl
dec
dec
fistpll
fiadds
aad
test
sbb
repnz
jge
cld
fwait
or
push
inc
cmpsb
movsl
mov
cmp
iret
mov
aas
ja
cmp
shlb
add
fstpt
sarb
adc
mov
loopne
jns
fcmovnbe
outsb
xor
cmp
insb
mov
xchg
jb
xor
push
and
iret
testb
adc
and
xchg
sbb
stos
fwait
data16
push
daa
iret
in
pop
dec
imul
enter
mov
mov
mov
out
shll
jecxz
and
lcall
push
xor
stos
mov
fs
mov
inc
mov
fmuls
sub
popf
jecxz
dec
jg
flds
pop
cli
je
ja
fidivrs
shll
ret
push
fs
movsl
lret
cs
lcall
scas
lret
sbb
shl
or
loope
sub
inc
sub
loopne
scas
mov
jb
mov
fcmovnbe
mov
testb
xchg
and
fistpl
aam
sbbl
dec
inc
inc
xchg
cli
mov
in
xor
fmul
aam
mov
xchg
imul
mov
dec
sbb
mov
arpl
ja
dec
nop
inc
aaa
out
repnz
dec
xchg
jge
jmp
push
mov
mov
stos
mov
roll
dec
push
jae
cwtl
movsb
xchg
lret
adc
je
jmp
into
cmp
fisubs
stos
daa
repz
hlt
ja
mov
lret
jb
mov
rcl
out
shll
push
loopne
xlat
mov
add
test
dec
es
pusha
imull
inc
sbb
stc
dec
outsb
mov
cli
stos
aaa
loope
dec
dec
lret
or
fsubs
loopne
inc
and
push
loope
push
decl
notb
pop
fwait
cmpsb
shl
mov
push
inc
push
or
int
pushf
mov
test
mov
or
lea
push
imul
fldt
and
js
aad
in
out
cmp
cmpsl
mov
enter
hlt
xorl
ds
jle
jg
faddl
cltd
push
cwtl
mov
mov
lret
push
xor
push
add
or
jns
xor
iret
sbb
mov
adc
jb
push
mov
inc
ds
jg
jg
mov
cmpsb
test
mov
sub
push
mov
push
jl
inc
cld
jne
scas
lock
or
outsl
repnz
cmp
jecxz
mov
fstl
mov
xchg
les
push
push
sub
fistl
stos
mov
inc
mov
icebp
in
pop
xchg
and
mov
mov
xchg
pop
inc
aam
dec
insl
sbb
dec
clc
dec
mov
outsl
push
adc
clc
or
or
mov
and
subl
pop
ljmp
shlb
jg
mov
xchg
push
hlt
movsl
in
ds
daa
jne
repnz
outsl
jmp
jne
js
clc
popf
aas
inc
sbbl
out
int3
mov
sahf
jl
ret
pop
sub
mov
sub
pop
incb
sbb
dec
jnp
repnz
jns
ret
out
ds
sbb
lret
lahf
jne
jle
sub
imul
mov
mov
adc
sbb
jnp
rorb
mov
dec
aad
xchg
stos
rep
mov
pushf
dec
push
push
or
sbb
in
pop
gs
xor
mov
idiv
push
sub
mov
or
in
xchg
rcrl
gs
jmp
fs
jmp
outsl
nop
mov
and
push
push
rclb
insl
jp
imul
sti
sbb
or
jmp
call
push
mov
cmp
sub
call
cmp
pusha
pusha
movsl
push
mov
es
js
mov
add
jo
pop
in
push
das
dec
js
shl
ds
pop
dec
test
pop
loope
shl
das
xchg
or
pop
sub
decl
dec
xchg
lock
cltd
fsts
push
xchg
xchg
test
push
and
arpl
outsl
xlat
das
aas
clc
lods
rol
xchg
push
jne
add
sub
xor
and
insl
mov
ljmp
jbe
adc
xchg
inc
dec
testb
out
jl
xor
das
fistpll
lods
push
fwait
push
iret
clc
inc
cmp
xor
cs
xchg
call
mov
mov
jnp
cmp
fs
jae
jno
lcall
scas
movsb
mov
jl
ljmp
daa
jg
sbb
and
aad
push
sbb
sbb
arpl
nop
cmp
mov
lahf
aas
xlat
cs
push
adc
mov
pushf
adc
int3
jle
fcmovne
cmp
andl
repz
nop
or
out
jne
pop
fstl
fidivs
shll
hlt
xlat
mov
cwtl
stos
cwtl
imul
sbb
lods
xchg
pushf
fidivl
ret
jl
dec
cmp
dec
sahf
sub
mov
mov
shlb
jno
js
cmp
sbb
dec
sub
imul
jno
sbb
xorl
test
repnz
repz
fisubl
push
out
or
daa
adc
or
fcomps
and
dec
push
push
push
or
sub
dec
jns
mov
cmpsl
push
jmp
mov
cltd
cmp
sti
sbb
rcrb
mov
dec
inc
imul
popf
adc
jae
fdivs
enter
sahf
icebp
loop
stos
cmp
push
push
subb
adc
push
add
fs
inc
aaa
shrl
aam
lods
test
test
test
mov
in
dec
sbb
jle
jbe
xor
incb
jns
pop
cltd
jns
fimull
sub
ja
jo
mov
mul
hlt
js
dec
pop
je
xchg
jmp
dec
ja
inc
pop
sbb
lahf
loop
mov
mov
inc
xchg
outsb
faddl
leave
push
pusha
inc
fldcw
push
jo
ss
aad
dec
or
fbstp
out
or
jne
push
xor
scas
jbe
push
jp
mov
test
fstl
shll
repz
out
ja
sahf
out
je
mov
ljmp
lret
data16
xor
in
ficomps
enter
xor
shll
sbb
sub
add
addl
mov
push
insb
fstpt
sbb
ds
cld
sti
pop
mov
daa
inc
xor
pop
notb
mov
in
inc
mov
scas
addr16
xor
xor
sti
add
stos
lahf
rcrl
imul
arpl
lret
daa
rcr
ljmp
mov
cmp
out
sbb
pushf
cmp
adc
mov
repnz
push
cld
sbb
mov
jb
adc
jmp
or
aam
movsb
movsb
out
mov
or
dec
push
inc
pop
cmpsl
dec
cmp
pop
imull
scas
fs
adc
scas
imul
jle
repnz
mov
or
or
mov
loop
jb
jo
clc
fidivl
or
orb
scas
add
push
pop
pop
imul
dec
lcall
bound
xor
mov
mov
cmp
sbb
mov
repz
cmp
pop
add
loop
xor
mov
fists
cmp
in
cltd
bound
scas
adc
and
or
adc
in
dec
sbb
push
popa
sub
fwait
call
push
sub
dec
out
mov
sti
pop
fsubrl
leave
loopne
pop
fildl
pop
insb
pop
adc
sbb
jg
sahf
cmp
pop
add
shrl
and
mov
xor
xchg
mov
mov
push
xchg
dec
adc
mov
mov
xor
inc
fs
or
pop
js
mov
movsl
in
pop
nop
push
mov
pop
mov
adc
hlt
push
aaa
mov
inc
mov
cmp
gs
in
sbb
cmp
bound
loope
popf
int3
adc
push
ret
mov
mov
xor
sub
mov
loopne
fnstsw
adc
push
cmp
cmp
subb
cwtl
inc
movsb
push
sbb
mov
dec
jno
nop
mov
xor
xchg
and
push
pop
fildl
inc
jp
repz
mov
sbb
mov
cmp
outsb
cli
shr
sbb
xchg
pop
or
sub
test
mov
pop
outsl
sbb
ret
push
repz
pusha
cmp
xchg
pcmpeqb
ds
rorb
or
pushf
dec
mov
lods
adc
xchg
nop
std
int3
fisttpll
fdivrl
out
icebp
jnp
out
jl
imul
ficoml
or
cmpsb
dec
test
cwtl
rcrl
push
push
flds
xorl
cld
loop
jb
lods
dec
leave
cli
push
push
iret
sbb
hlt
inc
aad
bound
mov
lock
jg
pop
aad
scas
int3
lret
iret
sub
fbld
lret
xchg
xor
int3
jb
mov
push
jge
mov
popa
jno
add
sub
addb
jl
inc
ljmp
sbb
in
addr16
popl
sub
test
jle
pop
cltd
and
and
pop
cmp
scas
lret
cmc
add
mov
mov
adc
sbb
hlt
lcall
dec
ds
mov
mulb
decb
js,pt
hlt
les
fwait
int3
jo
scas
jp
push
pop
daa
push
bnd
inc
int
leave
mov
mov
push
insb
dec
push
xchg
out
jge
popl
scas
out
ja
test
dec
jnp
add
adc
sbb
xor
jae
sub
rolb
jecxz
push
pop
pop
rorl
inc
xlat
mov
push
sti
jg
push
test
stc
lret
fucomi
dec
adc
inc
repz
sbb
jno
pusha
mov
and
in
je
lret
hlt
daa
test
jmp
ret
jecxz
inc
lods
in
gs
roll
and
outsl
push
or
and
sub
popf
sub
and
stos
adc
stos
pop
repz
sbb
gs
ss
sbb
xor
cwtl
mov
sub
scas
out
testl
push
sub
repz
mov
push
push
js
repz
jns
push
sub
mov
mov
xor
xor
or
jb
insl
sbb
adcb
xchg
mov
movsb
shlb
into
adcb
mov
out
call
int
xor
bound
repz
mov
movsl
inc
push
mov
xchg
or
inc
mov
shll
sub
xchg
or
jmp
lret
sbb
enter
lcall
push
jle
jns
mov
stc
stc
aad
scas
inc
mov
add
dec
fcoms
in
rcl
out
fldl
int3
or
loop
and
lods
add
inc
push
and
mov
sbb
scas
dec
cmp
push
fsub
mov
xor
or
fldl
mov
je
sub
out
push
push
outsl
mov
push
andb
repnz
dec
xchg
and
mov
dec
test
cwtl
loop
cmc
pop
ja
and
arpl
sub
adc
mov
jge
loope
xchg
jbe,pn
mov
cld
inc
sbb
inc
jecxz
outsl
mov
and
push
daa
mov
xor
mov
cmpsl
jns
add
les
iret
lcall
mov
stc
or
jno
cmp
xchg
andb
jmp
cmc
sbbl
addl
ljmp
in
and
sbb
arpl
pusha
ficoml
sbb
mov
int3
rcrl
xor
push
popf
cmp
mov
sarl
and
pop
push
out
jl
lds
cmc
movsl
in
pop
scas
fstl
stc
cmpsl
push
inc
pop
lods
fnstsw
lods
lret
xor
xlat
imul
and
daa
or
mov
test
loopne
testl
or
loope
mov
jp,pn
push
inc
push
add
mov
jb
mov
pop
push
out
cmc
cmp
movsl
cmpsl
in
arpl
fiaddl
jne
testb
cmp
jo
pop
dec
dec
out
das
dec
cltd
dec
out
lret
clc
fsts
es
xor
pop
xor
and
or
mov
js
out
mov
jno
lahf
popa
aas
mov
cwtl
icebp
jnp
test
jns
push
inc
push
cmp
or
mov
inc
test
adc
je
bound
jne
or
out
xchg
rolb
aam
lcall
jns
addl
push
fwait
xchg
xchg
cmp
add
and
jne
out
jb
lahf
in
lret
imul
jg
or
lock
mov
sub
jp
xor
xchg
arpl
fdivrl
fidivrl
mov
repz
sub
stc
jecxz
lds
sbb
dec
mov
insl
mov
xchg
cs
jno
arpl
mov
std
jp
ret
inc
xchg
pop
test
jnp
stos
fadds
mov
inc
pop
outsl
ret
pushf
out
test
adc
aam
sbb
pop
insb
and
pop
xchg
cmp
lods
cmpsb
addl
in
movsl
lock
mov
fucomi
loope
pushl
cmpsb
gs
mov
hlt
dec
dec
dec
rcrb
sbb
sbb
movsl
jg
push
sbb
sub
mov
js
adc
test
aas
aam
mov
adc
xor
jbe
xor
rcpps
mov
pop
subl
dec
xchg
inc
mov
add
mov
or
jl
dec
in
xchg
mov
mov
inc
ss
ss
dec
out
mov
lock
mov
gs
cwtl
inc
or
test
xchg
sbb
cmp
mov
inc
and
xchg
nop
les
fistpl
int
mov
mov
lcall
push
or
and
iret
shl
and
mov
jecxz
push
das
andb
out
iret
jo
insb
jno
std
ljmp
mov
cltd
movl
push
adc
cld
ret
xchg
push
jns
les
dec
aas
sub
rolb
push
repnz
int3
dec
in
dec
mov
fadds
pop
pop
inc
or
insb
or
sbb
lea
lahf
fcomp
xor
xchg
push
icebp
mov
sar
mov
in
mov
dec
xchg
data16
in
repz
dec
push
out
dec
pop
sub
and
clc
jne
aas
adc
insb
loopne
sbb
cmp
and
xor
psrad
clc
mov
divl
mov
ret
sbb
mov
int3
dec
pop
push
mov
iret
push
inc
add
lret
lret
mov
cli
cli
decl
xor
lret
in
filds
js
push
bound
cmp
sti
add
lds
fsubl
sbb
sub
out
push
mov
stc
fimuls
repz
mov
jecxz
out
loopne,pn
nop
test
bound
and
ficomps
push
cmpsl
cmpsl
jo
and
insb
mov
push
out
dec
cmp
hlt
out
nop
pusha
loopne
loopne
mov
sarl
mov
jg
scas
and
out
aad
mov
jo
pushf
leave
or
in
rcrl
pusha
mov
les
out
shlb
xor
aam
push
sti
jne
stos
jae
test
push
push
cmpsl
inc
inc
cmp
sub
mov
jne
sub
insl
ficoms
mov
mov
xlat
push
and
lds
iret
pop
mov
lahf
dec
pusha
call
ret
lea
jmp
repnz
mov
and
cmp
sbb
test
inc
push
inc
add
xchg
pop
push
add
sqrtps
jge,pn
ds
mov
test
adc
sub
cmpsb
or
scas
xor
stos
movsb
in
push
stos
xchg
sbb
or
pusha
push
iret
jl
jecxz
jbe
ficoml
popf
addr16
sar
jmp
pop
pop
push
addb
cmp
mov
and
outsl
push
imul
xchg
add
ja
js
imul
test
xor
test
stc
clc
stos
push
outsl
inc
mov
sti
dec
jp
jb
xchg
add
cmp
fistpll
mov
lock
cmpsb
lds
clc
mov
jle
inc
insb
cltd
or
js
roll
mov
xchg
xchg
aad
sbb
adc
jmp
fwait
out
ret
inc
mov
imul
test
adc
sarl
lods
int
jb
mov
imul
imulb
icebp
sub
xor
ficompl
flds
nop
inc
or
fucomp
ds
fildll
mov
int3
or
pop
cmpsb
cmp
fs
mov
in
outsl
push
fstl
lcall
jb
lds
mov
add
in
pop
shlb
dec
fstpt
mov
sbb
push
sub
push
push
mov
cmc
mov
repz
fsubl
loopne
insl
sub
pop
test
push
cmpb
outsl
out
and
out
lock
stos
sub
call
fstpt
mov
loopne
fcmovnu
xchg
nop
mov
daa
in
lock
xchg
mov
fldenv
je
out
jnp
adc
ffree
lods
mov
aam
mov
loop
les
outsl
jmp
cltd
pop
out
es
stc
cmp
call
mov
mov
loopne
fs
mov
mov
in
pop
dec
ljmp
pop
lret
mov
aam
aaa
sbb
insb
add
enter
lds
aas
popf
ljmp
mov
mov
mov
in
divl
add
lret
enter
mov
mov
pop
mov
arpl
clc
call
jns
jp
sub
hlt
mov
mov
repnz
add
outsl
dec
mov
and
mov
je
repz
mov
sub
popa
mov
dec
loope
inc
hlt
mov
jp
je
dec
sbb
jne
jecxz
mov
mov
lcall
push
ror
sub
aas
into
hlt
shr
or
aaa
mov
inc
lcall
mov
or
cs
mov
and
pop
mov
insb
jbe
pop
cltd
aam
and
dec
mov
sahf
inc
mov
ljmp
loopne
push
leave
int
jbe
bound
mov
inc
popa
scas
ret
outsl
jle
sub
push
sub
push
pop
gs
xchg
sub
cmpsl
xor
rorb
call
dec
cld
mov
data16
imul
es
push
call
mov
push
aam
mov
xchg
les
aad
adc
cltd
push
xchg
or
inc
imul
rorb
imul
jge
shll
shrb
pop
les
out
rcll
push
cmp
lret
lcall
xchg
pop
inc
mov
mov
inc
xchg
push
leave
adc
cmp
outsl
or
jl
stc
xchg
xor
inc
outsl
inc
out
sbb
or
lock
call
insb
pop
bound
mov
lock
test
outsl
je
pop
inc
push
sub
jl
push
dec
les
dec
cltd
enter
int
cs
lods
jnp
insb
int3
dec
test
jbe
sbb
fdivrl
imul
dec
mov
pop
dec
movsb
jge
sub
jnp
lds
adc
and
adc
jle
jmp
adc
mov
dec
movsl
enter
hlt
test
fldenv
inc
icebp
sub
inc
leave
or
xchg
movb
out
cmp
inc
push
in
fisubrl
subb
aam
xchg
insl
pop
adc
cmc
or
xchg
sti
ljmp
add
xchg
out
insb
mov
negb
dec
mov
cmp
lods
aaa
mov
dec
ficoms
addr16
adc
add
sbb
sti
testl
test
pop
sbb
mov
inc
lea
je
mov
les
cmc
lcall
jge
ss
mov
fmuls
test
pop
loope
outsl
adc
adc
or
pop
sahf
in
out
lret
clc
lods
mov
inc
pop
fldl
xchg
idivl
sarl
jo
cld
add
shll
cmc
inc
xchg
lods
popf
mov
inc
outsl
and
cmp
push
and
icebp
cli
xchg
mov
sahf
dec
icebp
pop
xor
leave
subl
les
in
mov
iret
cwtl
dec
fisubrs
aas
dec
fiaddl
add
cmpsb
mov
xchg
xchg
rcrl
inc
mov
adc
sbb
inc
inc
cmp
pop
bound
adc
mov
add
pop
adc
shl
push
movsb
aas
xor
movsl
aas
jg
iret
and
sub
imul
mov
push
mov
rorl
insl
or
pop
xor
xor
inc
arpl
in
mov
dec
lock
add
sbb
sbb
fdivrs
adc
adc
outsl
jp
idivl
je
cltd
imul
in
cs
push
jb
clc
adc
sarb
mov
test
cmp
cmpsb
add
jp
lret
sub
adc
pop
out
xchg
adc
out
aad
in
sbb
sbb
mov
call
dec
stos
imul
and
jnp
cmp
pop
and
dec
sub
mov
mov
mov
ret
testb
pop
dec
scas
movsb
push
dec
cmp
stos
push
jl
test
movsl
aam
jmp
rolb
jbe
hlt
mov
push
xchg
dec
cmp
cwtl
push
scas
or
jno
int3
movsb
sbb
lea
mov
cs
in
sbb
xchg
imul
inc
pop
div
push
jg
jmp
sbb
gs
or
mov
jne
sti
jmp
sbb
imul
stos
pop
or
or
xlat
in
faddl
sbb
push
pop
aad
xchg
je
shll
mov
xchg
xchg
or
in
cmp
es
inc
daa
add
jae
push
and
loope
mov
clc
fdivrl
dec
or
dec
cmpsl
jg
and
rcl
sar
popa
xchg
jecxz
xchg
fwait
adcl
outsb
imul
out
xor
cmp
pop
and
jge
fisubrl
movups
int3
into
nop
lcall
jp
push
in
js
xor
and
mov
iret
sub
cli
leave
sub
pop
push
in
mov
stc
jl
inc
inc
mov
jecxz
insb
push
js
inc
aad
fs
xchg
or
mov
in
enter
fsubrs
fisttps
adc
outsb
push
icebp
out
js
int3
fwait
xchg
shl
lods
mov
loopne
pop
or
imul
dec
dec
loopne
jmp
dec
out
jg
add
in
daa
jo
fstl
inc
in
fbstp
xchg
mov
jecxz
inc
dec
shll
cmp
inc
decl
sub
fdivl
int3
mov
inc
xchg
or
xor
xchg
cmp
addb
icebp
push
dec
and
pop
push
negw
sarb
mov
jg
lods
adc
jnp
es
inc
js
sub
movsb
or
cmc
and
adc
fwait
inc
cld
gs
xor
test
aaa
lcall
lldt
xlat
std
pop
adc
in
mov
mov
cmp
das
and
dec
insb
incl
out
je
sarb
and
and
or
jb
cli
les
add
je
cmp
xchg
test
iret
push
loope
sti
insb
aaa
scas
out
ja
mov
push
push
and
lret
and
or
cmp
aad
jp
jecxz
outsl
fs
test
imul
lods
outsl
js
movl
mov
add
pop
sti
adc
std
push
mov
ja
cmp
dec
push
les
stc
aas
adc
ljmp
je
lcall
sub
sti
xor
xor
adc
add
cs
dec
pop
sub
sbbl
mov
xchg
js
dec
lds
and
fisttpl
jne
mov
pop
loope
jb
and
mov
push
xor
inc
push
and
push
sti
inc
pop
icebp
xchg
je
sbb
sub
sbb
xchg
xchg
lret
test
push
sti
mov
add
adc
sub
mov
sub
std
mov
jns
int3
sub
xlat
call
icebp
lock
clc
sub
jo
push
mov
lds
mov
adc
cmp
xor
sub
mov
inc
fcomi
daa
rcrb
dec
jmp
cmp
jmp
jb
dec
rep
adc
movsl
adc
scas
sbb
arpl
cld
jge
adc
daa
loop
add
xchg
lea
jle
pop
popf
add
rorb
push
icebp
mov
rcll
imul
repnz
jo
sbb
rcrb
push
outsl
es
jmp
stc
push
jns
adc
scas
cmpsl
sbbl
sub
sub
push
insb
dec
clc
lcall
in
sub
ret
imul
xchg
dec
popa
clc
cmpsb
push
inc
push
sbb
std
fistpll
mov
push
dec
dec
or
mov
leave
xchg
dec
jg
sub
call
xchg
xchg
dec
mov
int
test
imul
dec
or
test
fsts
xor
into
shlb
jge
mov
sub
sub
and
mov
call
call
out
imul
shll
shlb
mov
xchg
mov
push
aam
das
in
cld
push
fwait
neg
push
push
in
into
fwait
inc
mov
mov
jge
sbb
cli
mov
jne
xchg
icebp
sbbb
xor
add
push
arpl
lahf
inc
rep
pop
cmpsb
hlt
mov
loope
xchg
jo
or
es
xchg
sti
and
sub
jb
pop
dec
lret
repz
jne
ljmp
add
fs
push
mov
lods
sar
cmpsb
inc
rcr
jle
inc
aas
repnz
divb
jle
push
test
jge
pop
pop
movb
scas
sub
jae
adc
loop
cmpsl
cld
mov
pop
sub
ljmp
jb
pop
stc
cli
ret
ret
scas
loop
sbb
dec
arpl
std
rolb
ds
sbb
push
jno
jb
push
pop
mov
cmp
inc
out
jp
add
mov
dec
hlt
lds
xchg
mov
popa
pop
jle
xor
ss
inc
popa
lcall
mov
xchg
push
out
mov
movsl
sbb
or
scas
rclb
cmc
adc
sbb
xlat
ds
fildl
daa
xor
cmc
test
xchg
sbb
push
repnz
lahf
ljmp
jmp
repz
jl
push
add
adc
stos
mov
lock
in
push
pop
xchg
xor
lea
jp
das
pop
dec
aas
jno
jp
fwait
jl
cmp
popf
in
push
mov
call
push
out
cmc
loopne
addl
mov
add
xchg
pop
rcr
ljmp
push
sbb
push
sbb
fidivrs
pop
mov
mov
pusha
les
arpl
repz
outsb
jmp
mov
xchg
pop
sbb
std
stos
fnstenv
and
push
mov
jae
imul
mov
add
and
push
jmp
push
push
xchg
jbe
icebp
out
lock
pop
out
adc
add
rolb
mov
pushf
fimuls
js
or
aaa
xchg
add
push
cmpl
out
dec
add
adc
loop
sub
sbb
jmp
and
lock
sub
fiadds
cmp
inc
sub
xchg
sub
ret
dec
movb
mov
and
push
out
aaa
data16
jnp
jecxz
cs
mov
and
mov
inc
xchg
ret
adc
push
jecxz
mov
jp
xchg
std
fs
sahf
cmp
mul
inc
push
pop
cmc
into
mov
push
lret
sub
xchg
pop
mov
pop
in
push
mov
xchg
in
movsl
aam
pop
adc
pop
clc
hlt
mov
mov
into
jl
mov
jns
cmp
xchg
daa
jle
xchg
cmpsb
add
mov
arpl
or
jae
shll
mov
fucomip
jecxz
and
sbb
sbb
shll
mov
mov
outsb
or
dec
test
adc
dec
dec
cmpsl
xchg
push
nop
sub
das
adc
insb
mov
adcl
in
or
fisttps
in
imul
dec
and
add
pop
adc
pop
leave
xor
leave
leave
lahf
out
addr16
in
and
je
jg
xchg
dec
xor
mov
adc
sbb
sub
mov
inc
or
sbb
das
jp
jmp
clc
movl
sahf
sbb
xchg
jbe
cmp
push
cmpsb
jge
adc
xchg
xchg
cmp
lahf
jno
rcrl
fwait
or
push
and
nop
xchg
sti
pop
mov
lock
xchg
mov
scas
cmc
mov
or
inc
hlt
pusha
outsl
cmc
out
adc
push
fimull
orb
insl
jp
cmp
and
negb
mov
mov
mov
int3
jnp
or
cmp
insb
jmp
and
cmc
icebp
mov
mov
fcoms
push
jmp
popa
push
roll
mov
and
mov
dec
xorb
popa
insl
insb
push
cmp
fwait
add
pop
jmp
iret
mov
xchg
xor
daa
movsb
lret
pop
jns
pushf
stc
stos
fucomp
icebp
sub
inc
stc
pop
mov
sub
inc
jae
pop
xor
pop
mov
hlt
adc
xchg
adcl
insl
cmp
loope
mov
rolb
inc
addr16
orl
adc
sub
push
icebp
pop
dec
popf
insb
mov
rcrb
and
lock
pop
jecxz
xchg
sbb
inc
mov
shl
addr16
std
dec
je
push
push
cmp
mov
es
fbstp
xor
sar
es
repnz
pop
sbb
mov
mov
inc
dec
and
adc
sarl
dec
push
std
rcll
inc
ss
cs
mov
pushf
xchg
test
pop
push
lock
mov
jns
int
cmpsb
es
or
mov
jae
mov
push
jp
pop
pop
inc
mov
sub
subb
mov
jbe
out
and
mov
ss
xor
dec
dec
dec
mov
sbb
xchg
lods
lret
push
xchg
lahf
inc
push
fs
and
cmp
push
andb
fsubs
mov
adc
ss
xchg
sub
and
in
jnp
xchg
iret
sub
arpl
lds
mov
sub
and
in
lea
push
test
push
sub
fcmove
dec
mov
clc
xchg
sub
xchg
sub
rcll
pop
in
inc
push
lcall
addr16
addr16
movsb
push
xchg
xlat
fimull
movsb
lret
insl
cmp
mov
aad
add
dec
dec
jecxz
mov
popa
aas
mov
adc
xchg
fisttpll
pop
or
sbbb
push
mov
pop
cmp
cmp
ja
xchg
xor
lret
int3
stos
and
and
jge
add
mov
and
xor
sub
aad
mov
mov
pop
imul
xchg
mov
sub
rolb
insl
jbe
rcr
pop
sub
pop
stc
mov
in
mov
and
dec
jp
repnz
je
outsb
xor
dec
out
gs
add
mov
xor
icebp
fwait
jle
mov
or
loopne
call
lret
pop
push
and
jg
jle
and
pop
push
adcl
pushf
cmpsb
sub
sbb
popf
test
ret
add
int
mov
lock
sbb
stc
push
loop
cwtl
aam
cmpsl
xor
sub
test
cmp
xchg
int
inc
inc
ficomps
xchg
arpl
mov
sti
shl
fdivrs
add
or
rcrb
cs
push
dec
xor
lahf
xchg
es
shl
pop
inc
pop
bound
std
fisubs
mov
jns
lcall
les
mov
repz
mov
hlt
dec
jno
jnp
loopne
fdivrl
add
icebp
xor
and
mov
stos
out
pop
sub
jle
cltd
mov
cmc
sbb
imul
pop
mov
xchg
shl
jb
adc
lcall
jnp
dec
push
adc
push
sti
pop
arpl
test
sub
mov
es
add
and
add
cmp
jl
icebp
icebp
add
xchg
cwtl
sub
out
inc
jno
cmp
in
add
push
lret
call
xor
testl
inc
in
push
inc
fsubs
repz
ljmp
mov
xchg
and
mov
cmp
std
xlat
dec
in
ljmp
fwait
jne
rcl
jo
sbb
sbb
mov
or
test
in
adc
arpl
dec
inc
nop
pop
test
sbb
mov
push
dec
andps
xor
adc
aaa
jo
stc
cmp
pusha
inc
mov
mov
jno
jnp
movsb
lret
pop
xorl
xchg
leave
arpl
es
dec
sbb
jne
fucomi
gs
inc
ss
sbb
pop
out
or
cltd
neg
lock
push
dec
lea
jl
and
adc
push
data16
in
insb
and
sbb
add
ljmp
dec
add
sub
mov
jle
shlw
mov
adc
loop
mov
scas
and
std
inc
leave
pop
aas
jns
or
ret
repnz
popf
adc
add
cmpsb
xor
test
inc
iret
mov
scas
aas
or
lods
mov
out
sbbl
or
lods
push
fistpll
add
js
mov
fldcw
in
mov
hlt
loopne
xor
in
add
xchg
aas
push
sarb
in
push
xchg
push
jae
pop
leave
repz
adc
rcll
or
sahf
fsubp
push
hlt
notl
int
adc
add
loop
mov
out
mov
dec
sub
jo
arpl
inc
les
loopne
xchg
dec
sbb
jecxz
stos
mov
cs
push
pop
and
mov
push
xor
cltd
mov
cmp
cs
int
imul
cmpsl
adc
dec
xor
aas
leave
inc
adc
xchg
mov
dec
hlt
xor
add
push
fldenv
jne
pop
dec
add
jne
add
mov
mov
arpl
jp
mov
testl
lods
mov
pusha
dec
js
push
fsubs
inc
pop
push
fnstenv
popa
inc
sub
push
and
fwait
add
outsl
cli
jne
mov
jecxz
xor
push
xchg
jb
testl
pop
xchg
pop
mov
shlb
fwait
lret
loop
add
mov
imul
cwtl
mov
mov
dec
push
inc
xlat
mov
or
sub
mov
ficoml
dec
jo
mov
pop
mov
adc
cmp
xchg
sub
or
stos
in
jmp
xor
int
in
dec
xor
xchg
int3
leave
stos
add
xor
ret
or
imul
jnp
psraw
mov
int
push
jmp
cmp
fs
sarl
loope
in
ja
cs
mov
fists
dec
arpl
or
jge
fmull
rcll
cli
scas
fiaddl
daa
bound
vpcomud
add
mov
inc
dec
inc
jnp
sub
add
lds
sub
mov
and
mov
jg
fldcw
sub
out
leave
jg
out
jp
popf
arpl
adc
cmpsl
mov
stos
insb
jle
aam
xor
clc
out
dec
aaa
imul
xchg
fwait
stos
adc
pop
jo
dec
fisttpl
out
arpl
sub
jge
or
ljmp
xor
test
mov
push
shl
cmp
mov
adc
fldcw
mov
jl
inc
dec
inc
cli
adc
pop
pop
jp
pop
insl
dec
xchg
lcall
stos
push
or
and
cltd
mov
stc
clc
mov
mov
mov
or
mov
rcrl
adc
adcb
test
cmc
fcoms
aas
nop
jg
xchg
popf
dec
fldt
je
jmp
mov
xor
xchg
ljmp
sub
rcll
stc
jge
cli
imul
ja
sbb
lock
sub
ds
cwtl
inc
test
pop
ss
pop
jbe
inc
jmp
test
orl
sahf
insl
je
sar
xchg
mov
cwtl
push
add
repz
push
imul
and
fidivs
cmp
je
inc
cli
out
and
fwait
cmp
add
rorb
mov
sarb
imul
push
test
xor
shrb
jl
jmp
sbb
xchg
lret
das
pop
cmp
fimuls
xor
xlat
sbb
adc
into
jge
push
pop
or
mov
push
imul
jl
sub
pusha
cmpl
xlat
or
lret
fcoml
mov
mov
rolb
mov
jmp
js
popl
loope
fsubl
push
mov
xchg
xor
cmp
xorl
xchg
rcrl
pushf
dec
aam
lcall
sub
fisubrl
lods
insl
mov
and
xor
or
movsb
sti
mov
iret
cmpsb
xor
sub
push
cmp
xchg
std
not
mov
xchg
push
cmpsl
popa
add
or
adc
cmpsb
xchg
xchg
jnp
inc
xchg
dec
sar
sbb
adc
jmp
test
or
out
adc
push
imul
mov
repz
mov
pop
dec
mov
cmp
in
movsb
popa
xchg
lret
bound
adc
add
dec
mov
xchg
jmp
pop
in
shll
inc
ja
js
rorb
data16
jnp
adc
push
mov
or
lcall
mov
sub
cmp
mov
inc
sbb
push
lcall
inc
stos
cmp
mov
imul
add
pusha
and
sub
out
outsb
lahf
pushf
cmp
out
pop
fimull
push
jl
fildll
rcll
test
out
and
cmp
out
test
js
cmpsb
iret
into
jle
mov
xor
arpl
scas
ror
dec
int3
sbb
push
lock
jne
and
hlt
or
dec
xor
mov
loope
xor
add
mov
cmova
xchg
xchg
insb
cmp
dec
in
jl
ret
andb
cmp
and
pop
rorl
add
call
ret
ja
ljmp
cmp
or
push
into
lds
add
mov
adc
jecxz
push
arpl
sub
push
call
cmp
popf
daa
jne
insl
jp
inc
test
add
cld
xlat
mov
mov
std
idiv
pop
dec
lods
dec
push
mov
fstcw
aam
sbb
mov
sub
add
aam
sbb
mov
lods
sti
daa
jns
stos
mov
clc
in
repz
dec
jb
call
rcrb
pop
cltd
xchg
jo
mov
adc
xorb
das
ja
and
testl
dec
roll
imul
into
and
pop
dec
sbb
outsb
test
jmp
int
pop
stc
jmp
xor
call
mov
repz
sbb
cmp
sub
cli
mov
in
xchg
adc
roll
jne
sarl
xchg
push
mov
push
cmp
fwait
cmpsb
or
add
stos
pop
hlt
mull
test
pop
dec
popf
cmc
xor
adc
or
push
xor
fwait
nop
mov
xor
jle
jle
push
iret
inc
pmulhw
sub
aas
lcall
or
int
jle
imul
icebp
push
sub
dec
xchg
sar
addb
jno
xlat
repnz
mov
push
mov
stos
es
pop
cld
rclb
icebp
mov
push
dec
push
lret
inc
fwait
xchg
sbb
ljmp
inc
lods
rol
test
jmp
jl
mov
repz
rcrb
mov
mov
test
xlat
lods
xchg
out
andb
andb
mov
dec
push
out
add
jmp
mov
xor
lods
pop
push
cmp
add
sbb
push
mov
pop
xchg
scas
rorl
pop
outsl
jne
pop
lret
jae
not
and
loop
mov
fists
mov
inc
jl
lods
cmp
mov
insb
mov
adc
push
movsl
dec
popa
pop
sarl
shl
or
adc
filds
mov
mov
or
inc
cmpl
test
jge
popf
inc
or
adc
or
and
mov
pop
int
bound
daa
pop
dec
xchg
jle
xchg
call
ret
cld
xor
hlt
lea
and
call
add
rclb
into
add
data16
xlat
lock
mov
leave
icebp
nop
fwait
sbb
stos
fdivs
or
mov
inc
add
mov
lahf
int3
mov
push
mov
jg
jmp
daa
test
outsb
rclb
push
imul
jecxz
push
jb
outsb
jg
adc
stc
loop
mov
repz
out
mov
adc
mov
cmp
ja
push
cmp
mov
add
dec
je
test
enter
cwtl
sahf
push
ret
xorb
lret
mov
shll
inc
daa
inc
popl
cltd
mov
repz
mov
lahf
inc
add
nop
aas
xchg
adc
sbb
mov
fldt
xor
mov
dec
mov
mov
sbb
aam
sbb
les
inc
icebp
add
or
mov
out
jo
inc
bound
pop
jecxz
fsubrl
int3
dec
mov
es
cmpl
push
push
dec
or
and
test
cmpsb
fwait
test
or
sbb
scas
mov
pop
push
das
cmc
enter
fdivl
icebp
jo
and
and
mov
mov
movsl
dec
inc
mov
xchg
sub
xchg
push
mov
stos
outsl
out
loope
fistl
test
fnstcw
jae
fidivs
and
imul
inc
imul
pusha
iret
sub
repz
cltd
pop
mov
and
addb
cmp
rcll
mov
nop
sub
push
test
or
in
or
push
lcall
lret
leave
xor
pop
into
cli
mov
dec
xor
out
jnp
mov
sbb
cmp
pusha
jmp
popf
shrl
mov
xchg
jecxz
sub
orb
movsl
add
mov
out
mov
in
mov
pop
test
les
mov
outsb
mov
mov
out
jb
insb
sarl
inc
divl
in
es
jle
jnp
or
lods
mov
arpl
jle
stc
and
dec
dec
push
pop
lahf
les
pop
movl
loopne
cmp
pushf
cld
rol
or
cs
popa
cli
stc
cltd
jmp
mov
mov
lahf
xor
mov
inc
mov
insl
mov
or
outsb
call
cmp
jbe
cmpl
sub
iret
add
aad
iret
mov
cmpsl
fs
mov
adc
ret
call
mov
popf
adcb
sub
inc
sub
ja
mov
cmp
shll
ret
jecxz
add
rorb
inc
movsb
ja
fisubs
stos
in
sbb
lods
sti
adc
cmp
cmp
mov
incl
in
jne
dec
aad
std
inc
shlb
pop
and
lea
imul
xor
negl
arpl
aad
inc
push
jmp
mov
test
or
ret
mov
fidivrl
push
push
push
hlt
sub
push
enter
add
fnstcw
adc
icebp
jmp
mov
mov
in
add
add
ds
ja
jb
xor
push
or
shll
xchg
jp
or
cltd
imul
sbb
ljmp
leave
mov
test
xchg
or
andb
inc
stos
mov
xchg
mov
dec
xchg
and
lea
xor
adc
xchg
les
shl
dec
add
imul
ds
mov
mov
jle
cmp
mov
sbb
lea
jl
dec
test
or
rorl
push
faddl
in
popa
fsubrs
or
ljmp
getsec
jns
es
mov
cmp
mov
jge
mov
ja
repz
sub
pop
push
lods
lret
aam
or
mov
lods
enter
inc
mov
call
mov
and
mov
pushf
sub
aaa
jae
mov
lcall
les
adc
ret
fidivrl
xchg
shlb
sbb
popa
outsl
hlt
rol
and
inc
int3
cltd
ljmp
xorb
loop
and
cmp
push
sub
adc
in
inc
sub
arpl
pushf
inc
adc
jge
loop
push
jg
xchg
fcoml
loope
xchg
fwait
mov
movsb
es
xor
popa
jecxz
enter
push
insb
gs
in
cmp
aad
push
mov
orb
mov
push
and
cwtl
les
cs
call
jne
xchg
mov
add
divl
add
scas
push
sbb
std
cmp
sub
sbb
jmp
scas
jmp
mov
fistl
jl
or
shl
popaw
fcompl
popl
stos
scas
data16
int
rorb
out
insb
insb
or
mov
popf
int3
mov
lret
imul
mov
cld
jl
movsl
aas
mov
loope
inc
sub
sub
rol
cmc
stc
mov
cwtl
mov
jl
jbe
pusha
push
stc
push
xchg
clc
lods
fldcw
fildl
mov
cmpsl
add
or
pop
popf
std
stos
or
dec
dec
add
mov
clc
inc
dec
adc
test
jmp
xchg
and
cmpsl
xchg
push
jne,pn
dec
mov
cmp
add
cmp
or
gs
test
inc
jg
mov
jae
and
aad
and
sub
pop
inc
cmp
lds
mov
sbb
mov
sub
sub
cmp
dec
cmp
cwtl
xchg
cmc
out
mov
mov
repz
xor
jb
outsb
cmc
out
cmpsl
std
pusha
pop
sub
std
data16
in
ret
push
pop
mov
enter
enter
lock
outsb
rolb
insl
inc
jle
lret
jb
or
jp
ret
in
push
pop
dec
xor
lods
mov
and
or
sub
add
idivl
cmp
fistl
inc
add
pushf
data16
adc
mov
push
push
loopne
enter
mov
sar
loopne
push
ja
rorb
jne
in
scas
push
pop
lea
xor
inc
ja
mov
orl
lods
inc
push
cmp
mov
sbb
or
sbb
pop
push
mov
shl
mov
push
lock
jb
jge
mov
xchg
lea
pop
in
mov
out
addr16
pop
jp
sub
mov
sbb
repz
mov
jge
stos
sub
scas
cwtl
cmp
lods
xchg
ds
leave
lods
lret
ret
pusha
inc
pusha
inc
outsl
mov
repnz
mov
push
outsl
repz
lods
insb
cmp
jl
out
push
mov
mov
cld
fwait
mov
mov
mov
in
mov
std
movsb
mov
adc
sbb
cmpsl
xchg
mov
dec
sbb
sti
sub
shlb
arpl
pop
xor
pop
out
adc
xchg
mov
pop
mov
and
in
fnstcw
mov
sub
and
dec
mov
jg
xor
jp
mov
jb
test
pusha
push
call
out
aad
jbe
cmpl
pop
cmpsb
mov
jne
pop
lret
into
xor
push
mov
push
xor
pop
add
orl
scas
mov
mov
movsl
pop
addr16
dec
js
fldenv
xchg
fmuls
cld
lcall
adc
adc
sbb
xchg
movsl
dec
pop
inc
outsl
jmp
mov
loope
repnz
fiadds
adc
inc
fcmovnb
inc
and
mov
mov
mov
jmp
xor
cmp
mov
pop
aaa
sbb
jp
mov
bound
fnstcw
sub
cmp
xor
xchg
and
ret
or
adcl
imul
mov
imul
rcrb
jns
adc
test
repz
dec
and
lods
push
and
imul
arpl
stc
mov
and
jae
in
jo
sbb
int3
mov
arpl
aas
xor
fst
push
out
and
adc
mov
lcall
mov
push
mov
cmp
repz
push
mov
pop
aaa
into
pop
in
mov
lods
out
inc
xchg
pusha
movb
fcomip
push
mov
jmp
sbb
ljmp
leave
mov
jle
das
lret
xchg
inc
outsl
fucomp
push
pop
loopne
add
hlt
pusha
lahf
dec
rol
into
test
mov
aam
xor
mov
in
inc
in
add
ret
mov
leave
test
fdivs
adc
inc
pop
mov
iret
fwait
adc
dec
mov
add
mov
xchg
push
test
dec
maxps
adc
sub
pop
sbb
pop
dec
sarb
in
pop
leave
jns
jecxz
mov
inc
ds
cmp
add
jge
sti
sbb
or
jbe
mov
das
sbb
dec
bound
mov
dec
pop
imul
rorl
mov
inc
push
aad
insl
push
mov
mov
loopne
cmp
rorl
pop
fs
sub
iret
scas
xor
stos
mov
aas
mov
lea
imul
sbb
jg
leave
into
push
in
pop
or
std
push
arpl
andb
icebp
inc
xor
sahf
stc
mov
jmp
ud1
cltd
add
push
mov
sub
inc
cmpsl
call
outsb
into
fldt
adc
add
xchg
jg
mov
xchg
xor
dec
xchg
mov
in
push
in
jg
sub
pop
adc
dec
cmc
or
cs
and
pusha
sbb
es
sub
sbb
sub
inc
fdivl
sbb
test
lods
rorl
xchg
adc
cmp
pop
sbb
enter
ret
fnsave
cmp
mov
and
mov
fcoms
push
aad
push
les
pusha
lds
aam
xor
fucomi
pop
cs
in
sbb
push
lret
cmp
inc
shll
push
and
loop
push
cmp
pop
xor
push
mov
loop
fstps
mov
pushf
push
jb
fimuls
bound
scas
xchg
jb
pop
movsb
xor
leave
inc
sahf
mov
std
imul
xchg
dec
xchg
aad
and
sbb
nop
fwait
fs
xor
lock
in
mov
xchg
jno
es
inc
jns
repnz
inc
fidivs
scas
icebp
adc
popf
fwait
inc
mov
mov
lods
hlt
or
ja
mov
popa
xchg
andl
adc
adc
out
je
scas
das
lret
int
lods
popa
push
jne
xor
in
out
mov
inc
add
pop
dec
adc
cld
jnp
lock
test
and
hlt
lret
inc
jbe
inc
lea
pop
ja
sahf
mov
sbb
jp
cmc
jmp
sahf
cmpsl
inc
mov
dec
rcl
add
cmp
test
imul
add
or
push
inc
cmpl
push
pushf
sub
xor
aam
xor
and
adc
fidivl
cltd
jge
push
jecxz
mov
lret
cltd
cmp
dec
push
cwtl
sahf
adc
jae
or
and
cld
mov
dec
outsb
lahf
shrb
imul
inc
xchg
push
push
es
sub
push
unpckhps
shll
mov
sbb
cmp
int
add
inc
jnp
out
add
test
lcall
out
test
leave
ja
out
loop
push
add
imul
cwtl
mov
adcb
loope
push
faddp
pop
or
movsl
lret
adc
cmpsb
insb
pop
push
fsqrt
pop
out
in
fmulp
xor
mov
into
in
enter
push
xor
dec
fwait
push
nop
push
and
sarb
jb
fisubs
push
lea
push
ds
dec
fnstsw
push
jmp
repnz
push
fchs
adcl
xchg
loop
pop
test
test
inc
int3
es
pop
shll
add
mov
dec
push
sub
pushf
cmp
jp
lret
loope
pop
fsubp
pushf
cmpl
cmpsl
and
or
mov
fsubs
cmp
cs
or
jns
arpl
sbb
xchg
xchg
add
inc
jge
dec
inc
cmp
pop
leave
dec
test
add
fucomp
xor
push
xor
push
movsl
lods
pop
insb
test
dec
ds
in
pop
jne
add
and
sbb
dec
rclb
jbe
cmc
push
outsb
push
sub
mov
and
cli
sbb
lret
lahf
in
mov
callw
in
mov
add
out
mov
imul
mov
jecxz
scas
pop
mov
out
sbb
mov
xchg
sub
jl
andb
fiaddl
and
lahf
push
xor
shr
lods
jp
popf
dec
add
out
xor
mov
stos
popf
popf
in
jmp
cmp
leave
bound
cmp
imulb
xchg
adc
cmpsl
rcr
lahf
addr16
sub
lds
fistpll
jp
sbb
lret
push
mov
jns
sarb
push
pop
lcall
sbb
icebp
mov
mov
rclb
fisttpl
je
nop
stos
jg
call
lock
arpl
sbb
and
cld
incb
faddl
xor
dec
adc
jb
xchg
fst
popa
cli
loop
int3
outsl
loopne
dec
inc
and
inc
mov
mov
sbb
shlb
xor
pop
ror
aaa
xchg
lods
int
jo
sbb
enter
xchg
push
cmpb
or
dec
sbb
roll
sub
push
cmpsb
xchg
mov
mov
in
push
sbb
cmp
xchg
sbb
fwait
push
dec
clc
mov
lea
sbb
ljmp
repz
mov
stos
inc
jns
fs
sbb
addb
aad
mov
decb
pop
sbb
cmp
insb
insl
adc
xor
fs
cli
push
lret
adc
loopne
pop
fmuls
sbb
cmp
roll
push
push
int
mov
jmp
les
pop
mov
mov
dec
xchg
push
shll
mov
jp
hlt
cwtl
mov
adc
sub
addr16
xchg
or
pop
call
push
std
push
xor
xchg
push
dec
add
pusha
insb
fwait
int
enter
int
sub
adc
pop
aam
repnz
fistl
sbb
movsb
rolb
xchg
dec
mov
outsb
loopne
jp
cwtl
jae
fnclex
in
xchg
mov
ret
test
jge
xchg
imul
movsl
sub
sub
call
repnz
lods
pop
cmp
lea
ss
and
dec
sub
or
inc
sbb
dec
mov
and
pop
addr16
and
fdivl
notl
jl
call
ss
stc
outsl
sbb
movsb
sbb
cwtl
mov
mov
cld
or
ljmp
mov
sub
loope
imul
xchg
aaa
dec
cvtpd2pi
ja
cmp
push
sub
outsb
dec
fisttpll
aam
mov
sub
xchg
fwait
mov
out
cwtl
cmp
lahf
loope
repz
clc
push
aas
jo
inc
mov
xor
inc
insl
mov
mov
outsb
pop
sub
fiaddl
clc
inc
push
and
lahf
mov
pop
mov
mov
ret
lods
mov
dec
sahf
and
mov
lods
mov
adc
and
bound
inc
cmpl
jno
xor
stos
adc
inc
out
in
loopne
cmp
bound
pop
fistpl
je
mov
stos
jg
fimull
std
mov
jg
cld
pop
pop
jne
xlat
testb
sub
mov
aad
leave
std
adc
fcoml
fst
jnp
nop
aam
mov
and
and
or
pop
jno
scas
cmpsb
addr16
mov
rol
cwtl
pop
dec
test
aas
shlb
lds
mov
outsl
inc
std
or
call
jne
mov
xor
adc
dec
cmp
mov
jp
movsb
mov
and
mov
sub
jae
pop
cmp
inc
xor
xchg
imul
sub
dec
sub
lds
jae
clc
movsb
mov
mov
mov
nop
mov
fiaddl
loopne
outsl
fistps
or
mov
pop
out
sbb
dec
lret
xor
fadd
jl
xchg
jo
push
outsl
pusha
cmc
adc
jns
xor
xlat
xor
js
add
push
fs
inc
fwait
mov
shll
cwtl
sub
mov
cwtl
inc
pop
ljmp
test
mull
push
subb
scas
dec
adcl
or
cwtl
adc
pop
stos
jle
mov
bound
pop
adc
jb
pop
adcl
pushf
sbb
sbbb
mov
or
jnp
popa
pop
shlb
mov
test
mov
aaa
xchg
or
mov
pop
fwait
dec
cwtl
loop
sbb
cli
or
jae
xchg
mov
push
lods
push
cltd
in
pusha
or
dec
ficompl
rclb
dec
fwait
mov
es
fmull
into
shll
cli
fsubrs
fld
lahf
bound
xor
sbb
popa
lock
aas
out
daa
lea
icebp
shll
insl
mov
and
fisubl
adc
or
sahf
sbb
or
cmc
push
jae
sub
shll
sbb
imul
in
push
and
inc
cmc
push
mov
jne
mov
lret
and
or
lcall
push
addr16
xor
fistpl
push
ljmp
les
pusha
jp
inc
xlat
outsb
cs
mov
add
cmp
push
ret
cmp
mov
out
jl
sti
addl
and
mov
add
xchg
sbb
pop
pop
and
les
stos
xchg
leave
inc
incl
out
pop
insl
add
push
rorl
adc
ret
push
adc
mov
add
or
adc
jnp
pusha
pop
pop
scas
sbb
out
mov
cltd
push
and
roll
cltd
sub
into
aaa
and
jge
xor
idivb
scas
jno
cmp
inc
inc
cmp
jmp
mov
push
xor
push
sub
xchg
bound
mov
cmp
int3
mov
test
push
inc
dec
dec
hlt
loope
and
xor
cs
gs
xor
mov
sbb
pop
pop
or
bound
add
and
bound
dec
jle
rorl
scas
add
shll
pusha
push
lea
dec
ret
iret
lahf
mov
dec
adc
pop
mov
aas
lods
out
std
lret
pop
xchg
movsb
push
or
push
and
jae
clc
pop
insl
addl
in
lds
pop
lock
adc
mov
out
fsts
push
fnsave
pop
mov
js
mov
clc
sbb
iret
xchg
addr16
mov
push
shr
lret
pusha
pop
ss
in
add
sbb
test
mov
xchg
lods
mov
fildll
lea
lods
and
adc
and
pop
loope
xor
inc
jecxz
mov
mov
stc
jle
aas
pop
cs
mov
into
int
dec
cmp
lea
lods
cmp
shrb
in
pushf
in
shl
dec
add
loope
loopne
sbb
jns
sbb
and
jg
out
rcll
push
xor
cltd
add
fisubs
test
pop
pop
aam
inc
jmp
jp
sub
and
jnp
cs
cli
jl
jp
push
call
pop
add
jb
cmpsb
mov
cmp
test
shl
lahf
push
inc
stos
test
jle
inc
xor
xor
lcall
mov
movsl
addr16
sbb
pop
cmpsb
cmpb
mov
shrl
arpl
ret
popf
movsb
jle
mov
mov
pusha
mov
add
dec
loope
cmpsl
rclb
mov
sbb
data16
popa
test
sub
mov
jne
jb
and
pop
daa
cmp
push
cmc
adc
faddl
inc
add
lcall
ss
lahf
cmc
sub
in
iret
out
movsl
pop
mov
shr
clc
in
xor
push
cmpsl
test
dec
pop
or
nop
and
and
jbe
insl
fabs
jecxz
jb
das
insl
xchg
cld
arpl
xchg
mov
popl
test
std
mov
fwait
adc
aaa
sub
xlat
ljmp
push
ret
mov
pop
or
call
mov
cmpsl
and
cmpsb
mov
cmp
out
scas
mov
insl
sub
adc
gs
hlt
addb
inc
pop
out
push
pop
es
cmpsl
sub
daa
fs
cmp
nop
mov
adc
daa
jbe
cltd
xchg
aad
mov
jg
push
mov
outsl
faddl
or
imul
aas
pop
mov
sbb
imul
sbb
cmc
xchg
outsb
mov
inc
fwait
scas
mov
cmpsl
or
test
shlb
out
push
push
xor
push
leave
repz
shl
jmp
mov
cmpsb
aad
insl
xorb
in
aad
rclb
mov
loop
test
sub
cmp
rclb
das
add
fdivs
clc
ror
or
out
ds
sub
pop
push
dec
sbb
ret
cmpsb
testb
mov
movsb
or
pop
cmc
xchg
pop
sub
sti
pop
sarl
shll
push
mov
stos
jae
xlat
mov
sub
gs
pop
negl
and
pushf
aam
dec
sbb
loop
flds
lahf
call
stos
pop
push
mov
mov
outsl
test
xchg
outsl
xchg
cmp
rorl
repz
popf
push
subb
inc
out
das
bound
xor
lcall
lods
xchg
je
sub
xor
add
inc
and
add
jl
push
push
mov
jo
fwait
mov
sbb
out
add
rolb
pop
push
xchg
aaa
outsb
enter
fcmovbe
inc
scas
popf
clc
data16
flds
jg
inc
in
fistl
push
fiaddl
pusha
xchg
push
jne
jnp
insb
roll
cmp
in
cmp
into
imulb
ljmp
shll
dec
pusha
push
clc
ret
div
lea
and
stos
adc
aaa
clc
sbb
sbb
mov
mov
mov
notl
push
xor
xchg
push
sub
xchg
shlb
outsb
loop
xor
mov
xchg
mov
dec
out
xchg
das
jg
adc
add
int3
popa
cmpsb
call
in
shlb
jp
addr16
mov
sub
xor
fs
stos
dec
mov
addr16
rolb
das
es
scas
adc
jne
xchg
movsl
shr
cmp
jnp
push
cmp
inc
ror
cld
insb
stc
ret
mov
fmulp
popa
mov
scas
addb
decl
outsl
in
stos
xor
adc
cmpsl
add
ret
aam
jle
xor
enter
or
call
pop
mov
les
cmp
xchg
dec
stc
sti
xor
ror
scas
sti
std
fldt
or
and
fwait
movsl
ja
repz
fistpl
mov
sub
sbb
cmp
sbb
xchg
jb
mov
lea
ret
clc
jge
in
int3
inc
push
out
stos
push
push
pop
pop
idivl
mov
cwtl
les
dec
sub
stc
divb
mov
add
imul
pop
pop
cltd
xor
rclb
cmp
fidivs
mov
lahf
js
and
and
xor
dec
pusha
xor
lsl
out
pop
leave
and
aaa
or
mov
mov
jg
add
adc
pusha
jnp
jno
std
lret
add
hlt
xchg
push
lret
jmp
and
add
cltd
jmp
jge
mov
xchg
xchg
jg
sbb
out
mov
movsl
cwtl
mov
popf
sbb
cwtl
test
dec
xchg
lock
sbbl
push
adc
aam
idivb
repz
inc
jge
fwait
inc
adc
adc
clc
pop
fcos
inc
mov
xchg
sahf
dec
sub
push
xor
rorb
iret
cmc
inc
pop
imul
xlat
fisubrl
nop
cs
js
sahf
sti
adc
fadds
dec
test
sub
mov
scas
jmp
push
shll
outsb
fidivs
fisttpll
inc
or
inc
bound
cmp
ret
mov
xor
in
push
lods
pop
push
fists
pop
push
pop
and
mov
stos
shll
clc
push
and
inc
stos
sbb
and
and
inc
rorb
unpckhps
test
sahf
add
mov
ret
lret
dec
add
insb
lods
repz
imul
movsl
jge
xchg
rorb
mov
push
and
fucomp
xchg
fstpt
inc
lret
rol
repnz
lahf
jnp
fnstenv
ror
push
push
popl
jg
sub
and
push
mov
mov
cwtl
out
cltd
lds
fsts
pop
push
in
xchg
jle
cmp
mov
pop
lea
negl
mov
scas
mov
and
mov
mov
ja
clc
bound
mov
sarb
scas
push
inc
pop
aaa
sub
cltd
push
push
lcall
push
adc
mov
inc
cmp
mov
adc
sahf
ret
pop
xchg
inc
cmp
out
repnz
push
push
jp
and
ljmp
call
out
push
xor
jno
push
xor
add
push
icebp
mov
je
pop
jge
mov
rolb
aam
sub
cmp
push
leave
xchg
fisubl
loop
mov
sarl
sub
test
mov
pop
in
in
ja
push
int
pushf
cmp
pop
xchg
dec
aaa
rcr
out
mov
cmp
adc
sub
mov
cmpsl
out
adc
stc
inc
outsb
add
sbb
dec
xor
imul
inc
mov
popa
ds
int
sub
jecxz
sarl
fcmove
bound
dec
xor
add
cmp
and
mov
pop
push
jbe
jmp
push
mov
xchg
frstor
jle
dec
mov
xor
pop
mov
andb
jmp
std
push
in
xlat
and
jecxz
push
imul
loopne
jge
push
jo
lahf
push
and
fs
int
stos
xchg
mov
mov
inc
sub
js
jne
pop
sub
mov
mov
leave
notl
int
mov
xor
testl
jne
fdivrs
inc
adcl
scas
xor
lea
sbb
jmp
or
loope
cwtl
inc
push
mov
cmp
int3
int3
xor
nop
mov
insb
sub
xor
mov
adcl
xchg
jb
icebp
sbb
xchg
stc
movsb
pop
adc
pop
stos
jbe
sub
adc
fadd
inc
pop
loope
cs
or
loopne
dec
xor
stc
add
and
call
jp
mov
dec
fiadds
repz
pop
test
imul
sarb
jl
cmp
aam
outsb
addr16
mov
test
jmp
lcall
mov
dec
bound
sbb
inc
or
rclb
out
jmp
es
and
or
std
cmp
sub
shlb
inc
lods
lahf
iret
jecxz
mov
subl
pop
push
pushf
leave
rclb
aam
cmp
cli
jnp
add
jl
push
sbb
insl
scas
adc
cmp
or
pop
out
cmc
not
push
adc
pop
mov
jmp
mov
lahf
popf
into
or
lret
sub
jge
sbb
mov
lahf
shlb
mov
cmp
mov
or
test
sbbl
cmc
jns
dec
pop
jmp
xor
push
push
xor
shl
mov
test
lods
dec
gs
or
in
repnz
test
mov
sahf
push
pop
mov
xchg
fs
push
arpl
push
loopne
lret
xor
xchg
xor
inc
pushf
and
dec
repz
pop
jg
jl
icebp
mov
ret
movsb
sbb
idivb
push
mov
inc
push
xor
xlat
xchg
push
adc
cmpl
add
mov
xchg
mov
es
aam
pushw
ja
ficoms
adc
adc
pop
std
lock
roll
scas
test
adc
sub
mov
loope
aad
out
lea
push
lret
jmp
or
das
push
sub
daa
xchg
js
pop
push
sub
pop
cmp
xchg
jbe
cmp
lea
push
pop
fcomi
push
gs
mov
jl
icebp
cltd
int3
adc
test
or
fsubrp
xor
cwtl
pusha
sti
aas
bound
dec
test
add
jns
vpcmpgtb
mov
data16
mov
mov
into
decb
xchg
mov
les
pop
jbe
xchg
jbe
fstpt
inc
mov
outsl
pusha
pop
stos
add
aad
jno
rcrb
mov
sub
mov
scas
leave
lea
xchg
jle
scas
xchg
negb
sbb
or
xchg
divl
mov
cmpsb
sub
sbb
pop
and
mull
pop
push
ret
int
ret
cs
sub
inc
pushf
lods
inc
xor
adc
mov
popl
mov
adc
or
mov
adc
fisttpll
iret
mov
and
pop
movsl
andl
fsubrp
mov
sbb
mov
pop
mulb
sbbl
sbb
push
mov
jmp
cmp
in
lea
sub
pop
jg
leave
out
xchg
dec
imul
push
jl
mov
lret
inc
out
popa
sarb
mov
nop
or
imul
xchg
sub
add
bound
cmovns
xchg
mov
dec
xorl
mov
inc
xchg
jno
inc
fisttpl
imul
fists
inc
popa
pop
push
mov
mov
std
xchg
loop
divl
enter
inc
push
lds
loop
test
pop
rolb
sub
adc
loope
aas
loopne
jnp
out
ret
rolb
test
nop
xor
test
insb
cmp
push
test
fcompl
xorb
data16
jg
aam
popa
jg
pop
loopne
push
add
gs
pop
andb
dec
je
pop
pop
lock
jcxz
movsl
das
fisubs
xor
push
loopne
mov
xorl
mov
or
movsb
leave
xor
sbb
xor
or
lcall
mov
mov
mov
daa
mov
inc
mov
xchg
adc
xchg
js
sub
mov
out
xor
mov
stc
push
cmp
iret
lds
arpl
clc
and
adc
loope
dec
push
sub
add
mov
or
cwtl
frstpm(287
dec
sub
cmp
fdivrs
sahf
fcmovnb
xchg
and
js
xor
fdivp
adc
xor
in
outsb
mov
dec
pushf
and
jmp
mov
nop
loop
icebp
ja
xchg
int
xlat
jecxz
xchg
push
mov
daa
scas
jns
pushf
testb
inc
pop
das
fstl
push
inc
je
jmp
inc
into
fists
in
lahf
stos
xchg
arpl
mov
data16
roll
ds
icebp
cmp
insb
push
or
add
mov
arpl
shrl
xor
xchg
push
sub
ljmp
insb
pushf
lcall
pushl
mov
pop
or
aas
cli
mov
negl
mov
shl
insl
fwait
mov
xor
outsb
aas
mov
out
inc
in
mov
bound
loop
les
jae
lret
data16
cmp
push
sbb
daa
ret
mov
sbb
add
jae
fincstp
xchg
cwtl
pop
mov
and
jns
inc
hlt
jecxz
adc
xchg
or
inc
jns
pusha
dec
in
cwtl
xchg
stos
sub
xchg
movsl
movsb
in
jmp
push
mov
jl
push
sahf
fstpt
xor
push
loopne
jo
stos
push
ret
dec
xor
sub
xchg
test
sbb
sar
pop
loopne
stos
or
nop
imul
aad
lcall
pop
fs
sub
leave
test
movsb
and
mov
mov
xchg
fwait
aaa
cmp
cmp
sbb
fcoml
rcrb
aam
dec
cmp
xor
adc
sub
cli
push
jge
pop
mov
xchg
nop
inc
jnp
test
cmp
inc
out
movsl
jo
dec
shrb
out
testl
mov
lcall
ret
call
mov
cli
mov
fldt
jbe
inc
sub
fcomps
adc
out
dec
push
popa
xlat
or
push
sbb
xor
dec
pop
dec
dec
jge
cmp
pusha
mov
enter
out
pop
add
mov
in
adcl
inc
lret
mov
mov
cmc
hlt
fdivrp
mov
sub
fucomp
cmp
bound
lods
sbb
ss
hlt
ret
mov
cli
scas
lret
out
mov
fadds
sub
fisttpll
clc
and
adc
push
mov
push
pop
jmp
or
out
das
sub
outsb
shll
fst
ss
insl
pusha
adc
repnz
xor
jo
in
stos
leave
or
xor
push
pop
mov
ds
cmp
lock
js
push
fwait
cvtpi2ps
mov
push
dec
dec
hlt
xchg
sbbb
testl
pop
sbb
and
fiaddl
cs
aaa
ret
pushf
jae
xchg
pop
mov
xchg
das
xchg
ror
mov
sub
push
sbb
int
call
mov
jno
lea
fdiv
das
inc
rep
pop
sahf
mov
mov
decb
enter
iret
inc
mov
sbb
dec
dec
adc
adc
jns
test
mov
or
ja
mov
pushf
xlat
jns
xlat
pop
adc
and
sub
pop
jl
loop
push
mov
dec
cli
pop
mov
mov
dec
jnp
fdivrl
stos
cmp
cmp
addr16
jnp
mov
fs
out
cld
into
jg
cwtl
bound
arpl
sub
pop
jns
pushl
pushf
lcall
mov
int3
testl
sub
and
cmc
rcll
ljmp
pop
adc
daa
dec
mov
nop
out
ja
fdivrl
mov
lret
cmp
bswap
sbb
mov
out
jbe
mov
sbb
movsb
pop
and
mov
fnstenv
push
out
jp
fildll
jbe
cld
fs
xor
mov
mov
js
xchg
pop
and
cs
mov
test
int
lret
sbb
sbb
inc
pusha
pusha
aas
jle
loop
jne
rcl
stc
icebp
mov
mov
icebp
rorb
xchg
jmp
or
pop
push
inc
repz
mov
or
sahf
or
in
shlb
dec
or
push
call
jns
scas
dec
cwtl
ffree
out
pop
or
es
add
shll
jb
and
je
enter
push
decl
xchg
mov
or
aad
fsub
pop
fwait
pop
sbb
popf
add
shl
sub
xor
push
mov
sbb
pusha
inc
ljmp
xor
sbb
add
pop
or
ret
notb
aam
dec
sbb
fsubs
pusha
arpl
mov
adc
sbb
decb
jo
push
sub
sub
js
aas
jo
aaa
ja
and
mov
cmp
adcb
cltd
jns
add
ds
loopne
dec
shrb
adc
arpl
dec
rcl
sti
and
jno
sahf
mull
inc
push
sti
mov
and
andl
or
lcall
lcall
out
xor
sarl
sub
inc
enter
mov
cmpsl
jne
or
sbbl
dec
outsl
sbb
sahf
pop
pop
call
cmp
movsl
in
mov
inc
inc
mov
pop
and
push
push
call
rclb
negb
add
sbb
sub
fsubrs
sub
test
sahf
cmp
jns
lods
lock
cmp
jge
sub
pop
sbb
sbb
lret
push
clc
out
lea
out
sti
in
in
iret
inc
push
or
fistl
cmp
lods
fsubrs
pop
dec
mov
cmp
push
xchg
push
cld
mov
ljmp
subb
cs
les
test
cmp
and
sbb
mov
dec
nop
insb
push
push
out
leave
sbb
pop
cmp
sbb
inc
jecxz
andl
push
das
in
dec
out
dec
push
xor
add
mov
xchg
xchg
dec
js
repz
mov
mov
mov
xchg
sahf
stc
mov
xchg
sbb
add
inc
es
dec
js
mov
xchg
jl
xchg
and
test
xor
mov
jge
xchg
jno
fadd
jl
andb
add
and
cltd
rclb
jae
adc
lock
pop
and
inc
inc
lret
leave
pop
imulb
dec
leave
cmp
push
pop
and
call
jg
push
jp
ja
pop
lcall
sbb
mov
leave
mov
fisttps
xchg
sub
and
inc
inc
rcll
into
imul
pop
int3
xchg
gs
cmc
sbb
xchg
jp
aad
cli
adcb
inc
in
cwtl
stc
rcll
insb
test
shlb
shl
xchg
arpl
pop
xor
leave
adcb
jnp
enter
fdivrl
fsts
popf
pop
stos
lods
lds
pop
sub
ret
pusha
fbld
push
xchg
lahf
add
es
je
adc
jg
inc
sbb
fwait
dec
cmc
push
cli
fwait
mov
lock
test
or
pop
push
lods
mov
add
add
dec
jge
mov
dec
pop
ret
pusha
pop
movsb
jns
lahf
aaa
shlb
mov
sbb
fdivr
ds
bound
xchg
add
xchg
pusha
sbb
cmpl
out
jge
testl
jl
mov
pop
mov
push
rcrb
cli
add
inc
hlt
addr16
ljmp
xor
pop
into
add
mov
lret
stos
mov
adc
sbb
xlat
mov
jnp
dec
hlt
sahf
popf
lret
int3
mov
or
or
add
mov
imul
sub
cwtl
popa
pop
add
int3
add
ja
je
aad
stc
xor
jmp
jne
add
cwtl
ss
add
lock
mov
pop
pop
pop
sti
and
dec
pop
or
sbb
cmpsl
fiadds
in
les
cli
sbb
cmp
push
add
xor
jnp
pop
loopne
sar
repz
mov
dec
sub
xchg
hlt
adc
mov
xor
jnp
inc
or
or
in
test
mov
aam
jno
outsb
pop
sbb
mov
mov
int
int3
add
repnz
roll
adc
cmp
loop
or
jbe
and
leave
inc
mulb
repz
xchg
scas
lods
shlb
clc
lahf
jl
pop
and
outsl
jle
pop
inc
lret
mov
movsl
cmp
mov
loopne
xor
add
or
scas
xor
shlb
mov
jb
stc
scas
sub
xchg
push
lods
lods
mov
scas
cmp
xor
mov
adc
dec
fistps
ret
loopne
out
cmp
ja
xchg
lds
into
adc
icebp
adc
loopne
adc
in
cmp
ret
out
lods
lock
cmp
add
or
pop
pop
lret
daa
pusha
addr16
mov
mov
xchg
scas
movsb
pop
outsl
out
cwtl
dec
subl
push
pop
aad
adc
cld
ficompl
lcall
pop
xchg
imul
scas
push
in
cmp
lret
jno,pt
test
popa
push
pop
dec
es
loop
adc
mov
adc
jo
push
pushf
and
push
cmpsb
fdivs
xor
and
movsb
arpl
and
sti
jnp
mov
add
mov
aaa
mov
imul
and
test
insb
jge
mov
lods
sub
xchg
jge
rcr
and
movsl
jbe
mov
outsb
incl
push
xchg
pop
sar
mov
out
cmp
sbb
int
imulb
push
add
mov
adc
in
sbb
mov
testl
inc
mov
shll
shll
xchg
imul
lret
inc
jmp
adc
jp
pop
pop
out
mov
lcall
stos
insb
js
mov
sahf
mov
and
es
je
dec
push
js
movsb
stc
xchg
pop
and
in
xchg
adc
mov
pop
push
dec
pop
insl
push
mov
fcmovnb
mov
add
fldt
repz
xchg
or
in
outsl
roll
mov
clc
inc
jge
inc
xchg
add
dec
xorl
mov
mov
xchg
mov
gs
mov
sub
mov
aad
into
mov
mov
test
popf
lods
sub
sbb
mov
in
aad
stos
mov
and
xchg
or
or
adc
lret
roll
mov
in
orb
sbb
repz
jmp
xor
xchg
push
pop
leave
scas
adc
mov
or
fs
jbe
out
push
lcall
push
sbb
lea
pusha
xchg
pop
xor
into
outsb
lods
out
aam
push
push
mov
aam
mov
jae
inc
adc
cltd
jp
mov
cwtl
outsl
rcrb
addb
cmp
adc
adc
les
ret
out
popa
mov
jbe
enter
jg
nop
pop
push
ds
enter
aas
pusha
iret
sbb
daa
push
mov
dec
jb
dec
xor
cwtl
and
push
jb
arpl
popa
ds
pop
push
push
pop
test
ds
sbb
negl
xchg
adc
pop
fmuls
pop
inc
jae
or
int3
aas
mov
inc
jge
loopne
xlat
jmp
cs
ljmp
xor
adc
and
mov
adc
std
dec
mov
sar
mov
shlb
dec
lods
rcr
sub
outsl
and
jo
fs
setge
or
xchg
fnsave
roll
fadds
jb
sbb
lcall
jb
xchg
cmp
lds
inc
mov
push
inc
lds
out
jbe
push
pop
and
lds
add
add
jno
repz
shrl
push
aam
mov
and
adc
inc
das
fidivrl
pop
jb
adc
mov
dec
inc
in
fwait
pop
lcall
lds
cli
pop
test
mov
fisubrs
mov
ja
addr16
bound
xor
push
inc
xor
test
jp
inc
inc
lds
lahf
pop
push
sahf
adc
lahf
xchg
arpl
je
shlb
xchg
test
xor
push
or
mov
xchg
xchg
jnp
xor
clc
lahf
cmp
mov
dec
or
push
fsubl
lock
jmp
clc
mov
jmp
dec
cmpsb
mov
inc
les
arpl
cmp
add
ret
mov
jg
fisubs
test
mov
notl
adc
imul
mov
jecxz
ret
popa
mov
popf
sahf
cld
sub
scas
cmp
out
out
aaa
add
cltd
mov
inc
and
mov
pop
sti
lea
xor
mov
lahf
mov
ret
push
push
xor
inc
rcrb
std
adc
lea
fimull
stos
ja
jne
inc
pop
mov
les
dec
cwtl
lods
cmp
pop
rcrb
fistps
mov
ja
jle
mov
adc
pop
testb
lcall
arpl
sahf
loopne
xor
ljmp
cmpsl
inc
pushf
pop
lret
and
into
dec
xchg
mov
add
mov
repz
mov
loope
xor
daa
jne
mov
call
dec
or
xlat
cli
fisttpll
xor
loope
addl
cmpsb
or
inc
addl
cwtl
pop
stos
iret
lcall
and
cmp
pop
ljmp
xorl
decl
je
mov
dec
and
adc
sub
add
pop
xchg
mov
fwait
jae
int3
fbld
rdtsc
or
loop
xor
jbe
jp
pop
pavgw
sti
scas
add
es
stc
outsb
push
popf
mov
jecxz
sti
pop
jae
xchg
insl
pop
or
cmpsl
rcrb
arpl
in
and
inc
adc
add
in
pop
test
mov
xor
int3
cmpsl
sbb
sbb
mov
jne
mov
jnp
pop
add
outsb
test
loopne
adc
loope
push
repnz
mov
add
pop
inc
push
mov
jle
push
mov
xchg
insb
loopne
push
mov
and
fidivs
cmp
bound
xchg
jns
dec
cli
jbe
push
jecxz
fsubr
int
int
sub
std
repnz
mov
mov
jmp
adc
ja
lret
mov
mov
inc
es
jns
mov
inc
cmp
add
ret
xchg
xchg
add
out
jbe
je
mov
adc
fisubl
test
lods
cmpsb
in
fcoml
jle
stc
fidivrs
leave
popa
jbe
adc
stos
fidivl
sbb
in
movb
jns
push
outsb
cmp
push
add
lret
test
mov
imul
adc
mov
xchg
cmp
mov
lods
test
xchg
mov
test
pusha
sbb
adc
and
mov
fbstp
sub
inc
addr16
mov
daa
pop
or
and
mov
pop
lea
and
push
inc
cmp
push
xchg
adc
pop
shrb
sbb
cmp
mov
mov
push
out
xor
adc
shll
push
push
cmp
das
xchg
pop
and
lds
jge
test
iret
fcoml
ss
xchg
mov
dec
insl
cli
mov
pushf
iret
test
mov
push
cmp
dec
push
test
jmp
cld
out
fst
mov
and
mov
jp
jmp
cmpsl
jbe
addr16
pop
push
pop
inc
jmp
stos
pop
xor
inc
jo
ret
mov
and
test
or
and
and
adc
cld
push
jp
or
lods
es
sub
mov
sub
cli
fs
sbb
in
add
test
add
lret
jbe
rorl
fldenv
jl
scas
repnz
out
imul
xor
inc
lret
mov
push
jbe
je
jns
jmp
mov
lods
lahf
test
jo
dec
push
and
mov
nop
pop
pop
je
pop
or
sub
and
das
push
add
dec
xor
cltd
aam
mov
jle
jmp
add
gs
loope
outsl
dec
sub
call
daa
pop
lods
ljmp
out
pop
nop
arpl
insl
enter
xchg
jl
or
sarb
xor
repnz
pop
fmull
xchg
dec
push
jno
and
daa
xlat
jmp
push
or
or
pusha
mov
or
jno
repz
out
xor
addr16
sub
test
into
movsb
push
aad
sarl
nop
fwait
add
scas
ja
jnp
nop
popa
daa
das
or
out
inc
fdivrs
rcll
xchg
cmp
push
xchg
std
cwtl
iret
xor
pop
out
in
cli
fstpt
adcl
and
daa
jl
sub
insb
push
cmpsl
ljmp
add
daa
jecxz
lds
movl
enter
and
js
or
popa
sub
inc
add
pop
cs
pop
xchg
pop
sahf
fstpt
test
sub
fsubr
dec
stc
cld
mov
in
enter
ficoml
lods
sub
lods
jmp
sbb
les
sbb
jbe
jo
icebp
xorb
mov
int3
aas
pop
call
test
loopne
xchg
xor
dec
insl
xchg
pop
cmp
bound
scas
pop
add
in
lock
pop
push
mov
scas
or
loope
dec
and
bound
mov
mov
addl
imul
dec
pop
fwait
pop
sub
sub
scas
and
out
arpl
jp
jbe
inc
incb
adc
adc
sbb
push
mov
mov
ds
adc
fcomi
cmp
xor
sub
pop
pop
mov
xor
iret
mov
mov
addr16
aam
sbb
inc
jmp
and
shlb
or
mov
sbb
pop
testl
jae
in
adc
popa
xchg
jecxz
sub
fbld
loop
dec
ret
add
and
and
pop
lret
add
popa
pop
add
cmp
test
nop
cmc
inc
and
push
mov
ljmp
pop
bound
outsl
jle
clc
fcomip
mov
pop
lret
dec
jle
or
cs
repnz
xlat
outsl
xchg
mov
adc
out
xorb
xchg
push
test
lods
mov
xchg
test
sbb
test
and
push
stos
cmp
fiadds
lods
xor
dec
lahf
push
cmp
add
ret
rcl
mov
pop
ljmp
cmp
arpl
pop
sub
jmp
inc
int
and
push
xchg
dec
pop
lcall
mov
pop
adc
inc
sahf
sub
dec
mov
mov
jle
add
stc
jns
jo
into
lcall
sub
pop
dec
iret
xor
cmp
not
pop
scas
mov
movsb
enter
icebp
cmc
push
jl
sbb
jmp
jmp
ss
xor
mov
jg
or
mov
aas
cmp
sarl
arpl
xchg
or
bnd
mov
sbb
xchg
cmpsl
out
mov
dec
aad
mov
mov
mov
cld
dec
pop
repnz
adc
rcrb
mov
loopne
mov
adc
aam
andb
pop
hlt
pop
and
push
sbb
rolb
or
mov
and
jg
pop
and
icebp
sbb
sub
dec
sbb
jb
ret
stos
lret
test
jo
push
add
push
dec
push
jg
lods
outsb
outsl
fnstsw
and
daa
mov
push
mov
aad
xchg
mov
push
mov
xchg
fistps
lods
push
call
inc
cmp
jmp
neg
sub
adc
aas
in
jg
sbb
cwtl
jge
inc
mov
les
inc
mov
cmp
mov
mov
adc
int
adcl
mov
mov
ret
mov
cmpsb
into
addr16
or
xchg
sub
add
incb
cmp
sysexit
and
rolb
sub
cmc
push
negb
or
fmull
sahf
cmpsl
mov
mov
mov
mov
mov
shrl
stos
or
popf
sbb
adcb
fbstp
and
mov
cmc
fisttps
int
mov
mov
in
fisttpl
insb
jno
fldpi
xchg
repz
js
xor
sbb
bound
sub
lahf
movb
xor
fstps
inc
or
cmpsb
icebp
xor
in
jnp
out
push
cmp
ret
popa
fs
mov
adc
int
mov
push
mov
addr16
xchg
dec
mov
addr16
movsl
lahf
adc
sub
sub
and
out
dec
mov
and
subb
jnp
add
jle
dec
mov
mov
repnz
cli
pop
loopne
sbb
flds
dec
push
jae
jne
cmc
lret
pop
xlat
hlt
jae
dec
mov
add
dec
sub
pop
xchg
fdivrl
ret
stos
jl
adc
cmp
pop
dec
mov
das
outsl
dec
imul
dec
cld
js
sub
xor
pop
popa
cmc
xchg
mov
jns
inc
mov
mov
jmp
cltd
mov
test
shlb
mov
sub
cmp
or
or
fdivrl
sbb
and
add
xchg
pusha
inc
pushf
xor
sub
xorl
push
or
pushf
push
mov
xchg
stos
stos
fcmovbe
mov
and
cmpsl
add
sbb
aaa
fdivrl
imul
and
inc
repnz
fcmovne
or
push
clc
das
loopne
push
cld
mov
arpl
dec
push
push
pushf
lods
std
mov
into
popf
jb
jno
and
cwtl
cmpsl
push
aaa
jne
push
sub
iret
out
cmpsl
add
mov
push
jb
cltd
mov
int
pop
or
test
in
and
pop
or
mov
stos
push
repnz
jo
jp
xchg
frstor
popl
outsl
mov
mov
dec
jge
stos
ss
and
dec
in
xor
leave
lods
or
lock
pop
cmp
fisttpl
aas
push
mov
cld
mov
call
dec
leave
sub
mov
je
jns
dec
clc
xchg
mov
aam
or
xor
dec
and
mov
or
ret
mov
xchg
xchg
inc
sub
mov
out
stc
aas
or
mov
xchg
jp
andb
push
add
dec
mov
jp
imul
fsub
mov
inc
sub
mov
repnz
shll
pop
adc
dec
mov
sub
xchg
and
xchg
gs
push
call
adcl
pop
mov
repnz
cmp
mov
mov
outsb
popa
rorl
clc
jle
pop
subb
lret
or
insl
mov
push
push
and
cmpsb
sti
shrl
mov
out
shlb
and
ret
adc
loopne
jge
std
and
push
push
bound
fcomip
inc
mov
mov
xchg
fimull
mov
and
mov
sahf
stc
roll
lcall
add
pop
out
iret
or
pop
jb
fldl
mov
lea
cltd
mov
popf
push
nop
cmpb
test
ja
sbb
dec
xchg
jmp
dec
inc
mov
mov
pusha
add
std
cs
push
push
mov
cmp
pusha
cs
hlt
cmpsl
add
mov
cmp
fnsave
nop
pop
pusha
jmp
jnp
stos
push
fsubr
sbb
push
sarl
scas
push
or
call
dec
jle
xor
mov
repnz
push
sbb
cmc
push
pop
adcl
xor
rcrl
jge
push
fcomp
or
sub
push
mov
mov
xlat
aas
push
adc
cld
in
push
ds
js
dec
or
pop
inc
clc
sbb
add
xchg
mov
mov
xchg
popf
add
inc
and
xchg
popa
rsqrtps
push
std
cmpsl
insb
mov
subb
in
mov
jo
mov
les
sbb
jb
ja
pop
pop
xor
jb
xor
cmpsb
jl
mov
test
pop
in
push
sbb
fs
push
xchg
adc
adcb
subb
das
xchg
sbb
add
or
loop
aas
loop
testb
sbb
xchg
mov
fildll
call
stos
cmp
ffree
sbbl
push
cs
in
imul
es
out
sbb
adc
sti
and
lahf
clc
push
fdivl
in
data16
add
in
repz
sahf
je
inc
jp
cmp
int3
cmp
mov
scas
push
call
mov
aaa
pop
movsl
or
xchg
scas
insb
mov
mov
iret
xor
sbb
mov
popf
inc
outsl
jnp
mov
xchg
flds
add
push
and
xchg
addl
jmp
je
push
and
test
xchg
sbb
adc
mov
sub
cmpsl
and
test
int
push
or
les
cmpsl
scas
pop
scas
fcomp
jmp
pusha
push
stc
mov
xchg
push
mov
sub
fwait
into
or
cmpsb
mov
pop
or
ror
cltd
sbb
fldt
sub
dec
mov
insb
mov
popw
mov
sbb
inc
movsb
xor
negb
mov
xor
fs
cli
shlb
jne
lret
jb
cli
xor
cmpsb
pusha
rorb
jmp
adc
cmp
movsl
call
xor
insb
call
adc
iret
ja
mov
pop
mov
xor
and
jp
mov
sahf
inc
loop
cld
clc
jno,pn
arpl
push
popf
add
aam
insb
fistpl
arpl
sbb
xchg
repnz
shlb
or
dec
jbe
pop
imul
mov
adc
cmp
xor
ljmp
and
sub
fimull
sub
inc
stos
fimull
mov
mov
mov
push
shlb
fsubl
int
ret
jnp
add
pop
mov
das
dec
adc
and
pop
into
mov
imulb
xor
pop
push
inc
insb
mov
and
add
jp
jns
and
fisubrl
sti
lods
jmp
cmp
push
dec
xchg
mov
mov
xor
xor
aaa
fisttps
adc
adc
jl
adc
xchg
gs
jne
push
dec
jns
sbb
insb
cmc
add
or
xor
aad
lret
lods
cmp
out
pop
sbb
cmp
xchg
cmpsl
xchg
lret
cmp
dec
enter
mov
and
fwait
mov
out
push
stc
iret
sar
push
scas
stos
pop
in
lcall
cld
xchg
jl
mov
and
add
ret
jne
leave
adc
repz
jns
cwtl
mov
jae
imul
mov
outsl
mov
push
pusha
sbb
add
lods
pop
lods
xor
adc
out
into
gs
fistps
jb
jmp
pop
dec
lret
adc
out
punpckhbw
ja
imul
cld
nop
loopne
mov
mov
int
or
mov
xorl
jl
sbb
xor
push
xor
ss
or
jns
adc
lcall
xorl
xor
sahf
jmp
cli
ret
shrb
jp
mov
adc
cmc
jle,pt
adc
adc
mov
clc
mov
mov
jl
fsubrs
inc
call
lret
test
sahf
std
mov
adc
ret
mov
add
es
ficoms
cltd
mov
les
inc
shl
imul
dec
jb
loope
sub
adc
fmull
mov
fsubr
movsb
std
jp
ja
rcl
pop
fsubrs
sbb
lds
jle
dec
stos
jne
lcall
fadd
mov
fcomi
ret
and
sar
mov
push
je
push
cmp
jns
mov
xchg
adc
fwait
popf
pusha
jne
sarb
cmp
out
bound
or
ret
mov
ret
ret
cmp
mov
add
ja
imul
mov
pusha
xchg
aaa
testl
inc
jns
into
ret
pop
lds
outsb
leave
loopne
push
cmp
loop
lods
cmp
cld
ror
fnstenv
mov
xchg
ljmp
mov
and
push
mov
shll
insb
cltd
and
ds
addb
mov
test
and
out
mov
rorb
dec
repnz
stos
pop
dec
cmp
fdivr
or
dec
jmp
hlt
out
iret
sbb
adcb
les
add
and
lods
jecxz
cmpsl
mov
or
mov
cmp
jecxz
xchg
push
dec
or
std
test
xor
dec
stos
push
inc
inc
mov
stc
push
mov
sub
ret
ljmp
xchg
aaa
cmp
loopne
shlb
aad
dec
sub
cmp
or
iret
imul
stos
ret
xchg
fdivl
sbbb
mov
lret
inc
test
push
sbb
insb
out
test
push
or
lret
lods
push
fsts
or
sbb
pushf
jne
ljmp
gs
jne
out
mov
arpl
sub
lahf
sbb
mov
push
outsb
mov
sahf
ljmp
scas
jmp
xor
mov
je
cmc
push
insb
aaa
or
iret
jg
or
push
mov
fs
mov
push
int3
jb
pop
inc
mov
or
pop
orb
out
mov
xor
xor
sub
popf
jmp
mov
adc
mull
xchg
scas
addl
xor
adc
pop
insl
enter
bound
fisubrl
data16
mov
fcompl
inc
fnstenv
leave
mov
imul
push
pop
hlt
clc
and
mov
data16
mov
cld
inc
hlt
push
cmpsb
push
jmp
xor
scas
jns
or
or
sbb
gs
jb
test
adc
add
daa
in
imul
mov
insl
xor
push
jnp
nop
mov
add
mov
mov
cmp
xchg
or
push
push
xor
cltd
xchg
jb
push
insb
mov
mov
lret
mov
ja
mov
cmp
popa
pushf
addr16
fdivr
lahf
push
imul
cmp
loopne
mov
jnp
mov
cs
push
pusha
divl
push
xchg
push
cmp
xor
daa
dec
add
jge,pt
out
gs
jg
adc
mov
or
shrl
mov
pop
scas
push
movsb
mov
les
loope
add
shll
dec
insb
insl
fldt
cmpb
rcll
addr16
jns
mov
scas
outsl
fists
fldt
jno
inc
push
jmp
out
and
dec
iret
mov
mov
jge
lock
jge
in
movsl
lock
aaa
and
xchg
lock
and
ljmp
mov
dec
sar
pusha
sbb
fcmovbe
pop
add
inc
sahf
jmp
push
fcmovnu
adcl
das
inc
lds
roll
inc
mov
lds
dec
and
and
sub
sti
mov
jae
fsts
mov
iret
rolb
mov
int
cmpsb
shrl
stc
sub
push
push
inc
jecxz
popl
nop
pavgb
dec
mov
ror
movsb
add
out
fisubrl
inc
mov
add
ds
sti
or
sbb
rclb
mov
out
push
sub
mov
sahf
adc
scas
cvtps2pi
pop
nop
aam
enter
fcmovb
cld
cmpsl
jae
jmp
mov
imul
sub
arpl
pop
jae
movsl
pop
mov
push
bswap
push
js
xchg
mov
pop
or
outsl
lahf
add
lahf
popa
int
mov
pop
shl
xchg
push
cmp
or
mov
stos
push
mov
adc
arpl
xchg
in
and
cmp
cwtl
mov
dec
call
and
mov
sti
pop
mov
inc
shll
ja
push
xor
dec
and
xchg
scas
sub
scas
mov
cmp
fisubs
negl
xchg
mov
dec
mov
push
ja
push
stos
dec
xchg
in
lock
push
mov
xor
ss
popa
mov
jb
ret
cltd
xor
nop
enter
iret
and
outsb
incl
xchg
mov
cld
repnz
pop
mov
sub
fwait
test
cmp
pop
cwtl
xchg
ljmp
imul
cs
shr
xor
sub
dec
sbb
imul
imul
fs
mov
mov
add
stos
and
rolb
mov
dec
insb
pop
xlat
cli
stos
sti
push
fwait
sbb
add
jne
adc
shll
push
sub
sbb
mov
mov
jae
adc
push
lods
pop
pusha
lea
cld
test
inc
test
jmp
add
inc
push
out
inc
shlb
mov
leave
pusha
dec
mov
mov
out
cmpsl
dec
incl
testb
loopne
cmp
movl
pop
or
scas
mov
hlt
pop
dec
mov
lds
xor
pop
inc
pop
int3
stos
mov
fdivp
fisubrl
jmp
loop
shl
xchg
loope
mov
dec
test
mov
insl
pop
cld
mov
rep
cmp
fsub
daa
cmpsl
hlt
xchg
dec
jl
repnz
lret
lret
jbe
or
in
jmp
rcr
test
outsb
mov
ljmp
pop
mov
dec
lahf
sbb
xchg
push
std
mov
shr
std
shlb
pop
loop
cld
mov
aam
es
adc
in
cwtl
inc
cltd
cmp
jle
mov
lods
xchg
mov
outsb
cld
loope
jecxz
cmp
outsl
dec
add
testb
test
test
xchg
inc
loope
scas
sbb
sub
mov
js
cmp
test
orl
lcall
and
inc
jae
mov
stc
pop
ret
add
mov
iret
jmp
mov
je
rcrl
cmp
pop
mov
add
lahf
lcall
xchg
or
xor
in
add
dec
leave
lods
movl
mov
add
popf
xchg
mov
adc
ret
scas
lahf
inc
loopne
jmp
mov
out
inc
imul
lods
cmp
xchg
popa
push
mov
daa
inc
lret
hlt
gs
out
inc
daa
add
ja
dec
roll
int
addr16
mov
out
sbb
rcrl
loop
leave
lret
inc
inc
ret
or
sub
clc
hlt
xor
int3
bswap
mov
xchg
push
aam
jbe
cs
vminss
cmp
jge
or
int3
mov
into
popf
loope
sti
mov
fdivl
mov
add
int3
pop
mov
enter
add
mov
jne
cmp
cmp
dec
mov
pop
shlb
lods
mov
xchg
mov
xor
test
add
pop
inc
fnstenv
sub
hlt
vpor
pop
mov
out
iret
addb
loope
sar
int3
rol
mov
in
lea
test
cmp
das
inc
jbe
jmp
adc
mov
or
aaa
push
sbb
push
add
adc
sub
dec
cltd
pop
add
test
and
cmpb
ja
ljmp
pop
das
or
in
int3
adc
sar
or
ss
jae
fsubrs
int3
sub
push
loopne
or
dec
sbb
push
inc
mov
xchg
cmp
and
ficoms
inc
sub
mov
pop
leave
outsb
gs
mov
in
insb
and
inc
das
jmp
call
cmp
jmp
ret
ljmp
ljmp
negb
mov
aam
insl
mov
es
mov
test
pop
xor
std
push
ja
xchg
fcmovb
mov
jnp
mov
inc
mov
int3
adc
inc
inc
lock
mov
add
fimuls
arpl
mov
mov
cmpl
push
stos
push
sbb
les
xchg
lods
pop
adc
dec
mov
lahf
xchg
cli
stos
sahf
mov
sbb
loope
jmp
test
push
mov
aad
adc
enter
js
push
xchg
mov
scas
sbb
fucomi
inc
loopne
mov
sti
sti
dec
pop
test
push
pop
push
mov
add
jne
cmpl
dec
pop
data16
pop
out
shll
lret
iret
push
cmc
cmp
mov
xchg
cmp
sahf
and
adc
jmp
enter
pop
jge
pop
iret
push
imul
cmpl
add
mov
inc
shrb
sbb
cmp
and
outsb
leave
popf
test
lods
mov
scas
std
push
fs
call
pop
test
sub
or
dec
jnp
dec
jns
xchg
xlat
or
adc
f2xm1
les
cwtl
xlat
inc
or
pop
mov
jns
sub
cld
push
xchg
jns
fs
and
jns
iret
push
fdivrl
and
pop
lret
cld
rorb
movsl
mov
mov
cs
ljmp
cmpsl
pusha
xor
inc
cmp
cmpb
ret
jg
sub
insb
stc
jne
ret
mov
push
clc
cs
rorb
sub
sahf
clc
adc
jne
fnstenv
and
mov
loop
mov
push
loope
mov
adc
xchg
imul
mov
addr16
insb
and
adcb
arpl
stos
outsl
push
jne
or
adc
inc
rcrb
jp
cmp
and
ja
rclb
or
sbbb
es
sar
in
mov
push
pcmpgtw
jge
ljmp
mov
jne
mov
mov
int3
add
in
loope
testl
inc
aaa
fisttpll
in
not
jnp
push
mov
cwtl
adc
xchg
dec
imul
lods
jno
shlb
movsb
push
adc
syscall
inc
add
mov
and
int
jle
push
mov
out
inc
or
lret
mov
inc
xlat
repnz
jb
iret
lea
cmp
in
int
test
fildl
imul
mov
cld
int3
pop
or
inc
xlat
enter
xor
sbbl
int3
push
cltd
cmpl
cld
mov
mulb
push
push
mov
push
jne
or
loop
lcall
pop
imul
dec
pop
inc
cltd
add
lock
or
fld
push
xlat
ss
sarb
jnp
pop
in
mov
cmp
es
sub
mov
icebp
push
jge
pop
sub
scas
flds
sbb
mov
addr16
shlb
jne
addb
jl
fists
fndisi(8087
scas
pop
sarb
xchg
cmp
dec
adc
sub
pop
movsl
pop
xchg
scas
test
xchg
jne
lcall
mov
mov
addr16
cmp
xor
pop
push
gs
dec
pop
pop
mov
sahf
stos
cmp
push
push
inc
sbb
shrl
and
scas
add
clc
and
cld
sub
adc
lock
sub
jge
jbe
add
clc
out
jle
cs
jge
call
push
es
jl
aaa
mull
or
stos
pcmpeqw
mov
inc
ds
pop
je
sub
movsl
loop
in
jl
hlt
idivl
arpl
scas
jo
mov
pop
cs
aas
add
pushf
sub
aas
fwait
xor
push
movlps
ja
nop
ja
xchg
loop
mov
int
out
dec
fs
jne
scas
les
pop
jp
mov
imul
push
xchg
outsb
add
and
lret
out
xor
lods
adc
adc
pop
pop
lcall
lret
dec
cmp
jmp
out
xor
and
call
add
mov
int
cltd
cmp
sbb
push
cmp
jmp
push
pop
mov
mov
xor
in
orb
aam
jbe
xchg
nop
and
mov
cmp
pop
pop
push
mov
insl
push
icebp
cmc
icebp
cmp
pop
lcall
push
xor
adc
and
push
lret
fscale
popf
outsb
mov
pop
lods
lahf
and
mov
or
cmc
jo
cmp
pop
loop
test
mov
xor
adc
lock
xchg
shll
imul
push
rol
xchg
rclb
rcr
aad
inc
imul
push
inc
sbb
cs
repz
fdivl
gs
jge
pop
rcll
lds
xchg
clc
and
push
mov
pop
lea
xchg
std
sub
xchg
push
sahf
incl
mov
jl
add
sub
repz
jb
mov
loope
cltd
dec
dec
jecxz
cmp
add
fiaddl
dec
or
jg
adc
mov
sbbb
sti
xchg
call
xchg
cld
pop
mov
rolb
rcl
decb
scas
inc
lock
cltd
in
jbe
and
scas
push
imul
gs
loope
push
and
inc
push
fldcw
mov
loop
push
dec
roll
or
cmp
stc
rol
hlt
clc
push
mov
pop
sbb
jns
aad
mov
fisubs
mov
mov
insb
fdivp
aam
aaa
adc
jo
adcl
push
call
push
bound
lds
pop
cs
int
movsl
cmpsl
jp
pop
xor
sbbb
and
in
js
lock
xchg
pop
mov
nop
imul
push
arpl
bound
je
dec
push
pop
push
adc
enter
cmp
cwtl
test
fistps
dec
pop
xor
xchg
andl
mov
lcall
imul
scas
outsl
jg
jle
outsl
testl
stc
xor
inc
inc
lods
shrl
int3
xorb
push
push
pop
outsb
mov
lret
int
inc
jns
fwait
enter
lods
pop
ja
test
inc
fmull
push
test
sub
in
lret
out
push
mov
add
es
push
ss
push
xchg
into
dec
enter
insl
cmp
out
mov
mov
cmp
jecxz
mov
mov
dec
and
fdivr
mov
xchg
push
in
decb
pop
dec
inc
push
sub
clc
popf
dec
cld
sbb
inc
punpckldq
jmp
pop
push
jo
out
mov
xchg
cwtl
mov
outsb
les
add
ret
push
into
mov
pushf
je
das
roll
xchg
sbb
out
loopne
test
movsb
in
aaa
lret
ret
add
pop
scas
mov
dec
mov
cs
iret
mov
div
ljmp
or
fstps
imul
cltd
pop
cltd
sub
das
fldenv
mov
insb
jp
and
sahf
cld
cmpsb
pop
mov
push
sub
sbb
pop
sbb
xor
xchg
sbb
add
mov
rcrb
dec
jns
stos
cltd
sahf
cld
cli
test
mov
mov
inc
pop
in
or
push
mov
loop
xchg
movsl
pop
adc
lahf
dec
enter
and
test
dec
xchg
fistl
xchg
mov
push
fidivs
test
push
pop
int3
mov
mov
int3
mov
loopne
mov
or
mov
jecxz
push
mov
frstor
ss
mov
add
fs
jns
mov
push
aad
jecxz
mov
push
cmpsl
cmp
aas
jns
add
pop
leave
push
addr16
xchg
pop
es
int3
dec
or
pop
jns
jo
sarb
push
test
out
and
in
jb
in
sbb
cmpsl
bound
test
jns
into
jp
in
dec
pop
mov
sar
loopne
pop
in
sbb
inc
push
xor
dec
cmp
rcl
add
xor
mov
xchg
add
jae
aad
push
stos
jae
out
int
es
or
cmp
pop
jmp
nop
push
sub
sbb
sahf
cli
and
outsb
push
xor
or
inc
push
movsl
cld
test
ds
enter
in
popa
inc
sub
sarb
jne
xchg
add
adc
dec
mov
mov
adc
sbb
sbb
cmpsl
xchg
int3
adc
jge
repnz
pcmpeqd
sub
sub
pushf
das
and
sbb
cmp
lahf
lock
and
jmp
lea
mov
jge
push
jnp
fs
push
jbe
mov
mov
cld
cld
mov
ret
mov
lahf
ljmp
iret
aam
jp
xchg
popf
mov
push
cmp
cltd
push
mov
testl
test
and
xchg
jae
popl
je
xchg
or
adc
movsb
loop
stc
in
sbb
xor
mov
add
mov
and
lods
fucomp
jle
out
in
js
ljmp
leave
sahf
lret
inc
loope
movsb
fnstcw
mov
je
dec
xchg
imull
mov
pop
outsb
nop
sbb
shll
ljmp
movsb
pusha
faddp
pop
sbb
mov
mov
push
inc
shrb
lret
cmp
push
insl
cld
lods
enter
mov
push
push
stc
mov
pop
insl
xor
cmp
lcall
cwtl
lahf
jno
enter
pop
imul
xchg
lock
in
mov
or
inc
lahf
and
xchg
push
or
mov
pop
outsl
ror
jno
sti
cld
mov
dec
popf
sub
mov
mov
insl
out
outsb
pusha
and
push
testb
jl
addr16
loop
in
mov
lcall
outsb
pop
jns
lods
sub
je
jle
jae
push
cltd
cmp
movsl
shlb
push
jl
leave
fcompl
inc
js
outsb
aas
sti
clc
mov
mov
cmc
movsl
xor
push
sbb
add
jo
inc
scas
jbe
pusha
rcll
mov
int
rcrl
cmp
mov
add
push
shlb
ret
xchg
scas
fcoml
outsb
jg
pop
shr
adc
dec
lahf
pop
mov
mov
ror
pop
pop
subb
mov
imul
in
lahf
sti
inc
je
pop
shlb
out
ficoms
stos
and
dec
xchg
add
jns
sbb
mov
jnp
sbb
push
pop
mov
add
pop
out
pop
push
cmc
mov
clc
stos
xchg
lock
es
sbbb
mov
sarb
or
ss
sahf
aad
xchg
xchg
leave
mov
cmp
std
cmp
sbb
jne
stc
mov
inc
pop
push
mov
sar
mov
in
fwait
push
push
pop
dec
es
cmpsl
lods
or
das
pop
pop
jae
jl
orb
sub
dec
and
cld
cmp
int
outsb
filds
sbb
mov
roll
push
jnp
fbstp
dec
icebp
outsb
mov
lods
loope
test
enter
mov
jge
fidivl
mov
mov
pop
fadd
loope
jl
mov
inc
jle
push
imul
stc
mov
jge
sub
fsubl
push
cltd
mov
aad
loopne
fwait
popf
jno
lods
jnp
sbb
lock
mov
push
shlb
dec
mov
inc
xchg
add
push
mov
jne
fimuls
push
mov
out
add
mov
mov
daa
bound
outsl
sbb
jle
nop
stos
fsts
jp
inc
movsb
mov
pop
dec
stc
and
mov
insb
pop
ss
jb
movsl
cmp
out
shll
repnz
sub
cmp
iret
mov
stos
arpl
adc
dec
int3
inc
push
mov
icebp
fdivl
ret
outsl
mov
clc
add
and
insb
push
sub
xchg
sub
je
sbb
add
enter
or
stos
or
adc
js
mov
mov
mov
jg
mov
xchg
inc
pop
fdivs
test
adc
data16
pop
imul
arpl
or
lods
cwtl
clc
rorb
imul
xor
sub
sti
mov
sahf
mov
daa
adc
push
in
lea
push
jb
add
xlat
mov
mov
insl
push
sub
sub
pop
outsl
sbb
inc
inc
push
fidivrs
fwait
pop
sbb
mov
pop
inc
xor
cmp
xchg
cmp
test
sti
pop
hlt
push
xor
mov
xchg
in
add
cwtl
ds
je
fwait
mov
or
and
add
inc
inc
adc
ja
scas
insb
jge
jg
gs
mov
or
dec
repnz
fsubl
mov
lods
push
aam
mov
sbb
cmc
jmp
mov
mov
or
notl
xlat
or
aaa
stos
push
aad
mov
cli
add
das
lock
aad
jbe
mov
and
or
cwtl
cwtl
pop
ds
repz
pop
jecxz
in
adc
lods
lods
aas
enter
test
pop
add
shll
daa
pcmpeqd
xor
sub
cmp
ficompl
sti
mov
movsb
xchg
push
loope
xor
xchg
mov
and
jmp
jl
andb
mov
xchg
xchg
dec
fwait
sbb
lcall
pop
in
xchg
push
xorl
mov
jnp
std
inc
mov
repz
adc
movsl
jne
push
pop
insb
movl
mov
sti
mov
xchg
frstor
into
js
mov
mov
mov
mov
lret
test
and
dec
addb
outsb
incb
inc
inc
ret
mov
adc
andw
push
imulb
xlat
shll
jno
ds
and
fists
dec
mov
leave
jns
mov
dec
and
cmp
or
dec
adc
sub
in
ja
cwtl
inc
les
popf
xchg
mov
add
sahf
mov
pop
add
inc
dec
push
ret
or
xchg
out
add
stos
push
jle
notb
jle
sarb
inc
mov
je
cmp
ljmp
xchg
pop
sbb
call
xor
push
inc
xchg
jb
test
push
jp
add
outsl
stos
mov
repz
cld
jecxz
ja
pushf
test
xor
dec
call
push
cmp
pop
adc
test
dec
or
cmp
fsts
xor
stos
cltd
or
sub
imul
xchg
pop
repnz
mov
cltd
xor
je
mov
das
inc
pop
sub
mov
cmp
xchg
jmp
dec
push
sub
repz
mov
sub
dec
jns
add
push
insl
addr16
movsl
repz
xchg
inc
test
daa
testb
xchg
cli
test
xchg
popf
rclb
or
imul
stos
jge
call
rcl
lret
xor
jns
push
inc
adc
in
jb
or
or
push
dec
jge
test
mov
loope
leave
push
mov
lahf
in
mov
push
xor
dec
cmc
dec
lock
arpl
cmp
and
pop
stos
pop
adc
or
xchg
xchg
dec
xor
call
mull
jmp
shlb
dec
pushf
mov
and
lock
dec
dec
pushf
jae
jecxz
add
xchg
jo
loopne
in
loop
fs
mov
xor
inc
loope
jno
fwait
inc
nop
add
scas
mov
mov
push
shl
mov
test
mov
int
ljmp
nop
mov
lret
jb
sbb
push
and
mov
loopne
testl
inc
rorl
dec
add
xchg
jg
pop
mov
adc
bound
sahf
pop
out
orb
and
dec
dec
shlb
and
inc
data16
adc
inc
or
addb
cwtl
mov
pop
jge
sbb
stc
dec
data16
data16
mov
or
push
in
and
cmpb
jle
xor
mov
sub
popf
cmpsb
jne
mov
lahf
fiaddl
mov
xor
int
cmp
jmp
inc
push
jmp
les
sbb
or
ss
cmp
add
add
call
or
push
imulb
xchg
int3
xor
jg
aas
test
jmp
in
mov
add
cld
or
dec
inc
cmc
xchg
clc
pop
mov
sbb
push
or
stc
push
and
xchg
dec
adc
jmp
add
push
add
mov
sar
mov
dec
sti
lods
jno
inc
jge
xor
ss
nop
inc
aam
outsl
push
jmp
scas
push
cmp
mov
jne
jb
fiadds
pop
jbe
cmp
cld
pusha
cmp
xor
mov
movsb
sarl
sbb
xchg
jge,pn
sbb
fucom
and
loopne
mov
xor
pushf
mov
daa
xor
lahf
in
pop
dec
cli
xlat
mov
dec
ret
into
xor
ret
ja
push
or
jo
and
xor
xor
dec
xor
fsubrl
push
adc
aas
sbb
ffree
shrl
lret
jb
insl
hlt
or
shll
out
fwait
ja
lods
mov
idivb
add
aas
jno
repz
daa
sub
lret
and
fidivrs
cmp
fiadds
test
cmp
lret
cli
lret
dec
jno
cmpsl
xchg
xlat
push
repz
push
in
sub
fdivrs
add
pop
out
clc
push
dec
insb
idivl
call
push
ret
out
and
or
or
in
and
xchg
jge
mov
loopne
push
mull
xchg
js
insb
cmc
jo
out
stos
std
mov
adc
mov
mov
inc
movsl
and
mov
dec
cmpsl
push
mov
sbb
hlt
mov
sub
jnp
jg
cld
mov
mov
dec
cld
xchg
es
in
sbb
xchg
sbb
add
push
and
int
jne
call
repnz
fidivrs
cmp
fmuls
out
in
xchg
fnsave
jb
jmp
mov
adc
mov
neg
dec
dec
lret
cwtl
mov
mov
push
add
lahf
orl
push
dec
icebp
repnz
jns
ret
rol
add
xchg
push
ror
or
jo
pushf
pop
js
iret
ds
lea
shl
or
pop
jno
sub
sti
shlb
and
fwait
sbb
adcl
leave
mov
roll
lcall
std
ja
xchg
out
or
mov
xchg
sbb
jl
sbb
scas
pusha
jmp
inc
inc
cwtl
and
arpl
test
mov
ss
xchg
and
push
cmc
xor
mov
mov
aaa
cmp
cmp
and
in
and
repnz
outsl
lahf
inc
popa
fimull
jmp
mov
cmp
pop
cld
xchg
mov
add
dec
stos
xor
inc
add
jge
pop
adc
xlat
add
xor
jb
xchg
xchg
sub
loopne
jne
movsb
je
xor
jbe
mov
int3
inc
and
pop
push
jmp
add
rcl
inc
push
lret
mov
insl
inc
inc
and
pop
pop
cwtl
test
gs
jnp
gs
loope
xlat
imull
push
outsb
pop
inc
js
push
xor
cmpsb
call
in
push
pushf
gs
inc
sub
cli
mov
icebp
jecxz
jle
pusha
loope
mov
add
iret
popf
and
and
cmp
dec
cmpsl
arpl
sbb
loopne
inc
xchg
jbe
and
adcl
subl
dec
mov
and
lods
dec
das
jmp
or
out
jb
cmpsl
jne
push
testl
pop
sbb
xor
iret
adc
push
in
lret
jge
adc
adc
xor
cltd
inc
test
fildll
lds
fsubl
adc
mov
lock
jb
scas
out
cmp
stos
ret
dec
lret
xchg
pop
mov
mov
je
mov
into
mov
in
xor
std
cmc
cmp
and
jne
outsl
ja
pop
in
aas
cmp
fcoms
mov
jmp
jmp
mov
test
test
inc
lds
xchg
or
sbb
scas
mov
pop
sbb
mov
cs
dec
jg
or
mov
sbb
inc
les
pop
aaa
pop
adc
and
adcl
dec
add
test
in
sahf
sbb
inc
es
lock
mov
test
mov
aad
cwtl
inc
dec
mov
mul
xor
and
lcall
out
or
cmp
int3
in
and
jecxz
imul
jge
ja
inc
mov
adc
std
jb
sbb
fcomps
xor
push
or
aas
cwtl
xor
sub
xchg
xor
and
std
cs
sub
sti
arpl
in
push
sbb
lcall
sub
inc
jge
insb
push
dec
dec
xchg
shrb
dec
push
and
das
jl
loop
f2xm1
push
stos
inc
iret
mov
mov
push
dec
mov
push
cmp
ljmp
mov
fcomps
pop
cltd
mov
rcr
adc
pop
ret
clc
cwtl
cmp
pop
mov
inc
jae
sub
testb
pop
jb
nop
lock
in
xor
or
cmp
in
mov
cmpsl
jo
and
gs
out
dec
movb
repnz
or
popa
sti
and
sti
pop
mov
insb
pop
jbe
jp
mov
leave
fcmovnbe
jae
jmp
xchg
and
mov
in
nopl
or
popf
sti
loopne
lods
fbld
cmpsl
push
adcb
lods
pusha
add
test
mov
pop
mov
enter
iret
fistpll
cmp
pop
mov
lahf
jb
pop
mov
or
out
pop
loop
popf
fwait
pusha
rcl
inc
add
js
mov
mov
adc
add
out
xor
push
cmpsl
cmp
push
sub
je
sbb
push
xchg
sbb
ljmp
das
sbb
xchg
sbb
mov
jns
in
aaa
int
dec
inc
mov
mov
adc
sub
test
or
jo
or
xchg
movups
sub
adc
pop
mov
mov
jle
orl
or
mov
jl
mov
arpl
dec
pop
gs
mov
add
ret
mov
sbb
push
lret
dec
xorl
rol
test
sarl
shlb
sbb
jge
jnp
mov
inc
xchg
or
test
shlb
rcl
sub
push
ret
je
xor
jle
or
mov
adc
clc
into
pusha
arpl
mov
rcll
cwtl
es
out
js
xchg
enter
arpl
test
arpl
ljmp
je
pop
mov
jbe
mov
adc
push
ret
push
or
lret
xchg
add
cmpsb
jle
rcrb
xchg
outsl
dec
sub
pop
pop
jb
cwtl
adc
mov
sub
mov
cmpsl
cmp
std
cmpl
sarb
fstpt
out
fmul
mov
add
lret
mov
scas
dec
rol
mov
cmp
xchg
mov
aas
test
mov
fstpl
xor
aam
inc
xorb
mov
fidivrl
fisubs
pop
fs
pop
repz
inc
adc
jp
repnz
jb
mov
pop
lock
cmp
fs
outsl
sbbb
scas
inc
pop
pop
mov
xchg
push
xchg
in
pop
fs
ret
push
fildll
push
jp
pop
lods
cld
addr16
mov
lahf
or
mov
xchg
mov
xchg
cltd
orb
nop
int3
adc
pop
xor
subb
test
aaa
shrb
das
lods
dec
push
int3
jl
mov
sbb
cmp
adc
ss
push
icebp
out
test
test
inc
and
cmpsb
push
iret
fbstp
popf
mov
mov
fcom
mov
les
push
cmp
aad
lahf
mov
insl
fs
xchg
pushw
pop
or
adcb
stos
addr16
fdiv
mov
addr16
push
fsubrs
mov
mov
movsb
fidivs
mov
adc
and
or
mov
xorb
jbe
test
push
mov
xchg
movlps
lahf
xchg
mov
test
mov
and
sbb
js
jb
fsubrs
pop
dec
pushf
ret
lcall
jle
xor
sbb
push
add
xor
in
repz
cmp
jno
add
xlat
fwait
loope
adc
andl
cmp
xor
fsubrl
inc
in
inc
dec
push
out
mov
push
aad
nop
mov
or
adc
test
xlat
das
or
out
test
mov
inc
inc
mov
sbb
push
sub
add
xorl
lods
and
mov
lret
fnstsw
xchg
sbb
mov
pop
xchg
pop
dec
adc
or
push
mull
mov
mov
inc
inc
sbb
pop
inc
xchg
out
repz
pusha
repnz
and
in
in
jl
stc
nop
in
ss
push
cmp
movsb
ja
xchg
lret
cltd
movsl
and
je
push
pushl
scas
call
mov
aad
push
sub
test
aas
sarl
mov
lea
push
add
xchg
fimull
data16
cmpsl
pop
add
or
scas
cmpsb
mov
cmp
in
int3
pop
sbb
andb
inc
insb
mov
and
mov
pop
cmpsb
xchg
xchg
push
xor
int
popa
cmp
xchg
or
gs
jns
and
lock
jle
lcall
cmpsb
lret
stos
fstpl
jp
pop
sbb
gs
cmp
dec
and
hlt
jl
rcrb
loopne
sahf
xor
mov
jbe
into
mov
pop
ljmp
inc
shll
sbb
cld
mov
dec
push
icebp
aam
adc
inc
jge
cs
mov
notb
stos
mov
xor
push
scas
dec
inc
sub
xchg
or
push
xchg
pop
sbb
push
push
sbb
jne
into
and
push
es
iret
mov
mov
dec
adc
sahf
mov
dec
xor
cmpl
and
ljmp
repnz
aaa
les
add
add
push
adc
xchg
dec
and
sub
jmp
sar
hlt
jecxz
arpl
add
call
lea
xchg
sub
or
mov
fmull
mov
jno
fdivrs
push
into
data16
jnp
dec
sub
inc
sbb
stos
outsl
mov
mov
cmp
inc
into
jb
lods
mov
sbb
push
jo
lcall
mov
mov
sbb
push
jle
rcl
mov
xchg
call
and
lcall
test
into
sbb
mov
clc
mov
ret
cmp
orb
mov
fwait
icebp
or
mov
cmpsl
cmc
cmpsb
or
ficoms
inc
xchg
enter
gs
push
test
ret
dec
mov
das
sbb
mov
das
insb
cmp
pop
mov
mov
or
aad
pop
lock
daa
outsl
dec
pop
sbb
dec
fistpl
cmp
dec
xor
scas
sub
shrb
pop
cmpsl
ret
ss
lcall
adc
sbb
mov
and
gs
mov
insl
xchg
adc
mov
and
pop
cvtps2pi
fwait
in
cmp
shr
xchg
pop
add
loope
ja
repnz
xor
cmp
mov
out
adc
roll
xor
cmp
pushf
rclb
cmpsb
mov
fisubs
mov
idivb
aaa
sub
cli
xchg
ljmp
enter
sub
pop
dec
cmc
jp
inc
cli
push
sbb
push
cmp
lea
mov
test
jb
xchg
adc
scas
xlat
orl
and
push
jns
and
push
mov
sbb
xor
in
sub
jle
jnp
jnp
pop
jae
or
pop
pop
sub
or
je
push
cld
loopne
or
nop
xor
sbbl
fdivl
or
lds
fsubrl
pop
sub
push
scas
les
adcl
mov
pop
cmc
cmp
xor
jae
mov
xchg
stc
cmpsl
add
add
neg
loope
jmp
sbb
outsl
xor
pop
es
mov
xchg
pop
das
mov
out
call
or
icebp
push
aad
xlat
mov
pop
add
mov
xchg
out
sbb
xlat
and
iret
mov
inc
cmp
push
inc
lea
or
mov
sbb
xchg
arpl
jbe
ljmp
mov
pop
xchg
cmpsl
push
push
push
lods
shrb
cmp
addr16
aad
popa
dec
pop
push
rorl
add
iret
cld
movsb
loope
dec
add
xchg
lock
lock
mov
sub
push
in
test
jmp
ds
or
loopne
jg
push
call
in
adc
mov
pop
inc
mov
sbb
add
insb
inc
aas
sub
pop
in
in
stos
sti
push
inc
mov
push
mov
fwait
cli
das
push
xor
adc
mov
test
inc
add
add
out
loope
pop
test
call
dec
pop
je
in
xchg
ret
lahf
cmpl
jp
mov
hlt
lds
outsl
mov
stos
pushf
and
or
xor
adc
and
mov
ret
or
mov
cmp
out
inc
pop
test
pop
fdiv
jle
in
xadd
adc
adc
lret
mov
and
xchg
mov
into
fmull
xchg
sub
adc
sbb
enter
test
sbb
negb
sub
pop
nop
incl
outsl
push
sbb
sbb
add
or
scas
ss
xchg
lret
or
out
push
aam
or
inc
push
sub
out
jle
popf
jae
jmp
inc
rcrb
sbb
out
xor
push
push
fs
cmpsl
jae
and
sti
mov
ficomps
or
in
push
jge
imul
in
sti
cmp
mov
out
adc
movsb
lods
or
inc
aaa
shll
inc
lret
jno
sarb
imul
inc
fmull
mov
jge
test
jecxz
mov
clc
inc
mov
nop
mov
xor
test
rcrl
movsb
lcall
xorb
cmp
mov
xor
sbb
mov
jecxz
jg
ret
xor
shlb
sub
adc
jno
add
or
popa
cmp
sub
pop
les
mov
fwait
cmp
negb
xor
outsb
hlt
pop
shrl
adc
pop
xor
cltd
daa
cmp
jne
loop
cmp
mov
cmpl
push
push
and
je
je
xchg
outsl
mov
stc
xor
cmp
inc
call
imul
inc
xchg
out
xlat
aam
push
fadds
jp
aas
dec
outsb
fdivl
pop
cmpsb
shlb
insb
mov
dec
dec
and
cmpl
pop
inc
and
dec
jns
aad
adc
inc
mov
call
arpl
fistl
mov
ljmp
negb
mov
jns
lods
pop
dec
mov
xor
pop
call
mov
inc
push
mov
dec
setne
pop
outsl
sub
popa
or
xor
push
add
filds
cmp
jo
xchg
mov
cwtl
sub
cmpl
and
shl
clc
sbb
into
out
inc
mov
pop
mov
mov
arpl
in
dec
cmp
and
cmp
dec
jmp
lcall
lahf
das
xchg
pop
aaa
clc
jge
mov
sub
lods
xchg
fnstcw
push
mov
push
repz
daa
cmp
sbb
into
loop
inc
push
adc
jp
jb
jns
fsubr
cmc
es
and
das
jle
cmp
pop
data16
cmp
mov
push
das
shlb
or
fisubrl
mov
xor
idivb
inc
sub
pop
lock
adc
push
mov
daa
icebp
mov
cmpsb
pop
jne
lret
jbe
gs
mov
add
aaa
ljmp
mov
pop
test
push
push
loope
push
add
scas
movsl
adc
mov
add
std
fsubr
mov
jae
sub
dec
fmulp
pop
test
ret
pop
movsb
mov
push
std
addb
push
jl
mov
or
sub
addl
jmp
xchg
mov
and
inc
adc
lds
fs
out
mov
adc
mov
jb
or
xchg
mov
cmp
int3
push
pop
dec
sti
xor
leave
or
and
sub
addr16
sbb
xor
lret
inc
mov
out
xor
mov
out
into
add
mov
jl
cmp
sbb
iret
push
test
and
pop
push
jg
or
and
xchg
ja
mov
inc
int3
pop
pop
mov
mov
movsb
cmpsb
ljmp
outsl
xchg
out
pop
dec
test
pop
mov
push
and
outsb
daa
mov
sub
xor
clc
pop
inc
mov
sub
sbb
pushf
out
or
imul
movsb
std
xchg
cmp
push
mov
inc
pop
mov
insl
pop
repz
xchg
imul
xor
cmp
inc
lret
cmp
pop
fstps
pop
divb
xchg
aad
in
or
inc
and
scas
push
pop
sub
add
dec
xchg
jmp
sub
pcmpeqb
jmp
inc
pushf
data16
cmc
shll
jns
loope
cmpl
push
sahf
pop
ret
xor
dec
or
adc
and
addl
inc
test
mov
test
pop
mov
push
xor
movsb
ja
dec
sahf
movsl
dec
repz
inc
cmp
lea
sbb
pusha
mov
cld
and
inc
or
daa
daa
pop
mov
iret
dec
movsb
rcll
or
xchg
cmpl
ja
inc
jmp
daa
popa
xchg
dec
push
push
ucomiss
lret
cmp
dec
das
dec
xchg
mov
movsl
rorl
mov
inc
loop
leave
es
jl
scas
in
stc
cmp
push
je
cs
pop
scas
cltd
cwtl
movsb
ret
daa
xchg
jmp
push
js
xchg
in
jl
and
xor
pop
add
das
cmp
and
adc
mov
add
loope
xchg
cltd
mov
mov
mov
xor
add
adc
xchg
fwait
adc
sub
pop
adc
stc
adc
sub
pop
subl
icebp
mov
testb
addl
sbb
pop
leave
jnp
lods
test
pop
xchg
push
push
jmp
pop
dec
ret
test
aam
shlb
das
jecxz
ss
sbb
imul
je
inc
sbb
push
mov
jecxz
inc
scas
gs
push
pop
push
filds
add
xlat
loop
jbe
pop
xchg
aas
insl
dec
and
xor
ret
loope
jmp
lea
xorl
jb
cli
inc
insl
mov
pop
jl
rclb
mov
aaa
dec
lods
call
cmpsb
sub
mov
aad
les
xor
fbld
fisttps
fiadds
inc
sub
inc
lods
pop
icebp
push
adc
cmpsl
mov
movups
mov
mov
stc
dec
dec
adc
sbb
fwait
test
mov
loope
jne
pop
add
jnp
dec
pop
jge
mov
jl
fiadds
sub
mov
ficoml
jmp
adc
fstpt
fsubr
cmp
sbb
cmp
addb
imul
add
push
lock
inc
add
repnz
shr
inc
pop
or
ss
jns
push
xor
dec
push
stos
cmp
rcr
leave
ja
jmp
sbb
jmp
lods
or
jl
movsb
aaa
aad
movsb
add
icebp
nop
in
cmp
fbld
jge
pop
or
push
lret
out
mov
test
pop
xchg
rol
push
cwtl
add
pop
jle
sub
daa
or
pop
scas
dec
loopne
inc
cmp
filds
outsb
pop
sbb
sbb
cli
das
sti
aaa
gs
mov
lea
testb
mov
imul
and
add
adc
aad
int3
je
cmc
mov
pop
inc
movsb
sub
andb
or
sbb
mov
mov
pop
xchg
insb
out
lret
cmp
sub
xchg
pop
repz
pop
xlat
mov
lahf
cld
mov
out
sub
sti
arpl
ret
imul
xor
insb
or
jle
test
xchg
lcall
add
jmp
xchg
fbld
rolb
and
and
and
xchg
and
shrl
cmpsb
mov
pop
xor
xchg
xchg
loope
sub
inc
dec
jb
fstpl
cmp
aad
sti
sarb
gs
aas
xchg
cld
pop
into
js
mov
ret
or
xor
daa
mov
stos
push
lea
lods
lods
inc
in
stc
jno
mov
push
scas
js
mov
dec
mov
mov
fcompl
pop
addr16
mov
xchg
or
inc
jg
test
or
imul
xchg
or
fmuls
insl
jne
insl
insl
enter
es
js
push
mov
popa
jbe
inc
shrb
xchg
iret
push
addl
jo
mov
cli
sbb
lods
add
fucomp
push
xchg
inc
es
add
push
stos
addr16
data16
fdivrs
add
and
sbb
adc
sbb
dec
and
leave
jo
std
jp
add
and
fwait
inc
in
add
push
cmp
filds
mov
in
es
fs
in
jns
jg
push
dec
push
pop
and
pusha
sahf
xor
in
insb
popf
dec
inc
out
movsl
sbb
fwait
sbb
pusha
daa
push
add
pop
adc
or
lods
and
fisubrl
cli
cmp
imul
ds
jmp
adcl
jo
mov
cli
cs
loop
push
pushf
scas
cmp
xor
fistpl
into
mov
loopne
outsl
push
jae
and
leave
sbb
aas
and
scas
add
xchg
and
aas
inc
loopne
pop
adc
cmp
xor
lahf
add
stos
xchg
lods
loop
push
mov
add
mov
je
jmp
dec
test
xchg
stos
inc
inc
jp
xchg
int
mov
pop
inc
pop
lahf
loopne
xchg
adc
push
mov
lahf
xor
xchg
and
pop
inc
and
adc
daa
mov
fcoml
icebp
xchg
dec
sbb
clc
pop
cmp
cmpsl
mov
xor
xchg
dec
inc
lock
xor
es
mov
in
enter
add
cmp
sbb
xchg
dec
stc
jnp
or
jge
mov
add
mov
push
lds
sbb
fcomps
leave
mov
xchg
imul
xor
push
cmpsl
inc
jb
mov
gs
pop
and
cmp
cltd
icebp
imul
dec
call
pop
xor
cli
ja
xor
arpl
dec
mov
nop
xor
cs
inc
repnz
mov
movsb
outsl
popf
js
jns
test
mov
scas
and
lahf
add
jae
or
outsl
pop
hlt
sbb
push
outsl
xor
mov
mov
ret
sti
cmpsb
cmp
sbb
xchg
lods
stos
iretw
and
mov
and
xchg
aas
add
add
push
pushf
jecxz
inc
mov
addr16
orb
sbb
mov
cmpl
sahf
adc
cmpsb
inc
lcall
jp
call
or
dec
adc
cs
jae
push
mov
cwtl
cmpl
rcr
dec
push
cmpsl
shl
or
add
mov
mov
and
mov
cmpps
or
ficoml
hlt
dec
jnp
mov
in
cmp
aaa
aad
dec
and
into
pop
sbb
pop
aam
and
pop
std
adc
xor
xchg
dec
fildl
sbbl
xchg
dec
sub
sub
jp
outsb
jmp
lds
sub
sub
sbb
xchg
lcall
pushf
clc
cmp
popa
icebp
or
push
shlb
mov
or
pop
ljmp
lock
cmp
movsb
mov
dec
arpl
mov
inc
out
dec
test
loope
rclb
fsubp
movsl
in
xchg
mov
cwtl
mov
mov
aad
dec
adc
repnz
aad
jmp
xchg
xlat
xchg
test
aad
pop
hlt
into
in
jle
dec
cmp
out
push
leave
lods
clc
add
and
and
fcompl
ret
mov
pop
enter
jb
mov
cmp
insl
into
cmp
xchg
xchg
xor
cmpsl
es
xchg
pop
push
dec
mov
lods
sti
xchg
jno
sbb
add
jg
add
jle
into
fiaddl
push
repz
xor
js
outsl
inc
xor
fisttps
mov
outsb
and
enter
rolb
inc
popa
jo
xchg
adc
mov
int
xchg
ljmp
sahf
jge
pop
cmp
xor
jno,pt
je
lock
mov
lds
pop
scas
xchg
outsl
add
outsb
les
in
sarb
aaa
inc
xchg
sbb
test
push
mov
ss
jmp
pop
outsb
cmp
sbb
cli
hlt
outsb
dec
xchg
stos
xor
mov
push
ja
xchg
aas
sbb
push
xor
les
lret
adc
lahf
test
inc
xor
add
mov
push
orl
xchg
sub
repz
jmp
mov
push
das
cli
mov
jg
in
and
mov
ret
add
adc
lds
jl
xor
cmp
mov
mov
xchg
test
xchg
popf
xor
sub
sub
cmc
addr16
cld
in
jnp
rorl
aaa
mov
cs
out
faddl
int3
jbe
sbb
add
mov
inc
or
inc
sub
imul
test
clc
orl
std
outsl
sub
mov
jle
mov
icebp
sub
test
adc
pop
ljmp
jbe
adcl
jno
js
xor
jb
pushf
sub
xor
vxorps
add
shrl
mov
pop
jecxz
sub
aad
out
and
sbb
out
rcrl
xchg
xchg
sbb
leave
adc
mov
xchg
mov
sbb
popa
sar
push
and
jo
push
ljmp
call
xchg
mov
mov
jno
mov
mov
gs
or
mov
jle
cmpsb
xor
xchg
jae
cmp
sbb
cmpsl
daa
popa
jo
sti
mov
dec
cmp
jb
mov
sub
pop
fidivrs
movsb
xchg
cmpsl
xor
mov
push
cltd
int
aam
cwtl
ret
scas
jp
jae
ss
mov
pop
out
shr
je
lds
cltd
shrl
cwtl
scas
divb
inc
xchg
mov
dec
mov
xchg
mov
pop
push
mov
mov
push
and
or
cltd
jl
inc
push
int3
xchg
jb
mov
mov
or
cwtl
data16
fs
call
push
mov
sub
fwait
inc
xor
or
mov
fldt
aad
push
dec
sahf
mov
inc
sbb
pop
cmp
and
inc
jl
mov
inc
mov
movsb
mov
adc
add
repz
push
xor
pop
jnp
xor
mov
das
mov
imul
cmp
and
js
clc
int3
repnz
movsb
stos
jmp
lock
cmc
repnz
fldenv
outsl
pop
push
jp
test
and
jne
std
loopne
mov
ret
es
imul
push
sub
icebp
mov
std
pop
inc
pop
faddl
cmp
add
stc
adc
inc
sarb
jb
stc
popf
stos
stos
outsl
bound
sti
out
inc
vcvttsd2si
cld
movntq
fimuls
sbb
mov
mov
mov
gs
cmp
lock
das
cltd
aaa
xchg
loope
call
cs
mov
add
clc
pop
mov
in
and
imul
inc
mov
mov
sbb
mov
sbb
sahf
inc
push
imul
or
inc
push
iret
inc
mov
adc
dec
mov
adc
cltd
jecxz
push
int
push
push
inc
ljmp
into
incl
mov
lods
outsl
mov
pop
je
xor
decb
sbb
mov
jb
sub
outsl
xchg
stos
loope
stos
jmp
cwtl
cltd
xchg
sub
inc
inc
sbb
dec
xor
fimull
cmp
adc
jb
push
jns
loope
jmp
nop
or
out
outsb
dec
push
push
pop
sbb
jns
or
cmpb
and
jl
sub
cs
orl
push
xor
push
jmp
repz
push
sbb
lret
fldcw
jp
adc
rcrl
scas
int
lods
inc
sub
jno
or
inc
or
pusha
shr
pop
imull
push
adcl
cs
loopne
sarb
adc
and
ret
sbb
sub
sub
addl
repz
adc
je
pushf
inc
add
pop
sbb
pushf
sarb
lret
and
loope
pop
inc
clc
subl
imull
push
pop
jns
cmp
cmp
xchg
xchg
adcb
cwtl
dec
adc
addr16
shrl
push
jne
mov
pop
dec
std
rorl
dec
sbb
mov
daa
loopne
stos
cmp
insl
mov
rcrl
les
subb
adc
cmpsl
push
sub
add
cmp
lds
int3
add
or
cmp
fcoms
push
in
enter
push
pop
mov
dec
cmpsb
repnz
inc
imul
fisttpl
cs
add
pop
mov
lods
push
stos
jno
pop
xor
and
jge
mov
cwtl
fisttpll
loopne
stc
mov
pop
xor
mov
cli
movsl
popa
mul
sub
mov
adc
xor
lret
bound
mov
mov
pop
sbb
push
mov
mov
sbb
lods
and
popa
push
into
sub
pop
call
jae
mov
mov
sbb
push
dec
fsubrs
pop
mov
ljmp
mov
sti
mov
insl
jge
fwait
and
sarb
leave
jge
loope
lea
xchg
cmpsb
inc
int3
mov
pop
nop
sbb
lock
loope
mov
sahf
mov
insb
mov
mov
cli
dec
setne
xor
xchg
mov
dec
aam
fildll
xor
sub
pop
xor
sahf
sub
js
jne
pop
pop
xchg
dec
push
iret
rorl
outsb
or
dec
xor
xchg
inc
dec
jg
xor
and
pop
sahf
and
mov
mov
push
movl
and
xchg
sbb
jbe
movsl
mov
or
mov
mov
xchg
sub
mov
mov
ss
adc
inc
dec
sbb
dec
sarl
out
mov
or
and
dec
dec
jns
dec
mov
add
or
inc
xchg
add
push
movsl
jo
mov
ret
mov
push
imul
dec
push
mov
ljmp
leave
test
test
or
push
outsl
add
sub
push
cmc
lret
cwtl
inc
sbb
jg
mov
iret
pop
xchg
mov
adc
cmpsb
int3
push
aam
mov
mov
fimull
xor
or
pop
jae
adc
pop
push
xchg
jl
push
xor
int3
incl
push
mov
or
and
push
sbb
sbb
inc
pop
rcrl
lods
cmp
dec
bound
outsb
xor
dec
pop
cmpsl
or
addr16
xchg
dec
add
or
cmc
pop
imulb
arpl
push
and
mov
add
pop
outsb
jb
pop
pop
vpcmpeqw
xchg
mov
pop
dec
dec
inc
and
mov
jmp
out
cmp
roll
cmp
repnz
push
adc
or
insb
iret
xchg
jle
lcall
dec
loop
fldl
cmpsb
imulb
fdivrl
into
mov
mov
ds
pop
mov
pushf
je
jl
mov
jecxz
cmp
int
jge
cld
and
fldenv
insl
inc
divb
add
add
je
ljmp
rcll
xor
mov
sarb
mov
and
out
adc
lock
jge
fildll
fwait
and
xor
pop
xchg
jne
mov
xchg
xchg
sbb
mov
fs
add
out
scas
call
add
das
shlb
leave
fistps
dec
mov
or
inc
add
mov
sbb
test
xorb
test
pop
mov
add
es
sub
pop
lahf
out
out
sub
aas
dec
xchg
cmove
mov
in
jl
nopl
hlt
mov
xor
test
jne
jae
cmp
movsl
inc
xchg
add
push
into
mov
sub
jnp
dec
sti
mov
cmp
mov
in
out
pop
add
fwait
aam
add
add
out
push
add
jb
sbb
pop
jbe
cmp
ss
das
dec
int3
mov
mov
add
and
out
push
cld
cmpsb
jno
into
dec
sbbb
mov
repnz
cmc
daa
or
xchg
sbb
aaa
push
push
push
adc
mov
daa
inc
xsha1
cmpsb
mov
shlb
or
mov
int
cltd
in
outsl
stc
add
cwtl
or
jp
sbb
movsb
lea
loope
jno
sbb
mov
js
enter
icebp
rcll
xor
cmp
mov
repnz
in
xchg
lock
lods
imul
and
in
call
addl
jnp
stos
outsb
jecxz
lahf
inc
inc
fidivrs
sbb
xor
jbe
push
cmp
ds
pop
inc
mov
clc
sbb
lea
pushf
cmp
sub
shll
cltd
ss
adc
outsb
xchg
push
sub
stos
enter
cltd
jns
test
out
inc
push
arpl
outsl
fs
xchg
mov
mov
inc
dec
adc
sbbb
inc
sbb
adcb
shl
fdivs
push
icebp
mov
mov
cwtl
sub
xchg
sbb
xorl
scas
ljmp
pop
adc
jmp
push
sbb
mov
xor
xchg
cmp
loope
cmp
int
add
xchg
mov
pop
jne
adc
rorl
xlat
add
scas
lret
stos
dec
pop
in
lret
and
xchg
ljmp
popf
ss
lahf
out
lahf
flds
ss
hlt
mov
out
js
clc
jbe
add
leave
jno
jae
push
mov
lea
adc
or
sub
popf
pop
dec
jnp
loopne
out
add
nop
inc
lea
subl
add
push
mov
adc
ljmp
fldl
xchg
push
xor
xor
sbb
cmp
sarl
inc
sbb
push
jbe
sbb
dec
imul
mov
pop
pop
ret
xchg
in
in
into
das
leave
in
jmp
xchg
add
cmp
mull
xor
repnz
pop
insb
pop
xchg
cltd
rcrl
shr
pop
ret
mov
xchg
xor
and
sub
int
lods
hlt
cld
aas
dec
fisttpl
mov
loopne
sar
js
jno
xor
arpl
sahf
aas
push
mov
aas
loope
nop
cmp
add
cmpsb
push
sub
push
insb
push
fcoms
clc
fcoms
pop
imul
sti
adc
pushf
sbb
jecxz
test
push
sbb
mov
call
cmc
or
mov
and
call
add
sbb
mov
cmp
popf
das
clc
pushf
bound
out
cmp
adc
inc
or
sbb
mov
mov
and
pop
out
mov
inc
js
sub
sarb
fcomip
iret
mov
pop
mov
out
cld
cltd
add
inc
push
test
dec
insl
cwtl
xchg
mov
jns
xchg
and
dec
rcrl
add
lcall
mov
mov
idivb
add
jp
jp
sbb
call
daa
adc
dec
adc
and
pop
fisubrl
cmp
xchg
xchg
rolb
dec
in
sbb
push
cli
mov
lods
push
ja
inc
loopne
das
cld
out
mov
jecxz
loopne
arpl
cmp
rclb
xor
popw
sbb
js
iret
daa
imul
jns
xchg
shrl
jmp
or
cmp
cld
data16
ret
arpl
jmp
outsl
push
test
rorb
and
or
lods
rolb
daa
mov
mov
jmp
adc
pop
cmp
push
push
add
jge
cmp
xchg
imul
pop
mov
shrl
add
sbb
pop
pop
push
xchg
shl
stc
pop
jo
xchg
mov
dec
xchg
mov
sbb
xchg
imul
sub
jg
stc
stc
mov
sbb
jno
add
dec
adc
sub
outsl
bound
dec
push
popf
orb
int
outsl
xor
test
inc
hlt
or
ljmp
adc
mov
adc
xor
xlat
orl
jmp
sbb
pop
or
sti
sbbb
jbe
and
scas
inc
and
roll
mov
cmp
add
pop
mov
shl
sbb
mov
xchg
ja
dec
dec
push
mov
jl
mov
or
jl
imul
je
push
cltd
ror
es
pop
add
pop
or
aas
repnz
sbb
lahf
aad
data16
clc
or
push
repnz
pop
pushf
xor
adc
adc
jno
pop
in
ljmp
inc
or
jge
mov
cmp
repnz
pop
lea
addr16
mov
aam
sbb
fucomp
mov
mov
inc
cltd
and
addr16
or
mov
push
sub
jbe
lods
add
sahf
or
adc
sti
test
out
wrmsr
jle
sbb
mov
cmp
out
int3
nop
scas
push
jecxz
and
pop
adc
std
or
xor
rcrb
repz
inc
fs
ljmp
or
shll
roll
push
cltd
into
ror
icebp
shl
push
dec
rorb
pop
lods
sbb
or
pop
fisttpl
add
icebp
iret
mov
add
xchg
push
int
sub
das
das
cmpsl
jmp
aaa
rorb
add
sub
sahf
fs
and
push
fsubp
movsb
mov
loop
sbb
lret
mov
mov
xchg
clc
in
xchg
and
hlt
lcall
lret
fistpl
xchg
push
jae
lret
shll
jo
movsl
xor
in
outsl
adc
xchg
xchg
clc
and
sbb
cs
call
std
ss
pop
mov
mov
jle
xchg
out
cmpl
mull
inc
shl
and
push
ficompl
dec
push
std
push
icebp
icebp
rcrb
ds
mov
ja
in
adc
popa
popa
cld
sub
mov
addr16
dec
xchg
pop
jg
addr16
xor
popf
in
mov
cwtl
mov
sbb
and
or
push
add
mov
mov
cmp
ja
fstpt
imul
push
cli
inc
pop
insl
js
sti
mov
ret
jmp
dec
daa
jle
jne
popf
add
pop
roll
jecxz
int
fsubrs
mov
out
iret
pcmpgtw
in
sbb
dec
pusha
pop
insl
mov
xchg
lods
test
inc
aam
pop
scas
adc
insl
dec
stc
xchg
dec
loopne
je
xchg
inc
mov
dec
xor
stos
mov
mov
sbb
push
test
inc
pop
cmp
lods
jo
clc
add
sbb
cmpsb
testl
lret
cli
mov
add
cmpsl
mov
sbb
ret
jl
ret
jge
push
mov
into
xor
and
sub
mov
cmp
lds
pop
imul
lods
test
movsl
inc
sub
add
mov
cmp
movsl
xchg
sbb
cmc
scas
and
pop
and
cmpsl
scas
clc
mov
xor
cmp
leave
jbe
sbb
jae
dec
test
divb
pushf
fisubrs
int
rcll
and
and
pushf
out
cmpsl
pop
mov
jge
fwait
mov
ljmp
pop
orb
jge
mov
imul
pop
or
rol
dec
into
pop
add
popa
sub
cli
xor
fcoml
mov
stos
sbb
push
lea
mov
push
dec
sti
pop
lcall
call
outsb
jge
adc
arpl
outsl
imul
lods
pop
push
cmp
gs
jmp
hlt
jle
mov
mov
pop
popa
mov
jmp
stos
int
push
lds
mov
jns
cld
lret
dec
pop
and
pop
pop
jl
rcr
test
orb
push
cwtl
inc
pop
ss
nop
out
push
fidivl
cmp
and
pop
mov
pushf
fnstenv
pop
mov
iret
movsb
push
xor
sbb
rorb
cmc
pop
adc
mov
ret
out
das
ja
aam
rorb
lock
jbe
jo
dec
adc
js
into
enter
decl
arpl
dec
push
popa
push
lds
pop
or
inc
call
rorb
stos
add
push
jge
stos
jo
add
das
or
mov
stos
inc
and
dec
or
testb
lods
dec
in
sbb
jb
std
adc
or
call
add
rcrl
jg
shrl
test
in
les
dec
cmp
cli
ret
sbb
dec
adc
mov
jno
or
adc
adc
scas
adc
xchg
cli
jno
jns
push
push
shlb
lods
lods
shl
lods
mov
and
lahf
jo
cmc
mov
test
in
jnp
or
inc
pop
cmpl
and
push
xchg
inc
gs
shlb
inc
hlt
les
rcr
std
pop
lcall
lods
jns
cld
inc
jecxz
mov
jbe
sbb
ret
adc
add
push
mov
dec
hlt
fsubp
idiv
aam
test
mov
or
push
mov
out
ja
inc
aad
push
add
jns
loop
loopne
jp
lahf
and
nop
nop
jle
in
lret
and
cld
add
in
neg
pop
fnsave
jp
mov
inc
lods
xor
push
sub
xchg
mov
movsl
mov
push
leave
xor
and
dec
imul
sbb
mov
addb
xchg
push
mov
push
stos
jo
inc
xchg
push
dec
dec
add
sbb
pop
xor
fsubrs
test
cs
int3
popa
dec
movsb
xchg
in
adc
insb
lcall
shlb
es
push
pop
and
repz
sar
cmp
stc
push
clc
sahf
repz
cmpl
fwait
xchg
xor
cmp
data16
aaa
rcrl
test
sahf
push
adc
sbb
rorl
inc
mov
sahf
fwait
and
leave
lret
popa
rorb
dec
mov
aaa
lods
add
cmp
jne
int3
or
shll
loope
cli
lcall
movsb
sbbl
mov
or
shlb
aas
dec
and
xor
lahf
xor
popf
sbb
jno
lret
lret
dec
xchg
dec
arpl
cwtl
xor
push
ss
imul
insl
daa
inc
mov
xchg
nop
mov
jns
cmpsb
je
dec
mov
inc
dec
jmp
push
jmp
sahf
xorb
xchg
call
cld
pop
out
cwtl
add
or
push
push
fcmovu
call
or
jno
mov
dec
les
inc
inc
mov
push
push
sub
sbb
notl
add
jge
xchg
sbb
addl
and
fisubl
fnsave
xchg
inc
stos
jle
loope
orl
fcoml
das
fildl
cli
jae
mov
je
adc
loopne
mov
test
jb
lds
mov
sub
lret
je
into
sbb
call
xor
repz
inc
test
push
xchg
mov
pusha
or
ficoml
sbb
inc
push
lcall
or
cmp
in
cmp
cmp
loopne
xor
ss
aam
cmpsl
out
and
inc
mov
adc
imull
jns
and
fstl
mov
cmpb
cmpl
stc
pop
icebp
repz
xor
stos
add
sub
lods
sub
sub
mov
iret
decb
ss
aas
loopne
sub
dec
push
in
mov
xlat
fadd
sahf
push
dec
lea
hlt
aaa
push
dec
lods
and
sub
fs
testb
xchg
mov
scas
jmp
divl
dec
xor
xor
mov
pop
sahf
sahf
add
jge
xor
ja
lret
mov
ret
movsb
fcmove
push
xor
push
xchg
fnstenv
inc
mov
scas
jo
int
add
xchg
mov
insb
fld
push
push
movsb
sbb
pop
loope
push
lcall
xchg
imul
cli
jns
xorb
loopne
mov
loope
gs
inc
and
out
ja
mov
sub
in
insb
mov
rorb
xchg
jg
mov
dec
std
or
fldl
imul
dec
cmp
stc
inc
mov
cs
rorb
xor
add
out
push
or
add
mov
scas
xchg
or
mov
inc
push
dec
shl
daa
sub
fisttps
and
out
inc
fiaddl
sub
dec
sti
js
add
int3
mov
mov
xor
jl
or
loopne
mov
jnp
mov
inc
xchg
xor
into
leave
dec
jle
inc
xor
test
ror
loop
mov
cmpsb
sub
mov
jecxz
push
pop
and
lcall
pop
loop
ds
jae
pop
xchg
pop
dec
mov
xor
fcomps
pushf
jecxz
pop
sub
repnz
hlt
das
inc
loop
xchg
add
test
pop
mov
push
lcall
repnz
icebp
lahf
rcrl
dec
sbbb
mov
test
add
mov
dec
addr16
xchg
pop
sub
pop
and
inc
jbe
mov
aam
cmp
and
cltd
sub
inc
fldt
addr16
shll
dec
xchg
ret
cmpl
jns
xchg
lahf
into
cmpsl
cmc
stos
xchg
out
into
aaa
pop
inc
stc
cmp
scas
jecxz
inc
pop
pop
fistps
in
cltd
mov
scas
iret
xchg
es
sub
inc
jns
test
sub
jg
sbb
in
xor
sbb
je
jb
pop
leave
fisubs
cmp
adc
addb
push
inc
jl
cmpsl
repz
lea
cmp
dec
sbb
inc
pop
xchg
jae
mov
mov
adc
push
out
mov
fsubs
xchg
popf
scas
subb
jb
mov
xchg
aam
jmp
jno
xchg
push
adc
test
jmp
sbb
sub
fcmove
adc
jle
xchg
add
push
sbb
shll
in
or
adc
fistps
std
add
cmpsb
jmp
jmp
sahf
dec
sub
mov
mov
sbb
or
xor
das
mov
mov
dec
cmp
mov
repz
mov
sub
fsubrs
xchg
jle
dec
shlb
shlb
test
dec
add
popa
pop
enter
out
mov
mov
sti
dec
lods
out
xor
adc
cli
cmp
jecxz
pop
mov
and
xor
insb
or
dec
sub
mov
adc
inc
cmp
repnz
stos
loop
jle
aas
sahf
fsubs
xchg
addr16
bound
cmpsl
add
outsl
inc
cmpsb
orb
xchg
imul
icebp
fdivr
or
xor
ret
inc
lea
leave
test
dec
pop
lds
mov
addl
ds
ds
cwtl
int
xorb
in
mov
jnp
in
push
test
or
sbb
push
iret
adc
mov
jae
aas
sbb
mov
js
mov
outsb
hlt
aaa
das
and
in
out
in
xor
jno
test
das
sub
jne
imul
adc
pushf
nop
sbb
jg
add
xchg
out
push
popa
mull
or
fists
aas
iret
mov
xchg
ja
xlat
push
arpl
dec
scas
fnsave
stos
push
xchg
insb
fldln2
pusha
fnstcw
mov
nop
fsub
pop
es
and
add
and
jns
xchg
xor
jae
mov
dec
aaa
xchg
jp
in
or
xlat
mov
enter
cmc
lret
movsb
adc
scas
adc
dec
and
push
and
add
or
or
inc
xchg
push
xchg
subb
scas
xchg
repz
rcll
mov
iret
test
fcomps
or
adc
mov
xchg
xchg
aas
outsl
int3
test
in
push
xchg
mov
test
out
pop
pop
mov
sub
pop
fidivl
daa
jecxz
add
repnz
out
inc
push
jge
cmp
aad
mov
cmp
xchg
sbb
dec
movb
inc
leave
and
test
adc
sbb
lods
mov
pop
rol
adc
stos
inc
dec
push
sbb
sbb
lea
mov
leave
cli
and
rcr
scas
push
outsb
sbb
shl
mov
push
into
mov
add
mov
jmp
cwtl
popl
int3
movsb
subb
or
sub
adc
pop
sbb
mov
dec
sbbl
push
mov
pop
xlat
test
insb
addr16
and
mov
adc
add
int
ficoms
cmp
popf
btc
sub
dec
adc
mov
xchg
sbb
adc
in
jmp
int3
jle
nop
xor
xchg
test
sub
push
and
or
bound
popf
mov
jno
push
into
sub
dec
pop
loope
mov
orb
dec
mov
sahf
xor
outsl
mov
dec
icebp
xchg
mov
test
pop
pop
pop
cmpsl
ljmp
rcll
imul
clc
xor
cltd
pop
or
pop
jle
and
mov
scas
and
mov
push
jb
xlat
or
adc
adc
aaa
pop
insb
popa
fldlg2
sub
jo
lret
loopne
push
cmc
mov
subb
xchg
addr16
push
xlat
push
push
inc
es
lock
inc
mov
scas
lcall
das
add
mov
nop
insb
inc
test
or
xchg
dec
sbb
lock
xor
adc
repnz
and
dec
idivl
cmp
hlt
mov
fiaddl
rcrb
sti
and
scas
xchg
xchg
stos
adc
sub
loop
xchg
sub
mov
js
mov
aam
js
cmpsl
stos
push
inc
mov
xor
loope
push
pop
fwait
xor
sbb
pop
leave
xchg
hlt
fnstcw
sbbb
lock
cmp
cs
cld
hlt
imul
lcall
xchg
pop
dec
inc
leave
adcl
adcl
xchg
aas
mov
lahf
clc
daa
pop
jae
xchg
cwtl
push
lret
int
lds
add
subl
mov
add
pop
shrl
inc
or
out
cld
movsl
rcrb
ds
gs
in
dec
in
mov
mov
test
lcall
std
push
loope
or
js
xor
push
movsl
xor
addr16
or
pop
lock
out
or
lret
mov
out
mulb
sarb
enter
or
cltd
jmp
push
sub
jecxz
fbld
jnp
bound
insb
shr
out
mov
inc
xchg
push
or
loope
and
xchg
or
aam
in
shl
lods
mov
mov
fdivl
pop
inc
pop
xchg
xchg
adc
and
pop
ss
outsb
lock
fsubrl
fistl
xor
sub
push
out
cmpsl
repz
aaa
jecxz
sub
lcall
mov
mov
pop
jle
mov
in
cld
push
shrb
orb
push
rcrb
ljmp
mov
pop
push
fbstp
std
pop
add
mov
add
xchg
adc
dec
cmp
jo
ss
pushf
sbb
outsb
enter
push
nop
ret
dec
mov
enter
push
lret
insl
xchg
cmp
xchg
lret
xchg
inc
push
push
mov
sti
xchg
inc
and
scas
add
arpl
std
push
add
pop
mov
clc
inc
ss
mov
bnd
sbb
lret
sub
inc
jp
push
out
cmp
push
or
adc
push
icebp
ret
das
dec
ds
mov
sub
cli
popa
mov
jne
xor
imul
add
scas
pushf
repnz
add
lcall
sti
shll
daa
jmp
dec
fs
pop
jo
shrl
push
sbb
inc
pop
lahf
mov
cmp
sbb
add
fdivrs
inc
or
push
into
jecxz
jmp
xchg
pop
std
lods
popf
mov
lock
ds
mov
sbb
repnz
mov
mov
mov
sar
fildll
xor
loopne
loope
ret
add
jno
jne
sub
sbb
add
stos
and
ljmp
xchg
testb
or
jns
fstp
mov
pushf
or
or
jb
and
shrl
outsl
dec
shll
push
mov
push
sub
xor
mov
xchg
cmp
sbb
cmp
mov
fldl
jl
mov
das
pushf
outsb
shrl
vorps
mov
enter
jmp
pushf
es
in
pop
subl
in
gs
cmpsb
cld
inc
fisubl
imulb
inc
in
dec
jle
mov
xor
sbb
pop
adc
cld
out
jp
fmull
mov
cmp
lods
popf
mov
push
in
fcmovu
insb
jne
add
icebp
jg
jae
xor
lock
fists
pop
mov
popa
pusha
setle
mov
mov
into
aas
das
jg
lcall
cmp
mov
subw
mov
mov
and
pushf
fistl
ss
rol
std
out
cltd
pop
pop
and
cmp
cmp
mov
stc
inc
imul
lea
pusha
sbb
fadds
ficompl
loopne
shlb
adc
frstor
pop
jge
in
ret
shlb
or
push
loop
leave
pusha
ja
test
add
pusha
jmp
jbe
mov
std
icebp
aaa
adc
mov
xrelease
outsb
ret
popa
in
jmp
adc
inc
lret
push
mov
xchg
mov
stos
mov
ret
xor
stos
in
cs
ljmp
sub
in
or
inc
jg
out
push
out
push
xlat
shrb
cmp
lds
pop
ret
leave
pop
jnp
es
jg
into
mov
add
xchg
lock
cmpsl
decl
out
divb
adc
lret
push
cltd
arpl
dec
out
xor
xchg
sbb
daa
pop
pop
outsb
fidivs
fiadds
add
mov
pusha
sbb
adc
mov
icebp
out
and
adc
aad
rorl
leave
push
cmpb
push
cmpsl
mov
xchg
cmpsl
jo
data16
xor
repnz
and
mov
mov
dec
pop
adc
neg
sub
icebp
lahf
adc
adc
dec
or
in
xor
xor
and
icebp
pop
arpl
xchg
dec
dec
or
mov
inc
mov
adc
fwait
popf
xchg
popf
fwait
sub
jns
push
dec
mov
pop
jae
mov
mov
loope
ljmp
jl
out
add
adc
add
lods
xchg
inc
mov
and
sub
xor
inc
adc
add
sub
out
fs
xor
push
pop
ret
inc
cli
cmpsl
xor
lods
inc
addr16
fld1
clc
and
xchg
xor
movsb
mov
xor
push
pop
add
cmp
push
jecxz
out
test
jnp
daa
sub
cltd
pop
xchg
aad
pop
stos
jecxz
push
mov
mov
dec
mov
call
xchg
dec
or
and
lcall
pop
mov
stc
imull
andl
lods
mov
je
cwtl
dec
push
sub
add
imul
jo
xchg
cmpsb
lahf
lea
mov
adc
xchg
imul
push
loop
bound
or
subb
dec
out
mov
repz
or
shlb
ja
rcrl
mov
and
lea
sub
adc
xlat
pusha
imul
orb
dec
push
lock
xchg
out
movsb
in
xchg
pop
fwait
into
flds
jnp
fimuls
jle
adc
imul
cmp
push
mov
sbb
int
mov
sbb
pop
sub
pop
or
mov
test
xchg
push
and
adc
push
bound
popl
jg
std
sahf
mov
dec
mov
sarb
loop
es
test
pop
add
sarl
sub
xchg
lods
ss
fcoms
hlt
sbb
inc
jl
lcall
adc
cmpsl
std
cmpsl
pop
add
mov
sub
jge
movl
mov
insb
ret
mov
push
jmp
inc
adc
das
jle
pusha
lahf
jg
mov
cmp
jle
adc
sub
xor
pusha
out
cmp
lret
out
xchg
cli
and
push
push
pop
sub
xchg
cmpsl
jg
cmp
push
push
adc
cld
rol
popf
and
xor
sub
rcrb
dec
test
adc
out
adc
cmp
jp
cwtl
cli
in
add
stos
test
cmp
cltd
mov
pushf
xor
mov
test
jp
and
pop
inc
mov
sub
push
les
xchg
pop
test
aam
adc
mov
dec
pop
and
stos
cmpsb
push
sbb
shrl
mov
mov
mov
inc
icebp
jp
cmc
jg
vshufps
and
cmp
daa
nop
push
mov
cmc
add
jg
pop
movl
into
mov
movsb
fisttps
outsl
es
jno
loope
xlat
rcr
push
cmp
or
movsb
sub
jo
dec
push
push
inc
inc
jle
daa
pusha
or
mov
push
lds
outsl
or
in
hlt
mov
mov
xchg
lods
or
ret
sti
sub
cld
sbb
adc
fnstenv
iret
and
stos
lds
outsl
push
cmc
xor
and
push
jne
arpl
das
and
cmp
mov
cmp
mov
dec
inc
mov
aad
add
outsb
jnp
xorl
pop
add
jg
bound
int
loopne
in
pop
ljmp
out
stos
and
iret
std
fsubrl
int
fistpll
aas
jmp
mov
xor
out
sub
es
out
or
mov
dec
ja
cmpl
ja
mov
mov
jg
lret
loope
jmp
inc
cmp
cmp
shll
and
fisttpll
xlat
jecxz
xchg
jns
pushf
stos
mov
loop
outsl
mov
adc
lcall
add
mov
hlt
loop
jae
pop
cmp
scas
push
pop
in
adc
or
into
call
sbb
jle
fisubrl
data16
sub
out
leave
das
out
enter
mov
insb
mov
pop
dec
xor
xor
mov
imul
mov
and
mov
test
mov
mov
xor
push
pushf
inc
cmc
cmp
aaa
mov
jae
sbb
ret
pop
mov
dec
xchg
daa
mov
cmp
idiv
adc
lds
aad
in
fisttpll
xchg
popa
pop
jo
mov
lar
add
hlt
push
js
dec
scas
inc
mov
decb
loop
jns
repz
mull
jmp
idiv
jg
les
sbb
ror
xor
sbb
in
js
test
int3
out
sub
xchg
xor
test
lea
stc
lea
lahf
popa
aaa
xor
dec
adc
outsb
enter
xchg
add
lods
xor
stc
leave
push
arpl
andl
sbb
dec
jns
cmp
sbb
fucomip
cld
adc
out
dec
fadds
mov
xchg
push
adcl
or
cs
push
push
outsb
ss
sub
shl
pop
inc
insb
cmpsl
push
xor
xchg
notb
pop
push
xchg
int3
in
je
pusha
jbe
hlt
mov
rolb
shrl
test
push
jno
adc
jmp
mov
outsl
insb
mov
push
push
xor
fldenv
or
cs
cmpsl
daa
mov
sub
mov
or
leave
je
out
fisttpl
mov
pusha
push
ljmp
aaa
call
mov
fwait
insl
cmp
push
xor
shll
dec
jae
dec
out
int
sub
cld
pop
int
or
push
pop
or
out
js
pop
jno
and
mov
mov
nop
popf
sub
fmull
ljmp
mov
cmpsl
rolb
add
cmp
dec
frstor
sbb
frstor
aas
adc
std
xchg
popf
push
fistps
dec
pop
sbb
lock
pop
push
lock
inc
insb
mov
loopne
sbb
lock
lock
mov
loope
cmp
pop
pop
add
inc
fdivr
aad
loopne
mov
lods
stc
jecxz
adc
dec
push
dec
imul
mov
add
aas
push
fsubrl
fldcw
int
js
mov
jle
in
pop
insl
adc
pop
fstpt
cwtl
push
daa
push
xchg
pop
xor
xchg
or
lock
push
mov
mov
shlb
ja
add
fdivl
jo
ret
and
arpl
subl
loope
cltd
inc
dec
outsl
inc
sub
fnstcw
stc
in
jnp
inc
lcall
fnstenv
test
shll
mov
adc
pop
and
push
cmp
xchg
sub
ds
jns
cli
ja
imul
mov
jns
jl
inc
or
repnz
lret
mov
fsubrs
dec
in
in
mov
fidivs
das
fs
rcr
insl
cmp
push
dec
ret
sbb
rorb
daa
into
mov
jnp
or
mov
rorb
cmpsb
adc
decl
and
pop
fcoms
mov
sbb
inc
jecxz
insb
mov
fwait
push
lock
mull
sahf
clc
rcrl
adc
lds
daa
fisubrl
push
push
ds
pushl
inc
or
mov
in
mov
and
sbb
outsl
out
gs
cmp
inc
jl
movsb
daa
and
mov
rorb
xor
dec
iret
mov
mov
stc
cltd
mov
jo
push
scas
mov
cmp
fxch
mov
mov
xchg
pop
push
mov
push
fisubrs
mov
lret
xchg
in
cmp
insl
mov
dec
les
adc
lret
push
xchg
rcrb
or
scas
test
and
outsl
fisttpl
nop
mov
mov
shrd
sahf
lret
loop
outsb
daa
xchg
out
pop
ret
mov
aas
mov
ret
icebp
fmuls
mov
bound
fiaddl
inc
cmp
or
sbb
inc
movsl
rcrl
decb
pusha
cmpsl
xor
jae
add
push
test
int
fstl
insb
rolb
mov
subb
adc
add
add
dec
xor
sbb
mov
stc
shl
pop
jp
sbb
add
sbb
push
and
arpl
inc
pop
add
sub
jne
imul
fwait
mov
lcall
adc
xchg
push
cmpsl
cmp
dec
cld
lods
pop
xor
leave
jns
adc
stos
enter
mov
outsb
cmp
loope
inc
xchg
mov
out
inc
aas
in
scas
mov
mov
imul
pop
mov
nop
lret
popa
pop
sbb
lret
lcall
dec
jns
in
mov
mov
or
outsl
test
inc
lahf
xchg
sahf
rorb
aad
mov
sbb
cmp
stc
push
outsb
std
mov
jno
mov
sahf
inc
adc
sub
xchg
push
push
sbbb
hlt
mov
lcall
outsl
notb
cmpsb
mov
xor
lahf
sbb
repnz
popa
sar
adc
xchg
push
int3
push
scas
ds
sbb
stos
nop
cmpsl
pop
popa
jo
inc
fcmovnu
push
adc
add
and
xor
or
inc
inc
popa
xchg
xor
nop
mov
ret
xor
cmp
inc
icebp
js
roll
test
jmp
es
setnp
ljmp
pop
mov
push
ret
cmc
cmp
subb
adc
imul
mov
xor
xchg
xchg
in
stos
int3
push
sbb
jne
cmpsl
mov
in
movsl
std
pop
or
loop
faddl
push
mov
int
jmp
sub
repz
sbb
cltd
jns
pop
inc
jp
fidivl
sub
sbb
movsl
and
hlt
push
sub
push
xchg
adc
lcall
fcoml
mov
sub
loope
lock
mov
push
les
addr16
cmp
scas
dec
mov
lock
bound
pop
jb
xor
xor
add
shr
jns
lcall
or
jmp
insb
in
jge
inc
fildll
cmp
and
add
xchg
aas
in
out
mov
jl
mov
xchg
pop
out
addr16
sbb
adc
sub
cmp
sti
mov
mov
add
mov
int
inc
cmp
dec
cltd
and
mov
push
add
iret
and
icebp
in
lcall
subb
sbb
push
mov
clc
in
in
xchg
outsl
mov
cmp
scas
sbb
lds
scas
scas
xchg
shll
dec
adc
and
add
movl
in
pop
add
cld
rcrb
lods
shlb
and
mov
jle
inc
jle
add
out
push
cmpsl
idivl
push
dec
arpl
push
daa
mov
ss
adc
ljmp
pop
in
insb
and
mov
mov
cmp
sahf
or
sub
inc
add
rcrb
mov
cltd
stc
pusha
inc
in
push
mov
cmpsl
mov
movsb
aam
das
cmp
fistps
or
das
pop
insl
movsl
jmp
or
push
divl
scas
push
dec
cmp
pop
add
sahf
cmp
xchg
ja
subl
push
and
jno
sbbl
jb
lcall
aas
jno
jg
xchg
and
mov
inc
jp
jo
pusha
mov
push
dec
fwait
mov
cwtl
out
or
jb
leave
out
cmp
sub
cmp
inc
cmpsl
pop
add
ja
js
sbb
sub
dec
adc
ljmp
sar
and
scas
pop
pop
shrd
fldl
outsl
jo
mov
sbb
rcrb
jp
jae
mov
or
jmp
pop
stos
adc
lahf
pop
rorl
add
mov
fldl
ret
pop
cmc
lret
nop
pop
pop
cmp
jnp
jmp
aaa
sahf
cmpsb
xchg
outsb
int
out
add
jge
mov
cli
lahf
mov
iret
push
mov
push
pop
xchg
mov
jp
inc
testb
sub
sbb
push
test
mov
jbe
sbb
lods
add
ror
lret
loop
mov
cmp
daa
sbb
sahf
jno
cmp
xorb
mov
in
lcall
sub
mov
mov
outsl
outsl
lods
cmc
push
leave
mov
or
in
out
push
std
or
pop
dec
hlt
adc
sub
fists
loopne
mov
mov
mov
jb
ja
movsl
cld
cmp
sub
push
cmc
push
repz
add
fwait
push
dec
xchg
outsl
mov
testb
pop
jecxz
cmp
add
mov
mov
jecxz
inc
dec
imul
inc
movsl
hlt
push
mov
test
idivb
mov
add
adcl
dec
in
es
and
cmp
mov
subb
xchg
insb
aad
rcrb
xchg
adc
xchg
dec
and
jb
inc
mov
inc
push
loop
sbb
push
mov
hlt
ret
repz
out
jnp
mov
rcll
and
lret
lea
pop
dec
dec
pop
cmp
cmp
in
xchg
sbb
iret
push
pusha
fwait
add
pop
mov
mov
out
ds
call
sahf
push
mov
arpl
adc
inc
push
lret
xlat
ror
inc
insb
pop
fs
pusha
lcall
adc
nop
fs
loope
lds
or
cmpsb
gs
sahf
cs
inc
sub
imul
sahf
and
lcall
scas
push
lret
mov
imul
lcall
jbe
add
into
push
adc
lret
jns
divb
mov
pop
imul
mov
cmc
cld
std
sub
and
adc
lret
mov
mov
js
cmp
fidivrs
mov
scas
add
mov
adc
sti
inc
in
xor
mov
nop
test
mov
fs
fcoml
pop
repnz
push
repnz
push
sub
js
and
cmc
ds
mov
push
in
xchg
pushf
movsl
mov
rcll
sbbl
xchg
xchg
aaa
pop
add
icebp
jecxz
shll
pushf
lgs
cmp
mov
js
or
mov
inc
repnz
pop
mov
aad
push
mov
jecxz
repz
fnsave
ret
mov
sbb
outsb
out
mov
rorb
xor
shrb
iret
in
ss
repnz
sbb
or
gs
pop
or
pop
fdiv
push
gs
adc
rep
das
add
xor
stos
and
pop
xchg
cmp
repnz
aad
mov
mov
dec
push
dec
lds
adc
sbb
mov
sbb
scas
call
lea
into
ja
repnz
mov
add
fstpt
data16
negb
mov
pop
arpl
shlb
loope
aad
out
imul
or
push
es
dec
pop
sbb
adc
jo
jp
inc
xlat
push
cmp
mov
fnstcw
push
clc
and
pop
add
xor
jmp
bound
inc
dec
test
jnp
mov
jno
dec
aaa
nop
fldenv
lahf
mov
xchg
dec
mov
push
cmpb
out
mov
lret
or
ds
ja
or
insb
notl
imul
xchg
or
pop
sarb
mov
shlb
mov
jg
std
sub
out
lods
fsubl
or
jno
rcrl
outsb
mov
dec
inc
cmp
aas
jb
push
jmp
pop
iret
jmp
insb
mov
rclb
pop
enter
jmp
test
and
imul
jg
or
push
cmpsl
loop
sbb
aam
xchg
aaa
mov
dec
push
fcoml
pop
lock
mov
dec
mov
pusha
mov
jmp
fsts
add
orb
outsb
mov
fcmovbe
mov
push
cmovo
fwait
xchg
and
dec
out
xor
sbb
mov
dec
push
xor
mov
mov
sahf
dec
jne
pusha
cmp
sarb
pop
cltd
pop
cmp
fcoml
out
xchg
cmp
mov
shll
jbe
and
and
inc
int3
push
mov
dec
loop
push
jno
sub
rolb
cmp
xchg
jmp
imull
cmc
xor
jl
adc
enter
ljmp
push
mov
pop
jp
cmp
mov
int
popf
fs
arpl
and
xchg
jmp
or
push
sbb
push
repz
rcl
mov
fucomp
or
xchg
movsl
mov
mov
jecxz
dec
jl
cmp
shlb
sub
push
add
cmpsl
stos
mov
shrl
clc
adc
shlb
mov
es
jp
bound
cmpb
inc
popa
outsl
inc
imul
stc
mov
pop
in
mov
sbbb
mov
or
add
mov
loop
pop
test
mov
adc
orb
xor
arpl
ljmp
out
inc
jecxz
mov
insb
fildl
out
cmpsl
jo
push
and
mov
adc
std
xlat
outsw
mov
fsubrs
sti
jb
xor
cmp
cmp
cmpsb
ja
frstor
mov
jp
test
test
add
adc
mov
mov
fimuls
ret
add
xchg
loopne
aad
sub
xor
movsb
jge
xchg
fistpll
int
jle
js
xor
dec
adc
fidivrs
jl
xor
aam
sahf
mulb
ja
or
dec
mov
lods
sub
mov
stos
mov
mov
xor
jb
pop
jbe
adc
cmp
mov
dec
and
pushf
pop
dec
lods
sbb
mov
inc
div
mov
out
mov
or
outsl
pop
mov
xor
push
ficomps
int3
or
sub
ds
or
jmp
fsubrs
jno
stc
xor
enter
jmp
inc
imul
jg
je
xor
xor
stc
push
and
rorb
or
repnz
std
inc
dec
icebp
or
cld
adc
lahf
push
push
push
xchg
push
jle
int
cli
loop
into
pop
das
cmp
push
push
outsb
imul
cld
sarl
fcmovbe
dec
lret
dec
shrb
mov
lea
pop
mov
das
xchg
mov
pop
test
cli
pop
cmp
cs
rolb
outsl
pusha
pop
push
test
sbb
loop
dec
pop
xchg
and
out
xchg
stos
cmpsl
inc
and
js
sub
sbb
jno
iret
inc
mov
iret
dec
adc
call
fistl
add
movsb
lret
lret
ljmp
mov
sahf
fbld
movb
shr
xchg
push
mov
movsl
lock
pop
jl
loop
mov
xorl
push
scas
jo
or
or
imull
fdivr
iret
dec
lahf
shll
lds
aam
sbb
mov
popf
mov
cmp
dec
shr
lahf
mov
aad
and
daa
ja
cmp
dec
fwait
shrl
pop
ja
cmp
cmp
adc
ds
inc
iret
mov
mov
popf
xchg
inc
pop
xchg
dec
xor
stos
stos
inc
xlat
sub
in
cmpl
adc
add
xor
pushf
stos
push
jo
cwtl
pop
repnz
sbb
fst
orl
xor
shrb
ds
out
inc
imul
sub
int
mov
push
std
rcrl
mov
and
ret
mov
out
loope
fists
stos
or
enter
stos
add
cli
shl
xor
and
add
imul
push
scas
mov
gs
insb
push
xchg
cmp
pop
in
xor
xchg
pop
add
push
jne
fisubrs
adc
mov
imul
pusha
les
or
ffreep
xor
lahf
add
inc
lds
mov
push
xchg
mov
nop
adc
fs
push
dec
call
loope
vmaxpd
jmp
filds
pop
or
lret
dec
in
xor
jae
sbb
lea
push
cmp
nop
jnp
pop
inc
int3
movsl
sub
or
and
mov
pop
or
cmp
dec
popf
mov
mov
cwtl
jbe
outsb
icebp
sbb
jmp
xor
stos
jae
xor
ss
adc
mov
sbb
cmc
lea
inc
aam
leave
mov
leave
pushf
icebp
xor
or
mov
add
inc
leave
hlt
inc
into
inc
addr16
sbb
jne
inc
loopne
pop
xor
and
pop
out
enter
mov
pop
icebp
outsl
int3
in
call
sbbb
cltd
xchg
mov
push
out
inc
dec
jmp
insl
repz
lods
push
outsl
shl
icebp
jmp
mov
fstps
jbe
lea
imul
daa
mov
mov
imul
add
dec
jae
ja
push
xchg
mov
test
imul
sti
xchg
ss
or
cs
adc
add
mov
out
xor
imul
jns
push
mov
lcall
cmp
jns
lds
or
in
inc
das
cwtl
jp
addr16
ss
jbe
jnp
std
adc
subb
lock
ret
push
push
jp
sbb
fisubrs
lret
rcr
into
adc
gs
add
and
mov
mov
mov
dec
addl
scas
cltd
and
js
xor
push
pusha
add
fidivrl
mov
jo
pop
add
lock
fildl
inc
dec
imul
pop
dec
repnz
cmpsb
xchg
int
test
cmpsl
mov
sub
pop
mov
jno
into
mov
les
testl
stos
cmc
into
in
mov
xor
add
dec
push
mov
popf
xlat
mov
cmp
jno
fisubl
add
repz
or
repz
cmc
dec
imul
cmp
inc
lret
js
sbb
jle
mov
cld
jl
and
or
lock
loope
jb
stos
sub
inc
int
inc
shl
addb
dec
adc
dec
mov
std
pop
jg
pop
movsl
out
mov
mov
or
movsb
push
inc
mov
adc
and
jae
cmp
mov
cmp
icebp
xchg
mov
xor
mov
push
div
jbe
jnp
sub
inc
jg
mov
jbe
xchg
jnp
jnp
mov
adcl
mov
imul
aas
fnstsw
fwait
sarb
rcrl
dec
inc
xchg
mov
jmp
sahf
aam
xchg
add
sbb
dec
hlt
fdivl
sbbb
cmp
pcmpeqd
ret
hlt
int3
jbe
insb
in
popa
jmp
negb
sbb
pop
test
xor
xor
in
in
pop
rolb
lock
dec
arpl
mov
into
push
int
icebp
or
int
mov
inc
cld
or
inc
dec
enter
or
out
imul
pop
nop
sbb
mov
xchg
mov
push
xchg
adc
test
das
sub
cs
in
lods
sbb
push
mov
pusha
inc
outsb
and
mov
das
adc
pusha
int
lahf
in
lret
adc
xchg
cmpsl
jae
add
mov
and
ret
mov
out
ja
sbb
scas
jmp
xchg
or
xchg
in
dec
pop
mov
xor
mov
sarl
sub
inc
cmpsl
in
test
add
repz
add
cs
cmp
loopne
out
xchg
andl
out
repnz
or
cmc
adc
bound
pop
push
and
fstpt
sbb
fidivs
lock
ret
outsl
xchg
ja
repnz
lahf
test
xchg
sub
in
int
out
mov
gs
xlat
pusha
int
out
aaa
push
adcb
fcoms
and
xor
push
fwait
sbb
popf
std
test
call
into
out
pushf
xorl
outsl
cmpsb
shlb
push
fidivl
std
leave
xor
ret
push
loope
mov
xchg
xor
xchg
dec
fwait
scas
mulb
mov
sbb
jnp
gs
inc
mov
fdivl
into
lock
out
loop
cmp
movsb
sbb
sti
cltd
xchg
std
xchg
sbb
lea
cwtl
cli
int
sub
jb
outsl
push
adc
lahf
xchg
jle
and
pop
test
out
xchg
add
sti
sbb
shrl
push
jl
sbb
inc
aam
cld
std
xchg
insl
inc
aad
cmpsb
aaa
jnp
popa
cmpsl
or
fwait
ds
popf
movsb
mov
xrelease
sub
mov
cli
sub
es
xor
pop
lret
lret
nop
stc
sar
int3
jge
inc
mul
test
pushf
xor
inc
or
add
pop
jbe
sbb
mov
rolb
or
jmp
arpl
push
add
adc
jb
mov
cld
test
lods
fmuls
enter
adc
cmp
leave
test
jb
push
or
mov
xchg
cmp
out
rcl
pop
lods
mov
jbe
mov
and
inc
dec
test
mov
loope
orl
fistpl
mov
xchg
jo
mull
xor
jmp
outsl
ljmp
mov
into
mov
jae
sbb
and
outsb
adc
adc
jns
push
lods
mov
fistl
test
mov
add
fistl
stc
dec
cmpb
repnz
jnp
jb
push
xchg
jnp
lret
call
iret
pushf
inc
cs
push
rcrl
pop
test
add
es
sub
cld
dec
scas
pop
popa
jle
sub
inc
inc
mov
int
xor
je
idivb
fistps
repz
push
jb
movsb
test
sbb
shll
das
and
je
mov
lods
pop
xor
out
mov
sahf
adc
push
aam
push
gs
or
nop
xlat
fistl
mov
jne
xor
sbbb
ficomps
ret
enter
je
mov
pop
xchg
and
dec
stos
push
dec
mov
dec
addb
and
andb
jg
push
cld
adc
imul
negl
std
bound
push
or
jo
fdivrs
aas
or
fs
dec
fwait
mov
jecxz
out
repnz
in
idivb
mov
pop
mov
std
pop
push
or
in
ret
or
adc
pop
call
orb
test
or
leave
pop
push
mov
int
jb
mov
mov
or
inc
das
inc
sbb
shll
frstor
divb
dec
mov
mov
xor
movsb
or
les
add
jns
dec
cltd
repz
sbb
test
sub
xchg
dec
mov
mov
sbb
into
addr16
iret
cmp
xchg
xchg
fidivrl
jne
lea
inc
push
push
jnp
addb
jo
push
sti
pop
mov
sub
fisubrl
test
int3
jnp
and
ss
dec
sbb
xchg
or
dec
mov
pop
pop
les
ljmp
add
jb
fsubs
test
mov
sbb
inc
cmp
fidivl
sbb
dec
adc
sbb
mov
call
jbe
imul
lods
fnstenv
inc
into
mov
or
fwait
push
lea
stos
lock
aas
aam
lods
dec
jle
add
ss
shll
pusha
push
into
pop
jno
push
and
lret
shll
mov
andb
jnp
movsl
push
addb
lds
test
lods
jge
adc
xor
xor
jbe
into
lods
mov
ret
sti
cmp
jae
cmp
mov
int3
jno
or
cmc
ds
mov
cmpsl
jl
inc
cmp
add
jecxz
cmpsl
daa
or
js
fwait
and
push
push
sbb
rolb
mov
xor
sbb
xchg
sti
pop
push
ja
mov
in
xchg
mov
sub
pop
adcl
jnp
push
hlt
imul
fstps
xor
push
hlt
xor
lock
push
lea
jge
pop
fs
shl
push
mov
dec
cs
pushaw
hlt
cwtl
js
push
fwait
push
cmp
jae
mov
mov
cmp
test
mov
je
cmp
dec
mov
cmc
js
sub
mov
push
ja
add
push
xchg
je
sub
push
mov
jecxz
jecxz
push
adc
pop
add
xor
xor
ljmp
jae
lds
cwtl
adc
xlat
dec
push
imul
mov
cmp
cmp
movsb
xchg
jno
push
test
sti
sar
in
pop
idivl
or
jb
mov
ja
xchg
sbb
mov
cwtl
pusha
push
and
mov
inc
insb
push
stos
ljmp
add
std
sbb
repz
add
mov
jno
add
jl
cmp
out
pop
enter
pop
les
adc
cwtl
mov
cld
sub
mov
enter
push
decl
xchg
lods
add
mov
repnz
setle
sub
mov
push
cltd
xchg
cmpl
and
inc
aad
push
cmpsl
xchg
sti
nop
cli
xchg
dec
push
push
outsb
push
fsub
jnp
int3
sub
sbb
mov
jno
aas
or
sub
adc
mov
mov
cmovs
add
sbb
cmp
pop
mov
cmpsb
stos
dec
ret
add
inc
rorb
push
lds
mov
es
ds
lcall
mov
icebp
incb
sub
ret
pop
insl
sti
je
ffree
and
test
imul
push
pop
mov
cli
jmp
push
jle
add
and
dec
icebp
das
sbb
or
sbbb
adc
or
jge,pn
addr16
mov
mov
outsb
mov
add
mov
clc
jbe
inc
in
jns,pt
aad
jmp
mov
cmpsl
fwait
sti
xor
inc
popa
xchg
adc
mov
sub
mov
arpl
lea
call
mov
cmp
outsl
xor
arpl
outsl
jbe
adc
mov
push
lahf
rcll
out
iret
in
cmp
adc
loopne
mov
push
sbb
dec
jmp
je
cmp
mov
aam
popa
push
sbb
cmp
cs
xor
inc
cmp
xchg
xchg
repnz
cld
xor
inc
mov
das
test
sub
jo
mov
and
mov
fldcw
jp
ds
pcmpeqw
xchg
pop
mov
mov
shrb
lock
decl
in
enter
ss
rcll
sbb
out
mov
adc
lods
clc
ljmp
enter
or
mov
mov
mov
xor
xor
jle
pop
nop
aad
fucom
mov
dec
jmp
enter
ss
dec
push
imul
es
sub
and
shrb
and
cmp
xchg
pop
push
mulb
mov
xor
pop
imul
inc
rcrb
pop
popa
push
je
pop
adc
vcvtsd2si
cmp
test
and
add
out
jnp
pop
addr16
dec
imul
cmp
xchg
cs
ret
pushf
out
movsb
xchg
lret
adc
icebp
arpl
ljmp
lret
xorb
adc
cs
cmp
or
mov
push
repnz
mov
int3
dec
xor
stos
out
lds
xor
call
mov
push
cmp
jmp
mov
aas
ljmp
outsb
xor
mov
mov
mov
out
jmp
pop
test
adcl
jns
divb
stos
cmp
std
loope
insb
jae
fs
repnz
and
push
notl
mov
pop
cmp
xchg
jb
mov
bound
icebp
fsubrl
mov
xor
bound
mov
jecxz
add
xchg
ja
neg
dec
add
mov
and
in
add
mov
push
mov
adc
repz
and
data16
imul
or
mov
outsl
or
hlt
pushl
mov
lret
mov
and
movsb
push
inc
jl
loop
and
add
je
cmp
sub
enter
repnz
pop
sub
add
repz
mov
push
mov
jp
stos
or
call
in
jae
or
sub
lds
xor
je
flds
pop
sbb
adc
loopne
push
leave
stc
fsts
xchg
call
lret
add
inc
xor
mov
and
cmp
std
pop
fmull
cli
ds
in
movsb
sub
data16
mov
ret
mov
movb
cmp
mov
inc
adc
fsts
jne
andl
out
in
xor
xchg
popf
mov
cmpsl
jl
jns
insl
icebp
and
sub
test
pop
rolb
mov
mov
mov
dec
out
pop
sahf
aam
idivb
dec
sub
mov
jmp
xorb
ljmp
call
je
mov
pop
push
int
push
mov
insb
mov
mov
fistpl
dec
pop
lret
dec
pop
aaa
in
inc
jbe
icebp
jg
push
push
aas
and
test
mov
mov
jge
vcomiss
push
adc
xchg
cmpsl
xlat
daa
mov
pop
sahf
orb
fisttpl
pop
cltd
lods
pop
push
mov
daa
adc
jle
ret
or
out
push
cltd
cmp
mov
xchg
xchg
lods
ja
xchg
in
fneni(8087
jmp
ret
rol
dec
sub
jg
cwtl
mov
adc
and
sahf
cs
xchg
push
in
add
mov
std
adc
and
sub
push
jne
jg,pt
aad
rol
xchg
addr16
mov
sbb
and
dec
xor
jae
pop
lock
shlb
adcb
adc
movsb
jl
lds
test
movsl
mov
fs
movsl
repnz
jecxz
aam
jae
out
sbb
xchg
mov
xor
outsb
sbb
dec
push
ret
hlt
mov
push
jnp
test
xrelease
lock
jle
cmpsl
stos
scas
jp
cli
cmpsl
mov
xchg
pop
in
jg
gs
xchg
xlat
sahf
pop
jge
test
add
gs
xor
sbb
aam
adc
imul
add
mov
xor
movsb
push
test
cmp
mov
jge
dec
negl
mov
mov
and
mov
xchg
adc
cmpsl
jl
outsb
jne
jge
enter
dec
push
mov
stos
mov
add
mov
inc
dec
add
mov
pop
es
dec
pop
js
xorb
lcall
and
sub
pop
imul
jl
test
in
cltd
roll
rcll
jmp
stos
or
in
dec
jecxz
int
sbb
cmc
icebp
mov
loop
cld
rcr
push
clc
roll
mov
pop
and
push
mov
pop
pop
adcb
inc
pop
rcll
xor
xor
in
out
push
sbb
dec
lods
add
enter
cmp
fsubs
test
cmpsl
cmp
inc
pop
adc
test
push
fldcw
faddp
and
ljmp
inc
loop
sbb
xor
addb
jne
in
adc
test
scas
mov
pop
jp
fwait
pushl
jmp
xchg
adc
push
push
pop
fwait
and
mov
lds
jg
adc
std
std
inc
sahf
std
lmsw
mov
int
sub
aas
sar
or
adc
jo
inc
xor
mov
sbb
das
xlat
mov
sbb
cmp
xchg
fs
sub
cmp
pop
jg
inc
dec
xchg
out
push
mov
ss
dec
xchg
imul
fstpl
arpl
xor
shl
xor
clc
fwait
stos
out
mov
sbb
cmc
cmpsb
fcmovb
in
add
mov
shl
aad
xor
inc
lods
fdivrs
cltd
fistpl
sub
pop
add
testl
clc
test
lds
cmpsb
aaa
popf
je
push
leave
repz
les
fs
or
ja
out
lock
dec
shll
imul
dec
sahf
pop
pop
and
jl
lret
inc
push
add
cmp
add
xor
filds
push
xor
inc
aam
jo
cmp
gs
int
mov
cwtl
xor
sahf
push
push
int
dec
xchg
sub
lea
movsl
sbb
enter
push
jns
push
pusha
imul
add
cmc
jg
mov
ret
icebp
cmp
jbe
lock
rorl
lret
addr16
mov
and
clc
mov
push
cmc
mov
pop
les
gs
push
aam
inc
xchg
imul
scas
adc
jl
jbe
mov
add
insb
bound
and
jns
mov
sub
push
add
mov
cmp
shrb
sub
sbb
pop
mov
lock
mov
in
mov
mov
xchg
xchg
pusha
jmp
addl
add
cmp
cmp
rcr
outsl
daa
xchg
bound
stos
pusha
and
imul
sbb
std
rorb
fnstsw
push
xor
icebp
lds
add
pop
xlat
divb
cmp
sub
fidivs
or
aaa
cmpsl
enter
inc
jle
test
sti
leave
xlat
jb
movsb
and
add
push
rclb
xchg
in
inc
sahf
pop
adc
cmpsb
or
mov
xchg
adc
cmp
pop
xchg
popa
jo
mov
push
fs
loopne
pop
shll
popf
into
push
dec
jmp
pop
aam
nop
dec
fisubrs
pop
dec
mov
mov
mov
lea
mov
pop
mov
loop
or
fdivrs
inc
or
outsb
jp
mov
xlat
xchg
mov
fsubrp
sub
mov
fs
fmuls
mov
aaa
sbb
or
jmp
dec
add
leave
cmp
arpl
imul
push
pusha
cmp
data16
push
ljmp
sbb
push
jl
and
push
mov
sti
stc
mov
mov
jns
push
ljmp
rolb
popa
sbb
push
sbb
int
mov
mov
pop
fucomip
aad
shrl
cmp
pop
int3
add
repz
mov
sub
dec
sub
stc
mov
xchg
push
dec
cli
loop
jl
and
mov
adc
mov
jb
adc
lds
fnstcw
push
mov
scas
in
arpl
adc
push
pop
inc
arpl
mov
mov
jge
addr16
cmc
mov
sbb
and
lret
lret
mov
mov
fwait
outsl
jo
mov
lret
xlat
cmp
adc
clc
sub
mov
push
mov
ja
mov
and
dec
pushf
test
mov
cld
mov
sub
ret
dec
and
xor
jb
es
inc
push
cmc
cmp
lcall
pop
or
divl
cltd
xchg
mov
mov
or
add
xchg
inc
jg
fcoml
sbb
lea
flds
mov
loop
xor
cmp
js
cli
xchg
inc
int3
mov
loope
aaa
mov
sub
call
mov
pusha
sbb
rcr
imul
pop
adc
cmp
nop
add
addr16
mov
cltd
or
fstpt
pop
stos
adc
sbb
enter
jecxz
sbb
test
rorb
push
cmp
jo
aam
cmpsb
out
mov
stos
push
sub
jae
bound
sbb
or
in
push
mov
daa
fwait
jmp
nop
mov
mov
lcall
and
jmp
cmp
jecxz
pop
pushf
xlat
xchg
sbb
fidivl
pop
and
pop
push
sahf
mov
sti
cmp
cmp
movsb
push
ja
movsl
mov
lds
test
daa
aam
inc
jp
ret
pop
cs
sarl
insl
mov
sahf
test
xor
daa
jp
push
aaa
jnp
add
mov
rcrl
notl
in
mov
rol
int3
sbb
jmp
ret
sbb
outsb
mov
arpl
das
xor
dec
aad
mov
out
sbb
push
jmp
inc
shrl
add
cmp
or
mov
and
push
in
xor
imul
and
adc
and
lcall
add
icebp
movsl
fisubrl
push
jbe
mov
mov
inc
mov
out
push
cmp
sbb
inc
jae
inc
andb
inc
cld
or
sub
lea
xor
mov
jmp
pusha
push
sub
pop
sti
xchg
push
andb
cmp
adc
jns
test
scas
mov
call
nop
add
sub
push
leave
sarb
mov
pop
adc
xchg
cmpsb
pop
xchg
fimull
and
in
inc
jns
movsl
pop
sub
xchg
popf
mov
mov
test
or
ret
jg
addr16
cli
dec
pop
lea
jae
rcrb
shrb
push
mov
mov
ja
sub
out
inc
fidivs
dec
inc
das
sub
xchg
cmp
adc
rorb
push
adc
ret
xchg
lock
add
aam
pop
in
sub
mov
cmpsl
and
push
xlat
in
or
lock
lock
or
xchg
inc
ffree
cmp
cwtl
sub
negl
pop
lcall
out
fistpl
lea
js
nopl
lcall
mov
mov
mov
lock
mov
imul
repz
lods
pop
inc
fisttpll
mov
std
push
jo
loopne
repnz
mov
push
xor
sahf
fsubs
in
mov
sbb
std
lods
and
jl
mov
add
mov
fwait
mov
sub
jecxz
add
and
daa
icebp
scas
pop
mov
lea
mov
rcr
adc
ds
outsl
imul
cwtl
sbb
sub
pop
dec
outsb
fiaddl
jbe
or
clc
stc
jle
fisubl
add
scas
add
hlt
pop
cmpsb
mov
lea
nop
roll
nop
jecxz
in
dec
out
mov
outsb
mov
ss
add
and
add
jnp
mov
xchg
inc
xor
fistpll
sbb
cmovg
pushf
into
dec
and
adc
cmp
mov
mov
stos
ljmp
cwtl
inc
in
stos
xchg
jle
cmp
lods
sub
add
lcall
mov
rclb
jo
or
sbb
popf
and
mov
mov
outsl
movsb
cmpsb
adc
mov
mov
iret
enter
push
ret
pop
dec
cmp
and
or
mov
inc
gs
popf
loop
xor
inc
fcomp
fcmovnb
repnz
fisubs
repnz
in
dec
test
aaa
push
pop
sahf
cmp
shll
jne
dec
popf
sub
cltd
pop
sbb
je
imul
cld
cmp
test
push
nop
outsb
jecxz
sar
sbb
push
aad
mov
std
cltd
cld
push
pop
daa
xor
ret
inc
jp
dec
mov
xor
push
sbb
rcr
pop
mov
push
hlt
sbb
pop
imulb
or
aas
xor
mov
in
mov
pop
cmp
push
inc
icebp
mov
mov
leave
jo
dec
mov
mov
in
sbb
stos
mov
ljmp
mov
jg
data16
lret
test
jns
fadds
inc
sub
jbe
cwtl
dec
and
push
enter
pop
lock
push
andb
loopne
cmp
aaa
repz
inc
push
xchg
hlt
push
fistl
out
sbb
stc
ficoms
hlt
out
cli
pop
push
xor
jbe
and
cmp
js
aam
mov
fsts
add
ss
mov
adc
jg
in
mov
movsb
mov
test
or
int3
ss
lock
adc
adc
add
mov
sbb
add
and
mov
mov
mov
fnsave
jne
mov
jno
inc
inc
dec
jle
insb
dec
xchg
and
sbb
or
insl
test
sarb
mov
sarl
sub
cmp
cmp
add
sbb
xchg
xor
xchg
scas
push
xchg
aad
lods
adc
mov
inc
inc
pusha
aaa
imul
es
mov
imul
dec
mov
inc
fistps
out
adc
bound
push
sbb
fimull
mov
js
cmpsl
and
mov
icebp
sub
xchg
xchg
sbb
std
jno
push
add
sarb
movaps
cs
mov
xchg
repz
arpl
sub
or
inc
cmp
push
pushf
aad
mov
addr16
out
jno
ret
aaa
mov
pop
xchg
or
jo
addr16
fs
mov
jg
das
repnz
and
rorb
jle
xlat
jle
movsl
movzwl
int
xchg
inc
mov
je
repz
inc
test
int
mov
lahf
dec
push
cmc
in
sbb
outsb
push
fidivl
rcl
cmp
leave
negb
mov
je
cmp
mov
sahf
or
hlt
push
push
cmpsb
push
inc
ret
xchg
ja
xor
insl
comiss
mov
in
and
repz
popf
adc
cmp
mov
mov
push
pop
lret
jae
push
mov
push
mov
movsb
cli
mov
sub
negl
pop
ss
and
jne
mov
sbb
subl
or
dec
nop
mov
sahf
scas
mov
jo
mov
imul
fprem
test
jmp
lahf
aam
dec
aaa
outsl
adc
cltd
mov
imul
xchg
sti
pop
lret
outsl
lea
push
cmp
popf
jp
sahf
and
xchg
xor
sbb
mov
fwait
add
push
push
mov
cmp
cmp
mov
push
add
in
fsubr
adc
mov
in
lods
shrb
push
jns
fwait
cmp
jg
incb
mov
ret
mov
jno
push
jns
add
cwtl
and
cmp
jnp
sahf
add
sub
test
mov
lahf
gs
xor
mov
pop
jmp
ljmp
mov
jns
mov
xor
jle
hlt
xchg
popf
orl
lcall
sbb
pop
insb
jecxz
daa
push
dec
pop
shlb
push
sti
inc
add
sub
fs
shll
add
addb
iret
outsb
mov
sub
movsl
pop
in
sbb
or
fistps
mov
push
sbb
adc
mov
sub
loope
jmp
pop
push
out
mov
adc
inc
push
push
pop
xchg
imul
xchg
stos
inc
push
jne
cmp
jmp
mov
ret
cmpsl
dec
mov
and
pop
jo
push
or
xlat
imul
es
bnd
in
sub
stos
cltd
xchg
sbb
hlt
xchg
test
mov
mov
and
ss
push
add
xlat
negl
call
add
in
lods
and
adc
push
movsb
push
cli
insl
and
leave
rclb
mov
dec
mov
mov
ja
sub
iret
add
ret
jae
addb
cs
push
pusha
cmp
sbb
popa
push
and
lahf
xor
jmp
loop
loope
arpl
inc
and
sbb
dec
pop
cld
dec
mov
mov
das
mov
mov
push
loopne
dec
test
test
adc
pop
sub
push
scas
aad
add
sbb
jo
sub
pop
leave
aaa
adc
into
arpl
inc
pop
cli
jbe
add
inc
movsb
lret
xor
movb
test
cmpsl
nop
xchg
test
or
ds
push
sbb
popa
push
add
cs
sub
fisubl
mov
and
cmp
xchg
mov
or
testb
xchg
jge
orb
mov
cwtl
rcll
jo
mov
aas
xchg
sub
mov
outsl
jnp
jb,pn
sub
call
push
mov
xchg
cmp
or
adc
mov
gs
cmp
mov
das
push
lret
sub
push
mov
jge
int3
push
ret
sarl
les
pop
sbb
xchg
outsb
ret
sbb
aaa
mov
lods
add
xor
xchg
sarl
scas
mov
sbbb
sub
mov
jns
lea
mov
out
jnp
inc
sbb
mov
add
out
mov
jp
xchg
cs
mov
jge
add
icebp
pop
inc
xor
mov
int3
imul
xor
movsb
xchg
cmpsl
nop
je
xchg
pushf
sbb
or
fs
cmpsl
ret
stos
add
mov
jo
aam
add
xorb
out
mov
fcompl
mov
lret
and
divl
pushf
mov
test
dec
push
dec
sarl
pushf
les
and
movsb
insw
mov
pop
sub
negb
inc
es
push
pop
lahf
or
push
rcrl
nop
in
pop
rorl
or
test
ss
insb
cltd
shll
jo
sbbb
mov
inc
call
subb
iret
inc
dec
xchg
ja
sbb
or
decl
stc
sbb
push
loope
inc
loopne
mov
xchg
mov
shrl
or
jno
addr16
xor
sbb
adc
xlat
or
adc
and
sbb
sub
push
sahf
pop
in
bound
testb
sbb
cmp
push
mov
gs
jg
popa
je
sub
je
adc
sub
adc
sti
js
and
scas
bound
and
and
inc
daa
mov
fdivrs
ffreep
adc
out
push
push
orb
sbb
sbb
loopne
das
push
or
push
cld
cli
dec
aaa
dec
ret
cmp
dec
xorl
add
xchg
push
jl
mov
pop
pop
sbb
pop
xchg
pop
adc
xchg
pop
xor
adcb
int
rcr
in
jg
jo
dec
xchg
xor
int3
shll
daa
jle
jnp
in
imul
dec
rcll
enter
cmpsb
and
imul
pop
push
mov
loopne
and
movsb
xchg
loopne
jne
data16
sub
and
arpl
xor
fwait
inc
int3
cmc
stos
add
sbb
pop
arpl
inc
mov
sub
jp
daa
cs
push
in
jecxz
and
mov
cmp
push
inc
sti
popf
sbb
dec
push
jp
pop
pop
shrl
loope
xchg
aas
test
and
clc
add
fsubr
stos
test
lea
imul
mov
enter
cli
loop
and
out
push
fstpt
fsub
or
iret
push
in
out
ret
pop
jp
jnp
mov
mov
jnp
imul
sbb
sbb
imulb
mov
stos
or
xor
into
outsb
fisubs
outsb
mov
push
or
stos
fwait
mov
mov
fbstp
scas
movsb
pop
cs
lahf
into
arpl
jle
out
dec
mull
bound
lods
mov
jecxz
sbb
imul
stos
test
or
out
rorl
hlt
repz
lahf
cmp
int3
cwtl
dec
sbb
pop
icebp
pop
mov
ja
push
fidivl
and
adc
push
sub
loopne
dec
dec
rcr
mov
fmul
push
fldt
in
jge
pusha
aaa
arpl
inc
mov
rclb
pop
cmc
outsb
imul
in
sbb
data16
or
or
and
fstpt
lds
push
out
or
inc
mov
dec
in
push
sub
fsubr
sbb
adc
gs
inc
ret
inc
cmp
test
xor
std
pop
fidivs
sbb
mov
in
inc
mov
mov
sbb
mov
jnp
lds
cmp
jb
xchg
aas
add
mov
filds
loopne
test
inc
outsl
sbb
jecxz
shlb
daa
xchg
lea
pop
mov
mov
roll
and
add
rcrl
test
dec
and
lods
mov
gs
fwait
add
negl
jge
dec
sbb
xchg
sub
sbb
xchg
mov
ret
inc
push
adc
pusha
outsl
jmp
xor
rclb
sti
push
lcall
cmpsb
cmc
into
mov
cmp
pop
xchg
mov
push
inc
jmp
sub
ljmp
aas
in
xor
dec
insl
int
adc
outsb
icebp
mov
mov
add
aam
adc
popf
jb
lds
cmpl
lahf
lds
pop
xchg
push
push
push
out
fidivrs
xor
popf
push
and
fsub
insl
fdivs
jge
enter
out
mov
xchg
cltd
mov
xor
pop
loop
dec
pop
shrl
mov
or
rolb
test
push
lret
mov
mov
hlt
dec
adc
out
jle
jge
cld
cwtl
arpl
std
sar
movsb
sub
aad
sbb
xor
enter
lret
dec
push
daa
ret
jnp
pop
stos
jl
adc
fdiv
aaa
les
or
xchg
push
sahf
stc
ljmp
movsl
sub
rolb
adc
or
iret
aam
lods
add
stos
out
pop
push
pop
inc
in
mulb
fldenv
pop
mov
inc
imul
ficoml
outsb
cmp
orl
xchg
ljmp
imul
and
mov
fldcw
and
stos
push
dec
mov
lret
mov
xchg
aam
adc
and
mov
mov
mov
aad
or
mov
outsl
pop
fsubrl
rol
jns
add
aaa
cli
jmp
inc
cmp
dec
test
into
xorb
outsl
dec
add
cltd
daa
pop
jp
int3
sub
mov
insl
push
inc
ds
into
push
push
stc
lods
push
inc
push
imul
dec
cmp
mov
pop
test
mov
scas
insl
pop
mov
adc
mov
pop
mov
ds
pop
fs
cwtl
insl
jne
inc
push
lret
orb
int3
sbb
repz
cmpsl
fistl
lcall
js
xchg
shl
outsb
je
fldenv
insl
adc
adc
popa
stc
push
mov
fisttpll
repz
jl
cmp
imul
xor
cli
mov
sbb
aas
xchg
fisttpll
bound
aaa
js
sub
and
in
mov
aam
xchg
dec
lods
ret
inc
xor
into
and
jg
sbbb
in
jl
jae
shl
add
addr16
sbb
and
mov
ja
jmp
or
loope
add
cmp
lret
mov
cmp
pop
dec
out
and
aas
mov
jmp
xlat
mov
mov
call
lahf
sbb
adc
sti
ficoml
ljmp
lret
push
inc
mov
shlb
stc
fisttpll
lahf
xchg
cs
xor
cmp
lret
mov
adc
pop
lods
jle
jmp
shrb
test
scas
dec
flds
push
incl
cmp
pop
pop
inc
mov
cmp
jp
pop
cld
mov
ljmp
mov
sbb
int
sbb
scas
xor
xor
push
pop
fbstp
cltd
clc
ljmp
aaa
cld
xor
xor
filds
mov
in
sbb
das
sub
faddp
es
mov
jne
loopne
bound
and
fsubrp
jno
mov
sub
hlt
idivl
push
into
ljmp
pop
js
das
popa
xchg
xchg
mov
fildll
lcall
inc
loopne
push
push
lret
int3
ret
xchg
aas
sub
fidivs
cmpsb
test
dec
mov
hlt
fldt
pop
inc
mov
mov
mov
and
aas
pop
cmp
xchg
push
dec
mov
push
mov
fs
xlat
in
add
xchg
xchg
adc
cs
or
xor
dec
jb
adc
adc
rcll
pop
fsubrl
cmp
inc
loope
push
fimull
mov
or
je
and
fidivl
call
mov
jp
rcrl
jmp
sti
push
or
mov
adc
and
and
imul
movsb
fnstcw
jge
add
loopne
fiadds
and
ljmp
test
test
mov
fstl
rcl
jne
sub
mov
cmp
pop
repnz
or
mov
push
pop
popa
add
cli
negb
cmc
or
sbb
pop
or
mov
cmp
and
sbb
and
in
data16
jb
jnp
es
adc
shrb
push
mov
cmp
out
lods
inc
imul
adc
or
stc
lcall
inc
dec
and
pop
cltd
sub
fsubrs
cwtl
popa
out
arpl
out
dec
pop
in
idivl
xor
xchg
nop
das
and
inc
adc
pop
cwtl
imul
int3
sbb
mov
xchg
add
adc
arpl
jle
jns
mov
fwait
inc
jnp
inc
sbb
add
addb
ja
ljmp
xchg
push
out
fsub
mov
jmp
stc
xor
push
xor
jnp,pt
add
adc
cmc
stc
ss
fdivl
dec
dec
xor
sbb
dec
jmp
aaa
mov
lods
jb
shlb
pop
pop
cld
fs
adc
daa
xor
push
lcall
icebp
call
sub
xchg
push
fnstsw
out
mov
stc
adc
rorl
out
cltd
insl
jge
test
mov
add
fbstp
dec
lods
and
aaa
push
inc
int3
cmp
push
cli
cmpsl
jg
and
iret
loope
mov
repz
jg
xor
cmp
test
lret
ret
push
test
mov
call
aas
gs
pop
sbb
and
mov
fwait
or
ds
lock
pop
lret
lea
mov
push
movsb
dec
sub
push
xchg
das
loope
pop
mov
and
out
insl
sahf
test
leave
inc
cltd
insb
stos
inc
inc
sbb
cmp
lds
adc
fsubr
lea
nop
and
dec
aas
xor
cmp
insl
lret
push
pop
xchg
xchg
and
or
das
jmp
mov
jle
or
xchg
and
hlt
pop
lret
push
movsb
mov
jne
jp
add
call
mov
xchg
idivb
movsb
mov
sbb
push
mov
jmp
inc
lret
adc
insl
jo
rol
jb
or
adc
cli
inc
int
xchg
std
sub
add
lcall
outsl
outsl
scas
sbb
mov
clc
in
dec
out
adc
dec
xchg
cmpl
bnd
out
xchg
jl
sbb
pushf
xchg
pop
enter
push
out
cmp
jle
sub
popa
xor
mov
imul
mov
cld
pop
cld
inc
sub
xchg
jmp
out
aaa
es
insl
sub
stos
sub
scas
pop
lock
idivl
mov
sub
mov
fcmovu
inc
sub
jecxz
and
inc
inc
cld
mov
pop
inc
cmpsl
out
push
stos
mov
out
cwtl
std
xchg
jae
fildll
fadds
mov
dec
mov
lods
cltd
mov
jae
jle
mov
js
sub
sar
pop
and
xor
loop
arpl
jne
pop
mov
out
adc
push
movsl
mov
loope
pop
out
loop
ret
rcrb
jmp
aam
and
or
mov
dec
in
jae
in
loope
scas
sub
insb
sbb
mov
add
jns
mov
or
and
add
loop
fisubrl
es
and
dec
inc
jbe
scas
pop
cli
mov
jo
sub
xlat
mov
jle
sbb
push
leave
imul
ds
xchg
push
gs
add
dec
mov
fidivrl
or
je
inc
mov
xchg
out
stc
dec
int3
aas
mov
test
cwtl
fisubl
xchg
fchs
cmp
loopne
test
clc
iret
cli
jno
mov
test
cmp
xchg
fistl
jp
inc
repnz
jge
js
cwtl
lret
inc
sub
outsl
sub
xor
jns
sbb
pop
push
jbe
dec
xor
jns
loop
add
mov
sub
inc
add
in
repnz
std
add
mov
iret
testb
lahf
jo
imul
cli
sub
hlt
es
xchg
mov
imul
mov
in
mov
rcrl
int
outsl
in
and
jns
jb
clc
or
aas
fs
dec
testb
test
cmp
xchg
scas
jno
mov
icebp
xor
lods
out
jne
je
test
into
cmp
fbstp
xlat
ds
adc
add
int3
int
movsl
es
outsb
ret
pop
xchg
outsb
jnp
ret
inc
pop
fmuls
pusha
addr16
dec
mov
dec
cmpsl
aaa
shl
negb
jle
mov
nop
inc
loopne
in
pushf
cmp
push
cld
pop
xorb
nop
bound
repz
repz
rcr
stos
xlat
jmp
pop
enter
xor
xchg
cmc
pop
mov
or
mov
iret
fsubl
shr
inc
adc
fisttps
pop
push
inc
dec
inc
add
cmp
mov
pop
cwtl
rcr
iret
mov
add
pop
adc
loope
fldl
mov
shlb
fcomps
mov
cli
cli
shlb
fildl
xor
fwait
lods
cmpsl
sbb
or
data16
mov
stos
out
jo
iret
mov
movaps
stos
enter
cmpsb
call
push
scas
and
mov
jp
fisttpl
dec
or
pop
out
pop
mov
outsl
fcmovu
hlt
sbb
loop
notb
into
sbb
fnstenv
dec
popa
inc
shl
sub
mov
sbb
in
jge
test
idivl
iret
aaa
push
mov
mov
dec
fstps
in
inc
xchg
add
sahf
jle
cmpsb
das
xchg
mov
test
jmp
rorb
fcoms
inc
push
push
fbld
jnp
push
sub
inc
jb
popa
mov
cld
xorl
js
xchg
pop
add
push
stos
mov
fwait
mov
gs
push
pusha
jge
dec
adcb
adc
lcall
lods
push
fadd
cwtl
stos
js
int
cli
in
inc
xor
xor
mov
or
iret
ret
inc
add
cli
outsl
aaa
add
test
pop
dec
lea
jge
daa
sub
jle
lods
sub
sub
or
call
or
inc
ds
fsubs
adc
out
push
insb
push
pusha
loopne
push
mov
aam
out
adc
pop
subb
ds
out
or
loopne
mov
and
subb
push
cmpsl
push
cltd
roll
cltd
ret
test
adc
jge
xchg
test
inc
fsubl
test
jbe
push
nop
push
sub
push
ljmp
dec
gs
and
add
inc
fcmove
mov
add
jecxz
movsb
shlb
or
adc
pop
imul
push
outsl
xor
pop
fisttpll
sub
movsl
ret
divps
cltd
scas
mov
test
stos
xchg
adc
enter
adc
aaa
push
mov
lret
jno
rcrl
fbld
or
rcrb
cmc
pop
adc
mov
dec
es
std
pop
mov
and
js
ret
subl
ljmp
aas
daa
dec
lret
js
jle
addr16
inc
mov
adc
sbb
and
in
cwtl
arpl
adc
movsb
sub
cmp
daa
xor
gs
int
loopne
loope
ljmp
out
mov
addr16
mov
enter
mov
cld
push
fadd
push
add
insb
xchg
xbegin
inc
aam
fsts
jae
cs
push
add
jge
adc
pop
in
push
scas
fs
cld
stc
push
xchg
mov
pop
fmuls
stos
stos
pop
jo
popa
in
mov
lcall
cltd
and
add
inc
cmp
mov
pop
scas
push
mov
test
dec
imul
sbb
in
out
xor
jle
jecxz
inc
sub
icebp
je
push
xchg
out
test
jl
shlb
jle
dec
xchg
xchg
xor
sbb
add
inc
xorb
pop
dec
or
push
sub
pop
add
cmp
arpl
mov
push
inc
dec
sub
int
movsl
inc
shll
dec
jne
add
cltd
std
pop
fdivp
xor
imul
jg
push
and
out
and
jp
mov
shlb
rol
mov
sub
mov
imul
ljmp
mov
std
sti
cmc
jl
inc
adc
outsb
adc
mov
cmc
faddp
call
dec
movsb
es
adc
mov
imul
addr16
stos
test
mulb
jp
pop
sub
fbstp
mov
xor
repnz
movl
repnz
or
or
dec
dec
jnp
adc
pusha
mov
inc
dec
inc
pop
xchg
inc
scas
testb
mov
push
pusha
rcrb
imul
adc
fwait
decb
insb
notl
scas
sbbl
jb
adc
cld
jle
outsb
popl
loope
mov
add
rorl
out
stc
das
adc
aam
add
outsl
inc
sbb
out
push
cmp
jmp
dec
mov
lcall
cmp
cmc
les
cwtl
mov
sbb
aas
jmp
mov
xchg
lock
rol
imul
mov
fdivp
out
inc
cli
js
aas
add
iret
in
enter
mov
sub
add
xor
mov
jg
popa
pop
pushf
sub
rcrl
and
int
popa
inc
xor
mov
add
popa
jns
mulb
mov
mov
jno
xchg
pop
sbb
pop
push
xchg
inc
out
hlt
dec
nop
mov
inc
call
jl
lds
rorl
subb
cmp
fxch
out
cmp
loopne
adc
ljmp
pushf
xor
in
movsl
adc
icebp
jp
cs
jmp
adc
xor
mov
and
sub
push
sub
or
addr16
ficompl
cmpl
aas
cmp
mov
or
adcl
dec
out
icebp
add
fadds
bnd
lock
mov
push
pushf
xor
lret
jle
pusha
or
lods
cltd
pop
xchg
lds
inc
lea
and
out
inc
insl
xchg
pop
inc
jle
es
adcl
insb
xchg
push
push
fs
jp
inc
stos
dec
cmp
mov
adc
dec
sbb
test
push
adc
xchg
js
dec
adcb
push
call
add
jbe
xor
fistps
adc
push
out
dec
movsl
add
test
cltd
gs
imul
push
cs
adc
or
xchg
sbbl
sbb
lods
lret
sub
call
stos
push
das
fs
lahf
push
es
xchg
push
inc
jns
loope
xor
fldz
jb
leave
mov
arpl
push
fsubl
adc
dec
push
cmpsb
bound
imul
dec
sub
cltd
xchg
mov
adc
mov
stos
sbb
in
xchg
int
pop
subl
nop
xlat
int3
mov
rcl
mov
fcomp
scas
jg
addr16
push
andl
mov
fdivl
inc
pop
push
adc
ja
nop
pusha
ret
push
cmp
dec
outsl
lea
out
lahf
aam
adc
stc
lahf
notb
mov
pop
mov
lahf
inc
sti
notl
jle
push
inc
mov
adc
rcll
or
fsubrs
jmp
in
fadds
ja
lea
jnp
lahf
and
pop
dec
lcall
and
adc
imul
js
test
lods
cmp
push
and
inc
xchg
pop
sti
es
mov
gs
inc
movsl
sub
in
out
es
sub
dec
pop
inc
lret
int
cmc
sti
jl
fstpt
insl
dec
cli
fistl
out
sub
cld
and
out
jl
inc
ss
ds
and
mov
push
mov
push
int3
mov
rol
fistl
stc
loop
push
insl
rcl
push
movl
imul
dec
push
add
mov
dec
rcl
jae
ja
inc
imul
mov
call
sub
dec
insl
pusha
in
cld
ljmp
dec
leave
data16
cs
dec
sub
shr
jae
outsb
or
add
pop
sub
jns
xor
push
pop
adc
mov
push
push
mov
inc
jp
mov
lods
or
sahf
or
repz
shrl
sub
fdivrs
jnp
loopne
sbbb
mov
adc
push
mov
xor
sub
rclb
xor
jle
ret
push
cld
add
out
mov
sub
or
or
xor
dec
xor
or
cltd
xor
mov
out
xchg
xor
loop
arpl
dec
or
insl
mov
xor
sub
aam
mov
xor
push
aam
mov
mov
hlt
fstp
test
sbb
cmp
inc
xor
pop
mov
call
test
imul
cld
fwait
enter
add
xlat
jne
xor
stos
icebp
mov
mov
dec
push
mov
mov
sub
add
cmp
loop
pop
mov
ret
mov
fldenv
test
adc
cmp
lcall
xor
les
push
push
addr16
mov
dec
cmp
cmpsb
out
repz
xor
or
jae
pop
pop
ljmp
rcll
lea
adc
mov
test
xchg
push
scas
hlt
inc
xor
leave
ljmp
je
stos
and
mov
movsb
dec
outsl
int3
push
imul
inc
loope
testl
pop
xor
sub
movsl
cs
xor
mov
ret
jecxz
not
fimuls
push
pop
sub
popa
test
or
push
into
mov
sbb
aas
push
xor
mov
cmpsl
fucompp
add
jp
popa
cmp
add
gs
ds
dec
lret
ffreep
mov
push
rclb
pop
loope
adc
cmp
jge
lods
lret
pushf
pop
add
fnstcw
or
cmp
bound
out
push
cmp
cmp
and
add
sbb
loop
push
adc
xor
xlat
lcall
mov
pop
hlt
cmp
adc
mov
pop
enter
jecxz
fucom
add
cmp
loopne
xchg
ljmp
push
xchg
push
cltd
in
xor
mov
inc
xlat
pop
or
fistps
rcr
insl
mov
loop
push
lods
jbe,pt
popf
lahf
mov
aaa
popf
ss
loope
cli
sbb
sbb
sub
inc
xchg
add
popf
aam
aad
sub
mov
sbb
scas
faddp
mov
imul
decl
pop
xchg
push
jmp
push
xchg
jns
outsl
pop
jne
xchg
je
add
jns
jnp
das
enter
shl
icebp
mov
test
test
iret
roll
jb
pop
stc
das
push
xlat
jbe
jae
lcall
imul
jle
mov
pop
sbb
or
aaa
jnp
sbb
xchg
ss
pop
inc
pop
xchg
sarb
push
pop
push
jge
enter
outsb
fcoml
mov
xchg
ret
cmp
test
pushf
js
ja
sub
adc
getsec
icebp
jnp
inc
cltd
mov
jg
fdivp
iret
xchg
pushl
mov
mov
inc
pop
pop
push
cs
fdivl
and
sub
out
out
popf
in
arpl
mov
into
icebp
xchg
repz
cmpsl
sub
lods
gs
fstpl
es
pop
mov
dec
daa
pop
dec
mov
and
inc
adc
fwait
negl
data16
dec
add
mov
xor
insl
pop
pop
sarl
cmp
aas
daa
sarl
test
insl
addl
mov
sbb
mov
mov
fstpl
lret
aaa
xor
mov
jmp
into
dec
mov
xor
and
stos
je
jp
xor
fadd
xchg
sub
xchg
pop
jmp
or
inc
jb
inc
js
jo
aaa
movsl
mov
sbb
push
mov
xchg
lret
jbe
sbb
sub
xlat
scas
xchg
adc
or
push
push
fmul
inc
mov
cmp
push
mov
subb
push
mov
inc
mov
loop
xchg
mov
lret
and
in
ss
pop
cmpl
adc
in
mov
xor
or
les
mov
pop
pop
xchg
cmp
clc
sub
adcl
mov
xchg
scas
jne
xchg
xlat
cmpsb
push
jmp
sbbl
jae
sarl
fucom
cwtl
movl
push
and
xchg
and
mov
scas
ror
scas
scas
pop
inc
out
mov
rol
pop
imul
nop
mov
enter
fldl
mov
sahf
iret
pop
mov
jg
push
push
push
loop
mov
lock
xlat
pusha
mov
adc
xor
loope
inc
cmpsb
std
jnp
icebp
inc
fnstcw
es
out
fcmovu
pop
push
sti
outsl
xor
mov
adc
outsl
adc
out
pop
es
xor
out
adc
ss
sub
cmp
inc
jno
mov
repz
jl
dec
inc
xor
xchg
sti
push
cmp
sub
gs
push
je
stos
popa
xchg
cltd
dec
mov
push
pop
cwtl
in
cmp
xchg
inc
leave
in
in
aaa
pop
jne
stc
cs
stos
insb
cli
scas
pop
jno
clc
call
dec
mov
inc
iret
sbb
in
jne
push
xrelease
mov
push
in
sbb
clc
out
mov
cs
fsubp
push
mov
mov
mov
imul
sub
jo
sbbb
enter
mov
popf
jae
pop
mov
in
sarb
mov
adc
push
adc
lock
imul
sub
les
mov
cmp
les
sbb
pop
in
ret
add
fucomp
mov
xchg
in
jp,pn
bound
test
xor
xor
pop
icebp
adc
test
iret
mov
push
pop
mov
rcrb
enter
push
jmp
je,pt
jge
jmp
daa
add
sub
add
imul
pushf
arpl
hlt
paddq
and
inc
xor
xchg
or
mov
or
and
pop
pop
xor
aad
cmp
fcoml
adc
and
mov
sahf
into
add
mov
mov
xchg
add
movsl
sarl
sbb
mov
mov
push
xchg
dec
pop
aas
sub
test
rclb
inc
movsb
dec
pop
iret
ja
xchg
mov
mov
cmp
leave
and
pop
or
imul
ja
mov
nop
xchg
inc
iret
ret
add
cld
and
mov
sti
mov
lds
cmp
or
mov
int
and
loope
hlt
xor
xorb
fnstenv
nop
and
mov
mov
xorb
cmp
sub
fmull
xchg
push
jno
or
movsb
or
jb
cmp
fisubrs
push
inc
inc
cli
test
jmp
xor
pop
pop
inc
js
mov
and
loopne
cs
out
lock
ds
xchg
pusha
sub
xchg
aam
sbb
lret
cmpsl
pop
es
xlat
xchg
jnp
mov
sub
movsl
sub
test
mov
inc
mov
fldenv
out
ffree
adc
sbb
inc
jns
xchg
pushf
dec
scas
addr16
loop
push
cmc
xor
mov
mov
jl
sub
mov
sub
sti
xor
pop
or
push
xchg
jg
jecxz
dec
ret
ret
imul
push
jne
mov
mov
scas
ret
lahf
add
pusha
or
xchg
sbb
pop
mov
aad
inc
and
mov
dec
xchg
cmp
gs
and
inc
push
les
and
adc
pop
xchg
ret
jmp
scas
jns
addb
xor
iret
fsubrs
inc
popf
push
out
cmpsb
push
in
add
cmp
cmpsl
push
lods
or
cmc
in
loop
inc
cld
add
inc
into
fmulp
adc
pop
in
cld
movsb
je
dec
movsb
fisttps
inc
lods
mov
pop
xor
mov
hlt
jg
jbe
push
dec
outsb
or
xchg
xor
rorl
mov
dec
and
cmc
jbe
lea
or
fisttps
cmp
aaa
dec
jp
mov
mov
inc
sbb
cmp
cmp
or
sbb
dec
cmc
inc
mov
xchg
ret
rcrl
rolb
jno
or
adc
jmp
adc
sub
ss
inc
inc
add
and
sub
mov
into
jp
push
js
int
cmp
mov
inc
xchg
aas
jmp
int3
jmp
push
movsl
sub
subb
mov
lahf
notl
adc
sub
push
adc
scas
pop
add
das
dec
adc
shlb
or
mov
push
or
push
xchg
sub
jns
push
out
loope
mov
push
cmp
es
in
or
sbb
dec
fcoms
in
jns
xor
clc
pop
xchg
iret
sbb
and
sub
pushf
cmp
insb
bnd
cmp
gs
pop
xlat
lahf
scas
stos
push
es
jnp
dec
push
shll
rcll
add
ljmp
sub
mov
mov
add
and
mov
sbb
shrd
push
negb
je
aad
sub
pop
jo
shll
pop
cs
les
inc
jb,pt
or
cmpsb
xlat
pop
sbb
sti
lahf
sub
in
cmp
dec
jl
xchg
mov
adc
ljmp
mov
dec
fdiv
sub
dec
loop
cmpsb
call
mul
sub
and
adc
mov
aad
pop
leave
mov
jnp
sub
inc
stos
and
bnd
jmp
mov
sub
out
mov
pop
sbb
test
mov
push
jg
and
iret
bound
sub
push
xorb
sar
pop
or
pusha
adc
outsl
sub
cmpsl
lds
lea
fsub
scas
xchg
pushf
mov
popa
fsubrp
aaa
push
fidivrl
lcall
clc
int
push
or
xchg
mov
push
mov
mov
jle
xchg
psubusw
jbe
mov
je
outsb
js
addr16
sub
in
inc
dec
xchg
or
adc
pop
fisubrs
lods
push
jmp
add
mov
popf
lahf
push
shr
mov
ja
jg
dec
out
ss
xchg
rcrb
aad
movsl
mov
mov
mov
mov
repz
pop
sti
cmp
push
jp
stos
and
jo
call
or
fisttpll
lods
idiv
inc
sub
cmp
jge
jmp
das
mov
mov
cwtl
mov
push
jmp
nop
cmp
cwtl
sti
pop
stos
dec
leave
insl
lret
mov
or
cltd
loopne
in
repz
push
or
in
xchg
xor
es
cs
pop
in
stc
jl
sbb
jecxz
incl
cli
lea
arpl
popa
psubq
push
and
push
and
nop
cmp
loop
bound
lock
fstpl
inc
xlat
jnp
mov
inc
je
popf
lret
adc
nop
lret
jl
sub
or
outsl
add
and
repnz
push
das
imul
dec
dec
out
inc
je
in
mov
pop
dec
ror
scas
shlb
stos
fnstcw
sbb
call
pushf
in
mov
jns
add
cld
mov
stos
sbb
icebp
adc
or
insb
loop
mov
lods
adc
popf
stos
add
lea
sub
mov
mov
push
in
xor
cmp
fs
dec
das
fldenv
cmp
push
cmpsl
ja
mov
jae
jno
mov
xor
and
imul
xchg
push
add
rol
and
inc
aad
pop
dec
les
adc
loopne
ljmp
sahf
or
mov
xor
or
data16
lds
sbb
ret
shrb
xchg
into
ja
out
inc
cld
aad
rcrb
xchg
subps
xor
adcb
dec
inc
adc
mov
lcall
pop
orb
jnp
xor
mov
mov
insl
mov
cmpsb
loop
jne
mov
das
xchg
dec
mov
stos
aas
xchg
sti
nop
in
mov
into
mov
or
jl
jns
icebp
adc
in
jne
mov
xor
mov
ljmp
mov
jb
inc
aam
js
and
ljmp
aaa
call
mov
cmp
clc
lods
jg
jnp
and
sbb
xchg
fildll
xor
ret
push
sti
cld
sub
sarb
loope
in
mov
out
lret
pop
jo
inc
xor
dec
in
sbb
rorb
push
jle
in
fcomps
pop
dec
dec
mov
cmp
stos
stc
dec
xchg
decb
jo
mov
xchg
jbe
push
pop
jmp
movsl
outsl
push
cmp
jo
in
out
push
inc
mov
fstpl
xchg
enter
xchg
in
fs
pop
scas
loop
rolb
clc
icebp
inc
mov
cmpsl
shr
adc
mov
aaa
test
mov
push
clc
sbb
dec
push
cmp
and
sbb
les
icebp
out
jmp
jb
jecxz
lds
push
aam
mov
fidivrl
cwtl
sahf
mov
mov
xor
mov
cmp
not
imul
fisttpll
ficoml
rclb
pop
jmp
xchg
add
xlat
xchg
stos
sbb
aaa
push
push
icebp
movl
das
adc
scas
outsb
das
xlat
inc
sub
repnz
jmp
lds
cwtl
mov
inc
or
ljmp
in
loop
repnz
adc
xchg
int3
sub
pop
sub
dec
inc
mov
cmp
mov
out
fadds
or
out
mov
enter
and
test
adc
pop
lods
insb
mov
jmp
mov
rorb
cwtl
jg
out
lret
inc
mov
cmc
pop
insb
stos
sub
mov
cmp
stos
rcll
scas
xor
sahf
sub
or
adc
lahf
hlt
mov
xchg
testl
mov
repz
cmc
addr16
pop
jmp
or
es
mov
sbb
cmp
push
or
loopne
movsl
movb
aad
ja
movsb
jp
paddusb
inc
pop
or
adc
pop
or
stos
pop
inc
xor
jbe
mov
mov
lcall
insl
fmuls
repz
adc
xchg
mov
pop
push
push
dec
cmp
mov
pop
cmpsb
xor
dec
and
xchg
test
pushf
ss
add
sarl
sub
jae
shrb
push
pop
adc
add
loope
std
jo
insb
je
xchg
lret
pop
mov
aad
push
and
fxch
ja
xor
cmpb
and
cwtl
lret
dec
pop
in
jb
xchg
lcall
mov
jb
jo
inc
mov
mov
nop
mov
pushf
mov
fidivrs
addr16
or
int
mov
mov
fiaddl
cmp
sub
cmp
movsb
rorb
pop
pushf
or
cmpb
add
sbb
xchg
sbb
movsl
test
xchg
xor
adc
add
les
mov
mov
sbb
mov
cltd
mov
cmp
pop
or
dec
daa
or
into
loop
or
xchg
adc
stc
adc
aaa
pop
mov
add
cmc
scas
outsb
sub
xchg
or
mov
pop
add
data16
jecxz
gs
xor
mov
stos
sti
mov
mov
cmp
into
das
pop
ljmp
dec
sub
sbbb
cmp
imul
ljmp
dec
movsl
inc
mov
ljmp
push
iret
adc
xor
ljmp
popa
es
sbb
or
insl
xchg
sarl
or
xchg
push
cmp
out
fdivl
loopnew
sub
xchg
cmp
cli
dec
lods
pop
xchg
cmp
or
je,pn
ja
int
xchg
lcall
loopne
popa
shrb
or
and
stos
insb
or
shlb
in
cmp
pushf
aas
enter
jo
outsl
in
ja
mov
pop
dec
into
stos
flds
roll
sbb
shl
add
adc
insb
inc
xchg
cmp
lock
js
loope
test
clc
inc
and
mov
cmc
aas
arpl
lret
add
mov
push
mov
enter
and
sub
add
pop
or
jne
cmp
jle
jo
mov
cmp
mov
push
cmc
sbb
xor
jo
or
and
pusha
imul
int
add
mov
xchg
fwait
shrb
xchg
jp
mov
cltd
decl
sub
lret
pop
jl
jno
sub
ss
mov
test
mov
mov
mov
repz
test
xor
or
stc
shl
arpl
push
xchg
dec
stc
in
into
add
xor
rorl
data16
jmp
insl
adc
sub
jns
xchg
mov
loope
inc
xchg
dec
insl
addl
sub
dec
popf
or
imul
sar
fnstcw
adc
in
cmp
dec
push
dec
rcrb
adc
lahf
ja
pop
jae
out
mov
sbb
lcall
mov
dec
cmc
arpl
or
loope
mov
push
test
adc
sub
bound
cmc
div
add
adc
lret
testb
dec
mov
lcall
testb
js
lods
in
movsl
outsb
gs
sbb
or
pop
sub
adc
addr16
fwait
data16
lahf
inc
setle
xor
xchg
sbb
mov
adc
pop
and
stos
and
repnz
sub
call
cmpsl
mov
outsb
and
insb
add
mov
cmp
jbe
aaa
cmpsl
int3
xor
es
subb
add
mov
adc
ds
fwait
mov
mov
xor
and
push
imul
mov
mov
dec
fsubs
notl
add
addr16
mov
ficoms
cmpsb
int3
fnsave
pop
add
lret
mov
push
mov
sbb
call
orb
jb
pop
movsb
iret
leave
mov
and
jp
sub
inc
pop
jmp
rcr
aaa
addr16
insl
jno
xor
push
outsb
cmp
dec
mov
in
xor
xlat
cmp
mov
jns
cld
out
test
xor
mov
iret
and
je
jnp
shlb
sub
lcall
adc
ret
sub
icebp
mov
sbb
pop
cmp
push
mov
inc
mov
inc
lock
jp
jl
inc
pusha
inc
and
push
ret
jb
mov
sub
mov
sub
push
pop
push
xorl
jle,pn
stos
add
add
clc
rcr
or
mov
test
cmp
pop
ljmp
pop
fwait
inc
int3
cltd
xor
fbld
mov
jecxz
clc
xor
adc
incl
movsb
les
push
mov
dec
jno
arpl
push
mov
cmc
jbe
pop
xchg
ss
dec
mov
xor
loope
setge
push
popf
out
sbb
shlb
push
add
std
push
ffreep
add
sbb
adc
mov
add
call
movsb
lcall
add
xor
les
cmc
inc
cwtl
mov
stc
test
out
mov
push
subb
pushf
xchg
pop
inc
cmp
sbb
and
leave
push
loop
adc
cmp
push
lods
sbb
xchg
or
inc
add
je
pop
pop
int3
loop
ret
testb
mov
test
push
jle
pop
push
cmc
sti
out
popa
rcrb
pop
ja
mov
into
divl
fwait
xchg
xacquire
imul
lock
insl
dec
push
sbb
jno
cli
or
shrl
mov
out
daa
clc
movb
inc
fcmove
dec
mov
and
lds
pop
sub
cmc
fnsave
adc
push
inc
fdivrs
mov
sub
pop
or
lock
mov
ret
add
push
js
inc
loopne
mov
mov
and
pop
or
jp
incb
cmpsb
daa
or
cmp
loopne
int
mov
lcall
cmc
fisubs
pop
addr16
pop
pop
push
lret
jae
xchg
orl
cmp
cli
int3
jl
mov
gs
das
sub
ljmp
loope
adcb
and
ret
pushf
shlb
dec
shll
mov
jp
or
cmp
pop
inc
aas
cli
addr16
dec
inc
pop
pop
loop
xlat
push
mov
xor
cmp
push
into
add
pop
add
push
les
into
outsb
fdivs
sbb
sbb
enter
sbb
jns
inc
mov
icebp
cmp
jo
stos
jg
mov
xchg
mov
fwait
test
cmpb
cld
dec
mov
into
dec
out
sahf
lock
pop
push
test
jle
mov
push
inc
xchg
add
int3
pop
or
xchg
xchg
daa
clc
pop
hlt
subl
dec
aas
dec
int
or
xchg
sbb
popf
outsb
ret
push
cwtl
out
inc
scas
lret
adc
dec
mov
mov
xlat
sbb
cmp
or
arpl
inc
pop
mov
xchg
dec
fsubl
xchg
sbb
xor
cmpsl
dec
stos
add
xchg
add
out
loop
fisubrl
flds
jmp
and
aad
jo
dec
js
cmp
sub
cli
adc
pop
add
scas
jp
pop
into
mov
movsb
nop
jae
mov
xlat
mov
dec
out
sub
pop
push
cmpsb
xlat
ret
mov
xchg
jmp
outsl
test
lret
adc
push
adc
sarb
sub
ret
call
mov
xor
sbb
lds
and
mov
pop
jae
add
sbb
or
mov
push
cmpsl
adc
test
dec
jno
push
mov
mov
pxor
rcll
xchg
or
add
cwtl
into
mov
test
andl
add
out
jbe
clc
call
es
inc
enter
jp
mov
js
rep
sub
push
int3
pop
mov
jbe
jmp
pushf
push
enter
imul
adc
out
mov
outsb
out
mov
or
lcall
mov
and
cmp
push
movsl
dec
mov
je
repnz
inc
or
lret
ds
das
mov
addb
popf
adc
adc
sbb
imul
and
sub
and
popf
lcall
rcr
iret
sbb
mov
jecxz
sbb
iret
int
pop
popf
and
shrl
fisttps
xchg
inc
push
cmp
js
cmc
mov
js
decb
fs
cmp
rol
inc
sbb
xchg
fs
aas
rcrl
cmp
add
cmp
jnp
popf
xchg
test
and
test
sub
adc
mov
das
iret
leave
test
cmpsl
pop
push
popf
mov
cs
inc
mov
sbb
and
les
cmp
lahf
push
pop
xchg
add
or
testb
fs
in
insl
mov
and
fsubrs
pushf
jno
out
dec
fs
pop
sub
mov
out
imul
jg
nop
sub
clc
or
loop
mov
push
les
or
flds
sub
xor
xchg
rolb
cmp
pop
jmp
push
es
loope
push
inc
and
enter
fsubl
pop
aad
inc
dec
cmpsl
fisubl
pusha
aad
mov
loope
addb
inc
jecxz
adc
mov
cmp
gs
mov
xchg
jp
push
cld
js
in
fbld
imul
mov
mov
js
push
imul
jns
or
sahf
mov
aam
and
cmc
and
and
or
pop
and
pop
jp
scas
cmp
sub
pop
daa
popa
bound
and
mov
and
mov
dec
repnz
fiadds
adc
lods
ds
mov
xor
adc
dec
fucomi
sbb
mov
mov
bound
adc
inc
loopne
sub
rcrb
mov
call
das
jmp
jge
div
pop
fisttpll
push
add
test
jge
enter
lods
pop
pop
add
jnp
lds
mov
mov
cs
rcll
inc
pop
cli
push
pop
adc
mov
adc
inc
faddl
dec
pop
pop
mov
jbe
cmpb
mov
sub
xchg
xchg
xorl
inc
repz
addr16
push
fcoms
in
xchg
xchg
push
add
fidivrl
cmp
fisttps
xchg
mov
dec
rep
push
xchg
shr
cmp
xchg
shrb
js
and
lock
xlat
inc
mov
lret
aas
insl
push
mov
gs
cmp
out
and
movsb
mov
lret
cld
popa
fidivrl
pop
pushf
in
std
stc
push
and
mov
cmc
outsl
mov
or
in
popa
and
popf
or
inc
loopne
adc
je
sahf
rclb
out
jnp
sbb
ror
dec
je
out
sub
xlat
pop
xorl
sti
rorl
pop
stos
or
sarb
add
xchg
mov
xchg
pop
cmp
repnz
imul
cmp
mulb
push
jbe
scas
fwait
mov
mov
and
dec
dec
test
loope
subb
dec
les
dec
dec
divl
fldcw
jno
jns
les
xor
add
mov
push
mov
and
mov
inc
test
into
jp
bound
push
and
lock
jae
lods
mov
xchg
cmp
jge
jns
mov
es
mov
stos
movsb
pop
pop
notb
mov
add
jbe
leave
sahf
pop
or
out
mov
jne
fnsave
loopne
imull
dec
add
xchg
pusha
inc
push
in
sub
adc
sarl
shl
sbb
incl
movsl
xchg
jnp
jg
mov
ja
sub
test
mov
jns
xor
push
xor
es
push
jae
jl
jnp
inc
test
or
cmp
adc
push
mov
lahf
add
fiaddl
cwtl
adc
popa
repz
inc
mov
xchg
add
mov
cmpsb
sbb
in
add
dec
std
inc
cli
in
loopne
clc
repz
mov
aam
push
sbb
push
and
and
js
add
clc
cli
xlat
pop
add
call
push
nop
in
shll
ljmp
jne
jbe
push
sub
pop
std
ds
scas
jo
sub
mov
scas
imul
or
push
cmpps
loop
movsb
xchg
jo
iret
fwait
mov
test
lcall
mov
xchg
mov
pop
pop
movsl
xchg
mov
mov
mov
pusha
mov
jae
mov
add
add
out
sti
and
and
ljmp
cmp
xor
ja
xor
jecxz
add
xchg
add
aad
adc
movb
push
lret
xchg
xchg
or
xchg
mov
push
testl
in
dec
and
adc
or
mov
adc
mov
mov
out
scas
test
mov
subl
adc
dec
jnp
pop
std
bound
out
or
cmc
mov
addr16
je
inc
data16
mov
arpl
or
mov
pop
loop
sub
hlt
push
fs
pop
sub
xor
fadds
roll
inc
test
cwtl
pop
std
ret
push
dec
push
mov
xor
and
and
sbb
dec
andl
iret
test
jge
fwait
dec
leave
les
stos
xor
insl
sbb
jnp
leave
out
scas
push
cmp
and
outsl
push
das
pop
lods
push
jp
repnz
clc
mov
popa
idivb
iret
jns
pusha
insl
jle
fsubs
fdivrs
push
lods
orl
cli
mov
je
mov
aad
xchg
shrb
dec
pop
xchg
sub
je
outsb
cmpl
int3
push
imul
xchg
xor
dec
fbstp
add
ja
and
stc
adc
mov
jp
out
and
call
popf
mov
aaa
leave
imul
xchg
push
and
scas
in
into
divl
fs
bound
fs
jl
shlb
xchg
mov
push
adc
mov
mov
repz
fisttps
sbb
stc
in
in
add
mov
sbb
psrlq
shlb
call
fstpt
and
test
adc
int3
inc
aam
mov
pusha
xor
stos
mov
addr16
bound
push
inc
push
and
clc
inc
test
stos
out
mov
pusha
mov
mov
aam
mov
xchg
out
xor
gs
inc
jg
inc
test
pop
mov
jl
test
sbb
adc
out
mov
arpl
test
enter
or
jmp
jo
int3
cmp
add
mov
aam
into
jmp
dec
pusha
mov
push
adc
pop
cmpsl
rcl
jno
icebp
into
cmp
sub
cli
daa
loope
daa
ja
xchg
ja
aad
xchg
fisubl
xchg
inc
mov
lret
xchg
push
sbb
rolw
subl
push
and
mov
push
add
mov
adcb
mov
loopne
or
sub
addr16
aam
stc
dec
or
push
dec
or
xchg
int
adc
mov
xchg
dec
mov
fiadds
pop
out
jl
test
pusha
inc
into
ror
pop
push
pop
orl
scas
jmp
stos
pop
adcl
xor
cmp
jl
shrd
into
in
xor
mov
iret
aaa
and
add
jl
orl
cli
xchg
or
lret
lret
adc
and
fcomps
sbb
xchg
jnp
dec
mov
pop
cmp
push
lock
fucom
pop
outsl
stc
xchg
jne
or
test
sub
sbb
or
sbb
cmp
shl
push
jae
lods
sbb
sahf
dec
mov
xorl
mov
ljmp
sub
adc
inc
negl
sahf
mov
jae
shl
rolb
dec
push
jns
xchg
sti
cmp
shlb
pop
pop
push
dec
inc
rolb
orb
pop
cmp
sbb
pop
insb
sbb
jbe
xor
in
fdivl
jecxz
pop
pop
test
aad
std
xor
xor
in
shll
push
xchg
cmp
adc
inc
xchg
jecxz
dec
je
lods
xchg
cmp
mov
mov
add
movsl
nop
cmp
or
icebp
cld
adc
xor
popf
cmp
ret
pop
div
push
ret
stos
cwtl
enter
cmc
out
imul
ss
mov
mov
mov
mov
pop
jmp
add
dec
pop
push
pusha
setae
loop
ret
fwait
xchg
inc
dec
jl
andb
lahf
dec
stc
loope
ret
mov
xchg
fdivrs
pop
fs
xchg
jne
nop
stos
imul
cmp
jne
push
test
mov
xchg
adcb
inc
sub
neg
flds
pop
repz
mov
enter
sub
sub
sub
add
test
nop
mov
jb
mov
xor
mov
sub
scas
rcrb
pop
es
fs
fldt
mov
push
pop
sbb
mov
cmp
inc
sub
ss
mov
push
rolb
pop
ret
add
lock
jb
ror
push
dec
fs
sub
sbb
rcll
pop
data16
and
xor
std
cwtl
enter
into
daa
jne
pusha
seto
cwtl
arpl
andl
pop
jmp
jmp
out
faddl
xor
mov
lods
xor
imul
test
movsl
sbb
es
cmp
jge
in
mov
sbb
addr16
lret
cmp
jecxz
daa
adc
cmp
sbb
pop
push
add
out
test
or
imul
xor
jmp
xchg
and
inc
mov
fs
or
inc
popl
xor
mov
fistps
sub
xor
rcrl
push
loop
cwtl
mov
cltd
sub
lods
jo
ror
sbb
ja
jns
scas
sahf
stc
cmp
cmpsl
loop
sub
out
adc
movsl
jnp
xchg
je
xchg
xlat
mov
sbb
testl
and
aaa
shrb
mov
rolb
mov
outsb
xchg
push
push
cwtl
add
insb
sub
push
jae
dec
pop
lahf
mov
pop
adc
fistpll
sbb
add
pop
mov
ljmp
jecxz
push
ljmp
aad
adc
jnp
mov
xor
lea
fistl
and
sbb
lods
or
mov
cmp
icebp
jg
roll
scas
add
in
insl
cmpsl
or
dec
nop
pop
shl
neg
inc
push
adc
push
loope
add
mov
mov
dec
and
mov
mov
leave
sub
cs
fldcw
cli
movsl
aam
xor
inc
outsl
daa
or
ds
dec
jg
jne
jecxz
es
mov
push
xchg
popa
or
unpckhps
cmp
mov
mov
and
pop
sub
div
fsub
imul
loopne
pop
mov
dec
inc
fidivrs
stos
pop
rcr
hlt
vhsubpd
pop
bnd
inc
inc
mov
ss
in
pop
lahf
mov
shl
pop
in
cltd
jae
mov
mov
rorl
cld
aam
inc
mov
xor
int
popa
sub
or
dec
cmp
mov
cmp
dec
scas
leave
clc
jge
mov
sahf
ret
sbb
in
cmp
lock
iret
sbb
jmp
std
add
or
xchg
push
cmp
nop
push
hlt
pushl
ja
cmp
xchg
mov
add
or
out
shl
xchg
pop
inc
mov
and
pop
insl
jecxz
addr16
test
or
or
popa
push
lods
push
in
sbb
dec
or
andl
push
cmp
test
pushf
ret
push
jmp
xchg
sbb
pop
shlb
pushf
mov
mov
cmp
stc
adc
mov
jno
push
repnz
leave
testb
cmp
add
dec
lds
pop
and
lods
dec
xchg
divl
in
cmp
fimuls
fs
add
ret
aaa
mov
data16
fsts
movsb
xor
sub
dec
lods
leave
mov
rcll
imul
pusha
stos
xchg
cs
jg
xor
and
cwtl
inc
or
inc
out
cwtl
sbb
mov
fld1
scas
mov
lret
xchg
jp
dec
data16
jg
xor
mov
mov
jbe
lods
rcl
lock
cmpsl
xor
adc
das
add
ss
xlat
shrb
cmpsb
lock
scas
xor
pop
loope
out
rorb
in
arpl
mov
stc
xor
rcrl
rolb
cmpb
cli
clc
add
scas
popf
add
cmp
dec
xchg
or
jmp
fldcw
mov
stos
cmp
fwait
ds
push
dec
fidivrs
or
out
and
aas
mov
imul
sub
xchg
movsb
je
je
incl
test
insb
pop
inc
or
push
add
jecxz
pop
cmc
fldenv
cld
in
bound
data16
cwtl
mov
or
cmpsb
inc
int3
stos
jmp
mov
or
pop
push
mov
cltd
pop
mov
inc
cmc
xchg
add
cli
rcrl
jmp
mov
repnz
sti
jp
push
pop
or
ret
cmp
add
sbb
add
test
iret
adc
pop
lahf
fdivr
adc
ret
mov
daa
mov
imul
dec
icebp
lods
add
shlb
push
pop
addr16
inc
std
ret
pop
cmp
xchg
data16
mov
xchg
and
push
int
cmpsb
call
mov
fisttpll
dec
sub
xor
jnp
push
and
or
mov
push
xor
int3
clc
xor
clc
mov
cmpsl
pop
cmp
in
cmp
out
mov
in
mov
dec
mov
jg
sbb
jmp
mov
fcompl
cltd
xchg
sbbl
sub
adc
xor
mov
fistps
imul
aaa
in
int
into
xor
icebp
int3
push
and
je
lret
js
mov
lock
or
mov
les
pop
jo
ret
mov
pusha
cmp
fadd
xchg
mov
aad
pop
insb
test
sahf
xchg
repnz
sbb
dec
jo
inc
mov
and
dec
pusha
dec
lret
xchg
or
sbb
in
pop
add
fimull
pop
fs
adc
movsb
iret
xor
int
push
xchg
push
sbb
jno
clc
sbb
push
xchg
int
fs
out
js
push
aas
add
scas
xchg
mov
test
jb
loope
test
jge
push
push
mov
and
adc
notl
rclb
testl
dec
inc
jge
rcll
sbb
insb
jb
popf
cmp
xchg
fcom
hlt
jo
enter
xchg
jne
cltd
fs
pop
lods
mov
dec
cld
jae
sub
cmp
std
inc
sbb
orl
push
mov
sbb
int3
xchg
push
lahf
and
sbb
mov
inc
in
sbb
bound
test
dec
into
rclb
inc
push
es
jne
repz
mov
push
dec
mov
outsb
jecxz
add
leave
add
scas
adc
es
xchg
test
aas
mov
mov
lret
nop
rcrl
push
jg
sti
fdivrs
pop
mov
add
cmpsb
sub
test
push
mov
test
push
sbb
add
lods
add
xchg
mov
jl
sub
fstpl
addb
adc
pushl
cmp
pop
in
xor
out
lods
pushl
sub
cmpl
outsl
pop
loop
fcmovne
testl
ljmp
mov
gs
shrl
mov
icebp
retw
mov
pop
pusha
cs
cld
push
jbe
pop
sbb
jnp
xchg
pop
dec
cli
sub
loop
cmpsb
lds
scas
mov
rolb
sub
shl
pop
pop
ss
cmp
adcw
sub
mov
jns
fcompl
test
push
mov
out
leave
popa
sub
or
hlt
test
mov
jno
add
dec
arpl
lds
mov
int3
jle
inc
icebp
ljmp
inc
jp
or
test
xor
mov
xor
push
add
fisubl
dec
jbe
out
in
push
subb
fs
cmpsl
mov
negl
sub
sub
sub
jp
or
sub
ds
xchg
jno
call
sbb
sti
lret
lods
insl
mov
sahf
dec
sbb
mov
and
out
jbe
sub
inc
int
add
and
add
repz
popa
out
dec
xchg
cwtl
inc
xor
arpl
jae
stc
jecxz
stos
popf
lret
dec
push
sbb
or
adc
loopne
test
ret
das
xchg
insb
in
es
popa
cs
out
lret
cltd
sahf
aam
test
inc
xor
lds
scas
test
dec
sub
ljmp
sbb
cmp
jo
in
dec
pop
push
inc
adc
loopne
addb
adc
mov
mov
adc
roll
cmp
sahf
mov
or
ljmp
pop
pop
mov
pop
movsl
pop
loop
insl
mov
les
sub
movsl
lds
pop
or
fildll
ret
popa
das
enter
xchg
addr16
add
pop
jecxz,pt
loope
pop
imul
test
pop
movl
mov
xor
mov
xor
cmp
cmp
xchg
dec
mov
es
mov
xchg
jle
ljmp
add
add
orb
and
lahf
inc
jmp
int
xchg
xchg
xchg
add
add
pop
xchg
mov
jb
lods
adc
stos
into
loope
cmp
int
adc
sbb
inc
mov
repnz
into
imull
loope
push
inc
popf
add
dec
xchg
inc
fistpll
fs
pushf
mul
enter
repnz
in
and
and
fidivl
fld
andb
mov
fdivrs
mov
xchg
mov
xchg
imul
lret
sub
cmpsb
mov
mov
or
sbbl
arpl
loope
rclb
fs
icebp
pop
mov
sbb
xor
lock
xlat
inc
ret
mov
adc
cmp
jge
inc
jb
fisttps
in
push
sbb
push
std
pop
ss
and
sub
inc
or
je
test
iret
jge
push
icebp
loopne
cltd
lret
cmp
ja
icebp
imul
lods
or
in
adc
adc
daa
addl
add
es
xchg
adc
mov
mov
xor
mov
int
cmp
xchg
push
mov
ds
sbb
loop
popf
imul
test
enter
jne
cmp
push
jae
lds
dec
imul
nop
fwait
repnz
cmpsb
inc
gs
push
lock
je
dec
pop
mov
sbb
pop
cmp
jle
and
pop
mov
lahf
cmp
push
xor
xchg
fnstcw
and
jnp
in
outsl
add
test
dec
adc
pop
xor
pop
inc
or
ja
fmuls
aam
jno
stos
sbb
fcoml
mov
lret
and
cmpsb
sbb
xchg
xlat
fisttpl
xlat
out
repnz
jg
dec
in
sbb
add
mov
adc
movsb
movsb
add
imul
dec
popf
mov
jno
add
xchg
jle
cmp
jb
xchg
adc
dec
sub
mov
les
mov
cld
mov
jge
fmull
stc
ficoml
dec
cmc
ret
in
cld
js
pushf
scas
mov
mov
add
iret
out
jae
stc
icebp
sub
adc
mov
mov
xor
lar
shl
stos
xor
iret
jmp
adc
sbb
inc
pop
into
aam
lods
adc
lds
int
push
sbbb
mov
sub
arpl
sbb
cmp
test
push
std
sub
lds
movsl
or
mov
fwait
mov
pop
mov
sbb
inc
lods
fcomps
inc
daa
mov
not
pop
movsb
mov
div
xchg
ffree
sysenter
clc
sbb
shlb
xor
push
pop
stos
sbb
sarl
dec
mov
jbe
inc
mov
neg
int3
mov
out
mov
push
sub
mov
mov
cld
mov
push
loop
mov
andb
das
dec
sbb
das
cltd
cmpsl
mov
stos
icebp
pop
fwait
cmpb
dec
in
movsl
ja
aaa
scas
fcoml
push
divl
dec
jecxz
sub
les
or
popa
xor
jo
test
fcompl
xlat
stc
mov
test
out
inc
in
repz
mov
adc
cmp
enter
ds
fisubrs
sbb
or
out
pushf
xchg
outsb
mov
pop
not
push
dec
mov
stos
dec
xchg
xchg
mov
push
push
in
and
mov
negl
ljmp
sub
pop
out
inc
fbld
insl
jecxz
xor
inc
dec
ja
out
stos
shr
dec
mov
test
mov
test
add
sbb
jns
cmc
pop
jge
mov
lods
xor
les
jl
test
dec
shll
in
cmp
mov
xchg
push
add
inc
in
push
cmp
pop
test
pop
test
in
mov
cmpsb
ljmp
ret
mov
pop
loope
adc
jge
push
or
repz
pop
mov
dec
mov
mov
inc
inc
jne
cmp
inc
test
xlat
xchg
ffree
mov
aam
add
cmp
push
test
cmpsl
mov
je
jp
mov
xchg
fs
mov
loop
lahf
dec
jb
mov
call
cltd
ret
pusha
out
xor
push
mov
hlt
in
scas
sbb
imul
xchg
jl
push
push
mov
aad
and
pop
xchg
inc
insb
adc
mov
mov
nop
mov
shl
aam
adc
xor
push
lods
adc
mov
ss
loope
dec
call
push
push
jnp
cmpsl
pusha
push
and
rcrb
call
fisttpll
inc
popf
sbb
pop
xor
sarl
pop
gs
mov
jne
icebp
test
stos
rcl
push
pop
mov
mov
gs
xchg
push
dec
jle
repnz
cmp
dec
jmp
incb
pop
sub
je
jb
add
arpl
cmp
das
push
enter
xlat
inc
lret
push
fs
ret
sub
xor
lods
sarb
cmp
inc
pop
xchg
in
and
pop
pop
cmp
mov
cmpb
sub
scas
mov
fists
lret
sbb
cli
int
jmp
stc
lret
sbb
out
or
dec
jl
cmpsb
adc
sarl
aam
mov
outsb
inc
cmp
ficoml
outsl
add
out
fwait
pop
les
xchg
mov
inc
sar
xor
fcmovnbe
inc
popf
lret
hlt
dec
cmp
cli
jae
cmc
pusha
jmp
lea
and
pop
add
jno
sub
jns
shll
cld
aam
sub
jo
jns
jae
mov
lret
pop
out
jb
rcrl
pop
sub
dec
in
xor
push
pop
adc
out
and
repnz
repnz
dec
jo
sub
or
sbb
ret
fwait
idivl
fnstenv
int
push
push
outsb
fstpl
lods
sbb
pop
ss
fdivr
test
sub
ret
movsl
enter
push
adc
jae
mov
outsl
or
add
jbe
jmp
pop
fsubr
push
sbb
lods
push
stos
pop
stos
push
inc
arpl
push
outsb
lods
dec
das
jb
mov
jo
lcall
dec
sti
outsb
sahf
inc
sahf
jae
ja
or
pop
iret
pop
jmp
ja
sarl
pop
pop
dec
inc
add
mov
adc
std
xchg
ja
mov
cmpsl
movsb
push
mov
out
nop
fidivl
adc
fwait
js
sbb
xchg
ret
jb
push
inc
push
rcl
xchg
cmp
push
xor
andb
xor
negb
and
fstpl
push
push
ja
cld
add
mov
mov
adc
pop
dec
push
shl
cmp
add
fnstenv
push
fptan
shlb
jae
std
cmp
sti
repz
xor
call
test
push
shl
sar
jbe
and
aaa
shl
mov
mov
jg
add
rclb
fdivrs
mov
movsb
arpl
cmc
sub
leave
sti
int3
data16
cmp
roll
mov
out
add
mov
ffree
mov
push
cmc
and
mov
dec
xchg
pop
mov
xlat
shrl
mov
iret
arpl
out
in
cli
iret
lret
add
jle
dec
popf
jg
stos
dec
fsub
rcrl
movsl
daa
sub
mov
mov
inc
push
mov
cmp
shlb
arpl
xorl
jge
jae
fcomps
push
sub
rclb
or
outsl
add
je
pop
mov
push
btr
mov
out
lock
jbe
xor
lock
adc
insb
inc
sub
andb
push
outsl
bnd
cltd
das
xor
adc
cmpsl
test
jecxz
push
mov
cld
jne
or
out
add
clc
and
jmp
shl
dec
hlt
add
cmp
fwait
pop
gs
shl
test
jle
lods
sti
sbb
loopne
cmp
aas
mov
int3
sbb
mov
xchg
xchg
std
inc
cmp
outsb
mov
addr16
pop
popf
test
inc
rorl
dec
leave
mov
shlb
cmc
out
or
fwait
and
push
or
mov
sbb
sbb
sub
int
xor
lods
xchg
sbb
mov
repz
les
in
divb
jl
pop
xor
mov
inc
xchg
cmp
jo
fs
mov
es
test
enter
mov
sub
dec
jb
add
flds
sbb
ror
aad
xchg
push
js
pop
or
add
leave
xor
iret
adc
sbb
or
push
jge
mov
ss
and
sbb
jecxz
dec
mov
enter
xor
xor
mov
push
jno
pop
aam
mov
cmp
push
jnp
imul
lock
loope
xchg
mov
push
outsl
push
enter
iret
mov
mov
mov
in
jns
sub
int3
or
int3
adc
leave
add
push
sar
ret
cld
mov
fcompl
mov
mov
jp
loop
sbb
cmc
scas
inc
or
mov
pop
cld
ret
mov
jmp
popfw
lret
push
fimull
dec
inc
adc
subb
push
or
insl
cmpsl
dec
pop
inc
push
push
pushf
xchg
mov
sbb
fs
push
out
and
mov
and
les
xchg
nop
jl
push
icebp
xor
cmp
lea
aam
int3
hlt
mov
mov
or
xlat
adc
out
push
test
mov
in
popa
fwait
dec
daa
and
rclb
sub
outsl
int
jbe
mov
aas
or
pop
loope
xchg
pushf
mov
enter
push
xor
xchg
mov
sbb
mov
fidivs
sub
int3
cmp
decl
inc
sub
jne
jb
clc
xlat
movb
mov
lds
mov
rcrb
adc
xlat
jmp
jp
loopne
icebp
xorl
mov
aas
lea
cltd
bound
pop
adc
orb
xlat
pop
cwtl
popf
xchg
rcr
popa
xchg
jle
mov
pop
jge
cmpsl
mov
ljmp
mov
arpl
xchg
or
je
pushf
sub
int3
ja
and
insl
scas
inc
dec
inc
pop
xor
rorl
stc
fsubrs
cli
fstp
push
lods
inc
ja
jb
mov
scas
push
std
push
inc
xchg
out
dec
enter
int3
mov
push
das
call
int
nop
je
or
pop
or
sarb
cmp
lock
in
sahf
cmp
pop
out
out
cmp
xor
adc
aam
jae
and
outsb
cmp
pop
lret
test
push
negl
bound
fldt
pusha
adc
push
ret
rcl
or
dec
xor
js
stos
mov
push
jp
je
lret
daa
xor
aam
ds
xchg
jns
mov
fidivrl
bound
xchg
mov
push
sahf
or
xadd
adc
negb
add
fldenv
and
sub
push
cs
mov
mov
jno
and
mov
pop
fsts
bound
imul
cltd
inc
movsl
ret
jbe
mov
fst
mov
xor
test
das
mov
pop
jbe
movl
mov
jnp
aas
sub
into
adc
lret
jb
mov
xor
cmpsb
test
push
bndldx
jmp
in
lea
xlat
add
out
push
pop
cmpb
fsts
cmpsl
sbb
movsb
mov
fs
stc
inc
gs
and
pop
and
push
sub
cltd
rclb
sbb
mov
es
mov
cs
lahf
fwait
daa
lods
cmp
test
cld
call
push
movl
xor
cmp
jnp
adcb
mov
rorb
setns
mov
idiv
push
mov
test
mov
lahf
aad
push
scas
repnz
fimull
sbb
dec
test
idiv
outsb
sbb
add
inc
pop
sahf
adc
repnz
pusha
pushf
fisttps
lea
into
jmp
fistps
mov
imull
jbe
movsb
dec
cmpsb
mov
pushf
out
or
test
leave
adc
popa
js
mov
js
or
mov
data16
sbb
mov
mov
and
fcmovu
cs
add
sbb
loop
xchg
dec
enter
enter
sbb
imul
cli
dec
cmp
cmpsb
pop
bswap
aas
mov
ret
aaa
stos
sub
push
inc
addr16
and
jnp
hlt
std
xchg
push
pop
mov
push
ret
ret
xchg
outsb
ficomps
sti
cmc
pushf
jno
jbe
inc
cvtdq2ps
add
xchg
and
ds
shll
or
inc
push
sti
cmp
dec
repz
inc
aaa
fidivl
push
leave
xchg
fists
shr
or
andl
xlat
dec
lret
push
sti
adc
nop
add
add
sbb
rcrb
add
int3
stc
mov
int
push
ds
inc
aaa
xchg
xchg
std
lcall
mov
out
pop
fs
fidivl
mov
or
mov
daa
subb
push
repnz
xchg
push
pop
sbb
hlt
mov
fs
lods
jmp
das
shl
ficompl
pop
mov
je
mov
sbbl
mov
dec
inc
jge
add
lret
xchg
cmp
push
fsubrs
jmp
ds
adc
je
sbb
xor
out
sbb
test
push
cli
cmp
sub
jns
mov
cmp
mov
push
movsl
rolw
je
fists
mov
aam
add
xchg
jbe
enter
inc
cltd
repz
int
inc
je
les
pop
stos
shrb
jl
cmc
sub
nop
xchg
and
add
scas
imul
mov
sub
xchg
xor
call
scas
push
inc
adc
adc
nop
xlat
rclb
mov
pop
out
push
mov
jl
cmp
sbb
mov
mov
dec
inc
mov
icebp
and
ret
push
sbb
cmp
stos
das
das
jo
fnsave
idivb
outsl
fnsetpm(287
loopne
inc
xor
sbbb
movsl
scas
mov
fs
rcrl
cwtl
leave
xchg
jbe
std
bound
test
mov
mov
cmp
cmpb
add
lcall
cmp
es
jp
movsb
adc
mov
xchg
fisubs
push
orb
addr16
loope
xchg
pop
cmp
dec
inc
cmp
nop
or
add
lret
push
add
out
xor
mov
xchg
scas
ficoms
ret
mov
pop
shrl
xchg
clc
xlat
push
inc
or
cmpsl
rcrb
push
js
jo
mov
mov
das
jle
add
arpl
cmp
and
testl
sti
adc
cmpl
inc
inc
into
adc
orl
pop
ss
and
es
xor
aaa
out
movsb
jae
adc
xchg
into
mov
cs
lods
push
xchg
sti
mov
dec
iret
in
sahf
xor
xor
push
imul
insb
inc
movsl
andb
pop
jmp
mov
fnstenv
mov
fs
ficoml
mov
flds
xchg
lahf
and
and
data16
cmpsl
in
sbb
sbb
sub
dec
inc
xchg
push
filds
and
loopne
scas
dec
jo
mov
sbb
sti
xor
fst
insb
scas
or
ret
xor
dec
es
inc
inc
fisubl
ss
divl
add
mov
xchg
fnsave
xchg
fistl
dec
push
sti
sbb
adc
mov
xchg
cwtl
jns
mov
cld
arpl
inc
mov
push
dec
sub
mov
lcall
sub
movsb
dec
pop
lcall
lea
push
stos
jo
lods
cmp
outsb
sub
push
add
add
push
cmc
xchg
or
rcll
sbb
jb
test
divl
scas
cmp
in
push
stos
push
insb
hlt
out
mov
lock
rolb
dec
insl
imul
sub
or
out
jb
rcrl
aam
xchg
arpl
aaa
rorl
outsb
adc
inc
pop
sahf
dec
enter
xchg
pop
stos
inc
adc
fs
pop
rcll
aaa
bound
int
cmp
mov
add
and
and
sti
insb
mov
in
xorb
mov
stc
dec
xor
popa
add
or
cmp
icebp
loope
push
out
insb
addl
movsl
addr16
xchg
lods
and
lods
sub
aad
or
movsl
cmp
insl
adc
iret
xor
cmp
adc
pop
xor
imul
mov
cmp
xchg
pop
es
dec
pusha
cli
push
lods
aam
push
aas
adc
in
scas
mov
jno
in
es
out
push
fstpl
push
or
imul
pushf
test
ss
out
les
mov
pop
push
mov
es
sbb
jno
jecxz
ja
decb
sbb
cli
xor
xchg
xor
fldt
and
addl
dec
sbb
iret
mov
into
mov
fstps
mov
mov
xor
fsubl
cmp
lods
frstor
test
pop
movsb
shll
cld
sub
fs
test
in
xor
xchg
mov
mov
pushf
int3
and
push
sbb
pop
inc
jbe
inc
sahf
mov
daa
sub
xchg
imul
add
js
out
push
add
cmp
cmp
jecxz
jae
add
aaa
enter
push
icebp
jo
jo
call
adcl
dec
cmpsl
adc
lret
xor
jmp
popa
ss
lcall
add
push
sti
xchg
bound
jae
cmpsl
mov
fisttpl
xor
inc
repz
push
adc
xor
dec
jae
pop
call
icebp
int
fidivs
pop
sub
xlat
fldenv
js
addb
xor
lods
hlt
push
iret
loopne
add
xchg
rcrb
bound
pop
mov
es
lods
dec
scas
pop
scas
xchg
cwtl
imul
mov
lcall
cmp
cmp
js
pop
jo
jb
mov
jge
xchg
addr16
cwtl
dec
push
jae
shrb
dec
or
aaa
lds
add
sbb
fbstp
in
sub
loopne
sbb
or
das
sarb
mov
jge
sub
pop
xchg
mov
push
ret
xchg
mov
inc
mov
aad
add
push
xchg
popa
adc
xchg
cmp
loopne
sarb
imul
pop
sub
jmp
sti
inc
mov
and
inc
push
pop
push
stos
aas
stos
shl
popf
data16
mov
dec
cmpsl
ss
ret
inc
push
mov
cvttps2pi
sub
cmpl
mov
xchg
out
rorb
pop
sub
adc
sbb
sbb
cld
in
adc
or
in
incb
loope
icebp
xor
cli
js
xor
fwait
decb
xchg
mov
hlt
mov
mov
mov
mov
and
pop
sbb
outsb
popa
xchg
rolb
repnz
or
push
les
adcl
jle
pop
cmpsl
cmp
je
in
rorb
mov
and
repnz
adc
das
jae
push
cmc
in
popf
jge
inc
ret
movsl
sbb
popl
xor
mov
pop
fisubrs
sbb
xchg
adc
mov
dec
dec
pusha
push
in
pcmpeqb
hlt
push
cltd
inc
xchg
xor
mov
in
rcrb
orb
mov
jne
xlat
lahf
xor
pop
out
xlat
rcr
es
xor
loopne
cmpsb
ljmp
jmp
aaa
out
pop
outsl
or
add
push
lret
mov
rcl
jl
fidivrs
lods
pop
imul
xor
pop
jns
fsub
aam
jge
cmp
mov
pop
out
sub
sub
popf
test
flds
jne
jno
mov
les
pop
sub
fdivl
insl
les
cwtl
mov
jno
xchg
stos
test
sahf
test
dec
test
dec
call
dec
xor
out
scas
jns
sbb
mov
adc
fwait
cmpsl
rcll
fcoml
xor
add
mov
enter
fs
sbb
outsb
adc
push
div
je
xchg
jae
fbstp
notl
pop
cltd
xor
das
mov
dec
pop
xchg
push
cmp
scas
pop
add
push
and
int
or
inc
xchg
sbb
mov
out
dec
ds
or
cld
dec
push
sub
ds
mov
data16
imul
mov
scas
jb
pop
lret
test
mov
sar
stos
push
add
mov
lret
outsl
sub
sahf
dec
insl
adc
aaa
daa
adc
sbb
xor
fs
rcrl
or
cmpsl
mov
insb
sbb
fadds
das
bnd
loopne
mov
into
xor
jae
and
jg
in
inc
shlb
imul
jge
jge
jmp
lods
cli
inc
cmp
xor
cltd
jg
loop
stos
jmp
inc
call
add
jo
lcall
lods
mov
shrl
jmp
add
sbb
push
pop
repz
push
mov
mov
adc
sbb
movsl
popf
pop
add
in
sti
hlt
es
ljmp
aas
or
push
mov
push
mov
pop
mov
loope
jmp
sub
or
mov
inc
and
jb
mov
inc
hlt
xor
movsb
leave
xorl
cmp
in
xor
xchg
cmp
lods
loope
loope
movsl
push
pushl
jl
sbb
pop
bound
bound
push
xor
cmp
and
xor
imul
test
and
xor
jmp
and
mov
xor
cmp
fstl
or
hlt
das
add
jl
out
psadbw
jle
pop
aaa
mov
cltd
push
out
icebp
pop
xchg
rol
mov
cmp
std
mov
dec
xchg
nop
scas
imul
fcmovb
or
inc
jae
in
int3
out
test
xchg
enter
daa
xor
js
push
and
addb
pop
in
rolb
or
mov
mov
hlt
sub
repnz
fildll
std
adc
push
out
sub
xor
mov
sbb
imul
shl
int
pop
aad
adc
adc
lcall
push
bnd
outsb
xchg
fs
xor
loop
scas
adc
cmc
hlt
jno
sub
adc
dec
mov
inc
mov
or
jl
or
inc
mov
jb
add
aaa
fwait
dec
scas
rcl
mov
ds
lret
or
js
jnp
cmpsl
clc
mov
lret
mov
in
adc
xor
sub
and
loope
insl
int
out
jge
inc
lds
lret
dec
pushf
push
dec
insb
loopne
divl
rclb
and
nop
cmp
in
jl
scas
negb
popa
into
cmpxchg
xorl
scas
sub
xor
mov
adc
lret
or
out
cwtl
lds
and
lods
cmpsl
jae
fidivrs
mov
sbb
ficomps
enter
dec
add
fldcw
test
add
fistpll
insl
mov
jae
pop
out
jno
mov
xor
daa
jno
out
inc
mov
and
in
pop
mov
pop
cmp
dec
fs
cmc
pop
daa
aad
insb
adcb
std
pop
inc
in
out
dec
jns
xor
mov
subb
mov
pop
lcall
sub
and
push
pop
sbb
lock
jb
push
mov
fwait
aad
push
fildl
pop
or
jl
je
mov
scas
hlt
pop
xor
jp
cltd
ss
xchg
outsb
mov
inc
and
imul
pop
dec
jmp
int
cmc
daa
aaa
and
xchg
sbb
ljmp
repnz
mov
je
adcl
mov
out
xchg
nop
mov
lea
lret
hlt
pop
ret
add
mov
aad
shrb
xchg
sarw
mov
mov
loope
ljmp
nop
mov
push
add
cmc
xor
cmc
xchg
or
add
stos
fs
push
xchg
std
jb
jg
inc
sub
jbe
std
leave
out
in
or
sti
stos
shlb
data16
xlat
jmp
mov
mov
cmp
mov
test
out
es
and
jp
insb
out
sub
sbb
xor
or
or
lds
stos
and
pop
push
xor
incl
inc
pop
imul
jle
in
cli
loopne
dec
jae
subb
lret
or
cld
adc
or
sbb
sub
imul
imul
cmp
loop
push
mov
add
xchg
jge
ficoms
fucom
rorl
cli
sbb
push
cmp
sbb
push
aad
and
std
mov
pop
or
outsl
push
sub
jbe
mov
jbe
pop
mov
and
stos
out
stos
dec
jmp
xorl
and
and
arpl
adc
in
lcall
lret
sbb
out
sub
stos
hlt
loop
cmpb
xchg
adc
addr16
mov
das
test
aaa
pop
cmpsl
dec
jmp
dec
push
imul
dec
mov
sahf
push
jns
mov
mov
sbb
inc
sbb
jne
add
dec
lock
xchg
test
xchg
iret
cmp
ror
xchg
test
adc
and
jmp
std
xchg
dec
dec
jmp
out
sbb
call
dec
addb
shl
stos
pop
icebp
out
lea
repnz
mov
adc
incb
test
and
repz
loopne
jg
push
lahf
and
add
add
fwait
cmpsb
fstpt
pop
outsb
bound
or
shll
and
shrl
or
add
shl
xchg
pop
inc
pop
inc
sub
ds
sti
in
ss
xchg
pop
out
push
pop
test
cltd
lahf
ljmp
std
outsl
repz
je
pop
jnp
mov
inc
mov
std
push
push
fldcw
pop
fdivl
lock
inc
repnz
out
lret
inc
mov
imul
gs
stos
jecxz
sub
push
push
call
dec
repz
repnz
popa
repnz
cmp
add
arpl
in
sahf
clc
pop
test
inc
sar
mov
mov
jl
mov
aas
es
and
fstpt
imul
sub
or
mov
fdivl
fstps
or
jle
add
push
cltd
cmpsl
adc
lahf
mov
int
loopne
mov
outsb
int
jno
arpl
dec
ljmp
stos
and
sbb
sbb
fucomi
dec
shrl
int
mov
or
mov
sub
andl
push
dec
iret
int3
cwtl
fstpl
test
ja
in
xchg
sbb
sub
add
repnz
mov
aam
repnz
pop
or
ret
sbb
mov
es
inc
into
sbb
mov
sub
clc
in
cmp
ss
cmp
sub
push
cmp
mov
in
je
or
inc
lods
in
sbb
sbb
push
push
or
into
xor
sbb
gs
mov
clc
xchg
scas
cmp
out
outsl
push
pop
outsl
lods
push
xor
setl
lcall
xchg
cmp
mov
sti
add
mov
push
push
out
pop
popf
adc
dec
add
push
or
adc
push
jmp
jnp
lcall
in
popf
adc
repz
in
mov
pop
sub
mov
insb
sub
jecxz
fisubs
addb
adc
push
pop
inc
xlat
jg
popf
lret
jp
outsl
mov
pop
pop
imul
sbb
cmp
gs
dec
and
sub
out
leave
mov
aam
xor
mov
add
mov
dec
imul
out
inc
pop
jae
xor
test
leave
out
das
scas
xchg
and
hlt
shrl
mov
fsubrl
sub
cmpb
int
data16
shlb
lahf
call
into
or
xor
bound
les
arpl
mov
adc
movsb
sub
mov
or
ss
loopne
mov
and
or
sub
test
mov
xor
hlt
jns
ljmp
push
xor
jbe
mov
imul
mov
mov
fsubl
mov
push
jne
cs
add
sub
and
dec
xor
push
push
aam
xor
das
sub
lret
popl
pop
mov
fs
inc
add
pop
aas
add
out
cmc
or
sub
mov
imul
test
cmc
loope
jae
lret
xchg
shlb
test
std
cmpsb
sub
mov
inc
scas
dec
jge
rol
les
jge
popf
or
jb
or
insb
lds
mov
push
cmc
insl
sarl
fwait
repnz
mov
jp
enter
lret
mov
jnp
mov
xchg
je
dec
loope
jge
std
mov
cmp
out
test
xchg
call
push
shrb
push
add
fcmovnu
fistps
cmp
in
cmp
mov
jo
leave
add
sarl
lea
sar
push
aam
dec
test
mov
inc
sub
in
enter
push
scas
xor
xor
sub
push
arpl
xor
data16
dec
mov
nop
push
cmp
loopne
push
fnstcw
shlb
sub
push
add
jmp
cmp
lock
scas
repnz
fdivl
ret
es
fcomp
inc
data16
cmp
push
repnz
call
and
sti
gs
mov
ret
jg
leave
adc
mov
jecxz
sub
lods
sbb
mov
mov
in
and
popa
out
sub
es
insb
out
cmp
sbb
sbb
mov
mov
dec
inc
into
pop
add
nop
jnp
pushf
dec
push
mov
hlt
movsl
jmp
sub
iret
cmp
pop
dec
mov
sbb
mov
mov
je
out
pop
sbb
mov
adc
pop
jno
addl
pop
lds
jecxz
push
out
lcall
xor
loope
out
cmp
push
jp
or
adc
stos
mov
ficomps
push
lods
test
lret
cltd
nop
mov
pop
mov
shlb
push
xor
mov
rcll
imul
lods
gs
mov
pop
imul
mov
jmp
adcl
ljmp
ljmp
scas
clc
mov
or
push
mov
ss
sbb
pop
mov
push
pop
lret
popa
in
lahf
fidivrl
bndldx
or
mov
imul
pop
xchg
jne
clc
xchg
adc
in
add
mov
xchg
fdivs
fwait
nop
shll
lahf
jne
testb
sti
jb
pop
jp
das
push
daa
es
cmp
mov
push
ljmp
sbb
xor
or
inc
cmc
xor
mov
xor
xor
xor
outsl
popa
rcll
mov
xchg
push
hlt
add
mov
fidivs
dec
or
adc
or
push
dec
pop
mov
adc
mov
fidivrl
roll
mov
sbb
loopne
mov
enter
das
push
push
push
sti
lea
test
icebp
sub
sub
rcrb
les
sbb
test
pop
sbb
cmpsb
sbb
mull
jecxz
shll
lahf
mov
arpl
mov
cmp
add
int3
inc
aaa
iret
mov
jge
icebp
mov
xchg
push
cs
xchg
add
insl
flds
mov
pop
pop
imul
lock
enter
inc
mov
or
call
fisubl
movsl
inc
cmp
pop
mov
jnp
add
and
movsl
insl
sbbl
lahf
and
imul
xchg
mov
jecxz
aam
sub
xchg
adc
inc
fstl
sub
fldl
mov
ds
cld
std
lods
and
ret
sub
dec
test
pop
adc
push
sbb
jns
ja
aaa
scas
sbb
or
movsb
insl
cmp
in
in
push
jp
sahf
xchg
mov
xchg
jns
cmp
das
inc
push
aam
push
cmp
loop
mov
xor
lahf
into
ja
push
xlat
dec
add
mov
test
sahf
test
in
sub
lock
and
ret
xchg
hlt
sbb
cmp
mov
in
sub
fisttps
cmpl
xchg
push
sbb
mov
cmp
dec
adc
loopne
lods
pop
or
mov
xchg
cmc
call
add
cmpsl
or
fxch
shl
stc
xor
xchg
pop
jo
pop
xor
push
pop
gs
dec
test
or
test
dec
add
les
xchg
mov
jae
mov
inc
js
adcb
out
shll
cmp
sub
add
sub
movsb
and
arpl
or
jmp
lock
in
les
dec
int
cmpsb
out
sub
rclb
enterw
imul
and
cmc
out
ja
push
push
in
mov
je
test
inc
popf
rcrb
popa
sub
xlat
inc
sahf
ror
or
jns
jno
inc
daa
stos
cmp
pop
mov
mov
mov
popa
sbb
shl
cli
icebp
inc
insl
stos
sub
mov
outsb
mov
push
pushl
jle
xchg
test
jo
cmc
cld
inc
pop
fnstcw
xor
sbb
mov
cmp
dec
jae
aas
test
arpl
lret
xchg
jp
lea
rclb
push
push
sub
mov
inc
mov
xchg
xchg
mov
jge
sbb
xor
push
mov
mov
insb
rclb
pop
int
call
call
cld
inc
mov
mov
shll
sbb
mov
pop
insl
shlb
jbe
scas
aad
cmpsb
mov
ret
jp
loop
daa
sti
dec
int3
xchg
fisubs
daa
and
adc
lods
sti
cmp
jmp
cmc
mov
cmpsb
push
mov
cmc
inc
pop
push
mov
push
aam
adc
push
jae
fsub
stc
dec
mov
and
mov
out
jg
shlb
and
add
pop
sbb
call
sbb
dec
lea
jno
mov
inc
bound
push
jmp
fwait
addr16
mov
add
arpl
xchg
cmpsb
or
mov
movsl
aam
jne
push
push
cmpsl
imul
jmp
mov
push
cmp
dec
xchg
cwtl
sub
sub
mov
push
add
jge
int3
jae
push
dec
ds
push
lahf
mov
into
xchg
xchg
xchg
pop
cmp
jge
loope
aaa
xchg
fdiv
jns
sbb
int
fnstenv
pop
daa
fptan
and
lods
je
popa
lret
pop
mov
jp
hlt
cwtl
inc
push
pop
aam
xlat
xchg
pop
test
aaa
inc
jbe
and
rorl
aas
aaa
ds
jle
sub
mov
inc
cmp
inc
pop
sbb
push
cmp
push
or
and
mov
jge
xchg
inc
sub
jle
jb
adc
dec
inc
mov
popf
xor
push
xchg
push
popf
mov
idivl
adc
cmpsb
xor
in
cmp
pusha
mov
and
xchg
nop
push
mov
add
xchg
sbbl
dec
repnz
or
add
or
insl
nop
mov
mov
lods
pushf
fsubrl
sti
fnsave
test
icebp
stos
in
out
dec
and
push
mull
loopne
sarb
push
xor
das
and
mov
lock
and
sub
adc
outsb
jae
xorb
mov
aad
std
jb
loop
push
jle
jo
in
mov
or
inc
adc
aaa
mov
adc
les
ret
lea
push
dec
xchg
xor
jg
lods
icebp
adc
xchg
jns
dec
aad
icebp
addl
imul
mov
popa
cmp
ss
aam
or
cmp
leave
xor
xchg
loop
mov
lea
cwtl
jne
movsb
lds
addr16
inc
inc
mov
jnp
popf
mov
adc
xor
cmpsb
push
fisubl
sub
shll
push
push
xchg
je
fnstenv
nop
lea
rorl
xor
pop
js
or
fldcw
jp
adc
cs
or
fistps
add
jecxz
mov
push
test
lret
dec
cmc
pop
sbb
and
sbb
mov
pop
or
cld
arpl
xchg
out
xchg
daa
mov
xlat
and
loop
dec
cmp
addr16
test
push
testl
ds
dec
jbe
sarl
mov
outsl
fisttps
scas
mov
jp
div
sbb
add
mov
ss
lea
fimull
ror
xchg
xor
leave
ficompl
dec
pop
fldt
cld
jmp
gs
out
push
repz
mov
filds
inc
aam
cmp
loop
shlb
dec
dec
dec
mov
ljmp
push
dec
loop
xchg
pop
into
das
les
push
adc
pusha
into
fwait
test
push
jne
jbe
sarb
lods
pop
fdivrl
xor
mov
and
repnz
push
inc
test
jp
clc
adc
das
adc
lods
ss
sbb
xchg
shl
sysret
sub
rcr
test
dec
inc
les
mov
mov
sub
je
ret
xchg
incl
cs
jnp
or
or
mov
jno
adc
mov
data16
sub
dec
pop
fsubrl
sbb
fadds
or
ja
cmpsl
mov
ja
and
cmp
xchg
push
push
mov
sahf
jno
lahf
mov
adc
les
xor
out
cltd
xor
xor
or
clc
mov
cwtl
les
pushl
mov
dec
adc
ret
jmp
and
imul
aas
icebp
sti
cmpsb
push
xchg
sub
add
scas
adc
xchg
rcrb
mov
pop
fisttpl
xchg
loope
xchg
push
sub
rorl
sbb
mov
sbb
push
aam
clc
xor
inc
mov
cmpsb
cmp
cmc
rolb
inc
out
mov
mov
clc
adc
mov
xchg
xor
aad
mov
dec
incl
lods
xchg
hlt
sbb
popa
jo
or
mov
lret
cwtl
inc
pop
nop
repnz
mov
jno
pop
mov
jle
cmpsb
scas
js
rorl
outsl
pop
mulps
test
xchg
jge
push
test
pop
mov
testb
aas
cmpsb
lods
lcall
sbb
mov
in
ret
stos
or
inc
sub
enter
pop
pop
push
cmp
nop
cli
push
call
les
dec
loope
cli
cmpsl
jbe
inc
xlat
xchg
jle
cltd
mov
out
add
testl
aad
pop
ret
andb
mov
mov
aas
in
inc
stos
push
mov
pop
aaa
mov
orl
ja
sbb
lock
popf
fsubs
jp
or
test
aas
loopne
ljmp
sub
gs
push
inc
cmpsb
sub
dec
mov
fidivs
add
mov
ret
sbb
sbb
aam
popf
sub
mov
rcrl
and
jmp
dec
andb
xor
mov
pop
jb
cs
xor
dec
add
and
inc
daa
mov
jbe
ljmp
lods
sbb
rorl
stc
cld
fs
xlat
push
xchg
test
push
push
cmp
lahf
push
lret
jae
jecxz
leave
pusha
pushf
mov
sbb
hlt
or
push
dec
mov
stc
pusha
test
xchg
adc
adc
push
mov
fimuls
mov
fucom
fisttpl
cmpsb
mul
test
cmpb
bound
jg
sub
xchg
push
inc
in
in
into
xchg
push
ja
jae
sub
aam
pop
push
xor
xchg
push
push
pop
outsb
int
cld
jb
daa
fidivrs
push
fidivrs
or
pop
sar
dec
rolb
pmulhuw
aam
out
movsb
mov
mov
push
push
sbb
test
sub
stos
out
jbe
or
add
jbe
ret
movsl
pusha
dec
loop
call
mov
ret
orl
push
aaa
or
notl
jbe
xchg
popa
and
imul
jns
clc
pop
inc
movsb
push
push
mov
dec
and
mov
mov
push
xor
lock
push
jno
dec
pop
dec
inc
scas
push
in
in
bound
gs
mov
jnp
out
iret
subl
add
icebp
mov
mov
js
push
inc
or
and
pop
daa
inc
cmc
sti
je
rolb
roll
test
push
xor
mov
add
add
sbb
gs
outsl
mov
lret
hlt
mov
sbb
push
push
daa
pop
jbe
or
jp
fnstenv
aas
jmp
fwait
lea
or
push
out
out
push
inc
lock
cmp
push
and
add
jno
sahf
movsl
or
sbb
frstor
xchg
popa
mov
addr16
adc
nop
mov
add
aad
push
inc
inc
aaa
push
jae
divb
xor
inc
mov
stc
testb
fnstenv
jo
dec
nop
xchg
in
andl
mov
lahf
inc
lock
add
pusha
int3
inc
out
lock
pop
mov
inc
add
pusha
jp
bnd
dec
or
jge
mov
aad
insl
ljmp
lcall
xchg
int
pop
xchg
sbb
pushf
add
pop
enter
xchg
pop
xor
ja
dec
std
negl
mov
pop
mov
arpl
adc
enter
mov
mov
sub
mov
idivb
or
add
stc
loopne
aaa
xchg
sti
cmpsl
add
mov
mov
movl
arpl
shll
cmp
jle
enter
rol
outsb
jp
cmp
into
xor
pop
int3
xor
in
xlat
push
jnp
mov
rcrl
sub
add
or
jecxz
jl
pop
xchg
popf
nop
adc
adc
add
jmp
pop
inc
pop
int
jbe
pop
and
push
push
mov
in
push
gs
popa
call
sbb
push
adc
ss
sbb
cmpsb
or
and
pop
ds
fstps
or
sub
push
rcrl
xor
insb
lea
cmp
xor
cmp
jbe
das
icebp
das
jb
fidivs
push
xchg
or
xchg
aaa
mov
mov
jo
outsb
jl
dec
mov
or
adc
repz
cld
mov
add
lret
jo
mov
pop
dec
cltd
imul
rcrb
xor
push
insb
dec
jg
lcall
xchg
mov
js
dec
aad
adc
adc
jmp
cmpsb
pop
inc
enter
test
dec
jg
push
and
out
out
jecxz
mov
xor
adc
dec
test
or
loopne
lret
mov
sbb
add
sbb
push
pop
dec
lret
mov
outsl
out
lock
xor
lods
xchg
pop
js
inc
int3
rorl
and
push
push
repz
mov
cmpsl
mov
xchg
movsl
xlat
push
or
in
or
nop
mov
clc
int
aaa
push
push
mov
pop
push
mov
pop
xchg
sub
jno
sbb
mov
insb
or
sub
out
push
idivl
pop
dec
popa
lea
lds
mov
adc
sahf
sar
rol
fs
mov
inc
push
xor
hlt
outsl
sbb
jae
lds
sub
sbb
push
cmc
test
icebp
into
int3
push
call
dec
and
loop
repz
mov
test
add
mov
fs
jl
mov
stos
add
xchg
xor
daa
and
pop
daa
and
adc
sub
cmp
sub
dec
sub
ret
imul
sub
ljmp
dec
push
scas
sub
cli
dec
cmp
pushf
xchg
cli
inc
lods
icebp
xorl
sub
add
cmp
and
push
pop
movsb
ds
mov
mov
inc
daa
ds
sahf
add
push
sub
xchg
inc
stc
cltd
sahf
dec
popf
clc
fidivl
mov
cmp
adc
cwtl
or
lds
cs
cmp
pop
das
roll
lea
add
add
sarl
jns
popf
cmp
jp
lret
repz
mov
dec
jl
pop
mov
cmc
push
mov
jmp
and
pop
inc
lods
mov
sub
or
push
gs
je
cwtl
ljmp
fs
mov
inc
jmp
mov
cmp
jge
add
gs
pop
aaa
outsl
mov
cli
rorl
ja
sbb
jmp
push
out
or
push
xchg
xor
xchg
pop
lahf
lods
inc
jl
push
and
bound
ficoms
jb
ret
icebp
mov
in
dec
addl
pop
dec
mov
dec
or
movsl
ja
sbb
fucom
sub
decl
mov
movsb
aas
out
sbb
mov
jp
out
inc
xor
icebp
outsb
std
xchg
inc
iret
jb
add
and
aad
clc
sbbb
and
adc
mov
fwait
pop
inc
inc
sbb
xchg
mov
xorb
pop
fldt
or
add
repnz
stos
sarl
in
sti
adc
xor
jae
jl
es
pop
test
xchg
jge
ljmp
fbstp
cmp
cmp
inc
add
insb
mov
sbb
dec
xchg
cmp
push
cmp
jmp
mov
mov
cli
cmpsl
fiadds
fsubl
mov
daa
mov
push
inc
hlt
in
jno
test
pop
dec
fs
mov
addr16
sbb
mov
cmp
add
add
sbb
imul
lock
and
loop
mov
mov
aaa
jge
mov
test
and
aam
mov
dec
and
orb
inc
push
cli
push
or
and
imul
push
ds
into
rolb
dec
inc
sub
add
jp
mov
add
push
xchg
cs
cmp
lock
jmp
mov
imul
imulb
xchg
mov
push
aas
mov
inc
fidivrs
mov
sbb
in
sub
pop
cmc
cmp
adc
adc
mov
imul
out
stos
mov
cli
and
fstpl
pop
inc
shll
cld
mov
adc
or
mov
test
stc
data16
add
push
inc
int3
mov
mov
dec
xchg
push
xchg
push
xchg
cmp
xchg
mov
cmp
jnp
ja
mov
push
nop
sarb
repz
adc
add
inc
adc
andb
call
and
pop
push
or
stc
sub
fwait
dec
dec
clc
push
dec
dec
sbb
movsl
inc
pusha
or
xchg
cmp
shll
pop
insl
cmc
xchg
int3
and
sbb
add
and
mov
daa
in
in
fimuls
sub
xchg
push
mov
les
pop
push
sub
xor
and
xor
xchg
hlt
mov
cmpsb
mov
lock
push
movsb
adc
cmpb
push
stc
aad
push
dec
sbb
push
enter
lahf
mov
out
lret
sti
repz
cmp
mov
sbb
cwtl
les
lock
cmc
popa
movsb
and
addr16
lret
push
fwait
test
shrb
jecxz
subb
mov
ss
xchg
shrb
fcoml
dec
ljmp
aam
mov
sub
aad
cmp
xchg
bnd
lret
call
stos
sbb
lahf
pop
mov
inc
cmpb
push
in
pop
or
inc
push
add
in
mov
loope
in
sub
aam
pop
hlt
or
call
shrl
pop
int
mov
daa
fldl
and
mov
adc
adc
ret
or
popf
xchg
enter
daa
pop
xor
cmp
pusha
cmpsl
mov
out
adc
xor
mov
std
scas
mov
movsb
xchg
or
add
xchg
call
lods
jnp
pop
mov
movsb
jo
cli
bound
test
fstpl
je
ret
sub
addr16
mov
jge
sbb
or
nop
stc
jb
gs
jge
and
xchg
cmp
loop
sub
xchg
jle
mov
mov
into
cmovg
cld
jg
addr16
pop
mov
scas
movd
fwait
dec
fadds
popf
icebp
je
jbe
mov
fildll
sbb
pop
in
outsb
std
push
jp
dec
insb
lods
fcompl
loope
int3
xchg
mov
fdivrp
or
xor
shrl
xlat
xchg
mov
pop
xlat
testl
imul
loope
push
cli
sbb
push
cmp
test
int
out
dec
dec
sub
jne
pop
hlt
and
add
push
mov
movsl
test
mov
loopne
sti
mov
mov
pop
mov
mov
imul
js
mov
sbb
xlat
lahf
xchg
shlb
lods
ljmp
mov
push
test
adcb
jbe
repz
movsl
mov
xchg
rcrb
test
jle
stos
int
adc
mov
je
pop
mov
push
pop
and
loopne
enter
outsb
call
test
fcoms
jg
cli
jg,pn
fstpt
cmpsl
add
push
push
jo
shll
lock
lret
sub
call
fsts
call
repz
fs
inc
es
pop
mov
jle
lahf
test
pusha
int
adc
stos
and
add
arpl
mov
dec
inc
xor
cs
sbb
cmp
sahf
pop
mov
bound
push
arpl
or
addr16
js
popf
and
xchg
mov
jl
fbld
sub
and
mov
pop
ja
stc
sub
addr16
test
push
ficoml
push
fwait
in
loope
push
lea
mov
cmp
mov
xchg
push
adc
test
iret
dec
xor
mov
xchg
jg
cmp
repz
shll
ret
addr16
jp
in
jno
movsl
xchg
test
movsb
shrl
je
xchg
pop
shrl
mov
mov
cmp
cmp
out
data16
fnstenv
es
cmp
cmp
and
pop
push
mov
push
into
pop
test
dec
test
in
add
push
js
dec
xchg
push
inc
aas
mov
cmpsl
xchg
sbb
stc
fisubs
outsl
addr16
sbb
shl
cmp
xor
sub
int3
pusha
dec
sbb
and
arpl
mov
lods
xchg
cmpsl
scas
jmp
fildl
dec
fcomp
enter
adc
das
push
out
pop
jae
sahf
or
lfs
mov
popf
xchg
push
push
and
into
jle
lock
xchg
in
mov
xchg
movsl
std
sbb
les
xchg
mov
ss
bound
or
adc
mov
fwait
add
jo
call
xchg
notb
stos
add
pop
sarb
inc
mov
lods
mov
fwait
mov
lods
sti
jne
adc
sbb
ds
bound
cmpsl
or
loopne
or
sbb
mov
xchg
out
std
popa
push
and
data16
inc
pushf
lcall
fldenv
or
adc
dec
sti
add
dec
sbb
pop
push
hlt
popa
jl
movsl
add
or
lret
fadds
jl
orb
std
aad
arpl
scas
sbb
sbbl
stos
and
push
and
adc
repnz
fbld
adc
out
jl
and
test
xchg
mov
stos
sahf
mov
mov
jmp
das
xor
push
mov
mov
jl
bound
mov
cld
push
in
inc
jb
shlb
mov
push
ja
mov
cmp
lods
out
jb
lock
and
add
adc
bound
fsubl
outsl
lock
jo
add
scas
add
xor
add
aaa
out
cmp
movsb
fmuls
push
mov
movq
push
pop
in
xor
mov
stos
mov
jge
lea
dec
call
xchg
out
and
imul
jns
loop
sbb
insl
xor
ret
inc
xor
out
jle
push
aas
or
lahf
jge
push
push
aam
xchg
cmp
push
int
stc
adc
dec
mov
sete
inc
out
bswap
lds
lcall
sub
andl
and
xchg
sub
adc
push
rclb
mov
repnz
or
mov
dec
or
dec
aas
or
in
js
inc
movsb
jp
iret
test
xlat
adc
or
adc
jp
sub
daa
mov
sbb
jmp
xor
pop
jecxz
cmp
faddl
cmp
hlt
or
mov
sbb
and
pop
scas
jns
shl
sbb
out
xchg
lea
add
lock
rclb
xlat
rorl
lock
cmp
mov
test
xchg
cvtdq2ps
scas
jge
mov
sub
jae
jne
lods
xchg
sbb
xor
mov
aas
cmp
mov
inc
jmp
xor
and
std
bound
xor
lret
out
int3
pop
lret
add
popf
xchg
mov
mov
repz
xchg
push
movsb
jo
jb
mov
add
adc
pop
in
lahf
and
rcr
int3
xchg
into
dec
sti
xor
repnz
and
aam
je
es
clc
popf
xor
mov
movsl
in
movsl
aam
lea
ret
mov
imul
adc
mov
cmpsb
gs
dec
pop
test
inc
dec
inc
sbb
jle
xor
pop
inc
pop
jbe
mov
mov
mov
mov
movsb
or
icebp
sbb
fldlg2
jno
sbb
sbb
mov
mov
aas
cltd
sub
ss
ja
lahf
pop
rcr
les
mov
push
aas
push
xor
mov
adcl
orl
mov
aad
dec
addr16
adc
repz
inc
lcall
sub
push
fwait
adc
cmpl
push
rolb
jo
out
xchg
cmp
inc
cli
paddusb
cmc
inc
sbb
insl
in
xor
pop
scas
psubusw
lods
xor
or
data16
rcrb
lahf
mov
mov
cli
lret
js
sub
addr16
xchg
stc
fidivrs
pusha
into
push
inc
call
pusha
sahf
mov
lock
into
in
arpl
add
pushf
lret
repz
push
les
fmull
daa
dec
jmp
hlt
adc
mov
repz
inc
ss
ds
ja
popa
mov
jp
xlat
pop
xchg
test
fmuls
xor
lcall
not
dec
mov
add
sbb
in
xlat
push
xchg
cmp
xor
into
dec
fidivs
in
jge,pn
jae
cmc
sti
js
inc
inc
adc
xor
adc
cld
push
les
inc
lea
in
pop
inc
cltd
xchg
lcall
mov
mov
imul
cmp
jns
mov
sub
popf
xchg
icebp
mov
or
into
and
imul
test
mov
insb
jge
fwait
push
or
in
ror
insb
fbstp
push
mov
lahf
je
int
jmp
jb
rcll
mov
mov
dec
mov
or
sbb
std
sub
push
repnz
mov
mov
mov
adc
pop
rclb
pop
push
mov
jecxz
add
mov
loopne
mov
scas
out
mov
jb
fs
sub
cs
leave
adc
jge
repz
xor
clc
repnz
dec
in
inc
xchg
rorb
pop
int3
mov
jbe
aad
jnp
add
aaa
mov
and
rcrb
adc
add
mov
mov
push
inc
mov
xor
nop
mov
sbb
sbb
xchg
mov
mov
push
js
cmp
insl
xchg
fnstsw
pop
je
fistps
les
ds
pop
sbb
lahf
fdivl
jne
out
fs
xchg
xor
inc
pusha
arpl
xor
jns
aam
call
xor
testl
fwait
shll
nop
push
pop
int3
lea
fstpt
sarb
and
jb
out
or
call
adc
scas
sbb
mov
push
mov
test
movsl
and
pop
mov
dec
cmp
bound
test
pop
mov
or
sub
sub
xchg
ret
imul
das
aad
inc
aaa
adc
bound
in
or
mov
adc
sub
mov
movsl
xchg
ss
pushl
push
mov
aaa
or
dec
sub
xchg
fsubrs
aad
notb
mov
cmp
jmp
repnz
xchg
and
hlt
lock
push
mov
movsl
orl
mov
imul
insl
in
in
cmp
pop
cmpsl
xor
and
and
loopne
jo
rcr
mov
add
cmp
sti
call
jmp
notl
js
stos
lock
jge
jb
lahf
or
fucomip
faddl
loope
in
ret
rolb
mov
dec
das
js
mov
bnd
loop
pop
mov
push
push
leave
ljmp
xor
sbb
sbb
insb
int3
loope
jmp
cwtl
push
lods
je
pop
jecxz
cmp
mov
test
sbb
sbb
add
ret
mov
inc
int
icebp
dec
and
sub
inc
add
push
stc
or
enter
pushf
mov
jg
mov
mov
lea
rcrb
iret
pop
test
rcrb
xchg
call
sbb
into
xchg
mov
decl
aad
insb
fs
test
xlat
out
test
roll
xchg
popf
rclb
ret
dec
inc
xor
add
pushf
fs
push
and
lods
outsl
xor
sbb
sti
jmp
je
push
mov
cmp
push
movsl
jecxz
repnz
jecxz
fwait
xchg
int3
xor
push
cmp
mov
inc
pop
je
jbe
xor
shll
shrl
cmp
push
sbb
pop
jp
push
inc
pop
orb
pop
enter
cmp
mov
fxch
adc
or
popf
mov
lock
out
jmp
mov
lret
mov
xchg
push
hlt
inc
mov
or
loop
in
andl
movsb
inc
ficoml
xor
mov
iret
adc
adc
andb
rcrl
add
inc
push
or
out
pop
mov
stc
push
popf
scas
mov
fisttpl
lods
mov
or
aad
mov
mov
arpl
enter
clc
lret
mov
mov
xor
imul
jbe
mov
inc
and
mov
inc
repz
jae
mov
dec
inc
push
ficompl
stos
movsb
jg
fistl
dec
jecxz
out
push
xor
jo
sti
test
bound
jns
cmpsl
pushf
dec
push
xchg
sub
lods
pop
cmp
call
test
js
xor
and
fiadds
sbb
add
dec
fisttps
imul
aam
imul
movsb
or
in
mov
sahf
pop
mov
lcall
push
popl
or
jb
stos
and
into
sub
popf
pop
repnz
inc
aad
out
inc
push
mov
sbb
mov
fidivrl
jb
aad
jno
dec
or
or
mov
push
mov
push
cltd
add
out
lret
adc
lods
fdivrl
in
fmulp
mov
jae
lds
es
dec
daa
push
stc
mov
adc
hlt
int
stc
or
jge
inc
dec
push
iret
xchg
mov
lret
sub
lods
call
inc
push
aam
add
add
mov
callw
clc
sbb
mov
jbe
mov
int
leave
in
flds
xor
xchg
mov
enter
addr16
mov
testb
cmc
push
mov
dec
jb
sub
movsl
xor
jb
in
cld
pop
add
out
sub
and
pushf
test
cmc
sub
xchg
outsl
shll
mov
out
and
inc
and
fists
leave
jl
pop
mov
xor
fucomi
cld
and
mov
pusha
push
xor
rcll
outsb
mov
mov
and
mov
xchg
lods
mov
inc
sub
inc
pop
sub
fiaddl
xor
lods
dec
fcoml
jns
lock
hlt
dec
add
rorb
push
mov
xor
fistps
pusha
pop
xchg
pop
push
xor
loope
dec
xor
sbb
loopne
push
lods
fcoml
inc
imul
mov
sub
lret
pop
push
push
pop
jno
sbb
push
lcall
mov
xor
pop
pop
loop
int
les
cmpsl
in
and
lock
or
pop
lahf
cmpsb
sub
shll
int3
cmp
mov
jg
shll
xor
rol
ror
pusha
out
notl
cmc
jle
movb
stc
push
cwtl
xchg
out
dec
jne
sahf
sbb
daa
mov
into
jecxz
jo
out
xor
mov
outsl
mov
aas
ret
rclb
in
out
xchg
lcall
ss
mov
inc
mov
fwait
addr16
jo
mov
sbb
mov
lods
sbb
push
jle
xor
bound
adc
ret
sub
pop
or
popa
inc
push
out
jbe
jns
loope
pop
aam
dec
imul
and
daa
call
pop
push
cli
sub
aaa
xchg
sarb
repz
mov
mov
cmovle
repz
mov
push
mov
xchg
xor
stos
and
push
adc
loopne
out
and
sti
loop
xlat
xchg
gs
adc
sbb
es
jg
das
mov
jl
dec
xchg
ret
or
jge
stos
sub
nop
sub
mov
mov
push
cmp
les
clc
stos
dec
out
xor
das
and
xor
das
mov
dec
in
mov
xor
test
adc
mov
enter
mov
lock
xchg
les
loopne
test
jle
cmp
mov
mov
andl
sbb
push
stos
pushf
aas
stos
popa
pop
push
mov
and
push
xchg
cmc
ja
cwtl
xchg
rorl
sbb
call
mov
mov
ja
imul
cmpb
pop
mov
loopne
sub
gs
jo
mov
xchg
jo
cmp
scas
jae
pop
ret
jle
push
push
mov
pushf
sub
mov
test
xchg
sub
adc
push
mov
es
loope
mov
sahf
xor
mov
ret
mov
faddl
push
sbb
ret
aad
test
mov
aas
fisubs
pop
mov
arpl
xor
or
pop
and
ret
inc
scas
xchg
std
push
jle
or
inc
mov
cmp
push
jae
cmp
movl
mov
jle
rolb
pushf
push
mov
push
mov
mov
stos
xchg
shlb
xor
add
inc
call
loop
pop
cmpb
int
push
in
sbb
jl
pop
enter
fs
call
jg
add
pop
cmp
in
or
fdivl
dec
fsubp
xor
push
ficoms
mov
adc
adc
jbe
lods
scas
jbe
idivb
mov
jg
mov
test
jae
push
int
cmp
fidivl
and
cli
insl
jmp
mov
fstp
mov
gs
stc
enter
jb
les
ret
sbb
pushf
lea
mov
pop
cmp
jo
andl
xchg
mov
aam
pop
sbb
std
mov
add
jl
dec
dec
lea
xchg
dec
outsb
repnz
or
and
dec
std
cmp
xchg
push
lret
or
fmull
dec
cwtl
mov
ret
cltd
xor
sbb
push
sub
insb
xor
mov
jae
mov
loope
xor
mov
jae
adc
decb
mov
pop
add
xlat
adc
mov
enter
popa
mov
xchg
mov
std
sbb
mov
je
mov
push
lea
icebp
sub
test
jmp
test
mov
xor
dec
cmc
pop
mov
adc
ficoms
rorl
rcrl
fisubs
imul
inc
jge
jo
fisttpll
test
xor
lcall
in
xor
inc
cld
test
push
mov
loop
divl
pop
mov
popf
cmp
dec
mov
int3
insb
repnz
mov
mov
jns
daa
subb
into
jge
insl
repz
aaa
cwtl
fs
push
loopne
scas
clc
pop
xchg
ds
jl
mov
xchg
and
test
int
mov
jmp
gs
test
mov
mov
fmuls
daa
adc
mov
popf
sbb
cli
jb
xchg
sti
add
mov
fldl
cmp
push
mov
je
jo
add
iret
or
adc
rcr
mov
flds
imul
stos
jne
in
mov
sbb
cmp
mov
sub
vpcmpeqb
inc
cmp
and
xchg
shl
in
push
inc
into
cmpsb
sbbb
movsl
sarb
aaa
std
add
mov
mov
jmp
mov
add
dec
mov
push
outsl
loop
sahf
push
pop
xchg
or
mov
xchg
cmp
dec
mov
roll
inc
repz
addr16
cmpsb
xor
imul
push
or
hlt
aam
test
lret
pop
mov
dec
bound
adc
das
or
and
sbb
mov
in
cs
xchg
fwait
adc
outsb
leave
jge
jno
pop
cwtl
iret
hlt
mov
fimull
pop
xchg
adc
cmp
mov
adc
scas
sar
jno
es
pop
fdivrs
cmp
in
push
jo
pop
mov
dec
fucom
jg
out
jbe
aad
push
push
jns
inc
mov
sbb
inc
or
pop
shl
repnz
movsb
scas
mov
fadd
aam
inc
push
add
mov
fimuls
shll
fwait
stos
sub
inc
insl
push
mov
cld
lret
mov
and
jl
xchg
push
mov
or
mov
push
cmpsb
xlat
xchg
and
jae
inc
stos
xlat
cmp
mov
pop
dec
or
mov
fs
int
mov
cmp
std
xor
jmp
insl
in
imul
inc
cmp
jg
mov
data16
jge
rclb
or
mov
mov
push
repnz
push
popf
insb
push
cmp
inc
mull
adc
mov
mov
cmpsb
dec
xor
andb
add
out
sbb
cmp
cli
jo
test
mov
lods
pop
sub
xchg
lods
mov
push
xlat
jg
mov
jae
stos
dec
stc
addr16
inc
cmp
dec
leave
ljmp
ljmp
clc
cli
pmulhw
jl
fxch
cmp
sahf
or
adc
jle
mov
cmp
cmpb
adc
xorb
pushf
xchg
popa
xorb
sub
sbb
mov
arpl
lods
test
orb
sbb
mov
push
and
test
push
sub
das
daa
dec
adc
cli
jnp
mov
dec
inc
out
jmp
cmp
jno
arpl
arpl
dec
lods
stos
mov
lds
mov
popf
cmp
sbb
cmp
imul
or
push
leave
incb
pop
pop
jg
xchg
stos
out
aad
push
icebp
out
int
cwtl
pop
jns
fldcw
aad
popf
jge
ficoms
ror
pop
cmp
rcrl
leave
scas
ds
xchg
lret
sub
enter
push
sub
int
jo
xlat
sub
pusha
push
sbb
sub
mov
mov
xchg
in
jge
scas
pop
loopne
ret
fldl
sub
incb
mov
jne
mov
jns
add
jmp
arpl
sbb
dec
in
xorl
fs
jnp
outsb
out
negb
cmc
mov
push
push
ja
incb
idivb
out
popa
ficomps
dec
push
and
dec
pushf
jge
lock
mov
popa
lods
jno
in
imul
inc
repnz
cmp
dec
jl
fwait
lret
add
mov
or
xor
xchg
push
sti
stos
aad
mov
test
jb
popa
and
pop
subl
sbb
and
mov
ss
notb
mov
push
loop
jns
add
and
adc
jmp
aaa
cmp
rcrl
inc
add
mov
add
pop
sbb
mov
test
dec
sub
push
or
dec
jle
mov
shll
in
and
jp
pop
cmc
xor
dec
push
mov
pop
mov
add
xor
icebp
je
inc
push
aad
push
adc
lcall
or
mov
in
mov
ljmp
sahf
mov
repnz
lods
rorl
adc
xchg
adc
test
cwtl
mov
jno
inc
out
sbb
out
sti
je
mov
jnp
icebp
dec
insb
pop
jmp
outsl
pop
movsl
clc
push
xchg
push
lcall
cs
lock
jge
or
mov
cmpsl
xor
dec
xchg
push
inc
push
rorl
shll
setl
int
in
ret
sbb
pop
fstpt
out
in
cwtl
jb
movsl
adc
add
adc
pop
inc
jg
mov
into
loopne
or
fs
mov
sbb
in
mov
sbb
loopne
xor
lea
push
stos
in
mov
nop
shl
movsb
mov
xchg
lret
stos
lods
dec
inc
je
clc
inc
gs
dec
fisttpll
cmpsb
add
pop
push
fld
lret
cmp
push
ret
mov
jns,pt
sti
mov
outsl
insb
out
xor
mov
out
sub
test
imul
adc
shrb
mov
dec
daa
or
shll
xlat
fwait
enter
pop
scas
add
jnp
mov
xchg
lahf
sbb
adc
pop
sub
jb
popf
jns
cmp
cwtl
lock
mov
aaa
xor
mov
pop
sub
nop
jb
push
add
xorl
jnp
daa
daa
mov
clc
push
fnstcw
add
xchg
push
fmulp
inc
xchg
notl
adc
add
orl
ds
sub
ret
pop
adc
testb
inc
je
cwtl
and
mov
mov
xor
loopne
in
and
pop
mov
xchg
xor
sbb
mov
subl
and
inc
or
and
push
stc
push
mov
adc
push
mov
loope
mov
lods
push
stos
out
js
test
mov
cmpsb
cli
insb
adc
inc
dec
mov
dec
ret
sub
cli
mov
cld
jge
push
lahf
pop
add
mov
das
test
ljmp
or
sbb
push
arpl
mov
xchg
pop
gs
ss
mov
mov
sti
call
add
sbb
fstpl
inc
push
lods
lret
sarl
mov
mov
push
fs
xchg
test
int
pop
leave
int
loope
test
jp
stos
out
or
add
push
add
cmp
jo
inc
into
jae
or
loope,pn
jl
stos
addr16
outsb
xchg
dec
icebp
test
inc
mov
cmp
pextrw
xchg
or
sti
cwtl
jl
repz
mov
mov
fisttpll
mov
push
out
mov
call
mov
inc
sbbb
dec
pop
xchg
cmpsl
mov
pop
ret
add
rorb
adc
cmpsb
mov
stos
imul
mov
data16
stc
xlat
sub
sbb
xor
inc
pusha
leave
std
lahf
ficomps
mov
fmuls
pop
outsb
jns
imul
lcall
jge
daa
mov
jp
sub
enter
adc
jle
jno
loop
popa
push
shrl
mov
inc
insb
inc
dec
lahf
jnp
stos
push
das
inc
mov
in
sti
or
mov
xchg
mov
xchg
lods
into
dec
loop
lds
pop
xchg
imul
dec
loopne
in
jmp
mov
xchg
out
lods
sti
lods
test
mov
push
push
jg
dec
inc
scas
jnp
in
jb
cltd
xchg
push
inc
out
rcr
sub
sbb
incl
xlat
mov
push
andl
add
pop
scas
test
insb
xor
and
arpl
or
adc
pusha
dec
decb
data16
out
repnz
mov
fdivr
cmpsb
leave
jo
hlt
and
in
test
fwait
sub
push
mov
or
xor
cs
xor
icebp
dec
lods
pinsrw
xor
stos
fisubrl
call
adc
lea
cmp
aas
outsb
mov
add
pop
sbb
out
stos
jo
cs
fildl
test
fildll
andl
xor
mov
cmp
mov
mov
sub
pushf
clc
dec
xlat
jo
dec
dec
dec
ret
adc
push
fs
lock
stc
jae
adc
inc
mov
or
inc
add
adc
xor
ja
xchg
out
and
inc
jnp
pop
testb
ja
xchg
mov
roll
and
repz
inc
test
sub
mov
xor
sbb
adc
repnz
inc
adc
xchg
jno
cmp
shlb
scas
adc
ljmp
xor
loop
push
or
lahf
adc
test
lock
push
add
xchg
hlt
outsl
xchg
ss
pushf
sti
je
movb
pop
inc
int3
loope
adc
push
aas
jae
mov
mov
ljmp
idivb
out
cmpb
pop
mov
sub
aas
loopne
shlb
pop
stc
xchg
inc
iret
test
sub
xor
andb
jno
stos
mov
sbb
mov
xor
sbb
movsl
jnp
cs
sub
ja
loope
fldt
xor
out
aaa
cmp
mov
xor
adcb
ret
fmuls
lea
fcomp
add
adc
xor
cli
mov
mov
add
movd
lcall
lods
stos
or
adc
xlat
setp
adc
stc
mov
pop
jmp
xor
pusha
aaa
push
cmpsb
outsb
pop
faddl
adc
and
jmp
dec
jge
dec
test
add
int
cmp
aaa
pcmpeqw
jle
mov
pop
and
inc
data16
icebp
sub
mov
scas
in
lahf
js
int
mov
ffree
je
mov
aam
and
shll
test
ret
sbb
aam
popf
flds
jmp
lahf
out
aaa
iret
std
mov
and
movsl
and
inc
aad
aad
or
sbb
insb
int3
dec
mov
mov
adc
shrl
xor
pop
fimull
std
mov
or
mov
fstpl
sub
xor
movsb
pop
cld
adc
repz
cmp
inc
xor
push
jecxz
aas
xchg
xchg
mov
repz
stc
xlat
jae
xor
popf
dec
icebp
add
in
push
mov
arpl
cmp
insl
sbb
ljmp
fmull
cmc
insb
xchg
dec
xor
xchg
stos
scas
jns
add
cli
pop
xchg
jbe
mov
xchg
mov
push
add
mov
mov
outsb
push
es
mov
pop
push
push
xor
ja
loopne
mov
cmpsl
cmp
int3
in
mov
pushf
jne
xchg
test
jb
inc
les
idivl
jg
ds
dec
mov
push
jb
adc
out
mov
bound
mov
ljmp
nop
mov
bnd
mov
xchg
sub
mov
icebp
push
or
jno
and
inc
mov
or
in
sub
cmpsl
xchg
pop
mov
stos
imul
mov
mov
inc
dec
ja
cwtl
in
or
aad
scas
push
out
daa
sub
jl
mov
cmpsb
lret
insb
scas
xor
cmpsb
stos
bound
mov
clc
or
ss
popa
sbb
pop
mov
push
inc
sub
mov
jmp
dec
jl
cli
iret
out
or
mov
xchg
shlb
test
les
mov
repz
jae
and
push
cmpsl
enter
adc
push
or
push
test
jle
mov
push
ret
xchg
movsb
rclb
sbb
hlt
nop
imul
mov
xchg
xchg
xchg
das
add
enter
push
and
sbb
dec
lods
mov
adc
aam
imul
in
daa
es
cmp
adc
jmp
cmp
or
pop
and
mov
mov
push
subb
mov
jbe
pop
dec
sub
cmp
ret
add
sub
aas
cmpb
sbb
test
ja
jnp
arpl
test
out
inc
lret
or
pop
inc
cwtl
aad
adc
std
ljmp
or
inc
test
insb
or
sub
aaa
repz
mov
ljmp
and
sub
xor
aad
pop
xchg
mov
cmp
xchg
sahf
xor
xorl
pushf
xchg
sub
push
arpl
les
sub
stc
push
jge
in
and
jb
cld
clc
inc
shlb
pop
pop
lret
jns
adc
and
daa
jecxz
js
sbb
std
adc
fstl
cmp
cmp
lahf
mov
jle
testb
jne
test
jb
sarl
mov
aas
mov
sar
leave
jb
cmpb
pop
or
or
jmp
cs
push
or
mov
in
add
insl
stc
jo
jne
dec
sub
pusha
addl
or
loop
std
xor
movsl
lcall
adc
cmp
inc
leave
call
std
mov
sub
je
fsubs
jns
int
or
push
sbb
push
mov
jns
inc
fcoml
imul
movsb
jle
cld
shl
das
mov
jecxz
in
call
mov
lahf
add
adc
xor
pop
and
mov
push
cmp
loope
iret
add
imul
xchg
or
popl
xor
test
in
xor
gs
jmp
cld
outsl
mov
push
iret
cmp
add
sar
and
ret
xor
cli
aas
test
fbld
push
xchg
push
hlt
mov
sbb
sbb
xchg
or
mov
outsl
iret
div
cld
shrl
sub
test
mov
adc
stc
sti
mov
sub
jmp
mov
in
push
bnd
inc
and
adc
mov
xchg
imul
gs
shrd
cmp
outsb
jecxz
rep
xchg
mov
push
push
lock
insb
mov
sub
jmp
jge
ljmp
popf
or
push
xor
mov
mov
mov
icebp
mov
and
sub
outsb
out
addr16
shlb
out
in
popf
mov
fistpll
aam
pop
arpl
sbb
add
mov
xorb
test
stc
js
mov
mov
aam
shlb
popa
sbb
out
or
movsl
sub
arpl
in
flds
adc
fdivs
add
in
test
push
fldenv
mov
sbb
xor
or
das
out
fistpll
movsl
adc
adc
mov
lock
pop
and
repnz
mov
add
mov
adc
mov
cld
lret
mov
inc
push
loopne
lcall
dec
mov
mov
lds
push
xor
jg
dec
jle
lock
xchg
dec
mov
mov
or
icebp
jmp
fcmovbe
addl
lea
push
push
mov
xchg
inc
adc
flds
lock
xlat
push
out
inc
xchg
xor
lds
adc
je
aad
rcll
mov
lds
std
loopne
xchg
mov
mov
mov
fxch
addr16
push
stos
dec
test
lret
inc
sbb
pop
sbb
xchg
push
add
inc
jmp
nop
xchg
test
push
cli
popf
add
jmp
add
xchg
add
adc
cmp
pop
add
dec
fcmovnbe
jae
inc
mov
pop
fidivrl
aad
add
andb
jge
push
in
ljmp
adc
add
stos
lahf
test
hlt
inc
leave
inc
jecxz
sahf
cwtl
pop
add
mov
xor
jo
lcall
mov
jl
mov
pushf
inc
daa
scas
sub
add
cmp
adc
sbb
push
or
push
ret
mov
and
mov
jno
lret
adc
mov
testl
inc
sbb
push
sahf
in
mov
fldcw
sbb
int
movsl
cmp
sub
pushf
fidivrl
std
jne
sbb
imul
in
into
int3
dec
clc
mov
xchg
lahf
adc
mov
popa
sarl
int
ljmp
sub
ficompl
rol
or
jo
jne
pop
cltd
imul
sbb
or
mov
mov
push
jge
sub
add
or
ds
lods
inc
fisubl
sbbl
mov
insb
adcb
iret
fnstcw
xchg
daa
sub
mov
loop
lods
sbb
test
xor
lret
jge
out
inc
aaa
mov
ret
sub
fs
xchg
mov
mov
inc
push
faddl
sbb
xor
sbb
adc
pop
jns
fstpl
and
mov
or
jle
divl
jge
cmc
push
int
lds
das
add
adc
ja
loop
sahf
xlat
lods
ds
stos
mov
std
xor
xor
lds
aaa
pop
nop
sti
jns
ja
xlat
shlb
push
or
aaa
sub
out
adc
xor
fcmovnu
mov
mov
loopne
cmp
or
mov
fldl
jnp
xor
stos
push
and
sarl
sbb
jb
mov
jp
loopne
std
fdivrl
jge
ror
scas
mov
xchg
pusha
xor
pop
and
repz
adc
cmc
notl
mov
push
xlat
dec
test
add
jae
dec
mov
shl
sbb
pop
jg
pop
jne
gs
pop
cmp
mov
movsl
notb
add
insl
test
cli
dec
and
cmp
push
loop
pop
repz
cmp
or
or
cmc
lahf
cmpsb
xchg
xchg
jg
int
js
adc
idivl
lock
push
data16
mov
lods
imul
xchg
adc
push
iret
into
in
xor
dec
mov
cmp
add
add
fmul
jp
imul
add
or
add
add
add
sub
add
enter
add
add
fmul
jp
imul
add
add
add
mov
add
mov
add
fadds
add
add
add
fmul
jp
imul
add
add
add
js
add
add
add
jb
add
add
add
add
add
into
jp
imul
add
add
add
mov
rolb
add
add
mov
add
fmul
jp
imul
add
add
add
enter
sub
push
add
xor
add
add
add
add
add
into
jp
imul
add
add
add
lock
add
or
add
add
add
add
add
add
into
jp
imul
add
add
add
sbb
add
js
pop
add
lds
add
add
add
add
add
into
jp
imul
add
xor
add
add
js
add
mov
add
add
into
jp
inc
outsl
insl
add
add
add
add
push
repnz
add
add
add
add
add
add
add
into
jp
inc
outsl
insl
add
add
add
add
nop
add
add
cmc
pop
add
add
add
into
jp
inc
outsl
insl
add
add
add
add
mov
std
pop
add
add
mov
add
fmul
jp
imul
add
add
add
loopne
add
fmul
jp
inc
outsl
insl
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
ja
pop
js
mov
add
add
lock
jg
mov
add
add
xorb
clc
sti
mov
add
add
lock
js
mov
add
add
cmpb
xchg
mov
add
add
lock
js
or
add
jg
cmpb
xchg
add
call
add
lock
out
add
js
jo
add
add
cmpb
mov
pop
xchg
add
lock
scas
jmp
js
jo
add
add
lock
mov
jmp
testl
xchg
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
jo
hlt
call
dec
xchg
add
add
incl
hlt
decb
xchg
add
add
ja
jo
out
call
xchg
add
add
add
pop
hlt
decb
add
add
add
add
hlt
out
out
call
add
add
add
add
hlt
mov
decb
add
add
add
pop
hlt
mov
out
call
add
add
add
pop
hlt
mov
xchg
add
add
add
pop
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
call
jne
and
add
add
add
jne
adc
add
add
add
add
xor
add
add
or
rolb
add
add
add
or
add
add
jl
or
inc
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
pusha
inc
cmp
mov
pusha
and
pushw
xchg
out
cmp
add
sbb
add
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
mov
or
loop
mov
mov
lds
adc
xor
iret
and
or
push
es
inc
or
pop
push
lar
or
cmp
adcb
filds
nop
cwtl
movsl
jg
insb
mov
cmovl
movsb
and
push
sub
sbb
adc
lea
or
add
mov
push
or
jbe
add
lea
mov
stos
movsb
add
nop
cmpl
adc
pop
jae
test
out
push
sub
xchg
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
ret
lcall
sbb
call
nop
add
lea
les
inc
mov
xchg
aaa
and
push
call
jb
sbb
insl
xchg
rcll
dec
sti
nop
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
ret
lea
test
xor
push
aas
pop
inc
mov
sbb
add
inc
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
or
dec
jle
add
add
movb
fsub
jae
dec
mov
push
and
repnz
pop
push
lea
sbb
data16
mov
jbe
mov
add
pop
pop
pop
pop
ret
push
imul
cwtl
jne
cld
mov
or
aas
pop
loopne
push
adcb
or
ret
xchg
shll
add
std
xlat
ljmp
inc
xor
stos
pop
cs
adc
sbb
lods
push
jne
lds
cmp
int
sarl
dec
enter
xchg
mov
scas
sub
jmp
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
faddp
scas
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
mov
add
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
test
push
push
mov
clc
nop
xor
sub
in
adc
shr
dec
xor
sbb
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
or
pop
xor
cmp
push
je
outsb
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
jmp
jae
in
gs
sbb
inc
or
adcl
scas
sbb
inc
inc
mov
inc
or
shlb
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
mov
add
lea
add
daa
push
iret
shr
pusha
loope
push
lea
push
fs
cmp
inc
push
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
enter
adc
inc
and
cmpsl
sbb
and
scas
mov
dec
dec
cmp
mov
xor
subb
xor
pop
mov
cmpsb
dec
push
js
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
daa
arpl
jae
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
hlt
add
add
push
add
clc
or
add
or
dec
add
add
add
add
inc
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
cmpsb
rcll
add
.byte
