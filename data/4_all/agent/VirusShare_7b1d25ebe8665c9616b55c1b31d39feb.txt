cld
mov
add
add
add
inc
cmpsb
xchg
imul
mov
mov
shll
jmp
nop
jbe
das
loopne
push
xchg
and
mov
push
movsb
fdivrs
insb
js
and
jae
call
sbb
pop
xor
dec
mov
popf
mov
xchg
mov
insb
or
mov
mov
sub
push
xchg
and
clc
xor
mov
xchg
movsl
fildll
test
mov
lret
ja
lods
sbb
lahf
cmpsb
clc
xorb
into
jmp
lea
mov
in
ja
inc
lret
shl
inc
addb
clc
sbb
xor
pop
dec
adc
pop
xchg
pop
push
sbb
sbb
jl
mov
insb
out
rclb
add
pop
or
dec
mov
leave
xchg
loop
dec
sbb
xchg
cmp
cmp
out
xchg
inc
xchg
fnstsw
dec
or
sbb
push
mov
nop
jne
shlb
inc
fistpl
mov
mov
xlat
ja
push
mov
mov
add
pop
cltd
iret
inc
mov
out
jno
pop
fwait
mov
sub
xlat
in
mov
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
sub
repz
notl
adc
enter
dec
sub
xchg
mov
push
adc
mov
pop
out
imul
cmp
mov
and
xchg
sub
movsb
push
or
ret
icebp
pushf
aaa
xor
insl
sahf
rcll
cmpsl
lods
mov
dec
sub
jo
ds
cltd
out
and
xchg
fistl
mov
mov
pop
adc
lds
mov
pusha
hlt
sbb
adc
das
adc
stos
cmp
outsl
in
jp
scas
jg
mov
cmpsl
aaa
in
jae
movsl
xor
xor
repz
ud0
add
inc
rorl
mov
popa
test
adc
lock
cwtl
testl
dec
sbb
out
cmp
and
popa
mov
das
loope
std
dec
stos
fsubp
scas
adc
cld
cld
fs
in
out
jl
aas
mov
lods
jne
mov
cli
aam
add
bound
and
test
pop
iret
or
jo
stc
dec
dec
or
sub
pop
and
xchg
arpl
cwtl
jne
subl
or
jo
or
shl
add
shr
mul
xchg
icebp
xchg
dec
dec
cmp
cltd
push
out
dec
xor
aad
loopne
mov
test
lea
dec
push
div
shl
sbb
or
dec
shll
data16
hlt
push
fldl
cltd
dec
arpl
arpl
daa
add
in
and
outsb
xchg
pop
inc
jp
je
lahf
add
or
jb
pop
push
fsts
xor
sub
lret
sbb
and
aaa
test
mov
mov
imul
nop
dec
push
sbbb
xchg
cmpl
cld
int3
inc
out
mov
js
outsb
ljmp
adc
stos
adc
sbb
stos
inc
cmc
lock
scas
dec
sub
and
out
jae
jmp
push
and
bound
je
leave
add
leave
push
int3
sub
ret
in
icebp
sarl
ret
cmpl
xchg
fdivs
loop
or
add
jnp
call
xor
cmp
push
push
addb
mov
aad
sub
movsb
inc
test
daa
pop
sbb
out
dec
ljmp
sbb
xor
insl
pop
orb
int
mov
dec
dec
sahf
mov
adc
aam
pop
stc
daa
jne
testb
loopne
rorl
mov
icebp
sbb
push
xchg
scas
pop
add
add
popa
lret
pushf
in
loope
loope
xchg
std
fucom
or
push
insl
sbb
fistpll
push
sbb
inc
shll
inc
sub
jbe
add
cld
fmull
and
push
mov
jge
add
sti
xchg
lods
dec
enter
xlat
xchg
fistl
cmpl
or
js
aam
jmp
loope
add
jl
iret
pop
pop
sbb
mov
or
cmc
pop
inc
mov
sub
mull
sbb
andb
outsb
pop
nop
push
stos
shl
and
out
inc
jnp
cs
mov
sbb
cs
jns
lods
aad
xor
add
ja
aaa
scas
lods
pusha
jns
std
shll
das
adc
movsl
add
dec
dec
pop
cmp
jecxz
mov
movsb
in
mov
out
mov
pop
fcmovb
dec
int
leave
subl
push
sarl
lea
repnz
add
ja
inc
ja
test
cmp
ja
int
fs
xchg
inc
jle
push
cmp
inc
lret
dec
mov
pop
mov
cmpsl
sarl
jg
add
and
cmp
js
inc
inc
clc
cmp
ds
movsb
pop
dec
mov
add
cmp
mov
push
popa
cmp
sbb
mov
pop
mov
pop
aaa
nop
pop
mov
or
dec
repz
imul
dec
jns
test
pop
or
popa
mov
mov
add
pop
mov
sub
cmp
movsl
push
xor
xlat
push
js
push
mov
push
cmp
xchg
test
aam
mov
les
or
out
jle
adc
icebp
and
xchg
jecxz
in
jno
insl
pop
xor
fcompl
and
aaa
rcl
pusha
subb
inc
fwait
push
dec
push
mov
inc
ror
std
cmp
incl
push
or
fs
pop
jne
orl
sti
mov
and
xchg
sbb
xchg
add
lret
pusha
ret
je
mov
add
aas
push
cli
cli
push
clc
pop
jne
imul
push
pop
sbb
test
mov
jl
jmp
les
stos
enter
orb
push
lock
fs
stc
jle
push
mov
cmp
js
ja
into
xchg
ret
mov
cmp
in
mov
js
pop
xor
mov
sub
into
pop
push
cltd
mov
lahf
bound
repz
add
iret
pop
add
xchg
nop
aam
mov
or
shrd
clc
hlt
push
jo
jge
push
cmp
jmp
xor
stos
aas
mov
lret
cmp
ffreep
mov
bound
xchg
movsl
mov
ss
into
rcll
push
in
dec
sbb
pop
pop
inc
imul
jmp
add
jb
fidivrs
je
sbb
inc
out
mov
int
inc
mov
or
ret
out
mov
xchg
inc
mov
pop
lret
inc
pop
arpl
pop
push
push
mov
pushf
add
adc
mov
jg
roll
stos
ret
je
fistpll
dec
or
dec
pop
jns
out
lret
daa
jl
adc
xchg
lcall
cmc
sbb
adc
add
outsl
sbb
loopne
push
lods
test
xchg
ss
xlat
stc
xchg
xorl
inc
subb
push
andl
push
fwait
pop
es
or
loopne
pop
mov
lea
aas
lcall
out
in
dec
cmp
mov
mov
pop
sbb
inc
dec
pusha
xor
mov
mov
inc
inc
outsb
pop
jns
sub
mov
ljmp
mov
aad
outsb
inc
in
push
inc
ja
xchg
adc
xor
jb
je
push
fstps
test
and
mov
movsb
in
and
fwait
inc
cmp
shll
out
mov
jne
dec
popa
push
fcomps
ds
adc
nop
sub
inc
and
data16
fstps
jmp
add
dec
xchg
xlat
push
shrb
dec
ljmp
inc
test
hlt
inc
xor
adc
jb
movsl
movsb
push
int
mov
jp
out
movsb
xor
inc
ja
repz
pop
add
mov
push
sub
xchg
jp
outsb
stos
pop
and
xchg
add
mov
scas
xrelease
mov
loopne
cwtl
mov
and
shlb
ret
pop
pusha
inc
xchg
push
out
into
clc
dec
mov
dec
imul
imul
jns
lret
lods
lahf
aas
stos
in
jmp
fucomip
mov
push
fwait
repz
jbe
mov
cmc
lret
mov
sub
push
mov
fstl
and
rorb
push
jno
cli
movsb
pop
pop
dec
jge
or
and
outsb
ret
inc
adcl
mov
xchg
out
addr16
jmp
out
test
lcall
jbe
xchg
aad
push
lods
das
and
push
pop
xlat
sbb
inc
in
out
stos
in
pop
fidivs
pop
push
pop
mov
movsl
lods
and
pop
sti
xor
mov
and
mov
xchg
sub
fdivp
mov
ljmp
inc
mov
cmp
add
jb
sub
sub
pop
jle
sub
popa
cld
xchg
push
imul
lret
mov
clc
inc
cs
rcr
push
fstl
pop
ret
testb
push
scas
mov
pop
add
sub
mov
adc
and
out
xchg
xor
cmp
out
addb
mov
into
pop
scas
sbb
popf
dec
bound
push
mov
jo
mov
or
pop
sub
adc
insb
mov
pop
add
divb
inc
jb
les
mov
push
xlat
das
lahf
jg
bound
mov
lea
jl
mov
mov
inc
andl
test
pop
pop
jmp
fwait
cmpsl
sub
dec
fmull
pop
cmpsb
xchg
xchg
pop
addl
or
mov
and
sub
popf
cmpl
fs
nop
fiaddl
daa
mov
inc
jmp
outsb
xchg
movsb
add
loopne
mov
mov
les
push
dec
addr16
insb
testl
lret
jge
xchg
add
and
ret
test
lds
clc
mov
adcl
cs
adc
mov
mov
leave
jg
sbb
xor
pop
pop
int3
dec
in
adc
std
mov
pop
aad
rorb
addr16
mov
mov
xchg
xchg
inc
mov
pop
loope
mov
stos
sbb
lahf
sub
xchg
dec
inc
adcb
pop
sub
mov
pop
inc
hlt
movsl
add
add
dec
int3
mov
xchg
aas
mov
xchg
mov
ud1
packssdw
mov
stos
mov
add
jmp
rorb
fnstsw
in
rclb
inc
in
push
push
mov
aad
or
jnp
int3
lret
cltd
inc
int3
xchg
jno
sbb
mov
cmc
or
sub
xchg
push
adc
lcall
xlat
pop
lds
outsl
fcomps
mov
enter
dec
dec
inc
pop
aad
into
repnz
inc
aas
arpl
sbb
sbb
mov
dec
add
add
xor
rclb
adc
xor
bound
dec
mov
sbbl
pop
xchg
xor
jb
mov
adc
ficoml
push
mov
xchg
mov
scas
aam
sahf
dec
dec
negl
hlt
in
add
adc
ror
lods
ret
mov
scas
rolb
cs
imul
cmp
jecxz
jge
dec
popf
inc
mov
xchg
rol
jnp
jmp
loopne
fwait
sub
cmp
xor
out
and
cmp
mov
loopne
arpl
pusha
push
mov
push
xor
cmp
test
ljmp
pushf
xor
or
jge
adc
inc
push
test
test
inc
fsub
shrb
lahf
or
rolb
imul
xorb
push
insl
inc
insb
add
mov
mov
imul
test
jmp
add
pop
pop
lret
fs
push
lcall
xchg
mov
cmpsl
mov
fildll
cmpsl
jns
sarl
cmpsl
popa
mov
div
call
lahf
mov
mov
mov
push
mov
adc
push
sub
inc
mov
lret
xor
fidivrs
push
aam
stos
mov
mov
jbe
xlat
xor
push
sub
inc
imul
aad
mov
adc
outsl
add
lret
insb
and
adc
test
xor
lds
or
addl
sbb
out
outsb
in
mov
cmp
mov
dec
dec
adc
sbb
stos
lret
push
in
repnz
das
or
jecxz
sahf
call
and
add
xchg
add
inc
pop
hlt
bound
xchg
cmpsb
scas
mov
negb
rcrb
push
mov
mov
mov
lods
stos
test
test
dec
cmp
dec
aas
inc
xor
cmp
xchg
push
cltd
addr16
and
mov
leave
adc
add
jl
or
mov
xor
xchg
dec
pop
inc
inc
mov
stc
xchg
cli
ja
add
xchg
repz
xchg
mov
in
lcall
fadd
aaa
cmp
jmp
pop
dec
adc
xchg
push
outsl
negl
xor
mov
mull
dec
add
xchg
xchg
sbb
imul
sbb
push
hlt
adc
pop
loope
cmc
inc
inc
jmp
jno
imull
jo
xchg
xlat
je
fists
outsl
hlt
mov
inc
push
in
mov
or
int3
fcmovb
jmp
cmpsl
cmp
mov
iret
fs
mov
mov
repz
sbbl
inc
loop
lock
clc
and
out
pop
sub
std
popa
push
bound
push
xor
jnp
push
push
fstp
cmpsb
hlt
mov
cmp
loop
xchg
je
pusha
push
imul
xchg
insl
mov
out
fsubrl
out
push
sbb
cwtl
clc
push
mov
das
add
sbb
test
lods
ret
adc
sbb
pop
dec
sahf
incl
faddp
lea
ljmp
pop
cmp
nop
cmp
mov
cmpsl
imul
fs
push
test
or
xchg
pusha
jns
add
shlb
pop
shlb
inc
sbb
loop
lds
pusha
aas
js
sbb
push
pop
and
cmp
push
push
jmp
je
or
js
jbe
rolb
xchg
int
mov
xchg
push
mov
cmpb
in
push
pushf
cmp
mov
or
mov
mov
inc
pop
cmp
dec
bound
mov
jnp
or
jno
and
pop
repnz
lret
xor
cmpsb
rclb
pushf
aam
mov
mov
mov
cs
out
xchg
jb
out
ja
dec
fnsave
push
test
push
aaa
ret
jg
cmp
iret
outsb
sub
rolb
cmc
gs
fldt
and
lods
aam
mull
lods
xor
lahf
or
fwait
in
jp
and
adc
adc
insl
icebp
pop
jge
clc
jnp
in
or
nop
and
popf
jb
ds
popl
adc
imul
fdivl
repz
sub
popa
outsl
adc
lods
imul
stc
in
mov
test
mov
cmc
dec
les
out
xchg
jns
cli
int3
das
mov
cltd
inc
xchg
and
pop
xor
sub
call
faddl
enter
sbb
lret
roll
xchg
mov
cmpsb
xchg
mov
or
sahf
insl
clc
mov
insl
popa
mov
xchg
or
movb
mov
call
xchg
sub
xor
mov
mov
or
mov
push
fs
add
sti
or
dec
movsl
push
xchg
mov
dec
or
pusha
mov
ja
stc
iret
test
stc
mov
clc
pop
repz
mov
dec
pop
aad
xlat
add
push
mov
xchg
push
mov
pop
inc
std
nop
je
push
xchg
cmpsl
pop
jg
xor
xchg
call
imul
in
je
js
stos
test
fs
xchg
dec
xor
push
loop
mov
or
push
adc
shl
neg
xor
in
leave
or
out
add
insl
outsb
pop
adc
mov
stc
mov
mov
mov
pop
loopne
push
push
int
divl
inc
cld
push
jp
shr
inc
call
out
jbe
mov
fiadds
push
lret
and
call
adc
xor
jno
xchg
mov
rcll
jmp
shrl
hlt
jl
out
jecxz
lahf
sbb
sbb
push
dec
add
xchg
sbb
xor
and
ret
pop
sbb
dec
adc
or
mov
adc
dec
jbe
or
std
xchg
pop
or
jns
iret
orb
out
add
inc
mov
in
aam
xchg
cmpl
inc
fs
nop
stos
std
cmpb
push
inc
sub
jo
je
mov
jmp
daa
int3
pop
xchg
test
xor
cmc
adc
push
adc
push
inc
lods
ljmp
test
std
mov
jle
shrb
sbb
mov
add
push
je
push
and
xor
adc
insl
pusha
mov
scas
pop
and
dec
mov
idivl
xchg
adc
outsb
or
xor
imul
int3
push
xor
pop
pop
mov
push
arpl
test
xchg
inc
cmpl
arpl
cmp
movsb
push
rolb
add
testl
mov
mov
insb
cwtl
cmpsl
lds
push
mov
sbb
test
adc
dec
std
xor
mov
loope
mov
in
add
cmpsl
cs
int3
lock
add
test
lretw
cmpl
mov
in
lods
cmp
subb
cli
xor
aas
fldcw
jg
loop
adc
cmc
pop
sub
cmp
popa
in
cltd
cmp
loope
lods
outsb
shlb
enter
xor
mov
mov
push
cmc
icebp
inc
jecxz
jb
fiaddl
leave
mov
cmp
inc
test
repz
repz
mov
fs
cmc
dec
arpl
ds
adc
and
sbb
ficomps
das
mov
pop
xor
shll
jmp
mov
sbb
mov
mov
or
mov
pop
add
out
pusha
fdivl
add
out
iret
lods
push
call
fsubp
mov
ss
dec
xor
test
pop
rcrb
dec
sub
mov
adc
in
stos
add
stos
sub
fwait
xor
fwait
int3
cld
dec
push
int3
call
in
mov
dec
pop
fcomip
stos
fst
clc
in
mov
add
jb
mov
mov
gs
outsb
inc
fsubl
cmpsl
xor
inc
jno
imul
dec
stos
push
sbb
ds
push
xchg
sub
ja
cmpl
jo
mov
cmp
lret
int3
xor
jle
stos
add
sub
insl
lods
mov
cmc
bound
movsb
push
mov
movsb
dec
xor
lods
jnp
aaa
sahf
ja
stc
adc
xor
shlb
test
sub
pop
sahf
in
mov
testl
fsubp
pop
jne
sub
lahf
xchg
arpl
cmp
cmp
adc
std
xchg
jbe
add
cmpsb
inc
jg
inc
sub
dec
test
ret
xchg
mov
mov
jecxz
pop
in
test
subl
fdivrs
push
mov
add
sub
lret
sarb
inc
ljmp
and
loop
xchg
repnz
push
lahf
sbb
cmpsb
mov
in
testb
mov
pop
sarl
fildll
fmuls
ja
in
add
je
and
popf
push
jb
getsec
dec
pop
int
aam
ret
xor
fimull
aas
dec
xor
mov
repz
dec
les
mov
xlat
imul
je
dec
clc
push
enter
xor
lahf
push
push
stos
lock
popa
stos
shlb
ss
jle
into
out
out
dec
adcb
clc
out
mov
lret
add
lea
jg
sti
or
out
sahf
push
jp
pop
shr
cmp
int
or
add
int
lahf
sbb
pop
les
lcall
es
addl
out
into
mov
cwtl
cwtl
xchg
fistpll
push
xor
icebp
test
adc
pop
lds
out
adc
dec
movsb
sub
mov
sar
ficompl
ja
cld
and
and
flds
push
ja
mov
bound
sti
mov
mov
movsb
outsl
in
lock
out
rolb
aaa
sub
xchg
repnz
and
or
mov
ss
sarl
cmpsb
inc
xchg
addr16
xchg
xchg
int3
mov
daa
int
mov
int3
jecxz
add
jle
push
or
xor
xchg
xchg
dec
mov
dec
adc
xchg
push
enter
xchg
cmp
adc
shlb
inc
out
in
mov
inc
mov
addl
faddp
push
jmp
and
nop
fildll
outsl
xor
rclb
cmp
icebp
in
fsubs
sbb
xor
mov
xor
leave
inc
push
jmp
dec
addr16
mov
jno
sub
hlt
ret
pop
adc
out
jp
arpl
xchg
xchg
negl
out
sbb
xchg
sub
or
jo
sbb
shl
pop
call
sbb
jb
jp
sbb
js
das
popa
add
or
hlt
cld
imul
inc
jnp
cmp
push
inc
mov
mov
mov
xor
jg
sub
movsb
jne
out
mov
jl
aam
pusha
inc
push
inc
mov
aad
adc
movsb
loopne
sub
adc
inc
clc
mov
and
rcrb
mov
pop
cltd
sbb
sub
xor
push
pop
fisubl
ret
stc
dec
fistpl
or
iret
push
mov
outsl
and
lret
mov
test
lret
js
pop
aam
or
mov
add
xorb
adc
daa
lods
mov
pop
push
cmpsl
xchg
cwtl
mov
push
cmp
xchg
ljmp
lahf
scas
roll
push
or
mov
sub
cltd
xchg
fwait
adc
push
jnp
and
cmp
cmc
and
inc
lcall
cwtl
pop
scas
pop
push
into
sbbb
rcrb
lods
je
mov
je
cmovp
xchg
lret
rorl
cmp
push
mov
pop
fs
lods
das
out
fcoml
imul
dec
aaa
out
mov
popf
cmp
inc
adc
mov
in
dec
push
stos
or
and
xchg
mov
inc
add
pop
mov
adc
mov
cmp
dec
mov
cmpsl
dec
xlat
loopne
lea
clc
aaa
mov
lret
or
ja
imul
adc
in
movsb
gs
sbb
rcl
cmp
cmpsb
insl
daa
sahf
mov
out
xchg
fcomi
arpl
pop
icebp
in
jno
jbe
cli
mov
add
push
mov
dec
rol
arpl
arpl
inc
pop
xor
insb
inc
add
int
ret
int3
ror
aad
fidivl
movsb
outsb
cld
mov
cmp
inc
cs
cltd
into
cltd
out
jmp
sbb
lea
dec
inc
mov
sahf
mov
imul
xor
pop
or
sbb
nop
call
push
movlps
pop
shlb
cmpsl
mov
adc
jb
pop
std
add
jbe
das
int3
jns
nop
push
mov
dec
xchg
test
inc
mov
add
sub
sub
add
gs
call
fcmovbe
push
cmp
xor
imul
enter
add
xor
repz
mov
aaa
jo
add
pop
nop
dec
push
push
xchg
push
push
inc
cmp
loopne
and
repz
popa
daa
xchg
sbb
xchg
data16
add
pusha
xor
sbb
movsb
loopne
aad
nop
cmp
mov
dec
sub
push
add
cmp
push
adcl
or
jmp
fsubrl
imul
push
jl
pop
ss
cmp
cmpsb
popf
nop
adc
xchg
je
int
inc
jge
or
testl
cld
les
ret
popa
test
je
imul
clc
loop
mov
or
xchg
movsl
mov
xor
cwtl
sub
je
xor
shlb
es
orl
int
mov
stos
pop
push
out
jbe
sbb
sti
jmp
sbbl
lock
cmpl
sahf
loop
or
in
mov
pop
ljmp
dec
jp
mov
xchg
pop
sti
test
aam
in
mov
in
fldl
jb
sbb
ds
mov
mov
push
mov
pop
out
lea
daa
icebp
dec
in
lods
enter
dec
sbb
mov
dec
jns
icebp
xchg
pushf
cmp
in
fs
sbb
xlat
scas
sbb
pop
pop
inc
mov
dec
ret
int3
push
mov
add
sub
pop
addr16
xchg
outsb
dec
jo
jnp
sub
movsb
mov
popf
test
addb
mov
cmpsl
jp
xchg
mov
divb
icebp
inc
je
adc
and
mov
and
mov
lret
popf
les
sub
shl
inc
mov
repz
loopne
inc
lret
pop
lods
mov
add
test
cmpsb
mov
dec
xchg
add
xchg
xlat
or
daa
pusha
and
test
and
sahf
jle
jns
inc
add
pop
call
gs
inc
sbb
sbb
inc
pop
mov
mov
arpl
lahf
movsb
in
ljmp
inc
mov
sahf
jo
ja
pop
fisubrs
inc
rcrb
sbb
stos
int
test
cmp
mov
push
bound
adc
cmpsl
or
mov
xchg
add
out
xchg
push
test
fnstsw
iret
jne
sbb
cltd
sti
sahf
jmp
lret
cmovne
test
push
and
mov
fs
mov
mov
pop
xchg
inc
jnp
daa
repnz
in
dec
cmp
sbb
mov
pop
decl
dec
popa
cmp
arpl
jbe
xchg
pop
pop
stos
mov
test
push
inc
and
rorl
stos
inc
fsubrl
imul
dec
pop
ljmp
int3
jb
mov
in
mov
or
xor
push
vandps
jge
icebp
pushf
scas
jecxz
xchg
out
cmp
or
insl
std
incl
sbb
mov
inc
xlat
mov
add
mov
bound
insb
outsl
mov
fsin
push
jge
int3
push
dec
lds
mov
lret
dec
jno
test
data16
mov
ljmp
scas
sbb
adc
pop
push
jb
push
js
xor
faddl
out
dec
rcrl
fsub
dec
xchg
or
movl
bound
popf
xchg
int
xchg
inc
xor
xchg
bound
pop
aad
andl
xchg
adc
sub
dec
pop
mov
movsb
xor
ja
movsb
shlb
push
cmpsl
dec
cmp
aad
add
pop
sti
cmc
mov
jecxz
inc
adcl
into
imul
pop
pop
frstor
dec
out
insl
daa
ret
fildll
lods
sti
test
ljmp
cmp
jb
idiv
adc
iret
xlat
mov
xchg
xchg
cli
and
movsb
insl
lcall
mov
outsl
sub
sbb
pop
paddw
jnp
es
psadbw
jae
scas
mov
out
repnz
and
mov
cmp
pop
adcb
xor
cwtl
pop
mov
mov
repz
mov
adc
dec
shll
mov
and
cmp
cmp
loopne
add
cld
cmp
add
ret
inc
js
mov
xchg
aad
int3
testl
insl
fstpt
dec
dec
sahf
adc
aas
jo
push
pop
xlat
or
mov
stos
cmp
scas
test
dec
and
pop
cmpsb
sub
mov
push
lds
add
inc
fidivs
inc
push
popf
xchg
ss
pop
xchg
lahf
stos
int3
ffreep
sbb
sub
xchg
lock
aam
xchg
add
shl
pop
or
or
call
jp
fldcw
and
xor
mov
lods
push
xor
sub
popf
fwait
les
xchg
inc
out
inc
in
in
addr16
stc
adc
ret
pop
cltd
mov
cwtl
adc
xchg
dec
out
lock
mov
testb
in
jbe
fsubs
pusha
cmp
or
movsl
pop
cmc
aas
das
cld
loope
clc
pusha
sub
out
dec
insb
jb
push
xor
in
enter
ret
push
inc
mov
mov
ret
mov
xchg
add
in
mov
andl
mov
popf
jmp
adc
dec
mov
nop
in
clc
push
add
test
and
push
add
pop
pop
xor
jge
ret
mull
inc
mov
mov
add
adc
fists
mov
xor
shl
stc
fwait
popf
sub
cs
adc
xlat
sahf
rcll
push
cmp
int
out
fistl
in
fs
test
pop
clc
cmp
or
or
ret
outsb
inc
sub
add
in
pop
or
inc
loope
mulb
push
out
ret
mov
jnp
dec
lea
ja
xor
fmul
fidivs
clc
test
dec
xchg
fistpll
repz
mov
jle
sbb
adc
cmp
nop
daa
and
adc
mov
inc
xchg
ret
clc
push
test
jae
push
leave
push
inc
pop
orl
aam
int3
inc
hlt
sub
lret
lods
int
jnp
insl
xchg
push
cmp
cmp
push
and
mull
test
xchg
adc
in
hlt
inc
out
aam
dec
lods
jecxz
fwait
repnz
inc
mov
add
add
pop
mov
sbb
or
adc
push
xchg
sub
mov
arpl
inc
int3
mov
ds
movsl
push
mov
ljmp
sub
push
xchg
mov
mov
insb
bound
push
or
cmc
and
cli
ja
pop
in
in
xrelease
lea
mov
push
jl
pop
mov
fnstenv
sarl
sub
mov
dec
xlat
sti
cmpsb
jne
cs
dec
jmp
and
jmp
ret
mov
das
push
cmc
sarl
das
push
mov
cbtw
in
xor
adc
scas
dec
pop
add
and
arpl
xchg
fisttpll
jp
sub
pushf
adc
sub
scas
sub
and
jns
repz
pusha
addl
loopne
adc
sub
imul
mov
mov
sub
imul
and
push
stc
movsb
mov
test
cmp
inc
mov
ret
rcr
out
sbb
cmc
repz
dec
and
clc
sbb
shrl
dec
xor
and
call
imul
sbb
jbe
jae
push
cs
lods
push
jle
adc
sub
jnp
scas
fwait
push
popa
push
sti
fdivr
push
aad
fcom
das
loope
xchg
pusha
xor
cmp
xor
or
test
std
xor
jg
xchg
movsb
and
push
push
mov
or
imul
in
jmp
dec
mov
stc
loope
ljmp
or
clc
popl
cmp
add
cs
push
call
lea
dec
stos
cmp
push
cltd
fwait
std
dec
mov
es
pop
xchg
ja
or
dec
push
enter
call
xchg
pop
out
and
pop
insl
cmp
pusha
jmp
or
and
xchg
xchg
mov
pusha
mov
dec
jnp,pt
outsl
dec
pop
sbb
pop
and
das
jecxz
xor
cwtl
pop
xchg
sbb
push
je
or
pop
aad
inc
jge
and
mov
xchg
js
pop
aaa
push
rclb
sbb
mov
sbb
fldln2
clc
sti
fwait
in
adc
inc
push
inc
mov
push
sti
sbb
mov
push
int
shlb
push
cmp
imull
inc
ret
sbb
shl
hlt
outsb
gs
push
jge
mov
loopne
adc
je
pusha
inc
jmp
xor
push
xor
test
daa
jb
adc
jp
pop
icebp
inc
cmp
cmp
fcmovnu
fbld
sub
js
jg
or
cld
adc
shrl
or
adc
cmp
enter
inc
dec
int
sbb
stc
arpl
jp
cs
mov
sbb
int3
mov
mov
mov
jnp
scas
andl
or
int
loopne
ja
pop
jmp
movsb
cmc
mov
int3
mov
in
xor
pop
xchg
cmpsb
jmp
dec
mov
xchg
xor
adc
dec
test
push
sub
jae
andl
int3
arpl
mov
xchg
int
es
rolb
out
jecxz
ds
in
loopne
pusha
add
adc
repz
adc
mov
mov
push
or
push
xor
or
adc
jge
shr
out
mov
les
test
mov
jno
aam
dec
ficoms
in
push
int3
inc
dec
jl
popf
in
push
push
or
es
jae
sub
outsl
loop
in
sub
sbb
inc
sbb
jb
pop
cwtl
stc
and
dec
out
mov
jne
sub
xor
insl
mov
mov
inc
cmp
pop
and
pop
or
clc
pop
sub
sar
aad
aad
mov
pushf
lock
loope
mov
fstps
popf
push
push
bound
dec
and
andl
pop
js
negb
loope
addr16
cmp
cmp
ds
push
loopne
push
jbe
arpl
push
data16
mov
cwtl
jae
cmp
loop
lods
mov
sub
xchg
imul
xor
aam
ret
cld
xchg
stos
leave
cwtl
gs
sbb
mov
imul
movsb
jecxz
or
leave
out
pushf
in
push
cli
xor
and
cmp
cmp
std
movb
xor
mov
sbb
icebp
add
fisubrs
dec
stos
js
xor
mov
insb
mov
mov
popf
add
push
xor
cmp
push
sar
adc
mov
push
adc
add
mov
incb
sbb
lret
cmp
dec
sbb
leave
aam
pop
jno
dec
dec
addr16
xchg
repnz
mov
in
xor
leave
shl
subl
mov
lds
or
gs
xchg
into
sbb
dec
mov
sbb
dec
movb
add
cs
inc
lock
or
je
push
cwtl
xchg
das
mov
cmpb
or
cmp
add
sbb
and
xor
decb
xor
mov
std
or
bound
stc
push
daa
or
sbb
loope
ljmp
jmp
int
das
dec
aaa
adc
ret
fbld
and
cwtl
inc
pop
out
pusha
pushf
outsb
dec
sub
xchg
sub
mov
outsb
test
dec
enter
sbb
popa
push
jo
fsts
ja
pusha
arpl
je
cmp
mov
pusha
fdivrs
mov
mov
mov
and
movb
xlat
movsb
push
push
xchg
xchg
fldcw
and
clc
and
lea
add
mov
pop
dec
fcmovnb
pop
leave
and
mov
jbe
std
out
dec
or
cmp
test
cmpsb
cmc
ss
lahf
or
mov
daa
cmp
jle
andl
ljmp
nop
daa
mov
mov
cmp
mov
pop
ret
fxch
test
sbb
sub
ja
and
xor
xchg
ja
test
xchg
lea
inc
daa
out
popfw
test
jae
gs
lahf
pop
lea
iret
shlb
neg
ret
cltd
roll
insb
aam
mov
cmp
mov
mov
bound
jbe
dec
mov
aam
inc
sbb
mov
xchg
fnstsw
pop
rcl
xor
sub
lret
push
sub
and
dec
inc
out
xchg
xor
adc
je
push
add
aaa
push
sub
add
and
sbb
filds
std
pshufw
and
rclb
sub
cli
add
xor
push
cmpsb
xorl
dec
sub
pop
cltd
xor
test
pop
mov
iret
or
int3
in
xchg
cmp
int3
rcll
ljmp
adc
sub
adc
lock
aas
test
mov
add
mov
xchg
call
inc
mov
outsb
aaa
fs
inc
add
jb
int
and
mov
aad
fsubrs
xchg
movsl
dec
mov
add
sbb
sahf
mov
cmp
in
icebp
gs
sub
xor
lret
out
jp
pushf
mov
test
mov
mov
and
mov
pop
jns
inc
sbb
xor
cli
ret
popa
fimull
mov
jo
data16
add
cvttps2pi
mov
jp
sub
outsb
roll
add
push
push
lea
adc
aam
scas
fldenv
and
and
xchg
push
frstor
sbb
pop
mov
xlat
and
fsubrp
or
into
enter
or
jle
xor
jne
cmc
shrl
mov
mov
bound
imul
test
and
jb
into
xchg
xchg
or
shrb
inc
jle
xor
lret
cmp
loope
xchg
rclb
mov
divl
pushf
ret
addb
jge
push
push
dec
arpl
push
lods
outsb
outsl
loop
fcomps
mov
insb
jne
imul
outsb
pop
nop
pop
sub
mov
jg
fstps
insl
rcrl
je
mov
stos
pop
movsl
movsl
lret
out
dec
cli
cmp
mov
fstpl
xchg
int3
and
popa
pop
fdivrs
das
out
ja
and
push
fimull
std
add
inc
pop
shl
jo
outsl
lods
daa
cmc
jecxz
jecxz
movups
adc
xchg
ljmp
das
cmp
jmp
fmull
iret
and
pop
rorb
rclb
sub
mov
mov
inc
xor
cmp
xchg
lock
out
lock
bound
mov
inc
xor
out
loope
pop
rcrb
lret
aaa
mov
lods
pop
pop
jg
test
lret
lods
jno
lret
add
and
dec
mov
lret
stc
sub
sbbb
insl
pop
mov
jge
push
mov
loopne
cmp
data16
or
enter
adc
add
push
adc
hlt
push
jb
adc
mov
dec
enter
mov
pop
push
jmp
adc
jl
inc
fiadds
ss
mov
push
mov
sbb
push
dec
mov
dec
ret
aad
add
adc
pop
push
sbb
mov
xor
push
xchg
push
jbe
jge
ljmp
xchg
mov
or
cli
ss
fs
and
orb
sbb
imul
ss
fsts
fwait
aad
out
repz
es
ficomps
adc
stos
ljmp
insl
inc
and
sbb
inc
adc
fiadds
cmp
pop
jmp
fcompl
mov
int3
sub
adc
jns
cmp
mov
iret
inc
pusha
adc
sti
push
loopw
add
jecxz
sub
fs
sub
sbb
pop
and
add
shlb
cwtl
pop
lock
test
popf
cld
xchg
dec
mov
pop
test
clc
sahf
dec
sahf
shlb
pop
repnz
jo
sub
mov
sbb
jmp
pop
inc
lahf
jge
stos
push
cmp
incl
xchg
dec
psrlw
lds
or
cmp
divb
jno
xor
popa
pop
sub
sub
adc
cs
or
out
jne
dec
aad
sbb
add
sub
in
lret
or
jb
xchg
icebp
sbb
add
cmp
fs
jnp
bound
sbb
nop
dec
push
mov
out
xorl
add
outsl
mov
leave
xor
jmp
sbbb
and
mov
mov
lcall
add
stos
clc
fnstsw
in
sbbl
mov
lret
es
jl
repz
push
or
adc
into
popf
clc
insb
cwtl
lods
inc
andb
fs
mov
aas
or
fldlg2
dec
clc
fmuls
cmpsl
sbb
xlat
sub
mov
mov
xchg
mov
icebp
sahf
scas
jns
xchg
add
mov
cli
xor
aad
jno
outsb
cmpsl
and
push
mov
pop
push
mov
push
mov
outsb
cmc
xchg
jge
mov
and
mov
adc
mov
jp
sub
xor
adc
shlb
adc
cmp
push
add
sbb
or
mov
inc
mov
cmc
cld
std
call
ret
clc
sub
in
enter
cwtl
bound
movsb
mov
adc
clc
jl
or
dec
cmp
mov
popf
pusha
bound
cvtps2pd
cwtl
mov
mov
mov
cltd
lods
inc
lcall
and
ffree
fwait
xchg
mov
mov
push
cmpl
mov
inc
push
mov
cmp
mov
cmp
pop
jo,pn
into
movsl
gs
aas
adc
in
cmp
jecxz
int3
hlt
mov
fldl
into
cmp
aad
mov
pop
sbb
pop
sar
or
jae
les
fs
pop
fucom
xchg
mov
push
cmp
mov
in
pushf
cmp
push
push
xchg
loope
in
jl
dec
pusha
inc
xchg
mov
lods
pop
cli
mov
fcmovnbe
sbb
aas
and
push
ja
and
mov
popf
sbb
call
cmp
fsubrp
lcall
sbbb
pop
or
xor
and
testl
mov
cs
addr16
mov
movsb
jne
xor
push
jg
dec
in
push
push
xchg
mov
inc
in
xchg
inc
in
adcb
nop
mov
jecxz
insb
imul
mov
push
into
inc
jmp
test
or
adc
fidivl
int
insb
xor
push
mov
pop
push
bound
push
xchg
adc
cmp
aaa
cld
sub
lea
in
add
mov
sub
mov
fdivp
lahf
mov
mov
fmuls
dec
or
in
inc
dec
jl
inc
fldl
scas
mov
jne
push
incl
xchg
or
xchg
loope
ss
aas
popf
push
inc
inc
outsb
push
xchg
mov
shr
in
push
push
xor
daa
dec
loopne
add
js
lods
mov
pop
test
cmp
mov
jecxz
or
ret
cmp
sub
and
xchg
addb
jmp
sbb
jle
add
xchg
insb
dec
inc
or
lods
stc
fidivrs
shrb
stos
xor
push
rcr
mov
sahf
daa
pop
insl
inc
xchg
fucompp
cmc
scas
jecxz
lods
mov
data16
push
les
je
aad
or
pop
mov
or
enter
insl
pop
ret
xor
daa
vmulps
dec
insl
dec
jle
shll
lahf
mov
lock
rorl
pop
aaa
add
outsb
pop
lea
pop
scas
lds
mov
mov
repnz
jb
xor
push
xchg
pop
xchg
add
lcall
mov
addl
and
cmpsl
inc
mov
enter
fisttpl
inc
js
xorl
shlb
dec
ds
and
daa
jecxz
mov
xchg
lods
jno
outsb
cli
dec
mov
js
aam
push
sbb
lret
adc
adc
or
or
mov
dec
inc
rcr
xchg
jmp
xorb
rsqrtps
lret
pop
std
and
fs
divl
mov
dec
adc
jno
jle
inc
into
xlat
mov
xchg
repz
or
cmp
ja
in
lock
add
sbb
add
push
push
lock
loope
fninit
jb
inc
pop
in
xchg
push
das
xor
sub
jmp
add
movsl
xor
sahf
mov
mov
mov
jmp
jns
inc
sahf
out
adc
add
fs
sbbb
pushl
in
xchg
push
daa
xlat
aas
cmp
ficoms
je
pusha
cmp
mov
aaa
add
push
sub
roll
dec
mov
push
sbb
int
lds
or
xor
fsubs
in
mov
pop
in
adc
ja
add
in
mov
int
mov
aas
dec
push
cmp
mov
xlat
or
lods
lret
ss
out
popa
cmpl
xor
jg
adc
stos
xor
les
mov
outsl
lahf
push
cmc
stos
xchg
mov
sbb
shlb
je
adc
icebp
jo
mov
xor
mov
sbb
loopne
movl
test
pop
inc
xor
inc
cld
shll
in
xchg
and
stos
jecxz
add
mov
pop
stos
mov
adc
jecxz
pop
inc
mov
and
add
int
out
dec
sar
sar
xor
ja
mov
inc
out
or
mov
jnp
xchg
rcrl
sbb
ret
lret
lahf
mov
sub
cmp
pop
fadd
jg
ret
push
push
cmp
into
shrl
push
adc
scas
sbb
mov
push
lret
xor
into
shlb
jne
pusha
outsl
gs
adc
mov
mov
push
outsb
in
and
inc
jno
and
mov
cmp
sahf
fidivrs
cmpl
mov
int
addr16
insb
leave
and
jecxz
ss
imul
addr16
xchg
stos
ret
packuswb
fsubrp
insl
add
shll
imul
jns
adc
pop
inc
cmpsl
daa
xchg
cmpl
xlat
xchg
mov
push
inc
fs
fs
pushf
scas
stc
in
mov
cmpsl
ror
push
int3
incl
pusha
or
sub
stos
xchg
insl
xchg
xor
xchg
mov
loope
xchg
outsb
sub
andb
pop
in
adc
iret
insl
in
cmpsb
addr16
xchg
xchg
fisttpll
aad
aaa
mov
mov
shll
loop
mov
pop
bound
xchg
loope
mov
aaa
ds
loope
xor
imul
cmp
popa
xor
cltd
mov
loopne
push
arpl
out
cltd
insl
sbb
mov
inc
andl
mov
dec
rolb
lcall
clc
inc
sbb
push
pusha
sbb
cltd
xorb
mov
das
xchg
xchg
fs
xlat
dec
aad
or
mov
out
insb
int3
dec
insl
aaa
ffreep
ja
lods
test
mov
fisubrs
insb
pop
sub
pop
sub
and
dec
dec
cmp
fs
aaa
add
fsubr
clc
pop
dec
test
cmc
bound
fadds
mov
jbe
inc
xor
scas
insl
fisttps
ror
pop
adc
and
iret
sbbl
inc
ret
hlt
aas
xor
std
outsl
push
sbb
call
xor
call
xchg
add
inc
mov
lret
imul
in
xor
xchg
shll
xchg
cld
mov
adc
xlat
out
leave
insb
cmpsl
jns
cltd
jle
test
out
lock
test
mov
pop
popa
mov
lea
fwait
test
add
pop
fs
lods
and
jecxz
sbb
movsl
mov
popf
inc
dec
push
ja
xchg
stos
jo
imul
loop
pop
jge
ret
loop
pop
fnsave
vmread
fwait
push
int3
mov
aam
or
mov
aaa
and
xchg
cmp
stc
hlt
mov
xchg
xor
jl
fs
inc
inc
pop
add
push
xor
dec
jecxz
in
and
iret
loopne
imul
lcall
jge
shlb
pop
xor
push
test
dec
fistps
inc
mov
push
adc
test
mov
or
xchg
gs
sub
push
cmp
dec
fldl
mov
xchg
repz
cmp
jae
dec
lods
sbb
and
pop
dec
pop
fsubl
xchg
or
push
hlt
or
dec
jg
dec
sti
js
mov
fsubl
jp
hlt
xor
movsl
mov
xor
mov
mov
cmpsb
pushf
jnp
xchg
cmovge
mov
mov
jbe
stc
mov
xchg
insl
js
push
in
out
and
hlt
xor
or
cld
loope
add
std
nop
sbb
mov
negb
mov
fmul
call
jmp
push
pop
outsl
push
imul
sbb
add
cmp
sbb
or
push
ja
pushl
ret
negl
mov
in
repnz
out
int
jp
subl
imul
test
xchg
pop
aad
cmpsl
adc
stos
mov
lock
sub
inc
add
into
aam
mov
adc
mov
fndisi(8087
lea
cli
stos
or
lea
sbb
lret
xchg
iret
xor
add
jbe
sub
mov
xor
fldl
sbb
sbb
sub
ret
fnsave
cmpl
and
pop
mov
mov
sbb
push
pop
jmp
mov
movhps
scas
dec
sbb
jns
mov
imul
mov
jbe
aas
xor
xchg
sbbl
call
lods
mov
ss
mov
or
or
xlat
cmp
sub
ret
insb
rolb
leave
pop
out
jne
ret
out
imul
push
xor
jge
mov
cmc
push
pop
add
insl
jle
sbbb
sub
mov
cmp
cwtl
push
adc
mov
jp
ret
es
mov
inc
pop
in
mov
push
divb
dec
aad
sub
popf
jne
adc
xchg
in
xor
mov
sbb
jl
mov
mov
mov
int3
cld
fisttpl
mov
xor
mov
ficomps
mov
add
xor
xor
pop
xchg
add
inc
xchg
dec
inc
cld
aad
mov
sbbb
cmovae
lods
in
ds
repz
insb
jo
shl
paddsb
xchg
xchg
or
jmp
xor
pop
add
movsb
enter
lea
or
push
pusha
call
jae
popa
mov
sbb
in
enter
mov
ss
pop
or
or
dec
loope
mov
pop
pop
fwait
sbb
xor
sarl
jmp
mov
fidivrs
test
outsb
jne
mov
shld
fwait
mov
sahf
mov
pop
sub
pop
je
lahf
inc
or
loopne
jne
adc
aaa
in
jmp
push
cmp
rcrl
sub
mov
out
mov
shlb
or
and
add
mov
lds
sti
test
scas
test
popf
out
xor
mov
addr16
fadd
sub
mov
add
pop
cmp
inc
outsl
sar
inc
pop
lahf
popa
cmpsb
test
scas
and
adcb
in
push
leavew
movsb
add
jo
inc
jno
or
jg
mov
imul
enter
popa
pusha
inc
sbbb
gs
shrl
pusha
push
popf
mov
and
ret
pop
sub
sbb
cmp
sub
or
jno
pop
add
pop
daa
and
mov
cli
xchg
dec
fs
mov
xchg
lods
gs
outsb
cmp
adc
sbb
lcall
test
fsubrl
add
les
inc
int3
mov
xchg
cmp
lods
cmp
fxam
jae
or
out
jg
ds
testb
pop
insl
jmp
ret
fidivs
cmp
je
mov
sub
jnp
mov
adc
in
pop
imul
xchg
and
mov
jle
stos
xor
stos
out
sti
in
ja
leave
sbb
rcrl
decl
movsl
xchg
push
mov
adcl
shr
faddp
popa
sub
adc
jno
inc
or
jg
dec
fsubl
mov
or
dec
sub
mov
or
cwtl
push
mov
and
loop
scas
mov
sbb
in
pop
sbb
std
jns
shlb
faddl
lret
je
jg
pushf
mov
add
shrl
jmp
mov
nop
push
mov
add
dec
mov
pop
idivl
xchg
enter
and
sub
aaa
scas
in
negb
iret
popf
rol
jno
aam
add
daa
scas
jbe
loope
inc
add
cmp
repz
jle
pop
hlt
inc
cmp
adc
or
dec
scas
jmp
push
mov
xchg
adc
jns
cltd
xchg
scas
dec
sbbb
sbb
dec
jbe
ret
nop
lods
sbb
or
aam
jecxz
in
js
and
shl
out
pusha
pop
xor
icebp
out
push
mul
arpl
inc
add
and
std
fdivs
dec
or
mov
xor
sub
lret
mov
int
sbb
lods
test
push
fwait
rolb
test
cmp
push
call
jp
xor
js
lahf
dec
in
decl
xor
xor
jb
jg
jae
addr16
adc
loopne
jno
add
test
ss
sets
mov
or
push
jbe
iret
or
adc
xor
mov
mov
mov
lods
aas
pop
imul
mov
inc
ror
lock
mov
cltd
sti
sbb
dec
mov
push
ja
jp
fwait
xor
in
sub
mov
ret
pusha
adc
ss
sbb
lock
into
dec
outsb
cmp
or
jnp
rolb
js
add
dec
and
sahf
test
mov
bound
inc
aas
dec
test
and
push
mov
lea
adc
loopne
inc
push
jge
je
cmpb
lret
push
aam
sub
dec
mov
cltd
inc
ss
popf
push
add
cmc
in
daa
popf
and
push
ljmp
rorb
xchg
inc
add
inc
fs
aas
pop
nop
mov
imul
in
jns
das
outsb
adc
mov
jmp
xchg
mov
dec
lods
xlat
xchg
and
xchg
xchg
xor
icebp
and
popa
mov
fstpl
inc
jns
cmp
ret
or
push
cli
and
jp
ss
xchg
cmp
les
repnz
loop
push
push
mov
sbb
jae
incb
jno
mov
lahf
cltd
imul
sbb
mov
xor
mov
aad
mov
out
out
push
push
ljmp
scas
addr16
xchg
mov
aam
std
js
ret
pop
jp
or
and
fstps
pop
pop
push
pop
int3
out
imul
icebp
mov
stos
xor
sub
xor
jg
arpl
pop
mov
xchg
cltd
fdivl
gs
mov
int
inc
out
xchg
mov
adc
mov
dec
insb
and
fld
and
imul
mov
mov
daa
jnp
popf
inc
sahf
cmp
mov
pop
sarb
pop
pop
js
add
popf
icebp
in
jmp
outsl
push
xor
push
test
ja
inc
in
pop
dec
cmp
outsl
push
push
insl
addr16
push
mov
sub
test
push
or
pushf
insl
rol
inc
sti
imul
xchg
cmp
movsl
mov
xor
sahf
and
jecxz
mov
testb
mov
sahf
adc
mov
pop
xchg
es
js
hlt
dec
imul
out
popa
mov
inc
cmp
mov
lahf
sub
lea
stc
fs
pop
pop
lock
adc
pop
fimuls
iret
orl
add
sar
loope
sbb
pop
add
jp,pn
xor
xchg
sti
lea
inc
push
pop
jl
add
mov
lahf
arpl
scas
divb
lock
mov
mov
sub
add
nop
sub
jp
pushf
fsubs
push
xor
scas
mov
cmpl
sub
mov
arpl
outsl
jne
xchg
or
jb
stc
or
lock
push
mov
int3
mov
pop
xchg
pushf
addb
and
inc
aaa
and
mov
fstpl
test
in
xorl
and
xlat
fisttpll
idiv
mov
push
lods
sub
mov
clc
and
sub
popl
mov
add
int
std
mov
je
jb
or
adc
js
leave
les
xchg
ja
dec
repz
or
add
imul
mov
cld
shll
notl
shlb
in
lret
push
iret
add
andb
jmp
add
dec
pop
imul
mov
aas
mov
lods
test
in
and
push
std
lret
int
pop
cld
loop
push
dec
dec
and
adc
pushf
push
push
mov
push
stos
imulb
clc
push
lds
dec
inc
out
mov
xchg
stc
cld
adc
xchg
sbb
movsl
sbb
sub
js
ret
jg
sbb
xor
xchg
imulb
pop
jb
pushf
mov
cmp
xor
orl
add
xor
shl
push
outsl
leave
repz
aam
lods
mov
sarl
stc
mov
stos
dec
insb
and
adc
jg
mov
into
inc
push
or
push
arpl
push
ds
stos
imul
orl
enterw
xor
push
in
aam
push
xor
xchg
cwtl
loope
adc
jb
mov
push
aam
inc
xchg
inc
shr
mov
ret
jle
xorb
cld
lret
sub
lcall
mov
cmpsl
jle
stos
fisttps
mov
sub
sahf
hlt
mov
js
stos
pop
xchg
int3
dec
dec
pusha
inc
cmpsl
stc
sbb
bound
xchg
adc
jge
mov
orl
data16
push
mov
insb
sub
xor
std
xor
push
test
roll
ficomps
test
add
dec
nop
movsl
dec
xlat
jl
in
pop
mov
sbbb
aas
cmp
xor
mov
fnsave
cmp
xor
lods
push
cld
fmuls
outsb
ret
push
cli
call
pusha
sub
cmpsb
pop
or
inc
test
js
dec
loop
iret
inc
or
hlt
push
xor
pop
mov
mov
das
add
leave
cmp
in
cmp
dec
or
shl
and
mov
dec
adc
lcall
push
lret
fwait
cltd
mov
pushf
pop
xor
xchg
lods
push
pop
push
pop
test
lahf
push
add
rcr
sub
pop
rclb
jg
movsb
sub
cmp
cli
insl
jbe
insb
lock
fistps
push
jne
push
flds
xor
add
ja
pushf
add
mov
sarb
cmpsl
clc
or
xchg
dec
das
or
sub
ss
sub
into
orb
leave
inc
push
les
mov
xchg
cmp
lcall
or
cmp
mov
mov
inc
sbb
enter
add
sub
dec
lahf
push
cmp
sbb
pop
pop
cmp
or
add
aas
mov
nop
enter
push
sbb
fdivl
ret
mov
mov
pusha
fimuls
push
xchg
push
jnp
iret
mov
mov
pop
jp
pop
rolb
insb
pop
out
loop
test
jne
ja
ljmp
jns
dec
insl
hlt
or
jle
bound
sti
fdivl
test
pop
out
incb
shl
lods
ret
out
pusha
xchg
out
shl
cmp
fbstp
add
clc
add
dec
fmuls
test
repnz
addr16
jne
out
sub
inc
call
push
jg
cmp
ret
rorb
xchg
in
std
xlat
sbb
jo
fnstenv
add
mov
mov
dec
push
int
mov
ljmp
mov
sub
addr16
nop
icebp
das
cmp
daa
inc
and
call
jne
aaa
in
push
xor
test
leave
pop
stc
cmp
dec
xor
jae
stos
pop
xlat
bnd
mov
arpl
push
in
shlb
dec
les
cld
sbb
or
and
je
xchg
dec
test
aaa
outsb
xchg
fmuls
cmp
ja
pop
clc
adc
pop
ss
jbe
inc
fcmovb
push
push
jg
mov
mov
push
pushf
leave
aaa
xchg
xchg
or
pop
dec
xchg
sbb
sub
mov
sbb
aam
cmpb
inc
lea
minps
mov
jp
mov
push
icebp
fs
movsl
fs
jns
mov
sbb
enter
add
frstpm(287
imul
ja
add
mov
jmp
jno
fcmovnbe
inc
adc
leave
in
ret
and
out
adc
imul
and
or
dec
data16
mov
jb
loop
cmp
sbb
std
jae
aad
mov
iret
mov
pop
sarl
insl
ss
popf
lds
mov
shl
clc
cmp
push
push
out
cmpsb
shlb
mul
cmp
rol
test
mov
hlt
in
add
rorb
sub
mov
inc
sarb
mov
fimuls
push
mov
sti
xor
clc
mov
mov
cltd
mov
fcompl
or
mov
ja
jecxz
shl
mov
dec
or
and
pop
int3
pop
push
leave
jbe
scas
mov
mov
scas
test
inc
inc
fcoml
dec
sub
and
push
mov
dec
mov
mov
push
je
mov
and
subl
mov
repnz
lahf
popf
cmc
push
pop
lds
sub
dec
inc
lcall
dec
and
pop
pop
mulb
ficompl
dec
shll
pushf
cmp
mov
hlt
subl
and
and
mov
sub
cs
dec
xchg
xchg
push
add
mov
xor
gs
mov
gs
mov
pop
roll
sub
into
push
or
lock
or
mov
add
cwtl
mov
push
popf
xchg
arpl
addl
fdivr
jge
jbe
jbe
lret
iret
mov
shlb
in
fld1
ja
adc
in
jbe
decl
mov
fstpl
xor
xorb
fisubs
push
xor
inc
or
jle
ljmp
mov
mov
pop
imul
orl
add
add
popf
icebp
cmp
pusha
push
push
add
inc
fildll
iret
bound
dec
out
pop
mov
jnp
pushf
fwait
adc
data16
xchg
pop
jge
jle
repz
xor
push
mov
in
adc
xchg
das
jno
adc
or
mov
pushf
xchg
add
scas
sarl
sub
sub
lds
adc
cwtl
aas
fidivl
pop
sub
sub
adc
xor
sbb
xchg
jnp
push
jae
pop
xchg
xchg
fnstenv
jg
jecxz
pop
adc
incl
in
sbb
xchg
rcrl
mov
dec
cmp
sub
outsb
imull
or
dec
push
testb
mov
ja
cmp
lret
push
ja
jge
mov
add
push
jae
mov
xchg
push
in
xchg
fwait
mov
imul
adc
outsl
stos
fistl
or
daa
add
aam
pop
adc
je
and
xchg
mov
pop
mov
test
xlat
adc
dec
pop
add
cmp
push
shlb
aad
js
fcoml
xor
push
pop
test
jge
iret
jp
xor
jne
movsl
inc
lds
mov
dec
icebp
jp
pop
mov
adc
mov
jge
cmp
fdivl
cmp
push
adc
sub
out
frstor
nop
jb
loop
mov
mov
inc
sbb
xchg
and
aaa
jge
pop
push
out
fdivl
jge
shlb
xchg
repnz
daa
pop
mov
mov
pop
push
sub
mov
ja
pop
mov
or
leave
add
test
fsubs
adc
sbb
push
jge
lds
xchg
inc
inc
pop
movsb
xchg
pop
inc
and
shrd
jo
cs
sti
and
int3
ffreep
sar
fdivrs
and
push
clc
fcompl
push
sub
push
cmp
lret
push
or
or
dec
pop
push
jp
enter
or
inc
in
cmp
mov
outsl
xor
out
jbe
push
jno
dec
ds
push
std
cmc
push
lea
jg
imul
imul
mov
enter
mov
out
call
repnz
xor
aam
add
fninit
arpl
xlat
popa
icebp
mov
loop
xorl
inc
cmpsl
add
add
lds
push
jmp
pop
xchg
mov
movsl
daa
sub
cmp
jg
insb
data16
movsl
jge
jl
enter
xor
jecxz
and
ret
aad
sub
xchg
inc
push
out
mov
fimull
mov
lods
out
imul
add
test
sub
push
inc
inc
push
fnstcw
add
adc
jle
subl
leave
dec
outsl
test
sub
movsl
clc
and
loopne
pusha
leave
inc
inc
mov
pop
ret
pop
mov
ret
add
shrb
or
shlb
roll
dec
mov
adc
push
cmpsb
out
sbb
loopne
mov
mov
jmp
lea
leave
mov
adc
jo
cmp
ret
or
shll
out
ds
adcl
adc
getsec
sbb
sub
dec
test
inc
sbb
push
sbb
lea
out
adcl
pushf
and
jns
push
lea
dec
cmp
or
lds
mov
addr16
repnz
xor
cmpsb
call
int3
sub
in
push
cli
mov
mov
test
lock
je
pop
int3
fcoml
nop
xchg
xor
js
mov
jno
push
adc
ss
aaa
clc
mov
repz
push
mov
cwtl
in
mov
add
inc
push
push
pop
mov
mov
add
testl
fidivrs
imull
jmp
mov
pusha
stos
sbb
sub
mov
or
stc
lahf
jmp
or
push
stos
inc
mov
aaa
imul
lahf
outsl
cs
std
push
inc
xor
cmp
jno
ljmp
daa
cmp
es
lods
and
arpl
test
popa
subl
jp
ss
int
or
lock
xor
jge,pt
and
sbb
in
lods
in
sarl
addb
cwtl
adc
outsb
fistpl
fists
outsl
sub
pop
subl
xchg
cmp
addl
sahf
push
xchg
jnp
sbb
je
adc
xor
and
daa
mov
mov
test
in
int
stos
dec
imul
push
shlb
push
xchg
mov
sbb
dec
movsb
adc
inc
xchg
jo
hlt
aas
call
out
lods
sub
or
dec
mov
out
sub
outsb
in
and
mov
and
sub
xor
das
fwait
das
cmp
xchg
cld
pop
int
mov
fcomps
popf
aam
inc
mov
sti
test
adc
outsb
jnp
int3
in
rol
adc
adc
inc
lahf
jl
icebp
mov
aam
in
and
cmp
and
xchg
push
imul
xor
test
cmpsb
mov
inc
testb
and
jns
fisttpll
or
jecxz
mov
sti
mov
sbb
movsl
mov
jbe
aam
insb
fwait
jmp
mov
imull
lahf
in
fwait
and
or
test
lds
stc
repnz
test
mov
adcb
outsl
stos
lock
loop
inc
mov
inc
dec
sub
xchg
daa
outsl
or
lcall
push
jbe
out
call
inc
jecxz
into
mov
insl
imul
cwtl
sub
inc
outsl
fcoml
adc
inc
cmp
mov
mov
cmp
into
cmp
insl
fwait
lods
dec
clc
sbb
pop
jecxz
retw
jp
pusha
dec
inc
sbb
jbe
mov
dec
inc
ret
xor
add
mov
dec
outsl
rclb
cltd
push
hlt
lret
mov
mov
dec
push
into
add
sbb
sub
mov
adc
in
dec
fcmovnu
xchg
aaa
push
sbb
les
inc
mov
mov
or
inc
lock
fwait
daa
xchg
fdiv
push
xlat
shlb
push
test
jbe
stc
ret
add
call
gs
xchg
jge
test
jb
inc
idivl
jae
ficomps
test
outsl
test
notb
push
jg
arpl
rol
jg
icebp
sti
and
arpl
sahf
ret
sub
clc
inc
scas
and
imul
mov
inc
fst
inc
mov
or
add
xchg
xchg
ficompl
mov
jae
repz
push
sarb
loope
and
xchg
jno
jne
cmp
mov
xchg
fst
daa
add
call
mov
jns
and
pand
dec
mov
add
xor
addb
jge
adc
ja
push
jne
sti
loopne
scas
cmp
adc
xor
inc
shl
sbb
cli
popf
loopne
hlt
jb
outsb
loop
add
jne
adc
loopne
out
cs
pop
or
daa
das
das
std
push
fs
iret
test
stos
lods
test
pushf
jbe
daa
aas
aas
jo
sbb
lcall
xchg
add
loope
test
mov
dec
mov
outsb
sbb
lds
in
stc
inc
mov
push
imul
cmpl
cmp
rolb
jne
rolb
and
push
inc
cwtl
jae
repz
mov
dec
dec
loope
adc
hlt
add
cld
sbb
mov
in
sbb
cltd
xor
fstp
loop
adc
sub
mov
cmp
lods
arpl
orl
mov
xchg
insl
dec
or
in
xchg
mov
adc
subl
pop
mov
aas
test
dec
scas
mov
out
jecxz
mov
jl
out
sub
sbb
dec
dec
sbb
out
pushf
dec
mov
loop
pop
addb
stos
movsb
mov
popa
and
subl
mov
lret
loopne
imul
fistl
popa
push
push
ljmp
aam
imul
push
mov
and
shlb
sbb
xor
adc
scas
jl
cmpsb
mov
cmp
movhps
int3
dec
adcl
nop
xchg
int
stc
xchg
jo
int
nop
lcall
or
and
shrl
frstor
outsl
adc
shll
fcom
dec
into
add
pop
push
repz
mov
sbb
xchg
jmp
enter
jnp
push
jecxz
mov
add
cmp
in
std
adc
fldl
shrb
xchg
sti
xchg
cli
sti
aam
inc
call
adc
popa
imul
dec
lods
fadds
xorl
in
add
leave
popa
les
and
inc
or
daa
sub
insl
and
lahf
rcl
cltd
lea
mov
sub
mov
sub
xlat
inc
shrl
repnz
mov
jmp
and
mov
test
stos
rclb
cmpsl
std
adc
add
jge
sub
scas
pop
outsb
push
adc
movb
adc
fstpl
xchg
pop
mov
stos
cmp
hlt
pop
or
ret
push
fcoms
clc
hlt
cmp
lahf
sub
and
popa
out
cmp
sbb
insb
orl
jp
and
aad
aad
pushf
mov
jbe
out
jmp
inc
shl
inc
xchg
ds
mov
mov
mov
popf
imul
mov
aam
cmp
data16
testl
sub
in
inc
subb
and
cmp
mov
and
lock
or
decl
xor
pop
repz
dec
inc
cmpsl
mov
js
jp
aam
dec
sub
fldenv
adc
fcomp
addr16
or
out
and
test
xchg
push
imul
test
stos
jmp
jge
mov
stos
pop
mov
adc
xchg
movsb
outsb
mov
fdivrs
in
out
enter
jae
sti
leave
push
xchg
inc
lcall
idivl
xchg
jne
daa
dec
adc
cmp
pusha
test
aaa
dec
std
mov
shlb
mov
movsb
sbb
xchg
mov
cmp
decl
testb
and
pop
dec
lret
je
xor
and
scas
lock
shrb
xchg
cs
out
adc
xchg
add
mov
jnp
fldl
out
jle
pmuludq
cmp
out
cmp
pushl
add
stc
or
pop
jmp
cltd
and
scas
sbb
xchg
push
pop
clc
push
sbb
pop
xchg
xchg
mov
lret
das
dec
xor
jmp
aam
imul
mov
add
in
cld
les
mov
ret
sbbl
push
mov
and
scas
inc
sbb
push
jae
mov
hlt
xchg
sbb
xor
inc
outsb
xchg
push
mov
adc
fs
jo
outsl
sbb
ret
sar
insl
adc
mov
aas
js
xchg
sub
andb
lods
imul
sub
push
icebp
lret
ljmp
cmp
jle
fimuls
in
mov
xor
shll
xor
les
hlt
mov
test
rclb
fisubrs
ljmp
lods
xlat
mov
testl
mov
xor
cmp
icebp
lret
mov
and
icebp
dec
mov
mov
mov
jns
fdiv
jmp
in
mov
pop
aad
pop
loope
mov
xchg
sub
cld
jno
int3
cmp
or
sarb
mov
add
xor
cmp
jle
rolb
adc
xor
gs
lahf
add
mov
dec
push
mov
add
adc
push
sbb
xor
lret
fistps
push
iret
dec
in
push
lds
rorl
lds
stc
aaa
sub
adcb
mov
jl
pop
sub
bnd
lea
test
and
lods
and
ljmp
jnp
ja
sbb
push
xor
pop
in
mov
adc
int3
stc
push
xchg
cmpsl
clc
add
orl
mov
add
and
out
mov
xchg
or
or
icebp
pop
stos
mov
mov
cmpsl
cmp
outsb
cs
bound
stc
mov
push
jno
imul
in
mov
push
dec
fists
sbb
loop
aam
into
rorl
lds
arpl
clc
je
stos
movsl
pop
sub
mov
or
and
or
ret
add
mov
sbb
mov
fldt
cmpsl
cmp
ret
pop
jbe
and
xchg
arpl
sub
push
scas
into
test
into
mov
inc
inc
fwait
xor
mov
leave
cmp
leave
xor
cmp
mov
lahf
inc
cld
cmp
sbb
xor
out
jo
ficoml
jae
in
stc
jmp
jge
jb
adc
dec
fimuls
popa
cmp
xor
add
sbb
insb
out
push
inc
push
fsubl
scas
pop
jge
loope
mov
dec
dec
or
repz
and
out
mov
outsb
inc
shl
cmp
je
xchg
fldl
mov
scas
pop
mov
jo
jno
adc
stc
aaa
jbe
ds
lret
xchg
fs
mov
mov
fcmove
icebp
pop
test
push
in
xor
pop
adc
jge
and
push
adc
xchg
push
xor
in
decl
sahf
xchg
loop
cmp
jmp
and
mov
sub
pop
pop
jns
cmc
mov
mov
aam
jns
nop
jle
andl
or
ss
js
add
loop
pop
push
nop
mov
movsb
pop
dec
fstpt
les
pusha
pop
adc
dec
loopne
pusha
sbb
pop
out
cmp
ds
sub
xchg
mov
sahf
add
dec
add
mov
int3
adc
and
ljmp
repnz
pop
pop
pop
mov
cmc
xor
sub
inc
lret
rcr
movsl
inc
lcall
enter
adc
roll
sbb
or
nop
pop
je
mov
mov
out
nop
dec
add
call
mov
or
mov
fldl
addr16
sbb
adc
pop
loop
test
daa
ss
mov
loop
sbb
xlat
push
mov
xor
js
insl
loope
dec
pushf
inc
cmpsb
push
sbb
insb
lods
mov
sub
pop
call
add
pop
xchg
mov
add
sbb
adc
lods
call
andl
out
addl
cmp
mov
std
xor
sbb
inc
iret
push
mov
pop
shlb
mov
cmpsl
int3
sbb
add
mov
jmp
jnp
lcall
push
xchg
loopne
out
outsb
int3
outsb
mov
and
add
add
rcrl
mov
sub
xchg
mov
sbb
mov
mov
sbb
sbb
stos
push
jmp
ret
dec
ljmp
bound
and
or
mov
repnz
es
fimuls
xor
repnz
jno
push
mov
cltd
cmp
stos
xor
loop
daa
xchg
push
xchg
outsl
in
sub
jae
sti
daa
bound
and
repnz
or
test
pop
ljmp
push
jle
xchg
stc
fnstcw
and
push
gs
divl
add
and
or
inc
mov
push
xchg
dec
dec
pop
insl
jmp
inc
cmp
push
xchg
push
pop
mov
lcall
adc
dec
rolb
adc
lods
aam
pop
xchg
rcrb
sbb
mov
xchg
dec
repz
into
fwait
add
fbstp
mov
adc
insb
int
sub
adc
mov
adc
mov
sbb
xchg
sarl
mov
sub
lds
stc
sti
mov
cmovl
imul
stos
sub
jle
jecxz
lret
stos
test
adc
sbb
mov
push
jbe
push
jae
sub
in
pop
out
xor
sub
jnp
cmp
lock
call
mov
inc
xlat
sub
sahf
daa
xchg
stos
inc
add
fadds
jne
mov
lods
loope
ss
insl
jmp
xchg
inc
out
mov
add
mov
mov
movsb
cmp
jns
sbbb
roll
sub
sub
cmp
iret
xor
jmp
or
cmp
dec
rorb
scas
daa
mov
mov
adc
aas
xchg
test
cwtl
mov
fdivrl
adc
mov
push
push
jbe
addr16
dec
movsl
push
outsb
fistps
call
imul
push
test
cmp
leave
push
push
int3
outsb
xchg
int3
jl
sti
and
mov
push
mov
jne
jno
inc
jb,pn
or
push
ja
push
push
fisttps
arpl
xor
mov
mov
dec
decb
call
insb
leave
adc
sub
add
sbb
addr16
movsb
cld
dec
lods
out
mov
push
shrb
aas
cld
push
lret
xchg
es
lods
pop
mov
xor
xor
pop
sub
int3
repnz
into
fwait
xor
dec
lods
pusha
shr
jo
adc
loopne
jne
lret
ret
sahf
mov
enter
pushf
int3
ss
lret
aad
hlt
enter
in
jno
cld
andl
ja
mov
nop
xor
dec
xor
push
sub
ljmp
std
mov
mov
sbb
iret
je
mov
cmp
lahf
dec
dec
clc
aas
mov
or
jno
scas
xchg
test
xchg
fwait
in
mov
add
out
insb
push
aas
ljmp
sub
pop
pop
mov
cmp
xchg
add
ja
cmp
pusha
imul
cmp
dec
mov
jns
dec
adc
arpl
in
xchg
stos
add
xor
arpl
and
sub
and
xor
sbb
mov
xchg
jnp
cmc
cmp
pop
test
cmp
lock
addr16
ds
xchg
out
adc
sub
insb
clc
push
fcompl
xlat
stos
push
cli
lahf
clc
dec
repnz
adc
out
dec
mov
adc
and
xchg
dec
mov
call
push
fwait
and
xchg
lea
xchg
test
inc
mov
lret
insl
adc
push
add
jo
push
or
jno
push
ja
pop
ss
mov
push
sub
cmp
jg
movsl
xchg
shrb
fnstenv
jno
mov
imul
mov
ja
adc
jl
xlat
test
mov
imul
jae
push
adc
repnz
sbb
or
fcomps
dec
loop
jp
movsb
cmp
jnp
fsubr
add
into
cwtl
cs
jb
xchg
fs
arpl
push
pop
mov
pop
adc
mov
jbe
sub
inc
sbb
loopne
adc
aas
inc
stos
adc
xchg
inc
adc
rorl
lea
mov
icebp
or
mov
addr16
jo
jle
stos
xchg
ljmp
lea
xor
fidivrl
jae
inc
in
cmpsb
pop
nop
ljmp
mov
loop
enter
dec
mov
out
rclb
push
lds
loopne
inc
adc
iret
int
xchg
xlat
adc
sbb
xchg
sbb
test
pop
orb
xor
inc
push
xor
cmp
pop
jne
shrl
xchg
pop
je
mov
ds
add
adcl
cmp
out
push
fcoml
nop
jae
icebp
push
jmp
cs
cmp
add
out
cli
xchg
add
arpl
aaa
aas
addl
hlt
push
and
jo
sbb
rclb
adc
dec
xchg
xor
add
pop
inc
gs
icebp
push
imul
mov
xchg
add
xor
fucomp
f2xm1
sub
mov
push
shlb
mov
subl
data16
loopne
xor
jge
ret
cmpsl
dec
xlat
ja
mov
jg
addr16
mov
mov
xor
stos
inc
push
jnp
xchg
add
pusha
ret
cmp
addr16
test
cmpsl
jns
insb
stos
sub
add
je
iret
jmp
pop
mov
or
call
orb
adc
shrl
in
mov
and
mov
fstps
testl
int
push
or
test
push
xchg
ror
dec
add
lret
mov
sbbb
jl
icebp
fwait
mov
cltd
sub
in
push
rorb
shlb
or
pusha
outsb
adc
movsl
or
out
aad
les
loopne
je
pop
addr16
jp
and
xchg
xorb
std
movb
mov
fs
cmp
push
mov
out
int3
push
push
stos
or
xchg
mov
movsl
jns
cs
test
sbb
fsub
nop
test
xchg
movsb
aas
mov
dec
cmp
mov
ficomps
and
mov
iret
mov
into
cmp
pop
mov
test
addl
cli
push
jecxz
std
jb
or
lods
fwait
cmp
popaw
hlt
jb
or
decb
add
arpl
out
or
inc
add
ret
add
imulb
cmp
cli
mov
inc
push
jl
faddl
in
inc
xchg
jp
and
pop
cltd
xchg
cwtl
push
inc
mov
loopne
mov
insb
pop
push
cwtl
jae
cmpsl
setne
imul
cmp
mov
daa
insb
pop
es
mov
ficomps
push
loop
in
push
fldt
movsl
dec
insb
mov
adc
sub
mov
push
rol
shr
ret
icebp
gs
loope
mov
adc
stc
clc
pop
mov
mov
call
mov
add
and
rolb
sbbb
or
push
mov
movsl
enter
push
mov
jb
pop
cmpl
mov
xchg
fiadds
or
mov
sbb
fnsave
insl
sti
scas
jne
mov
or
mov
lcall
and
pop
arpl
push
xchg
push
mov
int
mov
pop
mov
mov
dec
sub
xchg
stc
mov
sahf
inc
adc
jmp
cmp
inc
pop
push
adc
dec
and
cltd
dec
add
imul
aaa
sub
addr16
sbb
fs
nop
mov
lods
jno
popf
fdivl
mov
sub
daa
or
hlt
mov
lods
inc
pop
aam
mov
and
mov
sbbb
call
arpl
iret
and
mov
adcb
adc
adc
test
mov
cmp
ja
add
ret
mov
int
inc
bound
in
cmc
cmc
xor
xchg
lret
push
jno
adc
fsubrl
aas
pop
lock
mov
cmpsl
dec
add
cmp
dec
and
leave
push
cmpsb
mov
pop
imul
push
dec
icebp
mov
fwait
in
les
es
cwtl
mov
sbb
pusha
pop
sbb
dec
inc
dec
push
fisubrs
in
sarl
xchg
int3
ss
hlt
add
jmp
mov
in
cwtl
das
mov
and
fcoml
ss
push
ret
xlat
in
aas
mov
fimuls
sub
clc
inc
inc
mov
fwait
movsb
lock
sub
sub
push
cmp
jno
push
add
mov
inc
test
jmp
push
gs
nop/reserved
ret
pop
icebp
scas
xchg
frstor
mov
fcompl
jne
test
add
hlt
lea
mov
sub
mov
je
adc
es
cmp
jg
xor
push
mov
test
fucomi
int
pop
in
push
cmp
push
pop
leave
mov
pop
push
and
inc
jle
jb
jle
inc
outsb
ja
test
lds
popf
dec
sahf
xchg
mov
adc
in
test
jbe
inc
pop
mov
mov
lret
mov
mov
insl
lahf
inc
dec
or
cltd
inc
xor
pop
add
mov
mov
mov
inc
aam
inc
add
sub
repz
mov
adc
fmul
les
mov
stc
jnp
sti
cld
test
ret
lods
imul
cmp
inc
ss
fwait
jmp
push
ds
out
dec
out
adc
scas
xchg
or
ds
cmp
into
sub
xchg
movsb
ss
dec
faddl
sti
dec
je
fsubl
es
pusha
andb
test
sbb
test
fcmove
ja
idivb
add
int3
mov
sbb
xchg
mov
add
mov
or
mov
dec
fcmovne
sub
shl
cld
pop
cs
stos
sub
cmp
test
mov
add
insl
sub
xchg
out
mov
loope
ljmp
pop
cs
or
sub
xor
or
jp
pushf
and
rclb
jo
rclb
add
sbb
xchg
mov
pop
pop
xchg
mov
xor
or
test
mov
arpl
loopne
rcrl
in
xchg
je
sti
push
add
push
sbb
mul
xor
cwtd
mov
jnp
icebp
sub
adc
cmpb
daa
pop
jmp
sahf
sub
aas
or
lsl
jno
xchg
call
add
js
push
xor
xchg
negb
jl
adc
pop
mov
cmc
repnz
fdivrs
mov
jmp
sti
ss
shlb
fidivs
insl
pminub
outsb
push
mov
lcall
outsb
pop
cmp
inc
daa
inc
xor
mov
aas
lahf
cmpsb
xchg
sbb
add
xorl
popf
push
call
inc
push
fiaddl
dec
dec
daa
sbb
cmp
mov
in
test
pop
cmp
push
adc
and
outsl
mov
jns
cltd
imul
inc
mov
sub
pop
mov
movsb
loope
adc
mov
cmc
sti
orl
add
adc
or
sub
enter
and
scas
dec
pop
sub
insb
orl
sbb
les
push
pop
fwait
add
mov
mov
jbe
int3
mov
xchg
or
pop
iret
mov
mov
jbe
pusha
add
hlt
loop
push
sti
push
jo
push
mov
roll
mov
jo
pop
pop
pop
pop
lcall
and
js
pushf
mov
mov
lret
imul
mov
or
pop
push
aaa
xchg
inc
ret
decb
add
int
xchg
jbe
xchg
jge
loopne
cli
addr16
jp
push
pop
add
imul
jns
mov
inc
dec
xchg
jmp
pop
cmp
hlt
cmp
cs
jmp
movsb
inc
add
movsb
push
aas
dec
pusha
xlat
inc
adc
mov
mov
addr16
les
jbe
xor
movsl
popa
push
mov
mov
and
mov
mov
shr
mov
jne
and
sub
bound
jmp
xchg
data16
imul
jmp
lods
stos
mov
jae
into
or
in
push
sbb
pop
mov
inc
mov
or
scas
pop
pusha
cmp
out
mov
popa
jb
push
mov
call
push
sub
adc
sbb
inc
pushf
jge
xchg
fwait
fwait
mov
and
mov
or
sbb
add
mov
idivl
popf
ret
fldl
jg
pop
inc
loope
fmulp
pcmpgtw
lret
push
and
sub
leave
xor
rcr
int
aaa
lea
push
iret
ret
cli
mov
or
test
je
faddl
in
insl
shlb
pop
xchg
out
sbb
dec
sbb
add
mov
sahf
adc
cmp
xchg
mov
xor
and
push
test
ds
mov
fidivl
fistps
in
jns
roll
mov
cltd
popf
out
mov
pop
cmpsb
push
leave
es
or
call
mov
cli
nop
mov
mov
jae
les
aaa
pop
xor
push
pop
in
add
loop
ja
add
inc
decl
mov
js
fld
fs
mov
mov
enter
mov
imul
bswap
cltd
push
pop
or
idiv
dec
das
pop
ret
adcb
and
loopne
push
dec
scas
fsubrl
out
cld
shlb
cmpsb
sti
mov
sti
xchg
arpl
pop
cmp
jmp
xor
shll
andb
xchg
dec
dec
lock
mov
push
fisubs
cmc
xchg
ret
pop
mov
rclb
cmp
jecxz
push
sub
xchg
repnz
fldcw
cltd
icebp
jecxz
add
or
pop
xor
enter
imul
jge
je
sub
stc
lret
cmpsb
in
rcr
rcll
push
adc
push
ss
pushf
pop
leave
and
fisttps
push
sahf
jns
out
jbe
out
mov
jbe
lahf
mov
pop
inc
inc
mov
mov
mov
ds
push
iret
shl
inc
cltd
xchg
out
js
push
add
push
adc
inc
mov
ret
mov
mov
jle
loope
lods
popa
ljmp
pop
sahf
dec
fidivs
orb
mov
or
xchg
xchg
mov
fdivrl
xlat
clc
sub
mov
push
mov
stc
xlat
dec
imulb
lgs
push
and
ds
fnstcw
xchg
inc
adcl
rcrb
shlb
iret
lcall
inc
insb
adcb
mov
dec
mov
mov
mov
andb
insb
ljmp
cmp
cli
loopne
mov
mov
pop
mov
mov
cmp
mov
aas
mov
ja
stos
repz
test
imul
jmp
sub
push
xchg
jmp
in
mov
repnz
fcomp
shr
mov
jle
stos
or
and
scas
dec
jmp
fs
xor
push
shll
sbb
push
aam
testb
repz
xchg
inc
xorb
lcall
pop
mov
jp
xchg
mov
nop
icebp
hlt
andl
sub
add
das
cmp
sbb
in
in
push
xor
aad
bound
ss
mov
or
or
push
sbb
loopne
push
dec
jmp
mov
ja
sbb
sbb
xchg
xor
call
testb
test
fidivl
mov
insl
cmp
cmp
mov
pop
pop
xor
orl
sub
movsb
jae
push
pop
and
pop
pop
cmpsb
test
sbb
popa
lcall
jl
movsl
and
out
or
pop
leave
das
add
lock
stos
int3
pop
mov
inc
mov
mov
sbb
add
out
fadds
inc
xchg
bound
shlb
sub
les
push
mov
jo
pop
icebp
adc
jge
xor
js
shlb
jle
js
add
addb
mov
hlt
mov
adc
push
stos
cld
or
xor
push
icebp
jno
mov
in
push
repnz
and
push
aad
cmpsl
sbb
sub
adc
std
ljmp
stos
push
mov
clc
movsl
push
call
mov
dec
mov
enter
lods
arpl
cmp
push
pop
cmp
or
subl
add
imul
insl
repnz
in
pop
fildl
mov
push
cmp
cmc
sahf
in
test
imul
cmp
push
jo
mov
mov
scas
js
repnz
adc
xor
push
outsb
add
notb
jno
inc
add
xlat
test
push
mov
adcb
xor
xchg
dec
pop
and
xchg
jmp
jne
push
xor
pop
cmpsl
mov
mov
test
sbb
add
inc
clc
sub
lea
addr16
imul
div
or
inc
les
fistl
mov
push
lret
and
dec
and
inc
std
dec
cmp
push
ror
sbb
jns
pop
dec
orl
cmp
pushf
mov
in
aad
ret
cld
push
mov
cmpsl
mov
xor
inc
xchg
je
jecxz
xor
in
pusha
mov
insb
ja
enter
imul
cli
xchg
nop
shll
dec
cmp
dec
dec
dec
jae
movsl
psubusb
inc
shl
cli
inc
in
imul
dec
test
lret
cmp
lcall
xlat
mov
sub
xchg
lcall
dec
pop
jecxz
dec
mov
lcall
cmc
push
xchg
fwait
cmc
fmull
cmpsb
enter
cmpsl
mov
sub
push
dec
loopne
sahf
dec
movsl
loope
insb
mov
push
add
or
xorb
repz
cmp
jp
or
mov
pusha
pop
dec
pusha
iret
adc
ret
mov
popl
movsl
xor
inc
inc
jl
sub
sbb
pop
pop
pop
mov
sti
add
and
dec
call
mov
vphaddudq
sub
xor
movsb
cmpsb
add
cltd
adc
and
popa
adc
loopne
js
ret
test
jb
mov
dec
inc
pop
adc
mov
repnz
pop
fs
xchg
aas
sbb
push
scas
jo
lea
out
push
or
mov
pop
test
ljmp
dec
cmp
shrb
adc
sub
jne
int
jns
arpl
adc
test
fwait
pop
add
mov
in
int3
out
push
enter
inc
dec
mov
sbb
pop
out
js
mov
mov
push
push
jg
jb
jg
testl
movsl
movsb
add
inc
jbe
jns
fs
dec
lds
frstor
jmp
push
push
push
push
sub
push
adc
push
jae
xchg
incl
cmp
lcall
and
inc
shl
icebp
jp
xlat
in
mov
nop
inc
cmp
lods
mov
sbb
or
or
pop
adc
fisttps
pop
and
ljmp
cmc
pushf
sarb
ret
fwait
lds
test
data16
inc
adc
shlb
std
ja
fstpt
dec
fidivs
jo
insl
pop
cltd
int
sbb
enter
in
cmc
stc
sbb
imul
iret
loop
popa
xor
push
das
pop
out
jl
push
fsubrl
and
pop
js
jecxz
xor
mov
inc
outsl
aam
push
int3
test
repz
or
out
loop
inc
mov
xor
inc
mov
lea
aam
call
mov
adc
lahf
adc
inc
leave
mov
dec
push
jne
mov
icebp
bound
inc
dec
sbb
cmp
mov
mov
add
mov
ljmp
insl
jns
or
mov
mov
xor
test
cmp
out
imul
mov
inc
sti
es
gs
sbb
les
imul
xchg
jb
das
call
dec
cli
lods
lahf
push
xchg
mov
ret
cmp
gs
scas
cli
push
xchg
cmovns
adc
push
lea
loop
in
roll
add
mov
and
xor
adc
sbb
and
in
orb
sbb
sub
and
addl
pusha
movsb
rorb
jb
ret
push
cmc
ret
sti
mov
lods
test
lret
sbbb
movsl
push
jl
adcb
imul
js
aad
jnp
lods
sub
mov
sub
add
xchg
push
sbb
ds
ljmp
imul
ret
cmp
sub
sahf
mov
mov
lahf
int3
sbb
mov
pop
clc
dec
mov
adc
inc
cmp
jae
cmp
lods
repz
fwait
mov
aas
jge
jnp
pop
repz
cli
push
jo
jg
or
daa
pop
cmpsb
jmp
jno
inc
pusha
and
lahf
ss
scas
ret
mov
push
shll
loope
pusha
andb
jecxz
mov
sbb
sti
jo
and
lea
push
cltd
cmc
mov
test
jmp
loop
mov
out
stos
xor
cltd
pop
adc
add
mov
dec
sub
ret
call
fisubs
jnp
push
es
sub
pop
out
ja
mov
pushl
add
cmp
ss
sahf
insl
mov
lds
lea
jnp
xor
enter
popf
inc
xor
ret
dec
mov
outsl
mov
dec
cmp
cmp
mov
in
out
nop
inc
repnz
xchg
push
push
xor
add
test
fmulp
fnstsw
jne
les
xchg
aam
movsl
xor
into
mov
sub
or
loop
popa
jae
dec
pop
loop
xchg
mov
lock
xchg
or
jb
xchg
dec
imull
push
adc
fwait
mov
mov
loope
dec
mov
add
adc
jo
jno
test
inc
dec
push
xor
jl
dec
xchg
xor
lret
xchg
rclb
arpl
mov
movsb
daa
xchg
xchg
lret
fcompl
jle,pn
push
push
push
mov
inc
testl
xchg
adc
insl
test
loop
or
add
and
inc
cmp
mov
mov
inc
aam
lret
push
fstpt
xchg
test
ss
mov
scas
aad
in
or
cltd
fs
pop
enter
rcr
iret
fidivs
std
loope
and
pop
scas
insl
or
dec
lods
sbb
sub
jg
push
pop
add
mov
inc
std
pop
adc
hlt
outsl
mov
jmp
dec
clc
mov
fnsave
mov
push
dec
jne
imull
lcall
xchg
mov
add
adc
sti
dec
or
call
test
arpl
adc
aam
lds
xchg
push
in
mov
test
jno,pn
jae
je
and
mov
sahf
and
dec
and
jl
outsb
adc
into
sub
cltd
mov
cltd
mov
cwtl
dec
push
xchg
int3
fsubrs
pop
mov
das
out
outsl
les
inc
cmpb
inc
mov
xchg
repz
xchg
sahf
out
add
movb
mov
lea
mov
inc
push
dec
jmp
inc
imul
push
int
shr
or
adc
imul
mov
push
pop
mov
loope
lds
mov
in
push
test
icebp
lret
xchg
xchg
inc
es
addr16
push
mov
ret
hlt
rorb
mov
cmpsb
jbe
or
and
pop
mov
cld
dec
dec
xor
xchg
pop
mov
add
mov
mov
ljmp
push
call
lods
inc
scas
shrb
push
and
das
xchg
adc
jno
outsl
enter
scas
je
mov
mov
imul
and
sub
shrl
repnz
pushf
test
push
jmp
jmp
mov
cmp
mov
ficompl
mov
xor
adc
ja
ja
cmp
lea
push
mov
into
loopne
xchg
push
sub
cmp
sbb
xor
mov
xor
xor
jb
cltd
inc
addb
and
mov
adc
in
aas
pop
std
dec
pop
aaa
icebp
pushf
jns
push
push
lcall
ja
fbstp
sti
das
int3
popf
dec
cmp
test
pop
pop
lret
int
add
pop
sbb
push
sbb
testl
ss
sbb
aad
fmull
mov
push
cmc
sub
sbb
jbe
in
popf
imul
adc
xor
lcall
jae
xlat
cmp
sbb
cli
in
cmc
aam
mov
dec
cld
out
call
mov
daa
inc
cs
pop
jmp
mov
daa
xchg
in
dec
test
mov
adc
call
cld
dec
fs
or
test
fistl
inc
cmp
pop
sbb
scas
lcall
mov
gs
and
test
xor
mov
and
je
out
push
ds
adc
jae
or
pop
lock
lock
out
sti
mov
inc
push
ffree
cmpsl
pushf
pop
lret
sub
cli
and
fildl
mov
std
dec
dec
xor
gs
push
int
subl
ljmp
sbb
les
mov
aaa
and
pop
lock
adc
mov
mov
aaa
sub
ss
push
aas
lods
aam
jmp
les
pop
mov
shrl
loopne
and
mov
pop
test
mov
ljmp
jge
out
lcall
mov
sub
add
inc
stos
inc
jns
lods
xor
mov
sub
xchg
and
aad
in
dec
xchg
fdivrs
inc
xor
test
loop
jns
iret
dec
repz
sbb
push
dec
cmp
ja
ror
test
mov
push
test
repz
sbb
xor
aas
out
pop
adc
pushf
into
fdivrl
push
movsl
testb
mov
mov
sub
mov
dec
jns
adc
sub
cmp
xor
stos
das
imul
sub
outsb
mov
outsl
and
ret
jo
stc
scas
jno
inc
movsl
out
mov
mov
xor
jmp
sub
adc
das
and
inc
in
repz
mov
xor
in
repnz
enter
movsb
sub
and
push
roll
stc
data16
and
pop
aad
mov
and
fisttpl
mov
je
dec
mov
cmpsb
mov
and
sub
inc
cmpsb
jbe
push
jmp
jecxz
in
dec
sub
push
and
jne
lea
jo
lcall
jl
or
lock
int
mov
push
or
aas
add
sbb
aas
xor
push
shrl
mov
ljmp
movsl
aam
mov
movsw
in
xchg
mov
xchg
loop
imul
or
cli
rcl
jns
ret
mov
mov
and
pop
or
imul
shrb
adc
mov
xchg
outsl
sbb
hlt
pop
test
shll
inc
test
jno
mov
incl
and
mov
push
fwait
xor
out
ret
mov
shlb
rcrb
cltd
lods
daa
mov
insb
cmp
daa
lahf
dec
rcrb
rorl
pop
shr
xchg
mov
and
pop
xor
movsl
hlt
ja
cli
loop
lock
mov
xlat
mov
pop
mov
sbb
je
ljmp
adc
push
lea
mov
or
jp
or
xlat
xor
jge
cs
cltd
xor
sti
and
lret
lock
orb
xor
sbb
and
popl
ret
lret
push
push
inc
push
leave
dec
cmp
repz
mov
out
imul
stos
ss
xchg
sbb
out
or
bound
jae
mov
mov
lahf
int
gs
cmp
cmp
jbe
or
sbb
add
push
xchg
cmc
outsb
or
imul
mov
jle
mov
cmp
push
mov
jecxz
ja
inc
stos
dec
arpl
std
pop
repz
rcll
scas
mov
dec
dec
int
push
aas
ret
movsl
notb
jbe
jp
xchg
mov
jmp
das
inc
sub
fstps
add
fsubr
ret
es
lds
movsl
call
pushf
sub
scas
jmp
sub
push
push
aas
lds
clc
ljmp
js
mov
jmp
arpl
or
mov
mov
adc
fisubrs
or
rcll
rolb
sbb
dec
inc
fsubrs
push
or
loop
add
add
stos
mov
aas
push
push
loope
int3
sbb
stc
dec
push
inc
sub
lret
push
sub
jae
or
inc
push
enter
repz
and
int
or
mov
xchg
jae
rcrb
stos
scas
or
cld
les
inc
scas
sub
mov
jae
hlt
fbld
pop
or
push
insb
pop
pop
mov
das
outsb
out
inc
adcl
jnp
out
popa
or
lahf
stos
rcr
xchg
pop
mov
popw
je
adc
ja
adc
fmull
or
lahf
xchg
jo
jge
pop
jg
inc
in
addr16
imul
ret
mov
in
scas
sbb
jae
ja
mov
scas
pop
cs
bound
xchg
cmp
dec
jg
clc
jae
mov
pop
stc
cli
das
inc
or
adc
jbe
push
push
outsb
pop
les
not
das
inc
iret
ret
push
xchg
ja
push
sub
dec
sbb
das
pop
jno
dec
mov
aas
int3
out
imul
lods
iret
push
andb
jbe
rorb
xchg
insb
fstl
incl
ja
push
pushf
cwtl
xor
movb
sbb
mov
mov
add
cmp
inc
bsf
push
jo
aas
push
loop
popf
and
aad
dec
in
or
mov
pusha
inc
dec
mov
push
sbb
fisubrs
pusha
xchg
sub
mov
cmpsb
pushf
cmp
pop
popf
outsb
pop
out
int
out
mov
fs
jge
stc
pop
arpl
fldenv
ljmp
fbld
cmc
cmc
pop
aaa
add
stos
in
fsubs
mov
imul
icebp
sub
inc
xchg
arpl
lds
or
cmp
push
cld
inc
std
xor
rcl
mov
aam
sbb
paddq
mull
and
mov
fst
jo
out
jecxz
or
fcoml
jns
add
and
mov
hlt
and
add
mov
mov
pop
insl
inc
pusha
and
js
movsl
sbb
mov
ret
jl
shll
push
fwait
out
fnstcw
repz
mov
int3
sbb
push
inc
sbbl
or
adc
xor
jns
sti
sub
test
int
pop
adc
push
dec
inc
add
mov
mov
mov
repz
cmp
das
les
jecxz
pop
div
mov
cmp
test
leave
std
and
lea
dec
jne
pop
jecxz
cltd
sub
js
adc
mov
fsubrl
adc
in
push
jbe
lds
test
xor
pop
clc
add
imul
adc
inc
lcall
ds
jbe
adc
or
push
push
lods
lahf
loopne
mov
mov
fidivs
add
mov
ds
stc
lds
mov
push
aas
fcoms
popa
jns
add
jmp
or
sti
add
or
and
pop
mov
xor
mov
lea
ret
jnp
add
sub
mov
test
jb
test
ljmp
sub
mov
push
das
shll
jno
xlat
rorb
aaa
daa
dec
movb
ret
lods
mov
xor
xor
adc
and
daa
push
rorl
jmp
in
fistps
fdivrs
mov
lahf
rol
cwtl
inc
mov
filds
sub
aaa
mov
shrb
add
push
fcmovne
int3
ljmp
ds
mov
jge
dec
jp
add
jb
adc
xor
pop
jno
cmpsb
pushf
pop
testl
in
daa
push
dec
pop
ret
pop
dec
add
xchg
and
cmpsl
xchg
lcall
test
cmp
loope
push
movsl
jecxz
sub
and
out
test
lret
cld
jae
dec
push
mov
jnp
leave
mov
xchg
jp
das
and
shl
cmp
popa
subl
jl
jmp
jg
insb
cmp
out
xchg
call
stos
xchg
ja
mov
mov
shl
mov
cmp
aam
ja
dec
cli
jecxz
jge
outsl
xchg
mov
scas
dec
or
cmp
scas
pop
popa
out
lahf
dec
xchg
xchg
mov
pop
popf
movsb
lea
xchg
fidivs
stos
mov
push
jg
lods
cmp
fs
mov
std
scas
movsb
add
sub
subl
jl
out
inc
xchg
sbb
xchg
lret
rcll
test
cmp
jo
clc
stos
and
dec
jnp
sub
lds
js
mov
mov
lods
cmp
cmp
lret
jecxz
jle
inc
mov
cld
pop
repnz
add
cwtl
mov
scas
sar
mov
pushf
movsb
cmc
or
or
mov
pop
jle
test
mov
lret
scas
hlt
jbe
fwait
adc
movsl
mov
xor
repz
imul
sbb
repnz
imul
in
dec
jmp
cmp
shrb
add
fists
out
pop
fdiv
push
leave
outsb
imul
jae
jno
inc
sub
hlt
xor
fnstenv
dec
icebp
jno
or
pop
pusha
pop
inc
imul
mov
aaa
fbld
ret
les
lods
jb
or
dec
mov
je
sbb
jns
adc
test
fists
mov
rclb
shl
push
pop
or
fisttpll
int
pop
scas
js
adc
inc
pop
in
movsb
loopne
jp
jne
cmpsb
fmulp
xor
xchg
inc
dec
inc
push
xlat
popl
or
test
mov
sahf
outsl
das
call
movsb
loop
out
shl
pop
sarb
movsb
scas
add
ret
push
pop
dec
je
sbb
rep
xchg
dec
inc
xchg
pop
xchg
roll
shll
stc
adc
mov
mov
leave
jno
and
arpl
push
popf
jnp
div
pop
repz
sub
pop
or
mov
push
lcall
mov
jns
jns
in
jns
mov
mov
subl
fcoms
mov
sbb
cmpsb
cmp
rcll
add
pushf
jmp
sbb
psllq
jns
outsl
dec
lahf
popa
adc
sub
sbb
and
fsubrp
pop
loopne
enter
cli
add
pop
popf
stos
hlt
add
xchg
mov
jge
mov
sbb
mov
out
jecxz
push
adc
aas
cmp
loop
fidivrs
nop
or
inc
into
mov
in
pop
sbb
call
jns
lret
addr16
dec
in
dec
mov
cmc
xor
cld
int3
cli
outsb
or
ljmp
add
xchg
bound
dec
loop
and
cwtl
int3
dec
fidivrs
ss
mov
xchg
enter
enter
inc
lds
push
repz
xchg
lea
push
cltd
jmp
xor
and
adc
and
dec
jge
jno
jnp
test
sbb
icebp
cmp
lret
add
add
add
imul
outsl
sub
dec
pop
mov
sub
scas
inc
mov
add
push
dec
arpl
jb
fadds
cmp
cmp
push
ljmp
mov
cltd
push
and
rol
sarb
pop
mov
out
sbb
imul
jle
std
dec
lret
loope
hlt
std
cmpsl
cmp
sub
imul
and
xchg
pusha
out
orl
adc
mov
mov
into
inc
movsb
popa
out
and
insl
cltd
mov
inc
rcrb
andl
stos
adc
dec
bound
push
fsub
je
fs
lea
shr
cltd
jle
js
lahf
cltd
adc
adc
ds
push
fisttpl
add
mov
test
fildll
stos
adc
out
mov
scas
xchg
mov
orb
cmp
jecxz
push
dec
adc
sahf
xor
jg
pop
cmp
mov
xor
in
or
cmpsl
dec
inc
pop
in
insb
imul
push
pop
adc
jb
add
adc
pusha
lss
leave
pop
loop
sahf
shrl
sub
jnp
aas
cmp
push
xchg
mov
aas
aaa
inc
int3
cmpsb
pop
xor
rcr
mov
pop
mov
sbb
popf
pop
push
lock
push
inc
test
xor
inc
push
int3
or
or
std
pop
nop
leave
rolb
out
jmp
pop
xor
ljmp
addb
xor
aad
lods
sub
insb
jge
add
push
add
jo
loope
inc
fdivs
enter
jge
scas
bound
lahf
imul
loop
cmpsl
mov
aam
repnz
push
jl
jo
fisubrl
cmp
cli
insb
icebp
mov
test
or
enter
je
add
jb
sub
sarl
pop
jns
leave
jns
inc
js
cmpsb
inc
dec
mov
push
mov
adc
les
cmpsb
ret
ficompl
arpl
inc
hlt
sti
inc
mov
mov
aam
jnp
xor
mov
and
mov
pop
mov
cli
repz
sub
out
adc
push
daa
lahf
dec
mov
push
jnp
pop
rcrl
add
outsl
stos
out
sub
inc
or
adc
cmp
iret
inc
fidivrl
lahf
mov
scas
lcall
add
push
insl
push
cld
pop
cmp
sub
sahf
loopne
cmp
shlb
cmovs
sub
std
inc
rcl
jae
xor
mov
mov
or
cmp
jns
in
push
push
adc
test
mov
xlat
arpl
jae
jl
pop
mov
add
dec
sub
mov
test
out
mov
mov
xlat
repnz
push
incb
xchg
jnp
mov
ljmp
xor
sub
cmp
add
outsb
jmp
imul
push
shll
cmpb
pusha
ds
mov
fbld
push
push
mov
icebp
fldcw
xor
insb
push
scas
mov
xchg
bound
mov
ljmp
pusha
or
inc
jp
push
cmovnp
pop
pop
xchg
das
rcrl
cwtl
sbb
inc
jp
lods
loop
inc
les
mov
shll
cmp
sub
dec
or
imul
in
dec
lock
xor
repz
int
and
cs
movsl
sti
das
add
and
in
std
add
in
push
out
stos
adcb
lods
dec
add
insl
out
stos
push
lock
cltd
clc
gs
inc
or
push
sub
shlb
addr16
es
lods
cmpsb
jbe
sbb
inc
mov
mov
fcomi
mov
inc
insb
clc
hlt
sbb
rorb
pop
out
aaa
add
shlb
push
imul
jle
push
popf
sub
fsubrl
mov
aas
sbb
or
mov
mov
inc
loopne
dec
or
xchg
sub
sbb
dec
popf
mov
sarl
jge
loope
push
aaa
xor
mov
mov
sbb
adc
and
inc
push
mov
adc
ja
es
xchg
nop
popa
xor
push
xor
lret
enter
inc
xchg
in
adc
sub
push
mov
pop
xchg
mov
popf
jb
dec
fsts
in
rolb
jecxz
cltd
gs
repz
jbe
lds
jno
dec
fsubrl
and
mov
and
gs
data16
scas
jae
sub
mov
xor
mov
pushf
loope
push
sahf
sbb
push
cmp
into
sarl
scas
push
jae
mov
aam
cltd
outsb
mov
in
test
lea
xchg
mov
jo
icebp
sar
dec
daa
pusha
mov
int3
ror
mov
push
loope
add
jl
jnp
sub
loope
push
adc
jo
push
xlat
lods
mov
mov
and
sbb
shlb
mov
cmp
into
testb
orb
inc
pushf
and
mov
lret
and
sbb
insl
xlat
repz
fsubs
repnz
mov
jae
push
xchg
xchg
aam
xchg
pushf
push
mov
mov
xor
push
lea
push
in
inc
js
xor
cli
xchg
push
in
nop
sub
shrl
sbb
push
cmp
test
pushf
pop
mov
jmp
mov
pop
cmpb
addr16
xchg
or
and
push
cmp
imul
scas
mov
inc
jbe
pop
mov
andnps
pop
mov
sub
testb
ljmp
mov
xchg
in
xchg
imul
add
cmp
mov
mov
jbe
dec
pop
mov
jg
les
mov
in
stos
mov
add
arpl
aas
fs
sub
aas
xlat
stos
mov
mov
and
scas
and
enter
jne
jo
data16
sti
sub
in
and
lea
dec
data16
dec
xor
popf
mov
add
pop
sub
test
sub
cmpb
xor
push
add
pop
js
mov
dec
cmc
dec
outsb
hlt
shrb
mov
test
mov
adc
out
inc
mov
inc
add
xchg
orl
hlt
push
xchg
pop
push
add
inc
mov
addl
daa
mov
outsl
mov
icebp
jge
inc
into
mov
out
mov
das
jnp
push
add
cmc
out
jbe
fsubp
jmp
mov
or
test
lods
jp
jle
andb
int
daa
jae
xchg
sub
lds
stc
cmp
xchg
subb
pop
xchg
dec
mov
push
jno
mov
jmp
xor
xchg
ja
cmp
add
in
js
lret
pusha
das
imul
popf
test
popa
jae
lahf
es
xchg
sbb
insl
dec
pop
xchg
mov
das
and
mov
jmp
sbbb
pop
sub
sbb
push
andl
sbb
fimull
stos
or
lods
cltd
cltd
xor
cmpsb
aas
sub
dec
leave
in
lret
pop
cmp
subb
pop
pop
xlat
xor
push
inc
add
adc
dec
xor
push
sbb
add
jg
mov
stos
dec
inc
push
cmc
xor
mov
std
xchg
mov
pop
ret
movl
inc
push
stos
mov
mov
sub
pop
rcr
sbb
pop
and
jns
gs
aaa
dec
repz
ja
jecxz
add
pop
adc
repnz
mov
or
add
mov
jo
test
mov
jns
cld
jno
add
roll
cmp
pop
xlat
mov
add
push
test
pop
adc
iret
leave
repnz
xchg
mov
sbb
adc
fiadds
push
mov
adc
cltd
dec
cmp
mov
stc
xor
push
daa
pop
pop
popa
pop
fwait
mov
lret
sub
pop
xor
imul
mov
cmp
push
push
test
lods
into
je
xchg
jp
aad
shlb
nop
mov
subl
faddl
jb
out
adc
cmp
or
out
push
in
pusha
dec
popa
xor
loop
or
pop
leave
or
ficompl
sbb
rorb
mov
outsl
shll
leavew
pusha
push
sti
sbb
xor
loopne
shll
adc
cld
lea
in
xorb
lods
xorb
or
or
push
push
fnstsw
xlat
pusha
cmc
ret
into
cmp
sub
adc
adc
fsts
lods
inc
int3
sbb
push
fstps
imul
insb
xor
popa
push
in
rcl
out
popa
scas
cmp
icebp
mov
add
pop
stc
aam
out
and
push
fwait
pop
ret
subb
pop
cmpsl
push
clc
xchg
pop
clc
sub
dec
and
test
inc
fcmovnu
lods
push
lahf
inc
cmp
and
arpl
dec
xchg
out
js
adc
jecxz
jbe
xor
jo
fsubrs
cmc
lock
xchg
push
push
mov
movsb
jg
xlat
movsl
jl
mov
lock
pop
test
out
inc
movsb
mov
jle
mov
hlt
mov
cmpsl
xchg
imul
cmp
imul
jne
std
mov
or
dec
fnstcw
adc
and
xacquire
dec
inc
sub
mov
cli
mov
fisubl
xchg
mov
push
add
lahf
push
dec
int
pushf
adc
sti
mov
fcompl
rolb
pop
jmp
mov
mov
lods
adc
ja
xchg
cmp
cmp
dec
jbe
ljmp
xor
jnp
mov
xchg
jb
cld
lret
mov
mov
xor
ss
div
loopne
shr
add
movsb
mov
test
sub
push
adc
rcl
stos
shr
stos
gs
test
sub
out
cmp
lods
into
pop
adcb
std
push
pop
scas
adc
stc
data16
push
lahf
iret
test
pop
jge
ret
mov
or
fs
mov
push
sub
ja
call
fists
sub
push
jp
jne
fs
shrb
loop
jnp
iret
fisttpl
into
ljmp
cmp
stc
movsl
dec
jbe
mov
push
and
pop
sbb
xor
push
cld
in
stos
mov
fdivrs
add
leave
mov
mov
inc
ljmp
adc
or
push
sbb
stos
xchg
mov
pop
lcall
mov
xor
mov
lea
mov
daa
idiv
xchg
test
adc
push
dec
push
ffree
jecxz
negb
mulb
cmpsb
sub
repnz
cmp
in
repnz
inc
cli
dec
mov
mov
push
jecxz
dec
imul
mov
mov
xchg
rolb
jge
mov
iret
outsb
pop
cwtl
push
imul
cmpsb
xor
mov
sti
cmp
int
scas
repz
pop
push
xchg
fnstcw
andl
dec
jo
les
lods
xchg
cmp
xor
pop
inc
in
mov
and
dec
mov
jns
cmp
pop
jnp
jg
pop
push
sbb
bound
shlb
pop
cs
push
pop
test
push
test
ss
fldl
or
xchg
mov
xor
fimull
das
scas
inc
shll
jo
dec
shll
dec
repnz
push
mov
fisubs
movsb
fs
jecxz
adc
mov
mov
mov
loop
ficomps
lret
jecxz
movl
mov
pusha
mov
push
mov
sbbb
in
shlb
jbe
and
incb
sub
in
and
adc
jo
mov
and
mov
js
push
cli
clc
int3
push
inc
inc
shrl
cmpsb
inc
inc
xchg
inc
loopne
pop
or
add
mov
shrl
xor
jbe
pop
xor
scas
inc
std
mov
in
and
and
lods
dec
ret
cmp
ss
inc
imul
pop
jle
mov
xchg
mov
jne
dec
adc
setns
xor
into
repnz
lea
or
nop
fbstp
pop
mov
imulb
fisttpl
test
fnstsw
rcll
push
push
mov
or
imul
subb
cmc
or
push
repnz
andb
test
cmp
mov
loope
jmp
push
jne
sub
mov
xor
inc
cltd
and
lock
add
mov
stos
les
jge
leave
not
loope
icebp
shlb
cmp
or
pop
sarb
fs
sbb
jno
fsts
inc
test
mov
xor
iret
xchg
push
jmp
enter
xor
mov
sahf
inc
jp
std
jg
lret
push
std
adcl
inc
imul
push
xchg
dec
ret
sub
sub
cmp
xchg
add
and
ljmp
mov
mov
cli
jmp
mov
loopne
jno
cmc
inc
jecxz
push
daa
push
cld
je
dec
pop
ret
test
xchg
or
aas
xchg
dec
insl
imul
and
cmpb
xchg
aaa
in
push
fisttpl
mov
insb
push
xchg
add
mov
in
mov
mov
lods
jmp
out
stos
dec
ret
shrl
mov
call
in
loop
pop
sub
imul
stos
aam
imul
jg
pop
mov
aam
popa
pop
jo
fcomi
add
insb
xchg
out
ljmp
aaa
sub
jg
stos
cltd
xchg
cmp
mov
dec
leave
xor
mov
or
nop
xorl
fisttpll
popa
adc
push
and
lahf
xchg
or
pop
mov
adc
and
jne
jo
pop
mov
das
add
leave
imulb
cmpsb
dec
pop
and
or
gs
in
loop
dec
and
mov
out
adc
testl
ficompl
cmp
mov
add
mov
lret
pop
pop
dec
dec
xlat
jge
nop
or
mov
rclb
pushf
cld
mov
stos
dec
mov
push
push
dec
mov
xchg
adc
pop
sbb
fsubl
dec
push
mov
lret
xchg
pop
cmp
jae
mov
rcrl
arpl
xchg
in
addr16
ficoms
cmc
sbb
or
pop
test
jge
popf
xchg
push
dec
dec
ds
mov
sub
enterw
jae
inc
call
or
lcall
lahf
iret
cmp
or
daa
sub
jg
in
jl
inc
adc
adc
mov
ja
adc
lret
dec
jmp
fsubr
shll
dec
xor
cmc
daa
ljmp
stos
movsl
daa
or
fsubrs
mov
sbb
add
inc
test
mov
jo
mov
jbe
mov
push
sub
shll
out
xchg
inc
xor
jnp
jo
mov
push
outsb
jns
mov
cmp
mov
adc
push
cld
sarl
lret
lods
xlat
je
scas
mov
mov
jg
loop
or
cwtl
pop
lret
push
bound
cmp
call
pop
add
fcomip
movsb
mov
lods
js
xor
rorl
notb
fisubrl
ffreep
adc
or
ljmp
movl
lock
das
cmp
sub
dec
jb
jb
sub
nop
add
or
clc
lods
dec
dec
mov
hlt
dec
jg
pop
cmp
or
xchg
in
sub
addl
dec
mov
pop
mov
mov
dec
jmp
ds
push
fdivrs
push
push
fucom
imul
aaa
ja
mov
bt
xchg
sar
pop
xchg
out
rorl
test
inc
and
ret
push
or
icebp
repnz
mov
rcrb
in
mov
outsl
xor
and
mov
mov
push
sub
mov
xchg
push
xor
push
lcall
nop
hlt
cmp
in
jno
and
ja
scas
aad
dec
pusha
xchg
or
shlb
pop
cmpsb
dec
dec
sub
xchg
sbb
adc
mov
jb
push
cmpsb
test
rcl
jnp
scas
jecxz
ret
jecxz
lahf
xlat
push
fisttpl
mov
roll
mov
cmp
fstl
sub
mov
jbe
adc
sti
in
cld
int3
in
leave
les
xchg
jmp
xchg
sarb
and
dec
fmull
add
in
xor
xchg
daa
mov
ret
test
shrb
js
dec
cmpsb
sbb
cld
add
movsl
mov
jns
xchg
cmpsb
das
icebp
mov
push
out
add
ja
dec
cltd
push
cmp
sbb
lret
cmp
xchg
aas
mov
push
mov
cmpps
mov
fs
scas
or
stos
jae
in
rolb
das
bound
hlt
mov
stc
aas
xchg
sbb
cwtl
dec
xor
jmp
sub
lods
and
pop
sbbb
xor
mov
aas
repz
mov
push
jp
inc
ss
insl
outsl
cmp
gs
sub
fbstp
adc
cmp
push
frstor
loopne
xor
shrb
icebp
pop
std
nop
stos
outsb
xor
cmpsb
jl
or
aam
stos
in
xchg
jmp
cmp
and
inc
jbe
sbb
jns
das
mov
shlb
inc
sbb
xor
out
addb
adc
dec
cmp
or
mov
adc
daa
dec
cmp
mov
shrl
dec
jne
out
adc
mov
push
xor
push
pop
xor
out
roll
mov
pushf
imul
adc
or
ret
inc
mov
sub
clc
shr
fbld
dec
mov
pop
insb
cmpsl
mov
xor
insl
xor
mov
decl
xchg
push
jne
jmp
lods
add
aas
sub
cld
ja
leave
xchg
stos
mov
inc
sbb
leave
pop
das
sti
pop
xchg
roll
and
push
das
mov
sti
dec
xor
mov
imul
xchg
jb
xchg
adc
js
and
xchg
pushf
ficoms
push
cmc
int
insb
mov
popf
cmp
push
mov
xor
lret
pop
xor
ds
push
enter
subl
sbb
xor
jne
xorb
mov
adc
jmp
jo
mul
fnstenv
xchg
aaa
loopne
cwtl
and
movsl
aad
loope
xchg
cmp
or
mov
call
dec
loopne
or
cmp
lods
std
dec
xchg
jp
into
out
stos
daa
ud1
cltd
data16
out
mov
pusha
mov
rcl
nop
stc
mov
ja
push
int
adc
xor
popf
popf
push
outsb
pop
shrl
jg
mov
sahf
incb
and
xchg
cmp
sub
int3
sahf
or
ret
outsl
scas
in
std
jbe
jecxz
sbbb
lea
in
ds
pop
pushf
jmp
lcall
sbb
addr16
fsubrp
sub
cmp
mov
cmc
push
fwait
inc
adc
cmpl
int
or
jp
js
adc
mov
lock
cmp
jle
ljmp
outsl
push
jo
and
pop
repz
mov
shl
mov
mov
sbb
inc
ficomps
mov
sub
not
push
mov
iret
cmpsb
push
inc
and
insl
mov
sti
inc
mov
xchg
add
movb
es
sub
xor
mov
loope
and
add
lds
xchg
mov
icebp
in
imul
in
mov
xchg
mov
inc
push
stos
and
dec
lcall
cld
sub
jno
jp
push
cmp
loopne
xor
jl
popa
bound
jo
or
push
popl
sub
cli
push
stos
inc
sbb
daa
fwait
sbbb
mov
mov
mov
cld
and
sahf
adc
jne
addr16
imul
scas
js
and
adcb
repnz
xor
cmpsb
fisubl
js
dec
xor
pop
mov
mov
pop
dec
mov
lods
cmp
jmp
sbb
inc
pop
jnp
bound
cli
rcrl
cmpsb
push
mov
sbb
xor
adcl
insb
sub
pop
hlt
jmp
imul
adc
dec
lcall
adc
loopne
push
pop
insl
push
jge
lods
clc
cmp
ret
outsb
je
iret
mov
jae
fidivrl
cmp
xor
out
fnstenv
mov
mov
out
or
mov
imul
shlb
das
xchg
outsl
fcoms
or
jp
add
sub
sbb
mov
push
xor
inc
lret
pop
inc
aad
lcall
dec
inc
addr16
sub
out
nop
cmp
push
mov
fidivrl
mov
push
loopne
int
sbb
adc
mov
scas
dec
bound
add
aas
pop
sub
lds
popa
in
mov
xlat
shll
lock
sahf
or
outsl
mov
xchg
sbb
nop
arpl
sbb
xchg
xchg
dec
das
fidivl
xchg
jge
cmp
sbb
cmp
inc
inc
iret
push
push
pop
cmp
in
ss
sahf
or
or
fsts
dec
jle
pop
insl
add
mov
cli
inc
xchg
xchg
jbe
mov
pop
jae
adc
fnstcw
test
fs
add
sbb
add
pop
int
add
ss
push
mov
fidivs
cltd
sub
xor
lret
aaa
xchg
scas
lock
push
lods
lods
sahf
jge
sbb
test
pop
outsl
adc
jge
xchg
push
leave
ret
movsl
sar
movsb
mov
dec
and
mov
mov
mov
adc
dec
repz
push
pushf
ljmp
scas
fisubl
filds
jge
insl
pop
in
dec
cld
xor
sar
jnp
clc
loope
mov
stos
movsb
rcrl
jbe
mov
lock
cld
pop
mov
in
push
inc
cmp
cli
lock
cmpsb
dec
adc
dec
push
cs
xorb
jmp
fcomps
dec
mov
xchg
add
stos
mov
mov
inc
sub
inc
pop
sbb
inc
jns
fadds
xor
sahf
js
call
arpl
xlat
mov
mov
or
add
push
jo
sub
imul
lods
test
or
mov
jle
shll
mov
jecxz
enter
shlb
sub
mov
leave
sbb
daa
call
mov
stos
mov
hlt
fiaddl
clc
inc
data16
or
es
cli
cmp
icebp
cmpsl
add
insl
out
xor
mov
sahf
sarl
ret
pop
cmp
cmc
mov
jo
push
mov
fwait
ds
lcall
loopne
mov
sub
adc
mov
lea
ret
xchg
sbb
je
aas
dec
outsb
fiaddl
addr16
lock
pusha
mov
nop
push
adc
jle
repnz
je
pop
dec
or
mov
pop
nop
enter
les
lret
out
fimuls
pop
push
xor
xchg
pop
dec
stos
addr16
inc
jp
daa
sbb
out
stos
mov
lds
sub
or
imul
push
xchg
testb
movsl
fisttps
int
fistl
fdivrs
loop
jle
xor
xor
or
iret
sub
lock
mov
or
xchg
dec
sti
xchg
lret
cli
insb
out
jecxz
fldl2t
push
jns
push
ja
popa
lcall
xor
mov
inc
push
mov
ret
xor
fidivl
js
mov
popf
imul
sbb
add
xor
aas
jo
and
sub
mov
sbb
add
sub
idiv
imull
cli
push
call
icebp
cmpsl
add
sbb
je
pop
repz
test
lret
mov
fbld
dec
imul
fiaddl
xchg
xchg
jle
sub
or
lret
mov
sbb
pop
jae
jge
pop
push
scas
hlt
mov
cmc
inc
ret
jne
pop
push
xchg
pop
lret
push
data16
jns
add
add
mov
add
jp
jbe
sub
rorl
add
adc
mov
mov
mov
into
xor
or
push
js
inc
fmuls
movsl
pushf
cli
lcall
addr16
inc
xchg
lods
mov
roll
out
mov
in
nop
inc
xchg
xchg
lods
mov
cmp
lahf
outsb
rclb
mov
mov
int3
xchg
xor
cmp
jnp
clc
outsb
imul
push
or
mov
fdivl
or
out
xor
loope
pop
in
jl
mov
ds
sub
add
adc
jmp
cs
add
lds
jae
xlat
stos
push
lret
lock
xchg
mov
inc
dec
push
pop
shrb
or
in
jle
mov
pop
pop
fildll
mov
cwtl
xor
icebp
add
inc
stos
fwait
pop
jge
pop
aad
mov
inc
pop
xlat
pop
pop
mov
fcomi
push
cltd
or
sub
xor
mov
out
push
mov
xor
jmp
inc
cltd
xchg
in
hlt
push
jb
and
push
addl
mov
addl
mov
adc
mov
jne
jo
pop
push
jg
push
cld
inc
inc
or
mov
sahf
ljmp
mov
pop
adc
xorl
mov
push
add
dec
pushf
out
scas
lods
adc
dec
int3
pop
add
mov
outsl
scas
jp
push
push
pop
inc
orb
add
pop
test
sub
cmp
pop
loopnew
aas
cli
add
aaa
loopne
bswap
kortestb
sbb
test
add
movsb
cli
sbbb
bound
inc
and
cmp
xlat
xchg
xor
mov
popf
imul
add
imul
inc
xchg
inc
cmpsb
jbe
das
mov
inc
stos
or
mov
imul
and
imul
push
sbb
ljmp
nop
xor
icebp
fists
bound
repz
jo
jecxz
pop
sub
inc
cmp
shlb
jp
pop
inc
and
test
and
cmpb
mov
adc
cmp
lret
aas
xor
pop
fsubs
mov
repnz
push
pop
xchg
sub
inc
adc
mov
pusha
test
shrb
pop
or
scas
cltd
nop
movsl
mov
dec
mov
fildl
push
and
push
mov
loopne
test
xor
adc
push
outsl
cli
xor
and
out
cmp
cmp
cld
dec
mov
jnp
push
push
or
les
mov
sbb
mov
cmpsb
in
pop
je
repnz
pop
push
jb
fildll
jmp
or
xchg
lods
mov
rolb
cmp
xchg
das
xor
xor
je
je
andl
aad
repnz
pop
insb
iret
in
into
iret
or
sbb
mov
mov
xchg
push
push
nop
add
loopne
mov
dec
xchg
xchg
sbb
mov
and
cld
fcmovnb
adc
clc
mov
ss
andb
testb
movsl
lea
push
gs
cmp
cltd
movsl
or
sbb
mov
push
dec
cmc
sub
mov
mov
repz
pushf
lahf
cwtl
int
fisubrl
push
mov
sub
dec
fcmovnb
push
in
xchg
outsl
mov
inc
mov
enter
arpl
jp
aad
add
xchg
inc
sub
jp
int
icebp
aas
xor
mov
mov
mov
fstpt
dec
cld
mov
jle
dec
inc
aaa
and
jge
or
mov
dec
pop
arpl
adc
repnz
mov
ror
cmpsl
hlt
sbb
mov
jae
push
jcxz
ljmp
add
and
das
scas
pop
adc
stos
hlt
std
sub
xor
push
sub
ret
clc
cmp
sbb
sbb
dec
ja
ret
ja
js
aas
pop
in
jp
icebp
sub
fs
lret
push
fdivrs
jae
sub
dec
pop
push
add
mov
sbb
push
arpl
mov
test
dec
push
das
je
push
fcoms
xor
jmp
out
add
mov
fld
push
loop
pushl
mov
test
pop
adc
pop
xchg
dec
dec
xor
jnp
jle
dec
stc
movsl
mov
in
mov
cltd
cmpsl
push
test
xor
add
adc
popf
jnp
push
mov
dec
sbb
xor
and
std
sbb
icebp
jmp
sarl
scas
rcrl
cmp
lret
xlat
inc
addr16
xchg
jecxz
add
or
stc
xor
pop
xor
pop
mov
adc
jae
or
sahf
cmpsl
dec
je
xor
jb
movsl
cmp
fcoml
push
ja
mov
pop
sbb
fucomip
push
enter
scas
sbb
clc
xchg
and
cli
mov
mov
xchg
shrl
cmp
cs
xchg
mov
das
cmp
push
mov
fists
xorb
add
mov
jle
aam
pop
push
clc
fimull
pop
out
lret
popf
mov
push
inc
ja
mov
jb
or
js
sub
lret
jge
add
inc
and
mov
shl
hlt
xchg
dec
xchg
pop
mov
dec
gs
scas
dec
xchg
jns
dec
setne
sub
sahf
lods
movsb
sub
dec
mov
cmp
popf
mov
aad
je
mov
shlb
push
or
sbb
mov
lret
sub
sbb
xor
mov
int
pop
sub
inc
test
jns
sarl
cmpsl
xchg
sbb
xlat
stos
imul
mov
mov
dec
in
jne
in
je
push
aaa
inc
xor
sbb
jecxz
rorl
xchg
sarb
lds
adc
fdivs
popf
add
mov
inc
es
mov
jl
push
out
addr16
sub
std
xor
cmpsl
fcomps
pop
mov
div
fdivs
sub
inc
mov
and
out
jns
movb
mov
fimuls
fnstsw
jno
inc
push
mov
dec
sub
popf
dec
adc
jnp
sarb
lret
inc
rorl
sbb
mov
jno
pusha
in
out
adc
andb
daa
jg
dec
jg
in
aas
nop
and
add
xor
xor
push
xchg
mov
fcompl
imul
adc
stc
fisubs
sbb
mov
pop
push
and
or
pop
push
add
sub
xchg
push
xor
mov
in
aas
xor
adc
mov
cwtl
sarl
xchg
inc
cli
xor
add
mov
stos
dec
out
out
sbb
sbb
push
dec
lods
mov
shl
out
shlb
sub
test
outsb
and
ds
orl
std
in
int3
push
lods
testb
out
adc
lss
mov
nop
push
jl
add
icebp
stos
mov
xlat
outsl
popf
inc
fwait
mov
daa
negb
adc
xor
or
scas
mov
sbb
or
call
push
cmp
jl
mov
jnp
add
push
push
mov
adc
std
mov
leave
sahf
sub
adc
lret
xchg
jb
mov
ljmp
push
xor
jl
mov
inc
outsb
jae
ss
fwait
bound
fcmovb
xor
cwtl
pop
dec
xor
xlat
and
leave
ficompl
mov
inc
scas
pop
stos
mov
jl
fsubrp
loop
daa
icebp
test
jno
imul
push
add
sub
vphaddbq
dec
out
dec
mov
mov
push
jle
jp
sub
adc
or
sbb
jno
cmp
dec
lret
mov
inc
lods
sub
test
xlat
mov
xchg
cltd
and
movsl
test
sar
ljmp
addr16
sbb
test
cmp
nop
rcrl
push
and
in
jle
data16
xchg
xchg
das
xor
jle
je
xor
je
les
jmp
fucom
xor
sti
shrb
in
cmp
dec
add
jmp
mov
outsb
scas
adc
jb
lret
leave
or
fdivrl
js
xor
mov
imul
mov
sbbl
pop
popa
mov
call
movsl
les
arpl
movsl
loopne
inc
and
out
mov
outsl
xchg
xor
stos
fildl
test
jecxz
fs
adc
add
orb
pop
stc
mov
bswap
or
aad
ja
mov
fsub
sub
inc
imul
xchg
inc
cmp
rorl
pop
xor
mov
push
ficoml
and
arpl
adc
mov
cli
adc
jo
jbe
imulb
cmpsb
pop
in
and
cwtl
mov
or
test
fldcw
pop
cmp
cmpb
push
inc
shrb
out
mov
adc
jmp
cmpsb
xchg
icebp
movsb
loop
out
adc
xchg
mov
or
nop
jnp
adc
lock
and
in
jl
sub
jb
push
push
out
pop
and
sbb
imul
or
adc
mov
sbb
int
pop
dec
xor
push
loop
sbb
sub
xchg
adc
imul
pusha
shr
aas
pop
push
lods
enter
pop
and
push
inc
jno
out
fisubs
adc
add
ror
jle
mov
aaa
aaa
fisttpl
xchg
cmp
aas
fcmovbe
enter
sub
cmp
dec
sub
xchg
out
psubsb
add
into
push
sbb
pop
ret
repz
fbld
sub
lods
popf
and
cmp
and
sub
add
out
out
cmp
xchg
cmpsb
outsl
pop
sub
int3
jg
push
or
in
mov
add
cli
xchg
mov
je
stos
cmp
add
in
push
fildll
mov
xchg
push
or
dec
or
push
clc
jecxz
sarb
pop
jle
mov
pop
jne
into
cmp
mov
dec
les
pop
lods
aam
int3
lods
insb
xchg
mov
and
sub
xchg
and
mov
push
pop
jb
inc
out
aam
xchg
or
pusha
movsb
ja
sbb
jbe
lods
leave
sbb
mov
iret
jecxz
in
int
std
enter
dec
cmp
cmp
fs
sbb
std
in
inc
es
pop
add
sub
mov
cmp
jo
cld
sbb
mov
mov
vaddps
js
jno
mov
mov
out
push
adc
loope
jnp
jo
mov
enter
sbb
les
dec
add
jge
movsl
fisttpl
add
pop
push
out
jecxz
jmp
in
push
mov
xchg
std
fisttpl
movsl
out
fdivr
adc
test
and
ja
inc
fnsave
add
or
push
add
jle
ret
jbe
xor
pusha
pop
add
inc
scas
rclb
cmp
mov
lcall
movsl
out
hlt
push
cmpsl
inc
cmpsl
fwait
and
cmc
xchg
out
inc
in
fwait
gs
out
pop
jge
sbb
and
jbe
xorb
push
mov
outsl
jns
xchg
or
loopne
cvtps2pd
and
lds
cmp
mov
sbb
xor
sub
jle
and
test
lods
scas
xchg
dec
jl
insl
push
pop
jne
xor
jns
int3
popf
mov
dec
fildl
mov
add
jl
shlb
push
dec
fldenv
ss
xor
inc
sbb
mull
sbb
imul
push
loop
outsl
fadds
cmp
cs
xchg
dec
fbld
push
lcall
mov
xchg
push
fcomi
into
enter
into
cmp
cld
sti
clc
jno
push
cmp
lds
cmp
clc
xchg
lcall
stc
fadds
popa
dec
pop
dec
arpl
int3
xchg
jae
xchg
xor
jmp
mov
mov
dec
add
cmc
icebp
cmp
test
jne
push
push
orb
jns
pop
push
mov
les
or
jb
mov
lods
mov
inc
fs
inc
xor
sbb
mov
out
mov
dec
add
inc
xchg
mov
push
das
clc
push
jnp
nopl
mov
mov
cmp
lahf
push
mov
dec
push
sarl
ja
xor
jmp
jle
scas
cmpsb
cmp
push
adc
mov
shrl
sahf
fisubl
out
mov
xchg
dec
cmpl
rcll
jle
mov
mov
repz
xchg
sub
cmp
or
mov
cwtl
adc
ljmp
and
fisttpll
dec
xchg
sbbl
jmp
mov
jmp
scas
fsubrs
pop
inc
xor
test
les
insb
in
push
leave
add
pop
mov
in
adc
lock
adc
fisttpll
jp
mov
loop
add
jae
in
ret
nop
ret
and
add
mov
clc
cmp
push
insb
mov
inc
pushf
cld
or
dec
push
add
int3
and
and
pop
mov
push
call
dec
aam
sbb
arpl
jae
lahf
xchg
sub
mov
mov
pop
jo
add
std
xchg
lods
es
dec
fadd
xor
xor
leave
in
jnp
inc
ret
mov
aad
cmovnp
jns
jecxz
xchg
lods
movsb
mov
sahf
pop
mov
leave
pop
xor
ss
cmp
imul
roll
cmc
push
push
xchg
ret
mov
cltd
xor
jno
repnz
in
outsb
addl
cmp
sub
in
jne
cmp
pop
add
femms
vdivpd
pop
or
adc
andl
clc
fcompl
mov
imul
mov
push
jo
mov
mov
nop
dec
out
sbb
insl
inc
adc
insb
inc
stos
pushf
je
push
cmp
fwait
imul
mov
jb
leave
or
jle
mov
add
xchg
sub
xor
mov
popf
inc
jno
scas
test
or
into
jge
mov
sbb
mov
shll
push
test
in
in
mov
sub
sbb
insb
dec
jl
leave
in
loop
lret
insl
xchg
xchg
xor
or
mov
and
les
sub
into
dec
inc
popf
movl
dec
sub
jo
pop
stc
push
adc
mov
xchg
mov
xchg
int
mov
mov
insb
lods
lcall
hlt
xlat
inc
popf
add
adc
leave
and
test
jmp
mov
push
adc
cmpb
pusha
stc
cld
out
fists
pop
pop
adc
push
jmp
hlt
jle
out
shrl
aad
push
arpl
push
out
in
sbb
cmp
outsl
lahf
mov
test
pop
mov
mov
data16
jae
xchg
pop
xor
test
sub
scas
aaa
popa
cmp
mov
mov
push
cmp
mov
adc
mov
scas
dec
insl
repz
mov
inc
inc
imul
in
test
in
inc
jl
xchg
imul
dec
jbe
adc
ret
mov
ds
push
inc
cmp
movsb
pop
cmp
xchg
lods
stc
sbb
dec
mov
out
inc
sti
daa
xchg
fsubrl
push
out
ret
sbb
push
in
ja
into
imul
jns
aas
in
jp
loopne
cmp
mov
testb
mov
dec
adc
fmull
push
xor
jp
shrl
mov
jno
adc
and
js
pop
dec
arpl
in
jo
daa
adc
pop
enter
xchg
es
fldt
xchg
loopne
pop
fadds
push
in
xchg
lods
sub
insb
xor
mov
ret
cmp
lcall
xor
jno
lock
bound
push
xor
mov
fcmovu
subb
pushl
imul
push
sbb
push
jnp
gs
icebp
cmpsl
imul
and
jne
pop
aas
mov
ss
sar
mov
scas
jbe
adc
xchg
nop
testl
int
dec
xlat
cmp
div
sub
sti
outsb
hlt
adc
xor
in
loop
cmc
pusha
or
les
mov
js
xchg
mov
bound
test
cmp
dec
add
les
push
or
mov
insb
cltd
cwtl
into
fnstsw
cmp
lods
stos
xor
mov
lods
jb
adc
pop
lods
pop
push
je
into
lock
or
popa
or
or
and
jae
pop
test
or
sub
push
mov
and
in
repz
xlat
and
sub
add
repnz
fstpl
in
dec
pop
adc
sbb
ret
mov
cltd
cs
fstps
mov
insl
jb
mov
push
fstpt
testb
jmp
lock
shr
inc
dec
mov
sub
adc
aam
mov
mov
push
dec
outsl
outsl
pop
stos
aad
push
addr16
mov
mov
or
out
pusha
dec
pop
cmp
pop
cld
push
mov
pop
or
sub
add
int3
mov
cmc
cmp
push
daa
mov
mov
fisubl
dec
repnz
insb
mov
cwtl
cmp
mov
cmp
loop
jno
sarb
outsl
ja
jge
xor
mov
push
cmp
lret
and
xchg
mov
jle
adc
mov
cmp
lcall
fisttps
daa
xor
sbbl
out
add
jnp
push
jb
sti
jp
dec
mov
andb
dec
push
cmpsl
mov
js
stc
jl
pop
add
in
sub
addr16
mov
cld
sub
jmp
mov
leave
flds
hlt
roll
jg
lods
pop
movsb
js
test
push
pop
aad
aam
xchg
jge
sti
pop
bound
xor
adc
jbe
cmp
sbb
jg
xchg
pop
lret
jmp
xchg
out
das
xlat
add
and
aas
pop
sti
outsb
dec
shl
xlat
int
xor
mov
in
pop
cmc
sbb
push
inc
out
out
and
xor
mov
xchg
cld
inc
aaa
imul
and
push
sbb
mov
add
xchg
inc
xor
aaa
mov
pop
in
notb
inc
je
test
das
in
dec
cmp
orb
pop
in
leave
sbb
mov
xor
jle
cld
xchg
mov
xor
jmp
or
ret
mov
sub
sbb
andl
std
testb
pop
inc
jecxz
out
mov
add
into
roll
mov
pop
stc
inc
xor
mov
scas
out
call
sub
xchg
enter
sub
pushw
dec
xor
jp
mov
loopne
mov
adc
rorb
lret
push
jns
adc
test
lock
cld
push
lret
mov
pop
xchg
mov
repz
push
adc
pop
push
fnsave
mov
inc
in
int3
sbb
enter
cmp
out
mov
mov
hlt
xlat
jne
data16
insl
jo
jecxz
iret
icebp
inc
aas
adcb
or
jmp
and
imul
lods
and
jecxz
dec
add
arpl
dec
mov
dec
mov
dec
adc
out
xor
stos
xchg
mov
loopne
and
xchg
mov
mov
sti
aaa
rol
iret
mov
push
mov
outsl
cmp
xchg
fcmovb
data16
lea
ljmp
mov
andps
pusha
aaa
mov
pop
leave
sub
mov
xchg
mov
xor
push
xchg
and
lock
fisubl
outsl
cmpsl
mov
or
cltd
sub
es
adc
dec
sbb
lds
push
push
inc
jnp
out
pop
sti
test
mov
popf
in
add
xor
add
jne
in
or
outsb
sbb
sbb
sbb
call
lcall
xor
fmuls
jl
cs
loope
pmulhw
xor
pop
cmpsb
orl
sbb
add
mov
in
insl
mov
cmpsl
xchg
mov
xor
pop
scas
icebp
out
xor
mov
jl
mov
xchg
ljmp
bound
push
jl
aam
mov
or
imul
aam
repz
pop
xor
xchg
outsl
stc
aaa
loopne
dec
mov
popf
lcall
lea
xchg
mov
in
scas
subb
mov
imul
and
pop
inc
icebp
pop
insb
push
jmp
sub
jge
inc
and
and
popa
push
add
negb
idivb
data16
loopne
mov
mov
scas
fsubl
jmp
in
lds
mov
add
jb
mov
xor
cld
in
in
cld
imul
insb
fidivrl
mov
testl
dec
lock
repz
sub
into
into
aas
int
clc
fstl
xchg
stc
xorl
cld
xchg
cmp
xchg
sub
xchg
scas
outsl
push
int3
and
in
dec
mov
mov
cwtl
or
fs
mov
ds
cli
adc
mov
dec
imul
jg
data16
scas
lock
mov
fistpll
adc
stos
jne
fimull
add
or
fs
adc
clc
imull
cmp
imul
popa
add
push
and
mov
mov
int
pop
ss
orb
ret
xchg
sbb
pop
mov
pop
or
ja
mov
negb
sbb
enter
aad
movsb
repnz
fcom
pop
cmc
pusha
test
mov
jae
dec
push
inc
and
sub
shl
jge
mov
int
imul
sarb
cmp
and
gs
movsl
ficoms
sub
push
inc
mov
pop
fs
and
in
hlt
cmpsl
cmp
shlb
mov
pop
jno
or
movsb
sti
je
std
sti
inc
push
xchg
push
arpl
fld
loopne
aam
adc
aam
sbbl
add
inc
dec
ds
ja
das
decl
bound
jnp
sbb
gs
mov
outsl
outsb
xchg
lods
sub
shll
mov
fisubs
xor
adc
jo
xor
cmpsb
cltd
mov
daa
outsl
mov
movsl
out
jg
lcall
mov
push
dec
mov
js
mov
dec
cmp
pop
dec
cmp
pop
mov
enter
or
sub
cld
dec
popf
loopne
jae
in
rcrl
mov
push
loopne
jb
stc
out
pop
loopne
pop
mov
out
mov
push
test
daa
push
mov
cmp
ret
pop
mov
sbb
mov
xlat
shrb
fwait
sbb
or
push
push
lock
imulb
imul
mov
pop
pop
xchg
cmp
add
popa
out
push
fisubrs
out
or
mov
inc
bswap
jl
fwait
sub
cmc
out
aam
popa
pop
mov
push
in
dec
cmp
sar
out
testb
push
imul
pusha
mov
and
aas
stos
sbb
cmpsl
adc
and
shl
pop
aad
mov
sbb
cmpsb
insb
call
pop
mov
cld
sub
mov
ret
ss
dec
aam
je
test
adc
push
leave
outsl
stc
int
ss
in
add
fists
lock
xor
sub
xor
inc
mov
iret
xor
scas
xchg
popf
leave
jg
adc
or
xlat
add
ljmp
lock
or
sub
mov
jg
daa
inc
das
or
fwait
mov
int3
shrb
in
xlat
xor
or
ret
mov
int
cmpsl
adc
adc
out
ja
in
fmul
or
movsb
mov
or
out
ret
fisttpll
inc
mov
cmp
dec
pop
mov
stos
out
sbb
xor
out
jo
aas
rol
push
test
outsb
mov
clc
rcrb
call
sahf
push
icebp
xchg
sub
lret
push
test
test
and
push
and
loop
sub
adcl
mov
imul
nop
out
mov
arpl
stc
sub
testb
daa
ds
cltd
int3
je
xor
lcall
aas
aam
xor
add
aam
out
adc
push
jmp
dec
leave
cmp
les
mov
fiaddl
add
mov
in
inc
jmp
jecxz
jne
sbb
std
and
cld
shrl
dec
rcrl
pop
fs
ljmp
adc
fwait
jmp
or
adc
sub
xor
mov
movsb
scas
push
push
xchg
cmp
xor
test
out
mov
out
mov
out
sbb
cwtl
test
movl
idiv
sub
jmp
test
pop
jmp
mov
flds
fs
std
inc
inc
in
xlat
jb
mov
and
cltd
sub
fsts
lods
hlt
inc
adc
push
out
mov
dec
icebp
pop
pop
or
push
push
inc
push
xchg
cmpsb
adc
not
int
adc
pop
aad
jbe
xchg
sub
lea
clc
insl
ds
mov
addl
and
add
sbb
jl
xchg
cli
nop
out
sub
push
fucomip
jne
imul
cltd
xchg
cmp
fisubl
xchg
jno
pop
add
pop
pusha
and
into
jecxz
negl
insl
mov
adc
xor
xchg
flds
push
sub
mov
lret
xchg
js
in
repz
imul
stos
and
bound
imul
insb
fstps
xchg
pop
push
gs
push
lret
jnp
pushl
cmovbe
add
ret
dec
xor
jns
ss
mov
fidivrl
push
and
shlb
sarl
shrl
push
lods
ficoml
mov
mov
es
pop
sbb
mov
cmpsl
scas
lahf
lods
or
pop
fimuls
mov
xchg
xchg
cmp
mov
ror
icebp
and
xchg
dec
and
add
mov
dec
into
sub
out
cwtl
push
push
push
js
jg
movsb
inc
int3
sub
dec
scas
das
xchg
push
add
sbb
dec
pusha
dec
fimull
push
xchg
mov
pop
testl
jno
mov
jecxz
enter
adc
nop
sbbl
jl
jp
pop
outsb
ds
repz
test
test
std
and
aas
inc
add
flds
dec
or
arpl
lahf
push
inc
scas
repnz
loop
out
dec
mov
xchg
inc
push
popa
into
mov
sarl
outsl
ja
ret
je
dec
lock
push
add
add
pop
mov
test
andb
inc
fidivrs
das
fdivs
fistps
test
pusha
test
popf
pop
aas
cmp
gs
bound
push
jb
fildll
dec
outsl
add
loope
sti
sbb
mov
imul
cmp
mov
push
mov
pop
jbe
lock
daa
nop
ss
or
es
adc
lret
xchg
pop
out
pushf
out
jle
inc
or
sub
push
repnz
int3
and
loop
mov
and
fdivs
outsb
jno
stc
inc
xchg
mov
scas
bound
pop
out
inc
je
aam
inc
test
mov
inc
shrl
icebp
ljmp
xchg
inc
shll
cmpsb
sub
dec
push
cmp
inc
insl
ret
xchg
repnz
outsl
in
dec
ja
inc
and
push
and
mov
pop
jg
pop
rolb
cmp
sbb
jl
xorl
inc
mov
and
and
imul
dec
shlb
adc
jg
and
sbb
jmp
or
inc
test
pop
std
inc
testb
inc
pop
mov
movsl
imul
sub
mov
out
push
xchg
out
push
shrb
and
test
or
jnp
fistpl
xor
pop
test
in
das
xchg
push
loop
xchg
stos
enter
dec
bound
pop
add
add
sbb
xchg
test
lods
lret
and
add
test
pop
jecxz
dec
imul
mov
xchg
adc
mul
jle
mul
out
imul
and
fdivrl
aas
pusha
out
outsl
cmp
test
icebp
mov
inc
js
cmp
fcmovb
jecxz
dec
gs
inc
push
imul
rclb
aaa
or
fisttps
mov
sbbb
xlat
and
sub
ret
and
sti
mov
repz
mov
iret
mov
xor
outsl
test
call
pop
xchg
lahf
enter
mov
mov
pop
hlt
adc
scas
push
pop
mov
rcr
pop
bound
lds
fnstsw
out
and
fsubs
movsb
dec
leave
rcr
roll
mov
pop
int3
hlt
xorb
mov
mov
ds
into
inc
repnz
mov
mov
out
xor
test
cmp
loop
add
sub
pop
push
and
and
cmpsl
xor
in
xor
fists
pop
and
mov
in
cmp
fnstsw
fsubs
pop
ljmp
les
push
cmp
pop
sbb
dec
xchg
jne
dec
jb
jge
leave
jae
push
movsb
push
push
add
cmp
test
xchg
adc
clc
sbb
cmc
icebp
fmull
lods
xor
inc
out
sbb
dec
loope
mov
xor
ljmp
xchg
sub
jp
call
pop
mov
cs
mov
test
push
push
pusha
sub
fidivrl
addr16
shrb
lock
add
notl
push
mov
mov
mov
and
roll
dec
dec
mov
pop
cld
mov
orl
xlat
jae
sub
adc
dec
push
loope
sub
push
mov
or
jg
xor
mov
out
or
insl
pop
dec
push
cli
sbb
mov
pop
sahf
data16
test
xor
mov
sub
jecxz
hlt
lret
or
lcall
test
xchg
dec
mov
xchg
jg
cld
and
push
dec
popa
jo
lret
rcrl
imul
test
fisubrs
push
add
lcall
mov
lcall
push
and
add
into
lret
xor
ja
mov
iret
ljmp
lcall
mov
fwait
cmp
stos
and
push
shll
adc
push
stos
jo
or
pop
popf
mov
or
add
cmp
sbb
shll
xchg
adc
push
sarb
test
pop
or
rcr
je
push
mov
das
cmp
test
outsb
add
decb
xchg
les
ljmp
add
insl
jge
repz
mov
sbb
adc
jge
jg
dec
adc
out
mul
lahf
mov
shl
lods
adc
mov
sbb
mov
dec
shl
xchg
inc
sub
shl
or
xchg
testb
shlb
dec
push
dec
mov
faddp
fsubrs
outsl
addr16
movsb
fwait
jle
inc
stos
mov
cmpsb
jmp
scas
or
icebp
xor
jno
add
in
lock
push
xchg
jbe
rorb
in
sbb
push
cltd
sub
cs
loop
gs
inc
addl
adc
fs
subb
pop
and
jae
adc
cltd
inc
gs
adc
stos
repnz
sbb
hlt
lret
aad
adc
and
fildl
inc
jl
lds
add
cmpsb
add
mov
lret
jnp
fbstp
jg
mov
and
ja
out
adc
in
pop
ss
cmp
shll
adc
insl
pop
int
push
sbb
mov
out
mov
dec
adc
pop
outsb
cmpsb
bound
sbb
enter
sub
lds
lods
jle
mov
add
or
and
cmp
jo
leave
cmp
jmp
mov
shlb
ss
stos
push
sub
and
test
in
repnz
fs
cmpsb
cmc
jnp
jp
pop
sub
insl
cmp
lret
pop
neg
push
fwait
pusha
or
ror
or
inc
dec
cmp
jecxz
in
cmp
js
pop
xchg
push
sub
or
jecxz
mov
jae
andl
push
pushf
xor
mov
lcall
push
int3
adc
xchg
bound
cmp
xor
stc
jnp
sub
fcoml
popa
or
repz
jo
fdivrl
aaa
stos
in
xchg
pop
xor
or
nop
mov
loope
int
in
popf
in
into
idivb
pop
push
sbb
sbb
aad
lcall
insl
insl
xchg
rcl
sahf
pop
lcall
gs
jo
mov
and
inc
sbb
pop
imul
adcb
inc
addr16
and
scas
inc
dec
popa
mov
pop
push
adc
scas
scas
jecxz
jl
fidivrl
cs
int3
or
repnz
sbb
imul
push
mov
sbb
adcl
add
jnp
push
cs
push
xchg
mov
cmc
adc
jae
inc
mov
aam
fs
sbb
fdivrp
sbb
dec
dec
dec
push
stos
mov
incl
leave
int
push
arpl
vpshufd
fistps
int3
mov
sbb
in
fldt
xchg
movsb
loopne
shll
stc
sbb
int
std
cmp
add
mov
pop
sub
clc
pop
nop
jp
pop
cmp
push
mov
dec
aas
jp
sub
cld
shrl
mov
cwtl
in
add
loopne
cmpsb
je
xchg
mov
nop
mov
jmp
fimull
out
movaps
test
sbb
test
dec
imul
je
pushf
jg
imul
lds
pop
jp
lret
xchg
add
add
sub
dec
data16
push
sbb
push
jb
jae
out
adc
call
cmpsb
push
push
jo
sub
mov
inc
js
inc
sahf
loope
jge
cmp
cmpsl
mov
imull
out
add
fcmovnbe
pop
dec
scas
fidivs
ret
movsb
adc
scas
cltd
pop
mov
cld
loope
int3
idivb
mov
inc
inc
mov
add
pop
jno
std
push
mov
sub
dec
inc
js
loopne
das
repnz
adc
xor
and
push
or
mov
std
jl
sub
jbe
mov
or
xor
and
aam
lahf
cmp
mov
ret
rclb
xchg
cld
inc
addb
or
mov
fstl
adc
dec
jns
jecxz
int3
mov
cmp
push
ljmp
pop
jmp
jmp
xor
enter
cmp
add
pusha
push
repnz
in
fdiv
xchg
sub
or
lahf
mov
int3
dec
push
mov
mov
inc
sbb
sbb
jbe
popa
test
movsb
dec
mov
adc
cmpb
shrb
push
pop
sub
sbb
out
aad
mov
push
mov
mov
mov
out
sub
inc
loop
mov
stos
out
add
cs
and
shll
jne
cmp
leave
adc
xor
lods
xor
dec
pop
xchg
jbe
mov
iret
mov
cld
add
mov
and
dec
or
jo
dec
push
cmp
shll
sub
loope
dec
sti
ret
jns
shll
mov
sbb
mov
repnz
mov
add
out
stos
xor
xchg
cmpb
sub
push
iret
jnp
fwait
push
std
fwait
mov
in
mov
mov
daa
arpl
add
jmp
xor
cs
fs
enter
lret
fistps
les
jns
bound
fstpl
cltd
lahf
leave
or
inc
push
jp
cmp
outsb
fistps
sahf
mov
mov
roll
dec
out
clc
mov
sub
pop
sub
fstps
jne
cli
sbb
addr16
or
inc
lock
les
add
push
int
fwait
dec
inc
jae
inc
adc
push
add
cmp
lock
jbe
sbb
movsl
repnz
pop
hlt
hlt
dec
xor
icebp
jl
scas
jl
push
sbb
inc
addl
inc
pusha
pop
adc
aas
xchg
xlat
ja
and
cmc
into
sub
jle
fwait
sub
mov
or
jne
add
aad
and
mov
hlt
in
jecxz
fiadds
dec
push
shlb
fwait
mov
popa
mov
mov
sti
lahf
adc
jle
add
inc
js
inc
addl
pop
or
loope
mov
mov
sub
orb
aaa
xor
stos
aas
adc
mov
sbb
fdivp
jne
call
leave
mov
jl
sbb
aam
dec
imulb
sub
bound
mov
add
xor
lea
sbb
push
inc
loop
loopne
add
add
pop
or
pop
xchg
outsl
sub
pop
fxch
sarl
decl
lcall
lcall
mov
cmp
mov
xchg
addr16
movsb
cmp
mov
ret
pop
sub
push
mov
pop
xor
pop
or
rolb
out
cmp
movsb
pop
mov
mov
lahf
or
imul
divl
sbb
xor
xchg
pop
adc
or
loop
cli
aaa
cmp
adc
aaa
fucomi
ret
fnsave
pushf
out
lss
iret
int
or
fldl
jno
pop
mov
imul
rorl
pop
add
cmp
jo
push
fistpl
xor
imul
xchg
fwait
jmp
popa
inc
dec
jp
sub
dec
cld
mov
and
mov
pop
jnp
dec
cmpl
roll
dec
cmpsl
adc
sbb
cmp
dec
mov
cli
push
jb,pn
xor
lcall
pop
jne
shlb
add
mov
pop
imul
push
or
sub
in
sbb
inc
xchg
add
sub
pop
and
imul
nop
or
push
fstps
dec
cmpsl
mov
cs
fwait
out
call
je
ret
sbb
and
push
jo
andb
sbb
ret
inc
sahf
sbbl
decl
cmpsb
int
xor
call
sub
mov
mull
sbb
or
inc
sbb
fsubs
dec
dec
jmp
mov
dec
orb
dec
lock
loopne
jne
and
pop
mov
inc
iret
push
and
add
pop
mov
mov
xor
popf
enter
add
and
stos
pop
outsb
cltd
inc
repz
loop
sahf
push
push
stos
cwtl
xchg
fwait
inc
arpl
int3
mov
sahf
mov
insb
mov
pop
popf
int
mov
lret
scas
fwait
push
test
push
orb
sub
std
jo
mov
fstps
xor
pop
dec
test
je
mov
in
out
js
xor
into
pop
jnp
mov
stc
cmp
scas
jne
push
cmp
cmp
push
mov
xchg
jp
ja
sbb
mov
ds
push
adc
call
or
xor
mov
cmpl
es
pop
jge
sbbl
rclb
and
std
cmpsb
test
scas
imul
pop
xchg
ljmp
test
ljmp
mov
sub
int3
stc
out
xchg
jp
push
mov
leave
add
lds
adc
testb
add
xchg
adc
xchg
pop
out
adc
mov
sbb
ror
movsb
sbb
cmpsl
dec
or
cmpb
xchg
or
data16
ljmp
cmp
std
test
mov
fdivl
in
sbb
push
inc
out
das
lret
pop
fdivrl
sbb
ret
sub
lcall
xchg
dec
adc
test
or
jmp
insl
xchg
cltd
sbb
pusha
out
mov
mov
lods
and
push
mov
mov
push
ja
mov
addr16
push
xlat
push
sub
cmp
sub
mov
add
add
mov
add
outsb
push
mov
xchg
popl
xor
lret
dec
fucom
adc
lret
xchg
je
adc
mov
push
out
fwait
jmp
hlt
jbe
aad
pop
and
and
push
push
or
fnclex
pop
loop
mov
jl
rolb
pop
lds
mov
call
inc
pop
addr16
inc
jae
in
scas
jecxz
add
xchg
pop
repnz
inc
sahf
neg
mov
outsl
lahf
test
mov
mov
pop
cmp
test
dec
pop
mov
pop
jg
push
xchg
lea
push
sub
mov
adc
in
pop
inc
testl
outsl
lds
pop
ja
fsubs
paddb
or
addr16
add
lahf
test
sbb
xchg
ffree
inc
jbe
adc
repnz
mov
lds
push
pop
pop
dec
out
or
lock
mov
jnp
inc
cmp
jbe
cli
cmc
das
mov
mov
fidivl
dec
sub
jle
and
push
dec
cmp
mov
fisttpll
lret
mov
mov
jl
cmpsl
xchg
push
pop
jae
rcl
sub
xchg
dec
jne
movsl
inc
clc
lods
pop
mov
outsb
jp
jmp
pushf
das
pop
ret
das
pop
popa
mov
jns
nop
cwtl
loopne
stos
imul
cmpsb
cmp
data16
push
icebp
pop
out
cmpsl
fnstenv
cmp
lret
cmc
mov
jbe
push
push
scas
call
dec
xchg
mov
add
andb
add
popa
inc
dec
call
dec
jmp
pop
mov
fwait
add
rcl
cmp
nop
out
sbb
xlat
mov
dec
pop
cmpsb
jne
lods
push
sarl
mov
adc
testl
hlt
adc
pop
mov
cwtd
cltd
add
push
aaa
pop
dec
mov
mov
push
pop
xchg
inc
cmp
add
mov
push
push
subl
inc
mov
fwait
imul
test
xor
sub
rcll
sbb
xor
xchg
gs
pop
test
lcall
inc
lahf
jnp
mov
aaa
popf
cmp
sarb
test
adc
pop
fs
lea
add
stc
pop
popa
stos
push
sub
sub
mov
in
addr16
ret
cmp
stc
mov
jp
rclb
cmp
shlb
aas
mov
adc
jle
cmp
cmp
sub
sbb
jecxz
cmp
push
sti
jp
mov
ret
mov
mov
xor
outsb
xor
into
stos
mov
in
and
dec
pop
dec
lret
call
add
xor
orl
jno
jge
data16
sbb
cs
ret
pop
xchg
sub
popf
and
decl
mov
jo
and
mov
stc
movsb
aaa
sbb
test
add
adc
orl
xrelease
xchg
enter
pop
sub
add
sub
sti
push
cmpl
mov
mov
pushf
imul
gs
push
std
or
jmp
dec
inc
cmpsl
lret
xchg
cmp
push
xchg
dec
das
ds
outsb
xchg
fcmovb
push
or
xchg
inc
jb
hlt
add
xchg
xor
test
sub
mov
or
mov
cmp
add
sbb
ja
push
iret
pop
fs
decb
push
jns
cmp
push
add
jb
jbe
jno
mov
cltd
push
lret
add
mov
and
and
sub
repz
inc
xchg
fbstp
adc
sahf
cld
xor
push
cmp
out
xor
lds
pusha
out
sbb
pop
mov
loopne
inc
xchg
fcmovu
shll
aad
pusha
xchg
les
mov
inc
test
lret
cmp
arpl
dec
dec
dec
dec
decb
insb
inc
sbb
jno
ljmp
aas
and
adc
andb
pop
ror
adc
xchg
pop
fnstenv
lcall
outsl
mov
cmp
mov
or
inc
scas
or
subl
in
add
roll
xchg
adc
int3
push
adc
mov
push
sub
pop
sahf
nop
out
les
ret
inc
in
clc
xor
pop
add
pusha
jecxz
mov
cmp
pop
loope
test
test
lds
rcrl
mov
out
sahf
add
cmp
sahf
lock
mov
cld
xor
std
cwtl
dec
or
lcall
orb
ret
add
aaa
imul
xchg
cmpsb
mov
cmpsl
dec
sti
fstpt
xor
sub
mov
cmp
cmp
inc
fsts
int
std
outsb
mov
scas
push
test
mov
cltd
or
dec
bnd
sti
push
xchg
inc
rcrl
repz
cs
jle
negb
cmp
lods
cmp
dec
pop
cs
jg
mov
enter
rorl
loop
cmp
stos
push
xlat
sub
roll
dec
mov
ret
fwait
xor
pop
mov
sbb
mov
add
mov
mov
shrl
pop
jle
cmp
icebp
mov
adc
adc
cmp
int
push
pop
fdivrl
xlat
aas
loopnew
add
les
jnp
inc
pop
pop
rorl
es
push
adc
pop
cmp
pop
cmp
ds
push
push
lret
dec
aam
jnp
stos
pop
add
push
adc
imul
cltd
xchg
mov
inc
xor
add
mov
loopne
or
repz
mov
bound
test
mov
mov
ds
sbb
in
mov
push
ss
outsb
mov
cmpl
push
mov
push
and
dec
xor
insl
mov
sbb
pop
xor
movsb
in
fs
scas
clc
push
add
icebp
sbb
bound
inc
jo
xchg
cmpsb
push
sbb
movsl
jno
test
or
sub
lret
cltd
popa
in
mov
jmp
sbb
cmp
mov
cmp
test
in
mov
jb
pop
mov
je
jb
xchg
xor
and
test
fstp
aad
lret
sub
jns
pop
insl
popa
in
dec
pop
icebp
mov
cld
or
jge
leave
sub
scas
mov
scas
imul
scas
adc
in
jmp
mov
or
sbb
xchg
pop
mov
scas
movb
and
pop
sbb
fs
je
fsubs
loopne
push
xlat
jno
incl
dec
add
rclb
pusha
out
mov
in
out
enter
sbb
fs
fdivrs
dec
fnstsw
popa
jno
dec
mov
movsl
clc
mov
sub
stos
mov
mov
je
xchg
xchg
sub
daa
pop
mov
pusha
pusha
cmp
mov
xor
mov
sarl
and
arpl
movsb
ret
jg
scas
movsl
xor
fstpt
jle
lret
leave
imul
es
pop
in
cli
mov
add
jbe
in
pop
std
outsb
mov
xchg
dec
jb
das
bound
imul
xchg
ficoms
in
xchg
or
xor
mov
mov
iret
mov
loop
ret
cmpsb
xchg
sahf
dec
pop
insl
fstpl
push
jne
nop
ffreep
push
adc
ss
mov
sub
js
std
mov
jge
movsb
add
movsb
icebp
into
xlat
int
inc
and
inc
int3
xchg
adc
cmpsb
sub
fiadds
fs
push
jbe
addb
mov
dec
lds
jo
inc
mov
mov
mov
les
call
cmpsb
bt
test
pop
push
cs
inc
dec
cmp
sbbb
insl
adc
into
call
sub
mov
and
aas
pop
ds
int
and
jg
leave
arpl
sub
lds
jbe
lahf
aas
xlat
push
and
sbb
add
data16
imul
pushf
jle
push
dec
lods
sub
push
test
mov
sub
icebp
and
es
arpl
mov
push
mov
pop
enter
cmp
push
enter
fiaddl
mov
inc
or
icebp
push
jnp
into
pop
data16
bound
add
pop
jp
das
jb
cmp
jmp
jl
lods
xchg
adc
push
or
scas
pop
divl
add
movsb
sub
or
outsb
clc
cwtl
sbb
xchg
cmpsb
dec
lret
xchg
mov
lea
mov
scas
stos
lock
je
insb
aam
mov
mov
fistps
xor
mov
add
sarl
imulb
cltd
negl
fdivs
xchg
dec
adc
add
jmp
lret
imul
bound
pop
test
mov
scas
dec
std
out
push
pop
in
aad
in
mov
pop
push
push
mov
inc
shr
cmpsb
xchg
out
push
adc
cmp
imul
mov
mov
outsl
call
pop
jp
sbb
imul
push
cltd
and
test
repz
shlb
lret
mov
cmp
xlat
jns
lcall
fisubl
sbb
and
sub
mov
inc
das
insb
fisttps
stos
fsubp
out
or
ret
sbb
add
repz
fadds
mov
xchg
mov
cwtl
cs
icebp
add
adc
xchg
subl
or
xchg
leave
jge,pt
movsb
mov
sbb
je
cld
test
dec
adc
sahf
popf
xchg
pop
mov
mov
and
sub
push
jge
mov
xchg
add
mov
jae
jg
das
loopne
jge
mov
or
mov
sub
lods
mov
popa
aaa
mov
pushf
cmp
jecxz
cs
jle
lds
out
hlt
mov
inc
xor
cmp
or
call
lcall
bound
in
cmp
push
sbb
and
push
pop
hlt
push
or
imul
dec
andb
inc
out
scas
jb
xlat
gs
inc
cmp
inc
jecxz
call
push
inc
sub
mov
and
jge
push
adcb
hlt
mov
add
dec
mov
pop
loopne
pop
add
xchg
mov
pop
mov
fcom
jnp
push
addr16
push
jmp
clc
cmp
cmp
inc
in
or
pop
sbb
incb
fdivrl
push
sbb
int
movsb
iret
mov
push
shrb
dec
addb
loopne
jge
xor
insb
add
movsb
jbe
mov
jl
jmp
push
sub
dec
ja
inc
mov
xchg
cld
pusha
push
aad
or
stos
push
outsl
aaa
loop
pop
aaa
adc
outsl
sbb
push
sbb
sub
mov
mov
jnp
ljmp
sarb
test
push
add
jmp
aad
xchg
and
jl
xchg
jne
std
iret
repnz
out
adc
xchg
sub
leave
es
mov
loopne
dec
push
push
sbb
or
mov
push
dec
sti
ffreep
push
sub
lock
into
and
sbb
push
cmp
add
inc
les
ss
pop
push
cmpsb
loope
cmp
xor
jecxz
shlb
sbb
lods
hlt
sub
call
sbb
cld
sahf
inc
dec
inc
jno
test
inc
imul
cli
sti
test
sbb
outsl
jno
lds
push
xorb
sbb
clc
cmp
pop
or
xchg
movsb
add
rep
sbb
je
lods
xor
sbb
and
ret
jbe
xor
rolb
xchg
bound
sub
xchg
xchg
repnz
insb
jb,pt
arpl
and
cs
inc
mov
in
rcrl
gs
or
je
imul
push
cs
test
cmp
jmp
movsb
andl
lret
adc
mov
sub
xchg
call
jmp
enter
lods
std
adc
jns
scas
pop
shlb
jp
fwait
mov
cmpsb
fwait
sub
popf
mov
jae
sub
stos
fld
xor
dec
xchg
cmp
fmuls
mov
xchg
jl
jae
push
inc
lea
loopne
pop
lods
push
mov
sbb
int3
cld
xchg
xchg
lods
adc
lret
push
cmp
mov
hlt
out
xor
pop
xchg
dec
shll
xchg
and
mov
xor
ret
and
popa
jne
inc
int
sub
in
nop
jecxz
or
push
dec
icebp
into
fidivrs
sbb
cld
jo
push
int
clc
lds
cmpsl
pop
ret
sub
sub
movsl
sub
test
jne
mov
test
dec
dec
and
popf
shlb
cltd
inc
push
pop
loope
sbb
pop
arpl
divl
sbb
pop
loop
sbb
push
cs
xchg
xor
popf
subl
mov
lock
xor
cmp
mov
enter
push
cmp
inc
mov
xchg
add
cmp
adc
xor
add
loop
adc
xchg
idivb
lret
stos
mov
outsl
inc
pop
cld
xchg
cmp
mov
jecxz
outsl
test
hlt
jg
aad
insb
mov
xor
jge
cmpb
add
lret
rol
cmp
pause
push
ljmp
test
inc
adc
neg
inc
xor
xor
xchg
cmp
mov
inc
mov
mov
xchg
or
xor
and
into
mov
scas
leave
stos
shr
mov
push
outsl
cmpsb
jbe
mov
lahf
push
adc
pop
cmpsl
xor
out
lods
daa
and
xchg
add
int
push
or
inc
inc
cmp
sti
jnp
imul
mov
ds
adc
pusha
xlat
call
movsb
imul
fildll
sbb
dec
cmpsl
xor
fwait
cmpsb
inc
lea
jbe
insb
cwtl
pushf
cmpsl
adc
dec
mov
jbe
xchg
lock
push
cmpsl
adc
mov
shrl
cmpsb
jb
mov
sub
imul
fsubr
gs
mov
das
push
cmpsl
ret
scas
dec
pop
ret
ret
popa
pop
les
andl
jg
es
fwait
mov
mov
jns
std
xlat
cmp
inc
jge
jl
lds
sarb
inc
or
clc
cli
js
mov
push
mov
mov
inc
inc
shrb
push
pop
xor
or
dec
fidivrs
push
pushf
dec
ds
mov
pop
lret
mov
addl
inc
lret
out
aad
js
orl
xchg
pop
insb
mov
dec
daa
imul
cs
fsubr
sub
arpl
cmp
lahf
pop
push
call
push
xlat
push
jae
push
jne
cmovno
cmpsb
pop
add
daa
sub
jae
out
xchg
movsb
repz
cmpl
add
and
test
testl
negb
dec
ret
rclb
and
mov
xor
out
aam
lret
inc
and
sbb
inc
mov
jecxz
cwtl
sbb
mov
out
loope
out
push
out
add
mov
scas
fucom
jmp
loopne
out
iret
cli
mov
add
out
arpl
xchg
and
push
fnstcw
push
insl
enter
aas
pop
mov
arpl
nop
xchg
std
in
dec
js
aad
dec
call
sbb
icebp
sbb
jbe
xor
mov
repz
std
jg
xor
pop
pushf
xchg
mov
inc
dec
movsl
and
popa
stos
aam
xchg
test
aad
popf
xchg
pop
adc
mov
jecxz
lahf
dec
movsl
dec
push
inc
sub
into
outsl
iret
rcrb
sub
inc
mov
fists
add
fisubs
aad
loopne
popf
cmp
sti
push
and
loopne
or
enter
jecxz
push
adc
in
push
jle
add
mov
adc
sar
mov
cmc
dec
fstl
push
loopne
mov
aas
jecxz
inc
pop
xchg
and
pop
xor
pop
pop
ror
popf
jns
scas
push
xchg
dec
mov
cmp
das
jge
lahf
pushf
orb
xchg
xor
dec
mov
inc
jmp
pop
mulb
add
adc
push
inc
mov
add
adc
push
sub
lcall
leave
cmp
test
lock
pop
mov
in
sbb
xchg
cmpsb
xchg
and
js
sbbb
fiaddl
inc
ss
ret
lods
cmp
pop
iret
inc
enter
mov
sbb
pop
or
aam
mov
stos
pop
dec
call
jo
loope
std
or
daa
in
pop
xchg
xchg
sahf
mov
hlt
pop
sbb
scas
lret
out
mov
cmp
mov
dec
mov
filds
bound
fsubl
hlt
popa
xor
fidivrl
insl
stc
jo
test
and
mov
or
jnp
in
sub
hlt
das
scas
mov
jnp
add
sbbb
sub
jl
cmp
jp
in
and
inc
and
sub
int
fdivs
push
dec
pop
pop
jns
mov
ljmp
push
punpckldq
xor
out
pop
push
push
or
jmp
cmp
jae
inc
cmp
cmp
dec
loopne
gs
cmpsb
pop
imul
js
mov
lods
xchg
push
push
and
adc
int3
call
std
sarb
mov
outsl
pop
inc
fldcw
dec
mov
popf
push
jmp
negw
popl
mov
mov
sbb
cmp
rcrb
sbb
out
mov
fwait
push
bound
repz
sbb
or
or
pop
hlt
jbe
inc
mov
cmp
push
inc
iret
out
movsb
xchg
push
add
sbb
pop
and
test
sbb
mov
jg
adc
add
sbb
sub
aaa
inc
divl
mov
lds
ljmp
mov
inc
xchg
rcrb
dec
adc
sbb
sbb
push
mov
aad
pop
cmp
outsb
imul
rcrl
out
jmp
jnp
xchg
rclb
lcall
or
xchg
inc
push
mov
pop
xor
pop
adc
fcoms
xchg
mov
fcomps
and
inc
nop
sub
mov
movsb
aam
outsb
and
repz
xor
adc
out
lret
or
jnp
andb
clc
lea
sub
insb
mov
bnd
test
stos
ss
sub
ds
xchg
popa
mov
push
and
mov
mov
rolb
pop
and
mov
mov
sbb
xchg
sub
xor
cmc
jl
imull
mov
addr16
sti
fistpll
lahf
adc
inc
lahf
and
fcomi
sub
and
cmc
jbe
das
inc
lods
jns
lods
loopne
xchg
or
ret
dec
bound
add
and
or
pop
push
repnz
sahf
imul
inc
fwait
add
jecxz
ljmp
fwait
lahf
push
mov
pop
dec
in
pop
scas
xchg
and
push
pop
les
xor
pop
mov
jns
fsubl
xor
mov
lock
cmp
push
jp
mov
enter
and
and
push
jns
sahf
gs
and
mov
xor
jle
mov
or
fildl
cli
pop
sti
es
out
mov
lcall
clc
push
wbinvd
stos
push
dec
or
imul
leavew
mov
jne
inc
dec
pop
mov
push
sbb
mov
es
cmp
aaa
pop
aaa
mov
out
jl
jge
jns
mov
cmp
mov
jns
dec
cli
sbb
dec
arpl
rol
cmp
das
fdivs
add
or
iret
mov
jle
stc
mov
or
adc
not
mov
inc
push
cmp
push
subb
cmc
aad
int3
push
xor
cs
cli
iret
js
push
out
cmc
mov
mov
push
cs
test
inc
mov
aad
mov
sti
and
jae
ret
push
sahf
fwait
and
sbb
mov
xor
mov
out
clc
and
repz
test
pop
push
mov
mov
cmp
leave
fldt
or
int
push
ss
mov
jmp
push
cmp
ret
orb
pop
mov
popa
pop
adc
sahf
inc
test
xor
out
loopne
mov
in
ljmp
pop
push
not
pop
cmpsb
std
je
inc
jb
mov
shlb
arpl
push
cmp
xlat
mov
jecxz
or
and
leave
mov
lcall
push
ljmp
in
jle
dec
shll
mov
jl
cmp
lods
gs
jl
imul
sahf
mov
cmp
jne
and
xor
fsubrl
push
fwait
nop
lret
stos
loop
pushl
push
add
popf
sub
insb
push
mov
daa
and
dec
dec
dec
mov
shrb
ret
xor
push
arpl
pop
xchg
xchg
xor
ja
scas
inc
jl
scas
xor
mov
push
push
pusha
xor
icebp
or
lods
xor
xchg
jp
out
lds
jb
sbb
scas
lret
enter
popf
gs
ds
pop
mov
daa
xchg
sub
xchg
ljmp
push
dec
popa
pop
dec
lret
sub
jmp
dec
aaa
pop
addr16
cmc
inc
jl
mov
in
or
mov
and
mov
mov
xor
in
add
add
ljmp
mov
fcmovnb
popa
pushf
pop
mov
popa
and
movsb
jne
adc
push
mov
jb
xchg
or
test
repnz
jnp
inc
dec
adc
lds
xchg
clc
lock
push
xchg
or
add
imul
xchg
mov
mov
xchg
lods
movl
pop
xor
rclb
pop
ret
xchg
lahf
mov
lret
mov
jbe
lds
sbb
mov
sub
js
std
cmpsl
insl
pushf
cli
test
js
movsb
setbe
sti
jnp
pop
sti
loop
imulb
sbb
or
mov
mov
jl
jne
pop
push
lods
or
jnp
inc
pop
inc
out
sub
arpl
test
movsb
ds
mov
insl
les
pop
pop
dec
dec
or
cmp
cmp
popf
arpl
mov
xor
xlat
out
icebp
mov
arpl
fnstenv
jae
jnp
inc
push
xchg
ret
xor
mov
rolb
sahf
std
inc
das
xchg
pop
cmpsb
xor
bnd
sub
mov
pushf
add
xchg
push
dec
or
pop
cmp
sti
stos
iret
pop
mov
xor
in
pusha
push
sub
mov
andb
sti
les
adc
mov
pushf
add
jno
or
mov
mov
lret
push
xchg
xor
sbb
pop
aaa
loope
xor
and
jb
out
mov
or
js
and
mov
jae
sti
test
and
mov
jae
cli
icebp
arpl
add
in
adc
call
add
imul
xchg
cmp
mov
ljmp
clc
sbb
popf
std
loopne
xchg
mov
stc
in
fisubl
fistpl
mov
outsl
out
dec
test
ret
push
in
sbb
in
sbb
xor
inc
lods
hlt
inc
fstpt
add
outsl
push
xchg
out
lods
fisttps
mov
or
cmp
jecxz
inc
loop
sbb
fisttpl
mov
notb
aam
arpl
insb
push
pushf
dec
cmp
cs
call
fnsave
cmp
push
fsub
lahf
jno
sub
adc
add
bound
xchg
push
xchg
rcr
je
pushf
inc
loop
adc
pop
leave
lds
push
out
adc
dec
or
pop
pop
mov
fdivr
pop
sahf
fiaddl
stos
cmp
aas
mov
cmp
fs
sbb
fadds
je
popa
cmp
stos
ret
mov
mov
arpl
in
enter
shrl
mov
inc
les
xlat
stc
sbb
add
xchg
test
xchg
sub
inc
roll
pop
in
xor
ljmp
frstor
je
sbb
and
mov
jb
lcall
mov
repz
pop
sub
xchg
jl
push
mov
sub
cmp
mov
jmp
pop
jmp
test
jae
push
sub
ljmp
push
sub
sti
stos
loopne
in
imul
aas
sbb
xchg
inc
mov
mov
xchg
fdiv
xchg
jmp
xchg
cmpsb
iret
lds
mov
pop
jbe
call
loopne
pushf
cmp
stos
mov
jno
fsubl
fwait
dec
mov
repz
xor
out
ret
jg
pop
push
mov
out
stos
jne
das
push
int3
xchg
mov
and
pop
mov
mov
and
cmp
push
adcl
fs
mov
dec
mov
sub
and
cmpsl
mov
cmp
adc
adc
add
add
jbe
lods
xchg
inc
fwait
sub
daa
sbb
push
cmp
mov
pop
rcll
dec
lds
pop
insb
fbld
stos
cmp
sub
gs
ret
xchg
out
rclb
xor
cs
movb
add
push
out
in
and
push
cs
dec
insl
sti
stos
pop
rcl
inc
decb
popa
loop
add
adc
jp
sbb
ja
mov
jbe
jge
add
int3
out
sub
lea
jge
fisubrs
test
cmpsl
xchg
mov
or
flds
dec
data16
cmp
mov
subl
adc
push
cmpb
sub
mov
cmp
shrb
pop
lret
sub
and
xchg
push
out
sbb
xor
loopne
test
xor
fldcw
repnz
xchg
pop
inc
enter
outsl
inc
jne
cwtl
insb
jb
repnz
dec
jg
loope
jbe
insl
pop
xchg
fstpl
pop
jp
dec
call
inc
jne
jns
push
scas
mov
in
dec
repz
pop
xchg
pusha
shlb
lock
push
imull
in
test
and
stos
lcall
push
xchg
xchg
inc
push
outsl
pop
pop
jne
xchg
dec
and
sub
jle
pop
add
jp
repnz
xchg
jae
in
dec
sahf
setae
lret
stos
sbb
sub
ret
fcom
mov
cwtl
or
out
xchg
xchg
mov
aas
adc
gs
sbb
mov
dec
test
negb
lds
rcrb
cli
mov
fmuls
dec
jmp
mov
scas
insb
jae
jmp
add
cmp
data16
xchg
movsl
jno
popf
repnz
out
mov
jmp
sub
lret
add
jmp
sbb
sub
jns
or
cmp
inc
test
sbb
mov
inc
fidivl
lret
lock
sbb
insb
or
inc
loope
inc
mov
cmp
add
inc
pop
into
outsb
xor
xchg
loop
pop
insb
cmc
call
xchg
loope
out
xor
pop
xor
mov
pushf
xchg
imul
in
loop
or
stc
xor
dec
xchg
sub
or
js
add
mov
pop
push
push
mov
pop
out
es
push
loop
sbb
aad
dec
ret
jp
push
sarb
fidivrl
hlt
add
in
sub
cmp
sbb
clc
addr16
insb
pop
lods
push
jmp
xor
in
add
fstp
jno
mov
je
inc
inc
and
add
pop
jbe
pop
mov
lods
iret
dec
into
jmp
xchg
gs
mov
jmp
out
mov
int
lcall
int
sbb
les
rorb
test
xchg
fiaddl
adc
daa
lahf
adc
xchg
inc
sbb
popf
jb
xor
insb
call
scas
xor
imul
decl
dec
bound
cmp
cmp
cwtl
jae
movsl
pushf
rorb
sub
xlat
test
loope
jnp
dec
sub
test
out
mov
adc
sti
minps
mov
mov
gs
cli
jge
outsl
mov
push
sub
mov
push
fucomip
mov
mov
push
test
or
pop
clc
fimuls
outsl
adc
popa
dec
pop
pop
icebp
push
adc
jmp
fiaddl
push
cwtl
insb
xor
scas
xchg
repnz
add
adc
pop
data16
adc
cmp
mov
out
cmp
rolb
inc
loopne
jne
jmp
bound
mov
xchg
and
and
ret
push
or
jp
dec
enter
test
jl
pop
lea
fisttpll
xchg
lock
pushf
jb
jne
xchg
xchg
pop
rorl
sbb
sub
or
stos
ss
cmp
mov
jle
mov
shl
in
fwait
cli
int
xor
pop
xchg
and
xor
inc
add
pusha
adc
sub
xchg
pop
push
sbbl
movsb
pop
pop
and
das
mov
mov
or
xchg
jae
inc
mov
ds
iret
mov
inc
js
leave
add
out
loopne
sbb
sub
push
psubw
cmp
rcl
push
lods
mov
cwtl
dec
test
std
jno
dec
sbb
pop
xchg
dec
mov
push
or
and
sub
add
call
jo
rdpmc
add
push
ja
cmc
xorb
jne
sub
sbb
int
adc
ljmp
mov
bnd
frstor
shl
inc
imul
shll
jecxz
mov
stos
mov
shll
and
dec
jb
add
dec
sub
leave
cmp
mov
repnz
icebp
imul
adc
psubusb
mov
fiadds
out
fucomp
jge
mov
dec
jb
sar
shrb
and
loope
int
lods
fstps
es
sbb
xor
lret
test
daa
aas
pop
sbb
imul
dec
cmpsl
std
pop
mov
aam
aaa
mov
mov
gs
or
sub
mov
push
push
jo
mov
mov
pop
adc
mov
dec
pop
cmp
rcl
insb
jmp
gs
pop
xchg
jmp
xchg
scas
sub
pop
sub
jne
or
es
add
in
mov
out
dec
mov
cmp
leave
dec
and
push
rcr
stos
mov
lret
mov
jp,pn
cmp
jno
push
or
insl
sub
mov
push
jle
out
jno
mov
mov
scas
movsl
int
jge
test
ss
les
adc
pop
and
xor
call
cld
outsb
add
sub
xchg
popa
loop
pop
out
pop
js
jl
push
out
xor
out
comiss
cmp
sarl
pop
sbb
popl
cltd
push
lret
cvtdq2ps
push
jns
out
je
xor
movsb
mov
or
sub
sahf
sbb
dec
xor
mov
lea
jno
mov
fwait
sub
fsts
bound
scas
push
insl
inc
push
hlt
je
jge
in
popa
stos
dec
push
dec
and
inc
lcall
xor
js
and
push
pop
inc
xchg
push
dec
sahf
ja
mov
mov
popf
push
push
daa
cmpsl
lock
cmp
xor
xchg
push
pop
insl
data16
lds
cmc
arpl
and
mov
or
xor
sub
scas
pop
jne
rcll
jbe
test
lock
cmc
aaa
xor
mov
ja
cmp
pop
cmp
jne
or
sbb
cmp
xor
pop
jp
inc
mov
pop
xor
sub
ljmp
sub
inc
add
mov
daa
mov
stc
insl
xor
sub
adc
fwait
das
mov
xor
mov
xchg
mov
fiadds
add
mov
jb
std
pop
cli
and
fistps
mov
jns
inc
call
pop
sub
aaa
test
fidivrl
es
sbb
out
aam
xchg
lods
cs
xor
mov
push
test
and
and
ret
iret
iret
sub
ja
insb
push
inc
cmp
lret
fcmovbe
out
outsl
fs
test
movsl
add
sbb
sbb
lcall
add
push
jne
xor
cmp
xor
mov
xchg
insl
push
fdiv
adc
sbb
add
imul
subb
lret
cmp
push
addb
loopne
push
push
sbb
xchg
mov
mov
add
mov
push
pop
call
mov
or
std
and
hlt
sbbb
pop
mov
cld
mov
jb
leave
popa
mov
mov
aaa
add
je
stc
loop
pop
and
rcrb
hlt
pop
pop
lock
sub
repnz
pop
sbb
mov
pushf
fnstenv
subl
mov
iret
fcomi
mov
and
mov
fiaddl
out
icebp
dec
in
scas
dec
pop
xor
xlat
adc
pop
rol
hlt
jae
and
and
test
sub
stos
mov
mull
in
adc
mov
movl
test
lcall
into
aaa
jl
xchg
mov
addb
enter
sub
je
imul
clc
mov
into
into
mov
test
mov
push
sub
stos
dec
lret
cmp
and
mov
testl
loope
repnz
push
out
xchg
cmc
mov
pop
jb
push
cs
jl
decl
mov
jb
push
push
stc
aaa
sahf
sbb
test
hlt
push
iret
leave
in
pop
addr16
lahf
xorl
sub
das
out
mov
lods
cmp
xor
dec
inc
xchg
repz
mov
scas
cmpsb
out
cwtl
add
scas
movsl
icebp
pop
push
cmp
add
fcompl
loop
lcall
sbb
lods
int
mov
adc
sub
jno
ja
lods
jmp
ja
cltd
cld
out
push
popa
and
dec
pop
dec
sbb
xchg
idivl
jb
pop
jo
xchg
test
mov
sbb
cmpsl
dec
inc
or
insb
inc
gs
ja
cmp
icebp
jge
dec
push
into
icebp
or
cmp
xchg
int3
dec
sub
stos
and
pushf
mov
in
cltd
pop
into
jo
shl
insl
or
negb
cli
pop
fcoms
out
fisubrl
scas
shrb
mov
inc
jp
test
lcall
jns
dec
mov
icebp
mov
pop
jge
pop
roll
jnp
repnz
cmpsb
mov
mulb
inc
loope
popa
xchg
fistps
push
ja
aam
or
push
lret
das
dec
inc
rorb
sub
cmp
sub
inc
aas
jbe
push
std
scas
mov
xchg
mov
jbe
fdivl
inc
xchg
imul
les
mov
jle
jl
lret
xchg
dec
add
test
loope
sub
dec
push
mov
pop
sbb
std
clc
xorb
cmp
scas
fidivs
or
subb
jmp
xor
jecxz
xor
mov
mov
test
inc
fmull
fnsave
jecxz
cmc
add
sub
mov
cmp
jecxz
pushf
lock
push
test
ret
mov
jle
mov
and
test
adc
js
mov
fs
mov
push
add
jle
leave
mov
movsl
orb
xchg
pusha
lock
cwtl
xor
inc
je
mov
jl
cmpsb
mov
ret
arpl
neg
adc
pop
push
xor
outsl
jmp
cltd
ljmp
adc
aaa
pop
xchg
push
lea
sarl
stos
sub
or
jno
mov
add
push
mov
mov
daa
sahf
out
aas
lods
mov
cmp
pusha
in
pop
inc
popa
xlat
testb
ljmp
mov
in
arpl
jnp
fdivrl
or
or
and
mov
roll
shll
cmc
test
cmp
iret
sub
loopne
test
aam
cmp
sub
or
xchg
rclb
pop
jnp
push
leave
dec
fstps
out
gs
cmpsl
jno
jb
loope
add
sar
andl
sub
jmp
mov
out
push
xchg
mov
sub
pop
dec
lahf
cmp
pop
cmp
mov
mov
mov
and
outsb
fisubs
push
cmp
es
sar
aaa
xor
sub
lea
xchg
mov
xchg
inc
xchg
jmp
test
xchg
lods
dec
dec
cwtl
xchg
jmp
xchg
inc
std
imul
adc
insb
rcr
or
xchg
mov
out
sahf
loopne
sub
lret
mov
shll
push
dec
pop
scas
dec
pop
jne,pn
popa
inc
adc
or
nop
push
ucomiss
jp
xor
dec
xchg
in
dec
clc
pushf
aaa
and
cwtl
cmpsb
or
fisubs
or
mov
mov
jae
fisubrl
loop
enter
xchg
sahf
xchg
mov
lock
jl
mov
fwait
dec
pop
fstl
lcall
insl
bound
lahf
rcrl
adc
lret
push
mov
pop
mov
lods
adc
enter
sbb
int
dec
test
loop
iret
sbb
pop
adc
cmp
push
xor
pop
dec
push
aas
mov
sbb
fnsave
les
mov
ljmp
test
inc
mov
adc
int
out
stc
dec
inc
je
jge
xorb
dec
std
loopne
or
ds
mov
out
stos
mov
adc
xor
fbld
mov
pop
dec
loopne
xor
add
aaa
das
int
push
push
jmp
xchg
jns
and
xor
data16
das
push
jp
mov
psrlq
push
scas
push
movsl
mov
lret
mov
push
or
mov
push
mov
push
ljmp
sub
jmp
fninit
test
xchg
cmpl
enter
inc
cmp
mov
hlt
xchg
add
push
and
mov
push
fmuls
mov
stc
repz
fidivs
or
dec
xor
jg
push
and
dec
mov
popf
cld
leave
mov
sub
mov
or
lcall
lcall
cwtl
out
inc
add
push
popa
popf
pop
ja
and
and
xchg
jg
adc
dec
sub
add
ret
lods
cwtl
jns
pop
ss
ja
inc
inc
rolb
inc
xchg
dec
xor
fwait
je
subl
out
div
cmp
adc
out
int
subl
lahf
test
daa
jbe
and
test
cmp
test
js
dec
scas
mov
xchg
outsb
movsl
pushf
lahf
ljmp
jne
pop
sbb
jcxz
pop
fnstenv
dec
enter
xchg
sub
test
jl
cmp
cwtl
rcrb
mov
popf
and
push
out
inc
sub
movsl
cli
mov
arpl
push
pop
push
cmp
xchg
xchg
xchg
jno
sbb
imul
cltd
mov
inc
cmpsb
cli
cmp
mov
lds
xchg
leave
jo
jmp
pop
inc
cli
iret
arpl
xor
repnz
and
movsl
popa
adc
insl
aaa
cmp
call
das
imul
int
int3
sbb
ret
pop
cli
lret
cmp
ret
push
insl
insl
scas
inc
lret
mov
roll
dec
pop
jnp
daa
push
mov
mov
fadd
lahf
sbb
pusha
add
imul
subb
jmp
inc
in
cmp
lret
sub
ss
pop
pop
jne
mov
sub
xchg
sbb
xchg
jp
mov
int
leave
fwait
ja
orl
xorb
cmp
inc
pop
xor
sarb
xchg
or
sbb
divb
and
in
push
dec
adc
sub
arpl
xchg
push
jp
inc
fidivl
das
popa
fbld
mov
add
decb
out
das
inc
hlt
adc
push
popf
sahf
mov
and
fsts
insl
cmp
cmpsl
lock
sub
pop
jo
mov
jmp
xchg
fisubrs
icebp
scas
fwait
cld
push
dec
mov
and
movsl
subb
shll
lret
addr16
rclb
rclb
lods
mov
int
mov
sar
aam
adc
fistps
movsl
jno
cli
and
push
aaa
mov
xchg
sub
xorl
add
sti
inc
fidivrl
jmp
sub
mov
shlb
jmp
ficoms
or
adc
arpl
movsb
sbb
push
les
inc
es
leave
mov
dec
xor
adc
sbb
sbbb
mov
add
or
lock
sbb
insb
pop
and
mov
inc
loope
scas
mov
aas
sub
shl
xchg
jo
mov
test
test
jnp
lcall
das
push
cwtl
cmp
lea
jl
iret
cmpsb
addr16
sbb
pop
adc
pushl
sub
leave
aaa
mov
pop
pop
das
sub
push
aaa
sub
out
and
cwtl
adc
test
in
or
adc
in
movsl
je
xchg
sbb
sarb
test
jne
xchg
in
outsb
pop
mov
inc
orb
imul
lock
scas
stos
rolb
jno
outsl
addl
imul
add
sbb
pop
sar
repnz
or
popa
xor
arpl
push
outsl
imul
test
movhps
popf
loop
or
fcoms
notl
xchg
mov
push
cmp
jle
xchg
inc
jnp
push
inc
insl
cmpsl
xchg
rcrb
loopne
testb
stos
xchg
mov
addr16
dec
ja
mov
cmp
lea
xorl
jge
xchg
aaa
mov
aad
cmpsb
imul
in
test
gs
lea
ficoml
pushf
imul
pop
iret
mov
mov
mov
out
cmp
inc
lods
insb
and
cmp
in
fmul
xor
mov
xchg
lcall
lods
dec
dec
je
imul
pop
outsl
jnp
mov
das
mov
push
cmpsl
ljmp
xlat
mov
add
sbb
pop
and
push
ret
test
lods
gs
dec
mov
mov
push
mov
push
les
ficompl
add
mov
pushf
sub
xor
cld
xchg
test
fidivs
nop
xchg
or
dec
shlb
sub
xchg
xor
and
pop
jle
aad
dec
loop
cmp
rol
clc
fwait
mov
dec
add
movsb
xor
insb
jmp
inc
fisubrs
sbb
sub
push
mov
imul
xchg
xor
int3
cmp
and
jb
fs
inc
mov
jo
push
mov
stos
xor
mov
lahf
imul
pop
shrl
leave
popf
enter
leave
fmuls
lret
or
jp
adc
out
shrb
fdivrs
in
inc
sub
mov
aas
imul
jle
lcall
mov
mov
xchg
cld
mov
scas
xor
mov
sub
cmp
leave
notl
xchg
xor
or
iret
jg
push
pop
pusha
lahf
xchg
sub
movb
stos
imul
pop
icebp
lret
ret
test
and
rolb
push
lods
or
xor
data16
loop
shl
testl
mov
in
nop
mov
push
and
icebp
mov
sub
add
inc
push
xchg
dec
insl
xchg
lock
cld
xor
xor
stos
in
jp
xor
pop
stos
gs
cmp
les
jge
icebp
adc
add
shll
cs
mov
xor
or
push
sbb
jnp
or
add
pop
push
push
popf
push
cmp
adc
adc
push
mov
popf
dec
cwtl
cmpsb
and
mov
mov
cmp
xor
mov
add
cli
xor
push
jnp
adc
pop
hlt
cmpsl
arpl
cmp
movsl
cmpl
fadd
adcb
aad
addr16
imul
jns
or
in
fs
cmp
jmp
and
cmpsl
add
cmpsb
jmp
fistpll
mov
inc
mov
pop
das
pop
and
pop
lret
jmp
leave
cld
mov
fistpll
sbb
mov
push
dec
rol
mov
push
jns
mov
mov
adc
jecxz
ja
cmp
xor
icebp
xchg
sub
lsl
jecxz
pop
mov
fcomi
xor
jbe
sub
idivb
mov
jecxz
xchg
jne
incl
sub
data16
les
lods
gs
add
mov
inc
jae
or
cs
cmp
cmp
and
xor
xchg
xorb
xchg
pop
xor
gs
clc
push
std
repz
mov
sub
cmp
out
mov
inc
sbb
data16
cwtl
shll
xchg
cmp
lock
outsl
les
aas
or
loope
and
xor
arpl
fmull
mov
hlt
fldl
inc
xor
aam
js
jb
test
xchg
insb
loopne
cmpsl
sbb
sub
into
movsb
jne
insl
lret
pop
push
das
sbb
and
aad
mov
repnz
fs
lods
pop
or
je
or
ss
fildl
xchg
mov
inc
or
stc
dec
jnp
pop
add
es
fimuls
js
lcall
std
cmp
jp
sbb
jp
sarb
mov
add
lock
clc
dec
push
xor
mov
xchg
cmp
mov
mov
movsb
pushf
call
fwait
shll
cltd
jne
mov
jbe
aas
push
mov
out
push
sbb
fsubrs
and
ds
and
outsl
mov
int
test
movsb
pop
jb
loope
jns
sub
hlt
popa
xorw
out
adc
jmp
cltd
jecxz
mov
push
or
icebp
pop
pop
dec
xlat
sahf
add
and
mov
xchg
pop
repnz
inc
or
in
leave
jg
and
cmp
pop
mov
mov
cmpsb
icebp
jns
imul
adc
and
loopne
sbb
push
pop
fdivrs
mov
ficoms
sahf
pop
xadd
adc
and
cmpl
lret
cmp
inc
ja
iret
and
cmp
dec
mov
and
or
enter
out
add
xchg
add
pop
xor
dec
push
rclb
testb
jl
dec
lahf
lret
shlb
pop
fmuls
sbb
and
sub
pop
stc
shrl
xlat
jbe
push
jb
cli
repz
daa
daa
icebp
movsb
scas
dec
or
lods
pusha
pop
sub
scas
or
push
nop
imul
xchg
dec
mov
sbb
inc
inc
jl
sbb
mov
repnz
jp
hlt
scas
push
stos
fldenv
xor
int3
fmull
jno
adcb
das
je
les
cs
lcall
mov
mov
mov
aas
pop
and
jbe
pop
scas
xor
xchg
lds
or
cmc
cmp
sbb
inc
shll
lret
and
aad
jecxz
pop
mov
pop
aaa
ficoms
dec
scas
ja
lcall
inc
insl
cmpsl
jg
inc
loop
je
pop
jns
lahf
push
ss
adc
imul
sub
mov
aad
and
add
pop
lods
stc
stc
int
stos
jbe
scas
xor
cwtl
gs
jno
in
or
fistpll
xchg
cltd
pop
sub
and
test
es
loop
loopne
mov
pusha
sub
lods
inc
sub
pop
inc
inc
or
add
je
dec
ja
dec
mov
int3
and
jne
ja
inc
mov
addr16
mov
loopne
js
push
mov
gs
fistpl
test
sub
cwtl
push
lds
or
dec
shr
movsl
jle
mov
mov
xor
hlt
push
ret
sub
in
std
pop
out
mov
adc
jle
sbb
hlt
push
cwtl
pop
mov
negb
into
mov
stc
not
adc
iret
ret
sub
stos
cmpsb
shr
pop
push
inc
adc
faddl
and
lods
and
std
out
adc
or
cmpsl
pop
cmp
sbb
movsb
and
xor
jmp
lahf
lcall
mov
inc
les
add
bound
stc
shrl
jne
mov
xor
fsubrl
hlt
adc
imul
xchg
mov
fmuls
dec
ret
test
mov
stos
inc
scas
mov
xchg
cmpsl
add
mov
xor
mov
push
sarl
pop
iret
mov
arpl
pop
and
lea
or
adc
bound
insb
push
lahf
mov
leave
or
roll
fisttpll
in
pop
add
cs
mov
xor
jle
pop
adcl
cmpsl
outsl
ja
push
xor
jns
rcrb
inc
mov
mov
jae
mov
dec
enter
dec
outsl
mov
lahf
pusha
std
mov
aad
sbb
mov
stos
scas
aaa
push
std
inc
mov
sub
inc
call
pop
dec
jns
sub
and
sub
outsl
push
dec
jp
test
inc
testb
in
push
jecxz
mov
lock
lret
bnd
sbb
lret
mov
in
pop
ljmp
pop
fwait
cmp
loopne
and
nop
pushf
pop
fiaddl
xchg
adc
jb
pusha
mov
lcall
je
adcb
sbb
aam
js
jne
mov
enter
add
mov
ss
in
adc
jb
jno
ja
xor
adc
xor
dec
push
sub
gs
test
adc
and
inc
inc
adc
pop
mov
das
pop
push
cwtl
pop
inc
pop
pop
mov
in
inc
adc
popa
dec
adc
jge
xchg
cwtl
or
scas
insl
sub
divps
or
stc
mov
cmp
dec
pop
iret
cs
movsb
test
pop
pop
out
pop
scas
testl
jbe
add
loopne
repz
test
fs
jno
mov
push
in
and
fsts
iret
lahf
sbb
sbb
push
inc
jge
jo
jecxz
fcmovnu
sbb
les
push
mov
not
sub
and
daa
jle
repz
add
mov
xor
aas
or
mov
movb
shrb
ds
cmp
mov
jae
loop
and
add
lahf
pop
mov
push
adc
les
xor
sbb
outsb
adcb
cmp
dec
sbb
sbb
xor
es
mov
stc
imulb
repz
movsb
pop
sub
or
fnstenv
jle
cmpsl
jmp
or
int3
xlat
jl
jmp
addr16
scas
popf
fmul
mov
xor
fmuls
leave
sbb
dec
shlb
mov
and
bound
push
xor
outsl
push
nop
pushf
cwtl
sub
dec
stos
xchg
push
out
repz
sbb
jne
push
pop
pop
jb
jns
pop
es
dec
loopne
fcmovu
jl
push
lahf
push
push
mov
xor
lcall
push
stc
inc
test
sbb
jg
movsb
push
and
mov
fcomi
scas
mov
rcll
sbb
cmpsb
jle
outsb
pop
cli
cmp
add
shlb
lret
jg
jbe
dec
repz
mov
adc
ds
fisubs
test
or
dec
cld
sbb
jmp
mov
pop
jo
add
testb
mov
mov
fstpl
sub
sbb
push
rolb
jecxz
pop
and
cmc
pop
mov
cltd
mov
adc
jmp
pusha
gs
test
shlb
testb
xchg
jecxz
dec
mov
cmp
scas
xchg
mov
xor
xchg
cmp
test
daa
xor
fdiv
popa
mov
loop
and
adc
pop
sub
xor
lret
aas
push
mov
fwait
in
pop
cmp
mov
and
pop
addb
outsb
jmp
imul
xchg
mov
cmpsb
mov
jbe
xchg
pop
dec
xor
sub
mov
cmp
sub
and
enter
test
adc
sub
inc
std
out
add
into
mov
mov
add
pop
jnp
inc
xor
pop
mov
pop
pop
sbb
icebp
imul
mov
shl
sub
add
mov
xchg
in
push
add
push
lret
mov
cmovl
int3
add
inc
add
push
push
pop
arpl
mov
cwtl
mov
pop
and
sub
pop
jg
test
pushf
add
mov
je
dec
xor
out
int
rcrl
jb
sbbb
jno
imul
mov
hlt
sbb
es
add
stos
mov
pop
jl
ds
push
add
out
lods
xchg
aad
icebp
mov
leave
add
sti
loopne
and
xchg
clc
and
xchg
rcrl
lahf
fs
loope
cmp
les
add
lcall
rol
sbb
loop
xor
shll
arpl
add
nop
into
and
outsl
mov
xchg
pop
pusha
aam
lods
pop
shll
scas
out
std
dec
adc
dec
mov
push
rolb
mov
lock
xchg
scas
add
mov
xchg
insb
mov
push
sbb
lods
inc
imull
scas
xor
mov
fwait
pushf
inc
stos
dec
out
loope
into
push
out
mov
lcall
mov
pop
lahf
push
push
jne,pn
idiv
sbb
cmp
inc
adc
cmpsl
repnz
cwtl
mov
mov
sbb
add
icebp
xor
or
dec
je
fcoms
fwait
add
mov
jmp
les
and
and
sub
add
cmpsl
xchg
push
leave
lods
fistps
xchg
mov
inc
in
add
cltd
sub
fmul
xchg
jmp
or
shrb
lahf
xchg
mov
out
cmc
dec
addr16
fst
inc
outsb
xor
cwtl
mov
lahf
sub
push
add
rclb
jo
xor
add
sub
inc
inc
arpl
lods
add
push
pop
ficomps
frstor
and
cmp
push
mov
push
divb
jae
adc
pop
dec
cmc
pop
sub
dec
lds
push
insb
cmp
call
and
ja
xchg
sbb
xor
imul
mov
iret
xchg
test
lcall
cmc
mov
ret
test
dec
mov
dec
call
mov
mov
imul
xorb
add
leave
jl
or
in
xlat
mov
pop
or
dec
dec
jnp
push
test
cwtl
loop
lds
mov
ja
pop
push
jno
xlat
xchg
mov
stc
mov
jns
xor
add
fsubrs
or
sub
xchg
pusha
cli
pop
xor
xchg
aad
push
sub
inc
bnd
jge
adc
xorb
adc
inc
lock
or
adc
fidivrl
dec
mov
xchg
mov
pop
lds
push
rolb
pop
fisubl
inc
or
xchg
shrb
fdiv
clc
sti
ds
mov
add
rolb
cmp
pop
js
mov
repz
scas
test
mov
mov
faddl
xor
inc
aaa
add
adcl
nop
push
xor
cmp
inc
xor
xlat
dec
pop
or
inc
aad
lds
dec
adc
out
sbb
movl
rolb
push
enter
js
and
ljmp
scas
shrb
inc
and
fs
daa
adc
jge
inc
shll
jge
rcrl
cli
push
mov
ret
pusha
jbe
push
sub
andl
pop
jb
mov
pop
push
cli
test
lret
jmp
je
sub
dec
dec
inc
push
push
inc
outsl
mov
das
mov
or
push
push
sbb
dec
fbstp
ror
dec
fwait
stc
inc
dec
add
mov
mov
scas
mov
push
jle
arpl
jb
lahf
xor
icebp
pusha
mov
pop
mov
pop
jecxz
testb
pop
xor
mov
pop
ds
sub
xor
scas
sub
loop
mov
sub
out
or
dec
cmp
aas
jp
cltd
out
dec
adc
mov
and
in
cmp
out
addr16
mov
mov
fldcw
push
fstps
adc
add
cmp
xlat
jae
mov
out
pop
pop
ret
pusha
sbb
pop
adc
adc
scas
jno
cmp
cmp
hlt
cmp
fwait
inc
sbb
jae
js
out
push
daa
xchg
addr16
je
andb
inc
push
dec
mov
inc
pop
xlat
push
or
lret
addps
out
clc
push
cs
push
addr16
fmul
mov
sub
fstp
mov
test
adc
int
enter
fwait
jb
addr16
out
and
ss
bound
jbe
outsl
ret
push
cmpsl
inc
add
shlb
leave
cmp
inc
insb
lods
lret
add
mulb
push
nop
scas
adc
adc
xchg
jb
pop
xchg
xchg
adc
jg
adc
rorl
fcmovnb
xor
mov
leave
ds
popf
aaa
imul
stc
add
arpl
sarb
mov
sub
jae
sbb
add
push
adc
push
aam
sub
das
jle
cmp
sbb
adc
dec
inc
sub
popf
je
pusha
out
and
js
outsl
mov
ljmp
mov
ds
out
int
cmp
stos
movsb
repnz
xchg
gs
jne
add
inc
ret
dec
outsl
inc
adc
cmpsb
xchg
dec
hlt
jp
sbb
popa
pop
mov
or
lods
repz
pop
cmpsl
sub
or
jge
insb
dec
mov
stos
and
dec
rorb
fsubs
mov
mov
sub
xchg
imul
movsl
push
xchg
js
loopne
in
test
mov
sbb
iret
in
dec
leave
inc
rcll
xchg
popa
out
stc
rcrb
add
xor
out
jl
ret
in
mov
sbb
sahf
sub
cli
mov
or
fiaddl
and
cmp
es
mov
cmc
subb
inc
cli
jecxz
jne
dec
cmpsb
ret
faddl
icebp
cwtl
mov
in
and
jbe
jecxz
clc
fnstenv
sub
and
mov
sub
cmp
out
and
jl
and
push
push
mov
jmp
add
jae
daa
ficoms
push
push
dec
add
mov
adc
lahf
fcoms
add
inc
or
inc
xor
pop
cld
jecxz
outsl
cs
pop
adc
in
rcll
jns
push
xchg
and
push
fistpll
mov
into
and
in
jb
push
sub
js
pop
adc
pop
cmp
rcrb
push
stc
pop
scas
adc
xor
pop
jg
dec
ss
mov
mov
cmp
xor
loop
mov
orl
sbb
or
js
aaa
sbb
enter
sbb
xchg
mov
adc
pop
loopne
stos
or
inc
mov
shrb
cmp
insb
cmp
adc
or
cmc
test
push
xchg
in
pop
adc
es
and
repnz
xcrypt-ofb
cmpsl
imul
pop
mov
mov
push
fistpll
mov
and
mov
push
test
add
or
jp
scas
fs
rcll
mov
fisttpl
in
test
sub
lcall
pop
xor
mov
pop
std
imul
cmpl
stos
call
retw
mov
insl
inc
jbe,pn
fwait
mov
dec
xchg
push
std
mov
push
in
in
push
lcall
jo
xchg
mov
add
in
add
push
dec
xor
and
scas
orl
sbb
andl
mov
jbe
rcr
add
movsl
sti
std
ret
jae
test
leave
jb
mov
subl
fs
in
mov
sahf
push
fs
lds
testl
insb
scas
jl
fildll
je
lods
sti
daa
mov
push
xchg
mul
mov
fcoml
xchg
int3
dec
jbe
test
cmp
push
stc
int
pop
lahf
jne
cmp
ds
lods
outsb
mov
or
push
lods
jae
inc
jnp
sbb
or
mov
cld
out
push
add
shlb
insb
pushl
mov
add
pusha
fistpl
sbb
movsl
push
push
cmp
mov
cmp
pusha
pop
cmp
outsl
insb
shrb
cmpsl
dec
in
pop
lods
idiv
jns
pop
test
iret
out
xchg
scas
push
insb
in
jmp
xchg
test
lcall
xchg
mov
inc
mov
roll
inc
clc
jmp
icebp
push
sub
sbb
lock
test
mov
fbld
ja
loop
mov
and
gs
push
or
sbb
adc
fidivl
add
push
into
jo
sub
outsb
int
pop
cmp
inc
pop
cmpsb
add
cld
cli
ljmp
pop
jle
call
ds
nop
inc
mov
lock
push
push
idivb
cwtl
and
jg
out
xadd
sbb
enter
std
add
jns
out
jno
jl
sub
mov
sub
aas
mov
cmp
adc
cli
mov
fstps
mov
mov
scas
cld
cmp
mov
and
cmc
cmp
leave
add
dec
adc
lock
dec
fsubrl
mov
rolb
inc
dec
out
ret
fiadds
es
adc
movsb
mov
out
jg
cld
hlt
icebp
dec
ss
pop
cmp
sub
push
push
int
pushf
push
out
pop
jno
fbld
or
jbe
sbb
mov
jne
push
xchg
fsub
mov
pusha
jp
push
dec
or
je
test
xor
in
sub
and
inc
ret
fcmovu
cld
inc
mov
mov
hlt
xchg
stos
push
xchg
jl
pop
jmp
fiaddl
int3
inc
xor
pushf
mov
cs
mov
add
mov
lods
xor
jo
inc
cmp
sub
stc
repz
cld
repnz
mov
xlat
out
inc
ljmp
aaa
ja
xchg
cmp
or
pop
xor
inc
test
loop
jp
cmp
pop
cmp
bnd
sbb
in
pop
push
loop
push
jo
or
aaa
test
pop
lret
les
xchg
cli
popf
rcr
int
fiadds
sub
or
movsb
loop
or
mov
rorl
push
arpl
inc
leave
rorb
test
out
xorb
xor
mov
aaa
int
and
jo
jb
xchg
ror
adc
xor
outsl
aaa
xchg
adc
iret
aam
jae
inc
test
jb
das
lcall
xor
xchg
mov
rcrb
in
aas
sub
adc
mov
fcomip
jge
pop
sub
scas
cmpsl
sub
sub
in
stos
pop
mov
test
lret
je
stos
pop
dec
mov
add
sarl
inc
out
ljmp
add
sub
add
fwait
cmp
int
jecxz
ret
jne
adc
test
ds
inc
or
adc
xchg
mov
sbbl
mov
jl
fisttpl
xor
andl
jl
fs
jbe
and
jp
cmc
je
inc
psubb
cmp
jge
mov
pop
dec
shlb
pop
jo
pushf
adc
mov
sti
push
lret
inc
xchg
sbb
cli
test
roll
imul
dec
mov
ret
cmp
mov
orb
jmp
xchg
pop
int
jae
adc
jmp
mov
shrb
scas
es
loopne
fnstenv
hlt
and
iret
sub
shl
lods
or
sti
in
out
fldenv
add
in
movsl
cmp
mov
test
int
outsb
out
sbbb
adc
xor
test
outsb
int3
push
mov
jl
gs
clc
push
dec
out
sbb
repz
xchg
jl
lock
icebp
stos
ds
mov
xlat
push
mov
lahf
nop
pushf
adc
out
aam
lods
xchg
mov
adc
pop
enter
add
push
lods
repz
insb
int
adc
in
popa
pop
push
fcmovnb
lock
add
into
adc
pop
jo
adc
cmp
es
jmp
and
or
je
xor
cmp
push
pop
adc
popf
hlt
jae
add
add
movsb
cs
iret
mov
mov
cmp
sub
inc
aaa
gs
push
xor
jns
mov
mov
dec
dec
and
je
mov
hlt
xor
scas
repz
or
sbb
stos
sarb
push
sub
cwtl
add
rcrb
loopne
dec
loopne
icebp
mov
mov
enter
test
inc
in
js
mov
mov
dec
cmp
cmp
mov
add
movsb
jp
mov
xor
jge
es
imulb
xor
pop
dec
and
test
inc
outsl
pop
ss
test
mov
cmp
aaa
dec
pop
jae
jne
repnz
xchg
lret
jno
aaa
pop
cmp
add
mov
adc
fstpl
pop
sti
ljmp
jns
insb
mov
in
xlat
jp
sti
sahf
jns
cmpsl
and
and
lds
in
mov
loop
and
add
xorl
sahf
gs
jo
outsb
in
mov
rolb
repnz
rcll
sub
fs
repz
dec
mov
je
popf
jle
mov
adc
add
mov
add
popa
arpl
rolb
ljmp
les
es
mov
add
mov
pusha
cmp
aaa
in
int3
xor
xchg
in
cmp
adc
int3
int3
sbb
outsl
jg
ljmpw
cli
movb
add
mov
xor
mov
jae
mov
xchg
xchg
mov
and
lahf
add
lahf
pop
ljmp
xchg
loope
in
incl
xor
or
mov
in
aam
fdiv
ljmp
push
test
fildll
xor
dec
cwtl
mov
dec
sbb
jbe
sbb
insb
popl
rcrb
pusha
cmp
mov
push
sbb
sbb
adc
mov
inc
popf
negb
xchg
sbb
pop
pop
mov
mov
addr16
add
mov
xor
inc
pop
and
xchg
mov
idivb
lar
aas
in
jns
dec
or
pusha
sahf
test
ja
imul
sbb
ret
loop
out
xchg
xchg
jle
mov
fbld
xorb
jp
push
ror
insb
icebp
or
in
push
pop
mov
sti
cmp
xchg
mov
int
jae
std
or
in
pushf
dec
push
cmp
shlb
ltr
icebp
mov
mov
int3
cmp
and
pop
pop
sub
jg
ret
jnp
pop
cltd
xchg
mov
les
pushf
mov
sub
dec
push
popa
and
xchg
insb
mov
mov
pop
mov
push
or
push
stos
in
dec
xorb
cmpsl
xchg
inc
sub
jecxz
fdivrl
dec
movsl
mov
xor
imul
add
adc
leave
and
xchg
mov
jmp
jae
aam
cmc
adc
mov
fidivrs
imul
xchg
inc
jne
js
push
sbb
mov
xchg
repz
mov
aas
addb
mov
pop
push
cmp
push
ret
xchg
xor
pushf
or
mov
repnz
fxam
sub
les
cmp
sbb
mov
fadds
cld
icebp
pop
loop
or
call
repnz
out
mov
sarl
rcll
gs
lds
dec
cli
sub
in
add
repz
inc
pop
bound
out
jmp
mov
shl
xchg
mov
fsubrs
and
push
cmp
xor
imul
push
or
pop
push
ljmp
leave
push
ds
aam
push
dec
mov
mov
in
insl
hlt
xorb
lret
mov
adc
outsl
outsl
pop
inc
jb
jmp
mov
xlat
xor
jo
mov
dec
loope
rcr
roll
xchg
mov
push
inc
adc
lea
add
stos
sbb
jb
adc
mov
pop
adc
mov
pop
xchg
lret
outsb
mov
clc
mov
cmpsb
mov
ret
pop
loop
and
stos
cmp
int
fwait
lcall
xchg
inc
adc
jmp
mull
xor
movsl
sbb
jae
mov
in
enter
lcall
mov
pushl
mov
mov
push
mov
inc
shrl
xor
jp
movsb
test
add
inc
rep
inc
inc
xchg
sub
xchg
pop
adc
es
out
jo
or
xchg
push
push
icebp
loop
and
sub
mov
mov
lret
cmp
cmp
es
test
lahf
and
jne
jl
push
out
xchg
into
push
int3
jmp
into
push
jp
xor
pop
xor
xchg
movsb
fcomi
stos
ljmp
inc
outsb
mov
jp
mov
cmpsb
sbb
mov
bound
dec
sub
xor
stc
xchg
lahf
outsl
iret
pop
outsl
jl
loopne
pusha
aad
cmp
jnp
mov
add
cmp
in
lds
dec
sbb
shr
aam
imul
mov
lret
inc
pop
imul
mov
add
xchg
jb
cmc
int3
jo
outsb
mov
iret
xor
cmp
pushf
leave
ljmp
xor
out
repz
xchg
fwait
xor
and
lahf
cmpsb
shlb
movsb
push
add
mov
add
inc
scas
pop
shll
jae
mov
push
mov
movsl
ja
cwtl
movsl
int
add
jmp
xlat
int
das
mov
sbb
mov
mov
add
mov
jns
cld
sub
or
jl
sub
dec
es
pushf
and
mov
add
and
dec
cmc
jmp
or
int3
pop
cmp
add
pop
jge
shl
mov
lea
cld
or
xchg
adc
mov
or
notl
xchg
lret
mov
pop
mov
cmpsl
stc
cmp
dec
aam
add
and
push
repz
repnz
push
setno
call
jecxz
insb
jb
imul
shl
incb
jo
int
dec
or
mov
ja
sub
xchg
rcrb
divl
popa
xorl
pop
add
add
stos
push
cmpsl
sahf
pop
arpl
mov
jg
nop
test
into
add
dec
mov
cmp
push
loope
mov
mov
rorl
fwait
or
adc
mov
xchg
lock
cwtl
imul
loop
ljmp
lret
adc
mov
xchg
cmpsl
and
ret
dec
adc
push
dec
iret
sub
cmp
in
xchg
push
cli
movsb
hlt
add
pop
mov
dec
xor
push
insb
insb
mov
clc
inc
je
fwait
hlt
lcall
and
jne
aad
movsb
shrl
out
adc
popa
es
jl
lret
loop
jecxz
das
sahf
push
mov
mov
pop
and
sub
pop
mov
mov
xor
mov
cwtl
test
mov
xchg
test
cmp
xor
mov
out
and
int3
push
shrl
cmp
ja
adc
sti
test
fmuls
sub
xchg
in
mov
lcall
cmp
jns
inc
scas
mov
pushf
movsl
and
insb
lds
cmpsl
xorb
add
enter
cld
test
aam
push
push
and
int3
popa
push
cwtl
or
outsl
inc
adc
fsubrl
fldl
cmp
loop
int
in
jmp
push
xchg
fists
sbb
mov
jmp
into
xchg
fs
sub
jecxz
xchg
cs
xor
fstl
cmp
jnp
dec
push
mov
loope
xlat
cwtl
cld
gs
mov
push
inc
pop
xchg
nop
pop
movsb
hlt
push
add
push
sub
add
stos
les
sub
mov
in
push
daa
add
sti
inc
sub
sub
sub
and
ror
sub
imull
jno
ret
arpl
or
xor
jle
mov
jmp
fisubrl
out
cmp
shll
sub
aam
lock
je
je
ja
pop
popf
xchg
jecxz
call
jp
insb
adc
sbb
dec
sub
mov
lahf
fdivrp
push
jp
jbe
insb
fildll
inc
shrl
lods
pop
mov
jae
lea
or
loope
sub
sub
or
in
js
cmp
or
mov
or
daa
lods
mov
xor
cli
jmp
push
jnp
pop
lcall
insl
repnz
cmpsb
in
cmpsb
call
mov
bound
xchg
xchg
pop
lea
sbb
cmp
mov
xchg
cwtl
inc
scas
cmpsl
aaa
mov
mov
or
mov
inc
fsubs
shl
sub
xlat
shrl
mov
sar
outsl
mov
adc
jl
xor
dec
pop
jecxz
xor
stos
das
mov
cs
cmp
xor
pop
push
mov
cmpsl
inc
lret
xchg
mov
shlb
dec
test
clc
pop
js
mov
push
mov
inc
mov
addr16
shl
sti
data16
add
xchg
inc
dec
ljmp
movsl
push
and
cmp
lea
lahf
sbb
imul
notl
cmp
ret
stc
cwtl
cmpsb
adc
js
push
pusha
and
adc
das
lea
cmp
mov
ss
cmp
xor
push
sbb
cmp
ret
scas
push
cli
adc
sub
add
xor
sub
leave
add
sbbl
sbb
or
movsl
in
inc
inc
push
jl
pushl
dec
inc
movsb
add
jp
pop
mov
push
and
fistpl
testl
pop
lock
jmp
sbb
sbb
jle
lock
mov
sbbl
sbb
int
lods
subb
mov
xchg
mov
mov
pop
mov
mov
sub
inc
in
push
xor
inc
sbb
xor
mov
aad
or
sub
xor
pop
in
xchg
ljmp
add
and
movsb
push
in
cmp
pushf
push
and
adc
int3
aad
xchg
ss
idivl
aad
popa
call
add
pop
hlt
imul
mov
idiv
push
dec
adc
sbb
lret
push
iret
nop
push
sub
xchg
jns
mov
ss
mov
test
call
and
mov
pop
inc
xlat
jg
gs
xchg
fwait
fs
adc
pop
jo
test
mov
outsb
subb
lcall
push
roll
mov
mov
aaa
test
aad
je
sub
daa
lods
jns
popa
pop
lcall
das
data16
mov
push
mov
pop
xchg
loope
clc
and
cmc
scas
mov
js
mov
call
jns
sub
rcrl
jae
ljmp
repz
pop
cmpsl
inc
imul
dec
mov
cmp
mov
sub
int
mov
or
repz
fsubs
ffree
flds
push
enter
daa
out
negb
push
loopne
int3
mov
les
or
add
dec
stc
mov
cli
stc
movb
cmpsl
scas
mov
cs
xorl
pop
or
mov
mov
arpl
cld
and
fnstenv
push
lea
rcl
nop
orb
std
add
xor
dec
cwtl
cmpsl
adc
arpl
push
and
hlt
in
mov
mov
aaa
pop
sahf
mov
cmp
ss
enter
add
fsts
sti
fucomip
testl
xor
mov
jl
scas
mov
push
sbb
lock
jg
fnstenv
pushf
in
test
add
lret
out
or
pushf
shrd
dec
lods
push
movsl
daa
fidivrs
lea
inc
fmuls
test
xchg
and
jg
jmp
dec
mov
jle
fstpt
sahf
pop
xlat
dec
and
ss
stc
fiadds
xchg
inc
jecxz
sbb
insb
cld
xor
and
mov
mov
mov
aam
or
jl
pusha
inc
stos
xor
and
mov
cs
lea
out
ja
arpl
loop
addb
add
cmp
xorb
andl
adc
fdivs
dec
aaa
inc
dec
xchg
aad
add
and
mov
mov
sub
cmp
adc
sbb
arpl
insl
lds
pop
shlb
loope
xor
push
and
lods
aaa
icebp
xchg
mov
push
jo
or
into
mov
sub
and
add
cltd
ss
cli
lods
fwait
xchg
das
push
inc
test
fwait
mov
and
inc
xchg
xor
popa
inc
popa
insl
out
stc
pusha
insl
rclb
jmp
mov
int
and
repnz
repz
adc
or
popa
mov
xchg
leave
testb
lahf
or
clc
or
pop
ret
call
xchg
jae
mov
jbe
xlat
push
push
cltd
fisubrs
loopne
pop
loopnew
jecxz
add
fwait
cmp
jecxz
xlat
push
mov
cmp
out
scas
pop
stos
xchg
bound
mov
shll
adc
xor
xchg
or
ljmp
pusha
mov
push
pop
pop
lret
xor
je
mov
push
data16
in
faddl
insl
mov
iret
lahf
xchg
xchg
jg
xchg
jl
fldenv
leave
orl
shlb
jge
lds
jb
adc
cmpsb
lret
aam
add
jmp
repnz
test
xchg
jo
outsl
mov
ficoms
mov
or
sbb
bound
xor
push
sub
ds
add
cmp
jns
dec
les
mov
cld
ficompl
sub
pop
loope
ds
cmp
lock
xchg
cltd
bswap
xchg
pop
aam
mov
jl
sbb
sbb
out
lret
mov
mov
aam
mov
test
shll
pop
fbstp
and
fcomi
or
and
lahf
in
jnp
insl
push
bound
pop
cmovns
adc
hlt
push
fldl
inc
push
xchg
roll
inc
and
or
cmpb
stos
inc
daa
int3
aam
mov
fidivrs
adc
xchg
orb
dec
std
push
mov
push
pop
test
test
pusha
lret
cmpsb
cltd
xchg
xor
mov
jl
into
lahf
stos
lahf
mov
imul
sub
cmpsb
dec
pop
in
add
mov
xchg
outsl
sub
xchg
pop
pop
imul
add
stos
and
xchg
fbstp
jp
mov
inc
cmpl
lahf
mov
push
jge
dec
push
movsb
movsb
and
mov
cmpsl
xchg
and
movsl
iret
gs
dec
pop
negl
leave
jno
inc
lea
stos
mov
mov
push
scas
pop
inc
push
test
rcrl
lods
les
cld
aaa
and
dec
pop
adc
inc
test
push
push
lret
sahf
lcall
int3
dec
fistpl
push
stos
cmp
sar
cli
jno
mov
adc
xor
int3
push
mov
sbbb
xlat
fcoms
mov
mov
sbb
add
lret
adc
inc
out
int3
mov
jmp
xor
inc
mov
mov
push
xchg
ret
js
mov
adc
inc
lock
sbb
daa
sub
loopne
xchg
test
xchg
xorl
pop
fcoms
dec
mov
fstpl
mov
faddl
lds
aas
sti
sbb
fcmovu
in
cs
stos
fwait
inc
ret
cli
mov
cmp
xor
xor
fsubrs
shll
addl
pop
rcrl
xchg
imulb
inc
xor
call
xchg
loopne
pop
ss
sbb
push
nop
mov
jmp
mov
mov
stos
mov
xor
xor
pusha
mov
cs
lcall
out
bound
cltd
out
inc
out
aaa
xchg
cmpsb
popl
pushf
push
inc
leave
lret
add
daa
icebp
mov
pop
imul
and
jg
mov
loopne
add
lcall
mov
adc
lds
jo
sbb
inc
or
cmc
mov
stc
pop
adc
push
or
rolb
add
aad
cmpsl
xchg
shlb
stos
lds
sbb
movsl
lcall
adc
add
mov
xchg
repnz
dec
hlt
fdivl
mov
adc
movsl
popa
mov
xchg
scas
addr16
sbb
cmp
mov
shlb
pop
aas
pop
push
or
xchg
mulb
fstps
aaa
jecxz
lods
mov
icebp
push
addl
loop
push
or
movsl
dec
dec
dec
and
adc
push
filds
pop
cmc
mov
dec
nop
mov
xor
stos
cli
stos
stc
mov
out
pop
test
jbe
cmpsl
out
leave
push
pop
std
jg
fldenv
jo
mov
push
pop
test
test
insl
mov
or
add
sub
dec
mov
or
pop
and
mov
pop
add
out
dec
add
mov
and
insl
icebp
mov
mov
movsl
ret
std
outsl
xor
sub
add
xor
cmp
lret
adc
sbb
lcall
pop
roll
mov
xchg
js
adc
push
cld
lds
push
or
pop
shrb
aaa
mov
mov
adc
and
rcll
std
iret
push
add
dec
and
cltd
lds
div
repnz
dec
lea
add
dec
push
push
roll
push
out
mov
loope
mull
pop
loopne
jno
sahf
and
aad
or
pop
stos
outsl
loopne
testl
and
daa
jne
jae
adc
cmp
daa
sub
xor
jp
pop
fs
add
sub
xchg
int
push
mov
xchg
insl
call
sbb
adc
mov
dec
xchg
aas
jge
adc
mov
adc
add
inc
icebp
call
push
sub
cmp
pushf
push
sub
jecxz
insl
sahf
xchg
inc
subb
and
lods
jecxz
popf
cld
call
scas
clc
sbb
sbb
arpl
cld
jbe
add
mov
vmwrite
outsl
dec
add
ja
jno
jl
rep
gs
addr16
in
xlat
dec
and
mov
sub
sahf
push
icebp
lock
sbb
mov
and
andb
push
stos
fdiv
or
int
dec
ret
mov
mov
ret
repnz
jbe
insl
push
icebp
test
jp
mov
mov
cwtl
pusha
cmp
insl
cs
dec
cwtl
mov
mov
inc
mov
lret
popf
push
insl
sarb
ret
fadds
aaa
repz
arpl
in
cmc
outsl
and
lcall
adc
xor
js
jge
mov
fcompl
aaa
xchg
test
xor
mov
mov
inc
outsl
mov
fldt
cmc
adc
arpl
sub
leave
and
push
das
or
xchg
inc
mov
pop
in
jmp
sarl
jbe
inc
jb
add
fists
insb
pop
mov
mov
jecxz
sub
push
imul
or
push
jb
repz
mov
mov
xchg
fisttpl
jne
xchg
clc
jl
mov
addps
call
xchg
push
dec
push
mov
lods
rcll
cmpsb
adc
sbb
sbb
xor
cmpl
and
cld
ds
hlt
scas
lds
aas
inc
lret
push
xchg
or
cmp
out
icebp
enter
jg
push
mov
mov
cmp
divl
test
jl,pt
adc
movsl
shll
mov
ret
fdivl
push
aas
xchg
cmpsb
cltd
xor
push
call
jns
ret
jecxz
dec
mov
scas
shll
rolb
pop
ljmp
les
lcall
pop
jecxz
sarl
les
pop
jae
mov
xchg
stos
loope
cmpsl
jecxz
sub
push
out
les
inc
fld1
popf
scas
mov
cmpsl
inc
cmp
add
jmp
dec
xlat
sbb
movsb
out
sbb
push
xlat
scas
push
inc
cmc
or
mov
scas
out
int3
xchg
lds
dec
sti
xor
push
out
jno
add
inc
pusha
adc
jo
out
and
cs
or
push
test
sbb
push
push
loopne
out
and
addr16
mov
inc
push
pop
out
cmp
xor
pop
stc
jns
sub
std
js
add
inc
lock
push
ret
pop
int
mov
push
inc
inc
test
or
test
xor
sub
sbb
dec
dec
daa
pop
js
mov
pusha
leave
mov
out
imul
movsl
mov
shlb
lods
pushf
push
in
enter
or
outsb
ljmp
push
or
add
jl
sbbb
ss
mov
xor
mov
sbb
lock
pop
mov
xchg
cmp
rcrl
imul
inc
repnz
sbb
mov
data16
sub
es
outsb
fidivl
push
xor
imul
xchg
pop
aas
xchg
sbb
js
int3
cli
std
mov
lcall
sub
mov
xor
xchg
xchg
xchg
mov
subb
sub
std
fildl
cli
rorb
jge
cmpsb
cmp
xor
dec
cwtl
xor
adc
pop
lds
nop
mov
dec
popf
sbb
dec
sarl
idivl
out
sub
mov
push
fisubrl
leave
cmpl
lds
pop
inc
mov
cmpb
ror
test
in
rol
insb
cmp
and
in
out
lret
loop
lods
xor
mov
mov
outsl
adc
jle
xor
lahf
ljmp
xor
jl
mov
dec
inc
inc
rclb
adc
popa
xlat
pop
dec
and
aas
lahf
cmp
roll
out
fs
imull
add
leave
movsb
and
mov
cmpsb
jbe
inc
pop
xor
cltd
jo
addr16
inc
xchg
aaa
pop
cmp
outsl
cmpsl
pop
scas
inc
xor
aas
or
and
gs
mov
mov
push
sbb
outsl
push
xchg
sub
inc
mov
fstpl
rorb
popa
add
in
lock
int
jg
mov
lea
sarl
sub
adc
insb
mov
and
out
inc
jecxz
ja
mov
jle
iret
jbe
cmp
xchg
sub
push
test
jmp
int
jnp
outsb
mov
adc
mov
pushw
pop
add
addr16
fstpt
xchg
in
pop
mov
push
mov
sub
adc
out
lods
lcall
popa
cli
mov
mov
mov
notb
mov
mov
mov
test
adc
pop
adc
sub
aas
inc
push
sub
pop
loop
xor
and
jl
movsl
mov
xchg
mov
lods
add
mov
stos
mov
mov
pop
jge
sub
adc
icebp
paddsb
jo
cld
fmuls
insb
insl
arpl
mov
sbb
daa
and
push
aam
aad
push
cltd
scas
cmpsl
rcll
cmp
lret
adc
jno
add
mov
rcr
cmp
and
pop
ret
push
out
sub
lds
sub
add
ja
mov
stc
mov
push
popf
je
jne
jae
shl
je
ret
fsts
ss
icebp
push
mov
sub
pop
ds
dec
outsb
iret
cld
mov
cmp
sub
inc
cmp
std
arpl
mov
stos
shrl
inc
xchg
sub
mov
call
repz
nop
pop
sti
jae
ret
enter
sbb
leave
xchg
stc
inc
clc
out
popf
pop
lods
pop
sbb
out
cmp
ficoml
cs
xor
add
ljmp
cmpsb
ss
out
daa
stos
cld
pop
cmp
cmp
and
lahf
mov
clc
xchg
mov
mov
sub
jo
sbb
xlat
sub
jnp
int
jmp
pop
aas
leave
pushf
or
leave
mov
add
fyl2x
lods
stos
xlat
cld
jne
add
into
cmpsl
push
pop
adcb
mov
add
jb
addb
dec
mov
ret
fs
imul
inc
push
dec
sti
mov
pushf
fdivr
je
das
jnp
adc
pop
mov
fs
xor
adc
in
lock
push
js
push
scas
mov
ja
ret
addr16
movswl
xor
test
xlat
inc
icebp
shrb
sub
jae
sbb
mov
mov
dec
lock
sub
sti
xor
stc
out
arpl
push
mov
int
mov
jo
jp
mov
stos
push
sahf
rorb
jns
out
mov
xor
nop
inc
sbb
leave
aaa
dec
loop
clc
mov
out
cmc
repnz
cmc
and
inc
cmpsb
and
jmp
or
out
pop
pop
aad
popf
push
mov
mov
mov
mov
in
xor
out
add
xor
stc
nop
popf
in
cwtl
test
mov
imul
pop
out
mov
popf
sbb
lret
mov
into
push
inc
mov
push
push
outsl
test
shlb
mov
pusha
cmp
out
iret
cmc
mov
fs
pushf
iret
mov
add
arpl
cmp
inc
push
sahf
jae
mov
pusha
in
bound
sbb
aam
shr
mov
gs
push
sub
push
scas
lahf
mov
test
dec
sbb
scas
xchg
das
call
dec
enter
adc
cmp
mov
xor
adc
xchg
xor
mov
into
push
add
lahf
and
aas
movsb
dec
sbb
inc
mov
mov
hlt
sub
xor
cmp
in
fcomps
and
push
aam
hlt
out
adc
aam
jae
mov
shll
inc
push
or
mov
loopne
push
adc
pop
or
enter
xor
repnz
xor
mov
jb
jbe
jp
adc
sbb
cmp
push
dec
xor
sub
pop
mov
sahf
mov
jl
leave
dec
lock
pop
sbb
or
movsbl
jle
and
push
jne
or
pushl
hlt
mov
cmp
mov
push
adc
add
jno
xor
jbe
jbe
or
cmp
xchg
ret
mov
add
stos
sbb
add
std
xor
or
lahf
xchg
adc
out
fists
in
pushf
jo
xor
dec
mov
or
pop
movaps
xor
pop
mov
ret
inc
jecxz
mov
mov
int
sub
mov
loop
add
dec
or
rclb
loopne
sarb
xor
push
cmpsb
out
dec
jp
fwait
pop
test
add
cmp
bound
stc
push
dec
incl
cld
xchg
testl
les
into
test
aad
lahf
xchg
mov
mull
mov
repz
es
popf
fdiv
out
dec
rorb
jmp
adc
xchg
push
xchg
inc
dec
out
inc
mov
test
enter
cwtl
inc
test
mov
les
lahf
pop
add
dec
jb
clc
ret
leave
mov
andl
dec
xor
and
jg
dec
fwait
dec
or
push
shrl
enter
pop
ljmp
jge
jbe
dec
and
xor
sahf
in
hlt
xchg
and
scas
fs
mov
notl
pushaw
mov
cmp
jle
dec
dec
xor
ret
sti
jecxz
mov
fnsave
enter
shrb
in
rcr
stos
adc
rol
push
mov
cmp
and
out
in
xor
and
scas
add
outsl
sub
stos
xor
fucomp
pop
dec
inc
jl
mov
push
mov
iret
cmp
mov
fs
mov
daa
mov
ds
ss
mov
movsb
ja
es
aad
call
fsubs
pop
and
int3
aas
xchg
jmp
stc
jno
xor
pop
xor
cmp
or
into
cs
fdivs
mov
mov
dec
scas
cli
stc
cmc
dec
push
lcall
xor
lcall
ficomps
aam
ret
fs
ret
sbb
and
sub
mov
xchg
aam
mov
lcall
in
out
cmp
movsb
ret
outsb
stc
or
das
shl
jg
into
out
xor
jae
jmp
sbb
jle
ret
lcall
jp
dec
and
les
lods
rep
xchg
cli
dec
jecxz
adc
sbb
lods
pop
es
mov
int3
or
fdivs
mov
addr16
dec
leave
or
shrl
inc
and
mov
jnp
jmp
mov
movsb
push
jae
iret
stos
jno
fcomps
jae
or
xor
or
pusha
sub
xor
int3
and
jnp
mov
sub
fst
imul
lods
inc
xchg
inc
mov
or
jno
lods
fstpl
push
jns
cld
dec
outsl
int
and
adc
jle
jge
popl
adc
movl
mov
aas
mov
xchg
mov
leave
or
mov
mov
mov
mov
pop
inc
pop
jle
add
test
jns
sarb
testl
push
cmpsb
in
aas
xchg
jnp
mov
int3
roll
lods
sti
dec
push
xchg
scas
push
inc
cld
out
sub
xchg
insl
push
fnsave
mov
sarl
sbbb
enter
and
sti
jecxz
push
adc
loopne
aaa
sti
and
cmpsl
and
jecxz
shll
and
scas
outsb
hlt
xchg
push
fisttps
rcrl
mov
mov
ss
hlt
mov
add
ss
popa
sbb
lds
push
sub
jmp
adc
adc
imull
imull
ss
in
ret
adc
push
dec
adc
dec
pop
xchg
das
sbb
lret
mov
pop
xchg
jne
push
es
call
add
cli
in
pop
in
subb
pop
pop
and
inc
imul
mov
gs
dec
decb
or
ljmp
mov
mov
mov
push
ds
loop
add
lock
adc
jmp
sub
xor
je
sti
inc
loope
mov
lret
pop
jae
into
jnp
idivb
or
test
inc
jae
mov
mov
pop
enter
stos
mov
sub
jp
fdivl
popa
lret
jno
stos
or
mov
shlb
mov
sbb
enter
add
fs
xchg
aaa
dec
xchg
or
rorl
jno
jne
xchg
insb
sbb
xchg
iret
xchg
mov
add
xchg
rorl
or
and
add
push
xor
call
mov
ljmp
jno
outsl
pop
inc
in
pop
sti
popa
out
aas
push
aam
dec
mov
jle
js
and
cmpsb
enter
lds
sbb
mov
lods
push
xchg
stos
bound
cltd
rcr
arpl
push
stos
pop
icebp
nop
adc
pushf
cmp
lret
int
test
divb
mov
push
mov
xchg
push
mov
mov
lret
movsl
adc
jl
sbb
xchg
sti
lsl
inc
ret
cmpsb
jo
arpl
push
xor
imul
sbb
sbb
push
sbb
into
aad
mov
and
cmc
mov
sbb
cmpsb
stc
adc
iret
add
lock
mov
pushf
jmp
repnz
leave
xchg
mov
pop
cmp
mov
loope
jmpw
popf
lods
sbb
lret
imul
repz
mov
aam
movsb
in
mov
jecxz
pop
pop
add
loope
xchg
das
notb
pop
shlb
mov
rol
rep
and
xor
dec
fimull
add
ds
stc
xor
push
push
cmc
pop
dec
pushf
mov
push
test
mov
lock
add
jle
popf
outsb
push
ret
mov
jne
dec
cmpsb
insl
mov
stc
rol
repnz
fs
pop
sarl
cmp
mov
fmuls
and
jmp
ja
lret
xchg
in
lahf
dec
cmp
aad
inc
sbb
dec
and
pop
adc
mov
mov
xchg
shlb
dec
xchg
jb
push
mov
fwait
js
shl
sti
push
dec
sbb
lea
mov
shrb
pushf
shlb
push
out
std
add
push
xchg
cmpsb
sub
or
and
xor
jne
mov
pop
dec
aas
clc
sub
out
push
dec
jecxz
add
pop
andb
clc
fisttps
in
or
push
push
fstps
pusha
into
mov
add
addl
or
repz
push
ret
inc
insb
ds
les
je
rorb
fsubrs
jae
jns
inc
incb
inc
add
movsb
clc
cmp
dec
stos
iret
mov
loop
int3
sbb
xorl
adc
push
add
xchg
testl
stos
push
les
sahf
dec
push
in
or
iret
cmp
adc
je
test
mov
jnp
arpl
fdivrs
testb
mov
aam
sbb
ret
add
loopne
int3
js
or
jg
ljmp
fstpl
xchg
push
ljmp
add
aad
outsl
std
xchg
leave
fidivrl
sahf
lret
jbe
pop
aas
cs
mov
dec
outsl
mov
out
sarl
imul
aam
jmp
add
add
inc
cs
mov
mov
sarl
dec
mov
dec
jle
cltd
insb
in
jmp
pop
mov
sbb
dec
call
cld
movsl
xlat
mov
mov
scas
test
dec
or
dec
cmc
cli
cld
sti
sbb
lahf
add
fnstsw
daa
pmullw
cld
xor
ret
movsl
or
insb
add
mov
outsb
cwtl
inc
xor
and
test
loope
and
dec
iret
mov
inc
pop
lret
pop
sti
lods
clc
add
cmp
jae
sbb
jmp
inc
jge
repz
lret
subb
and
lea
jecxz
add
fs
mov
cmpsb
out
dec
insb
jae
nop
lock
scas
lret
mov
add
or
push
sub
inc
shlb
adc
push
push
mov
cmp
and
push
jbe
push
lds
into
mov
mov
out
xor
mov
cmc
xchg
push
mov
jno
mov
adc
das
xor
or
divb
leave
je
add
push
fs
dec
jae
push
clc
add
rorb
dec
icebp
popa
inc
inc
out
pop
jge
mov
lods
outsb
test
mov
mov
in
sbb
orl
aad
jbe
add
aas
or
mov
pop
out
fucomi
dec
sbb
test
dec
mov
pop
inc
push
or
jl
repz
pop
cmp
or
sub
jl
mul
nop
je
enter
cmp
sub
in
fs
jbe
sub
jb
inc
mov
in
xchg
addr16
stos
push
adcb
cmp
loopne
pop
push
adcl
ret
ljmp
xchg
or
xchg
jnp
pop
cmp
enter
aas
mov
push
dec
push
adc
bound
xor
pop
fistpl
sbb
mov
aas
xchg
sbb
lahf
lret
shrb
inc
ds
iret
or
mov
fst
shll
cltd
add
xor
pop
xor
jl
push
fs
xor
iret
les
out
jp
and
and
mov
mov
mov
movsb
aad
jmp
jmp
dec
jbe
cmpsb
mov
jno
lret
jnp
mov
mov
adc
or
mov
loope
ret
or
xchg
inc
inc
movsb
pushf
aas
inc
cmpsl
dec
push
loopne
lcall
notb
insb
loope
pop
dec
jge
aam
xchg
add
cmpsb
push
cli
sbb
or
test
xchg
inc
mov
dec
ja
jne
add
mov
subl
movsb
adc
or
adc
add
dec
sar
lock
sub
jle
fbld
jmp
lcall
pushf
imul
unpcklps
addr16
xchg
sub
lock
int3
stos
mov
cs
add
imul
xor
mov
outsb
add
in
popf
in
sbb
dec
mov
or
dec
mov
in
inc
inc
cmpsb
and
sahf
in
lret
xchg
aaa
dec
lods
jle
xor
push
repz
jnp
ds
inc
mov
iret
out
jnp
test
add
sbb
xchg
and
ljmp
jns
test
xchg
or
sarl
cmp
inc
movsl
cs
mov
push
call
aaa
gs
cmp
movsl
mov
and
pop
sub
decl
cs
push
xlat
jg
xor
pusha
movsb
dec
xchg
movsl
or
das
dec
pop
push
mov
cmp
jae
jae
loop
sub
pop
mov
mov
push
repnz
in
mov
and
adc
fwait
imul
lahf
pop
jg
lock
nop
stc
inc
shlb
add
enter
test
mov
jmp
push
out
inc
insl
adc
sahf
les
insl
sub
inc
filds
ret
in
fcoml
daa
xor
add
testb
dec
imul
inc
gs
jnp
sbb
mov
divb
inc
cmp
pop
push
loop
dec
push
out
lahf
cltd
fs
lea
stc
clc
mov
xchg
pop
jno
adc
test
push
arpl
mov
pop
pop
repz
sub
mov
jmp
cli
cmp
js
cli
enter
adc
and
jno,pn
cs
cwtl
mov
pop
je
int
push
and
or
idivl
or
movsl
xchg
xchg
or
cld
shrb
inc
out
mov
dec
lods
clc
dec
mov
cld
adc
lret
stc
dec
sub
sub
lahf
sbb
mov
cmp
aam
notb
or
in
mov
hlt
movsb
jmp
cld
cmpsb
xorl
push
ljmp
sbb
xchg
fwait
cmpsl
call
js
aad
and
aaa
repz
mov
add
jno
mov
adc
jge
dec
call
mov
sub
sub
jb
mov
jg
push
cltd
cli
pop
loopne
xchg
addr16
xchg
aad
or
ljmp
jo
lods
jb
pop
lcall
leave
pop
cltd
mov
mov
xchg
mov
lds
andb
clc
and
lahf
aad
andb
shlb
jp
outsb
scas
cmp
stos
xchg
out
addb
xchg
dec
out
jnp
out
add
xchg
insl
call
mov
jmp
dec
and
out
add
xor
mov
push
mov
mul
lds
inc
pushf
imull
daa
mov
cmp
out
jbe
lods
fmuls
cmp
fs
jge
cmp
dec
mov
mov
sub
in
roll
adc
dec
jno
push
rorl
movsl
jnp
sub
je
loop
cld
or
ficompl
push
mov
sahf
sub
cmp
popf
icebp
mov
fimull
scas
sbb
xchg
dec
sbb
popa
jbe
push
test
mov
stos
cmp
mov
mov
jb
adc
mov
cmc
lock
cmpsl
jbe
out
int
test
cli
adc
mov
out
sbb
cmpsl
sti
hlt
arpl
fbld
aam
fisubrl
dec
in
xchg
cmpsl
sbb
sbb
dec
mov
test
iret
push
push
mov
daa
fcompl
pop
cmpsl
call
popf
mov
outsb
leave
popa
aas
pop
xor
cwtl
out
adc
add
or
or
mov
adc
fs
adc
jb
scas
xor
inc
test
xlat
dec
xchg
mov
inc
aaa
pop
cmp
xchg
mov
hlt
insb
sbb
pop
dec
or
imul
xor
adc
fisttpl
mov
sub
test
sbb
lret
push
sub
sub
jae
adc
enter
push
xor
ret
scas
movsb
ret
addr16
popf
xchg
dec
jnp
sub
fdivrl
dec
hlt
or
in
pushf
lods
and
cld
sbb
pop
pop
and
push
inc
adc
and
clc
fistpl
mov
add
fxch
or
scas
and
add
ja
adc
stc
insl
imul
inc
arpl
icebp
ret
lret
adc
jge
or
sub
mov
cwtl
dec
das
int3
mov
jmp
jl
movsb
mov
and
xor
xchg
frstor
popa
xor
jge
pop
dec
inc
sbb
and
jp
pop
push
pop
fistps
test
adc
xlat
mov
or
std
dec
inc
xor
iret
je
xchg
jecxz
nop
lahf
dec
cmp
inc
xor
mov
pusha
cmp
cmp
mov
mov
sub
inc
out
repnz
mov
mov
test
outsl
cmp
outsb
test
pushf
cmpsb
movsb
push
addr16
mov
shl
xchg
fbstp
inc
jmp
push
ftst
sbb
mov
inc
xor
cs
dec
push
repz
lahf
aaa
mov
mov
add
movsl
popf
nop
mov
xchg
xchg
movsl
and
sbb
xorb
mov
in
lss
aam
xor
or
aas
loope
jae
or
in
xchg
sbb
jecxz
add
pop
mov
loopne
mov
stos
pop
dec
jnp
mov
sub
jg
popf
push
jne
inc
and
and
dec
push
pop
lods
xor
pop
sahf
dec
push
ror
fsubrs
addl
jl
cmp
jle
cmc
and
decl
ljmp
push
adc
ficoml
xchg
js
pusha
and
cmpsb
cltd
test
popa
rcll
movsl
sub
scas
inc
cmp
outsw
cs
push
add
popf
inc
push
xchg
jmp
rolb
out
int
cwtl
xchg
daa
int3
mov
aam
jno
cmp
subl
xchg
push
repnz
ljmp
insb
add
ja
loop
mov
dec
push
sti
mov
lret
inc
adc
sti
mov
push
mov
mov
mov
lahf
push
insl
sbb
call
std
sbbl
paddsw
iret
sbb
lahf
cmc
aaa
iret
mov
mov
and
je,pn
adcl
mov
pop
xchg
stos
add
scas
xlat
nop
lds
int3
out
insl
sbb
jo
pop
loop
pusha
pand
cld
and
inc
out
lea
jge
push
das
mov
mov
pop
cs
push
incb
hlt
sub
divb
push
iret
js
jmp
pushf
xchg
jno
test
mov
pop
ret
mov
aam
mov
mov
push
aad
cmp
lods
nop
dec
jo
dec
scas
loope
lods
imull
mov
sub
add
pop
les
inc
out
shll
insl
pop
lock
jo
fildl
into
sar
ret
lods
fstpt
pop
jo
popf
loope
mov
mov
fsts
or
insb
scas
pusha
icebp
inc
adc
out
addb
lret
fldenv
ret
lcall
sub
adc
jo
sub
in
in
push
adcl
in
stc
mov
daa
sbb
shlb
xchg
sbb
dec
jbe
xchg
inc
fildll
cmp
mov
insl
sub
pusha
into
pop
test
and
fildl
sbb
xchg
mov
cmp
ds
fdivrs
cmp
mov
sahf
mov
movsl
mov
dec
mov
mov
xor
or
sub
add
push
cmc
jbe
xchg
pop
sub
jno
sub
jl
in
gs
inc
fnstsw
sub
pop
xor
mov
and
cltd
lea
mov
clc
out
lcall
jmp
cmp
stos
sub
xchg
cmp
inc
popf
addr16
fs
and
cmpsl
dec
pop
ret
push
das
pop
cli
push
addl
loopne
jb
jp
insl
out
outsb
inc
inc
in
add
ljmp
mov
iret
and
pusha
push
sbb
lahf
roll
adc
out
out
loope
mov
addl
sahf
cmp
mov
test
mov
roll
mov
inc
nop
push
aaa
in
js
sub
sub
and
cmp
sbbb
pop
rolb
outsl
push
sbb
mov
inc
cli
or
add
lcall
jno
and
leave
ret
pop
in
int3
add
je
cwtl
test
mov
cmpsb
jo
in
jno
mov
std
sahf
dec
fsubl
push
lea
arpl
ljmp
mov
lock
push
sbb
add
cmc
cmp
mov
cltd
aas
test
jb
cmp
popf
mov
inc
sbb
ret
cmpsl
iret
out
fnsave
push
xor
xchg
mov
xor
js
test
mov
cmp
lret
lahf
add
ds
pop
std
xchg
cmp
loopne
push
arpl
les
jno
pusha
cmp
mov
leave
adcb
jge
mov
sahf
mov
cmp
push
add
jbe
pusha
push
xchg
test
xor
and
add
xchg
sahf
shlb
lods
ja
loope
sbb
dec
jge
das
loop
fcomip
xchg
call
out
cmp
push
xchg
insl
jl
leave
dec
xchg
jns
mov
pusha
sbb
push
xchg
adc
ljmp
jns
push
loope
sub
pushl
add
test
and
mov
pop
rcrl
push
jg
fcompl
rcrb
cs
add
loop
dec
repnz
push
sbb
stos
in
add
ret
daa
cmp
push
daa
sub
popa
addb
inc
xchg
test
cmp
insl
cmp
push
out
fdivrs
enter
jmp
rcrb
or
add
ds
and
outsl
mov
mov
fs
jns
inc
mov
xchg
jb
sub
jo
mov
and
insb
fcmove
or
popf
sbb
add
in
leave
in
daa
sub
mov
out
loope
pop
xchg
cmp
cmp
insb
imul
push
dec
pop
push
xchg
mov
and
adc
sbb
push
or
aas
dec
dec
fbstp
stos
leave
rcrl
stos
sbb
add
and
jmp
pop
mov
xor
cmp
in
xchg
push
fwait
gs
mov
xlat
or
xchg
adc
mov
fldt
inc
int
pop
inc
lock
in
add
dec
daa
mov
sbb
push
jae
repnz
or
sbb
aas
add
out
add
xchg
insl
lods
or
cmpsb
scas
ds
xchg
inc
ret
xor
xorb
imul
ret
cmp
notl
mov
test
adc
test
pusha
sub
pop
or
sub
aas
idiv
or
sbb
loopnew
jnp
mov
or
or
cmc
sub
lods
outsl
movsb
hlt
jb
nopl
popf
lds
idivl
stos
lahf
xchg
lea
movsl
sbb
inc
add
cmp
mov
out
cmp
sbb
ffreep
or
mov
add
lock
or
loope
mov
xchg
push
neg
mov
enter
cli
lret
dec
jle
pop
aas
mov
lods
dec
faddl
movsl
xchg
jo
push
repnz
frstor
cmp
add
test
in
out
and
pop
cmpsl
sub
std
dec
out
adc
jp
mov
jae
ret
outsl
pushf
aad
lcall
ljmp
lahf
sub
mov
or
rorl
jnp
int3
mov
es
enter
cmp
movsl
movl
ret
sbb
dec
sub
fdivrs
push
push
dec
mov
imul
or
mov
add
sub
sub
lcall
lret
insl
and
fldenvs
xchg
arpl
lds
or
or
mov
or
icebp
mov
push
lods
dec
sub
iret
test
fdivr
lea
xchg
fstpl
cmp
ja
inc
ret
jo
out
in
jbe
out
mulb
fimuls
popf
fwait
inc
pop
mov
ss
ja
sub
jns
and
jae
jo
ficoml
les
mov
adcl
pop
dec
hlt
push
ljmp
loope
aam
push
orl
jg
icebp
pop
cmp
stos
pusha
cltd
scas
mov
cmp
jmp
mov
das
mov
pop
lret
cs
mov
stc
sbb
jg
ret
and
call
enter
mov
aam
mov
jp
arpl
pop
mov
shlb
add
sbb
sbb
fsts
inc
fistl
addl
lahf
cltd
mov
adcb
pushf
mov
dec
xor
hlt
cmp
pop
dec
and
lret
jo
inc
or
xchg
sub
repnz
bound
inc
cmpsl
pop
popa
js
lahf
stos
divl
and
fnstenv
cli
mov
xor
jge
mov
adc
stos
sub
mov
jle,pn
sub
sarb
mov
sahf
test
push
xchg
hlt
dec
cmp
out
loopne
loope
jl
in
outsb
sbb
fcoms
pop
mov
jno
sub
and
and
cmp
inc
stos
clc
inc
cmp
scas
adc
mov
loope
mov
jecxz
cmp
jp
cmpsl
outsb
sub
cmc
rclb
sti
or
inc
jae
pop
sub
jp
ss
ret
add
lea
enter
in
cld
lcall
sbb
pop
cmc
and
icebp
dec
lods
insb
scas
test
adc
mov
mov
inc
sbb
mov
sub
leave
pop
push
xchg
stc
fnstcw
pusha
and
into
sbb
dec
enter
cmpxchg
pop
scas
pop
enter
sar
ret
push
mov
push
or
xor
and
out
jnp
daa
inc
cmp
lret
icebp
push
adc
mov
sbb
int3
or
jno
push
cld
into
stos
ret
notl
lods
test
push
repz
pop
fisttpl
leave
in
lcall
fldl
sbb
adc
adc
mov
cmpb
lret
lss
rclb
fists
or
mov
hlt
out
adc
add
dec
fisttpl
pop
aad
popa
mov
mov
int3
ljmp
rcll
push
sbb
test
add
xchg
push
push
mov
loop
cwtl
mov
data16
jg
fbld
jno
xor
xor
push
pop
pop
stc
push
std
inc
and
and
mulb
stos
jmp
jg
cli
fisubl
popf
push
cmpsl
sub
push
and
iret
and
push
hlt
push
packssdw
sbb
aas
sbb
sub
pop
test
mov
incb
outsl
sub
mov
xadd
cmpsb
leave
pushf
lock
xchg
mov
std
sub
jb
push
inc
pop
in
rorb
cs
add
lods
fs
mov
nop
fs
dec
fcmovb
daa
js
js
adc
lods
adc
adc
adc
or
xor
or
mov
pop
sub
sbb
arpl
sub
test
clc
jmp
test
call
rcll
out
mov
jecxz
mov
pushf
popf
jne
pop
aam
mov
cmc
inc
xchg
movsl
in
scas
sbb
or
lock
inc
lock
sarb
pop
and
inc
mov
pop
fs
cmp
mov
mull
icebp
mov
fldenv
mov
stos
outsb
incl
in
jp
movl
movsl
jb
mov
popf
add
fs
mov
js
push
movsb
mov
sbb
fsqrt
mov
scas
sbb
nop
iret
ficompl
mov
movsl
inc
divb
cmp
push
mov
xchg
lods
pop
repz
push
fnstcw
cltd
jmp
scas
adc
xchg
fistl
jbe
xor
mov
add
or
sbb
inc
hlt
test
mov
in
data16
int
out
je
aam
cmp
and
push
sub
jl
push
xchg
aas
out
fisttpll
or
enter
or
in
fisubrl
gs
mov
out
add
ljmp
push
sub
jnp
in
mov
arpl
imull
or
add
dec
xor
push
test
aam
jae
aad
shll
fs
lret
repz
testl
jae
mov
adc
add
push
jb
stos
mov
arpl
mov
fisubrs
mov
mov
cmp
mov
push
xorb
mov
inc
adc
mov
mov
je
aad
jle
movlps
scas
sbb
inc
pop
xor
cmp
jp
fidivs
fdivl
xor
add
rcll
add
mov
inc
sbb
xchg
in
fwait
shrl
cmp
sbb
jg
pop
cltd
xchg
push
mov
ds
imul
jl
add
push
inc
or
cmp
je
mov
and
mov
imul
rcr
inc
mov
add
mov
cwtl
jne
sub
inc
add
ret
cmp
cmp
mov
mov
pushf
mov
push
sub
jle
ja
ljmp
and
ret
xchg
punpcklbw
imul
adc
ret
aas
shll
out
lock
add
xchg
lock
fs
loop
in
xlat
sbb
pop
jo
xor
ret
jno
and
int
push
sub
dec
xchg
je
fidivrl
cmpsb
or
add
ja
test
mov
xlat
inc
xchg
jae
or
pop
scas
test
xor
stos
jno
cltd
test
fidivrl
push
cmpsb
mov
pop
lods
je
push
mov
arpl
sub
jnp
dec
pop
loope
cmp
fwait
and
jecxz
and
mov
loop
js
mov
cli
shr
scas
jns
mov
add
or
ljmp
adc
in
loopne
mov
dec
cmp
cmp
dec
add
push
aam
and
jp
push
sbb
mov
lods
pop
loope
sub
enter
add
lock
mov
mov
cmp
aas
xchg
mov
lods
mov
xchg
adc
rcll
aam
and
ljmp
outsb
dec
sarl
lds
jp
sti
push
aad
push
outsb
popa
dec
cmpsl
or
jmp
addr16
in
mov
pop
js
push
cmp
movsl
lcall
stc
mov
adc
mov
insl
inc
std
std
xor
mov
xchg
sbb
sarl
xor
in
ss
cmp
roll
and
and
add
adc
push
loope
std
out
rcrb
pop
dec
jg
dec
pop
xchg
jg
lods
std
imul
and
add
jne
pop
enter
jge
sub
test
cmp
stc
inc
mov
inc
adc
or
je
in
out
scas
lret
test
sbb
or
out
push
mov
push
ds
imul
or
mov
inc
push
cmp
pop
jle
dec
pusha
test
and
bound
stos
outsl
sahf
sub
inc
dec
repz
test
repnz
push
sahf
adc
jmp
enter
adc
xlat
in
mov
stos
call
or
xchg
imul
pop
xchg
sub
mov
dec
pop
es
outsl
mov
stos
add
outsl
or
sbb
adc
sbb
push
and
test
out
cli
int3
jo
add
enter
std
mov
call
pop
movsl
pop
xorl
xor
and
bound
loopne
adc
jg
cs
fcoms
repnz
mov
test
and
and
movsb
movsl
jmp
pop
imul
xorps
mov
lret
test
sbb
dec
mov
mov
outsl
or
aas
cmovg
push
jg
mov
loop
xchg
sbb
xor
cltd
cld
rorb
jmp
push
lds
into
sbb
push
test
call
imul
sbb
push
in
fstps
stos
mov
adc
xchg
lcall
imul
fmuls
out
or
ss
lea
movsl
mulb
fwait
pop
push
test
and
dec
and
imul
ja
out
add
inc
imul
cld
fistpl
cli
and
pop
xchg
push
ljmp
adc
outsb
lret
xchg
mov
in
mov
jg
out
out
push
div
in
dec
sub
cmovs
imul
pop
mov
sub
jge
sbb
mov
imulb
jg
mov
push
add
lret
and
xor
out
jno
mov
lods
mov
jae
outsl
inc
stos
mov
and
roll
stos
aad
lds
popa
insb
mov
sub
push
scas
pop
iret
xlat
xchg
mov
sub
icebp
lea
sbb
cwtl
push
sub
nop
dec
xchg
shlb
cmp
fildll
sub
cmc
adc
cmc
ret
sub
pop
lret
aaa
inc
ret
fsts
lds
scas
fadd
adc
in
mov
test
cs
dec
sub
push
mov
int3
cmp
push
adc
and
sbbl
mov
sub
xchg
inc
push
fcoml
mov
ret
fisttpll
mov
mov
js
sbb
jl
movsl
sarb
xchg
jecxz
ret
mov
mov
sub
push
into
hlt
and
loope
jl
xchg
or
sub
fcomi
gs
rorb
push
or
mov
mov
adc
shl
xchg
aam
ja
mov
cwtl
mov
or
mov
into
in
adc
cmc
sbb
nop
push
icebp
mov
stos
test
and
push
enter
jae
adcl
out
aaa
sti
call
mov
jb
aad
mov
addl
cmp
pop
add
aaa
xchg
jne
ss
cmc
mov
xchg
movsb
je
adc
sbb
outsl
loopne
insb
ficomps
and
call
insl
and
cmp
pop
mov
cmp
add
lahf
mov
cmp
adc
fucomi
clc
cltd
ds
int
insb
sarb
adc
testb
mov
jb
and
mov
mov
mov
and
iret
out
sbb
mov
push
jp
in
ljmp
insl
out
sub
mov
jne
sbb
add
adc
xor
or
js
xchg
add
arpl
xchg
fwait
pop
xor
or
xchg
pop
cli
jb
mov
xchg
faddl
or
mov
pop
jl
add
add
lahf
ljmp
add
add
mov
add
adc
add
jo
add
lahf
ljmp
add
add
pusha
add
cmpb
add
lahf
ljmp
add
add
add
add
push
add
add
add
add
lock
mov
add
add
add
push
add
dec
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xor
add
mov
add
add
add
push
add
push
add
push
add
dec
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
cmp
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
push
add
jo
dec
add
outsb
add
jb
add
add
xor
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
imul
ja
outsb
add
jb
add
add
dec
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
push
add
jo
dec
add
outsb
add
jb
add
js
add
add
add
or
dec
add
pusha
add
jo
or
add
add
lock
add
add
ljmp
or
lock
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
adc
adc
insl
testb
cld
nop
or
enter
scas
ljmp
add
or
dec
add
pusha
pusha
adc
sbb
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
pop
dec
rorl
jno
orb
add
out
or
add
add
xor
int3
enter
mov
rcrb
add
rcrb
xor
push
sbb
leavew
and
jle
stos
and
add
lret
lea
adc
add
push
sbb
repz
pop
push
mov
daa
fsub
jmp
imul
cmp
sub
xchg
add
sub
shr
add
cmp
lods
inc
mov
and
ret
lret
insl
or
out
inc
xor
sbb
or
mov
imul
std
pop
lea
movb
sub
sbb
sahf
push
lcall
mov
and
add
scas
cmpsb
movl
lods
and
insb
mov
mov
sub
push
clc
sahf
adc
jae
stos
mov
inc
rorb
je
imul
sbb
movsb
icebp
mov
mov
xchg
pop
add
inc
mov
xchg
push
inc
cmp
mov
ss
mov
mov
cmp
iret
mov
push
xor
add
xchg
cmp
push
pushf
and
cmpsb
and
and
jl
jmp
mov
dec
lret
or
adc
cmp
in
add
cmpsb
sbb
fucomip
and
adc
cmp
push
jb
stc
roll
inc
push
jmp
sub
nop
repz
nop
rol
lret
mov
dec
xor
ret
lods
out
shrb
shr
pop
sarl
bnd
xor
cs
popf
xchg
sub
lods
dec
or
shlb
int3
setl
cltd
mov
sbb
adc
lea
xorl
add
jmp
xchg
dec
sub
dec
repnz
jns
lret
and
or
sub
xor
or
cmp
xchg
push
push
mov
jne
push
lea
add
add
pushf
xchg
sub
cmpsl
jmp
xchg
shl
sbb
in
or
sbb
test
and
mov
dec
adc
hlt
adc
add
test
aad
xchg
inc
out
popf
ret
or
dec
enter
sbb
adc
cmp
mov
outsl
push
and
pop
and
in
cmc
sar
std
lret
sub
roll
xor
inc
adc
xor
sbb
inc
and
and
sub
push
repz
inc
push
jns
mov
mov
movsb
mov
adc
lret
mov
sub
ret
inc
and
loope
in
or
daa
adc
lods
adc
push
inc
mov
mov
xchg
cli
and
dec
mov
or
loopne
lea
or
in
scas
cld
dec
add
inc
and
adc
adc
add
enter
jns
xchg
mov
xor
fs
pushf
popa
iret
mov
adc
pop
lds
mov
orl
cltd
jns
push
pop
aaa
cs
fisttpll
jmp
outsb
jae
pop
lea
mov
jne
mov
sub
add
fldl
and
pop
jns
adc
jl
cmc
adc
sahf
lret
add
lea
movsb
push
insl
shlb
mov
xlat
and
loope
in
int3
jne
ljmp
jbe
ficoml
jle
aas
sar
xchg
in
push
sti
int
sub
push
mov
jge
sarl
in
dec
inc
leave
and
mov
jmp
xchg
sbb
cwtl
add
les
cs
call
jb
lret
ret
adcb
jle
jmp
xor
movsl
adc
clc
push
xchg
test
fs
sbbl
xor
sub
movsl
clc
jmp
dec
sbb
add
jmp
or
std
add
inc
in
dec
add
inc
lret
test
pop
cli
sub
jb
pushf
xchg
rcrl
lahf
jmp
and
adc
in
dec
adc
pop
push
scas
js
rolb
inc
add
mov
stc
mov
sub
cmp
xor
pop
lret
rcrb
in
sbb
add
mov
add
mov
add
sbb
push
call
mov
les
push
push
jb
cld
call
push
ficoml
mov
lahf
xor
sub
fimull
ds
push
lahf
rcrl
sahf
inc
cltd
adc
ret
add
mov
roll
cmp
pushf
or
sub
inc
lock
hlt
or
cld
iret
or
or
adc
in
dec
arpl
out
adc
je
push
mov
or
sbb
xchg
or
mov
dec
add
xor
cld
outsl
mov
popa
sbb
fimuls
or
je
cmp
movsb
and
call
in
dec
adc
push
lea
inc
cld
add
xor
lret
fcompp
push
or
jbe
sub
sbb
mov
stos
dec
add
add
jae
test
adc
mov
les
ret
ret
sbbb
enter
push
pop
popa
int3
ljmp
sbb
and
inc
adc
sub
lea
dec
fwait
in
xchg
jb
aaa
xchg
mov
call
mov
jae
insb
xchg
shrl
mov
or
sti
push
nop
add
lcall
add
push
inc
and
shrb
mov
lea
mov
test
push
push
and
sbb
mov
aas
das
mov
sbb
add
inc
sub
aas
rolb
cmpsb
xchg
orl
lcall
or
aaa
ficoms
inc
or
sub
icebp
add
movb
jmp
mov
or
or
pop
push
push
icebp
sub
inc
bswap
cmpsb
cmp
add
add
pop
pop
pop
push
pop
ret
push
shr
or
daa
mov
sub
loopne
push
add
lret
push
call
inc
mov
jle
cmp
sub
inc
cmp
add
out
mov
jne
inc
xor
stos
pop
orl
add
in
lods
push
xor
scas
leave
inc
push
sbbl
mov
sarl
dec
enter
lods
mov
rorl
or
je
push
inc
call
sbb
xchg
leave
add
je
les
dec
xor
push
jmp
cmp
mov
clc
movzwl
test
jge
push
jmp
pop
jp
popl
adc
cmp
iret
jge
dec
push
inc
addb
sub
lahf
shll
enter
sbb
sub
ret
shr
or
rclb
les
mov
out
or
enter
mov
outsb
cmp
stos
xor
and
push
cltd
pop
test
js
loopne
pop
push
mov
adc
add
in
add
jbe
or
call
mov
push
aam
je
sub
adc
std
sti
ljmp
inc
mov
je
loopne
popa
pop
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
mov
pusha
cmp
cmp
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
pusha
lret
shlb
push
hlt
push
leave
dec
or
cmp
test
mov
push
mov
mov
enter
leave
mov
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loopne
add
push
adc
loopne
sub
pop
jns
fcmove
or
xchg
sub
roll
scas
in
fwait
cmp
es
adcb
or
or
mov
or
xor
jle
adc
push
push
adc
call
sbb
mov
and
aad
and
mov
adc
mov
jmp
int
bound
dec
mov
ss
test
fsubr
inc
mov
pop
push
adc
shlb
testb
mov
sti
or
inc
test
and
jmp
mov
cs
sahf
data16
push
inc
gs
cmp
adc
push
xchg
lods
jmp
lods
popf
sbb
stos
pusha
loopne
xor
ss
mov
call
cmp
inc
push
inc
jmp
repz
pop
cld
cmp
or
sbb
inc
inc
mov
add
daa
hlt
iret
sub
jmp
push
lea
sahf
jne
iret
or
cs
testb
mov
inc
push
xchg
cmp
lcall
inc
cwtl
sub
scas
jno
or
push
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
jmp
pop
mov
bound
xchg
outsb
dec
jp
xchg
push
pop
mov
or
and
dec
mov
imul
bound
adc
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
test
add
fimuls
or
clc
add
cld
add
add
inc
add
add
hlt
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
