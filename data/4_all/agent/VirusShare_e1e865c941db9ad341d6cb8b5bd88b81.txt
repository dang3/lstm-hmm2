adc
sbb
add
add
add
inc
sub
shl
push
push
mov
lea
push
push
lock
or
xorb
jo
or
jb
outsb
hlt
gs
insb
sbb
xchg
divb
divl
clc
cs
ret
loope
cmp
popa
lods
je
gs
push
xchg
mov
mov
push
xchg
loope
gs
mov
mov
loope
cmp
xor
popa
mov
ret
mov
outsl
mov
cmp
les
jb
outsl
arpl
push
xchg
gs
jae
lret
xor
xor
xchg
loope
inc
into
imul
jo
sbb
je
insb
aam
aad
outsl
cmp
xchg
xlat
arpl
fnstenv
fildl
fdivl
fisttpll
fistpll
add
push
loopne
sti
insb
call
push
call
pop
mov
pop
mov
lcall
jns
fcom
dec
inc
lods
push
aam
pop
out
add
aam
mov
in
mov
mov
in
out
ret
loope
cmp
jae
gs
outsb
shll
push
xchg
fs
out
add
add
je
push
push
call
jmp
mov
jno
add
cmp
je
lea
rcrb
mov
push
push
call
test
je
ret
ss
ret
ret
pop
or
push
movsb
jmp
pop
jl
sub
mov
arpl
push
xor
pop
pop
pop
leave
ret
sub
push
xor
cmp
push
mov
je
ret
cmp
and
into
iret
rcl
ret
icebp
cmp
rcl
aam
fs
insb
out
lea
fmuls
jl
sahf
lahf
gs
jb
cmp
out
arpl
icebp
jae
jae
push
xchg
repz
insb
fisubrs
loope
cmp
jae
gs
loop
jecxz
out
jb
xchg
fs
cmp
mov
jb
insl
push
xchg
mov
out
sbb
shlb
ret
icebp
in
sahf
fwait
sub
test
call
cmp
je
call
push
call
repnz
mov
mov
add
hlt
clc
mov
add
pop
test
out
sub
cld
hlt
mov
add
sbb
enter
push
cltd
dec
aam
mov
hlt
jl
fdivs
jo
sbb
imul
frstor
mov
fisubrs
es
in
sbb
sub
jnp
mov
sti
jns
cld
dec
cld
dec
jo
iret
lahf
sbb
pop
idivl
imul
popa
jmp
push
pop
decl
mov
jg
jne
sbb
mov
test
test
imul
mov
push
mov
insb
daa
dec
mov
mov
nop
inc
xchg
xchg
jo
sbb
xchg
xchg
push
jne
jae
je
inc
sahf
loope
push
rclb
or
xchg
cmp
jns
out
mov
movsl
outsb
arpl
jnp
int3
push
test
out
test
or
je
sbb
pop
push
adcl
mov
jae
and
repz
jb
outsb
je
iret
repz
jb
arpl
faddp
xor
mov
lea
jno
add
sub
add
call
xchg
ret
imul
sbb
mov
add
mov
jae
insb
pop
push
pop
inc
or
fcomps
rclb
add
js
mov
push
push
push
pushf
lds
mov
pushl
xchg
repz
and
movb
or
pop
sbb
add
cmp
jb
jnp
or
dec
and
je
dec
jmp
pop
mov
mov
add
shlb
ret
test
je
mov
inc
inc
jmp
andb
adc
pop
stos
dec
add
or
push
test
je
cmp
nop
je
mov
jl
pusha
mov
inc
mov
mov
sub
jno
inc
cmp
cmpb
je
inc
and
test
fmul
and
add
sub
jmp
mov
fbld
xlat
pop
or
xchg
push
divb
mov
xor
cmp
andl
icebp
out
nop
jbe
mov
add
sub
mov
cmp
jne
incl
or
mov
pop
jb
xor
mov
add
add
leave
jcxz
addl
jmp
mov
je
sub
add
push
mov
mov
inc
inc
test
jne
pop
inc
sbb
cmpsl
jo
addl
adc
lock
test
sahf
out
jb
insb
xor
cs
out
insb
shlb
xorb
and
loop
fnstcw
jo
aam
aad
outsb
xlat
fs
pop
xchg
inc
jb
sub
iret
je
imul
sbb
imul
inc
stc
xor
outsl
sti
jae
mov
and
shlb
xchg
sbb
nop
pop
sbb
lcall
add
idivb
sbb
adc
pop
int
cmp
xor
fcoml
adc
into
repz
push
jns
loop
ret
cmp
gs
in
out
out
sahf
out
mov
je
out
in
jb
inc
xlat
adc
sub
cmpsl
shlb
adcw
inc
sbb
pop
leave
cmp
mov
add
dec
repz
or
sti
lret
inc
cmp
ret
repnz
mov
mov
call
idivl
jae
mov
adc
sarl
ret
mov
cmp
jb
mov
roll
add
cmp
jbe
lahf
arpl
dec
cld
mov
mov
iret
add
push
push
int
test
orl
sub
adc
inc
and
dec
or
add
movzwl
sbb
xorb
mov
add
clc
add
cmp
jae
cmp
jb
inc
lcall
add
sub
mov
add
andb
xlat
lea
mov
stos
mov
sub
jg
sbb
add
push
inc
or
call
call
inc
push
mov
rorb
test
cs
push
je
mov
test
je
mov
dec
inc
add
pop
mov
clc
inc
jl
ret
aad
ss
jo
add
cmpb
mov
lea
sub
aas
mov
mov
fs
and
call
adc
fbld
pop
xchg
inc
pop
pop
pop
je
stos
fstl
or
imul
nop
cmp
repz
int
iret
rcrb
sbb
repz
or
xlat
mov
loope
mov
dec
shlb
sbb
shll
ret
dec
les
jns
sbb
pop
enter
adc
xchg
test
push
lods
jne
out
cmp
jns
jns
out
popa
insb
jne
inc
js
jno
jmp
fcompl
inc
insb
lds
jns
jae
xchg
jo
jns
or
addr16
xchg
cmp
les
sahf
xchg
pop
push
push
inc
subb
roll
jne
mov
cmpsb
inc
inc
sbb
cmp
dec
xor
xor
cmp
mov
mov
push
mov
out
cld
call
pop
xor
clc
and
les
lods
xchg
cmp
inc
dec
sub
dec
mov
hlt
mov
fs
xchg
out
xchg
sub
pop
xchg
sbb
lock
repz
repnz
jle
fs
dec
bnd
clc
adc
pop
inc
push
pop
mov
cwtl
lds
push
cmp
lods
sub
jne
cmp
repz
dec
outsb
jno
iretw
data16
pop
arpl
cmp
dec
jg
loope
push
xchg
icebp
jecxz
in
in
out
repz
xor
out
call
jge
gs
rolb
mov
loopne
pusha
aas
nop
mov
sbb
out
mov
cmp
or
inc
mov
jmp
popf
pushf
mov
pushf
mov
pop
aas
mov
out
push
movsb
mov
test
pop
imul
push
and
pop
sbb
les
mov
cmp
into
cmp
enter
cmp
cmc
push
push
push
push
fistpl
daa
sbb
sbbb
mov
adc
or
xchg
cmp
jb
jmp
push
cmp
insb
xchg
out
pop
pop
xor
and
pop
outsl
fcmovnbe
shlb
adc
int
cmc
pop
mov
adc
movsb
push
cmp
xchg
je
ja
xchg
loope
popa
stos
jb
lods
pop
lods
dec
inc
insb
xor
scas
imul
jae
outsl
mov
push
push
imul
jmp
jae
shrb
out
insb
insb
dec
outsl
jecxz
sahf
out
outsl
leave
insl
cmp
xchg
pop
lret
dec
int3
push
int
into
cmp
arpl
sub
repz
fs
jo
repnz
xchg
aad
imul
addb
hlt
xchg
cmp
gs
out
sahf
outsb
dec
gs
mov
push
ret
hlt
loope
gs
sahf
out
inc
insb
outsl
jae
ret
icebp
mov
mov
es
sbb
outsb
jmp
add
xchg
ret
lods
sub
lods
aaa
push
arpl
inc
rcrb
adc
xchg
andb
cmpsb
stos
imul
xor
inc
sbb
js
mov
cmc
ret
and
adc
pop
cltd
jno
aam
push
in
push
push
add
pop
mov
lods
pop
je
and
push
rclb
push
or
cmp
mov
cld
and
push
push
or
and
rcll
adc
je
fldt
and
popa
fbstp
pop
mov
or
mov
out
mov
jge
cmp
pop
inc
loope
es
iret
int
push
cmp
jnp
lahf
out
inc
insb
insb
inc
arpl
call
pop
jb
das
test
cmp
stos
daa
mov
mov
mov
subl
cmp
out
xchg
scas
outsl
jo
pop
in
lcall
pop
push
cmp
je
mov
adc
inc
out
push
push
loope
xor
push
jne
mov
rcrb
sarb
jae
mov
insl
pop
sti
lret
imul
iret
lods
ja
inc
imul
je
cmp
jns
push
loope
sarb
or
sbb
int3
ficomps
pop
stc
sbb
or
je
rorb
mov
inc
in
pusha
add
add
add
sarb
cwtl
xchg
arpl
add
mov
jb
sti
imul
ret
std
cld
cld
jb
cmp
pop
add
add
jle
adc
stos
movsb
das
test
jnp
in
xor
cmp
rcrl
lret
cmp
popa
je
dec
pop
call
rep
jo
iret
fldenv
repnz
fldl2t
cmp
mov
cmp
dec
cmp
adc
jnp
repnz
imulb
inc
sti
mov
jns
lock
adc
in
mov
xchg
int3
rcr
jne
adc
popf
cmpsl
add
push
xor
add
mov
cwtl
and
push
inc
in
jle
ss
fsubr
xchg
out
jno
dec
insl
out
lock
cmp
in
mov
pop
mov
aam
ljmp
ja
push
lahf
push
lret
sub
sahf
shrl
je
lcall
pusha
xor
dec
cld
mov
mov
fmuls
jmp
add
cmpsl
cmp
enter
inc
xchg
cmp
mov
aad
lock
xchg
mov
jns
dec
je
lahf
jnp
out
imul
and
in
inc
mov
lret
imul
icebp
cmp
ret
jno
insl
stos
jo
push
lods
popa
rcrl
scas
push
xchg
in
sbb
push
cwtl
mov
and
mov
imul
push
cltd
gs
push
pushf
jne
jb
arpl
mov
aad
imul
outsl
mov
push
mov
das
adc
mov
outsl
jae
std
jnp
xchg
jo
sbb
xchg
mov
mov
mov
mov
xor
loope
push
jae
push
mov
jne
sbb
dec
jns
add
push
push
xor
popf
out
jne
arpl
lahf
fnstenv
push
iret
repz
sbb
jne
lret
jb
loopne
fnstenv
cmp
sahf
fs
ja
int3
aam
hlt
sub
push
mov
arpl
cmp
leave
xor
test
bound
loopne
sub
xor
pop
mov
cltd
pop
add
mov
ret
xchg
cmp
jl
movb
aam
les
into
xor
jb
mov
out
adc
and
jo
addl
mov
xchg
push
pop
inc
cmp
hlt
add
cmpsb
xchg
pusha
enter
or
xchg
pop
mov
push
jmp
jmp
in
adc
adc
xor
outsb
or
cmp
gs
insb
iret
into
xchg
loop
jnp
insb
pop
and
repz
clc
popa
outsb
fs
stos
fwait
je
cmpl
sbb
dec
push
push
push
or
cmp
push
repnz
sbb
pushl
cmp
adc
leave
dec
or
test
loopne
mov
mov
orl
ss
bound
sahf
out
jb
gs
xor
rcl
into
push
loop
shrl
loop
imul
cld
pop
cld
adc
das
popf
xchg
cld
repz
cmpsl
dec
outsl
fs
cmp
jne
gs
out
push
sub
popa
mov
test
push
cmpsb
mov
loope
xchg
lcall
xchg
int
gs
jecxz
mov
mov
loope
jecxz
arpl
shrl
mov
outsb
jns
out
gs
xor
cs
mov
push
lret
sahf
fcompl
pushf
xchg
sbbl
mov
add
jo
inc
scas
adcb
cmp
lods
push
clc
push
push
imul
dec
mov
add
add
jge
mov
je
js
dec
rclb
aam
clc
mov
neg
ret
pop
push
push
mov
or
mov
lea
enter
pop
mov
ljmp
mov
jle
jne
push
jp
cmp
adc
mov
mov
sbb
fs
push
int3
hlt
cmp
cltd
clc
js
jns
push
jecxz
xor
cs
std
js
gs
int3
dec
adc
push
inc
cmp
repz
jne
push
outsl
shrl
ret
loope
out
imul
xchg
addr16
mov
mov
dec
out
jne
inc
jecxz
add
cmpsb
addr16
xchg
adc
test
clc
hlt
or
rolb
dec
sti
lcall
or
or
cli
inc
leave
pop
cli
xchg
push
jae
pop
cli
xchg
dec
testb
mov
pop
sti
jge
fadds
lods
cld
push
fildl
mul
inc
aam
inc
cmc
jnp
cmp
sbb
jb
insb
sarb
repz
cs
xlat
enter
fwait
inc
inc
push
xchg
jo
jns
jae
and
add
imul
clc
pop
push
push
stc
push
stc
xchg
jl
mov
pop
jmp
add
mov
mov
or
arpl
dec
jne
movsb
jbe
repz
sbb
je
iret
ds
insb
dec
iret
mov
outsl
arpl
fwait
idivb
outsb
pop
dec
repnz
js
xor
sbb
cmp
xchg
push
mov
adc
xchg
cmc
pop
icebp
inc
xor
dec
add
nop
mov
dec
fsubrl
push
xor
cmpsl
lods
push
push
dec
data16
js
shll
jo
pushf
movsb
movsl
test
xchg
mov
out
inc
imul
push
pop
movsb
clc
es
and
dec
iret
xchg
inc
mov
pop
push
mov
add
pop
je
dec
jmp
enter
mov
pusha
push
add
xchg
xchg
dec
dec
jl
cmp
test
rolb
sbb
int3
add
in
mov
and
jle
cmpsl
fimull
or
lret
sahf
push
cmp
ficomps
adc
jecxz
sahf
pop
jne
add
dec
fcomps
test
push
mov
pushl
and
adc
push
or
sbb
lret
push
jns
dec
adc
je
push
cmp
and
xorb
call
mov
pushaw
and
push
cmp
inc
xchg
dec
cli
mov
jae
js
push
pop
cmpsb
xor
out
imul
push
fdivs
outsb
jb
dec
mov
imul
sub
int
ds
lea
insb
inc
lret
leave
push
mov
sbb
pusha
ss
sbb
leave
jnp
rorl
or
and
mov
inc
or
jns
mov
cmp
je
mov
imul
gs
int3
xchg
adc
je
pop
xor
inc
imul
je
out
dec
jb
jne
xchg
je
hlt
jae
fwait
pop
dec
sub
dec
in
and
cmp
jne
jo
add
mov
jne
rolb
sahf
popa
fs
insb
insb
inc
jb
dec
clc
push
adc
sarb
jb
in
add
and
jmp
roll
xchg
aaa
aad
xchg
push
out
inc
mov
mov
lock
adc
mov
das
jg
sbb
push
clc
push
clc
rol
push
push
jle
cs
inc
jecxz
add
pop
and
or
dec
xor
adc
cmp
mov
popf
int3
hlt
push
jns
loopne,pt
pushf
xchg
sbb
cmp
hlt
cmp
fadds
in
sahf
inc
in
mov
out
push
insb
xor
cs
int3
jmp
jne
addb
pop
imul
leave
and
icebp
cmp
and
mov
into
fs
push
pushf
movb
pop
icebp
fs
imul
push
pop
mov
insl
cmp
insl
loop
add
outsb
repz
cmp
subb
out
dec
popa
outsb
lret
inc
iret
rep
and
xor
mov
jno
mov
mov
sub
bound
mov
je
sub
sub
ljmp
mov
sbb
gs
dec
push
lods
daa
adc
adc
sub
leave
push
cmp
sbb
and
push
popa
out
and
sub
inc
xchg
xor
pop
sbb
je
repz
xor
insl
jo
imul
cs
les
push
pop
mov
adc
xor
sbb
sub
inc
fadd
mov
pushf
addr16
push
push
dec
and
pop
pushf
aam
dec
cmp
dec
or
jne
repz
jmp
push
jns
jno
vandnps
fmull
aas
pop
pop
jns
dec
pop
pop
and
cmp
jns
nop
aaa
data16
dec
jl
dec
jo
jb
push
sbb
sbb
xor
and
jns
pushf
ja
js
iret
in
jae
push
xchg
and
pop
jmp
jb
push
gs
test
sbb
adc
xchg
cmc
cmp
repz
je
push
loope
sub
bound
adcl
or
cltd
stc
hlt
in
cld
in
push
mov
xchg
xchg
lock
icebp
out
dec
clc
mov
ret
jae
int3
inc
fdivr
pushf
dec
ja
sbb
or
imul
lods
sub
sbb
jle
bound
lea
shlb
inc
call
scas
add
lret
inc
push
xor
hlt
push
jno
cmc
jo
mull
popa
sub
mov
xchg
loope
push
mov
in
push
mov
rcll
pop
and
sub
sahf
out
push
push
ja
out
js
arpl
rorl
adc
hlt
push
push
push
bound
pushf
popf
adc
call
or
loop
sbb
push
push
and
add
fildl
inc
int
cmp
mov
push
mov
rcrl
stc
insl
inc
gs
mov
movsl
imulb
cmp
clc
je
gs
inc
sti
imul
enter
lods
aam
push
ret
jecxz
push
adc
lea
and
pop
push
bound
add
adc
ret
mov
pop
adc
sbb
add
mov
mov
pop
sbb
mov
push
pop
push
mov
andl
fs
lock
addr16
push
cs
xchg
jbe
pusha
loop
mov
add
sbb
push
ljmp
jae
dec
cmp
push
mov
add
rorb
icebp
imul
ret
stos
mov
je
xor
pusha
cmp
push
pushl
mov
mov
mov
mov
jns
jbe,pn
jne
jle
or
pusha
in
lahf
adc
inc
push
loopne
pop
adc
mov
push
cmp
jl
pop
adc
pop
rcrb
xchg
push
test
jne
fsubl
icebp
push
inc
sbb
pop
push
fcompl
in
adc
fidivrl
push
or
lret
cmc
rcrb
dec
mov
or
jno
push
push
daa
pusha
jecxz
ret
pushf
dec
adc
push
ds
cmp
cld
xchg
jbe
cmp
rcll
lea
push
rcrb
aaa
mov
nop
scas
mov
xor
or
sbb
xchg
clc
sbb
rorl
test
inc
adc
movsb
sbb
or
sub
aaa
or
lea
sbb
add
gs
cwtl
pushw
and
mov
mov
sub
inc
adc
jo
cs
pushl
or
push
push
arpl
pop
push
add
lret
push
adc
cmp
insb
gs
push
xor
lret
sub
leave
mov
pop
xchg
daa
sarl
dec
add
lea
add
sbb
inc
mov
mov
mov
or
lahf
push
adc
mov
sahf
loope
test
jle
sarl
and
adc
sbbb
inc
add
cmp
jl
mov
inc
mov
jecxz
push
lea
insl
sbb
adc
lret
andb
mov
stc
push
push
test
cmpsb
cmp
xlat
mov
mov
add
test
add
or
jle
push
pop
lea
cmp
push
sbb
stos
push
lea
mov
push
jl
pop
mov
lea
mov
cmp
jbe
cmp
or
mov
cld
push
inc
or
clc
inc
cmp
mov
cld
cs
push
hlt
clc
orl
les
cmp
jl
mov
add
add
imul
inc
mov
jmp
sub
mov
push
lahf
push
dec
shrl
fidivrs
mov
arpl
addr16
and
pop
movb
pop
jmp
cmp
xchg
loope
push
mov
push
cmp
sbb
pop
xchg
loope
cli
aam
leave
pop
xor
lods
dec
jno
inc
lret
out
mov
jb
sahf
icebp
gs
imul
push
imul
pop
addb
rolb
and
pop
cwtl
ret
xor
cltd
mov
jne
mov
add
push
jmp
push
cmp
adc
cwtl
das
and
sub
adc
mov
xchg
mov
pop
dec
ljmp
sub
adc
cmp
sub
lods
sbb
clc
adc
mov
mov
sub
mov
pop
popa
pop
iret
or
dec
std
and
mov
push
int
popa
popf
or
and
sbb
add
add
nop
add
cmp
hlt
popa
mov
push
inc
pusha
xchg
adc
sub
gs
xor
cmc
adc
or
and
ljmp
in
sub
or
mov
scas
jne
lock
out
jbe
mov
dec
popf
movsl
lsl
inc
or
test
outsl
dec
leave
lds
dec
jne
adc
push
add
adc
mov
into
mov
mov
xchg
xchg
mov
lock
adc
pop
rclb
pop
mov
shll
jno
and
inc
iret
push
rcr
inc
pushf
pop
xor
data16
push
cmc
insb
mov
mov
sti
cmp
ss
test
movsl
and
adc
out
cmp
lock
inc
popa
leave
iret
inc
or
icebp
inc
sub
xchg
adc
inc
adc
push
fstl
popa
js
lods
arpl
push
movl
pop
lea
dec
pushf
dec
add
add
cmpsb
jnp
loope
add
xor
clc
leave
push
mov
je
pop
leave
or
imul
push
movsb
ret
test
jns
arpl
sbb
sbb
xlat
mov
pop
or
mov
cmp
cmp
decb
push
in
push
addr16
bound
int
add
cmp
test
sbb
jno
gs
testb
test
inc
pop
pop
dec
call
ret
loope
out
call
sbb
pusha
jmp
add
sbb
stos
and
xchg
adc
subb
dec
mov
or
sub
sbb
daa
and
sbbl
in
xchg
clc
cmpsl
in
lahf
jns
es
popf
add
test
subl
and
sbb
inc
sub
iret
lods
or
mov
movb
add
or
sub
or
mov
push
push
addr16
xor
pop
add
and
sub
and
subl
inc
jl
out
add
ficomps
ja
adc
inc
push
sbb
idivl
jb
out
pop
sub
insb
sahf
mov
sbb
dec
mov
xchg
clc
push
stc
jb
and
push
jae
les
sbb
ret
lds
je
jne
dec
fldpi
inc
popa
iret
iret
test
sbb
repnz
inc
js
jecxz
cmp
imul
mov
outsl
push
xchg
jle
jae
ret
loope
cmp
xchg
outsl
cwtl
jb
addb
lcall
gs
lods
out
mov
or
insl
jae
jp
and
push
popa
xor
and
lea
jmp
les
lds
lea
test
mov
nop
push
add
inc
lea
imul
sbb
mov
insl
pop
cli
pop
sbb
test
xchg
lahf
mov
bound
mov
jge
jb
clc
icebp
xor
insl
mov
imul
cmp
iret
and
stos
jne
iret
and
into
mov
cmp
jp
ja
or
mov
xchg
push
sti
pop
cmp
test
xchg
enter
fst
fmull
jp
mov
test
pop
shll
jmp
lcall
jo
mov
mov
mov
sahf
out
mov
jne
dec
add
out
test
jns
imul
loope
pusha
aaa
mull
mov
nopl
mov
call
adc
mov
xor
aad
push
push
nop
xchg
fisttpl
mov
dec
pusha
pop
lock
push
sahf
in
push
add
push
dec
lea
sbb
fs
jecxz
add
gs
mov
xchg
pop
sub
bound
movsb
mov
or
push
adc
push
push
push
je
push
jl
add
les
or
jmp
lods
xchg
pop
sub
ss
mov
xor
jb
jecxz
cmp
popa
loop
jecxz
in
js
sbb
lods
call
or
add
dec
inc
jecxz
test
test
xor
test
pop
and
outsl
imul
mov
jns
shlb
arpl
jnp
out
outsl
outsb
dec
lret
out
lock
repnz
out
in
js
insb
outsl
loop
scas
sbb
cs
icebp
mov
lret
inc
jo
cmpsb
out
rorb
xchg
loope
push
ret
inc
les
mov
mov
dec
enter
call
and
cs
mov
call
lcall
jnp
cmp
test
xor
sar
in
add
pop
xchg
and
or
fimuls
mov
mov
push
imul
outsl
jl
nop
jae
negl
xchg
jbe
into
mov
movsb
inc
sarb
aaa
push
inc
mov
xchg
pop
pop
jns
mov
fistl
js
push
jl
rorb
out
push
incb
ret
loope
loope
loop
ss
pop
in
xchg
cmp
dec
sub
cmp
movsl
inc
jl
jge
insb
je
mov
in
inc
ds
cmp
dec
aas
je
test
push
test
fisubrs
xchg
stos
stos
add
cmp
cs
push
stc
jno
ds
inc
sbb
pusha
xor
dec
add
cmp
mov
fidivrl
insl
mov
jb
loop
adcl
xchg
mov
jecxz
pushf
lock
movsl
xchg
or
clc
test
mov
push
adc
mov
xor
jb
adc
fildl
in
adc
and
push
mov
cwtl
dec
jbe
lods
in
gs
imul
fcmovnb
add
imulb
mov
in
xchg
insb
pcmpeqw
push
jb
sbb
xchg
je
iret
xchg
xchg
cmp
je
sub
pop
dec
rorb
adc
dec
sarl
fs
adc
cmc
mov
cmp
mov
ficoml
adc
xlat
and
pop
pop
in
es
std
insl
push
test
repz
ficoms
push
loop
push
dec
cmovno
dec
scas
hlt
pop
out
mov
add
nop
xchg
jmp
mov
add
leave
cli
enter
cld
fyl2x
addr16
shlb
test
rcl
std
aad
mov
jno
or
jns
popa
je
cmp
andb
movb
jns
and
mov
out
popa
sbb
aam
imul
jge
xchg
xor
lret
inc
faddl
ds
dec
ret
and
jnp
clc
cmpsb
cmp
sbb
sbb
in
sub
js
sbb
inc
std
pop
pop
gs
jnp
jecxz
mov
sub
in
cmp
out
lock
repnz
fs
jmp
das
push
setnp
sub
inc
mov
jae
push
call
mov
or
int3
jmp
leave
fs
insb
pushf
test
cmp
lea
subl
test
jae
sub
mov
jle
add
mov
mov
mov
push
ret
rorb
dec
mov
mov
add
inc
lret
add
mov
sbb
inc
gs
mov
push
cmp
sbb
mov
sbb
and
in
incl
jb
pop
orl
mov
js
mov
pop
int3
enter
sub
pop
les
mov
mov
xchg
and
jbe
es
inc
stc
push
and
das
fadds
mov
push
push
cmp
mov
rcrl
stos
mov
xchg
pop
add
nop
cmp
sbb
push
and
and
inc
mov
cmp
je
cmp
xchg
mov
repnz
xor
shrb
packuswb
testb
mov
mov
add
mov
push
pop
push
push
push
cmp
repz
nop
sub
cwtl
fnstenv
sahf
mov
mov
clc
or
in
mov
mov
mov
xlat
mov
lods
mov
add
add
je
ja
jl
cmp
sbb
lock
mov
jmp
cld
outsl
call
push
or
and
adc
inc
xchg
fcmovnu
and
ret
insl
or
mov
cmp
aaa
sub
inc
sarl
fadd
icebp
pop
je
pop
bound
sbb
xchg
bound
loope
enter
ljmp
arpl
arpl
inc
arpl
daa
sbb
xchg
insb
arpl
dec
gs
sbb
push
and
sbb
xchg
mov
arpl
arpl
mov
jns
repnz
push
adc
loope
xor
inc
mov
fs
cmp
mov
sahf
cmpsb
cmp
mov
shlb
fs
jo
add
cs
add
fs
imul
mov
inc
gs
outsl
fs
gs
popa
outsb
add
je
add
imul
add
outsl
push
imul
addb
insb
jne
push
data16
popf
jb
jmp
imul
push
lds
in
nop
jb
or
push
push
outsl
push
clc
repz
lar
mov
add
sbb
imul
je
mov
aam
sub
inc
js
jb
arpl
push
push
push
push
shlb
mov
push
mov
loopne
imul
mov
outsl
bound
inc
insb
in
ret
inc
mov
fcompl
orb
pop
cmpsl
or
test
fdiv
add
cmp
inc
dec
jo
dec
mov
cmpsl
ljmp
add
inc
push
dec
inc
dec
xor
push
lcall
pop
push
lret
jno
add
js
xchg
adc
push
pop
cmpsb
mov
inc
mov
add
cltd
jae
inc
jb
pop
add
lea
xchg
popa
sub
rcrb
xchg
roll
es
arpl
add
jne
jo
add
aas
xor
inc
push
inc
pop
dec
inc
pop
rorb
in
adc
inc
js
inc
xchg
cmpsb
add
dec
xor
das
shrb
shll
mov
jg
imul
xor
fiaddl
imul
dec
inc
push
push
pop
je
mov
imul
repnz
int
push
mov
popa
mov
xchg
iret
xchg
out
ret
out
push
outsl
addr16
js
repz
leave
fs
jae
sub
jae
pop
jno
sub
fs
sarb
imul
jp
jns
lods
add
insl
insl
outsb
push
aas
lret
outsl
test
xorl
jns
mov
mov
outsb
pop
js
scas
add
rcrl
scas
fs
test
and
pop
add
xor
outsw
inc
xor
mov
pop
fs
add
inc
push
push
inc
push
inc
pop
dec
add
lds
pop
push
add
bound
fs
inc
fs
insb
push
subl
and
out
outsb
movsb
add
repz
into
dec
outsb
insb
rorb
les
sub
rolb
cmpl
jne
pusha
nop
nop
call
jmp
nop
inc
dec
cmp
add
aam
hlt
movl
faddl
xchg
fldl
xchg
ret
inc
or
aaa
xchg
or
mov
dec
sbb
or
popa
adc
and
add
cmp
inc
adc
add
mov
add
dec
sbb
fimull
test
nop
je
lea
dec
cmpsb
repnz
push
mov
add
mov
pop
repz
pop
jne
mov
shlb
jle
jl
add
add
cli
mov
mov
jmp
adcb
push
cmp
je
sbb
mov
loopne
push
inc
shlb
dec
lret
dec
pop
shll
push
addr16
les
push
in
iret
mov
sub
push
test
mov
push
pop
pop
fcomip
sbb
xchg
pop
lea
and
add
call
nop
add
nop
jmp
pop
pop
nop
mov
adc
xor
push
xor
nop
pop
mov
dec
adcb
popl
rcll
lods
mov
adc
add
shrb
mov
imul
data16
sbb
loop
push
dec
jp
jg
cmp
mov
ja
xor
loope
ds
dec
dec
pop
push
call
call
in
inc
mov
mov
ds
xor
shrl
arpl
inc
lcall
lahf
push
push
aaa
jb
addb
push
push
or
mov
ss
and
test
or
dec
add
sbb
lret
jns
pop
adc
push
pop
push
fldl
push
nop
ret
mov
push
add
add
frstor
pop
popf
inc
fmuls
pop
mov
push
or
and
lea
push
push
inc
and
test
and
and
outsb
and
dec
push
and
or
sbb
rcrb
or
pop
or
cwtl
add
js
mov
push
outsb
mov
fcoms
insb
mov
mov
data16
arpl
xorl
mov
push
roll
jbe
mov
and
add
mov
inc
fildl
xor
shl
xchg
in
jo
int3
insb
pop
adc
aas
ja
loope
int3
addb
adc
ljmp
or
icebp
pop
sbb
dec
add
pop
shl
cmp
je,pn
dec
add
je
and
or
inc
xor
dec
dec
cmp
mov
cs
add
add
or
and
cmp
mov
lahf
lret
mov
stc
jge
or
add
aas
add
add
inc
les
and
adc
xlat
add
sub
movsl
in
ds
xchg
and
rolb
mov
rcr
cmpsl
add
inc
jge
stos
fiadds
jns
call
and
xor
push
xor
push
and
cmpb
add
push
or
fcomi
add
jle
xorb
jo
push
cmpb
adc
mov
add
push
jne
lcall
ja
push
movzbl
push
je
mov
in
add
jbe
mov
inc
jno
mov
aaa
push
inc
pop
mov
mov
push
and
pusha
notl
cmp
pop
enter
pop
xor
add
ss
mov
nop
pop
pop
cli
add
test
add
ret
add
mov
push
clc
addr16
xchg
imul
in
insb
in
jne
add
jo
out
cs
insb
repnz
clc
mov
popa
lods
insb
add
or
dec
mov
icebp
pop
adc
or
ret
mov
les
fmuls
add
lds
cmp
je
dec
enter
add
jmp
gs
inc
int
into
xchg
add
clc
arpl
outsl
shlb
shlb
aaa
into
or
jae
push
cmp
popf
add
add
cltd
mov
jns
sbb
cmpsb
cmpsl
out
push
inc
mov
test
stos
stos
lods
sahf
lods
scas
scas
mov
jns
jo
shlb
icebp
sbb
jp
mov
daa
push
mov
add
js
jne
push
jo
popa
loope
sbb
jecxz
andl
adc
mov
and
mov
mov
pushf
cwtl
or
cmp
insb
push
add
lea
pushl
rorb
or
jo
add
and
faddl
or
dec
cmp
jmp
mov
imul
add
add
pusha
add
movsl
mov
push
sbb
movsl
add
add
jne
pop
pop
and
in
push
clc
mov
movl
lock
jbe
aaa
pop
dec
dec
mov
cmpsb
sbb
xchg
sub
repz
hlt
cmc
testb
imul
jecxz
in
in
out
out
faddl
call
ja
loopne
xor
add
add
inc
loopne
cmpsb
push
mov
enter
sbb
push
aas
or
pushf
nop
add
jne
push
push
mov
inc
mov
push
xchg
dec
add
dec
dec
rorb
pop
ret
lds
add
add
push
add
or
push
mov
cmp
mov
jmp
xchg
xor
bound
in
into
sbb
pop
add
sarl
mov
jne
ret
pushf
cmp
jb
add
imulb
pop
cmp
jo
push
scas
int
mov
or
aam
or
adc
lret
add
je
mov
jl
lds
push
inc
inc
pop
add
jmp
push
int3
cmp
inc
push
repz
adc
aam
push
sbb
add
adc
imul
fsubrs
loop
jae
fsubl
add
add
push
out
fisttps
adc
rolb
sub
and
cmp
or
pop
jo
inc
jne
xchg
add
gs
add
cmc
push
jns
sub
jnp
loope
jns
jge
sbb
add
ret
ret
jg
addb
subb
add
test
xchg
push
mov
inc
xchg
popa
fcomps
mov
sub
add
cmp
leave
loope
adcl
inc
mov
add
xchg
popa
xchg
jbe
gs
dec
xchg
insl
xchg
popa
inc
pop
add
xchg
addr16
gs
push
lcall
xor
add
imul
jns
sbb
test
jecxz
mov
leave
jne
jae
jo
int3
je
popa
into
push
subb
iret
je
push
shlb
jo
jno
pusha
pop
add
xorb
cmp
mov
add
mov
jno
cmpsb
outsl
xlat
rcrb
test
sbb
push
leave
loop
fdivl
add
rclb
and
aaa
push
les
fstpt
insb
inc
add
add
dec
push
jno
push
jg,pn
inc
shlb
icebp
mov
add
popf
dec
jp
inc
push
sbb
insl
add
push
add
into
mov
pop
repz
das
pusha
push
mov
aam
add
rclb
stc
hlt
add
add
pop
sbb
xchg
test
xor
add
xchg
pop
push
sbb
adc
pop
mov
mov
push
subb
mov
dec
xchg
inc
insl
pop
fsubrp
jo
jo
add
or
sbb
cmp
push
xor
sbb
add
add
add
cmp
sub
push
cmp
mov
cltd
lods
xor
push
test
push
ljmp
add
inc
jg
or
lock
pop
mov
pushf
xchg
push
or
jb
cwtl
push
cltd
cmp
push
loopne
add
cmp
pop
sub
clc
xorb
js
jns
cli
xor
add
add
cs
gs
mov
lds
mov
jne
push
arpl
mov
add
add
mov
sbb
jae
add
add
iret
push
dec
jb
push
ror
jns
sbb
inc
sahf
data16
mov
inc
je
add
add
push
mov
movsb
push
mov
pop
cmp
add
sti
movsb
push
fs
ror
nop
cmp
loopne
adcb
mov
inc
lret
add
add
sub
mov
dec
cltd
jo
and
adc
push
rcll
lret
fiaddl
add
stos
add
jl
inc
pop
lods
jmp
jb
and
or
cmp
push
in
mov
dec
or
adc
out
add
add
xor
lret
add
mov
mov
sbb
incl
or
in
out
out
cmp
call
jmp
cwtl
or
fdivl
pop
mov
pop
mov
subb
fisubs
sbb
cmp
pop
and
pop
cmpsl
inc
mov
or
push
add
add
into
test
ss
xor
loope
cld
clc
mov
aam
ret
cmpb
xlat
push
pop
mov
push
push
fcoml
dec
add
xchg
push
adc
add
jns
mov
xchg
mov
mov
negb
dec
aas
add
sub
push
jbe
jo
or
inc
xor
pop
loopne
or
mov
mov
inc
dec
mov
jl
mov
add
inc
sub
sahf
subb
pop
mov
loopne
add
mov
pop
sub
fdiv
jle
mul
stos
in
add
add
testb
xor
or
push
cmp
pop
ret
pusha
or
and
jno
inc
dec
stos
add
and
jo
mov
add
insb
pop
sbb
pushf
inc
mov
cwtl
add
in
push
popf
pop
cmp
cmpb
je
push
jb
push
loop
add
xor
or
push
push
adc
jl
verr
or
test
adc
add
in
push
mov
dec
imul
pusha
sbb
out
pop
jmp
pusha
pop
add
push
mov
sarl
movsl
add
aad
fs
sbb
mov
xchg
imul
std
jl
mov
jno
loopne
xor
cmp
inc
leave
pop
loopne
jle
mov
add
xorb
cmp
movl
push
push
lret
mov
loopne
mov
cmp
leave
sbb
shl
add
pop
adc
aaa
mov
add
push
jne
mov
sub
xor
jp
stos
pusha
loop
popa
pop
pop
pop
mov
and
cmp
inc
add
movsb
lock
pop
cmc
jl
bnd
addb
or
add
cmc
insb
in
cmp
fs
and
inc
jno
sti
cld
js
xchg
roll
add
jns
push
push
add
mov
fs
mov
test
cli
inc
subb
push
push
andb
lods
or
adc
ficompl
push
xchg
add
mov
sbb
daa
or
cmp
je
add
add
xchg
dec
inc
mov
mov
pop
insl
xor
call
add
mov
loopne
movsl
addb
ret
or
into
mov
xchg
xorb
push
repz
add
add
add
loopne
lsl
popf
loope
dec
loopne
pop
into
cltd
push
cmp
xor
std
sbb
xchg
faddl
add
add
inc
repz
push
xor
lcall
out
and
pop
inc
mov
xchg
add
icebp
into
and
insl
cld
leave
mov
clc
mul
sbb
jns
les
repz
jge
andb
mov
and
cmpl
add
add
push
mov
or
hlt
popa
rclb
ja
fstpt
insl
inc
adc
jge
jmp
add
or
stos
mov
mov
mov
push
add
add
inc
lahf
mov
push
cld
jnp
jp
pop
std
std
inc
push
sbb
add
ja
test
test
jne
lcall
aas
cmp
cmpb
xor
xor
mov
dec
add
sarl
jae
cmp
xor
xor
and
fs
icebp
mov
rorl
sahf
aam
cmp
sub
add
xor
fidivs
fbstp
loopne
loope
loop
pop
add
es
in
out
out
push
xchg
jmp
fsubr
aaa
in
cmp
repnz
add
xchg
es
fs
cmp
add
mull
loopne
shll
ss
inc
add
add
add
push
cmp
imul
in
pop
sbb
mov
mov
add
scas
clc
scas
cld
jae
in
in
popf
xchg
inc
sub
push
mov
cmp
pop
pop
leave
adc
leave
add
push
jbe
outsb
imul
gs
sbb
xchg
rcl
imul
inc
cmp
aam
js
mov
mov
xchg
imul
xchg
xor
ficomps
add
lcall
pushf
mov
outsb
jo
repz
or
cs
arpl
ret
jae
add
mov
enter
lret
lcall
add
add
fbstp
add
loopne
mov
js
in
test
packsswb
lods
inc
cmc
pop
rolb
jecxz
imulb
gs
push
stc
jb
outsl
mov
popl
add
sti
jns
dec
std
cmp
pop
push
pushl
in
and
push
push
cmp
fwait
testb
arpl
pop
jecxz,pn
fimuls
js
pop
and
adc
lods
jae
outsl
scas
arpl
jns
insl
mov
mov
mov
fcoml
into
mov
jno
dec
fs
das
push
push
repz
cmp
push
ret
pop
lea
add
or
arpl
ficoml
jmp
mov
pop
pop
sbb
pop
add
add
into
jecxz
icebp
xor
jns
dec
sub
mov
lds
cmp
mov
mov
add
or
cmp
aas
cmp
and
out
inc
sbb
add
lret
std
loop
and
and
daa
sub
pop
add
pop
sub
sub
cs
ds
inc
imul
cmp
jecxz
xor
xor
cmp
add
lcall
or
scas
sub
outsb
andl
dec
xchg
cwtl
mov
imul
add
mov
sbb
js
add
add
xchg
popa
pop
cltd
jno
arpl
mov
pop
pushf
lea
xor
dec
addr16
imul
mov
js
insl
outsb
mov
jae
outsb
add
data16
cmpsw
cs
test
pop
add
jecxz
stos
inc
int
pusha
mov
inc
clc
inc
ret
out
rolb
daa
inc
xor
mov
idivl
cmpsb
add
dec
dec
popa
xor
test
arpl
add
or
mov
loope
push
arpl
adc
adc
data16
mov
push
mov
push
jns
flds
add
add
test
lods
sbb
mov
mov
jno
pushf
les
rolb
push
mov
into
mov
xor
and
add
jo
mov
cmp
fsubr
fs
nop
mov
ljmp
mov
in
call
or
xchg
insb
sbb
daa
sub
sbb
or
inc
push
pop
pop
sbb
inc
cwtl
or
add
test
mov
dec
xchg
add
add
int
test
xor
test
add
stos
jmp
shll
mov
sbb
xchg
xchg
add
add
dec
push
jg
sbb
setge
mov
mov
sub
es
stos
mov
add
sti
fdivr
sub
movsb
sub
pushf
xchg
nop
es
push
sbb
add
out
push
fdivl
sahf
sub
incl
push
shll
add
shrb
mov
add
push
inc
inc
cmpsb
fsubs
dec
js
add
add
loopne
insl
mov
cmpb
mov
sbb
mov
push
mov
ret
push
adc
in
adc
clc
ret
push
ds
push
int3
roll
add
xor
cli
pop
mov
push
fwait
xor
aaa
je
clc
pop
push
dec
inc
sbb
add
ja
jno
push
sbb
cmp
or
sbb
data16
incb
mov
xor
jae
add
and
cmp
dec
lahf
sbb
add
int3
push
ret
pop
mov
sbb
push
icebp
loope
testb
inc
push
icebp
jbe
mov
mov
outsb
push
push
sti
icebp
add
cmp
outsl
jb
cmc
aam
jb
imul
nop
enter
roll
and
xchg
push
lret
int3
imul
add
mov
cmp
aam
pop
jo
cmp
sbb
lret
arpl
fsubs
xchg
inc
xchg
data16
js
cmp
pop
lcall
pop
add
test
ds
push
dec
sub
pop
add
inc
mov
or
cwtl
pop
mov
add
rol
jns
cvtps2pi
inc
inc
inc
push
pop
adc
add
sbb
nop
adc
fnstsw
fiadds
loopne
loope
adc
loop
dec
fcoml
add
add
xchg
sahf
insb
jmp
cs
xor
mov
loop
dec
sbb
fs
std
xor
mov
in
jbe
mov
mov
inc
out
lock
inc
ret
push
shl
add
pop
add
jecxz
jle
jo
xor
push
outsb
push
lock
mov
mov
add
loopne
popf
add
fs
push
dec
push
push
mov
jecxz
add
inc
addl
cwtl
repnz
add
sbb
les
leave
das
cmpsl
push
out
inc
mov
sbbl
movsl
addb
cmp
lods
dec
push
es
mov
fcmove
shlb
popf
or
aam
enter
push
adc
and
adc
hlt
popa
add
outsl
lea
jo
fadds
loopne
add
push
in
adc
jb
lea
pusha
pop
add
mov
ret
les
aas
add
mov
mov
aas
les
push
cmpsl
outsb
test
test
arpl
movsb
loop
lods
jae
xor
loop
scas
fmul
aam
xor
nop
imul
jne
insb
push
mov
inc
out
pop
jns
lock
inc
or
xchg
add
dec
scas
cmp
iret
jns
push
gs
fs
mov
mov
add
push
jae
insl
sbb
jnp
fwait
leave
jns
movb
add
repz
inc
mov
mov
mov
mov
mov
inc
mov
add
adc
outsb
mov
das
repnz
add
and
xchg
lcall
nop
sub
mov
mov
add
dec
inc
mov
mov
inc
cmp
push
fsts
pop
sbb
sub
das
push
xor
hlt
in
test
push
xlat
pop
movsl
cmpsb
push
sar
add
add
inc
dec
sub
and
divl
xor
aam
lock
jmp
xchg
outsl
movsb
or
jne
add
add
add
and
pop
or
xor
por
mov
mov
add
add
lea
jmp
sub
loopne
sbb
rcl
push
xchg
loope
pop
push
rorb
add
add
aaa
movsb
sub
sub
mov
push
icebp
and
adc
xor
repnz
sbbl
mov
add
movsb
push
int3
and
jl
test
pop
pop
adc
add
call
hlt
scas
mov
and
adc
mov
or
cli
push
add
jne
pop
movsb
in
or
loop
jp
rcrb
inc
xchg
data16
cmp
lcall
int3
lods
jae
add
sti
xor
cmpsl
shll
jp
pop
cmp
mov
jg
and
mov
test
push
pop
jmp
adc
in
test
xchg
and
popf
loopne
mov
lea
adc
add
jb
add
push
loop
jno
xchg
les
add
jmp
cmpl
je
test
add
mov
roll
mov
push
add
add
insb
pop
xchg
add
fidivl
mov
shl
add
dec
mov
loope
or
jb
lods
inc
lret
cmp
je
and
bound
dec
dec
or
push
or
pop
sub
aas
cmp
dec
push
jne
push
sbb
adc
aam
add
add
xchg
or
or
push
cmc
sub
xor
add
orb
pop
imul
out
imul
insb
inc
and
jns
add
lods
and
mov
adc
xchg
ficoml
enter
lods
push
or
dec
xchg
sbb
add
add
nop
add
fistpl
jnp
scas
fsts
xchg
cmpsb
call
mov
jo
test
xchg
add
jb
xor
xor
cs
add
fstps
xchg
loope
lcall
call
add
fwait
fisttpll
jne
sahf
lret
int3
and
pop
push
out
je
push
xchg
add
add
mov
cmp
aam
jnp
cmp
sar
and
add
mov
add
add
add
unpckhps
jno
out
out
test
scas
sti
xor
sub
loopne
jne
sbb
add
add
mov
xor
jmp
adc
stos
add
inc
sbb
je
inc
dec
outsl
add
lock
mov
stc
std
icebp
xchg
add
add
clc
std
push
push
jbe
cmp
push
pop
lret
inc
pop
lods
cmp
mov
xorb
scas
jmp
gs
add
test
xchg
push
shrb
sub
inc
icebp
stc
lock
push
mov
mov
int3
xor
cs
xchg
mov
fs
sar
add
add
ret
aam
mov
mulb
hlt
cld
addr16
xchg
push
pop
push
add
add
cli
adc
cwtl
rorl
and
mov
mov
cmp
shrl
test
adc
add
add
jae
mov
les
popa
push
adc
mov
add
add
and
add
iret
inc
xchg
in
test
pop
cltd
mov
outsl
adc
sub
jo
xlat
add
dec
in
cmp
out
mov
push
out
stos
outsb
jb
fdivs
jno
push
and
call
je
addb
or
mov
shll
push
aaa
add
add
shlb
pushf
pushf
cmp
add
adc
in
mov
nop
cmp
adc
mov
push
cltd
xchg
add
and
cli
push
sti
push
mov
mov
pop
pusha
push
add
add
push
stc
loope
rorb
hlt
cmpb
call
adc
or
add
inc
push
movaps
push
in
std
in
enter
adc
pop
jle
push
loope
rcll
outsb
in
movsb
enter
add
jmp
je
rorb
mov
daa
mov
data16
in
addr16
test
dec
add
or
push
cmc
dec
testb
mov
add
clc
dec
stc
inc
mov
mov
pop
adc
pop
into
jge
test
push
inc
push
test
movd
and
xchg
or
cmp
punpcklwd
mov
add
dec
aad
lret
jo
xlat
outsb
fcomp
stos
js
cmp
or
fadds
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
mov
bound
or
pushf
mov
jns
gs
cwtl
jo
jno
jne
ret
add
js
gs
je
jecxz
cmp
xchg
mov
mov
shlb
gs
std
or
add
add
outsb
enter
lret
mov
mov
add
mov
lahf
bound
sub
in
cmpb
pop
lret
add
aas
adc
adcl
add
push
lret
mov
jecxz
and
leave
mov
mov
rolb
add
mov
pusha
mov
call
pushf
jb
in
stc
int
insb
lcall
xchg
popa
sbb
jno
rolb
jae
loope
sbb
pop
xor
popf
ret
addr16
incl
add
add
mov
daa
pop
scas
repnz
xchg
xchg
faddl
cmp
fbstp
sub
cmp
in
lret
add
inc
dec
cwtl
cmp
jnp
add
push
push
dec
add
add
xchg
sbbb
addr16
rorb
imul
addl
add
fmull
dec
mov
mov
xor
cmpsl
add
xchg
icebp
lea
xor
dec
mov
add
add
test
fs
stos
sbb
movsb
pushf
mov
int3
pop
push
sbb
rorb
add
cmp
xchg
clc
mov
iret
idiv
gs
or
add
add
jle
clc
nop
cli
add
cmp
je
push
mul
movsl
mov
or
stos
add
inc
cmp
jl
dec
xor
ds
pop
sub
push
cmpsl
cmpb
mov
dec
xchg
jmp
dec
int3
out
push
test
and
inc
mov
pop
mov
add
add
or
aad
push
lock
ss
test
mov
mov
mov
add
xorl
add
add
fistl
add
fadds
in
rorl
push
inc
rcrl
sbb
add
add
in
loopne
movsb
ja
push
xchg
daa
fwait
scas
pextrw
mov
or
and
sbb
jnp
mov
or
push
dec
hlt
sub
dec
jecxz
jp
imul
insb
test
stos
push
lods
dec
lods
inc
add
dec
add
scas
outsb
mov
xchg
ja
insb
popa
xor
movsb
push
add
imul
xor
dec
xor
pop
jo
les
out
add
jmp
rcl
popa
sarb
je
lock
sub
outsb
xlat
xor
pop
jno
inc
fisubrl
add
add
popa
fsubrl
dec
jge
mov
pop
mov
pop
nop
pop
xchg
push
xchg
push
jo
add
sbb
jb
insl
xchg
gs
add
push
cltd
lcall
fwait
pushf
pop
popf
xor
sbb
arpl
push
dec
mov
cwtl
daa
mov
jnp
xchg
sbb
xchg
outsl
je
fsubrs
faddl
add
add
imul
into
inc
and
ror
les
outsl
add
inc
icebp
push
addb
nop
xchg
push
in
jnp
popf
jne
mov
xlat
mov
dec
iret
cmp
xchg
dec
sub
andb
push
mov
rcrb
xor
jo
push
push
rolb
cwtl
inc
lret
add
inc
das
leave
mov
jo
add
add
addb
shrb
repnz
movl
std
jl
cld
inc
cmp
aas
movsb
jp
pop
dec
sbbb
adc
and
aas
popa
push
xorb
outsl
outsb
je
cmp
aaa
dec
pushf
popf
je
insb
lahf
outsl
mov
lock
jns
mov
and
add
inc
add
test
xchg
push
andl
cmp
pop
inc
xorb
mov
or
and
add
mov
mov
add
push
push
xor
aad
imul
push
lock
add
imull
inc
jne
cmp
add
add
outsl
mov
add
insb
or
enter
add
les
hlt
dec
cmc
jo
add
pop
mov
arpl
cmpsb
lods
bnd
push
js
jmp
loopne
add
aam
aad
popa
xlat
je
sahf
and
add
add
mov
dec
arpl
dec
sahf
fnstsw
aas
xor
mov
loope
adc
adc
scas
push
mov
xor
or
xor
xor
add
andb
mov
sbb
pop
pushf
or
lea
sbb
or
mov
adc
add
push
xor
imul
mov
push
lret
and
mov
sbb
fwait
sbb
cmp
add
add
xor
pop
or
mov
je
push
mov
fdivrl
inc
xor
xchg
push
add
sbb
inc
sub
add
or
ss
xchg
cmpsb
std
insl
mov
sbb
add
pop
ret
mov
addr16
xchg
sahf
inc
lock
movsb
mov
aaa
pusha
mov
or
roll
add
xor
faddl
adc
and
inc
adc
adc
cmpl
inc
add
xorb
icebp
xchg
arpl
cmpb
jle
or
add
add
xchg
mov
jb
clc
adc
xor
or
push
stos
in
stos
push
cmp
xor
mov
mov
sbb
repz
enter
add
xor
mov
add
nop
cmp
jl
push
bound
lret
je
cmp
jne
add
add
add
cs
mov
mov
sbb
pop
test
movl
cmp
add
add
je
je
std
inc
sti
cmp
xor
pop
mov
mov
jmp
mov
data16
inc
bound
int3
push
mov
aam
and
or
test
add
add
sbb
jl
adc
jl
mov
ss
mov
into
cmp
mov
jnp
adc
jmp
flds
add
add
mov
cmp
add
pop
jne
addb
adc
hlt
rsm
push
jne
in
mov
push
add
add
jnp
aad
cmp
sbbb
pop
cmpsb
sub
ss
or
ja
imul
decl
insl
adc
ss
pop
mov
sub
cmp
leave
push
mov
inc
test
cmp
mov
add
add
sub
jp
add
and
sbb
insb
add
inc
sbb
jg
je
sub
add
rclb
xchg
xchg
notl
cwtl
cmpsl
cwtl
pop
and
jbe
push
ret
rep
imul
lret
lock
pusha
iret
shrb
xor
add
aam
pop
mov
loope
sub
mov
cwtl
adc
sbb
xchg
sbb
outsb
inc
pop
xor
out
and
push
aas
inc
sahf
inc
pop
xchg
out
add
sbbl
jns
inc
add
enter
mov
and
lea
popf
rcrb
inc
jnp
add
push
sbb
cmp
mov
popa
add
cmp
in
add
sbbb
arpl
cmp
popa
call
adc
inc
jae
out
xor
aam
lret
fcomp
inc
fldcw
xchg
sub
add
dec
fistpll
xchg
add
add
jecxz
das
lea
mov
stos
movsl
sbb
aam
pop
and
mov
cwtl
inc
pop
sub
add
test
jnp
cwtl
push
lret
xor
add
mov
cmp
or
cs
push
cmp
or
add
in
jne
jnp
dec
or
inc
push
sbb
test
jne
or
add
push
jg
mov
mov
xabort
jns
je
mov
mov
add
gs
or
imul
repnz
incl
loop
add
inc
scas
fnstenv
addb
add
or
adc
dec
push
push
and
jmp
andb
mov
add
iret
sarl
cmp
incb
sbbb
or
movsw
js
repz
push
int
or
add
add
mov
sbb
inc
sahf
stc
cli
sti
fs
int3
lcall
jp
push
je
pop
xchg
in
addr16
cmp
add
add
hlt
mov
adc
sub
sub
jo
add
into
je
mov
adc
xchg
cmp
mov
sbb
jno
push
add
add
xchg
push
or
jo
xor
jne
shlb
and
pop
test
les
pop
cmpsl
mov
inc
mov
or
dec
jmp
cmpl
adc
sbb
lods
and
dec
and
pushf
add
movsl
add
sbb
addr16
inc
push
add
cmp
push
fdivrl
movsl
add
add
jno
in
repnz
es
dec
sbb
insl
xor
push
adc
add
sbb
insb
add
in
xor
inc
pop
mov
pop
gs
shlb
lods
inc
dec
inc
push
movsb
add
ret
pop
rcll
adc
add
test
out
test
aam
nop
notl
imul
jb
sbb
ss
sub
dec
add
dec
dec
push
cs
push
mov
rolb
fadd
jo
sbb
mov
mov
inc
push
mov
mov
sub
cmp
gs
outsl
clc
inc
mov
cmp
add
adcb
add
inc
add
ret
movsb
push
les
mov
add
push
or
and
lock
mov
cmp
std
push
movb
add
mov
loopne
adc
and
cmpb
pop
add
test
les
addl
imul
add
add
cmp
push
xchg
outsl
jo
or
data16
and
xchg
bound
add
mov
call
add
mov
aaa
es
gs
xchg
add
negl
int3
cmp
jmp
cwtl
cwtl
cltd
out
xor
gs
push
leave
inc
pop
xchg
push
loope
test
push
jae
xor
cwtl
jp
xchg
cmc
stos
or
adc
add
or
outsb
push
xchg
or
outsl
jmp
movsl
mov
into
jae
xchg
in
sub
inc
sbb
insl
ss
leave
rcl
pop
xor
xor
xor
arpl
sarb
xchg
mov
adc
fcoms
sbb
stos
mov
xchg
mov
sbb
mov
add
add
mov
daa
sub
cld
cld
test
stos
test
pop
push
push
or
ror
mov
sbb
aas
pop
mov
adc
push
cmpsb
mov
jmp
push
aam
lcall
or
xchg
repnz
repz
add
mov
fbstp
push
arpl
sbb
mov
out
xor
add
add
lds
fadds
data16
fidivrl
mov
cld
push
lret
and
and
add
xor
mov
bound
or
add
movsl
xorb
or
inc
push
shll
add
or
test
and
xor
cmp
ja
adc
add
neg
push
mov
sbb
adc
sar
and
add
aad
movsl
sbb
stc
jbe
and
push
cltd
push
xor
pop
outsl
movsl
lock
imul
add
idivl
cwtl
mov
inc
fs
pop
push
gs
sub
pop
fimull
jg
mov
mov
dec
xor
pushl
add
add
add
cmp
roll
leave
enter
fcom
stos
adc
fstps
add
fadds
mov
or
dec
inc
rcl
push
out
fs
inc
push
inc
lret
mov
jne
and
cmpl
add
mov
pop
in
add
shlb
cmpsb
xchg
jns
fdivrs
and
cmpsl
add
xor
sbb
movl
add
js
push
repz
movsl
xor
movsl
xor
dec
add
call
cmpl
dec
add
mov
mov
add
add
and
rol
jl
mov
fcom
mov
dec
xor
push
mov
adc
dec
outsb
mov
dec
mov
or
xchg
xor
push
add
faddl
int3
cmp
dec
xorl
loope
jb
xchg
dec
popa
insb
push
dec
rorb
mov
xchg
in
cwtl
add
mov
adc
mov
rcrl
shrb
roll
inc
add
sub
lea
lock
subl
jmp
add
arpl
mov
jmp
sub
inc
add
rolb
push
push
nop
fildll
sbb
xchg
enter
add
adcb
ret
jmp
mov
rolb
jp
or
inc
daa
repnz
hlt
jne
and
in
roll
mov
add
js
dec
sbb
xor
bound
lock
cmp
add
icebp
js
mov
push
nop
shlb
mov
ret
icebp
loopne
push
xlat
dec
les
pop
mov
sbb
int3
test
jle
out
out
lock
loope
js
add
repz
or
sub
sbb
mov
jmp
push
fucom
xrelease
pop
out
outsl
and
mov
lods
imul
fs
dec
add
add
jns
sahf
inc
outsl
imul
aam
repnz
and
xor
mov
dec
clc
cmp
roll
jb
pop
imul
add
aas
stos
xchg
imul
lret
push
roll
cmp
add
or
ljmp
inc
xor
dec
fsubrl
push
dec
add
sub
stc
jne
les
add
in
xor
sbb
out
out
sub
mov
addr16
aam
sarb
push
jno
aam
daa
mov
jne
cwtl
or
add
sbb
cmpl
shlb
xor
fcomp
or
cmp
cmp
add
push
sbb
fildl
loop
sbb
aas
or
add
add
push
je
aam
fcoml
mull
dec
xchg
test
adc
test
xchg
in
add
cs
sbb
jb
cs
add
or
sbb
add
or
faddp
adc
repz
lock
push
imulb
or
rolb
add
xchg
jo
bound
scas
jl
mov
int3
dec
call
add
add
jmp
popa
jmp
in
push
inc
imul
leave
sub
add
jo
dec
cmp
insb
aam
aad
iret
xchg
add
lock
pop
idivb
gs
stc
dec
ret
subb
mov
rolb
add
add
cmpsb
dec
sub
aam
push
addb
mov
sbbb
daa
or
xchg
inc
jecxz
add
ret
pop
xchg
xchg
gs
addr16
mov
pushf
out
pop
rcrl
outsl
inc
ret
icebp
movb
add
mov
xchg
int3
arpl
test
cmp
add
or
ret
enter
push
dec
sarl
inc
jmp
roll
add
lret
test
les
sbb
or
mov
gs
mov
push
push
mov
rorl
sbb
pop
pop
enter
jl
cmp
scas
cmp
stos
and
sbbl
add
sub
lret
lods
adc
les
insl
loopne
loope
add
test
xchg
add
popa
mov
outsb
pop
cmp
jmp
push
adc
add
inc
imul
jecxz
jp
dec
sti
jns
lcall
dec
jmp
pusha
bsr
or
outsb
rol
push
out
push
ret
add
or
xor
jno
lds
cmp
xchg
icebp
dec
js
pop
add
add
lcall
sub
xchg
mov
inc
aaa
jno
popa
int
xchg
adc
adc
push
pop
xchg
add
inc
sub
aam
cmp
arpl
inc
imul
fcomp
add
jo
dec
jl
fisubl
insl
fsubl
pop
jp
popf
ficoms
xor
add
dec
add
ljmp
xchg
and
add
add
push
inc
mov
filds
mov
lods
pop
test
jl
push
add
add
les
or
inc
cmpsb
and
cwtl
cmp
add
sub
lcall
sub
sahf
in
nop
inc
les
int3
cld
mov
xor
jle
rcrb
cwtl
out
jp
call
add
idivl
rcl
push
daa
or
rclb
fists
jecxz
mov
add
out
and
inc
test
cmp
cld
xor
add
jae
jp
gs
repnz
cld
aam
nop
jmp
add
cmp
or
ret
adc
rolb
push
dec
test
add
add
mov
and
cmp
into
pop
icebp
cmp
shl
add
ds
push
lock
jp
inc
sbb
xor
popa
je
xorl
push
clc
mov
xchg
jbe
add
sarl
push
icebp
les
cmp
lds
push
mov
jae
add
movb
mov
jb
rcrl
mov
or
mov
add
add
xor
js
mov
mov
dec
aas
inc
sbb
rcrb
fcoms
bound
xor
cmp
add
insb
pop
add
cmp
std
pop
mov
and
mov
out
mov
inc
xorl
scas
mov
add
mov
cwtl
jno
loopne
add
repnz
pusha
pop
int3
shrl
xor
push
cwtl
lds
iret
in
js
add
ds
test
add
adc
xor
inc
xor
insb
push
and
shll
cmp
add
add
push
and
dec
cmp
lret
push
inc
or
push
cmp
and
jge
lods
pusha
adc
sbb
outsb
dec
inc
iret
je
cmpsb
add
divl
je
xchg
mov
adc
push
add
adc
cld
in
inc
fmull
in
add
dec
add
add
mov
cmp
out
cmp
jb
add
add
sbb
add
adc
pusha
inc
incl
and
mov
push
add
xor
out
and
adc
sub
fldcw
add
pop
loope
lock
jne
add
sub
xor
cmp
loopne
add
stos
cmp
jae
mov
cwtl
push
add
adc
fstpt
mov
add
push
fcompl
dec
shrb
ret
pop
sbb
mov
push
mov
mov
repz
mov
gs
pop
push
push
mov
andb
cltd
xlat
lock
add
adc
shr
push
ret
outsb
jnp
dec
add
mov
cmp
int3
mov
jecxz
in
aam
add
xlat
cwtl
cmpb
sbb
repnz
add
rorb
outsb
fbld
cwtl
cli
jns
je
add
jl
adc
jne
push
inc
cli
adc
xor
js
or
lret
int3
jg
sbb
push
cwtl
dec
sub
cmpsl
and
test
add
push
inc
gs
pop
les
pop
push
nop
push
jl
add
add
mov
inc
popf
cmp
xchg
fsts
lods
enter
pop
xor
fwait
popa
sbb
orb
sbb
add
mov
pusha
popa
and
fdivr
and
negb
cmp
push
add
pop
mov
jecxz
xchg
in
or
pop
int3
add
adc
sub
add
add
ret
jnp
or
scas
mov
inc
cmp
sbb
int
ss
hlt
push
in
or
add
add
sbb
lret
pop
leave
jg
ljmp
xor
push
push
pop
push
enter
add
add
out
aam
push
out
inc
push
cmc
js
andb
add
and
push
jnp
push
and
dec
rolb
xchg
sub
das
add
inc
or
int3
shlb
hlt
lock
test
jne
call
adc
lock
sub
adc
add
sbb
xor
mov
add
pop
cwtl
or
add
push
push
jmp
pcmpgtb
orb
lea
je
lock
sbb
orb
sbbl
es
add
dec
adc
add
xchg
push
add
pop
std
test
mov
sub
enter
or
add
shrb
negb
pop
mov
or
ficoms
incb
clc
cmp
repnz
data16
dec
adc
fidivrs
inc
sub
push
add
dec
and
cmp
xor
add
addb
adc
insl
js
adc
lahf
inc
add
cmp
add
lock
loopne
mov
cmp
add
and
mov
adc
add
ret
sub
pusha
popl
add
sub
lret
mov
jne
mov
sub
push
cmpb
bound
add
add
cmp
je
mov
daa
addb
lret
push
repz
add
add
into
cmp
adcl
fiadds
push
sbb
shrl
aad
pop
leave
xor
push
sub
bound
inc
xchg
popf
mov
aam
outsl
dec
ret
add
inc
aad
cmp
adc
dec
jae
insl
add
dec
neg
mov
mov
cmp
imulb
roll
add
add
adc
arpl
jp
mov
xchg
add
add
add
in
adc
test
dec
mov
rcrb
xlat
inc
orb
sub
or
lret
adc
adc
and
push
mov
es
loopne
add
lcall
cmpb
add
push
sbb
cld
inc
add
daa
cmp
arpl
mov
inc
int3
pop
inc
pop
ss
pop
test
pop
mov
inc
add
andb
cli
ret
stos
cmpsb
sbb
add
xchg
pop
add
mov
ret
repz
ret
outsb
xor
inc
add
fmuls
dec
push
pushf
mov
mov
lds
xchg
xor
cwtl
mov
ret
aaa
cmpb
das
sub
add
push
mov
ret
fwait
mov
or
jno
out
push
mov
jno
sub
xorb
push
repnz
in
mov
add
and
pop
mov
jmp
loopne
push
cwtl
sbb
repz
add
jle
xor
adc
test
and
sti
cmp
mov
test
add
xor
push
call
js
dec
clc
jne
iret
ljmp
or
or
mov
leave
jno
aaa
insb
mov
add
orb
cld
mov
daa
dec
out
cmpl
jmp
in
int3
and
lds
cmp
adc
adc
ror
xchg
adc
dec
mov
jns
sarb
popl
insb
popa
jle
das
dec
sub
mov
add
mov
mov
enter
push
add
shrl
and
dec
xchg
enter
add
jge
and
rclb
je
dec
or
imul
sbb
add
add
imul
push
jge
jno
clc
xor
mov
idivb
add
push
push
jnp
pushf
cmc
sub
loopne
xor
das
add
add
test
jmp
mov
xor
sbb
mov
sahf
pop
and
in
sub
mov
jb
addr16
add
add
gs
out
icebp
call
loopne
fldl
pop
inc
enter
int3
xchg
and
enter
adc
add
mov
mov
cmpb
icebp
cmp
rcrl
testl
les
das
pop
jne
scas
push
popf
add
add
lahf
or
sbb
push
and
fsubrl
and
push
mov
dec
push
imul
arpl
cmp
in
scas
shlb
imul
jae
cmpb
dec
sbb
stc
cmp
mov
mov
dec
insl
sar
push
lcall
sub
scas
shrb
pushf
pop
fistpl
fwait
sub
enter
aam
xlat
xor
shll
sub
jecxz
mov
stos
xchg
sbb
into
jmp
mov
or
inc
mov
adc
test
in
test
std
add
add
inc
movsb
or
inc
cmp
jl
xchg
repz
inc
jnp
idivl
add
insl
adc
addb
test
incl
sub
lea
insb
adc
pusha
pop
subb
or
cli
adc
loop
mov
incl
shlb
cmp
mov
inc
outsb
push
sbb
sbb
adc
sbb
add
push
adc
dec
push
cmp
cmp
sbb
jl
jle
mov
add
add
ret
clc
scas
sbb
inc
add
adc
mov
adc
sbb
jmp
xchg
cmp
xchg
pop
jo
cs
xor
mov
shrb
mov
shll
pop
orb
ret
sti
sbb
add
push
adc
inc
jle
add
ficoml
or
clc
cmp
pop
add
mov
or
aas
or
nop
fstps
adc
loope
subb
pop
add
mov
pop
push
sub
movsb
sub
roll
int
pop
or
popa
add
add
ja
hlt
pushf
cwtl
inc
pushf
inc
xchg
sbb
push
cmp
jns
loope
push
iret
xor
add
repz
jecxz
imul
or
popa
je
ret
add
je
or
movsl
jno
cmp
cmp
jb
jbe
and
push
add
and
into
jbe
jl
cwtl
jno
je
mov
sahf
mov
and
je
ds
orl
ljmp
and
jbe
jo
addb
jne
jne
jne
jne
jne
push
test
jne
jne
jne
or
mov
sbb
jne
jl
add
outsb
jae
jae
jae
jae
jae
mov
push
je
sbb
es
je
xor
test
je
xor
sbb
add
out
out
pusha
testl
mov
lcall
jae
jae
dec
jae
jae
jbe
jbe
clc
jns
mov
js
test
jbe
jbe
inc
push
inc
mov
add
cmp
sub
lods
popa
mov
jb
add
sbb
and
xchg
add
inc
inc
cmp
add
sub
or
stc
scas
add
add
add
jbe
insb
xor
dec
xorb
outsl
or
mov
arpl
cld
xor
push
movsb
test
xchg
das
xor
dec
bound
fs
inc
repnz
enter
outsl
jb
add
add
sub
sub
popa
cmp
dec
mov
jo
in
lret
mov
mov
adc
enter
xor
fsubs
daa
xchg
xchg
popa
fiaddl
mov
and
add
add
add
jb
cmp
jg
mov
inc
leave
fs
jb
push
xchg
jmp
cmp
outsl
pusha
adc
fsts
ja
pop
jbe
jne
fnstcw
hlt
and
cmp
lock
xor
add
inc
inc
add
add
sbb
clc
dec
bound
arpl
add
cwtl
sub
inc
insb
push
add
in
dec
aaa
sub
mov
int3
xchg
add
inc
outsl
mov
pushf
bound
xchg
sub
or
inc
xchg
pop
pop
shlb
divl
int3
and
add
sbb
inc
inc
dec
xor
lock
lods
dec
mov
callw
aaa
or
inc
mov
add
or
add
out
or
into
sbb
jp
lret
push
test
push
imul
pop
xor
xor
addl
insb
or
inc
pop
xor
jo
push
pop
fs
xchg
mov
add
sbb
add
ljmp
push
push
outsl
dec
jne
sbb
inc
fiadds
fisttpll
add
add
gs
xchg
in
pushf
jbe
mov
outsb
fildll
mov
loope
inc
int
int
sarl
add
jo
mov
add
sub
xor
xor
jecxz
flds
pop
add
xchg
test
pop
or
les
dec
fbld
int3
and
add
mov
jne
pusha
nop
push
pusha
mov
stos
sub
add
mov
xor
xorl
push
fsubs
add
fs
or
popl
loopne
add
loope
lret
add
add
sub
daa
mov
mov
mov
roll
ja
sti
add
je
push
xor
cmp
xor
mov
jo
dec
pop
xor
ja,pt
leave
xchg
jo
or
adc
dec
inc
sbb
add
add
sub
pop
mov
mov
cmp
loope
enter
int
mov
pop
subb
mov
stos
and
xchg
jbe
dec
or
shlb
mov
nop
cmp
flds
add
cs
addr16
and
pop
push
dec
inc
sub
add
add
jae
outsl
shlb
daa
into
xlat
cmp
pop
add
add
sbb
and
add
add
cmc
fisubl
pop
mov
inc
push
cld
add
mov
xor
andl
daa
js
add
test
or
push
add
jns
mov
sub
adc
cwtl
mov
xchg
les
mov
mov
xor
fstps
divl
or
inc
and
add
jo
aas
xor
clc
or
jns
or
sub
aad
arpl
add
add
inc
push
sub
adc
adc
or
sbb
mov
add
outsb
or
push
into
sbb
das
sbb
iret
push
xor
icebp
mov
add
xor
sub
sbb
pop
jge
jbe
pop
leave
jne
inc
add
pop
xor
or
lret
scas
or
adc
cmc
inc
add
addl
add
inc
xor
sbb
mov
mov
add
add
push
add
xchg
dec
add
add
dec
lret
dec
adc
xor
cmp
xchg
cmp
ds
jle
push
add
dec
or
cmp
sbb
xor
in
lcall
cld
fistl
add
add
sub
push
mov
or
popl
xor
and
add
add
xor
das
jl
or
mov
in
adc
daa
cmpsl
xchg
sub
xor
adc
or
and
add
pop
mov
push
cs
inc
in
adc
add
add
sbb
int
leave
jae
fisubs
notl
mov
insl
xor
pop
pop
adc
and
scas
sub
xchg
rorl
fcoml
xor
and
sbb
cmp
add
add
add
sbb
wrmsr
stos
sbb
clc
pop
stc
lods
mov
dec
cmp
mov
add
push
add
add
in
add
xchg
jb
mov
sbb
or
adc
sarb
xchg
adc
inc
add
cwtl
subl
add
adc
xchg
lock
or
and
add
xor
js
pop
push
es
or
sbb
add
arpl
push
rcrl
add
add
add
cmpsl
inc
daa
cs
pusha
jnp
cmp
pop
mov
dec
lret
inc
push
test
pop
rorl
add
and
add
xlat
jo
dec
xorl
das
push
shll
cmovo
add
sbb
repnz
pop
jl
xor
repnz
xchg
fldl
xor
ret
outsb
push
push
lds
daa
xor
mov
scas
insb
inc
mov
dec
popf
push
out
rol
adc
repz
xor
cld
cld
pop
push
push
pop
jl
push
fidivs
cld
sub
sarl
cmp
jl
js
or
cmp
rolb
insb
adc
rcll
mov
jns
and
push
jae
sub
mov
inc
bound
pushf
mov
movsl
scas
dec
gs
dec
minps
daa
jle
adc
lea
imul
inc
adc
pushl
xor
mov
popa
jno
add
jo
arpl
mov
jo
sbb
je
pop
inc
es
lods
xor
in
ret
loopne
sbb
and
add
lea
movsb
mov
call
lock
sub
addl
pop
pop
xor
inc
xor
mov
lea
add
call
sub
lea
add
mov
call
pop
pop
rclb
sub
jae
and
add
shr
mov
call
jne
pop
cmpsb
sub
inc
add
arpl
pop
push
pusha
cmp
movsb
pop
daa
add
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
loopne
add
add
inc
call
call
out
jb
ret
sub
sbb
ret
add
pusha
sub
adc
test
add
sbb
inc
fs
ret
jns
icebp
cmp
sbb
add
or
cwtl
jno
sub
shl
mov
jbe
add
mov
mov
outsl
fmuls
fsubrp
xchg
add
inc
cmp
out
cmpsb
xlat
push
outsb
xor
add
add
ret
xorb
cmp
push
pop
jl
dec
pop
pop
mull
add
ret
pop
push
push
push
call
mov
in
mov
add
add
add
cld
mov
mov
mov
add
sbb
add
add
or
stos
pop
cwtl
nop
cmpl
je
mov
push
add
inc
test
je
mov
mov
add
sbb
das
add
ret
or
add
push
push
call
xchg
nop
mov
mov
add
add
inc
push
push
add
xchg
aaa
mov
or
call
add
fadds
xchg
sub
xor
inc
push
or
cltd
stos
add
push
xor
leave
shrb
fmuls
push
inc
push
inc
loopne
in
mov
pop
lea
jne
jmp
test
shll
push
push
and
or
test
add
out
adc
pop
nop
jmp
sbb
enter
add
add
sub
inc
int3
push
push
dec
ficoml
test
dec
push
jmp
popa
sub
or
sahf
mov
inc
or
dec
icebp
add
add
add
mov
add
pop
push
inc
add
add
aaa
xchg
cwtl
sub
fs
sbb
cmpl
inc
or
pop
pop
pop
aad
andl
cld
jl
push
sub
addl
test
push
add
push
incl
pop
add
xchg
mov
popa
add
push
add
jle
add
mov
pusha
xchg
add
mov
add
jne
push
adc
sbb
add
add
jmp
add
pop
pop
adc
jne
leave
add
les
pusha
xor
inc
pop
or
sbb
xchg
pop
mov
push
loope
push
add
mov
sub
add
mov
add
lods
add
sub
je
mov
in
jo
inc
pop
lods
addw
add
add
mov
sub
add
mov
subl
psubq
call
jg
add
add
add
scas
adc
dec
pop
scas
sahf
loope
add
add
xor
or
ss
add
or
push
inc
dec
pop
hlt
nop
jge
add
add
mov
pop
mov
call
jmp
dec
cmp
or
push
out
mov
push
jmp
mov
loopne
or
add
mov
adc
out
inc
test
shlb
outsl
pop
adc
xchg
clc
cmp
jge
mov
mov
add
sub
push
add
add
or
je
dec
mov
jne
cmpsb
sbb
cmp
jne
or
rclb
les
add
shlb
add
or
xchg
xor
add
add
je
notl
sub
sbb
jmp
adc
jmp
push
add
jl
or
sub
pushw
xchg
add
andb
sbb
xchg
xor
push
xchg
fwait
push
xchg
lcall
andl
add
repnz
or
mov
cmpsb
inc
aaa
lds
sub
jnp
dec
or
add
sar
rep
add
sbb
push
mov
or
shrl
cmpb
add
sbb
loope
daa
mov
jecxz
or
je
hlt
xor
add
sbb
push
push
adc
mov
add
jge
xchg
fsubrs
enter
imul
scas
nop
lret
mov
push
out
dec
hlt
mov
add
mov
mov
add
call
icebp
rolb
inc
je
inc
popf
rolb
add
add
add
popl
call
mov
cli
cmp
jne
fiaddl
stc
mov
cmpb
pavgw
movl
or
arpl
xor
pop
xchg
out
sahf
or
pop
fisttpll
inc
nop
rclb
in
ljmp
lret
cmp
popa
add
push
iret
sbb
or
inc
lods
loope
out
push
add
je
fnstcw
daa
add
sub
call
sbbb
dec
gs
lds
mov
add
sbb
add
jbe
sbb
mov
sbb
scas
testb
xchg
out
clc
daa
fwait
leave
add
dec
inc
pop
mov
jno
pop
mov
add
testb
ss
adc
lea
movsb
add
add
test
mov
mov
mov
loope
dec
cmpsb
inc
jl
inc
push
xor
test
es
add
add
push
stos
dec
mov
cmp
push
inc
xchg
popa
pop
or
inc
loope
push
and
pop
loopne
xchg
or
add
add
mov
fisubs
faddl
lods
fwait
dec
jmp
sub
movsb
rorl
add
loopne
pop
into
and
or
cmp
lods
movsb
or
add
cmp
insb
add
push
and
push
clc
inc
cmp
sub
add
jl
sbb
shr
or
or
add
xorb
add
cmp
mov
test
sub
mov
fadd
sub
pop
add
sahf
dec
ja
cmp
gs
lret
into
add
add
cmpsl
or
out
inc
popf
xor
adc
je
or
icebp
push
lea
add
jb
fs
pop
lock
scas
cld
dec
inc
call
sbb
popa
and
lock
movsb
outsl
jb
add
fsubrs
shlb
add
and
inc
mov
arpl
jne
push
sbb
jb
jae
cs
jne
and
inc
mov
mov
imul
inc
sbb
stos
add
popa
xchg
mov
push
xlat
test
and
addb
mov
mov
addr16
push
add
movsl
aas
into
push
js
add
push
add
imul
or
and
out
push
xchg
xchg
dec
adc
push
add
dec
jo
outsb
enter
inc
bound
and
outsl
insb
or
add
jmp
fsts
jbe
iret
popa
sub
add
stos
hlt
jb
fcompl
shr
leave
jns
jp
mov
dec
fs
movsl
sbb
scas
cmp
cmp
mov
in
lock
lock
pushf
adcl
icebp
movsb
call
push
das
add
or
cmpsb
pushf
js
subl
pop
mov
testb
jnp
cmp
pop
mov
jnp
iret
ljmp
lret
jns
mov
nop
popa
add
inc
movsb
and
push
insb
adc
sub
mov
pop
sbbb
mov
adc
pop
push
ret
movb
add
add
mov
fs
push
and
pop
add
add
push
push
push
lea
push
sbb
insb
xor
push
cmpb
js
pop
pop
sub
inc
and
and
or
mov
lea
dec
inc
push
call
pop
pop
in
imul
mov
pop
or
mov
test
adc
in
sahf
dec
adc
jmp
sbb
push
fs
push
inc
pop
pop
sbb
dec
pop
pop
pop
jmp
add
mov
pusha
xchg
xor
cmp
cmp
add
add
pop
add
sbbb
add
add
add
jne
add
xor
add
add
add
add
add
dec
add
add
addb
add
add
push
add
inc
add
add
add
loopne
add
lock
add
add
add
add
add
add
ljmp
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
loopne
enter
mov
add
jmp
icebp
pop
sbb
push
add
jne
mov
push
add
or
add
pop
add
je
and
jl
sub
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
mov
mov
inc
xchg
jo
jns
jo
jo
add
iret
loope
loope
add
popa
add
lcall
in
xchg
push
dec
add
xchg
dec
cmp
testl
ficoml
jno
pusha
xor
push
pop
add
push
iret
outsl
adc
das
inc
out
test
add
sub
push
push
push
call
pop
sub
inc
add
push
mov
add
cld
mov
mov
push
add
mov
add
lea
xor
add
nop
cmpl
je
mov
test
je
mov
das
mov
add
daa
js
or
add
lcall
lcall
push
call
leave
nop
mov
mov
jb
inc
push
ret
aaa
mov
mov
testb
int3
add
out
xor
outsl
inc
sub
dec
sub
mov
add
xor
leave
je
and
or
push
pop
fs
loopne
mov
cltd
insb
test
in
jmp
test
loope
or
pop
nop
jmp
pop
and
cs
sbb
sub
enter
int3
push
xchg
ljmp
stos
cmp
dec
dec
push
sub
inc
jmp
mov
mov
mov
add
movb
add
mov
nop
and
lea
dec
pop
repnz
sub
aaa
push
mov
xorl
add
pop
ret
push
mov
add
push
sub
aad
sub
jl
mov
call
mov
add
jle
add
popa
roll
sti
xor
add
je
push
mov
add
addb
jne
xor
jmp
adc
add
jne
cmp
les
in
mov
push
inc
or
mov
stc
and
push
or
pop
add
mov
jmp
jge
insl
hlt
or
ja
int
pop
push
lret
shll
pop
push
cmp
or
push
jmp
push
add
inc
adc
jne
test
clc
push
aam
mov
pop
add
add
adc
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
cmpsb
add
push
ret
shr
rol
xchg
mov
add
cmp
xchg
adc
xor
push
je
notl
and
sbb
jmp
add
jmp
push
add
in
add
jbe
push
push
rcrl
pop
sbb
xchg
xor
push
adc
and
mov
enter
test
inc
je
cwtl
push
fstl
jae
dec
xchg
out
imul
rep
mov
xor
and
jnp
cmpsl
inc
adc
je
mov
shrl
xor
stos
pop
cmp
mov
push
dec
ret
jne
ss
push
mov
inc
add
xor
push
push
push
adc
enter
mov
jge
or
cwtl
mov
enter
rcrb
jg
mov
pop
and
inc
dec
hlt
push
jae
sub
adc
mov
ret
in
icebp
rolb
mov
inc
je
inc
popf
rolb
add
popl
call
mov
cli
cmp
jne
fiaddl
stc
jmp
mov
add
shlb
shl
sub
sbb
pop
mov
or
fsubr
jle
jg
lcall
ret
pop
sub
xchg
sarl
xchg
and
add
inc
xchg
or
dec
rorl
mov
incl
push
push
push
insl
sub
and
pop
lcall
je
adc
lds
pop
add
jae
bound
loopne
loopne
sbb
mov
scas
daa
fwait
leave
add
inc
inc
mov
dec
clc
call
xchg
je
or
pop
mov
dec
sbb
cs
push
add
mov
div
loope
dec
cmpsb
inc
jl
inc
push
xor
test
es
push
stos
dec
mov
cmp
push
inc
xchg
popa
pop
or
inc
loope
push
and
pop
loopne
xchg
or
mov
fisubs
faddl
lods
fwait
dec
jmp
sub
movsb
rorl
lea
into
and
or
cmp
lods
movsb
or
add
cmp
push
and
inc
cmp
adc
jl
sbb
shr
or
or
lea
push
inc
cmp
mov
test
sub
mov
fadd
sub
dec
ja
jnp
mov
lret
and
mov
or
ds
jmp
lea
add
in
leave
xor
pop
loopne
and
insb
rcl
add
imul
and
jb
jb
arpl
add
je
add
and
test
gs
and
add
and
je
bound
adc
push
mov
dec
sub
or
popa
insb
ret
jns,pn
sub
push
scas
push
mov
add
jne
xor
add
jae
popa
addr16
outsl
js
jle
or
je
sub
outsb
gs
cmp
sbb
inc
js
je
cwtl
iret
aaa
mov
jne
add
fs
add
outsb
inc
lds
inc
pop
outsl
insb
sbb
fbstp
jne
shr
jl
mov
jbe
sahf
ret
push
lcall
mov
mov
jmp
xchg
mov
jp
sbb
enter
cli
pop
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
and
add
mov
add
add
xlat
add
js
add
jl
add
add
inc
add
add
je
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
