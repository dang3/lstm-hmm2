daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jmp
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jge
in
testb
sar
inc
jnp
mov
rcll
je
notl
pushl
dec
adc
adc
adc
insb
pop
loope
sbb
jge
mov
push
lods
push
in
fildll
jbe
movb
jne
repz
sbb
sbb
xor
je
imul
add
mov
mov
aaa
idivl
inc
push
sub
movb
rep
stos
stos
push
adc
push
rorl
and
loop
leave
ret
cmp
or
mov
ret
mov
sbb
or
pusha
sbb
push
insb
decl
pop
cld
repnz
mov
or
shl
add
cld
outsl
out
rolb
adc
repnz
not
sub
lea
mov
mov
push
jmp
push
and
cmpsb
xlat
std
mov
rep
mov
xchg
and
or
jecxz
flds
push
push
add
in
push
and
add
enter
sub
fwait
lds
xlat
cmpsb
movsb
rclb
or
xchg
xchg
mov
mov
rcll
push
mov
dec
xor
data16
push
cmp
inc
push
jns
lea
pop
jl
adc
inc
fmul
bound
push
stos
lret
adc
and
adc
cwtl
mov
les
pop
adc
lds
fnstenv
lock
jp
xchg
inc
push
sbb
aaa
pusha
sub
jne
dec
jbe
pusha
cmp
mov
imul
pusha
pop
jae,pt
imul
andl
pop
xchg
adc
pop
je
je
add
adc
cmp
push
inc
nop
jmp
inc
add
inc
js
mov
jp
dec
cmpb
jne
adc
adc
xchg
ret
mov
icebp
scas
pop
mov
push
push
std
or
out
and
push
mov
adc
mov
push
inc
jb
ss
mov
aaa
mov
ds
sti
push
je
add
filds
addb
cmp
test
jne
mov
adc
je
pop
ret
in
or
stos
push
lret
or
mov
dec
insb
rorb
add
xor
jne
test
adc
adc
lea
adc
int3
loop
pusha
fwait
loope
push
and
insb
hlt
les
std
enter
or
push
xor
rcll
arpl
mov
jecxz
sbb
cld
jecxz
mov
lret
mov
sahf
jbe
cmp
xchg
pushf
and
nop
fisubs
popf
or
mov
rcll
cli
sub
or
xor
jo
push
mov
push
push
sbb
xor
enter
inc
inc
cmp
stos
ret
xor
sub
pop
push
jmp
lock
sbb
sub
xor
xor
add
pop
push
mov
cmp
push
adc
out
fnstenv
xor
sbb
mov
gs
xor
bound
dec
cmp
imul
adc
pop
mov
loope
pop
xorb
dec
inc
clc
push
pop
cmpsb
push
sbb
adc
cmp
enter
pusha
mov
test
jmp
movsl
mov
add
loope
fs
mov
rcrl
mov
mov
push
mov
cmpb
mov
mov
pop
add
dec
cs
lea
pop
or
iret
dec
orb
push
idivb
jno
stos
nop
les
or
aad
sub
push
cmpb
jg
xor
ret
dec
bound
repnz
or
or
mov
or
sbb
push
push
dec
fwait
add
dec
pop
push
dec
or
or
push
mov
shll
cmp
inc
jnp
xlat
adc
cmp
push
push
rcll
and
push
add
test
cmpl
pusha
add
pop
pop
shll
fwait
push
or
push
or
adc
sti
xchg
adc
cmp
mov
pop
mov
insb
ret
mulb
adc
ss
insb
mov
mov
dec
cld
xor
push
mov
out
int
or
or
hlt
xor
push
push
jns
cmp
push
or
or
mov
in
push
fs
pop
push
push
xchg
mov
mov
pop
add
push
mov
add
dec
jns
add
pop
stos
mov
xlat
push
cmp
add
outsl
enter
jne
lahf
add
loope
loopne
mov
call
dec
mov
mov
outsb
add
mov
movsb
adc
jle
out
inc
cmc
push
push
inc
mov
xchg
fdivrl
jecxz
lret
loopne
xchg
xor
leave
lea
lods
arpl
ja
mov
inc
sti
les
test
sub
fldt
xchg
insb
mov
shrl
pushf
sti
pusha
js
adc
mov
nop
mov
movsb
add
adc
fst
or
loopne
jmp
icebp
adc
mov
push
outsb
jl
sbbl
sbb
cmp
pop
shr
push
rorb
fistpll
mov
jge
push
shl
gs
data16
rorl
mov
pop
jmp
mov
push
jne
push
and
in
popa
leave
shlb
pop
push
adc
dec
and
imul
test
mov
inc
inc
push
and
fiadds
mov
add
pop
ja
inc
cmp
lcall
and
mov
xor
loop
sub
sub
popa
rclb
pop
js
rclb
sbb
sbb
push
mov
push
or
jo
mov
adc
movsb
xor
dec
xor
xor
dec
push
fwait
movsb
or
adc
ficompl
cwtl
sbb
and
sbb
mov
mov
sbb
jnp
repz
pop
outsb
and
cmp
sbb
flds
cmp
outsb
jmp
xor
inc
pushf
mov
or
mov
sub
js
or
andl
aad
push
and
push
movsb
add
add
xlat
push
push
inc
aaa
adcl
mov
je
add
sahf
or
repz
add
dec
sbb
push
jl,pn
mov
lret
in
es
add
push
cld
ds
xor
mov
pusha
insb
push
push
nop
js
lret
or
dec
cmpb
xchg
nop
movsl
data16
addl
adc
movsb
fldcw
add
pushf
or
dec
xlat
jne
xor
or
sub
adc
out
adc
pop
xor
neg
je
aaa
sbb
mov
mov
scas
push
sbb
push
data16
mov
mov
lea
sti
ret
push
ret
xchg
sub
cmovbe
jb
xor
push
mov
inc
ret
and
mov
loope
and
push
clc
adc
adcb
jl
pop
rolb
jo
or
nop
inc
scas
or
sub
or
xchg
lea
jl
mov
loop
test
inc
add
lock
push
push
adc
cmp
inc
pusha
test
or
pop
xchg
adc
inc
mov
lahf
nop
test
cmp
insb
pop
inc
inc
mov
inc
data16
enter
cwtl
outsb
add
jo
ret
mov
add
in
jle
xor
leave
sbb
jge
pop
pushw
nop
dec
dec
push
dec
xor
insb
sbb
arpl
xor
or
jl
pusha
push
movl
cmp
sbb
pop
adc
fwait
pop
mov
adc
or
jmp
or
mov
and
mov
gs
xchg
lcall
cmp
dec
push
or
les
addl
pop
xor
mov
scas
mov
jge
mov
sbb
push
movsl
out
pop
or
imul
or
in
fists
pushf
or
and
push
mov
and
pop
sub
push
and
ss
loop
pop
js
test
js
sub
and
gs
pop
fdivp
pop
adc
inc
clc
lods
mov
popa
adc
movsb
pusha
jbe
adc
dec
add
adc
rcrl
inc
adc
add
mov
shrl
jo
lods
cwtl
mov
mov
push
and
adc
and
push
jp
leave
je
test
mov
pop
cmp
push
jo
and
fsubrp
clc
pusha
add
mov
mov
je
push
sbb
jne
lret
jae
insb
insb
lds
jle
jg
cmpsb
roll
inc
je
popl
push
push
push
cmpl
mov
sub
insb
neg
test
outsb
sbb
push
sub
xchg
or
push
fdiv
clc
dec
or
loope
add
mov
adc
jle
adc
shrl
inc
cltd
sub
lods
push
sti
jbe
sar
out
sbb
imul
cltd
lods
sbb
push
xor
jnp
imul
cmc
test
into
fs
icebp
or
or
inc
pusha
ret
pandn
arpl
pop
out
add
mov
rolb
aaa
nop
rcll
add
mov
and
pop
pop
in
les
shl
jo
in
mov
or
push
mov
dec
lret
mov
insb
call
xor
inc
inc
or
addl
adc
int3
stos
mov
das
mov
int3
in
enter
xor
add
lock
inc
sbb
adc
jl
shlb
test
add
mov
or
xchg
jl
inc
leave
xor
xchg
push
and
test
push
loopne
adc
in
into
push
push
add
cmp
xchg
addr16
inc
loopne
mov
lock
sbb
lock
xchg
add
loopne
aam
pop
mov
mov
or
add
push
add
xor
xor
out
xchg
cmp
inc
je
sahf
js
xchg
mov
push
iret
dec
fs
sbb
pop
xchg
add
or
jb
clc
shrl
jp
and
pop
sbb
shrb
pop
jns
les
add
jbe,pn
lcall
fs
and
add
jg
push
lds
push
out
pushf
insb
sub
cmp
lahf
and
xchg
xor
push
stc
arpl
popa
mov
inc
sub
xchg
ret
fisubrl
sub
and
aas
pop
inc
shrl
push
imull
cld
adc
jne
adc
mov
mov
out
js
jge
add
repz
xor
insb
xor
xchg
cli
sbb
rol
add
add
sub
push
popa
pop
leave
invd
fs
adc
and
push
mov
sar
sub
xchg
aam
adc
or
and
add
or
popl
jno
sub
hlt
sbb
push
dec
test
cmp
push
push
int
push
sbb
ret
add
movsb
fs
push
add
int
pusha
cmpl
sub
subb
lock
push
lock
sbb
mov
out
aad
adc
call
add
in
loope
jg
add
xor
jae
daa
jne
add
je
pop
sub
lcall
sub
mov
cmp
jb
sbb
add
insb
pop
mov
mov
test
jg
arpl
push
or
addr16
mov
ret
jg
mov
adc
adc
mov
hlt
inc
push
sbb
mov
sbb
sbb
mov
mov
dec
pop
mov
push
add
inc
and
and
push
ret
lock
cmp
fiaddl
movsb
xlat
cwtl
inc
mov
lock
fadds
inc
inc
aam
int3
enter
inc
les
sarb
mov
test
inc
inc
inc
movsb
mov
inc
inc
xchg
nop
mov
test
inc
inc
je
insb
push
fs
pop
push
inc
inc
inc
inc
push
dec
dec
inc
inc
inc
inc
inc
inc
cmp
xor
inc
inc
inc
xor
and
inc
inc
inc
and
adc
inc
inc
inc
adc
add
ds
inc
add
inc
les
inc
iret
out
stc
mov
inc
xchg
inc
cwtl
inc
pushf
and
and
mov
and
and
sahf
and
shl
enter
inc
inc
aam
fsub
mov
lock
mov
clc
bound
sarl
jne
das
cld
int3
inc
les
push
xor
aad
cmp
cli
nop
sbb
ja
add
ret
push
xor
add
or
cmp
inc
dec
push
push
rclb
aaa
push
add
fisttpl
clc
inc
orl
push
insb
adc
inc
leave
mov
pop
pop
or
or
add
iret
sub
or
rcr
fmul
or
or
dec
out
iret
cmp
push
push
inc
mov
dec
in
inc
xchg
lea
or
push
add
cmpsb
xchg
mov
xor
divl
in
in
and
adc
mov
cmpb
in
out
jne
inc
or
add
or
fdivs
aam
dec
movsb
int3
inc
jns
pop
pop
testb
mov
jmp
sub
jbe
xor
cmc
push
pop
xor
and
jg
imulb
xchg
cwtl
xor
imul
or
test
pop
mov
or
add
adc
mov
add
fs
mov
inc
hlt
xor
inc
lahf
mov
addl
add
repnz
mov
mov
and
push
push
and
pop
push
mov
or
icebp
cld
jbe
mov
dec
jno
inc
lea
out
push
ret
mov
into
int3
add
lds
mov
loop
loopne
xchg
mov
xchg
ret
into
pop
xor
pop
add
enter
pop
push
out
dec
fmulp
mov
imul
mov
inc
push
mov
lcall
dec
dec
shll
pop
jo
dec
shll
xchg
mov
dec
rcr
into
add
add
adc
pop
or
or
sbb
jb
insb
pop
movsl
leave
adc
mov
xor
jb
popf
or
das
add
and
mov
jp
nop
xor
int
pop
outsb
adc
add
add
das
dec
jne
xlat
jne
repz
sub
pop
sub
fdivl
xlat
adc
aaa
inc
out
arpl
movhps
shlb
xchg
pop
sbb
mov
daa
push
addl
sub
scas
jmp
dec
inc
push
adc
jmp
dec
pop
or
icebp
testl
scas
mov
pop
mov
jmp
jno
mov
pop
push
push
jmp
scas
jmp
mov
movsl
addr16
xlat
xor
adc
inc
or
xchg
pop
push
scas
arpl
sar
or
scas
jmp
out
mov
inc
aas
dec
mov
dec
dec
add
fnstenvs
dec
fmul
cmpsb
imul
shll
mov
imul
shll
add
add
sbb
scas
pop
ss
loopne
or
mov
mov
inc
push
add
sahf
in
push
cwtl
fstl
add
inc
loope
in
into
add
xchg
xor
mov
sbb
add
adc
dec
shrl
and
pop
push
push
dec
jne
xlat
xor
sub
cmp
xor
xor
xlat
add
and
adc
shll
cld
jnp
xor
shll
ljmp
rcl
int3
mov
pop
shll
pushf
mov
mov
pop
divb
cwtl
adc
adc
and
in
add
es
scas
nop
or
es
xor
repnz
shlb
inc
xor
fldl
cmp
xor
dec
shll
sub
sbb
shll
add
pop
clc
int
xor
stos
daa
paddsb
xor
shll
fcmovbe
into
enter
rol
mov
shll
xlat
sbb
nop
mov
fwait
adcb
add
cld
and
add
inc
and
xor
das
loopne
add
xchg
dec
pop
add
sub
cwtl
andl
sbb
test
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
call
xor
xor
fs
popa
ljmp
inc
inc
push
inc
push
or
push
push
xor
dec
and
insb
flds
sbb
push
or
push
iret
in
sbb
push
mov
pop
clc
cld
add
sti
stc
cld
idiv
cld
mov
testl
cld
stc
mov
sbb
lret
push
mov
dec
leave
lcall
dec
bound
push
pop
insb
sbb
imul
sbb
sbb
sbb
decl
push
push
pop
popa
sub
add
sbb
ret
pop
xchg
shlb
xchg
mov
xor
xchg
mov
sub
xchg
ret
adc
or
ss
xchg
ret
xor
xchg
mov
mov
dec
repz
popa
inc
push
push
into
and
sub
int3
jl
mov
mov
fisttpl
inc
incl
clc
dec
xchg
cmc
dec
fdivr
add
scas
cmp
add
push
inc
addr16
out
insb
push
std
or
std
pop
sti
xchg
mov
and
out
jns
or
or
in
in
jl
and
pop
or
add
or
daa
sbb
daa
jo
jne
cmpsb
cmp
daa
push
add
jg
sbb
outsb
pusha
pop
imul
insl
mov
push
cmp
daa
pusha
pop
jno
xor
lret
pop
decl
push
mov
fisttpl
xor
daa
cmp
stc
das
mov
jle
add
call
jg
sahf
clc
cli
cld
idiv
dec
push
cmp
mov
cld
jmp
bound
in
test
add
push
clc
adc
das
mov
gs
mov
inc
fildll
mov
repnz
ljmp
pop
push
mov
dec
pop
movl
mov
mov
fistpl
shlb
dec
pusha
add
add
enter
popa
aaa
out
lcall
in
call
ret
jmp
fstpt
cli
sti
idiv
dec
push
dec
imul
mov
test
cmp
mov
mulb
cli
testb
cmp
xchg
mov
mov
dec
in
dec
push
mov
movsb
imul
push
stc
data16
pop
cltd
cmpsl
rolb
or
mov
pop
mov
fisttpl
shr
popa
pop
fnstsw
jmp
or
or
dec
xchg
or
iret
xchg
sbb
fisttpl
cmp
mov
dec
arpl
gs
in
outsl
clc
or
push
xor
push
not
xchg
addr16
addr16
mov
cmp
xchg
dec
arpl
gs
out
jle
ja
dec
clc
shll
out
inc
std
cmpl
addr16
loope
dec
pop
push
mov
or
es
cmpl
or
add
in
dec
jle
push
outsb
jbe
mov
filds
mov
pop
add
mov
push
cmovns
ret
std
rorb
mov
ret
inc
dec
or
add
mov
inc
mov
sarl
lret
mov
mov
add
stc
in
incb
sub
push
cs
loope
sub
decb
pop
push
pop
mov
cmp
xchg
in
cmpsl
bound
sbb
dec
mov
fdivp
pusha
mov
dec
or
xor
mov
cmc
sub
inc
imul
lds
addr16
int
cwtl
gs
pop
push
test
mov
pop
add
mov
or
idiv
call
push
mov
dec
dec
dec
test
cmpl
mov
notb
push
sti
dec
push
inc
incl
hlt
test
cmpb
gs
fstpt
push
jb
divb
inc
add
inc
or
gs
add
in
daa
cmpb
mov
test
in
in
loope
sub
dec
sub
pop
sub
push
adcl
dec
outsl
jecxz
insl
arpl
jb
push
xchg
test
popf
inc
inc
mov
xchg
lcall
jnp
arpl
out
lret
out
mov
xor
mov
sub
jg
mov
out
adc
lods
push
ret
mov
mov
mov
addb
jp
and
push
jo
mov
popa
rclb
jo
jb
or
and
push
mov
jae
add
loope
sbb
sbb
rorb
dec
daa
or
inc
repz
pop
jge
jle
jne
adc
inc
repz
dec
jne
add
das
cltd
lret
outsl
xor
scas
repz
xor
lock
or
roll
jge
dec
aam
nop
inc
push
iret
mov
sbb
shll
mov
mov
addr16
sarb
or
or
sti
adc
std
add
movsl
mov
mov
and
ffree
incl
addb
xor
xor
push
mov
je
out
in
hlt
push
mov
hlt
clc
sub
pop
fldl
push
cmp
or
jnp
adc
xor
and
fstpt
xchg
pop
add
cld
lret
mov
sbb
jno
gs
popa
add
push
lret
cld
or
push
or
mov
clc
jae
pusha
or
in
sub
in
or
lea
enter
in
push
push
jl
xor
inc
stc
mov
add
arpl
xchg
emms
dec
imul
push
lods
aaa
adc
lock
push
outsl
std
jl
in
sub
add
test
in
sbb
pop
pop
sarl
lcall
sti
stc
jb
imull
movsl
fildl
fisttps
sbb
sti
and
in
and
jmp
and
test
clc
arpl
push
xor
mov
jbe
xor
movsb
fs
insl
sub
inc
or
test
mov
popa
mov
ja
insb
lahf
push
adc
dec
in
xchg
inc
lahf
sub
ja
loope
inc
div
pop
mov
mov
dec
std
rorl
fimuls
xlat
xchg
fidivrs
clc
push
data16
int
popa
in
mov
inc
push
push
mov
inc
push
stc
xor
out
cwtl
in
adc
js
lahf
sub
sbb
lock
jl
and
sbb
or
jg
outsl
pop
jb
add
std
jns
insb
sti
adc
inc
or
icebp
enter
adc
fldl
cmpsb
jmp
mov
dec
test
push
push
pusha
roll
mov
insl
add
xorb
popa
cmp
mov
xchg
and
movsl
and
pop
dec
aad
add
cmp
dec
push
inc
imul
repz
dec
outsb
ss
cmp
inc
lods
mov
jno
sbb
mov
push
jmp
dec
fsubrl
dec
dec
pop
je
sub
imul
arpl
push
std
shrl
loope
jno
push
mov
sti
xor
std
xchg
fwait
add
sub
jne
push
push
ret
andb
sbb
and
icebp
in
jp
and
or
xlat
xor
outsb
aam
mov
hlt
pop
and
jnp
iret
inc
icebp
icebp
jg
in
jg
out
std
dec
sub
mov
stos
outsl
in
sbb
add
lahf
inc
cli
dec
push
loopne
inc
sbb
ja
dec
fistl
xor
or
mov
addl
decl
js
xor
js
cmp
je
jmp
orl
mov
mov
jg
aas
rcll
push
orl
jnp
sti
outsb
cmp
sub
add
jb
cld
mov
add
jmp
std
jb
ds
jmp
lds
add
add
jmp
adc
mov
addb
push
loope,pt
pop
xor
jle
icebp
hlt
push
or
cwtl
pop
test
in
ret
add
loopne
jmp
mov
repz
jecxz
sarb
inc
fs
loope
jl
ret
daa
jg
adc
or
mov
xchg
jecxz
mov
loop
xchg
lock
add
in
nop
xor
jo
mov
mov
fisttpll
or
mov
imul
sbb
ret
loopne
sub
pop
popl
add
hlt
xorb
or
outsb
testl
psubq
imul
pushf
fadd
fwait
push
push
jge
add
xor
icebp
int
outsb
in
xor
xor
adc
xlat
xchg
sbb
int3
adc
in
dec
sbb
add
add
cmp
jae
loope
jmp
arpl
les
jb
arpl
pop
loop
cltd
int
or
dec
rclb
insl
mov
loopne
xchg
sbb
pop
icebp
pop
daa
cmp
loopne
sti
pop
pusha
sbb
dec
sub
push
pop
or
cli
mov
shrl
sub
pop
paddb
sub
mov
or
das
adc
inc
sub
pop
jle
xor
xchg
push
sub
jb
test
insl
fistpll
out
push
xchg
sbb
sbb
mov
daa
push
test
addr16
mov
sti
imul
repnz
add
in
sti
outsl
mov
mov
rcrl
ljmp
call
cli
inc
in
bound
scas
movsl
dec
mov
les
arpl
inc
out
test
ds
cmpb
call
xchg
sbbl
jg
out
cld
push
insl
or
adcb
dec
xchg
filds
call
notw
out
arpl
inc
out
mov
sar
inc
out
cmpb
in
data16
out
out
cmp
icebp
sbb
xlat
adc
mov
outsl
cltd
xchg
xchg
adc
mov
in
xor
jge
jmp
jle
in
imul
cmp
addr16
mov
out
or
insl
dec
loope
ret
cmp
pop
outsb
arpl
xchg
cli
ljmp
fucomi
mov
dec
lock
test
jle
sarb
in
shl
xchg
sbb
mov
add
test
in
sti
arpl
fldcw
imul
hlt
push
push
push
sub
std
pop
xchg
frstpm(287
jbe
mov
push
out
shl
push
in
test
fldt
jns
cli
jmp
outsb
push
fs
adc
aaa
std
rorl
or
in
xchg
lret
jg
mov
pop
cs
fucomi
dec
adc
add
dec
jmp
icebp
dec
std
shrb
repz
hlt
js
aaa
push
jb
repnz
push
addr16
idiv
inc
js
std
icebp
clc
jns
icebp
pop
arpl
lahf
jmp
movsl
imul
out
jg
sbb
xor
jb
pop
add
roll
in
adc
das
push
js
stc
jl
idiv
push
pusha
push
push
mov
mov
dec
roll
scas
push
mov
in
imul
loope
mov
adc
push
xchg
das
dec
ljmp
sub
lds
cmc
cmp
dec
mov
pop
sub
push
imul
pusha
or
test
lods
mov
pop
imul
aas
std
in
add
call
mov
loope
jmp
fistps
pop
pop
popa
addl
jmp
xchg
and
push
dec
arpl
add
xchg
cli
jb
push
test
mov
add
mov
pop
fidivs
sbb
mov
mov
adc
jg
dec
in
loope
pop
mov
aaa
inc
add
push
adc
clc
repnz
call
cmp
test
enter
lods
mov
or
dec
sahf
out
outsl
mov
jmp
add
push
xchg
orl
inc
sbbl
test
jecxz
test
sub
and
test
mov
dec
mov
lock
sbbb
xchg
adc
mov
icebp
dec
nop
arpl
cmpb
sub
and
add
jmp
cmp
sti
pop
test
adc
les
xchg
ret
lds
pop
test
shlb
lds
mov
and
addr16
in
xchg
push
push
fwait
sub
mov
sub
and
lods
sbb
lea
pop
loopne
jle
dec
sub
mov
std
jg
stc
lret
call
outsb
jmp
outsl
mov
dec
add
repnz
addl
ret
jno
std
xor
add
das
dec
cmp
jns
mov
xor
stc
mov
jnp
inc
jg
aad
shlb
push
ret
addr16
int
mov
pop
test
xchg
vmovntdq
leave
call
cmp
jno
dec
lahf
lods
mov
int
lahf
xchg
inc
add
into
stc
ret
fwait
jl
add
in
push
mov
pop
pop
mov
subl
loopne
out
and
add
jecxz
push
push
inc
incl
dec
aad
jmp
lods
add
orl
iret
imul
clc
and
adc
jmp
jb
ds
or
mov
int
movb
sti
sbbb
dec
or
mov
jno
ret
or
negl
pop
mov
out
popa
pop
cld
les
icebp
add
jg
pop
push
pop
mov
add
icebp
fildll
adc
jp
dec
push
insb
pop
dec
cmp
stc
outsl
jo
ret
cmovge
jae
cmpl
mov
mov
vunpckhps
decb
into
cld
add
aad
lods
pop
mov
or
cli
lds
dec
or
adc
add
pop
cld
outsl
icebp
xchg
push
adc
jl
sti
mov
mov
jp
int
pushl
inc
inc
std
dec
push
push
pusha
jno
pop
mov
or
inc
and
addb
sbb
test
scas
push
mov
sbb
rcr
lcall
push
push
dec
xlat
imul
mov
xchg
insl
clc
dec
inc
and
jl
or
mov
xor
push
imull
mov
mov
aad
sub
divb
aaa
cmc
inc
or
sbb
and
aad
aad
in
cs
mov
and
rolb
adc
mov
or
mov
dec
mov
add
mov
rclb
or
cmp
movsb
sti
jg
cmp
jae
adc
ss
add
aad
mov
adc
stc
mov
cmp
dec
mov
and
push
clc
xor
push
mov
pushf
ss
mov
cli
fbld
inc
insl
and
dec
clc
xor
das
push
pop
pop
cld
pop
add
pop
push
inc
jge
mov
ret
incb
pop
lock
mov
dec
or
mov
pop
push
out
xor
mov
sbbl
mov
cmc
push
sub
jnp
push
cmp
or
add
int
fisubl
int3
sti
sti
push
xchg
dec
lahf
fisttps
or
sti
jb
push
in
pop
sub
mov
pusha
divl
xor
popf
mov
push
decl
sarl
dec
in
jp
cmc
add
std
test
shrl
lahf
icebp
jo
ljmp
mov
dec
icebp
pop
add
loopne
or
ss
add
adc
adc
jg
lds
lret
incl
sub
mov
mov
insl
jae
or
jns
cs
out
outsl
cli
jbe
bnd
jecxz
cmp
push
pop
mov
push
pop
cli
jg
push
mov
daa
scas
std
mov
add
cmp
dec
or
push
add
mov
or
jge,pn
loop
test
jae
loopne
test
xor
cmpsb
inc
imul
es
dec
icebp
pop
mov
adc
dec
cmc
jmp
lods
orl
inc
sti
insl
sub
and
fwait
push
shlb
lea
add
ret
pop
mov
test
out
pop
test
fadd
xchg
push
or
adc
jns
lods
xchg
add
mov
in
incl
add
pop
cmc
cld
sbb
mov
push
mov
jmp
stos
fists
add
jne
addb
add
jmp
imul
hlt
cmp
insb
pop
mov
xor
xor
arpl
icebp
mov
insl
fisttpl
or
or
push
mov
push
jp
inc
cld
lds
dec
cld
aaa
daa
test
sbb
inc
push
jno
pop
pop
add
and
add
or
icebp
test
add
fnstenv
addb
aam
rcl
jmp
mov
pop
mov
shrb
test
cmpb
incb
add
lret
outsl
add
fildl
lods
std
or
inc
add
add
incl
insb
cli
xorl
imul
cmp
fucomip
or
push
dec
mov
inc
add
mov
js
xor
cltd
xor
xchg
test
insb
or
xor
adc
pop
aaa
lds
test
cmp
lret
mov
bound
cmp
mov
sti
adc
outsl
fistpll
insl
popa
scas
cmpb
add
incb
test
mov
test
mov
sub
jg
fisttpl
and
cmpb
push
in
xchg
cmp
jb
xor
in
sarb
add
xor
mov
add
lods
insl
or
xor
cmp
not
add
subb
in
xchg
dec
insb
push
aad
in
add
push
push
js
xor
call
cs
cli
fisttps
push
in
xor
mov
stos
xor
mov
lods
sti
fists
or
or
and
aad
repz
pop
arpl
dec
jae
jb
push
fcomi
sbb
xor
or
xchg
rolb
jle
test
mov
sbbl
repnz
add
pop
outsl
sbb
or
mov
sti
cmp
jl
aaa
xchg
mov
adc
xor
jb
or
std
andb
pop
sbbl
xchg
les
jp
mov
popf
aas
push
cmp
xchg
clc
ret
inc
xchg
or
push
clc
outsl
push
ja
jb
xorb
sbbb
jbe
xchg
popf
push
mov
loope
outsl
lock
push
outsb
jno
mov
inc
jl
sbb
rcrl
std
out
test
add
mov
decb
sbb
xor
in
mov
xor
inc
sbb
mov
mov
mov
fcmovnb
xchg
loope
cld
pop
iret
loop
test
mov
pop
dec
xchg
lret
jo
xchg
in
lret
cmp
dec
inc
sbb
inc
adc
ret
sbb
xchg
bound
sbb
push
mov
jecxz
in
je
mov
jecxz
mov
or
jl
pop
xchg
clc
adc
jns
pop
xlat
mov
xchg
or
xor
mov
imulb
dec
xchg
in
test
pop
in
in
ss
outsl
push
sbb
add
mov
dec
dec
or
cmc
addr16
out
arpl
ss
das
mov
inc
testb
js
dec
xchg
xchg
popf
aaa
sbb
sbb
push
imul
scas
test
sahf
mov
xchg
or
add
xchg
pop
out
loop
mov
nop
jo
mov
or
jecxz
sub
bound
in
addl
lcall
mov
ds
flds
cld
lods
cmc
daa
int
shll
in
xor
call
hlt
stc
or
in
mov
pop
xchg
addb
mov
inc
jmp
jo
movsl
pop
xlat
push
add
out
push
popa
sti
inc
or
imul
sub
xor
xor
jne
cmpb
add
jmp
jecxz
aaa
sub
stc
ret
les
aaa
jne
push
jge
std
mov
cmp
std
mov
xor
mov
adc
cltd
mov
dec
sbb
adc
rorb
or
xor
xchg
das
fists
out
imul
cmp
mov
pop
jg
sbb
in
pop
jmp
cld
jno
pop
movsb
cmp
jae
sub
push
fucomip
stc
iret
enter
stos
dec
cwtl
subl
sub
adc
xchg
test
sub
cmp
mov
xor
push
or
in
ja
jo
dec
add
add
mov
sbb
mov
wbinvd
xor
add
or
cmp
out
xchg
xor
jb
cmp
fsubr
insl
mov
inc
inc
arpl
jb
sub
and
outsb
das
insb
imul
add
test
jno
push
sar
dec
sbb
sub
xchg
sub
jmp
fildl
xchg
inc
add
inc
jae
mov
rolb
and
ret
dec
call
push
xchg
divl
sti
or
popa
imul
std
test
loope
orl
mov
pop
jbe
pop
aaa
push
je
ds
ss
xchg
dec
push
jmp
stc
mov
jle
roll
jnp
cld
jb
mov
test
mov
dec
lcall
test
shl
cmp
insl
pop
xchg
lock
sbb
fmull
repnz
mov
xchg
sti
mov
mov
and
sahf
mov
mov
inc
push
sub
fsqrt
lret
lcall
fwait
leave
int
pop
mov
cmpsb
or
sbbl
lock
mov
popa
mov
cmp
test
repnz
jl
or
and
fsubrl
insb
fistl
dec
icebp
stc
adc
or
xor
mov
xor
fs
fdivr
daa
clc
jae
push
dec
data16
testl
push
imul
add
loop
cmpsl
push
jno
adc
std
adc
dec
sbb
pop
pop
pop
jnp
popa
push
push
sub
push
int3
mov
mov
xchg
lock
std
icebp
sbb
lahf
rcl
pop
mov
shlb
lock
cmpsl
fildll
idiv
icebp
sub
add
hlt
jg
push
jl
add
data16
sub
xor
or
cmpl
push
movl
jge
mov
inc
rolb
bound
movsb
ja
shll
jae
subl
pusha
mov
lcall
jp
dec
popf
pop
jne
cmpb
rorl
stos
mov
jp
mov
dec
addb
sti
jg
or
add
icebp
icebp
mov
notb
fiaddl
and
mov
mov
push
fildl
lea
pop
fnsave
pop
pusha
mov
cmp
pop
clc
dec
jnp
and
push
xlat
out
sbb
std
fldcw
sbb
addr16
inc
mov
cmc
sbb
add
push
pop
jg
mov
sti
push
push
gs
jne
ja
sti
pop
mov
pop
cmc
js
cmp
push
dec
call
xor
xor
dec
pop
ret
inc
aad
dec
dec
cmp
incl
jns
arpl
fisubrl
dec
xor
and
dec
dec
dec
lahf
out
into
fprem
subb
cmp
and
adcb
pop
js
rcll
pop
mov
repz
and
insb
inc
mov
xor
rorb
dec
outsl
mov
lds
enter
pop
mov
or
ja
out
xor
mov
add
loopne
test
sub
pop
sti
xchg
add
mov
sbb
xor
push
cld
cmc
sbb
addb
xor
in
insb
out
dec
sbb
decb
push
test
cltd
popf
add
addr16
push
mov
mov
cli
addb
shr
cld
int
fcmovb
cmp
js
mov
adc
dec
out
in
sub
in
fadd
aad
mov
nop
xchg
xchg
jecxz
fistpll
jp
mov
daa
mov
push
popf
xchg
push
in
push
loope
adc
sahf
or
and
shll
pop
mov
insl
loope
jno
mov
out
sub
mov
sub
jmp
add
push
and
sbb
daa
lret
repnz
int3
cmp
out
xor
clc
add
pop
stos
mov
mov
bound
aad
mov
test
mov
imul
dec
pop
sbb
hlt
loope
dec
cmp
jno
inc
das
push
xchg
mov
cmp
push
aaa
clc
imul
xor
push
icebp
jb
mov
sbb
das
lret
xor
pushl
test
lds
pop
lock
sbb
mov
shlb
xorl
jnp
and
pushf
movsb
in
cmp
dec
lahf
ror
mov
arpl
inc
test
out
sub
pop
daa
inc
icebp
stc
sahf
insl
loope
jecxz
cmp
jmp
lock
pusha
jge
sub
cltd
push
pushl
dec
ss
jg
enter
loopne
push
aaa
xorb
out
loope
cs
xor
clc
or
xchg
testb
mov
pop
daa
ja
mov
mov
adc
cmp
aam
mov
inc
aaa
stc
loopew
add
fcmovnu
sbb
cmp
aas
mov
fcomps
ret
push
xchg
mov
and
int
outsb
jl
ljmp
int3
and
enter
clc
pop
pop
add
test
sub
arpl
mov
mov
lcall
arpl
aas
sub
push
sub
push
lcall
addr16
out
pop
cmp
fsubrp
mov
ljmp
cmp
or
pop
lahf
push
mov
mov
lods
out
out
push
test
stos
mov
and
mov
push
mov
mov
xchg
xchg
into
jae
adc
ret
or
xchg
orb
mov
lret
cmp
in
xor
sti
adc
sbb
mov
test
dec
xchg
mov
dec
in
das
outsl
xor
push
adc
shlb
ds
jp
pop
xchg
or
dec
test
mov
add
in
add
mov
mov
dec
fs
mov
outsl
cli
in
pop
test
push
mov
leave
out
add
push
std
dec
in
sub
xchg
mov
jge
pop
xchg
dec
push
loope
dec
sub
xor
push
lds
loopne
loope
sbb
jp
call
fbld
add
das
repnz
jg
fiadds
xchg
cmp
push
pop
jge
add
mov
test
fistpl
dec
dec
stos
cmpsb
add
shll
jge
adc
add
cmpsl
sbb
je
fs
std
xchg
cltd
sbb
testl
xchg
mov
pop
fnsave
fstl
jno
mov
pop
sbb
loope
xchg
xor
jp
mov
push
xor
and
loop
jp
test
cvttps2pi
xor
mov
outsb
and
inc
mov
in
xchg
addb
shl
lods
mov
cltd
mull
mov
ret
outsl
cmp
mov
test
sub
or
mov
add
cmc
hlt
push
test
js
add
sub
push
xchg
outsb
sbb
cmp
insl
xor
out
mov
jo
mov
push
xchg
jecxz
push
jge
mov
pop
xor
push
orl
xor
data16
rcll
mov
push
in
cld
inc
pop
mov
das
add
or
add
pop
dec
mov
test
xchg
cmpsl
jmp
ja
das
cltd
in
std
xor
adc
orl
imul
icebp
xor
imul
outsb
cmp
in
fs
push
sbb
adc
insl
inc
popf
fld
jg
insl
shrb
cmp
dec
aaa
aaa
imul
std
incl
js
cmp
rcrl
test
jl
xchg
jo
or
jno
mov
xchg
and
adc
sub
das
fisttpll
push
mov
push
pop
mov
sub
lahf
roll
pop
mov
fldl
mov
mov
xlat
add
mov
sti
adc
cmpb
mov
pushf
or
xor
jl
jge
jnp
xor
sbb
or
daa
jne
push
or
xor
dec
pop
xchg
push
mov
rorb
sti
ja
xchg
sbb
add
and
pandn
pop
pop
pop
or
data16
or
and
mov
movsl
add
and
pop
sub
jg
push
dec
pop
xlat
xchg
adc
push
lea
adc
sbb
mov
pop
cmp
mov
or
rcr
mov
sub
add
dec
dec
popa
cs
mov
adc
daa
push
insb
loop
roll
lcall
orb
rclb
add
mov
xor
andl
mov
pop
lahf
push
mov
inc
add
sub
xchg
pop
xor
shll
xor
fisttpll
pushf
push
inc
imul
inc
xlat
or
fldenv
cwtl
mov
mov
add
push
xchg
cmp
mov
out
popa
fwait
lahf
push
sub
fbstp
iret
rcll
dec
fs
xor
test
mov
dec
sti
iret
addr16
mov
loopne
js
pop
cli
in
sub
insb
add
or
mov
aad
rcll
fstpt
mov
cmc
cmp
push
in
sub
xor
sbb
iret
in
adc
pushf
sti
stc
push
cmpsl
inc
in
jne
stos
pop
and
out
and
or
out
or
insl
jno
jecxz
mov
rcl
aad
sbb
popa
push
ja
or
insl
xchg
jmp
adc
lcall
test
mov
cmp
jg
frstor
ds
rorb
arpl
out
stos
push
aaa
in
pusha
movsl
mov
inc
push
or
loope
fsubp
sbb
mov
jmp
iret
mov
les
incl
adc
fscale
bound
jle
and
stc
jg
cmpsb
fildl
mov
xchg
pop
add
mov
loope
or
and
and
rcrl
movsl
testb
sarl
call
push
sbb
in
sbb
insb
mov
std
lods
aad
outsb
or
xor
add
dec
push
jecxz
ror
push
jl
out
mov
push
mov
pop
repz
push
cld
ljmp
sbb
cmpsl
cmp
sub
fimuls
and
lahf
jns
cld
mov
add
hlt
ret
or
rol
mov
mov
xchg
mov
and
popf
lods
mov
loop
testb
cmp
lods
jb
frstor
cmc
out
dec
or
or
xchg
in
pop
xadd
lock
stc
dec
add
in
xchg
dec
pop
and
mov
add
sbb
or
aas
add
or
add
addb
push
fildll
inc
rorb
sub
jge
push
pusha
arpl
lret
push
je
jg,pt
mov
sbb
mov
inc
jp
int3
insl
mov
push
pop
pop
mov
fs
mov
popa
cmova
jp
jae
enter
inc
fsubrs
pop
les
repz
scas
cmp
xchg
sub
pusha
mov
subb
mov
xlat
jb
inc
mov
push
int
sbb
mov
xor
jno
ljmp
or
push
inc
xor
std
shll
stc
mov
jp
int3
jb
sub
mov
je
sbbl
rcrl
mov
in
in
or
push
fdivr
push
push
mov
stc
jmp
xchg
jne
sbb
clc
fsubs
adc
into
sbb
pop
mov
out
add
jle
icebp
inc
mov
pushf
out
dec
divl
or
dec
jb
in
test
and
lods
nop
movl
or
test
orl
jecxz
daa
in
mov
or
mov
call
ja
mov
and
xchg
insl
loopne
test
in
mov
cmc
out
xchg
dec
ljmp
fmuls
jno
mov
sub
lds
cmp
pop
test
sub
pop
loop
xor
inc
stos
cs
mov
mov
adc
inc
out
and
dec
aam
mov
sbb
outsl
shlb
hlt
sbb
cld
int
loope
xchg
pop
mov
mov
push
dec
push
loope
and
or
pop
imulb
mov
mov
mov
mov
dec
leave
loope
and
sbb
or
fsts
push
in
push
xlat
loopne
mov
int
push
xor
cmp
sahf
add
jno
cmpsl
sbb
pminub
cmp
aas
or
insl
pop
testl
rcrb
lds
cmc
sub
xor
push
stc
jg
push
sbb
push
shll
popf
cli
lea
iret
sub
xchg
push
pusha
lret
sbb
inc
jno
stos
movsb
mov
cmp
jnp
in
xchg
mov
mov
nop
insl
test
gs
stc
out
mov
xchg
xchg
push
mov
ljmp
js
push
xor
rcl
inc
sbb
mov
xchg
adc
add
data16
repz
jno
rep
fs
ss
testb
out
lds
cmpb
pop
mov
sub
sbb
or
xchg
jecxz
pop
popf
clc
push
aaa
lret
cltd
and
inc
xlat
in
mov
hlt
mov
icebp
mov
pop
cli
popf
out
incb
out
cmp
sub
movsl
hlt
jae
mov
inc
mov
pop
dec
addr16
xchg
add
or
pop
cmc
lods
sbbb
pop
ds
push
jno
jg
je
xor
cmp
ret
mov
dec
insb
cmp
das
in
sub
xchg
outsl
popf
add
je
out
call
dec
in
and
jae
xorl
popa
push
sbb
shl
push
add
aad
dec
loop
popl
jle
add
fscale
mov
push
mov
pusha
cmpsl
adc
test
push
sbb
lods
out
adc
xor
mov
out
sbb
mov
push
pop
rolb
mov
sbb
test
cwtl
and
dec
loopne
mov
enter
fbstp
xor
add
dec
dec
mov
out
fnstcw
push
aas
add
out
sarb
jo
mov
aad
xor
sti
fdivr
pop
stc
pop
outsl
pop
push
gs
cs
push
insb
sbbb
mov
and
fsubrl
ret
stc
mov
fwait
sbb
dec
or
xchg
pop
xor
cmp
fbld
mov
out
ja
push
call
cltd
push
out
aas
jmp
shll
imul
leave
in
popf
push
icebp
xchg
jmp
jl
jg
dec
ja
jmp
inc
imul
clc
add
pushl
test
push
lret
add
jge
mov
push
cltd
vmovupd
jne
outsl
push
xor
jge
mov
add
sbb
mov
movsl
mov
push
fidivl
cmpl
mov
in
xor
hlt
roll
mov
push
inc
test
std
aas
jge
inc
pop
popa
push
in
test
outsl
mov
and
dec
push
cmpsb
in
and
cmp
push
lods
call
sbb
push
sbb
sub
in
pop
mov
in
sbb
add
gs
or
push
xor
xchg
test
inc
xchg
fdivl
push
imul
sub
mov
callw
fdivr
add
mov
fnstcw
pop
push
lret
int
pop
imul
push
std
repnz
dec
cmp
stc
push
dec
in
or
lds
mov
pusha
rcll
loopne
sbb
ja
add
add
cmp
iret
ret
and
cmpb
sbb
mov
sar
mov
add
sarb
fistps
xor
push
sbb
fistl
mov
fs
stos
dec
imul
or
push
dec
iret
xlat
je
pop
insl
dec
or
xor
orl
testl
jge
jg
mov
sarb
sti
jge,pt
cmp
add
push
loopew
hlt
sub
icebp
sbb
pop
cmpb
push
pop
insb
aad
hlt
addr16
mov
out
test
bnd
icebp
orb
lea
inc
rorl
inc
ljmp
stos
test
jns
push
lock
xchg
js
mov
mov
jmp
fs
and
and
dec
xor
or
jl
sar
test
lea
or
add
mov
or
ja
test
mov
add
xchg
sub
stc
dec
enter
shl
pop
cmp
arpl
pop
adc
mov
in
lock
adc
test
cmc
sub
pop
cld
dec
icebp
jg
in
jge
mov
test
add
or
sbb
hlt
in
in
push
mov
pop
push
pop
ret
outsb
jle
idiv
lcall
fdivr
jg
inc
jb
lret
icebp
or
push
lds
in
push
mov
sti
push
loope
sbb
icebp
and
out
pop
iret
push
inc
das
les
rolb
clc
xor
add
dec
les
cld
cmpsl
push
loope
pop
call
dec
push
push
fistps
dec
xchg
rep
or
push
loopne
bnd
mov
pop
add
out
sbb
mov
scas
dec
test
add
jmp
xor
mov
add
pop
orb
xchg
pushf
outsl
faddl
clc
add
gs
es
loope
fildl
cmp
sub
xchg
jb
mov
out
adc
aaa
cmp
or
popa
aad
ljmp
dec
insl
mov
mov
mov
cmp
dec
cmpsl
cmp
push
jne
sbb
mov
inc
xchg
or
imul
out
adcb
dec
addr16
icebp
jno
sub
or
std
add
orb
mov
add
adc
adc
sub
inc
div
xchg
lock
mov
clc
repz
push
jb
pop
xchg
icebp
hlt
call
and
push
xchg
out
sarb
add
sbb
icebp
cmc
cld
lret
cli
pop
icebp
rcll
sbb
and
cmc
into
sub
jbe
inc
idivl
cmp
sbb
xchg
lret
inc
pop
jnp
loope
shll
repz
push
jmp
and
loope
leave
enter
fldl
enter
xchg
sbb
inc
leave
xchg
dec
loopne
sbb
inc
leave
enter
lds
enter
roll
and
leave
enter
mov
mov
in
mov
mov
mov
mov
addr16
lods
insb
push
mov
leave
jmp
and
sub
cli
insb
shrb
dec
xchg
pop
mov
das
hlt
or
in
push
mov
mov
popf
mov
push
xchg
hlt
icebp
push
jmp
add
push
jb
mov
cmp
adc
add
xor
in
lds
in
insl
aad
aaa
adc
mov
in
iret
dec
cs
pop
cmp
testb
mov
shlb
jbe
aad
popa
testb
pop
pop
push
dec
sub
lods
inc
jns
lock
std
shrb
push
sbb
push
sub
in
pop
out
stos
das
mov
aaa
daa
iret
dec
iret
bound
ja
mov
mov
aas
xor
push
xchg
subl
push
add
ret
stc
test
mov
fists
sbbl
pop
cli
inc
decl
mov
or
outsl
push
loop
inc
xchg
jns
jbe
sub
sbb
jnp
xor
mov
je
sbb
outsl
std
and
das
cld
xor
adcl
test
add
dec
std
mov
test
sarl
inc
push
scas
xlat
mov
test
add
xchg
outsl
lods
sarl
cmc
xchg
adc
inc
cmp
mov
decl
js
pop
adcb
xchg
push
pop
mov
std
sbb
mov
dec
fildl
pop
repz
loopne
lcall
mov
in
sbb
out
cmpsl
jle
sar
outsb
inc
cmpsb
adc
icebp
loopne
mov
fists
std
jae
clc
jb
pusha
and
sbb
imull
pop
enter
or
cmpb
inc
add
mov
jbe
stc
inc
xor
dec
stc
cli
lahf
das
mov
or
test
iret
addr16
inc
add
cmp
jle
inc
and
cmp
cmp
shrb
sub
mov
sub
inc
sub
enter
les
loop
lds
ret
xchg
fcoms
insb
icebp
add
std
jmp
aam
stc
aam
fldl
test
inc
notl
loopne
loop
mov
test
fistpll
popa
jl
rolb
imul
mov
push
xor
push
fists
dec
imul
imull
mov
test
inc
adc
push
adc
in
imul
sti
mov
sar
out
aam
cmp
mov
jg
aam
in
data16
lret
pop
mov
push
rclb
xor
pop
xchg
shrl
addl
dec
xor
inc
testl
push
jae
out
adc
or
xor
test
cmp
cmp
aad
dec
push
mov
rdtsc
cwtl
cmp
dec
dec
cmc
mov
daa
cmp
sti
stos
clc
pusha
pop
test
out
push
in
or
les
inc
xor
nop
test
fwait
dec
jne
or
mov
sbb
xor
mov
insl
mov
daa
les
loope
test
ss
mov
jp
out
jne
lahf
adc
push
dec
lods
jae
repnz
lea
inc
cmpsl
dec
bound
fiaddl
rcll
pop
inc
call
add
xchg
jg
dec
xor
jle
mov
xor
jnp
pop
mov
adc
sbb
bound
pop
out
clc
out
sbb
test
addb
mov
js
push
inc
sbb
sti
push
jg
pop
andl
data16
pusha
ljmp
push
cmpb
sbb
jge
je
xchg
push
push
addr16
dec
push
addr16
es
add
xor
jle
pop
pop
push
xchg
push
adc
pop
test
xor
or
gs
push
sarl
loop
sub
jge
inc
inc
mov
xchg
aaa
or
loope
idiv
dec
fstpt
sti
repz
addl
dec
mov
pop
jno
aad
sub
xchg
push
lds
mov
test
lea
add
add
mov
pop
ja
xchg
testl
and
adc
inc
ja
dec
in
loopne
insl
inc
fnstcw
sbb
out
mov
repz
push
mov
add
inc
sbb
sbb
loop
pop
outsb
jo
scas
xchg
dec
test
or
insb
jmp
xor
inc
push
jns
andl
cmpsb
cmc
adc
adc
xchg
or
or
xchg
and
sbb
and
or
test
or
test
into
in
sub
xor
jbe
mov
pushf
popa
jnp
out
lcall
or
mov
std
push
js
cmpb
sbbb
inc
and
loope
clc
int
adc
arpl
scas
ss
mov
jg
mov
dec
fisttpll
shlb
out
push
popa
push
cmc
mov
sbb
mov
mov
lock
les
push
insl
mov
add
push
xchg
push
sub
add
fbstp
repz
mov
ret
inc
mov
out
push
adc
leave
cmp
outsl
aam
mov
push
pop
gs
repz
insb
xchg
dec
push
test
xor
sbb
or
dec
push
arpl
lcall
incl
cwtl
cmp
push
mov
push
add
push
xchg
mov
lock
dec
clc
rorl
or
dec
pusha
adc
aas
lds
pop
push
pop
mov
and
pop
cmp
dec
push
jle
jb
ret
inc
xchg
adc
dec
data16
sub
pop
test
add
call
inc
mov
mov
mov
loopne
imul
scas
xchg
fxam
subb
add
or
lea
test
pop
sub
mov
fnclex
jge
xor
push
adc
rcrb
loop
push
inc
gs
cwtl
xchg
pop
mov
jge
das
jmp
adc
call
stc
dec
mov
push
in
aaa
sbb
outsl
inc
inc
mov
les
loopne
mov
fildl
filds
inc
mov
add
scas
fwait
jns
out
pop
std
mov
add
scas
add
clc
daa
add
pop
aas
add
loopne
inc
mov
aas
or
xchg
dec
mov
push
dec
sub
in
push
clc
lahf
add
outsl
cmp
pop
idiv
mov
in
aaa
loop
cmc
cmpsl
mov
dec
mov
pop
sub
mov
push
std
add
add
test
in
daa
or
cli
push
cmp
imul
jno
xorb
mov
pop
ja
or
or
cmp
mov
pop
sub
add
rorl
pop
mov
cmpsb
jb
addl
outsb
lds
dec
das
pop
in
int
inc
test
repz
sub
pop
int
jne
outsb
dec
sarb
outsl
loope
les
adcl
inc
pop
pop
std
cmpl
jmp
cmp
addb
ds
lcall
cmpsl
leave
in
mov
mov
ret
cmp
xchg
push
mov
inc
push
stos
js
aaa
mov
iret
incl
aaa
sti
decl
jb
mov
jns
add
jbe
cmp
in
jp
push
mov
dec
mov
mov
inc
push
loope
push
xor
mov
testl
add
cmp
push
jp
push
or
das
fmull
pop
lods
dec
clc
das
lds
mov
jg
decl
mov
xchg
add
add
shll
adc
shll
dec
mov
mov
jno
std
test
cmp
popa
dec
mov
loopne
or
add
outsb
je
cmc
lds
add
outsl
sbb
or
sahf
inc
xor
lods
outsl
add
cmp
push
mov
jmp
mov
adc
hlt
and
lods
std
jb
out
xor
lods
push
jnp
push
mov
pop
mov
ret
ljmp
mov
mov
mov
add
adc
movsl
bound
xor
pop
icebp
mov
push
mov
xchg
inc
cli
popa
adc
hlt
push
lods
adc
pop
dec
cmp
jecxz
nop
jns
in
push
add
cmc
adc
push
push
mov
arpl
rol
lds
and
in
rorl
popa
scas
pop
lea
icebp
or
pop
lret
adc
pop
mov
rcrb
bound
xor
out
in
sti
das
je
sbb
cli
sbb
mov
xor
pop
jmp
jo
sub
repnz
sti
addr16
out
pop
fdiv
fwait
cs
ret
mov
movsl
arpl
xor
out
adc
jne
in
jae
insl
fistpl
cld
sbb
adc
fistpl
mov
out
aas
addb
and
in
imul
lret
aas
pushf
add
mov
pop
dec
cmp
mov
push
in
add
pop
xor
pop
push
out
outsl
cs
aas
addr16
cmpsl
mov
and
lock
and
mov
push
push
sub
arpl
mov
in
clc
inc
aad
aad
mov
or
xor
pop
lock
or
lret
negb
aad
pop
mov
in
pop
enter
and
shl
push
fsubr
in
add
fs
in
fstps
inc
insb
lret
pop
in
mov
out
aas
mov
ret
in
mov
and
rcrl
or
sti
or
arpl
gs
push
inc
addr16
les
out
fs
aas
pop
add
loop
movsl
inc
mov
lods
or
cmc
pop
and
inc
add
mov
scas
out
in
rclb
dec
xor
insb
fisttpl
pop
imul
pop
xchg
fistps
add
adc
mulb
and
and
test
pop
fcmovbe
push
sub
or
je
popw
popf
mov
push
sbb
add
pop
xchg
insb
dec
insl
int3
pop
xchg
gs
lock
idiv
in
int3
add
and
stc
addr16
ficomps
arpl
in
mov
clc
fdivs
iret
push
insl
movsl
in
jge
push
xchg
add
mov
mov
addr16
lcall
xadd
insl
mov
mov
xchg
adc
inc
sti
ret
jne
and
and
aad
mov
int
cld
repz
movsl
sbb
ret
insl
jmp
lods
or
orb
pop
lock
call
xchg
out
add
aad
addl
arpl
mov
xor
rcl
push
fistpl
jg
call
cs
cli
out
fstl
mov
ret
lret
cmc
xchg
sti
out
jnp
sbb
push
mov
lods
jns
add
test
mov
cmp
pusha
lret
jg
mov
daa
icebp
jmp
cmp
sti
es
popa
or
mov
movsb
sbb
inc
cmp
pop
in
cmp
add
dec
jecxz
pushf
nop
add
pop
and
cltd
dec
xchg
adc
decl
rclb
add
mov
or
cmp
push
fdivrp
mov
ljmp
sbb
call
jl
push
mov
cltd
pop
outsl
pop
mov
insl
lock
mov
jmp
data16
and
pop
lods
out
int
sti
imul
cmp
pushf
insl
mov
das
push
cli
and
mov
mov
addr16
xor
pusha
jnp
dec
hlt
popa
add
xor
icebp
push
clc
movl
jmp
dec
stc
stc
cld
mov
aam
dec
jge
aas
sbb
pop
mulb
int3
and
mov
add
enter
adc
xor
jle
mov
and
out
aas
or
mov
pop
pop
push
push
test
movsl
pop
insl
inc
or
orl
int
ret
push
cmc
push
pop
clc
sbb
mov
sbb
incl
adc
sub
outsl
adc
add
int
mov
dec
dec
adc
or
dec
push
hlt
enter
popa
pop
add
push
mov
aam
cli
inc
adc
inc
sbb
adc
incl
mov
stc
xor
sub
push
sbb
push
sub
add
mov
push
imul
mov
int3
fimuls
call
mov
push
lahf
xchg
push
add
enter
int
rcll
xor
push
push
and
jmp
ljmp
xlat
in
pop
xorl
aas
push
test
mov
dec
mov
test
mov
jo
cmp
lods
out
ret
imul
inc
sbb
sub
pop
push
mov
mov
sarl
stc
test
mov
pushl
std
jg
add
dec
cmc
jae
mov
jp
cmp
lock
and
rcr
dec
xor
jae
loopne
addr16
push
inc
or
loope
add
test
push
mov
inc
push
mov
mov
push
or
std
jg
loop
test
jg
add
cmp
push
mov
pop
push
push
lds
addr16
jnp
loope
mov
inc
push
and
jae
or
fists
xchg
mov
or
inc
jl
cmp
push
xchg
in
cmc
clc
std
dec
insl
ficompl
mov
fwait
add
sti
out
in
test
mov
pop
dec
insl
push
cld
negb
xchg
stc
push
push
push
lds
movsl
or
cmp
aam
aas
shll
push
jecxz
xchg
push
cld
pop
sub
ja
inc
inc
inc
xor
js
subb
lea
pusha
arpl
inc
movl
dec
pop
cmovae
stc
lret
rcrl
lret
out
mov
aam
std
mov
fildl
push
aam
addr16
and
push
mov
mov
and
xor
std
mov
add
rolb
cld
sbb
out
dec
pop
sarl
push
mov
and
jge
sbb
mov
xchg
outsl
aam
add
repnz
imul
dec
cmp
repnz
imul
les
sti
shrb
rcll
arpl
mov
fistl
inc
out
popa
frstor
mov
add
add
inc
jge
sti
add
mov
jns
testb
mov
into
test
popa
push
idiv
fldl
xchg
das
cmc
lock
mov
aas
or
icebp
add
xchg
xor
xor
mov
xchg
jle
fs
out
mov
arpl
jne
cmpl
mov
adc
stc
push
and
mov
je
fldcw
xchg
add
stc
mov
cs
clc
push
push
gs
jle
add
test
mov
or
and
nop
stc
push
ss
scas
cs
lea
pop
lahf
lds
add
xchg
movl
xchg
cld
int
ret
mov
in
add
jno
push
dec
out
mov
lret
mov
popl
out
push
test
fsincos
xor
insb
inc
outsl
ja
lds
lcall
insb
or
xchg
sbb
jg
sti
jge
fscale
xor
fistps
add
xlat
mov
outsl
fs
mov
or
pop
jae
xchg
out
das
inc
das
inc
jmp
dec
push
push
std
push
hlt
lret
mov
das
mov
mov
test
shlb
mov
das
mov
lcall
sub
std
pop
mov
mov
mov
test
fsubs
pop
movsb
das
sti
mov
data16
imul
sbb
adc
mov
outsb
loope
lcall
xor
or
jp
js
lock
cs
aas
mov
sbb
adc
jo
or
insl
stc
sub
dec
xchg
ss
orps
pushl
pushf
pop
icebp
mov
xor
cli
lea
arpl
push
arpl
push
pop
orl
cmp
js
or
rolb
idivb
jl
sub
dec
test
cmc
imul
pop
add
cmp
sbb
pushf
mov
fnsetpm(287
xchg
in
pop
mov
mov
and
adc
dec
dec
dec
fs
mov
xchg
sub
push
std
push
out
push
push
sub
pop
dec
outsb
pop
cli
cld
sbb
and
jo
or
and
testl
jno
stc
cmc
outsl
jecxz
iret
out
outsb
icebp
imul
in
inc
lahf
iret
out
rol
pop
outsb
push
imul
mov
cmp
lret
leave
ret
lret
or
dec
push
aas
pusha
popf
jne
mov
or
sbb
stc
and
inc
inc
mov
dec
dec
xor
out
outsl
push
sti
sub
cmp
popf
inc
sbb
call
std
imul
add
cmp
and
test
xorb
xchg
jno
jnp
mov
jecxz
pop
add
or
jns
fs
jecxz
addb
enter
aaa
mov
cmc
aad
mov
jecxz
out
mov
js
jge
std
or
add
sbb
mov
xchg
orb
outsb
cmp
and
jmp
and
clc
lcall
mov
or
outsb
xorl
jp
jle
je
push
push
call
test
add
out
or
push
pop
push
xchg
jl
insl
movb
insb
leave
inc
sti
add
loop
fildl
mov
add
stos
mov
mov
pop
jge
and
test
dec
fwait
sbb
adc
xor
add
jns
call
push
jl
std
jno
xor
jb
lcall
dec
sti
int
xor
fmuls
push
stos
in
mov
mov
aam
xchg
mov
out
ret
mov
sub
jle
jno
dec
dec
adc
div
pop
jg
repz
add
push
push
push
sub
xor
sub
popf
subl
ficomps
or
lds
xor
lock
aad
and
mov
adc
fxam
adc
mov
mov
add
xchg
mov
mov
inc
pop
xorb
pop
daa
out
addr16
push
subb
mov
mov
mov
push
lret
in
iret
daa
mov
outsl
repz
in
in
xor
adc
in
sarl
insb
cmp
xor
mov
cmp
nop
xor
loope
dec
jo
jne
icebp
enter
xchg
jns
jbe
jne
jb
shlb
ja
jmp
je
pop
sub
xor
sahf
insl
lcall
jae
shll
jb
je
jbe
je
cmpsb
pop
cs
ja
jo
jne
popa
pop
shll
popf
jbe
xchg
mov
insl
shll
push
jne
dec
cmp
imul
mov
stos
je
fwait
jb
cs
fistl
mov
jnp
jb
pop
mov
adc
jnp
jns
cs
int
repz
or
jns
jle
jb
outsb
lahf
dec
ja
adc
jge
jnp
cmpsb
imul
cmpsb
imul
adc
repz
fistpll
jge
mov
les
negl
xchg
cmp
aad
xor
loopne
addr16
ss
mov
jbe
sub
out
adc
fwait
js
addr16
cmpsb
cmp
dec
popa
xor
movsl
mov
inc
or
out
adc
push
pop
jle
adc
cld
ret
dec
sub
xor
aas
fnstenv
lret
in
jp
jae
sbb
fwait
cmpsb
mov
leave
js
ljmp
fnstsw
cmp
xor
scas
loop
adc
xchg
fcoml
call
loopne
sbb
mov
cli
dec
push
ja
or
pop
imul
cmp
jns
inc
push
xchg
add
fs
jne
and
and
sbbb
sbb
dec
push
lds
mov
jno
scas
das
xor
cltd
sbb
imul
popf
jns
daa
push
jae
jp
ss
dec
and
jge
and
subb
adc
mov
mov
dec
jb
jle
cwtl
add
cmp
adc
sub
ja
subl
imul
mov
lcall
pop
imul
mov
adc
je
jne
in
mov
pshufw
jbe
je
mov
lcall
ja
int
imul
sub
xor
rcrl
pop
add
enter
jb
jne
outsb
andb
xchg
mov
pop
cs
lret
mov
or
jne
jp
leave
mov
pop
test
jl
mov
outsb
int
jge
adc
jle
ja
dec
shll
mov
xor
shll
int
imul
jecxz
fmul
xor
xlat
xor
mov
mov
fwait
mov
dec
fcoms
shll
fnsave
mov
ret
ja
adc
das
inc
jbe
adc
insb
shll
xchg
scas
inc
lcall
int
imul
xor
xor
xor
xor
cmpsb
jmp
pop
pusha
push
xor
popa
mov
pavgb
mov
repz
dec
jns
add
bound
dec
imul
imul
pop
bound
push
imul
add
insb
fs
ds
push
bound
dec
pop
jno
inc
cld
lcall
stc
inc
popa
jo
imul
outsb
imul
pop
push
jno
bound
ds
inc
pop
insl
aas
jno
imul
pop
jno
jno
aas
test
inc
lcall
out
jne
jae
pop
pop
outsl
or
inc
arpl
push
inc
fistpll
popa
fs
cmp
inc
pop
imul
jb
pop
gs
outsb
insb
mov
out
inc
imul
imul
into
std
pop
arpl
imul
incl
pop
bound
pop
outsb
pop
outsl
jo
clc
cmp
jo
sbb
mov
cld
icebp
mov
aas
outsb
popa
bound
add
std
in
fs
gs
pusha
arpl
xchg
ds
mov
lcall
inc
cmp
bound
popa
inc
data16
mul
inc
pop
imul
sub
cmp
push
jg
aas
gs
add
jo
aas
jo
pop
push
insb
dec
bound
inc
pop
decb
pop
add
mov
push
jo
insl
arpl
bound
fidivs
ds
cld
aas
outsl
pop
pusha
adc
popa
pop
popa
data16
pop
mov
bound
insb
imul
cld
dec
pop
addr16
bound
cmp
pop
push
dec
bound
jbe
pop
mov
pop
sub
ja
dec
pushw
adc
gs
test
inc
outsb
outsl
pop
pop
xor
push
bound
loope
adc
dec
insb
pop
inc
inc
pop
imul
loop
imul
jno
test
lcall
cmp
outsb
pop
je
jo
add
mov
incl
gs
push
inc
ja
push
mov
pop
push
inc
push
ds
test
mov
das
das
and
jo
shll
add
sbb
and
add
je
fs
pop
dec
outsl
ss
lods
arpl
ds
dec
int
arpl
outsl
mov
int3
mov
jnp
pop
inc
lcall
outsb
push
pop
popa
inc
add
inc
cmp
pop
inc
sbb
push
push
jl
inc
subb
push
sbb
adc
pop
sbbl
cmp
mov
pop
and
dec
xor
or
rclb
inc
push
pop
pusha
fnsave
jno
jno
bound
mov
and
cmpsb
addr16
outsb
push
popfw
push
pop
fwait
pop
fdivs
jo
outsl
inc
insl
jge
nop
divb
cmc
inc
dec
sub
daa
bound
mov
pop
dec
pop
jae
xchg
in
jne
aas
arpl
or
adc
pop
pop
pop
loope
or
std
and
or
pop
lods
aas
loope
insl
data16
outsb
cmpsl
jno
data16
pop
mov
dec
inc
cmp
clc
inc
inc
cmp
ljmp
inc
shll
or
dec
jno
mov
arpl
mov
xchg
mov
arpl
mov
mov
test
inc
bound
and
dec
pop
addr16
cmpsl
mov
pop
aad
push
cmp
outsl
cld
inc
inc
inc
xor
sub
inc
push
ds
dec
sub
sub
mov
outsb
mov
gs
pop
mov
shll
arpl
in
fidivs
orl
fs
fdivr
adc
outsl
popa
inc
sti
cmp
xor
add
inc
imul
xchg
dec
pop
out
gs
inc
dec
mov
pop
loope
cli
inc
xchg
inc
jno
bound
scas
insb
std
dec
mov
push
ss
pop
shlb
or
arpl
inc
cmpsl
pusha
cmp
ret
inc
pop
imul
fs
clc
fidivl
clc
inc
cmp
cld
cmp
cmc
cld
sub
inc
jg
lods
pop
aam
sbb
gs
pop
ss
insl
lods
sub
daa
shll
jb
cmp
lock
dec
pop
clc
cmp
sub
inc
dec
lea
jg
cmp
aas
inc
cmp
add
cmp
jecxz
sbb
out
or
push
fidivrl
and
pop
test
jo
sbb
push
pop
aas
cmp
pop
push
jnp
ret
cs
and
xor
mov
inc
outsb
daa
jo
jno
cmp
gs
push
jo
pushaw
cmp
test
or
pop
inc
inc
stos
pop
insl
in
test
dec
inc
inc
cmp
push
mov
pop
sbb
cmp
cmp
outsl
jg
cmp
inc
cmp
push
push
aas
sub
cmp
xor
push
cmp
dec
cmp
push
xor
je
cmp
pop
or
dec
test
pop
push
icebp
outsl
fs
inc
dec
mov
fisttps
test
sub
cmp
sub
ja
imul
aas
insb
jb
cmp
dec
cmp
fistpll
pop
pop
ds
sub
cmp
ss
inc
pop
xchg
mov
lock
cs
aas
mov
cmpsb
dec
inc
add
sbb
in
jmp
gs
pop
push
imul
push
cmp
bound
subl
insl
xor
cmp
inc
pop
cmp
push
in
adc
sub
or
lahf
dec
inc
inc
hlt
lea
inc
cmp
xchg
sub
pusha
outsb
add
popa
mov
cmp
mov
add
aaa
sub
pop
aas
jb
insb
jo
pop
cwtl
bound
clc
adc
push
cmp
push
fcmovnu
xor
arpl
jg
popa
pop
test
das
jl
cmp
sar
push
push
cmp
sub
pop
or
push
aam
or
inc
push
test
repz
dec
mov
outsl
daa
jo
shll
out
aas
imul
fs
jo
cmp
mov
pop
inc
inc
inc
dec
fwait
popa
cmp
inc
dec
out
stc
imul
push
clc
mov
imul
or
insb
ss
sub
mov
push
outsb
or
jo
in
outsl
xchg
cli
mov
addr16
fildll
jl
pop
inc
jne
lods
pop
push
inc
push
ret
pop
arpl
hlt
inc
dec
aas
push
push
js
pop
cmp
add
pop
pop
or
mov
add
cld
mov
mov
clc
mov
bound
mov
fistl
test
sub
dec
pop
outsl
clc
push
bound
add
insl
sbb
dec
push
sub
pop
pop
aas
insl
imul
ss
pop
or
adc
fisttpl
call
jno
ficompl
icebp
mov
cmp
addr16
inc
jecxz
inc
pop
test
pusha
imul
jge
hlt
cli
lcall
pop
mov
cmp
sar
sbb
jbe
lds
ret
outsl
arpl
pop
testl
fwait
push
nop
repnz
or
jle
cli
or
sbb
cs
int
test
push
fistpl
lret
gs
cld
pop
or
and
or
xor
jge
and
cs
lret
in
or
dec
aaa
andb
mov
mov
pop
std
sbb
lcall
popf
adc
ror
shl
daa
cmp
dec
jl
aad
adc
mov
mov
add
add
add
add
xchg
rclb
sub
in
mov
or
mov
std
push
pop
rcl
sbb
inc
outsb
gs
cmp
imul
push
arpl
mov
ds
test
popa
pop
jnp
imull
lea
shrl
dec
pop
arpl
mov
fiaddl
addr16
mov
inc
dec
inc
push
aad
sub
mov
rclb
sbb
sub
cs
push
fnsave
imul
in
test
sbb
jbe
insb
inc
mov
das
xchg
mov
push
pop
sub
mulb
inc
inc
push
jo
pop
dec
xchg
fidivs
aam
jge
jno
imul
pop
pop
fistpll
pop
clc
mov
callw
sbb
dec
out
cmp
clc
inc
outsl
popf
dec
stos
rorl
imul
ja
shl
mov
arpl
jae
dec
dec
insb
mov
mov
insl
pop
mov
sbb
pop
sub
xchg
pop
dec
jb
js
aaa
lods
stc
dec
popa
ja
dec
inc
mov
mov
mov
pop
daa
ds
leave
jne
loop
cmpsl
js
pop
imul
ss
into
mov
inc
leave
fidivrs
push
and
pop
pop
pop
sub
and
push
xchg
ret
sub
fldt
xor
add
dec
push
dec
dec
dec
sti
test
daa
push
fimull
xchg
or
daa
push
push
push
fcom
adc
daa
fcoml
test
pop
orl
cmc
mov
sbb
jbe
push
sub
push
and
sub
stc
sbb
test
push
pop
dec
fs
add
popf
imull
sub
loopne
cmp
lods
jae
jbe
pop
addl
cld
jne
and
jb
inc
aam
pop
mov
cs
adc
stos
rcrb
pop
mov
mov
jb
int
pop
aad
push
or
jne
inc
aad
push
outsb
outsb
dec
daa
pop
mov
xor
outsb
jae
adc
mov
jo
pop
jbe
pusha
aas
pop
push
adc
popa
and
and
pop
pop
or
mov
inc
dec
dec
inc
movsl
dec
inc
inc
inc
dec
das
insl
pop
test
std
inc
pop
or
pop
fbstp
cmc
ret
les
sbb
sub
jo
and
div
outsl
out
sub
imul
xor
pusha
sbb
pop
or
push
outsl
and
push
sub
push
xor
fimull
insb
insb
pushf
dec
lock
sub
xor
add
mov
iret
bound
mov
and
push
repz
aad
lahf
aam
dec
dec
dec
pop
ja
xor
push
movsl
out
aad
mov
fists
adc
ss
mov
arpl
mov
mov
mov
lahf
cmp
xlat
lcall
outsb
insl
ret
data16
dec
pop
je
outsl
sub
aas
popf
imul
add
xor
sarl
dec
dec
dec
dec
cmp
in
std
and
fs
dec
sub
popa
ljmp
pop
pusha
push
in
push
mov
outsl
iret
mov
or
push
sahf
adc
inc
popa
sub
mov
push
and
cmpb
sub
mov
mov
push
push
cmp
cld
mov
pop
jb
xlat
xchg
sbb
mov
imul
aad
jns
xchg
lret
xlat
fcmovnb
pop
clc
add
mov
aam
cmp
fadds
sbb
push
inc
dec
scas
nop
aas
pop
cld
xchg
pop
mov
pusha
push
je
cmp
shrb
sbb
inc
jne
pushw
inc
inc
push
pop
imul
mov
dec
cmp
outsl
out
incl
jno
bound
mov
mov
and
cs
xchg
popw
mov
and
push
bound
pop
mov
inc
inc
dec
dec
inc
fistpl
adc
xchg
dec
or
jg
cmp
fstpt
inc
dec
ret
sar
push
daa
sbb
inc
sub
add
std
mov
jg
sbb
sub
pop
add
sub
add
cmp
fimuls
xorl
test
cmp
pop
adc
popa
insb
aad
push
sub
fstpl
push
push
sub
daa
sub
jbe
pop
les
pop
sub
and
or
add
cmp
dec
xchg
imul
sub
imul
or
inc
lods
outsb
or
inc
pop
xchg
pop
imul
xchg
dec
mov
clc
outsl
mov
sbb
sub
daa
sub
ret
pop
mov
outsl
jae
push
pop
scas
jo
mov
sub
pop
cmp
popa
inc
sub
arpl
mov
int
pop
jae
sub
inc
dec
xor
fwait
mov
not
inc
inc
add
fldcw
sub
dec
js
pop
pop
mov
test
jb
insl
mov
ss
pop
test
jmp
or
cmp
and
lods
inc
repnz
sub
push
xchg
xor
ret
outsl
jne
cmpsb
sub
pop
dec
outsl
dec
pop
mov
iret
arpl
xchg
cs
lods
pop
mov
sbb
fildll
pop
insl
xchg
cmp
dec
insl
pop
jno
pop
jp
arpl
pop
sub
inc
and
imul
jb
sub
add
sub
pop
insl
in
lods
shrl
push
push
or
add
or
sbb
jg
xor
sub
popa
pop
jo
xor
xor
mov
or
push
jo
ret
add
pop
sub
insl
mov
adcb
icebp
fcmovnbe
push
aaa
outsb
test
pop
leave
pop
cmp
insl
cmp
pop
xor
cmp
mov
or
pop
std
push
push
jbe
sbb
test
push
in
into
dec
pop
mov
sub
lret
xorl
sub
cmp
outsl
sub
pop
leave
sub
and
lds
cld
cs
das
ss
pop
jbe,pn
ret
in
sub
and
sub
mov
fisubrl
pop
pusha
and
and
test
jns
sbb
sub
fldt
cs
push
dec
mov
xor
sub
sbb
cld
push
pop
jno
cmp
insb
xchg
fistpl
pop
in
ja
sub
insb
mov
push
movsl
lea
aaa
test
ret
pusha
and
test
xchg
fisubs
cmp
ss
lea
dec
dec
inc
pop
fs
jmp
mov
cmp
dec
push
jmp
mov
dec
dec
cmp
push
cld
in
in
push
jbe
jno
fists
adc
dec
addr16
adc
push
jno
cmp
xor
arpl
cmp
xchg
inc
pop
dec
insb
inc
ja
xchg
lds
mov
sbb
inc
sarl
sbb
dec
ret
fs
bound
inc
fmull
inc
xor
inc
arpl
sbb
mov
cmp
mov
fwait
les
shlb
daa
ficompl
push
or
cmp
cmp
jne
imul
fcoml
fisubrl
adc
arpl
mov
sbb
in
outsl
cmp
or
das
sub
fisttps
mov
outsb
arpl
sub
sbb
lea
mov
dec
xor
mov
pusha
test
push
push
ja
sbb
xor
int
rol
ds
arpl
mov
std
xor
es
jns
daa
xor
xor
inc
cmp
inc
movswl
dec
insl
flds
inc
dec
dec
call
push
popa
stos
push
adcl
mov
and
add
push
pop
push
les
fdivl
jecxz
call
sub
cmp
sub
pop
push
and
mov
cmp
rorl
jp
dec
mov
decl
addr16
inc
cmp
cmp
cmp
imulb
arpl
adc
outsl
arpl
movsl
ret
jb
push
inc
xor
bound
cmp
ds
inc
and
addr16
push
dec
outsb
push
js
jg
add
pop
pushw
ret
dec
dec
ja
jne,pn
jno
inc
imul
push
push
xor
push
adc
inc
dec
inc
push
addr16
gs
outsb
daa
movsl
lea
cltd
pop
and
sbb
and
inc
cmp
aas
es
push
fisubrs
mov
insl
cmp
add
fs
popf
les
shrl
push
enter
jno
addr16
daa
jbe
clc
jg
cli
pop
add
add
add
xor
cld
mov
jmp
push
pop
push
and
dec
sub
sahf
aaa
or
and
jns
inc
xchg
das
mov
das
addr16
dec
in
or
adc
andl
xchg
in
outsl
adc
pop
das
pop
lea
inc
jb
test
out
icebp
inc
mov
pop
inc
pop
dec
imul
pop
mov
dec
sub
sub
push
mov
pop
pop
xchg
cmp
mov
out
inc
jg
pop
cmp
dec
scas
stos
fcom
pop
fdivs
outsl
dec
outsl
pop
adc
mov
jb
bound
hlt
das
sub
sub
jb
jne
ljmp
sub
sub
inc
fs
or
call
std
daa
das
xor
inc
sub
lcall
addr16
jnp
subl
sub
das
clc
cs
sub
sub
jg
and
sub
sub
dec
cs
xor
jb
jg
mov
mov
pushf
das
cmpsb
sub
xor
das
repnz
cs
pop
xor
xor
sub
xor
pushl
xor
scas
sub
xor
xor
sub
cs
das
divb
aas
xor
decl
pop
das
xchg
xor
sub
das
jmp
cld
icebp
xor
jg
xor
xor
ja
xorb
xor
xor
xor
mov
xor
xor
xor
dec
xor
gs
xor
xor
xor
fbstp
out
cs
xor
xor
imul
xchg
xor
cs
jmp
xor
xor
add
push
xor
sbb
xor
sub
inc
mov
push
xor
mov
jmp
add
sbb
jmp
ud0
cmp
aaa
xor
inc
xor
pop
aaa
je
ja
jg
test
xchg
aaa
movsl
xor
cmp
mov
xchg
xor
sbb
das
mov
inc
aaa
inc
cmp
jae
jne
jle
pushl
mov
xchg
cmp
aaa
mov
xor
pusha
cmp
cmp
cmp
cmp
xor
xchg
cmp
cmp
ss
cmp
cmp
ds
push
lcall
cs
sub
imul
xchg
sub
mov
inc
sub
sub
out
sub
sub
cs
inc
clc
ljmp
inc
xor
pop
sub
movsb
cs
sub
sub
pop
in
in
das
push
sub
jno,pn
xor
js,pn
mov
mov
xor
sub
xlat
das
lock
xor
sub
xor
xor
xor
xor
pop
ss
xor
ljmp
mov
ss
xor
xor
xor
pop
adc
pushf
xor
cmp
ss
hlt
cmp
cmp
cmp
outsl
lock
pop
cmp
imul
adc
sub
out
cmp
incl
xchg
xchg
xor
cmp
clc
cmp
cmp
xor
jg
out
add
lock
cmp
mov
cmp
cmp
bound
dec
cmp
push
fs
mov
cmp
or
mov
or
mov
stos
cs
shrl
je
jle
mov
sbb
xor
sub
in
adc
xor
incl
das
xor
xor
and
cmp
dec
xor
sub
xchg
xor
pushl
das
icebp
xor
xor
xor
push
xor
mov
push
xor
jnp
mov
xor
xor
xor
in
jmp
xor
sub
xor
xor
and
xor
sbb
xor
xchg
sub
jg
dec
sub
lret
xor
xor
xor
notb
ss
inc
xor
jmp
xor
push
icebp
lods
icebp
xchg
sub
mov
andl
sbb
xor
xor
divb
or
movsb
aaa
jecxz
out
jne
test
pushl
xor
ss
cmp
aaa
cmp
cmp
xor
outsl
cmc
dec
aaa
push
cmp
cmp
cmp
sub
cmp
xor
loopne
cmp
cmp
pop
cmp
jge
lea
sub
dec
fdivrs
ds
hlt
aaa
out
out
mov
pop
sub
sub
data16
mov
mov
das
mov
add
add
popf
sub
lea
subl
sub
mov
jae
das
fsubrs
ucomiss
das
sbb
xor
lcall
jno
xorl
mov
xor
sub
repnz
push
clc
and
xchg
sub
adc
or
cli
xor
xor
sub
pop
xor
mov
xor
adc
hlt
xor
xor
inc
xor
push
xor
xor
sub
xor
xor
sub
hlt
xor
xor
sub
xchg
shlb
dec
aaa
xor
xorl
leave
loop,pn
pop
xor
das
pop
clc
pop
ss
cmp
xor
ss
xor
shll
jg
aad
push
adc
xor
xor
fildll
fwait
cmp
aaa
sub
push
cmp
xor
pop
cmp
cmp
aaa
xchg
cmp
cmp
ds
cmp
cmp
dec
insl
jge
mov
mov
sub
sub
sub
xor
popa
jecxz
pop
cs
sub
sub
sub
out
cmc
pop
das
imul
jp
jnp
xchg
lret
sub
inc
xor
pop
clc
ljmp
bound
in
mov
mov
cmp
insl
and
fisttps
frstor
cmp
data16
cmp
aaa
jmp
cmp
xor
dec
cmp
cmp
lcall
cmp
fistpll
out
cmp
cmp
out
sbb
lcall
and
daa
cmp
cmp
ds
cmp
aam
loope
dec
cld
pop
pusha
std
pop
mov
push
sub
test
cmc
pop
mov
sub
test
sub
scas
sub
add
test
sub
sub
sub
pop
test
or
aas
sub
dec
mov
xchg
out
sub
sub
das
in
sub
sub
sbb
outsl
cld
inc
scas
sbb
cmp
shrl
test
jmp
cld
lcall
das
sbb
sbb
sub
inc
sub
xor
xchg
sub
pop
push
outsl
js
xor
das
and
outsl
outsl
xor
dec
imul
jge
movsl
pushl
xor
sub
cs
das
pushl
imul
clc
add
stc
mov
lret
xchg
test
mov
pop
add
outsb
push
popa
data16
inc
jae
inc
dec
dec
dec
pop
pop
add
pop
inc
popa
arpl
or
xor
addr16
insl
sub
ljmp
gs
unpckhps
outsb
outsb
outsl
and
je
jo
and
jo
push
ljmp
push
push
dec
inc
push
push
sti
idiv
incl
inc
pop
dec
imul
je
push
imul
jne
jb
add
jg
push
gs
imul
jae
mov
lcall
mov
mov
ja
daa
aas
push
push
mov
push
outsl
xchg
sbb
adc
pop
cs
fldt
jae
and
and
flds
jae
arpl
arpl
imul
and
test
lret
jbe
sub
and
adc
jo
mov
sbb
jns
xor
fdivrl
jg
jbe
push
test
adc
push
jb
jns
ss
xchg
xor
xor
sub
jb
frstor
fldl
dec
popa
fmull
aas
jb
outsb
cmp
mov
and
outsl
and
adc
lods
add
push
jae
xor
in
in
jbe
imul
push
jg
aas
imul
bound
jo
inc
gs
popa
push
ds
fcomp
gs
pop
inc
js
adc
push
push
adc
int
jg
jns
dec
jmp
inc
fs
mov
mov
imul
add
sub
dec
inc
inc
xor
push
sub
push
inc
inc
mov
fcmove
mov
jae
add
pop
mov
inc
outsl
sub
cmp
push
int
jne
or
inc
push
push
mov
fisttpll
insl
popa
dec
pcmpeqw
mov
jae
xor
jae
neg
jb
movd
or
test
fdivrs
jae
xchg
insl
jbe
mov
jmp
outsl
dec
push
and
lds
fs
daa
push
sti
mov
mov
sti
imul
dec
insl
insl
dec
push
pop
insl
jae
addr16
mov
add
or
add
add
add
jp
call
imul
add
dec
mov
test
push
sbb
out
adc
xor
xor
xor
fcomp
jg
jmp
adcb
add
ja
std
in
mov
out
ja
outsl
add
mov
sbb
mov
stos
or
lcall
pusha
inc
repz
daa
stc
outsl
mov
add
outsb
adc
jo
fcmovnb
pop
psubd
and
or
sti
mov
mov
jg
sub
add
fwait
and
insb
push
pop
add
add
add
in
bnd
daa
pop
loopne
decl
xchg
fstpl
call
cmp
push
stc
cvttps2pi
xor
xor
xor
mov
mov
add
xor
and
popa
incl
or
add
add
adcl
mov
xor
enter
mov
cmp
push
add
or
lods
inc
push
inc
clc
aas
rorb
arpl
pop
push
arpl
inc
stc
iret
fimuls
jo
inc
inc
pop
inc
dec
inc
push
sbbb
faddl
mov
adc
sub
enter
incl
rolb
nop
add
add
nop
jg
ljmp
outsb
test
shlb
jns
add
lahf
stc
aas
add
add
add
add
imul
jg
sub
push
push
enter
add
mov
rorb
add
add
add
jbe
sub
add
inc
test
out
add
add
cwtl
adc
add
gs
je
inc
imul
popa
jo
imul
gs
pushw
push
or
sarb
jne
push
and
push
imul
inc
gs
push
imul
jg
jg
gs
insb
outsl
jae
dec
popa
outsb
fs
inc
jb
in
lahf
in
jb
jb
inc
je
jb
bound
jae
outsl
jbe
sti
fsubs
inc
js
and
jo
dec
popa
insl
push
mov
mov
inc
or
jb
mov
das
fcmovnbe
jno
dec
arpl
outsb
or
pop
insb
pop
dec
dec
imul
je
jno
in
sub
xchg
pop
push
lods
mov
jo
outsb
outsw
adc
sbb
fwait
int
add
mov
mov
mov
adc
adc
inc
mov
loope
mov
arpl
xchg
fwait
inc
xor
aad
decb
jb
dec
outsl
popa
fs
add
mov
jb
jns
jns
testb
lods
jle
je
adc
or
aas
or
outsl
outsl
insb
xor
push
or
outsl
fbstp
flds
rcll
inc
add
std
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
lea
adc
or
and
std
insl
or
mov
jp
call
and
incl
insl
fstpt
das
or
repz
and
xor
jns
aaa
xor
mov
out
ud0
inc
xchg
insl
mov
pop
xchg
sbb
dec
cmp
jge
or
lcall
mov
cld
lock
push
or
icebp
adc
add
mov
bound
push
test
jno
outsb
add
pop
cmp
movsl
dec
mov
mov
lcall
or
push
xorl
call
cli
or
out
mov
mov
inc
das
dec
or
sub
sbb
xor
push
mov
push
in
data16
gs
mov
pop
push
pop
push
outsl
iret
mov
rdmsr
pop
je
wbinvd
pop
insw
subb
lahf
or
xchg
push
fsubrs
sub
and
or
mov
add
repnz
ret
jb
jae
arpl
sti
mov
pop
arpl
je
sbb
imul
je
xchg
or
insb
or
jecxz
and
cmpsl
xchg
ja
or
popf
jl
gs
push
sbb
outsb
arpl
icebp
xchg
js
jb
dec
aam
xchg
mov
and
outsb
je
je
insl
mov
inc
arpl
push
jae
sbb
je
insl
sbb
inc
outsb
pusha
int3
jo
std
imul
jo
or
sbb
xchg
push
mov
inc
imul
test
push
movsb
xor
and
or
popa
int
ds
xorl
dec
ja
inc
dec
bound
mov
or
daa
pusha
ljmp
sbb
xchg
xchg
inc
dec
add
sbb
pop
ja
add
add
add
gs
cwtl
jecxz
adc
add
add
fxch
inc
add
add
cmp
add
das
add
leave
push
testb
push
aaa
pop
pusha
outsl
jns
inc
and
mov
push
cs
ds
js
push
es
xor
xchg
push
pusha
jb,pn
popa
je
out
mov
ss
add
cs
mov
jno
pop
daa
in
stos
mov
rorb
outsl
add
adc
fmuls
sbb
add
lahf
inc
and
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
