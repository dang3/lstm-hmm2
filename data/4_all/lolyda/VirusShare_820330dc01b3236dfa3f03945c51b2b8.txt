mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
lods
mov
outsl
pusha
outsb
mov
cmp
sub
repz
ud1
inc
add
fsubrl
sar
push
fcompl
pop
add
pop
outsb
jg
ljmp
xor
mov
and
push
fs
pushf
jl
or
and
adc
lea
test
push
fidivs
mov
inc
xor
fcomps
pop
lahf
mov
in
std
cmp
or
mov
dec
test
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
idivl
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
push
in
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
sub
sbb
xlat
mov
mov
in
cmpsb
adc
xor
add
xor
and
sub
dec
and
scas
in
in
jecxz
scas
mov
sbb
mov
mov
push
jmp
outsl
jp
or
add
je
mov
jne
imul
dec
mov
lock
cmpb
and
adc
add
inc
xor
adc
add
mov
dec
add
adc
loopne
fisubrs
into
mov
test
jle
lds
sbb
out
jle
mov
push
mov
or
or
popf
dec
or
sti
push
sub
sub
dec
push
sbb
out
in
jne
scas
jecxz
lcall
cs
add
sahf
mov
dec
rorb
add
push
sbb
popa
mov
push
mov
adc
push
cmc
push
sbb
mov
and
xor
add
les
mov
sbb
add
push
xor
rcll
rolb
insb
rdpmc
mov
sub
or
mov
insb
ret
in
and
adc
icebp
pushf
repz
pushf
mov
push
or
sub
or
mov
mov
inc
push
jbe
xor
inc
inc
cmp
mov
cltd
stos
repz
ret
out
and
sbb
adc
and
push
aad
cmp
add
lahf
imul
sub
jo
cltd
stc
inc
xor
sbb
outsb
xor
push
push
test
mov
or
sub
dec
cmp
imul
cmp
push
adc
pop
fcomp
repnz
outsl
dec
pop
adc
loope
push
cmp
xchg
arpl
add
mov
mov
pop
xor
push
stc
jp
xchg
adc
mov
movsl
inc
pop
add
or
push
adcl
pop
dec
mov
push
push
add
sbb
push
lret
cltd
inc
cmp
lock
jmp
mov
or
or
in
aas
inc
cmp
mov
ret
negb
adc
xor
in
adcl
mov
mov
in
subb
sbb
mov
push
push
add
or
push
arpl
mov
cmp
outsb
adc
inc
push
jae
cmpsb
push
adc
adc
pop
dec
adc
in
sbb
mov
adc
push
xchg
sbb
mov
and
xor
xor
mov
lcall
sar
adc
lcall
add
fwait
stc
sbb
ss
push
add
cmpb
jne
test
divl
push
dec
jns
add
hlt
ss
jl
add
out
or
dec
loop
jne
jge
dec
add
push
jle
mov
push
or
lea
ror
mov
movsb
adc
sub
xor
jmp
cmp
jecxz
lret
xorb
ffreep
mov
and
ja
mov
xchg
rorl
jb
sub
sub
fldt
icebp
nop
lods
test
or
sub
push
mov
xor
pop
cmpsb
test
mov
mov
mov
cld
lock
xor
das
adc
inc
push
sbb
ss
in
sbb
scas
andb
sub
jp
cmp
inc
rorb
mov
xor
pop
daa
push
xor
adc
and
and
xchg
lods
push
sbb
adc
mov
loop
sahf
xor
push
in
ds
push
lods
push
in
pop
xor
push
mov
int
test
add
pop
mov
xor
inc
or
fmul
das
or
xor
sub
jb
cmp
movhlps
sbb
dec
jbe
enter
sbb
add
add
mov
test
push
cli
and
push
mov
xor
sub
testl
push
movsb
int
mov
or
dec
sbb
push
sbb
cmpsl
scas
push
out
xor
inc
mulb
mov
sbb
jb
std
adc
adc
or
and
shll
push
add
push
push
inc
outsl
push
adc
mov
or
fnstenv
add
cmp
int3
cmp
cmp
mov
jmp
push
add
dec
push
or
push
and
push
movl
inc
rorb
dec
adc
movl
insl
loopne
mov
add
insl
cli
or
or
xor
ja
and
shlb
sub
adc
jne
fistl
imul
dec
rolb
aaa
shlb
adc
push
pop
pop
fdivl
data16
sub
xchg
out
dec
sbb
xchg
sbb
cmovbe
dec
adc
jb
adc
dec
mov
add
shll
cld
and
push
and
lahf
pusha
and
inc
add
cmp
cwtl
inc
jo
inc
mov
sub
or
jl
mov
ret
push
sbb
sbb
icebp
push
push
adc
jg
add
sbb
dec
adc
addr16
mov
dec
adc
pop
cwtl
movsl
dec
das
scas
cmpsl
cmp
sbb
sub
pop
mov
jle
pusha
call
enter
call
test
lret
adc
sbb
ja
lods
sub
add
add
test
flds
add
mov
add
sub
lret
fsubl
or
sbb
push
push
sbb
push
add
shlb
fs
pop
stos
mov
jmp
push
movl
xchg
cmp
pushf
add
cvtps2pi
insb
aas
clc
push
pop
or
fmull
sbb
jl
insb
jecxz
pusha
xor
rclb
cmp
or
lahf
mov
jmp
fs
inc
outsb
xchg
inc
inc
data16
jmp
add
jbe
or
mov
sbb
pop
stos
mov
jmp
or
imul
xor
pop
mov
add
dec
and
andb
es
stc
lock
cltd
mov
ret
mov
push
pop
mov
test
lods
fimuls
and
adc
lock
mov
mov
pushf
mov
mov
pop
cmp
out
shr
mov
or
test
std
and
mov
js
sahf
stos
pop
movsb
pusha
push
lods
fisttps
mov
push
and
adc
cwtl
sub
fnsave
mov
out
clc
js
lock
clc
pusha
cmc
adc
cmpl
push
je
fstps
popa
sub
int3
insb
mov
adc
mov
add
and
cmp
stos
add
xor
popa
popa
push
sbb
sbb
ret
mov
sub
in
push
cmpsl
pop
mov
fdiv
clc
dec
hlt
lock
shlb
adc
fidivl
movl
clc
out
sbb
dec
int
test
sub
movsb
outsl
pop
jp
sbb
cmp
pop
fs
mov
and
into
or
adc
pusha
ret
movups
in
push
das
or
in
push
push
dec
xor
adc
inc
dec
sti
mov
ljmp
or
rcrb
mov
or
fcmovb
push
aas
dec
lret
push
adc
mov
mov
dec
fwait
push
rolb
xor
inc
out
rcll
ss
inc
mov
inc
sahf
out
ss
dec
in
dec
shrb
push
dec
inc
mov
mov
cmp
sbb
push
repnz
xor
xor
iret
inc
leave
jo
fs
cmp
and
leave
xor
dec
sbb
and
adc
or
cmp
or
xchg
sbb
lea
dec
les
clc
scas
xor
arpl
push
add
call
inc
mov
les
add
push
lock
push
add
js
or
nop
test
out
movsl
dec
into
frstor
ret
cmp
push
flds
cmc
add
pushf
out
bnd
xchg
in
mov
jl
jo
repz
mov
mov
sbb
div
out
add
pop
out
or
js
cli
sub
imul
jl
lods
daa
call
dec
and
pop
pusha
jb
cmp
pop
jns
pusha
jne
ret
int
bound
pop
sub
test
into
add
aam
mov
push
add
bound
xchg
or
push
lcall
sub
jle
fadds
push
jmp
mov
jne
xchg
lea
orb
lods
or
scas
xor
dec
push
jo
push
adc
mov
adc
test
add
repz
xor
fbstp
push
jne
xor
movb
and
test
adc
inc
mov
push
ficoml
pop
mov
popa
sar
jne
inc
out
xchg
sbb
int
xchg
or
or
scas
repnz
or
cmp
outsb
mov
pop
dec
xor
cmp
push
xchg
loopne
push
int
sub
adc
test
xchg
movsb
mov
cmp
aas
sbb
ja
mov
cmp
lsl
sar
mov
ss
adc
call
call
add
xlat
push
push
sbb
leave
inc
fistpl
jae,pn
daa
jne
push
das
xor
adc
cltd
idiv
mov
mov
add
mov
cmp
xchg
loop
jb
or
sbb
cmp
jg
arpl
mov
cmovo
push
or
lock
in
sbb
flds
sbb
sbb
enter
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
sbb
sbb
push
sbb
sbb
dec
sbb
sbb
inc
inc
cmp
sbb
sbb
xor
sub
sbb
sbb
and
sbb
sbb
sbb
adc
or
stc
sbb
sbb
cld
inc
clc
inc
lahf
iret
out
rolb
mov
inc
nop
inc
mov
mov
movsb
test
mov
mov
inc
sbb
sbb
enter
sbb
fcomp
add
xor
in
lock
pop
aad
sbb
shlb
sub
sbb
mov
push
pop
jge
lcall
pop
or
sbb
dec
ret
push
xor
add
rolb
inc
addl
mov
xor
mov
in
pop
ljmp
inc
orl
popf
in
adc
inc
dec
fmull
or
mov
fmuls
cmpsb
jg
sbbl
sbb
out
mov
add
insb
push
or
aam
inc
jbe
xchg
ficoml
or
pushf
push
add
add
nop
mov
fildll
xchg
mov
sti
mov
cmpb
jne
inc
or
add
or
push
nop
add
jbe
aam
dec
movsb
in
das
jge
cld
inc
testb
in
movzwl
jmp
sub
jbe
jmp
push
pop
pusha
push
push
and
xlat
insl
pop
push
imul
mov
mov
or
dec
mov
pop
mov
push
lcall
test
xor
dec
mov
add
xor
mov
ret
inc
lock
lahf
mov
adc
xor
sar
pop
scas
sub
test
mov
mov
mov
push
and
pop
test
jmp
lock
jb
mov
inc
gs
out
sbb
mov
adc
out
int3
in
cmpsl
js
add
or
adc
out
lea
add
xor
enter
xchg
inc
adc
add
mov
nop
je
add
insb
inc
bound
push
inc
pop
and
or
dec
js
dec
xor
shrl
test
lret
lcall
lods
mov
enter
push
dec
insb
shll
inc
dec
jnp
pop
outsb
jmp
push
add
adc
pop
or
in
jb
or
sbb
movsl
leave
adc
mov
pop
lea
or
adc
add
mov
jp
int
fldt
xor
adc
add
mov
comiss
repz
sub
jmp
scas
jmp
sub
adc
aaa
inc
out
arpl
lcall
pop
shlb
xchg
idivl
pop
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
xlat
jne
xlat
testl
adc
dec
mov
mov
je
addr16
push
push
addr16
fnstenv
xlat
movsl
addr16
mov
adc
mov
adcl
push
rcrb
jne
cli
or
int
shll
mov
fcmove
xor
shll
stos
lcall
pusha
push
dec
inc
xor
dec
into
les
ss
in
add
adc
lcall
add
xlat
je
roll
hlt
dec
inc
add
dec
cmovge
je
scas
mov
pop
je
shll
or
sub
cmp
sbb
mov
adc
shl
sarb
inc
adc
pop
inc
loope
dec
and
jne
mov
inc
mov
outsb
mov
jmp
adc
shl
pop
adcb
cmpsb
jmp
pop
jo
fs
xor
mov
rclb
pop
push
add
je
roll
xor
sub
and
push
adc
xor
mov
add
das
clc
repnz
shll
aam
gs
xor
mov
push
fsubs
adc
mov
push
and
lldt
adc
int
shlb
and
xor
mov
and
push
add
lcall
xor
and
sbb
jmp
and
push
add
xor
out
call
imul
adc
lcall
stos
add
and
pop
idivl
xor
and
add
jecxz
xchg
insl
outsl
das
rolb
add
orb
inc
enter
js
or
nop
or
sbbb
pop
leave
add
dec
xchg
xchg
push
repnz
dec
push
test
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
into
mov
inc
push
inc
push
dec
xor
cs
insb
pop
push
xor
dec
inc
push
sbb
test
adc
sub
adc
incb
fwait
sar
scas
mov
clc
in
mov
cli
cld
idiv
std
add
clc
cmp
stc
cld
data16
sti
out
or
or
mov
decl
pop
mov
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
outsb
icebp
lcall
pop
popa
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
call
inc
inc
int3
roll
xchg
scas
sbb
mov
and
mov
mov
mov
sub
movsl
and
pop
mov
mov
cmp
mov
mov
outsl
lcall
dec
pop
in
xchg
cltd
nop
mov
stc
std
cs
fldcw
adc
cld
add
daa
push
fwait
push
cmp
rcrl
push
or
or
incb
sti
sbb
outsl
sbb
pop
cld
adc
or
mov
dec
mov
ja
or
fwait
jl
xor
leave
ret
rorl
jbe
fistl
insl
daa
daa
into
out
scas
nop
daa
outsb
pusha
je
arpl
push
pop
movsb
jmp
pop
daa
insb
pop
shlb
xchg
push
insb
or
das
pop
ds
pop
sti
jnp
add
xchg
xor
mov
mov
leave
in
push
or
daa
sub
int3
cmpsb
aas
out
or
aaa
decb
push
mov
jnp
add
mov
xchg
xchg
inc
push
std
jmp
or
pushl
inc
add
dec
dec
stc
adc
jb
sbb
cmc
std
dec
gs
idiv
push
jmp
arpl
aaa
arpl
testl
daa
pusha
sbb
testl
push
pop
cmpb
jmp
gs
pop
mov
out
jecxz
jp
sahf
divb
dec
mov
push
bound
xor
dec
out
test
movsl
movsl
mov
and
cs
test
idiv
in
dec
mov
pop
xor
insl
testl
jle
dec
data16
push
or
mov
data16
call
test
push
add
fs
jge
imulb
mov
or
mov
cli
adc
mov
dec
xchg
mov
adc
dec
push
push
mov
xchg
outsb
inc
xchg
loop
xlat
mov
mov
or
arpl
out
mov
cld
cld
insb
das
mov
mov
jne
cld
clc
sbbb
cmp
mov
outsb
ljmp
cli
test
cmpsb
mov
iret
int3
negb
pop
lock
push
adcb
fwait
adc
aaa
mov
lods
mov
cmp
shrb
loope
pusha
mov
dec
in
dec
std
cmpb
ja
imulb
mov
fwait
js
ja
cmpsb
bound
mov
push
xchg
jg
andb
out
cmpsl
pop
cmpsb
test
test
notl
or
push
test
dec
adc
push
xor
xchg
insb
jge
adc
jl
adc
jae
clc
std
jnp
mov
daa
out
mov
loop
stc
test
mov
outsl
dec
addr16
push
xor
push
mov
jle
lods
icebp
inc
test
xchg
call
jg
decl
pop
ljmp
test
pusha
in
in
cmp
inc
outsl
mov
cld
mov
mul
inc
dec
jp
adc
fwait
out
out
loope
std
ja
jnp
adc
sti
lcall
dec
jle
push
jo
divb
fdivr
xor
call
jg
dec
xchg
imul
cmp
mov
dec
pop
inc
cli
cmp
adc
inc
hlt
or
sbb
jmp
pop
mov
dec
iret
sarb
push
jecxz
outsl
xor
adc
test
dec
fbld
dec
xchg
sbb
sbb
push
push
lahf
pop
xor
inc
call
lahf
dec
dec
cld
mov
loope
push
dec
insb
stc
jle
add
into
gs
mov
mov
stc
xchg
std
inc
stc
jecxz
les
push
xor
ja
das
sti
xchg
sbb
inc
mov
add
pop
cmpl
fildl
mov
push
loopne
bound
lock
push
pop
repz
outsl
std
fistpll
or
or
jmp
pop
push
push
mov
dec
push
dec
addb
inc
stc
push
sub
data16
add
add
dec
test
sbb
pop
loop
dec
test
adc
cmp
or
outsl
notl
outsl
das
mov
jg
sbb
es
clc
mov
pop
xor
mov
dec
xchg
addl
jecxz
hlt
lock
negl
sub
dec
dec
popa
cmp
pop
fs
pop
pop
js
sub
and
add
xor
xchg
std
sub
jecxz
inc
mov
sbbl
add
bound
dec
xchg
sar
push
in
adc
inc
out
and
pop
xchg
icebp
xchg
in
ja
xchg
test
sbb
cmp
outsl
jg
aaa
pop
outsl
and
adc
add
stc
jo
lods
jb
loop
inc
gs
push
add
loopne
ret
pushl
in
push
dec
push
dec
dec
pop
notl
aad
sbb
fs
xchg
icebp
or
outsb
jge
mov
pop
jae
dec
push
sub
adcl
inc
pusha
lods
or
sti
repnz
inc
aad
pop
jnp
imul
inc
outsl
outsl
fistpll
adc
push
stc
rcll
test
out
mov
dec
dec
sub
or
xchg
dec
or
out
das
lods
dec
dec
or
or
mov
rorb
add
divb
dec
or
repz
fmull
xor
inc
xor
push
clc
in
sbb
pop
daa
imul
out
mov
fildll
pop
push
push
les
and
loope
stos
notl
mov
dec
inc
mov
addl
out
pop
cmp
xor
ret
loop
add
data16
sbb
mov
jb
xchg
cwtl
clc
dec
mov
pop
jg
or
daa
cwtl
loopne
add
arpl
mov
mov
lcall
jg
dec
push
decb
das
shlb
jl
dec
or
outsb
push
add
mov
sar
mov
mov
cs
pop
fldlg2
movsl
popa
cmpsl
mov
lods
flds
addr16
shl
or
insl
arpl
add
fs
fldenv
mov
pop
imul
dec
stos
iret
out
andl
cmpb
mov
inc
in
std
aam
dec
test
loope
fs
or
jg
pop
or
repnz
std
jge
adc
dec
xchg
loope
pop
or
jl
clc
das
xchg
mull
lret
loope
add
xor
add
cld
mov
jne
leave
out
add
mov
dec
dec
popa
decl
pop
test
push
cld
outsb
test
jnp
cld
std
xor
sbb
pusha
movsb
insl
cli
adc
in
or
add
jecxz
pop
mov
sbb
ret
sbb
fcmovnu
mov
cmp
and
lahf
jl,pn
mov
jns
andl
sahf
lea
xlat
das
loopne
ja
add
mov
add
pusha
sub
pop
push
cmp
cmp
cmc
mov
jae
std
xor
mov
dec
int
jp
sarl
or
fwait
daa
ja
mov
test
jns
stos
popa
mov
add
adc
mov
jl
ret
pushf
fwait
and
out
dec
ljmp
mov
notl
rcll
inc
fs
sbb
or
leave
jl
pusha
pop
mov
cmp
pop
orb
xchg
movl
rclb
cmp
inc
and
ja
jg
jmp
inc
iret
out
in
test
sub
xchg
xchg
ss
xchg
ljmp
jno
mov
jecxz
add
addb
mov
dec
lock
cld
push
add
pop
sub
mov
xor
shl
testl
leave
xor
loope
mov
xchg
or
inc
data16
pop
pop
test
fcmovnb
push
or
xchg
cld
cmp
lock
in
mov
aaa
aaa
ja
xor
jo
shl
dec
jecxz
inc
ja
orl
in
vmovq
mov
inc
fstpt
jmp
out
jle
sub
xlat
insb
add
jmp
sar
push
call
or
int
insb
push
push
inc
mov
push
xchg
addb
jle
test
and
inc
in
inc
mov
repz
push
sbb
dec
invd
pop
bound
jp
mov
lea
jmp
loope
push
loope
jnp
adc
or
add
xor
jle
cltd
gs
add
notb
xchg
and
inc
jg
pop
push
mov
mov
push
fildl
dec
outsl
mov
xor
push
sbb
cmp
insl
fists
jne
loope
jmp
add
sub
pop
push
mov
pop
dec
popa
test
and
bound
ja
xchg
cld
jl
jne
gs
lret
mov
fucom
pop
and
aad
pop
pusha
ret
sbb
fbstp
orl
test
in
xor
push
pop
adc
mov
orb
repnz
xor
dec
das
dec
mov
loop
testl
mov
enter
jl
mov
adc
bound
adc
pop
jo
arpl
in
test
std
jns
hlt
cld
outsb
shlb
fs
lea
icebp
test
add
ret
ds
push
ret
jle
sub
mov
clc
or
cmc
cmp
pushl
outsl
lcall
jp
fisubrl
jmp
jnp
sti
push
arpl
push
jmp
pop
dec
push
mov
jb
faddl
iret
in
lock
mov
cmc
fcomi
stc
jecxz
and
loopne
lcall
jl
repz
ja
push
gs
bound
dec
dec
out
xor
xchg
in
mov
ja
jle
ja
out
das
xchg
and
cmp
mov
or
insb
ja
or
dec
mov
inc
xchg
mov
hlt
ljmp
cmpl
pushf
mov
js
lods
inc
mov
out
addr16
xchg
in
fldt
out
cmp
arpl
lret
hlt
stc
icebp
gs
sti
leave
loop
shrb
lahf
or
xchg
add
nop
fildl
in
ret
sub
call
gs
jmp
imul
scas
faddp
sbb
popa
into
jnp
mov
pop
movsl
outsl
in
pop
pop
jecxz
icebp
jge
push
clc
jg
aas
mov
cmp
sub
pop
insb
jno
aaa
jno
jno
cmp
incl
cmp
jle
testl
inc
dec
jmp
push
pop
stos
mov
fdivrp
mov
mov
pop
je
dec
hlt
mov
mov
mov
out
jle
repz
fistpll
daa
xchg
pop
test
adc
mov
adc
jmp
lea
fdivrs
pop
outsl
js
add
jg
bound
pop
push
aaa
xor
mov
pop
xchg
mov
lods
fwait
dec
scas
pop
in
dec
xorl
cltd
add
mov
insb
xor
loope
outsl
add
sbb
mov
mov
out
int3
pushf
xchg
shll
cmc
mov
xchg
dec
pop
out
sahf
loop
add
hlt
sub
jg
adc
cli
in
sti
testb
mull
les
lret
mov
lods
repnz
repz
cmp
arpl
dec
add
push
not
cmp
jge
push
es
out
out
orb
push
dec
std
mov
inc
clc
sarb
xchg
shrl
cmp
cwtl
ret
pop
subb
mov
or
out
and
inc
jp
or
sub
cmpl
jns
sbbl
lea
or
xchg
arpl
jnp
imul
ss
lds
or
lcall
adc
orl
dec
test
nop
pop
outsb
decl
push
test
xor
push
adc
cli
ret
test
mov
clc
fmull
cmpl
mov
iret
mov
pop
mov
dec
sbb
mov
add
std
dec
or
sub
xor
mov
das
hlt
add
les
add
fadds
bound
das
add
incb
sar
stc
les
cld
cltd
jl
add
std
out
add
fildl
mov
in
sbb
add
in
out
and
jp
sbb
call
xchg
dec
inc
cld
rol
fisttpl
daa
repz
add
rolb
sbb
cli
das
xrelease
xor
insl
das
mov
cmp
sbb
jno
divl
sarl
add
orl
xchg
divl
repz
into
call
pop
ret
fisttps
xchg
dec
mov
outsl
dec
adcl
int3
outsl
inc
neg
pop
pop
cmp
push
or
jnp
ret
inc
jnp
sti
mov
lahf
sbb
adc
hlt
fcomip
cld
aaa
adc
pop
cmp
ljmp
icebp
sbb
pop
imul
jb
inc
call
mov
adc
cli
arpl
push
pop
mov
cmp
or
pop
mov
iret
inc
loop
inc
cmp
lds
dec
adc
jge
xor
add
mov
or
dec
mov
mov
mov
test
push
fistpll
inc
or
or
inc
cmp
or
lods
and
mov
stc
pop
sarl
dec
outsl
jp
mov
jmp
jle
add
pop
addb
cmpl
pusha
adcl
std
iret
iret
add
fsubrs
fstpl
adc
ja
fiadds
xchg
arpl
sbb
xor
add
popa
rorb
js
std
xchg
out
divb
cmp
pop
xor
push
divl
rcll
int
pop
mov
pop
test
inc
cmp
gs
push
mov
out
or
sub
cmp
insl
push
pop
jnp
dec
pusha
scas
adc
cli
rcrl
icebp
rolb
sbb
les
pop
fwait
daa
push
dec
arpl
push
mov
mov
ffree
cwtl
xor
imul
jecxz
mov
or
test
and
jno
outsl
clc
outsb
pop
sbb
rclb
arpl
adc
scas
mov
pop
or
xor
daa
and
stos
sti
push
divb
ficoml
loope
dec
xchg
mov
mov
push
lret
dec
or
not
jo,pn
pop
fsts
push
push
inc
xor
dec
dec
cld
jae
iret
cmp
cs
mov
lock
cmp
sub
gs
out
dec
arpl
pop
insl
mov
or
testb
sub
mov
stos
dec
xchg
cmp
inc
sub
call
cltd
pop
idivl
int
es
arpl
fs
inc
add
ffreep
or
insl
xor
cmp
dec
pop
bound
sbb
fstps
ljmp
mov
mov
push
mov
jmp
sahf
in
cmp
or
data16
sti
pop
fsubrl
fmuls
mov
subb
out
pop
mov
ret
cmp
fldenv
add
jmp
fs
mov
xchg
jmp
fistpll
out
xchg
jle
adc
addr16
pop
not
outsl
mov
fldl
popf
jmp
outsb
sbb
jmp
push
sub
mov
push
hlt
testl
dec
icebp
pop
iret
dec
icebp
pop
orl
push
test
dec
inc
dec
sbb
push
sub
ds
cmp
sti
dec
lahf
xor
in
mov
cmp
mov
push
sub
jo
retw
mov
and
repz
das
repz
repz
repnz
inc
daa
mov
xchg
cmp
dec
xchg
std
push
xor
add
add
ss
imul
or
xlat
test
mov
sub
sar
xorl
fdivrl
sti
jb
jb
or
push
dec
dec
mov
outsl
insb
mov
call
out
data16
outsl
sub
orb
sub
adc
lods
dec
mov
insl
dec
fists
add
jno
lods
pop
or
test
mul
mov
jecxz
movsl
idivb
daa
dec
push
ss
sbb
adc
sub
add
popa
outsl
add
mov
or
xchg
dec
clc
loop
insl
jge
mov
in
idiv
loope
pushl
in
call
ja
mov
push
ss
jo
dec
xchg
fwait
insb
loop
movhps
shll
inc
add
cmp
xor
repnz
cmp
xchg
outsb
adc
test
xchg
fsubs
or
addl
loop
cmp
call
adc
pop
pop
out
iret
es
stc
pop
movsl
add
shr
aas
sub
inc
mov
pop
std
add
dec
test
jmp
or
rorb
mov
std
push
fisttps
add
insl
adc
push
loop
jne
outsb
ds
ret
inc
test
inc
add
and
pop
pop
mov
dec
lds
popa
icebp
sbb
push
xor
call
inc
push
jecxz
pop
mov
xor
push
xor
sti
out
pop
fbstp
cs
mov
cmp
lret
shl
jle
div
subl
inc
out
cmp
dec
inc
shrl
lds
or
incl
lods
add
add
test
out
pop
jge
adc
jecxz
mov
sub
mov
or
xchg
jp
mov
pop
jb
xor
or
test
lea
sbb
test
int
ret
push
mov
dec
adc
dec
mov
in
test
push
in
orb
or
inc
add
lea
outsl
cld
dec
push
fidivl
mov
sub
cld
mov
cli
fisttps
push
in
xor
and
add
adc
call
aad
iret
insb
add
repz
sarl
mov
add
test
hlt
push
or
pusha
xor
addr16
add
push
inc
decl
clc
adc
js
xchg
aaa
xchg
sbb
fs
pop
xor
dec
aad
cmp
cmp
shr
push
xor
adc
mov
or
xor
jb
test
jp
test
jo
xorb
ret
ret
int
adc
xor
ja
popf
fisttps
inc
xchg
mov
outsl
inc
xchg
jno
das
pop
loopne
sub
adc
push
clc
test
pop
push
sub
jmp
sbb
std
or
jb
jo
xorb
jge
imul
mov
in
je
jno
inc
inc
push
jg
pop
adc
jnp
sbb
mov
decb
divl
jp
mov
fcmovnb
sbbb
xor
std
out
sbbl
xchg
call
addb
test
leave
loopne
in
lret
test
mov
dec
inc
pop
arpl
mov
scas
jle
insl
daa
xchg
movb
ljmp
jns
jl
and
pop
jb
mov
aas
xor
or
cmpsl
lea
imul
loopne
mov
xchg
push
xor
cmc
dec
in
fisubrl
xchg
xchg
insb
sbb
das
push
xchg
xor
xor
fisttpl
push
test
outsl
cs
sbb
arpl
in
sub
mov
push
inc
sub
sub
lods
mov
cmp
pop
popf
xor
fldcw
mov
cmpl
xchg
xchg
test
hlt
jno
add
out
loop
lock
push
insl
add
testl
or
push
pop
mov
xor
inc
add
pop
cmp
add
mov
fs
subl
repz
jno
push
stos
fs
out
pop
mull
test
shlb
inc
stc
jae
movl
xor
popa
jmp
adc
inc
or
ja
or
stos
add
outsb
add
xchg
out
dec
std
sub
add
mov
add
in
ss
std
xchg
xchg
repnz
ss
ret
mov
pop
xchg
sbb
hlt
pop
xor
int3
add
je
icebp
popa
imul
push
data16
push
ljmp
stos
icebp
movsl
out
mov
outsb
cmp
add
lret
testl
inc
enter
jnp
sub
mov
push
pop
or
ret
in
clc
mov
cli
pop
out
jl
imull
cmp
jle
pop
mov
ljmp
ret
adc
dec
cwtl
or
insb
daa
imul
negb
arpl
jge
xor
sub
fst
pop
mov
sub
mov
add
sti
pop
xlat
add
insl
mov
loop
ds
js
or
stc
cmp
in
xchg
std
adc
cmpb
cli
insl
mov
inc
aas
arpl
outsl
pop
dec
test
fisubrl
xor
insb
or
out
mov
ret
lds
pop
rclb
dec
push
call
cmp
imul
pop
addr16
jmp
jo
mov
outsl
dec
insl
std
test
ss
cld
addb
lock
or
loop
sbb
push
fildl
mov
inc
imul
fcomps
std
test
push
jmp
pop
pop
add
in
pop
aaa
push
outsb
or
adc
dec
add
add
mov
cld
jmp
sti
push
jl
cld
insb
or
movsl
cmp
lahf
lock
pop
mov
iret
outsb
push
xchg
sbb
mov
sbb
xlat
daa
incl
mov
sbb
subl
lahf
mov
clc
pushf
pop
pop
mov
add
xchg
fldcw
std
push
cltd
sahf
add
jg
or
pop
mov
dec
mov
loopne
jmp
xor
mov
insl
ss
pop
dec
cld
push
jle
jno
sub
cli
aaa
and
fidivl
repnz
xor
lea
into
fs
pop
std
movsl
idiv
jo
mulb
dec
cmc
push
push
gs
popa
jmp
push
imul
loope
mov
pop
movsl
pop
jns
jno
adc
pop
mov
adc
addb
pop
pop
inc
and
xchg
jle
pusha
dec
push
sub
push
push
cli
cmc
mov
xorl
jo
push
std
xchg
lahf
push
pop
dec
arpl
shll
icebp
jl
hlt
pop
xor
repz
icebp
daa
jle
cli
jns
ljmp
outsl
in
out
jnp
add
notl
push
sub
fwait
mov
xchg
sub
inc
and
jle
adc
adc
pop
fidivrl
and
mov
mov
insb
dec
cld
test
test
inc
movsl
ja
mov
jo
cmpb
cmc
outsl
mov
push
mov
aas
xchg
and
orl
std
lcall
mov
test
or
inc
and
ds
insb
dec
orb
call
jl
pop
cmp
push
mov
out
mov
cli
adc
imul
dec
cmc
test
and
sub
cmp
daa
in
sbb
mov
mov
test
mov
xor
and
repz
pusha
mov
and
movb
scas
sbb
repz
jmp
and
inc
and
dec
pop
leave
dec
push
addr16
add
xchg
push
push
pop
pop
and
pop
mov
ja
pushl
mov
mov
out
push
dec
push
aam
cmp
xor
pusha
ret
cmp
pop
cmpl
test
push
fistl
fdivs
xor
aam
icebp
push
dec
dec
lahf
jmp
mov
or
add
mov
outsb
adc
push
xor
cmpsb
incb
outsl
gs
xchg
mov
fisubs
ror
mov
xor
push
dec
inc
xor
test
test
jge
loop
das
daa
pop
mov
jle
stos
out
das
fisttpl
icebp
or
mov
add
and
incl
xor
add
mov
mov
push
test
push
push
dec
sti
mov
js
add
test
divb
dec
mov
std
jo
jo
dec
sbb
sub
push
add
rcrb
mov
std
dec
loope
das
cltd
frstor
ljmp
ret
stos
dec
dec
mov
shrb
outsb
sub
push
xlat
dec
out
in
ja
fldenv
nop
sbbb
arpl
add
popf
mov
mov
pop
add
popf
or
mov
sub
mov
scas
mov
or
sti
aaa
mov
pop
or
jmp
sarl
inc
aad
insb
mov
mov
jl
out
sub
mov
xchg
adc
les
mov
xlat
inc
pop
mov
lret
xchg
lock
loop
cs
insb
jno
inc
pop
cmp
imul
outsl
sub
cmc
hlt
fildll
je
movsl
outsl
xchg
ss
bnd
jb
sub
lcall
lret
sti
insb
push
cmpb
les
icebp
insb
loope
mov
dec
call
push
dec
out
xchg
std
ja
jge
add
jecxz
lahf
jle
pop
jmp
dec
mov
mov
cli
jmp
pusha
fstpl
mov
call
inc
jmp
repz
push
rcl
fld
adc
push
or
ror
xor
mov
cmc
dec
jge
notw
leave
test
mov
mov
and
dec
cmp
sbbl
hlt
pop
data16
testl
or
mov
dec
icebp
pop
mov
xor
aaa
sub
inc
sahf
or
loopne
testl
aaa
mov
adc
inc
and
sbb
loope
fldcw
in
xchg
mov
and
dec
loop
xor
mov
enter
dec
push
pop
or
bound
mov
arpl
sub
call
push
sub
mov
cmc
cmp
out
cmp
adcl
pop
lahf
push
mov
scas
js
andb
mov
or
test
jecxz
mov
adc
dec
xchg
mov
adc
mov
jle
or
lods
lods
add
negl
rcll
out
sbb
jmp
mov
loopne
jmp
stc
out
pop
push
cltd
push
add
mov
ja
cld
mov
aad
and
notl
mov
mov
outsl
ss
adc
inc
or
xchg
aas
scas
clc
outsl
jecxz
pop
or
fcmovu
insl
jg
mov
and
shll
dec
arpl
in
mov
mov
in
ja
dec
mov
mov
aad
test
sbb
cmp
jg
loope
sub
subb
sarl
xor
pop
xchg
inc
jo
fbld
mov
cli
call
cs
jle
fildl
xchg
imul
or
jge
std
add
aaa
add
lret
pop
inc
dec
dec
mov
loop
adc
pop
lahf
in
add
mov
mov
sar
stos
outsb
sti
add
jne
arpl
sar
pop
push
add
adc
lret
mov
mov
xlat
aaa
fidivs
xlat
sub
das
sub
jo
lods
loope
add
sub
cmp
mov
xchg
add
add
dec
jmp
and
mov
xor
mov
test
inc
jno
fildl
adc
arpl
sbb
mov
pop
jns
cli
std
bound
lock
pusha
cmpsb
cmpsb
push
cs
adc
js
mov
dec
out
clc
push
dec
add
lret
push
mov
push
lods
cli
iret
push
cmp
pop
bound
and
sbb
call
jmp
xchg
mov
push
or
adcl
mov
pop
inc
adc
ljmp
xchg
frstor
mov
hlt
mov
jg
xchg
shrl
cmp
arpl
mov
rcrl
jg
repnz
movsl
pop
ja
mull
dec
dec
outsl
jl
cmp
nop
inc
push
push
or
xor
sbb
adc
and
fs
push
add
das
outsb
inc
popf
or
sar
or
mov
shll
outsl
push
cmp
std
xor
cmp
pusha
xlat
xchg
outsb
pop
dec
dec
adc
sbbb
movsl
and
fnstenv
sahf
adc
and
je
jae
cwtl
add
xor
or
out
lds
push
push
loop
or
pushf
icebp
add
xchg
adc
mov
jno
clc
fldt
adc
xchg
pop
lret
incb
inc
mov
aas
ljmp
ds
jge
jg
xor
jle
ja
jbe
push
or
xor
dec
pop
xchg
push
mov
das
fidivrs
sbb
ja
push
sub
sub
add
pop
pop
or
aad
mov
pop
insl
mov
mov
sbb
std
out
sub
test
lock
pop
adc
test
pop
push
push
pusha
lahf
pop
cs
cmp
dec
cmp
data16
ret
sub
mov
sub
add
adc
dec
bound
jge
js
shll
pop
pop
jge
call
jne
mov
inc
adcl
pop
jp
add
aam
sub
jae
out
pop
loopne
jle
mov
ret
call
inc
mov
std
cmpsl
insl
xchg
movsl
stos
rcrl
xor
add
mov
pusha
xchg
das
insl
inc
xor
add
xchg
mov
daa
xchg
mov
push
mov
push
xor
push
xchg
cmp
xor
loop
test
mov
fcmove
shlb
sub
in
fists
fcomps
jge
adc
cmp
icebp
mov
jno
call
add
in
cmp
mov
mov
adc
leave
lcall
push
jg
mov
sub
pop
pop
xchg
addr16
aas
add
outsl
add
sbb
std
inc
xchg
sub
pop
cltd
into
inc
cli
sub
test
and
mov
mov
stc
xchg
jnp
ljmp
cmc
and
inc
jb
test
fs
jbe
test
insl
push
mov
cmc
das
adc
add
sub
shlb
cmp
mov
mov
cmp
ficomps
dec
cwtl
inc
inc
out
test
aas
jb
sbb
rcr
cltd
mov
mov
xlat
arpl
popa
add
or
pop
int
mov
mov
jg
rorb
mov
aad
jo
js
lea
add
jge
cmp
mov
inc
mov
mov
bound
jg
inc
icebp
push
mov
jecxz
jg
add
pop
pusha
or
icebp
add
mov
push
mov
les
in
int
jp
insb
cli
jo
adc
cmp
mov
arpl
dec
arpl
insb
sub
adc
jl
or
mov
mov
shrb
mov
jg
fiadds
inc
test
add
repnz
sub
in
aad
pop
cmp
lea
loopne
xor
in
inc
fldpi
out
testb
mov
loop
popa
rorb
ret
jg
add
bound
in
popa
test
pop
push
push
push
cmpsb
test
cmp
jne
push
jmp
xor
fbld
loope
adc
adcb
adc
das
or
leave
scas
jl
aad
sbbb
imul
inc
jne
idivb
jo
or
out
dec
stc
and
daa
out
ret
ss
out
and
cmp
or
in
fldenv
popf
fnsave
ror
insb
jg
mov
sbb
call
fwait
call
sub
or
xlat
arpl
imul
fistl
pop
mov
push
mov
gs
in
arpl
jp
das
negl
icebp
push
dec
cmp
jmp
xchg
scas
xor
jno
int
lcall
outsb
add
mov
mov
xor
jecxz
btr
insb
sub
mov
mov
test
stc
into
dec
push
mov
pop
lds
add
dec
scas
cmp
ja
in
pop
in
cmpsl
mov
test
pop
loope
push
cmp
imul
fildll
scas
mov
jl
xchg
repz
jbe
in
arpl
push
mov
xor
cs
push
ja
out
mov
icebp
inc
and
daa
negb
sub
fbstp
in
pop
jle
hlt
dec
jno
adc
lds
mov
xchg
rorl
test
or
add
std
ret
jecxz
push
jne
or
adc
jae
sub
in
loop
inc
and
xchg
push
pand
hlt
inc
push
add
mov
outsl
adc
call
icebp
ja
outsl
arpl
je
mov
mov
in
repnz
cmc
out
mov
fwait
pop
inc
aaa
xor
stos
sub
ss
fwait
sub
lret
and
dec
sbb
sub
int3
fdivrs
sbb
cld
pop
jmp
cs
push
jecxz
and
inc
and
push
xor
fstpl
add
rol
insb
aaa
outsb
push
fildl
mov
sub
adc
popf
mov
or
sarl
pop
fists
and
das
adc
hlt
xor
int
aam
add
jno
push
insl
mov
rolb
mov
dec
pop
fs
push
inc
inc
or
or
scas
push
xor
repz
pmulhw
and
das
jl
filds
aam
sbb
jmp
dec
inc
nop
stc
pop
pushf
notl
dec
std
sbb
sbb
pop
add
jne
mov
xchg
inc
jnp
push
cmc
cmp
mov
sub
cmpsl
sbb
or
scas
xchg
xchg
mov
stos
icebp
popf
xchg
test
push
fimull
sub
add
mov
aas
sbb
dec
daa
cmpsl
jno
jo
pop
pop
mull
lahf
in
lock
icebp
fistpll
jle
or
hlt
inc
outsl
ss
iret
sbb
push
sub
addb
pop
adc
sbb
stos
test
repz
cmp
pop
xchg
repz
adc
ljmp
ja
gs
push
inc
fsubrp
popf
neg
and
repz
popf
div
sbb
outsb
xor
mov
mov
mov
push
add
cmpl
aas
lods
test
movsl
push
or
jbe
out
jp
insl
add
mov
mov
jp
sti
add
repz
fdivs
aaa
dec
jg
lret
jne
mov
orb
cmc
aas
dec
dec
out
pop
jo
je
in
loope
add
icebp
mov
rcl
inc
push
or
movsl
cmpsb
ficoml
mov
add
roll
stc
jo
lods
loopne
pcmpgtw
mov
inc
pop
dec
out
sbb
mov
inc
mov
imul
ja
xchg
jo
cli
cmc
std
lret
cmp
into
shrb
add
xor
fdivrl
clc
add
cmp
lahf
or
aad
aas
add
les
jg
cld
jae
repnz
mov
sarl
add
push
mull
pop
add
loop
test
ret
adc
loop
mov
add
jno
adc
dec
je
or
cmp
pop
iret
add
sti
adc
sub
push
enter
ret
xlat
jle
add
xchg
dec
jp
sar
add
lret
aad
in
ljmp
mov
inc
movsb
jge
inc
jns
outsl
rorl
out
sbb
jmp
inc
and
je
cld
pop
outsl
out
mov
or
ljmp
stc
cmpsl
xor
sub
xchg
mov
movl
adc
sbb
push
sub
mov
mov
jmp
add
arpl
sarl
jb
movsb
pop
jae
out
inc
push
xabort
pop
sbb
mov
ficomps
or
inc
cltd
mov
push
in
sbb
and
addr16
and
mov
and
cmpb
inc
cli
out
jbe
add
ud0
mov
mov
sbb
mov
add
add
push
dec
loop
out
push
add
jne
or
shrb
inc
rorl
xor
insb
mov
rorl
adc
bnd
arpl
fucomp
sub
aaa
loopne
jle
ret
decb
xchg
add
outsb
ljmp
test
xor
pusha
push
or
outsl
mov
icebp
leave
fs
std
pop
or
xchg
sbb
xchg
sub
mov
add
pop
or
repz
lahf
cmpsl
cmp
hlt
add
add
out
arpl
mov
outsb
icebp
mov
pop
push
dec
adc
dec
out
nop
or
inc
xor
xchg
bound
in
or
push
imul
sarl
fidivrl
jp
fadds
sub
repz
dec
repz
out
andl
mov
fcomip
ret
add
mov
sub
or
mov
decl
in
mov
push
xor
cmp
cld
rorl
push
sti
dec
das
mov
fdivp
push
mov
ja
cmpsl
jnp
fcomps
jge
fs
pop
or
pop
cmc
add
dec
incb
arpl
mov
cmpb
dec
cmp
cli
dec
dec
rclb
mov
dec
dec
arpl
stc
shlb
adcl
outsl
scas
repnz
lock
pop
pop
jno
iret
jmp
or
push
test
lcall
adc
dec
in
jnp
hlt
test
subl
das
cli
rcll
and
loopne
es
lods
sbb
shlb
insb
test
ljmp
mov
mov
cmp
or
sti
rcll
sub
clc
lcall
ret
jb
add
mov
sbb
or
push
sbb
orl
cld
add
nop
std
pop
stos
int
test
mov
std
push
rorl
push
in
das
sar
push
daa
in
test
das
pusha
sub
shlb
in
mov
mov
add
outsl
insb
add
cmp
fldl
insb
jnp
imul
sbb
outsl
pop
popa
shr
test
jge
repz
push
call
jecxz
jg
push
dec
shr
mov
add
push
or
out
int
mov
ret
rclb
sahf
and
lret
ljmp
jb
jmp
data16
sub
mov
int
sbb
add
ret
inc
call
push
lock
pusha
nop
or
rorb
adc
clc
iret
out
inc
and
cmc
addr16
mov
add
sub
orb
fidivrl
push
sar
ja
cs
lock
and
push
xchg
pop
xchg
mov
add
shll
pop
sti
pop
and
xchg
dec
inc
rclb
and
leave
enter
adc
enter
or
add
or
out
cmc
nop
adc
inc
leave
enter
stc
push
xor
clc
add
jb
xor
cmc
roll
xor
icebp
rorl
cmp
in
mov
adc
sbb
sbb
mov
add
cli
mov
inc
jl
xchg
cli
rcll
cmp
icebp
test
inc
pop
mov
add
or
sbb
pop
pop
fwait
mov
and
icebp
xchg
mov
in
cli
xchg
lcall
xor
push
sub
mov
inc
ljmp
rorl
pop
stos
sbbl
jbe
fwait
lock
xchg
sbb
and
xchg
iret
lods
out
imulb
es
pop
pushf
and
sub
mov
std
lret
xchg
push
sub
mov
push
jecxz
adc
aaa
daa
shr
arpl
das
dec
push
sbb
sahf
push
pop
rorb
add
sbb
xlat
dec
mov
test
sub
mov
mov
das
mov
test
jbe
das
testb
mov
cs
lods
mov
add
mov
mov
add
pop
jle
js
lea
sbbb
add
std
xor
ret
and
insb
rolb
pop
mov
cmc
mov
lock
pop
push
push
sub
add
call
js
push
cmc
mov
dec
sbbb
add
lods
std
movl
xchg
add
add
test
mov
cmc
addb
adc
inc
xor
jne
pop
test
xor
add
aad
add
rorb
xor
js
clc
hlt
mov
pop
nop
pop
stc
jno
mov
fistpl
push
popa
pop
jno
mov
and
cmpb
sbb
outsb
pop
lods
aad
cld
jp
sub
je
cli
jae
and
pop
xchg
fildll
adc
xor
sbb
outsb
out
add
cmp
add
and
hlt
add
stos
dec
rorl
shll
push
push
std
or
jp
outsl
inc
ss
and
and
daa
xlat
add
seto
cmp
testb
and
jb
sbbb
sub
jb
pop
inc
into
inc
mov
mov
jge
mov
ljmp
cmp
mov
xchg
inc
clc
xchg
push
mov
test
fistl
mov
dec
imul
loopne
dec
arpl
xchg
xor
push
xchg
push
out
addl
fisttps
xchg
inc
adc
arpl
sti
shlb
std
push
pusha
cmp
hlt
or
mov
sub
insb
cmp
pop
scas
jae
cs
push
cmovo
cvtdq2ps
cld
loope
adc
xor
repnz
dec
in
fbstp
push
in
pop
mov
push
adc
or
jg
sub
pop
push
xor
xchg
add
inc
repz
xor
cli
add
mov
cmp
arpl
xor
cmp
jns
jb
push
inc
fwait
or
aad
mov
push
aad
lcall
popw
sbbl
mov
push
push
add
sub
popl
and
dec
lods
jecxz
or
fcomps
fwait
xchg
pop
or
out
jo
adc
fimuls
xchg
arpl
outsb
lret
mov
inc
xchg
gs
and
cmpl
out
xchg
sbb
stc
jl
push
sbb
jge
push
jns
sub
xchg
jns
addb
movsl
add
outsb
test
decb
fs
mov
dec
jecxz
inc
addb
add
adc
std
cmp
jne
push
mov
lds
roll
lea
or
fs
or
xchg
cmovs
dec
aas
or
fbstp
add
ss
cltd
mov
pushl
rorl
cmpsl
es
out
data16
sub
pushf
pushf
adcl
sub
jmp
pop
mov
pushl
xor
test
jno
in
inc
loopne
roll
dec
aad
sub
or
sbb
adc
sti
push
outsb
je
sbb
dec
inc
clc
test
repz
cmc
clc
jle
sbb
pop
add
cld
in
bound
rcll
fisttpll
lds
nop
movsl
out
adc
add
pop
jmp
xchg
cmp
fwait
xchg
or
jmp
fdivl
sbb
insl
sbb
out
push
or
aas
divl
xor
in
pop
sbb
inc
push
adc
push
mov
xchg
dec
test
adc
mov
js
jno
aad
cli
inc
cmp
inc
enter
push
je
cmp
xchg
inc
out
hlt
adc
jae
daa
lahf
adc
push
and
enter
dec
push
in
sbb
or
or
jle
cli
pop
fdivp
dec
xor
xchg
testb
clc
and
xchg
lahf
popa
jns
or
outsl
pop
in
insl
push
add
testl
xchg
mov
or
cld
mov
nop
mov
loope
sbb
dec
daa
sbb
pusha
fdivrp
lret
add
inc
daa
ljmp
push
or
mull
rcr
pusha
ret
fldenv
lret
pop
add
add
push
cld
frstor
inc
xchg
push
and
ja
lock
mov
out
sar
cld
pusha
xlat
add
insb
fs
rcrl
lahf
and
loopne,pn
stos
inc
into
call
push
fldl
insl
mov
rol
add
cli
or
subb
cmp
dec
mov
mov
dec
add
cld
into
dec
jecxz
sub
fistpl
pop
dec
arpl
add
in
or
xlat
aaa
pop
lock
pop
add
push
imul
std
mov
shrl
rcr
add
jle
sti
adc
std
fstl
xchg
push
clc
dec
outsb
loope
mov
inc
dec
clc
add
mov
fnsave
jg
jo
mov
push
jg
in
outsl
sar
mov
daa
rolb
push
shrl
xchg
loop
insl
add
addr16
jecxz
pop
dec
sbbl
pop
add
dec
sub
in
loopne
mov
xor
out
arpl
push
cltd
test
add
call
sub
je
aad
sbb
sub
and
adc
adcl
idiv
dec
stc
jmp
cli
sbb
inc
insl
add
sti
into
push
push
cmpl
mov
push
dec
xchg
dec
push
fst
in
adc
jge
out
mov
add
lods
or
sbb
fs
push
xor
or
js
inc
mov
fs
xchg
lods
aas
subb
scas
jb
dec
out
or
fists
mov
adc
mov
aaa
insl
or
sub
test
and
mov
lahf
test
mov
mov
rolb
pop
jl
mov
mov
add
pop
in
loopne
or
mov
sbbl
fisttpl
jle
or
and
mov
dec
adc
or
pop
dec
xchg
mov
jg
out
loopne
or
mov
stc
pop
mov
les
test
jae
popa
les
ret
xchg
mov
mov
xor
das
cmc
aaa
jne
aaa
aas
dec
or
xor
daa
add
inc
dec
daa
dec
push
mov
jo
or
sbb
out
sub
dec
mov
push
dec
sub
in
mov
push
push
idivb
ja
sub
mov
pop
dec
push
movsl
inc
jne
arpl
add
in
cmc
dec
push
fimuls
aas
loop
or
cmp
or
jmp
add
test
int
add
mov
popa
xchg
stc
jnp
jl
mov
sub
in
sti
lods
xchg
cmp
mov
dec
push
jo
loopne
pop
mov
ss
add
leave
sbb
testl
and
pop
jge
sbb
jp
call
fstpt
mov
out
sbb
ljmp
clc
adc
movswl
ds
test
lcall
xor
mov
ret
andl
stc
fnstenv
jmp
insl
jno
sub
pop
mov
push
xor
dec
pop
pop
test
mov
jg
add
xchg
jp
add
adc
sti
ds
xorb
outsb
out
fs
sti
mov
insl
clc
inc
push
mov
or
add
test
aam
add
push
orl
or
ljmp
mov
inc
push
sbbb
lods
dec
stc
clc
push
ljmp
lds
mov
dec
idivb
dec
out
jne
ljmp
in
add
popf
shlb
js
push
mov
mov
mov
aaa
add
mov
loope
mov
cmpsl
out
mov
hlt
lds
add
outsb
sbb
inc
cwtl
into
xor
jae
push
cmpsl
incl
mov
xchg
or
divb
lods
cli
jb
loop
in
filds
jp
gs
mov
in
mov
xchg
pop
mov
pop
loopne
and
xor
and
add
dec
leave
mov
or
adc
sub
pop
lock
dec
lea
inc
hlt
gs
adcb
repz
scas
imul
arpl
xchg
jp
in
push
add
dec
scas
arpl
pop
xor
jp
xor
pop
jmp
xor
pusha
lods
pop
adc
jl
lea
icebp
pop
mov
adc
push
xchg
xor
out
aam
movsl
and
jnp
leave
mov
pop
xchg
sbb
mov
add
rcrl
gs
int
aas
fcos
mov
clc
addr16
xchg
out
pop
aas
mov
pusha
outsb
sti
cmp
or
in
std
adc
cli
fwait
dec
daa
sbb
mov
fs
mov
pop
idivl
addl
pop
and
clc
pop
hlt
or
jg
cmp
mov
add
mov
cld
inc
test
xor
aas
out
fs
push
pop
push
gs
pop
clc
int
leave
repz
popa
add
or
or
and
add
out
fists
sub
add
test
test
rcll
popa
dec
cmovo
insl
or
xor
pop
out
aas
fnstcw
or
aad
or
lea
and
rcr
adc
sbb
in
lcall
inc
sbb
sbb
xor
pop
in
xchg
fistps
mov
sar
xor
bound
aaa
adcb
orl
loope
gs
scas
in
pushl
dec
xor
push
inc
addr16
or
dec
aas
pusha
add
jecxz
movsl
or
mov
mov
negb
inc
sti
add
outsl
repz
scas
out
in
push
sbb
dec
out
aam
pop
es
bound
xor
add
in
addb
fs
pop
mov
fmull
and
imul
xchg
sub
and
lock
push
pop
in
mov
sti
out
add
pop
cwtl
imul
shl
idiv
int
pop
stc
jmp
add
adc
pop
insl
repz
cmpb
movsl
in
mov
mull
mov
push
aaa
cmpsb
in
cli
movsb
int3
xlat
inc
insl
or
jns
lret
pop
inc
mov
xchg
mov
pop
add
pop
fs
mov
mov
cld
mov
adc
lods
mov
pop
sub
hlt
and
movsl
xchg
jmp
and
push
gs
and
or
lock
subb
iret
push
lret
out
mov
push
push
mov
insl
mov
mov
rcl
push
fcmovnb
cs
jmp
lret
cmp
inc
jmp
ficoms
cmc
mov
jl
xchg
cld
repz
sbb
mov
aaa
xchg
push
lods
jns
std
pusha
push
mov
push
sbb
add
repz
and
arpl
lahf
in
cli
filds
cmp
rcll
push
dec
mov
sbb
cmpsb
pushw
push
xchg
out
in
xor
mov
call
add
pushf
mov
push
mov
adc
das
fs
sar
incl
mov
xchg
imul
pop
mov
scas
push
push
pcmpeqb
in
dec
aaa
lret
ss
add
sbb
pop
aaa
das
fs
jg
mov
mov
pop
and
jmp
mov
loope
sbb
call
stc
add
fwait
lret
movb
imul
lcall
pop
pop
cmc
push
stc
and
mov
iret
cs
xor
popa
jl
dec
out
ret
push
insl
mov
jmp
aas
dec
fistps
xor
xor
insl
int3
subl
adc
pop
stc
clc
cld
mov
aam
mov
jge
sbb
add
clc
pop
repz
and
and
mov
pop
incb
pop
push
adc
fildll
inc
add
jmp
ds
jge
push
sti
pop
push
pop
test
lea
sub
pushl
cli
decl
repz
push
inc
or
sbb
mov
pop
add
adc
inc
pop
xchg
out
lret
jmp
add
add
xchg
pop
pop
std
jg
int
dec
adc
mov
hlt
leave
sbb
ljmp
sub
inc
adc
inc
sbb
push
pushl
or
into
fldl
decb
sti
aaa
push
sbb
or
xor
or
pop
cs
sti
outsl
movsl
jbe
sub
cltd
push
sti
inc
sbb
mov
push
std
jg
lret
fisttpl
jmp
sub
ret
mov
add
pop
push
popa
sbb
mov
mov
arpl
shrl
shl
mov
mov
aas
cld
decl
or
push
or
xorl
std
ss
push
std
cmp
pop
jo
lods
out
ret
xor
test
lret
out
orb
int
call
pop
cli
incl
xchg
cmpb
hlt
jo
mov
mov
aaa
push
cmp
insb
or
sub
mov
fidivl
sbb
pop
inc
jge
ret
pusha
push
incl
incl
xchg
pop
mov
mov
std
or
sub
mov
adc
adc
cmp
pop
les
push
fists
cmpl
cmp
inc
add
mov
cmpsl
xorb
mov
xchg
cld
ljmp
adc
cmp
cmp
inc
aad
add
dec
outsb
fistpl
jne
pop
adc
push
in
in
mov
jp
pop
dec
insl
add
pop
pop
push
push
pop
les
xchg
add
sti
xlat
and
dec
repz
cmc
xchg
xor
bound
cmc
and
subb
xchg
stc
ja
sbbb
call
movb
insb
mov
arpl
decb
aad
stos
mov
or
mov
addr16
inc
sub
daa
add
negl
iret
xor
pop
or
push
mov
jo
xchg
sbb
xor
mov
push
mov
pop
sub
fwait
sbb
ficoml
mov
mov
and
jge
sbb
mov
fldl
mov
xchg
orl
in
dec
aas
lods
pop
push
cmp
push
outsl
sbb
or
xor
push
jl
add
add
fstpt
jnp
cmp
push
scas
adc
stc
fldl
cld
cli
notb
bound
inc
imul
ret
add
xor
inc
pushf
lea
fwait
daa
mov
pop
cmc
mov
jge
cld
lea
pop
add
cld
xor
test
stos
das
mov
sbb
and
jnp
call
stos
insb
shr
push
jne
adc
dec
jns
mov
jae
outsl
mov
movsl
pusha
add
and
stc
out
push
mov
arpl
movsl
fildl
add
push
pop
add
or
stos
ljmp
mov
push
in
in
add
loopne
push
lds
out
pusha
notl
shl
lret
add
pop
ret
xchg
mov
fbstp
pop
jnp
push
data16
inc
add
jecxz
lods
mov
push
dec
xor
push
in
lea
sub
dec
sub
or
addb
pop
aaa
imul
lock
xor
sti
or
and
sbb
adc
cld
ja,pn
adc
inc
xorl
push
adc
divl
sbb
add
inc
jmp
sti
xlat
pop
rclb
xor
daa
mov
aam
stc
fistpl
xor
cld
fs
mov
xchg
mov
bound
xchg
sub
in
pop
aaa
addr16
in
jecxz
add
mov
jnp
pop
jmp
mov
test
imul
call
sub
mov
push
dec
cli
sar
inc
fldl
or
fwait
arpl
sub
and
cmp
lock
rcll
movsl
pop
jp
insb
pop
push
and
rcrl
imul
mov
cmp
incb
mulb
jns
sub
jg
ja
jg
xor
mov
jg
sahf
call
jmp
stc
jecxz
loopne
fimuls
cs
inc
dec
dec
pusha
mov
dec
inc
out
add
addr16
shrl
push
add
mov
push
push
das
adc
outsb
xchg
sbb
ljmp
and
xchg
xchg
push
sti
rep
icebp
fisttpl
outsb
pop
add
adc
mov
stc
xchg
and
cmp
inc
insl
push
mov
lret
leave
cmp
out
dec
fwait
jg
lds
es
or
testl
and
mov
add
dec
ret
fstpt
das
outsb
enter
or
popa
lcall
and
cmp
and
xchg
add
les
dec
lea
cli
push
gs
push
add
pop
and
out
bound
data16
daa
add
mov
dec
mov
cld
jecxz
int3
idivb
push
mov
mov
add
aaa
std
mov
lahf
jns
testb
xchg
pop
test
mov
or
cmp
inc
mov
mov
lahf
jae
dec
pop
or
jo
xchg
out
jp
cltd
ja
pop
cmp
cmp
xchg
iret
lea
in
cs
arpl
shl
aaa
arpl
jo
pop
loopne
das
jo
or
or
or
push
mov
inc
ds
aas
mov
iret
inc
jle
sti
out
and
and
mov
push
pop
pop
rolb
xchg
neg
ss
jo
test
jl
jae
jle
lea
outsl
lock
and
imull
jle
out
cltd
outsl
inc
mov
imul
push
push
dec
jecxz
stc
mov
add
mov
fwait
push
jl
ficompl
das
inc
add
icebp
pushl
adc
mov
outsb
add
jae
push
testb
mov
fcmovnb
pop
add
aas
mov
je
insb
or
insl
insl
adc
sbb
stc
lret
test
xor
shll
sti
push
outsb
pop
sbb
inc
ss
add
push
jmp
or
jecxz
mov
mov
insl
aaa
and
mov
dec
in
mov
ja
imul
xchg
fdivs
mov
mov
cmpsl
in
daa
das
adc
jb
sbb
mov
mov
add
cld
push
stos
sbb
cmpsl
loop
mov
mov
int3
daa
scas
or
out
xor
adc
mov
test
mov
jl
stc
pop
imul
subb
pop
imul
stos
dec
add
mov
xchg
lea
adc
mov
divl
jbe
jb
je
xor
jb
jne
popf
lods
mov
fucomp
jbe
cmp
inc
jae
jb
pop
pop
jne
je
jo
popf
xor
shll
rcl
sub
lcall
add
repz
in
mov
lret
jno
lcall
popa
dec
sahf
in
lcall
jno
aaa
jns
jb
fdivl
cmc
jbe
js
cs
lret
mov
jbe
js
jns
jnp
mov
jmp
fldcw
loope
xlat
jnp
adc
mov
lods
jl
js
pop
jp
xlat
xor
mov
jge
pop
outsb
jae
cmp
xor
cmc
cltd
xchg
test
xor
shll
fs
dec
inc
repnz
cmp
lret
in
jnp
jno
sub
jnp
xchg
insb
xchg
jne
popf
jae
ret
aad
dec
shll
cmc
das
inc
adc
cmpsb
imul
or
fcomi
int
aad
lret
in
add
jp
dec
jae
out
or
jge
sti
das
mov
insb
xor
js
shll
frstpm(287
jb
jae
jne
jbe
push
sub
fwait
das
js
jne
and
xor
mov
push
sbb
push
push
sub
xlat
pop
scas
dec
add
jecxz
add
jne
sbb
or
and
lods
aas
daa
mov
sbb
mov
jb
push
xchg
fidivs
imul
or
add
fwait
push
scas
and
leave
cmpb
enter
xlat
into
and
xor
pop
push
jmp
jb
and
xchg
xchg
sub
xor
fmull
xlat
jno
jne
daa
iret
lret
ss
add
jne
sti
je
in
xchg
lret
pcmpeqd
insl
jb
js
lret
dec
cwtl
scas
jo
mov
subb
jns
ret
mov
jb
cmp
adc
add
insb
loope
js
lods
gs
dec
shll
insl
ja
mov
cmp
jb
cmp
dec
jne
lret
in
pop
je
jo
jb
mov
scas
iret
mov
lcall
cmp
je
xchg
lret
in
jae
outsl
lds
jb
cmpsb
imul
imul
jb
aaa
js
jb
pop
sti
push
je
jbe
ja
jp
sub
lret
mov
js
pop
daa
xchg
pop
mov
jp
je
xchg
jge
fcmove
ret
mov
lods
add
jp
sbb
mov
aaa
jl
bound
jg
xor
sarl
cmc
pushf
popl
pop
jae
insb
pop
push
dec
inc
cmp
shll
das
and
inc
jl
mov
adc
jne
jbe
jne
sub
in
jno
fwait
je
ret
dec
shll
inc
adc
jmp
pop
jecxz
not
jbe
lcall
adc
add
jl
xor
push
ffree
aam
mov
lcall
cmp
rcr
lea
and
aas
mov
jno
dec
insl
gs
pop
jb
dec
outsl
push
dec
jb
imul
mov
mov
push
jb
outsl
popa
fs
addr16
pusha
insl
imul
das
stc
inc
bound
int3
push
pop
imul
dec
pop
outsl
cmp
sub
pop
inc
pushl
pusha
aas
adc
popa
cmp
push
insb
inc
outsl
addr16
cmp
ljmp
mov
inc
je
outsl
dec
push
pop
insl
outsb
and
fs
bound
jp
ds
jb
push
outsb
pushaw
inc
pop
imul
fbstp
jo
jo
imul
arpl
insb
mov
pop
pop
fs
imul
or
daa
jo
outsb
jo
dec
inc
push
pop
inc
pop
insb
pop
add
fdivs
cmp
outsl
pop
outsb
or
and
in
inc
test
pop
imul
inc
imul
pop
push
push
insl
sbb
cmpl
pop
inc
gs
incl
pop
pop
addr16
pop
clc
in
daa
jle
cmp
ja
aas
arpl
and
dec
jb
mov
jmp
fs
arpl
bound
jg
clc
push
mov
ret
pop
mov
inc
bound
jnp
mov
aas
push
dec
pusha
mov
imul
scas
sbb
loope
incb
outsl
inc
pusha
arpl
ja
decl
ds
or
dec
push
pop
push
push
adcb
xor
stos
push
shl
or
outsl
pop
pop
lods
cmp
arpl
sub
mov
inc
pop
mov
ljmp
aaa
outsb
outsb
aas
mov
adc
adc
dec
insl
cmp
imul
pusha
jno
sbb
inc
aas
dec
dec
cmp
xor
sub
cmp
mov
testl
pop
ja
outsl
cld
jb
mov
sub
pop
inc
imul
pop
mov
jae
push
cs
mov
jge
stc
out
in
pop
pop
outsl
pop
aas
inc
clc
outsl
push
add
jb
in
fistps
inc
cmp
or
pusha
jo
lahf
fcomi
insb
dec
fs
mov
cmp
dec
pop
cmp
mov
push
push
pop
addr16
fcompl
pop
popf
cli
clc
cmp
pop
push
or
dec
popf
pop
imul
pop
popa
pop
js
addr16
mov
pusha
push
mov
and
mov
or
insl
push
popa
imul
pop
pop
jne
cmp
outsb
add
insl
pusha
cmp
dec
dec
inc
dec
cs
daa
pop
ja
das
mov
aas
jno
pop
push
xlat
jge
inc
or
or
ja
adc
or
pop
loop
daa
std
inc
ss
or
lea
pop
filds
outsl
push
mov
mov
pop
and
imul
push
pop
dec
aas
aas
pop
push
push
clc
out
decb
push
int
pop
std
outsb
insl
ja
cli
dec
pop
jo
imull
xchg
into
pop
sub
cli
mov
and
pop
popa
adc
arpl
pusha
mov
orl
or
arpl
jmp
cld
cmp
pop
mov
aas
inc
sub
insl
loope
cld
cmp
push
cmp
sub
sub
addr16
or
xor
dec
arpl
shrl
mulb
mov
pop
bound
gs
aam
pop
dec
test
outsb
bound
pop
and
push
push
into
dec
mov
cmp
inc
out
pushf
pusha
xor
lock
vcvttps2dq
ds
or
insb
dec
outsl
or
fstps
outsl
jae
mov
scas
imul
adc
dec
das
popa
xor
inc
sbb
inc
cli
pop
test
imul
jne
fcmovnb
out
mov
daa
sbb
rcrl
jne
insl
mov
arpl
pusha
sbb
push
js
pop
repz
push
dec
inc
ds
or
pop
pop
push
push
jg
fisubrl
andb
cmp
sub
jg
dec
frstor
cmp
cmp
cmp
das
mov
cmp
pop
inc
arpl
cmp
cmp
loope
add
cmp
cmp
out
cld
cmp
aaa
pop
pop
pop
insl
lds
outsb
adc
aas
push
ss
hlt
jmp
pop
outsb
insl
pop
lret
push
cmp
push
cmp
scas
pop
scas
adc
adc
cmp
mov
jbe
jge
cmp
sub
daa
insl
outsl
aaa
cmp
ljmp
cmp
pop
pop
jo
pop
pop
mov
dec
cmp
call
sbbl
push
inc
cmp
jbe
shlb
or
loope
sub
aaa
cmp
fs
xchg
insl
cmc
call
sub
inc
clc
repz
pop
dec
gs
ds
cmp
push
aaa
push
xor
fucomi
aaa
sbb
pop
or
xchg
insb
mov
testb
dec
mov
arpl
pop
mov
mov
imul
je
push
adc
push
fldt
jl
cmp
cmp
dec
sub
pop
aas
dec
subl
cmp
inc
pop
test
cmp
jno
dec
pop
clc
mov
pop
cmp
insl
aaa
push
imul
add
cmp
lahf
push
outsl
outsl
std
push
jmp
aas
xchg
cmp
sbb
or
sub
sbb
xlat
or
or
inc
cmp
xor
xor
cltd
cs
imul
push
mov
mov
inc
cmp
cld
cmp
in
sub
addr16
leave
push
adc
inc
es
mov
dec
push
inc
ds
push
std
push
jg
dec
mov
cmp
dec
cmp
cmp
cld
inc
psubsw
dec
push
cmp
sub
push
dec
sub
lods
aaa
mov
add
imul
std
xchg
cli
jae
jo
adc
push
pop
or
adc
push
sub
loope
test
cmp
dec
inc
inc
xchg
or
lods
lcall
jno
inc
test
jmp
inc
mov
dec
lea
adc
fstpl
rcrb
loope
lods
insl
push
cli
mov
mov
mov
nop
sub
pop
push
mov
adc
or
shll
lods
stos
push
inc
cld
push
pop
inc
jo
inc
fldcw
ret
lods
mulb
pop
insb
sbb
xor
jecxz
push
push
cmp
jne
fldl
aad
pop
mov
dec
gs
and
jbe
adc
scas
ja
insb
mov
cld
outsl
pop
bound
scas
and
std
or
out
xor
inc
dec
dec
dec
jo
filds
cmp
dec
sti
pop
push
pop
in
jp
mov
cmpl
or
imul
cld
aaa
jne
std
xchg
cli
pop
pop
pop
gs
sbbb
fsubrs
inc
pop
stc
dec
push
pop
std
sti
dec
dec
iret
jp
xchg
lahf
inc
cs
mov
adc
bound
sub
das
sarl
mov
ret
or
cli
mov
pop
popa
pop
jle
nop
pop
xor
das
testb
jge
fwait
scas
fsts
incl
sbb
jl
in
jmp
jns
push
pop
cs
inc
pop
mov
pop
imul
sahf
push
lret
lods
ss
cmp
fstpt
jle
inc
push
shll
test
shl
sbb
clc
add
insb
jae
sbb
std
push
dec
dec
dec
push
sbb
sahf
inc
cmp
imul
fidivrl
outsb
adc
cmc
inc
inc
push
lods
or
jnp
insb
in
sbb
aas
and
pusha
inc
push
sbb
pop
sub
dec
addl
test
fsubrl
dec
xor
arpl
lds
and
push
add
fstl
cs
or
decb
insl
or
xchg
sbb
mov
fbld
les
pop
jp
mov
jb
fldenv
jo
data16
mov
xchg
sub
out
bound
pusha
imul
ss
out
jo
sub
daa
pop
out
in
xor
adc
outsl
fs
or
sbb
lea
push
sbb
mov
dec
lods
sbb
sub
pop
cmp
or
jo
rolb
out
sub
movsl
push
mov
push
stos
rcll
sbb
push
fsubs
adc
sub
jbe
dec
pop
xlat
sarb
dec
jge
pusha
outsl
sub
repnz
pop
fstps
cmp
and
and
sbb
pop
sbb
ljmp
jno
lahf
push
jg
fbld
jp
outsb
jns
pop
push
cmp
ds
inc
mov
cmp
into
fcmovu
lcall
aas
loope
mov
cmp
inc
sbb
sub
pop
dec
ret
mov
gs
cmp
cmp
neg
aas
lods
xlat
push
jns
pusha
imul
dec
call
fwait
outsb
xor
xor
int
out
ret
lods
pop
data16
jnp
fiaddl
lea
push
daa
gs
lock
push
loope
inc
dec
dec
jne
sti
addr16
daa
cli
cld
cmp
add
mov
sbb
clc
addl
insb
adc
sub
lock
dec
outsl
push
push
and
lock
mov
inc
jo
cmp
push
aas
lahf
mov
push
imul
cmp
inc
out
pop
dec
scas
mov
lods
lds
pusha
mov
icebp
xor
dec
add
dec
sub
imul
sub
adc
inc
dec
andb
jae
pusha
sub
rorl
xor
fwait
aas
insl
insb
nop
imul
dec
sub
fstp
das
jno,pn
push
sti
lret
push
pop
addr16
inc
sub
or
mov
inc
or
ljmp
mov
fisubrl
outsb
pop
sbb
sub
fs
jns
sbb
sub
sti
dec
add
inc
inc
dec
inc
inc
fldt
loopne
push
sbb
push
dec
clc
xor
lahf
or
add
adc
fildl
dec
jmp
pop
inc
push
dec
dec
sub
sub
add
insl
insl
xor
icebp
loop
pop
js
jb
add
sub
and
xchg
loope
sub
pop
jge
loope
imul
jb
sub
add
clc
fwait
xor
push
or
popa
or
adc
out
js
cmp
sbb
sbb
je
or
mov
sbb
pop
shll
sbb
mov
dec
scas
arpl
cmp
or
cmp
das
gs
sub
inc
mov
pop
sbb
jle
cmp
jo
xchg
cmc
ret
dec
mov
dec
push
pop
lods
sbb
movsl
adc
push
or
ds
sub
jae
sub
shlb
add
sub
push
cmp
sbb
sub
push
aad
pop
shrl
inc
mov
jo
fisttpl
jbe
xor
sub
mov
data16
pop
jg
push
push
or
cmp
and
mov
and
sub
xor
loope
pop
daa
ja
dec
sub
pop
dec
outsb
js
sub
arpl
jne
sub
cli
aaa
dec
pop
sub
sub
sbb
pop
je
movsl
mov
sub
sbb
xor
mov
outsb
pop
and
jl,pt
and
inc
stc
imul
pop
push
xor
insl
imul
add
jns
mov
jno
xorb
sbb
insb
adc
sub
jne
popa
pop
sub
outsb
test
pop
mov
sub
data16
test
jbe
push
das
pop
sub
dec
xor
and
scas
lods
out
rolb
cmp
fwait
cltd
sub
sbb
mov
imul
sbb
andb
aaa
sbb
rcrb
pop
push
mov
sbb
push
mov
dec
pop
cltd
lret
xorl
add
sub
cmp
and
mov
cmp
and
sub
mov
or
jecxz
sub
das
xor
xor
push
pop
xor
mov
cli
lea
cmpsl
sbb
mov
inc
mov
repnz
sub
sub
das
sub
outsb
insb
inc
xor
inc
jo
xor
aas
push
pop
insl
sti
mov
jb
jnp
pop
jo
jg
sbb
sub
push
lock
sbb
push
addr16
aaa
push
loope
push
xor
ja
fs
test
frstor
mov
out
dec
fs
es
dec
dec
aas
cmpsl
arpl
push
mov
bound
cwtl
cmp
frstor
dec
cmp
outsb
xchg
pop
jle
popa
dec
dec
stc
adc
dec
fisttpll
pop
pop
or
push
cmp
sub
sar
pop
addr16
pop
inc
add
xlat
adc
movsl
addr16
cmp
shrl
loop
andl
shrl
jecxz
cmp
fs
insb
loope
pop
lea
cli
ja
fidivs
pop
fsubl
arpl
cmp
fidivrs
outsb
dec
daa
pop
inc
outsb
test
cmp
loop
mov
fs
dec
ja
aas
adc
mov
mov
xlat
das
inc
arpl
test
xor
pop
add
aaa
outsl
jne
dec
mov
mov
and
sub
xchg
das
sub
outsb
popa
pop
leave
imul
cmp
cmp
addr16
mov
push
outsl
ja
ljmp
xchg
stos
sarb
dec
push
cmp
popa
mov
xor
mov
test
arpl
sub
sub
test
inc
ds
inc
inc
inc
subb
push
jl
dec
dec
dec
mov
jae
push
push
pop
pop
popa
arpl
mov
insl
mov
pop
mov
movsl
mov
jne
je
aas
in
push
inc
and
jb
mov
pop
insl
and
inc
data16
inc
push
inc
push
pop
jmp
fs
inc
cmp
cmp
jae
sbb
push
rclb
inc
jg,pn
push
inc
outsb
pop
add
mov
cmp
inc
mov
andl
rorb
enter
mov
add
inc
fs
pop
push
sti
ja
insb
cmp
sub
outsl
adc
cmp
inc
imul
aas
dec
or
mov
inc
sub
gs
cmp
daa
dec
aaa
pop
pop
loop
out
push
bound
xchg
sbb
pushl
jo
inc
ds
inc
and
dec
lret
rclb
fdivrs
add
insl
mov
cli
jae
mov
daa
fadd
imul
pop
popa
jo
addl
pop
or
std
add
rcl
xor
dec
or
pop
sub
push
jnp
jo
sub
sub
add
sub
sub
fwait
sub
andl
jnp
cmp
jae
dec
inc
sbb
mov
and
lret
push
insl
arpl
fildll
insl
cli
movsl
adc
inc
stos
je
mov
dec
inc
jo
outsb
aam
xor
into
bound
mov
icebp
arpl
sub
adc
jo
mov
test
mov
mov
xchg
daa
push
jo
decb
sub
cmp
aam
jp
addl
cwtl
inc
data16
xor
pop
aas
sbb
jnp
fwait
add
popf
insl
insb
pop
test
nop
test
into
or
xchg
sub
sub
push
sub
pop
sub
mov
sub
shrb
fildll
adc
and
xchg
cmp
jg
ljmp
inc
cs
sub
data16
sub
cs
sub
cs
dec
sub
jae
incl
jl
mov
or
pop
sub
imul
sti
ljmp
xor
cs
cs
cmp
xor
xor
xor
push
xor
das
cmp
imul
test
cmpsl
sub
ljmp
mov
sub
in
jmp
xor
inc
xor
pop
cs
xor
mov
jg
xor
xor
xor
xor
xor
xor
aaa
cli
call
bound
jbe
xchg
xor
xor
das
fbstp
xor
add
and
call
inc
xor
push
xor
xor
into
xor
xor
ss
ljmp
divb
xor
aaa
pop
xor
inc
cmp
pop
aaa
pusha
xor
ss
ljmp
jbe
xorl
mov
aaa
xor
je
mov
pushl
cmp
push
cmp
cld
incl
je
mov
fstpt
sbb
inc
xor
inc
cmp
cmp
aaa
sti
jle
cs
sub
push
sub
call
lea
sub
xchg
sub
jg
sub
sub
sub
sub
sub
cld
sub
sub
cs
sub
sub
push
cs
mov
jns
mov
mov
mov
sub
sub
imulb
push
cs
mov
sub
aas
sub
adc
ljmp
jle
mov
mov
sub
sub
das
inc
cs
sub
clc
pushl
pop
sub
jo
mov
das
das
push
xor
xor
or
xor
xor
arpl
pushl
xor
xor
dec
xor
fidivs
xor
push
fistpll
xor
xor
cmp
xor
inc
push
call
cmp
fwait
cmp
cmp
ss
cmp
xor
fistpll
xor
repz
cmp
xchg
cmp
cmp
imul
cmp
aaa
fnstcw
cmp
cmp
cmp
aaa
imul
movsl
ficoms
sub
call
add
ljmp
cs
sub
sub
ljmp
cs
out
jbe
adc
sub
xlat
sub
stc
iret
test
mov
cs
mov
dec
cs
sub
das
lds
cs
mov
sbb
ss
xor
inc
jnp
xchg
xor
cld
mov
enter
in
in
jae
xor
das
push
and
ljmp
push
cmc
ja
subl
daa
xor
das
loop
out
jecxz
hlt
sub
xor
sbb
xor
xor
aaa
incb
xor
inc
xor
xor
cs
enter
das
dec
xor
xor
xorl
xor
in
xor
xor
jbe
jge
mov
ss
inc
xor
mov
xor
ss
ss
adc
sub
in
pushl
test
lcall
cmp
dec
clc
ljmp
cmp
cmp
cmp
or
leave
cmp
cmp
sbb
data16
cmp
adc
and
sub
inc
mov
sub
jae
subb
insl
sub
sub
rclb
cmp
sub
cs
sub
sub
cs
xchg
fisttpl
lea
sub
js
test
sub
inc
xchg
test
sub
sub
sub
jg
mov
subb
sub
cs
sub
out
repz
mov
mov
sahf
stos
rcr
cli
sub
pop
jmp
out
sub
jg
push
pop
adcl
xor
das
fucomip
inc
sub
xor
cs
xor
xor
push
xor
dec
xor
jle
xorb
das
lods
xor
xor
xor
jg
pushl
dec
xor
js
jp
mov
sti
xor
fwait
cmpsb
jmp
das
xor
popa
jnp
xor
std
mov
das
or
and
pop
xor
ss
jnp
jle
cli
mov
jnp
sbb
push
cmp
cmp
xor
cmp
cmp
aaa
jmp
dec
or
sub
sub
inc
sti
pushl
sub
sub
bound
subb
enter
sub
lcall
or
sahf
cmp
sub
cs
mov
push
adc
dec
cs
sub
std
cmp
jnp
push
std
dec
cmp
push
cmp
out
cmp
ss
hlt
lcall
cmp
cmp
cmp
cmp
cmp
aaa
mov
cmp
cmp
cmp
cmp
cmp
aaa
out
notb
dec
ret
add
adc
sbb
inc
mov
addl
outsl
sub
sub
sub
mov
sub
lahf
loope
out
sub
sub
cmp
inc
sub
jmp
jne
mov
xchg
sub
sub
pop
scas
lds
sub
sub
ljmp
add
cs
sub
jnp
subl
sub
shrl
in
sub
sti
inc
loope
das
pop
adc
push
comiss
cmp
add
arpl
gs
sub
js
das
and
cmp
daa
addr16
test
ljmp
xor
in
clc
xor
adc
pop
xor
js
lock
outsl
sub
mov
ret
sub
dec
fistl
sub
sub
jge
mov
mov
xor
pop
das
jl
push
aad
mov
sub
sub
popf
dec
testl
and
mov
add
inc
jb
outsb
dec
gs
cs
sti
inc
lock
unpckhps
pop
push
jb
addr16
idiv
std
dec
push
dec
dec
pop
push
dec
inc
push
push
inc
push
inc
pop
jae
fs
pop
outsb
pop
cmp
out
adc
outsl
data16
popa
jb
pop
dec
imul
divb
outsl
ja
push
push
outsl
push
outsl
popa
insl
sbb
push
dec
fists
add
cs
add
adc
je
jae
std
in
fs
and
jo
jae
arpl
arpl
mov
fwait
in
imul
sub
fldcw
sub
adc
jo
ficoms
outsl
pop
shll
hlt
ss
in
mulps
jg
jbe
pop
mov
mov
jns
jo
add
aas
popa
jns
xor
xor
sub
mov
gs
add
push
aas
jb
outsb
in
test
jbe
xor
and
outsl
sbb
push
insl
adc
or
inc
sbb
sub
mov
test
iret
imul
push
lods
loope
push
jg
bound
jo
inc
gs
popa
push
mov
ja
ds
pop
inc
js
adc
push
push
aaa
mov
jns
dec
jmp
fnstsw
jbe
imul
test
jg
inc
inc
xor
adc
sbb
inc
inc
mov
jmp
je
dec
lods
inc
jb
adc
and
cmovno
or
dec
add
or
inc
push
fdivl
popa
dec
pcmpeqw
sbb
dec
jae
xor
jae
push
mov
lds
movd
or
mov
or
cmp
xchg
fiadds
add
outsl
dec
push
imul
out
and
fs
daa
push
sti
imul
sahf
loopne
insb
insb
sti
imul
dec
insl
imul
xchg
pop
xor
aaa
decb
ret
jbe
dec
imul
mov
push
incl
jae
jo
sub
je
add
enter
push
out
adc
xor
xor
xor
mov
xor
add
lret
mov
out
add
mov
ja
outsl
add
cmpl
add
push
add
sbb
cltd
in
add
and
mov
pop
sub
inc
repz
and
push
pop
dec
sbb
sub
frstor
pop
psubd
and
pop
shll
add
mov
add
fisubrs
mov
add
jbe
add
jg
adc
sub
insl
dec
sub
push
ss
divb
mov
pushl
jecxz
mov
jbe
push
repnz
nop
lods
lock
add
inc
and
iret
pop
loope
adc
add
xchg
es
inc
test
push
xorl
cld
pop
sub
or
pop
push
add
mov
xor
inc
pusha
addl
adc
push
xchg
inc
add
xchg
jmp
add
incl
rolb
nop
add
add
enter
sub
cltd
shlb
jns
add
iret
cld
pop
add
add
add
add
imul
jg
jg
sub
sub
adc
jae
mov
jmp
add
add
push
add
jb
jbe
sub
pop
add
add
in
add
mov
or
scas
cld
mov
popa
je
inc
imul
outsb
addr16
or
sti
in
std
push
imul
inc
insb
jne
push
in
push
outsb
insl
and
je
push
imul
sbb
add
outsl
jae
dec
popa
outsb
imul
jb
sub
neg
outsl
jae
outsl
jbe
inc
js
and
jo
lods
std
decb
dec
popa
insl
inc
inc
or
test
js
cmp
jae
jo
outsb
or
dec
fs
sub
jne
outsl
dec
push
cld
fstpl
mov
outsw
adc
add
fstpt
mov
adc
insb
outsb
xor
jns
and
mov
lods
pushf
gs
jnp
sti
aaa
in
fistl
jae
outsl
outsb
mov
jb
dec
out
jg
pop
sbb
jns
fldl
or
mov
je
adc
icebp
fisttpl
aas
push
outsl
outsl
insb
lock
push
lock
adc
je
loope,pn
adc
push
popf
rolw
lea
bound
outsl
lcall
mov
jmp
adc
pop
adc
in
lcall
incl
or
call
leave
adc
mov
mov
decl
mov
adc
or
and
or
imul
mov
jp
call
and
incl
sbb
ljmp
or
mov
fisttpl
repz
and
inc
sub
push
std
aaa
xor
jmp
pop
cmc
add
mov
xorl
das
or
in
insl
pop
lcall
ud0
push
insl
pop
mov
or
icebp
adc
add
mov
insl
pop
mov
add
es
jb
add
mov
mov
mov
adc
bound
arpl
call
cli
or
mov
sub
out
mov
inc
das
dec
or
mov
push
add
sub
xor
xor
jno
icebp
test
data16
gs
jo
pop
push
cmpsb
call
and
je
inc
or
mov
or
xor
sub
ds
jl
rcl
mov
add
fistps
addr16
arpl
outsb
cmp
ds
or
jo
je
subb
leave
mov
lcall
lahf
std
js
push
insl
bound
scas
ja
or
jbe
popf
imul
push
sbb
outsb
arpl
fwait
jne
popa
inc
inc
js
inc
jb
dec
aam
jle
in
jo
outsb
je
je
insl
mov
imul
pop
push
jae
sbb
fwait
or
push
xor
or
adc
shrl
sub
jne
jo
fs
jecxz
xor
out
inc
aaa
jne
mov
les
sub
xor
pop
cmp
push
xchg
imul
mov
inc
or
inc
ds
push
outsl
mov
mov
and
pop
jae
adc
dec
mov
push
xor
fucomi
fsubl
push
gs
pop
jnp
pop
sbb
jne
fstl
push
jo
inc
sub
sub
jns
bound
jne
in
xor
dec
imul
mov
add
add
or
adc
mov
std
sidtl
add
mov
lock
add
inc
add
add
xchg
pop
xor
sbb
add
adc
push
mov
test
js
mov
inc
addb
mov
push
push
sti
mov
cs
xchg
and
xor
ficomps
cwtl
xchg
add
jb
popa
xchg
dec
cwtl
fcoml
push
add
dec
adc
inc
lock
sbb
xchg
mov
dec
jae
xchg
mov
dec
lock
jns
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
