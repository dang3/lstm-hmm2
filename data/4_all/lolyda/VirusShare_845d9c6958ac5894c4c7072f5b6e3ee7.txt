daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
cmp
cmp
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
lods
into
mov
mov
or
shl
add
inc
mov
mov
shrl
stc
lea
mov
push
arpl
clc
shr
rep
pop
push
and
mov
movsb
dec
int
mov
and
pop
push
push
lea
fnsave
sbb
mov
mov
rclb
cmpsb
jmp
cmp
cmp
push
sbb
inc
into
bound
and
bound
xchg
sbb
ss
int
lahf
adc
pop
mov
sub
xchg
pop
testl
mov
das
jnp
lea
pop
cmpsl
gs
mov
popa
xorl
sub
imul
add
je
mov
cmp
inc
add
xor
fsubs
pop
test
cmpb
jne
adc
mov
mov
push
adc
fstl
mov
pop
mov
push
push
je
push
adc
push
mov
mov
sub
adc
ss
push
mov
xorl
adc
jp
cmp
push
test
dec
xor
cmpsb
fldt
add
sbb
int
jne
scas
jecxz
lcall
cs
mov
push
lret
or
push
push
dec
inc
rcrb
push
fcompl
dec
add
jne
xor
loope
add
aaa
adc
fsubrl
push
push
add
adc
jle
inc
mov
mov
push
push
xor
int3
jl
mov
jecxz
add
je
xor
ret
or
dec
jp
jecxz
mov
hlt
insb
ret
bound
xchg
sub
repz
sbb
push
or
adc
push
cli
sub
or
push
mov
xor
jo
push
push
sub
xor
xor
enter
cmp
repz
add
imulb
inc
lock
fcompl
jmp
push
aad
in
mov
xchg
xor
add
inc
incl
mov
push
push
and
xchg
cltd
outsl
or
pop
cmp
push
push
test
sub
ret
cs
push
dec
cmp
pop
push
or
xor
push
cwtl
loop
test
add
outsl
dec
pop
push
push
cmp
push
cmp
add
arpl
xor
mov
adc
repnz
jl
cs
xor
dec
lret
in
sbb
push
add
or
outsb
int3
mov
pusha
add
repz
hlt
mov
pop
dec
shrl
loopne
or
jmp
xchg
xchg
decl
je
xor
mulb
adc
je
mov
lcall
mov
ret
mov
inc
mov
xor
push
push
push
shll
xlat
fs
push
out
int
push
sub
and
mov
cmp
or
dec
frstor
iret
dec
inc
push
adc
movsb
out
rcll
in
push
add
mov
xchg
sbb
mov
jmp
push
xor
mov
cli
mov
arpl
cld
lret
mov
inc
in
or
xor
pushl
repz
push
add
cmpb
jne
test
jle
push
insl
out
insl
jnp
jns
add
incl
push
cld
in
add
out
or
jmp
std
rorl
leave
mov
push
aaa
nop
mov
mov
fs
enter
sbbl
xchg
movsb
adc
push
outsb
outsb
repz
inc
mov
fdivrl
lea
shl
lret
pop
mov
jae
shll
ja
mov
pop
cmp
int
jb
xchg
sti
rorl
ret
sub
bound
imul
push
push
sbb
push
mov
lret
bound
mov
sbb
jmp
push
fldl
stos
jmp
mov
fsubp
jecxz
mov
adc
lock
and
inc
sbb
shr
addr16
mov
mov
int3
or
push
lea
push
shl
gs
mov
pusha
fcomps
jmp
pop
mov
stos
mov
push
rep
mov
fldenv
push
adc
or
and
cmp
mov
fwait
or
mov
and
sbbl
sbb
mov
lea
xchg
jne
mov
mov
jae
and
mov
mov
push
in
or
mov
shrl
sub
sbb
js
adc
pop
and
or
sbb
aam
xor
into
inc
mov
add
fadds
xchg
cmpsb
and
add
lea
dec
orl
in
inc
inc
cmp
dec
sbb
add
adc
or
sbb
sub
pop
inc
cmpl
and
inc
pop
or
mov
mov
nop
inc
test
sub
icebp
xlat
js
scas
jno
push
pop
push
xor
mov
push
and
or
sub
outsb
adc
adc
adc
sub
xchg
add
or
outsb
jo
je
or
fnstenv
xchg
cmp
inc
rcrb
mov
or
frstor
mov
pop
or
push
je
pop
push
rcrl
and
or
pop
fldenv
add
push
add
in
fiadds
adcl
adc
add
mov
insl
popf
add
jo
push
pop
imul
into
xchg
xor
push
or
pop
adc
adc
pop
xor
jnp
jne
sbb
aaa
sbb
mov
outsb
mov
jbe
sbb
push
data16
mov
mov
enter
inc
cmc
out
stos
outsl
lock
jbe
sbb
jne
inc
add
out
add
mov
fmull
xor
inc
ret
and
mov
sub
fs
dec
and
movl
or
adc
jmp
inc
outsl
subl
data16
sub
mov
in
sbb
sbb
mov
adc
testl
pusha
test
or
pop
xchg
dec
test
paddusb
test
pusha
pop
scas
mov
or
inc
data16
sub
lock
jne
jp
fs
int3
adc
jo
mov
lock
xor
aaa
into
or
lret
int3
add
sbb
sbb
cmp
add
inc
pop
inc
pop
or
pusha
push
movl
bound
and
fwait
clc
lods
push
insb
push
mov
pushf
push
or
addl
push
sbb
jno
sbb
adc
fisubs
jmp
xchg
daa
inc
add
data16
sbb
xor
movsl
scas
js
xor
test
jnp
xor
xchg
sahf
sti
dec
or
imul
or
push
jno
xor
and
pop
and
and
movsl
in
xchg
lock
or
mov
pop
mov
mov
push
push
les
sbb
mov
out
daa
enter
gs
clc
adc
dec
mov
pushf
mov
pop
popa
adc
mov
int3
shl
add
adc
jae
inc
adc
add
mov
js
push
fwait
pop
inc
fs
add
fisttpl
notl
push
jp
sub
dec
cmpl
fsub
sub
test
lock
jle
adc
cmpl
cmp
mov
fwait
mov
pop
pusha
insb
insb
mov
pop
adc
jg
int
mull
inc
push
push
push
orl
loope
sbb
fildll
lret
and
sbb
cwtl
je
push
sbb
in
dec
mov
fdiv
clc
dec
hlt
add
push
jmp
and
aaa
add
shrl
inc
cltd
sub
add
clc
out
lcall
adc
push
pop
aas
popf
fnstenv
jnp
fs
pop
mov
mov
mov
testb
pop
repnz
dec
xchg
sgdtl
mov
fwait
iret
or
xor
mov
and
nop
mov
adc
test
jmp
mov
loop
aam
sbb
cmpsb
gs
or
test
lahf
pusha
call
cmp
pushf
and
shlw
fwait
cs
push
cld
pop
mov
adc
lock
insb
in
xor
xor
in
and
pop
testb
inc
xchg
or
push
mov
push
inc
xchg
inc
in
sub
inc
jl
xchg
addr16
jns
dec
sahf
cmp
push
mov
inc
dec
or
or
lcall
sbb
dec
repnz
add
or
js
scas
enter
inc
je
add
lock
sahf
inc
push
outsb
and
enter
push
sub
pop
test
into
jge
ljmp
cmp
sbbl
cli
add
jns
mov
jo
inc
adc
fisubrs
lock
dec
dec
stc
mov
nop
jns
sbb
sbb
imulb
pop
xchg
inc
jge
jae
push
bound
shll
call
mov
xor
mov
xchg
jb
pop
jns
pusha
jne
jg
cmpsl
fidivl
dec
sub
add
inc
and
aam
push
push
and
adc
xchg
or
push
addps
xchg
fcompl
and
xor
insb
divb
jmp
sub
jnp
mov
ret
sbb
pop
or
sub
pop
xor
push
shl
sub
sti
outsl
push
imul
lea
sti
pop
cmp
add
repz
xor
insb
sub
cmp
lock
jne
add
mov
mov
sbb
xor
invd
int3
dec
shlb
push
ficoml
add
cmp
sar
xchg
sbb
adc
or
mov
mov
push
or
sahf
jecxz
outsb
mov
mov
pop
jmp
sub
ret
pop
insb
jo
push
and
mov
adcb
or
sbb
fidivrl
rcrb
cmp
lock
push
lock
push
push
sbb
aad
adc
call
fwait
je
jmp
add
pop
pop
dec
popf
add
xor
add
mov
sbb
add
mov
cltd
idiv
mov
mov
add
mov
cmp
jb
or
jmp
pop
mov
in
cmp
jg
arpl
mov
add
jmp
fs
enter
fs
mov
test
fs
fs
mov
cmpb
fs
push
fs
pop
pop
push
fs
dec
inc
inc
fs
xor
fs
and
fs
adc
fs
add
jle
enter
clc
ss
inc
enter
mov
inc
test
enter
mov
enter
movsb
enter
test
mov
xchg
xchg
xchg
out
inc
mov
xchg
xchg
int3
rcl
add
and
in
in
jmp
cmp
or
fstpl
adc
push
sbb
and
cmp
fdivrl
jo
pop
add
ret
mov
lods
xor
int3
add
or
addl
push
xor
mov
ljmp
mov
jae
inc
orl
sub
loop
inc
jmp
or
hlt
clc
mov
dec
faddl
xchg
inc
cmp
inc
jmp
popf
int
dec
cld
sbb
adc
adcb
xchg
fcmovu
lahf
push
mov
lea
test
jae
or
insl
enter
in
xor
in
jg
jmp
mov
jne
cmpb
jne
inc
or
add
fildl
repnz
or
jbe
aam
movsl
das
dec
movsb
cld
inc
testb
in
pop
mov
aam
push
sub
jbe
jmp
push
pop
pusha
push
mov
and
push
imul
cli
ljmp
in
mov
mov
mov
insb
and
pop
mov
inc
popa
mov
lcall
sbb
leave
jl
sub
das
dec
out
fs
inc
lahf
mov
adc
xor
lds
test
mov
fisttps
inc
jne
push
adc
mov
pop
fsubr
xor
jo
jb
mov
cld
jbe
push
inc
lea
paddusb
out
or
scas
int3
add
sarb
mov
inc
mov
and
mov
data16
adc
cmpsb
imul
mov
aam
dec
lock
adc
cmpsb
imul
ljmp
adc
cs
cmpsb
imul
addr16
adc
add
adc
in
mov
pop
or
sbb
movsl
jb
fdivl
leave
adc
mov
or
jne
dec
popf
or
das
add
cs
add
xor
adc
insb
fwait
in
add
add
das
dec
cmp
jne
repz
sub
pop
sub
adc
insl
xlat
jne
aaa
inc
out
arpl
movhps
xor
cmc
pop
sbb
xchg
scas
jmp
out
daa
push
addl
bswap
mov
lcall
adc
sub
pop
or
icebp
testl
scas
jmp
or
test
jno
into
in
mov
add
mov
add
out
movsl
addr16
mov
pop
mov
add
or
inc
adcl
data16
or
fildl
testl
cmpsb
imul
dec
shll
testb
mov
shll
mov
int
imul
iret
xor
shll
js
add
insb
mov
add
shlb
or
je
add
sub
xor
clc
add
mov
in
adc
adc
push
inc
loope
or
dec
and
mov
inc
dec
das
sbb
xor
lods
jecxz
and
adc
inc
das
cmpsb
imul
imul
adc
or
je
mov
add
cs
out
pop
call
mov
loop
add
shlb
les
imul
cmpsb
imul
xor
pop
mov
mov
mov
and
imul
enter
das
nop
and
popa
ja
xchg
xor
xor
out
add
sbb
lret
cmpsb
imul
xor
ljmp
rcll
rcrb
aaa
stos
mov
int3
das
shll
mov
dec
shll
nop
mov
dec
shll
jle
jb
add
cmp
mov
and
jo
xor
aas
mov
jg
jecxz
add
xor
sub
sub
sbb
and
dec
jns,pn
add
inc
in
sbbl
sub
scas
sub
orb
push
enter
push
inc
movsb
sbb
fdivr
jg
inc
dec
xor
cs
insb
add
push
inc
push
or
push
push
xor
dec
mulb
dec
inc
push
sbb
rorb
jo
fildl
into
mov
into
cmovnp
clc
std
cld
cli
popf
push
idiv
std
mov
sti
adc
clc
clc
cmp
cld
sti
dec
add
sbb
or
mov
int3
sbb
dec
addr16
push
pop
ljmp
pop
imul
push
jno
sbb
sbb
dec
push
pop
gs
bound
pop
or
and
jmp
jnp
pop
ret
mov
and
xchg
ret
mov
daa
or
xchg
aas
sub
xchg
ret
adc
and
add
add
xchg
mov
sarb
dec
shlb
dec
shll
ljmp
cmp
dec
aas
adc
cld
clc
shll
jmp
fdivr
or
daa
dec
and
xlat
push
test
cmovne
inc
into
cs
or
add
pop
ljmp
lret
dec
add
adc
or
test
leave
repnz
cmp
lret
ret
pusha
ret
cmp
mov
jbe
add
or
std
adc
jno
jb
inc
jecxz
out
lcall
xor
imulb
outsl
pusha
pop
add
lods
or
lret
mov
cmp
popa
pop
outsb
pop
call
dec
leave
and
lods
add
mov
dec
popa
or
cmp
push
jbe
push
ss
cmp
or
mov
jge
sqrtps
jg
test
std
je
loopne
dec
xchg
call
addl
imul
or
inc
sti
dec
dec
test
sbbl
std
aad
mov
add
cmp
rorb
dec
arpl
jl
jae
testl
divl
sti
outsl
pop
adc
jmp
test
jo
push
cld
adc
pop
decl
test
pop
addr16
push
out
xor
mov
jmp
stc
jg
mov
std
mov
cmp
mov
lock
lods
lret
aaa
pusha
cmpsb
test
inc
sti
movnti
jge
pop
pop
cli
sti
stc
arpl
ljmp
cli
xor
add
std
adc
pop
mov
mov
pusha
mov
push
cmpb
jg
jmp
or
push
jge
stc
daa
and
das
incl
aam
arpl
or
pusha
mov
in
mov
dec
in
xor
add
fs
test
xor
xorb
sti
sbb
jp
add
std
mov
test
andl
jle
jle
jbe
jno
loop
sub
clc
pop
jle
stc
xchg
in
pop
out
pop
xchg
jecxz
sbb
pushl
in
out
dec
push
push
dec
mov
inc
cmc
xchg
adc
test
xorl
cld
sub
or
fsubrs
fcoms
mov
push
fsubl
imul
mov
xor
mov
stos
test
jbe
inc
stc
push
push
cli
je
lods
fldt
cld
faddl
decb
inc
jecxz
pop
sub
fstpt
out
cld
out
jle
adc
jae
daa
mov
push
mov
pop
mov
clc
pushf
or
cli
or
add
stos
std
add
arpl
jecxz
dec
mov
mov
rclb
pop
ret
cmp
imul
pop
pop
pop
sarl
outsl
pushl
mov
push
jae
jnp
sbb
lock
cmp
sbb
call
outsl
inc
test
dec
xor
pusha
xchg
lahf
or
mov
push
mov
jns
xchg
push
mov
inc
idivb
fldt
mov
cmp
jg
flds
decl
lock
sub
or
and
aaa
sbb
test
fldl
sbb
mov
mov
lods
cmp
sti
pop
xor
add
or
or
icebp
mov
mov
lods
das
xchg
stos
pop
and
in
inc
lock
daa
xor
out
and
mov
loop
sub
outsl
outsl
dec
xor
jo
out
push
dec
dec
arpl
jo
lea
mov
or
test
js
sub
out
or
cli
inc
clc
test
cmpl
add
mov
fsqrt
call
ss
arpl
or
or
ja
xor
and
push
add
ja
mulb
push
std
js
jl
sbb
sbb
cltd
outsb
cli
xchg
movsl
mov
test
push
cmpl
sbb
or
scas
inc
incb
push
add
sarb
jge
inc
jge
jnp
xchg
repz
xchg
jg
adc
incb
mov
das
cmp
mov
jl
jmp
pop
mov
clc
pop
jle
or
fs
mov
out
sbb
jg
jg
sti
int
shlb
cld
bound
or
lahf
inc
sbb
mov
mov
cld
xor
xchg
or
pop
pop
pop
enter
pop
loop
xchg
push
xor
jbe
mov
or
clc
and
lds
add
cmp
lock
dec
ret
pop
dec
clc
and
call
push
addr16
xor
jno
loope
ss
lret
lods
pop
jle
sbb
outsb
aas
dec
jecxz
adc
or
xchg
push
out
inc
mov
or
rolb
add
in
notl
rcrl
cs
mov
mov
xor
sbb
std
hlt
sbb
fs
or
in
aas
add
add
push
mov
jnp
notl
sti
aas
repz
fnstsw
push
out
inc
jnp
retw
les
push
iret
cmc
or
js
mov
sbb
test
mov
sbb
lds
aas
imul
cwtl
sti
daa
add
dec
das
adc
ret
dec
push
push
dec
xchg
inc
cmp
mov
mulb
jge
jecxz
inc
dec
das
xchg
dec
pop
test
xchg
push
cmpl
in
in
sbb
pop
pop
addr16
rcrl
mov
or
out
sti
sti
hlt
mov
stos
adcb
adc
je
add
pop
cli
cltd
cmp
outsb
jae
in
mov
sti
inc
dec
dec
mov
sub
adc
mov
inc
dec
std
xlat
dec
incb
loope
addl
xchg
dec
push
daa
das
fs
cld
movsl
push
data16
mov
arpl
test
in
push
push
ljmp
jp
adc
roll
ret
gs
cmp
std
out
mov
xchg
push
inc
mov
into
movsl
or
int3
mov
fstpt
loop
inc
push
das
insb
push
prefetch
xor
sbb
jno
inc
ja
and
loopne
std
jne
pop
jle
mov
pop
push
inc
dec
dec
xchg
fists
rcl
inc
mov
pop
scas
sub
loopne
inc
xor
push
je
aaa
cwtl
mov
movb
sti
enter
cs
push
and
push
dec
stos
sbb
lods
jmp
cltd
mov
stos
mov
stos
sti
xor
insb
ud0
sar
inc
into
mov
jae
push
add
mov
mov
xor
je
out
push
inc
data16
push
and
lahf
cmpsl
lods
ja
xchg
xchg
pop
add
sahf
loopne
cli
in
lret
arpl
inc
xchg
in
add
pop
mov
dec
pop
xor
cmp
pop
mov
push
jmp
add
movb
jo
in
add
das
push
add
fistpll
sarl
out
insl
call
loop
sub
mov
jl
mov
cld
in
mov
daa
pop
push
loopne
aas
pop
xor
js
std
xchg
incl
mov
ss
hlt
cmp
ja
cmp
ja
jle
std
outsl
or
add
mov
std
jmp
inc
jge
mov
adc
out
push
test
pop
sbb
addb
dec
add
out
adcl
mov
jg
je
je
out
jg
cld
or
shl
js
movsl
test
inc
hlt
dec
add
push
xor
popa
test
notl
aam
mov
pop
push
sbb
cmp
movsl
test
fs
and
add
add
rcll
aaa
std
jnp
jo
push
push
aas
or
sub
xor
mov
or
gs
pop
pop
outsl
dec
mov
out
ljmp
testb
outsb
pop
pop
adc
sub
mov
cmp
icebp
and
inc
out
inc
ja
adc
dec
lret
in
mov
hlt
cmp
cld
inc
lret
add
addb
gs
or
icebp
jae
bound
lret
aad
ret
lret
pop
inc
pop
pop
add
cltd
push
or
decw
std
dec
arpl
sbb
mov
insb
es
inc
repz
mov
mov
out
pushl
ljmp
adc
lcall
into
out
sti
sbb
sarl
or
mov
or
fisttpll
push
fs
pop
xchg
jnp
add
rclb
mov
clc
mov
out
imul
cs
lret
icebp
inc
hlt
mov
icebp
dec
jecxz
xor
movsl
jno
fs
ja
xor
out
add
xchg
fwait
pushf
arpl
add
in
mov
cmp
dec
push
test
test
cmc
mov
mov
adc
notl
mov
jle
push
out
decb
or
pop
mov
mull
repnz
sub
xchg
enter
xchg
fucomi
mov
cmc
mov
sbb
es
push
mov
pop
add
adc
out
cld
cmpsb
pop
push
sarl
fdivp
push
push
loopne
add
test
fiaddl
xor
fisttpl
idivb
ja
mov
stc
negl
int
fucomi
sbb
push
gs
cmp
loopne
lock
xor
lahf
inc
lds
mov
jle
cld
cld
pop
push
imull
push
ss
pusha
popl
cmp
jo
push
inc
mov
mov
pop
je
pop
xor
xor
test
aas
mov
cmpsb
gs
mov
push
adc
loopne
fwait
mov
xor
pop
insl
or
cli
mov
add
ja
push
pop
mov
in
and
mov
insl
dec
sub
pop
movsl
fstpl
in
addb
stos
pop
pop
outsb
hlt
push
and
out
cld
sub
das
mov
fst
sub
push
xchg
sub
mov
xchg
das
aad
test
divb
jb
sbb
pop
and
arpl
add
clc
mov
data16
jno
sub
in
movsb
popa
fcom
das
aaa
std
lock
sbb
loop
insb
cli
sbb
push
sbb
popa
push
data16
pop
outsb
pop
icebp
jge
mov
ret
insb
pop
imulb
pop
in
inc
outsl
aas
sbb
fistl
xchg
mov
dec
mov
mov
or
arpl
and
adc
mov
std
scas
sbb
or
fadds
jmp
shrl
or
cli
inc
icebp
push
push
jecxz
mov
jg
fisttpll
pop
xor
addb
push
xchg
xchg
lock
or
xchg
sbb
out
addb
dec
add
fistl
popa
negb
sbb
add
insb
iret
mov
xchg
push
dec
dec
jge
cmp
sti
mov
lock
cli
adc
pop
adc
fidivs
lock
mov
add
idiv
leave
push
cltd
jno
mov
stos
pop
addr16
movsl
add
dec
add
das
or
add
add
push
je
aaa
push
cli
hlt
cmpl
scas
aaa
xchg
mov
mov
test
mov
mov
pop
mov
dec
pop
in
mov
add
xchg
pop
ljmp
dec
std
mov
iret
movsl
sbb
add
mov
into
xchg
incb
cmp
notl
xor
in
mov
test
pop
push
dec
cmp
daa
in
es
push
jg
jnp
add
std
pop
mov
subb
add
pop
xorl
mov
ds
pop
cmp
test
or
pushl
stc
pop
shlb
out
mov
pop
push
mov
roll
xchg
push
cmp
jae
pop
rolb
std
push
push
jo
cli
dec
incl
pop
push
andl
mov
dec
add
icebp
dec
test
out
js
loop
leave
cld
xor
add
in
outsl
xor
xchg
add
mov
cs
insl
fmul
aam
shll
popl
sbb
aaa
outsl
mov
pusha
xchg
mov
mov
pop
push
roll
dec
pop
aad
mov
scas
jno,pn
dec
imull
jo
lahf
add
cmp
les
xchg
jle
add
add
sar
roll
or
pusha
pop
sbbl
push
loope
out
jmp
out
call
pop
mov
inc
xor
lock
sbb
ds
xchg
inc
push
nop
enter
sbb
fwait
in
add
xlat
add
clc
gs
sahf
lret
jecxz
xor
jns
lcall
mov
xchg
loopne
sbb
lret
int3
cld
dec
sbb
out
cmc
jno
clc
or
add
mov
add
xchg
fistps
test
lcall
xchg
subl
push
jg
or
sbb
decb
push
push
pop
pop
lds
xchg
cld
fwait
clc
cmc
dec
xchg
out
std
sub
jb
jb
jmp
mov
mov
dec
bound
je
outsb
mov
pop
loopne
aaa
ss
mov
mov
jno
mov
push
or
repz
cld
cli
jg
in
dec
push
mov
dec
and
or
bound
ljmp
ljmp
or
lcall
xchg
in
pop
lahf
rol
lds
jae
jnp
adc
rorb
cmp
mov
pop
stc
repz
clc
aaa
cltd
xor
jo
inc
ljmp
cld
cs
fbld
adc
adc
insb
sbb
cld
jo
paddd
or
shlb
arpl
mov
adc
test
clc
sub
mov
inc
stc
dec
test
insl
cmpl
inc
xchg
xor
stos
pop
adc
stos
jmp
addl
mov
mov
dec
pusha
scas
or
jecxz
mov
or
pop
and
loopne
pop
sbb
pop
call
loope
lods
mov
sbbb
in
dec
loope
loope
xor
pop
push
mov
xor
xor
jbe
and
in
idivl
imull
and
push
dec
retw
xor
lock
pop
stos
xor
mov
jno
ffreep
or
dec
call
das
rol
xor
push
push
or
lock
popl
or
or
outsl
mov
imull
sbb
rclb
pop
jl
outsl
lahf
out
sbb
mov
lea
add
xor
mov
jl
addr16
cmc
adc
mov
dec
sti
outsb
pcmpeqb
call
in
jge
mov
shrb
pop
inc
icebp
xchg
xor
frstor
mov
notb
fdivp
pusha
sub
addr16
push
out
xor
arpl
cwtl
cmp
pop
dec
clc
arpl
hlt
push
sub
or
ss
stc
cmp
inc
ret
sub
cmpsl
add
data16
dec
imull
push
sbbb
sbb
inc
lcall
xor
sbb
sbb
bound
incl
js
jmp
cmp
mov
jecxz
ret
movsl
ss
pop
mov
addl
in
fstl
fildl
cld
mov
mov
sarl
pop
jo
fucomp
xchg
dec
mov
sbb
jae
popa
pop
jnp
fnsave
pusha
pop
xor
out
aaa
stc
vmaxsd
or
xchg
mov
lea
mull
rorl
fbld
cmc
sub
dec
push
xchg
daa
stos
jg
sub
test
mov
xor
outsl
pop
xchg
fmull
adc
mov
call
xchg
inc
jmp
jo
xor
push
and
jne
dec
out
add
add
cld
mov
mul
imul
test
outsb
sub
push
je
mov
sbb
insl
dec
jecxz
adc
loopne
push
sub
test
fistpl
pop
jecxz
mov
jecxz
add
test
lds
outsb
sbb
or
pop
incb
mov
in
cld
mov
inc
hlt
out
insl
jg
insl
push
addl
cld
push
les
sbb
aas
in
adc
push
cmpb
push
loope
or
xor
jb
dec
xchg
mov
incl
sbb
shll
aaa
dec
in
xor
pop
mov
call
jae
inc
lcall
cli
outsl
mov
js
inc
add
test
add
cmp
inc
and
pop
pop
orl
aaa
inc
or
mov
pop
or
or
sub
xchg
jecxz
inc
or
ficompl
mov
push
xchg
sti
push
mov
mov
aad
nop
jb
dec
cli
dec
push
mov
push
mov
add
mov
jo
cwtl
stc
mov
inc
or
adc
pop
lahf
inc
add
mov
pop
dec
sarl
mov
cltd
mov
push
push
xchg
push
cmp
dec
or
lret
mov
orl
xor
push
jecxz
mov
xchg
pop
clc
cs
or
into
lret
test
jg
call
mov
orl
ljmp
pop
int
divl
sti
cmp
outsb
pop
mov
mov
xchg
mov
jae
sti
pop
cli
or
test
push
loopne
dec
add
loope
das
dec
addl
pusha
ja
add
out
sar
aaa
je
push
ficompl
cld
call
or
mov
rcrl
push
sbb
test
mov
adc
inc
add
push
js
sbb
pop
insl
out
jg
fidivs
subl
mov
dec
or
aaa
cmp
ljmp
mov
incl
ljmp
sbb
int
add
icebp
repz
hlt
pop
fstps
dec
mov
and
push
je
sbb
inc
add
push
inc
xchg
clc
lcall
divb
jo
xchg
mov
jecxz
xchg
pop
out
or
cli
push
sub
jne
or
sub
and
sti
dec
ss
or
je
mov
mov
daa
cli
jo
imul
add
jle
push
cmp
jmp
jne
popf
inc
push
cmp
pop
pop
mov
je
addl
pop
je
ljmp
push
je
sti
je
mov
cmp
sbb
loopne
sub
in
pop
ds
lods
les
repz
or
insl
in
xor
lds
dec
sbbb
jb
in
inc
fsubrs
pop
adc
jbe
jge
sbb
ret
loopne
cld
mov
movsl
stc
mov
mov
outsb
lods
sub
fcmovnb
test
cmp
cli
xchg
cmp
sbb
sub
pop
loop
add
mov
cld
test
adc
inc
int
jno
mov
or
test
cmp
out
inc
jmp
sbb
scas
aam
mov
sti
pop
xlat
jo
in
mov
push
dec
mov
dec
or
outsl
es
ret
jns
push
arpl
pop
and
cmp
shlb
aam
rep
sbb
push
in
xchg
jecxz
pop
mov
loopne
das
or
xor
aaa
rcrb
pop
repz
push
push
xor
sbb
jecxz
arpl
call
repz
ds
dec
shrl
lret
jg
loopne
fnstenv
test
scas
adcl
mov
adcl
cld
add
mov
out
mov
pop
hlt
insb
add
jecxz
xor
pop
or
pop
loopne
addl
stc
inc
xor
aas
cld
push
test
mov
mov
lock
push
mov
imul
je
lock
mov
jg
pop
inc
jbe
cltd
mov
sub
and
or
or
cmp
fstpl
and
std
mov
xchg
test
pop
das
cmp
outsl
mov
adc
dec
in
divb
inc
or
pop
pop
adc
decl
adc
cmp
in
xchg
dec
out
push
lods
add
jmp
mov
inc
and
aad
xor
pop
test
mov
cmp
lahf
mov
incb
call
lds
pop
je
getsec
pop
inc
push
test
dec
sbb
cmp
mov
insb
cmp
xchg
lds
push
out
cmp
lds
adc
outsl
shll
sbb
std
outsl
cld
add
ret
loopne
pop
out
sahf
adc
outsl
stos
aaa
sub
out
lods
push
in
cli
iret
mov
inc
mov
mov
mov
jecxz
jbe
dec
push
sub
arpl
cmp
and
cmp
shl
xor
pop
mov
xor
jge
xlat
pop
xchg
ss
mov
out
xchg
ja
lods
cmp
add
test
cmp
ljmp
insl
mov
mov
inc
inc
arpl
outsb
adc
les
push
mov
jno
mov
call
cmp
insl
jmp
fisubrl
mov
cld
dec
inc
inc
sub
fildl
sub
add
test
test
pop
cmp
addr16
cld
jecxz
mov
inc
jmp
or
inc
jle
mov
cmp
or
add
pusha
fstpt
test
or
insl
and
test
aam
push
jno
test
fs
adc
inc
xchg
dec
add
add
mov
test
inc
cld
push
sbbl
test
in
sub
cmp
mov
add
aam
cmpl
add
jae
fstpl
outsb
mov
je
daa
out
mov
testl
test
mov
jnp
dec
lock
add
mov
aad
mov
decl
pop
mov
lea
jns
adc
inc
in
or
lock
rcll
cmp
mov
jg
jae
pop
jns
sub
es
push
push
aam
pop
sahf
jne
stc
sbb
jg
lods
aad
enter
dec
pusha
sbb
cmpsl
or
xorb
inc
fdivr
daa
and
clc
gs
pop
mov
inc
testl
aam
xor
pop
jns
or
aad
jno
cli
out
pop
mov
inc
call
push
xor
outsl
push
dec
dec
push
push
adc
jb
push
cmp
outsl
icebp
out
sbbl
lahf
imul
fs
push
imulb
repz
das
mov
jecxz
jle
jle
in
call
add
mov
call
std
pop
pop
xchg
mov
mov
pop
mov
mov
push
ret
mov
les
cmpb
jno
inc
stos
jne
jg
ja
mov
jo
xchg
pop
mov
xor
adc
cmp
std
jg
cmpl
xlat
pop
cmpsl
aam
ss
cmp
popl
mov
mov
or
call
movsb
push
adc
aad
sub
and
lds
loopne
sbb
xchg
mov
dec
adc
xor
test
and
pop
and
fucomi
jae
in
mov
cli
mov
push
aas
push
out
scas
sbb
lock
sbb
mov
xor
divl
pop
xor
mov
push
add
add
push
gs
shlb
and
shlb
ja
add
push
loopne
mov
pop
cmc
xchg
cmp
push
dec
mov
or
xor
aas
dec
sbbl
mov
adc
sbb
popa
xchg
ret
xor
inc
mov
arpl
pop
mov
in
and
mov
mov
pop
shlb
mov
clc
jge
pop
add
fimull
aad
dec
pop
into
dec
outsl
ret
ret
xchg
test
xchg
or
sbb
pop
orb
fildl
clc
inc
rcll
mov
test
fstl
test
add
dec
loopne
sub
mov
dec
incb
fs
xchg
jb
dec
sbb
dec
dec
arpl
dec
nop
std
aad
jae
mov
outsl
cli
std
dec
out
in
ffree
outsb
lods
push
jg
dec
test
test
rcr
ja
add
xlat
daa
or
out
loopne
pop
test
out
cld
in
fisubrs
mov
dec
arpl
xchg
mov
push
mov
pop
mov
lahf
or
pop
mov
dec
pop
test
pusha
mov
arpl
subl
hlt
jecxz
sub
jo
cmp
mov
xchg
lods
and
loope
inc
xlat
popa
xor
cwtl
insb
jnp
in
sub
incb
mov
inc
mov
add
pop
mov
dec
cmp
popa
dec
push
out
push
mov
imul
dec
pop
bnd
out
pop
cli
out
dec
xor
inc
cmp
movsl
jecxz
push
imull
jno
push
cli
loopne
mov
lock
sub
je
xchg
pop
lcall
inc
pop
fdivr
or
add
ss
sub
sti
mov
jmp
mov
mov
mov
pop
sub
loopne
jae
scas
cwtl
divl
or
adc
icebp
push
pop
cmpb
mov
out
cld
lods
js
add
mov
xor
shl
das
sub
fdivr
ss
and
loopne
add
or
sub
testb
mov
test
iret
sahf
or
inc
cmpb
xor
test
jnp
push
jne
cmc
jle
lds
sub
push
cs
cli
scas
icebp
adc
arpl
sub
int3
and
out
stos
fs
mov
arpl
ficomps
shr
insl
pop
pop
mov
icebp
sub
mov
call
mov
mov
adc
ss
push
pop
push
push
addr16
mov
rcll
and
add
cs
cmp
and
jecxz
mov
inc
jge
shrb
add
outsl
insb
jne
icebp
pop
dec
push
sbb
mov
jmp
sub
movsl
pop
mov
insl
mov
pop
xor
inc
sbb
jle
or
cmp
add
pop
pop
push
jl
push
ja
lods
pop
fildll
cld
dec
pusha
subb
dec
dec
add
mov
push
sarb
leave
jo
fwait
add
mov
mov
data16
jecxz
sub
jge
push
jo
in
ja
jo
bnd
incb
push
mov
jne
add
and
and
pop
sub
pop
add
and
adc
ret
lret
cld
ret
lea
shrb
adc
andl
mov
or
add
stos
addl
mov
jno
jno
mov
pusha
pop
xor
ja
aaa
fisttpll
int
pop
insl
sbb
inc
stos
push
jo
movsb
fdivp
ret
les
mov
mov
gs
stos
pop
mov
and
fs
loop
cmp
jnp
ficomps
loope
sbb
pop
fs
pop
xor
sbb
cmp
fisubrs
dec
out
sbb
in
decb
std
pushf
aad
mov
xorl
dec
xor
outsb
mov
cmp
dec
fldl2t
jp
inc
out
fiadds
xchg
adc
arpl
mov
clc
ret
loopne
jle
popf
mov
jmp
dec
aam
out
jmp
clc
inc
jbe
movsl
inc
int
sbb
pusha
mov
sbb
add
and
stc
push
cmp
imul
rcrb
pop
loope
lock
or
repz
sbb
add
popf
sub
clc
fdivrl
movsl
movsl
jmp
repz
jge
imulb
or
lods
es
popf
imul
push
mov
and
mov
xchg
mov
sub
push
mov
pop
stc
daa
mov
sub
mov
insl
ffreep
out
pusha
mov
mov
cmp
mov
stos
std
dec
dec
jecxz
and
cmp
pop
dec
in
ja
clc
sbb
rorb
jg
arpl
pop
jae
std
dec
sbb
jg
xchg
add
cmp
mov
dec
lret
testb
add
add
and
xchg
pop
in
sub
outsb
dec
std
data16
add
test
std
mov
adc
cmp
call
sub
xchg
popa
sub
in
mov
sbbb
dec
push
or
mov
and
cld
xchg
pop
jnp
lret
pop
push
jg
xor
jne
jnp
adcb
cmp
cmpsb
fstl
mov
jecxz
in
adcb
xor
mov
jne
inc
pusha
mov
int
jns
lret
lods
loopne
mov
das
cli
gs
adc
inc
lock
mov
test
mov
xorl
out
lahf
dec
cltd
out
jg
cli
test
lock
add
mov
lcall
jg
or
xor
pop
sub
mov
sub
add
mov
test
jecxz
fbld
mov
aaa
ja
add
adc
loopne
and
out
out
test
lahf
mov
and
adc
int
cmp
loopne
cmp
add
sbb
sbb
addb
arpl
sub
stc
fldt
pop
mov
sub
add
pop
cmpsl
test
outsb
out
iret
xor
insl
sub
mov
push
xor
xor
inc
pop
push
xchg
in
mov
mov
sbb
cmp
push
mov
loopne
and
scas
jle
std
push
push
push
loopne
and
sbb
cmpsl
cli
cs
sti
jno
bound
or
push
add
push
out
and
cmpsl
mov
adc
dec
jecxz
and
push
cld
adc
loopne
push
or
and
push
cli
dec
pusha
popf
ss
push
mov
xor
rcrl
lods
insb
add
sub
pusha
mov
movsb
mov
or
mov
das
pop
loopne
and
pop
outsb
shl
sbb
cmpsl
std
out
mov
pushf
lea
cs
daa
sbb
pop
dec
mov
pop
fcompl
cwtl
sbb
negl
cmpsl
sbb
repz
cmpsb
movsl
xor
sarl
mov
sbb
cmp
pop
test
shrl
jns
sbb
in
mov
or
ret
scas
icebp
movsb
pop
popf
gs
mov
add
movsb
data16
mov
stos
jecxz
xchg
or
movsb
add
push
or
xchg
jns
cmpb
jae
movsb
dec
jp
ret
and
out
mov
fsubrl
lock
sbb
test
stos
std
rcr
jo
sahf
mul
mov
addr16
or
movsl
outsl
repz
adc
mov
lahf
int
cmpsl
sbb
stc
xor
sub
gs
test
imul
jne
push
mov
jp
cmpsl
iret
cltd
cmp
shlb
pop
dec
imul
sub
pop
scas
shrl
jmp
mov
pop
call
mov
sbb
gs
cmp
mov
test
cmp
add
or
dec
and
mov
testl
ret
leave
shl
or
push
add
aad
das
fwait
dec
js
cmpsl
pop
js
add
in
pushl
or
and
loop
cmpsb
icebp
push
lods
out
or
xor
es
das
addr16
dec
dec
iret
add
cmc
roll
pop
dec
xchg
and
int3
out
outsl
inc
and
testl
movsb
imulb
xchg
into
or
xor
xor
lock
cwtl
lods
sbb
out
cmp
and
inc
and
or
iret
cmp
xchg
mov
std
mov
ljmp
add
addr16
push
jecxz
jae
mov
push
dec
adc
pop
add
arpl
inc
scas
adc
push
xor
or
test
and
gs
inc
and
pop
jmp
mov
aad
dec
jle
add
xchg
cld
mov
or
dec
cli
push
lds
cmpsb
dec
sbb
rcll
int
and
cltd
and
pop
jns
mov
ja
lods
jecxz
in
sbb
add
outsl
lock
popa
or
jp
addl
jg
les
cltd
gs
and
repz
pop
cmpsl
sub
or
testl
pushf
fs
mov
cmp
push
cmp
movsb
sbb
mov
jmp
cmp
xor
cmp
xor
loop
ds
push
pop
cmp
test
shll
push
in
jns
outsl
fdiv
adc
mov
and
movsl
out
xor
pop
sub
mov
add
pop
popf
push
imul
call
scas
and
dec
sti
inc
xor
test
test
insb
add
lods
iret
repz
movsl
jnp
pop
adc
mov
xchg
sbb
out
adc
or
mov
push
loop
or
leave
inc
lea
mov
mov
add
in
sbb
pop
pusha
popa
imul
jg
mov
cs
inc
rorl
jne
insb
or
sbb
mov
mov
pushl
push
sub
pop
stc
inc
in
lret
pusha
pop
mov
pop
daa
arpl
add
add
inc
or
outsl
lds
inc
lret
test
and
aas
movsl
mov
arpl
orl
xor
xchg
orb
mov
arpl
or
roll
aas
inc
mov
pop
cld
mov
xor
jnp
adc
jg
mov
xlat
loop
inc
mov
sbb
lea
jo
movsl
push
in
repz
mov
mov
pop
pop
xchg
mov
jg
push
cld
xchg
mov
jle
in
mov
aaa
adcb
shl
inc
out
xorl
or
mov
jl
mov
aaa
dec
dec
dec
pop
jg
mov
mov
das
addr16
or
cmp
push
mov
pusha
sti
lret
test
dec
xchg
dec
mov
sub
dec
test
js
dec
dec
cmp
mov
dec
jns
faddl
and
outsl
out
out
sbb
shrb
mov
das
push
and
jge
xorb
xor
rcll
mov
frstor
mov
sbb
loopne
pop
das
push
push
sbb
sbb
lock
adc
icebp
dec
les
js
mov
js
mov
bound
add
test
and
xor
sarl
adc
dec
aas
fwait
mov
and
pusha
aad
and
movsl
cli
or
cmp
and
je
mov
push
pop
mov
pusha
sbb
aad
cmp
push
mov
or
loopne
loop
outsl
adc
jb
xchg
jno
or
outsb
pop
inc
aam
sub
push
stc
aaa
cmp
xchg
jle
rcll
fildl
pop
insl
mov
pop
mov
push
pop
roll
mov
pop
mov
mov
xchg
mov
mov
loopne
sbb
mov
mov
gs
pop
pop
cmp
loop
filds
add
add
pushf
push
mul
pushl
sahf
repz
orl
stos
mov
xchg
rcrb
cmc
mov
enter
data16
ret
in
sti
jmp
jb
stc
pop
repz
lock
xchg
or
inc
call
or
scas
out
hlt
push
ror
out
cld
pusha
hlt
mov
jnp
fldenv
sti
int
mov
mov
out
adc
xorb
sbb
les
xchg
repnz
repz
mov
stos
mov
mull
mov
xchg
mov
adc
pop
xor
xchg
dec
ret
loopne
sub
enter
and
leave
enter
and
enter
sbb
leave
enter
sbb
out
mov
addr16
fs
or
mov
dec
push
mov
aas
push
push
jb
xchg
cld
das
in
sbb
jb
clc
pop
mov
hlt
and
mov
adc
cli
add
addr16
jae
adc
in
clc
ror
int
sbb
mov
xor
push
lock
cmp
fldcw
aaa
into
or
inc
fstps
fisubrl
cmp
incb
lea
in
je
int
or
fs
and
inc
mov
sub
cli
rclb
cmpsl
div
movsb
xchg
lds
or
jb
add
mov
pop
divb
in
cmc
sahf
xor
add
lea
test
xor
gs
hlt
mov
clc
inc
mov
aad
dec
push
daa
test
and
pop
pop
mov
insl
add
push
mov
push
push
loope
decl
push
add
enter
data16
outsl
cmc
outsl
dec
or
ret
adc
sub
or
cmp
mov
cli
repz
push
scas
cmp
jl
imul
sbb
inc
mov
jo
sub
shll
sarl
insb
add
js
stc
push
cmp
and
or
add
pop
mov
mov
lcall
xchg
inc
or
add
leave
cmpl
add
cmc
cmp
add
jne
ja
sub
sar
adcl
mov
push
pop
mov
push
jp
or
clc
ret
cld
jb
in
or
mov
out
test
jo
xlat
outsb
inc
movsl
adc
mov
loopne
xchg
cmp
jno
aaa
loopne
mov
das
imull
and
mov
mov
ds
add
pop
call
jbe
stc
inc
cmp
in
pop
loopne
std
ret
lahf
sti
dec
das
rclb
mov
lea
push
sti
sub
cs
inc
fstpt
inc
daa
je
and
inc
sub
cmp
jb
daa
add
inc
cs
pop
add
inc
add
cmc
dec
mov
pop
sbb
sub
std
clc
push
and
aas
test
fidivl
cmpsl
lea
movsb
dec
repnz
inc
pop
loopne
cmp
xchg
dec
pusha
jnp
mov
adc
add
bound
stos
adc
fisubl
gs
neg
mov
jg
push
testl
gs
addr16
lahf
cld
pop
mov
sbb
sti
lds
gs
gs
faddl
dec
jge
cmc
jno
leave
aad
cvtdq2ps
add
xor
and
movsl
dec
ljmp
add
mov
aaa
pop
mov
cmp
lahf
mov
insb
mov
int
cmp
fxch
enter
aam
adc
xor
xchg
inc
jecxz
insb
cmp
int
cmp
cli
mov
xchg
out
pop
cltd
or
push
in
adc
fnsave
outsl
xor
xchg
fwait
dec
adc
inc
or
jno
or
orl
dec
push
mov
pop
lret
cwtl
lahf
mov
push
or
out
ja
add
es
mov
sbb
imul
jo
mov
stc
pop
cli
outsl
std
xchg
stos
or
test
push
hlt
jle
dec
xor
lods
sbb
sbb
xor
jp
sarl
xchg
add
dec
or
subl
test
inc
inc
in
mov
add
adc
jl
test
pop
mov
fs
cmovb
adc
xchg
pand
out
adc
inc
or
pop
adcl
ret
add
xchg
xchg
rolb
dec
addr16
cli
and
ss
loopne
popa
cmp
imul
or
pop
andb
sbb
or
mov
inc
notl
orb
shl
js
adc
icebp
push
stc
or
loopne
testl
stc
clc
addb
sbb
in
in
rclb
dec
lods
jbe
mov
lds
xchg
mov
jg
movsl
jmp
adc
add
js
push
in
or
mov
dec
fwait
inc
test
push
out
pusha
rorl
imul
shll
dec
out
loopne
insl
sbb
jmp
sub
cmp
je
lods
daa
inc
sbb
imul
sti
inc
sbb
adc
outsl
jno
rcll
or
outsl
xchg
ret
in
xchg
mov
or
jnp
addl
hlt
repnz
jb
xchg
clc
adc
in
xchg
or
or
xchg
and
sbb
aaa
hlt
or
mov
or
stos
dec
cmp
xchg
push
test
clc
test
push
jb
mov
pushf
popa
jp
fnstcw
fstp
loope
cli
jb
loop
insl
jnp
pop
dec
inc
xor
out
add
mov
mov
insl
out
outsb
loop
mov
xchg
lock
push
and
sbb
jecxz
jnp
mov
aas
or
mov
cmp
daa
daa
gs
pop
test
mov
pop
jne
inc
push
loopne
add
inc
jg
fxch
dec
xchg
inc
sub
pop
mov
stc
add
add
addr16
and
scas
andl
pusha
jmp
cltd
pop
bound
fimull
fwait
arpl
daa
xchg
sti
push
loopne
inc
fwait
push
aaa
dec
xchg
fiadds
lcall
xchg
cmp
or
xor
add
cmp
rcrl
not
push
in
push
sbb
add
adc
inc
test
ret
mov
add
add
mov
inc
lock
mov
push
imul
or
out
dec
rcll
test
pop
pop
sbb
sbb
jg
pshufw
rclb
es
jne
leave
inc
and
add
xchg
push
xor
jo
mov
pusha
and
dec
mov
push
or
movsl
push
adc
jo
pop
jno
sti
jmp
push
mov
pop
cltd
push
inc
imul
cmp
xor
sti
jg
std
ret
sub
insl
ja
xchg
push
test
push
outsl
sbb
test
sbb
js
sti
in
or
in
or
das
vorpd
push
pop
out
or
call
push
pop
orl
or
movsl
jg
xchg
push
fs
aaa
sbb
mov
sbb
mov
sub
pop
mov
jns
xor
test
pop
test
xor
bound
sbb
mov
mov
stc
ja
rolb
mov
mov
ret
jmp
lds
ret
loopne
mov
xchg
add
sub
lods
and
push
xchg
mov
lds
sub
adc
orb
push
push
adc
push
lret
mov
les
pop
jnp
or
pop
push
adc
dec
add
lret
das
aaa
cli
fbstp
lds
std
ja
or
mov
cli
inc
or
call
mov
add
mov
daa
std
dec
and
mov
dec
popa
mov
or
daa
dec
fidivrl
mov
pop
mov
and
pop
cli
jge
loop
or
out
jecxz
or
push
ljmp
repnz
xor
ljmp
test
dec
lds
pop
test
hlt
inc
loopne
or
pop
cmp
push
out
outsl
rclb
mov
adc
ret
cld
test
push
adc
mov
xchg
push
insl
jecxz
xchg
inc
or
lea
sbb
hlt
or
jecxz
or
lcall
test
inc
jle
add
xchg
xchg
cli
xor
sbb
mov
shr
jnp
cld
adc
or
adc
add
ljmp
mov
out
sar
and
cmp
test
lcall
rorl
push
cmp
add
fidivrl
xor
dec
sub
push
jno
pop
pop
addl
xchg
rolb
add
aaa
jg
cmp
or
push
js
add
inc
push
cmpl
mov
incl
push
dec
jge
inc
or
jb
inc
adc
mov
mov
inc
push
push
jns
push
gs
test
push
jne
call
das
adc
icebp
jmp
ds
aas
sub
xchg
test
mov
dec
mov
mov
add
xchg
sti
js
add
inc
jecxz
push
outsl
shll
mov
or
jp
sub
jmp
je
loopne
add
bound
add
mov
push
mov
cmc
ja
pop
incl
out
outsl
sub
push
and
xor
aaa
ss
jb
cmpsl
add
outsl
mov
adc
jae
fcmovnu
stos
or
lods
or
imul
pop
les
jmp
roll
mov
cmp
fcomi
ffreep
icebp
fs
or
mov
inc
aaa
mov
lea
data16
add
xorl
addr16
xchg
js
in
mov
add
stos
pusha
stos
hlt
inc
test
cwtl
insb
xor
pop
icebp
sbb
add
lcall
or
lret
repnz
outsb
add
fs
test
xchg
cmp
lock
add
push
xor
mov
add
outsl
cs
mov
pop
call
imul
push
jae
outsl
mov
mov
mov
out
in
aam
add
bound
pop
mov
bound
xor
pop
sti
aas
xchg
gs
int
add
and
repnz
sbbb
mov
mov
test
in
add
push
pop
push
jmp
dec
push
pop
and
xor
mov
xor
pop
hlt
aas
add
mov
shll
pop
and
sub
ljmp
std
lahf
dec
mov
fistpl
sub
jge
xor
pop
in
fldt
dec
aas
or
jnp
mov
loope
adc
add
pusha
and
imul
in
filds
mov
lret
loopne
bound
xor
dec
mov
pop
out
aas
mov
mov
gs
pop
and
fwait
jg
shl
data16
lods
in
mov
out
jne
jmp
push
push
inc
sbb
test
aaa
pop
aas
popa
incb
mov
lods
mov
inc
add
inc
loope
mov
out
in
je
add
repz
mov
mov
or
ret
pop
repz
gs
jle
push
incl
or
div
int
pusha
pop
and
cmc
push
jg
pop
mov
mov
add
arpl
mov
jg
push
ret
add
push
insl
sarl
pop
xchg
cli
call
addr16
jmp
cmp
repz
mov
hlt
arpl
mov
in
jge
push
xchg
add
mov
inc
mov
loope
sti
lret
pop
inc
mov
nop
in
repnz
outsb
mov
lret
push
call
ret
jp
and
lods
mov
pop
or
pop
pushf
out
add
dec
cmpsb
xchg
xchg
lods
or
out
subl
ljmp
add
cld
insl
out
fnsetpm(287
mov
std
insb
fildl
lock
rcr
pop
leave
xchg
negl
mov
out
data16
aaa
mov
addr16
cmc
cltd
cli
hlt
jbe
jmp
push
fmull
jle
jp
pop
push
test
inc
cmc
pop
jmp
cmp
mov
sub
outsl
push
pop
add
movsl
in
std
mull
lret
data16
push
movsl
and
movsb
sub
and
fdivrs
pop
decl
add
fwait
nop
clc
adc
cmc
cli
iret
data16
adc
fs
push
cmp
xchg
les
sbb
push
mov
cmc
pop
sub
fs
lock
aaa
lret
ss
pop
cmpl
jmp
test
dec
js
outsb
push
and
mov
fs
jmp
fsubp
and
gs
add
pop
pop
fstpl
adc
sti
sahf
insl
mov
pop
dec
cld
and
mov
imul
addr16
dec
hlt
data16
sub
dec
add
adc
push
std
es
mov
mov
iret
sub
lods
push
popf
or
jge
bound
shufps
lods
loopne
pop
mull
push
mov
mov
ret
data16
cmpl
xlat
dec
add
add
push
cmpsl
call
or
push
clc
pop
pop
pop
xor
mov
mov
repnz
mov
push
pushf
and
adc
inc
sbb
hlt
push
outsl
adc
fisttpl
in
std
inc
xchg
push
push
fistps
adc
adc
sbb
push
sar
jg
push
and
aas
adc
inc
pop
sub
jmp
inc
pop
rcr
or
mov
sub
pop
imul
sbb
outsb
insl
pop
sub
add
inc
push
mov
lret
jmp
mov
into
fisttps
out
sti
adc
pop
pop
ljmp
dec
add
into
or
fcomip
push
addr16
inc
xorps
inc
mov
dec
lock
pop
jle
or
addl
mov
or
or
push
das
jecxz
xchg
cli
cmp
stc
adc
jge
inc
cmpsl
cwtl
adc
sar
rol
call
sarl
or
out
orb
inc
jg
icebp
into
add
inc
divl
out
xor
cmp
icebp
sbb
mov
or
and
arpl
mov
rcl
leave
out
jge
outsb
test
mov
imul
lods
fwait
test
loope
sti
mov
add
addb
add
in
xchg
jnp
add
fdivrs
shr
and
sarb
rcll
fiaddl
jno
cmp
add
pop
test
fld
inc
add
dec
push
mov
mov
push
inc
ds
xchg
addb
ds
xchg
inc
jle
jg,pt
js
inc
leave
in
fisttps
fsts
pop
jae
arpl
dec
push
and
js
out
mov
ret
insl
add
pop
push
std
sarl
and
push
xor
test
shlb
rolb
js
or
mov
push
xchg
inc
inc
cmp
test
lods
icebp
or
inc
leave
xchg
add
insb
mov
dec
add
jno
mov
stc
out
adc
mov
lds
in
call
insb
pop
mov
sub
mov
pop
cltd
jae
sub
mov
cli
and
xor
pop
or
lahf
out
mov
aaa
cld
and
or
outsl
bound
pop
mov
and
fisttpll
test
mov
mov
test
lds
jne
jno
jmp
jbe
push
repz
dec
adcl
push
jo
jle
mov
imul
notl
int3
imulb
icebp
mov
in
cli
or
mov
sub
sbbl
and
add
std
mov
mov
scas
es
add
clc
push
or
mov
mov
sti
and
insl
xchg
test
sti
outsl
cld
adc
xor
pop
xchg
sub
mov
addb
jl
jmp
push
lods
lods
js
jne
out
cmpsl
fldt
stos
add
xchg
scas
pop
adc
and
pop
mov
arpl
adc
mov
add
mov
fs
or
mov
xchg
enter
fcmovnb
pop
in
popf
fsubr
pusha
add
sub
and
clc
push
jb
fisttpl
in
test
mov
mov
pop
add
decl
add
sub
and
mov
out
xor
dec
test
xchg
fstl
mov
jl
fwait
or
popf
fdiv
xor
add
data16
aad
inc
jae
fucomip
fdivrp
sub
ja
adc
stos
stc
xor
test
or
mov
adc
fdivr
xor
jecxz
stc
cmp
pop
out
fistpl
cwtl
loope
sub
add
cmp
jl
sub
jl
mov
lahf
stc
jg
test
mov
stos
mov
adc
test
xor
fsubs
or
push
mov
inc
cli
imul
cld
inc
jg
or
rcrl
cmp
in
mov
pop
idiv
pop
jg
mov
pop
icebp
adc
fldl
sbb
rcrl
or
mov
fisttpl
dec
lods
jbe
add
push
inc
xchg
xor
fsubl
or
adc
repz
sub
adc
mov
loop
xchg
ja
stc
push
pop
cmp
clc
pop
push
fs
mov
inc
mov
roll
std
inc
jnp
cmpsl
or
imull
jns
fnstcw
add
xchg
or
inc
and
sahf
add
jecxz
icebp
mov
mov
or
mov
dec
pop
xchg
sub
roll
mov
bnd
cs
pop
jno
jmp
and
test
and
repz
gs
lock
sbb
shll
xor
aam
outsb
sbb
outsb
mov
push
mov
sbb
sbb
pusha
push
dec
dec
pop
adc
xchg
dec
mov
hlt
pop
mov
ljmp
push
and
mov
outsl
inc
inc
aas
or
leave
enter
lret
repz
cmp
dec
cmp
mov
add
jg
mov
test
xor
ljmp
sub
cmpl
lret
dec
cmpb
and
into
jge
cmp
or
loop
push
lret
cmp
out
dec
or
fistpll
jmp
loopne
mov
out
out
ficoms
inc
mov
or
add
or
in
jmp
or
out
mov
xchg
andb
jg
lea
mov
dec
fwait
int3
or
xor
div
jnp
std
popf
andl
jnp
mov
mov
jmp
and
cmp
sahf
shrb
add
sub
fisttps
push
mov
ss
outsb
or
or
into
inc
mov
out
out
movsl
pop
and
mov
stos
add
jle
outsl
lock
adcl
outsl
pop
push
mov
jb
jge
ret
jecxz
sbbb
jae
cmpb
int
jo
popf
movb
add
push
dec
cli
iret
add
push
dec
std
xchg
loop
jns
mov
dec
loopne
pop
push
rolb
or
outsb
ja
aaa
jge
push
dec
adc
sti
xor
add
push
inc
jnp
and
push
out
adc
inc
or
nop
fcmovnb
jne
daa
pushf
lret
insl
daa
add
push
ja
std
iret
andl
shl
pop
mov
pop
and
jae
outsl
push
je
mov
imul
mov
fwait
xor
lods
loop
pop
cmpb
cmp
imul
je
jno
mov
jecxz
shll
mov
sbb
add
jecxz
xor
daa
shll
popf
out
jp
inc
fisttpll
sti
enter
inc
loop
add
inc
test
sub
dec
xchg
lret
in
add
lret
arpl
xchg
daa
jmp
pusha
sub
xor
mov
push
js
cmp
xchg
adc
pusha
dec
data16
in
mov
xchg
pop
stos
popa
les
fucomp
add
sbb
dec
xlat
sub
inc
daa
xor
push
lret
in
fcomi
arpl
out
pop
int3
pusha
ret
imul
cmpsb
imul
jb
mov
arpl
in
bound
or
push
pop
cs
out
ljmp
cmpsb
data16
in
sbb
gs
fs
cs
fcmovnu
imul
insl
cmp
ss
dec
mov
addr16
mov
xor
mov
aam
sbb
cld
in
addr16
xlat
imul
cmp
mov
sahf
insl
push
addr16
pusha
pusha
pop
sub
inc
gs
fwait
mov
lret
mov
jecxz
imul
js
sti
mov
imul
int
mov
andl
adc
std
dec
shll
inc
pop
orl
iret
mov
push
pop
inc
stc
sub
pop
mov
jmp
ljmp
adc
xor
ds
cmp
inc
pop
cmp
add
nop
sbb
pop
or
or
jo
inc
xor
add
cwtl
sti
bound
shlb
fs
aam
arpl
lret
lcall
fs
subb
daa
pushf
popa
mov
push
adc
cld
cmp
pusha
int
inc
shr
daa
sbb
cmp
int3
ret
pop
push
pop
mov
and
pop
data16
push
movsb
xchg
mov
dec
and
out
int
lret
in
popa
adc
addr16
gs
addr16
arpl
dec
push
imul
xchg
adc
addr16
fs
jb
pop
outsb
adc
andl
pop
insl
shll
cld
pusha
arpl
xor
inc
daa
aaa
push
or
shll
enter
adc
xchg
adc
dec
shll
push
inc
xor
push
gs
xor
arpl
stos
ljmp
mov
imul
jnp
imul
dec
imul
in
insl
xor
push
lcall
lcall
sbb
pushl
arpl
fcmove
ret
fdivs
test
xchg
insb
xor
pushf
push
addr16
xor
jb
adc
fwait
mov
ja
femms
or
lcall
pop
sub
jge
imul
imul
sub
addr16
sti
dec
imul
clc
jmp
add
shlb
bound
push
fistpll
jno,pt
pusha
insb
pop
dec
outsb
pop
pop
arpl
dec
jno
clc
jg
pop
imul
insl
pop
addr16
outsb
imul
jae
in
push
cmp
jg
insb
pop
lods
add
insb
dec
insl
or
pop
arpl
imul
push
inc
cld
inc
dec
arpl
outsl
pop
insb
je
push
clc
imul
lea
std
outsb
inc
or
pop
fs
sbb
fbstp
aas
fs
pop
push
insl
push
pop
lret
xchg
std
das
mov
push
jno
jae
ds
mov
bound
jge
or
aas
push
stc
inc
inc
pop
pop
imul
cli
call
out
ja
inc
pushw
clc
add
addr16
cmp
jae
std
fcmovnu
in
push
addr16
movsb
popa
cmp
xor
dec
je
jb
mov
mov
mov
js
clc
addb
pop
fs
outsb
push
lods
arpl
in
mov
pusha
dec
pusha
imul
fs
popa
addr16
outsl
xor
roll
fstl
gs
addr16
imul
add
add
dec
dec
pop
insl
outsl
inc
jo
mov
inc
inc
jae
push
inc
mov
arpl
dec
pop
insb
arpl
mov
fdivrp
pop
outsl
push
arpl
jno
cmp
mov
mov
popa
imul
jno
daa
addr16
aas
insb
cltd
mov
pop
imul
imul
pop
dec
sti
dec
bound
insl
pop
in
cmpsb
in
push
and
jb
cli
dec
insl
ja
ret
lods
or
dec
fs
popa
addr16
insl
push
fldcw
outsb
roll
cmp
pop
imul
pop
cmp
push
mov
jb
pop
jae
cmp
sub
arpl
mov
pop
insb
jae
jl
or
ja
mov
pushaw
fldl
arpl
mov
mov
xlat
inc
ret
and
dec
mov
jb
ds
daa
imul
fcomi
xchg
ds
inc
repnz
in
mov
imul
add
imul
push
push
dec
das
sub
arpl
dec
mov
fisttps
cwtl
inc
or
daa
adc
cmp
lods
sti
out
outsl
aas
push
pop
adc
fs
insb
mov
or
sub
ds
imul
cmp
outsl
inc
mov
std
jecxz
fldcw
fisubrl
jnp
pop
dec
inc
inc
shll
loope
testb
insb
xor
popa
push
push
mov
dec
fbld
insl
sbb
inc
addr16
dec
divl
push
jnp
cs
jo
pop
push
popa
push
inc
sbbb
inc
push
aas
test
aas
bound
pop
js
in
enter
jae
inc
pop
ljmp
fcmovnu
cs
jp
pop
addr16
inc
fstpt
cmp
xor
sub
jmp
xchg
xchg
jne
outsl
inc
es
pop
cwtl
dec
pop
and
fsts
xchg
adc
mov
push
addl
push
mov
flds
cmp
in
outsl
insb
cmp
out
mov
shll
jne
dec
aas
inc
dec
cmp
sbb
dec
inc
xor
push
imul
mov
dec
arpl
mov
insb
sbb
inc
popa
gs
outsb
fdivrl
pusha
inc
pop
bound
stc
fimuls
insl
loope
loopne
inc
adc
dec
push
das
push
jp
sbb
popf
cmp
inc
push
popa
imul
arpl
add
addr16
dec
outsl
pusha
punpckhbw
xor
outsl
pop
dec
inc
insl
pop
sub
push
pcmpeqb
sub
dec
lods
popa
insl
add
fiaddl
pop
imul
dec
outsl
shll
pop
inc
sti
pop
jmp
mov
outsb
popa
ljmp
lahf
sbb
inc
push
lcall
cmp
inc
stos
daa
jbe
jo
cmp
dec
inc
cmp
call
popf
cmp
jg
sarl
cli
or
cmp
cmp
push
pop
add
std
cmp
sub
mov
sub
xor
outsl
jg
test
cmp
pop
movsl
jno
insb
insl
pop
loope
negb
outsb
nop
imul
cmp
cmp
gs
mov
mov
cmp
add
or
pop
dec
jae
cmpsb
outsl
cmp
pop
sbb
fadd
jb
pop
daa
insb
shll
dec
cmp
sti
mov
push
bound
sub
sti
aas
aas
jno
pop
inc
push
insl
scas
push
in
scas
rol
arpl
xor
cmp
popa
cmp
ds
dec
inc
lret
fbstp
cmp
testb
push
dec
jae
test
aas
push
pop
dec
cmp
xor
lods
aam
je
gs
aas
cmp
add
in
in
jae
push
mov
push
arpl
movsl
in
in
jb
inc
mov
pusha
icebp
sahf
pop
sub
pop
jge
sub
and
test
push
cmp
push
sub
sub
pop
inc
fldcw
das
add
test
pop
ret
call
dec
pusha
jno
aaa
fidivs
pop
or
push
into
outsb
arpl
fcmovnu
imul
pop
repz
pop
out
sar
or
mov
cmp
pop
fwait
mov
mov
sbb
xor
or
insl
inc
stc
lahf
dec
cmp
dec
ds
sub
insb
cmp
mov
inc
inc
aas
push
push
ja
sti
jl
dec
pop
cmp
push
dec
inc
imul
mov
in
sbb
aas
cmp
incl
test
pusha
cmp
push
aas
inc
cmp
std
dec
dec
push
inc
dec
xor
cli
push
push
mov
sub
sub
inc
dec
cs
enter
cli
fistpl
xor
xchg
mov
js
push
xchg
ljmp
outsl
ja
stos
insl
add
sbb
cwtl
insb
ret
ficoms
sbb
fnstsw
jne
jp
dec
arpl
inc
out
aas
jb
mov
mov
cs
loope
pop
clc
mov
cmp
push
inc
cmp
faddl
mov
imul
or
xor
jle
add
addr16
lret
or
pop
insb
mov
pop
push
mov
insb
adc
pop
jo
lahf
rcll
cli
pop
pop
bound
or
stos
sub
add
or
pusha
xor
and
sbb
out
insl
lods
dec
mov
or
cli
dec
inc
push
inc
dec
inc
cs
sub
scas
stc
stc
adc
outsb
imul
and
outsl
insl
mov
and
pop
outsb
clc
mov
lahf
mov
shrl
into
cmc
ljmp
sbb
cld
adc
add
adc
in
fldcw
jae
add
push
mov
ss
icebp
push
movsb
adc
es
jbe
dec
insl
imul
mov
lcall
adc
adc
push
sub
mov
adc
mov
std
add
filds
std
std
cli
add
mov
pop
mov
inc
pop
adc
sti
movb
pop
cmp
ja
gs
mov
mov
pusha
sub
rclb
loop
stc
test
fs
imul
push
cmp
jbe
pop
imul
or
sbb
jbe
inc
addl
push
push
bound
push
insl
sub
out
sbb
sub
inc
popa
mov
arpl
add
insl
adc
xor
clc
inc
jo
xor
mov
js
shrl
js
mov
jb
mov
mov
pop
insl
pop
cmp
test
pop
mov
sub
inc
cmp
je
cmp
mov
fildl
je
inc
pop
sub
xchg
bound
add
jns
stos
arpl
pop
insl
fildl
push
movsl
andl
and
sti
sbb
pop
std
jne
fsubs
push
sub
jae
and
push
daa
xlat
mulb
ljmp
or
sti
movhps
or
or
add
or
mov
mov
fdivrl
decl
mov
cwtl
mov
negb
loope
aaa
inc
push
stc
mov
lcall
xchg
cld
fsub
clc
cld
mul
pop
dec
mov
pusha
ja
jmp
mov
out
ljmp
popa
ja
mov
cld
ret
mov
mov
mov
fxch
mov
mov
cli
into
outsb
repz
lcall
cli
repz
repnz
mov
ja
xchg
btsl
data16
cld
enter
loop
lea
adc
jae
enter
ja
pop
adc
xor
imul
sbb
add
cld
xchg
and
out
imull
xlat
xlat
fcmovu
or
insl
mov
out
adc
mov
lahf
icebp
jg
ljmp
ret
cmp
and
jle
rcl
mov
inc
into
cs
dec
dec
in
and
daa
jb
out
push
push
lahf
fists
jb
mov
out
in
out
push
dec
je
jg
cld
and
repnz
mov
fcom
sar
das
sub
mov
cmp
out
mov
add
movsb
cmp
jnp
mov
je
xchg
daa
mov
dec
aas
add
xchg
out
mov
mov
mov
mov
push
inc
dec
mov
rcrl
daa
mov
dec
mov
jmp
addl
imul
out
incl
repz
repnz
mov
mov
pop
mov
mov
dec
xlat
sbb
inc
daa
popa
jmp
jmp
xchg
movzwl
sbb
mov
sahf
in
ss
dec
std
jne
js
jns
js
ficoms
sbbb
and
mov
inc
dec
out
cmp
insb
jg
dec
fcomi
mul
fstpt
inc
lcall
or
jecxz
testl
add
pop
filds
adc
push
push
pop
mov
push
jg
mov
mov
aas
rcl
loop
jecxz
or
pop
arpl
fbstp
mov
mov
icebp
idivb
ret
inc
mov
jnp
jecxz
dec
sub
mov
inc
sub
int
repnz
cmp
sub
and
mov
mov
ficoml
dec
and
and
mov
das
sbb
daa
das
les
arpl
jnp
xor
ja
xor
popf
out
mov
xor
mov
in
mov
xor
loopne
fsubp
jmp
xor
mov
stc
mov
mov
ds
push
mov
stos
fsubrl
fisubs
sbb
popf
or
fcomi
pop
mov
loopne
push
push
push
pop
mov
and
stc
imul
div
cli
scas
and
les
jge
push
mov
pop
outsb
cmp
ljmp
test
sti
jb
pop
and
ret
and
cmp
divl
push
imul
das
cmp
out
arpl
repz
add
cmp
repnz
out
xchg
idivl
jmp
notl
sbb
lock
adc
pop
lahf
ja
mov
loop
jbe
clc
cld
pop
dec
fcmovu
mov
mov
cmp
daa
cld
dec
push
add
pop
fnstsw
adcl
push
mov
sub
aas
or
div
ljmp
and
mov
xchg
insb
cmp
mov
and
or
cmp
btr
fisubs
clc
stc
xchg
repz
add
xor
in
cmp
cmp
pop
pop
enter
arpl
pop
mov
enter
in
in
sbb
adc
fisubs
stc
adc
inc
push
or
cmp
add
push
pop
sbb
das
pop
sbb
adc
mov
mov
out
into
lret
dec
dec
inc
dec
dec
inc
adc
popa
shlb
fs
cmp
or
daa
xor
outsl
mov
stos
jecxz,pn
popa
pop
cmp
pusha
call
cli
xor
dec
insb
jae
pop
cmp
sub
xor
js
xor
push
xor
out
mov
dec
call
mov
in
lret
out
fwait
popf
mov
int
lock
ljmp
not
aam
mov
shl
mov
mov
les
pop
es
jae
out
push
inc
enter
jg
jmp
lods
call
jmp
iret
int3
repnz
les
scas
mov
mov
mov
jmp
sahf
sar
int3
rol
mov
mov
mov
mov
mov
cmpsl
adc
fadd
call
mov
outsb
inc
imul
and
ficoml
call
es
fbstp
mov
fcmovnu
aas
fdivr
jl
xor
push
imull
push
jae
ljmp
addr16
clc
sbb
pusha
incw
inc
ds
cli
fs
subb
pop
xchg
popa
cli
sub
push
test
push
mov
pop
sbb
ja
and
std
sub
outsl
pop
and
popa
imul
xor
ljmp
inc
lds
daa
sbb
dec
dec
or
sub
pop
pop
pusha
outsl
jb
sbb
loope
imul
sbb
sub
or
bound
jno
inc
lods
jnp
pop
insl
gs
lret
je
insl
inc
dec
bound
insl
fs
iret
fcmovu
xor
push
or
adc
ljmp
fbld
imul
dec
insl
jns
pop
sub
sub
push
daa
pop
addr16
outsb
insb
sbb
pop
xor
cmc
dec
mov
jg
pop
push
popa
and
or
imul
std
inc
inc
pusha
bound
cmp
fldt
pop
xchg
dec
mov
mov
sbb
dec
daa
sub
or
bound
xor
sbb
mov
and
loope
aad
cmp
pusha
outsl
sub
cmp
push
xor
pop
imul
pop
push
push
xor
push
sub
inc
outsb
imul
loop
fisubrs
xor
imul
fistpll
daa
ret
test
or
xor
ljmp
sub
daa
sub
sub
xor
mov
jmp
jo
xor
xor
push
jo
insb
sub
data16
ja
dec
imul
sbb
bound
jg
popf
outsl
pop
pushaw
cmp
dec
push
pusha
fs
test
sub
sarl
negl
push
mov
xor
xor
xor
dec
fldt
xor
dec
sub
ds
test
mov
mov
push
sub
arpl
pop
adc
mov
ja
clc
divb
fs
outsb
jecxz
pop
sub
cmp
sub
rcl
push
push
shll
fcmovnbe
lea
insb
and
mov
cs
pusha
xor
cmp
pop
and
mov
push
std
pop
push
insb
cmp
popa
inc
popa
mov
fs
lret
icebp
mov
mov
outsb
and
sub
xchg
mov
sub
bound
sub
das
cmp
push
pop
jle
aaa
mov
mov
arpl
sub
repz
cs
sbb
aaa
cmpsl
and
cmp
subb
inc
and
cs
sbb
xor
xor
pop
outsb
pop
xor
les
cltd
lahf
sub
jb
cmp
pop
sub
fistpl
pop
lret
lods
ja
sub
jmp
je
pop
sub
push
jl
inc
pop
push
jae
loope
mov
lea
imul
inc
push
mov
inc
pop
popa
arpl
mov
insl
and
cld
pop
loope
push
lea
dec
cmp
inc
lea
in
mov
push
dec
and
adc
fwait
arpl
dec
insb
lds
dec
jecxz
push
mov
sbb
pop
arpl
pop
arpl
test
mov
jae
inc
mov
push
xchg
pop
bound
fcmovnbe
outsb
cmp
inc
outsb
jae
dec
arpl
lahf
ja
movsl
mov
push
ds
outsl
gs
cwtl
addr16
arpl
out
movb
cmp
popa
fs
arpl
imul
jae
sbb
jo
lods
jge
aas
iret
cmp
pop
inc
dec
mov
dec
ja
inc
adc
dec
outsb
pusha
inc
pushl
sbb
pusha
jae
pop
cmp
outsl
ja
dec
sub
mov
sub
stos
jno
arpl
outsb
inc
repz
movsl
add
ret
insb
outsb
dec
jb
sbb
push
out
or
dec
or
cmp
push
jecxz
insl
dec
cmp
divl
clc
cmp
arpl
push
aas
loop
sub
sbb
lds
pushl
cmp
inc
inc
cmp
inc
inc
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
mov
pop
pop
pop
ljmp
dec
xchg
dec
or
mov
dec
shlb
cmp
jae
popa
cmp
outsl
and
pop
adc
rcrb
add
cmp
clc
lcall
push
inc
sub
insb
dec
jne
pop
pop
jno
arpl
adc
xchg
mov
addr16
insb
jae
pop
ljmp
inc
imul
add
aas
push
inc
sub
push
outsl
push
cld
popa
aaa
add
cmp
ds
push
sti
xchg
call
ja
das
jo
jae
lcall
inc
imul
sub
jne
ds
inc
push
inc
and
icebp
test
subps
pop
jb
adc
push
addr16
hlt
call
jb
inc
inc
inc
dec
aas
sub
push
mov
inc
iret
outsl
cmp
add
lahf
test
arpl
imul
xchg
loop
imul
pop
jp
push
add
add
cld
incb
xor
rcrb
arpl
and
fisubrl
and
push
sub
rclb
rorb
and
and
and
xchg
mov
rcl
repz
xor
into
jne
inc
inc
mov
mov
adc
push
jno
ficompl
push
loope
inc
jb
je
movsb
jg
imul
cli
sub
imul
or
mov
mov
clc
aas
push
icebp
dec
jno
inc
rclb
pop
pop
dec
scas
pop
mov
ja
insb
cmp
pop
pop
sbb
arpl
mov
mov
mov
scas
push
jne
jbe
dec
outsl
pop
mov
mov
pop
dec
mov
xor
xchg
das
aam
sub
dec
pop
arpl
pusha
inc
dec
add
inc
push
psubq
mov
imul
imul
jg
loope
repz
das
push
xor
sub
cs
xor
xor
mov
lcall
pop
xor
sub
cs
sub
xor
sub
aaa
das
ds
xor
jnp
xchg
lea
cli
call
sub
xor
xor
sub
das
pop
sub
call
ljmp
xor
pop
sub
sub
cltd
sub
int
in
xor
lcall
pop
cli
xor
inc
xor
pop
xor
aad
cld
xor
incl
incl
arpl
xor
sub
xor
xor
sub
pushl
mov
xor
sub
sbb
mov
xor
dec
xor
insl
add
xorl
mov
xor
xor
adc
pop
call
inc
xor
fs
xor
ljmp
mov
or
xor
xor
repz
push
xor
ss
ja
fwait
cmp
pushl
fnsave
out
cmp
cmp
xor
cmp
cmp
xor
xchg
call
push
xor
scas
cmp
xor
in
icebp
mov
add
adc
xor
cmp
jle
mov
cmp
pushl
xor
cmp
loop
dec
shll
jmp
inc
cmp
loop
insl
inc
and
popf
sbb
mov
cmp
xor
pop
cs
xor
jl
subb
cs
sub
das
mov
cs
sub
xor
xor
push
das
or
sub
sub
aas
sub
out
lea
lcall
xor
sub
das
fsubrl
mov
add
add
mov
movsl
xor
shrb
clc
outsl
jmp
xor
cs
in
mov
mov
pushl
fisttps
std
sbb
test
mov
xchg
aaa
xchg
xor
cmp
xor
lea
cmp
aas
cmp
xchg
cmp
xor
ljmp
cld
cmp
xor
cmp
dec
cmp
cmp
push
cmp
jne
stos
cmp
xor
cmp
aaa
dec
lcall
cmp
cmp
xor
jg
lcall
cmp
jo
shl
add
add
dec
aaa
and
mov
inc
lods
mov
das
cld
incl
sub
imul
sub
das
fidivs
cld
ljmp
stc
sub
adc
cs
sub
pop
xor
test
fucomip
xor
sub
jae
jl
xchg
das
mov
js
icebp
add
xor
jns
lahf
inc
sub
xor
cs
lcall
push
xor
add
xor
sub
divl
or
add
xor
dec
xor
shlb
loope
repz
adc
dec
xor
ss
and
xor
cmp
cmp
ss
jecxz
mov
xchg
xor
cmp
cmp
xor
cmp
xor
cmp
cmp
push
cmp
pop
xor
addr16
cmp
cmp
xor
decb
decl
xor
cmp
and
jmp
mov
cmp
aas
popf
sarb
push
cmp
push
cmp
aaa
daa
sub
jnp
in
call
cmp
aaa
iret
cmp
add
jl
test
mov
cmp
out
cmp
ds
xchg
fwait
aaa
lock
jg
jge,pt
xorb
cmp
cmp
aaa
jmp
jg
fwait
aam
sub
fildll
cmp
inc
sub
ja
jl
incl
mov
aad
jecxz
push
sub
xor
xor
cmp
dec
sub
mov
jno
jbe
fwait
mov
out
sub
add
mov
sub
xor
ret
sub
jecxz
outsl
hlt
xor
xor
mov
sbb
les
hlt
jg
das
insb
xor
xor
sub
or
inc
aaa
ret
ss
cmp
mov
xor
cmp
add
into
xor
or
adc
adc
sbb
add
inc
cmp
jae
lods
cmp
ss
mov
cltd
mov
inc
aaa
addr16
cmp
xor
jg
mov
cmp
cmp
xor
adc
jp
cmp
outsl
xor
mov
fcomi
sti
fbstp
aam
icebp
jg
out
xor
jge
and
sub
xor
cmp
dec
xor
pop
cmp
addr16
std
idivb
mov
pushf
xor
add
add
mov
cmp
ja
test
xor
cmp
fcmovnb
xor
call
aaa
add
jg
loopne
sub
adc
xor
jge
mov
xor
mov
ljmp
sbb
aas
ss
pop
cmp
xchg
sbb
cmp
xor
cmp
ss
stc
outsl
dec
filds
xor
cmp
int
add
cmp
aaa
adc
push
jg
daa
cmp
push
or
cmp
cmp
xor
cld
cmp
cmp
and
sub
sub
ss
cmp
jo
jns
xchg
ss
sub
add
pop
mov
lcall
mov
outsl
xor
aaa
fdivrs
cmp
pop
mov
mov
mov
inc
das
pusha
sub
xor
lods
lcall
sub
push
cmpsb
loopne
push
xor
mov
adcl
xor
stos
sub
push
inc
adc
pop
mulb
or
pop
sti
fldl
add
cs
pop
or
jae
popa
insb
insb
sti
decl
popa
je
outsl
outsb
add
dec
dec
and
inc
push
push
inc
push
inc
pop
dec
imul
pushl
data16
push
imul
jne
jb
outsb
je
gs
xor
add
in
pop
push
outsb
pop
jae
inc
pop
insb
lods
in
fmull
pop
imul
popa
sub
std
in
add
gs
outsl
push
outsl
popa
insl
sbb
arpl
add
add
adc
fwait
xchg
jae
and
je
and
jns
je
jbe
adc
outsb
imul
imul
je
sub
outsb
in
pop
mov
xor
jo
pop
fs
sbb
adc
jns
or
insl
insl
out
jbe
pop
jns
jo
adc
push
push
jb
aaa
xor
xor
mov
and
jbe
jbe
xchg
jb
mov
outsb
cmp
and
outsl
fs
insl
adc
push
jae
popa
adc
imul
inc
adc
popa
gs
jg
pop
ret
bound
jo
inc
gs
popa
push
ds
fwait
insl
out
pop
inc
js
adc
push
push
adc
in
outsb
jbe
jns
dec
jmp
inc
fs
popa
mov
inc
insb
andl
jne
fmull
outsl
popa
dec
inc
inc
xor
push
sub
inc
inc
mov
insb
dec
lods
inc
jb
adc
div
fiadds
outsl
sub
cmp
push
or
xchg
lods
or
inc
push
jae
fisubrs
jne
sbb
icebp
pop
jbe
dec
jae
xor
ds
fiadds
push
movd
test
rorl
cmp
xchg
mov
jbe
inc
jmp
outsl
dec
push
in
jnp
frstor
jb
fs
daa
push
sti
imul
faddl
imul
dec
mov
mov
insl
imul
or
shll
add
or
add
push
incl
push
aaa
jo
xor
push
push
fs
cs
add
sbb
icebp
pop
add
incb
xor
xor
xor
adc
xor
div
jno
mov
adc
daa
add
ja
outsl
xor
mov
aas
imul
add
ja
neg
mov
add
lldt
fildll
jg
inc
repz
or
outsb
adc
mov
leave
aaa
add
cli
imul
cwtl
ja
mov
or
mov
int3
mov
and
or
aaa
inc
jbe
add
aam
add
aaa
inc
popa
mov
in
decl
jecxz
fidivrs
xchg
xchg
sub
mov
in
ret
lds
jo
mov
test
sbb
addr16
add
and
or
add
jbe
movzbl
rcll
and
adc
mov
push
inc
dec
push
inc
add
lods
and
test
inc
lahf
cld
add
add
incl
sar
cmp
add
nop
add
add
sub
cltd
shlb
jns
add
or
mov
dec
add
add
add
cltd
or
addb
imul
jg
sub
hlt
jg
sub
add
mov
add
sti
das
inc
cwtl
add
add
jbe
sub
add
pop
add
add
adc
pusha
stos
adc
dec
xor
gs
je
inc
imul
outsb
out
lret
or
gs
pushw
push
inc
insb
jne
sti
ret
push
and
je
fnstsw
jp
push
dec
push
add
in
fists
insb
outsl
jae
dec
popa
outsb
fs
imul
outsl
jae
outsl
jbe
inc
js
and
jo
lods
std
decb
dec
popa
insl
inc
inc
or
pop
mov
in
jb
test
push
jb
arpl
outsb
cmpb
fs
outsl
negl
fdivs
dec
outsb
outsw
adc
sbb
jb
xchg
into
mov
jnp
pushf
insb
adc
adc
inc
not
mov
and
arpl
jnp
arpl
xchg
iret
mov
jb
dec
fisubl
imulb
fs
out
jg
mov
xchg
mov
jle
je
adc
mov
gs
outsl
outsl
insb
mov
outsb
int3
xor
push
lock
outsl
je
xchg
xor
xor
mov
xor
inc
fisubs
call
std
decl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
insl
fstpt
dec
adc
or
and
or
sbb
mov
jp
call
and
incl
sbb
or
repz
and
inc
mov
jns
aaa
xor
pop
call
adc
xchg
sbb
xorl
das
in
mov
or
lcall
lock
push
adc
add
mov
fisttpl
push
test
jno
mov
add
push
push
dec
mov
add
out
movsl
dec
mov
mov
fbstp
lcall
or
push
andl
shrb
push
cs
or
out
mov
inc
arpl
stos
mov
dec
or
scas
repnz
mov
xor
in
or
or
jo
pop
push
sbb
push
ud2
pop
push
js
xchg
or
insl
lahf
or
or
lods
sbb
fs
xchg
outsl
xor
fwait
addb
mov
addr16
arpl
outsb
or
fcmovb
arpl
je
subb
xchg
fnstenv
pop
or
insb
or
sti
icebp
pop
push
imul
xlat
dec
jb,pt
jbe
push
sbb
outsb
arpl
clc
ret
lret
inc
inc
js
inc
jb
dec
aam
lret
pop
aaa
and
outsb
je
je
adc
xor
pop
push
push
mov
sbb
mov
and
add
xor
mov
sbb
je
jo
or
jne
xchg
mov
push
out
sbb
push
push
fs
cmp
popa
addr16
xchg
lret
fdivrl
sbb
sub
push
inc
cli
mov
add
sbb
pop
ja
jl
inc
loopne
sidtl
add
add
adc
or
in
cmp
fildl
add
add
addr16
mov
add
std
add
fld
mov
aaa
in
sub
and
sbb
xor
xor
adcb
add
pusha
jb,pn
popa
testb
add
inc
cs
adc
mov
lret
dec
jae
or
fimuls
fdivp
dec
lock
add
add
xchg
add
add
add
and
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
