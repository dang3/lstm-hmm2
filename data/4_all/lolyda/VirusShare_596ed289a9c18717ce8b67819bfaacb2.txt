mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
js
inc
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
add
fnstsw
divl
dec
mov
cmp
fiaddl
lret
jne
test
mov
push
cmpsb
jecxz
mov
movb
jne
in
jmp
jecxz
lea
sbb
xor
dec
inc
add
out
jg
rorl
push
sub
jne
push
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
sub
push
or
pop
cmp
les
mov
negb
movb
lcall
fistl
int3
into
mov
mov
or
shl
add
inc
mov
fbstp
repnz
not
sub
lea
mov
ss
testb
movsl
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
xlat
mov
shlb
inc
lret
dec
mulb
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
jnp
cmp
sub
mov
push
mov
dec
sub
cs
das
jnp
dec
push
jns
lea
xor
popa
xorl
das
inc
sbb
sahf
loopne
imul
add
pop
lods
or
cmp
inc
fldt
nop
add
or
fcomp
mov
pop
test
cmpb
jne
adc
and
insb
arpl
adc
fstpl
stc
gs
push
pop
push
pop
mov
push
cmp
push
or
push
pop
mov
push
leave
push
sub
mov
das
out
out
inc
sbb
push
mov
inc
sbb
pop
enter
lock
adc
push
test
fs
dec
push
ret
std
je
testb
orl
in
lea
or
stos
push
lret
cmp
mov
inc
rorb
add
adcl
enter
jecxz
mov
aaa
adc
pushf
push
push
adc
push
add
cmp
pop
mov
mov
push
xor
rcll
rclb
cltd
add
sub
rol
or
mov
lods
jge
mov
adc
sub
je
ja
and
or
sub
or
push
mov
mov
or
inc
cmp
stos
repz
testl
stc
mov
push
aad
cmp
add
pop
mov
add
insb
les
xor
sbb
xor
push
push
gs
push
mov
pop
push
es
jns
dec
cmp
pop
push
adc
pusha
and
rorb
loop
outsl
adcl
push
jb
inc
ret
add
imul
pop
xor
cmp
pmaxub
adc
ret
xlat
jl
push
jns
dec
addl
push
push
add
add
or
push
jmp
sub
adc
insb
movsl
sbb
mov
jae
xchg
shl
push
or
or
adc
cmp
mov
popf
xor
and
or
outsb
mov
xor
mov
xor
dec
inc
sbb
loopne
xlat
out
mov
or
sbb
inc
sub
push
mov
test
inc
push
adc
xchg
aam
adc
in
sbb
out
mov
pop
add
push
xchg
sbb
mov
shll
enter
sub
out
data16
sar
cld
lret
add
add
push
scas
icebp
jmp
add
cmpb
jne
test
jle
push
dec
mov
lods
add
push
xchg
clc
iret
or
or
jmp
pop
rorl
leave
mov
xchg
rclb
mov
mov
lea
fsubs
jle
insl
imul
call
int
mov
out
lea
sbb
add
or
pop
shl
jo
mov
ja
mov
pop
cmp
int
jb
jb,pt
clc
sub
sub
bound
or
jnp
xor
shrl
push
adc
mov
lret
or
sbb
push
push
xor
or
xor
pop
mov
fdivp
jecxz
test
je
sub
mov
adc
push
cmp
push
shr
push
ljmp
push
push
push
lea
push
mov
loopne
gs
xchg
cmpsb
pusha
lcall
insl
fcomps
jmp
mov
push
xchg
cmc
push
and
leave
ds
xchg
xchg
adc
mov
inc
fsubs
mov
mov
cmp
fwait
or
and
sbbw
or
lea
pusha
mov
lret
lea
mov
xor
and
jbe
lcall
movsl
sub
mov
or
mov
push
outsb
shrl
sbb
inc
xchg
loope
js
and
jp
cmc
push
jg
pop
je
add
or
and
xchg
popl
addl
dec
lea
inc
cmp
dec
popf
imul
dec
sbb
inc
push
mov
inc
sbb
sbb
sub
nop
inc
or
jecxz
push
adc
mov
aam
mov
cmp
cmp
xlat
push
push
pop
push
xor
in
bsf
es
pusha
fstl
test
add
push
or
jp
xchg
push
call
imul
sub
sbb
mov
pop
in
add
mov
push
jl
or
testl
push
cmpb
lea
xor
xor
inc
nop
add
mov
add
orb
jne
ficoml
xor
push
or
insl
lcall
mov
cs
adc
pop
aaa
mov
mov
mov
push
pushw
fldt
xor
mov
mov
cld
sahf
loopne
jne
inc
add
out
add
icebp
ret
pop
adc
mov
xchg
mov
movl
add
or
cmp
xchg
dec
inc
cwtl
inc
push
and
bound
cmp
jbe
jl
sbb
adc
push
push
adc
xor
mov
mov
or
daa
or
pushf
lahf
cmpsb
fwait
sub
sub
xchg
add
sti
adc
test
fdivr
icebp
scas
mov
xor
enter
call
or
and
icebp
add
out
sti
pop
and
lods
sub
add
daa
fwait
lock
int
ret
mov
add
mov
push
fdivrl
pop
or
mov
pushw
lock
mov
adc
add
jmp
and
cmp
push
cmp
push
movl
mov
jmp
add
adc
clc
mov
push
iret
outsb
add
inc
popa
sbb
xor
cmp
int3
sbb
adc
or
pop
icebp
fs
jno
sbb
data16
or
or
je
in
pop
push
push
js
xchg
jecxz
jae
xchg
test
sbb
jl
gs
ret
cs
or
dec
and
les
and
or
dec
mov
lock
dec
aas
loope
xchg
cmpb
mov
sbb
je
push
pop
js
test
les
pop
sub
jb
gs
insb
push
mov
test
sbb
sbb
push
cwtl
out
shll
add
jecxz
xchg
or
dec
and
mov
pusha
js
pusha
setl
xor
mov
push
and
adc
xor
nop
jecxz
fbld
into
xchg
out
push
lock
and
cmc
adc
cmpl
push
call
jae
mov
insb
mov
adc
adc
int
jo
add
ds
and
cmp
inc
cmp
fildll
in
or
sbb
mov
shrb
in
push
fsubr
loope
jmp
clc
dec
push
repnz
jg
sbb
shrl
inc
cltd
push
sti
shrl
fs
out
sbb
fs
sub
movsb
push
stc
imul
sbb
test
pop
fs
mov
or
sahf
nop
and
mov
push
testb
icebp
fs
dec
das
or
xor
test
outsb
pusha
adc
sub
jb
fs
sidtl
sbb
mov
insb
xchg
xor
stos
and
insb
int
mov
cmp
sub
adc
mov
sub
and
push
pushf
adc
or
sub
xor
dec
mov
rol
push
pop
sbb
fsubs
inc
inc
xchg
dec
repz
hlt
in
dec
sahf
sub
insb
in
sub
push
aaa
sbb
repnz
inc
movsb
inc
leave
xor
cwtl
cmp
and
adcb
xchg
dec
jo
inc
leave
xor
push
nop
cmp
and
inc
pop
lea
add
xlat
cmpb
push
push
fwait
fs
add
sbb
mov
inc
fcoms
jecxz
lock
sub
movsl
push
push
lret
outsb
je
lock
les
mov
testb
roll
or
mov
js
jnp
cmp
adc
inc
xchg
push
add
push
dec
and
lods
int
lcall
mov
add
or
icebp
sbb
push
fmull
rol
pop
xchg
mov
inc
ret
xor
adcl
pop
jns
shlb
xchg
aad
ret
jle
sub
dec
in
pop
rcl
aam
cmp
sbb
insb
jg
and
punpckhbw
cmp
sub
lahf
and
inc
xor
arpl
out
adc
loope
in
push
pusha
ret
fisubrl
lods
inc
test
mov
adc
dec
push
push
adc
bound
adc
pop
mov
sub
push
xor
and
fstpl
xor
jne
rol
add
add
adc
and
fs
ficoml
popa
cs
adc
push
mov
add
jae
sbb
mov
or
jl
or
or
jno
jae
sbb
push
fmull
cmc
cmp
push
push
js
or
inc
adc
movsl
jp
andb
or
sbb
loopne
mov
cmp
loopne
xchg
mov
push
sbb
out
mov
adc
lcall
jmp
arpl
scas
lods
movsb
std
add
xor
xorb
jne
push
pop
push
idiv
mov
mov
add
mov
cmp
addb
mov
inc
inc
cmp
jg
arpl
mov
mov
addr16
and
insb
add
mov
shrb
mov
lods
mov
pushf
mov
mov
cmpb
mov
jo
mov
pop
mov
dec
mov
cmp
sub
mov
sbb
or
jl
mov
inc
iret
out
stc
rolb
mov
inc
nop
inc
inc
inc
sahf
inc
xchg
cwtl
pushf
mov
movsb
test
mov
inc
inc
inc
mov
mov
mov
enter
fwait
mov
sbb
sbb
in
lock
sub
fisttpl
add
pop
sub
sbb
push
sbbb
mov
cmp
ret
mov
mov
cmpsl
pop
add
ret
insb
add
or
xor
add
add
andl
push
xor
mov
lcall
hlt
inc
orl
mov
or
mov
or
mov
dec
jno
outsb
cmpsb
jg
adc
xchg
popa
cmp
bound
dec
out
mov
adc
fistps
adcb
inc
mov
lea
int
jae
test
push
add
add
add
fildll
outsb
xor
and
nop
outsl
sti
mov
cmp
je
cmp
repnz
pusha
fistpl
and
aam
dec
movsb
cld
inc
out
das
jge
inc
rolb
in
movzwl
jmp
sub
jbe
pop
mov
cli
jmp
push
pop
pusha
push
push
and
imul
xor
inc
in
mov
mov
mov
push
or
jg
and
pop
mov
sub
xchg
add
lea
add
das
and
out
out
inc
lock
lods
popa
or
inc
lahf
mov
cld
or
subb
xlat
and
mov
clc
jne
push
push
and
pop
data16
insl
fsubr
xor
jo
jb
mov
cmp
mov
inc
lea
cmp
fwait
inc
adc
into
int3
add
sti
sub
mov
test
or
xor
fcomp
adc
and
pop
xchg
jg
pop
nop
inc
inc
jbe
add
mov
je
add
xor
xlat
insb
add
pop
and
insb
fwait
rorl
cld
dec
js
dec
add
mov
fsubr
cmpsb
imul
mov
lcall
sub
insb
shll
push
inc
dec
jnp
adc
adc
jb
pop
outsb
add
adc
pop
or
or
in
call
adc
mov
mov
dec
popf
or
das
add
fldt
add
mov
jb
xor
adc
add
add
das
jmp
scas
imul
or
sub
pop
sub
jmp
scas
push
adc
aaa
inc
out
arpl
movhps
pop
shlb
xchg
pop
jne
idivl
push
addl
dec
xlat
cmpsl
das
rdtsc
lcall
insb
mov
pop
or
icebp
testl
mulb
pop
mov
jne
jno
mov
pop
push
push
xlat
je
addr16
movsl
scas
fnstenv
mov
mov
adc
data16
mov
arpl
sar
or
xlat
jne
out
mov
inc
aas
dec
xor
test
addr16
dec
add
enter
dec
shrl
shll
fmuls
mov
lcall
in
lcall
adc
shll
add
and
adc
dec
xlat
je
hlt
dec
inc
add
dec
xsave
add
shll
or
sub
cmp
cmp
and
inc
add
add
jne
in
rolb
add
inc
loope
or
dec
and
xchg
xor
xor
adc
mov
rolb
bound
pop
add
lcall
rclb
shll
sub
and
xor
sbb
or
add
testb
ljmp
fcom
int3
dec
shll
test
fsubs
xor
mov
stc
push
pop
rclb
adc
test
ss
pop
str
fs
nop
xor
and
mov
mov
xor
inc
xor
or
imul
fwait
cmpsb
imul
pop
shrl
repnz
stos
rolb
shll
loopne
aam
shll
xor
add
add
push
cwtl
xlat
jo
cs
and
sbb
cmpsl
add
add
mov
das
loopne
cmp
push
xchg
add
dec
and
fs
push
inc
mov
pusha
pop
decb
push
xacquire
dec
es
es
xchg
push
dec
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
mov
inc
push
inc
push
dec
xor
cs
insb
flds
xor
dec
inc
push
sbb
sar
pop
and
repz
cld
mov
into
inc
push
mov
std
stc
cli
cld
idiv
std
add
enter
clc
cmp
stc
sti
call
sbb
or
mov
pop
mov
dec
sbb
pusha
outsb
lcall
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
dec
dec
sbb
incl
daa
in
push
sbb
shlb
lcall
int3
cltd
lods
mov
xchg
leave
cmpsb
xchg
scas
mov
cwtl
xor
ficompl
fsts
aaa
xchg
aad
rcrl
rcrb
xchg
scas
mov
sarl
lret
lcall
pop
test
xor
xor
dec
pop
bound
fisttpl
or
std
push
mov
add
cmpsb
cmp
push
xchg
arpl
test
or
or
cmp
sti
sub
cld
adc
popf
insb
fbstp
or
or
or
mov
ret
std
cltd
insl
mov
sbb
cmpsb
sbb
scas
insl
daa
sbb
daa
outsb
pusha
je
test
lahf
or
push
daa
cmpsb
mov
daa
insb
pop
pop
imul
in
lcall
pop
jo
sti
dec
push
pop
pop
mov
ret
insl
mov
pop
fistpl
push
jbe
push
ss
aas
out
or
incb
jnp
adc
dec
push
aaa
in
push
clc
movlps
or
dec
sbb
insb
lds
push
adc
mov
mov
clc
gs
mov
lcall
gs
cld
ljmp
clc
fs
cli
xor
mov
push
or
adc
sub
dec
fbstp
push
jb
pop
notb
divb
pop
cli
adc
std
arpl
cli
xor
fists
adc
pop
pusha
lahf
xchg
sbb
outsb
adc
push
jle
push
or
cmp
pop
sti
jmp
mov
mov
push
popa
lcall
sti
repnz
inc
push
pusha
repz
or
aas
dec
dec
jecxz
dec
pop
divb
jg
mov
xor
in
cld
clc
push
pop
mov
testb
cmpb
in
push
stc
cld
inc
in
push
dec
fs
xchg
mov
jb
lahf
fcomi
in
loop
aas
inc
push
cmp
dec
pop
push
pop
adc
pop
in
pop
cli
jo
loopne
add
jecxz
sub
sti
mov
loop
sub
repz
test
push
popf
pushl
jg
mul
pop
adc
xchg
popa
std
push
fs
jg
add
xchg
daa
mov
rolb
roll
ret
ds
inc
cmp
xor
test
adc
jl
in
or
jl
je
arpl
pop
decb
dec
or
test
jge
and
jg
cld
neg
xor
insl
std
or
cli
arpl
jecxz
clc
mov
aaa
push
lock
mov
mov
sub
movsb
pusha
cmpsb
cmpsb
test
mov
cmpsl
mov
sbb
add
adc
cs
lcall
or
push
push
mov
jl
and
dec
gs
push
sub
mov
outsl
fnstsw
mov
xchg
aad
dec
popa
cmp
mov
cs
int
xlat
orl
mov
faddl
pop
cmpsb
test
fstps
cmp
ret
lcall
iret
clc
dec
arpl
nop
shrl
pop
pop
js
adc
lods
jl
pop
rcl
dec
xchg
xchg
aaa
dec
data16
testl
in
out
addr16
fst
jns
push
push
cmpb
mov
mov
in
dec
mov
jg
sbb
add
fists
sbb
jle
sbb
fdiv
test
push
push
push
bound
jns
cs
jmp
arpl
out
dec
dec
clc
decl
rcll
push
push
test
cmp
cmp
outsl
add
jecxz
dec
jg
fstpl
xor
push
imul
arpl
out
dec
in
dec
test
sub
cmp
jp
loop
or
out
dec
inc
xor
mov
aad
lret
mov
loopne
dec
clc
push
push
test
call
push
pop
pop
sarl
pop
dec
push
dec
dec
mov
and
mov
xchg
test
push
xchg
add
cmpsl
sbb
or
cmp
jg
sti
ret
and
rclb
add
push
jo
xor
pop
out
pushl
test
pop
add
push
loope
dec
mov
lea
fdiv
push
or
xchg
rcll
push
jecxz
push
js
push
or
icebp
cld
sbb
mov
push
mov
insb
dec
sahf
jns
arpl
ljmp
jp
std
xor
sti
or
loop
xor
sbb
pusha
adc
loopne
xchg
xor
rdmsr
mov
xor
arpl
adc
aaa
mov
xchg
xchg
stc
nop
fbld
mov
arpl
mov
mov
jg
jae
faddp
dec
loop
dec
or
pop
push
or
cmp
jge
adc
or
test
sti
incl
popl
and
cmp
push
sbb
jbe
nop
push
out
test
cmpsl
fs
adc
pushl
dec
popa
sbb
dec
jecxz
dec
inc
out
inc
jnp
adc
imul
shrl
hlt
push
jecxz
adc
rcll
mov
incl
test
sub
xor
mov
arpl
pop
popa
fisubrl
cltd
inc
lahf
and
popa
shl
das
in
fdivrs
imul
sar
push
js
sub
cli
lea
xchg
scas
popa
aad
lcall
sbb
xchg
xlat
add
imul
mov
cmp
aaa
aaa
pop
mov
mov
std
aam
out
repz
jno
mov
fstpt
add
sbb
or
ret
push
push
cmpl
push
aas
xlat
xchg
push
cld
rclb
mov
xchg
lock
pusha
xlat
xchg
lods
jno
cmpsl
aam
gs
scas
loope
ja
out
mov
rorl
cld
iret
daa
outsl
std
xchg
sbb
cmp
jecxz
hlt
dec
bound
ret
mov
mov
das
ljmp
shlb
andl
mov
in
inc
jmp
call
dec
xchg
test
xchg
addl
inc
push
sbbl
or
mov
pop
cmpsb
push
xor
adc
out
jno
gs
dec
arpl
inc
jle
cli
add
jmp
cmc
in
jle
repz
jae
inc
icebp
mov
jnp
cwtl
xchg
addb
mov
pop
jge
pop
clc
outsl
push
insb
push
cmp
jo
arpl
cmp
inc
fmuls
pop
xorl
inc
out
out
jnp
sbb
outsl
xor
mov
daa
jle
aaa
lock
jnp
cltd
xor
pop
outsl
adc
or
cld
lret
mov
ret
out
and
imul
pop
jge
cmp
test
jg
pop
mov
dec
mov
in
das
dec
mov
test
adc
push
push
xchg
outsl
insl
inc
jg
mov
sbb
jnp
clc
fbld
movsl
cmpsb
cmpsl
les
test
xchg
ret
fildl
xor
add
add
loopne
stc
fucomp
mov
pushf
sbb
idivl
push
dec
sub
fldt
or
sbb
ja
add
test
outsl
or
ss
std
outsl
cld
inc
arpl
xor
outsb
sti
inc
in
cmp
mov
cli
inc
ss
jno
pop
mov
orb
int
shrl
xor
je
das
incl
js
addb
jge
adc
stos
adc
test
test
xorl
clc
arpl
jp
idiv
jno
mov
jne
jg
fstpt
mov
cmpl
push
mov
out
or
popw
sbb
cmp
repz
push
mov
hlt
add
sbb
xor
in
mov
mov
add
jecxz
inc
aaa
xchg
or
sub
idiv
outsl
outsl
clc
call
add
inc
repnz
outsb
adc
jo
cmpl
or
mov
add
lock
fistpl
push
xchg
fisttps
and
dec
jb
pop
call
cli
push
arpl
ret
push
xchg
sbb
sub
outsb
push
andl
in
xchg
gs
cmc
jecxz
inc
icebp
outsl
cs
ja
add
sti
cs
test
push
adc
pop
aaa
das
xorl
xchg
dec
mov
repnz
pop
add
jne
pop
sbb
inc
outsl
testl
dec
jmp
dec
jl
push
loop
jg
sub
insb
or
mov
in
sub
push
lds
sbb
arpl
jl
outsl
mov
ret
insl
add
xchg
outsb
mov
arpl
imul
adc
or
andl
sub
xor
dec
mov
scas
call
js
jl
idiv
mov
daa
dec
jge
push
movsl
out
inc
andl
push
hlt
ljmp
clc
lods
mov
lret
fwait
enter
dec
outsl
mov
dec
ror
fs
aad
dec
mov
push
ss
dec
pop
in
fsqrt
popa
js
or
xor
mov
dec
or
mov
cmp
or
pop
xor
in
or
pop
mov
in
jns
repz
sub
outsb
cmp
pop
repz
or
cs
out
cmp
gs
out
mov
lock
jecxz
inc
std
psubq
mov
and
or
fmuls
das
rcll
clc
adc
ds
testb
pop
outsl
xchg
dec
sub
std
test
jecxz
ret
adc
mov
std
and
mov
cmc
mov
inc
aam
fsts
sub
lods
inc
cs
js
jle
jno
mov
roll
jle
mov
or
pop
push
xor
std
jecxz
cmp
in
inc
ret
fisttps
xor
push
outsl
and
cmp
jl
pop
loop
pop
repz
sub
mov
push
jle
xor
sbb
lods
test
inc
add
mov
insb
sbb
lret
push
dec
daa
imul
popf
mov
pop
sbb
jne
insl
xor
mov
repnz
jp
add
xchg
mov
cmp
pop
stc
mov
cmp
sbbb
cld
add
clc
cmp
pop
pop
ret
incl
sbb
jno
out
js
lret
jne
out
add
xchg
mov
outsl
aas
mov
mov
jecxz
pop
xchg
in
push
rorb
or
ljmp
out
mov
popf
xchg
xor
sbb
rcrb
xor
popa
or
push
jmp
in
int
add
subb
mov
cmp
cmp
and
jno
bound
dec
push
jecxz
fildll
ds
inc
sub
add
cli
inc
pusha
ja
sbb
insl
sub
mov
adc
data16
or
lea
call
push
test
test
leave
push
pop
pop
add
repnz
imul
or
mov
repz
incl
or
xor
decb
std
sbb
ja
int
cmc
jno
push
add
push
outsl
inc
add
ds
jo
push
push
jle
sbb
arpl
mulb
fidivrl
in
cmpsb
bound
jne
lcall
push
lret
jle
daa
bound
cmp
push
imul
mov
or
loop
ret
cld
dec
xchg
push
sbb
lret
icebp
loop
add
es
movsl
aaa
clc
addl
lret
add
and
dec
jnp
std
xor
aaa
pop
fistps
and
cld
inc
mov
call
cmpsb
dec
filds
adc
inc
push
insb
or
std
push
cmc
xchg
or
dec
sti
out
push
dec
push
das
rorb
sbb
gs
pop
mov
lds
ret
jnp
jmp
jo
add
cmp
repnz
jp
sti
mov
mov
ljmp
pop
addb
out
jnp
jg
sub
inc
jmp
addl
add
out
sar
ljmp
jl
jno
out
jge
jb
fs
push
loop
sub
push
pop
iret
ret
or
push
clc
fwait
pop
push
mov
orl
clc
or
outsl
pop
adc
inc
inc
cmp
push
insl
jle
out
aad
mov
fwait
dec
arpl
or
sbb
outsl
in
adc
outsb
lea
ja
dec
pop
add
fstp
int
adc
cmp
cli
cmpsl
lret
pop
inc
dec
mov
xor
cmpsl
cld
pop
das
ds
mov
xor
push
mov
stos
jecxz
push
jecxz
fisttpl
cmpsl
stc
sbb
aad
lcall
bound
or
mov
adc
sub
mov
sub
in
das
daa
add
push
adc
mov
popa
dec
pop
jmp
cmp
fldl
shl
and
ret
dec
cld
mov
pop
cmpsl
mov
js
jp
test
add
and
loope
data16
mov
lret
jle
cmp
ret
out
or
add
in
jno
shll
add
xor
arpl
inc
mov
xor
inc
dec
xchg
fisttps
jecxz
lods
gs
mov
xchg
int
icebp
out
shr
out
mov
in
add
in
icebp
mov
in
testb
or
cmp
add
jo
mov
lahf
jmp
enter
xchg
add
data16
ss
in
out
xchg
repz
repz
sarl
loopne
add
addr16
incb
add
cmpsb
imul
imul
inc
or
jb
arpl
adc
push
dec
lret
rorb
jb
int
xchg
loope
f2xm1
jg
pushl
call
sarb
inc
lea
cld
insl
dec
cs
in
push
push
xchg
fs
addb
ds
sub
addb
loopne
mov
repz
lahf
in
add
outsl
xor
add
pop
test
aas
pop
push
in
adcl
push
data16
imul
jge
fdivl
stc
mov
out
add
mov
and
pop
push
cmpsl
repz
add
and
in
add
sub
xchg
es
cld
outsb
add
jecxz
add
jo
lea
xchg
jg
cmpb
mov
jb
jne
inc
pop
in
mov
push
sbb
mov
outsl
fistpll
pop
incl
jecxz
jo
add
les
inc
stc
rcrb
mov
jno
push
mov
imul
cli
aad
jmp
dec
std
iret
ljmp
daa
fs
push
jle
add
pop
xor
jg
int
inc
mov
ds
roll
sarl
pop
xchg
jne
ja
fisubrs
add
xchg
jg
jg
outsl
add
or
pop
push
lds
jl
daa
dec
dec
gs
in
addr16
aaa
loopne
adc
aam
lret
or
mov
ja
fistps
adcl
fisttpl
dec
xchg
mov
out
jecxz
pushl
cli
xor
jo
dec
inc
in
mov
add
js
out
cmp
fildl
mov
inc
lret
mov
out
adc
push
mov
dec
pop
in
dec
lahf
jecxz
cld
arpl
cld
jg
fwait
add
daa
xchg
sar
xor
lock
jmp
add
ds
mov
dec
ljmp
movsl
push
mov
mov
fisubrs
inc
stc
xchg
orb
or
push
cmp
inc
cmp
cwtl
ret
inc
stos
ret
add
pop
push
insb
aaa
xor
and
push
test
push
aas
sbb
and
or
decl
arpl
xchg
popa
cmp
fwait
xchg
inc
push
div
out
add
lret
mov
enter
neg
mov
gs
sahf
ds
loop
iret
push
or
jns
iret
call
or
cld
xchg
jbe
enter
pop
or
out
icebp
jno
jo
push
fwait
dec
cmp
in
xchg
jo
ljmp
in
cmp
add
repz
roll
in
rorb
jecxz
adc
outsl
mov
dec
mov
xchg
dec
loope
mov
jecxz
std
mov
xor
ljmp
jmp
test
mov
fwait
outsl
imul
ljmp
dec
divb
loopne
aas
mov
lcall
cmc
jae
test
mov
test
cld
std
ljmp
nop
andb
xor
dec
xchg
adc
inc
sbbb
loop
jns
dec
ljmp
dec
cmpsb
ficoms
stc
jno
repz
sub
xchg
mov
std
fidivs
jle
mov
jg
mov
insl
or
cltd
ss
adc
ja
lods
lea
std
das
mov
pop
mov
cli
xchg
pushl
mov
popa
jge
dec
pop
insl
or
xor
cmp
pop
in
xchg
push
das
jne
sbb
add
sbb
in
call
mov
roll
insl
mov
popf
adc
push
divl
dec
std
cld
aaa
push
inc
sti
sbb
jg
cli
shlb
pop
sbb
loopne
jmp
xchg
or
sti
or
push
arpl
lea
ss
or
test
pop
adc
fwait
mov
test
mov
movsl
lcall
sbb
into
gs
fwait
mov
stos
sub
xchg
sahf
loope
cmp
ret
mov
mov
test
aas
and
ret
in
pop
xor
aaa
hlt
adc
cli
xor
stos
insl
pop
loopne
mov
mov
in
cmp
xchg
ja
call
std
insb
pop
adc
xor
cmp
outsl
and
outsb
mov
movsb
adc
cld
rolb
inc
popa
ds
or
add
mov
push
dec
add
rcll
jge
sbb
cmc
sbb
addl
je
insl
inc
divl
mov
fcomps
shlb
fs
inc
jle
mov
sahf
int
in
pop
ret
xchg
mov
mov
daa
dec
stos
push
cld
cs
aam
or
ret
mov
xchg
cs
aaa
mov
sti
sub
movsb
xor
iret
adcl
test
sub
mov
push
jne
repz
mov
mov
test
frstor
pop
push
loop
inc
ret
out
sbb
mov
pop
mov
pop
pslld
jge
idivb
int
cmp
push
bound
insl
jnp
sub
fisubl
arpl
stos
neg
push
lahf
fistpll
xor
cmc
cmp
inc
jecxz
lock
in
cld
xor
mov
in
fcomip
mov
and
out
jle
jo
popa
cmp
aaa
xor
jnp
stc
aad
jo
mov
pmulhuw
mov
or
out
pop
test
mov
std
inc
add
dec
jbe
test
mov
loop
enter
sbb
popa
in
pushl
lds
add
mov
mov
mov
out
lods
mov
xchg
jecxz
jle
in
negl
loope
icebp
jb
jecxz
cmp
daa
mov
dec
push
xchg
incl
jg
test
roll
jb
xchg
test
xchg
mov
push
add
mov
xor
loop
outsl
add
fidivs
push
cs
insl
call
cmp
sbb
pop
xor
roll
inc
ror
jg
lods
into
push
fwait
stc
in
xchg
jnp
xchg
mov
push
jle
xor
add
dec
lret
add
lods
cmc
mov
add
les
sbb
incb
out
test
loope
jmp
test
or
cli
push
dec
push
push
rol
and
int
pop
push
add
cs
rolb
push
cli
cmpl
jmp
out
insl
jp
clc
divl
push
stc
add
ret
dec
decl
adc
push
jge
or
xor
jo
pop
lods
xor
dec
push
test
popf
pop
xchg
xor
outsl
sbb
jb
sbb
int
idivl
std
cmp
lret
cmp
pop
bound
insb
fsts
xor
test
addr16
mov
aam
incl
loop
ret
jnp
jmp
outsb
push
xchg
mov
jecxz
je
hlt
notl
sbb
in
loope
sti
movl
mov
xor
lock
fmull
dec
dec
fists
decl
cli
push
fists
js
test
push
in
add
mov
pusha
jae
mov
shll
and
js
outsb
cld
mov
pop
pop
stos
or
dec
insl
mov
setns
cmp
or
aaa
hlt
in
inc
jmp
dec
jp
dec
or
xchg
insl
mov
mov
pop
call
mov
sbb
jg
in
xchg
ss
insb
adc
enter
push
mov
test
push
xchg
int
add
jmp
jno
lods
test
decl
std
jo
addb
adc
dec
push
filds
notl
outsb
jg
or
pop
out
cld
xor
std
outsl
add
popa
pop
cli
pop
jmp
xor
sti
mov
sbb
ffreep
lods
mov
xor
mov
dec
sbb
mov
add
jmp
inc
dec
xor
sti
jo
mov
icebp
add
xor
mov
sub
mov
sub
dec
or
xor
fimuls
cmpsb
out
xor
insb
add
push
xchg
add
int3
jno
aad
or
hlt
dec
adcb
das
pop
mov
add
xchg
push
ss
fists
add
or
pop
inc
stc
cmp
outsl
frstor
xchg
out
dec
push
push
jmp
pusha
clc
das
test
aaa
jo
or
add
insl
jg
inc
add
push
in
xor
or
aam
outsl
xor
cmp
outsl
das
xchg
sahf
daa
or
je
inc
add
jl
add
mov
jno
jno
je
popf
inc
push
ds
add
cmp
adc
ret
pop
push
jae
stc
outsl
adc
outsl
pop
cmp
jge
sbb
sub
fsub
je
xchg
icebp
jl
lods
push
sti
das
repz
add
je
insb
dec
mov
inc
jg
adc
cmpl
xorl
outsb
test
xchg
dec
xchg
pop
push
xor
mov
mov
mov
rclb
popl
lahf
das
rcll
xchg
push
in
jecxz
mov
mov
sbb
icebp
mov
in
cld
in
lret
cmp
inc
jl
lret
adc
and
test
movsl
outsl
rorb
fucomip
sahf
xchg
jle
jge
insb
icebp
cli
mov
icebp
loop
in
lods
xor
std
inc
pop
push
pop
scas
or
icebp
push
adc
push
sub
xchg
or
ss
xchg
xor
dec
add
inc
in
xchg
out
icebp
test
push
fildll
mov
cs
pop
mov
into
push
and
pop
push
xor
sbb
inc
xchg
sbb
xor
cmp
mov
mov
out
popf
xor
fnstenv
test
scas
sbbb
in
cmp
in
std
pop
clc
adcb
add
mov
or
repz
mov
aaa
jp
mov
fisttps
xchg
push
fimull
fildl
add
mov
cmc
and
push
insl
int
test
aaa
cld
aam
pop
jecxz
xor
or
adc
stos
test
pushf
ljmp
sbb
leave
aas
add
cli
jmp
cmp
test
and
push
jp
ret
outsl
lahf
jns
or
imul
cmp
cmpl
fldl
in
jns
decl
out
xor
jae
ret
jecxz
test
xchg
ss
dec
cmpsb
cli
mov
cmp
sbbb
mov
insb
or
jno
jl
and
adc
cmp
push
imul
cmp
arpl
mov
cmp
loopne
inc
adc
mov
or
hlt
jnp
jle
adc
cli
insb
xlat
add
in
jle
pop
mov
adc
jb
ss
push
loopne
std
iret
xchg
lret
data16
mov
arpl
loope
mov
orb
arpl
ret
aaa
pop
mov
popa
andl
test
jmp
add
xor
outsl
mov
jmp
movsl
outsb
aaa
sbb
cmp
test
or
add
mov
insl
mov
inc
inc
arpl
insl
adc
xchg
imul
xchg
fcomp
ljmp
jecxz
mov
push
clc
divb
push
mov
sti
pop
into
mov
sbb
ret
sub
jmp
mov
sub
push
sub
xor
addr16
cli
xchg
pop
and
or
cmp
xchg
mov
mov
test
mov
std
mov
sbb
insb
xchg
std
test
fildl
sub
test
mov
ss
cld
jo
cmpb
dec
xchg
dec
add
psadbw
orb
cli
push
jle
mov
pop
sbb
pop
dec
cmp
out
and
pop
add
rolb
add
sbb
das
insl
pusha
shll
out
push
rcrl
jl
and
clc
call
insl
push
or
pop
shl
arpl
or
jmp
cld
sahf
call
jmp
inc
fbstp
adc
or
repnz
popa
cmc
mov
fsubr
in
imul
out
fxch
aad
loope
ja
daa
insb
xlat
push
dec
cmp
repz
arpl
and
incb
mov
repz
fs
testw
jmp
pop
daa
jne
sub
add
hlt
repnz
jne
mov
shll
hlt
cmpsb
sbb
push
mov
nop
cmp
outsl
jo
shll
lahf
or
clc
test
mov
cmp
xchg
cmc
aam
dec
sub
cli
js
gs
loop
xor
lcall
or
pop
call
add
lcall
test
xchg
aaa
cmpxchg
mov
adc
sub
arpl
jl
negb
or
mov
jo
mov
clc
mov
xchg
xchg
xchg
pop
orb
stc
les
xchg
and
sti
xchg
arpl
aas
lahf
popa
xchg
sti
or
aad
fcompp
ds
xchg
xor
adc
pop
addr16
negb
mov
xchg
imul
mov
fistl
loopne
das
es
pop
or
divl
les
jecxz
fbld
fildl
idiv
insl
jecxz
clc
rol
sub
stos
mov
sbb
out
mov
ret
push
pop
sub
mov
add
outsl
sbb
rolb
xchg
addr16
dec
cli
jge
and
sbb
pop
jnp
arpl
dec
fs
cmp
mov
xor
imul
cld
inc
and
jb
dec
in
mov
shll
pushf
cs
dec
pop
roll
dec
xchg
arpl
xchg
jecxz
xorb
cmpb
inc
fildll
push
fucomi
push
dec
dec
shll
mov
mov
ss
aad
enter
sahf
pusha
add
das
jl
pop
add
mov
sub
addr16
dec
imull
loopne
jp
mov
pop
lret
int
push
daa
mov
cmpb
mov
sub
push
or
insl
xchg
xchg
add
cmp
jb
xrelease
pop
repz
sub
xchg
xor
cli
and
pop
mov
cmp
jbe
pop
insb
jmp
sbb
pop
or
popa
iret
cltd
test
dec
shlb
in
loopne
jmp
lods
xchg
gs
out
dec
fstpl
hlt
mov
rcrl
insl
iret
pop
aam
out
jecxz
jg
jecxz
sub
in
fstl
dec
pusha
repz
call
jge
adc
mov
daa
mov
push
mov
mov
or
lahf
jae
or
mov
popa
imul
loopne
xor
ss
insl
test
ja
scas
inc
fistpll
insl
lds
daa
inc
insb
das
cwtl
daa
jnp
jecxz
repnz
xor
outsb
std
push
popf
and
or
sarb
pop
mov
mov
ss
add
outsl
cmp
sub
ja
outsl
cmp
push
ss
sub
test
fldt
icebp
jo
mov
add
das
lret
ffreep
roll
push
or
jp
dec
xor
imul
std
aas
ljmp
xchg
dec
jbe
mov
jge
loope
jge
or
test
jbe
movsl
mov
stc
divl
jmp
adc
mov
inc
lock
fcmovne
mov
push
psubsw
or
gs
int
add
xchg
movl
roll
rcrb
pop
jbe
aaa
outsb
repnz
pop
dec
loopne
aas
stc
gs
pop
or
jmp
loope
fnstsw
lock
sbb
ret
push
mov
loopne
cli
jl
jp
js
test
pushf
or
xchg
sbb
xchg
fucomp
mov
adc
test
xlat
arpl
xchg
xchg
sbb
cmp
sub
stos
pushl
and
dec
inc
xor
repnz
jg
pop
push
pop
fisubs
popa
cmp
xchg
loopne
fstpt
cwtl
lods
hlt
outsb
data16
lret
pop
add
jno
xchg
scas
inc
pop
ds
adc
cs
int
mov
in
xor
cmp
adcl
dec
insl
divl
add
mov
notb
jg
jae
fcompl
shrb
xchg
and
mov
fidivl
and
lcall
xor
loopne
sbb
pop
fs
mov
jbe
sub
lods
imulb
push
or
dec
mov
inc
fisttpl
sub
pop
movsb
scas
push
cmp
dec
ds
mov
ds
test
sti
leave
dec
mov
dec
out
xor
rcrl
mov
jp
insl
outsl
fwait
out
clc
in
mov
jl
mov
out
mov
xorl
shlb
inc
cmpl
dec
dec
jg
in
or
xor
stos
sti
imul
pop
shrl
jp
cld
das
adc
mov
icebp
mov
jnp
fdivr
ss
or
jnp
or
test
mov
or
cli
mov
add
scas
clc
fists
pushf
repnz
add
aas
jnp
xorb
mov
imul
or
sar
icebp
jl
cs
scas
fisttpll
xor
fs
xlat
das
fnsave
or
jno
fadd
addl
sti
push
jg
add
inc
add
std
push
imul
ret
aaa
hlt
push
sub
sub
xor
pop
jno
dec
hlt
jg
inc
push
inc
outsl
push
jl
decb
jl
jns
pop
mov
and
cli
outsb
aad
test
out
test
movsl
movsl
push
leave
mov
mov
sbb
cltd
out
xor
push
mov
dec
hlt
hlt
mov
mov
cs
push
dec
dec
push
xchg
insb
sbb
sub
sbb
jle
sarb
inc
call
mov
pop
lods
mov
repnz
or
shrl
je
xor
rcl
mov
adc
cld
popa
mov
xor
and
or
push
dec
cmc
pop
cmpsl
xchg
mov
add
movsl
push
repz
and
insb
arpl
fs
push
jnp
jns
jl
add
sbb
sub
push
pop
out
clc
pop
outsb
adc
fs
push
push
and
fs
add
cmp
mov
xor
aaa
mov
shll
imul
loopne
push
xor
ja
cmp
in
cli
and
cmp
movsl
lds
jno
fwait
pop
daa
push
fmuls
xchg
jns
loopne
sub
xor
add
pop
push
push
les
push
call
or
fldenv
xchg
testl
divb
sub
jnp
pop
mov
lret
inc
jns
sar
lds
idivl
jl
jnp
xor
outsb
daa
jne
and
aas
adcl
loope
sub
imul
mov
pop
adc
out
ja
push
pop
loop
mov
sbb
or
lea
cld
and
shrb
or
xlat
jecxz
pop
fadd
push
and
rorl
jmp
in
test
and
push
data16
dec
arpl
inc
cmp
cmp
sti
mov
mov
jg
mov
mov
push
popa
cmp
rclb
and
aam
or
xchg
mov
pop
jmp
cmc
jle
add
push
lods
adcl
jle
ja
mov
nop
addr16
push
mov
and
mov
add
decb
pop
sbb
ret
addr16
fwait
leavew
hlt
dec
outsl
and
xor
fisttpll
lahf
lods
je
in
xor
pop
out
sub
adc
daa
ret
push
mov
lcall
add
cs
adcl
or
rorb
popa
loopne
lret
adc
xorl
into
mov
lcall
lock
sub
jno
jno
jne
in
sbb
sub
sahf
add
mov
mov
push
push
jnp
icebp
rorb
inc
sbb
insl
add
es
mov
stos
inc
loopne
cld
iret
in
adc
or
cmp
xor
cs
cmc
test
dec
pop
jae
pop
mov
test
daa
insl
mov
mov
outsl
adc
outsl
out
je
cli
fidivs
pop
pop
pusha
insl
sbbl
mov
adc
flds
cmove
inc
or
cli
enter
pop
sbbl
fldl
inc
aam
add
fsub
or
cmpsl
outsb
movsl
aaa
inc
in
mov
mov
stos
jno
jnp
dec
push
fxtract
lds
pop
js
cmp
jge
clc
jne
mov
fs
sub
mov
ret
cmpsl
pop
test
jge
pop
ret
jmp
or
imul
mov
adc
sahf
aam
add
ds
clc
outsl
mov
xchg
subb
add
inc
push
insl
sbb
push
divb
cmpl
or
gs
dec
push
jecxz
pop
das
inc
mov
jnp
out
or
add
inc
loopne
cmp
ljmp
jle
js
icebp
sbb
cmc
repz
sub
inc
outsl
push
xor
mov
add
adc
jns
mov
mov
mov
adc
or
les
sbb
sti
jno
pusha
pushf
fdivrl
cmp
test
adc
cmp
mov
mov
dec
xor
or
mov
sbb
or
decb
pop
dec
pop
inc
sub
ljmp
xor
add
or
dec
cmp
or
lds
daa
cmpb
push
fildll
pop
mov
add
or
enter
ror
jge
mov
push
sbb
bound
popf
pop
fwait
into
insb
mov
sub
outsb
int
pop
or
xchg
rcll
aad
and
pop
push
aas
mov
add
rcrl
push
cs
cmp
xor
adc
mov
fsubrl
mov
push
int
sbb
inc
fstpl
repz
stc
fchs
add
lods
outsl
push
sbb
not
mov
icebp
lods
push
add
shrl
out
add
aaa
je
jae
xor
aaa
je
xchg
fadds
mov
sbb
push
out
cmpsl
xchg
cmp
push
outsb
push
std
pop
mov
fisttpll
jg
cs
movsl
popa
cmpsl
mov
ss
mov
adc
popf
fld
sub
in
lahf
dec
jmp
jecxz
and
inc
fildll
jle
mov
pushf
jecxz
sub
enter
je
dec
insb
xor
adc
fld
push
xchg
sbbb
cmp
cltd
mov
outsl
aaa
mov
shll
dec
test
lods
or
addr16
cmp
aaa
add
mov
inc
add
mov
cli
out
sbb
fsts
fbld
jo
mov
mov
vsubpd
in
mov
sub
and
push
xor
stos
sub
xlat
lret
inc
insb
adc
inc
jecxz
pop
push
and
xchg
adc
pop
loopne
sbb
push
mov
lock
shll
int
out
and
push
dec
push
out
and
test
push
lock
flds
lock
adc
sbb
subb
decl
loope
add
aam
and
fcoml
pinsrw
xlat
popa
cld
push
adc
rcrl
das
in
xor
enter
and
aas
rclb
rsqrtps
xchg
xchg
push
stos
adc
cmp
addb
inc
inc
sbb
outsl
cmp
mov
sub
loopne
and
lock
mov
sbb
push
sbb
inc
mov
pop
cwtl
mov
outsb
xchg
mov
sbb
xchg
test
test
scas
cmc
cmpsb
test
clc
ss
sbb
sbb
sbb
jmp
data16
js
ljmp
scas
hlt
inc
mov
xchg
sub
add
mov
sub
cmp
jo
pop
adc
add
adc
cld
sbb
or
das
movsb
std
inc
psubusw
pop
sbb
test
add
pop
mov
xchg
mov
repz
push
pop
popf
jne
in
xor
mov
loope
ss
lahf
stc
mov
cld
addr16
and
cli
xchg
mov
or
movsb
hlt
andl
pop
dec
data16
gs
mov
sbbb
adcb
push
jb
mov
dec
mov
add
push
inc
xor
std
cmp
out
call
sbb
stc
mov
push
cmovns
and
xchg
mov
stos
or
mulb
psraw
xor
inc
dec
fidivrs
adc
js
add
cli
cmpsl
lods
pop
fildl
adc
xchg
sub
lods
push
or
das
add
add
dec
out
sbb
dec
in
cmc
pop
roll
sbbb
mov
or
xchg
inc
inc
testl
stos
imulb
in
test
xor
inc
je
lock
sbb
push
out
cmp
les
pop
jg
xchg
stos
mov
mov
loop
mov
std
pop
clc
pop
imul
mov
jecxz
sbb
dec
pop
ss
push
ret
clc
test
mov
outsb
mov
stos
dec
jmp
cmp
in
insb
or
shll
test
sub
insl
ret
push
fstpt
test
ja
push
xchg
stc
cli
dec
dec
ss
add
fsubs
aaa
mov
leave
std
fisttpl
orl
push
add
cli
or
jecxz
in
sbb
inc
call
in
cmpl
add
jle
jp
jnp
push
xchg
loop
sti
xlat
add
mov
lret
add
sbb
sub
jmp
lods
mov
xchg
enter
std
cmp
inc
test
fincstp
push
mov
jl
jge
jle
sti
icebp
inc
ror
in
sbb
stc
roll
fildl
mov
lcall
test
or
push
mov
sbb
clc
int
movsl
in
xor
aaa
cmp
cmp
push
loopne
pop
mov
hlt
push
je
call
mov
outsl
inc
add
jecxz
sbb
add
or
or
bound
push
ret
push
pushf
scas
imul
jb
push
mov
loop
inc
push
fists
pop
lea
mov
add
pop
outsb
push
call
jge
dec
in
xchg
pop
pop
cmp
clc
push
dec
jecxz
or
sbb
gs
push
sbb
mov
ja
or
push
inc
loopne
inc
iret
ret
pop
cli
add
sbb
icebp
lsl
fldl
add
lret
std
adcl
mov
sub
xor
repz
imul
sub
adc
movsl
mov
pop
arpl
jmp
in
or
andl
aas
inc
sub
jb
mov
cld
xor
sbb
jnp
add
pop
int
js
ret
add
testb
fs
xchg
xchg
add
push
inc
inc
cmp
loopew
repz
pop
xchg
sbbl
sti
mov
add
ljmp
push
in
jl
icebp
jle
outsl
out
jbe
or
xor
pop
xchg
das
or
ret
imul
sbb
test
jle
push
cmc
xor
jnp
xor
mov
test
jmp
pop
fcomi
lds
and
adc
push
repz
adc
jnp
push
fstpt
fistpll
pop
xor
jno
inc
sub
outsb
out
or
or
test
cld
mov
clc
dec
mov
jle
dec
dec
arpl
push
cmp
arpl
push
sti
push
cld
pop
jge
jb
push
mov
jecxz
lock
mov
stc
inc
hlt
orb
inc
icebp
jge
adc
fildl
xor
addr16
add
inc
dec
adcl
fwait
inc
jmp
pop
sbb
mov
push
add
add
pop
or
jo
jo
dec
mov
into
repnz
push
push
in
sbb
icebp
push
out
sbb
icebp
scas
loopne
sbb
jb
mov
push
inc
rcrl
fwait
out
jecxz
icebp
test
mov
popf
sub
jae
aas
sti
cmpsl
andl
addr16
movsl
pop
in
lahf
push
dec
push
fistps
mov
push
push
dec
push
in
lock
mov
dec
jecxz
pop
dec
loop
sbb
shrb
sub
pop
xor
iret
pop
arpl
add
dec
sbb
jle
pop
sbb
cmpl
and
clc
push
arpl
loope
fiaddl
xor
fwait
mov
shll
xchg
loopne
fildl
jecxz
repz
pop
mov
fidivrl
lret
push
push
or
sti
jb
pop
stos
push
idiv
and
dec
dec
lahf
inc
rcll
mov
nop
dec
jne
ficoml
dec
lahf
aam
pop
decl
gs
mov
cmc
dec
inc
loope
aam
imul
cld
out
jno
sahf
adc
add
test
pusha
orb
sub
mov
adc
cmpsl
pop
lret
cmc
cmc
nop
cmc
divl
pop
dec
in
cli
mov
imul
clc
mov
adc
nop
lock
in
cmc
aad
jmp
out
mov
aaa
inc
add
jecxz
sbbl
add
sbb
xorb
lret
icebp
ss
push
test
sbb
and
stos
sbb
dec
cmc
shrl
repz
and
adc
mov
sbb
dec
adc
adc
sbb
test
pop
or
sbb
xchg
adc
jb
mov
bound
mov
or
jb
mov
add
mov
pop
add
xchg
cmp
inc
popf
cmc
add
and
sbb
in
push
xchg
sbb
and
jmp
and
push
in
sbb
iret
out
cwtl
mov
and
cmp
cmp
aas
mov
sbb
mov
inc
outsl
into
scas
test
pop
mov
inc
das
repz
test
jecxz
adc
lds
das
shlb
xchg
repnz
negl
pop
inc
push
sub
out
xchg
mov
sub
es
dec
push
fwait
test
icebp
fs
jge
stos
xchg
lea
into
xchg
pop
mov
dec
cmp
xor
les
mov
rolb
shrb
push
popf
and
pop
ret
enter
lea
add
sbb
imul
icebp
push
sub
mov
mov
daa
aam
mov
dec
iret
andl
cmpb
jne
xor
push
mov
test
push
add
movb
mov
sar
mov
push
add
mov
or
pop
in
clc
inc
or
mov
add
xchg
shlb
sbb
stos
sti
cmpsl
add
cmpsl
loop
jo
outsl
pop
fistps
mov
fstpt
cs
sti
jns
mov
stc
mov
dec
cmp
outsb
addl
push
lea
mov
test
test
sbb
les
les
lock
call
adc
inc
xor
pop
adcl
push
out
jmp
adcb
mov
push
data16
mov
hlt
cmp
sar
pop
mov
inc
arpl
inc
or
dec
out
cli
das
push
and
aaa
sbb
cli
jb
and
jge
call
fwait
shrl
inc
out
push
mov
jg
jns
stc
mov
cmp
and
sti
ret
test
clc
dec
mov
call
stc
add
cmp
inc
xor
hlt
aas
and
out
aaa
sub
fs
sub
dec
daa
cmp
inc
es
inc
in
cmp
cs
and
dec
mov
xchg
les
sub
stos
add
dec
adc
sti
add
xchg
repz
in
das
rorb
loopne
dec
fs
add
rcl
dec
arpl
xchg
insb
mov
cs
leave
add
call
mov
ss
adc
add
stos
dec
jns
arpl
inc
jecxz
iret
lds
lods
inc
dec
bound
sti
cmc
jecxz
iret
lcall
movsb
sti
sub
bound
cmp
pop
xor
loop
fwait
jmp
or
inc
cmp
into
mov
orl
cmp
and
mov
push
adc
or
mov
pop
sub
inc
jecxz
xor
cmc
cmp
arpl
cmp
sbb
xor
and
cmc
push
adc
imulb
jae
out
dec
jecxz
push
jg
cmpsb
fiaddl
inc
cli
mov
ds
mov
test
addr16
dec
sti
sub
das
dec
orl
stos
and
dec
xlat
mov
add
test
rcr
outsb
cli
test
jns
out
jb
lahf
fists
loop
and
xchg
xor
inc
insb
xor
inc
dec
gs
xchg
inc
mov
sbb
pop
push
sbb
daa
incl
ljmp
jp
dec
xor
cs
xor
inc
icebp
push
or
xchg
add
inc
or
fidivrs
push
jmp
ja
addb
std
fnstsw
ficomps
mov
adc
xchg
fs
xor
or
pop
addr16
xchg
jmp
adc
add
notb
sbb
sbb
ljmp
mov
je
jg
imul
dec
jno
mov
mov
sahf
cmp
mov
and
pop
or
xor
sbbl
push
or
inc
sbb
sbb
ja
cmp
clc
xor
mov
in
cmc
adc
dec
inc
mulb
repz
sbb
pop
mov
cli
in
xchg
xchg
fidivrs
xchg
testl
lea
stos
incl
jbe
xor
add
sbbl
inc
loop
xchg
pop
call
push
or
sub
int
ja
inc
ljmp
insl
sbb
jmp
loopne
mov
aas
divb
aas
cli
outsb
das
adc
jge
ds
adc
adc
cld
pop
add
xchg
push
dec
loop
mov
insl
out
sbb
push
repz
adcl
test
in
notb
adcl
xor
pop
sbb
adc
daa
jo
cmp
push
add
or
mov
jle
inc
xchg
or
adc
push
cmpsl
push
cwtl
lahf
popa
jl
loope
fistpll
insl
jle
add
xor
addl
and
in
push
addb
scas
push
orl
cmp
mov
cld
mov
insl
std
or
rorb
fs
dec
inc
mov
or
push
add
lock
gs
xor
pushl
dec
sub
mov
push
push
mov
lock
push
add
aam
insl
sbb
or
adc
pop
iret
push
xchg
or
cmpsl
sbb
mov
or
mov
cli
aaa
add
mov
push
mov
inc
test
cld
into
push
dec
sti
int3
dec
out
inc
aaa
test
pop
dec
arpl
or
push
xor
arpl
jo
add
insl
mov
idivb
sub
xor
mov
jg
pop
in
pop
mov
fmull
or
xorl
mov
into
xchg
in
outsl
cmp
push
filds
xor
lds
mov
xchg
push
outsl
sbb
sbb
and
in
or
fisttpll
pop
icebp
adc
push
roll
and
mov
mov
dec
push
mov
dec
test
mov
cmp
dec
pop
in
or
cltd
or
sbb
jae
xorl
adc
into
or
or
cld
jg
jg
pop
xor
push
adc
jecxz
or
xor
push
outsb
aad
push
loopne
or
xchg
push
mov
mov
xor
gs
xchg
pop
enter
xor
ret
mov
lea
and
pop
or
mov
dec
or
mov
jmp
pop
imul
inc
mov
push
ljmp
jle
aaa
mov
pop
mov
jne
into
aam
fwait
jno
xor
and
scas
sbb
xor
lods
cmp
sbb
cs
or
pop
ret
push
incl
fisttps
test
icebp
inc
fwait
add
add
xchg
test
aam
fisttpl
add
add
ja
push
mov
xor
dec
or
daa
xor
lea
arpl
sbb
inc
sub
push
fdivrp
inc
or
xchg
push
push
lahf
in
or
rclb
mov
repz
bound
ffree
repz
and
loopne
or
out
push
mov
fcoml
pop
add
mov
shll
out
ss
mov
test
in
xor
lret
rorl
add
jb
jp
or
sbb
std
add
mov
lahf
xor
cmp
ja
add
or
sub
bound
outsb
repz
pop
enter
jle
dec
jnp
cld
mov
ret
mov
jmp
xchg
or
jo
mov
std
clc
push
inc
pop
test
or
add
cmpsb
lret
cmp
cmc
xlat
mov
jo
pop
js
cmp
dec
sqrtps
loopne
aaa
mov
icebp
cmp
fsts
pop
loope
dec
add
jle
push
cmp
jge
push
testl
xor
inc
or
rolb
dec
xlat
add
mov
or
bound
icebp
inc
call
sbb
movsl
or
lods
aas
lret
mov
out
mov
lods
dec
cli
mov
jp
add
mov
mull
mov
jg
jo
pop
jae
movsb
dec
rol
inc
push
xchg
sub
lret
repz
mov
arpl
ret
pop
jmp
pop
shll
icebp
jg
mov
mov
aad
sbb
gs
lods
xchg
mov
outsb
aaa
sti
add
in
pop
cmp
pop
jmp
mulps
cs
loopne
gs
ja
popa
add
mov
pop
sub
outsb
mov
ret
addb
outsl
push
pop
dec
loope
add
dec
andl
daa
mov
pop
mov
leave
hlt
mov
fldt
nop
inc
mulb
mov
mov
imul
rcll
push
icebp
icebp
inc
push
add
pop
pusha
mov
jmp
lock
xor
pop
in
xor
orps
out
pop
dec
out
outsb
sti
add
push
test
xor
out
pop
clc
cmp
cli
add
xor
pop
es
mov
add
iret
pop
call
xchg
in
lea
gs
jmp
in
aaa
pop
or
mov
jae
data16
scas
call
in
add
xchg
insl
sti
xchg
dec
arpl
adc
ficomps
lret
repnz
or
test
pop
and
lock
sub
lahf
lret
arpl
cwtl
sub
ds
cmp
imul
xchg
insl
sti
pop
dec
gs
push
pop
and
xor
pop
repnz
arpl
movsl
lds
and
negb
dec
add
cwtl
pop
jle
pop
sub
bound
mov
in
std
ret
lahf
dec
sub
inc
pop
cwtl
insb
fildl
lret
pop
out
aas
or
pop
pop
mov
jl
cwtl
shrl
mov
lock
inc
jle
and
into
jecxz
pslld
je
in
sti
jecxz
xor
mull
fistps
sub
pop
jmp
and
roll
xor
ret
add
fwait
add
shr
fs
ljmp
out
push
insb
decb
push
cmp
adc
notl
pop
cwtl
aas
pop
incl
loope
cmpsb
or
lods
rorl
mov
out
sahf
in
hlt
gs
stos
out
in
rclb
and
repnz
aam
push
popa
lock
pop
cmc
aas
gs
jle
or
xchg
mov
shr
mov
lea
and
mov
push
sub
lret
jmp
js
outsl
jg
or
inc
out
push
icebp
repz
fistps
jmp
decb
xor
cli
arpl
xlat
dec
push
push
movsl
jo
repnz
faddl
cld
jl
mov
mov
movsb
in
cld
mov
mov
outsl
js
in
dec
pop
inc
mov
push
psubw
imul
aaa
pop
fs
inc
add
aam
push
adcb
call
stos
mov
repnz
mov
sbb
out
and
lock
inc
jg
jmp
dec
lret
jmp
repnz
insl
mov
sbb
iret
xlat
dec
fcmovnb
xchg
jb
lock
mov
pop
stc
movntq
xchg
jecxz
add
xchg
in
bnd
push
dec
fisttps
lods
jns
stc
pusha
push
movsl
mov
jne
jo
cmp
mov
cli
bound
push
and
xlat
mov
nop
in
cli
daa
cmp
add
jmp
mov
jmp
fcmovnbe
jecxz
ret
add
popf
mov
adc
cmc
cli
mov
dec
dec
xchg
push
mov
pop
mov
and
clc
cld
pop
add
mov
nop
les
mov
stos
push
push
jle
pop
mov
sti
dec
add
clc
int
dec
sbb
pop
cmpb
int
fnstenv
jns
data16
add
fs
pop
xor
paddsb
in
stc
add
loopne
mul
mov
imull
or
mov
push
mulb
cltd
or
inc
push
mov
fstpt
and
push
lock
or
dec
sub
jmp
lock
dec
sub
xor
xor
mov
mov
std
mov
shrb
dec
jge
cld
xor
pop
out
arpl
sbb
subb
andl
sub
fidivs
push
add
ljmp
lods
fs
sti
pop
push
cmp
outsl
mov
sub
int3
pop
clc
sub
leave
sbb
add
cld
jg
incl
incb
test
iret
in
adc
fldl
jno
test
push
pop
dec
adc
dec
jns
push
xchg
repnz
sbb
dec
aad
aaa
clc
sbb
mov
adc
push
rcrb
mov
dec
sbb
fisttpl
call
pop
push
testb
xor
rclb
sub
in
push
es
mov
adc
cmp
sub
jmp
add
mov
cmc
push
out
sti
jnp
mov
sbb
loop
jg
add
lret
or
cs
pop
push
sub
sub
inc
and
dec
xchg
jecxz
mov
mov
das
jne
dec
xchg
inc
or
lret
push
mov
jg
int3
xchg
mov
insb
adc
jle
jecxz
scas
in
ret
testl
push
xchg
mov
mov
incl
push
dec
stc
jle
cld
add
mov
jmp
jge
cmp
imulb
jno
es
jne
dec
lea
jg
inc
inc
sbb
lahf
out
lock
add
xor
jle
decl
inc
pop
addb
cli
idiv
mov
inc
pop
xchg
in
addb
add
mov
in
cmp
lcall
jp
hlt
sarl
cld
sub
and
and
das
adc
test
inc
jl
jb
dec
mov
or
push
xchg
inc
push
orl
dec
daa
adc
ds
mov
push
inc
jg
cmp
or
mov
sti
testb
pop
pop
push
rcrb
push
sti
call
mov
pop
push
insl
add
das
push
push
push
push
add
shll
daa
push
sub
and
xchg
aas
sti
add
iret
popf
pop
pop
adc
cmpsl
inc
pop
ljmp
or
mov
pop
mov
push
arpl
jg
ja
sub
insl
ror
add
mov
leave
stos
or
mov
loop
icebp
add
in
fstpl
addr16
pop
push
mov
push
adc
insb
fdivs
jecxz
mov
add
fsubrs
fldt
insl
insb
push
das
aad
sbb
mov
jg
sbb
or
pop
push
push
mov
test
mov
popf
cli
adc
dec
repnz
dec
add
call
xor
outsb
pop
jg
push
sub
ljmp
mov
adc
call
dec
xchg
scas
mov
js
push
lods
ss
leave
decb
adc
mov
mov
leave
jmp
dec
inc
add
inc
test
ja
mov
inc
add
adc
lds
adc
inc
mov
in
notl
stos
in
jge
ljmp
clc
push
cmc
arpl
mov
mov
mov
and
or
add
int
xor
arpl
push
and
push
adc
sbb
test
ret
sahf
clc
mov
jge
iret
jle
outsb
outsl
stos
lcall
in
fs
fwait
sub
gs
add
jo
popa
out
xchg
mov
aaa
xlat
sbb
in
xor
or
pusha
cmc
xchg
sar
sarl
cmp
fdivr
xor
cmc
daa
lahf
arpl
sub
sub
cwtl
sbb
fdiv
xor
inc
pushf
fisttps
jecxz
mov
xor
jns
sbb
fstpl
pop
iret
scas
mov
loop
push
cmp
fdivr
sbb
js
mov
je
mov
fsubl
out
cmpsb
mov
xor
outsl
xchg
cld
stos
mov
sahf
stc
or
mov
xor
mov
aaa
push
fists
or
mov
jecxz
frstor
pop
inc
cli
pop
jle
insl
loop
dec
mov
pusha
mov
testb
mov
sbb
aas
add
fildl
andb
mov
fsubp
pushf
in
mov
out
or
mov
out
xor
push
mov
adc
loopne
dec
dec
stc
leave
sbb
std
push
push
push
cld
fistl
or
jnp
mov
xorl
hlt
push
cld
dec
inc
jnp
sub
sti
push
inc
insb
cmc
mov
ljmp
mov
lock
jbe
lods
out
in
jecxz
ficoml
mov
dec
dec
arpl
xchg
cmpsl
faddl
mov
adc
movsl
jg
mov
cli
push
mov
hlt
and
iret
and
mov
and
inc
dec
and
push
addl
jl
mov
div
imul
outsb
aas
mov
pop
add
and
pop
imul
stc
jl
imul
adc
sbb
enter
les
pop
fbld
cs
test
xchg
pop
mov
or
leave
inc
das
sbb
repz
dec
cmp
xor
add
js
sar
fildll
cli
or
testl
cmp
fildl
cmp
dec
xorb
xor
ret
inc
push
sbb
push
xchg
mov
out
shlb
arpl
mov
popf
mov
loopne
adc
sub
roll
test
and
or
cmpsb
xor
idivl
test
daa
icebp
mov
orb
test
out
inc
outsb
cmp
shll
outsb
pop
mov
jnp
std
lcall
push
mov
mov
mov
loope
out
movsb
daa
push
push
fisttps
rcr
out
arpl
mov
shrl
xchg
mov
inc
sti
xchg
adc
imul
in
inc
jle
cld
out
or
cmpb
inc
int
add
add
push
lock
cmp
icebp
jb
jge
test
aaa
ss
clc
out
jl
jo
cld
mov
mov
insb
add
dec
dec
cli
int3
add
push
dec
inc
rcrl
imul
dec
dec
push
push
loopne
mov
add
pop
add
dec
dec
adc
cmpsl
xor
sub
xor
push
dec
scas
outsl
sbb
decb
cmp
jge
add
test
lds
sbb
mov
add
data16
inc
pop
insb
adc
aam
orb
mov
mov
stos
ss
test
add
pop
in
mov
add
and
jns
sbb
add
add
adc
jecxz
int
mov
jne
stos
test
jecxz
xor
adc
jecxz
jl
leave
repz
mov
mov
and
dec
jmp
outsb
xor
sahf
and
lret
in
push
xchg
incl
shlb
jae
je
jbe
imul
jne
push
in
jnp
push
adc
cs
lret
loopne
icebp
jno
jae
jne
je
int
mov
dec
xchg
je
imul
cmpsb
jmp
aaa
adc
lcall
mov
in
outsb
cltd
jo
xorl
jae
mov
out
jbe
jns
js
cs
pop
jne
inc
ja
js
jp
jns
imulb
jae
out
iret
jl
xor
pop
outsb
int
ja
adc
cmpsb
imul
cmpsb
imul
mov
int
ret
jp
xor
shll
mov
sahf
cmp
test
jo
xlat
jb
in
mov
movsl
jne
pushl
mov
cs
inc
jno
test
dec
pop
jno
mov
fwait
cmpsb
cmp
aaa
dec
and
mov
or
sysenter
mov
bound
pop
or
jge
sti
iret
xor
sar
das
jb
xor
fistl
fisttpl
inc
jae
jne
jbe
out
mov
test
je
mov
jne
ss
xor
inc
sbb
push
sub
dec
add
out
std
mov
cli
rorl
mov
or
push
sub
xor
ja
orb
lahf
jg
and
leave
xchg
out
inc
push
enter
outsb
push
xchg
add
andl
sbb
pop
jbe
jno
das
xor
adc
sbb
ret
daa
lea
mov
pop
outsb
imul
and
jnp
sub
or
mov
sbb
push
dec
xlat
stos
cmp
jl
pusha
insl
push
lods
into
adc
sub
pop
test
outsl
je
int
ss
insl
xlat
jne
ljmp
inc
lcall
cmpsb
imul
in
imul
adc
jb
jae
dec
mov
xchg
jne
cwtl
outsl
gs
xor
shll
pop
dec
shll
sbb
std
cs
push
in
pop
fdivs
fwait
jae
pop
mov
mov
test
pop
repz
je
jbe
jae
xor
in
jp
jns
fcomi
lcall
shlb
xor
pusha
push
adc
cmp
imul
imul
pop
cs
jnp
jp
jbe
js
dec
shll
test
loope
mov
ja
ja
leave
jae
fnstenv
push
xor
cmc
ret
test
xchg
jbe
jne
jno
cmp
xor
dec
pop
je
jae
arpl
movsb
imul
jmp
add
js
shll
imul
mov
dec
cmp
jb
or
jb
je
jne
clc
leave
lea
mov
test
inc
je
dec
push
cs
ljmp
pop
insl
outsb
cld
cmp
loopne
cld
jmp
ret
inc
pop
outsl
dec
push
inc
addr16
dec
pop
addr16
cmp
imul
sub
dec
pusha
cmp
ljmpw
shlb
or
sub
ds
jb
jo
imul
cmp
outsl
ja
fs
pop
jno
insb
je
daa
cli
inc
cvtdq2ps
pop
pop
bound
outsl
pushl
cld
cmp
ds
pop
push
clc
outsl
pop
pop
outsl
popa
dec
fisubrl
mov
xor
jbe
dec
cmp
gs
and
pop
push
out
push
cmp
gs
mov
test
cmp
jmp
outsb
jo
incb
pop
pop
inc
pop
insb
pop
push
cmp
lock
jmp
inc
pushw
pop
addr16
fisubl
ds
in
fstpt
push
sbb
pusha
pop
jmp
std
inc
cli
outsb
pop
pop
jb
inc
gs
cmp
lock
notb
arpl
inc
daa
ja
pop
addr16
cmp
popa
bound
cli
adc
push
aas
jb
pusha
push
push
addr16
fcmovnbe
pusha
inc
popa
pop
insl
cld
mov
push
jb
mov
or
pop
insl
imul
pop
bound
mov
sbb
dec
pop
pop
pop
or
dec
cmc
pop
fnstenv
pop
andl
adc
dec
test
mov
insb
pusha
outsl
fs
pop
jo
aas
lcall
mov
pop
jno
jge
in
mov
insb
cmp
ret
pop
rorb
cmp
jo
loopw
pop
insb
xor
push
jb
add
jo
pop
test
lock
pop
outsb
popl
stc
inc
bound
push
fs
insb
xor
std
jno
sti
inc
push
pop
dec
jno
jbe
inc
aas
dec
dec
cmp
xor
ret
sub
popa
gs
outsb
push
bound
pop
fdivs
cld
mov
push
cmp
jae
adc
lea
dec
dec
jnp
in
idiv
inc
js
pop
outsl
push
pusha
imul
pop
dec
jo
rcll
jle
bound
pusha
pop
dec
bound
outsl
pop
aas
fstpl
pop
outsl
daa
dec
pop
pop
cld
add
cmp
or
stc
cmp
jo
outsb
insl
dec
fs
push
push
push
fstpl
scas
fmul
pop
js
push
or
dec
jmp
push
jno
shll
push
dec
int
fists
xor
imul
sbb
sbb
popa
pop
fs
dec
bound
icebp
pusha
push
sti
and
pusha
fidivrs
insl
add
jno
popa
inc
pop
pop
pusha
mov
sar
outsb
add
insl
pusha
and
dec
cs
xor
das
daa
pop
ja
clc
aas
repz
pop
push
jecxz
or
or
pop
or
adc
gs
pop
outsl
mov
out
clc
inc
sbb
subb
arpl
outsl
push
jbe
push
mov
pop
andl
dec
aas
aas
jmp
push
inc
out
outsl
jno
out
das
push
xchg
int3
pop
fildl
insl
ja
cli
dec
cwtl
inc
sub
imull
jno
cli
mov
push
and
pop
popa
sub
mov
pusha
and
dec
pop
imul
arpl
jmp
pop
outsl
ljmp
in
bound
inc
sub
cmp
push
cmp
sub
sub
or
adc
pop
incl
insb
icebp
jno
xor
jmp
dec
aaa
outsb
pop
bound
push
mov
das
cld
jbe
adc
and
sahf
fiadds
adc
pusha
arpl
xchg
inc
movsl
fucomi
out
pushf
inc
imul
pop
test
dec
push
mov
dec
outsl
pushf
outsl
jae
mov
data16
or
push
pop
mov
scas
pop
sub
dec
insl
and
popa
loope
inc
imul
bound
inc
inc
aaa
pop
daa
sbb
pop
arpl
sti
das
lahf
ds
arpl
pusha
sbb
arpl
pop
lahf
sti
or
cmp
pop
frstor
cmpsb
sarl
cmp
cmp
loope
lock
cmp
push
cld
cmp
push
inc
dec
sbb
pop
clc
pushl
outsb
jb
cmp
dec
push
add
std
cmp
sub
sbb
push
jmp
out
dec
aam
fimull
and
cmp
fmull
aaa
fsubp
outsb
cmp
cmp
cmp
jae
pop
fmul
mov
pop
add
sub
ljmp
in
pop
inc
cmp
pop
dec
insb
daa
imul
cmp
pop
pop
outsb
addr16
add
add
inc
dec
cmp
and
sbb
stos
pop
stos
cmp
cmp
pop
mov
push
insl
pop
mov
imul
rcr
adc
cmp
or
inc
cmp
sub
or
cmp
cmp
cmp
dec
cmp
cmp
pop
adc
pusha
or
or
dec
mov
popf
cwtl
push
mov
aas
mov
sbb
ja
ret
cmp
mov
aas
insb
inc
cmp
dec
aas
pop
ds
mov
pop
cmp
inc
cmp
mov
addl
mov
icebp
pop
fbstp
in
or
outsb
mov
or
daa
push
aaa
pop
lahf
pop
cmp
roll
dec
cmp
cmp
xchg
jmp
cmp
aaa
inc
pop
sbb
ret
or
lahf
dec
cmp
inc
aaa
sbb
sub
jb
mov
pop
cmp
pop
pusha
mov
push
ja
fucomi
xchg
test
cmp
inc
insb
pop
cmp
pop
add
mov
xor
rorl
push
arpl
jg
gs
test
mov
roll
es
gs
push
dec
sub
pusha
jne
and
mov
imul
das
cwtl
mov
insl
push
push
das
ss
push
test
adc
fwait
nop
insl
jecxz
dec
pop
cmp
mov
imul
out
std
stc
insl
cmp
mov
push
arpl
sub
iret
out
or
mov
das
outsb
popa
cld
xor
xor
shll
sbb
or
jnp
jno
xchg
pop
sub
decb
inc
cld
push
in
jo
inc
pop
mov
addr16
cli
xchg
daa
imul
sbb
icebp
xchg
ds
fdivl
incl
imul
jmp
or
xor
mov
mov
or
cld
xor
dec
dec
xchg
daa
sub
dec
sub
push
aas
pop
fcoms
or
pop
or
adc
push
mov
test
mov
gs
pop
pop
adc
inc
fucomi
insl
add
dec
dec
pop
jne
pop
test
cs
fimuls
sti
xorl
jmp
push
pop
mov
mov
sbb
or
pop
pop
repnz
sbb
std
adc
mov
or
pop
or
jp
das
in
mov
pusha
call
fldt
lea
popa
sub
mov
cs
jb
mov
cmp
xor
mov
or
mov
outsb
daa
adc
adc
add
mov
in
inc
add
mov
fdivrl
add
outsb
jne
arpl
cmp
jge
loope
jmp
lret
push
sub
ret
mov
mov
or
inc
aaa
fs
arpl
jbe
sbb
sub
inc
pop
outsl
addr16
pop
pusha
mov
jae
inc
mov
adc
pop
mov
and
jno
imul
stos
arpl
sbb
dec
ficoms
addr16
inc
insl
int
xchg
clc
ret
jo
inc
jo
dec
outsl
mov
dec
insb
rcl
je
dec
shlb
insl
pop
cmp
push
fwait
push
das
sub
push
mov
jns
insl
xor
clc
dec
pusha
outsb
lret
jo
mov
or
mov
add
imul
push
rep
push
dec
jno
or
dec
mov
pop
dec
std
jb
and
or
lods
sbb
cmp
sbb
adc
mov
ljmp
sti
or
pop
decb
inc
pop
stc
or
jg
adc
clc
stc
mov
mov
sbb
mov
sbb
ljmp
nop
out
pushl
out
in
out
in
call
stc
outsl
lcall
xorb
idiv
repz
out
jae
out
push
mov
fdivrs
rclb
pusha
or
scas
cld
arpl
cmp
enter
scas
xchg
lods
scas
lods
imul
mov
je
fcompp
mov
mov
xchg
popa
mov
dec
push
imul
fcmovne
fsubs
mov
adc
push
insb
mov
mov
fnsave
sbb
outsb
mov
mov
mov
jae
neg
fnstcw
push
fsubrl
mov
jg
lret
adc
arpl
jl
cmc
mov
mov
pusha
add
js
out
addr16
cs
jmp
dec
pop
sbb
jb
mov
mov
sar
inc
gs
add
fcmovu
lds
ffree
fcoms
cli
xchg
hlt
mov
cmp
test
fsubp
in
mov
aaa
and
mov
jle
mov
push
jle
pop
dec
inc
arpl
repnz
hlt
add
xchg
jmp
mov
or
fldl
mov
sub
mov
push
and
push
jbe
mov
mov
mov
repz
fistps
aad
mov
jno
repz
jmp
out
lock
mov
scas
sub
jnp
js
in
repz
mov
dec
sbb
andl
and
dec
inc
repz
mov
fidivrl
dec
push
jns
inc
xchg
xor
sbb
test
xchg
xchg
xor
sbb
in
mov
mov
movsb
imul
mov
jnp
mov
fldcw
dec
cmp
ja
jl
inc
testl
mov
cmpsl
mov
shlb
adc
mov
rcll
loopne
movsb
mov
inc
shrl
pusha
arpl
dec
ja
shrb
mov
outsl
dec
mov
in
mov
repnz
fcom
push
loop
lea
mov
pop
repz
sbb
xor
xor
sti
xlat
hlt
clc
jecxz
cmp
idivl
enter
cmp
ljmp
jl
xor
xchg
mov
cmp
mov
pop
push
mov
fsub
in
negb
dec
pop
dec
xor
pop
lods
jp
leave
jecxz
pop
arpl
arpl
jecxz
mov
pop
xchg
shll
or
jecxz
push
push
es
and
mov
cld
mov
aad
dec
and
mov
mov
sub
call
xchg
ret
lods
movsb
movsl
lods
mov
sbb
jp
push
inc
sahf
jnp
out
cld
ret
mov
mov
daa
clc
lahf
xchg
incl
stos
mov
push
and
idivb
jmp
repnz
cli
es
cmp
lcall
sub
stc
jp
xchg
jge
sub
adc
adcl
daa
cli
fnstsw
jns
fnsave
clc
dec
cmp
enter
cmp
jmp
xor
mov
out
repnz
hlt
idiv
cli
sub
in
pop
mov
icebp
or
fildl
jmp
cli
pop
out
out
lcall
cmp
fcomp
mov
out
cli
pop
mulb
cmc
div
repz
jns
dec
mov
cmp
leave
ja
jecxz
jg
lcall
into
repnz
jnp
fnclex
in
or
cmp
stc
mov
pop
hlt
call
ja
cmp
mov
jg
les
cli
and
outsl
je
es
jne
mov
sbb
pop
sbb
sbb
sbb
and
sbb
sbb
cwtl
daa
fidivrs
sbb
and
mov
insb
and
stos
outsl
inc
call
cs
cmpsl
sbb
pop
jo
das
daa
pop
fwait
jmp
mov
inc
cmp
leave
rolb
dec
sarl
pop
push
pusha
aas
adc
clc
sub
and
leave
rcl
cmp
mov
xor
jmp
sub
sbb
loope
in
cmpsl
mov
mov
outsl
jle
and
pop
sbb
cmp
insl
and
outsb
push
std
out
ljmp
sub
ret
hlt
mov
mov
mov
repz
sti
mov
test
mov
mov
mov
mov
das
test
xor
mov
ja
dec
push
popa
mov
mov
idiv
call
lcall
dec
push
sub
mov
hlt
fdivrp
mov
lods
pop
mov
sti
mov
stos
sbb
adc
cmp
stos
xchg
push
sub
xor
jo
pop
insl
aam
jmp
cmp
inc
ds
xchg
cld
pop
sub
jecxz
jno
pop
mov
pusha
std
pusha
icebp
sbb
sub
push
cli
ret
pushl
jno
and
gs
pop
add
pop
outsb
adc
and
pop
push
xor
stos
mov
jl
inc
mov
sub
mov
test
outsb
arpl
dec
stos
mov
ljmp
insb
sbb
push
test
aad
aam
jo
pop
ds
push
ret
std
push
ja
ljmp
push
dec
dec
andb
sti
pop
fucomp
add
dec
cmp
dec
lods
mov
shll
dec
jb
cmp
insl
repz
outsl
sbb
loopne
imul
cmp
inc
dec
stos
aaa
push
cmp
je
dec
inc
inc
icebp
inc
pop
jg
outsl
bound
pop
sbb
adc
inc
mov
and
and
pushw
push
lock
in
mov
xor
inc
fistpl
filds
dec
dec
lahf
or
push
add
in
decl
fstpt
inc
push
sbb
sbb
push
inc
sub
es
add
pop
pop
pop
imul
push
xor
jno
jb
sub
es
aas
pop
pop
adc
sub
adc
xor
jbe
sub
dec
dec
and
xor
shrb
insb
pop
add
or
adc
mov
sub
pop
dec
insl
jb
xor
sub
and
test
push
sub
dec
and
inc
popa
fs
pop
daa
imul
daa
sbbl
mov
insb
inc
dec
adc
das
or
xchg
dec
out
push
jg
dec
push
sbb
dec
sub
daa
sub
push
cmp
fnstcw
mov
outsl
outsl
sub
sbb
sub
les
lock
insb
imul
pop
cmp
das
divl
sbb
sub
inc
dec
pop
popa
arpl
xor
insl
lea
roll
jno
mov
imul
pop
xor
addr16
mov
mov
push
test
pop
imul
es
sub
and
sub
nop
xor
je
pop
pop
xor
shrl
cmp
iret
arpl
in
sbb
pop
sub
sub
pop
mov
push
imul
popa
bound
jmp
shrl
mov
test
inc
frstor
pusha
push
mov
adc
mov
push
dec
xlat
insl
cmp
pop
or
arpl
pop
pop
sub
sbb
cmp
push
pop
das
pop
sub
mov
inc
fdivrs
sub
xchg
push
mov
pop
pop
xor
aas
cmpsw
mov
addr16
dec
xor
idivb
xorb
imul
sbb
mov
mov
sbb
ret
mov
cmp
movsl
sub
fs
lods
testb
xorl
sub
daa
jl
mov
push
and
popa
sub
cmp
and
sub
mov
and
sub
jecxz
pop
sub
cmp
and
sub
lea
and
cs
xor
enter
push
pop
test
xor
sub
jb
sub
pop
and
insl
pop
adc
aas
xor
sub
imul
outsb
sti
cmp
xchg
jo
sbb
pop
in
ja
sub
fidivs
fs
gs
ds
push
fwait
insl
ja
push
mov
jmp
pop
inc
sub
test
dec
andb
or
arpl
push
repz
lea
sbb
pop
pusha
push
cmp
popa
insb
fdivp
mov
lock
je
pop
jmp
pop
dec
adc
inc
insb
pusha
pop
dec
jecxz
push
inc
jo
pusha
jle
xor
cmp
mov
inc
bound
in
xlat
xchg
or
outsl
arpl
xchg
insl
data16
fistpll
cli
jno
pop
insl
aas
sarl
dec
pop
imul
cli
ja
popa
inc
jno
insb
fs
pop
imul
imul
push
movsl
mov
rcll
pop
adc
dec
movzwl
cmp
pop
inc
dec
pop
dec
ja
inc
push
outsb
jmp
adc
dec
lea
lret
xlat
inc
sti
outsb
jo
pop
test
inc
aaa
imul
sub
and
ja
fldt
inc
scas
in
mov
sub
test
mov
shrl
dec
cmp
mov
imul
ja
pop
and
lret
stc
ret
jnp
cs
arpl
gs
outsb
gs
addr16
das
daa
sub
das
xor
outsl
jo
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
push
dec
push
cli
push
sub
push
push
push
push
pop
pop
pop
jge
fs
outsl
dec
mov
jno
jb
jo
pop
clc
mov
dec
inc
sub
pop
es
jmp
adc
inc
jb
movsl
inc
jnp
and
addr16
aas
inc
cmp
and
inc
jg
in
push
arpl
adc
outsb
arpl
insb
insb
aad
inc
cs
add
ds
pop
mov
in
mov
inc
and
insb
inc
imulb
mov
add
inc
arpl
sub
sub
jno
push
jb
adc
xor
xor
add
aas
sub
push
das
adc
inc
xchg
mov
push
jmp
je
aas
inc
cmp
cmp
shr
iret
sub
stc
add
imul
mov
test
rorl
in
cmovbe
add
add
sti
mov
jg
fnstsw
arpl
cltd
cmp
es
das
mov
add
dec
sub
aad
std
mov
sbb
jns
sub
jo
xchg
push
loop
shll
in
shll
sbb
arpl
mov
adc
outsb
jae
outsl
xchg
sbb
dec
incb
xchg
imul
movsl
gs
inc
push
pop
dec
inc
outsl
movsl
xchg
sub
fucom
out
fsubs
jge
insl
push
lcall
xchg
mov
stos
dec
leave
push
pusha
sub
mov
cmpsb
call
xchg
loope
repz
idivl
popa
imul
imul
mov
outsl
pusha
je
rcrb
mov
and
arpl
loop
imul
addr16
dec
inc
or
add
loop
pop
mov
ljmp
sub
sub
sub
sub
lcall
js
xchg
sub
sub
sub
sub
ljmp
mov
inc
sub
mov
sub
sub
pop
das
arpl
pushl
sub
mov
cs
sub
jns
subb
cs
sub
inc
sub
call
sub
adc
push
xor
cs
xor
lret
xor
cs
fisttps
cld
aas
xor
push
sub
cltd
xor
das
sbb
outsl
lcall
xor
cs
xor
pop
xor
cmc
xor
xor
imul
and
jg
call
xor
das
sbb
inc
xor
xor
jp
jle
xchg
pushl
popf
xor
xor
xor
xor
xor
pushl
xor
xor
incl
xchg
xor
xor
aaa
inc
xor
ss
xchg
cwtl
aaa
mov
pop
pushl
into
xor
ss
out
xor
cmp
aaa
inc
ss
xor
pushl
mov
mov
aaa
shlb
jmp
out
cmp
xor
mov
cmp
jo
stos
xor
cmp
adc
jmp
aaa
fidivrl
loopne
cmc
xor
daa
cmp
cmp
aas
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
aaa
sbb
out
mov
sub
push
sub
sub
sbb
sub
xor
and
xor
call
jg
sub
xor
sub
xor
fdivs
pop
loop
aad
das
clc
add
das
sbb
xor
pushl
das
push
xor
addr16
test
mov
test
das
call
ljmp
xor
xor
push
xor
push
je
mov
stos
xor
xor
xor
xor
das
or
push
mov
pop
clc
ljmp
xor
xor
je
nop
xor
xor
cmp
xor
sti
mov
push
cmp
cmpb
cmp
xor
leave
cmp
xlat
cmp
cmp
sarl
push
aaa
and
cmp
cmp
mov
cmp
pushl
stc
fldt
push
cld
pop
sub
pop
sub
sub
sahf
sub
sub
sub
sub
sub
cmp
cmpsb
sub
cs
cs
sub
push
sub
int3
ljmp
subb
xor
fldt
in
xor
sub
decl
shlb
fsubrs
in
add
xor
mov
ret
xor
xor
outsl
mov
ljmp
or
cs
xor
shrb
leave
lock
mov
cmp
jle
mov
movsb
das
lods
xor
xor
xor
xor
das
add
outsb
sbb
mov
xor
xor
incl
xor
xor
std
fistpl
xor
mov
push
xor
mov
xchg
xor
test
xor
or
or
lret
xor
xor
aaa
push
xor
cmp
add
test
sti
cmp
aaa
ja
xor
cld
cmp
aaa
daa
xor
out
xchg
cmp
cmp
ss
cmp
std
fbstp
xor
pop
cmp
cmp
sbb
mov
cmp
aaa
adc
cmp
fsubp
aaa
pop
les
pop
cmp
cmp
fnstsw
hlt
mov
cmp
js
notb
sub
sub
sub
xchg
popa
sub
sub
subl
sub
das
in
add
xor
mov
inc
jae
push
cs
xor
outsl
lea
das
lods
sub
xor
cs
xor
ljmp
xor
xor
dec
xor
push
xor
sub
idiv
sbb
xor
pop
xor
addr16
mov
xor
mov
std
sbb
xor
xor
dec
xor
fistpll
das
shl
xor
xor
xor
ja
xor
push
lcall
lock
xor
xor
xor
xor
xor
clc
insl
repz
cld
xor
xor
ss
push
xor
xor
push
mov
ss
jmp
repnz
xor
ss
xor
jg
aaa
jg
mov
stos
xor
fidivs
pop
mov
inc
aaa
xchg
js
xor
xchg
fcmovb
ss
cmp
ret
pop
aaa
inc
aaa
cmp
aaa
clc
outsl
sbb
xchg
cmp
xor
cmp
cmp
dec
scas
outsl
xchg
outsl
pop
pop
sub
adc
das
cvtps2pi
popa
add
or
adc
les
sub
jno
xor
popa
sub
imul
sbb
ja
jne
mov
mov
insb
xor
xor
xor
ss
ljmp
in
xor
xor
xorl
cs
sub
add
sub
sub
sub
loopne
sbb
push
sub
cs
sub
mov
das
icebp
sub
jg
pop
sbb
and
push
xor
das
jge
sub
xchg
cs
sub
xor
sub
sub
push
sar
aas
xor
xor
cs
xor
jno
xorl
cs
xor
das
ljmp
xor
pop
js
and
xor
dec
jg
sub
pushl
test
xor
sub
fninit
mov
adc
add
mov
xor
aaa
xor
imul
shlb
xor
push
pusha
sti
repnz
xor
xor
mov
xor
pop
push
push
xor
xor
push
xor
je
jle
xor
mov
cmp
mov
xor
add
lret
test
xor
xor
and
jmpw
jno
sub
sbb
pop
sbb
add
sub
cs
sub
clc
decl
das
dec
jb,pn
jnp
xchg
sub
lar
outsb
std
sub
mov
bt
add
or
test
and
js
stc
gs
add
pop
add
outsb
outsl
and
je
jo
and
jo
push
popa
je
and
dec
dec
jg
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
ja
inc
jne
jb
outsb
je
gs
imul
push
mov
jae
popa
insb
insb
pop
jae
outsb
insb
mov
in
fists
gs
dec
pop
imul
xor
push
push
push
outsl
popa
insl
sbb
mov
push
add
mov
sub
fs
movsb
dec
jae
mov
fstp
and
and
jo
jae
arpl
imul
arpl
imul
je
sub
popa
bound
adc
jo
jl
les
jno
jbe
int3
mov
jns
or
jbe
inc
fcmovnu
and
inc
adc
fadds
mov
push
jb
jns
add
or
insl
ret
jbe
sub
jb
add
jnp
xor
jne
cmp
or
jae
outsl
fs
insl
adc
push
jae
inc
mov
imul
inc
adc
popa
gs
jg
std
std
mov
and
inc
gs
popa
push
ds
aaa
fisttpl
inc
adc
push
push
adc
fcmovnu
in
idivb
dec
jmp
inc
fs
imul
inc
insb
andl
jne
mov
inc
inc
xor
push
push
sbb
inc
inc
mov
lods
fsubrs
jb
adc
in
in
mov
or
imul
pop
dec
push
inc
push
or
jo
fisubs
pcmpeqw
sub
sub
adc
jb
pop
sub
out
movd
or
mov
push
xchg
insl
jbe
jnp
push
mov
hlt
outsl
dec
push
and
fs
daa
push
sti
imul
js
jnp
insb
sti
imul
dec
insl
imul
xchg
pop
insl
jae
addr16
mov
jp
push
xor
popa
ss
dec
xor
push
dec
je
and
jg
fistl
sbb
pop
add
xor
xor
jb
pushl
xchg
add
and
iret
xor
daa
jb
adc
pushf
pop
mov
jg
fucomi
call
aas
iret
add
adc
call
jae
std
fsubr
fnsave
add
stc
cmp
add
ja
punpcklbw
in
fstpt
push
lods
aad
cltd
test
jne
pop
inc
repnz
addr16
jmp
or
push
or
popf
add
ds
aas
push
add
push
fs
or
add
mov
enter
mov
shlb
add
loop
dec
mov
or
mov
cmpsb
aad
movsb
lods
inc
add
dec
jmp
jmp
adc
mov
push
loope
jo
xchg
add
add
aaa
xchg
pop
stc
sub
add
add
or
idivb
fnstenv
fcomps
xchg
adc
inc
sub
xchg
loopne
decl
add
pop
push
add
push
and
adc
test
inc
add
add
cld
inc
push
stc
rolb
nop
add
add
sub
cltd
shlb
jns
cmp
pop
push
dec
add
add
add
add
add
jg
sub
jmp
push
mov
add
add
push
add
jp
jle
jb
jbe
sub
add
add
add
add
and
mov
mov
add
gs
je
inc
imul
outsb
addr16
sti
in
std
scas
or
gs
pushw
push
inc
insb
jne
push
add
insl
and
je
push
imul
gs
dec
push
add
inc
jge
outsl
jae
dec
popa
outsb
fs
neg
outsl
sub
jbe
inc
js
and
insl
jo
dec
popa
insl
inc
inc
or
ja
xchg
sbb
test
push
jb
arpl
pop
dec
jo
outsb
or
dec
fs
sbb
push
enter
jae
stos
dec
adcl
sbb
jb
xchg
mov
insb
fistl
adc
inc
mov
mov
lods
jl
push
pushf
gs
jnp
or
pop
daa
mov
sbb
fs
dec
fdivs
jb
jns
jns
gs
mov
inc
jle
je
adc
cmpb
icebp
gs
outsl
outsl
insb
bound
mov
mov
jo
outsl
je
and
cli
inc
xor
inc
adc
addl
add
lea
bound
sbb
fbstp
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
movsl
adc
adc
mov
mov
decl
or
fists
or
mov
jp
call
add
or
and
incl
sbb
ljmp
or
repz
and
inc
sub
push
push
jns
insl
sti
mov
aaa
xor
jmp
inc
insl
outsb
sbb
xchg
sbb
jge
or
lcall
sbb
xchg
lock
push
or
icebp
adc
insb
bound
push
test
mov
pop
lret
mov
in
push
dec
mov
movsl
insl
sti
mov
dec
mov
mov
adc
or
fbstp
arpl
call
cli
or
stos
mov
movsb
mov
inc
das
dec
or
popa
mov
xor
or
data16
gs
sbb
je
push
pop
jnp
dec
lods
pop
pop
je
wbinvd
popa
test
movsl
mov
mov
insl
or
add
fs
push
mov
stc
sbbl
fsubrl
cmp
jb
jae
arpl
outsb
or
jo
ja
jge
je
subb
xchg
out
xchg
insl
orl
and
insl
bound
ds
icebp
cmpsl
scas
ja
or
jbe
ret
lret
push
sbb
outsb
arpl
inc
pop
aaa
jmp
inc
js
inc
jb
dec
aam
jo
outsb
in
std
fmul
je
je
insl
mov
push
cmpb
cmp
xor
and
xor
int3
xor
adc
dec
scas
jmp
jo
fs
mov
hlt
or
out
inc
aaa
jne
mov
les
fs
lods
push
jp
dec
fs
pop
cmp
dec
adc
addr16
push
stos
inc
or
inc
ds
push
outsl
mov
mov
nop
mov
jae
adc
and
xchg
scas
push
push
xchg
push
gs
adc
popf
bound
scas
mov
mov
outsb
or
jo
inc
and
xchg
push
bound
xor
dec
imul
in
pop
add
add
add
pop
ja
leave
push
jmp
or
push
mov
add
xchg
fnsave
add
add
adc
add
jnp
pusha
xor
sbb
adc
add
adc
repnz
xchg
push
aaa
test
js
jbe
rcr
inc
add
mov
js
jb
xchg
cs
adc
mov
jb
popa
push
in
add
cmp
inc
cs
jl
add
mov
pop
daa
rorb
mov
negl
repz
dec
add
mov
sbb
jns
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
