daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jecxz
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
ja
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
pop
fistl
int3
into
mov
mov
or
shl
add
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
nop
fstps
out
inc
add
inc
cmp
sbb
and
pop
out
add
int
mov
lahf
adc
and
xor
cmp
cmp
mov
push
mov
dec
sub
data16
add
add
mov
sub
sub
xor
das
inc
sbb
jge
xchg
test
add
je
mov
cmp
inc
add
inc
jecxz
lahf
je
adc
fadd
xchg
std
mov
xor
pop
jne
adc
insl
mov
sbb
adc
fstl
jle
add
push
pop
mov
push
push
jmp
push
push
pusha
int
pop
leave
push
sub
adc
mov
loope
dec
ss
mov
add
pop
enter
cmc
ret
push
test
dec
imul
add
pop
xor
fwait
xor
test
pop
mov
int
cs
fnsave
add
or
push
dec
cmp
sbb
mov
inc
jne
jecxz
xor
mov
mov
aaa
adc
fsubrl
xor
push
push
push
push
add
pop
mov
mov
push
xor
shll
insb
rolb
je
xor
rol
sub
or
mov
dec
scas
and
adc
sub
ja
nop
sbb
push
or
sub
push
out
outsb
je
xor
push
mov
push
push
sub
popf
xchg
xor
inc
inc
cmp
push
pushw
stos
repz
sti
xchg
push
inc
lock
adc
push
mov
aad
cmp
add
scas
fstl
lea
push
push
jo
xor
sbb
fs
test
or
sub
dec
dec
or
mov
push
pop
push
adc
push
rorb
cwtl
loop
outsl
add
loope
dec
pop
push
push
cmp
xchg
add
xlat
inc
xchg
mov
add
xlat
dec
mov
jl
push
addl
mov
push
push
add
scas
aaa
cmp
or
push
lret
nop
sbb
pusha
add
pop
xor
jmp
jae
lods
in
rcll
ds
js
les
test
fldt
ret
mulb
adc
xorl
popf
xor
xor
in
sub
mov
xor
cmc
rcrl
push
push
push
xchg
int3
xchg
push
lods
xchg
lea
add
mov
pop
pop
or
iret
mov
inc
push
adc
adc
adc
adc
in
sbb
cmp
test
xchg
mov
dec
pop
cmpsb
sar
jne
mov
cli
mov
insb
int
int
clc
cld
lret
or
jl
or
xor
dec
push
fistpl
incl
add
test
jle
push
dec
jns
add
jp
jnp
inc
push
pop
rcl
cld
mov
icebp
jg
add
out
or
jmp
addl
and
nop
sbb
pop
out
jmp
mov
loopne
leave
sbb
adc
inc
mov
xor
sbb
shl
mov
pop
shll
ror
ja
mov
loopne
rclb
pop
jb
sub
sub
std
xor
xor
mov
push
adc
mov
into
adc
push
lret
jecxz
xor
push
push
fnsave
je
xchg
cmp
mov
call
fidivs
adc
inc
sbb
push
clc
sbb
call
pushl
push
lea
push
shl
gs
data16
roll
ja
ret
or
stos
mov
push
mov
aad
ret
push
push
sub
xchg
adc
lods
cmp
inc
fsubs
fiadds
jmp
ret
adc
out
and
aaa
sbbl
lea
add
add
cmp
scas
push
xor
mov
mov
shlb
mov
movsl
or
jo
loop
cwtl
popa
rclb
popa
movsb
or
inc
dec
out
ret
pop
and
add
adc
pop
or
inc
addr16
or
push
adc
xchg
inc
orl
dec
adc
popf
imul
dec
sbb
inc
sub
mov
sbb
xchg
icebp
test
sbb
sub
enter
and
add
mov
mov
push
rcrb
imul
push
push
pop
push
xor
jb
pop
pop
mov
adc
sub
aam
dec
adc
add
imul
push
or
mov
or
popa
popa
hlt
mov
ja
add
mov
fimuls
sbb
loopne
mov
lods
in
add
inc
push
mov
inc
testl
push
sbb
shll
or
inc
push
add
sbb
subl
cs
sub
inc
rorl
mov
cli
or
or
cmpsb
jmp
fisttpll
and
rclb
sub
adc
fs
das
adc
pop
xor
xor
jl
outsl
mov
mov
mov
xlat
push
sbb
push
data16
mov
mov
push
cmc
out
stos
jae
or
jne
inc
add
out
add
xor
sbbl
ret
and
lcall
mov
and
push
andb
leave
call
inc
mov
mov
inc
outsl
or
adc
jno
jbe
mov
push
xor
fcompl
rcrl
fcomps
rorl
push
adc
addr16
fs
inc
pusha
test
or
pop
xchg
dec
paddusb
mov
lahf
xorb
xchg
fisttps
jg
or
cmp
jne
add
shlb
push
and
or
scas
or
push
ret
and
dec
sti
jbe
repz
sub
cltd
pop
mov
mov
outsb
add
into
push
sbb
loopne
ret
or
shlb
pop
addr16
shll
adc
movl
push
push
sbb
push
fldl
clc
jbe
push
mov
add
or
or
mov
popa
pusha
jl
xchg
sbb
sbb
fisttpll
xchg
and
fs
addr16
pop
inc
ss
push
jbe
dec
add
lds
cli
jge
js
push
rcrl
or
outsl
or
imul
jo
push
push
add
cmc
push
or
push
dec
and
xlat
in
pushf
pop
js
pusha
or
xchg
mov
lock
sub
push
pop
cmpsb
mov
push
mov
js
test
call
xchg
or
adc
inc
clc
pushf
es
ret
mov
mov
mov
shll
dec
add
adc
idivl
rcrl
inc
adc
add
mov
inc
addr16
mov
add
dec
push
push
and
adc
adc
jp
fldenv
fsub
dec
inc
cmp
mov
lock
jnp
testl
cmpl
push
out
lods
xor
jae
insb
insb
mov
fnstcw
jg
sti
xor
and
push
push
push
inc
cmp
or
cmp
insb
neg
jmp
iret
mov
and
sbb
mov
push
dec
or
repz
dec
or
loope
adc
js
adc
jle
adc
shrl
inc
cltd
sub
lods
push
sti
ss
clc
out
sbb
jnp
rcrl
xor
jnp
imul
fisubs
or
dec
adc
pusha
ret
pandn
invlpg
mov
rolb
aaa
nop
rcll
push
add
mov
dec
push
cmpsl
push
mov
dec
cwtl
fs
hlt
push
xchg
or
jbe
pop
cld
imul
rorb
lea
dec
pop
adc
xchg
roll
ret
mov
inc
inc
dec
sahf
out
cmp
cmp
xor
in
sub
sbb
leave
aaa
push
repnz
and
add
adc
or
cmp
or
inc
leave
xor
sub
add
or
insb
push
xchg
cld
jecxz
rcl
movsb
inc
dec
lea
lar
call
leave
enter
push
fcom
lock
les
adcl
adc
movsb
dec
lock
nop
outsb
xor
ret
xorb
out
push
mov
stos
pop
adc
push
add
iret
es
jmp
loopne
nop
je
mov
and
fdivrp
mov
pop
and
aad
sbb
out
stos
pop
inc
xor
sbb
bound
imul
or
inc
rol
loopne
call
outsb
and
jb
pop
push
push
orps
inc
xorb
ds
xor
cmp
and
sbb
orl
adc
sub
xchg
out
jl
add
xor
mov
and
arpl
sub
loope
lods
push
ret
cmp
prefetch
pop
dec
xor
adc
or
sti
outsl
mov
adc
test
sub
push
xor
insb
mov
pushf
jne
add
dec
adcb
sub
out
loopne
jne
or
adc
aaa
pop
call
ljmp
xchg
xchg
cmp
je
mov
cmp
or
mov
add
sahf
jecxz
outsb
mov
mov
lret
push
push
ret
pop
insb
jo
push
and
roll
xchg
sub
mov
xchg
cmp
aas
sbb
fidivrl
rcrb
cmp
lock
lock
out
push
push
sbb
aad
adc
dec
mov
sbb
je
jmp
and
fimull
mov
leave
push
jbe
jne
push
test
test
cltd
idiv
mov
mov
add
mov
fcoms
inc
cmp
jb
sub
push
in
testb
inc
cmp
jg
arpl
jnp,pt
cmp
mov
addr16
fmul
enter
add
enter
sarb
mov
lods
test
enter
mov
enter
mov
test
enter
insb
push
fs
pop
pop
enter
push
dec
dec
inc
enter
inc
cmp
xor
enter
sub
and
enter
sbb
adc
enter
or
add
iret
out
add
inc
clc
inc
hlt
inc
lock
in
jl
mov
inc
test
mov
fs
pushf
mov
fs
mov
enter
fadds
ror
leave
enter
aam
xchg
xchg
xchg
xchg
fsub
in
adcb
in
nop
cmp
sub
adc
lods
jnp
ret
push
jb
push
pop
mov
and
nop
cmpsl
xorb
pop
add
ret
push
xor
add
add
lahf
in
insb
cwtl
inc
andl
push
xor
mov
insb
outsb
lods
cld
ljmp
inc
orl
into
fcoml
inc
or
or
js
inc
mov
or
or
cli
out
lahf
aam
xchg
popa
cmp
out
insb
out
push
sbb
push
adc
pop
adc
inc
mov
lea
push
xor
push
add
sbb
add
int
fucomi
and
inc
xor
and
nop
outsl
sti
mov
cmp
je
cmp
repnz
pusha
fistpl
and
aam
dec
movsb
cld
inc
out
das
jge
inc
rolb
in
movzwl
jmp
sub
jbe
pop
mov
cli
jmp
push
pop
pusha
push
push
and
push
imul
xor
inc
in
mov
mov
mov
push
or
jg
and
mov
push
arpl
or
mov
add
das
mov
inc
call
pushf
inc
lahf
mov
icebp
aaa
xor
sub
sar
pop
and
mov
jcxz
push
adc
enter
pop
mov
jmp
jb
lock
mov
inc
lea
out
sbb
add
fdivrl
into
int3
add
fsubs
and
and
and
mov
pop
inc
fldenv
enter
add
dec
mov
mov
jl
xor
shrl
pop
aam
dec
shll
data16
adc
xor
insb
xchg
dec
dec
testb
dec
adc
shll
bound
dec
shll
scas
sahf
add
adc
adc
add
adc
pop
or
in
jb
or
sbb
movsl
leave
adc
mov
pop
lea
or
adc
add
mov
jp
int
fldt
xor
adc
add
mov
comiss
repz
sub
jmp
scas
jmp
sub
adc
aaa
inc
out
arpl
lcall
pop
shlb
xchg
idivl
pop
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
xlat
jne
xlat
testl
adc
dec
mov
mov
je
addr16
push
push
addr16
fnstenv
xlat
movsl
addr16
mov
adc
mov
adcl
push
rcrb
jne
cli
or
int
shll
mov
ss
shll
push
testb
imul
xor
mov
dec
js
bound
dec
cmpsb
imul
addr16
dec
add
imul
mov
sbb
push
jbe
push
mov
add
nop
fwait
cmp
loope
or
xchg
cs
in
push
jecxz
and
dec
mov
lcall
push
xor
inc
sub
cmp
xor
xlat
pop
xor
sub
and
dec
shll
add
xor
shll
testb
ljmp
fcom
int3
mov
shll
mov
popa
mov
jae
fwait
outsl
pop
mov
add
rcrl
jo
pop
str
inc
ss
aaa
and
mov
lret
or
and
inc
cs
xchg
lcall
sub
sbb
imul
sbb
int
repnz
aaa
stos
rolb
cmpsb
imul
cmpsb
imul
cmpsb
imul
xlat
mov
rorl
and
push
insb
inc
mov
and
inc
xchg
daa
lock
add
sbb
xor
push
and
int3
inc
stos
pop
dec
pop
leave
sub
dec
orb
leave
fs
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
adcb
xor
inc
inc
dec
xor
cs
insb
add
push
inc
push
gs
testb
pop
or
push
sbb
shll
pop
and
pop
jl
in
clc
cld
add
sti
stc
cld
idiv
cld
mov
testl
cld
mov
incl
sbb
pushl
cli
dec
leave
push
dec
bound
push
pop
insb
sbb
imul
sbb
idiv
pushl
sbb
sbb
push
pop
popa
sub
add
sbb
fucomip
ret
mov
inc
add
mov
inc
add
xchg
stc
out
mov
add
mov
daa
cmpsl
push
call
mov
mov
push
inc
ds
into
stc
cmpsb
imul
mov
dec
inc
adc
add
pop
out
testb
std
xchg
std
add
daa
dec
popf
add
and
hlt
pop
sbb
std
or
lret
inc
into
cs
pop
sti
sbb
and
stc
or
or
or
insb
jl
mov
dec
xchg
outsl
mov
sbb
or
or
ja
jg
daa
jo
jne
arpl
pushl
dec
push
add
pop
daa
outsb
pusha
pop
imul
imul
push
xchg
xchg
jg
cmp
daa
pusha
pop
jno
jmp
cmpsb
movsb
imul
imul
fldt
inc
fcomps
std
call
dec
xchg
dec
dec
push
dec
mov
addb
mov
add
or
cld
repnz
mov
je
clc
jno
mov
push
loopne
dec
dec
push
loope
dec
ljmp
fists
in
sub
dec
cld
not
pop
mov
testl
insb
add
push
cmpsb
insl
ljmp
pop
pop
mov
dec
dec
dec
xchg
mov
cli
mov
dec
outsb
cli
mov
pop
add
jae
icebp
fs
add
loope
dec
pop
and
or
incb
dec
or
mov
fsubrl
std
xchg
pop
jle
out
in
es
out
sub
lds
dec
das
mov
stc
dec
out
pop
roll
jb
ficomps
push
pop
out
dec
adc
add
xchg
and
sbb
jb
and
push
dec
addb
mov
lcall
dec
std
adc
push
or
cmp
push
jb
imull
or
std
fs
int
insl
add
add
data16
mov
loope
and
rorb
dec
cmpl
test
push
clc
jae
pusha
sbb
or
push
inc
insl
std
pop
cmpb
push
std
mov
cmp
addb
test
inc
mull
mov
aaa
stos
push
clc
adc
cmp
add
imul
jp
decl
aas
cmpl
jg
clc
je
sahf
sti
add
incl
jp
sti
jae
cwtl
sti
or
add
sti
mov
pop
insl
cmp
and
hlt
stc
cmp
xchg
mov
mov
xchg
jae
xor
fwait
mov
push
mov
xor
xorl
std
shrl
in
or
add
and
and
in
pusha
repz
xor
jl
lret
and
repnz
das
mov
loope
sbb
ljmp
xor
fsubrl
cld
jno
popa
sti
pop
adc
outsb
cli
les
add
in
or
mov
ja
inc
dec
popa
and
mov
es
je
aaa
test
cld
or
nop
push
adc
ja
or
ret
mov
dec
dec
xchg
addb
je
xor
cmp
cmp
ja
lock
loope
decb
stc
jae
idivw
xor
pop
fdivr
sbb
adc
sbb
gs
dec
xchg
mov
inc
xor
mov
cmpl
ret
push
sahf
aas
cmpb
pushl
inc
dec
pop
cmpl
xchg
fldt
out
shl
out
adc
or
add
nop
mov
pop
ja
jne
adc
or
filds
aaa
fldt
push
pop
add
std
add
jmp
ffree
repz
and
js
aas
mov
leave
jne
xorb
mov
and
or
gs
gs
push
xor
mov
lcall
ds
cmp
xor
in
das
std
aam
push
or
stos
add
test
cmp
popf
das
sub
test
jg
mul
scas
lcall
shrb
pop
or
push
fisttps
add
jg
dec
dec
test
ret
xor
inc
divb
ret
cmp
hlt
xchg
ljmp
icebp
cld
in
add
cmp
or
or
mov
out
xchg
fstpt
arpl
xchg
inc
in
push
dec
dec
xchg
insl
jmp
in
jb
pop
outsb
sub
add
lock
lock
repnz
loopne
add
in
cmp
sahf
lock
or
add
in
mov
push
xchg
ja
mov
mov
mov
in
jb
insl
clc
add
in
std
push
fdivp
outsl
ret
cmp
outsb
push
fs
mov
std
in
sti
jmp
arpl
mov
dec
mov
and
call
outsl
out
xlat
xchg
sbbl
lods
lret
mov
out
pop
aaa
mov
gs
or
jmp
incl
pop
lret
or
or
out
add
icebp
gs
fisttpl
pop
cld
jbe
std
das
sub
lock
addr16
imul
push
cmp
jmp
ret
call
xchg
in
ljmp
xor
jp
mov
jb
xchg
pop
in
cli
lcall
out
int
push
pop
pop
mov
in
call
leavew
std
dec
mov
xchg
outsl
pop
mov
outsl
incl
adc
in
mov
clc
sti
idivb
push
aam
cli
cld
negb
test
cmp
add
rcpps
push
js
pop
xorb
push
adc
fisubs
das
insl
mov
in
in
push
incl
add
dec
out
mov
cmp
add
std
call
cmc
jl
inc
aaa
cld
rcll
mov
jb
out
add
out
fidivrl
or
imul
fisubs
lea
fs
insl
loope
inc
testl
add
notl
mov
cmpsl
cmpsl
arpl
decl
push
cmpb
ds
jg
jg
pop
jns
repz
cmp
xor
xor
mov
jbe
jno
cmp
mov
xlat
push
orl
in
jg
incl
outsb
adc
sahf
cmp
dec
add
loop
jl
das
sub
xor
and
jb
jns
call
jb
sarb
aam
sub
sbb
ds
pop
bound
push
mov
jmp
pop
inc
mov
xchg
jg
repnz
lds
dec
dec
aaa
mov
push
or
dec
clc
pop
das
test
cmp
mov
gs
and
fs
add
aaa
outsw
adc
sbb
inc
pop
or
or
or
arpl
push
out
cmp
shlb
sti
jmp
inc
sar
xchg
incl
jle
in
scas
lock
dec
testl
jmp
push
mov
mov
or
lret
add
imul
xor
sbb
data16
add
icebp
movsw
add
inc
sub
rorl
pop
stc
or
gs
insl
sti
or
jge
jo
mov
ja
pusha
orl
inc
std
xchg
outsb
std
ret
mov
mov
out
pop
insb
pop
outsb
fistpll
cwtl
adc
adc
xchg
int
xchg
repz
push
repz
jb
sub
hlt
inc
clc
icebp
repnz
inc
cli
add
mov
jae
std
push
push
ljmp
mov
push
arpl
lods
cmp
xor
jns
ja
add
mov
std
mov
icebp
test
inc
or
stc
clc
outsl
fwait
jle
outsl
or
push
pop
dec
lock
push
bound
fucom
mov
loop
xchg
mov
rolb
sub
bound
mov
fnstcw
aam
shrb
mov
sbbb
js
icebp
sbb
add
xchg
das
sub
repz
dec
out
orb
int
outsb
aaa
in
pop
cmp
insl
cs
adc
sub
cmp
xchg
mov
in
pop
int
addl
leave
jge
movsb
loope
orl
sbbb
incl
xchg
vmovntdq
xchg
sub
and
mov
inc
aas
icebp
dec
sti
push
xchg
xchg
lods
std
or
sarl
dec
push
sti
stos
jne
jmp
ljmp
lock
add
add
aas
incl
xchg
mov
sbb
mov
jle
ret
cmp
pop
test
or
pop
in
call
stos
jnp
or
pop
pop
sarl
aaa
and
dec
dec
data16
test
int
hlt
mov
test
and
sub
push
dec
cld
mov
clc
cmc
add
lea
aaa
fsubrl
add
dec
xchg
in
pop
mov
mov
add
push
adc
std
pop
imul
xchg
xor
ret
test
inc
jmp
fisttpl
mov
or
sbb
pop
dec
pop
out
dec
mov
cmp
test
arpl
testb
les
adc
sub
cmp
jno
dec
repz
xor
insl
in
cmp
mov
xchg
and
in
fdivr
mov
add
pop
arpl
add
out
mov
and
or
push
push
movsl
outsb
pop
js
insl
test
cmp
pop
lret
dec
sti
out
mov
sub
xorb
mov
shl
test
mov
addr16
pop
in
das
mov
sar
jae
xchg
dec
and
pop
and
roll
popl
repz
iret
rolb
push
enter
call
mov
lock
xchg
sbb
cmc
mov
xchg
sbb
cld
idiv
mov
filds
cli
aas
add
movsl
je
cmp
dec
push
mov
xor
jge
jo
sbbb
stc
sub
xor
outsl
cmp
jl
lds
stc
pop
outsl
pop
loop
mov
dec
or
mov
adc
jg
add
mov
dec
jb
jl
or
imul
inc
add
cld
inc
call
mov
cmp
movq
lcall
push
and
sub
or
aaa
inc
push
jno
inc
cmp
enter
fisttpl
pop
insb
add
mov
push
push
shr
sbb
test
sti
adc
std
add
push
dec
push
in
ret
mov
test
adc
out
adc
fisttps
or
jno
inc
push
loope
rol
pop
mov
testl
std
sub
call
addl
inc
push
popa
jp
add
sbb
ret
std
jnp
sbb
pop
mov
cmpb
dec
data16
cli
or
ja
xchg
and
std
aam
add
push
dec
pusha
jns
aaa
dec
mov
jnp
or
or
std
out
test
dec
xor
push
clc
xor
xchg
push
mov
cmc
dec
dec
ljmp
popa
or
mov
clc
jo
adc
sahf
movsl
or
arpl
cld
insb
sbb
mov
lahf
mov
mov
lods
fildl
std
dec
aaa
sbb
daa
dec
std
push
sti
xor
ljmp
repz
decb
inc
and
sti
jo
or
or
fdivp
insl
and
sub
dec
pop
adc
stc
mov
xchg
sub
popf
arpl
push
mov
dec
or
cmp
inc
mov
push
jno
adc
mov
cld
int
cli
hlt
xor
mov
dec
das
mov
outsb
daa
sti
fdivr
flds
arpl
push
or
mov
pop
dec
out
push
out
cs
test
dec
out
cmp
imul
arpl
std
rorl
mov
push
out
mov
jo
xchg
xor
sarl
or
sti
clc
dec
popa
add
fbld
sahf
inc
cmp
in
pop
incl
pop
ret
mov
dec
gs
pop
insb
ljmp
orl
jns
or
pop
gs
pop
fadds
mov
cmp
aaa
mov
int
sub
lds
push
cmp
insl
mov
arpl
pop
mov
les
ds
jg
lock
addr16
xor
aam
jg
mov
sarl
dec
popf
int
cmpl
sub
xor
roll
add
add
xchg
add
jmp
cmp
pop
orb
sbb
rolb
dec
out
stc
in
int3
in
sbb
xor
xchg
outsl
fdivl
repnz
fldt
lock
aad
or
push
shlb
mov
push
add
cmp
test
clc
jg
scas
std
mov
add
in
jno
mov
test
aaa
icebp
mov
push
mov
lret
xor
out
je
jecxz
push
cs
jb
aad
jb
mov
xchg
stos
push
dec
icebp
mov
xor
std
test
imul
sub
loope
dec
xchg
or
insl
insl
dec
in
add
pop
out
sti
cli
xchg
clc
out
test
in
pop
mov
daa
dec
add
jo
dec
dec
mov
pop
call
cltd
incl
add
out
insl
jge
cmc
cld
pop
pop
addl
sub
adc
cld
jo
clc
dec
mov
cmp
inc
or
clc
bndstx
pop
mov
cmp
insb
pop
pop
jmp
dec
mov
sub
push
fcomip
xor
cs
das
mov
cmp
add
add
pop
pop
push
adc
addr16
cmp
cmp
push
cli
sbb
push
xor
test
jno
ret
pop
add
or
std
sbb
inc
mov
out
clc
movl
clc
sbb
pop
rol
dec
cmpl
or
mov
mov
push
jne
rorb
push
ja
out
dec
mov
mov
add
stc
ret
push
cmp
imul
inc
outsl
pop
sub
mov
add
pop
lods
in
cmp
sbb
pop
sub
dec
orb
fs
push
dec
cld
inc
add
xor
aaa
push
mov
pop
in
fucomip
mov
mov
call
imul
cmc
test
test
add
jecxz
out
fstpl
lods
jb
mov
lcall
fldt
scas
cmpb
insl
incb
pop
dec
cld
push
test
orl
add
lods
lds
adc
push
in
xchg
cmp
outsl
mov
xor
add
xor
test
pop
fistl
add
arpl
mov
adc
add
subb
inc
cld
test
xchg
xor
jno
mov
inc
or
jmp
mov
das
call
adc
jno
or
xor
jno
mov
test
add
mov
or
or
shlb
rcl
out
repz
push
dec
rcll
jae
sbb
jecxz
ljmp
pop
in
mov
mov
jg
cmp
jae
mov
sbbl
repnz
call
jl
outsl
sbb
stc
mov
sti
cmp
dec
xchg
push
in
pop
xor
or
inc
mov
sub
std
sbbb
lock
stc
jae
xorl
sbbl
fadds
fistpll
imul
test
adc
inc
imul
cld
sbb
in
xchg
mov
xorb
jg
leave
sbbb
jbe
addl
incl
inc
push
ss
jno
mov
inc
pusha
sbb
pop
sbb
std
out
repz
inc
fidivrl
lods
adc
jo
jl
sbb
mov
cli
decl
outsb
mov
testl
test
das
rcrb
dec
ds
fstpt
pop
adc
jbe
lret
stc
xchg
das
cmp
lret
cmp
dec
inc
sbb
test
xchg
ja
sbb
jae
fnsave
in
jg
sbb
jecxz
inc
sub
inc
jecxz
fldenv
pop
jb
leave
aaa
inc
into
inc
or
jl
push
cmpsb
clc
cmpsl
pop
jns
pop
popa
addl
push
test
sbb
xor
sub
in
xor
dec
xchg
fsubrp
aaa
mov
fcmovu
mov
push
in
ss
xor
sbb
shl
mov
mov
es
addr16
out
arpl
lods
mov
mov
push
std
ret
inc
hlt
xor
push
aaa
sbb
outsl
loopne
in
jb
dec
scas
test
sahf
lret
xchg
xchg
test
sbb
push
add
xchg
pop
fldt
jne
rorb
push
pop
xor
mov
cmp
in
addl
lcall
add
pop
adc
push
ljmp
sub
fistpl
shll
in
xor
or
sbb
xorl
adc
dec
ss
push
xchg
add
inc
sub
rol
mov
cmp
aaa
jo
push
cmp
mov
out
or
imul
add
outsl
add
cmp
fimull
outsl
jne
cmpb
lods
add
jecxz
aaa
sub
stc
mov
mov
repz
jne
sbb
decb
cmp
mov
pop
xor
ja
fsubrs
adc
data16
stos
dec
sbb
adc
jp
jnp
or
xor
clc
repnz
push
loopne
cmp
mov
or
jg
adc
xchg
or
imul
xor
push
jno
cmp
mov
sub
push
fucomip
stc
iret
gs
enter
stc
arpl
xchg
mov
clc
sub
addb
sti
bnd
sarb
cmc
xor
pop
mov
popa
popa
or
xor
pop
fcmovbe
add
mov
cmpps
or
add
or
cmp
out
xchg
xor
sarb
pop
mov
mov
adc
arpl
jb
dec
test
in
test
imul
add
neg
and
xor
jno
push
sar
dec
sbb
test
das
fildll
xchg
sub
jmp
ret
test
jno
xchg
inc
add
inc
pop
adc
js
add
cmp
mov
mov
push
xchg
testl
cmp
dec
xchg
aaa
xor
lods
ret
std
test
dec
add
mov
outsl
and
aaa
push
je
mov
test
dec
push
jmp
cmpl
dec
add
push
jnp
fistpll
push
mov
cmp
movsl
aaa
dec
lcall
test
in
test
cmp
insl
pop
xchg
lock
sbb
add
repnz
mov
inc
mov
push
test
or
pop
mov
fistps
das
mov
cltd
lcall
mov
jg
jmp
pop
mov
sub
and
jae
dec
cmpl
insb
or
movq
pusha
imul
aaa
insl
cld
outsl
sub
insl
fndisi(8087
and
fsubrl
insb
fistl
aad
addl
or
dec
xor
in
iret
fs
mov
cld
in
jno
cld
daa
clc
jae
dec
dec
or
xor
jmp
mov
jns
jno
adc
rolb
or
push
jmp
mov
jmp
push
sub
push
dec
addr16
int
das
iret
jno
xchg
std
xchg
sti
lahf
adc
fst
push
dec
arpl
shlb
lock
outsl
sahf
cld
lret
idiv
icebp
sub
add
fucomip
loop
jl
ja
data16
sub
xor
or
cmpl
dec
arpl
aaa
sub
das
std
push
mov
inc
rolb
sub
mov
mov
jae
subl
xchg
pop
mov
xchg
and
orb
rolb
decl
jnp
adc
stos
mov
and
fistpl
dec
addb
outsl
bound
mov
mov
jno
push
mov
icebp
mov
notb
mov
pop
and
sub
cmp
push
sub
jne
push
xchg
xor
pop
sbb
and
xor
sbb
jnp
and
push
movl
out
scas
sbb
jo
popa
add
pop
push
cmc
sbb
daa
sti
push
push
addr16
sub
dec
jg
sti
push
push
gs
in
xor
mov
jbe
inc
cmc
je
inc
repnz
jmp
xor
xor
dec
pop
ret
inc
aad
dec
sbbb
cmpb
mov
fisubl
jl
lds
das
dec
not
xchg
dec
dec
dec
lahf
out
jmp
mov
jnp
call
cmp
movsl
das
fwait
cli
dec
loope
mov
pop
sub
das
and
lea
popf
dec
mov
lret
push
xchg
loopne
rorb
dec
outsl
mov
incl
enter
pop
mov
cli
and
xchg
icebp
movsl
mov
orl
mov
push
xchg
add
int
movsl
clc
mov
and
in
inc
sub
mov
push
test
jmp
in
test
insb
out
dec
lods
in
fs
decb
push
pop
jno
add
add
addr16
push
mov
push
cli
addb
lods
shr
dec
mov
les
push
or
in
sub
addb
nop
xchg
lods
mov
in
dec
jp
mov
daa
mov
push
popf
movsl
ret
xchg
push
sahf
or
fstpt
mov
mov
mov
loope
jno
mov
out
sub
mov
xchg
imul
fstpl
jmp
xchg
lea
lea
or
push
mov
add
lret
out
xor
clc
add
loopne
int3
imul
adc
xor
addb
das
xlat
dec
pop
icebp
ja
out
pop
hlt
loope
dec
cmp
jno
inc
daa
push
outsl
pop
cmp
push
aaa
clc
imul
xor
cmpsb
mov
jb
mov
pop
das
pop
push
mov
jp
inc
cmp
imul
vdivss
dec
out
xchg
cmc
mov
add
xorl
pushf
movsb
in
lahf
jg
or
das
sub
push
dec
lahf
jg
stc
inc
jne
sbb
lret
adc
test
adc
daa
inc
icebp
stc
jecxz
fmuls
mov
push
adc
lock
fsubrs
jge
enter
or
data16
dec
jne
ss
and
loopne
jmp
sub
mov
clc
pop
dec
out
repz
out
clc
aaa
js
add
add
mov
lock
jno
adc
cmp
aaa
jb
sahf
in
or
loopew
fstpl
mov
add
cmp
fdivs
cltd
sbb
push
mov
js
and
int
loope
sub
mov
enter
nop
test
sub
incl
mulb
or
popa
aas
sub
push
sub
push
incl
insl
lcall
fs
push
das
mov
andl
mov
adc
lahf
shll
mov
roll
cli
out
test
stos
mov
and
inc
outsb
das
aaa
dec
jl
mov
cmpsl
cli
push
dec
xchg
mov
out
popa
out
inc
aam
push
jbe
fcmovnb
or
jge
add
lret
cmp
lahf
mov
xor
and
xor
fildl
add
or
jl
dec
xchg
in
das
outsl
xor
sub
push
dec
shlb
ds
or
dec
test
arpl
je
sub
inc
in
mov
mov
push
mov
int
cli
in
mov
das
push
dec
dec
leave
out
dec
in
sub
fwait
sbb
mov
dec
pop
xchg
xchg
push
dec
jg
loopne
sub
outsl
shlb
daa
push
loope
sbb
mov
loopne
or
push
add
das
repnz
jg
fisubrs
ljmp
push
pop
jge
mov
sti
add
mov
pusha
mov
add
loope
add
shll
jge
andl
push
sti
dec
adc
pop
or
sar
icebp
scas
fmull
xor
push
push
js
fs
xlat
arpl
mov
pop
jno
jb
insb
xor
loope
xchg
mov
addb
xchg
jp
add
pop
out
add
add
test
outsb
gs
cvttps2pi
xor
mov
inc
or
jl
decl
shll
bound
and
push
testl
mov
mov
pop
imul
lcall
adc
in
dec
cmc
hlt
push
mov
push
outsb
mov
dec
lods
xchg
cmp
push
cmp
push
mov
or
cmp
add
mov
mov
test
push
jge
rolb
mov
pop
mov
mov
sub
xor
jle
in
add
rcll
mov
jmp
test
aam
jge
push
or
add
pop
arpl
ffreep
push
xorb
repz
repnz
push
ja
std
dec
push
fs
imul
imul
xor
push
lods
pop
pop
or
cmp
sbb
clc
xchg
sbb
inc
adc
mov
insb
push
call
insl
shrb
cmp
call
aaa
aaa
imul
cmpl
pop
push
mov
test
jl
xchg
movsl
sbb
jno
insb
mov
daa
and
adc
or
mov
or
push
mov
out
lds
sub
mov
mov
fldl
popf
jns
mov
xlat
add
mov
cli
adc
cmpb
mov
das
je
popa
mov
flds
rorb
in
outsb
xchg
jge
jnp
xor
lods
and
int3
push
or
mov
subl
dec
pop
xchg
push
mov
dec
jne
jl
and
ja
push
clc
push
cld
pushl
mov
jne
adc
movsb
bound
pop
and
and
mov
sub
push
add
out
sub
lds
push
movsl
test
mov
dec
push
popa
xchg
sbb
sbb
imul
mov
sub
sub
testb
je
dec
dec
dec
mov
push
js
adc
imul
test
lcall
in
push
or
add
scas
dec
push
pop
pop
rcr
add
ja
or
and
in
xorb
add
xchg
mov
xor
fisttpll
push
loop
mov
sub
mov
mov
add
mov
jg
adc
mov
push
xchg
mov
inc
push
or
sub
adcl
fbstp
push
mov
rcll
dec
fsubrs
ja
inc
jge
in
dec
sti
iret
pop
xchg
out
stos
add
mov
popf
in
xchg
lock
enter
dec
in
and
cmp
in
sti
leave
dec
mov
shll
in
mov
or
pop
loop
push
outsl
jne
daa
mov
aas
add
jo
cli
jo
push
fildll
cltd
push
stc
daa
shrb
outsb
dec
jb
cltd
test
push
stc
xchg
jnp
sub
in
and
jae
inc
add
shr
push
pop
je
insl
insb
or
cmp
aas
add
lret
je
adc
xchg
stc
mov
ret
jl
xlat
xor
data16
pop
std
adc
stos
pop
test
xchg
mov
fwait
loop
mov
subl
push
arpl
fucomp
loopne
les
inc
imul
mov
mov
adc
sahf
mov
loopne
pop
cmc
insb
iret
jnp
fistl
sub
sbb
cld
jg
gs
or
test
aad
mov
jg
sbb
push
arpl
dec
mov
out
sar
push
pop
push
and
mov
and
mov
sub
xchg
imul
adc
mov
push
jns
insb
push
or
jle
mov
insl
stos
outsl
cmp
add
push
dec
arpl
outsl
sub
add
sub
and
push
outsb
mov
jge
out
hlt
push
clc
jecxz
cld
out
rcrb
in
idivl
mov
mov
cmp
in
clc
sub
in
in
xchg
pop
dec
mov
and
xor
jmp
stc
push
pop
cs
pop
jno
adc
pusha
lds
sahf
sub
movsl
out
or
mov
test
push
push
sbb
shrb
jmp
shll
push
xor
inc
adc
fucom
or
add
push
or
add
jnp
lods
ficoms
rorl
into
outsb
cmp
mov
pop
loop
incl
jle
jo
push
mov
lock
fxch
and
daa
jmp
dec
mov
test
and
enter
insl
dec
cmpb
lahf
pop
call
mov
jg
mov
sbb
sbb
jp
pop
fwait
call
insl
lret
add
or
mov
rcl
push
cmp
les
inc
or
mov
lret
arpl
sahf
mov
xor
push
dec
cmp
cmp
xlat
xor
jno
push
les
dec
aaa
add
mov
lock
add
and
scas
inc
btr
insl
mov
sahf
lock
stc
iret
xorl
mov
into
sub
or
jge
int
push
scas
lds
jg
sub
pop
in
cmpsl
cmp
lahf
and
movsb
test
out
loopne
lock
push
pop
clc
adc
std
push
imul
outsb
xchg
test
jne
xor
bound
adc
jae
jecxz
in
fnstcw
mov
ss
mov
pop
sbb
sub
clc
sbb
jp
cmc
dec
jno
adc
lret
aas
fcmovnu
pop
call
jg
add
pop
mov
out
mov
sti
in
cmpsl
addl
cli
test
lods
or
add
adc
in
inc
rol
out
test
lahf
push
cmp
psraw
repz
cld
hlt
sbb
jbe
inc
jmp
xor
jle
fsubrs
dec
add
mov
int
addr16
mov
sub
mov
mov
xor
stos
sub
pusha
jno
fwait
sub
mov
add
push
divl
mov
insb
pop
fnsave
mov
das
add
out
push
mov
out
push
add
rcll
pop
fst
call
push
aad
push
aad
adc
cmp
or
roll
add
ret
push
loopne
and
jmp
push
sub
xor
mov
aad
cmpsb
fdivrp
jno
dec
push
sbb
xor
dec
add
andl
jb
clc
push
xchg
mov
das
push
or
rolb
mov
xor
in
push
sbb
inc
fwait
addr16
push
sbb
rcll
cltd
test
cmp
popf
jmp
pop
outsb
mov
sbb
icebp
test
push
inc
and
cmc
fcompl
adc
and
pop
sbb
xchg
pop
movsb
cmpsb
cmp
mov
mov
cmp
mov
xchg
mov
sbb
or
push
cli
jg
cmpsl
repnz
mov
repz
sbb
dec
daa
mov
pop
sbb
gs
add
mov
cmp
add
dec
imul
test
sbb
dec
jo
add
push
addl
pop
stos
test
sbb
xchg
repz
insl
stos
adc
push
cltd
and
mov
test
fucomip
pushf
cmc
insl
sarl
xlat
fisubrs
stc
popf
add
in
lret
lahf
cld
dec
push
das
mov
mov
add
ret
push
scas
bound
lods
cli
lods
ret
js
pop
in
mov
orb
inc
cmpl
loop
jne
pop
add
cmp
pop
lahf
lret
stc
push
test
add
orb
sbb
aas
push
inc
out
and
xchg
mov
cmp
mov
popf
add
xchg
dec
and
xbegin
sub
loope
adc
xor
dec
lea
jno
shrl
mov
mov
mov
test
dec
hlt
cld
lret
mov
cmp
sbb
xor
sub
dec
mov
test
adc
dec
sbb
mov
mov
cmp
mov
lcall
addr16
das
push
loopne
bound
and
mov
fwait
mov
ja
cltd
jg
xchg
cmp
fidivs
test
mov
dec
or
cmc
mov
xor
push
sub
insl
mov
or
std
das
xlat
call
lret
xchg
cld
cltd
aaa
jle
xchg
add
cmpsb
dec
sbb
and
push
mov
mov
xor
sub
pop
in
sbb
adc
xor
jne
inc
arpl
pop
push
mov
dec
outsl
lock
mov
arpl
clc
cmpsl
xor
fsub
decb
movb
lock
dec
adc
clc
arpl
bound
ljmp
movsb
test
stc
cmp
inc
mov
js
jl
call
xchg
arpl
jns
xorb
icebp
inc
jge
roll
lcall
test
orl
xchg
lret
lea
and
ja
sbb
mov
fucom
icebp
sbb
popa
xchg
jae
xchg
mov
hlt
or
jb
stos
mov
in
and
sti
jg
pop
push
call
push
xor
or
mov
mov
or
mov
addr16
adc
push
mov
push
pop
push
out
call
inc
lea
faddl
dec
push
jb
adc
mov
idivl
cmp
sub
lea
sti
mov
or
mov
ja
cmp
xchg
clc
or
test
mov
lock
adc
cltd
aad
add
gs
or
iret
mov
fiaddl
test
cmp
mov
loopne
mov
add
test
arpl
gs
or
gs
mov
inc
pop
loopne
add
test
fsubs
out
add
adc
mov
adc
addb
xor
pop
jge
pop
lea
inc
inc
jno
out
std
inc
in
and
outsl
xchg
pop
jge
jno
push
test
xchg
hlt
add
or
insl
cld
cmp
test
jns
hlt
adcb
jge
aaa
mov
arpl
loopne
sub
clc
dec
jmp
stc
std
jle
dec
icebp
lcall
dec
or
mov
test
dec
gs
dec
sub
dec
negl
fists
mov
mov
cmp
and
mov
lock
shrb
adc
cmpl
mov
popa
push
adc
mov
das
dec
dec
gs
xchg
in
imul
repz
lds
mov
out
int
mov
push
sbb
mov
sti
inc
out
xchg
jle
jle
loop
in
adcb
test
cmp
fildll
mov
jne
sub
pop
mov
fistpll
daa
push
adc
mov
inc
xchg
push
movsl
out
or
push
std
mov
in
clc
rorb
lds
filds
mov
xchg
jecxz
sti
dec
out
pop
fyl2x
scas
fstl
gs
sub
sub
popf
push
insl
std
mov
loopne
sub
aas
imulb
sbb
fcoml
xchg
stos
jge
out
hlt
stc
xchg
repz
push
push
mov
or
sub
mov
rclb
push
daa
ja
aas
in
adc
add
pop
mov
sub
pop
xor
or
add
dec
and
push
pop
fs
aad
xchg
mov
add
pop
mov
iret
in
faddl
xor
pop
clc
out
and
xchg
insb
push
test
in
xlat
add
or
dec
lds
ss
aad
loop
das
xorb
push
or
mov
movsl
pop
das
mov
cmp
mov
shr
cmp
sbb
lahf
shl
lahf
imul
mov
mov
orb
pop
cmpsb
add
add
add
mov
out
aaa
pushf
ret
cwtl
mov
pop
mov
iret
pop
mov
or
pop
xor
imul
std
test
icebp
mov
ljmp
xchg
in
adc
xor
repnz
orl
fsts
cmovle
push
pop
shll
xchg
into
adc
out
jo
daa
call
adc
rclb
sbb
fsubl
pop
xchg
out
test
sbb
fdivs
adc
fsubrl
cld
stc
adc
pop
cmp
sbbl
inc
pop
mov
add
leave
enter
cld
inc
leave
enter
clc
mov
sbb
mov
or
mov
clc
xchg
loope
mov
in
scas
mov
loopne
mov
aam
mov
enter
in
aam
out
push
xor
shrb
leave
int3
cwtl
orl
mov
in
out
stc
push
xor
and
scas
test
clc
rcll
mov
cmc
sbb
dec
cmpsl
adc
call
xchg
hlt
dec
adc
pop
jmp
pushf
push
cld
out
push
jb
push
xor
adc
enter
push
in
repz
bound
in
stc
xorl
test
in
dec
repnz
cmp
notl
xchg
cmp
pop
mov
add
xorl
or
imul
xchg
inc
pop
sub
xorl
lret
test
push
scas
jae
shrl
cld
out
adc
jmp
aam
dec
iret
test
sbb
jmp
dec
cmp
fimull
or
or
push
sti
push
sub
mov
mov
mov
mov
les
xor
add
cli
pop
cld
push
addl
or
inc
mov
clc
outsl
push
loop
xor
popa
iret
test
addb
add
idivl
mov
cmpsl
xchg
rorl
jle
push
pusha
jno
xor
cmp
hlt
lcall
cmp
xor
mov
push
test
mov
pop
outsb
insb
orl
addl
add
test
adcb
mov
add
inc
test
adc
inc
xor
js
push
mov
pop
addl
pop
cmpl
and
fwait
mov
data16
sti
divb
or
jmp
aaa
mov
out
test
cmp
sti
jne
fcomip
outsl
inc
cmpsb
adc
cmp
outsl
dec
cld
outsb
cmp
sbb
das
cli
repnz
jb
daa
popa
push
xchg
fwait
mov
aas
and
push
adc
cs
aas
cmp
insl
and
lcall
hlt
dec
or
add
iret
push
mov
inc
add
jne
and
nop
sar
inc
sub
jmp
and
and
and
and
sbbb
rcr
lret
test
dec
fsubrl
fnstcw
test
add
aas
jmp
fxam
cld
lods
inc
cmpsl
mov
lds
push
sbb
pop
sub
jge
jne
dec
imul
popf
adc
add
mov
mov
cmp
add
mov
jmp
sti
add
cmp
push
inc
mov
lret
sti
sub
test
pusha
cmp
fists
loopne
dec
mov
stc
lds
lcall
lds
inc
jmp
mov
inc
repz
cvtdq2ps
and
lea
xchg
jmp
repnz
out
loope
jns
aaa
pop
aas
dec
adc
or
add
popf
xor
inc
test
add
xor
adc
popf
xchg
inc
jb
xor
cmp
mov
adc
in
int
push
xchg
out
push
in
adc
int
cmp
xchg
dec
clc
inc
xor
xchg
inc
pop
push
pop
bound
jp
add
inc
add
xor
cmp
dec
daa
lds
jno
and
xor
fucomip
sbbb
inc
out
jo
lahf
loope
dec
data16
nop
subl
inc
dec
arpl
mov
mov
pop
ja
sar
incl
sbbb
pop
clc
jg
inc
cmp
push
js
xor
cmp
sti
mov
or
and
dec
or
scas
les
cmpb
dec
add
out
sbb
mov
jge
inc
out
adc
inc
sbb
bound
fisttpl
les
dec
aas
adc
insl
out
cmovbe
dec
add
mov
cmpl
jne
xchg
fwait
fwait
out
dec
bound
sti
sub
cmpsl
and
popf
inc
push
std
outsb
add
push
invd
mov
das
push
pushl
mov
ss
mov
jnp
or
fsubr
jecxz
sarl
popa
push
mov
cmp
dec
aaa
or
in
div
dec
insl
pop
enter
inc
sti
clc
testl
call
in
push
jno
xchg
push
lds
enter
setne
outsb
ljmp
pop
add
sbbb
adcl
pop
ret
push
test
push
inc
mov
call
pop
mov
insb
test
cmp
pop
popa
jb
lods
daa
inc
sbb
mov
sbb
add
in
xchg
push
sbb
clc
je
aad
or
xchg
or
je
test
flds
xchg
and
lock
and
push
add
and
inc
xchg
outsb
cmpsb
fs
xchg
sbb
pushl
mov
jl
dec
cmp
xchg
push
lock
stc
mov
adc
ss
popf
popa
jne
fabs
or
icebp
ja
or
jl
or
cmp
jp
sbbl
and
push
jp
pop
pusha
sti
xchg
jmp
pusha
test
cld
setne
aas
jns
mov
sbb
or
mov
or
call
xchg
pusha
or
sbb
xor
dec
into
arpl
push
mov
mov
ja
repz
mov
dec
push
mov
loopne
lret
push
pusha
mov
inc
call
dec
fs
sub
mov
or
jg
cmp
sbb
pop
push
dec
push
das
orb
cmp
dec
mov
pop
push
xchg
dec
std
rclb
ljmp
adc
dec
popa
enter
cmc
aas
lds
xchg
push
shll
add
insl
loope
insb
add
pop
aaa
push
dec
sub
cmp
xchg
and
pop
add
xchg
mov
mov
inc
mov
stc
loope
lock
xlat
pop
imul
cmpl
add
pop
std
jge
or
pop
sub
test
pop
sbb
nop
mov
ljmp
sbb
inc
pop
aas
xchg
xchg
pop
xor
jmp
add
xchg
push
pop
push
mov
clc
add
push
filds
or
sbb
loop
decl
les
leave
mov
or
loope
or
inc
or
mov
push
or
jmp
sbb
daa
push
sbb
pop
and
sbb
daa
jae
add
push
arpl
pop
cmp
outsl
rorl
lret
mov
inc
jo
pop
dec
mov
cmc
addl
pop
inc
out
addr16
add
inc
lock
add
call
aas
in
or
adc
ficomps
pop
mov
mov
add
decl
jge
shll
in
cs
in
or
mov
add
arpl
daa
mov
cld
dec
xor
in
mov
cmpsl
cmp
std
addl
aam
aad
jne
insl
dec
lods
mov
outsl
pop
neg
fisttpll
sub
add
jns
pop
clc
test
pop
shr
sbb
mov
or
shll
push
icebp
das
lock
gs
ret
fidivl
xor
pop
xor
fdivrl
pop
adc
fldl
sti
incl
push
jl
add
clc
inc
push
jnp
push
cmp
out
pop
push
std
mov
or
lahf
aaa
inc
or
inc
xor
call
fildll
sub
dec
test
insl
push
and
pop
outsb
frstpm(287
ficoml
enter
dec
sti
das
movb
push
fiaddl
dec
cld
mov
mov
jnp
sti
sar
in
or
aam
loope
jne
rorw
cmpsb
jbe
test
xchg
xchg
sbb
lret
or
push
mov
loope
rep
stos
mov
adc
jb
pop
fdivrp
in
lds
add
imul
lods
test
pop
jno
or
add
dec
mov
out
mov
enter
cld
insl
dec
in
out
cmpsb
push
jne
jno
push
cld
xor
xor
or
mov
es
jle
arpl
xor
aad
movsl
jmp
sbb
inc
sub
mov
idivb
sbb
xchg
inc
hlt
imul
hlt
pop
adc
rclb
mov
add
insb
lods
out
xor
pop
jmp
test
cmc
data16
push
adc
leave
mov
pop
adc
outsb
lret
pop
add
mov
pop
andl
pop
out
in
fcomi
pop
call
pusha
sbb
xor
pop
in
in
pop
es
flds
xchg
push
cli
bound
fldl2t
pop
aas
sar
mov
cmp
push
in
xchg
cmpsb
call
popa
pop
add
xor
pop
stc
aas
xchg
pop
and
lret
repnz
stc
pop
ret
cs
movsb
decb
scas
cmp
popa
or
xor
in
cld
mov
mov
lock
pop
push
and
lods
jno
fistps
pop
idivl
popa
add
shlb
mov
and
outsb
stc
int
add
daa
iret
add
inc
xor
jp
xor
or
add
enter
mulps
in
shr
mov
bnd
and
and
int3
in
or
inc
rolb
cmp
jg
push
push
std
data16
ficompl
mov
call
ss
sub
out
and
or
popl
lret
mov
mov
add
pop
inc
pop
cwtl
insb
xor
pop
cmc
aas
fs
push
mov
fbld
ds
pop
xchg
or
call
mov
in
add
pop
xor
data16
mov
int
aas
or
mov
xchg
xlat
ss
adcb
inc
xor
inc
xchg
xchg
push
dec
sub
cld
psubsw
out
push
data16
inc
mov
sti
out
sti
pop
pop
pushf
push
insl
int
icebp
icebp
stc
int
pop
hlt
in
aam
add
push
shlb
gs
arpl
in
fistl
pop
in
cli
clc
gs
iret
push
insl
test
mov
cli
cmpsb
xlat
inc
insl
mov
fsqrt
xchg
jnp
lret
pop
dec
mov
xchg
aas
leave
or
push
push
into
ja
jae
cmp
insl
lret
inc
mov
fsubrs
stc
negb
loope
add
mov
pop
in
movsb
jns
add
sub
or
in
rorl
out
mov
push
test
insl
xor
aam
mov
test
pushl
int
rclb
ret
jg
and
mov
sti
loope
popf
in
pusha
ficoms
cmc
xchg
decb
divl
sbb
loopne
lods
repnz
dec
jns
jmp
mov
inc
mov
add
cmp
jg
addr16
add
test
xchg
sti
daa
cmp
mov
lods
jmp
pop
add
loope
xor
add
mov
arpl
pop
and
js
pop
mov
add
sar
cli
mov
lret
out
pop
mov
or
sub
fs
repz
pop
add
sbb
push
aaa
das
fs
adcl
ja
pop
and
jmp
mov
lods
sbb
out
gs
andb
aaa
xchg
leave
loop
cmc
data16
or
aaa
mov
mov
popf
or
movb
fnstenv
ret
in
push
out
imul
icebp
aas
dec
fistps
sub
rolb
jmp
mov
mov
cmpsl
pop
inc
ss
cld
cmc
pusha
mov
add
lret
scas
push
sbb
test
clc
decl
sub
out
cli
inc
or
pop
cld
pop
sbb
rcll
sbb
pop
push
push
test
hlt
and
adc
sbb
mov
dec
sbb
sub
adc
test
shr
outsl
adc
adc
sbb
fldl
out
cld
sbb
pop
pop
xchg
cli
dec
dec
dec
or
dec
or
inc
adc
cltd
dec
imul
or
adc
ds
add
in
inc
sbb
fadds
pushl
mov
pop
pop
imul
mov
pop
xor
and
call
adc
inc
sbb
rcr
add
pushl
xor
loop
push
pop
lahf
dec
push
dec
push
hlt
lock
mov
enter
push
sub
or
rclb
lods
xor
or
pop
mov
pop
jnp
or
sar
dec
mov
enter
add
call
jle
pushl
cmc
push
inc
adc
test
cmpsl
std
orb
sub
mov
mov
mov
jecxz
test
xchg
mov
jnp
add
daa
fdivr
mov
inc
cli
jb
mov
loopne
push
xor
outsb
or
push
and
mov
fldenv
xchg
sbb
inc
jge
add
mov
addr16
aad
outsl
js
pop
xchg
in
test
pop
test
push
sarb
test
pop
mov
pop
jg
or
mov
cmp
pop
adc
sub
rolb
add
sub
push
mov
dec
push
cmpb
in
push
mov
inc
push
orl
clc
inc
push
mov
cmp
xchg
fistpll
push
mov
outsb
fstpl
cmp
push
rcrb
inc
out
loopne
hlt
push
stos
or
jp
loopne
push
shlb
jle
roll
push
pop
hlt
fcoms
and
push
xor
out
aam
stos
xchg
xor
xchg
add
or
aas
inc
inc
jnp
or
fiadds
jns
hlt
std
popa
inc
sbb
int3
test
ja
aad
add
pop
lret
sar
lret
xor
inc
mov
dec
push
jp
loop
pop
mov
in
xchg
and
insl
mov
and
pop
push
shll
xor
adc
xchg
mov
pop
pop
aad
bound
push
ljmp
mov
add
and
out
movsl
bound
mov
mov
and
push
sti
adc
mov
pop
lret
mov
repz
jae
add
jecxz
pop
push
mov
inc
call
nop
mov
movsl
push
sti
aaa
movsb
xchg
addr16
iret
stc
push
sbb
imull
addr16
add
js
jno
das
push
cmc
cmc
test
mov
lock
jle
das
cmp
addb
das
or
mov
pop
jg
out
std
dec
test
test
jp
stos
clc
jae
jne
or
int
xorb
in
cmp
lock
out
sbb
add
stc
push
ljmp
pop
iret
inc
movsl
bound
push
out
push
push
loopne
nop
cld
push
jo
push
jle
push
dec
add
mov
mov
cmpsb
pop
call
push
in
add
pop
xorb
jno
pop
cmpsl
xchg
mov
jnp
out
cs
jno
daa
loopne
test
fwait
add
rorl
xchg
cmp
popf
fdivr
xor
stos
pop
mov
es
xor
sbb
clc
jge
in
fdivrp
sub
or
xor
outsl
or
lahf
in
sti
fstpl
adc
loopne
cmp
adc
in
sbb
call
jl
mov
jp
mov
daa
stos
mov
mov
adc
inc
xchg
testl
movsb
mov
sub
xor
daa
xlat
insb
xor
shrb
xchg
les
imul
inc
cmp
inc
jl
sbb
mov
mov
inc
std
or
add
inc
cmp
test
fucom
xorb
jecxz
popa
cmp
roll
inc
push
dec
lods
pop
stc
roll
inc
xchg
cmp
inc
outsb
mov
dec
push
or
adc
adc
jns
sbb
pop
lea
data16
push
pop
addl
sub
sbb
insb
arpl
xchg
inc
je
inc
ljmp
outsb
hlt
jg
sub
call
sti
jl
arpl
in
and
cli
jno
mov
and
mov
xor
mov
cmp
dec
dec
dec
fs
push
xchg
sub
shrl
shll
cli
test
mov
mov
pop
xchg
clc
jmp
cmc
pop
sti
aam
mov
cld
sbb
xlat
sub
sbb
aas
jns
jo
add
push
popa
mov
outsb
cmp
inc
insl
xor
jg
lret
cld
inc
arpl
mov
xchg
clc
cmc
arpl
add
dec
mov
mov
sub
dec
out
cmp
in
ret
lret
dec
cmp
mov
add
loope
and
dec
jge
push
clc
mov
cmc
insb
ljmp
or
add
dec
xorb
add
or
sbb
pop
mov
push
rcrb
pusha
popf
pop
jae
ljmp
fabs
mov
js
in
mov
sbb
mov
mov
ss
xchg
xor
sti
or
mov
out
add
cwtl
and
rorl
push
sti
pushf
mov
mov
pop
jg
cwtl
and
mov
xor
not
fnstsw
daa
pop
push
jmp
fwait
inc
loopne
mov
or
clc
aaa
in
imul
mov
sti
into
inc
jnp
add
and
outsl
sbb
mov
mov
dec
test
push
add
push
mov
andb
mov
sub
jnp
jno
cwtl
fwait
inc
pop
ret
insl
jo
push
dec
push
clc
into
push
push
dec
out
push
aas
adc
std
out
dec
push
dec
mov
adc
movsb
test
sub
mov
xor
mov
hlt
jno
jl
pushl
push
dec
push
in
or
or
inc
loope
iret
adc
sbb
enter
daa
repz
clc
push
mov
clc
insl
add
leave
lret
adc
push
cmp
loop
inc
in
add
or
mov
ficoml
mov
add
pop
shrb
movsl
push
xchg
call
je
cmp
fwait
icebp
enter
fists
iret
call
pushf
sub
xlat
xor
adc
call
popf
out
cmp
fnstcw
jns
push
out
pusha
loop
cmp
ret
movsb
xor
fadds
or
aad
xchg
lret
in
and
js
jne
js
mov
xchg
ja
fldenv
in
add
cs
lret
in
jns
adc
jae
jbe
fwait
cmpsb
pop
lret
std
je
xor
jb
sbb
jne,pn
cmp
pop
jbe
shll
push
add
cmc
jb
jne
in
mov
mov
mov
imul
cs
lahf
dec
js
jns
ja
jnp
lcall
cmp
adc
pop
mov
adc
xor
jnp
jge
in
mov
cmpsl
jl
jp
xchg
pop
leave
xor
mov
mov
jle
dec
ja
iret
daa
xchg
jmp
cmp
cmpsb
imul
jnp
sbb
sbb
je
gs
xchg
lret
lods
jo
inc
jbe
jbe
fwait
shll
jne
fldenv
jmp
pushl
daa
ja
jmp
fdivl
fidivrl
jl
pop
jle
arpl
fsubrl
jg
or
idivl
js
adc
add
shll
xor
ja
insb
xchg
or
jns
jb
mov
lcall
jb
shrl
lds
aas
mov
push
sbb
cs
push
and
xchg
fistpl
dec
add
call
pop
push
popa
and
dec
lock
add
repz
pop
cmp
insb
leave
enter
xchg
fldl
xor
enter
add
xor
push
sbb
nop
or
sub
and
test
jae
lret
cmp
cmp
xor
adc
and
push
insl
dec
jae
js
ss
dec
jbe
das
jne
jns
pushl
lret
lret
adc
xchg
xchg
pop
sahf
mov
jmp
xchg
in
lcall
mov
gs
and
insl
sbb
xor
lods
jns
adc
imul
adc
insl
lcall
cmp
in
mov
fwait
outsl
test
mov
int
imul
shrl
je
sub
ds
xor
pop
jo
in
imul
movsb
xchg
sahf
insl
lcall
ja
ja
jb
fcompl
out
js
jp
imul
js
cmp
jnp
jmp
in
jns
jp
jl
lds
lcall
jecxz
pop
cs
icebp
stc
jle
ja
cmp
dec
shll
xchg
lea
subl
imul
inc
push
cmpsb
aaa
xor
sbb
outsb
int
fsts
cmp
je
aas
js
dec
mov
dec
jo
popf
lods
mov
sub
scas
pop
int
daa
jmp
jne
mov
dec
fsubrs
jno
jmp
rcl
shll
das
add
or
cmpsb
imul
add
cli
test
insb
xor
jns
mov
ss
jmp
fidivrs
xchg
sbb
xor
push
inc
jge
adc
clc
cmp
imul
pop
insb
popa
fs
cld
gs
cmp
pop
dec
dec
fs
push
outsb
bound
xor
cli
inc
outsl
ds
pop
push
pop
pop
popa
dec
insl
outsb
inc
add
idivb
stos
std
cmp
bound
push
pop
jo
pop
call
inc
pop
insl
aas
imul
bound
addr16
cmp
outsl
insb
pushl
push
pusha
insb
ja
imul
cmp
std
idiv
push
xor
inc
pop
bound
pop
xchg
ljmp
add
pop
pop
inc
gs
outsl
pop
jno
aas
out
icebp
imul
pop
push
push
popa
test
pop
push
jnp
subl
data16
in
pop
movsb
dec
aas
gs
pop
fs
or
bound
addl
jmp
inc
jae
insb
bound
jne
pop
push
push
aas
xchg
mov
jo
fs
insw
pop
jo
imul
jg
push
pop
gs
outsb
imul
pusha
push
xchg
movsb
decb
lods
insb
outsl
pop
aas
imul
fildl
inc
pop
imul
imul
jg
insb
pop
sub
inc
arpl
pop
outsl
jo
imul
aas
outsl
jg
clc
lret
pop
pusha
inc
outsb
pop
push
ds
ja
imul
cld
fsubrs
dec
pop
push
inc
jno
stc
inc
push
push
lock
mov
orl
mov
loopne
bound
cs
push
pop
pop
cmpsl
push
daa
or
mov
outsb
xchg
dec
inc
pusha
cmp
jno
xor
nop
in
insb
aas
arpl
insl
insl
popa
je
inc
dec
inc
mov
or
ds
das
das
and
jo
imul
addr16
je
mov
insl
inc
dec
fldl
inc
pop
imul
dec
outsl
addr16
popa
insb
pop
ds
push
ficompl
insl
pop
loop
cld
and
pop
jnp
sti
cmp
lahf
push
and
mov
pop
jb
jb
push
xchg
scas
fs
clc
insl
inc
arpl
adc
into
std
adc
cmp
imul
outsb
sub
push
inc
imul
mov
mov
cli
in
shrb
je
push
push
rcrl
add
pusha
outsl
shll
bound
push
imul
and
fdiv
mov
popfw
push
fs
sar
jo
jg
shll
clc
dec
dec
inc
dec
sub
daa
bound
or
std
cmp
cmp
dec
pop
jmp
sub
mov
cmp
aas
arpl
or
xor
jno
and
jo
pop
push
aas
insb
sbb
pop
dec
jg
test
data16
outsb
jno
inc
data16
pop
jno
lahf
dec
inc
cmp
inc
inc
cmp
std
insl
mov
dec
arpl
bound
xor
push
pop
xor
or
dec
xor
lea
mov
mov
pop
arpl
xchg
push
sbb
mov
jg
push
sbb
subb
addr16
push
mov
pop
aad
outsb
popa
mov
sbb
fs
inc
xor
sub
inc
push
ds
dec
sub
mov
jmp
mov
push
fdiv
push
pop
je
shll
arpl
in
fidivs
pop
fs
fdivr
adc
outsl
popa
inc
fcmovu
sbb
push
pop
push
insb
ds
idiv
cltd
add
inc
imul
aas
pop
cmp
imul
sub
in
mov
je
push
jno
inc
jno
mov
scas
test
dec
das
pop
sarb
imul
adc
outsl
and
pop
ficomps
cmp
pop
inc
pop
ret
dec
data16
fdivl
mov
arpl
sbb
cmp
cmc
cld
sub
inc
fidivrs
jmp
aam
sbb
gs
pop
fnsave
pop
dec
daa
shll
jb
mov
cmp
cmp
clc
cmp
sub
sti
dec
lcall
or
aas
dec
aas
inc
cmp
inc
ljmp
cmp
jo
shll
pop
fcmovu
mov
cmp
push
lds
imul
insb
and
pop
aas
cmp
pop
movsl
xor
fsubrs
arpl
sti
cmp
insl
outsl
sbb
daa
jo
cmp
pusha
test
mov
sub
pop
inc
das
mov
or
ljmp
mov
imul
insl
pop
mov
aad
mov
adc
cmp
into
cmp
inc
cmp
shl
outsl
add
aas
sub
pop
dec
push
pop
ja
test
cmp
fildll
mov
cmp
cmp
pop
or
fcomps
aad
sub
mov
popf
std
lods
push
xchg
mov
cmp
push
fstl
imul
aas
insb
jb
cmp
dec
cmp
sti
lea
mov
sub
cmp
ss
imul
pop
cs
aas
insl
pop
push
icebp
sbb
in
or
pop
pop
push
imul
push
cmp
bound
outsl
push
pop
rolb
jnp
outsl
jb
inc
cmp
dec
lea
xlat
ds
jg
adc
sub
or
lahf
dec
inc
inc
hlt
lea
inc
cmp
xchg
sub
pusha
outsb
mov
mov
pushf
pop
popa
mov
cmp
push
ja
mov
aaa
sub
pop
aas
push
pop
pop
outsl
out
pop
sbb
cmc
mov
cmp
push
arpl
jg
fbstp
test
inc
cmp
incl
in
test
inc
push
push
cmp
sub
pop
or
push
dec
push
ja
sub
mov
cmp
arpl
mov
push
adc
and
fwait
daa
dec
jo
cmp
mov
pop
mov
inc
inc
dec
inc
dec
out
stc
imul
mov
imul
xchg
mov
fstpl
jle
arpl
ss
and
mov
mov
lock
mov
sub
mov
pop
inc
push
popa
arpl
push
or
mov
loopne,pn
dec
aas
push
aas
test
jp
fadds
inc
jo
pop
mov
data16
out
lea
sub
insl
jo
mov
fcmovnu
insl
mov
clc
mov
bound
mov
or
scas
adc
or
test
mov
repnz
sti
dec
dec
dec
aas
dec
push
and
ss
dec
cld
pop
pop
xor
inc
jge
pop
or
pop
popa
xchg
jg
call
jno
in
xchg
xchg
sbb
fs
inc
test
outsl
mov
xor
daa
pusha
popa
aad
testb
pop
mov
cmc
fsubrs
stc
sar
movq
out
lds
jecxz
loope
int
decb
xchg
idiv
adcb
repz
or
jle
and
xor
cli
add
or
add
fwait
cmpsb
shl
pop
pop
push
inc
shrl
pop
daa
pop
lea
popf
mov
cs
gs
jge
lret
jl
pop
sbb
ss
mov
xor
arpl
js
xor
mov
cmpsl
in
repz
lret
jle
jg
add
aaa
pop
fidivs
std
add
cmc
repnz
data16
std
push
insb
lret
in
outsb
gs
cmp
imul
fdivr
jb
push
add
cmp
mov
cvtps2pd
push
inc
push
arpl
add
push
jne
dec
inc
mov
adc
inc
push
cli
outsl
xor
gs
testl
mov
jo
mov
in
push
outsl
sub
sub
aas
aas
xchg
leave
sbb
jne
imul
lods
je
pop
clc
inc
outsl
std
dec
or
dec
call
dec
push
or
push
pop
sbb
outsl
lea
mov
jbe
add
xor
mov
push
cmpsl
jns
sbb
push
iret
pushf
xchg
pop
jbe
jne,pn
fs
bound
imull
jbe
lret
push
loope
pop
dec
jae
aad
mov
jo
pop
pusha
cld
jne
adc
mov
and
jb
jae
push
pop
mov
push
lock
es
push
nop
push
stc
or
push
fwait
and
jg
or
inc
and
jb
and
push
outsl
and
push
jno
sbb
aad
insl
xor
xor
push
inc
scas
ds
fsts
les
aas
stc
std
jg
add
dec
pop
mov
mov
rclb
popa
push
arpl
mov
ja
addr16
push
test
sub
jecxz
mov
incl
dec
dec
dec
ds
jmp
push
lods
mov
add
cld
cmp
arpl
das
insb
daa
outsl
jecxz
insl
lcall
pop
sub
fsubs
jo
and
imul
sbb
out
xor
cmpsl
mov
ds
stos
std
xchg
sti
out
sarb
scas
mov
adc
push
mov
mov
rcr
stos
aad
jne
arpl
push
rcrl
push
push
inc
aaa
xchg
pop
mov
pop
push
dec
pop
in
mov
cmpsl
jbe
mov
shrl
inc
and
aaa
cmp
jae
lea
push
inc
inc
inc
popf
imul
inc
inc
cmp
cmp
clc
inc
imul
movsl
arpl
and
and
sbb
daa
scas
pop
dec
fcoms
jnp
push
push
pusha
sub
push
mov
inc
inc
dec
inc
jle
dec
fistpl
adc
daa
aas
push
dec
dec
lahf
or
add
adc
jl
sbb
fildl
call
pop
inc
hlt
daa
sub
sub
push
scas
ja
pop
ss
ja
pop
decl
sub
sub
sub
add
pop
sti
rcll
movsl
xchg
mov
sbb
jno
mov
cmp
js
and
dec
pop
push
std
or
inc
insb
imul
push
jo
sub
inc
push
test
je
jnp
sbb
sub
inc
outsl
orl
movsl
outsl
mov
and
add
push
xor
testb
insl
sub
pop
lea
popa
xchg
dec
inc
add
pop
lods
push
inc
dec
dec
dec
sub
mov
xor
or
pop
lods
fidivl
pop
jne
sub
ljmp
mov
push
and
or
ds
bound
and
inc
addr16
ret
aaa
sbb
shll
inc
push
push
pop
aad
cmc
insb
mov
or
cmp
out
inc
mov
push
jp
push
movsl
pop
loopne
addr16
jo
arpl
sub
fistps
pop
test
imul
and
sub
and
sbb
sub
xchg
xor
jb
xor
scas
sub
jb
push
pusha
jge
mov
insl
ja
pop
call
sub
imul
ret
pop
xor
dec
cwtl
gs
mov
jbe
sub
jno
or
pop
add
inc
fcompl
ss
bound
sub
stc
or
inc
subl
cmp
push
pop
sub
mov
xor
das
sub
pop
outsl
jbe
gs
xor
jno
inc
cwtl
mov
xor
xchg
push
push
xor
xor
inc
insb
push
popa
test
push
jno
decl
mov
jo
xor
arpl
imul
cmp
sbb
sub
aaa
cmpsl
mov
outsl
cmpsb
cltd
gs
cmp
std
and
mov
jge
dec
inc
pop
xor
outsl
fists
lret
cmpl
sub
daa
and
cld
cs
das
lds
pop
sub
lea
ss
pop
xor
cmp
cli
lea
pop
pusha
cs
xor
and
sub
cmp
cmp
insl
imul
cmp
and
sbb
repnz
sub
sub
stc
cmp
xchg
pop
xor
daa
dec
pop
outsl
cmp
xor
jb
jb
jae
sbb
aaa
sub
xlat
push
and
cmp
icebp
jne
cmp
dec
add
lea
sbb
es
pop
dec
lock
lods
test
jno
push
dec
inc
pop
mov
pop
gs
fwait
ds
push
mov
je
inc
xchg
dec
dec
cmp
mov
push
push
jne
je
aaa
dec
stc
adc
cmpsb
aas
ja
inc
addr16
push
fs
jecxz
pop
jp
mov
aam
sub
cmp
pop
js
mov
pop
inc
bound
insl
dec
pop
inc
inc
outsl
test
xchg
pop
inc
mov
sarl
jne
jmp
pop
and
ja
inc
jbe
xchg
jo
xor
aas
lea
aas
cmp
ds
and
outsl
dec
daa
fcomps
subl
lret
cmp
testl
je
jb
outsb
inc
jmp
arpl
push
mov
jmp
add
outsb
lea
out
push
mov
sub
arpl
sub
aam
in
mov
and
dec
fisubrs
cmp
notl
dec
imul
inc
subl
ficomps
loop
daa
arpl
push
mov
imul
sub
das
xor
sub
lds
ds
inc
inc
ds
inc
dec
dec
inc
inc
sub
fstl
push
push
dec
push
push
push
push
pop
popa
cmp
jo
shll
stos
sub
add
shrl
jbe
outsl
inc
inc
jecxz
ljmp
insb
inc
pop
cmp
pop
test
cmp
outsl
pop
sbb
or
and
addr16
icebp
aas
dec
inc
sub
ja
sahf
arpl
mov
cmp
imul
and
pop
or
cli
xchg
mov
push
xchg
inc
dec
inc
sub
addr16
sbb
dec
dec
data16
mov
js
jg
add
cmp
pop
insb
insl
aas
xchg
adc
fists
bound
ss
and
dec
fs
ja
xor
ja
inc
inc
sbb
adc
aaa
lods
gs
bound
addr16
movsl
inc
pop
ljmp
roll
stc
cmp
ja
jbe
cmp
ds
inc
mov
stos
lock
addr16
sub
test
sub
stc
pop
clc
xchg
sti
push
mov
addb
pop
ret
jmp
fnstsw
and
xor
arpl
add
mov
push
in
push
and
sub
push
and
lea
push
and
push
ja
sub
and
sub
outsb
outsl
jb
push
pop
adc
loopne
xchg
push
mov
jb
test
cmp
mov
mov
inc
xchg
data16
loope
pop
dec
pop
inc
xchg
lods
adc
cmp
pop
or
outsb
imul
aaa
outsl
pop
push
in
pop
cmpsl
imul
mov
pop
mov
cld
mov
jmp
imul
dec
push
sub
rorb
cmp
push
shlb
clc
sub
sub
pop
sub
mov
pop
decl
jg
outsl
repz
sbb
sub
je
jge
mov
fsubrl
ljmp
sbb
inc
sub
push
jnp,pn
xchg
xchg
sub
xor
cs
or
das
push
xor
cvtpi2ps
ss
aaa
xor
pushl
das
js
jg
nop
sub
xor
xlat
das
fdivs
lcall
jmp
xor
sub
cs
xor
xor
xor
test
dec
xor
push
jp
mov
cltd
pushl
cltd
xor
das
mov
mov
mov
das
clc
xor
xor
xor
mov
push
xor
xor
xor
xor
xor
xor
cs
xor
xor
inc
xor
push
add
outsb
xor
xor
lods
xor
lret
ss
jg
fbstp
hlt
xor
mov
insb
xor
cmp
call
outsl
pushl
xchg
jmp
push
cmp
push
popf
cmp
jge
mov
mov
push
cmp
mov
cmp
xor
cmp
cmp
cmp
cmp
out
jg
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
das
icebp
fistpll
jmp
in
cmp
cmp
cmp
cmp
push
cmp
sbbb
cmp
jg
xchg
ss
cmp
cld
mov
cmp
cmp
ds
cmp
pop
cmp
ds
push
test
fistpl
frstor
jg
sub
add
xchg
sub
das
out
pop
mov
and
inc
xor
adc
sub
xor
xor
leave
xor
xchg
fidivl
adc
push
xor
roll
subl
xor
mov
das
fnsave
call
in
xor
ss
inc
jge
popf
xor
leave
xor
xor
xor
xor
fdivrp
divb
inc
xor
aaa
mov
push
or
and
lret
mov
cmp
sarl
xlat
xor
cli
ljmp
icebp
aaa
loope
jecxz
cmp
xor
cmp
cmp
cmp
xor
cmp
ffreep
cmp
cmp
xor
xchg
cmp
cmp
xor
adc
pop
mov
inc
pop
cmp
cmp
stos
decl
sbb
dec
cld
pop
cmp
jg
cmp
cmp
ds
stc
aaa
stc
sub
push
add
adc
sti
sbb
pop
sub
sti
das
xchg
xchg
sub
test
fisubrs
sub
dec
sub
cs
jp
xchg
sub
aaa
lcall
mov
fldt
loopne
jmp
add
add
sbb
and
and
aaa
das
xor
sub
jb
sti
ja
das
lea
pushf
xor
imul
pop
sub
mov
popf
xor
icebp
pushl
subl
imul
cmpsb
xor
xor
xor
xor
sub
mov
xor
jge
xor
mov
ret
xor
xor
ss
push
jo
jp
xlat
xor
mov
ss
ss
xor
lahf
xor
push
xor
cmp
jae
mov
cmp
cmp
xor
aaa
or
push
cmp
cmp
cmp
je
jl
test
pop
jle
cmp
cmp
xor
cmp
cmp
cmp
iret
cmp
in
cmp
jnp
mov
xchg
cmp
mov
cmp
cmp
push
sbb
xor
mov
ljmp
cmp
ss
cmp
cmp
adc
lcall
cmp
cmpl
mov
cld
sar
pushl
fstpl
dec
sub
leave
pop
das
xchg
mov
sub
outsl
mov
sub
sub
and
sub
jg
or
das
subl
xor
jmp
xor
xor
dec
das
dec
leave
jnp
jl
cltd
lea
scas
xor
das
jmp
sbb
incl
push
xor
xchg
das
popf
xor
sub
cld
xor
xor
lcall
mov
push
xor
xor
mov
imul
shlb
xor
sub
mov
aaa
in
xor
out
aaa
imul
testb
cmp
cmp
lea
xchg
mov
cmp
cmp
cmp
cld
cmp
pop
inc
mov
lock
xor
or
pop
cmp
ss
cmp
dec
xlat
sbb
dec
icebp
jbe
inc
jmp
dec
aaa
clc
sbbb
xor
ss
jne
fidivs
loopne
lock
add
sbb
es
arpl
jp
sbb
jg
test
xchg
and
fistpll
call
aaa
cmp
adc
clc
jg
jmp
aaa
inc
sbb
cmpb
cmp
jecxz
pop
out
test
cmp
xor
aaa
clc
cmp
cmp
repz
ret
cmp
mov
cmp
push
cmp
cmp
std
fwait
jmp
add
cmp
cmp
call
and
cmp
lea
cmp
dec
mov
cmp
cmp
cmp
int
cmp
pop
cmp
ss
in
imul
cmp
ss
cmp
cmp
sarb
loope
loop
push
cmp
lea
dec
xchg
sbb
popf
cmp
xlat
cmp
ds
mov
mov
pop
adc
mov
sub
pop
pop
push
stos
push
stos
sub
sub
repz
std
adc
daa
xor
insl
jl,pn
xchg
xor
lea
mov
das
inc
add
sub
mov
fwait
or
add
sub
popf
or
jae
outsl
out
test
dec
imul
adc
insl
or
dec
push
dec
dec
pop
push
dec
inc
push
push
inc
push
inc
pop
push
dec
inc
inc
pop
sub
out
mov
lret
pop
outsl
data16
cmpb
popa
jb
sbb
outsl
jae
pop
push
imul
xchg
pop
gs
insb
dec
outsl
push
outsl
popa
insl
sbb
arpl
add
pop
cs
adc
test
jae
and
je
and
jo
jae
arpl
jnp
bound
sbb
adc
jae
mov
mov
jae
cmp
bound
push
fbstp
ss
fs
fstpt
in
vmwrite
pop
jmp
mov
fnstenv
pop
jns
jo
adc
in
mov
push
push
push
jb
jns
gs
add
xor
sub
xlat
outsb
jg
and
jb
add
fmull
aas
mov
fsubr
jb
outsb
cmp
ja
outsb
imul
mov
sub
outsb
pop
outsb
iret
imul
push
std
mov
iret
jg
bound
jo
inc
gs
popa
push
fisttpl
gs
pop
inc
js
adc
push
push
adc
in
divb
adc
dec
jmp
inc
jbe
data16
imul
add
jne
dec
inc
inc
xor
pop
push
mov
push
inc
inc
mov
lods
jae
add
in
mov
outsl
sub
cmp
mov
or
inc
pop
imul
push
or
dec
pcmpeqw
sbb
dec
jae
xor
jae
add
fiadds
outsb
adc
fdivrs
jae
xchg
mov
jbe
inc
jmp
outsl
dec
push
in
jnp
frstor
jb
fs
daa
push
sti
imul
faddl
imul
dec
mov
mov
insl
imul
or
ret
inc
and
add
or
add
add
add
push
dec
popa
dec
push
pop
cld
incl
js
push
ja
arpl
insb
ret
add
mov
push
out
adc
xor
xor
xor
cmp
add
in
out
fbstp
shlb
mov
mov
add
mov
add
ja
outsl
add
jne
movsl
loopne
add
sub
xor
fwait
and
xchg
lds
std
mov
sub
repz
and
push
stc
jbe
outsb
adc
psubd
mov
push
lock
mov
sub
mov
xor
add
jle
filds
pushl
add
iret
fcoms
fidivs
ss
push
mov
nop
mov
hlt
cltd
das
cltd
adc
ficomps
mov
inc
pop
lret
test
pusha
mov
sub
adcl
cli
xchg
lret
push
lret
incl
adc
add
pop
pop
xlat
mov
nop
push
sub
add
xchg
or
inc
dec
push
push
add
test
jle
adc
add
incl
cld
inc
push
stc
rolb
nop
add
add
sub
cltd
shlb
jns
cmp
pop
push
dec
add
add
add
add
add
jg
sub
jmp
push
mov
add
add
push
add
xchg
and
jb
jbe
sub
add
cs
sbb
add
push
pop
cwtl
adc
add
gs
je
inc
imul
idivl
inc
or
gs
pushw
push
inc
insb
mov
jae
adc
insl
and
je
outsb
pusha
decl
push
imul
gs
add
ja
insb
outsl
jae
dec
popa
outsb
fs
imul
sub
outsl
jbe
inc
js
and
and
cmovle
inc
inc
or
in
pop
mov
arpl
outsl
arpl
outsl
fldenv
or
dec
fs
outsl
std
mov
jne
dec
outsb
outsw
insb
jbe
int
dec
sbb
jb
xchg
mov
jmp
mov
adc
mov
mov
push
jns
and
arpl
sub
push
xchg
arpl
xchg
imul
fs
dec
fisubl
imulb
fs
out
jg
mov
xchg
mov
jle
je
adc
add
pop
shl
push
outsl
outsl
insb
mov
out
add
xor
jo
outsl
je
xchg
xor
xor
mov
xor
inc
fisubs
call
std
decl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
insl
fstpt
dec
adc
or
and
or
sbb
mov
jp
call
and
incl
sbb
or
repz
and
inc
mov
jns
aaa
xor
pop
call
adc
xchg
sbb
xorl
das
outsl
bound
push
xchg
lock
push
or
icebp
adc
add
mov
fisttpl
push
test
jno
mov
add
push
push
dec
mov
add
out
movsl
dec
mov
mov
fbstp
lcall
or
push
andl
shrb
push
cs
or
out
mov
inc
arpl
or
repnz
stos
outsb
in
or
or
jo
pop
push
sbb
push
ud2
pop
push
js
xchg
or
insl
lahf
or
or
lods
sbb
fs
xchg
outsl
xor
fwait
addb
mov
addr16
arpl
outsb
or
fcmovb
arpl
je
subb
xchg
fnstenv
pop
or
insb
or
in
pop
out
insl
bound
xchg
ja
or
jbe
mov
sbb
outsb
arpl
inc
jne
mov
inc
js
inc
jb
dec
aam
jo
iret
mov
data16
insl
mov
mov
jae
sbb
sub
popa
mov
outsb
movsl
add
imul
jo
or
jne
pop
xor
rcll
jne
xor
xor
jno
out
dec
fs
or
ljmp
xchg
lret
gs
idivb
cmp
or
shrl
arpl
lods
mov
mov
add
sbb
pop
ja
or
aas
loopne
sidtl
add
add
adc
out
adc
add
add
mov
pop
xor
sbb
leave
push
idivb
push
outsl
jns
arpl
dec
inc
and
pusha
add
ds
cs
add
nop
gs
push
and
jb
popa
je
xchg
dec
cwtl
pop
mov
pxor
es
rcrl
pop
daa
rorb
dec
fidivs
jmp
dec
lock
into
ficomps
add
xchg
add
add
and
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
