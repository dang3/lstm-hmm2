mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
nop
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
mov
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
mov
das
and
enter
call
movsl
and
movl
pop
sbb
ja
add
mov
or
pop
mov
pop
mov
daa
ret
jmp
fldz
cmp
add
mov
fsubrl
mov
aas
push
mov
pop
add
xchg
lahf
push
push
mov
and
test
dec
jl
or
loope
mov
int3
lea
btc
mov
inc
inc
pop
ret
icebp
pop
faddl
sbb
test
mov
enter
je
mov
out
out
dec
lea
adc
push
xor
mov
add
add
xchg
aas
fs
or
jne
and
call
faddp
ret
cs
dec
push
mov
jecxz
and
xchg
push
jb
mov
orl
int
pop
pop
repnz
in
ret
sbb
sbb
mov
add
adc
ss
lahf
or
cmp
add
icebp
fwait
sti
addr16
test
jne
sbb
lea
shr
sub
xor
in
sarl
scas
cmpw
jne
lret
push
pop
cmp
sbb
neg
add
or
fistl
push
or
xor
lds
inc
pop
pop
adc
adc
mov
out
xor
test
push
aaa
std
mov
pop
lock
sub
push
mov
or
je
pcmpeqd
fsubrl
jle
mov
or
xchg
cmp
push
jne
test
mov
mov
cmpsb
push
outsl
add
adc
in
lea
jecxz
add
xor
jae
out
decb
add
mov
jl
mov
fbstp
lea
rep
stos
stos
push
push
ja
push
pop
sbb
or
inc
push
adc
adc
sub
clc
pop
pop
push
or
pop
add
dec
std
pop
popa
idivl
adc
dec
push
rolb
and
into
mov
mov
or
shl
add
pop
sti
inc
mov
not
sub
lea
mov
push
jmp
push
and
mov
fnstsw
mov
push
push
lea
and
push
pop
or
sbb
out
mov
adc
dec
sbb
dec
in
mov
sbb
cmp
xchg
inc
push
adc
stos
mov
sub
xchg
sbb
mov
mov
pusha
push
xor
testl
into
sub
cs
das
jnp
xchg
inc
push
add
mov
sub
popa
orl
sub
xchg
test
push
push
imul
add
je
mov
mov
jb
add
or
pop
idiv
fsubrs
lcall
adc
les
xlat
jno
or
int
push
pop
mov
push
jmp
dec
and
std
in
mov
push
push
leave
push
sub
mov
das
mov
loope
fs
mov
adc
sub
push
test
loop
sbb
sbbb
int
inc
enter
orl
in
lea
int
or
or
stos
push
lret
cmp
or
push
rorb
add
sbb
add
jne
jecxz
dec
lcall
mov
pushf
push
fwait
imul
sub
les
std
enter
or
push
xor
rcll
mov
int3
jl
add
jp
push
mov
mov
dec
scas
and
adc
hlt
insb
xchg
sub
mov
push
or
sub
or
ja
xor
push
mov
push
or
cmp
popa
xchg
shrb
outsl
or
push
inc
lock
shld
lock
sbb
aad
cmp
out
insl
leave
add
inc
incl
lea
mov
push
or
pushw
push
sbb
or
sub
les
btc
push
pop
push
adc
and
fmuls
or
xor
sbb
dec
inc
push
in
adc
adc
adc
dec
or
mov
test
shll
test
sbb
mov
push
cmpsb
pusha
cmp
jne
push
xlat
xchg
lcall
sub
xchg
ss
outsl
pop
lcall
jge
jne
test
ja
fisttpl
mov
pop
add
lea
in
inc
pop
add
sbbb
push
js
cwtl
push
push
stos
nop
mov
outsb
jmp
sbb
or
aad
sub
push
jg
pop
sbb
dec
push
js
fidivrs
push
repnz
pop
add
pop
xchg
mov
mov
popa
fs
adc
dec
dec
pop
cmp
and
jns
ss
push
mov
shll
clts
stc
loopne
arpl
pop
cltd
in
xor
push
push
in
leave
xchg
xchg
jge
dec
lret
push
add
shrb
push
ret
pusha
add
rcrb
pop
inc
mov
cmpsb
fstps
jae
hlt
push
or
lret
mov
jae
mov
pop
adc
decl
into
insl
mov
mulb
adc
xor
inc
dec
cwtl
inc
andl
cmp
jbe
sub
push
clc
push
push
add
push
ret
or
int
xor
sub
push
or
pop
or
cltd
xchg
mov
cmp
sti
pop
cltd
sub
pop
add
push
mov
push
dec
ljmp
sbb
xlat
push
pusha
fdiv
inc
dec
in
add
dec
jne
lahf
cmp
sbb
leave
mov
js
loopne
fadds
jmp
mov
outsb
add
xchg
out
repz
movsb
adc
int3
push
inc
aas
push
outsb
push
sub
add
pop
jae
ret
scas
adc
lea
adc
les
mov
sub
sub
sti
andl
or
pusha
js
shrl
push
adc
mov
sbb
push
pop
and
mov
pop
xchg
pop
mov
xlat
clc
lock
mov
jg
fisubs
inc
sbb
jmp
not
xchg
scas
push
or
stos
lret
mov
and
subb
insb
dec
sbb
mov
daa
push
dec
mov
js
mov
or
es
adc
pusha
xchg
pop
xor
add
ds
or
mov
lods
add
pop
xor
fwait
sbb
nop
adc
xchg
gs
in
cmp
int
cmp
popf
jnp
rcrb
xor
in
scas
xor
or
add
xchg
inc
jg
out
cmpsl
leave
and
cmp
pop
adc
mov
sbb
jecxz
adc
sbb
sbb
sbb
int
mov
inc
push
icebp
adc
or
xor
pusha
aam
sbb
xlat
push
jge
cmp
xor
mulb
faddl
int
sub
adc
iret
sbbb
push
lods
push
aam
add
push
mov
rorl
add
cmp
pop
cmp
sbb
ror
sbb
mov
dec
scas
push
pop
in
es
add
sbb
nop
mov
sarb
push
mov
sbb
inc
lret
pop
dec
inc
and
push
add
xlat
lret
inc
loopne
lods
add
fstpt
mov
or
or
rcrb
xor
inc
or
insl
lcall
mov
xchg
mov
sbb
aaa
nop
out
lcall
pop
and
aas
push
inc
fldt
xor
cmpsb
dec
mov
cld
mov
cmovbe
jb
loope
add
mov
mov
and
movl
pop
adc
mov
out
fadds
inc
inc
mov
add
push
sub
popa
sub
sub
xchg
pusha
sub
test
inc
mov
rorl
adc
lds
notl
mov
test
or
std
xchg
aas
adc
enter
shlb
sbb
cmp
stos
sub
sub
je
js
inc
js
pop
jle
push
cmp
jne
mov
mov
sbb
dec
in
popf
or
fwait
js
mov
js
sbb
jae
adc
or
xchg
repz
ret
lock
sub
fdivrl
add
jl
pop
out
pushf
test
push
into
xor
insb
sbb
in
not
add
jo
mov
imul
mov
imull
pop
sbb
or
mov
jge
mov
or
jmp
and
fldl
loope
add
adc
loopne
push
popa
pusha
into
gs
cltd
xchg
shll
cmp
xor
and
lds
sbb
sti
inc
inc
data16
lea
or
aam
js
mov
das
push
sbb
or
sbb
fildl
fwait
or
push
push
adc
rcl
icebp
lcall
and
aaa
sub
dec
sbb
inc
push
fs
adc
pop
pusha
sar
sub
push
xchg
pop
cld
xchg
mov
inc
clc
lods
mov
push
mov
test
mov
jae
lret
ds
shll
add
adc
movsb
jecxz
xor
mov
js
sbb
lods
and
jae
setns
cmc
adc
push
nop
pushf
jp
sub
cmp
pop
sahf
push
in
jo
and
clc
adc
mov
insb
or
push
and
sub
lret
sbb
insb
mov
adc
jg
int
fldl
and
mov
jae
cmp
dec
and
sbb
sbb
rcr
insb
jl
sbb
in
sbb
or
ljmp
in
js
mov
repz
dec
add
push
ret
jnp
mov
pop
lock
sub
sub
inc
cltd
sub
fs
out
sbb
push
sub
or
adc
push
mov
mov
jnp
pop
pop
pop
fs
mov
daa
lods
mov
mov
mov
ret
movups
fld
xchg
outsl
invlpg
or
mov
pop
cmp
shlb
nop
mov
mov
push
or
sbb
push
daa
int3
dec
mov
sbb
push
rclb
shll
out
adc
test
lock
lea
data16
arpl
mov
rcll
xchg
or
mov
and
inc
inc
cmp
cmp
inc
mov
and
hlt
repnz
in
nop
addr16
sbb
dec
or
inc
leave
aaa
push
mov
and
pushf
push
repnz
mov
mov
add
repnz
dec
lea
adc
fsubrs
jmp
jo
push
push
add
sub
jns
lret
sbb
or
lock
lcall
xchg
mov
and
inc
xor
enter
pushf
ja
in
mov
aad
or
adc
pshufw
sbb
dec
jo
orb
jl
dec
inc
cmpsb
mov
not
mov
xor
int3
lcall
sub
pop
add
add
or
add
fmull
xchg
mov
pop
dec
dec
mov
add
pop
jns
cmc
and
shlb
mov
xor
mov
sub
mov
adc
fs
push
push
jo
bound
add
lds
mov
push
sub
adc
dec
jae
add
inc
xor
mov
iret
stc
arpl
sub
xchg
in
aad
mov
maxps
dec
pop
or
push
mov
push
push
push
inc
fwait
or
insl
push
adc
adcl
jnp
out
add
repz
xor
insb
cmp
std
mov
insl
and
test
movb
sahf
pop
or
or
sub
invd
fs
adc
jne
adc
lret
jno
push
cli
or
ljmp
xchg
fs
out
adc
pmuludq
or
or
test
xchg
add
jno
jp
inc
outsb
mov
fldenv
in
push
push
xor
js
or
inc
and
lods
jp
andb
or
sbb
js
shrb
or
xor
rorl
mov
aad
adc
call
insb
je
jmp
adc
insl
gs
add
xor
jae
mov
loope
daa
jne
push
sti
incl
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
add
sub
pop
mov
inc
inc
cmp
jg
arpl
push
or
mov
mov
addr16
jg
adc
adc
mov
mov
push
cmp
push
jo
mov
push
or
mov
and
pop
sbb
add
add
and
or
xorb
loop
mov
mov
xchg
xor
sub
mov
add
arpl
and
aam
int3
sub
and
and
sarb
mov
test
and
and
and
xchg
nop
mov
test
and
je
insb
push
pusha
pop
pop
push
and
and
push
dec
dec
inc
and
and
inc
cmp
xor
and
and
sub
and
and
and
sbb
adc
and
and
or
add
ds
and
inc
nop
inc
xchg
inc
cwtl
inc
xchg
out
stc
pushf
inc
mov
xchg
xchg
xchg
xchg
lods
mov
mov
mov
and
iret
in
inc
rcl
fsub
and
in
inc
lock
inc
inc
inc
hlt
clc
cld
add
subl
sbb
cld
mov
out
ret
push
xchg
or
jl
mov
pusha
ja
jne
pop
pop
add
ret
push
xor
add
xchg
outsl
in
cmp
inc
push
ss
xchg
adc
cmp
mov
ds
cmp
or
add
es
dec
or
or
mov
or
int
iret
sub
xor
sbb
fsubrl
insb
dec
adc
sbb
adc
sti
sub
adc
push
mov
lea
fldcw
push
or
push
add
mov
xor
out
inc
or
mov
jne
cmpb
jne
mov
fnstsw
inc
or
add
or
mov
mov
repnz
dec
movsb
int3
inc
repz
add
push
sub
jbe
imul
or
push
push
and
cli
mov
xor
inc
in
mov
mov
mov
inc
popa
loope
pushf
adc
mov
lcall
inc
xchg
add
outsl
pop
mov
add
das
cmp
pop
ljmp
pusha
or
mov
loop
xor
cld
xchg
mov
leave
mov
mov
into
ret
push
sub
pop
out
push
lods
pop
test
xor
mov
push
dec
jno
inc
lea
fnstsw
fisubs
adc
sahf
int3
add
fcomps
mov
inc
mov
cmpl
aas
cmp
inc
ds
mov
pop
mov
add
sbb
xchg
dec
add
shll
inc
cmp
imul
shll
cmpsb
cli
or
and
cmpsb
imul
cmpsb
jmp
add
inc
pop
fldenv
dec
xchg
push
in
mov
pop
adc
pop
or
sbb
movsl
leave
adc
mov
jne
jb
or
adc
add
mov
or
mov
jp
nop
insb
fwait
in
xor
adc
add
add
das
xlat
jne
xlat
dec
cmp
or
sub
pop
sub
xlat
jne
push
adc
aaa
inc
out
arpl
movhps
xor
pop
xchg
pop
sbb
mov
daa
push
addl
jmp
scas
das
rdtsc
lcall
fnstenv
lock
or
icebp
testl
mulb
pop
mov
jmp
jno
mov
pop
push
push
scas
jmp
add
out
movsl
addr16
mov
mov
adc
inc
int3
fnstenvs
push
scas
arpl
sar
or
mov
mov
addr16
dec
add
dec
call
ror
mov
shll
xor
mov
lcall
add
xor
shll
sub
cmp
shll
iret
add
pop
outsb
shll
push
dec
xchg
ret
shll
test
addr16
mov
xchg
mov
adc
in
sub
rolb
add
mov
shr
loope
andl
test
cmp
sbb
add
shlb
xor
sub
es
and
mov
lcall
add
cld
xor
lock
ljmp
fdivs
ror
shll
mov
xor
test
pushf
xchg
nop
mov
jle
jb
pop
popa
mov
mov
inc
pop
push
pop
enter
add
imul
pop
str
inc
js
lods
aaa
dec
and
das
lret
or
and
xor
pop
and
nop
xor
and
lcall
xor
repnz
imul
scas
imul
stos
rolb
dec
shll
mov
movsb
sahf
xor
shll
xchg
mov
sarl
outsb
push
xor
pusha
and
dec
pop
nop
and
push
mov
and
mov
das
mov
daa
add
nop
sbb
shlb
orb
mov
aaa
mov
push
dec
cwtl
xor
dec
dec
mov
dec
lock
inc
dec
es
xchg
rorb
cltd
dec
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
stos
add
into
cmpsb
aaa
cmp
inc
push
inc
push
dec
xor
cs
insb
xlat
push
xor
or
push
sbb
adc
rolb
lahf
xor
outsl
jg
cvtps2pi
lret
out
push
mov
in
mov
cli
cld
idiv
std
add
clc
cmp
stc
std
in
sbb
cld
or
or
mov
lcall
ljmp
dec
fs
outsb
push
push
pop
imul
insb
insl
outsb
icebp
lcall
pop
popa
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
rolb
sbb
das
cmc
roll
gs
sti
sub
mov
and
pushl
imull
jg
or
cli
adc
and
push
repz
fbld
data16
sub
xchg
sahf
cld
sub
js
pop
and
cli
testb
fisttps
pop
std
dec
aas
adc
loop
incl
add
icebp
sbb
dec
fnstcw
sbb
mov
add
or
dec
repz
insl
or
or
sti
sti
pop
enter
cmp
adc
jae
cmp
or
push
or
popa
jmp
jo
pop
or
add
push
push
jno
jb
mov
jge
sti
push
daa
add
pop
in
pop
sub
pop
outsl
pop
out
push
jb
dec
or
popa
pop
outsb
pop
cld
dec
shrl
lea
mov
dec
mov
pop
fistpl
sub
push
lea
cmp
incl
pop
daa
dec
push
push
test
pop
mov
xchg
ljmp
lcall
add
push
dec
jecxz
dec
push
mov
push
dec
push
out
dec
push
sbb
loope
mov
rorl
jp
mov
sub
mov
push
jg
push
imul
mov
xchg
cld
pop
ja
jecxz
movsl
mov
jmp
pushfw
mov
mov
loope
repnz
ljmp
or
push
jno
jge
or
stc
outsb
cwtl
jne
mov
mov
dec
push
in
dec
push
add
rorb
cmc
imul
jns
in
fs
mov
mov
imul
stc
lea
rclb
jle
push
jo
jle
or
fildll
jecxz
add
dec
fistpll
push
mov
sti
pushl
pop
ja
idiv
cld
stc
push
push
data16
push
xor
cli
in
mov
jmp
lock
pusha
cmpsb
cmpsb
test
test
mov
cmp
sbb
dec
in
dec
cmp
pop
clc
test
stc
sbb
add
mov
movsl
fistpl
mov
dec
cli
aam
dec
pop
pop
and
adc
push
pop
mov
out
stc
and
mull
jo
jg
dec
push
cmp
mov
popa
cld
or
cmpsl
push
loopne
filds
adc
push
push
mov
roll
fwait
pop
test
movsb
xchg
mov
mov
push
pusha
sbb
add
arpl
sahf
adc
pop
mov
cli
roll
sbb
lahf
pop
fdivr
sbbb
mov
scas
adc
pop
pop
add
cmpsl
dec
filds
pop
xchg
push
repnz
cmp
jns
outsl
clc
ljmp
cmpb
or
hlt
repnz
mov
dec
arpl
dec
push
notb
dec
incl
pushl
pop
xchg
jno
mov
dec
std
or
mov
ja
daa
or
inc
xchg
out
repz
push
mov
in
loopne
jae
jecxz
dec
xor
icebp
push
dec
gs
jg
cld
test
fwait
insb
std
insl
add
outsl
pop
sti
into
test
mov
in
jg
call
aas
testl
dec
jle
or
jb
in
ret
push
jo
dec
jb
stc
rclb
xchg
pushf
imul
call
data16
jo
clc
roll
inc
or
dec
jmp
mov
sub
test
push
dec
iret
dec
jle
daa
sti
outsb
mov
addr16
dec
or
inc
loop
dec
jecxz
jge
jecxz
mov
jmp
mov
jne
and
orb
add
dec
jnp
adc
fucomi
push
dec
dec
xchg
xchg
lahf
decb
mov
inc
dec
loopne
cld
clc
stc
mov
dec
mov
out
cmpsl
lret
push
dec
dec
arpl
loope
dec
mov
outsl
int
cmpsb
add
adc
ja
mov
call
push
xchg
dec
dec
push
push
dec
test
addb
inc
sbb
sar
jmp
mov
pop
cli
jno
test
and
cltd
add
ds
popa
mov
testb
sti
repnz
push
xor
fwait
lods
jo
loope
mov
repnz
or
jecxz
sub
in
sub
xor
pop
sbb
insl
push
jecxz
or
ret
in
or
test
ret
lahf
cmp
dec
cltd
pop
push
push
lods
push
dec
int
jg
addb
stc
push
fs
push
lcall
push
inc
addr16
mov
testb
loop
dec
hlt
ret
sbb
stc
push
pusha
inc
and
popa
inc
sub
fstpt
dec
xchg
lret
clc
dec
gs
mov
int
jecxz
dec
push
sahf
cmpl
mov
bound
add
push
cld
iret
cmc
std
sbb
add
out
inc
stc
jge
adc
dec
xor
pop
jle
int3
xchg
test
in
and
test
dec
dec
dec
mov
and
cmc
push
jge
clc
sbb
jnp
pop
xlat
pop
pop
clc
cld
imul
repz
psubq
pop
loope
sbb
cmp
dec
jle
add
ljmp
pop
mov
jg
cli
xchg
fbstp
sub
bound
dec
cld
and
jecxz
stc
xchg
sbb
pop
jbe
mov
addr16
cmp
xor
pop
push
cli
adc
xor
inc
insb
push
inc
cmpsb
sub
fbstp
jmp
aaa
sbb
push
inc
xor
sbb
arpl
xchg
lds
dec
imul
or
fs
dec
lea
adc
add
pushf
and
pop
les
ljmp
out
xchg
dec
dec
push
xor
cs
sbbb
test
movsl
cli
fildll
jns
popa
xchg
test
in
into
mov
test
cmpsb
loopne
sti
out
sub
ret
mov
jl
cld
mov
cmpsb
xlat
xchg
negl
fwait
nop
clc
sbb
clc
sbb
popa
test
je
fwait
lods
negb
dec
pushf
bound
or
dec
push
pop
adc
jmp
mov
push
sub
add
add
ds
pop
clc
mov
mov
add
arpl
sub
pop
sbb
pop
jecxz
iret
xchg
popa
add
arpl
repz
dec
incl
jbe
out
fldenv
dec
xor
dec
adc
dec
daa
movsl
fldcw
inc
cmp
dec
dec
lret
jecxz
and
pop
lods
andb
xor
add
xchg
testb
and
pop
mov
lret
lahf
insl
lea
fcomip
dec
xchg
aaa
push
jle
negb
popf
stos
push
loopne
mov
or
xchg
mov
sarl
mov
aaa
mov
jg
mov
es
pushf
test
mov
adc
adc
add
fisttpl
cmp
mov
loop
and
aad
xchg
pop
pop
jge
sub
lds
popa
popa
add
test
cmpsb
arpl
add
and
push
inc
cmpsl
loope
jg
test
or
gs
js
lahf
sbb
xor
xchg
push
arpl
mov
loopne
testl
out
jecxz
fwait
out
sbb
sar
push
sbb
pop
push
cmp
jecxz
sbb
mov
push
cltd
dec
push
cld
or
ja
mov
cli
dec
loope
inc
jae
out
movsl
jmp
pop
decl
xchg
or
or
mov
orl
inc
aas
lret
adc
lret
cld
push
xor
hlt
jecxz
mov
lods
std
in
inc
sub
jbe
insl
mul
fdiv
ja
adc
arpl
mov
ret
dec
arpl
insl
cmp
aaa
dec
sbb
adc
shl
imul
sbb
and
sbbb
mov
mov
push
cmp
insl
jmp
test
adc
or
outsl
sbb
push
loopne
arpl
inc
dec
sarb
or
jp
testl
les
mov
dec
fs
repnz
jno
test
and
or
fisubl
sarl
lock
dec
mov
stc
jo
mov
and
out
outsb
stos
fcoml
mov
add
in
jp
mov
loop
inc
mov
mov
jb
jecxz
es
loopne
and
pop
in
lods
gs
and
loop
pop
cmp
sti
test
jmp
popa
aas
jno
push
dec
loop
cmp
xchg
jecxz
outsl
inc
ret
aas
and
mov
pusha
test
pusha
mov
scas
mov
inc
aad
sbb
xchg
outsb
clc
mov
seta
pop
idivl
inc
add
dec
shl
lods
jg
dec
dec
cli
adc
aas
add
inc
or
sbbb
popf
outsb
add
mov
ret
sbb
jb
test
cli
in
jnp
and
lods
or
mov
pop
cwtl
arpl
dec
cmpsb
insl
dec
stc
inc
sub
pusha
inc
xchg
push
push
pop
outsb
push
adc
pop
cld
adc
mov
das
dec
incl
mov
jecxz
pop
cs
out
lds
jb
inc
push
jge
push
outsb
add
pop
fadd
sbb
and
or
loop
ljmp
insl
clc
incl
cltd
xchg
test
xor
jae
jecxz
add
sbb
xchg
loop
and
das
insl
add
xchg
daa
loop
cmp
or
push
mov
repz
dec
inc
mov
outsb
daa
cmc
jno
add
sti
jp
dec
in
dec
push
xlat
sub
jbe
or
rcrl
xor
rclb
mov
add
call
ja
xor
hlt
fsubrl
sub
in
inc
test
jg
add
out
inc
pop
jl
std
jno
mov
xchg
ja
jg
or
inc
add
in
jg
jae
out
jle
jo
sbb
sarb
gs
sub
adc
push
out
jnp
ljmp
add
xor
push
popa
mov
xchg
in
popa
add
in
loopne
imul
cmpsl
pop
ja
in
cmp
arpl
sub
out
movsl
jmp
mov
dec
popl
loop
inc
inc
adc
cmp
cli
jo
test
jmp
imul
das
xchg
clc
jp
mov
ret
push
xchg
mov
clc
or
cmpb
sbb
fdivr
add
push
jl
push
cmp
mov
orl
and
sti
rcrl
fldcw
sbb
sbb
jnp
in
icebp
arpl
mov
add
or
sub
scas
decl
push
subl
in
das
xchg
jns
incb
mov
fildl
dec
loopne
dec
nop
lcall
or
sbb
lret
out
xchg
cmp
xor
loopne
loopne
inc
repz
add
rcll
adc
outsb
icebp
jg
push
test
push
testb
xor
mov
testl
mov
repz
mov
loope
lahf
pop
sub
insb
mov
cmp
fwait
in
jb
dec
jmp
inc
icebp
push
in
mov
out
pop
repnz
hlt
mov
pop
xor
neg
fmuls
pushl
lret
sub
leave
jecxz
cli
add
sti
addr16
in
int3
mov
jg
inc
out
mov
roll
cmp
data16
fildl
out
hlt
inc
hlt
arpl
frstpm(287
jb
repz
repnz
push
clc
fcoml
cld
push
push
dec
jecxz
decl
jno
pusha
adc
xchg
jecxz
sti
jge
xchg
push
mulb
dec
test
xchg
pop
and
testb
test
inc
clc
jmp
insl
or
jge
rolb
fnstsw
add
jae
and
in
xchg
lret
lods
test
push
xor
mov
add
sbb
daa
pop
loope
sbb
dec
jecxz
std
xor
ror
cmpsb
cld
xor
adc
pop
outsl
lret
std
insb
mov
fcompp
cmp
stc
xchg
inc
std
stos
pop
pop
fadds
push
popa
ror
loope
outsl
mov
and
testl
sti
stos
jbe
cld
push
pusha
imul
cmp
gs
and
mov
outsl
sti
test
sub
jge
enter
std
push
add
outsl
mov
xor
and
lret
inc
push
jmp
repz
std
cltd
aam
xor
push
sarl
jle
pop
fwait
outsb
mov
jns
or
frstpm(287
out
dec
ljmp
pop
jb
pop
cs
hlt
enter
pop
hlt
mov
pop
stc
in
loope
push
jecxz
pop
adc
stc
aam
push
add
fidivrs
jne
gs
xorb
dec
mov
repz
idiv
xor
jg
mov
adc
mov
jecxz
pop
fists
push
out
mov
arpl
push
popa
in
push
xchg
xchg
sbb
pop
std
jg
idivl
lock
lret
in
popf
add
or
scas
out
sub
lcall
push
hlt
adc
mov
shrl
sub
dec
push
mov
inc
mov
push
loop
fldt
mov
jns
add
jmp
or
xchg
lret
in
jp
mov
cmc
test
jb
fdivrl
cmc
jle
mov
cli
std
loop
incl
stc
push
call
lds
mov
fcos
fistl
fwait
aas
mov
xchg
cmpb
bound
stc
xchg
leave
xchg
test
addb
pop
or
jmp
lcall
sti
jg
sti
mov
jecxz
add
mov
dec
fisubrl
adc
cld
fwait
lods
cmp
jnp
sub
sub
cmp
adc
xor
scas
mov
push
add
hlt
out
add
xchg
lods
or
imul
dec
add
xor
out
jecxz
and
jo
dec
adc
cli
jb
push
pop
push
in
add
adc
das
add
mov
xchg
fistpll
dec
mov
add
std
add
testb
xchg
cld
xchg
jo
ret
enter
lret
addb
daa
test
loope
or
jae
rorb
jle
arpl
gs
aad
and
es
std
decl
jecxz
mov
decb
xchg
ret
out
ds
rolb
dec
mov
pop
addl
jo
or
pop
shrb
outsl
jg
in
out
pop
push
pop
push
push
les
mov
in
dec
push
popa
sbb
xchg
xchg
fs
sub
mov
mull
adc
mov
cmp
hlt
fbld
xchg
fdivl
inc
add
sub
aad
push
loopne
je
fwait
xchg
stos
inc
decl
stos
fsubrl
shrl
lock
in
or
dec
sahf
loop
mov
cmp
mov
xorb
sti
out
daa
mov
fisubrl
or
pop
mov
dec
mov
pusha
inc
ja
add
lahf
mov
ret
cld
pop
stc
mov
in
lock
decl
cmovo
xchg
sarl
pop
cmpl
xchg
add
out
out
and
or
ds
inc
jg
mov
inc
add
call
push
addr16
test
data16
lret
std
push
cmp
jb
outsl
dec
in
add
scas
cld
loopne
jns
lret
cmc
loopne
cmp
sbb
ror
add
out
data16
xor
hlt
std
stc
xchg
dec
add
or
loopne
clc
add
shlb
addb
dec
ja
mov
inc
jno
dec
pop
ret
sub
loope
xchg
rol
icebp
xchg
or
repz
add
add
lcall
loop
jg
popf
add
pop
pop
ret
in
out
mov
jg
outsl
lds
in
outsl
mov
jle
outsl
inc
jp
or
es
or
jnp
cmc
add
cld
cmp
pop
mov
mov
or
pop
cmp
ljmp
notl
aaa
cmp
and
inc
call
mov
push
jg
dec
and
sub
adc
popa
push
push
imul
inc
or
jle
dec
mov
mov
xor
pop
pusha
jns
hlt
xor
push
add
or
mov
pop
cli
addr16
ret
and
cld
outsb
or
cmpsl
loopne
lcall
std
outsl
fistps
push
mov
clc
std
cld
jp
std
mov
incl
mov
jle
add
cmp
dec
push
push
pusha
fwait
movsl
ret
cs
clc
or
pop
ljmp
cmp
arpl
pop
inc
cmpb
test
jl
mov
mov
push
push
dec
popa
mov
fdivr
repnz
stc
jl
pop
xchg
outsb
mov
in
out
sbb
call
xor
stos
or
int
jbe
dec
divb
fcomi
das
jge
push
sarl
mov
adc
mull
aas
cli
rcrb
cmp
insl
push
pop
push
or
pop
pusha
iret
adc
cmp
inc
sbb
jge
fcmovnbe
jae
mov
leave
push
sti
sub
mov
or
dec
or
fnstcw
test
test
divl
jno
mov
clc
outsb
pop
sbb
mov
repz
movsb
ja
aam
pop
sbb
mov
divb
cli
stos
xor
push
dec
sbb
shlb
jg
mov
das
and
imul
int
cmc
lods
test
shrl
loop
shr
push
push
inc
loope
cs
outsb
aad
dec
cmp
pop
xor
jo
lock
mov
sub
xchg
push
push
out
dec
arpl
arpl
fildll
jne
sbb
dec
or
push
sub
sub
or
push
mov
cmc
ret
push
data16
lods
int
pop
in
cmp
push
or
and
inc
sub
dec
mov
insl
xor
mov
or
imul
mov
pop
cmp
das
pop
clc
dec
lcall
addr16
test
adc
ljmp
add
cmpsb
ret
insl
jg
subb
mov
daa
mov
stc
test
imul
xchg
dec
dec
pop
ljmp
out
cld
std
stc
stc
jno
cmp
pop
jnp
cs
adc
or
outsb
mov
aad
mov
push
insl
jo
xorl
lods
in
adc
sub
fbld
mov
hlt
xchg
outsl
daa
scas
jmp
add
push
adc
or
xor
pop
jmp
xor
sub
ljmp
cmp
mov
xor
or
pop
outsb
and
xchg
ljmp
dec
repz
add
lret
orl
sub
adc
add
pop
add
dec
add
cmp
rol
pop
outsl
fists
in
mov
jecxz
scas
call
xchg
dec
pop
cmp
insl
sbb
add
aad
cwtl
jp
pop
test
pmaxub
lret
xchg
dec
cmc
in
insl
jle
idiv
addr16
inc
add
shrb
jmp
add
pop
ret
add
push
insl
dec
ss
jo
outsb
incl
pushf
pop
xchg
ss
insb
sbb
jo
lret
jge
or
jecxz
xor
adc
aaa
out
xchg
insl
fisttpll
cmp
or
inc
addr16
sti
test
inc
cmp
sub
xchg
in
aaa
inc
or
scas
mov
negb
in
add
test
jecxz
clc
movl
add
xchg
filds
sbb
add
jo
test
in
loopne
inc
fbstp
dec
out
dec
jecxz
movsl
neg
lods
jo
insl
in
stc
mov
inc
add
popf
sbb
subl
push
inc
cmp
dec
inc
scas
push
mov
ss
test
push
push
xchg
clc
push
cld
inc
pop
in
decb
lahf
adc
xor
das
shl
xchg
repz
cs
ret
orb
jg
cmp
lret
out
subb
add
cld
inc
shlb
mov
mov
jle
cmc
jle
sarb
pop
test
fiaddl
pushl
add
jecxz
mov
mov
scas
addb
in
insl
mov
add
dec
addb
cmp
notl
daa
pushl
xor
jns
inc
mov
xor
out
sbb
fisttpl
ja
xor
test
pop
fcmovu
test
push
inc
cld
xchg
orl
add
je
in
insl
xor
xor
xor
push
xchg
fidivs
outsb
jno
or
xor
jb
test
adc
mov
test
sub
mov
xchg
ss
add
lock
mov
jle
sbb
xor
jae
dec
std
addl
push
mov
outsl
lock
inc
divl
lock
add
incl
dec
push
pop
xor
lods
or
outsl
inc
jecxz
mov
push
fwait
jp
or
jmp
repz
jae
xchg
inc
jmp
mov
daa
aas
sbb
das
dec
jge
ret
adc
outsl
jecxz
mov
test
mov
jo
test
or
sub
outsl
push
je
sti
jae
test
cmp
pop
pop
inc
mov
xor
sub
cmpl
jno
test
inc
rcll
jae
in
test
xchg
jle
sbb
sbb
xchg
inc
sbb
mov
test
mov
mov
add
jecxz
movsl
arpl
out
sbbb
inc
inc
test
pop
add
lret
xchg
orb
pop
loop
sbb
pop
xchg
daa
mov
mov
outsl
pushf
and
sub
mov
xchg
xchg
clc
xchg
mul
mov
out
gs
mov
inc
or
mov
mov
jmp
bound
add
orb
or
cmp
stos
sub
aam
mov
dec
xchg
loop
fmuls
fucomip
in
xor
xor
mov
test
ficoml
dec
sub
pop
cli
mov
fs
and
mov
push
xor
aas
push
pop
sbb
popf
sar
cli
xor
fldcw
test
xchg
fwait
adc
aam
push
adc
add
scas
dec
icebp
stc
adc
outsb
call
mov
add
std
mov
in
xor
imul
push
icebp
push
pop
fdivr
inc
xor
std
push
sbb
flds
jne
outsl
movsl
ss
shll
loope
xor
or
stc
movq
mov
sub
les
andb
dec
adc
cld
and
jmp
or
add
add
adc
popa
rcpps
jbe
cmp
ss
ljmp
jae
cmp
clc
scas
popa
mov
cmp
outsl
or
inc
clc
das
xor
aad
xor
decl
jnp
mov
cmp
sti
insb
xor
or
and
inc
lea
inc
mov
fbld
insb
cmp
mov
in
imul
lret
mov
fstpt
inc
leave
mov
hlt
std
mov
inc
cmp
jl
pop
or
aaa
loope
pop
sbb
outsl
pop
out
jnp
sbb
outsb
test
daa
jo
out
lods
push
jecxz
cmpl
ret
lret
arpl
test
cli
repnz
sub
pop
lret
sarb
sbb
ds
ret
xchg
adc
cmp
or
movsl
xchg
sbb
outsl
std
mulb
insb
mov
in
xchg
wbinvd
ss
das
jo
sti
add
test
cmp
mov
xor
outsl
add
cld
pop
mov
inc
arpl
sahf
push
and
popa
xchg
insb
or
jg
shrb
add
sbb
outsb
call
test
add
cmp
push
sub
ss
mov
add
push
inc
std
add
scas
cli
cmp
or
cli
in
ret
adc
std
mov
push
xchg
jecxz
add
sub
std
test
push
add
test
mov
pop
xor
js
jno
cs
dec
add
jmp
fidivs
add
mov
cld
push
jnp
jmp
mov
inc
and
jmp
adc
pop
mov
into
outsl
or
repnz
ficomps
fldenv
out
lock
mov
cmp
push
subb
mov
pop
mov
enter
add
scas
sbbl
jg
sub
pop
mov
imul
jns
xchg
fistl
insl
add
or
push
cmpsl
adc
cmp
outsb
jns
mov
fsubl
jp
and
push
push
add
sbb
fucom
or
fsub
cli
shlb
sti
enter
inc
fnstcw
adc
addr16
fs
mov
testl
pop
movsl
push
xor
pop
jns
outsb
sub
adc
cli
adc
call
aam
add
pop
dec
push
sub
push
std
and
scas
outsl
test
xorl
js
out
ds
lcall
cli
iret
popa
cmp
xchg
into
or
lock
jle
jp
in
out
jp
add
addr16
pop
dec
ljmp
mov
sub
testl
and
jle
adc
xlat
mov
loop
not
push
mov
inc
mov
dec
xchg
test
lods
jmp
inc
movsb
ja
mov
jo
xorl
aad
mov
xchg
and
jne
aaa
clc
jmp
js
adc
test
mov
dec
cmp
insl
sbb
mov
in
pusha
and
mov
push
xchg
out
mov
cli
adc
aad
sti
add
mov
cli
cmp
push
sub
xchg
inc
xor
sbb
pop
andb
push
dec
jnp
and
lret
cmp
out
scas
sbb
insl
pop
push
push
pusha
ja
ret
push
dec
repz
dec
push
mov
arpl
std
push
push
bound
and
popf
gs
push
ja
fiadds
hlt
das
mov
pop
cmc
jno
inc
out
push
dec
pop
mov
or
xor
popa
gs
in
fcomps
jp
pusha
test
ret
xor
fimull
dec
push
lahf
jmp
add
into
mov
sbb
jmp
insb
inc
push
jp
push
pop
pop
or
pop
stc
mov
fadds
and
cs
push
aaa
mov
shrl
inc
mov
ret
test
jecxz
daa
pop
mov
sti
inc
mov
aaa
fisttpl
data16
imul
sub
mov
jns
in
sti
mov
fistps
xor
insl
jo
movsl
pop
in
addb
fs
xor
ljmp
inc
sbb
sti
inc
mov
ss
cmpsl
cltd
mov
dec
ljmp
stos
int
mov
dec
daa
aad
je
mov
sbb
rcrl
xlat
dec
out
loope
sub
test
int
arpl
jecxz
jnp
adc
mov
push
popf
push
loope
dec
xchg
addr16
or
in
mov
mov
mov
fdivr
inc
pop
insl
jecxz
mov
shl
adc
jl
rcll
mov
pop
xor
mov
sub
std
test
fstpt
inc
sbb
push
daa
out
jnp
int3
mov
iret
in
sub
clc
add
cmp
pop
xchg
add
dec
dec
mov
repnz
imul
dec
pop
out
hlt
jecxz
sub
mov
divl
inc
add
repz
xor
outsl
sub
add
rclb
icebp
loop
fwait
aaa
push
repz
xchg
dec
mov
sub
divl
pop
insb
clc
and
cmp
lock
ret
lock
stc
xchg
test
cmp
or
loop
jge
mov
push
sub
mov
push
dec
lahf
mov
inc
sub
add
adc
push
outsl
pop
sub
out
repz
mov
mov
adc
push
or
push
fdivs
cmpsl
movsl
sub
push
jg
xor
push
enter
or
pop
insl
mov
sub
leave
jecxz
fsub
arpl
shl
or
loopne
insb
aad
mulb
shlb
xchg
daa
es
lahf
sub
inc
aaa
jb
stc
fisttps
insl
clc
fisubs
xor
rcr
xchg
insb
std
adc
dec
dec
xchg
mov
and
inc
test
cmpsl
sti
mov
lds
ljmp
aaa
dec
std
sub
stos
cmc
push
jge
pusha
push
or
jg
gs
push
sub
cmpsl
sbbl
insb
xor
mov
mov
mov
adc
lahf
xor
xchg
scas
mov
loop
xchg
mov
js
mov
cmpsl
mov
and
add
dec
mov
inc
std
in
notl
subb
sbb
not
jle
or
lods
clc
sbb
cld
push
lahf
mov
xor
imul
out
bound
dec
bound
mov
loopne,pn
stc
push
dec
test
sub
popa
xchg
push
outsl
xor
or
das
sub
xchg
inc
mov
or
call
cmp
filds
adcb
fists
mov
shl
shll
mov
inc
stc
scas
push
mov
pop
push
mov
out
dec
out
ja
outsl
push
push
dec
mov
dec
rcrl
lcall
cmp
jg
loopne
sub
mov
jecxz
push
andb
loopne
push
mov
xor
mov
test
fildl
xchg
xchg
adc
or
xchg
call
push
dec
mov
add
mov
sbb
adc
pop
or
mov
push
incl
js
xor
push
je
gs
out
sbb
cmp
aas
xor
xchg
lods
dec
xlat
xor
mov
sbb
ror
shll
loope
aas
mov
out
cli
call
pop
dec
xor
jle
jmp
and
ucomiss
xor
xor
fdivr
test
dec
mov
jle
cld
or
clc
bound
and
adc
pop
push
popa
cmp
mov
mull
ds
fidivrs
xchg
repz
xchg
adc
push
mov
clc
add
bound
push
imul
les
stos
sti
outsl
jmp
ljmp
mov
mov
mov
mov
pop
fwait
add
mov
sbb
jbe
orb
mov
mov
push
mov
jp
mov
shrl
or
add
arpl
jno
push
jo
ror
push
jg
sbbl
das
cltd
in
cli
push
outsl
jp
and
xlat
and
and
xor
lods
mov
push
jnp
sbb
cmp
adc
add
fs
mov
lcall
xchg
shll
xor
cmp
xor
outsl
add
ss
ljmp
jne
cmp
mov
xorb
cmp
pop
xchg
xor
je
xor
and
xchg
jge
comiss
cmpsb
das
pop
fldl
cli
xor
sbb
int3
nop
rcll
dec
push
cmpsl
fwait
out
jp
mov
sbb
test
adc
fstpt
iret
mov
xchg
adc
ja
xchg
pop
shll
mov
cmc
adc
mov
push
pop
mov
jp
jg
cmpl
and
int
or
dec
jecxz
and
dec
pop
xchg
bound
js
mov
pop
push
pushl
shrl
jge
mov
andl
add
cli
and
jbe
popf
sbb
mov
std
in
movb
sbb
dec
pop
aam
clc
outsb
ret
adc
popa
mov
adc
push
push
pop
mov
sbb
sbb
shrl
outsl
mov
cs
or
mov
sub
and
and
inc
dec
xor
shll
inc
add
mov
jae
push
or
mov
mov
add
scas
push
push
mov
std
pop
pop
jns
add
jnp
lock
clc
sti
jno
jle
mov
arpl
push
mov
jo
inc
movsl
addr16
pop
xor
push
sahf
gs
push
cli
xor
fisttpll
cltd
test
divb
fwait
inc
aad
fstps
inc
pop
daa
cltd
lahf
jnp
or
add
add
out
push
mov
ss
movsl
pop
mov
lahf
push
dec
inc
fstpt
insb
xchg
sbb
sbb
mov
in
dec
cld
int3
add
xchg
mov
lock
cmpsb
div
mov
mov
lods
and
test
push
leave
lahf
jmp
test
push
sbbl
sub
and
mov
std
sbb
mov
and
in
aas
add
jno
jecxz
and
rcrl
push
outsl
mov
or
outsl
popa
loope
inc
stc
test
jnp
pop
sub
outsl
inc
jo
ds
inc
insb
mov
pop
mov
pop
cmp
inc
add
lret
je
adc
xchg
inc
cmp
add
mov
out
aad
inc
or
inc
filds
cltd
mov
push
inc
pushf
jbe
arpl
fnstsw
cmp
mov
fists
fdivp
stc
push
aam
mov
mov
add
movsl
test
js
ljmp
pop
mov
cmp
jl
pop
dec
loope
jp
mov
lret
mov
orb
mov
mov
wbinvd
jl
sti
or
aas
std
dec
adc
xor
stos
mov
cmp
loope
pop
or
loop
xchg
jnp
imul
subb
add
outsb
arpl
insb
cs
sub
sub
clc
loop
loop
cmp
cs
jg
jb
mov
inc
xchg
iret
divb
in
stc
sub
jmp
gs
shll
ret
pop
jmp
notb
jo
inc
fbld
out
shl
xlat
cmpsb
sub
fwait
xorb
and
mov
xchg
orl
test
xchg
in
dec
jmp
test
jl
push
inc
dec
adc
cmp
pop
xchg
leave
or
jno
das
add
fldt
decl
xchg
add
mov
dec
je
dec
pop
or
out
mov
fcmovnbe
aam
and
push
cmp
add
es
cld
aad
jmp
jl
sti
sbb
test
popa
ret
fwait
add
add
or
iret
or
mov
sub
out
lods
push
mov
aaa
jle
mul
jmp
lds
pop
sub
frstor
add
cmpsl
addr16
fnstenv
cmp
flds
sbb
cld
das
aad
insl
xchg
lock
outsb
cs
fwait
insl
add
xchg
push
mov
adc
test
sbb
sub
in
rcrl
sbb
add
mov
jns
sbbl
movsb
movsl
cmpsb
bound
stc
sbb
stc
loopne
in
adc
std
jo
mov
push
imul
and
scas
ret
mov
jne
jbe
in
repnz
push
mov
xor
push
ja
add
filds
int3
mov
loop
jo
mov
or
repz
jb
pusha
outsb
out
adc
xlat
fcomi
insb
testl
sbb
inc
dec
in
frndint
pop
cmp
sub
addl
cs
fdivl
hlt
push
in
inc
iret
xchg
fdivrp
repz
arpl
mov
jecxz
idivl
xor
popa
mov
mov
stc
inc
sub
sub
sbb
jmp
mov
xor
fisubrl
push
or
sbb
cmpps
aas
push
mov
sbb
movsl
push
dec
dec
jecxz
sbb
add
fst
ret
outsl
nop
fldl2e
loopne
popa
loop
push
aaa
idivl
loop
mov
in
pop
rorl
sub
repz
loopne
and
add
aaa
clc
add
xor
notb
pop
mov
data16
xchg
xor
add
ss
mov
leave
bound
inc
cmp
push
aaa
cwtl
or
repz
and
push
sbb
fs
inc
sbb
stos
negl
and
sbb
lahf
cli
sbb
aaa
sbb
pop
fstpl
xchg
pop
add
mov
mov
cmpsl
arpl
mov
adc
popa
cmp
mov
mov
mov
lahf
gs
mov
test
in
stos
out
pushf
popa
mov
movsb
test
add
mov
fstpl
repz
daa
cmpsl
sbb
pop
pop
sbb
bound
cmp
jle
lods
outsl
xor
push
xchg
xchg
sub
cs
sbb
addl
add
test
rcrl
mov
xchg
lcall
adc
push
sbb
jg
fsubr
pushf
imull
lret
repnz
dec
mov
sbb
test
outsl
xor
out
mov
mov
mov
decl
add
insl
push
fldt
pop
fcoms
jmp
inc
imul
xor
das
call
inc
xor
add
testb
nop
out
bound
lcall
loope
push
cmp
dec
dec
in
push
mov
dec
add
aad
imul
and
jnp
popf
add
bound
sbb
mov
mov
lods
fildll
lods
daa
cs
push
dec
out
sbb
mov
mov
jno
rolb
mov
lods
cmp
xor
xor
hlt
dec
cld
mov
mov
or
divb
mov
cmp
dec
mov
out
mov
add
add
aas
mov
ret
stos
mov
shll
sbbl
fdivr
push
mull
push
clc
jo
mul
loop
push
test
sbb
negl
mov
mov
test
cmp
ljmp
int
popa
mov
xchg
sub
push
mov
mov
in
jp
shl
pushf
add
xchg
std
cltd
add
in
ljmp
dec
sbb
xchg
xchg
mov
xlat
out
cs
jns
loope
push
jmp
inc
xchg
je
cld
pop
outsl
icebp
mov
call
cmc
std
pusha
lret
push
cmp
cltd
enter
mov
fistpl
movsl
movsl
push
sub
in
mov
jnp
add
cmp
sbb
cli
js
add
cmp
pop
mov
dec
cld
idivl
add
out
je
out
inc
add
roll
cld
mov
ret
adc
cli
mov
push
orl
mov
outsb
push
cmpb
and
mov
test
out
adc
lds
cmp
outsl
dec
loope
sbb
push
shll
inc
sbb
sub
je
jecxz
or
xlat
jmp
roll
or
in
jmp
push
dec
loop
sbb
cmc
aaa
dec
jno
fs
xor
mov
loop
jmp
dec
push
dec
stc
sbb
lret
das
mov
or
add
push
cmp
out
mov
insl
pop
sti
sbb
mov
pop
dec
gs
pop
rcrl
xchg
loope
pop
lds
test
and
mov
adc
jge
sub
test
in
incl
incl
xchg
or
std
push
popa
ret
pop
dec
data16
test
out
xchg
sbb
inc
mov
cltd
push
and
mov
arpl
mov
test
scas
sbb
sbb
xchg
cmp
and
cltd
ds
out
cmp
cld
mov
clc
dec
dec
arpl
xchg
sti
dec
cmpsb
test
mov
xor
outsb
mov
xchg
pop
jge
or
call
xchg
icebp
addr16
movsl
add
gs
in
jl
icebp
lret
mov
xchg
sbb
lahf
pop
xchg
das
lea
in
sbb
loope
mov
mov
mov
xchg
test
mov
pusha
xor
dec
xor
mov
mov
iret
sahf
out
inc
mov
pop
aas
cmpsb
sbb
andb
mov
cmp
add
test
sti
testb
cmpsl
shr
lret
cs
adc
repz
dec
gs
jbe
pop
jl
cli
cmp
jo
adc
ja
jns
in
lahf
xchg
mov
or
lock
lahf
xchg
in
js
nop
inc
lock
adc
sub
mov
mov
cmp
rcrl
adc
xchg
sti
jb
sub
roll
inc
mov
cmp
in
xor
loopne
sbb
mov
sub
mov
jecxz
pop
pop
push
popa
rcll
dec
movsb
loopne
adc
jecxz
xlat
mov
jnp
dec
out
stos
scas
loop
mov
pop
ljmp
jg
cltd
out
cli
cld
cmp
mov
icebp
fildl
imul
in
sub
adc
sarl
sbbb
xor
out
sub
sbb
notb
clc
testb
cld
iret
jge
clc
push
ja
arpl
add
hlt
adc
repnz
sbb
daa
into
inc
scas
pop
adc
lods
dec
popa
insl
inc
inc
ljmp
std
jle
mov
mov
arpl
fstpl
ja
pushf
add
xor
mov
sbb
jmp
scas
sbb
test
xchg
mov
push
aaa
xor
add
or
or
or
pusha
cld
or
stos
insl
fisttps
in
aaa
sub
mov
cmc
sar
mov
aaa
outsb
dec
inc
pop
popf
in
xlat
jmp
xchg
call
inc
icebp
nop
icebp
push
push
lds
push
mov
cli
fsub
lock
cmpsl
xor
mov
imul
in
rolb
push
inc
mov
int3
shlb
popf
notb
sbb
or
idivl
lret
xor
stc
loopne
in
push
andb
add
pop
pop
mov
mov
pop
popa
xor
add
and
xchg
sbb
and
cmp
xchg
sbb
and
sbb
xchg
and
adc
dec
mov
dec
mov
xchg
sbb
iret
in
test
push
loopne
sbb
and
sbb
dec
xchg
dec
mov
dec
mov
dec
mov
sbb
pushf
xchg
nop
adc
aam
jmp
inc
push
sbb
shl
adc
cmc
into
test
sbb
sti
je
sti
rclb
insb
aad
or
jmp
aas
ljmp
out
leave
enter
mov
leave
enter
dec
mov
sbb
xchg
loopne
cmp
shll
lods
into
test
mov
xchg
sub
add
mov
into
mov
hlt
cmc
scas
das
cmp
dec
ret
fwait
aas
adc
nop
sub
cmp
fnstcw
out
sti
lret
push
sub
insl
push
mov
aaa
daa
pop
mov
rol
dec
push
fwait
pop
pop
sahf
sub
or
adc
outsl
adc
jmp
dec
incl
adcl
jmp
or
mov
repz
stc
sbbl
lock
das
xchg
fucomip
std
mov
mov
add
or
push
incl
incl
jbe
das
add
cld
cli
dec
cmc
outsl
shlb
mov
or
push
das
cs
xor
stc
sbb
fisubs
lods
les
call
addl
or
test
test
inc
ljmp
nop
add
ret
repz
inc
xor
je
pop
sbbb
call
pop
addb
push
mov
push
xchg
xchg
cmc
sub
test
stc
or
inc
fucomip
cmpsb
cld
outsl
inc
jmp
jno
push
cmp
test
imul
outsb
aaa
sbb
cli
je
and
stos
inc
outsl
xor
pop
rclb
imul
sbb
outsb
das
add
stc
inc
aaa
jmp
outsl
es
cld
ret
mov
out
stos
dec
inc
arpl
cmpsb
inc
aam
or
adc
fadds
lock
pop
ja
and
aas
sub
cmp
in
xor
clc
movsl
add
xchg
xchg
daa
cmp
push
nop
in
cmp
nop
inc
shrb
mov
aaa
push
repz
fwait
adc
add
or
jl
cmpsl
add
xor
xchg
cmp
aas
idiv
movsl
lret
out
cmpsl
add
loope
fcomi
adc
js
imul
xor
push
xor
jge
push
xlat
imul
bound
dec
xor
decl
dec
addb
jbe
mov
cmp
dec
dec
shrl
aam
data16
jecxz
fs
cmp
loop
loop
dec
mov
mov
sub
inc
bound
cmp
pop
pop
jmp
jae
aad
xchg
cmp
xchg
cli
das
js
jo
rcll
dec
xor
adc
addb
dec
jmp
add
cmp
push
adc
or
mov
xchg
cmp
fs
inc
xor
clc
cmp
rolb
lcall
inc
sahf
pushf
pop
push
insl
push
out
sbb
out
scas
push
lds
lds
stc
or
sbbl
sahf
adc
push
inc
pop
or
adc
movsl
mov
loopne
js
and
dec
lods
jecxz
aaa
std
test
and
jns
out
outsl
cmp
fists
xchg
bound
outsb
lret
mov
aas
xchg
gs
xchg
inc
mov
jno
mov
pop
ljmp
xor
sbb
cli
jnp
dec
xor
mov
push
jp
cs
xor
jnp
test
clc
aaa
push
jae
add
dec
or
insl
outsl
fdivrl
addl
adc
mov
adc
adcl
addb
or
call
adc
pmullw
mov
add
inc
or
cmpl
ja
addl
push
popa
std
sub
cmpsl
dec
scas
jecxz
inc
or
jg
xor
fwait
addl
inc
push
jnp
and
adcb
jo
in
sbb
dec
roll
push
in
or
add
jge
or
fidivs
mov
aas
notl
fwait
pop
jb
les
div
idivb
mov
mov
test
sti
in
pop
punpckhbw
sub
xchg
dec
subl
cli
outsl
out
adc
pop
incb
in
jae
aaa
jge
add
sbbb
loope
sub
aas
test
push
outsl
outsb
and
or
imul
dec
out
push
jl
mov
test
pop
imul
aas
clc
jae
add
cmp
jecxz
add
pop
adc
or
std
xchg
dec
test
pop
fsubrl
aad
cli
inc
mov
testb
test
or
and
hlt
adc
xor
and
enter
and
in
sbb
or
ud0
or
xchg
jle
dec
test
xchg
push
xchg
cmc
test
adc
mov
sub
popa
jnp
fldcw
or
jo
loope
insl
jle
add
inc
xor
notl
in
pusha
inc
mov
adc
pusha
xorl
loop
arpl
ljmp
bound
iret
sbb
mov
pushw
mov
xchg
js
dec
dec
inc
add
sbb
mov
xchg
dec
daa
mov
pop
out
rcrl
mov
add
pop
lcall
pop
in
push
xor
fldt
fisubrl
loopne
pop
xchg
ja
bound
ss
sbb
mov
jmp
das
orb
test
xchg
push
pop
push
mov
or
add
xchg
push
cli
rcll
std
int
in
aas
add
jnp
inc
arpl
push
or
pop
pop
push
fs
lock
mov
out
add
push
mov
cmp
outsl
cs
bound
mov
mov
add
inc
mov
mov
ret
fldt
adc
pop
or
push
or
add
push
movsl
lea
adc
sub
pop
push
push
test
or
mov
xchg
test
dec
stos
in
rcr
pop
test
jecxz
cmp
decl
mov
pop
std
pop
or
orl
subb
mov
jecxz
push
std
and
inc
jmp
xchg
dec
pop
mov
pop
adc
fwait
sub
leave
add
dec
mov
add
dec
daa
pop
pusha
daa
lods
pminub
push
sbb
jge
test
xor
and
pop
or
xor
jecxz
or
mov
xor
sti
das
mov
jnp
icebp
or
test
dec
cmc
popa
dec
stos
cltd
mov
inc
out
shl
or
or
lds
or
jmp
mov
pop
jno
bound
loop
or
mov
or
fdivrl
out
or
insl
jne
clc
les
xchg
pop
add
jno
std
or
cmpsl
xor
push
subb
aam
aad
lods
mov
inc
ja
mov
mov
pop
adcl
jp
pop
testl
sar
sbb
cmpl
cmp
xchg
add
shll
add
clc
or
sub
mov
adc
addl
or
call
cmc
cmp
xchg
adc
jp
push
cmp
jl
inc
rcll
mov
scas
sti
add
outsb
add
in
push
addl
adc
test
mov
or
mov
bound
and
mov
adc
sub
aas
sub
outsl
mov
popa
dec
add
faddl
add
lods
dec
stc
mov
inc
xchg
sti
js
cli
ret
jecxz
add
outsl
lahf
push
mov
imul
das
push
das
adc
jnp
xor
push
push
mov
mov
push
divb
push
aaa
or
jecxz
lds
add
das
aam
sbb
popa
or
stos
mov
jg
outsb
jl
jmp
repz
mov
pop
scas
sti
insb
dec
in
add
inc
fistpl
lods
or
data16
xor
test
pop
mov
data16
in
movsl
adc
pop
xor
cs
pop
jmp
jne
fnstenv
sub
gs
mov
mov
jecxz
lea
cmpsl
dec
add
fisttps
pop
dec
outsl
and
outsl
push
leave
fs
xchg
jle
in
jp
cli
js
add
inc
pusha
stos
hlt
arpl
or
lret
sbb
leave
arpl
mov
mov
lret
jmp
lret
sbb
insl
call
out
mov
adc
shr
in
roll
testb
dec
in
popa
mov
lcall
js
aam
out
aas
gs
jle
fildl
mov
stc
popa
pop
xlat
ljmp
sar
mov
mov
cwtl
fsubrp
in
add
leave
mov
pop
xor
stos
inc
push
clc
gs
int
aas
test
pop
and
out
add
negl
sahf
aad
loope
and
mov
mov
aad
sbb
add
push
xchg
pop
and
xor
pop
cld
out
fs
aas
addr16
mov
adc
sub
repz
and
lret
outsl
pop
or
shrl
mov
in
push
jne
sub
arpl
sub
arpl
pop
in
mov
jae
aas
adc
jnp
popf
jl
mov
sub
loope
pop
and
enter
int
or
in
add
dec
dec
arpl
pop
es
fcompl
bound
xor
pop
out
mov
aaa
roll
mov
mov
int
and
rorb
lret
lods
in
std
arpl
add
mov
inc
popa
sub
mov
idivb
pop
incb
out
movsb
and
push
or
cli
pop
and
inc
add
lcall
in
stos
test
dec
cmp
fs
sar
insb
pusha
or
mov
mov
out
incl
or
hlt
push
fwait
sbb
pop
and
shll
pop
enter
mov
add
xchg
ljmp
push
ret
cli
lret
mov
fistps
insl
iret
shr
repnz
mov
pop
ss
addr16
xchg
mov
out
mov
insb
mov
inc
inc
lahf
push
insl
stos
in
mov
movsl
mov
and
lock
lret
pop
inc
mov
dec
movswl
repnz
jns
cli
addr16
mov
adc
sub
cmp
ret
ja
and
lods
mov
repz
clc
pop
pushf
insb
movsl
push
ds
in
pop
in
mov
out
gs
jnp
or
ljmp
cld
sbb
fnsetpm(287
mov
std
inc
or
lret
aam
fcmovne
dec
pop
in
loope
and
loopne
aaa
mov
addr16
xchg
add
xor
lret
sbb
mov
jae
pop
push
test
inc
das
add
cld
mov
jae
cmp
outsl
std
mov
mull
push
sahf
push
xorb
mov
in
jmp
pop
loope
sti
add
fwait
nop
cmc
adc
cmc
xchg
adc
add
rcrl
pop
lea
xchg
imul
add
add
fisttpll
movsl
sahf
lods
decb
jp
jmp
fldenvs
sbb
push
jg
dec
std
out
insb
mov
movsb
decl
mov
andb
xchg
mov
pop
cwtl
sub
pop
jmp
xlat
loope
mulb
add
stos
jnp
flds
mulb
adc
sahf
insl
mov
or
and
add
icebp
mov
fnstenv
xorb
enter
add
sub
lock
dec
fistps
sub
cmp
cs
cmc
sti
mov
into
and
push
jge
fsincos
pop
aaa
and
push
pop
mov
jle
push
mov
mov
pop
xchg
sbb
add
iret
push
inc
sbb
mov
inc
or
clc
pop
pop
xchg
jmp
inc
push
push
push
xchg
repnz
aas
paddb
call
sbb
mov
dec
sbb
inc
push
sti
inc
sbb
orb
fisttpl
jmp
adc
or
or
cli
push
add
lret
and
mov
dec
sbb
mov
cmp
mov
into
jmp
inc
pop
iret
xlat
push
out
sti
test
fisubrl
imul
jg
mov
insl
push
and
add
adc
inc
pop
xchg
rcrl
rcr
push
into
faddl
jmp
insl
sub
aam
shr
lahf
es
dec
add
movl
lahf
sbb
inc
or
es
adc
jmp
jp
movsl
mov
mov
sub
scas
arpl
push
xchg
das
sub
or
int3
or
xor
repz
stc
adc
lea
lods
repz
ljmp
hlt
or
sub
loope
xchg
xchg
mov
mov
mov
jp
add
out
inc
pop
sti
xchg
jno
mov
cmp
or
loopne
loop
and
arpl
fwait
aam
pusha
call
jne
loopne
add
rol
jecxz
sar
xchg
push
cs
mov
roll
dec
add
mov
push
idiv
sub
jg
pop
jnp
add
fdivrs
push
fistpl
das
pop
sarb
clc
roll
std
lcall
les
push
adc
shrb
push
mov
or
mov
or
inc
push
xchg
inc
jle
aaa
insl
add
lock
je
aad
inc
jo
push
push
pop
scas
ja
jnp
hlt
add
in
sub
add
insl
add
push
and
mov
es
popa
mov
in
out
shlb
aas
xor
xchg
stos
std
xchg
addl
je
lock
push
lahf
test
jnp
lock
aam
fcoms
popf
iret
stc
movb
rcrl
shll
mov
icebp
and
and
imul
and
pop
inc
pop
push
mov
mov
idiv
and
xor
add
imul
call
arpl
pop
and
sbb
push
shll
notl
xor
pushf
test
xchg
pushf
mov
xchg
dec
dec
addl
push
insl
push
xchg
add
jge
pop
mov
jmp
add
data16
fldt
inc
out
arpl
or
mov
xchg
mov
pop
sti
push
gs
sbb
rcrl
xchg
or
mov
pusha
stos
imul
outsl
aas
cmc
xchg
sti
mov
push
jle
xor
pop
xchg
shrb
les
or
push
dec
pop
mov
jns
lahf
dec
push
test
mov
arpl
add
int
scas
jne
jg
pop
outsl
and
movsl
ss
mov
xor
jo
test
popa
out
mov
pop
xchg
jae
stc
cltd
mov
dec
push
or
lock
mov
sar
jmp
push
sbb
sub
or
lds
push
adc
xor
cmpsl
and
adc
rorl
loope
xchg
mov
jnp
adc
pop
lods
fildll
cmp
in
jecxz
jae
arpl
das
add
add
sbb
push
push
loope
sub
mov
cmpl
sub
sbb
pop
cmp
fdiv
xor
push
lods
popa
inc
in
out
mov
xor
pop
in
addr16
sub
cmpsl
mov
mov
add
xlat
pop
std
fcomps
xor
cmp
fwait
scas
ret
clc
stos
inc
mov
mov
jl
int
push
data16
push
or
lret
mov
adc
or
stos
call
sub
decl
jecxz
scas
pop
fistpl
jnp
insl
insb
push
in
jmp
xchg
das
loopne
mov
mov
arpl
add
mov
or
arpl
pop
shrb
gs
cmc
adc
jmp
outsl
and
sbb
out
int
test
or
mov
inc
mov
and
jg
lds
je
cmp
out
mov
outsb
out
fwait
jg
xor
xchg
in
jecxz
sub
sub
add
icebp
jo
adc
push
stc
xchg
out
das
sarb
push
mov
std
sbb
shlb
push
or
and
push
xlat
or
out
insb
aas
add
imul
gs
sbb
lahf
fistpl
cmp
push
imul
ss
insl
aas
aaa
sbb
jg
lret
leave
enter
pop
pushf
cmp
mov
xchg
cli
mov
gs
fs
push
pop
dec
mov
xor
cld
fwait
sub
mov
add
js
es
lea
popf
hlt
cli
jg
call
cmp
fildl
dec
mov
fdivrs
jno
incb
inc
push
shlb
arpl
push
sahf
jp
dec
mov
lret
push
push
imul
sbb
imul
adc
out
roll
test
and
cmp
or
scas
xor
testl
add
xchg
mov
push
icebp
out
orb
inc
outsb
cmp
and
push
decl
sub
fs
std
dec
mov
mov
mov
jnp
stos
jne
loope
or
lods
daa
push
push
out
arpl
push
loope
xor
mov
or
mov
ss
jl
jb
cli
into
inc
divl
cld
out
imul
rorl
add
jge
mov
push
ja
cmpb
jb
jge
insl
lock
xorb
clc
cld
mov
rep
out
sbb
pop
lcall
dec
dec
cli
int3
jg
jle
push
push
dec
loop
sub
mov
push
loopne
push
mov
jle
test
icebp
dec
in
scas
aaa
xor
adc
sti
xor
add
filds
shlb
sbb
das
rolb
sbb
add
cs
sbb
ds
and
sbb
insl
lret
pop
push
ret
fistps
in
es
ljmp
ss
jb
push
int
and
mov
mov
jmp
mov
push
cmc
or
stc
and
xorl
movsl
cmp
dec
out
push
jno
adc
daa
mov
movsl
jecxz
xor
jns
mov
add
jge
leave
ja
iret
mov
das
notw
jmp
dec
outsb
adc
sbb
sub
dec
in
adc
lret
test
je
je
jbe
jne
ljmp
ja
jbe
insb
shrl
push
popa
jne
mov
lret
in
outsl
aad
jmp
je
jb
pop
sbb
daa
jb
jae
jne
shrl
pop
scas
outsl
jne
popf
daa
xchg
je
shll
jno
push
adc
xor
sarl
and
or
fcompl
cmp
jo
jno
mov
fcompl
jbe
js
js
xor
xchg
ja
inc
js
adc
jb
jne
jno
mov
jnp
mov
cs
ja
jns
jp
jl
dec
shll
subl
xchg
lret
gs
in
fistpll
jp
jbe
cmpsb
pop
cs
lods
cmpsl
popf
xchg
cmp
imul
cwtl
cmpsb
imul
in
mov
or
and
lret
cmp
inc
push
imul
lcall
cmp
jbe
inc
test
lods
imul
adc
add
xchg
cmpsb
xor
and
push
ja
jae
jne
jbe
js
jb
pop
stc
jbe
jb
je
jne
outsl
jo
lret
ja
adc
xor
jmp
push
pop
inc
mulb
lcall
out
add
xchg
cmp
daa
jnp
dec
push
fldenv
add
add
and
leave
repz
in
sub
xchg
add
cmp
fs
xchg
gs
outsl
fldenv
adc
jo
push
cwtl
fnstenv
sbb
daa
nop
jb
mov
dec
jno
jae
insb
mov
fs
jo
jbe
pop
jno
or
mov
sbb
imul
pop
push
dec
xlat
movsl
cmp
ja
sub
lods
ret
adc
shrb
jno
mov
ss
rcl
jae
jecxz
add
dec
inc
pop
jg
xor
push
mov
jbe
jno
jb
xlat
je
lret
in
in
jae
outsl
add
jne
into
pop
cmp
adc
xlat
xor
mov
jae
xor
shll
adc
and
xor
sbb
loope
iret
jae
or
int
jb
mov
aas
test
ja
dec
jbe
ja
daa
shll
int
jns
jae
fprem1
lret
in
insb
jne
mov
jns
iret
jp
jl
dec
shrl
jnp
ja
or
shll
jg
mov
fnstenv
std
jmp
jb
jbe
js
jns
jnp
add
fcompl
mov
jne
lret
je
in
mov
out
jae
jbe
mov
cs
jne
jno
jae
je
dec
fdivs
je
arpl
movsb
imul
jmp
push
adc
shll
outsl
outsb
subl
inc
aas
lret
in
mov
divl
movsl
decl
xchg
ja
jbe
jb
push
push
jno
dec
insl
gs
outsl
cmc
insl
pop
jb
mov
pop
dec
jb
imul
repnz
pushl
push
jb
outsl
popa
fs
addr16
pusha
insl
imul
inc
bound
fistl
orb
bound
pop
outsb
dec
push
insl
addr16
lcall
mov
je
pop
sti
mov
jo,pt
arpl
call
pusha
aas
pop
pop
jo
stos
std
jb,pt
jo
insl
pop
pusha
jo
insl
mov
cmp
pop
outsl
bound
push
push
cmp
inc
std
dec
pop
pusha
outsb
clc
jbe
dec
arpl
pop
push
mov
mov
sti
insl
pop
pop
jo
in
subl
addr16
mov
sub
std
xchg
sti
inc
popa
imul
ds
pop
insl
popa
push
in
in
fildl
cmp
pusha
push
outsl
jb
and
jo
inc
inc
mov
addr16
lock
push
pop
addr16
shll
ds
imul
cmp
pop
test
cmp
outsb
pop
in
gs
cmp
lock
inc
pop
and
ja
pop
addr16
cmp
jg
inc
popa
bound
cli
fs
pop
inc
fbstp
cmp
pusha
dec
pop
gs
test
cld
dec
sbb
mov
ret
jb
imul
dec
cmp
addr16
sbb
insl
popa
imul
inc
pusha
xchg
je
push
mov
pop
push
adc
xchg
test
insb
shrl
dec
rcrl
fisttpl
push
sbb
jno
stc
loopne
jno
sbb
jle
pop
imul
insl
xchg
pop
jo
jg
fsubl
or
dec
inc
pusha
cmp
outsl
jno
arpl
pusha
pop
cs
jno
dec
fldcw
dec
inc
gs
incl
inc
dec
dec
inc
dec
sub
mov
incb
insb
popa
ret
outsb
jmp
pop
mov
insl
mov
inc
ja
lahf
push
jb
data16
pop
pop
das
neg
ficoml
arpl
daa
frndint
cmp
jae
push
data16
ret
jae
daa
cli
xor
pop
aas
inc
lahf
lods
std
outsl
mov
addr16
xor
inc
cmp
outsl
sbb
cli
or
and
or
or
addr16
insb
loope
xchg
clc
push
std
cmp
push
int
cmpsl
cli
clc
cmp
imul
mov
mov
gs
sbb
outsl
dec
bound
pop
mov
push
mov
xchg
pusha
arpl
pop
insl
iret
imul
pop
pusha
in
loope
mov
xor
xchg
gs
xchg
fdivrp
inc
popa
pop
lret
xchg
dec
pop
popa
pusha
popa
insb
dec
or
cmp
adc
or
ret
adc
arpl
add
inc
test
imul
dec
popa
cmp
insb
lods
adc
sub
adc
je
shrb
addr16
dec
cmp
pop
push
and
stc
jno
insl
arpl
dec
pop
xchg
jno
ja
std
push
ret
insl
imul
pop
arpl
std
sahf
mov
or
movsl
adcl
mov
pop
nop
dec
jne
inc
pop
jmp
dec
pop
bound
mov
ds
daa
xor
inc
rcll
and
inc
xor
pop
sbb
xor
inc
dec
cmp
inc
cs
daa
or
pop
pop
pop
mov
jno
dec
or
push
clc
test
inc
pop
fs
and
arpl
pusha
sbb
jbe
sar
adc
inc
push
mov
stc
cmp
rol
lods
shl
push
push
pop
inc
pop
fs
lret
rcr
cmp
jle
imul
push
ljmp
cwtl
popa
mov
insb
aad
pop
stos
incb
pop
push
pop
sbb
fcmovbe
test
inc
push
adc
insb
pop
pop
xchg
js
das
inc
dec
in
jnp
leave
sbb
daa
cmp
or
mov
lahf
cmp
add
bound
bound
pop
ja
add
aaa
mov
lods
aad
and
stc
ds
cmp
or
cmp
cmp
daa
pop
dec
dec
bound
outsl
incb
sar
imul
dec
ds
test
cmp
cmp
call
mov
outsb
addr16
pop
jo
or
inc
dec
cmp
pop
das
mov
outsl
jo
inc
cmp
cmp
cmp
push
jbe
lock
push
andl
sub
jnp
std
ret
std
cmp
cmp
jo
cltd
push
pop
pusha
outsb
cmp
cmp
subb
jg
lods
daa
aas
jns
push
cmp
insb
insl
sbb
das
aam
insb
outsb
mov
mov
dec
pop
add
movsl
lods
mov
fcmovnu
out
adc
cmp
jae,pt
cmp
inc
cmp
lock
ss
push
xorl
es
pop
inc
cmp
add
mov
jg
scas
mov
cmp
and
pop
pop
mov
bound
cmp
mov
dec
pop
lods
popf
mov
insl
cmp
dec
ja
or
insl
popf
pop
sub
adc
add
cmp
cmp
sub
dec
sub
cmp
inc
cmp
pop
add
cs
cmp
test
cmp
aas
bound
pop
fcoms
ficompl
cmp
insl
sub
testb
dec
cmp
pop
arpl
fildll
outsl
imul
cmp
push
stos
push
clc
aaa
cmp
mov
pop
sbbl
add
lahf
dec
aas
cmp
sub
mov
addr16
popa
mov
fstp
ficomps
dec
push
ja
cmp
enter
pop
pop
imul
scas
inc
mov
push
push
cld
add
mov
arpl
pop
cmp
aaa
shl
jg
clc
dec
pop
cmp
bound
push
dec
sub
and
inc
mov
sbb
ds
push
cld
add
inc
data16
pop
fld
andl
mov
fwait
nop
in
inc
imul
outsl
cmp
dec
jg
dec
inc
inc
inc
push
out
stc
cwtl
push
xchg
pop
jno
out
loopne
lods
imul
cli
xchg
mov
sbb
xor
or
push
mov
imul
sbb
popa
and
outsb
pusha
jmp
or
pop
je,pt
jo
inc
pop
imul
imul
subb
fdivr
jo
outsb
fiadds
mov
in
xor
sbb
sbb
gs
insl
loopne
mov
scas
adc
cmc
lods
push
cmpsl
mov
std
fs
loopne
add
push
dec
lahf
dec
mov
call
mov
mov
jnp
stc
push
mov
pop
mov
addl
sub
lds
mov
cs
sti
pop
pop
adc
ucomiss
nop
pop
arpl
pop
std
mov
das
popa
jp
std
push
leave
popa
outsl
cli
mov
push
pop
popa
fildll
out
sbb
rcll
push
add
xchg
sbb
jnp
xor
call
jb
xor
negl
pop
mov
xchg
lret
sbb
pop
outsb
adcl
in
jp
rcll
ficompl
movsl
mov
pop
test
sti
jno
cltd
jmp
or
cmp
inc
outsb
dec
jne
test
xchg
push
into
inc
dec
outsl
cltd
pop
paddd
lea
sbb
xchg
dec
insb
cmp
mov
sbb
lea
mov
inc
outsb
inc
imul
sbb
sbb
mov
movl
adc
xor
xor
sar
and
cli
push
imul
inc
xor
mov
sub
or
xchg
mov
mov
popa
dec
dec
mov
stos
lret
stos
sahf
scas
in
mov
and
lret
mov
xor
in
scas
cmc
in
in
mov
mov
mov
mov
scas
sub
mov
idivb
mov
stos
scas
xabort
out
idiv
xchg
rsm
mov
mov
mov
mov
xchg
das
int
in
les
mov
lret
mov
mov
mov
sarl
ljmp
out
es
in
mov
stos
mov
jl
mov
dec
nop
jmp
inc
cmc
mov
mov
mov
repnz
jg
ljmp
sahf
lret
fnsave
out
mov
pop
repnz
int
idivl
cmc
int
jno
mov
bswap
repz
and
mov
lahf
std
in
and
iret
mov
lods
mov
fsts
lock
mov
test
shrl
test
mov
mov
mov
mov
lods
lahf
fistpll
mov
cmc
add
xchg
lods
idivb
mov
pop
push
testb
icebp
dec
enter
ret
fisttpl
out
mov
adc
ss
ret
mov
out
mov
mov
mov
jl
loopne
xchg
mov
test
scas
loopne
mov
sarb
std
xchg
jg
in
lds
lret
repnz
rcl
push
push
jg
icebp
inc
xchg
fnsave
shrb
mov
enter
and
mov
fdivrp
std
test
mov
mov
mov
mov
mov
mov
enter
enter
mov
mov
sti
movzwl
hlt
mov
lahf
movsb
mov
inc
push
scas
scas
mov
out
lods
lret
lahf
mov
ret
test
incb
test
cmc
mov
gs
das
psubw
mov
in
iret
test
icebp
mov
lahf
in
movsb
in
outsl
into
lods
lret
cmpsb
mov
enter
lret
mov
dec
test
in
xchg
pop
jle
mov
lahf
out
rolb
mov
jg
sub
pop
les
int
dec
pushf
mov
mov
pop
dec
dec
les
xchg
outsl
and
scas
loop
iret
mov
out
mov
sbb
jmp
enter
lds
clc
mov
dec
lret
xlat
mov
mov
leave
mov
mov
jle
filds
mov
mov
insl
xor
mov
je
mov
mov
mov
mov
xor
cmpsl
inc
jmp
repnz
mov
lret
enter
inc
jg
test
mov
lds
mov
fstpl
lea
rcrl
and
mov
int
mov
out
imul
mov
enter
adc
ret
les
jmp
add
mov
dec
shl
scas
mov
ret
stos
frstor
xor
add
stos
mov
jg
into
daa
shrl
in
mov
int
popa
mov
add
stos
das
lods
pop
movsl
dec
rcl
hlt
rcl
repnz
cld
and
scas
fwait
sarb
lods
mov
xchg
movsb
outsl
dec
or
mov
adc
leave
mov
test
lods
xor
inc
mov
out
scas
mov
and
mov
pushf
les
jmp
mov
sbb
lret
cmc
cmpl
fisttpll
fldenv
mov
mov
cs
scas
in
lahf
aaa
push
shlb
popa
test
adc
mov
xor
dec
mov
in
mov
mov
adc
insl
dec
dec
lahf
shrl
stc
and
test
mov
cs
stos
mov
movsb
clc
or
adc
lret
mov
in
dec
sbb
mov
lret
xorl
int
pop
jmp
pop
shl
and
pop
pop
in
shrb
mov
xchg
cld
mov
lahf
shrl
mov
popa
std
in
out
lret
les
and
loopne
ffreep
mov
enter
test
orl
jmp
cmp
cmc
scas
iret
mov
sub
xor
out
lret
popf
jecxz
sbb
mov
lret
push
xor
dec
mov
fisttps
lret
rcl
iret
mov
pop
shrb
shrl
pop
jle
dec
insl
mov
out
iret
aam
addl
inc
orl
pop
sbb
lret
mov
rsm
repz
jo
dec
xchg
cmpsb
enter
fcomps
in
ffreep
cmpsl
enter
call
das
mov
adc
mov
pusha
faddl
aas
mov
push
lds
cld
xchg
jne
lahf
leave
mov
lock
xlat
mov
lret
out
add
fbstp
test
lret
shlb
rcrb
adc
xchg
add
out
mov
dec
lea
lret
leave
in
adc
lahf
enter
mov
outsb
dec
mov
out
ret
int
dec
mov
shlb
or
and
dec
mov
jo
pop
movsl
mov
iret
in
pop
jp
out
stos
lods
out
scas
ljmp
shrl
scas
mov
cli
jmp
stc
int3
mov
lds
mov
pusha
push
xchg
jmp
iret
fiaddl
or
out
leave
mov
dec
pop
outsb
lret
sbb
mov
xchg
pop
jle
mov
int3
ljmp
mov
into
push
push
mov
aas
or
sub
scas
int3
out
cmc
daa
stc
pop
add
mov
lret
aad
inc
or
sti
adc
shr
iret
cmp
stc
dec
iret
lds
mov
int
fadd
rcl
lds
insb
sub
les
ret
shlb
pushl
push
clc
and
int
mov
clc
push
add
das
stc
xchg
cld
int3
mov
lds
mov
das
aaa
xchg
shlb
repz
add
and
push
lods
test
fwait
xchg
mov
into
out
or
idivb
or
mov
mov
mov
adc
jg
sahf
mov
outsb
lahf
aas
rcl
push
repnz
fnstenv
ret
mov
mov
fistpll
scas
pop
out
nop
shlb
dec
push
in
call
iret
jmp
sub
in
lock
iret
rol
repz
xor
dec
sarb
mov
dec
into
pusha
jmp
inc
rcrb
xor
push
mov
xchg
outsl
mov
iret
imull
push
movsl
mov
mov
sbb
popa
mov
pop
xchg
daa
imul
mov
pop
jle
aam
mov
movsb
aas
mov
jecxz
mov
cld
nop
shll
xchg
sub
std
in
inc
iret
outsb
in
and
out
hlt
dec
lds
lahf
shrl
xor
in
mov
pop
jle
incl
mov
shll
dec
das
pushl
fistpl
in
ret
and
pushl
and
iret
mov
sahf
das
mov
dec
add
jl
dec
adc
notb
int3
cmpsb
enter
pop
icebp
lahf
int3
cmpsl
mov
add
frstor
mov
mov
leave
jmp
dec
pusha
test
dec
addb
aas
or
leave
loope
fst
leave
lahf
das
ret
jns
out
mov
stc
and
mov
shlb
insb
shrl
mov
xor
ret
icebp
in
cli
and
mov
iret
inc
mov
shrb
fbstp
mov
mov
push
xchg
pop
movsl
mov
scas
leave
ljmp
out
push
push
test
rcll
pop
scas
clc
cld
inc
loop
dec
leave
call
stos
inc
mov
adc
fidivrl
fimull
jo
jno
mov
mov
and
scas
mov
repnz
aas
mov
lret
enter
adc
pop
add
pop
jle
in
lds
leave
jecxz
mov
dec
mov
and
mov
imul
cmp
push
aas
pusha
lret
jp
clc
loope
int
out
mov
mov
mov
movsl
xchg
sub
daa
mov
shlb
int3
sub
fwait
mov
iret
fnstsw
pop
sar
dec
popa
jg
mov
mov
mov
add
jmp
fmull
dec
sbbb
popf
shll
mov
imulb
dec
lahf
mov
fsubrl
shlb
adc
add
mov
lods
in
shlb
jge
fnclex
lods
or
mov
dec
mov
movsb
lds
iret
int3
cli
sbb
addb
in
lods
jmp
sub
adc
mov
lret
mov
mov
pop
lret
stos
mov
leave
divb
adc
mov
dec
dec
mov
fadd
std
in
int
pop
push
adc
mov
adc
mov
in
mov
sahf
movsb
ret
cmpsl
xchg
rcrb
lcall
jmp
iret
idivl
push
enter
iret
int3
movsb
sub
xchg
outsl
les
dec
sub
and
pop
cmpb
iret
cmp
mov
dec
ss
movsl
test
int
pop
shlb
lods
iret
in
into
aas
pop
add
rcr
imul
psubsb
pmulhw
repnz
scas
leave
mov
mov
mov
fs
jle
cmpps
movsb
mov
das
nop
jg
icebp
cmpsl
scas
mov
mov
lret
testb
xchg
lahf
pushf
bsr
inc
mov
dec
lahf
lea
loope
pusha
lahf
mov
mov
les
sahf
mov
adc
repz
and
pop
jmp
dec
push
fmull
pop
sbb
add
and
std
lods
ss
and
out
mov
or
mov
int
andb
in
dec
in
pop
movb
pop
mov
ret
imul
cs
lods
xlat
mov
out
pushf
mov
cmp
push
iret
mov
pushf
lea
fnstcw
stos
fildl
fld
hlt
arpl
fdivp
bound
ret
pop
pop
shll
insb
adc
dec
mov
insl
out
iret
insl
pop
jb
mov
dec
mov
or
mov
push
fbstp
xor
enter
outsl
addb
adc
pop
xchg
les
push
ljmp
movsl
or
lret
movsb
ds
stos
mov
hlt
lret
pop
mov
or
cmc
fwait
jbe
loop
or
stc
cmp
push
dec
push
cli
push
jae
jb
pop
insl
jae
insb
sub
cmp
repnz
lret
sahf
mov
mov
sbb
and
repnz
sub
cld
xor
outsb
std
sbb
insl
cld
dec
cmp
and
insb
cli
sbb
sti
jno
xor
jmp
daa
and
and
jb
jo
pusha
je
sti
adc
std
mov
imul
popaw
push
dec
stc
aas
mov
imul
inc
lds
cs
cs
ljmp
cmp
imul
jo
std
push
imul
mov
adc
mov
sti
sti
mov
stc
aas
mov
lahf
insl
popa
pop
jns
pop
stc
push
std
mov
ja
push
lea
pusha
outsb
mov
inc
dec
dec
dec
cmp
cli
push
clc
pop
sub
gs
addr16
adc
imul
lock
leave
shrl
and
mov
adc
sbb
fldt
and
and
ss
imul
stos
mov
out
pop
jb,pt
iret
mov
imul
mov
pop
pop
fbld
or
pop
insl
int
cmp
dec
shll
pop
push
jno
inc
jo
clc
inc
pusha
insl
insb
or
insl
pop
gs
loopne
in
pop
sub
push
dec
dec
push
push
insl
push
ljmp
aad
pop
lea
push
imul
imul
mov
pop
jb
cmp
inc
aas
inc
outsb
pop
push
cmp
testb
push
cld
inc
push
pop
imul
sti
inc
call
jno
and
imul
jo
pop
outsb
pop
sbb
sub
push
mov
dec
inc
inc
inc
inc
inc
dec
cmp
fstp
mov
dec
dec
lahf
or
or
adc
pop
call
fildl
dec
sbb
sbb
dec
dec
sub
sub
add
pusha
insb
imul
insb
pusha
jne
sub
insb
and
daa
sub
push
cmp
xorl
lock
push
jo
aaa
sbb
pop
imul
rorb
or
inc
push
imul
ret
mov
adc
aas
daa
sub
dec
data16
mov
pop
sub
sub
and
test
arpl
sbb
pop
push
mov
jg
pop
sub
and
add
insl
data16
pop
sbb
mov
inc
pusha
bound
cmp
pusha
jecxz
pop
clc
scas
dec
mov
dec
push
dec
sbb
dec
sub
cs
add
pop
pop
insb
xor
imul
call
sub
or
cmp
pop
mov
inc
mov
outsl
pop
xorb
sbb
sub
inc
dec
fistps
int
push
pop
aad
pop
sarl
push
insb
neg
out
or
push
insb
test
cmp
imul
cwtl
outsl
sub
cmc
pop
cld
call
test
imul
sub
and
sub
jecxz
xor
xor
jo
xor
sub
fcmovnu
push
pop
push
js
sub
imul
idiv
pop
daa
das
sub
sbb
pop
pushw
pop
pop
or
push
sbb
inc
popa
dec
and
sub
mov
fbstp
outsl
arpl
sub
andl
add
adc
sarb
inc
pusha
arpl
ds
jno
add
arpl
sbb
rcrl
mov
ljmp
jno
xor
sub
mov
sub
cs
sbb
or
cmp
inc
bound
mov
fs
push
xor
dec
imul
sbb
jle
cmp
sub
pop
mov
pop
imull
and
pop
dec
jae
cltd
adcb
xor
insl
mov
adc
daa
sub
fistpll
sub
xchg
and
sub
lds
and
das
xor
xor
push
pop
das
insl
loope
sub
in
test
sub
repz
daa
cmp
cmp
inc
inc
mov
and
cs
jae
aaa
and
bound
dec
pop
imul
sub
jle
repz
pop
outsb
pushl
pop
popa
insb
cmp
and
ja
sub
scas
add
je
pop
imul
in
adc
lods
push
fwait
jo
mov
mov
inc
or
dec
push
imul
sti
pop
dec
inc
pop
popa
arpl
imul
inc
repz
aas
bound
dec
cmp
ds
jbe
lea
ja
jb
popa
pusha
dec
notl
jae
mov
sbb
inc
repnz
lahf
pop
cmp
pusha
insl
xor
cmp
cli
inc
jmp
cmp
pop
mov
inc
dec
bsf
xchg
cs
dec
arpl
sarl
outsl
sbb
popa
xor
std
ja
inc
shrl
scas
cmc
inc
pop
imul
jno
inc
fldcw
cmp
fs
mov
outsb
push
daa
pusha
pop
fistpl
dec
pand
cmp
popa
call
inc
ja
out
cmp
outsb
pusha
inc
arpl
loopne
pop
push
cmp
outsl
sbb
add
sub
roll
xchg
sbbb
dec
arpl
sub
movsl
inc
jae
cmc
imul
cmp
dec
popa
aas
cmp
bound
xor
ja
sub
sbb
or
fcmovnb
pop
pop
aas
daa
add
lock
push
push
popa
insb
jecxz
xchg
pushl
cmp
cmp
inc
ds
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
push
push
dec
push
push
iret
sbb
fisubs
dec
xchg
push
dec
and
pop
shll
mov
je
inc
cmp
cmp
pop
aas
cmp
mov
jecxz
loope
inc
push
pop
dec
lock
mov
sub
dec
jne
pop
pop
outsb
mov
cmp
dec
insb
inc
jmp
mov
jecxz
pop
pop
inc
imul
cmp
aas
dec
inc
sub
sub
inc
cmc
cmp
add
cmp
call
repnz
push
dec
je
sub
jae
out
pusha
and
cmp
jo
test
ds
ds
inc
sub
imul
mov
orl
dec
ret
lods
lcall
sub
jb
inc
cmp
push
aas
sub
addr16
fucomi
dec
lea
stc
add
outsl
push
and
push
movsl
xchg
and
push
ficoms
clc
andl
inc
rolb
cmpsl
jg
cld
incb
xor
std
cltd
add
ds
xor
and
push
sub
xor
mov
popf
sub
pop
and
mov
sub
shrb
xchg
fstpl
pop
adc
loopne
cmpsl
rol
scas
arpl
ja
sub
adc
outsl
fldz
cmp
dec
inc
jo
mov
clc
sub
imul
jne
sbb
inc
outsl
stc
cmp
addb
imul
rcll
inc
lret
sub
mov
test
jmp
loop
push
fidivrl
jo
pop
std
mov
bound
push
shlb
push
mov
shll
adc
cmpsl
jno
mov
push
addl
add
in
jbe
pop
test
icebp
call
mov
sub
sub
inc
sub
push
sub
je
xchg
sub
sub
mov
sub
or
xor
xor
and
loopne
jle
nop
sub
sub
leave
cs
sub
sub
push
das
adc
pop
stos
cs
sub
call
dec
sub
sub
cmpsb
sub
inc
xor
sub
push
sub
xor
cs
xor
das
dec
sub
xor
mov
sub
xor
outsl
mov
das
add
cmp
xor
xor
das
out
out
xor
das
hlt
xor
xor
xor
jb
xorl
xor
sub
xor
xor
xor
xor
inc
xor
xor
cld
outsl
pushl
xor
xor
das
lock
xor
xor
xor
push
xor
xchg
clc
pushl
jl
mov
ret
xor
xor
adc
mov
call
jle
xchg
jecxz
in
xor
ss
xor
xor
ss
pushl
lods
xor
aaa
push
jg
mov
cwtl
xor
xlat
xor
cmp
xor
adc
pushl
cmp
ss
cmp
cmp
mov
xor
adc
sbb
lea
add
ss
pop
cmp
cmp
jnp
hlt
or
dec
jb
xchg
sub
sub
sub
pushl
sub
das
loopne
sub
xor
dec
xor
gs
xor
jle
test
ljmp
xchg
sub
xor
das
lret
sub
xor
cs
sub
and
xor
cmp
mov
xor
xor
stos
das
ret
xor
xor
sub
mov
or
push
cs
xor
sti
in
les
jmp
xor
ss
jg
das
ss
xor
aaa
cltd
lods
xor
cmp
cmp
mov
cmp
cmp
cmpl
xchg
cmp
cmp
cmp
adc
cmp
cmp
cmp
pop
cmp
sbb
dec
sub
pop
sti
lcall
rorb
sbb
sub
sub
jp
subb
sub
sub
idivb
sub
sub
sub
repz
out
insl
sub
pushl
decb
das
push
cs
sub
or
cs
sub
mov
mov
pushl
aas
cs
xor
arpl
xor
jmp
xor
jge
pop
mov
xchg
das
test
mov
lds
adc
jo
jl
xor
xor
loop
cld
xor
xor
sbb
arpl
push
mov
fwait
incl
xor
in
xor
xor
xor
xor
das
cld
ja
xor
xor
and
js
mov
mov
call
movsl
ss
xor
push
ss
xor
xor
xor
pushl
mov
xor
xor
fnsave
sti
xor
ss
xor
faddl
stos
pop
lds
xor
je
ljmp
xor
aaa
in
dec
xor
cmp
mov
lahf
aaa
mov
sarb
ss
decl
mov
xor
cmpsl
cmp
cmp
ss
jp
adc
cmp
aaa
cmp
scas
cmp
inc
jmp
or
sub
pop
sub
pop
adc
add
jle
pop
ja,pn
jg
sub
shrl
fdivs
out
out
ja
lock
das
sbb
cs
xor
aas
popa
inc
cs
jg
pushl
bound
jg
test
stos
cs
xor
das
inc
std
xor
das
rdtsc
adc
sbb
push
xor
das
mov
jg
sub
aas
or
mov
sub
pop
das
std
imulb
das
xor
push
xor
xor
mov
jbe
xor
cs
pushl
divl
test
xor
mov
test
call
das
aad
fidivs
add
xor
inc
xor
xor
dec
xchg
xor
xor
xor
pop
cld
xor
xchg
mov
ds
call
xor
xor
shlb
divb
sub
sub
ss
xor
mov
clc
test
xchg
ss
xor
adc
xchg
cmp
aaa
pop
ss
pushf
cmp
mov
repnz
call
mov
or
mov
cmp
data16
stc
dec
push
pop
insb
mov
pop
or
ljmp
mov
cs
sub
sub
pop
ljmp
xor
das
or
fwait
sbb
and
sub
pop
out
xor
fs
adc
in
clc
push
das
cmp
push
xor
mov
outsl
stc
xor
das
pop
test
sarb
mov
jmp
sub
sub
sub
mov
in
insl
std
sub
sub
dec
sub
sub
sub
gs
mov
lds
into
sub
das
clc
mov
sub
inc
in
pop
sub
sub
subl
mov
sub
fsubrs
repz
sub
xor
mov
sbb
out
xor
dec
cs
cmp
xor
xchg
sub
xor
sub
mov
sub
cmpsl
inc
das
push
xor
pop
sub
xchg
inc
popa
das
outsb
sub
xor
xor
clc
cwtl
sub
xor
sub
xor
das
sub
mov
popa
xor
jmp
pop
sub
mov
lock
xor
xor
sub
add
xor
lods
xor
xchg
inc
hlt
xor
xor
sbb
xor
xor
arpl
ja
daa
sbb
jg
sbb
sub
mov
mov
call
sub
das
cmc
sub
das
sbb
cs
push
add
ja
lcall
or
sub
fdivrs
inc
jo
sub
or
outsl
mov
js
add
push
arpl
fdivrp
jg
cmp
popa
insl
gs
popa
je
dec
push
dec
dec
inc
and
push
push
inc
push
inc
pop
inc
insb
imul
inc
outsb
je
jb
popa
imul
insb
adc
sahf
xor
push
sbb
popa
data16
adc
push
gs
cmc
ss
addr16
push
je
popa
mov
fsubr
dec
imul
dec
fs
jg
jg
push
push
outsl
xchg
arpl
xor
dec
add
sub
fs
je
arpl
fs
arpl
pop
and
jo
jae
arpl
arpl
imul
daa
and
mov
sub
popa
bound
and
adc
jo
pop
in
push
pop
ret
or
jbe
and
pop
push
jae
or
jbe
jae
inc
aas
ret
jo
adc
push
fnstsw
add
xor
and
sub
push
and
daa
fstpt
aas
jb
outsb
cmp
jge
inc
popf
inc
outsl
outsl
je
jae
outsl
outsb
imul
outsl
inc
daa
push
jae
shl
jbe
fldt
daa
inc
adc
lahf
xor
mov
sub
jne
in
out
out
insb
popa
push
ds
pop
inc
js
adc
push
data16
fsts
adc
dec
cmc
jo
adc
fucomi
inc
inc
fs
imul
push
push
mov
add
inc
xor
ss
lods
bound
push
mov
fs
mov
lods
inc
jb
out
sub
dec
outsl
sub
leave
mov
jb
or
inc
pop
imul
push
or
dec
pcmpeqw
sbb
dec
jae
jp
mov
shll
movd
in
testb
xchg
push
or
jns
add
imull
ja
dec
push
and
cmp
imul
insb
sti
imul
imul
dec
insl
imul
test
insl
inc
jae
jb
bound
std
ljmp
cmp
imul
dec
push
inc
push
cmp
mov
add
xor
pop
add
sti
out
adc
xor
xor
xor
xor
adc
mov
xor
icebp
divb
out
add
mov
out
ja
outsl
add
cmc
aas
mov
sbb
pusha
in
aaa
add
and
mov
sub
outsb
mov
pusha
inc
repz
add
sbb
jbe,pn
mov
repz
psubd
and
stos
mov
push
push
je
add
pusha
inc
fdivr
adc
or
add
or
jmp
or
add
add
cmpsb
test
cld
sub
add
jge
sbb
out
mov
scas
jo
sti
incl
push
cs
rcrl
repnz
inc
aad
sub
or
jbe
lods
movsb
test
invd
sub
orl
aas
stos
in
sahf
popa
push
arpl
cmpsb
cmp
arpl
or
add
incl
adc
add
ljmp
mov
push
xor
pop
push
arpl
jg
inc
insb
push
pop
sbb
adc
pop
inc
dec
nop
inc
push
add
mov
add
dec
ds
add
incl
rolb
nop
add
add
sub
cltd
shlb
jns
int3
incl
push
dec
add
add
add
incl
addb
imul
jg
sub
in
jmp
mov
add
add
push
add
jb
jbe
subb
sub
add
add
add
sub
lret
lret
or
add
gs
je
inc
imul
outsb
addr16
mov
fsubrp
or
gs
pushw
push
inc
insb
jne
push
ds
outsb
insl
and
je
push
imul
push
dec
push
add
outsl
jae
dec
daa
sti
pop
in
popa
outsb
fs
inc
jb
outsl
jb
inc
je
mov
aam
jb
cmp
outsl
jbe
out
arpl
and
jo
dec
popa
insl
push
xlat
outsb
leave
fiaddl
popa
sbb
mov
leave
mov
arpl
outsb
or
push
mov
dec
dec
xor
inc
outsl
jne
je
sbb
xchg
out
aaa
add
jo
outsb
outsw
adc
pop
imul
add
mov
test
adc
inc
mov
fs
jns
and
gs
into
xchg
dec
push
xchg
daa
push
stos
jae
outsl
outsb
fdivrs
fs
dec
fdivs
add
jns
out
mov
jns
testb
outsl
adc
and
gs
gs
add
push
outsl
outsl
insb
shll
xor
jo
or
sbb
inc
dec
stos
inc
pop
in
xor
add
imul
out
dec
bound
sbb
nop
jmp
jge
stos
jmp
adc
pop
adc
pop
or
adc
sbb
movsl
mov
fstpt
mov
mov
decl
or
insl
fldenv
add
mov
jp
call
mov
add
inc
push
sbb
ljmp
or
repz
and
inc
sub
push
push
jns
aaa
dec
out
ud0
inc
xchg
mov
cmc
add
xorl
insl
dec
cmp
lcall
sbb
xchg
lock
push
or
icebp
adc
add
mov
lret
mulb
add
mov
add
mov
pop
push
push
mov
fistl
mov
movsl
dec
mov
adc
or
insl
in
insl
push
andl
sar
or
out
push
mov
inc
int
lea
aad
clc
xor
cs
and
jno
jo
gs
ja
das
fbstp
pop
push
pop
pop
in
cmp
mov
dec
pop
je
wbinvd
mov
pop
loope
insw
mov
sbb
pop
sub
ds
push
fwait
add
jb
addr16
imul
arpl
pop
arpl
je
sbb
int
imul
jle
mov
bound
scas
ja
into
mov
iret
or
jbe
push
sbb
cmp
mov
outsb
arpl
inc
inc
js
inc
jb
dec
div
int
and
outsb
je
je
insl
mov
inc
arpl
push
jae
sbb
cmp
pusha
xor
sbb
shlb
xor
inc
jo
fistpl
or
out
inc
aaa
sbb
xor
insl
mov
out
and
fs
dec
fs
popa
push
inc
jnp
adc
dec
adc
mov
inc
gs
or
pop
cs
ds
push
outsl
mov
popa
rcr
jne
jae
adc
or
scas
push
push
or
ja
push
push
bound
jae
cmp
popa
dec
sub
sbb
popf
mov
inc
jne
ret
dec
jbe
jns
push
jo
push
xchg
aaa
mov
nop
insb
outsl
jns
insl
ja
mov
mov
insl
dec
imul
inc
add
btr
dec
add
add
pop
ja
sidtl
add
out
sbb
adc
mov
or
sub
inc
add
xor
fisubrs
fadds
fs
or
pop
push
aaa
mov
cmp
mov
inc
add
rolb
cs
pop
push
js,pn
inc
daa
nop
jmp
popa
movl
dec
flds
inc
cs
adc
int
xor
xor
scas
mov
in
pop
xchg
dec
jae
or
repz
adc
add
cld
in
sbb
stos
inc
add
adc
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
