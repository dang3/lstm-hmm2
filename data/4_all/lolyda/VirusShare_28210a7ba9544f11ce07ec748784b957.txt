mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
dec
jecxz
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
out
mov
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
mov
adc
repnz
not
sub
lea
mov
push
cld
rorb
shr
rep
pop
push
and
mov
movsb
das
je
or
mov
pop
push
push
lea
sub
or
sbb
jbe
push
sbb
cmpsb
or
shll
into
bound
dec
cmp
lods
stos
xchg
ss
int
sbb
fstpl
mov
xor
mov
pusha
sub
mov
push
mov
dec
sub
pop
pop
in
int
cs
das
jnp
sub
mov
shll
xorl
sub
ja
pop
sub
dec
je
jne
adc
sbb
add
inc
mov
rol
and
or
fdivs
dec
cmpb
jne
adc
inc
sub
push
adc
fnstsw
int
pop
push
pop
mov
push
cmp
inc
and
std
push
mov
mov
sub
mov
das
ss
push
mov
xorl
adc
loope
sti
push
test
enter
push
ret
std
fcoml
orl
in
lea
or
stos
push
lret
cmp
mov
inc
rorb
add
adcl
enter
jecxz
mov
aaa
adc
pushf
push
push
adc
push
add
cmp
pop
mov
mov
push
xor
rcll
rclb
cltd
add
sub
rol
or
mov
lods
jge
mov
adc
sub
je
ja
and
or
sub
or
push
mov
mov
or
inc
cmp
cmp
sub
testl
stc
mov
push
aad
cmp
add
pop
mov
add
int3
aaa
mov
in
xor
sbb
leave
push
test
mov
mov
pop
push
dec
fwait
sbb
popa
cmp
pop
push
adc
or
xchg
test
loop
outsl
pop
pop
ret
pop
push
push
cmp
push
or
add
scas
addl
pmaxub
adc
ret
xlat
jl
push
jns
dec
adcl
lret
add
add
or
push
jmp
sub
adc
insb
movsl
sbb
mov
jae
xchg
shll
jmp
xchg
adc
cmp
mov
popf
xor
and
or
outsb
mov
xor
mov
xor
dec
inc
sbb
movsb
and
out
mov
or
sbb
adc
cmp
push
mov
test
inc
push
adc
xchg
aam
adc
in
sbb
out
mov
pop
add
push
xchg
sbb
mov
shll
enter
sub
out
data16
sar
cld
lret
add
add
push
scas
icebp
jmp
add
cmpb
jne
test
jle
push
dec
mov
lods
add
push
xchg
clc
iret
or
or
jmp
pop
rorl
leave
xchg
addl
out
leavew
sbb
lea
fcmovnbe
loopne
test
sbb
sub
mov
xor
loope
pusha
push
add
or
pop
pop
sarl
leave
arpl
ja
push
mov
adc
pop
jb
std
loopne
sbb
ret
sub
bound
xor
shrl
push
push
into
jge
adc
mov
xor
lret
shlb
jecxz
push
fldl
jne
aaa
mov
call
rcrb
int3
fisubrs
mov
sbb
adc
inc
sbb
shr
mov
mov
fmuls
push
push
lea
push
shl
gs
andb
fcomps
jmp
scas
inc
stos
mov
push
rep
mov
sti
xchg
stos
movsl
xchg
xchg
fidivl
mov
adc
and
sahf
and
jmp
cmp
push
inc
jnp
pushf
and
jge
fimull
cmp
loope
lea
ret
idivl
xor
mov
mov
xor
pmulhw
popa
shrb
xchg
adc
sbb
lock
adc
pop
and
xor
jg
test
xor
mov
and
or
les
add
lea
dec
xchg
lret
dec
adc
xchg
nop
adc
sbb
in
fcoml
sbb
add
inc
loop
sbb
sub
inc
lret
lock
sub
roll
mov
xchg
xor
sbb
xor
icebp
xlat
push
push
pop
xlat
add
mov
or
adc
adc
movsl
mov
adc
aam
or
mov
or
and
jp
or
ja
add
adc
mov
dec
sub
popa
jo
pop
sbb
sub
in
add
fwait
push
push
jl
or
or
sub
cmp
push
or
pop
or
add
fldcw
xorb
dec
lods
rclb
mov
xor
dec
mov
push
add
inc
or
xchg
xor
push
or
cmpsb
jmp
mov
inc
out
subb
aaa
mov
scas
stc
notb
dec
push
sbb
push
imul
xor
in
test
stos
jae
cld
jne
inc
loopne
fsubp
add
out
add
icebp
ret
repnz
mov
and
lret
and
push
and
sbb
jg
iret
pushl
nop
adc
inc
cwtl
inc
imul
dec
outsl
or
sub
cltd
in
sbb
push
sbb
adc
push
push
adc
inc
sbb
pusha
test
mov
pop
xchg
mov
jb
dec
adc
inc
cwtl
movsl
sub
cld
sub
sub
mov
dec
insl
push
pop
out
mov
enter
call
mov
lods
sbb
stos
add
adc
out
mov
and
lods
sub
add
add
mov
and
and
lock
xorl
or
lock
sbb
xor
aas
add
aas
lcall
cmp
push
pusha
fdivs
push
xchg
cli
pusha
inc
sbb
pop
sbb
or
aas
clc
add
mov
mov
dec
jo
xor
gs
int3
sbb
sbb
adc
xchg
dec
jno
fs
inc
ss
mov
dec
add
xlat
adc
out
pop
rcr
xchg
popa
jns
sbb
scas
or
outsb
pop
mov
add
imul
mov
or
mov
and
xchg
sub
scas
adc
les
dec
mull
pop
js
inc
insb
mov
test
pop
sub
jb
gs
das
or
xchg
pop
adc
mov
loope
inc
clc
pushf
mov
mov
test
out
shll
fisubrs
dec
add
adc
cmpb
js
test
push
std
adc
mov
push
and
adc
and
sbb
jbe
dec
sbb
push
pop
lock
clc
pusha
cmc
adc
xorl
jl
int3
push
into
xor
pusha
mov
insb
mov
adc
xor
inc
jo
loopne
ret
and
mov
dec
lock
dec
and
ret
insb
jl
sbb
mov
ljmp
in
push
push
pop
mov
dec
push
jmp
aaa
add
and
shll
inc
cltd
sub
fs
out
sbb
xchg
lcall
sahf
movsb
xchg
outsl
decl
jnp
pop
pop
pop
fs
mov
in
or
bound
mov
fwait
adc
testb
jbe
in
das
or
xor
dec
in
push
push
adc
and
inc
mov
loopne
test
sbb
gs
mov
insb
jo
mov
clc
mov
lods
cmp
call
cmp
add
xor
pushf
sub
shlb
xor
rol
push
test
pusha
rcrl
dec
sti
mov
mov
in
mov
inc
test
inc
leave
xor
cmp
sbb
mov
xor
sahf
adcl
push
sbb
addr16
sbb
dec
sahf
adcl
jns
or
es
dec
mov
mov
fs
inc
push
push
add
loopne
scas
pop
int3
inc
inc
leave
xor
mov
push
lock
push
push
xor
cwtl
outsb
inc
lock
inc
mov
mov
mov
test
das
push
mov
int3
ljmp
cmp
add
js
sub
inc
sarb
and
dec
stc
mov
jge
int3
inc
lcall
mov
add
or
icebp
sbb
push
fmull
xor
mov
xchg
mov
dec
sbb
mov
sbbl
jne
ret
lcall
add
push
mov
outsb
aam
js
jbe
push
push
add
bound
or
xchg
or
push
xor
loopne
mov
fwait
std
sbb
xor
arpl
sub
push
in
push
ret
add
pop
jge
or
push
dec
pop
mov
dec
mov
mov
adc
adc
push
adc
into
sbb
repz
xor
out
sbb
call
jne
xchg
mov
mov
lret
test
sub
comiss
jno
fs
ficoml
popa
push
mov
and
sub
cltd
and
add
or
mov
add
sahf
jecxz
outsb
mov
mov
sub
cmp
push
push
ret
inc
insb
jo
push
sub
adc
xchg
sub
mov
xchg
cmp
aas
sbb
sarb
adc
dec
rolb
rorl
jae
fldl
aad
adc
call
lds
jmp
arpl
xchg
cli
imul
push
or
leave
jae
daa
sbb
push
icebp
pop
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
pop
and
push
mov
fildl
ja
add
or
stc
add
in
fsubl
and
and
ror
enter
and
shrb
mov
mov
lods
test
and
and
and
xchg
nop
mov
test
and
je
insb
push
fs
pop
push
and
and
push
dec
dec
inc
and
and
inc
cmp
xor
and
and
sub
and
and
and
sbb
adc
and
and
or
add
lahf
and
add
inc
clc
inc
rolb
stc
jl
inc
mov
inc
nop
inc
xchg
xchg
xchg
xchg
xchg
cwtl
pushf
mov
movsb
test
mov
xchg
xchg
xchg
mov
mov
and
and
rcl
fadds
es
add
inc
inc
in
lock
rclb
mov
in
push
mov
int
mov
pop
ret
mov
adc
mov
cmp
ljmp
nop
cmpsl
pop
add
mov
jo
ret
push
xor
add
in
insb
rolb
data16
out
mov
mov
xor
mov
fstps
hlt
inc
orl
mov
adc
inc
dec
fmull
or
cld
fmuls
data16
out
lahf
in
xchg
popa
cmp
out
insb
out
push
sbb
std
std
xchg
mov
aam
inc
xchg
lea
test
or
pushf
push
add
mov
xor
fldl
outsb
xor
mov
sti
and
inc
or
add
or
mov
add
jbe
aam
dec
movsb
cld
fdivrp
rclb
add
movzwl
jmp
sub
jbe
xor
cmc
push
pop
pusha
push
push
and
std
jg
imulb
xchg
cwtl
xor
inc
in
mov
mov
mov
mov
and
pop
mov
push
push
int3
inc
xchg
add
and
add
enter
das
push
imul
in
inc
lahf
mov
jg
xor
adc
test
mov
mov
mov
push
and
pop
cltd
stos
jne
fsubr
xor
jo
clc
in
or
jb
mov
inc
lea
into
icebp
cmpsb
inc
adc
into
int3
add
jle
daa
mov
bound
and
lea
add
xor
jbe
test
and
pop
xchg
jg
pop
and
nop
sbb
mov
dec
shll
push
inc
pop
and
xor
cld
dec
js
dec
add
mov
fsubr
imul
mov
lcall
push
aas
dec
jnp
adc
sbbb
push
add
adc
pop
or
or
sbb
movsl
leave
adc
mov
scas
pop
mov
dec
popf
or
das
add
in
imul
adc
nop
insl
mov
xor
adc
add
add
mov
dec
cmp
or
sub
pop
sub
mov
adc
aaa
inc
out
arpl
por
pop
shlb
xchg
pop
pop
xlat
mov
daa
push
addl
shll
das
rdtsc
lcall
fldt
pop
or
icebp
not
jne
roll
mulb
pop
mov
inc
add
mov
pop
push
xor
addr16
movsl
imul
mov
adc
fldcw
scas
inc
adcl
push
sar
or
jne
dec
out
mov
inc
aas
dec
dec
mov
jo
addr16
dec
add
enter
shll
lcall
rcll
inc
xor
dec
mov
lcall
in
imul
pop
negl
and
adc
shll
inc
add
dec
fxrstor
xor
mov
pop
dec
xor
shll
and
cmp
cmp
and
inc
add
add
popf
cmp
add
inc
loope
or
push
enter
xor
xor
adc
loopne
pop
bound
pop
add
pop
push
dec
inc
rclb
xor
xlat
sub
xor
sub
and
xor
rcrl
adc
or
dec
shll
add
jnp
add
ljmp
fcom
int3
shll
scas
test
fldenv
mov
mov
mov
add
mov
adc
pop
str
xor
mov
das
in
or
and
add
inc
cs
xor
imul
and
push
adc
add
xlat
xor
xor
repnz
stos
shlb
xor
loopne
aam
je
ror
enter
mov
cmpsb
imul
adc
xlat
jo
or
stos
nop
and
and
mov
xor
add
add
outsl
xorl
dec
push
and
daa
sub
xor
push
and
sbb
pop
adc
pop
decb
xchg
mov
es
leave
or
push
xchg
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
pushf
leave
fs
inc
push
inc
push
dec
xor
cs
insb
mulb
add
xor
dec
inc
push
sbb
or
roll
adc
out
mov
out
inc
push
mov
std
stc
cli
cld
idiv
std
add
nop
out
or
clc
cmp
stc
sti
ljmp
icebp
fwait
out
sbb
or
mov
pop
mov
dec
sbb
pusha
outsb
push
ljmp
insb
pusha
insb
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
incl
mov
push
sbb
and
pop
aas
pop
xchg
pop
inc
out
incl
xchg
push
inc
or
pusha
inc
add
pop
adc
push
add
pop
inc
add
sti
or
pop
daa
or
xchg
pop
jmp
pop
aas
lcall
fimull
xchg
insb
adcl
mov
dec
pop
bound
inc
inc
inc
jle
inc
lock
hlt
inc
mov
or
push
jmp
dec
xchg
add
pop
or
insb
or
or
push
xor
sbb
add
add
or
or
xchg
lret
xchg
push
addr16
decb
sub
add
fistl
std
jmp
jo
jae
arpl
daa
dec
in
movsb
add
pop
sub
pop
jb
push
shlb
push
int
repz
cmp
pusha
pop
outsl
pop
mov
pop
in
fistl
insl
pop
fldt
imul
cmp
call
in
push
push
inc
xchg
test
push
mov
dec
jecxz
inc
cmp
call
cli
jb
mov
push
loopne
dec
push
push
fisttps
cmpb
jecxz
add
loop
sub
in
sti
or
ljmp
dec
std
or
mov
push
ret
mov
dec
push
dec
test
fcomip
aas
or
pop
xchg
repnz
push
pop
add
dec
jo
jge
mov
add
or
lock
pop
push
inc
pop
add
incb
mov
mov
fldcw
sub
stos
sub
sti
lret
scas
sub
mov
dec
pop
notb
idiv
repnz
xchg
sbb
jae
arpl
add
or
popf
inc
adc
repnz
fsts
push
loope
sub
lods
jmp
push
and
dec
dec
xchg
test
push
mov
dec
cli
adc
or
outsl
push
divl
popa
sbb
aas
lret
mov
rolb
push
es
arpl
xchg
fildll
pop
xchg
inc
mov
dec
addl
aas
notl
cli
pusha
sbb
add
adc
cld
inc
push
jg
pop
mov
ja
aad
test
notb
or
popa
clc
xchg
out
cli
cld
mov
adc
cmp
add
sarb
cmp
cwtl
ja
aas
cmpb
pop
jmp
jl
cld
jno
fwait
loopne
in
jle
stc
jo
cwtl
mov
jmp
test
or
lret
mov
pop
insl
cmp
and
icebp
cli
cmp
dec
mov
mov
pop
ja
xchg
xor
fdivrs
xor
jo
xor
subl
cli
sti
mov
sbb
mov
dec
push
mov
dec
arpl
xchg
push
pusha
cmc
or
cli
adc
insb
decb
jle
lret
and
mov
jecxz
sbb
fistpll
out
jle
stc
jo
xor
cmp
jb
cld
add
mov
cmp
shll
inc
or
scas
mov
je
inc
dec
arpl
mov
cmc
in
jl
jne
mov
std
jno
xor
pop
sbb
fs
pop
adc
incl
in
ja
or
mov
dec
mov
mov
test
push
lahf
je
sub
pop
xor
cmp
mov
mov
jo
arpl
aas
xor
sbb
jmp
arpl
sbb
iret
sbb
std
cmpsl
idiv
xchg
das
sub
push
mov
addl
xchg
clc
fldenv
outsb
pop
jle
jecxz
inc
addr16
mov
outsl
push
in
mov
icebp
pusha
rcll
or
sahf
cmp
xchg
cld
in
ja
jne
adc
add
out
inc
in
push
arpl
xchg
out
or
cmp
xchg
or
mulb
xchg
sbb
cli
ror
xor
xor
jecxz
and
mov
dec
push
push
bound
fwait
dec
gs
leave
movb
addr16
add
decl
ret
mov
dec
push
or
stos
xchg
cmp
leave
mov
decl
rolb
shrl
test
sbbl
mov
ds
fdivrs
pop
pop
push
and
leave
jecxz
sti
inc
lea
in
xchg
add
xchg
mov
xor
jg
inc
inc
repz
inc
repnz
les
clc
test
insl
add
xor
mov
sub
test
and
lret
incl
lcall
fdivr
jecxz
pop
dec
push
mov
insl
call
call
in
mov
call
in
push
ljmp
pop
out
inc
loopne
add
ss
or
xchg
lods
popf
int3
filds
xchg
dec
push
xchg
ja
cs
out
xchg
xlat
mov
xchg
insl
cmc
add
outsl
jge
adc
stc
adc
jmp
outsb
or
pushf
pushl
icebp
xchg
xor
loopne
lds
popa
add
add
pop
cs
fildl
out
jmp
mov
mov
jmp
pop
out
fildll
sub
cs
repnz
push
or
jg
mov
arpl
fdivrs
jnp
adc
fwait
lea
fistpll
pop
dec
or
fisttpl
pop
adc
js
icebp
in
mov
data16
push
cmp
lock
out
in
xchg
addr16
aaa
add
shrb
xor
xor
dec
mov
lds
push
pop
pop
push
ret
mov
sub
in
in
std
sti
dec
xchg
inc
mov
jmp
inc
cmp
dec
cli
adc
adc
mov
mov
cmc
clc
call
cli
imull
fs
push
jmp
stc
sti
mulb
add
mov
pop
rcr
test
rcrl
push
arpl
add
decl
push
movl
add
xchg
das
cli
aaa
cs
pmulhw
aaa
stc
rcll
scas
in
sar
cmp
outsl
or
enter
add
jno
mov
out
xor
inc
mov
or
shll
lret
testl
sti
push
outsl
in
clc
mov
test
pusha
cmpsb
jg
add
pop
pop
jns
jecxz
cwtl
pop
loopne
imul
jge
aad
call
insl
mov
adc
jbe
cmp
jp
xor
outsb
or
mov
out
inc
push
push
test
jg
add
out
jl
inc
insb
or
lret
jmp
loope
inc
mov
mov
sub
out
jp
movsl
push
sbb
ret
test
in
xor
jg
imul
lret
jnp
sti
outsl
adc
cmp
inc
out
decb
out
dec
fistps
orl
dec
adc
mov
add
xor
push
or
mov
dec
negb
xchg
cmp
outsl
jg
pop
aad
inc
ja
clc
push
adc
sbb
jl
addr16
pop
std
or
or
or
cmp
shlb
push
scas
ffreep
jmp
inc
pop
add
cmpb
xchg
nop
arpl
xchg
jo
icebp
mov
call
mov
enter
sarb
xor
jae
inc
popa
and
jmp
cld
into
add
add
inc
xor
or
pop
mov
stc
or
rclb
ss
sbb
sub
test
sbb
pop
mov
je
pusha
fwait
or
std
sti
in
mov
incl
mov
popa
and
cld
cltd
adc
adc
pop
xchg
lock
push
lock
cmc
ds
out
repnz
dec
inc
lcall
add
cld
iret
push
push
pop
out
cs
pop
arpl
cmp
pusha
test
push
push
andl
incl
outsl
decl
cmp
ljmp
cld
sub
clc
jle
adc
dec
aaa
cmp
in
test
pop
push
pop
xchg
fwait
test
adc
adc
ljmp
clc
dec
int
jg
imul
mov
sbbl
arpl
pop
push
mov
xlat
mov
mov
dec
jmp
orb
iret
pop
icebp
sub
xor
insl
xor
mov
xchg
lret
mov
aas
popa
add
ror
jle
dec
mov
das
or
out
mov
sub
pop
pop
incl
in
mov
jg
ret
mov
mov
and
sbb
cs
es
dec
sti
push
test
sbb
dec
or
cmp
add
push
clc
in
aaa
clc
mov
and
es
and
inc
add
pushl
mov
push
loop
aas
cwtl
les
add
jno
ja
cmp
or
out
daa
mov
xchg
outsl
xor
or
pop
sarl
sub
addr16
test
data16
fldl
or
sub
dec
dec
push
cli
je
push
orl
fistpl
std
or
in
add
aaa
add
push
adc
cli
cmp
ffree
cmpl
das
lea
roll
psllw
rcr
mov
in
inc
mov
inc
add
sbb
sub
loopne
lds
inc
cmp
ret
cmp
mov
dec
repz
dec
in
lahf
in
cli
jno
lahf
mov
mov
sti
idiv
in
notb
std
in
inc
cmp
fwait
mov
test
push
add
mov
mov
sti
pop
push
pop
push
push
movsl
insl
mov
add
lock
mov
lret
dec
jmp
mov
out
sub
and
sub
adc
cwtl
outsb
push
cmp
or
lea
cli
je
push
or
cmp
mov
repz
loopne
std
iret
in
push
dec
lds
pop
loopne
dec
test
add
rorl
std
in
clc
imul
negl
jge
jp
insb
jg
les
pop
dec
inc
add
mov
mov
mov
mov
outsl
dec
adcb
int
inc
jge
add
es
or
out
insb
cmp
add
lret
testb
pop
dec
or
cmp
outsl
add
mov
aaa
dec
jae
jle
add
push
aaa
js
sbb
aas
pop
imul
push
adc
jg
cmpsl
sarl
das
orb
cs
pop
jl
inc
cmc
mov
ret
dec
inc
cmp
lds
dec
inc
pop
jo
cmpb
insb
cld
or
out
dec
roll
push
call
dec
dec
loop
ret
cli
std
adc
mov
fucomp
wbinvd
or
outsb
push
dec
push
fistpll
sarl
mov
rcll
inc
idivl
mov
cmp
sub
std
xlat
sub
sbb
jo
ja
les
addr16
xchg
orb
fbstp
jb
jae
aas
and
cli
aad
add
push
dec
pusha
jnp
hlt
lret
scas
xchg
jge
cmp
or
or
or
mov
and
call
xor
inc
clc
shlb
fstpl
jle
or
mov
mov
push
push
sti
sub
rcl
aaa
movsl
cld
iret
bound
std
insb
pop
sbb
mov
mov
mov
ds
mov
neg
ss
or
std
push
aaa
push
sbb
dec
call
das
lahf
xchg
xor
js
into
push
push
or
test
sbb
and
cld
insl
push
jno
outsl
and
loopne
push
inc
pop
adc
mov
mov
lock
stos
sti
dec
stc
xor
loopne
cmp
test
and
outsb
pop
adc
mov
mov
cmp
pop
pop
inc
cmc
sbb
dec
xor
roll
flds
sub
sub
push
xchg
pop
push
out
sbb
jl
xor
pop
dec
xchg
cmp
mov
test
cli
aam
stc
cmp
cmp
add
xchg
xor
mov
xor
jge
ret
jle
dec
add
fbld
nop
mov
mov
pop
repz
in
xlat
inc
pop
sarb
dec
dec
xchg
mov
orb
adc
jae
xor
lds
or
push
mov
mov
cmp
aaa
mov
cmp
push
cmp
fwait
add
xchg
or
sahf
dec
xchg
lods
lea
pop
scas
pop
cmp
rcrl
pop
jbe
not
pop
sarl
cmp
lcall
fldt
enter
xlat
cmp
push
adcl
inc
adcl
popa
repz
push
idivl
iret
mov
pop
test
stos
shlb
sbb
aam
aam
je
dec
out
testb
adc
fcmovnu
aaa
mov
ds
sbbb
pop
pop
push
mov
insl
mov
or
outsb
and
shrb
loope
xor
sbb
xor
mov
outsb
xchg
int
jnp
inc
adcb
test
xchg
test
test
adc
mov
ljmp
pop
das
std
xchg
xor
pop
lahf
mov
xor
jecxz
jno
jecxz
ret
jge
loope
filds
mov
stos
dec
dec
icebp
mov
push
or
addb
xlat
outsl
shr
cmp
add
lret
fwait
sub
adc
loope
add
insl
dec
loop
dec
mov
sub
popf
clc
lea
push
xchg
push
mov
dec
pop
mov
daa
dec
pop
dec
insl
adc
sbb
push
aad
je,pn
xor
inc
rcrl
test
insl
jle
idiv
pop
pop
xorl
fwait
jmp
xchg
mov
xorl
cmp
lock
or
lock
cld
pushf
pop
xchg
ss
insb
fstpt
cmc
mov
jo
lret
sub
dec
jecxz
xor
cld
mov
push
aaa
lods
mov
push
test
decl
jmp
stos
test
shrl
adc
test
pop
and
xor
inc
or
sbb
pop
push
arpl
testl
movl
xchg
jbe
test
dec
cmpl
sub
mov
loopne
xchg
push
fists
dec
outsb
dec
pop
cld
out
dec
jecxz
out
pop
cmp
mov
fildl
ss
add
popf
aas
inc
dec
inc
jno
inc
jo
pop
mov
lds
das
pop
scas
call
ss
dec
test
outsl
mov
jmp
inc
pop
in
mov
ja
and
xchg
xor
sub
repz
in
loop
mov
jmp
ret
or
enter
out
subb
add
cmp
ss
fbstp
mov
mov
mov
pop
mov
test
std
movb
mov
out
mov
imul
inc
add
aas
add
dec
addb
mov
xchg
cmp
pop
in
test
xor
cmp
xor
jns
aaa
xor
mov
mov
lods
out
sbb
arpl
movsl
mov
mov
pop
push
test
mov
sub
js
loop
test
sti
fbstp
add
je
outsb
incl
pop
clc
xor
test
dec
or
xor
mov
out
push
jb
dec
adc
or
outsl
dec
fdivs
int
add
lock
mov
dec
fs
xchg
int
icebp
filds
test
dec
std
addl
push
mov
aad
mov
jo
xchg
sbbl
out
test
inc
call
push
pop
xor
dec
or
pop
mov
decl
jp
or
clc
push
repz
jae
xchg
jge
jo
das
adc
sbb
ret
adc
outsl
mov
jne
imul
pushl
adc
add
addl
or
sub
mov
adc
pop
mov
iret
or
jg
inc
repz
jno
jb
test
inc
ss
inc
sbb
adc
jb
cld
mov
lret
je
jp
sbb
enter
mov
pop
inc
sbb
mov
shrl
fcmovnb
sbbl
dec
out
add
movsl
arpl
test
test
repnz
lret
xchg
orb
mov
call
lret
in
test
mov
in
jg
jns
jnp
push
and
loopne
fisubl
clc
out
xor
add
inc
or
mov
pop
cwtl
loop
jns
push
bound
ret
add
push
push
pop
or
cmp
mov
test
xchg
xchg
dec
xchg
loop
ljmp
push
in
xor
xor
rol
mov
mov
push
dec
push
mov
fs
mov
push
mov
sub
push
js
push
sti
inc
aas
push
cld
out
sbb
popf
xor
insb
loopne
fldcw
test
xchg
fwait
iret
xchg
xchg
fadd
das
adc
cli
add
mov
out
fcoms
lds
ljmp
sbb
das
xor
bound
in
addl
stc
adc
pop
movsl
mov
cmpb
push
std
xchg
sbb
adc
sbb
jae
xchg
cmp
movq
incb
pop
adc
jne
and
fbstp
mov
xor
jo
shrb
insb
std
js
add
adc
inc
or
aaa
mov
lahf
jbe
cmp
ss
pushl
xorl
cmp
lods
add
das
xor
clc
jecxz
cmp
outsl
or
dec
aad
xor
decb
test
mov
push
das
insl
sbb
sti
insb
xor
mov
jp
pop
andb
test
out
shr
jo
pop
lret
mov
cli
movsl
insb
cmp
outsb
xchg
in
imul
inc
jl
cmp
mov
xchg
mov
int
pop
or
aaa
loope
inc
jecxz
or
je
stc
outsb
test
daa
jo
out
lods
mov
jmp
adc
sub
out
arpl
repz
insb
pop
push
clc
stc
sbb
stc
cmp
add
cmp
pop
pusha
mov
inc
or
das
ffreep
push
jp
mov
xlat
pop
pop
ss
mov
mov
wbinvd
ss
add
test
cmp
inc
test
xor
push
lea
mov
inc
sbb
sbb
pop
imul
or
add
sbb
outsl
push
clc
imulb
pop
mov
add
addb
test
sub
add
mov
pop
ds
inc
std
pop
scas
add
jbe
addl
or
in
fldt
mov
mov
imul
sub
and
insl
mov
mov
in
sub
pop
stos
pop
xor
cmp
test
ss
xchg
dec
add
add
mov
jle
roll
jnp
stc
outsl
or
decl
mov
cld
pop
mov
into
outsl
or
lret
dec
ljmp
call
or
incl
loop
sbb
cmp
push
subb
mov
es
lahf
pop
pop
mov
ret
jbe
ds
sahf
loopne
fwait
jecxz
sahf
call
push
loopne
mov
ja
fs
inc
icebp
or
mov
or
adc
mov
js
std
or
fsts
sub
fsubl
jp
and
sti
stc
push
aaa
dec
pop
jge
or
dec
xor
in
push
outsl
mov
sti
enter
cli
jb
stc
daa
divb
stos
xchg
pop
jae
addr16
mov
mov
out
daa
pop
jns
lock
jmp
adc
cmp
add
mov
sub
push
dec
push
push
data16
loop
lahf
mov
jb
xorl
mov
lcall
mov
div
out
into
or
xor
idivb
in
out
jp
jmp
ja
addr16
pop
jg
mov
cwtl
mov
mov
clc
inc
jge
dec
popa
adc
es
push
mov
mov
mov
dec
xchg
test
inc
mov
xchg
insl
movsb
ja
mov
jo
xorl
repnz
cli
cld
mov
inc
sahf
pop
ret
fisubl
fnstsw
incl
or
sarl
cmp
jg
insl
xor
xchg
or
mov
push
xchg
out
mov
cli
adc
mov
sbbb
daa
loope
sbb
jbe
push
or
xor
or
repz
sub
stc
jnp
and
iret
xchg
xor
out
scas
sbb
insl
pop
gs
sub
or
dec
repz
daa
clc
dec
push
addr16
rcll
imul
cmp
xchg
pop
cmp
pop
outsb
xor
ljmp
lock
call
jne
inc
out
push
dec
ljmp
or
or
xor
popa
les
sarb
pop
test
pusha
test
ret
fbld
fidivl
dec
cli
rol
repnz
dec
push
lahf
jmp
jmp
mov
js
jmp
cmp
mov
loope
mov
pop
sub
sub
ficomps
sbb
xchg
lcall
cs
loop
push
out
shrl
ja
jg
test
test
jecxz
daa
pop
mov
sti
and
in
fisttpl
data16
jbe
imul
adc
sti
mov
and
arpl
dec
pop
mov
mov
in
add
inc
out
test
xchg
jl
mov
jo
inc
sbb
sti
inc
aaa
ss
rolb
cltd
mov
dec
loopne
aaa
pop
fldt
in
ffree
jmp
xchg
cli
out
jg
fs
rorl
rorl
push
xlat
dec
outsl
mov
icebp
loope
sub
int
inc
arpl
faddl
dec
jnp
mov
xchg
mov
popf
xchg
addr16
or
pop
mov
lahf
mov
jmp
mov
mov
insl
jecxz
mov
insl
add
jbe
xchg
nop
mov
call
xchg
jmp
jl
fwait
lea
or
push
daa
dec
jnp
mov
jg
in
sub
mov
icebp
test
push
inc
loopne
test
lea
mov
xor
dec
pop
out
hlt
jecxz
dec
xor
jecxz
jb
inc
and
cmp
push
xor
outsl
sub
fistl
cs
aaa
push
repz
xchg
pop
sbb
movsl
test
cmpl
add
fistpl
mov
ret
push
push
dec
lock
cmc
cmpl
out
call
loop
lahf
and
push
sub
mov
push
dec
lahf
jl
jnp
jb
cmp
push
testl
out
cli
jecxz
insl
mov
jp
dec
adc
push
or
pop
sub
arpl
pop
aaa
dec
sbb
cli
push
jne
notb
aam
ret
and
sub
rolb
sbb
cld
arpl
shl
loopne
pop
clc
or
xchg
add
mov
mov
pop
fcom
or
sti
jb
pop
jp
aas
inc
lahf
in
mov
stc
fisttps
insl
clc
insl
jae
push
aaa
mov
adc
fsubs
pop
outsl
cltd
lcall
aam
subl
dec
jecxz
sub
int3
es
lds
ljmp
aaa
dec
dec
sub
stos
cmc
push
jge
pusha
push
or
jg
gs
push
sub
cmpsl
sbbl
cld
jmp
mov
xor
std
sbbb
mov
gs
loop
jg
call
in
movsl
popa
cmpsl
mov
pop
jle
and
cmp
add
in
notl
subb
in
mov
clc
sarl
or
lods
clc
sbb
js
sub
add
mov
xor
xchg
mov
rcll
dec
data16
adc
bound
xchg
xor
jb
cmp
scas
stc
push
dec
test
loop
sub
mov
dec
dec
fs
push
sti
into
popa
xchg
es
pop
call
dec
fbstp
mov
dec
gs
insl
and
scas
clc
push
mov
mov
out
sub
dec
mov
cmpsb
xchg
pop
test
or
lea
jg
loopne
sub
sbb
sbb
jecxz
push
inc
xchg
movsl
push
loopne
push
mov
add
xor
cmp
cli
call
xchg
push
sti
add
jp
xchg
std
push
dec
mov
std
pusha
mov
add
mov
add
aaa
std
das
add
inc
jle
jle
mov
js
xor
xchg
es
push
je
gs
icebp
mov
sbb
adc
enter
fbstp
in
fnstenv
loope
orl
sbb
mov
xchg
js
push
dec
mov
das
vpmullw
add
xchg
dec
jmp
adcl
fdivs
pop
repz
and
fdivr
mov
jle
cld
or
mov
push
mov
lcall
cmp
mov
cs
adcl
test
mov
inc
dec
repnz
sub
push
imul
push
mov
lods
iret
adc
cmp
loop
lret
insb
in
mov
iret
or
jg
rclb
mov
popa
sbb
rolb
orb
pop
mov
xor
jnp
rclb
push
add
aad
mov
jmp
rcll
mov
add
loopne
mulw
mov
rcll
or
mov
test
push
mull
xchg
dec
repnz
inc
outsl
inc
push
fs
adc
pushw
outsl
adc
imul
cmp
add
sbb
clc
mov
lock
lcall
insl
shll
xor
cli
dec
outsl
std
xchg
mov
cmp
cld
lds
cmp
mov
mov
ss
movsl
sbb
repnz
popa
cmp
xchg
cmp
mov
xor
push
or
ret
dec
dec
out
jp
push
cmpsl
jecxz
pop
push
iret
pushf
fiaddl
fldl
pop
adc
cld
jnp
mov
push
cli
adc
insl
cld
ja
xchg
mov
test
mov
ret
push
testl
out
push
mov
mov
daa
ja
dec
pop
enter
dec
jecxz
and
ficoms
add
push
pushl
ljmp
mov
adc
cmpsb
arpl
or
insb
jl
and
cli
and
xor
stos
jnp
mov
in
daa
pop
fdivl
aam
adc
popa
mov
test
and
pop
xchg
sbb
or
addr16
mov
mov
xor
inc
xchg
add
sub
cmp
mov
dec
pushf
daa
sub
ds
lahf
mov
pop
call
cmp
push
add
scas
push
add
pop
jns
add
push
mov
xchg
mov
inc
jle
mov
arpl
push
xor
std
jmp
xchg
sahf
gs
push
cli
xor
int
or
dec
inc
insl
rolb
add
lahf
mov
xchg
ja
mov
push
mov
fidivrl
add
and
sbb
fiadds
iret
into
adc
lea
sahf
aad
ja
iret
dec
cld
int3
or
mov
pop
xchg
mov
insl
push
mov
jmp
dec
mov
inc
loope
cmp
test
push
test
jecxz
jmp
push
dec
xchg
pop
xor
rcrl
ret
std
or
lea
outsl
das
sub
in
aas
add
jno
jecxz
and
call
pop
cltd
sti
push
outsl
dec
outsl
push
cltd
loope
fisubrs
jmp
jb
andl
inc
jo
add
loop
mov
pop
mov
ret
icebp
pop
adc
imul
adc
lret
je
jg
adc
jns
lahf
fisttpl
rcrl
decb
cmp
inc
inc
movsl
or
jg
cmpsl
pop
cmpsb
test
inc
or
inc
filds
xchg
mov
jle
hlt
push
js
jno
arpl
fstl
inc
imul
pop
fdivp
sbb
mov
pop
std
cmpb
iret
js
sub
add
jle
cmp
jl
push
or
loope
dec
loope
repz
pop
sbb
inc
pusha
orb
xchg
mov
push
xchg
jecxz
push
and
mov
repnz
std
popf
mov
xchg
push
imul
sarl
fs
aad
sub
push
jnp
imul
in
mov
add
push
dec
arpl
insb
out
ljmp
ljmp
pop
sbb
push
clc
loop
xor
cmp
test
inc
xchg
fnstcw
and
repnz
jmp
sub
jmp
dec
push
or
push
daa
xor
jmp
testb
mov
or
sub
pop
sbb
pop
rol
xor
ret
sbb
jne
arpl
test
pusha
mov
and
cmp
pop
cmp
insb
sub
adc
dec
add
clc
mov
rorl
outsl
cmp
das
xchg
add
mov
icebp
dec
mov
call
jae
out
dec
mov
and
jno
and
add
cmp
push
out
shll
mov
ret
sti
sbb
ret
fwait
add
xchg
xor
sti
imul
frstor
xor
out
or
pop
lods
push
mov
inc
insl
mov
sub
sbb
icebp
push
dec
cmp
sarb
frstor
jb
cmp
fwait
sbb
pop
mov
mov
ss
outsb
jg
push
btr
push
sbb
xchg
push
adc
mov
mov
sbb
xchg
push
scas
cmp
or
pop
in
movsb
movsl
cmpsb
bound
mov
stc
loopne
in
adc
std
mov
imul
in
or
lock
cmpsb
mov
jne
pop
xchg
push
mov
loopne
shll
dec
aad
push
sub
pop
outsl
adc
jle
mov
jle
rep
out
loop
jb
adc
fistpl
mov
test
sbbl
mov
clc
mov
and
in
cmpsl
push
or
cmp
lods
or
cmp
push
or
clc
les
lahf
push
cmp
pmaxub
repz
mov
call
sbb
lock
repnz
outsl
popa
mov
mov
outsb
cmp
mov
sub
lea
aaa
xor
out
add
fwait
sub
aam
and
cmpsb
sbb
popa
xchg
fnsave
stc
and
das
add
jecxz
push
mov
jecxz
push
add
rcll
or
shr
loopne
lock
aaa
outsl
sbb
add
jbe
or
sbb
in
pop
roll
pop
pop
push
loopne
and
aaa
clc
jg
fnstsw
mov
aad
and
xor
push
push
sbb
test
lahf
lea
xor
mov
xor
mov
cs
xor
aaa
adc
or
repz
fcmovbe
jmp
sbb
rcll
cmpsb
inc
mov
stos
imul
sbb
lahf
cli
pop
outsb
mov
sbb
out
test
xor
fstpl
xchg
pop
add
aas
ficomps
mov
xchg
pop
cmpsb
cmpsl
arpl
mov
adc
xor
sbb
fidivrl
in
lahf
gs
mov
xchg
xchg
mov
jbe
pushl
out
pushf
popa
mov
mov
addr16
aas
sbb
dec
daa
cmpsl
jecxz
xchg
or
hlt
bound
cmp
ret
lods
outsl
xor
pop
dec
sbb
popf
cmpl
add
test
rcrl
mov
push
repz
xchg
insl
adc
mov
test
xchg
and
fadd
mov
neg
lret
repnz
push
mov
push
popf
hlt
testb
outsl
xor
push
sub
outsl
push
pop
mov
decl
inc
imul
test
lods
or
ljmp
dec
insb
push
rol
add
pop
lds
and
cmp
popa
or
lcall
pop
test
aas
dec
dec
in
pop
mov
xchg
mov
aaa
push
fcomps
lahf
or
cs
outsl
add
pop
mov
loope
jb
lods
cmp
daa
sub
mov
push
dec
out
sbb
jno
imul
sub
pop
xor
push
daa
add
jg
hlt
dec
cld
mov
fbstp
popf
mov
xor
mov
mov
inc
jl
cwtl
movsl
aas
add
dec
sbb
mov
stos
mov
sarl
cmp
mull
push
cmp
dec
loop
pop
test
add
jle
push
dec
adc
test
mov
jg
xchg
cmp
push
movsl
fidivs
mov
dec
or
jmp
sar
sbb
sti
cmp
sub
insl
lods
jp
sti
pop
insb
mov
jl
add
xchg
std
jecxz
cmp
shrl
cmpsl
dec
sbb
jbe
add
mov
xchg
dec
mov
mov
jns
loope
jmp
jmp
sbb
cld
pop
outsl
enter
icebp
mov
das
aam
shll
lret
add
push
cltd
enter
or
or
gs
movsl
movsl
push
lods
mov
enter
jae
mov
sbb
xchg
out
stc
js
jge
mov
jb
dec
js
jnp
jge
imul
xor
not
cmp
push
mov
inc
mov
fnsave
test
pushw
in
mov
outsl
fsubrl
sbb
add
outsl
inc
pop
mov
jnp
fucom
icebp
sbb
or
cld
out
mov
loope
in
shll
mov
loop
sbb
add
call
or
or
mov
test
or
mov
fs
dec
fnsave
das
adc
mov
or
xchg
fsub
popa
inc
lea
fldl
add
jb
xor
arpl
inc
sbb
dec
jnp
mov
cmp
sub
lea
sti
mov
or
mov
not
adc
test
xor
iret
enter
cltd
xlat
push
rolb
mov
gs
sar
xchg
xor
mov
sarb
out
xor
or
fbstp
xchg
lds
std
add
pusha
repz
mov
or
in
mov
bound
push
cmpb
or
roll
mov
inc
mov
add
add
or
js
cld
pop
fnsave
incb
dec
arpl
xor
int
insb
jmp
ds
xchg
pop
jge
or
jmp
adc
pop
lahf
aam
insl
stc
inc
lock
addb
adcb
inc
cmc
jge
out
incl
dec
arpl
testb
andb
stos
pop
cmp
sti
jnp
dec
repz
mov
push
mov
cmp
leave
popa
test
xchg
cld
dec
xor
cmp
outsl
adc
push
aaa
iret
inc
sbb
mov
in
or
std
xchg
dec
xor
and
pop
mov
das
mov
dec
dec
bound
in
imul
addr16
lds
pop
inc
inc
mov
hlt
test
mov
clc
aas
repz
loop
xchg
jg
out
adcl
fistps
test
jne
es
jmp
push
daa
push
adc
sahf
aad
out
outsb
inc
test
or
push
insl
stc
xor
dec
lds
jecxz
push
in
push
addr16
dec
jecxz
pop
flds
lret
icebp
scas
out
sbb
dec
bound
js
inc
sub
lcall
mov
pop
pop
popf
pop
push
fdivrl
cli
lods
addr16
lea
push
sub
push
lock
and
out
rcr
dec
mov
add
fistpll
inc
pop
das
aas
loope
sbb
push
movsl
mov
ss
pop
jo
add
lods
sbbb
test
sbb
rcrb
data16
push
xor
in
test
add
cmp
test
cmp
push
pop
jle
out
flds
loop
repz
xor
push
jns
int3
xlat
jge
mov
xor
mov
ret
push
test
push
push
mov
add
gs
jmp
jl
sbb
or
dec
pushf
ret
loop
das
inc
lahf
outsl
pop
popa
mov
std
pop
jecxz
les
stc
jecxz
in
cli
or
jno
cld
aaa
lcall
pop
test
pop
cmp
movsl
mov
data16
sub
aaa
ror
hlt
cli
xchg
cmpsb
xchg
testl
sub
out
inc
and
rcl
cld
xchg
fldenv
jmp
push
rorl
mov
addr16
call
scas
jno,pt
jecxz
mov
hlt
adc
sbb
aaa
push
pop
xchg
out
test
pop
pop
adc
xor
jno
rol
stos
jne
jge
outsl
sbb
mov
sahf
cltd
add
shll
xor
cld
mov
fcoml
repnz
add
push
add
cmp
jb
js
mul
sub
cltd
sbb
in
sbb
sub
mov
in
in
sbb
sub
mov
sub
mov
sub
mov
xchg
sbb
mov
adc
jb
mov
int
xchg
mov
leave
and
mov
mov
in
jmp
push
inc
jo
or
shrl
iret
icebp
test
jle
mov
loop
bound
out
stc
adc
jmp
add
icebp
sbb
pop
je
adc
adc
mov
jle
xchg
or
sub
testl
xorl
mov
int
ficompl
dec
cmp
stc
sbb
rclb
and
aaa
popa
insl
adc
imul
ret
pushf
lahf
add
or
inc
mov
dec
ret
loope
xchg
push
sub
lea
mov
into
jmp
aaa
daa
rol
xor
stos
dec
iret
test
push
movsl
adc
dec
sar
orb
push
sub
mov
mov
cli
push
lock
mov
cmpl
lock
push
test
add
mov
pop
mov
mov
pop
jle
js
jg
sbb
mov
xor
insb
rorb
jle
push
pusha
jno
sub
loop
pop
and
push
std
js
push
cmc
mov
dec
addb
insb
lock
mov
add
movl
xchg
add
loopne
xchg
ret
xchg
add
sar
addb
sub
jg
adc
inc
xor
jne
pop
test
pop
addl
lods
mov
fsubr
es
js
clc
hlt
xorw
sti
mov
mov
in
movsl
mov
inc
mov
int
cmpl
push
idiv
outsb
cmp
outsl
ss
sub
je
cli
jae
and
adc
lods
cmp
or
pop
loop
jns
stc
cmp
fwait
push
mov
hlt
dec
or
ljmp
iret
orl
add
inc
and
and
daa
add
fcoms
mov
cmp
xchg
xchg
add
ljmp
in
and
nop
dec
dec
sub
pop
inc
cmp
test
mov
lds
mov
ljmp
jmp
mov
lret
lods
mov
popf
cli
movb
xchg
in
popa
call
sub
frstor
jge
aad
imul
popf
push
cld
add
cmp
pusha
or
out
in
out
pop
push
inc
fildl
dec
mov
push
xchg
in
xchg
frstor
push
pusha
cmp
outsl
jno
dec
dec
mov
push
gs
rcr
push
arpl
cmp
pop
mov
push
roll
mov
push
cvtdq2ps
vmovupd
repnz
dec
cltd
decb
fbstp
aas
push
adc
mov
scas
jg
outsl
xor
mov
inc
repz
xor
cli
cmp
arpl
daa
add
adc
lcall
push
cmp
clc
lods
push
test
mov
shr
loop
adc
jne
xlat
insb
xchg
inc
testb
pop
sbbl
ljmp
andl
mov
insl
mov
and
dec
lods
jecxz
sbb
xor
fwait
in
test
js
sbb
jo
lahf
fimuls
lods
mov
or
aaa
xchg
mov
dec
and
or
ljmp
inc
in
sti
pop
ja
pop
incb
pop
stc
sti
or
aaa
jge
push
jns
sub
xchg
jns
addb
outsb
test
decb
fs
aaa
daa
dec
test
inc
inc
addb
add
test
mov
dec
in
jnp
or
adcl
dec
aas
adc
stos
fcomps
push
dec
push
mov
ja
sbb
sbb
add
cltd
mov
mov
mov
std
sub
add
jecxz
ds
sbb
addl
outsb
mov
decl
test
jno
in
loopne
insb
aad
push
sarl
or
movsl
clc
xor
inc
cmp
sbb
in
jp
jo
jns
xchg
movb
clc
jle
sbb
push
jmp
xchg
xchg
pop
pop
jno
xchg
push
lds
jnp
out
adc
add
jns
sbbl
rcll
mov
adc
cmp
jecxz
insl
sbb
addr16
add
jo
lods
daa
inc
sbb
addr16
add
adc
push
in
xchg
dec
test
adc
test
adc
or
outsl
xor
je
cmp
stos
repnz
hlt
leave
add
xchg
xor
sbb
push
sub
sbb
test
and
out
cli
outsl
xchg
or
dec
or
dec
xor
xchg
idiv
adc
cs
adc
mov
jns
fldcw
icebp
fwait
imul
insl
push
add
notl
in
dec
xor
and
pop
mov
add
xchg
out
xchg
pop
sub
popa
cmpb
jge
aad
ss
cmp
pusha
mov
js
push
cmpsb
sbb
sbb
std
cltd
pop
hlt
aaa
add
inc
mov
aaa
adc
sarb
mov
add
test
cltd
mov
xor
pop
lock
mov
shrl
push
push
mov
cld
lret
push
pusha
mov
push
out
aad
gs
push
mov
push
insl
popa
mov
add
mov
sbb
or
decb
shl
jge
sub
cmp
or
pop
dec
mov
cs
into
dec
jecxz
lds
arpl
add
mov
push
mov
insl
mov
sub
pop
mov
cmp
repz
mov
int3
jae
or
jge
in
in
roll
and
stc
jecxz
mov
or
push
or
push
push
or
in
mov
adcl
mov
sbb
mov
mov
inc
les
outsl
mov
push
pop
sub
movb
das
pop
xchg
push
std
pop
push
mov
push
jecxz
pop
xlat
incl
insb
mov
push
cld
and
or
mov
and
dec
or
add
ds
or
mov
sbbb
pop
or
sbb
dec
daa
sbb
xchg
pop
and
add
lahf
push
in
xorb
arpl
pop
xorb
out
or
shr
aaa
xlat
jae
push
jnp
es
or
sbb
cld
sbb
in
add
std
scas
aaa
inc
lock
dec
das
add
aam
inc
pop
jge
mov
outsb
in
push
xor
outsl
mov
add
mov
pop
mov
cld
or
imul
fwait
or
loop
out
add
leave
xchg
mov
pop
test
push
dec
in
addl
lods
clc
std
dec
sub
cmp
out
fisubl
orl
jne
outsb
insl
leave
add
les
fcmovnu
dec
dec
shlb
in
in
or
popa
pop
clc
xchg
push
mov
sbb
cmpb
test
or
cmp
xchg
cmp
cld
aam
xchg
sarb
jb
sub
or
arpl
pop
or
mov
or
ds
jge
add
ljmp
pop
testb
jns
cmp
pop
push
mov
ljmp
pop
mov
clc
inc
xor
and
adc
jmp
inc
jecxz
inc
outsl
or
gs
inc
in
push
and
movsb
xchg
sbb
dec
fistps
in
das
lods
dec
cld
sub
test
push
mov
inc
stc
mov
stos
mov
js
sti
ret
loop
push
insb
shll
shlb
inc
mov
xchg
xchg
pop
outsb
mov
sbb
add
mov
mov
addr16
lods
out
stc
outsl
repz
lds
add
xlat
sbb
inc
sub
xor
hlt
fsubrl
cmpsl
add
dec
mov
in
cmpl
adc
std
insl
dec
out
add
cltd
mov
in
bound
xor
aaa
sbbb
add
and
add
sbb
adc
pop
ljmp
xchg
insl
imul
mov
rep
mov
sbb
mov
or
lret
and
dec
insl
add
pop
enter
jge
in
dec
add
test
movsl
or
cmp
xor
ss
pop
out
sbb
sub
lcall
or
pop
pop
mov
call
mov
pop
addl
adc
out
in
std
pop
mov
xor
mov
add
test
mov
pop
in
aas
fildl
popl
xchg
sti
bound
out
loop
pop
aas
ret
mov
jne
push
xor
rcr
out
in
add
dec
pop
sbb
lods
inc
addr16
loopne
cli
gs
int
aas
test
pop
pop
sbb
popa
add
negb
mov
das
dec
cmp
jno
rolb
sbb
in
add
mov
push
push
and
xor
pop
hlt
xor
outsl
cs
add
repz
out
mov
and
daa
shll
mov
out
in
jle
dec
mov
ret
arpl
ds
data16
pop
in
aas
lret
out
js
lahf
shlb
mov
out
repnz
sbb
pop
and
lret
or
stos
add
hlt
in
add
fnstenv
in
fcompl
arpl
xor
pop
call
aas
mov
mov
outsb
add
pop
and
insb
mov
iret
popl
movsl
sub
jg
and
push
inc
bound
out
ret
aas
popa
sti
mov
lods
lock
fsubl
inc
stc
pop
mov
out
and
ljmp
adc
std
mov
dec
mov
mov
cld
push
popa
or
mov
outsl
cs
pop
incb
or
adc
xor
test
or
add
pop
out
jg
insb
test
mov
int
sti
sbb
cltd
fs
insl
iret
shr
out
repnz
lret
mov
jmp
fdivp
adc
cmc
arpl
out
mov
ds
bound
out
push
insl
test
in
cmpsl
scas
in
cmc
or
push
inc
mov
sub
xchg
pop
sti
push
adc
inc
mul
cmpb
insl
fldcw
mov
and
data16
mov
lock
pop
in
lods
or
out
arpl
lret
in
or
mov
sbb
xor
aam
mov
cld
xor
sub
test
aam
fcmovnb
jg
jmp
and
std
out
pusha
loopne
aam
gs
cmc
xchg
decl
dec
dec
xchg
fisttpll
repnz
add
cmpsl
shlb
inc
cmp
aas
pop
pop
pop
stc
mov
daa
in
add
in
std
xchg
clc
and
add
lahf
push
xchg
movsb
repz
jo
mov
ss
xchg
cmc
clc
popl
xor
pop
and
es
xchg
adc
add
js
pop
psrlq
clc
pop
leave
add
lret
gs
mov
cmc
fdivr
pop
sub
fs
out
add
jecxz
lret
ss
push
jg
push
mov
aaa
das
fs
decb
mov
sbb
and
mov
or
aas
jmp
fsub
sub
add
pop
ss
repz
clc
sahf
insl
mov
cmc
dec
cld
and
mov
fnstenv
ja
xchg
mov
dec
repnz
mov
jmp
push
aas
cmc
adc
sub
iret
jae
cwtl
push
sub
hlt
idiv
jecxz
insb
jge
ror
and
sti
pop
add
clc
pop
mulb
sarb
push
mov
fisubs
arpl
mov
add
fwait
mov
in
clc
inc
or
pop
stc
pop
push
pop
aam
mov
push
sbb
mov
icebp
lret
pop
cmp
push
bound
or
sbb
inc
adc
jno
sbb
in
outsl
sbb
fiaddl
xchg
xor
pop
push
dec
dec
das
cmc
test
xchg
sbb
out
lret
and
std
decl
and
pop
cmp
add
out
pop
rcr
push
insl
xchg
test
pop
pop
imul
mov
sbb
insl
push
and
mov
inc
paddd
xchg
int3
call
add
add
mov
mov
lahf
test
push
dec
add
enter
jmp
sub
push
es
adc
dec
or
xlat
loopne
pop
jg
mov
xorb
mov
push
mov
fbld
fidivl
mov
outsb
push
adc
out
push
or
sub
loop
cld
lcall
test
test
mov
mov
mov
add
add
mov
divl
mov
fidivrs
push
xor
outsl
or
clc
test
jae
and
dec
bound
jae
aaa
sbb
jecxz
jge
push
or
push
add
in
pop
cld
pop
mov
mov
addb
pop
test
xchg
in
jle
mov
jl
decl
fdivrs
push
fistpl
ds
stc
ljmp
mov
dec
pop
add
mov
dec
mov
js
or
or
cs
inc
push
inc
sti
add
call
idivb
insl
add
enter
cli
std
inc
xor
push
pop
mov
push
pop
jl
adc
sub
loopne
sub
or
inc
push
push
push
pop
ret
jge
addr16
out
outsb
jne
ret
shll
test
cmc
cmp
neg
call
jnp
or
test
jnp
icebp
cli
gs
or
xchg
ja
dec
jge
sbbb
stc
adc
rcll
add
les
or
mov
pop
xchg
and
fsubrs
push
and
jbe
aad
dec
pop
stc
and
xor
add
orb
lret
es
pop
sbb
sbb
aam
cli
push
shlb
or
test
test
add
dec
push
clc
jg
xorb
jmp
lret
jmp
jle
flds
adc
test
push
loopne
fstpt
push
outsl
add
in
imulw
push
sub
jg
add
mov
inc
jnp
iret
sti
push
sbb
in
sbb
stc
iret
sbb
fldt
push
push
pop
or
inc
push
div
fstpl
loopne
das
lock
psubsb
mov
add
test
clc
pop
test
sub
das
or
inc
mov
ja
jl
or
dec
or
gs
ja
cmpsl
divb
jne
xor
mov
mov
loope
popa
lods
dec
inc
sub
and
bnd
pop
mov
gs
cs
jbe
stc
xchg
mov
int3
incl
add
js
pop
mov
xchg
std
pop
mov
in
xchg
push
inc
rcrb
fs
lds
jp
mov
out
xor
ret
add
adc
xchg
ror
push
in
add
outsb
add
sub
mov
push
mov
xchg
cmp
popf
mov
xor
ja
xchg
loope
add
jns
cli
xor
push
and
xchg
push
adc
add
cmp
jecxz
shrb
outsl
popa
push
test
mov
add
adc
xchg
fdivrp
inc
jge
jg
fistps
cmp
mov
test
je
cmpsl
mov
mov
adc
inc
xchg
sti
or
mov
cs
mov
daa
popa
test
stc
mov
test
add
pop
mov
imul
or
decl
push
jnp
add
jecxz
mov
jnp
out
and
cmp
jo
dec
sbb
xchg
inc
lock
in
jecxz
arpl
adc
mov
pop
stc
repz
inc
pop
inc
roll
insb
mov
push
outsb
cmp
inc
dec
adc
and
mov
testl
push
pop
subl
sub
pushf
or
and
jg
stc
inc
cmp
ja
popa
cld
push
aaa
cld
aaa
mov
jp
inc
jb
test
and
sahf
sarb
mov
ljmp
and
adc
dec
dec
dec
popa
les
or
shll
lret
push
jmp
pop
iret
mov
and
negb
std
push
hlt
clc
pop
call
std
sbb
jmp
xchg
xchg
int
sbb
jg
outsb
xlat
jno
jecxz
popa
mov
repnz
xor
lock
lret
leave
arpl
dec
pusha
cwtl
loope
test
pop
or
fsin
aaa
lds
clc
cmc
and
mov
pop
dec
mov
push
sbb
sub
jg
out
call
xchg
das
enter
inc
pop
add
movq
outsl
pop
adc
sub
pop
sti
jge
cmp
sub
pop
add
loopne
sarl
pop
cmp
pusha
test
cmp
or
sub
xor
pop
mov
pop
jo
pop
out
js
ljmp
mov
rcrl
mov
push
hlt
roll
xchg
pop
push
pop
pop
xor
nop
xor
push
fdiv
sub
push
mov
or
adc
xchg
mov
xchg
jnp
lea
pop
sub
and
sahf
mov
mov
sbbb
pushf
cmpl
fwait
xor
repz
jbe
scas
add
cmp
fwait
lahf
jg
push
dec
inc
dec
sub
push
test
ljmp
orb
clc
lret
inc
jnp
add
lea
xchg
outsl
pop
push
sahf
mov
xchg
stos
pop
mov
ret
orl
rolb
lahf
add
jne
adc
mov
mov
insb
sbb
inc
mov
rcrb
cwtl
inc
jge
test
jno
cmc
xchg
sbb
in
out
or
inc
dec
in
test
sub
mov
fbstp
dec
adc
xchg
jl
jb
jle
cld
outsl
and
dec
out
mov
cli
sbb
add
push
mov
xchg
insl
cmpsl
add
std
enter
cmp
push
mov
aad
cmc
push
pop
out
adc
dec
cmp
and
in
mov
mov
jne
ret
ficoml
mov
add
insl
pop
in
or
push
loope
movsl
sti
sbb
outsl
pop
arpl
loopne
scas
leave
adc
in
jmp
inc
mov
daa
mov
and
jl
out
frstpm(287
mov
cmp
into
repz
outsb
shr
rorb
in
fistpll
cmp
lcall
adc
fists
pop
cs
lret
sbb
jbe
jne
jno
int
mov
mov
add
jp
adc
jno
jb
je
jae
mov
ss
xlat
jmp
jne
sbb
cmpsb
imul
mov
adc
jae
jb
outsb
shll
in
jo
jno
xchg
nop
outsb
iret
ss
jnp
pop
jae
xor
inc
jne
jb
pop
lea
js
js
je
mov
aaa
js
adc
xchg
jne
mov
xor
jl
jp
jbe
xchg
lret
in
js
jns
jnp
imulb
in
sti
jns
add
adc
jmp
int
xchg
cmp
jns
adc
inc
sahf
mov
lcall
pop
jns
imul
pop
jne
imul
lcall
mov
fnstenvs
in
add
mov
ja
and
xlat
ja
std
jns
inc
insl
daa
pop
pop
jnp
jge
pop
imul
add
cld
loope
lcall
je
insb
xchg
int
in
ffree
jbe
jb
xchg
xor
dec
rcll
jg
jb
clc
aaa
mov
leave
cs
mov
push
sbb
sub
fcomps
dec
add
in
add
sbb
add
lods
sub
imul
xchg
filds
xchg
add
fs
pop
or
push
in
sbb
push
xchg
add
das
pop
inc
fwait
andl
gs
adc
sbb
insl
scas
jno
mov
jno
dec
je
outsb
mov
jns
into
sbb
xor
jbe
jns
data16
jno
cmpsl
js
insl
xchg
lret
jae
jb
outsb
out
jno
and
repnz
mov
cmp
dec
outsb
mov
pop
jbe
adc
sub
mov
addr16
cli
test
mov
dec
sarl
je
cltd
cmpsb
jmp
pushf
movsl
insb
lcall
repnz
jb
lret
insl
mov
pop
jne
sub
xor
shrl
and
insb
fwait
in
jecxz
aad
mov
xor
rcll
jo
in
mov
inc
ja
jae
jne
fcompl
jns
jne,pt
in
xchg
lret
in
js
jp
ja
jns
shll
in
jns
jnp
lods
popf
mov
ss
loope
std
jnp
ja
dec
xlat
xor
aaa
inc
push
aam
xchg
mov
jnp
adc
aam
dec
roll
xor
sbb
repnz
pop
jb
int
mov
jne
jo
fwait
mov
mov
into
fldenv
jmp
std
jbe
sub
mov
cmpsb
ret
fnstcw
add
mov
push
or
cmpsb
imul
pop
jle
cmc
jbe
in
jb
mov
jbe
ja
xchg
pop
inc
jnp
incl
clc
imul
bound
cli
ds
in
ljmp
pop
jb
dec
imul
xor
cli
inc
jo
pop
pop
dec
pop
pop
bound
outsl
std
jg
mov
arpl
test
inc
je
outsl
dec
push
pusha
pop
insl
xchg
push
mov
push
pop
dec
popa
dec
cmp
mov
fs
jo
gs
imul
inc
out
fbstp
sti
inc
push
cmp
imul
or
pop
jo
outsb
jo
incb
jb
insl
fcomi
pop
insb
pop
push
cmp
lock
push
pop
addr16
bound
in
in
fildll
pop
pop
imul
xchg
add
pusha
jnp
dec
negl
mov
inc
data16
cld
lock
in
insl
insl
fs
and
ja
cmp
ljmp
out
inc
popa
addr16
adc
push
aas
jb
pusha
push
push
addr16
inc
outsl
loopne
popa
pop
xchg
outsl
popa
sbb
pusha
insl
imul
push
pop
bound
mov
insl
imul
cmpsl
dec
pop
pop
pop
jb
cmpsb
decl
cmp
ret
push
pop
adcl
mov
jb
inc
bound
dec
pop
clc
fbstp
std
ds
jb
pop
jo
aas
and
add
xchg
mov
insb
pusha
pop
inc
jge
insl
cmp
cmp
push
dec
pop
addr16
jno
in
in
jg
stc
inc
bound
pusha
imul
in
fs
mov
imul
jno
insb
je
or
dec
inc
fs
mov
outsl
cmp
insb
insl
xor
arpl
push
outsl
bound
inc
aaa
mov
test
sub
sub
addr16
jb
outsl
push
pop
bound
lock
jb
int3
outsl
insl
inc
dec
jno
js
pusha
pop
popa
inc
pop
dec
jo
test
push
add
fdivr
inc
imul
gs
xchg
mov
std
and
dec
popa
arpl
inc
cmp
xlat
jle
xchg
lahf
dec
and
inc
inc
cmp
mov
xchg
push
jae
std
clc
mov
rcr
cmp
cli
push
call
cli
mov
sbb
cmp
cli
push
ds
test
ret
inc
pop
push
in
outsb
out
pop
jecxz
push
or
sbb
push
pop
bound
outsb
pusha
outsb
dec
arpl
fs
push
xchg
pop
fs
push
loope
jbe
arpl
data16
push
pop
popa
push
sar
jb
imul
inc
popa
aas
clc
and
dec
cs
ret
mov
cmp
arpl
mov
out
inc
mov
or
ja
mov
inc
pop
push
insl
arpl
lock
mov
outsl
stos
bound
arpl
push
and
ret
jno
ret
mov
sti
pop
outsb
fs
dec
inc
cmp
arpl
inc
cmp
cli
out
std
dec
sub
pop
lods
outsl
movsl
add
or
dec
arpl
js
out
sub
sti
mov
pop
gs
lock
lea
mov
fs
in
mov
xchg
arpl
lock
insb
push
outsl
pop
popa
cmp
std
inc
mov
sub
clc
cmp
dec
cmp
sub
aaa
dec
lods
sub
pop
aas
cmp
dec
arpl
jo
jno
shrl
subb
frstor
xor
aad
adc
ficomps
jmp
arpl
fs
popf
std
aaa
mov
cmp
pop
pop
inc
out
bound
notb
jg
sti
pop
test
push
jb
jno
push
sbb
ret
lret
push
pop
fs
std
dec
das
rcr
mov
in
or
or
ljmp
and
push
push
pop
insl
jo
jecxz
lock
arpl
addr16
inc
inc
jg
daa
mov
push
mov
inc
jne
sbb
mov
inc
sbbl
addr16
add
cmp
sub
daa
push
cli
jmp
dec
ds
dec
mov
pop
sti
insb
cmp
outsl
cli
pop
jns
cmp
cmp
cmp
inc
cld
cmp
aaa
pop
sbb
das
adc
insl
fs
push
outsb
jb
dec
cmp
push
ss
and
lea
pop
xor
cs
aaa
push
cmp
push
xchg
fiaddl
arpl
jge
cmp
pop
aaa
mov
sub
daa
adc
cmp
fwait
jo
fbstp
insl
sub
and
jg
push
push
cmp
outsb
jno
or
insl
inc
push
insl
pop
xchg
pop
lods
mov
fnsave
cmp
pusha
aaa
cmp
dec
fs
push
testb
lock
aas
inc
cltd
add
pop
jnp
je
test
cmp
push
aaa
push
outsb
pop
push
mov
cmp
lds
cmp
pop
or
jle
ret
aad
sub
mov
arpl
pop
inc
sbb
mov
test
ja
xorl
sub
mov
hlt
cmp
dec
cmpb
dec
sub
fiaddl
pop
das
pop
add
xchg
push
pop
jp
call
pop
cmp
icebp
loope
cmp
pusha
or
fdivl
mov
daa
dec
cmp
pop
clc
push
push
dec
add
aas
imul
cmp
sbb
stos
outsl
pop
loope
adc
cmp
xor
std
lahf
inc
cmp
cs
pop
mov
fisubl
insl
xchg
pop
pop
bound
dec
cmp
push
push
ja
cld
cmp
pop
cmp
push
enter
data16
mov
cmc
mov
push
imul
push
popa
pop
test
das
jl
cmp
cmp
cld
inc
dec
push
jne
sub
pop
push
mov
pop
ja
mov
mov
imul
setae
shlb
jno
mov
dec
fisubrs
sub
insl
inc
mov
adc
inc
inc
push
mov
mov
stc
insl
pop
ret
mov
or
imul
stos
inc
mov
mov
mov
rcrl
clc
pop
xor
imul
hlt
add
cltd
test
jo
pop
or
inc
cmp
aas
cmp
sarb
outsb
cld
xchg
jecxz
pop
test
xor
pop
pop
jno
shrb
pop
js
insl
mov
clc
mov
pop
pop
fcom
push
pop
lock
or
fstpl
mov
clc
pop
lcall
adc
sti
dec
dec
push
inc
dec
dec
and
pop
pop
mov
pop
ret
pop
jae
cli
cmp
sbb
pop
popa
lock
xchg
sti
pop
and
pop
pop
push
sbb
dec
popa
lds
std
or
sub
push
clc
cld
pop
sub
pop
cld
mov
pusha
insb
jnp
sar
addr16
or
dec
pop
mov
mov
and
out
add
cmp
jnp
cld
pop
lcall
mov
insb
jge
pop
push
inc
push
daa
sbb
pop
adc
int
mov
push
sbb
xor
jb
xor
addr16
js
movsl
lea
out
hlt
insb
pop
and
repz
clc
sub
mov
cli
add
add
push
pop
cmc
lds
arpl
cmp
arpl
pop
cmp
jo
lcall
or
aas
push
pop
mov
aas
lods
inc
imul
adc
js
jbe
sbb
bound
sbb
or
pop
push
pusha
jmp
sti
inc
gs
lods
xor
fadds
push
arpl
aas
mov
push
jmp
or
insl
cmp
clc
lods
jno
add
sbb
dec
insb
jmp
imul
or
outsb
outsb
and
fbstp
mov
ja
jo
bound
sub
push
push
das
xor
lea
dec
pusha
mov
xor
fsub
inc
inc
cli
sub
pop
dec
sti
pusha
pop
test
push
dec
sti
je
aad
ljmp
jmp
lods
push
push
cmp
pop
jb
pop
bound
sbb
pop
push
and
or
fwait
jg
dec
push
pop
or
and
outsl
xor
jno
and
pop
outsb
pop
mov
outsb
cmp
sub
jno
mov
pop
sub
cmp
stos
inc
mov
jg
add
enter
loope
fadd
sbb
dec
pop
pop
imul
xchg
xlat
js
sbb
mov
sub
lods
xchg
cmp
push
mov
daa
inc
ljmp
inc
dec
dec
inc
cmp
sti
imul
cli
inc
mov
or
and
push
bound
adc
imul
cld
lahf
pop
and
sub
gs
insl
push
and
sbb
pop
sub
imul
cmpsl
mov
cmp
fistpll
sti
out
sarl
loopne
inc
xchg
imul
loope
mov
sbb
jae
mov
jb
insl
pop
pop
mov
adc
and
adc
dec
sbb
xchg
repz
cmp
inc
orl
fiaddl
jb
jo
adc
push
push
inc
inc
pop
out
mov
push
dec
inc
dec
inc
cmp
outsl
cmp
mov
dec
xor
and
and
pusha
and
ficompl
push
push
and
pop
imul
popl
dec
fistpl
adc
lahf
push
add
push
adc
loop
cmc
je
mov
daa
push
push
jg
inc
dec
dec
dec
daa
sub
sub
add
sub
outsb
out
sbb
imul
adc
insl
icebp
lods
hlt
and
xorl
push
sub
sbb
and
das
xor
stos
stc
movb
std
or
inc
ficomps
push
jno
sub
popa
mov
push
inc
push
bound
es
sub
sbb
std
lods
in
fisttpl
or
pop
sub
bound
add
sbb
sbb
popa
addr16
aas
fs
pop
add
sbb
sbb
dec
dec
sub
sub
xchg
out
xchg
mov
jbe
sub
mov
sbb
xchg
or
cmp
imul
gs
test
jle
cmp
jne
incb
or
outsb
mov
inc
insb
dec
fnstsw
insb
mov
bound
push
push
fs
jno
adc
pop
add
bound
test
fisttps
insl
jbe
daa
sub
and
sub
xor
sub
fs
cs
pop
push
outsl
insl
mov
cmp
arpl
js
or
cld
imul
pop
or
gs
mov
xor
stc
xor
sbb
sub
es
jmp
sub
pop
and
mov
xor
jmp
imul
mov
cmpl
or
arpl
sbb
fcoms
xor
xor
pop
insb
jae
bound
bound
mov
add
jno
xor
sub
add
sub
ret
mov
arpl
jecxz
pop
jno
mov
cmpsw
aaa
sbb
push
mov
sbb
int3
gs
aad
mov
sbb
push
dec
je
pop
xor
aas
aad
gs
popa
cltd
lret
subl
xchg
pop
fidivs
daa
lods
sub
xor
aaa
popf
lods
xor
ss
push
push
pop
sub
mov
xor
cmp
and
or
sub
repz
test
cmpsl
and
mov
jbe
pop
test
das
das
xor
xor
sub
mov
sub
jo
aad
xchg
pop
cmp
stos
xchg
pop
cmp
sub
ja
mov
jno
daa
cmp
outsb
push
cs
push
stos
lods
scas
sbb
inc
aaa
dec
scas
imul
xchg
mov
fs
ret
inc
sarl
test
insl
pusha
push
dec
inc
pop
ret
pop
iret
and
mov
ljmp
dec
dec
cmp
lods
or
mov
jae
push
jb
dec
iret
ss
adc
pop
imul
cmp
push
push
jb
imul
mov
push
pop
inc
jne
pop
clc
fidivl
ss
aaa
inc
xchg
push
push
sub
pop
stc
sarl
xchg
pop
out
inc
stc
gs
inc
cld
ja
aas
rcr
or
inc
arpl
xchg
mov
insb
cmp
jl
jge,pt
fcoml
push
daa
adc
scas
adc
mov
cmp
xlat
adc
testl
popa
ds
repnz
testl
jb
insb
sbb
add
dec
mov
imul
arpl
lods
in
sub
and
imul
mov
inc
imul
dec
sbb
dec
cld
pop
pop
adc
pop
sbb
mov
pop
popa
cmp
arpl
mov
pop
insl
insb
xor
cs
fildll
pop
loop
sub
cmp
inc
ds
inc
inc
inc
inc
dec
in
inc
inc
dec
dec
dec
dec
pop
dec
dec
push
dec
notb
jg
sbb
test
pushw
insl
bound
inc
outsl
insb
jp
mov
ret
xchg
push
sub
pop
jmp
xchg
pushf
int3
mov
pop
pop
adc
jno
orb
outsl
mov
dec
inc
dec
inc
xchg
outsb
dec
je
push
add
arpl
adc
sbb
push
pop
push
fisubrl
cmp
popa
add
rolb
imul
insb
enter
mov
cmp
cmp
mov
pop
push
popa
pop
pop
push
jo
sub
dec
fs
mov
sub
je
aas
inc
cmp
cmp
or
cmp
daa
pop
jb
lcall
test
dec
stc
aaa
sub
or
aas
dec
inc
sub
in
inc
sti
cmp
jae
mov
outsl
cmp
or
data16
cmp
je
outsb
data16
lcall
jg
notl
arpl
in
fistpll
and
push
sub
daa
sub
out
pop
lea
sbb
and
dec
in
mull
or
mov
inc
xchg
fwait
inc
add
pop
pop
adc
popa
xchg
lret
imul
outsl
pop
test
cmp
mov
imul
in
mov
dec
adc
outsb
in
test
outsl
push
jne
or
std
loope
imul
push
dec
pop
std
lds
jmp
xchg
jg
mov
pop
adc
xor
mov
jns
imul
pusha
or
push
jle
sub
jae
clc
xor
dec
dec
pop
sub
incl
xchg
or
or
mov
inc
sub
dec
sub
jg
mov
xchg
sub
sub
sub
cs
sub
sub
mov
dec
sub
sbb
test
sub
sub
das
or
add
adc
xor
xor
sub
ljmp
jge,pn
xchg
sub
cs
das
aam
fsubrl
jecxz
imull
cli
das
add
ljmp
adc
and
cmp
das
push
xor
cs
sub
ljmp
mov
xor
sub
jp
mov
xor
sub
jecxz
std
decl
xor
cs
xor
push
imul
das
dec
xor
xor
xor
xor
mov
xor
xor
xor
xor
das
in
xor
xor
incl
xor
or
test
xor
cmp
cmp
je
jg
std
mov
incl
aaa
mov
lds
into
aaa
fisubrl
cmp
idivl
std
cmp
pop
call
aaa
xor
inc
pushf
xor
cmp
pushl
aaa
sarb
fnstsw
in
xor
sbb
ljmp
and
cmp
gs
cmpl
cmp
pop
cli
jmp
cmp
ss
cmp
cmp
mov
dec
aaa
push
cmp
cmp
negl
decl
fs
xchg
sub
jl
and
dec
loope
pop
clc
sub
daa
sbb
push
lock
xor
jg
xor
mov
cs
pop
xor
mov
xlat
xor
xor
sub
das
mov
rdpmc
dec
xor
xor
xor
das
pushl
icebp
xor
xor
xchg
xor
mov
lret
xor
adc
xor
inc
pushl
xorb
xor
ljmp
xor
cld
xor
mov
jmp
aaa
int3
fdivs
fstpt
fidivs
fs
cmp
push
cmp
aaa
insb
std
fidivs
cmp
ss
cmp
xor
cltd
cmp
cmp
xor
cli
pop
or
ss
xchg
pusha
lock
add
test
cmp
inc
cmp
call
cs
push
test
mov
cmp
aaa
sti
sub
int
add
push
jmp
jns
subl
cmpsb
sub
sub
sub
lea
daa
or
sub
push
sub
js
xchg
sub
movsb
sub
sub
cs
out
sub
das
or
aaa
js
jg
and
and
inc
xchg
jp
jecxz
sub
outsl
sub
cs
push
outsl
mov
xor
aaa
add
jb
mov
xor
divb
sbb
cmp
pusha
xor
mov
xor
sub
jns
add
std
jg
aaa
imulb
jb
ja
xchg
xor
xor
xor
xor
xor
ja
pop
loope
xor
xor
xchg
ss
xor
xor
ljmp
pushl
mov
ss
repz
push
xor
cmp
js
jp
incl
ss
mov
xor
cmp
sarb
shll
clc
xor
cmp
aaa
inc
cmp
jl
mov
cmp
cmp
aaa
mov
mov
fcoml
cmp
icebp
or
dec
push
mov
mov
rcrl
cmp
cmp
xor
cmp
outsb
mov
cmp
cmp
sar
insb
sub
pop
push
dec
dec
pop
sub
decl
sub
sub
sub
pop
sub
sub
cld
call
push
sub
sub
mov
les
jecxz
inc
ret
aaa
sbb
sub
inc
ja
jl
jle
xchg
lods
sub
loopne
in
or
pop
sub
xor
sub
js
in
inc
xchg
xor
das
lds
shrl
fnstenv
stc
add
push
das
xor
xor
pop
outsb
jl
push
aaa
xor
xor
xor
xor
xorl
xor
xor
jge
xchg
pop
std
xor
jmp
cmp
cmp
aaa
pop
cmp
cmp
mov
lock
mov
fmull
out
add
adc
aaa
ljmp
xor
add
outsl
pop
mov
xchg
cmp
cmp
ss
cmp
dec
repnz
mov
adc
lahf
xor
mov
ret
xor
xor
ss
dec
pop
sbb
sbb
call
xor
jecxz
out
clc
xor
cmp
fcoml
cs
cmp
out
jo
jb
cmp
test
lea
cltd
xor
aaa
dec
aad
loop
cmc
call
cmp
aaa
pop
mov
xor
cmp
jle
aad
xor
push
aaa
pop
cmp
sub
cmp
pop
pushl
aaa
addr16
test
cmp
inc
and
aaa
aad
or
outsl
cld
mov
pop
push
cmp
imul
cmpb
cmp
test
mov
idivb
cmp
ss
cmp
cmp
sbb
cltd
pop
cmp
test
mov
mov
cmp
repz
adc
sub
sub
add
popa
gs
ret
or
or
or
das
jns
xchg
cs
lret
das
in
repz
daa
push
call
add
das
mov
sti
lea
sti
add
jne
sub
or
push
jb
cs
je
adc
imull
pop
add
push
dec
pop
push
dec
inc
push
push
inc
push
mov
clc
incb
push
dec
inc
inc
pop
sub
mov
cmpsl
mov
pop
outsl
data16
popa
jb
sbb
outsl
jae
pop
push
imul
push
outsl
push
outsl
popa
insl
sbb
xor
add
cs
test
sub
xorl
fs
and
stc
arpl
jo
jae
arpl
arpl
imul
mov
mov
jae
cmp
bound
or
mov
adc
jo
pop
sti
jbe
pop
arpl
in
vmwrite
pop
jmp
insl
insl
ss
pop
jns
jo
adc
sti
in
jg
push
push
jb
jns
gs
add
xor
imul
fildll
sub
push
gs
add
push
jg
negl
cmp
ja
outsb
imul
adc
push
jae
mov
mov
fmulp
imul
push
sahf
popa
gs
jg
bound
jo
out
incb
jne
popa
push
ds
pop
inc
js
adc
jbe
fwait
insl
push
push
adc
jns
dec
jmp
mov
outsb
inc
inc
fs
imul
mov
jne
dec
inc
inc
xor
push
inc
dec
insl
pop
mov
lods
inc
jb
inc
insb
add
cmovno
pop
mov
testb
repnz
or
jnp
mov
inc
push
or
dec
pcmpeqw
int
cmpsl
sbb
dec
jae
jnp
inc
loope
xor
lds
movd
mov
fdivrs
jae
xchg
mov
inc
fisubrl
add
imul
pop
hlt
outsl
dec
push
and
fs
daa
push
out
shll
insb
sti
imul
adc
imul
or
insl
jae
mov
push
dec
push
push
push
xor
push
push
pop
jg
ljmp
push
push
les
sbb
mov
add
add
xor
xor
jg
outsb
sti
add
adc
test
and
jb
jmp
enter
in
divb
daa
add
ja
outsl
add
push
sbb
pop
add
push
mov
sub
repz
xchg
mov
in
das
add
outsb
adc
lret
psubd
push
lock
insl
testl
popf
add
jp
mov
in
or
outsl
lcall
pop
outsl
lods
add
jp
add
das
cld
pop
mov
cmpsb
fnstcw
or
sbb
pop
mov
fcomi
call
xchg
fcoml
pop
lret
daa
jb
in
mov
jbe
add
dec
adc
cmpl
fdivr
fstpt
sbb
clc
sarl
inc
decb
inc
pop
outsl
adc
addb
orb
out
adc
add
stc
aas
push
or
pop
push
add
push
inc
sbbb
add
add
and
sub
or
inc
cmp
lahf
cld
add
incl
rolb
nop
add
add
stc
addr16
cltd
shlb
jns
add
cltd
incl
add
add
add
add
imul
push
test
jg
sub
adc
jae
fdivr
call
dec
and
inc
add
add
add
jbe
sub
add
sbb
cs
add
add
jg
pop
add
adc
xor
inc
jb
popa
je
pop
stc
jmp
imul
outsb
addr16
or
gs
pushw
fadds
neg
push
inc
insb
jne
push
and
mov
pop
inc
gs
push
imul
mov
jo
insb
outsl
jae
dec
popa
outsb
fs
inc
je
jb
bound
jae
outsl
jbe
inc
js
mov
ffreep
and
jo
dec
popa
insl
inc
inc
gs
scas
fstl
test
push
jb
arpl
jae
jo
outsb
or
dec
fs
rcrb
insb
outsl
dec
push
add
mov
jle
jo
outsb
outsw
adc
add
xchg
mov
adc
fldcw
inc
mov
and
fs
pushf
gs
jnp
imulb
mov
xchg
jae
outsl
outsb
mov
jb
mov
add
out
jg
mov
fdivrs
jns
fldl
push
mov
out
je
adc
icebp
gs
cmpb
outsl
insb
clc
xor
push
lock
andb
outsl
je
ss
fs
xor
push
cmp
roll
lea
bound
fbstp
sbb
test
mov
jmp
adc
pop
adc
mov
or
pop
or
call
leave
adc
mov
mov
decl
insl
fistl
or
mov
fstpt
add
nop
add
or
and
incl
sbb
ljmp
or
sub
or
and
inc
sub
push
sti
mov
fisttpl
jns
aaa
xor
jmp
pop
cmc
add
insb
outsb
dec
cmp
lret
outsl
push
xchg
lock
push
or
mov
icebp
adc
add
mov
insl
add
mov
in
add
mov
mov
lret
out
movsl
dec
mov
mov
adc
fbstp
bound
arpl
call
cli
or
out
mov
inc
das
dec
or
aad
in
xor
test
pop
cmp
jno
sbb
or
fbstp
pop
push
dec
lods
rcll
pop
pop
pop
je
sbb
jnp
or
insl
mov
adc
icebp
push
sub
pop
mov
data16
push
mov
xchg
outsl
xor
or
mov
arpl
outsb
or
jo
pop
jae
fidivl
imul
ss
and
insl
bound
in
in
pop
scas
ja
or
jbe
push
aas
lods
mov
arpl
inc
inc
js
inc
mov
pop
dec
aam
jo
outsb
je
iret
mov
inc
arpl
push
jae
popa
mov
mov
loopne
xchg
push
outsb
inc
adcb
xor
inc
jo
ja
dec
mov
or
pusha
cld
mov
out
inc
aaa
jne
mov
pop
push
push
fs
imul
dec
adc
fimull
xchg
imul
stos
fwait
jne
ds
or
imul
push
jne
jae
movsb
xchg
cmp
or
push
gs
pop
popf
sub
sbb
mov
push
outsb
sbb
mov
inc
xchg
jns
mov
ja
jg
mov
movsb
outsb
imul
inc
add
jg
std
add
sbb
pop
ja
pop
sidtl
add
mov
or
jbe
lock
inc
add
add
iret
adc
sbb
jge
adc
push
aaa
fcomps
in
inc
js
mov
fsubrs
mov
insb
mov
or
js
jb
nop
xor
xchg
add
jb
popa
push
dec
flds
inc
cs
adc
lock
cmpsb
in
pop
daa
rorb
or
repz
lock
cld
in
sbb
jns
add
adc
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
