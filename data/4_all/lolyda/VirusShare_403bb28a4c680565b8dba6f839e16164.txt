daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jecxz
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
or
cmp
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
aas
mov
lods
into
mov
mov
or
shl
add
mov
mov
repnz
not
sub
lea
mov
push
sbb
rep
pop
push
and
mov
movsb
stc
inc
imull
and
pop
push
push
lea
scas
push
pop
sbb
mov
push
push
out
inc
add
inc
cmp
sbb
and
pop
out
add
int
mov
lahf
adc
and
xor
cmp
cmp
mov
push
mov
dec
sub
data16
add
add
mov
sub
sub
xor
das
inc
sbb
jge
xchg
test
add
je
mov
cmp
inc
add
inc
jecxz
lahf
je
adc
fadd
xchg
std
mov
xor
pop
jne
adc
insl
mov
sbb
adc
fstl
jle
add
push
pop
mov
push
push
jmp
push
push
pusha
int
pop
leave
push
sub
adc
mov
loope
dec
ss
mov
add
pop
enter
cmc
ret
push
test
dec
imul
add
pop
xor
fwait
xor
test
pop
mov
int
cs
fnsave
add
or
push
dec
cmp
sbb
mov
inc
jne
jecxz
xor
mov
mov
aaa
adc
fsubrl
imul
push
push
add
adc
pop
mov
mov
push
xor
shll
insb
rolb
je
xor
rol
sub
or
mov
dec
scas
and
adc
sub
ja
nop
sbb
push
or
sub
push
out
outsb
je
xor
push
mov
push
push
sub
popf
xchg
xor
inc
inc
cmp
push
pushw
stos
repz
sti
xchg
push
inc
lock
adc
push
mov
aad
cmp
add
scas
fstl
lea
push
push
jo
xor
sbb
fs
test
or
sub
dec
dec
or
mov
push
pop
push
adc
push
rorb
cwtl
loop
outsl
add
loope
dec
pop
push
push
cmp
xchg
add
xlat
inc
xchg
mov
add
xlat
dec
mov
jl
push
addl
mov
push
push
add
scas
aaa
cmp
or
push
lret
nop
sbb
pusha
add
pop
xor
jmp
jae
lods
in
rcll
ds
js
les
test
fldt
ret
mulb
adc
xorl
popf
xor
xor
in
sub
mov
xor
cmc
rcrl
push
push
push
xchg
int3
xchg
push
lods
xchg
lea
add
mov
pop
pop
or
iret
mov
inc
push
adc
adc
adc
adc
in
sbb
cmp
test
xchg
mov
dec
pop
cmpsb
sar
jne
mov
cli
mov
insb
int
int
clc
cld
lret
or
jl
or
xor
dec
push
fistpl
incl
add
test
jle
push
dec
jns
add
jp
jnp
inc
push
pop
rcl
cld
mov
icebp
jg
add
out
or
jmp
addl
sbb
nop
sbb
pop
out
jmp
mov
loopne
leave
sbb
adc
inc
mov
xor
sbb
shl
mov
pop
shll
ror
ja
mov
loopne
rclb
pop
jb
sub
sub
std
xor
xor
mov
push
adc
mov
into
adc
push
lret
jecxz
xor
push
push
fnsave
je
xchg
cmp
mov
call
fidivs
adc
inc
sbb
push
clc
sbb
call
pushl
push
lea
push
shl
gs
data16
roll
ja
ret
or
stos
mov
push
mov
aad
ret
push
push
or
xchg
adc
lods
cmp
inc
fsubs
fiadds
jmp
ret
adc
out
and
aaa
sbbl
lea
add
add
cmp
scas
push
xor
mov
mov
shlb
mov
movsl
or
jo
loop
cwtl
popa
rclb
popa
movsb
or
inc
fs
sub
pop
and
mov
xor
movsb
push
inc
addr16
or
mov
xor
dec
lea
shrl
popf
imul
dec
sbb
xchg
popf
sbb
inc
sbb
sbb
pushf
sbb
sub
sbb
push
cwtl
push
xchg
mov
sbb
movb
push
push
pop
push
idivl
aad
xor
push
and
or
mov
sub
test
adc
add
or
fwait
add
push
inc
btc
shll
add
data16
cmp
sub
sbb
mov
lret
add
pop
movsb
jbe
or
sub
in
out
aas
in
or
sub
xor
cmp
sbb
pusha
popa
in
and
jbe
and
int
xor
out
sub
mov
outsl
fstpt
or
or
mov
and
rclb
sub
adc
mov
das
adc
pop
xor
xor
sbb
aaa
sbb
mov
mov
jbe
int
inc
push
sbb
push
data16
mov
mov
inc
cmc
out
stos
fsubp
in
jae
fdivl
inc
add
out
add
bound
mov
ret
and
or
dec
mov
cld
and
movl
adc
decl
nop
adc
outsl
call
jmp
dec
insb
push
jno
mov
push
sbb
pop
sbb
rorl
push
adc
insb
out
dec
jo
mov
test
or
pop
xchg
dec
or
push
enter
sub
aaa
push
fisttps
pop
pop
and
les
or
cmp
jne
jp
and
adc
jo
mov
lock
xor
aaa
into
or
lret
int3
add
sbb
sbb
mov
add
and
pop
inc
pop
or
cmp
cmp
pusha
push
movl
sahf
out
dec
inc
add
fwait
clc
imul
mov
pushf
push
or
and
call
mov
inc
gs
sbb
mov
inc
and
adc
mov
jmp
xchg
daa
shr
int3
inc
pop
inc
data16
mov
push
js
push
rcll
xor
mov
imul
outsb
jecxz
push
je
mov
push
insl
pop
sub
lcall
lock
or
hlt
nop
movsl
sti
or
pop
xchg
and
pop
loop
mov
mov
aas
and
gs
clc
adc
ret
pop
dec
mov
pushf
mov
mov
jo
data16
sarl
dec
add
adc
lahf
fildl
incl
inc
inc
mov
js
ds
fs
add
data16
fstl
push
and
adc
ret
inc
cmpl
fsub
sub
das
je
and
lock
cmp
mov
bsf
int3
push
pop
mov
fwait
mov
mov
insb
insb
mov
pop
adc
jg
int
mov
and
insb
shlb
push
and
aaa
fcmovbe
fildll
lret
and
sbb
fcmovnb
ret
sbb
in
push
lret
xor
repz
dec
hlt
add
imul
js
adc
loopne
adc
shrl
inc
cltd
sub
add
clc
out
sbb
or
test
pop
adc
push
xor
cli
jmp
fs
pop
mov
mov
mov
mov
daa
inc
pusha
ret
movups
outsl
push
xchg
lidtl
dec
cmp
iret
or
xor
mov
sbbb
mov
mov
mov
sbb
mov
pop
adc
inc
in
push
xor
stos
leave
push
cmpsb
or
dec
and
call
cmp
int3
and
pushf
and
mov
add
popa
cmp
je
push
cld
pop
mov
repz
popa
inc
inc
cmp
cmp
and
mov
sub
outsw
enter
sbb
cmpsb
rolb
sbb
inc
pusha
adc
sahf
adcl
cmp
xchg
addr16
add
pop
dec
sahf
addl
and
lea
scas
shr
xor
sbb
dec
enter
repnz
add
fcom
lock
xchg
addr16
inc
inc
mov
adc
xchg
or
dec
lock
outsb
inc
xor
push
ret
jge
sbb
inc
adc
cmp
push
xor
pushf
loopne
iret
jmp
xor
jo
lock
mov
add
dec
aad
pop
cltd
sbb
sbb
out
negl
and
mov
pop
xchg
or
aam
xor
bound
lds
call
popa
rol
xor
sbb
jb
pop
push
inc
pusha
fwait
pop
push
pcmpeqw
ret
push
pop
sub
mov
inc
xor
jnp
and
rolb
sub
stc
push
push
add
pop
inc
and
adcl
push
push
movaps
cmp
mov
movsl
and
xor
arpl
fsubr
je
inc
sub
xchg
mov
ljmp
or
lods
out
pop
add
inc
push
push
fbld
outsl
push
adc
pop
adc
lret
out
rorb
push
xor
insb
jle
aam
sub
rol
add
add
push
sub
jno
lret
jns
or
xor
inc
adc
push
mov
mov
sbb
adc
dec
ljmp
xchg
pop
icebp
or
or
mov
mov
mov
and
push
lret
mov
test
push
int
and
push
push
pop
mov
andb
or
imul
out
sbb
xor
xor
xor
mov
sbb
aad
data16
mov
adc
call
vaddsubps
popf
seta
imul
or
leave
jae
daa
jne
pop
sbb
fs
cltd
testl
add
mov
add
mov
cmp
jb
or
mov
inc
cmp
jg
mov
or
mov
addr16
or
jo
aam
mov
mov
mov
mov
pushf
mov
mov
cmpb
mov
jo
mov
pop
mov
dec
mov
cmp
sub
mov
sbb
or
jl
mov
inc
iret
out
stc
hlt
inc
lock
mov
inc
inc
inc
sahf
inc
test
inc
inc
xchg
cwtl
pushf
mov
movsb
test
mov
cmp
inc
mov
inc
mov
mov
int3
rcl
sbb
sbb
lds
jo
fmull
push
pop
sub
mov
pop
ret
push
aad
cmp
push
and
cmp
and
jge
sub
pop
add
ret
push
xor
pusha
and
add
pop
pop
inc
add
cli
ja
mov
xor
mov
ljmp
inc
in
insb
iret
orl
inc
fs
or
xorl
or
aam
xchg
inc
cmp
xor
dec
cld
out
iret
jne
sbb
adc
adcb
push
mov
dec
in
inc
xchg
lea
test
push
add
mov
insb
mov
stc
xor
in
and
inc
mov
sti
fbstp
mov
cmpb
jne
inc
or
add
or
stc
adc
jbe
aam
dec
movsb
rclb
inc
rolb
in
movzwl
jmp
fldt
jbe
jmp
push
pop
pusha
push
push
and
jg
divb
cwtl
xor
inc
in
mov
mov
mov
insb
and
pop
mov
cs
and
or
add
xchg
stc
fisubrl
dec
out
inc
pop
ret
call
jg
imul
adc
sub
test
mov
mov
inc
jne
push
adc
stos
jne
mov
pop
fsubr
xor
cltd
add
mov
inc
into
icebp
mov
lea
paddusb
mov
in
and
lock
sbbl
clc
cmp
pop
and
add
xchg
add
mov
pushf
shll
pop
mov
xchg
dec
aam
dec
lock
adc
xor
es
testb
shll
or
and
inc
push
xor
shll
jb
scas
in
aas
rcrl
adc
add
adc
cs
lret
pop
adc
pop
or
sbb
movsl
xchg
lret
in
leave
adc
mov
or
scas
imul
and
int
mov
add
xor
adc
add
sbb
comiss
repz
scas
jmp
sub
pop
sub
adc
pop
outsb
mov
arpl
movhps
scas
pop
xchg
pop
sbb
xchg
daa
je
xlat
jne
addl
rdtsc
imul
inc
push
adc
sub
je
mov
or
icebp
testl
xlat
je
or
test
jno
mov
pop
dec
add
mov
add
out
movsl
addr16
mov
scas
jmp
insl
adc
inc
adcl
addr16
arpl
sar
or
testl
addr16
dec
ss
shrl
and
push
testb
cmpsb
pop
loop
mov
fwait
cmpsb
pushf
mov
imul
cmpsb
imul
data16
fmull
shlb
or
je
add
pusha
and
mov
adc
push
inc
loope
or
test
mov
das
sbb
lret
cmpsb
pop
outsb
add
adc
and
cmp
dec
shll
xor
and
shll
sub
sbb
adc
or
cmpsb
imul
out
pop
call
mov
loop
add
ror
xor
shll
mov
xor
shll
adc
jl
and
mov
inc
pop
mov
add
and
verr
imul
and
nop
and
xor
and
adc
xor
mov
sbb
adc
push
xor
cmpsb
imul
lock
pop
shlb
aaa
stos
mov
int3
das
dec
shll
test
xor
shll
xchg
nop
mov
js
xlat
leave
add
cmp
and
xor
jcxz
add
inc
xchg
ret
fdivl
lock
sbb
and
and
dec
sub
and
and
leave
xor
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
add
mov
adc
inc
inc
dec
xor
cs
insb
add
push
inc
push
or
mov
sti
add
xor
dec
inc
push
sbb
fcmovbe
add
jo
decl
sub
push
mov
std
stc
cli
incl
idiv
std
add
clc
cmp
stc
sti
mov
or
or
mov
jg
mov
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
fadds
sbb
sbb
dec
dec
sbb
pop
bound
pop
push
sbb
aas
jnp
pop
mov
mov
inc
or
mov
dec
std
xchg
shl
pushl
mov
inc
add
xchg
ret
daa
movsb
push
add
jl
cmp
inc
or
shlb
repz
shll
and
bound
dec
aas
adc
add
add
leave
dec
int
sub
add
add
dec
lcall
pop
sbb
decb
mov
pop
lcall
add
lea
ja
pop
ss
lret
push
or
mov
mov
or
ret
or
sbb
std
adc
jno
jb
arpl
lret
test
pop
lcall
pop
outsl
pop
xor
push
push
pop
in
aaa
cmp
popa
pop
outsb
pop
cld
cmpsb
je
fwait
xchg
cmpsb
pop
mov
push
mov
pop
fldt
addr16
lcall
push
mov
dec
push
push
inc
xchg
test
push
mov
lret
testb
inc
xor
cli
jb
mov
push
loopne
dec
cld
repnz
fisubs
fisttps
aad
mov
add
loop
mov
mov
dec
gs
sti
or
dec
std
or
mov
sbb
pop
push
ret
mov
dec
push
dec
test
or
pop
xchg
repnz
sti
mov
pop
add
jo
repz
add
fcomip
dec
mov
push
leave
add
incb
cld
in
pop
out
mov
fldcw
sub
stos
sub
in
xchg
lods
std
pop
mov
dec
pop
notb
movsb
sbb
insb
sti
jg
xchg
loope
sbb
jae
arpl
add
or
popf
inc
adc
fcomip
out
push
loope
sub
sarb
and
dec
dec
xchg
test
push
mov
cli
adc
insb
std
or
das
adc
notl
pop
push
sarl
outsb
jg
pop
jle
add
push
es
arpl
xchg
fildll
pop
ret
xchg
push
decl
inc
sbb
divb
pusha
sbb
add
adc
cli
or
cmpsb
stc
lock
dec
push
adc
inc
or
inc
notb
das
outsl
cli
ja
dec
hlt
popa
cld
mov
adc
lock
clc
jo
xor
or
cwtl
ja
aas
cmpb
mov
out
jl
cld
jno
fwait
cld
add
stc
jo
or
fildl
cwtl
test
or
mov
test
pop
insl
icebp
cli
cld
lods
pop
enter
cmpl
mov
sti
mov
xor
jo
xor
subl
cmc
in
mov
sbb
mov
dec
push
mov
dec
arpl
xchg
add
cmc
or
or
lret
in
sbb
shl
sbb
out
jle
stc
jo
xor
cmp
push
sub
jb
dec
mov
outsl
sti
shll
inc
or
mov
ljmp
inc
dec
arpl
mov
cmc
in
jl
std
jno
xor
sub
jle
pop
sbb
fs
pop
adc
ja
decl
enter
les
dec
mov
sbb
mov
sub
pop
xor
cmp
fdiv
lock
stc
jo
arpl
aas
xor
sbb
jmp
arpl
sbb
test
or
cmpsl
idiv
inc
mov
push
push
mov
addl
fistps
aas
xorl
outsl
mull
jecxz
inc
addr16
cld
push
mov
outsl
push
in
sarl
jecxz
popf
or
cld
pop
fdivp
cmp
jne
adc
add
mov
aaa
in
push
arpl
xchg
out
or
jecxz
mov
daa
imul
aas
or
sti
mov
ror
and
jl
daa
roll
mov
aas
jle
or
push
push
bound
xchg
aaa
xchg
leave
movb
addr16
add
mov
xchg
das
rorb
or
stos
xchg
cmp
leave
mov
add
xchg
sub
test
sbbl
mov
ds
jno
pop
pop
push
icebp
fwait
js
and
leave
jecxz
pop
cld
add
jg
mov
xchg
mov
xor
roll
roll
les
call
call
test
insl
add
xor
mov
sti
or
inc
mov
arpl
mov
gs
dec
push
mov
insl
call
jbe
push
sub
call
in
push
or
in
cmp
inc
loopne
add
ss
fidivl
mov
or
xchg
filds
add
jb
dec
push
xchg
ja
xchg
xlat
mov
xchg
aaa
frstpm(287
stc
insl
cmc
add
hlt
stc
adc
jmp
cmp
shrl
xor
jb
std
jg
std
popa
add
add
xchg
and
dec
in
xchg
in
insb
in
aad
pop
jmp
pop
out
fildll
pop
cmp
push
or
jg
cmc
in
fistpl
mov
arpl
fmuls
jnp
adc
mov
je
fwait
lea
dec
or
call
pop
adc
js
icebp
clc
fs
pushw
in
mov
dec
push
cmp
in
xchg
jno
sub
out
jle
in
jp
hlt
ja
shrb
xor
xor
adc
jge
out
int
push
pop
pop
push
ret
mov
in
jmp
xchg
sub
adc
outsl
pop
mov
outsl
jg
add
inc
cmp
dec
cli
adc
adc
daa
sbb
mov
test
cmpsb
mov
stc
sti
mulb
stc
int
inc
pop
arpl
add
or
arpl
add
movl
xchg
add
pop
add
xchg
aaa
cs
pmulhw
pop
xlat
and
stc
rcll
shlb
outsl
or
xlat
imul
in
add
inc
clc
imul
fistpl
mov
xchg
shrl
or
testl
or
add
out
outsl
in
clc
mov
test
pusha
cmpsb
jg
add
pop
pop
jns
jecxz
mov
loopne
imul
jge
jns
fbld
mov
adc
sub
cmp
jp
xor
outsb
or
decl
mov
push
push
test
jg
add
out
jl
inc
mov
lret
jmp
loope
inc
mov
mov
orl
out
jp
push
lds
xchg
sbb
ret
test
in
xor
mov
add
xor
dec
fnstsw
ret
cmp
lret
std
xchg
out
dec
fistps
subl
dec
cld
out
std
lds
dec
dec
xor
cmpsb
cmp
jl
or
imul
cmp
dec
repnz
aad
inc
ja
clc
push
adc
in
jg
jecxz
ds
pop
std
or
or
or
cmp
shlb
out
cli
or
pop
jl
inc
pop
add
cmpb
xchg
nop
inc
fs
inc
xchg
mov
test
jle
add
cmp
imul
xchg
or
mov
test
lds
popa
and
mov
stc
aaa
jmp
or
add
inc
xor
ret
lea
or
cs
adc
sub
aaa
xor
jge
pop
mov
je
pusha
adcl
sti
in
or
xchg
imul
mov
xchg
jecxz
pop
mov
popa
and
cld
cltd
adc
adc
pop
xchg
lock
push
lock
cmc
ds
out
repnz
dec
inc
lcall
add
cld
iret
push
push
pop
out
cs
pop
arpl
cmp
pusha
test
push
push
andl
incl
outsl
decl
cmp
ljmp
cld
sub
clc
jle
adc
dec
aaa
cmp
in
test
pop
push
pop
xchg
fwait
test
adc
adc
ljmp
clc
dec
int
jg
imul
mov
sbbl
arpl
pop
push
mov
xlat
mov
mov
dec
jmp
orb
iret
pop
icebp
sub
xor
insl
xor
mov
xchg
lret
mov
aas
popa
add
ror
jle
dec
mov
das
or
out
mov
sub
pop
pop
incl
outsl
lea
cld
ret
mov
inc
ret
pop
insb
mov
and
sbb
fwait
dec
sti
push
push
xchg
sbb
test
sbb
outsl
lock
incl
add
push
clc
shll
add
icebp
and
inc
outsl
mov
pop
inc
cmp
push
loop
aas
shr
idiv
cwtl
les
add
cmp
or
out
daa
mov
loop
jecxz
cmp
pop
sarl
mov
addr16
test
data16
fldl
test
adc
insl
clc
dec
dec
push
cli
je
mov
ja
push
orl
fistpl
sbb
dec
xchg
in
add
aaa
add
push
adc
test
xor
ret
cmpl
xor
mov
cmp
mov
mov
dec
pop
in
inc
mov
jl
pushl
subl
jno
sar
xor
add
pop
xor
add
cmp
mov
dec
fidivrl
arpl
cli
jno
lahf
mov
mov
fucomi
xchg
jg
xchg
jg
add
std
in
inc
cmp
fwait
mov
ret
test
jns
add
shr
and
or
pop
push
pop
push
push
movsl
popa
sti
test
test
push
xchg
dec
mov
lret
or
push
jp
jmp
enter
jno
sub
xor
push
or
jno
fucomp
sbb
je
push
or
add
stos
scas
jne
mov
roll
in
push
dec
lds
mov
in
adcb
add
sar
fistpl
clc
imul
negl
jge
incb
jp
inc
negb
inc
add
adc
pop
fidivrl
test
popa
mov
jle
outsl
dec
adcb
int
inc
jge
add
es
or
out
insb
xchg
in
sbb
or
inc
add
mov
dec
or
incl
outsl
add
aaa
dec
jae
jle
add
mov
jno
aas
pop
imul
push
dec
outsl
push
adc
sarl
das
orb
cs
dec
outsl
adc
cmp
jb
inc
cmp
lds
dec
inc
pop
jo
cmp
jle
cmp
mov
push
dec
roll
incl
call
ret
cli
std
sti
outsl
pop
jmp
out
wbinvd
or
outsb
push
dec
push
fistpll
roll
outsl
mov
adc
idivl
jge
sti
mov
and
xor
xlat
sub
push
push
adc
rol
sub
rcr
xor
call
push
adc
ss
mov
arpl
jae
aas
and
cli
aad
add
xchg
pop
jg
push
dec
pusha
jnp
jge
cmp
or
decb
xor
call
xor
inc
clc
shlb
fstpl
pop
and
cmp
mov
push
push
movsl
ja
call
cld
iret
bound
std
insb
pop
sbb
push
insl
mov
mov
ds
push
mov
or
std
push
aaa
push
sbb
dec
call
pop
lock
out
das
lahf
xchg
xor
push
push
or
test
lahf
leave
aas
and
cld
insl
push
jno
scas
sarb
rclb
pop
adc
rclb
and
aaa
popf
add
xor
push
loope
push
cmp
dec
clc
outsb
pop
adc
cli
xor
mov
mov
xor
rcr
ljmp
and
pop
sbb
mov
push
xchg
pop
sub
sti
mov
out
push
arpl
popf
mov
in
cmp
or
aam
stc
cmp
push
xchg
push
imul
xchg
push
xchg
mov
dec
lahf
fbld
insl
cs
mov
pop
repz
scas
incl
sarb
add
xchg
mov
adc
mov
subl
ja
or
push
fld
mov
dec
fs
cmp
aaa
fstpt
je
sub
ret
cmp
outsb
xchg
insl
push
fwait
gs
push
xchg
sub
lea
mov
pop
cmp
sarl
not
pop
sarl
cmp
lcall
cmpb
cmp
push
adcl
das
hlt
inc
dec
popa
repz
push
sub
add
mov
andl
sbb
test
decl
arpl
dec
jmp
leave
out
mov
ds
sbbb
pop
pop
ret
fildl
push
add
or
outsb
and
pop
pushw
shlb
xorl
jg
iret
stos
jne
xor
out
outsb
xchg
int
addb
mov
xchg
scas
cli
test
adc
mov
ljmp
cli
or
push
pop
lahf
mov
xor
jecxz
jno
jecxz
jge
loope
fbstp
mov
icebp
mov
sub
fbld
in
cmp
add
lret
fwait
mov
sar
sub
adc
loope
add
insl
dec
loop
push
sub
xchg
add
movsl
xchg
popf
clc
xchg
sbb
dec
pop
mov
fisubrl
lock
dec
pop
cmp
insl
sbb
push
call
pop
add
and
mov
cmp
in
insl
jle
idiv
pop
sub
addl
jmp
outsb
sbb
jbe
push
push
addr16
ss
ret
dec
cld
dec
ss
lock
cld
pushf
pop
xchg
ss
insb
testb
lret
sub
dec
jecxz
xor
das
mov
cltd
iret
andps
lods
mov
push
test
decl
jmp
stos
test
push
imul
jg
push
push
and
xor
inc
or
inc
movsl
push
pop
ret
pop
pop
lahf
arpl
jge
push
mov
stos
vsubsd
movl
movsl
sbb
les
add
cmpsb
lods
popa
or
mov
fists
fistl
mov
add
cmp
in
mov
fildl
ss
add
popf
aas
inc
dec
inc
fmull
pop
pop
pop
mov
icebp
ret
scas
call
ss
dec
icebp
sbb
dec
jmp
inc
pop
in
insl
icebp
sbb
int3
popf
xchg
xor
sub
inc
jg
mov
jmp
ret
cli
outsl
clc
orb
lret
out
subb
add
fildl
stos
mov
mov
ss
imul
test
std
movb
xor
out
addb
push
in
cmpsb
aas
add
fcmovnb
fldt
dec
addb
cmp
pop
in
test
xor
ffree
xor
jns
fisubl
jo
lods
out
sbb
pop
fisttpl
ja
xor
test
mov
pop
std
outsl
pop
insl
pop
push
enter
add
je
outsb
incl
xor
xor
xor
test
dec
dec
fdiv
mov
xor
shl
xor
jb
dec
test
mov
adc
fdivs
int
add
lock
sub
filds
jae
out
mov
int
test
dec
std
addl
add
push
mov
divl
stc
sbbl
out
test
mov
xchg
fadds
push
pop
xor
dec
or
les
loope
decl
jl
pop
xor
adc
subl
repz
jae
xchg
jge
or
daa
jo
xorl
pop
cmp
fistpl
ret
outsl
jecxz
cli
imul
mov
pop
mov
jo
addb
pop
jae
out
pop
pusha
addl
fsubl
pop
std
iret
or
rolb
repz
jno
jb
jl
lea
adc
jb
andl
cld
inc
lret
movsl
mov
mov
sbb
sbb
enter
mov
dec
inc
sbb
mov
test
mov
fcmovnb
sbbl
in
shlb
sbbb
inc
inc
test
pop
add
lret
xchg
orb
hlt
push
fiadds
daa
mov
push
outsl
pushf
and
jg
adc
jmp
clc
xchg
lods
fidivrl
jl
cmpsl
mov
inc
add
inc
or
mov
sbb
jns
push
bound
push
sub
push
imul
jle
or
cmp
in
roll
mov
fcompp
mov
push
in
xor
xor
sub
sbb
push
mov
add
push
dec
push
mov
fs
mov
push
mov
sub
std
pop
jg
push
inc
aas
push
cld
out
sbb
popf
lock
jg
xor
fldcw
test
xchg
fwait
iret
outsb
loopne
ss
xchg
push
add
add
mov
shll
add
pop
stc
ljmp
sbb
das
xor
aam
sti
out
sbb
push
addl
fnstsw
lods
push
xor
std
jg
xchg
mov
sbb
in
or
cmc
stc
movq
incb
mov
push
leave
pop
andb
inc
or
push
leave
cmp
idivl
or
mov
mov
add
add
adc
fistl
push
xor
jbe
cmp
ss
pushl
xorl
cmp
sbb
mov
add
jecxz
cmp
outsl
or
dec
inc
js
pop
aad
xor
or
xchg
ss
cmp
sti
insb
xor
or
andb
mov
inc
mov
sub
shl
mov
insb
cmp
outsb
xchg
in
and
loopne
cmp
mov
test
lcall
or
icebp
incl
pop
out
jnp
sbb
outsb
test
daa
jo
push
addr16
out
lods
push
jecxz
test
jae
adc
arpl
cs
sbb
clc
sub
clc
stc
sbb
sti
adc
cmp
stos
jl
xor
or
sub
mov
xlat
jg
mov
pop
pop
ss
mov
in
xchg
wbinvd
ss
add
push
orl
mov
xor
pop
push
pop
mov
das
rol
inc
inc
arpl
sbb
pop
outsb
rcrl
imul
or
add
sub
sbb
outsb
call
dec
pop
add
sbb
ret
subb
push
sub
or
ds
inc
std
pop
addr16
mov
addl
pop
xchg
in
fldt
arpl
mov
imul
jecxz
add
sub
mov
mov
add
jmp
mov
pop
xor
cmp
sbb
inc
xchg
dec
add
add
mov
test
inc
cld
push
jnp
stc
outsl
or
outsb
and
jmp
mov
mul
cmp
outsl
or
bnd
outsl
or
fldenv
out
loop
sbb
cmp
jl
std
call
outsl
and
mov
pop
mov
ret
cmp
jb
cltd
sahf
loopne
fwait
jecxz
sahf
call
or
mov
fst
movsl
dec
ja
dec
addl
jmp
pop
xchg
adcl
fldenv
outsl
insl
jno
loopne
arpl
es
and
sti
cmpsb
scas
ds
push
sbb
testl
fsub
cli
shlb
sti
enter
cli
jb
stc
daa
divb
mov
addr16
fcmove
pop
insl
daa
out
daa
pop
clc
in
roll
add
adc
cli
adc
punpckhbw
mov
lcall
push
sub
push
dec
push
push
fs
mov
jb
xorl
outsb
add
lahf
push
push
arpl
iret
popa
div
fcompl
into
or
jle
jp
call
outsl
in
out
jp
add
addr16
pop
jg
mov
cwtl
mov
mov
adc
adc
in
movsl
fbld
push
mov
inc
mov
dec
xchg
test
lret
mov
jno
inc
movsb
ja
mov
jo
xorl
std
pop
mov
inc
xchg
and
lock
in
ret
fisubl
js
adc
test
mov
dec
fnstenv
cmp
dec
xchg
or
std
mov
xchg
push
xchg
out
mov
cli
adc
mov
cltd
sbb
mov
push
xchg
fistpl
push
push
sbb
ret
stos
out
shll
shl
xor
sbb
stc
jnp
and
sbb
add
scas
sbb
cmc
insl
pop
gs
addr16
rorb
mov
daa
clc
dec
push
imul
bound
popf
mov
xor
sub
dec
inc
ljmp
mov
pop
cmc
jne
call
js
out
push
dec
or
or
xor
popa
les
sarb
pop
outsl
mov
incl
xlat
ret
xor
rol
repnz
dec
je
add
into
mov
js
cwtl
int
jmp
dec
std
movsb
xor
mov
out
lea
xchg
lcall
or
push
cs
shrl
insb
outsl
mov
test
jecxz
daa
pop
mov
sbb
mov
and
xchg
fisttpl
sbb
loope
data16
fisttps
or
add
mov
ss
push
movsl
and
cli
not
pop
mov
inc
out
test
cmp
packuswb
sbb
pop
xor
rolb
cltd
mov
mov
sbb
in
ffree
jmp
mov
jg
cli
fs
rorl
rorl
ljmp
loope
sub
lea
outsb
shlb
sub
dec
fistpll
daa
mov
popf
xchg
addr16
push
loope
or
mov
mov
mov
insl
jecxz
cmpl
jecxz
sub
mov
ficomps
jmp
je
sub
stc
push
daa
dec
pop
xchg
mov
xor
adc
mov
rorb
inc
lea
ret
and
pop
out
hlt
out
mov
fucom
es
xor
inc
and
cmp
push
xor
in
dec
outsl
sub
icebp
loop
cs
aaa
push
repz
xchg
call
aam
pop
xor
insb
push
cmpl
in
lea
ss
lock
ret
push
push
dec
lock
lods
mov
cmc
cmpl
mov
and
sbb
test
jmp
dec
lahf
jl
jnp
or
lret
adc
subb
repz
ds
cli
jecxz
pop
cmp
adc
push
sub
push
fmuls
or
xchg
sub
movsl
or
dec
sti
xchg
stos
insl
ljmp
and
fidivrs
in
cmc
rolb
arpl
rcll
jl
testb
jecxz
testb
jle
pop
ljmp
pop
sti
jb
pop
jp
aas
rorb
in
or
fistpll
mov
aaa
mov
adc
fsubs
sbb
dec
dec
xchg
rclb
inc
into
dec
jecxz
sub
xchg
sbb
mov
dec
dec
sub
stos
cmc
push
jge
pusha
push
or
arpl
cmp
push
sub
cmpsl
sbbl
neg
fs
mov
xor
std
orb
xchg
adc
lahf
scas
aas
sbb
mov
test
popa
cmpsl
mov
mov
cmp
outsb
cld
jb
add
dec
mov
out
pop
push
mov
or
lods
clc
mov
aam
push
lahf
mov
xchg
jne
in
xor
jo
adc
fsubr
bound
xchg
xor
jg
or
or
xorb
inc
dec
loop
sub
xor
xchg
dec
dec
sti
into
popa
xchg
sub
add
sub
adc
loop
mov
dec
gs
or
mov
mov
mov
out
dec
out
sub
ret
aaa
in
dec
mov
dec
rcrl
lcall
cmp
jg
loopne
sub
or
jecxz
push
inc
xchg
cli
ja
or
push
mov
add
xor
std
jg
xchg
cmp
xchg
push
sti
add
jp
xchg
std
push
add
mov
dec
mov
add
mov
imul
popf
roll
or
mov
adc
js
xor
push
je
gs
or
xor
mov
adc
imul
fbstp
insb
js
or
mov
cmp
or
sti
js
push
dec
std
aad
xor
ds
dec
adc
rcrb
or
xor
repz
mov
fdivr
mov
jle
cld
or
into
pop
bound
and
stc
mov
mov
popa
cmp
mov
cs
push
jle
mov
xchg
adc
inc
dec
dec
xchg
or
clc
add
gs
stos
sub
push
mov
sbb
call
insb
in
mov
jmp
mov
fwait
add
push
orb
inc
outsl
mov
sub
xor
jnp
sub
lahf
rclb
aad
loope
je
mov
mov
push
or
add
mov
dec
mull
mov
add
push
adcl
es
fwait
mull
ja
cli
inc
add
fmuls
jp
xor
or
and
icebp
xor
mov
lods
mov
jo
or
and
daa
cmp
adcb
mov
jg
test
lcall
xor
dec
mov
dec
xor
outsl
add
ss
lds
cmp
mov
pop
dec
dec
push
xorb
clc
nop
movsl
sbb
ret
pop
je
repnz
and
xor
xor
js
cmp
push
or
ja
shr
mov
jecxz
pop
push
iret
pushf
fisubrl
cmc
movsl
add
test
adc
cld
jnp
mov
divb
mov
cli
adc
xchg
mov
test
call
push
dec
add
out
testl
sarl
mov
daa
in
addr16
int
or
xor
dec
pop
xchg
pop
mov
call
pop
push
pushl
push
sub
adc
cmpsb
arpl
ss
or
and
aad
add
ja
std
in
daa
pop
mov
sbb
test
ja
outsb
ds
mov
push
pop
xchg
sbb
cmp
cmp
std
pop
clc
lods
sbb
inc
xchg
add
sub
dec
mov
pushf
push
add
mov
pop
mov
xchg
cmp
push
add
scas
dec
mov
pop
pop
jns
add
fadds
or
and
add
mov
arpl
in
std
xchg
xchg
sahf
gs
loop
leave
hlt
push
cli
xor
fisttpll
mov
sub
ss
add
inc
in
movsl
mov
mov
add
out
push
mov
sahf
mov
sub
push
outsl
insl
sbb
sbb
outsb
rcll
sahf
aad
ja
js
cli
iret
dec
cld
int3
pop
xchg
mov
ficoms
mov
xchg
jmp
dec
loope
test
push
test
jecxz
jmp
dec
sub
popf
jmp
les
out
mov
std
or
pop
push
jne,pn
and
in
aas
add
jno
jecxz
hlt
aaa
pop
andb
rcrl
push
outsl
lds
jo
dec
outsl
adc
loope
stc
test
jnp
xchg
dec
outsl
jb
andl
jno
fucom
add
jno
insl
pop
mov
decl
adc
imul
mov
scas
and
insl
jg
adc
imul
cmp
inc
add
out
cmpsl
pop
cmpsb
test
inc
or
inc
filds
cltd
mov
jle
hlt
push
xchg
cmp
test
arpl
fstl
inc
imul
pop
fdivp
sbb
mov
cmpb
lahf
mov
jo
sub
pop
iret
js
ljmp
std
jl
aaa
mov
dec
loope
or
addr16
pusha
pop
sar
orb
ret
xchg
jecxz
push
and
mov
std
popf
mov
push
in
push
fs
xchg
popl
call
jnp
imul
ljmp
add
push
dec
arpl
das
loopne
lret
insb
cs
decl
or
ja
mov
loop
rcrb
test
mov
xchg
in
mov
pop
in
stc
sub
jmp
dec
push
inc
hlt
or
push
daa
xor
jmp
testb
loope
ret
or
sub
inc
sub
ret
mov
ljmp
ret
mov
cmpb
push
cmpsb
test
test
shll
lock
adc
ss
ficoms
cmp
in
add
push
or
lret
outsl
lcall
fcoml
outsb
das
xchg
add
mov
fildl
fxch
pop
jae
mov
stos
dec
and
jno
add
cmpsb
cmpsb
and
lds
mov
fldcw
cld
shll
jp
ret
sti
sbb
ret
dec
cwtl
xchg
popa
or
repnz
mov
mov
mov
data16
lea
or
mov
test
jmp
arpl
pop
sub
int
icebp
aas
push
addr16
fnstenv
push
mov
pop
adc
add
mov
outsl
mov
ss
outsb
jg
push
emms
mov
shlb
xchg
shrl
inc
push
xor
xorl
sub
adc
scas
cmp
lods
mov
in
pop
in
movsb
movsl
cmpsb
bound
or
stc
loopne
in
adc
fwait
xchg
test
std
push
imul
xchg
addb
mov
jne
fsub
inc
xchg
push
mov
sbb
fnstenv
sahf
dec
aad
cwtl
pop
cwtl
fbld
loope
xchg
mov
jbe
and
dec
jb
adc
fstpt
dec
sbb
test
sbbl
mov
add
in
cmpsl
push
or
or
cmp
or
lahf
push
cmp
pmaxub
repz
jo
outsb
das
mov
inc
ljmp
aas
cmp
das
xchg
add
mov
mov
mov
xor
fwait
pop
inc
in
fisttpl
stos
cs
cs
fwait
sub
jge
and
cmpsb
sbb
jo
fnsave
inc
lock
mov
insb
push
mov
adc
push
xor
fisttpll
incb
pop
shll
popa
rolb
push
roll
sti
or
pop
in
pop
roll
add
shll
inc
cmp
xchg
jb
mov
xor
outsl
jl
and
push
sbb
test
mov
mov
lahf
ss
inc
fcmovne
bound
inc
xor
adc
or
repz
jmp
sbb
rcll
cmpsb
in
lahf
or
shrl
lahf
cli
in
sub
sbb
xor
push
out
test
xchg
pop
add
lods
icebp
dec
aaa
aas
js
mov
arpl
mov
rorb
mov
mov
std
lret
add
lahf
gs
mov
xchg
xchg
data16
fbstp
popa
mov
mov
mov
sbb
dec
daa
cmpsl
fidivs
jo
sbb
bound
loop
inc
cmp
jle
or
lods
outsl
xor
movsb
loope
mov
sub
out
mov
push
addl
test
rcrl
mov
push
xor
stos
adc
sbb
and
and
fcompl
neg
lret
repnz
sbb
add
hlt
testb
stc
dec
push
test
jb
sub
mov
push
push
mov
decl
add
test
jbe
testb
shrb
jmp
pop
dec
insb
add
add
mov
or
lret
testb
nop
mov
sti
inc
dec
loope
pop
test
aas
dec
dec
in
pop
mov
shll
add
aad
push
or
mov
mov
mov
cld
shll
add
cli
jb
jno
mov
lods
cmp
daa
cs
rclb
out
sbb
jno
sub
lahf
fwait
sbb
imul
push
daa
dec
hlt
je
mov
daa
cmpsl
test
xor
add
xor
xchg
and
add
cmp
aas
add
dec
sbb
mov
ffreep
aas
mov
mov
sarl
cld
push
imul
shrl
fs
push
cmp
dec
loop
pop
test
push
dec
adc
cltd
or
inc
xchg
cmp
push
mov
outsb
dec
sti
sbb
aad
sub
sbb
sti
cmp
sub
insl
lods
jp
sbb
call
int3
xchg
std
cltd
add
cld
movsb
daa
push
shrl
cmpsl
dec
sbb
mov
mov
xchg
leave
push
inc
jns
loope
sbb
jmp
sbb
cld
pop
outsl
icebp
sbb
sahf
mov
dec
cmc
test
ja
lret
add
push
cltd
enter
imulb
sbb
movsl
movsl
push
lods
mov
jae
cmp
cmc
sti
cmp
fidivl
js
jge
mov
pop
mov
idivb
jge
imul
inc
push
not
cmp
xorb
mov
cli
mov
mov
out
test
pushw
in
mov
outsl
mov
or
pop
ja
sbb
mov
fucom
icebp
sbb
mov
sub
out
xchg
push
xor
or
pop
outsb
jle
loop
sbb
add
or
or
or
test
jb
pop
daa
or
mov
fs
jnp
test
and
popa
inc
sbb
mov
add
daa
jb
push
pop
outsb
xchg
in
sbb
dec
jnp
dec
push
push
add
cmova
push
popa
sbb
jg
jg
push
sbbl
ja
ficoms
test
pop
sahf
enterw
cltd
xlat
push
add
pop
loopne
gs
sar
pop
or
call
sarb
out
xor
fimuls
push
lock
bound
orb
pusha
repz
mov
outsb
xchg
jecxz
bound
push
int3
repz
push
bound
inc
sbb
or
mov
inc
mov
add
xchg
arpl
xor
in
ljmp
incb
arpl
lds
int
insb
jmp
xchg
std
ds
pop
jge
js
mov
jecxz
icebp
addr16
lahf
pusha
cmp
aam
insl
stc
inc
lock
inc
cmc
jge
mov
mov
arpl
loopne
cs
testb
andb
stc
sti
jnp
dec
repz
dec
or
mov
popa
andb
data16
dec
xor
pop
mov
jp
cmp
dec
mov
mov
in
or
dec
xor
adc
icebp
lret
scas
jecxz
jl
push
adc
dec
dec
bound
icebp
cmp
stos
in
imul
push
rcl
inc
lds
in
int
mov
mul
mov
test
push
icebp
clc
aas
repz
jg
out
adcl
cmp
inc
cli
lds
es
pop
push
das
loop
insb
daa
push
adc
stc
test
sahf
aad
test
or
push
mov
decb
and
mov
push
jecxz
push
mov
dec
jecxz
pop
fidivs
cmp
icebp
scas
out
sbb
dec
add
sub
lcall
pop
std
inc
sbb
aaa
cmp
fstp
lea
dec
dec
xchg
addr16
push
int
stc
xchg
iret
jno
notb
and
push
adc
xlat
or
fistpll
loope
sbb
stc
pop
add
sub
pop
ss
pop
jo
pop
stos
cmc
add
sub
lock
mov
sbb
roll
or
pop
jno
or
shl
xchg
flds
cmp
aam
pop
push
sarb
out
flds
loop
jb
push
fdiv
aaa
xor
xlat
dec
cld
lods
jge
mov
ret
push
test
push
push
mov
loop
cld
cmp
gs
lahf
lods
push
push
jmp
cmp
sbb
or
das
dec
pushf
ret
lahf
outsl
pop
popa
push
incl
jecxz
les
stc
vcvttps2dq
inc
jo
jecxz
in
jno
cld
aaa
lcall
decb
add
pop
jg
push
push
push
data16
sub
adcl
cli
xchg
pop
push
ljmp
jmp
sub
sub
mov
rorl
pop
loopne
adc
js
pop
loop
sub
addr16
call
out
jno
jecxz
mov
jbe
and
fisubl
add
cmc
pop
xchg
out
les
pop
xor
jno
sbb
jge
outsl
test
idivb
jg
cltd
mov
aaa
bound
xor
cld
mov
test
xor
cli
push
xchg
mov
cmp
std
sub
inc
es
negl
inc
dec
inc
cs
or
ds
cmp
cmc
loop
dec
inc
cs
jmp
cmp
fnstsw
inc
cs
rorl
cs
lds
and
mov
adc
movsl
mov
and
cmp
xchg
sbb
adcl
in
jmp
push
add
loop
inc
jo
mov
scas
mov
icebp
test
jle
js
fadds
data16
out
stc
adc
popf
mov
jg
popf
lods
xchg
icebp
dec
adc
adc
pop
in
xor
fs
mov
lret
or
testl
xorl
mov
int
out
test
lock
sbb
jbe
aas
push
rolb
iret
aaa
test
or
imul
sub
or
shll
sbbl
cld
insb
scas
jae
jmp
aaa
daa
rcrl
ljmp
ljmp
lahf
xchg
or
xlat
dec
mov
adc
sub
mov
lret
outsl
lock
cmp
mov
testb
call
test
add
mov
cld
cmp
inc
pop
mov
test
jle
js
jg
loop
sbb
sbb
ret
testb
shlb
push
jno
pop
mov
mov
or
push
std
js
push
cmc
mov
call
add
add
push
mov
addl
xorl
adc
fwait
insb
xchg
ret
xchg
add
sar
cmc
addb
adc
inc
xor
jne
pop
test
pop
sub
lods
mov
ficompl
test
js
sub
hlt
jmp
jno
sbb
in
movsl
mov
icebp
loopne
jno
mov
fists
hlt
in
jle
outsb
cmp
outsl
ss
cli
jae
and
adc
fwait
cmp
or
mov
pop
jns
stc
cmp
lcall
lahf
hlt
dec
mov
jecxz
or
stc
sar
iret
cmp
add
inc
and
or
lds
and
daa
mov
cmp
add
ljmp
and
in
xchg
add
inc
push
push
nop
add
sub
push
std
push
test
cmp
clc
pop
jl
ljmp
stc
lret
cmpsl
mov
inc
clc
lds
mov
in
adcb
sub
frstor
jne
dec
sbb
push
dec
fnstsw
add
jo
mov
xchg
cmp
outsb
mov
fwait
fs
popa
out
sti
add
inc
fildl
dec
mov
push
or
std
push
pusha
cmp
mov
jno
dec
dec
mov
lock
push
push
gs
arpl
cmp
pop
mov
push
sub
lcall
pop
xchg
lcall
adc
aas
cmp
fbstp
aas
ficomps
push
adc
or
jg
outsl
out
fdivl
mov
inc
repz
and
mov
xor
cli
cmp
leave
add
arpl
xor
cmp
pop
repnz
push
push
jl
aaa
push
test
out
dec
loop
adc
xor
inc
testb
pop
sbbl
pop
push
pop
bound
shr
movsl
add
aaa
test
enter
dec
and
dec
lods
pop
xchg
test
lahf
jns
lcall
test
js
out
jo
lahf
fimuls
cltd
mov
push
lods
jae
aaa
jo,pn
insl
xchg
gs
and
or
push
sti
sub
sti
pop
ja
jle
lcall
test
sbbb
pop
stc
jl
dec
aaa
jge
push
jns
sub
push
loopne
or
addb
test
decb
sub
or
daa
dec
test
inc
inc
fdivrs
ja
jg
dec
in
jnp
jp
aad
mov
adc
jp
dec
aas
adc
fimull
push
dec
push
sti
jge
mov
add
ss
cltd
mov
lahf
fwait
rorl
cmpsl
es
mov
jecxz
ds
ljmp
sbbl
mov
das
push
or
mov
and
sbb
or
gs
dec
sarl
or
inc
cmp
push
aaa
or
in
jp
pop
jb
dec
jo
inc
clc
cmc
clc
jle
pop
mov
jmp
xchg
mov
jno
xchg
push
lds
imul
lea
add
insb
sar
pop
add
pop
jmp
sub
test
adc
cmp
jecxz
insl
inc
lret
jge
sbb
out
add
insl
test
jo
lods
daa
inc
sbb
mov
push
adc
push
in
xchg
dec
js
or
or
bound
ret
insb
mov
xor
je
cmp
stos
repnz
hlt
cmp
lret
nop
adc
xchg
inc
and
xchg
add
sub
xchg
sbb
insb
sbb
sub
and
pop
or
dec
xor
shl
pop
xchg
testb
sub
popa
jns
fldcw
mov
insl
push
add
notl
in
sub
jne
jle
lahf
and
or
jecxz
cld
xchg
out
mov
popa
cmpb
std
push
jge
cmp
pusha
mov
js
gs
mov
std
inc
jg
sub
pusha
setne
push
jge
aas
mov
add
push
mov
push
ss
inc
xchg
inc
and
ja
lock
mov
aaa
les
cld
lret
push
pusha
mov
and
mov
add
push
insl
popa
mov
add
movsl
dec
in
inc
sbb
or
or
push
dec
gs
not
idivb
sub
add
add
mov
push
dec
xchg
cs
pop
test
lock
dec
jecxz
pop
dec
arpl
add
fistl
pop
add
push
or
sub
ljmp
repz
mov
pop
add
outsl
shll
in
in
roll
and
stc
fldt
imul
cmpb
xorb
add
or
std
dec
dec
mov
adcl
mov
mov
ret
mov
inc
ljmp
scas
push
pop
sub
movb
sub
pop
push
mov
push
jecxz
inc
je
add
xlat
sbb
fs
inc
lds
and
outsb
cli
xchg
dec
or
or
mov
pop
or
out
push
mov
daa
sbb
xchg
dec
mov
mov
and
stos
sbb
jae
push
push
mov
sbbb
xor
or
std
inc
push
xlat
jae
push
jnp
es
jo
mov
repnz
cld
sbb
xor
repz
mov
add
aam
mov
in
in
push
xor
outsl
jae
loopne
mov
lock
js
mov
pop
idiv
or
pusha
push
and
imul
push
xchg
sbb
cmpsl
out
add
leave
or
pop
and
jne
add
gs
popa
std
dec
sub
mov
jge
shrb
dec
or
andb
mov
or
mov
idiv
fstpt
in
or
pop
clc
xchg
push
mov
sbb
cmpb
loop
incl
incl
cmp
cld
aam
xchg
sarb
jb
sub
sub
push
or
stc
push
xchg
push
outsl
pop
or
push
incl
push
jge
add
testb
jns
cmp
pop
push
mov
decl
inc
mov
clc
inc
xor
std
dec
adc
fucomp
lea
jmp
inc
or
fistps
mov
and
mov
adc
incl
lods
dec
cld
sub
test
push
mov
cmc
pushl
flds
or
push
call
ret
loop
push
insb
shrl
aam
outsl
jne
shlb
insb
mov
test
insb
xchg
cli
lret
xor
mov
test
out
sbb
repz
lds
lds
xchg
add
xlat
sbb
bound
stos
mov
sbb
add
dec
nop
mov
mov
mov
std
insl
jno
mov
add
bound
xor
adc
mov
dec
or
rolb
mov
mov
test
pop
mov
sbb
mov
mov
add
fucomi
arpl
mov
or
icebp
pop
repnz
jb
dec
insl
add
xchg
jge
in
test
add
test
cmp
mov
push
xor
pop
out
cmpsb
xchg
stos
lea
xor
arpl
lret
mov
mov
pop
lret
push
icebp
pop
call
rcrb
adc
scas
call
testl
test
cli
pusha
sbb
add
pop
in
pop
jle
popa
aas
fildl
bound
roll
aas
ret
xor
jne
push
xor
out
in
rclb
pop
sbb
lods
inc
addr16
popa
mov
xor
pop
cli
aas
test
pusha
gs
jle
pop
sbb
popa
add
rolb
mov
mov
xor
mov
xor
addl
dec
xor
push
and
xor
pop
hlt
aas
add
icebp
mov
fs
repz
int3
sub
lcall
daa
shll
mov
outsl
push
sub
inc
call
std
data16
mov
in
aas
adc
js
lahf
shlb
inc
mov
insb
mov
out
pop
and
out
inc
test
in
mov
dec
std
arpl
vucomiss
push
arpl
xor
pop
call
lret
rolb
xor
sbb
and
popl
lret
lods
in
add
mov
jmp
or
bound
xor
pop
repz
add
fsubl
lods
jl
test
pop
and
sub
stc
arpl
cmpsl
out
in
std
sti
das
je
mov
xor
push
popa
or
fwait
or
aas
pop
incb
repnz
pop
dec
pop
insb
outsb
and
rorl
mov
xchg
or
out
jg
insb
test
jge
rcrb
out
sti
sbb
cltd
fs
mov
out
hlt
jmp
sar
pop
xor
fdivp
jmp
mov
cmc
bound
sbb
insl
mov
iret
push
insl
test
or
fisubs
scas
in
cld
lret
in
insb
jge
inc
mov
sti
cmp
lret
lahf
push
adc
cmp
mov
insl
fldcw
mov
repnz
mull
fwait
in
add
mov
mov
jns
or
icebp
inc
clc
pop
out
arpl
lret
jmp
push
xor
sbb
mov
jae
mov
cld
xor
int3
aam
fcmovnb
movsl
inc
sbb
out
enter
pusha
loopne
aam
gs
cmc
push
xchg
outsl
js
decl
dec
fisttpll
lods
jns
add
cmpsl
shlb
add
mov
inc
cmp
mov
mull
daa
in
add
nop
in
xchg
clc
and
add
std
lahf
push
xchg
movsb
repz
add
nop
fnstenv
incb
xor
pop
fwait
mov
cmc
dec
xchg
adc
mov
psrlq
repnz
clc
pop
leave
add
cmp
fdivr
vmread
out
dec
push
dec
mov
int
jmp
fprem
int
arpl
push
jg
push
mov
leave
fs
int
decb
mov
mov
add
fsub
sub
xchg
leave
ret
filds
repz
mov
aas
clc
sahf
insl
mov
outsb
xor
sahf
repnz
push
mov
lods
lock
xor
lock
xchg
test
repnz
cmc
adc
es
mov
mov
iret
sub
fistps
hlt
idiv
mov
iret
and
sarl
sti
pop
mulb
sarb
push
scas
push
mov
push
add
cld
mov
insl
xchg
in
clc
inc
or
pop
stc
pop
push
pop
push
sbb
inc
loope
push
xchg
icebp
lret
pop
cmp
push
bound
pop
ljmp
and
sti
inc
adc
into
in
sbb
pop
outsl
sbb
fiaddl
xchg
sbb
pop
push
dec
dec
or
dec
add
jg
dec
jge
out
lret
and
inc
jmp
pop
ljmp
cmc
outsl
cmp
add
out
pop
rcr
push
in
cld
test
xor
inc
mov
pop
sbb
insl
push
and
incb
incb
xchg
int3
call
mov
into
fiadds
jmp
outsb
imul
pop
lahf
jg
test
push
dec
add
enter
gs
inc
push
push
subl
arpl
or
xlat
loopne
pop
jg
push
xorb
push
mov
mov
push
mov
aaa
mov
fildl
xor
outsb
push
adc
incb
or
sub
loop
test
test
mov
decl
mov
mov
add
add
inc
divl
mov
dec
xor
cmp
rep
or
and
flds
dec
bound
jae
jecxz
jge
pop
rorl
mov
loope
jg
jp
cld
xchg
sbb
lret
add
jg
pop
addb
pop
test
xchg
in
addb
mov
cmp
fistpl
ds
stc
adc
insl
mov
dec
pop
add
jle
push
push
daa
dec
mov
push
xchg
aas
mov
jg
cs
inc
push
inc
push
jle,pt
cmp
test
jecxz
in
cli
pop
aad
sar
xor
push
pop
mov
inc
arpl
inc
out
loopne
sub
inc
aaa
xchg
add
inc
pop
inc
cmp
push
push
pop
ret
and
daa
push
xor
out
shll
aas
add
jecxz
xchg
cli
pop
mov
cmp
or
mov
inc
pop
jnp
icebp
cli
gs
leave
xchg
ja
orw
xor
fbstp
lret
sar
stc
adc
mov
adc
in
clc
in
pop
ljmp
xchg
and
push
push
dec
cmc
push
and
dec
pop
stc
pusha
ret
xchg
and
xor
add
dec
push
mov
pop
and
sbb
mov
shlb
xor
rorb
je
push
mov
repnz
clc
jg
jnp
ljmp
lret
jmp
jle
push
jo
jle
test
pop
mov
jle
push
outsl
add
dec
loop
testl
push
mov
jg
add
mov
iret
sti
push
sbb
stc
mov
inc
xor
mov
dec
stc
xchg
pop
loop
push
push
imulb
cmp
xor
lcall
das
lock
aaa
rolb
mov
add
std
sub
das
or
mov
jl
or
mov
or
cmpsl
divb
outsb
xchg
fstps
xchg
add
and
dec
jge
mov
loope
popa
stos
adc
mov
fs
mov
insb
xchg
enter
stc
xchg
mov
mov
incl
add
push
in
pusha
add
fstp
xchg
std
push
insl
push
xchg
xchg
push
sub
mov
mov
adc
ficoms
xor
mov
adc
jo
xchg
mov
jnp
in
add
add
daa
ss
or
mov
pop
xchg
cmp
or
mov
pop
aad
xor
clc
dec
jns
cli
xor
xchg
shrb
push
adc
arpl
stos
push
pop
cmp
jecxz
divb
mov
rolb
popa
push
test
adc
pop
adcl
pop
mov
sbb
pushl
test
sub
mov
test
outsl
outsl
sub
mov
adc
inc
xchg
sti
or
outsl
xchg
jmp
mov
sub
xor
std
test
stc
mov
test
add
or
push
icebp
rorl
cli
add
jecxz
test
jnp
xchg
mov
cmp
fdivrp
mov
xor
fsubs
and
fimull
adc
mov
stc
repz
inc
xchg
cmp
gs
mov
inc
dec
adc
insl
adc
jp
fistpl
sbb
lea
addr16
push
pop
subl
insl
push
push
sub
jne
lahf
in
and
stc
inc
cmp
loop
stos
clc
ja
popa
cld
push
aaa
mov
decl
aas
and
sahf
rcr
loope
ljmp
mov
mov
adc
add
clc
dec
dec
popa
les
fwait
jbe
inc
loope
shll
je
std
push
jmp
ss
mov
add
negb
pop
call
aam
mov
sub
ds
inc
ss
fildll
aas
jns
jno
jecxz
popa
mov
enter
cmp
xor
decl
leave
arpl
dec
pusha
cwtl
loope
test
pop
or
and
fs
fists
push
pop
dec
mov
pop
fs
jg
out
cld
mov
dec
cmp
imul
jne
subl
cmp
mov
sub
xchg
jle
fstl
lock
pop
cmp
dec
jge
mov
movsl
xor
movsl
add
fidivs
arpl
sbb
lea
fabs
mov
jecxz
in
mov
rcrl
mov
mov
jo
ja
pop
pop
xor
nop
xor
cld
push
mov
or
es
cmp
incb
and
pop
jnp
lea
sti
sti
daa
ret
mov
sbb
pushf
subl
push
in
xchg
ja
xor
repz
add
mov
arpl
fwait
lahf
inc
dec
sub
fldl
fwait
or
stc
xor
insl
push
orb
mov
inc
jnp
add
insl
push
sahf
mov
call
dec
xchg
push
lahf
add
jne
lock
add
inc
mov
mov
std
sbb
inc
inc
testl
cwtl
inc
jge
pop
out
pop
dec
test
sbb
in
pextrw
test
push
dec
dec
in
mov
jp
inc
notb
mov
xor
adc
xchg
push
pusha
jg
icebp
jb
jle
cld
outsl
and
dec
out
xchg
loope
or
cli
sbb
add
or
fldl
add
inc
jmp
push
mov
out
adc
push
std
insb
cmp
sbb
inc
out
mov
mov
mov
in
aas
das
or
imul
pop
test
ret
pop
in
fldenv
sbbb
jno
cmp
dec
adc
mov
shl
mov
daa
mov
sahf
out
mov
adc
in
lds
iret
repz
cmp
dec
repz
adc
jmp
pop
fistpll
imul
xor
and
xchg
lret
sub
jne
jbe
mov
js
xorl
dec
shll
icebp
add
xchg
adc
je
dec
mov
mov
pushl
in
pop
popa
sbb
sub
cmp
das
and
add
divl
in
mov
lds
jno
ss
shll
jae
pop
outsb
iret
ja
jae
inc
jne
jbe
js
mov
jb
js
je
aaa
js
je
jb
adc
xchg
jne
jne
adc
jb
jp
jbe
js
jns
in
imul
scas
pop
outsb
fwait
xor
jnp
dec
ja
int
mov
cmp
imul
iret
sahf
mov
jp
pop
jns
pop
jne
imul
inc
jae
jae
lahf
je
mov
mov
jb
in
ja
data16
jno
and
insl
daa
mov
xlat
ja
std
jns
pop
jnp
lods
jmp
cmpl
push
adc
cmpsb
imul
loope
xor
je
in
ffree
dec
shrl
lods
jb
xchg
push
inc
jg
cmc
xor
insb
jb
xchg
das
dec
leave
pushl
fcoml
inc
hlt
sub
fcomps
dec
add
in
add
adc
movl
cmp
push
and
imul
dec
fistpll
repz
or
pop
pop
or
add
dec
push
xor
fs
push
xchg
pop
inc
add
mov
cmp
jno
fldenv
insl
scas
jno
dec
je
outsb
into
sbb
daa
jne
daa
fldenv
leave
xor
jbe
add
jae
jae
cmpsl
js
insl
jb
int
xchg
lret
outsb
out
jno
jns
aaa
lods
pop
xor
aad
cmp
mov
outsb
pop
jbe
fwait
mov
jb
addr16
adc
pop
mov
jecxz
jmp
sar
add
and
pushf
movsl
and
leave
fnstenv
std
jb
pop
jne
sub
sub
cmp
and
or
jo
jecxz
aad
xor
mov
mov
lea
imulb
pop
jo
sub
imul
lret
xchg
jae
jne
ja
jns
cs
pop
jae
jne
in
js
jp
ja
xchg
pop
dec
pop
jns
ret
jns
jnp
fnstenv
repz
jnp
xor
jb
ja
aaa
inc
push
dec
shll
mov
test
xor
shll
dec
inc
cmp
push
push
shll
sbb
push
xor
pop
jb
dec
adc
shll
dec
jo
fwait
scas
mov
int
jmp
jmp
sbb
jmp
das
add
dec
push
nop
jbe
push
or
add
jl
xor
cmpsb
insl
push
cmc
jbe
in
jb
fstpt
xchg
pop
clts
dec
roll
imul
ljmp
insl
pusha
inc
pop
imul
outsb
pop
pop
jb
dec
imul
xor
cli
lods
repnz
pop
pop
dec
pop
pop
bound
outsl
inc
decl
arpl
pop
stos
cmc
ljmp
outsl
dec
push
pusha
pop
insl
int
inc
pop
outsl
inc
incb
ljmp
push
popa
dec
cmp
jbe
fs
jo
gs
jg
sub
popa
insb
ja
sti
inc
push
cmp
imul
xor
cmp
jo
fldt
sub
inc
push
inc
pop
insb
pop
push
cmp
lock
jg
std
pushw
pop
addr16
bound
ds
pop
pop
imul
push
insb
pusha
pop
inc
addr16
mov
in
in
inc
data16
cld
lock
fs
and
lods
mov
cmp
inc
popa
addr16
adc
or
aas
jb
pusha
push
push
loopnew
popa
pop
xchg
mov
insl
outsl
popa
sbb
pusha
insl
imul
push
pop
loope
imul
bound
mov
cmpsl
dec
pop
pop
pop
jb
cmpsb
decl
mov
popa
pop
rcll
push
fistps
add
inc
inc
bound
jg
push
rorb
pusha
sub
pusha
jb
pop
pop
jbe
jo
aas
and
mov
insb
pusha
pop
inc
jge
jg
js
insl
cmp
dec
push
mov
test
dec
pop
addr16
jno
stc
inc
bound
pusha
imul
jg
ds
in
imul
outsl
cmp
pop
pop
jno
insb
je
mov
sti
dec
inc
cmp
insb
insl
xor
fnstsw
dec
insl
outsl
bound
in
gs
inc
push
inc
inc
dec
sub
sub
addr16
jb
outsl
push
pop
sub
push
int3
outsl
insl
inc
dec
jno
or
jbe
popa
inc
pop
dec
jo
loope
mov
add
fdivr
inc
imul
gs
movsl
outsb
lcall
outsb
std
and
dec
popa
arpl
inc
cmp
mov
ret
gs
dec
and
inc
inc
cmp
pop
sbb
dec
push
insl
std
clc
lods
ss
cmp
cli
push
call
pop
push
sbb
cmp
cli
push
ds
mov
inc
pop
push
in
outsb
mov
jne
outsl
rcrl
std
push
pop
bound
outsb
pusha
outsb
ret
fstl
fs
push
xchg
pop
fs
clc
xchg
pusha
data16
push
pop
popa
push
sar
jb
imul
inc
popa
aas
clc
and
dec
cs
jo
mov
dec
pop
arpl
mov
mov
test
or
ja
or
pop
push
insl
arpl
mov
jge
outsl
stos
bound
arpl
lock
imul
insb
fdivrl
pop
dec
inc
cmp
arpl
inc
cmp
cli
out
std
dec
sub
pop
lods
imul
ja
cld
dec
arpl
fdivp
stc
inc
sub
sti
mov
pop
bound
insb
adc
sbb
sbb
subb
arpl
jl
push
jns
pop
insb
push
outsl
pop
popa
cmp
mov
inc
inc
sub
clc
cmp
dec
cmp
sub
lea
dec
cmp
pop
sub
lock
arpl
shrl
subb
ja
je
insl
sti
xor
aad
adc
push
pop
cli
push
pop
jno
inc
sbb
dec
mov
jecxz
in
mov
pop
pop
inc
out
bound
mov
pop
test
push
jb
jno
push
int3
lock
push
pop
fs
std
dec
das
xor
lods
test
pop
or
or
jg
je
xchg
insb
and
push
push
pop
cs
insl
jo
arpl
addr16
inc
inc
jg
daa
arpl
fidivl
std
cmp
inc
popf
jne
or
sbb
mov
outsl
movsl
addr16
add
cmp
sub
daa
push
jle
fstpt
cmp
cmp
dec
mov
pop
sti
insb
cmp
fwait
xchg
jns
cmp
cmp
cmp
inc
cld
cmp
aaa
pop
icebp
or
pop
push
outsb
jb
dec
cmp
push
ss
jl
popa
mov
pop
xor
or
aaa
push
cmp
push
jbe
mov
arpl
jge
dec
in
in
cmp
sub
daa
adc
cmp
fwait
jecxz
insl
pop
daa
insl
sub
and
fildll
adc
jmp
inc
cmp
push
push
insl
pop
xchg
pop
lods
in
outsl
ja
push
adc
aaa
cmp
dec
fs
push
cmp
aas
inc
cltd
add
pop
jnp
je
mov
cmp
push
aaa
push
fistl
cmp
lds
cmp
pop
or
fidivs
pop
xchg
sub
mov
arpl
rol
fdivl
jb
test
or
push
sti
in
lea
cmp
dec
cmpb
outsl
mov
aas
dec
sub
das
pop
add
xchg
push
call
das
inc
cmp
fidivl
je
cmp
in
or
or
dec
cmp
pop
pop
push
fimuls
add
aas
ds
cmp
sbb
stos
ret
dec
outsl
push
adc
cmp
cli
mov
lahf
inc
cmp
outsb
mov
and
and
fstpt
dec
cmp
push
push
ja
cld
cmp
pop
cmp
ret
xor
data16
lahf
rcrb
cmc
mov
mov
push
jg
popa
pop
test
pop
jp
cmp
cmp
cld
inc
dec
push
jne
or
push
ja
imul
or
mov
imul
imul
leave
xorl
adc
push
fildl
mov
pop
inc
je
push
loope
inc
inc
xchg
mov
stc
insl
pop
in
mov
cmp
pop
imul
fs
cmp
and
mov
mov
push
mov
xor
imul
pop
add
cli
inc
mov
pop
or
inc
cmp
push
mov
outsb
cld
xchg
mov
ja
mov
fs
xor
pop
pop
jno
shrb
ss
in
insl
mov
clc
mov
rcr
cld
adc
xchg
jmp
lock
or
popa
mov
or
daa
cld
cmpsb
repnz
pop
lcall
dec
dec
push
inc
dec
dec
and
mov
pop
xor
cli
cmp
pusha
or
pop
popa
lock
fldt
lcall
addr16
pop
push
xor
sbb
dec
popa
lds
std
or
jle
xor
sub
aad
cld
pop
lea
mov
mov
not
arpl
sar
addr16
or
testb
filds
movsb
and
xchg
lret
dec
or
jnp
cld
sbb
or
daa
mov
repz
pop
push
inc
push
data16
pop
adc
jb
sub
int
out
sbb
mov
lcall
js
cmpsb
imul
sbbb
jl
std
add
lea
cmpsl
sti
add
add
jbe
jne
arpl
cmp
cmp
rclb
jo
lcall
or
aas
push
std
idivl
sub
orl
fs
and
mov
outsb
push
jbe
sbb
bound
inc
mov
rcrl
pop
sti
inc
rolb
gs
xchg
xchg
pop
mov
and
jno
arpl
fstpt
imul
mov
cmp
clc
add
leave
sbb
dec
inc
sbb
and
movsl
pop
je
dec
stc
dec
jecxz
push
outsl
scas
outsb
outsb
and
push
shrl
insl
jo
bound
sub
push
push
cmpsl
mov
cmp
stc
dec
pusha
fsub
fldt
inc
inc
inc
cli
es
dec
push
pop
sub
pusha
pop
inc
loope
pop
js
push
dec
sti
je
aad
pop
dec
outsb
jmp
pop
bound
popa
pusha
push
mov
outsl
cmp
push
nop
adc
push
and
or
xchg
lcall
int
push
sbb
and
outsl
xor
jno
and
pop
outsb
sbb
outsb
cmp
test
cmpsb
cs
jno
push
sub
sub
cmp
cmp
neg
dec
cmp
cli
sub
add
ret
lds
adc
pop
pop
imul
push
pop
mov
movsl
sbb
sub
sub
jp
outsb
lods
cs
daa
inc
push
dec
cmc
movsl
pop
incb
push
cld
pusha
sti
imul
cli
or
and
and
insb
adc
imul
sub
sub
insl
ffree
fbld
insl
push
and
sbb
xor
loop
mov
cmp
shl
hlt
std
sub
out
sarl
imul
pop
adc
sbb
jae
mov
insl
pop
dec
jp
pop
insl
pop
cmp
push
mov
insl
xor
mov
rcrl
adc
dec
repz
xchg
pop
dec
inc
pop
ljmp
lea
mov
inc
jb
sub
xor
xor
rcrl
push
inc
inc
pop
out
mov
lods
pop
outsl
cmp
fistpl
pop
sti
and
and
pusha
and
jnp
jb
push
and
pop
imul
popl
dec
fistpl
push
mov
lahf
push
add
push
adc
pushl
xor
dec
dec
daa
sub
sub
in
push
movsl
add
sbb
dec
jmp
adc
and
push
filds
gs
ss
jne
and
push
stc
fdecstp
inc
xor
xor
or
inc
std
outsl
or
jmp
sub
popa
mov
ja
inc
pop
es
mov
sub
and
dec
insb
or
mov
sub
bound
add
popa
pop
sbb
cmp
pusha
popa
sub
fs
pop
add
sbb
lods
sbb
dec
dec
sub
or
sub
sub
xchg
out
sbb
jbe
incl
insb
sub
mov
sbb
daa
and
push
loope
cmp
imul
gs
pusha
cmp
jne
es
push
test
out
roll
dec
or
insb
mov
test
xor
fs
jno
adc
sub
xor
lods
aad
test
jbe
daa
sub
and
loope
and
sub
xor
lea
jg
xor
popa
pop
push
outsl
adc
cmp
ret
lcall
sub
sub
dec
das
mov
pop
or
gs
arpl
sbb
xor
pop
pusha
xor
fildl
roll
jno
fcoml
or
xor
jmp
adc
imul
sub
or
arpl
sbb
inc
stc
ljmp
xor
pop
insb
jae
bound
bound
mov
or
xor
jno
xlat
sub
xor
sub
mov
sub
ret
adc
and
sbb
fstpt
jle
pop
ss
cmpsw
aaa
sbb
sbb
fsubrs
cltd
int3
gs
sbb
push
xbegin
je
pop
xor
popa
popa
test
lret
cmpl
test
inc
insl
ss
lods
sub
xor
push
popf
lods
xor
push
pop
sub
mov
insl
jecxz
mov
sub
jecxz
or
fucomip
and
sub
repz
sbb
cmpsl
and
mov
cmp
inc
sahf
mov
das
xor
xor
sub
xor
jae
lahf
arpl
xor
dec
pusha
jo
pop
fistpl
cmp
stos
xchg
outsl
fistpl
and
ja
daa
cmp
outsb
mov
cs
push
add
inc
pop
mov
cli
aaa
dec
scas
imul
pop
push
push
inc
ret
inc
rorl
lds
dec
inc
pop
iret
and
jl
fwait
aas
pop
jo
aam
gs
dec
dec
mov
cmp
inc
jae
push
lahf
shlb
dec
iret
dec
sti
adc
fwait
arpl
orl
push
sar
push
jb
imul
subl
or
inc
jne
ss
aaa
sub
scas
inc
xchg
push
push
jne
stc
xchg
imul
cmp
mov
mov
ja
aas
mov
sbb
mov
popa
das
inc
fldcw
outsb
mov
jge,pt
push
sub
push
daa
adc
xorl
push
ja
mov
repnz
idivl
arpl
imul
add
std
jb
pusha
dec
mov
fisubrl
mov
sub
and
push
imul
dec
dec
cmp
fisubl
dec
cld
ja
push
mov
sahf
dec
int
out
cld
loope
sbb
pop
popa
cmp
arpl
addr16
insl
insb
ret
mov
loop
sub
lds
cmp
inc
ds
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
pop
imul
hlt
dec
dec
push
dec
notb
jg
pop
loope
mov
mov
imul
pop
push
push
mov
push
sub
sbb
mov
jmp
lcall
adc
popf
sbb
mov
bound
mov
inc
dec
inc
xchg
outsb
dec
je
pop
rcll
arpl
adc
enter
cmp
adc
inc
push
sbb
popa
add
imul
pop
insb
mov
incl
cmp
inc
popa
pop
pop
push
jo
leave
or
cmp
dec
fs
jecxz
cmp
je
aas
inc
cmp
cmp
pusha
pop
clc
test
inc
pop
inc
dec
mov
jmp
sbb
or
aas
dec
inc
sub
gs
jae
mov
fildll
outsl
cmp
or
data16
outsb
lods
sbb
mov
leave
ds
gs
fnstsw
add
dec
je
xor
inc
xor
push
je
sar
sub
daa
sub
and
sub
sbb
and
and
sub
jle
dec
pusha
mov
inc
in
push
sbb
andl
lret
imul
pop
pop
test
push
mov
jae
pop
sbb
adc
or
and
inc
dec
outsl
push
std
movsl
pop
mov
popa
imul
mov
dec
jmp
mov
aaa
jne
clc
xlat
call
sub
imul
hlt
jg
cltd
pusha
or
push
jle
sub
clc
xor
dec
and
sub
inc
decl
jo
or
sbb
sub
sub
pushl
jg
mov
xchg
sub
sub
sub
cs
sub
sub
dec
sbb
push
jg
sub
sub
sub
std
das
or
cs
lcall
xor
xor
sub
sub
jge,pn
xchg
sub
ljmp
test
das
aam
fsubrl
jecxz
imull
cli
das
add
and
cmp
das
push
jnp,pn
mov
xchg
sub
stos
sub
cs
sub
xor
sub
pushl
das
jp
mov
xor
sub
jecxz
or
sbb
inc
xor
push
imul
incl
dec
xor
xor
xor
xor
les
xor
xor
call
pushl
ljmp
shlb
insl
xor
xor
or
incl
aas
xor
cmp
cmp
je
jg
xchg
lea
xchg
aaa
mov
ss
sarb
lds
into
aaa
fisubrl
cmp
idivl
std
cmp
cmp
aaa
xor
inc
push
test
cmp
cmp
cmp
xor
out
popa
adc
sbb
and
cmp
push
cmp
cmp
cmpl
cmp
cmp
ss
cmp
cmp
jmp
aaa
push
cmp
cmp
negl
test
test
fnstsw
fs
xchg
sub
jl
and
dec
sub
daa
call
fsubp
sbb
push
lock
xor
xor
mov
fldt
pop
xor
mov
xlat
xor
xor
sub
cmp
xor
inc
dec
xor
xor
xor
das
icebp
xor
xor
xchg
pushl
mov
lret
xor
adc
xor
inc
xorb
xor
ljmp
xor
test
cld
xor
mov
xor
fdivs
fstpt
fidivs
loop
sbb
fs
cmp
push
cmp
aaa
fidivs
cmp
ss
cmp
xor
pop
cmp
cltd
cmp
cmp
xor
and
mov
pusha
adc
pushf
ss
cmp
cmp
cmp
inc
cmp
cmp
insb
cld
jg
cmp
cmp
cmp
cmp
aaa
sti
sub
pop
push
rcll
ds
das
sub
jns
clc
ljmp
subl
cmpsb
sub
sub
sub
sub
sub
decl
push
sub
js
xchg
sub
movsb
sub
loop
aaa
out
out
sub
das
or
and
outsl
jge
and
inc
xchg
sub
outsl
sub
cs
imul
das
push
jno,pn
xor
icebp
mov
dec
cs
xor
divb
rcr
clc
lcall
xor
sub
pusha
xor
mov
jg
outsl
sub
jns
add
aaa
imulb
mov
xor
xor
das
mov
xor
xor
popa
xor
jg
xor
jnp
ss
xor
xor
aaa
mov
ss
repz
adc
aaa
push
xor
cmp
js
jp
xchg
cmp
aaa
xor
dec
cmp
sarb
shll
clc
xor
cmp
aaa
inc
cmp
jl
mov
mov
xchg
cmp
cmp
mov
lods
aaa
mov
mov
fcoml
cmp
pop
push
sbb
cmp
cltd
inc
cmp
cmp
sbb
ljmp
pop
mov
movsl
jmp
cmp
cmp
sti
push
dec
mov
leave
pop
sub
mov
mov
ljmp
mov
mov
sub
pop
sub
sub
addr16
sub
test
lea
mov
mov
les
jecxz
repz
outsl
sub
inc
ja
jl
jle
xchg
lods
sub
loopne
in
or
pop
sub
xor
sub
js
xchg
xor
das
lds
shrl
fnstenv
stc
add
push
das
xor
xor
push
aaa
xor
das
ret
xor
xor
sbb
das
std
lods
adc
xor
xor
jge
imul
xor
and
sub
cmp
cmp
mov
mov
mov
cmp
aaa
fmull
std
or
add
adc
aaa
ljmp
incl
ret
add
cmp
dec
cltd
movsl
jmp
cmc
cmp
dec
repnz
mov
jo
test
xor
hlt
divb
lret
xor
ss
ss
ret
pop
sbb
fwait
xor
outsl
xchg
jecxz
out
clc
xor
cmp
pop
jg
jecxz
aas
out
jo
jb
jge
test
lea
cltd
xor
cli
in
xor
xor
cmp
call
mov
ret
ss
xor
cmp
xor
push
aaa
mov
cmp
sub
cmp
pop
xor
addr16
jg
out
test
mov
xchg
cmp
cmp
aaa
aad
or
pop
outsl
push
lahf
mov
and
pop
push
cmp
imul
xchg
inc
jg
cmp
cmp
ret
fidivrs
clc
mov
add
sbb
cltd
pop
cmp
cmp
cmp
cmpsb
outsl
push
pop
repz
adc
sub
sub
add
cmp
sub
cmpsl
daa
aaa
sub
or
outsl
das
jns
xor
xchg
cs
lret
das
in
repz
daa
insb
lock
mov
inc
std
das
mov
sti
lea
fiaddl
sub
sub
or
jae
cmc
dec
imul
je
adc
or
dec
push
fisttps
push
dec
inc
push
push
inc
push
inc
pop
push
dec
inc
inc
pop
sub
stos
out
mov
lret
pop
outsl
data16
popa
jb
sbb
outsl
jae
in
out
or
outsl
ja
push
push
outsl
push
outsl
popa
insl
sbb
push
dec
inc
popa
arpl
add
cs
aas
in
sbb
adc
arpl
fs
xchg
aas
divb
je
jbe
adc
outsb
imul
jnp
jae
jae
cmp
bound
jo
pop
outsl
idivl
pop
in
vmwrite
fcmovnbe
data16
jmp
and
inc
jo
mov
adc
push
jb
jns
gs
add
xor
mov
in
and
sub
push
gs
add
jbe
mov
outsb
cmp
ja
in
mov
outsl
outsb
imul
jae
mov
iret
imul
jl
jbe
push
jg
bound
jo
out
out
lahf
and
gs
popa
push
ds
pop
inc
js
adc
jb
push
adc
jns
dec
jmp
out
data16
fs
imul
insb
andl
jne
dec
inc
inc
mov
push
jne
push
sbb
inc
fs
lds
je
dec
lods
inc
cvtps2pi
in
jae
add
cmovno
pop
push
repnz
or
dec
dec
push
inc
push
or
dec
setbe
fdivl
dec
jae
cs
outsb
xor
jae
lds
movd
or
mov
or
cmp
pop
sub
add
fiadds
push
and
fs
daa
push
push
insb
imul
imul
insb
sti
imul
sub
imul
mov
insl
jae
mov
insb
push
inc
dec
dec
push
push
pushl
jbe
push
cmp
jp
bound
add
rol
add
add
xor
ja
out
xor
add
adc
cmpl
add
mov
sbb
adc
out
ja
outsl
add
outsb
aas
sbb
sbb
add
fadds
sub
xchg
outsl
pop
lcall
mov
inc
repz
sbb
outsb
adc
sub
add
imul
add
push
lock
or
push
add
or
dec
sti
xchg
or
test
add
or
add
repnz
mov
add
dec
jb
push
cmpsl
push
push
repnz
shll
sub
lret
inc
lods
adc
jge
xchg
sub
andl
sub
addl
inc
cmpsb
and
add
arpl
add
pusha
mov
adc
mov
lods
adc
pusha
mov
decl
mov
or
pop
push
add
das
push
inc
dec
push
je
inc
fsubs
xchg
adc
test
jle
add
incl
rolb
nop
add
add
cld
mov
inc
sub
cltd
shlb
jns
add
int3
incl
adc
xchg
add
add
stos
inc
dec
jg
sub
adc
jle
pushl
mov
add
add
push
add
jb
jbe
sub
add
cmc
xchg
and
add
repnz
add
cwtl
adc
mov
inc
jb
popa
je
inc
imul
outsb
addr16
or
paddsb
pushw
push
inc
insb
jne
push
mov
gs
push
imul
outsb
dec
push
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
bound
jae
outsl
jbe
mov
js
and
jo
dec
popa
insl
inc
inc
gs
mov
sbb
test
push
fsts
cmp
outsb
or
mov
fs
outsl
dec
push
imul
cs
jo
outsb
outsw
adc
add
fisubrs
jae
cpuid
pushf
insb
adc
mov
insl
jb
outsb
xor
jns
mov
mov
and
gs
outsb
xchg
sub
push
xchg
jae
outsl
outsb
mov
sbb
fs
dec
fsubrs
insl
fisttpl
jg
mov
fstpl
outsb
insl
inc
jle
je
adc
icebp
or
add
outsl
outsl
insb
add
jbe
mov
jo
outsl
je
push
inc
and
inc
xor
shrl
xor
inc
fisubs
call
push
push
outsl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
pop
mov
sti
mov
decl
or
and
or
jg
add
mov
jp
call
and
incl
sbb
pushl
or
repz
and
inc
sub
mov
push
push
jns
aaa
xor
jmp
call
adc
xchg
sbb
insl
xorl
das
mov
xor
xchg
lock
push
icebp
adc
add
mov
mov
push
test
jno
mov
add
push
push
dec
mov
fistpl
out
movsl
dec
mov
mov
adc
in
or
or
push
andl
shlb
or
out
mov
inc
das
mov
scas
repnz
inc
int
xor
in
das
in
cs
data16
gs
jo
pop
push
ja
xor
pop
push
ud2
pop
je
loope
sbb
wbinvd
pop
insw
lahf
or
inc
mov
cmp
sbb
sbb
aaa
push
push
mov
add
ja
out
mov
arpl
outsb
or
jo
sbb
and
xchg
mov
pop
and
insl
bound
cmpsl
xchg
ja
or
jbe
repnz
mov
push
sbb
outsb
arpl
inc
int
incb
js
jb
dec
aam
jo
jnp
div
outsb
je
je
insl
mov
push
test
sbb
cmpsb
mov
dec
xor
ss
push
mov
imul
jo
or
jne
xchg
push
push
out
sbb
push
push
fcmovb
in
mov
popa
addr16
xchg
lret
fdivrl
sbb
and
adc
imul
test
inc
mov
add
sbb
pop
ja
xchg
jmp
add
add
add
add
adc
or
cmp
into
ss
add
add
cltd
bound
std
dec
ss
add
adc
push
aaa
jnp
mov
dec
inc
and
lea
mov
mulb
cs
add
and
ss
and
jb
popa
je
cmpsl
insb
ret
or
into
or
es
stos
mov
pop
daa
rorb
or
negb
pop
adc
negb
add
xchg
add
add
add
or
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
