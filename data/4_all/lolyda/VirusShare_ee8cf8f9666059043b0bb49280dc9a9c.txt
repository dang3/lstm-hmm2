mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
int3
mov
pop
mov
mov
cmp
mov
cmp
add
test
inc
add
fsubrl
pusha
jg
push
cld
pop
ret
pop
add
movzwl
push
push
mov
and
or
mov
push
sub
adc
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
add
fnstsw
divl
dec
mov
cmp
adc
sbb
jbe
mov
push
mov
push
outsl
add
adc
in
jmp
jg
jecxz
fdivr
xor
dec
inc
add
add
cmp
mov
jl
mov
mov
ja
lea
push
add
stos
stos
stos
push
test
push
inc
push
push
lcall
or
or
div
push
cmp
les
mov
push
fcomps
test
out
push
decl
mov
mov
or
shl
add
inc
mov
outsl
ss
not
sub
lea
mov
push
fdivs
jle
jmp
push
and
mov
movsb
dec
repz
pop
mov
push
push
lea
pop
push
pop
pop
dec
mov
scas
stos
stos
insl
xor
das
clc
cmpsb
je
in
mov
sbb
cmp
xchg
inc
push
adc
stos
mov
sub
xchg
sbb
mov
mov
pop
jns
out
xor
testl
dec
sub
cs
das
xchg
or
pusha
jnp
lea
shrl
popa
sbbl
das
inc
sbb
sub
imul
add
je
mov
mov
inc
inc
add
or
fsubrs
lcall
adc
insb
arpl
in
adc
fldl
int
pop
push
cmp
push
push
mov
push
std
push
push
leave
push
sub
int3
adc
mov
push
sbb
jecxz
pop
lds
adc
push
cmpsb
sbb
sbb
add
xor
iret
or
test
xor
fwait
xchg
lret
fwait
pop
or
or
stos
push
enter
sub
dec
or
cmp
sbb
push
inc
add
jne
loopne
fs
mov
xor
push
dec
aaa
adc
pop
adc
push
push
add
cmp
pop
std
or
cmpb
push
push
xor
popa
out
mov
push
mov
lock
in
je
xor
sub
or
pop
rcrb
mov
pop
mov
push
adc
push
movsb
outsl
repz
sbb
push
or
fstl
std
sub
or
push
mov
inc
add
push
sub
xor
subl
inc
inc
cmp
jo
cvtps2pi
pop
sub
inc
fldl
in
adc
sbb
aad
outsb
dec
jle
cmp
inc
ljmp
xlat
add
in
xor
xor
lea
sbb
imul
push
test
sub
lds
push
dec
cmp
pusha
push
loope
es
adc
or
xor
pusha
and
dec
pop
push
push
inc
ret
cmp
imul
lods
add
xor
or
pmaxub
or
rclb
xlat
jl
add
or
push
xorl
addr16
dec
lret
add
in
jmp
int3
or
push
lret
xchg
push
in
add
pop
hlt
xor
push
jp
outsl
jae
mov
pop
jns
cmc
or
or
sti
pinsrw
xor
out
fistpl
and
or
xor
and
inc
xor
lods
cmp
and
xor
push
cmp
movsb
and
fs
or
push
jecxz
sub
sbb
mov
iret
int
cwtl
mov
rcll
dec
mov
in
sbb
test
pop
add
sub
xor
mov
push
add
xor
mov
shll
into
push
cld
lret
or
xor
xor
push
push
add
sbb
sbb
cmp
jne
test
jle
push
dec
jns
add
push
pop
rcl
cld
in
mov
sub
dec
jne
std
rorl
or
or
nop
out
sbb
cmp
enter
mov
sbb
mov
xchg
movsb
fsub
out
adc
mov
lods
fcoml
dec
call
shl
out
andb
adc
add
mov
sbbl
pop
pop
jb
sub
sub
and
mov
xor
test
push
adc
mov
cmp
iret
push
lret
test
ds
push
aaa
or
pop
or
loope
out
mov
adc
loop
rol
push
inc
sbb
clc
fwait
stos
fistpll
fcmovb
scas
add
push
add
aad
data16
push
mov
dec
shlb
daa
sbb
adc
rol
gs
or
adc
add
loop
sahf
ds
pop
rcrb
pop
xor
adc
call
ret
cmp
pop
pop
mov
xor
adc
movsb
jnp
or
les
xor
shrl
jmp
cmp
or
jmp
sbb
outsb
enter
sbb
jl
jo
sbb
into
mov
mov
repz
cltd
push
pop
sbb
mov
sbb
push
sbb
cmpsl
scas
push
out
xor
inc
mulb
mov
sbb
jb
jge
sub
adc
mov
push
push
lods
push
cmp
adcb
ds
aaa
or
in
sub
or
sbb
ret
cmp
int3
cmp
pop
rorb
scas
push
add
outsb
push
push
sbb
or
inc
testl
cmp
mov
sub
and
push
push
mov
add
loopne
xchg
fsubrl
xor
dec
add
push
add
mov
or
xor
cmpsb
jmp
sub
adc
scas
cmp
fcoml
pop
xor
adc
pop
stc
imul
xorb
mov
mov
scas
push
sbb
push
xchg
mov
mov
inc
xchg
out
dec
in
sbb
push
cmovbe
dec
adc
jb
xchg
ret
into
ret
int
jo
das
push
xor
or
shll
mov
ret
or
or
movsb
int
jle
insb
adc
sbb
push
leave
pop
sub
pop
inc
repz
cmp
inc
mov
and
loope
and
xor
es
nop
pop
aas
int3
inc
cwtl
inc
inc
and
scas
dec
fsubrs
andb
cwtl
popf
leave
jl
sbb
adc
sbb
clc
adc
insb
out
mov
test
or
leave
orb
fstps
push
orl
cmp
push
jmp
sti
jle
push
cmp
jne
scas
call
add
pop
jge
dec
mov
add
mov
add
lods
sub
add
data16
adc
or
aaa
int
daa
mov
iret
lock
sub
sbb
sbb
popf
aad
mov
inc
xor
sbb
cwtl
adc
or
dec
lahf
stc
call
cmp
lock
xor
pushf
jne
movl
cmc
jnp
bound
or
insb
ja
imul
pop
out
push
paddsb
jecxz
lds
lret
data16
adc
fs
xor
out
adc
movsb
ljmp
testl
dec
add
sbb
js
adc
out
les
push
sbb
push
sbb
leave
add
pop
jecxz
push
adc
inc
pushf
loopne
dec
and
push
clc
fs
in
mov
push
repnz
scas
mov
enter
and
push
pop
dec
dec
insl
jno
sub
or
decb
mov
gs
fwait
adc
mov
mov
pushf
mov
push
mov
ret
out
shll
dec
add
adc
fld
std
and
cmpsb
mov
js
pusha
std
loopne
stos
push
cmp
in
cwtl
mov
adc
mov
xchg
addb
je
test
jecxz
lock
test
adc
cmpl
push
inc
out
fwait
sbb
mov
iret
mov
adc
movsb
stos
int
jo
out
jne
and
cmp
test
sbb
insb
call
and
sbb
mov
adc
fdiv
clc
xchg
lock
jmp
and
jle
adc
shrl
inc
cltd
sub
push
test
fwait
movsb
sar
out
sbb
sti
adc
aam
sub
movsb
sbb
adc
pop
pop
fs
mov
or
dec
dec
incl
ret
movups
lmsw
or
xor
mov
ret
nop
mov
add
data16
xchg
pop
sbb
mov
pop
xor
inc
pop
fs
push
js
lds
mov
cwtl
lds
xchg
and
test
push
fsubrs
shll
push
inc
mov
fwait
fwait
mov
and
test
mov
adc
add
in
push
cwtl
hlt
out
ds
pusha
mov
adcl
addr16
test
orb
xchg
mov
jns
js
je
addr16
jo
sub
insb
shrb
lea
test
dec
xchg
push
add
dec
scas
xor
or
cmp
or
inc
leave
sub
das
in
dec
lock
add
movsb
xchg
jo
cmp
in
in
add
add
clc
inc
cmp
xor
aad
push
add
inc
test
punpcklbw
sbb
xor
jnp
xchg
jo
dec
xor
pop
stc
mov
and
xchg
addr16
ficompl
add
pop
xor
cmp
xchg
or
inc
insb
mov
nop
clc
shrl
lret
push
call
push
sub
cmp
aam
push
jns
add
pop
add
push
sub
and
aam
not
push
pushf
push
push
add
lds
ja
cmpsb
xchg
or
push
sets
pop
cmp
sub
fwait
std
sbb
xor
arpl
sub
push
jne
xchg
sub
pop
jge
or
push
pop
into
xor
cltd
mov
adc
adc
push
adc
into
sbb
lret
out
add
repz
xor
out
sbb
call
jne
mov
aam
add
test
sbb
xlat
xchg
subl
add
adc
call
add
dec
out
pop
sub
je
pop
push
sub
push
xor
add
jae
sbb
mov
mov
rorl
idivl
xor
or
push
sub
pop
jl
js
add
movsb
dec
jb
movsl
or
fidivrs
mov
sub
loope
clc
nop
xor
dec
mov
aad
adc
call
insb
je
jmp
mov
cmp
leave
jae
mov
loope
daa
jne
push
sti
incl
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
add
sub
jbe
test
ja
add
or
add
and
fs
ror
fs
fs
mov
mov
fs
mov
fs
xchg
nop
mov
mov
fs
jo
fs
fs
push
dec
dec
fs
inc
cmp
fs
sub
fs
sbb
fs
or
out
fs
cld
inc
clc
inc
jl
lahf
iret
rolb
mov
inc
nop
inc
xor
xor
xchg
cwtl
pushf
mov
movsb
test
mov
xor
xor
fs
enter
fsubs
faddl
enter
hlt
sbb
js
clc
jne
pop
sub
jne
xchg
aad
pop
ret
push
stos
xlat
je
mov
jp
ret
and
into
jo
ljmp
push
xor
rolb
add
dec
pop
rolb
cmpsb
xor
push
stc
mov
xor
mov
ljmp
inc
in
insb
iret
orl
inc
fs
push
cld
fs
mov
or
cli
mov
mov
add
mov
out
sbb
test
mov
lea
test
insb
aaa
or
or
or
add
out
pushl
mov
cmpb
jne
inc
or
add
mov
in
or
jbe
aam
dec
pop
push
fmuls
cld
inc
testb
in
movzwl
jns
mov
aam
push
sub
jbe
jmp
push
pop
pusha
push
push
jne
xlat
insb
and
imul
inc
in
mov
mov
mov
or
sbbb
addb
insb
inc
js
arpl
xchg
add
stc
ficompl
add
das
test
ret
push
ret
inc
lock
inc
lahf
jo
imul
add
fcmovnb
adc
xor
test
mov
mov
std
insl
rcl
push
and
pop
fsubr
cmp
stos
xor
jo
jb
mov
xor
pop
inc
lea
adc
sahf
mov
mov
push
int3
add
sti
sub
or
lea
repnz
test
and
fsts
xchg
jg
pop
add
or
mov
bound
push
shll
and
or
insb
fwait
gs
dec
js
dec
add
mov
fsubr
lcall
lods
mov
int
imul
push
ljmp
inc
dec
jnp
adc
adc
add
adc
jb
pop
pop
adc
pop
or
sbb
mov
leave
adc
mov
or
popf
or
das
add
fildl
mov
jp
nop
xor
adc
int
and
inc
sbb
comiss
scas
jmp
scas
repz
sub
pop
sub
adc
mov
mov
out
arpl
movhps
shlb
xchg
pop
sbb
xchg
xlat
jne
mull
push
addl
pcmpgtd
jne
xor
adc
dec
xlat
insb
mov
pop
icebp
testl
xlat
jne
or
test
jno
jbe
xlat
xor
pop
push
push
addr16
xlat
je
mov
movsl
addr16
mov
scas
fnstenv
adc
inc
adcl
mov
scas
arpl
sar
or
shll
mov
imul
dec
add
enter
shll
push
dec
lcall
dec
into
les
int
imul
cmpsb
pop
or
sbb
add
je
pop
daa
and
adc
hlt
dec
inc
je
xlat
je
int3
dec
xsave
dec
sarl
pop
dec
or
shll
sub
cmp
sbb
rolb
inc
aaa
jne
in
adc
pop
inc
loope
or
xor
jmp
and
loopne
mov
mov
pop
nop
mov
lcall
js
shll
pusha
pop
push
xor
dec
jo
inc
cmp
xor
roll
xor
and
mov
adc
addl
xor
out
call
add
jae
fwait
outsl
pop
rclb
adc
pop
enter
pop
str
and
xchg
das
lock
pop
pop
mov
nop
and
enter
and
aas
je
outsb
push
cmpsb
imul
mov
cmpsb
cmp
cmpsl
and
arpl
xor
and
adc
ss
rorl
or
cld
xor
cmpsb
imul
test
lods
in
shlb
xchg
pushf
fcmovnbe
pop
xor
add
add
mov
sbb
das
and
nop
dec
sub
leave
orb
js
xor
add
int3
mov
leave
sub
dec
rorb
dec
xchg
adc
xor
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
mov
inc
push
inc
push
dec
xor
cs
insb
in
ret
pop
add
push
xor
dec
inc
push
sbb
inc
adc
adc
or
in
sar
mov
mov
clc
std
stc
cli
cld
idiv
std
add
nop
out
or
clc
cmp
stc
sti
ljmp
icebp
xchg
cld
or
or
mov
pop
mov
dec
sbb
pusha
outsb
push
ljmp
insb
pusha
insb
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
incl
mov
push
sbb
rolb
fldt
out
lcall
push
pop
add
push
fldz
mov
adc
pop
fcomps
cmpsb
fnstenv
adc
clc
mov
lods
lcall
out
cmp
pop
xchg
inc
xchg
adc
imul
mov
aas
adc
add
jge
mov
fnstcw
add
pop
cmpsb
incl
xchg
scas
or
or
or
sti
sti
mov
and
ljmp
add
adc
xchg
std
or
push
or
push
cltd
jns
lock
jo
adc
cmp
dec
mov
sbb
or
or
jg
jno
jb
lahf
std
push
sti
pop
daa
add
pop
sub
pop
outsl
pop
xchg
or
inc
lcall
mov
std
cmp
popa
pop
outsb
pop
adc
add
ss
mov
pop
fstpt
int3
cmpsb
fs
daa
cmpl
in
or
in
dec
dec
addb
lcall
addl
pop
test
push
cld
outsb
repnz
xchg
jg
xorl
clc
lcall
cwtl
sti
or
jae
add
in
push
std
xchg
ljmp
popa
or
arpl
add
in
push
gs
or
jg
cmp
sarl
xchg
cli
or
imul
insl
testl
cli
data16
push
or
xchg
push
lahf
push
push
rorb
dec
dec
dec
mov
incl
insb
test
or
daa
lock
stc
in
inc
jecxz
xor
xchg
jecxz
xor
jmp
js
out
lea
dec
test
fwait
movsl
sti
dec
xchg
dec
movl
xlat
or
push
loope
mov
cmp
adc
idivb
outsb
push
in
ss
test
jecxz
sub
shlb
inc
mov
dec
or
jo
xor
jne
mov
add
ret
push
addb
ret
in
imull
lcall
mov
dec
push
dec
xchg
xchg
out
push
mov
out
mov
or
lcall
inc
cmpb
in
in
fs
insl
jecxz
clc
pop
jg
or
adc
pop
shr
inc
inc
dec
test
addb
test
jge
fcoms
cld
pushl
sub
mov
dec
test
pop
test
push
mov
dec
das
aaa
shl
sub
xorb
jo
cli
jae
pop
clc
test
and
or
push
xchg
mov
pushf
stc
pop
sarl
dec
or
std
addl
aas
repz
push
jl
idiv
insb
jno,pt
fistpl
mov
xor
cli
adc
push
insb
daa
cmp
and
mov
fisttps
add
add
stos
lock
repnz
cmovae
mov
repz
mov
jecxz
sub
xorl
popa
roll
mov
mov
xchg
xchg
lods
mov
sbb
cmpl
outsl
pop
mov
rolb
mov
mov
lock
push
clc
shrl
mov
jecxz
xor
in
cs
loopne
lahf
cli
adc
std
or
lods
outsl
push
idiv
test
or
dec
push
cli
sarl
or
jmp
add
pop
sub
pop
pop
push
push
dec
std
pop
xorb
mov
or
jno
jecxz
push
pop
jl
jnp
mov
aam
outsl
idivl
sbb
jg
dec
ja
mov
or
mov
adc
dec
jl
fistpl
jg
inc
ret
cmpsb
in
add
or
mov
or
sti
test
jnp
or
or
jg
dec
enter
xor
outsl
cmpl
outsb
imul
out
aaa
fldt
popa
mov
add
mov
xor
je
stc
outsb
and
stc
xor
std
jbe
jecxz
xchg
sbb
cltd
decb
cld
in
add
clc
imul
es
loopne
mov
call
pop
popa
mov
pop
jecxz
dec
in
mov
jmp
add
adc
cmp
mov
push
fisttpl
dec
adc
jg
jge
jb
push
arpl
ss
lahf
in
addr16
test
in
sub
clc
fstpl
imul
jle
pop
popa
lahf
adc
mov
sub
mov
xorb
add
out
dec
loopne
inc
or
loopne
cmpsb
sbb
ljmp
lea
pop
cmpb
pop
push
and
outsl
and
push
rorb
outsb
flds
das
std
incl
dec
std
jg
ljmp
les
stc
orl
repnz
sti
in
outsl
adc
adcb
dec
fimuls
xchg
sbb
outsb
cld
sarl
and
and
push
sub
aaa
adc
xor
xchg
test
jp
inc
add
gs
push
filds
push
icebp
mov
push
or
push
rcrb
xor
lcall
sbbl
test
pusha
cmpsb
cmpsb
sub
movsl
popa
cmpsl
mov
jmp
fistpll
out
cmp
out
push
outsb
jl
cmp
clc
stc
shll
dec
imul
push
sbb
fucom
std
shl
jl
outsl
mov
inc
push
test
xchg
sarl
insb
fcmovnu
loop
add
enter
jge
sti
cmp
sbbb
stc
sti
testb
stc
mov
sti
add
cmpb
std
sbb
cltd
cmc
call
and
mov
push
push
jecxz
dec
ja
jmp
jl
push
in
and
cmp
and
repnz
addr16
test
fs
mov
cld
push
cs
or
push
cmpl
xor
out
js
div
push
dec
push
dec
jno
arpl
in
arpl
jmp
jecxz
mov
arpl
insl
out
mov
mov
loop
data16
ja
dec
fld
push
outsl
adc
push
or
fidivs
icebp
lret
fistps
mov
dec
xchg
cmc
insl
rcll
xchg
ret
arpl
mov
push
xlat
mov
inc
stc
mov
lea
out
lcall
push
fstps
lret
push
xchg
sub
mov
lcall
into
push
cmpb
push
mov
cli
rclb
outsl
or
stos
mov
fnsave
or
sub
div
jne
icebp
outsl
and
stc
jne
sub
sbb
in
ja
inc
popf
sbb
or
dec
push
mov
push
or
sbb
sahf
adc
or
or
je
in
sub
inc
or
cmovae
pop
cs
in
inc
jno
adc
mov
pop
ja
pop
in
push
pop
out
imul
adc
xchg
pop
or
imul
mov
dec
loop
sti
lods
ja
out
stc
mov
pop
jecxz
daa
mov
xlat
in
cmpsb
lcall
sub
push
pop
fdivrp
push
out
cli
and
mov
pop
filds
pusha
and
xchg
mov
jecxz
add
mov
jecxz
lahf
sbbb
add
cmpsl
pop
int3
push
cs
push
mov
dec
cld
popa
test
add
neg
faddl
ljmp
movsl
push
sub
mov
lcall
mov
mov
clc
test
dec
ss
push
loope
jne
jno
mov
sbb
pop
stos
lahf
mov
shll
nop
out
sti
adc
push
loope
dec
sub
xor
je
mov
dec
arpl
outsl
xlat
inc
or
dec
dec
mov
cmp
mov
mov
fld1
mov
addr16
cmp
mov
mov
data16
jae
xchg
pcmpeqw
lock
packuswb
cli
lret
push
fcmovnu
cmp
add
xor
fcmovnbe
outsl
loopne
push
or
xchg
sbb
jb
push
outsl
daa
data16
add
mov
mov
pusha
scas
xchg
popf
push
in
clc
and
sbb
adc
pop
movsl
neg
insb
call
sti
gs
mov
adc
pop
fimull
enter
js
addl
out
xor
lods
cmp
jo
dec
movsl
in
inc
pop
and
std
adcl
mov
pop
ds
xor
push
jecxz
sbb
emms
inc
pusha
out
adc
in
in
scas
mov
jecxz
testb
test
cmp
cli
aas
orl
lds
lods
dec
clc
xchg
sub
movsl
mov
mov
jnp
int
add
ss
je
xchg
sbb
jg
jecxz
out
mov
lods
adc
add
test
int
cmp
jnp
in
fs
mov
out
jecxz
out
pusha
xchg
nop
pusha
mov
xor
mov
mov
insb
dec
add
enter
outsl
ja
repz
cmpb
outsl
xor
fistpll
repz
inc
xchg
shr
sbb
daa
jmp
pop
pop
mov
stc
out
decb
gs
dec
sub
gs
mov
or
push
push
jmp
dec
lahf
aaa
mov
sub
xchg
loope
out
in
sub
stc
mov
lods
dec
xor
cld
dec
dec
xchg
xor
leave
fisttpll
outsb
jmp
sbbl
xchg
sbb
cwtl
daa
dec
rol
push
iret
jecxz
dec
repz
pop
or
loop
mov
inc
jns
scas
mov
mov
dec
out
dec
xor
xchg
mov
mov
ret
cld
adc
fwait
mov
pop
mov
dec
fbstp
dec
xor
dec
jbe
dec
insl
add
in
mov
fchs
mov
in
fildl
push
not
dec
or
pop
inc
adc
jb
cmp
or
sbb
dec
enter
mov
dec
add
fsub
stos
mov
divb
pop
in
xchg
cli
jb
stc
adc
incl
mov
mov
ds
pop
adc
fs
in
adc
xchg
ja
adc
mov
xchg
lret
cmpsb
imul
adc
push
lds
pop
sbb
jmp
aaa
std
pop
subl
or
add
sub
push
fsts
in
insb
push
cltd
mov
lahf
lret
sahf
clc
add
movsl
imul
popf
fdivl
adc
dec
jmp
fidivs
fadd
xor
not
or
mov
std
sub
out
out
jecxz
inc
sti
jnp
or
sti
cld
or
out
loopne
add
push
fisttps
stos
in
or
incl
pushf
xor
rcrb
mov
icebp
xchg
xor
in
test
xor
add
dec
iret
lret
lods
or
lcall
orb
mov
negb
hlt
xor
push
or
shrl
add
jnp
mov
ljmp
push
addr16
add
aaa
addr16
pushl
inc
add
sbb
ret
jnp
roll
clc
mov
xor
cmp
push
jmp
jo
mov
scas
stc
sub
jo
push
ret
mov
daa
pusha
fstpt
dec
fwait
das
jp
jno
push
pop
outsl
pop
sub
mov
xorb
lods
leave
jg
testb
jg
cmpsl
jno
xchg
orl
insb
fwait
add
push
jecxz
add
pop
les
jl
sub
loope
out
cli
lss
out
xor
jb
out
ret
pushw
test
dec
test
fdivp
roll
mov
cmc
out
push
xor
aas
je
or
jge
popa
cld
pop
call
test
loop
xor
mov
dec
add
hlt
lcall
jmp
test
sub
ss
sub
fwait
aam
push
push
adc
xchg
addb
out
jnp
jg
insb
mov
or
out
inc
push
test
jg
add
ljmp
jno
out
jge
jb
test
out
cmp
sub
xchg
nop
push
out
jp
add
jno
gs
inc
in
fld
out
call
dec
xor
notb
adc
movsb
fists
xchg
adc
mov
call
xchg
daa
arpl
or
test
inc
jno
out
inc
inc
movsb
mov
mov
adc
mov
xchg
push
sub
xorl
mov
jecxz
decb
sub
movsl
xchg
imul
jmp
imul
push
mov
adc
loop
test
push
cs
or
adc
iret
sbb
or
xlat
xor
outsb
or
or
add
xchg
xor
jl
add
fisubs
adc
sbb
out
sbb
pop
xor
pop
gs
adc
data16
and
pop
dec
xchg
mov
clc
insl
add
stos
sarl
pop
jl
jle
addl
clc
fs
data16
mov
mov
inc
mov
inc
repnz
inc
adc
mov
jg
cmp
sub
xchg
fwait
sub
inc
xor
sbb
popa
pop
pop
mov
jmp
adc
ret
ss
ds
ret
add
add
adc
lock
das
pop
pop
repnz
ss
gs
inc
add
out
arpl
or
mov
decl
sbb
mov
lds
mov
in
xchg
sti
jmp
add
insl
jmp
dec
icebp
jns
mov
add
stos
jo
fs
addr16
mov
das
and
dec
gs
mov
lret
nop
cmp
mov
sbbl
in
adc
out
test
cmc
dec
mov
dec
loopne
add
sub
push
push
icebp
push
push
add
sti
aaa
xchg
xchg
pop
out
add
test
xor
xchg
in
ret
int
daa
sub
leave
inc
jmp
cs
cmc
in
icebp
out
std
repnz
xchg
addr16
popa
add
add
sarb
loope
cli
push
pushw
dec
push
xchg
lret
in
mov
out
out
in
xchg
lods
mov
in
iret
in
pop
icebp
insl
xchg
lret
in
jmp
pusha
repz
inc
movsl
sbb
popa
xor
push
cmc
inc
loope
fldl
scas
and
push
push
mov
dec
call
frstpm(287
shlb
ljmp
push
out
jb
ljmp
fisttpll
arpl
out
jnp
mov
jecxz
int3
or
decb
cmp
push
dec
cmpb
cmpsb
imul
gs
inc
repnz
jecxz
xchg
std
xor
jno
pop
into
mov
xor
cld
outsb
or
in
cmp
int3
shr
dec
in
mov
jmp
ljmp
lret
lock
inc
lock
pop
sti
jecxz
adc
inc
sahf
enter
or
in
sub
jmp
negl
cs
popa
xor
out
dec
in
xchg
mov
in
std
shrb
in
mov
or
cmp
jmp
lret
in
in
gs
jge
loopne
in
out
adc
xchg
pop
ljmp
xor
xor
push
pop
mov
lods
jb
xchg
add
aaa
mov
adc
pop
loopne
stc
jns
out
sti
sub
idivl
lods
push
mov
mov
mov
mov
dec
in
test
jecxz
ror
mov
stc
loopne
add
orl
dec
lahf
jecxz
stc
out
add
cltd
dec
stc
ror
insb
inc
sbb
gs
mov
pop
lock
js
cld
rclb
push
outsl
sub
setb
cmpsb
push
pop
and
in
inc
push
add
ja
sbb
arpl
mov
xor
jl
in
das
clc
outsb
push
jecxz
push
add
inc
ljmp
mov
clc
ret
xchg
jecxz
movsl
mov
sti
push
pop
push
push
lret
mov
data16
lods
pop
ss
lea
xchg
in
push
enter
pop
aam
js
jns
pop
cld
test
xorl
jg
ss
push
xlat
loopne
pop
adc
or
fwait
pop
sti
mov
loop
add
pop
pop
pusha
orb
adcl
in
insl
sbb
or
aaa
pop
jg
pop
sub
cmp
aam
fwait
pop
call
pusha
push
jne
pusha
adc
lock
testb
ja
icebp
es
mov
dec
add
jmp
push
jl
jecxz
incl
jo
dec
adc
lods
fcom
pop
roll
js
loopne
lahf
fsubrl
mov
cmp
pop
mov
fucom
push
mov
shr
dec
lahf
shl
incl
ja
bound
pop
popl
xchg
orl
inc
cli
rorb
outsl
or
daa
mov
xor
fwait
mov
testb
mov
mov
add
push
ljmp
daa
ljmp
add
cli
pop
xchg
incb
stc
sarl
xchg
les
std
in
cmp
push
pop
addl
push
or
pop
ljmp
data16
jno
aaa
adc
push
insb
add
cmpsl
and
inc
movsl
bound
mov
cmp
mov
jg
or
decb
incl
add
adcl
sti
fldt
outsl
sbb
mul
xor
xor
insl
sub
std
sti
insb
add
aas
cld
fadds
jb
shrl
fldl
popf
xchg
mov
test
add
clc
lods
dec
pop
ljmp
mov
incl
xorl
iret
xor
mov
std
addb
cmp
mov
xchg
xchg
gs
outsl
add
push
outsl
add
ds
xchg
jge
add
in
cld
sarb
incb
push
arpl
push
add
pop
out
and
je
sbb
cmp
sarl
mov
jle
outsl
dec
adcb
int
inc
jge
add
es
or
out
insb
cmp
clc
mov
pop
cmp
jp
clc
jg
aaa
inc
and
cmp
outsl
add
aaa
dec
jae
insl
jmp
cli
aad
lahf
pop
add
xor
pop
aad
mov
jg
mov
out
cs
mov
jmp
adc
jl
inc
push
jb
test
cli
lds
dec
inc
pop
jo
cmpb
jmp
lods
jno
xchg
adc
and
mov
cld
std
insl
adc
mov
pop
call
push
fistpll
xchg
pop
push
push
call
cli
lods
mov
mov
mov
and
lods
ret
push
xchg
std
dec
dec
push
push
pop
iret
fnstsw
rorb
xchg
sbb
xchg
push
adc
arpl
and
jmp
pop
mov
cld
call
dec
pusha
sbb
mov
stc
mov
or
cmpsl
pop
xor
jbe
mov
jl
push
dec
dec
jmp
cmp
mov
pop
adc
aaa
cmc
or
push
push
sti
sub
sub
iret
bound
insl
jo
pop
jle
push
pop
sub
mov
mov
or
or
pop
cs
jl
movsb
and
das
aas
pushf
xor
aas
lret
push
push
or
cmp
movsb
jnp
or
insl
push
jno
outsb
mov
dec
push
sbb
in
cli
and
pushf
push
mov
mov
push
fs
dec
cltd
push
xchg
dec
mov
cmp
or
jmp
cli
xor
ret
mov
pop
pop
inc
cmp
sbb
dec
dec
movsl
xor
jno
iret
xchg
push
fstl
notl
jbe
movl
sbb
sbbb
xor
or
mov
sti
mov
cmp
push
fs
jg
xor
fnsetpm(287
or
stos
aas
arpl
insl
popa
pop
fistl
or
lahf
daa
mov
cs
jp
cmp
xchg
push
in
push
lods
dec
fucom
xor
dec
data16
nop
xchg
mov
pushf
pusha
fwait
xchg
mov
movsl
dec
ret
lahf
outsb
gs
or
arpl
inc
pop
fs
mov
es
mov
fcmovu
mov
popl
xchg
in
sbb
add
adcb
xchg
fs
out
cmp
lds
push
xlat
rcrl
roll
mov
addr16
ds
lcall
loop
xor
mov
inc
ljmp
cmc
rcr
sbb
out
iret
mov
repnz
sub
test
xchg
push
add
fucomp
fiadds
inc
jno
fisttps
sbbb
pop
pop
or
xrelease
scas
outsb
and
imul
xorl
jg
outsl
xor
mov
outsb
add
cmp
fistpll
or
hlt
xchg
scas
cli
test
adc
push
cmp
outsb
adc
xchg
xor
pop
lahf
mov
ljmp
test
out
xorb
fnstsw
add
ja
sbb
stos
dec
inc
mov
jo
les
movsl
mov
dec
sub
stc
lret
orl
mov
sar
sub
adc
ret
lods
add
insl
dec
loop
push
mov
rclb
test
pop
push
shl
mov
jmp
fistpl
test
cmp
insl
sbb
xchg
push
js
bound
xchg
add
and
xor
call
cmc
in
or
jle
insl
pop
pop
xor
add
int
xor
lods
fcmovb
outsl
adc
push
xorl
sbb
mov
jo
pop
push
mov
pushf
pop
xchg
ss
insb
sbb
jo
lret
insl
ja
or
mov
outsl
andps
out
shl
jg
xchg
fisttpll
cmp
mov
rcll
mov
roll
aaa
sub
add
pop
push
or
ret
pop
pop
in
add
clc
sti
push
cmp
clc
movl
cmpb
test
cmpl
imul
push
loopne
push
sub
subl
outsb
dec
dec
mov
cmp
cmp
mov
fildl
ss
add
popf
aas
inc
dec
inc
jg
inc
jo
pop
mov
cld
scas
js
mov
jge
out
dec
test
push
push
xchg
inc
cmp
push
mov
dec
flds
xchg
jbe
loopne
xor
out
loop
mov
jmp
ret
aaa
cld
outsl
adc
out
subb
add
jecxz
push
fdivrs
fistpll
xchg
incl
ret
imul
test
std
test
pop
add
mov
out
addb
in
cmpsb
insl
sbb
aas
add
dec
addb
cmp
pop
lods
mov
pushl
in
sub
aaa
xor
cmp
lcall
mov
or
xor
test
dec
insl
xchg
or
mov
loop
test
loop
sbb
dec
lahf
inc
add
je
outsb
lret
pop
clc
fldt
xor
xor
test
dec
or
jmp
xor
jo
xor
add
pop
bound
ss
add
lock
test
dec
mov
add
xchg
insl
jecxz
orl
or
std
addl
push
mov
incl
jl
xor
bound
incl
pop
call
sbb
cld
es
loope
decl
jl
pop
xor
adc
sub
clc
xchg
repz
jae
xchg
jge
das
xchg
clc
push
jo
xorl
pop
or
ret
outsl
jne
popf
inc
test
mov
jo
addb
cld
push
pop
cli
pop
jae
out
and
xchg
test
test
adc
std
clc
sub
sub
push
rep
pop
insb
mov
aaa
jno
jb
test
inc
rcll
adc
mov
lret
jle
add
pop
sbb
enter
cld
mov
pop
lcall
pop
outsl
mov
test
mov
fcmovnb
sbbl
fisubl
cmp
inc
test
pop
add
lret
xchg
orb
sub
inc
sbb
daa
mov
movb
or
jns
jnp
clc
xchg
xchg
sbb
loopne
adc
xlat
mov
jecxz
xor
or
mov
jns
outsl
add
jmp
bound
add
dec
push
push
push
scas
std
push
jle
or
cmp
test
xchg
imul
xchg
outsb
das
rol
loop
pop
xor
add
insl
std
sbb
mov
mov
idivl
dec
push
mov
fs
arpl
sub
xchg
les
push
jecxz
dec
scas
cmp
negl
cmpl
scas
xchg
fwait
outsl
xchg
xchg
push
add
add
mov
sub
addr16
push
fdiv
and
shrl
bound
in
adcl
add
push
push
lock
std
push
xor
test
or
shll
loope
ss
xchg
stc
ljmp
incb
mov
and
cmp
aas
sbb
or
jo
rolb
add
cli
jne
adc
inc
or
jbe
push
ss
pop
lods
jae
fnstsw
or
jmp
lods
pop
fdivrp
outsb
add
jecxz
cmp
outsl
or
xchg
hlt
xor
inc
mov
test
mov
xchg
jbe
out
arpl
xor
pop
jae
je
sbbb
clc
jo
push
test
dec
pop
lret
cmp
mov
outsl
sub
shrb
xor
outsb
xchg
in
imul
scas
mov
mov
inc
xchg
mov
pop
pop
or
aaa
loope
inc
jecxz
or
je
stc
outsb
test
daa
jo
out
lods
pop
mov
jmp
cmp
mov
jmp
jecxz
clc
sub
hlt
pop
stos
push
fstps
ds
ret
mov
cmc
xor
push
jp
pusha
or
das
mov
ffreep
xlat
pop
pop
ss
mov
in
xchg
aam
lock
dec
mov
test
cmp
mov
xor
jmp
pop
imul
pop
push
ss
adc
arpl
sbb
pop
imul
or
fisttpl
inc
add
sbb
outsb
call
das
jl
dec
pop
add
cmp
push
sub
jmp
outsb
ds
inc
mov
in
inc
std
pop
scas
iret
mov
in
or
cli
in
xchg
arpl
mov
mov
mov
sti
subb
test
push
add
mov
in
sub
push
jno
adc
lods
cs
dec
add
add
mov
cld
push
jnp
stc
outsl
lock
xlat
in
or
movsl
cmp
pop
mov
cld
lahf
add
into
outsl
or
bnd
or
fldenv
out
loop
sbb
add
inc
cmp
push
subb
mov
pop
mov
add
mov
sahf
sbb
addl
fstpt
mov
pop
mov
test
shll
jns
insl
dec
addl
or
adc
rcrb
out
std
or
add
es
and
and
shlb
repz
push
sbb
jno
in
mov
cli
shlb
sti
enter
cli
jb
stc
daa
inc
lea
stc
fs
inc
testl
push
daa
out
daa
pop
mov
jns,pn
outsb
repnz
cli
adc
pop
sub
jne
cmp
or
icebp
push
dec
push
push
fs
test
andl
push
scas
decl
in
cli
iret
popa
imull
insl
lock
cmc
stc
into
or
jle
pop
clc
mov
out
jp
add
addr16
pop
jg
mov
sar
add
mov
mov
dec
popa
adc
mov
ds
add
push
mov
inc
mov
mov
test
inc
movsb
ja
mov
jo
hlt
outsl
std
mov
pop
mov
inc
xchg
and
inc
sahf
pop
ret
fisubl
js
adc
test
mov
pop
xchg
and
cmp
sti
jg
or
mov
push
xchg
out
mov
cli
adc
imul
mov
rcrl
cmp
mul
outsb
sbb
jle
push
mov
xor
sarl
or
jnp
and
mov
cmp
cld
sbb
insl
pop
gs
shll
push
dec
and
sbb
loope
push
addr16
cmpsb
lods
pop
imul
cmp
das
mov
xchg
pop
jbe
ja
ljmp
mov
sbb
cmc
jge
inc
out
push
dec
lcall
shll
mov
les
sarb
pop
test
pusha
test
ret
testb
dec
push
lahf
scas
xor
fisttpl
cltd
addb
mov
data16
repnz
pop
mov
mov
push
xchg
or
and
push
cs
sarl
lret
dec
outsl
mov
test
pop
sti
pop
enter
daa
pop
mov
movsl
jl
mov
jle
rcll
test
add
jecxz
sub
mov
fcmovu
lods
in
sti
mov
push
imul
pop
mov
push
test
pushf
insl
sti
xor
sbb
dec
dec
arpl
inc
rolb
adc
outsl
insb
cltd
mov
dec
loopne
xor
ffree
jmp
xchg
jle
push
xchg
lds
jecxz
pop
sub
loope
das
cld
in
fcomps
adc
bound
mul
jnp
jge
push
dec
jnp
mov
mov
dec
test
addr16
or
mov
inc
lahf
mov
mov
mov
ret
jecxz
mov
shll
sub
mov
dec
xchg
mov
xchg
lcall
icebp
cmp
insl
stc
push
daa
push
jnp
in
clc
repnz
addr16
icebp
test
orb
sub
mov
inc
lea
dec
dec
mov
ja
or
hlt
jecxz
dec
xor
inc
jmp
dec
repz
xor
outsl
sub
mov
loop
xor
push
xchg
shll
roll
lret
and
or
js
ss
lock
ret
xchg
test
lock
or
mov
in
push
lcall
dec
lahf
test
jp
out
mov
data16
testl
mov
addr16
movl
jmp
or
add
dec
movsl
scas
sub
jecxz
imul
enter
and
sub
sbb
inc
jecxz
cmp
or
incl
or
xchg
xor
sahf
push
sti
mov
pop
jp
aas
inc
lahf
mov
fisttps
insl
clc
frstor
fcompl
repz
mov
adc
fsubs
dec
pop
sbb
dec
dec
xchg
adc
inc
into
dec
jecxz
movsl
dec
adc
int3
es
lds
arpl
pop
stos
cmc
push
jge
pusha
push
or
outsb
add
push
loope
stos
idiv
mov
fwait
test
fbld
mov
xor
arpl
or
sbbb
lahf
in
mov
mov
test
cmc
cmp
or
loopne
and
inc
dec
dec
mov
mov
mov
subb
sti
xchg
jne
mov
xor
lods
jecxz
push
lahf
mov
xor
fldpi
xchg
adc
js
xlat
and
adc
es
shrl
cmc
std
ret
and
xor
fisttps
xchg
inc
mov
or
call
cmp
filds
adcb
ffreep
das
mov
shl
shll
outsb
pop
mov
push
mov
test
sbb
sub
dec
mov
dec
xchg
fwait
rcrl
lcall
xor
aaa
jg
loopne
cs
out
subb
ss
loop
push
pop
ljmp
xor
cmp
cmc
ljmp
add
jp
xchg
add
dec
mov
dec
add
dec
cltd
mov
pushl
std
das
add
inc
jle
jle
mov
js
xor
rolb
in
push
je
test
add
jno
lahf
scas
sti
pop
sbb
xor
outsl
fbstp
sbb
sbb
loope
mov
or
rcll
inc
adcl
xor
fimuls
jmp
and
pop
xchg
jno
or
decb
inc
sbb
jecxz
std
jle
cld
or
and
stc
adc
and
lods
popa
cmp
push
cs
adcl
js
mov
inc
dec
repnz
lret
stos
add
pop
mov
adc
push
xchg
or
pop
stos
gs
jne
xor
insb
in
pop
mov
mov
mov
add
add
dec
inc
or
popa
lcall
lock
xchg
lret
mov
iret
mov
cmp
xchg
shll
pop
shlb
mov
js
mov
sub
adcl
mov
adcb
push
in
and
adc
fs
add
shlb
xor
mov
sbb
adc
adc
or
das
outsl
inc
lcall
or
mov
shll
add
ss
lds
mov
aaa
mov
xorb
xchg
movsl
mov
sub
je
xchg
daa
and
push
cmp
or
fsubrl
mov
adc
dec
push
cmpsl
jecxz
cmpsb
mov
pushf
jb
test
adc
mov
jnp
mov
out
add
ja
xchg
cmp
addb
dec
add
out
fndisi(8087
arpl
jg
xor
fldenv
ja
dec
or
dec
pop
daa
xor
fidivs
pop
mov
pop
push
pushl
aas
incl
mov
sub
adc
fldl
fcmovne
inc
mov
and
insl
mov
push
pop
ja
in
jbe
mov
inc
and
je
aaa
loope
mov
push
pop
stos
sbb
dec
mov
lahf
cmp
idiv
pop
loop
xor
add
das
jno
pop
mov
arpl
xor
aam
or
roll
sub
xchg
cmp
push
add
mov
pop
pop
jns
add
sti
jno
jle
mov
arpl
push
mov
pop
mov
cltd
push
sub
imul
xchg
push
lods
push
fcompl
cmp
sti
dec
insl
mov
pop
frstor
xchg
lahf
fisttpl
aas
mov
fisttpll
pop
loope
mov
lahf
push
mov
ret
pop
adc
sbb
addl
loopne
hlt
cld
int3
fs
or
notl
mov
mov
jl
dec
loop
lock
sub
push
mov
lahf
jmp
xor
icebp
and
out
mov
std
adc
test
mov
aas
add
jno
std
or
and
rcrl
push
outsl
call
jnp
jg
dec
fisttpll
test
jnp
push
loopne
jb
daa
dec
jo
fdivrl
mov
jge
insl
pop
mov
jmp
mov
inc
add
adc
mov
insl
xchg
mov
test
cmp
dec
push
cmp
mov
cmpsb
filds
mov
inc
and
clc
or
inc
filds
mov
hlt
push
arpl
jbe
pop
loop
adc
fists
fdivp
inc
roll
jl
sbb
mov
insb
add
js
adc
push
add
jle
cmp
jl
test
mov
loope
lret
sti
lret
test
mov
in
push
push
xchg
jecxz
or
das
mov
jl
add
std
popf
pop
pop
ret
roll
mov
fs
jo
mov
jno
jnp
imul
outsb
repz
add
mov
or
dec
arpl
mov
sub
pushf
ljmp
pop
sbb
push
clc
loop
xor
cmp
test
inc
xchg
jl
stc
mov
jbe
cmp
dec
test
or
add
push
shll
sub
pop
jmp
idivb
mov
lea
mov
sub
pop
sub
fwait
and
fcomip
add
pop
repz
arpl
sbb
cmp
lahf
lods
sub
jmp
xor
adc
loope
pop
cmp
in
add
scas
jnp
or
loopne
mov
inc
mov
stos
incl
add
and
pop
icebp
dec
fnstenv
and
out
rorl
inc
icebp
add
in
and
sub
lds
imul
adc
shll
sbb
jecxz
movl
push
mov
test
or
mov
lea
out
lods
inc
xchg
lret
jmp
sahf
or
sub
loope
mov
frstor
jb
mov
movsl
adc
mov
pop
lahf
mov
ss
outsb
jg
push
insb
sbb
btr
pop
lods
rcr
xchg
push
xor
inc
mov
sub
pop
mov
mov
scas
push
jno
sub
aas
jns
aaa
test
mov
ds
loopne
icebp
push
push
std
push
imul
or
lock
jl
xchg
jne
sub
push
mov
cli
mov
mov
add
jbe
ss
mov
pop
sbb
sub
xchg
clc
or
jb
adc
repz
std
lahf
int
das
call
addl
ret
testl
pop
sub
ret
or
out
vshufps
and
jp
push
or
call
mov
inc
ljmp
mov
add
mov
mov
out
inc
sub
aam
xor
out
xchg
mov
xor
stc
stos
cs
jno
pop
fwait
sub
dec
sbb
fs
std
mov
mov
and
repnz
dec
dec
jecxz
and
adc
insb
aaa
outsl
sbb
sub
push
repz
dec
sti
xor
testl
ffree
fwait
test
pop
pop
lret
push
loopne
and
decl
mov
xor
mov
outsb
and
push
sbb
inc
test
pop
mov
mov
mov
inc
xor
sub
addr16
sub
pop
rep
cmp
fs
or
xor
push
sbb
stos
negl
and
sbb
lahf
cli
sbb
aaa
sbb
pop
fstpl
xchg
pop
add
mov
frstor
arpl
outsl
lea
mov
adc
jmp
fsubrs
sbb
gs
mov
xchg
pop
sti
incl
cmpsl
xchg
out
pushf
popa
mov
xchg
test
add
inc
mov
sbb
dec
ret
in
fldenv
cmpsl
pop
sbb
bound
add
ret
lods
outsl
leave
ret
xor
stos
repnz
dec
int3
lea
popf
addl
add
test
inc
loope
pop
rcrl
test
push
repz
out
pop
mov
sbb
fsub
pop
stos
insb
jmp
repnz
sub
mov
fistpl
cmp
pop
clc
test
outsl
xor
stos
shl
push
jae
mov
rolb
dec
dec
add
jnp
fldt
xchg
movsl
int3
out
push
mov
jmp
in
lret
add
cmp
cli
aam
add
testb
jg
loopne
sub
sbb
mov
loope
and
hlt
aas
dec
dec
in
and
or
dec
add
aad
lahf
or
xchg
push
fsubs
sbb
mov
mov
jb
lods
fcomip
adc
xchg
mov
push
dec
out
sbb
cmp
rolb
mov
mov
xchg
addl
pusha
jo
fbld
dec
hlt
dec
cld
mov
sbb
imul
out
sub
pop
cmp
dec
mov
adc
add
arpl
pop
cld
jae
repz
stos
mov
sarl
outsl
inc
fdivr
push
mull
push
xor
sub
test
shll
adc
jae
or
and
test
test
aad
in
insb
popa
repz
sbb
mov
sub
push
aad
incl
adc
inc
jl
add
xchg
std
aas
jmp
push
shrl
cmpsl
dec
mov
lds
jb
inc
jge
inc
jns
std
push
mov
jmp
sbb
push
stos
daa
dec
outsl
icebp
mov
insb
lret
or
shll
lret
addr16
movsl
cmpsl
cli
int
adc
mulb
pop
movsl
movsl
push
jge
jne
jne
or
mov
sbb
mov
mov
fadd
pusha
inc
sarl
mov
jbe
imul
inc
jge
shrl
ror
cmp
ret
push
inc
mov
add
movsl
aam
jmp
push
mov
outsl
mov
mov
sbb
inc
aaa
fucom
add
popl
fisttpl
out
jnp
lods
push
in
ror
fiadds
push
pop
cld
adc
test
lret
or
pop
or
push
ds
pop
push
roll
rcpps
aaa
movzbl
js
loop
pop
imul
outsl
fwait
stos
js
sbb
xchg
lret
das
ds
clc
je
or
ds
push
adc
cli
sbb
aaa
push
lahf
adc
gs
pop
sub
arpl
hlt
icebp
and
outsb
adc
insb
sbb
arpl
test
outsb
ljmp
xchg
xor
fistps
imulb
sub
push
idiv
leave
arpl
add
add
aaa
lock
lahf
fmull
test
imul
fisubs
jbe
gs
pop
sbb
or
or
sub
fisttpl
imul
dec
mov
cmp
shrl
adc
movsl
data16
jmp
mul
mov
das
cmp
jnp
dec
dec
arpl
xchg
sti
inc
aaa
insl
int
push
or
xchg
in
repnz
push
je
pop
mov
pop
cmp
jecxz
icebp
addr16
aaa
mov
inc
jmp
push
in
jl
icebp
sbb
test
xchg
das
leave
ffreep
in
sbb
test
xchg
pushl
and
mov
xchg
lds
add
push
fstl
ret
dec
pusha
mov
mov
pop
cmpb
pop
cmp
jl
pop
arpl
or
cli
fimuls
clc
in
push
pop
push
dec
add
mov
adc
xchg
cld
mov
mov
test
dec
imul
push
das
testl
or
popa
out
mov
or
lock
enter
js
call
sbb
out
sbb
in
fildll
pop
jbe
dec
ljmp
shl
xchg
inc
andb
jmp
jb
sub
dec
or
mov
mov
stc
inc
rcll
inc
push
adcl
icebp
cmp
push
popa
cli
ljmp
pushf
jo
xor
mov
sti
jnp
adc
stos
push
pop
out
xchg
dec
aad
jge
lods
jne
out
pop
cmp
jo
aam
loope
icebp
fildl
imul
ret
pop
add
out
sbb
jecxz
pop
stos
fisttpl
jo
mov
mov
pop
cld
arpl
shl
dec
mov
mov
dec
arpl
test
push
mov
cmp
dec
or
fistl
sub
aaa
xor
ret
jecxz
or
jecxz
xlat
mov
aad
pop
mov
aad
xor
add
std
outsb
pop
movsl
loopne
cmc
xchg
dec
rcll
dec
inc
arpl
repnz
push
dec
jmp
push
movsl
idivb
push
sbb
movsl
inc
jle
shl
in
mov
mov
and
or
add
imul
adc
mov
add
mov
std
scas
sti
and
sti
imul
fldt
das
insl
or
call
andb
mov
ja
loopne
xor
loope
adc
mov
sbb
inc
out
xchg
push
loop
cs
jecxz
stc
mov
cmpl
cmp
jecxz
addr16
add
icebp
cmc
dec
sbb
imul
mov
jg
mov
shrb
incb
push
xchg
adc
xchg
or
sub
mov
in
dec
jg
dec
dec
data16
mov
push
mov
sub
addr16
dec
pop
loopne
or
mov
addl
push
lds
lea
incl
test
lods
test
mov
push
lea
jecxz
or
push
mov
repz
jmp
jns
int
stc
push
pop
push
push
pop
lret
xchg
lds
dec
bound
inc
testl
or
mov
mov
sbb
insl
sbb
add
sbb
test
test
sti
add
add
pop
in
std
jmp
sub
shll
push
fnstsw
sub
push
jl
push
cmp
add
or
nop
notb
cmp
stos
cmp
mov
jmp
adc
icebp
xchg
mov
in
clc
xchg
in
mov
push
jno
out
hlt
push
std
cmp
fldpi
cli
lds
enter
sbb
fwait
mov
enter
stc
lock
mov
mov
sbbl
clc
pop
cli
aam
dec
repz
mov
ret
mov
xor
pop
mov
adc
cmp
xchg
pop
and
scas
and
jge
xchg
sbb
mov
and
sbb
xchg
sbb
js
out
dec
xchg
dec
mov
dec
mov
dec
mov
dec
mov
in
xchg
dec
xchg
sbb
jl
in
repz
ss
push
add
mov
in
iret
adc
mov
dec
fs
adc
add
gs
rcrb
sub
enter
mov
cmpsl
enter
xor
inc
leave
add
add
fwait
repnz
adc
mov
lock
cli
rcrb
jne
pop
ja
jne
adc
add
push
push
shr
adcl
mov
adc
add
fs
testl
icebp
test
push
sub
data16
pop
loope
adc
aaa
daa
rcrb
push
pushf
daa
mov
mov
pop
scas
std
jg
call
sub
push
mov
xchg
test
jg
cs
fcmovnb
jbe
clc
out
orl
jp
add
ret
jns
sub
call
orb
cld
add
mov
or
jns
jg
pop
outsl
jp
sbb
cli
cmpl
rcrl
sub
mov
clc
xor
mov
fcmovnu
pop
push
jnp
push
stc
call
add
ljmp
jnp
test
add
mov
xchg
add
stc
lds
decl
mov
out
test
add
jnp
ja
push
adcl
sub
or
push
push
pop
inc
add
test
xchg
sahf
test
mov
addr16
cmp
outsl
xor
hlt
cltd
clc
jo
sbb
je
shll
dec
cmp
and
push
cmp
jno
divl
sbb
std
outsb
daa
and
outsl
xor
mov
imul
inc
fisttps
pop
andb
mov
jl
stc
inc
jo
pop
mov
std
ret
lds
shrl
testl
test
pop
sar
pop
clc
pop
inc
dec
pusha
mov
cmp
inc
sub
and
enter
sbb
xchg
pushf
daa
cmp
pop
jb
andb
inc
lret
adcb
fldcw
xlat
inc
adc
hlt
xlat
lcall
sbbl
call
ficoml
mov
dec
pop
iret
jns
in
test
repz
mov
decb
aas
adc
inc
test
mov
lcall
push
or
popa
adc
in
fisttpl
push
das
lahf
cld
jecxz
int
fmull
mov
sti
pop
push
lds
adc
pop
aas
out
dec
push
inc
pop
sub
ds
xor
cmc
outsl
mov
cmova
out
cmc
mov
jecxz
jns
leave
push
adc
aam
add
pop
mov
xor
mov
in
or
fs
int
ss
cmp
rolb
leave
and
hlt
loopne
imul
adc
scas
loop
sub
push
in
add
popa
xchg
inc
cli
inc
cli
jo
mov
inc
pop
push
imul
inc
pop
inc
or
cmp
sub
pop
jle
pop
fdivrp
lds
in
adc
fiadds
jns
cwtl
lahf
push
push
or
out
jae
pop
jbe
ds
stc
gs
rclb
cmp
lds
xchg
inc
sub
add
xlat
stc
std
lcall
pop
out
sbbl
incl
xor
sti
or
ret
or
sti
add
pop
jge
jbe
add
or
jg
filds
jp
jmp
test
mov
pusha
mov
adc
fs
inc
push
add
pop
stos
adc
mov
movzwl
dec
decl
mov
jnp
dec
xor
jp
xchg
fstl
mov
and
adcb
popf
inc
mov
fcmovu
xor
push
ja
and
lock
ret
add
sbb
mov
out
fimuls
popf
dec
pop
orw
mov
test
xchg
loopne
test
fcomps
pop
sbb
mov
icebp
addb
in
lods
inc
jne
in
rorl
jg
movsl
mov
lret
inc
stc
dec
lds
call
nop
push
ja
xor
sbbb
mov
in
dec
jecxz
movsl
dec
dec
cs
push
or
jmp
jmp
daa
insl
pop
hlt
pop
sub
test
inc
add
lcall
stos
inc
sbb
dec
setae
rcrl
cli
outsl
out
mov
std
cmp
ja
addl
hlt
repnz
jb
xchg
cmc
adc
in
xchg
or
or
xchg
and
sbb
dec
and
mov
or
cmpl
sub
jmp
push
and
jno
sbb
cld
frstor
loop
insl
cmpl
jg
push
ja
sub
pop
mov
sub
add
scas
outsb
std
and
jnp
mov
bound
dec
jns
out
and
jp
sbb
mov
outsl
xchg
or
outsl
cmpb
outsb
xchg
stc
imul
subl
mov
test
or
inc
inc
xchg
inc
ljmp
push
repnz
mov
dec
mov
out
dec
arpl
add
addr16
fwait
loopne
and
add
push
add
inc
sub
xchg
push
push
push
jns
dec
sub
js
pop
or
pop
inc
aad
addr16
xchg
pop
cmp
aam
add
push
mov
xchg
push
sti
int3
dec
aad
push
push
not
push
loope
pop
dec
pop
or
mov
popa
push
stos
int3
mov
jmp
insl
out
lock
cmp
push
push
and
rolb
add
cmp
insb
adc
popf
add
outsb
sub
aas
test
xor
in
cmp
jmp
push
xor
out
xor
rclb
mov
add
ja
sub
xchg
sbb
insl
inc
pop
hlt
test
inc
pop
or
pop
or
xchg
push
dec
jecxz
pop
test
fstpt
cmp
sti
pop
push
add
gs
or
and
mov
sar
outsl
addr16
les
inc
idiv
out
or
mov
add
or
mov
mov
dec
xchg
dec
and
lahf
fldl
or
inc
ret
dec
js
jle
pop
gs
mov
pop
jne
push
inc
popa
xchg
cmp
pop
xor
push
jmp
lods
cmp
sti
test
lea
cltd
or
int
lret
jge
mov
xorl
ret
jmp
mov
cmpb
or
add
mov
jne
mov
or
dec
dec
add
xor
inc
dec
daa
mov
xchg
cmpsb
clc
arpl
and
sbb
add
xlat
cmc
fildll
or
dec
push
pop
add
hlt
dec
aam
sub
in
mov
subl
call
hlt
roll
lcall
icebp
bound
mov
pop
mov
ja
dec
inc
loopne
xor
cwtl
loopne
push
lahf
repz
pop
add
shll
stc
jns
jge
fwait
or
mov
mov
mov
mov
sbb
jb
add
add
imul
mov
iret
xor
cmp
pop
out
loop
ret
sub
xchg
jecxz
push
pop
addb
xor
sub
xor
out
xor
ja
loopne
add
add
sbb
inc
pop
test
or
lea
add
cmp
cmc
xlat
mov
jo
cs
loop
push
mov
push
push
jmp
jmp
mov
add
mov
push
js
add
ds
dec
jle
push
cmp
je
cld
outsl
call
cmp
mov
jno
inc
mov
dec
xchg
xchg
test
mov
aad
outsl
test
popw
insl
or
and
incl
int
pop
lods
dec
imull
movb
mov
add
dec
cli
mov
mov
cld
jns
inc
testl
insb
sbb
aam
jae
movsb
dec
cli
mov
repz
add
orb
out
pop
fldenv
inc
jns
lds
cmp
and
aad
sbb
gs
lods
xchg
pop
rorl
sti
add
pslld
das
pop
jmp
mulps
loopne
push
gs
ja
popa
add
mov
sbbb
inc
aas
pop
mov
push
aaa
adc
xor
mov
cmpsl
add
pop
in
bound
inc
daa
mov
pop
hlt
sti
pop
add
mov
nop
inc
mulb
int3
dec
and
pop
fildll
add
iret
imul
rcll
rolb
nop
push
dec
fldt
cmc
adc
arpl
les
in
fs
sbb
fs
lea
lods
push
mov
mov
pop
fcmovnu
add
mov
push
xor
jne
add
in
add
dec
cs
adc
mov
jno
mov
call
insb
xchg
hlt
or
mov
fldpi
pop
mov
add
data16
fsubr
xchg
scas
call
in
dec
arpl
ljmp
pop
repz
in
pop
aas
test
pop
and
lock
push
pop
dec
cltd
arpl
stos
xor
mov
addr16
pop
mov
ret
dec
xor
pop
and
int
leave
mov
iret
pop
repnz
arpl
movsl
lods
mov
lds
pop
sub
dec
add
sub
bound
mov
push
pop
int3
out
in
std
icebp
dec
insl
pop
clc
push
mov
inc
add
lret
pop
negb
or
jl
cwtl
shrl
mov
sub
pop
and
enter
into
jecxz
pslld
xlat
sti
fstpt
mull
fistps
sub
cs
mov
pop
jmp
mov
roll
xor
data16
pop
and
fwait
add
rclb
or
scas
in
cmc
roll
jge
in
jge
mov
jmp
orps
idivl
stc
push
js
pop
incl
loope
cmpsb
or
hlt
jle
and
and
in
hlt
gs
mov
out
in
call
push
out
aam
push
leave
mov
ret
aas
or
xchg
and
out
pop
movsl
test
aaa
and
push
push
sub
inc
mov
jmp
js
outsl
jg
or
inc
out
pop
pop
xchg
push
fsubrs
in
repz
iret
decb
xor
cli
arpl
xlat
pop
cmp
mov
mov
inc
mov
cmpb
cmp
lds
faddl
xchg
imulb
in
dec
pop
inc
mov
push
aas
leave
or
xadd
imul
inc
xchg
adc
inc
add
and
aam
mov
int
push
and
mov
or
push
and
test
inc
jg
jmp
dec
lret
jmp
push
xchg
out
sbb
adc
iret
pushl
fcmovnb
xchg
push
das
sub
cmc
and
jmp
out
jecxz
jecxz
add
loope
cli
bnd
push
dec
fisttps
lods
jns
stc
pusha
push
movsl
mov
or
scas
inc
cmp
mov
cmc
bound
push
and
push
out
inc
xchg
fisttps
add
xor
cmpsb
addr16
in
decl
pop
xor
add
popf
mov
adc
iret
data16
dec
xchg
push
mov
push
push
pop
and
scas
in
xor
pop
nop
les
mov
stos
call
mov
popa
mov
enter
fildll
fs
push
mov
dec
cmpsb
fistpll
data16
mov
xchg
test
pop
in
pop
fnsetpm(287
and
sbb
add
pop
imull
insl
popa
jne
or
mov
icebp
or
inc
push
mov
xor
test
lock
sub
mul
mov
jmp
lock
xor
xor
rcl
sub
idiv
das
fs
std
mov
shrb
dec
jge
enter
pop
out
arpl
mov
adc
arpl
cld
sub
lcall
ds
ljmp
sti
pop
push
mov
bound
lcall
pop
aad
dec
add
leave
sbb
push
add
adc
aam
incl
incb
test
iret
in
dec
adc
fldl
jno
push
pop
jg
fimull
dec
paddusw
inc
push
xchg
mov
into
sbb
dec
sbb
mov
adc
pushl
jmp
out
dec
sbb
fisttpl
call
test
bound
addl
outsb
pop
rclb
sub
mov
adc
cmp
jge
sti
sbb
pop
cmc
push
out
sti
jo
sub
icebp
mov
inc
push
push
add
xchg
clc
mov
push
arpl
cs
pop
push
sub
sub
arpl
add
shl
mov
subl
inc
or
lret
push
mov
xor
mov
aas
or
inc
filds
test
subl
mov
fildl
or
dec
incl
orl
cld
add
call
das
nop
dec
clc
insb
sarb
loop
dec
imulb
jno
call
ret
pop
add
jmp
out
jge
popa
add
mov
loope
decl
inc
pop
addb
aad
add
inc
pop
xchg
in
addb
mov
in
inc
pop
jle
in
aam
add
sarl
cld
pop
call
cmpl
mov
ljmp
jb
dec
cmp
call
or
ds
mov
push
inc
jg
cmp
xchg
loope
cmp
inc
jae
pop
pop
push
add
cmpsl
jge
jo
hlt
add
push
insl
add
and
push
cwtl
add
sbb
ljmp
rcrl
std
movsl
or
aas
sti
add
jecxz
dec
decl
popa
push
inc
inc
ds
mov
jle
pop
fidivrs
les
lret
rolb
iret
arpl
decb
mov
in
sar
leave
cld
push
addr16
incl
mov
add
mov
adc
or
sbb
ja
arpl
mov
mov
fdivrs
cld
push
into
xor
add
add
mov
pop
pop
shll
ljmp
push
mov
inc
cmpsb
pop
jmp
test
mov
mov
test
mov
pop
jg
pop
cmc
test
dec
stos
adcl
mov
outsb
pop
jg
push
push
pop
and
insl
add
js
loopne
popf
xchg
mov
adc
mov
imul
dec
mov
pop
jno
fwait
mov
add
cmpb
shr
cmp
xchg
pop
jg
mov
fwait
xor
pop
cmp
lds
cmc
sbb
or
mov
or
push
adcb
jp
movsl
sti
cmpsb
add
or
mov
cmp
pop
les
or
mov
xor
jmp
pop
sub
stc
xchg
shl
popa
bound
outsb
push
mov
ret
test
pop
ljmp
cmp
xchg
in
stos
bound
lcall
inc
adc
or
fs
cwtl
popf
xor
add
or
adc
or
jnp
adc
mov
fldenv
cwtl
arpl
aaa
lods
push
loope
aaa
xor
push
push
loop
add
pop
push
and
inc
adc
jl
dec
shll
xchg
pop
push
xor
fdivp
xor
push
push
dec
lgs
icebp
outsb
jnp
cli
xor
and
ja
stc
sub
dec
gs
fucomip
addr16
add
fyl2xp1
xor
jae
xor
fldcw
neg
pop
dec
xorb
leave
stc
push
mov
pop
int
dec
push
cwtl
sub
fs
fs
arpl
gs
cltd
mov
mov
in
jge
loop
mov
adc
cld
or
xchg
jnp
jnp
fdivr
inc
jg
xor
daa
cli
adc
insb
hlt
movsl
enter
rcr
mov
pop
std
leave
fimull
xor
inc
addl
aad
movsl
push
mov
cmpb
jo
add
out
js
fincstp
in
repnz
pushf
dec
mov
ds
jg
jg
add
push
gs
dec
fisubl
andb
out
dec
hlt
movsl
or
imul
ja
orl
lahf
xorb
xchg
std
insb
aaa
pop
pop
add
loope
add
mov
fimull
lods
mov
inc
pop
add
xor
push
enter
cmp
loopne
loopne
sti
insl
test
lret
fisubl
push
imul
outsb
out
stc
fcompl
out
imul
lahf
jecxz
sbb
out
std
out
enter
xchg
xchg
xchg
out
insl
dec
inc
cmp
clc
fwait
mov
sbb
cld
dec
pop
pushf
pop
scas
push
sbb
insl
insb
fucomip
push
insb
pop
mov
inc
daa
pop
rcrb
rep
enter
xor
jg
dec
sbb
jo
jl
jns
sti
clc
pop
xchg
das
and
jno
lds
imul
filds
and
xor
inc
outsb
push
lahf
aas
outsb
mov
push
pop
pop
push
popa
adc
or
add
bound
xchg
add
pusha
movb
push
pop
test
cld
mov
mov
or
mov
xchg
add
xor
stc
or
or
adc
or
insb
cmp
ret
movl
jg
popa
jo
fucomip
pop
jge
cld
cwtl
andl
insb
sti
das
mov
inc
mov
ja
adc
inc
mov
pop
cmp
adc
push
ss
imul
int
andb
shlb
push
hlt
jge
fs
push
pop
pop
pop
lret
and
test
jg
call
jo
stos
jp
jg
jno
jle
push
push
cli
out
jp
ljmp
xor
add
cwtl
pop
insl
outsb
add
dec
dec
std
enter
xor
sub
pop
add
sub
dec
loop
stc
add
mov
mov
or
push
dec
adc
cli
pop
loop
sub
add
sbb
ffree
std
push
aaa
add
ja
cld
imul
insl
mov
shlb
fsts
inc
repz
mov
pop
cwtl
sbb
sbb
ljmp
leave
sti
lods
mov
xchg
mov
mov
sub
sbb
adc
pop
mov
sahf
sub
mov
imul
mov
cli
and
add
sbb
adc
in
enter
mov
ftst
pushf
xor
adc
in
repz
out
mov
mov
sarb
into
insl
arpl
sbb
pop
inc
shr
ds
std
fstpt
inc
outsb
dec
imul
outsb
lcall
sub
outsl
jbe
ret
iret
jge
aad
jbe
fwait
jne
cmpsb
imul
sbb
push
daa
pop
je
mov
cs
lret
lahf
jae
outsl
mov
jb
insb
xchg
lret
cmpsb
jmp
jo
jb
sub
mov
push
popa
daa
dec
aas
cmp
es
cs
pop
jb
loopne
jo
jno
mov
lcall
std
cs
lret
in
ja
jae
jne
ja
jns
jb
pop
scas
js
je
ja
js
jnp
lret
xchg
jp
jns
jae
daa
cmpl
jnp
jp
jbe
js
jns
scas
mov
jnp
cmp
push
imul
jle
mov
scas
mov
jge
lcall
pop
dec
inc
cmp
ss
xor
lret
in
mov
jb
je
jne
fwait
shll
lret
fnsave
add
mov
jno
jae
je
dec
add
cmpsb
sbb
fcmovnbe
js
outsb
fldt
pop
stos
cs
jge
jl
js
xor
rcr
adc
add
aas
shrl
or
sti
jbe
ja
in
mov
adc
leave
add
xor
cwtl
jb
jg
sbb
jecxz
cmp
inc
hlt
sub
fcomps
dec
add
js
cld
loopne
sbb
mov
add
and
jno
and
nop
pop
cltd
outsl
add
dec
push
roll
xchg
adc
or
adc
add
mov
leave
orb
mov
adc
xor
jno
jnp
in
popa
je
outsb
pop
jo
jne
int
xchg
popf
daa
inc
jb
jbe
int
xchg
jno
js
adc
cmp
lret
out
mov
jmp
jns
jae
data16
inc
jno
jecxz
or
jp
outsb
adc
call
std
inc
imul
pop
dec
jb
adc
mov
addr16
imul
pop
outsl
xor
pop
loop
outsl
dec
imul
pop
outsb
roll
inc
insb
pop
pop
inc
gs
insl
jg
push
pop
push
ds
stos
cld
cmp
insb
dec
outsl
push
inc
sti
dec
imul
adc
push
inc
pop
pop
adc
push
cmp
cld
in
push
pop
data16
arpl
std
cmp
pop
fsubrs
sbb
pop
out
outsb
ja
pop
imul
cli
inc
imul
pop
push
arpl
inc
bound
cld
inc
sti
inc
push
pop
jl
gs
in
pop
sti
arpl
clc
hlt
lahf
inc
pop
pop
addr16
daa
ja
call
jbe
push
bound
arpl
cmp
cmp
outsb
fs
mov
dec
push
bound
pop
pop
jo
mov
dec
jo
jb
push
cli
lods
push
stos
push
jno
std
mov
pop
in
dec
gs
pusha
cmp
pop
bound
push
dec
fdivrs
bound
pop
jb
cmpsb
decl
cmp
pop
pop
sub
adc
fs
push
bound
cli
mov
ja
dec
outsw
lods
mov
shll
inc
outsb
insl
loope
jo
aas
insl
outsb
insw
dec
inc
out
pop
pop
imul
ffreep
outsb
pusha
imul
and
std
outsl
in
dec
pop
addr16
ja
stc
inc
bound
pusha
imul
pushl
imul
outsl
cmp
pop
jno
insb
je
or
mov
inc
cmp
insb
insl
pop
outsl
lods
push
jge
jmp
aas
pushw
imul
clc
outsl
pop
sti
jg
mov
inc
inc
dec
dec
inc
inc
cs
daa
pop
addr16
addr16
into
pushl
jne
push
jl
cmp
pop
test
jecxz
mov
pop
pop
outsb
jo
pop
cmp
das
sti
call
bound
pusha
inc
cmp
jb
dec
pusha
pusha
insl
cli
pop
mov
mov
std
pop
and
jmp
mov
insl
add
in
insl
inc
inc
add
sbb
mov
mov
inc
jg
sti
addl
insb
das
mov
negb
push
test
rclb
push
in
test
test
dec
gs
addr16
add
ret
idiv
sbb
outsb
dec
test
sahf
inc
mov
bound
mov
mov
popa
cld
aas
pusha
inc
xor
cli
push
dec
cmp
int3
pop
sti
dec
xor
sub
movl
outsb
xchg
popa
insb
daa
or
add
mov
adc
arpl
fldt
or
jne
bound
mov
pop
pop
insl
jne
cld
cmp
pop
cmp
mov
pop
gs
dec
cmp
mov
cmp
adc
outsl
insl
mov
mov
push
std
push
icebp
stc
ret
outsb
dec
pop
arpl
insb
pusha
std
sahf
dec
jb
ds
lds
gs
dec
pop
in
or
xchg
sar
pop
xchg
mov
pop
push
mov
mov
inc
xor
push
gs
cmp
dec
xchg
sbb
loope
dec
inc
jmp
jno
jle
adc
mov
push
addr16
fs
mov
insb
data16
arpl
pusha
xchg
sar
jg
aad
adc
popa
inc
push
popa
sti
mov
jp
sub
cmc
push
pop
inc
insl
imul
cmp
or
inc
out
ds
notb
ficoms
jp
insb
imul
or
dec
inc
push
push
pop
sbb
stos
test
and
or
sbb
pop
insb
pop
out
dec
fs
mov
iret
push
jecxz
inc
shll
sbb
sub
cmp
sub
mov
bound
xchg
ficoml
arpl
sub
inc
daa
xor
push
imul
cmp
cmp
dec
fwait
cli
cmp
daa
pop
clc
das
pop
jp
mov
cmp
cmp
movsl
outsl
std
lea
clc
cmp
cmp
sub
xchg
fcomip
pop
lea
inc
dec
cmp
pop
xchg
jo
xlat
mov
aas
cmp
bound
cmp
push
pop
movsl
pop
mov
test
adc
cmp
mov
fucomi
std
cmp
cmp
jo
dec
push
fcmovbe
ret
subb
daa
aas
jns
dec
lea
fadds
imul
mov
aaa
pop
inc
mov
fidivl
imul
insl
adc
fucomi
jbe
cmp
cmp
dec
jae,pt
cmp
inc
cmp
repz
mov
push
popa
pop
jbe
test
cmp
lea
mov
add
scas
mov
jge
jnp
cmp
and
popa
pop
pop
mov
bound
cmp
sbb
push
mov
mov
into
xchg
cld
inc
mov
adc
pop
call
aas
outsb
jno
in
dec
cmp
in
push
cmp
sub
dec
sub
cmp
push
sti
cld
pop
add
sub
inc
cmp
mov
xor
add
pop
or
imulb
xlat
pop
jno
arpl
dec
cmp
pop
arpl
fistpll
pop
outsl
imul
jmp
aaa
cmp
mov
dec
outsl
insl
push
sub
lock
ret
or
dec
aas
cmp
arpl
repz
sub
cmp
and
mov
mov
cmp
push
ja
cmp
pusha
mov
cmp
mov
sahf
push
popa
imul
aas
dec
cmp
cmp
cld
add
push
arpl
cld
lods
or
pop
cmp
aaa
sar
pop
cmp
bound
mov
sub
dec
sub
imul
cld
inc
lahf
or
outsb
ds
cmp
lret
xchg
das
data16
or
jo
cs
adcw
inc
imul
outsl
cmp
cmp
inc
dec
inc
inc
inc
push
out
decb
imul
incb
mov
imul
push
fildll
fwait
or
pop
cli
cmp
xor
popa
fldt
shrb
into
mov
cld
push
insb
test
mov
clc
repnz
cli
pop
jae
ds
insb
pop
inc
pop
mov
fadd
std
or
imul
push
fimuls
movsl
addr16
jb
aam
or
outsl
adc
pop
cli
mov
jb
pushf
in
cli
mov
outsl
mov
imul
decb
inc
dec
push
aas
dec
dec
sub
cld
push
pop
aas
insb
addr16
jae
sti
test
pop
or
cmp
jo
inc
lods
sbb
clc
cwtl
std
pop
popa
fwait
lods
inc
jns
jo
stc
cld
dec
adc
xchg
pop
xchg
inc
sub
sub
fucomip
push
jmp
loop
clc
mov
jb
jb
adc
jo
fs
clc
mov
mov
iret
sti
pop
sub
lods
pop
jno
xchg
pop
loope
out
inc
add
outsb
movsl
and
dec
adc
jnp
add
or
mov
jp
jge
and
xchg
lret
in
arpl
mov
sbb
xor
jl,pt
push
js
xor
jb
jp
jl
add
or
loope
std
pushl
mov
jmp
pop
lods
in
sub
jg
inc
shrl
ret
pop
orl
outsl
dec
insb
jno
mov
insl
inc
jno
addr16
in
ss
rorl
pop
dec
inc
arpl
data16
icebp
dec
jmp
mov
inc
fistl
jae
dec
insl
nop
push
gs
das
clc
cmp
roll
pushf
ds
pusha
pop
push
sub
test
call
fs
or
or
xor
pop
mov
pop
add
sub
lahf
daa
sub
ss
xor
xor
sub
es
xor
xor
incl
in
aaa
xor
xor
xor
xor
cs
jbe
jle
sub
jnp
subl
mov
sbb
sub
sub
sub
mov
scas
or
add
mov
and
dec
sbb
xchg
sbb
add
sub
pop
sbb
dec
add
enter
int
dec
and
fistpl
dec
add
pop
inc
imul
les
and
lret
add
push
ret
outsl
pop
jg
dec
sub
fs
dec
push
and
xor
sub
in
pushf
ror
mov
xchg
fsubs
dec
ret
jmp
inc
or
and
dec
dec
cmp
fistpll
cmp
aas
push
aas
inc
inc
aas
dec
pop
dec
inc
inc
dec
and
ss
imul
call
mov
mov
rcl
mov
aam
lahf
mov
and
fbstp
test
fldcw
movsl
sbb
dec
push
pop
sub
popa
xchg
mov
lds
or
jle
test
push
jl
das
loopne
jo
pop
mov
popa
outsb
outsb
clc
sub
testb
sbb
xlat
gs
ds
push
popa
dec
mov
lahf
pop
mov
pop
dec
lods
dec
imul
addr16
js
dec
cli
arpl
push
sbb
xlat
pop
add
inc
push
pop
loopne
loopne
pusha
int
sub
cld
inc
dec
push
dec
sbb
dec
pop
divl
inc
pop
dec
or
or
cli
dec
dec
dec
dec
push
daa
push
pop
imul
imul
xor
inc
mov
out
sub
arpl
jae
fs
ja
push
fadd
cmc
pop
pop
imul
lcall
mov
int
lret
fcmove
in
mov
mov
pushf
mov
jnp
cmc
mov
int3
jmp
enter
mov
mov
mov
int3
cmpsl
fcmovnbe
out
ret
lret
scas
mov
mov
stos
lock
stos
icebp
ret
lret
repnz
sahf
lret
lret
mov
mov
ja
sahf
into
into
mov
test
mov
mov
cmc
int
mov
iret
ja
outsl
pslld
hlt
ret
shll
bnd
shrb
pop
imul
rorb
fidivs
cmpsb
mov
stos
shlb
mov
ror
out
ret
fadd
mov
sub
sarb
adc
in
rcl
not
into
ffree
mov
aas
fdivl
leave
sbb
leave
stos
ficompl
rcll
push
xor
mov
arpl
jbe
pop
cmp
sub
push
pop
mov
cmp
jo
sub
adc
dec
mov
cmp
imul
or
cmp
imul
sbb
dec
jne
pop
pop
jns
je
push
fcmovnbe
cmp
pop
push
adc
bound
pop
ja
dec
dec
jne
inc
out
jg
fs
clc
jmp
test
insl
and
push
stc
fistpl
daa
push
cs
sub
das
out
fcomps
in
push
jnp
imul
sub
popa
dec
imul
mov
jbe
loop
insl
sbb
sub
push
imul
gs
clc
push
dec
inc
dec
imull
inc
dec
inc
out
les
std
mov
inc
pop
or
inc
cmp
inc
cmp
add
ds
cmp
lods
pop
inc
movsl
inc
pop
push
popa
mov
xchg
mov
sti
mov
stc
stc
mov
xchg
push
sub
push
and
lea
cmp
sub
in
jo
dec
adc
stc
dec
xchg
mov
loope
dec
dec
adc
pop
push
dec
push
lahf
sub
cmp
fcmovb
daa
imul
sbb
addr16
sbb
push
jb
push
and
sbb
mov
push
and
xor
mov
stos
mov
out
or
sbb
push
clc
ss
or
mov
add
leave
pop
push
ficoml
cmpsb
push
cmp
jno
je
adc
out
pusha
insl
stos
pop
pop
insl
popa
mov
sbb
sub
push
pop
inc
pop
xchg
js
push
test
dec
pop
sti
imul
bound
push
mov
jne
ds
jno
jb
cmp
xchg
mov
push
inc
aam
cs
cmc
dec
push
pop
sbb
inc
mov
mov
jno
and
xchg
aas
std
jmp
jo
pop
outsb
pop
sbb
sub
insl
out
dec
inc
inc
inc
inc
inc
dec
sti
sub
cmp
push
dec
cli
dec
lock
or
add
jb
cmp
mov
sbb
inc
push
lahf
sub
jg
aad
clc
testb
popa
pop
mov
repz
imul
inc
jecxz
mov
and
pop
cmp
insl
jecxz
sub
jg
arpl
jb
pop
push
lea
stc
sub
push
in
imulb
or
insl
or
adc
cmp
ret
sbb
iret
pop
scas
fsubrs
sbb
repnz
fs
cmpsl
pop
sbb
sbb
dec
arpl
pop
and
cmp
or
cmp
fdivs
inc
fsubl
push
stc
sbb
mov
dec
sti
and
and
pop
loop
sbb
sub
enter
fistpl
pop
and
add
inc
pop
imul
test
jno
dec
pusha
mov
pop
fldt
push
xor
roll
ja
insl
mov
or
jo
and
mov
imul
fistl
std
imul
push
or
and
ljmp
cmp
and
sub
sub
xor
and
ja
movsb
sub
pop
dec
outsb
or
insl
fdivrl
sub
add
dec
addr16
test
sub
sbb
pusha
push
cmp
rcr
inc
add
add
sbb
gs
fcmovnu
mov
pop
or
outsb
pop
and
jl,pt
pop
sub
inc
add
dec
pop
rcll
sbb
test
sub
adc
pcmpgtd
pop
sbb
popa
pop
mov
arpl
sbb
mov
xor
sbb
jmp
adc
fisttpll
jae
mov
or
cs
sbb
push
das
pop
sub
push
fldt
insl
mov
stos
das
mov
cmp
fwait
imul
lds
push
jl
xor
imul
sbb
mov
cld
sbb
lret
stc
aaa
sbb
gs
push
jno
bound
sbb
daa
fists
sub
pop
cltd
lret
xchg
cmp
sub
outsl
xchg
cs
daa
and
cmpb
outsb
test
mov
and
cmp
mov
pop
sub
push
jno
sub
pop
sti
aaa
cmpsl
mov
xor
cmp
inc
and
xchg
and
sub
sub
das
sub
sbb
in
xor
daa
push
pop
insl
xor
pop
int3
lret
jns
bound
sbb
in
mov
ja
cs
xor
insl
sub
loope
sbb
jb
or
arpl
sbb
jno
and
sub
pop
mov
outsl
scas
sbb
push
imul
dec
outsb
sub
popa
stc
pop
addr16
aad
dec
arpl
dec
mov
pop
cmp
fs
jl
js
inc
xlat
idivl
pop
jo
push
imul
insl
imul
inc
bound
push
insb
fdivrs
arpl
cmp
sti
adc
inc
imul
in
dec
and
bound
push
lea
or
sub
pop
aas
xchg
shrb
inc
imul
pop
mov
inc
out
cmp
ror
cld
sti
gs
clc
ja
gs
inc
pop
push
ss
xlat
data16
jae
cmp
dec
inc
sub
mov
subb
daa
lcall
pop
adc
arpl
insl
and
mov
pop
ds
pop
dec
ja
testl
mov
arpl
hlt
scas
test
jo
pop
cltd
add
xchg
pusha
dec
pop
ja
mov
insb
dec
jb
cltd
mov
xor
insl
dec
das
pop
push
mov
cmp
ret
mov
outsl
adc
fs
movsl
fisttpl
inc
clc
lds
cmp
xor
pop
fisubs
arpl
addr16
or
lock
xor
xor
inc
inc
cmp
inc
inc
push
inc
inc
dec
outsl
insl
hlt
dec
inc
dec
dec
outsl
push
push
push
push
push
push
pop
xor
insl
movsl
mov
fs
ja
rcll
pop
imulb
outsb
push
jae
jb
jb
cmp
push
inc
sub
outsb
dec
pop
cmp
push
popf
adc
rorb
push
jecxz
jp
pop
adc
inc
cmp
sub
outsl
push
jo
pop
insb
pusha
iret
adc
xorb
cmp
xor
ds
jmp
aas
inc
cmp
cmp
fcoml
inc
stc
ret
mov
add
popa
cmp
loope
imul
dec
jb
sub
and
mov
inc
cld
cmp
jae
jo
mov
les
cmp
pop
imul
pop
jne
rorl
cmp
jo
jne
mov
ds
inc
sub
imul
scas
sub
loop
jmp
mov
stos
popa
push
cwtl
pop
out
sti
or
mov
sti
add
incb
add
xorl
xchg
pop
jbe
adc
sbb
jle
or
xchg
and
dec
movsb
add
jle
shll
dec
cltd
mov
movsl
jp
sbb
adc
sub
je
ljmp
outsb
push
movsb
das
sub
andb
imul
in
mov
xchg
dec
push
mov
jae
arpl
roll
lds
dec
pop
loope
test
stc
stos
jnp
aam
insl
jno
outsl
sti
incl
dec
add
add
push
outsb
push
pop
xchg
arpl
xchg
jp
shrl
or
popa
inc
imul
jne
sti
iret
popa
adc
jmp
cmp
jno
jno
pusha
add
inc
addl
arpl
adc
sub
sub
dec
sbb
insb
sub
xchg
sub
out
in
sub
push
mov
insl
sub
mov
sub
add
and
je
jl
add
movsl
sub
pop
sub
das
adc
fnstsw
pushl
sub
push
sub
imul
xorl
sbb
mov
sub
loop
add
xor
sti
call
xchg
xor
xor
xor
icebp
pushl
and
xor
push
xor
jae
sahf
popf
xor
xor
fdivl
call
aas
xor
jae
test
xchg
xor
jmp
xor
xor
xor
xor
das
fidivs
xor
xor
xor
push
ljmp
mov
xor
xor
xor
sbb
xor
xor
incl
push
xor
xor
jb
xchg
xor
mov
shlb
ss
xor
xor
jmp
in
ss
xor
ss
xor
sub
push
xor
jbe
pushl
xor
mov
xor
outsl
ss
add
sbb
pop
push
xor
xor
jge
xor
xor
std
outsl
cmc
pushl
nop
cmp
fbstp
hlt
fidivl
pop
cmp
aaa
cmp
in
decl
push
xchg
xor
cmp
xor
cmp
jg
scas
aaa
mov
ss
aaa
int
into
cmp
aaa
cmp
aaa
repnz
cmp
fistpl
add
or
cmp
dec
xor
outsl
adc
jns
jle
xchg
xor
lods
cmp
bound
inc
ss
cmpb
cmp
ljmp
cmp
jg
pushf
aaa
sahf
cmp
cmp
aaa
fidivrl
cmp
sbb
neg
loop
stos
cmp
lret
sub
fldcw
lock
jg
ljmp
cmp
dec
sub
das
ds
cs
push
xor
test
das
add
sbb
dec
das
pusha
sub
xor
xor
ljmp
cmc
and
mov
xor
xor
xor
xor
das
add
xor
pop
pushl
daa
xor
push
xor
outsl
xor
xorl
xor
mov
mov
xor
xor
xor
xor
inc
xor
arpl
pop
mov
inc
lcall
aam
fdivl
andl
xor
xor
inc
xor
xorl
das
cld
xor
loopne
aaa
out
or
cmp
ss
mov
jmp
cmp
sahf
cmp
cmp
cmp
cmp
aaa
adc
mov
adc
outsl
xchg
sub
cs
pop
cs
sub
scas
sub
cs
sub
cld
sub
in
sub
sub
arpl
sub
xor
lea
aam
inc
inc
sub
ja
pop
call
das
mov
fisttpll
js
lcall
xor
xor
cs
push
xor
repz
xor
fiadds
xor
xor
cmpsl
das
cmp
sbb
ja
pop
xor
xor
mov
sti
mov
scas
xor
xor
mov
xchg
xor
ret
stc
in
sbb
xor
xor
xchg
xor
into
ss
das
cld
loop
add
push
cmp
aaa
push
ss
jge
xor
in
ss
xor
cmp
xor
xor
cmp
mov
mov
pop
cmp
js
aaa
mov
dec
cmp
aaa
divl
cmp
aaa
fildll
xchg
nopl
divb
push
cld
cmp
jle
xorl
cmp
push
stos
cmp
cmp
aaa
in
inc
lcall
xor
sbb
and
inc
cmp
fdivrl
loope
add
or
cmp
cmp
cmp
push
cmp
incl
sub
sub
mov
sub
sub
sub
or
and
sahf
inc
sub
xchg
in
sub
pop
lock
mov
xor
sub
enter
pop
mov
mov
mov
xor
in
decl
lret
xor
das
adc
xor
xor
xor
jge
mov
sbb
xor
cmp
dec
test
push
xor
xor
arpl
sub
fbstp
push
or
ss
sbb
xor
xor
cli
push
cmp
xor
xor
ss
ss
push
fsubs
movsl
xor
outsl
xor
adc
pop
cmp
ret
aaa
cmpsl
mov
lock
xor
cmp
or
inc
ljmp
std
sbb
pop
cmp
ss
cmp
cwtl
xor
jno
stos
cmp
outsl
icebp
dec
cmp
jns
cmp
cmp
pop
scas
in
in
aaa
adc
adc
and
cmp
push
cmp
jge
test
movsl
call
lods
cmp
cmp
cmp
cmp
and
cmp
outsl
cli
filds
lahf
cmp
cmp
cmp
dec
stos
jg
stos
clc
add
or
sub
sub
push
subl
sub
fwait
inc
sub
sub
sub
sub
sub
ja
jle
jmp
scas
sub
shrl
int
out
and
jmp
jmp
pop
sub
xor
ja
xor
cs
ljmp
mov
xchg
jg
xchg
xor
xor
xorl
fwait
xor
das
mov
scas
inc
xor
fbld
clc
jg
pushl
add
add
inc
xor
xor
or
test
ss
jmp
xchg
jne
xor
ds
cmp
pop
pop
pop
jg
jg
pop
xor
sub
inc
xor
das
pop
xor
xor
jg
cmpsb
xor
das
xchg
cltd
xor
xor
lret
jle
sarb
xor
xchg
xor
push
aaa
inc
xor
inc
pop
mov
and
in
xor
dec
imul
ja
pop
xor
dec
ss
xorl
mov
xor
xor
ss
adc
adc
sub
dec
rcll
xchg
std
xor
lds
or
jmp
ss
lock
add
mov
sub
or
cmp
cmp
movsl
ss
mov
loopne
loopne
sti
ljmp
cmp
ss
cmp
pop
daa
cmp
decl
cld
pop
loope
dec
aaa
addr16
cmp
fbstp
or
das
cmp
aaa
jo
cmp
push
adc
jb
mov
mov
mov
fdivrs
out
xor
mov
sbb
jnp,pn
outsl
cli
ljmp
insl
das
jne
subl
sub
shrl
testl
mov
add
jbe,pn
xor
mov
std
ljmp
sbb
add
cs
jg
add
add
push
dec
inc
inc
inc
outsl
ja
insb
outsl
popa
or
mov
sbb
push
dec
dec
or
lods
inc
mov
jg
js
ja
xchg
dec
imul
push
imul
fs
xor
gs
insb
dec
outsl
push
dec
insl
sbb
testb
arpl
addr16
cs
iret
fistpl
sub
imul
arpl
fs
mulb
and
jo
jae
arpl
arpl
imul
dec
and
jae
cmp
bound
mov
outsb
xor
jo
pop
fs
pop
mov
pop
push
or
mov
pop
shll
pop
jns
popa
aas
sti
adc
push
jb
jns
xor
xor
pop
stos
std
and
fcompl
outsb
outsl
sub
out
or
jne
js
and
lahf
or
inc
add
xor
jnp
or
in
mov
sub
mov
and
jbe
dec
popa
dec
push
jg
negl
test
ja
outsb
imul
adc
push
bound
fildl
inc
inc
adc
ret
addr16
insb
gs
jmp
bound
jo
out
incb
jne
popa
push
ds
pop
inc
js
adc
sti
fldl
gs
sahf
jo
adc
insb
loope
inc
inc
fs
imul
outsb
andl
jne
dec
enter
scas
fisttpll
ret
push
roll
inc
inc
cmp
jge
je
dec
lods
inc
jb
jnp
mov
adc
lods
outsl
sub
mov
fcomp
cmp
push
or
inc
xchg
mov
insl
popa
dec
pcmpeqw
mov
out
sbb
dec
jae
xor
jae
mov
jb
movd
mov
fdivrs
jae
xchg
insb
fildl
jbe
inc
jmp
outsl
dec
clc
fidivrs
push
and
fs
daa
push
sti
imul
pop
jnp
insb
sti
imul
dec
insl
mov
push
pop
xor
outsl
xorl
imul
incl
jp
push
data16
push
cmp
dec
xor
cmp
clc
out
adc
xor
xor
xor
xor
adc
jbe
adc
push
inc
xor
mov
add
mov
add
ja
outsl
add
aas
cmc
adc
jmp
add
add
frstor
out
lcall
pusha
inc
repz
add
sbb
mov
stos
cmc
pop
push
inc
pop
psubd
and
inc
outsl
movmskps
cmp
push
push
xchg
das
mov
frstor
mov
sub
mov
add
fidivs
add
mov
or
sar
sub
adc
mov
add
and
push
sub
mov
mov
repz
stos
pop
js
cmp
popf
xor
pop
dec
pop
jmp
dec
sub
cmc
dec
addr16
add
aas
flds
sub
sbbl
cmc
xchg
cmovg
mov
pop
je
incl
xchg
xor
stos
push
xchg
bound
pop
cmpsb
pop
pop
xor
push
dec
mov
mov
scas
or
jg
stos
sbb
xchg
cmp
add
and
addl
sub
add
add
mov
add
pop
push
add
push
push
add
and
inc
pusha
inc
add
call
add
rolb
nop
add
add
and
sub
sub
cltd
shlb
jns
add
aas
repz
push
sbb
adc
xchg
add
add
jg
sub
test
add
mov
add
outsl
adc
inc
add
add
jb
jbe
add
xchg
jle
add
add
add
add
pop
add
mov
xor
sub
push
ljmp
dec
out
fidivl
sub
imul
imul
dec
pushw
push
inc
insb
jne
push
cmp
gs
push
imul
mov
jo
insb
outsl
jae
dec
popa
outsb
fs
inc
je
jb
bound
jae
outsl
jbe
std
testb
and
jo
dec
popa
insl
inc
inc
gs
xchg
lods
or
jb
test
mulb
stos
and
cmp
outsb
or
fcomps
jne
outsl
dec
jae
stos
loop
add
jo
outsb
outsw
adc
fstpl
add
xchg
mov
pushf
insb
adc
adc
inc
mov
xchg
push
jns
and
gs
in
fistpl
jnp
push
xchg
jae
outsl
outsb
mov
sbb
fs
dec
insl
mov
pop
sbb
jns
jns
lret
fisubrs
dec
je
adc
push
cld
sub
icebp
gs
outsl
outsl
insb
lds
insb
aaa
mov
xor
jo
outsl
je
inc
enter
inc
xor
test
push
xor
inc
faddp
add
imul
dec
bound
sbb
test
mov
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
sti
mov
mov
decl
or
and
jg
mov
add
mov
jp
call
and
pushl
push
sbb
ljmp
or
repz
and
mov
inc
sub
push
push
jns
aaa
xor
outsl
dec
out
ud0
inc
xchg
fcmovnu
mov
sbb
xchg
sbb
dec
mov
fnstenv
xor
fnstenv
ud0
push
or
icebp
adc
add
insl
fnstenv
push
test
lret
mov
es
pop
push
push
fistl
add
out
movsl
dec
mov
insl
fcomi
insl
mov
adc
or
push
mov
pop
mov
sar
or
out
mov
push
insl
fstpt
add
mov
in
xor
pop
jbe
or
jno
jo
gs
jo
pop
mov
inc
jb
adc
negb
and
je
wbinvd
pop
insw
and
lods
mov
icebp
pusha
lea
push
sub
ds
fbld
mov
mov
add
ja
sub
arpl
mov
pop
arpl
je
subb
insl
mov
push
xchg
or
insb
or
aas
ficomps
insl
bound
scas
ja
or
out
leave
gs
push
sbb
outsb
arpl
sbb
inc
inc
js
inc
jb
dec
aam
jnp
jmp
jo
outsb
je
je
insl
mov
mov
jae
sbb
ret
inc
insl
sbb
inc
outsb
add
or
inc
adc
hlt
lcall
mov
insl
dec
out
cld
or
out
inc
aaa
jne
cmp
sbb
mov
or
fs
pop
fwait
sbb
cmp
jae
gs
stos
inc
or
aaa
jmp
inc
ds
push
outsl
mov
wbinvd
or
mov
pushf
adc
shrb
xor
mov
ja
lret
push
gs
fisubrs
inc
sbb
ja
ret
push
outsb
or
jo
inc
or
ss
push
bound
fstl
jnp
jg
imul
outsl
mov
dec
add
add
pop
ja
cmp
mov
push
mov
fldl
cli
and
add
add
mov
addr16
adc
add
pop
sub
das
adc
leave
push
testb
push
aaa
test
outsl
jns
inc
js
mov
popa
mov
push
cs
ds
js
mov
nop
xor
repz
jb
popa
push
in
cmp
add
cs
jl
loopne
pop
out
fistl
or
mov
jae
dec
sbb
add
add
inc
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
