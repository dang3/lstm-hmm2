mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
sub
inc
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
ljmp
push
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
sbb
lret
clc
sub
nop
mov
jmp
and
pop
add
adc
stos
int
mov
xchg
sbb
xlat
xchg
cld
push
cwtl
sub
mov
push
mov
dec
sub
cs
das
jnp
dec
push
jns
lea
xor
popa
xorl
das
inc
sbb
dec
push
dec
imul
notl
je
mov
mov
enter
jo
adc
insb
fcos
mov
test
cmpb
jne
adc
adc
mov
push
adc
int
pop
push
pop
mov
sbb
icebp
adc
inc
and
std
push
lods
fldcw
push
leave
push
sub
mov
das
icebp
push
mov
inc
int3
lcall
lds
adc
push
cmpsb
sbb
clc
dec
push
sbb
out
loopne
test
jecxz
lcall
cs
add
or
adcb
sbb
mov
jne
loopne
fwait
xor
xor
sbb
movsl
adc
shrl
cmp
pop
mov
lcall
mov
fcmovnb
push
push
pop
ret
add
mov
ret
or
mov
and
mov
jp
lcall
fstp
insl
inc
sbb
push
or
sub
mov
mov
push
mov
xor
cmp
xor
inc
inc
cmp
xor
fdivl
add
sub
inc
repz
xchg
jge
adc
sbb
aad
cmp
xor
add
inc
incl
lea
xchg
push
push
or
xor
push
push
gs
mov
mov
pop
push
bound
push
pusha
push
adc
adc
insb
push
or
xor
or
push
cmp
sbb
cmp
add
push
and
lock
pmaxub
adc
lret
add
psubusw
mov
xor
dec
lret
mov
in
add
or
mov
lret
add
repz
hlt
mov
cmp
jae
pushf
push
or
incb
jae
cmp
mov
insb
rolb
or
lcall
cs
mov
aas
sbb
push
push
dec
ret
xlat
fs
jl
cwtl
int
lock
cmp
push
mov
frstor
iret
dec
inc
push
adc
movsb
out
rcll
in
sub
push
pushf
push
xchg
sbb
mov
jmp
push
xor
mov
cli
mov
arpl
cld
lret
mov
inc
in
or
xor
pushl
repz
push
add
cmpb
jne
test
jle
push
insl
out
insl
jnp
jns
add
les
call
out
or
jmp
std
rorl
leave
mov
and
mov
jmp
mov
sbb
or
sbb
sub
fwait
inc
mov
cmp
hlt
sbb
shl
lret
pop
sarl
mull
ja
mov
pop
cmp
int
jb
pop
mov
sub
bound
xchg
shrl
push
adc
sarl
iret
push
lret
push
sbbl
rclb
cwtl
dec
sbb
mov
inc
aaa
sbb
fisubs
cmp
adc
sbbl
call
push
push
push
lea
push
mov
loopne
gs
jl
pusha
lcall
insl
fcomps
jmp
mov
push
xchg
fists
rep
mov
leave
ds
xchg
xchg
adc
or
and
addr16
jmp
fimuls
out
and
mov
ret
sbbl
mov
cmp
loope
lea
cmp
mov
mov
rcrb
lods
stc
jo
mul
movsl
or
mov
sub
sbb
xor
push
iret
and
pop
and
lods
pop
dec
sbb
cmp
inc
addr16
xchg
mov
or
lods
or
dec
lcall
xor
adc
mov
or
sbb
leave
into
or
sbb
add
cs
push
and
sbb
imul
sbb
xor
push
push
pop
push
jnp
lock
or
faddl
adc
es
lcall
xchg
push
mov
or
int
xchg
inc
daa
fisttpl
push
imul
sub
sbb
mov
lret
add
pop
movsb
jbe
push
jl
or
xor
push
push
add
in
rcrl
adc
and
xor
test
subb
mov
xor
xor
cmp
jae
insl
adc
or
xor
ss
xlat
mov
adc
adc
je
leave
out
xor
xor
sbb
aaa
int
ja
mov
pop
and
add
data16
mov
inc
cmc
out
stos
jae
push
jg
sbb
add
out
add
or
mov
push
push
and
push
and
or
iret
pushf
nop
dec
xor
int3
inc
cwtl
inc
nop
pop
addb
pop
mov
jmp
iret
xor
mov
mov
movb
pop
rorl
sbb
lock
adc
vpaddusb
orb
nop
xchg
add
adc
mov
shll
test
test
push
mov
pop
jle
push
cmp
jne
mov
cmp
lods
sbb
fwait
js
mov
insb
and
lods
sub
dec
js
jae
adc
or
xchg
xchg
push
adcl
lock
sub
fdivrl
pop
or
xor
xchg
sub
cmp
sbb
repz
pushf
add
and
cmp
lcall
movl
mov
pusha
inc
sbb
adc
in
mov
aas
clc
mov
push
or
push
jae
inc
popa
pusha
mov
inc
int3
mov
lret
dec
in
mov
jge
adc
sahf
aad
icebp
fs
inc
gs
out
sbb
or
je
call
sbb
push
js
inc
int
das
ret
repnz
sbb
test
sbb
mov
jmp
adc
add
shll
ds
int
dec
and
adcb
pusha
mov
mov
jo
dec
push
dec
orb
mov
inc
dec
push
pop
js
bound
pop
sub
mull
jb
gs
jg
mov
pushf
mov
mov
ret
out
shl
jle
mov
adc
test
shlb
adc
push
pusha
js
lea
std
adc
dec
push
push
and
adc
sub
jp
sbb
lret
out
push
mov
and
cmc
adc
xorl
mov
push
mov
adc
sti
int3
fs
roll
jg
int
add
cmpsb
jo
and
pop
or
cmp
dec
and
test
sbb
fistl
call
push
in
push
lret
xor
repz
dec
push
add
div
test
adc
loopne
adc
shrl
inc
cltd
sub
fs
out
sbb
or
test
mov
sti
ja
sahf
movsb
sbb
test
pop
fs
mov
dec
dec
adc
ret
lods
cmp
movups
mov
or
bound
mov
xor
adc
cmp
mov
cmpsl
push
test
sbb
adc
add
sbbl
mov
lahf
movsl
fs
mov
into
dec
fwait
pusha
sbb
movb
xor
rol
push
insb
inc
fwait
xchg
sub
mov
and
loopne
xchg
addr16
and
sbb
sbb
in
or
addl
pop
adc
or
jl
push
add
inc
leave
xor
cmp
fildll
sbb
jns
dec
hlt
or
inc
repnz
cld
int
data16
add
dec
loope
pop
adc
push
mov
add
gs
cmp
mov
sbb
jns
xor
xor
out
add
dec
lock
subb
pop
and
jo
into
xor
push
frstor
jp
and
das
push
add
insb
add
in
les
into
js
sarb
notb
jo
push
nop
jns
or
ljmp
lcall
adc
scas
add
add
or
push
mov
dec
roll
call
loopne
adc
shlb
pop
lods
push
lods
call
add
jle
data16
sub
sbb
fs
aam
push
push
mov
sbb
xchg
in
das
and
xchg
or
push
prefetchnta
mov
insb
divb
xor
arpl
sub
mov
xchg
in
push
ret
add
prefetch
pop
mov
dec
push
shll
subb
sti
push
lods
shr
jbe
adc
cmp
lret
out
add
repz
xor
insb
mov
insl
and
test
movb
ret
push
mov
push
mov
fs
ficoml
popa
push
mov
and
sub
mov
pmuludq
or
or
mov
add
jp
inc
outsb
mov
jnp
mov
push
push
cmpxchg
int
sub
adc
pop
stos
push
movsb
lcall
aas
sbb
sbb
add
aam
add
mov
push
sbb
sbb
cmp
test
je
arpl
push
xchg
bound
arpl
mov
std
add
xor
jae
or
jne
push
clc
in
decl
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
add
mov
in
inc
cmp
jg
arpl
push
or
lods
cld
add
addr16
and
xchg
xchg
ror
xchg
mov
xchg
enter
mov
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
lahf
iret
xchg
xchg
add
cld
inc
clc
inc
rolb
jl
test
inc
mov
inc
enter
xchg
cwtl
pushf
mov
movsb
test
mov
enter
mov
xchg
xchg
xchg
enter
arpl
in
adc
and
in
lock
sub
lods
fcom
cmp
movsl
stos
push
pop
sub
inc
pop
ret
push
sbbb
mov
cmp
ret
mov
mov
cmpsl
pop
add
ret
insb
add
or
xor
add
add
andl
push
xor
mov
lcall
inc
orl
les
inc
dec
mov
mov
mov
jae
lahf
les
and
ja
bound
sbb
push
cmp
mov
movsl
testb
add
pushf
push
pop
rolb
add
or
or
mov
out
pushl
mov
cmpb
jne
inc
or
add
or
pop
in
and
aam
dec
movsb
sti
dec
pop
push
cld
inc
testb
in
movzwl
jmp
sub
jns
jbe
jmp
push
pop
pusha
push
push
and
jne
xlat
push
imul
in
mov
mov
ret
or
inc
pop
mov
test
pop
js
arpl
add
xchg
stc
fisubrl
push
ret
lock
inc
lahf
adc
imul
adc
sub
test
mov
mov
mov
push
and
pop
fsubr
xor
jo
or
cltd
popa
jb
mov
inc
into
icebp
cmpsb
clc
lea
adc
mov
in
and
int3
add
or
outsl
sahf
rcrb
dec
faddl
or
xor
cld
sbb
and
pop
xchg
jg
nop
sbb
add
dec
shll
dec
add
pop
fnstenvs
dec
js
shll
xchg
test
lret
fnstenvs
lcall
cmpsb
imul
dec
push
inc
dec
jnp
xchg
fstpt
mov
push
add
adc
pop
or
mov
or
sbb
movsl
leave
adc
mov
push
lea
or
in
imul
inc
add
mov
mov
ss
jp
nop
xor
adc
add
jmp
insl
sbb
comiss
repz
sub
pop
sub
adc
aaa
inc
out
mov
out
movhps
xlat
mov
pop
sbb
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
jne
shll
orl
test
pop
mov
mov
xlat
cltd
pop
cmpsb
pop
push
push
addr16
mov
xlat
xor
mov
adc
scas
imul
adcl
push
rcl
jne
fsqrt
or
jge
pop
dec
mov
fimull
xor
enter
xchg
dec
shll
push
dec
inc
xor
dec
into
les
dec
mov
in
add
adc
cltd
cmpsb
sbb
add
and
adc
hlt
dec
inc
add
dec
shll
add
xor
pop
dec
or
sub
cmp
inc
shll
xor
and
inc
cmp
rolb
inc
adc
pop
inc
loope
enter
or
xchg
xor
sbb
add
rolb
bound
cmpsb
imul
dec
xlat
sub
rclb
cmp
add
xor
shll
sbb
or
jne
xlat
jo
add
jnp
add
dec
shll
ror
xor
shll
sarb
shrl
and
jbe
inc
pop
rclb
and
and
and
jae
lock
and
repnz
das
mov
dec
xor
sbb
das
inc
xor
and
aas
xor
sub
cmpsb
imul
xlat
xor
cmpsb
add
xor
repnz
dec
mov
mov
xor
loopne
je
shll
into
enter
cmpsb
imul
lcallw
and
stos
add
or
push
xor
add
add
xchg
sbb
inc
jecxz
push
and
cltd
loopne
sub
xor
push
and
nop
andl
and
in
mov
rorb
jns
scas
es
push
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
pushf
leave
xor
add
inc
popa
das
add
push
dec
xor
cs
insb
jg
xor
and
pop
testb
sbb
push
or
sar
adc
push
xchg
inc
push
mov
std
stc
cli
cld
idiv
std
enter
add
clc
cmp
stc
sti
pop
loop
push
out
or
or
mov
pop
mov
dec
inc
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
jbe
aas
dec
dec
sbb
pop
bound
call
push
sbb
dec
push
cs
cltd
dec
xor
dec
xor
sub
cmp
aam
cmp
stc
out
mov
xor
xor
daa
xor
inc
cwtl
dec
out
outsl
mov
dec
push
cs
cltd
ret
sete
stc
cmpsb
imul
push
neg
push
cltd
mov
stc
std
xchg
xchg
mov
adc
cld
add
daa
dec
cltd
push
int
xor
mov
or
in
subl
or
negb
stc
or
ja
or
leave
or
imul
sti
std
sbbl
dec
xchg
std
sbb
or
add
jmp
outsb
pusha
je
mov
dec
inc
inc
fldt
movsb
push
daa
insb
pop
pop
imul
movsb
imul
pop
cmp
pop
sti
cmpl
add
mov
imul
pop
fildl
shrb
daa
push
push
out
or
mov
dec
push
dec
addb
inc
stc
push
stc
jo
pop
cmp
add
in
inc
in
fsubrl
stc
jp
es
add
ret
cld
daa
cli
adc
cmp
jle
cli
fldt
mov
and
sub
pop
lds
mov
test
fdiv
addl
aas
notl
cli
loopne
pop
jmp
inc
xrelease
jnp
push
cmc
push
mov
call
pop
xchg
notb
insb
mull
cmc
add
lahf
push
push
rol
mov
clc
decl
jmp
add
mov
dec
push
mov
xchg
pop
clc
dec
jle
and
xor
and
outsl
mov
jo
sbb
mov
loop
sbb
insl
idiv
dec
or
cmc
add
jecxz
mov
jo
fs
jnp
in
jg
std
hlt
add
sti
or
pop
clc
or
and
aad
ljmp
pop
sarl
inc
xchg
test
push
mov
dec
cli
adc
fbstp
xor
push
outsl
sbb
push
cld
push
cmp
jle
add
jnp
test
lahf
loopne
pop
add
cli
out
ss
mov
adc
pop
sub
pop
or
xchg
sbb
dec
cli
adc
pop
sbb
lret
in
jge
mov
sub
test
in
sbb
enter
out
inc
fstpt
push
insl
sbb
mov
jl
cltd
mov
addb
push
loop
es
std
repnz
vmovhpd
jmp
inc
add
add
idiv
std
dec
arpl
in
or
mov
cld
dec
push
xchg
mov
dec
sbb
mulb
testl
push
or
mov
mov
mulb
mov
outsl
out
out
test
jg
cli
pop
inc
dec
push
cld
negb
dec
arpl
in
xorl
lock
clc
ljmp
xor
cli
or
pop
cmpl
test
add
cld
arpl
ja
push
pusha
pop
jge
dec
dec
in
jnp
pop
xchg
aad
ja
stc
or
pop
mov
out
jecxz
push
loopne
add
loopne
orl
insb
test
cmpl
lock
insl
clc
gs
push
pop
les
push
loope
add
out
js
or
loope
sub
jl
repz
in
js
mov
popa
push
inc
pop
push
jge
push
or
xchg
jg
dec
fsubrs
sbb
mov
cmpsb
test
movsl
movsl
data16
pop
push
loopne
inc
ss
std
jg
push
or
add
sub
aaa
aaa
ja
xor
inc
fstpt
dec
jecxz
inc
mov
add
in
jle
out
pop
xchg
ss
icebp
dec
loop
inc
arpl
out
out
sti
outsl
icebp
fstpt
sub
xlat
fsubrs
push
call
or
lods
xchg
movsl
cli
int
insb
push
cli
push
mov
repnz
in
inc
std
idiv
or
inc
add
cli
jae
inc
in
inc
mov
jge
inc
mov
sbb
xor
ljmp
ja
cmp
dec
pusha
fprem
add
jecxz
cmp
dec
mov
divl
out
inc
pop
mov
xor
mov
sbb
call
jecxz
in
cld
sbb
pop
cmpsl
jle
or
mov
movsl
icebp
cmpsl
push
mov
imul
stos
pop
std
popa
push
in
mov
call
gs
xlat
fildl
in
sbb
int
pop
cmp
repnz
mov
xchg
cmpb
sti
mov
inc
or
or
mov
std
xor
dec
and
xchg
adc
adcl
inc
lock
pcmpgtb
dec
mov
cmpl
ret
ds
ret
xor
ret
cli
mov
inc
jno
popa
cmp
notl
jecxz
arpl
std
std
or
popa
add
lcall
mov
inc
jmp
roll
roll
les
das
xchg
lret
in
icebp
dec
in
pop
in
dec
out
incb
pop
cmp
jb
arpl
std
jno
xor
inc
hlt
popa
jmp
lret
testl
mov
cmp
cld
add
shll
data16
lock
dec
lock
lock
repnz
hlt
loope
aaa
add
insl
or
sbb
sar
mov
xchg
loope
pop
ljmp
out
add
xchg
lret
in
xchg
xor
jle
mov
arpl
jb
pop
in
popa
ljmp
icebp
inc
iret
and
cli
pop
xchg
fcmovnu
lock
dec
gs
xchg
or
out
call
cs
jmp
call
push
popa
sub
insl
pop
sahf
mov
int
pop
cli
pop
out
js
icebp
stc
dec
gs
pop
outsb
mov
bound
dec
dec
stc
xor
mov
out
or
stc
add
dec
roll
out
mov
sbb
push
xchg
arpl
jl
and
pop
jnp
sti
jp
out
idivl
in
inc
arpl
mov
jb
fnstsw
enter
out
in
call
in
xchg
jnp
jmp
pop
scas
cld
jg
mov
sub
out
jno
popa
orl
addr16
sti
jg
dec
cmp
xchg
or
push
out
mov
mov
pushl
shlb
dec
dec
test
push
push
je
add
je
sti
mov
movl
clc
cld
in
add
and
leave
in
add
lahf
decl
xchg
test
pop
push
pop
xchg
mov
or
push
bound
ljmp
imull
mov
jg
or
ja
push
dec
cmp
jle
mov
pop
divl
cmc
popf
decl
add
jmp
orb
les
incb
inc
push
insl
xor
sti
dec
xchg
lock
jo
dec
loope
cmp
flds
cmpl
pop
out
mov
fisttps
addr16
pop
dec
incl
outsl
xchg
cld
ret
mov
test
inc
ret
and
sbb
fbld
cld
addr16
pop
repz
test
fwait
pop
outsl
ja
out
js
add
ror
inc
add
push
clc
rorl
jbe
jmp
and
in
add
inc
std
fldt
mov
push
loop
aas
cwtl
les
add
cmp
das
mov
mov
daa
mov
cmp
push
xor
sarl
ss
mov
jle
outsl
dec
adcb
pop
jmp
mull
push
or
out
insb
cmp
add
cmp
pop
mov
jg
cmpsl
addr16
cmp
outsl
add
aaa
dec
jae
pop
jl
jle
add
inc
push
mov
xor
pop
adc
mov
adc
shl
cs
mov
cld
icebp
aaa
lock
mov
pop
jl
inc
push
jb
cmp
lds
dec
inc
or
incl
or
jl
jns
divb
orl
sti
fiaddl
sbb
mov
cld
aaa
lret
outsb
push
dec
push
fistpll
std
cmc
pop
push
push
mov
idivl
mov
adc
sub
std
push
js
loope
jnp
dec
push
push
pop
jae
aad
cli
sub
sbb
xchg
ss
daa
mov
outsb
aad
and
cli
aad
mov
pop
mov
pop
xchg
xor
movzwl
test
jnp
cmp
or
ja
fsts
xor
divb
addb
das
cmp
repz
dec
fnstsw
popf
add
jl
pop
fcompl
pop
adc
jno
push
push
sti
sub
pop
cld
iret
bound
mov
ret
pop
sbb
adc
jae
adc
ds
mov
or
mov
neg
ss
adc
dec
call
das
addl
pop
add
inc
aas
and
cld
insl
push
psubq
sbb
addl
push
inc
arpl
mov
xchg
mov
push
mov
sar
add
fisttpll
daa
dec
out
dec
stc
xor
pop
clc
lods
loopne
loopne
cmp
mov
sbb
dec
clc
outsb
pop
adc
xchg
test
out
jle
pop
push
pop
pop
inc
mov
dec
xor
aam
call
test
outsb
push
fwait
push
add
out
lret
sub
pusha
arpl
addl
mov
push
sub
aam
por
aad
cmp
push
imul
xor
mov
add
inc
push
dec
gs
lahf
cmp
sub
cs
xchg
jg
mov
divl
in
cli
push
pop
pop
xchg
mov
push
std
pop
aas
cmp
scas
pop
xlat
insb
push
push
push
add
fistpll
incl
sbbb
add
clc
clc
stc
mov
lock
test
dec
ret
mov
dec
xchg
test
add
outsl
in
sub
std
loop
mov
mov
cmp
pop
incl
hlt
aaa
stc
fnsave
lds
jo
xorb
in
fdivl
arpl
pop
mov
sbb
fisubrl
cmpl
push
loope
dec
dec
dec
push
dec
lcall
test
daa
mov
jnp
test
xchg
cmp
outsl
cld
call
test
xchg
xchg
xor
or
xorl
loopne
jno
loop
jle
add
sbb
stos
xor
push
push
dec
push
outsl
dec
cmc
add
icebp
imul
pop
out
subb
lret
cmc
outsb
sub
pshufw
scas
mov
insl
out
std
xchg
lds
pop
call
test
mov
outsb
cmp
push
mov
dec
pop
cmp
jo
pop
outsb
add
dec
popl
push
dec
jnp
pop
sbb
pop
ret
pop
cld
inc
in
mov
cmp
out
insl
jl
idiv
jno
movsb
lock
mov
adc
mov
pop
adc
cwtl
xchg
mov
aaa
dec
jb
inc
push
sti
pushf
pop
push
add
ss
sbb
outsl
cmp
loop
fcomip
outsl
mov
imul
cwtl
mov
push
xor
xchg
insb
fisttpll
ja
cmpb
cmp
push
addl
add
ljmp
add
out
xor
or
xchg
pop
or
or
push
icebp
or
jecxz
cli
push
inc
or
fisubrl
push
xchg
mov
pop
fucomp
cmp
imul
dec
push
cld
jmp
push
in
adc
test
push
loopne
mov
inc
add
add
add
dec
mov
mov
pop
mov
dec
test
fistpll
adcl
out
call
test
popf
scas
mov
loop
je
push
jecxz
loope
mov
mov
out
xchg
xor
jno
test
lret
test
ss
ljmp
jecxz
fbstp
jp
pop
pop
cmpsl
pop
mov
jle
xchg
cmp
ss
movsl
imulb
xchg
jb
or
add
jmp
addl
mov
std
insl
imul
dec
add
test
mov
cmp
mov
out
addl
jae
jno
xor
or
add
call
or
xor
dec
roll
xchg
mov
push
sbb
sti
xchg
setg
xor
divb
out
xor
xor
subl
test
mov
fisttpl
push
in
xor
mov
xor
push
fildll
add
fnstcw
lret
xchg
or
loop
adc
add
mov
shrl
rclb
or
dec
fildll
pop
stos
cwtl
or
push
or
ss
insl
inc
test
sbbb
lock
xchg
mov
or
add
call
divl
ja
xor
sub
mov
push
xorb
inc
fsubl
or
lds
adc
mov
rolb
cmp
inc
addl
in
pop
or
cs
xorb
jno
test
cmp
or
hlt
jg
pop
es
loope
mov
decb
test
inc
add
xchg
sbb
mov
pop
adc
outsl
in
test
test
push
xchg
dec
ds
leave
loopne
jecxz
je
cmc
mov
mov
popl
ret
test
stc
jno
fisttps
call
imul
xchg
pop
cld
lret
pop
sbb
lret
mov
test
sbb
mov
mov
enter
jne
out
mov
cmpl
xchg
rorb
stc
adc
cld
mov
scas
push
xlat
jo
loope
xor
push
pop
xchg
pop
jns
push
ja
jo
pop
insb
stc
ret
dec
and
or
or
adc
lock
sbb
jecxz
inc
sti
fneni(8087
clc
mov
sub
pop
sbb
js
sti
outsb
fnsave
cmp
and
mov
gs
mov
fadds
jmp
sbb
lds
pop
shrl
cmc
sbb
jo
subb
xchg
pushf
mov
icebp
aaa
jo
test
push
jge
mov
mov
cli
adc
pop
fsubrl
rcr
and
push
xchg
xor
xor
popa
sbb
shll
imul
push
loop
mov
pop
pop
inc
push
cld
push
pop
push
fnstcw
push
and
pop
ljmp
and
fcmovb
ljmp
stc
adc
cld
xorb
mov
test
les
inc
add
rorb
or
xchg
and
add
outsl
adc
ret
repnz
cmp
cmp
jo
xorb
shl
ret
mov
std
or
add
cmp
xchg
xor
aad
aas
and
jae
pop
test
mov
mov
dec
incb
mov
mov
lds
sbb
and
jecxz
pop
lret
cmp
mov
imul
xchg
jmp
mov
fstpt
aas
mov
std
mov
inc
cmp
jnp
sbb
imulb
loopne
pop
out
push
mov
sbb
outsl
stos
xor
je
lods
insb
mulb
push
in
cli
iret
mov
push
cld
mov
dec
jp
cld
jecxz
imull
jl
pop
xchg
sbb
ret
mov
xor
or
xorl
in
ja
mov
pop
test
shrb
mov
insl
std
push
invd
ss
add
sti
cmp
lock
rcll
cmp
mov
sub
adc
arpl
outsl
push
xchg
jb
and
xor
popa
push
jg
insl
call
enter
mov
clc
xchg
add
aas
add
sub
jmp
imul
mov
test
cld
add
pop
cmp
jo
addb
inc
mov
insb
jp
or
das
in
push
or
insb
or
subl
sub
jmp
adc
push
dec
lcall
outsb
fdivrs
scas
fildl
jmp
mov
fmuls
cld
push
jp
clc
jo
cmc
lock
xlat
lods
cmp
movsl
cmp
xchg
fdivrs
int
or
insb
bnd
mov
jo
daa
in
mov
notl
dec
test
pop
mov
pop
mov
je
arpl
mov
mov
je
bswap
lds
mov
fiaddl
and
jne
je
fldcw
inc
repnz
adc
ret
cmp
decl
pop
jbe
es
es
push
repnz
sbb
pop
fidivrl
rorl
imul
std
mov
in
add
daa
stc
jo
dec
push
push
testl
jno
mov
add
repz
cli
adc
inc
mov
mov
or
in
icebp
push
mov
mov
ds
popa
mov
test
test
push
cld
mov
jno
sbbl
lahf
add
idiv
int3
fs
scas
cli
rorb
test
jle
mov
jp
and
jge
add
push
call
testb
xchg
mov
mov
mov
lret
mov
push
mov
jnp
mov
inc
mov
dec
xchg
xchg
inc
mov
ja
lods
xorl
jo
xchg
pop
mov
inc
xchg
lret
push
ja
testl
pushf
pop
jmp
cmpl
shrl
mov
dec
push
mulb
inc
test
or
add
test
out
cmc
in
mov
cld
push
and
xchg
sbb
std
xchg
cli
adc
in
mov
push
dec
popa
fsubrs
cmc
xor
movsl
ds
sub
ds
mov
push
aas
out
scas
ret
iret
adc
cmp
push
sbb
pop
xchg
loope,pt
daa
cmc
push
push
push
gs
add
into
mov
hlt
std
push
dec
arpl
and
jnp
shlb
add
push
and
dec
or
jmp
xor
popa
lds
pop
pop
test
push
mov
popa
xchg
ret
xor
xlat
mov
dec
dec
push
lahf
in
aad
sti
int
in
adc
sub
push
rcll
inc
pop
adc
mov
insb
sub
out
fcoms
pop
jp
fidivl
ret
lea
loop
dec
outsl
mov
test
inc
clc
inc
fdivl
jl
xor
pop
das
out
clc
test
fisttpl
push
cmpsl
jnp
in
test
and
in
int
add
repz
fildll
sbb
gs
or
test
ret
fnstenv
jb
dec
sbb
dec
dec
arpl
dec
dec
dec
not
cltd
mov
aas
dec
fstpt
jmp
orb
movsl
mov
jp
cli
shrl
xlat
ret
cmp
push
jmp
cmpsb
outsl
insl
mov
loopne
ja
xlat
pop
mov
repz
jns
mov
ja
xchg
push
pushf
xchg
push
adc
push
or
popf
dec
lahf
mov
aaa
pop
pop
pop
mov
mov
mov
outsl
imul
jecxz
sub
fcompl
xchg
sub
or
fcomip
inc
aam
pop
stc
push
daa
jnp
loope
sub
cld
testl
rorl
or
add
fsts
push
loope
mov
stc
mov
xor
dec
pop
repnz
sub
push
inc
sub
sbb
repz
call
jno
daa
push
repz
sub
sti
xor
mov
das
pop
pop
add
xor
pop
pop
push
xorl
call
add
pop
out
insl
in
ret
cld
pop
stos
lds
cmpl
mov
or
sahf
in
lahf
and
mov
lahf
add
inc
out
fsubs
jne
testl
cmp
cmp
insb
lods
sahf
insl
dec
or
cmpsb
add
pop
jg
sub
aam
aaa
dec
sti
xchg
sti
push
jne
xchg
movsl
outsb
adc
push
jmp
daa
loopne
or
jecxz
cltd
std
bound
sar
mov
jecxz
cmc
sub
mov
lock
pop
jns
inc
rorb
lret
or
popa
loop
aaa
sub
dec
mov
aaa
mov
adc
aad
push
xchg
jae
cltd
cli
shll
fsubrl
filds
jg
icebp
lret
es
les
sub
stos
notb
cld
pop
push
or
cmpsl
xchg
std
push
sub
pushl
mov
mul
gs
mov
mov
mov
xchg
adc
lahf
push
sbb
push
xchg
mov
arpl
jmp
arpl
and
xchg
sbb
cmp
add
mov
adc
fimull
lret
test
jecxz
pop
inc
xor
lret
cmp
push
lahf
mov
jecxz
xor
stc
mov
out
arpl
adcl
mov
jb
xor
scas
cli
push
dec
xchg
sub
outsl
xor
mov
mov
adc
popa
test
jg
pop
xchg
or
fcmovnu
dec
test
sbb
fldl
shll
aaa
loopne
nop
jnp
insb
stc
in
mov
jp
dec
dec
leave
out
dec
in
ja
mov
jg
add
shlb
cwtl
cmp
or
sbb
cmp
jg
sub
fnstsw
mov
aaa
adc
filds
pop
mov
dec
xor
mov
jns
fldt
xchg
ss
in
push
lds
pop
je
mov
pop
xchg
out
add
add
mov
ret
rcrl
fbld
add
fdivrp
lods
xor
lds
int3
rolb
sar
icebp
mov
aaa
add
lahf
scas
stc
sbb
jne
mov
add
aad
sbb
push
loope
test
rclb
inc
or
push
sti
dec
xor
jmp
jle
ucomiss
sbb
iret
and
mov
nop
cli
inc
jo
out
mov
aaa
cs
lret
mull
and
mov
fwait
movsl
fs
mov
xor
ficompl
jnp
cwtl
cmc
mulb
jp
mov
pusha
inc
dec
repz
push
dec
dec
push
pusha
pop
mov
cmc
dec
push
push
mov
pop
sbb
cld
pop
hlt
or
sar
outsl
jl
iret
xchg
addb
jge
pusha
or
adc
jl
pop
and
mov
arpl
xchg
fstpt
rcll
mov
insl
cld
clc
jg
pop
jns
rcll
mov
stc
inc
idiv
fucomip
mov
jbe
push
push
or
pusha
fwait
add
fs
ja
dec
es
sti
das
jno
adc
and
xor
arpl
or
mov
icebp
xor
lods
pop
fs
fcompl
jnp
cmp
jmp
nop
inc
push
fists
sub
dec
push
xlat
outsl
inc
cltd
iret
ret
jb
pop
ss
mov
ja
mov
dec
inc
jmp
mov
jno
cmp
sti
ss
je
ds
pop
mov
scas
mov
adc
movsl
push
es
jmp
shlb
and
mov
xchg
movsl
comiss
pop
or
xor
test
jns
lods
lods
rorl
mov
push
mov
pushf
mov
or
aaa
imulb
mov
xor
adc
mov
in
mov
xchg
mov
or
add
out
negl
push
pop
inc
jns
xorl
pop
aas
cmpl
or
xor
imul
add
push
in
push
mov
add
push
cs
rcrb
adc
cmpsb
mov
mov
add
and
insl
mov
mov
loope
daa
rorb
lock
push
pop
and
and
push
push
pusha
mov
mov
jnp
push
cmp
cmp
sub
jle
xor
addb
sbb
dec
adc
and
push
call
daa
rcrl
mov
mov
mov
fildl
or
ja
scas
push
pop
add
js
out
js
push
ja
jg
sbb
jl
inc
jle
mov
gs
push
mov
mov
addr16
xchg
dec
pushl
cld
cs
or
mov
aad
push
test
pushf
push
push
dec
push
mov
push
mov
cmp
and
sbbb
lea
fcmovne
into
adc
pop
sub
sbb
std
lret
fsts
loopne
and
mov
enter
fsubrl
jo
dec
loopne
ja
dec
xchg
outsb
incl
add
pushf
out
xchg
loop
leave
sahf
int
mov
fsubr
mov
add
pop
jne
mov
mov
aas
cld
jb
in
and
sub
ret
clc
add
inc
mov
adc
loope
sbb
subl
or
in
in
insl
dec
mov
add
jmp
sub
mov
mov
mov
mov
std
subl
adc
ss
fnsave
xchg
clc
jns
mov
lea
inc
dec
fldl
sar
inc
lock
pusha
cmpsb
cmpsb
addl
xchg
pop
pop
pop
cltd
mov
jle
repz
out
cmpsl
sbb
adc
add
mov
loope
fdiv
sahf
adc
cs
ret
incl
outsl
add
js
loop
movsl
add
jl
cmp
jnp
popa
pop
mov
pop
dec
loop
aam
pushl
pop
pop
pop
orl
rorl
in
mov
or
rcrb
and
add
cld
sahf
popf
out
or
cmpsl
lea
xchg
imul
sahf
push
adc
pop
fcmovnu
cmc
jno
jnp
push
addl
or
and
arpl
pop
cs
aas
jl
pop
pop
jnp
jmp
jne
mul
mov
shrb
mov
clc
ss
jg
inc
mov
mov
repnz
dec
xor
ljmp
and
push
jbe
icebp
neg
mov
mov
sub
pop
das
jge
mov
lds
xor
movsl
shlb
in
fs
in
push
cmpsb
cmpsl
lret
aam
cmp
dec
jmp
addr16
dec
xor
dec
or
add
ret
mov
or
push
jno
add
das
add
roll
icebp
fld
lea
lds
mov
repnz
pop
mov
mov
or
icebp
cmpsl
test
or
cmc
and
push
cmp
ret
cmp
jge
aaa
popf
std
shll
sbb
loop
lahf
arpl
fwait
push
jns
and
sti
mov
bound
lock
je
das
ret
lods
push
mov
ret
jle
mul
add
sbb
pop
cs
push
cmp
jg
add
lahf
shll
fnstenv
jp
lods
imul
cmp
xchg
mov
filds
jg
push
mov
mov
add
movsl
sahf
test
sarl
push
xor
clc
xorl
sub
lret
mov
ds
sub
mov
sbbl
mov
adc
sti
out
sbb
jge
aaa
cs
jecxz
mov
icebp
mov
jl
cmp
jbe
xchg
cmc
popa
and
js
mov
pop
add
loop
adc
mov
outsb
outsl
mov
add
or
iret
jbe
and
xor
push
jae
sbb
inc
ret
data16
out
and
pop
lods
jae
sub
push
addb
push
cmp
inc
lods
push
inc
pop
lahf
push
orl
andb
mov
mov
cmp
mov
push
call
pop
and
pop
inc
cs
mov
mov
arpl
jp
aaa
ss
xor
cwtl
dec
stos
sub
jno
push
ds
fwait
cs
aad
mov
sbb
jb
loopne
loopne
clc
and
and
ljmp
pop
or
inc
shrl
pusha
mov
add
or
ret
mov
icebp
push
push
out
and
or
add
lock
push
fists
inc
arpl
push
pop
push
push
sub
inc
inc
mov
xor
andw
test
arpl
mov
popa
and
push
push
or
or
mov
cmc
sub
mov
sbb
rclb
cmpsl
std
pop
in
lahf
shrl
lahf
clc
sbb
cmpsl
sbb
pop
ficomps
cwtl
sbb
mov
movsl
xchg
pop
sbb
xor
inc
bound
mov
adc
cmp
rolb
jle
mov
sbb
ljmp
addr16
mov
push
shrl
popa
aas
mov
je
sub
push
jg
inc
aaa
pop
mov
repz
daa
test
pop
sbb
pop
lahf
add
mov
mov
jg
rolb
jnp
dec
jno
mov
scas
sub
popf
test
sbb
addl
loope
pop
int3
movsl
clc
rcrl
outsb
pusha
js
inc
or
pop
out
pop
lret
adc
pop
and
popa
fldl2t
fwait
neg
enter
fildl
clc
popf
icebp
mov
inc
jmp
ss
movsl
testb
jb
push
sub
popf
xor
dec
add
jge
loope
dec
lods
imull
jnp
adc
les
xor
mov
aaa
fcomi
dec
mov
lds
or
xchg
mov
std
or
fiadds
loopne
and
xchg
mov
pop
sbb
dec
add
lahf
or
push
or
cmpsb
fimull
pop
add
roll
out
cli
jae
lods
loop
rdmsr
pop
call
push
dec
out
sbb
inc
xchg
inc
xchg
jno
roll
sbb
int
mov
xor
xchg
pop
std
dec
repz
sti
mov
popa
addr16
repz
outsb
pop
cmp
dec
mov
adc
push
leave
sbb
jnp
mov
cmp
mov
sti
pop
stc
popa
push
add
sahf
in
sbb
pop
cli
cmp
adc
jbe,pn
stc
cltd
jle
xchg
cmp
mov
inc
or
jbe
push
xrelease
sub
mov
push
cmp
sti
fisttps
add
pushl
shl
inc
jns
add
xchg
daa
cmp
push
pop
shrl
lods
test
add
mov
mov
js
jns
loopne
and
out
jecxz
sbb
dec
xchg
out
inc
fs
push
outsl
xacquire
imul
in
pusha
orl
mull
insb
cs
cltd
enter
stc
gs
inc
push
sub
jae
sahf
xchg
cld
sbb
test
sti
ja
jle
popa
sub
stc
push
cmp
ss
pop
jnp
loop
out
inc
ror
in
sbb
not
cmp
lods
add
ret
push
inc
mov
mov
les
in
mov
outsl
jb
inc
jmp
cld
cld
pop
ja
sbb
adc
fucom
insl
and
js
jns
addr16
in
mov
loopne
pop
mov
mov
jecxz
sbb
std
pop
hlt
add
test
jecxz
std
popa
jp
imul
or
mov
popa
lcall
sti
mulb
loopne
push
xor
mov
icebp
add
mov
mov
out
sbb
inc
or
jnp
push
cmp
cld
ljmp
adc
cmp
addr16
mov
mov
insb
jmp
pusha
jae
add
test
adc
imul
testl
int
ret
pop
add
mov
icebp
xor
xchg
lock
fbstp
sub
fwait
adc
repz
and
and
arpl
pop
adcl
mov
iret
lcall
cli
sti
sbb
shrb
loop
pop
push
scas
pop
incb
dec
gs
lcall
cmp
inc
xchg
pop
jl
jae
push
test
xchg
lock
testb
pop
popf
mov
insl
cli
inc
in
test
js
idivb
ja
xchg
pop
jl
xor
xchg
mov
lret
stc
dec
call
je
push
pop
dec
repz
mov
or
or
arpl
dec
outsl
in
in
fs
in
dec
jnp
notb
mov
fldl
fstpt
aas
or
aaa
dec
mov
mov
decb
xchg
orl
adc
push
adc
popa
pop
lea
dec
arpl
in
imul
out
out
pop
xorl
fbstp
idiv
add
inc
cmc
test
jge
out
push
and
std
xlat
cmp
mov
cli
jne
cmpsl
sbb
jle
outsb
insl
jmp
popf
sbb
push
push
and
lahf
mov
sbbl
or
cmp
insb
decb
repnz
dec
push
lds
in
sbb
dec
jecxz
push
fyl2x
scas
outsb
mov
iret
push
inc
movsl
adc
sbb
in
cltd
mov
insl
cli
xor
push
and
movsl
xchg
movsl
ss
jl
push
dec
scas
pop
fistps
xchg
icebp
stc
xchg
mov
test
stos
insl
push
sub
ljmp
negl
add
loop
cmp
mov
xchg
jmp
test
cli
jo
add
and
add
dec
aad
add
clc
roll
or
xor
out
out
and
xor
mov
shll
test
in
dec
pop
add
adc
xor
test
adc
jle
xchg
call
or
push
pop
mov
inc
pop
push
jmp
repnz
jmp
mov
pop
push
test
sbb
mov
roll
insl
add
add
outsl
or
jno
std
aaa
popf
lahf
cmp
popa
andb
cwtl
mov
sti
pop
cmp
decl
push
push
arpl
sub
or
xor
repz
sub
push
jmp
adcl
fcompp
cs
and
lcall
sbb
xor
addr16
out
out
cwtl
cmpb
xchg
das
sbb
in
mov
fstl
inc
sub
out
sbb
adc
pop
and
pop
sbb
stc
testl
xchg
sahf
ljmp
repz
sub
out
lret
inc
pop
mov
out
add
inc
leave
enter
fisubs
notl
mov
add
inc
leave
repz
lock
fsubl
inc
leave
enter
ret
enter
mov
mov
in
mov
in
mov
addr16
xchg
mov
xor
scas
jl
sbb
out
stos
push
or
push
add
xorb
scas
test
stc
into
adc
lds
cmp
mov
rcrb
faddl
adc
jmp
inc
leave
enter
dec
out
inc
leave
enter
jmp
sbb
and
stc
inc
xor
adc
enter
into
or
lods
int
cmp
stc
add
les
out
pop
add
testl
lret
shrb
sub
idivb
pop
insl
out
pop
lret
sbb
jecxz
cltd
imul
dec
dec
in
je
xchg
sahf
enter
insl
ljmp
clc
sbb
jg
or
adcl
jmp
xor
clc
repnz
mov
pop
pop
add
das
hlt
push
filds
stc
aas
push
inc
push
mov
mov
sbb
js
incl
jbe
das
mov
cld
cli
dec
cmc
outsl
shrb
pop
or
jno
lods
incb
icebp
cld
xor
cmp
jns
dec
clc
sub
incl
lods
les
inc
imul
or
fsubr
xchg
add
push
nop
pushl
ret
repz
inc
xor
je
pop
adcb
outsb
sub
pop
addb
push
mov
add
mov
lds
ja
cmc
test
mov
aam
jge
mov
jmp
cld
outsl
inc
shl
jno
outsl
ss
fsubr
cmp
stc
sti
insl
cmp
mov
sbb
cli
je
and
sbbl
inc
es
mov
stc
inc
aaa
fldcw
push
mov
add
repz
test
fmull
cli
aam
iret
addr16
jg
or
cmp
inc
pop
ja
and
aas
sub
pusha
cmp
shlb
xchg
pushf
sbb
cmp
sbbb
add
pop
inc
test
filds
lret
ret
cld
push
incl
adc
jl
cmpsl
add
sub
pop
and
lret
lods
mov
push
xchg
test
sbbl
ret
frstor
imul
subl
loope
xor
fwait
ljmp
rclb
out
out
fiadds
cmp
adc
data16
jecxz
lret
testb
std
dec
pop
cmp
mov
stos
lcall
cli
lds
sbb
pop
mov
pop
jb
mov
cmp
xchg
xor
loop
and
adc
jg
test
loop
jns
pop
mov
decb
int
mov
inc
jmp
inc
repnz
dec
inc
push
pusha
xor
clc
cmp
xchg
add
adc
lcall
cs
leave
push
jo
pusha
outsl
push
xorl
xchg
rorb
test
stc
inc
xor
cmpl
pop
popa
push
dec
pop
sub
roll
mov
shll
and
dec
mov
jecxz
jns
xchg
jbe
fwait
mov
dec
out
outsl
cmp
fists
lods
jae
in
rclb
sbb
gs
xchg
mov
orb
pop
jg
sub
add
sbb
cli
jnp
dec
xor
lahf
lods
std
xchg
mov
xor
jnp
cmpb
inc
jae
add
dec
or
fistpll
aaa
daa
dec
xchg
jecxz
or
addl
jg
inc
dec
loope
jnp
adc
push
adc
das
dec
adc
movswl
fwait
cmovs
mov
sbb
pushl
ja
addl
push
popa
std
fsubr
add
sub
cmp
lcall
mov
das
mov
lcall
mov
mov
xor
adcb
jo
in
push
push
outsb
in
fisttpll
jg
clc
xor
insb
or
inc
ss
movsl
aaa
or
out
cmc
cld
dec
ss
in
jo
inc
div
idivb
outsb
insl
pop
in
push
ljmp
mov
fcmovbe
push
xchg
dec
lds
or
fiaddl
pop
jp
outsl
out
adc
jae
aaa
jge
push
std
add
sbbb
dec
rcll
mov
test
sti
out
bound
mov
out
sub
fwait
sbb
ljmp
mov
daa
inc
sbb
in
and
add
pop
dec
loope
push
push
xchg
dec
test
dec
je
adc
sub
or
inc
add
test
jb
icebp
icebp
hlt
adc
add
and
pop
sub
jb
xchg
outsl
sbb
or
cmp
push
out
scas
incl
dec
test
cmc
test
arpl
dec
rcll
cmp
adc
xchg
lods
or
pop
insl
jle
add
inc
inc
mov
notl
in
add
pusha
sbbl
jecxz
std
mov
pop
xchg
icebp
xchg
bound
dec
xchg
xor
cmp
ss
pop
dec
js
sbb
push
pop
std
data16
or
inc
mov
dec
cmp
inc
add
fwait
lods
jl
inc
xchg
cmp
mov
pop
out
rol
mov
lcall
mov
push
push
mov
dec
push
pop
lahf
repz
cld
or
out
aad
cbtw
out
mov
push
sub
push
pusha
xchg
lock
jb
dec
rorb
inc
xchg
cmp
dec
gs
not
lahf
lods
jge
sub
hlt
test
jge
push
pop
push
mov
aaa
cld
outsl
xchg
push
cli
rcll
std
int
in
pop
inc
arpl
xchg
ljmp
push
push
mov
call
fisubrl
sbbb
daa
sbb
in
or
or
inc
sbb
stos
adc
xchg
fildl
iret
test
out
xorl
pop
aaa
xor
in
hlt
push
cmpsb
clc
inc
push
outsb
sub
mov
push
push
sti
out
outsl
adc
sbb
jl
sti
out
xor
daa
call
adc
addr16
loopne
sbb
pop
dec
or
fnstcw
fstpt
cmp
iret
test
aas
push
xchg
mov
mov
mov
pop
movsl
ret
pop
jecxz
in
or
in
add
cmp
xchg
add
and
mov
stos
or
fstl
mov
popa
inc
mov
add
adc
and
push
ljmp
pusha
push
cmp
imul
push
or
sti
or
sbb
push
adc
mov
jge
aaa
or
lds
insl
inc
ud0
jmp
or
mov
std
jmp
in
mov
test
icebp
inc
dec
add
out
inc
push
clc
inc
dec
daa
sti
pusha
incl
andl
pop
push
mov
dec
test
dec
dec
xor
jecxz
test
pop
je
push
jge
repnz
aaa
jnp
add
or
popa
scas
add
xor
push
mov
gs
push
or
sub
ljmp
xor
std
adc
pushf
push
mov
js
jns
or
jg
jnp
clc
push
mov
jmp
jecxz
jno
out
or
test
add
inc
frstor
add
add
sti
or
adc
cs
addr16
sub
ja
sub
fcom
jecxz
mov
sbb
fistl
fcmovnu
mov
jns
sbb
out
gs
pop
testl
sar
sbb
cmpl
cmp
xchg
add
shll
outsl
adc
or
push
mov
inc
or
addl
or
ljmp
xchg
cmp
xchg
adc
jp
push
cmp
jl
fbld
sti
sub
aas
inc
pop
outsb
add
stos
shl
mov
xchg
test
push
mov
js
ljmp
gs
inc
out
push
mov
adc
sbb
int
pop
andl
arpl
or
pop
jle
mov
scas
dec
stc
mov
xchg
js
call
jecxz
add
outsl
lahf
push
mov
pop
adc
clc
xchg
sbb
xor
bound
mov
movsl
pop
les
fisubl
fcomi
imulb
aaa
lds
add
and
xor
rorl
outsl
call
cmp
leave
mov
scas
sti
insb
incl
cmc
and
fdivr
arpl
or
outsb
xor
xchg
mov
data16
mov
lds
stc
add
mov
in
popa
or
rdtsc
mov
pop
repz
lea
pushw
xor
mov
jmp
jle
in
and
add
ja
mov
ljmp
xor
pop
icebp
pop
shr
lea
xor
stc
push
lods
push
lea
lret
pusha
in
inc
jmp
dec
sbb
pop
cmp
cltd
mov
adc
out
inc
push
je
in
add
xor
clc
pop
sbb
add
aam
out
mov
mov
mov
stc
popa
pop
xlat
ljmp
sar
mov
mov
xor
mov
insl
sti
das
xor
stos
inc
push
clc
lret
repnz
or
test
pop
and
out
add
sub
sahf
decl
cmp
jno
pop
mov
test
ret
dec
xor
sti
push
xchg
add
pop
icebp
mov
fwait
or
addr16
mov
adc
lods
pop
and
shrl
outsl
push
int3
sub
cmpb
incl
arpl
aas
jmp
pop
in
fstpt
jnp
popf
jl
mov
aaa
aaa
adcb
mov
or
in
test
dec
mulb
fcompl
bound
int
leave
mov
pop
out
mov
sbb
add
mov
and
lcall
lret
lods
pop
cmp
cmp
gs
insl
cmp
push
push
inc
popa
xlat
ret
pop
notb
pop
mov
test
pop
and
xchg
fcomip
lcall
in
fildll
dec
cmp
std
insb
cs
mov
pusha
or
mov
ljmp
and
pop
sub
in
add
xor
pop
ret
sub
int
arpl
in
insb
test
ret
cli
sbb
pop
xchg
addr16
insl
iret
shr
repnz
repnz
lret
call
addr16
test
jecxz
in
out
mov
mov
sub
inc
lahf
popa
stos
in
fistps
mov
nop
lods
outsl
js
sti
lret
pop
inc
mov
dec
movswl
mov
mov
adc
inc
ja
and
lods
fcompl
mov
pop
pushf
test
add
call
mov
out
gs
ljmp
lret
in
sti
mov
sbb
mov
cmp
pop
mov
xor
lret
aam
fcmovne
add
inc
and
loopne
shrl
pop
out
addr16
xchg
add
shlb
xchg
dec
fmull
cld
out
pop
push
test
inc
cmp
lods
inc
add
stc
popa
ds
and
in
std
xchg
mull
lret
arpl
push
sahf
push
xchg
mov
and
fdivrs
inc
cmp
sti
add
fwait
nop
cmc
adc
jg
adc
cmc
dec
xchg
adc
inc
pop
enter
psrlq
pop
and
jle
lret
add
inc
stos
daa
jmp
decb
jp
jmp
mov
into
sbb
push
jg
dec
mov
movsl
movsb
decl
mov
and
mov
es
roll
xlat
loope
mulb
add
ljmp
cld
adc
sahf
insl
mov
cmc
dec
cld
and
mov
ss
and
test
mov
pop
sbb
insl
scas
sub
lock
testb
jae
cli
sub
cmp
cmc
int
arpl
repz
sti
mov
into
and
mov
lods
fsincos
pop
hlt
pop
mov
mov
fs
out
mov
mov
in
arpl
jmp
adc
inc
sbb
sti
inc
or
xchg
dec
push
clc
pop
pop
push
rcrl
inc
arpl
aad
push
add
int
aas
rsqrtps
xchg
cli
pop
loopne
mov
sbb
inc
push
sti
inc
sbb
or
push
outsl
sbb
fisttpl
jmp
push
std
jmp
rorl
xchg
push
dec
or
lret
and
ljmp
push
mov
dec
sbb
sar
cmp
mov
sub
jmp
inc
pop
iret
xlat
push
out
sti
sub
pop
jnp
fnsave
addl
insl
sti
mov
push
and
add
adc
inc
pop
xchg
mov
xor
faddl
jmp
insl
sub
add
test
xrelease
pop
or
or
es
adc
jmp
add
mov
cmpl
push
xchg
xchg
push
mov
xor
mov
jo
stc
adc
loop
test
orl
sarl
xchg
mov
xchg
insb
cld
mov
mov
jp
add
out
imul
jnp
divl
mov
cmp
or
cld
inc
jl
push
and
arpl
subl
lods
decw
clc
xchg
xor
loope
sti
xchg
push
roll
in
pop
xchg
dec
add
mov
out
lcall
mov
pop
jnp
add
fdivrs
push
sarb
clc
xchg
mov
cmp
push
cmp
dec
push
mov
or
xchg
addb
cli
inc
push
xchg
inc
jle
aaa
insl
add
or
cmp
outsb
inc
jo
push
je
sti
jp
mov
cltd
jnp
scas
and
mov
sarl
push
insl
test
add
push
pop
sarl
mov
jmp
in
out
rcl
xchg
sub
aas
xor
data16
addl
add
cld
lea
inc
inc
inc
jp
push
je
lahf
test
jnp
lock
add
ja
and
dec
push
push
dec
cmp
out
adc
dec
insb
push
mov
or
ljmp
adc
rcrb
dec
cmc
push
mov
mov
mov
push
xchg
and
xor
add
sub
cld
push
lret
es
stos
outsl
loop
loope
sbb
sub
mov
mov
mov
mov
notl
pop
add
add
dec
insl
xor
mov
push
jge
push
insl
push
xchg
add
divb
testb
push
fldt
out
dec
cltd
in
in
cli
or
sbb
jecxz
inc
jge
push
sti
push
sub
iret
or
mov
inc
stc
push
loop
shl
hlt
pop
mov
test
inc
fidivl
lea
xchg
mov
xchg
or
pop
cltd
mov
movsb
stc
jo
jne
rcrb
pop
outsl
and
mov
xor
jo
jne
data16
mov
popa
sbb
outsl
aaa
pop
stos
fstpl
in
gs
repnz
jns
push
loopne
jmp
push
imul
push
xor
popa
lcall
shl
arpl
jle
stos
xor
out
push
add
sub
or
xchg
mov
jnp
loope
add
add
add
loop
loop
mov
push
mov
cmp
popf
fdivp
xor
ja
cld
cmc
add
fs
out
xlat
cli
xor
add
jae
test
sub
gs
cmc
scas
jbe
filds
jecxz
stc
xor
pusha
fldcw
xchg
sub
cmc
dec
neg
pop
data16
push
repz
jp
jg
mov
lahf
mov
add
sub
cmpl
outsl
insb
aas
mov
adc
sub
jmp
mov
fsubs
popa
insb
xor
lea
push
mov
outsl
inc
or
rcrl
add
in
mov
jp
clc
push
loop
pop
jg
mov
mov
fmull
pop
mov
inc
jecxz
lahf
inc
out
xlat
arpl
adcl
sub
cmpsb
adc
test
aas
add
je
xchg
cmp
xchg
sbb
in
dec
adc
mov
mov
push
push
sbb
subl
push
std
sbb
mov
je
or
in
stc
inc
xor
lea
and
pop
add
sbb
loopne
in
adc
cmp
jno
mov
sbb
dec
dec
pusha
jp
xchg
sbb
test
pop
rolb
jg
call
sub
pop
cld
mulb
idiv
jb
subb
push
pop
mov
pop
daa
and
sbb
and
pop
aad
fisttpl
jecxz
inc
mov
loopne
inc
sahf
pop
sub
sti
inc
pop
lahf
sbb
mov
fwait
dec
sti
sbb
bound
inc
inc
mov
pop
or
mov
pop
adc
movl
dec
xor
popa
mov
add
jl
cmp
push
lock
dec
cmp
lods
jno
lds
cmp
fmull
xor
call
outsb
push
xchg
or
sti
jecxz
xor
jge
add
icebp
inc
rolb
rorl
loop
sub
lock
rclb
mov
mov
shlb
or
daa
stc
or
or
and
jg
mov
test
jno
and
dec
mov
cmp
push
sbb
out
outsl
in
clc
push
pushf
jle
jo
cmpsl
call
cwtl
xorl
jp
sti
mov
adc
outsb
daa
push
push
and
jo
arpl
xchg
ja
or
fisttps
push
mov
ss
imul
pop
aas
and
out
jae
jge
orb
mov
sti
popa
push
test
push
outsb
cli
pop
loopne
jo
int
or
jno
jle
insb
cmp
and
add
jo
rep
out
push
cwtl
ja
insl
outsb
add
dec
dec
std
enter
out
xor
jecxz
lea
sub
dec
loop
mov
rclb
imulb
mov
dec
adc
cli
adc
add
jno
push
push
dec
jecxz
jg
jo
fldl
sbb
jl
cmp
add
fidivl
lcall
scas
sbbb
pop
sub
mov
pop
negl
or
lret
leave
jmp
outsb
or
mov
mov
mov
pop
sub
mov
leave
lds
sub
xor
mov
inc
sbb
loope
cs
and
mov
mov
pop
add
cltd
aad
adc
pop
jp
iret
in
lret
xchg
pop
pop
in
xor
adc
es
jae
in
mov
repnz
out
pop
arpl
pop
movsb
fnstcw
dec
out
call
cmp
ret
pop
pop
and
xchg
icebp
arpl
fs
dec
pop
gs
popa
sbbl
jecxz
pop
cs
cmp
adc
ja
xchg
lcall
iret
inc
imul
aaa
sub
sbb
pusha
xlat
popa
xor
jb
iret
arpl
iret
ss
roll
mov
push
arpl
addr16
gs
addr16
cs
lret
jge
push
pop
push
ja
mull
push
xchg
lret
mov
adc
int
xlat
in
daa
adc
dec
mov
mov
cmp
outsl
imul
adc
dec
rcrl
sbb
std
imul
std
imul
cmp
adc
gs
mov
xor
jg
fwait
imul
rcrl
int
cmpsl
mov
ror
call
pop
pop
aaa
test
jne
adc
lcall
xor
xchg
lret
in
addr16
dec
shlb
mov
lea
jnp
and
insb
arpl
int3
es
pop
loopne
xchg
xchg
lods
fistps
inc
mull
aas
xchg
fsts
cs
out
mov
maxps
or
jle
pop
push
cmp
arpl
xor
orb
cmpsb
enter
fstpt
add
fs
push
xchg
sub
push
and
nop
xor
jb
push
sbbl
pop
pop
cs
imul
gs
pop
dec
pop
xchg
in
push
xchg
pavgw
and
xchg
pop
ficompl
pop
mov
xchg
xor
fwait
pop
loope
fnstenv
sub
push
lret
fisubrl
cltd
pop
push
pop
imul
das
nop
pop
add
aas
xor
insl
rorl
popa
adc
jg
aad
cmp
aaa
imul
dec
mov
arpl
scas
mov
insl
shr
add
punpckldq
rcrl
or
pusha
adc
popa
mov
xchg
addr16
cmpsb
imul
xor
dec
jae,pn
and
sub
jge
fs
fstl
bound
push
popf
mov
push
insl
mov
jmp
imul
jae
cmpsb
jmp
aaa
adc
daa
sahf
mov
lcall
add
imul
xor
pop
dec
std
adc
xchg
cmpsb
imul
adc
testb
cmpsl
jmp
gs
addr16
aaa
push
rcr
lcall
add
shll
xor
mov
jle
dec
shll
and
ja
aam
push
cli
inc
je
outsl
dec
push
pusha
pop
insl
outsb
sbbl
insl
jno
pop
addr16
sti
jb
pop
jno
std
ds
lea
cli
insl
pop
pop
imul
inc
bound
insl
call
jle
or
insl
lret
aas
std
dec
addr16
popa
inc
arpl
push
pop
insl
ja
daa
cli
ds
pop
imul
cld
in
cld
inc
fs
pop
inc
jg
jmp
outsb
pop
pusha
incl
push
pop
addr16
data16
pop
mov
push
push
jno
jg
inc
fs
outsl
pop
pop
outsl
popa
cmp
repnz
inc
outsl
mov
outsl
inc
pop
pop
fs
daa
jae
pop
addr16
inc
gs
jmp
aas
clc
incw
addr16
cmp
push
pop
insl
outsl
mov
mov
popa
imul
outsl
bound
fs
pop
jb
jbe
cli
fcmovbe
inc
lcall
xchg
adc
push
imul
imul
rclb
outsb
inc
out
mov
imul
bound
dec
stos
xor
cmpsb
decl
adcl
inc
addr16
push
bound
stos
js
push
std
push
pop
outsl
inc
pop
pusha
dec
data16
mov
fs
jb
pop
jo
aas
jg
outsl
pop
ss
fildl
pop
imul
pop
sti
mov
mov
stc
xor
pop
jo
inc
dec
outsb
jne
ficompl
pop
ja
aas
add
mov
insb
arpl
inc
in
sub
outsl
lret
dec
fnstenv
push
sti
dec
aaa
jo
pop
pop
cmp
insb
insl
pop
outsl
push
adc
inc
pop
loope
lock
outsl
mov
imul
add
sti
pop
xor
inc
jo
jae
inc
inc
dec
dec
inc
inc
cs
daa
pop
addr16
insl
jne
into
pop
push
dec
pusha
jne
cmp
mov
in
dec
pop
test
arpl
jne
mov
jo
xchg
aad
inc
data16
outsl
clc
fldt
arpl
jb
clc
and
addr16
pop
outsb
arpl
std
insl
mov
pop
loope
xor
inc
or
pop
jecxz
ds
add
imul
outsb
fldt
insl
idiv
inc
arpl
movsl
std
adc
addr16
sbb
sub
arpl
das
mov
popf
jbe
addr16
bound
outsb
inc
dec
in
ljmp
rcrl
popa
outsb
jno
insb
dec
fs
addr16
push
fs
mov
gs
arpl
dec
pop
push
inc
dec
je
mov
inc
pop
xchg
int3
shrl
push
and
inc
dec
sub
sub
pop
jo
mov
mov
jmp
in
lret
pop
outsb
or
inc
popa
jge
or
or
mov
popa
insb
test
mov
xlat
adc
inc
out
push
sub
pop
mov
mov
dec
cmp
cltd
gs
mov
cmp
dec
sub
jb
pop
das
jo
ja
decl
aaa
sbb
gs
lds
cld
pushf
sub
mov
lea
addr16
pop
push
imul
std
mov
enter
imul
cli
outsl
aas
mov
stos
pop
aas
aas
fildl
inc
xor
sub
mov
aas
cmp
ds
cs
outsl
adc
inc
pusha
test
push
fisubrs
push
clc
mov
mov
mov
inc
jae
xlat
adc
je
inc
push
jnp
jg
notb
cmpsl
std
fwait
sti
cmp
inc
add
inc
jecxz
cwtl
inc
jo
idiv
push
std
inc
mov
test
insl
outsl
outsb
dec
fs
insl
mov
sbb
ret
push
aad
std
dec
das
movb
adc
push
adc
bound
inc
cmpsl
add
push
dec
data16
xlat
sti
inc
in
mov
daa
pop
clc
cmp
insb
movsl
mov
jne
sub
cmp
insl
out
bound
push
push
cmp
outsl
fcomi
cmp
inc
daa
arpl
cmp
aaa
cmp
imul
in
push
push
dec
cltd
sti
cmp
dec
xchg
ds
das
cld
das
repnz
cmp
dec
cmp
add
cli
cmp
sub
and
jle
test
xchg
out
cmp
jl
insl
sub
insb
push
inc
cmp
pop
es
ss
imul
movlps
cmp
in
in
cmp
dec
jae
cli
inc
cmp
xchg
pop
stos
mov
imul
lret
cmp
mov
aas
push
cmp
mov
outsb
or
mov
pop
inc
push
insl
pop
mov
pop
lods
imul
sahf
cmp
cmp
mov
aas
push
push
cmp
inc
cmp
cmp
jne
test
aas
push
pop
dec
sahf
xor
sbb
cmp
arpl
cmp
pop
pop
push
pop
jo
cmp
push
mov
and
mov
pop
adc
cmp
dec
ja
imul
aas
lcall
mov
aaa
jbe
cmp
insb
push
sub
cs
inc
inc
inc
jmp
mov
leave
pop
add
jns
in
loop
mov
sub
add
movsl
cmp
pop
or
pop
mov
dec
test
xchg
daa
push
cmp
and
push
or
jb
ss
aaa
outsb
jb
ja
mov
jo
pop
aaa
insl
pop
pop
sbb
adc
inc
stc
lahf
dec
ds
jecxz
loope
inc
ds
daa
inc
insb
hlt
cmp
rol
pop
pop
mov
inc
cmp
sub
add
xor
jne
imul
pop
pusha
pop
outsb
bound
incb
dec
cmp
aaa
push
mov
or
pop
notb
jle
test
cmp
dec
dec
ds
jg
add
jmp
pop
jg
dec
dec
xor
adcl
ret
adc
mov
inc
pop
scas
test
xchg
std
inc
cmp
pop
pop
xchg
xor
insb
dec
bound
lret
push
outsb
xchg
sub
test
push
popa
sbb
cmp
inc
dec
aad
rorb
mov
jne
gs
or
push
nop
or
sbb
and
ss
mov
std
mov
push
push
inc
sti
pop
jne
inc
movsb
pop
fstpt
fdivs
cld
jge
push
shlb
dec
push
cmp
pop
mov
dec
fimull
jl
and
cld
push
lods
rcr
dec
and
ja
add
in
sti
mov
arpl
push
fsubs
sbb
pop
or
sub
adc
pop
jecxz
or
sti
inc
dec
push
mov
and
out
cmpl
xor
sbb
jg
pop
or
decl
sub
fs
data16
cwtl
cld
push
pop
bound
das
adc
sub
std
incb
shlb
or
lock
sub
std
push
bound
add
pop
cli
notl
add
mov
jno
mov
or
jno
test
pop
pop
mov
es
out
push
sbb
imul
insb
inc
adc
add
jb
insb
adc
or
shrl
lret
sbb
add
push
pop
pop
outsb
fwait
and
lods
insb
cmp
ss
mov
push
adc
push
mov
imul
aaa
dec
fsubr
cld
and
std
rcr
fwait
mov
jle
clc
add
cli
add
popa
or
mov
addr16
jle
loope
js
pop
cmp
je
addr16
aam
sar
pop
xor
cmp
push
stc
inc
pop
sub
shlw
orl
outsl
arpl
push
mov
inc
scas
mov
inc
push
imul
repz
pop
rolb
outsl
pop
mov
ss
aas
jae
adc
pop
mov
inc
sbb
xor
outsb
addr16
mov
push
cmp
pop
pop
outsl
cmp
or
lods
push
leave
sbb
or
xor
bound
imul
mov
insl
pop
mov
mov
sub
bound
sbb
sbb
xchg
imul
test
fidivrl
pop
dec
pop
push
data16
pop
pop
lods
in
inc
mov
mov
jb
mov
movb
cld
add
cmp
sbb
insl
cmp
pop
jb
ds
inc
pop
inc
add
stc
mov
sub
jb
sbb
and
fwait
movsl
sbb
pushf
sahf
sbb
rorl
insl
jg
cmc
lds
pop
sub
adc
push
sub
lods
pop
sbb
cmp
cld
fsqrt
mov
neg
std
out
dec
movsl
lcall
push
push
pop
imul
jecxz
gs
gs
aas
insb
test
inc
dec
dec
inc
cmp
pop
cli
mov
outsb
adc
pop
xchg
or
fmuls
jecxz
inc
lret
int
mov
push
and
pop
sub
in
aaa
fbstp
jno
and
pop
imul
repz
movsl
push
test
xor
cmp
mov
or
fistps
inc
and
sbb
push
fsubs
dec
daa
jno
push
ljmp
sbb
insl
sbbl
push
inc
dec
andb
jge
push
push
or
cltd
imul
insb
mov
jb
dec
xor
mov
push
cmc
jno
push
lret
push
mov
push
inc
dec
cmp
dec
out
aas
dec
dec
std
fldcw
pop
movsl
outsl
and
push
pop
push
sbb
sub
mov
pop
sbb
pop
sbb
mov
out
jg
pop
mov
dec
inc
inc
dec
inc
inc
fistpl
dec
push
cli
lcall
add
adc
jg
fcmovnb
sbb
pop
into
dec
dec
sub
sub
add
imul
xor
jo
jae
daa
add
push
mov
jg
pop
and
cmp
imul
push
adc
daa
aaa
ret
movsl
pop
dec
pop
fs
add
and
push
mov
daa
or
adc
test
cmp
sub
sbb
lods
inc
or
into
rclb
pop
lret
pop
stc
ss
imul
pop
and
add
mov
inc
mov
imul
pusha
xchg
pop
fmulp
mov
mov
dec
push
pop
lods
sbb
loope
loopne
dec
dec
jne
sub
add
pop
aam
xor
in
push
or
pop
inc
sub
pop
sbb
mov
and
add
sub
mov
mov
bound
jno
dec
pusha
imul
roll
or
lds
and
fsubrs
xor
cmpsb
hlt
fldt
inc
dec
imul
pop
test
pop
fsubs
imul
and
sub
sub
mov
dec
xor
ja
mov
loope
dec
sub
pop
dec
outsb
adc
push
js
sub
arpl
jne
sbb
and
and
data16
cmp
dec
imul
mov
pop
mov
jl,pt
cmpsl
lods
jo
arpl
dec
mov
sbb
adc
push
jecxz
movw
stos
add
mov
push
push
inc
stc
incl
sub
jne
popa
pop
sub
inc
fisttps
xor
sub
inc
outsb
pop
mov
push
das
pop
sub
xchg
outsl
or
lods
imul
mov
sub
push
ja
ret
imul
sbb
xchg
push
aaa
sbb
les
push
jge
xor
adc
adc
daa
dec
pop
cltd
lret
sti
or
aaa
cmpl
sub
cmp
and
pusha
xorb
jle
cmp
and
sub
mov
daa
sub
sbb
and
das
xor
cs
push
mov
mov
aaa
cmpsl
sbb
mov
xchg
and
inc
and
sub
sub
add
xor
inc
mov
xor
mull
fstl
mov
jo
mov
sbb
mov
jae,pn
jb
scas
push
or
sub
lods
push
fwait
insl
ja
bound
inc
clc
push
push
or
pusha
xchg
inc
out
dec
fs
add
addr16
es
dec
dec
aas
cmpsl
arpl
fwait
cmp
adc
out
inc
dec
aaa
insb
pop
bound
cmp
pop
jo
pop
fcomps
push
je
xchg
dec
dec
stc
adc
fisttpll
or
addl
ffreep
push
cmp
push
pop
push
stos
push
test
jae
jmp
addr16
mov
pop
sbbl
sarl
lea
nop
outsb
loope
pop
lods
lods
sarb
aam
push
outsb
pop
jo
ds
bound
mov
fldcw
xchg
jnp
out
sub
outsb
dec
daa
sub
sbb
pop
fildl
scas
mov
cmp
mov
movsl
movsl
mov
adc
dec
das
inc
arpl
lds
pop
add
dec
insl
adc
aaa
outsl
jne
dec
mov
jno,pn
jb
sub
inc
popa
pop
xchg
sbb
leave
imul
ret
pop
dec
dec
cmp
addr16
outsl
shlb
ja
ljmp
lock
cmp
arpl
mov
arpl
add
pushl
outsb
shll
sub
cmp
inc
inc
ds
inc
pop
loopne
incl
dec
inc
dec
dec
dec
dec
rorb
push
push
pop
stos
inc
mov
pop
popa
es
lods
lock
inc
cmpsb
repz
mov
jo
ja
in
outsl
cltd
aas
inc
cmp
and
cmp
pop
insl
pop
pop
pop
leave
leave
adc
inc
inc
cmp
loop
dec
addr16
add
lods
call
daa
cmp
jae
outsw
arpl
lret
pusha
cmp
push
push
inc
outsb
xor
add
insb
sbb
cmp
or
ljmp
mov
cmp
mov
add
decl
inc
pop
push
cmp
sub
outsl
pop
sub
popa
adc
xor
pop
je
jae
cmp
dec
inc
sub
lods
test
daa
loop
call
lods
inc
out
xor
daa
jae
jo
inc
movsl
xchg
arpl
roll
ds
lret
rclb
cmp
add
insl
sub
mov
mov
or
jnp
sbb
std
add
cld
pushl
xor
add
dec
sti
cltd
ds
push
adcb
sub
outsl
mov
and
or
mov
jl
push
addr16
dec
in
mov
inc
push
pop
adc
mov
ljmp
cmc
mov
inc
jo
push
mov
mov
gs
xchg
fnclex
jne
minps
adcb
adc
cmc
mov
fldcw
not
mov
sbb
les
cmp
xor
sub
data16
sub
pop
push
dec
insl
pop
adc
mov
jo
pusha
je
xor
dec
insl
jmp
sub
pusha
std
sub
dec
pop
mov
inc
test
es
inc
pushl
or
decb
adc
and
sub
add
sub
sub
sub
sub
sub
sbb
ljmp
push
arpl
insb
sub
repz
xor
cmp
push
mov
pop
sub
mov
lret
sub
mov
shrb
out
icebp
mov
das
sti
das
adc
xor
cs
sub
xor
decl
das
sbb
clc
xor
xor
cwtl
xor
xor
dec
pushl
xor
xor
xor
xor
fs
xor
pushl
xor
dec
xor
pop
xor
xor
mov
xor
scas
ss
shll
jg
pushl
ljmp
xor
and
push
ja
mov
xchg
xor
mov
outsl
push
int3
aaa
shlb
ss
xor
pop
jno
jae
xorb
incl
aaa
xchg
aaa
mov
pop
cmp
mov
dec
cmp
cmp
in
in
lea
dec
movsl
sub
ljmp
fs
sub
sub
sub
cmp
or
cs
pop
xor
das
subb
sub
fisubrl
out
cli
sub
xor
and
cmp
xor
cs
out
sbb
das
cld
pushl
daa
das
inc
xor
sub
mov
mov
sub
xor
lock
cs
xor
insl
shll
aam
fnstenv
xor
xor
xor
xor
push
insl
loope
xor
xor
jl
mov
jmp
or
pop
xor
mov
stos
xor
xor
cmp
aas
xor
push
lcall
ss
xor
xor
ss
xor
mov
mov
adc
jns
jecxz
ss
xor
cmp
xor
sub
xor
cmp
pop
cmp
xorb
sbb
xor
cmp
and
aaa
or
and
xor
inc
jne
jg
xchg
popf
pop
xor
cld
cmp
aaa
fnstcw
fdivl
sbb
sbb
cmp
cmp
jg
aaa
fs
cmp
imul
cmp
repnz
jg
cmp
mov
nop
cmp
cmp
aaa
imul
orb
cld
ret
sub
sub
sbb
sub
push
push
je
xchg
aaa
mov
into
jno
in
jbe
movsl
das
stos
sub
das
dec
jno,pn
sub
shrb
sub
xor
sub
js
test
xchg
shll
call
or
addl
movsb
xor
xor
xor
xor
pop
test
aaa
das
mov
xor
test
xchg
xor
xor
xor
xor
xor
lea
sysenter
or
xor
outsl
xor
xor
lds
js
fidivl
loope
sub
xor
xor
arpl
sbb
pushl
shll
fbstp
divb
aaa
xor
cmp
insb
icebp
ljmp
xor
aaa
mov
cmp
jo
fucomp
ljmp
xor
cmp
aaa
in
xor
cmp
insb
cmp
lret
cmp
pop
cmp
xor
sbb
jmp
xor
push
cmp
cmp
ss
cmp
pop
cmp
xorb
cmp
cmp
ss
cmp
cmp
cmp
cmp
aaa
inc
cmp
cmp
jno
cmp
cmp
stc
jb
cli
cmp
cmp
aaa
mov
sub
loope
sub
sub
pusha
sub
sub
aam
clc
sub
das
mov
mov
sar
xor
pop
ljmp
jecxz
xor
incl
push
xor
xor
aam
mov
pushl
in
call
mov
add
or
adc
out
inc
push
jge
fnsave
movsl
xor
mov
shl
inc
xor
aaa
int3
xor
aaa
adc
inc
xor
xchg
push
dec
cld
adc
xor
xor
loope
outsl
mov
push
cs
xor
xor
xorb
xor
xchg
xor
xor
mov
dec
cmp
inc
xor
xor
das
xlat
xlat
xor
xor
xor
outsb
fistpll
adc
and
aaa
xor
xor
pusha
xor
aaa
loope,pn
xor
xchg
xor
or
fildll
xor
out
inc
xor
jns
mov
lods
xor
mov
xor
xor
lods
mov
ss
divl
pop
xor
ss
aad
xor
jecxz
popa
xorb
aaa
mov
ror
ss
cmp
adc
pop
data16
cmp
inc
ss
xor
add
xorb
ss
inc
lret
aaa
gs
cmp
imul
out
clc
xchg
fwait
xchg
cmp
and
cmp
ss
cmp
cmp
subl
sub
das
and
cs
sub
sub
cs
sub
das
jmp
push
movsl
movsbl
xor
das
inc
push
adc
mov
mov
sti
sub
sub
sub
andb
push
jne
jle
sti
cs
je
adc
push
dec
dec
pop
mov
mov
int
cmpsl
mov
rcpps
je
popa
jb
pop
dec
imul
outsl
jae
pop
push
imul
inc
insb
insb
dec
outsl
push
outsl
popa
mov
sbb
add
imull
insl
cs
or
std
in
fstpt
fs
and
jo
jae
arpl
sahf
in
adc
outsb
imul
jae
cmp
sub
popa
bound
adc
jo
push
jl
ss
xlat
jbe
cltd
jnp
not
vmwrite
jg
jbe
in
mov
and
inc
jo
adc
push
jb
jns
gs
lea
xor
sub
sub
push
gs
add
fmull
aas
jb
pushl
xor
and
outsl
outsb
imul
inc
sti
sbb
sub
mov
imul
push
sti
addr16
and
inc
gs
popa
push
ds
gs
pop
inc
js
adc
mov
fildll
dec
jmp
fwait
insl
ja
inc
fs
imul
or
popa
dec
add
inc
xor
loope
jg
push
inc
jbe
outsb
sti
mov
lods
inc
jb
notl
bound
sub
fs
mov
cmp
push
or
inc
sub
or
dec
pcmpeqw
outsl
fxch
cmpsl
sbb
dec
jae
xor
jae
add
inc
lds
movd
inc
mov
cmp
xchg
mov
mov
insl
jbe
bound
out
fnstsw
and
fs
daa
push
sti
faddl
xor
jae
and
mov
adc
imul
clc
adc
push
arpl
cmp
inc
inc
push
outsl
sbbb
movsl
ja
fldcw
lahf
add
fstpt
jae
add
add
xor
xor
add
adc
in
fcomp
mov
xchg
lret
enter
adc
mov
ja
outsl
add
jbe
imul
fwait
push
lock
add
std
mov
jne
lcall
pusha
inc
repz
pop
add
fwait
sbb
outsb
adc
outsl
xchg
pop
mov
cli
imul
push
lock
ja
push
adc
mov
add
sub
pop
add
out
mov
add
pop
add
lcall
cli
fdivl
mov
lea
cmp
pop
pop
rcrb
adc
jecxz
lcall
and
je
add
and
or
imul
test
sub
addl
repnz
sti
sbb
mov
pop
mov
xadd
test
lods
add
incl
or
or
pop
push
add
das
push
inc
dec
push
xor
addb
sbb
test
stc
adc
add
rolb
nop
add
repnz
jns
add
sub
cltd
shlb
jns
add
incl
repnz
dec
add
add
add
or
incl
jg
sub
mov
lcall
mov
add
add
push
add
jb
jbe
rcr
clc
sub
add
add
mov
or
add
gs
std
scas
cld
pushl
imul
outsb
addr16
or
gs
data16
add
in
push
push
inc
insb
jne
push
and
fdivrs
or
jp
push
dec
sar
lods
push
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
sub
ds
outsl
jbe
inc
js
and
jo
dec
popa
insl
in
xchg
lods
std
inc
inc
or
jb
test
pop
mov
arpl
outsl
arpl
outsb
or
cmpb
insb
outsl
dec
push
xor
jne
dec
outsb
outsw
adc
mov
lods
sbb
jb
xchg
mov
lods
insb
adc
adc
inc
mov
notl
and
gs
jnp
mov
xchg
jae
outsl
outsb
mov
sbb
fs
dec
outsl
popa
fs
out
jg
insl
insl
mov
mov
fldl
sub
lret
fidivs
mov
gs
ja
cld
push
outsl
outsl
insb
adc
xor
jo
push
les
test
sub
enter
xor
inc
fdivp
sub
cli
lea
bound
mov
test
mov
jmp
adc
pop
adc
pop
jge
mov
or
pop
or
call
leave
adc
mov
mov
decl
and
or
mov
add
nop
add
or
and
incl
sbb
ljmp
or
and
inc
sub
push
imulb
mov
jns
aaa
xor
jmp
mov
xchg
sbb
xchg
sbb
xorl
das
or
xchg
fbstp
sbb
xchg
lock
push
or
mov
fnstenv
mulb
inc
add
mov
fcmovne
insl
cmpsb
pop
push
push
dec
mov
insl
fistl
or
je
mov
inc
bound
arpl
call
cli
or
mov
cmp
movsb
mov
inc
das
dec
or
inc
inc
add
sub
xor
or
jno
jo
pop
jbe
gs
jo
pop
push
sbb
pop
mov
pop
je
or
mov
or
or
mov
fs
push
repnz
push
inc
mov
add
jle
mov
ret
jb
jae
arpl
outsb
or
pop
sti
mov
je
subb
and
or
insb
or
mul
fstl
bound
scas
ja
or
jbe
ja
popf
imul
jns
icebp
xchg
js
inc
jb
dec
aam
sti
mov
outsb
je
je
insl
mov
je
popf
fistl
sbb
insb
ss
loopne
push
xor
xor
int3
xor
rorb
scas
jmp
jo
fs
mov
hlt
or
out
inc
aaa
jne
mov
les
fs
lods
push
jp
dec
fs
pop
cmp
dec
adc
addr16
push
stos
inc
or
inc
ds
push
outsl
mov
mov
nop
mov
jae
adc
and
xchg
scas
push
push
xchg
push
gs
sbb
popf
bound
jne
jbe
sub
outsb
or
jo
inc
xchg
outsl
jns
bound
rcl
mov
dec
imul
das
dec
js
inc
dec
add
sbb
pop
ja
ja
dec
lcall
add
add
mov
adc
add
fxch
adc
inc
add
cwtl
fcoml
add
sbb
add
add
adc
repnz
xchg
push
aaa
test
js
jbe
rcr
inc
add
mov
js
jb
outsl
das
adcl
jb,pn
dec
outsb
or
push
add
jbe
push
cs
mov
fs
pop
daa
rorb
jnp
xor
dec
loopne
cmp
sbb
jns
add
and
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
