mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
dec
loope
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
in
mov
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
xlat
mov
mov
loop
adc
push
xor
add
xor
and
jmp
dec
and
fldcw
lahf
adc
and
jnp
cmp
sub
mov
push
mov
dec
sub
cs
das
jnp
dec
push
jns
lea
xor
popa
xorl
das
inc
sbb
dec
push
dec
imul
notl
je
mov
mov
enter
jo
adc
insb
fcos
mov
test
cmpb
jne
adc
adc
mov
push
adc
int
pop
push
pop
mov
sbb
icebp
adc
dec
and
std
push
lods
fldcw
push
leave
push
sub
mov
das
ja
mov
pop
ss
mov
and
pop
enter
clc
into
adc
push
test
out
sbb
add
aas
aaa
xchg
pop
loop
test
xlat
jl
mov
push
ret
or
stos
push
lret
cmp
mov
dec
dec
rorb
add
pusha
les
repnz
jne
jecxz
outsb
rorb
es
adc
pushf
push
add
dec
mov
cmp
pop
mov
mov
push
xor
rcll
rdpmc
pop
rolb
je
xor
addb
mov
xchg
scas
and
adc
cmp
psllq
and
out
mov
sbb
push
or
sub
pop
ret
or
push
mov
sbb
cmp
xor
inc
inc
cmp
sbb
repz
sbbb
push
inc
lock
inc
jmp
inc
sbb
aad
cmp
add
inc
incl
lea
ret
std
sub
je
xor
sbb
and
gs
jmp
cmp
push
xor
ret
cs
cmp
pop
push
adc
or
ss
or
xor
test
add
push
cmp
push
push
cmp
add
xchg
add
js
jb
pmaxub
adc
in
inc
xlat
jl
pop
jp
push
push
adcl
lret
fnstcw
repnz
add
or
fcompl
sub
dec
iret
xor
adc
pop
hlt
mov
mov
cmpsb
fnstenv
rclb
inc
sub
or
decl
push
and
or
lcall
fs
test
popa
mov
lahf
mov
sbb
mov
gs
popa
xlat
fs
xor
xchg
jecxz
sub
push
mov
or
iret
dec
inc
push
adc
test
adc
adc
jbe
dec
lods
in
sbb
pop
lcall
push
xchg
sbb
mov
cli
xchg
add
sub
pop
cmpsb
mov
sar
cld
or
inc
in
or
xor
dec
jl
push
push
add
cmpb
jne
test
jle
push
fwait
jnp
pop
dec
jns
add
icebp
lahf
adc
cld
or
jmp
std
rorl
leave
mov
pop
aaa
nop
mov
leave
sbb
lea
fcmovnbe
loopne
test
sbb
sub
mov
xor
in
cmp
lea
shl
lret
pop
pop
sarl
leave
arpl
ja
push
mov
adc
pop
jb
std
loopne
sbb
ret
sub
bound
xor
shrl
push
push
into
jge
adc
mov
xor
lret
shlb
jecxz
push
fldl
jne
aaa
mov
out
sbb
fisubrs
mov
sbb
adc
inc
sbb
shr
mov
mov
fmuls
push
push
lea
push
shl
gs
jle
ja
mov
pusha
fcomps
jmp
scas
inc
stos
mov
push
rep
mov
sti
xchg
stos
movsl
xchg
xchg
sahf
jmp
sbbb
push
inc
fadd
xor
int3
and
jmp
out
lea
and
ficompl
loope
sbbw
adc
hlt
or
lea
loope
lea
sbb
xor
and
into
and
mov
cmp
loop
test
rclb
sbb
loope
adc
pop
and
aad
dec
sbb
inc
ljmp
inc
fs
pop
or
into
rcl
pusha
rclb
cmpsl
leave
gs
adc
dec
dec
adc
sbb
outsb
dec
shlb
add
dec
sbb
sub
mov
iret
pusha
mov
mov
xor
mov
sub
sbb
sbb
jmp
push
out
xor
mov
push
mov
or
adc
adc
adc
ljmp
or
adc
cmp
sbb
ja
add
mov
cmp
sub
xor
add
sbb
xchg
lret
add
xchg
fimull
push
jl
or
and
push
push
nop
aaa
jne
rcrl
cmp
and
inc
push
add
and
add
cmp
out
mov
add
add
jnp
or
or
xor
dec
shll
push
or
pop
adc
adc
ja
mov
xor
sbb
aaa
repz
fldl
adc
push
mov
sbb
push
data16
mov
inc
cmc
out
stos
mov
sbb
add
out
add
andb
ret
cs
in
mov
and
push
and
or
or
in
mov
int3
inc
cwtl
inc
and
pusha
and
xor
jmp
xor
dec
insb
cmp
sbb
loopne
fildl
xor
push
adc
jno
testl
dec
or
pop
xchg
dec
adc
mov
je
sub
sbb
loope
js
sub
sub
push
fcompl
xor
enter
andl
es
adc
fistl
daa
test
lods
sub
push
in
fdivr
add
add
xchg
and
loopne
int
ret
imul
dec
out
add
sub
fdivrl
pop
lret
int3
add
sub
cmp
sbb
out
test
or
aas
and
jne
xor
pusha
push
movl
addr16
pusha
inc
sbb
adc
fldcw
aas
clc
mov
push
or
lods
out
inc
popa
pusha
mov
sbbb
xchg
fisubl
jge
adc
sub
icebp
fs
inc
xchg
data16
je
std
mov
push
js
fs
sti
xor
aam
sbb
test
sbb
adc
add
loopne
fsubrl
push
int
dec
and
dec
xor
pusha
dec
mov
imul
push
lods
shrb
or
cmpsb
mov
push
pop
and
pop
loop
call
pop
add
aas
and
gs
insb
push
mov
pushf
mov
mov
pop
cmp
out
shr
mov
or
add
adc
mov
sbb
pusha
aam
pop
sarb
push
std
cwtl
mov
mov
push
and
adc
jp
sbb
out
push
shl
lock
clc
pusha
cmc
dec
idivl
adc
cmpl
cmp
lods
adc
dec
inc
pusha
mov
pop
movsb
sbb
mull
inc
jo
and
and
mov
jl
push
sbb
fildll
sbb
push
scas
pop
mov
in
push
fdiv
clc
dec
push
shlb
repnz
adc
sbb
sub
sub
inc
cltd
sub
fs
out
int
test
sbb
mov
jg
dec
sahf
movsb
sbb
test
pop
fs
test
enter
mov
inc
pusha
ret
movups
repnz
das
or
jbe
mov
xor
adc
and
mov
jo
popa
fs
cmp
jp
add
shll
push
pop
dec
push
inc
cmp
push
call
fwait
push
cwtl
lea
pushf
sub
nop
sbb
add
rol
jbe
imul
sti
mov
ret
dec
loop
push
dec
sahf
dec
les
mov
movsb
int
nop
cmp
push
repnz
addl
je
push
and
repnz
push
sbb
adc
or
cmp
adc
or
imul
add
dec
add
mov
push
push
add
in
iret
scas
pop
repnz
cmp
or
ss
push
lock
mov
int3
cmp
movsb
outsb
dec
push
nop
addl
iret
into
frstor
aad
repz
das
add
mov
insb
verw
js
notb
sarb
and
push
add
mov
nop
jns
and
sbb
in
scas
add
ljmp
jge
jae
push
fmull
lods
push
mov
push
xor
inc
pop
aaa
xchg
jb
push
jns
mov
pusha
shlb
jle
cmp
xor
sub
push
in
mov
push
add
adc
lock
xchg
outsb
ror
or
push
mov
inc
imul
push
ss
arpl
sub
xchg
lods
mov
ret
jge
or
lods
dec
pop
inc
shrl
push
imull
dec
adc
jbe
adc
mov
fwait
lret
out
add
jge
add
repz
xor
insb
xor
test
test
movb
mov
popa
and
sub
invd
fs
fimull
pop
adcb
push
mov
out
inc
sub
and
and
or
jns
pop
jp
add
add
mov
mov
push
dec
cmp
cmp
fsub
ret
push
int
sub
stos
inc
xchg
xchg
aas
add
lods
fcompl
cmp
mov
push
out
push
push
sbb
aad
adc
fwait
jecxz
push
jmp
arpl
dec
xor
insl
jnp
aam
leave
jae
daa
jne
push
rolb
test
pop
cltd
idiv
mov
mov
add
mov
pop
mov
add
cmp
jb
push
mov
inc
inc
cmp
jg
arpl
inc
in
sbb
push
or
addr16
sbb
fxch
and
rcrb
sbb
sbb
enter
sbb
sbb
mov
sbb
sbb
sbb
pushf
cwtl
xchg
nop
sbb
sbb
mov
sbb
jl
je
sbb
sbb
insb
push
sbb
pop
push
push
dec
sbb
sbb
dec
inc
inc
cmp
sbb
sbb
xor
sub
sbb
sbb
and
sbb
sbb
sbb
adc
or
sbb
sbb
add
cld
inc
iret
out
stc
clc
inc
rolb
mov
mov
xchg
cwtl
pushf
mov
lods
mov
mov
loopne
enter
sbb
aam
faddl
in
in
lock
cmp
movsl
add
inc
lods
imul
adc
pop
mov
cmp
ret
and
nop
jne
fistl
pop
add
ret
push
xor
jo
addb
in
insb
rolb
xchg
add
push
jg
gs
cld
ljmp
inc
orl
push
in
adc
inc
dec
inc
inc
mov
fmull
or
shrl
xchg
popa
cmp
aaa
rcrl
bound
scas
je
jg
dec
push
mov
mov
lea
test
mov
push
add
or
mov
xchg
std
out
mov
jne
cmpb
jne
inc
or
add
insl
bswap
mov
repnz
jbe
aam
xchg
mov
cld
inc
testb
in
movzwl
repz
push
sub
jbe
jmp
push
pop
pusha
push
push
jmp
scas
fldenv
inc
push
imul
aas
ljmp
or
inc
pop
mov
cs
mov
push
lcall
das
push
inc
xchg
inc
lock
inc
lahf
clc
sbb
mov
ret
scas
push
mov
mov
mov
mov
push
and
pop
fsubr
xor
jo
js
push
popa
jb
mov
aaa
lds
inc
lea
adc
popa
ja
and
int3
add
repz
mov
dec
faddl
or
xor
in
or
and
pop
sub
mov
jg
pop
add
adc
and
je
add
add
pop
lret
cmpsb
imul
cmpsb
fnstenv
xchg
test
lret
cmpsb
imul
lods
shll
in
cmpsb
imul
fdivr
flds
jnp
adc
adc
add
adc
ss
jb
or
or
sbb
movsl
leave
adc
jb
fcompl
mov
or
pop
shll
adc
add
mov
in
pop
jp,pn
nop
xor
adc
add
insb
fwait
inc
sbb
comiss
repz
jne
xlat
jne
out
sub
adc
aaa
xor
out
arpl
movhps
pop
xlat
pop
xchg
pop
sbb
xchg
daa
push
lcall
arpl
lcall
inc
push
adc
sub
or
lcall
mulb
jmp
scas
test
jno
mov
mov
push
push
addr16
scas
jmp
mov
mov
adc
fwait
pop
dec
or
push
scas
arpl
scas
jmp
data16
or
mov
cmp
lcall
stos
lcall
pusha
push
dec
inc
shll
cmpsb
xor
dec
into
les
fimull
in
add
mov
sbb
add
and
fsubl
hlt
dec
inc
add
cmpsb
jmp
scas
mov
cmpsb
imul
cmpsb
jmp
cmp
fldenv
inc
add
add
inc
adc
pop
inc
outsb
ljmp
xchg
xor
int
popf
push
loopne
pop
dec
shll
bound
pop
add
push
dec
inc
mov
rclb
cmp
add
lcall
push
scas
imul
cld
jnp
add
ljmp
cmpsb
imul
imul
mov
lret
and
mov
add
jo
pop
verr
imul
and
mov
dec
xor
adc
and
inc
xor
enter
xor
shll
push
adc
add
xor
repnz
rolb
in
xor
loopne
lcall
ret
rcrl
stos
movsb
sahf
mov
xchg
xlat
dec
pop
add
and
mov
xor
add
or
and
and
int3
jl
loopne
sub
nop
pop
jb
xor
and
js
nop
xor
leave
mov
xchg
cmp
dec
xchg
dec
enter
es
push
push
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
add
xor
mov
inc
push
inc
push
dec
xor
cs
insb
jg
xor
inc
fdivs
sbb
inc
push
xor
jg
stc
aas
mov
lds
lret
mov
push
mov
std
nop
out
out
stc
cli
cld
idiv
std
add
clc
cmp
stc
icebp
fwait
sub
or
or
mov
ljmp
bound
mov
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
popa
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
in
push
sbb
incl
in
fld
lods
xchg
movsl
xor
xchg
cmpsb
xor
sti
out
jge
cmpsb
adc
xor
xchg
lods
daa
mov
stc
out
outsl
sbb
in
stos
lods
mov
xchg
mov
inc
cwtl
aas
cmpsb
dec
pop
bound
mov
stc
std
pop
sbb
dec
fs
xchg
add
daa
dec
cltd
push
repz
inc
pop
sbb
sti
or
incb
sti
or
jge
in
cld
adc
or
inc
jae
ja
or
ret
std
sbbl
dec
mov
test
mov
outsb
pusha
je
mov
dec
inc
dec
negb
daa
insb
pop
pop
imul
lcall
data16
xchg
ds
pop
sti
mov
insl
dec
lcall
pop
fistl
daa
push
push
test
pop
ljmp
dec
push
inc
xchg
test
test
movsb
notb
jb
jmp
idiv
or
scas
inc
add
jo
pop
jnp
add
in
inc
jmp
jge
jp
inc
hlt
add
or
mov
pop
jle
fisttps
mov
loop
daa
mov
jecxz
and
mov
xchg
in
dec
dec
or
push
xchg
mov
repnz
pop
jle
loope
inc
adcl
add
out
pop
arpl
ret
mov
dec
daa
and
jae
ret
testb
stc
mov
das
mov
or
push
or
adc
sarl
insb
mov
push
mov
sbb
pop
push
outsl
sbb
jnp
push
cld
push
ds
cld
pop
jle
add
push
push
ja
testw
lds
push
lahf
and
das
std
jg
test
add
push
notb
ds
fnsave
aas
notl
sbb
insl
mull
in
pop
jmp
cli
adc
leave
out
or
es
addr16
test
in
pop
xchg
pop
mov
dec
mov
push
sti
insb
mull
xor
das
cld
cmc
add
add
jecxz
and
adc
out
jg
mov
dec
mov
and
sbb
inc
mov
jle
mov
in
outsl
dec
orb
addl
test
sar
mov
out
addb
add
stc
jnp
loop
addl
aad
arpl
in
jg
add
fstpt
xchg
ljmp
fdecstp
add
jnp
sub
or
mov
inc
push
mov
jle
cmp
mov
outsl
mov
inc
jp
xchg
or
jle
sub
sbb
leave
fidivrs
aas
pop
movsl
cmpb
pushf
or
arpl
mov
gs
std
outsl
das
fistps
ljmp
out
aaa
clc
fists
inc
or
dec
or
repz
testl
dec
daa
out
and
loope
lock
shll
js
popa
sbb
pop
addb
outsb
or
xchg
and
jg
std
test
jecxz
sbb
outsl
incl
push
mov
mov
dec
push
notl
pop
pop
cli
add
cmp
jb
rcll
dec
pop
in
outsb
sub
xor
outsl
jmp
mov
push
out
test
movsl
movsl
mov
xchg
cli
push
sti
inc
inc
push
std
or
xor
hlt
incl
addr16
push
das
mov
jl
rsqrtps
ret
out
fidivl
stc
arpl
addb
sub
in
add
pop
pusha
jecxz
and
mov
paddb
add
ret
testl
xor
repz
fnstsw
jecxz
inc
mov
jl
push
pop
jg
repnz
jg
dec
fldcw
mov
jns
cmpsb
test
sti
pop
push
cmpb
xor
lea
ss
push
or
add
cmp
incl
xor
jl
xor
inc
in
in
inc
mov
mov
in
jg
std
jae
mov
dec
jecxz
and
mov
add
loop
cld
jb
in
adc
call
ja
cld
add
jno
add
in
pop
decb
shl
jo
testl
xor
in
cli
or
hlt
push
outsl
jns
inc
call
cmc
mull
mov
int
lods
adc
repz
mov
cmp
dec
gs
mulb
out
es
or
shr
dec
imul
dec
or
lds
cld
outsl
jo
adc
push
jnp
sub
jle
inc
and
or
mov
stc
xor
dec
lock
cmp
sbb
gs
push
dec
mov
cmc
or
or
push
xor
sbb
cs
ja
arpl
push
pusha
lret
cmc
push
jecxz
xchg
fstp
lds
mov
popf
sub
xor
sub
daa
cmpb
dec
push
mov
mov
mov
mov
fistps
ret
lods
in
jecxz
and
and
sbb
mov
xchg
lret
std
push
pushf
push
mov
testl
dec
mov
rcrb
loop
xor
push
pusha
fcomi
arpl
incb
adc
jecxz
shll
arpl
gs
inc
mov
roll
jmp
jge
inc
loopne
les
out
mov
out
in
in
mov
jmp
out
pop
sbbl
ret
lock
ret
andb
cmp
xor
jbe
popa
ret
add
add
cmc
arpl
scas
or
cs
lret
in
xor
clc
add
xchg
dec
and
add
shrl
push
mov
xor
jnp
loopne
push
dec
fistps
or
loop,pt
ret
sarb
in
or
add
adc
mov
test
dec
sar
jle
dec
out
jmp
xor
test
mov
pop
sbb
jnp
jmp
adc
cmp
jecxz
add
cmp
xchg
jge
sbbb
push
in
fnsave
jmp
jmp
cs
lret
out
out
les
aas
xor
outsb
movsl
rcrb
push
jno
pusha
mov
icebp
cmp
pop
push
cs
xlat
mov
lahf
out
or
mov
pop
arpl
add
repz
jmp
test
mov
jle
hlt
mov
fwait
in
dec
cmc
hlt
inc
adc
and
add
xchg
hlt
push
sti
mov
xor
mov
or
movsl
enter
nop
cmpsl
jae
out
or
jle
fsubrs
lret
in
out
out
mov
jmp
out
mulb
sarb
out
mov
std
in
in
in
shrb
pusha
testb
int3
loope
or
bound
mov
or
shll
cmp
movsl
xor
dec
pop
stc
jmp
dec
out
pusha
mov
insl
in
pop
sub
pop
jg
in
or
pop
pop
in
cs
push
pop
stc
das
cld
xchg
sbb
cmp
xchg
in
push
push
sbb
out
call
mov
dec
addl
aas
out
test
cld
jg
add
idivl
clc
xchg
loope
add
aaa
push
stc
pop
pop
pop
test
mov
and
incl
decb
popa
adc
jmp
mov
fmuls
jle
icebp
das
cwtl
ffree
repz
dec
fs
jg
and
pop
push
test
and
pop
xor
jnp
jmp
lock
das
mov
xor
insb
xor
loope
add
icebp
pop
mov
mov
mov
cmpsl
int3
pushf
ja
jne
cmpl
pop
out
sahf
loop
subl
push
xor
std
addl
cli
in
imul
jno
jnp
inc
add
lret
push
repnz
pop
jecxz
das
repz
cmpl
pop
in
or
std
iret
jae
fistpll
icebp
dec
test
push
not
cmp
es
and
loope
sar
outsl
loop
push
test
std
xchg
push
jecxz
cmp
cwtl
ret
div
cmp
pop
andb
out
and
popf
clc
jmp
cmpl
push
and
sarl
loopne
xchg
or
out
arpl
stc
pop
dec
aaa
ret
mov
or
push
clc
sti
mov
arpl
jne
pop
push
sub
jmp
mov
dec
cld
dec
scas
test
lods
add
sti
xor
push
pop
cli
jno
test
arpl
cmp
shrb
addb
jo
ja
test
mov
je
sti
pop
mov
dec
insl
mov
les
leave
add
mov
stc
jecxz
mov
jnp
add
add
jno
dec
pop
cli
bound
cld
dec
in
fstps
pop
stc
les
cld
cltd
jl
add
js
sti
out
add
in
pop
popa
xchg
inc
xor
in
out
and
in
adc
mov
cmp
push
pop
push
push
mov
lods
sbb
outsb
inc
dec
pop
add
jg
inc
jl
add
and
xor
jo
test
lcall
inc
jg
jb
xchg
and
test
clc
xor
pop
shrb
jo
jnp
or
mov
add
push
outsl
cmp
cld
shl
cli
aaa
clc
ljmp
mov
mov
pop
add
bound
xchg
or
or
sarl
cltd
outsl
cmp
mov
sti
mov
xor
mov
arpl
jmp
loope
jp
movsl
mov
inc
frstor
or
or
mov
pop
pop
push
mov
mov
cli
mov
jle
add
repnz
push
dec
push
push
fs
mov
aaa
insl
cmpb
or
sbb
lea
mov
xchg
jle
dec
cmpb
sbb
rolb
pop
mov
push
pop
dec
loop
test
xchg
or
dec
daa
cmp
cs
pop
cld
add
jl
mov
sbbl
arpl
push
sti
sub
xchg
cld
iret
mov
je
sti
sbb
xor
mov
dec
mov
cmovle
xchg
mov
insl
cli
shll
cmp
dec
aaa
cmpsl
ret
xchg
sahf
mov
repz
or
pop
ret
jnp
adcb
frstor
aam
dec
or
ret
lcall
or
int
lahf
bound
clc
rcll
pop
mov
icebp
xchg
jl
or
std
je
cmpsl
mov
daa
loopne
fnstsw
call
das
mov
xor
push
push
or
cmp
or
test
dec
cld
insl
push
sqrtps
xor
sbb
pop
pop
sub
aam
push
addr16
cs
mov
cs
aas
jecxz
dec
mov
push
or
xchg
mov
pop
push
out
push
bound
sub
fwait
xchg
dec
fnsave
or
ret
not
sti
idivl
push
jb
pop
aas
push
arpl
movsl
cmp
in
arpl
jae
push
mov
lods
imul
push
lahf
fistps
fdivs
out
jbe
add
and
in
fstpl
icebp
movsl
mov
sub
xor
dec
lahf
enter
sbb
jg
sbb
cwtl
cmp
fistps
dec
call
imul
lcall
clc
in
das
mov
into
arpl
test
fsubp
xchg
dec
and
mov
push
xchg
stc
dec
lea
enter
jno
lret
decl
jle
lds
sub
mov
cmpsb
out
mov
shrb
or
push
into
insl
mov
sbb
add
ja
lea
popf
dec
fsub
hlt
jg
fisttps
orl
rol
sti
ss
insb
adc
decb
xchg
orb
jg
imul
sub
jmp
in
jo
out
jnp
add
jno
xchg
rcll
mov
dec
xchg
or
icebp
in
cmp
ljmp
xchg
jg
orl
insb
cmpsl
pop
int
fcmovbe
fwait
dec
lret
insl
lahf
xchg
add
aaa
add
mov
imul
aaa
mov
mov
mov
xchg
test
ss
imul
cld
loop
dec
and
dec
gs
std
add
les
add
test
xchg
jo
repnz
jecxz
insl
jnp
repz
jno
aas
mov
stos
das
and
mov
jmp
incl
sti
jb
xor
xor
push
pop
jo
dec
test
cwtl
pop
mov
xor
jne
mov
inc
cmp
arpl
icebp
test
sbbl
push
mov
inc
addl
addr16
stos
out
add
add
and
push
jecxz
cmp
outsl
pop
pop
pop
pop
adc
push
or
clc
sti
loop
cld
movl
addb
sti
pop
mov
mov
dec
orl
cmp
aaa
jp
jecxz
xor
push
fildll
sbb
test
push
filds
add
lcall
les
xor
add
mov
pop
pop
pop
pop
dec
inc
mov
pop
mov
dec
jle
adc
out
dec
mov
dec
add
mov
std
mov
pushf
rcr
test
xor
test
test
jo
jle
mov
addb
loope
test
ss
lret
ret
pop
pop
loopne
test
cmp
out
xor
cmp
movsb
test
cli
clc
std
movsl
fiadds
jnp
xchg
xor
sub
adc
pushl
movb
dec
xchg
or
insl
adc
pushl
jb
addr16
outsb
jnp
movsl
jecxz
xor
insb
push
stc
out
sbb
add
push
roll
in
fildl
dec
adc
cmp
in
sbb
in
and
orl
pushl
test
aaa
xor
sub
hlt
insb
jno
or
xor
adc
orl
stos
xor
adc
adcb
ss
insl
push
jmp
pop
jecxz
adcl
orb
pop
cld
lea
das
dec
add
pop
shl
lcall
inc
cld
xor
jno
test
xchg
jmp
ljmp
pop
in
popa
cld
pop
xor
or
std
mov
cmp
in
rcll
repz
jnp
or
or
xor
push
jnp
aas
das
jl
ret
cmc
mov
add
jge
sbb
je
jecxz
mov
popf
cmp
xor
inc
mov
sbb
jge
push
jo
lds
testb
cmp
jle
adc
xor
adc
js
cmp
inc
pop
repz
loop
jg
jne
jo
xorl
jp
sbb
push
jecxz
test
addb
xorl
mov
xor
out
std
mov
pop
fistpl
testl
add
inc
in
int
or
insl
inc
add
pop
xchg
pop
enter
in
lret
mov
out
repnz
test
pop
add
ja
push
movb
in
stc
cmpb
sub
movsl
jg
std
test
fwait
sarl
out
aas
xor
testl
pop
adc
inc
lahf
jns
push
xlat
mov
mov
je
or
mov
xchg
insl
pop
dec
xchg
xlat
aam
mov
fsubp
stc
xchg
dec
jecxz
xor
sbb
push
fnsave
add
scas
dec
dec
rorb
bound
in
arpl
sbb
mov
test
ret
xchg
test
js
jno
popf
xor
fldcw
xchg
scas
test
outsl
insb
loopne
cltd
iret
out
test
push
add
add
adc
clc
int
aad
notl
aad
and
jecxz
mov
jmp
pop
jecxz
xor
xchg
ljmp
cltd
pop
push
inc
or
push
flds
jmp
or
push
andl
testb
repz
jo
push
cs
int3
pop
addl
scas
jge
jge,pn
xchg
leave
inc
cli
and
pop
das
mov
push
cmp
jne
loopne
test
fwait
or
cld
outsl
xchg
pcmpeqw
ss
add
test
mov
loopne
or
lods
add
out
ss
std
shlb
jl
ret
aad
cmp
mov
cmp
adcl
aaa
mov
jae
insb
push
xchg
adcb
adc
lea
mov
inc
in
aaa
or
dec
xchg
fcmovnb
mov
cmp
add
aaa
pop
mov
fimuls
pop
sbbl
aam
call
test
insb
test
sub
in
iret
mov
ljmp
sti
mov
cli
loop
cld
sub
dec
sbb
mov
test
or
sub
add
jo
dec
lods
fbstp
cmp
fwait
dec
push
insl
stos
cli
pop
pusha
sti
ja
loop
mov
xor
add
clc
movb
pop
cmovae
sub
fidivrs
outsl
and
xor
outsl
mov
out
mov
ret
lds
pop
mov
call
cmp
mov
cmp
xor
jo
sub
insl
xor
fldcw
inc
add
pop
mov
outsl
repz
sbb
or
jecxz
cmp
test
outsl
sbb
fdivl
pop
add
sub
pop
mov
std
test
test
pop
lods
push
in
inc
sti
pop
cmp
pop
insl
mov
cltd
test
pusha
outsl
sbb
dec
add
das
xchg
mov
loop
insl
mov
dec
js
pop
movsl
cmp
mov
rorb
push
mov
out
out
sbb
pop
ffreep
insb
xlat
daa
lock
test
in
std
and
sbb
outsl
lds
or
mov
mov
shrb
movl
sahf
loope
lahf
filds
or
int
sti
jnp
and
in
inc
mov
jae
pop
aas
out
or
movsl
sub
mov
shr
add
xchg
sub
push
lea
and
aad
adcl
sbb
sti
jecxz
adc
jg
stc
into
fs
sti
lret
jmp
mov
jo
mov
inc
gs
mov
xor
call
outsb
mov
int3
add
out
adc
adc
clc
push
sub
and
push
pop
pop
mov
jle
pusha
dec
push
sub
push
mov
data16
cmp
push
ja
dec
mov
lahf
addr16
dec
repz
insl
stc
repz
shll
insl
clc
test
cmpsl
repz
idiv
sbb
daa
jle
jns
lretw
cli
add
gs
cli
das
cmc
add
push
aad
clc
add
fwait
mov
and
adc
mov
test
iret
mov
mov
fs
ret
mov
mov
push
xchg
test
test
ja
mov
jo
lock
sub
dec
mov
cmp
repnz
sarb
and
icebp
in
pop
incb
inc
mov
sti
or
call
and
cmp
xchg
sub
jae
adc
jbe
idiv
arpl
jno
push
mov
out
mov
das
and
fistl
loop
and
cli
cmp
daa
in
sbb
jl
inc
lret
jno
push
lods
xor
xchg
pop
pop
xor
dec
repz
hlt
ret
jl
and
fstps
sbb
ja
jo
jmp
pop
mov
dec
hlt
sbb
jge
mov
jle
add
mov
push
pop
repz
sbb
ja
mov
out
mov
lock
test
jnp
out
push
dec
xchg
popa
or
xor
pusha
ret
fdiv
xlat
pop
cmpl
test
insb
dec
icebp
ret
xor
icebp
push
dec
dec
lahf
jmp
xlat
dec
sub
in
xor
outsb
sbbl
and
sbb
or
loop
pop
xor
pop
mov
fidivs
mov
dec
xchg
pusha
mov
mov
mov
cmc
movsl
mov
jle
sub
ja
sub
xchg
push
sarl
jecxz
sub
push
mov
mov
jnp
add
mov
loope
out
fistl
push
push
push
dec
jno
outsl
lea
pop
test
mov
into
divb
or
jo
dec
sbb
cmp
dec
dec
sbb
sbb
inc
clc
std
dec
loope
cs
aaa
ficoml
jnp
ljmp
mov
dec
pop
xlat
les
rolb
pop
sub
cmp
sbbb
out
jbe
dec
arpl
adc
mov
mov
push
sahf
lahf
mov
pop
mov
fmuls
mov
mov
mov
arpl
mov
out
sarb
sti
aaa
mov
pop
or
filds
mov
stc
push
daa
shrb
jl
jnp
out
sub
aam
pop
std
xchg
push
bound
jbe
vmulsd
js
xlat
inc
pop
lock
mov
insb
jno
inc
and
cmc
jmp
aaa
repnz
sub
xchg
jo
popf
xor
push
repnz
std
sub
clc
xor
pop
pop
fildl
cmp
inc
ss
push
pop
icebp
insb
loope
mov
test
xchg
std
ret
cmc
ja
mov
jle
pop
push
sub
push
dec
lahf
jp
arpl
inc
imul
sbb
stc
adc
xor
es
jmp
pop
js
pop
repz
addr16
adc
push
push
or
popa
cmpsb
xchg
sub
shlb
xlat
aaa
dec
sti
xchg
fmuls
push
jne
test
pop
pop
dec
test
inc
or
sarl
imul
hlt
pop
data16
int
test
or
mov
loopne
mov
jge
aas
rcrl
popa
adc
loopne
xchg
call
mov
adc
insb
adc
xchg
jne
and
movsl
cmp
int
loop
sub
and
jg
dec
les
or
bound
mov
jmp
hlt
jns
sub
mov
lcall
outsb
popa
cmp
mov
cs
cld
nop
sub
xchg
adc
mov
mov
dec
mov
sbbl
out
mov
xorb
cmc
cmp
cmp
mov
jecxz
add
mov
xorb
fdivr
adc
dec
sti
into
jle
or
lods
negl
mov
mov
jge
add
mov
repz
xor
mov
mov
mov
hlt
lret
and
notl
test
dec
lods
dec
fistps
test
add
iret
popa
xchg
or
fcmovu
insl
jg
dec
loopne
sub
shrb
mov
dec
arpl
loopne
cli
in
mov
movsl
push
jbe
out
dec
in
ja
dec
mov
sti
cmpsb
xchg
pop
test
or
jg
loope
sub
insb
lds
mov
sbb
test
jo
loope
or
rolb
fstpl
cltd
xlat
popf
cs
jle
fildl
push
xchg
push
out
decl
jl
xchg
in
add
mov
aaa
ja
in
add
inc
dec
aas
movsl
add
adc
aam
add
jnp
add
fildl
xor
jne
mov
rol
sar
icebp
mov
test
fisttpll
outsl
adc
lahf
or
outsl
fidivs
aaa
and
xchg
sub
loope
fwait
js
ja
cld
push
jns
add
aam
cmp
xor
cmp
xor
sub
repz
jl
fwait
or
inc
jno
xchg
incl
adc
jmp
cmp
mov
fcomip
sbbb
movsb
pusha
cmpsb
cmpsb
push
cs
test
pop
mov
hlt
jb
shlb
push
dec
push
icebp
jb
mov
fs
inc
push
sub
push
cs
jg
sbb
sbb
pop
pop
mov
push
decl
cmpb
sbb
cltd
cmp
imul
mov
or
pop
cmp
int
jge
pop
lock
mov
bound
jle
push
or
push
mov
mulb
jns
push
test
stc
cmpsl
cltd
in
popf
jnp
ja
notl
enter
jl
aas
push
and
inc
lods
pop
pop
sbb
mov
adc
nop
or
add
inc
popf
jmp
shrb
lds
mov
sub
aaa
xor
cmp
xor
or
dec
adc
andb
mov
jno
sahf
icebp
daa
and
pop
dec
testl
popa
xor
orl
lds
push
push
loop
or
rcrb
adc
cld
in
fistpll
std
jp
mov
push
jmp
jp
xchg
in
pop
ljmp
flds
mov
outsb
xchg
mov
fcompl
scas
push
daa
jbe
push
or
insb
scas
sub
xchg
push
mov
pusha
out
jg
lods
pop
ja
push
sub
movsl
popa
cmpsl
mov
aad
push
mov
mull
shlb
ja
rorb
jae
lret
daa
outsl
and
test
and
dec
push
fs
test
pop
push
push
pusha
mov
cs
cmp
data16
std
jg
fbstp
incl
add
dec
dec
dec
bound
mov
dec
dec
pop
daa
roll
pop
pop
jmp
hlt
add
mov
sbb
jp
add
cmp
clc
xorb
test
mov
test
push
sar
fbld
mov
sahf
fisttpl
std
jo
cli
xor
hlt
jne
pusha
sub
outsb
mov
pop
inc
xor
icebp
frstor
andl
fbstp
cld
push
mov
push
xchg
pop
mov
insl
dec
std
sub
outsl
sbb
adc
mov
ja
stos
mov
in
cwtl
icebp
cld
push
pop
clc
mov
jmp
insl
outsl
sbb
jecxz
and
test
xchg
fbld
adc
sti
sub
mov
pusha
jmp
aaa
pop
mov
xchg
pop
icebp
adc
hlt
cmp
add
fildll
sub
loop
lea
mov
decb
fcomip
sub
rcr
andb
negb
inc
test
and
xorl
mull
insl
jno
test
mov
insl
pop
out
mov
push
sub
pop
jno
insl
jmp
add
xlat
stc
inc
jmp
ffreep
cmc
ljmp
or
roll
daa
mov
push
stc
add
fsubr
popa
into
jl
lahf
push
ds
inc
aas
inc
fistpl
dec
outsl
mov
mov
pushf
mov
sbb
insb
jl
minps
hlt
es
in
pop
jnp
aaa
cli
jle
repz
mov
dec
dec
mov
push
xchg
mov
pop
or
and
adc
loopne
or
imul
mov
mov
push
or
xchg
imul
clc
inc
in
fidivrl
imul
add
aad
cmc
or
or
out
mov
into
jecxz
cmp
inc
ja
jmp
pushf
jmp
std
push
scas
adc
popf
add
mov
test
jne
sbb
out
mulb
in
dec
mov
out
push
pop
out
and
jo
std
jp
cld
test
mov
mov
sub
and
and
inc
and
popf
mov
and
cmp
mov
cmpb
lea
xchg
out
adc
cmp
xchg
xchg
in
pop
pextrw
add
je
jmp
lret
and
adc
hlt
or
inc
add
jle
outsl
daa
push
mov
mov
daa
das
inc
scas
fldenvs
jmp
dec
push
pushf
test
aam
and
push
testl
idivb
lods
shll
stos
or
cmp
fidivrl
mov
mov
in
sub
mov
or
mov
push
lcall
movsl
xor
cmp
in
xchg
push
dec
ljmp
in
push
sub
popa
fisubl
mov
cmp
outsl
sbb
ljmp
dec
popl
push
xchg
pop
cmc
xor
jo
sub
and
pop
sti
add
lcall
xor
test
add
mov
aad
out
sti
mov
sub
shlb
push
jmp
jmp
mov
sbbb
or
pop
xchg
fadd
mov
movl
popa
sub
in
cmpsb
bound
pop
sbb
ds
and
push
mov
jle
mov
out
xchg
in
mov
add
pop
pop
cmp
mov
mov
mov
or
jp
aad
xor
jb
cli
data16
jnp
adc
add
orb
aaa
sub
arpl
push
cmp
push
lods
repz
adc
fdivl
sti
inc
and
xchg
pop
fstpl
loopne
mov
divb
stos
add
pop
loope
sti
or
push
xchg
imul
mov
cld
fldt
repnz
mov
cmpsl
mov
hlt
out
and
fdivl
stc
stos
sub
loope
aam
push
adc
dec
out
and
adc
fcom
push
leave
sbb
hlt
dec
filds
sti
int
loopne
and
hlt
dec
dec
push
loopne
and
pop
dec
push
imul
mov
cld
insl
adc
fisubrs
mov
jae
or
icebp
mov
pusha
call
lcall
ret
mov
sub
aaa
sub
es
loop
pop
std
add
imulb
clc
stos
mov
je
das
sbb
sub
mov
sub
sbb
pop
icebp
jecxz
pop
cli
sbb
push
sbb
mov
rcll
sbb
and
mov
cmpsb
dec
std
sbb
adc
push
xchg
arpl
mov
std
xor
push
mov
jle
test
stc
hlt
fstpt
mov
mov
out
mov
mov
int
sub
add
jo
pop
cmp
push
negb
cmp
jo
mov
jnp
repz
jl
repz
imul
cmpsl
arpl
sub
ss
aas
sub
sbb
cmpl
pop
mov
lahf
aaa
and
add
pop
sahf
div
pop
iret
cmpsb
outsb
xchg
and
cmp
mov
lea
push
negl
repz
addl
clc
addr16
inc
xor
cmpsl
dec
pop
dec
popa
mov
add
ja
ds
mov
pop
in
mov
push
mov
fsubl
pushl
mov
push
sbb
pop
cmp
pop
mov
push
lods
xchg
cmpsb
mov
testl
jecxz
sbb
mov
bts
enter
scas
scas
mov
xor
push
stc
jnp
add
mov
dec
mov
cmpsl
adc
outsb
fsubr
out
test
pop
lods
out
push
jmp
pop
clc
push
sbb
pop
pop
sub
mov
cmpsb
mov
add
and
test
sbb
dec
outsb
leave
mov
movsl
jbe
sub
ja
xor
xchg
cmc
add
std
into
dec
mov
mov
icebp
cmp
mov
icebp
xchg
mov
iret
mov
incl
daa
cld
fsin
pop
repz
sbb
push
in
push
push
cs
push
test
and
xrelease
mov
dec
jle
or
sbb
sahf
pop
das
idivw
xor
dec
jb
std
out
jp
shl
mov
cltd
add
leave
add
xor
movsb
dec
sbb
int3
popf
jge
sub
stc
and
lods
pop
jno
rorb
pop
xor
jecxz
sbb
cmc
loope
sbb
outsl
out
xchg
sbb
jp
jnp
dec
icebp
movsl
arpl
std
xlat
data16
push
cltd
movb
pop
std
out
cli
or
push
xor
ja
mov
xchg
xchg
mov
mov
jge
adcb
jp
sti
push
mov
jg
jns
jg
jmp
mov
fstpt
xor
cmp
pop
mov
mov
xchg
std
aas
jge
inc
pop
gs
mov
sti
and
xor
filds
adcb
dec
jecxz
sbb
pusha
cmpl
shrl
ret
sbb
in
sbb
and
jo
sbb
stos
lret
inc
mov
adc
outsb
mov
das
lcall
inc
lahf
push
jecxz
sbb
cmp
incb
cmpb
sbb
fmull
cmc
dec
cmp
xor
in
mov
pop
or
jne
out
iret
ss
xor
pop
ja
loope
arpl
xchg
call
inc
iret
sub
rcl
adc
sahf
aad
add
or
mov
cmp
push
dec
mov
jmp
mov
insl
push
cmc
mov
fs
jmp
jmp
mov
jbe
xchg
inc
hlt
fs
and
xchg
cltd
fs
or
xor
imul
cmp
out
or
adc
sbbb
outsb
push
adc
jg
shlb
fadd
cld
mov
or
push
xorl
loop
hlt
pop
mov
cmpb
loope
repz
ds
sti
cmp
mov
jle
bnd
imulb
cmp
mov
arpl
mov
dec
lock
int
inc
out
jle
cli
xchg
add
push
icebp
mov
xor
xchg
or
arpl
dec
dec
negl
sub
cli
xor
pop
in
cmp
leave
xchg
mov
mov
xorl
dec
test
popa
push
adc
inc
lea
inc
shll
push
icebp
cmp
cmp
fs
out
sar
adc
in
icebp
test
cmp
icebp
cmp
pop
imul
xor
clc
adc
xchg
jne
cmpsl
sbb
ljmp
sbb
push
pop
mov
xlat
cmc
orl
jle
push
sti
jb
dec
mov
addr16
xor
push
push
fistpll
lret
in
push
loopne
sbb
icebp
scas
jecxz
sbb
inc
fxch
push
inc
movsl
adc
jno
and
jnp
pop
popf
sub
jae
aas
imulb
addr16
movsl
pop
in
lahf
push
dec
dec
jecxz
out
stc
xchg
repz
inc
jp
cmp
in
icebp
mov
dec
adc
test
pop
dec
adc
push
call
sub
pop
xor
adc
pop
or
insl
decl
xor
sub
into
test
mov
or
or
jl
loop
aas
stc
pop
xchg
insb
add
bound
xlat
mov
cmp
inc
xchg
arpl
fs
jg
mov
sar
rcrb
push
xchg
mov
mov
xor
sub
add
dec
cmpsl
pop
dec
sti
repnz
xchg
jmp
or
lods
jle
mov
mov
inc
test
gs
outsl
add
outsb
or
jno
mov
dec
push
adc
or
xor
or
adc
outsb
lret
or
inc
lock
xchg
icebp
clc
out
hlt
popl
dec
enter
cli
xchg
jmp
popf
and
inc
in
call
bnd
jecxz
xchg
mov
outsl
outsb
pop
insl
sbb
xchg
sti
xor
jle
test
mov
adc
iret
pcmpeqb
push
xor
aas
xchg
mov
push
ljmp
mov
pop
sbb
or
add
xchg
mov
cli
in
jb
cmp
sbb
jmp
sub
repnz
and
mov
leave
enter
ljmp
fimuls
cmp
dec
jecxz
sbb
inc
leave
enter
rolb
enter
into
inc
leave
enter
lret
enter
sbb
enter
pop
mov
loop
call
xchg
sbb
scas
add
out
std
lret
inc
pop
jbe
adc
hlt
or
in
adc
popf
mov
or
and
pop
jmp
pop
jmp
mov
leave
push
xor
pop
inc
or
push
xor
adc
in
lds
in
pop
aas
subl
jge
mov
mov
iret
dec
cmp
test
cmpb
popf
and
pop
popa
repz
fs
pop
in
ret
sahf
add
add
add
jecxz
lock
cli
rolb
push
sub
lea
mov
daa
into
dec
enter
iret
mov
adc
mov
and
das
hlt
jg
sub
push
xchg
test
test
push
xor
test
mov
mov
outsl
push
xor
add
ret
jp
cs
push
fildl
ljmp
cld
sti
mov
aad
add
mov
or
cmp
add
addl
mov
cmpsb
inc
divl
xchg
add
push
sbb
dec
dec
push
adc
xorl
xchg
jl
and
mov
dec
xchg
test
xchg
incl
scas
roll
pop
clc
jg
xchg
cld
lds
mov
cld
icebp
mov
mov
inc
ss
ja
push
test
pop
test
pop
rolb
inc
adc
andl
push
test
push
popa
addl
jp
popf
testl
shl
clc
imul
movsl
jo
outsl
xchg
stos
aas
movsl
adc
mov
lahf
repnz
mov
jno
divb
sbb
sti
insl
daa
pop
subb
adc
fwait
mov
in
xor
pop
out
add
stc
inc
xor
adc
stc
js
sbb
orb
loop
add
inc
push
pop
xor
and
xor
inc
sub
add
add
subl
sub
loop
dec
dec
push
daa
xor
cmp
into
das
or
mov
mov
shlb
loopne
lret
movsl
shrl
mov
test
dec
adc
sbbb
rcll
dec
out
pop
fsub
mov
pop
mov
std
dec
dec
arpl
dec
aaa
mov
sarl
movsl
add
leave
push
ljmp
test
aaa
adc
or
adc
not
addr16
fcoml
mov
in
shr
stos
stc
jp
ja
cmpsl
std
sub
pop
mov
outsl
into
adc
leave
pop
fwait
mov
dec
or
divl
and
inc
cld
sub
xchg
jecxz
push
orl
mov
mul
jae
out
fimuls
adc
push
mov
xor
loopne
xor
xor
cmp
cmp
lret
push
mov
cmp
arpl
xor
ss
nop
daa
daa
push
data16
adc
pusha
pop
test
shlb
adc
inc
cld
in
cli
scas
test
sbb
push
jmp
xchg
iret
pop
addr16
mov
les
lea
dec
xlat
sbb
add
test
inc
push
mov
jae
lahf
loop
inc
xchg
test
cmp
dec
dec
cmp
cld
insl
inc
xchg
aas
mov
dec
sbb
aad
jge
add
sbb
sti
pop
std
jle
dec
sbbl
xor
or
pop
insl
pop
sub
mov
sti
or
bound
add
test
xchg
mov
and
ds
mov
jmp
push
cld
test
iret
prefetch
addb
mov
xchg
jmp
adc
add
rorl
cmpl
fbstp
add
pushf
xlat
arpl
dec
push
push
cmp
lods
and
mov
jno
in
add
lahf
cmp
fbld
and
pop
mov
aaa
pop
test
js
fsubrs
pop
push
and
mov
and
insb
ja
mov
fdiv
or
fildll
out
ss
in
cli
repz
addb
dec
xchg
mov
in
decl
rorl
inc
cli
mov
jbe
dec
lds
setne
jb
lea
std
decl
add
xor
sbbl
jecxz
inc
faddl
inc
test
push
or
out
mov
sbb
insl
sbb
shrl
in
inc
xor
xor
inc
sbb
sub
or
or
jmp
dec
dec
jecxz
or
adc
jle
push
mov
inc
add
test
flds
xchg
and
hlt
repnz
add
jns
fs
or
jb
mov
sbbl
pushl
test
jg
dec
cmp
mov
clc
xchg
xor
mov
xor
xor
fsin
out
push
xor
insl
jg
pop
dec
aas
ss
notl
call
sbbb
add
les
loope
imulb
push
jg
in
jge
mov
insb
lret
or
mov
out
cmpsl
lret
mov
adc
pop
fstps
jle
ds
test
adc
popf
add
dec
fs
testw
inc
lock
mov
push
repnz
adc
inc
mov
sub
push
arpl
in
add
inc
mov
fnstsw
mov
mov
dec
sbb
sti
push
in
push
or
rcrl
es
rorl
push
mov
repz
push
push
clc
iret
push
dec
not
push
loopne
dec
aam
add
ret
repnz
fistl
or
or
mov
data16
pop
push
insl
fnstsw
cld
shlb
mov
sub
sbb
test
or
sbb
sub
or
xchg
data16
mov
mov
in
push
fbstp
xor
mov
outsl
test
xchg
push
jo
dec
mov
sbb
daa
fistpll
dec
add
fisttpll
jecxz
rcrl
or
test
cld
inc
add
pop
iret
jl
cmp
in
mov
ds
pop
dec
jno
stc
addl
mov
xchg
ljmp
ret
push
in
or
mov
dec
or
adc
inc
or
mov
xor
jb
sbbl
adc
mov
gs
out
or
pop
orl
mov
sarb
dec
pop
xor
call
pop
dec
mov
lock
push
in
dec
inc
mov
mov
push
repz
xorb
pop
lar
jmp
in
lods
fwait
jns
out
and
mov
sbb
scas
lcall
daa
sbb
adc
arpl
addb
push
mov
add
pop
js
or
dec
xor
icebp
out
or
push
js
insb
shlb
push
pop
cmpsl
hlt
fisttpll
mov
sbb
push
sbb
imul
jg
pop
pop
orb
or
inc
filds
or
or
rolb
add
scas
mov
ja
push
mov
insl
or
js
jle
xchg
jo
push
sti
jmp
mov
mov
add
add
mov
stc
iret
xor
jmp
mov
clc
sub
mov
mov
pop
sbb
fucomip
mov
sbb
xchg
push
filds
insl
aam
out
or
push
fdivrs
adc
mov
test
or
ds
cmp
lret
out
mov
add
xlat
mov
ret
jno
or
push
pop
push
push
xchg
adcb
jle
add
mov
mov
lock
test
ja
add
ret
aas
push
jle
dec
adc
push
cli
adc
sub
or
and
dec
test
mov
inc
cmc
in
cmc
xchg
mov
aaa
repnz
or
sbb
pop
mov
in
lods
dec
imulb
movl
lods
dec
push
enter
faddl
lds
inc
testb
add
jb
bound
popa
shrb
fldenv
cmc
inc
loope
lret
jnp
aaa
add
fdivr
mov
in
pop
fldenv
fstpl
jae
cmc
lds
pop
popf
mov
mov
insl
sbb
gs
dec
insl
das
push
iret
jmp
incb
dec
sti
jmp
divb
stc
jo
loop
add
cmpsw
or
add
mov
add
les
addr16
aaa
imul
pop
dec
loopne
add
mov
sub
pop
icebp
mov
mov
fs
nop
inc
cmc
adc
mov
jno
pop
or
jle
iret
push
in
push
outsl
aad
push
add
dec
or
out
mov
mov
aad
outsl
ret
pop
in
sbb
xor
mov
xchg
out
pop
dec
adc
mov
fldl
lds
xor
call
in
add
dec
fnstenv
push
or
rcrb
sub
mov
mov
mull
fisubl
pop
fwait
mov
mov
mov
je
arpl
xor
out
in
fstpt
out
sbb
scas
inc
popa
adc
pop
cwtl
insb
pop
idivb
cmp
and
icebp
and
xchg
test
pop
aas
es
jb
add
stos
cmp
clc
cmp
mov
ret
dec
mov
icebp
pop
xor
pop
pop
or
repz
outsl
cs
aas
bound
movsl
ret
lods
in
or
out
mov
hlt
pop
and
mov
push
or
shlb
mov
in
cld
insl
std
inc
pop
xchg
push
xor
inc
mov
mov
lret
pop
out
aas
or
jle
xchg
gs
fistps
fsubr
pop
insb
in
aaa
and
shl
fs
lret
ljmp
pop
aam
jp
push
test
popa
loopne
fstpl
gs
fistps
pop
jmp
mov
aam
xor
arpl
adcb
popf
std
ss
jle
rcll
or
scas
in
loope
add
push
xor
push
aas
xor
sbb
adc
stc
jl
mov
add
fisubs
inc
repz
and
jmp
gs
push
pop
int3
sub
ljmp
das
xor
dec
xor
bound
xor
pop
repnz
or
addl
popa
movd
lret
shl
pop
and
or
ss
push
sub
or
in
popa
jnp
insl
jle
or
mov
jae
inc
ljmp
insl
rcl
pop
mov
vmovaps
jmp
add
xchg
fisttps
das
loopne
bound
fimull
lret
lock
testl
cmp
push
push
insl
mov
ret
mov
mov
jbe
jns
pop
pop
inc
mov
dec
cmpps
enter
mov
leave
inc
incl
je
mov
shrl
sub
mulb
cld
icebp
and
mov
push
jne
out
and
repnz
subb
out
sbb
add
jg
insl
mov
xchg
cmc
mov
add
lret
dec
fildl
or
jg
dec
mov
ljmp
push
sub
lock
xchg
stc
repz
sbb
int
ret
lods
mov
add
mov
cmp
repnz
lods
mov
and
data16
mov
push
jb
mov
sub
gs
mov
push
mov
pop
push
adc
movsb
std
add
sahf
mov
addr16
data16
pop
and
fsqrt
iret
adc
decl
aam
pop
jle
stc
incb
mov
pop
lea
scas
push
fs
cmc
sbb
jne
in
lret
ss
push
in
ret
jecxz
popa
lret
pop
cmpb
movsl
clc
and
jmp
imul
aas
sbb
xchg
pop
jmp
stc
push
fldl
stc
imul
pop
pushf
insl
mov
push
cli
and
jecxz
inc
push
mov
ss
pop
jmp
push
out
or
sub
out
sbb
or
out
adc
xor
jecxz
cwtl
push
cli
insl
int
jmp
jge
clc
mov
shlb
dec
jge
fprem
pop
jecxz
cld
pop
repnz
mov
mov
int
insl
inc
or
xor
jmp
aaa
mov
cmp
push
jnp
push
sti
pop
push
mov
sub
or
sub
dec
add
enter
sbb
push
pop
insb
icebp
mov
incb
incb
inc
int3
or
loopne
adc
fiadds
jmp
outsb
aad
push
pop
jae
incl
test
inc
js
sbb
jle
sbb
sbb
es
adc
inc
hlt
aaa
sub
incl
sub
out
dec
adc
movl
pop
xor
inc
xor
push
es
push
sub
jmp
sbb
sbb
fiaddl
pop
mov
shll
push
lahf
xchg
push
add
ljmp
sbb
or
pop
add
arpl
pop
jne
jecxz
mov
adc
lods
out
inc
push
mov
incl
mov
mov
test
mov
imul
sarl
in
ret
cli
test
sub
iret
mov
mov
mov
incl
mov
cld
jle
sti
jle
cli
dec
cmc
outsl
sarb
lcall
ss
imul
pop
add
jle
dec
push
adc
in
pop
mov
fs
xor
lcall
loope
incl
addl
add
or
mov
jg
pop
addl
loop
addl
cld
dec
jb
cmp
cli
lcall
pop
ret
cmp
cld
pop
push
pop
mov
std
inc
outsl
mov
jo
dec
push
xorl
xchg
inc
push
orb
sub
sti
cmp
inc
jl
cmp
int3
loopne
repz
stc
inc
jno
pusha
inc
cmc
fcomps
push
cmp
xchg
sbb
fstl
add
mov
int
xor
pop
daa
push
sub
subb
aas
incb
dec
pop
xchg
xchg
clc
xchg
mov
pop
inc
inc
inc
jle
pop
ja
addl
or
push
cmpb
add
mov
dec
decl
jnp
stc
leave
std
or
mov
xchg
push
pop
mov
add
mov
aad
dec
jne
sbb
xor
mov
sbb
pop
push
mov
sbb
xor
add
dec
repz
mov
push
sub
add
mov
fs
fildll
lahf
test
mov
pop
xchg
dec
lcall
xor
pop
in
hlt
push
outsl
sbb
testw
arpl
push
insb
add
cltd
lods
aad
dec
jmp
sbb
or
jmp
addb
frndint
std
push
int3
test
sub
test
sub
push
shl
clc
cmp
rcrb
gs
pop
insl
outsl
cld
or
add
cld
xor
pop
mov
jmp
or
inc
insb
add
jnp
cmpsb
push
cmpsb
es
stos
icebp
jne
pop
imul
jb
cmp
bsr
int3
push
xor
popf
rolb
data16
adc
ret
mov
lock
sub
std
push
out
xor
imul
add
push
xorl
aaa
cmpb
sbb
cmp
out
add
mov
xchg
push
xchg
loopne
mov
pop
ljmp
add
imul
add
pop
sub
iret
cmpl
jno
push
jl
cli
xor
arpl
daa
push
stc
sub
cli
add
std
sbbl
vcvtsd2si
fyl2xp1
xor
rcr
dec
add
stos
pop
jecxz
cld
xchg
add
mov
stos
loope
or
insb
ds
pop
mov
test
negl
jl
jge
shll
imul
jns
cs
ja
pop
daa
cmpsb
test
ljmp
mov
cmp
test
push
xchg
in
in
repnz
or
mov
xor
daa
mov
cs
test
dec
repz
cld
pcmpgtd
or
mov
cmc
hlt
mov
and
mov
adcb
pop
leave
jne
test
jnp
ja
cs
sub
pusha
inc
hlt
test
pop
add
test
inc
xchg
cmp
jo
xor
gs
push
ja
dec
dec
add
pop
outsb
adc
mov
dec
adc
sahf
lcallw
and
dec
jg
inc
or
xchg
xor
inc
ja
inc
jp
sub
push
add
mov
std
insb
aaa
push
pop
or
into
pop
jecxz
out
loope
add
or
pop
push
lret
or
jnp
lock
mov
push
mov
out
cli
das
cmp
and
jno
cli
push
gs
pop
divl
mov
dec
xchg
jmp
sbb
cmp
loop
pop
xlat
jo
jmp
or
cmp
cmp
pop
xor
gs
pushf
cld
shl
sbb
push
pop
test
mov
or
leave
insl
sub
pop
add
in
out
dec
cmp
dec
adc
sbb
in
es
dec
cmp
sub
and
mov
js
add
ss
popa
push
mov
stc
idiv
jmp
cmpsb
sub
popa
lcall
fists
sarl
decl
adc
ja
mov
fdiv
mov
jns
testl
add
or
mov
orb
inc
outsb
cmp
rcrl
fcom
jb
and
or
mov
fs
std
lcall
repz
jno
sahf
hlt
cmp
add
push
push
out
arpl
jmp
or
hlt
ss
imul
fcomp
or
cli
into
inc
jle
cld
out
push
hlt
push
mov
mov
mov
dec
mov
add
pop
push
cmpb
icebp
jb
jge
nop
outsl
jmp
clc
out
jl
cld
jo
jle
cli
jo
lcall
dec
cli
int3
or
pop
xor
dec
loop
jns
std
aaa
xchg
leave
add
push
loopne
cli
add
pushl
jg
inc
add
or
jo
dec
dec
adc
sti
xor
add
jb
and
fcmovnb
mov
orb
jne
or
add
add
ds
sbb
pop
negl
mov
leave
lret
enter
dec
test
jmp
orb
mov
mov
mov
mov
loop
cmp
mov
lods
loope
xchg
sub
aam
mov
pop
dec
in
hlt
les
shl
cmp
daa
mov
fninit
mov
dec
sahf
out
lret
jecxz
mov
repz
sti
dec
repz
out
cmp
pop
test
dec
cmp
daa
in
push
add
adc
lret
repz
popa
dec
arpl
imul
pushf
mov
mov
fldl2e
popa
cmp
adc
jge
dec
mov
mov
popa
test
jmp
bound
dec
shll
adc
in
mov
pusha
mov
cmpsb
imul
cs
addr16
gs
data16
shll
in
mov
ret
addr16
push
sahf
pop
cs
imul
stos
push
in
jmp
xchg
imul
shl
in
sub
outsb
shll
sbb
xor
dec
shll
pop
dec
inc
adc
xor
xor
sbb
movsb
mov
push
inc
cmp
mov
push
pusha
bound
and
ja
sub
cmpsb
xchg
dec
fdivs
cwtd
aam
in
jmp
adc
push
push
push
mov
movsl
jl
sbb
xor
insl
or
std
cli
divb
dec
shrl
outsl
jno
aad
dec
insb
xchg
lret
in
shll
mov
xor
dec
sarl
daa
push
popa
fs
dec
jge
shrb
push
fwait
sub
mov
push
sbb
cld
inc
xchg
fcomps
dec
mov
sbb
mov
inc
cmp
imul
cmp
add
dec
push
popa
sbb
xchg
mov
mov
sbb
and
fs
add
and
leave
subb
or
inc
xor
jns
or
adc
pop
xor
adc
out
repnz
fs
pop
out
daa
or
xchg
in
push
jecxz
daa
bound
out
pop
xor
xchg
pop
mull
push
mov
xchg
xchg
pop
jecxz
sub
fnstenv
mov
push
leave
fists
push
pop
cmpsb
fnstcw
add
idivb
dec
pop
adc
xchg
mov
arpl
cs
lret
in
pop
adc
sbbb
cltd
bound
pop
lods
mov
arpl
mov
dec
inc
sub
pop
cs
lock
fbld
popa
xor
jb
ret
arpl
scas
mov
shll
push
pop
mov
dec
dec
mov
lcall
in
imul
cs
out
leave
mull
data16
imul
mov
ss
shl
lock
adc
push
insb
daa
shll
jno
pop
dec
shll
dec
adc
and
xor
ljmp
push
xchg
imul
shrl
adc
fs
fwait
lcall
iret
or
mov
shll
in
add
lcall
add
das
xchg
imul
int
jmp
mov
jnp
addl
sub
ja
cld
cmp
insb
dec
outsl
push
sti
push
stc
inc
bound
push
fs
insb
pop
inc
addr16
cmp
jb
push
popa
insl
jno
pop
addr16
imul
jmp
pop
pop
imul
std
pop
sti
xchg
dec
insl
or
pop
insl
bound
mov
addr16
popa
inc
arpl
pop
insl
ja
andl
outsb
arpl
imul
fidivrl
cld
inc
fs
pop
inc
outsb
pop
pusha
incl
push
pop
addr16
dec
mov
ja
jo
mov
push
push
jno
inc
fs
mov
pop
pop
pop
cmp
repnz
rol
mov
inc
daa
jae
lock
inc
pop
inc
pushaw
aas
clc
incw
addr16
cmp
push
ds
jbe
outsl
loop
std
mov
imul
outsl
bound
fs
pop
jb
insl
in
lods
std
jbe
cli
inc
lcall
xchg
adc
push
mov
pop
cmpl
out
pop
sti
lcall
outsb
inc
imul
bound
dec
stos
xor
cmpsb
decl
add
push
dec
inc
addr16
mov
movl
pop
pusha
dec
pop
push
or
pusha
jb
pop
call
fdivrp
jo
aas
insl
outsb
insw
fildl
pop
imul
cmp
insb
stc
xor
pop
jo
inc
dec
pop
fdivrp
mov
addr16
ja
aas
dec
pusha
imul
mov
dec
sub
outsl
cmp
cld
pmulhw
push
sti
dec
pop
cmp
insb
insl
pop
outsl
fwait
pop
fs
dec
insl
outsl
bound
inc
pusha
cli
sbb
sub
sub
pop
shrb
mov
push
pop
bound
push
int3
outsl
inc
inc
or
pop
stc
pop
clc
jbe
popa
aaa
xor
dec
jo
pop
rol
clc
inc
imul
push
gs
pop
outsb
std
and
dec
popa
addr16
inc
cmp
divl
cli
outsl
lahf
dec
and
inc
inc
cmp
pop
sbb
dec
push
insl
or
int
std
clc
cmp
pusha
insl
cli
push
cld
cmp
loope
iret
sbb
aad
cli
push
ds
outsb
jo
std
add
popa
cmp
cli
in
push
push
inc
push
ljmp
push
pop
bound
outsb
pusha
outsb
dec
arpl
addr16
push
mov
sub
push
arpl
hlt
jo
pusha
data16
pop
inc
pop
popa
push
shrl
std
aaa
outsb
inc
imul
push
ds
cs
pop
pop
mov
pop
arpl
jo
mov
cmp
ja
fcmovnu
sbb
inc
pop
push
arpl
cmp
or
pop
stos
bound
arpl
pop
imul
ret
outsb
fs
sbb
sbb
inc
cmp
mov
fs
lods
outsl
insl
sub
outsl
ja
cld
dec
arpl
jno
jo
mov
dec
pop
gs
insb
sub
outsb
sbb
pusha
fs
mov
movsl
rcr
enter
pusha
pop
cmp
sbb
fildl
inc
sub
sbb
ljmp
cmp
dec
cmp
sub
pop
ds
push
and
imul
std
xchg
insl
mov
outsb
insl
mov
adcb
aad
adc
jno
inc
scas
arpl
lea
cli
popf
std
cmp
xor
sbb
pop
inc
out
bound
pop
xchg
lods
jmp
test
push
jb
punpckhdq
xor
xchg
dec
das
in
popa
imul
adc
clc
jg
jmp
inc
push
push
pop
insl
jo
arpl
fdivrp
mov
sti
sbb
daa
cmp
jbe
sub
sbbl
repz
add
cmp
sub
daa
push
mov
cmp
cmp
dec
mov
jmp
dec
aas
cmp
cmp
cmp
cmp
outsl
std
cmpsb
push
inc
cld
cmp
aaa
pop
imul
pop
push
aas
push
ss
and
push
push
in
jno
aas
cmp
cmp
sbb
gs
aad
jo
sub
arpl
pop
push
sub
cmp
sub
mov
fst
daa
adc
cmp
pushl
pop
daa
mov
sub
and
jmp
inc
ret
cmp
outsb
jno
inc
push
insl
out
pop
test
adc
fcmovnu
cmp
cmp
dec
fs
push
cmp
aas
inc
stc
add
mov
pop
je
test
test
aaa
push
xor
outsb
lds
cmp
pop
or
xchg
sub
in
cmp
mov
arpl
pop
mov
test
push
ja
sbbl
insl
push
sub
push
cmp
dec
cmpb
push
cmp
aas
dec
sub
das
pop
add
mov
gs
xchg
push
pop
das
inc
in
sub
xchg
pop
cmp
in
call
imul
dec
cmp
pop
pop
push
fimuls
jle
pop
add
aas
ds
cmp
sbb
push
ret
dec
outsl
push
adc
cmp
cli
mov
lahf
inc
cmp
outsb
mov
and
and
fstpt
dec
cmp
push
push
ja
cld
cmp
pop
cmp
ret
xor
data16
lahf
rcrb
cmc
mov
mov
push
jg
popa
pop
test
pop
jp
cmp
cmp
cld
inc
dec
push
jne
xor
hlt
sub
pop
push
pop
ja
mov
mov
imul
outsl
inc
pop
scas
mov
jo
xchg
roll
jno
mov
inc
mov
fisttpl
push
sub
adc
cmp
dec
inc
inc
xchg
mov
jbe
mov
stc
insl
lahf
je
or
test
outsl
fs
cmp
pop
cmp
ror
mov
push
mov
push
dec
fdivl
jae
imul
xchg
cli
xchg
ss
inc
inc
jne
or
cld
push
cmp
fdivr
outsb
cld
pop
mov
outsl
adc
or
pop
pop
cmpsl
ret
outsl
shlb
mov
repz
imul
adc
xchg
jmp
lock
loope
mov
mov
pop
or
fsubrs
pop
fldenv
dec
dec
lock
dec
and
pop
pop
xor
insb
xchg
sarl
or
pop
popa
insl
movsl
pop
push
xchg
xor
addr16
sbb
pop
pop
push
pop
in
dec
popa
vpandn
addr16
or
sub
in
test
or
cld
pop
sub
mov
sbb
gs
sar
loope
arpl
addr16
or
sti
mov
pop
pop
out
popa
push
mov
or
jmp
pop
ret
jbe
mov
mov
mov
insb
xchg
lret
in
push
ljmp
push
clc
or
daa
push
cmp
dec
xlat
sub
adc
cmp
imul
ret
test
dec
rcr
out
add
lods
add
jg
std
pop
push
inc
xlat
movsl
ljmp
pop
repz
cmp
aaa
jle
icebp
pusha
push
imul
imul
mov
imul
aas
arpl
push
popaw
repz
xor
mov
fs
aaa
js
daa
or
jecxz
mov
add
pusha
add
xchg
jne
pop
push
mov
stos
out
inc
pusha
push
aaa
iret
dec
imul
insl
lods
push
test
imul
imul
sbb
cvtdq2ps
ss
insl
sbb
das
cli
je
les
xor
sub
imul
pop
mov
subl
dec
sub
inc
aad
fnstsw
push
push
aas
pop
insl
pop
fwait
rolb
mov
dec
sub
cmpsb
pop
mov
mov
subb
sub
shrl
jno
sub
pop
push
xchg
adc
in
push
cmp
loope
decb
adc
sbb
stc
mov
pop
and
pusha
push
pop
adc
xor
out
add
popa
sbb
push
insl
and
mov
pop
inc
mov
push
das
dec
pop
push
testb
add
jno
pop
jae
adc
cmp
scas
dec
cmp
pop
mov
pop
jb
aaa
cld
inc
and
addr16
jne
mov
dec
pop
mov
outsl
outsl
loopne
cmp
cmp
adc
pop
cld
sub
sub
imul
gs
gs
adc
cmc
pop
loop
mov
insl
arpl
bound
imul
lahf
pop
sbb
pop
sub
outsb
ja
shrl
jo
jne
jl
add
mov
imul
add
push
dec
insl
inc
lea
add
or
outsl
push
xchg
pop
movntps
xchg
bound
stos
fisttpll
sub
dec
dec
mov
je
cmp
movsl
movsl
bound
aaa
xor
dec
gs
jne
add
xor
arpl
dec
pop
mov
push
aad
aas
xor
sti
inc
dec
ds
dec
cmp
jae
dec
dec
cli
add
xchg
add
and
test
push
cli
and
cltd
pop
and
and
negb
cld
fisubl
inc
scas
dec
inc
dec
dec
inc
fidivrs
sbb
dec
dec
dec
lahf
add
or
insl
jmp
jp
cmp
sbb
jnp
idiv
push
inc
dec
push
dec
sub
sub
or
mov
outsl
ss
nop
icebp
mov
sub
sbb
push
and
daa
push
add
aaa
mov
imul
sub
fidivs
xor
ja
sub
fisubl
sub
dec
add
xor
jno
add
mov
or
adc
cmp
sub
sbb
adc
push
sub
and
fdivs
push
test
inc
dec
mov
imul
pop
sub
and
add
inc
sub
fsubl
inc
inc
sub
sub
xchg
dec
mov
dec
dec
push
jbe
dec
sub
sbb
push
or
cmp
pop
stos
pop
std
popa
outsl
cmp
popf
outsb
sub
push
data16
push
lods
jmp
sbb
add
xor
daa
inc
pop
insl
lea
bound
sbb
and
inc
dec
fstpl
int
frstor
xor
roll
xlat
mov
pop
jmp
popa
sub
popa
xor
outsl
xchg
es
lods
add
xor
test
mov
jne
sub
and
sub
and
dec
fnstsw
xor
xchg
sub
je
pop
pop
cs
add
push
xor
mov
outsl
cmp
arpl
jae
push
dec
das
lock
or
sub
pop
jb
add
sub
addr16
mov
mov
push
sahf
gs
cmp
jo
push
js
and
xor
jmp
sub
pop
xor
movl
push
cmp
loope
mov
sub
cmp
pop
loopne
xor
xor
adc
push
xor
loope
push
call
stos
xor
shrl
mov
mov
jg
inc
mov
jns
and
mov
fimuls
cmp
pop
aad
aaa
pop
popa
jae
fld
imul
std
sbb
dec
jbe
mov
xchg
mov
sbb
xor
imul
xchg
lcall
pop
imul
sub
daa
push
pop
shlb
and
rcr
sub
lds
or
sub
cmp
mov
bound
sub
in
and
sub
or
ficompl
cmc
cmpsl
and
arpl
mov
adc
das
xor
fwait
xchg
and
sub
and
jae
stos
dec
dec
pop
xor
push
pusha
outsl
sahf
push
pop
cmp
imul
sub
push
xor
lea
mov
jno
aad
push
xchg
or
xlat
imul
add
scas
ss
inc
push
mov
cmc
addr16
sub
pop
fs
pop
mov
ds
adc
push
jp
call
pop
dec
dec
aas
jo
bound
mov
arpl
dec
dec
sti
adc
inc
imul
push
cmp
pop
add
inc
ljmp
mov
rcrb
jbe
jae
arpl
mov
movsb
arpl
add
inc
sarl
sbb
pop
dec
pusha
pop
bound
pop
cmp
mov
inc
arpl
aas
fiaddl
ja
cmp
fildl
jmp
push
daa
pop
sbb
arpl
xor
cmp
pop
ds
insl
dec
push
push
fnsave
inc
adc
dec
sub
loope
shrb
cltd
add
fldl
jb
dec
sub
jno
fisubrl
jb
test
out
inc
xor
push
jb
leave
imul
and
cmp
outsl
stos
mov
push
jbe
shlb
inc
fstpt
mov
cmp
arpl
arpl
mov
mov
filds
lds
cli
or
inc
sub
dec
dec
push
sbb
pop
andps
xchg
pop
lods
xchg
add
incl
lods
push
lods
mov
pop
data16
mov
jae
jne
je
xor
aaa
fidivrs
inc
dec
inc
pusha
outsb
dec
pop
cmp
push
jno
daa
jae
adc
inc
pop
sbb
mov
dec
addr16
inc
ss
push
fiaddl
xor
pop
pop
pusha
in
cmpl
gs
jp
bound
dec
fs
insl
mov
aas
inc
ret
outsb
cmp
cmp
bound
addr16
outsb
add
loope
stc
dec
popa
cmp
pop
pop
dec
sub
popa
fists
sub
and
inc
data16
jg
xor
jo
inc
ds
inc
and
insb
addr16
pop
imul
pop
jne
pusha
pop
dec
fs
sub
das
cld
jo,pn
jne
ds
inc
sub
imul
inc
iret
jb
stc
add
inc
sub
and
fs
aad
push
mov
dec
aam
xor
pushl
add
xor
jbe
pusha
mov
or
mulb
daa
or
mov
and
push
jle
mov
sub
adc
in
pop
mov
je
data16
pop
pop
adcl
stos
imul
mov
stos
pop
cmp
cmpb
je
scas
push
mov
cmp
ds
ret
or
addl
jae
dec
outsb
stos
mov
imul
js
jg
cmpsb
pop
add
push
fistpl
test
dec
pop
out
incb
xor
insl
pop
pop
jae
hlt
jg
lods
sub
push
xor
pusha
jne
cli
xor
dec
add
sub
adc
pop
cli
jb
or
sub
sub
sub
decl
sub
shrl
sub
sub
adc
sub
sub
lock
lahf
sub
xor
pop
sub
das
and
decl
cld
dec
das
dec
sub
lods
insb
sub
ja
subl
xchg
das
lcall
cmpsl
sub
cvtps2pi
das
inc
imull
sub
decl
push
xor
outsb
xor
subb
mov
das
shrb
shll
lock
mov
xor
das
push
xor
xor
lds
or
xor
xor
xor
jle
fnstenv
xor
add
jg
push
xor
ss
mov
xor
jg
sub
icebp
xor
aaa
cli
add
pop
ss
cmp
std
jg
ss
xor
fs
xchg
xor
aaa
mov
les
fnstcw
jg
mov
aaa
and
aaa
cmp
cmp
insl
xor
cmp
cmp
pushl
cmp
cmp
xor
pop
cmp
fs
daa
pushl
cmp
sbb
aaa
incb
sub
sub
cmpsl
cs
sub
cs
sub
cld
sub
das
sbb
cmpsl
sub
mov
cs
sub
xor
in
divl
cld
mov
or
sbb
and
cs
sub
test
sti
pop
clc
call
xor
das
into
xor
xor
inc
xor
mov
nop
xor
mov
xor
xor
pop
xor
xchg
xor
subl
xor
xor
into
jbe
shll
xor
xor
pop
loopne
pushl
mov
xor
pop
aaa
es
scas
xor
mov
mov
or
cmp
push
xor
fdivs
sti
jecxz
jmp
aaa
sbb
lds
ss
cmp
jns
xchg
fdivl
in
cmp
add
cmp
xor
mov
sarl
xor
test
cmp
cmp
sbb
cmp
insl
cmp
and
mov
cmp
imul
cmp
cmp
aaa
jno
jns
cmpl
aaa
mov
mov
cmp
cmp
aaa
fdivrl
cmp
cmp
cmp
aaa
jne
inc
incl
int
add
adc
sub
sub
sub
insb
lock
mov
int3
sub
sub
sub
pop
sub
xchg
sub
sub
cs
mov
sub
sahf
sub
cs
or
adc
das
dec
cs
sub
mov
sbb
ljmp
inc
sub
xor
cs
xor
xor
mov
or
dec
mov
inc
pop
das
hlt
push
mov
imul
xor
ljmp
xchg
xor
xor
popa
xor
iret
xor
xor
xor
xor
cmp
lcall
sub
jo
jg
xchg
mov
popf
xor
movsl
xor
out
push
adc
daa
sub
xor
loopne
mov
jle
aaa
xchg
scas
xor
xor
incl
cmp
cmpb
aaa
xchg
xor
cmp
divb
sti
pushl
sub
cmp
dec
xor
pop
cmp
scas
cli
cmp
cmp
sub
cmp
cmp
ss
cmp
cmp
ss
idivb
cmp
cmp
popa
cmp
mov
mov
mov
aaa
dec
ljmp
cmp
mov
and
sub
push
sub
sub
sub
sub
mov
sub
sub
ljmp
arpl
xchg
sub
sub
sub
and
sbb
cs
sub
jns
das
js
das
or
xor
xor
das
lock
std
ljmp
xor
inc
xor
les
xor
aaa
xor
push
mov
xor
js
and
xor
ss
xor
ljmp
mov
xor
cmp
cmp
cmp
popa
cmp
jae
mov
aad
cmp
aaa
xor
fildll
insb
xchg
inc
dec
xor
das
pop
fnstenv
lock
xor
xor
xor
mov
or
pusha
xor
jge
mov
xor
dec
jg
fidivl
xor
xor
xor
outsl
jg
ss
xor
les
and
in
ss
xor
fisttpl
dec
aaa
aaa
inc
outsl
xor
mov
lods
lret
mov
xor
aaa
ljmp
xor
stos
decl
jb
jle
lea
xchg
xor
xor
aaa
mov
cmp
or
aaa
jecxz
adc
cmp
int
aaa
inc
cmp
jne
sahf
aaa
lods
shll
enter
loope
jecxz
idiv
outsl
aaa
xor
xor
pop
xor
jmp
in
repnz
cmp
popa
inc
stos
jg
jno
lea
pushf
cmp
pop
pop
outsl
std
test
sub
das
dec
sub
or
cli
lcall
fldt
adc
das
aaa
in
arpl
sbb
mov
repz
sub
sub
sub
pusha
out
daa
or
outsb
jnp
and
dec
pop
inc
push
inc
insb
imul
je
gs
unpckhps
popa
je
sbb
dec
idiv
jg
push
dec
inc
push
push
inc
push
inc
pop
jo
ja
pop
outsb
jns
jae
popa
insl
gs
cmp
fucomi
add
outsl
data16
popa
jb
dec
imul
call
mov
xor
push
outsl
push
outsl
xor
stc
mov
sbb
arpl
add
cs
imul
ja
adc
jl
jae
and
fistpll
and
jo
jae
arpl
arpl
imul
dec
and
jae
cmp
bound
and
adc
jo
pop
xchg
adcb
pop
hlt
vmwrite
data16
mov
jbe
pop
lahf
lock
jns
jo
adc
push
jb
jns
xor
xor
or
sub
push
gs
add
mov
jb
outsb
cmp
std
and
outsl
outsb
imul
jae
jo
push
add
iret
imul
inc
adc
popa
gs
jg
bound
out
lahf
xor
gs
popa
push
ds
pop
mov
js
adc
push
push
adc
jns
fucomi
data16
jmp
inc
fs
imul
insb
andl
jne
dec
ret
push
inc
inc
xor
push
lds
je
dec
lods
inc
les
fs
jb
adc
pusha
outsl
out
sub
cmp
push
or
leavew
mov
or
dec
mov
pop
testb
cmpsl
sbb
dec
jae
test
fildll
xor
lds
roll
outsb
adc
fdivrs
pop
sub
jbe
out
fiadds
hlt
outsl
dec
push
and
fs
insb
imul
daa
push
sti
imul
insb
sti
xor
jae
and
imul
xchg
pop
insl
jae
mov
mov
push
inc
ja
imul
inc
ja
cmp
mov
ljmp
push
out
adc
icebp
xor
add
adc
ljmp
lods
loope
fwait
xchg
lock
jnp
mov
add
add
outsl
daa
add
ja
outsl
add
iret
aas
mov
sbb
add
int
add
add
out
fdiv
int3
pop
lcall
pusha
inc
repz
and
mov
adc
psubd
outsl
packssdw
and
or
add
popf
sbb
mov
add
xor
push
xor
scas
add
or
jg
inc
push
add
add
movsl
add
ja
lcall
lods
add
ja
mov
out
lret
xchg
mov
mov
das
mov
ja
fidivrs
push
xchg
repnz
inc
arpl
jbe
arpl
xchg
add
incl
mov
andl
mov
and
mov
sub
ljmp
sti
unpckhps
or
decb
add
add
inc
dec
push
mov
mov
adc
sub
inc
repnz
cld
add
add
incl
rolb
nop
add
cmp
add
sub
cltd
shlb
jns
cltd
incl
stc
add
push
sbb
adc
xchg
add
push
test
incl
addb
imul
jg
sub
fdivr
decl
add
mov
add
add
push
add
jb
jbe
pusha
cmc
cs
sub
add
add
add
sub
adc
lret
data16
gs
je
inc
imul
gs
popa
jo
imul
gs
pushw
ret
fisttps
inc
insb
jne
push
and
gs
push
imul
in
add
outsl
jae
dec
popa
outsb
fs
outsl
sti
je
imul
jbe
inc
js
and
insl
jo
dec
popa
insl
inc
inc
or
ja
xchg
sbb
test
push
jb
arpl
pop
dec
jo
outsb
or
dec
fs
sbb
into
subb
clc
jne
fldcw
outsw
adc
add
xchg
mov
adc
not
into
xor
jns
and
and
arpl
jnp
push
mov
ret
mov
outsb
mov
jb
insl
mov
sti
dec
outsl
popa
fs
out
jg
mov
lret
fisubrs
dec
je
adc
inc
cld
sub
icebp
gs
outsl
outsl
insb
les
insb
aaa
in
xor
push
lock
outsl
je
inc
enter
inc
xor
test
push
xor
inc
faddp
add
imul
dec
bound
sbb
test
mov
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
sti
mov
mov
decl
or
and
jg
mov
add
mov
jp
call
and
pushl
push
sbb
ljmp
or
repz
and
mov
inc
sub
push
push
jns
aaa
xor
outsl
dec
out
ud0
inc
xchg
fcmovnu
mov
sbb
xchg
sbb
dec
mov
fnstenv
xor
fnstenv
ud0
push
or
icebp
adc
add
insl
fnstenv
push
test
lret
mov
es
pop
push
push
fistl
add
out
movsl
dec
mov
insl
fcomi
insl
mov
adc
or
push
mov
pop
mov
sar
or
out
mov
inc
insl
fstpt
add
mov
aad
in
xor
pop
jbe
or
jno
jo
gs
jo
pop
mov
inc
jb
adc
negb
and
je
wbinvd
pop
insw
and
lods
mov
icebp
pusha
lea
push
sub
ds
fbld
mov
mov
add
ja
sub
arpl
mov
pop
arpl
je
subb
insl
mov
push
xchg
or
insb
or
aas
ficomps
insl
bound
scas
ja
or
out
leave
gs
push
sbb
outsb
arpl
sbb
inc
inc
js
inc
jb
dec
aam
jnp
jmp
jo
outsb
je
je
insl
mov
mov
jae
sbb
ret
inc
insl
sbb
inc
outsb
add
or
cmp
cs
xor
inc
jo
fs
insl
dec
out
cld
or
out
inc
aaa
jne
cmp
sbb
mov
or
fs
pop
fwait
sbb
cmp
jae
gs
stos
inc
or
aaa
jmp
inc
ds
push
outsl
mov
wbinvd
or
mov
pushf
adc
shrb
xor
mov
ja
lret
push
gs
fisubrs
inc
sbb
ja
ret
push
outsb
or
jo
inc
or
ss
push
bound
inc
adc
jg
push
dec
adc
jl
push
inc
dec
add
sbb
pop
ja
sarl
int3
adc
add
add
mov
jbe
fstps
add
adc
fs
or
xor
sbb
add
jae
cmpsb
add
adc
cmp
aaa
test
js
add
xchg
adc
ret
mov
push
cs
jnp
sbb
jb
nop
xor
imul
jb
popa
push
in
add
mov
ss
cs
mov
inc
mov
jnp
mov
jae
or
repz
rcr
leave
lock
jns
add
add
and
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
