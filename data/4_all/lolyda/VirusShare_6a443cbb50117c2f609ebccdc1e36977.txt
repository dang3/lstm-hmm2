mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
pop
out
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
repz
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
pop
push
divl
call
xor
or
pop
int3
dec
cmp
lods
jae
subl
lahf
adc
and
xor
popf
cmp
jmp
sub
cmp
jmp
cs
das
jnp
lea
shrl
jno
test
xor
das
inc
sbb
sti
scas
daa
or
add
je
mov
ret
mov
inc
add
sbb
push
jo
adc
fcomps
mov
ljmp
lcall
adc
sbb
fnstcw
popa
jle
push
pop
push
pop
mov
push
push
jmp
push
push
push
in
mov
push
sub
mov
das
xchg
mov
push
add
adc
or
jl
push
test
sbb
loop
add
xchg
push
call
out
mov
sahf
xchg
int
or
ss
ss
push
lret
cmp
jns
pop
push
dec
inc
rorb
add
fs
jne
jecxz
mov
imul
pop
adc
push
and
pop
subb
cmp
pop
mov
cmp
push
xor
rcll
rolb
lret
mov
sub
das
jmp
mov
mov
mov
xchg
sub
shlb
rcrb
and
out
out
outsb
push
or
sub
or
mov
mov
inc
push
jbe
xor
inc
inc
cmp
mov
cltd
stos
repz
ret
out
and
sbb
adc
and
push
aad
cmp
add
lahf
imul
sub
jo
cltd
stc
inc
xor
sbb
outsb
xor
push
push
test
mov
or
sub
dec
cmp
pusha
adc
push
or
xor
dec
pop
loope
dec
mov
push
cmp
cmp
and
mov
add
pop
lret
xor
es
in
inc
ficoms
adc
movsl
inc
pop
push
jl
push
andl
fmulp
and
dec
lret
add
fwait
popf
add
or
push
lret
enter
add
pop
lcall
jae
enter
imul
negb
mov
decl
mov
retw
mulb
adc
sbb
xor
jbe
mulb
sarb
xor
cli
jmp
mov
ret
pop
data16
or
inc
jecxz
sub
popf
mov
xor
iret
dec
inc
push
adc
aam
xchg
lcall
sbb
pop
mov
lea
pushf
push
pop
mov
mov
push
sbb
sti
cli
mov
pushf
aad
sar
cld
lret
int3
addr16
add
push
in
xor
add
test
jle
push
dec
jns
mov
mov
add
push
cld
dec
adc
sbb
sub
dec
jne
std
sarl
sbb
add
mov
js
nop
mov
mov
xchg
fmull
mov
iret
mov
xchg
movsb
adc
enter
cli
xor
cmc
cmp
jecxz
add
shll
pushf
leave
arpl
ja
mov
insl
jno
int
jb
sub
sub
rdpmc
mov
xor
ret
fistpl
shrl
push
adc
inc
in
loopne
mov
lret
push
sbbl
rclb
fstl
dec
daa
or
mov
fmulp
jecxz
push
mov
mov
inc
sbb
shr
push
sar
mov
push
lea
push
shl
fldt
pop
gs
test
jge
pop
ret
or
stos
cltd
mov
in
pop
insb
out
push
and
mov
mov
xchg
adc
mov
fadds
imul
lea
and
mov
ret
sbbl
mov
cmp
loope
lea
cmp
mov
mov
rcrb
lods
stc
jo
mul
movsl
or
mov
mov
arpl
movsb
or
mov
pop
and
stos
push
xchg
sbb
mov
xor
addr16
and
fmuls
add
lea
dec
xchg
lret
dec
adc
xchg
nop
adc
sbb
in
fcoml
sbb
add
inc
loop
sbb
sub
inc
lret
lock
cmp
roll
mov
xchg
xor
sbb
xor
icebp
xlat
push
push
pop
xlat
add
mov
or
adc
adc
movsl
mov
adc
aam
or
mov
or
and
jp
or
ja
add
adc
mov
dec
sub
popa
jo
pop
sbb
sub
in
add
fwait
push
push
jl
or
dec
sub
push
and
jo
sbb
inc
aad
sbb
sbb
jbe
dec
adc
add
mov
mov
xchg
xor
pusha
aad
add
mov
or
or
cmpsb
jmp
fisttpll
and
rclb
sub
adc
fs
das
adc
pop
xor
fstpt
aaa
mov
pop
and
cmpb
sbb
push
data16
scas
lds
mov
cmpl
mov
cmovbe
andb
add
icebp
ret
cs
lret
xchg
push
push
and
inc
adc
or
sbb
dec
inc
roll
inc
outsl
or
jmp
popf
fsubrs
jl
addr16
push
sbb
bound
push
push
adc
out
or
jge
inc
pusha
test
or
pop
xchg
dec
or
push
enter
mov
cwtl
movsl
sub
cmp
cld
sub
sub
push
je
pop
jle
push
add
mov
psubsb
in
lods
dec
cmp
les
mov
test
lods
cmp
mov
adc
or
test
leave
es
int
ret
xchg
int3
dec
lock
sub
fdivrl
add
or
lock
shr
xchg
xchg
sbb
or
jo
add
aas
and
imul
fs
push
pusha
push
movl
xchg
cli
pusha
inc
sbb
in
mov
clc
add
pop
sbb
les
or
arpl
xchg
aad
mov
sbb
xor
test
push
cmp
movsl
cmp
insb
sbb
inc
loop
jbe
dec
add
add
adc
fcmovnbe
sbb
iret
jge
mov
sbb
loope
xor
push
daa
cwtl
ss
pop
dec
and
mov
dec
xchg
jl
fstps
scas
dec
je
loope
cmpb
mov
push
inc
dec
sbb
pop
js
test
add
les
and
gs
sbb
clc
sbbb
push
mov
pushf
mov
mov
jle
push
out
shll
add
adc
movsb
jecxz
movsb
rcrl
and
push
pusha
js
pusha
push
mov
pushf
sbb
adc
and
adc
jecxz
xor
sbb
out
icebp
pusha
xchg
push
fmulp
mov
adc
cmpl
push
cltd
leave
call
mov
divb
dec
orl
popl
add
and
cmp
or
mov
and
shlb
sub
jl
sbb
mov
and
in
push
fdiv
clc
dec
or
loope
push
jmp
and
jle
adc
shrl
inc
cltd
sub
lods
push
sti
ss
out
sbb
mov
sbb
push
sahf
movsb
sbb
and
stc
testb
mov
or
ret
mov
adc
pop
jno
testb
pusha
icebp
fs
das
or
xor
adc
les
mov
add
dec
lidtl
sbb
mov
daa
xchg
xor
scas
xlat
and
push
cmp
sub
push
dec
int3
sub
fwait
push
pushf
sub
rcr
xor
dec
rcll
mov
cmp
mov
and
pop
int3
push
repnz
cmp
dec
lods
outsl
enter
pushf
sbb
shlb
inc
mov
inc
jl
adcl
dec
sub
addr16
sub
dec
sahf
adcl
adc
scas
dec
lea
popf
adc
lret
dec
push
push
add
cmp
enter
aad
addr16
push
mov
xchg
shlb
or
push
xor
pushf
xchg
and
inc
nop
aad
test
mov
das
cwtl
aad
or
mov
cli
movups
js
sbb
pop
sarb
loop
mov
and
and
cltd
or
dec
and
sbb
adc
ljmp
add
mov
push
fsubl
loop
dec
roll
lock
inc
pop
aaa
xchg
jb
push
jns
mov
pusha
shlb
jle
cmp
xor
sub
push
in
mov
push
add
sbbl
push
pushf
insb
jg
or
push
cmovs
and
xchg
out
add
xor
in
popa
mov
arpl
sub
xchg
fisubrl
ret
jge
sahf
sub
or
faddl
mov
dec
push
push
adc
outsl
push
adc
adcl
lret
add
test
push
xor
insb
xor
jne
add
mov
cmp
popa
sbb
invd
fs
adc
and
push
mov
and
sub
rcrb
je
mov
or
add
add
sbb
popf
add
mov
shll
push
dec
inc
out
or
push
push
int
sub
je
mov
add
movsb
test
push
movsl
lcall
xchg
cmp
mov
push
jnp
loope
sbb
aad
data16
mov
adc
call
vaddsubps
seta
imul
or
leave
jae
daa
jne
pop
sbb
test
pop
cltd
testl
add
mov
add
mov
cmp
jb
push
fildl
and
inc
inc
cmp
jg
jge
mov
arpl
push
or
and
add
jmp
and
and
ror
enter
arpl
shrb
mov
and
and
and
and
and
and
and
and
and
push
and
push
push
and
and
dec
dec
inc
inc
and
and
cmp
xor
and
and
sub
and
and
and
sbb
adc
and
and
or
add
jl
lahf
and
inc
clc
inc
rolb
xchg
out
stc
mov
inc
nop
inc
xchg
xchg
xchg
xchg
xchg
cwtl
pushf
mov
xchg
test
mov
and
xchg
xchg
mov
enter
and
aam
faddl
es
and
lock
sarb
pop
push
mov
sub
out
int
aad
pop
ret
push
cmc
lcall
ret
and
outsb
pop
jge
nop
cmpsl
pop
add
ret
push
add
int3
add
rol
rolb
data16
mov
mov
xor
mov
ljmp
inc
jno
cld
adc
inc
sbb
jbe
dec
in
or
or
scas
push
dec
jno
hlt
or
xchg
popa
cmp
bound
push
dec
xor
adc
inc
mov
lea
ss
pop
test
push
add
into
or
add
out
push
xchg
mov
jne
cmpb
jne
inc
or
push
cmp
je
cmp
repnz
jbe
mov
rorb
cld
inc
testb
std
repz
aam
push
sub
jbe
jmp
push
pop
mov
fldcw
push
push
and
imul
xor
inc
in
mov
mov
mov
int3
and
add
test
lcall
inc
xchg
add
mov
mov
add
das
push
out
inc
lock
push
mov
inc
lahf
mov
and
xor
sub
jl
sbb
test
mov
mov
std
ss
jmp
push
and
pop
fsubr
push
xor
xor
jo
jb
mov
sbb
pop
inc
lea
adc
popf
jecxz
mov
into
int3
add
std
adc
mov
dec
fdivr
aaa
inc
fiadds
or
xor
and
pop
cmp
in
or
add
and
inc
je
add
add
lcall
adc
imul
xchg
test
imul
shll
shl
lcall
push
sub
mov
mov
push
inc
dec
jnp
adc
adc
add
adc
pop
cs
adc
pop
or
sbb
pop
cs
movsl
leave
adc
mov
or
je
mov
popf
or
das
add
insl
inc
add
mov
jp
nop
xor
xor
and
inc
sbb
comiss
jne
xlat
cmp
or
sub
pop
sub
adc
jne
jns
aaa
inc
out
arpl
movhps
shlb
xchg
pop
sbb
xchg
jmp
scas
jnp
push
addl
btr
mov
dec
inc
push
adc
cmpsb
imul
pop
icebp
testl
mov
test
jno
mov
pop
dec
add
scas
imul
out
movsl
addr16
pop
xlat
insb
mov
fwait
pop
dec
or
push
cmp
push
sar
or
loopne
scas
jmp
mov
inc
aas
dec
mov
addr16
dec
add
enter
imul
imul
fnstenvs
fimull
in
add
dec
shrl
adc
add
daa
and
adc
hlt
dec
inc
mov
int3
dec
xsave
cmpsb
imul
imul
mov
and
inc
add
add
inc
fwait
cmp
adc
pop
inc
loope
or
xchg
xor
push
loopne
pop
aaa
pop
rolb
bound
pop
add
push
pop
ss
rorl
rclb
cmp
add
and
lcall
jo
add
imul
fisubs
ror
mov
cmpsb
imul
mov
mov
fwait
or
jl
rclb
adc
lcall
or
aaa
adc
das
mov
pop
pop
enter
push
and
inc
xor
xor
xor
xor
sub
sbb
xchg
dec
shll
or
xor
fnstenv
imul
add
xor
loopne
aam
je
jmp
mov
xor
shll
add
sub
nop
outsb
pop
mov
and
push
xor
popa
mov
add
add
jecxz
xor
add
loopne
sub
sbb
add
or
js
int3
inc
xor
mov
and
decb
dec
pop
leave
sub
dec
es
es
adc
xor
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
mov
inc
push
inc
push
dec
xor
cs
insb
mov
ret
pop
jg
xor
dec
inc
push
sbb
fcmovbe
inc
adc
pushl
adc
cvtps2pi
jg
push
push
enter
out
out
jg
push
mov
std
stc
cli
cld
idiv
std
add
clc
cmp
fwait
sub
sti
out
or
ljmp
icebp
mov
sti
mov
pop
mov
dec
sbb
pusha
outsb
push
push
pop
imul
pop
pop
imul
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
fildl
mov
pop
add
sub
xchg
pop
popa
pop
xchg
push
bound
call
pusha
arpl
xchg
loope
std
xchg
pop
adc
jae
xchg
pop
fs
xchg
pop
jl
int
daa
or
xchg
pop
jmp
pop
pop
or
push
xchg
insb
adcl
test
aaa
dec
pop
bound
dec
inc
or
stc
std
pushf
js
dec
adc
cld
add
daa
dec
mov
push
arpl
or
sbb
or
or
pushf
sub
adc
or
daa
or
stos
imul
repnz
pop
ret
std
xchg
pop
mov
outsb
dec
mov
scas
nop
fistpl
paddd
outsb
pusha
je
arpl
movsb
jmp
dec
push
imul
daa
outsl
push
pop
or
pop
movsb
dec
ds
pop
adc
push
ss
jle
jl
pusha
daa
mov
dec
pusha
push
or
push
movsl
ret
jo
out
xchg
aas
push
sbbl
cld
das
dec
jmp
decb
fiaddl
mov
adc
das
lods
pop
pop
cmp
push
loope
inc
push
mov
push
push
popw
push
push
fucomi
decb
xor
stc
adc
xor
std
aaa
mov
cli
push
or
loope
xor
add
xrelease
mov
outsb
sbb
insl
or
pop
dec
push
loopne
ja
ljmp
call
rorl
stc
sti
js
pop
pop
push
mov
push
inc
xchg
test
push
push
jno
arpl
xor
clc
stc
jle
xchg
imul
push
mov
out
mov
incl
or
cld
sub
sub
int
xchg
stc
jg
test
in
sub
mov
dec
mov
push
jg
fwait
mov
adc
iret
inc
mov
cwtl
mov
mov
sarb
push
push
dec
addb
inc
stc
push
mov
mov
ret
add
test
arpl
out
sub
lret
lret
mov
jecxz
sbb
out
or
cmpsl
add
call
mov
popa
dec
out
mov
roll
ret
lods
outsl
lcall
ret
movsb
mov
add
gs
xorl
lret
cmp
add
das
std
fstpl
jo
sbb
loop
add
lahf
cs
and
jl
push
js
movsl
stos
xor
sti
sbb
loopne
sbb
shrl
loopne
aaa
cmp
arpl
push
std
add
in
pop
idiv
adc
pop
inc
jle
add
clc
xchg
loope
and
ret
inc
rorl
dec
dec
xchg
test
push
cld
outsb
mulb
testb
loopne
inc
stc
add
cmpsl
push
push
sbb
push
sbb
out
xchg
sub
pop
mov
mov
out
std
ret
pop
push
xchg
test
stc
push
mov
mov
add
shlb
divl
mov
push
xorl
aaa
sbb
pop
cli
or
int
jae
and
pavgw
popf
arpl
lret
pop
js
xchg
fildll
in
add
xchg
jecxz
jmp
mov
dec
addl
aas
add
divb
pusha
add
jecxz
inc
sbb
es
clc
lcall
mov
jecxz
sbb
mov
dec
dec
test
sbb
imul
or
push
jg
push
insb
adc
rcrl
jg
das
mov
sbb
add
rorb
jge
xchg
dec
decl
test
mov
dec
dec
add
pop
lcall
outsb
dec
push
or
outsl
inc
sti
pop
or
arpl
mov
pop
xor
lock
pusha
cmpsb
cmpsb
test
or
dec
mov
notl
jno
mov
gs
inc
cli
adc
clc
decl
xor
jb
test
sbb
add
cld
push
push
les
cmp
jle
or
xchg
add
pop
push
add
insb
cli
outsl
dec
test
xor
jae
jecxz
add
outsl
lock
and
aaa
outsb
push
jecxz
stc
jge
outsl
jnp
mov
add
std
or
insb
xlat
data16
movsl
pop
ds
sbb
inc
icebp
push
cmpb
ljmp
pusha
in
notl
mov
cmpsb
bound
cli
movsb
or
dec
fists
and
add
mov
mov
push
dec
je
cmp
jns
jg
add
insl
or
in
inc
cld
repnz
and
addb
out
jnp
add
dec
loopne
inc
aaa
pushl
xchg
call
cli
jo
jecxz
xorb
add
pushl
ret
cld
cltd
out
jp
push
stc
jo
sarb
jecxz
jge
imul
decb
inc
push
cli
fildll
add
dec
inc
loope
loope
notb
subl
xlat
mov
mov
fcmovu
cmp
fildll
inc
or
out
dec
fs
push
inc
es
dec
pusha
inc
adc
aas
daa
cmp
sbb
cmpb
ret
decl
jg
mov
adc
sti
xor
jnp
or
cli
add
push
jmp
fnstsw
out
add
push
outsb
out
and
cmpsl
in
sub
popa
ljmp
outsl
clc
fwait
lea
sbb
mov
sub
jle
pop
push
arpl
fwait
rorb
or
imul
daa
jge
mov
jle
dec
ljmp
jecxz
and
out
mov
cld
xchg
adc
popa
std
push
push
xchg
jg
lret
mov
ljmp
cmp
out
add
repz
pop
loop
jge
int3
jecxz
std
lds
mov
or
add
lret
sti
ja
out
test
lods
pop
jmp
gs
dec
push
mov
pop
call
call
add
jg
fsubr
clc
sbbl
pop
in
loop
add
clc
pop
cmp
or
jb
jg
xchg
in
repz
arpl
ja
mov
in
call
call
in
mov
mov
cmp
add
jecxz
decb
loope
cmp
mov
push
push
dec
xchg
jecxz
stc
sar
lret
in
outsl
mov
arpl
hlt
pop
icebp
pmuludq
fldt
xchg
mov
loop
inc
addl
sbb
int3
lret
sti
cmp
sti
pop
cmpsb
or
arpl
lret
std
test
jecxz
jbe
cld
add
xchg
lret
in
rolb
xchg
xchg
xchg
jmp
out
sub
jle
pop
cs
hlt
dec
jecxz
std
jmp
leave
rorl
xor
frstpm(287
testb
lret
mov
test
mov
push
ljmp
jmp
push
repnz
lock
jecxz
mov
dec
pop
dec
dec
mov
out
bound
jmp
jle
fsubrl
out
out
out
jp
repz
cld
in
call
clc
pop
jmp
sahf
les
cld
cs
jl
pop
mov
popf
lcall
inc
out
dec
push
mov
test
jp
or
mov
stc
adc
add
jecxz
add
jle
dec
das
sub
and
enter
orl
pop
dec
aas
icebp
pop
pop
test
in
add
in
out
dec
push
push
adc
xchg
pop
xchg
or
sbb
mov
icebp
shrl
pop
push
sti
insb
add
fwait
cltd
insl
push
inc
pushf
dec
cld
dec
fldl
push
stc
mov
xor
adc
xor
test
dec
lock
cld
incl
iret
jne
cs
lret
mov
dec
pop
shrl
std
in
mov
add
add
add
jg
sar
mov
add
and
sub
test
cld
addl
aad
add
aam
aas
repz
cmp
dec
popa
ljmp
and
or
out
sub
lcall
add
add
cld
lcall
add
add
xchg
add
push
in
es
add
and
pop
push
push
mov
inc
mov
cli
test
gs
ss
out
loopne
lcall
jg
sub
notl
outsl
or
stc
cmpsl
add
xorl
add
lock
mov
aaa
std
test
jecxz
add
jo
push
adc
or
call
cmpl
cmpsl
mov
mov
loopne
clc
outsb
fimuls
mov
add
or
jmp
pushf
jecxz
lods
test
xchg
popa
mov
xchg
rol
and
pop
pop
mov
inc
clc
xchg
cmp
insb
div
iret
mov
decl
add
sahf
aas
pop
ret
stc
cmc
fildll
roll
jle
jecxz
std
sarl
cwtl
les
add
ret
faddl
add
pop
xchg
in
orl
push
xor
popf
adc
bound
inc
push
add
sar
ret
outsl
dec
push
cmp
repz
add
aas
add
lret
jb
loop
fcoml
jns
loope
iret
add
iret
jmp
jmp
mov
test
out
hlt
xchg
and
es
addb
inc
cmc
dec
imul
mov
sti
test
fsub
clc
xchg
roll
cmp
cmp
decb
mov
ret
pop
cmpb
subb
out
and
cmp
insl
jg
std
jp
or
cmc
push
cmp
push
test
mov
scas
in
testb
dec
inc
test
daa
xor
add
insb
xchg
test
jmp
arpl
ret
clc
jo
mov
loope
cmp
xchg
mov
cli
je
sahf
outsb
mov
cmc
push
pop
mov
dec
loopne
pop
sub
add
ret
xchg
jno
fildl
jnp
loop
pop
mov
clc
push
icebp
inc
pushl
adc
pop
and
aad
cld
incl
dec
push
or
inc
sbbl
jmp
adc
lcall
adc
or
sub
test
cli
xor
jo
repz
and
insb
push
cld
xor
add
in
testb
xchg
mov
icebp
push
pop
rclb
jmp
push
ljmp
mov
shrb
jp
dec
push
insb
aam
aaa
add
jnp
dec
cmp
test
insl
inc
cmp
add
sti
adc
mov
outsl
out
mov
test
scas
push
out
cli
xor
pusha
arpl
or
out
or
xor
lret
frstor
in
rcll
das
push
push
cli
mov
test
xor
or
inc
leave
sbb
gs
mov
cld
incl
ds
adc
les
lds
cmp
push
inc
aaa
clc
pop
sbb
out
pop
fdiv
es
arpl
cmc
loopne
bound
xchg
cwtl
pop
mov
sbb
xchg
and
add
pusha
push
or
rcll
sbb
inc
cmc
ljmp
cmp
sti
imul
dec
cli
xor
ss
stos
aaa
fcomip
shll
imul
arpl
in
test
jmp
test
sar
in
cmp
or
add
lock
jg
add
call
dec
or
inc
cmp
je
arpl
cmp
outsl
and
ljmp
daa
jo
cmp
push
dec
popa
out
adc
dec
aas
dec
adc
ret
sbbb
daa
mov
fnsave
push
push
std
sub
xchg
or
shrb
jecxz
ss
mov
mov
rsqrtps
das
decl
pop
sub
mov
sub
or
sbbb
insl
mov
clc
dec
or
add
mov
out
push
pusha
mov
jecxz
ja
mov
push
mov
dec
repz
fcomip
sub
push
cmp
dec
arpl
xchg
pop
test
imul
or
mov
call
cmp
sub
out
and
pop
inc
inc
ret
sahf
icebp
push
in
push
divb
das
cmp
pop
fnstsw
dec
pushf
sbb
sbb
mov
cmpsl
cmp
jg
in
data16
clc
add
add
adc
std
jecxz
xor
push
jb
jae
out
sbb
cmp
jae
mov
pop
out
mov
dec
jns
jecxz
stc
mov
jmp
cmp
popa
lds
add
push
sub
mov
stos
std
outsb
ja
pop
mov
and
or
loope
int3
sbb
jo
jle
mov
pop
std
dec
dec
push
push
incl
jg
add
xchg
rolb
dec
jg
jo
push
add
fildl
nop
mov
jmp
pop
jne
loop
outsb
add
fstpt
add
outsl
push
and
call
xor
dec
jecxz
std
push
ljmp
pop
push
mov
sti
jecxz
mov
pop
loopne
jle
xor
jb
ss
dec
mov
add
insl
and
dec
or
ret
adcl
ror
mov
test
xchg
dec
add
std
push
inc
pop
out
pop
inc
add
xlat
cli
stc
test
inc
mul
add
cmc
cli
sub
lods
inc
jno
push
lds
push
mov
dec
jle
add
lock
xor
jb
xor
clc
adcl
pusha
ljmp
shll
stc
jb
leave
out
pop
lods
cs
sub
in
cmp
movsl
sbb
push
sbb
fucomi
add
inc
popa
addl
add
add
pop
clc
mov
ss
or
test
pop
add
adc
cmp
loopne
std
sub
add
addb
mov
clc
jmp
push
cmpl
sub
push
cmpb
jl
or
loope
add
stc
rcrl
or
adc
mov
outsb
sub
stc
pop
pop
into
int
mov
dec
les
mov
push
mov
jmp
call
mov
xchg
jg
pushf
sbb
cmp
mov
sbbl
mov
out
aaa
les
mov
and
int
loop
mov
cmp
test
fistps
insl
loopne
adc
pop
neg
std
outsl
std
cld
xor
jb
xchg
test
xor
jb
add
adc
outsl
xchg
dec
loop
dec
sti
xchg
xchg
jg
jnp
xchg
adc
inc
sti
xor
cld
jo
xor
add
xchg
outsb
mov
sbb
fisttps
jns
xor
or
dec
sbb
and
dec
jmp
inc
fnstsw
ss
subb
xor
mov
sub
add
dec
mov
sarb
xchg
lea
inc
adc
add
adc
aaa
xchg
test
adcl
mov
mov
pop
mov
roll
sbb
pop
jo
inc
test
or
movb
outsl
add
aas
icebp
xorb
enter
in
cltd
pop
xor
push
mov
mov
push
lds
xor
aaa
sbb
jns
pop
xor
repz
jo
test
adcl
fidivrl
aas
inc
ljmp
leave
jnp
loope
jno
fbstp
das
insb
sbb
mov
outsb
inc
mov
pop
jg
decl
sub
jmp
jg
push
xorb
ret
jle
adc
inc
incl
repz
add
adc
mov
jl
out
xorb
outsl
test
mov
xor
test
jns
pop
sbbl
in
mov
outsb
mov
testl
jmp
std
outsb
jmp
loope
mov
adc
jbe
adcl
lret
cmp
inc
inc
push
test
dec
daa
test
rol
insl
ret
jae
jmp
jge
jbe
addb
filds
fistpl
jecxz
into
xor
sub
dec
mov
jae
pop
jns
push
pop
repz
pop
mov
dec
push
xchg
or
xor
testb
bnd
jae
in
loope
add
cmp
cli
pop
push
call
lods
mov
out
sti
dec
push
adc
hlt
popw
jecxz
arpl
lods
lea
das
rorb
jecxz
ja
sbb
test
popf
xor
flds
or
mov
sub
jp
pop
cmc
xlat
daa
add
xchg
pop
fiaddl
and
dec
lock
std
loopne
ss
sub
test
mull
loop
addl
push
in
pop
add
roll
pop
xchg
add
int
arpl
fildl
dec
pop
xor
ja
stc
or
mov
adc
cmp
pop
ljmp
or
xchg
and
and
outsl
sti
outsl
and
pushl
adc
or
lock
or
jnp
cmpsl
xor
insl
push
xchg
jle
lods
adc
jmp
test
xor
adc
mov
ss
or
mov
cltd
cli
or
add
mov
jno
adc
adc
idiv
mov
adc
or
mov
sub
bound
imul
mov
push
pop
jl
cmp
les
push
mov
outsl
push
cmpb
or
imul
lcall
push
sti
jo
ss
mov
lods
insb
mulb
push
fucomip
dec
mov
arpl
loopne
std
sub
and
arpl
add
cmp
mov
cmc
xor
in
jo
xor
xchg
xor
jno
mov
mov
out
xchg
or
dec
add
cmp
pop
pusha
mov
fldcw
pop
mov
mov
or
insb
adc
push
test
imul
imul
mov
sbb
jo
push
jecxz
mov
shlb
outsl
pop
loope
repz
aaa
jmp
mov
add
imul
xor
mov
or
scas
inc
or
cld
out
xchg
xchg
mov
lret
xorb
sub
std
xchg
mov
test
xor
insb
add
outsb
sti
jl
mov
fildll
dec
sti
jo
cmpl
mov
or
mov
pop
or
sbbb
jno
mov
mov
std
movsl
aaa
dec
stc
pop
rolb
aaa
mov
stc
xchg
lock
sbb
incl
push
xorl
jg
and
insb
pop
or
enter
loop
loope
arpl
sbb
fsqrt
lret
lcall
ds
mov
or
leave
pop
push
ja
mulb
pop
cmp
push
xchg
lret
repz
mov
aad
add
js
xorb
mov
add
js
and
xlat
push
dec
imul
imul
sub
out
jecxz
rcrl
mov
daa
sti
insb
repz
dec
gs
loopne
cli
je
add
in
pop
daa
cld
outsb
cld
mov
push
inc
call
icebp
adc
notb
jbe
adc
stos
out
mov
les
out
push
push
dec
push
arpl
jl
jo
subb
outsb
lcall
gs
repz
cmc
stc
into
data16
clc
int
stos
out
std
mov
cli
pushl
addr16
in
jg
jge
add
or
test
dec
aad
std
add
pushf
mov
push
xor
ds
arpl
movsl
and
sbb
cs
cli
mov
inc
mov
push
xchg
ret
or
icebp
jg
ja
scas
test
insl
mov
push
test
out
stc
lds
jle
mov
inc
mov
mov
cld
or
es
gs
clc
seta
fwait
insl
mov
push
push
xchg
ljmp
mov
das
and
and
fcmovnu
pop
cli
xchg
divb
lds
in
push
fstpt
mov
add
dec
not
int3
inc
orl
jp
sub
mov
fsubrl
xor
pop
pop
aaa
jne
loope
sbb
fs
addr16
cld
iret
dec
or
pop
mov
hlt
push
bound
add
push
push
popa
pop
aaa
and
jns
ja
imul
lock
jg
dec
or
dec
loope
arpl
jle
sub
sarl
test
xchg
jecxz
cmpl
mov
fucomi
push
dec
dec
mov
sub
or
shl
addl
enter
rcrl
aad
push
cmpsl
or
add
cmc
jbe
mov
sub
addr16
mov
mov
sbbb
dec
hlt
into
loopne
xor
orl
jge
jecxz
sub
orb
add
bnd
cmp
inc
fisttpl
incb
mov
and
outsb
fsubrs
insb
sub
dec
jmp
test
test
mov
pushl
insl
outsl
jmp
sbb
and
cli
dec
dec
xchg
fcmovb
mov
into
cltd
icebp
cld
jne
cmp
cs
ffreep
call
ljmp
ret
pop
rol
inc
rclb
pop
shl
out
or
test
dec
out
in
sub
in
fisubrs
xchg
adcb
pop
xlat
adcl
adc
mov
jns
push
mov
mov
push
pop
mov
mov
scas
pop
pop
mov
arpl
mov
or
and
int3
mov
fistpl
test
loopne
das
pop
int3
mov
ret
cmp
push
pop
stc
push
daa
dec
jnp
jecxz
test
sti
incb
mov
mov
xor
pop
aas
lock
mov
pop
pop
hlt
aad
dec
xor
rep
cmp
jecxz
arpl
cmp
push
cmp
outsb
sub
adc
cld
div
loope
sub
jno
jb
ljmp
ror
cs
cmc
push
adcb
cmp
rorl
cmc
or
add
test
mov
xlat
das
inc
repnz
mov
jle
or
mov
xchg
ret
pop
lahf
sbbl
push
inc
clc
jne
jmp
push
outsl
rorl
es
in
shll
inc
addr16
mov
call
pop
ud2
pop
repz
repz
dec
sti
xchg
addr16
insb
call
jne
add
push
in
pop
dec
sub
sti
add
sub
rorb
stc
dec
addr16
aam
fldl
int
test
rol
fcoms
mov
das
pop
jle
ffree
rcrb
outsl
arpl
sti
inc
orl
xchg
mov
adc
mov
xlat
arpl
ja
pop
fsts
lret
dec
loopne
cs
addb
mov
leave
dec
imul
push
push
mov
stc
mov
dec
cmp
stos
ljmp
scas
out
cld
arpl
out
cmpsl
pop
cmpsb
test
cs
imul
aas
out
aas
xchg
scas
xchg
adc
xor
fs
mov
sbbl
mov
pop
loope
dec
and
xor
xchg
push
mov
in
mov
push
mov
xorb
in
mov
lods
cld
sarb
adc
mov
sbb
jmp
fucomi
cli
push
lahf
mov
mul
jmp
mov
icebp
roll
pop
popa
insl
mov
gs
mov
pop
push
or
scas
sti
inc
dec
loope
mov
aad
sub
push
adc
incb
lcall
or
fisttpl
jge
dec
in
sub
ret
movsl
loope
mov
jle
in
jmp
mov
leave
mov
inc
jecxz
daa
scas
addb
add
shlb
xchg
inc
cmpl
fstpl
jg
out
iret
xor
push
imul
shrl
or
add
popf
sbb
sti
jnp
xlat
pushl
nop
fwait
hlt
add
jns
cmpb
xchg
mov
data16
repnz
inc
xchg
loopne
popa
cli
push
fstl
and
jl
jge
pusha
loopne
das
jle
mov
fwait
repz
jp
arpl
rcr
test
lcall
lea
lahf
stos
clc
xlat
jb
add
fsts
pop
xor
cmc
and
lock
mov
mov
add
dec
pop
es
sub
sub
ss
cmp
sub
mov
pop
lcall
mov
jecxz
or
sti
push
das
jl
xchg
cwtl
stc
lods
data16
out
test
adc
mov
test
lret
add
mov
testl
push
pop
push
dec
push
push
xchg
dec
pushf
xchg
pop
sbb
adc
adc
xor
ret
sti
pop
mov
sbb
jg
es
int
inc
lods
adc
mov
jg
cmp
cmp
mov
clc
test
shl
xchg
int
cmpl
dec
hlt
hlt
ja
mov
rcll
push
or
pop
mov
jo
push
mulb
ja
cmpl
jns
pop
orb
gs
int
js
mov
pop
pop
orb
ds
aaa
adc
and
xor
and
ud0
jle
and
xor
adc
xor
jns
clc
lea
mov
sarl
outsb
add
jns
cmp
inc
and
xchg
jns
fsubl
es
lcall
mov
dec
testl
mov
mov
fildll
xchg
push
mov
push
push
loopne
or
pop
mov
fisttpll
mov
js
jno
outsl
mov
fwait
cmc
adc
test
out
mov
sti
sbb
movsl
fcompp
inc
dec
dec
cltd
jecxz
push
divl
jle
xor
daa
in
addr16
lret
push
or
xor
dec
pop
xchg
push
mov
ljmp
ja
push
sub
mov
adc
arpl
test
loop
or
je
pop
data16
mov
add
jecxz
and
and
or
shll
sbb
gs
adc
dec
in
movsl
jecxz
fs
aaa
mov
cmc
std
mov
mov
je
fwait
test
inc
dec
push
pusha
adc
fisubl
inc
daa
rorl
pushf
test
arpl
jle
roll
push
je
scas
push
push
push
push
jg
add
loop
jb
addr16
addb
sarb
stc
fists
std
cmp
push
cs
xchg
lcall
sbb
xchg
sub
sub
inc
das
sbb
frstor
sbb
ljmp
mov
je
aam
dec
aam
aad
outsb
pusha
loope
mov
rorb
gs
lret
arpl
sub
aad
mov
jg
sarl
jnp
roll
inc
cld
icebp
mov
mov
sbb
call
in
and
shl
push
leave
fbld
pushf
xor
mov
ret
mov
add
pop
pop
xchg
and
lock
outsl
add
test
cltd
add
cli
insl
sti
ret
pop
xchg
jno
jo
sarb
jge
clc
notl
fldl2e
dec
dec
out
mov
shrl
addb
aad
clc
mov
jb
xchg
jmp
incl
fisttpll
mov
pop
insl
movsb
xchg
pushl
aaa
das
jns
sahf
push
dec
gs
pop
ret
in
lahf
movsl
mov
pop
stos
rcr
cltd
mov
scas
pop
lahf
fldenv
jae
shll
fstl
aaa
pop
fidivrs
repz
sbb
mov
adc
rcll
out
cld
pushf
mov
pavgb
add
and
sti
inc
popa
add
aad
or
int3
mov
test
out
push
insb
sbb
or
sbbb
dec
hlt
outsl
hlt
ret
push
pop
add
push
sbb
push
ja
or
fstpl
jo
js
insl
insl
adcl
xchg
insb
cltd
jge
sti
and
or
lods
xor
arpl
pop
sub
jge
out
sub
jmp
test
jecxz
sar
sub
popf
clc
mov
jg
inc
xchg
mov
inc
es
mulb
sub
test
mov
and
and
repz
pop
fadds
jb
adc
sub
das
cmp
xchg
add
arpl
test
popa
xchg
ljmp
mov
jmp
addr16
xor
inc
movhps
xchg
mov
movnti
leave
push
sub
add
iret
loope
xchg
inc
lock
jge
jno
or
dec
mov
das
mov
daa
out
scas
dec
xchg
pop
dec
or
jecxz
pop
mov
add
fstpt
mov
int
rol
pop
xor
add
jmp
fwait
std
push
cmp
mov
sti
sub
or
stos
fstl
sub
jle
ret
inc
or
jp
imul
rcr
pop
arpl
pop
sub
push
push
cmp
cmp
shll
aad
push
jae
movsl
push
cmp
int
pop
dec
pop
sahf
xchg
xor
jb
jg
sbb
sbb
push
arpl
xchg
lahf
push
xor
mov
adc
and
pop
dec
shr
lahf
dec
scas
cmp
mov
inc
sub
pop
ljmp
mov
imul
adc
outsb
inc
push
pop
std
push
imul
ds
sbb
out
test
movsl
movsl
mov
jne
sub
rorl
push
mov
test
mov
test
loopne
add
in
jle
fldenv
hlt
sub
dec
cld
sbb
or
clc
inc
outsl
ss
out
inc
dec
lahf
in
fldt
out
orb
rolb
xchg
das
mov
xchg
lods
or
or
aaa
into
jecxz
lret
and
sub
sub
cld
mov
out
adc
mov
xor
push
sti
adc
outsb
pusha
mov
mov
sub
sub
mov
xlat
push
mov
aaa
xor
stos
or
jno
fwait
sub
jno
mov
sbb
mov
mov
icebp
sbb
std
pop
fadd
mov
mov
inc
and
icebp
push
jecxz
xor
rolb
mov
push
int
in
aas
loopne
pop
aaa
insb
push
gs
orl
xchg
insl
jge
add
jecxz
push
int
add
rcrl
into
push
pop
mov
and
dec
pop
or
icebp
xor
push
push
fldenv
jo
test
push
loop
pop
mov
imul
push
mov
xor
mov
es
mov
sub
sub
clc
or
fsts
lcall
shrl
fwait
idivl
dec
sbb
push
xchg
push
add
mov
xchg
js
icebp
push
int3
movsl
cmp
sbb
add
pop
mov
xchg
mov
cli
lock
fs
mov
jbe
out
mov
pop
mov
subb
push
repnz
addr16
outsl
sbb
dec
daa
cmpsb
jecxz
xchg
or
clc
popa
mov
js
cmp
mov
jnp
dec
outsb
xor
xor
std
sbb
inc
or
ljmp
mov
push
ds
pop
or
es
push
fwait
pop
stc
test
fucomi
mov
xorb
rcr
add
sahf
popf
repz
push
repnz
xor
mov
mov
xor
scas
pusha
loope
popf
decb
add
pop
js
push
lods
rep
test
movsb
jnp
pop
mov
jl
jno
xor
mov
cmp
cmp
dec
cmc
or
sahf
pop
mov
addl
fwait
xor
add
sbb
je
dec
add
aad
ret
inc
push
lret
mov
add
cld
bound
add
cs
lea
lods
in
push
shll
xor
push
inc
out
sbb
jno
xchg
movsl
xchg
lahf
iret
inc
movsb
rcrb
xchg
dec
mov
cmpsl
stos
dec
adc
mov
in
or
or
fildll
add
enter
xor
dec
mov
in
icebp
cmp
push
out
inc
mov
inc
test
jp
cmp
pop
sti
fiaddl
push
adc
sub
hlt
loope
push
mov
mov
pop
in
andb
negb
mov
fnstcw
pop
lods
dec
sbb
in
inc
jnp
add
jg
sbb
mov
xor
push
sub
insl
mov
jg
cld
cs
inc
jnp
dec
negb
add
shll
shll
push
sbb
lret
lods
cltd
sbb
xchg
jge
inc
jns
or
sub
sbb
out
loopne
pop
js
mov
inc
and
outsl
out
xchg
stos
add
xchg
lahf
jns
call
jl
jg
arpl
inc
jecxz
or
pop
lret
lcall
adc
sti
fistpl
arpl
mov
jb
xlat
mov
push
xchg
ret
push
ljmp
push
cmp
sbb
bnd
xorl
hlt
sarl
adc
push
inc
test
hlt
insl
testl
test
outsl
mov
es
ja
sbb
sbb
into
sbb
sarl
in
sbb
sub
scas
fiadds
push
add
ret
jo
fcmove
sti
jmp
aaa
addps
xchg
or
mov
mov
push
repz
arpl
loop
jecxz
add
das
sbb
mov
xchg
fsub
addl
outsb
sbb
mov
dec
jecxz
sbb
push
dec
js
push
sub
dec
cmp
mov
mov
hlt
aas
pop
mov
stc
sbb
test
mov
gs
add
xchg
inc
movb
mov
push
pop
arpl
rolb
ret
sti
pop
mov
mov
xor
repnz
mov
adc
popa
lret
dec
data16
mov
mov
add
cmp
fisttpl
out
into
or
popa
stos
or
rcl
xchg
cmp
out
or
pusha
cld
sbb
subb
jle
test
mov
mov
xchg
orl
jno
xchg
jecxz
in
pop
fcoml
pop
cmpl
popl
add
idiv
aas
out
pop
out
jg
repz
mov
jnp
int
inc
out
push
mov
stc
add
push
lock
or
jae
mov
cmp
out
or
leave
and
ds
dec
das
mov
test
adc
fucomi
lret
sahf
out
scas
or
mov
loope
mov
or
dec
mov
stc
arpl
dec
test
popa
push
adc
dec
dec
popa
addb
rol
gs
push
cmpb
or
mov
test
xacquire
jl
in
jg
pop
loop
xchg
mov
xchg
icebp
test
mov
js
jne
and
pop
rclb
sbb
push
dec
or
sub
pushf
hlt
add
mov
or
repz
sti
dec
mov
cld
sbb
push
dec
loop
sbb
jl
filds
sbb
lock
clc
push
pop
dec
fs
adc
add
push
sub
lahf
popf
aas
movsl
or
loopne
stos
mov
andb
std
xchg
push
push
dec
push
jecxz
in
stc
xchg
xchg
sbb
mov
dec
push
loopne
repz
outsl
or
add
in
sbb
in
sbb
enter
cmp
mov
sub
push
xor
std
dec
or
mov
out
dec
cmp
sbb
pop
aad
test
cld
movsl
cmp
and
into
pop
fadds
mov
ret
add
ss
or
push
or
pop
mov
xchg
aad
aaa
push
idiv
insl
rcrl
push
pop
mov
dec
dec
pusha
popf
stos
addl
jne
outsl
shll
pop
mov
jne
xchg
mov
cli
adc
stos
hlt
test
and
ret
jo
mov
jno
sti
aaa
lahf
add
add
push
cmp
sbb
add
or
cmp
int
sub
stc
adcl
mov
in
repz
scas
in
xchg
fldcw
push
inc
adc
and
into
push
xchg
sub
setle
inc
pop
jge
into
out
out
fwait
mov
into
bound
loopne
sbb
aad
sahf
dec
into
xlat
push
repz
cmp
push
or
hlt
adc
jmp
hlt
cli
gs
jbe
shlb
mov
jne
popa
in
add
xor
xchg
sub
push
jmp
dec
imul
xchg
sbb
aas
dec
dec
and
sbb
xchg
sbb
aaa
and
xchg
sbb
sbb
daa
or
test
add
dec
mov
and
xchg
sbb
sbb
out
xchg
dec
xchg
dec
mov
dec
mov
sbb
pushf
pop
mov
cmp
push
inc
mov
rolb
in
mov
xor
mov
adc
inc
sub
rolb
xchg
cmc
jmp
adc
cmp
xor
sub
mov
mov
jb
dec
jmp
mov
pop
xchg
mov
je
jmp
sbbl
in
cmp
inc
adc
push
sub
shll
repz
dec
ret
mov
sbb
aaa
xchg
sub
roll
aas
or
adc
aaa
movsb
stos
das
mov
int
inc
iret
xchg
mov
ja
das
pop
adc
inc
jo
adc
test
es
mov
sti
push
xor
xchg
mov
test
lock
pop
das
std
xor
jmp
xchg
in
test
adc
push
fisttps
sbb
mov
or
mov
shrl
jne
std
jl
sbb
icebp
mov
jmp
pop
push
ret
mov
pop
test
das
cmc
add
push
jp
xchg
mov
inc
test
incl
add
scas
aam
inc
xchg
add
mov
dec
xchg
add
mov
sti
xacquire
add
daa
inc
cmp
hlt
pop
call
push
cld
pop
xchg
push
pop
mov
xchg
xorl
fs
pushf
sub
push
sti
insl
sbb
imulb
dec
pop
cmpsb
cld
outsl
inc
movsl
adc
mov
push
lcall
mov
jge
mov
sbb
clc
jo
and
xchg
mov
cmpl
mov
lret
ja
stc
inc
xor
call
jecxz
xchg
inc
fcoms
sbb
mov
pop
xor
stc
inc
add
inc
and
cmc
inc
out
xor
popf
cmp
add
inc
adc
sub
jmp
xchg
xchg
add
xor
add
add
mov
les
mov
inc
sub
adc
lods
cli
test
in
shll
sbbl
fs
mov
push
mov
stc
dec
loope
aaa
mov
dec
push
ja
test
jl
mov
data16
dec
push
xor
test
push
adc
push
pop
adc
dec
shrb
gs
les
repnz
pop
mov
jmp
dec
mov
mov
mov
sub
push
vpcmpeqw
cmp
push
pop
call
push
or
clc
testl
adcl
xor
testl
enter
addr16
xorl
add
sub
dec
call
xor
xor
divl
arpl
pushf
pushf
or
xor
in
fdiv
gs
jne
dec
push
cli
stos
sbb
jno
out
push
in
adc
pop
fbstp
inc
xor
sbbb
stc
sub
or
idivb
or
cld
jnp
fsin
les
aaa
call
cmp
aad
rcrl
inc
out
jne
lahf
loopne
arpl
pop
inc
dec
gs
inc
daa
xor
mov
dec
dec
arpl
mov
mov
sti
jmp
dec
in
cli
pop
out
sbbl
sbb
idivb
sti
pop
jge
test
xor
or
mov
cmc
lods
icebp
cmp
xor
popa
mov
test
loopne
inc
fmuls
xchg
fs
mov
mov
aad
mov
xor
or
or
xchg
adc
adc
add
mov
pop
test
cmpl
xchg
xchg
fcmovnbe
sbbb
mov
sti
daa
mov
mov
xchg
push
xchg
cli
aad
mov
lcall
mov
pop
xchg
xor
jns
or
xchg
subb
dec
jno
or
cwtl
lea
mov
cmp
stos
icebp
ret
mov
inc
cli
repnz
addb
mov
in
mov
out
in
mov
jmp
cli
dec
lds
xchg
cld
jae
lea
add
xor
je
jbe
xchg
test
stos
out
dec
cmpsl
inc
test
imul
bswap
aas
mov
jge
ja
dec
in
loope
insl
sbb
xchg
loop
dec
out
xlat
cmp
das
in
mov
inc
sbb
std
inc
sbb
or
cld
lods
add
xchg
dec
dec
in
imul
ljmp
cmp
adc
fldl
cmpsl
hlt
cs
jb
cmc
icebp
adc
or
in
inc
decl
in
sbb
and
mov
lds
jmp
sbb
or
orl
rorl
jae
xlat
jg
xchg
or
fdivr
xchg
jnp
jmp
popf
popa
jne
fabs
mov
push
jecxz
insl
jl
dec
ds
notl
out
jae
and
rolb
loopne
cmc
xchg
jmp
inc
lret
push
and
jle
mov
std
lret
or
mov
xchg
mov
adc
in
orl
mov
or
das
add
lret
gs
daa
dec
pop
xchg
inc
sub
jg
repnz
mov
xchg
mov
fstps
add
dec
bound
imulb
push
adc
jg
adcb
or
add
push
fiadds
xlat
shrb
jnp
and
mov
mov
sti
movsl
push
add
rclb
push
dec
stc
rorb
push
pop
dec
popa
add
cs
xor
daa
or
mov
negl
pop
clc
sti
insl
inc
aas
push
data16
cld
sarl
test
aaa
sbb
ret
mov
je,pn
dec
jnp
or
jg
xchg
and
mov
ret
rcr
inc
shlb
mov
mov
push
jb
or
adc
lea
sbbl
and
std
jle
or
addr16
mov
clc
into
shlb
inc
pop
addr16
pop
das
jg
out
loopne
push
or
cmc
lds
mov
or
or
lret
incl
ret
and
jo
or
add
dec
or
test
je
or
leave
shll
pop
ja
mov
daa
pusha
xchg
mov
pop
jge
inc
test
sbb
test
mov
dec
dec
dec
mov
push
dec
sub
add
cmp
pusha
mulb
hlt
pop
pop
mov
aad
ljmp
mov
dec
nop
add
jecxz
fists
inc
jl
jge
aas
loop
or
shr
shll
rcrb
pop
stc
jnp
jl
out
sbbb
sti
addr16
jmp
sub
mov
cmpl
pop
jnp
mov
add
or
cmpsl
fwait
sbb
sub
inc
push
popa
jne
pop
dec
clc
push
imul
mov
std
fisttpll
notl
ljmp
std
test
pop
mov
lds
or
jg
ret
andl
stc
fnstenv
jno
sub
arpl
arpl
cmp
push
push
test
fwait
dec
pop
aaa
clc
adc
jg
add
out
cmp
mov
aam
jg
pop
add
cmpb
xorb
outsb
out
fs
sti
mov
shr
das
shrb
insb
std
cli
inc
inc
add
mov
fisttps
lods
movsl
sbb
lock
bound
outsl
sub
and
xchg
inc
lods
push
dec
out
lods
dec
stc
lds
mov
lcall
idivb
dec
out
jne
add
stc
dec
in
add
popf
shlb
mov
lods
decb
inc
jecxz
or
jno
add
dec
mov
loope
lock
cmpsl
cmpsl
jmp
xchg
lds
add
jne
pop
outsb
sbb
or
lods
test
insb
jmp
inc
cmp
cmpsl
incl
pop
arpl
mov
add
enter
pop
lods
cli
jb
jecxz
sub
push
cmpsb
or
gs
mov
das
aaa
xorb
bound
push
push
push
mov
das
pop
lcall
fildll
arpl
sub
sbb
mov
push
popa
sti
nop
inc
hlt
gs
roll
rcrl
shll
pop
enter
jp
in
push
add
test
arpl
xchg
sbb
sbb
std
pusha
lods
ror
cmpsb
pop
lea
icebp
pop
in
lret
adc
push
xchg
xor
out
or
cmc
lahf
dec
mov
outsb
add
sbb
addr16
add
sarl
ljmp
clc
addr16
fsubr
pop
aas
int3
insl
mov
mov
je
bound
in
push
pop
pop
cmpsb
std
jae
sbb
mov
lock
adc
outsl
cs
addl
push
mov
mov
mov
add
mov
mov
test
cmp
das
xor
pop
push
or
iret
pop
repz
fwait
or
popa
add
or
lods
pop
and
sub
add
int3
sub
ljmp
mov
in
popa
dec
cmovo
xor
jno
popa
mov
out
aas
or
pop
pop
mov
add
jle
and
rcr
gs
xorl
sar
or
cli
pusha
loope
ficompl
add
lret
aas
push
inc
jle
mov
sar
xor
bound
pop
sbb
fmull
and
rorl
or
scas
in
jmp
cmc
xchg
test
sbbl
push
aaa
pop
es
pop
cli
aas
pusha
add
jecxz
adcb
xlat
mov
negb
in
aaa
and
call
out
test
jg
xor
in
aam
bound
xor
pop
jle
or
addb
fs
mov
lea
and
rcll
cs
lret
out
pusha
jl
push
gs
movb
test
outsl
push
pop
cwtl
imul
or
mov
stc
jmp
add
adc
lret
fcomi
insl
repz
in
pop
loop
pop
mov
mull
iret
push
insl
mov
in
cli
movsb
int3
xlat
inc
insl
mov
fdiv
ret
dec
pop
inc
mov
aas
leave
or
xadd
insl
mov
mov
xchg
push
enter
jns
and
and
lods
mov
int
sti
hlt
and
movsl
pause
or
lods
add
jg
pop
subb
iret
push
lret
out
fistpll
jecxz
push
cmp
mov
aaa
mov
xor
rcl
fcmovnb
sbb
sbb
inc
cs
sti
jmp
ficoms
mov
ret
lret
cmc
xchg
cld
repz
sbb
aaa
xchg
push
mov
lods
jns
std
pusha
push
mov
mov
cmp
pusha
lret
jg
mov
and
arpl
lahf
in
sub
cmp
xchg
cli
cmp
shrl
movsb
sbb
cmpsb
pushw
push
xchg
in
and
std
add
add
jp
mov
push
in
adc
mov
in
mov
pop
mov
pop
mov
mov
pop
scas
scas
push
fdivrp
mov
js
out
in
dec
add
sbb
jmp
jge
push
mov
jne
outsl
pop
mov
push
les
xchg
mov
pop
call
arpl
fbld
stc
add
faddl
cli
test
mov
lcall
ss
fwait
or
inc
push
mov
insl
or
popa
jl
dec
out
push
insl
mov
sub
sub
jmp
aas
repnz
xor
xor
insl
int3
sub
cli
out
pop
stc
clc
cld
mov
aam
dec
jge
jg
or
sbb
repz
and
dec
mov
shrl
or
decb
mov
in
adc
fisttps
ds
jge
push
sti
pop
push
pop
sbb
or
sbb
dec
add
push
inc
or
std
dec
std
push
sbb
mov
pop
add
adc
dec
std
pop
mov
outsl
push
into
faddl
jmp
insl
push
sub
fisttps
pop
pop
icebp
dec
adc
mov
hlt
leave
lcall
rcrl
push
cld
cld
es
adc
inc
adc
inc
sbb
dec
in
dec
adc
fldl
incb
imul
xor
ds
cs
mov
mov
es
push
sti
inc
sbb
pop
mov
lret
fisttpl
jmp
pop
push
lahf
xchg
movsl
jle
inc
cmp
repnz
rcll
xor
test
push
and
pop
mov
xchg
mov
adc
mov
jnp
or
mov
dec
or
push
or
sarl
mov
push
std
cmp
lods
out
ret
push
jnp
cmpsl
xor
test
lret
out
sub
pop
decb
xchg
mov
test
mov
std
cmpb
incl
jg
hlt
jo
mov
in
push
cmp
insb
or
sbb
sub
sub
inc
mov
xchg
arpl
loope
jge
ret
sbb
mov
mov
inc
push
xchg
pop
mov
mov
pop
mov
mov
mov
cmp
lcall
or
push
push
les
lcall
push
mov
mov
xorb
mov
pushl
aad
adc
cmp
cmp
fistpll
hlt
imull
outsb
fistpl
mov
popa
pop
jno
sub
in
ja
aas
add
call
add
pop
cmp
insl
jno
gs
cmp
lret
aas
incl
jecxz
mov
push
rorl
repz
aas
inc
addb
fldl
add
jns
inc
addl
fcomps
and
insl
add
aad
leave
mov
xchg
mov
xchg
jbe
mov
repz
fsubs
mov
pop
lret
xor
push
out
mov
push
mov
sbb
pop
add
pop
xchg
das
loopne
mov
xchg
pop
lds
pop
fwait
cmp
imul
movsl
bound
and
or
call
test
cli
adc
int
pop
fisttpl
subl
mov
outsl
sbb
or
push
adc
arpl
mov
shrb
jne
fidivs
or
fadd
add
mov
add
add
cli
mov
xor
les
mov
dec
imul
lret
push
and
enter
inc
or
sbb
dec
rcrl
cmp
filds
pop
cmp
shrl
mov
adc
xchg
jle
pop
jnp
call
mov
aad
outsl
adc
stos
jne
pop
stos
mov
jae
mov
jecxz
pop
sar
push
or
out
push
in
add
clc
stc
xorb
fwait
movsl
push
push
pop
adc
add
add
push
jmp
cld
pop
or
inc
mov
xchg
dec
subl
loop
mov
or
pop
mov
in
add
pop
pop
iret
lret
add
dec
jecxz
add
xor
mov
add
out
out
xor
or
out
mov
mov
xor
or
xchg
push
bound
inc
cli
push
lret
pop
and
std
add
sbb
cli
xor
pop
daa
and
add
sub
fisttpl
cli
fcompl
ds
and
inc
jl
jl
dec
mov
sbb
mov
or
adc
mov
mov
daa
cmpsb
test
mov
mov
das
mov
popf
mov
mov
movsb
xchg
pushl
popa
mov
daa
pop
movsl
cs
test
dec
pop
mov
push
pushf
testb
sbb
or
jo
inc
cmpl
xorb
dec
orl
inc
je
xchg
fildll
adc
frstor
frstor
cmpl
inc
faddl
push
lods
gs
sbbb
mov
jae
push
cmpsb
push
dec
dec
adc
cmp
mov
leave
fwait
je
pop
frstor
outsl
and
mov
dec
aas
loope
lock
jbe
jns
inc
jge
sub
stos
cli
jmp
xorl
aaa
xchg
pop
add
out
and
in
loopne
jecxz
movsl
sub
ret
push
push
out
add
adc
add
outsl
add
push
out
aaa
push
rolb
xchg
pop
inc
mov
sbb
jmp
cli
and
pop
sti
cmp
repz
jl
sbb
out
in
jae
icebp
iret
out
pop
add
and
cmp
xchg
xchg
xchg
out
pop
dec
inc
aas
lcall
and
enter
leave
lcall
sti
inc
pop
lahf
mov
xchg
pop
bound
fcoms
and
dec
mov
in
out
pop
xor
or
or
imul
in
mov
adc
pop
adc
cmp
jg
out
les
fiadds
sarl
imul
pop
add
in
sbb
jecxz
cli
jns
popa
mov
outsl
add
mov
jecxz
lea
mov
mov
and
xor
fnstenv
jp
in
aam
ja
clc
jmp
repz
cmp
test
sbb
imul
dec
rcrb
push
clc
cs
xchg
mov
xor
jns
fbstp
imul
dec
in
xlat
daa
and
xchg
in
arpl
cltd
out
jecxz
icebp
fistpll
mov
push
je
add
cld
fdivr
leave
inc
jg
jmp
push
sub
lcall
mov
fiadds
dec
xlat
dec
decl
jge
xchg
and
insl
add
ss
icebp
sti
fwait
sti
fnstsw
jmp
add
std
jae
pushf
loope
insl
outsl
add
dec
push
push
clc
lret
dec
dec
in
mov
mov
outsl
cltd
mov
ret
jl
mov
push
mov
outsb
xor
imul
add
adc
and
dec
jecxz
cmp
cld
sbb
js
jge
lret
ffree
lcall
cli
int3
addb
test
mov
inc
sbb
sbb
std
insb
cmp
adc
dec
jecxz
mov
cmp
mov
in
inc
and
cmp
mov
mov
mov
daa
adc
push
mov
lods
push
cld
push
fisubl
jle
outsl
fbstp
adc
out
int3
daa
scas
mov
dec
out
lea
ret
adc
out
lret
repz
in
cmp
dec
mov
push
jmp
push
out
xor
fidivrs
inc
popa
cmp
inc
cwtl
sub
push
addr16
mov
xchg
popa
popf
arpl
lret
mov
repz
outsb
iret
ss
sub
bound
xchg
bound
scas
fs
mov
pop
fldenv
sti
mov
cs
adc
xchg
int
popa
test
imul
xor
adc
jb
repz
out
iret
pusha
mov
imul
adc
addr16
insl
addr16
jb
pop
cs
imul
push
push
add
push
insb
in
mov
out
data16
imul
addr16
imul
imul
mov
imul
imul
divb
test
arpl
popf
shrl
lret
mov
shrl
test
out
pusha
jnp
or
jbe
fwait
cmpsb
xor
arpl
and
imul
push
add
mov
adc
out
push
add
js
incl
sub
imul
arpl
sbb
in
mov
frstor
bound
fs
popf
sbb
mov
sub
sbb
dec
repnz
xlat
pop
scas
dec
loope
dec
cld
add
jecxz
add
inc
ja
push
clc
or
insl
inc
push
xchg
ret
daa
jbe
sbb
dec
push
and
push
enter
push
pop
xchg
inc
xor
ds
add
nop
or
scas
mov
fisttpl
ret
xchg
popa
adc
lret
cmp
das
pop
mov
pop
jbe
and
pop
or
inc
arpl
lret
dec
cmp
punpckldq
pop
daa
adc
jmp
in
dec
jmp
push
fstps
mov
pop
or
sub
adc
pop
incl
popa
imul
jno
insl
pop
dec
outsb
data16
in
jmp
fs
push
insl
insb
fs
cmp
xor
inc
pop
outsl
aas
insb
insl
jo
imul
mov
push
ds
cld
cmp
insb
dec
outsl
push
sti
jns
push
imul
imul
sbb
cld
inc
inc
sub
data16
mov
xchg
add
dec
imul
outsb
outsl
out
test
insb
pop
pop
inc
adc
sub
cmp
imul
aaa
cli
inc
pop
push
stc
inc
imul
arpl
xchg
ljmp
cld
inc
push
push
imul
addr16
mov
aad
outsb
pusha
inc
pusha
addr16
std
cmp
pusha
pop
cmp
fcmovnu
mov
cmp
hlt
std
ds
pop
pop
imul
gs
dec
mov
mov
std
dec
dec
jno
outsl
cmp
mov
mov
pusha
pop
arpl
dec
imul
jle
jb
je
xchg
pusha
insl
pop
outsl
insb
imul
inc
push
in
mov
das
add
cli
xor
adc
dec
stc
das
aam
pop
stc
add
fs
push
dec
fs
pusha
dec
pop
fcomip
fdivrl
cld
dec
sbb
outsb
add
dec
fs
push
xchg
cmp
xchg
test
lret
imul
fistpll
insl
outsl
inc
imul
outsb
call
in
pop
jae
pop
push
xor
pusha
insb
fcmovnb
shll
pop
test
push
mov
fldt
jno
inc
loopne
bound
pop
sub
je
mov
xchg
jge
or
dec
pop
cmp
imul
adc
sub
jno
filds
ds
gs
aaa
jno
pusha
aas
clc
push
xor
aaa
mov
inc
inc
imul
sub
insl
repz
or
and
addr16
pop
jb
inc
outsb
rcr
dec
lea
jbe
popa
inc
in
in
movb
inc
pusha
daa
fdivr
inc
xchg
push
push
arpl
mov
pop
arpl
shr
push
push
pop
dec
mov
pop
inc
dec
pop
pop
inc
pop
inc
cmp
in
pop
pop
sbb
dec
or
insl
std
clc
cmp
xchg
cli
popa
loope
test
test
sbb
icebp
fldt
pop
hlt
inc
pop
push
shll
pop
push
inc
push
shll
std
push
pop
bound
outsb
pusha
outsb
dec
arpl
addr16
push
in
scas
inc
xchg
pop
fs
push
arpl
out
xchg
push
cld
pop
inc
adc
in
cli
jb
mov
ret
imull
and
ds
cs
sarl
mov
jo
jne
outsl
xchg
clc
cmp
or
adc
pusha
sub
pop
pop
jno
daa
das
cmp
cli
push
jecxz
pop
imul
outsl
imul
jne
inc
addr16
dec
lock
loopew
cmp
mov
out
std
dec
lods
insl
adc
sub
pop
addr16
outsl
insl
ja
mov
out
cld
dec
arpl
lds
inc
jp
xchg
push
dec
pop
gs
xor
pop
dec
xchg
fs
xchg
cmp
mov
dec
pop
arpl
pop
cmp
icebp
sbb
clc
outsl
pop
stos
cmp
fistpl
clc
incl
inc
sub
push
cmp
dec
cmp
sub
sbb
insb
sbb
ds
push
cmp
mov
shrl
subb
out
movsl
jbe
insl
mov
fs
gs
aad
adc
lods
lcall
bound
pop
arpl
cmpsl
dec
std
cmp
mov
roll
mov
rcr
lock
pop
test
push
jb
jno
mov
pop
mov
push
pop
fs
std
dec
jbe
shrb
in
imul
mov
cmpsl
iret
inc
push
clc
jl,pn
push
pop
jbe
arpl
addr16
inc
inc
aaa
fidivl
jg
daa
sbb
cmp
xchg
pop
inc
sbbl
repz
add
cmp
pop
dec
daa
mov
jbe
push
cmp
cmp
dec
mov
clc
cmp
pop
inc
dec
ret
cmp
pop
cmp
cmp
incb
lock
cmp
jb
cmp
aaa
pop
mov
outsl
cli
pop
push
outsb
jb
out
aas
push
ss
and
or
in
jno
aas
cmp
push
cmp
aad
xchg
aad
adc
cmp
movsl
jbe
arpl
jge
cmp
sub
in
pop
inc
jo
adc
cmp
fwait
jo
pop
push
ret
cmp
std
pop
test
push
jmp
inc
cmp
pop
fldt
mov
push
insl
pop
xchg
pop
pop
imul
sub
aaa
cmp
dec
fs
push
cmp
aas
inc
clc
repz
pop
mov
pop
cmp
cmp
push
aaa
push
in
add
pop
outsb
test
lds
cmp
pop
or
xchg
rolb
fisttpl
dec
mov
daa
push
mov
test
push
fcoms
adc
outsl
outsl
sub
push
cmp
dec
cmpb
pop
js
std
dec
sub
das
pop
add
xchg
push
rcrl
pop
xchg
pop
das
inc
cmp
pop
cmp
add
pusha
or
or
fisttpl
pop
daa
dec
cmp
pop
pop
push
outsl
outsl
xlat
outsl
jl
dec
add
aas
ds
cmp
sbb
popa
addr16
add
sbb
dec
mov
stc
lahf
inc
cmp
xor
repz
cs
sar
lods
pop
sub
mov
inc
cmp
imulb
add
cmp
pop
cmp
push
push
fs
dec
mov
xor
rorl
ds
arpl
mov
push
popa
pop
test
inc
cmp
rclb
sar
dec
push
jne
sub
jb
sbb
pop
call
sub
fwait
xchg
outsb
or
add
subl
xchg
cli
shlb
insb
loope
jbe
dec
loop
lret
push
mov
enter
dec
fisubrs
sub
adc
cmp
dec
inc
inc
xchg
mov
jne
mov
stc
insl
push
xchg
mov
outsl
xchg
jmp
push
mov
cmp
push
cmp
push
inc
cmp
mov
lods
mov
push
mov
popa
imul
pop
lods
inc
dec
leave
xor
pop
mov
sar
jo
outsl
or
mov
stc
cld
push
pop
inc
jo
inc
imul
sbbb
xchg
sbb
jbe
push
loopne
int3
outsb
sbb
shlb
or
pop
clc
xchg
arpl
mov
mov
pop
insl
mov
insl
pop
iret
jo
pop
jmp
add
dec
dec
sub
or
pop
aas
push
pop
jae
cli
cmp
orl
adc
imul
mov
cld
xchg
sti
pop
and
mov
sti
sti
dec
popa
mov
cmp
sub
gs
clc
cld
pop
xor
mov
out
or
fildll
inc
stos
adc
xchg
mov
or
insl
sti
mov
fistpll
ljmp
mov
sti
or
adc
add
push
imul
xor
push
mov
push
int
fs
push
call
ss
in
pop
test
imul
mov
push
jns
lcall
daa
lret
insl
fucomp
and
insb
fcmove
insl
mov
cmp
adc
add
fimuls
sti
push
clc
std
iret
push
sub
xchg
icebp
pop
clc
add
cli
imul
push
stc
push
mov
pop
jmp
iret
movsl
pop
dec
inc
xchg
das
sub
aas
adc
cld
push
test
lret
pop
fnstsw
imul
cmpsb
jne
jae
mov
sub
pop
cs
daa
cmp
andb
daa
lret
lods
or
dec
adc
pop
insl
insb
push
loope
mov
outsb
jbe
push
add
les
bound
jecxz
mov
pop
gs
inc
outsl
adc
cmp
mov
mov
inc
insl
icebp
js
xchg
mov
adc
lret
gs
stos
xor
push
imul
push
pop
pop
cmp
test
popa
xor
dec
fldl
push
lock
gs
dec
pop
insl
je
push
outsl
insb
and
imul
jo
pop
bound
pop
scas
xlat
pop
pop
pop
imul
sti
push
pop
outsb
aas
pusha
dec
jne
pusha
cli
or
pop
mov
sub
mov
in
addr16
or
push
popl
outsb
and
push
decb
sbb
stc
lahf
std
aas
mov
sbb
sarb
adc
out
mov
mov
daa
test
test
jg
dec
hlt
mov
movb
scas
in
mov
mov
dec
xchg
pop
idivb
mov
scas
ret
shrl
mov
pushl
int3
iret
lods
mov
rcr
dec
mov
ret
call
les
mov
test
in
enter
movsl
aad
sahf
scas
mov
psubw
repnz
pushf
mov
mov
fwait
mov
mov
inc
incb
cltd
mov
mov
rcl
popf
lods
mov
mov
aam
scas
enter
mov
mov
in
fistl
aas
lret
mov
mov
mov
psubw
repnz
enter
mov
mov
incb
lret
stos
enter
mov
in
ret
mov
int
test
jmp
inc
divl
mov
mov
jg
call
iret
mov
mov
mov
pop
repnz
mov
int3
mov
mov
ret
mov
incb
mov
in
mov
out
ret
jmp
incl
mov
mov
mov
mov
mov
and
mov
inc
lahf
into
xchg
cld
inc
cltd
ret
divl
icebp
out
jg
fisttps
jmp
int
shlb
and
iret
ljmp
shlb
call
loop
mov
dec
shr
mov
int
and
scas
mov
cmpsb
jl
call
sahf
and
icebp
mov
repnz
add
lret
mov
repnz
pop
int3
mov
and
lahf
ror
fwait
jle
or
mov
cmpsl
dec
mov
mov
stc
cmp
cmpsb
mov
scas
movsl
arpl
repnz
add
jg
lods
es
mov
paddsb
repnz
scas
test
lahf
rcr
xor
pop
enter
fbstp
call
scas
test
outsl
rorl
movsl
rol
fiaddl
mov
lahf
pmulhuw
repnz
cmpsb
les
aas
nop
pop
enter
cli
mov
mov
scas
sahf
mov
adc
in
test
hlt
dec
iret
aas
or
mov
mov
int
jg
push
inc
aam
aas
lds
dec
pop
push
jmp
das
inc
push
push
callw
bound
lret
lods
out
bound
fldcw
dec
dec
mov
stos
fisttps
sub
dec
dec
dec
inc
sub
mov
push
push
cmp
fsqrt
mov
mov
std
cmp
neg
std
ljmp
xor
pop
mov
xor
imul
push
pop
xlat
jae
pusha
cmc
sbb
nop
outsl
aas
inc
dec
dec
imul
clc
push
or
sti
sub
cli
pusha
cld
jnp
jo
xor
rcrl
aam
sti
and
and
das
sub
in
or
ljmp
and
and
pop
imul
repz
js
mov
outsb
stc
adc
jg
add
mov
pop
pop
pop
jo
pop
mov
mov
std
sbb
pop
mov
fldt
subl
cwtl
sub
cs
test
das
imul
sub
adcl
dec
insl
addr16
pop
insb
dec
dec
pop
imul
push
pop
push
push
xchg
pop
call
mov
cmp
lret
push
pop
addr16
inc
dec
cmp
outsl
mov
or
imul
and
pop
outsb
pop
pop
sub
fs
sbb
mulb
push
pop
sub
out
push
sti
pop
add
dec
inc
inc
dec
inc
inc
fistpl
adc
daa
xchg
push
inc
mov
or
add
jb
fildl
inc
dec
sbb
pop
inc
push
dec
dec
sub
sub
add
pop
pusha
insl
insl
xor
jo
jae
and
add
pop
and
cmp
mov
outsl
sub
fwait
xor
aaa
ret
mov
push
dec
dec
pusha
fs
add
and
cmp
inc
push
or
adc
cmp
popa
sub
pop
stos
xor
dec
push
mov
pop
mov
sub
icebp
inc
mov
push
pop
ss
cltd
dec
sbb
loop
and
add
lea
addr16
inc
pop
jle
push
inc
test
dec
sbb
mov
push
pop
lods
sbb
inc
sub
and
pop
aam
xor
mov
jno
mov
and
add
lea
jbe
inc
pop
lock
insl
jecxz
or
inc
dec
pusha
aad
int
imul
pop
rcll
mov
xchg
cmp
gs
test
pop
xor
and
js
sub
out
pop
pop
jns
pop
push
cld
call
or
cmp
and
sub
sub
xor
outsb
ja
popa
pop
sub
pop
dec
outsb
movsl
fidivs
pusha
iret
arpl
jne
or
pop
sub
sub
sbb
pusha
push
add
sbb
imul
xchg
push
mov
sarl
jl
pusha
sub
inc
sub
fs
xor
insl
sub
movw
dec
inc
push
pusha
lods
rorb
enter
mov
incl
sbb
xor
sub
jne
popa
pop
sub
sbb
pop
mov
jo
outsl
mov
pop
outsb
jbe
push
das
pop
sub
xchg
mov
insl
mov
insb
arpl
imul
or
fstps
sbb
cmp
out
mov
shrl
sbb
pop
das
pop
clc
push
aaa
sbb
jno
xor
sub
rcrl
mov
dec
pop
cltd
das
insb
fists
cmp
sub
daa
and
in
insl
and
cmp
and
sub
mov
cld
outsl
fsubl
sub
sub
pop
sub
das
repz
pop
xor
aaa
cmpsl
sbb
mov
jns
test
sub
aaa
and
sub
pop
and
jae
lahf
arpl
xor
negl
lods
insl
je
pop
mov
sbb
inc
insl
push
lods
xlat
fistpll
jb
adc
push
addr16
cmp
notb
fimull
ficompl
ja
sbb
jl,pn
jo
inc
out
dec
fs
es
dec
dec
shll
gs
cmp
jge
dec
sub
cmp
cmp
pop
jo
cs
das
push
push
je
xchg
dec
dec
stc
adc
aaa
inc
jmp
dec
fisttpll
or
push
cmp
pop
jno
fs
pop
addr16
pop
movsl
pop
out
ljmp
pop
inc
xchg
sbb
dec
xchg
pop
add
sarl
movb
xchg
gs
dec
pushf
push
ds
bound
jne
aaa
mov
fldcw
cmp
fs
sub
stos
dec
daa
mov
xlat
mov
cmp
cmp
pop
cmp
mov
in
jbe
pop
dec
ja
aas
adc
push
das
inc
arpl
outsb
mov
je
jae
jno
add
sbb
testb
arpl
sbb
outsb
and
mov
outsb
movsl
ret
popa
pop
leave
imul
dec
dec
dec
cmp
addr16
mov
mov
outsl
ja
ljmp
mov
dec
push
cmp
arpl
xchg
aas
aas
data16
inc
sub
sub
fistpll
xor
cmp
inc
inc
ds
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
push
ret
rorb
push
push
pop
pop
popa
arpl
mov
add
pop
xchg
repz
mov
jmp
divb
je
dec
aas
inc
cmp
and
daa
pop
insl
and
daa
jae
adc
inc
bound
aas
cmp
push
loop
dec
addr16
cmp
call
daa
cmp
jae
outsw
arpl
jb
lret
pusha
adc
push
inc
outsb
pop
add
inc
packuswb
pop
add
sub
sub
inc
sarb
jbe
cmpl
mov
add
inc
fs
sti
ja
enter
cmp
sub
outsl
adc
pop
leave
or
xor
icebp
pushl
or
aas
dec
inc
sub
gs
cmp
movsl
sbb
push
bound
mov
jmp
jae
jo
inc
ds
inc
and
dec
lret
rorb
insb
fstl
std
push
jo
insl
sbb
adc
imul
add
sub
addr16
leave
jg
std
std
pusha
div
sbb
std
add
cld
pushl
xor
sti
sar
ficomps
push
and
sub
or
and
ja
fildll
dec
and
addr16
shlb
dec
in
pop
inc
orl
ljmp
xchg
daa
js
xchg
cmp
sbb
pop
sub
mov
gs
jne
push
adc
fiaddl
cmp
stos
jl
insb
push
dec
aaa
fistpl
push
jo,pt
es
push
stc
pop
pop
push
mov
jmp
and
pop
jo
pop
dec
insl
pop
adc
mov
jo
pusha
je
xor
dec
insl
jmp
sub
pusha
std
sub
dec
pop
mov
and
add
or
es
sbb
and
lcall
jno
mov
sub
sub
jbe
mov
sub
sub
jg
ljmp
clc
sub
sub
jbe,pn
sub
movsl
shrb
sub
or
adc
push
sub
jo
xchg
cs
loop
pushl
sbb
call
fsubrs
push
sub
jne
movsb
das
mov
xor
sub
aaa
clc
mov
cs
divl
or
and
daa
xor
lods
xor
icebp
ljmp
push
xor
arpl
add
dec
xor
adc
pop
xor
call
xor
xor
shll
cld
xor
int
icebp
xor
fisubrl
ss
cmp
pushl
inc
xor
cmp
data16
xor
cmp
aaa
scas
xor
cmp
loope
pushl
cmp
aaa
pop
cmp
cmp
cmp
aas
cmp
mov
xchg
aaa
popf
cmp
cmp
aaa
cmp
cmp
add
pop
cmp
cmp
cmp
ss
cmp
cmp
cs
fistpll
sub
stos
sub
fisubrs
subb
xor
jle
subb
sub
in
sub
xor
fnstsw
and
out
ljmp
mov
lcall
sti
ljmp
xlat
xor
xor
xor
xor
das
ds
xor
imul
stc
xor
xor
xor
lcall
jge
xor
xor
xor
xor
xor
xor
mov
in
clc
xor
pop
xor
ss
cmp
ljmp
xor
cmp
ss
xor
aaa
xor
cmp
test
decl
cmp
ss
cmp
pop
xor
js
test
sahf
xor
ret
test
xor
call
ss
cmp
cmp
ss
sbb
xchg
cmp
cmp
popa
cmp
int
cmp
outsl
xchg
mov
fidivrl
fidivrs
jmp
out
cmp
sub
ljmp
pop
sub
or
sub
sub
sub
test
stos
sub
fldt
fisubrs
repz
or
nop
cs
das
lock
std
sub
dec
sub
mov
sub
jl
jg
sar
subb
sub
mov
les
shrb
das
push
sub
cs
lcall
fldcw
cs
sub
inc
xor
stos
das
enter
sub
ja
push
das
jg
xchg
xor
sub
aaa
cli
jmp
xor
das
pop
xor
xor
bound
jne
popf
cs
xor
xor
mov
in
xor
das
adc
xor
xor
xor
xor
decb
ret
xor
xorl
shlb
in
xor
ljmp
inc
cmp
data16
insl
xorb
cmp
ss
loop
pop
call
cmp
mov
and
and
decl
push
mov
ss
cmp
aaa
add
push
push
aaa
or
cmp
dec
aaa
jp
popl
cmp
cmp
or
sbb
sbb
cmp
cmpb
jg
nop
cmp
iret
ss
fnstcw
loope
push
aaa
cmpl
mov
cmp
cmp
popa
cmp
in
sub
sub
sub
push
sub
jg
mov
lods
sub
sub
ret
push
jmp
sub
sub
sub
sub
dec
sub
sub
pushl
dec
cmpsb
sub
fsubrs
fldt
call
sub
das
cmp
cs
jno
das
jl
sub
push
push
sub
hlt
sub
push
jne
inc
ss
sbb
sub
das
xchg
out
inc
lea
arpl
cs
xor
xchg
xor
das
or
and
das
std
pushl
mov
pop
xor
xor
xor
xor
jnp
js
inc
aaa
ss
in
jmp
push
gs
ss
cmp
dec
pop
xchg
clc
jg
jle
push
cmp
inc
cmp
push
xor
insb
cmp
jle
sbb
das
cld
mov
cmp
cmp
dec
cmp
dec
inc
push
fildl
cmpsl
xor
xor
xor
xor
xor
sbb
aaa
fisubrl
or
ss
xor
dec
outsl
mov
ss
xor
xor
sub
mov
push
or
pop
clc
das
std
xor
cmpsl
xor
fbstp
fwait
xor
out
pop
or
test
xorb
xor
ljmp
ss
xor
popa
ss
cmp
cmpl
fistps
pushl
cmp
jmp
cmp
ss
cmp
aaa
jno
mov
jg
cmp
ss
aaa
add
aaa
jg
mov
mov
aaa
pushl
xchg
cmp
cmp
aaa
call
push
cmp
movsl
mov
push
cmp
jnp
mov
in
pop
push
mov
fdivs
adc
sub
pop
or
clc
cmp
cmp
cmp
cmp
push
repz
sub
outsl
ljmp
xchg
jae
xchg
lahf
das
test
sub
adc
dec
sub
sbb
xor
das
idivl
ljmp
sub
sub
lret
sbb
pop
adc
push
mov
add
fisubrs
gs
or
pop
add
jae
popa
insb
insb
push
jg
popa
je
add
dec
dec
pop
push
outsl
data16
popa
jb
pop
push
outsb
arpl
je
mov
clc
pop
jno
jae
dec
and
fnstsw
mov
lret
shll
shl
das
dec
imul
mov
mov
outsl
ja
push
push
push
outsl
popa
insl
sbb
lods
adc
adc
mov
pop
stos
outsl
int3
add
test
mov
jg
arpl
fs
and
jo
jae
arpl
in
outsb
xchg
aas
arpl
imul
je
sub
jae
bound
adc
jo
lock
mov
fucomip
add
jns
or
stc
or
inc
jo
and
push
jb
jns
xor
xor
sub
push
gs
add
jae
bound
push
aas
jb
outsb
outsl
sti
in
cmp
ja
outsb
imul
or
ficoml
sub
iret
in
in
jbe
imul
push
jg
aas
imul
bound
jo
inc
gs
popa
push
ds
fcomp
gs
pop
inc
js
adc
push
push
adc
int
jg
jns
dec
jmp
inc
fs
mov
mov
imul
add
sub
dec
inc
inc
xor
push
lret
je
inc
inc
mov
fcmove
mov
jae
add
pop
mov
inc
outsl
sub
cmp
push
int
jne
or
inc
push
aaa
mov
fisttpll
insl
popa
dec
pcmpeqw
test
xor
lds
add
outsb
adc
push
push
insl
xchg
mov
jbe
inc
jmp
outsl
dec
push
mov
fs
daa
push
sti
imul
cmp
cmp
jae
and
imul
pop
insl
jae
mov
decl
aaa
cmp
dec
dec
dec
dec
jns
xor
arpl
mov
xor
add
ja
idivb
add
xor
cs
jg
add
cld
or
xor
scas
cmpsl
xchg
pop
pop
enter
outsl
mov
fwait
adc
in
adc
adc
iret
xor
sti
ja
add
mov
add
aas
mov
fsts
shll
das
inc
imul
jnp
or
mov
adc
addr16
hlt
xlat
outsb
or
add
fsubr
jle
popf
add
jg
add
rorl
pusha
pop
add
add
mov
hlt
add
cmpsl
call
add
stos
push
xchg
mov
add
popf
push
ds
xchg
mov
aam
sbb
js
push
cmp
aam
xchg
js
inc
xchg
add
stc
pop
cmpl
iret
jno
inc
mov
xor
dec
pop
inc
rcll
add
add
push
adc
or
pop
jl
add
push
add
push
mov
addb
and
add
add
inc
repnz
cld
mov
add
rolb
nop
add
cmp
add
sub
cltd
shlb
jns
cltd
incl
stc
add
push
sbb
adc
xchg
add
push
test
incl
addb
imul
jg
sub
fdivr
decl
add
mov
add
add
push
add
jb
jbe
sbb
cs
sub
add
add
add
fstps
push
mov
or
pop
stc
jg
inc
jb
popa
je
inc
imul
outsb
addr16
or
neg
sti
imul
inc
insb
jne
push
pop
fsubrs
and
je
push
imul
aaa
dec
push
add
outsl
jae
dec
popa
outsb
fs
sub
subb
sub
mov
jae
outsl
jbe
inc
js
and
jo
pop
sti
std
cmovle
inc
inc
or
mov
insl
test
push
jb
arpl
outsb
add
cmp
outsl
out
aaa
push
pushf
dec
push
lock
dec
outsb
outsw
adc
pop
imul
jb
xchg
popf
insl
pop
mull
adc
inc
mov
xchg
push
jns
and
gs
jge
dec
ss
push
xchg
jae
outsl
outsb
mulb
xchg
mov
fs
out
fisubl
jb
jns
jns
fldl
xchg
mov
adc
icebp
outsb
stos
clc
pop
gs
outsl
outsl
insb
in
xor
mov
lock
outsl
je
inc
xchg
push
fmull
or
out
int
lea
bound
sbb
test
pushl
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
mov
mov
decl
or
and
mov
add
mov
jp
call
mov
sti
mulb
add
inc
push
sbb
ljmp
or
repz
inc
sub
push
push
jns
aaa
xor
out
dec
out
ud0
inc
xchg
xchg
sbb
mov
or
lcall
fisttpl
xchg
lock
push
or
icebp
adc
add
sub
bound
push
test
insl
add
push
push
add
out
movsl
dec
mov
fstpt
adc
or
mov
lret
mov
andl
sar
or
out
sub
inc
das
dec
or
aam
fadds
ret
mov
jo
gs
imul
je
push
pop
pop
pmullw
je
wbinvd
insl
pop
mov
cmp
insl
or
data16
rcrl
aaa
push
mov
push
mov
adc
ret
pop
ja
out
jb
jae
arpl
outsb
or
jo
je
int
imul
or
insb
or
insl
bound
mov
iret
jle
ja
or
jbe
push
mov
into
sbb
outsb
arpl
inc
inc
js
inc
jb
int
pop
dec
aam
jo
outsb
je
jae
aas
divl
mov
push
jae
xchg
mov
loopne
sbb
mov
outsb
xor
rorb
jne
jo
fsubrp
xor
or
xor
aaa
jne
mov
sbb
push
fs
scas
adc
mov
adc
xor
gs
xor
adc
lods
fnsave
push
outsl
mov
mov
pushf
fsts
push
xor
scas
push
push
push
lods
insl
jne
jb
popa
inc
sbb
mov
push
outsb
insl
js
out
or
jo
inc
xchg
jns
rclb
xchg
push
bound
jg
mov
insl
dec
imul
inc
add
btr
dec
add
sbb
pop
ja
pop
sidtl
add
fs
aam
loopne
addr16
adc
add
add
xchg
pop
xor
sbb
add
adc
push
mov
test
js
mov
inc
addb
mov
push
push
sti
mov
cs
jb
nop
xor
push
enter
jb,pn
xor
in
add
test
sub
es
arpl
daa
rorb
xchg
mov
pop
or
repz
lock
mov
sbb
jns
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
