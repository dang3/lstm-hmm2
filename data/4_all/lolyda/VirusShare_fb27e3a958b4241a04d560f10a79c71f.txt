mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
lods
mov
outsl
pusha
outsb
mov
cmp
sub
repz
ud1
inc
add
fsubrl
sar
push
fcompl
pop
add
pop
outsb
jg
ljmp
xor
mov
and
push
fs
pushf
jl
or
and
adc
lea
test
push
fidivs
mov
inc
xor
fcomps
pop
lahf
mov
in
std
cmp
or
mov
dec
test
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
std
mov
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
push
in
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
ss
mov
jmp
push
and
mov
movsb
das
je
or
mov
pop
push
push
lea
sub
sub
sbb
jbe
push
dec
repnz
inc
dec
push
xor
into
bound
inc
push
scas
pop
js
xchg
scas
mov
inc
push
mov
test
ret
sti
cmpsb
daa
adc
add
je
mov
push
imul
das
repz
iret
or
pop
lock
andb
xchg
std
jl
lcall
adc
add
inc
adc
xchg
adc
add
imul
or
dec
add
pop
push
loope
adc
inc
into
mov
mov
push
push
lds
sbb
out
inc
pop
mov
push
mov
inc
sbb
dec
or
sti
push
sub
sub
dec
push
ret
std
je
bnd
cmp
xrelease
inc
add
stos
push
lret
mov
rorb
inc
rorb
add
adcl
enter
arpl
pop
jecxz
les
mov
push
es
dec
adc
push
sbb
mov
fistpl
adc
pop
mov
mov
push
xor
rcll
rclb
je
xor
outsl
shl
ret
mov
mov
lods
jge
mov
adc
sub
je
ja
and
or
sub
or
sub
mov
ret
push
xor
inc
inc
cmp
stos
repz
clc
fdivl
add
lock
adc
xchg
jge
sbb
aad
cmp
add
jae
mov
inc
incl
lea
push
nop
int3
aaa
mov
xor
sbb
leave
push
test
mov
mov
pop
push
dec
cmp
in
cmp
pop
push
adc
pop
fadds
adc
outsl
dec
lock
xchg
pop
push
push
cmp
jmp
cmp
add
push
add
cs
pop
pop
xor
and
ficoms
hlt
or
mov
push
push
addl
lret
cmp
push
add
arpl
hlt
data16
or
push
lret
dec
pop
jb
add
pop
lock
push
lock
scas
cmp
jp
and
mov
decl
jae
in
lods
mulb
adc
xor
adc
cmpsb
inc
mov
mov
nop
cmp
xor
push
daa
fwait
mov
push
push
add
prefetch
or
int
inc
je
xor
sub
ret
mov
iret
dec
push
rcl
push
adc
adc
dec
test
in
sbb
pop
mov
lea
pushf
push
xchg
sbb
jle
andl
sti
xor
ret
roll
pop
jae
clc
cld
lret
or
jg
lahf
xorl
cmp
jne
mov
clc
mov
push
dec
jns
add
out
rcl
jl
add
sub
or
jmp
dec
rol
leave
mov
mov
jmp
mov
mov
mov
fcomps
sbb
aas
iret
jno
call
xor
insb
icebp
arpl
sbb
add
mov
cmp
add
ffreep
mov
js
arpl
ja
mov
pop
cld
mov
xchg
sub
sub
adc
mov
mov
mov
sub
mov
fadd
iret
push
lret
lcall
inc
fstl
push
mov
sub
push
xor
loope
out
das
cmp
inc
sbb
arpl
push
repnz
scas
ljmp
pop
icebp
jp
cmp
icebp
rorb
xor
test
scas
pop
daa
sar
mov
enter
adc
push
sbb
lods
or
loop
sahf
ret
popa
rorl
push
push
lods
push
push
push
mov
push
push
insb
int
cmp
pop
pop
mov
xor
adc
adc
das
inc
sbbl
add
sub
jmp
cmp
and
call
out
sub
sbb
pop
push
cmpsl
sbb
lret
mov
mov
mov
cli
and
cmp
mov
addr16
xchg
pop
testl
jno
dec
out
mov
inc
push
mov
xor
adc
push
sbbb
into
push
xor
inc
mulb
mov
aaa
and
or
adc
adc
adc
pushf
lock
cs
addl
add
push
push
xchg
sub
dec
xchg
jp
or
ja
add
cmp
int3
cmp
or
mov
add
sub
add
fwait
push
or
push
inc
cmp
data16
enter
fistps
add
data16
mov
inc
xchg
add
inc
loopne
sub
mov
add
jnp
or
or
and
rorb
jne
jae
sub
adc
adc
ja
mov
xor
sbb
aaa
repz
fldl
mov
mov
pop
push
sbb
push
data16
push
and
bound
out
dec
mov
sbb
add
mov
jb
mov
rcll
ret
dec
mov
rclb
and
push
cwtl
push
or
and
repnz
lcall
int3
inc
sbb
nop
adc
xlat
bound
jmp
dec
sub
xchg
frstor
jl
xor
xor
sbb
mov
icebp
push
push
adc
testl
pusha
test
or
std
xchg
outsl
test
adc
mov
movsl
dec
das
sti
jp
arpl
push
sub
xlat
inc
mov
push
add
js
enter
call
js
mov
mov
pushf
add
lods
cmp
adc
or
dec
call
and
or
das
mov
xchg
int3
lock
sub
mov
insl
bound
lods
pushf
test
addr16
sbb
xchg
jo
das
mov
pop
stos
mov
jmp
push
movl
xchg
cmp
pushf
add
cvtps2pi
insb
aas
clc
push
pop
or
fmull
sbb
jl
insb
jecxz
pusha
xor
rclb
cmp
or
lahf
mov
jmp
fs
inc
outsb
xchg
inc
inc
data16
pop
inc
pusha
xor
cli
mov
jge
xchg
das
push
sbb
push
sbb
les
sub
xchg
xor
pop
push
pushf
pusha
fimull
mov
mov
in
addb
and
sub
dec
cwtl
mov
dec
push
pop
mov
adc
pop
xchg
sti
or
xchg
push
cwtl
clc
stos
sbb
clc
adc
mov
push
cwtl
test
sbb
sar
xchg
ds
rcll
test
movsb
jecxz
and
xchg
sbb
popf
adc
jae
jns
and
adc
push
nop
pushf
jp
sbb
xchg
xchg
xor
mov
lock
pusha
jecxz
lock
clc
pusha
cmc
adc
pop
jmp
adc
call
fwait
sbb
push
negb
sahf
adc
jg
int
add
ds
jo
and
push
add
sahf
cmp
jl
repz
xor
insb
pushf
and
sbb
push
cmp
daa
ret
decl
outsb
popa
push
fdiv
clc
dec
hlt
add
push
lock
adc
aaa
add
shrl
inc
cltd
sub
add
clc
out
lcall
adc
push
cs
dec
xchg
sahf
movsb
sbb
cmp
pop
inc
les
ffreep
fs
mov
or
into
pop
fcoms
inc
pusha
ret
movups
aaa
sub
sidtl
or
xor
adc
nop
fcoms
aad
test
dec
adc
xchg
mov
xchg
sbbl
mov
sub
rcrb
adc
adc
jg
mov
add
pushf
sub
mov
insl
bound
mov
int
insb
test
jl
js
scas
dec
ds
loopne
in
in
sub
ficoms
inc
push
repnz
addl
movsb
push
cwtl
xchg
cmp
and
repnz
orb
inc
leave
jo
pusha
or
cmp
inc
push
cmp
imul
add
dec
add
dec
xchg
lret
cmp
repnz
add
sbb
mov
xorl
push
xor
ss
cmp
adc
aam
leave
add
push
je
push
mov
jp
mov
dec
pusha
push
push
add
cli
wrmsr
clc
js
mov
cmp
adc
jo
and
push
mov
and
dec
and
sbb
cld
pop
add
mov
add
test
sub
or
jns
imul
js
daa
call
pusha
sti
xor
push
outsb
and
push
jns
adc
ljmp
pop
jbe
push
js
and
aam
push
push
add
in
xchg
or
jae
dec
mov
punpckhbw
cmp
iret
adc
dec
sub
xor
arpl
sbb
sub
xchg
popa
in
aad
lea
jge
or
lods
outsl
pop
or
outsb
mov
push
inc
mov
je
adc
mov
mov
stos
out
jnp
repz
xor
insb
xor
cmp
test
movb
mov
sub
xlat
jne
ret
fs
ficoml
pop
and
mov
pop
call
sbb
je
xchg
or
das
stc
adc
or
or
js
sub
adc
icebp
mov
push
pop
mov
push
sub
cmc
call
andb
or
outsb
in
aas
sbb
cmp
ficoml
mov
push
notl
pop
cmp
aad
int
sub
test
je
mov
push
push
dec
mov
add
add
xor
jae
daa
jne
das
xor
fldt
add
adc
cltd
idiv
xchg
loop
decl
xor
rorb
jb
or
jle
ret
inc
cmp
jg
inc
in
sbb
push
or
addr16
lret
jmp
sbb
sbb
ror
enter
sbb
shrb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
push
push
sbb
sbb
dec
dec
inc
inc
sbb
sbb
cmp
xor
sbb
sbb
sub
and
sbb
sbb
sbb
adc
sbb
sbb
or
add
out
stc
sbb
inc
clc
inc
rolb
mov
iret
mov
inc
nop
inc
xchg
cwtl
mov
test
mov
sbb
mov
sbb
sbb
aam
fdivl
xor
ss
sbb
sarb
lea
rcrb
aad
push
les
sbb
push
imul
pop
cmp
and
mov
addr16
dec
ret
push
xor
add
pop
pusha
and
cmpl
mov
jae
std
call
cld
ljmp
inc
orl
push
sbb
clc
inc
dec
or
xor
or
mov
adc
xchg
cmpl
mov
subb
jg
and
insb
push
mov
jg
inc
xchg
lea
test
or
add
pusha
enter
xor
xchg
mov
jg
xor
and
inc
or
add
or
repnz
jbe
aam
dec
mov
cld
inc
testb
in
movzwl
jmp
jmp
mov
sub
jbe
jmp
push
pop
pusha
push
push
and
jge
inc
push
imul
in
mov
mov
mov
insb
and
mov
cs
xor
add
xor
add
das
mov
ret
and
lock
inc
lahf
icebp
aaa
mov
mov
ret
pop
scas
sbb
mov
mov
sbb
stos
mov
push
and
add
pop
fsubr
xor
jo
lock
test
adc
sbb
mov
pop
inc
lea
adc
ret
and
int3
add
out
in
mov
dec
faddl
or
xor
mov
mov
popa
addr16
pop
add
mov
nop
inc
xlat
insb
inc
je,pt
add
add
pop
shll
cld
dec
dec
shrl
xchg
test
lret
shll
in
lcall
imul
push
dec
push
sub
push
pop
outsb
ljmp
jnp
adc
adc
add
adc
fwait
in
jb
pop
or
or
sbb
movsl
leave
adc
pop
outsb
sbb
or
jmp
das
add
mov
sub
adc
nop
xor
adc
add
sbb
comiss
repz
sub
pop
sub
adc
aaa
lcall
out
movhps
scas
jmp
xchg
pop
sbb
xchg
daa
push
dec
xlat
jne
addl
rdtsc
lcall
inc
push
adc
sub
or
dec
xlat
insb
pop
icebp
testl
xlat
jne
xlat
adc
jno
mov
pop
dec
add
mov
xlat
je
out
movsl
addr16
mov
adc
fwait
pop
dec
or
push
scas
arpl
xlat
jne
mov
cli
or
pop
inc
aas
dec
mov
dec
shll
lcall
pusha
push
dec
inc
imul
pop
ss
fimull
in
add
frstor
cmpsb
adc
add
and
je
adc
hlt
dec
inc
add
shll
dec
xsave
shll
and
dec
shll
mov
sarb
adc
rolb
inc
adc
pop
and
jne
inc
loope
or
mov
inc
mov
jmp
mov
sbb
add
loopne
cmpsb
jmp
jl
jbe
jo
pop
mov
lcall
add
shll
inc
cmp
cmpsb
imul
add
int
imul
dec
shll
out
fcmovbe
fwait
xor
ret
pop
stc
push
fsubs
mov
xor
add
push
and
fwait
or
adc
nop
and
and
jns
je
and
xor
out
add
add
lcall
dec
inc
cmp
imul
push
sbb
adc
and
cmpsb
pop
ss
add
xor
out
lcall
ror
lcallw
mov
jns
nop
and
and
xor
add
add
xchg
insl
outsl
and
sub
orb
push
inc
xor
add
xor
sbbb
or
decb
xchg
push
repnz
rorb
dec
leave
test
xchg
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
add
into
fs
inc
push
inc
push
dec
xor
cs
insb
sub
push
xor
dec
inc
push
sbb
adc
incl
test
mov
mov
out
out
lcall
clc
std
stc
cli
cld
idiv
std
add
inc
push
stc
clc
cmp
stc
sti
out
call
mov
sti
mov
pop
mov
dec
sbb
pusha
outsb
push
push
ljmp
pop
pop
pop
imul
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
loop
mov
in
push
sbb
push
pop
pop
lds
or
std
fistps
ds
pop
mov
push
cld
pop
mov
push
mov
inc
or
pop
sti
pop
les
mov
decl
pop
rcl
fistpll
or
inc
push
push
shrl
jmp
sub
ret
fsubrs
inc
inc
inc
lock
and
xlat
sti
or
push
xor
ss
out
push
mov
pop
sbb
or
inc
push
add
pop
add
mov
lret
enter
or
fnstenvs
push
jp
fwait
outsl
mov
pop
and
dec
add
fwait
mov
or
adc
popf
fdivr
adc
jb
cwtl
dec
sti
push
repnz
pop
shlb
add
pop
sub
pop
jb
or
out
or
push
nop
in
notl
pop
outsl
pop
fstpt
daa
mov
cmpsb
fs
insl
pop
fisttpl
dec
push
jp
cmp
pop
inc
popa
or
or
cld
dec
push
push
dec
cli
adc
arpl
adc
or
notb
jbe
std
jmp
mov
pop
mov
jns
pop
sbb
gs
cs
mov
lock
pusha
cmpsb
mov
pop
push
dec
cli
xor
add
xor
outsl
mov
inc
jecxz
dec
arpl
push
jae
cli
jb
adc
ljmp
mov
pop
dec
popa
out
cld
lahf
cli
adc
xchg
ljmp
or
fwait
xchg
decb
dec
cld
iret
push
cmpb
enter
push
clc
jo
mov
inc
sbb
push
popa
lcall
dec
loop
das
pop
mov
rcll
orl
or
fisttpll
jecxz
dec
jg
pop
in
jg
std
cmpl
xor
rcll
jmp
mov
fdivr
dec
in
dec
arpl
push
xor
pop
xorl
sub
cli
xchg
fists
sub
fidivrs
jge
and
mov
lahf
xchg
mov
icebp
or
jg
sar
and
mov
or
pcmpgtw
xchg
shll
mov
add
mov
sub
mov
and
mov
cmp
js
jno
dec
sbb
xchg
loopne
or
and
inc
and
jmp
lret
or
cmc
cli
std
js
and
sti
fistpll
pop
sbb
xor
cmpsl
pop
cmpsb
or
jg
sbb
notl
movsl
imul
decl
cmpsl
outsb
mov
stc
stc
adc
loope
pop
pop
jecxz
call
std
push
cmp
leave
push
xor
bound
shll
dec
arpl
incl
cli
xchg
bound
xor
adcl
test
movsl
movsl
mov
loope
xlat
les
dec
xchg
xchg
mov
rcll
sti
pop
mov
cmova
fcmovnb
mov
mov
mov
dec
mov
and
push
iret
pop
loopne
mov
dec
arpl
std
jg
fisttpl
sbb
push
pop
jl
je
push
mov
fidivrl
dec
push
in
dec
pop
loopne
mov
or
jle
loop
mov
jp
push
js
push
push
data16
jp
sub
test
push
jg
jecxz
inc
and
push
outsl
adc
mov
cmp
and
ds
jecxz,pt
mov
fstpt
push
jo
push
arpl
repnz
test
std
jg
pop
jb
test
fstpt
adc
daa
ja
test
aas
dec
jecxz
dec
out
filds
jmp
imul
or
inc
fisubs
mov
in
dec
xor
fprem
push
xchg
fisttpl
push
pop
pop
lds
jmp
idiv
testb
inc
and
inc
notb
jb
call
je
outsl
in
push
lahf
xchg
dec
in
das
fsubl
setbe
push
clc
rcll
jp
call
lods
or
jle
outsl
out
insb
inc
xchg
stos
paddsw
ds
add
push
add
push
jno
fs
push
xor
scas
popa
inc
out
pop
clc
ret
out
mov
stos
adc
or
sti
in
loop
pop
adc
frstpm(287
adc
sti
push
testl
jl
aas
ficomps
push
loope
dec
cmp
push
or
jle
lock
fcmovne
arpl
pop
stc
rclb
std
notb
test
dec
sahf
sbb
or
mov
in
ss
sbb
out
mov
clts
movq
jae
ret
sti
push
jmp
addr16
shll
adc
push
mov
mov
cli
aam
ja
pushl
mov
insb
cmpsl
lea
dec
xor
pop
fistpll
add
xor
or
inc
or
jl
pop
xchg
cli
rcrl
push
cmp
push
add
test
stc
gs
and
push
rcl
iret
inc
mov
mov
and
mov
sub
push
jecxz
adc
rcll
pop
test
sub
xor
cs
xor
sub
dec
or
aas
outsb
fistpl
mov
iret
dec
out
clc
cld
clc
aaa
ret
out
push
addl
out
pushf
fcmovnu
aaa
or
test
inc
sbb
mov
mov
dec
test
sbb
dec
dec
cmp
fdivp
mov
xor
xor
pop
aaa
sub
fsubr
dec
inc
in
sub
insl
fbstp
mov
fmul
pop
dec
add
xchg
pop
insl
data16
or
add
dec
push
inc
mov
orl
das
cld
outsb
aaa
data16
xchg
repz
cli
adc
adcl
outsl
xor
insb
or
dec
cli
jno
lea
insb
jge
or
fdivrp
push
in
sub
mov
loop
psrld
and
push
push
cmp
sbb
gs
inc
out
mov
in
or
aaa
lock
pop
or
clc
or
lea
sbb
test
inc
incl
lret
jne
push
adc
divb
adcl
idiv
fnsave
pushl
xchg
test
push
test
add
decl
filds
orl
sarb
push
dec
push
je
jne
cli
incl
repz
pop
mov
test
sbb
push
mov
pop
push
out
jl
jnp
test
jle
dec
sub
lcall
fbstp
js
subb
aaa
aad
jae
test
test
mov
xchg
xchg
xchg
xchg
mov
sqrtps
sbb
fdivrl
push
test
arpl
push
fistl
outsl
mov
clc
sub
in
inc
lods
jp
or
jno
ja
xor
outsl
pushl
pop
or
xor
insl
cld
inc
arpl
aaa
cmp
add
inc
pop
ljmp
ss
jo
or
ljmp
test
das
leave
ss
insb
or
xor
pop
subb
js
dec
decl
dec
add
adc
stos
xchg
outsl
jp
sbb
adc
cmp
cmp
jg
jl
fstpt
insl
in
out
xchg
jg
mov
xchg
sahf
popa
les
jg
pop
push
jmp
sbb
mov
pop
test
test
outsl
mov
dec
or
ss
ret
inc
jae
js
mov
adc
bound
push
cltd
decl
fildl
jnp
cld
push
outsb
add
dec
jmp
in
inc
decb
push
in
jle
repz
jae
xor
outsl
push
xchg
scas
inc
aam
mov
pop
popf
addl
fwait
mov
fisubs
dec
add
sbb
sti
inc
mov
lcall
mov
out
dec
push
push
dec
mov
sub
xor
push
mov
mov
inc
add
mov
sti
cs
xorl
mov
xor
pop
aaa
icebp
test
cmp
xor
jo
jo
pop
push
pusha
jecxz
test
pop
out
lret
xchg
test
adc
loop
mov
pop
dec
daa
pop
pop
xchg
insb
or
test
in
mov
sbb
daa
xor
and
jb
xlat
add
pop
sub
or
loopne
cmpl
ret
dec
pop
jle
dec
xchg
imul
xlat
enter
lcall
fsubrl
dec
xchg
cmpsb
inc
push
push
xlat
fldcw
mov
bound
dec
pop
or
hlt
sub
leave
cli
cs
fwait
mov
movsl
cmpsb
adc
outsb
inc
cli
cmp
rclb
dec
icebp
in
mov
ret
fildll
repnz
push
int
dec
test
jecxz
inc
and
fnstsw
sub
data16
xor
xor
into
cmp
jns
outsb
sub
icebp
in
cs
insb
andl
push
mov
bound
fwait
andl
jecxz
mov
push
xor
or
jbe
pop
call
jnp
out
sti
repz
cmp
fucomip
mov
xchg
or
icebp
bound
lea
push
mov
jbe
std
pop
pop
rorb
dec
call
adc
ja
loopne,pn
sbb
bound
out
out
inc
lahf
or
ds
inc
out
push
fsubr
or
pop
push
rorb
jge
jmp
test
cmp
fld1
add
daa
imul
dec
push
mov
xor
fnstcw
mov
inc
mov
mov
icebp
sbb
pop
sub
cwtl
mov
jge
daa
gs
jb
scas
dec
push
divl
sbb
push
les
fisttps
add
ja
jg
popf
icebp
testb
jecxz
add
lods
lds
or
cwtl
pop
mov
dec
jl
outsb
add
pusha
jnp
loope
sub
fs
inc
jecxz
lcall
cmp
outsl
push
daa
test
sub
cs
js
push
movsl
popa
cmpsl
mov
in
inc
xor
push
pop
cmpl
cli
jae
test
aaa
std
repnz
xor
jl
jge
mov
mov
ret
mov
jp
add
addr16
cmpl
fistps
xchg
addb
jno
push
outsb
daa
out
jl
gs
pop
push
in
jg
cld
or
iret
push
mov
dec
in
add
inc
hlt
jns
das
insl
loop
aas
mov
jl
mov
clc
inc
loop
inc
iret
cmp
push
outsl
jnp
in
mov
sbb
mov
xchg
dec
jmp
testl
pop
push
add
ljmp
fs
mov
push
mov
dec
out
jle
lods
sbb
lods
test
test
dec
fbld
ljmp
pop
jp
mov
popa
outsb
or
adc
andl
loop
xor
shlb
sti
dec
sbb
or
sbb
movsl
jne
push
pop
mov
cmc
loope
and
mov
xchg
or
jnp
mov
repnz
jl
pop
loopne
pop
hlt
push
out
arpl
insl
out
or
mov
rol
roll
ret
ds
or
cmp
mov
jle
adc
mov
jmp
test
arpl
add
xorl
filds
mov
or
lret
mov
mov
mov
les
add
lret
in
out
mov
hlt
dec
clc
sbb
mov
hlt
or
dec
out
jmp
push
gs
scas
and
setne
lret
in
in
gs
lock
repnz
cmc
repnz
std
xchg
outsl
leave
inc
or
dec
out
adc
or
fcmovne
stc
cmc
xchg
insb
push
sti
push
pop
out
mov
in
pop
add
addb
inc
out
dec
push
mov
jp
jp
or
jne
ret
addl
jecxz
imul
testl
mov
sub
add
or
ret
mov
lret
lods
push
stos
adc
jge
imul
jle
mov
int3
pop
clc
sti
jle
lock
pop
push
sti
insb
add
xchg
decl
ljmp
fcmovnb
push
xor
xor
fimuls
das
rcll
in
aas
cli
jo
xchg
scas
lret
mov
dec
je
lret
or
in
mov
add
add
pop
jo
addl
cld
loopne
jb
add
pop
in
mov
and
sub
test
jp
push
xchg
or
aam
iret
dec
popa
ljmp
dec
cld
rorb
and
sub
aaa
pop
xor
cmpl
cmp
lcall
mov
in
ret
cmpsb
add
dec
add
das
in
sbb
and
xchg
mov
push
mov
daa
mov
sbb
jb
test
test
adc
dec
cmp
mull
pop
outsb
mov
pop
dec
adcl
dec
add
lock
adc
jg
iret
xchg
xor
add
push
adc
testb
rolb
ja
imul
lret
mov
fimuls
arpl
sar
pop
sbb
pop
jmp
pushf
jecxz
cld
arpl
add
xchg
rclb
clc
rclb
ret
and
jbe
lods
sarl
pop
sbb
daa
frstor
stc
jo
lahf
mov
aas
pop
ret
stc
rorl
adc
sar
sarl
cwtl
les
add
subl
ret
test
loop
out
mov
insb
aaa
and
pop
orl
pop
loop
imul
adc
bound
add
sub
idiv
ret
jns
jb
div
out
add
stos
add
xchg
add
repz
cmp
cli
loope
iret
add
iret
jmp
push
cld
test
out
hlt
xchg
and
es
addb
inc
cmc
dec
mov
jno
mov
mov
in
xchg
roll
cmp
jecxz
cmp
mov
ret
xchg
cmp
pop
cmpb
subb
out
stc
daa
shlb
or
cmc
cmp
in
mov
push
in
out
xchg
push
jge
jno
test
fnstsw
das
cld
jl
jb
jle
or
lock
ret
xchg
push
add
lods
jge
pop
xchg
fcomip
mov
adcl
ss
or
cmp
call
jle
sti
jno
stc
push
sbb
outsl
or
mov
mov
in
in
addr16
mov
dec
mov
and
cs
pusha
jl
inc
push
jae
xchg
std
lds
dec
roll
jle
jb
cmp
mov
push
sub
outsl
jo
xchg
jmp
add
dec
jecxz
clc
popa
mov
add
or
rep
push
sub
jae
pushf
outsl
hlt
or
mov
mov
mov
adc
and
inc
gs
push
adc
bound
fwait
loope
clc
in
sbb
rcrb
clc
mov
xor
push
mov
sbb
sbb
shll
mov
dec
pop
daa
mov
hlt
in
cmp
pop
sub
dec
jge
push
outsb
cmp
xor
dec
stc
xor
xchg
sarl
outsl
inc
dec
dec
std
sub
cmp
or
adc
push
mov
inc
sahf
insl
std
into
arpl
sti
imul
not
push
in
xchg
fsubrl
adc
push
insb
mov
jg
fimull
testl
push
divl
dec
fwait
xor
push
push
or
orb
mov
jmp
fdivp
insb
pop
adc
outsl
and
mov
arpl
fwait
pop
mov
inc
or
dec
nop
pop
cmp
and
push
xor
xor
push
dec
or
lods
data16
mov
outsl
and
popf
notl
clc
xchg
mov
pop
inc
mov
dec
dec
std
shlb
cld
sub
imull
push
testb
or
push
loopne
jle
push
gs
loope
cmp
lcall
or
cli
popa
ffree
cli
rclb
push
popa
ss
es
call
cmp
imul
gs
or
std
push
mov
ret
lahf
fisttps
sub
mov
dec
or
dec
in
or
mov
add
jg
mov
dec
cwtl
ja
sub
je
pop
jp
pop
add
pop
int3
jle
dec
decl
jg
call
jae
sti
dec
outsl
mov
or
xchg
out
addl
mov
stc
dec
cltd
lret
loope
gs
xchg
sbb
jne
aaa
pop
pop
pushl
stos
jo
repnz
cli
lds
subl
xor
and
outsb
jecxz
pop
cld
sbb
add
sub
dec
dec
dec
add
cmc
daa
scas
jmp
jge
push
aaa
call
outsl
sbb
push
xor
pop
lea
xorb
fbld
add
fnstsw
insb
sbb
outsb
shrl
dec
push
and
mov
dec
icebp
add
inc
idivl
roll
xor
aam
ret
and
dec
dec
leave
insl
push
or
insl
pop
shr
mov
rcrl
mov
cmp
jmp
mov
scas
test
aaa
pop
outsb
sbb
dec
add
push
push
xchg
pop
jecxz
out
fisttpl
pop
incb
or
pusha
and
jns
idiv
jno
movsl
push
fistpll
push
xor
out
push
sub
pop
push
jl
jg
aaa
clc
pop
cld
imul
cmp
outsl
dec
xor
mov
subl
pushf
pop
xor
shrl
sti
outsb
cmp
jecxz
cld
xor
ss
out
cmp
jnp
push
xor
ss
fsubrs
xchg
pop
adc
mov
pop
loopne
sti
mov
test
rorb
and
or
xchg
mov
add
in
cli
add
icebp
and
jmp
pop
fidivrs
pop
std
jmp
add
test
and
dec
es
sub
cmp
fistpll
ljmp
ljmp
add
loop
mov
sub
inc
add
in
or
xchg
pop
pop
pop
pop
dec
inc
fildll
pop
mov
test
push
jecxz
jle
push
cmpl
pop
in
ljmp
idivb
add
in
xorb
push
jecxz
mov
in
xchg
xor
jb
test
mov
vpmaxsw
push
add
dec
ljmp
in
fistpll
mov
cmp
or
sbb
cld
xor
jmp
in
dec
add
dec
mov
addb
in
sbbb
incb
xor
pushl
out
orl
xor
mov
sti
mov
fisttps
js
xor
imul
pop
xchg
ret
loopne
in
pop
sbb
incb
jg
xor
add
mov
call
mov
cs
insl
jno
fwait
mov
or
xor
js
xor
jno
dec
pop
mov
adc
or
cmp
outsl
orl
loop
repz
dec
mov
dec
pushl
outsb
pop
xchg
ja
xor
outsb
das
aam
mov
out
test
cmc
xlat
insb
add
loop
xchg
add
xor
adc
cld
andb
imul
jle
cli
or
pop
or
in
test
ss
jle
aas
imul
jg
xorl
inc
add
pop
push
xor
out
popf
inc
push
cmp
cli
ss
jo
sbb
or
mov
std
outsb
adc
pop
ljmp
add
test
das
sti
xchg
clc
test
repz
add
xchg
mov
xor
pop
adc
insb
adc
test
add
ja
jl
notb
pop
adc
add
mov
in
inc
adc
daa
test
and
jne
test
xchg
pop
jnp
jnp
xor
pop
push
and
dec
xchg
ret
aaa
sti
in
lret
mov
xchg
insl
sub
inc
sbb
daa
xchg
leave
xorl
jne
in
aas
inc
adc
mov
neg
mov
ljmp
dec
add
pop
test
out
mov
pop
pop
cmp
mov
mov
or
cmp
das
shrl
out
outsl
sbb
jecxz
cmp
movsl
fsubrp
in
xor
in
cld
insl
fidivs
stos
add
dec
iret
loope
dec
push
push
xchg
gs
loopne
arpl
fld
mov
pop
inc
cmp
outsl
idiv
jmp
iret
popf
ss
fnstenv
xorl
jle
test
or
out
inc
std
jg
mov
dec
out
and
fmul
lods
adc
xor
fs
in
xor
xor
mov
adc
sti
push
fldcw
addl
ljmp
outsl
clc
gs
enter
or
bound
stc
xorl
jnp
and
push
pop
xchg
and
xchg
mov
leave
cmp
and
stc
or
data16
and
outsb
push
fsubrs
hlt
and
push
jnp
insl
imul
fcomps
cmp
jb
xorl
jmp
inc
std
xor
or
in
daa
sub
das
sub
xorl
mov
pop
jg
stc
mov
cmp
jg
pop
mov
add
push
loopne
mov
pop
ds
sbb
dec
sbb
ljmp
hlt
cmp
pusha
xor
mov
arpl
imul
lds
repz
jl
std
sti
cmp
jp
sbb
stc
imul
shr
jge,pn
sbb
rorb
stos
xor
or
out
in
iret
push
cmp
decb
jb
in
cli
sub
sbb
arpl
inc
cmp
mov
cmc
xor
or
add
xlat
or
std
test
hlt
xorl
dec
pushl
cmp
cmp
out
orb
jno
cmp
mov
sub
adc
arpl
jno
mov
lea
imul
push
insl
and
jmp
sbb
jmp
dec
pop
add
loope
pop
pop
inc
add
daa
ss
hlt
das
sub
mov
and
inc
sti
pop
cmp
jb
push
pop
mov
mov
or
jmp
clc
out
fildl
orl
adc
shlb
pop
std
test
sub
jno
adcl
and
mov
push
jge
cmp
insl
inc
xchg
dec
add
push
lods
aam
jle
decb
sbb
jo
scas
push
jmp
orl
movsl
ds
push
jge
aas
loope
xchg
xor
outsl
pop
cmpb
out
jg
aaa
mov
cld
mov
jo
daa
jmp
mov
add
mulb
mov
or
mov
out
arpl
scas
fldcw
add
stos
jns
mov
pushf
insb
aas
cli
stc
adc
or
adc
mov
mov
repnz
mov
sbb
sub
es
push
push
lods
cmc
lahf
unpckhps
out
js
sti
in
out
int3
bound
cld
ret
outsl
xorb
jecxz
cli
daa
sti
push
arpl
add
pop
mov
inc
or
stos
movsl
lret
int3
stc
jo
notb
push
sub
popf
mov
mov
and
inc
incl
push
inc
shll
dec
cs
push
lcall
insl
popa
out
test
clc
sbb
outsb
test
add
mov
mov
sti
lret
insl
dec
iret
push
stos
notb
pop
sub
cld
out
jle
sbb
arpl
pop
out
aad
cli
add
inc
inc
mov
mov
addr16
add
sbb
mov
inc
sarb
lcall
incl
mov
stos
stos
test
test
xchg
pop
xchg
stc
das
cld
cmc
test
xchg
and
test
popa
les
sahf
pop
repnz
fbld
sti
or
mov
and
cmp
mov
mov
pop
gs
xchg
push
xor
sti
repz
popf
gs
jmp
and
push
fildl
dec
adc
mov
sbb
adcb
xor
push
frstor
pop
xor
sbb
mov
sbb
add
pop
adc
outsb
sbb
les
push
loopne
stc
shl
sbb
push
push
fs
add
dec
arpl
and
imul
jle
mov
add
and
insl
adc
incl
dec
mov
push
jp
xor
dec
arpl
aas
sarl
inc
test
popa
xchg
and
pushl
popa
test
cmp
in
push
dec
dec
imul
or
insb
cmpsb
outsl
and
mov
scas
sub
cmc
mov
arpl
loop
outsl
push
mov
pop
xor
addr16
mov
iret
dec
cmpl
xchg
fstpt
notl
in
daa
pop
test
fildll
xor
pop
jmp
push
pusha
stos
xchg
inc
jo
fsts
das
mov
push
loope
clc
mov
leave
xor
sub
fidivrs
testl
sub
das
jno
dec
push
loopne
leave
sbb
idivb
popa
rcrl
jecxz
sub
in
out
in
dec
xchg
push
out
dec
pop
fidivrl
sub
fstp
dec
out
loop
das
imul
fldt
test
ja
jbe
dec
xchg
xchg
adc
jne
mov
cmpsb
sub
mov
mov
outsb
aad
mov
fisttpll
shll
arpl
mov
mov
or
xor
pop
mov
test
in
sub
outsl
das
xchg
pop
mov
jnp
ffreep
cmp
in
clc
sti
add
imul
rcll
test
bound
je
sbb
mov
aad
pop
repz
sub
mov
cli
insb
cmp
cmp
push
xor
mov
mov
xchg
xor
outsl
pop
mov
test
mov
stos
cli
incl
loopne
and
jg,pt
inc
cmp
outsl
fistpll
pushl
push
in
sarl
in
inc
add
xchg
lahf
test
fdivrs
out
sub
dec
dec
lahf
push
imul
insb
add
inc
sbbl
in
clc
push
cld
push
adc
xchg
in
out
addr16
mov
inc
addr16
mov
test
dec
push
or
arpl
shlb
lods
std
jl
fs
add
sti
push
jne
mov
subb
loope
divb
out
idiv
clc
fs
out
in
pop
fdivrl
adc
or
mov
out
outsl
cltd
xchg
adc
pop
jecxz
mov
adc
mov
lahf
adc
mov
push
xchg
mov
es
fdivr
cmp
enter
sub
sub
dec
out
pop
fsubr
mov
jle
pop
push
dec
lock
jns
mov
aaa
or
clc
clc
stc
xchg
cli
fwait
call
push
sub
mov
lcall
adc
sub
mov
std
pop
stos
jecxz
xchg
mov
inc
lahf
in
cmpsb
bound
shll
cmp
icebp
push
mov
jecxz
push
or
mov
mov
arpl
daa
dec
stc
sarb
rdtsc
scas
cli
mov
js
push
lahf
mov
std
inc
lcall
stc
mov
pop
push
pusha
pop
arpl
iret
loopne
sub
xchg
mov
jecxz
mov
push
inc
mov
mov
dec
jecxz
daa
push
cmp
dec
lret
in
cmovle
shlb
lods
sti
or
scas
add
sub
loop
adc
xchg
ss
inc
jecxz
sub
jecxz
mov
dec
popa
pop
outsb
fcmovnu
xchg
xchg
mov
push
mov
insl
sbb
pop
ja
dec
test
mov
popa
xchg
ljmp
ljmp
clc
push
out
imul
jmp
jae
jecxz
or
pushf
mov
xchg
addb
ja
fdivrp
xor
add
decl
or
int
scas
push
arpl
test
add
or
mov
mov
adc
or
mov
jg
mov
jnp
fsin
ss
push
pop
or
popa
ret
int3
roll
enter
xor
push
lock
mov
sbb
xor
or
and
push
adc
adc
jl
add
lret
fldt
ss
imul
adc
inc
xchg
xor
xor
pushf
jno
fdivrp
arpl
inc
cmp
fiaddl
loope
or
and
push
mov
lods
gs
arpl
cld
pop
jnp
mov
hlt
hlt
xchg
adc
dec
das
pop
or
dec
repz
push
dec
push
push
jp
das
pop
sbb
mov
push
pop
movsl
push
jne
dec
aas
lcall
pop
cmp
ret
jae
daa
loopne
xchg
mov
lret
jge
pop
lock
cmp
xchg
or
call
cmp
roll
add
xlat
pop
xchg
add
mov
push
cmpb
dec
mov
fs
xchg
lahf
mov
push
clc
pusha
cmp
sti
sbb
and
adc
add
nop
add
ss
inc
insl
dec
xor
xchg
add
fmuls
xor
or
and
or
and
popa
cmp
sbb
ret
ss
shll
push
sbb
cmp
jbe
cmp
xorl
cmc
aaa
sbbl
daa
xchg
lods
lcall
ss
pop
lea
das
fldl
jns
out
xor
mov
ret
mov
mov
in
or
lahf
jl
jg
push
lock
or
jge
mov
clc
arpl
js
xchg
or
lret
cli
ret
cltd
loope
add
fdivr
in
lock
jnp
xorb
aaa
cmpsl
sti
daa
jns
dec
or
clc
sbb
xor
les
push
mov
insl
lds
xchg
add
push
mov
ja
or
mov
sbb
cmp
and
xorl
jnp
addr16
std
xlat
sub
inc
sub
insl
push
pop
iret
and
mov
jne
test
and
xchg
dec
xchg
dec
cmp
imul
mov
ret
add
test
dec
dec
gs
das
push
sbb
call
rorl
mov
push
jmp
cmc
jp
add
mov
push
pop
push
jl
add
jnp
xorl
inc
sbbl
push
mov
aam
sbb
popf
imul
ror
test
arpl
sub
dec
lret
xor
frstor
xchg
sbb
cltd
fistpll
sub
add
aaa
mov
mov
clc
iret
xchg
mov
rcll
push
popa
imul
ja
dec
clc
int
adc
mull
jns
sahf
xchg
pushf
insl
jb
gs
loope
es
mov
aaa
xchg
push
outsl
push
test
inc
or
adc
xchg
cmp
test
or
das
mov
jo
and
add
jno
push
pop
pop
jle
pop
daa
mov
sarb
jecxz
adc
outsb
shrb
dec
cmp
jmp
cs
or
sbb
cltd
or
pop
jnp
inc
mov
insb
js
fidivrs
out
mov
imul
pop
sub
outsb
inc
pop
push
arpl
jmp
clc
lahf
jmp
dec
add
xchg
lea
test
daa
mov
add
arpl
ds
inc
dec
aas
fistps
pop
push
pop
or
call
lahf
mov
test
js
pop
push
push
sti
lret
and
sbb
std
jl
and
mov
xchg
mov
cmpsl
pusha
orb
ret
xchg
jecxz
or
mov
jl
imul
rcrb
add
or
out
mov
lret
imul
mov
xchg
loope
push
jnp
imul
jp
subb
or
cld
push
dec
push
and
sbb
jecxz
ja
inc
mov
mov
fnstsw
repz
mov
mov
and
inc
outsb
icebp
repnz
sub
cmp
fistpll
daa
lahf
jge
cli
mov
xchg
add
scas
xchg
sub
ret
pop
addl
outsl
xor
imul
mull
test
dec
lea
iret
mov
mov
inc
xor
adc
add
cld
call
sti
dec
add
rcl
loop
xchg
and
out
or
outsb
das
xchg
pop
mov
add
and
mov
mov
jno
das
daa
out
push
loop
mov
in
and
mov
add
outsb
inc
mov
mov
cld
rol
jl
mov
lods
ss
cmp
clc
fwait
push
jb
out
imul
imul
popw
sub
mov
out
sub
inc
mov
call
out
test
pop
dec
push
dec
sub
push
sub
arpl
aas
hlt
imul
adc
ljmp
jmp
mov
lea
ss
outsb
jg
push
out
divl
sti
pop
push
lods
mov
dec
sub
test
into
outsb
or
in
dec
lods
frstor
jns
sbbl
jg
adc
movsb
movsl
sbb
mov
ret
jo
fwait
loopne
sub
aaa
jo
pop
mov
loope
icebp
or
pop
cmp
sub
dec
mov
mov
pop
leave
jne
sbb
adc
ss
push
mov
xor
rcll
add
inc
push
sar
loopne
sub
xorl
adcb
jb
loope
enter
test
fnstcw
sbbl
mov
clc
ret
push
daa
jnp
push
or
or
cmp
mov
in
bound
push
in
inc
in
fdivrp
test
push
jle
repz
out
add
cmp
push
xchg
push
jle
std
outsl
popa
mov
mov
jae
mov
mov
inc
adc
imulb
jne
stc
dec
stos
std
imul
cs
dec
push
repnz
fs
mov
sbb
stc
stc
das
jge
int
jecxz
pop
mov
dec
jecxz
push
lahf
or
dec
dec
imul
rcll
sbb
xchg
or
dec
jle
sti
add
ljmp
jnp
mov
pop
push
loopne
and
test
clc
pop
inc
cmp
xor
or
ljmp
lfs
xchg
aas
pop
cwtl
pop
fldt
ret
leave
bound
cmp
insb
inc
mov
adc
lds
push
mov
sub
lahf
or
scas
sbb
push
sbb
stos
testl
sbb
lahf
cli
sbb
inc
sbb
pop
xchg
xchg
pop
cmp
push
cmpsb
test
frstor
cmpsb
cmc
arpl
mov
adc
xor
sbb
push
hlt
fucomip
fstpt
mov
cltd
xchg
push
xchg
pop
popa
mov
jbe
mov
add
mov
add
ret
lret
sbb
bound
cmp
rorb
outsl
xor
stos
call
sub
in
addl
enter
add
test
popf
jnp
add
push
sbb
out
pop
mov
cmc
mov
and
cmp
pushf
test
inc
jne
fisttps
cli
popf
push
cmp
in
outsl
xor
cmp
mov
call
add
jnp
fisttpl
lahf
lods
fisubrs
push
imul
dec
insb
xor
roll
mov
add
inc
std
xor
inc
or
nop
mov
cmp
mov
dec
loope
pop
bnd
test
jne
lods
popa
popf
pop
mov
shll
add
aad
push
adc
popf
add
bound
insl
add
mov
mov
lods
fbstp
adc
dec
xchg
or
mov
sub
cmp
outsl
sti
das
fistl
testl
sbb
test
ja
insl
jae
inc
xor
not
dec
cld
call
add
loope
push
arpl
icebp
out
es
jmp
ds
mov
sbb
cmp
fdivr
push
mull
push
clc
xchg
jle
jbe
pop
test
sbb
push
sub
testl
or
fcomp
and
lcall
mov
cmp
imul
ss
adc
inc
jl
add
xchg
sahf
insb
mov
std
cltd
add
shll
cmpsl
dec
mov
xchg
jmp
outsb
jno
jns
dec
ja
out
loope
push
jmp
inc
popa
cld
pop
outsl
icebp
sbb
or
dec
icebp
loopne
jmp
lret
fs
pusha
addl
push
cltd
enter
insl
adc
push
test
mov
popa
jnp
add
cmp
sbb
cli
js
add
pop
or
mov
std
idivl
add
out
inc
add
roll
cld
mov
sbb
push
outsl
call
pop
pushw
in
mov
test
cmpsl
xchg
sub
dec
clc
fwait
mov
test
push
out
sbb
popf
push
sbb
sbb
dec
push
ror
inc
push
mov
jno
test
stos
ss
push
call
pop
push
int
out
in
xchg
push
xchg
add
in
adc
loope
or
loop
push
rclb
dec
jno
fs
mov
fdivrp
dec
in
sbb
test
sub
or
add
push
stc
fbstp
or
adc
std
es
gs
pop
cmp
arpl
icebp
and
orw
dec
adc
xchg
ljmp
mov
jecxz
test
int
fmuls
xchg
xor
out
add
cli
adcb
add
mov
add
add
xchg
jb
mov
filds
or
cwtl
cmpsl
fnstcw
leave
or
rorl
mov
inc
xchg
cmp
mov
jle
dec
mov
cltd
dec
xchg
out
clc
dec
dec
arpl
add
sahf
and
stos
roll
pop
pop
jge
sbbl
jecxz
icebp
addr16
mov
push
cli
inc
jmp
push
in
sti
or
jle
add
xor
ss
leave
in
cmc
sbb
incl
xor
mov
mov
cmp
push
sbb
dec
pusha
fwait
pop
dec
xor
mov
add
fnstcw
or
push
scas
adcb
mov
or
arpl
dec
mov
out
mov
pop
mov
jno
test
adc
repz
dec
add
loop
cmp
jo
pop
js
outsb
or
fs
mov
or
lock
sbb
enter
clc
inc
sub
mov
sbb
fbstp
insb
adc
mov
rorl
inc
jns
and
sti
sti
sub
mov
lret
mov
rcr
loop
mov
loopne
sbb
fistpl
sbb
mov
jecxz
sbb
rorb
loopne
adc
jmp
or
dec
mov
push
pop
ret
adc
cltd
out
cli
cld
icebp
sti
ret
xorl
add
je
insl
mov
out
test
jbe
test
jg
pop
pop
stos
out
in
jbe
xor
pop
daa
shlb
iret
jge
pusha
ja
arpl
aaa
lods
jle
pop
add
repnz
mov
inc
xor
loopne
mov
add
ds
pop
pusha
mov
lea
xchg
push
mov
sbb
pushf
push
inc
or
jecxz
test
xchg
ljmp
pusha
push
push
mov
jmp
add
pop
sub
fldenv
pop
sti
stos
test
mov
xchg
sbb
sub
inc
pop
mov
aaa
popf
in
xlat
out
outsb
dec
jmp
xchg
call
add
fisttpl
lock
sub
cmp
aas
xor
addr16
out
pop
xchg
xchg
call
push
jmp
int3
fwait
iret
adc
cltd
out
loopne
pop
mov
cmpsl
xor
sub
adc
aas
xor
xor
push
jle
sahf
mov
add
mov
fs
jns
cltd
mov
or
xor
sub
mov
sub
mov
sub
mov
sub
mov
lcall
xchg
in
sbb
sub
mov
sub
mov
xchg
sbb
lods
xlat
adc
xchg
mov
jp
xchg
mov
jbe
xchg
mov
jb
jecxz
pop
push
inc
in
jmp
test
cwtl
fwait
shl
mov
repnz
into
test
rcr
fcompl
sti
dec
xchg
sti
mov
test
cmc
adc
popf
mov
out
cmp
mov
push
mov
jb
jmp
out
sti
and
rcr
insl
adc
xchg
sbb
inc
fcmovne
test
mov
jmp
lods
stos
add
inc
add
pop
mov
hlt
sbb
mov
fwait
cmpsl
dec
mov
sub
mov
xchg
iret
jge
lret
push
sub
xchg
insb
mov
lea
rorl
andb
adc
pop
mov
mov
or
xlat
dec
mov
test
sub
mov
mov
sub
add
icebp
das
das
jno
mov
out
mov
test
mov
stos
incl
cld
mov
pop
mov
test
jle
js
jg
clc
incl
std
xor
jle
cmpsb
dec
clc
insb
rclb
mov
pop
and
push
push
sub
std
lcall
add
push
cmc
mov
dec
sub
fildll
add
push
mov
addl
xorl
pop
add
test
cli
mov
cmc
addb
adc
clc
pushl
or
dec
lcall
add
cmp
sub
cli
mov
aad
addr16
clc
hlt
push
or
outsb
jne
jno
mov
dec
inc
pop
jge
inc
mov
jno
mov
dec
imul
outsb
cmp
outsl
ss
cli
jae
and
fiadds
xor
xchg
xor
pushl
or
mov
adc
stc
cmp
push
cmp
idiv
mov
ljmp
std
mov
filds
iret
or
ds
ss
and
mov
hlt
xor
daa
cmp
dec
push
nop
add
sub
inc
push
nop
dec
cmp
and
inc
sbb
add
stos
sub
push
mov
mov
mov
ljmp
clc
add
sub
mov
test
mov
cmc
jnp
cmpb
stos
mov
mov
popa
call
jg
push
push
cmpsb
ficoml
dec
pop
dec
adc
out
adc
mov
cmp
dec
push
ss
and
lahf
stc
inc
std
mov
inc
loope
dec
mov
idiv
jbe
add
arpl
cmp
pop
mov
push
and
inc
icebp
cmp
xchg
add
loope
adc
xor
adc
clc
pop
inc
repnz
neg
jne
fwait
add
adc
or
inc
cmpsb
imul
aaa
inc
xor
shr
inc
repz
xor
xor
cli
cmp
arpl
pushf
pushf
or
xor
in
push
dec
sbb
lods
inc
icebp
shll
pxor
pop
adc
jge
insb
mov
testb
pop
sbbl
push
fisttpll
mov
pop
jae
mov
lock
fmuls
and
fildl
and
dec
cmp
mov
jecxz
dec
insl
xor
fwait
in
test
jae
jmp
mov
lahf
fimuls
fstl
ss
inc
insl
mov
or
mov
and
test
pop
push
out
xchg
test
sbbb
pop
stc
jl
dec
aaa
jge
cmp
or
les
or
ljmp
test
gs
fs
out
mov
dec
jmp
inc
inc
addb
add
jg
lods
clc
ja
sub
mov
inc
add
addb
sbb
mov
fs
xchg
jmp
jno
lea
addl
ja
mov
dec
mov
cmpsl
es
cmpsl
add
popf
cmp
dec
xor
pushf
addl
ljmp
pop
mov
xor
test
jno
in
inc
loopne
call
inc
popf
push
pop
rolb
mov
leave
xchg
or
in
jp
ss
in
jo
inc
clc
cmc
clc
jle
mov
push
dec
shr
cld
in
dec
adc
push
sub
inc
jmp
pop
xor
insb
out
adc
je
ss
add
pop
jmp
or
push
inc
test
push
or
out
bound
popf
cmp
jecxz
insl
mov
addr16
sbb
out
add
in
pop
daa
inc
sbb
jb
out
inc
push
adc
xchg
push
rorl
mov
jno
and
adc
or
sti
xor
je
cmp
in
out
hlt
adc
cltd
xchg
or
add
xchg
and
insb
xchg
pop
jb
sbb
or
inc
cmp
or
xchg
ja
jle
dec
xor
xchg
testb
cmp
cli
aaa
xchg
lahf
popa
jns
jle
sbb
pop
insl
push
add
loop
notl
in
dec
sub
add
mov
inc
out
ja
fwait
orb
pusha
fdivrp
lret
add
fbld
cmp
inc
imul
outsl
fldenv
xchg
sti
lods
negl
inc
outsl
das
add
dec
push
pop
or
daa
dec
imul
and
ja
lock
mov
mov
adc
inc
movsl
push
push
pusha
or
aaa
lret
sub
popa
pop
add
pop
push
mov
xchg
addr16
xchg
lahf
sbb
mov
or
or
jns
sahf
jne
push
subb
subb
imul
jbe
outsl
mov
insb
mov
sti
rorl
sar
into
dec
test
stos
inc
xlat
sbb
notb
xchg
daa
or
pop
add
push
push
int
push
out
add
jo
mov
inc
aaa
popf
jle
sti
sub
std
fstl
mov
movsl
pop
jb
mov
xlat
or
notl
cmc
pop
mov
arpl
jo
sti
jecxz
outsl
fldt
cmp
push
jb
daa
or
idivb
push
insl
sbb
adc
loop
or
add
addr16
jecxz
pop
fwait
sbbl
mov
push
dec
jecxz
inc
mov
mov
imul
out
pop
sbb
sbb
aas
and
xor
cmp
adc
loope
or
test
xor
sub
push
inc
fbstp
cmp
push
lock
fimull
out
or
insl
clc
cmp
dec
push
mov
hlt
pop
mov
mov
aas
cmp
mov
mov
ret
mov
or
insl
push
sarl
push
or
inc
or
xchg
mov
ret
xor
or
insb
loope
mov
mov
or
ja
outsl
or
and
push
ljmp
loopne
push
incl
mov
cmpl
pop
cs
or
mov
dec
cltd
or
mov
call
fisttpl
add
jge
or
add
dec
or
testl
rolb
ret
pusha
lcall
or
inc
cmp
mov
sbb
notl
incl
or
xor
jecxz
or
mov
arpl
or
jnp
in
cmc
sti
sbb
popa
es
xchg
aaa
jo
jge
inc
out
mov
inc
out
mov
iret
adc
jmp
mov
add
add
bound
rorl
jg
jnp
outsb
lds
jecxz
imul
push
xchg
xchg
push
lea
push
add
fisubs
add
push
icebp
adc
sub
xchg
pop
sti
add
mov
bound
sub
jo
sti
mov
mov
pop
shll
push
fcmovnu
mov
mov
lock
test
or
pop
testl
call
sbb
cmp
cmpb
ret
cmp
xchg
add
mov
cmp
call
dec
sub
icebp
push
sti
outsl
jp
loopne
inc
or
cmp
test
incl
push
jle
add
jp
push
cmp
jl
pop
bound
sar
test
aas
cmpsl
inc
pop
outsb
add
add
testl
neg
outsl
aaa
add
call
out
mov
push
gs
inc
xchg
clc
test
push
and
out
ds
stc
decl
lods
dec
std
sub
xchg
test
faddl
add
dec
stc
mov
sbb
inc
xchg
sti
js
cli
ret
add
outsl
lahf
push
mov
gs
or
jnp
xor
pop
clc
xchg
ja
push
mov
jecxz
add
movsl
inc
push
xor
imul
gs
sbb
popa
or
stos
mov
call
jb
cmpsl
add
jns
xchg
mov
push
fs
mov
scas
sti
insb
in
pop
cs
lods
or
data16
xor
subb
pop
mov
or
andl
fwait
xor
mov
lods
cli
mov
push
outsl
popa
or
leave
push
mov
mov
decl
mov
adc
iret
xchg
jle
icebp
inc
mov
add
mov
incl
or
hlt
cmp
lret
je
arpl
xor
stc
push
lods
push
lea
pop
sub
lret
jmp
add
fstpt
andb
shr
in
mov
adc
clc
pop
sbb
pop
cwtl
insb
pop
xor
pop
out
aas
fildl
pop
pop
xchg
fisttps
xlat
ljmp
sar
mov
mov
lcall
add
dec
fcomi
sbb
pop
sbb
stos
inc
push
clc
in
pop
es
test
pop
and
out
add
xchg
cmpsl
negl
sahf
incl
cmp
jno
sbb
mov
push
dec
mov
pop
sub
and
xor
pop
icebp
outsl
cs
aas
addr16
mov
adc
repz
aas
inc
add
bound
shrl
mov
in
stos
test
dec
inc
leave
mov
cmc
arpl
aas
test
xor
pop
in
fcmovnb
int
aas
adc
jnp
popf
jl
mov
mov
pop
and
and
or
in
add
sbb
sahf
add
mulb
fcompl
bound
xor
dec
mov
pop
out
mov
mov
gs
sbb
or
arpl
lret
lods
in
lock
std
out
dec
xor
push
cs
mov
inc
popa
rdtsc
ret
pop
idivb
pop
sub
or
out
movsb
or
cli
pop
lret
outsl
outsb
add
inc
add
lcall
aam
jae
in
cld
sub
pop
pop
mov
pusha
or
mov
pop
repz
push
incl
or
mov
sub
hlt
pop
and
in
add
xor
sub
add
arpl
insb
test
pop
mov
inc
in
cli
sbb
insl
iret
cs
mov
shr
bnd
lret
outsl
pop
ss
addr16
xchg
cmp
movsl
jecxz
pop
out
mov
hlt
arpl
mov
sub
lahf
stos
in
bound
fwait
add
mov
and
push
mov
in
dec
movswl
repnz
jns
cli
addr16
mov
adc
sub
cmp
ret
ja
and
lods
mov
repz
clc
pop
pushf
push
mov
fstpt
add
insl
in
lock
lods
or
out
gs
ljmp
lret
in
sti
mov
sbb
sbb
std
inc
movsl
push
xor
lret
aam
fcmovne
jge
in
loope
and
loopne
aaa
mov
addr16
xchg
add
xor
lret
sbb
mov
jae
pop
push
test
inc
cld
pop
jmp
cmp
stc
popa
ds
repnz
add
xchg
mull
pop
enter
sahf
push
xchg
mov
xlat
stos
or
fdivrs
sti
mov
call
add
fwait
nop
cmc
adc
cmc
cmc
lahf
int
dec
xchg
adc
fs
rcll
mov
rcrl
pop
lret
cmp
xchg
add
ss
clc
leave
in
jmp
sbb
jmp
arpl
push
jg
dec
mov
xchg
jmp
dec
js
imul
mov
xchg
mov
pop
jmp
xlat
loope
lret
fs
gs
add
pop
mulb
pop
fstpl
sahf
insl
mov
xor
sarl
and
mov
xor
sbb
ss
insl
scas
sub
lock
notb
cli
sub
cmp
movsl
arpl
pop
repz
sti
mov
pop
mov
into
into
and
sti
pop
push
fs
hlt
pop
mov
jle
push
mov
mov
insl
arpl
in
mov
sub
sbb
push
test
cli
jmp
push
clc
pop
pop
and
add
push
dec
pop
xchg
repnz
aas
rsqrtps
or
das
pushf
and
push
sti
inc
sbb
outsl
sbb
fisttpl
jmp
std
jo
subb
lcall
dec
or
lret
and
push
mov
dec
sbb
aas
adc
cmp
mov
into
jmp
ljmp
push
out
sti
jo
subb
outsb
cmp
add
dec
gs
jg
lods
pop
in
ds
inc
pop
xchg
mov
into
faddl
jmp
sbb
lahf
std
mov
dec
add
movl
sbb
dec
adc
call
pop
jl
arpl
add
hlt
jg
fildll
mov
cmpl
xchg
xchg
push
mov
mov
or
xor
repz
stc
adc
ja
mull
sub
loope
shrb
add
in
pop
cld
mov
mov
jp
add
movsl
not
jnp
out
inc
divl
mov
cmp
aaa
cli
inc
or
and
imul
movsl
loopne
cltd
xchg
ret
xor
mov
icebp
cmp
jle
outsl
loope
sti
xchg
push
roll
dec
add
mov
loopne
inc
pop
adc
pop
jnp
add
mov
cmp
pop
sarb
clc
and
cmp
aad
jbe
hlt
pop
je
outsl
sub
or
ljmp
inc
sub
cli
inc
sub
inc
jle
aaa
insl
add
std
cmp
outsb
inc
jo
push
push
pop
scas
mov
dec
mov
in
mov
cmpb
dec
cmc
cmpsb
pop
add
push
pop
cmpsl
popa
mov
daa
push
das
in
out
shlb
aas
xor
data16
fwait
push
inc
and
dec
xchg
pop
lock
inc
inc
inc
jp
push
je
lahf
test
jnp
call
leave
test
ja
or
arpl
push
dec
add
adc
push
mov
and
mov
iret
loope
mul
or
pop
fstpl
mov
leave
cli
and
xor
push
out
pusha
test
mov
fdivrs
xor
add
mov
sub
outsl
adc
push
faddl
push
shll
fisttpll
test
mov
mov
fcoml
js
pushf
mov
pop
inc
out
dec
daa
subb
lret
inc
lock
xchg
add
mov
outsl
add
push
jno
push
jmp
out
movsl
cmpsl
mov
ss
jge
inc
jge
in
pop
insl
mov
push
jecxz
hlt
xchg
adc
mov
stc
cmp
lock
bound
dec
or
dec
or
fistps
pop
ja
add
mov
mov
ljmp
pop
adc
dec
cs
mov
mov
sbb
fwait
inc
pop
outsl
and
xor
and
adc
repnz
popa
mov
mov
fwait
lods
pushf
stc
lods
lds
cld
fldt
out
test
and
lcall
cmp
push
jno
shr
sub
cmp
sub
arpl
xchg
and
and
pop
loopne
stos
fwait
jns
popf
xchg
mov
loopne
icebp
or
fistps
aaa
adc
adc
jecxz
lret
mov
leave
js
rcr
call
loope
stc
mov
movl
dec
sbb
jl
sub
xchg
out
or
dec
fdiv
xor
ljmp
cmp
cli
xor
dec
arpl
pop
and
addr16
stc
das
out
insl
ret
add
adc
pushf
xor
pop
std
fcomps
dec
ss
in
setg
clc
repz
mov
int
push
data16
pop
mov
outsl
or
int
imul
mov
mov
push
pop
add
mov
adcb
pop
jnp
pop
mov
sbb
fucomp
ja
xor
mov
arpl
outsb
inc
sti
int
pop
dec
xchg
arpl
addl
cmc
insb
inc
push
jge
xchg
lcall
inc
jmp
outsl
and
je
inc
mov
jg
mov
ret
push
add
jle
jge
and
sub
mov
cmp
adc
outsl
aaa
out
fwait
ja
loopne
xchg
mov
xor
jecxz
sub
push
pop
dec
add
jb
jp
repz
push
mov
or
xchg
out
sub
js
rolb
pop
pop
outsb
pop
sbb
push
rorl
or
push
or
jl
insb
in
and
push
sbb
insb
ja
repz
in
imul
outsb
pop
add
and
push
mov
outsb
cmp
push
imul
insl
jecxz
fmul
aaa
das
sbb
les
add
dec
pop
pushf
cld
imul
push
pop
test
outsl
neg
inc
push
gs
pop
mov
or
xchg
sub
mov
imul
leave
enter
aad
or
sbb
in
inc
faddl
and
roll
pushl
outsb
call
cmp
fildl
dec
xorb
adc
pop
mov
cli
adc
insb
add
imul
shlb
arpl
or
pusha
out
mov
imul
jne
aam
xlat
das
std
aaa
roll
test
and
add
ss
testb
sub
or
push
xchg
stos
icebp
fdivrl
gs
outsb
cmp
shrl
popa
xchg
push
stc
mull
ljmp
and
mov
fs
std
lcall
jne
mov
push
xor
cmp
mov
hlt
push
push
push
out
arpl
add
out
sub
sub
mov
ss
pop
sti
fisttpl
cli
into
inc
jle
cld
out
xor
add
pushf
inc
mov
test
mov
and
add
push
cmpb
jb
jge
or
xchg
out
jl
cld
mov
jle
jo
fadds
insb
add
jg
jle
dec
dec
cli
int3
add
push
dec
loop
xor
sub
mov
out
dec
push
push
loopne
xchg
jle
test
in
scas
push
sti
inc
xor
adc
sti
orb
outsl
push
imul
idiv
jb
and
fcmovnb
subb
pop
daa
sbb
hlt
or
mov
lret
xchg
ds
mov
add
imul
add
insb
dec
mov
insb
adc
mov
ljmp
ss
xchg
jg
mov
repz
loope
push
mov
push
mov
in
and
dec
and
divl
imul
inc
les
shl
adc
daa
mov
iret
pop
ja
test
adc
jecxz
ror
out
cmp
cmp
repz
arpl
in
sti
jmp
dec
outsb
jecxz
jae
push
test
add
fcompl
imul
mov
in
jae
je
jbe
jbe
jb
dec
mov
pop
je
inc
push
jbe
pop
cs
lret
popf
jno
jb
je
jae
outsl
xchg
lret
in
jb
add
je
jo
data16
lea
jns
imul
arpl
cmp
mov
adc
stc
jb
outsb
xor
in
iret
jo
jno
jae
nop
jb
cmp
jnp
mov
ja
jae
xchg
lret
in
jbe
ja
jns
jns
jne
jb
pop
cmpsl
ja
js
jp
ja
lret
in
mov
jl
jnp
ja
lcall
cmpsb
imul
scas
cltd
dec
pop
dec
jnp
int
jbe
dec
mov
mov
stos
movsl
popf
xchg
push
xor
roll
xchg
mov
lcall
in
add
lret
mov
adc
dec
rcrl
je
dec
arpl
and
dec
cmp
pop
lods
jnp
pop
or
push
arpl
shll
push
adc
add
sub
ret
outsb
xor
aas
xor
lods
popa
lcall
lahf
dec
outsb
xor
jne
ja
and
pop
rcrl
lret
xor
fcoml
inc
hlt
sub
push
mov
stos
dec
in
add
rcl
adc
dec
popa
cmp
and
bound
inc
jb
bswap
and
xor
orb
insl
and
nop
dec
inc
pop
add
dec
push
imul
xchg
gs
dec
pop
xor
jno
cltd
je
add
outsb
pop
daa
jne
or
in
daa
push
jb
jbe
sbb
imul
lret
add
movlps
lcall
jp
sub
data16
insl
imul
cmpsl
mov
pop
outsb
insb
ret
jbe
shll
jno
mov
mov
or
ja
xor
je
xchg
pop
leave
jne
ud0
outsl
xlat
jno
jb
cs
jne
or
mov
xchg
lret
sub
jae
xchg
jae
dec
shll
ja
daa
ja
addr16
inc
xor
adc
pop
or
mov
shll
shll
fnstenv
imul
xchg
int
mov
je
lret
in
lret
test
xor
daa
xchg
jne
jne
aaa
pop
sbb
cltd
pop
leave
cmpsl
mov
jp
sub
xor
inc
push
pop
mov
xor
lods
dec
jmp
dec
jbe
jb
fcoml
lret
js
jns
jnp
test
dec
shll
xor
cmp
jno
mov
pop
ret
shrl
pop
ss
gs
je
jbe
sub
cmp
test
inc
pop
ja
lods
dec
ret
scas
inc
lcall
int
imul
xor
xor
das
jb
xor
js
aaa
ja
jae
jne
jne
mov
mov
sbb
jne
cld
cmp
insb
dec
outsl
push
pushl
cs
jae
pop
sti
jle
bound
push
insb
arpl
push
jmp
dec
pop
imul
popa
and
lcall
jb
cmp
push
imul
pushl
cld
inc
pop
outsl
inc
outsb
insb
insl
popa
outsl
inc
popa
insl
bound
outsb
jo
incl
lods
aam
inc
insl
cmp
pop
pop
dec
addr16
sbb
inc
fs
pop
inc
pop
push
arpl
push
cmp
pusha
pop
inc
push
pusha
xor
in
divb
pop
sbb
jno
sbb
arpl
jno
repz
ds
pop
xchg
mov
mov
int
or
xor
std
dec
outsl
in
jmp
popa
inc
arpl
pop
insl
ja
fcmovnu
inc
push
inc
outsl
pop
pop
fwait
clc
pop
fisubrs
std
inc
pop
pop
push
push
push
arpl
push
fisttpl
cli
dec
cld
cmp
outsl
bound
arpl
cmp
neg
fldt
pop
push
aas
push
inc
gs
cmp
insb
std
dec
insl
addr16
cmp
jo
dec
insl
dec
fs
pop
cmp
outsb
adc
mov
outsl
mov
idiv
lods
insl
std
imul
clc
mov
push
pop
fs
loop
pop
clc
aaa
clc
add
arpl
scas
cld
dec
popa
pop
pop
inc
ljmp
pop
inc
dec
fs
sti
sbb
sbb
dec
dec
insl
popa
imul
addr16
inc
sarl
js
outsb
pop
jno
jae
push
jg
lret
shll
pusha
imul
out
sbb
imul
push
mov
cmp
sub
outsl
loope
sub
popa
push
push
pop
outsl
aas
pushw
imul
dec
dec
ds
cs
mov
xchg
jo
imul
pop
jo
je
xor
mov
push
insb
mov
imul
fldt
outsl
mov
jb
push
bound
imul
xor
fimull
test
cltd
pusha
jno
out
and
xchg
jge
push
pop
jmp
daa
dec
or
jg
aas
inc
clc
or
insb
push
push
cs
pop
add
test
outsl
dec
mov
outsl
insb
push
cld
adc
pop
imul
cli
jnp
fcmovnu
idiv
cmpl
pop
fs
jno
decl
mov
bound
dec
push
cli
dec
bound
lcall
pusha
pop
gs
push
mov
xchg
gs
outsb
addr16
fnstenv
inc
pop
arpl
sar
jo
pop
push
std
dec
dec
inc
dec
sub
push
or
and
mov
cmp
arpl
or
adc
gs
mov
sbb
insl
pop
imul
imul
shll
insb
and
adc
dec
aas
inc
pop
gs
inc
test
aas
bound
ljmp
shll
adc
decb
mov
or
outsl
arpl
mov
dec
imul
jo
xchg
pop
fs
add
pop
jb
mov
pop
jl
ror
pusha
hlt
fnstsw
pop
imul
nop
or
inc
ds
das
sub
bound
addr16
cmp
push
cmp
sub
js
jmp
leave
pop
jo
jmp
mov
push
pop
inc
fldt
bound
pop
outsl
lret
imul
icebp
dec
push
adc
cmp
aaa
mov
out
pop
pusha
inc
or
pusha
fstpl
inc
ret
lea
daa
jno
pop
pop
bound
mov
popa
bound
dec
test
push
pop
pusha
jo
mov
test
inc
inc
and
cmp
pop
js
sub
pusha
addr16
mov
mov
inc
cmp
cli
aas
mov
mov
sub
imul
popf
sbb
repz
mov
cmp
push
inc
daa
adc
outsb
rcl
mov
jg
cmp
dec
push
dec
add
cmp
pop
out
lock
add
cmp
inc
cmp
sti
cmp
mov
lret
je
mov
cmp
push
cmp
insb
pop
jo
jne
cmp
jmp
enter
dec
cmp
pop
xchg
aad
ret
sub
cmp
cmp
sub
pop
sbb
fisttpl
daa
outsl
lret
ds
pop
xchg
push
loopne
pop
subl
pop
popa
pusha
imul
outsl
xorl
cmp
insl
pop
mov
jb
inc
adc
cmp
cmp
mov
dec
cmp
push
push
cmp
cmp
pop
mov
pop
pop
bound
test
cld
push
push
dec
ds
xor
outsb
jo
movsl
movsl
lods
idivb
ficoms
imul
xor
mov
pop
insl
pop
mov
cmp
xchg
outsl
insb
mov
pop
pop
pop
pop
insb
sti
fistpll
jno
ljmp
push
sub
jg
push
sub
cmp
pop
add
imul
pop
sub
jns,pt
mov
sub
sbb
fildl
fildl
jo
fs
push
mov
sbb
pop
insl
jmp
jne
jp
imul
cmp
aaa
push
andl
inc
inc
dec
ret
or
inc
cmp
xchg
sub
lods
outsl
das
push
push
pop
pop
mov
fucomi
test
push
push
ja
stc
iret
sub
pop
pop
sbb
pop
pop
outsb
popa
dec
mov
sbb
inc
mov
cmp
cli
or
pop
sti
pop
clc
outsb
test
sar
dec
push
inc
dec
xor
sub
pop
pop
add
clc
push
push
sub
cli
inc
cmpsb
lods
dec
das
xchg
or
cmp
outsl
inc
pop
scas
mov
xchg
cld
inc
xchg
pop
cwtl
pop
outsb
repnz
in
xor
mov
dec
insb
pop
imul
dec
enter
inc
inc
inc
dec
inc
dec
out
ss
jbe
cld
stc
imul
aas
fwait
jecxz
mov
arpl
pop
mov
enter
test
xor
shll
mov
xchg
decl
xchg
pop
icebp
pop
fstps
rcrl
add
pop
mov
pop
xchg
test
arpl
clc
xchg
daa
addr16
or
push
loope
jne
cmp
cmp
fdivr
jne
pusha
je
lock
in
mov
imul
jmp
mov
std
mov
or
cld
popa
jbe
dec
push
dec
cmpsl
aam
aas
popa
push
sub
pop
pop
aas
cmp
inc
mov
or
adc
pop
outsb
pop
sub
pop
sbb
lret
pop
or
add
adc
jle
je
cli
pop
mov
das
daa
pop
imul
cs
stc
adc
imul
xor
cmp
hlt
push
cmp
mov
bound
dec
or
outsb
mov
pop
in
or
and
jno
mov
dec
or
xor
idivb
jnp
cld
add
or
ss
jns
rdpmc
jge
pop
adc
pop
insl
xchg
lret
in
pop
inc
pop
or
outsb
fwait
mov
pop
dec
arpl
adc
pop
mov
lods
mov
sti
lods
sub
or
push
add
add
jmp
adc
push
mov
lret
cli
dec
jo
mov
cs
inc
insb
mov
push
pop
sub
pop
testl
pop
or
push
sbb
jecxz
leave
or
pop
sub
pop
dec
push
sbb
push
data16
rcr
sti
push
dec
jae
dec
inc
imul
mov
inc
outsl
out
clc
cmp
xchg
mov
inc
pusha
pop
lcall
push
pusha
add
fld
in
or
pop
or
inc
inc
cld
adc
clc
stc
mov
mov
out
xchg
ret
xlat
insl
adc
jmp
push
stc
into
fnstenv
jmp
ljmp
imul
mov
clc
leave
lret
int
mov
repnz
repz
out
push
negl
mov
or
mov
sbb
mov
xchg
lods
scas
lods
sbb
ljmp
adc
fnstenv
popa
mov
dec
mov
imul
fstpt
es
out
adc
sti
addr16
mov
mov
mov
cmpl
adc
and
neg
fdivl
leave
xorl
push
mov
jg
nop
rcrl
jl
cmc
mov
mov
adc
sbb
lret
ja
mov
push
jle
repnz
mov
mov
ret
mov
daa
add
fcmovu
lds
jo
aad
jmp
xchg
hlt
mov
xlat
fsubp
pop
sbb
in
mov
mov
jle
mov
incb
and
jle
inc
pop
jmp
repnz
hlt
jne
adc
cmpsl
mov
test
lea
push
mov
xchg
mov
dec
push
daa
frstor
push
mov
mov
repz
pop
movsb
inc
aad
mov
jg
pop
jno
repz
repnz
out
lock
mov
scas
sub
mov
dec
jnp
js
jbe
ret
mov
repnz
xchg
repz
mov
fidivrl
dec
push
jns
inc
mov
mov
mov
lods
test
xchg
xchg
xor
mov
and
cld
mov
out
and
sbb
mov
into
jle
cmp
ja
jl
inc
negl
nop
out
jg
mov
cmpsl
mov
rcl
mov
in
ret
adc
mov
rcll
loopne
sbb
out
inc
arpl
jbe
pop
je
pop
dec
ja
jbe
jg
outsb
xor
out
inc
rcl
in
loop
push
jb
xchg
aam
loop
aad
insb
mov
pop
repz
sbb
xor
hlt
clc
pop
sahf
jno
jecxz
cmp
idivl
int
inc
into
cmp
ljmp
jl
xor
xchg
je
xor
cmp
sar
lods
xor
fsub
in
negb
pop
pop
dec
xor
sbb
pop
out
or
fisubrl
ret
into
arpl
adc
sar
aas
mov
int3
shl
mov
mov
mov
scas
cld
outsl
inc
mov
aad
dec
and
fdiv
mov
cmp
imul
jmp
lret
inc
mov
movsb
movsl
lods
mov
inc
jecxz
repnz
push
push
sahf
jnp
out
mov
cld
ret
mov
daa
clc
test
pop
mov
xchg
push
and
div
out
icebp
repnz
shlb
cmp
lcall
popa
aas
stc
adc
out
outsl
dec
jp
adc
xorl
mov
nop
je
cli
pop
cmp
and
mov
in
lock
clc
dec
cmp
xor
fsubr
ljmp
ds
clc
hlt
idiv
cli
sub
jmp
cli
pop
lock
or
ret
jp
fisttpl
fld
test
sub
div
and
lcall
idiv
pop
mulb
inc
jle
ja
div
repz
jns
cmp
jb
adc
repz
lcall
cltd
repnz
jnp
in
stc
pop
xlat
outsb
or
ja
cmp
int
mov
mov
mov
and
icebp
pop
clc
jae
sub
sbb
sbb
and
sub
sbb
test
and
sub
je
mov
pop
jo
clc
inc
decl
pop
insb
cmp
cmpsl
push
insl
push
je
sub
sub
ja
sub
icebp
mov
aad
cmp
cmp
and
mov
rcl
adc
and
in
push
jmp
and
mov
mov
lds
ret
out
cmpsb
mov
insb
mov
pop
arpl
pop
xor
and
and
jmp
in
mov
sti
mov
jg
aas
push
sub
cmp
ficoms
inc
sub
sti
jno
inc
dec
insl
push
mov
push
outsb
cmc
daa
mov
pop
mov
jne,pn
aaa
or
xor
clc
pop
or
cmp
inc
ds
das
cld
stos
icebp
adc
pop
rcll
xchg
pop
jae
dec
pusha
std
pusha
xchg
inc
mov
inc
sbb
outsl
addr16
jno
and
gs
pop
lahf
push
mov
pop
outsb
pop
arpl
bound
pop
push
xor
stos
mov
inc
je
ja
cld
addr16
push
outsl
adc
mov
pop
pop
test
push
cli
movl
std
imul
imul
fldt
ds
popa
push
insl
pop
cmc
imul
mulb
insl
push
ja
sub
push
push
dec
dec
andb
dec
je
ja
inc
dec
dec
xchg
jb
imul
fisubrs
push
cmp
cltd
add
pop
aam
aad
dec
inc
cmp
push
lods
mov
cmp
cmpsb
cmp
inc
sti
dec
addr16
jmp
cld
sbb
pop
sbb
push
jmp
insb
loop
lret
and
and
xchg
pop
nop
incl
dec
inc
inc
dec
dec
inc
adc
insl
inc
xchg
dec
or
push
add
insl
decl
decl
fstpt
inc
push
sbb
sbb
push
inc
sub
es
pop
decl
add
pop
pop
pop
imul
jno
jb
sub
sub
and
es
add
testb
sub
imul
xor
jbe
sub
dec
dec
and
xor
pop
add
or
adc
in
das
sub
pop
dec
insl
jb
xor
sub
and
mov
sbb
xchg
inc
sub
lock
imul
addr16
pop
jge
mov
insb
inc
dec
mov
cmp
jg
mov
dec
inc
dec
push
sbb
dec
sub
daa
sub
push
cmp
out
jno
sbb
repz
daa
sbb
sub
add
test
pop
dec
sub
imul
clc
mulb
pusha
addr16
dec
pop
popa
arpl
xor
out
jle
insl
roll
jno
inc
imul
lods
ficomps
pop
xor
addr16
arpl
push
aam
sub
test
or
inc
repnz
sub
daa
sub
and
sub
movb
insl
je
lcall
pop
mov
icebp
and
gs
arpl
fwait
pop
xor
sub
insl
and
dec
insl
lcall
ss
inc
imul
popa
bound
arpl
push
pusha
and
cmp
outsl
fdivrl
daa
inc
frstor
pusha
xor
in
mov
pushaw
pusha
xor
mov
or
cmp
pop
or
arpl
sbb
mov
xor
das
sub
add
fadds
pusha
pop
das
pop
sub
pop
clc
mov
or
xor
sub
xchg
push
xor
sub
movsw
test
ds
addr16
popa
dec
jecxz
test
xor
negb
aaa
pop
imul
and
sbb
push
gs
pop
push
dec
jne
pusha
cmp
cmpsb
inc
loope
cld
pop
popa
pusha
sub
fs
lret
cmp
push
sti
ss
sub
daa
and
and
popa
sub
cmp
outsl
lds
bound
sub
mov
pusha
sub
cmp
and
das
cld
sub
in
and
sub
pop
cs
test
cs
test
jb
leave
pop
xor
sub
arpl
dec
pop
insl
pop
xor
sub
fstpt
cwtl
imul
cmp
xchg
jo
mov
imul
sub
mov
fisubs
fs
gs
ds
cltd
fisubrl
push
fwait
insl
ja
pop
jecxz
icebp
test
add
xchg
dec
gs
insb
test
dec
pop
pop
push
fistps
lods
push
repz
dec
imul
inc
out
cmp
popa
insb
fimuls
outsl
pop
outsl
dec
arpl
pop
clc
iret
adc
inc
insb
lds
dec
cmp
sbb
push
pusha
jmp
scas
jl
jmp
bound
or
outsl
arpl
xchg
cmpsl
fildll
insl
data16
jno
pop
insl
aas
sarl
rorb
aas
cli
ja
popa
inc
jno
insb
lods
mov
cld
fs
pop
imul
or
lods
ja
pusha
push
push
daa
pop
addr16
mov
dec
sub
pop
addr16
ficoml
jne
inc
dec
pop
dec
pusha
inc
adc
fstpt
add
inc
arpl
outsb
jo
pop
test
aaa
clc
pop
add
imul
xor
in
mov
insl
add
xor
lea
outsb
bound
cmp
dec
jmp
or
rorb
adc
ja
pop
and
lret
push
mov
cmp
sub
aas
gs
outsb
gs
pop
inc
or
cld
daa
sub
das
xor
lds
inc
inc
mov
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
jg
push
push
push
push
test
pop
pop
jge
fs
mov
outsl
mov
sbb
pushl
sub
inc
cmp
sub
pop
es
pop
leave
leave
sbb
adc
inc
loopne
push
sub
cltd
and
xor
hlt
jmp
inc
cmp
and
inc
das
cmpl
push
outsb
arpl
jle
in
insb
insb
pop
add
ds
pop
mov
std
mov
ds
inc
and
insb
inc
testb
in
mov
add
cmp
cmp
sub
cmp
jae
jno
lods
in
adc
xor
ljmp
jne
jb
inc
cmp
push
aas
sub
push
dec
test
std
dec
mov
cli
pushl
je
aas
inc
cmp
cmp
shr
iret
push
jg
insl
in
pusha
add
imul
pusha
arpl
sub
aas
push
sub
outsb
inc
add
stc
add
or
mov
arpl
cltd
pusha
mov
lds
xor
pop
das
dec
sub
int
sub
and
jns
out
pop
and
or
xor
aam
outsl
dec
in
pop
and
pusha
lret
push
xor
ja
outsl
pop
adc
addl
repz
je
inc
mov
rorl
outsb
dec
xchg
mov
dec
imul
bound
leave
adc
mov
jo
mov
pop
adc
jnp
cmp
aaa
jb
movl
pop
in
dec
outsb
pop
pusha
pop
fldl
out
dec
icebp
pop
pop
pop
data16
dec
dec
dec
aas
dec
movsl
push
insl
mov
jb
inc
jg
out
mov
imul
ret
jmp
addr16
pop
mov
or
mov
or
mov
pop
sub
sbb
inc
pop
fdivl
inc
sub
nop
sub
subl
lcall
sub
in
add
push
cs
dec
sub
test
xchg
ljmp
loopne
cmp
push
cs
sub
je
jl
nop
sub
xor
ljmp
jne
test
mov
mov
mov
mov
cs
pop
xor
das
jl
mov
aas
inc
xor
push
xor
int3
lahf
xor
jnp
std
ljmp
rdtsc
das
xor
dec
xor
sub
xor
mov
leave
xor
xor
das
inc
xor
xor
xor
cmpsb
xor
xor
xor
xor
std
decl
call
push
xor
fs
ja
mov
xor
xor
xor
jmp
add
or
fistpll
ss
xchg
xor
lock
xor
add
in
ljmp
aaa
aaa
jp
mov
mov
xor
aaa
sbb
xor
cmp
fidivs
sti
xor
cmp
and
das
aaa
jg
sarl
adc
pop
cmp
cmp
or
mov
cmp
cmp
sbb
divb
in
jg
sub
jno
je
sub
movsb
cmpsb
sub
sub
cld
sbb
ljmp
fisubrs
in
sub
or
adc
adc
das
dec
sub
lcall
mov
sub
lea
lds
jmp
xlat
add
mov
cli
in
or
aaa
das
cmp
jns
push
das
fisttps
loop
out
repnz
or
std
xor
mov
decl
stc
gs
iret
xor
xor
xor
push
xor
ljmp
mov
aaa
imul
xor
int3
fnsave
in
repnz
std
mov
cmp
ss
jp
xchg
cmp
outsb
sub
inc
pushl
jo
test
movsb
xor
aad
adc
and
daa
cmp
cmp
cwtl
cmp
sbb
fprem
cmp
cmp
lea
shlb
repz
sub
xor
sub
push
sub
push
jbe
mov
shl
jle
sub
cmp
outsb
jb,pn
xchg
enter
outsl
std
lret
sub
mov
xchg
sub
test
mov
cld
push
fisubrl
cs
sub
mov
push
fistpll
push
sub
xor
push
xor
jle
mov
xchg
cs
fucomip
ljmp
xor
or
or
sbb
xor
data16
mov
pushl
jg
cltd
sub
loope
daa
add
xor
jg
mov
xor
inc
cs
xor
jne
ja
test
mov
nop
xor
cs
or
lods
xor
aam
fisttpl
xor
xor
das
popa
inc
xor
xor
xor
xor
xor
xor
imul
mov
xor
xor
sub
pop
clc
ljmp
xor
xor
inc
and
ss
xor
pushl
lea
sahf
ss
xor
cmpsb
xor
das
mov
ss
cmp
xor
cmp
ss
mov
ret
xor
cmp
ss
cmp
mov
aaa
sti
cmp
sub
mov
fwait
sub
sub
sub
mov
ljmp
add
sub
or
pop
clc
lcall
pop
sub
sub
sub
das
adc
sbb
test
cmp
jg
test
pop
shrl
inc
jge
and
cmp
dec
das
insb
mov
sub
das
mov
xor
sub
push
sub
xor
mov
sub
ljmp
sub
xor
cs
pop
jge
xorb
das
xchg
xor
in
xor
mov
sbb
xor
pop
jl,pn
ja
xor
icebp
ljmp
mov
xor
xor
inc
xor
push
das
jbe
jns
pop
incb
das
mov
pushl
adc
and
xor
jecxz
cli
xchg
jns
xchg
xor
xor
loope
fbld
daa
pop
aaa
cltd
xor
ss
xor
jl
xorb
jg
push
xor
aad
push
cmp
sub
sub
aad
push
insl
ret
sub
sub
sub
sub
jmp
cvtps2pi
push
sub
cs
xor
mov
mov
cmc
inc
sub
enter
sbb
dec
sbb
xor
dec
addr16
jp
sar
fdivr
das
call
inc
push
xor
cmp
cmp
cmp
fstpt
cmp
aaa
add
cmp
cmp
xor
cmp
dec
cmp
cmp
cmp
aaa
fnstsw
cmp
cmp
pop
test
pop
sub
sub
push
repz
jg
jg
mov
mov
movsl
sub
add
sub
sub
cs
shrb
mov
lahf
cmc
and
es
inc
sub
std
das
lock
lahf
sub
jne
sub
jecxz
sub
mov
sub
shll
lock
decl
mov
gs
jns
subl
lahf
das
mov
ljmp
xchg
mov
sub
cs
sub
inc
sub
xor
jns
movsb
cmp
xlat
sub
lods
fcmovnbe
test
sbb
sub
mov
mov
fstpt
xor
xor
sub
icebp
pop
js
xor
push
jp
mov
xor
idivl
jnp
and
cmp
push
cmp
cmpsl
das
mov
sub
xor
rolb
xchg
add
data16
testl
adc
out
mov
and
js
xor
in
js
add
outsb
outsl
and
je
jo
and
jo
push
popa
je
and
dec
dec
pop
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
jg
mov
ja
inc
jne
jb
outsb
je
gs
imul
pop
push
outsb
pop
jae
popa
insb
insb
pop
jae
incl
xor
outsb
gs
dec
pop
imul
jbe
ja
xor
push
dec
outsl
push
outsl
popa
insl
sbb
arpl
mov
stos
lret
add
or
imul
cs
dec
jae
and
and
repnz
jns
je
jbe
adc
outsb
imul
lods
fstl
popa
bound
outsl
fldcw
adc
jo
pop
fsubrp
lock
and
pop
push
or
xor
jg
jbe
pop
jns
aas
ret
adc
push
jb
jns
add
xor
and
sub
jb
add
inc
negl
jb
outsb
cmp
pop
jle
ja
fs
insl
adc
push
jae
faddl
imul
inc
adc
popa
gs
jg
bound
sti
addr16
gs
popa
push
ds
pop
outsl
mov
mov
jns
push
push
adc
mov
fldln2
jns
dec
jmp
inc
fs
imul
dec
add
mov
xor
push
scas
sbb
inc
inc
mov
lods
mov
cmp
jb
adc
fcomp
jnp
inc
outsl
sub
cmp
push
or
push
inc
push
or
loope
mov
jnp
jae
push
clc
pop
outsb
xor
jae
lds
comiss
fisubrs
or
insl
mov
addr16
insl
jbe
mov
jmp
outsl
dec
push
and
fs
mov
jge
daa
push
sti
imul
insb
sti
js
jnp
jae
and
imul
test
insl
inc
jae
lea
aas
aaa
dec
push
pop
pop
popa
ja
insl
jo
or
dec
in
ljmp
xor
adc
sbb
xor
xor
xor
xor
fistpl
repz
mov
push
outsl
jmp
sahf
push
add
das
add
shr
adc
pushf
out
fmuls
pop
xchg
loope
outsl
out
xchg
fdivrp
ja
pop
ja,pt
jb
ja
jno
mov
add
xchg
loop
add
fimuls
pusha
xchg
push
ja
add
fildl
pop
jecxz
push
cmp
inc
stc
insl
repz
sbb
jmp
push
add
scas
and
push
bound
add
or
add
push
push
mov
add
outsl
fiaddl
jo
pop
add
fstl
and
in
and
pop
adc
pop
movsl
and
fidivrs
pop
fadds
pop
push
cmp
mov
insl
sub
push
les
add
add
sub
addl
push
aad
idiv
mov
mov
pop
pop
iret
mov
dec
and
adc
pop
sbbl
in
and
push
imul
or
lds
add
add
inc
dec
push
das
add
sbb
mov
inc
xchg
pop
push
add
add
call
rolb
nop
add
add
sub
cltd
shlb
jns
and
sub
add
push
sbb
adc
xchg
add
add
jg
sub
mov
add
mov
add
jg
mov
push
add
jb
jbe
sub
add
cmc
mov
clc
cs
sub
adc
incl
insb
cs
xor
inc
jb
popa
je
inc
and
gs
pushf
pop
fcomi
inc
adc
push
imul
inc
pop
fadds
imulb
push
and
je
aaa
mov
or
jp
push
dec
push
add
mov
jae
dec
popa
outsb
fs
imul
sub
outsl
jbe
inc
js
and
mov
fildll
cmovle
inc
inc
or
imulb
test
push
jb
arpl
xchg
in
jo
outsb
or
dec
fs
outsl
jne
rcrb
push
enter
pop
imul
add
mull
jae
cpuid
pushf
insb
adc
out
lods
popf
insl
adc
inc
mov
and
mov
arpl
jnp
or
mov
sbb
fs
dec
outsl
popa
fs
out
jg
mov
mov
mov
fldl
je
mov
sub
gs
adc
push
outsl
outsl
insb
mov
jo
adc
test
sub
push
and
addl
imul
lea
jmp
sub
lret
test
mov
jmp
in
call
lcall
lcall
incl
or
call
leave
adc
mov
insl
pop
add
or
mov
inc
add
mov
jp
call
mov
sti
jmp
add
inc
push
sbb
ljmp
or
repz
insl
sub
push
push
jns
aaa
mov
pushl
ud0
inc
xchg
insl
fcomi
add
xorl
fisttpl
jge
or
lcall
insl
push
xchg
lock
push
or
icebp
adc
add
mov
add
insl
fildl
jno
mov
pop
push
push
insl
fnstenv
pop
cmp
movsl
dec
mov
fbstp
adc
or
fcmovne
in
push
andl
sar
or
out
push
aad
insl
mov
inc
das
dec
or
push
insb
add
sub
xor
ja
push
std
jno
jo
gs
xor
je
push
pop
pop
push
mov
pop
je
wbinvd
lods
push
test
mov
and
insl
or
data16
pusha
lea
push
mov
sub
data16
add
ret
mov
jae
arpl
outsb
or
jo
mov
mov
je
xchg
or
pop
mov
pop
and
insl
bound
fcmove
addr16
scas
ja
or
jbe
push
jg
jns
sbb
outsb
arpl
inc
inc
js
inc
jb
jmp
sbb
jo
outsb
je
mov
imul
push
jae
ret
inc
xlat
ficompl
loopne
or
shll
xor
or
rorb
jne
jo
out
hlt
lcall
popa
sbb
clc
insl
out
inc
aaa
jne
mov
push
push
push
fs
xlat
or
dec
adc
imul
stos
aaa
jmp
jge
or
outsb
mov
push
jne
jae
insb
dec
wbinvd
adc
xor
scas
push
push
sub
mov
sub
sbb
fiadds
leave
out
dec
outsb
or
jo
inc
xchg
push
xchg
insl
sub
jns
bound
jg
cwtl
mov
push
jl
pop
jmpw
push
inc
dec
add
add
pop
ja
pop
sidtl
jmp
sub
in
in
insb
roll
adc
add
xor
sbb
adc
sarb
push
sub
test
js
mov
in
inc
add
xchg
add
inc
xor
jb
popa
jb
pop
popa
push
in
add
idivl
xor
jl
add
daa
rorb
sub
jnp
or
repz
dec
add
aas
jnp
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
