daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jecxz
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
pop
fistl
int3
into
mov
mov
or
shl
add
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
or
sbb
cmp
cmovno
clc
jecxz
lock
push
xor
into
bound
popf
imul
adc
stos
xchg
ss
int
sbb
fstpl
mov
xor
mov
pusha
sub
mov
push
mov
dec
sub
pop
pop
in
int
cs
das
jnp
add
in
lea
xor
popa
xorl
das
inc
sbb
dec
push
dec
imul
notl
je
mov
mov
leave
inc
add
pop
idiv
fsubrs
lcall
adc
lds
pop
xchg
mov
ret
int
pushf
push
pop
mov
leave
xor
push
adc
xor
push
leave
push
sub
adc
arpl
inc
rcrb
pop
lds
adc
jp
cmp
push
cmpsb
sbb
add
dec
pop
mov
add
cmp
inc
bound
orl
xchg
fwait
xchg
lret
or
push
mov
enter
push
push
dec
push
bound
out
dec
and
add
fs
mov
xor
push
dec
aaa
adc
mov
push
push
push
add
pop
mov
lcall
mov
fcmovnb
mov
cltd
out
push
push
je
xor
outsl
rol
sub
or
mov
dec
scas
and
adc
sub
ja
nop
sbb
push
or
sub
push
out
je,pn
xor
push
mov
push
push
sub
popf
xchg
xor
inc
inc
cmp
push
stos
imulb
sti
xchg
push
inc
repz
adc
push
mov
aad
cmp
scas
fstl
lea
push
push
jo
xor
sbb
fs
test
or
sub
dec
dec
or
mov
push
pusha
push
adc
push
rorb
cwtl
loop
outsl
add
loope
dec
pop
push
push
cmp
xchg
add
xlat
inc
xchg
mov
add
xlat
dec
mov
jl
push
xor
sahf
mov
push
push
add
scas
aaa
cmp
or
push
lret
nop
sbb
pusha
add
pop
xor
jmp
jae
pushf
in
rcll
ds
js
les
test
fldt
ret
mulb
adc
xorl
popf
xor
xor
in
sub
mov
xor
cmc
rcrl
push
push
push
xchg
int3
xchg
push
pop
int
lea
lock
push
mov
pop
pop
or
iret
jae
cmpsb
outsb
dec
inc
push
adc
adc
adc
adc
in
sbb
fnsave
adc
push
xchg
sbb
or
dec
add
sub
fcomps
cld
lret
or
xor
dec
push
add
cmpb
jne
test
jle
push
dec
jns
add
hlt
divl
push
cld
outsb
dec
loop
in
add
out
or
jmp
adc
inc
leave
mov
fdivl
outsb
js
dec
out
jmp
mov
insl
or
mov
movsb
mov
sub
cwtl
out
mov
xor
sbb
shl
lret
pushf
jnp
xchg
mov
imul
pop
cmp
int
jle
insl
pop
jb
sub
sub
fsubl
xor
faddl
ret
fcmovnbe
sub
mov
in
loopne
push
lret
or
push
push
fisttpll
and
mov
call
scas
mov
xchg
test
adc
test
loope
sub
dec
fmuls
adcb
add
insl
mov
andb
pop
push
jmp
mov
push
mov
rcl
jo
mov
inc
push
sub
xchg
adc
iret
mov
and
ja
sbb
mov
cmp
sbb
cli
or
lea
push
adc
mov
aaa
lret
lea
mov
xor
and
in
and
mov
movsl
pop
ds
or
mov
push
fsubl
pop
cld
push
adc
sarb
lock
and
add
adc
addl
or
shlb
add
lea
pop
cmpsl
leave
adc
mov
dec
dec
sbb
dec
jbe
dec
inc
sbb
gs
jno
add
mov
jb
mov
pusha
mov
xchg
test
xor
sub
icebp
out
pop
sbb
push
push
pop
push
xor
jmp
push
xor
push
and
or
out
mov
adc
adc
xor
xchg
add
ljmp
mov
inc
outsl
push
xchg
mov
cmp
push
imul
sub
sbb
popa
jo
mov
in
add
and
in
push
nop
cld
push
push
sbb
and
sbb
adc
and
mov
xorb
aaa
sbb
imul
jnp
mov
cmp
sub
fnstsw
xor
push
jae
cmpsb
jmp
sub
adc
adc
pop
xor
out
sub
adc
pop
aaa
sbb
mov
jnp
pop
and
aas
push
data16
mov
mov
enter
jae
cld
jne
inc
add
sbbl
out
add
xor
inc
ret
and
dec
or
pop
xchg
mov
push
call
es
iret
mov
inc
jmp
push
and
bound
inc
data16
push
sbb
adc
pop
rorl
push
jg
sbb
orb
jae
dec
or
dec
push
dec
paddusb
sbb
sub
mov
dec
push
pusha
pop
les
sarb
mov
jne
push
and
roll
or
and
ret
and
dec
lock
push
adc
push
sub
or
push
pop
mov
outsb
es
adc
ret
or
dec
jle
nop
and
pop
inc
pop
or
pusha
movsb
cmp
push
sbb
ja
pop
add
btc
jbe
sub
mov
pushf
je
enter
or
jl
cltd
xor
gs
sbb
mov
pop
cltd
scas
lcall
push
dec
inc
mov
inc
data16
cmp
jmp
jle
xor
into
js
inc
rcrl
push
outsl
or
fdivl
push
add
shll
push
cmc
push
xchg
push
dec
and
adc
lea
pusha
and
loop
or
lock
push
pop
mov
out
cmpsb
mov
push
push
js
std
test
push
and
gs
pop
adc
xchg
sbb
insb
outsb
mov
jne
inc
clc
pushf
mov
mov
or
xor
mov
int
movsb
rcrl
inc
adc
add
sbb
lahf
inc
mov
js
push
ja
shlb
push
push
and
add
cltd
xor
push
jp
or
pcmpeqd
and
lock
mov
cmc
adc
cmpl
push
jmp
mov
insb
insb
ret
push
idivb
mov
dec
orl
lahf
add
ds
and
cmp
inc
cmp
fildll
fsubrl
fsubr
and
sbb
mov
ret
or
js
mov
adc
js
filds
push
ret
adc
shrl
aam
dec
lock
cltd
sub
and
clc
out
sbb
imul
jnp
sub
je
jbe
je
sbb
pop
pop
fisubs
adc
fcmovb
or
sub
pop
fsubs
movups
leave
aaa
wrpkru
or
fmuls
rcll
mov
test
sbb
adc
add
sbbl
pusha
aam
jbe
jg
xchg
aad
or
call
daa
adc
cvtdq2ps
addb
sbb
mov
sbb
mov
inc
cmpsl
jns
lea
in
dec
sahf
adcl
sbbb
mov
in
sbb
xchg
cmp
adc
adc
xor
inc
push
add
add
cld
jns
dec
lcall
sbb
hlt
or
adc
shr
call
lea
daa
test
je
sbb
dec
adc
pop
add
xchg
scas
cmp
mov
insb
mov
xor
cltd
jnp
add
push
add
subb
jo
or
fs
bswap
mov
in
cmp
roll
or
pusha
cli
pavgb
jo
adc
cmp
nop
je
sub
inc
adc
dec
inc
out
ja
mov
mov
int3
pop
sbb
in
stos
pop
push
int3
mov
or
pop
icebp
sbb
fmull
roll
xor
mov
mov
cltd
dec
sbb
pusha
inc
pop
jns
xorb
xor
pop
sub
orl
sbb
aam
sub
cmp
mov
inc
add
xchg
or
push
prefetcht1
sbb
jl
add
xor
arpl
mov
jne
xchg
lods
push
ret
orb
lods
or
dec
xor
dec
push
jo
push
adc
mov
adc
lea
out
add
repz
xor
inc
add
insb
sub
setno
add
add
test
enter
lcall
rolb
shlb
loopne
jne
xchg
xchg
adc
and
and
add
jns
pop
adc
or
cmp
outsb
mov
pop
dec
adc
push
lret
push
das
fsub
ret
push
and
rcll
inc
xchg
movsb
pop
ja
cwtl
sub
or
sbb
ja
mov
xor
or
lock
fistpll
sbb
aad
adc
mov
sbb
je
jmp
mov
push
xchg
and
std
push
or
leave
jae
daa
jne
push
rolb
adc
cltd
idiv
mov
mov
mov
clc
in
add
mov
cmp
jb
sub
add
jg
arpl
mov
or
addr16
fcoml
add
xchg
xchg
enter
xchg
xchg
xchg
mov
sub
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
lahf
iret
xchg
xchg
add
cld
inc
clc
inc
hlt
inc
repz
jl
lock
mov
inc
enter
test
enter
pushf
mov
movsb
test
mov
xchg
out
mov
inc
mov
xchg
enter
and
and
fsub
in
lods
fcoms
and
nop
cmp
sub
jb
sub
sbbb
adc
push
mov
and
cmp
and
nop
jmp
mov
cmpsl
pop
add
ret
push
xor
add
add
in
insb
cwtl
inc
scas
sub
push
stc
pop
decl
mov
ljmp
inc
orl
push
int3
lods
inc
fs
mov
hlt
mov
mov
or
mov
mov
cld
mov
dec
push
adcb
ja
std
std
push
inc
mov
lea
test
insb
aaa
or
add
or
add
and
std
scas
add
xor
and
inc
or
add
insl
bswap
mov
repnz
jbe
aam
xchg
mov
cld
inc
testb
in
movzwl
repz
push
sub
jbe
jmp
push
pop
pusha
push
push
jmp
scas
fldenv
cmp
jl
cwtl
xor
test
ljmp
or
inc
pop
mov
or
in
inc
lock
bound
es
push
add
das
push
movsl
ret
inc
call
push
mov
adc
xor
jmp
and
and
mov
sbb
std
adc
jmp
pusha
jmp
pop
fsubr
xor
jo
push
xor
jb
mov
icebp
inc
lea
paddusb
fcomps
add
add
and
mov
jns
test
sub
add
dec
scas
imul
sub
cmpsb
pop
aam
dec
lock
mov
lcall
dec
cmpsb
imul
cmpsb
imul
cmpsb
imul
add
xchg
lret
in
pop
adc
pop
or
sbb
movsl
leave
adc
mov
or
popf
or
das
add
and
mov
jp
nop
xor
int
pop
outsb
adc
add
add
das
dec
jne
xlat
jne
repz
sub
pop
sub
fdivl
xlat
adc
aaa
inc
out
arpl
movhps
shlb
xchg
pop
sbb
mov
daa
push
addl
sub
scas
jmp
dec
inc
push
adc
jmp
dec
pop
or
icebp
testl
scas
mov
pop
mov
jmp
jno
mov
pop
push
push
jmp
scas
jmp
mov
movsl
addr16
xlat
xor
adc
inc
or
xchg
pop
push
scas
arpl
sar
or
scas
jmp
out
mov
inc
aas
dec
mov
addr16
dec
add
and
push
xor
mov
testb
mov
shll
js
sub
cmpsb
outsb
bound
dec
inc
dec
dec
shll
xor
mov
add
fmull
shlb
or
je
add
xor
clc
add
addr16
rorl
loope
or
adc
push
mov
sbb
fmull
jecxz
and
adc
bound
pop
push
push
dec
inc
jmp
cmpsb
imul
adc
pop
xor
sub
cmpsb
imul
imul
imul
imul
imul
mov
adc
pop
mov
add
jo
pop
verr
imul
and
mov
dec
xor
and
inc
xor
enter
xor
shll
push
adc
add
das
clc
repnz
cmp
lock
aaa
stos
rolb
in
das
out
shll
enter
shll
mov
stos
movsb
or
dec
rcrl
add
cmp
and
push
xor
aas
jecxz
add
inc
and
daa
lock
jns
add
sbb
sbbl
and
pop
dec
sub
push
enter
dec
and
xor
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
or
xor
adc
inc
inc
dec
xor
cs
insb
add
push
inc
push
or
push
push
xor
mov
ret
or
push
sbb
test
add
aaa
jo
fistpll
inc
pop
clc
cld
add
sti
stc
fs
out
cld
idiv
cld
mov
testl
cld
stc
call
mov
divl
cli
dec
leave
push
dec
bound
lcall
outsl
pop
insb
sbb
imul
sbb
sbb
sbb
push
inc
pop
popa
sub
add
sbb
xchg
mov
pop
shlb
sbb
lods
push
shll
or
mov
into
mov
mov
int3
mov
ret
out
out
daa
shrl
mov
movsl
sbb
and
mov
mov
jnp
cltd
outsl
dec
gs
gs
dec
inc
adc
jg
jg
incl
clc
sub
dec
fdivr
add
daa
dec
shlb
ss
add
sbb
in
sarb
std
or
std
pop
sti
ss
cmp
add
adc
or
pushf
sub
or
jl
fs
cltd
outsl
rorl
dec
popa
mov
dec
or
in
push
jo
jne
arpl
shlb
dec
daa
push
add
lcall
pusha
pop
imul
insl
adc
xchg
or
cmp
daa
pusha
pop
jno
decl
data16
je
lea
fs
in
insl
mov
fldt
fsts
jg
test
dec
xchg
jle
add
cmpsl
stc
js
clc
cli
cld
idiv
dec
push
push
bound
das
mov
cld
cld
imul
cmpsl
bound
aaa
mov
idiv
dec
dec
addr16
clc
adc
notb
das
std
dec
cld
or
push
test
addr16
mov
outsb
in
xchg
dec
push
mov
movsb
imul
push
fs
add
or
mov
mov
pop
das
mov
dec
clc
rorl
aaa
jg
dec
dec
popa
insb
push
push
pop
imul
dec
cld
into
pop
push
pop
mov
xchg
dec
dec
dec
test
cmpl
sti
popa
scas
pop
add
in
dec
inc
jl
repnz
lcall
sub
mov
jle
in
in
and
lret
loopne
sub
fbld
and
jmp
mov
lods
mov
addb
divb
int
cmp
jg
in
inc
daa
push
push
sarl
push
push
dec
dec
xchg
addb
mov
lock
addb
xor
in
push
dec
movsl
mov
in
add
or
push
dec
decb
mov
mov
pop
arpl
pusha
imul
inc
outsl
stc
jl
or
cld
fwait
add
daa
cli
pop
in
and
lahf
mov
std
outsl
jg
mov
loopne
sbb
out
push
sbb
mov
std
repnz
push
dec
in
cmp
mov
or
mov
add
test
adc
cmpb
hlt
jno
outsb
xor
sbb
testb
mov
sti
jb
push
dec
std
aam
pop
clc
add
stc
pop
add
frstor
and
incb
adc
jo
ss
stc
in
shlb
rorb
pushf
es
scas
and
pop
push
call
push
sub
dec
mov
dec
outsb
cli
or
mov
repnz
loope
sub
and
ret
jmp
fisttpl
nop
pop
mov
cli
push
sub
or
or
or
mov
push
adc
dec
idivl
mov
mov
jmp
sbb
stc
out
aaa
xor
xor
xorb
cmp
mov
test
lock
addr16
inc
fcmovnu
ret
outsb
jmp
call
hlt
insl
fs
fcmovnb
inc
add
rorl
pushf
insb
std
pop
out
sbb
xor
ret
aad
pop
lds
fistpl
shll
push
push
xor
xor
mov
int3
ret
mov
xorb
xchg
dec
mov
jnp
mov
stos
inc
icebp
push
arpl
pusha
inc
or
popa
decb
xchg
mov
outsb
clc
sbbl
or
mov
leave
adc
dec
push
dec
lock
add
jne
push
or
psubb
dec
outsb
or
mov
add
inc
fwait
add
xchg
pop
xor
out
into
fadds
test
dec
inc
ret
dec
cmp
fs
out
mov
lea
add
dec
popa
dec
addr16
or
repz
aad
dec
or
imul
out
jne
xor
push
jno
rolb
fisttpll
cwtl
xchg
pop
xorb
or
aaa
sub
fbld
xchg
fists
push
push
cmpl
sub
pop
xchg
dec
in
push
or
jmp
in
jb
push
rorl
sbb
addr16
mov
push
divl
mov
or
pop
lea
push
sub
cmpsl
movsl
out
fs
pop
pop
addl
sti
cmc
incl
push
ja
add
and
cli
cmc
in
add
jb
and
cmp
stc
fisubrl
pop
cmp
outsb
adc
sub
outsb
add
mov
mov
or
cmp
push
test
and
mov
or
pushl
dec
adc
pop
jge
jge
push
xor
sub
jl
ret
ljmp
cmp
cmp
push
push
test
lcall
pop
in
xchg
mov
cmp
out
xor
cmp
xor
jno
mov
ret
repnz
out
inc
push
xchg
jecxz
jg
insb
adc
das
lock
icebp
dec
loope
inc
arpl
lock
jp
jae
jecxz
mov
call
xlat
jb
imul
std
or
int3
cmc
dec
dec
das
jb
adc
in
ds
xchg
orl
in
inc
cld
mov
xchg
push
pop
fcomps
cmp
out
aas
ja
jmp
dec
or
push
mov
xchg
dec
std
push
jne
cvttps2pi
sub
adc
mov
push
stc
pushl
orb
stc
cld
fs
movsb
repnz
inc
sti
loope
add
data16
push
push
enter
aaa
jo
pop
xchg
mov
adc
sbb
test
sub
cli
fprem1
imulb
cli
push
dec
outsl
add
dec
das
repnz
jne
lock
xor
fs
add
fwait
mov
clc
adc
pop
adc
repz
xchg
cmp
add
stc
or
xor
lock
cmpb
push
sti
addr16
loope
add
icebp
out
testb
or
in
adc
mov
out
add
lock
jmpw
or
lret
ret
mov
inc
mov
and
jge
adc
inc
repz
test
jb
adc
push
repnz
sar
push
test
xor
pop
xchg
or
icebp
add
cmp
cmp
popa
fimull
in
mov
mov
repz
dec
push
fnstsw
add
int
jmp
cs
out
out
mov
dec
adc
and
pop
sti
test
hlt
fistpll
pop
je
pusha
hlt
or
out
fisubs
and
out
test
jns
cmc
lcall
add
jl
jg
inc
sar
repnz
or
pop
mov
out
add
mov
xor
ljmp
loope
out
push
adc
xchg
int
hlt
add
aaa
mov
jae
addr16
adc
or
pop
cmpsb
imul
aas
cld
jb
lcall
cmc
dec
fistpll
jno,pn
mov
pop
xchg
mov
insl
fildll
test
jg
fistl
xor
mov
cmp
loopne
ret
mov
add
push
addr16
sbb
mov
outsl
movsb
cmp
add
inc
lahf
lds
testb
outsl
cwtl
cmp
cmc
test
push
add
mov
lahf
xchg
mov
lahf
mov
lods
notl
sysexit
sahf
mov
dec
dec
in
idivl
icebp
std
dec
imul
add
push
or
pop
cs
sarl
hlt
loope
inc
jns
nop
and
icebp
dec
cld
push
ljmp
pop
mov
ja
fistl
mov
ds
xor
or
test
pop
cli
or
jg
sbbl
std
in
add
bound
jg
std
or
mov
dec
icebp
add
pop
popa
addl
mov
cmpsb
std
pop
xchg
and
dec
pop
adc
xchg
popa
aas
in
xchg
xchg
jl
or
lcall
push
cld
addr16
pop
xchg
mov
jae
cmp
xchg
jecxz
aaa
xchg
loope
add
gs
add
push
aas
pop
mov
add
icebp
inc
add
lods
fstl
cmpl
mov
jecxz
sahf
out
andl
xchg
orl
mov
adc
std
add
shlb
mov
inc
testb
mov
mov
outsl
lea
or
aam
adc
das
icebp
aaa
inc
movsl
cmp
sub
and
jg
and
call
mov
ret
mov
int3
xchg
ret
ffreep
cmp
add
pop
test
shlb
or
in
and
addr16
jl
rcrb
cld
in
xchg
push
push
fists
mov
in
ret
and
push
sbb
lea
xlat
jle
or
mov
insl
mov
popa
stc
fnsave
mov
orl
dec
sti
sbb
fildl
inc
lahf
repnz
addl
std
xor
add
das
dec
adc
pop
fsubrs
mov
out
inc
fidivrl
add
insb
jecxz
jnp
mov
cli
push
lret
pop
cmp
test
test
jnp
loopne
mov
enter
xchg
mov
xor
add
inc
inc
add
xor
pop
pop
in
jno
cmc
clc
cmpsl
mov
push
lahf
xchg
inc
cmpsl
add
jg
inc
clc
fwait
jl
add
in
add
sub
loope
add
loop
inc
xor
and
add
mov
incl
dec
xchg
fsubr
jb
subl
iret
imul
add
cmp
jb
cmp
mov
jnp
cld
outsb
sbb
sbb
fildll
and
xchg
ss
sti
sbbb
dec
jno
aaa
sub
or
lahf
fcmove
sbb
aas
out
mov
call
rcrb
orl
xor
loop
jp
dec
push
insb
je
jge
dec
cmp
jae
cmpl
mov
jno
mov
ss
add
xchg
fisubl
mov
lods
test
and
adc
mov
or
lods
push
loopne
jg
sbb
pop
push
rclb
sti
mov
pop
cmp
cld
mov
add
inc
std
loop
outsb
roll
dec
gs
int
mov
loope
or
adc
test
outsb
pop
ljmp
addb
std
data16
push
push
dec
int
dec
fldl
test
cs
pop
mov
pop
ljmp
sub
xor
push
jg
mov
xchg
std
jns
test
xor
xchg
std
jne
in
mov
cmp
sbb
outsl
mov
or
xchg
sub
popa
ret
jo
in
outsb
hlt
and
rorb
fsts
lcall
pop
jl
repz
sti
stos
cmp
sbb
cs
xor
push
dec
or
cmp
adc
add
sbb
mov
clc
sbb
clc
aad
das
hlt
adc
add
lahf
xor
sti
push
clc
xor
or
push
aaa
jmp
roll
inc
insl
and
dec
clc
xor
fstpl
das
push
pop
pop
pop
push
inc
xor
std
sub
lds
dec
or
lock
std
arpl
dec
or
pop
pop
push
out
push
xlat
fstl
xchg
arpl
out
movsl
icebp
cmp
test
cmpb
clc
shlb
repz
fcoms
ret
pop
mov
jno
xlat
test
lahf
leave
mov
popa
fcomip
insl
xor
cmp
xchg
mov
push
in
add
clc
inc
mov
in
dec
dec
fs
js
fwait
sub
scas
mov
mov
js
or
mov
dec
gs
cld
add
ds
push
add
fiaddl
ds
sbb
data16
xchg
sbb
or
mov
sbb
cmp
imul
data16
pop
test
jmp
mov
sbb
popa
adc
fnstsw
lahf
incl
jmp
out
clc
notl
cld
out
in
iret
lcall
xchg
test
pusha
shr
sub
lods
movsb
xchg
dec
dec
add
sbb
clc
popa
loopne
pop
jp
std
mov
add
gs
mov
xlat
lods
insb
and
outsb
inc
dec
push
xor
cltd
test
rcrb
cmc
insl
add
aaa
cli
lcall
rcll
dec
dec
push
dec
push
test
mov
add
loope
adc
insb
add
lock
sbb
or
test
mov
into
in
mov
jmp
out
ja
add
fisttps
mov
xlat
in
repz
ret
das
pusha
loopne
mov
sbb
enter
dec
stc
insb
sub
aam
inc
jmp
jb
ret
lods
dec
lret
insl
stos
orl
cltd
add
mov
jne
orb
cmp
cmc
fildll
push
test
xor
insb
sbb
dec
xchg
push
adc
add
mov
add
int3
insl
fnstsw
cwtl
cmpl
pop
ret
testb
int
mov
adc
jg
or
jae
call
clc
push
mov
xor
push
xor
dec
dec
test
pop
push
repz
jo
divb
mov
jg
in
sbb
xor
popf
and
test
jno
or
filds
cmp
sti
add
incb
shll
xchg
mov
lods
decl
sbb
and
inc
or
ret
pop
sbb
inc
or
clc
mov
pop
cld
or
fmuls
xchg
pop
push
movl
mov
shrl
fists
push
adc
add
fists
add
in
push
in
add
outsl
mov
sub
insl
fildl
xor
push
mov
loopne
outsl
cld
push
inc
test
xchg
and
pop
call
std
mov
pop
lods
fildll
jnp
or
ja
cld
incl
mov
mov
fisttps
popf
xchg
pop
outsb
mov
jmp
mov
out
add
outsl
icebp
sbb
shll
or
int3
lret
ret
jmp
dec
decl
imul
xchg
lods
outsb
mov
std
mov
stc
cmp
insb
pop
xchg
cmp
test
jno
sbbb
dec
xchg
jmp
push
fisttps
sbb
add
jl
std
sbb
inc
add
jno
jno
xor
or
std
xor
fimull
cli
jmp
or
pop
clc
pop
xor
adc
add
lock
sbb
push
lods
aam
loope
dec
xor
xchg
fidivs
cld
fnstenv
cmp
mov
sub
sbb
jno
or
xor
or
out
or
ljmp
adc
out
mov
insb
loop
mov
ljmp
loopne
pop
dec
mov
add
ffreep
cmpsb
test
and
or
add
aaa
or
inc
std
xor
jno
icebp
xchg
out
xchg
sbb
xchg
ja
in
addr16
pop
xor
dec
pop
repnz
loop
imul
cmp
aaa
jnp
or
xchg
xor
jno
mov
jl
clc
outsb
push
test
sarl
cld
ret
jl
and
jne
out
lock
push
cmp
jb
mov
pop
andl
jecxz
mov
xchg
inc
outsl
sbb
les
sbb
outsl
add
xor
mov
repz
add
test
fneni(8087
pop
jl
adcb
jae
loop
repz
addl
mov
mov
sbb
sbb
ret
xor
pop
jge
mov
mov
testl
pop
mov
outsl
add
in
jmp
test
jo
cmp
dec
xorb
loopne
in
mov
das
pop
lret
mov
addl
mov
mov
sbb
test
in
xchg
sti
cmp
in
dec
xorl
xchg
xchg
cmc
dec
loope
push
fsubrl
ficomps
pop
mov
mov
clc
push
pop
xchg
js
add
jns
xchg
test
fstpt
fmulp
mov
jne
or
xor
hlt
hlt
jl
xchg
loope
fnstsw
fisttps
pop
test
jb
std
lahf
rorb
mov
push
cmp
push
in
call
push
sub
add
cmc
addr16
popf
xor
fldcw
xchg
scas
fstpl
stc
fdivrl
and
xchg
fiadds
jae
jno
adc
cld
jno
xor
sbb
fldt
test
imul
sarl
add
fidivl
xor
ret
push
insl
xor
push
or
pop
out
aaa
addr16
out
pop
sbb
mov
adc
mov
and
add
mov
sub
das
test
insb
add
cmp
xchg
add
adc
adc
pop
fsubrs
lds
push
jp
inc
std
cmp
outsb
stc
incl
adc
aaa
in
insb
pop
add
mov
out
das
outsb
dec
mov
aad
cmp
adc
imul
aad
popf
popa
dec
cld
pop
aaa
mov
lea
lds
pop
jb
imul
test
lret
dec
fbld
insl
cmp
hlt
aaa
insl
pushl
imul
cmp
or
pop
repz
ret
jg
push
dec
sbbb
sti
insl
sti
out
pop
das
fsubr
jg
xor
adc
insl
stos
cmp
addr16
lods
dec
out
fwait
adc
lds
push
pop
cs
loope
sub
push
idiv
clc
mov
les
sbb
mov
dec
pop
mov
fidivrl
sub
mov
mov
xor
mov
mov
in
mov
prefetch
inc
pop
outsb
add
mov
call
insl
outsl
push
ret
arpl
inc
arpl
insl
push
push
mov
sbb
push
cmp
push
jg
in
add
sbb
je
pop
mov
clc
xchg
sti
pop
inc
add
subb
jmp
jo
adcb
subb
dec
pop
lcall
dec
pop
sbb
mov
or
pusha
add
aas
lods
shr
mov
addb
inc
subl
or
push
add
mov
dec
insb
in
push
push
cmp
cmp
test
dec
add
add
pop
movzbl
mov
push
jg
clc
out
cmc
outsb
or
add
mov
int3
add
rcr
dec
mov
add
loop
sbb
repz
shll
pop
test
sub
jg
add
subl
mov
dec
loop
jb
add
sub
cltd
mov
jbe
lahf
xor
fnstsw
ljmp
pop
popf
insb
pop
imul
jg
mov
movb
flds
mov
or
fsubl
lds
push
push
mov
sti
adc
icebp
mov
or
mov
jmp
clc
iret
fs
negb
call
clc
jae
fisubrl
dec
data16
testl
xor
dec
pop
daa
jge
push
les
les
adc
das
popf
cmp
pop
pop
pop
test
out
push
push
hlt
cmpsb
lea
pusha
cmp
cmpl
sbb
lahf
addr16
dec
repz
jl
not
arpl
xor
lret
notb
sub
stc
js
data16
loop
jl
add
hlt
test
jg
loop
sub
xor
or
mov
lret
mov
pop
mov
movl
mov
hlt
negb
mov
inc
rolb
mov
ja
mov
jae
subl
ljmp
xchg
and
mov
fincstp
mov
sti
or
mov
mov
dec
push
cmc
ds
xchg
jge
push
mov
jae
dec
insb
decl
jno
push
mov
icebp
mov
das
and
and
daa
in
adc
push
pop
mov
fildl
in
pop
xchg
div
lea
mov
jnp
and
int
dec
mov
pop
out
pop
sbb
or
jbe
jo
mov
or
imul
jg
add
jbe
test
add
and
and
loopne
js,pn
repnz
dec
xchg
jg
rorb
xor
dec
pop
ret
inc
aad
dec
sbbb
cmpb
cmpb
mov
das
push
mov
dec
dec
je
add
into
mov
jg
dec
adc
dec
outsl
push
addb
movsl
xchg
dec
mov
jnp
das
and
hlt
loopne
fwait
cmp
fcomps
dec
outsb
push
loopne
xlat
int
xchg
mov
pop
lds
enter
pop
mov
cli
lret
in
fldt
inc
out
xor
push
mov
sbb
add
xchg
sub
xchg
lods
clc
lods
out
mov
inc
popa
mov
lock
push
push
dec
push
test
fcmovnbe
in
test
xor
frstor
push
arpl
push
push
cli
lea
dec
jnp
test
dec
loopne
das
mov
mov
xchg
pushl
cld
int
ds
cmp
pop
mov
dec
clc
inc
sbb
in
fsubrs
xchg
add
sub
adc
inc
out
pushf
mov
daa
mov
push
popf
sahf
mov
jo
mov
fsub
pop
mov
mov
mov
jmp
pop
mov
out
sub
aaa
shlb
jl
cwtl
test
loope
rolb
out
aam
imul
aam
stc
out
xor
clc
add
imul
mov
push
bound
xor
sbb
das
xlat
dec
clc
outsb
xorl
cmp
jno
jmp
ja
inc
ljmp
icebp
push
aaa
clc
imul
jg
in
xor
sbb
das
jg
pop
lret
add
cmpb
lds
pop
lock
mov
aam
div
gs
cmc
in
scas
jbe
hlt
xorl
jge
out
jg
or
dec
int
dec
lahf
mov
cmp
or
test
aaa
dec
mov
icebp
mov
hlt
insb
or
adc
lock
inc
lods
lcall
sub
dec
andl
std
dec
cld
inc
fstpt
enter
pop
in
cmp
in
clc
jg
movsl
outsl
pop
dec
out
repz
out
clc
jb
or
mov
ljmp
lods
mov
mov
pop
sub
cmp
fistpl
or
outsl
loopew
fiaddl
sti
insl
sti
add
test
mov
adc
lods
push
sbb
push
xchg
pushf
icebp
int
call
and
int
loope
sub
inc
enter
mov
nop
test
push
xor
push
or
push
jg
dec
popa
aas
push
sub
push
lcall
movsb
int3
mov
mov
mov
divb
adc
cmp
mov
sub
data16
enter
cmp
pop
hlt
insb
and
cmc
dec
mov
push
push
dec
xchg
cmp
sti
aam
ret
or
mov
ljmp
repz
jecxz
dec
repz
xor
jno
stos
pop
pop
gs
pop
sub
pop
xor
or
mov
push
push
das
add
in
das
push
xor
sub
push
dec
shlb
ds
or
notl
dec
test
dec
loope
sub
sbb
in
mov
dec
fs
lret
lods
push
aaa
jmp
cli
adc
sarb
out
dec
in
sub
jne
fwait
sbb
dec
pop
xchg
jmp
aaa
xchg
loope
pop
sub
xor
push
icebp
sbb
sbb
test
pop
negl
mov
jg
fiadds
xor
incb
pop
jge
mov
add
add
pop
cmc
pusha
add
or
loope
add
jne
and
andl
sar
cmpsl
cmpsl
sti
pop
or
sar
subb
mov
pop
out
cli
xlat
fnsave
andl
jno
mov
loope
cmp
add
xor
add
add
imul
call
sub
aas
jno
mov
sub
or
push
sar
add
cmpb
pop
mov
cmpsl
cmp
mov
push
jle
mov
xchg
adc
inc
inc
adc
hlt
push
mov
pop
mov
dec
push
jle
sbb
dec
mov
orl
inc
mov
push
or
jp
jns
mov
push
orl
xor
rcll
jl
dec
inc
add
popa
int3
xchg
addb
mov
mov
pop
mov
xorb
or
push
fsubs
ja
std
mov
imul
imul
mov
fmuls
ret
pop
pop
outsb
cmp
enter
pop
and
clc
and
insl
inc
popf
inc
cli
or
shrb
cmp
shll
imul
orl
xor
js
cmp
aaa
insb
mov
aaa
mov
cmp
movsl
and
int
mov
dec
dec
imull
adc
fisttpll
push
xor
aad
mov
jnp
les
fs
pop
decl
mov
fnsave
or
lahf
sub
xchg
adc
mov
jns
mov
movsl
cli
adc
cmpb
in
fsubrs
add
or
sbb
movsl
cltd
in
add
inc
jge
jnp
out
jbe
xor
mov
or
dec
loope
sub
mov
loop
mov
pusha
out
ja
clc
mov
mov
jne
adc
movsb
fistpll
pop
data16
std
and
shlb
ja
jg
sbb
sub
and
xchg
adc
jl
mov
test
and
mov
mov
sbb
mov
jl
sub
je
dec
dec
dec
popa
js
inc
mov
push
daa
mov
xorl
sti
cmp
jne
scas
inc
mov
pusha
dec
push
pop
pop
rolb
rcrl
and
xor
andl
dec
scas
fmul
jnp
xchg
mov
sub
divb
aaa
dec
or
xchg
sub
inc
sub
add
push
fmull
daa
jo
out
lea
mov
add
push
xchg
push
mov
fimuls
popa
sub
push
loopne
pusha
jecxz
iret
rcr
fs
test
outsl
fs
iret
dec
sti
iret
addr16
mov
out
xchg
mov
stc
icebp
mov
adc
mov
in
and
cmp
jecxz
add
fbstp
out
dec
test
sti
jae
lcall
outsl
cltd
sarb
xchg
daa
mov
aas
add
jo
push
fildll
push
mov
add
stc
sbb
push
clc
adc
fs
push
movsl
dec
lock
clc
xchg
inc
out
test
imul
pop
jbe
fsubrl
or
std
mov
ljmp
jg
adc
mov
mov
ficompl
push
data16
cld
jg
rcr
inc
inc
ljmp
or
xchg
movsl
or
cltd
mov
loopne
lahf
frstor
sbb
jne
gs
fistl
loopne
inc
jge
sbb
jl
outsb
add
push
push
stos
jnp
fistl
add
jge
aaa
cld
add
inc
loopne
lret
mov
sub
pop
push
arpl
imul
push
or
add
and
mov
pop
ret
cmpsl
xchg
imul
adc
outsb
jno
push
add
stos
xchg
push
or
jle
in
mov
add
push
dec
arpl
outsl
das
jl
fisubrl
or
xor
shrb
mov
out
xor
mov
idivl
inc
mov
xchg
dec
mov
and
mov
clc
sub
in
in
lea
mov
jmp
and
lock
js
mov
and
mov
or
cmp
jo
mov
mov
test
push
test
xor
jmp
jae
std
xor
adc
inc
mov
out
adc
lcall
scas
xchg
mov
add
xlat
mov
and
mov
add
jo
push
mov
mov
pop
bound
shlb
xor
nop
pop
fcmovb
add
jnp
and
test
in
jae
shrl
mov
callw
lds
outsl
mov
jg
mov
sbb
pop
fwait
andb
popa
or
insl
jns
mov
mov
push
ss
xor
sbb
lds
sbb
pop
xor
push
dec
cmp
and
mov
lods
stos
inc
cld
xlat
xor
jno
dec
inc
add
lods
dec
pop
cmpsl
mov
xor
add
shrb
and
push
mov
ja
arpl
lock
stc
iret
rolb
mov
into
add
jg
jge
int
jae
or
out
pop
in
cmpsl
stc
sbb
pop
cmp
movsb
test
out
loopne
mov
ret
adc
std
push
imul
loopne
xchg
cs
cmpsl
arpl
jo
repnz
adc
mov
fnstcw
mov
ss
mov
cmc
incl
loope
add
or
jno
mov
iret
adc
in
in
pop
mov
test
jg
add
mov
sti
hlt
or
fsub
call
or
adc
iret
lea
test
lahf
cmp
pop
in
loope
repz
or
jmp
std
inc
mov
add
mov
inc
inc
sub
mov
test
insb
xor
gs
xchg
mov
xor
popf
punpckldq
dec
insb
pop
fucom
xor
and
dec
sbb
insb
pop
fst
xchg
cmc
ffreep
mov
sbb
cld
and
push
mov
out
and
jae
fistps
push
push
incb
pop
ror
push
sub
adcb
mov
ficoms
clc
and
test
mov
inc
les
mov
sub
xor
add
mov
push
sbb
xor
xchg
jle
add
add
push
clc
push
sbb
inc
das
push
or
mov
xor
in
push
popf
ret
pop
test
jae
xor
push
sbb
test
daa
rcrl
stc
lret
lea
sbb
icebp
mov
sbb
sbb
adc
arpl
movsb
mov
cmp
hlt
add
mov
nop
pop
sbb
sbb
or
jp
repnz
dec
lcall
mov
add
pushf
mov
lea
arpl
icebp
dec
daa
mov
pop
sbb
gs
add
mov
lock
add
dec
imul
test
and
push
addl
pop
stos
test
sbb
sbb
repz
in
pop
push
test
xor
stc
dec
xchg
or
pushf
cmc
mov
push
pushf
hlt
rcl
or
popf
jb
das
shlb
inc
in
insl
xor
lahf
cld
ret
mov
mov
pop
js
popf
add
popa
mov
movsl
lods
cli
lods
test
mov
mov
dec
ds
mov
dec
mov
dec
mov
lret
stc
push
test
add
mov
mov
in
sbb
hlt
aas
push
inc
out
and
xor
or
loope
add
aad
insb
rclb
jg
add
xchg
cmp
inc
cmc
test
sbb
movl
cltd
or
xor
dec
out
sbb
and
dec
jno
roll
cmpsb
jb
pop
mov
test
push
pop
test
cld
lret
mov
cmp
fildll
sbb
sti
ljmp
dec
mov
cmp
repz
out
lahf
fistpl
icebp
mov
mov
adc
mov
lcall
imul
dec
lret
and
shll
cltd
fcmovne
out
jg
xchg
cmp
xchg
dec
push
addr16
ljmp
cmp
les
xor
out
jb
insl
sti
fisttps
std
das
xlat
call
lret
xchg
daa
cmp
add
jbe
jecxz
cmpsb
dec
sbb
mov
mov
inc
jns
adc
and
xor
loope
mov
xlat
ja
inc
arpl
pop
outsl
lock
imul
jl
push
sbb
arpl
clc
push
push
decb
bound
mov
adc
clc
arpl
pop
ja
movsl
pop
pop
sub
mov
test
stc
jecxz
enter
mov
js
jl
jb
push
test
jp
jae
jns
xorb
insb
inc
xor
ret
push
outsb
or
test
mov
or
push
xchg
outsl
mov
add
sbb
mov
sbb
push
popa
xchg
jae
mov
cli
sbb
aad
mov
in
and
mov
iret
add
loope
push
stc
mov
jnp
sub
cmpsb
bound
sbb
hlt
xchg
mov
push
in
inc
lea
sub
clc
aaa
jb
daa
jne
dec
push
in
push
out
dec
lret
insl
push
dec
jns
dec
cmp
ljmp
fmull
out
sti
sub
xor
scas
and
arpl
fs
or
test
pop
js
lret
and
cltd
and
pop
sub
ret
and
or
iret
mov
fisttpl
mov
mov
enter
icebp
gs
add
pop
inc
fwait
sbb
arpl
mov
or
gs
or
out
outsb
adc
scas
or
add
test
mov
push
out
add
or
jne
je
js
addb
data16
xchg
sub
lea
sub
in
in
pop
jge
loopne
hlt
mov
hlt
loope
hlt
or
mov
outsl
insl
cld
cmp
test
jns
hlt
adcb
push
jno
mov
ljmp
dec
jmp
mov
jle
dec
icebp
lcall
popf
or
mov
fs
dec
gs
sbb
xchg
add
scas
add
lock
idivl
mov
sbb
mov
or
dec
mov
dec
mov
sub
cltd
dec
mov
popa
push
adc
push
mov
clc
dec
dec
gs
xchg
in
imul
pcmpgtd
pop
xor
mov
out
inc
stc
loopne
repz
sbb
loop
add
inc
out
mov
jle
in
adcb
mov
stc
test
jne
jl
lock
sbb
mov
daa
push
sbb
adc
xchg
or
inc
out
mov
les
dec
push
dec
mov
push
filds
mov
mov
out
pop
fyl2x
scas
in
sbb
push
inc
das
adc
inc
xor
lods
pop
aas
imulb
sbb
add
movsl
pop
in
dec
jb
out
hlt
stc
xchg
repz
add
push
sub
mov
mov
loope
sbb
loopne
sbb
mov
or
jg
push
pop
mov
cmp
testb
scas
shlb
ljmp
sbb
add
rcrb
aam
xor
mov
ficoml
clc
iret
in
faddl
xor
inc
xchg
fwait
mov
in
xlat
add
or
ss
out
iret
aad
xor
es
outsl
sub
ret
mov
mov
pop
ljmp
dec
jl
sbb
jmp
dec
adc
push
das
adc
testl
mov
and
xchg
movl
add
push
jo
ret
jno
pushl
pushf
adc
dec
icebp
pop
mov
fldcw
call
stc
or
xor
mov
lock
test
test
xchg
cli
adcl
mov
repnz
mov
sar
xchg
fnstcw
pushf
or
cmp
call
mov
aad
adc
jae
sbb
in
mov
dec
push
hlt
mov
out
test
xor
test
iret
mov
loope
push
mov
lods
jno
mov
inc
pop
mov
push
std
add
and
leave
enter
dec
inc
leave
enter
inc
inc
leave
enter
inc
mov
jmp
xchg
cmp
mov
fs
xor
test
sub
mov
and
push
jb
xchg
and
out
adc
jb
and
mov
sbb
xchg
mov
addr16
sbb
pop
mov
xor
stc
push
xor
and
scas
test
clc
rcll
mov
std
sbb
dec
cmpsl
adc
je
push
xchg
hlt
dec
adc
xor
pop
cld
decl
pushf
out
test
or
bound
and
jae
jbe
in
stc
orl
repnz
dec
xor
cmp
imull
mov
in
inc
adc
dec
xor
popa
cmc
or
mov
lahf
push
dec
sub
fs
in
insl
or
pop
lret
test
push
sub
mov
notb
aaa
daa
xchg
scas
mov
iret
mov
cmp
push
shl
adcb
adc
xchg
sar
or
add
xchg
mov
xchg
cmp
clc
pop
jg
add
jne
xor
pop
pop
mov
mov
fcomip
call
cli
or
cmp
cmp
test
jg
jbe
cs
pop
xchg
mov
aaa
lock
insl
into
pop
mov
add
loopne
jno
push
sub
jne
das
icebp
and
ja
xor
or
xchg
add
ret
add
pop
scas
aad
popl
or
pop
loop
insl
xor
or
xchg
pop
sub
daa
inc
aaa
jp
jnp
pop
xchg
pop
test
jno
std
cmpsl
sti
daa
or
test
popa
jle
mov
sbb
xor
idiv
jmp
jae
pop
cmpsl
sti
jae
test
dec
insl
push
push
movsl
dec
cli
dec
cmp
sub
jb
cld
insl
sub
test
xchg
xor
mov
shll
jl
jnp
or
inc
cld
stc
ds
inc
je
mov
mov
pop
xchg
push
cmc
add
inc
add
sbb
jns
out
aaa
inc
sub
add
int3
popf
cmp
add
cmp
nop
add
sub
push
nop
dec
inc
sbb
push
cmp
dec
mov
pop
aam
xor
push
shrl
xlat
adc
das
lahf
lods
inc
testb
dec
addb
stc
push
mov
std
std
dec
dec
jle
pop
jg
add
arpl
push
in
push
jne
jmp
mov
test
cmp
dec
adc
lds
xor
sti
dec
fs
adc
shl
loopne
fistl
mov
push
lret
xchg
push
imul
in
dec
or
pop
orb
movsl
std
adc
cmp
inc
neg
push
test
lds
into
rcrb
jle
loope
mov
sbbb
cmp
inc
xor
fs
lret
shll
sbb
xchg
xor
cmp
ljmpw
adc
stos
push
jl
fwait
sbb
loope
adc
xor
inc
idivl
xor
sbbl
adc
aaa
mov
imul
push
mov
sti
sub
dec
sti
adc
fisttpl
icebp
aaa
fwait
pushf
in
xchg
dec
out
je
lahf
fisttpll
dec
dec
imul
outsl
mov
addr16
xchg
inc
mov
mov
cld
pop
ja
pop
std
xchg
ljmp
pop
repz
popf
mov
sub
clc
pop
or
ss
or
jl
cmpl
mov
call
add
mov
out
add
jg
mov
mov
add
sbb
aam
bound
mov
sbb
popa
mov
xor
inc
adc
mov
xchg
jmp
or
lea
ds
xchg
sbb
add
xchg
mov
fcmovnbe
jg
xlat
lds
mov
jmp
cmpsl
inc
sub
dec
jno
pop
mov
stos
or
pop
or
clc
ljmp
mov
xor
jne
pop
mov
jmp
inc
loope
and
push
xchg
push
xor
adc
scas
mov
les
repz
sbb
push
jne
in
xchg
aad
xchg
lret
adc
mov
xchg
insl
in
adc
add
xor
xchg
ja
test
out
cs
push
cmpsl
inc
test
dec
fwait
pop
mov
arpl
int
ja
dec
adc
insl
out
in
in
insl
sbb
call
xlat
inc
icebp
jno
daa
inc
sbb
dec
mov
cli
inc
adc
stos
sbb
in
or
jb
mov
inc
add
xchg
enter
repnz
xchg
pop
jb
or
in
and
cmp
das
or
or
popf
lret
mov
dec
xor
mov
cld
mov
mov
jecxz
xor
cmp
jl
fabs
add
aas
out
in
insl
cmpb
inc
cmp
orl
and
add
repnz
mov
jg
ljmp
subb
lret
push
insl
push
test
std
adc
add
les
fstps
mov
mov
lock
mov
mov
push
imul
xchg
inc
and
rcrl
mov
push
dec
fistl
push
mov
fs
call
paddd
pop
rcll
add
mov
mov
push
add
push
dec
arpl
sti
aam
and
es
ljmp
dec
mov
add
aam
pop
add
inc
mov
not
dec
out
movlps
inc
mov
push
maskmovq
notl
sbb
mov
sti
insl
loopne
jl
jae
loop
ljmp
ds
lds
adc
in
pop
pop
sbb
sbb
das
mov
ret
cmp
xor
rol
inc
adc
or
jle
xlat
fldt
or
call
or
mov
xchg
fstpl
dec
pop
sbb
sub
orl
pop
ret
mov
cmp
pop
ret
xchg
nop
int
sub
pop
call
pop
test
lds
dec
mov
sbb
or
imul
inc
mov
sti
and
je
std
outsb
hlt
or
push
scas
add
dec
or
add
pop
test
je
dec
leave
add
dec
lock
mov
daa
imul
mov
sbb
add
push
sbb
pop
pop
dec
push
adcl
push
sub
loope
sbb
push
insl
cmp
jle
jecxz
clc
mov
or
gs
xchg
and
adcb
xchg
add
inc
xchg
or
movsl
inc
fists
or
mov
mov
les
jno
push
shrb
dec
stc
js
dec
xchg
sbbb
std
addr16
dec
pop
sub
mov
orl
insl
sti
dec
insl
loop
icebp
sub
or
arpl
clc
sub
mov
insb
dec
cmc
jo
outsl
loopne
mov
xor
cmp
pop
jg
pop
fmuls
js
cld
mov
std
pop
inc
pop
loope
decl
or
cmp
in
les
add
fdivs
jae
sub
icebp
shlb
push
jnp
push
push
mov
push
aaa
jp
mov
add
idivb
orb
ja
call
lcall
imul
push
andl
inc
aaa
clc
jo
aas
xor
cs
test
jmp
inc
or
push
addr16
mov
arpl
pop
and
movsl
xchg
sbb
lcall
dec
loopne
lods
dec
divb
ret
stc
addl
incl
testl
jmp
testb
insl
push
fs
popa
arpl
mov
xchg
in
cltd
jno
mov
pop
stos
add
mov
in
or
jae
mov
inc
xor
pop
outsb
cmc
lds
outsl
pushl
data16
and
xor
sbb
add
push
push
in
pop
pop
fs
lods
sti
jno
in
test
pop
add
lods
or
out
add
mov
rcrl
cmp
divb
stos
add
sub
xor
mov
pop
dec
out
mov
xchg
insl
sti
pop
shll
aas
sub
or
mov
xchg
sbb
xchg
aas
lods
push
mov
pop
stc
rorb
add
stc
mov
ja
in
push
das
aad
push
call
mov
cmc
xor
arpl
ret
pop
repnz
lcall
lea
mov
xchg
stos
sbb
pop
lret
adc
xchg
mov
pop
test
xor
out
in
add
push
pop
fs
or
es
fs
out
push
xchg
in
nop
imul
pop
or
rolb
mov
jae
arpl
mov
dec
mov
pusha
sbb
inc
popa
adc
mov
clc
aas
addb
push
sbb
adc
cmc
pop
incb
mov
stos
aas
mov
dec
push
jno
cmc
in
or
addb
push
xor
push
pop
data16
ret
xor
pop
cmc
aas
push
cld
cmpsb
les
cmc
pop
jae
outsl
outsb
and
sub
popa
add
out
in
lcall
dec
xchg
gs
adc
cs
mov
pop
repz
or
fistps
add
outsl
outsb
add
repz
clc
lret
loopne
adc
mov
fdiv
in
add
sub
popa
loop
ficomps
xchg
xor
pop
stc
int
leave
in
aas
mov
mov
pop
sbb
pop
and
insb
jo
or
popl
lret
mov
cs
push
and
pop
test
xor
pop
hlt
adc
cld
add
loop
or
mov
mov
pop
and
xchg
fcomip
lahf
in
repz
pop
stos
mov
sub
cs
mov
bound
xor
pop
icebp
aas
or
outsl
orl
popa
adc
hlt
pop
insl
mov
adc
rcll
ret
sub
jge
add
repnz
jle
add
inc
in
lcall
mov
fcomi
pop
lcall
lock
aad
fwait
lret
out
sar
or
in
push
fstps
inc
insl
cli
pop
icebp
mov
mov
popa
bswap
push
insl
mov
in
add
mov
fcomip
ret
add
pop
inc
mov
push
bsr
daa
jns
pusha
ljmp
mov
push
enter
les
and
mov
mov
inc
insl
mov
add
rep
icebp
psrad
and
cmpb
rorb
out
pushl
sbb
mov
out
sti
xor
rcl
fcmovne
movsl
inc
fstps
mov
out
enter
fs
fcmovu
push
outsl
js
stc
cmc
je
sbb
mov
out
popa
lods
jns
fs
stos
shll
add
mov
inc
cmp
mov
cli
gs
and
inc
xchg
fistps
inc
addr16
push
mov
out
push
mov
pop
xchg
jo
mov
add
cltd
xchg
lods
pop
dec
bound
pop
and
xor
adc
push
pop
bound
pmullw
sbb
pop
or
xchg
imul
or
xor
insb
cld
data16
pop
cmpl
test
imul
add
fs
pop
mov
loopne
jmp
std
imul
arpl
hlt
push
adc
pushf
insl
icebp
or
dec
cli
and
mov
pop
mov
fdivs
test
mov
out
lock
or
out
pop
xor
xor
sub
stc
icebp
inc
mov
mov
shll
dec
jge
fdivrp
subb
hlt
fs
test
push
mov
outsl
rcrb
imul
std
add
mov
mov
outsl
icebp
cmpsb
dec
in
stc
aas
or
lcall
mov
or
pushl
mov
into
and
add
push
add
and
lds
lar
push
push
int3
ljmp
adcb
push
pop
icebp
ss
dec
adc
adc
sbb
jmp
sub
add
sub
in
mov
iret
fmull
out
mov
cli
push
test
orl
push
push
xor
ficoml
add
add
mov
sbb
out
out
adc
faddl
in
cli
je
mov
mov
lahf
mov
push
dec
add
int3
or
jmp
sub
or
sub
add
push
jg
mov
dec
test
in
pop
int
fisttpl
arpl
jns
int3
push
mov
das
icebp
push
dec
test
jno
cmp
hlt
cmp
pop
lods
in
mull
xor
push
or
out
jg
test
mov
incb
orb
mov
jg
mov
sarl
sbb
push
aaa
cmc
imul
loop
and
flds
popa
mov
push
je
mov
add
mov
cmp
data16
test
xchg
loopne
addl
mov
jg
pop
mov
push
cmpb
push
addb
or
ss
jmp
pop
mov
push
mov
mov
pop
test
and
outsb
icebp
test
xchg
inc
sbb
inc
sub
cmp
xchg
xor
cmp
je
out
out
js
jb
pop
mov
pop
mov
repnz
aam
mov
push
dec
insl
or
mov
repz
daa
lret
sbb
je
mov
aas
add
jecxz
xchg
mov
jae
ds
inc
jg
add
sub
pop
jnp
addl
fcomps
test
ja
aam
add
dec
add
aaa
and
int
adc
fwait
test
shll
xor
mov
repz
iret
sarl
rcr
pop
push
mov
rcrl
mov
add
or
shrb
in
lea
xchg
pop
adc
bound
and
and
or
movsl
mov
mov
test
mov
push
bound
icebp
dec
dec
cmpl
push
jno
roll
notl
jmp
mov
andb
push
movsl
mov
pop
mov
push
mov
jle
add
add
sbb
mov
stc
push
dec
imul
das
out
push
and
push
xchg
lret
stc
icebp
xchg
sti
adc
mov
jmp
mov
imul
ret
xchg
pop
cmc
mov
test
push
cld
push
jge
jmp
out
test
stos
push
mov
cmpsl
outsl
jne
mov
mov
mov
fwait
and
ljmp
test
gs
mov
cmp
int3
jbe
cmc
stc
pop
xor
test
add
add
pop
push
in
mov
notl
in
xchg
dec
test
cmp
xor
adc
xchg
out
subb
push
andl
push
loopne
test
add
cmpb
loopne
cli
cmp
mov
pop
cwtl
cmp
je
or
or
cltd
xor
fistl
jle
shrb
add
idiv
adc
in
fsincos
xor
push
pop
dec
add
push
or
fmuls
add
cmc
dec
fstps
cmp
testl
in
sbb
mov
jp
xor
jns
mov
movsb
cmpsl
cmpsl
mov
out
jnp
sub
adc
lahf
xchg
decb
xor
bound
daa
arpl
js
sbb
jg
or
lock
jnp
sbb
cld
cli
jno
out
mov
jg
clc
scas
jp
lea
adcb
adc
and
fildll
inc
mov
mov
or
cmp
fs
sbbb
mov
insl
or
push
inc
dec
adc
dec
mov
cmp
mov
add
mov
jae
push
test
in
js
mov
js
jmp
jp
es
jmp
mov
jnp
and
insb
cmp
xchg
in
add
out
loopne
or
pop
adc
add
mov
push
push
in
aaa
push
mov
js
and
jo
cld
sbb
mulb
and
cmc
imul
outsl
or
aas
incb
dec
add
sbb
leave
cmp
sbb
sbb
cmp
sub
mov
aas
pusha
popf
std
pop
out
cmpb
xchg
andl
add
cmp
fnstenv
sub
jmp
jg
cmp
or
js
shll
cld
or
testl
xchg
ret
test
jmp
or
dec
jnp
lock
outsb
xor
jecxz
ret
add
mov
popa
in
jg
dec
adc
pushl
or
fs
dec
mov
icebp
std
out
adc
inc
ja
testl
xor
std
or
cmpsl
mov
mov
sbb
inc
outsb
cmp
popa
fsubl
and
loopne
push
ljmp
repz
jge
cld
mov
jmp
inc
repz
pushf
loop
push
push
call
fsubl
cltd
in
jno
mov
mov
out
or
push
cmp
imul
or
mov
jne
sub
loop
add
adc
add
push
mov
pop
add
jl
rep
add
popa
jmp
push
jl
std
jno
xor
jb
lcall
push
dec
add
int
or
das
xchg
or
adc
dec
sbb
out
cmc
or
orl
notb
shlb
xor
dec
adc
divb
xchg
clc
xor
insl
pop
push
mov
in
shlb
jnp
clc
insl
or
push
loope
xchg
add
sbb
fsubr
or
sub
or
jo
enter
sub
adc
addb
fdivs
mov
mov
insb
enter
xchg
inc
push
shll
call
fwait
and
push
outsl
dec
mov
mov
jg
pushf
jg
adc
in
jmp
inc
mov
daa
mov
arpl
mov
lds
jl
out
fxam
mov
sahf
jl
stc
std
imul
and
sbb
jmp
jo
and
xor
adc
daa
lret
in
jns
ja
js
jne
js
mov
fdivl
ja
jbe
jns
ss
sub
dec
push
jbe
lds
mov
je
jne
jae
ja
xchg
lret
in
jo
jne
jbe
dec
mov
lcall
jbe
dec
xlat
xor
xorl
inc
cmp
sub
or
jne
rep
in
mov
je
jb
jne
lret
in
cmpsb
js
mov
jnp
je
pop
adc
jnp
out
iret
jl
daa
xchg
lret
cmc
jne
jnp
jns
jle
fbstp
jb
cs
jl
adc
jnp
sbb
adc
jno
shll
vsubpd
mov
add
jl
loope
aad
shll
xor
mov
mov
dec
sahf
cmp
xchg
jnp
cltd
jnp
jb
ja
rcrb
jge
dec
js
xor
mov
add
aas
mov
shrl
mov
and
add
arpl
cmp
xor
add
add
shll
fstpt
jg
adc
sub
fwait
iret
xor
outsl
add
mov
xchg
or
jns
ja
jp
jae
lea
bound
jbe
fnstsw
sbb
jp
xor
cs
lods
jecxz
sbb
es
cwtl
or
idiv
ficoml
add
jecxz
add
inc
push
insl
add
pop
cmp
add
popa
daa
jge
or
inc
xor
cmp
enter
sbb
xor
inc
cmp
insl
push
xchg
das
fisttpl
lods
jo
xchg
jne
lret
lcall
cmpsb
jbe
je
and
xorb
fldenv
in
mov
pop
gs
in
fwait
in
js
sub
jnp
and
xor
daa
and
data16
movsl
pop
jno
fldl
in
jl
rcll
push
in
or
popa
jns
cmpsb
imul
fnstenv
int
sbb
js
aaa
inc
jb
sbb
jne
xlat
jae
jbe
xchg
lret
in
outsl
push
jne
jbe
je
ja
lcall
jg
xor
cmpsb
lahf
nop
je
jg
arpl
xor
pop
adc
sub
xor
imul
mov
jae
ja
mov
in
je
jns
jp
jns
jl
in
imul
jp
jnp
jp
xor
dec
jl
fstpt
jnp
imul
dec
cmpsb
imul
imul
imul
cltd
cmpsb
imul
jno
js
js
xorl
jbe
out
das
aas
setnp
mov
fnsave
insb
shrl
out
jne
push
arpl
ja
add
xor
cmpsb
imul
adc
iret
xor
roll
cs
or
or
jae
js
dec
mov
push
jns
imul
dec
loop
std
inc
bound
imul
insl
popa
dec
outsl
bound
dec
insl
outsb
gs
outsl
in
pop
inc
es
popa
jo
data16
bound
dec
pop
insb
sti
ljmp
pop
aas
xor
cmp
pop
push
imul
jae
inc
jbe
std
outsl
fsubl
insl
inc
je
data16
popa
push
push
bound
outsl
mov
mov
pop
adc
std
push
incl
dec
push
gs
imul
out
sbb
popaw
pop
push
imul
inc
arpl
imul
jg
jg
pop
arpl
jo
sbb
outsb
pop
bound
pop
outsb
pop
outsl
jo
in
fbstp
clc
cmp
jo
inc
pop
insb
popa
fs
icebp
imul
fs
jge
aas
outsb
popa
movl
dec
insl
gs
pusha
arpl
xchg
add
testb
jb
std
inc
cmp
fildl
bound
insl
in
cmp
not
inc
pop
mov
push
cmp
pop
aas
gs
rcrl
mov
lahf
data16
pop
pop
jo
imul
imul
adc
outsl
pop
pop
pusha
aas
jl
push
jbe
lcall
insb
aas
imul
inc
fildl
les
jmp
out
arpl
or
test
insl
inc
data16
imul
iret
ret
jno
dec
pop
jno
cmp
mov
inc
incb
pop
movsb
cmp
pop
insb
jno
xchg
fistpl
aam
xor
gs
repz
stc
out
push
lods
sti
jg
insl
pushf
je
cmp
jae
jo
daa
or
fucomi
aas
cmp
pop
jae
insb
cmp
jbe
mov
pusha
gs
incb
pop
imul
out
inc
gs
push
insl
inc
je
arpl
inc
dec
dec
sub
ds
xor
daa
pusha
push
push
xchg
xor
pop
jne
xorl
fisttps
in
sbb
imul
lods
inc
pusha
ja
insb
jb
push
gs
data16
mov
dec
popa
push
pop
incl
jno
lock
jecxz
adc
add
movb
pop
cmp
outsl
addr16
push
addr16
add
out
push
cmp
mov
popa
iret
adc
aas
pop
adc
mov
shll
sub
jle
insb
mov
add
mov
outsb
dec
push
pop
ljmp
xchg
outsb
dec
gs
inc
push
lcall
fs
xchg
arpl
lods
mov
xchg
xor
or
pop
in
add
push
jo
jmp
sti
pop
and
inc
dec
sub
sub
test
mov
fcoml
pop
std
dec
push
pop
pop
stc
or
cmp
ja
adc
popa
or
fadd
iret
and
arpl
insl
sbb
pop
mov
popa
push
aas
popa
insl
and
jl
push
leave
es
outsb
data16
loope
pop
push
mov
dec
cmp
addr16
inc
inc
inc
cmpsl
popa
mov
dec
sub
bound
jns
insl
push
cli
dec
jmp
dec
pop
inc
push
std
pushf
sub
mov
and
pop
pop
bound
inc
pop
gs
pop
push
movsl
notb
popa
push
sub
shlb
inc
inc
inc
sub
sub
arpl
cmp
push
or
push
cmp
das
das
and
dec
jecxz
dec
xchg
addr16
arpl
outsl
sub
dec
inc
inc
push
cmp
decl
es
push
inc
bound
gs
pop
cmp
outsl
push
sub
mov
std
arpl
inc
popa
insb
insb
sti
xchg
dec
popa
fs
xchg
fdivr
adc
inc
mov
push
and
sbbl
dec
rcrl
insb
pop
popa
mov
jmp
cli
inc
pusha
mov
je
push
jno
inc
jno
mov
sbb
dec
xor
fdivr
ds
insb
imul
aaa
insb
cmp
inc
pop
pusha
cmp
pop
into
pop
push
mov
data16
inc
cmp
fsubl
sbb
cmp
addr16
cld
sub
mov
adc
pusha
insl
sub
fstpt
ss
daa
shll
jb
ja
cmp
cmp
cmp
sub
jge
jg
pop
lahf
insb
cmp
aaa
aas
dec
aas
inc
cmp
repz
test
cmp
pusha
scas
mov
das
arpl
push
pop
pop
xorl
cmp
aas
cmp
push
outsb
adc
adc
cmp
and
push
idivb
inc
outsb
daa
jo
jno
cmp
gs
push
aaa
ss
data16
cmp
push
and
jo
pusha
jae
fcmovnu
or
cmp
push
insl
pop
clc
jbe
jp
pop
cmp
sub
cmp
ds
sbb
push
push
aas
sub
pop
lret
inc
pop
ja
test
and
std
adc
sub
and
push
or
aaa
inc
dec
mov
in
mov
das
adc
push
ja
or
push
mov
adc
aas
lods
jno
mov
popa
cmp
dec
cmp
pop
dec
outsl
mov
sub
cmp
ss
jl
lock
cs
aas
jecxz
outsl
fcmovnb
cmp
xchg
sbb
in
or
pop
jp
xor
out
sub
push
cmp
mov
pop
outsl
push
aad
cmpw
xchg
mov
push
jbe
pop
cmp
xlat
sub
pop
stos
inc
adc
cmp
dec
ds
inc
cmp
push
cli
cmpsb
xchg
sub
pusha
outsb
fcomps
fcmovnu
pop
popa
mov
cmp
push
ja
pop
aaa
sbb
outsb
lea
in
pop
aas
push
pop
lods
bound
pop
sbb
dec
push
cld
dec
rcll
cmp
jg
inc
mov
pop
test
inc
cmp
incl
push
cmp
push
push
jnp
sub
pop
or
push
dec
push
mov
insl
xchg
aas
sbb
insb
pop
add
popa
mov
sbb
inc
jno
imul
dec
jo
cmp
mov
mov
inc
inc
dec
inc
dec
sub
stc
xchg
arpl
mov
imul
xchg
mov
clc
ss
push
mov
loopne
jo
add
leave
ret
outsb
mov
mov
lret
pop
insl
mov
outsl
inc
clc
pop
inc
jne
mov
mov
lods
pop
push
inc
pop
lods
mov
xchg
cli
outsl
or
cmp
aas
mov
pusha
test
fdivs
pop
jecxz
loope
or
blcfill
adc
jbe
mov
jo
xor
pop
fs
test
shlb
outsl
clc
push
bound
dec
dec
or
mov
sub
pop
pop
aas
cmpl
ss
pop
or
clc
sbb
sub
popa
dec
outsl
call
stos
inc
fisttpl
jno
inc
fwait
shrb
aad
jno
pop
data16
int
lahf
inc
adc
lcall
fldt
mov
push
stc
pop
sbb
fldt
mov
lds
mov
pop
clc
ds
popf
jne
sub
inc
or
in
adc
add
lret
gs
aas
jne
mov
pop
jbe
lcall
scas
mov
jmp
lock
hlt
push
xchg
jg
fwait
insl
shll
fsubrp
jge
or
jge
mov
outsb
daa
and
adc
push
neg
xor
add
add
add
sti
ja
mov
std
add
mov
clc
add
outsl
jbe
imul
xor
sbb
pop
aas
dec
loopne
ret
std
jo
adc
das
sub
pop
fsubs
popa
shl
adc
je
gs
test
jno
inc
and
xor
rcrl
pop
mov
jae
cld
inc
das
outsl
dec
ret
and
mov
pop
adc
or
dec
inc
ja
dec
adc
mov
daa
inc
outsl
jno
inc
popa
popf
les
das
ds
loope
cmp
mov
xor
imul
scas
mov
adcl
lea
mov
push
pushl
push
lods
arpl
sub
xchg
mov
jecxz
imul
push
fildll
dec
pop
pop
cld
or
sbb
in
pusha
lahf
push
inc
dec
or
cmp
sbb
lcall
jb
pop
mov
xchg
cltd
insb
pusha
xor
outsl
cmp
inc
xor
or
mov
pop
add
popf
push
inc
or
nopl
fld
and
xchg
jb
adc
imul
jb
daa
dec
shll
fimuls
aaa
or
push
sub
pop
xor
sub
dec
idiv
jl
das
sub
jo
and
push
and
and
sbb
xor
jo
movsl
repnz
enter
mov
xor
cwtl
inc
aas
inc
fstpl
pop
jae
pop
jbe
clc
mov
pop
fwait
aas
stc
std
push
mov
cmp
jo
push
sub
jno
insb
mov
xor
mov
cmp
and
ret
xor
pusha
mov
jne
imul
daa
popf
cmp
mov
aas
cmp
cmp
data16
pop
mov
push
push
insl
clc
ret
addr16
adc
test
cmp
std
mov
xchg
xchg
push
push
and
popa
adc
and
out
or
and
pop
aam
incb
ficomps
sbb
mov
pusha
sub
out
add
xor
inc
ret
rcrl
inc
in
popa
popf
push
testb
mov
jno
cmp
into
fs
insl
jp
push
lea
pop
adc
dec
lea
outsb
xchg
mov
inc
pop
addr16
push
inc
daa
shlb
xor
insb
jnp
inc
dec
sub
dec
das
dec
ss
dec
out
add
jp
outsl
sub
aas
jo
mov
dec
sbb
sub
dec
dec
decb
stos
sbb
adc
sbb
dec
clc
popa
and
push
pop
and
aad
or
js
add
dec
adc
inc
fistpl
divl
inc
push
enter
mov
pop
adc
push
fildl
push
sbb
sbb
pop
jmp
dec
sub
push
ds
jno
sbb
mov
pop
cs
sub
sub
or
ficomps
pop
cld
xorl
arpl
pop
jns
sub
dec
dec
adc
fildll
add
adc
add
adc
or
and
sbb
mov
pop
xor
cs
sti
rcrl
fs
hlt
lods
pop
pop
sub
or
cmp
aaa
ficompl
sbb
inc
push
mov
dec
mov
ljmp
jl
inc
dec
push
sbb
pop
inc
push
push
dec
sub
cmp
pop
arpl
sbb
push
das
repz
and
xor
clc
movsl
arpl
push
ja
cmp
inc
ret
mov
push
or
ss
mov
xchg
jo
pop
sti
cs
jecxz
test
pop
xor
sbb
adc
mov
shrl
outsl
lea
jb
lret
jnp
outsl
jno
ss
leave
ljmp
sub
and
sub
and
sub
pop
jo
pop
pop
xor
jo
xor
push
arpl
test
jno
pop
sub
daa
pop
mov
frstor
pop
popa
cmp
mov
dec
push
es
cmp
out
fst
pop
das
sub
inc
pusha
xor
push
pop
insl
dec
pop
mov
inc
subl
arpl
pop
insb
xorb
xor
test
lret
gs
insb
jne
arpl
pop
pop
mov
or
jb
xor
insb
ja
pop
pop
das
pusha
pop
ja
or
inc
push
pusha
adc
hlt
test
fsubrl
imul
pop
int
es
insb
cmpsl
cmp
arpl
add
das
pop
xor
pop
lret
pop
inc
add
sbb
pop
dec
js
inc
loope
aaa
sbb
pop
cs
mov
lret
cmpl
sub
fisttpl
cmp
pusha
sub
popa
mov
fisubrs
arpl
cs
push
das
sub
fcomps
xor
repz
or
daa
mov
inc
sahf
mov
pop
bound
xor
xor
sub
sub
sbb
mov
sub
bound
testb
pop
xlat
pop
jo
xchg
jae
lret
fstps
xor
mov
outsl
je
sbb
push
mov
cli
aaa
push
scas
imul
sbb
jle
pop
insl
inc
imul
push
pop
ss
push
cmp
test
std
jb
fisubrl
rcll
inc
and
lods
push
mov
jb
jb
iret
pop
inc
sbb
js
dec
imul
fcomps
dec
dec
dec
jecxz
push
inc
jae
sbb
pop
cmc
imul
mov
inc
popa
push
inc
aas
xchg
cmp
fmuls
lea
cmp
je
std
ja
outsb
sbbl
pop
mov
lea
addr16
jge
inc
sub
push
daa
lahf
sbb
pop
pop
popa
dec
invd
cmp
mov
dec
imul
subb
add
je
insb
jae
clc
add
add
aaa
insl
roll
das
outsl
mov
mov
dec
div
aas
xor
test
hlt
repnz
imul
pop
imul
push
insl
push
jne
imul
imul
mov
cli
cmp
push
xchg
aas
mov
jno
dec
cmpsb
or
sub
decl
jge
inc
xchg
ds
inc
inc
inc
inc
dec
dec
inc
dec
dec
dec
dec
dec
push
jmp
push
push
push
xchg
mov
fs
pushaw
insl
inc
shl
movsl
inc
pop
shll
outsb
sbb
stos
sub
ds
pop
lods
pop
aaa
dec
pop
cmp
pop
leave
leave
adc
inc
mov
jnp
and
dec
cmp
push
inc
cmp
aaa
jo
jne
arpl
das
adcl
dec
jno
inc
imul
fstpl
jl
imul
jecxz
push
inc
es
inc
aas
push
sti
inc
out
or
ret
out
mov
add
cmp
ret
or
addr16
jbe
sub
je
decl
push
jb
push
xor
add
dec
fsubrs
lock
push
aas
and
inc
pop
insl
daa
jmp
fiadds
pop
insb
sub
sub
sbb
add
cmp
sub
fildl
jmp
jo
stc
add
mov
data16
loop
ret
mov
dec
push
popa
mov
pop
xor
inc
mov
aaa
arpl
cmp
sub
push
sub
xchg
push
sub
xchg
and
setne
and
push
out
push
cs
mov
mov
inc
in
pop
push
and
adc
popa
popa
callw
or
xchg
jae
pop
sbb
cmp
dec
outsb
push
sbbb
imul
sub
stos
pop
fndisi(8087
inc
outsl
sub
push
mov
pop
push
insb
mov
test
jo
cmp
cli
pop
imul
mov
js
pop
cmp
dec
outsb
jns
test
jno
pop
je
outsb
mov
sub
ja
popf
sub
or
push
or
or
sub
sub
das
mov
imul
sub
sub
scas
sub
sub
loopne
incl
adc
xchg
mov
cs
das
push
jg
pop
insb
cs
das
insb
xor
mov
mov
fidivs
sti
sub
xor
fcmovnbe
es
pop
sbb
jb
xorb
sub
xor
xor
sub
add
lock
xor
xor
xor
cmc
xor
sub
jg
hlt
outsl
aam
xor
cmp
sub
shrl
jmp
or
xor
xor
das
inc
cs
dec
xor
sub
jl
xchg
xor
push
ljmp
popf
xor
xor
das
xor
xor
add
inc
xor
lcall
xor
xor
mov
ss
aaa
and
cmp
pop
call
sub
mov
je
xorb
xchg
cmp
xor
cmp
cli
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
xor
cmp
cmp
pop
cmp
pop
inc
jge
scas
cmp
cmp
cmp
cmp
sbb
pop
out
ss
cmp
pop
cmp
cmc
incl
cmp
cmpsb
cmp
cmp
ss
or
ds
cmp
sbb
jnp,pt
lock
cs
sub
sub
push
cs
xor
das
aad
out
xor
xor
sub
xor
call
xor
xor
xor
cs
xor
xor
into
xor
cmp
ss
xchg
das
imul
scas
xor
ljmp
xor
popf
xor
ret
xor
xor
xor
and
cmp
pop
clc
mov
xchg
aaa
mov
jbe
xchg
xor
cmp
insb
xor
aaa
sti
mov
into
cmp
xor
aaa
out
out
out
cmp
xor
cmp
push
cmp
loope
lcall
jmp
cmp
cmp
cmp
cmp
xor
cmp
cmp
xor
adc
and
xor
cmp
cmp
mov
sbb
das
cld
or
dec
ds
add
fdivrl
add
imul
outsb
rorb
sub
sub
clc
mov
das
push
lret
sub
sub
sub
movaps
fistpll
jp
test
scas
das
mov
cs
add
jg
ljmp
or
or
sub
sub
xor
push
cs
mov
sbb
insl
xor
popf
sub
adc
dec
sub
push
dec
xor
das
out
xor
xor
jns
jle
nop
xor
sub
decl
pop
xor
xor
xor
sub
jg
or
xor
js
call
incl
xor
xor
add
cmpsb
ss
inc
ljmp
cwtl
push
int3
gs
xchg
cmp
pushl
or
repz
cmp
cmp
mov
xor
mov
test
cmp
cmp
xor
cmp
popa
aad
fidivs
cmp
ret
inc
cmp
cmp
cmp
xor
scas
cmp
cmp
cmp
cmp
cmp
arpl
jb
test
mov
mov
cmp
cmp
in
cmp
aaa
xor
push
cmp
lea
aaa
mov
cmp
aas
push
stc
add
call
sub
sub
mov
sub
aaa
dec
std
cs
sub
sub
pop
sub
push
mov
fwait
sub
xor
das
hlt
sub
and
and
xor
mov
bound
jg
xchg
xchg
sub
xor
xchg
sub
or
insb
pop
sbb
jnp
pushl
lahf
xor
xor
xor
xor
sub
xor
xor
clc
mov
mov
mov
xor
xor
xor
shlb
and
ss
xor
pop
mov
jg
xor
add
das
cmp
fists
xor
cmp
mov
xchg
aas
xor
cmp
cmp
movsl
lcall
aam
fdivrl
loop
ljmp
popf
cmp
cmp
clc
pop
push
mov
cmp
sbb
daa
cmp
scas
outsl
out
jne
ss
cmp
int
jmp
fcmovnu
outsl
test
push
xor
aaa
test
xor
shll
xor
cli
call
xor
in
aaa
xor
ss
cmp
xor
jmp
aaa
mov
sahf
cmp
xor
ss
sbb
imul
jg
inc
cmp
data16
outsb
cmpsl
repz
xchg
lcall
xor
aaa
enter
in
cmp
xor
cmp
cmp
and
scas
in
cmpl
cmp
xor
cmp
aaa
sbb
daa
xor
adc
cmp
repz
push
cmp
push
xor
xchg
cmp
cmp
cmp
cmp
pusha
cmp
insb
cmp
mov
lahf
cmp
ret
mov
ss
repz
repnz
daa
cmp
sbb
es
or
call
negl
pushf
int3
add
adc
stos
and
das
push
push
stos
push
stos
imull
cld
ffreep
xor
lahf
pop
das
pop
xor
lea
movsl
cs
lret
xor
xor
sub
stos
ljmp
out
addr16
xor
insl
das
jl
xchg
xor
mov
decb
mov
or
mov
mov
push
inc
and
fwait
jnp
das
or
outsb
je
insb
imul
lret
add
dec
pop
rcpps
ljmp
je
popa
jb
pop
dec
imul
push
imul
fstpt
mov
sub
dec
outsl
push
outsl
popa
insl
sbb
arpl
add
mov
add
mov
adc
popa
dec
add
and
and
jo
xchg
aas
divb
arpl
arpl
imul
jae
insl
sti
jbe
cmp
bound
fcomip
sub
ss
andb
mov
mov
fmull
jns
or
sti
fldt
and
inc
jo
adc
push
jb
jns
sti
xor
xor
sub
push
gs
add
mov
push
aas
jb
outsb
cmp
std
and
outsl
outsb
imul
jae
jbe
ret
jae
pop
xor
sbb
adc
in
in
push
push
jg
bound
jo
fcomp
fistpll
inc
gs
popa
push
ds
pop
inc
js
adc
mov
jns
push
push
adc
jns
dec
jmp
adc
fs
imul
insb
andl
jne
dec
inc
inc
jne
pop
loope
push
jne
push
sbb
inc
leave
mov
je
dec
lods
inc
cvtdq2ps
add
cmovno
jne
or
imul
xchg
inc
push
or
dec
pcmpeqw
sbb
dec
jae
xor
in
mov
lds
movd
in
testb
xchg
push
or
insl
jbe
inc
jmp
neg
mov
and
fs
daa
push
sti
mov
adc
insb
sti
imul
dec
push
imul
pop
insb
adcl
add
or
icebp
filds
cmp
jae
inc
add
jae
xor
popa
hlt
aaa
add
aaa
push
icebp
adc
add
xor
cmp
xor
adc
cmp
divl
test
fsubrs
fucomi
outsl
adc
out
ja
outsl
add
js
lahf
xchg
dec
mov
add
adc
popf
call
lcall
pusha
inc
repz
cld
mov
in
or
outsb
adc
popa
in
cmp
popa
insl
negl
cli
imul
push
lock
or
push
or
push
lahf
xor
sbb
add
and
add
mov
scas
xchg
add
jle
test
mov
pushl
jl
es
inc
cmp
push
inc
inc
out
sub
dec
and
push
imul
jmp
mov
adc
jns
cmc
mov
loop
sldt
sub
dec
cmpl
cmpsb
xor
sub
push
ljmp
test
dec
gs
mov
add
and
pop
push
fdivr
adcl
adc
inc
mov
add
xchg
push
or
nop
inc
call
push
push
and
test
add
inc
popa
or
xchg
pop
add
incl
rolb
nop
add
add
sub
xchg
das
sub
cltd
shlb
jns
add
repz
add
add
add
add
imul
jg
sub
pop
sti
call
add
mov
add
add
push
add
jb
jbe
sub
add
adc
inc
add
adc
cld
mov
popa
je
inc
imul
outsb
addr16
or
sti
in
std
push
imul
inc
insb
jne
push
in
push
outsb
insl
and
je
push
imul
sbb
add
outsl
jae
dec
popa
outsb
fs
mov
shrb
bound
jae
outsl
jbe
out
arpl
and
jo
dec
popa
insl
inc
xlat
outsb
leave
fiaddl
push
sbb
test
dec
mulb
push
jb
arpl
outsb
or
call
fs
outsl
dec
push
pop
jae
or
outsl
adc
mov
jb
xchg
mov
insb
fistl
adc
inc
mov
xchg
int
jl
push
inc
js
arpl
jnp
popa
daa
push
xchg
jae
outsl
outsb
mov
mov
fsubs
dec
outsl
popa
fs
out
jg
mov
mov
jns
fldl
je
adc
push
mov
mov
gs
outsl
outsl
insb
pop
mov
adcb
xor
jo
outsl
je
adc
int
in
and
push
xor
inc
fisubs
aaa
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
mov
mov
decl
or
and
mov
add
mov
jp
call
mov
sti
mulb
add
inc
push
sbb
ljmp
or
repz
inc
sub
push
push
jns
aaa
xor
out
dec
out
ud0
inc
xchg
xchg
sbb
mov
or
lcall
fisttpl
xchg
lock
push
or
icebp
adc
add
sub
bound
push
test
insl
add
push
push
add
out
movsl
dec
mov
fstpt
adc
or
mov
lret
mov
andl
sar
or
out
sub
inc
das
dec
or
aam
fsubs
repnz
pop
ret
mov
jo
gs
imul
je
push
pop
push
pmaxub
je
wbinvd
pop
insw
add
xchg
or
fsubrs
sub
and
push
push
fwait
addb
in
or
arpl
divb
arpl
pop
arpl
je
xorb
push
xchg
or
insb
or
mov
arpl
out
pop
cmp
jb
jbe
push
sbb
outsb
arpl
lods
jecxz
sub
js
inc
jb
dec
aam
das
outsl
frstor
jo
outsb
je
je
insl
mov
mull
pop
push
jae
sbb
call
and
rcrb
pop
shll
dec
sbb
jo
or
inc
xor
jne
xchg
push
sbb
sbb
cmp
dec
fs
or
ret
jge
dec
adc
nop
pop
fdivrl
mov
shlb
es
insb
fisttpll
inc
mov
or
add
jmp
add
sbb
pop
ja
loopne
sidtl
add
add
ss
mov
adc
adc
add
mov
cmp
add
xor
sbb
add
adc
mov
dec
ss
aaa
dec
inc
lea
jnp
and
or
mov
sub
add
ss
push
and
in
das
pusha
jb,pn
popa
je
mov
insb
push
cs
rcrl
pop
daa
rorb
pop
arpl
or
repz
xorb
rolb
add
mov
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
