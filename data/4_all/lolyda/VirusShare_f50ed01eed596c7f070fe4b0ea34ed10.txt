daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
sbb
cmp
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
lods
into
mov
mov
or
shl
add
inc
mov
mov
shrl
stc
lea
mov
push
arpl
clc
shr
rep
pop
push
and
mov
movsb
dec
int
mov
and
pop
push
push
lea
fnsave
sbb
mov
mov
fstpt
jno
inc
lret
sbb
push
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
xor
addr16
xchg
pop
testl
mov
das
jnp
lea
pop
cmpsl
gs
mov
popa
xorl
sub
out
jp
push
imul
outsb
mov
mov
inc
mov
push
jo
fcomp
mov
pop
test
cmpb
jne
adc
sub
adc
fstl
ret
int
pushf
push
pop
mov
push
push
sbb
push
lods
fldcw
push
leave
push
sub
adc
ja
mov
push
ss
mov
and
pop
enter
clc
into
adc
push
test
or
push
sbb
and
test
js
out
lea
mov
add
or
push
dec
inc
jecxz
jae
rorb
add
push
jne
jecxz
adcl
mov
aaa
adc
fsubrl
ret
subl
push
add
adc
pop
mulb
pop
cmpb
push
xor
shl
repz
add
sbb
lret
ret
or
mov
mov
jbe
aaa
shlb
psllq
out
outsb
or
and
push
or
rcr
out
sub
or
push
mov
push
push
or
push
xor
inc
inc
cmp
ret
int3
and
jae
adc
sub
inc
lock
adc
dec
mul
push
inc
sbb
aad
cmp
add
mov
xchg
add
inc
incl
lea
jl
sbb
push
push
or
int3
push
xor
fiaddl
push
mov
jbe
cmp
pop
push
adc
sbb
mov
cwtl
loop
outsl
loopne
pop
push
dec
pop
push
push
cmp
jo
cmp
add
sbb
es
jns
mov
cmp
jmp
mov
push
push
or
ja
adc
dec
lret
add
cmc
out
add
or
push
lret
jb
sub
adc
sub
outsl
jae
cmp
jp
mov
or
or
scas
jae
cmp
mov
in
lods
fnstenv
ret
mulb
adc
push
cmpsb
jae
xor
xor
mov
xchg
push
push
xor
pop
int3
xchg
aad
mov
push
push
sub
cmp
sahf
mov
iret
xchg
pusha
ljmp
adc
adc
adc
in
sbb
dec
mov
lea
pushf
push
mov
rcl
xchg
sbb
mov
dec
lret
xor
aas
add
mov
cli
mov
lods
cmp
lret
cltd
iret
inc
orl
fldt
mov
cmp
jne
test
jle
push
dec
jns
inc
outsl
jae
add
push
cld
xchg
and
das
in
add
out
or
jmp
aaa
in
add
mov
nop
mov
mov
lea
test
aas
iret
mov
sbb
sub
out
mov
cmp
pop
call
lret
pop
shl
jo
mov
ja
mov
pop
cmp
int
jb
jb,pt
clc
sub
sub
bound
or
jnp
xor
shrl
push
adc
mov
lret
or
sbb
push
push
xor
or
aaa
xor
pop
mov
repnz
je
sub
mov
adc
push
cmp
and
call
push
push
push
lea
push
mov
loopne
gs
mov
insl
fcomps
jmp
mov
push
xchg
in
push
and
inc
stos
aad
push
or
xchg
adc
jle
mov
inc
fsubs
cs
iret
imul
xor
inc
push
and
sbbw
or
lea
sbb
inc
lret
lea
mov
xor
and
test
and
mov
lret
xchg
mov
test
rclb
sbb
xchg
and
stos
dec
sbb
inc
ljmp
dec
inc
push
jmp
push
or
lea
jo
pop
adc
fisttpl
mov
out
add
sbb
pop
adc
add
lock
fisttpl
sbb
mov
xchg
test
inc
pop
mov
sub
scas
jno
inc
icebp
xlat
push
push
pop
push
mov
xor
push
and
jl
ror
fstl
sub
adc
add
push
or
add
ret
outsb
or
add
cltd
js
cmp
sub
or
mov
lret
add
pop
test
sub
in
sbb
mov
or
push
cmp
push
add
and
jbe
insb
xor
xorb
orl
inc
imul
insl
jmp
fistl
mov
or
or
xchg
xor
push
or
cmpsb
jmp
mov
inc
ficomps
sbb
aaa
sbb
mov
xor
or
push
data16
mov
scas
lds
mov
cmpl
mov
cmovbe
loopne
js
jb
xor
inc
ret
and
dec
mov
and
movl
scas
xor
roll
jmp
pop
mov
jmp
mov
or
mov
iret
xor
sbb
or
cmp
push
push
adc
aas
xor
inc
pusha
test
sahf
mov
dec
fs
and
paddusb
sub
pop
test
pusha
pop
les
or
aaa
xorl
jp
fs
push
adcl
lock
fisubrs
mov
pop
pushw
sub
inc
dec
roll
mov
sbb
xchg
push
cmp
into
mov
cmp
pusha
push
movl
sbb
pop
add
in
jle
mov
fwait
clc
push
insb
push
mov
pushf
sbb
les
or
popa
arpl
xchg
aad
pop
gs
in
sbb
xor
and
adc
or
jmp
xchg
sti
cmp
aad
inc
pop
inc
data16
pop
xor
mulb
scas
js
pop
fstpt
jmp
dec
or
imul
add
aad
add
add
and
xor
adc
pop
and
and
loop
lock
or
notl
pop
dec
hlt
negb
xchg
and
push
pop
mov
fs
enter
gs
xchg
mov
dec
mov
pushf
es
ljmp
push
cmp
lea
adc
dec
add
aas
mov
mov
dec
inc
adc
add
mov
pusha
js
fs
add
sub
notl
xor
cmpl
fsub
sub
pusha
jecxz
lock
out
out
call
jne
cmpl
push
sbb
jne
mov
mov
popa
sub
mov
adc
inc
or
inc
push
add
push
push
push
and
mov
sbb
fildll
test
outsb
lret
and
sbb
push
sbb
xchg
in
push
fdiv
clc
dec
or
loope
hlt
jmp
and
jle
adc
shrl
inc
cltd
sub
lods
push
sti
ss
clc
out
sbb
pop
adc
cltd
lods
sbb
push
xor
jnp
imul
mov
or
dec
adc
pusha
ret
pandn
invlpg
mov
rolb
aaa
nop
mov
mov
mov
dec
push
cmpsl
dec
mov
and
cwtl
fs
push
xchg
or
push
push
cmpsb
dec
cld
imul
fsubr
lea
dec
cmp
pushf
and
push
cwtl
and
jmp
popa
push
cld
pop
ss
mov
inc
inc
dec
sahf
out
dec
out
dec
mov
inc
test
nop
addr16
cmp
sbb
leave
aaa
push
bnd
inc
push
and
and
or
cmp
sbb
inc
leave
xor
xor
add
adc
repnz
or
pop
xor
imul
lock
repnz
dec
xor
add
scas
enter
inc
insb
mov
push
lock
jnp
add
push
add
cwtl
outsb
inc
dec
js
or
jl
into
pop
out
movsl
jge
sub
inc
cmp
pusha
ret
push
add
flds
inc
cli
hlt
inc
mov
pushf
jo
jo
cmp
dec
and
les
stc
dec
sbb
mov
adc
mov
pop
sub
pop
add
lods
js
cli
bound
jl
call
lods
dec
and
pusha
jb
jp
mov
pusha
jne
ret
lcall
add
inc
and
and
inc
out
sbb
add
cmp
mov
push
push
sbb
add
and
xor
fxch
adc
arpl
sub
testl
mov
in
sbb
mov
xor
inc
fwait
add
push
adc
outsl
push
mov
mov
adc
jnp
lods
cmp
out
add
repz
xor
insb
out
sub
mov
jle
jne
xchg
mov
push
or
test
sub
das
inc
xlat
jno
fs
ficoml
add
cmp
sar
xchg
sbb
adc
push
cmp
out
or
mov
add
sahf
jecxz
outsb
mov
mov
sub
cmp
push
push
ret
pop
insb
jo
push
and
mov
adcb
or
sbb
fidivrl
rcrb
cmp
lock
push
lock
push
push
sbb
aad
adc
call
fwait
je
jmp
add
pop
pop
dec
popf
add
xor
add
mov
sbb
add
mov
cltd
idiv
mov
mov
add
mov
cmp
jb
or
jmp
pop
mov
in
cmp
jg
arpl
mov
add
jmp
fs
enter
fs
mov
test
fs
fs
mov
cmpb
fs
push
fs
pop
pop
push
fs
dec
inc
inc
fs
xor
fs
and
fs
adc
fs
add
jle
enter
clc
xchg
sub
inc
enter
mov
inc
test
enter
mov
enter
movsb
enter
test
mov
xchg
xchg
xchg
out
inc
mov
xchg
xchg
int3
rcl
add
and
in
in
add
in
cmc
test
push
pop
sub
adc
les
adc
push
cmc
aad
cmp
sbb
ret
and
jo
addr16
dec
ret
push
xor
add
pop
pusha
and
xorl
push
iret
out
cli
xor
mov
ljmp
inc
orl
push
in
adc
inc
jmp
fisttpl
or
or
jg
sbbl
sbb
out
mov
cld
sbb
adc
in
out
iret
jne
adc
mov
lea
mov
test
push
add
mov
xor
jg
or
loopne
mov
cmpb
jne
inc
inc
mov
push
cmp
je
cmp
repnz
jbe
aam
dec
movsb
cld
inc
lahf
mov
hlt
testb
in
movzwl
jmp
sub
jbe
jmp
pop
ja
jmp
or
push
test
aam
xlat
insl
xchg
cwtl
xor
inc
in
mov
mov
mov
push
or
jg
and
pop
mov
lds
int3
inc
xchg
add
lea
add
das
and
out
out
inc
call
daa
inc
lahf
mov
cld
or
and
xor
xlat
and
mov
clc
jne
push
adc
enter
insl
fsubr
xor
mov
cmp
mov
inc
lea
cmp
cmp
paddusb
scas
int3
add
dec
lock
stc
enter
mov
testb
and
add
shrl
mov
jl
dec
shll
pop
aam
dec
xor
mov
lock
adc
xor
fwait
rorl
dec
ljmp
shll
inc
push
bound
dec
jb
scas
sahf
cs
add
push
add
adc
pop
or
mov
or
sbb
movsl
leave
adc
mov
push
lea
or
in
imul
inc
add
mov
mov
ss
jp
nop
xor
adc
add
jmp
insl
sbb
comiss
repz
sub
pop
sub
adc
aaa
inc
out
mov
out
movhps
xlat
mov
pop
sbb
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
jne
shll
orl
test
pop
mov
mov
xlat
cltd
pop
cmpsb
pop
push
push
addr16
mov
xlat
xor
mov
adc
scas
imul
adcl
push
rcl
jne
fsqrt
or
jge
pop
dec
mov
fnstenvs
dec
loop
cmpsb
imul
mov
orb
bound
dec
imul
negl
adc
fmull
cmpsb
imul
scas
jmp
in
clc
add
test
out
mov
adc
in
into
sahf
push
inc
loope
or
jbe
inc
mov
das
sbb
add
adc
sub
data16
inc
das
cmp
dec
xlat
xor
xor
and
sub
sbb
dec
shll
adc
or
add
cs
scas
pop
hlt
out
pop
call
xor
xlat
faddl
ror
les
xor
mov
mov
lcall
sbb
jl
and
inc
pop
mov
push
pop
mov
add
cs
adc
and
str
xchg
nop
and
pop
pop
and
nop
and
adc
xor
and
aas
adc
push
or
sub
add
das
div
ljmp
fcoms
rcrb
aaa
xor
mov
stos
mov
int3
das
mov
shll
mov
dec
xchg
nop
mov
xor
xlat
mov
and
inc
sub
xchg
xor
frndint
and
inc
das
rcrb
push
jae
daa
lock
push
enter
add
sbb
stos
push
repnz
push
pop
dec
sub
andb
dec
and
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
into
xor
adc
sti
decl
xor
fs
insb
add
push
inc
push
or
push
push
xor
adc
ds
inc
push
sbb
inc
push
jo
aas
mov
inc
push
mov
std
stc
cli
cld
idiv
std
add
cli
sti
or
clc
cmp
stc
sti
decl
sbb
or
mov
pop
mov
dec
sbb
jmp
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
dec
dec
sbb
pusha
pop
cli
imul
daa
pop
push
sbb
inc
inc
xchg
lock
jmp
sbb
ret
daa
repnz
outsl
cs
ljmp
repz
jmp
sbb
cwtl
xor
xchg
das
and
in
ja
cmp
out
shll
jl
and
dec
push
adc
dec
adc
dec
pop
in
cmp
mov
inc
cld
add
adc
leave
dec
flds
add
push
sahf
push
pop
sarb
jne
or
or
or
mov
in
sti
sti
pop
lcall
add
adc
ss
or
push
or
or
cltd
jp
cld
daa
jno
ret
leave
xlat
or
add
or
and
scas
sub
jb
arpl
pop
movsb
add
pop
sub
pop
outsl
pop
pop
shlb
push
aaa
int
repnz
cmp
popa
pop
outsb
pop
cld
jne
mov
in
fistl
pushw
push
push
ja
cmp
or
mov
jnp
add
dec
xchg
xchg
inc
push
std
or
jg
incl
add
dec
dec
stc
adc
sbb
cmc
decl
cmp
idiv
push
jmp
arpl
aaa
arpl
cli
mov
dec
cli
adc
pusha
sbb
pop
outsl
outsl
jg
dec
add
pop
cmpb
or
pop
mov
and
jecxz
jge
idiv
sti
idiv
push
bound
xor
out
mov
pop
movsl
movsl
mov
cli
cs
test
inc
pop
test
dec
mov
pop
xor
dec
clc
maxps
cmpl
or
mov
jb
outsl
adc
mov
mov
shrb
pop
adc
arpl
testl
imulb
pop
mov
cli
adc
rorl
mov
div
ret
jno
xor
dec
push
push
adc
outsb
inc
jl
out
xchg
loop
xlat
mov
mov
arpl
jg
das
nop
out
mov
cld
cld
insb
das
mov
mov
sbbb
mov
sub
jbe
test
mov
mov
movsl
mov
test
dec
push
xorb
arpl
jae
loop
lret
cmp
dec
pusha
mov
jge
mov
dec
std
cmpb
cmp
outsl
push
sbbl
bound
mov
jg
andb
pushl
pop
cmpsb
test
test
notl
dec
push
test
pop
ss
dec
adc
push
xor
adc
inc
sti
mov
adc
jae
mov
loope
out
mov
loop
stc
test
mov
inc
push
or
push
insb
push
mov
jle
test
cld
popa
xchg
sub
cmpsl
dec
or
pop
ljmp
mov
inc
mov
cli
pop
dec
in
cmp
cld
mov
insl
mul
mov
loope
std
ja
jnp
xchg
outsl
mov
push
out
sti
xchg
jl
pushl
jnp
jle
push
jo
xor
call
jg
dec
jge
iret
pusha
xchg
imul
cmp
in
sbb
idiv
pop
inc
cli
cmp
adc
inc
hlt
or
sbb
jnp
dec
xlat
ds
mov
dec
push
jecxz
mov
xor
adc
fildll
mov
dec
xchg
shl
lods
test
inc
call
jg
jb
lahf
dec
dec
cld
push
dec
insb
stc
jle
add
shlb
ret
gs
outsl
fwait
pop
fidivrs
mov
inc
stc
jecxz
ud0
in
aaa
push
xor
ja
mov
dec
push
in
das
cld
pop
jno
cmpl
fildl
mov
mov
loopne
dec
push
pop
sti
or
or
addr16
inc
lods
lcall
rorl
or
or
popa
dec
and
pop
push
push
mov
dec
push
dec
addb
inc
stc
push
sub
data16
pop
rorl
mov
stc
pop
loop
dec
test
push
cmp
gs
mov
notl
cwtl
imul
sub
es
push
sbb
xor
mov
dec
xchg
addl
pop
sarl
jecxz
hlt
repz
dec
dec
popa
cmp
mov
loope
ret
testl
or
push
adcb
jnp
loopne
or
adc
dec
mov
jecxz
add
lds
cli
call
gs
sbbl
sbb
in
mov
sti
pop
jg
adc
and
cmp
xchg
ret
sbb
xchg
inc
cmc
jmp
push
pop
mov
or
push
jp
xchg
popf
jo
outsb
sbb
push
add
testb
divl
inc
mov
dec
cli
jno
arpl
call
lock
push
sarl
fdivr
jle
pop
dec
push
dec
dec
dec
push
iret
push
xor
xor
jns
test
push
jg
out
gs
add
sub
in
jo
outsl
dec
fwait
insl
gs
sub
lahf
mov
shll
and
rol
lret
testb
icebp
inc
xchg
cmp
in
fbstp
mov
not
push
dec
test
dec
test
mov
or
or
pop
mov
inc
testb
add
jg
mov
inc
or
aaa
mov
test
add
or
mov
out
arpl
add
pop
in
outsl
jl
dec
xor
pop
daa
insl
pop
jecxz
and
dec
xchg
loope
and
repnz
pop
pop
push
daa
dec
dec
dec
mov
push
mulw
insb
mov
sub
cli
push
addr16
fs
pop
fwait
jg
jl
in
sti
fbstp
or
or
in
in
in
add
cmpb
in
test
and
loop
add
lahf
xchg
xchg
ja
icebp
ja
scas
or
adc
rcrl
dec
pop
xorl
clc
sbb
pop
aaa
notl
icebp
cmp
and
push
sbb
jg
cmp
repnz
sub
in
push
sbb
fwait
sarl
xchg
add
add
aaa
mov
loope
add
pushf
lcall
xorl
int
pushf
add
pop
pop
sarb
dec
sbb
pop
jno
cld
outsb
test
jnp
cld
mov
arpl
push
pusha
cmp
addr16
adc
mov
loop
sbb
enter
inc
jnp
fldenv
arpl
test
jecxz
sbb
mov
or
cli
xor
enter
adc
gs
lea
mov
add
in
test
je
arpl
mov
test
sbb
insl
pop
les
push
dec
cmpsl
and
cmpsb
xchg
cs
push
sub
mov
gs
fisttpll
mov
test
xchg
lods
dec
push
pop
or
push
sub
mov
push
ljmp
push
lahf
or
insb
clc
into
insl
add
mov
push
pop
rorl
das
pop
xchg
adc
testl
cmpb
pop
push
push
add
add
jno
inc
push
mov
push
add
leave
adc
xor
dec
dec
ficomps
incl
sub
or
mov
jmp
sbb
push
loopne
xlat
dec
ret
ficompl
addr16
mov
pop
sbb
mov
ss
jg
in
push
dec
xchg
add
sbb
cli
sbb
sbbb
add
sub
mov
xchg
sbb
jmp
daa
les
inc
jg
pop
cld
pop
pop
test
leave
sarb
mov
in
repnz
jecxz
jmp
or
jecxz
push
sub
test
imulb
mov
jecxz
inc
sbb
jge
insl
call
cmp
cmp
bnd
cmp
jp
jnp
outsb
or
filds
pop
inc
incl
loopne
inc
pushf
mov
jno
mov
dec
in
inc
push
test
inc
add
in
xchg
out
jg
jae
out
jle
jo
popa
cld
pop
jecxz
xor
or
iret
mov
jo
popa
pop
mov
std
negb
orb
inc
jmp
add
add
ss
push
insl
orb
push
ficomps
aad
mov
call
inc
arpl
dec
gs
or
fwait
ds
pop
or
cmp
stc
pop
or
xchg
lret
in
fmuls
aaa
push
ret
jge
or
inc
mov
or
add
adc
dec
int
push
pop
push
xor
loope
pop
jbe
xchg
stc
aas
cld
gs
std
inc
pop
jmp
popl
out
mov
sub
arpl
adc
cmp
fisttpll
popf
imul
mul
or
mov
insb
inc
and
or
insl
mov
pop
aaa
xchg
mov
idivb
je
fs
fwait
lods
pop
setae
fsubp
frstor
adc
jbe
adc
out
loopne
add
out
add
cmp
punpcklbw
adc
and
dec
mov
mov
xor
ud2
fbld
push
pop
and
mov
adc
icebp
and
jmp
sti
in
or
jl
mov
adc
test
jg
inc
push
jne
cld
jge
cmc
sti
jl
idiv
push
push
addr16
das
lock
das
hlt
popa
add
xchg
mov
inc
add
imull
inc
repz
jecxz
xchg
sbb
mov
popf
addl
int
add
inc
roll
les
pop
outsb
xor
jg
mov
cmp
std
add
jnp
cmpb
ja
adc
cli
jnp
lock
in
jbe
or
ret
xor
addl
nop
lret
in
jl
jge
push
aas
add
loope
mov
pop
mov
arpl
or
cs
mov
inc
hlt
lock
pop
gs
xchg
in
repnz
lret
xor
sahf
xchg
xchg
jns
mov
ja
imul
or
popa
push
mov
xor
cmp
data16
repz
add
lret
out
call
sahf
xchg
decb
pop
lock
jb
in
sbb
insb
cmpl
ret
dec
out
xor
pop
pop
jo
xchg
incb
push
std
mov
pop
xchg
mov
cld
aaa
xchg
inc
out
dec
push
mov
test
bound
jbe
lods
jg
cld
xchg
addl
inc
stc
jecxz
jecxz
cs
xlat
or
lcall
inc
orl
pop
fsubrs
shll
or
ficompl
loopne
xor
mov
pop
in
inc
or
jge
mov
sub
outsl
cmp
cltd
out
sub
xchg
pop
outsl
icebp
ljmp
dec
xchg
jp
cs
adc
push
mov
lea
test
adc
mov
dec
push
add
insb
mov
mov
test
push
std
std
dec
xlat
out
xchg
or
in
add
jb
adc
cli
jae
mov
popa
cmp
inc
add
iret
dec
out
ret
lret
mov
pop
mov
mov
mov
add
push
addb
lret
std
ret
sar
mov
xor
fstpt
leave
and
sub
addl
idivb
cmp
push
or
stc
shr
repz
jmp
ljmp
mov
out
sub
add
cmp
shll
cld
cltd
mov
add
cmpl
inc
sub
xchg
mov
das
lock
es
loope
stos
push
push
pop
push
push
mov
imul
call
in
dec
mov
jns
pop
jg
ljmp
dec
jl
outsb
add
popa
add
adcl
jmp
in
dec
decl
dec
test
loop
popf
mov
xor
add
push
fsubr
pop
insb
adc
icebp
add
pop
inc
mov
ds
fisttpl
lahf
xchg
xchg
push
inc
xchg
mov
dec
pop
std
popf
jecxz
pop
fcmovbe
imul
test
aaa
xchg
jp
sti
out
and
jle
movsb
adc
shrb
cmp
xchg
divb
lahf
in
imulb
cmp
sti
pop
stc
sarb
xchg
jle
loop
jo
rcr
ret
cmp
pop
bound
or
or
icebp
push
or
jecxz
ds
push
or
push
ret
mov
in
dec
movsl
xchg
push
mov
testl
aam
sti
or
jae
outsl
xor
xchg
fsub
mov
addr16
outsl
cmpsl
jno
pusha
out
mov
jno
xchg
dec
and
add
adc
repz
aam
sti
push
in
or
xlat
dec
mov
daa
dec
xor
adc
adc
inc
sbbb
add
jmp
dec
ljmp
pop
test
lahf
fcomip
fbld
icebp
sub
test
std
xor
jb
add
aaa
sbb
icebp
in
xorl
ss
or
outsb
incb
mov
in
das
mov
pop
mov
push
sbb
xor
popa
jge
dec
pop
insl
or
cmp
dec
cmp
lret
inc
popa
add
sub
lock
lock
cli
mov
jmp
push
in
ja
ss
push
sti
rorl
or
mov
inc
lret
pop
mov
rorb
and
incl
imull
mov
or
push
pop
xlat
dec
sub
inc
ret
int
mov
cmpl
cmpl
cltd
dec
jge
je
outsl
mov
into
dec
fwait
ja
mov
mov
mov
push
outsb
fs
lahf
mov
outsb
pop
mov
add
les
xor
jmp
mov
gs
push
divl
rcll
pop
pop
pusha
jmp
insb
stc
dec
stc
xor
adc
not
imul
jnp
arpl
adc
mov
mov
add
sbb
insb
sub
push
das
xor
xchg
xor
dec
or
std
mov
clc
in
push
mov
cmovle
outsl
and
cmpb
fcomps
cld
rcrb
cld
jbe
sahf
add
mov
push
mov
and
clc
ret
mov
or
cmp
mov
mov
sbb
shr
cs
cld
iret
cmp
inc
mov
loopne
decl
mov
jg
call
inc
cmp
jle
mulb
pop
push
out
push
popa
sahf
arpl
mov
pop
loop
cmp
js
push
jecxz
sub
int
cmp
push
bound
rcrb
lds
mov
xchg
push
lahf
filds
xchg
arpl
enter
xchg
cmp
mov
jecxz
push
in
push
pop
push
or
pop
mov
insb
inc
loop
fwait
iret
jle
mov
sub
sbb
test
jmp
xor
push
rcr
sbb
out
cmp
fidivl
mov
xorb
push
cld
pop
cmp
sbb
popa
ljmp
xchg
jmp
or
jmp
cmp
repz
or
pop
jo
popa
add
sub
jne
jge
mov
fistpl
pushf
icebp
pop
jo
mov
pmulhw
in
movb
icebp
dec
pusha
jb
jecxz
repnz
stc
iret
fwait
out
sub
lret
cmp
mov
pop
mov
jo
roll
xor
pop
mov
outsl
mov
or
stc
mov
cltd
push
xor
lea
in
mov
fstpt
jno
xor
jo
xor
jge
hlt
xor
mov
jp
icebp
jno
push
push
cmp
addr16
mov
sti
rorb
mov
test
daa
stos
cld
jb
hlt
pop
clc
ja
imul
in
jno
test
or
insb
int
push
in
xchg
dec
sbb
inc
insb
xor
pop
jae
push
dec
mov
mov
pop
mov
arpl
jl
xchg
data16
inc
imulb
xor
jae
lods
dec
lret
leave
rorl
cmp
loop
pop
lea
cmp
xor
mov
std
ja
pop
cmc
test
dec
or
or
dec
dec
mov
pop
iret
pop
incl
cmpl
jno
add
addl
cld
xor
dec
ds
adc
push
jp
or
fistps
pop
mov
aaa
pushl
xor
outsb
dec
dec
xchg
lahf
pop
mov
incl
sbb
xchg
mov
adc
add
cmp
notb
repz
jo
adcl
mov
cmp
addb
or
or
cmp
aas
and
addl
or
push
ret
pop
ret
icebp
add
mov
sbbl
aas
xchg
fldt
insl
imul
cld
dec
mov
mov
pop
mov
mov
push
add
jecxz
push
out
jne
mov
mov
jno
stc
shll
aaa
aas
dec
test
loopne
jo
add
inc
lea
loopne
pop
mov
lock
mov
pop
lods
loopne
cmp
call
pop
aam
jmp
mov
cmp
loopne
fbstp
inc
jecxz
cwtl
repz
mov
ss
xchg
cmpb
pop
in
mov
loop
mov
lds
xchg
ret
in
xchg
mov
cmp
jne
enter
jne
test
outsl
pop
orb
mov
mov
add
adc
sti
xchg
test
insl
mov
test
sub
test
jge
adc
das
jno
call
add
xchg
test
mov
mov
in
sbb
insl
dec
or
xor
orb
add
push
mov
insb
cmc
lods
lock
inc
sti
xor
push
add
fbstp
jnp
out
xor
mov
sub
jno
jle
fisttpl
push
fistpll
repnz
or
test
insl
mov
mov
xchg
xor
outsl
fldt
sub
xor
repz
fimuls
pop
fwait
gs
jne
insb
and
or
sbb
inc
inc
mov
out
sbbb
cmp
outsb
add
ljmp
out
xorb
adc
jno
les
cld
mov
std
xor
cli
jl
mov
pop
or
repz
das
mov
mov
sub
jno
test
dec
add
jg
je
js
pop
dec
jno
loope
popf
inc
loope
cs
cmp
jae
xchg
or
sbb
sub
adc
sbb
jp
sbb
mov
loop
lea
test
xchg
ds
repz
das
sub
std
xor
dec
mov
inc
lods
pop
xor
in
pop
insb
subl
inc
adc
repz
in
jle
adc
ret
jecxz
cli
mov
inc
inc
adc
mov
in
jbe
cmp
movb
mov
xchg
mov
dec
test
mov
xlat
jle
popa
leave
stc
in
lret
fcmovne
mov
dec
inc
adc
inc
adc
in
cs
les
jmp
inc
mov
jle
cli
mov
xor
inc
loope
loop
aaa
mov
cld
inc
push
push
mov
imul
push
out
jp
pop
or
xor
pop
fdivl
cmp
pop
test
outsl
sbb
outsl
add
in
ljmp
sbb
sbb
push
mov
ficoms
jg
dec
push
push
xor
sbb
inc
arpl
jmp
aam
dec
hlt
sbbb
inc
sbb
test
jns
pop
cld
jmp
iret
popf
xor
xorl
sbbl
or
push
mov
faddl
mov
out
loop
and
pop
hlt
outsl
push
push
pop
xor
fnstsw
cmp
loopne
addl
negb
adc
push
pop
and
pop
mov
int
aam
sbb
shlb
cmc
mov
insb
or
bound
testl
and
sarb
jp
cmp
or
ss
outsb
and
cmp
jne
test
push
cmp
xchg
decl
jne
add
add
test
xorb
sti
ss
mov
decb
les
pop
js
call
xor
jne
pop
adc
test
sbbb
mov
insl
or
lds
pop
jae
gs
push
orl
dec
sbb
dec
dec
fbld
cmp
out
lea
dec
jecxz
cmp
ret
sub
ds
repz
ds
or
adc
jecxz
pop
out
jle
adc
lea
aad
xor
push
loope
sti
lret
data16
iret
iret
enter
mov
lcall
sub
or
fistps
lds
pop
push
cmc
xor
push
mov
or
push
std
imulb
aaa
int
mov
call
notl
cmp
add
push
ret
mov
cmp
xchg
std
ss
adc
arpl
jo
push
mov
pop
push
outsb
add
mov
addb
jo
push
mov
cld
pop
cmp
xchg
pop
loope
subb
cmp
outsl
add
test
push
lods
pop
xor
pushl
mov
sub
or
or
mov
mov
add
or
mov
pop
mov
add
fsubrs
push
add
bnd
and
push
ss
std
outsl
add
or
add
add
mov
jp
add
dec
jle
sti
jb
test
lahf
lock
xlat
cmp
std
push
mov
shll
fdivrs
test
jo
jecxz
sbb
mov
mov
push
xchg
push
jge
and
sbb
mov
mov
testb
sar
xchg
testl
push
xchg
mov
mov
pop
mov
pop
stos
dec
test
test
or
lock
pop
push
jl
inc
mov
subb
call
sub
sub
push
push
jae
rcll
jl
stc
adc
jmp
mov
lret
arpl
jmp
mov
inc
in
daa
addr16
push
sti
addr16
inc
clc
lcall
jmp
daa
pop
cmp
pop
jns
aam
out
mov
jnp
mov
out
pop
push
and
sar
jl
arpl
cs
dec
push
dec
bound
out
xchg
xchg
jo
pop
push
testl
mov
int
div
test
cmp
cld
int3
or
jg
jge
pushl
add
sti
jp
negl
cs
lcall
push
jmp
mov
mov
adc
das
insl
push
subl
mov
inc
mov
and
cltd
subb
cmpsl
ja
scas
test
mov
jae
xchg
mov
ret
repz
ret
and
lds
lahf
mov
mov
stos
mov
and
cmp
dec
xchg
or
mov
add
mov
repz
pushf
gs
inc
das
rorb
lea
sti
xor
mov
push
fsubs
jecxz
push
fstpt
push
xchg
fistps
ret
hlt
xor
loopne
stos
inc
jle
and
mov
out
scas
push
jnp
sbb
or
and
or
push
sbb
push
push
cli
dec
inc
test
add
imul
gs
or
ja
jbe
push
inc
jnp
out
xor
sarb
or
addr16
jge
xor
pushl
mov
cmp
pop
shll
jne
arpl
fnsave
inc
aaa
fmuls
rcrb
jmp
nop
lahf
jmp
aad
fisttpl
insb
insb
and
insb
ljmp
mov
popa
sub
lods
lds
mov
dec
mov
jmp
das
rclb
iret
dec
outsl
ret
das
lds
lret
out
das
daa
pop
test
sbb
dec
loop
xor
adc
rcrl
jae
test
cmc
jle
cli
mov
fistl
fimull
data16
push
test
xlat
out
std
xor
pop
outsb
ljmp
stc
dec
push
aam
jl
out
inc
mov
cld
sub
ffree
inc
mov
mov
out
mov
iret
lret
mov
sub
push
push
ja
fldt
xchg
push
mov
sub
sub
mov
movsb
push
mov
or
pop
mov
mov
dec
pop
mov
xorl
mov
in
cs
shlb
xlat
je
inc
stc
pop
in
jmp
sbb
or
inc
iret
sub
daa
mov
push
clc
cmpb
jg
pop
lds
lock
in
xchg
push
pusha
orb
and
mov
inc
mov
sub
dec
pop
sbb
mov
imul
inc
insb
jmp
fprem
insl
sub
mov
in
sub
outsb
sbb
les
stos
push
lret
add
rolb
mov
fidivrs
clc
pop
pop
mov
xchg
lods
das
hlt
shlb
xchg
jge
lahf
out
test
or
xchg
mov
arpl
add
xchg
dec
adc
xorb
inc
icebp
leave
hlt
and
push
movl
out
push
or
jns
pop
sahf
mov
enter
dec
rorl
imul
jne
mov
and
loopne
clc
pop
dec
in
idivb
gs
clc
pop
adcb
add
mov
ljmp
jmp
cltd
mov
sbb
dec
mov
ja
sub
xchg
lods
pop
adc
fimuls
push
xchg
mov
es
movsl
dec
std
inc
dec
out
sub
sub
fmull
sub
cmp
push
sbb
push
arpl
xlat
push
cs
mov
stc
fbld
xor
mov
add
add
fwait
lods
clc
inc
sbb
mov
fldenv
inc
imul
pop
jle
and
mov
or
dec
mov
cli
out
arpl
mov
mov
jl
rdtsc
scas
sti
sbb
ficomps
add
lahf
mov
sti
jecxz
sti
and
lret
xor
pop
sti
out
inc
fldt
xor
fnstsw
or
stos
clc
mov
jno
outsl
cmp
pop
push
dec
stc
shlb
xchg
inc
lods
test
std
fs
inc
mov
sub
ja
sub
imul
mov
fidivl
int
push
std
push
mov
notl
pop
out
dec
fists
push
dec
xchg
add
xchg
inc
sub
dec
dec
jg
jecxz
sub
jle
mov
mov
xor
gs
movsl
cmc
lcall
popa
jecxz
or
add
sub
mov
jp
fcoml
cld
outsl
pop
xchg
jo
push
or
xchg
add
call
or
xchg
or
or
lods
out
mov
test
fwait
testl
mov
mov
cmp
ja
pusha
ret
sar
ds
sbbb
in
xor
hlt
mov
xor
insb
arpl
pop
ss
loope
aas
sub
xchg
aaa
sub
fisubrs
pop
out
add
xchg
dec
jmp
jg
insl
add
fsubl
mov
and
jg
ds
push
inc
xchg
lock
sub
mov
icebp
testl
mov
loopne,pn
mulb
lahf
pop
loop
xorb
push
push
xchg
push
sbb
adc
jne
imul
pop
ret
nop
mov
add
aam
or
repz
mov
cltd
mov
jbe
push
lock
inc
xor
orb
push
jg
push
mov
imull
jmp
cmpb
inc
cli
decb
dec
mov
rcll
or
lea
es
std
dec
insl
js
enter
cmp
xchg
insb
lods
pop
enter
pop
adc
adc
xor
orl
or
icebp
dec
push
testl
fldcw
sub
cmp
ss
std
mov
pop
xchg
cmp
mov
icebp
cmp
dec
test
jle
xchg
jo
or
jno
lahf
or
sub
and
js
das
or
pop
cltd
and
dec
mov
push
out
or
pop
push
rcrl
sbb
mov
jle
mov
outsl
push
lea
jp
pushl
sub
push
inc
xchg
loopne
jbe
sbb
jl
jge
xor
ljmp
jp
push
or
push
out
sub
adc
add
js
and
ja
call
jge
arpl
or
test
cmp
shlb
bound
std
and
push
fstpl
mov
std
loop
sub
test
pop
pop
mov
arpl
arpl
sbb
pop
cmp
repnz
jle
pop
mov
daa
xor
pusha
xchg
add
rclb
dec
inc
mov
and
pop
aas
daa
sarl
iret
inc
in
mov
pop
call
xor
add
gs
add
mov
ja
jp
pop
mov
outsl
inc
jg
pop
out
mov
mov
popa
mov
ret
pop
scas
lahf
lcall
aas
lahf
outsl
and
das
repz
jecxz
arpl
stos
insl
inc
aad
fildll
pop
or
icebp
aaa
add
icebp
push
cmpl
mov
xchg
lahf
cwtl
sti
into
xchg
mov
iret
mov
push
pusha
xorl
test
dec
arpl
push
mov
rcrl
sub
and
mov
jae
add
mov
lcall
add
ret
adc
xor
incl
ljmp
loope
es
push
cltd
stc
faddl
insl
pop
movsbl
adc
loope
ret
mov
add
into
sub
inc
outsb
in
lods
push
pop
mov
xorl
negl
xchg
mov
adc
mov
xchg
adc
mov
and
inc
inc
in
movsl
popa
cmpsl
mov
xchg
pop
loop
dec
fldl
and
frstor
daa
loopne
data16
adc
repz
pop
xlat
stc
popa
push
mov
mov
mov
aad
outsb
xor
or
or
dec
add
ja
push
sub
clc
jle
push
dec
fdiv
aas
sbb
pop
push
pop
test
shr
pop
js
sub
in
in
or
add
das
lock
sbb
mov
push
cmpsl
mov
js
bound
jmp
jno
mov
fcomip
sbb
imul
imul
dec
arpl
insl
fnstcw
mov
add
testb
cld
stc
cmp
jo
jg
pop
sbb
std
cli
sub
dec
test
push
jecxz
and
in
push
and
repnz
lock
and
or
dec
sti
add
shll
sub
loope
push
fisubs
test
loope
sub
cmpsl
mov
mov
jmp
sbb
pop
dec
xor
inc
push
pop
mov
add
ret
pop
push
ret
add
and
push
xor
mov
cld
pop
jno
lahf
flds
shrl
mov
pop
add
in
dec
stc
and
gs
in
jae
in
les
mov
iret
and
mov
adc
sbb
insl
sti
iret
insl
jle
mov
sbb
test
pop
rcrl
addb
sti
aad
or
mov
mov
mov
lods
push
mov
push
inc
into
arpl
pop
xor
push
push
cmp
cmp
shlb
fisubrl
lods
adc
push
pop
das
mov
lods
dec
pop
lods
xor
or
mov
scas
inc
btr
adc
xor
dec
xorl
rcll
and
sub
add
or
push
out
cmpsb
test
pusha
cmpsb
cmpsb
loope
jl
imul
adc
std
inc
sbb
push
clc
pop
jb
fldenv
sub
mov
jne
sub
pusha
mov
push
mov
xor
jmp
dec
jmp
test
sub
sbb
add
mov
testl
adc
int3
fisttpl
mov
int
adc
aas
push
xchg
inc
test
cmp
out
pop
mov
fbstp
clc
mov
and
out
pop
mov
cwtl
cmp
push
jecxz
jnp
jp
std
cld
call
insl
pop
mov
mov
fwait
into
orb
insb
jb
mov
mov
xor
stos
daa
repnz
fwait
sub
je
or
adc
jge
push
mov
ret
mov
sbb
sti
ljmp
cmc
and
and
inc
and
xor
fst
int
or
adc
add
push
and
incl
sarl
fisttpll
and
outsl
std
test
inc
and
fisubrl
xor
sbb
loopne
iret
call
jo
push
push
sbb
cmp
shrb
dec
add
mov
dec
pop
jo
mov
fwait
xor
aaa
mov
ficoml
mov
mov
test
push
repz
push
sbb
jl
shll
repz
loop
cmc
cmp
pop
fcomps
lcall
lahf
aas
jbe
in
mov
gs
stc
sbb
popa
cmp
aam
insl
notl
jg
notb
mov
jp
in
mov
push
cli
gs
mov
nop
sub
add
sahf
jo
mov
dec
daa
movsl
jno
jo
pop
adc
pusha
mov
ffreep
cmp
dec
insl
xor
loope
sub
add
sbb
cmp
rcrl
lock
test
repz
jmp
inc
push
push
icebp
sbb
xchg
sub
ss
fucompp
lahf
cli
imulb
add
repz
sbb
popf
ljmp
or
mov
mov
xchg
stc
push
pop
popf
std
fwait
pop
stos
mov
jns
clc
popa
push
sbbl
jmp
dec
or
jne
add
clc
inc
mov
inc
cwtl
lds
adcb
and
or
ficompl
push
mov
aas
push
dec
loop
and
leave
rcl
mov
xor
iret
push
dec
dec
dec
or
fld1
push
push
in
stc
mov
add
mov
inc
std
insl
pop
lods
jecxz
or
xor
cltd
or
out
push
hlt
jno
mov
dec
and
inc
mov
pop
fiaddl
loop
daa
inc
inc
lods
mov
mov
sub
popf
mov
sbb
cmp
rorb
cmc
add
jl
cwtl
lods
cmp
pop
icebp
iret
in
dec
jg
test
mov
sarl
ja
add
pop
cmc
bound
cmp
push
in
push
es
push
dec
adc
pop
in
xor
subb
dec
and
xor
dec
inc
dec
or
in
or
sbb
stc
shrl
push
cmp
jle
insb
lcall
mov
inc
jp
add
xchg
clc
cltd
add
movsb
daa
add
shrl
fldenv
inc
mov
scas
mov
into
mov
jns
jecxz
sbb
scas
notb
jmp
inc
xor
andb
outsl
in
cmpb
outsb
jg
jnp
jnp
ret
sti
cmpsl
or
mov
out
lret
pop
adc
cli
push
or
push
cs
jns
xchg
inc
iret
xchg
xchg
cmp
mov
cmpsb
sub
jl
out
mov
jle
jg
sti
out
inc
cmp
andb
test
adc
mov
mov
movsl
addl
in
mov
outsl
mov
lea
dec
push
ja
push
mov
mov
filds
add
jecxz
in
popa
adc
cmp
fisubrs
outsl
lcall
stc
bound
or
outsb
push
repz
jb
movsl
fildl
add
and
pop
pop
dec
repz
das
inc
jae
pop
hlt
push
loopne
mov
push
push
dec
jle
dec
cmp
scas
push
inc
subl
flds
idivb
inc
leave
mov
arpl
xchg
inc
pop
sahf
or
sub
arpl
xchg
ficompl
ret
roll
fdivrp
negb
pop
push
jnp
leave
mov
xor
mov
adc
mov
push
push
arpl
movl
roll
mov
out
orl
insb
loopne
pushf
cmpl
xchg
pop
std
inc
mov
pop
sbb
jnp
jg
ja
test
pop
add
nop
pusha
shll
jo
xchg
loopne
adc
aaa
push
in
push
cmpb
inc
push
sti
repz
shlb
sub
jg
or
pop
and
mov
push
xchg
sub
pop
add
cli
dec
imul
push
push
mov
xor
or
cmp
les
and
adc
dec
bound
bound
test
ret
aaa
iret
idivl
orl
cmp
xchg
mov
or
jge
mov
cmpl
mov
mov
ret
dec
gs
jp
into
push
repnz
jl
pop
mov
stos
fwait
jecxz
out
test
add
inc
icebp
push
hlt
js
bnd
subb
mov
inc
cld
test
mov
jne
jne
add
loope
sbb
loope
hlt
jg
push
lds
fwait
mov
or
fdivrp
jle
jne
add
dec
into
repnz
lds
loope
sbb
sti
push
das
sbb
icebp
mov
iret
push
push
or
test
inc
ja
pushf
sbb
std
mov
ljmp
fsub
popf
aas
clc
stos
mov
fcoml
addr16
push
sbb
cwtl
repnz
and
xchg
jb
rep
push
push
dec
push
out
icebp
mov
inc
xchg
cli
add
aas
jecxz
mov
add
push
mov
sub
pop
xor
call
xchg
add
push
inc
xor
sbb
mov
cmpb
testl
sahf
aam
xchg
faddl
sub
cmp
jae
outsb
add
loop
fstpt
fcoml
in
sahf
xor
mov
iret
fiaddl
jae
pop
push
pop
xor
mov
push
pop
mov
subb
jmp
loop
aad
mov
cli
push
adc
insl
sbb
mov
ljmp
out
arpl
vpshufhw
mov
mov
jno
pushl
sahf
jne
rcrl
les
push
sti
pop
orl
sub
adc
xchg
cmpl
cmp
leave
push
sub
clc
rclb
mov
in
clc
xchg
xor
mov
dec
jno
or
xchg
xorl
pusha
lods
shll
scas
ds
addr16
out
jo
jecxz
cmp
lock
sbb
dec
dec
int
lock
xchg
sti
arpl
and
mov
pop
aam
mov
mov
stc
cmp
mov
hlt
push
ret
push
sbb
xor
pop
ds
cld
add
aas
std
inc
cmp
das
lret
sbb
xchg
or
adc
cltd
and
and
or
xor
or
xchg
add
cmp
jecxz
pop
and
lahf
enter
hlt
cli
add
leave
insl
lock
cmp
stos
enter
or
fwait
in
mov
xchg
pop
sbb
mov
adc
repz
inc
ja
mov
sbb
shrl
mov
cmc
mov
xchg
movsl
rorl
adc
pop
xor
repz
loopne
dec
or
xor
jmp
and
pop
xor
in
adc
bound
inc
in
lds
cmc
test
xor
xorl
or
rolb
and
nop
mov
xchg
mov
add
aaa
popa
out
push
mov
and
sbb
lea
sub
insl
and
mov
sbb
cmpsl
loope
sub
loope
xlat
ljmp
dec
xchg
lret
iret
sbbb
aam
lahf
mov
sub
push
mov
or
or
test
fcmovnb
jbe
add
mov
rol
out
sub
dec
push
mov
cltd
or
les
inc
pop
or
jns
add
sbb
add
sub
sbb
adc
mov
or
mov
clc
xor
cmp
jnp
push
stc
call
mov
sbbl
jnp
ljmp
add
mov
xchg
add
stc
lds
mov
out
test
mov
dec
addb
adc
ds
ret
push
adcl
pop
mov
cli
mov
cmp
test
fildl
jp
call
push
sub
clc
jo
movzbl
sar
je
movsl
adc
sbb
divb
jno
sbb
cld
sti
insl
sub
outsb
daa
and
fwait
sbb
inc
and
add
stc
inc
cmp
jb
jecxz
push
mov
std
ret
lahf
testl
test
ja
cld
sar
iret
mov
jg
add
and
and
inc
sub
nop
sarl
out
and
cmp
jb
sbb
daa
das
add
pop
inc
mov
das
leave
mov
add
cmp
jecxz
add
xor
xchg
test
cld
inc
icebp
cli
std
sbbl
test
loop
pusha
jnp
add
imul
popf
clc
add
mov
xchg
adc
push
movsl
fwait
clc
dec
gs
inc
shl
aas
filds
testb
mov
popa
adc
in
decb
cmp
lret
cld
jecxz
fmull
mov
sti
cmpsb
out
push
gs
adc
pop
int
clc
pop
test
dec
sarl
xor
mov
cwtl
and
adc
int
test
jecxz
jns
push
lods
sub
push
adc
pop
mov
xor
outsl
xor
add
cmp
inc
xor
repz
mov
ss
adc
xchg
in
fwait
aaa
hlt
loopne
jns
jb
imul
cltd
or
sbb
sqrtps
dec
adc
xchg
test
mov
xor
xchg
inc
pop
push
xchg
xchg
sbb
xor
dec
inc
xchg
test
add
cmp
jl
push
dec
lds
in
mov
xor
or
mov
cmpsb
inc
out
jae
add
mov
push
lods
jae
dec
loopne
inc
insl
xchg
dec
xchg
inc
mov
rol
adc
stc
pop
xchg
call
ja
pop
add
test
jle
dec
xor
inc
std
je
xor
xor
ja
mov
add
jg
jg
add
cmpb
adc
test
sub
mov
loop
adc
aas
pop
aad
mov
les
inc
push
addl
mov
xchg
pmullw
dec
fnstsw
insl
insl
cli
adc
sbb
jnp
dec
xor
jp
xchg
popf
fwait
pusha
les
mov
mov
mov
cmc
mov
lahf
addl
dec
das
mov
sbb
or
out
fimuls
jg
xchg
stos
or
inc
inc
mov
getsec
or
stos
idiv
jns
xchg
sbb
mov
mov
cmpsb
mov
xchg
in
xchg
or
pop
outsb
insl
rorl
inc
stc
dec
incl
jo
lea
ja
xor
adcb
insb
rol
jp
dec
in
dec
pop
ss
test
or
aas
ja
inc
jmp
daa
insl
or
jge
sbb
jmp
inc
repnz
je
daa
inc
sbb
sub
sti
inc
sbb
adc
pop
outsb
jo
test
cli
outsl
out
sti
sub
or
ja
adcl
movsl
hlt
sbbl
jns
in
or
or
jo
cltd
xchg
or
pop
add
or
cmpl
repnz
or
daa
push
cltd
mov
add
mov
cmpl
out
inc
pop
sbbl
sbb
movsl
push
or
and
jnp
mov
std
push
iret
or
mov
subb
add
sbb
mov
arpl
xchg
or
xor
dec
popa
cld
push
filds
xchg
push
jo
jg
sub
adc
cmp
mov
add
add
loop
out
addb
aad
pusha
fildl
das
or
mov
insl
arpl
std
xchg
push
push
cmpsb
add
or
xchg
mov
loopne
inc
aad
out
jge
sub
cmp
das
adcb
mov
xchg
sub
int3
push
push
not
push
loope
pop
dec
cmp
test
leave
or
push
mov
add
sub
jo
mov
pop
dec
push
cmp
inc
shlb
inc
mov
dec
xchg
xor
enter
hlt
adc
pop
xor
or
data16
push
outsl
sub
incl
cmpsb
imul
push
jb
dec
xchg
sbb
ja
loopne
push
dec
inc
adc
inc
fadds
mov
jne
xchg
push
pop
sbb
push
bound
test
lds
add
jecxz
or
sub
push
scas
pop
cmp
cmp
xor
sub
dec
dec
icebp
jno
movsl
aam
stos
sarb
xchg
push
push
loopne
push
popa
hlt
dec
sub
add
or
aam
push
pop
xlat
add
xchg
stc
dec
push
jae
rorl
dec
adc
das
xor
ret
testb
dec
icebp
or
daa
inc
adc
push
adc
or
xchg
cli
adc
xchg
jg
or
pop
mov
loopne
push
or
inc
fwait
push
ret
aad
bound
movsl
pop
add
sarb
mov
stc
lahf
mov
mov
xor
aas
ret
mov
pop
insl
push
cs
std
push
cmpb
mov
fildl
loop
or
ret
xor
pop
cltd
daa
cmpb
cmp
cmp
fdivl
mov
lds
xchg
mov
loop
adcl
push
cmp
dec
push
arpl
in
test
ret
mov
mov
xlat
jg
insl
inc
or
incl
insl
subl
mov
mov
ds
lods
add
popf
dec
or
shll
dec
daa
cmp
xchg
and
mov
or
and
test
lret
pushf
test
aas
add
or
xor
jecxz
or
pop
repnz
adc
dec
pop
sti
sbb
cmpsl
fiadds
or
mov
push
sbb
or
cmp
adc
xor
jo
add
inc
and
outsl
mov
out
sub
mov
jecxz
stc
push
call
or
jge
clc
inc
xor
lds
jecxz
add
loope
xchg
cmp
pop
or
sbb
lods
loop
jle
ja
sub
idivb
inc
idiv
arpl
mov
fcmovnb
nop
test
daa
dec
lock
imul
or
pop
movsl
mov
fucomip
sbb
cmpl
cmp
xchg
add
mov
stos
cmp
outsl
dec
sub
mov
mov
out
addl
or
cmp
xchg
push
jle
add
jp
push
cmp
jl
cld
scas
sti
add
decl
inc
pop
outsb
add
inc
adc
test
fstpt
inc
cmc
call
adc
push
test
call
mov
cs
mov
adc
dec
std
sub
xchg
test
jg
repnz
add
dec
mov
xchg
sti
js
cli
ret
mov
incl
xchg
outsl
shll
push
mov
jmp
out
pop
mov
xor
aas
push
mov
jecxz
inc
mov
cmpsl
sbb
push
test
lds
add
and
xor
mov
outsl
jmp
cmpsb
call
jno
fs
add
mov
sti
insb
inc
faddl
adc
or
data16
xor
inc
mov
mov
lods
mov
and
test
pop
xor
aad
sub
push
or
leave
mov
or
rdtsc
mov
sti
or
mov
jae
lea
arpl
mov
outsb
adc
pop
ja
jmp
jle
icebp
inc
mov
add
jb
fnstenv
hlt
cmp
lret
hlt
inc
mov
xor
lods
push
lea
fsubl
pop
stc
lret
jmp
sbb
add
mov
andb
shr
in
or
shl
add
daa
pop
sbb
add
test
mov
aam
out
aas
fildl
mov
xchg
stc
popa
pop
xlat
ljmp
sar
mov
mov
out
mov
cmp
mov
xor
mov
bound
stos
inc
push
clc
mov
mov
pop
and
out
add
mov
aas
sahf
pushl
cmp
jno
mov
in
add
test
xor
arpl
fstpt
add
aas
push
mov
and
push
pop
and
shrl
add
xchg
std
mov
in
cmpb
mov
arpl
aas
jmp
pop
in
mov
fcompl
std
jnp
popf
jl
mov
fwait
sbb
lret
and
addl
repnz
or
in
add
testb
xor
pop
bound
xor
pop
es
pop
out
mov
lea
in
gs
inc
clc
int
incl
or
lods
in
das
jl
cmp
gs
push
inc
pop
es
cmp
ret
pop
idivb
pop
xchg
outsl
test
add
cli
in
aaa
sbbb
add
lcall
cmpb
adc
dec
roll
pusha
or
mov
pop
repz
push
incl
and
xchg
or
hlt
pop
and
in
add
xor
inc
sub
add
arpl
insb
test
aaa
pop
mov
inc
in
cli
sbb
insl
insl
iret
shr
bnd
into
std
pop
ss
addr16
pop
cmp
pop
out
mov
or
ret
arpl
lahf
int
idivb
add
mov
fsqrt
xchg
jge
lret
pop
inc
mov
dec
movswl
cli
addr16
mov
adc
mov
inc
ja
and
lods
int
and
lods
repz
clc
mov
fcmovnb
pop
pushf
ds
insl
in
jg
or
out
gs
ljmp
lret
in
sti
mov
sbb
push
xchg
mov
sub
aaa
xor
lret
aam
fcmovne
mov
jmp
mov
std
loope
popf
in
pop
loopne
shl
addr16
xchg
add
icebp
jbe
sbb
mov
jns
pop
push
test
inc
aas
pop
pop
or
pop
cld
mov
and
jmp
add
in
std
xchg
mull
inc
xchg
add
push
sahf
push
xchg
mov
and
in
cmc
clc
push
test
xor
pop
and
cmc
dec
xchg
adc
mov
rcrl
pop
add
mov
lret
add
test
in
jmp
insb
xchg
into
sbb
push
jg
dec
jle
inc
ss
movsb
decl
mov
inc
xor
clc
dec
push
incb
loope
mulb
add
aad
mov
cld
adc
sahf
insl
mov
cmc
dec
cld
and
mov
insl
cld
in
inc
xor
mov
mov
mov
insl
scas
sub
lock
testb
in
cmp
jmp
dec
movl
into
into
and
das
lods
fsincos
pop
hlt
pop
mov
jle
or
out
mov
dec
pop
clc
push
sbb
clc
add
insl
cmpl
jmp
js
in
clc
pop
pop
decl
roll
dec
in
add
int
cli
pop
loopne
cmpsl
push
popa
sbb
mov
sbb
inc
push
sti
inc
sbb
and
ljmp
jmp
push
inc
jmp
loope
or
or
lret
and
lcall
push
mov
dec
sbb
aas
adc
cmp
or
iret
xlat
xchg
ljmp
ss
xor
inc
push
dec
gs
jg
lods
pop
in
ds
inc
pop
xchg
mov
into
faddl
jmp
mov
sub
lahf
xor
push
dec
add
movl
sbb
dec
adc
jmp
loopne
jle,pt
add
xchg
cmpl
ds
xchg
xchg
push
mov
inc
or
xor
repz
stc
adc
mull
sub
loope
jle
pop
dec
or
pop
cld
mov
mov
mov
dec
jp
add
out
inc
divl
mov
les
xor
jne
and
rclb
jno
inc
frstor
inc
jge
decw
shlb
scas
cmp
data16
xchg
push
roll
pop
pop
clc
outsl
dec
add
mov
adc
in
jg
pop
jnp
add
fdivrs
push
mov
mov
ds
clc
imul
incl
shrb
push
mov
or
xchg
adcb
mov
inc
sub
cli
inc
xor
hlt
aaa
insl
add
mov
fists
pop
loop
shlb
or
scas
and
push
stc
rcll
iret
cmpb
add
push
pop
sarl
es
push
das
in
mov
mov
mov
popf
inc
inc
inc
jp
push
je
cli
sbb
push
jnp
lock
test
test
ja
aam
shrb
inc
data16
inc
iret
stc
mov
outsb
out
adc
push
add
push
shl
jbe
insb
mov
mov
cmpsl
and
cmp
out
xor
pop
dec
mov
mov
mov
aad
filds
mov
add
fisubrs
gs
push
fidivl
mov
insb
inc
rcll
popa
sbb
adc
outsb
shrb
and
sbb
filds
xchg
mov
notl
mov
orl
jge
push
insl
push
lret
inc
lock
xchg
add
leave
in
push
insb
dec
add
push
inc
and
add
mov
inc
add
push
roll
add
hlt
test
xchg
pop
pop
or
clc
sarl
pop
xchg
push
mov
mov
pop
shlb
lahf
dec
stos
insb
rcrb
js
movsb
cpuid
ljmp
pop
outsl
and
mov
xchg
outsl
push
or
mov
cltd
jae
pushf
stc
cltd
mov
mov
in
gs
out
test
sbb
sar
fbld
in
push
mov
dec
scas
loope
popa
mov
push
loope
and
adc
sbb
sbb
pop
lods
sbb
gs
xchg
mov
jnp
loope
add
add
loop
loop
lcall
into
xchg
cmp
clc
xor
fdivp
xor
jae
ja
sub
out
xlat
cli
xor
xchg
add
stc
sub
add
clc
push
dec
fldl
jecxz
stc
xor
repz
lmsw
dec
jno
lahf
in
neg
pop
cmpsb
push
xchg
loope
sbb
out
sbb
mov
ja
test
sub
mov
add
mov
cs
aas
decl
xchg
std
or
lahf
cld
mov
fsubs
popa
test
jp
fs
loope
fildll
or
outsl
arpl
rcrl
add
in
mov
jp
incl
jg
mov
or
cmp
sbbb
lcall
xor
sub
jecxz
arpl
cmp
mov
adc
push
rcpps
mov
mov
in
dec
outsb
xchg
mov
mov
or
add
push
pop
cmp
insb
pop
push
popa
ss
out
scas
mov
roll
les
xor
jo
push
pushf
mov
test
mov
sahf
lock
loopne
jmp
sbb
in
jecxz
loopne
fimuls
cs
mov
pop
and
jl
jb
es
jmp
add
call
aad
mulb
push
cli
inc
fsubl
add
sub
xchg
add
out
fs
sti
rep
icebp
imul
lahf
and
add
sbb
push
mov
call
push
imul
enter
filds
sti
or
push
jl
lcall
std
or
sti
cmp
les
fidivs
xchg
rol
cmp
ss
iret
pop
pushf
pop
hlt
out
mov
dec
cmpb
add
xchg
mov
test
pop
mov
pop
dec
mov
ret
cmp
inc
xor
outsl
and
xlat
out
sbb
adc
push
mov
mov
fldt
in
cld
mov
jnp
out
mov
push
cmc
rolb
mov
inc
jg
test
mov
xchg
add
or
cmp
mov
addl
mov
jo
int
lea
push
popf
mov
pop
ja
mov
negl
xlat
incb
pushf
mov
add
out
arpl
das
inc
xor
xchg
or
imul
out
adc
add
enter
jmp
add
jnp
xor
push
sbb
cmp
mov
push
dec
xor
insb
add
xor
push
cmp
out
jle
lcall
lds
xlat
jl
insl
outsl
add
insl
pop
mov
dec
dec
out
stc
xlat
jno
add
dec
push
dec
cmc
ret
dec
jecxz
cmp
arpl
jno
inc
inc
mov
dec
adc
cmc
dec
xor
icebp
jge
mov
in
or
and
js
paddusw
or
cltd
mov
jae
cld
leave
or
push
testl
imul
sub
jo
insl
pop
mov
mov
inc
iret
out
mov
scas
inc
pop
sar
aaa
ja
add
out
mov
ja
ret
in
push
xchg
inc
test
jbe
mov
push
test
sbb
aad
sbb
shlb
scas
mov
cs
add
and
mov
fdecstp
insl
stos
dec
dec
sti
enter
cmp
daa
out
jnp
mov
ret
fwait
xor
adc
loope
out
dec
sahf
xor
cmp
repnz
je
add
sarl
loope
fistpll
lods
dec
iret
orb
cmp
in
mov
pop
js
jbe
jb
sub
lret
imul
ja
mov
leave
xlat
in
ja
ja
jb
in
mov
jne
je
jo
xor
shll
sub
dec
shl
das
pcmpeqw
jno
cs
dec
rorl
add
shll
mov
jb
je
pushf
mov
cmpsb
imul
jb
mov
jb
inc
js
fs
jbe
cs
lret
add
jp
jns
jbe
js
mov
jns
xchg
jnp
out
xor
pop
cs
adc
ja
jns
in
fsubl
ret
jl
adc
js
pop
jp
mov
jb
jnp
cmp
cmpsb
imul
cmp
mov
pop
or
inc
xor
mul
dec
jge
jno
cmp
mov
sub
jbe
jne
lods
jae
mov
in
daa
add
jne
insb
and
add
inc
xlat
hlt
pop
sbb
or
mov
jnp
adc
sti
std
dec
shll
jb
xor
js
in
mov
jae
jne
adc
cmp
jae
inc
dec
sahf
das
or
xor
mov
push
add
lcall
dec
repnz
xlat
pop
scas
dec
add
jecxz
add
adc
or
imull
leave
popa
daa
mov
or
inc
xor
xor
leave
and
sbb
inc
xor
push
das
add
nop
or
inc
cmpsb
leave
orb
into
inc
xor
add
mov
mov
jg
jb
xor
imul
add
imul
in
jno
jne
daa
iret
gs
out
add
in
mov
pop
sbb
xchg
jb
js
int
fwait
mov
jae
iret
mov
jb
sub
cmp
cmp
jp
inc
jae
push
mov
insb
loope
js
pop
ja
fs
shll
mov
fistl
jbe
jae
jae
dec
jne
je
mov
jb,pn
jge
xchg
mov
xor
iret
das
xor
jb
adc
jae
adc
sbb
in
shll
lcall
movsb
xchg
xchg
lcall
add
xchg
fildl
dec
je
pop
jbe
ja
jp
jb
pop
push
jns
jne
js
jns
mov
xchg
jp
out
sub
xor
mov
xchg
int
mov
fcmovnb
jnp
adc
mov
jb
jge
inc
js
arpl
imul
cmp
lea
pop
or
aas
xor
mov
dec
jl
jae
aaa
jne
fldcw
push
arpl
lcall
lcall
add
insb
mov
jb
add
shl
pop
rcr
repz
mov
ret
push
cmpsb
mov
add
jl
incl
imul
insb
ret
in
in
mov
js
lcall
popf
ja
pop
or
add
push
in
jmp
dec
insl
gs
pop
jb
dec
outsl
push
dec
jb
dec
cmp
ljmp
mov
inc
pop
outsl
push
jb
outsl
popa
fs
addr16
pusha
insl
imul
inc
bound
cli
or
ret
lock
pop
pushl
cmp
sti
inc
popa
imul
push
gs
aas
clc
test
push
arpl
cmp
push
insb
inc
outsl
addr16
cmp
test
inc
je
outsl
dec
sub
fs
insl
outsb
cld
inc
ja
pusha
bound
jb
ds
jb
push
outsb
pushaw
inc
pop
imul
dec
fs
mov
pop
imul
arpl
push
fstpt
imul
or
outsb
jo
inc
pop
and
incb
pop
pop
inc
pop
insb
pop
push
adc
std
fildll
cmpl
pop
and
insl
pop
pop
neg
or
popa
lret
cli
inc
imul
push
imul
neg
push
insl
sbb
cmp
jge
sti
pop
inc
gs
hlt
incb
pop
pop
addr16
daa
ja
cmp
lods
lock
ja
aas
arpl
and
fs
fiaddl
std
arpl
bound
jg
fs
js
fisttpl
mov
inc
bound
jnp
fstp
test
aas
push
dec
pusha
mov
scas
mov
add
test
cs
inc
pop
outsl
inc
pusha
arpl
ja
decl
ds
sub
mov
push
pop
push
jbe
mov
xor
stos
push
mov
pop
pop
sub
cmp
arpl
sub
fisttpl
sti
inc
inc
pop
mov
loopne
push
jbe
outsb
aas
mov
mov
bound
outsl
jno
arpl
pusha
jno
imul
outsb
pop
jmp
arpl
fcmovnb
decl
dec
dec
ds
cs
push
addr16
dec
pusha
je
inc
inc
mov
push
insb
mov
insl
cmp
bound
std
mov
pop
sbbl
and
fstps
or
je
and
dec
aas
and
fnstcw
ja
dec
arpl
add
aas
inc
lahf
pop
inc
lods
imul
sub
mov
cli
std
aas
arpl
ret
pop
xor
imul
call
cmp
or
xchg
jmp
push
jno
addr16
push
rcl
and
sahf
jo
insl
push
pusha
mov
imul
push
mov
mov
xchg
gs
fdivrs
jno
push
dec
bound
arpl
fsubp
sar
jo
sahf
sub
dec
dec
inc
dec
sub
cmp
inc
pop
mov
aaa
pop
outsl
or
mov
xor
xor
ja
adc
gs
insl
mov
rorl
cmp
pop
pop
cmp
loop
push
jo
adc
pusha
adc
dec
aas
inc
or
mov
gs
aas
bound
fiaddl
aam
xor
insb
insl
repz
ja
decb
jno
pop
sub
clc
mov
dec
imul
dec
pop
push
jo
xchg
imul
loope
add
pop
jb
test
aas
sbb
clc
enter
pusha
jae
pop
cmpsl
pop
imul
jbe
sub
fildl
inc
das
sub
jns
std
mov
ds
cmp
sub
mov
pop
test
xchg
pop
outsl
outsb
dec
fs
addr16
mov
fwait
or
push
inc
imul
xlat
inc
xor
mov
outsl
pop
inc
imul
xchg
dec
fstpt
inc
imul
push
jne
pop
incl
push
arpl
push
pop
xchg
mov
popa
bound
sub
push
pop
pusha
jo
movsl
mov
sbb
inc
aam
add
lea
imul
jno
ss
std
inc
cmp
cli
push
aaa
fidivrl
mov
ds
sub
mov
fs
sbb
outsb
mov
cld
imul
shr
or
pop
dec
insl
gs
jg
aaa
dec
imul
sub
mov
testb
dec
cmp
push
cmp
cmp
cmp
push
push
test
cs
inc
arpl
jo
outsb
mov
cmp
dec
push
mov
std
cmp
sub
sbb
jecxz
adc
insl
in
push
cmp
js
pop
pop
pop
lret
cmp
cmp
addr16
pop
cmp
jae
arpl
mov
das
insb
xor
arpl
pushl
pop
inc
cmp
pop
dec
xor
daa
imul
cmp
pop
pop
outsb
addr16
pop
cmp
xlat
inc
dec
cmp
pop
pop
push
jo
aad
inc
mov
sbb
insl
push
jle
int
popa
pop
outsl
insb
imul
cmp
mov
int3
lret
cmp
sub
pop
mov
inc
jae
test
cmp
dec
cmp
cmp
sub
pop
pusha
or
shl
imul
or
xor
arpl
aaa
aas
mov
inc
incl
mov
adc
aas
insb
outsb
pop
cmp
dec
aas
adc
cmp
dec
sub
sub
test
lret
cmp
imul
or
dec
pop
xlat
mov
mov
pop
or
outsb
cmc
inc
jecxz
insl
imul
pop
insl
pop
push
shrb
jge
cmpsl
dec
cmp
cmp
cmp
sbb
andl
push
adc
aaa
loope
testb
dec
cmp
stc
lahf
dec
cmp
inc
aaa
repz
cmpsb
cltd
sub
jb
cwtl
insb
pop
pop
pusha
insl
imul
int
push
ja
sti
cmp
sub
sbb
pop
pop
pop
jno
dec
mov
push
gs
mov
sti
or
pop
test
pop
inc
dec
cmp
aas
inc
xor
addl
lds
sub
pusha
or
ds
xor
stos
sbb
mov
pop
sti
cwtl
clc
inc
pop
fld
subl
xchg
adc
sub
adc
cmp
inc
inc
rorl
jg
test
pop
outsb
popa
cld
mov
imul
shll
push
mov
and
jmp
cmp
mov
ffreep
aaa
insb
insl
pusha
or
jb
imul
lds
push
dec
or
outsb
arpl
test
scas
rclb
insl
arpl
cld
enter
add
pop
pop
je,pt
inc
iret
cmpsb
inc
pop
loope
loope
shll
clc
or
push
cmp
add
jno
inc
imul
jne
lods
jge
insl
add
cld
mov
sub
in
pop
out
inc
lock
mov
std
mov
xor
mov
adc
pusha
insl
std
mov
or
push
cld
popa
aaa
dec
push
dec
flds
mov
adcl
cli
pop
pop
pop
jecxz
mov
add
test
or
mov
gs
aad
insl
jo
and
clc
mov
dec
dec
movsl
pop
lock
fs
ret
repnz
std
inc
pop
repz
dec
inc
dec
lahf
mov
jp
cs
aaa
mov
mov
pop
jl
addr16
clc
mov
mov
arpl
ret
or
je
mov
pop
jge
pop
sub
jno
shufps
fwait
sub
cli
or
jge
clc
add
insl
jge
repz
jns
pop
dec
pop
mov
mov
mov
push
test
xchg
mov
je
movsb
add
pop
pop
jbe
jb
jge
data16
jns
jnp
lcall
sbb
jnp
lret
insl
mov
sub
ja
jle
clc
add
std
cli
add
stc
push
std
add
add
cld
sti
add
push
std
insb
jae
push
repz
insb
mov
ss
test
or
je
lret
fidivs
sub
cmp
sub
pop
js
out
inc
popa
stc
inc
arpl
bound
jno
push
dec
mov
je
das
cmp
cs
mov
mov
pop
andb
test
jno
aas
xor
jae
out
popa
outsl
inc
pop
insb
pop
xor
mov
mov
adc
ret
rcll
xchg
imul
sbbb
mov
pop
gs
jne
bound
push
cmp
ljmp
cmp
cld
jo
negb
dec
imul
sub
outsb
mov
add
pushf
sti
push
in
clc
inc
imul
imul
jp
lret
dec
pop
fsubrs
add
dec
shlb
shll
ja
pop
sub
addr16
das
xor
test
sbb
sti
pop
jne
pusha
and
into
mov
stos
pop
mov
imul
push
mov
ret
push
mov
jno
insl
push
push
lret
sub
xor
or
std
xor
fs
mov
rcrl
fs
pop
xchg
data16
mov
pop
dec
bound
sbb
lea
push
cmp
dec
cwtl
jl
push
mov
sbb
ficompl
arpl
cmp
lahf
sbb
mov
sbb
mov
inc
scas
insb
es
mov
fwait
push
jno
pop
gs
mov
adc
fistpl
jne
jae
cmp
movsl
inc
imul
loopne
and
and
mov
cmp
sbb
cmp
outsl
xor
popa
dec
xchg
xchg
pop
arpl
and
pop
outsb
js
or
dec
ds
cmp
insl
sbb
xor
shrl
out
aas
stos
push
lret
outsb
jne
pusha
lahf
mov
push
cli
inc
icebp
sti
xlat
sti
mov
stc
stc
xor
mov
je
jno
rcl
mov
clc
push
mov
pop
sbb
jp
push
dec
sbb
dec
dec
xlat
das
xor
dec
dec
dec
push
inc
stos
add
in
adc
push
stos
push
outsl
pusha
std
sub
ss
bound
aam
xor
xchg
sub
test
and
int3
imul
test
xor
stos
mov
out
aad
jb
push
push
movsl
repz
ss
std
push
cmp
aas
pop
mov
insl
jae
sbb
movsl
mov
aad
push
insl
mov
sub
outsl
rcrl
dec
dec
push
push
ret
mov
cmp
cmp
push
popa
bound
jne
ds
inc
jno
mov
ljmp
lret
xor
sar
push
dec
inc
cmp
popa
mov
loop
inc
imul
jb
lock
and
inc
and
xchg
daa
xor
fists
or
push
pop
cltd
sub
insl
out
dec
sti
pop
lods
std
inc
inc
inc
inc
inc
dec
cmp
daa
jmp
imul
or
adc
clc
insl
subl
daa
sbb
dec
dec
mov
clc
pop
cwtl
sub
add
xchg
add
outsl
sub
icebp
jne
sub
pop
mov
daa
sub
push
cmp
test
adc
jo
shrb
mov
push
imul
clc
int
xor
xchg
imul
xor
sub
pop
sbb
dec
data16
mov
jecxz
cmc
sub
sub
and
push
loopne
das
mov
sbb
push
cmp
clc
insl
sub
and
add
das
imul
in
sub
mov
xchg
dec
mov
dec
push
dec
sbb
sbb
dec
sub
cmp
push
loopne
or
jge
sub
pop
aaa
and
or
cmp
mov
insl
mov
push
jo
pop
xor
xchg
loope
dec
push
pop
aad
lea
pop
sarl
push
or
outsl
mov
dec
cmpsl
pusha
cmp
mov
mov
sub
cmc
mov
test
je
and
ljmp
es
sub
and
sub
xor
xor
insl
xor
mov
pop
push
js
jmp
cmp
imul
daa
das
sub
sbb
imulb
pop
pop
pop
inc
pop
mov
icebp
dec
and
pop
sub
mov
push
bound
sarl
stc
outsl
scas
sub
sub
sbb
adc
mov
push
inc
mov
test
xchg
mov
mov
xor
shrl
insl
shll
jno
xor
sub
and
pop
mov
test
jne
popa
sbb
xor
sub
dec
cs
push
xor
popa
nop
sub
sbb
push
pop
xor
arpl
sub
pop
pop
cmp
icebp
ret
std
pop
dec
jae
xor
or
iret
adc
lret
cmpl
daa
sub
daa
and
sub
lods
cmp
pop
sub
lds
pop
sub
xor
pop
jl
xor
push
pop
das
sub
in
jecxz
lock
test
sub
repz
insl
xchg
jle
popa
sub
cmp
inc
and
xchg
and
cs
cmp
sbbb
xor
sub
pop
outsb
negl
pusha
enter
pop
xchg
outsb
fistpl
in
data16
sub
mov
dec
push
push
scas
jo
fisubs
ja
sbb
dec
push
imul
dec
mov
add
or
jb,pt
aas
cmc
dec
outsb
xchg
sbb
cmp
lea
ja
jb
fdivr
flds
jae
inc
lds
inc
pop
mov
dec
arpl
lods
mov
inc
sbb
mov
inc
xchg
cs
dec
gs
cs
sub
sbb
mov
pop
xor
ja
inc
pop
fdivl
scas
cmc
inc
pop
imul
sbb
cmp
fs
mov
or
pop
fistpl
dec
cmp
push
pop
popa
call
dec
testl
push
inc
test
roll
jo
mov
mov
add
inc
fistps
push
xlat
push
arpl
mov
outsl
dec
scas
or
sub
imul
aas
lods
jno
mov
imul
fstl
bound
inc
into
inc
std
ret
jnp
pop
or
aas
lock
push
mov
inc
arpl
lds
cmp
ret
outsl
out
ds
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
push
push
dec
push
push
iret
es
dec
fisubs
dec
inc
sub
and
pop
shll
jg
outsb
or
je
inc
cmp
cmp
fs
jbe
aas
outsl
mov
scas
in
addr16
push
mov
cmp
cmp
lods
insb
dec
jne
mov
andl
or
jecxz
jle
jp
pop
pop
inc
imul
fsubp
movsl
jecxz
cmp
pop
push
outsl
inc
imul
add
cmp
cmp
ret
js
inc
xlat
dec
je
sub
jae
decl
push
jb
push
and
ds
dec
fmuls
cld
ds
inc
sub
imul
add
aaa
dec
inc
pop
cmp
mov
sub
jb
inc
cmp
push
aas
sub
jbe
jmp
outsl
cmp
add
xchg
sub
push
mov
ret
imul
jb
dec
jg
cli
movsl
push
add
std
incb
xor
std
subb
inc
xor
or
sub
cmpsb
mov
push
and
push
leave
repz
and
and
sub
fistpl
outsb
mov
inc
pop
mov
lret
mov
sub
push
push
orb
std
dec
shl
xlat
push
out
inc
insl
mov
inc
xchg
dec
sbb
jo
pop
cs
add
mov
inc
push
aaa
outsl
bound
pop
xor
insb
push
sub
push
rolb
inc
xchg
xchg
arpl
pop
repz
negl
push
out
dec
adc
push
testl
sub
pusha
mov
icebp
scas
or
imul
jecxz
xor
xchg
sub
dec
xchg
sub
std
mov
add
or
or
incl
sub
sub
sub
sub
sub
sub
mov
adc
and
daa
sub
sub
inc
sub
clc
pop
sub
xlat
sub
sub
das
das
decl
js
xchg
sub
das
out
sub
das
aaa
cs
sub
fs
mov
mov
jg
xor
sub
sub
xor
pop
xor
xor
push
sub
or
adc
and
aas
xor
xor
jge
test
xchg
sub
pushl
xor
sub
in
out
imulb
xor
pop
bound
imul
js
sub
xor
xor
xor
cs
jmp
xor
xor
xorb
das
mov
mov
or
inc
xor
pop
xor
mov
xor
mov
xor
call
xor
ss
out
xor
pop
aaa
and
ss
out
pushl
aaa
inc
jl
mov
out
adc
xor
cmp
xor
lcall
aaa
or
cmp
in
pop
cmp
aaa
call
ss
lock
pop
cmp
cmp
cmp
sbb
incb
sub
sub
sub
pushl
sub
sub
imul
sub
sub
sub
sub
sub
fsubrs
icebp
sub
sub
push
pushl
sub
mov
xchg
cs
sub
sub
loopne,pn
cli
sub
decb
sub
cvttps2pi
push
jno
das
inc
sub
cs
sub
adc
das
jle
cmpsl
cs
icebp
sub
das
and
adc
lcall
xor
repnz
int
stc
xor
xor
das
int3
xor
xor
lds
cld
ffreep
xor
das
add
inc
xor
imul
mov
in
xor
das
cld
mov
xor
aaa
int
aam
jecxz
xor
cmp
xor
push
xor
mov
mov
xchg
ss
xor
cmp
pop
xor
cmp
xchg
pushf
aaa
mov
cmp
xor
jg
aaa
xchg
cmp
cmp
cmp
or
cmp
push
cmp
jp
int
jge
test
xchg
xchg
aaa
enter
in
cmp
cmp
sub
cld
lcall
sub
sub
sub
sub
sub
xchg
sub
mov
sub
sub
cs
sub
or
sub
push
sub
cs
mov
sub
das
fsubrs
pop
repz
cld
mov
jp
xchg
sub
das
repz
divb
add
and
and
xor
clc
sbb
dec
das
insb
sub
subl
xor
das
mov
mov
icebp
cs
xor
xor
dec
fildll
subl
fwait
sub
jg
pop
clc
xor
enter
fdivl
jmp
repnz
xor
xor
mov
dec
xor
movsb
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
in
xor
mov
and
sub
imul
sbb
ss
xor
mov
aaa
pop
ss
pop
xor
xorl
cli
or
inc
aaa
aas
loop
pop
cmp
aas
cmp
out
cmp
cmp
shl
push
cmp
mov
cmp
cmp
cmp
hlt
ljmp
push
aaa
clc
xchg
and
jge
push
sub
gs
ret
jae
popf
sub
sub
and
xor
ss
pushl
clc
lret
sub
push
sub
subl
loope
add
dec
dec
cs
sub
sub
mov
push
xchg
mov
cs
sub
xor
es
mov
cmp
xor
sub
lock
xor
cs
xor
fucomip
das
inc
sub
fs
das
fwait
sub
arpl
lret
idivb
mov
sub
sub
cmp
pop
xor
cmc
dec
push
mov
xchg
mov
mov
xor
sub
and
movsl
ss
jle
cs
xor
xor
mov
mov
xchg
ficoms
xor
xor
cmp
jno
js
jg
test
pop
jg
das
stos
mov
add
adc
insl
xor
jg
hlt
xor
insb
shll
adc
mov
pushl
shlb
pop
jg
cmp
mov
dec
xchg
std
add
sub
mov
stos
dec
sub
imul
test
sub
sub
ljmp
std
das
xchg
sub
shrl
jmp
cmc
cs
arpl
or
xor
popa
xchg
xor
sub
cmp
aas
cmp
mov
cmp
cmp
ss
cmp
cmp
cmp
cmp
ss
cmp
push
cmp
cmp
cmp
outsl
cmp
cmp
aaa
fnstsw
cmp
cmp
cli
outsl
xchg
pop
leave
std
sub
sub
rol
ljmp
sub
sub
outsb
sub
test
in
ljmp
stos
sub
sub
sub
sub
subl
jno
jge
mov
das
cld
ret
xlat
sub
cs
adc
fisubrl
sub
inc
sub
cs
sub
pop
sub
jns
xchg
das
lret
sub
lock
mov
add
das
push
cs
sub
xchg
push
jle
add
sub
js,pn
xchg
mov
outsl
xor
das
sub
xor
pushl
cwtl
sub
xor
das
sub
xor
das
adc
xor
popf
inc
test
jg
bound
jnp
mov
mov
sti
xchg
mov
addr16
sbb
mov
ret
das
fnsave
fistps
ljmp
cmp
subb
xor
sub
clc
int
dec
jg
jnp
ljmp
sub
cmp
fildl
add
outsl
outsb
dec
gs
cs
outsl
in
gs
unpckhps
popa
imul
dec
push
dec
dec
test
jg
push
dec
inc
push
push
inc
push
inc
pop
jae
fs
pop
outsb
pop
cmp
mov
mov
ja
jb
pop
dec
imul
mov
outsl
ja
push
push
outsl
push
outsl
popa
insl
sbb
arpl
out
insl
adc
jg
cs
ja
in
ljmp
arpl
fs
mulb
and
jo
jae
arpl
arpl
imul
dec
and
je
sub
popa
bound
and
adc
jo
pop
mov
xchg
arpl
hlt
vmwrite
data16
mov
jbe
pop
adc
jo
adc
push
fnstcw
mov
sbb
je
and
sub
push
gs
add
cmp
push
aas
jb
outsb
cmp
fistpl
jae
outsl
sbb
push
insl
adc
push
jae
mov
iret
imul
inc
adc
popa
gs
jg
bound
test
inc
gs
popa
push
ds
pop
pop
mov
inc
adc
dec
adc
data16
adc
dec
jmp
inc
fs
pop
aaa
fstpt
andl
jne
lock
push
jg
inc
inc
xor
test
ret
sbb
inc
inc
mov
in
fisttpll
inc
jb
adc
sub
sub
cmp
push
leavew
mov
inc
push
fwait
pop
imul
or
dec
pcmpeqw
fbstp
xor
neg
jb
movd
or
test
fdivrs
jae
xchg
insl
jbe
popa
sub
sub
hlt
outsl
dec
push
fidivrs
inc
daa
push
sti
imul
mov
sti
imul
dec
insl
insb
dec
push
pop
insl
jae
addr16
mov
gs
dec
imul
jp
inc
xor
dec
stc
testb
xchg
add
pop
xor
xor
xor
outsb
cli
pushl
push
mov
cmpb
cmp
outsb
or
adc
pop
pushf
out
pop
nop
adc
nop
sub
inc
add
pop
scas
mov
mov
pop
ja
jb
jbe
jno
jae
add
push
xchg
das
pop
fwait
out
sti
add
pop
add
pop
jbe
add
push
aad
fistpll
inc
xor
or
mov
push
les
fbstp
jmp
push
add
popf
add
cmpsb
xchg
out
mov
in
xchg
xchg
add
push
pop
add
mov
pop
lret
sbb
add
pushl
js
add
adc
pop
pop
aaa
inc
in
lret
movsb
mov
ljmp
mov
loopne
dec
add
inc
jb
ds
inc
mov
lcall
push
leave
push
popf
jg
fisubs
adc
adc
xchg
add
add
andl
add
pop
push
add
dec
call
add
lods
and
and
add
lahf
cld
sub
add
incl
rolb
nop
add
cmp
add
sub
cltd
shlb
jns
cltd
incl
stc
add
push
sbb
adc
xchg
add
push
test
incl
addb
imul
jg
sub
sbb
dec
adc
jae
mov
add
or
incl
push
add
jb
jbe
sub
inc
adc
add
add
mov
adc
add
gs
std
scas
cld
pushl
imul
outsb
addr16
or
gs
data16
add
in
push
push
inc
insb
jne
push
and
fdivrs
or
jp
push
dec
sar
lods
push
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
sub
ds
outsl
jbe
inc
js
and
jo
dec
popa
insl
in
xchg
lods
std
inc
inc
or
jb
test
cmp
testb
outsb
or
dec
fs
outsl
mov
push
add
jo
outsb
outsw
fstpl
adc
add
xchg
insb
fstpt
adc
adc
lods
jl
in
inc
mov
and
fistpl
fldenv
fistpll
push
xchg
jae
sti
aaa
in
imul
fs
dec
insb
jb
jns
ja
pop
sbb
fldl
je
adc
or
mov
icebp
gs
outsl
outsl
insb
or
or
push
lock
outsl
mov
adc
je
ss
data16
adc
push
xor
inc
fisubs
jl
mov
jmp
adc
pop
adc
pop
or
in
aaa
js
call
leave
adc
mov
mov
mov
add
popf
or
and
jg
mov
add
mov
jp
call
and
pushl
push
sbb
ljmp
or
repz
and
mov
inc
sub
push
push
jns
aaa
xor
outsl
dec
out
ud0
inc
xchg
fcmovnu
mov
sbb
xchg
sbb
dec
mov
fnstenv
xor
fnstenv
ud0
push
or
icebp
adc
add
insl
fnstenv
push
test
lret
mov
es
pop
push
push
fistl
add
out
movsl
dec
mov
insl
fcomi
insl
mov
adc
or
push
mov
pop
mov
sar
or
out
mov
push
insl
fstpt
addr16
repnz
pop
and
jbe
or
pop
data16
gs
jo
pop
mov
sub
adc
testb
pop
je
wbinvd
pop
insw
and
lods
lahf
or
lea
push
sub
and
mov
fwait
addb
inc
sub
arpl
mov
pop
arpl
je
subb
insl
mov
push
xchg
or
insb
or
aas
ficomps
insl
bound
xchg
ja
or
out
leave
gs
push
sbb
outsb
arpl
sbb
inc
inc
js
inc
jb
dec
aam
jnp
jmp
jo
outsb
je
je
insl
mov
mov
jae
sbb
ret
inc
insl
sbb
inc
outsb
add
or
imul
jo
or
data16
insl
xchg
push
out
ljmp
push
fiadds
dec
fs
or
ljmp
xchg
lret
gs
cmc
xor
cmp
pop
mov
imul
xchg
enter
add
sbb
pop
lods
dec
adc
pusha
add
add
add
add
mov
ss
lock
or
inc
add
mov
cmp
add
xor
sbb
add
adc
mov
dec
ss
aaa
dec
inc
lea
jnp
and
or
mov
sub
add
ss
xor
nop
fists
ret
das
pusha
jb,pn
popa
je
mov
insb
push
cs
insl
lret
push
add
fidivs
jae
or
repz
lock
fimuls
add
add
inc
mov
incl
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
