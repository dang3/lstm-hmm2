mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
cmp
inc
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
in
mov
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
mov
rep
pop
push
and
mov
fnstsw
mov
push
push
lea
and
push
pop
or
sbb
out
mov
nop
or
cmpsb
cld
dec
push
nop
mov
jmp
and
pop
add
adc
stos
int
mov
xchg
sbb
xlat
xchg
or
xor
sub
mov
push
mov
dec
pop
jmp
popf
sub
cs
das
jnp
and
mov
pop
test
sub
sbb
mov
xor
sub
daa
or
je
jne
imul
add
je
mov
mov
in
add
or
mov
inc
fsubrs
lcall
adc
mov
xlat
popa
jle
fxch
push
pop
push
pop
mov
push
jmp
dec
and
std
in
mov
push
push
leave
push
sub
mov
das
js
roll
mov
lcall
lds
adc
test
clc
push
cmpsb
sbb
cld
dec
push
inc
or
jae
loop
test
icebp
jo
mov
cs
and
stos
push
enter
adc
lret
cmp
mov
inc
mov
cmp
fimuls
xor
mov
xor
mov
pushf
addr16
fwait
imul
sub
les
arpl
ret
sbb
mov
fcmovnb
push
insb
rdpmc
fildll
ret
add
fiadds
or
mov
xchg
scas
and
adc
cmp
psllq
and
out
mov
sbb
push
or
sub
pop
ret
or
push
mov
sbb
cmp
xor
inc
inc
cmp
inc
stos
imulb
sbbb
push
inc
repz
inc
jmp
inc
sbb
aad
cmp
xor
add
inc
incl
lea
ret
std
sub
push
in
xor
sbb
and
gs
jmp
cmp
push
xor
ret
cs
cmp
pusha
push
adc
or
ss
or
xor
test
add
push
cmp
push
push
cmp
add
xchg
add
js
jb
pmaxub
adc
in
inc
xlat
jl
pop
jp
push
push
addl
lret
fnstcw
repnz
add
or
fcompl
sub
dec
iret
xor
adc
pop
hlt
mov
mov
cmpsb
fnstenv
test
or
inc
sub
or
decl
push
and
or
lcall
fs
test
popa
mov
lahf
mov
sbb
cwtl
and
cmpsl
popa
xlat
fs
xor
xchg
jecxz
sub
push
mov
or
iret
dec
inc
push
adc
test
adc
adc
jbe
dec
lods
in
sbb
cmp
xchg
add
mov
cli
xchg
add
sub
pop
cmpsb
mov
sar
cld
or
inc
in
or
xor
dec
jl
push
push
add
cmpb
jne
test
jle
push
fwait
jnp
pop
dec
jns
add
icebp
lahf
adc
cld
or
jmp
std
rorl
leave
mov
pop
aaa
nop
mov
leave
sbb
lea
fcmovnbe
loopne
cwtl
nopl
xor
inc
mov
cmp
lea
shl
lret
pop
pop
sarl
leave
arpl
ja
push
mov
adc
pop
jb
std
loopne
sbb
ret
sub
bound
xor
shrl
push
push
into
jge
adc
mov
xor
lret
shlb
jecxz
push
fisttpll
jne
aaa
mov
out
lods
jecxz
rcrb
int3
fisubrs
mov
sbb
adc
inc
sbb
shr
mov
mov
fmuls
push
push
lea
push
shl
gs
jle
ja
mov
pusha
fcomps
jmp
scas
inc
stos
mov
push
rep
mov
sti
xchg
stos
movsl
xchg
xchg
sahf
jmp
sbbb
push
inc
fadd
xor
int3
and
jmp
out
lea
and
ficompl
loope
sbbw
adc
hlt
or
lea
loope
lea
sbb
xor
and
into
and
mov
cmp
loop
cwtl
popa
rclb
sbb
loope
adc
pop
and
aad
dec
sbb
inc
ljmp
xchg
inc
mov
popl
dec
push
add
lea
adc
jbe
and
sbb
fnstcw
adc
sbb
icebp
test
sub
add
mov
test
orl
xchg
push
rolb
mov
sub
imul
icebp
xlat
push
push
pop
push
scas
pop
pop
popf
xor
mov
sbb
jb
fstl
dec
adc
adc
test
adc
push
sbb
pop
inc
mov
je
mov
or
sub
imul
dec
sub
push
xchg
xor
adc
in
add
add
push
jl
or
sbbl
push
push
push
xchg
rcrl
and
pusha
popa
in
and
jbe
and
int
xor
test
xchg
xor
inc
iret
mov
insl
fldl
cli
or
or
imul
into
xchg
xor
push
or
pop
adc
adc
pop
xor
ficomps
jne
sbb
aaa
mov
pop
fdivl
or
push
data16
mov
mov
mov
xchg
sbb
cld
jne
inc
add
push
cmp
sbb
add
icebp
ret
cs
ds
mov
lcall
push
and
rorl
iret
dec
inc
or
jb
cwtl
inc
outsl
jo
inc
jb
xor
inc
and
jl
mov
ret
push
sbb
sbb
rorl
push
adc
jg
or
orb
cmp
addr16
mov
dec
adc
pop
cwtl
movsl
sub
mov
sub
sub
pop
and
out
push
sbb
jecxz
xor
enter
call
pop
and
sbb
stos
add
adc
ror
sbb
incl
adc
or
dec
ss
xchg
int
ret
fs
inc
lock
sub
jbe
push
fdivrl
pop
or
lock
mov
xchg
sbb
js
add
add
aas
and
addr16
fs
push
pusha
push
sbb
xchg
cli
pusha
inc
sbb
fcmovnbe
add
adc
clc
mov
push
or
sub
pop
dec
inc
popa
pusha
cltd
xor
enter
fs
jge
adc
test
push
and
data16
jne
sbbl
push
js
pop
push
cli
out
iret
aam
sbb
push
sbb
ret
rolb
pop
inc
pushf
pusha
fimull
scas
adcb
mov
in
pusha
inc
push
lock
leave
adcb
scas
cmpb
mov
push
pop
insb
mov
and
test
pop
or
jle
sub
jb
gs
insb
push
mov
pushf
mov
dec
mov
pop
cmp
out
jmp
jo
add
adc
rcrl
and
mov
mov
movsb
pusha
push
ja
shrb
push
push
and
add
push
jp
dec
sbb
push
shl
lock
clc
pusha
out
std
fmull
cmc
adc
cmpl
push
lahf
cltd
mov
sbb
mov
xor
ret
xor
int
jo
and
push
push
push
cmpl
and
fildll
cmp
sbb
mov
or
push
fdiv
clc
dec
shl
pop
push
repnz
adc
andb
shrl
inc
cltd
sub
rorl
outsl
sar
out
sbb
mov
lcall
test
pop
sub
outsl
fs
mov
or
inc
pusha
ret
movups
fwait
adc
push
dec
jbe
or
xor
adc
inc
dec
in
nop
mov
and
mov
adc
sbb
mov
jno
xor
loopne
xchg
lods
xchg
cmp
push
dec
xor
mov
fwait
push
pushf
sub
inc
add
mov
pusha
rcl
and
push
pop
mov
in
sti
mov
xchg
cmp
cmp
cmp
pushf
sub
mov
jl
in
add
adcl
sahf
adc
adc
sbb
or
sahf
adcl
dec
add
xchg
and
sbb
loope
iret
adc
dec
add
lret
cmp
fsub
dec
push
push
add
xchg
xchg
xchg
push
aam
lock
inc
fnstenv
rolb
and
and
fdivl
lock
add
sub
aad
test
jo
frstor
das
pusha
push
push
add
cli
out
push
push
js
sarb
mov
push
add
mov
xor
and
sbb
xor
ljmp
out
or
fcoml
roll
test
cld
ljmp
jb
push
jns
es
aad
shlb
jle
in
pop
ror
sub
cmp
push
add
inc
add
sbb
std
xchg
or
push
movaps
cmp
sub
xor
mov
int
arpl
sub
xchg
imul
jge
or
lods
dec
pop
push
jo
movsl
mov
dec
push
push
cmp
sti
jbe
adc
mov
fwait
lret
out
add
add
repz
xor
insb
xor
ja
insl
and
test
movb
mov
inc
sbb
sub
cmp
push
ficoml
xchg
mov
cmp
sar
sub
dec
jae
popf
je
xchg
or
pop
repnz
add
icebp
push
pop
xlat
inc
iret
mov
push
lret
ss
int
sub
ljmp
movsb
and
or
xorb
sbb
cmp
mov
push
mov
rorl
ss
adc
divb
call
rcl
push
push
dec
arpl
add
push
cs
or
leave
jae
daa
jne
push
xor
test
pop
cltd
idiv
mov
mov
add
ret
mov
add
cmp
jb
push
mov
inc
inc
cmp
jg
arpl
adc
xchg
push
or
rolb
mov
jmp
rolb
inc
inc
int3
enter
inc
inc
sub
inc
inc
lods
test
mov
pushf
cwtl
xchg
nop
inc
inc
inc
inc
mov
inc
inc
jl
je
inc
inc
inc
inc
insb
push
inc
inc
pop
push
push
dec
inc
inc
inc
inc
dec
inc
inc
cmp
inc
inc
inc
cmp
sub
inc
inc
inc
sub
sbb
inc
inc
inc
sbb
or
inc
inc
inc
or
cld
inc
repz
jl
clc
inc
rolb
mov
and
out
inc
nop
inc
xchg
cwtl
pushf
and
and
mov
and
and
inc
sahf
and
inc
enter
inc
inc
aam
fmull
call
inc
mov
sarb
test
aad
fstpl
fcoms
push
xor
ret
and
nop
lods
xor
mov
ret
push
xor
add
in
insb
rolb
mov
ja
stc
mov
jae
std
call
cld
ljmp
inc
orl
push
fcoml
inc
dec
int3
sub
mov
or
mov
aam
xchg
popa
cmp
cltd
mov
mov
and
dec
push
inc
mov
jg
inc
xchg
lea
test
push
xor
pushf
push
add
in
icebp
or
add
mov
jne
cmpb
jne
inc
or
add
or
repnz
jbe
aam
dec
pop
cli
repnz
in
movzwl
mov
push
sub
jbe
jmp
push
pop
pusha
push
push
and
push
imul
test
inc
in
mov
mov
mov
int3
and
pop
mov
cs
fs
adc
add
pop
jnp
sub
push
sbb
lock
inc
lahf
loop
pusha
or
aam
adc
mov
and
mov
ret
stos
mov
push
and
pop
fsubr
xor
jo
loope
push
popa
jb
mov
cmp
adc
inc
lea
adc
test
or
into
int3
add
in
adc
or
lea
add
xor
and
pop
xchg
or
pop
add
push
push
andb
cmp
je
add
add
pop
cs
cmpsb
imul
js
lcall
test
lret
fwait
cmpsb
fsubr
lcall
dec
mov
push
fwait
cmpsb
imul
jb
addr16
adc
adc
add
adc
fldt
pop
or
or
sbb
movsl
leave
adc
xor
push
lea
or
jbe
xlat
or
das
add
mov
xchg
jp
nop
xor
adc
add
pop
mov
sbb
comiss
repz
xlat
jne
xlat
sub
pop
sub
adc
aaa
inc
xlat
sub
pop
out
arpl
movhps
xlat
jne
xchg
pop
sbb
xchg
daa
push
subl
arpl
lcall
inc
push
adc
sub
or
scas
imul
mov
scas
imul
jno
mov
mov
add
mov
jmp
cmpsb
out
movsl
addr16
mov
adc
int
dec
or
push
scas
arpl
mov
cli
or
scas
jmp
dec
mov
fisubrl
cmpsb
imul
cmpsb
imul
sub
xor
dec
into
les
xchg
dec
in
add
adc
shll
jp
pop
daa
and
cmpsb
jae
cmpsb
adc
hlt
dec
inc
add
lcall
mov
imul
and
shrl
cmp
out
and
inc
add
add
inc
adc
pop
inc
or
or
xchg
xor
xor
sbb
add
rolb
bound
add
push
dec
inc
jmp
rclb
cmp
add
imul
jmp
add
jnp
add
imul
imul
imul
mov
mov
adc
mov
nop
add
jo
pop
sldt
lock
and
sbb
mov
dec
xor
inc
enter
xor
and
jne
and
aas
xor
cs
shll
adc
lcall
clc
repnz
xchg
pop
div
stos
rolb
in
xor
loopne
imul
dec
ja
mov
sahf
pop
dec
rcrl
sub
and
add
push
xor
add
sub
xchg
sbb
inc
jecxz
in
repz
loopne
sub
inc
jb
add
nop
or
inc
mov
pusha
pop
mov
dec
xchg
dec
and
push
pop
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
or
and
inc
push
dec
xor
cs
insb
jg
xor
add
lret
ds
inc
push
sbb
add
xor
jg
out
rcrb
into
fmulp
stos
inc
push
mov
std
stc
cli
inc
mov
idiv
std
add
clc
cmp
stc
les
nop
sti
out
sbb
or
mov
mov
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
in
push
ljmp
sbb
sbb
dec
dec
sbb
pop
bound
in
push
sbb
lcall
in
fld
lods
sahf
xchg
movsl
mov
jns
cmpsb
mov
jge
stc
out
mov
test
mov
daa
mov
out
outsl
mov
stos
lods
sahf
mov
xchg
mov
inc
cwtl
aas
cmpsb
dec
pop
bound
mov
inc
inc
lock
lods
in
dec
adc
data16
pmovmskb
or
push
out
dec
xchg
add
lcall
or
std
incl
or
pcmpgtd
insb
add
add
sub
pop
ss
sub
or
push
decb
andl
ss
in
filds
or
mov
sub
add
sub
jae
mov
dec
fwait
or
inc
dec
add
sub
lcall
daa
sub
mov
cmp
pusha
pop
outsl
pop
dec
ja
daa
insl
dec
lcall
xor
in
pop
insl
pop
fcmovne
pop
daa
or
fsts
jg
push
mov
dec
push
push
inc
xchg
test
push
jle
adc
das
jmp
jge
in
repz
clc
push
cld
outsb
idivb
stc
add
sahf
sbb
sti
push
dec
mov
adc
inc
xchg
add
jnp
jg
and
inc
jl
or
or
shrl
dec
ljmp
lock
or
orb
addb
call
scas
inc
sub
sarl
add
push
std
iret
jle
sbb
sti
in
out
sub
daa
pop
lret
loope
sub
pop
pop
sarl
test
dec
dec
addb
inc
stc
push
jge
adc
cmp
fs
idiv
mov
jecxz
inc
jg
adc
push
push
les
out
dec
push
push
movsl
mov
push
test
popa
decl
bt
mov
cmpl
jle
push
loope
decl
in
in
mov
push
or
insb
sub
inc
test
add
xchg
loope
stc
ljmp
stos
dec
dec
fisttps
dec
or
cmc
inc
aas
mov
add
mov
popa
sti
xor
pusha
clc
mull
test
xchg
inc
jecxz
inc
add
xchg
out
in
xchg
jg
mov
repnz
test
pusha
jge
dec
test
cs
add
test
mull
hlt
add
test
pop
test
xchg
inc
push
jp
sbb
sub
loope
ljmp
mov
decl
mov
xlat
arpl
js
dec
stc
into
xchg
ljmp
jle
or
inc
lock
lcall
test
jle
repz
mov
popa
stc
xchg
stc
inc
clc
push
mov
xchg
repz
jmp
cld
int3
xchg
inc
mov
dec
in
inc
insl
mov
adc
dec
in
outsb
ret
jmp
arpl
dec
jmp
aas
fimull
mov
mov
dec
in
jb
jg
sbbb
push
pop
pop
ret
xchg
dec
push
dec
arpl
dec
inc
hlt
arpl
mov
cmpl
aas
jb
push
jecxz
inc
imul
outsl
adc
sti
pop
outsb
lret
mov
push
push
stos
and
arpl
xchg
ffreep
and
jg
insb
pop
dec
dec
push
dec
test
addb
sbb
cmpb
orb
decl
mov
lods
mov
xorl
repnz
in
inc
push
adc
sbb
icebp
aaa
sub
jo
fwait
mov
mull
dec
ja
out
cld
in
out
add
jnp
push
jecxz
adc
xor
sbb
clc
pop
ret
clc
cmpsl
call
jg
sbb
fists
push
jae
mov
push
decb
arpl
xorl
cli
jb
push
out
pop
cmpsl
jg
enter
loope
inc
mov
xchg
push
in
aaa
fdivr
xchg
repz
or
ja
xor
ffreep
jmp
mov
jns
movsb
testl
sub
pop
sub
arpl
or
cmc
insl
out
mov
dec
not
push
dec
out
int
ret
inc
xor
sbb
das
in
clc
mov
sbb
push
pusha
popf
inc
cli
shlb
mov
out
dec
popa
mov
ret
cld
push
dec
cmp
pop
ja
dec
in
ret
pop
popa
leave
mov
dec
mov
jg
gs
imulb
popf
cli
add
gs
or
or
jle
push
inc
pop
cld
pop
arpl
data16
fs
sbb
neg
insb
mov
push
jo
mov
out
inc
inc
fidivrs
push
addb
loope
pop
in
loopne
sbb
cli
jno
ret
testl
mov
cld
in
shlb
mov
loop
sbb
addr16
or
inc
outsl
hlt
mov
inc
jecxz
roll
jae
insl
push
lret
push
jecxz
and
fs
mov
cli
shll
test
gs
test
dec
out
inc
mov
inc
pop
pop
mov
or
js
loope
cli
rorb
pop
jnp
clc
cmp
das
sbb
jle
add
popa
in
mov
outsl
das
mov
inc
adc
je
aaa
pop
clc
dec
sti
xchg
hlt
daa
arpl
mov
or
sbb
repnz
std
jno
sbb
out
dec
dec
aaa
pop
push
cmp
inc
or
pop
xchg
test
xchg
mov
pop
xlat
jl
pop
sub
out
shrb
sar
dec
push
notl
pop
out
xchg
cmp
cli
adc
in
outsl
mov
inc
cmpsl
outsb
sub
xor
cmp
sub
push
out
jns
std
hlt
in
add
or
xor
js
das
mov
pop
mov
add
out
jmp
scas
insb
mov
arpl
dec
cli
addb
sub
fbstp
int
in
mull
push
pop
mov
jo
push
neg
jns
loop
sub
jns
jns
jmp
fnstsw
sbb
xor
pop
jg
dec
dec
fldcw
mov
lods
lods
ljmp
arpl
pop
lret
fiaddl
mov
xorb
test
xchg
cmp
out
xorl
sar
or
lret
cli
or
xor
jo
adc
neg
std
repnz
jecxz
arpl
icebp
in
jle
jo
jecxz
adc
lret
shrb
push
jmp
stc
int3
sti
fstp
cli
outsl
push
stos
push
mov
mov
cmpl
mov
inc
out
inc
cmp
dec
or
loop
pop
sti
pop
pushf
mov
in
jecxz
ja
out
sbb
mul
das
aas
xor
cmpsl
outsl
in
inc
out
incb
fistl
pop
push
jg
out
sbb
cli
das
stos
pop
cs
mov
in
pop
popa
sti
lahf
pop
fwait
dec
outsl
mov
mov
jb
mov
pop
lret
or
xlat
xor
jnp
xchg
out
inc
data16
or
in
xor
in
iret
out
mov
sub
arpl
or
lods
out
test
outsl
add
lahf
dec
inc
xchg
shr
add
loopne
and
or
sbb
cwtl
out
ja
packsswb
int3
or
std
push
orl
sbbl
clc
jnp
fwait
gs
push
test
jg
mov
mov
out
rol
in
dec
les
xchg
fildl
in
adc
xor
repnz
out
mov
mov
xor
mov
gs
arpl
jmp
pop
dec
jg
rcr
pushl
aas
test
inc
in
dec
ret
ds
ret
push
mov
cmc
test
repnz
cmc
mull
out
lahf
cmpb
outsb
xchg
das
or
filds
imul
xor
in
cmp
push
inc
jp
or
xor
xorl
jg
insb
adc
add
enter
in
mov
jecxz
jl
idiv
js
stc
stc
jp
xchg
dec
mov
inc
in
dec
dec
push
or
out
sub
ret
hlt
dec
cmc
lret
in
jb
dec
out
mov
hlt
mov
jl
push
add
aaa
pop
incl
or
aad
loop
shll
stc
gs
jmp
in
test
fsubrl
in
inc
icebp
sub
adc
lret
in
sti
icebp
test
imul
push
outsb
jecxz
sti
fwait
jno
pusha
cmp
mulb
cld
or
jecxz
fisttps
dec
pusha
je
adc
cwtl
movsl
lea
push
and
xchg
sbb
mov
insl
pop
cld
push
or
dec
into
call
incl
push
push
xor
jbe
jnp
add
mov
mov
imul
rol
add
leave
in
out
ljmp
pop
push
pop
xchg
loopne
lock
out
xor
jle
daa
push
bound
ljmp
jmp
or
decb
mov
leave
sbb
icebp
mov
fidivl
sub
inc
incl
jmp
loopne
mov
fidivrl
push
insl
xor
push
xchg
sbb
sub
jb
fstl
push
into
popf
cmpl
or
out
mov
pop
xchg
pop
push
sbb
ret
mov
test
inc
ret
and
pop
push
jnp
std
insl
repz
test
xchg
jg
push
xor
stc
rolb
add
push
adc
shll
add
icebp
and
in
roll
pop
mov
sti
mov
push
loop
aas
cwtl
les
add
add
push
and
or
pop
daa
mov
ret
loopne
or
add
mov
sar
mov
push
jle
outsl
dec
adcb
int
inc
pop
add
es
or
push
outsb
cld
ss
insb
cmp
push
mov
xchg
mov
cmp
xchg
cld
cmp
outsl
add
aaa
dec
loopne
fdivrp
jae
jle
add
sbb
xor
pop
pop
popf
inc
jmp
shll
push
mov
cld
cs
jl
inc
push
mov
or
jg
dec
inc
pop
jo
and
std
dec
or
incb
jae
lcall
inc
jmp
dec
loop
sti
dec
insl
adc
mov
aaa
fimull
or
outsb
push
cmpsl
fistpll
inc
das
icebp
cli
pop
push
push
mov
idivl
mov
or
daa
and
xor
push
cmp
rcrl
test
aad
push
ret
das
bound
xchg
movsl
fdivp
mov
arpl
jns
cmpl
pop
push
or
add
jg
jnp
shl
leave
mov
das
outsb
adc
jnp
cmp
push
hlt
push
dec
adc
insl
loop
std
call
xor
clc
shlb
lock
in
mov
mov
popl
mov
pop
adc
aaa
cmc
das
sti
jno
push
push
sti
sub
sub
iret
bound
jge
sbb
mov
push
jbe
pop
jb,pt
mov
or
std
hlt
ljmp
add
clc
das
imul
xor
push
push
or
sarb
and
insl
push
jno
cmp
add
imull
adc
arpl
pushf
pop
mov
xor
add
jne
jns
adc
out
mov
dec
stc
xor
shl
or
fbstp
ret
test
clc
outsb
pop
adc
cli
xor
jae
nop
pop
push
hlt
jmp
jmp
xor
jno
sbb
mov
push
stc
adc
testb
push
add
out
push
arpl
aam
jle
xor
outsl
cmp
lcall
sub
jae
cmp
push
dec
mov
lds
xor
inc
cmp
add
mov
arpl
ret
lahf
fisttps
cs
adc
cmp
dec
divl
in
fdivrp
es
pop
pop
sarb
leave
cmp
add
push
push
pop
push
pop
jg
mov
pop
notb
push
jmp
clc
clc
stc
out
pop
mov
lock
test
xchg
mov
push
and
xchg
add
push
dec
fs
in
add
dec
in
aam
loop
pop
sbbl
mov
adc
stc
lds
mov
xorb
in
pop
ja
fstpt
pop
out
outsl
add
add
mov
loope
dec
dec
dec
push
dec
test
daa
jg
das
icebp
mov
lahf
std
test
xchg
cmp
outsl
pop
test
incl
xchg
xchg
xor
or
xorl
loopne
jno
loop
jle
add
movsl
inc
arpl
outsl
shrl
jmp
cmc
add
mov
les
inc
mul
push
dec
cmc
mov
aad
outsb
sub
pshufw
xchg
scas
dec
insl
or
pop
or
rcrl
jp
jecxz
add
mov
jecxz
std
adc
test
test
cmp
outsb
sbb
popl
push
dec
or
pop
sbb
lsl
pop
cld
inc
in
mov
cmp
out
insl
jl
idiv
jno
stos
sbb
addb
add
mov
in
jle
pop
mov
pop
insb
push
mov
aaa
push
add
push
sti
pushf
pop
test
ss
jg
shr
std
outsl
cmp
loop
or
jmp
outsb
arpl
repnz
insb
fisttpll
fcmovnb
cmpb
cmp
cmp
lods
incl
mov
add
xchg
out
xor
or
les
test
aaa
pop
or
or
incb
dec
test
jecxz
test
outsl
mov
call
push
movsl
jae
dec
xchg
cli
lea
dec
out
cld
jmp
jbe
xchg
dec
jecxz
cld
std
test
test
mov
inc
add
mov
imul
pop
push
dec
loopne
ss
inc
mov
pop
mov
dec
test
push
mov
ja
inc
pop
out
mov
cmp
mov
jmp
je
xchg
jb
cs
xchg
xor
jno
fcomip
test
lret
test
cmp
orl
filds
int
add
hlt
jmp
test
xchg
jb
mov
ljmp
pop
mov
adc
dec
add
fistpl
test
mov
cmp
pop
out
xor
in
inc
add
jae
jno
xor
xor
imul
mov
fisttps
js
xor
dec
roll
dec
push
mov
aaa
or
mov
loope
in
sti
xchg
movzbl
ret
inc
add
je
insl
pop
push
out
xor
xor
pushl
out
push
in
xor
fldt
or
xor
push
out
adc
icebp
ret
fnstcw
lret
xchg
test
dec
mov
jno
or
sbb
cs
cwtl
inc
add
push
or
mov
insl
add
xchg
pop
out
aaa
cld
aaa
mov
or
add
or
push
out
ss
or
aaa
repz
add
aas
in
test
cld
push
xorb
inc
add
jle
adc
or
sbb
mov
inc
pop
jg
addl
pop
jno
out
adcl
sti
jno
test
adc
jg
pop
sbb
add
test
mov
incl
inc
add
xchg
inc
xor
pop
loop
pop
adc
outsl
in
test
fistpll
dec
ds
leave
loopne
add
mov
pop
lcall
shrb
fildl
ret
test
jecxz
aaa
mov
aaa
call
inc
add
das
cmp
xchg
pop
in
lret
mov
test
stc
xchg
dec
inc
sbb
jo
clc
xchg
xorb
xchg
mov
out
std
cmpl
xchg
rorb
stc
jg
mov
xlat
jo
loope
xor
cli
dec
add
icebp
dec
sbb
jns
push
pusha
orb
ret
push
and
or
mov
or
sbb
cmc
clc
mov
jge
std
xchg
shll
push
outsb
dec
cmp
movsl
fnsave
cmp
xchg
call
gs
mov
fadds
inc
sbb
scas
or
xchg
test
std
jecxz
sbb
jo
subb
xchg
pushf
jns
cld
or
testl
cli
adc
pop
lock
xor
and
jecxz
xor
pop
or
sbb
pop
addl
stc
inc
xor
inc
cld
push
fsts
push
pop
mov
pop
xor
sbb
shlb
loopne
ss
mov
lock
adc
cld
xorb
ja
test
and
jno
jmp
add
cmp
and
jecxz
or
xchg
and
add
adc
and
push
ss
jne
stos
cld
outsl
jne
cmp
jo
xorb
test
sub
jmp
xchg
std
or
in
sub
inc
subl
cmc
xor
loope
or
pop
test
mov
pop
sbb
incb
mov
popa
imul
je
xchg
sbb
push
and
call
decb
xor
mov
jmp
pop
jo
in
mov
inc
incl
jnp
sbb
imulb
loopne
pop
out
jp
sbb
outsl
stos
sbb
shll
je
jmp
push
in
cli
iret
pop
cs
std
mov
push
cld
mov
jecxz
neg
ss
sub
mov
cmp
ret
rcl
mov
xchg
pop
aas
fsubl
xchg
add
pop
mov
or
shrb
mov
or
dec
add
inc
ja
pop
sti
cmp
lock
sbb
lea
cmp
mov
js
ret
arpl
outsl
push
xchg
jb
imul
insb
pusha
pop
fsubs
sbb
pop
jle
enter
xlat
xchg
add
aas
lods
and
test
test
sub
jmp
pushl
mov
test
cld
pop
cmp
jo
adc
push
mov
or
sub
pop
pop
les
add
mov
roll
outsl
sbb
insl
test
adc
xor
test
dec
add
jnp
loopne
add
mov
cld
push
mov
sbb
jo
cmc
cmp
call
jle
movsl
cmp
xchg
add
int
or
add
xchg
add
fstpl
ret
daa
in
mov
mull
dec
test
pop
mov
cld
popf
mov
jnp
incb
pop
jmp
test
lcall
aaa
pop
mov
jns
push
push
das
jns
and
pushf
insb
or
adc
mov
xchg
cmp
mov
inc
out
pop
jbe
es
es
push
push
push
cld
sub
in
stc
nopl
pop
cmp
in
fists
imul
std
subb
cli
daa
stc
jo
dec
push
push
testl
jge
ljmp
mov
das
repz
dec
insl
adc
inc
mov
sub
inc
add
in
insb
std
in
fcomi
push
ds
popa
xor
jae
test
push
cld
loop
sbbl
lahf
add
idiv
int3
fs
sbb
out
scas
cli
rorb
test
inc
sub
jp
sti
clc
jp
and
iret
incl
lds
pop
call
testb
xchg
mov
mov
mov
xlat
mov
mov
mov
inc
mov
jg
xchg
clc
dec
xchg
xchg
inc
mov
jo
xorb
jg
mov
pop
mov
inc
xchg
testl
gs
pop
jne
pop
cmpl
rorl
cld
insb
outsl
mov
ss
dec
push
test
or
fbld
mov
push
test
out
mov
cld
push
and
fdivrl
sbb
std
xchg
cli
aaa
mov
push
push
mov
in
xchg
xor
and
pop
pop
clc
push
lahf
sbb
ljmp
rcll
mov
adc
push
and
lret
inc
dec
notb
pop
aaa
sub
push
gs
add
into
mov
je
arpl
and
ja
ss
xor
sub
push
xorl
pop
repnz
push
dec
or
jmp
xor
popa
lds
pop
pop
test
push
mov
popa
xchg
ret
xor
xlat
mov
dec
dec
push
lahf
in
aad
sti
int
in
adc
sub
push
mov
cltd
dec
pop
pop
push
adc
cmp
imulb
jp
pop
adc
jo
lods
fidivl
ret
into
mov
outsl
mov
test
jecxz
daa
sbb
inc
fcompl
jl
leave
dec
loope
fisttpl
test
dec
jl
in
sub
arpl
in
mov
push
ja
inc
fildll
dec
dec
gs
pop
cmp
dec
dec
test
pop
into
mov
cli
xor
sbb
dec
dec
arpl
dec
dec
and
mov
xor
push
aaa
fcmovb
jmp
orb
dec
cli
rcr
std
negb
xlat
ret
cmp
push
jmp
adcb
out
loopne
das
stc
jne
mov
in
xlat
pop
mov
mov
jl
adc
mov
mov
sub
push
adc
push
stos
test
or
mov
pop
clc
out
arpl
xchg
mov
jecxz
sub
lods
mov
xchg
jmp
xchg
mov
sbb
inc
aam
pop
stc
xchg
mov
inc
jnp
loope
sub
mov
repnz
push
mov
test
mov
push
jae
mov
rorl
fstpt
jecxz
dec
xor
xor
sbb
cmp
leave
jno
pop
jmp
push
repz
xchg
xor
mov
lret
push
add
xor
sbb
imul
cmpb
in
ret
cld
pop
stos
lds
jg
cmpl
cmpb
mov
rcr
sub
push
jnp
inc
lahf
jns
jle
jne
sti
inc
jae
in
dec
cli
adc
testl
cmp
cmp
stos
addr16
addr16
mov
push
pop
fisubs
clc
mov
jg
sub
pop
sti
nop
sti
push
jne
xchg
mov
mov
daa
adcl
ret
cltd
std
bound
shrl
or
mov
sub
cs
mov
pop
daa
ja
pop
jns
aaa
jb
stos
inc
inc
popf
xchg
or
popa
loop
mov
outsb
neg
repz
mov
cmc
xchg
fldz
adc
leave
dec
push
gs
inc
int3
inc
jecxz
sub
in
das
filds
es
les
sub
stos
notb
cld
pop
push
aam
lcall
std
push
outsl
jl
cs
mov
xchg
sbbl
in
pop
ljmp
push
or
cwtl
mov
or
xchg
adc
lahf
push
xchg
mov
xchg
jmp
arpl
mov
cmp
in
lret
lea
mov
andl
or
bound
dec
not
cmpb
sbb
jno
jl
lahf
mov
pop
push
out
xor
fisttpll
push
dec
fs
arpl
cmc
add
das
xchg
dec
mov
mov
push
dec
xchg
outsl
rolb
and
outsl
xor
adc
iret
popa
test
sub
or
or
fcmovnu
dec
test
adc
mov
fstp
mov
mov
push
mov
int
stc
in
mov
das
push
dec
dec
leave
out
dec
in
sub
xor
jg
add
shlb
outsl
or
ficomps
dec
jg
fistps
or
mov
aaa
adc
sbb
pop
icebp
fwait
rolb
xor
mov
jns
fildl
xchg
aas
mov
lods
add
pop
xchg
push
lds
mov
mov
or
mov
sarl
jg
jle
add
inc
jg
mov
fdivrp
imul
lds
sar
icebp
fwait
orl
adc
cltd
stc
xlat
jno
mov
or
or
loope
push
mov
rclb
out
test
or
in
mov
or
jmp
xor
popf
jno
fdivr
mov
cli
inc
jo
out
mov
test
movb
mov
mov
lods
fs
mov
xchg
sbb
cwtl
cmc
inc
adc
ror
add
cli
push
dec
dec
push
sub
or
fs
mov
dec
pushf
xchg
dec
push
sbbl
mov
ds
roll
pop
sar
xchg
jle
and
jge
iret
push
addb
inc
sub
xor
pusha
adc
sub
stos
shll
mov
jle
push
jle
push
mov
mov
ja
arpl
jp
roll
test
in
jnp
rcll
fcoml
jg
lea
dec
jb
outsb
fistpll
sti
xlat
jle
xor
dec
jno
adc
arpl
icebp
xor
xchg
insb
xchg
lods
pop
pop
fwait
jo
push
fs
adc
nop
xchg
jg
fldcw
xchg
popa
insl
mov
ja
pop
jg
mov
shll
jno
cmp
sti
ss
je
ds
pop
or
push
xorl
sub
fnstenv
cmp
xor
dec
mov
push
adc
jecxz
and
and
or
dec
loop
out
fidivl
xor
andl
mov
aaa
fimuls
mov
jnp
mov
ljmp
sub
arpl
or
add
out
fndisi(8087
arpl
xorl
stos
fsubs
into
dec
or
loopne
pop
and
imul
pop
lret
add
shlb
rcrb
adc
in
shrl
cmp
mov
add
divl
push
rep
mov
fldenv
adc
pop
and
mov
adc
pusha
xor
bound
sbb
in
movsl
push
cmp
cmp
mov
mov
mov
sub
add
mov
outsb
sbb
dec
adc
and
dec
dec
das
daa
roll
mov
inc
fwait
mov
mov
jge
jl
or
ja
scas
push
pop
add
es
fdivrl
xor
shll
clc
outsb
inc
jle
xchg
aas
sti
gs
jl
add
call
pop
xchg
sahf
insb
pop
cld
jp,pn
or
sub
xor
fisttpll
lods
insl
out
mov
jg
das
in
push
mov
dec
arpl
lahf
dec
push
add
outsl
dec
roll
sub
data16
ja
lcall
fstl
fnsave
sub
lahf
nop
or
adc
ljmp
mov
test
pop
add
pushf
out
xchg
loop
push
shll
out
fsubr
loope
insb
sub
jne
and
popa
lock
cld
jb
in
and
fcomi
xchg
scas
cltd
clc
imul
loop
add
test
mov
loope
sbb
stos
cli
subl
push
inc
insl
icebp
jmp
jbe
mov
jns
outsb
loop
das
adc
imul
mov
pop
jns
xchg
jmp
clc
jns
mov
mov
cmp
inc
inc
dec
adc
pusha
cmpsb
cmpsb
addl
cltd
mov
mov
and
jle
repz
arpl
pop
loop
arpl
adc
loope
sarb
cmc
sbb
mov
and
add
js
sub
sub
jnp
sbb
push
pop
dec
loop
lret
mov
ljmp
orl
shll
jmp
or
rcrb
sub
mov
gs
lea
imul
sahf
push
sti
mov
pop
jno
adc
cld
jo
addl
or
and
arpl
pop
outsl
lds
shrb
inc
pop
pop
jnp
jmp
mov
mul
mov
cs
test
inc
mov
flds
in
idiv
addr16
daa
dec
test
add
test
push
push
jmp
neg
cmp
or
mov
subb
sub
stc
lds
test
xor
insl
mov
push
in
push
orl
jo
cmpsl
test
jmp
xlat
and
dec
push
sub
inc
fsub
or
add
shll
hlt
loop
leave
scas
jp
das
xor
jo
add
push
outsl
add
insb
es
les
lock
dec
fxch
and
lods
and
lcall
jns
and
add
fwait
cmp
fsincos
fsubrl
aad
das
std
shll
test
aam
sbb
rcrb
push
mov
fcomi
sti
shll
test
add
xor
jl
lods
inc
mov
jle
mul
add
jge
or
push
cmp
je
sbb
shll
fnstenv
mov
test
fscale
cmp
addb
out
ss
insl
jg
shrb
push
mov
mov
pop
push
add
mov
xor
stc
rorb
sub
push
lds
lret
add
jg
pop
mov
sbbl
mov
pop
in
in
test
pop
inc
stc
data16
cs
xchg
fsubp
adcl
mov
jne
sub
popa
cmp
icebp
mov
adc
je
fnstcw
sbb
xchg
icebp
popf
dec
aad
mov
lea
pop
sub
jnp
add
or
adc
dec
xor
in
pop
out
sbbb
ds
clc
out
hlt
or
sbb
stc
mov
lods
push
addb
push
or
jne
test
fisubrl
bnd
add
mov
inc
call
mov
out
cli
dec
add
and
repnz
cs
mov
outsb
cmp
daa
arpl
mov
mov
xor
sub
jno
out
inc
fwait
cs
dec
and
ror
lcall
mov
fsts
cld
mov
sbb
clc
and
sbb
repz
in
sub
rolb
fst
mov
aaa
outsl
sbb
dec
addl
and
orb
icebp
and
or
rcrb
or
push
and
cli
jg
rcrl
push
mov
xor
insl
xor
inc
test
mov
test
cmpl
adc
popa
and
push
outsb
loopne
es
add
adc
cmpsb
fdivrp
in
and
push
sbb
rclb
repnz
cmpsl
std
shrl
lahf
clc
jb
xchg
or
cmpl
cwtl
sbb
bound
mov
fisubl
cmp
jnp
adc
cmp
mov
dec
sarb
mov
add
dec
pushl
popa
mov
jle
xor
cmc
rorl
sbb
dec
xchg
test
repz
lahf
add
icebp
add
rolb
jnp
dec
jno
mov
fildll
lock
sub
test
sbb
aad
jae
addl
movsl
clc
rcrl
mov
repz
out
inc
sbb
push
fwait
and
insb
fadds
neg
mov
pop
cmc
rcr
or
pop
loopne
addr16
icebp
insb
inc
jmp
ss
movsl
divb
push
sub
insb
shrb
add
ret
push
or
lods
xchg
cmpsl
test
mov
jnp
mov
sub
xor
shll
testl
aaa
pop
cs
sbb
xchg
mov
std
or
push
lock
loopne
and
aas
dec
dec
loope
dec
xchg
ret
dec
add
mov
cmp
jl
add
cs
mov
add
mov
jae
lods
loop
xchg
mov
push
dec
out
sbb
cmp
roll
xchg
push
adc
repz
or
repz
sti
mov
in
or
fildll
add
enter
cmp
dec
mov
jae
insb
cmp
push
inc
sbb
jg
mov
cmp
pop
pop
loopne
pop
stc
popa
push
add
sahf
xor
dec
mov
dec
adc
cs
out
xchg
cmp
mov
mov
insl
jbe
movsl
pop
or
testb
mov
push
sub
cmp
shrl
xor
out
jns
add
movsb
daa
sbb
cltd
push
pop
rcl
jbe
imull
inc
addb
mov
mov
dec
jge
inc
jns
filds
pop
jmp
sbb
cmc
fs
xacquire
lret
add
jp
enter
mov
push
cltd
shl
enter
stc
gs
lahf
push
sub
jae
sahf
xchg
sti
iret
xchg
xchg
cmp
mov
cmpsb
push
stc
push
cmp
imul
mov
fmul
jl
roll
lock
push
inc
mov
sbb
or
push
mov
outsl
mov
push
dec
dec
ja
sbb
add
xchg
in
sbb
repz
in
cli
loopne
push
cmc
push
xor
mov
sbb
pop
outsb
jle
pop
std
and
add
aaa
or
popa
inc
lret
inc
cmpl
or
jo
push
repz
adc
and
cld
adc
repnz
rorb
out
sbb
lret
int
lea
stc
push
cmp
orb
fisttpl
fwait
test
clc
xchg
sbb
aas
cmp
or
out
add
pushf
or
nop
inc
iret
lds
push
mov
push
cltd
cwtl
jg
mov
es
pop
add
adc
add
repz
mov
out
mov
mov
sub
fwait
pop
inc
in
inc
mov
test
pop
mov
push
arpl
movsb
add
psrlw
aas
inc
test
add
ret
daa
jb
xlat
je
adcb
xor
loop
pop
incb
dec
gs
add
lea
xchg
out
in
inc
mov
mov
jecxz
lock
pop
addr16
popf
jnp
cli
fldl
clc
dec
adc
js
idivb
jl
xor
sbb
mov
test
lret
stc
dec
call
ja
popa
or
inc
dec
repz
mov
mov
or
or
lret
and
jmp
jnp
notb
mov
inc
mov
in
in
hlt
mov
aas
fdivl
mov
or
dec
xchg
push
mov
clc
xlat
jno
jnp
push
adc
dec
dec
arpl
jge
push
not
in
imul
xorl
fisttps
push
add
mov
test
mov
repz
out
push
incl
pop
cmpl
aas
cli
jne
and
sbb
jmp
sbb
daa
push
push
and
mov
cmc
addl
jnp
add
cld
insb
decb
push
dec
lds
mov
dec
push
in
sbb
dec
lcall
mov
in
sbb
push
inc
jmp
loop
jg
cli
xor
stc
add
mov
adc
cld
test
sub
outsb
jge
push
dec
xchg
or
notl
add
lods
dec
test
out
mov
jp
fisubrs
adc
jnp
aas
loopne
sbb
sbb
ljmp
mov
clc
pop
aaa
xor
add
adc
push
pop
fmuls
test
mov
roll
or
sbb
lea
xor
out
fiaddl
xor
call
push
pop
jb
test
in
flds
jecxz
repz
mov
out
push
fdivrs
pop
jmp
or
push
xchg
push
pop
mov
dec
dec
dec
and
fldcw
jmp
jmp
push
dec
pushf
push
sbb
mov
or
orl
add
add
add
jno
std
aaa
popf
cmp
pop
hlt
inc
out
popa
addb
xchg
jle
sub
arpl
sub
rorl
sub
divl
repz
cmp
cmpsb
xchg
testl
cs
or
xchg
fwait
sarl
or
jmp
jmp
pop
xor
pop
jge
out
add
rolb
dec
insl
das
sbb
fldcw
mov
out
pop
jo
addl
jno
xor
pop
sbb
ret
stos
xchg
stc
idivl
mov
inc
add
mov
notb
pavgw
adc
xor
xchg
sub
scas
ljmp
sbb
cmpsb
mov
and
xchg
sbb
sahf
cwtl
pop
and
in
dec
xchg
dec
mov
dec
mov
dec
mov
dec
mov
and
jp
enter
mov
inc
leave
xchg
inc
push
xor
push
mov
push
push
inc
incl
mov
scas
test
sbbl
into
adc
add
jl
iret
adc
mov
mov
pop
xchg
lock
repz
mov
and
mov
xchg
and
pushf
mov
stc
mov
xor
and
out
int
sbb
into
or
out
stc
lods
or
adc
pop
add
or
hlt
cmc
adc
stos
ret
fwait
cmpsl
dec
sub
sahf
jge
mov
lret
jge
xchg
push
mov
xchg
insl
cld
aaa
daa
rol
dec
push
mov
sahf
nop
pop
adc
jp
lahf
xchg
xor
clc
push
filds
or
adcl
jmp
cld
and
cmp
mov
pop
pop
add
or
adc
mov
push
mov
das
icebp
pop
inc
xchg
jnp
js
incl
jbe
das
bound
cld
sbb
cmc
outsl
shrb
pop
aaa
push
inc
cs
pop
std
add
cmp
jns
dec
clc
sub
les
inc
imul
or
outsl
mov
add
push
nop
cmc
ljmp
jg
ret
repz
inc
xor
je
pop
adcb
sub
push
cld
addb
push
mov
add
fildl
ja
cmc
mull
test
mov
mov
mov
cmpsb
cld
outsl
inc
shl
jno
in
cmp
insb
cmp
push
stc
sti
insl
cmp
outsb
aaa
sbb
jge
jb
cli
je
and
sbbl
inc
es
xor
les
fldcw
jecxz
mov
lahf
repz
or
inc
lods
out
sbb
aam
iret
cmp
aaa
adc
pop
ja
and
aas
sub
orb
add
leave
daa
cmp
and
sbb
pop
enter
push
mov
jg
pop
outsb
cmp
call
mov
cs
cmp
lods
mov
push
xchg
aas
negl
loope
adc
fnstsw
jge
ljmp
popf
and
pop
mov
xchg
aas
mov
decl
inc
testl
cmp
adc
mov
push
shll
sti
jecxz
fs
dec
pop
cmp
shl
cmp
dec
dec
mov
lea
jne
pop
lock
cmp
pop
mov
sarl
mov
loopne
adc
cmp
test
loop
pop
push
cmpsb
jne
aas
push
adc
fdivl
or
xor
mov
push
jmp
repnz
xor
clc
ss
and
fisubl
xor
leave
leave
add
dec
push
push
repnz
lods
push
xorl
cmpsb
inc
mov
xchg
dec
scas
fsts
xchg
inc
stc
inc
xor
sbbl
pop
push
pop
popa
push
roll
das
sbb
mov
insl
sub
dec
and
dec
lods
jecxz
lds
cmpsb
inc
jns
xchg
sahf
sti
pop
push
jae
jmp
mov
lahf
fists
lret
mov
cmp
inc
dec
gs
xchg
inc
mov
in
test
add
mov
sbbl
pop
cli
jnp
dec
xor
lahf
push
jp
cs
xor
or
test
jae
add
dec
out
incb
lock
daa
dec
xchg
jecxz
inc
addl
mov
sbb
outsl
jnp
mov
fstpl
andl
fwait
mov
pop
cmp
add
mov
mov
addl
andl
push
popa
std
sub
shll
jecxz
inc
xchg
lcall
test
or
mov
xor
adcb
or
cmc
in
fisttpll
push
jge
sarl
or
push
mov
mov
ds
fdivp
or
out
cmc
cld
dec
jo
inc
imull
idivb
sbb
xchg
stc
ljmp
mov
inc
clc
dec
lds
std
cli
outsl
out
testb
adc
jae
aaa
jge
or
jbe
pop
ljmp
scas
and
adc
mov
ja
dec
out
sub
neg
ret
test
aas
clc
mov
jae
lods
daa
inc
sbb
add
pop
aam
stc
pop
dec
loope
push
push
xchg
dec
lret
fadds
out
psubd
xchg
xor
cmp
push
and
hlt
adc
xchg
sbb
mov
and
sub
and
xchg
sbb
movswl
and
or
xchg
jle
cs
cli
lds
test
cmc
test
adc
xor
adc
sub
insl
jle
add
inc
xor
jbe
sbb
push
je
adc
add
jecxz
std
xchg
cmp
bound
mov
mov
movsb
mov
stos
rolb
in
mov
sbb
pop
std
data16
xorl
xchg
pop
lahf
xchg
dec
pop
inc
lods
mov
sbb
sti
inc
dec
xchg
inc
clc
lcall
out
rcrl
mov
push
push
mov
incb
dec
lock
hlt
out
push
sub
mov
mov
sub
mov
push
push
push
das
aaa
hlt
add
dec
xchg
gs
jecxz
clc
cld
not
lahf
je
test
adc
aaa
mov
aaa
push
pop
push
mov
xchg
push
cli
rcll
dec
std
int
in
mov
jne
or
push
test
mov
popf
add
pop
sbb
cmp
pop
cs
jae
out
hlt
bound
mov
mov
cmp
inc
mov
mov
jge
cs
jecxz
imul
cmpb
fisttps
xchg
add
pop
xchg
ss
lea
sub
pop
and
push
mov
sub
popa
ret
mov
les
push
adc
or
gs
and
dec
aam
pop
test
jecxz
push
pop
push
mov
push
mov
push
in
or
push
lret
incl
bound
and
or
inc
dec
loope
pop
mov
lds
hlt
sbb
fwait
dec
leave
add
frstor
mov
daa
push
test
dec
ret
pusha
cmpsl
test
mov
jae
sbb
cwtl
lret
jae
popa
outsl
mov
outsl
jb
pop
or
xor
jecxz
or
push
je
push
sbb
repnz
mov
icebp
orl
inc
lret
lock
sti
sbb
cmc
popa
into
cmp
mov
jecxz
in
test
or
adc
jmp
mov
int
std
pop
mov
or
jg
jnp
imul
jecxz
out
add
in
and
xchg
sbb
push
mov
xchg
adc
in
mov
mov
sub
movsl
inc
test
lods
mov
mov
out
jg
ja
jp
pop
testl
inc
cmpl
cmp
loopne
incl
cmp
cli
shll
outsl
dec
sub
lods
sbb
inc
push
pop
mov
leave
add
xchg
adc
test
inc
push
jp
push
cmp
jl
cld
scas
sti
test
push
jg
aas
mov
testl
push
adc
pop
mov
mov
sahf
inc
out
push
and
sub
cli
out
ds
aas
sub
cld
or
add
faddl
add
lods
dec
stc
mov
fadds
or
xchg
sti
js
cli
ret
jecxz
add
outsl
lahf
push
adc
xchg
outsl
push
das
je
jno
out
add
push
mov
adc
push
ljmp
pop
lds
add
sbb
or
stos
mov
sahf
sbb
add
push
enter
in
leave
mov
scas
sti
insb
fstpt
fdivrl
lods
or
data16
xor
mov
mov
sub
inc
fs
xor
lds
mov
mov
popa
or
rdtsc
mov
outsb
dec
mov
lea
arpl
mov
mov
pop
dec
outsl
call
bnd
push
iret
xchg
jle
in
dec
mov
push
push
jb
pusha
stos
hlt
xor
sbb
sbb
add
push
lods
ror
cmpsb
push
lea
lret
jmp
icebp
pop
call
pop
mov
adc
cmpb
add
test
pop
sbb
add
aam
jae
mov
out
aas
fildl
mov
stc
popa
pop
test
pop
xlat
ljmp
sar
mov
mov
out
in
pop
mov
dec
xor
stos
inc
push
mov
fstpl
aas
test
pop
adcb
add
add
aas
sahf
decl
mov
mov
sbb
fs
aam
aad
mov
lret
arpl
fstpt
add
aas
sub
out
mov
adc
outsb
add
inc
add
shrl
mov
fwait
add
in
cmpb
push
or
cs
mov
jmp
pop
in
aas
adc
fnstenv
outsb
jnp
popf
jl
mov
out
stc
int
pusha
pop
and
int
or
add
icebp
in
daa
insl
fistpll
arpl
fcompl
bound
xor
jle
popa
mov
out
mov
mov
push
inc
in
pop
and
sbb
test
lods
in
stos
push
cmp
out
fildl
cmc
push
push
inc
popa
push
ret
pop
imulb
aaa
pop
aas
pop
incb
out
movsb
or
aaa
aaa
adcb
hlt
lcall
bound
out
in
cld
sti
pop
stos
scas
jg
popf
sar
insb
pusha
or
fwait
or
aas
push
incl
repnz
pop
dec
pop
insb
outsb
and
rorl
mov
xchg
or
ljmp
push
jge
rcrb
in
cli
sbb
mov
bnd
into
std
pop
ss
addr16
jge
shlb
arpl
out
mov
inc
inc
lahf
fildll
add
dec
insl
mov
enter
jge
lret
pop
inc
mov
dec
movswl
cli
addr16
mov
adc
or
fwait
add
ret
ja
and
lods
outsb
cs
mov
pop
pushf
push
sub
ss
call
mov
or
out
gs
ljmp
lret
in
sti
mov
sbb
inc
mov
std
insb
movsl
fidivrl
push
fcmovne
jg
jmp
in
mov
in
pop
loopne
aaa
mov
addr16
xchg
add
xor
lret
sbb
mov
jae
pop
push
test
inc
orps
stc
popa
ds
pop
insb
stc
sbb
movsl
in
std
xchg
mull
inc
arpl
push
sahf
push
xchg
mov
and
fdivrs
sti
add
fwait
nop
cmc
adc
aas
fwait
mov
xchg
adc
sub
add
rcrl
pop
shlb
lret
add
mov
decb
jp
jmp
jmp
arpl
push
jg
fistpll
movsb
decl
mov
dec
cmpsb
add
xchg
test
pusha
pop
jmp
xlat
loope
mulb
add
jne
sbb
mulb
adc
sahf
insl
mov
cmc
dec
cld
and
mov
aas
mov
arpl
sub
sub
insl
scas
sub
lock
mulb
cli
sub
cmp
cli
out
xor
repz
sti
mov
into
and
fnstcw
fsincos
pop
hlt
pop
mov
mov
sarl
push
mov
mov
imul
clc
add
pop
mov
jmp
mov
clc
pop
imul
pop
loope
push
xchg
cli
pop
loopne
repnz
aas
rsqrtps
or
sbb
inc
push
sti
inc
sbb
pop
into
ljmp
std
jmp
ficomps
sub
or
or
test
out
lret
and
mov
dec
sbb
sub
cmp
mov
into
jmp
inc
pop
iret
xlat
push
out
sti
inc
mov
pop
pop
imul
jnp
sbb
pop
in
ds
inc
pop
xchg
fdivrp
insl
jmp
add
add
sub
lahf
movsl
jle
push
es
dec
add
movl
call
sbb
dec
adc
jmp
subb
fistpll
mov
push
xchg
xchg
push
mov
xchg
int3
or
xor
repz
stc
adc
repz
or
sub
call
mov
xchg
mov
into
mov
mov
mov
inc
divl
mov
gs
xor
jne
and
add
or
flds
jge
insl
inc
aaa
lods
decw
cmp
data16
fldt
lock
xchg
push
roll
dec
add
mov
mov
pop
adc
pop
jnp
add
mov
cmp
pop
sarb
clc
or
xchg
push
add
pop
push
mov
addb
dec
push
mov
or
xchg
jg
incl
inc
push
xchg
inc
jle
aaa
insl
add
lock
inc
jo
push
push
pop
add
inc
insl
scas
sti
pop
jnp
pop
call
sub
push
hlt
insl
add
inc
add
pop
shll
es
sub
call
shlb
xchg
xor
adc
dec
incb
or
stc
push
je
sbb
push
jnp
lock
addr16
leave
and
fcomps
dec
add
insl
add
lret
iret
stc
out
sbb
push
call
pop
pop
loope
fdivs
fincstp
in
pop
mov
lea
in
andl
xor
mov
mov
and
xor
fdivs
out
mov
and
inc
in
jns
into
sbb
mov
shll
sub
or
sbb
pop
sub
xchg
push
notl
xorb
cmp
inc
out
dec
jmp
adc
jge
push
insl
push
xchg
add
fcmovnu
outsb
mov
fstl
testb
push
fldt
push
sub
cli
or
das
and
add
sahf
iret
rcl
sar
shl
jecxz
outsb
and
dec
stc
pop
pop
and
jno
push
hlt
hlt
cmp
jae
xchg
aas
or
hlt
xorb
les
pop
cmc
sbb
or
test
das
mov
or
test
js
movsb
stc
jo
jne
mov
sbb
mov
xor
stos
add
jo
repz
popa
jp
pop
and
pushf
jne
sbb
mov
bound
dec
add
push
jmp
push
jne
cmc
jg
pop
or
test
mov
in
arpl
push
rcrb
pop
sti
mov
jnp
xor
loopne
data16
add
loop
loop
int
mov
sub
add
push
cmpl
repnz
testb
fs
sub
out
xlat
cli
xor
clc
mov
fistpll
adc
sub
mov
mov
push
jecxz
stc
xor
hlt
add
pusha
xchg
addr16
cmc
dec
neg
pop
jp,pn
cmp
jp
jg
fistps
cmp
sahf
arpl
call
mov
mov
jg
cs
je
mov
jne
xor
bound
popa
test
jp
fs
incl
sub
or
rcrl
rcr
cli
add
in
mov
jp
incl
jg
mov
js
lock
pop
fdivr
xchg
jb
add
xorl
fisttpl
adc
push
or
sarl
scas
outsl
mov
dec
dec
push
push
outsb
adc
test
call
push
add
outsl
addl
mov
arpl
jae
xchg
imull
jns
cmp
add
mov
jge
inc
jae
xchg
pop
js
clc
sbb
loopne
in
jno
outsl
and
mov
mov
adc
dec
pusha
outsb
push
xchg
jo
cmp
rcrl
sbbb
idiv
push
call
pop
iret
mov
cli
js
fsubs
std
sbb
in
negl
and
mov
mov
out
out
jecxz
pop
insb
aas
jns
outsl
and
jecxz
inc
mov
sbb
cmp
xor
mov
popa
cli
dec
pop
pushf
imul
mov
push
cli
out
push
pop
mov
enter
dec
inc
and
icebp
imul
in
pop
ret
lret
leave
or
pop
rolb
and
insl
adc
mov
pop
dec
jg
cmp
outsb
jmp
jl
fstps
cmp
dec
jle
inc
xchg
stos
clc
jecxz
loope
std
stc
mov
stc
jmp
push
out
add
or
pop
cld
mov
js
movsl
jmp
ret
aad
mov
roll
mov
imul
sub
add
jle
jb
iret
mov
add
clc
xchg
addb
shl
in
inc
jae
jmp
pop
repz
ret
jge
sahf
dec
jecxz
bound
clc
sti
popa
jg
sti
lahf
andl
xorb
popf
inc
xor
out
add
das
cltd
out
fisubs
push
push
call
dec
xchg
out
sub
mov
fisttpll
inc
or
insb
clc
push
or
add
int3
or
push
movl
add
gs
jg
inc
mov
leave
add
outsl
aaa
add
sbb
mov
sub
cmp
idiv
jno
jge
insb
sbb
cltd
cmp
jo
push
push
dec
cli
int
dec
push
push
loopne
mov
adc
mov
jg
inc
xlat
in
mov
insb
pop
cmpl
xor
dec
adc
stc
xor
jle
idiv
mov
jo
dec
push
push
loope
and
push
ds
jle
add
jb
pushf
inc
insl
push
push
sbb
jl
mov
or
aad
pop
fsts
pop
adc
sti
pop
lcall
out
mov
mov
and
fmuls
dec
add
xchg
popa
push
mov
stos
push
dec
mull
fstps
or
mov
pop
push
sahf
enter
mov
iret
daa
mov
jb
loope
xor
adc
mov
jne
mov
stc
into
repz
arpl
rorb
loope
loope
cmp
cmp
lcall
push
xchg
lcall
adc
pop
mov
imul
cmpsb
imul
in
flds
bound
push
bound
gs
mov
cmpsb
pop
cs
popa
mov
lret
scas
imul
sbb
ss
shrl
pop
or
jb
fcoml
loope
shll
arpl
lcall
pop
pop
cs
ja
data16
inc
push
lcall
addr16
ja
fcoml
jns
xor
addr16
mov
imul
iretw
out
and
insl
xchg
imul
adc
push
lcall
xchg
jnp
popa
imul
cmp
cmpsb
sub
push
pusha
out
sub
pop
mov
arpl
inc
dec
fs
imul
gs
fisubs
adc
lret
cmpsb
jmp
movaps
cmp
mov
push
pop
mov
adc
in
adc
arpl
xor
in
jnp
adc
sti
das
mov
insb
xor
addr16
imul
adc
cmpsb
inc
jge
adc
xchg
pop
pusha
inc
add
jo
mov
inc
mull
aas
xchg
fstps
push
scas
dec
std
loop
sbb
mov
lods
std
bound
xor
cmp
push
and
imul
add
dec
xchg
mov
cmpsb
jecxz
test
mov
or
add
loop
and
leave
pop
testb
push
mov
cmp
sbb
pop
lods
pop
adc
pop
pop
mov
das
mov
or
xor
mov
pop
pop
fiadds
pop
adc
pop
scas
pop
pusha
mov
dec
mov
in
pop
adc
xor
cmp
in
inc
cs
pop
sbb
push
js
adc
arpl
loope
cmp
cmp
adc
xor
in
ja
xchg
stos
mov
xor
in
inc
daa
add
lcall
sub
or
jecxz
fcomps
imul
jnp
in
fldenv
xor
inc
gs
aam
cs
in
push
mov
mov
aaa
pop
add
xchg
gs
gs
insb
pop
push
data16
imul
xchg
lret
sti
imul
dec
loope
cltd
mov
subb
cmpsb
imul
dec
dec
cmp
lcall
imul
aaa
imul
xchg
lahf
mov
bound
in
add
scas
cmpsb
cmp
mov
pop
xor
shrl
dec
adc
imul
cld
loope
lcall
fs
xchg
int
in
ffree
data16
bound
xchg
orl
inc
jg
sub
lret
lcall
and
inc
imul
pop
dec
jb
test
inc
je
outsl
dec
push
cld
jg
in
pusha
pop
insl
dec
inc
movsl
fs
bound
jbe
dec
fs
jo
jnp
or
dec
insl
push
out
in
das
lock
pop
pop
fs
imul
dec
imul
lock
cmp
outsb
jo
inc
incb
pop
pop
inc
xchg
outsb
std
fstpt
sub
cmp
push
pop
mov
lock
ds
fcom
insl
pop
pop
imul
inc
pop
pop
push
lock
dec
insl
sbb
pushaw
cld
inc
sti
inc
mov
sti
idiv
pop
inc
arpl
clc
hlt
incb
pop
pop
addr16
daa
ja
imulb
shll
bound
arpl
cmp
movsl
dec
jb
outsb
fs
imul
pop
dec
push
xchg
jg,pn
pushl
xor
dec
jo
jb
push
imul
cmp
cli
ds
test
mov
and
addl
inc
rorb
out
pop
dec
pop
pop
pop
pop
sub
dec
sbb
mov
imul
push
bound
add
xlat
mov
and
jp
pusha
jb
mov
pop
mov
insw
out
inc
pop
pop
imul
ret
outsb
pusha
imul
insb
and
pop
jo
stos
pop
inc
dec
pop
addr16
ja
stc
inc
bound
iret
divb
addr16
in
imul
mov
jno
pop
jno
insb
je
or
dec
inc
fs
repz
cmp
insb
insl
push
outsl
outsl
popa
push
fstpt
jnp
xchg
pushw
imul
clc
outsl
pop
push
popa
inc
jo
in
push
ljmp
dec
inc
inc
dec
dec
inc
inc
cs
jmp
insl
mov
aam
jne
into
das
jne
jne
add
ss
pop
test
sbb
arpl
mov
inc
int
sti
sbb
notb
and
push
arpl
jb
clc
and
addr16
fistl
pop
outsb
arpl
std
insl
push
xor
ret
insb
inc
or
ds
pop
inc
mov
imul
push
inc
arpl
sub
ss
arpl
mov
cmp
pop
stos
std
roll
pop
jno
dec
pop
push
popf
jbe
addr16
fildll
push
pusha
gs
outsb
jno
insb
dec
fs
outsl
in
sahf
cld
addr16
push
fs
and
push
jno
testb
pusha
inc
pop
fs
in
std
jne
das
mov
mov
inc
add
push
dec
inc
dec
sub
sub
repnz
fcompl
mov
cmp
bound
scas
inc
sti
or
inc
popa
jge
sbb
xor
sub
adc
in
and
jno
insb
jle
xlat
adc
sbb
test
add
push
outsb
lods
insl
shrl
xor
ds
lea
cmp
out
insl
mov
data16
jo
ja
ret
or
dec
pop
gs
sub
cld
pushf
ret
sarb
addr16
movsl
repz
fst
mov
nop
inc
sbbb
mov
aas
fsubs
arpl
imul
inc
pop
push
and
jl
mov
xor
sub
dec
aas
cmp
ds
cs
pop
push
pop
cld
inc
out
clc
popa
sub
mov
push
fisubrs
fisttpll
arpl
popa
pop
push
pop
mov
fstpt
adc
je
inc
push
notb
shrb
pop
cmpsl
std
fwait
sti
cmp
popa
inc
add
mov
mov
xchg
push
xchg
pop
push
loope
pop
insl
outsl
outsb
dec
sbb
or
push
xorl
push
adc
js
bound
inc
cmpsl
mov
dec
data16
fldl
sahf
cmc
inc
add
mov
in
clc
sub
cmp
imul
jne
gs
sub
clc
push
cmp
sub
inc
mov
arpl
cmp
aaa
cmp
imul
or
jg
sti
cmp
dec
xchg
ds
fdivr
or
cmp
dec
cmp
add
cli
cmp
sub
and
bound
fists
xchg
out
cmp
arpl
mov
das
mov
xchg
insb
push
inc
cmp
es
ss
or
aad
outsl
decl
fistl
sub
cmp
sub
push
dec
jae
in
inc
imul
inc
cmp
ljmp
pop
daa
int
cmp
push
cmp
mov
or
cmpb
insb
pop
pop
pop
lea
loope
imul
xor
cmp
sahf
cmp
cmp
cmp
push
push
cmp
inc
cmp
mov
pop
dec
xchg
jne
test
aas
push
pop
dec
sahf
xor
test
or
arpl
cmp
pop
push
pop
pop
jo
cmp
push
mov
pop
insl
pop
ror
fnstsw
cmp
dec
ja
sbb
jnp
adc
mov
lcall
dec
cmp
insb
push
sub
mov
clc
inc
inc
aaa
push
das
pop
add
jns
das
lret
pop
sub
outsb
fcmovnbe
mov
ss
fs
cmp
pop
or
jp
adc
xchg
daa
push
cmp
stos
xchg
shlb
or
jb
ss
mov
pop
jo
pop
aaa
dec
fcomps
mov
adc
aaa
or
lahf
dec
cmp
xchg
daa
inc
insb
mov
add
hlt
cmp
pop
mov
or
dec
cmp
cmp
add
ss
cld
jbe
sub
fs
pop
pusha
pop
outsb
bound
lcall
pop
xor
clc
dec
cmp
aaa
push
arpl
jg
push
clc
lods
negb
cmpsb
aaa
dec
aas
cmp
mov
jg
dec
ds
jg
pop
jg
dec
dec
xor
mov
or
or
pop
scas
loopne
push
xchg
std
inc
xchg
xor
insb
dec
bound
mov
push
mov
dec
test
push
outsb
adc
cmp
inc
dec
pop
cmp
add
mov
sub
movsl
inc
mov
or
and
pop
pop
lea
mov
lods
aam
xchg
jo
push
pop
xchg
xchg
mov
insb
cmp
aas
jns
bound
mov
je
sti
pop
push
sbb
jne
inc
mov
or
cld
xchg
sub
or
push
popa
push
cmp
pop
ret
jecxz
cld
jb
int3
push
cld
aaa
inc
ret
arpl
cld
rorl
arpl
mov
mov
pop
cli
ss
lea
sub
sti
inc
dec
push
mov
and
out
test
mov
sbb
jg
les
pop
fs
repnz
cli
cwtl
cld
push
pop
bound
pop
pushf
fiaddl
outsl
inc
sbb
inc
pop
dec
icebp
push
loopne
mov
sub
sbb
std
push
and
cld
or
test
bound
adc
mov
insl
add
sbb
test
fildl
and
fildll
test
mov
adc
add
add
daa
ret
not
rcl
shll
incb
adc
and
int
dec
push
adc
inc
insl
je
lret
in
shrb
push
adc
xor
rcrl
push
imul
jmp
ja
insl
ss
std
cli
add
stc
ret
add
movsl
ss
std
insb
jae
mov
imul
outsl
test
outsb
addr16
mov
inc
add
push
pop
xor
push
test
mov
inc
imul
xor
or
xchg
jle
stos
dec
inc
pusha
out
popa
jne
stc
ds
push
xor
dec
test
andb
je
push
call
popaw
aas
inc
jo
mov
sbb
jne
add
inc
jo
popf
roll
imul
adc
sbb
jmp
adc
inc
push
sti
push
scas
imul
sbbb
outsl
cld
mov
mov
sub
push
mov
mov
pushf
sti
push
inc
imull
pop
add
pushw
icebp
imul
jae
adc
fcoms
loope
pop
sbb
daa
mov
aas
popa
dec
jb
pop
clc
je
sbb
pop
xor
jno
outsb
aas
mov
lea
int3
or
mov
cld
xor
cmpsb
or
daa
push
fwait
cld
cld
adc
push
pop
sbb
and
rorl
dec
gs
shlb
sub
pop
dec
mov
outsl
pop
mov
jae
std
ret
inc
test
sub
xchg
pop
adc
mov
mov
sbb
bound
test
arpl
and
pop
and
sub
fldln2
dec
sub
dec
pop
movsb
ja
pop
mulb
outsl
sbb
daa
push
mov
push
sub
fdivrs
dec
push
outsb
arpl
push
mov
jne
daa
xor
add
mov
das
sub
push
sub
scas
fstpl
aaa
push
popa
pop
dec
mov
mov
fldt
cli
mov
fistps
neg
notl
mov
jo
adc
jno
mov
jbe
fdivs
icebp
jae
insl
xlat
jmp
clc
inc
dec
dec
inc
cmp
pop
cli
bound
sti
sub
and
aas
popa
adc
pop
mov
sti
and
and
add
sub
fcmovnbe
push
and
and
ficompl
push
mov
jae
sbb
shll
jl
mov
int
fistpl
add
mov
inc
outsl
stos
shlb
test
imul
ds
negb
bound
pop
sub
dec
andb
in
mov
and
aaa
lods
push
pusha
jnp
imul
cwtl
dec
xor
jno
sti
lret
scas
pop
push
das
cld
dec
inc
dec
cmp
dec
movsl
test
jb
dec
dec
std
inc
popa
pop
mov
loopne
bound
lods
sub
mov
pop
pop
sbb
fldl
sub
inc
inc
dec
inc
inc
fistpl
dec
adcl
or
add
adc
fildl
pop
fildl
sbb
pop
inc
push
dec
dec
sub
sub
xchg
sub
or
cmp
mov
xor
sbb
sbb
inc
sub
and
cmp
outsl
sub
jge
push
jmp
sbb
mov
sbb
and
or
mov
dec
outsb
adc
cmp
lock
sub
sbb
je
xchg
pop
sub
push
imul
mov
xor
jno
sbb
imul
mov
and
add
sbb
push
jecxz
in
insb
addr16
inc
pop
jle
cmp
shl
scas
mov
dec
mov
dec
push
pop
mov
sbb
dec
dec
fbld
ret
jo
sbb
jno
mov
outsb
sub
pop
and
add
sub
std
cs
arpl
bound
jno
sbb
rcrb
stos
imul
pop
fwait
adc
arpl
gs
scas
inc
push
test
xor
mov
jb
cmpsb
addb
shrb
pop
jns
pop
push
or
jg
jae
sub
sub
sub
xor
xchg
das
or
das
aam
pop
pop
xlat
sub
sub
iret
arpl
cld
push
jg
addr16
gs
sub
sbb
pusha
mov
and
cmp
push
outsl
pop
stos
and
pop
mov
ss
sarl
jl
daa
sub
fs
or
push
xor
outsl
inc
adc
pcmpgtd
inc
pop
pusha
stos
pop
mov
enter
lods
adc
int3
push
pushl
sub
jne
popa
pop
sub
mov
or
xor
jo
outsb
jbe
push
das
pop
sub
xchg
and
ss
push
outsl
shrb
jecxz
mov
sub
sbb
fneni(8087
mov
cmp
sbb
loope
insb
loope
adc
push
jno
mov
outsb
pop
xor
adc
jae
dec
pop
mov
sub
lret
cmpl
sub
cmp
and
mov
pop
xchg
sub
push
and
cmp
and
jno
jecxz
sub
mov
daa
sub
sub
lock
pop
pop
sub
pop
xor
aaa
cmpsl
sbb
pop
xor
cmp
inc
and
mov
repnz
sub
das
sub
sbb
rcr
pop
and
xor
cld
push
pop
insl
negl
pop
pop
jo
pop
cmp
jge
insb
sbb
xor
arpl
insl
adc
push
loopnew
cmc
mov
cmp
push
fwait
insl
ja
bound
pusha
rcl
inc
les
inc
xor
ret
insb
dec
fs
es
dec
dec
mov
shrb
int3
cwtl
fwait
sub
inc
stos
cmp
adc
not
ja
xchg
bound
cmp
pop
jo
push
je
xchg
mov
dec
stc
adc
dec
addr16
push
or
insl
push
cmp
jo
pusha
fstpl
popa
mov
and
jno
sub
bound
popa
dec
inc
pop
lea
lock
cmp
cmp
cli
mov
inc
pop
push
cmp
outsb
pop
pop
pushf
push
ds
bound
int
mov
imul
mov
inc
dec
daa
sub
push
stos
test
cmp
cmp
or
jb
cmp
movsb
ja
aas
aam
sub
dec
das
inc
arpl
test
jae
mov
aas
aaa
aad
popa
mov
dec
mov
and
sub
pop
inc
add
popa
pop
leave
imul
dec
dec
cmp
fnsave
es
outsl
ja
ljmp
sub
push
cmp
push
aas
data16
add
sub
xor
pushl
cmp
cmp
inc
inc
ds
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
push
push
stos
cmc
pop
push
push
push
push
pop
pop
popa
es
mov
mov
popw
std
repz
push
sub
jo
ja
aas
inc
cmp
and
jmp
inc
pop
daa
pop
insl
and
inc
data16
je
inc
dec
rcl
adc
sbb
cmp
add
cmp
jae
outsw
arpl
pop
xor
adc
push
inc
outsb
pop
add
inc
packuswb
pop
add
cmp
or
ljmp
mov
sbb
mov
add
inc
fs
pop
push
mov
pop
dec
jne
sub
outsl
adc
rorl
imul
or
aas
dec
inc
sub
gs
cmp
pop
rcr
dec
loop
out
mov
cld
daa
jae
jo
inc
pop
inc
and
dec
lret
insb
fstl
stc
add
js
or
insl
dec
push
pop
insl
imul
cli
or
popf
das
std
add
cld
incl
outsl
mov
xor
arpl
cltd
ds
push
sbbb
pusha
call
sub
or
and
and
ss
mov
addr16
dec
bound
mov
in
pop
adc
es
lods
xchg
push
das
dec
cmpsb
and
xchg
je
test
push
cmp
pop
outsl
bound
mov
push
lds
dec
repz
cmp
rorl
push
push
xchg
sub
cmp
mov
inc
mov
leave
pusha
dec
push
jg
sub
stos
inc
jae
sbb
outsb
call
sub
pop
adc
ret
jo
push
out
je
xor
dec
insl
add
lret
dec
xchg
cs
sub
dec
pop
mov
pusha
inc
sbb
into
in
dec
cmc
pop
dec
cld
dec
cld
sub
sub
sub
cmp
inc
sub
or
jmp
js
jg
test
mov
mov
sub
mov
push
jmp
or
sbb
sub
shrl
add
cmp
incl
out
xor
outsb
das
jb
subb
xor
shrl
xor
sub
ljmp
add
cmp
jg
sahf
xchg
cwtl
xor
xor
das
shrl
xor
xchg
dec
mov
jo
xor
inc
xor
data16
ljmp
jne
xchg
xchg
xor
int3
sub
sbb
shlb
loope
in
xor
xor
xor
xor
das
xor
xor
dec
xor
pop
xor
xor
xor
mov
xor
pushl
and
xor
and
push
mov
xchg
cmp
ss
cmp
xor
divb
add
add
pop
cmp
aaa
sub
cmp
dec
cmp
arpl
cmp
pushl
cmpb
aaa
movsl
xor
cmp
ss
out
add
cmp
cmp
call
cmp
data16
cmp
aaa
in
cmp
cmp
ss
mov
cmp
cmp
sbb
cld
aaa
cld
or
sub
insb
sub
ret
sub
sub
ljmp
out
in
sub
das
inc
xchg
sub
jl
mov
jmp
xor
dec
xor
xor
sub
cli
xor
xor
daa
xor
popa
xor
mov
xchg
xor
mov
xor
das
inc
xor
xor
insb
xor
xor
xor
sub
pushl
inc
xor
xor
xor
mov
inc
xor
sbb
jp
xchg
aaa
mov
decl
pushl
shll
std
or
int
fdivl
pop
xor
cmp
inc
ret
sbb
sub
sarb
loope
cmc
xor
cmp
aaa
push
mov
decl
cmp
stos
cmp
cmp
xor
cmp
cmp
cmp
xchg
cmp
sarl
out
icebp
cmp
aaa
pop
cmp
cmp
cmp
cld
pushl
dec
cmp
cmp
js
xchg
mov
cmp
notl
sub
jp
dec
cld
sub
dec
sub
decl
sub
jle
mov
xchg
sub
movsb
sub
sub
pop
clc
mov
sub
sub
inc
adc
sbb
cmp
inc
sub
sub
push
sub
outsl
cmp
outsl
inc
mov
adc
pop
das
sub
push
sub
popf
sub
out
sub
xor
inc
incl
cs
sub
xor
loopne
pop
xor
xor
das
in
or
xor
and
cmp
sbb
jbe
jnp
jmp
pop
or
das
inc
xor
xor
xor
xor
addr16
xor
xor
xor
xchg
icebp
pushl
stos
xor
mov
mov
ss
adc
pop
xlat
jg
fildll
cmp
je
jbe
jns
xorb
pushl
jle
mov
mov
push
aaa
jl
cmp
aaa
push
xor
ljmp
cld
push
cmp
popa
cmp
xor
cmp
ss
or
dec
xor
inc
jg
cmp
jno
cmp
fbstp
push
cmp
cmp
lcall
pop
sub
cmp
cmp
ss
ljmp
aaa
xor
cmc
incl
bound
popa
cmp
xchg
cmp
cmp
aaa
aam
hlt
cmp
iret
sarb
in
sub
out
leave
sub
pop
sub
mov
mov
sub
cld
sub
sub
jg
cmc
lods
cs
sub
mov
xchg
sub
mov
push
out
sub
sub
outsb
mov
hlt
ljmp
mov
sub
subl
pushl
push
aaa
xor
xor
xor
ret
mov
les
clc
lea
xor
adc
test
jg
pushl
or
mov
push
aaa
push
arpl
cmp
mov
aaa
jae
test
mov
nop
xor
push
xor
cmp
xor
cmp
pushl
aaa
add
aaa
cmp
jns
xchg
xor
das
sti
rcr
lock
xor
xor
xor
xor
cltd
inc
xor
insl
fstpt
xor
xorl
xor
xor
std
sbb
push
xor
cld
mov
xchg
xor
cli
outsl
mov
in
xor
xor
add
mov
xor
leave
xor
cmp
pop
xor
ss
movsl
decl
xor
ss
or
or
ss
das
cld
outsl
mov
pushf
ss
xor
xor
jne
outsl
cmp
xor
push
dec
cmp
xor
test
aas
cmp
fidivl
ja
negb
cmp
aaa
shll
jmp
aaa
cmp
lock
sar
dec
xor
repz
xchg
mov
repz
cmp
jb
cmp
mov
std
cmp
sarb
sarl
ljmp
xor
outsl
jno
mov
or
push
sub
jns
xchg
cs
ret
das
in
repz
push
sub
fistps
sti
jge
add
pop
pop
add
add
mov
add
jae
add
inc
popa
arpl
xchg
add
jne
outsb
gs
adc
gs
push
dec
dec
add
mov
int3
sarb
adc
data16
popa
jb
pop
dec
imul
push
imul
mov
aaa
push
push
push
outsl
popa
insl
sbb
mov
inc
adc
addr16
cs
out
testb
popa
je
jae
and
arpl
gs
and
jo
jae
arpl
arpl
imul
daa
and
jae
cmp
bound
and
ss
sti
jbe
jmp
arpl
fmull
jns
or
imul
in
inc
jo
adc
push
push
jb
jns
gs
add
xor
pop
mov
and
jbe
dec
popa
fmull
enter
jb
cmp
in
aas
jae
outsl
outsb
imul
jae
test
mov
ror
imul
inc
adc
popa
gs
jg
bound
ja
ljmp
insb
popa
push
ds
pop
inc
js
fwait
mov
arpl
jns
adcl
sti
jns
dec
jmp
inc
fs
popa
mov
inc
insb
andl
jne
fmull
outsl
popa
dec
inc
inc
xor
push
sub
inc
inc
mov
insb
dec
lods
inc
jb
adc
div
fiadds
outsl
sub
cmp
push
or
lods
or
inc
push
or
popa
dec
pcmpeqw
pop
sub
sub
adc
jb
pop
sub
out
movd
or
mov
push
xchg
insl
jbe
jnp
xchg
orb
outsl
dec
push
and
fs
daa
push
sti
imul
jecxz
jl
insb
sti
imul
mov
imul
xchg
pop
insl
jae
addr16
mov
dec
xor
pop
inc
dec
inc
je
outsb
aaa
push
jno
adc
sub
add
out
adc
xor
xor
add
fwait
mov
sbb
daa
jno
mov
mov
adc
out
ja
outsl
add
or
jnp
insb
out
cmp
sbb
add
paddd
mov
add
or
lcall
pusha
inc
repz
and
int
dec
sbb
add
cmp
imul
push
lock
add
sti
das
ja
popf
add
mov
inc
lcall
add
insb
or
add
add
out
call
outsl
lods
add
pop
pusha
jne
mov
fimuls
arpl
push
outsb
movb
int
add
clc
loope
fcomip
push
xchg
xor
ret
and
jnp
add
add
js
mov
dec
cmp
add
pop
add
add
pop
inc
dec
sub
push
js
test
or
jecxz
mov
or
in
push
inc
or
pop
push
add
icebp
push
inc
dec
push
mov
add
mov
cld
daa
mov
add
rolb
nop
add
add
pop
and
outsb
test
shlb
jns
add
out
inc
add
add
add
add
push
push
and
imul
jg
sub
adc
idiv
incl
jae
mov
add
add
push
add
jb
jbe
sub
inc
les
add
ss
inc
popa
adc
pop
add
gs
je
inc
imul
outsb
addr16
or
imul
inc
insb
jne
push
notb
insl
and
je
push
imul
or
jo
insb
outsl
jae
dec
popa
outsb
fs
ds
sub
icebp
pop
jnp
mov
jae
outsl
jbe
inc
js
and
jo
jle
cmovle
inc
inc
or
das
fstpt
arpl
outsl
arpl
rcr
mov
or
dec
fs
outsl
sti
sbb
adc
dec
outsb
outsw
adc
in
lcall
packuswb
mov
jb
outsb
xor
imul
push
pushf
gs
into
xchg
int
jnp
push
xchg
jae
outsl
outsb
std
fdivrs
fs
dec
outsl
popa
fs
mov
fdivs
mov
fldl
out
jle
je
adc
icebp
cmp
jle
gs
outsl
outsl
insb
add
xor
bound
mov
lock
outsl
je
in
and
inc
xor
push
cmp
ret
faddp
add
fbstp
sti
imul
sub
lret
test
mov
decl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
insl
fstpt
dec
adc
or
and
or
sbb
mov
jp
call
and
incl
sbb
or
repz
and
inc
mov
jns
aaa
xor
pop
call
adc
xchg
sbb
xorl
das
outsl
bound
push
xchg
lock
push
or
icebp
adc
add
mov
fisttpl
push
test
jno
mov
add
push
push
dec
mov
add
out
movsl
dec
mov
mov
fbstp
lcall
or
push
andl
shrb
push
cs
or
out
mov
inc
popa
mov
or
mov
xor
std
jecxz
mov
or
fbstp
pop
push
sbb
pop
pop
push
push
jnp
je
wbinvd
sbb
mov
test
imul
or
push
sub
ds
andl
jb
cmp
adc
ret
jb
jae
arpl
jge
insl
arpl
pop
arpl
je
subb
ja
je
xchg
or
insb
sti
icebp
out
xchg
or
insl
bound
scas
ja
or
xlat
dec
jb,pt
jbe
push
sbb
outsb
arpl
clc
ret
lret
inc
inc
js
inc
jb
dec
aam
lret
pop
aaa
and
outsb
je
je
insl
mov
inc
arpl
push
jae
sbb
mov
and
xor
sub
rcl
je
sbb
jne
jo
or
jp
cld
or
out
inc
aaa
jno
or
jne
mov
mov
dec
dec
fs
aam
mov
dec
adc
fnsave
gs
or
mov
inc
ds
push
outsl
mov
mov
push
jne
jae
xchg
inc
jp
jae
xor
ficoml
or
push
gs
mov
popa
inc
sbb
sub
outsb
or
jo
inc
dec
mov
and
push
ljmp
jg
imul
pusha
jl
push
inc
dec
add
sbb
pop
ja
cmpsl
jg
adc
add
add
mov
adc
in
cmp
add
add
adc
leave
outsb
push
in
add
pop
sbb
add
mov
or
pop
iret
jb
flds
aaa
test
js
aaa
add
sub
xchg
push
cs
testb
jb
nop
xor
lock
jb,pn
popa
push
in
add
cmpsl
insb
push
cs
mov
pop
mov
sahf
imul
or
repz
jo
push
xor
sbb
jns
add
lock
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
