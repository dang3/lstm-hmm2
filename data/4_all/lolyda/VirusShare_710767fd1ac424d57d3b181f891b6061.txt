daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
in
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
in
lock
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
lods
into
mov
mov
or
shl
add
inc
mov
mov
shrl
stc
lea
mov
push
arpl
clc
shr
rep
pop
push
and
mov
movsb
dec
int
mov
and
pop
push
push
lea
fnsave
sbb
mov
mov
jo
inc
cmpsb
jmp
cmp
call
push
xor
fs
into
bound
and
bound
xchg
sbb
ss
int
lahf
adc
pop
mov
xor
in
in
mov
testl
in
pop
pop
cs
das
jnp
lea
pop
sub
mov
or
xor
outsb
inc
sbb
negl
push
xchg
inc
je
jne
adc
cmp
sub
inc
mov
sbb
adc
fmuls
idiv
test
cmpb
jne
adc
mov
subb
nop
ret
jecxz
xchg
int
pushf
push
pop
mov
push
push
xor
xorl
das
xor
arpl
lcall
lds
adc
fcomi
jp
push
cmpsb
sbb
add
dec
push
mov
testb
out
jne,pn
orl
ss
or
or
stos
push
out
push
mov
or
push
dec
push
dec
and
add
bound
and
cmp
fidivs
imul
js,pt
push
dec
adc
push
pop
mov
imul
mov
loope
or
fcmovnb
push
push
xchg
xor
sub
rol
or
mov
lods
jge
mov
adc
sub
je
ja
and
or
sub
or
push
out
js,pn
mov
push
push
sub
push
pop
fcomps
cmp
push
data16
setg
xchg
sbb
adc
sbb
cld
push
mov
xor
add
jg
fisttpll
incl
lea
push
push
dec
mov
or
in
lods
fwait
push
push
test
btc
lods
sub
dec
cmp
pusha
push
sbb
les
adc
push
cwtl
loop
jl
pop
push
push
dec
cmp
adc
or
inc
mov
add
lock
jb
mov
lret
add
jl
or
or
push
and
dec
lret
in
push
push
add
mov
fs
lret
add
repz
hlt
mov
dec
mov
outsl
jae
mov
adcl
ds
insb
sar
cmp
mov
ret
mulb
sarl
lcall
or
xor
test
aas
sbb
sbb
jl
dec
ret
pop
and
fs
cwtl
lret
xchg
push
push
sub
in
sahf
aad
cmp
or
es
or
iret
dec
inc
push
and
xchg
pusha
adc
adc
test
sbb
sbb
fisttpl
push
xchg
sbb
mov
mov
push
xor
mov
cli
stos
sbb
xor
sar
cld
inc
subl
cltd
iret
xor
dec
push
add
cmpb
jne
test
jle
jae
fldt
dec
jns
add
das
inc
outsl
xlat
push
cld
in
add
out
or
jmp
std
rorl
leave
xchg
add
mov
mov
leave
sbb
lea
fcmovnbe
loopne
js
sbb
sub
mov
inc
mov
cmp
lea
shl
lret
pop
pop
sarl
leave
arpl
ja
push
mov
adc
pop
jb
std
loopne
sbb
ret
sub
bound
xor
shrl
push
push
into
jge
adc
mov
xor
lret
shlb
jecxz
push
fisttpll
jne
aaa
mov
ljmp
int3
fisubrs
mov
sbb
adc
inc
sbb
shr
mov
mov
fmuls
push
push
lea
push
shl
gs
andb
fcomps
jmp
scas
inc
stos
mov
push
rep
mov
in
push
scas
jo
or
xchg
adc
cmpsb
pop
dec
mov
inc
fsubs
or
shlb
imul
mov
out
and
outsl
test
jge
mov
inc
mov
loope
lea
ja
pop
ja
xor
and
mov
xor
or
movsl
or
mov
push
int
push
sbb
push
test
sbb
pop
and
leave
test
dec
mov
aam
cmp
xor
xor
popl
shrl
dec
adc
shrb
dec
sbb
inc
sbb
dec
pushf
xchg
add
add
mov
push
rcrl
mov
push
or
xor
inc
push
mov
push
pop
cmc
shr
push
and
inc
out
pop
or
adc
adc
fsts
jne
inc
xchg
add
or
mov
je
sbb
call
cltd
mov
cmp
sub
xor
add
sbb
xchg
lret
add
xchg
fimull
or
sub
in
push
and
push
push
in
sbb
add
and
jbe
outsl
subl
cmpl
adc
push
mov
sub
jae
insl
adc
or
xor
ss
xlat
mov
adc
adc
je
leave
out
xor
xor
sbb
aaa
scas
stc
neg
sbb
mov
mov
mov
out
aas
push
data16
mov
mov
xor
sbb
mov
sbb
jne
inc
add
out
add
xor
inc
ret
dec
inc
insb
push
and
dec
xchg
mov
and
movl
dec
adc
iret
jb
xorb
jmp
mov
outsl
call
jmp
inc
jnp
sbb
inc
sarl
push
xchg
imul
mov
pushf
int
orb
pop
add
pop
lock
dec
paddusb
and
lahf
sbb
sub
pusha
pop
les
mov
or
cmp
jne
jp
pushf
pusha
mov
mov
and
add
adc
mov
loope
aaa
into
or
inc
cwtl
popf
aad
dec
push
sbb
push
fbld
mov
pop
inc
pop
or
pusha
push
cmp
sbb
sbb
jle
mov
push
setnp
push
insb
push
mov
pop
in
add
pushf
push
or
rclb
sbb
xor
sbb
adc
int3
push
test
shrl
inc
fadd
out
jmp
inc
data16
sbb
in
inc
mov
js
xor
jnp
xchg
and
xor
sbb
mov
add
imul
push
pop
mov
and
sub
lcall
aas
dec
or
hlt
mul
nop
movsl
sti
pop
xchg
pop
aas
and
pop
mov
push
push
pop
fbstp
dec
dec
mov
jne
inc
clc
pushf
mov
mov
or
adc
mov
lods
adc
incl
int3
add
lahf
inc
inc
mov
js
fnstsw
lock
mov
mov
push
and
data16
notl
push
jp
fld
pusha
sbb
push
in
push
pusha
jecxz
jae
je
lock
cmp
mov
bsf
int3
push
cmp
insb
fwait
mov
xchg
jge
insb
mov
pop
adc
lds
int
push
and
cmp
push
insb
shrb
sbb
movsb
or
fisubrl
lret
and
sbb
push
sbb
add
push
fdiv
jo
jne
clc
dec
hlt
jmp
and
jle
adc
shrl
inc
test
fwait
loopne
sub
add
clc
out
sbb
int3
or
pop
adc
push
xor
push
in
cli
jmp
pop
mov
movsb
mov
pusha
push
pushf
mov
ret
movups
les
or
mov
dec
cmp
shlb
sbbb
mov
stos
push
or
sbb
adc
int3
dec
mov
push
aaa
pop
inc
aam
push
xor
stos
cmpsb
or
call
dec
and
out
cmp
add
int3
pushf
and
dec
mov
shlw
popa
fidivl
mov
inc
dec
repz
inc
sbb
sbb
adc
or
or
outsw
enter
sbbl
dec
add
jae
in
hlt
in
add
in
repnz
cmp
call
push
in
rcrl
in
inc
and
or
enter
mov
cmc
push
add
mov
inc
inc
leave
xor
xchg
out
pop
mov
and
lock
push
or
adc
inc
xor
out
push
jge
cld
in
pop
adc
cmp
push
add
xor
jmp
pushf
loopne
jo
jo
fs
xor
lock
faddp
stc
mov
not
xor
cmp
out
mov
pop
xor
sbb
xchg
or
lds
aam
bound
push
call
and
pusha
jb
adc
jns
pusha
jne
es
aad
ret
push
pop
sub
sub
and
push
out
rolb
cld
push
push
add
notb
adc
push
push
punpckhwd
leave
or
cmp
and
sbb
inc
xor
arpl
pop
rcrl
sub
xchg
lea
lods
mov
prefetch
pop
jae,pn
shrl
adc
call
push
adc
xor
add
repz
add
sbb
sub
adc
movb
mov
mov
inc
sub
cmp
popa
invd
fs
ficoml
hlt
adc
and
sar
jae
sub
je
inc
rcrb
or
or
add
or
or
jae
sbb
adc
push
or
icebp
rorl
jns
lret
push
orb
and
movsl
jp
clc
mov
andb
or
sbb
jb
mov
xor
addb
push
fldl
lock
sbb
aad
adc
divb
call
rcl
push
push
dec
add
cs
or
leave
jae
daa
jne
push
xor
fs
cltd
idiv
mov
mov
add
ret
mov
add
cmp
jb
or
stos
fnstsw
in
cmp
jg
arpl
addr16
sbb
mov
addr16
fcompl
sbb
sbb
aam
enter
sbb
sarb
mov
test
sbb
sbb
sbb
xchg
nop
mov
test
sbb
je
insb
push
fs
pop
pop
sbb
sbb
push
dec
dec
inc
sbb
sbb
inc
cmp
xor
sbb
sbb
sub
and
sbb
sbb
sbb
adc
sbb
sbb
or
add
repnz
add
inc
clc
hlt
ds
pop
sub
mov
inc
sbb
sbb
mov
xchg
cwtl
pushf
mov
movsb
test
mov
repnz
mov
inc
mov
xor
int3
rcl
fs
add
cmp
call
xor
push
pop
sub
jmp
sub
adc
push
push
scas
jmp
cmp
and
popf
loope
aad
cmpsl
pop
add
ret
push
xor
pop
orb
cwtl
inc
jne
add
fwait
pop
jmp
stc
mov
xor
mov
ljmp
inc
orl
push
mov
xchg
insl
xlat
jmp
or
or
lahf
mov
xchg
inc
cmp
cltd
mov
dec
cld
sbb
push
add
mov
in
out
mov
add
pushf
push
add
addb
nop
mov
xor
cmc
ss
in
and
add
xor
mov
sti
and
inc
or
add
or
mov
add
jbe
aam
dec
movsb
cld
fdivrp
rclb
add
movzwl
jmp
sub
jbe
xor
cmc
push
pop
pusha
push
push
and
push
std
jg
imulb
xchg
cwtl
xor
inc
in
mov
mov
mov
mov
and
pop
mov
call
xchg
add
lea
add
das
and
out
out
inc
call
daa
inc
lahf
mov
cld
or
and
xor
xlat
and
mov
clc
jne
push
adc
enter
insl
fsubr
xor
mov
cmp
mov
inc
lea
cmp
cmp
paddusb
scas
int3
add
dec
lock
stc
enter
mov
testb
and
add
shrl
mov
jl
dec
shll
pop
aam
dec
xor
mov
lock
adc
xor
fwait
rorl
dec
ljmp
shll
inc
push
bound
dec
jb
scas
sahf
cs
add
push
add
adc
pop
or
mov
or
sbb
movsl
leave
adc
mov
push
lea
or
in
imul
inc
add
mov
mov
ss
jp
nop
xor
adc
add
jmp
insl
sbb
comiss
repz
sub
pop
sub
adc
aaa
inc
out
mov
out
movhps
xlat
mov
pop
sbb
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
jne
shll
orl
test
pop
mov
mov
xlat
cltd
pop
cmpsb
pop
push
push
addr16
mov
xlat
xor
mov
adc
scas
imul
adcl
push
rcl
jne
fsqrt
or
jge
pop
dec
mov
fnstenvs
dec
loop
cmpsb
imul
mov
orb
bound
dec
imul
negl
adc
fmull
cmpsb
imul
scas
jmp
in
clc
add
test
out
mov
adc
in
into
sahf
push
inc
loope
or
jbe
inc
mov
das
sbb
add
adc
sub
data16
inc
das
cmp
dec
xlat
xor
xor
and
sub
sbb
dec
shll
adc
or
add
cs
scas
pop
hlt
out
pop
call
xor
xlat
faddl
ror
les
xor
mov
mov
lcall
sbb
jl
and
inc
pop
mov
push
pop
mov
add
cs
adc
and
str
xchg
nop
and
pop
pop
and
nop
and
adc
xor
and
aas
adc
push
or
sub
add
das
div
ljmp
fcoms
rcrb
aaa
xor
mov
stos
mov
int3
das
mov
shll
mov
dec
xchg
nop
mov
xor
xlat
mov
and
inc
sub
xchg
xor
frndint
and
inc
das
rcrb
push
jae
daa
lock
push
enter
add
sbb
stos
push
repnz
push
pop
dec
sub
andb
dec
and
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
into
xor
adc
sti
decl
xor
fs
insb
add
push
inc
push
or
push
push
xor
adc
ds
inc
push
sbb
inc
push
jo
in
mov
ret
cmpsb
mov
clc
std
cld
cli
in
jg
cltd
push
idiv
std
mov
sti
or
clc
cmp
cld
jmp
sbb
out
or
or
mov
int3
lcall
mov
dec
leave
sbb
addr16
push
pop
insb
push
bound
imul
insl
pushaw
pop
cli
lcall
pushw
aas
dec
push
pop
gs
bound
or
inc
std
jnp
pusha
ret
mov
bound
xchg
ret
mov
or
std
xchg
ret
int
fists
test
or
mov
xchg
mov
repz
push
or
shlb
int3
aaa
dec
shr
sub
dec
pop
bound
mov
inc
inc
sbb
mov
xchg
fdivrp
push
sbb
incb
out
push
xchg
add
pop
or
cmp
nop
movsl
add
cld
pop
add
sub
or
xchg
or
or
scas
jle
pop
and
xchg
jb
cmp
pop
and
jnp
fstpl
mov
daa
adc
sub
ja
arpl
dec
daa
dec
add
imul
pop
jo
outsl
ja
movsb
push
sbb
sub
jae
sub
in
jl
add
xchg
addr16
fcmovne
pop
daa
or
push
shlb
out
lcall
add
adc
call
inc
adc
inc
stc
in
call
andb
add
stc
jo
mov
mov
data16
add
stc
in
in
dec
inc
push
pop
loopne
sub
xchg
in
lcall
mov
cmp
test
xchg
xchg
cli
dec
push
call
adc
push
jb
aas
imul
ja
xchg
dec
pop
jge
push
jb
arpl
add
fists
arpl
and
push
xor
jg
idiv
insl
hlt
arpl
push
add
ljmp
loop
dec
push
jge
push
jno
out
dec
cli
je
std
sbb
push
or
addr16
add
in
dec
pop
push
loopne
pop
cld
dec
outsl
in
out
sbb
mov
dec
dec
xchg
addl
pushl
dec
testl
add
pop
loopne
jmp
data16
gs
push
in
sti
dec
ljmp
or
call
jg
push
push
push
or
insl
incb
clc
hlt
cmpb
jg
xor
arpl
dec
cltd
clc
or
std
push
sahf
aas
cwtl
decl
insb
adc
orl
inc
jnp
inc
xchg
ret
in
push
dec
xchg
sbb
mov
xor
xchg
decl
push
jl
popl
stc
shll
jo
aaa
xor
add
cltd
xor
clc
mov
rorb
add
inc
pusha
or
or
or
aaa
or
inc
pop
push
mov
aas
add
dec
gs
mov
mov
rolb
jae
negb
mov
or
xchg
std
jmp
into
add
jg
test
daa
test
push
or
mov
idiv
jbe
dec
cltd
rolb
mov
xor
std
jb
xor
pop
or
std
or
insb
or
or
stos
push
xchg
test
xlat
sbb
and
decl
mov
pusha
inc
mov
aad
pop
movntps
addr16
mov
sub
in
pushl
fdivrp
xorl
bound
inc
jg
cmpb
dec
xchg
das
das
cld
out
or
jecxz
push
fs
mov
out
inc
push
jg
sti
pop
jb
dec
pusha
jnp
dec
jecxz
dec
sbb
outsb
or
push
lahf
pop
clc
out
and
push
jo
pop
dec
mov
sti
pop
pop
ret
mov
insl
push
dec
jne
jno
incl
repz
xor
xor
sahf
lods
fnstsw
insl
cmp
je
testl
mov
roll
jno
jnp
in
mov
jnp
jno
push
fiadds
dec
xchg
inc
aaa
fnstsw
and
jle
add
fistpl
mov
inc
adc
pusha
loope
jno
aad
lret
lea
std
insl
xchg
cld
cmc
cmpl
push
cld
adc
fdivp
mov
out
cmpb
sub
adc
stc
mov
pop
and
insl
testl
adc
push
mov
out
sbb
sbb
jnp
or
dec
mov
cmpl
cli
inc
jb
lock
mov
jg
cmp
mov
inc
mov
cmp
aaa
jl
clc
or
outsb
xor
out
add
mov
fsts
adc
jo
ss
test
sbb
jecxz
mov
pop
jg
mov
jnp
pop
in
es
jecxz
and
enter
pop
push
int3
enter
filds
notl
js
fbstp
cmc
cld
outsl
add
pop
repz
mov
pop
insl
jl
jmp
push
cmpb
insl
sub
decb
sbb
jae
test
repz
cmp
shll
data16
sbb
icebp
or
cld
pop
xchg
cmp
jmp
cmp
jo
dec
pop
das
js
sub
push
gs
mov
in
cmpsb
inc
xorl
jge
sti
stc
arpl
loope
push
jno
popf
test
sub
pop
add
sarl
sub
dec
loopne
pop
mov
jmp
xchg
aaa
das
jae
loopne
add
add
gs
push
push
les
pushl
jo
in
jmp
or
cmp
test
aad
xor
jecxz
mov
lds
dec
push
test
frstor
fildll
jmp
stos
fs
jnp
ja
sti
movsl
pop
push
out
inc
jmp
das
mov
rcll
push
xchg
sbb
cmp
xor
xorl
aas
jmp
and
and
dec
add
jecxz
jle
add
jo
mov
jecxz
inc
mov
int
lcall
or
out
jle
push
add
out
jg
or
jmp
xorb
add
add
lds
add
add
test
mov
inc
std
repz
inc
loop
inc
jecxz
lock
or
imul
sub
jmp
add
or
lahf
dec
fs
xor
push
xchg
out
sub
inc
fistps
lods
mov
dec
arpl
or
ds
lods
jg
fistpll
jg
sbb
cmp
ret
decb
xorb
loope
sbbl
add
xor
mov
in
mov
pusha
pushf
add
adc
outsb
cmpsl
rclb
outsl
icebp
xor
add
outsl
das
xchg
inc
lods
data16
sti
insl
movsb
add
fnstenv
in
or
jecxz
xor
push
aaa
push
mov
out
sti
adc
and
adc
pushw
sbb
and
jg
in
imul
add
gs
popa
neg
in
into
mov
roll
testb
aas
testl
out
jg
arpl
bound
pop
or
clc
in
shll
mov
outsl
pop
cli
outsl
sbb
adc
jp
out
jg
div
outsl
jge
sti
jge
pop
imul
data16
mov
pop
mov
ret
mov
push
sbb
cli
add
sbb
and
jbe
outsl
mov
dec
ret
lret
add
jne
adc
jecxz
add
repz
in
mov
lds
lea
insl
mov
inc
cmc
out
jl
jle
pop
cli
mov
jge
jno
fs
dec
add
outsl
jmp
jecxz
jg
repz
addr16
repz
int3
adc
inc
out
repz
testb
in
imul
cmc
ret
repz
clc
xor
xchg
jae
and
cmp
cmp
mov
inc
adc
mov
cmc
idivl
divb
jl
idiv
aas
xor
push
mov
xchg
cs
lret
in
push
hlt
mov
leave
repnz
clc
xorl
sti
shl
xor
or
or
pop
leave
jecxz
xchg
fwait
pop
pop
mov
dec
xor
loope
jmp
pushf
imul
xor
nop
add
hlt
mov
or
movsl
add
cs
push
clc
dec
in
mov
ja
push
jle
or
or
dec
and
mov
adc
mov
test
adc
gs
pop
repnz
lahf
outsl
mov
jecxz
or
dec
dec
shll
mov
xor
dec
idiv
loopne
aad
mov
jne
pusha
mov
int
in
cli
insb
test
addb
bound
dec
push
lods
in
jb
pop
fdiv
add
testb
stc
in
sbb
add
inc
add
fwait
std
arpl
clc
js
icebp
cld
and
cs
xor
out
bound
ret
pop
in
mov
in
add
ret
imul
add
pop
stc
in
idiv
in
sub
push
ffree
ja
std
loope
jecxz
cs
sub
inc
push
mov
xchg
sub
xchg
and
ljmp
int
js
loope
add
jecxz
or
pusha
stc
mov
push
pop
cmc
and
int
repz
aas
push
mov
push
push
pop
xchg
enter
xchg
xor
sar
in
dec
push
adc
xchg
xlat
sbb
movsl
pop
mov
fisttpll
andb
gs
push
js
pop
dec
in
jnp
pop
mov
mov
icebp
in
outsl
mov
mov
inc
add
jecxz
add
icebp
fimull
bound
clc
movsl
add
jo
mov
scas
mov
or
ljmp
loopne
add
add
jmp
and
inc
add
add
loop
fdivr
pop
add
lds
leave
adc
cld
jno
jp
pop
das
cmp
movsl
add
jle
outsl
sbb
cmp
lock
scas
in
or
loopne
cmc
test
and
add
ds
cwtl
rclb
cmp
cwtl
ret
aas
add
mov
add
or
in
and
gs
mov
decl
push
push
pop
pop
lds
gs
mov
mov
cmp
mov
jge
or
incl
adc
dec
dec
add
sti
jmp
push
push
cmpl
dec
add
in
dec
xchg
sbb
cmp
inc
add
push
adc
incl
js
dec
out
cmp
add
xchg
into
mov
mov
dec
pop
call
cld
mov
testl
clc
loope
fcmovnb
aaa
xor
add
cld
movsl
add
cmp
pop
jno
dec
sti
outsl
imull
insl
add
ljmp
lcall
clc
das
jl
cld
jecxz
mov
popf
pusha
mov
test
xchg
push
add
mov
dec
lods
or
pop
std
push
lcall
loopne
dec
cmp
es
push
push
dec
bound
mov
cmp
add
xlat
std
outsl
dec
push
cmp
div
add
lret
jb
out
fisubs
xchg
gs
jecxz
roll
xor
out
shr
testb
loopne
data16
or
testb
test
lock
dec
or
mov
pop
sub
in
cltd
roll
inc
add
cmpl
imul
or
xchg
mov
or
mov
call
stc
jle
adc
push
mov
mov
lds
icebp
jae
inc
decl
dec
add
iret
jo
jle
or
out
insl
cmp
std
pop
imul
std
jne
ja
xchg
es
mov
stc
xor
jno
or
aas
inc
insl
in
cmpb
or
jmp
fists
mov
add
jecxz
adc
sub
clc
pop
push
push
mov
pushl
mov
gs
dec
push
das
lea
cmp
ret
dec
inc
pop
je
mov
dec
mov
std
dec
xchg
push
push
sub
mov
jmp
push
jecxz
std
push
mov
rorl
adc
je
or
repz
mov
cmp
cld
daa
popa
stos
mov
pop
rcll
sar
mov
push
pusha
sarl
mov
call
dec
push
push
push
addr16
rol
cld
add
das
loope
test
pop
pop
std
adc
stos
decl
fdiv
xchg
mov
dec
mov
pop
test
fcom
lahf
jb
pop
dec
in
push
xchg
cli
mov
cs
das
jle
or
and
xor
add
sub
filds
stc
sarl
push
sti
push
cs
xchg
loopne
cmp
or
jo
mov
std
xor
xchg
insl
sti
shlb
cmp
outsl
and
stc
shl
push
insl
notl
pusha
adc
cmp
outsb
outsl
icebp
pop
mov
aam
lea
sbb
test
push
stc
xor
xor
push
dec
or
mov
mov
idivl
movsb
jnp
pop
adc
jno
push
stc
in
mov
add
popf
mov
testb
ret
mov
adc
mov
cli
push
pop
stos
out
xor
cltd
xor
mov
loope
lret
ret
and
and
push
imull
outsb
push
sbbl
aad
cvtps2pd
clc
inc
incl
and
dec
das
mov
mov
xor
cmp
push
jbe
ret
or
push
add
out
push
movsl
jle
push
addr16
arpl
je
leave
test
push
cmp
push
mov
test
leave
adc
xor
xor
sbb
mov
test
fsubl
testb
lahf
fisttps
dec
mov
decl
push
popa
mov
clc
push
in
push
mov
mov
pop
outsl
ret
dec
pushf
movsl
add
mov
in
cmp
mov
push
pop
in
xor
add
dec
inc
jecxz
jg
ljmp
sti
dec
mov
cmp
arpl
test
push
mov
stc
dec
dec
pop
out
fstpl
mov
cmp
inc
pop
jnp
lds
lret
jge
or
pop
sub
mov
mov
mov
lods
insl
je
mov
mov
in
stos
xbegin
jecxz
push
icebp
jno
jecxz
cmp
mov
add
dec
dec
push
test
daa
stos
jmp
ljmp
mov
xor
jno
test
mov
orl
push
or
roll
out
clc
incl
pop
jne
ljmp
sbb
jae
push
fsubrl
stos
xor
out
mov
mov
dec
cmp
inc
imul
push
ret
jl
xchg
outsl
cmp
insl
sbb
jb
dec
mov
insl
dec
in
insl
pop
jne
outsl
aad
fnstenv
inc
hlt
out
mov
out
out
xlat
mov
daa
push
add
or
dec
dec
mov
or
xchg
in
incl
syscall
inc
mov
inc
imul
or
fs
clc
cmp
pop
pop
jno
test
mov
sti
outsl
or
cmpl
test
jl
cli
push
je
xor
sbb
test
cmp
cmc
jbe
mov
jecxz
pop
cmpl
cld
jg
in
in
aaa
arpl
repz
je
orl
cmpl
addr16
push
cmp
cli
mov
cmp
addl
call
jb
xor
or
push
daa
lock
out
inc
or
fistl
mov
jmp
pop
scas
mov
cld
jmp
aas
and
push
cwtl
lock
push
fistpll
ja
out
push
loopne
add
jg
mov
pushf
cmp
shll
cmp
push
sbb
inc
add
pop
pop
aaa
fwait
jle
dec
inc
mov
pop
mov
push
aaa
incb
test
dec
add
xchg
ss
stos
cmp
mov
ss
xchg
pop
in
mov
jmp
lds
push
fcomip
xchg
cmp
lret
out
xchg
mov
add
insb
mov
cmp
inc
mov
inc
pop
mull
outsl
bound
mov
cmp
je
icebp
add
xchg
mov
test
lea
xor
test
xchg
out
call
xchg
xor
add
call
aaa
cmp
pop
push
sbb
insl
outsl
insl
jp
xor
sbb
mov
jg
mov
test
dec
jmp
dec
dec
add
jno
add
xor
mov
xor
add
imul
xor
mov
cmpsb
stos
std
outsl
aaa
sub
or
adc
lret
mov
mov
adcl
std
lret
pop
jg
dec
mov
pop
jae
addl
push
xor
jae
ret
xchg
out
mov
std
inc
stc
cmp
outsb
mov
mov
out
test
push
daa
stc
pop
ss
or
mov
add
incb
xor
hlt
pop
xor
repnz
mov
push
inc
repz
xor
pop
clc
sbb
sbb
add
sbbb
divl
in
sub
adc
popf
ds
cmp
pop
mov
xchg
out
jae
jecxz
xchg
mov
aas
pop
pushl
xorl
adc
cli
jae
loop
add
fildll
adc
push
pop
repz
js
insl
shl
mov
aas
xor
pop
xor
inc
jb
inc
push
sti
push
test
jle
sbb
ret
jecxz
jl
into
cli
mov
jne
imul
aad
mov
mov
mov
out
push
out
xchg
clc
pop
imul
jns
pop
add
pop
mov
cli
xchg
adc
inc
sbb
test
sti
mov
xorl
jne
loopne
incl
outsb
push
xchg
cmovns
mul
jecxz
mov
lret
cmp
push
pop
mov
sub
imul
add
outsb
xchg
sub
xor
imul
add
xchg
xchg
outsl
sbb
xchg
in
loope
jg
jg
mov
pop
ss
push
mov
outsl
fidivs
pop
mov
dec
push
push
push
dec
jae
sbb
mov
std
add
xor
xchg
inc
sbb
jecxz
xchg
cmp
fnstenv
loopne
pop
xchg
scas
sbbl
pop
hlt
sbbl
and
int
fisubrs
imul
daa
outsl
push
sbb
fnstsw
mov
xor
imul
outsl
aas
fisttpl
pop
or
lods
add
flds
insl
or
bound
jecxz
xor
stc
adc
ljmp
pushf
test
or
inc
or
cmp
movsl
decl
cmp
jo
outsb
and
fstpt
and
cmp
insl
lahf
jge
mov
aaa
push
je
and
adc
cmp
insl
ljmp
je
or
loop
sub
pop
or
out
xorl
aad
ss
or
lods
mov
clc
or
xchg
mov
cmp
pop
insl
adc
inc
sti
lea
orl
lret
cmp
mov
dec
fisttps
push
cmp
xchg
lret
mov
arpl
imul
mov
loop
cmp
repz
cmp
jle
sbb
sbb
cli
or
push
xor
test
jle
je
mov
sti
iret
enter
jmp
arpl
out
ljmp
outsl
sbb
or
xchg
inc
call
mov
mov
dec
jns
mov
xlat
push
test
ja
testb
aam
mov
call
xor
jb
xchg
or
mov
push
xor
mov
mov
push
mov
inc
inc
arpl
and
subl
ljmp
out
aaa
clc
fistps
ret
pop
mov
cld
pop
adc
jl
jae
das
xchg
sub
jmp
xor
outsb
pop
inc
ljmp
mov
pop
aaa
dec
jmp
inc
pop
pop
clc
sbb
cld
call
adcl
arpl
outsb
insb
add
mov
stos
lds
add
fsub
mov
ss
or
mov
pop
add
cmc
pusha
pop
fildl
mov
push
sbbb
mov
dec
incl
movsl
cmp
jg
outsl
dec
add
or
cmp
insb
add
push
outsb
pusha
sti
je
jecxz
sbb
aam
call
ss
in
push
mov
loope
and
jae
setge
fstl
jnp
ret
pushl
jnp
mov
mov
xchg
imul
add
jns
or
scas
cmp
or
pop
popf
lock
adc
jae
or
fldcw
repz
call
and
sub
push
push
in
stos
add
adc
paddusw
cld
mov
lret
arpl
inc
out
imull
cld
jno
cli
je
stos
cmpsl
sti
addr16
inc
sti
add
pop
xchg
lret
jmp
jae
pop
jns
dec
mov
jo,pt
adc
adc
inc
out
dec
mov
arpl
xor
push
push
push
bound
movl
push
fdivrl
add
sti
int
aam
or
cld
iret
or
repz
sub
cld
in
out
jle
cli
test
std
lcall
cs
lcall
pop
mov
xlat
mov
push
ret
and
or
pop
adcl
pop
mov
ja
scas
test
insl
mov
pop
mov
aaa
mov
adc
jne
int
jmp
jl
mov
pop
stos
mov
daa
dec
bound
sbb
or
test
push
test
repnz
mov
pop
outsb
fistpll
cmp
daa
jecxz
sbb
jle
lea
pop
pop
push
xchg
xor
adc
pop
sbb
and
inc
cmpb
inc
jg
faddl
out
scas
push
jne
outsl
sbb
shrb
inc
adc
shll
push
push
or
jmp
push
imul
aas
and
push
sub
xor
add
jb
pop
cmc
js
cmp
push
push
lcall
pop
or
or
jne
pop
mov
test
addl
test
movb
dec
xor
mov
in
aad
std
aad
in
insb
insb
cmpsb
jle
in
test
mov
sbb
pop
mov
mov
pusha
stc
in
jnp
arpl
sbb
mov
mov
mov
iret
mov
outsl
mov
mov
loopne
daa
sbb
push
fstpl
test
xor
test
je
pop
data16
incl
mov
mov
call
jecxz
xchg
sub
je
test
push
pop
mov
dec
push
test
insb
mov
clc
std
xor
sbb
ret
stc
dec
push
push
dec
cs
icebp
outsl
cltd
mov
sti
add
bound
xchg
les
call
jns
out
pop
incb
dec
aad
adc
lds
insl
sub
fstp
dec
out
jecxz
cs
in
fists
ja
xchg
repz
jecxz
cld
adc
mov
daa
or
movsb
xchg
push
movsl
push
or
pop
mov
mov
mov
mov
mulb
mov
out
xor
mov
push
xor
ficomps
jmp
fstpt
adc
inc
pop
push
push
daa
dec
cwtl
gs
or
loop
xor
incl
outsb
stos
mov
xchg
push
arpl
es
imul
jnp
mov
dec
pop
repz
loopne
dec
out
mov
cmp
lock
ss
cli
in
dec
jo
push
sti
repz
sub
aaa
pop
lock
sbb
sub
cs
xor
decl
jnp
insb
or
jg
inc
cmp
push
jle
sti
pop
pop
pop
dec
pop
jp
xchg
lock
mov
jge
lods
xchg
mov
or
inc
outsb
lods
pushf
lahf
andb
inc
mov
mov
mov
imul
loop
mov
sub
sub
aaa
pop
loope
push
call
pop
mov
jnp
cmc
int
gs
push
jne
cmpl
sub
sub
shl
cli
cld
inc
or
shll
adc
cmp
jg
pop
and
aas
lds
mov
pop
lds
xor
jl
inc
inc
lahf
lret
orl
push
inc
adc
test
arpl
pop
jg
mov
xchg
xchg
movsl
dec
fucom
es
into
adcb
mov
and
push
cmpsl
lock
cmp
push
push
mov
jl
decl
ficoml
mov
cmpsl
xchg
mov
call
fmull
sarl
xchg
adc
jecxz
cli
add
lea
divl
add
test
movsl
movsl
mov
fists
pop
xor
or
or
lods
cmc
push
dec
test
cli
dec
scas
jb
fistpl
dec
cli
aam
mov
sbb
icebp
mov
ljmp
jecxz
xor
punpckhwd
sti
lahf
pop
push
data16
gs
fldt
adc
mov
lret
movsl
or
mov
inc
dec
in
sub
sub
add
push
adc
stc
shlb
fdivrl
jecxz
xchg
mov
dec
jecxz
sub
sub
imul
lret
insl
sub
push
mov
mov
out
dec
out
daa
dec
dec
xchg
mov
dec
shll
lcall
lea
jg
out
daa
lahf
mov
jl
loopne
sbb
sub
out
mov
add
mov
mov
jp
filds
nop
sub
push
or
xor
or
movsl
mov
cs
mov
jg
lock
loopne
add
xchg
or
jns
andl
jg
fdivr
cmp
ret
shl
xchg
pop
lcall
and
adc
fsubl
fstl
xor
inc
inc
mov
push
sub
jmp
add
dec
ss
lcall
or
shll
int3
iret
cld
out
mov
fyl2xp1
pop
or
or
decb
int3
mov
jecxz
imull
and
jne
stos
mov
xchg
das
gs
icebp
stos
pop
mov
mov
push
js
idivl
lcall
adc
dec
cmc
pop
lret
stc
push
dec
push
push
outsl
outsb
mov
adc
push
dec
push
push
outsl
sbb
adc
push
dec
cld
dec
mov
add
push
mov
lea
add
mov
faddl
xor
aad
jle
lea
js
mov
rcll
rcr
pop
fwait
mov
imull
add
sbb
cmpl
lea
mov
lea
and
mov
ja
std
adc
js
std
xchg
icebp
xor
jo
mov
fmull
pop
fisttpl
inc
push
shll
lock
push
sbb
insb
inc
pushf
leave
call
shrl
cmp
jle
loopne
dec
ss
jo
cmp
shlb
cmp
clc
mov
push
dec
dec
test
or
xchg
lret
xor
mov
cmp
test
jle
fisttpll
add
xor
xchg
insl
xchg
jg
rorl
dec
push
push
push
loopne
or
mov
movsl
or
xchg
push
or
jecxz
mov
mov
add
jns
xchg
add
sub
jg
ret
mov
loopne
sti
idivl
jl
push
mov
les
and
lods
into
loopne
enter
mov
xor
dec
pop
xchg
push
mov
pop
mov
js
and
ja
push
xor
and
pop
cmpsb
cmpsl
in
or
sbbb
fiadds
sbb
mov
add
ja
loop
sub
push
or
sbb
arpl
ja
cltd
adc
sbb
test
and
repnz
mov
pop
clc
lods
fldcw
cmp
sbb
into
cmp
mov
and
lds
ds
xchg
add
mov
mov
jge
push
pop
je
loope
jb
inc
push
pop
pop
cmpb
loopne
les
xchg
in
outsl
inc
andb
std
stos
adc
leave
push
std
enter
punpcklbw
mov
cli
outsl
and
das
stos
fisttpll
xchg
arpl
sub
shlb
xor
popf
pop
pop
jg
mov
ja
stc
push
mov
dec
cmpl
mov
push
push
push
pusha
push
sub
adc
iret
rclb
dec
pusha
or
ja
and
in
dec
dec
fucom
or
xchg
ret
lret
aaa
icebp
mov
or
jecxz
daa
test
add
jmp
popf
out
jae
leave
mov
shl
roll
roll
jo
ret
jne
daa
mov
aas
pop
stc
sub
or
push
in
and
push
add
add
mov
in
adc
fisttpll
ljmp
xchg
jnp
add
mov
imull
je
bound
mov
ja
es
jae
jno
fwait
js
mov
adc
outsl
push
ja
mov
pop
mov
jge
adc
jns
mov
push
dec
filds
adc
or
movsl
popa
stos
test
xchg
dec
adc
mov
jmp
arpl
push
arpl
mov
adc
loopne
cs
in
pop
fdivrp
sbb
adc
dec
add
mov
fisttpl
jle
fadds
fmuls
cmp
inc
ljmp
lret
mov
pop
test
aam
lcall
in
out
or
add
pop
rorl
sbb
mov
shll
std
add
fldt
and
sbb
pop
or
insl
fistl
imul
add
push
dec
arpl
sub
movzwl
push
pop
jge
ljmp
jo
jle
out
xor
jg
sub
sbbl
idiv
bound
dec
test
shrl
jno
jecxz
daa
xor
jmp
cli
push
jo
inc
fbld
loope
mov
or
daa
les
add
sub
pushf
mov
inc
or
push
stos
test
scas
fsub
ljmp
xor
insl
xor
dec
push
pop
mov
add
test
popf
add
iret
xor
sub
das
add
xlat
mov
xor
outsl
sub
mov
cmp
lods
dec
fld
and
mov
inc
or
inc
fcmovnbe
aam
daa
and
ret
mov
es
gs
mov
cmp
xor
xor
rcrl
add
fs
mov
sub
fs
enter
sarb
lods
dec
mov
or
jecxz
ret
in
sahf
fimull
cmp
jmp
shlb
fnsave
cmp
fsin
sbb
or
mov
divb
das
mov
push
pop
mov
mov
test
test
cmpsl
dec
xor
pop
loope
inc
sub
in
and
int
push
scas
cmp
mov
inc
sub
pop
jmp
cmpsb
test
pusha
cmpsb
test
imul
adc
outsb
inc
push
pop
std
push
imul
ds
sbb
jmp
arpl
xchg
test
pop
imul
xchg
fnstcw
into
add
jecxz
push
negl
sub
sbb
add
or
jb
adc
loop
in
cmp
cmp
sbb
or
xor
cli
test
or
jecxz
cmp
mov
fs
in
jmp
loope
cli
or
mov
loopne
test
shll
stc
mov
jo
mov
cld
call
inc
sub
mov
into
mov
das
movsb
mov
aaa
xor
stos
cs
mov
sub
pop
and
inc
mov
mov
sbb
mov
jle
sbb
sti
and
and
mov
out
and
add
insb
adc
rol
arpl
jg
decl
cmp
or
rorl
out
add
into
sbb
aaa
minps
sarl
mov
aad
daa
push
sbb
xor
push
add
movsl
sub
scas
repz
es
test
inc
cmp
ja
or
mov
sub
out
push
rcl
in
sbb
ficoml
cwtl
test
std
shll
mov
cs
repnz
loopne
test
lcall
pop
push
xchg
mov
jnp
sbb
cs
xor
and
sbb
loopne
out
mov
xchg
decl
das
stos
fsts
push
nop
sub
pop
repnz
fstpl
lock
daa
test
aaa
pop
cs
adc
pusha
mov
jl
xchg
incl
repz
jo
mov
xchg
sub
call
dec
popf
test
push
pop
cmpsb
ret
cwtl
stc
rcrl
test
inc
pop
xrelease
push
fadds
ja
pop
stos
insb
jmp
divb
sbb
push
mov
insb
xor
movsb
notl
mov
mov
stos
pop
sub
pusha
and
fdivs
sbbl
jnp
sub
lea
add
loope
jne
sti
dec
mov
aas
cmp
add
stc
or
add
cld
int3
and
add
push
dec
loop
and
sbb
loope
add
icebp
mov
lret
mov
add
cs
sbb
frndint
mov
dec
mov
mov
insl
pop
lods
jecxz
adc
xchg
mov
push
dec
out
sbb
cmp
roll
mov
lods
xor
pop
cmp
mov
dec
repz
mov
call
or
xor
add
cmp
dec
mov
or
cmp
cld
jae
adc
test
mov
aam
pop
test
lcall
sti
xlat
pop
clc
bound
push
cmp
jmp
sbb
adc
add
xchg
imul
mov
or
into
mov
addb
sbb
adc
or
or
xor
cld
sub
call
int3
xchg
clc
jle
xchg
or
shll
shll
aaa
sbb
leave
mov
cmp
and
inc
jns
bound
pop
pop
jecxz
push
jmp
stos
daa
dec
ja
add
in
mov
mov
fisubrs
push
jns
jnp
fsub
push
in
icebp
lret
add
dec
xor
cltd
lds
adc
cli
jne
cld
mov
cmpsb
push
cs
jl
xchg
clc
mov
mov
jg
js
lret
xor
aas
cmp
into
add
popf
jg
sti
repnz
test
mov
int
roll
inc
jbe
sbb
test
jmp
insl
fs
ret
in
test
outsl
mov
sbb
sbb
fucom
orl
sbb
cli
out
mov
shl
jecxz
sbb
in
divb
stos
sbb
notl
or
xor
hlt
bound
jmp
xchg
test
test
bound
add
testl
ja
cmp
jbe
push
cmp
push
dec
lret
insl
mov
dec
js
dec
cmp
orb
subl
flds
into
testb
inc
leave
mov
stc
incb
or
cwtl
inc
iret
pop
sbb
test
pop
arpl
daa
std
incl
pop
sar
pop
push
jnp
rol
frndint
test
xor
mov
adc
gs
cld
add
test
pop
test
sbb
icebp
mov
int
sbbl
roll
mov
inc
xchg
or
inc
xlat
je
repnz
and
jg
jg
ja
xchg
pop
sti
cmp
nop
pusha
shll
jo
xchg
loopne
shlb
sahf
mov
orl
or
add
cld
inc
out
xchg
lock
adc
jle
mov
arpl
aad
aad
cli
dec
ljmp
fwait
mov
push
lock
mov
pop
xchg
or
pop
and
iret
cli
dec
xor
mov
test
jge
std
fstpt
aas
or
mov
lret
testl
mov
or
adc
mov
dec
mov
adcl
adc
andl
jg
stos
jno
sub
in
imul
push
rcl
pop
mov
out
test
cltd
pop
cli
jae
test
mov
xchg
mov
mov
ljmp
fidivrl
adc
sub
sbb
adc
dec
enter
cltd
mov
pop
orl
je
sub
aaa
dec
rorb
lds
in
sbb
push
out
push
fyl2x
xchg
sub
outsl
scas
out
pop
iret
push
inc
es
add
adc
or
lods
arpl
or
aas
sti
xchg
movsl
shrb
push
dec
test
loop
cmc
stc
xchg
xchg
outsl
inc
js
push
ja
jmp
mov
mov
daa
jecxz
sbb
jecxz
sbb
mov
cmp
mov
cmp
sti
add
je
mov
or
sbbb
pusha
sbb
aad
cmp
imul
loopne
faddl
xor
lock
outsb
rcrb
jae
jno
lret
xor
in
repz
cmp
and
adc
cmpb
pop
push
ljmp
pop
mov
push
xchg
mov
mov
aas
push
push
sub
jnp
jmp
cs
lods
jne
pop
sbb
das
les
mov
and
jecxz
ret
cld
and
pop
add
add
add
sbb
aaa
sahf
fwait
cmp
pusha
orl
mov
inc
sti
pop
cmp
decb
lds
jno
push
push
cmp
rcrb
pop
aaa
ror
cmc
clc
xchg
xchg
sti
orb
bound
mov
lock
and
rcl
add
mov
call
lahf
movsl
mov
inc
out
out
xor
push
push
lock
jecxz
mov
insb
sbb
fsubl
daa
xchg
out
test
sbb
fdivs
jno
into
and
inc
dec
jne
xor
aam
jo
popa
fsubl
mov
out
sbb
sub
push
fsub
sub
mov
push
repnz
leave
push
xor
inc
enter
jb
adc
sub
jb
loop
shl
sbb
sub
mov
sub
mov
sub
mov
xchg
sbb
jg
sbb
mov
jb
mov
pushf
and
mov
mov
mov
mov
inc
aas
mov
out
push
in
clc
rclb
bound
mov
xchg
cmpsl
in
adc
mov
mov
push
xchg
repz
or
data16
sahf
out
out
sbb
jmp
sub
xchg
xchg
out
clc
mov
in
cmc
xor
inc
and
pop
int
sbb
cmp
mul
aas
loop
jae
in
cmp
add
and
adc
or
cli
mov
ret
sahf
mov
mov
inc
jge
minps
xor
lretw
lea
jmp
aad
and
dec
iret
mov
test
adc
jl
sbb
push
mov
adc
icebp
mov
in
sub
orl
add
cli
xchg
das
lock
lock
inc
fisttps
cli
inc
decl
sti
or
scas
cmp
jl
cld
jp
sbb
fadds
incl
xor
divb
outsl
mov
mov
sti
xor
cli
outsl
mov
cmp
cmp
rorb
add
jae
add
dec
lds
mov
mov
xchg
test
add
orl
cmc
lcall
mov
cmpb
daa
inc
cmp
ja
pop
adcl
and
add
mov
sbb
jae
sbb
pop
outsb
pop
idiv
jmp
jb
in
sbb
mov
out
test
jo
sar
outsb
inc
movsl
adc
icebp
loopne
xchg
push
clc
std
jne
divl
pop
hlt
in
sbb
imull
and
xchg
fwait
loopne
sbb
cmp
and
clc
in
pop
jbe
stc
inc
cmp
insb
and
std
ret
lahf
sti
dec
or
addr16
cld
roll
sti
addr16
inc
fnstsw
xchg
mov
je
and
add
fadds
cmp
enter
das
daa
aas
pushf
sbb
pop
sahf
sub
sbbb
inc
mov
mov
jb
testl
flds
and
jmp
fidivl
inc
pop
call
sbbl
popa
mov
pusha
or
aad
imul
popf
push
cld
add
inc
fwait
or
dec
gs
jg
fisttps
dec
xchg
push
pushl
aaa
lahf
cld
jecxz
aam
cmp
repz
dec
mov
push
gs
adc
sbb
cmp
adc
dec
and
ds
xor
pop
xor
insl
sbbb
dec
xor
inc
stc
dec
ljmp
cmp
mov
cmp
or
xchg
jmp
cmc
inc
dec
inc
push
pusha
xor
cli
cmp
xchg
add
adc
xchg
xchg
cmp
jecxz
cs
leave
insb
cmp
mov
clc
pusha
outsl
dec
xchg
out
push
in
mov
xor
inc
cli
inc
xor
fwait
dec
xchg
inc
pop
pop
push
pop
imul
xchg
dec
add
mov
insl
adc
dec
lds
cmpsb
loop
outsb
mov
cwtl
lahf
sti
or
or
out
ja
add
push
enter
daa
cmp
sub
dec
outsl
mov
sarl
sarb
mov
add
push
hlt
jle
dec
xor
mov
xor
xor
jp
xchg
mov
add
dec
or
orl
add
jp
push
insb
loope
in
adc
mov
fiadds
loop
adc
addb
push
push
dec
fwait
or
inc
or
xchg
cmovno
dec
push
mov
pop
or
pop
cmpl
dec
aaa
add
xchg
xchg
cmp
mov
sub
cmpsl
and
popf
inc
xchg
pushf
mov
fimuls
or
lea
das
mov
pop
sub
push
js
out
ficomps
xchg
orl
sub
int3
add
mov
push
or
loopne
idiv
dec
je
mov
cli
stc
clc
addb
pop
fistl
in
xchg
mov
inc
stc
push
lds
movsl
lods
mov
lea
add
add
test
jge
mov
testl
and
adc
mov
ja
dec
out
loopne
insl
sbb
test
cmp
mov
je
lods
daa
inc
sbb
jnp
sti
inc
sbb
add
in
xchg
push
push
aaa
js
test
or
outsl
out
pop
testl
jnp
addl
movsl
hlt
repnz
xchg
pop
jb
adc
fs
cmp
or
cmp
or
decb
or
jp
cmp
dec
inc
cmp
cmp
rcll
popa
jp
fabs
add
fbstp
cmp
mov
jg
push
and
push
lock
jno
and
xchg
pop
test
clc
and
add
ret
jnp
ljmp
dec
jl
add
pop
gs
in
outsl
mov
aam
stc
dec
dec
outsl
mov
add
std
frstor
or
xchg
inc
sub
clc
push
aad
mov
dec
dec
mov
addr16
test
add
aad
pusha
xchg
add
adc
arpl
mov
cltd
push
in
dec
mov
cld
sbb
cwtl
add
dec
imul
jge
sbb
inc
push
or
cmpsb
or
add
xchg
push
rcrl
not
push
in
lahf
loop
stos
jns
loop
ja
movsl
cli
push
push
ret
popf
repz
cli
add
pop
cs
gs
push
sub
gs
or
sbb
inc
mov
pop
hlt
mov
sbb
out
mov
mov
mov
fwait
add
idiv
jge
paddw
mov
mov
pop
sbb
jl
or
mov
imul
push
inc
outsb
jg
call
pop
xor
cmp
add
mov
cs
sbb
aaa
inc
fs
cmp
adc
inc
lea
aaa
je
cld
loope
or
dec
pop
scas
add
shrl
std
repnz
jmp
jmp
mov
daa
mull
xchg
pop
into
test
inc
and
inc
or
jae
mov
aaa
xchg
popa
dec
dec
xchg
dec
sub
in
or
xlat
outsb
cmp
repz
outsl
or
dec
mov
bound
cwtl
std
daa
call
jecxz
call
mov
push
loopne,pt
or
push
cmp
shrb
add
mov
or
jns
jge
test
cmp
test
push
rorl
xorl
pop
pop
mov
add
sub
icebp
cmpsb
xchg
push
in
push
aaa
jno
lret
cmpsl
andb
das
mov
push
stos
popa
jne
outsb
dec
lods
dec
shrb
mov
insl
divl
mov
loopne
out
pop
sarl
mov
out
ret
and
cmp
lds
andl
pop
cld
jo
xor
mov
push
or
xchg
pop
push
adc
jg
lcall
hlt
cmp
mov
js
add
cli
inc
push
xorb
cmpsb
inc
cmp
jge
push
mov
stos
mov
cmp
sti
cli
inc
xor
push
mov
or
fisubrs
pop
imul
xchg
test
insl
sbb
jecxz
lods
aaa
mov
movb
flds
push
dec
std
mov
aaa
push
out
jl
add
xlat
data16
inc
mov
xchg
jb
orb
lods
call
loopne
ret
mov
fcoms
lds
push
aad
pop
and
xor
mov
cmp
cmpsl
fstpt
push
mov
in
mov
adc
push
xor
dec
out
xor
mov
leave
stos
or
push
jge
mov
enter
ret
mov
or
mov
mov
stos
dec
jmp
jne
push
sbb
cmpsl
bound
xor
jl
xchg
add
stc
adc
pop
mov
outsb
add
nop
js
in
pop
clc
icebp
inc
push
add
mov
arpl
xor
pop
lock
scas
pop
lea
sbb
fisttps
pop
lret
adc
pop
mov
pop
test
rcrb
mov
dec
xor
add
mov
xor
pop
call
gs
jle
insb
xchg
sti
imul
roll
mov
jae
imul
mov
add
dec
xor
xchg
push
mov
bound
xor
pop
cli
sub
outsl
cs
mov
pop
and
lock
stc
push
mov
lods
pop
aas
lahf
jge
es
cmp
add
test
cmp
xor
xchg
mov
xor
out
cld
push
pop
and
pop
repnz
out
aas
ljmpw
adc
sub
dec
add
into
lcall
out
in
jg
mov
mov
std
pusha
push
inc
popa
mov
pop
fdivrl
fnstcw
or
jl
lahf
xlat
bound
mov
repz
int
pusha
pop
and
into
out
adc
add
repnz
daa
mov
mov
addr16
fstps
add
pop
out
enter
aas
mov
mov
ror
pop
and
add
popa
adc
or
scas
in
and
arpl
cmc
fs
pop
inc
imul
lds
aas
repnz
lock
std
loope
cmpsb
or
hlt
cld
out
mov
and
out
gs
adc
out
in
fstpt
mov
popa
gs
cwtl
insb
pop
cmc
aas
or
mov
test
pop
pop
xchg
psrld
pop
and
ljmp
mov
aas
test
push
add
addr16
imul
mov
out
add
pop
xchg
push
fnstenv
repz
jmp
xor
xor
cli
adc
xor
xchg
mov
pop
in
mov
fdivs
in
push
insl
movsb
in
jge
push
cwtl
jmp
mov
inc
mov
loope
dec
pop
dec
mov
nop
in
repnz
outsl
mov
mov
call
ret
daa
insl
aam
mov
pop
or
and
push
sub
dec
cmpsl
test
les
icebp
fs
rclb
fdivp
inc
lret
in
cld
mov
adc
mov
repz
cmp
rcl
dec
mov
enter
and
pop
in
mov
cli
out
fstl
add
mov
bnd
sbb
xor
mov
loope
jle
push
test
gs
test
cmp
std
mov
daa
repz
movsb
in
repnz
add
cli
daa
aas
fs
pop
push
cmpsb
sbb
shlb
cld
add
xor
mulb
pop
and
xor
sbb
add
mov
les
mov
jmp
in
mov
cmc
bswap
inc
test
mov
enter
mov
call
jl
push
mov
or
dec
jns
insl
dec
jno
xor
add
addl
data16
and
addr16
add
aad
mov
stc
adc
ss
add
cltd
or
dec
push
mov
mov
in
inc
xor
push
repz
pop
push
inc
xchg
sub
repnz
lock
fidivs
xor
out
xor
sti
clc
std
mov
shufps
jge
loope
pop
mulb
inc
add
push
mov
ret
ret
jae
arpl
push
mov
sar
mov
push
sub
jg
cld
inc
or
push
sti
pop
push
stos
sbb
or
pusha
jae
sbb
sbb
test
add
add
ret
pop
shr
outsl
adc
fldl
mov
aaa
sbb
push
pop
dec
dec
adc
push
decl
xchg
enter
sbb
mov
in
es
sbb
add
jmp
ljmp
insl
xchg
pop
pop
imul
mov
sbb
insl
push
sub
mov
aas
adc
inc
pop
sub
jmp
pop
rcr
or
sti
jo
mov
mov
lahf
xchg
push
pop
cmc
iret
add
push
data16
inc
push
pop
and
aad
push
arpl
out
ljmp
or
jns
pop
jp
rorb
push
mov
rcr
ss
outsl
lcall
lods
in
ret
call
cli
mov
subl
add
in
xchg
adc
inc
jmp
adc
cld
jle
add
dec
sti
jae
mov
loop
push
cmp
adc
les
es
flds
push
fwait
arpl
and
mov
pop
dec
mov
loope
add
mov
pop
xchg
inc
pop
mov
mov
std
inc
pop
xchg
mov
add
loop
stos
sti
mov
cmp
pop
roll
sbb
xchg
push
ret
sbb
mov
outsb
add
jbe
jnp
sarl
cs
idivl
push
mov
xor
push
add
inc
icebp
cmp
sbb
fstps
pop
rcr
ljmp
push
mov
out
and
das
sub
pop
push
insl
add
push
das
pop
push
push
sti
push
shlb
and
push
xor
fsts
push
xchg
inc
mov
dec
imul
add
or
xchg
jl
js
repz
ja
dec
jge
sbbb
leave
cld
adc
bound
push
pop
loop
jno
imul
clc
pop
mov
or
push
ss
and
cmc
push
ret
pop
cld
and
xor
std
mov
aaa
push
in
mov
xlat
outsl
bound
std
iret
push
sbb
mov
mov
or
and
or
push
mov
mov
test
clc
inc
mov
test
push
push
xor
outsb
pop
add
loop
je
adcb
jnp
push
jo
push
sub
inc
call
cmpsl
mov
adc
push
and
adc
xor
clc
dec
sbb
test
fwait
mov
adc
das
push
jae
push
xchg
ror
cmp
inc
imul
xchg
ljmp
test
cs
mov
sbb
jmp
push
pop
cltd
mov
movsl
cli
je
jne
jle
fcoms
daa
mov
sub
jl
jecxz
bound
xor
fildll
fisttps
and
movsb
mov
outsl
sbb
jmp
ljmp
or
lds
push
lahf
in
addr16
gs
cld
add
daa
adc
sbb
xchg
jg
fdivl
pop
jnp
loop
add
jo
push
push
jecxz
sub
out
sar
pop
rol
ficompl
xchg
cmp
popf
fdivr
xor
insl
push
test
inc
std
fcomip
push
pop
or
push
adc
xor
fs
add
adc
outsb
aad
bound
shrl
out
stc
cmp
add
fstpl
fsub
std
sbb
dec
aam
jnp
sbbl
and
jne
cs
jnp
mov
lea
mov
in
fwait
xor
mov
xchg
cld
or
mov
movsb
sbb
pop
mov
pcmpgtd
add
adc
jmp
jle
push
xor
insl
loop
mov
sbb
cmp
xlat
or
jns
sbbl
xchg
add
fs
lahf
inc
out
push
jecxz
pusha
cld
adc
mov
stc
hlt
lcall
mov
jo
or
or
mov
mov
stc
xor
cmp
test
cli
mov
sbbl
leave
xor
push
arpl
xchg
inc
jnp
adc
jnp
sub
inc
lock
add
jle
and
stc
insl
aaa
mov
jmp
filds
mov
out
jecxz
ficoms
dec
dec
dec
arpl
mov
add
pusha
pop
sub
rorl
inc
mov
push
lock
iret
jno
insl
imul
jno
or
or
std
and
out
or
idiv
sbb
lahf
iret
bnd
imul
jecxz
pop
add
or
popa
mov
dec
imul
cmp
lret
xor
stos
add
dec
xlat
add
xchg
lods
sti
fbld
mov
pop
dec
roll
jae
sub
push
dec
cmp
cs
jmp
adc
pop
shr
fbld
cld
cmp
outsb
jmp
addl
lods
inc
mov
addr16
xorb
test
jae
je
add
ficompl
or
jo
bound
mov
add
xchg
xor
push
stos
fdivp
jmp
leave
sub
push
cli
not
inc
mov
or
xor
js
decb
imul
dec
mov
mov
imul
rcrl
add
imul
fistpl
add
cltd
andl
stos
pusha
clc
mov
jae
pop
fisttpll
add
fsubr
cmp
shlb
shll
outsl
das
mov
or
aas
testb
or
std
rolb
jmp
out
ds
icebp
and
jnp
std
push
pop
pop
roll
pop
adc
roll
cmpl
or
imul
jmp
jge
add
and
pop
push
dec
dec
cli
int
push
cwtl
mov
adc
test
push
and
jbe
pop
sbb
jae
sti
xor
dec
adc
std
cmp
add
jle
add
push
push
in
stos
jg
sbb
push
sub
or
insb
or
jno
xchg
sbb
or
push
adc
insb
inc
inc
sbb
aad
or
lret
mov
das
lret
leave
enter
or
les
mov
mov
ret
adc
test
xchg
das
int
shlb
loop
pop
out
pop
jbe
xchg
mull
loope
jle
insl
test
jne
adc
loope
iret
out
mov
jo
mov
adc
loope
iret
repz
sahf
iret
jne
mov
in
arpl
pop
imul
sti
call
inc
jno
outsb
jb
inc
test
pop
jb
fcompl
pop
je
dec
jns
jbe
js
xchg
lret
in
jno
jae
js
jbe
addr16
mov
push
xor
pop
cs
adc
je
jbe
cs
data16
add
pop
jne
ja
lcall
arpl
scas
imul
jb
insb
lcall
shll
xor
in
outsb
lods
jo
xchg
jg
in
insb
insb
outsb
mov
js
jp
mov
js
jnp
jp
jl
lret
in
xchg
jne
ja
jl
js
pop
outsb
fstl
cli
jge
jnp
jge
mov
jb
jbe
xor
aaa
jl
jle
lcall
mov
shll
scas
int3
daa
lret
ret
dec
shll
jne
pop
in
fsts
ss
js
push
jl
xchg
jo
mov
outsb
int
jb
adc
test
imul
icebp
jne
add
cmpsb
sub
dec
arpl
sub
insb
shll
adc
jge
or
in
fisubl
jp
arpl
adc
xor
jae
add
pop
cs
dec
outsl
sbb
js
jp
jae
lret
in
jne
jns
ja
jns
jb
xchg
pop
cs
sub
das
icebp
jg
cs
btr
push
adc
xchg
fcompl
dec
std
scas
sbb
mov
xor
sbb
lahf
push
xchg
loopne
cmp
jae
dec
push
and
pop
fwait
andl
sbb
pop
and
adc
xor
add
cmp
or
inc
jo
cs
outsb
adc
xchg
xor
cs
imul
js
imul
jns
daa
inc
jo
jp
das
fldt
adc
adc
jl
push
jo
daa
add
pop
movsb
pop
push
dec
jge
dec
adc
add
sub
mov
ljmp
or
jb
pop
pop
dec
pushl
sbb
pop
add
or
push
arpl
inc
addr16
push
rcr
ljmp
addr16
inc
jno
pusha
std
stos
cli
inc
ja
dec
push
pusha
popa
insl
jg
mov
fs
bound
jb
inc
fs
inc
push
jno
pusha
inc
pop
insl
lock
push
pop
fs
jbe,pt
push
push
push
pop
insb
mov
imul
fs
push
add
pop
outsl
dec
outsb
imul
outsb
jmp
lcall
pop
pop
inc
pop
insb
pop
jno
inc
sub
aas
pushw
arpl
xchg
fdivrp
pop
pop
imul
pop
pop
inc
test
pop
sti
mov
pop
pop
imul
bound
xchg
add
popa
sbb
imul
inc
gs
pop
jo
inc
jg
cmp
hlt
incb
sti
mov
inc
popa
pop
imul
inc
fs
inc
arpl
aas
mov
arpl
dec
jb
outsb
in
jae
dec
push
gs
pusha
inc
ds
jg
outsl
mov
pop
outsl
push
ja
insb
pop
push
jb
push
cmp
jno,pt
pusha
adc
outsb
pop
pop
arpl
or
ret
mov
lahf
dec
pop
imul
sbb
inc
push
jb
popa
or
xchg
push
sub
dec
insl
push
xchg
mov
pop
jo
aas
insl
jno
out
ret
lret
pusha
sub
cmp
jae
dec
imul
arpl
addr16
inc
addr16
fcmovnu
ja
stc
inc
bound
mov
pop
insb
arpl
inc
in
out
outsl
decl
imul
jb
icebp
pop
pop
jno
insb
je
push
sti
dec
xlat
jl
mov
pop
arpl
insb
insl
push
outsl
outsl
fs
fldt
stos
std
inc
insl
insb
gs
mov
imul
jg
fisttpll
repz
dec
inc
inc
push
dec
cmp
addr16
das
sub
imul
fs
bound
dec
pusha
jne
inc
add
adc
mov
arpl
jo
pop
lret
inc
pop
dec
cmp
or
jbe
and
in
test
mov
pop
cmp
std
jo
xor
imulb
mov
inc
add
ds
push
scas
lods
icebp
jae
outsl
xchg
outsb
fwait
mov
push
pop
movsl
std
pop
test
imul
std
rorl
inc
lock
imul
scas
lock
lret
push
addr16
rcrl
ss
popa
outsb
pop
dec
arpl
inc
xchg
addr16
and
lea
ja
bound
std
push
and
jbe
fucomi
ss
inc
mov
outsl
or
clc
pop
pop
add
dec
dec
inc
dec
das
sub
movsl
repnz
pop
jmp
mov
mov
pop
outsb
mov
mov
outsl
aas
push
adc
jmp
in
sub
ds
imul
inc
rcrb
pop
outsl
mov
jno
pop
jmp
mov
ret
cltd
gs
inc
fscale
out
or
sub
mov
jb
addr16
repz
ss
jae
ja
decl
jns
std
jl
pop
sub
jmp
dec
popa
bound
pop
nop
inc
andb
pop
imul
clc
aas
fmuls
data16
sbb
arpl
aas
jmp
mov
pop
aas
inc
fstpt
cmp
xor
sub
cmp
ds
lcall
sub
and
sub
clc
mov
mov
popa
imul
inc
push
pushl
xlat
adc
outsb
pop
inc
js
pusha
mov
cmpsl
std
sahf
sti
cmp
inc
add
sti
dec
outsl
mov
pop
add
pop
push
push
mov
pop
in
outsb
push
fcomps
insl
mov
arpl
cwtl
mov
stc
pusha
ds
sbb
jb
or
popa
gs
dec
cmpsl
mov
pop
outsb
bound
data16
jge
jp
pop
inc
add
mov
jne
sub
inc
and
inc
imul
pop
insl
sub
cmp
sub
dec
daa
pop
push
pop
pop
cmp
dec
cmp
sbb
in
cmp
pushl
aaa
sub
xlat
cmp
inc
cld
das
repnz
cmp
dec
inc
inc
aas
push
push
cli
cmp
das
ds
rcl
mov
jo
pop
pop
pop
jno
cmp
lock
popa
adc
dec
fs
cmp
mov
cmp
push
cmp
pop
aad
das
insb
xlat
cld
adc
aaa
push
ds
in
dec
pop
dec
mov
insb
cmp
and
pop
cli
fildll
pusha
pop
daa
jno
insl
pop
cmp
push
cmp
jo
jno
lods
xor
outsb
lcall
mov
insl
mov
adc
pushl
cmp
cmp
aas
inc
inc
dec
cmp
push
push
cmp
inc
inc
push
sti
cmp
adc
test
push
pop
dec
lods
fcmovb
cmp
cld
cmp
mov
aas
aaa
sbb
sbb
imulb
push
aas
sub
pop
insl
fs
in
repnz
pop
push
ja
call
pop
jecxz
adc
push
negb
outsb
jae
aas
cmp
inc
lock
xor
pop
cmp
cmp
lods
icebp
ds
das
pop
add
aas
xchg
hlt
pop
sub
sbb
cmp
cmp
pusha
or
pop
iret
in
insb
data16
outsl
daa
push
cmp
pop
ja
insb
jne
jmp
pop
outsl
insl
cmp
jb
cmp
addr16
pop
mov
fcomps
sbb
push
aas
inc
stc
dec
aaa
or
inc
dec
cmp
lcall
ret
imul
enter
ja
fisubrs
add
cmp
pop
cmp
pop
pop
cwtl
lcall
mov
movsl
adc
dec
pusha
ds
arpl
insb
movsl
testb
jp
cmp
outsb
push
sub
sarl
js
sub
pusha
xor
add
callw
sub
popa
or
add
insl
arpl
outsl
inc
pop
insl
jecxz
lods
scas
mov
std
inc
shlb
add
add
hlt
fists
in
push
in
dec
jg
cmp
dec
inc
inc
dec
inc
push
out
cli
mov
scas
imul
push
xchg
stos
jmp
xor
inc
mov
mov
inc
call
sbb
pusha
cmp
xchg
xor
push
sti
call
jae
or
inc
push
cmp
push
aas
jb
jno
gs
jo
mov
xor
jp
jecxz
or
mov
or
cld
xchg
pop
shrl
scas
adc
xchg
cli
push
inc
bound
scas
adc
or
sahf
mov
daa
ss
xor
lock
sti
dec
push
dec
cmp
and
out
pusha
fistps
xor
cmp
or
xor
popa
imul
jne
pop
pusha
pop
bound
popa
xchg
dec
inc
adc
dec
xor
or
mov
xor
es
popa
aad
add
mov
sub
cli
mov
adc
roll
rdpmc
mov
out
or
popa
mov
into
xchg
jp
mov
lahf
dec
adc
scas
imul
pop
cs
xor
push
adc
pop
ss
ret
pop
shr
xchg
xor
adcb
pop
jnp
jbe
lret
insl
sarl
pushf
movsb
js
int3
jp
jmp
es
jns
aas
cmpb
and
dec
jle
add
push
loop
push
add
clc
add
add
add
or
sub
sarl
sahf
inc
sti
push
popa
cmp
jb
or
in
or
xchg
insb
bound
pop
sti
push
adc
or
pop
test
iret
std
inc
xor
mov
gs
int3
js
add
data16
in
ja
mov
in
outsl
pop
inc
cmp
jae
inc
xchg
shll
pop
lds
and
mov
icebp
shl
or
jno
pop
outsl
loope
outsb
sbb
jb
pop
or
jne
outsl
mov
sbb
bound
movb
jno
mov
push
pop
pop
sub
xchg
mov
out
mov
sub
outsl
xlat
sbb
cmpsl
push
shrl
ret
push
shrl
lds
mov
jmp
cltd
gs
cmp
inc
lods
inc
jecxz
jb
push
xchg
dec
dec
mov
mov
ja
gs
add
mov
cmp
popa
nop
jb
jbe
add
daa
pop
add
rorb
mov
sbb
pop
pop
les
push
test
pushl
daa
inc
out
mov
pop
pop
push
cltd
imul
and
pop
adc
test
movsl
dec
inc
inc
gs
sub
dec
insb
mov
sub
inc
sub
dec
pop
xor
addr16
sub
adc
dec
inc
and
cmp
bound
imul
push
dec
dec
cs
push
push
fdivrs
orl
pop
pop
lods
pop
xor
jo
mov
outsb
and
ss
jb
or
add
mov
dec
inc
and
lahf
sbb
sbb
fldenv
sbb
jo
cld
in
shll
pop
cmp
sub
pop
xor
arpl
cmp
inc
push
dec
in
loop
add
mov
mov
pop
mov
rcrb
adc
inc
inc
pop
add
xchg
roll
push
sbb
test
jl
daa
aas
fdivr
xchg
int
xor
or
mov
pop
roll
jle
pop
insl
jae
pop
push
inc
dec
dec
cld
mov
call
ret
fisubrl
pop
bound
inc
sub
gs
cmpsl
insl
jecxz
inc
addr16
jb
sbb
pop
cli
popl
cmp
and
add
xlat
lahf
dec
xor
cmpsl
mov
ja
aas
insb
sub
mov
mov
lods
aam
mov
sbb
gs
or
push
jno
sbb
jae
adc
sub
lret
dec
push
jne
fildll
in
insl
mov
and
ja
sub
push
dec
dec
push
adc
add
xor
push
mov
movsb
bound
xor
mov
xchg
xorl
adc
mov
jmp
mov
mov
inc
and
jo
aas
dec
dec
xorl
dec
mov
push
pop
mov
xchg
and
imul
and
mov
outsl
out
dec
inc
xor
inc
fcomi
out
fst
sbb
push
push
dec
lahf
or
or
ret
scas
inc
pop
fstpt
cmp
inc
push
ret
jp
daa
sub
pop
add
sub
push
out
ja
add
sbb
inc
jecxz
cli
sub
imul
jb
cmp
jns
and
js
sbb
add
sbb
inc
dec
mov
or
sub
xchg
sbb
dec
adc
sub
and
mov
jns
pop
clc
aaa
sbb
in
sub
dec
pop
sub
and
inc
mov
inc
mov
ficompl
imulb
cmp
dec
les
setg
sbb
stos
lock
or
pop
pop
dec
outsb
xor
pushl
fs
and
and
arpl
and
xor
jne
sub
sbb
mov
inc
push
push
pusha
aad
pop
sbb
pop
roll
imul
dec
in
test
ss
jb
push
mov
insb
push
sub
jmp
test
pop
shrb
jbe
daa
sub
sub
and
push
push
das
lea
and
mov
jb
ss
pop
cs
pop
push
mov
and
mov
jb
pop
sub
sub
push
mov
pop
movsl
pop
mov
imul
bound
sarl
push
out
and
notl
mov
jns
adc
pop
xchg
fstpl
iret
sub
pop
sub
rcrl
or
and
pop
loopne
dec
jae
fdivs
pop
adc
push
out
inc
cwtl
mov
mov
fists
sub
cmpsl
mov
ret
push
js
jle
xchg
pop
xchg
pop
and
jae
cmp
data16
cmp
xlat
sbb
mov
push
cltd
pop
gs
push
std
and
pop
mov
dec
xor
cmpsb
inc
loope
popa
popa
cltd
lret
xorl
push
mov
and
push
and
cmp
sbb
fadd
push
jl
aaa
mov
arpl
sub
aaa
sbb
ss
and
sub
outsl
xchg
push
dec
xor
mov
dec
outsb
aaa
test
das
xchg
and
xor
das
xor
sub
mov
fwait
das
pusha
and
pushl
xor
dec
lods
push
insl
push
cmp
imul
in
out
cmp
push
outsb
ja
jae,pn
jbe
lods
scas
sbb
cmc
push
add
inc
aaa
dec
fwait
les
ret
mov
inc
sub
dec
push
mov
pop
pop
shll
inc
lahf
pusha
pop
and
das
jl
fwait
cmp
repz
push
jp
jno
cmp
cmp
inc
mov
jecxz
mov
jmp
mov
sti
adc
inc
imul
dec
notl
pop
cmp
push
in
pusha
mov
xor
divb
je
inc
aaa
inc
xchg
imul
sarl
sbb
dec
popa
push
inc
pushl
stos
nop
cmc
inc
pop
movsl
pop
push
xchg
faddl
lahf
push
arpl
pop
sbb
mov
pop
pop
scas
lods
xlat
inc
jns
repnz
jo
fs
ds
pushf
dec
sbb
bound
sbb
dec
sub
jae
mov
pop
xchg
out
ss
bound
outsl
jb
int
fcmovu
arpl
jo,pn
pop
leave
imul
fimuls
dec
dec
cmp
xchg
jno
dec
inc
ja
sub
pop
push
int
fisttpl
out
insl
sbb
adc
push
add
arpl
xlat
sub
push
sbb
cmp
inc
std
add
mov
dec
dec
push
push
push
dec
outsl
jecxz
push
push
push
pop
push
lods
in
gs
mov
dec
jecxz
push
gs
adc
dec
jne
pop
test
stos
fcoml
ss
dec
int3
jmp
cmp
pop
adc
jle
jnp
jo
pop
dec
addr16
add
dec
inc
sub
jmp
cld
gs
cmp
push
imul
or
insl
pop
dec
std
add
mov
imul
aad
data16
mov
cmp
enter
inc
pusha
addr16
jns
popa
mov
dec
jo
fstps
jae
inc
fs
jg
sub
ja
inc
cmp
cmp
dec
pop
mov
pop
jb
jl
daa
popa
dec
fs
sub
ja
fcmovnbe
or
jecxz
inc
sub
out
cmp
mov
shlb
or
test
xor
adc
push
jg
lds
flds
add
arpl
lods
outsl
arpl
xor
leave
push
sub
xor
or
xor
push
and
pop
sub
push
movsl
in
rol
outsl
dec
in
pop
adc
dec
lretw
imul
ficomps
sub
adc
mov
cmp
mov
outsb
out
push
sub
aad
dec
pop
inc
insl
mov
pusha
stc
inc
add
daa
adc
cli
aas
jno
push
movsl
lods
mov
outsl
faddl
imul
aas
dec
sub
dec
dec
sub
arpl
pop
push
test
jno
imul
lea
dec
push
sub
scas
adc
icebp
sub
mov
sub
mov
sub
xor
xchg
popf
adc
pusha
mov
add
push
or
pop
sub
das
and
lcall
sub
mov
lahf
das
mov
sub
xor
xor
sub
cmp
inc
xor
dec
sub
mov
sub
movsl
cs
sub
sub
incl
in
xor
xor
sub
das
sbb
xor
add
aas
das
dec
sub
xor
pushl
mov
xor
sub
das
stc
sub
xor
xor
sub
xor
xor
outsl
xchg
push
xor
push
xor
xor
sub
subb
sub
push
xor
or
adc
inc
sub
xor
xor
jbe
movsl
xor
xor
sub
cmp
inc
xor
xor
and
das
xor
outsb
xor
xorb
xor
in
xor
xor
add
das
inc
xor
outsl
incl
xor
jge
mov
shlb
shll
popa
cmp
clc
add
mov
pop
cmp
xor
into
cmp
cmp
aaa
or
and
sub
cmp
push
cmp
cwtl
stos
jg
cmp
xchg
cmp
ss
cmp
ljmp
or
sbb
mov
mov
addr16
ds
cmp
cmp
ds
pop
or
out
das
or
pushl
jns
subb
das
lea
scas
sub
aas
lss
mov
sub
clc
sub
push
xor
xor
sub
xor
push
fbstp
stc
xor
xor
ss
aas
xor
pushl
pop
xor
jl
test
cwtl
aaa
test
xor
aaa
sti
aaa
adc
pop
ss
ja
test
idiv
ret
xor
ss
jmp
cmp
xor
cmp
pushl
cmp
cmp
xor
cmp
cmp
xchg
cmp
in
call
cmp
xor
cmp
ss
or
xor
push
cmp
cmp
xor
insb
icebp
and
pop
cmpb
ret
and
aaa
inc
cmp
movsl
jecxz
pop
sarb
jp,pt
mov
cmp
aaa
push
sub
mov
cwtl
pop
addl
sub
sub
das
fldcw
hlt
sub
xor
sub
imul
idiv
incl
cs
mov
shlb
sub
repz
or
adc
and
aaa
dec
inc
xor
subb
sub
xor
das
fldt
xor
xor
sub
xor
or
in
sub
cmp
inc
sub
pop
xor
jb
jg
test
fwait
xor
xor
les
inc
push
cli
decl
mov
xor
cs
xor
test
outsl
mov
xor
xor
sub
inc
xor
pushl
mov
xchg
xor
shll
in
xor
xor
and
xor
fists
cltd
dec
xor
loopne
in
lock
jns
xorl
jg
pushl
shll
fnstcw
outsl
cmp
hlt
cmp
xor
cmp
xor
lcall
xor
inc
cmp
cmp
xor
lods
cmp
cmp
xor
jmp
xor
cld
cmp
cmp
cmp
aas
cmp
je
nop
cmp
lds
lret
cmp
pop
outsb
icebp
jmp
cmp
cmp
and
cmp
cmp
dec
sar
fnstsw
in
lock
aaa
stc
cmp
aas
or
sbb
fnstsw
and
addr16
movsb
das
cmpsb
sub
pushl
das
push
sub
push
xchg
xor
sub
xor
xor
sub
pushl
cli
sti
das
push
sub
xchg
xor
das
pusha
sub
xor
das
mov
aaa
sub
xor
sub
das
sbb
dec
xor
hlt
inc
xor
mov
mov
sub
xor
cs
xor
das
xor
xchg
dec
xor
xor
xor
shlb
fidivs
cli
sub
add
push
das
shll
xor
das
xor
xor
loope
clc
mov
fdivs
loopne
xor
gs
fnsave
fistpll
dec
xor
cmp
or
mov
mov
xor
xchg
cmp
cmp
xor
fnstcw
add
jmp
icebp
aaa
idivl
cmp
adc
sbb
fdivrs
cmp
ds
out
call
aaa
cmp
ds
ds
aaa
lea
movsl
dec
rcl
dec
fildl
sub
call
sbb
mov
cmp
cmp
jns
xor
cmp
cmp
xor
cmp
movsl
jle
pop
xor
xor
in
data16
cmp
incl
sbb
cmp
cmp
pop
cmp
jne
xchg
testb
in
xor
cmp
cmp
xor
cmp
fdivrl
in
cmp
aad
icebp
push
cmp
stos
cmp
add
dec
lcall
xor
cmp
cmp
ss
inc
cmp
outsl
xchg
push
cmp
jb
cmp
cmp
lcall
mov
cmp
cli
cmp
or
cmp
dec
cmp
cmp
test
pushl
xchg
nop
cmp
aaa
mov
mov
cmp
fstpt
loop
out
cmp
mov
sub
sub
das
sbb
test
subl
ret
das
int3
add
cli
lcall
sub
inc
sub
pop
xor
jl
lea
xchg
xor
sub
dec
das
pop
sub
lods
std
pushl
xchg
pushf
sub
xor
xor
icebp
fwait
in
jg
sub
nop
sub
add
add
or
add
jbe
jecxz
mov
jae
lcall
mov
dec
inc
popa
insl
gs
add
pop
mov
dec
push
dec
dec
pop
push
outsl
data16
popa
jb
pop
dec
imul
push
outsl
in
jg
imul
push
outsl
push
outsl
aaa
sbb
ja
out
popa
arpl
cmp
pop
std
mov
sub
fs
je
jae
and
je
and
in
outsl
dec
jns
je
jbe
adc
outsb
imul
mulb
jae
jae
sub
popa
bound
and
adc
jo
pop
fsubrp
jge
andb
les
jns
or
xor
jg
jbe
pop
jns
mov
sti
adc
push
jb
jns
add
xor
mov
sub
push
gs
add
fmull
arpl
outsb
cmp
ja
outsb
imul
adc
push
jae
or
pop
mov
sbb
adc
iret
sbb
jnp
gs
jg
bound
jo
inc
cmp
divl
popa
push
ds
pop
inc
js
adc
push
mov
fildll
adc
dec
jmp
fwait
insl
ja
inc
fs
imul
push
ja
add
inc
xor
or
push
sbb
inc
inc
xchg
jne
pop
mov
lods
inc
mov
fwait
mov
add
cmovno
jmp
mov
jb
or
inc
fnstcw
insl
popa
dec
pcmpeqw
outsb
outsb
cmpsl
sbb
dec
jae
xor
jae
jnp
or
lds
movd
add
jae
xchg
mov
adc
insl
jbe
inc
jmp
out
mov
push
and
fs
daa
push
sti
jo
mov
imul
insb
sti
imul
sahf
rcrb
dec
dec
insl
imul
outsl
add
mov
lcall
add
add
imul
pop
push
aaa
jo
xor
push
push
fs
mov
cltd
add
sbb
icebp
pop
add
xor
xor
xor
adc
xor
mov
adc
std
outsb
add
add
ja
outsl
add
fidivrs
call
add
jb
mov
pop
lcall
pusha
inc
repz
or
fwait
sbb
outsb
adc
add
cmp
imul
cwtl
lock
aaa
mov
pop
clc
cmp
mov
orl
adc
repz
rolb
jg
push
in
mov
mov
lahf
cmpsb
scas
inc
mov
xchg
dec
shll
push
lcall
imul
sbb
andl
jnp
imul
inc
mov
pusha
add
addl
pop
add
pop
add
jne
mov
add
push
xor
push
adcb
adc
push
in
xchg
lea
sbb
inc
pop
mov
push
add
incl
rolb
nop
add
lret
jg
adc
das
sub
cltd
shlb
jns
add
enter
push
sbb
adc
xchg
add
add
add
imul
jg
sub
jg
add
mov
add
add
push
add
jb
jbe
sub
ret
jmp
add
add
out
and
inc
fists
popa
je
inc
imul
outsb
addr16
or
gs
jge
mov
inc
insb
jne
push
add
testl
gs
fdivrs
add
outsl
jae
dec
popa
outsb
fs
inc
je
bound
jae
push
sti
jb
jbe
inc
js
and
jo
dec
fstl
inc
inc
or
jb
in
lret
imulb
outsl
arpl
outsb
or
mov
xchg
cmp
outsl
dec
out
pop
rclb
jne
dec
outsb
outsw
adc
ss
jae
cpuid
fcmovu
mov
pushf
insb
adc
adc
inc
mov
xchg
push
jns
and
gs
fdivs
push
xchg
jae
outsl
outsb
mov
sbb
fs
dec
outsl
popa
fs
out
mov
or
jns
fldl
insb
fnstcw
mov
in
push
mov
outsl
insb
and
xor
and
fadds
sub
flds
push
xor
inc
decl
fisubs
call
push
jmp
adc
pop
adc
pop
or
pop
in
fstpt
sbb
movsl
adc
adc
mov
mov
decl
insl
fnstenv
add
mov
jp
fstpt
add
or
and
incl
sbb
ljmp
or
insl
and
inc
sub
push
push
mov
out
dec
out
ud0
out
insl
fildl
pop
cmc
add
ds
mov
fildl
jge
or
lcall
sbb
xchg
lock
push
or
icebp
mov
lret
mov
testl
push
test
lret
mov
mov
insb
fistl
pop
push
push
dec
mov
mov
mov
adc
in
insl
fisttpl
inc
bound
arpl
call
cli
or
mov
cmp
movsb
mov
inc
das
dec
or
scas
repnz
pop
mov
in
data16
fnsave
mov
jo
pop
push
pop
sub
aam
push
ud2
pop
je
clc
pand
insw
lahf
or
pusha
or
fs
xor
sbbb
adc
stos
jb
out
mov
addr16
arpl
outsb
or
jo
je
lcall
push
xchg
or
and
repnz
ja
or
jbe
fidivrs
or
jo
inc
mov
js
inc
jb
dec
aam
jo
lods
pop
fisubrs
outsb
je
je
adc
push
jge
push
jae
sbb
cmp
dec
xor
or
rolb
push
imul
jo
fs
or
jne
xchg
push
js
mov
out
sbb
inc
ljmp
cmp
or
jecxz
addr16
xor
fdivrl
in
add
ja
lods
imul
push
mov
jg
jg
add
sbb
pop
ja
loopne
sidtl
add
addr16
out
in
add
adc
or
inc
add
fistl
add
xor
sbb
testl
pop
mov
inc
fs
nop
mov
add
insb
mov
or
add
and
in
test
fs
je
mov
add
inc
cs
add
es
ret
mov
testb
rorb
or
negb
pop
adc
negb
add
xchg
add
add
add
or
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
